push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
out
inc
lret
cmp
jecxz
sbb
cs
shl
inc
bound
mov
cmp
xor
in
cmp
ds
jecxz
ds
add
and
enter
jbe
outsb
adc
lods
imul
or
sti
push
imul
mov
inc
repz
jp
loop
test
cmp
xchg
lock
lods
dec
imulb
call
xor
fs
inc
subb
mov
mov
jno
jbe
adc
ret
loop
shrd
fistpll
add
movsl
mov
sti
notb
cmp
ret
aam
or
mov
cmp
push
push
ret
popa
jmp
adc
xor
xchg
mov
hlt
mov
out
xor
pop
mov
aad
mov
jnp
push
jl
xchg
mov
xorb
scas
jb
sbb
test
inc
icebp
xchg
es
adcb
cmpsl
ds
dec
movsl
addr16
dec
stc
pop
ret
ja
pop
dec
add
sbb
jbe
fistpll
popf
sub
inc
push
or
cmc
inc
push
fcmovne
ficoms
push
fwait
shll
and
shlb
arpl
iret
mov
adc
add
mov
pop
xchg
mov
and
mov
and
and
jle
jg
pop
movsl
jb
out
ret
mov
mov
cmpsl
add
add
daa
adc
fsubp
inc
mov
push
lret
imul
dec
icebp
rorl
jle
add
pop
mov
jge
daa
inc
dec
sub
ljmp
mov
rcl
lds
or
dec
ja
shlb
stos
xchg
push
sbb
scas
cs
test
jnp
cmp
xchg
mov
scas
add
sbb
popa
jg
cmpsb
test
cltd
ret
mov
inc
mov
cmpsl
cmp
mulb
xchg
jae
cmp
mov
sbb
sbbl
pop
loop
lcall
or
dec
push
jmp
es
loope
lea
in
xchg
adc
jmp
pusha
sub
mov
test
cld
aas
dec
inc
xchg
into
mov
xor
push
mov
movsb
mov
imul
ret
xor
add
add
adc
push
adc
push
jg
mov
pusha
lcall
pop
fbld
mov
aad
loop
sub
mov
pop
rolb
dec
push
pusha
ficomps
jo
or
mov
xchg
fiaddl
sub
iret
xorb
lock
pop
adc
cs
xchg
rclb
push
fwait
loopne
sarl
mov
out
inc
dec
popa
mov
adc
push
xchg
test
add
in
jg
lods
test
sarl
daa
sub
or
lret
sahf
pop
mov
pop
mov
jmp
aam
jnp
push
stc
mov
adc
lahf
sub
sbb
cmpsl
add
dec
push
mov
lret
in
daa
fnstenv
loop
add
mov
pop
rcll
int3
dec
or
arpl
mov
mov
mov
sub
add
ret
and
jmp
lar
jge
and
inc
shlb
stc
insl
cmpsl
jle
jmp
push
jmp
mov
mov
adc
add
imul
cmc
and
mov
outsb
idivb
and
inc
scas
idivl
pop
jbe
mov
mov
cmp
pushf
out
pop
rolb
incl
jnp
mov
stos
sub
push
dec
add
mov
aad
shll
scas
mov
arpl
jecxz
js
loop
fs
push
orl
xlat
mov
xlat
adc
js
fs
mov
cltd
pop
std
jbe
decb
jge
adc
add
cmp
movsl
mov
pop
jnp
push
inc
push
movsb
push
sahf
testb
movsb
ret
sarl
and
loopne
in
mov
add
ja
aas
and
pop
push
subb
xchg
add
pop
push
mov
jmp
mov
fisubrl
push
imul
add
jno
cwtl
jmp
cmpsl
and
aam
pushf
imul
test
aam
jnp
mov
test
cmpsb
pop
pop
cmp
into
mov
sub
addr16
fs
hlt
push
shll
adc
ljmp
test
xor
add
js
iret
cs
iret
insl
mov
push
xor
mov
orl
lods
ss
decl
hlt
loop
es
adc
in
popa
dec
lret
mov
mov
dec
fisubrs
adc
sub
cltd
inc
imul
int
sbb
fisubl
dec
nop
pop
dec
fisubs
in
sbb
negb
push
lcall
add
mov
rorl
dec
mov
out
loope
mov
addr16
sbb
lods
rorb
shrb
jg
sbb
xor
cmpsl
sbb
fidivl
jl
ja
push
into
jb
clc
pop
ror
rcl
adc
mov
sarb
das
pop
roll
or
negl
add
xlat
test
sbb
lods
mov
fdivrl
scas
adc
push
int3
jo
in
daa
jecxz
cmp
or
add
insb
add
dec
pop
out
pop
mov
push
mov
xlat
xor
jle
cwtl
mov
mov
in
mov
jo
cmp
fnstenv
scas
gs
fwait
mov
mov
pop
icebp
cmp
push
test
mov
pop
leave
mov
jg
mov
push
adcl
xchg
imul
add
in
pop
lret
jge
lock
mov
xor
or
xchg
addb
mov
mov
push
push
hlt
loopne
inc
mov
sub
or
and
lock
rorl
sbb
mov
inc
push
lahf
rcrb
mov
jnp
test
inc
push
fst
xchg
adc
dec
dec
add
movsb
loope
mov
cmpsl
scas
mov
fadds
mov
in
jns
mov
mov
mov
sbb
daa
cmpb
sbbb
sbb
gs
cli
sbb
in
stc
mov
xor
cmp
and
fildll
mov
or
fisttps
push
cmc
arpl
ds
inc
xchg
mov
enter
push
in
xchg
fcmovnu
frstor
add
rcrl
or
sbb
inc
or
xor
loope
lock
arpl
lcall
sub
pop
int
jo
stos
dec
lock
jb
cmpsl
cli
mov
push
inc
pop
pop
imul
mov
sub
nop
xchg
idivb
arpl
mov
xchg
inc
inc
adc
in
aas
adc
rorb
adc
cmp
mov
push
inc
mov
sbb
push
in
mov
das
fwait
inc
sbb
aad
ret
mov
pusha
lcall
enter
pop
adc
arpl
sbb
repz
ljmp
inc
push
mov
flds
test
repz
in
ljmp
mov
pop
mov
cwtl
mov
sub
loope
cmpsl
aam
push
add
adc
xchg
inc
inc
and
sbb
jp
cmpsb
jns
adc
push
cmp
inc
loopne
sbb
cmp
out
loop
cmp
arpl
adc
cli
cmp
rorb
dec
and
push
inc
inc
jge
cmp
cltd
jns
push
jle
xor
push
aad
cmp
rcll
add
add
nop
dec
inc
mov
push
mov
sub
xor
xor
xorb
shlb
loope
sbb
ds
and
lock
vpmulhw
pop
imul
and
jno
add
loopne
mov
sbb
sbb
cltd
adc
fld
jae
mov
cld
js
lds
sahf
pusha
addl
mov
rcll
jns
mov
imul
aad
push
xchg
lods
xchg
das
mov
jns
adc
push
out
and
leave
jp
xchg
stos
outsl
or
push
jmp
inc
inc
dec
adc
andl
adcb
jae
test
and
or
jb
mov
jle
aaa
imul
xor
cmp
cmc
arpl
idiv
sahf
sbb
out
xchg
mov
add
and
jno
xor
lret
xchg
jbe
das
inc
push
jecxz
insl
push
ja
pop
mov
jbe
nop
leave
movsl
xlat
push
stc
mov
and
andl
mov
jae
push
gs
movsb
jns
mov
ja
shrl
dec
push
inc
or
movsl
repnz
ret
mov
fisubrl
and
scas
mov
stos
add
insl
cmp
or
mov
scas
mov
ret
sub
in
outsb
xchg
subb
mov
xchg
fildll
pop
mov
dec
pop
cmp
push
xlat
shrl
and
int
or
dec
fs
cmp
adcb
xor
and
jae
pop
mov
out
sub
fldz
add
inc
or
inc
leave
les
inc
jmp
mov
add
jo
add
xchg
les
push
fildll
outsb
leave
mov
fs
popa
sbb
cmp
jo
mov
inc
out
xchg
jne
mov
adc
xchg
jecxz
fcompl
jg
iretw
cmpl
lret
ret
ja
mov
xchg
lret
jecxz
inc
imul
or
sbb
mov
cmp
push
ds
push
or
loope
lods
mov
popf
and
pop
pusha
pushf
repz
inc
xor
add
add
fdivs
sbb
push
cli
xchg
xor
gs
mov
mov
cmpsb
xchg
inc
adc
jae
pop
add
mov
xchg
fcomi
mov
cwtl
and
outsb
test
pop
cld
cmpsb
into
jne
icebp
push
sub
cmp
bound
or
xchg
mov
test
jns
cmp
mov
xlat
sahf
lods
int3
fisubl
add
jae
fldenv
sub
dec
mov
sub
xchg
or
sbb
pop
xorb
cli
push
xor
cmc
outsl
push
jmp
popf
dec
xchg
mov
js
push
notb
sub
aad
lret
or
imul
adc
aaa
sti
mov
mov
fadd
dec
cmp
movsb
or
cmp
ljmp
adc
push
pop
fcompl
pop
mov
push
in
pusha
sbb
int3
inc
mov
xchg
jl
mov
mov
cli
adc
jp
and
lods
dec
mov
jmp
jo
aas
pop
or
xchg
ja
mov
cmpsl
xor
jno
xor
adc
call
sub
jecxz
xchg
mov
call
hlt
xchg
xchg
add
sub
mov
ret
dec
gs
push
add
ficomps
clc
mov
mov
add
add
test
addr16
push
pop
jle
dec
and
xor
mov
lcall
js
xlat
jge
int
sbb
js
jno
jns
pop
inc
mov
or
sub
push
iret
sub
jmp
sbbl
inc
outsb
adc
cli
dec
jbe
jno
clc
mov
cltd
mov
int3
ljmp
imul
xchg
cli
enter
in
inc
rolb
cmp
sbb
out
pop
insb
add
mov
cmpl
mov
out
mov
mov
dec
int3
add
xchg
and
lods
push
jb
mov
cmp
sbb
push
or
mov
sbb
dec
sub
or
je
andb
stos
popa
loope
scas
push
mov
sub
bound
sub
jl
leave
jae
lcall
out
mov
jno
and
add
orb
add
pop
dec
orl
adc
fdivrl
aam
sbb
cmp
into
dec
push
aas
push
insl
cmc
int
fnstenv
sbb
jae
jbe
test
push
or
repnz
aam
mov
add
rorl
jmp
cmpsl
lods
cs
xchg
and
rorb
mov
lds
inc
push
lea
loopne
popf
mov
inc
and
add
mov
sarl
add
pop
jmp
sbb
ds
xor
push
ret
mov
mov
dec
ret
xor
insl
mov
jb
hlt
push
cmc
sub
sbb
subb
dec
or
dec
pop
imul
add
aam
scas
shll
pop
push
repnz
cmp
out
lcall
cwtl
test
es
mov
shlb
cld
add
mov
in
mov
fstl
push
xor
push
dec
ficomps
loope
jo
push
adc
pop
cmp
mov
adc
cmpb
inc
mov
hlt
icebp
jmp
cli
lock
or
bound
sub
daa
and
xchg
or
push
sub
pop
xor
cmpsb
or
sbb
insl
mov
test
jmp
clc
add
add
adcl
outsl
dec
jne
pop
repnz
in
mov
inc
inc
ret
or
rcrb
xor
push
adc
pop
pop
testl
xor
dec
lahf
add
mov
or
pop
fstl
sub
jl
ret
push
jp
and
aas
sub
jl
pusha
mov
cltd
int3
iret
pushl
loope
repz
aam
cmpsb
or
in
inc
movsb
push
and
add
add
cmc
pop
mov
sub
mov
mov
fisttpll
push
sar
imul
cmp
dec
jns
xchg
adc
scas
xchg
xchg
push
sbb
jbe
pop
mov
and
je
cmp
sub
loop
jo
idiv
sub
push
push
mov
rcl
dec
mov
fidivs
shll
out
cmpsl
and
sub
and
mov
mov
insb
insb
xchg
push
push
lds
aam
jno
imul
inc
mov
outsb
jle
cmpsl
cmp
cmp
mov
sbb
mov
mov
xor
or
shl
dec
mov
rolb
hlt
xchg
imul
mov
bswap
repz
jle
cmpl
enter
popa
push
mov
fsts
xchg
mov
pusha
and
movsb
add
mov
pop
jge
sbb
or
jbe
xchg
fldcw
push
insb
aam
shr
mov
subb
inc
push
aam
sahf
cwtl
ret
inc
xlat
mov
or
rol
fwait
addl
mov
push
xchg
aam
test
mov
fmull
into
and
clc
and
inc
push
mov
cltd
movd
aad
scas
add
shr
pop
inc
sbb
adc
add
out
push
loop
inc
pop
inc
sub
and
out
adc
nop
adc
dec
lcall
adc
pop
add
popa
int
inc
xchg
filds
sbb
in
jae
dec
xchg
lcall
outsb
aam
mov
dec
xchg
mov
scas
stos
mov
test
cs
ja
fneni(8087
push
fcmovnu
jnp
fwait
jnp
jo
add
or
mov
enter
jne
and
aaa
out
mov
repz
loope
cmpsl
fidivs
inc
mov
pushf
or
repnz
jecxz
int3
les
push
ret
pop
mov
dec
inc
fcomp
fistpll
sbb
cltd
pop
shl
cmp
jb
pop
pop
jb
cli
inc
mov
cmpsl
xor
pop
or
add
jp
aam
push
in
gs
out
aam
aaa
pushf
fdivrl
stc
or
push
imul
add
or
pushf
jno
rcrb
fstl
repz
mov
sbb
repz
mov
pop
enter
inc
xor
testb
cmp
jno
xchg
and
cmp
daa
sbb
adc
add
pop
dec
adcb
cmpsl
shrb
xor
fdivl
outsb
and
jns
int3
in
adc
sub
push
sub
mov
stos
je
mov
xchg
js
ret
aaa
and
push
add
shll
sub
out
inc
nop
pop
cmp
xchg
jae
test
inc
xchg
pusha
or
stc
adc
mov
mov
arpl
mov
push
pushf
test
fmul
add
xchg
add
mov
add
mov
mov
dec
jne
sub
push
mov
mov
das
fisttps
mov
add
in
mov
xor
sarb
test
mov
push
in
mov
sub
dec
gs
or
aaa
add
mov
jg
xchg
adc
mov
ss
jae
push
sarl
out
inc
fsubs
jne
fildll
ss
and
in
call
scas
and
push
in
sbb
push
cltd
fsubs
add
roll
mov
sbb
or
test
mov
xor
test
enter
sbb
cmp
pop
or
pop
jl
loop
xchg
cmp
test
jmp
ljmp
lahf
repz
addr16
test
call
dec
sub
icebp
sub
loopne
mov
add
dec
fisubrl
ret
sub
cs
dec
xchg
int3
add
scas
cmp
jmp
sbb
mov
cmpsb
add
add
js
aas
xor
scas
les
insl
movsb
jo
cld
call
jecxz
mov
mov
popa
inc
rcrl
xchg
mov
jb
inc
mov
arpl
rolb
sbb
or
add
mov
lods
xchg
or
pop
lcall
adc
fdivrp
test
and
in
rcll
icebp
mov
cmp
cmp
pop
js
mov
fisttps
lcall
add
add
hlt
jbe
adc
cmp
sar
mov
xor
mov
mov
cltd
inc
in
cli
ljmp
sti
pop
cmpsb
xchg
lret
clc
jne
mov
cmc
lock
into
and
dec
add
insb
or
hlt
into
mov
popa
add
mov
push
inc
mov
mov
fs
lret
jmp
imul
add
mov
cmp
sub
les
repz
mov
in
sbb
cld
sbb
push
lods
cmp
out
sbb
movsb
call
add
ret
dec
jno
sub
ret
les
and
enter
outsb
push
out
xchg
pop
or
daa
add
pop
push
add
lock
xchg
mov
dec
fidivl
aam
notb
xor
push
jecxz
jg
sub
rclb
jns
fwait
into
lahf
add
xor
cmp
nop
mov
sarl
sbb
jecxz
add
aam
lods
rorl
sahf
mov
out
bound
push
pop
out
ja
sub
rol
or
mov
add
pop
dec
insb
rcll
popf
loopne
aas
pop
imul
xchg
pop
arpl
mov
and
sub
pop
push
iret
push
jae
xchg
or
orl
out
lahf
add
add
push
mov
faddl
fsts
scas
testl
dec
xor
testl
int3
sub
mov
mov
lret
mov
xchg
and
cld
jp
pop
aas
add
xchg
scas
push
pusha
leave
push
fs
push
daa
lret
repnz
dec
and
int
xlat
jns
out
push
cld
inc
pop
addr16
or
xlat
mov
lahf
cmp
hlt
add
add
jb
leave
mov
ret
jp
and
push
sub
mov
into
cmp
adc
xchg
into
dec
test
push
test
add
and
and
movsl
andl
call
inc
sub
inc
dec
sbb
jns
call
lahf
mov
rclb
imul
push
and
add
mov
loop
or
add
inc
pop
movsb
es
xor
jl
testl
xlat
and
gs
add
stc
dec
mov
pop
xor
mov
sub
clc
mov
xchg
jg
push
sub
xor
xor
sahf
xor
out
fs
out
xor
movsl
xor
push
imul
mov
leave
jb
adc
pusha
repnz
or
ret
pusha
pusha
loop
test
dec
xor
outsb
icebp
ss
add
mov
mov
push
shrl
mov
sbbl
test
jge
out
dec
push
fiaddl
inc
loopne
xchg
or
or
out
outsl
and
push
cltd
decl
jbe
cmp
cmp
and
ret
push
sub
mov
jmp
repnz
and
push
loop
std
add
add
and
loopne
push
movsb
imul
pop
or
test
jp
dec
and
mov
cmp
dec
jl
cmc
cmc
jns
fmul
add
jne
add
add
add
push
ret
push
jnp
xchg
in
out
je
pop
fstl
xchg
mov
xchg
pop
arpl
cwtl
mov
and
lea
lock
ret
pusha
push
test
cmc
jmp
mov
inc
cmp
ja
ljmp
jae
es
in
imul
js
pop
stc
in
jge
sub
cmp
mov
add
add
cld
in
in
fcmovnb
lods
in
outsl
in
fdivrs
scas
and
jecxz
and
inc
and
dec
js
clc
sarb
clc
aam
jb
iret
roll
sbb
jle
inc
dec
push
sbb
dec
push
jo
sti
iret
adc
push
jb
push
shrb
or
mov
and
insb
pop
nop
or
add
add
ss
or
jns
mov
les
fwait
mov
sub
pop
or
xchg
fmul
jp
lcall
pop
push
sbb
or
xlat
lret
arpl
inc
mov
cmp
dec
iret
lea
inc
or
rcrl
adc
mov
add
pop
jae
xor
push
and
imul
int3
push
or
sahf
cmpsl
or
dec
cmp
xchg
enter
xchg
cmp
mov
or
inc
hlt
bound
sub
rcl
or
lcall
add
or
push
iret
loop
xchg
ret
shlb
imul
pop
cmp
xor
mov
decb
mov
cli
mov
aad
add
add
xor
cltd
xor
mov
pop
push
push
lret
fxch
bound
jmp
mov
les
int
cwtl
adc
and
jecxz
inc
cmp
xor
xchg
adc
mov
stc
adc
mov
mov
cltd
xchg
mov
adc
xchg
mov
call
addr16
cmp
sub
sub
test
scas
lods
test
add
adc
cmpsl
pop
test
loopne
cmp
add
mov
movsb
lcall
fwait
or
lret
dec
inc
sub
mov
shll
sub
xchg
xchg
pushf
and
mov
add
xor
loope
mov
xchg
cwtl
mov
icebp
stos
les
repz
popa
ret
ror
and
fwait
aas
aaa
rorl
add
scas
mov
and
pop
pop
sbb
outsl
js
mov
mov
push
push
cmp
inc
jl
jb
jns
pushf
cmp
sub
mov
sbb
pop
lahf
repz
pusha
dec
jo
push
mov
lret
jmp
and
jo
and
ljmp
fucomi
fisubrs
outsl
and
xor
insb
or
jmp
lcall
xor
rolb
add
add
fwait
leave
dec
cli
jnp
fcoml
pop
cmpsl
push
mov
xor
jg
or
sub
xor
add
xchg
sbb
add
xchg
iret
xchg
sub
test
mov
cmp
adc
pop
xor
incb
nop
std
dec
nop
xor
ret
ds
ret
jl
mov
cmp
lds
stos
in
inc
dec
test
fwait
roll
add
add
jecxz
xor
dec
lret
arpl
rcrl
xor
test
les
test
lds
jno
cmp
sub
outsb
sbb
and
pop
in
js
out
add
cmpsl
daa
movsb
mov
daa
lahf
outsb
push
jmp
lret
or
outsl
pop
and
mov
dec
das
fwait
dec
ret
loope
mov
lret
in
add
mov
mov
pop
fiaddl
add
add
xchg
push
imul
mov
rclb
outsl
mov
or
je
mov
or
ja
sbb
cltd
hlt
xlat
out
mov
std
or
cmpsb
push
fnstcw
add
test
inc
fmuls
stos
mov
mov
dec
push
mov
ret
cltd
add
add
cltd
add
cmp
imul
jle
std
jo
popf
sub
sbb
pop
cwtl
clc
sbb
test
push
test
cmpsl
test
loope
jg
lock
xchg
inc
xchg
mov
cmpsb
dec
adc
dec
pop
out
rcrb
xchg
loop
add
or
xchg
fldt
outsb
xor
inc
jnp
dec
jnp
sub
in
adc
or
jl
push
jmpw
push
sub
ja
js
jge
push
mov
dec
jmp
fsubrl
adc
insb
cmc
push
arpl
gs
sub
mov
ja
inc
pop
add
dec
dec
sbb
jbe,pt
push
fxch
loopne
mov
sbb
adc
loopne
out
ja
and
jecxz
xor
adc
jb
aam
insl
ret
jbe
les
cli
negb
in
dec
movsb
fsubrl
aad
add
fisttpl
mov
xor
mov
out
into
pusha
sub
cmp
cmpsl
outsl
adc
cmpl
iret
idivl
sub
dec
mov
aad
sarb
imul
rcrl
adc
div
xchg
test
jp
ret
fisubrs
add
xchg
daa
imul
sbb
leave
xchg
dec
repz
and
fisubs
int3
add
add
xor
adc
pusha
pushf
dec
dec
cmp
lcall
mov
into
jne
add
push
sbb
aas
pop
shlb
mov
mov
cmpsb
push
xchg
jbe
movsl
das
movsb
adc
push
jl
fs
scas
jae
xor
les
pop
cmp
push
mov
adc
call
and
jecxz
jp
cwtl
inc
in
in
fsubl
xchg
int
mov
repnz
sub
or
or
xchg
sbb
jb
loop
into
mov
and
or
push
lret
lahf
pop
xchg
sbb
sub
rol
mov
or
cwtl
cld
sbb
cmp
lahf
jo
pop
je
adc
cmpsb
out
fwait
xor
pop
lret
dec
ljmp
addr16
insb
jnp
icebp
sub
inc
pop
ds
les
xchg
loop
jnp
mov
repnz
sbb
in
adc
leave
jb
aas
pop
pop
add
add
lret
int
adc
adc
push
ret
mov
pop
xor
popf
fcompl
sub
das
mov
clc
pop
ds
jnp
daa
arpl
sbb
rcll
pop
cwtl
xchg
mov
loopne
push
push
aad
das
add
das
jno
gs
sub
add
or
outsb
mov
loopne
sti
lahf
sbb
inc
push
sbb
int
movsb
pop
dec
push
mov
sarl
mov
shlb
mov
add
lock
xchg
fidivl
loope
or
addr16
mov
stos
lds
mov
push
xor
or
std
orps
adc
or
addr16
test
aad
pop
shrl
out
and
cld
fcmovnbe
sub
lahf
pop
cmpps
or
and
xchg
xchg
shrb
xchg
stos
das
imul
or
jno
xor
repz
pop
sbb
mov
xlat
stos
dec
mov
add
inc
jbe
jg
aaa
faddp
aad
xor
mov
mov
xchg
xchg
daa
adc
inc
xchg
je
inc
mov
fcmovbe
cmp
in
les
inc
movsl
jmp
cmp
roll
sbb
sbb
sub
xchg
push
stc
les
add
mov
jge
ret
out
push
mov
cmp
cltd
sbb
