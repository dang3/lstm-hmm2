push
mov
sub
add
push
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
test
mov
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
lea
test
cmpb
jne
push
lea
push
push
mov
call
add
cmp
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
push
lea
push
mov
mov
mov
mov
rep
mov
push
mov
push
push
push
mov
call
test
mov
je
push
call
movzbl
lea
cmpb
mov
jne
mov
mov
movb
call
push
push
push
push
mov
call
test
mov
je
mov
mov
mov
add
add
sub
mov
lods
xor
stos
sub
sub
add
test
sub
add
rol
push
add
pop
jne
push
push
pushl
mov
call
mov
mov
push
push
pushl
call
mov
mov
mov
movzbl
imul
xor
lea
test
push
add
pop
jne
cmp
jne
push
push
push
push
mov
call
test
mov
je
mov
mov
mov
sub
add
mov
lods
xor
stos
add
sub
add
sub
add
rol
lea
test
jne
pushl
mov
push
pushl
call
mov
mov
call
push
push
pushl
mov
call
xor
add
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
xor
mov
mov
scas
je
inc
jmp
mov
mov
pop
leave
ret
push
mov
add
sub
mov
andl
mov
mov
push
xor
push
and
add
push
lea
lea
pop
mov
mov
call
mov
mov
mov
mov
add
sub
mov
lods
xor
stos
sub
sub
add
sub
add
rol
dec
jne
mov
sub
add
mov
imul
add
mov
neg
mov
add
imul
add
mov
add
push
push
add
sub
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
call
mov
add
mov
add
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
add
mov
cmp
movzwl
push
lea
mov
jbe
lea
mov
xor
test
je
mov
and
neg
sbb
and
add
sub
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
lea
push
push
push
push
mov
call
test
je
movzwl
incl
add
sub
cmp
jb
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
lea
test
cmp
jb
pop
pop
xor
add
ret
push
mov
sub
sub
push
push
xor
cmp
push
je
mov
jmp
push
mov
call
mov
push
mov
call
push
mov
call
mov
mov
call
add
cmp
je
mov
stos
cmp
je
cmpl
jne
lea
call
push
push
pushl
mov
push
call
mov
test
jne
xor
jmp
mov
mov
mov
call
pushl
pushl
pushl
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
pushl
push
call
mov
test
mov
je
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
pushl
push
call
mov
mov
sub
xor
cmp
mov
je
mov
cmp
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
add
add
mov
mov
mov
add
addl
subl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
mov
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
movzwl
xor
test
mov
jbe
mov
mov
mov
addl
add
addl
push
pop
rep
mov
add
add
add
mov
movzwl
lea
test
cmp
jb
push
push
pushl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
add
call
pop
pop
pop
leave
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
add
push
add
pop
jne
pop
mov
ret
xor
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
subl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
jmp
mov
movzwl
imul
add
mov
push
add
pop
cmp
jne
testl
je
push
push
mov
mov
mov
add
cmp
add
xor
xor
mov
add
add
and
mov
sub
sub
pop
pop
mov
pop
leave
ret
push
mov
push
push
xor
mov
push
mov
call
push
call
push
mov
call
test
pop
jne
push
push
mov
call
test
pop
pop
jne
cmp
jne
cmpl
jae
movzwl
test
jne
push
push
pushl
pushl
call
jmp
push
push
push
push
call
ret
jmp
push
mov
call
pop
mov
call
xor
pop
pop
pop
ret
push
mov
sub
sub
push
push
xor
mov
push
push
pushl
mov
push
call
test
mov
je
push
add
pop
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
sub
jne
mov
push
push
pushl
push
call
test
pop
je
mov
mov
mov
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmp
sub
mov
add
mov
push
xor
cmp
mov
je
add
sub
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
inc
mov
test
jne
jmp
lea
push
push
lea
push
push
mov
mov
call
mov
mov
mov
add
cmp
add
cmpl
jne
pop
pop
leave
ret
push
push
push
push
push
pushl
mov
push
call
mov
push
pushl
mov
call
cmp
mov
mov
jne
cmp
jne
push
push
push
mov
call
xor
push
push
pushl
call
mov
pop
pop
pop
ret
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
cmpl
jb
push
push
mov
mov
mov
sub
sub
mov
lods
xor
stos
sub
sub
sub
sub
add
rol
dec
jne
pop
pop
pop
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
adc
add
push
inc
add
add
add
add
pop
inc
out
sbb
cmp
dec
mov
sub
lret
fisubl
test
nop
sahf
out
sar
cmp
mov
jmp
mov
inc
xchg
mov
inc
push
fisubrs
adc
mov
dec
and
dec
dec
out
rcrb
mov
out
mov
sub
loopne
repz
loope
xchg
add
fs
fcmovnb
cli
ss
pop
mov
addb
push
cmp
fucomi
sbb
mov
imul
sub
das
addr16
inc
push
inc
rep
clc
cld
into
je
repz
pop
imul
adc
testb
mov
data16
pop
int
out
call
sub
inc
fstpt
jbe
cmp
fpatan
xor
clc
aam
push
pop
ja
push
xor
mov
es
push
mov
and
mov
mov
jmp
adc
jne
ret
dec
in
stos
xor
jle
mov
test
mov
iret
in
jg
dec
orb
jp
cmp
andl
add
in
test
out
sub
fadds
test
jp
ktestw
arpl
and
push
xor
push
push
call
or
insb
and
std
jmp
test
out
inc
enter
cmp
xor
mov
lcall
outsb
fcmovbe
sti
popf
xchg
das
scas
mov
negb
imul
pop
push
test
xchg
into
dec
xchg
dec
dec
add
xor
sbb
cwtl
loope
rcr
inc
jge
das
cmpsb
dec
jns
jae
popf
sbb
mov
or
test
fimuls
mov
mov
jp
or
out
cmp
xor
pushf
divb
mov
sub
push
enter
and
gs
out
jl
pop
mov
inc
sbb
xor
rorl
pop
andb
xor
shlb
xchg
in
mov
clc
inc
aas
gs
dec
mov
sub
fwait
xchg
pop
outsb
gs
mov
mul
mov
popf
rcr
stos
mov
and
and
jb
mov
pop
inc
stc
mov
xor
mov
lea
push
push
mov
sub
dec
mov
cmp
rcrb
sbbl
into
sbb
incb
push
addr16
addr16
int
loope
loop
adc
cwtl
mov
add
stos
push
jmp
lods
mov
jne
cwtl
rclb
cmc
jnp
mov
call
nop
ret
xchg
and
cmpsl
lods
mov
xor
push
shrl
mov
bound
jp
ja
mov
fisttpll
fmull
sub
sbb
mov
test
mov
mov
adc
xor
lret
mov
rcrb
xchg
cmc
clc
or
cmp
loopne
insl
inc
lods
mov
in
insb
in
push
loopne
mov
daa
cmpsb
dec
rol
ret
or
inc
lods
cli
negb
les
jg
push
iret
std
leave
in
daa
mov
jp
mov
mov
cld
jnp
bound
add
fnstenv
cwtl
push
out
ret
push
lds
or
dec
je
or
jns
mov
daa
pop
mov
or
add
dec
into
test
mov
and
inc
aas
iret
addr16
ljmp
mov
jo
aaa
push
jge
push
xchg
std
aaa
cmp
popf
aad
xchg
xor
push
scas
mov
ja
ljmp
jb
mov
pop
or
jbe
fdivl
mov
mov
pop
xor
pop
sub
lret
cmc
or
sarl
lret
lods
outsl
xchg
ja
and
mov
movsl
shrb
sbb
fnstsw
sti
fdivr
lret
sub
mov
fmull
stos
ss
pop
add
push
lcall
mov
add
sub
jp
cmpsb
fmull
lods
push
mov
loopne
outsl
mov
push
movsl
std
rdmsr
pop
push
push
scas
adc
xchg
mov
xor
cs
or
push
and
push
dec
fdivrl
xor
and
imul
sbb
test
lcall
adc
hlt
aam
stos
jns
jnp
fsubrl
push
inc
lret
sub
or
push
xchg
rcl
mov
or
jg
fwait
inc
ficomps
fsubrs
or
sbb
pop
jge
je
ret
test
dec
divb
cmp
and
jno
jl
dec
jo
stos
mov
add
jno
rorl
sub
sbb
fcompl
cmp
sbb
out
leave
jmp
mov
icebp
stos
mov
jmp
dec
lret
out
out
xor
sbb
cmp
xchg
lods
scas
clc
fld
js
out
inc
pop
cmp
popa
xchg
out
fldl
jmp
clc
push
push
lret
and
sbb
cmpsb
incl
xchg
cs
xchg
leave
xchg
cld
dec
xlat
jecxz
mov
or
negb
repnz
jns
out
jae
out
add
pop
daa
xchg
mov
roll
popa
sub
loop
sub
add
das
es
outsl
outsb
pop
jecxz
jp
xor
xchg
lret
add
pop
inc
out
add
popa
inc
or
test
stos
xchg
sub
daa
into
out
jnp
push
fsub
pop
ret
into
pop
lahf
mov
lret
add
jp
shrb
test
push
scas
push
push
sub
sbb
scas
pop
pop
inc
adc
push
insl
jbe
sub
insb
lods
inc
outsb
gs
inc
mov
adcl
or
add
sub
hlt
lds
subl
test
lret
and
xchg
push
sub
int3
ret
fisttps
repnz
cmp
sub
cs
mov
cmp
fwait
lahf
rorl
call
les
or
ror
mov
pop
stos
pop
cs
outsl
and
fucomip
cmc
repz
push
mov
rorb
movsb
test
push
jl
stos
aas
lods
es
lea
cmp
mov
dec
movsb
push
cmp
fwait
jle
movsb
sbb
lret
inc
cmp
fs
test
ja
mov
or
and
jb
int
xchg
and
xchg
pop
jns
add
es
js
or
inc
idivb
leave
cmpsl
lret
add
aad
xchg
vandnpd
push
shr
pop
xorb
stos
xor
daa
test
daa
push
or
sub
jp
mov
imul
test
call
xchg
je
in
sbbb
test
push
jmp
mov
add
shl
mov
insl
fisttps
pop
add
mov
ja
sbb
adc
imul
rclb
mov
popf
push
push
pop
mov
popa
loopne
in
test
test
mov
adc
and
adc
pop
push
clc
mov
ja
pop
decl
sub
pusha
pop
dec
mov
adc
add
cld
in
rcll
aas
cli
mov
aas
incb
sub
xchg
divl
sub
ljmp
daa
mov
call
xchg
ret
xor
fidivrl
imul
xchg
inc
xor
mov
mov
out
mov
cmp
jo
mov
dec
lock
fidivl
sub
iret
inc
xchg
mov
jecxz
adc
mov
xchg
inc
test
movsl
mov
outsb
scas
inc
test
cld
inc
fcom
jns
mov
lods
sbb
ds
insl
jl
dec
iret
mov
inc
jmp
and
jecxz
aam
call
inc
cmpsl
lea
fs
xor
in
movsb
rcll
push
outsl
xchg
or
repnz
jmp
fisubrl
adc
sub
enter
dec
and
int3
add
push
cmp
ret
mov
lods
shl
addr16
test
in
leave
test
shlb
mov
mov
scas
jnp
mov
test
push
jb
jb
push
rcrb
cli
mov
test
add
outsb
cmp
add
sbb
dec
cli
mov
out
int3
push
aas
aas
fnsave
and
daa
xchg
and
into
sti
pusha
or
inc
push
fimuls
stos
repnz
bndstx
jmp
sub
js
xlat
ja
push
push
inc
frstor
les
and
mov
cmp
mov
lahf
pop
int
data16
jge
cmpsb
push
cltd
mov
into
pop
adc
pop
mov
hlt
call
test
push
outsb
ja
mov
imul
mov
insl
js
das
or
lds
jae
paddb
cld
inc
or
xor
fucomp
int
jno
jecxz
push
xor
mov
inc
fimull
mov
mov
xlat
inc
push
and
aas
rolb
jns
pop
cltd
pushf
push
push
lcall
jnp
pop
or
cli
aaa
in
mov
cld
add
xchg
push
xor
xchg
xor
pusha
cmp
and
sub
popa
xchg
fnstcw
js
or
jbe
repnz
lret
andl
clc
cs
mov
sub
push
aas
add
jno
dec
in
jae
xor
je
pushf
pop
sub
cmc
pop
dec
adc
popa
cltd
mov
shl
fdivrl
sahf
aas
cs
mov
push
popa
bound
pushf
out
cmc
jae
and
leave
xchg
jge
add
aam
sti
popf
sbb
clc
imul
rorb
enter
out
mov
sahf
lods
adc
rcll
pusha
cmpsb
dec
es
mov
mov
sub
cmpl
je
pop
adc
out
bound
mov
mov
xchg
jl
push
jno
popf
xor
mov
sub
imul
sti
xchg
or
push
add
mov
and
sbb
sbb
inc
inc
sub
popa
rcr
aas
push
insb
adcb
mov
pop
insl
jg
push
lock
cmp
jmp
divb
or
btr
xchg
mov
outsb
pop
pop
adc
lods
bound
shl
arpl
fildl
mov
std
adc
add
std
mov
pop
shl
mov
loop
hlt
cli
or
lods
jp
push
adc
push
adc
pop
xor
cmpsb
icebp
movsb
or
cli
pop
test
sti
cli
mov
push
mov
cltd
sarl
sbb
adc
insb
push
xor
mov
movsb
push
lods
addb
ss
or
ljmp
xchg
shlb
dec
cltd
add
roll
inc
and
mov
xchg
jb
dec
jns
loope
insl
imul
mov
test
mov
or
and
xchg
xchg
sub
adc
lea
dec
out
repnz
mov
ret
inc
shll
aaa
fiaddl
pop
pop
sbb
loope
aad
push
nop
out
xor
jnp
fcmovb
add
pop
mov
sbb
dec
inc
insb
adc
jbe
dec
sbb
cli
and
dec
lock
out
pushf
mov
push
xlat
adc
mov
jns
xchg
cmp
cmp
sbb
add
fldcw
xchg
push
mov
jecxz
addr16
push
iret
sbb
ror
xlat
push
inc
jb
mov
enter
ret
pop
dec
fld
mov
push
mov
sub
jle
pop
das
push
imul
popf
cvtdq2ps
xchg
cmc
sub
inc
add
pop
or
cltd
push
pop
cmp
pop
fsubp
test
loope
mov
xor
movsl
scas
loope
xchg
jo
imul
adc
fstpl
aaa
xor
enter
sbb
scas
xor
mov
or
aaa
xchg
mov
sub
fisubl
ror
pop
mov
mov
clc
push
inc
cmp
sbb
fsubs
jns
scas
mov
arpl
dec
repnz
sub
cbtw
pop
lds
mov
in
jmp
mov
jle
int3
and
and
cmp
mov
or
mov
add
xchg
lcall
push
repz
or
lea
pop
pop
mov
pop
xchg
and
fcoml
and
xchg
cld
enter
sub
mov
jl
dec
mov
aad
adc
mov
cmp
pop
jne
pop
testb
pop
adc
sti
sti
in
or
fildll
mov
test
int3
mov
mov
cli
shr
out
jge
mov
cwtl
ret
mov
aas
cld
and
sahf
push
aas
aad
jb
fwait
movsl
xor
and
cltd
ds
lods
icebp
in
mov
pop
add
mov
shr
sbb
into
push
jb
std
enter
sub
stc
test
clc
fdiv
sti
push
xor
outsb
jnp
inc
fs
and
mov
rcrl
push
pop
rcr
loop
iret
data16
pavgw
mov
pop
into
adc
xor
bound
test
es
sub
adc
pop
xor
in
mov
int3
aad
daa
jmp
movsb
xchg
movl
fucomp
mov
sbb
fnstenv
fisubs
xor
inc
push
inc
fsts
pop
shlb
scas
dec
loop
rcrl
sub
int3
mov
xchg
push
push
mov
sbb
dec
imul
adc
mov
jbe
and
adc
pusha
int
repnz
leave
jecxz
dec
into
xchg
movl
adc
sti
fldenv
mov
fsub
inc
adc
adc
ror
ja
shll
in
stos
xchg
sar
out
add
pop
push
mov
push
clc
out
add
dec
dec
in
aas
add
pop
shll
push
clc
xchg
mov
aas
push
subl
call
loope
fistl
push
or
fdivs
mov
mov
add
in
popf
pop
fcomi
xchg
push
push
push
outsl
les
adc
cmp
sbb
mov
inc
notl
jbe
or
gs
stos
ja
dec
and
leave
adc
cltd
mov
loopne
dec
scas
shl
data16
add
mov
pop
pop
shll
sti
pushf
stc
sbb
negb
push
jg
or
ficomps
push
mov
cmp
xor
and
fwait
idivb
xchg
inc
mov
outsl
mov
iret
lds
sti
cmp
mov
adc
sub
rcrb
iret
mov
inc
ds
and
out
push
xor
loop
in
lcall
fnstsw
sub
pushf
mov
jge
std
fnstenv
test
jmp
ljmp
jl
and
pop
cli
xchg
add
inc
ret
mov
mov
cwtl
adc
je
xchg
add
lds
pop
sub
cmp
call
mov
jae
outsb
pop
mov
xchg
cmp
nop
push
inc
lds
mov
pop
push
mov
sub
loop
dec
clc
push
cmp
mov
andb
lods
xor
ds
xchg
sti
adc
lods
push
ret
sub
add
xor
mov
shll
repnz
iret
add
add
push
push
push
mov
pop
jecxz
jg
cmp
push
imul
and
mov
and
and
mov
iret
int3
leave
inc
mov
movsl
dec
rcrl
dec
gs
stos
fs
and
leave
je
xor
pop
enter
inc
xchg
hlt
cmpsl
lods
jecxz
loope
cmc
fimuls
mov
lods
notl
cmpl
pop
mov
jnp
test
mov
jns
add
push
fsubrp
and
or
js
cmp
mov
in
push
hlt
and
repnz
mov
out
inc
ljmp
cli
dec
pusha
sbb
popf
loope
bound
outsl
cltd
test
aaa
sbb
sbbb
and
lea
cld
icebp
rcr
icebp
dec
inc
out
sahf
push
ja
push
jbe
test
add
scas
add
aas
add
push
mov
fists
push
out
fstpl
xbegin
cmp
sbb
mov
insb
mov
data16
mov
and
adc
mov
sbb
push
cmp
lods
mov
or
pop
cmp
testl
addr16
jnp
adc
std
ds
clc
cmp
and
sbb
mov
sbb
sbb
jmp
add
fisttpll
sbb
mov
cmpsb
mov
xor
outsl
jecxz
daa
mov
inc
ss
sub
add
out
xor
std
adc
pop
shr
std
add
xchg
jl
std
xchg
jns
fwait
push
or
lret
fisttpl
cltd
xor
mov
fldt
inc
icebp
pop
popa
fisubrs
jecxz
push
pop
xchg
or
mov
in
xchg
mov
repz
lcall
and
aas
int3
ljmp
insl
xchg
jnp
popf
mov
incl
jnp
jge
test
sub
cmpsl
decb
mov
sub
cmpsl
sahf
xchg
pop
enter
aas
loop
cmpsl
int3
xchg
xor
mov
mov
fwait
out
ljmp
data16
push
or
insb
mov
push
fisubl
inc
iret
fwait
push
mov
adc
jae
adc
mov
add
es
pop
mov
data16
stc
inc
outsl
or
test
or
push
and
cltd
mov
xchg
inc
pop
xchg
dec
mov
pop
out
push
gs
test
popf
pop
loope
push
xor
fs
cmp
ja
mov
nop
sub
sbb
in
cmp
mov
and
ljmp
or
xchg
pop
cltd
cmpsb
inc
dec
xchg
jmp
dec
jb
mov
pop
outsl
sarl
fisttpl
mov
or
sub
push
jl
movl
mov
outsl
inc
subl
fs
and
iret
cmpsb
fldl
xchg
mov
or
cmp
sub
test
pop
mov
push
dec
icebp
mov
xor
mov
lods
push
pop
lea
out
movsl
nop
test
fdivp
adc
lahf
inc
inc
ret
les
or
inc
int
jae
add
out
mov
les
or
sub
add
push
incl
add
sarb
loop
xchg
xchg
fstpl
sbb
xor
inc
mov
sub
add
into
push
mov
sbb
jne
lcall
insb
mov
ret
mov
das
dec
rcll
cs
mov
ja
cmpsl
push
xor
xor
cmpsb
sarl
and
and
push
jns
fiadds
idivl
cs
shrb
pop
adc
and
cli
and
xchg
pop
adc
inc
push
orb
cmpsb
sub
scas
push
and
or
das
dec
and
out
mov
addr16
jl
and
or
shrl
mov
stos
pop
subl
push
and
lahf
mov
cwtl
add
out
loopne
mov
cmp
push
int
js
pop
fwait
mov
enter
add
test
addl
xor
repz
sahf
jb
sbb
vunpcklps
pop
adc
out
push
fldl
push
push
xchg
sbb
push
dec
add
rcl
pop
xor
xchg
mov
inc
outsl
ljmp
fwait
popl
jmp
pusha
in
mov
inc
jnp
inc
fwait
mov
rorb
lahf
push
sahf
aam
add
xor
xchg
pop
fimuls
lret
pushf
xor
ja
jp
push
xchg
fdivs
sbbl
in
mov
pusha
add
or
out
je
xor
inc
jcxz
xchg
scas
add
adc
add
loope
xchg
mov
pop
mov
test
std
xchg
jge
jb
xchg
rolb
scas
ror
add
inc
sbbl
int3
dec
out
adc
cmc
xchg
fsubr
push
ja
push
stos
pop
dec
sbb
ljmp
mov
enter
jge
jmp
jne
sbb
aas
xchg
das
mov
xchg
adc
fldenv
xchg
fucompp
scas
jmp
and
pop
loope
pop
push
hlt
inc
stos
push
aam
stc
push
pop
call
pop
inc
adc
xlat
mov
test
fimull
push
test
pop
cmp
movb
adc
add
sbb
or
cs
jbe
dec
nop
in
mov
inc
cmp
dec
xor
pop
ja
leave
outsb
jmp
into
js
arpl
insl
in
shl
xor
repnz
jno
mov
ret
sub
mov
pop
popa
pop
adc
adc
daa
xchg
lods
add
je
fsts
adc
cltd
dec
cmp
or
dec
fwait
cltd
xor
pop
dec
cmp
push
jp
leave
pop
xorb
loop
test
sbb
bound
pop
push
dec
mov
jl
pop
jge
push
dec
pop
out
xchg
mov
mov
jne
fdivs
adc
xchg
pop
cmp
xchg
aam
xchg
lret
lods
int3
mov
adc
in
xor
jmp
xchg
ljmp
aaa
daa
push
pop
push
mov
into
loopne
push
cmpsb
jnp
push
out
xor
jmp
adc
add
mov
dec
imul
lock
sti
gs
sub
sbb
es
cwtl
pop
mov
xchg
fimuls
cmp
lcall
push
cmp
xchg
sub
lret
popf
jp
lret
or
or
pop
push
popa
cmc
cmc
sahf
inc
fisttpll
xchg
push
enter
popa
fstps
pop
cmp
cld
shrl
pop
or
mov
mov
imul
ret
mov
jl
leave
ljmp
dec
out
imul
pop
xor
or
inc
popa
jp
mov
mov
pop
loop
dec
dec
pop
add
out
sub
mov
icebp
loop
pop
cvtpi2ps
mov
pop
int
je
movsl
sub
mov
or
pop
clc
js
jb
and
xor
mov
repz
mov
xchg
mulb
sahf
cmp
jmp
adc
cltd
pop
repnz
lret
xchg
push
outsl
pop
stc
test
imul
push
xchg
sbb
and
sbb
fisubl
or
jecxz
or
pop
mov
add
mov
xchg
aas
jb
mov
gs
xchg
cmpsb
push
add
push
mov
dec
mov
dec
xlat
lcall
test
xlat
das
mov
cmpsb
popa
xlat
mov
dec
idivb
adc
xchg
inc
add
ss
lock
dec
cmp
testb
add
mov
lock
mov
out
pop
jbe
ret
sbb
push
jae
stos
movsl
jns
fstl
ja
xor
fs
pushf
fwait
popf
sub
jle
fists
popf
dec
jae
jle
lds
lcall
aaa
cmc
pop
mov
ret
pop
add
rcll
jp
decl
cmp
dec
jle
andb
test
in
aaa
cwtl
add
mov
insl
sti
jl
loop
and
inc
stos
repnz
fucom
dec
push
dec
cmp
cmp
mov
push
cmpsb
lods
jne
jo
and
cmp
jne
pop
cmc
and
inc
add
sbb
outsb
sub
divl
loop
xchg
rcrb
ret
mov
mov
adc
or
jno
pop
inc
push
jae
mov
mov
data16
jecxz
inc
push
inc
sbb
adc
out
jl
fldcw
add
adcl
jp
jecxz
roll
and
loopne
ret
js
bound
xor
clc
filds
iret
es
push
pop
lock
pop
aaa
adc
cmp
decl
sbb
push
rcrb
mov
push
cmp
cmp
sub
xchg
mov
notb
mov
xchg
orb
popa
push
jnp
fidivrl
imul
pop
cmp
push
iret
add
in
fcmove
add
xchg
pop
icebp
movsl
sahf
lret
dec
push
mov
xchg
push
test
jmp
sbb
arpl
ret
fsubrs
sub
mov
xchg
jo
jge
xchg
in
pushf
pop
sbb
loopne
pop
dec
aas
pop
pop
popa
mov
lds
cmp
fbld
mov
sub
xchg
sbb
pop
mov
aas
call
xchg
dec
mov
xor
cmp
pop
scas
imul
and
xchg
push
add
cmp
std
les
pop
lds
mov
jno
std
sbb
sub
outsl
data16
aam
cmp
int
into
mov
push
mov
mov
mulb
cmp
or
push
das
repnz
jo
fwait
outsl
in
inc
adc
lods
shll
mov
data16
and
in
lods
enter
pop
mov
icebp
ljmp
add
mov
outsb
push
out
popf
sarb
cwtl
adc
sti
dec
insl
sub
frstor
cmpsb
mov
xor
leave
mov
fstps
adc
xchg
cmpl
sahf
inc
xor
mov
mov
sbb
mov
dec
push
mov
sbb
mov
mov
xor
sbb
loop
mov
cli
test
scas
dec
push
cltd
ror
jmp
pop
mov
sub
sbb
dec
sub
push
sbb
stc
loope
and
dec
je
mov
iret
fiadds
cltd
lds
popf
push
lock
xchg
xchg
inc
push
jl
lods
add
mov
pushf
test
xor
sbb
fisubl
js
jnp
pop
outsl
lahf
xlat
xlat
mov
das
sbb
lods
cwtl
nop
subb
sub
sub
mov
mov
mov
js
int3
pop
xor
xor
mov
cmp
popa
arpl
loope
xorl
xlat
xor
loop
xorl
add
pop
arpl
imul
fsubs
sbb
sbb
mov
sbb
push
and
push
sbb
jb
xor
into
rclb
cmp
mov
and
inc
mov
pop
mov
mov
cmp
ja
cmp
roll
inc
cmp
arpl
xor
data16
push
out
gs
into
mov
iret
jle
stc
inc
push
popa
xchg
test
mov
movsl
shr
insb
pop
sbb
test
cltd
cmp
daa
inc
stc
es
dec
pop
jmp
test
mov
mov
pop
adc
nop
das
cmp
mov
stos
inc
sbb
push
imul
pop
nop
ret
lahf
pop
xchg
cs
addl
sbb
mov
dec
sbb
sub
and
pop
lea
ja
jne
nop
das
stc
ret
cwtl
hlt
adc
jmp
sbb
loop
hlt
cltd
sbb
fwait
mov
mov
or
push
or
push
int3
mov
lahf
data16
mov
ret
push
ljmp
fisubl
push
pop
jp
jne
bound
xor
addl
cwtl
call
adc
add
jle
stos
and
insl
repnz
and
lds
outsb
call
cmpsb
shr
ds
mov
inc
or
mov
and
outsb
out
test
jns
aaa
scas
enter
cmp
fwait
cwtl
or
fdivrl
pop
fcmove
fidivs
cmpsb
xlat
sbb
aas
pop
iret
sub
sbb
aaa
stos
cmc
dec
add
inc
stos
jl
in
xchg
mov
sbb
sub
and
mov
loop
push
stos
pop
test
pop
imul
or
js
ficoms
out
sbb
fucom
xor
dec
sbb
push
adc
pop
mov
test
sub
fildll
sahf
std
dec
cmpb
ss
jnp
add
mov
mov
dec
cli
cmp
mov
inc
mov
test
pop
pop
and
sbb
icebp
jle
mov
push
mov
push
ja
aad
icebp
xchg
fwait
es
adcb
cmp
shrb
sbb
daa
pop
inc
inc
and
loope
and
repz
mov
xchg
stos
bound
and
jg
mov
scas
jg
mov
or
lahf
pop
mov
adc
lods
scas
inc
je
movsl
sub
dec
jbe
xchg
test
push
jnp
and
popa
imul
jns
adc
int3
cli
inc
lret
ret
js
mov
orl
add
push
push
test
repnz
call
pop
push
xchg
out
pop
xor
cli
movsb
xor
es
stos
lods
pop
int3
es
data16
loope
xchg
xor
test
in
stos
mov
ljmp
and
adc
adc
inc
repz
or
insb
xor
push
addr16
push
ljmp
cmp
or
dec
adc
cld
adc
sbb
inc
cs
and
je
mov
es
jb
insl
andb
mov
aam
xorl
mov
or
xor
scas
cmp
rclb
mov
mov
lock
mov
xchg
sub
aam
lret
or
fcmovnbe
les
mov
mov
ret
sarl
inc
sti
fsubrl
int3
mov
jl
imul
push
mov
mov
mov
loop
pop
mov
hlt
mov
mov
leave
jnp
fs
cmc
pop
sbb
dec
xchg
insb
mov
xchg
cmp
movsl
negl
pop
insl
lcall
lret
lahf
pop
out
out
jmp
sbb
leave
xchg
pop
or
sbb
shr
jmp
pop
jae
repnz
cmp
jmp
dec
aaa
add
adc
dec
hlt
aaa
inc
xor
dec
mov
in
or
loop
mov
insl
loopne
addr16
jns
cs
inc
dec
mov
or
imul
faddl
pop
fcmovnbe
jge
test
ja
popf
add
mov
push
dec
out
pop
cmpsl
lods
adc
push
fists
outsl
repnz
mov
xchg
cltd
sahf
push
or
hlt
lcall
mov
dec
jge
lea
es
mov
mov
iret
clc
pop
pop
ljmp
pushf
xlat
mov
sbb
xchg
cmp
push
xchg
andl
cmp
hlt
jae
jge
sbb
addr16
sub
lods
inc
testl
sub
ja
mov
fldl
in
or
mov
imul
mov
loopne
or
shrb
mov
mov
in
jno
jecxz
mov
std
lret
mov
es
imul
inc
or
push
rorl
mov
and
test
pop
sbb
cmp
inc
iret
lds
inc
pop
arpl
cmpsb
pop
sub
dec
rcrb
test
shlb
outsb
mov
scas
jb
jge
popa
test
pop
mov
xor
imulb
mov
cwtl
xlat
ret
bound
xchg
out
jb
test
js
adc
repz
cmp
fwait
negb
lcall
dec
adc
lcall
push
ds
pop
clc
mov
out
jp
dec
and
adc
mov
ror
mov
push
sub
xor
scas
cmpsb
int3
in
cmp
mov
pop
push
xchg
add
mov
sahf
arpl
add
in
sahf
std
mov
pop
cmp
sub
loop
cwtl
push
stos
dec
mov
push
add
inc
push
mov
sbb
and
jmp
add
push
xor
sbb
adc
sub
std
cli
mov
ljmp
lret
inc
cwtl
and
popa
inc
fstpl
pushf
popf
pop
jecxz
aad
mov
mov
dec
mov
insb
aas
jne
xor
in
add
jae
mov
or
loop
mov
mov
and
sbb
sbb
xchg
sbbb
pop
jbe
dec
jmp
je
jnp
adc
push
mov
lahf
cmp
mov
sub
into
xor
imulb
inc
iret
jno
pop
pop
les
loopne
mov
or
out
pop
ljmp
mov
cld
out
fcmove
lock
dec
ds
xor
and
jp
mov
ret
in
ja
mov
xorl
sbb
jnp
cmp
push
loop
mov
xlat
out
mov
fdivp
sbb
fdivs
inc
test
pop
xchg
daa
int
jnp
inc
insl
jb
pop
sbb
gs
jg
inc
cli
jp
loop
pop
jno
test
mov
mov
stos
loope
xchg
jl
ljmp
ja
sub
push
enter
jmp
lods
pop
stos
mov
add
push
stos
aam
out
xchg
adc
leave
xchg
lods
cmp
jnp
cmpsb
add
cmpsl
mov
movsb
push
in
into
clc
jge
inc
xchg
leave
sahf
inc
xchg
pop
test
and
jp
scas
sub
jmp
push
dec
push
jl
pop
fs
pop
je
or
ficomps
daa
pusha
test
mov
push
xor
mov
cmpsl
mov
scas
nop
adc
sbb
aad
test
out
fwait
lahf
xchg
sub
dec
shlb
outsl
outsl
dec
sarb
add
inc
clc
ret
push
jge
js
and
popf
xchg
push
sahf
andl
dec
repz
call
push
mov
push
gs
cmp
xor
out
outsb
jmp
mov
pushf
outsb
call
adc
xchg
sahf
mulb
push
out
aam
pop
sub
add
mov
orb
shll
inc
ret
ret
mov
and
mov
in
and
sub
into
jl
out
and
fbstp
mov
jnp,pn
icebp
movsl
je
out
int3
and
mov
and
and
xchg
xor
lahf
lret
shrb
dec
mov
adc
fcomps
and
jo
and
mov
mov
into
or
inc
pop
addl
ret
cmpsl
call
cmp
push
add
out
lret
xlat
push
push
call
push
jno
sbb
lods
cmp
pop
sarb
std
fwait
sahf
xchg
xchg
sub
sbb
sub
out
or
clc
ficompl
aad
adc
mov
lret
ret
adc
add
mov
sbb
icebp
mov
mov
aas
mov
out
or
mov
xchg
out
sub
loop
stc
add
cmp
fistps
stc
xchg
add
sbb
bound
and
arpl
push
xchg
dec
fisubrs
lret
mov
push
loopne
inc
sti
push
pop
and
jge
mov
jle
iret
ds
popa
je
icebp
sti
fwait
arpl
daa
jg
sub
lock
sar
inc
xlat
inc
cmp
int
testb
dec
lcall
popa
fldcw
in
xchg
jl
movsb
rsm
js
sbb
mov
out
and
gs
out
cmp
sub
call
sbb
jg
in
loop
popa
mov
sub
push
mov
or
jp
push
stos
pop
pop
adc
cmp
jo
enter
xchg
scas
jl
in
mov
mov
add
arpl
mov
jge
test
hlt
je
es
mov
inc
out
ja
stos
push
ret
ljmp
pop
imul
push
adc
mov
aas
fldcw
mov
dec
lods
mov
cld
pop
pop
and
shll
loop
enter
idivl
ss
fnstenv
xor
xor
sbb
out
add
xor
xchg
jnp
mov
mov
xor
inc
jle
pusha
cmp
out
icebp
dec
out
fld
jmp
popf
arpl
lahf
adc
or
mov
jae
cmp
movsb
mov
dec
addl
cltd
mov
pop
arpl
addr16
push
imul
cmp
mov
pop
mov
fs
cmp
xchg
and
data16
mov
adc
jmp
fnstcw
push
cmp
into
fcmovb
adc
imul
movsl
pop
ss
lcall
in
add
loop
fwait
add
or
pop
mov
jecxz
xor
scas
pop
jns
pop
jecxz
mov
xorb
pop
dec
in
sar
pop
ret
aaa
mov
and
mov
repz
jg
insb
jnp
loop
mov
add
jle
xor
and
lods
aad
pop
dec
lahf
jns
mov
sbb
dec
es
dec
movsl
outsl
imul
clc
xor
sbb
sub
xchg
xorl
cltd
in
insb
pop
shlb
iret
mov
stos
insb
ffreep
push
mov
popf
fcoms
cwtl
movsl
decl
loopne
mov
cmp
aad
out
stc
add
testl
mov
arpl
xchg
fisubrl
add
add
and
pop
xchg
pop
sbb
ljmp
sbb
ror
cli
add
nop
popa
sbb
and
jle
out
jge
test
sbb
xchg
or
filds
popa
and
mov
insl
push
inc
int3
jle
insl
dec
cmp
pop
dec
int
in
fs
xchg
add
arpl
scas
sub
cmp
jg
ljmp
insb
sbb
inc
mov
sbb
dec
cmpsb
lret
cmp
push
das
dec
add
sbb
sti
and
inc
popf
movsl
and
xlat
jbe
int3
push
shrb
mov
dec
sti
cld
adc
inc
jns
push
pop
cmp
imul
mov
nop
mov
adc
push
ficoms
push
lea
shl
push
and
sbb
repnz
mov
lds
ror
xor
mov
lock
jne
jne
mov
mov
stos
clc
adc
loop
pusha
cmp
jecxz
xchg
in
jg
mov
fidivrl
lret
xchg
inc
es
shll
cmc
test
aas
or
scas
mov
jae
pop
xor
mov
fdivrl
test
test
mov
xchg
lret
xor
cli
and
and
pop
mov
mov
std
jb
jb
mov
movsl
add
cmp
or
adc
ja
aaa
or
ljmp
imul
dec
pop
jp
clc
push
lea
xchg
jecxz
lds
xor
fwait
cld
insb
aad
push
rorb
imul
aam
arpl
outsl
cmp
fmuls
sub
pop
mov
into
popa
icebp
cmpl
jmp
in
adc
adcl
fidivrl
mov
arpl
jge
dec
jb
jne
ret
xchg
arpl
bound
xchg
sbb
ds
jge
xchg
shrl
push
out
gs
xor
loope
mov
push
or
inc
mov
xchg
sub
movsl
mov
pop
lea
mov
mov
orb
pop
rol
test
dec
add
or
xor
or
fisttps
cli
or
das
cmp
scas
pop
leave
lret
or
sub
das
cmp
fs
in
cld
ja
xor
pop
lcall
lods
shll
ss
cmp
cmp
mov
jecxz
mov
push
push
leave
jecxz
subl
ss
jne
cld
mov
cmp
rolb
sbb
rolb
ss
dec
mov
mov
stos
add
pop
ficomps
mov
sub
setge
sarl
or
std
mov
test
mov
jo
cmpsb
sahf
dec
mov
push
test
test
jl
mov
mov
sub
lret
repz
pop
cmp
jl
cmp
sub
movsl
sub
push
ljmp
xchg
add
push
pop
or
pop
sub
push
loopne
pop
cmc
stos
addr16
sbb
out
xor
mov
pop
aaa
fidivrl
negl
jno
fnstsw
push
mov
les
rorb
jp
sub
push
xor
jge
push
jae
sbb
mov
add
dec
push
xor
and
ret
push
movsb
fwait
mov
sti
call
sbbl
jge
mov
cmp
daa
mov
dec
dec
fcoml
mov
inc
fldenv
sbb
xor
mov
sub
inc
mov
cmp
push
movsb
push
jp
scas
and
sub
inc
add
add
push
iret
aas
sub
mov
jae
sbb
jmp
nop
in
push
adc
das
mov
cmp
jns
xchg
scas
xor
mov
xchg
cli
mov
arpl
fdivl
and
mov
cmc
sbb
adc
xchg
fldl
lds
cmp
fs
xor
add
pushf
xlat
test
xchg
mov
and
ljmp
push
dec
dec
push
repz
cmp
sahf
stos
xlat
jl
enter
aad
cmp
mov
xor
adc
sbb
cmp
push
or
cmc
jmp
mov
mov
or
xor
sub
jbe
push
jb
nop
jecxz
push
push
cmpsb
or
fcompl
pop
mov
outsl
mov
rclb
test
in
mov
mov
ljmp
pushf
pop
loopne
mov
pusha
in
cwtl
sbb
cmpsl
loope
fwait
dec
mov
cmpl
scas
out
xchg
sub
push
jnp
adc
pop
xor
push
out
sbb
xchg
in
pop
fcompl
xchg
cltd
pop
sub
and
mov
in
xor
inc
fsubs
hlt
jge
or
ss
test
mov
pushf
cmpsl
test
test
repnz
xor
xor
pop
xchg
dec
test
mov
insl
and
push
mov
sarb
sbb
mov
dec
sub
xchg
dec
adc
jle
mov
cmp
insb
jno
rclb
pushf
adc
pop
inc
popf
das
testl
adc
ljmp
imul
leave
pop
push
add
stos
sbb
mov
xchg
ret
xor
and
adc
xchg
push
out
xchg
jns
pushf
mov
inc
outsl
xorb
xchg
push
dec
sti
inc
rclb
mov
mov
pop
cli
movsb
pusha
pop
clc
call
ljmp
ret
icebp
mov
pop
cmp
pop
xor
std
loope
mov
push
add
sahf
lods
frstor
ret
daa
pop
nop
out
mov
mov
and
daa
scas
and
dec
test
push
enter
outsl
repz
je
xlat
movsb
mov
adc
cld
dec
repz
inc
push
dec
rcr
pop
mov
gs
xchg
aas
push
mov
ja
dec
enter
and
pop
sbb
ret
sub
or
or
adc
rcrl
add
sbb
out
push
mov
jnp
inc
sbb
push
or
jne
mov
fists
lretw
mov
xorl
sbb
push
popl
dec
mov
test
insl
adc
jne
stos
stc
insl
xor
push
jge
in
add
inc
or
pop
jne
cmp
jnp
fs
loope
mov
clc
adc
adc
scas
push
inc
lret
scas
movw
stos
and
xorb
adc
test
rolb
loope
mov
lods
inc
push
mov
addr16
mov
bound
add
cmp
dec
xor
es
shll
fucom
and
loopne
dec
in
mov
int3
fs
fnstcw
stos
aas
pop
lds
mov
lahf
or
icebp
cmp
aas
pop
iret
cmp
rcl
dec
mov
negb
jecxz
adc
cli
loop
negb
std
fsubrs
adc
mov
pop
repnz
jle
mov
mov
into
push
ret
inc
movsb
lods
ja
adc
mov
hlt
stos
into
sbb
xchg
add
adc
cmpsb
es
shrb
sbb
push
sbb
dec
jecxz
rclb
sarb
movsb
inc
lea
icebp
movsl
mov
jmp
mov
in
pop
mov
or
mov
dec
out
rol
or
mov
dec
cmp
sbb
aam
mov
sbb
xchg
cmpl
and
cmp
dec
mov
xchg
pop
repnz
dec
leave
xchg
sub
mov
cmp
jnp
inc
fimull
cmp
add
aas
sbb
sub
hlt
ret
sub
ja
add
cs
arpl
shlb
enter
push
popf
mov
jg
cmp
pop
pop
pusha
fisttpl
mov
aad
js
xchg
mov
out
mov
mov
inc
insb
daa
mull
adc
pop
scas
sub
roll
in
sub
and
jb
inc
roll
mov
cmp
imul
fiaddl
mov
and
rdtsc
push
inc
push
mov
mov
pop
cmpsb
jae
cltd
xchg
mov
dec
fsubr
push
pop
fmuls
cmp
cmp
fsts
xchg
pusha
test
testb
inc
roll
das
sub
divl
mov
dec
je
nop
push
dec
lds
cmp
cld
in
mov
cmpsl
popl
testb
gs
xchg
cwtl
repnz
pop
mov
gs
outsb
pusha
hlt
cmc
xor
pop
jbe
lahf
out
shrl
and
jb
testl
stos
fsubl
test
mov
xor
movsb
dec
imul
testl
push
adc
cmp
push
int
xor
mov
mov
sub
or
aam
push
dec
dec
or
jecxz
xchg
data16
jmp
xchg
clc
mov
shlb
into
test
pop
arpl
cli
xchg
jnp
add
dec
cwtl
inc
faddp
mov
or
pop
bnd
call
rcrl
push
mov
imul
inc
sahf
cmp
pusha
inc
xor
fistps
pop
mov
std
in
inc
pop
repnz
in
add
lock
add
cltd
cmp
xor
xor
mov
mov
cmp
xor
sub
daa
cmp
mov
sbb
adc
mov
push
cmp
and
adc
fisubrl
lret
push
leave
call
addr16
daa
arpl
mov
leave
fcoml
cmpl
cmpsb
sub
aas
mov
sbb
sub
lock
jmp
push
sbbb
sbb
cmp
pop
out
in
ljmp
sbb
lcall
inc
js
sbb
pop
jle
push
repnz
fs
or
cwtl
fiadds
jns
xor
push
push
jae
mov
xor
jp
icebp
fistpll
adc
jb
mov
sar
or
cmpsl
mov
inc
adc
and
repz
loopne
and
pushf
adcb
mov
cmp
lret
cmc
daa
xchg
cwtl
andl
inc
pop
clc
pop
xor
mov
sahf
pop
mov
push
out
imul
mov
pop
inc
dec
adc
dec
cmp
xchg
xchg
mov
cmp
ljmp
out
fcoml
fwait
cmp
ds
mov
test
fldcw
sbb
cmp
popf
pop
pop
jnp
rolb
fisttpl
jmp
and
push
mov
scas
xor
sbb
fimull
pop
dec
or
cli
ljmp
add
hlt
movsl
mov
dec
xchg
cmp
gs
adc
xor
adc
in
rcrb
cli
add
call
pop
sub
sub
jl
sub
mov
sub
lret
push
scas
pop
das
adc
sarb
cli
dec
int
pop
rol
mov
cmpsb
lea
inc
pop
push
sub
dec
mov
out
xor
rolb
js
loopne
aaa
mov
bound
mov
mov
adc
mov
add
sub
mov
cmp
bound
lahf
and
jnp
aaa
push
or
rcll
lahf
mov
sub
das
mov
push
jecxz
prefetchw
adc
daa
outsl
sbbb
xor
jb
sub
stos
fcmovnb
and
mov
outsb
aam
js
adc
popf
in
push
push
xchg
xor
xchg
pop
inc
mov
in
pusha
jecxz
hlt
mov
cmp
clc
out
cmc
push
jo
push
xchg
ret
outsl
clc
sbb
or
bound
mov
sbb
xchg
and
sbb
inc
xchg
mov
stos
jg
decb
fbstp
gs
xchg
xchg
popl
ret
popa
push
dec
into
push
sarl
insb
mov
or
ret
aas
imul
and
xor
icebp
lcall
sbb
xchg
xor
dec
add
push
fistps
add
and
aaa
cmp
jmp
in
push
and
test
fimull
ja
jne
mov
call
fdivl
adc
pop
andb
or
mov
xchg
cmp
pusha
test
adc
add
push
cmpsl
outsl
or
or
or
pop
mov
test
fistpl
cmc
and
jae
dec
cmpsb
push
orb
mov
cmc
shll
insl
mov
dec
sub
sub
data16
dec
cmpsb
cs
fisttps
sar
je
mov
popa
pop
adc
sbb
es
fbld
sbb
leave
pop
ret
and
push
xchg
adc
lods
sbb
std
into
ret
sbb
sbb
ficoms
sbb
adc
mov
add
sti
push
mov
mov
out
loop
lret
mov
adc
xlat
inc
ds
pop
inc
loop
inc
js
outsl
pushf
addr16
cltd
repz
pop
aas
scas
inc
aas
xchg
lds
nop
pop
call
ja
pop
mov
cli
lods
dec
or
adc
fimuls
sub
adc
pop
sbb
xchg
loop
mov
loop
mov
inc
in
lds
loope
subb
mov
aaa
jmp
sub
mov
jb
insb
adc
loop
popf
into
push
mulb
inc
fdivl
mov
cld
aad
jmp
ljmp
popf
call
sub
aad
dec
jecxz
icebp
aam
gs
or
pusha
cs
inc
iret
lds
in
or
out
inc
fxtract
pop
dec
and
test
test
and
mov
pop
insb
and
cmp
mov
outsb
ljmp
dec
addr16
popf
lahf
lock
lock
adc
inc
dec
out
inc
into
xor
pop
xchg
es
dec
push
xchg
cmp
imul
hlt
mov
mov
pop
mov
test
mov
jmp
mov
xorb
js
rcll
leave
sarl
sub
into
push
mov
cmp
movb
jno
pop
mov
cmp
or
mov
cwtl
in
test
out
jp
push
jbe
outsl
pop
mov
repz
lods
andl
rcrl
push
out
pushf
jg
jge
sbbb
stos
jns
cmp
jno
sbb
test
pop
sub
movsl
lock
cmpsb
incb
out
inc
xor
clc
pop
mov
cmp
fs
cmp
imul
mov
sbb
shl
jb
push
cli
xor
stos
and
es
and
cmp
push
pusha
jae
int3
push
sbb
addb
mov
stos
ds
xchg
pop
jmp
lcall
cmp
movsb
ss
notl
dec
adc
call
or
out
mov
cmp
pop
movsl
cmp
in
mov
stos
jl
gs
sbbl
dec
sub
pop
and
jnp
lret
adc
xchg
test
sbb
mov
and
mov
shlb
not
cmpsb
mov
sub
jo
sub
mov
fstpt
movsl
arpl
sub
dec
pop
fcomp
jno
insb
daa
pop
pop
jl
cwtl
syscall
out
xchg
gs
cltd
jle
stc
add
add
jg
mov
sbb
negb
stc
cmpsl
mov
jmp
popa
mov
xchg
push
sbb
fimuls
pop
out
xor
dec
mulb
lret
loope
dec
jmp
xchg
inc
or
jg
sbb
jmp
test
in
aam
nop
sub
ss
cmp
dec
addr16
out
jmp
scas
pop
xchg
pavgw
add
add
xor
outsb
imul
test
stos
rcrb
ss
adc
sbb
or
adc
jb
inc
dec
in
inc
inc
rcll
js
lea
push
push
lret
jne
inc
daa
ds
fldl
mov
iret
xor
loopne
or
fwait
out
xchg
and
sub
cmp
push
in
sbb
mov
inc
lds
mov
xor
inc
and
jbe
cmp
xor
mov
mov
enter
inc
inc
ja
sbb
in
insl
popf
insl
mov
mov
adc
cmpsb
jle
jecxz
lds
mov
imul
enter
lahf
scas
or
inc
mov
les
push
sbb
lock
adc
in
xor
dec
sbb
clc
push
mov
dec
scas
adc
jbe
mov
inc
xor
cwtl
sub
add
or
dec
fsubrs
cld
jae
jne
sbb
and
movsl
ljmp
mov
dec
and
dec
jge
in
pushf
loopne
xor
adc
addr16
in
cli
mov
sub
in
rol
movb
and
loope
ret
and
jne
adc
int
cmpl
add
leave
fwait
sbb
out
dec
pop
imul
fwait
add
and
xor
push
dec
and
xchg
aas
xchg
imul
nop
adc
sub
clc
push
or
negb
loopne
cmp
pop
popf
dec
imul
cmp
aad
push
pushf
pop
fs
insl
rol
pop
movsb
loopne
int3
movsb
bound
cli
xor
xor
mov
mov
inc
mov
mov
mov
testb
fistpll
sub
out
adc
mov
mov
repz
mov
mov
mov
jmp
cmc
lret
std
in
push
mov
cmpsb
scas
popf
shrb
fsubrs
test
in
lahf
icebp
adc
jae
movsl
icebp
push
cmc
arpl
bound
clc
arpl
das
ret
sbb
mov
xor
imul
sub
push
or
xchg
push
jbe
xchg
fdivp
jg
dec
out
rcl
je
push
stc
dec
mov
ss
xlat
mov
cmp
xor
shr
push
mov
cwtl
push
ret
push
fdivrs
out
fcom
adc
outsl
jge
push
repz
scas
sbb
add
push
ret
sub
vphaddbq
jmp
sbb
or
aaa
xchg
sarl
inc
loopne
inc
out
jo
cmp
xor
daa
int3
dec
inc
repz
xor
out
pusha
stos
test
cmp
sbb
xchg
pop
push
jle
pop
sub
xchg
ret
lret
sbbl
xchg
arpl
dec
dec
sti
add
push
cld
rclb
daa
jl
sahf
nop
aad
push
fstpt
iret
les
sbb
aam
incb
int3
sahf
xchg
sbb
jp
out
ret
xchg
imul
xadd
pop
or
clc
shl
imul
pop
dec
mov
xchg
pop
popa
cli
xchg
and
nop
or
add
dec
repz
mov
mov
mov
xor
add
add
cmp
or
inc
imul
sbb
cli
and
data16
cmpsl
sub
and
aad
adc
out
imul
push
jecxz
bound
test
in
sbbl
dec
rclb
shrl
and
push
or
or
lock
popa
jg
pushf
lret
rorl
inc
ret
stos
pop
dec
mov
movl
sub
js
and
mov
push
jno
lahf
push
jnp
icebp
and
jnp
inc
mov
scas
out
std
shl
cmp
pop
push
xor
fidivl
or
clc
jmp
push
test
xchg
xchg
push
out
rcr
in
or
mov
fwait
jnp
xchg
cwtl
jb
xchg
fbld
pop
in
mov
adc
add
jp
daa
mov
subb
rcr
lea
jb
jb
rcrl
lret
imul
dec
inc
scas
pop
stos
sub
stc
shrl
test
xor
and
arpl
cmp
fiadds
add
outsl
add
add
inc
add
push
add
push
add
add
dec
add
add
outsl
add
add
push
jne
add
arpl
imul
outsb
add
je
add
jb
add
imul
add
add
popa
je
jae
outsb
add
imul
arpl
je
add
add
add
outsb
add
add
js
je
add
je
outsl
jbe
jb
add
popa
add
add
outsl
add
push
add
je
add
add
outsb
outsl
je
je
add
addr16
add
add
outsb
arpl
add
imul
jae
add
add
add
popa
outsb
add
add
arpl
outsl
add
jae
je
