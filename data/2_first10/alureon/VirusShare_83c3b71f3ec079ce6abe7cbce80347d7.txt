nop
xchg
popf
sub
fldl
or
xchg
cmp
stos
sub
or
pop
fdivrs
loop,pn
fistpl
cmp
inc
xor
jno
adc
out
std
iret
aaa
or
push
sarb
repz
jl
xchg
mov
fildl
fldcw
sbb
mov
incl
xlat
push
push
add
fsubrs
daa
popf
sub
cld
into
dec
cmp
ficompl
xchg
mov
daa
sub
pop
and
and
push
and
dec
or
cltd
lret
test
call
seta
push
call
pusha
cmp
jge
shlb
ds
inc
mov
jns
aad
popl
push
mov
cmp
pop
dec
out
out
addl
adc
stc
pop
adc
jo
stos
xchg
mov
popf
inc
sub
xor
jbe
sub
mov
mov
mov
pop
out
xchg
cmpsl
mov
sahf
cmove
mov
pop
jno
in
jne
jmp
push
mov
jne
addr16
idivl
outsl
mov
mov
loop
pop
pop
inc
faddl
hlt
xor
cmpsl
das
push
in
inc
jb
leave
cs
pop
clc
jge
iret
js
std
mov
add
fsubs
ror
jo
adc
xorl
push
cwtl
seta
ficompl
arpl
dec
jmp
gs
cmp
ret
sbb
ss
in
addr16
rcrb
sbb
test
test
leave
jle
int3
or
xor
jae
mov
xor
jg
jb
xchg
push
jge
sub
mov
inc
dec
dec
pushf
push
rorb
cmp
cmpsb
pop
dec
test
mov
pop
out
std
orl
stos
jb
clc
out
lret
aam
in
mov
jne
jne
xlat
sarb
mov
push
jge
add
sub
or
sub
out
or
mov
cltd
movsb
xchg
mov
stos
aaa
sub
adc
adc
cli
mov
mov
sbb
out
outsb
shll
imul
xor
scas
xchg
loopne
pop
mov
imul
mov
jp
xor
roll
adc
out
cltd
sahf
adc
loop
adcl
jp
mov
sbb
and
int3
pop
dec
or
pop
dec
jo
xchg
clc
popa
jg
js
mov
adc
popf
clc
dec
scas
mov
lahf
mov
aaa
push
stos
pop
mov
in
sub
or
inc
mull
outsl
mov
arpl
xchg
pop
popa
sub
mov
jmp
xchg
nop
enter
sbb
jb
cmp
or
cli
aam
jg
nop
sbb
mov
push
sbb
and
jmp
mov
dec
or
sbb
xchg
sub
je
xchg
mov
arpl
popf
adc
orb
inc
ss
out
pop
aaa
pop
cwtl
ret
push
push
imulb
xchg
sbb
gs
jp
mov
inc
leave
xor
add
es
fisubs
faddl
cld
les
mov
mov
imul
inc
stos
dec
rorl
fs
out
in
das
ss
aas
adc
jmp
icebp
xchg
sbb
mov
adc
sbb
sbb
sti
xchg
inc
jb
jmp
mov
inc
inc
inc
rorl
add
add
or
pop
cmc
rclb
add
xchg
and
fistpll
dec
testb
xchg
imul
mov
inc
addr16
ja
jne
ret
pop
idivl
mov
insl
repz
in
push
adcl
cmpsl
xchg
orb
mov
adc
add
arpl
imul
inc
ret
fnsave
cld
xchg
dec
faddl
lods
cltd
int3
repz
push
push
pop
push
mov
enter
cld
movsb
push
int3
loope
sbb
adc
add
inc
xchg
mov
int
jge
aas
lea
pop
movsl
xchg
andl
mov
push
pop
ret
add
jne
cmp
sub
loopne
cmp
mov
in
mov
mov
fmuls
jo
pop
int
sbb
bound
cmp
add
fmulp
leave
mov
das
adc
mov
mov
pusha
fildl
fstp
pushf
mov
or
mov
lret
push
mov
pushf
mov
loopne
mov
push
xor
les
mov
pop
shlb
sbb
and
popa
cmp
faddl
leave
adc
sub
aas
into
fisubrs
sahf
setl
or
xchg
jp
in
or
aaa
jp
mov
push
sahf
icebp
sbb
bound
in
andb
xor
xchg
jecxz
jb
loopne
in
xor
out
add
lds
mov
movsl
pop
mov
xlat
cmp
in
push
and
xchg
insl
dec
aas
in
and
es
stc
scas
icebp
adc
repnz
popf
stos
fildll
out
lock
icebp
pop
xchg
nop
repz
idivb
push
mov
dec
inc
call
inc
add
call
push
call
inc
add
xor
add
lea
call
and
inc
mov
add
inc
inc
inc
and
add
lea
mov
mov
dec
dec
call
add
add
add
and
dec
call
mov
call
inc
mov
inc
xor
mov
lea
movzwl
mov
and
pop
mov
dec
and
add
mov
pop
mov
lea
pop
or
dec
dec
mov
pop
lea
lea
xor
movsbl
lea
mov
lea
lea
pop
mov
mov
pop
mov
xor
mov
lea
sub
call
sub
dec
mov
add
ret
xor
inc
push
add
add
push
lea
push
lea
and
push
dec
mov
push
add
inc
mov
add
add
push
ret
push
and
inc
add
dec
mov
mov
movzwl
push
movswl
dec
dec
call
pop
ret
jmp
or
and
mov
mov
movzbl
imul
sub
xchg
xor
movzwl
sub
mov
xor
imul
sub
or
mov
inc
mov
movsbl
dec
jne
or
mov
or
mov
pop
lea
movsbl
pop
sub
mov
pop
inc
mov
movswl
dec
add
dec
mov
dec
add
inc
and
add
ret
push
push
imul
sub
push
add
dec
add
mov
inc
mov
push
inc
sub
and
xor
push
lea
add
sub
mov
mov
imul
and
push
sub
mov
inc
push
mov
or
xor
or
dec
push
lea
lea
push
inc
inc
pushl
dec
call
inc
add
inc
dec
inc
dec
add
movswl
lea
pop
ret
dec
cmp
jb
dec
xor
inc
inc
mov
dec
mov
mov
sub
inc
add
sub
add
dec
movzwl
mov
mov
add
lea
cmp
jb
inc
pop
xor
add
imul
sub
inc
lea
inc
sub
or
sub
sub
inc
movsbl
sub
xor
dec
sub
xor
movzwl
add
mov
lea
add
test
jbe
movzbl
sub
dec
dec
inc
mov
inc
inc
imul
and
add
sub
mov
sub
lea
movzbl
movsbl
add
dec
inc
and
mov
mov
inc
lea
mov
inc
add
mov
mov
mov
mov
imul
movzbl
mov
mov
sub
lea
dec
jne
sub
mov
lea
dec
mov
mov
add
mov
and
sub
lea
mov
imul
inc
mov
lea
inc
mov
inc
inc
mov
movzwl
movsbl
test
jbe
sub
inc
dec
mov
imul
add
mov
lea
lea
mov
mov
inc
mov
mov
mov
inc
inc
mov
mov
inc
xor
dec
and
inc
inc
mov
inc
add
movzbl
inc
movswl
add
and
mov
and
dec
lea
mov
add
or
movzbl
lea
xor
mov
lea
sub
mov
movswl
mov
movzbl
inc
mov
add
mov
jmp
push
dec
sub
dec
mov
inc
add
movzwl
mov
inc
lea
mov
movswl
mov
dec
add
mov
inc
mov
mov
inc
dec
add
and
imul
dec
inc
imul
lea
inc
dec
lea
add
lea
inc
movswl
lea
sub
sub
mov
cmp
je
mov
mov
xor
push
mov
call
call
mov
movswl
call
call
mov
dec
add
lea
dec
imul
lea
ret
mov
mov
pop
lea
ret
push
lea
or
inc
lea
inc
push
movsbl
mov
push
xor
push
sub
push
add
sub
dec
mov
mov
call
dec
push
sub
sub
xor
mov
sub
add
neg
sub
add
sub
inc
add
imul
mov
mov
lea
mov
dec
dec
inc
sub
lea
dec
je
inc
add
add
mov
xor
dec
mov
mov
dec
dec
and
repnz
inc
imul
add
inc
jmp
add
movsbl
mov
mov
add
movsbl
imul
mov
jmp
movswl
lea
mov
mov
sub
mov
mov
or
pop
pop
ret
push
add
mov
movsbl
add
lea
inc
inc
mov
xor
add
mov
mov
lea
imul
dec
mov
and
lea
lea
movzwl
mov
xor
add
movswl
xor
add
dec
pop
ret
sub
or
mov
mov
lea
mov
mov
dec
mov
or
movsbl
mov
dec
imul
xor
sub
add
mov
movzbl
add
inc
dec
or
add
xor
inc
dec
cmp
jb
sub
push
add
dec
push
inc
lea
push
movswl
mov
xor
sub
lea
xor
mov
add
xor
dec
mov
push
lea
dec
mov
dec
dec
xor
dec
lea
mov
sub
mov
add
sub
movzbl
imul
lea
add
imul
add
inc
add
inc
inc
movzbl
or
inc
add
add
lea
dec
add
sub
inc
imul
dec
mov
dec
dec
dec
mov
mov
jmp
mov
jmp
mov
lahf
mov
in
xchg
inc
cmp
outsl
sbbl
xchg
add
aaa
mov
pop
jl
nop
pop
push
andb
sub
dec
inc
sbb
or
or
sub
pop
adc
mull
xor
push
push
jp
and
dec
sbb
in
jbe
hlt
push
adc
mov
pop
inc
jae
dec
divb
fidivl
lea
pop
arpl
dec
adc
lea
test
test
std
jl
movl
jmp
arpl
test
pushf
cli
mov
hlt
in
cmp
outsl
lret
and
or
pop
ret
ss
dec
in
pop
cmp
test
fsubrs
xchg
stc
fwait
and
rcrb
xor
pop
sbb
jno
movsl
imul
sar
ljmp
jge
popf
pop
insl
adc
test
divb
add
icebp
mov
fldenv
cmp
in
jg
ja
insl
pusha
stos
adc
int
add
fwait
dec
xor
mov
inc
mov
add
cltd
stos
imul
pop
outsb
push
push
cltd
add
mov
ficomps
inc
and
ret
cmpsl
xor
arpl
xchg
lcall
fs
inc
push
aas
adc
ds
mov
daa
pop
mov
inc
or
call
push
or
mov
xchg
cmpsl
out
lods
movsl
mov
pop
scas
jnp
sub
lods
jno
add
pop
jmp
inc
jns
lret
outsb
dec
icebp
movsl
sahf
cmp
inc
adc
push
pushf
in
cs
in
xchg
mov
iret
xchg
js
adc
enter
and
rcr
lds
fnsave
icebp
subl
int3
xor
inc
clc
jne
jno
jns
mov
add
pusha
cmp
and
inc
adc
pop
bound
stos
add
and
sub
test
int
insb
fists
gs
dec
cmp
cmp
test
fisubl
jns
jg
push
fadd
nop
mov
ljmp
cmpsb
mov
lods
pop
cwtl
fistl
jno
add
lahf
in
push
insl
sub
lods
cli
ss
lret
push
fdivl
in
mov
jecxz
call
out
lahf
loop
ds
rcrb
cli
stc
lods
bound
push
jnp
mov
cmpb
mov
subl
xchg
mov
pop
fstl
sbbb
dec
inc
daa
lcall
stos
outsl
int
dec
insb
js
ret
xchg
and
push
mov
pop
ljmp
xor
lds
bound
repz
shl
adcl
imul
int
cmp
cwtl
fisttpll
push
pop
sub
std
mov
pop
test
add
cld
jle
imul
inc
into
add
into
addr16
cld
sub
xchg
ja
sahf
aad
sbb
cmpsl
dec
jmp
adc
add
sub
lods
adc
loopne
sbb
cs
loope
xchg
repz
dec
stc
fwait
test
lret
inc
mov
xor
ljmp
loope
jge
xchg
je
ja
popa
in
arpl
jl
xor
inc
popf
xchg
pop
rcll
mov
push
cmp
adc
flds
adc
cli
jl
ljmp
in
int3
add
mov
jns
fsts
mov
lahf
subb
push
mov
xchg
xlat
mov
and
or
call
adc
pop
test
int3
mov
push
push
mov
int3
mov
xchg
xchg
dec
cmp
fisttpll
mov
mov
dec
xchg
shl
loope
mov
xor
or
xor
fimuls
dec
jge
outsl
dec
mov
cmp
out
mov
test
pmullw
inc
push
les
mov
mov
in
jge
xor
shll
loope
test
leave
outsl
dec
out
addr16
fs
push
xor
int3
and
dec
mov
xchg
lock
jl
lahf
jge
ret
nop
das
xorl
popa
xchg
mov
cmpsb
loopne
jns
popl
nop
daa
loope
push
xchg
xor
sub
jl
faddl
imul
cvtpi2ps
adc
pop
loope
mov
xor
in
prefetcht1
lahf
loopne
jmp
add
pushl
mov
and
or
fcmovnb
les
fldt
pop
cs
or
or
mov
xchg
jmp
fwait
call
xlat
lcall
mov
aad
test
add
jle
jo
pusha
jnp
addr16
sub
ret
in
pop
out
std
fstps
push
sbb
fldenv
scas
push
sub
rorb
outsb
or
cmp
shll
stos
mov
dec
xchg
push
inc
loope
xor
cmp
mov
insb
xchg
or
inc
gs
popf
cmp
push
faddl
pop
mov
sti
sarb
fnstenv
adc
pop
jmp
dec
pop
xchg
adc
inc
cmp
cmp
fs
lahf
sbb
xchg
mov
jns
fnstsw
cmpsb
and
mov
jecxz
dec
jge
js
ss
mov
fadds
je
cmp
faddp
pop
imul
repnz
mov
jo
leave
mov
mov
loopne
loopne
sub
test
mov
cmpsb
test
push
stc
je
pop
fstpt
std
add
insb
insb
push
sti
adc
mov
inc
int
adc
fxtract
inc
shlb
cwtl
jecxz
mov
mov
das
test
jl
lds
mov
add
xchg
lea
in
jnp
sub
inc
xchg
faddl
ret
cmp
cwtl
xchg
push
xor
jbe
das
mov
fisubl
imul
mov
mov
ja
sahf
xchg
roll
pop
std
cmpsb
fidivl
aam
mov
cmc
inc
jmp
mov
push
pusha
xor
xchg
push
push
scas
repz
stos
loope
int3
shr
mov
mov
push
add
xchg
xchg
ret
adc
mov
jo
mov
cs
out
add
mov
jnp
push
mov
aam
xor
mov
jp
lahf
lds
das
adc
mov
xor
aam
aas
arpl
repz
adc
aaa
push
std
ret
addl
cli
mov
into
jp
mov
dec
pop
dec
nop
and
subl
push
pop
xchg
push
addb
insl
std
xchg
in
out
jbe
push
ret
ror
idivb
mov
pop
in
sub
xchg
pop
cltd
movsl
lret
in
test
insl
mov
popa
push
cmpsb
mov
or
popf
push
xchg
cmp
push
stos
adc
pushw
pop
pop
mov
clc
xor
add
pop
iret
add
add
cli
mov
push
dec
daa
mov
cmp
ljmp
mov
xor
sti
sarb
gs
push
movsb
es
dec
sbb
icebp
aaa
push
icebp
in
outsl
push
in
out
or
jg
inc
lret
and
mov
enter
cmp
cld
in
fldenv
sarl
cmc
lds
jmp
fimull
jns
push
xchg
adc
cs
mov
ds
pop
xsaveopt
mull
xchg
push
addl
aaa
and
sub
jae
rcll
sub
fucomi
mov
mov
add
mov
aas
leave
loope
scas
pop
repnz
repnz
mov
je
cmc
insl
int
adc
push
enter
sub
sbb
xchg
imul
sar
pop
shlb
and
adc
add
add
add
add
ljmp
add
or
add
dec
add
js
add
stos
dec
push
lds
jp
mov
adc
inc
mov
cmp
fmull
pop
call
and
add
push
inc
daa
ds
std
stc
xchg
pop
test
aam
sub
pop
jle
jecxz
jae
or
fs
fisubs
jns
add
fsubs
mov
ds
rorb
xchg
icebp
sbb
imul
mov
pop
repnz
cmp
and
mov
pop
sbbb
hlt
push
jl
inc
push
dec
push
jo
dec
ja
mov
xchg
xchg
xlat
pop
cltd
jg
loopne
fwait
cwtl
xchg
jle
pop
data16
jp
pop
insb
and
cmp
sbb
je
loope
and
sahf
daa
shlb
xor
mov
mov
es
mov
mov
add
push
scas
push
mov
inc
adc
gs
and
fimuls
mov
out
rorb
int3
testb
jae
dec
pandn
movsl
add
pop
and
sarb
dec
xor
mov
xchg
pop
stc
imul
mov
ljmp
in
xor
hlt
sbb
daa
stos
push
push
xchg
add
lock
xlat
lea
mov
sub
mov
nop
inc
das
xor
jo,pt
mov
jge
stc
mov
inc
stos
out
mov
inc
rorb
outsb
cmp
mov
dec
mov
and
aam
and
xchg
mov
lods
cltd
out
sbb
imul
pop
rcrb
inc
mov
addr16
call
push
sbb
loop
outsl
push
lods
inc
sbb
test
add
mov
loopne
fistps
fwait
fwait
add
adc
inc
push
loop
je
gs
fcomi
inc
mov
cld
lock
aas
leave
je
xchg
xchg
mulb
sbb
xchg
fucomp
shl
cwtl
jae
jbe
add
fmuls
sbb
add
sub
fdivr
pop
fnstsw
cmp
push
fsub
sbb
and
pop
and
lea
shrl
lds
xor
cltd
mov
fcomip
rcl
pop
les
xorl
sbbl
out
adc
add
sub
adc
or
jb
mov
fs
push
in
or
ss
pop
test
sbb
aaa
outsl
pop
push
ret
cmpsb
pop
cmp
ss
sbb
dec
cmpsb
adc
push
sub
xor
push
fsts
mov
mov
cmp
jns
dec
pop
cmp
mov
popf
fists
stc
mov
shll
xor
mov
insl
lea
and
cmp
mov
jns
aad
inc
xchg
cmp
cltd
cmp
mov
jge
add
out
loopne
cmpsl
adc
mov
out
push
int3
pushw
add
add
jns
pop
xchg
out
in
push
xchg
fisubl
leave
lds
fbstp
loope
mov
out
cwtl
push
call
mov
push
aaa
insb
or
lods
lods
xchg
test
sahf
test
add
stos
shlb
aad
lahf
cmpsb
fxch
add
test
sbb
aas
sub
mov
int
rolb
pop
add
sub
push
loopne
cmp
pop
dec
jno
mov
iret
ss
test
in
jb
push
aaa
push
mov
pusha
push
ret
ret
add
lcall
out
sub
in
push
call
adc
bound
outsb
bound
and
scas
sbb
mov
sub
in
xchg
sbb
mov
mov
dec
scas
pop
repz
and
scas
pop
mov
mov
repnz
push
push
test
and
cmpsl
sbb
inc
ret
movsb
jecxz
out
repz
push
and
mov
je
test
sahf
loopne
leave
add
or
xchg
pop
fcmove
sbb
xchg
rcr
pop
fmull
push
cmpl
les
inc
jb
dec
cmp
iret
cmp
push
mov
mov
xor
adc
push
push
test
movsl
add
cmpb
cmpl
outsb
xor
out
nop
push
in
push
loope
popf
jmp
mov
js
rolb
pop
jg
inc
sbbb
dec
js
jno
popa
add
pop
push
js
mov
mov
andl
add
xchg
xor
mov
sbb
fistpl
cli
adc
xor
les
cmpsl
adc
xchg
inc
popa
minps
sub
iret
and
inc
or
inc
hlt
fbstp
cmpsl
fdivrs
lahf
test
out
xorb
cmp
inc
out
ja
imul
rorb
testb
fdivp
jo
in
or
push
sub
pop
mov
sti
fadd
dec
aaa
pop
or
pop
inc
xchg
jl
inc
jno
aad
sbb
sub
shlb
lret
mov
add
test
out
xor
ret
lret
stos
fucomip
jge
push
bound
aad
jns
inc
ss
sbb
fisttpll
lock
popa
or
test
roll
jg
push
dec
mov
out
ljmp
sbb
add
fadd
sarb
jl
test
add
inc
scas
xchg
or
popf
sti
stc
jp
insb
popf
mov
cmpsl
cmp
stc
add
stos
stos
iret
cmc
mov
push
dec
mov
mov
pop
ret
cmp
cmc
testl
stos
mov
lea
push
cmpsb
scas
push
dec
jmp
push
xor
jae
lods
and
fists
aad
push
jae
cmpb
inc
add
popa
push
shrb
fwait
andl
mov
loop
jo
jp
push
lahf
loope
out
xor
into
out
fbstp
lock
xchg
jns
cmp
dec
mov
jecxz
sbb
in
fisubrs
sub
cs
hlt
repnz
lahf
mov
xchg
xlat
push
mov
push
add
and
test
adc
or
jbe
imul
imul
lea
jg
lods
xchg
inc
mov
sahf
sub
push
das
add
daa
xor
or
ja
xchg
cmpsl
jg
push
push
cmp
sub
setg
test
xchg
movsl
popf
xchg
xor
adc
pusha
and
in
fnstsw
xchg
push
icebp
dec
ret
fdivr
rdpmc
pop
lea
sbb
lods
fiaddl
cmp
mov
sub
and
popa
pop
loopne
daa
arpl
cmp
adc
push
mov
test
cltd
movsl
loope
je
scas
stc
bound
sbb
aaa
loope
xlat
xor
or
cmpsl
dec
popa
sbb
ljmp
xchg
xchg
dec
cmp
into
cmpb
push
mov
jg
lods
inc
push
mov
jecxz
leave
sub
arpl
arpl
iret
mov
shlb
mov
jmp
mov
inc
sub
in
jno
and
fiadds
sub
adc
mov
jne
outsb
outsl
mov
int3
in
shrb
lock
pusha
push
lret
mov
cli
dec
mov
aas
aas
jno
outsl
jecxz
jne
fildll
aam
fists
lret
inc
mov
iret
repnz
inc
push
sbb
mov
jge
aam
fcmovne
aas
mov
inc
adc
mov
jl
test
and
pop
sbb
sti
sbbb
fdivrs
xchg
daa
lods
subb
adc
ret
nop
stc
and
push
or
shl
xor
mull
shr
xchg
dec
and
and
jmp
xor
in
xchg
fwait
xchg
mov
cmc
add
scas
push
mov
dec
or
lods
loope
pop
rep
or
ret
mov
mov
imul
lahf
mov
lret
mov
mov
pop
pop
inc
mov
arpl
loop
cs
in
icebp
int3
inc
in
jmp
int
cmp
mov
inc
jb
adc
or
xchg
mov
ret
sahf
arpl
jecxz
fidivrl
daa
leave
xchg
pop
cmp
pop
sbb
sahf
sbb
imul
nop
pop
mov
lahf
cmpsb
pop
xchg
cltd
pop
pop
sahf
out
shr
sti
inc
subb
adc
jmp
sbb
or
mov
sbb
cwtl
mov
mov
sbb
lock
stos
loop
rcrl
daa
mov
stos
ret
jecxz
sub
in
sbb
rolb
jge
push
cli
test
inc
push
mov
cmp
or
mov
movsl
leave
jecxz
addr16
push
or
loope
mov
les
add
sti
movsl
dec
push
inc
dec
out
fwait
push
cs
xchg
mov
jl
dec
dec
inc
dec
cltd
push
in
cmp
in
mov
sub
ret
int3
aaa
pop
xchg
adc
jnp
and
ret
cmp
test
and
inc
scas
cld
push
xor
mov
jo
and
and
push
fdivl
enter
mov
gs
mov
aad
aas
sbb
out
mov
sub
scas
int
jg
dec
and
cwtl
push
push
adc
insl
and
push
out
out
arpl
cs
push
in
in
repnz
mov
lcall
jns
test
gs
stc
lods
mov
aad
mul
aaa
sbbl
les
in
loop
cmpsl
lea
pop
es
and
lret
inc
pop
cmpsb
pop
add
sbb
mov
xor
add
xchg
aas
sub
divb
cmp
rclb
push
jns
cltd
jo
push
xchg
pop
lods
shrb
adc
cmc
out
mov
fldenv
push
xlat
inc
addr16
int3
pusha
orl
mov
or
mov
ja
fs
pusha
pop
mov
mov
adc
cld
adc
xchg
mov
push
out
lret
ret
jp
pop
ret
insl
sub
add
mov
cld
or
mov
loop
in
jb
cltd
adc
subl
dec
add
jno
pop
arpl
fucomi
fdivs
lcall
add
mov
cmp
cmp
clc
pop
adc
or
lret
push
addr16
sub
dec
mov
fldenv
shlb
dec
stos
scas
push
xor
sbb
cmp
pop
cmpsl
das
inc
dec
ret
enter
je
or
stos
dec
adc
adc
mov
add
sbb
jmp
mov
mov
sub
into
mov
popf
and
push
cmc
pop
mov
cmp
daa
outsb
add
pushf
sub
repz
mov
mov
cmp
repz
rcrl
push
inc
pushf
fwait
daa
cmc
mov
les
cmp
sub
sbb
jae
or
test
cmpsl
repz
mov
cmpsb
sahf
and
in
gs
mov
out
dec
and
sbb
aam
jb
xor
mov
xor
shrb
or
or
adc
mov
or
dec
loope
jmp
push
inc
bound
leave
xchg
adcl
jge
mov
enter
test
es
mov
ds
or
xchg
push
es
dec
jmp
jae
cld
lods
xlat
icebp
and
xchg
sub
fldl
movsl
aas
sbb
pop
std
mov
iret
jp
int
cli
jns
cmp
imul
adc
cwtl
pop
cmp
test
push
rol
cmp
lahf
dec
mov
xor
cmp
call
pop
xchg
adc
clc
sub
addr16
loopne
cmp
lahf
mov
and
mov
sub
cmc
fwait
sbb
sbb
cs
pop
jecxz
mov
lahf
pop
pop
sti
je
jmp
dec
xor
jge
fninit
outsb
insl
jne
jne
xchg
not
aaa
pushw
dec
push
jns
mov
subb
andb
add
lock
cltd
jp
adc
inc
cmp
sbb
xor
outsb
jle
les
sub
cmp
into
xchg
mov
xor
popa
lds
pop
aaa
mov
in
test
movsl
and
and
or
cmp
out
mov
imul
add
into
jg
out
cmp
inc
sub
dec
inc
nop
add
jne
aad
cmp
mov
adc
fcmovnb
mov
add
sahf
insb
adc
mov
addr16
ja
inc
lret
and
popf
push
pop
pushf
jge
in
sub
cmpsb
cmp
jne
lods
push
out
adc
dec
xor
das
mov
in
insb
cmpsl
pop
fadds
mov
lods
clc
test
and
pop
lods
jle
xor
ret
jnp
inc
mov
in
sarl
fwait
and
add
mov
xchg
test
mov
dec
cmp
aad
mov
push
inc
aaa
sub
xchg
imul
mov
or
xlat
cmp
inc
outsb
mov
lods
insl
scas
in
popf
lods
mov
rolb
adc
cmp
jns
sti
adc
sub
adc
leave
jnp
rolb
cmpsb
mov
imul
sbb
xchg
cmp
mov
mov
cli
shrb
ja
push
jecxz
mov
cmpsl
push
xchg
ret
icebp
les
std
mov
xchg
sub
push
mov
cmp
mov
pop
ja
int3
popf
faddp
jo
jnp
cwtl
pop
pop
testl
xchg
in
aad
push
sbb
mov
sub
in
xor
lahf
xchg
dec
scas
cmpsb
rolb
push
inc
mov
or
aad
ds
hlt
sbb
cmpsb
mov
negl
sbb
ret
or
jae
in
mov
sub
mov
mov
xchg
push
sub
cld
je
out
jg
inc
pop
jge
dec
xor
mov
jbe
xchg
lock
or
sub
cmpsl
outsl
adc
pop
cmp
lods
ret
loope,pn
mov
xor
outsb
popf
add
mov
mov
sub
in
aad
mov
jns
movsb
or
insl
push
jne
lods
push
xorl
dec
or
imul
fs
mov
ljmp
cld
mov
sbb
add
dec
inc
in
and
dec
ds
testl
xchg
pusha
ret
test
mov
repz
and
arpl
fnstenv
push
movsb
clc
scas
std
jecxz
push
hlt
mov
mov
mov
pop
cmp
cmp
mov
pop
jb
lret
das
test
ja
mov
popl
xor
loopne
mov
stc
cltd
in
popf
adc
fisubrl
inc
xor
and
sub
ljmp
cltd
inc
cmp
mov
ret
adc
int
in
or
or
sahf
enter
mov
inc
mov
mov
pop
out
jecxz
inc
lea
jge
pop
les
sbb
inc
mov
sub
out
repnz
sarb
test
mov
or
jle
mov
pop
repz
add
in
push
jp
mov
jle
icebp
push
pop
js
std
movsb
out
and
and
loopne
cmpsb
mov
bnd
les
inc
xchg
lahf
stos
dec
cli
jge
sub
xor
lods
xchg
mov
daa
push
pushf
jge
push
fisubs
shll
test
repz
lcall
imul
push
insl
lea
inc
roll
bound
mov
sti
enter
aad
xchg
jns
push
push
pusha
pop
jb
mov
dec
icebp
lds
daa
cmp
mov
cmpsb
jg
loopne
clc
cmp
rorb
xchg
adc
pusha
cs
fs
adc
in
out
ror
pop
xchg
cwtl
push
xchg
repz
and
xor
push
add
cwtl
repz
setp
dec
ljmp
mov
jle
adc
test
push
push
cmpsb
inc
inc
fidivs
bound
dec
mov
cmpsl
mov
mov
scas
xchg
adc
out
pushl
cmp
out
lds
aaa
dec
divb
call
inc
push
dec
mov
mov
add
movsl
adc
into
jmp
movsb
lahf
pop
stos
fsub
lret
dec
cld
xchg
pushf
or
out
lea
cmp
mov
inc
les
fwait
test
stc
mov
daa
daa
lcall
out
and
clc
add
or
jbe
rorb
or
dec
mov
ficoms
repz
cs
ret
push
adcl
pop
stos
cltd
sbb
je
push
cmp
add
fmuls
out
subb
stos
sarl
or
mov
out
mov
jg
sahf
test
and
xor
into
lock
shll
fdivrs
push
dec
enter
sub
cwtl
out
into
cmp
lock
jo
nop
pop
fcomps
push
cld
sti
cmp
imul
mov
adc
dec
mov
or
fs
or
lret
jecxz
cmp
movsl
leave
es
outsb
call
cmp
pop
push
or
jne
jmp
adc
xor
cmp
sub
insl
or
jns
sbb
push
inc
jl
fldenv
push
push
rcrl
call
cmp
sbb
pop
aam
inc
sbb
popa
add
cmp
fsubrs
sbb
sub
or
dec
mov
je
cmc
mov
outsb
or
cmp
loopne
mov
je
cmc
fldt
sbb
cmp
icebp
dec
push
mov
sub
push
inc
inc
mov
cmp
push
jne
imul
mov
fimull
mov
test
popa
mov
leave
scas
adc
push
shrb
enter
or
in
sub
sbb
sbb
sub
fistpll
test
pop
pop
mov
sub
daa
lock
hlt
lods
clc
cltd
push
push
in
xchg
lcall
sbb
mov
mov
mov
lcall
fildl
xchg
mov
and
addr16
int3
pop
push
stos
sub
fcompl
aas
push
push
cwtl
ljmp
xchg
fwait
xchg
in
pop
or
mov
cmp
xor
inc
sub
inc
cmpsb
inc
in
arpl
movsb
test
pop
pop
repnz
jecxz
mov
and
mov
jge
or
mov
notb
shrb
lahf
js
fldl
addr16
xorl
inc
sbb
xchg
xchg
xlat
daa
push
mov
mov
mov
xchg
repz
imul
pop
xor
dec
cmp
test
popf
aam
mov
mov
cld
and
mov
ljmp
scas
xchg
dec
pusha
ljmp
sbb
cld
mov
dec
incb
sbb
jbe
cli
add
nop
ficoms
stos
mov
arpl
and
and
pop
cld
fimull
fs
dec
jmp
inc
test
push
mov
mov
lret
aaa
int3
dec
mov
add
loopne
mov
jbe
lret
mov
sub
les
sub
outsl
popa
and
or
pop
xor
xchg
fimull
xchg
xchg
mov
mov
and
mov
cmpsl
scas
sti
int3
cmp
mov
jge
adc
mov
addr16
xor
and
push
mov
lcall
adc
inc
xchg
add
mov
sub
hlt
add
jno
push
inc
lahf
out
mov
xchg
adc
sub
jle
cmc
nop
ds
decb
or
rolb
push
add
leave
mov
jns
adc
shld
push
sbb
mov
data16
in
aad
pop
xchg
push
cmpsb
pop
mov
lret
jno
cmp
out
test
and
aam
mov
loop
lahf
insb
adc
out
xchg
xchg
and
xchg
jno
xchg
and
fists
mov
cmp
cmp
lds
xchg
rorb
or
and
adc
les
test
xor
shrb
mov
mov
orb
outsl
adcb
xchg
fidivs
push
addb
lods
pop
pushf
cmpsl
cmp
sbb
adc
mov
jmp
xchg
roll
loop
sbb
pop
dec
sub
jp
ds
inc
dec
insl
stc
inc
adc
push
cli
shll
scas
xor
xchg
push
pushf
push
out
xor
mov
push
and
pop
pop
loope
adc
adc
gs
add
and
shrl
push
rorb
mov
push
les
sub
testb
dec
mov
ljmp
loop
or
inc
xchg
xchg
mov
inc
mov
mov
jb
hlt
dec
enter
popa
jne
imul
xor
mov
icebp
lahf
add
repnz
inc
mov
and
cmp
mov
mov
hlt
or
icebp
mov
sahf
xchg
fs
xor
ret
and
push
mov
cmp
icebp
filds
sub
mov
mov
je
xchg
adc
adc
and
jmp
sbbb
or
pop
les
out
ret
jmp
mov
cmpsl
aam
fistps
imul
cltd
xchg
jmp
cli
gs
pop
das
push
jp
dec
scas
pusha
ljmp
stos
and
mov
push
mov
ret
fsubs
scas
and
adc
mov
aam
pop
mov
adc
pop
subl
xor
and
ja
je
cld
mov
mov
pop
dec
adc
inc
adc
xchg
push
sub
or
cmp
icebp
fistps
adc
fcmovbe
mov
stc
pop
call
jg
movsl
sbb
adc
ret
sub
mov
rorb
scas
movsl
sbb
pop
inc
call
test
out
jne
ja
sub
hlt
cmp
mov
push
mov
enter
incb
addr16
mov
mov
bound
imul
shrl
push
sbb
scas
decl
int
movsl
ror
mov
shrb
inc
imulb
or
ret
and
mov
loop
fisubrs
cmp
call
xchg
ljmp
rcrb
pop
adcl
dec
test
ja
adc
cwtl
xor
pop
and
adc
jb
xchg
aaa
inc
pusha
sbb
inc
lods
stos
xchg
ds
repz
adc
sbb
xchg
xchg
pop
push
negl
dec
sbb
into
aaa
sub
mov
imul
imul
lods
jle
inc
shlb
test
push
psubw
jbe
and
scas
jno
test
push
pop
mov
adc
int
sti
cli
sub
rclb
sub
push
mov
mov
ret
fcompl
lds
lret
mov
ja
ds
imul
pop
outsb
test
outsl
inc
loopne
push
xor
push
insl
push
sub
vphadduwq
addr16
adc
dec
cltd
and
imul
mov
xor
pop
clc
mov
iret
imul
lds
xor
mov
sbb
lret
xchg
nop
pop
outsl
mov
mov
xor
aam
enter
or
add
mov
xchg
in
mov
or
mov
cs
inc
int3
inc
mov
test
aam
into
rcll
and
pop
fisubl
jb
insl
jp
xor
jg
int3
pop
adcb
inc
cmp
dec
cli
xchg
xor
dec
sbbb
xor
xchg
adc
jl
xchg
sahf
xor
sbb
js
adc
mov
mov
push
andl
test
xor
mov
xchg
mov
insb
dec
xchg
and
ror
jae
jo
subb
stos
mov
dec
sub
inc
dec
jp
xlat
xchg
lods
mov
mov
ficomps
fiadds
inc
push
jns
mov
rcl
imul
popf
jnp
shll
mov
push
dec
sub
and
add
xchg
add
aad
test
dec
movsb
or
mov
int
int
data16
lcall
enter
sbb
rclb
fwait
lds
in
inc
ret
jge
lahf
push
push
aam
push
rcll
stc
sub
test
xchg
mov
nop
cmp
fiadds
sahf
lock
sarb
addr16
cmp
subl
jns
cmp
jg
movsl
inc
adcl
add
mov
test
sbb
xchg
test
mov
lea
dec
mov
pop
mov
hlt
add
adc
jg
outsl
test
lods
inc
sbb
imul
push
mov
inc
loopne
or
rclb
nop
in
div
inc
or
mov
lea
sti
push
sub
into
dec
mov
pop
sbb
sti
insb
lahf
mov
xor
jp
orb
fidivrs
adc
jl
push
sbb
bound
or
jg
jle
xlat
ja
jmp
insb
dec
insl
mov
xor
fnstcw
xor
xchg
lea
mov
imul
or
scas
ret
ret
mov
pop
leave
mov
jno
mov
icebp
pop
or
cmp
inc
add
and
inc
inc
ss
jo
mov
adc
sti
fwait
clc
pop
mov
aaa
jne
pop
cld
out
loop
add
mov
sub
cwtl
fidivs
mov
inc
filds
pusha
mov
cmp
jp
data16
jmp
mov
enter
sti
push
add
popf
int3
les
jle
xchg
cs
or
xor
push
lcall
loop
jbe
dec
mov
icebp
shr
xchg
jge
aas
in
mov
mov
in
adc
aam
std
and
dec
add
push
leave
fidivrl
les
stos
lcall
jmp
mov
fsubrl
dec
mov
clc
ja
xchg
xchg
std
pop
xchg
dec
imul
lret
std
gs
movsl
lcall
pop
les
test
bound
icebp
je
cli
and
push
add
jp
cmpsl
jg
lea
inc
test
aam
mov
pop
clc
mov
fnsave
loope
daa
xor
pop
mov
and
or
or
mov
mov
and
jno
push
dec
sbb
mov
sbb
outsb
jecxz
call
dec
mov
fwait
call
test
into
js
out
mov
and
sub
mov
dec
mov
xor
or
dec
int
and
mov
rol
stc
cmp
in
mov
inc
mov
pop
popf
pop
mov
rorl
push
sub
outsl
mov
inc
jns
sub
mov
mov
imul
dec
or
scas
iret
dec
test
push
push
mov
mov
mov
cld
fstp
mov
and
ficoms
in
cmpsl
pop
lock
mov
jg
flds
in
imul
insl
xlat
cwtl
test
test
and
aaa
lahf
cld
dec
hlt
sub
fs
ret
test
mov
push
pop
iret
mov
inc
inc
adc
mov
push
insb
mov
lcall
push
pop
aam
js
pop
mov
sub
jg
std
popa
insb
stos
loop
cmpsl
push
outsb
push
add
jo
rcrb
jge
int
out
inc
fmuls
jo
arpl
add
adc
in
pushf
cld
pusha
jg
scas
lcall
aad
out
test
rorl
push
sbb
mov
out
mov
sbb
lret
xchg
xchg
mov
andb
dec
sub
movsb
cmp
push
fidivs
sbb
adc
xchg
daa
inc
add
cmpsl
dec
mov
pop
mov
xchg
xor
imul
cmpsl
aad
pop
and
pop
dec
xchg
negb
gs
call
lret
enter
mov
xchg
fcmovnb
int
gs
cmp
xchg
jmp
pop
mov
and
dec
jp
gs
and
mov
mov
mov
adc
xchg
jnp
test
into
stos
pop
cmpsb
int
lea
sbb
inc
pop
pop
xlat
in
movsb
popf
fsub
push
std
ss
sbb
lret
xor
cmp
jle
mov
jp
add
xor
xor
insl
xchg
mov
cmpsl
in
xlat
or
sti
push
inc
xor
test
int3
xlat
shlb
fs
adc
movsl
jns
jb
xchg
gs
fcmovbe
xor
and
push
js
cs
nop
mov
ret
dec
jae
mov
inc
mov
cmp
xchg
out
mov
xchg
popa
xchg
mov
call
rcr
popl
mov
call
mov
xor
aas
add
xchg
shlb
gs
push
mov
into
adc
or
inc
loope
sti
mov
shlb
inc
dec
sub
cltd
shlb
pop
mov
cmpsl
je
cli
iret
cld
orl
push
mov
jb
movsb
mov
and
ret
in
push
aam
insl
iret
test
push
out
adc
xor
inc
xchg
fisubrs
mov
pop
jle
xor
leave
in
mov
mov
leave
lods
xchg
das
inc
mov
pop
xor
xchg
mov
jmp
jno
fs
mov
mov
clc
push
lahf
mov
mov
add
push
xchg
pop
adc
fmull
pop
outsb
sbb
mov
xchg
test
test
outsb
push
and
add
sub
stos
and
