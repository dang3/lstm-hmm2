push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
sub
cmp
sub
mov
add
mov
xor
mov
cmp
je
add
sub
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
lea
test
mov
mov
test
jne
jmp
mov
lea
mov
mov
sub
add
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
sub
add
test
add
cmp
jb
pop
pop
ret
push
mov
sub
test
sub
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
inc
pop
leave
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
dec
jne
test
jns
lea
and
or
pop
mov
pop
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
add
cmp
jb
pop
pop
pop
pop
ret
push
push
push
push
mov
call
mov
jmp
push
mov
sub
sub
push
mov
push
xor
push
cmp
jne
push
mov
call
push
push
push
mov
push
mov
mov
call
mov
push
lea
push
xor
inc
push
pushl
mov
call
push
mov
call
push
push
push
lea
push
mov
call
mov
mov
call
cmp
jne
cmp
jne
push
push
push
mov
call
cmp
je
mov
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmp
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
pushl
mov
call
mov
mov
xor
xor
cmp
jae
mov
mov
mov
subl
addl
push
pop
rep
mov
mov
mov
add
sub
cmp
add
mov
movzwl
lea
test
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
sub
lods
xor
stos
add
sub
sub
add
sub
roll
sub
sub
jne
pop
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
lea
test
ret
mov
xor
cmp
je
add
push
add
pop
cmpb
jne
ret
push
mov
or
mov
movzbl
lea
test
mov
mov
lea
imul
add
add
mov
mov
decl
jne
lea
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
add
not
add
not
shr
add
push
mov
add
sub
push
lea
push
mov
call
add
cmp
add
mov
mov
mov
mov
push
popl
sub
test
sub
lods
xor
stos
add
sub
add
addl
sub
roll
sub
push
add
pop
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
sub
add
decl
mov
jne
subl
addl
pop
pop
leave
ret
push
mov
sub
sub
push
mov
mov
add
mov
test
jne
lea
test
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
sub
pop
pop
pop
leave
ret
xor
jmp
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
sub
cmpb
jne
push
lea
push
push
mov
call
sub
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
push
push
xor
mov
push
mov
call
mov
push
push
mov
call
push
call
mov
xor
lea
test
cmp
jne
push
pushl
push
mov
call
jmp
cmp
jne
push
push
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
jne
testl
jne
cmp
je
push
mov
call
pop
test
jne
mov
call
jmp
cmp
je
push
push
push
xor
call
push
mov
call
xor
pop
pop
pop
ret
and
jl
mov
insb
add
add
add
imul
sub
jo
push
and
sbb
pop
xor
fsubp
pusha
fwait
cltd
mov
inc
ficoml
push
adc
inc
mov
fildl
xlat
dec
sahf
imul
sub
push
insl
in
jns
lods
inc
je
and
mov
mov
fidivl
mov
cwtl
cli
push
sbb
dec
adc
stos
pop
adc
test
nop
cli
ljmp
repz
outsb
and
stc
jg
cld
int
push
sbb
dec
or
cmp
movsb
jbe
pop
cld
inc
popf
sbb
outsl
sub
add
xchg
jl
cld
bound
mov
arpl
or
push
adc
loopne
scas
mov
sub
mov
je
push
punpcklbw
rolb
push
jp
fwait
sbb
inc
scas
xchg
jmp
nop
pop
ja
movsb
rcl
pop
aaa
adc
xchg
rorl
mov
stos
adc
cld
add
daa
push
insl
fbstp
out
push
into
or
push
aas
lcall
or
mov
jno
inc
sbb
je
push
sbbl
shr
loop
jp
jg
stos
add
jno
mov
adcl
sarl
mov
adc
roll
mov
mov
fimull
dec
or
cmp
mov
jl
fwait
push
xchg
call
shrb
ljmp
xchg
or
mov
sbb
dec
push
fwait
out
ja
add
pop
arpl
sub
in
and
lcall
dec
je
xor
in
mov
je
cld
or
ja
mov
arpl
xchg
sub
movsb
xchg
inc
jecxz
xor
sahf
cmpsl
in
mov
pop
in
pusha
std
xchg
jl
push
sbb
jge
jno
in
fildl
outsl
and
fcompl
aam
inc
insb
cmp
mov
xchg
cltd
add
xchg
or
or
or
popa
leave
popl
ss
adc
test
mov
imul
sbb
nop
inc
adcl
shll
push
adc
popf
push
push
inc
cmp
adc
cld
into
xchg
ror
xor
add
cmp
xorb
or
xchg
sbb
testl
adc
sti
mov
mulb
shll
jmp
cld
movsb
outsl
imul
inc
cli
jns
and
outsl
lcall
outsl
mov
ret
sub
mov
popf
out
mov
jmp
data16
xchg
and
push
lds
adc
iret
das
cmp
xchg
test
imul
aas
lods
mov
cltd
cmp
mov
inc
notl
xor
test
into
in
cmpsl
inc
xchg
mov
imul
mov
pop
js
lock
xchg
lret
pusha
mov
out
push
hlt
repz
icebp
bound
xor
pop
fbstp
rep
mov
in
ror
push
data16
inc
adc
js
lods
jge
pop
insl
jle
fstpt
fbstp
xchg
jnp
lds
arpl
out
pushf
push
lds
jl
pushf
cltd
push
loop
jne
ds
jne
out
push
dec
sarb
cmovge
loope
insb
pop
mov
adc
ds
aam
sbb
inc
fidivrs
imul
xor
out
push
jmp
mov
addr16
mov
cmpsb
push
mov
inc
out
ds
dec
sbb
pop
push
inc
mov
imul
xchg
pop
cmp
dec
out
outsb
popf
test
call
mov
jbe
leave
cmpsl
xchg
dec
pop
or
std
addr16
push
call
pop
jbe
push
lret
mov
cmp
andl
push
xchg
xlat
lock
mov
push
xor
xchg
lods
and
dec
sbb
jmp
add
inc
push
addr16
out
dec
add
subb
imul
mov
xchg
push
mov
jnp
push
addl
jl
fsts
jmp
orb
mov
aam
jbe
test
jo
sub
cmc
in
loop
fsts
jp
mov
lret
xlat
shlb
roll
pop
mov
push
cmp
push
fwait
in
xor
repnz
rcrl
test
mov
divl
test
sbb
cld
xchg
cli
lret
sbb
repnz
mov
xchg
lret
fsubrs
les
sbbb
or
push
mov
pop
hlt
fstps
inc
adc
and
mov
loopne
ljmp
adc
pop
and
lods
jo
ja
int3
sbb
xchg
xor
jb
push
ret
dec
popf
je
outsl
jge
loopne
cmp
jo
ficoms
inc
cmp
cmp
loope
not
pop
adc
imul
mov
fldcw
cwtl
adc
add
xchg
cmpsb
loopne
or
loope
gs
es
and
mov
in
pop
cmp
pop
cmp
inc
dec
ljmp
or
cmp
sbb
sahf
ja
inc
cmpsl
ret
in
pusha
outsl
mov
fstpl
push
lahf
or
add
cmp
jle
testb
sbb
inc
inc
jge
bts
push
scas
ja
push
pop
cli
int3
fstl
xor
mov
mov
mov
jge
sahf
insl
pop
arpl
xchg
test
pop
inc
repz
int
ss
sub
std
xor
fsts
jb
lret
dec
imul
jle
movsl
outsl
int3
rep
adc
ss
push
or
mov
daa
mov
ss
sti
or
mov
mov
mov
sti
sub
fisubs
setae
and
or
cli
adc
jge
or
incl
mov
mov
pop
jo
pop
pop
xchg
mov
xchg
scas
movsb
fwait
dec
dec
mov
js
lock
pop
rclb
inc
out
mov
call
out
aas
jno
mov
mov
mov
icebp
xor
mov
dec
sar
aad
mov
leave
rclb
mov
and
idivb
pop
push
out
in
adc
cwtl
in
out
lds
in
add
shlb
mov
sub
sbb
fisttpl
lret
cmp
adc
data16
in
scas
mov
add
add
mov
xchg
stos
inc
pop
outsb
pop
push
in
in
insb
inc
in
xchg
mov
mov
lret
pushf
inc
mov
jb
cmp
mov
pop
adc
mov
scas
repnz
xchg
jecxz
sub
or
std
cltd
clc
and
mov
adc
ljmp
mov
lcall
loopne
fcmove
insl
push
jno
jns
mov
ja
fnsave
imul
push
add
test
insl
repz
int
sub
test
jae
fimull
pushf
sub
dec
push
sbb
addr16
or
jp
inc
or
jno
stos
out
stos
or
movb
mov
into
xchg
sbb
adc
inc
movsl
pop
mov
adc
add
cmp
xchg
stc
xchg
fidivrl
inc
jno
repnz
dec
jle
cmpsb
outsl
xor
xchg
ds
lods
repz
pop
push
cld
push
jo
out
sub
ss
fs
fldenv
aad
inc
sub
mov
setp
loop
xchg
adc
pop
sar
mov
test
movsb
fmull
test
jns
cmp
mov
test
add
pop
ds
mov
loope
fsts
lcall
movsl
icebp
dec
inc
jecxz
xor
int
cmp
cmpsb
mov
imul
xchg
mov
mov
jge
loope
enter
add
push
test
pop
adc
pop
paddb
cmp
pop
mov
pop
add
pop
mov
loop
push
outsl
inc
sbb
jnp
sbb
outsb
outsl
lds
stos
sbb
imul
adc
arpl
inc
movsb
call
xor
lods
je
add
inc
xchg
cmp
je
fnstenv
repnz
add
cmp
fucomip
mov
out
pusha
mov
pminsw
pop
jp
or
jne
xor
adc
sahf
jmp
arpl
and
or
pop
icebp
cmpsl
scas
cmp
mov
and
xchg
std
inc
shll
xchg
ficoml
mov
cmpsb
call
pop
dec
jg
fcoml
out
out
mov
xchg
pop
mov
fsubrs
mov
les
pop
adc
sahf
out
cmp
rclb
loop
cmp
push
or
add
jnp
es
int3
hlt
fsubl
jb
jp
jle
icebp
icebp
dec
xchg
xor
add
mov
mov
xchg
popa
jecxz
lods
mov
cwtl
dec
aas
push
jbe
pushf
pop
cmpsb
push
adc
arpl
clc
mov
jge,pt
dec
cmp
iret
cs
cmp
add
and
jp
fistpl
add
jle
pop
adc
sub
sti
aaa
lcall
jg
insl
dec
sub
add
adc
shlb
idivl
inc
mov
lods
mov
push
or
insl
adc
mov
xor
mov
cmpsb
push
sub
push
mov
sbb
adc
mov
dec
add
outsb
pusha
cmp
sbb
push
jbe
or
data16
xor
push
lret
aad
fidivrs
push
xchg
inc
cli
jo
xor
fidivrl
mov
movsl
or
or
repnz
jno
scas
xchg
xchg
and
bound
test
and
jmp
mov
pop
clc
andl
lds
push
pop
pop
mov
mov
pop
xlat
push
int3
adc
scas
imul
jns
jg
push
andl
mov
inc
ljmp
stos
dec
rcrl
xchg
inc
lods
xchg
stc
je
dec
ja
test
or
xchg
es
jbe
jbe
fistpl
scas
and
and
adc
hlt
sub
mov
and
add
sub
outsl
jae
xor
xorl
sbb
orb
movsb
imul
outsb
adc
sub
or
xor
inc
pop
popa
pop
fsts
or
lds
xchg
std
add
add
fnstcw
gs
imul
pop
adc
divl
popa
test
add
xorb
xchg
clc
out
mov
mov
fidivrs
mov
test
aas
add
push
ret
or
movsl
fadds
inc
add
jg
cmc
loope
xor
aaa
or
pop
jb
andl
xchg
and
loope
loopne
sahf
mov
jne
jmp
xor
dec
pop
popa
mov
push
and
xchg
andl
sbb
and
addr16
sarl
aad
enter
mov
loope
rcrl
mov
jnp
bnd
and
pusha
push
aam
push
mov
dec
in
nop
push
test
enter
loopne
bound
in
mov
xor
mov
std
or
jnp
jle
rcr
add
lret
pop
cmp
and
mov
cmp
enter
dec
jns
mov
loopne
bound
lods
pushf
mov
cmp
std
je
sub
mov
pop
aas
and
or
mov
mov
dec
add
rorl
pop
sarb
cwtl
cs
sbb
dec
popf
push
or
cmp
ljmp
cmp
jecxz
nop
add
or
aaa
fucomip
js
push
mov
xchg
pop
mov
scas
jne
cltd
scas
lds
jnp
mov
push
push
lea
inc
xor
imul
test
subb
mov
shll
mov
adc
pop
mov
mov
lods
clc
andl
lahf
out
inc
loop
scas
sahf
loop
xorl
sbb
sarl
daa
xor
mov
pushf
ret
mov
push
adc
jge
and
mov
push
outsb
mov
dec
hlt
jno
les
jle
jnp
cmpsb
sbb
jecxz
mov
popa
fmul
inc
sub
push
or
or
pop
xchg
stos
cmp
mov
or
mov
sub
push
in
sti
ds
bound
push
fstps
jge,pn
or
mov
fisubrl
pop
jb
aad
xchg
mov
mov
lods
cld
rcrl
mov
cwtl
and
pop
add
lods
push
add
or
nop
mov
mov
inc
adc
cwtl
dec
cmp
adc
mov
cmp
fsts
mov
les
pop
fistpl
scas
mov
or
mov
adc
call
cmc
insb
xchg
popf
mov
addr16
sbb
je
xchg
cmpsl
dec
xchg
add
outsl
jmp
cmpsl
stc
repz
sub
dec
mov
add
mov
mov
rcrl
jae
in
add
xor
and
insb
je
mov
xchg
repnz
outsl
lret
add
popa
mov
xlat
dec
cmp
pop
ja
ds
pop
ss
push
shrb
jg
mov
fsubrs
shlb
mov
xor
sub
cwtl
rcr
mov
dec
sbb
aad
aas
mulb
and
mov
and
inc
arpl
addr16
pop
rcll
sbbb
into
into
jp
dec
mov
out
out
mov
stc
outsl
jnp
lahf
in
add
xchg
mov
xchg
xchg
std
sbb
loope
jo
sahf
gs
mov
mov
push
das
aad
adc
in
sbb
pop
xchg
test
mov
push
fs
pop
sti
loop
mov
stos
mov
push
adc
mov
mov
jmp
shl
call
push
nop
add
add
rcr
std
lock
mov
stos
push
dec
and
rorl
dec
mov
call
jne
inc
xor
loope
mov
cs
outsl
jecxz
xlat
or
je
lods
jg
fstp
out
pop
jb
sub
mov
mov
mov
dec
sbbb
cwtl
pop
ror
xchg
fs
out
lea
fnsave
pop
pop
stos
stos
jns
sbb
int3
mov
add
fsubrl
mov
sub
int3
xchg
mov
out
out
jne
sbb
mov
daa
fsts
adc
es
mov
inc
mov
mov
outsb
les
sbb
xor
int
add
xor
mov
std
stc
jp
sub
aad
xchg
es
mov
cltd
ds
or
pushf
jae
shrb
jne
lds
loopne
dec
dec
scas
sti
scas
cmp
or
out
mov
gs
cli
xor
rcrb
jb
push
mov
xchg
add
inc
fstpl
lret
mov
inc
std
and
cmp
mov
lret
cs
adc
xlat
inc
bnd
fadds
push
adc
je
loop
inc
jg
cmp
out
das
orl
mov
push
xorl
test
pop
push
bound
jne
or
imul
fmull
mov
cmpsb
and
bound
rcrb
cli
xchg
arpl
add
sub
gs
jo
cmpsl
push
jb
cmc
add
push
clc
push
mov
fidivl
jnp
push
lea
arpl
pop
aaa
mov
adc
xor
xchg
inc
xorl
xchg
push
divl
in
icebp
in
ds
fsubs
imul
xlat
lods
jg
dec
xorb
fucomp
or
fs
into
outsl
test
fiaddl
jmp
mov
lods
mov
and
push
sbb
xor
jle
inc
push
rolb
inc
add
mov
clc
add
int
sub
xor
sbb
cmp
and
popa
sahf
fstpt
jb
mov
or
sub
idivb
dec
pop
dec
popa
das
xor
mov
cs
jl
sub
adc
movl
jle
and
pop
test
xor
out
mov
dec
icebp
lds
dec
pop
mov
sbb
fs
dec
fs
imul
lahf
xor
enter
mov
movsb
aas
test
and
dec
mov
xchg
pop
imul
add
inc
xor
jmp
cmp
push
and
sbb
lds
mov
mov
and
pop
cmc
ja
in
jbe,pt
scas
mov
test
xchg
mov
cmove
and
inc
mov
and
je
fdivrs
push
jnp
cltd
inc
mov
aaa
push
sub
xor
rolb
inc
add
fcomp
lcall
ret
mov
cmp
xchg
xchg
push
sbb
ljmp
fiaddl
jae
push
movsb
push
sub
jmp
lret
addr16
imull
mov
and
movsb
adc
xchg
dec
or
hlt
outsl
jmp
push
aam
lret
dec
mov
mov
adc
daa
ret
fcoml
in
repz
test
imul
adc
jno
clc
and
ret
jae
or
lcall
xchg
xor
push
in
fcmovnb
adc
sti
iret
mov
and
fdivrs
xchg
les
mov
movsb
push
cmpsb
les
adc
or
push
jae
scas
lcall
adc
mov
adc
mov
push
xchg
dec
ja
push
sub
fnstenv
test
aad
daa
cmp
lret
in
push
sbb
xor
xchg
mov
ljmp
ds
movsb
and
fildl
sahf
ror
cmp
push
mov
or
mov
das
cmpsl
or
inc
cli
std
pop
movsl
stc
and
inc
pop
push
pop
fadd
jmp
adc
and
out
fidivrs
add
pop
gs
push
push
cmpsl
push
shrb
out
jno
jnp
into
lret
imul
hlt
test
icebp
sub
fs
push
mov
stos
add
in
dec
dec
jbe
adc
sbb
jns
xlat
cmpsl
loop
into
int
cmp
sbb
or
in
in
insb
jnp
add
call
loope
ja
or
sbb
add
jecxz,pn
arpl
sbb
insb
out
inc
int3
fldenv
imul
cwtl
shrl
jp
cwtl
les
andb
cwtl
shl
sub
lcall
repz
sub
ret
pop
int3
push
xor
pop
ds
lcall
pop
stc
push
and
push
hlt
add
ret
subl
adc
jg
sub
outsb
rorl
sub
lcall
outsl
movsl
pop
fcompl
es
fcoms
adc
jno
push
mov
int
lods
xchg
lcall
push
add
xchg
mov
mov
mov
and
pushf
or
lods
fs
neg
inc
outsb
lea
sub
popa
pop
xchg
fistps
lods
pop
loopne
inc
es
das
xchg
inc
out
fstl
andb
jmp
mov
jno
jo
ret
loope
jg
dec
mov
pop
into
arpl
das
inc
mov
adcb
fwait
into
mov
sbb
neg
mov
fstpl
jecxz
in
mov
mov
cmpsb
imul
jecxz
in
test
roll
in
rol
push
inc
and
dec
xchg
mov
mov
inc
clc
adc
mov
movsl
scas
mov
popa
in
jbe
ja
movsb
fwait
xor
pusha
sbb
push
insb
test
mov
dec
test
push
and
clc
outsl
add
jmp
dec
out
or
ret
jmp
ss
addl
pop
mov
lods
xchg
es
xor
mov
add
mov
mov
sub
push
sbbl
cltd
mov
xor
xlat
daa
cmpsb
sbb
mov
mov
stc
aad
xchg
andb
out
sbb
adc
mov
das
sub
jno
xchg
stc
mov
int3
iret
mov
decl
or
push
inc
dec
cmp
lahf
xor
subl
ficoms
sub
adc
in
xlat
inc
dec
daa
cmp
daa
js
aas
sarb
sub
mov
mov
cmp
mov
pop
ja
int3
mov
sub
mov
or
xchg
shlb
je
sbb
jp
in
insb
jns
cmp
inc
aad
or
or
cmpsl
shl
fimuls
adc
xchg
adc
cmp
mov
ret
lret
sahf
das
mov
lods
les
movsl
repnz
jmp
inc
into
jg,pt
ret
fcomi
pop
push
and
gs
xchg
int
test
jb
or
mov
fidivrs
hlt
or
frstor
mov
ljmp
adc
loopne
rolb
cmp
lahf
fdivrp
incb
xor
inc
lahf
movsl
pop
aam
xchg
std
push
mov
pop
cltd
add
push
xchg
out
push
xor
sub
pushf
add
mov
pop
rcr
pop
shll
pop
stos
addr16
decb
or
cmp
mov
inc
mov
cmp
call
or
dec
sub
movsl
cmp
movsb
lods
aam
mov
jmp
fwait
out
stos
push
in
and
mov
inc
push
add
or
cmp
pop
cmpsb
adc
adc
bound
and
xor
aam
inc
lret
pop
mov
dec
mov
add
test
mov
or
fidivs
jns
sub
mov
mov
mov
pop
xor
jo
test
add
and
inc
and
mov
ret
sbb
call
lea
inc
mov
dec
out
inc
sub
inc
sbb
lods
in
cmp
and
mov
mov
jg
pop
subb
scas
ret
dec
sti
repz
aad
dec
push
and
out
insl
ds
aam
out
lea
dec
mov
les
fwait
sbb
lock
xchg
je
mov
mov
xchg
inc
mov
jp
ret
sbb
call
jb
jo
and
dec
lret
pop
insb
stos
mov
call
ret
sbb
push
sub
js
sarb
aad
sbb
addr16
push
add
lock
iret
push
mov
mov
popa
mov
dec
adc
hlt
lock
mov
sub
loop
iret
mov
stc
mov
fiaddl
shll
notl
pop
rcr
and
lods
xor
cli
push
push
imul
adc
sbb
jae
mov
lods
and
and
ret
loop
jp
and
mov
adc
mov
sbb
fiaddl
and
rclb
loop
mov
iret
pop
loopne
loopne
divb
es
out
ss
sahf
jne
insl
xchg
gs
xchg
push
xor
icebp
pop
cs
call
movsl
dec
test
popa
gs
jbe
sub
xor
out
pop
fcoms
repnz
mov
in
filds
aam
fistps
xor
mov
xor
dec
daa
out
lds
jbe
add
push
jnp
pop
jb
xchg
mov
jg
stos
xor
mov
je
xchg
xlat
xor
popa
std
sbb
xor
jecxz
lret
push
mov
iret
dec
insb
mov
in
lods
add
jl
in
cmpsl
or
cs
mov
fdivr
iret
loopne,pt
cs
jbe
and
pop
into
dec
lahf
jns
cmp
jge
mov
push
aas
inc
add
xchg
icebp
add
push
sub
add
jle
mov
imul
jg
daa
inc
xchg
dec
mov
xor
aam
mov
ljmp
add
cmp
lock
mov
cmpsl
popa
cmp
add
stos
inc
xchg
or
sbb
loopne
ljmp
popa
inc
xchg
adc
xchg
inc
pop
xlat
adc
cmp
dec
jg
sub
pop
and
shl
gs
fcoms
mov
into
jg
lods
or
ja
jecxz
cmp
add
cmc
adc
pop
xor
pop
cmp
jbe
lds
or
jo
in
lahf
mov
repnz
push
test
stos
pop
and
add
push
nop
mov
cmp
pop
jo
daa
mov
roll
or
pop
cli
jo
cmp
and
inc
in
ret
fisttpll
push
dec
jl
out
mov
jno
adc
lret
pop
mov
rolb
xor
das
sbb
mov
out
xor
pop
jecxz
or
xchg
movsb
xchg
shl
sub
mov
lret
mov
lret
outsb
jo
lods
shlb
push
scas
repnz
mov
jge
mov
and
sub
mov
sbb
jl
push
scas
push
lret
aad
gs
sub
push
adc
jne
push
mov
out
pop
out
and
pop
and
adc
adc
pop
enter
jp
out
jmp
jmp
mov
pop
mov
hlt
add
dec
jge
mov
xchg
add
aas
loopne
pusha
or
test
sub
xor
push
dec
mov
pop
or
cld
pop
lea
inc
pop
insl
cmc
js
mul
lret
ja
rol
cmc
nop
sbb
clc
loop
fwait
and
pushf
cmp
or
in
arpl
stos
jl
shlb
scas
std
data16
inc
or
add
clc
sbb
fcmovnu
fimuls
into
iret
les
insb
nop
sbb
cwtl
cs
movsl
jg
in
mov
lock
sti
inc
in
dec
fdivrl
xlat
sbb
arpl
mov
xchg
outsb
movsb
jno
das
inc
sbb
mov
loope
add
mov
xchg
mov
mov
ret
pop
aas
mov
xor
lcall
dec
jnp
clc
in
lret
sub
sbb
push
push
into
rcl
sbb
imul
ja
bound
arpl
enter
aad
jns
enter
inc
sub
ror
es
fcomps
and
sbb
pop
fwait
out
push
ljmp
inc
dec
or
mov
movsb
jns
ret
fld
fistpll
sub
mov
xor
mov
in
test
cli
push
out
sbb
int
fsubs
dec
out
insb
push
dec
xor
imul
lock
outsl
push
not
mov
mov
or
mov
push
fwait
rcrl
hlt
mov
data16
sub
mov
popl
test
or
push
mov
push
cmp
bound
adc
je
jne
shlb
mov
repnz
repnz
cwtl
enter
enter
sub
or
dec
xchg
adc
js
cltd
xchg
jge
popa
pop
outsl
pop
das
push
add
lret
sbb
stos
jecxz
js
addr16
cs
push
int3
mov
enter
inc
dec
xor
shlb
pushf
in
add
fcoms
out
lret
rcll
ret
cmp
xor
test
inc
inc
pushf
cmp
call
adc
sti
xchg
push
adcb
xchg
mull
icebp
outsw
je
adcl
cmpsb
sahf
mov
call
rol
scas
sbb
mov
in
cmp
les
push
jl
xor
push
pop
adc
xchg
mov
and
aam
rorb
roll
jecxz
cmp
pop
jecxz
pop
adc
jge
sbb
dec
pop
and
pop
add
loop
out
adc
pusha
ror
push
inc
stc
or
or
ja
in
pop
dec
mov
in
aam
sti
pop
jg
mov
cmp
push
imul
mov
jno
mov
test
push
pop
jo
inc
fstl
inc
sbb
repz
xor
imul
pop
inc
mov
nop
xchg
mov
lahf
int
fcoml
data16
cmpsl
insb
pop
insb
sub
mov
pop
mov
xchg
inc
and
add
dec
sub
sbb
xor
fldt
je
add
push
sub
pop
mov
and
sbb
sub
jae
or
push
add
cmpsl
sbb
outsl
call
jp
jo
dec
xchg
arpl
andb
jmp
mov
stos
in
repnz
pop
mov
or
scas
xor
xchg
xchg
pop
cmpsb
bound
lea
data16
mov
rclb
lods
sub
inc
sbb
loop
testb
mov
or
cwtl
imul
movsl
sub
sub
and
pop
cmp
sti
mov
hlt
sbb
inc
push
cmp
mov
dec
mov
jnp
aam
cld
xchg
jle
cmp
mov
dec
sarl
sahf
mov
lea
xchg
ds
enter
fwait
jb
notb
dec
pop
outsl
pop
pop
and
dec
std
sub
jl
or
jbe
pop
sbb
cmpxchg
int
sbb
sub
inc
add
dec
mov
cmp
jns
sbb
fadds
lea
nop
loope
inc
mov
push
dec
je
xor
int3
pcmpeqw
icebp
xchg
stos
fsubs
movsl
stos
hlt
ss
cmp
sbb
cmp
jl
xlat
push
jmp
mov
xchg
push
in
data16
leave
mov
dec
nop
mov
ljmp
mov
ds
ljmp
loop
popa
mov
lahf
add
adc
ljmp
hlt
sarl
push
or
mov
fwait
sbb
arpl
sbb
gs
mov
je
stos
xchg
les
dec
dec
cmp
mov
stc
xchg
xchg
sub
addr16
cmc
loope
ficoms
dec
test
fdivp
jmp
cmp
sbbl
mov
jae
or
inc
sbb
cs
arpl
sbb
and
and
sbb
rclb
aas
xor
lahf
mov
add
in
addl
shlb
mov
loope
add
mov
mov
loopne
loop
mov
lret
and
loope
test
jl
sbb
aad
xchg
xchg
push
xchg
nop
int
jbe
mov
js
icebp
jno
movsb
xlat
jmp
jbe
inc
push
mov
aam
das
mov
adc
push
or
movsl
repnz
or
loope
out
scas
xchg
je
aad
orl
lds
dec
xchg
arpl
jle,pt
aas
movsb
and
leave
aad
or
scas
mov
push
loopne
cld
mov
loope
jb
inc
jbe
int
aad
subb
dec
jecxz
push
push
mov
fwait
sub
pop
cmc
sbb
inc
mov
adc
ffree
sti
mov
aad
jg
popa
pop
stos
and
xchg
pusha
data16
mov
jecxz
cmp
cmp
jl
repnz
lret
sbb
fisttpll
dec
dec
imul
icebp
push
adc
daa
xchg
ljmp
scas
dec
adc
cmp
shlb
mov
ss
jl
pushf
mov
lret
xchg
add
repnz
mov
les
push
mov
mov
les
adc
push
mov
add
aad
jge
or
push
sub
jp
cs
aam
pop
cmpsb
and
inc
add
jbe
shl
adc
repz
and
cmp
xchg
jp
xor
push
loop
adc
xchg
xchg
pop
cmp
jmp
hlt
jae
repnz
pop
dec
push
loop
sbb
jle
sbb
mov
fcmovnu
movsb
cmp
pop
data16
lcall
inc
jmp
movsb
iret
mov
jne
xorl
fistpll
xchg
push
pop
push
movb
mov
add
cli
shrb
mov
fsubrl
call
mov
outsb
insl
das
insb
cli
divb
mov
jae
sbb
scas
push
push
mov
push
push
cwtl
dec
cli
adc
cmpsl
push
and
ss
and
sbbb
add
cli
mov
adc
rorl
rcrb
inc
mov
clc
fdiv
xchg
mov
sub
clc
btc
xorl
xchg
jecxz
popa
andl
sub
lds
hlt
add
movsb
jne
push
gs
fmul
push
or
ss
in
xchg
pusha
out
mov
or
lahf
sub
movups
push
push
ds
out
or
lods
inc
ret
hlt
push
sti
jp
repz
xchg
add
push
inc
mov
imul
fsubr
sti
into
push
repnz
jae
dec
andl
jmp
enter
inc
arpl
shll
std
pop
and
mov
repz
insb
and
push
jno
mov
push
jmp
adcb
mov
int3
jae
les
loopne
sub
loope
cs
mov
sub
xchg
fdivrl
dec
sub
and
cmp
jp
jns
lret
push
repnz
add
dec
and
xchg
and
cmc
cli
or
add
sarl
mov
push
adc
popf
push
inc
incl
repz
repz
std
mov
mov
xor
mov
cltd
out
xchg
or
mov
push
cmpsl
fbld
mov
mov
add
in
and
and
lret
popl
pop
bound
and
lods
dec
mov
push
jbe
test
das
or
in
aad
or
jmp
pop
movsl
xor
or
sbb
or
aad
jge
jae
in
cmp
push
xchg
pop
test
sub
fisubrl
icebp
mov
sub
out
xor
cmp
sbb
push
mov
loopne
aas
cli
scas
aam
mov
rolb
xor
enter
and
sarl
popf
mov
xor
mov
xor
imul
jne
or
inc
jb
into
or
loopne
push
adc
sub
push
dec
dec
pop
or
dec
sahf
mov
das
add
mov
xchg
movl
sbb
adc
popa
cmc
sbb
clc
jmp
pop
xor
hlt
mov
push
mov
arpl
and
aad
lea
in
xor
icebp
es
scas
mull
adc
push
inc
iret
mov
aad
filds
arpl
jo
mov
push
mov
notl
roll
ret
mov
sub
or
mov
jae
push
cmp
insl
push
or
lcall
push
dec
out
and
loop
jmp
aad
mov
adcl
sub
fwait
in
rorl
sub
sbb
jg
push
lock
test
push
sbb
pop
add
sar
xor
push
ret
mov
icebp
je
lcall
push
push
aad
xchg
lcall
sbb
int3
and
out
dec
subl
fiaddl
lods
lds
fs
lods
lds
test
sub
inc
in
push
sbb
icebp
paddusw
ret
push
sbb
xlat
or
push
ja
push
int3
jns
fsqrt
xchg
and
ret
jnp
pop
adc
int
and
in
sbb
fdivrs
ficompl
push
mov
and
mov
fs
and
addb
xchg
cmpsb
into
data16
shll
pop
sbb
add
push
insl
cwtl
dec
iret
mov
jne
cmp
andb
fwait
outsb
ret
shrl
cmp
dec
test
jbe
jo
jb
jmp
push
or
inc
rcll
xchg
jnp
test
dec
fnsave
pop
push
icebp
insb
mov
int3
or
stos
and
dec
or
adc
jae
sbb
jb
and
mov
inc
lahf
pop
inc
xor
jno
insl
pop
insl
mov
mov
mov
test
cmp
or
xor
sbb
cmp
dec
loope
cmpsb
fwait
jmp
xchg
and
fcmove
nop
mov
call
push
cmp
test
fcmovne
mov
mov
dec
outsb
cs
je
fisttps
xor
dec
in
mov
js
xchg
xchg
jle
xchg
sbb
neg
testb
inc
ret
add
mov
shlb
imul
scas
in
lds
les
aaa
mov
sbb
inc
addr16
in
mov
hlt
pop
cmpsl
subl
push
inc
mov
ficoms
imul
stos
xor
aas
cli
sar
add
lock
lock
cmp
ret
adc
imul
dec
dec
xchg
sub
sbbb
xchg
into
ret
pop
lahf
jne
pusha
into
call
orb
push
test
adc
fcomp
jb
inc
dec
sub
lds
and
jl
xchg
sahf
push
scas
imul
adc
add
mov
pop
xchg
dec
hlt
test
push
sbb
ret
aam
dec
mov
dec
xchg
ret
xchg
cmpsb
jp
cltd
sub
xor
sbb
test
add
in
mov
add
test
repz
cltd
std
mov
cltd
mov
inc
int3
inc
or
outsb
shr
stc
scas
cmp
mov
test
repz
mov
pop
jecxz
sti
subl
ret
test
jns
in
cmp
repnz
push
mov
aad
sub
popf
sbb
xor
pop
mov
mov
out
jbe
cmp
push
insb
or
or
mov
or
popf
add
je
jl
in
inc
lock
jno
lds
xchg
cltd
sbbb
xor
xor
jecxz
adc
nop
fs
jp
push
arpl
loope
or
pop
cs
repz
es
jle
rorl
inc
cmpsl
mov
mov
int3
xchg
push
push
xor
push
daa
fwait
and
leave
jp
test
ficompl
pop
les
das
std
imulb
push
inc
repnz
mov
cmp
ljmp
adc
mov
mov
repnz
in
and
fldl
cmp
or
mov
adc
into
inc
cmp
stos
mov
mov
mov
daa
adc
imulb
xorl
out
ret
pushf
cmp
aam
and
adc
xchg
add
inc
jo
xchg
ja
rclb
dec
popf
jmp
or
in
xchg
cld
sub
push
mov
orb
ficompl
xor
test
pop
dec
pop
leave
push
outsl
rcrl
cs
fucomp
stos
jg
test
loop
arpl
aad
ja
pop
push
das
loop
lods
ds
test
mov
xchg
aam
arpl
jns
inc
cs
sbb
inc
adc
xchg
push
roll
push
jb
and
pushf
jge
hlt
mov
test
push
and
addr16
mov
lret
push
in
inc
sub
fistps
insb
jns
ret
mov
inc
or
push
fs
pushf
imul
pop
sub
imul
pop
pop
jno
fstps
xchg
mov
sbb
in
add
sub
fnsave
dec
aad
testl
idivb
push
cmp
push
decb
sub
sub
sti
inc
mov
xor
push
xor
fimull
lcall
jl
inc
sub
clc
and
icebp
scas
mov
lods
ficomps
jge
jge
lods
xor
stos
fadds
scas
xor
fisubl
daa
xorb
in
xor
add
adc
movsl
xchg
enter
leave
shrl
in
into
dec
push
mov
ja
push
mov
das
fcmovnu
jmp
call
mull
jnp
incb
dec
lds
sub
inc
shlb
mov
inc
loope
and
testl
jnp
imul
cmp
cltd
add
sbb
test
push
out
push
jne
inc
cli
data16
or
dec
mov
jbe
push
cmc
mov
jl
inc
aaa
dec
mov
add
mov
pop
scas
cwtl
lret
fildll
jl
jns
sbb
cmp
dec
cwtl
in
int3
or
push
lret
xor
cmpsb
mov
push
sti
mov
and
mov
xchg
insl
mov
push
sub
cs
rolb
shlb
pop
call
sub
jmp
bound
jne
jmp
inc
movsb
add
adc
push
movsb
mov
aam
adc
inc
inc
fdivs
pop
add
push
or
arpl
or
sbb
jl
sub
frstor
int
or
iret
cmp
rcl
aas
sub
mov
ja
ljmp
adc
jb
idivb
and
mov
fldenv
add
lret
addr16
ds
aad
shrl
movsl
mov
call
in
in
add
dec
ret
or
pop
sti
xchg
xchg
sub
lea
outsl
mov
fcmovnbe
orb
dec
insl
jne
or
enter
iret
pop
jg
cmp
mov
cmpsl
sub
sbb
xchg
rcll
or
xchg
in
popf
sbb
ficoml
push
pop
rol
mov
lock
test
out
and
adc
fsubl
xchg
je
xchg
or
mov
lcall
es
add
jb
sub
iret
out
xor
add
cmp
push
lods
aas
notl
pop
shrl
dec
xchg
mov
out
pushf
jnp
movb
jnp
push
push
outsl
jbe
dec
sbb
push
sub
pop
arpl
pop
repz
jge
jbe
das
or
cmp
jo
ss
push
jae
popf
ficoms
mov
jmp
jo
cld
mov
clc
aam
int3
add
xor
pop
mov
into
mov
sahf
shll
mov
fsubrl
gs
mov
nop
mov
std
jp
push
sub
cmp
aad
lods
out
aas
enter
cli
bound
dec
sub
lea
jno
jle
pop
jg
nop
scas
cmpsb
call
add
jmp
push
ss
aas
dec
cmp
aaa
or
jo
repz
jne
xor
in
mov
sti
lock
xor
hlt
roll
jle
stos
adc
cmp
dec
cmpsl
mov
hlt
leave
sbb
dec
std
xor
and
lret
dec
das
mov
mov
test
pop
out
push
int
adc
clc
and
jle
ficoms
inc
sbb
sub
mov
in
sbbb
pop
rclb
sbb
jge
loopne
xchg
insb
ds
push
sti
cmp
jne
xchg
jmp
xchg
rcrb
mov
sbb
enter
push
icebp
in
ficoml
or
aad
imul
cld
xor
xchg
mov
push
mov
dec
or
jecxz
xchg
inc
movsl
rorb
dec
jnp
mov
and
mov
pop
pop
out
enter
popa
out
mov
arpl
jno
sbb
in
xchg
or
clc
imul
xchg
sub
adc
faddl
int3
pusha
jmp
mov
stos
sub
out
lds
dec
arpl
mov
lahf
ret
jns
jmp
jecxz
xor
das
and
cmpsb
mov
push
inc
push
fs
fld
rorl
mov
and
adc
and
gs
shrb
or
dec
shlb
mov
sti
ret
and
add
flds
xor
inc
repz
test
aaa
sub
mov
push
cmpsl
push
xchg
pushl
loope
ret
inc
sub
dec
sbb
inc
ret
clc
jle
xor
cmp
sub
mov
mov
lods
dec
and
push
sbb
out
mov
push
pop
mov
cmp
jne
into
out
popf
sbb
std
jp
test
ss
out
pop
mov
call
lock
push
in
iret
mov
jnp
adc
mov
fisubs
cmp
mov
lds
loopne
xchg
gs
mov
stos
pop
and
stos
or
lcall
dec
cmc
iret
add
inc
add
nop
push
subb
in
fwait
inc
dec
mov
and
movb
lods
sub
pop
mov
mov
mov
dec
mov
aad
lods
jno
test
xchg
push
pusha
clc
mov
outsl
inc
outsb
cwtl
pop
xor
pop
push
jg
jle
xor
das
imul
or
les
sbb
dec
jge
addr16
push
mov
jp
test
call
cmp
repz
outsl
fisubl
ljmp
repz
xlat
mov
sub
lahf
sub
and
mov
mov
jp
pop
shlb
mov
pinsrw
mov
fldt
pop
jnp
inc
gs
sti
fisttpl
or
insb
cld
inc
loop
xchg
cmp
imul
rorl
push
push
mov
mov
fucompp
les
or
daa
xor
dec
mov
ret
push
fsubs
dec
icebp
int3
jnp
stos
push
cmp
or
cld
adc
add
popl
dec
cmc
rep
xor
or
jge
cltd
incl
pop
fucomip
fsubl
inc
out
cmc
int3
mov
mov
scas
cwtl
shll
xlat
sub
aas
test
sub
imul
sbb
dec
jle
sbb
jns
sbb
push
pop
std
jb
leave
outsl
mov
test
ret
sub
xchg
mov
cbtw
into
daa
adc
push
lahf
add
arpl
cmp
cwtl
push
push
jae
add
push
pop
sbb
mov
xor
jb
xchg
pop
movsb
fsub
xor
and
sub
mov
pusha
jo
sbb
jb
loop
mov
movsb
adc
adc
cmp
push
jno
mov
or
addr16
pop
jb
adc
xchg
fisttpll
pop
sub
inc
jle
aas
shrb
add
test
iret
stos
das
push
nop
and
pop
out
shr
push
cmp
pop
mov
in
movsl
fchs
movsb
aaa
pushf
lahf
and
lds
cltd
mov
jecxz
in
int
sub
mov
mov
push
bound
push
add
mov
cmp
dec
jl
arpl
ds
fists
mov
mov
jmp
add
nopl
push
idivb
sbb
and
mov
push
repnz
gs
adc
add
sti
cmpsl
push
pop
mov
rolb
dec
xor
ljmp
stos
dec
imul
test
push
jle
ljmp
dec
fidivl
push
loop
mov
lcall
cmp
rcrb
ret
popf
mov
dec
mov
les
inc
sbb
jge
sbb
cmpsl
loop
fmull
xor
adc
cld
xchg
cmp
outsl
push
dec
dec
jp
sbb
sub
sub
add
jg
pop
add
xor
sbb
add
es
and
hlt
push
xchg
xchg
jp
fnsave
cmpsb
test
xchg
aaa
lock
and
cmp
cmp
mov
jae
pop
mov
mov
cmp
faddl
sti
mov
loope
mov
or
cmc
or
jl
add
in
aaa
mov
adc
stc
lcall
sti
add
test
icebp
mov
xchg
lock
push
adc
push
dec
sbb
jno
rcll
out
loop
pop
mov
cmp
sbb
jae
xchg
cmpb
dec
rorl
call
jmp
sub
jne
cmp
cmpsb
data16
dec
push
sbb
inc
aas
out
shll
xchg
pop
lahf
movb
mov
xor
fisttpl
sbbb
push
cmp
int3
movsb
inc
enter
fdivrs
push
mov
loope
es
dec
fwait
adcb
outsl
pop
xchg
insb
fdivl
sbb
frstor
mov
js
add
cmc
jae
jns
sbb
out
or
or
xor
push
and
cmpsl
insb
push
fs
xchg
sahf
mov
stos
lds
test
push
push
inc
jmp
je
adc
and
pop
xlat
cmp
subb
mov
adc
jg
imul
xor
adc
xchg
leave
nop
xor
add
gs
mov
sub
aam
call
pop
jle
clc
xor
mov
jle
lcall
mov
mov
mov
fwait
push
mov
sbbl
push
int
mov
dec
bound
scas
mov
push
add
in
xor
lods
mov
inc
fsts
sbb
data16
leave
notb
out
mov
and
cmpb
fs
mov
fcmovne
es
pop
rolb
sub
es
xchg
mov
sbb
pop
pushf
inc
dec
push
push
dec
in
out
shlb
mov
dec
xchg
adc
pop
enter
lds
les
imul
ret
xor
bound
sub
loopne
nop
xchg
int3
inc
inc
loopne
jnp
fnstsw
lock
mov
lahf
fwait
test
and
lea
or
xor
xlat
bswap
push
addb
and
cmpsb
or
pop
push
daa
imul
pop
aam
aad
push
leave
inc
jmp
int3
cltd
pop
adc
bound
sbb
jne
loope
daa
mov
add
mov
cmc
push
mov
xor
and
xlat
mov
xor
xchg
cld
mov
and
sbbl
lret
mov
inc
adc
jb
xchg
push
lea
mov
push
mov
adcl
xchg
in
sti
outsl
jo
dec
rcrl
sub
ret
dec
push
idivl
mov
out
mov
movsb
ljmp
jle
dec
or
push
sti
inc
es
xlat
xchg
sbb
jmp
sub
sbb
or
jmp
xor
popa
inc
pop
testl
lcall
push
push
out
cmp
fisubrs
push
mov
lea
sub
movsb
xor
subb
shlb
push
dec
call
push
rcrb
inc
push
int3
aam
adc
cmpl
test
in
xchg
loopne
jmp
sub
pop
cmpsb
lods
ja
lods
ret
in
data16
into
lods
sbb
prefetch
hlt
push
mov
fdivrl
bound
fmulp
xlat
fcoms
xchg
sub
cwtl
adc
dec
sahf
cmpsl
fsubr
xchg
pop
add
xchg
pop
mov
push
icebp
lock
das
or
or
sbbl
test
and
jmp
mov
and
mov
lock
mov
pop
mov
or
rorl
inc
pop
rclb
jecxz
leave
pop
fnclex
hlt
lret
adc
data16
and
sub
fwait
jge,pn
sti
stos
cmpl
push
push
sbb
fwait
iret
popa
pop
test
xor
adc
fbld
inc
adc
into
insb
pop
shlb
add
rcll
into
push
pop
pop
in
and
jbe
xchg
popa
fwait
and
lahf
into
jg
mov
jb
fildll
bound
mov
add
adc
or
subl
jb
xchg
fmuls
inc
cmp
shlb
outsl
rol
mov
scas
fiaddl
adcb
inc
neg
cld
xchg
lea
jb
inc
or
cmp
stc
leave
cld
add
xor
add
xchg
pushf
loopne
cltd
cltd
popf
or
cmp
inc
ja
pop
aam
push
xlat
stos
xchg
mov
xchg
mov
fisttpl
and
push
dec
jge
inc
aad
xchg
xor
inc
push
test
repnz
xchg
sub
sti
loopne
jns
popf
adc
adc
cs
push
lcall
jge
aam
inc
mov
ja
ja
aad
inc
test
mov
adc
mov
pop
fistpl
cmp
gs
and
mov
loopne
mov
adc
jl
andl
push
push
call
or
adc
cmp
mov
xchg
mov
out
pop
sub
mov
adcl
jle
jnp
fwait
sub
mov
aad
xor
jmp
bnd
cmpsb
add
jge
cwtl
sub
sub
push
push
pop
ljmp
sub
dec
add
mov
fwait
cmpl
add
int
daa
jns
jle
jns
mov
cmp
mov
mov
mov
lods
in
mov
arpl
ljmp
ja
sub
push
dec
add
jp
in
mov
jo
out
iret
stc
xorb
mov
pushf
in
lods
fidivrs
popl
cmp
xor
inc
jg
mov
in
jmp
push
testl
push
lcall
push
and
arpl
je
sbb
ds
mov
mov
movsb
sbb
push
adc
call
add
imul
add
addr16
xchg
jge
loop
jmp
mov
lahf
adc
jge
lahf
sbb
cmpl
xchg
cltd
push
sbb
add
js
aad
fiaddl
jle
roll
pop
push
mov
adc
stc
outsl
scas
cmpsl
cmp
aam
mov
add
mov
and
mov
mov
outsb
xchg
out
popa
lahf
scas
mov
pop
les
cmpsl
int3
and
aaa
or
inc
adc
mov
pushf
or
enter
xor
test
dec
pusha
xor
mov
mov
scas
clc
push
test
aaa
fldl
fidivrl
in
and
jmp
jo
mov
cmp
push
lods
test
fiadds
out
sbb
out
inc
xchg
cmp
xchg
mov
insl
lods
scas
push
lret
in
divb
dec
arpl
in
jg
sahf
fcompl
dec
rolb
bound
xchg
fisubrs
xor
scas
inc
mov
hlt
pop
push
mov
xlat
cmp
inc
dec
test
push
xchg
jmp
addr16
lret
mov
call
icebp
xchg
xchg
imul
or
dec
aas
mov
in
mov
and
repz
data16
in
cmp
xor
cltd
leave
loopne
into
pop
jmp
ffreep
filds
movsb
mov
lret
or
cltd
xor
call
jl
cmpsl
lods
lahf
jae
push
orb
xchg
xchg
lea
das
adc
sub
cmp
and
and
adc
pop
add
sbb
addr16
mov
push
or
pushf
dec
mov
fdivl
out
sub
xchg
jge
xchg
jl
and
pop
lea
push
mov
pop
add
cmp
in
and
pop
push
xor
xlat
push
popf
loop
ds
rorl
xchg
fisttpll
adc
lock
jb
out
inc
sub
dec
sub
bound
loopne
jnp
in
xchg
in
out
mov
ret
call
inc
sub
dec
inc
dec
sub
cmc
leave
fs
add
mov
or
sub
es
jne
pop
push
ret
stc
repnz
lds
or
fistps
aad
loop
popa
push
aaa
outsl
mov
lds
insl
jle
ret
cmp
inc
call
mov
xchg
mov
ja
adc
cld
jne
sbb
mov
es
dec
fistpl
in
sub
cld
lcall
and
out
mov
jae
jg
cmpsl
into
icebp
out
mov
xor
movzbl
addr16
and
and
lock
push
rorb
out
cmp
or
inc
shll
add
sub
add
or
fnstsw
dec
call
cmpsl
xchg
push
ror
lods
sub
gs
ficoms
push
fwait
lcall
jge
add
into
jns
in
dec
add
or
xor
mov
inc
dec
js
loopne
add
inc
mov
inc
sub
cmp
or
bound
data16
bound
fwait
and
addr16
and
pop
lret
inc
movsb
mov
repnz
push
mov
dec
pop
pop
in
sbb
push
shrl
lcall
xlat
in
mov
test
pop
scas
mov
into
ljmp
mov
out
fsubl
bound
sbb
cmp
xchg
xlat
xor
fistpl
leave
cmp
in
ret
cld
leave
icebp
jb
push
cmp
insl
jb
dec
mov
mov
mov
arpl
mov
cltd
sbb
cltd
sbb
xor
or
dec
cwtl
pop
jae
lret
xchg
out
stos
loope
xchg
and
aad
xchg
push
or
loop
push
loope
inc
out
and
or
arpl
jmp
cld
inc
fisttpll
pop
stos
or
xor
out
xchg
adc
push
xchg
sbb
mov
pop
fidivs
sbb
jns
data16
xchg
pop
or
jle
mov
imul
cli
push
adc
repz
mov
adc
jae
push
in
xor
int
dec
mov
int
dec
cmpsb
add
subb
pop
fstpt
rolb
loop
mov
test
xchg
push
push
loopne
ss
dec
popf
out
xchg
add
or
xor
mov
flds
sbb
cmp
lea
pop
out
push
fcomip
dec
insl
xchg
ret
ret
mov
mov
lcall
xor
add
pop
inc
mov
push
add
jl
adc
xchg
mov
mov
mov
lods
cwtl
xor
push
movsl
scas
mov
call
xor
outsb
les
inc
mov
sbb
ret
or
dec
xchg
sbb
fs
daa
inc
cltd
xchg
out
pop
pushf
repz
mov
daa
xor
in
dec
bound
aaa
sbb
pusha
sub
mov
inc
outsl
daa
mov
or
pop
pop
mov
out
dec
mov
push
jge
cmp
imul
xor
xchg
rcl
push
test
cmc
mov
shl
adc
pusha
inc
mov
mov
inc
in
push
inc
mov
mov
test
mov
inc
addb
out
jmp
pop
inc
cld
cmpsb
jnp
sbb
xor
insb
jo
in
mov
lea
xor
pop
push
clc
xor
cmp
repnz
inc
mov
dec
loop
mov
jo
mov
out
lock
mov
push
fwait
adc
test
addl
popa
movsb
or
jnp
pop
mov
dec
push
flds
adc
imul
dec
pop
mov
pop
enter
sub
insl
dec
lret
xor
test
inc
negb
das
sbb
hlt
and
inc
idiv
mov
lcall
dec
or
out
test
out
or
pop
mov
push
test
and
fldln2
jnp
test
or
aaa
inc
pop
adc
mov
pusha
dec
lret
adc
mov
in
adc
mov
out
scas
enter
lahf
xchg
push
cltd
dec
fidivl
test
xchg
or
jmp
insl
movsl
mov
inc
xchg
jns
push
jno
mov
xchg
pop
inc
outsl
fmuls
add
sbb
jge
xchg
add
into
push
scas
jmp
test
std
cmp
add
iret
fisubl
movsb
mov
sahf
negb
lret
push
inc
jecxz
movsb
sbb
loopne
mov
aaa
dec
int3
inc
inc
mov
or
add
jl
popf
dec
add
data16
in
or
xchg
lret
les
mov
or
mov
cmpb
fnstsw
scas
int3
scas
mov
jg
int
repz
scas
mov
xchg
push
push
out
xchg
mov
xor
xchg
mov
mov
xorl
in
dec
and
inc
test
push
jge
mov
fcomps
ret
aam
mov
pushf
cmp
fisubrs
push
mov
inc
icebp
jle
ret
cmp
shll
nop
pop
dec
lcall
sub
xor
jo
mov
mov
add
loopne
pop
rol
jg
imul
sti
mov
add
mov
or
ss
call
sbb
add
das
xchg
mov
mov
cmp
sub
push
xor
jge
sbb
dec
add
das
imul
and
add
cmc
cmp
adc
loop
jo
aas
and
push
shlb
pop
mov
sub
mov
into
push
lret
or
pusha
das
cmp
pop
jb
and
mov
mov
cs
outsb
pop
out
or
js
jnp
int3
in
pop
insb
add
cmp
ds
loopne
fs
rcll
pop
sub
mov
stos
inc
sbb
mov
enter
push
and
arpl
dec
dec
shrb
inc
les
cmp
add
ret
and
mov
into
lea
mov
inc
jne
inc
addr16
xchg
mov
dec
inc
mov
or
js
addr16
lea
add
adc
xchg
xlat
rorl
sub
hlt
leave
pop
sbb
inc
jecxz
adc
push
std
mov
test
negl
and
scas
cmc
add
mov
sahf
fcmovnbe
jb
push
inc
andb
dec
xchg
popf
loopne
in
inc
xor
push
fdivp
xor
aad
pop
sbb
sbb
aam
sarb
mov
daa
mov
sbb
cmp
push
xlat
shrb
xchg
mov
pop
pop
and
sub
addl
push
cmc
mov
cmp
loopne
add
or
das
sbb
pop
mov
loop
pop
fnstenv
in
inc
dec
popf
mov
aam
jmp
mov
icebp
xchg
push
push
call
test
or
push
mov
jb
sub
adc
sbb
xchg
fisubs
call
push
outsl
dec
xchg
cmp
and
push
test
ja
jmp
mov
sbb
call
int
pushf
push
mov
fcmovnu
adc
insl
pmaddwd
movsb
and
xor
jg
pop
dec
orb
jecxz
sti
pop
loopne
or
iret
mov
outsl
test
xchg
xchg
shrb
mov
add
sub
adc
pop
pop
mov
inc
dec
ljmp
mov
dec
out
aad
xchg
addr16
out
div
outsb
mov
xor
or
mov
fs
pop
xor
mov
mov
je
dec
mov
fisubs
xor
mov
or
adc
jp
or
dec
int3
movsb
mov
jbe
int
jl
add
jne
in
xchg
aaa
scas
cmpb
aas
sahf
sub
xchg
add
cmpl
sbb
out
inc
cmp
push
daa
shr
dec
std
cmpsb
mov
jbe
call
sub
outsb
and
icebp
fisttpll
aam
xor
mov
ds
jmp
xor
xchg
adc
dec
pop
lahf
cmpsl
mov
sbb
jp
pop
fdivs
test
outsl
mov
sbb
mov
lds
addr16
add
aad
pushf
loop
addr16
mov
mov
les
hlt
adc
std
fwait
lcall
sub
jno
mov
push
negl
lahf
pusha
in
fmull
mov
adc
add
or
aad
mov
in
and
stos
jbe
cmpsb
jno
xor
cmp
int3
jmp
jle
sub
adc
test
mov
insb
int3
or
sarb
add
enter
dec
mov
pop
cltd
inc
and
cwtl
ffreep
sbb
popa
scas
dec
inc
rcrl
cwtl
sbb
mov
inc
jo
and
shl
dec
in
xchg
call
pop
jb
or
inc
pusha
aas
test
adc
test
shlb
and
sbb
aad
mov
inc
xor
jo
dec
out
pop
jo
pop
and
leave
adc
sbb
push
and
jl
aas
xchg
addl
insb
pop
or
rcrb
ss
mov
jmp
mov
lret
es
mov
sbb
xchg
orb
mov
sub
pop
sub
mov
in
into
add
stos
or
lds
xchg
into
dec
gs
loopne
ja
fisubs
test
outsl
mov
inc
sub
arpl
xor
cmp
dec
shll
cld
push
inc
iret
and
imulb
xor
mov
mov
stos
fmuls
mov
fsubl
xor
rcrb
cmp
pop
sbbb
mov
push
daa
cltd
pop
xor
xchg
pushf
lods
adc
cmpsl
aas
xchg
xor
ds
sbb
cmp
and
fldenv
mov
adc
stc
das
dec
ljmp
pop
xchg
sub
aas
add
sarb
jle
add
pop
outsl
imul
xor
in
dec
mov
pusha
jno
je
testl
xchg
mov
xchg
add
gs
js
sbb
fcomi
pop
mov
inc
jbe
test
int3
fwait
jg
dec
or
scas
push
jno
std
jnp
sub
sbb
sti
cmc
insl
inc
sti
sbb
daa
repz
xchg
mov
dec
mov
out
cld
sub
cmp
ja
push
imul
cmp
add
les
cltd
add
dec
negb
pop
aaa
xor
push
jo
subb
dec
add
je
pop
push
push
cmp
pusha
pop
mov
rcll
imul
insl
fidivrl
inc
mov
out
lock
jbe
cmc
mov
test
push
sbb
out
mov
adc
dec
std
imull
and
pop
push
add
sti
popf
ljmp
aaa
cmc
js
repz
dec
push
xchg
push
pmullw
gs
in
int
jmp
mov
xor
pop
rcl
push
nop
mov
jmp
push
mov
repnz
scas
mov
mov
inc
mov
test
test
and
push
sub
or
test
testl
je
pusha
fs
hlt
leave
cld
out
fisttpll
aaa
and
push
lret
and
fisttpll
in
push
cmp
dec
lcall
xchg
or
sub
jge
adc
fmull
aam
sbb
mov
pop
stc
lock
mov
fnsave
mov
out
pop
pop
sub
push
pop
mov
nop
mov
xor
jae
mov
das
mov
loop
jmp
sarb
adc
mov
cmc
xchg
pop
std
stos
or
loop
inc
pop
je
cli
loop
rcrl
fwait
dec
movsl
jmp
pop
sbb
inc
jae
movsl
loope
js
in
xor
and
push
fdiv
push
adc
les
lea
js
in
dec
mov
xchg
call
ret
mov
mov
xor
mov
inc
call
cs
xchg
xor
adc
lods
cmpsl
jne
andl
mov
ficoms
mov
test
lcall
scas
jmp
push
or
decb
sub
cmp
out
imul
pushf
pusha
mov
xchg
inc
mov
dec
lret
push
les
loop
int3
ds
test
stos
mov
xchg
ss
xor
mov
es
add
sti
mov
inc
sbb
pop
sub
cld
mov
xor
inc
fistl
ret
out
add
roll
push
outsl
sbb
adc
negl
xchg
loop
xor
enter
xchg
inc
xor
or
sub
jno
out
mov
and
sub
hlt
repz
mov
push
or
pop
xor
push
mov
out
sub
nop
fcmovb
jmp
adc
bound
cwtl
jb
dec
scas
mov
push
jo
lock
lret
jmp
fs
cmp
dec
mov
lods
and
pop
sub
xchg
dec
into
mov
sub
stc
xchg
sbb
xchg
repnz
fdivrs
or
jge
xor
or
dec
repz
ret
mov
int3
sbb
fsts
addb
data16
iret
nop
outsb
jbe
push
and
shlb
mov
stc
pop
mov
cmpl
rol
faddl
popa
jg
insb
push
xlat
mov
dec
loope
cmc
push
xchg
ja
add
dec
les
push
sub
dec
ss
hlt
stos
mov
mov
lcall
inc
stos
jle
pop
data16
lods
lods
inc
cmp
inc
xchg
js
jb
xor
rorb
popa
outsb
rdpmc
jg
fsub
js
test
sbb
sub
push
xlat
xchg
push
stos
rclb
mov
mov
sbb
mov
cmc
dec
jle
add
push
push
push
cmp
hlt
stos
xor
pop
in
inc
dec
cld
inc
loope
cmp
mov
fs
sub
int3
fcoms
sbb
rcrl
pop
inc
xlat
cs
mov
pop
jne
or
imul
into
cmpl
aaa
mov
daa
out
das
cmc
cmp
jg
and
lcall
out
mov
sbb
inc
aad
push
lock
negl
out
int
push
pop
imul
std
test
mov
or
or
ss
aaa
pop
mov
sub
lret
imul
push
cmp
jne
cwtl
lods
sub
and
and
sbb
and
rcr
dec
jle
adc
jo
aas
push
adc
notl
jg
aaa
add
inc
dec
cmp
cmp
outsb
push
push
sbb
push
in
lcall
mov
test
pop
ds
std
or
push
fnstenv
call
cltd
stos
pop
aas
ret
dec
ljmp
and
cltd
subb
imul
mov
sbb
cmpsl
jp
out
cmp
dec
les
loop
push
arpl
hlt
lret
sbb
xor
aad
mov
xchg
inc
xchg
xchg
loopne
xor
loop
jp
dec
push
pop
fstl
inc
testb
xor
popf
mov
inc
mov
mov
enter
fidivrl
lods
xchg
dec
jo
fistpl
inc
add
xchg
lds
imul
mov
xorl
sub
daa
loope
popa
adc
popf
pop
fldenv
clc
mov
repnz
cltd
outsb
sub
lret
lods
xchg
mov
jmp
into
sbb
jae
sub
or
pop
inc
mov
mov
xor
pop
into
lods
sbb
sbb
ss
push
add
ret
xlat
dec
ret
jmp
cli
cld
int3
lock
mov
jno
es
loope
pop
lock
or
push
adc
pop
fptan
ljmp
sub
or
mov
mov
mov
jo
stos
cwtl
mov
push
adc
scas
testl
mov
jae
jl
lock
jg
pop
pop
fstp
xor
lea
push
ljmp
mov
fwait
int3
adc
movsl
and
jns
fwait
shlb
ss
movsb
fs
inc
inc
nop
or
fisttpl
test
shl
aam
or
test
push
inc
inc
mov
loope
cmp
or
push
addb
scas
mov
jno
test
pop
jmp
ljmp
dec
sbb
ret
frstor
cli
out
cmp
adc
add
jno
sbb
into
lods
cwtl
xor
scas
inc
and
sahf
fs
scas
popf
mov
adc
leave
fcmovne
aad
mov
aaa
mov
lea
or
mov
sbb
popa
xchg
sahf
inc
notl
sub
repz
movsb
mov
dec
sarl
cmc
dec
add
lea
sarl
movsl
inc
int3
outsb
out
pop
addb
or
pusha
insb
add
inc
popf
cltd
dec
xlat
mov
mov
cmp
out
jmp
sub
leave
cli
testl
ds
mov
push
add
jp
inc
into
or
mov
push
sbb
out
dec
adc
in
cmp
push
cmp
pop
aad
adc
push
mov
iret
lods
subb
out
cmp
stc
sbb
cs
scas
cli
dec
mov
dec
int3
arpl
mov
mov
jmp
ret
add
fwait
cmp
sbb
test
lea
xchg
sbbl
cmc
mov
mov
sbb
ds
sub
inc
lods
lret
mov
mov
out
idivb
sbb
lret
fcomps
push
jg
rorb
out
and
mov
and
sbb
ja
or
lret
rcr
cmpsb
mov
mov
ds
pop
imul
int
inc
cld
in
jl
stc
push
cwtl
lea
or
pop
mov
imul
stc
fistl
mov
arpl
add
rclb
repz
add
sub
sub
or
sahf
jne
fidivs
mov
pop
int3
adc
outsl
cmp
inc
leave
les
jae
movsb
std
out
xchg
ja
insl
pop
arpl
push
loope
out
or
or
scas
mov
fnstcw
mov
add
aas
dec
fistps
into
lock
mov
sti
mov
mov
cmp
mov
ret
mul
push
xchg
inc
xor
jo
mov
mov
and
sbb
mov
or
pmulhw
jl
xlat
fildll
pop
mov
inc
xchg
ficoms
dec
mov
hlt
pop
fucom
xchg
fstpt
mov
mov
stos
outsl
jb
push
fidivrs
mov
jns
repnz
mov
xorb
push
scas
ja
lahf
cltd
xor
repz
cmp
mov
add
push
jle
and
bound
fidivs
loopne
int
mov
xor
dec
ljmp
sbb
ljmp
push
je
sbb
dec
xchg
adc
jl
and
mov
jns
out
push
mov
iret
sti
push
sti
sub
add
mov
lahf
jo
or
gs
mov
mov
cmp
in
cltd
insb
mov
fsubrl
ss
movsl
mov
mov
ss
pop
in
out
test
add
sbb
xchg
inc
mov
and
movsl
pop
lret
insb
jne
fs
cmp
xor
addr16
rcrl
add
inc
xchg
push
pop
pop
les
enter
cltd
imulb
iret
movl
mov
cld
jae
hlt
repz
cwtl
stc
add
lret
jae
test
push
dec
sti
arpl
enter
mov
pop
sub
mov
mov
jl
scas
mov
iret
fisttps
call
push
icebp
ljmp
adc
jp
mov
lock
xor
and
adc
notl
xchg
jae
push
fbld
or
mov
xor
dec
add
aad
test
dec
jb
fsts
push
xchg
jb
xor
fisttpl
fcoms
call
mov
int
movsl
sub
lret
adc
iret
aaa
shlb
aas
das
in
test
sarb
add
dec
sbb
fcmovnb
sub
test
jb
and
shlb
sbb
stc
xor
mov
loopne
lcall
jmp
clc
xor
adc
pop
test
fdivrs
lods
sbb
dec
mov
adc
adc
gs
fdiv
push
sub
inc
outsl
pushf
popf
jns
pop
sbb
add
orb
repz
in
sbb
test
or
cmp
aaa
sti
mov
rcll
mov
xchg
mov
mov
sbb
shr
imul
mov
int3
and
fdivrl
imul
mov
iret
sarb
mov
pop
loope
xor
xor
sub
lret
push
jnp
cli
and
push
sti
rol
addr16
test
js
mov
fsubl
and
add
aad
aad
and
jl
push
mov
shrb
xchg
sbb
pop
mov
sbb
xor
and
push
mov
adc
add
shll
push
mov
cli
scas
scas
jo
jnp
cld
das
mov
dec
xchg
dec
in
mov
movsl
lds
add
loop
add
adc
enter
inc
add
xor
add
inc
mov
sbb
inc
xor
sbb
fcom
data16
or
sarl
cmp
std
aaa
adc
aad
addl
stos
lret
dec
es
add
loop
outsl
adc
adc
loope
adc
out
mov
cmp
gs
xchg
adc
jmp
repz
int3
xor
mov
je
dec
add
mov
add
sahf
mov
or
push
adc
mov
jb
jnp
push
jno
in
sub
lcall
jno
lods
and
mov
out
test
and
xchg
jmp
loope
lds
int3
sbb
out
adc
pop
sbb
leave
pop
xchg
pop
fdivl
insl
movsb
daa
jne
cmp
out
xor
imul
lss
pop
leave
imul
mov
lds
pop
loop
stos
popa
or
loop
mov
push
rep
or
push
iret
jno
ljmp
ds
es
enter
lret
pushf
in
pop
add
sahf
jmp
jmp
adc
or
xor
cmpb
outsl
xchg
out
add
jnp
js
pop
mov
or
enter
pushf
sarb
pusha
xlat
cs
pop
inc
aas
cmpsl
adc
lds
loopne
lods
insl
enter
mov
pop
sbb
in
push
ffree
rol
push
or
cmpsl
mov
adc
mov
pop
daa
pop
jbe
test
ret
mov
cs
sub
push
dec
out
xorb
cmpsb
xchg
adc
insl
shll
xlat
xchg
add
insl
sub
sbb
mov
adc
jno
inc
shll
mov
lret
pop
scas
jmp
and
jb
xchg
xlat
dec
outsb
test
leave
out
mov
push
testl
jl
loop
inc
pop
iret
std
mov
add
mov
sbb
movsb
mov
pop
adc
rcl
mov
and
fldl2e
cmp
add
mov
push
out
mov
jmp
push
popf
mov
movsl
adc
loop
mull
pop
sbb
xlat
xor
shrl
mov
stos
xchg
mov
mov
nop
jns
dec
int
adc
insl
es
in
ja
movsl
and
add
xor
data16
lock
pop
push
or
adc
pop
sbb
push
pop
sbb
adc
xor
inc
sub
jo
push
jmp
sbb
daa
fldt
rclb
jbe
or
mov
sbb
sti
repnz
int
arpl
sbb
cmpsl
fildl
mov
leave
add
hlt
sarb
pop
fidivrs
dec
mov
mov
lahf
fldt
movsl
shl
inc
sub
jae
dec
push
in
xchg
popf
xchg
lods
cld
icebp
inc
push
lcall
push
aas
ss
stos
rcll
xor
add
lds
repnz
xchg
out
sub
lods
iret
dec
xchg
outsl
rcrb
lcall
jg
loopne
fwait
cmp
mov
loopne
test
mov
popf
ja
incl
mov
test
mov
jecxz
add
mov
int
xchg
add
lea
jno
cli
test
daa
outsb
outsb
sbb
xchg
mov
and
pop
mov
lahf
stc
add
arpl
cmpb
negb
jno
xor
movsl
insl
mov
sahf
pusha
add
cmpsl
pop
test
ja
loope
xorl
pop
jno
lret
pop
mov
stos
loope
stos
mov
xchg
jmp
inc
fiadds
inc
or
dec
je
fsubrs
xchg
sbb
mov
inc
orl
jl
aam
or
in
bound
and
sbb
add
mov
mov
or
cmc
adc
push
mov
sarb
mov
scas
and
jge
es
push
cmpsb
inc
cvtps2pi
insl
shr
sub
mov
xor
paddq
sahf
adc
dec
sti
and
fcmovne
dec
push
or
xor
mov
xor
xchg
scas
mov
dec
mov
inc
dec
or
jle
sub
cmp
test
rolb
bound
sar
popa
icebp
lods
into
aad
int
jg
js
sbb
xchg
nop
add
add
lods
push
clc
push
lea
cmp
mov
pop
cmpsl
sub
xor
movsl
rolb
lahf
lahf
rorl
sub
and
sbb
fidivrl
popf
mov
add
xor
fwait
and
sub
xlat
mov
xchg
sbb
sbb
in
fstl
add
adc
test
adc
push
xlat
xlat
push
and
jl
lret
xchg
xchg
aaa
cld
add
pop
rorb
or
jle
mov
pop
sbb
pop
mov
aas
sbb
push
sbb
push
std
or
repnz
stos
insl
fmuls
push
shrl
push
es
pop
xchg
mov
icebp
dec
or
lret
fdivl
and
sbb
lret
mov
fimull
aam
int
sbb
out
or
sub
lahf
in
lcall
addl
cmp
adc
add
push
pushf
add
add
out
incl
adcl
xlat
adcb
lret
outsl
insb
mov
cmpsb
sbb
cmpsb
inc
inc
pop
fcoms
adc
mov
lock
jbe
addb
insb
inc
neg
jecxz
lcall
out
out
dec
shl
mov
int3
adc
push
dec
push
test
out
mov
lcall
lcall
mov
rcrb
test
mov
pop
xchg
mov
cmc
enter
orb
pop
push
xor
mov
push
and
cmp
pusha
push
filds
int3
jns
aad
stos
mov
les
dec
rcll
sbb
or
inc
mov
out
jno,pn
and
dec
sbbb
xor
leave
jbe
or
int
mov
js
inc
jp
ja
dec
pusha
or
and
xor
sub
ljmp
add
mov
xor
inc
sbb
lret
addl
into
add
inc
scas
inc
and
mov
outsl
es
add
xor
iret
sub
iret
je
mov
jmp
xlat
mov
orl
ljmpw
lret
sub
cmc
out
and
inc
scas
dec
jg
mov
jb
xor
fdivrs
dec
das
jp,pn
cli
addl
mov
xchg
mov
add
mov
dec
lret
ss
sbb
xor
aaa
inc
gs
je
mov
out
notb
mov
aad
mov
fiaddl
mov
or
sub
mov
dec
movsl
movaps
fists
xor
test
popl
je
xchg
pop
lock
clc
fwait
lret
pop
cmpsb
or
push
outsl
int3
rcll
imull
inc
test
andw
jle
pop
mov
push
xor
testl
insl
roll
pushf
mov
stc
inc
les
xchg
mov
xchg
nop
sbb
movsb
cmp
xor
xchg
jle
inc
fwait
or
mov
lods
sub
push
jg
jo
fs
ljmp
jg
imul
imul
lock
fs
pop
dec
repnz
jnp
xchg
jp
cmp
dec
jns
in
es
push
test
cmpsl
stc
ljmp
cmp
inc
pop
mov
mov
test
fiaddl
xchg
and
mov
insl
and
jmp
cmc
sahf
add
ja
scas
push
or
and
jge
push
jbe
test
imul
lods
mov
adc
movb
stos
adcl
push
mov
fs
lods
xchg
ja
push
lods
mov
xor
cs
mov
add
xchg
jo
pop
das
fsincos
outsl
xor
ja
and
hlt
das
test
pop
dec
cmp
jne
in
jg
out
and
dec
pop
or
pop
and
jmp
adc
iret
lea
fwait
push
insl
decb
and
push
push
fisubs
outsb
jle
fisubrl
xor
ja
jle
push
xchg
clc
jns
scas
movsb
sbb
test
jl
movsb
xorb
imul
shlb
popa
outsb
int3
cmp
insl
popa
fisubrs
aad
adc
pop
sub
negb
mov
mov
mov
add
daa
out
xchg
insb
in
dec
movsb
xor
or
mov
addr16
in
inc
inc
mov
testb
cmp
mov
adcl
push
je
dec
and
rol
pop
int3
push
jmp
push
fisubrl
and
adc
cmp
mov
dec
push
cld
xor
stos
fstpt
out
cmp
ljmp
cmp
sbb
mov
out
inc
sub
filds
cli
hlt
data16
rcrl
ljmp
ficoms
dec
push
sbb
arpl
cmp
sti
pop
adc
pop
mov
aas
sub
lock
in
mov
lea
push
lea
push
add
mov
add
sbb
lahf
in
ss
xchg
mov
sbb
mov
pop
inc
movl
aad
mov
ja
adc
lahf
outsb
lds
mov
cmp
adc
js
cltd
lahf
and
mov
lahf
mov
jns
mov
jnp
xchg
mov
addr16
out
xor
repnz
mov
adcb
dec
in
jmp
dec
test
dec
adc
add
lods
dec
leave
and
out
add
dec
lret
mov
inc
and
add
xlat
sbb
jo
xor
jg
cld
cmp
ds
mov
dec
push
movsl
mov
sub
les
and
les
xchg
push
mov
mov
loopne
bound
and
mov
fiadds
addr16
sbb
in
shrl
push
repz
lods
adc
insb
mov
test
movsl
sbb
add
jns
psubsw
jb
pop
xor
adc
mov
adc
sti
xchg
inc
mov
outsl
jbe
popa
push
mov
and
cmp
xlat
adc
and
js
inc
xor
jg
push
sbb
sub
popa
push
add
jb
repz
sahf
into
mov
mov
js
inc
xlat
adc
xor
fsubr
mov
dec
inc
insb
in
cmp
xchg
cmp
les
and
jb
mov
add
adc
lea
dec
mov
mov
cmp
mov
loope
pushf
push
scas
scas
xchg
mov
pop
sbb
xchg
push
clc
sub
cli
adc
cmp
insl
mov
jg
push
and
pusha
sub
mov
mov
adc
call
gs
scas
orb
imul
ss
mov
inc
pop
mov
pcmpgtd
or
pushf
pop
ss
sbb
adc
mov
cs
mov
mov
mov
jo
xor
out
aaa
jne
fs
into
push
push
push
adc
xchg
fsubrs
adc
xchg
or
daa
dec
test
cwtl
mov
sbb
enterw
jl
out
andl
idivl
jo
stc
push
jne
mov
bound
push
decl
mov
lea
ss
dec
cmc
shl
or
aas
pop
and
mov
aam
divl
adc
add
pop
insb
jg
call
inc
das
xlat
cpuid
loope
sub
dec
push
mov
lret
dec
jbe
mov
jge
loopne
pop
or
and
aad
lret
cmp
loopne
pop
mov
sbb
sbb
xchg
sub
mov
lods
test
xchg
sbb
ffreep
or
jno
enter
add
cli
in
push
mov
in
mov
inc
xchg
hlt
stos
cs
cld
shlb
das
sbb
xor
movl
jmp
or
mov
pop
inc
or
fwait
ret
or
fwait
popf
lods
push
jle
mov
cmp
test
mov
pop
leave
out
xchg
addr16
add
sti
and
sub
cmp
sbb
mov
addr16
jo
pop
test
hlt
lods
jmp
mov
add
in
loopne
mov
scas
jp
pop
scas
mov
add
popf
cmp
leave
shlb
test
fstpt
jle
aas
cs
icebp
cmp
sahf
mov
out
xor
pop
imul
add
and
push
push
int
popf
scas
fbld
mov
jns
push
pop
mov
inc
lea
ljmp
jg
das
xor
addr16
orb
into
rcl
cmp
mov
xchg
inc
les
or
xchg
movsl
xor
test
add
fcmovne
mov
cmp
mov
mov
or
lods
pop
mov
inc
push
imul
xchg
dec
lcall
int
fldl2e
pop
push
adc
cmp
test
mov
ud1
dec
cmp
jo
xor
sbb
jbe
mov
jmp
jb
pop
je
sti
sbb
and
jb
dec
cltd
lock
cmpsb
push
repnz
lret
mov
xor
xchg
inc
insl
inc
sti
sub
and
push
std
cmp
stc
ret
sbb
jnp
dec
ja
mov
into
ficoms
loop
ficoms
in
shll
mov
popl
push
popa
sbb
out
adc
test
mov
sbb
decl
jno
mov
pop
cmpsl
mov
ljmp
int
dec
push
xchg
pushl
adc
fstl
inc
push
dec
pushl
xor
add
push
mov
lods
outsl
push
jne
xchg
movsl
jno
or
jmp
adc
cmp
adc
adc
ds
adc
stos
cmpsb
pop
call
add
pop
leave
dec
or
adc
dec
pop
xor
jb
xchg
jnp
lds
sbb
push
aaa
cmpb
add
cwtl
mov
and
lods
test
xor
push
dec
fistps
xlat
rcl
fs
inc
pop
loop
out
popf
jmp
mov
cmp
lock
test
pop
aas
adc
popa
pop
xorl
ret
jns
out
fcomps
call
loopne
sbb
lret
xchg
mov
sbbb
divb
fistps
stc
push
int3
dec
mov
xchg
and
push
xor
cmp
inc
sub
shll
push
pop
insl
retw
ret
fwait
mov
lds
mov
dec
arpl
fcomi
xor
dec
test
std
push
jg
imul
sbb
xor
stos
shll
add
imul
jle
dec
int3
mov
pop
adc
jo
mov
jl
out
dec
test
sub
xchg
in
bswap
data16
add
leave
sub
push
mov
dec
ficompl
push
mov
sbb
and
push
orl
test
imul
add
aam
enter
push
xorb
es
sub
loope
mov
add
mov
leave
stc
aaa
adc
roll
jge
jl
imul
jge
jb
mov
imul
mov
imul
iret
test
cmp
add
pushf
popf
mov
shll
filds
sbb
push
nop
mov
jbe
jnp
lods
mov
cltd
cmp
sbb
shrl
stos
dec
adc
or
pop
or
cmp
js
pop
int
pop
xor
xchg
movsb
adc
cmc
sub
int3
xchg
add
dec
mov
incb
xor
pushf
mov
pop
inc
enter
mov
mov
cltd
mov
stos
outsb
push
stc
jg
and
adc
mov
push
xlat
decl
in
mov
inc
sub
or
imul
shlb
subl
push
ret
inc
cli
push
sbb
std
rcr
pop
jns
sub
jge
leave
push
out
movsb
ret
inc
repnz
mov
sub
dec
pop
push
push
xchg
in
pop
adc
stc
movsl
sbb
dec
adc
adc
cwtl
rcrl
lds
ret
and
shl
insl
and
mov
and
jmp
pop
mov
xlat
aaa
out
insb
int3
pop
mov
jae
and
xchg
out
sbb
pop
lock
stos
lods
stc
cmp
xchg
orl
sbb
adc
mov
jns
xchg
test
mov
and
movsb
xor
pop
nop
and
dec
fnsave
rcrb
test
imul
int3
or
push
mov
fabs
push
mov
cltd
sbb
xchg
scas
shrl
add
lea
aam
push
fwait
ret
sub
pusha
fwait
adc
add
jno
fs
sbb
scas
mov
outsl
addl
dec
data16
add
fyl2xp1
outsb
mov
scas
scas
mov
inc
mov
cmc
fldenv
mov
jnp
jmp
movl
sarl
sahf
sbb
push
fistl
cmp
loope
rcl
pop
sbb
repnz
sbbl
addl
mov
adc
mov
xchg
mov
popa
adc
and
stos
jmp
jnp
das
in
mov
fistpll
imul
add
je
gs
je
push
add
add
add
add
je
popaw
arpl
add
push
add
outsb
add
add
add
add
outsb
outsl
je
add
add
add
add
add
add
add
add
je
imul
popa
outsb
arpl
data16
jae
je
add
sub
add
je
add
jae
add
add
jbe
outsl
add
jb
dec
add
jae
add
dec
add
add
add
outsb
add
add
add
add
add
add
add
outsb
add
add
add
add
add
data16
add
add
add
popa
add
push
add
add
add
add
add
outsl
add
je
add
jne
add
bound
add
add
jbe
add
add
add
add
insb
popa
jb
gs
insb
popa
push
add
add
add
jae
add
dec
add
jae
je
add
insl
popa
outsb
add
jns
je
gs
jb
addr16
arpl
imul
add
popa
add
push
push
add
add
je
add
dec
gs
outsl
data16
add
add
bound
jne
je
add
popa
add
insb
add
add
insb
add
popa
add
je
add
popa
add
popa
add
outsb
add
je
add
add
add
add
jne
ja
push
add
outsl
jo
jb
jns
