push
push
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
jp
xor
mov
push
mov
lea
mov
call
add
lea
call
inc
push
inc
call
movzwl
movzwl
mov
add
mov
call
mov
movsbl
mov
lea
xor
inc
mov
imul
mov
movsbl
lea
mov
imul
inc
call
add
dec
dec
sub
call
dec
movswl
call
and
dec
mov
imul
mov
dec
mov
inc
inc
pop
dec
add
xor
add
lea
pop
imul
movzbl
pop
mov
mov
mov
dec
pop
sub
xor
movzwl
dec
dec
imul
mov
mov
pop
dec
mov
pop
mov
mov
mov
inc
lea
call
mov
mov
mov
mov
ret
lea
inc
push
mov
mov
push
mov
add
push
movswl
push
mov
lea
push
dec
mov
lea
and
push
inc
ret
push
mov
lea
add
dec
dec
mov
sub
push
mov
mov
push
inc
call
pop
ret
jmp
inc
and
dec
add
movzbl
dec
mov
xchg
imul
dec
inc
imul
xor
inc
xor
imul
lea
inc
xor
mov
dec
jne
inc
mov
dec
dec
pop
dec
and
pop
inc
dec
pop
dec
mov
movsbl
dec
dec
imul
mov
sub
lea
imul
imul
add
ret
push
mov
inc
and
mov
inc
inc
dec
add
push
push
push
push
mov
sub
lea
push
mov
lea
mov
lea
add
add
lea
dec
movsbl
mov
sub
push
add
inc
xor
inc
or
push
dec
dec
push
dec
movzbl
pushl
or
call
lea
add
add
add
sub
dec
xor
lea
or
pop
ret
jb
inc
xor
lea
mov
mov
lea
xor
mov
inc
add
inc
dec
xor
add
imul
mov
inc
cmp
jb
add
mov
imul
sub
xor
dec
dec
xor
dec
inc
pop
lea
movsbl
test
jbe
add
inc
mov
sub
dec
mov
inc
dec
dec
dec
mov
sub
inc
imul
lea
inc
inc
lea
imul
inc
or
and
mov
movswl
mov
or
or
movzbl
inc
inc
add
mov
dec
and
mov
mov
mov
inc
imul
mov
mov
mov
mov
imul
mov
add
lea
sub
add
lea
dec
jne
mov
mov
mov
inc
xor
imul
mov
add
mov
add
inc
mov
imul
inc
mov
dec
inc
movswl
movzbl
inc
mov
lea
mov
test
jbe
lea
inc
sub
add
imul
mov
lea
lea
inc
sub
inc
lea
imul
add
add
inc
sub
dec
add
mov
mov
imul
and
inc
inc
mov
mov
lea
movzbl
or
mov
add
mov
mov
and
add
sub
mov
add
movswl
movzbl
mov
mov
mov
sub
inc
mov
movswl
lea
movzbl
inc
dec
add
mov
jmp
push
call
dec
xor
mov
or
xor
dec
dec
inc
mov
add
inc
dec
or
xor
xor
or
add
and
shl
inc
lea
xor
inc
mov
push
and
mov
sub
call
movzbl
pop
lea
lea
dec
lea
imul
dec
add
add
cmp
je
call
call
add
iret
dec
imul
dec
add
add
lea
dec
mov
inc
dec
lea
inc
add
inc
pop
mov
ret
push
dec
add
inc
mov
dec
push
mov
mov
push
inc
push
mov
push
imul
add
push
inc
lea
xor
inc
inc
call
add
push
inc
push
mov
pop
mov
imul
mov
inc
lea
mov
movsbl
dec
inc
mov
add
dec
je
lea
mov
inc
mov
dec
mov
imul
sub
dec
mov
inc
mov
mov
or
lea
sub
lea
repnz
inc
dec
add
lea
jmp
inc
add
xor
add
dec
mov
sub
dec
imul
sub
add
inc
jmp
mov
inc
sub
lea
pop
pop
ret
push
inc
inc
dec
dec
movzbl
mov
xor
sub
sub
mov
and
dec
inc
add
lea
mov
dec
dec
dec
dec
mov
add
sub
xor
and
pop
ret
sub
sub
mov
mov
inc
mov
sub
add
mov
add
lea
mov
add
inc
xor
or
dec
mov
mov
and
inc
add
add
or
add
dec
movzwl
cmp
jb
sub
push
movzwl
dec
push
mov
imul
push
dec
imul
mov
mov
sub
xor
lea
mov
xor
dec
mov
xor
xor
add
push
inc
lea
xor
imul
dec
mov
add
sub
mov
dec
inc
movzbl
dec
sub
and
xor
add
xor
sub
add
dec
sub
movzbl
lea
inc
dec
mov
movzwl
dec
lea
inc
add
movsbl
mov
sub
dec
dec
cmp
jmp
inc
sub
rcrl
jns
orps
pop
arpl
std
mov
adc
imull
test
sti
das
or
rclb
stc
std
or
sbb
jecxz
test
jne
cmc
rol
pusha
pop
mov
test
xchg
and
rorl
scas
fsubrl
fwait
and
xor
adc
pop
mov
add
loop
out
pop
mov
xchg
push
loop
cli
lret
pusha
mov
inc
dec
hlt
xchg
shlb
cmc
dec
cmp
sbb
pop
ja
lods
pop
pop
outsb
sahf
cmpsl
adc
sub
test
and
cmp
daa
push
test
sbb
or
or
es
shrb
lea
mov
xchg
leave
jp
fdiv
popf
roll
ffreep
xchg
cmc
jp
xchg
rclb
stc
add
dec
insb
jno
push
and
pop
cmp
es
dec
inc
cmpsl
lret
sti
lcall
push
push
lret
rclb
sbb
fldt
repnz
jae
pop
adc
pop
add
and
jmp
add
inc
sbb
cwtl
and
mov
add
xchg
adc
rcl
xchg
shrl
mov
inc
mov
addr16
popa
lea
and
mov
sub
mov
test
sbb
js
lahf
popf
add
mov
push
ss
adc
js
sub
push
or
mov
cmp
sti
ror
and
jmp
dec
das
pop
mull
xchg
test
dec
xchg
lods
stos
xor
fsub
mov
test
jae
lds
jae
pusha
imul
jne
mov
scas
add
cmpsb
cmp
ljmp
dec
lock
rorb
inc
jge
les
lcall
in
and
daa
pop
cmp
enter
cmp
aas
inc
xor
cmp
pop
inc
pop
mov
lock
lods
sti
rclb
xchg
push
xor
les
cmp
push
push
sbb
adc
adc
push
sub
fwait
cmpsl
cwtl
fisubl
bound
add
inc
sub
xchg
shrb
pop
jge
jp
dec
mov
adc
jle
cwtl
inc
cmc
mov
jmp
inc
and
pusha
push
out
out
leave
mov
lods
outsl
imul
sbb
jecxz
cs
add
dec
xchg
incl
sub
in
inc
insl
iret
sti
push
mov
or
lods
push
out
arpl
add
pop
adc
mov
sub
aam
lahf
cmpsl
lods
and
clc
bound
pop
mov
lds
adc
mov
dec
pop
pop
ja
xor
call
jnp
movsl
jl
rclb
xor
ss
jbe
inc
cmp
jne
mov
mov
mov
mov
jno
popf
add
push
out
imul
bound
lahf
idiv
inc
xor
dec
or
fbld
jns
push
dec
pushf
outsb
mov
repnz
xor
fisubrl
stc
outsb
push
mov
xor
jnp
aas
xchg
jmp
outsb
mov
enter
push
xchg
push
xchg
sbb
lods
loopne
mov
and
cmp
pusha
popf
out
idiv
lahf
jle
mov
cmp
dec
pop
push
mov
mov
dec
cmpsl
cmp
inc
call
lods
cmp
mov
je
andl
insb
dec
add
jb
jmp
imul
in
std
and
or
or
mov
idivl
add
outsb
add
aad
fnstcw
and
pop
ljmp
xchg
inc
cltd
add
imul
es
push
daa
ljmp
dec
push
dec
sti
pop
mov
out
popf
hlt
xor
int3
dec
mov
les
js
insl
mov
rcrl
cld
popf
adc
jo
fcoml
fs
fsubs
daa
or
sbb
lret
pop
cmpsb
cmp
shr
pop
mov
lret
loope
inc
add
sarb
xchg
push
test
dec
inc
shr
aas
sub
inc
mov
gs
das
xchg
sbb
mov
add
push
pop
cmpsl
sub
flds
inc
xchg
fistpl
xchg
in
push
push
out
gs
inc
adc
adc
jl
xor
xlat
cmc
divb
cmpl
lods
in
mov
sahf
mov
push
repnz
dec
push
jge
inc
mov
ret
sub
daa
jb
mov
jbe
mov
in
insb
adc
icebp
vmovupd
ljmp
addl
arpl
sub
sbbb
or
imul
pop
mov
cmp
mov
repz
leave
in
mov
jo
pop
and
addb
sahf
lcall
mov
mov
add
pop
pop
popf
mov
mov
adc
sahf
sub
dec
jb
cmp
dec
outsb
jae
arpl
or
pop
mov
push
and
add
jecxz
add
add
cld
mov
repnz
push
sti
insl
es
push
outsb
arpl
icebp
stos
xor
icebp
test
pop
mov
and
jecxz
adc
ds
aam
mov
jecxz
dec
out
mov
xrelease
into
mov
or
mov
inc
dec
adc
loope
xchg
cmp
repz
lds
push
mov
jne
jge
lahf
dec
testb
sbb
xchg
stos
fwait
sbb
mov
ret
dec
outsb
mov
lret
inc
push
mov
adc
lods
dec
andb
adc
xchg
pop
mov
inc
int3
mov
adc
leave
ja
mov
les
test
bound
xchg
xchg
add
inc
sbb
cmp
adc
loop
leave
fnstenv
loope
cmp
add
ss
pop
cwtl
push
xchg
lods
xor
stos
loop
or
sahf
sub
jnp
sub
loop
jle
xlat
es
inc
add
adc
shll
sarl
xchg
mov
hlt
inc
pop
cmp
add
js
push
imul
repnz
cli
sub
cmc
andb
shl
cld
pop
imul
mov
in
and
testb
or
push
cmp
mov
and
addr16
mov
gs
xor
popa
fld
dec
cmp
fwait
adc
or
sbb
jae
jns
lahf
cmpsb
push
movsl
push
cwtl
sbb
mov
shl
or
add
pcmpeqb
mov
cmovo
adc
mov
adc
or
jle
jecxz
push
ror
jp
es
adc
aam
mov
je
adc
inc
jmp
std
lahf
push
push
push
gs
inc
sub
dec
jns
out
pop
sub
mov
std
sbb
or
cltd
mov
rcll
adc
sub
dec
lcall
or
xchg
sub
push
xor
push
xchg
insl
mov
mov
jbe
scas
das
mov
in
push
ret
xor
out
xchg
dec
jbe
imul
pop
xlat
shl
adc
mov
xor
pop
popa
jl
pop
add
dec
dec
faddl
jmp
or
add
sub
xchg
mov
and
xlat
dec
push
cli
cwtl
repnz
or
mov
and
cmp
scas
mov
test
ljmp
add
mov
inc
test
mov
test
ret
dec
out
rcll
inc
adc
outsl
mov
inc
push
xchg
jae
shll
mov
shll
pop
fistps
jge
outsb
lods
decb
push
cmp
icebp
fnstcw
daa
mov
mov
lret
mov
cwtl
push
mov
or
xor
add
jbe
in
ljmp
lock
out
jae
outsl
cmp
xchg
cmp
push
jo
or
push
pop
jb
lret
sub
ss
jae
push
fimull
cmpsl
sahf
jb
xor
fwait
bound
add
gs
jns
lea
ret
mov
mov
jne
shrl
xor
icebp
mov
push
sub
mov
and
jmp
mov
pop
lds
dec
insl
nop
movsb
outsb
fdivr
call
mov
das
outsb
mov
repz
lock
or
arpl
jmp
push
dec
cmpl
js
dec
cmp
push
loopne
and
and
cmp
sbb
repz
gs
lcall
adc
sub
movsl
xchg
aad
pusha
das
xchg
es
ss
pop
jge
rcr
addl
or
mov
xor
adc
pop
jp
shr
mov
leave
stos
lea
inc
and
dec
pop
sub
mov
xor
adc
mov
movsl
cmp
insl
shl
jb
fnstenv
xor
push
adc
out
jge
stos
xchg
jb
sbb
popf
push
sbb
ret
lods
cmp
es
fstp
out
pxor
imul
decb
inc
xchg
add
sarl
sbbl
leave
outsb
pop
jg
sarb
stos
pop
mov
pop
fadd
xchg
out
push
push
sub
cmpsl
add
mov
rolb
jne
aas
mov
and
cmp
pop
mov
mov
subb
or
mul
add
mov
pop
adc
movsb
sahf
jg
int3
decb
loope
inc
mov
and
push
push
dec
aam
mov
decb
sub
mov
xchg
ret
sahf
mov
xchg
aas
push
inc
inc
pop
xchg
xchg
and
adc
and
clc
push
lock
andl
inc
pop
sbb
xchg
lahf
dec
mov
jl
xorl
push
mov
bound
daa
dec
mov
stc
scas
hlt
adc
clc
sbbl
in
pop
pushf
cmp
sub
mov
sete
mov
sti
mov
xchg
fucomi
sub
mov
jb
pop
test
movsb
push
lods
mov
push
inc
mov
jno
je
mov
xor
add
inc
pop
dec
repnz
jne
rcrb
inc
repnz
mov
xchg
and
jb
test
push
nop
into
jp
mov
adc
lcall
adc
call
andl
sbb
and
mov
cmpsb
adc
dec
inc
jb
imul
mov
and
pop
shlb
adc
les
mov
mov
mov
jmp
lret
lcall
hlt
xchg
jbe
popf
xchg
lods
call
insb
fucomi
filds
jae
stos
jp
idiv
dec
inc
fistps
or
xchg
push
ret
or
cli
test
jne
xor
xchg
lds
mov
bound
sbb
push
jno
mov
dec
mov
push
ljmp
lret
popf
lret
andl
mov
mov
frstor
aaa
imul
jne
stos
notb
xchg
cld
dec
addr16
mov
test
and
cwtl
pop
dec
sarl
dec
pop
aad
or
jo
ficompl
xor
adc
add
or
outsl
xlat
out
shrb
mov
movsl
bound
imul
jecxz
fsubl
lock
cld
int3
mov
sub
das
int3
into
orps
cmp
pop
hlt
mov
pop
repz
das
fnstenv
pop
je
pushf
push
test
lods
test
mov
rcll
push
test
add
pushf
pop
xchg
pop
sub
decb
dec
mov
mov
ja
sub
push
mov
or
mov
adc
dec
dec
int
jb
push
jns
dec
sti
cmc
mov
fdivs
mul
sar
or
ss
fidivl
sahf
mov
mov
sub
dec
subb
mov
sbb
mov
cmp
cmp
lret
insl
mov
je
pop
xor
xchg
inc
push
mov
jae
filds
xor
cmpsl
stos
and
shlb
sub
in
xchg
cmpsl
fidivrl
inc
pusha
icebp
aas
icebp
jl
fsts
fs
mov
inc
stos
fdiv
ret
add
sbb
dec
mov
imul
shlb
mov
sbb
pop
iret
mov
jp
mov
mov
add
leave
xorl
ss
lods
fcoms
jb
mov
mov
or
inc
sub
ret
dec
notl
enter
stos
in
orl
jmp
loopne
sti
notl
bound
fbstp
add
dec
inc
mov
add
cmpsb
hlt
mov
imul
adc
outsl
sub
loope
bound
in
movsl
and
inc
jb
or
mov
test
or
ja
and
divb
xchg
dec
lods
int
inc
aas
loop
out
out
sbb
rclb
mov
jg
push
leave
jns
stc
imul
daa
push
in
mov
rcl
fs
fstpl
jmp
in
aad
push
movsl
pop
mov
into
aas
aaa
xor
ja
pop
cmp
mov
add
lock
in
lcall
and
aas
ret
cwtl
cwtl
hlt
enter
fs
xchg
inc
and
loope
push
xchg
imul
decb
jno
lods
dec
inc
and
lock
xchg
cli
out
xchg
movsb
xor
and
mov
test
cmpsb
int3
lcall
cltd
clts
cmp
lret
out
or
pop
sti
mov
jb
pushf
mov
fstpl
xor
xor
sbb
mov
pusha
cmp
push
xchg
sbb
mov
lods
dec
bound
movsb
pusha
test
mov
sub
mov
jns
fsubl
cmp
mov
loopne
dec
fbstp
lahf
sbb
pop
adc
and
arpl
mov
mov
scas
jmp
mov
cld
cli
fidivs
es
cmpsl
dec
hlt
xchg
rcrb
std
sub
mov
sbb
lcall
jecxz
sbbb
imul
int
pop
inc
outsb
cld
les
mov
mov
push
inc
xchg
loopne
dec
xor
xor
test
jo
add
dec
sub
sub
enter
jge
or
lock
dec
or
jmp
sarb
pop
adc
xchg
pop
push
inc
test
push
dec
add
add
adcl
pusha
cmp
pop
rcrl
int3
inc
pop
or
js
fidivrs
dec
sbb
test
insl
push
push
loopne
xchg
pop
js
hlt
stos
push
jbe
nop
or
and
push
dec
ja
jbe
xchg
mov
mov
mov
xor
and
fidivrs
lock
sub
icebp
mov
ret
push
imul
loop
loope
ret
test
out
add
push
or
pop
scas
adc
int
fnstcw
mov
cmc
outsb
out
das
lock
and
mov
enter
ficomps
cmpsl
and
jp
inc
cli
fiadds
cmpl
mov
je
enter
and
scas
daa
shll
stc
test
arpl
xchg
pop
xchg
inc
and
mov
hlt
or
sub
lods
xor
sub
or
repnz
cld
out
sub
jle
loopne
pop
es
cmp
cmpsl
add
mov
xchg
ret
insl
push
cmp
add
mov
sbb
cmp
insl
jle
push
dec
push
mov
or
test
fisubl
lods
inc
scas
lods
aad
mov
adc
into
sbb
popf
push
movsb
xchg
xchg
nop
dec
jne
nop
nop
mov
mov
data16
lret
pop
lock
or
xchg
jmp
pop
in
cs
xchg
std
push
movb
aam
and
scas
adc
xchg
jl
icebp
or
jmp
xchg
add
sbbl
arpl
out
loopne
dec
sar
add
cmp
cs
jno
mov
dec
je
inc
out
das
sub
push
mov
mov
cmp
maxps
cmp
mov
or
pushf
ljmp
stos
aam
ss
imul
lock
subb
xchg
push
in
cmp
jl
sti
fstpl
cwtl
loope
mov
inc
cwtl
and
insl
out
fcoml
imul
hlt
je
ja
adc
gs
jp
and
inc
mov
mov
or
shll
cmp
jecxz
subb
push
xor
lcall
pop
cli
xchg
push
mov
fistpll
inc
jmp
outsb
mov
jae
jb
cmp
mov
pop
outsl
mov
shrl
pushf
scas
or
fimuls
rorl
adc
mov
cmc
sub
jmp
lret
insb
je
sti
jle
sbb
enter
or
xchg
stos
pusha
cmpsb
mov
setne
push
mov
leave
adc
pop
inc
in
mov
add
ljmp
shlb
jmp
leave
in
aaa
in
into
aam
es
stos
push
inc
dec
add
sbb
add
sub
mov
cld
cmp
clc
jbe
and
push
inc
dec
ds
mov
imul
or
push
test
out
xor
dec
xorl
sbb
push
pop
push
pusha
daa
xor
out
js
icebp
mov
push
mov
and
jmp
inc
push
mov
inc
dec
and
push
and
lods
popa
addr16
and
popa
pop
xchg
mov
pop
fisttpl
neg
cmpsb
mov
jb
jle
inc
push
pop
cmp
add
popa
call
xor
dec
into
pop
push
xorb
fidivs
fnstcw
adc
cmpsl
xor
xor
mov
mov
rolb
fwait
lods
iret
ret
mov
enter
sbbb
faddl
push
cmp
or
jecxz
xlat
lret
mov
fwait
notb
xor
lods
mov
test
cld
xor
mov
loopne
ret
or
loop
out
in
dec
pmaxsw
dec
loopne
mov
sub
je
popl
jne
shll
out
lahf
push
xchg
fs
cmp
sub
xchg
out
outsl
xchg
sahf
out
jo
lahf
ja
jl
cs
and
pop
mov
popa
scas
scas
add
xor
mov
stos
imul
jo
mov
mov
adc
loopne
sbb
mov
iret
ss
cmp
andb
sub
sbb
dec
xchg
shl
jmp
add
or
pusha
dec
add
lcall
scas
fs
dec
data16
xor
mov
dec
pop
outsl
das
int3
push
jne
sub
rcrb
test
adc
ds
push
aas
fisttps
add
insb
in
movsb
bound
mov
cld
inc
xor
sub
cld
mov
mov
pop
push
push
and
sti
mov
sub
inc
mov
in
add
insb
fmuls
lds
out
call
inc
dec
adc
pop
xbegin
xor
sbb
pop
jge
test
jns
sub
test
call
xchg
dec
push
sub
sub
pusha
cwtl
jmp
pop
push
inc
mov
add
push
jnp
mov
in
xlat
jb
dec
call
call
mov
mov
mov
jne
scas
popf
adcb
sbb
xor
xor
mov
inc
insl
leave
mov
fiaddl
xchg
mov
movsb
push
pop
popa
xor
pop
cs
mov
or
nop
xchg
mov
aad
pop
inc
dec
imul
scas
inc
inc
fimull
aad
and
or
ds
std
movsl
mov
jne
incl
addr16
mov
popf
cmp
sbb
ret
outsb
pusha
daa
in
push
mov
mov
popf
sbb
inc
pusha
popa
push
aad
scas
in
mov
adcl
cmpsb
and
ret
or
js
lret
push
push
into
aas
or
push
ret
movsb
lods
inc
sub
xor
xchg
jae
in
mov
scas
shll
mov
pop
push
negb
aas
adc
daa
add
and
or
adc
adc
enter
cmpsb
cltd
lods
incl
repz
sbb
aad
sbb
pop
push
testb
push
das
jle
add
sub
inc
insl
mov
xlat
push
mov
aas
or
push
mov
mov
hlt
popf
pop
andb
movl
adc
divl
pusha
cmpsb
push
out
mov
add
and
sbb
icebp
dec
fildl
outsl
out
popa
arpl
mov
repz
lods
stos
ret
pop
outsb
ljmp
idivl
pop
dec
pop
jle
dec
cmp
dec
xlat
arpl
inc
inc
sub
push
rcrb
imul
cmpsl
mov
jp
cmp
lret
pop
mov
push
xchg
mov
shl
stc
andb
ret
movsb
in
adc
sti
das
in
insl
pusha
push
mov
add
test
les
mov
mov
clc
pop
js
sub
out
negb
rorl
cmp
or
lret
push
dec
or
fwait
test
mov
mov
out
cmpsb
lock
add
dec
das
loop
sub
dec
lock
adc
sbb
push
test
orl
jne
xor
sbbl
jg
pusha
in
out
dec
jecxz
fstpt
pop
sub
cmpsb
and
mov
and
imul
mov
pop
or
xor
push
sub
insb
mov
dec
shlb
mov
cmp
into
mov
popa
inc
and
repz
rcrb
adc
fisttpll
sub
es
cmpsb
gs
jno
jmp
ss
imull
nop
dec
test
xchg
out
lods
push
in
xor
sbb
ret
cmp
imul
shll
aas
out
xlat
or
call
ret
popa
movsb
mov
or
nop
aas
js
popf
dec
dec
sahf
ds
loop
inc
lret
or
sahf
and
cmovno
aad
dec
dec
in
cmpsl
inc
mov
rol
hlt
sub
jg
jg
pop
iret
lods
jmp
out
push
pop
arpl
enter
mov
add
shlb
xchg
cmp
mov
stc
popa
lea
cmp
adcl
fistpll
dec
fs
lock
into
cwtl
inc
icebp
rorl
sbb
sub
insb
xor
push
and
sub
out
daa
int
push
test
shlb
mov
out
xchg
push
cmp
cmp
adc
ret
sbb
and
ss
sub
data16
jmp
cli
xchg
jp
fsubrl
in
cmp
mov
imul
pop
mov
lcall
dec
pop
xor
cvtdq2ps
lods
repz
mov
sub
jp
orl
cmpsl
test
push
test
sub
out
cmp
jmp
cwtl
lods
push
mov
inc
fcoml
popf
sub
cmc
mov
test
cmp
and
xchg
jl
sub
mov
arpl
cwtl
and
mov
jnp
or
inc
sub
pop
jmp
in
das
divl
mov
jmp
lret
shrb
xchg
fnstenv
lock
xchg
mov
aaa
mov
mov
xchg
fldcw
bnd
pop
dec
xchg
fs
cmp
sbb
icebp
daa
insb
or
pop
leave
push
cwtl
xor
leave
xor
or
jb
xor
lret
iret
xor
lahf
fcoms
inc
sub
xor
sub
shll
pusha
lcall
push
adc
mov
pop
xchg
or
mov
jge
jnp
xor
call
jb
xchg
ja
sub
fnsave
aam
cmpsb
dec
mov
enter
xchg
cvttps2pi
leave
jo
push
lahf
testb
sbb
cwtl
popa
leave
sub
insl
cmp
aam
inc
mov
push
mov
jg
fisubrs
stos
push
inc
dec
jp
push
rcr
mov
or
and
or
push
pop
and
add
sub
jne
jns
lea
and
aam
or
inc
pop
pop
test
lret
sub
dec
stc
add
xlat
mov
lret
cli
aas
inc
ret
cmp
xor
adc
xchg
rcrl
or
mov
adc
std
sub
repnz
and
dec
pop
cltd
mov
jg
stos
dec
popf
jge
cs
sbb
sub
sbb
in
iret
shlb
stc
mov
cmc
test
mov
or
mov
xchg
in
inc
testl
cmp
cmp
nop
mov
in
or
or
lea
jbe
insl
sbb
push
jmp
fistl
sub
and
repnz
dec
fwait
stc
mov
inc
cmp
push
pop
xchg
pop
int3
idivl
rolb
nop
cld
lock
add
rcrl
or
out
ds
xor
mov
xor
insl
jmp
js
xor
mov
sbb
adc
xchg
cli
in
daa
jb
mov
repnz
lock
xchg
xchg
add
sbb
cmp
sub
xchg
and
inc
cli
add
mov
adc
lahf
out
clc
dec
mov
sti
adc
pop
or
stc
imul
adc
or
xchg
cmp
pop
sub
in
clc
pop
outsl
dec
pop
mov
inc
lods
iret
dec
into
notl
inc
cmpsb
clc
insl
sbb
push
xchg
and
mov
mov
pop
push
jmp
pop
sub
hlt
dec
add
repnz
lods
mov
push
xchg
loope
pop
je
fldenv
xchg
fisttps
inc
mov
lcall
ret
pop
pop
daa
call
jp
add
int3
mov
push
jb
imul
mov
rcrl
cmp
je
lcall
cwtl
cmpsl
mov
in
jge
push
fs
adc
jmp
shrl
test
jl
out
ss
cmp
lods
hlt
xchg
ret
iret
mov
or
or
int3
mov
cmpsl
mov
sbb
das
mov
pop
mov
add
xor
push
cmpsl
xlat
outsl
cli
and
repnz
pop
rcr
push
and
adc
rcl
xor
xor
jp
inc
mov
sub
addr16
cld
mov
ljmp
sub
adc
or
mov
cmp
pushf
roll
add
inc
ja
loop
ss
and
es
test
test
loopne
add
mov
adc
mov
test
int3
jg
clc
fstpt
scas
jp
mov
xchg
inc
arpl
loop
mov
or
bound
mov
adc
inc
rcll
pop
fcompl
cs
aaa
insl
out
loop,pn
inc
xchg
lock
sbb
xchg
or
jecxz
mov
das
nop
mov
pop
call
fdivrs
mov
inc
xor
mul
xchg
test
out
ljmp
inc
gs
jo
sbb
or
mov
mov
cmpsb
mov
mov
out
add
mov
push
and
and
mov
loop
cmp
push
mov
jbe
sub
hlt
mull
inc
aaa
xor
jo
and
cmpsl
bound
test
sbb
xchg
mov
fdiv
pop
cwtl
pop
mov
lock
aaa
jo
xor
sti
jecxz
cli
addl
or
mov
or
nopl
dec
mov
xlat
scas
fldcw
js
push
xor
aas
xor
push
mov
xor
jne
por
int
inc
jle
add
jbe
scas
fdiv
jne
imul
mov
imul
jo
inc
fcmove
cmp
lahf
jge
add
test
lods
dec
into
ret
iret
cmp
sar
inc
stos
cmpsb
fwait
add
mov
push
clc
sbb
cmova
jne
test
cmp
aas
jmp
xacquire
leave
xchg
or
lahf
xchg
int3
mov
fistpll
mov
mov
cmp
sub
mov
nop
cmp
outsl
aam
out
mov
dec
or
dec
cwtl
xchg
fisubl
cli
js
loop
fs
cmpsb
repz
ret
test
lret
je
daa
das
lock
sbb
inc
cmp
jg
das
adc
aam
lds
ret
xor
sub
nop
cwtl
shr
pop
cmp
add
adc
xor
fistpl
ret
or
push
or
dec
enter
jg
xor
sub
lcall
dec
aam
subb
xor
icebp
fs
fwait
leave
cmpsl
jle
sti
dec
mov
jo
addl
pop
fwait
cmpsb
push
nop
mov
clc
adcb
add
jns
or
mov
push
insl
dec
mov
or
sbb
sar
xchg
xchg
stos
rol
sub
out
loopne
jg
pop
adc
mov
add
and
cmc
outsl
xor
pusha
jle
call
push
nop
mov
or
dec
push
outsl
cmpsb
and
mov
push
out
jbe
fwait
js
cmpsl
fsub
rcrb
loopne
repnz
push
pop
mov
adc
jmp
addl
sbb
push
test
cwtl
mov
je
insb
jecxz
jb
dec
int
xlat
cmc
sub
and
rorl
pop
add
mov
ja
pusha
ja
cld
sbbl
jge
xor
mov
push
xchg
imul
lods
pop
sbb
xor
stc
or
ret
rorl
adc
push
jne
xchg
push
test
stos
mov
sub
sti
sbb
jge
sub
sub
xchg
xor
xchg
in
cmp
lds
hlt
fldl
mov
leave
into
sub
shll
int
push
fmull
add
and
add
inc
les
lcall
gs
stos
xchg
mov
xor
add
fs
sub
ret
gs
and
aad
mov
ljmp
xor
mov
mov
mov
xlat
inc
fs
sbb
fstps
xor
sbb
aad
push
mov
xor
inc
mov
mov
mov
jl
dec
mov
ret
sbb
repz
loope
daa
or
ljmp
in
mov
adc
ds
imul
lahf
ds
or
ret
dec
sbb
dec
imul
jb
inc
imul
and
ljmp
adcl
jge
and
sub
int
popf
add
lahf
or
lock
mov
movsl
lock
sbb
mov
sbb
xchg
ret
xor
mov
mov
jmp
mov
sub
jp
dec
imul
pop
mov
jnp
fwait
mov
enter
sub
xchg
out
adc
mov
and
push
inc
dec
push
jle
adc
orb
fimuls
aam
mov
jno
movsl
pop
jp
mov
icebp
bound
jbe
dec
ret
inc
mov
inc
test
dec
pop
cmp
xor
and
jmp
or
lods
orb
mov
daa
es
ja
cmp
in
loop
xlat
xchg
int
test
lret
mov
sbb
test
cmp
inc
lahf
stc
mov
push
add
cmp
and
sahf
call
xor
out
imul
pop
testl
push
gs
sti
enter
add
push
test
dec
or
fsts
mov
insl
sbb
les
adc
mov
sub
sahf
pop
fisubl
cli
in
push
xchg
jo
pusha
pop
mov
inc
xor
mov
ljmp
jge
sub
repz
xchg
push
inc
jg
mov
jl
daa
cmpsl
jo
lret
or
ret
pop
or
iret
dec
hlt
rorl
pop
or
dec
push
insl
mov
outsl
inc
dec
cmp
cld
je
dec
ret
icebp
cmp
xor
xor
int
rolb
cld
mov
xor
sub
cltd
insb
push
lret
adc
mov
lds
hlt
ficoml
into
outsb
adc
mov
pop
dec
sbb
fwait
out
pushf
daa
mov
lcall
push
adc
push
xor
push
pusha
sub
arpl
fcoms
adc
gs
stc
or
sub
aaa
adcl
in
cmpsl
mov
xor
xchg
cmpsl
test
fst
out
and
fldcw
mov
pop
or
scas
icebp
jmp
pushf
mov
lods
add
outsl
lods
xchg
cmp
rcrl
mov
adc
mov
mov
shlb
jmp
movsb
test
insb
shrl
je
jle
and
mov
insb
mov
repnz
gs
jnp
jp
push
push
or
popa
or
and
int
pop
cmp
xor
sbb
adc
fs
movsb
pop
dec
cmp
xor
iret
mov
popa
jmp
outsb
cld
in
shll
mov
and
sub
aad
pop
test
cmp
mov
loop
mov
and
cmpsl
call
cmpl
bound
enter
scas
or
mov
or
out
add
mov
std
out
mov
xchg
dec
pusha
push
clc
sbb
or
das
aam
ret
mov
mov
lds
pop
lods
ret
or
mov
stc
jle
xor
movsl
inc
jnp
loop
add
dec
inc
cmpsb
xchg
push
mov
sub
andb
and
cld
cmp
push
insl
jp
xchg
outsb
xchg
mov
or
push
insb
data16
push
aaa
mov
push
push
jecxz
or
mov
pushf
sbb
mov
js
cmpsb
fisubs
sub
iret
gs
cld
arpl
jmp
aad
loope
mov
out
daa
jle
inc
xor
jmp
xchg
push
je
jmp
test
es
inc
in
ja
sbb
movsb
loope
jle
lret
enter
add
das
aad
mov
mov
mov
xor
fstpl
test
cmp
loope
cmp
mov
test
lods
outsb
mov
inc
mov
mov
cmpsl
push
jae
push
xchg
rcr
jo
mov
xor
test
in
add
addl
adc
lahf
xor
dec
jne
test
add
jae
movsb
lret
popa
sub
int3
test
jp
fs
lret
addb
aaa
xor
loope
jno
mov
adc
mov
cmpsb
scas
jle
imul
or
push
inc
pop
cmp
pop
outsb
xchg
es
and
scas
sbb
inc
jnp
aad
sub
aam
mov
fwait
scas
rcll
std
icebp
sub
mov
ljmp
in
inc
adc
shl
pop
test
int3
ss
inc
stc
icebp
add
xchg
imul
loope
jl
add
jmp
leave
mov
sahf
scas
dec
and
dec
int
sbb
xor
mov
jecxz
push
addr16
cmpb
cmp
aaa
les
ja
stc
sub
cmp
sti
or
sub
mov
leave
jle
sbb
ret
jns
mov
popf
adc
cmp
cld
dec
arpl
into
mov
dec
push
jecxz
flds
cwtl
shrl
icebp
adc
push
ret
and
mov
andl
inc
mov
ret
ljmp
loope
inc
pushf
push
fildll
jbe
sub
and
or
dec
mov
add
mov
push
popf
push
or
insl
aas
dec
sbb
movsb
push
je
in
stc
outsb
mov
stc
mov
pop
dec
cmp
adc
lcall
mov
cmp
dec
cs
out
jbe
movsb
push
imul
inc
dec
pop
pop
fs
into
test
xchg
sub
mov
xchg
ret
xchg
mov
sbb
scas
adc
popf
loop
fsts
sub
insl
jns
push
pushf
sti
rcrb
and
sbb
fldl
out
clc
int3
mov
repz
sti
incb
mov
in
inc
popa
mov
adc
fwait
loop
je
jnp
ss
daa
and
inc
out
out
inc
ficompl
fst
sbb
and
ret
test
or
mov
cmpsb
mov
repz
sbb
pop
cmp
pop
movsb
fsubrl
sbb
xor
dec
push
mov
fwait
push
inc
ret
ret
mov
jns
push
rcl
pusha
jne
jnp
jmp
pop
enter
andl
add
and
les
dec
xor
mov
dec
out
push
adc
out
stos
or
test
mov
fadd
xchg
popf
sub
dec
lahf
lahf
cmpsb
lcall
lds
sbb
mov
popa
sub
insb
add
xlat
fwait
scas
jg
fs
cmp
jnp
divl
inc
sub
sbb
repz
jmp
daa
mov
stos
jg
cs
leave
fnstenv
daa
cmp
inc
adc
das
mov
js
lods
ja
sub
repz
mov
ljmp
and
jle
sub
clc
fmull
mov
and
ror
jecxz
jb
icebp
jb
cmp
mov
ret
xor
stos
jmp
push
lcall
cmp
movsb
mov
lods
and
aam
test
inc
outsl
jo
sub
fcomip
xor
xchg
xchg
fists
int3
js
push
lock
jmp
mov
lods
xor
cmc
mov
pop
call
pop
shlb
scas
icebp
or
lret
mov
mov
icebp
sbb
mov
gs
mov
jg
sub
mov
addr16
push
cmc
lret
imul
jnp
sbb
loop
pop
in
dec
scas
sub
and
stc
jnp
lock
aas
xor
sub
cli
outsl
sub
sub
push
int
xchg
ds
insb
jbe
cmp
mov
jbe
test
jmp
or
dec
mov
mov
cmc
cmp
test
imul
and
int
jns
xlat
stc
mov
loop
iret
js
xchg
xchg
or
mov
scas
cwtl
dec
negl
dec
std
cmp
mov
xchg
mov
push
movsb
mov
lock
cs
dec
loop
mov
out
les
dec
jp
adc
xor
push
test
or
mull
mov
ds
push
mov
cld
cwtl
dec
sub
cmp
or
adc
out
mov
jge
mov
inc
adc
test
xchg
incb
data16
imul
std
sbb
sbbb
and
xchg
movsb
fyl2xp1
fisubs
fsubr
jno
scas
add
pop
pop
ds
cmc
in
into
sbb
cmp
fisubs
out
inc
jmp
stc
push
and
cmp
add
das
test
or
add
xchg
jl
stc
xchg
sbb
aad
ret
out
lds
inc
scas
lret
outsb
xor
push
in
inc
cmpb
and
stos
call
cmp
testl
fidivrs
sub
dec
outsl
scas
mov
inc
aam
stc
jl
out
aam
test
cmp
das
or
stos
xor
stc
cmp
mov
dec
mov
and
mov
xchg
aas
mov
xor
xchg
sub
cmp
xor
jecxz
test
fcomi
push
push
lahf
add
inc
lahf
jmp
dec
repz
mov
outsb
loope
sti
repnz
lods
rorl
lret
cmp
jg
bound
test
ret
jp
push
jmp
push
data16
in
adc
xchg
push
adc
or
and
add
sub
push
repnz
arpl
sti
add
xor
mov
adc
jmp
push
int3
loope
push
repz
lods
fisubrs
das
pop
gs
inc
and
mov
dec
cli
mov
movsb
je
and
push
leave
adc
pop
inc
add
add
test
call
mov
outsb
push
xor
push
push
outsl
mov
xchg
add
jns
and
aas
out
jne
sbb
fildl
and
sbb
cwtl
das
lds
sbb
roll
dec
pop
lret
adc
stos
hlt
mov
push
jle
inc
mov
addr16
jbe
sub
or
lock
jae
cld
push
mov
inc
ljmp
aaa
stos
push
daa
cmc
sarl
mov
ficoml
pmaxub
push
sbb
movsb
stc
mov
popa
aaa
lock
mov
xor
mov
cwtl
or
pop
jns
popf
xor
cs
jno
mov
and
fnstsw
push
push
xor
sarl
inc
pop
jno
cld
popa
popf
mov
dec
imul
mov
dec
scas
mov
mov
lods
lods
jg
cmp
cmp
rcrb
imul
push
sub
inc
sbb
rclb
fnsave
pop
and
scas
mov
or
repz
int3
rorb
adc
add
sbb
repnz
jmp
call
fdivl
jmp
adc
sub
mov
push
xchg
mov
cltd
mov
mov
mov
push
cltd
add
adc
and
rcrb
mov
mov
push
outsb
mov
lock
jne
fldt
pop
xchg
mov
push
addl
inc
cmp
insb
pop
das
sti
sbb
mov
int
pop
xchg
push
push
faddl
add
jmp
mov
gs
push
fistps
dec
js
dec
jge
sub
adc
or
jno
mov
mov
dec
divl
cmc
lea
xchg
ss
and
lcall
xor
jo
fimull
cmp
sbb
mov
jns
adc
mov
push
sarb
loopne
sbb
mov
pop
add
cmp
out
test
cmp
cld
push
lahf
jmp
sahf
cmpsl
ffreep
sahf
and
outsl
or
jno
movsl
jnp
dec
data16
adc
testb
test
pop
les
cmp
sbb
call
xchg
add
in
lcall
nop
das
test
mov
inc
in
imul
ret
mov
jno
lds
pop
adc
push
pushf
xor
pushf
xchg
pop
out
dec
in
into
adc
lcall
hlt
fisubs
ret
loopne
popa
inc
dec
leave
push
ss
repnz
jne
sti
jl
push
jbe
mov
lahf
xchg
dec
pop
clc
ficomps
lcall
mov
imull
iret
pop
inc
int
imul
les
push
shll
inc
sub
popa
pop
push
mov
xor
push
retw
outsb
shl
addb
js
decl
add
jg
ss
inc
dec
xor
mov
sbb
xor
mov
bound
into
aam
adc
xor
cmp
sbb
insl
aas
mov
pusha
inc
cmp
outsl
iret
or
nop
cwtl
and
push
fnstenv
test
lock
push
aam
pop
sbb
stos
scas
aam
xchg
cltd
out
cwtl
and
sub
push
push
pushf
jg
inc
or
adc
test
jmp
pop
jns
or
pop
fstpl
push
lods
jb
jl
lock
cld
sti
push
rcrl
inc
scas
sub
mov
push
lcall
sarb
sbb
adc
mov
or
outsl
lahf
inc
mov
fistpl
and
fs
fists
jb
xchg
sbb
inc
int3
imul
aas
je
add
pop
ja
xlat
lock
jl
out
loopne
ds
inc
mov
mov
push
add
push
jp
or
out
rcrb
pop
dec
xchg
mov
and
mov
or
add
mov
xlat
iret
mov
ret
iret
in
cmp
adcb
out
scas
daa
mov
mov
add
dec
jae
lret
and
add
mov
add
cli
insb
jns
jo
rorb
rolb
add
sub
andb
xlat
xchg
sub
xor
pop
xor
outsb
dec
je
push
lcall
add
lds
mov
in
mov
mov
adc
out
dec
xor
xorl
or
push
cmc
or
lret
push
dec
pop
sub
xlat
mov
push
aam
loop
sub
in
cli
pop
or
into
xchg
shll
jae
inc
sarb
ds
pop
mov
stc
xor
fisttpl
cwtl
mov
das
lods
adc
fistpl
pop
sbb
shrb
mov
icebp
insb
push
sahf
fmuls
xlat
cli
mov
jecxz
je
aad
je
mov
das
push
movsl
pop
jl
adc
decb
out
outsb
popf
int
lcall
sub
daa
decl
fwait
cmpsb
insl
xchg
push
xchg
stos
sbb
scas
loopne
sbb
das
aam
sbb
jbe
sbb
les
sub
cmp
cld
jmp
repnz
in
mov
das
jo
push
insb
xchg
in
adc
sbb
and
in
and
test
mov
clc
sbb
dec
cmpsl
cmpsb
push
bswap
mov
ds
sarb
fcmovne
push
push
addr16
ficoml
mov
mov
and
cmp
inc
idivl
imul
insb
xor
movsl
cltd
mov
mov
cmpsb
les
lods
jno
outsl
adc
push
mov
dec
ljmp
test
push
cwtl
push
pop
cltd
mov
mov
insb
js
hlt
fisubrs
mov
fwait
sbb
push
mov
scas
jno
mov
mov
mov
int3
sub
ret
out
sbb
int
mov
jb
pop
ljmp
daa
mov
mov
jb
orl
push
scas
inc
dec
push
cwtl
lea
or
scas
iret
jnp
cmp
sbb
xchg
and
jo
ret
test
fs
sbb
in
sub
or
out
pop
int
leave
mov
imul
xor
mov
pop
add
and
rolb
lea
aas
repz
sbb
adcb
jg
jnp
mov
xor
xchg
sub
mov
pusha
mov
pop
jnp
pop
ret
shl
cmc
sar
xchg
lds
mov
and
sbb
into
nop
test
std
jno
pop
mov
add
lods
lock
mov
lods
dec
in
adc
jb
cmp
inc
inc
orb
or
pusha
xor
pop
jp
inc
icebp
repnz
je
lods
add
jmp
sub
ret
lock
inc
out
xchg
xlat
pop
and
divb
push
imul
loop
in
mov
sub
push
outsl
scas
aad
jns
jne
testl
push
cmp
inc
in
cld
inc
int3
bnd
inc
cmp
shll
push
fxch
movsl
jmp
xor
std
js
mov
xlat
mov
cld
lret
cmpsb
repz
imul
cmp
shll
test
subl
add
mov
loope
xchg
test
xchg
lods
fs
mov
sahf
add
push
je
test
mov
aad
bound
mov
call
add
dec
out
jle
jbe
and
aaa
sub
mov
and
lcall
lahf
cwtl
cmp
incl
adc
sbb
subb
sub
sub
adc
xorb
mov
mov
pop
cmp
in
jnp
lret
mov
loop
insl
imul
sbb
lret
cmpsl
call
lods
push
push
push
xor
test
jl
orb
fnstsw
or
mov
sbb
add
pop
ss
push
or
inc
into
sbb
xor
es
pop
push
in
xor
aam
loopne
xchg
js
push
jg
outsl
mov
repnz
push
inc
lds
clc
mov
sbb
shll
shrl
dec
sti
iret
jmp
and
or
xchg
pop
pop
out
and
pop
xor
leave
or
push
or
jecxz
mov
mov
pop
push
mov
mov
data16
xor
push
add
shl
call
popa
jle
push
cli
aad
inc
into
mov
inc
lock
xor
add
data16
mov
daa
jb
mov
push
sahf
lea
cmpl
adc
pop
arpl
mov
mul
je
ret
sbb
cwtl
sahf
icebp
popf
push
or
adc
sub
mov
addb
lea
pop
xor
jno
out
pop
enter
imul
sbb
pop
jg
scas
repnz
gs
jo
xchg
xor
or
push
or
test
jl
mov
push
stos
and
sbb
fsubrl
imul
sbb
and
dec
jno
mov
push
hlt
nop
or
add
and
les
sahf
jge
in
in
es
into
cmp
sahf
sub
das
call
dec
les
nop
mov
insl
xchg
lods
sbb
jge
enter
push
sbb
and
sub
xchg
dec
pushf
inc
mov
mov
int3
bound
mov
adc
ror
pushf
add
push
popf
orl
adc
repnz
mov
mov
xlat
pop
mov
and
cmc
xchg
mov
dec
sbb
push
jp
fsubp
jne
call
jnp
mov
dec
jnp
dec
mov
cmp
push
adc
mov
aad
jg
inc
pop
inc
pop
shrb
ret
test
xchg
iret
inc
jne
jg
js
stc
loop
mov
push
add
stc
xchg
xchg
insb
pop
sbb
loop
repz
mov
dec
push
add
push
dec
xor
xchg
mov
ss
xchg
pusha
jecxz
mov
lcall
test
les
xchg
movsl
cmpsl
clc
rorb
xchg
shrl
push
lods
ljmp
icebp
testl
out
movb
or
lods
mov
push
lahf
jge
pop
adc
mov
sbb
into
mov
mov
inc
mov
addr16
push
rorl
mov
xor
jmp
adc
faddl
cltd
or
push
add
bnd
int3
sub
push
jg
adc
add
mov
shl
mov
mov
mov
movsb
mov
mov
push
les
sbb
fists
cmp
jno
stos
add
ss
jp
pusha
ds
mov
adc
sbbb
cmp
adc
mov
jmp
dec
gs
inc
insl
out
and
jmp
jg
inc
cmc
imul
shl
pop
cltd
sbb
jecxz
pop
push
aas
mov
negb
or
fwait
repnz
arpl
mov
loop
jmp
fwait
test
add
xor
addr16
xchg
loope
les
inc
mov
imul
scas
ss
out
sahf
lret
inc
outsb
and
outsl
xorl
jne
add
es
dec
addr16
push
cli
sbb
fisubrs
or
jl
and
pop
nop
mov
pop
jne
inc
in
add
lock
pop
fwait
loope
push
sub
add
pop
mov
sub
inc
or
or
jns
sub
shr
mov
lret
popf
pop
js
mov
orl
jo
sbb
call
xchg
and
dec
cs
xchg
xchg
mov
or
sub
pop
inc
jo
sahf
lahf
cltd
jns
inc
xor
xchg
mov
out
sbb
and
sbb
in
mov
loop
repz
clc
adc
jle
cmp
andl
idivb
adc
inc
mov
jg
push
push
mov
sbb
jmp
and
out
cs
std
lret
daa
dec
aaa
scas
jo
mov
fnstenv
clc
push
cmpxchg
xor
mov
inc
enter
sbb
imul
sub
jg
jle
pusha
jae
ljmp
sub
adcb
popf
pop
popf
rorl
sbb
mov
xor
sbb
jl
pop
inc
ret
int
into
xor
in
popa
inc
loope
nop
cmp
jge
cmpb
sub
push
je
aaa
jl
jo
fucomp
arpl
mov
ficoml
lock
mov
fs
loope
aaa
sbb
insl
or
aas
data16
insb
out
push
out
cmc
adcl
xchg
xor
inc
xor
jns
cmc
aaa
icebp
dec
mov
stos
cmp
fisttpll
add
aam
inc
jne
cmpsl
mov
cmovo
adc
fcmovb
xlat
jns
arpl
fs
mov
das
mov
sahf
push
scas
inc
sub
xchg
in
push
jge
push
pop
xor
sahf
xchg
mov
sub
push
out
test
andb
xchg
and
movsb
jecxz
aaa
jle
adc
popf
ja
scas
fiaddl
pop
mov
inc
sahf
sti
lahf
adc
popf
adc
jno
scas
pop
repnz
adc
jae
cmp
jmp
sbb
aas
add
popa
ficoml
push
aaa
arpl
jae
inc
ficoml
mov
hlt
cmp
xchg
inc
add
or
jb
pop
push
aam
xor
shlb
xchg
mov
and
mov
jmp
notb
and
aaa
jmp
pop
cmc
jne
mov
shlb
ja
cmp
int
insb
es
sub
cmp
sub
and
adc
aaa
rcrb
add
stos
ds
cmp
mov
stos
xor
clc
cltd
test
arpl
jmp
js
scas
sbbb
es
sbb
xchg
push
leave
movsb
pop
and
mov
insl
aad
mov
add
cmp
mov
les
jl
pop
push
xchg
cli
and
and
fsqrt
sbb
sub
dec
push
hlt
enter
xchg
mov
sub
xor
cmpsl
cmc
push
arpl
insl
fisttpl
cmc
pop
std
push
pop
popa
xor
mov
push
sbb
cmpsl
push
mov
and
push
pushf
inc
aaa
int3
test
dec
imul
cmp
push
xor
lds
pop
or
fdivr
xor
rcrb
in
imul
add
mov
and
call
mov
adcb
and
stos
sub
pop
out
lods
int
pop
cmp
ds
mov
or
add
pop
into
out
sbb
add
jg
inc
xchg
push
lea
rcrl
push
inc
add
cmp
mov
pop
adc
pusha
mov
mov
ret
das
mov
insb
inc
sub
rorl
jmp
loopne
loope
push
push
jl
popf
imul
int
push
mov
jnp
loop
mov
sbb
bound
mov
add
mov
stc
pop
cld
fwait
push
and
and
mov
notb
jl
sar
pop
push
stos
adc
xor
sbb
dec
cmp
add
icebp
mov
jl
jmp
inc
cmpsb
fildl
nop
aaa
or
push
lret
adc
xor
scas
popf
sub
pusha
push
and
push
dec
cmp
adc
dec
jbe
xchg
ret
fucomip
cmp
jp
mov
out
pop
mov
sbb
cmp
hlt
dec
xor
mov
addb
stos
gs
xor
jmp
fldcw
or
xor
movsb
adc
faddl
sub
inc
inc
je
subl
fnstcw
insl
mov
jo
or
inc
out
xchg
scas
mov
divl
or
fs
xchg
lret
ss
push
inc
mov
leave
popf
sub
xor
ss
or
mov
mov
aaa
mov
inc
and
ljmp
cwtl
cmp
inc
rolb
push
jno
loope
ret
mov
leave
push
jmp
int
out
cmc
xchg
hlt
cmp
sbb
add
mov
lcall
fucomip
jecxz
fs
sub
push
inc
xor
push
rolb
push
repz
xchg
xchg
sarb
lret
mov
xor
xchg
or
mov
popa
or
xor
fadds
les
cmp
xchg
ss
or
sbb
mov
dec
or
aad
fadd
gs
pop
adc
insl
cltd
sbbb
add
inc
test
or
into
mov
sub
repnz
sub
adc
incl
dec
mov
imul
jb
dec
hlt
les
lret
cmp
gs
mov
loop
scas
cmp
mov
jecxz
lcall
fistpl
outsb
fistpll
inc
lcall
pop
dec
dec
jno
fwait
movsb
mov
fwait
push
jl
enter
adc
push
sbb
mov
fld
loopne
out
stos
push
insb
bound
adc
inc
clc
mov
mov
sub
fsubrl
icebp
loope
test
fs
jb
mov
repz
mov
test
fs
bnd
les
out
scas
inc
jmp
out
cmp
out
int3
fcompl
sbbl
jge
jmp
push
xor
xchg
adc
dec
cwtl
icebp
adc
dec
sbb
enter
push
mov
push
add
and
out
adc
xchg
cmc
push
arpl
pop
pop
sar
jecxz
inc
dec
or
ret
inc
imul
sub
shlb
jns
sub
xchg
xor
mov
push
sbb
or
jecxz
and
cwtl
mov
icebp
or
out
shrb
adc
jg
jge
jbe
mov
xor
xor
fdivrs
out
add
pop
stos
inc
loope
inc
xchg
mov
mov
dec
sub
aaa
sbb
aaa
pop
mov
add
pop
push
push
and
negl
sbb
ffreep
clc
mov
mov
stos
cltd
add
or
inc
and
xchg
sti
ljmp
xchg
mov
mov
and
es
aam
int
or
pop
jno
rcrb
mov
inc
shll
in
mov
fcomps
insb
sub
xchg
out
stc
gs
mov
mov
or
faddl
mov
inc
out
in
insl
test
sar
leave
mov
lods
in
jle
xor
lds
pop
aas
dec
or
das
data16
mov
xchg
cmp
inc
adc
jae
push
inc
test
jae
daa
mov
sbbb
pop
add
in
sbb
jg
ljmp
insb
ret
pop
mov
xchg
ret
mov
dec
xor
call
ljmp
int3
pusha
cmp
xchg
sahf
gs
fisttps
clc
xchg
add
or
or
inc
dec
push
cmp
dec
cmp
out
pop
jl
or
out
es
loopne
pop
decb
jb
lret
lret
sub
xchg
sbb
aas
addl
adc
clc
ficompl
pop
shl
mov
ffree
repnz
cltd
cmp
mov
into
fisttpl
push
pop
call
or
mov
nop
xor
xor
cmp
fistpl
adcl
xchg
dec
or
push
loopne
mov
leave
les
ficomps
mov
movsl
mov
cmpsb
stos
dec
or
scas
fwait
je
and
jno
popf
pop
sti
dec
in
test
add
psubq
cwtl
cmpsl
cmp
test
out
cld
pushf
rcrl
xchg
cld
jl
aas
jmp
cltd
aad
test
lret
leave
push
mov
out
cmp
setae
pop
dec
adc
arpl
jo
std
outsb
out
lods
ret
inc
fisubrl
test
xlat
in
jmp
cmp
das
shr
cmpsl
imulb
mov
push
jp
and
bound
dec
adc
fs
rclb
ret
imul
inc
cmp
inc
int
out
popa
lret
mov
xor
out
fwait
into
jbe
mov
pop
mov
addr16
ret
stos
pop
cmp
pop
test
cmc
and
lahf
arpl
xchg
sbb
and
xor
add
sub
scas
out
inc
push
fiadds
aam
scas
sbb
fisttpll
or
add
xchg
mov
pushf
mov
push
lock
stc
and
xchg
stos
sub
mov
pushf
dec
cmc
and
sub
lahf
cli
mov
gs
in
inc
xor
xchg
movsl
pop
ret
mov
adc
push
jnp
insb
daa
push
call
aam
imul
pop
stc
jnp
mov
cmc
push
sbb
mov
scas
inc
test
imul
jno
ja
leave
movd
outsb
push
int
insb
or
imul
cmp
inc
rcrb
cmp
sub
scas
fwait
shll
fnstcw
bound
xchg
adc
and
notl
xchg
pop
outsb
adc
jno
sbb
in
test
push
roll
adc
aaa
js
aam
xchg
nop
push
inc
push
xor
bound
cltd
mov
push
jg
fldt
push
xchg
fsubrs
mov
mov
and
test
clc
sub
or
in
imul
xor
int3
scas
mov
das
pop
int
mov
cmp
xchg
out
sbb
jmp
pop
pop
sbb
ds
fisttps
and
pop
mov
in
icebp
fnsave
sbb
mov
test
clc
adc
dec
mov
sarl
iret
sbb
mov
jne
fldt
repnz
fdivrl
out
cld
dec
jae
cmp
ret
rcll
sbb
rcll
push
mov
out
or
xor
cwtl
add
sub
fiadds
movsl
pop
jnp
jbe
xor
insb
mov
mov
or
rcll
mov
add
nop
pusha
mov
rclb
lret
les
sbb
inc
bound
jns
jg
or
cltd
lock
insl
pop
sti
mov
mov
cmpsl
xchg
push
mov
scas
pop
out
stc
xor
jge
out
movsl
jbe
cli
ds
mov
cmp
lcall
sub
inc
out
js
aam
pop
fmull
jl
xchg
mov
pop
lret
stos
inc
push
icebp
cmp
addr16
push
inc
iret
adc
sub
out
shr
sub
dec
fbstp
add
xchg
mov
jmp
aad
push
sbb
add
call
push
mov
sub
jl
xor
out
test
jae
xor
aaa
arpl
std
dec
push
ljmp
xchg
dec
pop
stos
lock
dec
cli
test
sti
mov
or
sub
dec
in
lods
mov
fwait
cmp
out
stos
inc
pop
mov
nop
es
test
and
mov
jp
and
mov
enter
mov
inc
lds
aad
push
outsb
adc
sbb
jmp
mov
push
inc
test
pop
dec
pop
cmp
imul
adc
dec
je
loop
and
inc
out
push
ret
cs
cltd
inc
cmp
imul
out
and
pop
mov
arpl
ret
push
pop
rolb
jnp
sub
xchg
mov
fadds
xchg
ds
imul
out
sub
jmp
add
into
xchg
in
leave
les
sub
pop
int3
xlat
in
ret
mov
jge
sbb
and
add
je
pop
loopne
div
jb
pop
testb
stc
jecxz
icebp
sub
aam
lahf
xor
mov
or
adc
sbb
repz
leave
scas
outsl
int
das
jnp
fimuls
aam
pop
xchg
dec
and
aas
mov
xchg
sbb
pop
jne
mov
rcll
pop
push
pusha
sbb
and
sbb
cs
nop
sub
mov
sbb
insb
adc
iret
sahf
adc
out
stc
addr16
gs
dec
mov
sub
test
cmp
andl
rolb
mov
pop
xorl
stos
adc
xor
fsubs
push
xor
mov
out
cld
adc
scas
push
xor
ss
repnz
push
data16
jbe
rcrl
repnz
movsl
lret
xlat
es
jge
lcall
or
jmp
dec
pop
push
jnp
fnstenv
mov
jge
mov
in
iret
aaa
dec
add
bound
push
test
insl
sub
insb
sahf
js
in
out
fdivrl
inc
cmp
enter
pop
mov
dec
xchg
int3
or
jne
int3
and
sub
adc
add
dec
xor
leave
incl
adc
cmovnp
aam
xor
outsb
rcl
rcrb
sti
cmp
lret
scas
mov
js
push
pop
lock
outsb
xchg
rorb
jb
movsl
shll
cmp
arpl
jmp
jne
aas
lock
out
je
out
and
addl
xchg
leave
scas
in
pop
mov
xlat
mov
and
out
xchg
push
int
les
shll
pop
lea
mov
add
imul
pop
sahf
dec
dec
pop
cli
sar
rcrl
xor
mov
pop
repz
fstl
pop
mov
adc
dec
icebp
adc
call
movsb
outsb
jp
aad
mov
xor
movsb
test
xchg
sahf
sub
inc
add
cmc
inc
ljmp
out
popf
test
pop
and
dec
jl
pop
xor
iret
cmp
daa
xchg
cmp
fldenv
mov
cmp
or
sbb
mov
jmp
sbb
xorl
popf
cmp
xchg
mov
push
inc
stc
dec
cmp
test
aaa
mul
in
pop
out
gs
sbb
insb
rorl
fdivp
movups
push
mov
jae
in
adc
cmp
add
inc
out
lcall
mov
xchg
cmp
xchg
jnp
and
xchg
mov
sarb
push
ror
mov
arpl
pop
sysret
mov
rcr
or
imul
divb
ja
push
gs
in
mov
jns
jmp
shrb
data16
dec
lods
je
ffree
dec
xor
push
and
fistpl
xorl
shll
arpl
dec
es
dec
stos
daa
push
dec
rol
sub
sub
and
fimuls
jg
shll
scas
add
adc
xor
mov
addb
movsl
sarb
pop
sub
sbb
inc
sub
dec
jmp
push
jl
stos
xchg
inc
add
fisttpl
sub
rorl
mov
mov
jecxz
sub
push
fldcw
push
movsb
lahf
pop
sub
ret
pop
jne
dec
imul
iret
rclb
dec
dec
mov
mov
pop
jo
push
sbb
cmpsb
or
gs
or
xchg
fistl
int
mov
push
std
rcr
push
cmp
pop
pop
sti
js,pn
adc
popa
xchg
dec
jae
out
lret
mov
dec
std
arpl
leave
imul
test
mov
call
shrb
lods
sbb
sub
fstp
enter
in
xchg
mov
dec
insl
jle
mov
daa
pop
mov
mov
mov
push
sbb
in
push
xchg
jecxz
pusha
cmp
mov
and
lahf
mov
push
push
dec
lds
popa
jg
imul
dec
cmp
js
rorb
cmp
lret
fstpl
gs
js
or
jae
sub
jnp
sahf
inc
add
xor
jo
mov
repz
xchg
std
out
sbb
stc
in
in
push
jg
fldt
nop
dec
mov
dec
inc
fsubr
aam
xchg
shrl
adc
sbb
ss
in
or
jns
int3
negl
sahf
sbb
ss
lret
lds
loop
xchg
fwait
add
fidivl
jae
cmc
outsl
pop
es
xor
lret
movsl
mov
cld
xchg
lahf
enter
mov
in
jle
leave
mov
jae
into
mov
cs
outsl
xchg
jne
bound
or
aas
andb
mov
adc
rcll
sub
fadds
push
xorl
jle
inc
sbb
aas
int
add
lahf
sub
adc
ds
mov
and
push
inc
ds
addr16
jb
test
cmp
mov
jae
dec
scas
xchg
or
loope
loope
fldcw
mov
fwait
int
outsb
jne
xchg
fadd
cmp
add
push
fidivrs
movsl
divb
into
sub
sub
adc
jns
mov
mov
jmp
adc
mov
fsub
mov
stc
cld
jle
sub
sbb
rclb
lret
stc
pop
inc
into
push
mov
fisttpll
mov
xchg
dec
jp
out
dec
lds
mov
popf
jo
mov
frstor
movaps
or
movsb
repz
dec
sahf
inc
and
adcl
lods
inc
ret
loopne
push
ds
push
scas
xchg
xor
outsl
stc
sub
pop
or
mov
xchg
jns
lds
movsb
mov
mov
jge
sub
xor
jecxz
lock
adc
cmp
jmp
loope
mov
test
loopne
mov
repz
adc
and
or
push
test
dec
xchg
push
lret
jle
xchg
sti
cmp
in
cs
hlt
ret
mov
mov
sti
movsb
das
push
into
add
lcall
inc
pop
sub
clc
dec
ljmp
enter
adc
ret
ret
fucomi
xchg
aas
in
leave
dec
pop
dec
xor
stos
sub
sbb
jle,pt
sub
stc
shrb
sub
mov
insb
push
mov
dec
jecxz
sbb
pop
cmpsl
adc
sub
add
jl
aas
jg
mov
or
inc
out
sub
add
cmp
jge
push
ss
out
cmpb
adc
test
imul
xchg
ljmp
xor
jge
sbb
xchg
or
out
mov
sbb
scas
loope
js
repz
jae
jg
popa
lret
mov
enter
jb
lea
inc
mov
movb
dec
push
xchg
jno
jns
or
xor
or
add
push
push
push
ret
cmpsl
mov
and
popf
add
jo
pop
mov
lods
leave
shll
and
out
jge
push
pushl
push
or
jno
cmp
sbb
popl
icebp
fdivrl
in
and
mov
inc
scas
ficompl
jno
push
dec
fsubrl
push
popa
and
xor
loope
inc
xchg
inc
outsl
lock
mov
mov
inc
stc
or
sbb
inc
xlat
into
xchg
cmc
push
and
and
repnz
sub
sbb
dec
lods
dec
pop
inc
cs
in
add
mov
hlt
xchg
jbe
mov
pushf
loop
and
mov
mov
sbb
mov
xchg
fwait
dec
xchg
push
sub
es
into
out
hlt
aaa
aas
mov
icebp
fwait
xchg
cmp
out
stc
inc
jb
jmp
in
push
jge
add
pop
int
test
pmuludq
sbb
leave
enter
icebp
mov
xchg
jl
fs
mov
movsl
aas
adc
sbb
lds
test
jg
mov
mov
mov
mov
and
pushf
add
jp
push
mov
idiv
mov
push
sbb
insb
shll
sbb
aam
mov
pusha
mov
lcall
cmp
pand
das
ret
lcall
pop
xchg
jge
xor
inc
jmp
popa
popa
out
hlt
mov
ss
and
mov
mov
sbb
sub
xor
mov
or
enter
cmp
inc
cmc
jg
fwait
push
gs
movsl
leave
adc
fucom
inc
mov
xor
mov
sahf
jne
xor
lds
xchg
push
mov
aad
jb
pop
xor
in
dec
or
add
sbb
pushf
adc
in
daa
aaa
lods
add
fidivrl
jbe
mov
xchg
inc
loopne
sub
inc
sbbl
xor
ds
cmp
ljmp
mov
mov
mov
push
lahf
ljmp
cwtl
push
jg
adc
cli
sarl
aaa
scas
lods
insb
add
aad
insb
scas
loop
sahf
jnp
fsubr
or
mov
cmpsl
repz
pop
mov
mov
push
icebp
xchg
ret
xchg
and
push
cs
sahf
add
cmp
mov
ds
mov
stos
adc
xchg
fiadds
add
popa
hlt
insl
or
pop
jnp
enter
dec
or
icebp
in
int3
ret
arpl
inc
inc
outsl
outsb
imul
xor
dec
movsb
loope
mov
cli
mov
scas
adc
dec
jae
stos
and
fcmovne
add
sbb
in
jae
mov
mov
add
std
jne
test
andl
nop
xchg
arpl
movsb
ret
stos
jbe
inc
mov
jae
outsb
pop
stos
insb
pop
pop
mov
cmc
rol
mov
sub
repnz
dec
cmpsb
adc
or
dec
add
test
or
stos
mov
or
jb
lock
subl
loope
adc
mov
out
or
out
inc
and
mov
jmp
inc
out
rcrb
mov
pusha
xchg
dec
xchg
lea
jno
push
sahf
sbb
sbb
imul
out
cmp
add
xor
std
xor
prefetch
or
int3
pop
mov
pop
cmp
aas
mov
cmp
iret
xchg
popa
cmpsl
aaa
sarb
out
add
mov
pop
mov
dec
addr16
negl
add
int3
repnz
mov
insl
add
add
push
test
cs
dec
inc
jnp
sbb
lret
rcr
or
xchg
inc
push
push
repnz
lods
nop
test
hlt
in
mov
inc
jp
test
sbb
dec
jmp
aad
cli
arpl
loop
mov
sub
fwait
jbe
mov
inc
inc
sbb
mov
clc
lahf
lods
scas
mov
jle
cmp
mov
xlat
fcmovb
pop
mov
cmpsl
pop
iret
int
jecxz
loop
xchg
aaa
jle
lods
pop
insb
sub
inc
dec
inc
sbb
in
jno
ss
mov
insb
insb
pop
sub
ret
shl
cwtl
stos
adc
xor
pop
jo
cmp
popa
jae
pop
jg
push
test
aas
inc
test
sbb
xor
into
hlt
mov
push
cmp
xor
cmp
lahf
jg
mov
sti
repz
inc
test
pop
xchg
sti
adc
inc
ror
fwait
sti
mov
int
aam
ret
jle
adcl
aaa
ss
repz
sbb
insb
shrb
jl
je
xor
jle
push
lods
inc
popf
jnp
in
movb
sub
inc
pop
inc
sbb
jb
pop
cmp
cld
test
add
cmpsb
ja
and
push
inc
xchg
ret
test
mov
test
fwait
in
int3
test
sub
mov
push
test
jle
sbb
xchg
push
fisubrs
inc
arpl
dec
cmp
out
jne
or
nop
hlt
seta
lods
ret
mov
in
xchg
stos
adc
mov
cmp
in
and
mov
pushf
push
mov
pop
sbb
into
mov
add
pop
scas
into
jg
cmp
pusha
add
mov
add
jge
and
sti
pop
add
pusha
jo
notl
pushf
bound
inc
xchg
sbb
rcrb
jp
cmp
mov
xchg
mov
add
mov
pop
movsb
mov
cmc
lret
add
mov
loop
jmp
shrb
rcll
lods
sbb
mov
les
cmp
test
call
inc
in
outsl
ss
iret
mov
mov
pop
rcll
mov
sub
and
inc
pop
dec
cld
repnz
jo
xlat
shll
mov
data16
pop
pop
inc
outsb
xlat
fimuls
movsb
out
in
mov
jae
mov
jg
cmp
xchg
and
in
test
and
stos
out
cmp
mov
jge
or
std
hlt
push
pop
mov
push
cs
test
adc
rcrl
pop
test
imul
mov
push
jle
add
repnz
mov
dec
fwait
sub
jno
xor
and
push
js
addr16
pop
shll
sti
pop
js
stos
fmull
inc
jecxz
sbb
aaa
nop
movb
xor
xor
mov
ljmp
loop
insl
xchg
mov
clc
and
bound
adc
icebp
add
mov
push
popf
nop
xor
fwait
sub
mov
addl
jb
cmp
int3
dec
push
ja
mov
xchg
out
gs
add
cmpsl
lock
jmp
insl
cmpsl
shlb
xchg
cmpsb
arpl
outsl
xchg
leave
mov
adc
repnz
sahf
xor
pop
jo
cmp
popw
ljmp
mov
add
rcrb
jae
cwtl
jns
or
add
xor
in
jmp
aam
ret
or
lret
sarl
addr16
repz
mov
int3
sbb
mov
and
loopne
movsb
sbb
inc
inc
cmp
outsb
pop
cmp
sub
setne
dec
pop
addr16
aad
or
push
pop
rorb
scas
out
iret
fstpl
jle
or
push
dec
shlb
out
xor
nop
or
push
jge
pop
mov
xchg
sub
loope
mov
mov
or
or
ss
lret
jb
and
cmp
push
mov
add
mov
test
push
adc
in
mov
hlt
mov
in
sahf
dec
shrl
lds
js
push
es
inc
adc
in
pop
aas
add
ljmp
div
xlat
xchg
mov
jbe
mov
or
ret
pop
cmp
pushf
mov
sbbb
cmp
test
jecxz
sub
lock
lds
fwait
push
adc
sti
xor
cmpsl
add
icebp
xor
adc
std
push
sub
mov
test
ljmp
shll
shll
sti
adcl
adc
xchg
dec
mov
rcr
decl
in
out
fimull
nop
adc
das
jbe
adc
inc
cmpsl
into
dec
mov
hlt
mov
push
cwtl
fs
jns
movsl
aaa
pop
mov
mov
jns
pop
pop
push
xchg
fidivl
adc
in
xchg
jl
and
pop
out
lret
mov
sub
adc
pop
sub
out
dec
loopne
out
ret
sbbb
out
jl
mov
lret
fbld
push
test
sahf
fcomps
and
dec
leave
jl
add
arpl
js
cmp
adc
out
cmp
jno
test
jne
mov
jb
mov
outsb
movsb
sbb
test
loop
shl
xchg
daa
movsb
adc
pushf
jg
arpl
dec
dec
stos
add
jmp
int3
out
add
call
push
test
mov
sbb
dec
jb
jne
add
lods
xchg
sub
mov
mov
add
test
xchg
out
mov
lahf
or
pop
loopne
call
pop
xorb
cmp
call
inc
inc
insb
notl
idivl
movsb
repz
xor
pop
movb
sbb
mov
lahf
dec
fidivs
je
dec
in
inc
movsl
add
hlt
mov
mov
fwait
loope
push
dec
push
or
dec
cmp
cmp
mov
cmp
jge
je,pt
fidivl
movsb
addb
out
inc
addr16
inc
jmp
jecxz
and
pop
pop
lods
ss
and
loop
repz
adc
cmp
test
inc
xchg
xor
inc
mov
adc
xor
dec
notb
sbb
je
sub
or
pop
insl
lret
jae
shl
sub
cmpsl
add
xchg
mov
dec
mov
adc
and
mov
xchg
insl
xor
repnz
jbe
icebp
data16
dec
lds
mov
jge
pop
cmp
push
jno
fst
adc
cmc
dec
dec
clc
sbb
sub
fdivl
test
scas
fnstsw
pop
pusha
xchg
xlat
add
add
rclb
mov
lret
sbb
loope
jecxz
notrack
mov
dec
cmc
out
outsb
pop
cmpl
xchg
lret
sbb
push
xorb
ret
ljmp
mov
stos
mov
pop
fldl
enter
sti
mov
or
inc
inc
lds
hlt
add
cmpl
mov
lds
aaa
in
stos
aad
xchg
out
jmp
add
negb
cmp
push
add
xor
mov
adc
out
or
movsbl
push
cmp
int3
pop
test
std
call
arpl
pushf
add
lock
xor
mov
mov
lret
sub
xor
or
mov
shlb
or
push
outsl
pop
data16
push
jge
inc
xor
inc
mov
and
sbb
add
fs
rcrl
lods
js
jbe
mul
pop
cmp
repz
imul
les
mov
and
xor
push
test
jmp
pop
test
xchg
push
pop
mov
pop
mov
test
add
fsubrs
lock
aaa
rclb
push
xor
ss
pop
movsl
mov
std
rclb
pop
xor
fldt
pusha
lret
sti
loop
cmp
lods
pushf
jmp
sbb
inc
sub
pop
pop
cmp
cmp
sbb
jmp
push
dec
neg
inc
xlat
adc
and
mov
mov
or
jecxz
pop
jecxz
ds
pop
mov
mov
dec
test
das
push
xorl
push
inc
rcrl
loope
dec
sub
mov
lea
mov
data16
call
or
andb
jge
enter
cmp
pop
pop
das
mov
sub
push
out
addr16
stos
shrb
inc
outsl
fs
stc
or
das
or
push
jmp
cmp
dec
in
sbb
sbb
ja
pop
sti
jo
pop
lods
testb
shl
sbb
cmp
and
movsl
jge
pusha
cli
push
std
sbb
lods
lea
movsl
inc
movsb
mov
jle
in
dec
xchg
sar
mov
mov
sbb
fwait
pop
mov
pop
mov
adc
outsl
xchg
lret
mov
test
es
xor
jnp
call
int
or
test
xor
out
movsl
fwait
testl
sbb
shlb
push
xor
and
rorb
jg
jecxz
popf
into
ret
popf
mov
je
sub
arpl
mov
cltd
adc
test
push
adc
es
popa
sub
aad
add
cli
insl
loopne
and
cmc
lret
inc
lods
pushl
sub
leave
ljmp
xchg
mov
incl
adc
ret
add
or
and
cmp
inc
aad
adc
push
rclb
lock
push
scas
cmpsl
pop
gs
lds
mov
push
cmp
mov
mov
jne
call
jnp
cmp
ljmp
sbb
sub
sahf
cmc
inc
mov
adc
aaa
xchg
jbe
add
je
push
in
or
enter
lods
pop
call
loopne
adc
xchg
aam
xorb
push
xchg
xor
xor
pop
adcl
test
lret
adc
xchg
inc
mov
cmp
cltd
into
sbb
xchg
inc
cmc
aad
ret
scas
mov
int
lock
nop
mov
mov
jns
cmpb
les
shl
xchg
mov
loop
pop
frstor
adc
add
jl
inc
cltd
sbb
sti
or
lds
jno
cmpsb
jg
das
xchg
rcll
lea
mov
fisubrl
int
data16
mov
mov
lock
jp
mov
sub
scas
ss
xchg
std
out
cli
adc
xor
stc
xor
add
ret
test
push
scas
mov
cmpsb
mov
enter
sarl
scas
outsl
xchg
mov
pop
inc
fidivrl
iret
int3
cmp
aam
or
jecxz
dec
ljmp
test
pop
add
sahf
ret
in
sub
roll
orb
mov
xchg
int
mov
unpcklps
mov
jo
adc
xchg
stos
dec
xchg
xchg
lods
jno
xchg
mov
xchg
push
stc
test
shll
nop
or
fs
mov
mov
les
sbb
xchg
jbe
scas
notl
ficompl
out
repz
stos
iret
mov
cmp
xor
pushf
lods
fsubrp
pop
aas
loop
xchg
in
daa
cmc
xor
pop
adc
cmp
adc
xchg
xchg
mov
nop
mov
clc
lock
jecxz
add
mov
mov
fiadds
cld
lods
push
loope
jl
mov
cmp
ret
add
push
dec
and
imul
fwait
das
adc
lds
lahf
js
repnz
xchg
xlat
or
push
and
pop
xor
sbb
dec
lret
shlb
fwait
lret
or
inc
mov
out
or
sbb
jle
mov
sarl
in
cwtl
mov
cltd
dec
sbb
out
push
in
pop
sbb
cmp
cmpsl
and
jno
lods
aas
pop
loop
lahf
dec
dec
into
js
testb
call
cwtl
push
dec
xor
dec
jns
imul
push
or
jmp
bnd
adc
mov
fcom
cmp
jne
mov
or
lahf
sbb
loop
aas
imul
add
and
test
test
imul
rorb
gs
jae
xor
mov
mov
mov
mov
stos
lret
jae
lods
or
addb
cli
mov
insl
adc
adc
mov
mov
shl
es
aaa
mov
outsb
sti
insb
sub
rorl
xchg
aas
aas
cmp
popa
and
lcall
push
xchg
test
cmc
jmp
lahf
push
test
movsb
sub
leave
lea
imul
out
lods
rcr
lcall
inc
mov
nop
ret
lods
aas
setl
sbb
adc
push
fldl
aad
pop
sub
cmp
xchg
aad
push
inc
jnp
jno
movsl
xrelease
xor
inc
mov
bound
push
or
rcrb
jae
inc
cmp
in
push
stc
xchg
out
imul
pop
mov
movsb
mov
mov
jo
outsb
add
dec
stos
pop
dec
aam
pushf
in
lcall
int
sub
out
cmpl
add
xorb
sub
stos
cli
je
pop
ret
cmc
mov
iret
sub
and
pop
dec
mov
and
scas
inc
rol
adc
xor
cmp
sub
fsubr
lea
xor
mov
jno
sub
popf
popa
jecxz
ja
rcrb
mov
mov
gs
insb
fs
ja
call
dec
adc
sub
mov
mov
mov
add
lods
inc
test
filds
inc
xor
cltd
iret
dec
or
cmp
insl
mov
cmp
mov
imul
gs
ficoml
inc
and
fidivrl
mov
mov
stos
mov
outsl
xchg
cmp
pop
jp
sbb
push
pop
stos
jl,pt
pushf
fdivrs
jg
and
lcall
popa
mov
pop
movsb
sbb
dec
lcall
and
das
fdivrl
xor
sbb
je,pt
push
jmp
cmp
mov
bound
stos
outsb
xlat
loopne
mov
sbb
mov
cmpsb
xor
dec
mov
inc
push
aas
push
pop
xchg
inc
rorb
adc
fs
adc
jae
leave
adc
aam
jecxz
fldt
dec
xlat
xchg
dec
mov
jno
adc
cs
jae
fsin
cmp
or
test
ljmp
mov
push
xchg
fwait
mov
out
xor
pop
aas
xchg
add
int3
out
push
or
fidivrs
arpl
iret
cltd
jnp
aad
pop
mov
test
xchg
ficomps
fs
jnp
mov
adc
pop
inc
adc
inc
ret
mov
cli
fnstsw
sub
cmp
popa
scas
sub
push
mov
adcb
inc
daa
mov
testl
test
sbb
test
or
push
add
push
mov
cli
dec
aaa
mov
sub
inc
aas
add
and
shrb
neg
fisttpl
lods
jecxz
xchg
or
mov
mov
dec
andb
cmp
popa
in
adc
imul
rolb
cmp
mov
mov
loopne
cmp
loop
sbb
sahf
mov
aad
lret
and
repz
sub
jo
or
mov
les
mov
pop
push
out
xchg
imul
popf
shll
mov
mov
mov
cmpl
int3
stos
mov
xchg
mov
pop
jmp
out
sbb
push
inc
pop
inc
pop
ror
into
test
cmpsl
in
pop
mov
jno
fidivl
je
aas
loope
dec
add
inc
out
inc
in
and
and
arpl
push
mov
cmp
mov
sub
cmp
pop
push
bound
jle
movsl
pop
adc
data16
push
nop
cmp
hlt
int3
fldcw
aam
lea
sbb
out
push
xor
aam
ja
or
or
add
xchg
inc
jg
lcall
fwait
push
jle
push
ljmp
test
lds
lret
imul
sahf
subl
push
add
pop
movsb
sub
jle
mov
test
jne
pop
cli
xor
mov
xchg
ficoms
dec
push
adc
push
and
jno
lcall
sub
clc
andl
and
fisubs
push
inc
iret
push
cmp
inc
push
in
mov
int
mov
cmp
mov
push
aad
mov
insl
ja
mov
xor
xchg
stos
cmp
push
je
gs
dec
fcoml
sub
cltd
sub
or
sarl
ret
mov
movsl
cltd
cmp
cmc
xchg
das
xor
cmp
jne
pop
sti
push
out
mov
jecxz
or
mov
push
sub
add
mov
sbb
pop
pop
mov
sub
pop
cs
sbb
outsb
mov
pop
pop
push
mov
js
xchg
xchg
sbb
out
rorl
sub
test
mov
gs
or
pushf
pop
popf
xchg
std
inc
mov
jl
cld
pusha
mov
mov
test
lods
lcall
iret
xor
lahf
adc
rep
push
repnz
inc
sbb
dec
jns
mov
pusha
adc
sbb
cmp
push
cmp
rolb
push
sbb
movsb
jmp
dec
jne
inc
lea
xchg
fcoml
sbb
mov
xor
test
inc
lods
aas
and
jb
push
xchg
scas
mov
push
gs
ret
add
mov
test
pop
in
jb
rep
xchg
ja
je
xchg
fwait
pop
push
push
daa
adc
dec
jecxz
push
cs
add
arpl
movsl
std
fistps
jno
mov
or
ficomps
jae
fdiv
cld
pop
lods
punpckhdq
stos
std
jmp
mov
add
adc
mov
dec
dec
pushaw
lcall
jbe
pushf
xchg
cs
lret
pop
imul
sub
mov
aad
and
daa
jnp
or
fldl
jg
mov
xchg
and
xchg
xchg
sbb
dec
dec
aad
pop
lds
aaa
test
fidivs
jl
dec
cmp
jecxz
daa
lcall
scas
mov
sub
push
xchg
cmp
push
inc
push
lock
inc
repz
rcrl
jnp
mov
cld
xchg
mov
fs
cmpsl
lods
cmpsb
jnp
dec
adc
repz
jg
and
std
ret
cmp
add
rcll
fstps
out
lret
xor
jae
dec
and
mov
test
ds
fwait
mov
sub
stos
icebp
mov
mov
mov
imul
out
mov
mov
sbb
arpl
ror
jecxz
dec
sarb
lahf
daa
jl
mov
or
ljmp
mov
fcomps
rcll
in
aam
insl
jbe
xlat
fs
jb
sbb
ljmp
mov
mov
lods
sub
ret
cld
js
lret
outsb
or
push
jnp
stc
push
or
cmp
cmp
push
imulb
adc
inc
cmp
test
pop
orb
sbb
cs
insb
dec
mov
push
pop
loopne
aaa
cmp
iret
jns
pop
imulb
pop
mov
in
pushf
add
and
stos
loopne
jbe
fld
sub
xchg
iret
add
cmovle
fwait
daa
aaa
or
jo
data16
add
enter
xchg
mov
lret
sbb
jge
in
jmp
sub
aam
cmpsb
stos
pop
or
cmpsb
push
loopne
in
daa
mov
and
ja
xor
ss
xchg
loopne
adc
daa
sub
inc
in
or
push
pusha
jle
rclb
addb
fldcw
pop
dec
dec
pop
out
cmc
jno
rcrb
bound
inc
xchg
mov
dec
cmp
sbb
sbbb
test
fstl
fisubl
add
inc
inc
das
fdivl
jns
mov
sub
xchg
adc
xlat
mov
fstps
xchg
jbe
sub
sbb
pop
push
adc
sbb
xlat
mov
mov
inc
imul
ja
jp
fisttpl
lock
add
adc
insb
pop
mov
scas
mov
popl
jmp
cmp
push
js
das
pop
jp
cmp
mov
xchg
insb
mov
cli
aaa
stos
out
push
hlt
fwait
out
sbb
ss
adc
adc
cmp
leave
cmpl
jl
sahf
jns
add
je
xlat
push
mov
add
mov
mov
es
xor
mov
jge
push
cli
fnstcw
add
dec
call
dec
in
adc
repnz
pusha
mov
mov
imul
and
cltd
cmp
out
pop
inc
repnz
divb
jns
xchg
jns
cmp
repnz
cmp
sar
lods
es
xor
jnp
test
flds
stos
lcall
sbb
push
add
shlb
adc
or
jno
jns
pushf
imul
mov
push
lods
outsb
out
in
imul
inc
imul
push
push
stos
js
lock
mov
pop
enter
jp
lret
xchg
insb
and
mov
jmp
repz
pushf
pop
aam
movsb
out
pusha
fidivrs
loope
aaa
mov
mov
adc
inc
inc
cmp
or
pop
mov
jb
cmp
dec
xchg
pop
int3
xchg
or
cwtl
pop
push
stos
scas
or
repnz
cmpsb
mov
lea
lcall
daa
testl
push
fs
xchg
and
dec
xor
loop
push
sub
add
test
imull
icebp
xchg
rcll
clc
adc
jmp
mov
xorl
sbb
enter
aaa
shlb
add
jle
xor
sub
fstpl
repz
sub
pop
imul
sahf
mov
cmc
jle
mov
push
cld
dec
dec
inc
gs
cmp
jb
cli
xchg
xchg
xor
mov
push
or
call
push
das
mov
ljmp
mov
lock
lcall
xor
cli
in
daa
imul
adc
inc
sbb
cmpsl
int
les
leave
loop
push
icebp
cmp
dec
push
lds
mov
jne
lock
mov
jmp
xchg
imul
cmp
cmp
in
mov
or
mov
rclb
fistpll
xor
dec
call
pop
pop
inc
dec
push
adc
inc
sub
mov
lds
jb
addl
xor
js
fs
or
ss
cli
pop
jae
jl
fldenv
inc
cmpsb
push
xor
sbb
inc
adc
sub
imul
inc
mov
pop
mov
cwtl
ljmp
iret
repnz
cltd
ret
movsb
cmp
mov
int
inc
pop
out
shll
push
cli
nop
jae
lret
out
rcl
cmp
sbb
neg
int3
sbb
cmc
pop
cmp
nop
or
xchg
jg
iret
in
iret
mov
or
sub
push
dec
dec
jb
and
mov
push
push
mov
movsl
loope
loope
enter
push
cmp
xchg
repnz
mov
add
push
outsl
or
adc
mov
push
sub
int3
je
stos
roll
insb
xor
add
call
scas
and
data16
inc
xchg
dec
dec
lds
xor
test
fsubs
movsl
sub
sbb
lahf
mov
notb
setl
cmp
sarl
fstl
mov
loopne
or
stos
cli
mov
std
inc
or
addb
push
lcallw
dec
inc
cli
fcomi
xor
cmpsl
fisttps
adc
lock
decl
shrl
jne
cmp
icebp
jno
clc
jg
push
gs
pop
rcll
out
mov
add
iret
push
cmp
fmul
mov
scas
jl
inc
gs
xor
test
dec
pop
inc
mov
hlt
pop
mov
sbb
jle
rcl
nop
in
jmp
push
and
imul
xlat
loope
xchg
mov
dec
cltd
mov
sub
inc
aam
in
rol
scas
push
aas
push
insb
inc
cmp
push
iret
push
and
lea
mov
push
and
out
push
aas
int
fsubs
push
jp
rorl
pop
vprotq
xor
clc
sub
jbe
pop
imul
xor
les
inc
sub
psubusb
mov
mov
adc
incl
movb
loope
stc
nopl
jmp
in
push
test
int3
lret
jns
xchg
loop
sbb
int3
div
push
mov
psrld
sub
test
jmp
pop
xor
out
sbb
mov
xchg
sbbb
nop
ss
sbb
rcll
jp
cmp
mov
mov
pop
sbb
aaa
aaa
pop
scas
xor
and
xchg
pop
stc
mov
das
es
enter
push
sbb
jg
xchg
leave
xor
cmp
das
roll
xchg
cld
cmpl
movl
lret
push
test
andb
mov
test
fidivrs
fldenv
stc
adc
push
jne
movsb
cmpsb
rclb
mov
mov
inc
call
mov
dec
xor
mov
rolb
pop
pop
add
xor
pop
sbb
dec
mov
mov
cvtps2pd
pop
test
add
scas
rclb
sub
addr16
lock
cmp
out
pusha
outsb
in
scas
imul
pop
loopne
xor
stos
push
jmp
subl
nop
cli
inc
or
fcmovnb
mov
pop
mov
repnz
out
inc
jo
cmp
jp
add
ss
mov
shrd
or
ficoms
mov
mov
xchg
aas
stc
push
pop
xor
inc
mov
shll
mov
inc
hlt
push
cmp
xchg
aaa
push
push
push
xor
mov
shll
sahf
mov
in
mov
popa
and
xlat
adc
sbb
scas
pop
insl
add
inc
lahf
inc
sbb
shlb
shll
testl
gs
push
inc
or
adc
adc
or
jns
xchg
mov
inc
fcmove
inc
mov
insb
int3
and
jl
sbb
jo
ret
retw
or
mov
inc
or
xor
push
cmp
loop
sbb
fs
clc
dec
xor
mov
fadd
fnsave
test
jb
mov
xchg
js
mov
push
nop
jle
je
rorb
jmp
fsub
out
mov
mov
xchg
pop
mov
mov
iret
jg
mov
mov
mov
inc
jno
dec
sbb
pop
add
addr16
xchg
jno
scas
push
pop
cmc
pop
stc
imul
inc
jecxz
pop
rcrl
sbb
push
loop
loope
data16
repz
mov
clc
dec
mov
in
mov
and
int3
data16
cmpsb
fs
mov
and
out
xlat
pushf
sub
pop
int
jns
jne
adc
dec
mov
push
test
cmp
leave
dec
inc
cltd
es
jnp
insb
push
add
test
mov
addb
es
clc
mov
xchg
mov
pop
fimuls
adc
js
lret
jmp
adc
lods
mov
pop
imul
movsl
add
mov
mov
adc
and
push
cs
mov
mov
mov
push
mov
push
pop
fldt
xor
sbb
sbb
imul
mov
jle
icebp
push
cmp
test
sub
add
aas
lret
push
lock
mov
test
jae
and
out
outsb
ss
jmp
push
popa
cmp
movsl
or
pop
xor
gs
dec
fldt
cltd
jae
mov
push
movb
inc
cmpsb
bound
pop
jb
insb
add
and
jno
mov
loope
jbe
sub
push
mov
insb
dec
xchg
sub
mov
daa
into
enter
out
cmp
fsubr
lea
xchg
fdivrp
fisubrl
mov
aas
and
out
inc
mov
test
jno
sub
xor
adc
pop
jp
dec
fcoml
out
pop
xchg
mov
incb
jns
bound
into
mov
inc
adcb
push
out
bound
add
mov
out
out
int3
addr16
lahf
lcall
inc
arpl
pop
enter
inc
sub
push
es
arpl
sbb
inc
dec
mov
jb
inc
loop
or
jno
xor
pop
jle
jns
sub
adcl
mov
ss
add
mov
ror
fstps
mov
insl
pusha
nop
inc
mov
neg
movsl
mov
push
xchg
dec
xchg
xchg
xor
cmpsl
js
imul
dec
jmp
sbb
hlt
push
and
int3
imul
js
sar
scas
sub
pop
sub
sbb
jmp
dec
js
fldt
aaa
mov
or
in
xchg
aaa
cmpsl
xlat
repz
or
inc
sub
push
stos
inc
aas
subl
mov
or
xchg
int
pop
pop
cmp
inc
test
push
cmpsl
in
xchg
int3
out
pop
enter
aaa
in
arpl
sbb
add
ljmp
push
or
adc
mov
dec
xchg
leave
fscale
les
fildl
xor
xchg
inc
pop
add
jmp
push
cmp
sahf
push
mov
loopne
mov
test
push
mov
outsb
mov
out
aaa
mov
in
dec
fbstp
aam
pop
jecxz
push
insl
adc
cli
xor
pop
shrb
and
ljmp
ficomps
sbb
mov
xorl
cmp
outsb
sub
addb
add
cmp
cmpsl
ret
push
push
outsb
ret
cmp
sbb
push
movb
mov
pop
xchg
out
or
xchg
shrl
mov
ja
icebp
int3
mov
dec
push
sbb
sub
inc
into
xchg
jno
imul
lahf
or
shrl
and
sub
stos
jne
xchg
push
and
arpl
scas
xor
jecxz
repnz
and
negl
aam
sub
pushf
dec
mov
test
mov
add
sub
xor
jne
pop
add
loop
adc
movsb
cmp
aas
icebp
mov
push
jmp
cmc
loope
and
cwtl
shl
mov
enter
and
inc
ljmp
rcrb
dec
adc
push
mov
pop
loopne
loopne
shll
add
nop
mov
and
xchg
xor
ds
cmpsb
mov
aad
fcmove
sbb
stos
and
scas
ficompl
js
xor
cltd
pushf
xchg
enter
jb
scas
sbb
adc
enter
xchg
mov
cltd
add
loope
sub
stc
sub
adc
lret
sahf
push
jge
out
push
leave
cmp
and
cld
pop
rorl
shrb
inc
dec
xor
std
dec
fiaddl
and
and
das
add
cmp
out
repz
add
repz
clc
mov
shl
mov
or
push
aam
lds
lods
dec
mov
and
imul
sub
into
aam
fisttpl
sbb
inc
xchg
sub
ja
outsb
xchg
cmp
sub
xchg
mov
pushf
jecxz
cmpl
div
mov
aad
nop
imul
fiadds
jmp
push
mov
xchg
inc
rorb
repnz
adc
movsl
push
ljmp
test
sub
bndldx
sub
addr16
cmpsb
xlat
lods
rcrl
shlb
mov
test
jg
sti
adc
push
je
xor
push
lea
xor
movsl
jae
in
jnp
lock
int
adc
xchg
ljmp
fs
stos
sti
bound
inc
adc
jg
jmp
and
push
ds
inc
lods
sub
popa
lods
int3
sbb
mov
popa
leave
push
hlt
push
mov
mov
sub
pop
or
pop
lods
gs
imul
pop
jb
push
stos
test
stos
xchg
mov
outsb
jg
jo
jl
dec
cmc
test
repz
adc
jnp
cmp
mov
push
add
mov
sbb
push
mov
mov
lods
ret
stc
jno
xor
jmp
xor
shr
mov
sub
js
clc
je
cwtl
inc
into
xor
jnp
pop
jl
or
negb
leave
mov
jle
jno
pop
pop
pusha
xchg
gs
pop
in
add
int
xorb
sbb
imul
es
jnp
pop
dec
inc
les
fwait
into
jmp
test
out
mov
les
int
push
adc
sub
stos
xor
sub
and
cmp
ja
sub
inc
stos
dec
repz
lock
xchg
cmpsb
in
mov
lret
inc
mov
icebp
in
hlt
push
mov
add
stc
pop
repz
dec
xchg
add
cwtl
imul
or
std
incb
lret
rcrb
fcompl
sti
shl
or
sub
mov
sub
enter
popa
inc
cltd
and
scas
mov
xor
rcrb
in
add
sbb
cmc
flds
push
andl
mov
sub
pop
pop
or
xorps
or
lea
dec
mov
ja
fsub
dec
fimuls
popa
adc
sub
out
push
push
out
mov
arpl
cmp
adc
ficoms
cmp
ss
mov
lea
in
fldt
and
scas
mov
sub
shrb
mov
mov
xor
push
movsb
mov
cmpsl
add
imul
mov
je
call
add
jb
dec
pop
and
sti
ljmp
xlat
sbb
mov
mov
leave
mov
cli
dec
or
sub
push
enter
mov
cs
pop
mov
push
xchg
mov
cmp
out
push
dec
popa
mov
das
mov
xor
mov
sub
out
loope
in
js
fcompl
les
xchg
addl
and
in
adc
and
lea
xchg
ret
sahf
or
loopne
xchg
pop
nop
dec
jne
inc
add
and
lret
dec
mov
dec
cmp
mov
movsl
mov
ret
jle
mov
aam
push
xlat
inc
fcoms
gs
ss
pop
cmpl
test
fisttps
sbb
jo
mov
insl
xchg
aaa
cmp
adc
inc
cmp
unpcklps
pusha
xchg
sub
mov
xor
cld
dec
jg
fistpll
push
push
fcomps
inc
insl
xlat
and
push
pop
push
xor
test
repnz
jl
mov
push
js
fldenv
mov
adc
pop
mov
scas
enter
in
aas
sbb
jnp
dec
jnp
pop
sbb
or
ja
out
lea
jnp
xchg
pop
add
pop
xor
add
dec
sahf
mov
js
inc
fildll
pop
movsl
and
out
jmp
mov
icebp
js
aam
dec
fmulp
push
adc
mov
xchg
ja
and
adc
pop
orb
mov
cmpsl
scas
jg
fsubl
push
popf
lcall
mov
xlat
jo
xor
cltd
fs
sti
jno
rolb
dec
cmp
cmpsl
stc
inc
dec
and
cltd
pop
xor
mov
jmp
loopne
addr16
imul
aas
sub
xorl
cltd
mov
add
into
sbb
fcomp
xor
scas
dec
dec
rcr
scas
xor
ljmp
mov
jb
das
dec
lcall
dec
cmp
popaw
pop
push
pop
push
inc
jne
popf
insb
xchg
ds
addr16
in
das
sbb
adc
mov
cmpsl
dec
test
dec
xor
jle
repnz
jmp
mov
mov
and
xlat
es
inc
bound
pop
mulb
sub
orb
jl,pn
pop
btc
ds
pop
sbb
movb
mov
mov
stos
in
mov
mov
or
mov
sub
mov
lahf
ret
and
mov
mov
imul
vpmaddwd
and
stos
jne
push
or
in
dec
hlt
sarl
xchg
push
scas
add
xchg
inc
xor
jmp
push
inc
orl
dec
dec
xor
call
pop
loope
mov
loopne
dec
stc
leave
out
jp
inc
cmp
mov
inc
and
push
loope
pop
decl
xor
outsb
aad
dec
int
ss
stc
stos
mov
ret
rcrl
inc
jle
lods
loope
dec
aam
dec
sub
aas
out
add
aaa
xchg
sbb
add
jne
sbb
pop
cwtl
mov
inc
gs
idiv
movsl
call
xchg
pop
nop
pop
push
push
mov
mov
adc
in
push
push
mov
test
xlat
lods
mov
gs
cmpb
xchg
bound
icebp
std
sbb
lret
arpl
and
out
pop
arpl
shr
adc
ljmp
and
pop
mov
pop
inc
pushw
sub
or
and
dec
sub
jl
shrb
jp
push
es
test
es
cmpb
push
nop
fcmovbe
imul
pop
in
mov
and
rep
jae
stos
int
aas
in
les
mull
or
mov
mov
mov
push
mov
scas
mov
cmp
ss
shl
fmull
scas
mov
sub
nop
clc
loop
out
int3
xchg
jb
jns
ja
lea
jge
push
andb
pusha
jae
cmpsl
test
xor
cmp
pop
in
out
jmp
leave
in
pop
push
pop
sub
out
mov
jecxz
cs
dec
or
xchg
xlat
test
push
hlt
in
aaa
loope
out
lds
sbb
xchg
int3
lods
out
repnz
xor
es
and
adc
xor
adc
imulb
fwait
push
fnstenv
subl
jne
jnp
cli
mov
cmpb
lret
mov
test
xchg
push
mov
push
in
dec
adc
push
xchg
mov
icebp
jne
test
cli
lahf
pop
lret
pop
in
sub
aaa
pop
test
out
push
mov
test
fcompl
inc
and
pop
or
in
pop
cmp
cmpsl
mov
sub
repnz
js
xor
inc
cmp
inc
div
sbbb
and
sub
xor
imul
jge
fidivs
adc
outsb
xor
lret
push
jle
jne
cmp
xchg
sbb
xchg
ds
adc
ja
cmp
push
jo
jne
jp
iret
sahf
cmpsb
xchg
jae
test
movsb
pop
repnz
shrb
xchg
js
imul
repz
sti
imul
jecxz
inc
or
movsl
enter
jmp
mov
bound
jecxz
add
dec
mov
pop
and
jp
pop
jo
lcall
jns
ljmp
mov
out
ss
xor
ret
xor
in
test
cmpsl
jge
pop
cwtl
or
in
mov
leave
cmp
add
mov
in
cltd
sbb
rcrb
inc
push
sti
test
cmp
adc
jmp
jl
or
int3
enter
imul
aas
sub
push
dec
loop
int3
arpl
cmp
cmpb
jmp
sub
inc
or
fdivrs
fstpl
xor
verr
aaa
lock
test
scas
xchg
out
subl
movsl
cmc
add
push
lds
stc
adc
cwtl
cmp
sar
lds
lock
inc
ja
mulb
add
insl
jmp
mov
cmp
add
in
lods
nop
jo
add
sti
stos
adc
xor
push
push
es
mov
xchg
daa
sbb
stc
popa
pop
ret
cmp
cmp
cmp
mov
mov
fstps
imul
mov
stc
sub
xchg
push
pop
lock
jmp
addr16
inc
adc
jb
orb
push
loopne
sub
add
adc
add
div
lock
push
aaa
jmp
dec
leave
pushf
sub
fdivs
int
in
mov
js
mov
xor
fistpll
ss
test
rorb
push
add
xchg
sbb
ds
cmp
loopne
or
pop
rcl
arpl
jne
push
jnp
out
nop
arpl
int3
movsb
sbb
xor
outsl
es
icebp
pop
ret
push
xorl
lods
mov
mov
cmp
sti
rorb
sbb
dec
sbb
aad
push
es
pop
inc
xchg
adc
and
mov
fsubrp
js
mov
jnp
js
dec
loopne
fs
mov
iret
lods
fistpl
mov
jae
cmc
xor
popf
js
hlt
arpl
addr16
std
arpl
loop
movhps
iret
xchg
popf
pop
dec
test
mov
jmp
xor
pop
mov
lret
gs
cmp
xchg
dec
fiaddl
inc
mov
test
inc
ret
or
inc
mov
mov
cwtl
adc
dec
pushf
push
mov
sbb
daa
xchg
lock
shr
shlb
xchg
jmp
mulb
call
ds
pop
cld
pop
lahf
sub
stos
push
data16
push
xchg
dec
subl
jle
cmp
jb
jl
scas
mov
in
cmpsl
mov
fisubs
ret
out
xchg
jle
cmc
pop
jbe
push
cmp
outsb
and
pusha
cmp
adc
test
sub
loopne
dec
inc
cmpsl
shll
jae
fsubl
arpl
fcmovnu
in
add
fiaddl
mov
or
mov
or
push
jbe
cmp
mov
andl
jl
mov
adc
cmpsb
aaa
push
nop
incb
out
inc
adc
pusha
jns
ja
mov
lret
dec
sub
sahf
adc
jl
mov
sub
fstl
pop
ja
outsl
popf
cltd
mov
sub
mov
sbb
adc
leave
rolb
ss
mov
jle
or
pop
lret
lock
icebp
adc
cmpsl
das
cmpb
dec
das
imulb
icebp
mov
jbe
mov
fstpt
lods
inc
es
ficomps
dec
imul
lret
push
push
push
subl
incb
xor
push
cmpsl
sub
pop
test
cmp
mov
mov
out
test
mov
pop
xor
les
sbb
movsb
mov
xchg
int3
push
stos
out
shrb
lret
enter
lds
mov
adc
jae
enter
xchg
loope
xchg
mov
fsubp
shl
movsl
fldcw
mov
pop
fwait
pop
out
movsb
and
arpl
sbb
fyl2x
pop
inc
jbe
inc
add
cltd
in
lods
pop
xor
push
pop
insl
push
les
cmc
test
insl
in
mov
xchg
jle
ljmp
fwait
stc
inc
outsl
or
ja
fisttps
adc
jecxz
arpl
in
inc
loop
adc
test
push
adc
loopne
jp
sbb
mov
mov
inc
mov
xor
or
add
std
lock
std
lret
push
btr
mov
jnp
xchg
xchg
and
je
cmp
pop
jns
mov
into
ret
in
fists
stc
gs
xchg
or
jne
xor
adc
add
dec
nop
add
in
int3
imulb
push
cmpsb
xchg
fnstsw
and
xchg
or
sahf
bound
xchg
fldenv
mov
push
inc
mov
mov
xchg
dec
push
movsl
mov
fs
rcll
push
daa
cmc
andl
or
mov
push
cmp
sub
inc
and
sub
pop
imul
or
lahf
lret
hlt
jno
xchg
pop
sub
sbb
add
sbb
leave
cmp
add
sbb
mov
lahf
repz
loope
mov
jl
das
mov
insl
int3
pop
mov
neg
shlb
cmp
mov
out
out
hlt
mov
out
jnp
pop
jb,pn
xlat
xor
pop
in
dec
rcll
test
fwait
and
mov
jmp
jae
cmp
mov
popa
or
and
inc
pop
shr
sbb
pop
sub
push
mov
out
lods
cli
push
lcall
repnz
xor
ret
mov
and
in
lret
mov
mov
inc
subb
dec
sub
aas
cmc
dec
sub
mov
call
jge
or
and
cmpsb
sub
xchg
into
jae
xchg
ret
sbb
and
add
popf
inc
inc
rorl
popa
jne
call
aad
xor
jecxz
ret
mov
mov
adc
jle
je
mov
cmp
jl
adc
int
lds
or
inc
jns
mov
adc
imul
and
jb
sub
lods
adc
inc
sarb
popa
stc
mov
sbb
mov
xor
cmpsb
mov
addl
mov
pop
cs
shll
les
jnp
test
sbb
mov
repnz
sub
jecxz
mov
mov
inc
pop
xchg
ja
pop
xor
and
adc
ficoml
and
pop
mov
stc
jle
jno
xchg
add
stos
adc
cmpsl
inc
insl
cmp
xor
in
loopne
repnz
stos
lds
lods
push
add
jo
jno
out
jne
repnz
inc
mov
test
push
dec
xchg
sbb
jnp,pn
jp
inc
aad
and
mov
imul
lahf
cmp
sbb
xchg
cmp
mov
push
incb
inc
and
sub
loopne
jp
dec
lods
jbe
shl
xchg
sub
xchg
hlt
lock
jno
ret
add
lret
cmpsb
add
sub
mov
arpl
ja
jge
jg
xor
inc
sub
sti
fildll
cmp
pusha
pop
adc
push
jle
ja
cmp
out
sbb
push
in
push
mov
repz
scas
loopne
fwait
and
push
sbb
test
fwait
rcrl
aad
sbb
jg
pushf
ljmp
add
fcoml
mov
jp
jns
bound
cwtl
stos
rorb
lock
jge
jb
sbb
loope
insb
mov
test
aas
fcoms
orb
cmpsb
daa
aaa
adcl
sub
in
dec
ja
ret
jle
les
jmp
ret
inc
fbld
xchg
idivb
cmpsb
int
popa
ss
mov
enter
ljmp
pop
clc
aaa
in
int3
xchg
das
jbe
fisubrl
pop
mov
pop
rcrl
mov
and
add
mov
and
sahf
and
and
xorl
les
iret
mov
into
sti
js
outsb
adc
and
das
fnsave
jbe
iret
call
inc
in
sub
nop
mov
mov
xchg
negb
popa
jno
dec
cmpsl
scas
mov
inc
xchg
sub
push
fsub
dec
dec
daa
push
insb
or
inc
ljmp
mov
mov
xchg
popf
inc
xchg
pop
jnp
jb
outsl
fmul
inc
int
popl
rolb
mov
mov
mov
shl
sahf
inc
ret
mov
insl
daa
adc
or
js
pop
pop
or
cmp
popa
push
mov
in
xor
inc
lret
and
mov
cltd
gs
jmp
mov
mov
xchg
push
push
scas
pop
cmp
orl
in
sub
sub
sti
aam
inc
std
pop
ja
xor
mov
mov
mov
out
mov
das
mov
mov
mov
xor
xor
out
repz
loope
clc
iret
sub
loope
sub
ret
fwait
xchg
pop
lea
adc
sbb
mov
movsb
repnz
xor
test
pushf
pop
ja
in
pop
or
popf
call
xor
xchg
xor
cs
sti
mov
xchg
repnz
out
xor
mov
dec
fsubl
dec
hlt
xchg
mov
push
mov
aas
lret
fbstp
add
adc
aam
cld
data16
jge
push
cltd
jns
push
xor
dec
cmp
sarl
jmp
scas
jg
lea
clc
xchg
lcall
out
add
leave
sbb
cmp
iret
scas
mov
cmpsl
jg
cmpsl
add
jo
jb
mull
jns
bound
outsb
lods
jle
mov
push
clc
fldl
sub
into
test
lahf
pop
imul
clc
sub
pop
movsb
jns
bound
dec
push
pop
fsubrl
leave
mov
cmc
hlt
testb
xor
pusha
enter
test
push
cltd
loopne
test
push
mov
adc
stos
pop
pop
out
sbb
xor
test
push
and
and
jno
xchg
or
xchg
ret
fisttps
enter
popa
add
cmp
lea
test
cmp
mov
jecxz
jne
mov
dec
adc
call
adc
test
lret
jge
outsl
mov
leave
cmp
and
loopne
in
rcrl
scas
mov
clc
xchg
or
pop
dec
imul
rorl
and
mov
std
sub
lcallw
gs
mov
adc
mov
sub
sub
stos
add
mov
cltd
sub
js
pop
xchg
cmpsl
cltd
xchg
mov
and
insb
push
jns
adc
movsl
scas
lret
xchg
scas
ja
call
divb
and
or
xchg
sahf
popf
dec
jmp
mov
push
js
lea
insl
data16
xchg
nopl
inc
inc
scas
mov
push
stc
mov
mov
sbb
and
xor
dec
fdivrs
es
and
outsl
sahf
push
movsb
addr16
int
inc
aaa
and
mov
fdivl
scas
es
and
adc
xor
xor
scas
jbe
outsb
pop
mov
scas
push
jne
jmp
nop
and
xorb
jmp
popa
enter
shll
dec
jb
xchg
mov
pop
adcl
lock
cmpsl
push
fcoml
ficompl
mov
sahf
hlt
inc
cld
jge
daa
int3
mov
mov
cmp
testl
and
pop
pop
mov
sbb
arpl
lods
jg
scas
movsl
mov
sub
scas
lock
repz
aam
lods
mov
or
nop
mov
push
shll
jp
mov
cmpsl
adc
sub
stos
out
push
cs
stc
sub
popa
aad
xchg
imul
shll
sbb
jmp
mov
xchg
mov
repnz
mov
test
jge
cmp
in
mov
sub
arpl
shrb
lods
out
add
out
ret
add
inc
dec
cld
push
lods
dec
mov
aad
inc
add
scas
sti
ret
jne
stc
inc
xor
mov
add
cmp
sbbl
pop
pop
aas
or
jno
orb
pop
inc
popf
lods
mov
leave
inc
jae
ret
xchg
cmp
in
mov
repnz
adc
mov
lret
aaa
mov
mov
int
add
pop
lcall
lret
lods
fsubs
mov
jo
dec
mov
inc
jnp
divl
loop
fmul
pushf
jg
jb
cwtl
ss
loop
aad
subb
in
fcompl
mov
or
dec
insl
mov
sahf
movsl
cwtl
add
fstp
pop
jge
fsubl
and
subl
loop
arpl
fstpt
mov
and
pop
inc
jmp
daa
fnsave
push
repnz
push
repnz
shll
mov
mov
cli
sub
xchg
std
in
xchg
mov
sub
stc
popf
imul
rclb
in
or
bound
scas
cwtl
ss
mov
xchg
in
xor
je
mov
xchg
pushf
and
adc
dec
lahf
push
push
cmp
sbb
std
lahf
mov
shlb
fadds
pop
xchg
push
pop
clc
fadd
xchg
loope
cmp
inc
inc
or
cmc
sbb
dec
mov
nop
int
mov
jbe
cmp
sbbb
sub
int3
mov
outsl
cmc
jecxz
mov
mov
or
scas
sub
rol
mov
lock
aam
sar
mov
add
pop
std
dec
mul
iret
into
imul
dec
pop
pavgw
add
and
cmpsl
and
fsts
jle
jbe
sub
xor
shll
push
sti
pop
cmp
shlb
mov
mov
outsl
nop
add
pop
cmpsl
xor
sub
and
mov
stc
inc
out
push
inc
mov
pop
jg
fisubl
jecxz
mov
jae
mov
icebp
aas
cmp
imul
shl
mov
cs
xor
insl
fbld
shll
sub
in
xor
jns
stc
sub
cld
mov
sub
rol
pop
pop
pop
repz
xor
popf
cmp
cmp
lods
popa
in
add
mov
adc
pusha
lods
mov
sub
test
sbb
jnp
adc
data16
insl
neg
call
repnz
imul
cmp
mul
mov
push
sbb
dec
sbb
sub
cmp
cld
cmp
fsubrs
cld
lds
sbb
sub
enter
pop
and
mov
push
jo
and
ds
je
aas
pop
xchg
ret
cmc
cmp
out
sahf
scas
in
mov
lea
aaa
loop
dec
mov
add
cs
lahf
adcl
mov
push
mov
or
enter
push
and
rol
jbe
mov
cmpsb
idivb
lea
mov
pop
stos
imul
dec
adc
fiadds
adc
cmp
lahf
push
push
std
repz
cmc
stc
mov
repz
mov
dec
nop
inc
mov
nop
or
imul
xor
adc
jno
sbb
push
jmp
or
mov
loope
mov
push
fists
adc
mov
fstps
fstpt
sub
rorb
fistpll
and
xchg
xlat
rcl
insb
cmpsb
mov
enter
dec
out
sub
xor
push
mov
or
sbb
out
nop
scas
mov
lods
ret
push
sub
cmp
call
adc
jo
fildll
pop
shlb
lods
fcoml
push
or
adc
scas
in
insb
lret
cmpsb
push
mov
cli
cmp
ret
pop
push
test
call
mov
filds
fbstp
pushf
xchg
test
aaa
mov
adc
hlt
loope
and
mov
cwtl
add
imul
movsb
test
inc
shll
pop
sub
mov
loopne
jp
mov
pop
pop
adc
adc
jge
test
ret
movsb
les
lcall
adc
popa
sub
mov
movsl
jns
xchg
jno
aas
adc
or
fabs
nop
mov
jne
mov
lea
mov
xchg
cmp
mov
ss
or
mov
pop
cwtl
arpl
push
pop
or
lock
add
lock
iret
mov
pop
mov
test
pop
xlat
cmp
push
cmpl
lock
cmpsl
repz
adc
in
cmp
mov
cmp
pop
jl
les
mov
repz
xor
rcr
repnz
hlt
lods
sahf
leave
std
xor
cmp
xor
jp
and
sbb
push
pop
mov
daa
sub
push
pop
jne
div
in
imul
sahf
push
fwait
aas
pop
imul
add
xchg
push
dec
fidivl
jae
lahf
mov
push
pop
stos
lea
fsubl
int
shl
mov
mov
dec
push
notl
sub
xchg
dec
and
jnp
cmp
les
jmp
xor
xchg
push
push
fstl
test
std
shl
adc
lods
inc
add
icebp
aad
jg
jnp
cmc
clc
dec
pop
movsl
cmp
pop
je
clc
mov
test
mov
adc
add
jmp
cmpsl
xor
cmp
pop
mov
jnp
arpl
repnz
push
pop
cmp
daa
outsl
dec
sub
push
out
or
xor
ljmp
dec
rcrl
fs
rclb
in
jns
fiaddl
pop
stc
inc
popa
mov
jecxz
add
lock
bswap
ja
xchg
jne
divb
or
jecxz
in
rolb
inc
je
mov
mov
mov
push
dec
loope
sub
into
adc
xor
sti
mov
clc
sbb
dec
arpl
xchg
mov
outsl
roll
xchg
xchg
idiv
lret
ljmp
mov
inc
cmp
push
mov
add
sbb
mov
insl
sahf
cltd
sbb
dec
mov
pop
loopne
jle
or
xchg
leave
push
dec
jo
cmpsb
fnstsw
arpl
mov
scas
data16
icebp
xlat
mov
frstor
add
or
adc
xor
mov
cli
jbe
test
nop
push
jne
bound
pop
mov
adc
or
arpl
add
imul
test
jecxz
inc
xor
xor
xchg
cmpsl
lods
xor
aas
out
push
cmp
adcl
pushaw
mov
data16
dec
xchg
daa
mov
fcmove
shr
xchg
out
push
fistl
pop
ljmp
call
cmc
mov
push
sbb
cmp
js
out
fcmovnu
adc
cmpsb
mov
movl
sbb
clc
xor
sbb
cs
sbb
jl
and
xor
je
adc
pop
sub
insl
scas
outsb
ret
in
pop
cs
mov
and
rol
add
iret
xchg
sbbb
mov
jg
pop
mov
jno
cmp
mov
sub
lret
push
cmpsb
shld
cmp
sbbb
je
pop
das
mov
lds
sub
scas
xor
dec
lock
je
sbb
in
mov
or
mov
inc
jmp
inc
ljmp
sub
cmp
into
aam
or
sub
add
add
xor
out
lret
pop
sub
add
push
mov
xor
jp
icebp
adc
jb
cmc
or
xchg
lock
dec
jp
sbb
ja
push
movsl
jmp
jl
shrl
aaa
pop
push
push
dec
add
leave
adc
je
imul
push
sarb
cs
mov
outsl
push
mov
xchg
jmp
aad
shr
addr16
call
int
or
in
ret
push
mov
xchg
jae
or
das
cmp
test
xchg
movsl
jnp
mov
mov
movsb
mov
inc
shl
clc
jmp
xchg
pop
cltd
lds
pop
sub
xchg
fiaddl
int
fistpll
jne
sub
loop
test
jmp
hlt
gs
fists
lahf
popa
stc
mov
dec
cwtl
mov
mov
int
call
stc
xchg
and
push
push
movsl
in
pop
jb
sti
ffreep
add
call
jmp
push
dec
int
jge
lret
addl
or
mov
xchg
arpl
das
insl
jno
jmp
lahf
push
mov
daa
or
daa
cli
inc
das
or
or
stos
test
and
sbb
pop
fwait
xor
imul
cmp
cmp
iret
sbb
add
and
inc
xchg
dec
mov
paddsb
lret
mov
jbe
inc
ror
add
inc
loopne
jo
mov
jl
lret
test
push
jge
fistpl
dec
mov
xor
jp
xor
mov
leave
rcr
fwait
add
data16
and
jno
repz
pop
insb
test
xor
jno
ret
enter
cmovnp
lds
mov
sbb
jle
inc
fdivr
ret
mov
int
insb
jnp
pop
or
sbb
jb
dec
sahf
repz
xor
xor
fmul
jbe
mov
test
push
xor
test
pushl
inc
pushf
push
push
leave
lret
fdivl
adc
pop
cltd
shlb
pop
add
es
add
xchg
fcoms
pop
outsb
enter
mov
lea
mov
adc
pop
out
clc
mov
push
jns
sub
test
jbe
pusha
stos
arpl
pop
fiaddl
push
push
cmpsl
push
add
cwtl
fidivl
in
mov
je
jecxz
xchg
lahf
aad
xchg
dec
loop
cli
pop
jle
add
mov
jnp
out
jp
neg
add
pop
leave
xchg
jmp
xlat
sub
pop
rcll
jg
lret
inc
addb
mov
leave
mov
notl
and
jge
and
int
xchg
xor
and
mov
stos
push
mov
arpl
pop
aam
sbb
fwait
into
xchg
mov
add
and
aas
lods
adc
pushf
insl
adcl
sahf
pop
mov
call
imulb
cwtl
inc
insb
clc
pop
lds
inc
pop
jge
lods
orl
mov
xchg
xor
add
push
in
and
in
inc
dec
andb
and
cli
push
pop
pop
push
add
jnp
hlt
iret
pop
sarb
xor
adcb
pop
icebp
in
jno
mov
xor
mov
out
subl
lods
lds
jbe
rolb
and
enter
jl
ret
sbb
cmp
or
jnp
or
cmp
cmp
lock
lret
cld
mov
dec
imul
mov
movsb
inc
aam
rclb
mov
jg
cli
adc
out
cmp
sbb
xor
mov
js
popa
dec
add
outsb
cli
loopne
push
lods
cmp
loop
jbe
mov
adc
and
jp
scas
data16
test
push
xchg
ja
repz
xor
xchg
pop
mov
push
cmp
dec
hlt
sarl
gs
xorb
xchg
clc
fimull
inc
out
lret
fs
nop
adc
inc
pop
cmpsb
sbb
out
lcall
loope
adc
pop
pop
cmp
pop
push
dec
das
add
test
shll
inc
fcomi
push
push
inc
aad
dec
testb
inc
int
insl
or
xor
sahf
push
cmpsl
daa
es
outsl
stc
fmuls
enter
cli
and
mov
les
test
dec
xchg
dec
addr16
mov
gs
lahf
dec
or
and
jge
jbe
mov
in
cmp
fimull
mov
and
push
sbb
loop
clc
xchg
imul
js
xor
outsl
xchg
mov
fdivrs
pop
jns
sub
shlb
fdivrl
mov
or
pop
into
pushf
faddp
mov
mov
daa
push
jo
add
stos
hlt
xchg
push
fdivl
ljmp
lea
xchg
mov
call
in
call
das
xchg
cmpsl
dec
shrb
push
inc
sbb
cs
test
pop
daa
push
lahf
add
int
mov
push
aad
fidivrs
or
ss
shrl
ss
inc
outsl
jg
in
shlb
or
lcall
sti
xchg
sub
daa
or
jnp
outsb
enter
or
cmp
mov
pusha
xchg
pop
cld
pop
cmp
pop
xor
cmp
push
stos
jmp
dec
mov
push
or
imul
jmp
imulb
dec
nop
xchg
adc
pop
stos
sbb
sbb
insb
mov
scas
mov
sar
aaa
mov
popf
jb
jg
je
scas
xchg
mov
insb
test
int
test
sti
mov
pop
pop
mov
popa
lahf
adc
insl
push
jmp
and
js
mov
sub
ds
lds
int3
mov
lret
sbb
negb
xchg
repnz
insb
mov
outsb
cmp
mov
ljmp
fnstenv
mov
mov
xlat
jo
and
inc
xchg
loope
ljmp
jmp
packssdw
pop
jge,pt
adc
adc
jl
inc
jmp
mov
scas
mov
sub
inc
cmpsl
decb
into
pusha
sbb
xchg
cmc
sbb
aas
pop
stos
repnz
aaa
xor
inc
in
mov
push
dec
dec
mov
clc
sbb
pop
gs
inc
movsl
xor
xchg
je
hlt
ljmp
sti
mov
cs
ss
inc
push
push
sub
pop
out
cmp
cli
xlat
jp
je
sub
inc
ljmp
sub
lods
adc
mov
cwtl
shll
lcall
ljmp
test
or
xor
sub
inc
ss
inc
rorb
sub
pop
stc
add
rcrl
pusha
jbe
into
shrb
ret
push
sti
lds
push
js
int3
roll
and
add
jo
mov
push
and
sbb
in
push
jns
or
aas
shlb
mov
outsb
pop
sbb
out
call
xor
movsb
fsubl
inc
adc
andb
jno
ds
das
fnstsw
mov
xor
lock
orb
out
dec
aas
mov
xor
insb
pop
sub
add
lea
ja
pop
add
fiaddl
js
cmp
mov
in
adc
adc
sbb
in
int
imul
fists
push
push
push
scas
sub
jae
mov
inc
jecxz
lds
out
mov
outsl
mov
rcll
lods
xchg
insl
mov
pop
cmp
loope
aas
pop
pop
xchg
xchg
movsl
fcompl
stos
hlt
lcall
nop
inc
mov
xchg
sti
mov
divb
sahf
fdivl
sbb
test
mov
dec
cmp
or
addr16
xchg
xor
insl
inc
sbb
ljmp
sbb
insb
mov
mov
movsb
data16
mov
or
je
jg
aam
cmpsb
sub
sub
movsb
sti
xchg
fildll
aam
xchg
movl
in
jnp
dec
mov
ret
sub
mov
mov
dec
push
sbb
xor
push
fs
sahf
es
sbbb
dec
xchg
in
mov
rorl
inc
shl
pushf
int
mov
cmp
shrb
repz
inc
gs
mov
pop
dec
movsl
jg
sbb
mov
jo
xor
xor
dec
fs
mov
out
imul
xchg
divl
insb
neg
loope
aaa
in
pop
push
mov
xchg
push
adc
aam
pop
and
in
ror
lods
shlb
scas
mov
xchg
ret
push
mov
cld
ficompl
loopne
lahf
mov
arpl
repnz
call
cmp
insl
push
pusha
in
dec
pop
pushf
xor
nop
ds
sub
nop
mov
pop
sbb
and
daa
mov
ljmp
std
test
mov
movsb
imul
add
in
xchg
xchg
jbe
dec
add
sbb
les
or
jmp
aaa
push
pop
es
inc
adc
nop
jg
fst
bound
mov
es
into
out
push
int
pop
ds
jne
test
rcll
mov
mov
mov
testb
mov
pop
xchg
inc
xor
testl
fst
ss
fcompl
jne
mov
cli
jbe
add
mov
out
aam
adc
inc
repnz
xor
into
into
add
inc
pop
dec
push
cmp
cs
rol
xchg
jne
adc
repz
sti
ret
aad
push
popa
xor
push
fwait
test
and
lret
pop
cs
xor
pop
dec
out
sbb
pop
xor
pusha
mov
sbb
divb
cmp
iret
and
dec
inc
push
cmpsl
xchg
out
mov
lods
jbe
dec
and
shl
sub
sub
imul
pop
push
outsl
sti
sub
cmpxchg
sbb
arpl
fsubs
test
mov
in
pop
clc
fpatan
or
mov
cmovns
add
das
mov
add
test
add
or
or
cmpsb
shlb
divb
lds
or
dec
inc
jne
cmpb
insl
adc
xor
jl
sub
cmp
cwtl
gs
add
lods
repnz
sub
aad
iret
jno
push
sbb
sbb
mov
xchg
cmp
mov
ficoml
add
pushf
pop
dec
or
std
ret
sub
jmp
aad
outsb
xor
dec
fidivrl
jle
sub
ficoms
sub
ret
in
inc
mulb
sbb
mov
roll
mov
dec
in
mov
inc
mov
icebp
add
push
leave
sbb
lods
xor
ja
sbb
sbb
mov
dec
stc
jmp
outsb
lods
push
mov
or
cltd
cs
int3
push
das
jae
pop
mov
test
jnp
int3
in
aas
sbb
mov
mov
mov
ret
rorb
call
icebp
dec
pop
fldt
js
mull
push
loope
mov
icebp
jle
in
push
roll
std
mov
sti
rcrl
je
pop
fimull
pop
mov
xor
lret
out
out
sbb
loopne
shlb
pop
add
aas
push
dec
notb
test
daa
add
int
mov
jmp
cltd
std
push
jno
lret
push
push
adc
xchg
jne
xchg
push
adc
shll
icebp
mov
cli
xorl
fadd
fs
in
adc
jecxz
in
or
sub
decb
or
mov
mov
fldl
xchg
and
xor
inc
mov
dec
iret
fildl
mov
in
int
adc
iret
fisubl
fwait
xchg
mov
mov
stos
or
sbb
adc
mov
in
gs
cmp
lcall
test
aad
mov
xchg
out
daa
rcl
add
ret
jb
je
sub
test
aad
lret
jo
sbb
jge
imull
xchg
and
decl
mov
int
dec
loope
pop
add
test
lods
xorl
or
pushf
and
shll
sahf
xor
mov
xchg
dec
xchg
push
test
inc
xor
sbb
repz
pop
push
lret
inc
push
jno
int3
xchg
das
pop
or
add
loope
push
lea
in
push
fcomps
shlb
or
sti
int
mov
cli
adc
outsl
loop
mov
pop
dec
loop
xchg
ret
and
sbb
cld
push
call
cwtl
imul
mov
pop
cmpb
in
jno
mov
add
out
bound
out
cli
add
jl
mov
incb
lret
arpl
push
movsb
ret
mov
sub
lea
ljmp
out
pop
jl
inc
or
lods
dec
in
push
fld
jne
xchg
shrl
lock
shll
std
adc
loopne
addr16
movsb
out
cmp
into
pop
inc
insb
jno
jge
pushf
and
mov
and
test
leave
stc
push
mov
mov
and
sub
cli
jecxz
sarb
mov
dec
subb
insl
sub
pusha
leave
xor
and
jo
ds
bound
int
aas
sbb
inc
mov
cmc
clc
scas
dec
loope
sbb
shl
das
aas
inc
cld
add
and
lock
fimuls
dec
jle
xor
fmull
and
adc
test
loop
pushf
jo
daa
hlt
popf
imulb
sub
cwtl
adc
mov
cmp
jp
inc
sub
and
test
loope
loop
add
jnp
xor
iret
lds
arpl
test
imul
enter
xchg
sbb
mov
inc
xor
negb
mov
xchg
leave
pop
mov
subb
and
push
or
xchg
pop
push
fwait
cmpsl
leave
add
mov
sub
sub
pop
cmp
push
push
in
xor
fldl
pusha
xor
stos
inc
leave
xchg
jo
pop
cmp
mov
pop
inc
xabort
int3
in
sbb
sub
fcos
sahf
inc
fwait
sub
pop
sbb
jae
inc
pop
mov
cmp
pop
popa
pop
test
mov
in
outsb
ret
jecxz
in
sbb
cmpsb
insl
popf
adcl
push
cmc
push
mov
and
mov
nop
mov
dec
andl
arpl
mov
cmp
push
adc
sahf
dec
mov
inc
sub
adc
dec
xor
jmp
xor
push
movsl
jg
add
sbbb
adc
mov
addr16
cmp
inc
jmp
mov
and
add
or
out
pop
pop
push
fsts
out
roll
aad
arpl
rolb
cmp
add
lods
pop
imulb
or
out
and
mov
cmp
mov
mov
rep
xchg
cmc
xchg
jae
pop
lea
in
fstl
loop
shl
and
stos
sbb
sbbb
cmp
stc
xor
fisttpll
scas
cltd
sbb
sbb
ret
mov
add
shrl
xchg
in
std
pop
xchg
xchg
scas
icebp
scas
mov
cli
loop
push
cmp
push
dec
fldl
lahf
jp
add
or
adc
jg
sub
inc
inc
shlb
and
mov
subb
cld
lret
imulb
fs
jne
dec
and
cltd
inc
or
add
mov
mov
cmp
mov
aaa
ret
loopne
and
test
andb
mov
rclb
mulb
je
call
adc
imul
jo
jb
add
je
mov
jp
loopne
fisubl
dec
aas
or
test
xor
push
xchg
mov
adc
je
push
jno
add
insl
and
pop
jecxz
pop
popf
out
push
pop
lcall
xchg
mov
push
inc
cmpsb
cmc
push
mov
and
aas
jecxz
ret
addr16
pop
add
xor
dec
push
sbb
sbb
dec
inc
inc
sub
dec
dec
pop
cmp
inc
sbb
popa
push
pop
push
jb
or
xor
test
scas
adc
cld
cmp
cmc
cwtl
cmpsb
xor
out
cmp
xchg
std
out
push
mov
aaa
divb
xchg
lds
add
pop
aam
call
cli
es
imul
outsb
jle
negl
lods
outsb
cmc
inc
cmpsl
negb
mov
cmp
mov
mov
mov
out
mov
je
iret
nopl
xor
js
arpl
inc
fwait
imul
adc
and
ret
push
rolb
sti
lock
icebp
into
pop
xchg
aad
sub
shr
jne
xor
inc
add
and
add
fstpt
push
and
bound
inc
imul
or
cmpsb
ljmp
mov
je
or
daa
add
sar
scas
lahf
xchg
punpcklbw
mov
mov
orb
mov
xor
fsubrs
test
loope
insl
mov
outsb
shl
xchg
sub
lds
sub
and
movsl
std
sarl
inc
ficomps
jb
fisttps
cmpsl
dec
sbb
mov
inc
scas
or
or
dec
mov
sub
jnp
pop
push
test
outsl
jae
push
shlb
loopne
xor
cmc
jb
in
popa
lret
je
pop
fdivl
pop
and
jp
shll
sbb
cli
mov
cmc
pop
xchg
jne
fxch
cmpsb
sbb
add
and
inc
testb
mov
xor
mov
mov
inc
jmp
clc
and
lahf
mov
aad
jp
movsl
mov
test
push
pushf
gs
jg
outsl
push
sub
test
outsl
insb
sahf
xchg
xchg
push
outsl
or
xchg
scas
mov
mov
inc
xchg
dec
mov
pop
aaa
mov
xor
fcmove
or
cmpsb
jo
je
iret
iret
mov
dec
lods
fwait
mov
xchg
xchg
push
pop
inc
leave
mov
in
mov
mov
mov
pop
add
xor
jo
push
xor
xor
movsl
xor
aad
add
loope
mov
mov
mov
add
xorl
sub
es
shlb
xchg
push
repnz
cltd
imul
add
or
jo
mov
jl
inc
xchg
mov
or
std
inc
addr16
popa
mov
fldz
pop
cmp
out
and
mov
or
in
out
jns
popl
sub
mov
xor
fs
xchg
and
popa
mov
imul
dec
mov
stc
pop
and
decb
mov
pusha
pop
add
dec
mov
out
mov
aad
jo
leave
or
pop
dec
movsl
xor
adc
xor
jl
add
test
mov
pop
push
fs
pop
je
out
pusha
xchg
call
push
xchg
jae
inc
and
arpl
je
jle
add
mov
lret
push
jp
mov
ja
cwtl
sbb
push
mov
cli
inc
lods
and
cmp
pushf
in
out
inc
adc
sarl
adc
fucom
jbe
mov
js
loopne
ret
cmp
shlb
rcr
cmc
addr16
fwait
ljmp
mov
jo
insl
in
out
aam
aaa
das
sub
dec
jge
and
push
cli
jge
popf
push
adc
imul
ds
imul
inc
movsl
fcompl
aas
dec
pusha
xchg
adcl
jecxz
or
fwait
shl
pop
addl
daa
jp
inc
clc
mov
repz
or
and
mov
xor
dec
lea
adc
adc
addl
push
cld
call
push
int3
cld
or
lcall
jge
inc
mov
je
sahf
jl
jns
fabs
lea
jns
ret
rclb
cs
int
rcl
movsb
repnz
cmp
push
aaa
xor
int
push
mov
pop
sub
xor
in
dec
arpl
mov
sbb
mov
pop
pop
scas
in
xlat
mov
inc
enter
std
xor
xchg
mov
xchg
and
cmp
add
xchg
xchg
adc
rorl
js
jmp
in
jl
das
aaa
push
adc
jmp
xor
mov
mov
jns
sti
cmp
mov
sub
push
movsb
pushf
sbb
repnz
mov
aaa
inc
aad
jmp
or
sbb
push
pop
dec
pop
xchg
cmp
dec
dec
add
repz
and
jb
mov
lret
mov
jl
add
lea
insb
ret
push
aam
into
fucomi
jle
int3
lock
stos
dec
arpl
cltd
adc
sub
xchg
mov
les
jnp
mov
movsb
sbb
xor
sub
push
fcmovnbe
add
addr16
sbb
sbb
xchg
data16
outsl
icebp
inc
adc
sbb
xchg
cld
inc
lcall
pusha
inc
into
popa
cli
mov
sub
cmp
mov
dec
dec
push
arpl
adc
xchg
xchg
cmp
or
std
mov
adc
hlt
in
fildl
jge
cmp
xchg
sub
cmovl
xor
mov
mov
push
les
pop
notb
xor
push
xchg
notb
cltd
push
or
jl
pop
lock
push
push
fwait
imul
sub
pop
pop
sbb
and
xor
sbb
push
xchg
jmp
iret
fsubrs
cmp
outsl
add
cwtl
lea
repnz
inc
pop
sbb
and
or
mov
mov
sbb
sbb
fwait
cwtl
fwait
cmp
cmp
push
mov
scas
lds
rcll
mov
outsl
negl
insl
dec
mov
add
loop
das
adc
xchg
or
test
test
push
stos
aas
add
sub
xchg
ljmp
ljmp
xchg
pushw
scas
lds
or
or
insb
dec
int3
cmp
int3
sahf
icebp
pop
jle
inc
dec
xchg
clc
pop
popf
fdivs
sub
ljmp
rorl
leave
xlat
push
mov
daa
jl
mov
sbb
sub
ret
sti
mov
mov
daa
dec
fidivs
fdivl
and
jp
scas
dec
add
adc
fdiv
jg
push
in
outsb
mov
loopne
orl
mov
mov
mov
mov
lahf
xlat
ljmp
filds
jae
repz
clc
cwtl
outsl
jp
adc
inc
dec
push
add
test
call
dec
cmc
out
clc
lock
inc
pop
cmp
imul
sub
add
mov
sahf
sub
or
jge
jge
stos
in
jmp
cld
jp
and
out
mov
mov
xlat
pop
rorb
mov
adc
push
fidivs
dec
icebp
mov
dec
loope
xchg
dec
insb
inc
in
pusha
push
ret
xchg
mov
fisttpl
mov
adc
or
lock
std
push
das
push
test
adc
pop
addb
loopne
pop
push
xor
lds
xchg
sbb
lods
rcrl
lea
enter
mov
aam
sub
jo
xor
jb
test
jnp
repnz
fimull
mov
add
jle
js
pop
or
push
mov
scas
push
adc
inc
xchg
fstpl
out
sbbl
es
inc
popf
sbbb
cld
sbb
movsl
xlat
rcr
fwait
mov
in
fnstenv
mov
add
rcrb
xor
mov
in
push
rep
ja
mov
call
add
mov
mov
lock
xchg
or
xor
popf
add
nop
movsb
test
aas
push
sub
add
mov
out
mov
sbb
sbb
cmp
jecxz
imul
xlat
aaa
push
scas
mov
mov
jg
out
inc
daa
shlb
mov
xchg
inc
xor
iret
pop
mov
jns
je
mov
jne
mov
sti
sub
loope
or
xor
jns
pop
negl
add
mov
sub
int
pop
mov
dec
and
lcall
mov
pop
movb
and
js
or
rclb
scas
fs
loopne
sub
adc
cmp
mov
mov
pextrw
mov
call
sbb
cmp
cs
pushf
movsl
test
jge
notl
push
or
shlb
inc
outsl
mov
mov
stc
mov
inc
dec
hlt
loope
lcall
mov
dec
lahf
inc
mov
xor
add
add
or
pop
out
add
mov
imull
adc
inc
or
sbb
in
push
les
jge
mov
xchg
scas
int
push
out
subb
mov
fcoml
lret
add
sub
pop
dec
sub
cmp
mov
and
fildl
orb
insb
imul
add
pop
mov
inc
sub
push
sahf
and
mov
inc
lahf
movsl
mov
mov
push
or
es
mov
xchg
imul
mov
imul
aas
cs
ljmp
push
int
or
xchg
push
sbb
pop
rol
fwait
pop
and
jne
push
testb
popa
jle
xor
fcoms
cmc
test
jp
push
mov
mov
mov
fwait
and
mov
movsl
sub
mov
xchg
xor
cli
pop
movsl
je
push
in
icebp
outsb
scas
xchg
out
inc
scas
xlat
push
lods
test
and
jl
dec
xchg
sub
sub
out
imul
fwait
stos
movsl
les
sarl
push
and
xor
cld
out
push
fildl
adc
cmp
pop
aaa
push
xchg
dec
mov
and
xchg
add
xor
aam
or
push
pop
jne
in
jge
push
mov
xor
jne,pt
cltd
cltd
inc
stos
fidivs
inc
jno
js
adc
daa
or
std
adc
push
sahf
push
fcomps
xor
jle
jg
xor
movsl
enter
mov
imull
mov
jne
mov
imul
outsb
popf
jge
mov
jg
push
mov
nop
fidivrs
popf
aas
jbe
sbbl
dec
sti
jecxz
stos
xor
jmp
imul
bound
lods
int
add
std
call
cmp
inc
insb
movsl
and
cmp
lods
mov
xor
mov
lea
movsl
jns
shr
in
popa
xchg
add
lahf
xchg
cmpsb
ret
push
add
movups
shll
mov
adc
add
popa
sub
push
sahf
sbb
mov
push
fs
mov
bound
mov
mov
push
jg
dec
mov
je
lret
push
test
pop
pop
and
add
push
ret
push
or
icebp
mov
mov
push
lods
enter
into
or
inc
or
inc
das
and
mov
scas
mov
js
add
mov
jge
push
rcll
out
dec
mov
lds
lods
scas
push
push
fwait
movsb
and
ljmp
cli
cmp
sbb
lea
mov
je
js
inc
add
out
movb
data16
push
push
mul
sbb
test
negb
loop
xchg
loopne
fimuls
sub
xchg
fsubrl
xchg
scas
jg
int3
pop
sbb
cmc
xchg
push
clc
cmp
jae
xlat
insw
pop
cltd
xor
jl
jmp
bound
ja
enter
xchg
aad
push
adc
lret
jecxz
cmp
mov
int3
and
out
sub
cmp
cltd
icebp
mov
jg
add
repnz
aad
add
adc
scas
pop
int
repnz
sbb
ds
mov
pop
adc
xor
outsl
mov
dec
popa
cmp
arpl
fwait
pusha
dec
push
addr16
push
aas
mov
sbb
bound
out
in
inc
or
fdivl
add
xchg
mov
cmp
cmp
fisubrs
sub
mov
pusha
out
pop
xchg
add
mov
and
int
xor
pop
mov
mov
je
ds
pop
mov
lahf
xor
out
push
mov
mov
inc
mov
xor
and
add
daa
mov
mov
pusha
dec
mov
sub
push
test
jno
out
and
nop
js
jo
lock
rolb
popf
xor
mov
sub
xor
mov
and
inc
cmpsb
shrb
call
xor
sub
movsb
stos
sbb
dec
roll
les
cmpsb
iret
or
cwtl
inc
out
mov
sti
pop
fisttpl
mov
jns
lock
push
xchg
in
xor
loopne
dec
loope
mov
jmp
lret
movsb
mov
movsl
enter
cwtl
in
mov
push
inc
mov
pop
cltd
jl
enter
mov
out
sbb
push
lds
lea
sbb
and
push
testl
xchg
out
daa
popa
cmp
dec
sbb
rorl
mov
imul
int
fwait
ret
pop
mov
out
xchg
pop
jp
xor
in
mov
mov
bound
inc
xchg
cmpsb
mov
or
insl
push
jg
push
cltd
sti
mov
test
pop
movsb
pop
sbb
pop
xchg
xor
sub
xchg
in
push
sbb
je
cs
arpl
mov
in
fiaddl
fsts
jl
stos
or
adc
loope
js
adc
loopne
in
fistpll
mov
and
jp
jns
or
push
adc
in
fsubl
mov
testb
imul
inc
shlb
sbb
xchg
movsb
pop
dec
mov
das
adc
rorb
scas
in
mov
cld
inc
cmpsb
jb
sbb
add
mov
cmp
das
mov
lds
lods
sbb
mov
test
inc
push
dec
mov
imul
xchg
pusha
jl
test
sub
loope
insl
pop
push
fadd
mov
insb
xor
aas
mov
fs
mov
add
pop
push
shr
jbe
out
ret
pushf
test
divb
add
mov
pop
into
int
enter
or
std
dec
aas
xchg
push
and
sbb
lea
cmp
mov
xchg
ja
gs
sbb
inc
iret
loopne
cli
loope
dec
cld
shl
shrl
sbb
xor
mov
push
jo
cmp
jb
xor
leave
inc
nop
cmc
cmp
lcall
aam
add
bound
aas
sub
sub
andl
int3
mov
mov
roll
xchg
and
mov
cmpsb
jns
int
lds
mov
or
daa
push
inc
push
sarl
jbe
xor
add
fildll
and
cmpb
jo
testl
push
imul
test
loope
aam
pop
push
notl
mov
int
add
bound
stos
outsl
adc
into
ja
in
and
test
loop
aas
gs
std
nop
mov
push
xor
into
dec
aaa
fdivrl
pop
andl
pop
xchg
add
cmp
nop
lcall
repnz
loop
pop
pop
subl
push
fldt
in
pushf
imul
or
mov
addr16
or
pop
xorl
repz
mov
ret
bound
pop
fs
jecxz
into
test
ja
out
insl
out
push
sbb
pop
pop
into
aam
adc
bound
cld
and
jne
test
movsb
out
add
mov
inc
popf
imul
add
mov
stc
test
cmp
in
dec
pop
bound
pop
xor
je
push
call
cmpsb
in
jle
sbb
xor
fnstenv
cmp
mov
cmp
scas
test
sub
out
lock
lds
addr16
ds
mov
test
mov
hlt
mov
xor
add
imul
sub
pop
xchg
mov
and
test
jne
xor
enter
cmpsl
xor
or
add
mov
add
lret
jle
aad
cld
jl
popf
push
and
push
xchg
or
insb
cld
push
cmp
ficoms
pop
mov
and
dec
test
cwtl
jmp
icebp
cs
insb
xor
push
lods
popf
arpl
cwtl
push
mov
or
sbb
int
fisubl
aaa
and
push
mov
hlt
call
or
repnz
cmp
push
xor
insb
jl
push
into
shrl
int3
lods
leave
push
push
add
call
push
test
mov
xchg
inc
and
stos
jbe
mov
xorb
loope
cld
ds
sbb
into
or
repnz
sbbb
sbb
in
ror
addr16
add
mov
fs
mov
fildll
ljmp
rcrb
sub
mov
or
pop
cmp
pop
aam
adc
cwtl
insb
dec
adc
mov
test
push
stos
jno
sahf
and
sub
lahf
call
and
cmp
mov
sub
int3
push
dec
push
outsl
push
mov
rcrl
and
mov
or
fs
push
lret
jmp
push
mov
enter
mov
sub
cltd
sbb
and
out
pop
and
insl
or
xor
imul
movsl
shll
adc
stc
es
sbb
je
out
cmp
imul
xchg
fisubrs
sub
icebp
les
out
shlb
mov
es
loopne
fistpl
lods
sub
dec
adc
inc
inc
inc
mov
mov
ret
in
out
dec
adc
mov
jns
lret
rcrb
adc
mov
leave
mov
repz
inc
sbb
or
mov
hlt
sbb
push
mov
push
lods
loop
jg
lods
add
rol
xchg
into
lcall
jno
adc
pop
das
and
pusha
cli
xchg
shrl
lret
stos
sti
fdivrs
or
imul
out
push
dec
xchg
mov
add
hlt
dec
sub
shll
push
int
arpl
jns
pop
insb
idiv
add
xchg
mov
mov
add
cmpsl
dec
cmp
ss
mov
inc
popf
leave
fcmovu
test
add
adc
hlt
xor
shll
sbb
fsubrs
pop
adc
dec
mov
xchg
imul
testl
out
mov
movsb
repnz
nop
xchg
adc
lret
xchg
and
xchg
xor
in
dec
add
pop
mov
cmp
sbb
cmc
and
outsb
push
mov
int
push
cmp
cltd
mov
insb
or
cld
jne
cwtl
cld
add
xchg
int
dec
sarl
jns
jo
loop
push
or
cmp
jo
in
mov
jl
shlb
jns
cmc
dec
mov
insl
jp
fs
mov
mov
inc
ss
dec
call
push
jbe
dec
std
xchg
push
pop
ret
and
jle
cli
loope
repz
jbe
arpl
sahf
pop
loopne
int3
fcoms
fdivs
ss
or
xor
cmp
lods
mov
mov
and
and
dec
jns
cmp
add
push
xchg
rolb
int3
pop
mov
xor
rolb
outsb
mov
insl
pop
mov
add
shrb
mov
sub
lea
xor
sub
filds
lret
mov
jo
xchg
stc
mov
push
shll
lods
dec
aam
adc
fwait
dec
inc
xor
cld
subl
popa
das
in
xchg
push
mov
sub
aam
jno
or
dec
pop
sbb
and
test
ds
adc
mov
out
xchg
pop
jg
push
dec
cmovle
adc
push
stc
xor
sbb
dec
imul
outsb
pop
aad
ret
and
xchg
out
jo
pop
lods
aas
insl
aas
jle
dec
rcl
mov
in
jb
xor
xchg
add
mov
and
fxch
fisttps
dec
xchg
sbb
lcall
loop
out
xchg
outsl
and
rep
nop
push
dec
cmp
dec
xor
cmp
xchg
pushf
pop
outsl
insl
cmpsb
cwtl
pop
inc
imul
dec
xor
jmp
mov
dec
cmp
xchg
xchg
int3
sub
add
mov
in
into
mov
icebp
in
dec
rorb
js
ljmp
mov
push
add
push
insb
pop
mov
mov
aas
arpl
sub
xor
push
cmp
jbe
fstps
pop
jae
repnz
sbb
pusha
pushf
test
lock
dec
mov
fs
sub
push
movsb
inc
inc
mov
add
cs
push
sbb
adc
inc
add
cmpsl
sbb
or
ja
add
scas
push
test
cmpsl
sub
cltd
ficoms
inc
mov
fsts
pushf
cld
in
mov
xor
mov
fiadds
lock
leave
sub
push
cmp
push
or
aad
push
adc
or
xchg
addl
mov
adc
add
cmp
mov
call
rolb
jne
dec
imull
popa
cmp
lods
mov
sub
xchg
movsl
xor
mov
pop
ja
call
aaa
fdiv
xchg
pushf
jnp
xchg
sbb
add
mov
fidivs
stos
and
bound
sub
stc
add
hlt
std
pop
cmp
jae
push
dec
xchg
dec
in
daa
inc
je
into
cmp
rcrl
mov
aad
and
fsts
xor
cld
nop
out
loop
jnp
push
push
rolb
insb
push
inc
add
xchg
adc
cmpsl
cmp
sbb
imul
push
jge
or
daa
inc
rorl
dec
scas
hlt
ficompl
movsb
test
adc
jae
adc
mov
dec
xchg
pushf
insl
mov
mov
adc
clc
pushf
subb
imul
gs
xor
dec
mov
addr16
test
popf
sub
push
ds
and
mov
push
frstor
pop
pop
dec
jle
pop
sub
idivl
inc
jb
sbb
mov
lcall
mov
shufps
inc
mov
or
shll
push
repz
jne
inc
rclb
rcll
push
loopne
mov
push
sbb
push
inc
inc
cmpsb
jns
jb
pop
jl
ds
shll
xchg
push
bound
sbb
and
enter
arpl
negl
lret
into
adc
mov
xlat
iret
inc
sbb
into
mov
repz
and
stc
stc
or
sbb
lahf
int3
sbb
stos
sbb
aam
and
mov
out
aaa
fldenv
mov
push
or
icebp
aam
addb
add
lahf
cmp
xchg
loopne
mov
loopne
inc
rolb
sub
outsb
mov
insb
or
lcall
test
inc
dec
cmc
mov
xor
mov
data16
mov
pop
loop
inc
cmpsl
out
dec
jp
adc
mov
ljmp
js
shl
rcrl
lods
add
loopne
shlb
adc
jae
push
mov
pop
jo
xor
daa
test
dec
nop
leave
inc
dec
popa
sub
inc
jb
add
xchg
fmull
popf
cmp
aad
in
adc
pushf
sbb
or
jo
ljmp
cmp
push
outsb
cmc
cs
mov
dec
sbb
test
pop
fdiv
sub
jecxz
mov
test
ficoml
dec
nop
mul
jge
xchg
mov
bound
rorb
xchg
paddd
push
adc
adc
jno
push
popl
jb
jnp
add
mov
imul
mov
jne
js
cli
mov
xchg
icebp
bound
adc
inc
push
sarl
adc
or
mov
inc
sahf
xchg
pop
or
mov
mov
pop
mov
movsl
pop
inc
jmp
jmp
mov
cld
mov
popl
dec
sub
fwait
adc
xor
jmp
fdivrs
mov
jp
xlat
rorb
and
sub
inc
jno
fisubs
les
aam
add
bnd
out
insl
or
cli
outsb
inc
mov
rorb
mov
mov
jns
cli
fsubr
jno
cmp
cmp
pop
jecxz
movsl
call
dec
orl
pusha
mov
cwtl
outsl
lods
sub
lret
repz
lods
pop
xchg
push
lds
cmp
cltd
jb
mov
or
mov
clc
and
pop
lds
cmpsl
mov
cmp
mov
jl
cwtl
shrl
repnz
cmpsb
xlat
outsl
jne
mov
fdivrl
data16
roll
popf
int3
repz
cs
or
adc
orl
dec
jle
fstps
les
push
rorl
lret
cmpsb
mov
dec
arpl
jno
loopne
movb
shrb
ret
inc
inc
sub
jmp
imull
imul
sbb
mov
sbb
aad
fchs
or
add
add
xchg
pop
mov
pop
lods
dec
jbe
sbb
pop
inc
xchg
stos
and
xchg
xor
pop
movb
cmp
cmp
mov
sbbl
or
ds
dec
inc
push
inc
xchg
jle
rcrb
gs
fisubl
fisttpl
outsb
ret
mov
sub
mov
pop
cmpl
nop
test
push
pop
adc
in
ret
and
nop
mov
fstpl
mov
ljmp
mov
mov
pop
lret
stc
and
int
cs
sub
or
mov
faddl
dec
adcl
sub
repnz
fdivrs
xchg
inc
or
cmp
or
mov
push
jnp
jnp
stos
iret
int3
scas
mov
mov
xor
and
push
pop
mov
negl
lds
enter
test
lret
pop
pop
rclb
popf
mov
push
dec
sbb
push
push
iret
pop
cmpsl
fdivrl
lret
cmp
test
push
cmp
frstor
jae
or
push
jmp
xchg
frstor
xor
lea
ss
mov
into
ss
pop
addr16
sub
cli
mov
jecxz
arpl
fldt
dec
pop
cmp
fsts
ja
mov
pop
sbb
popa
in
xchg
jnp
adc
addr16
scas
jg
jb
and
scas
push
cwtl
cmp
imul
movsb
in
ds
xor
sub
mov
rol
js
shlb
xchg
mov
or
and
mov
xchg
inc
lods
cmp
pop
dec
add
ss
and
sub
jmp
cwtl
cmp
bound
push
hlt
fwait
xchg
push
or
xor
clc
pop
xchg
cmpsb
jns
jne
mov
jl
mov
loopne
mov
add
incb
cmp
inc
cs
sub
cwtl
insb
push
data16
dec
pop
adc
mov
mov
popa
rclb
xorl
std
sbb
cli
jae
int3
lods
pop
push
and
stos
inc
clc
test
xor
mov
xchg
dec
test
insb
push
shl
data16
jno
fimuls
fidivrs
pusha
data16
imul
dec
cmpsl
jmp
jbe
inc
icebp
mov
mov
mov
add
mov
add
ja
nop/reserved
jge
arpl
ret
xor
test
dec
jp
jo
ret
jno
loop
xchg
clc
push
divb
adc
emms
adc
sbb
mov
mul
pop
jne
xchg
pop
cmpl
fstl
xor
das
stc
mov
into
ljmp
ds
leave
aam
sbb
sub
and
mov
loopne
mov
add
rorb
or
xchg
inc
addr16
inc
xor
lcall
js
cmp
imul
pop
test
icebp
aad
push
fcoml
jae
out
fcmovnbe
xchg
addr16
fcmovne
aad
inc
daa
dec
lea
scas
adc
mov
inc
mov
mov
push
and
rorl
pusha
cwtl
add
and
push
mov
xchg
inc
inc
adc
xchg
mov
outsl
push
mov
xor
and
icebp
push
dec
adcb
das
enter
cld
not
imul
in
out
cmc
inc
sub
jns
mov
inc
sub
incb
repz
ds
pushf
ret
test
pushf
and
lock
mov
add
ret
test
icebp
nop
clc
push
cmp
mov
pop
ja
mov
aaa
sub
nop
in
jnp
icebp
pop
mov
ss
ret
dec
aas
ja
and
and
lahf
shll
adc
inc
idivb
movsl
subl
jle
cmpb
fstl
push
rclb
push
nop
adc
adc
insl
jge
lock
cmp
and
decb
in
shlb
mov
add
lahf
test
mov
xchg
aad
push
inc
mov
mov
jns
ljmp
mov
hlt
out
push
xchg
popf
fstpl
lret
or
lock
aas
push
gs
ljmp
push
hlt
jmp
das
leave
pushf
pop
cmp
hlt
mov
and
add
mov
add
push
pop
push
rolb
push
out
lea
dec
mov
lcall
jge
jle
jecxz
mov
xor
lea
jne
les
jae
inc
jp
jne
or
cmp
mov
movsl
push
and
rclb
sbb
jns
sbb
mov
pushf
push
shrl
testb
mov
and
ret
push
lahf
call
fs
adc
je
popf
xlat
push
xor
in
mov
testl
and
jle
sub
and
add
mov
fisttpl
pop
push
insl
lods
xor
fiadds
jbe
ss
in
mov
ret
sub
fidivs
fs
dec
call
imul
xor
es
lods
cwtl
push
mov
ret
rorl
cmpsl
pop
lret
popf
jb
xchg
push
or
and
nop
iret
mov
or
or
sub
cltd
add
jae
loop
pop
mov
fildl
or
add
add
push
nop
push
push
add
fsubs
pop
mov
int
mov
out
adc
es
shll
pusha
popf
rcll
jp
jbe
fwait
and
inc
or
push
push
ret
jo
dec
outsb
sub
fbstp
out
pop
mov
fisubs
or
push
popa
or
xchg
adc
or
aas
jnp
repnz
xchg
push
mov
call
sbb
xchg
xor
fsubp
mov
sti
pop
mov
aas
sbb
std
xor
jp
test
stos
mov
sub
or
out
lods
cmp
outsb
push
outsl
jbe
int3
push
push
std
jbe
push
mov
sub
lcall
shrb
pop
frstors
adc
subb
rcl
jae
test
sahf
mov
insl
xchg
push
imulb
and
mov
jne
rorb
xor
outsb
adc
mov
enter
ss
push
data16
cltd
pop
test
outsb
jl
lea
pop
sub
lock
mov
aam
push
sub
icebp
je
sub
shll
neg
push
imul
popa
push
sbb
subl
test
fisttpll
in
inc
add
pushf
fstl
pop
xor
mov
mov
inc
ret
in
jge
jp
xor
nop
in
xchg
pop
mov
inc
dec
lret
or
push
scas
cmp
mov
ss
fbld
daa
mov
orl
adc
or
inc
or
add
fstps
gs
scas
imul
jnp
dec
icebp
jl
out
jp
cmp
mov
test
mov
js
fsubrs
push
push
lret
scas
pop
xor
adc
xor
scas
scas
ret
jg
mov
pop
movsl
pop
or
sub
pop
dec
sbb
xchg
sti
fimuls
xchg
add
lea
pop
mov
push
mov
sub
sbb
insb
jno
jg
daa
repnz
stos
imul
mov
notl
or
scas
cmp
les
xchg
out
push
adc
imul
outsb
mov
mov
out
adc
rcll
sub
movsb
cmc
cltd
dec
negl
loope
adc
push
andl
pop
cmpsb
jo
pop
fcompl
in
mov
or
ficoml
shll
xor
xor
xchg
js
test
dec
mov
fwait
jp
push
fldl
in
aam
push
loope
sub
mov
test
inc
in
cmpl
cli
adc
in
push
popa
push
inc
mov
sub
jae
iret
stc
pop
pop
push
xor
mov
hlt
or
push
adc
testb
pushf
pop
sub
jb
adc
ret
sahf
push
icebp
dec
lods
dec
jns
mov
lock
inc
es
add
outsb
mov
inc
lret
stos
xor
scas
jns
lahf
inc
mov
mov
inc
loope
xor
movsl
sbb
push
push
fcoml
adc
mov
lret
push
icebp
mov
inc
fwait
xchg
insb
push
xlat
or
je
fildl
pushl
scas
ja
movsl
xor
jns
xchg
rcrl
adc
mov
mov
add
notl
jg
adc
and
pop
dec
fcmovb
imul
fbstp
pop
and
shl
out
dec
adc
push
fildll
mov
gs
inc
popa
xacquire
sub
cmp
dec
dec
ret
mov
push
pop
dec
cmp
fs
scas
call
adc
cwtl
inc
cmp
adc
insb
arpl
cmp
fldz
fstpl
ror
add
fcompl
inc
dec
xlat
call
icebp
ret
jne
das
nop
cmp
xor
stos
jp
sub
sub
test
mov
iret
sarb
pop
mov
repz
jle
arpl
clc
cs
xor
inc
dec
leave
push
loop
loop
aam
in
sub
or
push
fisttps
jmp
jl
jno
ret
out
xor
cmpsb
sbb
cmp
dec
add
ret
lret
ds
mov
and
cld
pop
jmp
test
fistpll
imul
popf
xor
repz
cmp
leave
lods
test
sub
jp
mov
jo
pop
xchg
rorb
push
push
lds
mov
into
addl
mov
xchg
jmp
dec
cltd
daa
les
or
mov
les
adc
mov
lret
xor
xchg
lcall
cltd
cmp
enter
sbb
sbb
jge
xor
push
es
mov
mov
mov
jne
mov
cld
and
outsb
pop
inc
mov
inc
push
xor
add
ffreep
xor
bound
dec
icebp
cmp
nop
test
and
insb
and
xchg
mov
push
loope
mov
xorb
or
xor
add
mov
cmc
cmp
sbb
pop
add
inc
popf
push
fildl
ja
or
dec
fisubrs
mov
jp
xor
mov
rcll
icebp
adc
cmpsb
hlt
lret
lcall
insb
xchg
mov
inc
mov
dec
push
push
loopne
rcr
std
dec
imul
cmc
ret
decb
sbb
or
rcr
out
add
lock
or
cmp
out
popa
jmp
aad
sbb
clc
std
fwait
sbb
xor
lods
orl
mov
aam
xchg
out
sar
sarb
sbb
mov
hlt
pop
mov
cmp
add
aad
mov
out
cli
jg
mov
sub
ret
dec
rol
fiaddl
push
repnz
jl
push
inc
or
jbe
in
mov
and
cmpsb
sub
test
out
in
cmpsl
in
lods
iret
jne
fptan
xchg
fsubs
les
xchg
adc
test
ficompl
xor
jmp
or
clc
loopne
mov
inc
out
mov
mov
aam
pop
sbb
test
repnz
xchg
dec
outsb
cli
push
push
cmp
repnz
pop
jo
jo
dec
cmpsl
mov
rcrl
in
pop
xor
inc
jb
mov
test
lret
fst
aaa
gs
sarl
mov
js
dec
pop
nop
out
fbstp
out
add
pop
leave
into
jb
fdivl
fwait
loopne
movsl
in
xadd
xor
jecxz
roll
ret
subl
sbb
icebp
sub
adcl
sub
scas
xchg
jg
mov
mov
gs
push
popa
inc
clc
ja
adc
lret
out
jo
cwtl
xlat
arpl
xor
jne
imulb
int
or
adc
fwait
dec
mov
pop
jge,pt
scas
dec
nop
add
cmp
repz
ja
jnp
sub
jge,pn
gs
ror
cmp
or
pop
xchg
xor
lcall
out
sbbb
mov
std
outsb
int
sub
icebp
lods
or
xchg
loopne
pop
inc
sbb
imul
sbb
pop
dec
pop
xor
sub
movsb
pop
mov
mov
or
push
pop
push
dec
sub
jp
jne
sahf
sahf
mov
push
repz
dec
addr16
xor
jmp
mov
push
adc
inc
cwtl
es
insb
arpl
outsb
mov
dec
sub
call
arpl
popf
mov
pop
cmp
jo
mov
jnp
out
jp
jne
and
aam
push
and
sbb
pushf
sub
pop
in
jl
push
dec
jno
js
or
cmp
fucomp
rolb
mov
lds
sub
pop
and
cmp
fcmove
sub
call
inc
dec
cmc
int
sbb
fs
mov
clc
dec
lods
cmp
popl
adc
sub
jle
fs
aas
sahf
jb
imul
mov
xchg
mov
into
or
imul
std
nopl
jo
xchg
mov
sti
fs
xor
sub
out
jns
pop
sub
push
mul
rcrb
jle
jo
leave
jle
lret
pop
add
shlb
push
and
dec
call
push
cmp
cmp
lcall
jo
sub
in
mov
inc
pop
ss
lret
lret
push
movsl
lret
inc
lock
cmpsl
pop
mov
arpl
into
cmp
popf
imul
or
cmp
aad
push
sbb
cld
inc
movsb
stos
jecxz
pop
test
sbb
cmp
xchg
repnz
dec
inc
mov
mov
pop
push
dec
add
cld
mov
les
icebp
pop
data16
push
insb
or
add
xor
enter
test
repnz
jmp
mov
mov
mulb
movsl
js
inc
mov
add
repnz
jg
into
pop
pop
dec
push
insb
pop
dec
dec
push
jb
fdivrp
outsl
fs
pop
sub
and
sub
hlt
lds
adc
inc
inc
xor
mov
loope
mov
jmpw
inc
out
in
mov
jecxz
leave
stos
pop
dec
and
sbb
test
mov
scas
jmp
iret
mov
cli
xor
addr16
add
inc
fisubrs
lahf
lret
mov
inc
int3
pushf
pop
hlt
in
je
imul
lret
fsubrl
test
stc
adc
loopne
lret
into
xor
out
dec
loopne
add
rorl
out
adc
and
test
adc
push
push
cmc
xchg
stos
decb
imul
aam
add
ret
cwtl
mov
or
pop
ss
addr16
sub
push
xchg
xor
movntq
out
inc
add
or
xchg
jmp
add
add
dec
add
aam
jp
add
xor
test
sahf
stos
lds
push
andl
ljmp
dec
mov
out
or
xorb
dec
xchg
clc
lcall
scas
or
hlt
adc
ret
in
adc
fcomp
mov
jb
jmp
push
push
call
xlat
jg
push
sbb
iret
popa
enter
mov
mov
push
inc
adc
adc
cld
xchg
cmp
sbb
fnstenv
sbb
lret
push
mov
test
pop
out
xor
jl
jp
sub
mov
mov
mov
inc
lahf
push
test
mov
jp
or
test
xlat
jb
pop
jge
xchg
sub
addr16
cmp
add
or
xor
mov
sub
and
adc
call
les
mov
jnp
repnz
xchg
push
push
out
bound
mov
int3
sub
dec
jnp
xchg
sbb
in
push
cmp
pop
jno
sub
mov
fiaddl
pop
cmc
cld
fwait
push
idiv
fldenv
in
ss
cmp
pop
jae
push
lcall
mov
and
inc
pop
lds
add
lcall
ja
jne
je
incb
jnp
jns
jecxz
or
cmp
js
popf
xchg
or
dec
push
push
shll
pop
mov
jns
repz
shlb
push
jle
sbb
je
push
idivl
mov
sbb
dec
ljmp
mov
testb
arpl
inc
pop
dec
sub
xor
mov
push
lds
sbb
sbb
push
lret
push
and
add
dec
adc
and
orb
into
or
icebp
adc
inc
adc
fimull
and
dec
out
or
jbe
cs
rclb
fidivl
sbb
fiaddl
fadds
bound
jne
ljmp
mov
jo
popa
stos
lock
or
dec
inc
hlt
sub
push
or
das
test
inc
xorb
sbb
lcall
fdivrl
or
inc
cmovl
jg
fidivrs
jae
mov
das
fwait
clc
xchg
cltd
out
adc
movsb
adc
fyl2xp1
mov
xorl
sahf
ds
shll
sub
mov
and
mov
clc
jnp
sbb
mov
add
stos
imul
stc
pushf
sbb
repnz
jmp
jae
int3
rcrl
dec
pop
sub
fisubl
enter
dec
push
loope
mov
ret
pop
or
rolb
xchg
and
nop
cli
rolb
rcrb
push
xchg
sub
std
lahf
sahf
and
mov
sub
mov
outsl
clc
repnz
pop
jecxz
xchg
pop
test
cmp
data16
mov
in
adc
xor
lea
push
ret
lds
ds
hlt
xchg
fiaddl
fnstcw
jbe
jne
movsl
nop
inc
iret
pushf
jo
push
bound
pop
jl
pop
xabort
add
and
jl
fstpt
and
cmpsl
xchg
ret
add
sub
clc
and
leave
stc
loop
nop
mov
popf
repnz
cltd
and
mov
mov
leave
mov
int
sbbl
mov
and
andl
or
rcrl
arpl
sub
outsb
ficoms
je
mov
idivl
mov
iret
cmc
sub
or
inc
js
in
dec
xchg
adc
mov
or
xchg
mov
sub
setbe
fidivrs
jb
faddl
fistps
mov
jl
and
fwait
mov
sub
pusha
movsb
aam
push
mov
imul
inc
dec
je
mov
cmpsl
mov
jl
test
repnz
imul
jo
mov
mov
sub
out
mov
add
je
fcomi
and
fdivs
mov
adc
or
shrl
into
lret
inc
test
pop
mov
rcrb
insb
adc
mov
jmp
int3
roll
xchg
stos
insl
stc
cld
arpl
or
pushf
jge
out
sti
dec
daa
jae
sbb
stos
and
inc
push
test
lea
xchg
incb
add
hlt
ss
pop
jmp
pop
and
repnz
pop
sbb
ret
jmp
or
out
jge
sub
adc
xchg
push
xchg
fldenv
xabort
les
jg
cmp
mov
pop
int3
ds
testl
or
nop
jg
jp
inc
jno
out
filds
daa
aaa
data16
xor
jne
mov
push
in
jno
mov
cld
cmp
sti
in
fmull
sub
subb
pop
mov
sahf
sub
aas
mov
lret
std
das
data16
mov
or
inc
pop
mov
pop
xchg
decb
mov
les
rcll
dec
push
mov
clc
cmp
cmp
and
jp
sub
fsubs
sub
cmpsb
add
rcrb
push
mov
bound
mov
or
test
addb
mov
decl
jns
adc
xor
jb
jno
fldt
or
loopne
pop
jno
sbb
dec
ja
leave
ljmp
mov
pinsrw
clc
jns
sub
aas
fxch
add
inc
lret
bound
dec
pop
aam
pop
jge
pusha
sbb
pop
cmp
or
repnz
cmp
lods
sahf
mov
loope
repnz
enter
mov
xchg
mov
xlat
bound
or
xchg
aam
xlat
push
fdivs
pop
mov
xor
cmc
push
add
sbb
aam
dec
adc
mov
popa
out
or
or
or
repnz
out
ss
leave
icebp
mov
mov
cmp
xor
lcall
fs
xchg
sarl
out
sbb
mov
mov
sti
jne
dec
lret
inc
stos
mov
jmp
and
adc
and
xchg
sarl
jecxz
pop
inc
enter
mov
cmp
xchg
jnp
mov
xor
sub
bound
push
dec
xor
dec
push
pushf
push
push
lock
mov
adc
dec
mov
shlb
dec
movsb
jne
cwtl
stc
psubusw
out
adc
dec
into
push
jg
mov
push
test
ret
pusha
out
push
mov
ret
inc
stos
cli
loopne,pt
inc
in
in
inc
pop
lds
repz
push
cs
clc
popf
push
or
push
es
lcall
xchg
rcrb
popl
cmp
pop
push
xchg
sbb
jl
fdivp
subl
stos
mov
cmp
aad
xchg
dec
push
clc
gs
bound
lds
adc
sbb
xchg
faddp
lahf
leave
xchg
jmp
xor
sub
adc
popa
cmp
je
arpl
sub
mov
gs
dec
out
dec
xor
jbe
adc
stos
push
out
lret
rcrb
and
and
cmpsb
andl
push
lods
jno
out
mov
test
rcrb
sub
xchg
mov
sbb
rorb
adc
fs
inc
xchg
push
clc
mov
fdiv
push
jmp
call
outsl
mov
sub
jge
insb
mov
push
adc
stos
pop
pop
sbb
mov
rcrl
int
in
xor
jb
jnp
mov
mov
dec
ljmp
lock
cmp
sbb
xchg
daa
into
xor
int
cmp
mov
rorb
add
and
mov
lods
data16
movsl
pop
outsl
push
jnp
call
dec
dec
fnstenv
enter
sub
adc
icebp
fidivl
mov
fistpll
lret
js
and
push
or
sbb
les
xor
xchg
mov
or
adc
jp
and
test
ss
fsubl
arpl
push
and
push
xchg
icebp
ljmp
xor
jl
sbb
pop
sub
push
rcrl
out
inc
ds
push
mov
xchg
aas
imul
sbb
scas
or
dec
cmp
insl
adc
add
push
push
cmpsl
loope
scas
bound
ljmp
dec
xor
xchg
test
lods
sbb
movb
xor
mov
test
fwait
orl
dec
adc
dec
jbe
sbb
insb
jnp
push
sub
mov
leave
lea
inc
fcom
sar
scas
or
add
jbe
xchg
mov
xchg
or
jg
gs
aam
adc
and
mov
xchg
sbb
mov
xchg
aas
test
xorb
lds
in
jno
negb
adc
adc
fildll
mov
fistl
shrl
or
mov
test
lahf
aaa
push
dec
mov
lret
rcrb
push
inc
es
idivl
mov
pop
dec
adc
insb
imul
xchg
pusha
clc
outsl
std
pop
shlb
pushf
jl
dec
pop
pop
ret
cwtl
mov
dec
aas
inc
add
adc
pop
push
ficompl
mov
addb
sbb
mov
or
loop
mov
pop
enter
cmc
jge
test
push
pop
mull
push
adc
call
nop
loope
push
jge
cld
push
insb
jnp
daa
pop
ret
ja
dec
mov
lcall
stos
aaa
xor
ljmp
jae
cli
push
push
sub
aaa
sbb
ret
adc
xchg
adc
fs
jae
cmp
jmp
mov
repz
enter
pusha
in
es
fmuls
mov
std
das
or
pop
pop
and
int
aad
lret
mov
mov
mov
adc
data16
push
pop
inc
jg
movsl
mov
arpl
jno
lods
jecxz
cmpsl
jg
in
mov
push
fisttpll
push
dec
stos
jnp
out
add
hlt
jns
clc
push
scas
push
jl
cmp
add
push
ljmp
dec
decl
xchg
rolb
aam
leave
cmc
and
xor
jmp
movsl
outsl
cli
fildll
loop
movb
push
movhps
repz
lock
push
sub
rcrl
mov
mov
imul
and
call
leave
insl
xor
les
ljmp
cmp
call
subl
cwtl
imul
or
cmpb
repnz
sti
loop
aam
cmp
xlat
xchg
pop
inc
lahf
or
jno
pop
inc
mov
rol
cmp
push
and
cs
pusha
mov
xchg
movsb
mov
popf
pop
nop
sbb
mov
push
pop
jo
orb
es
cmp
out
ja
loopne
es
movb
insb
push
lcall
sbb
test
and
shlb
mov
pop
insb
aam
add
stos
mov
add
mov
jnp
push
mov
mov
adc
pusha
ljmp
repnz
push
scas
push
adc
pop
inc
notb
sbb
sbbl
jl
sub
inc
fwait
mov
push
cmpsb
popa
ljmp
repnz
popf
dec
je
push
push
adc
push
sbb
in
lahf
idivb
mov
fsubr
inc
mov
pushf
outsl
adc
xchg
and
ljmp
fadds
xor
aam
jle
adc
scas
or
cli
sub
stos
sbbl
lods
jmp
ja
sbb
loopne
pop
mov
fcompl
in
pushf
fidivrl
ja
jmp
movsl
in
dec
inc
cmpsb
gs
in
mov
cmp
sub
adc
scas
and
std
ss
mov
movsb
cmovae
xchg
cli
ljmp
sub
xlat
out
pop
iret
das
xor
enter
dec
jmp
out
cmpsl
jne
fcmovu
pop
aam
into
test
push
fisttpl
jo
ja
push
jo
inc
out
xchg
js
cmp
cmp
loopne
stc
das
xchg
lods
pop
js
fbstp
push
mov
fcmovbe
fmulp
xchg
iret
sti
clc
repnz
jno
pop
lds
shrb
sub
pop
adc
jnp
sbb
jl
mov
sbb
inc
cmc
cmp
leave
mov
cmpl
cmp
sub
pop
out
push
jo
pop
xchg
jno
mov
cwtl
fs
xor
inc
sahf
out
das
es
and
push
jge
fstpl
mov
movsb
cmp
xchg
pop
pusha
xchg
dec
lea
or
fists
adcb
sub
pop
imull
mov
sarl
sub
and
fnsave
clc
or
cmp
or
ds
pop
mov
test
loopne
mov
cwtl
mov
xorl
fwait
sub
sbb
out
sub
inc
mov
jmp
inc
mov
pop
pop
mov
in
cmp
inc
orl
inc
std
movsb
popa
pushf
sub
loope
outsb
xchg
test
stc
cmp
inc
or
lcall
adc
icebp
pop
push
or
stos
adc
xor
xchg
loope
stc
inc
and
mov
loop
sarb
test
jecxz
negb
mov
xchg
xchg
xchg
sub
push
pop
inc
je
mov
out
fsubl
dec
ljmp
dec
push
pop
jbe
push
push
loope
mov
fnstcw
sbbl
js
push
or
test
fdivl
notb
cmc
stos
jl
filds
cmpsb
stc
and
cwtl
xor
mov
pusha
scas
pop
add
aam
push
jae
and
loop
data16
cwtl
cmp
push
mov
or
mov
push
and
mov
sub
out
test
cld
inc
rsqrtps
inc
jb
bts
test
rcrl
inc
and
inc
cmc
cs
or
aaa
adc
jle
add
and
xchg
or
xor
cmp
sbb
imul
bound
pavgw
fcoms
mov
mov
cmp
and
push
push
push
bound
lahf
or
xor
xor
adc
leave
test
pop
lea
adc
push
cmpsb
push
xor
inc
mov
and
test
sbb
pop
push
stc
dec
or
mov
sar
inc
or
in
dec
aam
push
xor
add
xor
add
std
imul
dec
add
push
pushf
sbb
leave
cmpsb
pop
xchg
mov
je
lods
xlat
mov
xlat
dec
lock
out
out
ja
inc
outsl
pop
fisubs
insb
sub
cmc
fldenv
stos
js
or
stos
nop
cltd
and
push
push
sti
cmp
data16
lret
ffree
lods
lcall
sub
xchg
xchg
mov
jbe
jae
pusha
mov
into
mov
jbe
pop
mov
outsb
sub
pop
loop
jle
fwait
cmpsl
pop
shr
popa
jl
push
adc
adc
aam
push
das
dec
bound
shrb
cmp
fcoms
add
jecxz
xchg
jbe
jp
loop
movl
cmp
aam
xchg
pop
sbb
sbbb
insb
popf
test
inc
test
cld
fisubs
lcall
jge
rcrl
insb
cld
jae
mov
sti
ror
sub
mov
sti
insb
mov
movsl
add
jnp
or
pushf
loope
inc
or
sub
pop
sub
adc
jbe
mov
jne
fcoms
call
inc
aad
adc
xor
mov
push
inc
sbb
xor
push
or
push
mov
sub
inc
rcrl
sub
mov
lahf
popf
or
repnz
pop
push
lds
dec
pop
pop
cmp
stos
sti
mov
add
scas
fisttps
lret
sbb
adc
xchg
xchg
sti
out
adc
cmp
mov
aam
pop
pop
fdivl
fsubrs
and
clc
mov
mov
add
inc
fadds
sbb
jge
jb
add
cmp
inc
and
scas
sub
dec
cltd
or
flds
testb
mov
mov
pop
testl
add
movsl
mov
lcall
push
jle
sub
out
imul
jbe
test
push
aas
enter
fmul
hlt
outsb
push
imul
or
fldenv
sbb
ss
cmovle
dec
ds
cld
add
in
out
mov
push
jns
ja
movsl
sbb
das
mov
fucomi
xor
outsl
mov
ret
lret
push
int
mov
lret
sbb
jp
pop
int
in
jmp
xchg
mov
icebp
mov
dec
imull
pop
inc
pop
lea
mov
notb
xchg
mov
negb
cmp
test
test
jnp
or
loop
aas
mov
and
mov
je
inc
add
test
mov
scas
sub
lods
cmp
shl
js
mov
push
clc
loope
leave
push
cmp
xor
and
push
adc
insl
inc
or
xor
cli
dec
jo
insl
mov
dec
loope
adc
adc
lret
test
jnp
xchg
or
mov
ja
push
int
push
mov
xlat
mov
sub
mov
addb
pop
dec
sub
sbb
and
call
leave
mov
mov
sbb
cld
mov
mov
sbb
adc
mov
sbb
push
popf
fidivs
push
lds
callw
jg
stos
shrl
ss
push
cmp
mov
xchg
xor
xchg
ret
dec
pop
mov
insb
stos
das
cmp
int
jecxz
shl
mov
push
and
jno
mov
cmp
in
repnz
adc
jle
test
out
add
andl
test
xor
sub
imul
fimuls
ja
and
addb
stos
xchg
cli
push
clc
stos
sbb
and
lods
jnp
inc
in
outsl
adc
jb
xchg
mov
push
mov
loope
push
fcompl
and
wbinvd
jmp
mov
aad
sub
jecxz
mov
test
and
adc
push
inc
dec
jbe
int3
xlat
pop
xor
push
mov
inc
je
stos
push
lods
inc
push
gs
push
rcrl
iret
push
enter
push
out
pop
pop
cmp
sbbb
insb
test
cli
xchg
and
push
pop
push
push
sub
xchg
push
push
xor
lods
jmp
lret
sbb
imul
sarl
jbe
xchg
dec
stos
dec
or
inc
xchg
ror
and
mov
lret
adc
push
fiadds
mov
inc
scas
into
aam
and
ss
pushf
xchg
or
icebp
or
shll
fists
xchg
js
cwtl
int3
or
cwtl
adc
stc
cs
and
push
push
popa
mov
and
push
xor
jecxz
popa
jbe
jno
mov
mov
jb
jns
dec
cmp
mov
add
ror
jge
dec
int
fdivrp
inc
xor
popa
add
in
jle
adc
call
arpl
inc
test
nop
int3
pop
fdecstp
xchg
fyl2x
cmc
mov
pop
call
mov
xchg
lret
rorl
mov
pop
dec
jo
mov
test
pop
aas
outsb
mov
test
mov
les
xorb
mov
mov
sti
and
xchg
ja
mov
test
sbb
add
cs
pop
mov
or
adc
jp
mov
fs
popf
jno
gs
shll
mov
adc
push
dec
in
fndisi(8087
call
test
jmp
jno,pt
idivl
pop
adc
mov
lcall
cmc
stc
lret
popf
mov
fcmovbe
aaa
test
push
stos
shl
push
add
jmp
fnsave
std
inc
jns
ret
add
iret
pop
mov
pop
and
ja
adc
popa
jno
pushf
inc
aaa
jp
fwait
gs
rcl
xor
xchg
dec
jecxz
test
or
push
sbb
jns
lods
cmpsl
adc
jnp
cs
sub
push
fistps
enter
imul
add
out
cmp
xor
xchg
mov
in
arpl
lds
mov
xchg
push
sarb
mov
xchg
and
jo
wrmsr
mov
or
js
incb
dec
test
adc
mov
ficomps
dec
mov
aam
stos
ss
sub
sub
movsb
cmp
mov
sub
shr
adc
inc
mov
mov
jp
jl
pop
jp
push
into
or
mov
fwait
xchg
lret
cmpsl
jg
cmp
sbb
and
push
nop
adc
add
lcall
sub
mov
adc
jns
cld
pop
scas
fs
movsb
xchg
std
sub
arpl
sub
inc
jb
push
mov
lahf
out
ret
add
jle
mov
hlt
dec
mov
mov
repz
int
or
adc
sub
aam
pop
leave
pop
ljmp
xlat
mov
jne
clc
scas
jnp
ret
sub
and
jne
gs
dec
lock
and
out
je
push
push
cmp
outsl
mov
addl
cmp
loope
jmp
cltd
cmp
scas
jae
xchg
xor
lods
rep
mov
ret
jnp
imul
jo
cli
rorb
repnz
fisttpll
add
mov
or
inc
sbb
lcall
leave
out
jle
scas
ja
xchg
or
jae
dec
ljmp
out
push
lea
clc
mov
movsb
mov
stos
mov
popf
fdivrs
jg
aas
pop
add
inc
popa
jmp
pusha
xchg
sub
lds
rcrb
test
enter
jmp
filds
mov
or
mov
movsl
out
mov
sub
xor
mov
fiadds
sbb
loopne
dec
push
pop
testl
jae
fwait
cmp
pushf
fsubl
xorps
lods
imul
jb
cld
xchg
das
push
mov
sbb
push
dec
lcall
xlat
add
cmp
shll
sbb
test
mov
xchg
cmpsb
ja
jae
shlb
lret
leave
add
mov
dec
movsl
gs
das
popf
push
inc
scas
pop
add
or
push
or
cmpsl
jb
pop
push
loop
xor
aam
push
nop
ja
dec
rcll
and
mov
icebp
mov
lahf
dec
lahf
and
mov
adcl
test
jecxz
mov
lret
mov
jae
imul
mov
andl
pop
push
xor
subl
daa
mov
sub
dec
push
adc
dec
jg
sub
lea
in
mov
adc
aam
enter
dec
xor
in
cmp
push
jmp
jmp
push
and
arpl
popa
inc
das
cli
popa
push
dec
mov
ljmp
or
inc
push
aad
mov
pop
test
mov
pop
xchg
xchg
xor
inc
js
and
cmp
cwtl
lds
divb
sahf
lock
jecxz
push
lods
fsub
cmp
lcall
pushf
cwtl
in
imul
pop
fildl
adcb
or
pop
push
sar
pop
arpl
or
scas
arpl
repnz
popf
lahf
pop
ljmp
ret
mov
fcomip
repnz
xchg
inc
int3
or
aad
adc
adcb
mov
lcall
mov
cld
and
icebp
rcrb
data16
inc
or
aam
sbb
out
or
cltd
and
sbb
sbb
mov
jge
xchg
and
mov
arpl
cmp
stos
mov
mov
js
imul
mov
imul
test
and
jmp
mov
xlat
fidivrs
sbb
lods
mov
int
adc
test
cli
inc
out
add
ljmp
push
insl
push
pop
sub
pop
shlb
add
cwtl
jbe
adc
imul
cmp
xchg
cmpsl
push
dec
push
loopne
shll
cli
test
clc
stos
mov
add
in
jae
mov
lret
rolb
pop
push
xor
inc
or
xor
pop
or
popa
cltd
icebp
jl
cmp
jae
add
jnp
mov
xor
adc
mov
test
and
js
jle
test
std
cwtl
ljmp
dec
lret
ljmp
push
in
inc
push
push
shlb
push
shll
xchg
mov
mov
repnz
out
jge
lods
mov
add
sbb
push
pop
test
out
xor
push
inc
leave
mov
pop
sub
insb
mov
mov
sbb
scas
push
fisubrl
or
in
fcompl
popa
repz
pop
popa
testl
popl
inc
mov
push
pop
adc
aam
outsl
sbb
xchg
arpl
or
shll
add
sbb
das
call
add
dec
lods
adc
inc
test
dec
xchg
and
dec
cmpsl
fldenv
flds
jl
repnz
dec
repz
aaa
mov
lahf
addb
xchg
push
bound
outsb
adc
arpl
and
xor
push
push
and
mov
mov
in
pop
inc
mov
test
jmp
in
aas
jmp
lock
push
jmp
movsl
cmp
add
xchg
inc
test
out
call
jnp
mov
adc
xor
cltd
int3
add
mov
xchg
pop
inc
js
les
int3
cmp
mov
aam
push
dec
icebp
loopne
push
dec
cmpl
lret
sub
mov
inc
xorb
push
test
mov
push
in
les
cmpsb
xchg
out
inc
or
sub
cmp
hlt
xchg
aad
aaa
jne
or
insb
enter
or
xchg
cmp
outsl
sahf
jecxz
ja
push
bound
sarl
jns
movsl
les
aam
cmpsl
and
loopne
nop
xchg
cltd
sbb
in
or
mov
lock
dec
ljmp
fldt
in
push
popa
repz
fiaddl
xor
dec
ja
hlt
push
in
or
mov
dec
fcoml
mov
mov
xorl
push
sub
pusha
mov
xor
popa
xchg
xor
stos
xorl
cmpsl
xchg
jne
dec
insl
pop
ret
adc
add
jns
stos
pop
repz
mov
xor
aad
adc
insl
popf
mov
xchg
aas
lea
lfs
call
inc
xchg
aam
jo
bound
mov
lret
fimull
ss
xchg
mov
mov
repz
lahf
push
imul
jo
jge
out
and
mov
push
bound
repnz
insl
bound
hlt
clc
push
ret
lea
sub
mov
aad
outsl
jle
ss
imul
dec
fcos
ds
adc
aas
adc
xchg
pop
sbb
cwtl
jnp
add
nop
xchg
xchg
std
mov
xchg
loope
mov
mov
in
popa
popa
cmp
enter
xchg
pop
aad
mov
mov
inc
mov
sub
rclb
jns
push
fucomi
add
out
pop
cmp
insb
ja
mov
push
jl
add
xor
xor
xchg
hlt
popf
adc
mov
test
dec
into
cmp
inc
dec
xchg
pop
mov
sub
out
pop
out
test
sub
inc
jl
shl
jnp
lretw
iret
xor
loope
bound
imul
in
inc
xor
movsb
sbb
xchg
xor
scas
andl
sbb
xor
mov
leave
cmp
arpl
xchg
mov
sub
jae
push
mulb
inc
dec
inc
gs
and
ds
and
in
imul
jecxz
and
pop
outsb
aad
jle
out
jmp
rclb
mov
insb
add
xor
jl,pn
lahf
xchg
scas
mov
cmp
and
ja
inc
popf
push
push
xor
pop
repnz
push
notl
std
mov
pushf
test
jecxz
outsl
pusha
jg
in
jbe
inc
test
xlat
cmp
bound
adc
inc
jg
aad
fs
mov
sbb
jp
mov
negl
lret
xchg
mov
stos
ret
cwtl
fdivrs
fdiv
add
fsubr
dec
lret
stos
push
jne
jbe
adc
jp
incb
pop
int3
xlat
cmp
mov
sbb
jecxz
in
jae
push
or
aas
cmp
cli
fcmovne
aaa
lret
stos
and
loope
mov
ret
ret
jo
add
cmp
lods
and
movsl
hlt
mov
or
lock
movsl
scas
cmp
addr16
imul
add
out
mov
fists
fs
idivl
and
adc
aaa
push
and
mov
into
aad
or
pop
fs
sahf
adc
pop
mov
sub
imul
adc
scas
scas
aad
xor
pop
jb
xlat
mov
ljmp
adc
mov
adc
aad
xor
dec
int3
out
rclb
subb
or
imul
or
hlt
cmp
xor
xchg
mov
push
sbb
jmp
jg
xor
cmp
aam
outsb
stos
mov
idiv
jmp
insb
cld
xchg
ljmp
rol
pop
loopne
and
push
sub
imul
add
nop
test
mov
jp
jmp
scas
adc
in
xchg
pop
shl
dec
lods
out
shrl
stc
test
int
adc
adc
fistl
pop
test
pop
test
xor
bound
add
pop
pop
pushf
jb
mov
rsm
movsb
or
jbe
jp
push
aaa
jno
in
mov
int3
push
dec
push
rcl
adc
xchg
ficomps
xchg
test
add
dec
fistpll
cmp
shll
dec
cmp
cmp
pop
icebp
nop
jmp
mov
sbb
xchg
jmp
int
xchg
cmp
mov
repnz
adc
outsl
loope
pop
push
xor
fstps
push
leave
aaa
std
subl
inc
jp
popa
mov
popa
mov
xchg
call
stc
pusha
shrd
sbb
in
int3
leave
mov
lcall
mov
pop
mov
and
movsb
shlb
push
push
rep
adcl
mov
test
pop
jmp
addb
mov
adc
sub
out
clc
inc
mov
fistpll
shlb
cmpb
inc
jmp
pop
add
mov
and
jl,pn
cmovne
xchg
mov
subb
add
mov
cmpsl
adc
cmp
cmpsb
test
in
or
pop
or
inc
pop
and
push
lret
jle
test
or
mov
jbe
inc
orl
cmc
dec
or
cmp
fcomps
and
pop
out
int3
mov
dec
out
ds
mov
rcl
lret
and
rorb
mov
inc
push
and
inc
sti
lahf
mov
inc
daa
adc
xchg
mov
pop
jecxz,pn
test
rol
mov
inc
push
rorb
mov
testl
shll
les
dec
add
cs
fwait
rcll
dec
leave
and
outsb
imul
lods
pop
push
xor
cmp
lds
mov
cwtl
test
out
adcb
dec
cmp
mov
shl
filds
lea
adc
lret
add
dec
adc
xrelease
das
gs
push
push
dec
lods
push
js
or
dec
cs
fdivl
xor
outsb
dec
inc
cmpsb
or
mov
lods
pop
mov
addr16
addl
pop
or
mov
int3
or
xor
jp
adc
arpl
popa
call
add
test
aaa
mov
inc
mov
inc
leave
inc
jl
push
jp
int3
xor
adcl
xchg
push
lods
jae
cli
dec
adc
jmp
into
js
loopne
aaa
push
pop
das
push
mov
or
dec
cmpsb
enter
cmpsb
movsl
adc
addr16
mov
or
inc
mov
cltd
scas
enter
test
outsl
int
fstl
inc
popa
push
inc
xchg
push
mov
pop
popa
xchg
add
insl
lahf
inc
cmp
nop
inc
out
lret
aas
push
pop
mov
ret
dec
dec
sbbb
mov
jmp
pop
out
ljmp
cld
out
sub
jl
lahf
mov
in
push
sub
dec
and
xor
add
stos
enter
test
ss
stc
clc
pop
mov
cld
dec
push
cli
mov
or
add
shrb
mov
cs
dec
mov
mov
lcall
popa
mov
push
xorl
lret
dec
hlt
fldt
pop
push
sti
or
testl
dec
inc
repnz
lahf
mov
ds
or
insb
jp
stc
jae
mov
xchg
xchg
sarb
jl
fiaddl
adc
jns
lock
pop
lods
mov
xchg
shll
hlt
insb
nop
mov
lods
sbb
in
aad
inc
xor
sahf
ss
ja
sub
mov
es
dec
or
insb
flds
or
mov
and
mov
mov
dec
fstpl
addl
xchg
in
sbb
cmpsb
sbb
cmp
jl
xlat
and
mov
lods
dec
rclb
mov
mov
inc
add
in
fldenv
push
pop
into
cmp
jge
add
pop
lds
xor
add
sbb
cmpsb
xchg
lods
pusha
mov
pushf
adc
xorb
hlt
iret
push
pop
sub
enter
push
xor
test
int
mov
ret
mov
addr16
push
mov
inc
aad
cmc
cltd
cmp
dec
adc
scas
negb
inc
add
mov
inc
jae
add
popf
lahf
dec
mov
sahf
mov
and
in
inc
sub
inc
fdivr
jo
adc
pop
pop
sbb
notl
ds
lods
jne
mov
xor
mov
mov
xor
imul
scas
mov
mov
or
sbb
clc
sub
cmpsb
mov
pushf
fistpl
push
cld
push
xlat
hlt
outsl
movsb
mov
andb
je
addl
adc
js
daa
clc
rcll
or
int3
pushf
shll
in
pop
mov
popa
push
mov
push
test
out
xchg
aaa
aad
xor
dec
movsb
leave
sti
adc
mov
jp
out
add
adc
cmp
test
rclb
cmp
sub
xor
leave
mov
pop
and
rcr
mov
dec
movsl
hlt
cli
lcall
inc
mov
sub
sub
ret
inc
mov
popa
lods
fadd
push
xchg
cli
enter
lods
leave
pusha
inc
inc
cmpsl
mov
jnp
adc
je
pop
xchg
nop
push
jo
rcrl
dec
or
popa
and
pop
inc
les
push
sub
fiaddl
or
jp
cmp
xchg
inc
lret
lock
les
lods
popf
jae
pop
lahf
fisubs
jnp
xor
lods
and
sarb
dec
cmp
mov
or
sbb
or
mov
inc
push
or
ret
jnp
xor
mov
mov
inc
xchg
push
lea
cmpsw
ljmp
inc
ja
rcr
pop
xchg
icebp
leave
mov
mov
or
pop
sub
mov
xchg
in
inc
repnz
adc
mov
mov
ficompl
inc
inc
mov
adc
shlb
adc
cld
fldenv
mov
and
jl
popf
popf
add
ret
or
fdivs
inc
xchg
sbb
add
sbb
mov
inc
stc
pusha
ja
rcpps
hlt
mov
leave
pop
rorb
je
dec
inc
loop
stc
jb
fstpl
sub
xor
adc
loop
fs
in
fsubrp
push
out
sbb
cs
xor
jp
xchg
mov
push
cmp
push
lahf
add
insb
xlat
dec
aaa
mov
mov
push
mov
or
cmp
nop
xchg
gs
mov
cld
and
xchg
popa
aad
mov
mov
inc
gs
and
fadd
push
pop
loope
insl
sub
cwtl
fwait
movsb
mulb
mov
test
add
dec
jl
daa
frstor
in
out
out
stc
xchg
pop
xchg
jle
inc
lret
add
in
xchg
mov
inc
imul
mov
ss
add
jge
adc
cld
faddp
and
adc
inc
sbb
xor
stc
insb
pop
or
push
jl
lret
imul
imul
jmp
aaa
cld
movsb
test
arpl
xor
or
ss
adc
dec
adcl
cmp
push
and
ljmp
mov
mov
orl
subl
cwtl
in
sbb
mov
imul
in
lahf
js
xchg
mov
inc
mov
jge
xchg
cltd
aas
cmp
cld
lods
cmpsb
fisttpll
ss
xlat
push
inc
enter
rcrl
aam
sub
xor
xlat
push
test
addr16
push
ret
int
xlat
inc
out
cs
cmp
dec
outsb
lds
fs
xchg
mov
sbb
sbb
pop
jge
rorb
jecxz
or
das
add
jle
outsl
xchg
xchg
mov
cmp
jne
pop
pop
xchg
nop
add
loopne
cmp
cs
mov
dec
cmpsl
cmp
enter
xor
cmp
mov
in
addr16
jmp
push
orb
imul
int3
es
stc
pop
cmp
push
out
aad
loopne
add
pop
push
jne
fdivp
movsb
mov
das
xchg
cmp
sbb
or
repnz
xchg
or
mov
arpl
in
push
dec
scas
fisubrl
daa
cmc
je
lods
jno
jns
testb
loope
push
pushf
mov
mov
icebp
insb
in
rcr
js
adc
mov
xorl
nop
push
popa
xchg
ja
leave
std
int3
jns
jo
xchg
in
jle
dec
aam
push
cld
sbb
loope
in
inc
into
fimull
and
out
imul
loop
inc
mov
pop
jp
dec
mov
mov
or
repz
mov
cmpsb
pop
fidivrs
mov
xchg
jae
out
lock
jg
add
rolb
push
adc
xchg
repnz
mov
jecxz
add
jo
or
leave
leave
loop
xor
jl
adc
les
push
in
hlt
push
pop
add
dec
fstpt
xchg
adc
sub
lock
mov
test
jecxz
mov
dec
dec
in
push
pop
xor
push
in
add
mov
mov
dec
cmp
int
cmp
sub
push
fsts
push
stc
test
fnstenv
in
in
pop
dec
mov
sti
sbb
sti
repz
push
repz
cmc
add
call
sub
stos
cmp
jnp
aam
aad
sbb
rorb
xchg
imul
jae
add
fimull
mov
js
or
call
arpl
mov
test
mov
imul
test
fsubs
jge
dec
mov
sub
mov
dec
js
jnp
movsl
clc
xchg
pushf
mov
loope
inc
movsl
xor
repnz
ljmp
xlat
int3
ss
pop
inc
fisttpll
xchg
mov
fstpt
xchg
jb
inc
sub
adc
sbb
mov
fisttpll
stc
inc
ja
sub
nop
cmpsl
mov
mul
pop
data16
addl
or
dec
mov
out
add
scas
sbb
data16
arpl
and
add
add
ret
imul
or
fstpt
adc
inc
push
jno
jnp
aas
jg
mov
and
mov
inc
xchg
mov
mov
mov
es
xchg
arpl
fs
dec
mov
push
lea
push
stc
mov
lcall
iret
mov
inc
dec
lock
sahf
push
rorb
sarb
pop
mov
mov
mov
icebp
xor
mov
inc
lds
jmp
adcb
inc
adc
sbb
xor
xlat
add
jl
repnz
xchg
sbb
pushf
mov
ret
cmp
mov
sub
popa
out
cmpb
pop
xchg
dec
insl
add
int3
data16
pop
lods
enter
add
mov
push
pop
leave
das
push
shlb
push
daa
filds
rcrl
lock
dec
mov
cmove
jl
jb
outsb
sahf
std
fsubs
into
arpl
and
fcompl
cmp
pop
sbb
cmp
lahf
mov
pushf
js
adc
xor
pop
in
setnp
pminsw
mov
adc
imul
divb
iret
adc
inc
lahf
or
ljmp
lret
fs
loopne
jnp
lret
xchg
inc
cmp
jo
push
fbstp
es
cmc
or
push
xlat
push
add
jnp
dec
fwait
adc
pop
jecxz
loope
and
fs
cmp
mov
ja
out
bound
js
pop
pop
fsubp
fidivl
clc
stc
jmp
pop
call
outsl
mov
aam
dec
pop
xchg
mov
push
shlb
mov
jge
sbb
in
xor
jmp
out
cltd
mov
das
in
mov
or
lcall
mov
pushf
jmp
out
jae
addr16
pop
cld
clc
or
jb
or
in
sub
sub
cmp
cmp
sahf
push
and
test
pop
je
popa
pushf
sub
sbb
stos
test
cmp
lea
jl
add
cmp
and
cmpsl
sbb
ret
clc
jae
cmp
stos
pop
sahf
adc
cmp
mov
jle
out
adc
mov
jb
dec
push
or
lods
push
mov
xor
jle
mov
mov
adc
out
cwtl
mov
iret
xchg
xchg
adc
or
jb
les
xchg
xor
cli
mov
std
mov
jmp
dec
jb
jo
sbb
repnz
arpl
ud0
pushf
dec
mov
ret
je
call
fbstp
inc
insb
data16
int3
mov
testl
cmpsl
mov
xchg
cmp
cmpsb
fwait
inc
notb
lds
repnz
iret
and
dec
shrb
sbb
sbb
fwait
xor
mov
jbe
les
jnp
out
in
push
xchg
inc
push
es
mov
imul
xchg
jae
dec
scas
xchg
sbb
ljmp
popa
cmpsb
pop
mov
ficompl
mov
push
insb
adc
sar
cld
pushw
test
xchg
cmpsb
ret
test
cmpsb
popa
push
fst
setle
cmp
cltd
insl
in
mov
in
int
imul
mov
sarb
sub
call
sbb
pop
add
lods
test
mov
and
jp
sarl
leave
push
iret
xchg
xchg
sbb
or
iret
lahf
fdivrl
mov
add
push
sbb
dec
cmpl
push
lock
popl
cmpsb
mov
leave
push
inc
dec
pop
insl
add
mov
rorl
push
pop
jo
pusha
push
dec
enter
iret
cs
stos
pop
cmpsb
out
sbb
scas
mov
jle
mov
in
or
test
lea
cld
pop
call
xchg
loope
dec
and
enter
fiaddl
roll
add
inc
mov
mov
loopne
pop
leave
arpl
test
xchg
stos
rol
inc
xor
das
push
scas
mov
and
mov
or
mov
call
mov
daa
inc
out
sahf
xor
imull
pop
jp
outsl
lret
inc
into
dec
insb
aad
dec
js
pop
cs
mov
stos
mov
pop
stos
inc
aaa
pop
or
lds
out
call
pop
mov
loope
jle
rcrb
negb
cli
lods
std
cmpb
ret
sub
jae
jne
faddp
pop
stc
mov
popf
filds
cmp
mov
cmp
sub
leave
std
inc
xchg
inc
movsb
rolb
xlat
leave
add
push
stc
ss
pushf
scas
mov
push
pushf
xor
test
scas
outsb
sbb
mov
test
add
adc
inc
out
inc
decl
jbe
or
loope
pushf
adc
adc
pop
fcmovne
sbb
pop
inc
ja
ljmp
lods
pop
xor
xchg
mov
add
xlat
insb
decl
cli
mov
mov
push
xchg
mov
adc
jmp
pop
and
je
and
push
dec
add
lods
sbbl
incl
fwait
add
pop
xchg
jge
xorb
mov
jle
outsl
add
frstor
dec
bound
sub
xchg
pop
rcr
cs
dec
push
js
inc
sbb
or
scas
push
scas
add
loop
out
pop
out
xchg
add
lea
out
lods
jae
imull
faddl
or
mov
std
inc
call
stc
or
lret
not
add
aas
or
js
filds
and
outsl
inc
xchg
or
inc
inc
bound
scas
jb
repnz
adc
cli
jecxz
inc
das
mov
cmp
push
xchg
dec
rol
dec
push
hlt
sbb
xor
loop
inc
cmpsb
test
leave
sbb
out
adc
push
xchg
pusha
sub
add
les
mov
sti
mov
lcall
xor
mov
jno
jl
test
sbb
sub
xor
addr16
test
sub
pop
mov
sub
mov
dec
xchg
test
mov
push
push
push
addr16
push
mov
cmpsb
sbb
aad
push
mov
cmp
shlb
stos
mov
push
push
arpl
daa
aas
adc
aad
dec
dec
xor
pop
shrl
or
dec
jmp
in
or
mov
sub
mov
cwtl
movl
adc
inc
cld
push
add
sub
fwait
jno
mov
aam
jo
stos
pop
mov
mulb
shlb
sti
inc
nop
lahf
push
jp
addr16
aaa
jg
pop
jae
sbb
ljmp
lods
pop
dec
outsb
and
sbb
popf
insl
dec
jb,pt
mov
pop
les
mov
and
call
jae
lods
xor
mov
enter
mov
sub
pop
jns
orl
adc
sahf
stos
rcl
add
cmpsl
testb
jle
mov
sbb
or
dec
lea
fs
mov
and
testl
mov
and
clc
bound
cs
jne
inc
test
cs
out
push
mov
mov
sahf
adc
push
sub
stos
add
sub
loop
cmp
xchg
pop
pop
add
jnp
lds
jnp
mov
mov
mov
dec
sahf
jle
out
lahf
daa
push
inc
data16
repnz
sub
sti
pop
xchg
inc
lods
push
in
sub
cli
mov
push
xor
repnz
adc
inc
push
push
int3
adc
inc
scas
mov
fidivl
inc
sub
xor
cmp
fdivrs
sub
jp
add
mov
imul
shll
adc
xor
mov
pop
mov
add
inc
xor
outsl
nop
fucomi
cwtl
in
or
ja
dec
out
mov
aam
dec
bsr
popf
cmp
jle
cltd
cmp
mov
sbb
lds
stc
inc
mov
adc
xchg
mov
push
push
dec
stc
push
nop
enter
mov
repz
push
das
andb
cltd
dec
and
mov
adc
fnstsw
rcl
mov
pushf
aaa
push
arpl
xchg
pop
xchg
imul
sarb
jmp
inc
xor
cmp
push
imul
mov
mov
mov
pop
and
out
cs
or
ljmp
movsb
fistps
gs
inc
out
or
popa
jle
cwtl
mov
bound
pop
jb
push
jb
std
mov
js
icebp
mov
pusha
lods
sbbb
push
mov
pop
cmpsb
neg
mov
mov
out
adc
push
mov
test
inc
roll
sub
sbb
loop
outsl
data16
mov
je
push
dec
jne
xor
outsb
out
das
loop
lock
add
jno
dec
pusha
jecxz
add
jo
pusha
popf
xchg
push
or
dec
mov
cmc
in
push
lret
movl
xchg
push
pop
ret
mov
sarl
je
mov
aad
inc
arpl
popa
imul
test
iret
pop
push
movsb
xor
push
stos
rorl
loopne
push
cwtl
loope
cmc
pop
loop
xchg
dec
lods
insl
lea
test
lahf
push
push
push
dec
push
mov
pop
popl
std
int
cltd
sub
bound
xchg
insb
and
fildl
xor
adc
in
lahf
or
ja
scas
cltd
pop
in
cmp
mov
outsl
nop
lahf
xor
test
jae
test
fwait
ds
cli
jbe
adc
push
pop
cmp
and
xchg
repz
xlat
xchg
in
js
mov
jae
je
mov
xor
jecxz
fcoml
cmpsl
dec
mov
adc
fcmovne
bound
mov
inc
dec
mov
adc
xchg
lret
enter
push
movsb
scas
std
pop
lods
xor
mov
pop
scas
xlat
sub
adc
xchg
mov
add
fcomps
mov
jne
fiadds
jmp
out
jbe
sbb
adc
lret
xor
add
cmpsl
adc
or
dec
push
xchg
cmp
pop
add
imul
addr16
test
sar
adc
inc
out
popf
loope
imul
xlat
pop
notl
and
fwait
ret
les
fs
cmpsl
in
call
clc
sub
pop
add
xchg
lahf
pop
or
ljmp
shr
sarl
or
adc
test
add
and
es
cmc
aaa
sub
ret
insl
pop
push
inc
push
sbb
mov
jmp
mulb
mov
cmp
push
push
pop
gs
xor
out
lods
outsb
in
fadds
inc
push
scas
aas
lods
xor
and
ljmp
mov
mov
mov
sbb
mov
cli
popf
or
xor
push
fbstp
lss
sbb
gs
and
movl
push
mov
bound
jecxz
jecxz
imul
pop
add
push
testl
clc
in
inc
cmp
stos
scas
std
incl
js
pusha
jnp
add
out
and
pop
pop
ja
ss
out
dec
sub
scas
imul
xchg
sub
xchg
imul
int
sub
lock
pop
adc
into
mov
fucomp
xlat
pop
sarb
fiaddl
mov
roll
sub
inc
adc
or
inc
fwait
mov
mov
mov
out
xor
int
add
push
adc
xor
fprem1
cmp
pusha
jecxz
fwait
cmp
xor
xchg
mov
xchg
jmp
jecxz
push
mov
mov
fildl
fdivrl
adc
and
pop
lret
iret
aam
loop
test
add
in
popa
xchg
dec
out
aam
cmp
movsb
imul
mov
stos
push
or
aaa
es
lock
dec
jmp
out
and
pop
sub
into
addr16
xchg
fiadds
lds
adc
mov
cmp
sub
js
or
mov
lret
testl
fwait
rorl
add
xchg
push
or
mov
dec
push
mov
pop
std
in
jle
jo
push
xchg
movsl
popf
inc
lock
cmp
fmull
lods
outsl
out
std
repnz
in
aam
push
or
adc
mov
in
push
nop
jno
adc
fwait
and
pop
and
and
xchg
cmp
pop
fs
shlb
por
push
fadds
xchg
dec
jnp
push
inc
push
shrl
mov
mov
push
lds
test
jo
mov
mov
mov
inc
or
add
mov
xorl
cli
ds
push
jmp
aad
cmc
fs
pop
sbb
mov
es
fistps
xlat
adcl
rorb
mov
sub
cmp
sbb
dec
jbe
testb
out
aas
nop
pop
das
push
leave
push
orl
lret
in
sub
dec
bnd
lods
push
bound
out
mov
jno
mov
ja
mov
arpl
or
xchg
scas
orl
or
sahf
stos
jo
stos
sbb
movsb
and
xchg
add
pop
jb
inc
xor
adc
lahf
cltd
push
clc
lahf
les
pop
sbbb
jl
or
xor
sub
rorl
or
sub
jmp
shlb
inc
sbb
mov
testb
int3
rcrl
xchg
lret
lret
mov
mov
mov
push
test
jg
aam
push
push
out
aam
cmpsb
out
sbb
lcall
test
add
test
addl
sbb
sub
mov
popa
dec
push
es
add
sub
lcall
push
int
dec
dec
and
out
cmpsb
rcll
daa
mov
in
jecxz
jno,pn
mov
out
xor
call
sub
push
fcompl
cmp
pop
pop
ds
test
ret
fimuls
inc
arpl
sbb
inc
inc
popf
jmp
push
and
push
cmpsl
lea
outsb
mov
or
loope
pusha
sbb
loopne
ss
mov
xor
aas
add
pop
lods
ret
test
ds
push
loop
add
cli
xchg
ja
insl
xchg
ret
nop
xchg
dec
inc
adc
scas
dec
add
pop
or
ds
mov
adc
cmp
xchg
lcall
shr
inc
jno
sub
dec
xor
clc
adc
test
fcomip
jl
mov
imulb
mov
mov
les
push
xchg
movl
roll
call
push
cmp
jo
leave
call
xor
addb
loope
dec
mov
fnstcw
add
and
testl
mov
cmove
fstpl
mov
inc
mov
adc
xchg
in
js
dec
lds
jno
pop
pop
mov
rcl
sub
jbe
into
jnp
jl
dec
sti
and
xchg
gs
inc
movsl
xchg
into
xor
imul
xor
push
mov
addr16
daa
mov
mov
sti
push
push
fisttpll
mov
mov
clc
mov
loop
mov
xor
enter
mov
mov
push
sahf
shlb
or
xorl
and
xchg
or
aaa
lcall
add
stos
enter
inc
sbb
fchs
iret
mov
out
or
pop
and
add
adc
data16
sbb
push
push
or
outsb
sub
in
xchg
or
fwait
mov
xor
jmp
pop
mov
pop
mov
dec
daa
fwait
or
inc
scas
lahf
sub
pusha
sbb
mov
stc
pushl
sub
shr
clc
clc
ss
fisubl
jae
or
sbb
lods
jb
or
mov
mov
add
lods
xchg
lods
jns
push
out
cmp
sbb
xchg
pop
mov
mov
mov
xchg
jge
mov
mov
mov
push
clc
add
arpl
sub
push
xlat
mov
sbb
pusha
push
icebp
mov
insl
aam
jne
fucomip
jb
xor
cmp
adc
jbe
cmpsl
sub
and
dec
pushf
lret
into
lods
mov
add
daa
lods
out
mov
push
push
popl
mull
sbb
clc
mov
out
std
movsl
pop
add
or
push
loop
data16
add
adc
mov
jb
ja
enter
mov
loop
lods
dec
mov
aad
out
xchg
lock
hlt
push
in
movhps
test
mov
fldcw
in
int
dec
inc
es
dec
mov
and
subb
je
cmp
arpl
dec
mov
testb
dec
bnd
sbb
pop
mov
sti
dec
test
lods
sbb
out
sub
jne
pusha
insl
and
js
ss
push
je
gs
icebp
in
push
mov
out
in
add
out
into
movb
iret
mov
inc
mov
adc
mov
popa
fwait
lods
movsl
sub
push
aaa
gs
mov
out
test
les
mov
mov
or
xorb
add
dec
ss
and
fstps
jb
outsl
je
and
inc
push
push
test
xchg
imul
inc
add
sbbl
repz
mov
xchg
jno
shlb
dec
mov
std
mov
pop
dec
lds
arpl
cmc
out
jb
cmc
xor
in
add
cwtl
inc
lods
mov
scas
mov
dec
lods
rclb
dec
and
inc
shl
insb
add
test
aas
dec
jmp
imul
jle
stc
mov
repnz
or
xor
rclb
loop
mov
adc
dec
into
cmpsb
mov
and
aaa
cld
mul
jo
jno
cmpsl
push
call
jecxz
xor
mov
xor
ja
shl
mov
cmp
ror
mov
loopne
mov
je
dec
ret
je
dec
sar
or
icebp
mov
into
loope
push
or
std
sub
pushf
mov
mov
sub
incl
fs
into
jb
lret
push
ja
in
stc
jmp
call
add
movsb
and
inc
clc
rclb
dec
sub
or
insb
jle
test
das
jns
test
sti
and
sahf
leave
push
mov
addr16
mov
mov
or
inc
or
jl
xchg
cmc
test
fcompl
data16
mov
add
imul
outsl
pop
push
out
inc
cmpsl
lret
mov
dec
jne
int
in
xor
sbb
jnp,pt
in
arpl
aad
jl
push
cmp
enter
mov
es
xchg
jg
out
std
pop
pop
or
das
xchg
icebp
outsb
mov
icebp
sbb
jecxz
mov
push
cmpsl
neg
xor
arpl
lahf
cmp
ja
xchg
pop
xchg
scas
outsb
out
mov
push
pop
push
loop
and
sti
bound
jmp
or
xor
and
mov
movsb
push
adc
fstl
push
rcr
add
jg
hlt
jb
clc
loope
adc
cld
cmc
or
push
lock
shrb
imul
in
push
popa
push
sbb
clc
jno
and
sbbb
inc
jbe
movsl
mov
imul
lea
sub
test
push
in
sbb
mov
adc
mov
in
and
jnp
inc
cmpsl
lods
repz
ds
xor
mov
push
out
xchg
imul
cwtl
jg
xor
dec
jmp
lret
roll
pop
or
mov
add
push
and
jo
lock
inc
les
mov
inc
cmpsb
ljmp
push
and
xchg
fdivrl
sub
sbb
or
push
adc
bound
xor
jmp
ja
addr16
dec
cmpsl
push
into
xchg
ja
pop
sub
mov
or
push
fs
sub
cs
cmpsl
jecxz
dec
pop
xor
icebp
lea
push
ss
loope
push
jne,pn
jmp
xchg
ss
lock
and
push
add
in
xchg
test
js
and
inc
inc
push
sti
iret
movsl
test
add
inc
cs
jp
lret
test
ds
adc
xchg
xor
ror
add
hlt
in
jg
ds
dec
dec
popf
mov
add
mov
outsb
inc
stc
cmpsb
repz
bnd
cmp
xchg
sub
stc
lods
cmpsb
rcrb
test
push
dec
das
das
mov
out
mov
adc
loope
inc
lods
sbb
add
push
mov
in
add
mov
loope
adc
mov
pushf
idivb
adcb
xor
sbb
aam
xchg
lods
les
data16
ja
cmp
or
loopne
pop
adc
jb
or
fidivrl
dec
je
loopne
ret
inc
addl
fidivl
and
test
sub
in
fistps
or
and
add
pop
sub
addb
es
in
xor
jecxz
push
cmpsl
dec
fdivrs
fsubrs
out
lods
cmp
outsb
push
xorl
sbb
add
out
jge
movsl
or
mov
push
out
idivl
test
fldl
xchg
mov
imul
add
test
add
adc
inc
sub
inc
mov
and
push
cmpl
mov
pop
mov
mov
push
dec
lock
or
in
sbb
scas
aaa
mov
mov
or
inc
popa
cmp
jno
sub
js
inc
mov
add
jns
in
addr16
scas
mov
adc
aas
jge
out
divl
xchg
mov
mov
push
fdivrs
dec
lea
xchg
add
cmc
mov
dec
decl
stc
or
icebp
push
or
add
fistps
sbb
insb
call
clc
std
sub
inc
aam
inc
xor
es
movsb
mov
jmp
push
and
xchg
testb
icebp
ja
int3
or
and
call
pop
out
jnp
push
jae
imull
jns
cwtl
jp
arpl
sub
outsl
fcompl
lahf
or
cmpsl
mov
xor
ret
add
inc
outsl
cs
outsb
sbb
add
and
rcr
nop
scas
jle
cmpsl
pop
mov
add
xchg
icebp
aad
into
mov
add
fmuls
mov
dec
add
daa
cwtl
jns
das
es
cmpsb
popa
imull
fs
push
out
out
cli
jmp
nop
imul
pop
out
test
or
gs
xlat
mov
mov
pop
mov
sub
add
fists
lret
push
or
mov
loop
scas
mov
mov
out
movb
mov
adc
xor
mov
hlt
out
rol
sub
mov
cmc
stos
mov
andb
fisubl
test
es
movsb
inc
das
sub
add
xchg
push
dec
mov
pop
aaa
inc
and
ja
cwtl
dec
or
jnp
shl
mov
dec
dec
test
lock
xchg
pop
pop
and
push
test
rol
inc
push
push
daa
adc
testb
lods
sbb
mov
rorl
aaa
cmp
xchg
jb
mov
pop
int
movsl
in
and
add
rcrb
xchg
je
notb
or
jmp
mov
add
out
dec
je
cmp
xchg
xchg
in
out
mov
pop
fnstcw
mov
test
or
sub
repnz
mov
sbb
and
daa
jnp
idivb
dec
add
dec
bound
int
scas
pop
and
mov
mov
outsb
or
subl
mov
decl
mov
lret
and
and
aas
jae
add
fwait
dec
ja
mov
pop
in
insl
adc
enter
and
mov
jae
sub
sub
test
clc
icebp
inc
fstpt
leave
imul
sub
ds
addr16
rorb
sbb
fcmovnu
push
mov
and
ffree
data16
rorb
push
inc
dec
fcoml
lea
jbe
and
xchg
je
sub
sub
cli
stos
push
dec
mov
out
mov
cmpb
out
sarb
into
lods
sub
frstor
loop
aad
pushf
xchg
jns
cmp
fucom
test
popf
inc
mov
call
inc
mov
bound
dec
gs
sbb
jg
paddb
stos
xchg
in
test
push
jae
aas
js
es
out
movsl
dec
lret
xor
aaa
and
scas
mull
in
xor
add
inc
push
push
push
lds
enter
fwait
pop
add
aas
cld
pop
shl
and
cli
inc
mov
lea
aas
xchg
inc
mov
imul
xor
xchg
int3
frstor
and
push
adc
jmp
sbb
imul
lea
cli
dec
or
test
adc
jmp
cli
mov
pop
dec
int3
push
sub
mov
xchg
xor
pushf
push
loopne
push
pop
sbb
cmp
andl
pop
icebp
fs
js
sti
ret
or
in
adc
xchg
sbb
add
cld
pop
out
fwait
test
leave
insb
movsb
int
mov
dec
jo
icebp
adc
mov
mov
aad
and
mov
push
cltd
jne
stos
jle
ret
sbb
faddl
dec
pop
jg
jbe
mov
cmp
fnstsw
and
ljmp
inc
pop
sarl
popf
enter
inc
loop
adc
loope
xchg
adc
xchg
ret
out
shll
pop
pop
add
fidivs
sbb
mov
inc
or
jmp
fld
fldl
pop
mov
imul
shrl
test
out
cmp
fnclex
mov
jne
jp
cmc
lahf
xchg
lahf
sbb
push
ja
cmp
aaa
xor
push
sbbb
lret
je
imul
sahf
movsl
cmp
pushf
dec
movsb
test
sub
mov
push
or
pop
mov
add
fs
gs
sahf
pusha
fstpt
js
pop
inc
sbb
jge
adc
shll
sbb
div
outsl
cltd
cmp
push
pop
and
jb
sub
or
pop
pushf
xor
adc
and
jge
pop
sub
xor
push
addr16
nop
or
inc
lock
push
repz
cmp
or
and
and
push
jl
sub
xchg
mov
in
jmp
mov
sbb
out
ficomps
mov
push
sub
mov
pop
xchg
cmc
inc
scas
dec
mov
lock
pop
mov
sub
jecxz
xor
inc
hlt
sbbl
pop
or
mov
mov
daa
xor
aas
push
jmp
imul
pop
js
sbb
cmp
and
xor
repnz
mov
rcr
stos
pusha
mov
test
cmc
cmpb
sahf
les
je
stos
jnp
adc
xchg
rcrb
mov
xlat
cltd
in
xlat
stos
loopne
imul
ljmp
frstor
add
inc
cmp
dec
xchg
outsl
mov
xor
jp
fsubr
ss
inc
jb
or
mov
pop
popf
enter
in
enter
pop
jbe
cmpsl
fwait
in
aaa
jb
insb
mov
cmp
add
lds
jl
outsl
dec
mov
sbb
mov
sub
addr16
into
arpl
call
mov
jne
sbb
mov
mov
adc
jnp
aaa
add
lret
mov
movsl
sub
mov
xor
mov
or
jnp
fnsave
es
inc
jg
sbb
inc
outsl
inc
pop
ret
data16
scas
bound
popf
mov
adc
jge
inc
test
testb
roll
add
std
adc
mov
pop
sbb
int
jb
or
and
mov
pop
xchg
mov
enter
int3
insl
add
push
hlt
adc
sti
mov
push
in
outsb
xchg
clc
jne
pop
adc
fbstp
push
cmc
jbe
cwtl
neg
sub
sbb
test
jecxz
push
inc
jbe
iret
sbb
jbe
rolb
adc
gs
arpl
add
mov
mov
xchg
cmp
cwtl
xor
rol
push
adc
cmp
inc
cmp
cmp
pop
or
pop
sbb
mov
cmp
xor
test
xchg
mov
andb
hlt
popf
insl
mov
push
js
ja
leave
enter
ret
int3
mov
out
in
mov
or
sbb
mov
repnz
fnsave
or
addr16
iret
ljmp
dec
mov
sub
adc
pop
popf
mov
dec
in
rcrb
movsl
int
adc
in
aas
sub
pop
push
sbbl
popf
lretw
push
jb
repz
loop
and
hlt
pop
into
mov
iret
and
jae
sbb
add
add
ret
xor
aas
in
insl
rorl
inc
movl
mov
lods
mov
js
out
dec
rolb
xchg
xor
and
aad
add
add
sarb
cmp
jle
shr
dec
data16
insl
xorw
test
pushl
push
mov
jo
push
adc
iret
iret
in
or
add
mov
das
test
dec
pop
js
inc
divl
sbb
imul
outsb
insb
adc
pushf
xchg
cmp
test
push
jge
rcrl
nop
cmpsl
fsub
sbb
mov
push
inc
jbe
dec
mov
cmp
pop
inc
xlat
cmp
xchg
stos
adc
movsb
call
inc
dec
out
enter
popl
aas
dec
outsl
shrl
repnz
int3
popf
filds
xor
repz
sbbb
stc
push
cmp
add
add
enter
stos
mov
sbb
lock
punpckldq
cmp
xlat
push
sub
inc
jne
call
dec
pop
daa
mov
or
jo
aas
and
cmpsl
pop
outsb
sar
les
pop
mov
addr16
lahf
sbb
push
mov
js
fbld
mov
repnz
in
nop
sub
mov
fmul
lret
loope
mov
enter
mov
mov
stos
rcr
xchg
rcr
in
int3
out
or
js
and
xchg
fwait
ret
xchg
sbb
mov
xrelease
adc
sub
movsl
mov
sub
mov
mov
repz
rcrb
jbe
xchg
push
js
pop
hlt
js
punpcklwd
pushf
mov
mov
add
ret
adc
add
ss
inc
enter
xor
lea
test
dec
loopne
xchg
outsl
loope
cld
sbb
lcall
stc
scas
daa
and
jmp
cmpsb
xchg
inc
adc
cli
dec
rorl
jecxz
shlb
cmp
lret
xor
xchg
jnp
ds
in
and
push
lret
jo
push
xchg
sub
sub
cli
xor
int
into
in
adc
xchg
pop
add
and
jno
xchg
or
aas
or
mov
test
adc
sbb
aas
mov
jmp
dec
fwait
mov
or
shll
fcom
dec
mov
test
rorb
js
dec
mov
std
adc
in
lock
mov
lret
cmp
jl
dec
popa
sahf
imul
daa
sbb
repz
jmp
inc
or
pop
adc
xor
inc
mov
js
add
or
dec
sbb
push
repz
dec
mov
int
jl
pushf
pop
jne
shll
cmpsl
mov
mov
sbb
push
aaa
jb
test
movsl
imul
js
or
sbb
pop
adc
jmp
cmpsl
fsubrs
add
jns
lods
and
hlt
pop
pop
mov
xchg
mov
lods
adc
lret
loope
ficomps
test
test
mov
cmp
idivb
ret
scas
jmp
fstps
push
jae
lods
int
clc
cvttps2pi
mov
into
pop
and
in
sub
mov
jp
mov
jae
insl
icebp
sbb
cwtl
inc
jne
scas
xor
popf
jle
adc
adc
in
cmp
sub
movsl
test
dec
sbb
sub
dec
lods
lods
scas
pop
lahf
std
dec
loop
js
in
fiaddl
pusha
shrl
in
dec
inc
pop
xchg
cld
jmp
dec
aad
in
out
ja
lahf
mov
in
int
mul
sub
aaa
and
cld
dec
test
dec
into
mov
pusha
scas
push
mov
and
add
jl
in
pop
movsl
cmp
pop
and
int3
ret
daa
xor
scas
int3
and
das
subb
ret
aas
cmp
loope
cmpb
test
jno
clc
shll
jl
enter
rolb
fst
shrd
mov
xor
into
mov
adc
call
jne
imul
inc
out
push
loopne
call
push
and
lds
das
rcrb
and
cmp
fidivl
inc
cmp
stc
jns
testl
arpl
push
sbb
xchg
sub
cs
xchg
mov
popa
test
aaa
adc
test
cltd
inc
ret
lea
jmp
xlat
adc
and
insl
rorb
mov
shl
adc
hlt
ror
sbb
ret
loope
daa
dec
push
mov
les
adc
ret
ljmp
mov
xchg
das
xchg
daa
and
shll
sub
dec
xorb
stc
xor
add
adc
scas
mov
push
fnstcw
aaa
sbbb
addr16
int
adc
and
jle
mov
inc
mov
xchg
iret
mov
xchg
xchg
add
je
sbb
inc
shl
daa
int
sub
xchg
push
mov
mov
add
xchg
push
or
push
xchg
aas
in
and
cmp
dec
stos
xor
leave
std
call
push
fst
adc
mov
rcr
add
lock
dec
outsb
xor
pop
orb
add
out
aas
and
pop
xchg
stc
fnsave
push
call
aas
inc
roll
mov
pop
pusha
xor
sti
sahf
mov
decl
jmp
out
inc
push
test
pop
xor
mov
push
dec
and
test
jl
pop
out
xchg
sub
out
das
jg
push
outsb
mov
push
mov
dec
sub
push
popf
add
data16
mov
int3
jg
or
push
std
push
sti
or
and
sbb
cli
out
mov
jecxz
mov
bound
and
fldenv
sarl
jl
das
ret
sbb
jmp
mov
sub
xor
hlt
repz
and
push
jmp
add
jbe
pop
and
sahf
xchg
imul
add
out
in
mov
daa
movsb
loope
or
stos
push
fsts
fdivl
or
add
cltd
jne
pop
sbb
ja
mov
dec
cs
sub
xor
mov
sub
mov
push
int
mov
orb
gs
xor
es
out
xor
into
cmp
adc
jae
inc
sub
shlb
or
gs
pop
cwtl
mov
enter
push
xchg
xor
sti
sub
cmpsb
and
call
gs
add
rclb
out
in
xchg
ja
cmpb
sbb
xchg
xor
jmp
mov
cltd
cwtl
pop
test
les
scas
insl
sti
pusha
pop
lods
push
sub
xchg
dec
fistps
push
mov
cmc
es
mov
mov
mov
lea
addr16
xchg
cmpb
cwtl
movsl
pmulhuw
out
jo
mov
adc
cld
mov
ss
movb
stos
fsubs
pusha
mov
ror
pushf
icebp
sbb
aam
lret
jp
jno
xchg
out
cmp
adc
scas
js
jns
stos
mov
rorb
stos
jns
push
mov
fimull
xor
jnp
push
cld
lods
push
jne
dec
shlb
mov
int
xchg
and
mov
jnp
sbb
adc
dec
xchg
nop
test
jbe
fnstcw
loop
push
mov
popf
jns
icebp
aas
jg
icebp
add
jno
or
add
mov
add
xchg
iret
lods
out
mov
call
sbb
inc
adc
fcompl
divl
inc
push
pop
in
or
push
xchg
push
shrl
shll
jle
imul
mov
sbb
push
lret
sahf
divl
aam
testb
and
pop
dec
loope
lea
mov
test
gs
insl
pop
pop
cmpsb
sub
insb
stc
adc
or
xchg
cmp
std
lahf
inc
pop
aam
mov
adc
fistpl
stos
xor
jl
and
inc
push
imul
add
cltd
leave
add
lods
das
push
in
rorb
outsl
adc
pushw
test
pop
or
cmp
gs
adc
rcll
mov
aam
mov
cwtl
jmp
cld
and
jge
test
in
or
jg
add
mov
push
shll
jbe
pop
xlat
xor
div
insb
sub
fstpt
dec
ja
cmp
xchg
jns
lods
dec
push
shrb
stos
loope
loop
xchg
mov
push
es
add
add
sbb
unpcklps
xor
hlt
in
lea
dec
cmp
mov
dec
jae
sbb
xchg
jmp
adc
stos
cwtl
push
pop
icebp
cmpsb
and
loopne
adc
adc
sbb
jmp
call
inc
sbb
mov
dec
ljmp
pop
push
cmp
adc
out
fldcw
dec
nop
out
cmp
jmp
arpl
jbe
daa
stos
mov
insb
adc
fwait
call
or
test
xor
enter
rcrl
movsb
fadds
cmp
push
ret
pushf
and
mov
aaa
mull
es
test
hlt
imul
jecxz
adc
mov
push
and
mov
push
ss
mov
das
lods
popa
cltd
pop
addr16
test
mov
ds
repnz
loopne
add
pop
incb
aaa
js
jp
out
jns
dec
jl
jbe
xor
subb
lret
xlat
jb
add
xchg
cmp
adc
xor
mov
dec
repnz
cwtl
cs
xchg
subl
sub
lret
in
dec
lods
aad
ds
int3
mov
and
add
push
aas
ds
ret
fwait
test
inc
in
call
xor
sbb
fs
outsb
movsb
sub
sbb
and
add
test
int
pop
push
test
ficoml
outsl
mov
xchg
push
cmc
sbb
xor
enter
jbe
icebp
adc
data16
pop
gs
adc
add
inc
cmp
cli
jl
movsl
cmpsb
adc
mov
mov
sub
mov
inc
repz
cs
inc
imul
jecxz
lahf
decb
shll
sbb
or
ret
fs
xor
and
add
mov
mov
scas
and
cmpsl
push
popa
sbb
adc
test
fnstsw
mov
pop
cmp
orb
mov
cmp
jg
lahf
hlt
cmp
loopne
cwtl
fcom
dec
movsb
es
cmpsb
imul
out
dec
jb
arpl
psadbw
sbb
imul
imul
mov
pop
sar
dec
push
cmpsb
mov
cmp
ret
ficoms
pop
mov
push
ljmp
mov
cmp
push
and
cwtl
ja
add
push
addr16
lock
sbb
or
clc
mov
pusha
ret
mov
sbb
sbb
jle
in
mov
jno
insb
aad
sub
aas
xchg
arpl
jae
rcrb
mov
and
mov
int3
rolb
mov
jmp
pop
lds
dec
fidivrl
andl
pop
leave
lods
cli
std
les
fsubs
and
xor
daa
adc
andl
sub
mov
or
xor
je
fadd
lcall
xchg
loopne
cmp
inc
xlat
shlb
idivl
pusha
jae
hlt
sbbl
adc
cmc
inc
xor
lret
pop
add
fucomi
cmp
or
pop
fisubs
stos
push
and
push
xchg
inc
xor
in
xchg
xchg
mov
in
out
jle
mov
das
and
data16
cmp
in
movsb
ds
fstpt
scas
rep
popa
jns
scas
lock
hlt
push
push
jnp
lods
loopne
or
cmp
pop
push
dec
sti
neg
mov
lahf
mov
push
fidivs
jae
xor
incl
xchg
js
iret
inc
enter
pop
inc
xor
lds
adcb
pop
push
push
cmc
mov
xchg
ja
repz
pop
ja
inc
add
mov
bound
loope
cmp
xor
popf
pop
imul
divb
lock
roll
jae
movsl
lds
add
xlat
in
push
add
mov
into
mov
popf
sbb
lods
mov
mov
inc
arpl
fisubs
in
mov
mov
mov
imul
loopne
push
sub
cmp
jns
loope
sub
ja
push
mov
ljmp
sub
push
xchg
push
scas
and
push
testb
rclb
mov
clc
ret
dec
fisubrs
mov
sbb
mov
fbld
std
mov
xchg
xor
mov
mov
cli
and
into
mov
pop
sub
addr16
xchg
push
add
jno
rorl
or
icebp
adc
loope
inc
cld
test
call
subl
push
mov
jg
sarb
lods
mov
xor
call
std
xchg
mov
inc
je
jge
and
mov
mov
adc
xor
lcall
popa
mov
mov
xor
movq
sub
inc
popf
and
lods
fs
mov
stos
leave
in
add
dec
rcrb
ffree
fists
jae
mov
test
movsl
add
pop
icebp
out
pop
xor
cmc
mov
ret
push
or
push
test
adc
aam
push
sti
pop
in
mov
cmp
sti
in
ljmp
push
dec
xor
mov
int
rcrb
dec
mov
mov
ss
jp
sub
adcl
out
clc
adcl
test
xchg
adc
pop
xchg
mov
mov
adc
pop
cmpsb
jp
andb
jno
into
mov
insl
gs
lret
pop
sub
cmc
xchg
popa
std
dec
lds
mov
jge
jb
xor
lea
test
push
inc
pop
push
add
jnp
nop
fwait
xor
mov
les
adc
add
movaps
faddl
add
gs
clc
mov
dec
jl
push
pop
inc
movl
decl
cs
inc
add
jns
mov
fimuls
pusha
dec
sub
aaa
cwtl
out
popf
xchg
jmp
mov
ret
movsb
mov
packsswb
iret
pop
xlat
mov
negl
sti
fcoml
or
lock
es
popa
out
iret
mov
repz
and
aad
cltd
pop
insl
mov
push
xchg
jne,pt
mov
ljmp
std
mov
pop
and
and
pop
in
xlat
inc
in
icebp
push
stos
les
rorb
inc
add
mov
shlb
popa
aas
mov
test
xor
dec
jae
sahf
imul
lods
pmulhw
xchg
mov
mov
mov
lock
jns
adc
int3
daa
mull
xor
data16
dec
jne
or
pop
mov
repnz
mov
aaa
mov
lds
xor
push
xchg
mov
add
sub
repz
inc
add
pavgb
subb
clc
jp
sti
mov
in
imul
sbb
mov
sarb
cmpsb
xor
call
jmp
insl
inc
sbb
mov
xchg
lret
pusha
mov
mov
adc
loop
lods
jbe
scas
ret
mov
mov
scas
test
mov
das
enter
dec
push
cmp
dec
push
jmp
pop
inc
mov
jmp
aas
push
jle
es
or
test
mov
bound
outsb
fmull
adcb
mov
aam
jge
cmp
test
je
push
fs
adc
lcall
scas
mov
and
mov
lock
add
adc
movsl
cmp
lea
aas
mov
and
cmp
test
or
sbb
stc
test
cmp
pop
and
shl
fwait
jmp
and
sti
adc
push
out
pushf
push
jle
lahf
scas
push
pop
cld
mov
loope
lcall
int
add
out
rolb
adc
mov
stos
xchg
mov
mov
xor
mov
jle
push
shrb
push
lahf
mov
cmp
cmp
mov
add
adc
arpl
ret
iret
in
adc
movsl
jmp
mov
fimuls
lods
jne
je
cmpl
or
pop
mov
cmp
xor
mov
inc
in
imul
jae
pusha
int3
xchg
mov
add
mov
pop
mov
ret
pop
xor
lock
jle
or
popa
dec
pop
push
push
sub
cmp
loop
out
pop
mov
scas
sbb
cmpsl
and
sub
lcall
jae
xchg
mov
adc
and
dec
jo
ja
leave
fildl
and
or
hlt
push
jmp
pusha
rorl
clc
adc
fcom
pushf
insl
std
insb
dec
sub
movsb
mov
fnstenv
hlt
pop
out
lds
sub
ret
lea
mov
mov
jbe
inc
aad
fdivr
xchg
aam
mov
xchg
lret
jmp
in
jle
jo
jl
mov
out
lods
sahf
test
mov
andb
xchg
or
xchg
xor
flds
movsl
clc
cmp
aaa
push
sarl
cmp
lods
cmp
adc
jo
push
lock
jns
add
add
cmp
fnsave
repnz
std
mov
fiaddl
mov
mov
nop
jb
movaps
iret
out
hlt
pusha
insb
test
test
mov
or
xor
jp
xchg
sbb
xor
nop
fistl
and
adc
sub
cwtl
dec
aam
test
jo
pop
orl
sub
cld
push
inc
mov
mov
adc
jns
repz
pop
push
sbb
and
frstor
gs
leave
out
jp
mov
mov
push
in
leave
rclb
and
subb
test
mov
add
fisubs
pop
cld
fwait
mov
or
sahf
lds
and
mov
xchg
mov
xor
lret
and
pop
mov
sub
xor
pop
xor
in
jge
adc
data16
mov
inc
dec
mov
mov
fwait
push
xchg
dec
lcall
pop
cmpsl
int
in
test
xchg
outsl
or
pushf
jp
test
iret
cmp
ret
test
pop
sub
leave
inc
out
out
scas
xchg
outsl
mov
add
movsb
pop
adc
add
mov
lahf
jp
ja
in
pop
xchg
adc
movsb
clc
rorl
mov
aas
mov
stc
pop
xchg
lretw
inc
adc
movsl
push
adc
inc
punpckhdq
mov
inc
psubd
rcrb
xchg
xor
fs
ds
xchg
jne
add
orb
daa
mov
xor
add
mov
xor
sub
push
jge
scas
xchg
mov
add
and
daa
push
xchg
and
insl
je
and
pop
dec
insb
sbb
push
inc
push
push
mov
sub
push
adc
sbb
mov
or
mov
outsb
adc
imul
adc
mov
sbb
icebp
jb
add
iret
cmpsl
xor
xor
shll
push
fmuls
lahf
sbb
jne
iret
stc
mov
orb
pop
mov
ret
fisubs
push
mov
adc
data16
out
ds
push
int3
or
xchg
fldcw
scas
mov
dec
mov
jbe
xor
and
pop
cmc
push
enter
ljmp
shr
sub
loope
adc
les
ds
jmp
dec
pushf
sbb
sbb
sahf
mov
pop
mov
movsl
cld
adc
jb
xchg
adc
ss
push
dec
sub
or
andb
movsl
and
sub
push
inc
sarb
inc
hlt
push
enter
pop
loope
pop
mov
pop
and
dec
mov
push
xcrypt-ctr
cmpsl
cltd
adc
iret
xchg
fsubs
addr16
lahf
push
in
sub
push
js
jb
sub
fimuls
pop
xor
loop
mov
or
in
ja
mov
xor
fld
pop
loop
xchg
lock
cmpsb
out
pop
mov
push
enter
loope
and
int
add
addr16
add
sub
pop
gs
shr
jo
sbb
loopew
xor
in
iret
jne
jb
insb
sbb
and
mov
mov
dec
dec
push
cmp
xchg
movsb
jns
mov
stos
pop
xchg
js
push
popl
stos
div
sbb
je
in
mov
mov
rcr
lcall
or
adcl
sub
pop
mov
pop
sbb
dec
ja,pt
int
outsb
cmp
js,pn
faddl
addb
inc
ficompl
ja
rcrl
pop
outsb
or
xchg
sarb
insb
lret
push
jns
sbb
mov
add
pop
jg
int
leave
xor
mov
in
inc
dec
xlat
mov
mov
les
aas
cltd
cmp
stos
call
xor
stos
aaa
push
inc
xor
movsl
cmpsl
add
sub
imull
adc
lret
pop
adc
fwait
rolb
inc
xchg
sub
jle
add
imul
movb
cmpsb
aad
push
dec
mov
jle
fwait
test
mov
push
pop
xchg
sbb
mov
sbb
push
sub
arpl
leave
jecxz
cs
and
sub
mov
ficompl
mov
fildl
jle
pusha
fs
loope
gs
test
cmpsl
mov
fnsave
mov
push
add
add
sub
clc
add
enter
pop
dec
cwtl
add
dec
xor
cmp
call
jae
outsb
outsl
inc
ss
sub
rorl
in
inc
lods
es
xlat
ja
lea
push
fisttpll
lea
cmp
test
add
fsubrp
inc
es
jp
sub
adc
pop
repnz
das
lret
inc
mov
adc
insb
es
cmp
inc
hlt
std
pop
dec
mov
int
mov
jno
jb
mov
xlat
rclb
js
or
mov
daa
xor
pushl
fisubl
mov
cs
cmp
mov
add
mov
cli
add
add
test
add
xchg
orl
add
pop
or
sbb
out
pop
sub
lds
push
data16
dec
pop
mov
jge
rolb
lods
sti
in
inc
shrb
popf
jb
loope
aaa
jne
jecxz
hlt
jecxz
push
cmp
xor
call
outsb
xchg
cs
scas
fisubrl
cmp
cmc
inc
nop
inc
xor
inc
shrb
inc
lret
or
cmp
outsb
loope
mov
out
xchg
or
inc
fidivrl
cmp
insl
ret
loopne
leave
cwtl
xchg
and
sub
jl
mov
fidivs
jne
cmc
aas
xchg
negb
daa
dec
adc
mov
imul
pusha
xlat
jo
cli
pop
pop
and
int3
cmc
outsl
rclb
pop
xor
loop
sub
jae
mov
or
xchg
popa
out
sbbb
repnz
fsub
stos
sub
jns
xchg
sbb
je
ss
push
xor
sbb
insl
sbb
testb
mov
pop
test
fistps
ret
push
in
mov
cmpsb
adc
popa
sarl
cltd
add
or
lea
loopne
and
js
fs
ja
sub
inc
lcall
lds
pusha
sub
xor
mov
icebp
sub
loopne
mov
imul
pop
push
cmp
ja
xchg
jb
pop
sub
mov
sub
mov
cmpsl
xchg
xor
push
jmp
push
lods
ljmp
inc
add
aad
pop
mov
xor
sahf
pop
pop
dec
push
iret
jp
pop
push
pop
cmp
lahf
push
ret
clc
sub
xor
stc
mov
dec
clc
pop
movsb
aas
cld
out
out
push
arpl
adc
pop
push
cmpsb
mov
adc
clc
rorl
insb
cwtl
add
das
mov
or
mov
add
inc
movsb
lcall
cmc
out
and
adcl
mov
and
sahf
push
cld
pop
add
mov
inc
in
inc
jecxz
ret
push
rcl
mov
xor
pop
jecxz
jae
fstps
dec
enter
test
lcall
jb
lock
jge
daa
mov
adcl
stc
enter
push
pop
cmc
xchg
mov
outsl
push
cltd
mov
add
orl
int
int
clc
iret
push
call
xchg
cmc
rcll
push
inc
mov
ret
adc
adc
sbb
xchg
aam
lods
adc
pop
loope
loope
mov
sahf
jmp
sub
mov
roll
xchg
jno
pushf
mov
mov
ret
xchg
mov
in
and
bound
aad
fildl
pop
rcrb
mov
lods
enter
int3
inc
enter
repnz
xchg
cld
cmpsl
pop
push
cmpsb
ds
rcrl
adc
stos
fisubrs
xchg
push
cmp
arpl
fisttps
bound
out
mov
sbb
daa
movsl
insb
jge
hlt
bound
add
aas
cmp
lods
addr16
std
add
or
mov
lock
fisttps
pop
je
cli
push
pushf
push
movsb
xchg
shr
jae
lret
mov
les
data16
xchg
cmp
and
movsl
leave
out
sahf
sbb
int3
mov
shrb
hlt
add
cli
insl
xlat
mov
test
jbe
es
nop
inc
sub
lcall
dec
pop
data16
mov
loope
rolb
xor
add
fldcw
xchg
fnsave
cli
or
into
daa
or
js
xadd
mov
dec
adcb
scas
mov
sub
push
lcall
or
jecxz
or
dec
daa
xchg
mov
mov
inc
or
add
adc
xor
jp
popf
sahf
test
pop
cld
sbb
and
ljmp
inc
xchg
sub
mov
movsl
dec
pop
arpl
aas
or
and
sbb
inc
ljmp
test
sub
sti
outsl
mov
outsb
arpl
dec
movl
fildll
scas
mov
pop
das
popa
add
xchg
mov
xchg
mov
xchg
dec
mov
add
out
jbe
push
mov
xchg
jo
and
gs
popl
jle
stos
cmpsb
mov
push
push
pop
adc
and
cmp
cmp
xor
in
repz
arpl
pop
das
pop
cmc
push
stos
mov
jae
jecxz
pop
push
lcall
adc
sub
ljmp
adc
cwtl
jne
out
divb
enter
cmc
mov
fsubl
testb
jmp
testb
fists
or
stos
pusha
outsw
mov
mov
sahf
sbb
in
add
cmp
pop
nop
inc
cmpsb
fimuls
and
xchg
lods
je
push
or
icebp
jle
mov
and
jb
mov
loope
inc
pop
add
mov
mov
mov
inc
xor
inc
pusha
mulb
cmp
push
in
pop
xor
add
sbb
xchg
sbb
xchg
daa
imul
adc
and
inc
xorl
mov
loope
and
sarb
ret
mov
mov
mov
jl
frstor
xchg
inc
fisubl
xorl
adc
xlat
add
inc
fnsetpm(287
imul
mov
sub
add
cli
sbb
out
jge
or
jl
jns
dec
shlb
jg
es
xor
sub
mov
shrb
fdivs
loope
dec
shl
orb
test
test
push
add
mov
aas
clc
jbe
jle
test
daa
out
push
cmp
aas
cmpsb
mov
dec
mov
push
xchg
dec
ja
mov
mov
data16
repz
sbb
cs
imul
stc
mov
movsl
dec
xchg
fs
aas
xchg
and
insl
or
fiadds
lea
and
mov
daa
cmpsl
mov
aad
xor
int3
or
push
lds
cmpsb
xchg
shlb
sbb
dec
gs
das
push
pop
addr16
adcl
sub
repnz
lock
hlt
sbb
xchg
mov
add
jg
rorb
jl
adc
shlb
jge
movsl
and
add
movsl
mov
inc
adc
jne
dec
fbld
mov
data16
xchg
jno
fdivs
outsb
jbe
jmp
aas
test
shlb
std
aam
insb
xchg
out
xor
mov
xchg
mov
in
sub
fdivl
sbb
xchg
insl
ds
pop
out
into
xchg
imul
mov
push
cld
sbb
sbb
pop
jb
icebp
lock
fisubrs
sarl
lea
hlt
push
push
aaa
mov
nop
pop
hlt
xor
in
pusha
lret
ret
lods
fwait
jbe
ret
fs
and
sub
aas
leave
pop
dec
dec
fisttps
iret
cmp
cltd
sbb
inc
push
inc
push
cltd
testb
sub
cmpsl
and
jl
mov
push
xchg
mov
push
jmp
int
aam
mov
inc
insb
fwait
imul
fidivl
outsb
and
out
push
mov
addr16
push
xchg
scas
lret
sarb
mov
jl
bound
jb
xor
daa
je
add
xor
insb
xchg
mov
aam
push
mov
in
movsl
pusha
aaa
fcompl
xor
xor
loopne
cmp
sbb
mov
xor
adc
mov
dec
mov
mov
jg
inc
pushf
inc
jb
mov
cmp
mov
les
dec
rorb
push
lahf
dec
jo
xor
xchg
scas
fxch
mov
sub
ja
add
inc
jg
pop
or
aas
movb
inc
fs
fbstp
jge
xlat
push
jne
and
clc
insl
push
mov
mov
loop
dec
add
das
jns
cli
test
cld
lret
sub
mov
arpl
dec
fistl
iret
add
imul
mov
inc
mov
mov
push
in
add
or
or
cs
shll
shr
jmp
dec
sbb
jo
mov
and
ret
xlat
sub
cmpsl
inc
shr
dec
dec
fistps
cmp
ret
adc
push
loope
jae
mov
push
out
fidivl
push
out
pusha
es
out
inc
mov
mov
jns
and
mov
fs
and
pop
mov
sub
je
mov
movsl
dec
lea
inc
pop
gs
pop
mulb
inc
fdivr
aam
sub
push
jl
mov
jmp
mov
dec
pmulhuw
and
notb
pop
sti
lcall
mov
dec
jge
mul
and
jb
push
aas
sub
in
flds
jb
arpl
rorl
daa
pop
push
jne
jnp
bound
cmpsb
or
lret
cmp
pop
popf
jns
shll
inc
clc
lds
cmp
hlt
in
xor
push
sbb
xor
inc
test
repnz
ret
lds
shll
sub
cmc
and
mov
dec
insl
in
or
imul
bound
add
add
cmp
cmp
sub
dec
ret
jecxz
into
movsl
pop
and
scas
and
nop
inc
lret
mov
dec
lea
sti
mov
sarl
and
bound
or
test
cmp
sahf
jnp
cmpsb
arpl
jle
aam
insb
inc
fmul
mov
xchg
stos
jne
imul
xchg
dec
std
movsl
push
inc
pop
sub
pop
sbb
jne
lret
pop
mov
jbe
adc
icebp
and
icebp
pop
push
test
pusha
fists
ret
jae
ss
push
pop
sub
inc
shlb
inc
sub
jne
dec
leave
mov
stos
sbb
and
daa
pop
and
dec
mov
and
mov
cs
jmp
pop
xchg
inc
pop
mov
jo
imul
mov
jns
mov
cmp
adc
testl
call
mov
cwtl
sti
fsts
mov
hlt
js
jl
ret
jo
xchg
repz
cmpsb
lods
cltd
arpl
cmp
xor
push
jmp
imul
add
mov
sub
cli
int3
je
inc
jmp
xor
sub
cmp
sub
push
sbb
scas
push
fs
cmc
cmpsb
dec
ret
cmp
mov
stc
outsl
test
mov
imul
sbb
outsb
mov
dec
dec
stc
add
cmp
mov
ljmp
stos
lock
fcomi
loope
jo
cltd
pop
mov
ljmp
and
inc
int
mov
pop
mov
jmp
cli
jne
xor
lret
sub
mov
jmp
jp
push
lods
mov
insl
mov
sub
lods
mov
ljmp
inc
push
jbe
aaa
inc
push
stc
xchg
dec
maskmovq
adc
in
icebp
or
sti
jo
mov
jecxz
sbb
adc
not
jno
add
cmp
fldcw
mov
adc
scas
inc
pushf
daa
leave
and
pop
ss
pusha
jbe
bound
in
sbb
int3
fdivrs
and
and
dec
pusha
dec
dec
jmp
or
xor
scas
mov
pop
stc
push
mov
test
dec
loopne
int3
ret
test
inc
loop
fstps
or
xchg
nop
push
or
test
lahf
ret
adc
lock
out
adc
pop
adc
fimuls
in
fcom
in
cwtl
adc
cmp
test
jns
xchg
mov
test
imul
fcom
mov
push
decb
cmp
pop
movsb
xor
into
pop
test
and
aam
adc
ret
hlt
and
push
jo
inc
out
arpl
lret
or
xchg
xor
adc
aad
push
into
xor
cmp
xchg
mov
xor
aad
int3
insl
out
nop
or
mov
xor
mov
std
mov
sub
fisubs
cmpl
dec
add
fstpt
incb
lds
push
pop
push
stos
sti
bound
fistps
and
ljmp
or
sub
pusha
dec
jbe
outsb
rcrl
sub
pop
aas
mov
xor
jmp
mov
cltd
aam
in
mull
div
inc
xchg
xor
push
hlt
inc
inc
sub
imul
gs
lcall
imulb
lods
ss
add
mov
inc
jl
and
lods
je
test
pop
adc
push
pop
in
jbe
rcll
mov
inc
adc
nop
mov
std
pop
inc
push
sub
mov
xchg
xchg
pop
pop
cmp
xchg
test
adc
inc
and
lods
and
out
sahf
inc
inc
lods
int
mov
cld
jb
out
out
xchg
xchg
ret
and
mov
xlat
dec
dec
iret
mov
decb
mov
push
jae
push
mov
ja
insb
xor
lret
into
outsb
sbb
shll
xsaveopt
outsl
adc
fcomi
jle
sub
clc
sbb
leave
fiadds
lods
loop
push
testb
inc
mov
jecxz
cld
fcompl
adc
add
ret
jns
test
cli
in
enter
add
mov
fsubr
out
cmp
jg
scas
push
and
rcrl
jbe
hlt
in
dec
and
mov
pop
sbb
or
jo
or
stc
pusha
pusha
movsl
xchg
pop
jb
out
test
lock
xor
pop
xor
loopne
aas
rclb
mov
mov
out
xchg
push
jecxz
mov
aaa
mov
pop
pop
subl
addl
popa
adc
sahf
lret
ret
mov
mov
shrb
js
add
in
fisubs
jp
inc
mov
es
ret
ss
mov
sbb
loop
and
rol
push
out
bound
mov
les
je
dec
mov
mov
outsl
imul
xlat
fsubs
cmp
inc
jge
add
mov
std
rcl
mov
push
in
sahf
pop
lea
es
jle
pop
mov
loope
cmp
fimuls
mov
es
outsl
sbb
push
inc
loop
pop
pushf
outsb
cs
or
mov
or
inc
xchg
xchg
cltd
mov
adc
sub
into
pop
xchg
mov
adc
pop
lcall
add
mov
enter
jle
cmp
jae
mov
xchg
jl
push
repz
mov
iret
pop
addl
mov
fiadds
or
fimull
add
int
movsb
cs
xchg
push
mov
dec
or
add
lock
rcl
fs
loope
pop
add
ds
sahf
adc
mov
jp
je
or
or
cwtl
out
push
mov
stc
inc
sahf
xor
fstl
aaa
pop
cmp
adc
les
inc
inc
push
repnz
gs
jae
mov
dec
imul
jb
sahf
cmp
sbbb
pop
int3
popf
jl
rclb
daa
or
int
cmp
xchg
mov
pop
add
in
push
mov
jne
adc
jle
and
cld
and
inc
insl
sarl
adc
or
jb
adc
xchg
repnz
pop
mov
xor
cmpsl
xchg
xlat
inc
sub
mov
mov
inc
push
ds
or
add
push
into
inc
adc
aam
xlat
xlat
aas
in
mov
xor
xchg
mov
xor
fcoml
xor
xor
push
stc
mov
push
in
int
lahf
cmp
fcmovb
push
cmp
xchg
lahf
dec
or
pop
jae
inc
cmp
push
pop
sahf
sbb
push
leave
pop
push
test
fs
cli
xor
int3
inc
push
scas
sub
push
inc
fnsave
jge
out
es
out
push
scas
sbb
adc
dec
mov
fcompl
sti
pop
dec
leave
outsl
cmp
sbbb
cld
jmp
xchg
cmp
aam
repz
in
cli
jne
xchg
dec
icebp
ds
inc
shrl
fwait
sub
fs
jmp
inc
push
dec
aam
filds
imul
test
xchg
daa
insl
xchg
insb
scas
push
jnp
into
dec
jecxz
arpl
mov
or
clc
inc
sub
or
lret
xchg
insl
xor
mov
jbe
movsb
into
pop
or
jle
dec
js,pn
jne
adc
icebp
cwtl
add
movsb
out
inc
push
aad
sbb
lahf
xchg
out
not
mov
and
pop
mov
std
sub
and
jno
pop
sub
in
sahf
sahf
inc
je
jo
imul
xor
or
mov
test
subb
mov
mov
mov
adc
mov
xor
lods
ret
pop
fcomi
mov
adc
fnsave
imul
shlb
sbb
js
orb
add
out
mov
outsl
fisttpl
outsb
int
sub
and
mov
in
jl
mov
push
leave
aaa
int
out
out
and
pusha
push
rcrl
sbb
outsb
inc
aad
mov
rclb
sub
mov
sbb
popa
test
jb
imul
adc
das
ljmp
and
inc
push
push
xchg
pop
push
push
dec
xchg
mov
add
mov
test
daa
dec
in
pop
push
fstpl
or
jmp
shrb
cmc
push
mov
inc
sub
sbb
xor
negl
scas
push
icebp
push
fsubl
inc
push
ret
xchg
mov
in
stc
ds
push
inc
stos
movsb
mov
std
iret
ret
shrb
sbb
scas
icebp
popa
cmp
lods
pop
pop
hlt
dec
dec
push
popa
mov
cmp
sahf
sahf
inc
jne
fs
incb
pop
stos
push
jae
fbld
mov
in
inc
mull
and
out
loopne
xor
dec
pop
roll
or
pop
imul
arpl
stos
fs
shll
enter
gs
and
call
sub
cmp
cli
pop
icebp
je
je
adc
inc
xchg
or
mov
out
mov
loopne
jns
test
repnz
shl
inc
imul
dec
mov
mov
push
adc
pop
lret
push
enter
or
pop
dec
xchg
fsub
cmp
lahf
cmp
sbb
xchg
into
mov
mov
data16
push
mov
sub
xor
pop
out
mov
xchg
daa
jmp
adc
sahf
mov
jle
add
dec
testl
jge
clc
push
call
icebp
mov
mov
pop
loope
aam
mov
je
or
mov
gs
jne
cld
pop
or
cmp
fdivr
dec
ret
push
sbb
xor
data16
push
test
pop
jle
iret
lods
and
inc
testl
inc
insl
mov
pop
push
dec
mov
cmp
mov
lock
lret
nop
js
mov
jo
add
popa
dec
push
push
push
cmp
jns
dec
mov
imul
mov
cmc
mov
cld
aam
repz
ss
mov
test
inc
and
add
rcrl
adc
mov
and
pop
bound
dec
inc
stos
fmulp
pop
mov
repz
mov
aaa
sub
lods
sub
imul
mov
scas
cmp
sub
inc
hlt
xchg
shrb
add
mov
dec
jae
xor
push
sbb
lea
push
xor
sti
out
lods
movsb
and
pop
in
xchg
sahf
xlat
iret
mov
movsl
addr16
push
or
daa
push
fidivs
lock
mov
inc
int3
in
movb
into
ucomiss
jnp
loopne
pop
aad
push
xor
inc
push
cmpsb
add
lahf
push
je
leave
sub
lods
inc
movsb
sbb
repz
xchg
jp
xor
or
popa
sub
cmp
ret
add
push
lret
cmp
test
int3
jnp
pop
push
adc
inc
xor
addl
fildl
mov
pop
inc
or
and
pop
js
movsl
jecxz
pop
or
mov
or
push
sahf
xchg
jmp
mov
hlt
push
out
or
sub
cmp
mov
mov
loop
rcrl
sbb
inc
xchg
and
loope
pushf
mov
out
inc
je
cmpb
jae
pop
ss
add
xor
pop
std
inc
ret
xchg
jo
popa
daa
std
pop
mov
or
mov
pop
mov
jnp
cwtl
mov
in
lret
pop
test
ja
outsl
mov
scas
negl
adc
test
xorl
and
dec
adc
jae
pop
aam
repnz
cmp
testb
or
fwait
inc
xor
arpl
xchg
pop
jns
xor
fcmovnbe
je
jg
pop
mov
pushf
dec
jg
pop
adc
sub
or
bound
push
jp
rcr
sbb
add
popf
icebp
cmp
mov
xor
push
push
fldcw
dec
push
jns
sub
sub
sbbl
cmpb
outsb
mov
lods
cmpsb
or
or
int
stos
in
cwtl
ret
mov
push
or
aad
mov
mov
and
sub
nop
jno
cmp
ficoms
mov
mov
dec
push
xchg
and
in
push
arpl
std
sarl
mov
divl
fmuls
leave
mov
push
sti
sub
clc
daa
jmp
sti
cmpsb
push
push
or
jge
jae
sahf
mov
jno
std
sub
or
push
xchg
cli
inc
les
cli
xor
cmp
mov
out
jb
pop
mov
dec
sbb
mov
ja
leave
in
xor
imul
out
xor
lret
call
jp
fcomps
push
mov
push
push
adc
das
and
adc
jns
ds
add
xchg
mov
ja
mov
inc
cmc
dec
adcl
nop
fildll
stos
xor
mov
jb
mov
or
lock
sub
les
mov
push
popa
sbb
pushf
mov
rcrl
ret
mov
sbb
clc
push
scas
inc
jae
jo
aaa
push
jle
adc
fwait
xlat
arpl
jb
notb
inc
shlb
insb
js
aam
lcall
dec
imul
stos
test
fsubrs
mov
pusha
js
push
cmp
fwait
aaa
inc
mov
cmpb
test
hlt
pop
test
xlat
add
pushf
cmpsb
sahf
out
push
pop
cmc
cmpsb
mov
out
in
mov
in
add
xchg
fwait
jbe
mov
push
fstl
pushf
inc
andl
adc
cmp
pop
cmp
dec
mov
loope
pop
jl
clc
lock
jmp
leave
add
mov
ror
or
enter
xor
les
jnp
outsl
inc
fucomp
inc
and
adc
mov
and
ss
cmc
ficoms
inc
pop
jle
add
mov
lock
add
cmp
jnp
sbb
scas
call
push
xor
bound
subb
xchg
js
push
sti
xchg
imul
repnz
sub
mov
int
adc
ds
adc
es
pop
jge
roll
sub
add
rol
repz
xchg
inc
shll
jle
jnp
popf
lahf
push
into
mov
or
mov
push
cld
cmp
sarl
xchg
lods
cmpsb
xor
jmp
adc
aaa
out
push
rolb
arpl
xchg
push
push
dec
jl
jg
xchg
mov
pop
iret
jo
out
mov
add
enter
dec
jmp
xchg
outsl
xlat
xchg
pusha
out
mov
test
test
pop
push
out
sti
adc
push
js
into
loope
fs
xor
jge
nop
loop
daa
mov
mov
aam
cmp
pop
dec
cwtl
xchg
jb
iret
cmc
popf
push
sbb
int3
push
fimull
or
cwtl
lahf
stos
in
xchg
xchg
lcall
fs
mov
rorb
xorl
cmc
jecxz
jne
jle
in
and
push
add
mov
repz
test
clc
add
mov
push
jge
enter
jb
repnz
movsb
jp
ljmp
cmpsb
sub
lahf
movsl
jl
push
pop
cmp
dec
fdivrp
imull
aas
mov
lret
data16
cmc
inc
imul
push
les
mov
sbb
sub
inc
and
movsb
cltd
push
aad
jecxz
aad
in
stos
mov
adc
mov
pop
clc
adc
xchg
jns
adcb
test
stos
rcrb
imul
mov
add
inc
jbe
imul
mov
jge
fimull
xchg
pop
les
cli
xchg
xchg
and
or
adc
mov
xor
mov
into
sbb
lock
jecxz
or
jbe
insb
fchs
add
adc
stos
insl
dec
push
scas
lods
lea
jle
ret
lret
push
adc
outsb
pop
xchg
push
lods
int3
cmp
pushf
in
lret
ds
fdivl
inc
cmpsl
cmp
out
pop
or
sti
mov
cltd
sti
iret
imul
in
out
xchg
push
in
add
out
js
cmp
stc
cmp
cmc
mov
sar
nop
jmp
or
fstp
lcall
pop
jo
scas
pop
push
and
test
insl
test
js
sub
xor
xchg
shlb
jb
stos
adc
repnz
stos
movsl
ja
fists
xorl
dec
or
dec
gs
xchg
daa
xor
insl
outsb
mov
pop
repz
and
push
mov
cwtl
mull
mov
cmp
fsub
in
push
jmp
fisttpll
push
add
add
addr16
popa
testb
and
mov
dec
mov
sbb
add
or
add
add
fwait
es
add
add
xor
inc
add
add
mov
pushf
add
repnz
and
and
mov
cmpsb
ss
imul
cmp
mov
loop
sub
pushf
lods
cwtl
pop
arpl
jns
and
test
adc
daa
sahf
int
mov
push
dec
cmp
cmp
and
in
sub
dec
call
xchg
insb
xchg
jecxz
jbe
jge
outsb
movsb
dec
fs
jg
or
cmpsb
pop
pop
out
aaa
dec
sbb
dec
jmp
inc
mov
sbb
mov
lahf
jb
pushf
inc
mov
popf
fidivl
push
and
hlt
scas
scas
enter
xchg
inc
xchg
repnz
inc
xor
jbe
mov
ret
and
pop
push
and
mov
sub
aam
dec
add
jbe
xor
loop
fstps
dec
adc
insb
int3
jo
jne
fwait
xlat
jge
sub
xor
or
int
aaa
and
adc
xlat
xor
sbb
xchg
dec
fcomps
xor
push
jne
cltd
push
lods
push
mov
nop
sbb
aad
stos
jb
mov
jb
xchg
mov
dec
scas
inc
push
shll
insl
std
jecxz
lock
push
testl
mov
loopne
mov
dec
jecxz
jg
cmc
or
dec
shll
cmp
mov
fdivrl
cmp
rcrl
xlat
add
fiaddl
negl
sub
in
mov
rcr
xchg
sbb
pop
pop
adc
arpl
es
hlt
stc
xchg
test
push
dec
jg
xchg
les
inc
arpl
sub
dec
push
adc
jae
test
rclb
fs
xor
pop
xchg
sbb
lods
push
xchg
ss
mov
insb
pop
push
cli
and
lds
loopne
arpl
jns
adc
xchg
ror
shr
add
pop
fidivrl
pusha
adc
mov
lods
xor
push
iret
dec
sbb
icebp
push
jno
lock
test
pop
mov
jecxz
push
push
ret
sub
mov
dec
call
in
inc
add
loopne
add
jne
lods
mov
sbb
mov
cmp
pop
jp
cmp
in
sbb
rcl
sbb
aas
aaa
add
mov
mov
jmp
push
add
stos
call
sub
cmp
cmpb
cli
insb
push
scas
cwtl
xor
mulb
pop
inc
fsubrs
into
mov
sub
test
or
dec
pop
xchg
push
lcall
lods
rcl
sti
sub
mov
js
outsb
sbb
inc
mov
push
fwait
ret
stos
arpl
xor
movsl
mov
orb
jbe
and
xor
loope
jl
mov
loop
mov
jne
dec
ds
aas
add
mov
call
aaa
xchg
mov
mov
add
inc
out
pop
mov
push
sbb
cmp
xchg
pop
scas
out
and
cli
mov
insb
push
jnp
call
sub
je
jb
frstor
mov
adc
imul
cmp
es
jae
mov
or
ja
aam
hlt
out
loop
push
or
out
outsb
movsb
divl
mov
push
andb
cld
mov
xor
or
inc
mov
cmp
xchg
aas
jecxz
push
inc
jae
jo
cld
xchg
mov
push
xor
in
jl
out
push
or
rolb
pop
pushf
adc
cltd
cmp
std
cmp
mov
dec
arpl
insl
sbb
ss
cmp
int3
fs
clc
adc
stc
add
insb
test
add
mov
jae
test
jecxz
les
push
xchg
push
mov
push
dec
aad
aaa
dec
sar
sti
fnstsw
push
mov
inc
xchg
adc
xchg
mov
or
add
fwait
lcall
jmp
insb
test
sbb
sub
sahf
out
in
fiadds
pop
shlb
add
bound
jae
or
or
jl
insl
jmp
into
adc
fidivs
dec
sub
andb
mov
ja
and
popf
xchg
fwait
arpl
pop
inc
lea
dec
adc
scas
pop
leave
push
inc
js
xchg
mov
cmp
mov
movsl
mov
jo
sbb
jnp
xchg
add
pop
push
xchg
fimuls
daa
outsl
pop
mov
int3
lods
cld
xor
mov
or
mov
pop
dec
adc
mov
sbb
fdivl
test
lahf
jno
js
push
cltd
insb
fs
push
jge
xchg
je
dec
xchg
out
daa
inc
sbb
incb
mov
push
sbbb
inc
push
mov
stc
test
mov
pop
repz
rol
cmpsb
fwait
cmp
sbb
push
push
decl
jae
mov
or
dec
mov
stc
sti
insl
mov
mov
cs
jno
pusha
dec
add
cmp
inc
xchg
or
sub
dec
push
jl
add
sar
ds
jns
enter
mov
jns
mov
fldl2t
outsb
xchg
lds
xchg
mov
jle
xor
insl
sbb
push
xchg
and
sub
or
or
rcll
bound
add
mov
jne
das
divb
scas
adc
dec
lret
out
xorb
push
aad
adc
test
mov
ret
movsb
mov
in
push
movsb
jbe
imul
and
shl
pop
movsl
notl
cmpsl
sbbl
pop
shll
out
pop
push
push
add
scas
rorl
ja
push
xchg
or
leave
imul
add
cmp
pop
cli
adc
cmpsb
inc
pop
icebp
hlt
jmp
cwtl
mulb
mov
pop
lock
ret
push
or
aad
cmp
mov
ja
dec
mov
jae
andl
xchg
bound
test
out
xchg
idiv
jp
adc
test
clc
pushf
lret
jle
ds
adc
call
adc
into
inc
test
pop
icebp
and
daa
pop
sub
outsb
sub
jg
fs
cltd
outsb
adc
pop
dec
jo
and
push
into
mov
inc
cmpsl
int3
es
mov
test
mov
clc
popa
xor
mov
cltd
in
pusha
popf
fwait
rcrl
xor
pop
xor
adc
insl
and
mov
jb
mov
sbb
push
inc
inc
push
mov
push
and
adcb
je
dec
std
outsl
in
cmc
mov
in
push
mov
jge
lods
pop
clc
std
mov
lcall
xlat
pushf
add
sbb
out
mov
out
repnz
sub
pop
mov
mov
test
dec
cmpsl
mov
pushf
inc
bound
mov
xor
push
fisttpl
add
add
repz
es
jnp
push
adcl
cli
jle
leave
std
mov
mov
and
lcall
xchg
cltd
subb
pcmpgtw
test
jo
lods
fists
sahf
sub
js
mov
icebp
movsl
mov
and
add
mov
jbe
scas
inc
aas
xchg
loope
movsb
cmc
adc
outsb
xor
in
mov
cmc
lret
fsts
ja
pop
xlat
cmpsb
xor
lods
mov
cmp
and
nop
pusha
insb
inc
dec
or
and
and
mull
out
mov
dec
ljmp
leave
push
popf
adc
xor
idivl
in
add
sti
add
subl
jno
xchg
ljmp
push
jecxz
ja
fwait
pop
in
into
dec
cmp
mov
das
aaa
mov
dec
sbb
mov
subl
adc
xor
mov
xchg
dec
lret
loopne
fsubr
push
mov
jl
cmp
adc
ret
pusha
xor
add
push
ja
cmp
incb
cmp
xlat
push
mov
cli
outsl
dec
int
push
push
xor
stos
xchg
xchg
inc
mov
in
mov
push
mov
arpl
sbb
sub
orb
xorb
mov
call
xchg
mov
mov
imul
mov
int3
inc
jo
mov
dec
jmp
adc
pop
sbb
roll
mov
mov
cld
add
mov
aaa
push
or
dec
dec
lret
lret
jp
dec
cltd
hlt
orb
push
mov
dec
cmpsl
mov
ljmp
in
inc
pop
xor
bound
inc
fnstcw
loop
mov
mov
enter
lret
clc
scas
flds
cmp
mov
fsubr
lock
xchg
dec
ja
data16
cltd
sti
ret
mov
jno
cmc
inc
enter
add
add
mov
lahf
cmpsl
out
or
cmp
rolb
add
lret
push
shll
into
cmp
and
insb
clc
outsl
mov
enter
pusha
push
adc
lret
lea
ja
jg
imulb
sbb
xchg
repnz
ffreep
stc
cmc
arpl
aad
pop
filds
add
je
add
jne
outsl
mov
mov
inc
das
hlt
xchg
cmpsb
push
bound
fstpl
test
jo
push
mov
ljmp
fwait
add
std
and
mov
ljmp
jo
out
adc
adc
xchg
jle
mov
loop
adc
dec
fcompl
dec
jne
and
xor
pop
lods
repnz
rcr
jae
lds
sti
jecxz
into
loopne
repnz
xchg
adc
or
jns
or
jmp
push
leave
or
gs
pushl
sbb
jo
mov
or
aaa
cmp
jmp
and
push
repnz
inc
mov
loope
mov
inc
push
sub
push
sbb
fisubs
mov
ror
inc
push
out
addr16
incb
sbb
xchg
mov
rcr
xchg
lea
cs
fwait
cs
lcall
repnz
push
mov
mov
arpl
jae
aam
arpl
or
mov
dec
jno
push
test
xor
and
and
ss
push
js
xchg
dec
jp
sub
and
insl
fisttpll
sub
scas
outsl
jnp
xchg
pop
inc
push
cld
pop
gs
and
mov
sar
lds
aad
sbb
bound
inc
test
leave
fwait
les
cld
or
mov
je
arpl
test
mov
shl
int
insl
cmp
in
mov
jle
testl
outsl
dec
xchg
or
mov
mov
or
bound
adc
xchg
sub
aam
inc
sub
xchg
lock
aam
and
push
arpl
mov
xor
adc
test
and
mov
dec
gs
jnp
mov
insb
sub
arpl
jne
sahf
sti
and
lock
rorl
mov
sahf
and
mov
les
loope
jl
jnp
jecxz
inc
mov
dec
push
int3
test
xchg
and
lcall
sub
sti
push
sahf
repz
and
adc
cli
push
sbb
mov
dec
in
mov
hlt
popa
mov
jae
arpl
loopne
imul
movl
mov
dec
hlt
neg
hlt
movsl
xchg
inc
add
pop
scas
jne
adc
xor
sar
outsb
stos
push
pop
int3
add
mov
adc
insl
out
pop
add
cmp
dec
push
cmp
mov
sbb
sbb
fildl
stc
pop
pushf
xchg
jmp
cmp
sbb
or
push
pop
nop
mov
and
insl
call
push
getsec
shl
fsub
pop
jae
mov
mov
repz
xchg
xchg
iret
loopne
aaa
mov
add
test
push
sbb
cmc
xchg
stos
mov
mov
movsl
jne
adc
mov
and
lods
sub
mov
mov
sbb
sub
fnstenv
sbb
push
scas
mov
push
pop
adc
jo
mov
cmp
xchg
loop
iret
inc
shlb
stos
ss
dec
inc
dec
mov
ret
cwtl
jns
sub
popf
fildll
cmp
je
insb
cmpb
pop
mov
mov
ficoml
xchg
push
push
pop
icebp
ret
mov
push
int3
aaa
sar
add
popa
jmp
imul
inc
pminub
stos
fwait
mov
out
lods
movsl
fildll
jle
push
push
leave
mov
xor
sub
inc
adc
push
push
out
loope
mov
inc
xor
sbb
push
loope
sti
out
xor
add
and
jge
cmpsb
adc
sahf
jp
mov
mov
jae
mov
and
push
mov
ret
mov
or
hlt
xor
ds
inc
insl
mov
inc
xor
lds
cmp
jne
popa
lods
loopne
orl
mov
jl
sub
shll
and
and
mov
sbb
mov
jp
inc
imul
insl
and
and
cmp
sbb
jge
push
sub
test
movsb
xor
mov
pop
adc
cmp
fnstcw
int
fldt
mov
aad
jo
xor
pop
or
push
sub
test
pop
push
adc
lea
out
popa
std
push
shll
into
movsl
scas
scas
add
mov
fidivrs
xchg
dec
leave
add
es
js
pop
in
add
icebp
inc
add
cmp
sub
add
int3
jmp
fisubs
imull
lret
lcall
inc
cmp
jge
mov
pop
pop
xor
fnstcw
pop
sbb
inc
xor
cmp
sbb
push
jg
mov
lahf
mov
mov
lret
and
idiv
jae
lock
push
frstor
clc
xor
orb
xor
shrl
subl
push
mov
mov
fildl
dec
jl
sbb
lcall
and
adc
jne
cmp
rolb
fdivrs
lock
pop
pop
dec
hlt
iret
xor
mov
in
add
push
xor
push
mov
xor
ja
dec
cmpsb
push
sub
cmp
mov
push
sbb
mov
sahf
cmp
xlat
inc
incb
adc
mov
mov
inc
jae
pop
cmpl
cmp
push
into
or
push
int3
iret
test
aaa
out
dec
imul
cwtl
out
movsl
adc
push
sbb
xorl
mov
sbbl
mov
jne
and
jecxz
mov
inc
sub
push
push
mov
sub
imul
mov
and
iret
dec
int3
cmp
push
xchg
out
xchg
enter
loop
mov
and
xor
test
in
test
mov
sub
outsl
int3
shrb
add
aam
adc
inc
leave
outsb
jmp
scas
les
fsubrp
push
sbb
pop
sbb
fnstenv
and
arpl
xor
rol
test
aas
cmp
push
add
xor
dec
xchg
mov
sbb
pop
jo
call
ret
mov
cmp
iret
xor
sbb
dec
flds
xlat
test
cmc
outsl
out
xor
add
pop
jo
ja
and
adc
inc
out
in
fildl
mov
mov
jp
mov
in
add
pop
nop
sub
cmovb
sub
stos
jl
outsb
or
insb
cmp
sbb
mov
add
adc
jp
into
xor
and
sarb
lcall
sti
push
jno
or
clc
adc
adc
mov
cmc
xchg
jl
jl
test
and
repnz
arpl
shll
mov
jbe
dec
les
sbb
mov
fsubl
adc
add
inc
clc
jle
mov
jmp
fildll
je
pop
aaa
pop
int3
notb
shrb
pop
sub
pop
jae
inc
pop
lea
dec
leave
dec
jl
jbe
ficomps
mov
mov
jae
and
clc
inc
mov
jecxz
pop
cwtl
scas
inc
cmp
mov
jecxz
jbe
iret
push
je
dec
repz
aas
cmp
dec
leave
sbbl
out
pushf
aaa
mov
jnp
push
addb
es
xor
ffree
or
stos
mov
adc
dec
dec
ficoml
aas
stos
test
adc
cmp
aad
push
xchg
dec
sbb
pop
push
jge
shrl
loope
xchg
ljmp
test
or
jecxz
aam
mov
loop
loope
cmp
cmp
jg
lock
sbb
xor
gs
xchg
or
or
cmp
dec
enter
jne
insb
sbb
mov
nop
xchg
pop
sbb
fsubl
outsb
pusha
or
xchg
out
fs
in
sbb
icebp
in
ljmp
mov
dec
subb
xchg
xchg
imul
scas
mov
mov
push
ljmp
hlt
imul
push
std
adc
jns
xlat
mov
push
adc
adc
add
fisubl
push
add
ret
jbe
adc
mov
sbb
xchg
push
add
jle
push
ret
aaa
cmp
jl
aad
mov
scas
pop
stos
les
sbb
test
add
cs
xchg
mov
and
pop
jl
mov
adc
mov
mov
xchg
cmp
pop
arpl
scas
sbb
rclb
pop
mov
pop
mov
jg
gs
xchg
or
cli
sbb
jmp
imull
cmpsl
and
sbb
fnstsw
sub
pop
mov
dec
cmc
inc
adc
lds
ljmp
fs
pop
popa
fistl
es
jb
xchg
and
and
iret
cwtl
dec
inc
movsl
push
fbstp
das
mov
fldl
add
jnp
mov
adc
inc
adc
ror
xchg
pop
mov
jecxz
test
fidivs
fildll
repnz
adc
cld
ja
pop
fldl
cmc
jg
mov
ror
les
push
andl
jl
xor
mov
adc
adc
push
cmp
inc
xchg
or
push
xchg
clc
insb
pop
data16
mov
shrb
push
popa
xor
xor
push
lods
test
cmpb
sbb
push
pop
pushf
scas
sub
repz
jecxz
dec
mov
push
jae
out
stos
out
cmc
popf
mov
sti
cwtl
lcall
nop
sbb
sub
stc
pop
bound
pop
dec
mov
sub
fdivl
js
sbb
jnp
pop
fcmovnu
mov
push
jo
test
movsb
in
dec
jg
sub
mov
pop
fnstenv
out
sub
or
movsl
stos
fstl
pop
scas
addr16
je
cmpsb
std
fisubl
mov
and
test
sub
inc
pushf
mov
xchg
push
push
sub
mov
stc
je
sbbl
lret
movsl
mov
adc
std
dec
push
insl
lahf
jp
jmp
lock
inc
aas
ret
addr16
fwait
cmpsl
cmc
pop
jp
mov
sbbb
lds
cmp
mov
jg
sub
cs
sti
jbe
lcall
pop
jbe
jns
fisttpl
dec
out
lods
in
jnp
aam
add
fists
scas
dec
pop
pop
mov
in
shlb
loop
lcall
adc
popf
outsb
insl
sti
or
mov
loop
sub
out
movsb
and
mov
sbb
mov
adc
sbb
pushf
movl
sbb
cli
push
dec
cmp
push
es
inc
lods
dec
mov
mov
mov
mov
xchg
cltd
fcoms
rolb
lods
jo
or
pop
das
mov
mov
jb
mov
jbe
lds
xchg
jae
jb
testl
mov
nop
out
lcall
mov
xor
sub
mov
mov
mov
enter
imul
adc
jmp
jmp
outsl
sbb
lret
insb
cmp
jmp
into
sbb
gs
add
popfw
stos
or
or
xor
popa
mov
sbb
push
push
ljmp
fldt
ds
icebp
or
mov
adc
shrl
xchg
and
jb
inc
loope
gs
adcb
cmp
shr
jne
lds
push
incl
frstor
sti
adc
into
jmp
pop
push
sbb
inc
dec
add
movsb
and
popf
imul
shrl
xchg
jp
mov
cmp
fdivp
or
sbb
into
xor
cmp
ja
xchg
test
sar
cwtl
jne
daa
add
jno
rep
pop
xlat
scas
jne
call
push
clc
aam
js
and
aas
ret
add
loop
sahf
push
mov
xor
inc
or
std
add
pop
aaa
jg
imul
xor
fadds
pop
ss
das
mov
stos
arpl
jno
mov
push
enter
add
iret
jmp
cltd
cmpsb
scas
cmp
fadds
int3
leave
xchg
out
adc
jle
cmp
notl
pop
xchg
mov
mov
cwtl
mov
mov
xchg
dec
pop
and
loope
cwtl
stos
popa
out
sbb
bound
mov
push
les
loopne
jnp
cmp
xchg
ds
andb
jbe
push
pop
add
lock
jl
inc
loop
jg
sahf
outsb
cmp
pop
mov
jecxz
das
fnstcw
push
fisubs
notl
leave
lret
adc
push
jp
rorb
xor
imul
sahf
pop
arpl
jecxz
or
jo
cmpsw
into
cmpsb
je
popa
inc
lret
dec
lods
das
cmp
std
fnstcw
jle
fsts
xchg
xor
push
jbe
rclb
cwtl
sbb
adc
int
cli
mov
test
mov
inc
cmpsl
rcrl
mov
lahf
bnd
nop
shr
mov
dec
xlat
out
and
inc
jge
movsl
pop
lods
repz
xlat
cwtl
xor
stos
xchg
ds
inc
inc
inc
bound
fxch
pop
addr16
xor
and
xor
ja
or
shlb
pop
stos
aam
lock
jae
mov
add
movsb
jecxz
mov
mov
sub
stos
cmpsb
adc
test
jg
popf
cmovl
jecxz
mov
mov
cld
shrb
cs
jge
inc
shr
addr16
xchg
sbb
jae
xchg
nop
fmull
iret
mov
sub
insb
pop
mov
jg
jbe
fists
arpl
mov
dec
jge
insl
int3
mov
jge
xchg
cmp
movsl
ret
mov
cwtl
and
stos
rcl
test
push
sub
dec
dec
aaa
loop
addr16
xor
cmp
jg
mov
xchg
fsubrl
mov
cmc
inc
xchg
inc
repz
add
mov
cmp
jp
das
cs
fucomip
jg
adc
jl
repnz
fimull
lods
cmp
sbb
ljmp
jl
cltd
fstpl
les
test
out
cmp
mov
adc
lds
xor
pop
outsb
test
les
icebp
dec
rcl
mov
orl
repnz
mov
outsl
push
sti
aas
and
das
cltd
or
nop
or
iret
sbb
mov
push
and
insl
neg
lods
cwtl
ss
pop
xchg
in
xor
cli
add
inc
movsl
lods
icebp
xlat
sarb
ds
fdivrl
je
pop
js,pt
outsb
pop
jl
mov
je
mov
je
gs
adc
dec
fnstsw
sub
cs
pop
imul
mov
icebp
xchg
fwait
int3
cmc
ss
mov
push
mov
sbb
fisttps
push
icebp
stos
in
pop
lock
sbb
cld
sahf
jp
shll
call
mov
pop
sbb
lcall
ffreep
repz
lret
jno
loop
push
jne
loopne
xor
daa
add
add
push
xchg
mov
cmp
jle
sbb
lock
sbb
add
lock
jp
dec
mov
insl
adc
pop
aaa
jl
sbb
add
loope
add
xchg
arpl
movsl
push
sti
push
pop
arpl
inc
inc
hlt
inc
clc
hlt
or
sub
js
pop
mov
inc
jno
mov
lret
and
jno
je
push
out
popf
mov
jbe
mov
fs
inc
dec
add
js
jb
xchg
lahf
adc
les
push
and
xchg
out
pop
in
mov
add
lcall
jmp
outsb
and
repz
jl,pt
sub
roll
rcr
or
push
or
inc
jecxz
xor
xchg
ljmp
jno
inc
mov
cmp
jl
xor
mov
xchg
dec
lcall
das
movb
push
xor
int
stc
and
loope
sbb
cwtl
jno
pop
jno
lahf
mov
jno
add
inc
push
xchg
mov
test
jne
cmc
negl
shr
in
flds
fsubrs
les
fiaddl
cld
fcmovnbe
movsb
add
cld
jg
sub
inc
fmull
mov
jns
sahf
rorb
dec
test
mov
mov
jbe
adc
fdivs
out
mov
xchg
fistpll
adcl
pop
sub
jb
popa
xlat
mov
xchg
jne
addr16
push
mov
jns
or
shrl
mov
fldcw
pop
sbb
xorl
pop
aas
pop
adc
dec
jmp
out
idivl
shr
pop
popa
fnsave
inc
mov
js
jg
inc
repz
mov
xlat
inc
push
data16
pop
push
jmp
cltd
in
jns
int
or
sub
repnz
test
sub
pop
test
fs
inc
ret
xchg
inc
fdivp
push
inc
test
daa
lds
idiv
fadds
bound
push
iret
xor
int
call
sbb
mov
push
xchg
jge
pop
fs
gs
push
fwait
rol
jmp
mov
jbe
cmpsl
mov
inc
cmp
fbstp
cwtl
mov
sbb
leave
fcom
lahf
into
xchg
sarb
xchg
stos
xor
jmp
ret
ljmp
lret
sti
pop
negl
or
push
fwait
roll
in
xor
std
incl
pop
dec
ret
cltd
in
pop
jmp
das
stos
gs
mov
lret
out
mov
mov
pop
pop
xor
out
mov
cltd
sub
cmp
fwait
cmpl
inc
push
xchg
loope
movsb
jmp
mov
xcrypt-cbc
cmpsl
mov
inc
das
daa
icebp
pop
test
add
fnsave
fnstcw
bnd
stc
test
push
cvtps2pi
add
fdivp
pop
xlat
shrb
sbb
mov
mov
sub
sbb
call
push
jmp
jle
jg
mov
sbb
fisttps
xlat
lock
inc
pop
rorb
xchg
dec
gs
mov
mov
ds
cmpsl
mov
mov
addr16
mov
int
adc
xor
inc
push
sub
idivb
jg
nop
xor
pushf
ja
push
jae
popf
mov
int
adcb
ss
add
jecxz
ds
in
jl
lock
fists
mov
fcmovnu
inc
adc
push
notl
aad
push
out
add
loope
pop
xor
push
pop
add
xlat
pop
mov
cs
xchg
cmp
ja
pop
hlt
iret
mov
push
pushf
out
sub
add
jmp
ret
lcall
inc
sub
test
add
ja
or
imul
dec
sarl
xor
push
push
lock
pop
jmp
in
ret
mov
outsb
ret
push
pop
rcl
inc
in
lea
loop
cmp
mov
int
xchg
xchg
adc
icebp
pop
adc
xchg
sub
mov
sub
jno
mov
inc
xchg
xor
sbb
dec
js
cmc
imul
notl
mov
leave
negl
shrb
test
push
loop
shll
cs
pop
dec
outsb
cmp
loopne
rolb
sbb
or
sbb
sti
imul
push
or
xor
jns
mov
inc
push
dec
cs
es
xchg
movsl
push
cs
std
xor
dec
in
dec
jbe
out
sbb
or
lret
xchg
movb
addr16
sub
jb
sarl
jecxz
ljmp
outsl
dec
pop
ljmp
cli
mov
dec
push
imul
dec
inc
std
xor
call
sbb
int3
enter
clc
mov
xchg
bound
cltd
dec
mov
inc
cld
out
adc
dec
popf
lret
rclb
cwtl
xchg
andb
jbe
xchg
shlb
push
pop
inc
mov
push
pop
decb
or
lds
int
lahf
aad
in
out
aaa
lea
jne
sub
cmpsb
std
in
lcall
mov
clc
jmp
mov
xchg
jno
jmp
pop
sti
jo
gs
cmp
js
add
jns
xor
pop
mov
pop
cwtl
loopne
xchg
outsl
add
movsb
mov
pop
sbb
hlt
adc
testl
adc
out
xchg
test
jl
adc
cmp
js
xchg
iret
stc
inc
flds
pop
pushf
in
daa
popa
xchg
stos
arpl
jne
mov
jo
in
hlt
sub
jg
shrl
insl
sub
mov
push
push
jmp
setno
movb
insb
sahf
inc
and
push
mov
insl
iret
aam
in
test
xchg
fiaddl
sbb
xor
dec
or
leave
sub
inc
in
jbe
sti
into
push
clc
mov
cwtl
inc
jle
stos
shrl
adc
push
movsb
movsl
cmp
test
sbb
daa
dec
cmpsb
lods
stos
adc
dec
pop
xor
xchg
mov
in
push
test
out
loop
push
ret
inc
bnd
es
repz
test
sub
in
or
repz
stos
push
and
cltd
and
mov
cs
lock
ret
push
mov
jno
nop
jg
imul
out
xlat
ficompl
adc
push
cmp
outsl
pop
scas
xor
push
jl
cmp
in
imul
addb
sub
clc
addr16
test
adc
mov
mov
mull
es
jb
fimull
xor
aam
xor
xchg
out
inc
jp
dec
push
push
push
lods
pop
jbe
ss
inc
mov
les
and
lods
not
mov
sahf
cmc
bound
loopne
fnstenv
loopne
jnp
sub
pop
adc
add
xchg
push
sub
fisubs
aas
outsl
push
ljmp
adcl
cltd
stos
nop
and
stc
into
insl
dec
jbe
out
syscall
loop
cmp
add
jg
aam
lds
mov
mov
cmp
pop
mov
sbb
sub
dec
push
ja
dec
ret
jo
mov
in
hlt
int
sbb
out
out
adc
neg
jo
mov
or
fs
mov
movsl
into
and
lds
mov
es
test
push
lahf
cmp
out
sub
stos
xor
imul
add
dec
jns
push
add
push
lods
les
subb
adc
inc
inc
lcall
pop
cwtl
push
nop
jmp
sbb
jo
mov
mull
sub
cltd
xlat
dec
rsm
add
mov
negb
dec
and
cmc
cltd
sub
adc
bound
sbb
xchg
sbb
sahf
or
lods
das
dec
sbb
mov
add
int3
push
push
pop
pusha
cmp
push
mov
mov
mov
orl
push
xchg
jmp
das
or
or
push
inc
cmovo
daa
mov
or
jns
pushf
jg
movsl
push
jnp
jno
rclb
cli
cmpsl
pusha
dec
stos
push
loope
in
lods
push
pop
xchg
or
dec
imul
xor
movsb
rclb
arpl
inc
mov
and
fistps
push
xchg
sarl
faddl
push
in
scas
in
cmp
sbb
in
mov
lock
loope
pop
mov
pop
push
mov
pop
sahf
jns
jp
and
sub
mov
pop
iret
sbb
push
adc
fldenv
push
test
inc
or
mov
std
add
add
mov
in
test
int3
testb
xchg
push
xchg
inc
and
js
je
xor
popf
sbb
xor
pop
pop
sub
js
push
pop
xchg
mov
and
cmp
adc
orb
andb
lods
or
mov
lods
clc
push
imul
xor
cmp
mov
cmp
repz
xchg
ds
and
lahf
test
add
enter
adc
and
dec
stos
aam
xor
leave
xchg
rolb
sti
xchg
aaa
mov
inc
test
fsts
dec
jne
sti
stc
or
cmovg
xchg
cld
xchg
jecxz
pop
xchg
add
sbb
loop
jge
or
sbb
push
int
mov
push
sahf
mov
mov
aam
cmpsl
mov
jl
inc
cmp
lcall
insb
sti
push
add
pop
push
xor
push
pusha
pop
sbb
scas
jl
jecxz
mov
adc
jns
not
xchg
ret
pop
sbbb
cli
cld
loopne
setp
es
test
adc
out
loop
pop
jg
cmp
les
cmp
orl
pop
outsb
jne
or
add
xchg
cmp
cmp
mov
or
idivl
pop
xchg
stos
or
addb
push
mov
movlpd
push
add
pushf
arpl
fldenv
leave
mov
mov
ljmp
jnp
fisubrl
mov
mov
popa
jbe
mov
mov
int
andl
jmp
cmc
pushf
mov
data16
xchg
cmc
dec
pop
es
imul
out
into
rol
dec
icebp
orl
push
mov
in
outsl
add
add
xor
xor
xor
negb
sbb
cwtl
ss
xchg
adc
xchg
dec
mov
or
movsl
mov
mov
jno
fs
pop
lahf
outsb
stos
es
jecxz
add
fildll
cmp
mov
pop
std
scas
clc
xor
dec
cwtl
int3
sub
and
sti
shlb
sub
pop
sub
adc
mov
xor
jmp
repnz
es
mov
shrl
fidivl
cltd
push
mov
adc
cmpsb
in
sub
and
xchg
cld
mov
mulb
and
jp
test
cmpsb
arpl
pushf
js
xor
stc
mov
gs
xor
xchg
mov
mov
cmc
filds
sub
bound
orb
sbb
aad
std
inc
hlt
sbb
imul
ss
fldl
push
mov
dec
sar
pop
sub
popf
iret
sarb
sbb
lcall
loopne
xchg
pop
inc
test
stos
movsl
ss
xor
cmovno
test
cmp
dec
mov
cld
popl
mov
mov
cmp
loopne
lret
dec
adc
in
cmp
xor
and
fadd
cltd
imul
mov
or
push
add
pop
pop
jo
add
xchg
fwait
adc
push
test
out
mov
ret
insl
movsl
test
dec
cs
nop
pop
les
mov
bnd
std
insl
pop
movsb
std
or
int3
mov
fcmovbe
call
jnp,pt
jge
mov
repnz
daa
mul
dec
or
pop
jmp
push
fsubrl
sub
lods
dec
pop
xor
cmpb
dec
inc
fstps
inc
jo
xchg
sub
xchg
xchg
imul
dec
ss
icebp
mov
push
in
lock
sbb
push
loop
sub
mov
xchg
decb
pop
xchg
xor
or
mov
das
bound
imul
add
fs
adc
cmp
add
sbb
xor
jnp
xor
or
dec
fcompl
mov
jmp
sub
bound
inc
insb
inc
fsubs
xor
int
xchg
adc
scas
rcll
and
jl
adc
loop
xor
ret
mov
repz
and
push
stos
popf
jecxz
mov
shr
je
and
loop
je
xchg
int3
cmpsb
cmpsl
pushf
or
xlat
jle
notb
stos
xchg
les
mov
rcrb
aaa
ljmp
fwait
mov
dec
popf
inc
mov
out
mov
adc
sbb
mov
mov
push
adc
sbb
sbb
xor
jl
dec
pop
jae
mov
mov
test
mov
mov
xchg
test
jbe
outsl
gs
or
push
les
push
sub
ds
cs
jbe
pop
nop
push
xlat
hlt
sub
cli
or
in
test
and
xchg
and
sub
roll
sti
jbe
dec
mov
clc
jle
jae
mov
mov
xchg
aam
fwait
sub
jge
jmp
subb
scas
push
sbb
shll
loope
cmp
mov
add
loopne
xchg
xor
pop
ja
or
mov
push
push
inc
push
gs
sahf
addr16
push
jg
in
aaa
subl
cmp
and
lods
cmp
sbbl
lahf
mov
xor
mov
gs
out
jle
movsl
call
inc
pop
adc
inc
aad
mov
cld
inc
adcl
sub
aas
sub
xor
loope
cmp
jmp
lcall
mull
pop
add
inc
jne
mov
sub
mulb
or
mov
dec
cmpsb
leave
mov
push
das
scas
inc
sub
adc
xor
pop
jbe
imul
addr16
mov
aad
mov
push
adc
mov
mov
fwait
lcall
fdivrs
arpl
xrelease
call
test
in
aas
clc
xchg
push
and
jmp
xchg
lds
or
fisttpll
les
lahf
rolb
lods
enter
int3
push
adc
cmp
pop
or
mov
sbb
sahf
or
nop
in
fs
xchg
fwait
xor
daa
adc
sbb
jle
xchg
sahf
cwtl
ss
sub
pop
mov
and
test
lock
cld
into
xor
mov
int3
dec
xchg
loopne
stc
dec
inc
mov
xor
mov
push
or
stos
add
cmp
mov
cmp
add
xchg
inc
or
ja
mov
inc
repz
lahf
xor
or
int
stc
adc
add
dec
push
mov
jle
out
push
das
sub
or
daa
repz
fcmovnu
jb
mov
push
adc
jnp
dec
mov
mov
hlt
cmp
mov
enter
pop
loop
jmp
pushf
es
in
xor
mov
pop
fidivrl
push
push
mov
lret
ret
dec
adc
out
aaa
xlat
fcmovbe
cld
xchg
mov
pop
adc
sub
lahf
pop
out
jb
add
pusha
inc
imul
adc
pop
clc
and
pop
sbb
cli
xor
pop
and
dec
add
fsubs
mov
imul
cli
or
lea
cmp
adc
pop
xor
dec
adc
sub
or
cmp
sub
sub
mov
pop
loop
or
stc
mov
dec
aas
adc
out
sub
or
nop
decl
popf
ret
int
ffree
insl
lods
xchg
clc
orb
xchg
mov
shl
sub
aaa
imul
adc
push
fidivrs
xchg
push
mov
inc
enter
xor
dec
mov
sarl
imul
pushf
lret
negl
jg
add
test
arpl
cld
xchg
sar
jmp
rorb
mov
mov
cmpsb
and
loopne
das
test
or
jmp
imul
push
lahf
fidivl
and
movsb
rol
iret
adc
sbb
imul
mov
sti
ret
mov
mov
nop
push
and
mov
imul
loope
test
jo
fnstenv
cmpsl
or
fs
ret
setge
leave
mov
lods
pop
inc
shll
push
rcll
mov
xor
lahf
cmp
or
mov
xlat
or
pop
dec
xchg
lds
ret
dec
inc
pop
sub
ljmp
nop
je
mov
mov
rsm
xor
cs
punpcklwd
test
xor
out
cwtl
shlb
cmp
xchg
out
loop
cmp
dec
insb
fucomp
vpcomud
call
inc
test
add
mov
lahf
cmpsl
pop
mov
fistl
jnp
ljmp
arpl
out
mov
push
or
mov
mov
pusha
sarl
shlb
ljmp
xchg
loope
fsub
xchg
aaa
mov
sbb
mov
arpl
cli
xchg
out
imul
repz
adc
or
imul
nop
dec
aam
lods
mov
mov
leave
int3
and
lret
sub
pop
xor
dec
pop
fwait
jg
lret
fsubrs
add
call
sahf
clc
dec
cli
scas
stc
sti
jne
pop
stc
insb
dec
xor
out
cld
mov
jge
data16
dec
jae
push
pop
pushf
scas
jno
sbb
fistps
push
shrb
pop
jae
les
sbb
shrl
push
mov
jle
or
sbb
xchg
sbb
in
sbb
lods
and
sbb
add
fcom
les
sub
mov
push
push
aas
mov
dec
xor
loope
pop
stos
xor
sub
inc
mov
mov
jnp
and
cld
or
imul
cmpsl
mov
adc
aam
push
arpl
lea
addl
popf
jb
dec
cltd
cltd
pop
jecxz
test
mov
mov
push
xor
cltd
into
xchg
add
lea
add
mov
das
pop
fimuls
sub
sarb
leave
sub
arpl
mov
and
inc
aaa
imul
arpl
inc
sbb
cmp
sbb
push
mov
sub
test
arpl
repz
mov
push
lcall
test
jo
adc
insl
sub
xor
shrl
out
loop
sub
sbb
xor
sbb
and
sahf
sub
xchg
movsl
pop
push
sbb
fildl
mov
int3
iret
xchg
cli
sbb
jno
mov
sbb
icebp
lods
xchg
push
repnz
ds
mov
mov
sub
adc
inc
or
xchg
and
mov
cwtl
cmp
mov
popa
scas
es
sti
pop
dec
pop
pop
cli
inc
jne
xlat
lret
int
pop
ret
popf
out
stos
scas
add
cmp
fildll
int
sub
jne
mov
daa
jns
xchg
jmp
xchg
sbb
adc
xor
xchg
and
mov
or
out
loop
xlat
pusha
or
shlb
and
out
dec
hlt
xchg
mov
lds
sarb
dec
mov
ja
and
xchg
mov
addr16
cmp
nop
pop
jno
popa
xor
in
jo
pop
dec
pop
sub
iret
jbe
cwtl
adc
mov
xor
inc
push
out
push
cld
dec
pushf
call
push
shrl
fnstenv
jns
sbb
cltd
das
out
xchg
lcall
iret
dec
int
adc
and
out
clc
sub
push
adc
in
enter
ds
jle
sbb
mov
mov
sbb
in
ss
fiadds
ret
or
pop
dec
sbb
arpl
sbb
xor
ret
jnp
stc
and
les
enter
je
jnp
std
jp
sbb
mov
scas
sar
pop
inc
movsb
cld
mov
mov
shr
testl
testb
shll
outsl
and
inc
cmp
call
inc
mov
pop
sbb
cs
sarb
mov
frstor
lock
movsb
mov
ret
push
rcr
mov
jp
cmp
lock
mov
jge
sbb
xchg
mov
mov
mov
xchg
xchg
je
xchg
add
sbb
es
push
pushf
pusha
subb
dec
divb
iret
cli
lea
lret
call
mov
dec
or
inc
add
jbe
gs
jmp
push
data16
daa
jne
fnsave
out
push
daa
fdivl
into
rolb
mov
mov
pop
mov
mov
sbb
cs
iret
xor
scas
and
mov
xchg
fwait
out
xchg
pushf
sbb
aam
inc
adc
cmp
les
jo
push
fidivrl
pop
aaa
mov
stos
push
mov
in
ja
mov
leave
mov
adc
sahf
lock
dec
xlat
inc
out
lahf
ljmp
test
and
jb
mov
jns
dec
push
repz
lret
outsl
sbb
leave
cmp
sbb
xchg
adc
mov
pop
ret
cmpsb
push
xor
sbb
jmp
inc
shr
dec
mov
inc
add
push
fxch
loopne
sti
addr16
frstor
addb
nop
mov
lock
into
test
lcall
js
mov
insb
dec
sub
xchg
lret
xchg
iret
or
call
add
scas
enter
aaa
insl
or
xchg
cmpsl
pop
xlat
mov
push
mov
push
ss
lods
mov
pop
jno
pop
repz
cmp
add
mov
jl
fildll
mov
dec
cli
in
in
movsb
sub
shlb
adc
sbb
das
dec
sarl
fwait
inc
xor
sbbb
mov
call
pop
dec
mov
pushf
adc
sbb
test
ljmp
insl
add
xchg
aad
cmp
stos
stos
popf
lods
dec
fdivrs
iret
fsubrs
call
jnp
pop
mov
jo
outsl
sbb
cli
gs
mov
xchg
sbb
jle
xor
add
sbb
dec
mov
cli
in
jp
ja
sbb
mov
nop
push
in
xor
arpl
faddl
jbe
ljmp
hlt
loope
adc
pop
data16
in
movsl
ljmp
ret
imul
daa
test
out
out
push
aam
out
lods
mov
pushf
nop
jnp
adc
iret
stc
pop
adc
mov
fcmovnu
cmp
jl
les
int
mov
and
iret
xorl
stos
cmp
in
mov
xor
loope
inc
xchg
rolb
stc
fstpt
adc
mov
popf
std
stos
dec
push
jb
in
ja
push
lods
pop
int
xchg
push
adc
jp
jb
cltd
lret
nop
popf
mov
or
push
daa
iret
inc
inc
loope
ljmp
xchg
fsubrl
mov
cmp
aad
notl
adc
sbb
add
dec
sub
fs
cltd
mov
lret
xor
dec
fisttpll
mov
sub
lds
xor
test
pop
xchg
and
sub
orl
cmp
loopne
sub
aas
jle
pop
fistps
test
icebp
sub
mov
loop
das
call
xchg
lds
out
arpl
mov
adc
lahf
iret
cmp
lock
push
mov
push
inc
outsl
subb
rol
les
push
loop
loope
mov
inc
pushw
mov
lret
lea
sub
loope
inc
movsl
loope
jg
lahf
lods
mov
mov
fwait
rorb
add
mov
test
and
gs
loop
sub
jp
divb
push
push
test
loop
fyl2x
mov
insl
and
push
cmp
inc
test
ret
push
je
rol
cwtl
es
jmp
adc
leave
xor
cwtl
add
jmp
fildl
cltd
inc
add
mov
jnp
cmp
lock
into
sub
sub
sub
xor
mov
sahf
sub
cld
aam
scas
dec
dec
loopne
sub
in
outsl
jmp
push
dec
aaa
pop
xchg
icebp
lock
inc
popf
mov
add
xor
aaa
xor
aad
es
or
jge
aam
xor
cld
jg
or
or
movsb
push
push
xor
xlat
mov
movsl
testl
push
inc
adc
fidivrs
fsubl
movzbl
add
mov
or
fwait
dec
fcompl
mov
repnz
rol
js
sbb
cmp
mov
rolb
pop
cmpsl
addr16
sbb
pop
xor
sub
dec
lods
aad
ja
inc
lcall
ss
mov
cld
outsl
cli
imul
xchg
sub
fwait
xor
jmp
add
add
jl
fstpl
sub
das
test
lock
dec
rcll
jne
mov
adc
fadds
rolb
cmpsb
fsubr
jge
les
sub
inc
cwtl
scas
popa
fisubl
adc
sbb
sub
addr16
push
fs
mov
cmp
stc
add
aam
push
lds
pop
sbb
out
mov
loop
aam
sub
or
push
fidivs
mov
int
ljmp
sub
lcall
pop
and
lods
pop
in
jne
sbb
clc
lea
nop
insb
and
aam
scas
mov
xor
xchg
mov
ds
sti
dec
inc
push
nop
inc
add
scas
cmp
mov
xor
xorl
lret
clc
jmp
pop
xchg
out
in
jg
outsl
int
es
popl
fsts
ds
add
cltd
ljmp
nop
scas
js
in
rclb
cwtl
jmp
je
in
das
mov
jns
lret
sbb
xor
jnp
jbe
cli
jl
dec
lods
movsb
and
ljmp
sub
movl
test
mov
push
mov
or
pop
loope
nop
or
dec
adc
mov
insb
jle
movsl
rorb
sub
scas
push
test
or
or
mov
rorb
in
insb
and
and
lea
popf
xor
sarl
push
ja
xchg
rcrb
jl
jmp
inc
and
sahf
or
mov
lret
xchg
movsl
sbb
imul
inc
shl
aaa
mov
push
or
jne
pop
and
push
xchg
sbb
stc
dec
push
fmull
lret
add
je
pop
jl
test
imul
xlat
clc
xchg
pop
bound
jno
jg
push
push
test
adc
mov
cmp
das
mov
sbb
pop
pop
scas
jge
sbb
bound
jle
push
pop
cld
jmp
arpl
xlat
incl
push
mov
xorb
xlat
es
jmp
subb
inc
addr16
roll
mov
sahf
sbb
inc
push
std
xor
in
cli
test
std
xor
jmp
es
addl
rorl
mov
psrad
jbe
push
inc
cli
insl
sub
out
call
lock
flds
into
out
or
mov
add
dec
daa
outsb
pop
xor
add
sbb
jo
push
mul
pop
cwtl
int
mov
mov
test
hlt
lock
arpl
gs
jle
stos
mov
mov
mov
cli
mov
mov
cmp
imulb
push
lds
cmpsb
sbb
mov
pushl
mov
adc
inc
dec
fisttpl
mov
fsubp
pop
in
fcomi
bound
mov
inc
aam
andl
loopne
std
hlt
test
out
pop
pushf
xlat
test
cs
nop
cwtl
xor
rol
aad
inc
xor
enter
or
xchg
pop
repz
or
loop
dec
jge
in
stos
lds
mov
cmp
inc
dec
sbb
dec
inc
rolb
cs
xor
xchg
jnp
call
test
fdivrl
or
ret
mov
sub
pop
sbb
xchg
push
js
nop
and
sub
sti
push
xchg
js
push
mov
add
clc
push
mov
lock
fwait
push
and
movsb
mov
int3
pop
out
and
push
rolb
sbbl
dec
leave
cmp
or
fistpll
mov
sub
test
jg
cmpsb
cmp
aad
lods
pop
push
add
or
and
sbb
jne
xchg
mov
das
lret
xchg
fwait
lret
xchg
out
push
lds
ja
and
outsl
pop
xor
rorl
in
push
mov
mov
bound
stos
sub
dec
xchg
pop
xchg
lea
mov
adc
push
ljmp
call
xor
icebp
dec
stc
test
lods
mov
repnz
cmp
and
bound
mov
pushf
in
ljmp
xchg
aas
xchg
hlt
fldenv
int3
sub
and
fdiv
lods
js
push
jge
out
jb
jg
bound
subl
mov
in
movsl
add
ljmp
dec
pushl
sti
mov
mov
xchg
nop
jp
add
mov
cmpsl
jbe
bound
jp
or
inc
les
mov
dec
js
push
sub
pop
dec
pop
not
aad
test
les
dec
dec
ret
in
in
push
daa
mov
mov
pushf
in
xor
enter
pop
aad
lea
test
and
mov
and
js
cmpsl
es
xchg
add
cli
pop
lret
aas
push
test
xchg
sahf
ret
scas
and
mov
lea
add
sbb
lock
cmp
xchg
shrl
or
ret
mov
mov
je
ds
mov
pushf
pop
sub
adc
mov
cmpsl
xor
push
sub
or
or
or
jle
hlt
ljmp
xchg
ljmp
pop
adc
mov
xchg
xchg
sub
ret
fidivl
adc
out
jge
dec
xchg
and
mov
jne
icebp
mov
shrl
sub
or
cs
push
inc
ss
das
add
test
shrl
xchg
insl
popf
rcrb
call
xlat
xor
sbb
mov
rcl
aas
jecxz
xchg
pop
out
push
movsl
lea
mov
gs
cld
mov
pop
adc
push
loope
stos
sarl
movsb
movsl
mov
js
xor
mov
sbb
jg
and
adc
inc
lcall
jns
jp
mov
jmp
jno
test
adc
add
sbb
rcrl
in
and
push
iret
push
adc
repz
sbb
sub
sahf
fcmovnb
out
dec
xor
in
pop
jne
or
cmp
test
push
mov
xchg
in
or
add
rcrl
cmp
push
inc
push
jmp
cmp
jge
mov
je
mov
shlb
xor
loope
outsl
mov
dec
pop
sti
xchg
mov
stc
shlb
xor
cmp
sarb
xchg
popa
scas
jne
sbb
jmp
jnp
addr16
popa
repnz
testb
orb
pop
call
add
cmpsb
dec
add
subl
test
call
mov
nop
and
adc
xchg
pop
stos
xchg
xlat
add
int3
mov
or
jle
push
mov
and
jno
dec
stos
xor
push
inc
push
xchg
insl
mov
mov
adc
andl
push
mov
mov
ss
inc
shrl
inc
insb
mov
push
adc
sarl
loopne
sarl
aas
pushf
sbb
aaa
lods
sub
pop
out
add
push
rcl
lret
cmp
into
push
fdivrl
mov
xchg
clc
arpl
or
jg
adc
xchg
mov
xchg
push
mov
subb
outsb
bound
lss
ret
adc
lods
sub
stc
gs
outsb
pop
mov
sbb
jecxz
outsb
bound
jl
std
cmp
out
stos
inc
nop
mov
cmp
orb
pushf
scas
pop
pop
icebp
cld
enter
cltd
pop
pushf
mov
daa
mov
mov
ret
out
push
push
jmp
dec
push
mov
add
push
push
push
inc
mov
leave
push
sbb
cmp
dec
inc
into
sti
push
mov
aaa
filds
inc
or
xor
std
mov
cmpsl
sub
add
mov
mov
mov
shll
ja
inc
jnp
mov
scas
fidivl
mov
dec
loope
in
pop
sbb
mov
or
inc
adc
push
lea
fdiv
mov
and
push
inc
jecxz
xchg
push
adc
outsb
fst
mov
in
sub
sub
inc
jge
in
ja
int
sbb
add
dec
mov
je
or
mov
xchg
out
in
cmp
icebp
clc
mov
add
fcoml
rcrb
loopew
jns
ret
xor
jl
add
push
adcl
add
push
mov
or
js
andb
ss
xor
mov
jb
cmovg
mov
pop
in
pop
mov
xchg
jg
push
scas
mov
xor
sbb
sbb
add
xchg
mov
popf
dec
pop
cmp
int
jge
in
push
stc
iret
xchg
lock
push
test
and
aad
decb
dec
movsbl
test
insl
sbb
dec
sbb
cmp
cmpsb
inc
fisttps
and
jl
xor
movsl
inc
pop
mov
add
jg
pop
outsb
insb
and
scas
push
popf
or
idiv
pop
xchg
mov
mov
sub
and
out
push
lods
jo
shl
clc
cs
ret
popl
pop
pop
cmpsl
aam
sbb
and
gs
sub
scas
mov
fmuls
lcall
fcom
cli
inc
imul
dec
bound
arpl
sub
jge
ja
xchg
dec
push
orl
add
mov
adc
nop
mov
outsl
lret
pop
cmp
sub
cwtl
outsb
adc
fcoml
imul
pop
mov
imul
out
cmp
test
pop
sbb
push
mov
aam
xchg
pop
scas
jmp
nop
paddusb
and
sbb
mov
inc
stos
pop
loope
pop
mov
mov
xchg
cmp
in
mov
mov
cmpsb
mov
or
mov
jle
xchg
mov
fcmovb
scas
xchg
shrl
sarb
inc
and
es
dec
je
cmp
inc
rclb
jp
lret
nop
sub
clc
std
sti
cmc
push
shlb
idiv
fadds
mov
mov
xlat
sbb
idivb
and
aaa
ds
jl
jmp
or
mov
icebp
add
adc
mov
cmp
and
aaa
sub
jae
push
notl
pop
pop
adc
push
imul
daa
lret
push
adc
jmp
ljmp
jmp
push
jge
aas
add
mov
pop
dec
das
cmp
push
push
test
cltd
sahf
push
lahf
mov
lahf
mov
mov
jb
sahf
and
enter
test
movsb
addr16
sub
sub
jmp
pop
out
cli
pop
aad
or
out
cmpsl
push
push
mov
ja
in
out
in
in
cmp
insb
cmp
movsb
add
imul
mov
inc
mov
shlb
and
pop
iret
je
mov
test
push
int
test
mov
sub
popa
and
outsb
out
mov
in
pavgb
aam
sub
jmp
ss
ljmp
sbb
adc
in
mov
out
iret
scas
and
push
fstl
xor
mov
inc
dec
inc
repnz
lret
ret
in
data16
and
xchg
lds
leave
dec
xchg
inc
shrl
adc
rdpmc
and
mov
ret
insl
iret
sbb
xlat
rcll
dec
idivb
mov
sub
cmp
jno
add
es
jge
imul
jno
jbe
sbb
fmull
xor
and
scas
addl
mov
mov
xchg
cmpsl
loop
jae
mov
sbb
hlt
or
mov
fstl
mov
sbb
gs
insb
mov
inc
divl
xor
xor
and
lods
push
popa
cmpsl
xchg
xlat
pop
jl
xchg
cmp
aad
xchg
dec
or
dec
mov
jg
sub
movsl
in
dec
ljmp
imul
sbb
push
mov
inc
add
or
aas
adc
jnp
jmp
xchg
push
and
push
mov
decl
push
mov
out
inc
cvtps2pd
cld
cltd
push
mov
xor
outsb
add
inc
dec
inc
out
and
std
in
andb
push
ss
and
test
mov
dec
cmp
xor
xchg
dec
outsb
cmp
push
out
lods
ss
adc
push
xchg
in
movsl
jb
and
sahf
es
notb
lea
inc
mov
test
inc
xchg
and
sub
iret
insb
dec
divl
cmp
pop
inc
or
sub
aas
adc
aas
cld
mov
adc
inc
ror
js
stc
xchg
xlat
lds
stos
nop
cmp
mov
push
mov
lock
rcrb
sbb
loopne
icebp
lods
jp
fbstp
mov
je
out
cmpsl
adc
jns
mov
stc
inc
mov
nop
add
pop
xlat
shll
and
push
dec
or
in
ret
les
push
dec
sub
fsubrp
fdivl
and
inc
sub
mov
sbb
cmc
std
and
jae
movsb
iret
stc
outsl
nop
out
lods
bound
push
faddl
mov
and
cli
lods
jo
jmp
dec
ljmp
out
lea
mov
push
mov
in
jo
out
mov
fiadds
cmp
movsb
fnstcw
mov
and
and
push
and
jbe
inc
pop
imul
add
clc
gs
bound
out
dec
stos
adc
cmp
jne
cmp
push
mov
shl
outsb
or
out
lock
dec
aam
adc
sbb
jg
fdivp
sub
pop
pop
scas
in
rcrl
xchg
push
pop
pop
pop
push
dec
mov
out
pop
cltd
flds
add
cmp
xor
in
repz
or
jecxz
idiv
xchg
shrl
cltd
popl
mov
jb
lods
jns
inc
pop
add
cmp
push
push
nop
popf
or
sbb
dec
cltd
dec
xchg
push
jno
roll
fcomps
je
lods
mov
loop
lea
mov
in
rcrl
clc
shrl
rcll
shrl
mov
js
jne
pop
call
cmp
cli
pusha
ja
jno
inc
sub
mov
mov
rorb
repz
out
pop
jo
andb
cmc
push
xchg
notb
lahf
or
lds
inc
push
jne
mov
scas
cmp
xor
out
push
scas
lahf
mov
or
jmp
cltd
mov
or
jo
lcallw
jbe
dec
iret
lea
push
outsb
lret
push
sbb
xchg
xorb
cmp
or
cmpl
add
dec
mov
jo
ja
xchg
xchg
mov
pop
jl
jnp
insl
jp
xchg
ds
mov
jmp
push
xor
fcmovnu
out
test
push
outsl
inc
sbb
outsb
pop
sbb
lods
jno
pop
mov
int3
hlt
std
fsubrp
nop
out
repnz
jecxz
les
insb
mov
xchg
pop
aad
imul
jp
cs
in
fcoms
xor
pop
outsl
add
aam
movsl
cmp
shll
mov
jne
pop
sbb
mov
ret
out
movsb
xchg
cld
dec
repnz
lret
loop
add
add
mov
jecxz
mov
dec
mov
lret
in
fnstcw
jno
lret
lods
fidivl
add
sbb
add
mov
pop
cmp
test
aam
fdivp
cmpsl
filds
pop
ja
popa
ja
xchg
test
cli
pop
lds
dec
adc
xchg
movsl
jle
ret
push
test
and
cmpsl
mov
xlat
sub
jmp
xchg
dec
das
cli
adc
xor
dec
cmp
xlat
cmp
imul
int
call
xchg
test
add
mov
pop
lcall
jp
andl
out
orl
mov
and
icebp
ret
test
push
orl
cmp
mov
sbb
dec
and
scas
pushf
and
inc
push
and
jl
aad
mov
xorb
int3
add
addr16
jmp
inc
ror
add
or
push
and
sub
add
jmp
sarb
repz
xor
jmp
aas
mov
jbe,pt
or
lock
test
insb
les
xchg
sub
mov
jns
loope
xchg
mov
bound
cmp
dec
adc
and
and
je
icebp
incb
repz
testl
mov
and
decb
pop
aam
cmp
xor
repz
jg
lret
ja
mov
lcall
cmpsb
and
in
shrl
adc
pop
nop
pop
std
inc
outsb
jne
adc
lods
imul
jle
dec
xor
loopne
mov
mov
jge
js
into
mov
mov
cli
enter
pushf
jbe
mov
gs
xor
xorb
xchg
fldcw
sahf
add
mov
dec
dec
xchg
test
leave
dec
adc
push
push
or
outsb
cmp
dec
insb
add
stc
add
cmp
dec
sbb
js
sub
fucom
mov
jae
in
mov
cmc
fdivrl
push
mov
lea
pop
jnp
mov
mov
arpl
leave
push
mov
xor
ja
xchg
mov
mov
add
push
sbb
sub
repnz
in
or
xchg
ret
push
inc
loope
xor
and
push
xchg
sbb
pop
jns
stc
arpl
adc
scas
mov
in
pop
aaa
cmp
stc
movsb
lea
cmp
cmp
inc
sbb
jmp
scas
lods
fisttpll
rcl
cli
xchg
insl
fwait
jb
xchg
notl
mov
jge
repz
ja
dec
pop
pushf
xchg
ds
or
inc
or
cmpsb
les
sbb
cld
push
mov
cwtl
cwtl
inc
sub
xchg
xor
ret
add
add
dec
mov
jo
jg
in
jge
mov
scas
push
cmp
sbb
jb
fistpl
mov
dec
inc
adc
loope
sub
jae
mov
sub
lods
jmp
arpl
leave
lock
rorb
jo
loopne
sbbb
icebp
mov
ljmp
sbb
push
xlat
das
test
nop
ja
mov
push
xchg
ds
arpl
xor
out
fbstp
sub
int3
push
pusha
dec
cmpsl
pop
mov
rep
arpl
pushf
jle
fsubrp
test
insl
push
popa
xchg
not
cltd
movsl
inc
shr
movntq
imul
push
pushl
jle
mov
sbb
mov
inc
xor
test
mov
mov
adc
add
pop
dec
ljmp
sarl
mov
add
dec
jo
mov
and
jl
mov
add
inc
bound
xchg
xor
pushf
addr16
pmuludq
lcall
out
cli
stc
push
add
std
add
pop
insb
js
sub
pop
cmpb
aaa
xchg
aas
ret
cmp
aam
push
pop
loope
aas
test
mov
scas
cli
repz
insl
rclb
int
inc
bound
stos
lock
push
cmpsb
sub
jnp
lret
cltd
arpl
adc
nop
cmp
sbb
xor
push
and
pushf
jp
push
cld
dec
mov
mov
iret
push
out
movsb
aas
add
gs
stc
xchg
push
in
sti
stos
loopne
lods
inc
aam
push
cmpsb
mov
cmpsl
rorb
loope
mov
mov
sbb
cltd
clc
xchg
shll
sbb
rorb
enter
jns
mov
lahf
cmp
mov
adc
inc
add
sub
pop
inc
incl
int3
mov
xor
loopne
adc
fnstsw
dec
pushf
dec
pop
loope
iret
add
jae
add
pop
xchg
jns
aas
cmp
jmp
inc
stc
stos
pop
mov
fwait
and
inc
xor
sbb
cmp
repnz
jne
mov
mov
pop
clc
adc
mov
test
xorb
mov
xadd
out
loopne
inc
call
sti
or
inc
mov
int3
push
cmpsb
aas
lock
int
xor
mov
mov
add
insb
or
push
cwtl
and
inc
loope
out
ds
inc
push
call
push
shll
enter
std
adc
jecxz
inc
adc
pop
testl
xorb
ret
pop
add
or
out
movswl
repz
test
shrl
scas
pop
mov
push
outsb
inc
clc
xor
fbstp
sub
mov
inc
xchg
pop
inc
xchg
stos
mov
jecxz
jmp
sub
jns
sarl
xchg
mov
ret
mov
xor
addb
xor
bound
inc
jl
xor
add
inc
pusha
mov
icebp
rolb
mov
mov
adc
xor
cmp
std
dec
pop
loop
pop
mov
push
dec
push
push
inc
outsb
stc
lods
lods
lret
ret
cmp
cmp
mov
add
fwait
roll
call
les
stos
outsl
in
shll
jle
orl
sbb
aas
xchg
mov
sti
xchg
pop
jecxz
mov
sahf
lret
pop
mov
push
js
pop
imul
mov
fwait
shll
sub
inc
adc
out
cmp
fidivl
sub
iret
movsl
inc
mov
sti
inc
scas
sbb
jbe
adc
xlat
popf
cmp
sbb
mov
fs
pop
or
sub
mov
scas
js
xchg
or
mul
mov
push
mov
pop
in
sbb
dec
dec
sub
mov
or
sahf
filds
sub
sub
jnp
mov
cmp
into
mov
push
ljmp
dec
cs
xchg
sub
mov
mov
inc
pop
arpl
arpl
std
mov
test
in
popf
repz
mov
add
ds
cltd
add
out
and
pop
hlt
sti
hlt
cmp
push
movsb
idiv
adc
push
push
scas
add
mov
mov
cli
scas
mov
dec
pop
sbb
xor
mov
and
into
jl
mov
and
adc
sbb
pushf
mov
stos
or
pop
or
lods
pusha
inc
cmp
push
neg
stc
adc
push
sar
cmp
or
xchg
stos
pop
data16
and
mov
into
pop
lods
jg
iret
or
sub
xor
mov
orl
adc
call
cmpsl
fwait
cmp
jo
mov
std
jg
jl
inc
loope
stos
mov
loopne
pop
push
mov
movl
push
dec
xchg
dec
in
fistl
push
mov
gs
sub
outsb
dec
imul
cmp
mov
insl
mov
push
ret
pop
stos
mov
mov
sub
or
and
movsl
push
push
mov
out
push
loope
popa
jb
add
inc
dec
push
enter
jp
pop
inc
mov
cmp
jmp
push
jns
out
lock
and
mov
pop
jp
jae
insl
cs
and
insl
jae
push
lret
es
mov
mov
xchg
int
stc
lret
in
push
jno
xor
cld
and
dec
jl
add
mov
pop
xor
daa
iret
pushf
ret
push
mov
pop
pop
or
mov
push
aam
into
pop
pop
xor
sub
daa
mov
or
xchg
inc
fisubl
jle
shll
aad
mov
push
hlt
pop
movsl
sbb
dec
xchg
ficoml
xchg
std
icebp
js
xchg
adc
fsubrl
jg
jecxz
pop
cli
imul
jb
pop
out
jb
push
leave
mov
rorl
sbb
or
bound
repz
negb
mov
add
insb
jnp
push
dec
lcall
inc
xor
pop
xchg
xchg
jecxz
fstl
pop
mov
sti
aaa
enter
das
inc
jg
gs
lahf
in
push
xchg
andb
sbb
mov
mov
insb
sub
fsubrl
pop
lahf
add
mov
stos
imul
inc
es
js
pop
test
xor
adc
sahf
jbe
push
test
in
push
push
sub
xchg
shll
test
or
push
arpl
pop
lock
jp
sbb
jmp
add
xor
mov
or
sub
or
and
out
lahf
or
lret
lahf
xchg
sbb
mov
loopne
imul
pushf
cmpsb
add
push
rcl
popf
jl
sbb
cmp
xchg
pop
ret
or
test
xchg
push
add
adcb
xlat
inc
fbstp
pop
into
daa
hlt
add
in
aam
imul
aaa
pop
aaa
add
cmovb
push
or
adc
xor
add
out
push
ss
cmp
sbb
or
add
out
enter
inc
mov
sahf
addl
aas
imul
cmpsl
push
es
fsubl
das
js
xor
lret
repz
inc
jbe
jmp
mov
xchg
pushf
xlat
cmpsl
cmp
popa
mov
inc
ds
test
mov
sbb
jno
out
mulb
mov
les
int3
arpl
repnz
ss
mov
push
pop
push
jecxz
jbe
mov
cmp
bound
jbe
add
push
pop
imul
xor
push
mov
and
imul
daa
push
mov
daa
mov
dec
test
xorb
mov
pop
sbb
bound
add
mov
outsl
cmpsb
adc
push
in
xor
loope
mov
nop
in
call
inc
sahf
ja
loop
and
ja
jne
xor
aaa
xor
adc
ret
inc
fldcw
inc
or
repz
movsl
xor
xchg
or
sub
cmovge
test
mov
sarl
fwait
into
add
mov
or
xor
mov
mov
pushf
mov
scas
repz
sbb
and
cmp
mov
jno
pop
lcall
and
pop
bound
inc
add
inc
sbb
stc
cltd
fnsave
cwtl
pop
xchg
push
or
loopne
xorb
xlat
insb
fcmovu
inc
jb
cltd
mov
jle
mov
dec
mov
dec
inc
lahf
stos
fwait
pop
push
pop
fbstp
insl
call
jne
xchg
enter
pop
mov
push
bound
or
add
je
iret
cmp
adcb
subb
cmp
jne
call
data16
ffree
push
xchg
push
hlt
mov
jns
pop
sbb
mov
lret
movsb
ret
imul
ret
push
mov
fcom
fstpl
test
sbb
fsubr
push
or
xorb
mov
test
mov
sub
lcall
push
out
les
lahf
push
dec
int
lret
dec
lret
and
xlat
mov
pop
cli
cmp
sbb
push
mov
les
addr16
pop
divl
in
cmp
repnz
fstl
xor
arpl
ret
jg
in
pop
incl
xchg
push
cwtl
mov
push
dec
pop
insb
xor
mov
pop
scas
lahf
aam
fs
rclb
and
lret
sti
pusha
cltd
std
sbb
lea
push
lds
fistpll
icebp
mov
inc
fldl
xchg
lds
push
jle
and
shrb
rorb
rclb
mov
inc
pop
inc
push
int
push
push
cld
js
or
sub
mov
mov
pop
sti
xorl
mov
xchg
xchg
xor
sti
cmp
ficompl
idiv
cmp
sbb
push
jp
adc
dec
dec
iret
scas
push
out
outsb
xor
sbb
jp
dec
and
addr16
xor
hlt
mov
fistpll
movsb
cmpsb
mov
dec
adc
cmpl
pop
out
dec
cmpsl
repz
add
dec
cld
clc
mov
ds
xor
je
xchg
and
adc
mov
sub
jns
and
popa
icebp
scas
aaa
jg
xchg
add
sub
ret
int3
stc
cld
insl
andl
jmp
lods
pop
mov
jp
xor
mov
rorl
push
lret
lds
or
out
fbstp
sbb
out
arpl
cmp
push
pop
popf
add
push
xchg
jecxz
jl
cmc
cmp
jmp
pop
push
mov
stc
pop
in
push
lahf
je
cmpsb
dec
add
and
iret
cmp
in
fildl
ljmp
add
dec
pop
xchg
mov
mov
inc
add
gs
ret
ds
xchg
sub
and
cmp
sub
jnp
stc
stc
inc
sbb
rcrb
and
mov
ds
mov
jp
push
mov
out
and
mov
bound
or
adc
inc
lret
lret
shll
inc
in
enter
pop
fstl
dec
xchg
xchg
pop
dec
out
jno
inc
ret
or
data16
mov
jo
dec
mov
lret
push
inc
nop
jg
aad
mov
fs
loop
jb
testb
sub
jo
mov
aas
or
dec
pop
jns
mov
cmpsl
roll
into
test
daa
xchg
inc
jl
mov
and
ss
or
sbb
mov
sub
out
mov
stos
xor
movsb
and
pop
addl
dec
lahf
or
iret
mov
jb
jg
loopne
test
push
nop
xor
push
cld
mov
incl
push
mov
push
cmpsb
dec
xor
adc
cltd
jge
arpl
and
mov
test
mov
or
cmp
adc
idivb
addl
jno
aad
cmpsb
or
mov
stmxcsr
and
fdivr
or
mov
cmpsl
loope
mov
pop
test
adc
dec
mov
int3
xchg
pop
cmpl
dec
pusha
lret
and
mov
enter
cmp
hlt
lahf
dec
out
cmp
jnp
ss
xor
test
jmp
aam
bnd
xor
mov
test
xor
jb
mov
jo
push
bound
sbb
in
mov
xchg
jnp
stos
push
cltd
cs
bound
push
xor
dec
inc
pop
pop
call
dec
sub
icebp
fistps
sbb
into
je
dec
cmp
fmuls
hlt
fstl
mov
xor
jns
je
and
mov
loopne
add
hlt
pop
pop
sub
sbb
push
pop
sbb
movsl
cmp
and
ret
push
sub
pop
repnz
out
inc
lahf
xchg
pop
fwait
insl
push
dec
loopne
dec
and
xchg
sti
mov
mov
sbb
hlt
fwait
sub
mov
mov
in
fnstenv
dec
and
sbb
add
cmpsb
cs
sbb
push
and
leave
add
or
mov
mov
xor
pop
hlt
lcall
testb
jo
stos
sti
imul
pop
jae
or
rcrl
xchg
inc
mov
cmp
call
sub
int
loope
inc
call
data16
jl
scas
test
push
sbb
add
pop
mov
dec
mov
pop
out
movsb
inc
int
push
aad
dec
jl
add
cli
dec
arpl
cwtl
sub
sub
es
cwtl
add
jmp
push
and
icebp
repz
inc
cmp
das
nop
mov
pop
push
loopne
push
mov
dec
bound
out
mov
push
iret
jo
ds
pop
cmc
mov
ljmp
dec
mov
cmp
inc
shrb
stc
enter
jge
aas
lret
and
fs
ja
clc
ret
add
aad
pop
loop
inc
jl
push
dec
mov
add
test
pop
jle
notb
inc
push
mov
movsl
cmp
xor
leave
xor
pop
inc
dec
cmp
cmp
enter
std
push
push
push
inc
add
cmp
scas
cld
negl
xor
jo
push
imul
dec
idivl
clc
dec
bnd
outsb
and
cmp
mov
stc
shll
mov
mov
mov
test
push
jg
out
je
mov
xlat
repnz
cmp
or
hlt
sub
int3
mov
dec
sti
cmpsb
loopne
in
xchg
cld
cmc
out
sub
xor
dec
xchg
cmc
loop
sub
cmpsb
mov
sbb
fiadds
aas
inc
test
out
ss
movsl
or
or
imul
adc
out
adc
dec
into
or
xor
push
bound
scas
jb
pop
sti
repnz
subl
sbb
repnz
jmp
mov
loope
jg
cmp
enter
add
rcll
push
popa
mov
cltd
lret
sar
cmp
inc
fstpt
inc
mov
shll
stos
cmp
push
dec
xorb
cmp
cmpsb
or
es
add
push
movsl
pop
in
adc
push
sub
mov
jl
popf
insl
mov
insb
xchg
or
mov
mov
mov
test
dec
clc
sbbl
or
push
int
inc
sahf
hlt
fucomi
in
mov
stos
jmp
clc
push
or
lret
xchg
cmp
mov
xchg
repnz
test
dec
pop
ljmp
dec
mov
cmc
mov
mov
xor
adc
lret
pop
jmp
loopne
add
pop
xor
in
movsb
cmpsl
stos
fiadds
mov
adc
mov
imul
xchg
fwait
int
mov
notb
jns
and
add
mov
ja
mov
xchg
mov
out
into
dec
je
outsb
test
imul
inc
clc
outsl
jnp
or
std
jmp
push
rcl
lock
inc
out
dec
push
cmp
stc
loop
enter
pop
add
jnp
iret
fsubrl
sub
mov
nopl
addr16
js
mov
push
aaa
push
push
and
inc
gs
cs
xor
fisubl
and
cmp
outsl
fwait
arpl
out
mov
mov
lahf
jbe
outsb
ret
scas
jmp
or
fwait
xor
ljmp
push
mov
cmp
sub
aaa
mov
jns
arpl
test
out
adc
and
pop
arpl
mov
ret
xchg
cwtl
roll
imul
xor
cmc
xor
mov
das
jbe
adc
sbb
and
data16
data16
sbb
mov
pop
or
mov
xlat
push
sub
inc
add
aad
jl
push
mov
push
xor
out
xor
mov
das
jnp
inc
mov
and
sarb
sub
in
test
dec
pusha
arpl
jge
sti
jae
cli
divb
ds
ret
sub
jnp
insl
into
push
mov
shrl
jge
add
add
adc
idivl
and
in
jbe
cwtl
loope
popa
jns
lds
fdivr
pop
movl
cmp
xchg
int3
mov
sbb
sub
insb
lods
loopne
mov
cltd
jns
jne
scas
mov
ds
pop
or
xor
mov
loope
jno
in
or
cmp
push
addr16
lods
aam
pusha
dec
pop
mov
cwtl
cltd
pop
xor
adc
jle
sub
cmp
xor
mov
sti
jle
lret
fsubp
adcl
add
adc
push
rcrl
lahf
in
sbb
mov
dec
xor
cs
ret
dec
repnz
stc
mov
inc
loope
push
js
clc
cld
push
mov
jl
les
inc
aam
ljmp
dec
inc
dec
xchg
clc
pop
in
imull
sarl
and
lret
xchg
add
int
dec
pop
sbb
jecxz
pushf
xor
pusha
std
xor
mov
mov
xchg
cmp
arpl
push
mov
mov
repz
mov
or
sbb
push
jne
push
add
adc
int3
ss
adc
mov
inc
cld
inc
cmp
subb
aas
mov
inc
mov
cmc
push
lock
fidivrl
aam
dec
stc
pop
in
jl
mov
pop
imul
mov
mulb
xlat
clc
mov
jg
cs
rcl
out
das
fdivl
loop
pop
jbe
movsl
jo
mov
in
hlt
jno
aad
mov
fldt
dec
pop
xlat
inc
xchg
or
fwait
mov
scas
push
add
xor
movsb
inc
xchg
divb
mov
jns
xor
adc
ret
inc
popa
pop
pusha
or
pop
mov
mov
cmp
cli
jno
sbb
data16
push
push
xor
jo
into
jl
negl
sbb
int
insb
inc
cmp
or
xchg
xchg
ffreep
mov
jmp
fdivrs
repnz
imul
test
dec
das
jmp
cs
in
sub
inc
fdivl
out
jnp
mov
push
cltd
inc
imul
cmc
lods
cmpsl
dec
sub
jmp
xchg
jbe
xlat
and
or
popl
test
stc
movsb
gs
or
nop
adc
push
mov
stc
lret
int
loop
dec
ret
test
cmpsb
or
fs
xor
enter
add
fwait
stos
rclb
fbstp
sub
cmpl
push
pop
cld
fdivs
scas
sub
daa
enter
insl
mov
stos
imul
aad
stc
pop
jne
inc
clc
and
out
push
ficoms
shrb
sub
hlt
lret
pop
adc
jae
clc
pusha
mov
dec
jg
in
cli
push
pop
int3
int3
out
mov
mov
pop
or
push
pop
push
out
adc
repz
adc
std
xchg
ljmp
fwait
cmpsl
jns
jle
push
aam
out
cmp
out
push
pop
sbb
rcrb
xchg
out
xor
xchg
es
or
and
jmp
mov
inc
or
int
shl
xor
push
inc
pop
fs
and
mov
orl
push
or
fadd
in
test
dec
push
stc
test
add
jg
test
aam
adc
mov
inc
rol
mov
test
rcrl
repnz
out
loop
pop
or
idivl
rcrl
sahf
idivl
xchg
pop
daa
mov
and
jg
pop
stc
cmpsb
adcl
js
out
add
cltd
in
adc
rolb
xchg
jno
hlt
mov
pop
gs
fidivrs
pop
std
lret
sbb
ja
scas
dec
addb
addr16
in
imul
push
sahf
pop
cwtl
push
jmp
mov
cwtl
je
xor
mov
push
int
movups
sbb
inc
pop
push
test
and
add
cmp
ret
sub
flds
mov
pop
sti
ret
mov
push
mov
leave
mov
outsb
add
rolb
xchg
pop
xchg
inc
pop
xor
jmp
add
or
out
xchg
jno
gs
xor
sbb
sbb
in
fwait
aas
sbb
cwtl
in
movsb
adc
mov
adc
shlb
cmpsl
xchg
adc
lcall
lods
mov
sub
stos
in
jbe
daa
mov
outsb
int
sub
mov
inc
daa
pop
cs
fiadds
cmpsb
gs
mov
xchg
pusha
mov
leave
in
mov
lds
jle
dec
pop
fadds
stc
movsb
cmp
into
bswap
js
lods
jae
fwait
xchg
sti
test
mov
bound
ret
ja
xchg
fldcw
loopne
or
test
and
jl
mov
cmpsl
sbb
adc
and
cwtl
mov
aaa
in
inc
jecxz
xchg
sbb
int3
aam
push
cmpsl
insb
fwait
lds
scas
dec
push
sarl
or
inc
mov
clc
add
sub
xchg
pushf
fwait
sub
mov
dec
fistps
imul
mov
cmp
sub
iret
out
xchg
icebp
outsl
repnz
adc
lods
nop
cld
iret
xchg
jl
aaa
sahf
lds
add
movsb
scas
push
enter
stos
dec
jp
mov
mov
push
inc
mov
push
lock
clc
int
pop
add
and
mov
lock
cltd
or
push
or
adc
loope
cwtl
das
lds
adc
xchg
dec
dec
pop
orl
addl
adc
insl
dec
or
push
cmp
xchg
cli
es
dec
enter
mov
mov
stc
jg
cli
mov
rol
test
dec
inc
mov
cmp
cwtl
std
in
jp
pop
adc
push
or
call
and
jb
push
xchg
outsl
and
les
aam
adc
mov
clc
xor
sub
lds
sahf
into
push
cs
xlat
lahf
jg
sbb
out
pop
inc
scas
orl
jecxz
iret
sbb
sub
rolb
or
mov
cld
xor
pop
js
lret
add
add
mov
bound
stc
cmp
add
mov
loope
mov
repz
sahf
or
mov
das
nop
idivb
mov
loopne
inc
das
push
mov
xorl
mov
push
shr
lds
repnz
std
mov
mov
cmpsl
adc
idivl
jg
add
scas
or
out
test
scas
or
sub
mov
subb
jecxz
popf
inc
fs
or
nop
iret
scas
stos
stos
xchg
adcl
test
sub
xor
enter
jb
jecxz
scas
movsl
rcll
pop
jo
push
in
mov
lret
adc
sbb
imul
call
hlt
xchg
lret
loop
adc
jg
mov
shll
jg
sub
pop
cmpsb
pop
gs
push
dec
add
xor
jg
in
inc
rcr
in
inc
mov
or
shll
stos
cmpsb
aaa
xchg
mov
mov
or
mov
pop
inc
push
sbb
cmpsl
rorb
pop
pop
leave
adc
ret
out
xchg
lahf
inc
fsubrp
cli
call
lock
push
sub
pop
clc
lahf
xor
add
xchg
popf
out
adc
scas
sti
push
mov
push
rcrl
stc
outsb
or
je
daa
ret
push
cmpsb
and
mov
dec
jnp
hlt
push
cmp
das
adc
out
outsl
dec
add
adc
test
pop
test
enter
mov
or
jbe
dec
jge
hlt
xor
ljmp
pop
inc
mov
dec
mov
cmp
xchg
jae
adc
pop
lods
sbb
testl
fcompl
mov
scas
das
addr16
xorl
inc
xchg
rcll
xchg
ficoml
push
adc
sbb
icebp
sbb
addr16
insl
xchg
stos
xor
aaa
mov
fwait
push
xchg
cli
xor
xchg
xchg
aas
jle
aad
cmp
push
add
jbe
jg
adc
scas
inc
out
lods
jae
and
iret
xor
sbb
into
mov
or
and
mov
sti
mov
jbe
dec
or
lret
mov
xchg
jmp
adc
pop
pop
cltd
idivl
aad
cmp
and
je
lods
out
xor
das
pop
or
sbb
out
decl
or
sbb
adc
adc
sub
mov
lret
and
mov
or
xlat
mov
or
add
or
xchg
mov
push
jbe
scas
imul
scas
adc
imul
nop
dec
mov
nop
and
cmpsl
mov
aad
sbb
push
gs
iret
cmp
add
loope
dec
cld
mov
xchg
dec
mov
loop
xor
call
popf
and
mov
mov
fcmovb
mov
pop
add
mov
aam
xlat
lahf
sbb
or
daa
lds
pop
push
and
jne
or
data16
or
jnp
and
outsl
test
lret
pop
inc
fadd
int
lock
sbb
add
mov
imulb
fnstenv
in
sub
daa
aaa
mov
jle
xchg
andb
jmp
jae
pinsrw
pop
and
xchg
adc
imul
xor
loopne
push
cli
in
sub
cwtl
mov
shlb
dec
lods
sbb
test
gs
lock
rcll
test
push
sbb
repnz
cmp
sub
jl
cwtl
repnz
data16
sub
out
add
pop
add
lea
xchg
mov
bound
lcall
in
or
mov
movsl
jb
mov
dec
adc
and
pop
loop
scas
inc
sub
xlat
push
mov
decb
out
pop
repnz
fbld
mov
lock
lret
sbb
sbb
popf
sub
dec
jbe
orl
test
push
or
cmpsl
nop
loop
ljmp
in
mov
xchg
sbb
outsl
xor
sub
fcomps
aaa
jmp
mov
subb
and
call
sub
xchg
inc
sti
ds
adc
sbb
and
push
jb
and
mov
icebp
stc
mov
mov
les
icebp
dec
stc
push
lods
add
lret
mov
mov
jl
fwait
xchg
icebp
adc
lods
lret
jecxz
sub
rcrl
mov
add
call
das
movsb
cmp
rolb
into
or
dec
loopne
or
xchg
cmp
pop
xchg
or
ret
mov
adc
ds
sti
hlt
ffreep
sbb
add
out
xchg
hlt
mov
pusha
movsl
inc
cmp
mov
lret
addr16
push
mov
push
and
dec
add
push
or
aad
push
popl
jns
test
cmp
int
sti
add
cwtl
cli
sbb
andb
scas
jge
sahf
xor
push
das
dec
sub
inc
in
sbb
mov
loope
rolb
mov
mov
mov
leave
cmp
sbb
loopne
fdivs
cmc
sbb
fidivrl
pop
or
inc
mov
xor
push
inc
xchg
push
imul
xchg
and
fwait
lock
sub
xchg
cli
cmp
stc
xor
dec
xchg
sbb
into
push
adc
push
and
xchg
fsubs
cmpsl
shll
jnp
loope
loop
lods
jb
or
add
faddl
lods
and
shrl
adc
cs
jnp
imul
adc
add
inc
pop
je
mov
lret
sbb
lret
xchg
xchg
lock
dec
mov
add
shl
inc
dec
lods
aas
hlt
pusha
pop
imul
inc
gs
and
dec
lods
push
or
shlb
test
lock
pop
xchg
int3
and
inc
jne
sbb
cs
les
mov
ss
lret
cli
mov
dec
sbb
in
and
inc
mov
push
and
jnp
jae
jp
push
or
fisttpll
iret
mov
pop
fdivrl
fwait
insb
push
cli
test
std
ljmp
sbb
cltd
push
inc
aaa
mov
out
dec
je
pusha
scas
in
cmp
sbb
xchg
mov
dec
mov
jp
sbb
stos
xchg
push
jg
mov
jb,pt
stos
pop
repz
sbb
cld
cs
out
xor
push
jo
fsubr
or
mov
adcb
mov
lret
popl
xor
shlb
xchg
dec
cmpsb
or
shl
pop
jmp
popf
ss
popf
inc
ret
and
jge
or
mov
aam
out
rorl
rclb
or
hlt
orb
sub
mov
mov
orl
pop
or
in
ret
sbb
loopne
test
lahf
mov
xchg
call
cli
mov
enter
inc
dec
insl
scas
dec
cwtl
mov
scas
push
aaa
fisttpll
loop
sub
aad
fs
pop
jp
movb
stc
mov
mov
dec
in
and
mov
sbb
cmpsl
inc
icebp
enter
add
nop
iret
jae
cwtl
push
mov
or
loop
sbb
scas
jp
push
mov
jne
lcall
pushf
mov
xor
fucomip
pushf
xlat
repnz
popf
add
mov
pop
popf
or
dec
push
outsb
dec
add
cwtl
inc
out
pop
pusha
xor
adc
shl
inc
xor
xor
push
imul
jns
jb
pop
xor
inc
fstpt
insb
xor
ret
gs
sti
stc
push
push
neg
mov
dec
data16
imul
scas
mov
add
cmp
dec
hlt
xchg
xchg
int
pushf
add
sti
sub
sub
sub
outsb
jl
cmp
iret
sub
orb
pop
dec
mull
jge
repz
add
int
mov
icebp
sar
fldenv
sahf
into
jbe
outsb
xor
dec
jmp
je
xor
or
cmp
test
rdpmc
add
std
add
add
or
sbb
pop
sahf
push
repnz
pusha
dec
xchg
daa
rorl
addb
cmp
mov
ss
ret
loopne
mov
fsubl
flds
jmp
push
dec
or
addl
cltd
rcrb
out
and
push
mov
cmp
lods
mov
push
xorl
in
fcmove
scas
frstor
in
mov
pop
stos
adc
popf
imul
pop
mov
jle
xor
and
add
rcl
loope
sbb
push
outsl
pusha
sbb
mov
jnp
imul
add
cmpsb
xchg
xchg
rcrl
sbb
or
push
push
out
outsl
push
je
imul
icebp
lea
hlt
repz
jo
sbb
sub
xchg
push
jnp
cmp
sar
jb
leave
mov
sub
shlb
pop
stos
dec
roll
fcmove
lcall
cmp
sar
adc
repz
fmull
divb
jae
xor
xchg
push
mov
scas
sbb
ret
js
xor
lret
and
fadds
clc
or
in
pop
and
inc
adc
subl
cmp
orl
int
cli
mov
mov
outsb
shlb
int
sub
jge
enter
and
or
out
adcb
negb
inc
mov
js
sub
dec
fwait
sub
imul
mov
and
mov
ds
repnz
mov
xchg
inc
xchg
push
cmp
push
ret
sub
shrl
imul
mov
stc
jle
jle
ljmp
dec
ja
xchg
in
jo
add
dec
pop
push
jge
loop
mov
aam
or
add
cmp
add
cs
pop
cld
sti
inc
loop
ret
push
mov
push
sub
or
push
xchg
cs
aam
in
ret
jl
stc
pop
test
jae
stc
mull
orl
popa
dec
jmp
cmpsl
jbe
xor
pop
fnstenv
mov
mov
pop
psllq
aam
lahf
sub
mov
iret
xchg
les
mov
jmp
fsincos
lock
adc
mov
out
pop
cmc
push
xor
iret
jecxz
mov
test
adc
adc
test
pop
add
fs
mov
sub
jne
mov
pop
inc
stos
and
pop
repz
rcr
or
jge
dec
mov
scas
xor
cli
das
das
mov
pushf
jne
imul
cmp
lret
dec
jle
cmp
out
or
loopne
jbe
stc
xchg
js
enter
and
push
mov
mov
and
mov
adcb
out
imul
and
lea
and
negl
lahf
bound
adc
dec
dec
enter
sti
xor
adc
cltd
jmp
adc
enter
test
mov
arpl
jo
mov
xchg
js
adc
mov
lds
push
push
mov
pop
sbb
mov
mov
sbb
les
mov
clc
xor
xchg
repnz
aas
add
lret
push
leave
sbb
cmc
dec
stc
add
loope
pop
lea
mov
xchg
add
cwtl
test
adc
insl
cwtl
xchg
cmp
inc
or
fistps
mov
dec
mov
lret
in
mov
mov
cmp
xor
mov
sahf
aaa
daa
lcall
xchg
mov
ljmp
hlt
sbb
stos
movsl
cwtl
ds
mov
pop
imul
call
inc
sbbl
sub
ljmp
mov
sti
add
ja
movsl
cli
js
rcrl
xor
in
and
jge
and
or
cmp
push
and
mov
xchg
rol
daa
sbb
out
sbb
adc
adc
sbb
push
test
mov
jb
out
scas
xchg
out
divb
or
lcall
das
bound
jns
movsb
fidivl
fmulp
cmp
push
mov
xchg
mov
enter
push
repnz
pop
xchg
sub
xorl
inc
imul
jb
mov
sbb
dec
fwait
std
sahf
and
push
or
dec
mov
outsl
movsb
out
out
ss
in
mov
loopne
movsb
mov
and
imul
in
mov
testl
jnp
fbld
xchg
xchg
push
xchg
sti
adc
pop
xor
xlat
and
xchg
dec
adc
and
loope
push
test
jb
xor
lock
fisttpl
mov
push
add
cmp
sahf
jae
cmp
jle
aaa
mulb
and
inc
das
jp
clc
mov
inc
or
jo
cmp
mov
lods
insl
lods
movsb
es
add
mov
cmp
cmp
inc
imulb
adc
stos
xlat
lret
mov
cltd
or
push
mov
push
enter
stos
xchg
outsb
repz
mov
loop
loopne
pop
sub
stc
cmp
out
stos
fs
pop
add
rcrb
mov
jge
sub
rcll
sub
shr
out
cs
fcmovu
cs
jle
push
addb
lea
out
mov
lret
imul
pusha
pop
mov
popf
xor
andb
sub
mov
test
add
sub
fadds
out
rolb
cmovae
mov
inc
jae
roll
jb
push
gs
pop
mov
imul
add
insl
iret
es
dec
add
mov
nop
pop
mov
xorb
xchg
in
mov
or
dec
shrb
ss
mov
mov
icebp
addb
inc
xor
out
dec
push
or
stos
stos
push
add
xorl
repz
std
xchg
adc
add
adc
out
adc
shll
mov
cs
scas
mov
int3
inc
adc
mov
addb
adc
sbb
out
shll
xchg
lahf
outsl
sbb
aaa
push
mov
or
sbb
daa
fcmove
adc
xor
inc
outsb
jo
stos
sub
sbb
xchg
sbb
jmp
xchg
pop
inc
pop
lods
enter
inc
ljmp
imul
dec
dec
xchg
lret
and
cmc
jb
das
mov
add
insl
adc
loopne
dec
fildll
push
or
test
pop
pop
push
lret
shl
fnsave
push
jmp
ror
divb
ja
adc
jne
push
aaa
mov
mov
pop
pop
adc
add
push
and
call
outsl
nop
mov
sbb
ss
fnsave
mov
fidivrs
in
pop
aad
sub
mov
mov
ja
add
fs
lahf
pop
call
les
loopne
or
adc
jns,pt
fimull
jb
or
hlt
mov
lea
inc
add
mov
pop
in
cmp
add
pop
push
mov
call
and
stc
pop
test
mov
add
stos
lret
adc
testl
jno
xchg
popf
jge
icebp
out
mov
lret
arpl
push
ret
push
mov
out
mov
mov
xchg
inc
adc
out
pop
jmp
imul
inc
push
mov
add
insl
adc
xchg
xor
jp
scas
mov
cmc
bswap
stc
inc
push
scas
mov
mov
dec
subb
xor
dec
inc
adcl
adc
inc
imul
aam
mov
jae
jmp
pop
lret
add
sarl
sbb
adc
aaa
or
repz
addr16
int
cmc
int
jecxz
scas
pusha
push
stos
xor
lahf
dec
dec
pop
fucomip
jle
fstps
mov
push
adc
ss
xchg
int3
dec
xor
mov
sti
sbb
pop
outsl
inc
int
scas
pop
nop
xor
adc
adc
cwtl
lock
inc
cmp
inc
xchg
lahf
hlt
pop
imul
icebp
cmp
pop
cmp
adc
cmpl
sub
jne
push
bnd
cmpsl
xor
xor
out
mov
pop
push
stc
enter
push
and
mull
ss
int3
pop
cltd
mov
mov
adc
mov
scas
popa
std
push
cli
loope
add
ja
jae
lret
lret
and
imul
mov
push
mov
and
jp
jbe
cmp
push
mov
ret
add
jb
adc
mov
js
sbb
mov
and
xor
pop
aas
jnp
es
and
ret
dec
dec
mov
jb
dec
xorb
dec
or
cmp
mov
push
jne
sbb
mov
mov
xchg
popa
mov
std
cltd
mov
cld
cwtd
imul
mov
mov
cmpsb
das
loopne
push
mov
mov
sub
push
lds
dec
sub
out
inc
push
mov
xor
add
jbe
popa
xchg
cmp
or
test
mov
add
lods
nop
pop
call
push
adc
and
add
call
jnp
loop
lcall
pop
fabs
dec
rorl
in
push
fmuls
mov
mov
das
lcall
sti
cmp
std
pop
xchg
std
mov
mov
xchg
dec
ret
das
sub
or
sbb
stos
sub
mov
dec
repnz
aam
xchg
fbld
cmc
and
fsubp
xor
pop
hlt
enter
bound
mov
mov
add
inc
add
stos
jne
scas
sub
push
sarl
add
mov
mov
adc
mov
arpl
fbld
inc
hlt
sbb
or
loop
sub
adc
mov
inc
sarb
test
push
jbe
sbb
dec
outsb
int3
adc
pop
pop
inc
jbe
adc
mov
sub
imul
int
mov
test
and
ss
jg
repz
and
sub
call
sub
jle
push
add
sub
cs
xchg
cld
sbb
mov
inc
test
clc
mov
adc
push
call
xchg
sbb
cmpsl
dec
push
mov
arpl
add
lea
test
shrb
hlt
mov
dec
pop
add
in
gs
add
into
shl
or
inc
insl
mov
popa
ss
fs
mov
js
fcmovbe
mov
jne
mov
pop
adc
test
mov
int3
stos
inc
mov
subl
dec
cwtl
sahf
popa
mov
clc
shlb
sbb
mov
adc
or
test
in
xlat
or
negl
jbe
adc
movsb
xor
add
inc
in
jnp
xor
xor
scas
mov
aaa
les
add
decl
out
jmp
test
push
or
jp
sahf
sahf
mov
cmpsl
mov
jle
loop
or
cmp
cs
das
sbb
popf
xchg
jle
adc
cltd
out
or
rorb
loope
clc
popf
stc
xor
call
loope
das
mov
mov
testl
test
mov
xchg
xchg
lds
pop
call
es
sub
ds
mov
imul
mov
add
lea
mov
push
cmpsl
mov
mov
psrlq
sbb
addb
cltd
nop
rcrl
orl
imul
mov
les
pop
cmp
popf
scas
push
xchg
ljmp
mov
lret
pusha
outsl
aam
mov
pop
xchg
dec
loope
ss
jmp
hlt
mov
hlt
push
cld
push
aam
add
popf
fsts
cmp
outsl
mov
xchg
fidivrl
add
push
rcl
jb
aaa
cmp
pushf
arpl
push
pop
mov
rcll
pop
ficomps
icebp
add
push
inc
adc
xlat
xor
add
aad
mov
sbb
sbb
push
mov
push
mov
aaa
inc
loopne
loopne
repnz
rcrl
fdivp
nop
mov
inc
jp
rcrb
shrb
add
jmp
inc
xor
outsb
add
clc
add
sub
std
push
outsb
fidivl
mov
cmp
jnp
push
xchg
mov
sbb
and
xlat
fsubl
dec
jecxz
or
mov
ja
movsl
int
lds
mov
dec
sub
pop
ja
or
arpl
inc
jmp
test
out
adc
cltd
mulb
in
add
outsl
sub
lahf
sub
repnz
jmp
nop
cmp
xor
mov
js
rclb
cmpsl
sbb
repnz
cmc
push
add
test
outsb
aad
jp
out
test
add
dec
into
xor
movsb
bound
add
aam
test
inc
int3
push
and
clc
add
adc
sahf
clc
ficomps
fimull
jbe
outsl
cmpsb
sbb
aam
pop
sub
dec
sub
jb
loop
aam
sbb
shll
push
pushf
sbb
pop
outsb
inc
ds
ja
add
pusha
lock
ja
mov
push
mov
mov
aad
cmp
push
mov
out
push
leave
jl
and
pop
mov
fcmovu
lret
icebp
in
mov
testl
pop
cmp
cltd
faddl
popf
jbe
imul
mov
outsb
movsb
aam
fmuls
movsl
xchg
subl
cmc
bound
pop
ret
pop
int
inc
outsl
rcrl
out
not
adc
mov
cmp
leave
adc
ret
xchg
and
fists
test
pop
into
push
outsl
or
je
pusha
push
mov
push
inc
ret
mov
mov
stc
sub
mov
fdivrl
mov
inc
aas
adc
js
push
sbb
xchg
or
mov
xchg
dec
sub
push
push
fadds
enter
out
sbb
inc
mov
and
cmp
das
outsl
pop
and
push
push
jae
xchg
shl
lds
mov
mov
iret
and
push
xor
jl
xchg
inc
clc
xchg
jp
dec
sub
pop
push
loop
lea
movsb
or
push
mov
add
xchg
enter
pop
cmp
outsb
shrb
ja
sti
or
xchg
dec
fdivp
divb
daa
addr16
adc
dec
std
scas
int3
pop
jmp
dec
sub
mov
test
cmpsl
mov
repnz
imul
ss
mov
imul
popf
addl
adc
jp
cs
lds
aam
xchg
daa
bound
test
cmpsb
jecxz
jecxz
sbb
mov
mov
nop
fimuls
dec
dec
adc
pusha
setne
popf
outsb
cltd
mov
inc
out
sbb
adc
adcl
cmp
insb
int3
push
shl
pop
add
pop
mov
mov
or
daa
loope
xlat
cmp
xchg
inc
mov
out
imul
adc
fmull
insb
sub
cmp
mov
out
add
mov
movsl
add
lahf
clc
push
pop
inc
sbb
cmpsb
loopne
jne
lret
add
cmp
mov
pop
mov
mov
sub
sub
dec
aaa
pop
xchg
dec
in
loopne
mov
dec
testl
pop
xchg
shl
push
in
add
cs
repnz
test
dec
stos
push
inc
imul
jl
mov
call
jno
mov
jge
repz
iret
popf
adc
scas
in
in
or
out
in
std
das
int3
repnz
stc
and
mov
adc
mov
js
mov
popa
pop
cli
or
lock
push
jbe
inc
lds
cmp
push
add
popa
dec
dec
xlat
pop
mov
push
out
popf
sti
repz
xchg
sar
and
arpl
mov
push
mov
cltd
dec
and
lock
jo
mov
push
push
add
orb
outsl
je
cmc
pop
aam
mov
fs
clc
pushf
inc
arpl
data16
pushf
popf
xor
ret
sbb
cmp
fistpll
or
dec
pop
mov
ret
and
mov
add
in
pop
sub
jp
push
aas
cmc
aad
sub
test
and
jnp
xor
mov
ficomps
push
adc
xor
and
mov
loopne
or
jne
mov
xlat
dec
cmp
xlat
dec
add
ds
dec
adcb
aas
adc
fmul
jns
pop
adc
daa
sbbl
dec
cmc
repnz
cmp
push
ss
fcoml
jne
js
inc
dec
movsl
aas
xchg
or
mov
jl
pop
jb
pop
pop
push
scas
push
enter
loop
stos
mov
jge
add
outsl
movlps
outsl
adc
mov
mov
std
fidivrl
or
daa
cmp
shrb
fisubs
xor
clc
lret
mov
clc
cs
xor
notb
stc
mov
nop
fidivrl
rcll
imul
inc
lahf
and
or
cmp
dec
jl
into
sub
das
xor
adcl
add
inc
push
mov
lret
jae
ds
sub
sbb
push
or
pop
in
jbe
fidivrl
lea
inc
pushf
inc
mov
adc
imul
inc
jl
lods
lock
pop
lret
or
ljmp
add
push
fwait
leave
lahf
stc
inc
xlat
jne
sbb
add
pusha
ret
pushf
loopne
movb
pop
pop
cmpsl
inc
mov
mov
adc
rcrb
mov
sub
or
aaa
testl
mov
jb
inc
aad
adc
in
mov
in
ljmp
mov
inc
inc
xchg
stos
add
js
sbb
push
fwait
xchg
push
jmp
leave
or
data16
dec
dec
aas
cli
iret
jp
insb
insl
jno
js
insb
mov
mov
addr16
cld
or
aam
mov
jo
adc
jp
lahf
ficoml
dec
adc
std
arpl
mov
inc
mov
fwait
insb
pushf
pusha
loopne
sahf
jno
mov
push
out
scas
dec
and
into
inc
pop
push
lods
rcr
push
ror
loop
rcr
sbb
es
hlt
xchg
movsb
call
stos
insb
in
inc
sti
push
mov
bound
fcompl
bound
loop
lret
lods
cld
lret
outsb
jp
jecxz
pushf
and
dec
dec
out
dec
and
or
stos
inc
imul
mov
sub
xchg
push
fstp
fldenv
fcoml
push
adc
stos
mov
lcall
mov
mov
fs
imul
cld
adc
mov
int
icebp
mov
std
mov
jbe
dec
xchg
movsl
aaa
lcall
pop
clc
idivl
xor
popa
outsb
dec
in
arpl
and
mov
mov
into
mov
adc
push
enter
push
dec
aam
imul
dec
sarl
inc
clc
pop
or
push
arpl
int3
pop
pusha
xchg
sub
fsubrl
cmpsl
push
jmp
mov
popf
push
jb
orb
xchg
inc
int
jne
cli
aaa
scas
popa
cmp
mov
sub
xlat
xor
jge
stos
pop
inc
pop
aaa
cmp
push
push
std
cmp
pop
ds
ja
ret
xchg
aad
mov
daa
and
inc
repz
enter
mov
enter
mov
mov
mov
xchg
fsubrl
or
push
jmp
out
stos
pop
lret
push
arpl
mov
mov
sbb
outsl
cmpsl
enter
xor
loopne
pop
pop
jns
ds
dec
jge
inc
and
icebp
and
dec
out
add
sub
cltd
addb
fsub
jo
popa
lret
mov
jns
add
jnp
mov
nop
out
imul
or
push
mov
cmp
dec
test
std
push
jle
ret
mov
mov
jne
add
into
cld
jle
sbb
and
outsl
test
xchg
xchg
xchg
sub
xlat
inc
xchg
xchg
outsl
adc
cmpb
jne
add
repz
xchg
dec
cs
pop
add
cwtl
lret
jno
xor
jle
sbb
andl
mov
mov
sub
cmpb
inc
sbb
in
test
mov
cmp
adc
outsl
aam
daa
aam
push
xor
jecxz
inc
call
jecxz
inc
movsl
and
rcrb
mov
mov
pop
dec
popa
ficompl
test
idivb
fdivrs
insb
dec
cmp
cmp
fists
scas
cwtl
sub
call
add
scas
stos
lcall
out
int
popa
fisttpl
pop
pop
shrl
push
adc
outsb
in
movsl
mov
dec
lret
pop
push
loop
inc
jl
jmp
iret
jg
mov
iret
mov
sbb
fisttps
into
adcl
aam
ret
jle
ss
jmp
outsb
adc
call
scas
aam
mov
aas
lcall
lea
call
pop
test
daa
jmp
cmp
mov
sbb
push
ret
aad
loopne
ror
mov
cmp
mov
cmpsb
jno
aaa
sbb
xor
inc
sub
popf
sbb
adc
push
nop
pop
idiv
jp
mov
mov
out
push
in
sbb
adc
lcall
daa
inc
adc
movsl
js
paddb
sub
lods
pushf
aaa
sub
xchg
mov
adc
loop
ja
sbb
cltd
movsb
enter
xchg
lods
leave
test
dec
ja
in
sbb
dec
jo
into
and
lret
test
mov
sbb
lret
adc
cmp
add
push
jno
pop
orl
push
aam
mov
cmp
pop
pop
push
jecxz
lret
std
jno
xor
sbb
lahf
jle
sub
dec
mov
out
nop
push
jmp
cld
addr16
repz
pop
int
outsl
mov
and
fisubrl
jle
or
xchg
addl
mov
mov
inc
inc
xlat
xadd
repnz
test
insl
push
shll
jns
mov
aam
addr16
add
insl
mull
jns
shrb
loopne
and
sub
rcrb
sahf
xchg
jp
sahf
aas
sar
inc
ret
dec
mov
lret
sub
adc
push
cmp
test
cld
jle
sub
dec
mov
pusha
cs
decl
and
and
xor
or
mov
adc
mov
scas
mov
pushl
cmp
push
cmpsl
jbe
icebp
stos
sbbb
imul
jge
xchg
jne
out
rcrl
and
lret
adc
lods
fsts
cs
jle
mov
lock
lods
push
std
rcll
cli
push
and
xchg
dec
mov
es
ss
sbb
movsb
inc
jae
cmpsb
and
leave
xor
sbb
ljmp
dec
lahf
scas
mov
jmp
xlat
nop
das
inc
fldl
iret
std
lret
and
aam
and
pop
gs
adc
icebp
nop
insl
mov
cmpsb
dec
push
aam
lock
pop
hlt
push
cmp
pop
sbb
sbb
test
jecxz
mov
adc
lods
xchg
and
jecxz
add
imul
loopne
addr16
jmp
dec
cmp
shll
and
rclb
scas
hlt
sbb
mov
inc
mov
mov
test
or
sti
mov
cli
ror
push
xchg
out
in
addr16
cmp
mov
mov
orb
mov
cmp
add
jns
outsl
out
outsl
inc
nop
std
arpl
enter
cld
xchg
jle
mov
andl
rcrb
add
dec
jo
or
sti
out
xorb
popf
lret
sub
push
out
dec
lahf
sub
test
pop
scas
icebp
shll
lea
jnp
ja
out
test
cmp
or
xchg
movsb
adc
add
and
ds
pop
pop
loop
inc
pop
mov
jbe
popa
mov
mov
cs
mov
call
out
test
lock
xchg
movsl
and
incb
push
ffreep
sbb
mov
inc
aam
push
lods
and
in
mov
testb
daa
push
imul
fsts
sbb
test
fiadds
dec
aas
lret
and
cmp
std
mov
sbb
jmp
lods
push
jp
int3
dec
repz
ss
cmc
jp
jecxz
cmp
pop
add
xlat
add
and
xor
push
mov
cmc
into
leave
ror
jnp
add
out
pop
insl
adc
scas
cmp
iret
inc
outsl
lea
xlat
xchg
mov
sbb
jo
push
xchg
loopne
pop
mov
mov
insl
mov
subb
dec
stos
div
and
jp
rorb
in
lret
inc
mov
daa
repnz
cmp
push
pop
dec
inc
cmp
cmp
and
daa
mov
mov
jo
jns
or
jbe
mov
ja
pop
push
rorb
pop
lds
hlt
xor
xor
scas
mov
lea
dec
inc
loope
lcall
xor
push
call
adc
int3
or
sbbb
sub
or
cmpsl
sbb
pop
imul
add
fiaddl
popa
popa
out
push
push
mov
and
data16
pop
mov
cmp
mov
mov
sub
ret
xchg
and
cmp
lcall
pop
fimuls
loopne
cmp
clc
cmc
enter
fmull
lret
or
and
sub
inc
xor
repnz
inc
jbe
popf
push
xchg
inc
sbb
movsl
xchg
and
or
sbb
push
mov
rolb
sbb
fnstcw
jle
xchg
mov
cmp
test
test
push
jb
je
push
pop
mov
dec
in
adc
xchg
cwtl
dec
mov
cmc
push
loopne
jge
test
shl
cmpsb
outsl
jmp
imul
sub
xor
in
cmpsb
push
push
mov
cwtl
pop
mov
xchg
inc
mov
int
scas
out
fwait
lea
ss
shlb
js
jae
xchg
xor
stos
xor
xor
pushf
inc
push
imul
mov
mov
loope
adc
xchg
jl
aam
xchg
jmp
inc
outsl
test
in
sar
add
mov
sbb
xchg
cs
and
lea
adc
cmp
imul
inc
dec
dec
xchg
fwait
dec
cld
leave
test
ret
mov
dec
add
sbb
iret
jno
aaa
sbb
das
in
inc
ret
push
mov
lret
cmp
or
lock
dec
jle
inc
adc
cmpl
xchg
jns
cwtl
fbld
cli
pop
push
jle
add
movsl
sub
lods
lcall
popf
lock
lahf
ficomps
and
mov
push
cmp
cmpsl
bswap
xor
int
stos
mov
outsl
and
out
push
push
sbb
or
js
cmp
add
jae
adc
fildl
arpl
aas
sub
outsl
xor
jo
jmp
jns
std
mov
pusha
mov
cmp
stos
enter
mov
popf
test
adc
shl
xchg
xchg
mov
cmpl
test
mov
cmpsb
xor
or
adc
sub
mov
mov
insb
adc
inc
pop
icebp
xor
test
hlt
test
inc
pop
mov
xor
je
lret
or
dec
pop
cs
in
pop
ja
dec
fwait
rclb
ret
movsb
dec
dec
icebp
adc
inc
mov
lea
sbb
orb
lahf
testl
sub
xchg
mov
out
cmp
and
pop
pushf
test
cmpsl
daa
push
stos
mov
sbb
imul
pop
aaa
adc
fistpl
pop
bound
inc
cwtl
pusha
cmp
insb
xor
push
inc
adc
std
jg
aad
sub
test
xchg
dec
mov
out
daa
xchg
mov
loopne
mov
add
sub
pop
rcrl
fisttps
jns
dec
jbe
fldt
cmc
mov
nop
pop
test
call
fwait
push
jecxz
mov
xor
push
lret
push
sbb
cld
fucomi
nop
jno
xchg
inc
jmp
jns
fmull
cmp
pop
cld
mov
rcrb
nop
adc
adc
pop
push
cs
add
xchg
add
add
and
outsl
xchg
jg
stc
push
mov
in
in
jne
into
out
push
or
sbb
and
sbb
lods
roll
lods
test
fldenv
lock
mov
dec
divl
sahf
jbe
roll
xorb
mov
sub
lret
lcall
xchg
addr16
decb
push
mov
inc
test
test
jge
les
insb
movsb
adcb
cli
pop
insb
adc
fcompl
inc
or
fisubl
pop
lods
xor
ds
lahf
mov
mov
loop
repz
decl
mov
mov
dec
in
push
or
push
movd
ljmp
or
mov
frstor
in
nop
ljmp
outsl
std
pop
jno
and
adc
gs
jo
call
cmp
insl
sub
mov
test
push
dec
jg
es
xlat
dec
shrl
sub
mov
inc
mov
jne
sub
push
cld
mov
or
dec
dec
jno
sbb
jns
out
cmp
movsb
mov
push
sbb
cli
or
hlt
jae
aad
insl
popf
aad
push
push
add
mov
icebp
ljmp
out
dec
aad
or
dec
dec
jbe
adc
cmp
jnp
scas
jae
jl
mov
bound
gs
pop
add
dec
call
insl
pop
or
movsl
cmp
enter
rorb
ja
outsl
sub
insl
shr
vphaddbd
std
orl
packssdw
dec
pop
iret
or
adc
negl
pop
and
fsub
cmpsl
xchg
mov
ficomps
fisttpll
test
pop
xchg
push
xchg
and
fsts
add
aaa
lahf
stos
sub
add
adc
cmp
adc
dec
or
adc
stos
sbb
lahf
lahf
cltd
pop
enter
mov
icebp
mov
lret
out
out
fwait
push
cmp
pop
popa
fbstp
mov
test
sti
fmul
dec
shll
addr16
mov
sbb
adc
add
mov
sbb
pop
jbe
mov
pop
sub
cltd
sub
mov
ljmp
and
scas
push
and
hlt
xor
cs
out
into
es
xchg
xchg
lret
inc
in
sbb
shlb
jge
fsub
xchg
jno
pop
aad
mov
fcomps
adc
sub
leave
lock
jge
cmpsb
sahf
loop
lea
sbb
adc
adcl
out
pop
insb
adc
push
adc
lea
mov
rclb
loop
cmp
std
xchg
jo
pop
mov
mov
pop
addr16
lret
popa
or
pop
jbe
sbbb
rcrb
fsubl
lret
popa
mov
pop
mov
test
jmp
xchg
loop
es
flds
push
mov
push
lret
jbe
mov
and
test
iret
fistpll
mov
adc
xor
add
cmpsb
xlat
add
push
and
pop
xor
inc
mov
xor
xchg
cltd
lret
test
sub
cmp
jo
or
jl
push
pop
subl
mov
push
mov
subb
fcomps
jb
repnz
cmp
fxch
pop
mov
scas
scas
lock
imul
pop
sub
fcoml
adc
fisubs
pop
xchg
sbb
fwait
mov
fdivr
mov
pop
fwait
call
popf
sub
hlt
ja
inc
pop
cwtl
nop
pop
out
iret
push
out
mov
cmc
push
lock
adc
cmpsb
pushf
mov
mov
mov
out
outsl
adc
idiv
jp
and
lds
mov
cmp
jmp
push
mov
jbe
mov
negl
or
push
sub
hlt
arpl
or
in
stc
lcall
inc
pop
scas
mov
mov
ss
int
sub
ja
movsb
mov
sub
pop
xchg
jl
cmp
popl
popa
inc
jle
jo
cmp
stos
push
inc
stc
mov
mov
jl
jg
leave
scas
inc
das
cmp
jle
push
cld
mov
fwait
mov
sbb
xor
arpl
ds
cmpsb
repnz
mov
xor
and
jge
add
lahf
aas
mov
cmp
push
notl
repz
dec
dec
mov
or
jge
and
imul
pop
pop
sub
outsl
out
scas
sub
arpl
jnp
ret
ljmp
dec
pushf
cld
push
popa
ja
cmp
or
lcall
jmp
adc
fisttps
cmp
inc
das
dec
divl
imul
dec
les
sub
in
push
mov
jb
adc
add
mov
xor
pop
pop
outsl
lock
lret
in
loop
outsb
out
xor
nop
pop
loope,pn
int3
xor
lods
adc
adc
pop
cltd
and
aas
mov
bound
inc
sbb
xchg
loopne
loop
sarb
sbb
test
sahf
std
mov
ret
std
jno
xchg
fldl
ss
xlat
jns
xor
lcall
push
cld
lea
ja
fidivs
or
mov
daa
ret
scas
or
cmc
movsl
cltd
fldcw
mov
hlt
jno
stos
xor
jne
sbb
jp
rcll
lds
cwtl
lock
cmpsl
pushf
jbe
inc
mov
out
in
add
aaa
cmpl
add
lods
adcl
fnstcw
ficoml
pop
rol
inc
enter
test
jge
jne
cmpsl
movsb
mov
inc
mov
mov
aad
flds
shlb
in
arpl
cmc
aaa
jno
dec
into
or
aas
mov
ret
repnz
mov
xlat
loop
imul
jb
mov
dec
or
adc
inc
jne
outsb
mov
popa
mov
push
cld
mov
cmp
sub
fadds
mov
mov
mov
lock
dec
pop
ja
inc
inc
mov
jecxz
fmull
jp
and
jne
mov
pop
aas
out
incl
xchg
lahf
test
dec
mov
push
mov
and
or
inc
sub
ja
roll
lret
arpl
xor
mov
xchg
adc
hlt
icebp
ficoml
pop
dec
sbb
adcl
pop
and
je
ret
xor
test
inc
rolb
imul
add
adc
jle
inc
rsqrtps
mov
ucomiss
jbe
insl
jae
xor
xchg
je
dec
add
imul
mov
rcll
pop
divl
and
xor
mov
sbb
out
popf
push
jo
push
and
xchg
mov
push
movsb
cmc
loope
sub
xor
xchg
sub
gs
inc
aam
inc
rolb
inc
sbb
mov
xchg
jne
pusha
or
sbb
push
aaa
cmp
test
fsubp
repz
xor
pop
push
adc
inc
cmp
adcb
push
sbb
fwait
idivl
inc
in
iret
fnstcw
stos
shlb
and
and
shlb
ret
les
call
pop
fnstcw
orl
pop
inc
pcmpgtd
add
dec
ds
fwait
pop
adc
or
lcall
dec
rcrl
imul
and
xchg
and
mov
call
mov
daa
jb
cmc
and
lods
movsl
fcoml
jmp
adc
int
ret
mov
mov
jl
scas
sbb
add
add
jl
jle
lret
xchg
jl
fucomip
setg
in
cltd
mov
and
jmp
mov
cmp
sub
xor
std
out
xorb
fdivs
or
push
pop
adc
rclb
test
scas
and
sub
xchg
insb
cmp
mov
test
push
jp
mov
dec
rclb
leave
xlat
sub
call
or
fimuls
or
loope
and
pusha
imul
or
fildl
rcrl
lcall
subb
inc
mov
mov
dec
or
sub
rcll
mov
repnz
repz
or
add
or
ja
scas
lea
mov
lcall
aaa
sbb
cmc
push
pusha
sbb
shlb
jp
dec
jmp
in
out
mov
in
sbb
sbb
rcrl
les
test
mov
aam
repnz
in
adc
je
pop
xor
les
or
sbb
js
xor
fisttpl
aas
syscall
lret
out
adc
insl
clc
daa
test
scas
xchg
shrl
add
pop
dec
loope
lret
mov
sub
outsl
xchg
jmp
jl
jnp
scas
rclb
iret
loopne
insl
aaa
leave
jo
cmp
cmp
inc
neg
dec
andb
std
push
fs
jl
cmc
mov
outsl
lcall
in
push
mov
inc
rclb
sti
cltd
inc
xor
mov
out
cmpsb
enter
mov
add
jg
mov
ja
in
add
inc
or
or
mov
pop
cwtl
in
jne
js
inc
fisttps
jmp
mov
lods
add
aas
xchg
jae
int
mov
rclb
push
adc
ljmp
jbe
push
jge
mov
xchg
lds
in
xor
pop
into
je
sbb
mov
inc
xchg
loop
sbb
add
xor
ficomps
mov
xor
sarl
jl
jae
or
xlat
lods
pushl
mov
loope
int
add
in
inc
test
into
leave
sub
stos
ret
pop
leave
lods
adc
enter
mov
xor
add
ljmp
cwtl
mov
push
addb
push
bound
rcrb
arpl
imul
jbe
icebp
cmp
or
lahf
test
int
int3
sbb
in
dec
js
inc
jp
dec
dec
lods
or
aam
call
movsl
pop
sti
pop
js
sbb
cmp
dec
xchg
or
test
sbb
mov
jp
lcall
sub
push
add
xlat
gs
inc
cmp
xor
in
xlat
out
mov
pop
push
lret
jge
outsb
stos
mov
push
mov
pop
mov
push
int3
lret
pop
lahf
inc
pop
mov
or
dec
test
rcl
dec
cmp
jl
lods
les
mov
cs
adc
fiadds
fadd
push
jg
imul
out
popf
lds
and
inc
mov
push
xor
gs
test
imul
movd
add
out
jmp
mov
fisubrl
xchg
gs
call
push
pushf
rep
dec
adc
iret
xchg
daa
jnp
xlat
movsl
in
sub
or
mulb
mov
adc
ljmp
inc
jg
xchg
cmc
cltd
adc
xchg
lods
sbb
ret
push
cmpl
xchg
cmpsb
push
int
xor
sub
in
jge
scas
xor
lea
shl
adc
xchg
xchg
or
mov
mov
aam
test
les
jl
or
jo
mov
mov
add
ds
in
sbb
out
mov
mov
jb
sub
shlb
stos
test
sub
push
popa
int3
lock
dec
pop
push
xchg
mov
test
cmpl
dec
sub
in
mov
add
imul
sar
mov
push
mov
pop
dec
xor
push
nop
xor
add
aam
cmp
cmpb
out
fildll
stc
repnz
insb
cmp
pop
jae
insb
stos
pop
out
xchg
fistps
js
xor
inc
pushf
cmp
mov
pop
sar
push
dec
inc
sti
xor
fisttpl
jbe
repnz
mov
rorl
mov
clc
int3
cmp
das
shll
scas
testb
mov
stos
std
inc
out
add
stos
and
or
icebp
cltd
test
push
rorl
and
add
push
xor
pop
jmp
sbb
fs
out
fnstcw
mov
xchg
fidivrl
xchg
arpl
mov
pop
inc
mov
push
ret
mov
adc
mov
push
repnz
jp
in
test
sbb
hlt
cmp
imul
int3
je
mov
lcall
rcl
or
shr
test
movsl
sbb
add
mov
repnz
je
loopne
mov
and
or
cs
pushf
dec
int
aad
in
cmp
movsb
clc
cltd
jl
cmp
mov
jno
pop
sar
xor
std
jne
aaa
fs
cmp
adc
cmc
jno
push
int
test
sub
push
jns
std
fcmovnu
gs
hlt
sarl
jecxz
hlt
cmp
int3
loopne
loopne
jle
mov
push
ljmp
rorl
mov
and
cli
jecxz
popa
sarb
fimull
cmc
sbb
jb
pop
push
movsb
dec
popa
arpl
inc
and
arpl
or
jae
lret
iret
or
xor
mov
mov
xchg
push
cmp
outsb
shlb
jae
xchg
jb
jb
xchg
in
jbe
or
mov
add
ljmp
jbe
cvtps2pi
pushf
cmp
cltd
scas
dec
xchg
inc
mov
mov
icebp
pop
cmpsb
jb
pop
loope
lock
into
jbe
aam
jmp
or
ds
neg
ljmp
add
into
push
popf
test
sub
insb
mov
les
cli
pop
out
outsl
daa
ds
loop
or
add
pop
imul
mov
jbe
add
xor
pop
mov
jns
les
fsubrl
xor
dec
pop
fildll
xchg
inc
sbb
daa
jo
je
aas
flds
sbb
cmc
adc
mov
mov
mov
shll
or
into
push
mov
in
popf
fisubl
lcall
outsl
lods
pop
jno
int3
pusha
and
mov
shlb
int
arpl
sbb
push
rorl
jle
cwtl
mov
je
xor
sub
adc
cld
pop
pop
mov
loopne
std
nop
js
inc
cmpsl
mov
fbstp
rol
push
stos
jno
push
pop
or
push
int3
sub
add
repz
sbb
jnp
xor
sbb
mov
or
inc
test
pop
std
inc
xor
fstpt
test
fcomps
mov
cli
dec
repz
popa
mov
push
mov
lcall
movsb
mov
shll
push
lcall
test
div
dec
lret
je
jmp
mov
jbe
flds
outsb
pop
aaa
push
out
jecxz
pop
jp
fisttpll
xchg
mov
shr
and
jne
xchg
ffreep
clc
das
frstor
arpl
adc
nop
jecxz
cmp
fwait
dec
fldl
inc
mull
in
ret
cmpsl
pop
popa
call
lds
shlb
rcrb
ljmp
dec
pop
cmp
dec
add
aam
mov
inc
mov
mov
mov
das
or
sbb
repnz
mov
mov
sub
dec
inc
test
mov
popl
add
in
outsl
xlat
sub
mov
xor
in
push
insb
xor
add
add
rorb
cld
ja
dec
fwait
mov
mov
xchg
cmp
pop
jmp
leave
ljmp
das
xchg
js
jg
xchg
cmp
jmp
push
aaa
adc
mov
call
mov
mov
aam
lahf
jb
xor
in
mov
jno
cmp
adc
mov
cld
es
cmpsl
xchg
ljmp
je
or
xchg
es
cmpsb
jg
jge
add
pop
xlat
int
mov
mov
sbb
mov
xor
int
test
fldl
cwtl
pop
pop
je
in
data16
mov
adc
mov
sbb
movsl
and
sti
std
in
pop
dec
lret
idivb
lret
nop
inc
sub
dec
orb
xchg
xor
cmpsl
inc
cli
in
pop
dec
loope
popa
xchg
addb
je
dec
mov
dec
push
push
test
sub
sarb
dec
mov
out
fdivl
mov
fnstenv
pop
mov
addr16
ss
pushf
jle
jne
sub
inc
dec
hlt
jno
add
jmp
in
push
mov
adc
xchg
icebp
les
sub
cmp
push
movsl
sub
mov
adcl
test
push
cmpsb
shlb
out
push
xchg
shlb
adc
sbb
pop
jl
push
add
mov
notl
mov
jae
es
jge
rorl
shlb
pop
repnz
icebp
mov
mov
aaa
pop
xor
in
jg
cmp
stos
xchg
pushf
cmp
dec
sub
cmc
dec
fiadds
mov
cmp
and
sub
dec
push
jp
cmpsl
push
rorb
lret
dec
mov
sarl
xchg
movsl
dec
pop
cli
iret
jns,pn
cli
jg
pop
pop
and
mov
cmp
jbe
mov
cmp
lock
js,pn
pop
add
jle
and
dec
cwtl
jecxz
je
repnz
test
stos
mov
subl
add
xor
sbb
jne
aam
pop
dec
inc
xor
inc
push
sbb
push
sbb
faddl
add
dec
adcl
cmpsb
int3
les
inc
push
dec
fidivrs
adc
shll
stos
xchg
inc
std
cmp
pop
rcrl
push
dec
xchg
stos
dec
and
push
loopne
mov
enter
cld
out
lcall
add
cs
dec
addr16
orb
dec
es
mov
jns
pop
js
inc
inc
and
push
add
jbe
adcb
add
cwtl
les
jmp
imul
pop
loop
fnsave
ds
lea
sbb
adc
sbb
mov
mov
push
das
test
mov
in
dec
lods
stc
out
lods
sbb
push
pop
inc
jecxz
mov
lds
mov
sub
cmpsb
sub
daa
push
imul
jecxz
stc
and
in
movsl
lods
or
icebp
rcl
test
xchg
pop
xchg
xorl
mov
loopne
sub
pop
push
call
ds
or
sbb
cld
in
pop
mov
sbb
mov
pop
mov
xor
dec
shlb
lret
xor
test
movsb
add
jg
lock
cmp
cld
insb
dec
call
mov
cmp
fidivs
push
mov
push
add
push
pop
xchg
xlat
xor
add
or
lret
add
dec
pop
pop
inc
pushf
xlat
shlb
jno
jge
imul
test
mov
insl
sub
push
pop
rolb
fld
shrb
out
mov
xor
mov
insl
stc
pop
das
in
and
lods
repnz
xor
push
pop
inc
mov
icebp
aad
xor
dec
subl
adc
lock
or
push
mov
push
fidivl
aam
mov
jnp
mov
add
sub
cmp
frstor
cltd
jle
sub
cwtl
pop
aad
and
add
ret
adc
scas
mov
jg
add
add
mov
mov
cld
das
in
sub
push
jno
rol
pop
jbe
and
sub
adc
cmpsb
test
cmp
and
lahf
pop
push
mov
hlt
cmp
jge
rcrb
mov
repnz
jl
je
mov
andb
sub
subl
fisubrs
cmpsb
sbb
xchg
mov
ret
pop
xchg
iret
or
enter
mov
add
ficomps
cld
cmp
call
dec
jb
lcall
sub
pop
ja
cmp
jl
je
gs
adc
cwtl
movsl
push
rorl
in
jle
movsl
pop
lds
ds
lock
test
add
inc
and
adc
pop
icebp
aas
jbe
lods
pushf
xor
sub
mov
stos
incl
lahf
clc
sub
daa
adc
dec
mov
stc
push
inc
test
pushf
mov
inc
add
loop
loope
cltd
jo
cltd
test
lock
imul
bound
mov
aad
pop
and
bound
hlt
pop
int
mov
xchg
add
sbb
mov
bound
addr16
push
flds
push
xchg
arpl
lock
cmpsb
mov
jo
and
and
or
push
outsb
push
xchg
out
pop
test
or
mov
fsubrl
repz
lea
sbb
inc
or
and
jle
rcl
pop
dec
jbe
sti
or
scas
inc
cld
sub
sbbl
mov
notb
fldl
pop
add
dec
lcall
cmc
xchg
sub
xchg
int3
xchg
xchg
scas
ja
cltd
dec
dec
gs
lds
movsb
rcrb
pop
lcall
push
push
cmp
sub
mov
add
or
mov
push
out
cmp
ret
jecxz
ss
sub
shl
stos
std
call
sbb
icebp
mov
push
sub
push
push
push
aaa
adc
lret
mov
pop
gs
dec
pop
or
movsb
aam
jmp
sbb
insl
xchg
lods
or
xor
outsl
xchg
into
jnp
sub
jbe
ja
cmp
and
in
add
xor
adc
cmp
cmc
sub
add
scas
and
mov
jl
mov
push
ss
lret
jge
and
adc
jle
clc
adc
lods
lea
pop
add
and
mov
pop
movsl
repnz
sub
dec
int3
jg
jns
mov
and
inc
mov
ret
jg
stos
or
fst
sbb
push
sti
xchg
jp
adc
mov
loopne
push
ficoml
or
fstp
fs
jbe
xchg
xor
cld
mov
push
clc
push
repz
call
xor
and
subl
std
mov
cwtl
std
imulb
mov
cli
repz
rolb
push
xchg
dec
std
ja
mov
out
add
cmc
in
insb
outsb
divl
lods
mov
pop
rol
ret
xor
icebp
jns
inc
cmp
cmp
sahf
mov
clc
jae
fmull
out
mov
sub
add
sahf
stos
aaa
daa
ljmp
jecxz
or
jo
mov
jl
repnz
cmpsl
out
cmp
mov
push
pushf
inc
cmp
jp
pop
jge
push
cmp
xchg
sbb
inc
mov
pop
mov
mov
jge
stos
push
sub
fistpll
or
mov
mov
repnz
stos
or
adc
or
lea
gs
xchg
fmull
or
sub
out
push
add
mov
or
sub
push
inc
enter
leave
movsl
popa
daa
mov
in
iret
add
lds
pshufw
stos
out
sub
out
out
mov
mov
arpl
movsb
cmpsb
movsb
repz
int3
enter
or
fsubrs
lret
pop
pop
movsl
addr16
or
shl
or
or
loope
psrlq
movsl
faddl
jno
outsb
lret
ss
cltd
mov
js
imul
cmp
or
sahf
add
push
bound
sbb
mov
and
xchg
and
hlt
jbe
or
sub
fucomi
cmp
sti
movsl
lahf
cwtl
aaa
or
fistpl
jecxz
or
xlat
xchg
pop
add
jp
and
jno
push
daa
or
mov
jo
clc
cmp
call
xchg
jns
lods
sub
fucomip
and
imul
loope
in
xlat
sbb
pop
push
fcmovne
and
mov
mov
lret
dec
pop
and
push
xchg
mov
or
sbb
ret
and
and
loope
cmp
scas
push
dec
pop
mov
cld
lret
or
sahf
jns
add
mov
in
in
daa
inc
das
xor
dec
out
dec
and
inc
push
iret
pop
and
testb
add
pop
cmp
xchg
inc
roll
xor
filds
sub
or
jl
push
sbb
daa
mov
cmc
adc
adc
aam
popf
mov
push
test
popa
int3
mov
lret
mov
nop
dec
pusha
movl
dec
in
xor
nop
pop
rcrl
shrl
fucomp
add
in
inc
imul
cmc
xchg
iret
retw
inc
adc
pop
andb
repz
js
inc
movsl
cmp
cmp
adc
mov
into
subl
mov
push
cmp
sahf
int
faddl
popf
add
testl
mov
jne
add
dec
outsb
jne
lds
test
ret
sbbb
inc
mov
push
mov
es
xor
stos
xchg
std
xchg
iret
inc
push
sbb
pop
push
mov
jl
mov
es
and
out
imul
push
fidivrl
nop
out
sbb
loope
push
cwtl
sub
xor
inc
mov
jg
dec
incb
hlt
cmp
pusha
fcmovb
cld
sub
lahf
sar
addr16
xor
inc
or
pop
test
adc
push
adc
in
imul
cmp
rcll
jne
fidivs
mov
out
out
push
mov
mov
and
daa
mov
in
cld
cmp
sbb
xchg
push
mov
outsl
cltd
and
out
lret
sbb
in
std
jl
and
pushf
dec
jg
andb
test
fwait
scas
das
cmp
test
mov
jmp
adc
aad
cli
xchg
jle
loop
cwtl
and
inc
popf
add
subb
lods
mov
or
or
test
dec
jmp
clc
iret
stos
cmpsl
ja
mov
repz
addr16
pop
nop
aad
mov
add
out
sbb
fidivs
hlt
pop
xchg
js
jbe
pushf
jnp
push
das
sub
stos
xchg
nop
jne
cld
xchg
mov
fcompl
mov
inc
or
loope
jo
jle
clc
xor
dec
cmp
pusha
das
in
in
adc
dec
dec
mov
and
rolb
push
or
rol
jg
pop
cmc
sub
cli
loop
jl
addb
ljmp
iret
mov
jl
push
adc
pop
fdivrl
nop
jo
mov
ljmp
or
mov
popf
mov
ret
cmp
mov
les
fwait
enter
imul
or
gs
mov
ficoml
test
push
xchg
shr
scas
or
jne
xchg
dec
sahf
lock
lret
pop
cmp
push
repz
xchg
adc
mov
mov
stos
ja
jnp
xor
cmp
mov
clc
scas
in
nop
push
xchg
pop
xchg
mov
adc
push
aas
xchg
add
or
std
jl
dec
push
mov
pop
dec
shrb
aad
and
test
adc
xor
cmp
mov
insl
xchg
es
cmp
fldcw
outsb
adc
movl
inc
push
outsb
push
dec
jb
stos
inc
ret
mov
mov
std
xor
mov
jne
and
adc
pop
aaa
fcmovne
mov
xor
shlb
sbb
add
out
push
push
push
jge
mov
lahf
cwtl
insl
xor
push
repz
adc
inc
cmp
shll
data16
dec
stos
push
pop
jmp
mov
fstl
mov
sarb
jecxz
in
ret
sub
mov
mov
or
adc
repnz
push
imul
repz
jp
sbb
jmp
bound
neg
sub
adc
cmovge
mov
and
xchg
into
xchg
outsl
rcrl
adc
push
test
enter
js
xor
adc
fcoml
movsl
xchg
clc
or
cmp
ficoml
leave
mov
cwtl
mov
test
loop
and
loope
push
cmp
mov
or
gs
cwtl
add
cmp
mov
adc
mov
mov
xchg
mov
sub
pop
xor
pushf
add
push
sub
lret
iret
rolb
jp
pop
push
fdivrl
and
adc
movsl
mov
rcll
ds
jns
xchg
push
leave
out
push
cmp
in
cmp
jo
cmp
enter
dec
mov
loope
fldt
jg
mov
dec
inc
fmuls
cmp
stos
ret
cmpsl
sarl
enter
and
mov
jg
scas
xor
add
add
adcb
push
sbb
lret
jns
push
lret
jno
insb
imul
ret
sbb
sub
sub
add
dec
or
jb
pushl
and
outsb
push
push
mov
mov
mov
jnp
jp
inc
rcrl
dec
cmpsb
mov
dec
mov
inc
jge
dec
sub
aaa
add
xor
mov
stc
add
jae
mov
add
dec
inc
push
fmuls
ss
imul
popf
add
pop
sbb
jmp
and
sbb
orl
insb
pusha
out
out
jg
pop
gs
mov
or
lds
mov
add
mov
lahf
push
hlt
fildl
mov
cmc
mov
sbb
es
xor
jmp
std
inc
ljmp
sbb
adc
and
pusha
js
cmc
or
and
jg
mov
test
push
mov
insw
in
out
movsb
inc
mov
shrb
ret
xor
mov
test
adc
jne
mov
mov
sub
ret
es
adc
sbb
push
iret
dec
dec
popf
cwtl
mov
mov
cmp
insb
dec
insb
mov
movsl
mov
not
add
lods
shrd
mov
push
mov
adc
sahf
xor
cmp
jmp
movsl
aad
sbb
imul
lods
cld
es
xchg
test
jae
cltd
pop
roll
imul
inc
jmp
and
shrb
fadds
fwait
ds
gs
cmc
or
mov
mov
xchg
cmp
xor
outsb
lds
jmp
sub
stos
movsb
jge
and
fbstp
jp
es
jl
mov
jbe
xchg
xchg
jg
jae
pop
push
fidivrs
and
repnz
pop
aad
aaa
sbb
outsl
mov
pop
popa
pop
jnp
push
js
scas
movsl
add
xchg
pop
or
nop
test
inc
sbb
test
jg
xchg
jns
aas
test
push
add
into
out
fcomp
adc
dec
inc
ja
or
xchg
gs
cmp
xchg
dec
xor
gs
mov
into
gs
stos
push
or
fistps
xor
js
add
dec
mov
jbe
inc
jg
push
sbb
jae
inc
mov
jns
xchg
xor
mov
dec
fisubrl
xlat
adc
cli
cmp
sub
push
pusha
add
pop
ja
jne
mov
cmpb
inc
push
test
clc
cmp
and
out
fsts
jg
and
xchg
mov
lods
scas
clc
xor
fmull
adc
xor
scas
js
cmpsl
orb
imul
jne
mov
dec
sub
jge
inc
aam
scas
lods
adc
mov
mov
add
mov
fbstp
imul
test
addr16
mull
pop
movsl
aas
adc
cmc
jl
lcall
sbb
mov
sbb
fimull
insb
lahf
testl
cmp
fidivrs
lea
lcall
stos
add
aam
pop
mov
xor
jle
mov
stos
in
enter
gs
jmp
aam
cmp
stos
or
shlb
scas
sbb
stos
push
jle
sbb
shrl
call
imul
pop
stc
int3
jmp
hlt
pop
cmp
dec
inc
pop
mov
in
fidivrs
pop
cmp
xor
mov
dec
jns
or
xor
subb
mov
push
xor
in
push
loope
xchg
cltd
mov
push
cld
xchg
mov
xchg
movsl
in
adc
popl
adc
je
push
orl
jge
mov
inc
in
jno
pop
sbb
xor
push
repnz
repnz
fistpl
dec
xchg
sbb
push
pop
sub
or
cld
mov
sti
xor
jbe,pn
out
subl
mov
xor
sub
sbb
enter
dec
pop
jg
das
inc
movsb
push
xlat
pop
int
sub
in
pop
pushf
pop
sub
jo
ficoms
cmp
setnp
ljmp
into
das
call
or
cmp
jg
fs
lods
adcb
pop
cmp
bound
sub
mov
pop
pop
pop
arpl
pop
fbstp
in
xor
cmp
movsl
xor
mov
inc
mov
xchg
cmpsb
clc
sbb
pop
mov
out
das
push
mov
das
inc
nop
and
outsb
inc
stc
iret
pop
icebp
xchg
sub
jle
stos
sub
ret
jne
push
push
outsb
adc
inc
push
cli
enter
mov
push
mov
pop
inc
jecxz
pop
or
jmp
test
in
popf
jl
sahf
mov
lock
dec
push
imul
mov
xchg
cld
inc
mov
pop
cld
dec
rcrl
mov
pop
sahf
fcoml
mov
shll
stos
dec
add
or
sti
jp
adc
lods
xchg
jmp
imul
or
mov
xlat
pop
mov
push
aam
insb
orb
pop
dec
fsubrp
push
jle
mov
and
cmpb
pop
fdivrl
rol
mov
mov
int
inc
test
leave
and
inc
fildl
cmp
ret
leave
add
fnstcw
popa
cmpsl
mov
adc
rol
call
sbb
xchg
mov
cs
xchg
xchg
pushf
xchg
out
jbe
inc
sbb
and
or
in
sbb
insl
cli
rcrl
repnz
loopne
pop
pop
sarl
dec
fcoml
xorl
xor
inc
mov
sub
aas
push
sub
sub
fsts
outsb
cmpsl
pop
fiadds
rcrl
les
lock
xchg
imul
das
insb
in
and
mov
loop
or
lods
int3
xor
pop
loopne
test
cmc
push
jg
fcoml
cmp
outsl
xchg
out
dec
inc
sbb
push
inc
sbb
popa
xor
cmp
cmp
or
test
dec
inc
fs
mov
mov
fdivrs
orl
jns
scas
les
std
shlb
jp
pop
or
cmp
or
ja
and
mov
arpl
loop
cs
aam
inc
dec
jecxz
fldenv
ja
xor
jbe
push
dec
xchg
pop
xor
nop
subb
push
lret
mov
std
cmc
push
insl
inc
mov
call
dec
stc
mov
test
fbstp
mov
push
push
pop
lcall
sub
outsb
enter
out
cld
jl
in
test
cld
mov
adc
call
xchg
hlt
std
jmp
scas
or
mov
cmp
dec
test
lods
test
les
sarl
push
xchg
into
xchg
push
mov
dec
jp
pop
ret
jns
push
push
inc
jo
aam
sbb
fcompp
pop
jno
subl
out
stos
lcall
pop
dec
rclb
dec
cmc
push
mov
mov
adc
hlt
jmp
inc
addr16
inc
ret
insl
js
xchg
or
xchg
fdivr
dec
pop
fs
dec
or
pop
pushl
mov
sub
fdivrs
push
jmp
pop
jmp
cmpb
imul
xor
dec
and
jg
inc
ret
sub
xchg
fwait
or
jne
daa
add
dec
lahf
lahf
pop
lret
aas
jecxz
xchg
stos
xchg
sarb
scas
insb
mul
xchg
aas
inc
push
test
jg
jo
in
mov
notl
xchg
jmp
xchg
cld
mov
adc
clc
add
inc
or
sbb
imul
jmp
xchg
jmp
and
jp
dec
in
jnp
push
inc
ja
mov
mov
cld
flds
outsb
jp
sub
xlat
int3
pop
adc
xor
dec
xchg
dec
adc
cwtl
gs
xchg
cltd
cmp
inc
mov
cmpsb
pop
push
sub
sbb
push
cmp
push
xchg
xchg
leave
ss
or
into
xor
xor
sub
lock
push
clc
xchg
xchg
sbb
loop
mov
mov
fnstcw
pusha
adc
xchg
setne
leave
mov
lahf
add
call
lahf
test
std
push
push
out
cmp
je
lods
jno
pop
aam
xor
pop
xchg
add
xchg
cltd
adc
sbb
rcr
pusha
repnz
push
dec
inc
mov
enter
dec
cmp
add
scas
movsl
orl
mov
cmp
icebp
sbb
xor
add
cwtl
mov
fdivrs
scas
pop
jbe
out
test
lods
cmp
inc
cmp
jle
fcoml
mov
and
mov
pop
push
enter
dec
or
es
icebp
mov
xor
push
push
js
pushf
loope
loopne
inc
cltd
das
addl
mov
lcall
dec
push
test
sarl
mov
int3
cmpsl
lds
into
sub
dec
sub
out
push
cmp
je
mov
fs
push
and
fwait
inc
cli
dec
or
int3
nop
cmpsl
mov
mov
xchg
inc
inc
data16
adc
ja
das
cmp
daa
or
fnsave
pop
out
sbb
insl
loop
xor
dec
push
addr16
mov
add
or
xlat
push
adc
jl
pop
jb
movnti
cmpsl
jmp
fildll
stc
daa
out
inc
in
push
and
scas
scas
pop
clc
mov
jmp
cmpsb
adc
mov
popf
mov
xchg
ljmp
daa
push
cmp
ss
adc
rcrb
or
outsb
es
jle
mov
cwtl
sub
loopne
jbe
inc
lock
rcrb
sub
and
mov
popa
sub
rcll
xor
mov
add
fistl
dec
dec
push
test
cmp
adc
or
fmull
ja
mov
jnp
sbb
push
inc
or
stos
mov
ljmp
test
mov
xchg
adc
sbb
add
mov
dec
inc
add
arpl
repnz
mov
inc
hlt
mov
jb
les
mov
lds
fistl
sbb
xchg
cld
mov
push
sarl
mov
pop
jbe
inc
fsubl
dec
or
pop
add
sbb
outsb
scas
stos
movsb
enter
clc
mov
adc
sti
pop
inc
lods
test
push
adc
clc
out
xchg
clc
lods
bound
push
in
jae
cmc
dec
sbb
into
dec
pop
in
imul
jns
gs
lock
test
mov
cmc
mov
mov
lret
dec
jo
add
xor
leave
ss
or
add
jae
stos
ficompl
inc
pop
std
int
in
and
out
add
ss
jl
jno
outsl
ret
or
out
xchg
push
test
pop
xchg
xor
ljmp
add
dec
les
shlb
je
and
stos
and
jg
cmp
aas
sub
inc
push
mov
test
int
cmpsl
shll
dec
loopne
mov
lods
in
test
dec
sub
adc
stc
fucomi
xor
notb
in
scas
sti
mov
jl
negl
dec
sub
outsl
test
lods
or
loop
jb
daa
lahf
dec
jnp
int3
stc
cmp
lock
das
test
mov
or
je
pushf
test
jnp
jo
call
rclb
ja
pusha
sub
mov
ljmp
dec
gs
mov
add
cmp
fucom
mov
jnp
push
sub
movswl
sub
es
mov
cmp
fst
les
movsb
inc
ss
lea
sub
mov
aad
jno
adc
out
test
dec
mov
cltd
cmp
xchg
add
mov
fisubrs
xchg
xor
imul
in
jne
inc
aad
mov
mov
xchg
movsl
sub
addr16
les
fimull
in
scas
scas
movsb
dec
cmpl
and
dec
ds
das
xlat
out
mov
and
sbb
pop
imul
push
nop
aas
xchg
jae
mov
xor
ss
add
call
or
mov
adc
cmpsb
mov
jmp
int
out
dec
xchg
xor
cmc
adc
bound
out
std
pop
clc
mov
icebp
movsl
lds
sbb
cmp
pop
cli
test
lea
jl
pusha
into
add
or
das
arpl
mov
xchg
sbb
fs
in
int3
adc
cmp
push
rolb
inc
jp
pop
les
enter
cmp
stos
loopne
push
or
xchg
mov
fstpt
ljmp
scas
mov
ret
and
mov
pop
jge
inc
cltd
out
xchg
dec
aaa
hlt
in
push
shll
push
pop
jmp
cmp
in
das
mov
sub
dec
enter
stos
lods
sbb
dec
cmp
inc
jne
mov
lret
jg
sub
imul
or
jg
xchg
sub
rcll
ffreep
call
mov
cmp
aas
arpl
test
popa
add
xor
cmp
mov
cltd
idivl
cwtl
jno
push
mov
cmp
adc
out
outsl
cmp
lret
pop
lahf
inc
movsl
lock
pop
jmp
pop
pop
je
adc
jp
mov
sub
xor
mov
sbb
cmp
pop
cwtl
inc
cmpsl
insl
imul
or
mov
lds
mov
sbb
int3
add
fsubr
or
xchg
push
pop
shlb
mov
sbb
hlt
ror
jl
xor
ja
xchg
mov
push
dec
divl
mov
and
hlt
push
adc
xor
call
fimull
inc
jnp
xchg
imul
les
xchg
clc
stc
adc
pusha
sbb
xor
shll
incb
test
sub
sub
xchg
jnp
ret
add
fmul
mov
ss
adc
adc
and
jle
in
mov
jno
mov
fidivrs
js
xor
fmuls
or
stc
iret
dec
out
cltd
daa
or
movsb
enter
call
in
hlt
mov
jg
cli
sbb
jae
sub
xchg
std
mov
dec
cmp
cs
ja
and
xchg
jle
push
dec
scas
inc
rcrl
hlt
test
push
mov
sbbb
and
repz
or
cmp
push
sub
out
notl
add
lcall
sti
adc
sti
dec
dec
add
js
push
in
xchg
jne
out
sti
and
in
mov
mov
scas
sbb
push
ja
shlb
and
mov
pop
lods
nop
in
and
lock
mov
sub
sub
sub
cmp
sbb
push
cs
mov
add
xlat
shrb
inc
and
sub
movb
jp
cs
mov
and
stc
sbb
cli
fistpl
mov
and
xor
pop
mov
mov
mov
cmp
xor
cmp
fs
add
adc
push
cmp
xlat
dec
sbb
add
pop
mov
xlat
test
mov
movl
fisubs
movsl
push
sbb
lea
sbb
scas
xlat
iret
sub
cwtl
mov
cmpsb
out
lods
mov
fstps
imul
ss
jmp
cs
cld
xor
lods
in
sbb
mov
nop
fdivp
mov
mov
ds
push
sbb
or
mov
out
pop
xchg
sbb
mov
and
imul
jp
dec
repz
sti
inc
lods
cmp
test
ss
ret
inc
in
fs
sub
lea
sub
pop
hlt
nop
push
add
pop
lds
mov
lods
mov
int3
dec
fistpl
xlat
push
test
jp
mov
mov
cs
daa
mov
push
cmp
or
pop
jbe
add
mov
inc
out
scas
cwtl
jl
push
lock
out
adc
sbb
and
or
jnp
jge
jae
es
arpl
out
xor
insb
sbb
jg
jno
and
shrl
mov
xchg
mov
stc
push
imul
push
xchg
les
mov
xchg
lahf
test
push
lods
cmpsb
jecxz
ret
cwtl
icebp
test
sbb
nop
push
jae
lods
dec
and
xor
or
neg
outsb
fbld
add
imul
push
shl
push
sub
in
test
and
cmp
pushf
xchg
pop
mov
gs
daa
outsl
mov
adcl
loope
arpl
subb
fstl
int
pop
push
in
mov
mov
inc
popa
dec
loop
xor
push
movsb
inc
fmuls
jo
jecxz
mov
data16
ficoml
sbb
dec
cmc
jp
in
fildll
push
adc
inc
loope
pop
sub
stos
adc
call
sub
cmp
fistpll
jl
push
jbe
xchg
add
sbb
inc
les
fwait
ret
adc
pushf
sbb
cmp
inc
lds
xor
lcall
cmp
sbb
cs
add
fsubs
popf
jge
repnz
test
imul
push
mov
jne
xchg
int3
add
dec
and
push
dec
push
cmp
jecxz
fisubrs
movsb
sbb
mov
mov
push
das
test
ret
insl
mov
nop
movsl
mov
mov
inc
fptan
mov
notb
mov
cmc
mov
xchg
gs
xor
in
mov
mov
jecxz
fwait
and
add
in
popa
and
test
push
or
push
inc
inc
xchg
stc
mov
pop
or
loop
mov
scas
test
mov
lock
mov
pop
jecxz
int
cli
adc
ds
pop
hlt
int3
out
xor
cmp
xchg
cmp
scas
popf
mov
imul
jp
data16
pop
inc
or
adcl
movsl
test
sbb
es
fbstp
push
dec
mov
push
cmp
outsb
pop
in
jns
rcrl
scas
insb
lahf
aas
lock
push
dec
cmpsl
add
cs
test
daa
je
daa
cmp
push
sub
movl
adc
adc
sub
fs
mov
js
adc
aad
inc
fistpl
xchg
in
shll
pop
sbb
or
or
arpl
movsb
xchg
adc
adc
aas
or
dec
daa
imul
mov
inc
jno
insb
mov
adc
shll
int
std
xchg
dec
mov
inc
push
sbb
lods
stos
filds
loope
mov
push
dec
jnp
scas
scas
mov
or
mov
loop
addb
jecxz
mov
xchg
mov
jno
jl
jp
adc
aam
rolb
ret
decb
insl
mov
jno
sub
push
adc
fwait
out
int3
pop
mov
cmp
fbstp
cmp
or
pop
pop
jno
dec
mov
sbb
cs
sbb
cmc
popf
add
dec
fistpll
sti
mov
pop
jmp
bound
mov
add
shrl
sbb
push
push
leave
outsb
jb
rolb
or
test
pop
lods
lahf
jg
mov
fidivs
imul
mov
or
xchg
pusha
out
les
add
cmp
mov
stc
adc
fists
dec
stc
ret
aas
call
gs
pop
dec
insl
adc
enter
cmc
cmp
test
call
addr16
test
hlt
fimull
cmpsb
imul
jecxz
xor
imulb
dec
imul
cmp
pop
mov
add
lock
mov
mov
dec
add
repnz
pop
adc
hlt
add
jg
out
push
mov
xlat
xchg
int3
push
mov
fbld
stos
or
xchg
mov
in
data16
dec
cltd
roll
fwait
xor
loopne
shl
jmp
mov
xchg
push
imul
jp
sti
and
push
sbb
test
in
sbbb
pop
jmp
imul
jb
mov
lods
mov
lret
jb
or
xor
inc
test
gs
push
fildl
push
mov
or
popa
mov
adcl
pop
inc
push
stos
sti
lret
mov
cwtl
out
adc
out
mov
rorl
mov
aam
das
loopne
outsl
mov
lcall
lea
int3
push
jg
loop
mov
or
dec
out
sbb
aad
outsb
movsl
xchg
sbb
push
jae
adc
or
fadd
dec
aas
or
in
xor
cmpsl
imul
jecxz
lret
stc
inc
mov
mov
fwait
jecxz
xor
mov
mov
xchg
ret
std
lea
add
mov
xchg
dec
fwait
mov
shrl
push
fbstp
push
sahf
dec
je
nop
xlat
nop
test
or
daa
xor
mov
or
add
pop
xor
aaa
in
adc
sbb
mov
int
rol
ret
ss
out
ljmp
aaa
pushf
test
lock
mov
and
pop
mov
lods
xchg
es
bound
and
cmp
pop
fidivs
arpl
shrl
sbb
daa
dec
cmpl
test
cli
bound
inc
lea
nop
sub
sbb
cmc
pusha
jnp
mov
lods
in
mov
pushf
mov
and
jnp
xchg
mov
sub
push
cltd
inc
cli
dec
sub
or
aas
shlb
outsl
push
nop
movsl
sub
scas
pop
mov
mov
cmp
adc
hlt
mov
scas
sbb
stos
imul
test
pop
cmp
jmp
inc
mov
clc
lret
jmp
add
aam
inc
push
repnz
icebp
pop
sar
xlat
mov
xor
push
mov
inc
call
cmc
lret
test
xchg
cs
sub
jp
jle
stos
sbb
sub
jno
xchg
sub
insb
mov
daa
jmp
dec
mov
lods
mov
ret
aas
fisttpll
icebp
mov
test
stc
lock
xor
or
mov
xchg
mov
insl
fisttps
inc
push
call
out
adc
popf
imul
fldcw
aas
mov
cmp
sti
or
cmpsb
in
mov
inc
outsl
sub
test
rol
sub
push
aam
adc
pop
in
add
or
js
rorb
andb
sub
stos
enter
popf
pop
push
push
test
jp
xchg
movsb
addb
cmp
inc
popa
icebp
iret
inc
mov
ret
rorl
stos
push
imull
cltd
jns
iret
add
ja
inc
adc
adc
add
adcb
popf
int
push
outsb
imul
inc
or
jle
jecxz
lea
cwtl
movsl
imul
sub
movsl
jp
mov
add
push
dec
pop
adc
mov
pop
xchg
cmp
push
adc
stc
fmull
xchg
sub
rorl
pop
jge
je
je
push
pop
out
mov
dec
test
insb
mov
and
dec
movsb
mov
xor
push
push
mov
sbb
dec
cld
data16
cmp
and
leave
mov
mov
or
ljmp
sub
jg
enter
inc
lcall
stc
stos
outsb
out
jmp
inc
lds
cwtl
int3
iret
out
stos
mov
pop
xor
out
ror
mov
hlt
mov
adc
xchg
popf
fsubl
xor
cmp
and
mov
jp
push
sub
xor
or
ds
in
pop
test
hlt
call
fldcw
cmpsb
shlb
jb
adc
es
mov
jle
pop
and
scas
sahf
xchg
mov
mov
sahf
sahf
imul
push
pop
mov
cmp
hlt
insb
adc
dec
divl
pop
daa
xchg
hlt
mov
push
add
popa
push
mov
inc
out
sub
cmp
push
cmc
jecxz
and
in
cs
call
scas
and
cmpsl
int
cmp
cmp
scas
mov
cmpsb
sbb
xchg
xlat
xchg
arpl
mov
add
mov
dec
je
idiv
fmul
test
xchg
sbb
xchg
jge
jno
aam
mov
jl
clc
pop
dec
dec
ja
sub
or
add
je
daa
add
enter
lret
jbe
pop
cmp
mov
into
lcall
xchg
mov
mov
inc
mov
cmc
into
add
adc
les
lret
aad
ss
cmp
jns
push
gs
pop
into
push
rcr
popf
cltd
clc
out
aam
fnstsw
cmpsl
call
out
cmp
or
dec
or
imul
inc
add
aaa
test
fdivl
xchg
lahf
mov
cs
test
jecxz
ret
scas
sbb
aam
hlt
fidivs
adc
fisubrl
and
push
pop
popa
lea
arpl
fcmove
mov
cmp
inc
or
pop
or
int
les
fdivrl
or
pop
stos
and
shll
mov
stos
gs
lods
outsl
rclb
test
stc
xor
push
sub
call
jmp
ret
enter
out
rorl
fs
push
and
in
push
inc
dec
adc
add
sub
mov
jno
mov
jnp
push
jnp
sarl
xchg
cmp
bound
test
xchg
lret
movsb
clc
dec
add
in
insb
scas
push
icebp
cli
inc
jbe
mov
movsb
cltd
pop
add
arpl
jmp
push
add
pop
inc
in
out
out
push
adc
cld
dec
fimull
shlb
inc
cli
call
test
add
adc
gs
test
push
negb
mull
push
add
hlt
stos
cs
mov
push
xchg
fldcw
mov
fnstcw
mov
xchg
sub
fiadds
sti
sbb
clc
sub
add
cli
mov
pusha
mov
arpl
mov
loopne
jae
jl
mov
shl
das
dec
mov
xor
clc
jb
xchg
popa
sti
dec
std
xchg
repz
sbb
pop
loop
clc
jae
lods
xchg
mov
imul
fdivrp
popf
or
xor
ss
jl
jns
dec
inc
mov
mov
mov
add
pop
push
popf
adc
in
imul
jae
jg
pop
push
sbb
fwait
cmp
add
in
in
sarl
sbb
ljmp
shlb
bound
mov
push
add
lods
fisttpll
sub
adc
jle
lcall
jmp
daa
fwait
mov
xchg
push
and
xchg
ja
out
stc
out
sub
mov
rorl
int3
adc
cltd
fisttps
fmul
and
sbb
int
sbb
test
push
mov
push
jbe
mov
sub
and
jnp
xchg
shll
std
dec
stos
lea
pusha
in
or
or
and
xchg
int
addb
pop
mov
pop
lahf
pop
or
xchg
pop
xor
cmc
loopne
mov
mov
mov
movsl
cli
jle
sub
aas
mov
rcrl
jnp
sbb
pop
xorb
int3
notl
sbb
sti
pop
sbb
int
stos
jbe
lcall
mov
pop
jecxz
dec
mov
in
out
sti
fnstcw
imul
jb
sbb
out
dec
cmpb
sub
fdivs
and
mov
imul
mov
stc
addr16
xor
adc
and
enter
cmpsl
sub
ret
mov
inc
xchg
jae
test
call
xchg
repz
pop
jnp
stos
jns
inc
sub
in
mov
xchg
inc
and
add
and
ret
orl
std
dec
cli
cmp
aaa
push
data16
pushf
push
fcmovu
pop
mov
lret
cld
lods
aas
hlt
adc
cmp
fisubs
cwtl
dec
shlb
or
xchg
aad
mov
or
jecxz
adc
lods
xchg
push
roll
jno
pop
data16
testb
shl
lds
lods
cs
adc
cmp
mov
int3
ss
aas
dec
frstor
push
mov
mov
sbb
dec
adc
dec
stos
pop
cmp
jmp
cmp
loope
add
adc
xor
push
or
out
inc
sub
ret
fsubr
dec
add
push
lds
int3
popf
sub
xchg
mov
fwait
bound
nop
xchg
mov
and
mov
int3
addl
fisubrl
or
lcall
or
out
lret
mov
push
cli
push
or
cs
xchg
stos
das
mov
xchg
repz
loop
jbe
xor
ljmp
mov
imul
mov
pop
pop
in
xchg
inc
rcrl
into
dec
mov
jbe
cmp
insb
sub
js
das
cltd
les
out
test
dec
pop
dec
int
cltd
fsubrl
sti
cmp
scas
jae
mov
pop
or
pusha
sub
test
loop
add
arpl
fdiv
add
cltd
mov
and
or
xor
xchg
inc
mov
and
mov
ljmp
mov
mov
jnp
cmp
fldcw
mov
jae
sahf
out
test
add
inc
cmp
push
cltd
dec
fldpi
ret
int
js
xchg
pop
es
lcall
pop
xor
jnp
daa
jl
add
jmp
outsb
loope
cmpsb
call
repnz
fnsave
dec
mov
inc
sub
and
or
adc
rorl
pop
loop
or
push
pop
out
mov
popa
stos
js
inc
jae
imul
jmp
lcall
and
jl
or
leave
jbe
pop
ds
mov
cmc
mov
pop
and
xor
adc
or
lcall
lea
mov
jge
icebp
and
nop
mov
aad
inc
ds
pop
sbb
mov
lods
popf
pop
pop
add
pcmpeqb
inc
jns
add
xor
sub
movsl
jmp
xchg
repz
jnp
mov
jecxz
sub
das
xlat
ds
flds
call
xchg
test
sbb
ja
ret
or
dec
aaa
xchg
mov
sti
outsb
lret
mov
mov
lret
imul
inc
mov
arpl
xor
call
push
or
or
add
push
hlt
mov
inc
sbb
inc
pop
jp
sbb
cmp
out
enter
mov
sbb
mov
mov
mov
dec
and
insb
mov
fucomip
ss
xor
je
push
jmp
push
mov
scas
inc
jg
ss
or
stc
adc
mov
loope
or
or
or
mov
xchg
les
les
pop
call
or
outsl
cmpsl
in
pop
sarb
and
mov
jge
adc
jl
sbb
mov
xor
xor
add
ret
ljmp
int3
test
push
imul
sbb
nop
sbb
lods
push
xchg
cwtl
pop
mov
enter
mov
mov
rolb
xchg
aad
jmp
lret
cltd
add
xlat
mov
add
xchg
xchg
repnz
mov
into
xor
sarl
fcoms
mov
and
not
jne
jo
iret
sub
xchg
sti
sub
push
fadd
or
scas
roll
xchg
push
orl
popa
insb
ljmp
fdivr
or
aam
iret
push
fistl
inc
sbb
in
sbbb
push
pop
cltd
aas
mov
mov
mulb
or
pop
inc
mov
adcb
add
in
sbb
inc
in
fnstsw
dec
mov
push
pop
shrb
insl
lea
push
sub
jno
popa
fidivrl
jne
xchg
sbb
cmpsl
mov
dec
repz
dec
dec
fildll
movl
add
movsl
out
cmp
dec
push
hlt
xlat
into
dec
mov
xlat
ret
imul
dec
and
fs
loope
ja
add
fsts
push
aaa
mov
or
add
cmp
sub
in
mov
lcall
ds
mov
ds
les
sub
adc
inc
icebp
sub
mov
inc
cmp
pop
jge
pop
pop
mov
shlb
jnp
insl
cld
jae
dec
mov
cmp
xchg
sub
add
imul
xchg
pop
sub
fs
sbb
pop
xchg
mov
sti
and
out
loopne
xchg
mov
hlt
or
mov
pusha
mov
outsl
incl
inc
lock
mov
idivb
vdivps
les
sub
and
ror
outsb
arpl
jns
mov
pop
cltd
fdivrs
rclb
int
push
adc
sti
movsb
pop
add
and
aad
iret
push
dec
cltd
xor
jecxz
idivl
mov
xchg
dec
mov
ret
jnp
cmp
addr16
sub
call
cmc
cmp
or
out
xchg
sub
imull
and
mov
jb
rcrb
xchg
inc
jno
xchg
cmpsb
dec
scas
xchg
xchg
pusha
cltd
ja
mov
pop
sub
xchg
pushf
dec
jnp
mov
sub
loope
or
push
in
pop
xchg
lcall
sub
popa
pop
xchg
jae
xchg
jns
sbb
leave
and
addr16
lock
pop
mov
push
sub
daa
cmp
pop
cmpb
mov
mov
testl
dec
pusha
jb
pop
aam
jno
outsb
jns
lods
xchg
sub
stos
jmp
call
and
arpl
aaa
adc
repnz
repz
adc
pusha
inc
or
out
scas
jmp
in
insb
mov
xor
in
jae
xor
movsb
cmp
and
jbe
xor
daa
and
xchg
mov
mov
aam
adc
jp
mov
pop
and
mov
pop
jae,pn
fldcw
xor
sbb
mov
rclb
mov
das
adc
ja
mov
enter
mov
hlt
popa
xchg
sbb
mov
inc
test
mov
pop
arpl
inc
pop
pop
adc
jp
add
iret
test
or
stos
lret
lahf
xlat
cmp
stc
push
xchg
inc
std
mov
testb
jbe
mov
dec
mov
xor
fsubl
lahf
sub
fdivrs
enter
cmpsb
sti
xchg
xlat
inc
repz
aas
xor
scas
mov
xchg
dec
mov
inc
dec
or
je
sub
sbb
stos
ss
mov
add
subl
movsb
mov
mov
dec
mov
icebp
cmp
jmp
xor
imul
cld
call
icebp
sub
push
cmp
pushf
add
fwait
xchg
xor
sub
lock
lahf
sbb
dec
lret
scas
repnz
dec
js
jnp
or
inc
mov
insb
call
jbe
or
push
mov
cld
mov
ret
mov
imul
mov
xchg
pusha
repnz
cmc
or
jge
xchg
pop
jo
mov
cli
and
sbb
sbb
xchg
movsb
test
jl
mov
das
repz
cmp
inc
dec
inc
cmp
sub
xor
and
cmc
pushf
stc
jle
icebp
lea
jg
out
pop
cmp
lea
dec
mov
mov
cld
xlat
outsb
cmpsb
xchg
lock
cs
inc
xchg
xlat
sub
fnstcw
mov
leave
outsl
inc
lret
out
sub
cld
orb
lret
shrl
ljmp
sbb
xchg
cwtl
sahf
movsl
add
popa
sbb
roll
shlb
stos
shlb
fdivr
std
cs
cld
adc
stc
adc
shlb
enter
push
xchg
or
adc
sarb
mov
mov
push
fwait
pop
dec
fisubrl
mov
xchg
xchg
stc
dec
in
push
or
mov
mov
adc
loop
add
arpl
fdivp
imul
sbb
or
int
insl
repz
sub
jo
pusha
or
test
hlt
cmpsl
int3
jge
cmp
std
je
sub
jp
inc
pop
push
inc
sub
decb
inc
mov
pop
repz
xor
jne
mov
push
sbb
fnstcw
sub
ds
popa
repz
pusha
mull
loopne
mov
mov
jmp
cwtl
xchg
fistl
mov
cltd
imul
stos
mov
sbb
ljmp
arpl
nop
and
insl
ljmp
push
fildl
jecxz
lods
or
lds
ljmp
or
xor
cs
jo
mov
pop
inc
into
ret
cmp
sbb
inc
sbb
push
imul
lcall
or
insb
inc
aad
addr16
out
fldcw
add
mov
lods
fbstp
inc
push
dec
inc
mov
cld
out
icebp
mov
pop
mov
jp
or
clc
push
outsl
jns
unpcklps
jecxz
leave
sahf
mov
xor
jle
jp
mov
int3
je
xor
jle
ja
repnz
mov
push
gs
or
leave
lods
xor
pop
lods
and
mov
cltd
adc
lods
and
movsb
js
pop
mov
shl
cmp
pop
ss
loope
mov
test
in
jbe
xchg
mov
adc
jl
mov
jle
sbb
fwait
mov
jo
xor
clc
ret
stc
and
iret
pop
adc
mov
loope
push
rcl
push
fwait
xchg
mov
jge
xchg
lahf
sbb
adc
add
mov
lods
xchg
insb
mov
scas
pop
push
in
jno
dec
shl
in
and
scas
lods
es
sbb
mov
hlt
inc
xor
xor
cmp
pop
loopne
fcomip
nop
ljmp
or
mov
inc
pop
mov
mov
push
pop
inc
stos
cmpsb
dec
and
jmp
inc
pop
dec
stc
or
xchg
sti
jmp
dec
xchg
daa
jnp
subl
xchg
mov
add
dec
and
cltd
icebp
xor
imul
pop
imul
movsl
stc
cmp
movsl
and
adc
hlt
jbe
push
subl
jo
test
dec
inc
mov
cltd
pop
sub
stos
xchg
jge
pop
jg
icebp
mov
test
mov
insl
add
xchg
adc
cmp
pushf
and
xlat
add
or
and
cmp
popa
dec
sbb
cmp
bound
push
sahf
movsl
lcall
repnz
out
imul
and
add
outsb
sbb
mov
xor
iret
add
mov
sbb
mov
imul
inc
ret
out
push
adc
mov
je
pop
mov
add
mov
adc
mov
cmpsl
xchg
push
inc
mov
ljmp
aad
jns
scas
shl
cmp
out
xor
cmp
pop
int3
xor
xchg
add
ds
pushf
jnp
fs
outsl
decl
out
push
pop
inc
lods
add
ret
cmc
and
lea
push
cli
aaa
push
push
icebp
test
outsb
imul
and
gs
pop
dec
loopne
in
scas
adc
jg
faddl
sub
mov
mov
push
and
lods
sub
cmp
push
mov
jle
pusha
push
inc
in
popa
ss
call
lods
mov
int3
ficomps
jno
mov
pop
mov
inc
xchg
jae
adc
lock
mov
js
mov
pmovmskb
xor
xchg
addb
mov
mov
dec
pop
xchg
aaa
int
out
mov
adc
or
cld
pop
cld
imul
mov
scas
inc
dec
stos
into
aam
add
popf
in
stos
outsl
or
xor
pop
imul
inc
mov
inc
cmp
push
loop
aaa
test
fimull
push
loope
sbb
mov
mov
inc
test
add
scas
xchg
rcl
fcmovu
imul
xchg
push
rol
xor
ret
mov
adc
nop
push
push
aam
or
mov
jmp
stc
jle
data16
fdivl
and
repnz
sbb
fildll
aam
outsb
jmp
xchg
xorl
mov
mov
xchg
movsl
jecxz
lahf
push
inc
les
movl
adc
mov
je
mov
icebp
in
sub
sub
dec
or
test
pusha
mov
ljmp
push
add
loop
jns
cs
in
push
adc
js
fucomip
cmp
fucomp
jo
xchg
idivb
and
sub
into
bound
inc
and
sub
mov
jb
lret
inc
out
js
cli
outsb
sti
mov
and
or
cmp
xchg
and
inc
stos
jns
shl
dec
mov
imul
mov
fdivp
test
jmp
vmovdqa
imul
mov
insb
decl
dec
int
fbld
pop
mov
jo
in
in
xchg
and
test
loop
sub
or
push
or
bound
aaa
out
andl
popf
bound
test
fistpll
or
fld
lret
cmp
or
mov
test
aam
pop
in
pop
push
daa
shll
popf
fisttps
push
adc
or
ret
bound
in
cltd
pop
push
outsl
cs
add
dec
inc
sub
or
add
jae
cmp
cmp
repnz
mov
test
push
imul
insb
hlt
mov
or
pop
les
fists
mov
gs
or
dec
jmp
dec
xchg
or
xor
lods
in
pop
jno
xchg
mov
stos
lahf
dec
gs
bound
cs
fisttpll
cmc
cli
les
pushf
bound
dec
enter
mov
test
and
sarl
and
xor
lahf
cmc
lret
add
pop
xchg
jnp
push
mov
adc
inc
lds
sub
out
lods
popa
push
push
mov
fs
pushf
dec
or
xchg
jl
outsb
push
xchg
popa
gs
sti
mov
jns
sub
aas
outsl
das
icebp
mov
push
add
mov
nop
dec
adc
xchg
jle
rorb
iret
cli
fiaddl
in
hlt
in
popf
mov
ja
xor
inc
scas
cli
mov
inc
cmp
or
dec
mov
pusha
jnp
or
cmp
mov
or
xchg
dec
sarb
pop
cmpsl
fwait
ror
push
hlt
push
adc
es
inc
inc
mov
pop
dec
fldenv
test
cmp
es
rolb
and
loop
lea
push
xor
xchg
pop
or
cmpsl
mov
mov
xchg
fsubp
out
lods
sti
sbb
cltd
jb
cmc
nop
fwait
xchg
dec
mov
cli
mov
int
sarb
adc
xor
subb
mov
in
in
add
add
and
je
insb
pop
out
jae
stos
add
sbb
adc
cli
push
sbb
and
mov
xlat
out
inc
loope
daa
adcb
js
push
push
das
dec
mov
add
sahf
fwait
or
adc
mov
lds
lahf
out
dec
pusha
xchg
mov
cmpsl
sbb
inc
jg
mov
jl
lods
sbb
ds
je
stc
mov
js
cmc
push
sub
sarb
lret
loopne
xchg
cltd
mov
xor
or
sbb
fidivrl
lret
xor
test
out
shlb
outsb
out
mov
xlat
dec
clc
and
jno
xchg
out
add
fpatan
mov
orl
lret
pop
lods
in
mov
arpl
adc
or
and
cmpsl
mull
jae
repz
push
xor
xor
stc
xchg
sbb
into
testb
aam
lret
popf
adc
fldenv
sub
fistpl
lcall
lods
outsl
inc
lea
negl
ja,pn
cmp
mov
lahf
add
outsb
lahf
stos
jo
std
lods
jecxz
add
aas
adc
pop
outsb
mov
popf
cmp
out
sbb
rorl
ds
mov
xlat
jae
dec
lret
dec
push
lahf
popa
leave
pop
mov
xchg
jge
cmc
mov
mov
mov
mov
sub
or
shll
shr
cwtl
daa
xchg
jns
pop
cmpsl
bound
mov
mov
xchg
add
in
adc
negb
push
pop
xchg
shrb
popl
sahf
cmp
inc
or
test
dec
dec
popf
xor
inc
push
mov
in
xchg
jge
sub
mov
stos
pushl
scas
outsl
jl
cmpsl
fstpt
gs
mov
or
pop
addb
mov
dec
hlt
or
into
xchg
lea
pop
mov
cmpsb
mov
mov
les
or
stos
mov
out
cmp
jb
mov
mov
cmpl
jne
pusha
mov
ret
xchg
add
add
mov
in
sbb
xchg
push
adc
stos
sub
in
sub
push
insb
mov
bswap
inc
add
into
out
data16
sarl
inc
push
or
sahf
pop
into
out
icebp
sti
lret
into
xor
mov
jo
mov
push
cmpb
mov
and
pusha
xchg
addl
mov
dec
push
sub
stc
mov
or
iret
into
and
decl
inc
adc
and
jae
js
arpl
mov
loope
lea
xor
push
inc
pop
mov
inc
cmpb
outsl
xor
pop
add
mov
outsb
xchg
stos
daa
xchg
mov
or
xor
fwait
pop
mov
mov
cmp
std
mov
fwait
mov
pop
push
dec
or
into
or
in
aad
cmp
bound
mov
stos
lret
sbb
mov
push
call
lods
xchg
test
sarb
shlb
sbb
jmp
sub
or
sbb
xorb
sbb
rolb
xchg
pop
test
jle
sbb
jle
mov
push
lock
sub
in
jne
jp
jnp
or
sbb
sbb
jg
mov
pmulhuw
mov
and
ja
test
test
jae
xchg
sub
iret
push
mov
jg
int
mov
cwtl
push
icebp
hlt
out
hlt
add
aas
jl
pop
cs
cmp
mov
mov
cwtl
data16
jecxz
cltd
adc
sbb
xlat
shrb
roll
aam
outsl
mov
inc
push
jecxz
iret
pop
in
lret
out
pusha
and
loope
ljmp
add
fyl2x
stos
fisttps
adc
addr16
jmp
cmp
lods
adc
andl
add
add
or
add
xor
xor
das
decb
jae
ret
lds
scas
or
ficomps
cmpsb
mov
decl
jnp
cmp
sub
popa
cmp
adcb
jp
adc
lcall
pop
mov
dec
stos
push
pop
loope
mov
pop
stc
insl
mov
addl
jne
xor
outsb
mov
outsb
and
lods
push
xlat
or
add
push
xor
stos
inc
and
mov
xor
mov
cmc
das
into
inc
add
mov
xchg
push
rolb
rcll
mov
fsts
push
stmxcsr
insb
movsl
mov
pop
push
lods
or
in
mov
imulb
data16
add
cmp
cmc
loop
push
lods
sub
sbb
push
cmp
xor
and
xchg
loope
sbb
lds
ljmp
movsb
jae
lret
mov
dec
fldt
adc
ljmp
in
fadds
inc
xor
loop
cli
stos
jne
dec
data16
dec
das
lcall
ss
or
lcall
jmp
in
mov
test
sbb
sbb
cmp
jmp
lret
or
std
pop
ret
ja
xchg
dec
jg
ffreep
push
shr
ljmp
in
in
lock
push
xchg
repnz
leave
sub
daa
les
or
push
dec
mov
jae
imul
enter
or
dec
add
pop
sbb
aam
ja
and
pop
fsts
pop
pop
out
aad
data16
pushf
adc
ljmp
sub
fisttpll
jne
cmp
sub
popa
inc
ficomps
ss
cwtl
mov
pop
and
mov
jae
fidivrs
in
jne
xor
jbe
inc
mov
jmp
jae
jo
in
dec
clc
jmp
pop
repnz
sti
cmp
push
sahf
push
dec
xlat
push
or
fiadds
lods
jne
or
data16
aaa
pusha
in
fidivrs
mov
mov
adc
xchg
inc
mov
outsb
stos
sti
popa
jno
das
push
orl
add
adc
out
xor
xlat
xor
je
inc
daa
push
lcall
adc
dec
fidivrs
pop
aas
in
jbe
xlat
outsl
mov
or
pop
and
jg
mov
pop
xor
add
out
test
lret
pop
dec
lcall
push
xlat
xorb
insl
and
iret
mov
jb
push
int3
insl
scas
sti
inc
cmp
xor
jp
xchg
push
jg
jg
jg
or
cmpsb
test
xor
mov
sub
pop
lods
dec
mov
push
movsl
cli
arpl
movsb
scas
jo
lods
aam
pop
inc
xorb
mov
jbe
in
out
or
ja
leave
push
adc
insb
inc
lea
popa
lods
pushf
add
icebp
in
popf
jnp
sbb
dec
mov
adc
xchg
sub
orb
popa
dec
rolb
push
fldl
mov
insb
add
push
mov
xor
icebp
jmp
inc
or
cwtl
inc
mov
inc
cmp
lods
dec
mov
std
inc
movsb
cltd
and
enterw
ljmp
into
dec
ret
cmpsl
inc
loop
push
mov
jg
fwait
xor
xor
pop
jo
push
outsb
in
mov
xorb
or
pop
adc
das
icebp
iret
je
test
addr16
fnstsw
and
sub
mov
hlt
mov
dec
and
inc
add
xchg
pop
cmp
mulb
pop
mov
pusha
and
es
add
aam
xor
jae
cltd
int3
and
daa
fnstenv
out
jbe
icebp
jmp
dec
testl
pop
mov
imul
sarb
cld
dec
sti
ljmp
hlt
lock
mov
push
inc
xor
cmp
jmp
mov
test
adc
shlb
pop
jmp
fadds
mov
cwtl
inc
cmp
int
sub
test
imul
vphaddwq
jge
add
sbb
cmp
lods
in
push
neg
clc
jmp
mov
popf
pop
pop
rcrl
cmp
adc
addr16
testl
out
push
and
lret
lock
inc
sbb
jbe,pn
fcomps
lods
mov
inc
shll
or
imul
pop
mov
bound
sub
lret
jnp
add
gs
mov
cmp
adc
fistpll
jb
sbb
xchg
xor
lods
pop
xchg
xor
loop
push
dec
push
lods
out
jno
and
loopne
lock
sbb
scas
jecxz
mov
add
dec
xchg
mov
mov
testl
fsubr
int3
mov
push
inc
loopne
in
add
dec
hlt
or
mov
sub
clc
sbb
icebp
nop
or
adc
inc
jg
and
sub
jmp
inc
xchg
dec
and
xchg
imul
xadd
push
cli
mov
rorb
xchg
fidivs
mov
aaa
outsl
out
cmp
pop
testb
out
sti
jo
jmp
bound
lret
mov
dec
jg
mov
mov
add
sub
aam
mov
insb
sbb
mov
mov
add
mov
dec
inc
testl
and
sub
pop
mov
ss
cwtl
daa
lcall
es
sub
pop
inc
dec
shrb
fwait
xchg
adc
call
or
sbb
xor
aas
ret
ss
rcll
in
add
xor
aas
lds
in
sbb
test
adc
int3
rorl
test
idivb
push
mov
mov
adcb
gs
add
mov
sub
xor
inc
sbb
sarb
cmp
mov
push
outsl
and
dec
subb
ficoms
and
cmp
mov
jo
add
xchg
loopne
cmp
rcll
jp
movsl
rcll
mov
xor
mov
xchg
jns
insb
pop
insl
in
sti
call
mov
jl
mov
cwtl
jns
jno
inc
arpl
xchg
adc
int
dec
push
mov
cs
mov
mov
push
add
xor
imul
cwtl
pop
dec
dec
jp
adc
daa
filds
nop
sbb
mov
popf
jns
fwait
gs
cmp
or
add
push
inc
daa
dec
das
sub
lock
das
lret
stos
ss
loope
mov
mov
out
icebp
inc
push
mov
call
fs
in
out
jmp
fsubr
out
pop
xchg
and
mov
les
into
aaa
jo
xchg
out
mov
int3
int3
es
ret
call
das
dec
push
mov
push
shl
jg
imul
sub
sti
adc
and
push
xor
and
pop
mov
xor
insl
pop
push
mov
sahf
aaa
mull
push
leave
sbbb
shrb
pop
xchg
out
rcl
mov
cmp
sarl
add
xchg
push
pop
cmpb
aad
push
dec
repz
inc
mov
hlt
sub
mov
ficoms
in
pop
sbb
subl
shr
xchg
jle
in
rclb
mov
xchg
mov
dec
jge
sti
mov
cmp
sub
dec
imul
dec
xchg
movzwl
and
ljmp
pop
jne
cmp
ss
push
fadd
loopne
lds
insb
ficoms
pop
mov
lock
push
cld
cwtl
cmp
out
std
std
push
xchg
mov
inc
fwait
jns
xor
cli
or
les
out
call
adc
movsl
or
or
inc
sub
pop
fcmovnb
inc
mov
in
jo
and
cmp
shll
mov
fsubrl
mov
or
inc
adc
mov
enter
jge
cltd
clc
cmp
loopne
mov
xorl
fldcw
orb
jmp
adc
add
fsubrs
xchg
inc
pop
outsl
push
xchg
in
dec
and
clc
adc
mov
shl
jnp
push
out
js
rep
cltd
xor
xor
pop
movsl
arpl
fdivl
sub
mov
xor
cli
and
pop
xchg
adc
aam
add
jge
dec
and
imul
add
sbb
push
lahf
xchg
add
fwait
and
add
mov
add
movsl
in
or
mull
xor
pop
ss
daa
les
jns
lods
cmp
dec
aam
mov
daa
and
pushf
test
jb
ljmp
idivl
cltd
mov
or
push
mov
add
sub
xchg
stos
mov
in
movsb
rcrl
loopne
adc
xor
push
dec
scas
xor
test
sub
cmpl
xor
mov
lds
mov
roll
pop
adc
int3
lret
pop
movntq
fdivs
inc
scas
shrl
mov
inc
jbe
pop
hlt
mov
jo
adcb
outsb
add
icebp
lahf
add
notb
jbe
jmp
mov
mov
cmp
xor
adc
dec
push
out
mov
pop
mov
sub
enter
daa
adc
sbb
stos
je
or
mov
test
push
xchg
pop
mov
out
in
jmp
ret
xor
test
pop
cmp
add
pusha
cmp
out
mov
xchg
jno
adc
dec
and
push
sahf
mov
adc
les
aam
mov
dec
mov
sub
sub
enter
call
inc
pop
adc
ds
das
push
push
push
aaa
inc
adc
push
testb
movsb
push
pushw
adc
insl
jl
xchg
repz
test
add
pop
jle
xor
bound
cmp
and
jnp
cmp
push
sub
jb
cmpsb
jge
inc
mov
mov
push
jne
lret
mov
mov
mov
mov
std
add
push
mov
rep
dec
rclb
cmpsb
ja
dec
xchg
fs
int3
les
adc
sub
sub
add
outsb
jl
icebp
inc
and
outsb
in
xchg
push
xor
and
mov
mov
dec
sbb
out
adc
add
add
mov
jbe
cmc
push
dec
mov
insl
enter
adc
mov
fisubrl
bound
in
xchg
lea
xor
dec
adc
inc
repz
push
imul
cpuid
ret
std
jae
dec
outsb
dec
push
xchg
cmp
mov
arpl
dec
xchg
test
cli
add
loope
sahf
inc
loopne
mov
jno
out
and
lcall
cltd
mov
lret
xor
sbb
lock
push
das
xchg
call
push
push
pop
push
or
xchg
fs
jecxz
clc
and
mov
aam
mov
jmp
lret
fimuls
aad
pop
or
bound
scas
cmp
aaa
mov
sti
jo
mov
dec
sub
int
mov
mov
push
subl
test
aas
int
jmp
ficompl
or
adc
loopne
divl
aad
dec
xchg
pop
inc
test
push
repz
mov
xchg
loope
icebp
push
add
dec
lret
lods
aaa
push
lret
popf
xor
push
mov
int
xchg
dec
aaa
inc
adc
pop
imul
sahf
or
or
popf
xchg
mov
sbb
jb
pop
lea
jno
in
mov
pushf
ljmp
inc
cmp
lds
clc
mov
test
xor
xlat
out
adc
or
mov
xlat
imul
sbb
icebp
jo
push
jge
outsb
jmp
lahf
mov
dec
cmp
dec
enter
lcall
xchg
scas
inc
mov
iret
mov
or
push
pop
mov
mov
stc
sub
jecxz
add
pusha
mov
adc
iret
scas
lret
fcoms
dec
daa
or
lcall
inc
lods
loope
aas
clc
ret
cmc
inc
or
jb
or
test
nop
jle
pop
mov
add
scas
sub
adc
dec
mov
jp
pop
xchg
and
sub
sub
inc
sub
mov
clc
sbb
test
loopne
testb
sbb
adc
inc
test
jne
stos
xor
mov
adc
out
dec
pop
notl
les
pop
movsl
std
mov
test
enter
rol
add
mov
out
adc
xchg
add
xchg
add
addr16
push
xchg
pop
push
getsec
in
aam
or
mov
movsb
dec
sub
or
and
cld
pop
mov
xor
and
aam
popa
jge
push
sbb
push
mov
fs
jg
repnz
xchg
jb
into
sbb
loope
push
js
outsl
cltd
scas
dec
ja
pop
push
cmp
dec
jns
out
stc
xchg
jl
decl
xchg
dec
mov
sub
iret
jno
mov
or
or
ret
adc
insl
mov
test
call
mov
dec
mov
icebp
sub
scas
fnstsw
sahf
cmp
iret
rcr
in
in
sarb
jnp
movsl
pop
xor
test
sbb
cmpsl
push
xchg
xchg
sti
xchg
adc
mov
js
jnp
xor
lahf
inc
mov
fdivrs
test
outsl
in
inc
dec
mov
ljmp
jge
cmp
loope
xchg
and
js
stc
pop
mov
adc
cld
mov
sbbl
jo
xchg
jmp
sub
outsw
aaa
sub
push
sbb
mov
gs
xchg
loope
xor
mov
jns
fsubrs
xchg
mov
jge
mov
mov
int3
mov
pop
pop
adc
xor
pop
xchg
add
out
andl
lret
test
xor
cmpsb
jle
mov
xchg
cmp
cltd
xor
mov
jp
fsubrp
aam
push
idivb
dec
std
pop
or
mov
lahf
jecxz
pop
test
outsb
xchg
les
jb
loopne
mov
dec
cltd
out
ds
mov
insl
sahf
mov
cmpl
inc
enter
mov
shr
xchg
inc
dec
jno
inc
popf
ror
add
int3
inc
xor
pop
lods
push
sub
and
dec
push
xchg
enter
mov
push
lret
jne
cld
cmp
pop
inc
jl
or
jnp
cwtl
mov
jne
mov
mov
xchg
mov
sbb
inc
push
daa
lret
jne
orps
or
xor
rcrb
push
xchg
fstpl
loopne
mov
ds
jecxz
je
jp
insl
adc
std
xor
jae
lahf
out
xor
pop
pusha
jle
lret
andl
inc
call
ficoms
push
aam
and
sbb
inc
fiadds
push
sbb
enter
lcall
lcall
pop
mov
sarb
cmp
fadd
lret
mov
cmp
and
addl
sub
xchg
ja
mov
cmp
cmp
outsb
sti
mov
push
dec
mov
and
pop
imul
out
xor
sbb
xor
stc
cmc
sbb
inc
mov
mov
sbbb
fs
arpl
push
testb
sub
xchg
pop
pop
push
adc
jnp
xchg
jnp
inc
mov
mov
je
jo
dec
add
cli
or
mov
clc
insb
fcomps
insb
mov
inc
inc
or
dec
insl
ret
cld
mov
push
data16
mov
cmp
mov
icebp
int3
fildl
pop
lea
imul
push
ljmp
dec
loopne
push
or
jg
jmp
pop
and
sbb
or
push
loop
pop
cmp
cmp
popf
test
movsb
mov
add
mov
and
rolb
imul
popa
test
std
mov
jl
aas
daa
dec
and
repnz
dec
call
mov
xorb
div
scas
jnp
aad
push
fwait
xchg
mov
sub
pushf
in
pop
adc
jg
add
and
iret
repnz
fninit
push
mov
jb
mov
xchg
mov
ficoml
sbb
pop
sbb
sbb
pushf
adc
inc
cmp
xor
dec
and
or
push
out
aad
mov
pop
ret
sub
scas
xlat
jo
jg
add
hlt
std
adc
pop
cmpsl
xor
test
mov
xchg
mov
push
loopne
mov
mov
outsb
dec
rcrl
jp
xchg
or
out
leave
xchg
ds
cmp
xchg
adc
mov
fldt
fwait
mov
mov
mov
sbb
repnz
jl
jnp
dec
das
mov
add
insl
lds
aad
stos
lock
sbb
ret
bnd
or
imul
or
cmp
sub
inc
movsb
push
lea
lods
inc
hlt
push
xor
pushf
sub
mov
imul
xor
cmp
cmp
cmp
and
adc
and
inc
aas
movsb
lods
lcall
sbb
cmp
cld
cmp
inc
std
mov
jmp
rorb
pop
sti
sub
adc
leave
in
adc
xchg
rcrl
sbb
pop
inc
in
popa
into
scas
adc
xchg
cs
test
lcall
cltd
mov
mov
push
sarb
sbb
mov
cwtl
xchg
out
rcrl
aas
clc
push
ds
sub
cmc
xor
lret
js
js
adc
push
mov
sbb
cmpsl
dec
sbb
fidivrl
and
jmp
cmp
jmp
cwtl
pop
mov
lret
outsb
mov
divb
jnp
ja
lahf
pusha
push
xchg
test
idivb
sub
inc
ss
lret
jecxz
pop
cltd
ret
fbstp
imul
pop
sbb
test
sub
and
mov
fists
xor
fs
leave
lock
push
adc
inc
inc
ss
and
mov
dec
cmc
lcall
push
jl
inc
and
test
pop
jmp
add
mov
iret
fistpl
jmp
inc
movsb
pop
inc
xor
loop
imul
sbb
call
mov
add
lea
xchg
std
adc
fsub
iret
mov
leave
add
xchg
mov
jno
into
and
jle
out
sub
lea
into
stc
dec
and
mov
cmc
sub
push
and
xchg
xor
ret
push
pop
cmpb
xor
enter
orb
jg
dec
push
and
mov
adc
or
je
loope
sbb
arpl
stos
arpl
lods
inc
hlt
pop
fstpt
mov
sbb
andb
cs
ror
fs
jecxz
and
push
push
jns
pop
fildl
lods
mov
pop
sahf
jmp
jecxz
js
jl
test
xchg
loopne
sahf
std
or
and
cmc
or
addr16
in
nop
and
xor
xchg
sub
jo
nop
cld
ret
mov
sub
stc
jl
lahf
mov
je
mov
movsl
jnp
jne
xchg
xchg
iret
fcoms
push
insb
or
pushl
in
mov
das
pop
repnz
ja
push
dec
xor
jg
lods
mov
jo
push
mov
adc
aas
xor
lock
add
cmp
adc
push
mov
rcrb
les
or
jmp
icebp
aaa
adc
dec
xlat
dec
and
inc
iret
inc
ljmp
mov
mov
mov
pop
std
push
movsl
mov
jbe
int3
cli
lahf
int3
sbb
jne
cmp
subb
xlat
inc
loop
xchg
add
pop
sahf
jbe
or
and
loopne
rclb
fildl
testl
iret
inc
jno
aam
inc
push
mov
xchg
int
shlb
cmpb
iret
mov
cmp
icebp
out
mov
mov
bound
sbbl
jmp
out
testl
cs
sub
stos
nop
pop
pop
iret
enter
xor
es
pop
jecxz
adc
pop
push
push
sub
push
sbb
shl
cmp
push
xchg
aaa
lret
aam
mov
lahf
mov
insb
notb
repz
mov
add
jbe
movl
xor
std
mov
add
push
enter
stc
test
adc
xchg
inc
add
lds
fcoms
add
out
enter
loop
xlat
sbb
ret
pop
inc
ja
rorb
xchg
out
mov
bound
sti
ds
add
dec
sub
outsb
push
movsl
loop
dec
inc
lods
mov
sub
mov
out
push
cmp
leave
pop
and
mov
dec
sub
xlat
mov
sbbl
imul
test
ret
jmp
hlt
sahf
loopne
xor
jne
aaa
cli
bound
std
pop
jp
andb
jb
js
lret
cs
sbb
test
movsb
pop
mov
gs
or
les
daa
jns
adc
jg
out
int3
call
js
push
or
clc
test
xlat
push
shl
mov
xor
jl
push
mov
ss
xchg
test
icebp
ja
xor
das
push
cmp
ds
push
arpl
or
insl
pop
negl
pop
xchg
push
pop
pushf
imul
aam
cs
xchg
call
fucomip
into
inc
push
mov
enter
mov
test
out
aaa
popf
pop
scas
adc
cmp
mov
movsl
xor
insl
repnz
push
adc
call
pop
push
pop
je
out
sbb
dec
jnp
sub
adc
and
je
std
jno
stos
std
xor
popa
arpl
test
notl
jno
arpl
jnp
pop
shr
dec
jle
cli
test
mov
shrb
movsb
loopne
dec
das
icebp
fisttps
fxch
pop
inc
mov
sbb
adc
loop
push
add
clc
lods
fcoml
fstpt
and
aas
div
in
pop
jl
jge
jnp
cmp
push
sbb
xor
aam
jno
lahf
icebp
stos
add
jg
jp
loopne
push
inc
jl
cmp
ficompl
inc
lods
idivl
mov
mov
rcll
int3
or
mov
cmp
xorl
imul
pushf
ret
dec
add
pop
jnp
popf
rcr
adc
loop
dec
fwait
aad
imulb
add
loope
cltd
fucomi
xchg
inc
shll
aam
push
cmpsl
mov
daa
jns
imul
in
rorl
js
out
insl
clc
inc
mov
push
stos
jmp
mov
ret
loop
jle
sub
js
pop
aaa
add
stos
xchg
call
xor
xor
sub
jo
icebp
jnp
aaa
add
adc
clc
xor
dec
lds
push
popf
shll
pop
stos
mov
loopne
mov
dec
hlt
fisubs
out
pop
dec
pop
cmpsb
and
iret
divl
pop
fs
xor
das
xor
mov
pop
mov
sbb
test
scas
jo
dec
imul
fwait
xchg
mov
stc
inc
sarl
mov
cltd
and
shl
out
movsb
inc
sahf
ret
mov
into
xor
ret
inc
and
pop
shrl
addr16
into
sub
andb
inc
js
aaa
xchg
lea
inc
rcll
or
scas
inc
std
sub
cmp
xchg
popf
mov
pop
mov
cwtl
dec
aam
loopne
push
sub
rcll
and
insb
push
xchg
mov
mov
jmp
cmp
test
jge
mov
pop
loopne
cli
lea
inc
movsb
or
sub
or
fisubl
and
adc
out
in
fisubrs
push
push
cwtl
push
lods
imul
mov
in
comiss
mov
pop
sbb
cld
jmp
mov
notb
test
shlb
repnz
jmp
fidivs
xchg
xchg
sbb
mov
imul
pop
std
inc
xorl
sbb
sti
std
pop
cmp
ffreep
sub
xchg
scas
jle
mov
lret
fadd
js
push
cwtl
push
test
fidivl
pushf
loope
mov
and
lret
xchg
insb
or
ret
add
ljmp
ja
std
cmp
jae
cmp
mov
insl
nop
stc
inc
aad
or
loope
sahf
repnz
decl
adc
fiadds
mov
cli
lret
mov
push
push
jne
add
mov
sbb
or
sub
jbe
aaa
push
xchg
mov
xor
daa
std
repz
pop
pop
in
pop
jnp
leave
push
sbb
add
mov
xchg
sbb
push
in
pop
inc
cmp
xchg
cmp
sahf
ss
scas
sbb
shl
xor
mov
and
pop
pop
out
notl
lds
xor
out
mov
sbb
je
mov
test
xor
mov
jo
popa
mov
pop
lahf
out
repz
loope
cmp
jle
and
jae
ja
xor
out
cmp
bnd
test
call
and
mov
rcrl
dec
jnp
pop
aad
adc
mov
out
div
adc
mov
icebp
lret
push
pop
mov
jnp
dec
push
xor
jecxz
xor
imul
xchg
cwtl
iret
mov
or
pop
inc
cs
jle
jecxz
cs
xchg
fistl
dec
dec
sub
cmp
cmp
push
mov
pop
fwait
sbb
xchg
cmp
pushf
cwtl
scas
xorl
out
je
push
out
or
xor
and
pop
test
insb
outsl
mov
pop
add
push
nop
jmp
in
pop
addr16
aas
inc
shl
lcall
iret
les
lds
jne
or
mov
icebp
and
mov
cs
xchg
inc
fndisi(8087
inc
negb
test
ja
xor
pop
dec
int3
xor
lock
outsl
insl
mov
or
fisubrl
push
cltd
pop
xchg
popa
ret
mov
xchg
clc
clc
ds
in
cld
lds
sub
scas
or
popf
adc
repnz
mov
mov
lret
and
cmpsb
aam
icebp
addr16
push
xchg
pop
stos
push
shr
in
das
std
cmp
sbb
dec
pop
jno
add
dec
inc
and
sub
or
in
loop
loope
fucomi
loop
movl
adc
sti
pop
pop
fsubl
adc
sub
push
add
adc
cld
xor
sub
xchg
sbb
testl
xor
or
jb
repz
cbtw
decb
add
dec
stc
outsb
cmpsl
mov
pop
add
mov
cmpsl
inc
inc
push
cwtl
dec
in
inc
test
fstl
shrb
int
loope
arpl
or
mov
add
lea
or
paddd
pusha
stos
mov
and
push
jg
add
and
inc
das
hlt
sbb
jne
and
adc
pop
xor
repnz
not
fmul
mov
scas
adc
ficomps
inc
push
add
mov
sbb
jb
icebp
sbb
xchg
cli
mov
lahf
add
outsl
orb
out
sti
loop
xchg
mov
gs
sub
outsl
and
and
ret
xchg
testl
idiv
in
pop
or
lcall
test
notb
xor
or
sub
jle
mov
mov
inc
sbb
sbb
pushf
pavgw
add
mov
loope
inc
js
hlt
push
ja
stos
or
sub
pop
pop
subl
add
mov
enter
test
ja
or
jbe
cmp
jl
pop
andnps
in
fcompl
push
aad
push
mov
inc
mov
cmc
push
and
int
or
stos
js
lret
addb
jne
dec
call
cmpsl
dec
xchg
dec
sbb
clc
push
fisttps
sbb
rcll
pop
or
xchg
mov
mov
push
dec
lahf
xlat
mov
imul
xor
ljmp
test
or
iret
push
sbb
fistpll
dec
inc
add
cli
xchg
push
gs
xchg
dec
or
xchg
push
add
adc
mov
or
xchg
cltd
cmp
push
or
lock
mov
and
sahf
add
sbb
ret
insl
arpl
add
sbb
pandn
mov
ret
je
in
xor
fmull
jp
inc
gs
push
fnsave
divb
xlat
cmp
inc
push
lahf
mov
jnp
in
or
xchg
mov
push
jle
cmp
add
movsl
loopne
mov
jnp
push
push
data16
sti
cmc
out
dec
or
clc
inc
repz
rolb
pop
stos
sub
mov
inc
mov
pop
push
jae
testl
dec
ficompl
popl
inc
sbb
orl
dec
inc
int
in
mov
lret
pop
jge
sbb
andps
ljmp
popl
push
mov
repnz
jge
jmp
add
mov
push
pop
pop
xor
xor
out
pop
or
lea
mov
add
xchg
icebp
lock
mov
mov
pop
jo
lock
adc
xor
add
mov
iret
testb
cmp
mov
aam
stos
outsb
enter
jmp
data16
lahf
aas
or
mov
sub
xor
pop
or
mov
bound
xchg
adc
dec
scas
dec
and
loop
lahf
je
cwtl
mov
dec
test
cmp
adc
test
or
or
mov
inc
pushl
pop
movsl
bound
and
cmpsl
cmp
in
addl
push
jge
xchg
cmc
loope
andl
sub
cmp
mov
xchg
ds
push
ljmp
push
and
fisttps
jecxz
xor
cmp
gs
cmp
sahf
xlat
cld
out
mov
jbe
into
pop
scas
push
iret
rorl
inc
addr16
adc
jno
mov
test
add
aam
popa
mov
or
test
push
outsb
add
jb
add
es
imul
cs
ljmp
xchg
push
lcall
aaa
inc
cwtl
scas
sbb
add
rorb
jge
sub
ficompl
movsb
iret
inc
xor
fbld
cmp
mov
subl
adc
mov
and
int3
mov
jne
bound
jle
jbe
movsl
in
mov
lret
jnp
sbb
adc
loopne
add
and
pop
cmp
mov
xchg
jecxz
mov
mov
pop
cmp
adcl
adc
mov
shrl
add
fisubrs
insb
xchg
fimull
and
je
lcall
js
cli
push
cmp
fimuls
push
inc
outsb
add
and
fistps
je
bound
dec
mov
mov
pop
ljmp
in
push
in
jmp
clc
inc
pop
pop
jb
rcrb
jnp
fs
inc
sub
movb
cmp
ja
dec
mov
pop
or
fildll
xor
test
lods
stos
sbbb
nop
lea
sub
mov
and
daa
push
fwait
jno
out
mov
jl
stos
bound
scas
adc
pop
call
aas
sbbb
das
fcmove
sbb
adc
dec
in
push
cmp
add
xchg
ss
push
lcall
aaa
mov
jg
xor
sti
outsl
aaa
xor
mov
lret
dec
jmp
inc
jbe
adc
setne
addr16
sbb
shll
dec
and
xchg
jno
icebp
cmc
pop
sub
pop
dec
mov
inc
jbe
imul
mov
dec
jp
movsb
lock
fisttpll
idiv
and
ret
mov
lds
test
jp
sahf
lea
shlb
and
mov
inc
inc
cld
cmp
clc
imul
lds
and
aas
sahf
xchg
pop
adc
insb
inc
std
adc
push
in
xor
xchg
test
mov
xor
jp
jge
sub
dec
in
shr
fwait
pop
mov
lret
ficomps
adc
fcmovbe
ljmp
adc
add
pop
fwait
out
frstor
icebp
arpl
pop
push
aad
cmp
adc
mov
jns
and
push
test
cmova
lcall
adc
jb
lahf
ret
loop
jne
adc
cmpsb
mov
xchg
xchg
cwtl
stos
lock
pop
or
shlb
mov
lods
mov
outsb
arpl
insl
repnz
loope
in
bound
in
sti
dec
add
mov
in
shlb
mull
loop
inc
cli
lods
inc
sbb
sub
and
ljmp
mov
test
ret
cmpsb
bound
jg
sar
inc
fwait
bound
push
or
cli
mov
inc
je
hlt
push
loop
sti
mov
adc
mov
ja
jb
hlt
xlat
sbb
ds
out
stmxcsr
imul
stos
sub
xor
xor
ja
pop
hlt
mov
push
movsl
dec
or
outsl
inc
pop
inc
sahf
push
mov
fchs
push
sbb
xor
into
cld
shrd
stos
arpl
adcb
fwait
cmp
add
movsb
mov
sub
out
test
pop
dec
data16
cld
cs
shrb
adc
std
pop
xchg
xchg
jge
leave
cs
inc
in
xchg
rcl
push
push
or
jno
js
andps
rcll
and
or
inc
dec
sbb
jle
gs
inc
loop
loopne
adc
imul
leave
aas
data16
mov
and
stc
in
or
rcrl
push
in
mov
add
jnp
lods
jmp
out
cmp
jb
xor
xchg
sub
fnstcw
jmp
push
cmc
fistpll
mov
add
mov
adc
fnstenv
add
pop
jl
test
mov
hlt
ds
pop
sti
addr16
ret
mov
add
fcoms
sbb
pop
pushl
out
adcb
iret
pop
cmp
jecxz
sbb
pusha
jnp
mov
cmpsl
adc
mov
imul
daa
push
imul
or
lods
fcoml
push
fincstp
out
xchg
add
jbe
push
mov
xchg
jbe
push
mov
or
shll
cmp
jle
in
lods
and
fcmovnbe
rorb
movb
or
jge
repz
sub
or
imul
adc
je
insl
and
add
lock
xchg
fimuls
sub
test
lods
loopne
je
enter
bound
pop
rclb
addr16
push
push
jns
sbb
lds
out
or
jle,pt
push
clc
jbe
mov
sub
aad
scas
xor
xor
mov
adc
mov
jmp
pusha
xchg
testl
test
hlt
lcall
aaa
xchg
ja
dec
out
lret
mov
stos
sar
daa
stos
push
mov
adc
jl
cmpsb
fistl
mov
mov
adc
mov
jb
in
inc
cmp
or
cmp
flds
adc
cmp
pusha
imul
fwait
mov
xchg
dec
push
hlt
scas
shll
rcrb
nop
and
mov
mov
pop
jns
iret
cwtl
pop
repnz
pop
popf
stos
in
rorl
xchg
enter
mov
xor
mov
pop
jge
cmp
cwtl
enter
dec
push
roll
adc
mov
mov
push
push
mov
or
mov
ret
adc
cmp
adc
and
mov
or
xor
dec
lret
iret
in
jle
mov
add
outsb
je
filds
lods
insl
lock
pop
icebp
leave
aaa
and
sub
in
scas
mov
out
das
out
pop
xchg
mov
lods
push
push
lods
xor
rorb
adc
sub
rol
ss
out
add
int3
sti
mov
out
imul
and
push
gs
aas
add
pop
fmull
ja
adc
pusha
ss
adc
sbb
in
cwtl
fistps
xchg
fs
shl
mov
enter
fimuls
imul
imul
pop
shl
push
dec
jl
jle
fcompl
iret
pop
lock
jecxz
pop
adc
mov
lods
mov
mov
sbb
ljmp
jmp
rclb
cmc
cmp
xchg
dec
jmp
lret
xchg
mov
lods
inc
cs
lds
daa
daa
push
cmpsb
outsb
jmp
jle
enter
pop
inc
adc
mov
dec
in
mov
inc
scas
jle
adc
add
subl
xchg
aaa
pusha
lahf
in
xchg
arpl
fs
mov
repnz
sub
lret
in
leave
cmp
xchg
aad
fidivrl
pop
std
cs
mov
mov
xchg
push
movl
pop
sbb
lret
stos
push
mov
dec
jle
mov
and
fdivl
push
push
jle
jmp
pop
or
das
lahf
add
mov
andl
testl
scas
mov
rolb
xor
cmp
xchg
aaa
xchg
mov
ds
popf
adc
popf
xchg
fisubs
rclb
mov
sbbl
inc
sub
fnstsw
pusha
jg
mov
mov
xchg
orl
mov
and
das
pop
lcall
shlb
inc
imul
push
cmp
sahf
adc
pop
mov
lret
add
in
jmp
sub
pop
popf
push
mov
xor
push
jecxz
rolb
outsb
push
aaa
dec
aad
jnp
scas
jecxz
stc
adc
mov
push
daa
data16
stos
jl
mov
fbstp
out
push
pop
xchg
rclb
jne
out
inc
movsl
mov
std
ret
cmc
or
pop
in
and
or
fisttpl
bound
lret
inc
jl
xor
push
lods
jo
xchg
lock
call
xchg
lcall
aaa
lahf
xor
inc
mov
mov
or
vpmulhw
lds
mov
sbb
cs
mov
xchg
mov
mov
int3
mov
jns
pop
adc
rolb
sarl
or
mov
lret
or
insb
and
jb
cmpsl
clc
in
jns
mov
stos
cmp
cmpsb
sub
sbb
imul
jp
popf
push
jne
mov
loopne
sbb
jg
add
sbb
mov
jns
mov
xor
mov
xlat
and
dec
pop
jns
out
fidivl
cmp
cmp
jne
in
cmp
pop
fidivl
pop
mov
stc
in
lahf
mov
jp
insl
cmp
add
repnz
ficoms
inc
scas
mov
test
test
jl
and
jle
adc
xchg
out
fucomi
inc
test
jl
out
lea
mov
add
sub
xchg
movsb
test
pop
lods
scas
es
loopne
inc
jl
jno
xchg
mov
dec
or
fidivrs
roll
arpl
cmp
mov
or
push
or
or
or
int3
insb
vaddsd
lahf
sarl
inc
xor
mov
lea
loope
aaa
sar
cmp
push
sbb
repz
ljmp
jg
imul
mov
mov
daa
ljmp
lods
add
subl
push
aaa
scas
repnz
inc
pushf
cmpsl
sub
jp
mov
cmpsl
jnp
xorl
out
jbe
movb
popf
xchg
movsl
in
aas
je
add
inc
fsubs
or
adc
insb
jge
popa
xchg
ficompl
imul
cmpsb
xor
lcall
fwait
mov
mov
aaa
fistl
cmp
mov
cmp
js,pt
scas
xchg
pusha
adc
sahf
or
in
aam
test
dec
jp
inc
aas
cmp
aam
shlb
push
or
sarb
or
mov
mov
jecxz
cmp
xlat
cmp
xor
mov
cld
adc
adc
sub
xor
pop
addl
lods
stos
push
push
xchg
fdivs
arpl
loope
stc
pushf
sahf
mov
xchg
add
mov
dec
je
dec
lea
lock
pop
mov
and
dec
or
test
dec
dec
mov
rorl
cmp
testb
add
in
cld
fsubrp
addl
inc
fiaddl
hlt
push
aad
ja
pop
jl
mov
mov
mov
jae
mov
xor
das
xchg
cld
adc
and
mov
xchg
dec
in
es
push
out
mov
fnstsw
xor
roll
sub
add
dec
and
cmp
call
aam
iret
movsl
push
mov
out
cltd
adc
push
dec
scas
out
out
enter
daa
pop
mov
push
arpl
je
xchg
sahf
fstps
fldl
adc
lods
repz
mov
rcrb
push
push
mov
in
mov
push
jb
mov
mov
jae
push
leave
lds
icebp
sub
mov
ret
sbb
inc
fmull
and
in
mov
mov
loopw
push
pop
or
fadd
mov
jge
pop
sar
out
lahf
fisubs
sub
mov
sbb
nop
shrb
sbbb
aas
dec
mov
int3
lods
mov
or
inc
loope
xor
jns
out
adc
mov
xchg
mov
lret
and
dec
pop
out
sub
jl
adcb
ja
rorl
js
out
sarl
sbb
outsb
loop
loop
and
mov
sub
xor
and
push
out
gs
and
sbb
mov
mov
es
test
into
mov
xor
xor
rep
dec
iret
cmc
xor
mov
xchg
xor
test
stc
call
fs
movsb
mov
push
mov
fucom
bound
xchg
rolb
mov
sub
add
push
insb
ja
sub
push
sahf
push
or
fisubl
loop
lods
jns
mov
mov
xlat
ficompl
es
xchg
dec
jecxz
mov
nop
sub
les
dec
cmpsb
lea
or
and
loop
mov
push
dec
mov
loop
lcall
es
xchg
insb
idivl
repnz
cltd
repnz
jg
sbb
mov
push
gs
mov
je
jbe
jle
inc
sub
cmp
sbb
lods
xchg
push
cmpsl
std
mov
mov
into
mov
adc
popf
mov
out
mov
mov
inc
pusha
fcomip
out
push
xchg
or
std
fbstp
lods
and
xchg
push
cld
mov
pop
in
cmp
loopnew
shll
cmp
ljmp
rolb
push
pop
lahf
scas
cmc
ucomiss
scas
jns
or
in
mov
jns
xchg
arpl
js
cli
cmpsb
push
scas
insl
xchg
ficomps
xor
xchg
loopne
mov
aas
in
movsb
cmpsb
shr
add
orl
rcrb
stos
imul
inc
cmc
aad
das
mov
sub
jb
lea
pop
adc
push
mov
inc
mov
dec
ret
sub
or
xchg
sbb
fistps
pop
sub
dec
xor
cmp
inc
jmp
cmp
pop
jp
ret
ret
inc
in
add
cmp
inc
mov
imul
loop
rolb
mov
xchg
jno
and
in
loop
cmc
mov
sub
push
or
outsb
or
mov
test
xchg
dec
cmp
jbe
fsubrl
xchg
pop
mov
lods
int
pop
sbb
cld
mov
adc
jno
aam
and
clc
add
int3
push
ss
nop
mov
and
sbb
popf
lock
add
inc
add
mov
scas
aam
jnp
divb
imul
or
sub
push
adc
aas
push
insb
sbb
jle
jmp
jl
in
pop
repz
mov
mov
add
stos
fcmovbe
outsl
mov
out
in
addl
xchg
push
cmp
inc
jae
push
jno
add
pop
xor
mov
cli
dec
and
add
xchg
mov
cltd
inc
adc
jg
jle
test
push
sub
cltd
cmpsl
das
fimuls
inc
jge
lret
test
add
mov
mov
stos
inc
imul
aad
pushf
lods
aaa
mov
adc
gs
push
das
xor
insb
or
int3
push
sbb
fldln2
shrl
insb
fldcw
cmp
or
nop
or
std
xchg
mov
dec
sub
add
push
xchg
inc
repz
jns
inc
xchg
mov
mov
mov
pop
jmp
cld
hlt
lahf
inc
in
jns
adc
repnz
testb
sub
mov
and
outsb
adc
fisttpl
add
dec
push
push
or
sub
and
mov
std
mov
shrl
dec
mov
and
and
outsl
jae
pop
inc
add
inc
aad
push
nop
mov
push
ret
or
push
loopne
inc
pop
hlt
sbb
cmpsl
gs
sub
mov
fldl
repnz
lcall
push
sbb
cltd
hlt
int
enter
xor
adc
or
mov
fs
iret
push
into
push
lock
lret
adc
inc
add
cmp
mov
in
notb
push
negl
ror
add
sti
les
test
jecxz
int3
out
sbb
sbb
aas
out
mov
push
lcall
repz
fwait
dec
and
lcall
mov
hlt
lock
push
cmp
lods
insl
test
insb
ds
shll
pop
repnz
jb
add
aad
pop
mov
inc
mov
cmc
sarb
out
and
shr
jge
add
xor
int3
test
or
mov
mov
xchg
inc
in
mov
cmpsl
imul
gs
cli
mov
mov
nop
shrb
push
fsubl
arpl
inc
push
xchg
or
jge
sbb
insl
bound
dec
pop
stos
ss
xchg
inc
fwait
mov
mov
imul
xchg
xchg
pop
pop
inc
ljmp
ja
sti
fadds
test
push
and
mov
and
jbe
or
adc
cmp
push
notb
rclb
repz
mov
into
imul
push
add
sub
ret
insl
test
mov
fcompl
add
sbb
xchg
push
cs
or
push
mov
clc
insl
jp
push
jmp
loopne
test
fcmovnbe
mov
sub
lds
sub
sti
gs
or
mov
mul
dec
fimuls
push
cli
pop
test
adc
push
and
push
mov
jge
mov
fwait
lahf
hlt
sarl
iret
lret
pushf
dec
add
aad
dec
mov
xchg
mov
jge
pusha
push
mov
lahf
ds
aas
xor
aaa
stc
and
cmpsb
mov
mov
push
mov
scas
loope
int3
stos
jp
cltd
pop
mov
add
fxch
mov
adc
pusha
lret
jmp
pop
xor
lds
adc
test
mov
or
out
icebp
and
add
xchg
stos
cld
cld
push
push
mov
add
xchg
inc
pop
popa
jb
fisubrs
xchg
ret
insb
enter
mov
inc
xchg
xchg
daa
icebp
cs
insb
adc
loopne
sub
stos
add
xorl
mov
in
lea
jb
jbe
push
dec
push
inc
inc
and
fsubp
leave
jl
in
scas
stos
and
mov
mov
enter
fadds
pusha
mov
xor
sbb
jmp
sbb
push
mov
xchg
pop
fistps
sbbl
mov
mov
sbb
movsb
rorl
cli
rcll
lods
cmp
sbb
jle
xchg
jle
stc
fstl
or
add
mov
sbb
dec
push
and
not
insl
inc
into
mov
mov
or
aaa
push
mov
mov
rcrb
je
adc
mov
stos
inc
inc
inc
in
cltd
gs
hlt
sbb
adc
add
push
sub
test
xor
rcr
lds
xchg
fbstp
lods
scas
outsl
iret
xchg
in
cmp
lret
push
jge
test
jecxz
les
icebp
cmp
test
lret
stos
sub
daa
dec
mov
fnstenv
stos
or
out
inc
lods
je
add
xchg
xchg
rclb
mov
mov
div
addr16
ret
out
pop
mov
movsl
sub
inc
jae
mov
and
pop
mov
mov
es
add
dec
xchg
pushf
pop
and
sub
sbb
addr16
mov
loop
hlt
outsb
outsl
jns
aas
inc
mov
mov
xchg
repnz
fsubrs
movsl
jge
pop
mov
call
xor
pop
stos
outsb
mov
xchg
ljmp
add
jecxz
push
out
push
out
popf
imul
and
pop
jecxz
dec
shrb
push
fidivs
jecxz
inc
lret
ljmp
int
rorl
or
sbb
pop
lahf
flds
stc
scas
std
lret
test
dec
sbb
mov
daa
icebp
jg
jl
mov
insb
jo
push
jl
xlat
in
inc
movsb
jg
ja
adc
pop
stos
pop
dec
adc
mov
ljmp
mov
or
js
out
xor
lcall
fdivs
cld
insl
xor
adcb
addr16
inc
mov
lcall
or
ljmp
cmc
mov
sub
cmp
cmp
aad
stc
lea
fwait
jae
pusha
fadds
fists
adcb
repnz
jmp
add
aam
test
leave
jle
mov
cmpsb
mov
add
movsl
dec
scas
pop
cwtl
cmpb
mov
cli
jae
int3
cmp
gs
mov
sbb
mov
jo
into
in
loop
stos
iret
mov
pop
out
repz
xchg
cmp
pop
pop
xor
mov
movsl
pop
adc
push
lea
int3
pop
lea
sti
add
push
push
or
lcall
sbb
pop
imul
imul
lock
sahf
cli
cmp
xchg
arpl
int
cmp
push
pop
jle
das
sti
jbe
out
mulb
test
loope
ss
mov
cmc
test
hlt
sub
xor
dec
xchg
test
jne
orb
movsb
fwait
pop
xor
inc
gs
xchg
cmpsb
jo
mov
jmp
push
or
scas
xor
mov
sub
pop
add
mov
push
sbb
enter
jle
stos
dec
inc
sub
push
rorl
inc
pop
push
leave
clc
pushf
mov
loopne
pop
xor
rcll
push
out
pop
sbb
adc
or
mov
cltd
xchg
ds
je
jnp
add
leave
cmp
push
stos
bound
sahf
xchg
sub
rorl
cli
mov
xchg
xor
jmp
ffree
pop
inc
fnstenv
repnz
sbb
nop
daa
sti
lcall
ret
push
ja
jb
out
mov
push
cmp
lahf
inc
out
mov
js
test
aaa
inc
pop
pop
mov
push
inc
mov
jbe
fsub
std
clc
ficoms
and
iret
ret
push
into
add
lahf
or
cli
out
mov
clc
mov
repnz
cmc
test
mov
mov
push
mov
mov
sarb
adc
movsl
or
out
out
mov
loop
pop
int
comiss
sub
cmp
jl
or
xor
jnp
mov
xchg
mov
lods
cmp
out
test
sub
into
add
xorb
push
cs
xchg
push
push
sti
stos
sbb
pop
cmp
or
in
sarl
adcl
push
jl
jmp
add
dec
cmp
jmp
and
pop
push
push
repz
stos
jo
cmp
dec
sbb
call
mov
inc
aad
sbb
xchg
int3
mov
mov
ja
retw
jo
mov
fwait
popf
jp
dec
lds
int
adc
mov
pop
lret
stc
pop
mov
push
ds
stos
adc
jmp
daa
sub
cld
inc
cmp
xchg
or
add
inc
jns
mov
mov
into
arpl
mov
cmp
xor
or
jnp
std
movntps
data16
sub
mov
dec
xchg
and
xor
stos
sub
arpl
or
inc
scas
mov
mov
add
mov
idivl
daa
xor
dec
lret
popa
cld
sub
fldt
jbe
notl
cmp
adc
add
mov
push
sbbl
xor
pop
add
lret
int
push
mov
pop
inc
mov
mov
cmp
in
mov
imul
cmpsl
aam
xor
aam
in
test
aam
ds
popa
aam
cmc
in
cmp
inc
loopne
lods
push
push
push
xchg
jns
notb
xchg
rorb
xchg
adc
add
xor
mov
push
int
mov
in
popf
jae
add
pop
cli
bnd
mov
lret
pusha
mov
in
bound
adc
mov
fmuls
inc
pop
pop
fcoms
lds
inc
dec
xchg
lea
inc
dec
adc
push
cwtl
dec
xchg
sub
sahf
mov
ret
in
imul
stos
lock
sbb
aam
jge
sbb
mov
test
into
shr
jne
mov
mov
ss
push
mov
add
mov
arpl
sub
lock
cmp
out
mov
pushf
and
jbe
pop
dec
jg
jecxz
xor
hlt
mov
pop
into
inc
in
and
std
dec
addr16
sahf
leave
mov
into
insl
test
popf
jbe
roll
and
pop
sub
insb
add
in
std
dec
and
stos
mov
sub
inc
xchg
dec
repnz
cs
xor
xchg
roll
mov
test
mov
sub
decl
cli
mov
ja
clc
xor
mov
fwait
outsl
out
cld
jmp
aas
mov
mov
mov
nop
push
stos
mov
dec
loopne
in
push
push
sbb
ds
jmp
repz
xor
push
lahf
cwtl
rcll
aaa
mov
nop
mov
mov
stc
xor
cli
stos
shl
ss
xor
sbb
lds
xlat
push
aad
repnz
push
clc
and
loope
into
cs
push
mov
shrb
out
sti
adc
mov
das
inc
sahf
in
adcl
loopne
mov
aas
pop
ss
test
pop
mov
lea
fisubrl
jbe
push
and
je
test
jae
popf
fucomp
push
and
jo
dec
add
cmp
lahf
mov
mov
pop
cld
sbb
mov
adc
insl
push
scas
loopne
add
imul
xchg
aas
lahf
mov
add
xor
sbb
jo
mov
out
lock
ljmp
dec
testb
push
aam
hlt
cmp
mov
testl
lds
stos
sbb
cmpsl
dec
mov
sbb
xchg
xor
and
cli
dec
stos
push
sbb
in
sub
cwtl
push
and
test
inc
add
inc
nop
lret
iret
idivb
mov
fildl
cld
xor
add
sbb
add
xor
lods
es
pop
sbb
or
jno
das
pop
pushf
arpl
test
xchg
mov
in
xor
sub
add
repnz
xchg
add
and
mov
icebp
into
mov
mov
lret
stc
mov
sbb
push
sbb
mov
fwait
cmp
sub
in
sub
mov
pop
call
mov
aas
inc
or
and
loop
mov
pop
mov
jae
cmpsb
sbb
imul
cwtl
mov
xor
iret
push
jl
push
stc
iret
xor
cli
add
inc
xor
push
jb
sub
cmpsb
das
outsl
inc
sub
jnp
add
loop
jne
popf
icebp
mov
jbe
in
outsb
xor
add
pop
jbe
xor
sub
test
add
sub
push
xor
sbb
cmp
loopne
xor
pop
dec
or
pop
test
cld
mov
les
rcr
jo
push
repz
in
and
sahf
pop
out
inc
rorl
stos
aas
xchg
mov
cmp
lret
jbe
and
aaa
cmp
cmpsb
and
pop
in
mov
aad
aas
lods
enter
inc
in
xchg
inc
jb
outsb
lods
jb
mov
call
add
jne
xor
and
jo
jno
xchg
pause
repnz
jnp
mov
jmp
push
and
shl
and
add
lcall
sbb
cmpsl
fsubl
in
fcmovb
movsl
ret
jbe
sbb
push
sub
ja
mov
dec
insb
int
pop
mov
insl
repz
add
cld
out
dec
mov
cmpb
aad
xchg
xor
gs
jp
adc
mov
repz
cwtl
call
fisttps
or
cmp
jb
rcl
push
add
xor
inc
sbb
cwtl
xor
sub
movsb
sub
in
or
test
adc
xor
stc
add
mov
flds
mov
sbb
lcall
add
xchg
sub
sub
jecxz
leave
test
insb
imul
xor
cmovns
int3
jns
pusha
and
cs
mov
cli
add
or
xor
ret
xchg
adc
in
outsb
and
xor
addr16
mov
sbb
push
cltd
jge
icebp
pop
sbb
mov
xor
test
sub
push
ss
pop
cli
xchg
mov
adc
jns
or
out
shrl
pop
sub
ds
jo
mov
push
push
cli
ljmp
mov
imul
cmp
sub
cmpsl
cs
lods
mov
sub
lods
adc
test
testl
cmc
xor
cmp
mov
jg
jmp
sbb
cmpsb
push
in
jmp
shr
or
ffree
cmp
popa
outsb
mov
push
ds
cld
iret
gs
enter
aam
fisttpl
imul
inc
push
mov
loop
call
xor
pop
movsl
cli
xchg
dec
inc
cmp
andb
jns
sar
sbb
cmp
mov
dec
xchg
xchg
lock
jmp
mov
imul
or
icebp
lret
and
in
fbstp
loope
int
push
fstl
daa
mov
repz
mov
xchg
mov
cltd
xor
rcrb
les
por
shll
pop
cltd
daa
or
std
pop
int3
lods
adc
jl
popf
mov
sti
pop
dec
pop
nop
xchg
and
add
popa
cltd
mov
subl
lea
fcompl
icebp
icebp
repnz
dec
iret
mov
int
andb
mov
xchg
dec
ret
ja
fistps
xor
lahf
mov
scas
in
scas
mov
sarb
mov
cld
or
jmp
inc
imul
pop
outsl
pusha
mov
scas
test
sbb
sub
js
fdivrl
xor
dec
dec
mov
movsl
fwait
int3
arpl
xchg
mov
mov
orb
add
shll
addr16
movsb
std
gs
jg
mov
sub
adc
lcall
das
imulb
fs
pop
repnz
push
mov
sahf
mov
add
shlb
lcall
push
mov
xchg
ficoms
test
test
rclb
cmp
fcompl
dec
sbb
data16
es
es
call
mov
mov
push
push
out
fiaddl
bound
mov
in
xor
loop
fnstsw
daa
jbe
shll
and
les
jle
std
repz
int
pop
cwtl
pop
mov
push
push
lcall
popf
mov
jno
push
jle
icebp
aam
out
inc
daa
cmpl
addr16
mov
cs
mov
insl
scas
or
jnp
icebp
cmp
ja
adc
or
or
hlt
std
pop
shrb
inc
pop
dec
mov
jno
mov
ret
std
test
dec
mov
test
mov
push
ret
push
rcr
xor
xchg
mov
imul
dec
lds
sbb
in
dec
sbb
jl
sbbb
aas
mov
sub
or
prefetcht0
push
cmc
xlat
add
cwtl
cmp
ds
movsl
mov
lds
cwtl
lahf
xchg
pop
dec
adc
pop
push
jne
push
sub
cmpsl
pop
jns
or
jl
js
push
push
dec
jbe
les
xor
dec
mov
movl
xchg
scas
test
stc
add
jne
dec
xor
clc
fmull
add
pop
xor
pushf
stos
fmull
repz
cli
outsb
in
lcall
jae
mov
pop
ja
or
adc
push
ja
out
adcb
jl
sbb
push
inc
icebp
jge
jmp
push
xor
call
or
dec
into
out
addr16
mov
ljmp
gs
jmp
xchg
sbb
scas
adc
mov
xchg
jne
push
mov
imul
push
aaa
push
lds
jmp
subl
shlb
loopne
popa
mov
mov
xor
pop
mov
jp
mov
and
adc
and
std
add
lret
fnsave
sti
xchg
mov
lock
pushf
sub
lret
dec
aaa
and
enter
movq
push
push
xchg
leave
repnz
cld
sbb
mov
ja
in
divl
mov
push
pop
aad
mov
fwait
or
mov
dec
push
ja
fstpl
mov
sti
mov
pop
jno
scas
mov
insb
insb
rorb
fiadds
xchg
shll
ds
aad
ss
cmp
push
stos
mov
sbb
cmp
sbb
push
popf
cmp
mov
pop
mov
mov
mov
subb
mov
pop
jmpw
lds
push
add
push
inc
inc
in
leave
xchg
pop
pop
out
adc
nop
and
divb
inc
jp
sar
mov
push
clc
out
cld
push
adc
and
inc
stos
or
xor
xor
rorl
in
rcl
in
mov
inc
adc
outsb
inc
sbb
imul
adc
out
jmp
fildl
dec
or
mov
cmpb
scas
adc
ds
cmp
add
orb
xor
add
push
xchg
push
sub
and
jp
sti
inc
popf
les
out
mov
xchg
jecxz
cmp
jmp
lret
dec
jg
int
pop
fwait
sbb
and
ja
jg
push
iret
fstp
cwtl
and
mov
pusha
inc
mov
adc
xor
push
out
sbb
rorl
xor
loope
fldcw
jge
push
jbe
mov
fs
mov
jle
mov
lea
mov
adc
sbb
popa
aam
es
fildl
sub
lods
movsb
cmp
adc
sti
push
jle
outsl
push
inc
lret
cld
or
stos
test
test
pop
fimull
mov
and
lods
fildl
ljmp
push
or
mov
in
and
mov
mov
mov
mull
cld
and
jmp
push
xchg
and
lcall
out
and
repnz
fiaddl
jns
inc
orb
aas
scas
sub
stc
cmp
and
popf
lcall
adc
push
int
jb
fiaddl
xchg
lods
xchg
sub
dec
mov
dec
sbb
cmp
mov
or
mul
cmp
jp
gs
sub
lret
fistl
fnstenv
inc
push
clc
lcall
pop
dec
enter
inc
push
push
xor
popa
sbb
mov
cs
dec
adc
jge
out
and
or
das
in
add
mov
fwait
pop
lahf
loopne
or
cmp
cmp
ja
int3
push
lret
icebp
mov
mov
sbb
dec
ret
xor
scas
nop
xor
das
and
add
push
cmp
mov
insl
insl
xchg
ret
outsb
repnz
popa
fistl
movsl
sub
jp
mov
sbb
sbb
popa
lret
push
cwtl
outsl
ja
test
adc
sbb
dec
scas
outsb
push
or
sbb
or
cmpsb
rclb
test
mov
sbb
sub
loopne
mov
ja
inc
mov
add
pop
dec
loope
icebp
int
mov
test
loope
or
xchg
jle
lds
push
ucomiss
fcoml
mov
imul
jl
ds
add
lods
popfw
mov
repz
push
cmp
inc
dec
rcll
stos
call
popf
adc
pop
mov
leave
pop
insb
add
into
dec
jnp
push
mov
pop
xchg
ljmp
mov
and
jnp
mov
push
inc
ffreep
pop
xor
daa
adc
adc
mov
mov
adc
imul
or
xchg
stos
in
sub
movsb
adc
and
adc
out
out
sub
add
rcll
jne
call
clc
mov
outsb
decb
int3
or
iret
jp
testl
adc
mov
cld
shll
scas
xlat
xchg
test
mov
pop
int
loopne
insl
out
les
daa
repnz
aaa
dec
mov
sets
ds
add
jp
jmp
sbb
les
sub
sub
mov
sub
mov
ds
xchg
idivl
jge
test
lods
or
cmp
je
sub
add
pushf
mov
xchg
xor
add
jne
adc
pop
sbb
xor
xorb
jb
lret
sbb
add
cld
shr
sbb
add
sarb
dec
pop
loop
push
mov
pop
push
icebp
jmp
gs
add
mov
sub
cmpb
leave
loopne
pop
inc
nop
mov
fstpl
sarb
jle
push
inc
loopne
pop
cmp
mov
int3
rolb
bound
dec
std
push
loope
push
insb
jecxz
jl
jmp
mov
std
aad
mov
popa
pop
das
popa
in
sbb
in
adc
or
xchg
nop
std
xor
mov
int
cmp
jmp
and
and
sbb
push
mov
pop
dec
nop
mov
pop
dec
int3
mov
rol
popa
xchg
outsb
fcomip
mov
adc
shrb
nop
xlat
cmp
roll
dec
stos
mov
or
iret
add
pop
mov
sub
stos
mov
cmp
inc
inc
adc
rcrl
movsbl
push
xor
fstpl
imul
call
xchg
xchg
and
stos
daa
xchg
mov
addr16
int3
xor
add
js
jmp
xchg
in
ds
mov
shlb
sub
inc
call
shlb
push
cmc
pop
sti
sbb
xchg
or
hlt
cmp
inc
test
lds
cmpsb
push
xlat
mov
fisubrs
out
pop
mov
xor
fldcw
mov
insl
mov
mov
mov
mov
push
cmpsl
das
mov
arpl
mov
push
aas
fstpl
ljmp
dec
mov
fdivs
jle
or
adc
push
rorl
ret
scas
inc
bound
pop
dec
jle
fldenv
icebp
push
dec
add
das
addr16
cmc
ss
mov
mov
inc
scas
mov
inc
call
mov
jns
dec
push
cs
pop
cmp
push
dec
xor
daa
pop
movsb
sbb
sub
scas
and
rorl
int3
add
cli
cmpsl
mov
outsl
or
orl
fcmovb
xorb
sahf
xor
enter
stos
inc
loope
cs
mov
mov
insl
jb
int3
sub
mov
mov
scas
stc
xor
mov
pop
inc
cs
mov
mov
lock
pop
ja
mov
test
lods
mov
jno
rcll
or
testl
xor
jecxz
push
mov
cmpsb
mov
pop
les
cmp
or
movsb
in
mov
mov
jp
mov
mov
pop
test
rcrl
std
jae
and
std
dec
jecxz
dec
lahf
pop
sbb
pop
into
sbb
pop
sub
push
imul
pop
cs
aaa
xchg
mov
add
das
ficoms
shrb
push
sub
mov
mov
adc
insl
notb
mov
xchg
sub
add
dec
insb
les
aam
sti
stos
daa
ret
xchg
shl
push
add
xor
cmp
shr
push
xchg
jecxz
test
push
shll
push
repnz
out
movsl
aam
jmp
pop
cmpsb
fisubrl
fsubrl
in
dec
jne
mov
inc
loop
mov
adc
fwait
sub
add
sub
shll
push
cltd
test
dec
pop
addl
sbb
in
dec
out
scas
icebp
sub
shll
cmp
pop
mov
mov
adc
sarb
sub
loope
jmp
mov
cmp
fs
mov
shlb
jne
sbbl
add
xchg
out
shl
dec
add
loope
sub
fwait
lahf
mov
jg
ljmp
mov
cmpsl
add
subl
dec
and
mov
out
call
in
test
lret
lods
sahf
push
sbb
cmpb
arpl
sbb
sarb
push
mov
lods
imul
cmp
fwait
sarb
push
inc
adc
stos
lods
sub
mov
andb
scas
push
cli
das
stc
push
mov
jl
mov
xchg
loop
out
mov
lcall
pop
and
mov
jecxz
gs
lock
test
cmp
cmp
inc
repz
sub
rcll
jmp
rcl
stc
fadds
xchg
dec
push
pop
add
or
push
mov
es
inc
stos
and
push
cwtl
popf
adc
dec
or
mov
adc
dec
enter
xchg
iret
bound
xor
sbb
fistpl
jg
negb
orl
mov
xchg
idiv
rolb
insb
or
dec
or
cmp
push
inc
sbb
cmp
xchg
fstpl
cmp
dec
or
mov
mov
sub
icebp
or
je
xor
nop
dec
pop
pop
push
dec
gs
and
movsb
popf
mov
pop
sub
loope
addr16
sub
shrl
cmp
mov
adc
in
sbb
aad
pusha
test
daa
popf
loope
loopne
dec
addr16
mov
aaa
add
imul
cmp
jb
ljmp
lret
mov
inc
stos
mov
les
repz
aam
mov
aad
vphaddbw
mov
sub
mov
xlat
sub
fbld
push
ja
call
inc
xchg
jg
enter
popa
pop
mov
mov
cmp
lods
sbb
adc
insb
aad
inc
int3
fdivr
data16
cmp
inc
sbb
xor
mov
push
add
movb
int3
inc
mov
lods
dec
sbb
shll
inc
jb
iret
adc
mov
xchg
sarl
and
andl
in
jno
xorb
fstl
lock
stos
push
pop
scas
mov
fwait
bnd
adc
mov
push
dec
jp
js
leave
sub
mov
jbe
ret
fwait
loope
xor
sub
xchg
jp
xor
daa
fldenv
or
add
inc
inc
clc
insb
std
jl
push
push
lock
stos
shrl
inc
sub
jbe
aad
bound
jnp
in
movsl
push
ror
sub
xlat
pop
mov
out
in
cmp
dec
jae
xor
lods
dec
in
push
cmp
push
popa
jb
xchg
movsb
fdivr
vmwrite
outsb
cld
and
and
sub
or
xor
or
incl
bound
pop
push
mov
repz
inc
jae
in
add
and
sti
scas
and
movsb
stc
rcrb
ljmp
loopne
pop
pop
lods
mov
jge
dec
fldenv
pop
repz
rcl
and
dec
or
pop
cmc
outsb
adc
daa
arpl
fiaddl
adc
inc
enter
out
leave
push
subl
movsb
rcrb
mov
imul
arpl
cmp
push
mov
inc
cmp
mov
pop
andl
mov
lea
mov
rclb
sub
jg
gs
sbb
shl
adc
mov
xor
cmp
icebp
lcall
test
ja
inc
xchg
jno
add
xlat
pop
je
repnz
dec
xor
fsubp
sqrtps
loope
psubq
in
arpl
jmp
mov
mov
aam
scas
sub
sbb
lcall
mov
pop
int3
jb
and
stc
mov
iret
cmpsb
sub
call
xchg
lcall
inc
into
sub
out
ss
aam
cltd
xchg
shrb
mov
or
mull
mov
enter
sbb
inc
jns
leave
fcmovnb
loopne
inc
in
sub
fwait
scas
cmp
decb
and
add
add
xchg
popa
pop
cmp
push
outsb
mov
faddl
dec
mov
push
int3
add
mov
into
or
in
outsl
aaa
lock
mov
repnz
xor
sub
adc
mov
pop
faddl
sti
aam
jb
bound
insb
xchg
add
push
jecxz
mov
pusha
bnd
and
js
arpl
call
out
jns
mov
push
and
loopne
mov
cmpsl
push
xor
int
test
xor
nop
int3
lahf
out
mov
es
dec
xchg
pop
cmp
fs
lods
popa
jae
es
or
mov
les
xorl
lds
into
inc
sbb
jo
cli
loop
dec
xchg
imul
cwtl
adc
repnz
ret
inc
xchg
add
cli
cmpl
stos
inc
xorb
push
sbb
fisttpll
sahf
push
aas
inc
xchg
or
fimull
xchg
test
mov
scas
test
xor
negb
inc
lcall
xchg
add
and
in
test
jne
xor
fstps
mov
mov
dec
adc
imul
push
push
cmpsl
sub
ja
mov
sbb
cmp
pop
mov
jmp
push
xorl
xor
sub
inc
and
jp
mov
and
shrb
fidivs
mov
or
ljmp
lock
mov
xor
mov
js
cs
pop
mov
cmp
nop
jmp
mov
lahf
movsl
adc
cmp
dec
stos
shll
pop
insb
mov
iret
pop
fstpt
out
andl
aad
push
push
xor
sub
cmpsb
inc
popa
and
orl
ret
pop
cmp
push
adc
test
pop
mov
out
mov
lea
jp
and
out
mov
jbe
mov
and
loopne
mov
fnsave
sub
jl
lcall
and
in
jb
roll
lds
jno
mov
test
repz
test
stc
cmc
jne
xchg
cwtl
pop
mov
mov
dec
idivl
lret
adc
mov
data16
and
jle
out
std
adc
or
test
test
jns
jbe
sbb
dec
xchg
push
or
push
mov
inc
aam
pop
inc
pop
and
and
in
fildll
and
pop
enter
shl
mov
in
push
jo
fwait
lock
int3
loop
ret
or
cmpsb
es
dec
push
jle
push
mov
test
pop
insl
call
pop
sub
jmp
mov
repz
sbb
mov
jle
pop
movsb
fstpl
int
fxch
jecxz
imul
into
aaa
dec
sub
aas
orl
jecxz
mov
std
ds
out
leave
add
out
aas
jnp
mov
loop
mov
cwtl
dec
das
das
mov
mov
mov
mov
dec
je
loop
mov
pushf
js
cmp
pop
dec
pop
cmp
loop
cld
lcall
js
loope
jno
in
inc
vmwrite
popa
pop
shrb
lcall
jb
jne
negb
popa
jl
mov
push
jno
nop
movsb
int
jb
pop
xlat
es
ljmp
sbb
jb
dec
roll
jecxz
dec
sbb
cmp
xchg
int
addr16
addr16
popf
lret
es
sub
mov
mov
scas
ss
dec
cmc
insb
jb
mov
dec
outsb
int
ret
pop
sbb
add
add
dec
or
rol
xor
pop
fs
mov
cmp
cmovl
cmpsl
stc
repz
or
and
cld
dec
add
dec
roll
stc
mov
popf
jg
xchg
shl
das
push
xlat
pop
lods
out
or
jne
in
mov
xor
and
xchg
jb
inc
in
stc
and
xlat
push
enter
loope
in
pushf
rolb
mov
subb
xchg
xchg
mov
dec
inc
negl
je
andb
mov
adc
jecxz
inc
dec
sbb
out
xchg
rclb
call
icebp
lahf
cmp
int
jle
repnz
mov
jl
ja
lock
incl
stc
mov
icebp
push
xchg
addr16
jge
cltd
xchg
pop
rcll
adc
sahf
jg
or
repnz
pop
mov
fdivp
popa
retw
les
ljmp
and
push
data16
push
mov
sar
inc
push
lea
stc
xchg
mov
push
lock
lods
loopne
xchg
daa
add
ja
inc
adc
jl
or
int3
out
xor
mov
add
add
das
in
inc
mov
test
lods
fisubl
test
bound
fbstp
mov
and
ds
lret
xor
pop
ljmp
in
movsl
add
or
add
das
pop
jns
lret
mov
fsts
mov
sbb
push
dec
cmp
jae
popa
push
iret
ljmp
sub
fstpt
loopne
xlat
hlt
mov
shl
or
jp
lcall
pop
sub
mov
push
test
scas
mov
mov
push
popf
push
aaa
insl
and
in
stos
xchg
mov
shrb
imulb
call
xchg
lret
in
icebp
subl
mov
jle
jg
or
and
rolb
in
mov
out
xchg
rorl
jp
push
add
aam
repnz
push
scas
into
jb
jg
call
cmp
sarb
shlb
jbe
orb
adc
mov
les
in
pop
push
lods
jmp
mov
cmp
call
es
rcrb
sbb
adc
into
clc
xchg
das
sub
mov
push
out
adc
iret
add
inc
aas
and
hlt
test
dec
dec
and
sub
rorl
data16
jecxz
jne
cmpsl
jb
mov
cmp
xor
push
sbb
gs
cmc
insl
shll
sbb
mov
loop
lods
and
sub
cmp
mov
push
ret
mov
mov
adc
push
into
ss
sahf
mov
push
hlt
sahf
into
adc
sti
aad
leave
int3
fisubrs
lock
in
ds
sahf
jno
into
jno
adc
in
popa
pop
dec
es
pop
jg
add
mov
sbb
adc
lret
jb
xor
sub
and
sti
mulb
pushf
push
mov
jecxz
dec
adc
inc
or
push
inc
aaa
pusha
or
scas
cli
sub
or
xchg
push
xlat
pop
dec
shrl
cltd
imul
adc
push
jb
pop
cltd
adc
xchg
popf
int
iret
mov
inc
cmpsb
lds
sbb
xor
mov
jle
pop
icebp
gs
sub
adc
pushl
jns
fcomi
adc
mov
pushf
mov
jmp
xor
fdivp
and
jo
in
xor
inc
sub
mov
dec
in
leave
aad
push
xchg
rorl
sub
js
repz
test
and
dec
jae
std
mov
out
fwait
cwtl
lahf
pop
pop
dec
inc
stos
sbbl
outsb
fsts
cmp
pop
xlat
add
std
dec
les
mov
rcrl
mov
sbb
out
dec
pop
pop
pushf
mov
cmp
out
pop
insb
mov
mov
ja
mov
rcrb
test
mov
mov
inc
push
xchg
fs
pop
lret
push
leave
inc
and
fsubs
es
clc
int3
movsl
lahf
xor
pop
mov
jl
sahf
dec
jo
sbb
insb
xlat
inc
push
sbb
xchg
shll
jbe
jns
cmc
inc
xlat
fs
sbb
xchg
mov
pop
mov
xor
sub
sbb
clc
mov
outsl
xchg
mov
jg
dec
dec
js
xchg
scas
in
mov
mov
in
int
cmc
jp
shrl
int
lock
cmc
push
hlt
mov
lods
dec
or
inc
push
xchg
and
jge
dec
lock
pop
add
out
loopne
fmuls
jge
lcall
mov
and
stos
fs
pop
mov
push
and
dec
cmp
scas
dec
inc
mov
add
cwtl
sarl
mov
outsl
lcall
scas
mov
hlt
add
insb
in
in
mov
jb
mov
into
mov
or
mov
pushf
inc
sbb
push
adc
frstor
add
xchg
pop
inc
mov
mov
pop
jle
fdivs
cld
mov
mov
stos
sbb
pop
or
aad
faddl
lods
mov
and
imul
cs
out
or
xor
cmp
push
mov
arpl
scas
sbb
lock
stc
test
scas
rolb
push
fistpll
push
xlat
cmp
mov
addr16
mov
lret
pushf
ds
sub
popf
cmp
loope
loop
and
mov
xchg
loop
sub
xlat
int3
adc
dec
stc
xor
pushf
bound
xchg
jns
xchg
sub
jne
pusha
stos
inc
sbb
lods
dec
cmpb
xor
movb
hlt
xchg
lods
je
fnstcw
enter
into
int
pop
in
call
push
pop
jae
pop
dec
lahf
test
fmull
cmp
popf
push
rcr
jns
lods
dec
xor
shl
dec
mov
mov
inc
or
fbstp
sbb
in
arpl
inc
das
and
mov
jecxz
pop
inc
rclb
sarb
sbb
inc
std
scas
popa
dec
mov
aaa
enter
push
lods
repz
dec
gs
mov
sbb
inc
inc
in
inc
movsb
test
rorb
mov
mov
push
fwait
and
pop
xor
jae
sahf
sbb
dec
jbe
pop
inc
cld
fimuls
and
jl
inc
pop
in
imul
test
pop
lds
ss
xor
push
fwait
sub
leave
add
clc
loopne
cmp
movsb
inc
jae
lcall
push
nop
mov
sbb
popa
iret
je
xchg
mov
jmp
cmpb
mov
aas
ret
es
ret
js
pop
jle
xchg
stos
pop
ror
negl
mov
jg
cli
das
xlat
popf
std
js
repz
jbe
fiadds
xor
int
in
and
and
es
ss
mov
sub
sub
inc
and
bound
loope
hlt
insl
lock
pop
sbb
pushf
mov
imul
mov
pop
xor
sub
mov
popf
ret
movsl
inc
pushf
mov
jmp
sub
add
std
push
jle
mov
mov
test
jb
imul
stos
xchg
adc
mov
sbb
pop
addb
lods
mov
lcall
lods
mov
jmp
xchg
cltd
fsubrl
shl
arpl
pop
inc
stc
add
push
clc
stos
scas
loop
insl
add
sbb
rcrb
mov
in
sbb
xor
xor
lcall
std
cmp
pusha
push
mov
sub
test
cbtw
rorl
push
call
das
ds
mov
xor
mov
stos
scas
fdiv
stos
adc
hlt
loop
mov
push
icebp
xchg
fs
in
push
mov
mov
cmp
lret
and
jmp
push
jne
mov
ss
rcrb
push
scas
arpl
stc
pop
pop
mov
pshufw
lret
int
push
cmpsl
and
inc
dec
add
sub
daa
inc
mov
lret
dec
sahf
xor
pop
push
aam
mov
lret
repz
push
rorb
xchg
daa
mov
sbb
mov
into
add
add
mov
jb
adc
out
inc
fidivs
jmp
mov
push
cmc
pop
ljmp
jb
aad
or
lahf
in
or
stc
imul
mov
push
int
inc
aas
bound
jp
aas
stc
xor
incb
add
cmp
je
mov
insl
lods
es
rcr
xor
push
inc
imull
cmpsb
mov
mov
cmp
xchg
dec
dec
lret
data16
cmp
pop
xchg
stc
sub
aas
repz
lahf
xor
inc
sahf
cmpsl
and
sbb
xchg
ja
addb
cmp
psubusb
popa
negl
inc
mov
les
pop
xor
inc
and
xchg
fldt
dec
or
leave
sti
pop
pcmpgtd
ss
push
daa
jbe
inc
jmp
jp
les
and
sbb
push
repnz
js
mov
pop
outsl
pushf
data16
lcall
in
jbe
lods
das
outsb
lea
fldt
push
int
sub
out
xchg
test
or
push
arpl
jg
enter
sbb
repnz
lcall
ljmp
and
clc
cmc
jle
pop
xchg
mov
imul
aaa
mov
movsb
cmp
stos
dec
in
fcomi
jae
insb
arpl
outsl
lret
pop
jb
push
push
mov
sub
sbb
cmpsb
mov
ss
adc
sti
pushf
mov
popf
loope
jno
jle
mov
pop
data16
inc
jecxz
arpl
scas
mov
cmpsb
sbb
divb
arpl
or
dec
sahf
int3
pop
and
pop
outsl
outsb
testl
mov
push
cmc
or
or
stc
cwtl
out
stc
mov
push
jb
dec
das
add
fbstp
xor
movsl
repnz
xor
fldt
pop
in
xor
test
les
sub
inc
push
in
insb
ret
out
cmp
insl
xchg
inc
fadd
outsb
loope
jne
inc
sti
das
dec
insl
data16
mov
push
out
mov
nop
xor
pop
mov
imul
int3
sbb
jno
jns
add
js
and
shl
xchg
mov
cmp
pop
push
es
lahf
or
stos
in
int
lcall
movsb
lret
into
and
js
inc
xlat
rclb
dec
mov
push
mov
push
cmpsb
inc
dec
jno
ds
push
stos
adc
pop
outsl
iret
inc
icebp
sahf
adc
mov
ret
movsl
out
mov
inc
cmc
pop
push
daa
jecxz
push
pop
push
jno
sbb
lret
enter
dec
cmp
dec
mov
dec
jnp
xchg
dec
sub
mov
loopne
xchg
aad
test
pop
cmp
leave
cmp
xor
je
cltd
rorl
sbb
jno
adc
inc
mov
or
scas
pusha
je
cwtl
xchg
xor
sbb
ja
movsl
lock
xorb
fs
sub
out
fld
ss
stc
mov
push
shll
test
test
and
int
sbb
inc
or
outsl
inc
shlb
dec
mov
add
sub
inc
ret
shll
push
push
push
jno
or
loopne
loop
nop
shrl
pop
in
pop
adc
mov
sti
mov
and
xchg
sbb
mov
lahf
movsb
loopne
xchg
repz
into
cmpsl
push
pop
shr
mov
sbb
or
mov
scas
cmp
jae
fidivrl
sbb
cmc
pop
mov
and
cmpb
jno
movsb
fistpl
out
and
xlat
push
sbb
movsb
cs
dec
inc
inc
cmpsb
int
sahf
adc
cltd
stc
xchg
jne
xor
iret
gs
movsb
mov
rclb
jo
xchg
and
loopne
movsb
adc
lret
js
push
sub
imul
inc
aam
sbb
xor
pusha
adc
add
ss
pop
das
mov
jns
mov
inc
xchg
pop
stc
dec
in
mov
jp
xor
inc
sub
adc
lds
dec
xchg
gs
sub
adc
push
cld
mov
mov
xlat
dec
inc
test
xchg
mov
pop
cmp
daa
push
sub
je
mov
lret
mov
fwait
xor
icebp
pop
lcall
cmp
sub
pop
into
mov
xor
xor
sub
xchg
std
dec
xchg
cmpsb
xor
xchg
push
sub
xlat
ret
test
inc
push
imul
jno
mov
pop
push
pop
sahf
fisttps
push
cmc
pop
into
out
jb
shlb
adc
pop
icebp
pop
ret
mov
push
shrb
inc
pop
dec
xchg
mov
adc
and
enter
cmc
enter
std
cltd
inc
popf
xchg
dec
pop
sub
imul
sbb
ljmp
pop
mov
dec
sbb
xchg
in
push
nop
test
popl
mov
aad
jns
pop
mov
mov
dec
cli
test
or
add
jne
mov
mov
test
aam
imul
mov
push
mov
xor
pop
xchg
jecxz
dec
inc
mov
mov
popa
cmp
mov
out
cmp
push
and
je
lods
addr16
mov
push
lret
push
sub
sub
mov
pop
test
movsl
or
cmc
mov
roll
pop
jne
scas
cwtl
stos
sub
push
insb
push
or
ret
test
inc
hlt
cmp
sbb
cmp
insb
stos
and
roll
xor
insl
in
int3
mov
sbb
mov
or
fsubrs
pop
and
enter
and
mov
inc
inc
cmp
pop
mov
adc
stos
clc
in
push
mov
inc
add
in
inc
push
cmc
cmc
filds
enter
xor
insl
push
insl
sub
loope
shll
loope
aad
jl
or
sbb
or
sub
pushl
aas
jmp
mov
xchg
xor
loope
pop
call
and
push
push
cmp
imul
loop
nop
movsl
pop
fistl
pop
repz
mov
shll
test
mov
cld
cld
les
or
pop
aaa
popf
hlt
ss
cltd
imul
mov
push
movsl
jecxz
add
in
sar
mov
push
pusha
mov
bound
sbb
mov
push
or
and
jns
cmp
add
or
mov
cmp
add
adc
out
test
sbb
sarl
jno
mov
loopne
push
shll
ds
mov
rorb
mov
mov
shlb
cmp
inc
cmp
loope,pt
es
xor
mov
ss
xchg
or
cs
jno
ret
adcb
ss
test
sub
les
aad
sub
jecxz
std
sbb
aam
call
pop
orb
and
push
xchg
sbb
movsl
adc
mov
in
jnp
cmp
out
ss
push
inc
outsb
xchg
xlat
jl
hlt
outsl
pop
addr16
pop
into
cs
test
cmpsb
xchg
popa
fmull
pop
shr
roll
push
add
int
pop
jbe
mov
mov
push
fistps
jmp
pop
les
push
mov
xchg
xor
mov
imul
lcall
mov
mov
sbb
mov
insb
nop
inc
leave
inc
inc
fwait
pusha
popa
mov
lock
and
push
ss
int3
shrl
sub
in
jmp
jbe
add
subl
test
xor
dec
aaa
inc
vmread
dec
roll
subl
popf
inc
mov
out
das
sbb
cmpsl
dec
cmp
stos
push
fiadds
rcrb
or
mov
and
rcrl
ja
push
mov
in
out
jge
or
loop
xlat
sub
notl
popl
fiadds
aaa
repz
shll
pop
sub
xchg
sub
or
mov
lahf
jl
fcompl
adc
shrl
add
insb
ds
aam
jl
xchg
aaa
jmp
mov
je
cmpl
jmp
sbb
xchg
inc
fwait
stos
and
test
ja
mov
shl
cmpl
mov
stc
pop
cltd
push
and
push
push
es
jno
pop
in
cmpb
std
in
fsts
hlt
in
arpl
ss
add
dec
xorl
mov
lds
inc
jp
cs
ror
paddsb
cld
shrb
aad
or
push
xlat
mov
or
cli
inc
and
clc
stos
jge
int
xlat
imul
mov
dec
addl
dec
mov
adc
sbb
rcl
xchg
inc
cmc
inc
stos
add
push
pop
out
jle,pn
data16
enter
js
pop
mov
scas
out
mov
cmp
insb
cmpsb
and
xchg
addr16
push
or
shrb
sahf
mov
jecxz
sbb
fwait
sarl
js
jb
mov
adc
imul
xor
mov
pop
cld
and
xlat
inc
jl
fisttpll
inc
cmp
dec
jbe
mov
scas
or
cmpsb
pop
pop
scas
lock
jp
sbb
divl
popa
pop
adc
xchg
test
jnp
out
repz
out
arpl
mov
or
and
mov
test
fcoms
das
mov
gs
sbb
in
aad
lock
mov
xlat
jnp
jbe
push
test
xor
xor
js
imul
in
fldenv
out
out
or
mov
fidivl
mov
sbb
and
fwait
scas
mov
inc
ds
hlt
dec
jge
sti
fs
leave
repnz
xchg
pop
dec
repz
lock
cwtl
test
cmp
push
and
push
daa
lods
and
xchg
xor
sbb
push
and
fistps
sub
mov
cs
fsubrs
push
mov
ud1
mov
call
in
pop
add
in
mov
push
roll
xchg
andl
leave
jle
pop
mov
in
xor
inc
mov
mov
lds
sub
jns
fcomps
mov
aas
mov
mov
inc
je
adc
fiaddl
enter
je
jne
or
pushf
insb
sbb
outsl
xor
xchg
and
aas
adc
mov
add
insb
stc
imul
mov
aas
leave
and
test
inc
pop
xor
dec
pop
or
xchg
cwtl
inc
jmp
sub
inc
mov
and
jns
jecxz
mov
xor
daa
aaa
clc
adc
out
arpl
pop
test
cmpsb
cltd
orb
cmp
lea
scas
adc
push
mov
pop
or
dec
in
add
sbbb
ds
xchg
icebp
push
mov
imul
adc
sarb
adc
push
pop
int
and
sub
inc
adc
xchg
sub
mov
cs
mov
jmp
mov
xchg
xchg
xor
ds
mov
int3
jo
cmp
add
aaa
gs
and
in
scas
cs
popa
fadds
cmp
iret
jne
jecxz
jg
popa
movl
pop
or
data16
es
mov
add
std
movsb
test
sbb
xchg
test
push
movsb
pop
add
mov
adc
cmpsl
dec
xor
push
cs
test
xor
push
mov
sbb
test
cli
jnp
jae
insl
add
cmp
cmp
sbb
pop
add
icebp
gs
pushf
jmp
xor
scas
lahf
add
mov
push
xorb
jbe
xchg
xchg
jle
mov
in
adc
call
rorb
cwtl
mov
pop
xchg
inc
sbb
mov
jnp
enter
push
out
fs
dec
inc
push
jg
pusha
lea
and
repz
jle
imul
ficompl
sbb
mov
add
pop
pop
add
enter
mov
inc
stos
pop
add
pop
mov
xchg
jecxz
adc
divl
loopne
popf
push
jne
das
loope
adc
cltd
data16
jno
dec
add
xor
int
mov
mov
leave
lahf
rcrl
cmpsb
sbb
push
sbb
pop
sbb
cmp
jnp
mov
mov
pop
push
notb
fnsave
scas
xor
dec
mov
xchg
testl
jmp
mov
jle
push
cmp
and
mov
sbb
adc
jbe
sti
out
hlt
mov
mov
push
icebp
fisttps
test
cld
sub
mov
inc
gs
push
test
push
adc
push
xchg
dec
xchg
mov
sub
std
mov
pop
hlt
add
sti
inc
sub
xor
xor
add
fldl
cld
addb
dec
ljmp
out
repnz
aas
sub
jg
xor
mov
push
popf
imul
addr16
dec
mov
fdiv
jbe
mov
or
cmp
stos
inc
imul
loop
mov
lret
iret
inc
mov
imul
int3
mov
cld
nop
sbb
loop
fisubrs
cwtl
lods
mov
inc
imul
sbb
in
decb
jbe
les
push
ret
inc
sbb
inc
ljmp
push
inc
sti
insl
cmp
push
movsl
cmpsl
mov
jle
test
mov
xchg
push
ret
mov
mov
push
lods
insl
jo
mov
nop
cs
inc
cmp
xchg
adc
cmp
adc
xor
cmp
pusha
call
and
push
mov
in
sub
mov
xchg
inc
ret
sarl
dec
out
loope,pn
mov
in
shrl
testb
mov
adc
pop
mov
jmp
mov
ficompl
fsts
sub
xchg
ljmp
out
js
roll
jmp
aad
test
push
pop
sub
sub
sbb
leave
xor
lret
loop
scas
mov
enter
lcall
push
pop
das
xchg
mov
inc
jo,pn
cmp
test
ret
jg
das
mov
sub
mov
in
or
rcrb
adc
cmp
push
mov
inc
jg
cmc
add
mov
and
jnp
pop
movsb
dec
and
cmc
pop
stos
inc
aad
push
ficomps
mov
dec
add
mov
inc
sub
imul
pop
dec
or
int3
cmc
movb
cmp
push
mov
dec
out
aaa
or
cmp
inc
push
int3
loop
mov
int3
sub
mov
mov
daa
add
xrelease
add
scas
xor
cmp
jo
int3
push
jp
outsl
or
daa
leave
sbb
and
into
aam
jno
mov
inc
je
mov
imul
je
mov
enter
adc
jno
lcall
dec
iret
xorb
out
cmp
mov
mov
xchg
cwtl
cmc
popf
out
jns
mov
and
pusha
jne
loop
cmp
adc
mov
test
push
xchg
jle
dec
jbe
mov
ljmp
out
jo
mov
pop
or
push
scas
xchg
lds
aad
popa
mov
sahf
xor
sbb
sbb
sbb
and
aas
cmpsb
and
and
lret
push
mov
adc
jb
and
xor
pop
lods
aaa
mov
pop
sti
mov
scas
dec
ljmp
aaa
in
sbb
cmp
in
call
push
pushf
cmpsb
lods
jg
cmc
lret
adc
pop
mov
mov
popa
or
cmp
pop
and
sub
push
xchg
outsb
jne
pop
loope
sti
nop
mov
in
mov
sub
jl
test
imul
das
mov
pop
rcrb
into
fsubrl
dec
add
dec
xor
add
xchg
ss
cld
leave
setnp
ret
outsb
pop
in
dec
pop
lcall
add
fistps
xor
fldt
cmpsb
sub
dec
jbe
add
mov
cs
jge
cli
push
push
scas
and
xor
pop
dec
enter
jl
push
imul
fsubp
jl
imul
push
arpl
sbb
lock
out
je
outsl
pushf
jne
ret
and
ds
push
inc
push
cmpsl
mov
fimull
pop
sub
dec
fstpl
pop
lcall
xchg
and
aam
cmp
mov
arpl
or
inc
cmp
dec
adc
pop
lods
daa
inc
and
mov
dec
and
icebp
cmp
mov
push
jp
pop
and
js
ds
icebp
pop
sbb
addr16
movsl
push
movl
sub
cmpsb
movups
lods
jae
mov
out
sub
popa
jbe
add
and
and
outsb
aas
pusha
push
leave
int
das
cmp
daa
xlat
and
scas
mov
icebp
or
es
stc
out
mov
push
std
into
or
pop
jmp
aaa
test
outsb
imul
or
cmp
in
divb
sub
and
adcb
push
mov
inc
adc
popl
stc
cmp
lods
xchg
mov
sbb
jecxz
outsb
push
push
mov
push
jge
adc
lret
xchg
jmp
addr16
jmp
cmpsb
push
mov
imul
lahf
inc
push
and
sub
fisubrl
xchg
xor
movsb
imul
add
clc
icebp
pusha
sbb
xlat
cmpsl
jge
pop
mull
inc
adc
mov
and
mov
mov
insl
into
iret
les
add
mov
cmpsb
out
leave
dec
cwtl
dec
pop
pop
fldl
lods
xchg
mov
jecxz
cs
cs
add
cmp
arpl
inc
adc
cmpb
mov
iret
ljmp
pop
rorl
aam
lods
sbb
sbbb
mov
scas
xchg
cmc
fistpll
subb
push
adc
lcall
leave
insl
mov
adc
jle
push
leave
aas
xchg
sbb
adc
push
push
mov
adc
mov
ja
mov
loop
jmp
icebp
ja
dec
mov
add
lret
arpl
lea
or
xchg
jno
xor
scas
and
xchg
add
bound
cmpsl
inc
mov
mov
dec
xlat
adc
push
fsubr
xor
dec
mov
ja
pop
aas
mov
sub
lea
ds
inc
add
xor
or
andl
and
pusha
cmc
mov
in
cmc
and
push
fistps
fsubl
daa
sub
cmp
push
or
movlps
mov
mov
or
sub
xor
inc
cmp
inc
and
dec
lret
dec
cmp
lea
mov
mov
cs
lods
popf
or
lahf
outsl
mov
pop
jo
fmull
das
inc
push
push
int3
lods
clc
dec
sub
ss
test
scas
in
jne
inc
and
dec
mov
into
repz
sub
stos
pusha
jo
frstor
ret
jo
jne
test
fprem
dec
insl
dec
sbb
adc
mov
pop
bound
xor
and
incb
cld
jg
mov
push
js
add
pop
push
aaa
fstl
clc
imul
push
cld
cmp
inc
in
sbb
repnz
jmp
out
out
jb
lds
push
mov
scas
or
lcall
xor
cwtl
into
in
pop
imul
in
aad
ds
sahf
jg
les
cmpsb
je
push
dec
sub
pop
and
movsb
std
push
negl
hlt
pop
mov
and
je
ljmp
out
loop
sti
lret
sbb
xchg
sbb
clc
fdivs
bound
inc
lea
sub
shrb
movsb
aam
lods
aas
icebp
push
lret
xor
es
cld
push
data16
sbb
fistpl
push
sbb
lahf
or
jo
or
in
fnstcw
jge
enter
scas
mov
mov
pop
fwait
incl
pop
rcrb
lcall
and
push
or
pop
pop
dec
jb
or
outsb
shrb
scas
xchg
xor
test
pop
dec
imull
add
mov
ljmp
mov
ljmp
xor
inc
jo
cs
scas
jp
sub
adcb
je
ret
repnz
cld
mov
hlt
mov
sub
jge
ja
adc
add
dec
dec
bound
adc
filds
mov
push
mov
sub
pop
cltd
inc
mov
hlt
les
cmp
mov
jbe
lea
add
ss
or
or
xchg
pop
sub
mov
ljmp
jo
inc
outsb
lea
dec
mov
inc
std
pushf
out
dec
nop
dec
dec
sbb
mov
std
xchg
cld
lock
sti
xor
dec
pop
jb
mov
dec
add
xchg
cmp
inc
sbb
ljmp
mov
sub
push
out
shlb
fcmovnb
mov
cmpsb
subl
dec
es
inc
outsb
sbb
or
out
mov
inc
lock
cs
mov
inc
pop
scas
mov
pop
pop
xor
lods
jo
pop
xorl
mov
das
jno
dec
in
mov
test
and
sub
push
add
pop
aam
icebp
addb
mov
shl
mov
int3
dec
push
es
test
jg
movb
push
lahf
inc
mov
and
bound
jecxz
aam
inc
add
and
mov
or
imul
sbb
mov
sbb
pop
push
mov
sbb
movsb
out
sub
mov
xchg
sbb
or
jne
fidivs
aas
push
add
add
or
lret
dec
mov
cmp
stos
dec
push
cmpsb
ret
popa
scas
and
xchg
jecxz
std
bound
cmp
ret
adc
cmpsl
std
mull
add
in
add
or
les
mov
add
andb
mov
push
cmp
cld
and
dec
fwait
adc
pop
dec
cmp
xchg
dec
and
or
fstl
es
stc
dec
rorl
clc
mov
dec
fwait
sbb
xchg
dec
cwtl
inc
mov
rclb
inc
fstpt
pop
lods
mov
or
mov
in
jb
add
sub
pop
jmp
xchg
pop
mov
jb
fwait
int3
or
jp
inc
mov
jbe
and
mov
icebp
cmp
sub
cltd
insb
mov
push
fisubl
xlat
inc
adc
jne
mov
sbb
mov
cmp
push
pusha
mov
xor
shrl
ret
std
loopne
ficompl
mov
push
inc
lods
nop
fsubrs
xlat
test
pop
push
popf
xchg
inc
aad
inc
sbb
movsb
mull
sahf
cmpb
xor
fisubl
inc
push
cmpsl
cmp
add
ljmp
arpl
push
mov
icebp
dec
out
jnp
xlat
hlt
pop
mov
xor
lret
inc
xor
push
aaa
mov
stc
insl
icebp
out
pop
push
shrb
push
addr16
or
mov
ja
jl
cmp
aad
push
xchg
push
std
test
arpl
fiaddl
je
push
add
pop
cmpsl
les
xchg
cmp
and
sub
lea
mov
shl
sahf
nop
cmp
fwait
inc
jae
inc
fadd
sub
call
sbb
xchg
and
jmp
ret
pop
inc
inc
cmp
xchg
in
ss
je
lahf
and
add
adc
sub
cmpsl
pop
je
inc
mov
cs
xor
out
outsb
pop
sti
lods
pop
mov
fistpl
jb
movsl
and
push
sub
ret
jp
das
repnz
fwait
movsl
push
mov
lds
adc
ja
xchg
xchg
add
jo
adc
lret
stos
mov
adc
sbb
xchg
pop
test
xchg
jmp
mov
adc
sub
or
iret
cli
enter
pop
outsl
fbstp
xlat
or
fidivl
sbb
mov
aam
mov
int3
out
or
cs
sbb
in
sbb
sbb
lods
pop
pushf
cmp
sahf
fwait
std
mov
adc
xchg
and
icebp
into
mov
sbb
cmp
idiv
mov
das
fldcw
cltd
clc
sub
cld
dec
leave
adc
ror
bound
inc
shrl
call
lods
pop
aam
jge
in
push
popa
test
int3
push
jg
ds
lds
adc
aad
pop
ss
xchg
dec
hlt
cmp
idivl
cmp
mov
out
fcmovu
inc
pop
mov
sub
mov
negl
mov
das
fwait
ror
adc
adc
add
testl
or
cmp
pop
repz
xor
push
outsl
pushf
cmp
pop
pushf
nop
mov
sub
rcl
mov
call
push
les
shll
aaa
sbb
or
in
sahf
pop
inc
mov
out
sahf
jmp
je
cmp
dec
dec
push
mov
or
addr16
out
or
add
or
mov
xor
loope
ss
loop
outsb
js
mov
dec
arpl
xchg
fisttpll
fs
jnp
pop
jmp
fcmove
add
test
out
pop
mov
stc
lret
mov
push
xor
jg
inc
mov
ja
mov
jecxz
mov
stc
pop
jge
ljmp
loope
dec
loopne
mov
add
loopne
cmp
mov
inc
ja
add
jge
xor
shlb
dec
out
add
mov
inc
sub
jmp
std
sbb
daa
dec
jns
adc
dec
lret
popf
outsl
hlt
movsl
fs
push
mov
mov
mov
jns
insl
dec
stc
mul
push
pop
pop
xlat
mov
sub
incl
xchg
jle
aam
or
mov
js
inc
xlat
outsb
lcall
mov
popf
or
pop
adc
dec
insl
scas
cld
pop
dec
rorl
push
dec
mov
pop
xchg
push
pop
push
inc
pop
jne
sbb
movsb
xchg
rclb
popf
xchg
movsl
fidivl
std
fistps
nop
lret
adc
in
sbb
and
or
adc
dec
and
into
jmp
xchg
cs
fcmovne
lcall
call
mov
jmp
jo
xchg
inc
mov
sub
addr16
in
fs
adc
add
scas
test
xor
xchg
sub
cwtl
imul
movsl
or
dec
sbb
add
ret
pop
div
push
dec
cld
lret
ljmp
xchg
sub
cmp
adc
inc
inc
addr16
push
in
mov
ljmp
adc
mov
add
sbb
jb
ds
jno
sbb
or
aad
in
test
pop
xchg
mov
fs
push
icebp
dec
ss
out
ret
sarl
lahf
mov
lahf
jmp
cli
dec
stc
mov
or
push
dec
leave
out
pop
fimuls
push
fistl
ficomps
fucom
adc
sahf
pop
dec
xor
add
das
fimuls
xchg
rolb
stc
mov
mov
add
andl
cmp
es
sub
jo
pop
out
inc
out
inc
in
sub
push
lret
inc
xchg
mov
xchg
add
shll
lahf
cmp
add
fcomp
cld
mov
cmp
lods
call
shll
pop
je
movsb
call
dec
xchg
or
dec
stos
iret
hlt
in
dec
dec
cs
inc
call
sbb
ja
inc
cmpsl
fisttpll
loopne
fisttps
idivb
dec
sarl
xchg
stc
ret
in
out
cvttps2pi
fsubs
dec
mov
fnstcw
add
ljmp
mov
loopne
shrl
mov
jns
mov
and
jno
xchg
jne
sub
ficomps
cmpsl
movsb
fwait
add
jnp
mov
push
inc
divb
test
fiadds
jmp
cmp
inc
mov
sbb
hlt
xor
xchg
outsb
mov
xor
sub
addr16
fwait
inc
aas
hlt
push
sub
add
cwtl
xchg
daa
sbb
adc
sub
cltd
or
xor
dec
aas
mov
push
shrl
hlt
pop
leave
adc
lds
mov
shrl
push
or
ror
inc
push
inc
mov
cmp
sti
out
cld
stos
dec
jle
pop
cmp
dec
pop
je
jle
or
clc
daa
jo
out
int
mov
fstl
xor
add
sbb
add
lcall
mov
xlat
fstps
push
add
mov
dec
outsb
push
lods
push
pop
jecxz
mov
add
inc
test
mov
xor
test
jp
inc
and
iret
jl
int3
push
inc
mull
adc
jmp
sbb
inc
sub
aas
mov
repnz
jl
xchg
into
push
nop
clc
repnz
add
or
cmp
xchg
mov
push
dec
rorl
jae
lds
ja
push
sbb
or
jecxz
push
pop
mov
dec
cs
aam
cmp
aam
lret
cmpsb
pop
dec
jnp
mov
sbb
imul
mov
xchg
sub
movsl
or
jle
cwtl
test
cwtl
sbb
inc
jne
dec
inc
fsubrp
or
cs
or
mov
movsb
in
aas
mov
or
and
fcos
jle
scas
xchg
mov
dec
aam
mov
cmp
adc
xorb
dec
mov
pop
xchg
ja
lds
push
pop
mov
jmp
push
fs
adc
fs
repnz
cltd
shlb
mov
and
xchg
pop
xchg
cmc
into
pop
push
pop
pushf
in
pop
inc
push
xchg
fs
and
inc
jnp
xchg
and
xor
scas
cwtl
mov
int
movsb
adcl
setns
movsb
ss
aam
mov
stos
inc
mov
insl
xchg
jmp
adc
jnp
lea
xchg
mov
aaa
in
js
aas
imul
lret
and
adc
cmpsl
mov
dec
outsl
rcrb
sbb
xor
mov
pushf
mov
ja,pn
mov
mov
pop
jecxz
icebp
imul
insb
into
popa
insl
dec
lret
fnstsw
dec
test
out
sbb
shrl
and
mov
in
jl
mov
mov
jp
pop
mov
sbb
xchg
mov
daa
jmp
pop
int3
pusha
push
pop
push
shlb
cmp
hlt
out
jae
fadds
sub
lret
adc
dec
mov
dec
pop
inc
adc
ret
pop
imul
lret
ljmp
in
out
xchg
cmc
data16
inc
cmp
inc
mov
mov
push
mov
add
jo
mov
push
dec
insl
add
add
and
clc
rclb
cmp
fistpl
sub
out
pop
mov
and
jp
cwtl
sahf
imul
and
mov
lds
cmpsb
pushf
inc
rclb
push
pop
test
movsb
je
pop
mov
aaa
fstpt
fs
cmp
dec
popf
inc
xor
jae
xchg
pop
push
or
pusha
pop
jbe
out
jns
das
sbb
ja
or
iret
mov
nop
lock
dec
lock
pop
lds
pushf
daa
rol
adcl
mov
sti
and
pop
mov
sbb
lds
movl
cmp
out
shrl
push
push
cmp
pop
mov
add
push
lods
sti
lock
sbb
faddl
jnp
orl
xor
cmp
adc
aaa
daa
xor
inc
xchg
push
inc
lahf
lea
fcoml
mov
push
fcmovbe
adc
dec
in
jb
push
fbstp
subl
mov
ror
popf
dec
lods
jmp
loop
xchg
ror
pusha
dec
cwtl
std
mov
in
mov
pop
push
jg
mov
aas
repnz
add
or
xor
push
jnp
or
or
mov
nop
xor
xchg
cmovno
js
jp
sbb
nop
pop
mov
das
xchg
repnz
lea
push
sub
mov
lds
or
push
sti
shrb
and
out
and
in
cmpsb
mov
in
out
mov
call
add
mov
add
pop
sub
pop
and
aad
stc
das
cmp
push
and
pushf
mov
push
sbb
test
inc
sub
jae
xchg
jecxz
mov
sub
dec
cmpsb
popf
insb
cmp
push
adc
jle
orl
adcb
or
inc
sub
lret
sub
daa
inc
movsb
xchg
hlt
mov
xor
out
rolb
lods
cmp
mov
adc
jno
jle
add
xchg
clc
push
sub
rcl
cmpsb
sbb
add
test
dec
add
lods
addb
add
push
cmpsl
out
adc
sub
rolb
or
adc
rclb
or
mov
lea
cmp
cmp
xchg
inc
call
test
iret
jmp
shll
flds
in
sbb
bound
mov
je
rclb
inc
dec
in
sub
movsb
icebp
inc
inc
mov
push
push
sbb
push
js
jl
inc
xor
sub
fsubrs
xchg
and
push
or
aam
aaa
pushf
jmp
add
insb
sahf
mov
push
gs
push
daa
lea
mov
hlt
lea
aam
mov
xchg
fbld
sbb
stc
testb
jns
inc
cmp
call
subl
lret
loop
fidivrl
mov
or
aam
or
pop
adc
shlb
in
jns
das
xor
iret
mov
add
pop
jo
loope
add
sti
fistpl
aad
adc
leave
loopne
popa
sbb
sahf
xor
jnp
dec
add
inc
sub
fsts
cmpsb
stc
pusha
lds
jmp
cld
mov
stos
ss
add
scas
dec
lods
push
lret
pop
scas
xchg
in
pop
cmp
inc
jbe
sbb
outsl
test
xchg
pop
jmp
pop
xor
pushf
cmp
xor
aad
sahf
popa
jecxz
push
cwtl
xchg
fwait
stos
xchg
dec
fdivs
jle
jno
inc
cmp
xor
cwtl
inc
mov
add
mov
dec
jecxz
mov
les
pop
psubb
inc
sub
and
push
repz
popa
addr16
negl
sbb
in
lret
xor
inc
or
xor
cmpsl
loop
dec
ljmp
push
xchg
jnp
insl
imul
sub
push
and
shr
out
pushf
ss
push
gs
push
stc
push
inc
jb
imul
adc
les
sbb
ret
adc
and
sub
insb
xrelease
xor
enter
bound
jmp
jge
mov
lcall
jl
inc
cltd
hlt
dec
cmc
add
cmp
pop
pop
fs
test
jle
das
out
xor
push
out
loop
cmp
movsb
cli
mov
std
lahf
xchg
mov
leave
js
out
sbb
xor
mov
into
lods
sbb
js
jecxz
rol
stos
and
imul
and
or
sbb
mov
xor
daa
loope
xchg
add
out
testb
push
call
and
out
enter
fs
orl
and
mov
dec
jmp
dec
popf
cli
aam
and
nop
cmpsl
mov
ret
out
int
adc
rol
sub
arpl
push
pop
data16
lods
faddl
mov
repnz
faddl
push
cmpsl
int
push
imul
in
xchg
add
mov
push
dec
repz
sub
imul
or
dec
arpl
leave
fadds
push
insb
cmp
dec
cld
push
mov
imul
push
decb
or
test
inc
inc
lret
or
lds
loope
aas
xchg
or
pushf
fstp
xor
pop
loop
cld
push
leave
mov
dec
xor
test
data16
mov
int3
jle
sub
call
push
jle
dec
frstor
mov
hlt
cs
call
sti
popf
xor
loopne
dec
xchg
mov
sti
mov
mov
inc
mov
push
nop
adc
in
jg
bound
mov
rcrb
jge
mov
jb
jge
orb
icebp
inc
in
stos
adcl
dec
inc
and
test
jo
les
mov
jmp
popa
test
inc
in
loope
mov
sub
cmpsb
and
mov
xor
cld
popf
ljmp
inc
xchg
jae
cmp
test
xchg
shll
roll
xchg
js
bnd
xchg
push
add
lock
mov
int3
out
ljmp
add
inc
xor
aam
xchg
or
loop
dec
push
or
lahf
mov
testb
jae
inc
rol
lret
cmpsl
repnz
xor
bnd
cmp
ret
and
mov
xor
aam
dec
mov
out
jnp
insb
stc
bnd
inc
cmp
daa
and
jo
mov
or
outsl
xor
cmc
xchg
ss
hlt
andl
cmpsb
or
xorb
nop
xchg
inc
daa
in
das
push
mov
push
ror
adc
int3
mov
push
mov
daa
out
arpl
xorl
sahf
movsl
int
xchg
mov
or
fiadds
js
cmp
fsts
and
pop
jg
jb
push
fistpl
std
or
dec
inc
inc
mov
inc
je
mov
in
lcall
call
js
rolb
xchg
xor
out
push
in
mov
call
je
outsl
mov
ret
and
adc
rorb
mov
pusha
sbb
lcall
push
outsb
xor
xchg
add
sbb
cwtl
mov
test
aad
dec
fs
ljmp
arpl
roll
lcall
iret
cmp
mov
jne
xor
mov
enter
jecxz
mov
frstor
inc
popf
popf
outsb
xor
es
out
stc
dec
scas
cmpsb
sub
pushf
and
lods
add
inc
lds
jl
arpl
dec
leave
mov
mov
mov
or
push
mov
rclb
xchg
xchg
inc
fldl
mov
sbb
pop
pop
stc
mov
rcrl
cld
stc
ret
movb
fwait
popa
mov
sbb
jnp
orb
mov
dec
popl
mov
dec
adc
inc
inc
ficoms
xlat
pop
pop
loop
mov
xor
leave
dec
pop
lcall
lret
sbb
repz
jns
add
cmpsb
je
sub
xor
jb
jmp
sbb
in
mov
scas
fcomi
add
dec
cmc
repnz
test
in
test
xor
lahf
ds
jg
or
cld
pop
and
jns
inc
sub
hlt
push
add
data16
aam
lds
cmp
sbb
jno
adc
fdivs
pop
xchg
push
in
loop
aaa
xor
popf
ficompl
xor
lcall
add
adc
sub
dec
aad
push
imul
xor
roll
sub
in
push
insl
lds
data16
icebp
xchg
movsl
adc
in
ss
neg
or
pop
lods
outsb
push
pop
adc
push
jnp
bound
shlb
fsubrl
sub
sub
cli
stos
mov
xor
rorl
and
roll
fs
jge
dec
sti
xchg
inc
loope
and
mov
mov
jbe
cli
std
lcall
pop
jo
cmp
dec
nop
lock
mov
adc
mov
or
mov
pop
test
outsb
andb
bound
pop
lds
fcomps
and
bnd
sbb
xchg
or
pop
sbb
jae
jnp
xchg
mov
out
jnp
dec
pop
rclb
xor
xchg
add
pop
or
loope
popf
mov
mov
push
dec
rcrl
xchg
jecxz
cmc
adc
addl
sub
pop
lods
div
aad
adc
or
out
pop
loop
popf
dec
ss
pusha
into
psubd
scas
sbb
dec
aas
or
in
fwait
inc
repnz
cmp
stos
ss
adc
push
pop
xchg
push
jne
in
mov
popf
gs
aas
inc
out
dec
in
xchg
xor
nop
add
addb
push
iret
subb
loope
repnz
leave
adc
shl
bound
jbe
in
nop
pusha
push
jmp
sbb
fcmovne
aas
stos
dec
movsb
aaa
loope
xlat
sub
jl
pushf
lret
js
add
aad
int3
xchg
add
mov
dec
mov
insl
sub
xchg
dec
pop
jb
js
inc
cmp
or
cli
into
sbb
push
mov
mov
mov
jp
adc
sti
push
neg
fmuls
xchg
push
cmc
out
pop
shll
clc
pop
pop
je
enter
mov
cmpsl
xchg
cmp
adc
fsubl
movsl
xchg
cs
lret
in
pop
cmp
imul
aas
dec
lds
xor
sbbl
out
xchg
inc
sbb
out
mov
fnstenv
out
push
pop
test
push
push
sbb
sub
jl
pop
inc
sbbb
push
out
rcll
and
sar
sbb
sarb
pop
rorb
and
movsw
mov
fs
popf
sarl
test
repnz
mov
daa
lods
pop
dec
int
mov
scas
leave
mov
xchg
cld
cld
push
jbe
cs
in
ret
ljmp
sub
cmp
movups
lock
sub
je
push
imul
and
mov
fld
arpl
std
ja
pusha
xor
ja
lcall
dec
out
lret
adc
or
lahf
test
jmp
inc
xchg
sub
sub
ficompl
dec
inc
pop
mov
jae
jae
dec
sahf
sarl
mov
xchg
cs
add
cld
mov
push
scas
icebp
mov
popf
pop
outsb
repz
js
lcall
and
mov
shlb
cmp
or
js
addr16
dec
pop
xchg
fimuls
ret
xchg
cld
rcrb
jl
loope
mov
or
mov
sbb
call
mov
loope
ljmp
or
push
adc
pop
pop
popa
xor
lock
xchg
xchg
negl
popa
sbb
fimull
mov
js
mov
adc
dec
xchg
imul
lea
push
xor
and
dec
sub
cmovl
movl
out
repz
data16
out
and
jge
lds
mov
xchg
movsb
in
pop
adc
jb
cmp
mov
test
test
pop
mov
xchg
stos
out
adc
nop
cli
sahf
imul
add
cmp
loope
add
scas
xchg
cld
mov
lods
mov
aaa
popf
jbe
or
ja
jo
ss
mov
popa
in
cmp
adc
jge
shrb
lock
jmp
pop
cmpxchg
mov
lahf
dec
sbb
add
test
jg
xor
lods
cld
sar
add
xchg
sbb
push
pavgw
nop
cmp
jne
jae
sahf
mov
xor
mov
call
cltd
push
mov
dec
clc
jl
sbb
fbstp
pop
cmp
test
insl
iret
fiaddl
aaa
jp
or
sbb
loop
cmp
cld
mov
jecxz
add
test
aam
test
popa
jno
sub
int3
imul
push
sub
clc
fwait
jno
xchg
imul
repz
jge
adc
push
lahf
inc
dec
push
aam
int3
pop
hlt
stc
data16
call
and
xchg
aaa
adc
lods
jnp
jge
movsl
pop
daa
sahf
or
mov
inc
lods
jle
faddl
sbb
test
outsb
sahf
cmc
pop
cmp
lret
movsb
incb
fimuls
xchg
inc
adc
outsl
sbb
cmp
and
loope
cwtl
push
sarb
push
and
push
mov
push
mov
or
orl
or
or
and
pop
es
stos
test
test
movsl
and
stos
scas
jecxz
outsl
jle
sub
cld
pop
pop
sub
rorl
cmp
insb
cmp
filds
mov
daa
and
lods
xchg
dec
int3
and
movq
mov
fbstp
inc
in
jno
pop
inc
fiaddl
xchg
xchg
xor
adcb
add
mov
push
or
pusha
mov
imul
cmp
or
xor
and
mov
pusha
sbb
jae
mov
dec
insb
dec
dec
aam
sub
addr16
data16
jl
push
lret
popf
cmpsb
dec
into
or
add
shlb
xor
fdivs
pop
pop
dec
xchg
push
bound
or
inc
mov
lret
and
pop
rolb
outsb
push
jmp
or
sti
jns
popa
insl
mov
jecxz
push
mov
out
cmp
inc
push
jb
cmpsb
orb
ror
mov
xor
mov
mov
xchg
dec
fbstp
cli
ds
or
pop
push
repnz
icebp
addl
shrd
dec
shl
dec
stc
or
out
scas
idiv
add
les
in
mov
cmpsl
pop
stc
leave
addr16
shll
xchg
xor
daa
jo
rorb
dec
xchg
pop
add
ljmp
cmp
das
or
mov
mov
leave
fistl
imul
cmc
fcompl
test
cmc
icebp
shll
aam
dec
xchg
xor
mov
mov
je
xor
add
cmp
cmp
in
clc
icebp
cmpsl
sar
mov
xchg
imul
mov
mov
iret
lret
pop
jo
cmp
pushf
mov
or
stos
test
aam
adc
inc
imul
movsl
pop
in
add
mov
inc
mov
jge
dec
adc
orl
push
fists
lret
loop
sub
mov
aaa
mov
jne
int3
cmp
mov
lcall
and
cmp
sbb
into
das
stos
lea
addr16
mov
adc
aas
bound
xchg
shl
jno
arpl
xchg
add
push
jl
adc
push
jne
jno
and
jp
xor
cmp
aam
ret
arpl
outsl
mov
in
inc
mov
in
cmp
in
shrb
sub
dec
xchg
andl
rorb
outsb
mov
lods
scas
out
pop
addr16
repz
negb
or
push
jnp
inc
in
test
imul
mov
loop
icebp
shrl
mov
push
mull
clc
fistl
cli
loop
mov
pushf
shl
les
dec
push
mov
mov
lcall
mov
or
mov
pop
mov
xchg
das
arpl
jg
add
jg
lock
mov
pop
out
sub
xchg
pop
push
sbb
dec
js
jle
rol
pop
pop
pop
cmp
adc
int
cmpsl
xchg
cs
add
sub
mov
in
or
jb
sbb
outsb
sbb
mov
inc
push
mov
xchg
aaa
mov
test
ja
xor
jmp
lahf
fdivrl
js
inc
add
clc
lods
pusha
ret
out
pop
xchg
mov
push
std
xor
and
xor
lock
pop
insb
xchg
add
test
mov
sahf
cmp
ret
stos
cltd
lods
aas
add
xor
lods
int
adc
ret
pop
lds
dec
lea
insb
int3
shll
dec
xor
or
cwtl
sahf
xor
mov
insb
mov
pop
xchg
fcomps
cli
pop
pop
push
test
dec
aad
push
dec
outsl
pop
aas
xchg
enter
adc
scas
push
push
dec
adcl
cltd
nop
xchg
lds
mov
push
roll
or
and
scas
mov
cmpsl
mov
adc
in
hlt
ret
int
nop
inc
jecxz
nop
pushf
mov
cmc
pop
test
pop
inc
ret
cmp
dec
cmp
sahf
jns
mov
scas
out
jmp
sub
into
cmp
inc
enter
add
fistl
cmpl
iret
adc
jnp
and
testb
cmp
mov
lods
ja
jecxz
cmp
xor
sbb
and
cld
sbb
rcll
inc
sub
js
sub
pop
in
mov
rcll
push
sbb
loope
out
mov
push
sbb
imul
dec
test
xchg
mov
pop
pop
pop
dec
jns
push
mov
arpl
or
adc
fdiv
push
and
clc
repz
and
or
sti
icebp
mov
jnp
or
sub
or
jns
fwait
ds
jg
cmpsl
pop
popf
push
mov
mov
dec
pop
hlt
out
das
xor
xchg
out
divl
testb
sub
push
inc
repnz
imul
lret
lcall
prefetch
pop
lret
aam
add
call
xor
mov
and
shr
vxorps
ret
in
or
jbe
adc
dec
insl
iret
cmc
mov
dec
outsb
decb
push
mov
cmpsl
test
repnz
jge
add
ret
js
add
or
fwait
aas
dec
test
push
mov
push
push
xor
mov
cmp
adc
fdivs
and
stos
sub
pusha
jnp
xor
mov
repnz
xchg
mov
jmp
inc
orl
jbe
inc
dec
add
mov
push
insb
loop
push
dec
xchg
adcl
dec
ficoms
fdivp
jne
inc
sbb
xchg
outsl
daa
inc
cmp
addb
jae
jp
sbb
lea
sbbl
push
pop
fsubr
or
andb
das
mov
inc
xchg
aam
dec
sub
repz
xor
add
cmc
fimuls
inc
popl
outsl
int3
lret
xlat
add
mov
mov
or
fiadds
add
cmp
sbb
loopne
and
rcr
mov
fwait
jnp
xchg
sub
push
fstps
and
xchg
outsb
stc
pop
inc
in
mov
jns
test
dec
jns
outsl
shll
ds
adc
jge
push
sub
and
jg
push
pop
mov
lods
dec
pop
out
pop
jge
pop
imul
test
mov
jae
inc
push
jnp
int
sub
lods
xchg
pop
xchg
sbb
mov
adc
push
addb
xchg
icebp
jns
aaa
popw
push
dec
jno
in
add
test
insl
sub
adc
push
cs
mov
enter
loopne
out
lcall
cld
clc
andl
cmc
dec
lret
out
cmp
inc
lds
sub
mov
sub
sub
sbb
xlat
xchg
mov
mov
test
lret
mov
cmp
int
adc
lcall
std
add
xor
mov
adc
pop
or
leave
outsl
mov
jle
sub
dec
in
mov
aaa
jno
insb
fmull
mov
pop
sbb
scas
and
outsl
test
inc
inc
cmp
jb
fldenv
sti
scas
popf
xor
pop
int
adc
inc
mov
ljmp
lock
fdivrp
jns
cltd
cmp
ss
cmp
fs
scas
in
xchg
mov
sti
test
iret
or
pop
sub
icebp
jae
stos
cld
popa
jae
cmp
xor
ss
inc
xorl
lret
push
cmp
sub
pop
aam
dec
sub
rcl
adc
and
push
mov
jae
iret
adc
push
push
sar
cltd
lcall
lock
adc
cmp
test
and
imul
mov
jns
js
mov
sbb
rorl
in
rcrl
sarl
mov
scas
les
push
jno
jne
jmp
fwait
push
sub
nop
inc
mov
mov
mov
test
push
out
adc
mov
push
push
enter
lahf
loop
int3
and
pop
mov
add
mov
dec
ljmp
stos
pop
pop
sub
adc
aad
pushl
lahf
inc
cwtl
into
ds
in
cmp
outsl
xchg
mov
hlt
fildl
imul
mov
push
cmpl
ss
pushf
bound
dec
fcmovnb
das
mov
inc
subps
mov
out
sbb
jae
push
out
mov
dec
adc
dec
sub
dec
jg
lret
sti
pop
mov
sbb
stc
xchg
xrelease
rcr
fnstcw
or
xchg
sbb
fcomps
sbb
xchg
push
inc
xor
scas
out
push
es
pop
cmp
mov
sub
loop
movsb
aaa
int
outsl
inc
jno
xor
cmp
pop
rclb
cmpsb
inc
or
xchg
stos
shlb
aam
sbb
fildll
mov
and
mov
pushf
leave
scas
nop
add
jmp
test
jae
out
jne
clc
out
lret
outsb
out
mov
xchg
shll
mov
mov
xchg
pop
xor
mov
pusha
mov
aam
xchg
loope
orl
adc
into
mov
dec
addr16
cmpsl
jmp
out
cwtl
fs
mov
test
pop
push
xchg
sub
cld
push
ss
pop
mov
push
add
dec
inc
stos
push
gs
lcall
addb
add
jecxz
icebp
and
lret
cld
dec
gs
dec
dec
les
or
gs
push
mov
pop
mov
mov
out
sbb
jg
xchg
add
sbb
or
or
mov
scas
mov
lea
mov
or
ret
xchg
adc
push
push
mov
test
and
sub
inc
xchg
mov
add
dec
pop
negb
jb
je
popa
rcr
daa
xor
fnop
push
shl
dec
xor
mov
push
repz
push
pop
ret
lods
xchg
add
or
fldcw
mov
jge
mov
and
ljmp
add
dec
ss
cld
mov
mov
mov
dec
jae
jno
rcrb
xchg
mov
sub
push
call
and
ljmp
xor
sahf
in
ds
sub
movsb
mov
xchg
adc
iret
and
jno
pop
sub
cwtl
scas
inc
ret
dec
sbb
sbb
push
jg
push
adc
inc
and
ds
lahf
enter
ja
iret
ljmp
mov
fsubl
popf
arpl
in
movsl
cmpsl
test
enter
or
mov
imul
lods
arpl
repnz
daa
cmp
inc
adc
cmpsl
inc
inc
data16
in
xchg
popl
aam
cld
jne
pop
xchg
ret
sub
pusha
sub
inc
push
mov
sbbl
or
ror
jg
mov
push
iret
lds
in
pusha
imul
jg
mov
mov
xor
test
nop
cld
mov
xchg
push
sub
fsts
and
test
enter
mov
jecxz
insb
pop
pop
imul
ljmp
addr16
rcrl
cmpsb
xchg
xchg
aaa
aam
push
xchg
addr16
popf
out
add
mov
sbb
jnp
push
es
inc
cmp
push
push
outsb
les
sub
or
mov
in
adc
repnz
xchg
pop
jns
out
test
xor
cltd
lock
leave
dec
adc
popa
adc
inc
inc
popa
pop
mov
sub
inc
in
push
lahf
push
push
popf
mov
xor
xor
loop
and
lds
lock
xor
sbb
and
jns
ficoml
jbe
xchg
ss
arpl
fwait
stc
or
outsl
lea
pop
stos
and
xor
inc
dec
xor
je
pop
jg
pop
bnd
call
out
cs
bound
or
mov
and
daa
push
jl
neg
cmc
mov
divb
js
jecxz
call
leave
jnp
mov
dec
lret
push
push
inc
sub
ljmp
in
dec
jmp
jl
sub
mov
jge
mov
sub
ret
aaa
jmp
pop
mul
lea
pop
pop
adc
mov
cmp
fcmovnbe
dec
mov
mov
lds
repnz
pushf
sbb
xchg
pop
mov
fadds
sub
pusha
and
test
add
das
imul
mov
pop
xlat
mov
mov
movsb
sub
movsl
and
jnp
aad
in
neg
negb
fnsave
nop
xchg
sub
and
push
jo
push
in
dec
in
dec
push
sbb
adc
cld
sbb
mov
subl
aad
mov
jp
jle
add
shrl
imul
jle
jno
cli
imul
ds
out
fsts
add
jge
lcall
pop
imul
fcomps
add
jg
mov
ficoml
enter
mov
pop
xchg
lock
mov
cld
call
mov
push
negl
mov
std
std
clc
insl
mov
mov
push
or
pop
les
or
notl
sub
das
jle
xchg
inc
mov
out
or
rcll
lcall
repz
rcrl
popa
popa
cmp
pop
add
sub
inc
aam
or
sbb
adc
test
xorb
test
rcrb
std
iret
mov
cmpsl
inc
cmp
cmp
push
mov
in
lods
ret
fwait
add
mov
pop
sub
repz
or
xchg
inc
ficoms
cmp
sbb
shlb
xlat
mov
and
lds
adc
paddq
mov
sbb
insb
lock
push
arpl
insb
mov
jae
pop
popf
pop
sbb
push
int3
xchg
jge
mov
pop
lea
add
fiaddl
dec
sub
aam
cltd
fs
or
loope
lods
movsl
ret
cmp
sarl
push
xchg
out
in
pop
xor
pop
popa
xchg
ret
jmp
jno
jmp
adc
lock
popf
add
int
fs
adc
inc
sub
flds
leave
jae
push
cwtl
xchg
jnp
rcrb
ljmp
cs
ljmp
cmp
sbb
dec
sbb
xchg
test
cmp
mov
adc
xchg
and
icebp
hlt
mov
das
or
les
adc
adc
cmpsb
aad
sub
jns
dec
cmp
adc
push
xchg
popf
mov
cmc
cmpl
aad
add
arpl
mov
in
cs
loopne
sbb
jne
lock
mov
mov
bound
adc
fadds
rcrb
sbb
roll
sbb
mov
push
mov
cmp
mov
je
inc
cmp
enter
arpl
loopne
cmp
mov
jno
fildl
push
jnp
addr16
inc
mov
cwtl
push
rcr
jo
mov
mov
mov
pop
mov
sub
popa
lret
daa
pop
jns
into
outsl
nop
xchg
dec
test
push
test
push
mov
mov
fstps
xor
xchg
data16
mov
icebp
push
mov
cmc
call
hlt
cmpl
mov
out
in
xor
xor
das
xor
loopne
push
xor
popa
ljmp
test
arpl
fcmovne
popl
fcoml
lcall
dec
cwtl
add
call
int3
hlt
xchg
sbb
test
aam
out
test
or
popa
push
mov
sub
std
pop
stc
pop
inc
ss
daa
fbstp
dec
pop
daa
in
sahf
stc
xor
sub
inc
adc
idivb
pop
scas
lods
data16
push
int
roll
add
sub
dec
inc
pop
lock
pop
aam
clc
dec
cli
stc
mov
xor
cmp
repnz
xchg
push
push
imul
mov
sbb
ja
sbb
das
xor
jae
add
arpl
shrl
inc
dec
add
dec
pop
sbb
pushf
lret
dec
stc
inc
mov
xchg
push
or
xchg
dec
xchg
std
add
xlat
hlt
fnstcw
xor
out
inc
aas
fists
xchg
movsb
inc
add
cmp
bound
lahf
push
rcr
in
jmp
sti
xor
jno
and
cmp
in
aaa
or
ret
push
std
stos
add
xchg
ljmp
fldenv
and
dec
xor
mov
aad
adc
jmp
lea
stos
sub
mov
pusha
or
sbb
or
insl
sbb
jmp
push
adc
or
lds
neg
cld
mov
arpl
scas
jmp
xchg
pop
in
dec
mov
pusha
enter
mov
xlat
iret
dec
adc
lret
xchg
sbb
add
and
lock
add
sti
gs
shld
push
cmc
cmpsl
and
mov
mov
pop
xchg
xor
mov
cmp
push
es
cmp
cli
jb
add
and
push
dec
fst
xor
lods
xchg
mov
mov
cwtl
leave
cmp
sbb
sbb
mov
out
loopne
sbb
enter
loope
shr
fsubrs
out
out
fsubrl
aad
jmp
fmuls
lea
and
std
repz
push
icebp
arpl
xlat
jmp
ret
repz
push
dec
jno
out
arpl
sub
lods
sbb
in
mov
lret
xlat
add
sbb
leave
ja
cmpsb
xchg
cwtl
cmp
lahf
test
js
stc
push
nop
push
jecxz
inc
sub
xor
outsb
adcl
lret
push
scas
jecxz
jle
xorb
repz
scas
jmp
scas
pop
sub
jmp
fwait
xchg
sbb
cmp
sbb
sahf
and
inc
jnp
xchg
add
push
mov
xor
fmul
in
mov
mov
test
mov
fnsave
jne
pop
push
clc
push
adc
and
add
xchg
lds
icebp
dec
loopne
xor
ss
repz
mov
add
sbbl
test
mov
icebp
dec
fstpl
sub
movsl
xor
enter
cmp
sub
or
pop
push
and
mov
jp
lods
mov
xchg
mov
pop
lods
push
mov
cmp
mov
aad
or
gs
fisttps
int3
in
in
jbe
pop
add
rorl
pop
and
lcall
lret
hlt
push
bound
fdivp
mov
addl
ljmp
push
sub
mov
push
inc
out
aad
and
adc
cmpsb
mov
jl
inc
mov
in
adc
jle
out
add
mov
jmp
popa
cmp
add
out
ror
out
int3
inc
jno
push
hlt
and
or
push
jl
jecxz
in
out
hlt
or
stos
movsl
imul
iret
cmovl
movsl
and
idivl
mov
dec
xor
mov
fidivrl
add
mov
js
ja
int3
mov
xchg
ss
iret
xchg
cmc
stc
in
int3
push
adc
lret
cmp
loope
mov
cwtl
sti
add
cltd
jg
insl
xchg
in
mov
or
fisttpll
push
shl
jmp
and
insl
es
movsb
or
jl
jns
scas
mulb
mov
lock
js
jle
push
jecxz
xor
outsl
xchg
xchg
sbb
stc
xchg
fmull
aas
pop
mov
cmp
jge
or
sti
xor
in
xchg
adc
mov
sbb
gs
jecxz
jae
repz
xchg
xlat
dec
fidivrs
mov
add
std
lock
mov
cmp
jg
and
outsl
test
sub
clc
add
inc
decl
cmp
push
push
subl
adc
dec
and
and
mov
pop
mov
mov
dec
jge
dec
outsb
cmp
add
pop
insl
adc
outsb
fstps
xchg
cltd
setne
in
test
sub
test
or
add
mov
in
fcoms
xor
imul
or
adc
in
sbb
imul
cwtl
xchg
xor
pushf
sub
jnp
in
lods
cmp
sub
in
addb
lcall
xor
sbb
and
in
int
sbb
and
xor
ret
cld
fs
pop
cltd
ds
mov
and
xchg
cs
aas
and
add
jecxz
mov
mov
bound
ja
cli
push
loope
pop
and
pop
inc
sbb
inc
ja
fwait
shl
pop
popf
scas
ljmp
stos
loop
lahf
push
mov
popa
outsl
lods
mov
cltd
in
jp
push
mov
inc
xchg
xor
nop
jge
or
push
in
dec
adc
xchg
mov
pop
and
mov
pop
push
or
leave
xor
sub
dec
pop
iret
cs
add
cmp
cmp
push
das
test
pusha
adc
out
push
push
mov
sbb
jge
lds
out
xchg
sbb
movsl
jno
mov
std
out
fsubrs
int
inc
sbb
cmp
dec
lods
xchg
inc
mov
mov
imul
shl
pop
lret
and
popf
out
add
aam
add
nop
and
in
or
or
gs
or
sbb
xchg
mov
inc
jg
and
jno
sbb
test
dec
aad
pop
rol
mov
pop
mov
addl
gs
out
lds
xor
mov
mov
mov
loop
test
lods
dec
mov
dec
sti
subl
ret
fstpl
jge
push
into
jno
les
mov
scas
fwait
cmp
test
or
jmp
fists
in
in
xchg
push
popa
in
loope
addr16
cmpsl
hlt
dec
ljmp
inc
jns
adc
dec
jge
adcl
aad
lea
je
or
movsb
push
nop
push
xchg
and
dec
mov
stc
mov
insl
cmpsl
pop
xchg
cs
mov
aas
lods
lock
lahf
cltd
lods
fistpl
jmp
jbe
repz
mov
js
xchg
fidivs
add
test
mov
aaa
inc
adc
icebp
pushf
jg
or
gs
stos
dec
sarb
and
cwtl
insb
or
faddl
leave
cmp
cmp
out
icebp
in
sub
into
xor
arpl
subl
add
repz
inc
data16
sub
mov
out
call
sub
dec
decl
jle
je
pop
enter
and
rclb
push
enter
pop
xor
cmp
pusha
pop
ret
sub
cli
mov
out
cs
and
mov
jmp
push
incb
ja
pop
lcall
cmp
cmp
rclb
loop
push
jl
jae
leave
jl
movsb
jmp
dec
adc
sbb
inc
icebp
pop
minps
pop
xchg
jbe
rclb
aas
pop
sub
fmul
cwtl
dec
fadds
cld
lret
into
cmp
lcall
xchg
shlb
cli
push
ficomps
xor
sbb
fimuls
jns
call
adc
data16
jecxz
test
lods
adc
ret
ficomps
or
push
cmpsl
cmp
adc
jnp
mov
popf
sbb
cmp
add
loop
scas
xchg
sarl
mov
insl
push
cld
mov
fwait
ret
sbb
dec
dec
pop
push
mov
lock
mov
out
adcl
fs
stos
pop
mov
scas
and
mov
cmp
int3
mov
push
movhps
imul
sub
or
popa
icebp
mov
aad
sbbl
xchg
and
xor
shrb
arpl
push
lret
cmp
mov
cmp
sahf
imul
test
mov
out
leave
aam
rcll
dec
jno
ljmp
rorb
icebp
jne
fnstsw
shlb
xchg
mov
jg
cltd
xchg
repnz
cld
popf
stc
dec
loopne
fcom
mov
imul
xor
add
je
and
arpl
and
fstl
jle
mov
call
clc
add
adc
pop
push
xor
mov
std
leave
fstps
repz
mov
out
mov
mov
movsl
and
cmp
cmp
push
cmp
lahf
add
insb
and
dec
sub
sbb
out
sbb
mov
xor
daa
je
dec
cmpb
addr16
sbb
out
inc
repz
mov
jmp
cs
iret
inc
in
clc
stc
dec
cld
mov
jae
mov
shrl
enter
mov
out
out
call
stos
cli
dec
push
pop
cmp
out
jno
ja
imul
jecxz
icebp
gs
xchg
lea
mov
out
ret
xchg
push
mov
clc
mov
dec
add
jne
inc
xor
fdivrl
std
inc
inc
loopne
add
inc
push
and
adc
das
ss
stc
jge
or
jnp
adc
or
imul
lret
inc
into
xchg
push
mov
mov
inc
std
in
xchg
cmp
xchg
popf
xor
loopne
ja
dec
and
pop
dec
negb
or
add
pop
mov
xchg
xor
mov
pop
adcb
sub
into
enter
adc
cld
jno
int3
imul
or
pop
dec
rclb
in
cmp
das
inc
fsubr
outsb
xchg
mov
loope
cltd
mov
mov
lock
aam
inc
stos
cwtl
sub
xor
pop
test
mov
movsl
jbe
stos
xchg
inc
sub
ret
rclb
in
push
xchg
loop
sub
jmp
inc
lahf
cmpl
cs
pusha
insl
mov
add
cld
mov
ss
mov
xchg
stos
xorl
inc
and
loop
add
aad
xchg
test
sqrtps
and
pop
sahf
jg
lods
xchg
pop
push
test
push
dec
cmp
hlt
xor
pop
mov
les
add
call
in
mov
nop
sbb
inc
movsb
mov
sbb
fdivrs
inc
fwait
lock
dec
mov
mov
or
dec
stos
jno
push
adc
ss
jmp
jge
inc
sbb
sbb
mov
xor
and
mov
add
dec
sub
xchg
or
xchg
lret
or
push
scas
movsl
ss
cld
dec
lods
lds
jb
push
js
sub
ret
jecxz
es
jmp
xchg
repnz
push
sub
mov
push
cmpsl
and
aas
dec
insb
popl
in
xor
pop
lds
sub
out
ss
mov
cmp
adc
sub
mov
push
notl
and
sbb
cmp
xor
int3
and
and
call
push
out
push
imul
outsb
mov
xlat
and
fisubl
ja
or
lret
call
sub
mov
jns
std
and
push
fists
mov
test
ljmp
fwait
into
pop
add
outsl
cld
and
insb
iret
inc
out
scas
negb
scas
mov
jmp
jge
or
out
pop
int
out
std
dec
add
add
sub
cmp
xchg
sahf
or
pusha
pop
push
push
dec
subb
xorl
sbb
push
push
push
sti
cmp
mov
cmp
cs
in
movsb
arpl
sub
fwait
lock
or
outsl
fnstcw
mov
imul
pop
daa
out
test
mov
es
push
ret
jl
mov
push
add
hlt
lock
dec
push
push
dec
ret
lock
inc
int3
or
add
nop
add
insl
fidivs
push
pop
inc
fcomps
cmp
xchg
mov
loope
aam
jo
in
pop
or
mov
mov
ret
stos
sbbb
and
mov
sbb
repnz
xor
cmp
movsl
inc
xor
fwait
dec
daa
out
std
call
sbb
out
jns
loope
sub
or
jo
bound
into
mov
inc
and
sub
push
push
and
stc
lea
ljmp
inc
repnz
cld
push
adc
dec
or
lcall
icebp
gs
adc
sti
jmp
mov
inc
jb
js
iret
mov
insb
xor
fcoms
loop
or
repz
pusha
out
cmp
jmp
repnz
add
cmpl
adc
push
call
out
jb
xchg
aaa
adc
mov
testl
js
aam
stos
out
cld
inc
cwtl
add
ljmp
and
adc
cld
int
lock
mov
in
mov
outsb
mov
movsl
dec
sbb
adc
add
das
pop
in
fisubl
roll
test
jo
mov
mov
push
mov
imul
pop
cmp
push
nop
xchg
xchg
outsb
adcl
sub
out
adc
mov
mov
dec
mull
and
loope
stos
sub
and
mov
les
add
adc
inc
stos
sbb
jl
lds
arpl
jmp
out
inc
jnp
rep
movsb
xchg
sub
aam
loopew
repnz
xchg
jo
sbb
cli
jp
femms
and
and
ret
pop
pop
sbb
cli
xor
ja
rclb
lods
pop
push
jecxz
pop
pusha
jl
rep
adc
cltd
and
pop
data16
push
xor
and
sbb
mov
mov
lods
cmp
xchg
or
sarl
pop
sub
mov
jb
pushf
movsb
addr16
xor
loope
notl
mov
mov
xor
ret
int
jnp
outsb
and
mov
jle
push
push
daa
dec
pop
inc
hlt
push
pop
arpl
xchg
outsl
sbbl
or
mov
clc
ss
icebp
in
insb
shr
insb
mov
lahf
rcl
add
sti
aaa
stos
cmp
jg
add
in
sub
xchg
movsl
loopne
jl
cli
shr
mov
sbb
fyl2xp1
mov
pop
jo
add
jnp
test
cmp
sub
call
mov
dec
es
mov
testl
int3
cwtl
in
inc
outsl
addr16
or
stos
mov
mov
movsb
xchg
xlat
notb
pop
loop
imul
mov
inc
mov
lret
jge
outsb
out
sti
xor
jbe
pop
adc
sahf
mov
das
cs
sbb
fcoms
je
pop
add
div
pop
sbb
xor
add
hlt
loope
enter
adc
inc
test
sub
cmp
pop
push
lsl
insl
daa
je
pop
cmp
fistpll
mov
cmp
stc
out
pop
test
out
mov
cmp
sub
out
ficompl
out
inc
sub
push
pop
mov
push
in
fwait
jo
mov
test
fldl
pop
loop
and
add
adc
jnp
mov
hlt
test
add
pop
testl
js
out
xchg
out
sarb
sbbb
test
xchg
stos
outsl
ret
cmp
cmc
addr16
lock
push
mov
mov
test
jge
pop
stos
and
cmp
mov
aam
add
rorb
mov
mov
xchg
icebp
xchg
popf
mov
cltd
repnz
call
push
ja
push
mov
stc
inc
sbbl
push
movsb
out
mov
cmpsl
mov
aad
inc
dec
sbb
sub
inc
xor
movsl
fsubs
jg
cmc
fdivl
in
dec
adc
inc
je
mov
daa
sub
in
mov
cli
cmp
mov
xchg
or
push
scas
aas
mov
adc
into
jge
xor
pop
cmpsl
dec
or
sbb
adc
test
and
mov
jno
clc
mov
int3
push
fs
mov
aad
rcll
dec
adc
repz
insl
and
mov
int3
xchg
lret
mov
xchg
mov
mov
sbb
mov
sbb
or
movsb
adc
jle
push
cmpsb
popf
sub
sub
scas
mov
mov
cmp
inc
push
pusha
into
les
push
lods
lret
in
movsb
and
cmp
add
imul
cmc
js
in
mov
ret
sub
aad
mov
sbb
nop
hlt
ret
dec
aad
cmp
lret
scas
adc
int3
pop
sub
and
or
sub
in
movsl
aas
pop
and
stos
cltd
out
out
push
jge
and
mov
mov
add
cmp
jns
xor
push
mov
mov
mov
shl
mov
int
mov
scas
popf
test
filds
xchg
cmc
and
std
cwtl
pop
push
ja
call
aaa
es
xor
xchg
ljmp
jnp
sub
mov
mov
scas
fildl
mov
movsb
pop
xor
arpl
repnz
fisttpll
in
push
sub
pop
mov
mov
les
lret
insl
dec
popa
imul
push
xchg
fisttps
dec
mov
cld
xor
and
out
inc
cmpsb
mov
push
cmc
loopne
inc
mov
es
push
fildll
xor
xor
imul
rcrl
lret
pop
lcall
bound
add
mov
cmp
das
cmpsb
cmp
aam
add
test
clc
mov
xchg
sbb
ficoms
and
push
loop
out
pmulhuw
cmp
cwtl
out
bound
mov
mov
lret
inc
mov
scas
mov
sbb
rcr
jp
inc
bound
push
je
xchg
shl
loop
stc
xor
inc
pop
jg
in
inc
xor
push
adc
aad
loope
cmp
inc
shlb
movl
cmpsb
lea
or
fstpl
icebp
xlat
and
and
push
icebp
adc
fs
scas
sahf
mov
outsb
ds
push
cmp
js
inc
ficomps
jns
xlat
cmp
loopne
rcrb
insb
test
xlat
sti
movsb
pusha
jmp
sahf
mov
scas
in
pusha
cli
setp
shlb
mov
imul
ret
xor
or
sahf
inc
js
mov
mov
xor
cmp
mov
dec
addb
inc
cld
adc
xchg
testl
lea
mov
sti
xor
lret
jo
xlat
cmp
xchg
xor
mov
push
insl
mov
xor
push
mov
inc
xchg
js
sub
mov
mov
or
dec
cmpsl
cmp
push
cmp
in
adc
mov
fnsave
repnz
push
or
mov
rorl
dec
mov
mov
inc
xchg
add
push
lods
inc
repz
jnp
rorb
push
jae
lahf
into
adc
push
enter
popa
fisttps
mov
in
divl
mov
add
in
lcall
sbb
lcall
out
imul
push
push
loope
push
add
jg
out
popf
xor
int
and
jge
mov
inc
push
mov
xor
pop
pop
or
dec
test
repnz
xchg
cmc
test
movups
jno
add
mov
outsb
mov
jp
movsb
adc
shll
in
test
cld
sbb
stc
dec
outsb
add
or
je
push
or
sbb
sahf
xor
in
push
cmp
jmp
cs
fcmovu
mov
push
mov
mov
notl
enter
jl
jmp
js
mov
inc
lcall
xor
mov
dec
jbe
dec
cwtl
jl
lret
cmp
leave
xor
dec
sti
pop
jle
sub
sbb
fiaddl
or
mov
pop
add
mov
cwtl
mov
rclb
push
mov
scas
fsubl
movsb
mov
adc
mov
dec
out
push
scas
ljmp
mov
mul
fbld
pop
mov
mov
jle
sbb
clc
pushf
in
stos
insl
icebp
int3
xchg
aaa
cld
or
xchg
and
mov
add
dec
mov
cmp
push
push
pop
cmp
xchg
push
mov
scas
or
repz
cmp
jnp
test
rcl
jecxz
in
xchg
add
pop
xchg
mov
in
hlt
and
adc
in
sub
cltd
in
cli
xchg
lea
inc
mov
cmp
adc
mov
gs
out
inc
push
lods
push
xor
std
cwtl
rclb
push
push
mov
popf
jo
lock
es
cmp
arpl
mov
mov
pushf
sbb
leave
adc
add
or
pushf
dec
test
xor
in
in
call
cli
pop
jno
mov
add
inc
iret
lods
pop
stos
and
xchg
pop
xchg
jnp
data16
pop
scas
mov
daa
jbe
pop
push
mov
add
pop
xor
and
or
jg
jns
lock
inc
sbb
fidivs
out
insb
arpl
push
subl
insb
insb
mov
int3
daa
mov
addr16
push
loope
mov
std
test
shlb
jbe
ja
pop
adc
enter
sti
cmp
std
jnp
or
addr16
push
mov
pop
inc
ret
ret
pop
mov
insb
push
dec
cmp
cmpsl
add
push
aas
sub
push
mov
ficompl
faddp
mov
jmp
ss
adc
rorb
and
rorl
push
jnp
cmpsb
repz
fbstp
sub
aam
mov
pop
fistpl
sbb
icebp
or
pop
push
pop
mov
cmc
adc
add
and
pop
jle
cmp
xchg
daa
pop
jnp
jbe
cmp
push
arpl
cmpsl
hlt
pop
js
movsl
rcrb
cltd
lret
dec
stc
insl
and
mov
xor
fisttps
mov
mov
dec
inc
adc
test
shll
sarl
outsb
mov
xlat
pushf
xchg
inc
mov
outsl
insl
fcoml
adc
push
je
scas
lock
jge
and
ja
xor
jle
sti
loope
adc
loope
cmove
divb
and
dec
scas
lret
ja
aas
mov
push
test
xchg
punpckhdq
pop
and
cwtl
in
and
inc
mov
sub
cmpsb
cmp
mov
dec
mov
fcom
push
rep
lret
dec
dec
sbb
stos
int3
mov
cmp
add
push
xor
daa
push
inc
mov
fnstsw
pop
pop
cli
pop
loopne
rcrl
xlat
cmp
int3
and
in
sbb
or
xchg
push
cwtl
outsl
rcrb
test
pop
int3
push
adcl
mov
jo
out
push
or
pushf
sub
jbe
pop
xorb
leave
jae
mov
dec
add
je
mov
sub
cld
xchg
mov
xorb
js
xchg
xor
cmpsb
pushf
and
data16
test
push
inc
xchg
call
sbb
pop
and
jb
sbb
jne
push
add
loop
xor
jl
and
ss
sub
cltd
inc
int3
cld
ret
movsl
xchg
arpl
xchg
pop
sbb
jbe
push
imul
dec
fisttps
jbe
add
mov
adc
imul
inc
sub
mov
mov
pop
mov
lods
out
rorl
in
test
push
das
mov
xchg
out
in
es
mov
add
jb
pop
cwtl
adc
adc
inc
inc
pop
cmp
and
ficoml
adc
push
adc
jo
sbb
and
ficoml
jge
fwait
sarl
push
dec
call
pop
push
out
xchg
sub
mov
out
inc
popf
push
pop
adc
popf
movsl
fwait
out
lods
mov
out
jge
pop
dec
pop
lret
mov
inc
icebp
int
cmpsl
sbb
iret
jnp
roll
adcl
mov
cli
or
mov
je
cmp
std
mov
mov
into
mov
push
dec
or
int
or
pop
mov
xor
pop
mov
aam
jecxz
xchg
mov
jl
mov
out
loopne
pop
add
mov
pop
loopne
jns
bound
mov
mov
jns
out
lods
jnp
jle
pop
andb
js
push
mov
cmpsl
jg
cmp
shlb
test
js
fs
les
fwait
add
or
aam
jmp
lock
stos
je
xor
inc
dec
daa
aad
out
subl
cltd
mov
or
clc
scas
mov
out
sbb
jno
mov
test
mov
jmp
rolb
push
pop
lea
jle
fsubrl
and
call
mov
aad
rcrb
jp
mov
cmp
mov
mov
push
scas
add
push
push
jl
pop
cmpl
int3
outsb
lret
xlat
mov
shl
in
std
aas
push
pop
adc
mov
xlat
stc
cld
mov
aad
cmpb
clc
inc
sahf
or
inc
sub
jo
xor
jnp
out
add
fldl2e
scas
lret
mov
xor
dec
mov
push
fnstenv
adc
lret
dec
jae
mov
std
cmpsb
stos
adc
into
loop
jnp
jp
enter
fwait
ror
fbstp
popf
cld
mov
pop
sahf
add
inc
xchg
repnz
xor
dec
js
fwait
mov
movsb
call
movsl
xchg
cwtl
fs
je
jl
enter
and
adc
loope
mov
divb
xor
xchg
jne
test
out
rolb
dec
stos
pop
cmp
mov
fisubrs
sti
sub
and
jbe
sarb
push
mov
or
dec
lret
add
adc
xchg
sbb
xor
mov
xchg
sbb
in
jns
push
ds
rcll
cli
ds
sub
dec
jp
aas
push
xor
call
xchg
cmp
hlt
dec
push
ja
mov
jmp
mov
mov
rcrb
mov
pop
inc
cld
call
jle
fs
in
sbb
jns
mov
in
mov
xor
jecxz
std
std
add
or
dec
test
scas
xchg
ret
rcrb
pop
ja
out
jle
stos
je
pop
jg
xor
lods
in
and
inc
jecxz
mov
inc
bound
jb
nop
jns
pop
push
push
std
cmpsl
fnstenv
sub
adc
pop
pop
mov
mov
inc
lods
das
add
stos
push
pop
pop
ljmp
bnd
jecxz
outsl
pusha
add
leave
or
mov
sbb
mul
fcmovb
repnz
push
les
adc
std
jb
pusha
cmp
out
scas
inc
mov
adc
mov
loop
into
sbb
pop
ret
std
mov
adc
shll
lahf
rcll
fsqrt
decl
sub
and
shlb
push
jne
subb
add
jl
arpl
inc
mov
das
lcall
in
sub
mov
mov
xchg
cmp
xor
or
xor
sub
aad
push
test
outsb
jmp
leave
pop
pop
mov
mov
nop
mov
cmp
dec
mov
sahf
jecxz
sbb
fildl
test
lds
les
and
inc
imul
movsl
sub
xchg
dec
fsqrt
subb
fisubrl
out
xchg
lcall
push
push
cmpsl
shlb
icebp
xchg
cmpb
sbb
jl
pushf
ja
lea
cmpsl
and
mov
sbb
movsb
pop
sub
jge
dec
inc
stos
cmpsb
and
repnz
neg
adc
test
roll
add
adc
mull
loop
adc
jb
add
xchg
jge
mov
inc
loope
and
pop
xchg
call
jmp
xor
push
je
lock
arpl
mov
sti
and
sahf
fmul
cmpl
mov
rcrl
stc
sub
pop
out
jge
inc
adc
fld1
push
fsubrp
adc
ret
popf
and
mov
jl
lahf
cmp
outsl
xor
gs
aad
cmp
inc
push
mov
dec
cmp
dec
or
sbb
xsave
and
xchg
std
int
xor
pop
sbb
stos
xor
outsb
ret
sbb
or
es
sbb
loopne
mov
out
pop
ds
fcomps
adc
mov
mov
test
add
out
sbb
sahf
lods
jns
and
xor
dec
cmpsl
and
loope
leave
in
xchg
dec
bnd
mov
or
and
sbb
imul
lahf
ljmp
daa
pusha
dec
fldt
sbb
sbb
mov
aas
dec
push
push
ds
js
jnp
jno
mov
stc
test
into
inc
aad
aad
out
cmpsl
mov
jp
aas
call
outsb
outsl
sub
cmp
sub
sbb
sub
jne
dec
adc
pop
imul
enter
outsb
cli
lahf
test
mov
mov
fisttps
sbb
lods
popf
fcmovnb
fmull
push
fiadds
sbb
fildl
popa
rcll
addr16
adc
mov
push
loopne
cmc
gs
push
int
and
adc
xchg
lret
ret
mov
xchg
add
cmp
mov
icebp
mov
adc
test
inc
int
test
push
adc
xlat
pop
cmp
insb
sub
mov
push
clc
fwait
dec
mov
xchg
mov
sbb
lods
jo
mov
push
xor
das
dec
dec
jmp
movsl
add
mov
in
sbb
mov
and
mov
dec
leave
or
nop
fdivl
jmp
stc
push
push
mov
pop
inc
cmpb
ret
sbbb
imul
mov
lock
loopne
mov
aad
clc
fs
nop
mov
or
xor
out
loope
adc
lds
aaa
fwait
scas
leave
adc
nop
xor
and
test
pop
jae
xchg
jbe
jo
test
dec
mov
push
pop
or
pop
cmp
rcrl
xchg
jp
sub
test
cmc
mov
and
push
pop
xchg
dec
mov
iret
add
imulb
xchg
dec
mov
adc
mov
xor
in
cmp
pop
pop
mov
in
mov
xchg
xchg
dec
lahf
dec
and
cli
fwait
jbe
sbb
push
mov
or
push
or
loope
fnstcw
fwait
adc
mov
pop
lret
push
fs
repz
fadds
or
cmp
loopne
xchg
rclb
or
cmpsb
call
cmp
jne
pop
std
js
mov
or
and
popf
mov
jp
cld
xor
lahf
rcrb
sti
add
pop
mov
scas
xchg
mov
mov
outsl
insb
sub
mov
shrb
mov
mov
add
xchg
lock
test
scas
pop
inc
into
fistpl
gs
lods
subb
adc
and
das
and
dec
ficomps
ret
dec
enter
stc
outsl
fs
popf
xchg
cmp
negb
push
jp
push
dec
or
imul
dec
in
mov
fstpt
cmpsl
fcmovnbe
out
daa
add
lock
pop
loopne
xchg
nop
adc
or
sub
fs
add
mov
mov
and
sbb
sub
dec
ljmp
jp
xchg
push
xchg
fnstsw
mov
das
pop
test
testl
jb
outsl
ret
faddl
jae
push
dec
sbb
cmp
xor
lret
xchg
mov
dec
into
inc
out
jge
in
insl
sbb
mov
lahf
dec
push
or
sub
adc
js
sbb
in
cmp
pop
outsb
dec
fmul
adc
imul
jl
outsb
movsb
xchg
pop
popa
flds
xor
fidivl
mov
cmp
pop
sbb
cmp
cmc
pop
sub
xor
sahf
stos
imul
xor
sub
dec
data16
xchg
mov
push
push
adc
xchg
arpl
cwtl
fcomp
pop
sub
ret
daa
push
sub
xchg
mov
inc
popf
jl
test
mov
pop
xor
fcos
xor
ret
aas
or
cmp
dec
pop
js
or
xchg
lcall
inc
mov
stc
sarl
pop
scas
sarl
arpl
pop
in
xor
mov
daa
cmpsb
mov
mov
cmpsb
call
clc
lods
cwtl
mov
fisttpll
lcall
pop
lods
lahf
loopne
jmp
aad
xor
xor
sbb
mov
lahf
jle
mov
fsubrp
push
mov
pusha
cs
scas
popf
std
inc
mov
stos
mov
push
cwtl
jmp
pushf
stos
int
cwtl
xchg
mov
mov
das
jno
jmp
dec
mov
es
add
ret
test
mov
xlat
mov
push
inc
roll
popf
xchg
cmp
frstpm(287
inc
sbb
mull
test
rcll
cmp
push
inc
xchg
pop
ror
adc
popa
mov
push
andb
push
bound
mov
ja
mov
dec
mov
ljmp
dec
dec
dec
cltd
xor
cli
inc
pop
and
ret
push
push
bound
xor
into
mov
jno
sbb
adc
xlat
pop
jno
outsb
sahf
xor
pop
mov
mov
inc
stc
enter
sarb
int
jp
jl
shl
pop
jbe
lds
push
cld
das
cli
adc
cltd
jp
mov
imulb
insb
ret
out
mov
cld
and
adc
jg
push
jne
ret
push
adc
mov
mov
pop
cmpsb
inc
push
mov
fwait
jmpw
cmp
mov
pop
push
inc
lods
sbb
les
jnp
data16
sub
dec
lods
fldt
jp
push
and
fs
mov
mov
dec
mov
pop
sbb
imul
arpl
push
iret
ds
and
add
mov
test
or
fs
pop
out
pop
sbb
cmpsb
push
loope
xor
pop
or
mov
lret
push
xchg
mov
pop
roll
ret
mov
jl
xlat
xlat
push
mov
mov
clc
xor
push
sbbl
imul
outsb
dec
addb
cmp
dec
ja
xor
in
loop
mov
cmpsb
in
mov
nop
jg
divb
cltd
dec
rclb
and
sub
mov
jnp
xchg
in
xchg
adc
pop
fadds
xlat
mov
sbb
imul
add
das
and
adc
sub
repnz
mov
push
mov
mov
pop
scas
and
lcall
or
fsts
loope
sub
int3
shlb
or
sahf
test
jno
popa
daa
adc
imul
and
and
outsb
xor
leave
jl
fxch
arpl
les
aad
jae
setb
and
jmp
out
fidivrl
mov
lock
sbb
cmp
mov
or
lds
test
cld
push
ffree
in
mov
shl
xchg
add
test
sub
jl
popa
ss
testl
push
leave
loop
mov
pop
sbb
dec
sbb
fs
mov
data16
ja
shrb
push
ret
push
push
adc
jne
or
push
sahf
fcmovbe
fwait
in
pop
outsb
cld
lahf
cld
mov
lret
aas
cwtl
ds
cmc
stos
pop
out
push
mov
lods
cmpsb
aam
ja
into
pop
popa
or
sbb
lods
aam
andps
fisubrl
or
jg
add
cmp
cmp
test
cmpsb
pop
cmpl
cmp
out
aaa
mov
jmp
ss
fildl
dec
jl
jo
pop
insb
xor
jle
in
pop
ljmp
lods
pop
fisubs
dec
inc
fistl
outsb
fstl
test
mov
lods
pop
loope
pop
jmp
lods
push
jp,pn
rolb
sbb
pusha
jo
dec
add
pop
jg
push
mov
and
add
cmp
test
mov
fdivr
add
dec
repz
push
movsb
xchg
xchg
and
cld
out
lahf
inc
lock
jo
imul
ret
adc
mov
test
scas
mov
mov
sar
push
in
adc
popa
and
cmpsl
clc
and
adc
int
das
xchg
inc
jmp
mov
pop
push
sub
and
add
out
sub
and
daa
sti
lea
fstpt
sub
cmp
mov
insb
movsl
gs
aad
jne
shl
add
stc
test
push
cmp
cmp
loop
push
ds
mov
push
incb
fistpl
xor
add
loopne
aad
sti
cmp
ljmp
push
sar
pop
jbe
cs
out
cli
and
sub
test
inc
arpl
ja,pt
push
dec
inc
jp
mov
mov
xor
test
mov
xchg
mov
enter
loopne
add
push
jo
dec
sbb
push
jg
lds
pop
add
inc
xchg
cs
mov
cs
or
inc
push
stc
mov
or
push
fldcw
xchg
dec
inc
fisttpl
std
xchg
int
adc
xchg
pop
sub
push
xor
loop
pop
xchg
outsl
fidivl
or
arpl
push
sub
mov
adc
add
loop
push
call
das
pop
mov
mov
ljmp
in
jle
pop
jl
out
ret
bound
inc
pop
ds
xor
icebp
fists
dec
cmp
fstps
inc
mov
mov
int
cmp
push
mov
icebp
or
jbe
aas
mov
xchg
dec
jno
add
shll
pop
sbb
xchg
pop
decl
sub
int3
rcrl
leave
dec
int3
xchg
adc
push
sbb
mov
adc
or
aas
xchg
adc
aam
std
fiaddl
sbb
jno
arpl
or
or
dec
imulb
fwait
test
sbb
sub
jo
push
mov
xor
pop
shrl
adc
addr16
xchg
cmp
jp
jno
mov
icebp
insl
sahf
ljmp
ja
and
cmp
and
rorl
movl
cmpsl
leave
xlat
sbb
inc
mov
repz
xchg
cld
add
mov
inc
jae
lock
dec
xchg
pushf
in
jp
ja
push
add
and
arpl
xchg
lds
jae
inc
push
inc
sub
cmp
and
in
ret
inc
cmp
push
inc
push
push
mov
and
scas
jecxz
inc
dec
gs
inc
cmp
not
out
pop
push
push
cld
vpsubsw
aad
pusha
stc
mov
rcl
pop
imul
ret
push
scas
div
inc
dec
mov
add
faddl
inc
enter
or
cld
and
or
push
aas
fstp
xchg
add
dec
and
sub
add
mov
shlb
cmp
int3
outsb
add
cmpb
or
sub
out
sub
scas
inc
and
leave
dec
xor
pop
or
mov
mov
out
push
in
outsb
int
or
mov
movsb
ret
mov
cmp
push
jge
shlb
lds
in
iret
test
sbb
test
sub
ljmp
xlat
push
cmp
sbb
fisubrl
add
nop
outsl
cmp
push
or
xlat
push
sub
ds
mov
or
je
sub
push
and
pop
pushf
out
jecxz
push
or
sbb
mov
mov
or
push
xor
xor
push
leave
fmull
lods
inc
outsl
mov
sbb
sbb
xchg
dec
pop
daa
out
dec
cmp
or
aaa
xchg
sar
push
lret
jmp
xchg
dec
loope
push
or
dec
lcall
repnz
fcomip
push
and
out
aas
stos
or
xchg
ret
in
lock
movb
leave
push
cltd
jbe
jle
mov
mov
adc
and
sub
push
iret
sti
or
out
rorl
dec
movl
clc
call
add
pop
sbb
movb
sub
pop
cli
mov
mov
shrb
pop
sbb
stc
lds
sbb
push
in
imul
adc
mov
cmp
mov
or
inc
sbb
cmpsl
orl
call
add
or
pop
cmp
test
adc
jmp
jge
sbb
pop
cwtl
cmp
repnz
aas
xor
cltd
mov
xchg
dec
add
jb
in
faddp
jg
in
lods
outsl
add
stos
movsb
repnz
jl
fidivs
subl
cmp
and
inc
mov
jmp
dec
cld
add
push
push
xchg
dec
mov
adc
int3
loop
loope
dec
cmc
aaa
mov
mov
es
imul
aaa
sub
pushl
sti
cld
ret
es
push
push
add
cltd
push
jnp
int
pavgw
repz
and
lret
mov
es
ljmp
mov
fnstcw
in
test
das
test
enter
and
dec
pop
dec
jle
push
push
test
cmpsl
xchg
les
pushl
rorb
sbbl
iret
dec
dec
and
outsb
add
add
jl
push
dec
cli
test
mov
mov
aam
sub
popa
negl
pop
sti
es
cld
fdiv
push
leave
ficomps
sbb
roll
rcrb
ret
popa
arpl
sbb
cmp
mov
les
cmp
test
cli
jmp
in
dec
scas
jae
jnp
movb
imul
cs
add
test
ds
sbbl
and
out
mov
sub
xchg
in
inc
lods
jns
sarb
mov
mov
mov
shlb
sbb
ss
and
sub
and
dec
stos
je
cmp
cmp
push
jnp
inc
jb
dec
cltd
pop
mov
xor
xor
repnz
hlt
clc
pushl
sub
aam
jmp
addb
testb
roll
int
out
and
je
aas
imul
popf
sbb
orl
inc
sbb
movsl
lock
js
and
xchg
inc
sbb
cmp
lock
add
inc
popf
stos
or
out
cmp
xchg
lcall
cwtl
adc
mov
inc
scas
dec
inc
stc
lods
adc
pop
scas
pop
pop
sbb
fs
xor
jns
dec
pop
in
idivl
sbb
or
push
pop
cmp
mov
sub
imul
pop
mov
push
mov
mov
enter
fisttpl
adc
rorl
or
or
jno
xchg
rclb
es
test
mov
mov
lock
lcall
rclb
xor
cmp
mov
mov
xchg
sbb
test
and
and
ret
les
xchg
cmp
mov
rcr
dec
loope
lret
xorl
scas
xchg
out
and
mov
stos
xor
sbb
or
push
sbb
std
push
out
fisttps
aaa
jmp
pop
jg
lret
stc
pop
or
push
jbe
arpl
xlat
clc
in
jns
cmp
pop
cmp
in
les
cmp
stc
call
testl
sub
cli
neg
jo
or
insb
mov
push
ss
aaa
int3
js
push
mov
cmp
in
xor
outsb
xor
fdivrl
fcmovbe
lret
jmp
fldl
mov
clc
testb
notb
xchg
scas
cltd
ss
stc
adc
inc
mov
sub
fwait
cmp
inc
inc
test
jle
push
xchg
loope
mov
adc
jb
ret
dec
jp
xor
xchg
shlb
test
xor
xor
fsubl
movsl
and
ja
mov
lds
int3
adcb
inc
ficoml
jp
sub
mov
sub
mov
out
sub
xchg
call
fs
dec
mov
testb
add
inc
ror
and
out
mov
sub
cmc
add
inc
andb
mov
mov
mov
insl
xchg
push
adc
mov
sub
test
loope
aad
cmc
jnp
dec
jae
stos
dec
push
ss
rol
or
sbb
mov
xchg
hlt
loopne
call
in
aam
jle
out
lret
int
pop
imul
push
sbb
loop
inc
movsl
insw
inc
or
out
xchg
repz
movsb
xchg
cmp
or
je
shrb
push
cli
adc
mov
sahf
cmp
or
shrb
ss
xchg
pushf
mov
mov
mov
insl
cwtl
test
push
leave
mov
mov
push
aas
pop
adc
mov
add
lods
push
rorl
mov
mov
popf
lcall
jo
gs
out
and
loopne
xor
mov
out
pop
hlt
mov
xor
cld
ffree
pop
pop
and
popa
repnz
xor
jmp
lret
pop
dec
cltd
xchg
test
stc
cmp
lods
and
outsl
imul
jne
cs
pop
sar
jp
js
dec
mov
xchg
cmp
pop
or
or
inc
mov
adc
adc
sahf
pop
stos
xchg
leave
mov
pop
inc
push
xchg
cmp
cltd
mov
push
sahf
scas
jl
mov
mov
sahf
arpl
shll
scas
dec
xchg
imul
ficompl
mov
loope
lock
jno
test
lock
mov
scas
ret
jns
xor
js
ret
das
or
int3
mov
push
and
jns
int
cmpsb
nop
adc
cmp
ss
aas
jb
push
mov
out
mov
ret
sti
xlat
cmp
sahf
imul
les
hlt
mov
dec
mov
outsb
mov
mov
xchg
scas
push
int3
push
pop
in
cmpsl
bound
dec
xchg
cld
pusha
cmp
inc
lds
mov
std
lea
rcll
mov
pushf
pop
cmovb
push
repnz
sbb
jg
mov
fnstsw
hlt
or
mov
test
pushf
movl
pusha
mov
dec
inc
movsl
lret
add
push
js
data16
scas
add
cltd
lods
pop
and
lret
push
push
push
in
inc
xor
sbb
sbb
call
push
adc
sti
enter
insb
pop
dec
cmp
pop
insl
pop
pushf
adc
sti
cs
cs
fldenv
mov
cmpsb
sbb
push
in
xchg
lret
mov
mov
or
cld
sbb
rcr
mov
flds
mov
or
clc
and
mov
test
jp
ds
inc
sub
aas
xor
test
into
mov
lock
icebp
xor
inc
outsl
ret
push
les
pusha
cmp
nop
insb
and
mov
mov
or
pop
cmp
mov
ds
or
lret
cli
sbb
xor
lds
adc
jle
or
loope
inc
mov
aaa
push
outsb
insl
jns,pt
rclb
mov
jo
push
sub
fs
xlat
movsl
jecxz
push
cltd
shll
adc
and
xorl
mov
and
and
dec
repnz
loop
cs
jmp
ficoms
mov
movsb
aad
jmp
mov
addr16
jne
mov
inc
jno
outsl
inc
pop
push
mov
push
push
add
xchg
mov
cmpsb
in
call
xor
mov
js
and
add
movsb
addl
sbb
popa
movb
and
scas
inc
dec
loopne
or
jl
lock
mov
push
push
data16
fnstcw
rclb
pop
jmp
lret
xor
jbe
push
out
fs
imul
cltd
inc
dec
aas
mov
adc
fmul
lds
sub
push
dec
test
rcl
mov
dec
mov
fnstsw
int3
popa
mov
loop
imul
scas
push
daa
mov
add
mov
pop
movsb
xchg
es
addr16
cmp
adc
pusha
mov
call
sarl
mov
sub
and
pop
add
ret
push
fwait
call
loope
adc
inc
std
clc
les
push
lock
adcl
adc
or
cltd
mov
push
jns
loope
popf
sub
add
jecxz
mov
imul
adc
jecxz
xlat
inc
cmpsb
cmp
std
cltd
adc
jnp
sub
xor
call
movsl
shr
imul
cli
cmpsb
ljmp
out
push
lds
pop
xorl
mov
xchg
jecxz
std
mov
mov
je
or
push
pop
mov
pop
sub
shll
test
mulb
cmp
mov
sbb
mov
cmpsl
sti
adc
push
or
mov
sti
push
dec
fnstsw
dec
add
rorl
rcrl
fistl
mul
sub
movb
jnp
and
cmp
aad
sbb
inc
jl
xchg
jp
rorb
iret
add
xchg
es
add
movb
test
sbb
or
bound
lahf
out
inc
inc
in
mov
mov
add
jle
scas
fstps
call
sbb
scas
add
sbb
xchg
add
mov
out
shll
inc
sub
adc
or
inc
or
mov
mov
imul
and
leave
hlt
xchg
mov
xor
pop
sub
jo
out
and
scas
xor
in
and
movsl
punpckhwd
sbbl
and
push
out
repz
adc
into
xchg
jns
je
jp
xchg
jmp
mov
arpl
push
cld
shrl
xor
mov
repz
int3
push
mov
lcall
sub
sbb
mov
mov
repnz
or
or
fcomp
out
lods
repnz
sub
xor
mov
ja
pop
mov
rcrb
pop
jmp
fldl
loopne
cmc
fidivs
jmp
daa
dec
loop
cwtl
push
or
shrb
test
out
xchg
xor
nop
and
dec
out
into
je
push
ja
dec
aas
cli
rorl
fs
cmp
sub
adc
push
fdivs
pop
mulb
xchg
insl
out
pop
push
mov
pop
pop
out
sbb
dec
mov
out
out
pop
jae
push
adcl
inc
xchg
xchg
mov
cmpsb
sti
icebp
or
jno
in
shr
inc
mov
movaps
int
jge
pop
mov
mov
cmpsb
out
xor
ja
add
xor
iret
jbe
jbe
into
push
or
repz
cmpsb
icebp
addr16
or
mov
xchg
stos
cli
nop
aas
in
push
pushl
mov
and
mov
in
cmpsb
loop
lret
inc
daa
or
in
push
nop
dec
push
stos
cmp
jmp
movsb
in
sub
xor
call
push
mov
out
aad
loop
adc
sub
and
lcall
mov
addr16
pop
jb
inc
dec
iret
xchg
sti
sub
push
in
orl
dec
sbb
push
rolb
std
add
mov
jns
int3
cmc
cmpsl
into
inc
xchg
int
and
cmp
mov
mov
ret
fmul
ss
fistps
jge
inc
sub
into
pop
and
aas
sti
mov
mov
rorb
push
push
pop
xchg
cmpb
call
lahf
stos
cwtl
icebp
lret
dec
adc
pop
lcall
inc
inc
add
div
jns
enter
add
fisubrl
pop
jmp
pop
in
aam
mov
popa
push
lea
pusha
test
xor
jmp
cmc
jae
jg
aam
int
xchg
and
dec
test
shl
push
scas
notb
insb
or
xchg
xlat
lds
adc
cltd
xchg
lea
pop
dec
leave
cld
cmp
bound
cltd
pop
data16
xor
xor
ret
stos
sti
sub
das
xchg
xchg
cmp
data16
into
mov
mov
dec
loope
aam
ficomps
test
mov
std
sti
mov
cmpsb
rcll
daa
xchg
dec
xchg
es
push
adc
push
lea
cltd
xchg
jo
mov
fistl
mov
bound
or
ljmp
push
lret
inc
outsl
xorb
inc
sbb
adc
mov
adc
xor
xor
mov
ror
xor
lea
cmp
adc
or
dec
cmp
xchg
loope
lds
sub
fsubp
mov
dec
mov
dec
aaa
cld
xor
das
pop
xorb
push
or
test
add
mov
in
add
inc
das
fists
cmp
cmp
jg
lds
aaa
add
pop
out
push
lret
push
movsl
pusha
xlat
mov
add
push
loope
push
push
sahf
dec
out
out
repz
in
xor
sub
roll
cmpsb
cmp
adc
mov
sbb
stc
pop
ficomps
iret
imul
xor
push
jae
int3
mov
into
sbb
push
mov
fs
cltd
sub
jle
std
repnz
inc
pop
mov
pusha
add
cltd
std
out
hlt
pushf
mov
mov
dec
push
mov
and
mov
add
lret
cli
or
mov
in
inc
mov
xor
pop
dec
fidivs
sbb
scas
sub
in
jecxz
testb
sahf
xchg
lods
xchg
jmp
mov
sbb
loopne
leave
rclb
inc
dec
mov
pop
nop
addr16
mov
cmpsb
insl
mov
aam
orb
mov
bound
xchg
xchg
pop
imul
or
int3
mov
out
xchg
add
ret
jl
jnp
je
int3
mov
xor
test
push
sbb
mov
lods
inc
pushf
mov
mov
inc
or
sbb
cmp
xor
out
das
jge
fstp
push
insl
scas
jo
xchg
popf
fisubs
and
cmp
loop
add
fstpt
sub
xor
mov
movsl
int3
pop
cmpsl
mov
cwtl
xchg
push
ss
adc
push
pop
ljmp
imul
pop
cmc
inc
inc
jo
dec
or
and
xor
and
mov
ret
jae
jo
int
les
sbb
shlb
mov
xor
movsl
hlt
enter
pusha
sti
adc
divl
sub
hlt
mov
filds
cmp
leave
inc
aam
xor
scas
sub
mov
xchg
and
arpl
iret
push
mov
cli
orb
sbb
out
mov
les
pop
cltd
mov
xor
cmc
push
lods
les
pop
mov
cmpsl
stos
cs
jns
mov
out
ret
repz
call
push
jb
movsb
xlat
xor
sti
jmp
hlt
xlat
mov
imul
imul
mov
pusha
aad
add
or
and
jbe
pop
pop
sub
cmp
js
bound
cmp
mov
test
jmp
mov
sub
imul
and
add
or
mov
push
dec
mov
push
cs
jp
clc
insl
adc
xor
jo
or
add
aas
add
push
sbb
xchg
and
jmp
xchg
rorb
outsl
stos
out
lods
push
fldenv
inc
in
xchg
jecxz
test
dec
xchg
jge
fcompl
sbb
nop
cmp
xchg
sahf
cmp
xchg
jmp
fsubrp
aas
push
jmp
loope
insl
push
aas
jno
outsb
imul
inc
lock
data16
and
decb
fiaddl
into
test
stos
push
sbb
mov
pop
das
push
mov
mov
push
inc
incb
xchg
mov
cmpsb
adc
out
in
and
add
push
std
clc
xchg
xchg
fs
out
mov
stc
inc
or
add
sub
sub
aaa
scas
xchg
fnstsw
inc
push
mov
cmp
insb
mov
pcmpgtb
dec
push
hlt
dec
mull
in
xlat
pop
test
mov
stos
inc
stos
aas
hlt
inc
push
xchg
loop
jo
xor
push
je
push
pop
add
insl
add
test
inc
cmp
xlat
adc
lds
cltd
lea
scas
mov
pop
stos
fwait
dec
clc
xchg
jge
xor
cwtl
cltd
test
out
rcrb
mov
subb
cmpsb
mov
push
shl
outsl
aas
dec
stos
nop
jle
jnp
in
xor
sub
push
arpl
mov
loope
cmp
rorl
pop
dec
cwtl
std
xchg
or
rcrb
adc
mov
movsb
stc
xor
xchg
mov
fs
push
or
lock
pop
sbbl
xchg
fs
or
jno
xchg
inc
add
xchg
cmp
xchg
sahf
test
mov
aad
mov
xor
sbb
orl
and
jp
sub
mov
pushf
xchg
ljmp
outsl
std
stos
js
outsl
leave
mov
stos
jl
jne
sub
les
push
imul
inc
shll
jmp
les
jg
and
ret
pop
das
mov
xor
mov
popf
fstpt
push
test
mov
dec
loope
lret
or
ds
pop
push
test
jo
ds
cmpsb
mov
sub
adc
outsb
push
test
clc
icebp
push
push
mov
jg
or
cltd
shrb
aad
adc
sub
pop
jecxz
dec
sbb
dec
fwait
push
fisttpl
push
movsl
dec
mov
or
push
jne
out
add
dec
or
loop
cmc
mov
ds
pop
clc
adc
fs
scas
pop
arpl
loope
fiaddl
adcb
and
ss
ds
mov
xchg
aaa
push
and
imul
cmp
clc
lods
or
stos
setnp
jp
sub
es
jg
jl
dec
iret
pop
xchg
into
shl
cmc
outsl
adc
in
scas
xchg
or
outsl
xchg
push
pop
daa
mov
ss
jecxz
dec
cmp
cmpsl
lcall
push
xor
xchg
cmpb
cltd
das
or
mov
jg
into
lcall
test
pop
int3
cwtl
fistl
sbb
add
sarl
xlat
pop
test
pop
addr16
loope
lods
jge
ds
aad
fistl
or
sbb
inc
daa
mov
rcrb
push
push
les
push
loopne
aas
dec
dec
enter
or
pop
mov
xor
mov
cmp
mov
and
out
negl
mov
jae
cmp
fdivrl
adc
sahf
leave
imul
js
int
adc
mov
mov
testl
jmp
adc
and
in
jmp
idivl
adc
psllq
xchg
pop
sbb
insb
pushf
xchg
xor
mov
cmp
fsts
adc
cld
std
xchg
clc
mov
inc
cmc
push
jae
and
orl
stc
and
pop
mov
push
clc
in
push
mov
mov
push
std
mov
daa
dec
dec
and
in
fsts
idivl
gs
out
fisttps
hlt
push
aad
shll
sub
lahf
sub
in
push
fwait
mov
shll
fadds
or
out
mov
aas
add
lods
mov
nop
incb
loope
adc
stc
js
xchg
inc
push
push
int3
jmp
and
mov
test
cmp
pop
push
mov
xor
jle
lods
aaa
mov
rol
inc
bound
push
flds
adc
mov
rorl
dec
mov
outsl
cmp
aaa
mov
mov
adc
pop
enter
aad
leave
orl
jnp
stos
xchg
sarl
xor
dec
mov
push
insl
xchg
jno
xor
mov
lcall
sbb
sub
scas
lods
dec
fisubrl
out
inc
inc
negb
fdivp
in
jno
sub
pushf
mov
mov
cmp
inc
out
push
mov
pop
mov
or
add
fcompl
cmp
enter
pop
repnz
imul
pusha
pop
fcomp
jns
stc
inc
sbb
pop
ss
add
push
mov
ja
sub
mov
xor
lea
and
loop
cmpsb
sub
cmp
sbb
pop
xor
jo
xchg
lcall
fidivrs
in
adc
xchg
pop
rorb
pop
cmpb
jmp
aas
xor
lret
xchg
fmull
push
nop
mov
popw
pop
adc
rcrl
pusha
pop
test
std
xchg
mov
mov
push
nop
mov
jl
push
in
adc
push
push
mov
ljmp
jl
cmp
sahf
dec
push
mov
ret
test
cmp
addl
cmp
dec
push
jae
jmp
imul
xchg
mov
jp
adc
sbb
mov
in
arpl
adc
xchg
imul
mov
repz
jp
cmp
cmpsl
jl
scas
cmp
out
dec
mov
pop
dec
jns
xor
mov
pop
push
loopne
lods
sub
scas
sbb
pop
jge
pop
xor
enter
leave
dec
xchg
pop
mov
sub
fnsave
dec
jne
xor
bound
hlt
cltd
mov
adc
ss
out
jmp
add
mov
rcr
adc
mov
cltd
bound
dec
das
cmp
gs
mov
test
aad
sub
leave
push
jb
jge
sub
pop
cmp
out
loopne
out
inc
les
outsb
cmp
and
ja
cmp
cs
pushf
in
das
test
sti
test
outsb
flds
cmp
mov
add
mov
cmp
das
dec
lahf
lahf
hlt
add
cmpsl
aaa
pusha
add
stc
jp
dec
xchg
pop
repnz
jle
insb
sub
inc
cmpsl
rcll
or
shl
jg
lods
xchg
cmp
pop
fstps
aam
out
push
jmp
in
mov
xchg
jns
adc
sahf
insl
inc
hlt
ret
pop
mov
aas
adc
push
vpcmpeqw
fdivs
mov
xchg
mov
pop
add
cwtl
sbb
sbb
nop
mov
stos
xor
lahf
mov
das
notl
dec
add
or
or
call
imul
push
iret
out
jne
insl
mov
mov
mov
xchg
call
and
rolb
jl
lahf
push
in
iret
mov
test
movsb
je
cmc
aaa
popf
xchg
cmpsb
xchg
add
call
pop
jmp
xchg
fcmovnb
jo
icebp
inc
cmp
cs
inc
xor
cli
insb
inc
into
aam
pusha
or
adc
sbb
nop
popf
cltd
rolb
or
mov
inc
mov
cmpsl
cmp
stc
dec
inc
cmp
mov
mov
test
mov
mov
lcall
hlt
test
cmc
mov
nop
sub
push
fcomps
rcll
loopne
add
into
or
loop
add
int
xor
xchg
scas
jo
push
xchg
push
lods
fbstp
daa
jmp
cltd
aaa
xchg
nop
lds
mov
pop
jecxz
adc
cmp
call
mov
adc
clc
outsl
test
imul
ja
mov
mov
sti
call
call
push
insl
rol
lds
add
das
jnp
xor
mov
inc
test
mov
cmp
fisubrs
stos
imul
xchg
mov
xchg
sar
mov
movsb
cwtl
pop
cli
jne
or
mov
or
cmp
inc
jbe
cmpl
aaa
out
nop
int3
xchg
or
fldenv
cmp
adc
stos
cld
mov
mov
scas
push
inc
xchg
test
push
mov
inc
jns
lret
mov
cmc
repz
push
frstor
repnz
dec
data16
adc
fcompl
lock
je
mov
inc
insb
and
and
sub
xchg
xchg
add
outsb
fcmovnbe
pop
add
jnp
jge
lcall
clc
push
repz
aas
mov
js
add
mov
testl
cmp
not
and
call
mov
imul
adc
arpl
fs
push
mov
or
xchg
mov
sub
setle
popa
mov
mov
ds
popf
add
mov
pusha
jno
loop
inc
sub
mov
or
dec
fnstenv
pop
rol
push
aam
xchg
push
xchg
add
cmp
adcl
rorl
push
sbb
scas
sbb
call
vpackuswb
xor
jmp
adc
scas
sbb
ljmp
cmc
in
jmp
push
pop
mov
cmp
std
addr16
and
mov
xorb
cmp
imul
frstor
mov
xlat
bswap
movsb
pop
sbb
xor
mov
jne
xchg
jns
pop
scas
icebp
incl
shll
ja
pushf
loope
sbb
test
xor
arpl
imul
push
mov
pop
pop
pop
stos
adc
lahf
into
dec
in
sub
xor
sub
sar
das
fisttpll
ja
or
mov
mov
jge
jg
out
adc
or
or
repnz
lahf
and
xchg
std
add
push
sub
pop
lods
addr16
mov
cmp
dec
mov
push
xor
jno
xor
outsl
mov
jnp
pop
les
repnz
mov
mov
daa
xor
cmc
rcll
stos
cltd
or
xor
fsubrs
iret
cmpsl
stos
test
pusha
gs
sbb
xor
jle
in
mov
sbb
sti
push
jnp
add
mov
fbld
or
or
shl
or
sbb
test
fnstsw
xor
shll
mov
in
and
inc
insb
test
and
dec
mov
add
cmpsb
call
pop
jecxz
fisttps
mov
lods
inc
jae
std
inc
hlt
sub
adc
fisubrs
xor
sbb
push
mov
mov
add
add
int
mov
cmpb
repnz
out
dec
and
add
clc
dec
std
pop
stos
sbb
inc
loope
xor
add
pop
mov
and
stc
push
gs
mov
push
adc
test
jbe
pop
or
fildll
outsl
outsb
repnz
jo
js
cltd
xchg
das
cmp
inc
jle
dec
push
add
mov
jg
sub
push
jp
add
jne
out
xchg
arpl
jns
dec
aam
add
test
pop
mov
mov
je
mov
cmc
push
popf
mov
sub
add
out
add
in
repnz
pushf
jl
mov
call
leave
clc
push
fistpl
loope
stc
sub
sbb
cmp
dec
movsl
cmp
sbb
mov
ret
test
ret
xchg
mov
sub
sbb
repz
pop
fprem1
sub
push
add
sbb
sub
dec
inc
xor
cmc
pop
mov
push
mov
xchg
jnp
cmp
repz
add
xor
or
jle
sub
les
sub
in
jecxz
insb
jne
and
addr16
or
dec
test
mov
mov
test
lahf
fs
push
cmp
int3
xchg
stos
mov
push
add
loop
jge
hlt
inc
adcb
or
adc
gs
xchg
jb
ss
pop
rorb
psllq
lcall
mov
pop
ljmp
aam
rcrb
addb
mov
std
dec
cs
sbbl
mov
insl
js
pop
dec
icebp
loopne
mov
cmp
pop
jb
cmp
fldt
mov
push
rclb
xor
dec
and
outsl
out
pop
add
scas
add
mov
or
cmpsb
lods
mov
insb
or
xchg
mov
lds
dec
push
add
fdiv
jl
pusha
mov
push
jp
inc
adc
ja
js
test
mov
xor
xor
cmp
pop
insb
insb
pop
push
pop
repz
sub
jmp
push
push
ficoml
iret
sbb
xlat
jnp
int3
or
xchg
sbb
gs
arpl
jle
dec
je
jmp
out
pop
cld
add
sub
hlt
jl
pop
mov
mov
aad
in
xchg
add
repz
cmpsb
cmp
pusha
push
add
mov
out
dec
lret
data16
cmp
and
cli
out
mov
add
jg
push
lods
dec
sbb
lcall
xchg
arpl
fildl
xchg
cmp
roll
cmp
out
jns
push
jg
stos
push
and
lock
jo
stos
cwtl
cs
jno
jl
and
cmp
or
mov
sbb
ss
push
and
imul
push
and
mov
lret
xchg
fnstsw
adc
rolb
fcomps
xchg
inc
repz
repnz
mov
in
push
pop
addb
mov
mov
or
pusha
sti
mov
test
clc
popf
dec
jb
mov
xlat
dec
ror
adc
nop
les
movsb
xchg
jnp
add
mov
jbe
stc
or
jne
push
or
jne,pt
jne
dec
fildll
mov
dec
and
and
pop
arpl
cmp
fs
pop
cmp
vprotw
dec
mov
xchg
ror
mov
mov
cs
jmp
gs
cld
jns
adc
inc
mov
mov
stos
iret
test
pop
iret
adc
insl
mov
shlb
es
in
dec
jl
push
mov
mov
rcrb
or
out
idivl
scas
sub
pop
jl
subb
pop
popa
mov
inc
stos
lcall
aaa
cmp
movsb
pushf
or
aad
mov
mov
lret
das
push
sub
popf
push
call
adc
xor
cmp
push
insb
xchg
int3
sarb
clc
sahf
mov
je
cwtl
ret
mov
lahf
ss
jl
push
pop
ja
dec
lods
ljmp
sub
movsl
lds
sub
pop
mov
rcr
sahf
iret
pushl
add
ret
addl
ljmp
iret
push
fadd
add
xchg
inc
loop
jbe
out
push
push
xchg
sbb
movsl
fistl
pushf
push
cmp
jbe
in
loope
iret
ret
mov
aas
fstl
pop
xchg
push
mov
fwait
lods
push
push
dec
imul
xor
sarb
bound
push
test
fdivl
adc
inc
and
sub
xchg
cmpl
xchg
jo
pop
bound
mov
and
movsl
pusha
mov
repz
sbb
push
push
stc
adc
nop
loopne
inc
lea
push
lea
cmp
xchg
push
adc
fdivs
popa
out
pop
push
dec
adc
pop
movsl
mov
xchg
adc
sarb
fidivs
inc
mov
inc
mov
adc
inc
lcall
stos
repz
adc
adc
stc
jnp
imul
out
ret
push
out
or
push
in
inc
dec
pop
push
pop
sahf
andb
fbld
mov
adc
push
or
cmpsl
sahf
xchg
fwait
js
aam
mov
mov
cld
in
mov
nop
out
push
outsb
pop
mov
movsb
xor
adc
out
ljmp
mov
dec
jge
jmp
pop
mov
jg
aad
pop
mov
sbb
inc
xor
sub
iret
testl
loope
lcall
push
pop
es
mov
dec
test
sub
aam
gs
pop
pop
lahf
mov
fiadds
and
jmp
xchg
jge
add
or
ljmp
mov
les
test
cwtl
xor
mov
cmp
and
movsl
and
inc
jmp
out
push
sbb
les
adc
mov
sbb
add
pop
cmp
std
dec
pop
decl
leave
pop
clc
fistpll
std
or
sub
les
rcrl
data16
scas
xor
jl
outsl
add
cltd
ret
mov
mov
lds
fdivr
mov
push
add
mov
dec
cwtl
fcomi
scas
cwtl
dec
xchg
lds
pop
sbb
repz
sub
movsb
sub
in
fs
xchg
or
pop
pop
clc
mov
fisubs
stc
cmp
push
gs
sbb
popf
fldl
mov
sbb
outsb
jmp
add
ljmp
jg
mov
xor
test
adc
repnz
insl
sub
push
lcall
or
pop
pop
add
add
repz
sbb
nop
mov
cmp
inc
lcall
pushf
pop
cmp
loope
inc
popa
fsubs
jmp
bound
hlt
jae
loope
adc
xchg
imul
cmp
adc
and
mov
cmp
mov
pop
xor
jb
ds
addr16
xchg
movsl
into
push
lcall
sbb
popa
pop
repnz
stos
test
in
cmp
xor
add
pusha
push
in
repz
push
sahf
ljmp
int3
mov
mov
jl
mov
and
mov
dec
mov
into
mov
lea
push
cmc
out
jno
fnstsw
stos
jb
pop
repz
call
loopne
add
and
push
mov
jnp
push
xchg
push
mov
mov
sub
xchg
fcompl
pusha
and
xchg
iret
sub
adc
xor
push
lds
lea
inc
dec
enter
ror
xorb
faddp
xchg
fidivrs
push
ret
pop
or
cmpsl
add
sbb
jne
and
mov
cmpsl
xchg
pop
pop
pop
js
inc
es
sbb
mov
add
movsl
aaa
test
dec
mov
stos
outsl
cmp
add
sub
addb
je
mov
pop
mov
mov
out
sbb
je
fistpll
jg
cmp
repnz
pushf
or
xchg
fcomps
jns
jne
mov
and
std
mov
mov
es
iret
iret
and
xor
rcr
or
xor
enter
push
mov
cltd
outsl
dec
test
stc
shll
into
xchg
daa
xchg
jne
scas
sahf
push
lret
xchg
out
xchg
scas
xor
push
jnp
enter
and
pushf
int3
js
rcl
stos
gs
push
sahf
fdivrl
sub
lahf
xchg
jl
fisttpll
mov
push
mov
or
xchg
cli
add
movsl
into
sub
gs
sbb
xor
cmp
or
aam
inc
push
bound
jno
out
ljmp
mov
aad
push
mov
cltd
movsl
adc
rdpmc
test
jo
cmpsb
cltd
sbb
mov
add
adc
out
js
in
scas
outsb
add
cld
lods
dec
mov
push
xchg
icebp
in
cmc
je
xchg
out
imul
popa
mov
bnd
pop
pop
aad
fcompl
ljmp
iret
mov
data16
les
mov
aas
mov
shrl
repnz
inc
ret
cmpsl
pusha
sbb
xchg
dec
push
mov
push
jo
cli
push
or
sti
lock
cwtl
or
packuswb
imul
sbb
cmpsl
inc
cmp
rcll
das
lock
nop
pusha
add
cmp
push
and
dec
lret
push
add
cmp
dec
mov
mov
mov
test
hlt
push
jmp
fwait
mov
test
jo
or
cltd
es
dec
rorb
popa
push
or
pop
popa
stos
ficoms
stos
scas
int
aad
test
hlt
cmp
into
setae
call
or
loope
repnz
shlb
mov
cs
test
jb
pop
das
push
add
mov
shlb
adcb
xor
xlat
mov
xor
mov
lret
pop
xchg
push
call
push
lcall
pop
out
mov
inc
out
cmp
cmpsl
iret
rcll
jbe
add
or
fninit
xor
xchg
in
dec
int
cmp
iret
cwtl
add
or
jl
lcall
cld
inc
test
call
mov
mov
mov
mov
outsl
imul
cmpsl
xchg
das
cld
test
cltd
jnp
or
mov
adc
std
xor
inc
add
pop
dec
mov
test
push
mov
lea
test
aam
add
mov
sub
outsl
dec
adc
xchg
dec
les
push
xor
pop
fsubl
imul
cmp
dec
lret
xchg
lahf
push
push
push
or
xchg
nop
or
iret
add
pop
arpl
mov
dec
loope
aad
and
mov
rclb
shlb
js
pushf
lock
push
repz
mov
sbbb
or
jg
push
pop
inc
fsubrl
insb
mov
jnp
cmpsl
aas
jbe
xor
sbb
jnp
je
ja
jo
adc
xor
ja
jecxz
hlt
push
icebp
ds
or
loopne
mov
cld
and
ljmp
popf
inc
iret
jbe
push
in
push
jmp
mov
xorl
outsl
out
ds
xor
dec
mov
aad
pop
jg
pusha
iret
mov
mov
xor
je
mov
pop
insl
je
lcall
adc
add
lret
test
pushf
mov
pop
jbe
mov
aam
xor
arpl
dec
fadd
ss
jmp
outsb
and
in
shrl
pop
je
fldcw
in
jbe
addb
and
cmpsb
add
subb
leave
mov
mov
pusha
add
jmp
add
iret
adc
lods
or
addr16
sbb
imul
cmpsb
mov
cmp
fistpl
sbb
bound
add
jns
and
popa
insb
cmp
loop
add
test
or
imul
das
mov
sub
add
stos
or
jbe
loopne
dec
xchg
pop
aad
in
jl
das
call
loope
cmc
mov
lods
je
fsubr
dec
mov
cltd
imul
push
jae
aas
leave
push
sti
push
pop
sub
aam
adc
fmuls
pop
add
jg
jo
and
xor
mov
aad
imul
lods
sbb
pusha
sbb
jge
insb
sub
jg
mov
lea
sub
xchg
ja
call
in
jno
or
mov
pop
cli
in
inc
cs
sahf
cmpsb
jns
xor
sub
pop
xchg
aas
aad
movhps
and
pusha
mov
and
jle
mov
sahf
dec
fstl
sub
pop
dec
daa
xchg
fwait
outsl
call
sbb
dec
leave
cwtl
push
xor
push
adc
dec
icebp
mov
into
or
adc
and
cld
inc
sub
leave
push
pop
cmp
movsl
cmp
inc
sbbb
aad
pop
out
stc
pusha
das
cwtl
xchg
jge
fwait
lahf
jecxz
jmp
push
in
int
mov
mov
ja
sbb
push
mov
aam
popa
loope
ja
adc
fnstenv
sbb
divb
inc
jne,pt
js
ffree
push
maxps
lcall
lahf
ss
fstps
sti
xchg
stc
cld
test
das
lock
shl
xchg
sub
inc
push
and
inc
inc
mov
adc
inc
out
gs
icebp
xor
mov
jle
sti
pop
lret
inc
test
inc
cli
mov
sub
sub
ficoms
dec
sahf
scas
mov
dec
mov
ret
lock
jp
lcall
mov
mov
xor
xchg
push
push
in
ja
iret
and
clc
scas
inc
or
movsl
mov
cmp
jne
add
dec
ret
inc
xlat
jmp
xor
pop
and
mov
cs
and
dec
call
pop
xchg
hlt
or
popf
cmpsb
inc
sbb
nop
cmp
cltd
stos
sub
lods
mov
in
jmp
sbb
popa
pop
inc
std
sbb
jnp
icebp
decb
adc
loopne
orl
push
jb
test
inc
sbb
inc
fisttpl
add
pusha
roll
dec
push
paddb
popa
push
inc
stc
hlt
sbb
lahf
mov
jb
pop
cmp
add
sbb
sub
out
push
sbb
mov
inc
in
int3
mov
lret
sub
shll
cwtl
push
cmc
inc
repz
stc
fs
data16
and
pop
loopne
pop
xchg
std
xchg
dec
cld
mov
mov
fwait
cmp
leave
sti
lcall
xor
pop
iret
xchg
push
iret
pop
arpl
sarl
gs
cwtl
lcall
fisttps
sti
stos
je
mov
sbb
cwtl
stos
arpl
dec
shrb
int
clc
pop
sub
jns
fwait
xor
mov
les
mov
mov
mov
sub
and
cmp
inc
outsb
iret
jge
push
xchg
push
lret
outsl
loopne
jecxz
push
das
pop
jecxz
lods
das
sbb
and
xchg
in
sub
loope
fiadds
xchg
sbb
sbb
cs
insl
sub
insl
inc
fsts
ss
ljmp
rol
jns
jno
dec
cld
pop
daa
push
bound
inc
xchg
mov
stc
roll
jp
cld
sub
push
clc
ret
mov
adc
lea
lods
cmpsl
fs
imull
rolb
mov
push
inc
cmp
movsl
or
mov
std
test
jle
orb
out
iret
cmpsb
enter
sub
cmp
movsl
cld
jbe
into
push
xchg
incl
nop
push
cmpsl
notl
cltd
sti
inc
xchg
enter
out
dec
fistps
shl
dec
out
pop
push
cmp
incb
inc
cmp
inc
pusha
pop
sub
and
adc
xor
leave
imul
push
mov
pop
scas
in
loope
sbb
loopne
xor
lret
popa
sbb
cli
in
stc
pop
mov
xchg
sub
xorl
stos
in
mov
mov
jle
inc
aad
jle
daa
mov
sub
mov
addr16
xor
sahf
and
or
pop
out
fdivl
dec
repnz
sub
push
dec
mov
jge
sbb
jbe
and
arpl
push
dec
gs
adc
pop
inc
and
dec
push
mov
fistps
mov
shll
loop
xchg
in
or
and
xchg
ret
stos
dec
cmc
fs
and
shlb
jae
cmp
ret
mov
in
xor
cmp
xor
shl
mov
dec
dec
bound
adc
xlat
adc
repnz
int3
sbb
vmaxpd
sbb
inc
sub
and
dec
lods
or
iret
pop
cmpsl
xor
jle
loopne
mov
pop
cmc
insl
fs
push
mov
fnsave
xor
sub
ficoml
pop
jmp
xchg
xchg
mov
repnz
or
fnstenv
or
insl
and
rorb
cmp
je
xlat
xorl
lods
add
xor
aam
cmp
inc
clc
xor
adc
add
andl
jle
cmp
movsb
mov
jge
and
dec
push
or
sbb
mov
jge
jmp
data16
or
fs
jno
dec
call
lret
pop
jmp
cmp
mov
and
icebp
stos
mov
jo
je
sub
sub
fsubs
fbstp
cmp
and
pop
add
cmp
cmpsl
push
pop
pop
pop
jl
fidivrl
mov
push
and
nop
sbb
into
inc
adc
xchg
or
shrl
pop
mov
add
bound
mov
sbb
dec
aas
sub
push
jle
pop
dec
je
and
or
jbe
xor
inc
outsl
sbb
iret
in
bound
das
sbb
xchg
shl
xorb
into
and
cmp
rclb
call
jge
addr16
fmull
mov
in
in
bound
lds
jne
mov
pop
pushf
jecxz
or
jl
cmp
and
leave
ret
in
push
lahf
fildll
adc
packuswb
pop
mov
int3
imul
jmp
test
dec
sbb
mov
push
bound
jo
test
mov
sbb
fisubrs
push
movsb
push
jb
cs
mov
push
sarb
or
cld
push
jecxz
loope
lea
lock
jmp
xchg
and
fildl
dec
pop
scas
test
jecxz
or
push
lods
adc
enter
xchg
jbe
xchg
cmpsb
or
hlt
cltd
xor
bnd
inc
outsb
dec
and
or
out
test
pop
movsl
cmp
pop
cmp
mov
ljmp
cs
pop
std
jo
push
sub
test
mov
insb
mov
lret
mov
mov
pushf
leave
dec
xchg
movsl
mov
test
mov
les
loop
sub
movsl
popf
cmpsb
push
push
jns
jo
ja
xchg
mov
dec
push
popf
or
es
jb
lods
ret
cmp
and
outsb
aam
push
mov
notb
adc
dec
sub
sti
cmp
dec
sbb
adc
add
mov
mov
lcall
loopne
ja
imulb
lcall
sbb
stos
inc
or
add
sbb
mov
or
js
push
cmp
inc
xor
ret
adc
call
xor
adc
xchg
fldl
fldcw
scas
jp
loop
push
dec
or
dec
flds
or
jae
test
cmp
push
hlt
shll
xchg
pop
enter
cmc
add
cltd
xor
cmpsb
inc
xor
sarl
roll
and
xchg
cltd
jo
inc
popa
mov
adc
testl
int
outsb
xlat
lret
lds
xor
lods
mov
or
push
mov
jns
sub
pushl
cmpsl
nop
push
mov
test
je
mov
mov
push
std
movsb
inc
add
mov
fs
sbb
adc
cmpb
push
jo
mov
mov
shll
adc
gs
lahf
sbb
add
ret
mov
mov
ss
push
sti
pop
jecxz
mov
dec
int3
lret
daa
test
out
xor
push
fcoml
push
inc
mov
pop
sub
dec
pop
cmp
pop
xor
pop
arpl
fstpl
imul
cmpsb
dec
jle
movsb
imul
lret
xchg
push
fdivrs
mov
aas
mov
outsl
stos
push
push
dec
iret
call
jns
inc
hlt
daa
push
sub
dec
xchg
iret
mov
mov
jmp
mov
xor
sysexit
clc
movsl
into
add
add
cltd
mov
sub
es
xor
neg
test
mov
loopne
jo
push
lods
outsb
sub
call
test
out
push
enter
sbb
repz
iret
jae
shll
mov
ret
leave
out
add
mov
ds
shl
mov
jo
push
and
inc
popf
push
lcall
rcl
sub
lahf
push
xchg
sub
inc
js
xor
iret
fcmovu
sub
sarb
in
inc
imul
test
or
in
nop
repnz
lds
and
lods
loopne
testl
jge
xchg
in
cmc
xchg
or
adc
xor
mov
scas
pop
repz
push
xor
mov
stos
cmp
jno
or
jne
imul
jns
xor
loop
add
mov
aas
inc
pop
ljmp
or
in
add
and
in
out
xchg
in
adc
nop
and
cwtl
jl
imul
adc
enter
popa
lcall
xorb
sahf
scas
aaa
and
negl
insb
mov
jecxz
add
dec
jnp
je
fimull
mov
mov
or
add
dec
adc
inc
mov
ret
add
arpl
pop
rcl
sbb
popa
inc
add
xchg
xor
lahf
xor
es
mov
fidivrs
inc
push
sahf
cli
insl
mov
pop
dec
jnp
push
sti
arpl
out
sbb
add
in
add
xchg
loop
and
jl
mov
notl
dec
xor
xchg
dec
ret
jp
sub
aad
js
dec
pop
popa
lahf
sub
xchg
xor
daa
or
test
mov
xchg
mov
pop
sti
enter
jmp
out
test
aaa
inc
rolb
dec
mov
and
or
mov
insb
cld
test
cmc
negb
notl
adc
xchg
ret
mov
mov
cmc
sbb
sub
mov
cmpsl
sub
cmp
xor
fisubl
and
popf
mov
mov
andl
jne
pop
testb
insb
stos
je
mov
xorb
test
fimuls
inc
and
ds
int
inc
cmp
or
inc
stos
push
rcl
jecxz
out
rcr
inc
lds
icebp
push
mov
inc
loopne
out
ljmp
dec
push
adc
in
mov
add
cmp
popf
mov
es
test
fadds
push
inc
inc
jmp
je
shl
xor
and
loop
ds
aad
xchg
scas
jns
sub
push
inc
sti
sub
lods
inc
dec
dec
sbb
fidivl
mov
loop
scas
f2xm1
xchg
pop
and
push
sub
dec
lds
adc
cltd
rclb
ficompl
mov
into
call
xor
out
sub
pop
or
jb
cmp
push
add
outsl
sub
pop
mov
test
out
cmp
or
xchg
mov
pause
adc
add
mov
mov
mov
xchg
and
test
sbb
sbb
mov
and
pop
addr16
sub
aam
and
mov
cmpsl
mov
cli
stos
aam
push
inc
popf
dec
cmp
aas
pop
pushf
ret
shl
outsb
xor
leave
loop
jne
jae
test
or
and
mov
push
add
jg
adc
mov
sbb
rcrb
std
dec
dec
cmc
aam
xor
cmpb
outsb
jno
mov
imul
xchg
fimull
jecxz
pop
iret
in
add
out
cmp
lcall
mov
out
sti
lcall
inc
lcall
rcrb
mov
adc
cmpsb
scas
pop
sub
xchg
push
jmp
and
jmp
test
outsl
xorb
sbb
pop
dec
fnstcw
mov
test
imulb
dec
lods
mov
dec
jg
jmp
call
push
in
adc
cmc
cld
cmpb
hlt
or
mov
sti
into
inc
and
push
shll
or
lahf
fcomps
adcl
nop
xor
sbb
mov
dec
pop
cmp
into
xor
out
jge
ss
pop
inc
cmp
cmp
mov
fcomps
dec
inc
sahf
subl
or
mov
xchg
pop
cmp
and
out
pusha
int3
out
xchg
xchg
inc
dec
adc
test
push
repz
daa
xchg
inc
cmp
cltd
mov
sbb
imul
outsb
mov
cmpsl
mov
or
testb
sti
aaa
mov
andl
mov
adc
xor
cwtl
cmpsb
rorb
jne
and
jo
mov
jmp
sbb
xchg
mov
dec
lcall
inc
mov
in
and
push
call
xchg
dec
in
jp
pusha
imul
push
fs
leave
push
mov
in
mov
movsl
mov
add
scas
nop
iret
icebp
aaa
jbe
push
mov
push
push
ljmp
dec
and
ret
cmp
js
shl
andl
scas
dec
mov
cmp
std
stos
jmp
hlt
mov
mov
xor
sbb
movsl
inc
jne
mov
mov
popf
lds
fsubs
push
es
iret
xchg
popf
roll
xchg
add
repz
xor
pop
or
inc
sub
jno
cwtl
aam
addb
mov
ja
sbb
lods
dec
outsb
sbb
fdivrs
pop
jmp
dec
sbb
mov
imul
xchg
jae
jne
mov
adc
xlat
lock
dec
les
pop
lahf
test
add
enter
cmp
mov
adc
add
mov
movb
insb
xor
add
mov
jns
push
int3
data16
outsl
jmp
push
in
sbbl
sbb
add
test
mov
aaa
cli
xor
mov
stc
and
stos
jmp
mov
pop
mov
pop
fildl
mov
out
mov
push
rcrl
adc
test
sub
pop
pushf
cmp
fistl
or
int3
std
dec
sti
sub
scas
or
inc
in
jnp
decb
fwait
cmpsb
jo
cmc
push
scas
pop
or
cwtl
cmp
popf
or
lret
rcr
adc
xorb
loop
sbb
lcall
inc
mov
jmp
popf
daa
pop
mov
enter
les
mov
leave
gs
aas
outsb
jo
xchg
jnp
mov
and
xor
xlat
or
cli
in
and
xlat
xchg
mov
test
sub
rep
inc
js
stos
push
xor
rcrb
jnp
ret
sbb
fwait
loope
in
int
ja
movsb
dec
add
mov
lods
dec
and
push
push
movsb
xchg
mov
shll
fimuls
push
and
rclb
and
mov
adc
popa
repnz
mov
stc
mov
sbbb
enter
scas
push
incb
sbb
loopne
mov
stos
xor
xor
int3
out
test
scas
xchg
push
cmp
dec
cmp
mov
sbb
sub
adcb
push
ja
hlt
sub
adc
pushf
push
lret
arpl
xchg
cmc
imul
pop
jo
add
pop
inc
fisubs
call
push
pop
sbb
cmc
push
xor
int
sahf
jb
add
jbe
push
add
push
mov
adc
test
mov
xor
mov
push
sub
mov
fadds
stos
in
outsb
pop
xchg
arpl
dec
rclb
adc
inc
icebp
arpl
out
mov
mov
and
shl
lret
stos
cs
cmpsl
jmp
xor
mov
xor
mov
cs
stc
into
ret
jo
inc
mov
inc
scas
pop
test
jnp
std
popf
cmc
xor
jns
sub
sub
mov
clc
sahf
mov
pusha
fildl
movsb
and
nop
jecxz
dec
fld1
inc
dec
lret
lds
dec
adc
imul
xchg
cld
push
lea
pop
inc
pop
addr16
loop
sbb
add
data16
mov
jmp
push
idiv
ds
pop
adc
adc
shr
in
stos
sti
pop
pop
je
clc
dec
mov
daa
in
add
dec
pop
addr16
dec
lods
push
or
leave
xchg
dec
lahf
cmp
imul
test
mov
in
insl
cmp
lahf
loope
ljmp
push
jp
cmc
loopne
bound
std
dec
adc
fdivrs
repz
neg
xchg
negb
inc
cmp
add
shr
mov
sbb
and
repz
out
inc
and
or
xor
insb
sbb
or
mov
fidivrs
js
push
inc
test
push
mov
cltd
xor
imul
push
dec
mov
mov
test
fmull
xchg
lret
push
repz
jl
jae
lcall
bswap
jns
xor
orl
xchg
mov
sbb
loop
mov
in
out
adc
stos
dec
jbe
fldenv
or
push
push
xor
nop
test
jae
icebp
mov
xchg
inc
mov
push
sub
dec
add
lea
cmp
jmp
lds
mov
mov
fnsave
hlt
repnz
lahf
movsl
inc
cwtl
inc
ss
sub
aas
sub
add
aas
add
xchg
inc
cmc
xor
fdivr
inc
out
mov
cmc
or
mov
subb
xor
rorb
xchg
leave
jge
xchg
fdiv
in
sub
fwait
jg
lret
mov
adc
rcrl
ds
iret
mov
xchg
dec
loop
fildll
xor
dec
aad
dec
sahf
aas
or
jae
aaa
mov
cltd
lahf
or
add
mov
das
and
loop
push
xor
mov
repnz
test
cmp
fistl
xor
push
mov
lret
outsl
scas
rolb
xchg
push
xchg
lods
cli
scas
rcrl
xchg
mov
loop
mov
in
aam
xchg
pop
jecxz
in
and
push
push
sbb
add
outsl
enter
pusha
push
lods
rcll
dec
xchg
cs
mov
inc
add
mov
inc
insb
outsb
add
pop
push
xor
iret
and
jmp
dec
mov
movsb
scas
and
pop
jmp
or
jae
lods
mul
adc
dec
ret
jb
aas
pop
in
ds
dec
call
sahf
ret
jae
mov
cmpsl
mov
push
cli
mov
subl
push
out
xchg
xchg
jg
jo
mov
scas
icebp
fsts
sub
insl
aas
mov
cmp
rcrl
lahf
lahf
dec
in
lds
aam
sub
sbb
jo
fadds
xor
fmull
pop
rolb
pop
mov
jb
popf
bound
lcall
aas
push
adc
das
ja
lods
inc
rcr
inc
ss
and
in
imul
sub
push
popf
insl
ja
cmp
pop
jl
sbb
addl
sarb
lahf
jp
aad
push
outsl
mov
adc
pop
out
std
jno
xchg
popa
imul
inc
and
mov
pusha
xor
mov
or
dec
cmp
inc
sbb
pop
xlat
repnz
pop
push
and
inc
idivl
xchg
jmp
inc
cmc
movsb
sub
jecxz
inc
cmp
scas
push
xor
lods
sbb
push
fs
xchg
mov
pop
add
sub
xchg
call
and
cmpsl
dec
mov
add
dec
loop
inc
or
mov
cwtl
jnp
scas
andb
int
scas
add
cmp
fstl
pusha
fcmovnu
mov
jb
cmpsb
daa
pop
shrl
xchg
outsb
je
fs
add
insl
sahf
jecxz
cmpsb
outsl
cmpsb
sarb
cmp
mov
add
push
jl
xchg
insl
inc
adc
xor
mov
and
xchg
add
ja
and
mov
mov
and
sbb
push
ss
sub
pop
xchg
fnstsw
stos
ffree
xor
aam
jne
popa
mov
cltd
call
dec
inc
xchg
push
sbb
orl
or
into
pushf
xchg
int3
mov
outsb
mov
xchg
int
call
xchg
test
lret
push
mov
ja
push
testl
xor
jp
adc
cs
jne
cmpsl
cs
inc
jg
mov
mov
aad
js
xchg
jbe
xchg
arpl
in
mov
fidivrl
sti
gs
lds
xor
push
sub
pop
fstps
xlat
mov
pop
movntps
mov
aaa
enter
sub
fs
out
pop
lds
dec
push
xchg
fldenv
inc
pusha
popa
imul
sub
cmp
jge
cmpsb
mov
inc
scas
loop
nop
push
ret
jp,pt
ljmp
sub
cmp
aam
mov
js
repnz
repnz
jno
pop
push
add
xor
push
mov
pop
or
sub
popf
ss
lret
or
adc
dec
mov
sub
imul
cs
cmp
scas
pop
xchg
cmp
cmpsl
xor
sbb
or
cmpl
sub
sub
cmp
pop
push
sub
inc
mov
nop
mov
dec
sahf
and
jne
pop
mov
movsl
aam
add
dec
push
out
xbegin
fsubrp
inc
movsb
dec
pop
dec
aaa
mov
fistl
mov
push
repz
push
hlt
mov
movsb
aam
sbbb
pop
and
sub
fidivl
xor
cmpsl
inc
lea
movsb
sarb
out
rcl
sub
jp
xchg
mov
dec
out
and
xchg
and
fiadds
inc
xchg
insb
mov
inc
les
jecxz
jmp
cltd
inc
addr16
mov
rclb
push
lret
mov
frstor
fldl
std
les
aam
mov
roll
xchg
int
ss
movntq
out
icebp
std
mov
adc
outsb
ja
iret
or
sub
mov
adc
addr16
dec
pop
loope
into
inc
xchg
and
xor
xchg
xchg
and
addl
jle
xor
xchg
test
and
jp
add
sbb
pop
pop
push
fistpll
loopne
mov
jns
shlb
icebp
add
fstps
in
xor
inc
jnp
cmpsl
call
sbb
or
mov
test
sbb
movsb
icebp
clc
and
inc
cmp
fmul
or
xchg
imulb
outsl
in
nop
xor
xor
pusha
and
cmp
or
lahf
in
mov
lahf
ja
dec
outsl
jne
sbb
sub
jp
movaps
lret
sar
mov
pop
pop
sub
mov
enter
scas
test
add
ja
jg
repnz
or
test
loopne
out
inc
data16
sahf
mov
xor
mov
ds
push
push
outsb
push
jmp
popa
shrl
push
stos
scas
dec
js
es
xchg
sahf
es
mov
fdivrl
decb
shrl
mov
mov
lea
push
push
push
je
cli
aam
pusha
pop
push
insb
insb
mov
jge
add
aaa
mov
int
push
testl
cmc
jne
imulb
ds
pusha
cmp
inc
out
vandnps
jb
icebp
mov
push
cmp
adc
ljmp
shrl
jne
dec
push
jl
mul
jne
xor
xchg
ljmp
test
ret
cltd
fs
xor
push
lock
cmp
pop
cmp
sub
in
enter
xlat
xor
mov
flds
enter
mov
lret
add
fsubr
es
adc
int
pop
call
repnz
stos
jnp
cli
mov
pop
mov
ds
popf
xorl
lret
mov
add
gs
jmp
mov
inc
adc
and
lcall
mov
out
pop
jno
insb
push
sahf
hlt
and
mov
inc
xchg
movsl
mov
push
fistps
fdivrs
pop
loop
adc
ljmp
scas
es
cltd
popf
cwtl
out
pop
clc
inc
adc
xchg
mov
into
ljmp
and
cmp
movsb
cmpsb
gs
or
aad
mov
pusha
fs
cmp
or
icebp
adc
and
pop
push
insb
jb
mov
enter
mov
sbb
stos
xlat
adc
jg
inc
movsb
les
inc
mov
leave
arpl
mov
iret
jg
sbb
xor
out
dec
mov
lcall
lret
repnz
test
push
jmp
mov
ja
sbb
test
test
leave
mov
scas
adcb
int3
outsb
movsb
push
imul
sbb
sbb
bnd
outsb
repnz
mov
bound
push
shl
jle
add
push
push
lret
insb
dec
cmp
cmpsb
testb
cwtl
sbb
sub
ret
and
cltd
jns
sbb
push
add
cld
pop
outsb
lahf
pop
scas
push
fisubs
mov
shl
popa
pop
and
in
inc
lock
push
stos
xchg
ret
out
into
jle
add
lret
sbb
mov
addr16
and
jae
ret
scas
mov
cmc
add
push
test
daa
mov
fldt
repnz
scas
loopne
mov
imul
mov
or
xchg
imul
in
js
imul
mov
std
pop
push
xlat
pop
jge
inc
pop
push
sti
sbb
jns
inc
and
cmp
xchg
mov
jb
dec
dec
shrl
icebp
mov
lea
pop
sub
cmc
test
lea
mov
out
stc
mov
jo
std
pop
and
sbb
in
and
cwtl
push
cld
repz
pop
fiaddl
es
mov
subb
mov
jle
fisttps
sbbl
mov
test
mov
cmp
adc
neg
xchg
fwait
add
jns
leave
xor
jg
xchg
sbb
sbb
outsl
ret
jb
orl
fstpl
and
sbbb
xlat
mov
add
sbb
xchg
mov
inc
insb
adc
inc
pusha
mov
jmp
js
pop
mov
cmp
insl
push
xlat
ficoms
addl
out
mov
out
sahf
daa
sarl
mov
mov
shll
leave
divl
mov
sub
rcrb
out
dec
cmpl
sbbl
dec
push
clc
add
lahf
pop
inc
int
aam
imul
pop
pop
push
cmp
jl
divb
sarl
pop
inc
scas
sbb
pop
push
push
sti
fcomp
add
dec
push
sub
adc
jns
add
mov
cld
sub
xor
jnp
fwait
mov
scas
and
imul
jo
shll
mov
aad
mov
or
test
xor
jmp
fistpll
sti
sub
jl
bnd
xchg
enter
sbb
iret
push
mov
icebp
mov
mov
imul
dec
js
jle
lea
xlat
mov
sbb
xlat
flds
mov
mov
xchg
lods
mov
cwtl
xor
mov
stos
aaa
leave
xlat
shrb
subl
ret
mov
cltd
push
dec
jns
cmp
les
stos
push
lcall
sub
inc
push
fdivrp
icebp
pop
test
mov
push
loopne
mov
cwtl
lods
aaa
sbb
cmp
sbb
lcall
mov
inc
bnd
sub
lds
xor
pop
inc
xchg
mov
mov
popa
js
iret
xor
or
and
decl
rcl
dec
das
add
pop
loop
cmp
fwait
inc
loope
sbb
and
adc
rcrl
push
ljmp
fwait
ret
js
mov
push
or
insb
push
cli
xchg
repz
dec
sub
aad
adcl
or
mov
stos
mov
jle
mov
mov
mov
hlt
icebp
fnstenv
hlt
mov
mull
lret
pop
fldpi
or
mov
pop
jp
sbbl
jg
divl
xchg
pop
orl
sub
adc
pop
notl
xor
arpl
popa
xor
cli
sub
pop
xor
js
pop
cmc
mov
and
jbe
inc
mov
xorb
lahf
les
lahf
jg
xchg
push
mov
sar
mov
pusha
setno
in
xor
push
daa
in
mov
cmpl
mov
in
mov
sbb
aad
aad
movsl
xchg
out
fistl
mov
mov
cltd
clc
inc
imul
pop
or
dec
mov
stos
dec
fdiv
pop
xchg
push
popf
pop
fsubs
or
dec
and
mov
insb
rorb
addr16
nop
ds
mov
aaa
pop
mov
nop
out
jnp
les
imul
les
mov
fistpll
cmp
sub
mov
les
clc
cmp
xchg
adc
push
pop
inc
insb
dec
insb
pop
leave
xor
mov
inc
test
les
outsb
decb
add
out
sbb
xor
jae
aam
xchg
lods
and
lahf
jle
adcb
dec
js
mov
adc
adc
xchg
and
ds
push
pop
jmp
lock
or
mov
test
ret
cmc
jne
adc
jne
mov
mov
pop
cltd
stc
pop
clc
dec
rclb
pop
mov
jle
outsl
int3
sbb
sahf
in
in
inc
roll
scas
inc
push
adc
push
repnz
jge
outsl
imul
mov
sub
int3
out
divb
push
loope
lahf
int
xchg
mov
mov
sbbb
std
pop
hlt
call
inc
movsl
lods
les
cld
lods
sub
inc
ficoml
xchg
stos
cvttps2pi
fistpll
cmp
cltd
push
and
ds
push
lret
nop
in
mov
mov
outsl
and
out
sub
mov
adc
inc
mov
insb
sbb
mov
xor
shl
jle
adc
xor
sub
pop
dec
repz
repnz
sti
fimuls
ret
xor
mov
fwait
and
movsl
dec
es
jno
sub
incl
loopne
adcb
mov
pop
sbb
shll
pop
xchg
add
les
cmc
pushf
orb
lahf
push
jp
insb
rcll
cli
add
in
fwait
movsbl
in
ljmp
or
push
add
pop
ds
xchg
or
popf
pop
call
lret
inc
repz
xchg
cli
and
push
mov
inc
adc
in
in
mov
cmp
movsl
out
pushf
movsl
nop
clc
out
inc
mov
out
sbbl
je
mov
inc
push
orb
daa
cmp
int
adc
and
movl
pusha
mov
sar
mov
gs
sbb
mov
mov
lea
ss
xchg
push
cmpsb
pop
pop
mov
inc
clc
dec
fcoml
repnz
test
into
in
pop
sti
sahf
test
out
orl
and
insl
adc
movsl
sub
xchg
insb
sarb
movsb
pop
int3
or
adc
loope
pop
mov
inc
test
xchg
inc
fmuls
jae
or
rolb
and
pop
and
into
jbe
lods
ds
jg
add
rcrb
mov
cmp
and
adc
xor
push
cs
sbb
notl
in
bound
cmp
dec
push
lcall
cmp
push
sub
addr16
mov
out
test
aas
shr
mov
insb
insl
mov
mov
movsb
outsl
lcall
hlt
dec
popa
push
jae
mov
pop
xlat
cmpl
les
xchg
lretw
xor
pop
inc
pop
mov
bound
inc
push
sbb
sarl
ret
shll
mov
out
in
aam
dec
push
mov
std
add
loopne
into
add
jns
inc
jbe
movups
mov
clc
push
enter
jb
pusha
je
jle
push
iret
scas
daa
push
stos
mov
ret
std
fldenv
mov
push
add
ror
push
mov
test
repnz
push
ljmp
test
stos
stos
and
cmp
jbe
xor
or
lahf
xor
jno
out
scas
inc
jmp
and
xchg
mov
xchg
out
insl
and
mov
imul
xor
pop
push
or
test
arpl
pop
add
cmp
xchg
das
adc
inc
add
xor
xor
sbb
mov
aam
pop
scas
mov
dec
repnz
mov
mov
cmp
aad
test
adc
nop
cmp
insb
std
push
test
dec
cmp
dec
dec
rorl
outsl
dec
inc
pusha
scas
xor
and
ret
insl
push
fdivrs
pop
jge
lds
jp
dec
fwait
sbb
test
pusha
adc
rorl
xchg
jmp
mov
imulb
jecxz
das
insb
testl
divb
ja
ljmp
xorl
jp
in
ret
lea
sbb
xor
adc
enter
outsb
cmp
jecxz
lods
add
fdivrl
push
pop
cmp
jg
mov
jbe
cmp
outsb
ss
cmp
fdivs
sti
popf
mov
out
in
and
stc
imul
mov
imulb
dec
in
and
add
pop
inc
and
mov
add
outsl
or
or
jecxz
jp
movsl
fwait
mov
jmp
das
xlat
popf
dec
dec
cld
insl
cmp
cmp
fidivrl
jp
sbb
das
iret
jb
push
in
lods
push
pop
bound
sbb
nop
lods
mov
mov
mov
sbb
scas
xchg
cvtps2pd
mov
sub
xchg
or
jmp
sahf
mov
int
mov
add
inc
cmp
mov
pop
loop,pt
arpl
pop
testb
push
or
ror
jbe
and
mov
jno
cmpsb
or
outsl
fwait
inc
pop
jae
repz
in
aam
mov
dec
mov
dec
dec
xchg
addb
push
mulb
cmp
lock
in
into
push
cwtl
aaa
push
hlt
mov
rcll
mov
into
or
xor
sub
mov
fstl
xchg
sbb
push
add
jne
paddb
in
fwait
clc
xor
mov
jmp
cmp
adcb
flds
add
sahf
loope
wrmsr
fidivrs
pusha
mov
sbb
ret
pop
pop
pop
xchg
out
nop
or
and
sbb
adc
xchg
cwtl
pushf
sbb
pop
push
push
mov
cltd
daa
cmp
popa
inc
aaa
sti
add
push
xor
out
adc
mov
insb
inc
cmp
icebp
cmp
adc
cmp
daa
sbb
enter
in
jns
lods
adcl
lock
cmp
cli
sbb
mov
pop
sub
pop
in
jbe
pusha
xor
push
ss
pop
pop
test
pop
std
push
lcall
jno
faddp
mov
pop
pop
clc
divl
jb
jg
add
hlt
mov
mov
xchg
sbb
cmp
repz
cld
adc
lret
jge
fidivrs
adc
sub
lea
push
xlat
add
cmp
adc
clc
inc
popl
cmp
dec
and
mov
cltd
fsts
iret
cltd
jne
cmp
xor
sub
divps
popf
daa
adc
xorb
xchg
xor
or
jg
aam
lahf
mov
add
pop
mov
adc
push
aaa
adc
out
sub
sub
inc
ds
lods
pusha
sbb
sbb
mov
adc
pop
jne
leave
push
mov
arpl
and
xlat
aam
mov
and
cmc
adc
fldcw
cmp
xor
mov
sub
xchg
movb
fistpll
out
sub
pop
adc
xchg
mov
int3
and
loop
pusha
sti
xor
or
mov
fdivl
je
inc
dec
xchg
cmpl
lret
pop
ficoml
iret
jecxz
cwtl
sub
outsb
sbb
ljmp
into
sub
xor
lcall
addr16
and
sub
outsb
jg
cmp
in
inc
data16
adc
sub
xchg
aad
gs
test
mov
les
call
jnp
stos
out
jl
mov
add
push
jge
mov
gs
cld
aad
mov
lods
iret
sub
ds
add
pop
and
dec
mov
mov
insl
sub
jne
pop
pop
pop
push
mov
cmc
popa
iret
pop
enter
addb
dec
je
mov
or
cmp
aas
int3
mov
in
or
inc
or
fistps
data16
hlt
jns
mov
xchg
out
and
fs
or
mov
or
mov
xlat
int
rorl
cwtl
mov
mov
cmp
je
xchg
leave
pop
sahf
cli
add
loop
push
cmp
fistps
or
mov
cwtl
stc
cmpsl
imul
movsb
lea
int3
stos
or
outsl
xorb
fldenv
out
loopne
sti
mov
pop
cmp
adc
repz
mov
adc
pop
mov
push
or
dec
fisttpll
push
popa
cmpsl
out
add
std
icebp
pop
add
pop
mov
fisubl
addr16
std
sub
hlt
inc
or
cld
inc
shlb
dec
fwait
cwtl
jo
and
jl
popa
add
mov
adcl
shll
inc
cmpsb
and
out
mov
pop
xchg
pushf
popf
xor
xchg
sarl
ja
fcoml
hlt
test
loopne
call
out
jne
sub
fisttpl
sahf
test
xchg
push
test
cmp
pop
mov
dec
mov
xor
dec
pop
xor
es
pop
lds
inc
mov
jg
push
mov
and
push
add
out
xchg
pop
jl
into
and
dec
push
cmpsb
push
sub
push
jbe
or
fmull
bound
imul
sbb
cmp
lods
mov
scas
adc
jecxz
arpl
or
pop
cmp
add
mov
mov
cwtl
pop
mov
lock
js
repnz
mov
add
or
and
cmp
pop
and
adc
push
jne
pop
mov
out
and
nop
xchg
cli
test
dec
mov
icebp
push
adcl
insb
insb
lret
mov
sbb
push
adc
dec
rcr
push
and
jle
aam
in
subl
xor
inc
mov
movsl
int3
push
xor
test
bnd
mov
jae
outsb
sbb
les
pop
push
mov
xchg
iret
enter
lods
pop
shlb
nop
jmp
or
das
mov
dec
inc
leave
xchg
stos
mov
pusha
sub
add
inc
pop
in
dec
test
insl
adc
call
inc
cmp
stos
addb
adc
mov
stos
cmp
hlt
mov
dec
jns
test
or
cmp
pop
inc
push
xchg
test
jne
idivl
xor
xchg
lret
xchg
mov
push
xchg
dec
and
xor
into
fbstp
inc
in
icebp
jnp
repz
fistl
imul
cmp
into
jp
pop
jbe
pop
inc
js
scas
mov
ficomps
int3
mov
dec
jl
enter
mov
outsb
inc
or
mov
xchg
add
push
fcompl
das
sub
xchg
stos
mov
mov
sahf
jle
xor
arpl
adc
test
test
add
jne
adcl
mov
xchg
xor
xlat
inc
test
icebp
insb
mov
repnz
aad
inc
loop
inc
aaa
stos
cmp
and
inc
repnz
push
loopne
cmp
pop
gs
sbb
imul
push
push
jle
push
or
sub
jl
push
sbb
push
jae
sti
fiadds
js
push
push
mov
mov
lahf
jb
dec
shlb
scas
pop
xor
pop
xor
dec
div
cmpsb
idiv
push
jne
cmpsl
sbb
adc
push
pop
pusha
gs
addr16
pusha
idivl
dec
shll
pushf
shl
or
pop
ror
adc
or
popf
dec
gs
fwait
mov
in
fisttpl
ret
dec
jmp
bound
adc
jge
fbstp
add
aas
mov
cmpsb
aad
sbb
jg
movb
pop
inc
dec
std
sbb
pop
xor
fcompl
and
push
mov
inc
je
adc
loope
orl
out
in
sbb
mov
loop
ds
dec
test
popa
or
clc
or
mov
aad
or
adc
rclb
sub
mov
cmpsb
mov
pop
gs
std
outsb
test
or
dec
insl
xchg
xchg
jns
or
aaa
fildl
in
xchg
mov
and
cmpsb
push
jne
pop
lea
jb
and
scas
mov
aas
lea
add
jnp
jns
imul
daa
inc
cmp
lcall
sbbl
and
mov
scas
mov
xor
popa
cs
sub
or
aaa
xor
jg
mov
pop
insl
lahf
lret
pop
adc
mov
scas
dec
jmp
sub
mov
in
mov
stc
jl
dec
gs
pop
mov
or
xchg
iret
cmp
lea
cmpsl
inc
xchg
fucom
mov
xchg
loop
xchg
xchg
lock
jae
xchg
decl
add
ficomps
mov
les
int3
icebp
push
xchg
jp
cmp
sub
rorl
and
scas
inc
mov
dec
pop
iret
cmpsb
mov
aad
lret
adc
pop
insl
jbe
and
mov
scas
pop
xor
add
cmp
sub
loope
lahf
insb
push
iret
cmpsl
add
dec
sub
enter
mov
dec
inc
sub
pop
sbb
sub
and
mov
mov
jle
scas
xchg
in
add
ljmp
jns
jle
or
cmc
pop
adc
scas
daa
cmpsl
jg
repnz
jge
aad
mov
dec
inc
ret
jle
inc
add
fidivrs
mov
rcrb
rorl
lret
outsl
dec
xchg
mov
fs
in
sub
push
les
sbb
push
or
inc
push
fsubrl
adc
xor
cmp
jne
cmpsb
jmp
add
movswl
add
or
cmpsb
aas
cmp
leave
lds
fildll
stc
jmp
or
mov
ror
inc
fs
xchg
bnd
xorl
repnz
testb
iret
test
ljmp
or
out
jg
cmpsl
lock
cs
test
adc
movsl
sub
or
pushf
rclb
xchg
xor
stos
dec
cmp
cwtl
cmovb
mov
fimuls
dec
or
ret
cmp
mov
jge
mov
jge
in
xchg
sbb
pop
jecxz
dec
mov
stos
subl
fwait
sbb
rcrl
mov
inc
mov
lea
or
push
int3
fidivl
jns
daa
movsb
dec
adc
in
dec
incl
inc
adc
pop
and
fdivl
sbb
sbb
sub
xor
test
dec
or
pop
loope
mov
loope
pusha
adc
pop
pop
jo
in
insb
adc
std
xorl
movsb
pushf
flds
dec
pusha
jp
lock
sub
sub
and
push
or
lret
loope
adc
icebp
add
pop
jg
testb
imul
push
add
mov
leave
adc
or
cmpb
inc
iret
mov
imul
stos
sbb
sbb
add
fwait
popa
mov
ds
jo
jl
adc
and
rorb
mov
add
cmp
cmp
repnz
sar
fcompl
jb
xchg
xlat
hlt
pop
sbb
out
dec
inc
ret
sbb
inc
or
or
js
jge
rolb
les
mov
cmp
mov
cmpsl
mov
loop
fisubl
push
add
cmp
ljmp
sbb
out
xchg
jno
push
pushf
mov
inc
cmp
stos
ret
and
pop
popf
xor
mov
cli
jnp
clc
xor
test
lret
in
pop
cmpsb
cmp
sbb
mov
sti
lcall
lahf
popa
jno
fisttpll
sub
into
xor
mov
adc
adc
lret
cmp
ljmp
pop
cmp
imul
dec
ja
gs
pushf
jno
add
jmp
mov
imul
cmp
jecxz
push
fnstcw
or
shll
cli
cmc
push
pop
aam
inc
sar
sub
lcall
mov
inc
lret
push
sbb
add
pop
lds
sbb
xor
inc
nop
add
outsb
xor
xor
insl
add
aaa
repnz
pop
cmp
xchg
adc
enter
and
arpl
xchg
xchg
rcll
dec
sahf
aad
insb
cmp
inc
lahf
lret
cld
jbe
int
or
je
xchg
inc
enter
mov
and
sub
cmp
pushf
sti
ror
sub
fdivs
out
pop
scas
outsb
mov
stc
int3
sbb
fisubrl
inc
mov
rorl
cmpl
cli
test
out
mov
scas
adc
jecxz
push
push
in
cmpb
jno
test
add
push
sbb
cmpsl
push
dec
mov
ljmp
xchg
in
shlb
cwtl
dec
mov
adc
pushf
jb
jge
push
jo
cmp
cmp
mul
mov
stc
xor
sub
ja
pop
push
lods
hlt
or
js
cmpsb
xor
add
mov
gs
sub
push
sub
rorl
jle
stos
loope
test
iret
or
out
lcall
xchg
fs
jl
add
sub
stos
fadds
push
add
mov
lahf
xchg
sbb
in
add
cmpsb
sbb
jno
popf
push
enter
jmp
mov
fs
jecxz
mov
lock
lods
or
push
jnp
aaa
mov
cmp
add
into
dec
addr16
hlt
aaa
pmulhw
fcoml
or
push
stos
nop
mov
lcall
test
push
lds
imul
lds
xchg
pusha
xchg
sub
test
ret
or
sti
pop
mov
pop
xchg
movsb
cmpb
jge
xor
inc
das
movsl
leave
scas
cmp
and
inc
xchg
icebp
mov
jo
pusha
movb
pop
jae
mov
jno
repnz
je
jns
push
lock
dec
push
outsb
jnp
pop
fsubr
shll
push
jge
pop
insb
inc
mov
xor
pop
xor
sbb
pop
pop
and
fwait
insl
or
sbb
jb
xor
inc
test
inc
stos
push
push
cmp
add
mov
xchg
dec
push
mov
xchg
and
int3
jecxz
add
xchg
in
inc
pop
and
inc
and
pushl
dec
sbb
jnp
nop
pop
sub
sub
lods
cwtl
sbb
repz
pop
push
dec
in
mov
push
push
pop
mov
cltd
inc
push
push
inc
dec
and
mov
pop
mov
jmp
jge
mov
in
push
pop
rorl
out
insl
ret
pop
jno
dec
mov
dec
ja
cmp
dec
int
or
sub
jp
add
stos
sar
jns
sub
or
jge
inc
sbb
lea
mov
fnsave
nop
mov
imul
adc
bound
jmp
xorb
xor
out
aad
nop
dec
dec
fiaddl
xchg
push
push
sbb
push
cmp
in
outsl
pop
data16
scas
testb
jbe
xor
sbb
aam
pushf
xchg
or
push
bound
pop
mov
dec
mov
mov
xor
pop
xorl
out
push
pushf
shll
or
lahf
dec
sbb
mov
mov
sub
int
xchg
les
enter
ds
jne
dec
xchg
icebp
sub
out
sbb
fldenv
repz
and
cmp
adc
jp
sub
pop
ljmp
loope
mov
imul
mov
or
mov
pop
ja
rorb
mov
xor
sarl
push
sbb
rcrb
pop
dec
or
rolb
sub
fsubs
sbb
sub
lods
unpckhps
aaa
in
mov
sub
imul
cmp
mov
ljmp
test
xchg
insl
push
sbb
popf
lret
fsubs
jge
jns
addl
mov
jb
loope
mov
add
pushf
aas
scas
jo
xor
mov
aam
loopne
xchg
data16
dec
inc
mov
dec
pop
ss
data16
jecxz
fistpll
sar
dec
mov
aas
ja
das
stc
test
push
enter
subb
addb
add
in
iret
in
scas
jg
iret
lcall
int
adc
add
or
arpl
inc
add
jns
and
loopne
fcmovbe
iret
push
push
lret
or
mov
jle
jnp
sbb
sbbb
adc
loope
ret
pop
sarb
xchg
dec
bound
jp
aad
xchg
nop
psrad
hlt
or
js
xor
aad
cmpsl
movsb
loop
adcl
or
sahf
xor
push
loopne
pop
mov
call
rcll
jp
mull
sub
mov
notl
mov
outsb
or
gs
mov
mov
pop
or
cmc
in
jno
push
adc
imul
add
stc
adc
xchg
push
out
add
push
mov
push
mov
mov
leave
mov
out
iret
sbb
and
insb
push
ret
add
imul
js
jne
mov
inc
and
dec
pop
push
addr16
rcl
lret
inc
push
xor
xor
push
nop
fsubrs
bound
xor
xor
pop
stos
popa
stos
sub
frstor
or
int
lcall
in
pop
sbb
lods
movd
sti
cli
daa
push
test
test
cld
xchg
pop
sti
cmp
xchg
push
mov
ljmp
lods
cmp
dec
cmp
pop
xlat
mov
pop
neg
jns
push
insb
sbb
pop
jno
and
and
xor
lds
dec
and
sarb
scas
mov
lcall
dec
adc
jge
lods
pop
sbb
pop
dec
jmp
and
mov
push
inc
repnz
in
inc
lret
or
insl
sub
ss
inc
daa
jbe
in
add
outsb
push
mov
xor
mov
test
loop
add
ljmp
bound
or
dec
lock
xor
push
out
cmp
popa
shll
add
xchg
or
push
lret
repz
pop
fldenv
inc
adc
mov
jp
mov
inc
sbb
call
and
adc
fcmove
cmp
lds
pop
cmc
cld
fdiv
adc
inc
mov
pop
mov
stos
cli
aam
shr
inc
in
xor
pop
pop
std
out
push
mov
cld
loopne
jne
inc
cs
cmpsl
cmp
ds
xchg
enter
inc
imul
lock
fwait
mov
push
and
cld
xsaves
mov
xchg
pop
in
sub
test
push
ljmp
xchg
fstpt
inc
popf
mov
or
fcmovne
mov
cmpsl
aaa
inc
cmpsl
adc
push
mov
push
and
cltd
pop
jecxz
inc
imul
pusha
je
pop
cli
mov
jmp
mov
test
mov
xor
xchg
fcmovnb
pop
push
xor
add
dec
ret
in
mov
push
sbb
aas
dec
add
jo
subb
je
ja
mov
sahf
mov
push
sbb
xchg
mov
fisubrs
in
sti
pop
cmp
mov
mov
add
add
sbb
in
out
data16
mov
mov
xchg
scas
sub
mov
dec
or
bound
outsb
cmp
fbld
mov
rol
dec
push
ljmp
lods
push
jo
cmpsb
xor
lret
mov
cmp
push
xchg
fbld
add
dec
scas
cs
lds
mov
jnp
ret
orb
shll
add
pop
aaa
mov
movsl
xlat
neg
inc
pop
por
push
or
leave
lds
movsl
sti
andl
jns
roll
sub
ret
cmp
ss
testl
fwait
cs
mov
add
daa
int3
pop
fdivrs
negl
test
fiadds
jmp
or
inc
mov
bound
pop
inc
inc
bound
mov
push
leave
aaa
jno
mov
int
cltd
jg
adc
jmp
out
dec
push
out
insb
rcrb
inc
dec
inc
cmpsl
xchg
fnstcw
pop
inc
leave
jg
and
push
daa
iret
pop
cs
inc
dec
or
dec
in
orps
test
push
inc
in
loop
jmp
test
mov
jb
cmp
cli
pop
add
sbb
xlat
cwtl
jle
pop
repnz
add
ja
dec
fstp
out
mov
daa
out
aas
push
push
jno
cmp
jmp
dec
inc
push
mov
imul
pop
lret
mov
mov
hlt
in
jp
jne
inc
xorl
adc
nop
mov
inc
pusha
and
repnz
out
xor
mov
add
in
incb
add
fstpl
lahf
xchg
adc
imul
in
dec
push
loop
leave
outsl
shr
xchg
xor
comiss
mov
cmpsb
out
push
stc
lahf
nop
out
sar
and
dec
aam
xchg
mov
jno
dec
stos
movsl
cmp
out
stos
dec
cmc
mov
or
mov
gs
in
shll
sub
or
jbe
push
out
xchg
das
testb
sbb
bnd
mov
out
push
dec
xor
jp
clc
xchg
cmp
std
lods
xor
xor
in
test
add
mov
jno
sbb
adc
push
fcomps
add
rclb
jns
ret
ret
add
data16
fdivrl
push
mov
into
repnz
dec
dec
insb
jnp
dec
jo
pop
pop
jbe
stos
add
jge
ret
test
inc
adc
push
test
andb
in
fisttps
sub
fcoms
fldz
sub
adc
pop
jb
xor
mov
fwait
mov
outsl
mov
adc
inc
cli
xchg
cmp
into
mov
repnz
sbb
mov
inc
aam
cs
add
dec
cmp
sbb
outsl
add
loope
push
fistl
push
rcll
in
paddd
sub
sub
sbb
je
repz
mov
push
fcom
shr
sub
inc
jns
lret
or
adc
cmp
outsl
lea
or
cmp
nop
push
loope
shlb
imul
xchg
cltd
iret
out
je
dec
jmp
lcall
push
xor
lahf
cmp
fs
add
jns
inc
sarl
rcl
sub
xor
fistps
xchg
sub
cmc
mov
popf
xor
fcmovne
jg
dec
repnz
repz
fiaddl
aad
pop
inc
in
push
push
aas
nop
xchg
lret
cmp
imul
sbb
xchg
aas
leave
shlb
mov
mov
sbb
mov
pushf
cmp
lahf
scas
push
ljmp
ss
das
dec
add
pop
dec
lret
adc
leave
out
cmp
adc
lea
mov
pushf
pop
icebp
inc
mov
inc
in
ffree
mov
out
lock
or
hlt
xor
xchg
jnp
jo
test
ljmp
ja
into
data16
push
enter
add
jmp
xchg
insl
fwait
fucomip
int3
rolb
mov
mov
mov
idivb
aas
in
mov
fs
movsb
nop
addr16
icebp
inc
or
les
out
mov
sub
sub
pop
push
insl
mov
stc
and
int3
pop
mov
xchg
cmp
outsl
add
add
cmp
rcll
adcl
sub
sbb
addl
scas
add
cmp
jbe
xor
pop
and
dec
dec
cmp
stc
faddl
jne
sbb
xlat
je
shrb
inc
cmp
es
stc
aad
or
mov
jbe
mov
mov
pop
xor
push
mov
pop
test
fld
push
insl
fldcw
cmpsb
pop
mov
or
mov
and
arpl
fldcw
jnp
sahf
mov
adc
test
or
int3
fnstenv
int3
xchg
les
hlt
mov
xor
scas
and
inc
fcos
inc
dec
ss
add
and
xchg
fildll
sbb
into
fstpt
jmp
into
fists
xor
and
scas
sbb
sbb
clc
orb
xor
shll
lret
xchg
les
hlt
ss
lods
inc
test
mov
daa
pop
push
frstor
rol
or
mov
imul
orb
js
push
xchg
test
addr16
cltd
sub
lahf
mov
sub
or
xor
pushf
dec
or
fmull
cmp
movsl
fistpl
jae
push
mov
cld
xchg
jb
pop
arpl
insl
mov
out
sub
mov
subl
jmp
cwtl
mov
xchg
add
mov
cmp
add
cmp
aas
jmp
inc
insl
sbb
ds
xor
mov
ficomps
and
leave
xchg
sub
adc
mov
pop
aam
sti
enter
add
aad
aam
enter
lcall
cpuid
outsl
lock
jl
xchg
lds
mov
orb
aam
jmp
jg
fildll
push
movsl
add
mov
push
dec
inc
push
pusha
stos
jl,pt
fwait
or
dec
scas
std
lods
les
dec
mov
jb
fimuls
std
add
insl
pusha
je,pn
push
rcll
popa
gs
push
xchg
or
mov
cmp
jmp
in
push
mov
push
xor
inc
mov
lret
cli
call
adc
push
repz
pushf
shll
ds
dec
dec
sbb
pop
lcall
jae
nop
ret
mov
test
xchg
sbb
lret
ja
add
mov
pop
mov
imul
pop
imul
into
into
or
xchg
cmovbe
jmp
fsubr
add
pop
imul
mov
mov
sbb
fmuls
jae
jns
testb
outsl
xor
scas
push
cmp
mov
je
jbe
cmp
and
mov
stos
mov
cmpsl
xchg
icebp
push
sub
add
mov
divl
inc
jo
mov
aaa
insb
inc
dec
repnz
inc
icebp
out
jecxz
je
cmpsb
jb
inc
fidivrl
rol
scas
xchg
pop
xor
xor
push
add
idivl
jo
xor
or
js
mov
jl
addr16
adc
and
mov
dec
cwtl
arpl
adcl
iret
mov
les
hlt
adc
in
mov
mov
data16
push
loopne
repz
clc
add
xchg
dec
xor
push
pop
jbe
mov
stos
pop
sti
cmp
fwait
mov
xor
jp
inc
xor
xchg
ljmp
sbb
mov
pop
das
xorb
jne
mov
movsl
hlt
cmp
pop
lcall
pop
mov
cltd
in
xor
add
int3
push
sar
stos
adc
lcall
and
dec
dec
fimull
cld
insb
jle
cs
xchg
adc
jae
loope
sbb
adc
int
mov
rolb
cmp
push
mov
pop
jne
jmp
jle
add
sub
jg
dec
and
dec
mov
pop
pop
or
add
lahf
mov
and
lcall
imul
movsl
jne
mov
sarb
inc
jbe
inc
movsb
hlt
pop
test
sti
sbb
push
mov
jns
mov
outsl
mov
lock
inc
xor
mov
bound
mov
mov
fsubl
mov
jp
je
mov
push
sub
fldt
mov
jmp
in
cmp
sti
lods
inc
push
add
add
xchg
jbe
xchg
enter
decl
ljmp
mov
cmc
fwait
cli
out
mov
arpl
push
add
iret
hlt
shl
sub
cwtl
fnstenv
push
dec
stos
xor
dec
mov
dec
sti
cmp
pop
dec
sbb
js
leave
jne
test
sbb
sbb
aam
fsubr
push
or
xor
mov
jne
xor
popf
pop
ljmp
fincstp
mov
je
insb
push
and
mov
or
std
cmc
mov
xor
stos
push
add
xchg
sbb
cld
xor
xor
pushf
pusha
inc
jnp
push
insb
sbb
mov
int3
fucomi
adc
mov
jb
jbe
enter
push
push
sub
je
rcr
inc
or
or
lea
jge
mov
jo
pop
cmp
mov
add
mov
mov
or
sub
in
out
aam
movsb
outsb
out
add
lahf
and
pop
cwtl
les
pusha
pop
movsb
mov
rorl
mov
rol
pushf
cmp
xchg
shl
insb
daa
jge
loopne
mov
push
fldenv
push
dec
adc
out
cmp
or
jnp
movsw
ficomps
testl
inc
adc
inc
fisttpll
adc
inc
pusha
cmpl
mov
mov
rorb
mov
addr16
das
enter
in
mov
shrl
jae
arpl
xchg
or
rclb
xor
pop
inc
push
push
xor
popf
mov
popa
sti
out
mov
daa
and
push
inc
sti
scas
xlat
mov
xchg
inc
aaa
mov
hlt
pop
addr16
rol
jmp
xchg
push
cmp
fs
pop
pop
je
pop
mov
ret
xchg
push
mov
pop
sbb
xor
pusha
mov
or
push
dec
inc
jne
or
and
ja
int
add
sub
cmp
fdivrl
pop
lods
sub
mov
lret
les
je
iret
inc
imul
xor
jb
sbb
scas
adcl
push
or
add
rorb
add
pop
cltd
xor
jae
dec
or
lret
sbb
and
xchg
hlt
jg
lahf
roll
xchg
xor
daa
or
jg
lret
add
in
inc
mov
mov
int
mov
fstl
add
pop
lds
xchg
jne
push
jmp
jmp
ss
fsts
push
shrb
test
cmp
mov
and
mov
sbb
mov
jle
lods
mov
sbb
enter
bound
movsl
leave
sub
mov
into
jl
dec
test
ja
shr
inc
xor
out
fistpll
lock
adc
inc
sbb
pop
inc
xor
sub
pop
sbb
fwait
push
iret
rcrl
or
popf
test
add
hlt
or
jb
in
xchg
das
addr16
int
sahf
rcl
adc
push
shll
pop
xchg
in
xchg
sar
cmp
sbb
pushf
push
cltd
cwtl
xchg
bound
push
mov
push
adc
xor
or
xchg
pop
xor
ja
push
es
pop
outsb
mov
jb
fs
and
sbb
fisubrs
jbe
xor
inc
aaa
movsl
std
jge
sbb
pop
fildll
lret
xchg
das
cmpsl
cli
mov
imul
xchg
inc
fs
xor
or
xchg
ret
int
ret
flds
xchg
outsl
es
aam
sbb
aad
sub
std
popf
or
sbbb
pop
add
cld
add
movsl
mov
xor
sub
cmpsb
xchg
lret
sub
or
stc
xchg
scas
mov
or
idivl
adc
lds
stc
imul
mov
mov
gs
lock
jp
in
sbb
outsl
xor
insl
aad
or
xchg
sub
cld
xchg
call
test
mov
js
pop
sub
jno
imul
rclb
mov
fsubrl
icebp
or
dec
les
enter
iret
hlt
mov
loopne
fisubrl
xchg
and
and
fistps
adc
fildl
leave
test
sub
pop
xor
sbb
push
push
push
pop
stos
pop
dec
aas
push
out
push
scas
and
pop
push
sbb
ficomps
test
mov
je
lahf
imul
jns
fdivs
mov
or
sub
fcmovbe
add
push
cli
push
xchg
push
inc
jne
loop
sub
cmpsb
jecxz
in
enter
repz
lcall
xchg
sbb
jb
push
inc
cmpsb
lret
bound
jbe
mov
mov
data16
pushf
dec
rcr
test
pusha
pushl
inc
push
or
sbb
dec
into
or
xorl
mov
mov
push
jae
mov
into
lock
xor
bound
notl
mov
mov
dec
mov
addr16
mov
mov
fwait
mov
xchg
and
mov
add
scas
enter
mulb
or
in
sbb
jle
xor
xchg
mov
push
inc
scas
add
jecxz
std
lds
cmc
mov
cmpsl
cmp
push
shlb
pop
or
push
lcall
cltd
imul
scas
ss
cmp
adc
icebp
push
ljmp
out
pop
sub
imul
push
lcall
mov
cmp
fistl
dec
or
sub
les
push
mov
or
pop
or
and
or
inc
cmp
mov
pop
adc
or
xchg
dec
adc
sub
add
aad
leave
jb
xor
jge
arpl
outsb
xchg
ret
jb
adc
lea
lret
fdivl
mov
pop
mov
rorl
push
je
cwtl
inc
push
pushf
push
push
pop
add
fs
lcall
jmp
test
js
loopne
xchg
test
cli
pop
pop
loopne
aam
mov
jbe
pop
fidivl
dec
cmp
imul
sarb
addb
sub
mov
icebp
repz
lea
daa
xchg
cltd
jp
outsb
add
cmp
js
iret
mov
xor
and
jae
pop
fidivs
xor
cld
lret
jl
push
in
test
xor
testb
push
sarl
push
das
xchg
mov
mov
cld
lds
xchg
add
jno
mov
push
push
imul
int
ljmp
lahf
cmp
out
inc
dec
xchg
out
test
add
sub
aaa
jmp
mov
adc
aam
enter
jp,pn
push
lcall
add
les
les
into
movsl
ret
xor
iret
mov
mov
dec
popa
sub
mov
and
movsb
jns
push
dec
leave
mov
add
sub
pop
clc
sarb
add
dec
add
in
mov
or
mov
inc
mov
push
repz
push
cs
mov
mov
cli
sbb
pusha
and
jmp
mov
push
jge
fldenv
jmp
push
mov
loop
sub
sarb
out
jg
mov
stos
pop
iret
sti
mov
adc
aas
inc
push
popa
inc
test
add
jge
mov
pop
jns
push
outsb
orb
sub
mov
or
add
jns
iret
jo
cmp
out
popf
xchg
ljmp
stos
xchg
outsb
popa
into
push
adc
movsl
sub
in
mov
rol
xchg
xchg
call
sub
push
lods
push
inc
add
das
xor
insl
psrld
sbb
add
cwtl
lret
in
xchg
xchg
inc
cmp
adc
xchg
imul
sahf
xchg
cmp
sub
insb
repz
shl
imul
dec
aas
bnd
push
ss
scas
in
movsb
adc
adc
test
push
fimull
mov
push
repz
cli
stos
mov
inc
cmpsl
dec
lahf
iret
inc
test
sbb
pusha
xchg
stos
mov
jg
ss
push
scas
iret
ja
ret
popa
fwait
push
fs
mov
adc
mov
dec
fsubs
ret
xor
mov
call
mov
xchg
pop
xchg
test
jae
pushf
mov
pop
mov
movsl
pop
rorl
mov
roll
out
mov
push
cmc
adc
mov
into
jo
jnp
dec
push
cs
mov
aas
les
cmpsl
add
fimull
test
pop
jle
cmc
adc
out
inc
adc
inc
inc
fiaddl
or
mov
lahf
push
aad
ror
adc
aas
sbb
out
pusha
mov
popa
stc
and
xchg
ret
sti
pop
lds
insb
rol
xor
rcr
cmpsb
es
xchg
dec
jmp
add
repnz
daa
sbb
sbbb
loopne
rcrb
pushf
mov
cs
and
add
add
adc
ficoml
cmp
jge
test
rcrl
inc
jo
cmp
ss
cs
cltd
jecxz
clc
divl
sbb
mov
adc
jle
scas
lock
int3
enter
mov
in
jmp
out
std
jb
pop
rcll
sub
mov
mov
mov
cmpsb
sub
inc
mov
aad
fmulp
sbb
nop
rcl
mov
push
mov
mov
nop
insl
test
dec
test
push
push
mov
push
rcrb
stos
les
aam
pop
out
dec
in
jge
lret
or
test
xor
lea
dec
stos
cmp
mov
mov
das
mov
inc
mov
out
pop
mov
insl
clc
sbb
lret
sub
cmp
cltd
lock
mov
cld
mov
dec
jle
int3
stos
xor
inc
mov
inc
icebp
rclb
int
fcoms
lea
jle
in
sub
in
cmp
xchg
xor
pop
xlat
adc
inc
jne
jg
or
cmp
outsb
mov
mov
je
les
sbb
bound
ret
shrb
incl
sahf
js
xor
jb
fs
std
mov
ja
sahf
fwait
dec
gs
jns
pop
pusha
fcompl
into
pushf
pop
icebp
insb
mov
aaa
jne
mov
pop
div
xchg
lods
push
push
lahf
nop
leave
rcr
cltd
pop
adc
mov
aad
jg
adc
inc
repnz
rcrb
lods
fisubs
movsb
sbb
inc
sarb
lcall
xchg
jae
sub
adc
movsb
shl
xor
jne
and
push
je
cwtl
lret
adc
call
lods
inc
movsl
jne
lret
aaa
jb
aam
or
and
scas
out
jne
fldl
clc
test
jns
insb
les
xor
mov
test
cld
movsl
sahf
add
ror
cmp
pop
icebp
mov
pop
ljmp
mov
popa
pop
mov
fwait
mov
or
push
jge
cwtl
ljmp
lods
fcmovbe
sahf
lea
outsl
cs
out
push
filds
aas
inc
or
cli
loop
jecxz
outsl
dec
lds
add
mov
jmp
lret
push
in
push
lcall
jb
dec
push
or
push
jge
jns
sarb
aam
aaa
add
and
mov
or
fidivl
cmpsl
mov
and
sbb
mov
imul
lea
sbb
popf
pop
fdivrp
mov
inc
xchg
shrb
pop
adc
js
in
xchg
inc
sbb
mov
mov
repz
dec
push
into
adc
xor
fidivrl
mov
imul
ss
cmpsb
sbb
dec
push
repnz
adc
and
call
cmc
dec
jg
orb
jge
mov
shl
pop
inc
fnstenv
mov
mov
std
push
dec
jnp
into
aas
mov
cmovg
push
and
adc
addl
incb
add
push
xchg
xchg
movsl
nop
fadd
pushl
repz
jp
lcall
popf
stos
icebp
push
outsl
test
hlt
xchg
and
push
pop
mov
sbb
xlat
and
enter
inc
xchg
js
xchg
es
inc
fdivrs
push
dec
cmp
mov
push
arpl
xor
cmp
std
jl
loope
cmp
cmpsb
std
mov
mov
pusha
out
stos
stos
jmp
sbb
pop
adc
out
and
fadd
movsb
push
mov
out
cmp
sbb
shll
cmp
mov
lret
ss
sbb
adc
fs
adc
loop
inc
inc
aad
and
mov
insb
gs
sub
adc
or
mov
lock
mov
shl
sarl
cmp
mov
and
test
or
lea
fwait
daa
and
in
pop
inc
mov
and
int3
popl
dec
int
mov
lahf
inc
aam
out
add
out
lret
sarb
rcll
or
into
mov
xchg
pushf
pop
daa
inc
jb
jnp
lahf
inc
roll
cmp
cwtl
push
scas
pop
jne
in
lcall
pop
insb
in
push
mov
subl
mov
xchg
lock
in
mov
push
loop
scas
adc
das
jecxz
outsb
sbb
push
or
popa
cmp
call
ljmp
jnp
call
mov
xor
xchg
inc
shll
push
push
out
sub
lods
mov
cmp
rep
mov
add
inc
dec
push
pushf
mov
sub
jns
xor
ss
mov
mov
ljmp
sbb
loop
jge
mov
stc
mov
and
sbb
push
sub
jae
stc
sub
arpl
sub
int
aam
mov
jo
icebp
out
pushf
sub
xor
push
mov
push
add
sbb
fnsave
or
sbb
out
jo
jge
adc
aam
imul
and
inc
cmpl
movl
or
aad
in
cmpsl
cmpsb
movsl
or
pop
cmp
jg
int
outsb
add
fdivl
xchg
add
shrl
mov
sahf
test
rcr
flds
jp
lock
mov
les
shrb
repz
outsl
push
repnz
mov
lret
repnz
fwait
xchg
stc
xchg
test
sub
sub
mov
test
mov
push
mov
xor
xchg
int
out
jns
stos
lds
loope
fisubrs
cmpsl
popa
clc
or
jno
push
movsb
dec
cs
cmp
fdivrs
test
mov
lahf
inc
arpl
adc
ljmp
mov
dec
cmp
pop
xchg
cmpsl
cmc
daa
stos
lods
aaa
xchg
or
dec
push
popa
xor
imul
jns
cmp
dec
add
imul
cmp
dec
mov
mov
test
lcall
das
out
pop
addl
jp
jg
imul
sar
inc
fs
scas
push
out
fwait
sub
sahf
mov
jge
dec
fidivrs
imul
ljmp
shlb
imul
movsb
xlat
repnz
arpl
sub
test
rcrl
push
cmp
pop
cmpsb
dec
std
call
arpl
dec
xchg
and
dec
cld
mov
mov
mov
adc
push
or
daa
loopne
das
cld
outsb
dec
mov
jnp
xor
test
adc
sbb
shlb
add
cmp
cwtl
daa
mov
jle
sub
mov
mov
lods
shlb
and
mov
or
push
mov
imul
jae
cmp
repnz
mov
and
and
gs
and
lret
mov
jns
mov
jbe
les
mov
or
jb
rorb
dec
sahf
jecxz
imul
dec
dec
cltd
neg
or
insl
add
pop
push
iret
test
sub
cmpsl
insb
xchg
sub
mov
xchg
push
mov
movsb
icebp
ljmp
and
mov
out
test
pop
push
fadds
mov
cwtl
jbe
xor
test
lret
fcoml
dec
fnstsw
std
jb
movsl
sub
ret
mov
imul
cmpsb
cmp
push
pusha
jg
and
and
or
inc
int3
mov
sub
cs
adc
pop
sbb
xor
call
je
jb
loope
and
sbb
test
sbb
pop
aaa
mov
jnp
xor
add
mov
movsl
lods
sub
aam
cmpsl
fwait
mov
imul
lret
aaa
cmpsl
scas
xchg
enter
dec
call
insl
enter
sub
dec
or
mov
jl
dec
mov
cmpsb
adc
dec
sub
push
stos
add
fadds
cmc
push
xor
data16
cmp
sub
mov
data16
in
adc
jmp
pop
scas
and
sbb
mov
cmc
mov
idivb
xlat
push
mov
out
lret
filds
movsl
sub
sbb
and
mov
pop
sbb
or
mov
mov
in
pop
test
fcmovne
faddp
xchg
je
pop
cmp
xchg
push
fistpll
jl
and
xchg
les
add
adc
fchs
mov
inc
divl
outsl
rolb
mov
cmp
pop
push
mov
test
sbb
jecxz
ret
shrb
rep
lret
mov
inc
stos
shlb
loopne
dec
adc
sub
mov
sbb
mov
mov
cmp
arpl
add
mov
inc
icebp
mov
fs
jge
loope
pop
enter
dec
cmpl
jae
cmc
inc
das
ret
lcall
cmpsb
push
mov
sbb
scas
jmp
mov
fisubs
jnp
dec
or
gs
int3
cmp
jae
fdiv
mov
add
jne
xchg
sbb
cs
jns
call
dec
adc
cmp
jmp
mov
xchg
sub
hlt
and
ds
fldt
sti
andl
mov
mov
popf
cmp
dec
test
mov
out
sbb
stos
jle
push
stc
and
jmp
lods
cmp
xor
mov
adc
ja
testl
cltd
scas
fwait
mov
int3
add
dec
sbb
stc
push
xor
add
fiadds
lds
jae
icebp
xor
push
or
loop
cmpsl
dec
lods
insb
xchg
psrlq
roll
pop
push
sbb
xor
adc
sub
mov
or
cmpsb
lods
gs
scas
insb
gs
jae
repz
cmp
xor
adc
cmp
cmp
xchg
cmp
cmp
outsb
test
adc
fbstp
frstor
mov
test
hlt
cs
into
mov
popa
push
sub
jmp
pop
mov
dec
in
pop
xor
loope
push
scas
inc
ss
mov
dec
mov
sbb
jle
xchg
insl
mov
push
ljmp
in
shl
adc
adc
sub
cli
mov
mov
ror
outsb
inc
lcall
fs
stos
cmp
rol
aas
subb
dec
or
push
push
jl
out
xchg
lods
aaa
pop
sbb
sbb
jp
imul
cmc
pop
in
sbb
ficoms
inc
int
imulb
loope
add
dec
lock
lcall
and
lahf
mov
ja
ja
cmp
xchg
lcall
aam
xchg
push
pushf
rorb
sbbl
push
popf
fwait
shlb
test
jp
jmp
out
leave
jo
mov
add
sbb
mov
imul
jbe
mov
or
divl
je
pop
adc
movsw
or
sbb
jl
pop
stos
insb
xchg
addr16
mov
out
dec
out
or
adc
movsl
insb
mov
xchg
ljmp
sub
outsl
inc
pop
repnz
imul
jle
jmp
clc
and
andb
mov
loopne
mov
xchg
pop
sbb
xchg
rorb
stc
lods
data16
xchg
add
aam
mov
pop
adc
cld
jne
xor
mov
ljmp
pop
inc
shlb
movsb
movsb
mov
rorl
dec
mov
inc
std
jp
int
push
dec
movsl
enter
and
pop
add
inc
xlat
dec
hlt
sbb
jo
rcrl
shlb
repz
ret
adc
movsb
mov
sub
cwtl
push
je
pop
leave
pop
inc
ret
jle
addr16
xorb
popa
test
outsb
and
sbb
testb
cld
mov
cmp
cmp
in
sar
mov
cwtl
cltd
fsubs
je
hlt
and
inc
push
out
xchg
loope
pushf
inc
pop
enter
pop
mov
sahf
pop
push
sbb
lea
mov
push
xor
sbb
cmp
pop
sub
mov
imul
aam
shll
xor
inc
jp
push
xabort
xchg
mov
shlb
inc
pop
aaa
fistl
xor
lret
test
ret
pop
inc
xor
inc
pop
mov
in
jg
inc
test
or
aad
push
rcll
mov
cltd
dec
inc
fstps
cwtl
in
lock
sbb
outsb
adc
cli
sub
test
xchg
out
pop
or
jmp
xor
loope
sbb
mov
popf
and
sarl
stos
cmp
lods
filds
mov
pop
lcall
adc
in
add
pop
cmc
mov
pop
jmp
cltd
pushf
rcrl
out
add
mov
nop
stos
notb
mov
std
mov
popa
lea
cltd
pop
cmp
add
movsl
ss
es
mov
insb
adc
inc
lods
rcl
mov
adcl
int3
cli
out
fbld
adc
push
cmp
rolb
mov
scas
jo
sbb
into
inc
into
popf
push
pmulhuw
push
xor
test
int
inc
shll
pop
pop
imul
inc
cld
inc
rorb
jno
stos
xchg
mov
mov
je
jae
push
push
add
addl
push
xchg
cmc
ds
pop
ret
pop
lahf
aad
dec
aaa
das
movsl
and
push
decb
cmp
mov
push
in
cwtl
sbb
jns
fisttps
gs
sti
or
xchg
or
shrl
mov
adc
test
imul
push
je
out
std
das
repnz
push
inc
push
fstp
mov
mov
movsb
push
in
inc
lret
adcl
nop
and
movsb
popa
xor
push
rcr
cmp
xchg
cwtl
mov
iret
and
push
mov
mov
mov
int
movzwl
push
mov
mov
mov
enter
push
mov
imul
mov
out
pusha
inc
mov
xchg
push
adc
push
test
lret
mull
test
push
imul
pusha
pop
xchg
mov
jae
cld
inc
dec
lcall
dec
stos
loop
lret
gs
pushf
iret
in
lret
js
mov
sbb
mov
xor
cld
xchg
aas
pop
je
call
mov
cmp
xchg
mov
shlb
push
ss
sub
shlb
scas
std
mov
sbb
jnp
fwait
mov
jge
adc
adc
xchg
fwait
cmp
andb
js
jp
mov
out
mov
ss
jle
jns
pop
push
mov
inc
arpl
popa
xor
int
push
dec
cmpsl
test
dec
stos
sub
jno
dec
test
ljmp
jb
imulb
jnp
shll
test
leave
fcomi
xor
pop
xchg
aaa
mov
les
inc
daa
into
push
jae
cltd
mov
sub
lds
mov
jmp
imul
sbb
daa
and
cmp
mov
jmp
scas
idivl
pop
xchg
cmp
mov
sbb
into
dec
push
push
push
jp
push
push
div
mov
mov
insb
outsl
into
divb
aas
and
hlt
add
adc
add
addr16
mov
pop
test
cmp
xlat
push
push
pop
int3
outsb
es
in
sub
xor
lods
sarl
popa
fcoml
daa
mov
xor
cmp
cmp
stc
add
jo
dec
into
dec
out
adc
imul
dec
and
mov
stos
add
jnp
jle
jne
mov
mov
dec
insb
ja
sub
mov
cltd
stc
cmp
pop
jae
je
cli
push
inc
in
push
mov
sub
je
add
loopne
fisttpll
ret
mov
imull
paddd
push
add
mov
xchg
mov
or
call
or
mov
arpl
pop
inc
lods
add
jae
in
stos
pop
jbe
and
loopne
sahf
popf
push
adc
into
rorb
add
jns
decb
sbb
out
cwtl
sbb
js
out
cwtl
xchg
mov
nop
in
jbe
dec
cmp
mov
and
pop
pop
fsubl
dec
jl
jp
insl
std
mov
xor
test
jno
arpl
push
lock
xchg
sub
int
insb
push
les
addl
add
push
frstor
mov
mov
ret
loopne
cld
jmp
mov
xchg
push
jmp
mov
je
movsl
fisubs
sbb
and
imul
in
sub
lds
push
stc
or
mov
jnp
sub
cmp
pop
and
cmp
and
call
or
mov
pushf
subl
mov
fwait
xchg
popa
xchg
add
les
dec
sbb
inc
mov
cld
jae
xor
adc
jl
andl
insl
adc
imul
or
scas
push
insb
cli
jne
imul
test
cmp
xlat
sub
and
nop
imul
int3
jno
mov
lds
pushf
mov
pop
dec
jnp
in
mov
inc
pop
fisubrs
arpl
push
incl
dec
adc
dec
jmp
and
inc
ja
sti
mov
and
push
sbb
xor
sbb
dec
shll
ljmp
jg
jecxz
icebp
imul
and
ljmp
sbb
movsl
fnstenv
sahf
sbb
fcmovnbe
adc
push
ds
mov
leave
icebp
ret
cmp
push
mov
dec
mov
fstps
pop
inc
and
xor
cmp
lea
sub
sahf
mov
sbb
fsubp
sub
out
jno
sarl
mov
leave
daa
imul
mov
call
fiadds
stos
leave
in
fwait
dec
pop
xor
jnp
cmp
sub
sbb
inc
sbb
jg
sub
stos
fadds
into
adc
jbe
xchg
push
sbb
fs
add
sub
sti
jns
pop
testb
cmpsl
push
jae
cmp
jb
pop
aaa
push
push
jno
mov
cmp
lcall
cmp
je
test
mov
ljmp
cmp
test
popa
mov
jge
inc
pop
jae
int
subl
or
in
jge
arpl
ret
push
das
aad
pusha
push
cs
adc
daa
sti
pop
sti
add
and
jns,pn
mov
repz
sbb
mov
push
mov
insb
or
ret
rol
sub
inc
cmovb
rcl
negb
popa
fmull
push
add
das
jo
in
sti
pushf
xor
pop
xchg
and
cmpsl
and
loopne
jmp
in
sarb
mov
jns
pop
pusha
in
lods
nop
inc
mov
loope
dec
sbb
sbb
dec
jecxz
mov
mov
pop
adc
xor
adc
clc
insb
mov
cmpsl
cmpl
mov
xor
inc
scas
inc
int3
out
jns
lock
cmp
sbb
filds
xchg
adc
adc
xor
shl
sbbb
das
lods
add
sbb
pop
pop
ss
mov
insl
iret
mov
jno
test
shr
sahf
lods
stc
aam
pop
fiaddl
push
xor
add
lret
push
call
in
mov
outsb
mov
add
jns
add
or
adc
mov
pop
stos
sub
mov
fwait
pop
xchg
or
xchg
fistpl
or
xchg
push
push
movl
or
or
sarl
ds
fdivrs
adc
cmp
pop
repnz
rorl
iret
pusha
push
mov
iret
mov
cltd
or
mov
fistpll
sbb
push
imul
jnp
push
or
daa
lret
jl
cmpsb
jo
flds
dec
jno
jmp
test
jle
xor
ficomps
ds
push
outsb
mov
mov
cmpb
xor
popa
jne
cmp
pusha
cwtl
rcr
shrb
inc
cmpsl
and
lahf
mov
mov
lds
xchg
lods
sub
cltd
jo
and
cmp
inc
cli
mov
rcll
jbe
psrad
or
dec
aam
mov
pusha
cld
and
mov
movsl
lds
imul
lret
dec
icebp
add
mov
push
or
fld
shlb
in
xchg
mov
je
cmp
int
cmp
xchg
test
flds
cs
lods
fstpl
into
adc
xor
xor
pop
subl
shl
lcall
shrl
xchg
in
shlb
in
mov
popf
out
pop
cli
testl
add
fdivl
xchg
fsubrl
push
push
pop
pop
and
push
jg
test
xchg
jae
es
cltd
xchg
daa
mov
popa
xor
movsb
sub
sub
adc
jge
dec
cmp
inc
push
push
cld
cli
outsb
pop
fstps
sub
mov
fsubrl
and
cmp
fstpl
ja
xchg
dec
or
and
mov
pop
call
scas
in
in
cltd
inc
call
loope
out
mov
mov
lret
and
pop
fisttps
and
sbb
xchg
int3
rclb
jp
cmpsl
jmp
rcr
pop
mov
cmp
xchg
sbb
push
cmp
sub
mov
not
in
std
sti
sub
xchg
pop
and
in
or
lock
sbb
lahf
pop
xor
imul
xor
out
xchg
sbb
mov
imul
pop
adc
gs
test
push
leave
push
cs
rcrl
mov
mov
addr16
pop
pop
aaa
mov
fdivp
mov
push
push
mov
or
and
pop
fnstsw
sub
movsl
dec
testl
sub
test
aas
fstpl
les
mov
pop
lods
rolb
cmc
or
fnstenv
lock
test
popa
dec
mov
pop
shl
movsb
jae
dec
add
test
ret
int3
out
out
pop
clc
pop
ss
ds
out
push
loope
fsubl
popf
xor
dec
popf
js
out
mov
or
popf
sub
loop
sub
jge
mov
mov
push
loope
out
cmc
sbb
lock
pop
pop
ljmp
sar
lret
mov
and
cmpsl
in
fcom
decl
inc
cli
clc
inc
and
adc
pushf
in
mov
shr
in
cld
insb
fcompl
add
dec
insb
call
pop
cmp
std
fdivrl
leave
mov
out
sti
inc
jecxz
int
xor
pop
das
sbb
mov
mov
mov
cmp
and
int3
adc
xor
outsb
pop
movsl
insb
js
add
enter
jae
dec
lret
lds
cld
enter
sub
mov
fcmovnb
xchg
cwtl
shll
out
out
jmp
and
or
dec
pop
cs
xor
pop
push
shlb
int3
inc
and
idiv
arpl
xchg
xor
dec
or
aam
cmp
clc
call
add
test
xorl
fdivl
lea
bswap
push
add
pop
lds
mov
mov
mov
jecxz
jmp
sbb
add
fmuls
xor
popf
movsl
sbb
sahf
push
cwtl
cmovns
and
or
adc
dec
push
repnz
mov
push
adc
jg
push
push
adc
adc
js
and
repnz
pop
sbb
inc
movsl
pop
or
and
enter
xor
inc
mov
enter
adc
push
mov
cmp
jo
or
cs
int3
lock
lret
out
ljmp
subb
imul
jb
or
pop
xchg
popf
xor
lret
mov
and
mov
adc
push
pop
repz
out
jle
test
popa
xor
cmp
jne
add
fcmovnu
pop
leave
sbb
mov
cmpsb
dec
add
push
ja
cmp
les
xchg
rcr
push
andl
mov
inc
add
xchg
cmp
xchg
mov
add
jg
push
sbb
loopne
adc
sbb
mov
fs
cmp
loope
mov
enter
sbb
and
xor
push
pop
push
and
jns
xchg
loopne
ds
push
inc
push
mov
loop
test
mov
fisubrl
or
jmp
pop
ret
out
repz
stos
mov
hlt
or
icebp
push
mov
pop
jbe
sub
sbb
sbb
lods
fwait
xor
dec
mov
rcrb
lahf
orb
pop
in
xchg
add
sahf
cmpsb
cmpsl
jne
movsb
cltd
sub
sahf
xor
add
fwait
movsl
lock
mov
cmpb
sbb
inc
mov
and
mov
cld
les
ret
loopne
jge
xchg
jecxz
jp
sub
cli
cmp
data16
cmp
jmp
inc
adcl
xchg
arpl
jg
fisttps
xor
sub
push
xor
stc
xchg
mov
mulb
dec
xor
cmc
xorl
je
mov
xchg
mov
out
iret
xlat
ror
mulb
or
sbb
jns
or
loopne
or
xchg
mov
subb
push
cmp
popa
pushf
into
or
popf
jg
inc
lea
sahf
xor
xor
ficomps
rcr
mov
cmp
mov
pop
push
orl
push
int3
sti
loop
sub
push
repz
sub
pop
dec
aaa
dec
std
ja
imul
mov
aam
cli
mov
cld
pop
xor
mov
jmp
jg
adc
mov
sub
jle
cmpsb
adc
push
ss
and
arpl
cwtl
cmc
cmpl
add
lods
xor
cmp
cmpsb
cmp
jns
sub
mov
or
jp
sub
sarl
lcall
jne
aaa
hlt
mov
xor
lods
xchg
push
mov
sub
ror
mov
scas
jnp
push
fbld
xchg
xor
imul
insb
test
cld
add
test
fsub
loopne
xor
mov
add
jecxz
into
jns
imul
sbb
fldt
mov
jmp
push
pop
sahf
mov
add
hlt
mov
fisubl
fsubl
aam
fadd
sub
scas
xchg
cwtl
mov
sub
in
mov
aad
ljmp
scas
adc
flds
adc
iret
fcmovnbe
leave
xor
xchg
icebp
sub
mov
xchg
loope
fmull
mov
test
mov
cmp
stos
xchg
pop
jp
mov
inc
mov
lods
jae
cmc
pop
dec
imul
dec
push
pop
ret
cs
ret
or
lods
ja
mul
outsb
int3
jle
add
dec
xchg
pushf
xchg
sbb
sbb
fcompl
cld
or
mov
xchg
mov
xor
add
repz
mov
mov
leave
xor
inc
test
cltd
jecxz
pop
cmc
into
pop
rolb
dec
jle
lods
mov
and
adc
dec
out
lea
movsb
add
lret
icebp
cmp
loope
push
in
fdivp
mov
arpl
fwait
mov
nopl
pop
mov
ljmp
cmp
fdivrl
xor
idiv
inc
jne
jno
push
push
or
xchg
scas
jl
repz
add
popf
xchg
pushf
clc
iret
sub
je
mov
add
in
xor
loope
inc
into
shlb
mov
adc
adc
xchg
mov
mov
jne
mov
lret
aam
imul
push
mov
mov
clc
ds
lret
adc
sbb
pop
inc
or
xchg
fld
adc
sti
xlat
mov
cmp
pop
setp
js
adc
loope
shll
loope
or
add
pop
dec
nop
cmp
sub
pushf
aam
fnstcw
imul
push
rcr
cmp
lock
pop
loop
xchg
mov
out
out
xchg
pop
jmp
push
adc
pop
sbb
sub
mov
adc
push
mov
fld
adc
loopne
das
xchg
int3
sbb
divl
enter
inc
cld
adc
fwait
arpl
lcall
jo
sub
pop
xchg
or
rcl
subl
xchg
mov
aam
cli
aam
je
sti
mov
dec
in
xor
add
adc
cmc
xor
xchg
ds
sub
adc
xor
mov
xchg
into
or
mov
test
test
call
pop
aam
lds
mov
lret
lods
mov
mov
jne
xchg
out
xchg
inc
mov
push
pop
scas
add
stos
into
test
dec
push
pop
jae
mov
and
outsb
scas
lods
sahf
jmp
fnsave
mov
xor
ror
repnz
mov
movsb
faddl
jbe
mov
inc
jns
mov
lret
sbb
mov
cltd
xor
dec
call
inc
aaa
pop
inc
push
out
cltd
xchg
clc
xor
aaa
adc
xchg
lds
movb
mov
stos
jge
and
jae
in
xchg
pop
rolb
insb
xor
jae
je
sub
mov
test
mov
enter
push
push
pop
aam
or
inc
jnp
or
out
fwait
iret
push
push
iret
sbb
fisubrl
mov
jmp
les
fmuls
lahf
add
rorb
ret
sbb
in
xchg
push
inc
cmp
cs
sub
and
les
loop
or
dec
ljmp
icebp
mov
jg
inc
data16
cmpsb
movsb
sub
out
pusha
jle
flds
insb
or
aad
fwait
mov
pop
push
imul
movsl
ljmp
inc
dec
rclb
mov
aaa
in
arpl
fwait
aam
sahf
popf
std
sbb
gs
das
xor
and
inc
dec
xor
pop
leave
popf
cli
insb
fnsave
aas
mov
inc
sahf
dec
xchg
test
pop
rcl
cld
mov
push
ljmp
and
inc
dec
lcall
ret
in
push
sub
addr16
andb
stc
inc
mov
mov
or
inc
aam
adc
std
cltd
or
outsb
or
cmpsl
loope
and
sti
lea
mov
not
mov
cld
xlat
addr16
iret
adc
xchg
lret
xchg
and
adc
mov
or
sbb
insl
daa
push
and
or
aad
pusha
ss
divb
shll
jp
xchg
add
icebp
sbb
aaa
xor
jb
fmuls
jge
and
add
jns
mov
ja
jmp
cmp
jle
decb
sar
jl
jl
xchg
jne
xchg
sub
jg
mov
stc
mov
shrb
mov
cmp
pop
sahf
pop
outsl
pop
adc
xchg
sbb
push
lock
int3
sti
add
mov
mov
lret
cld
test
jnp
pop
clc
xor
shlb
pop
fdivrs
mov
push
shll
sbb
pop
mov
xlat
mov
je
fmulp
pop
imul
mov
testb
out
adc
fwait
ds
inc
inc
jmp
movsb
bnd
jbe
out
jno
scas
xchg
inc
mov
jb
out
ret
fsubrl
sbb
sub
ja
pop
xor
jns
arpl
push
add
cwtl
ja
pop
mov
mov
fcomps
cli
ret
mov
jle
lea
cmc
sbb
xchg
popa
icebp
loope
int
pop
cld
mov
or
mov
or
int3
mov
add
fisttps
sub
jle
insb
out
cmpsb
test
jmp
jp
rorl
cmp
mov
sub
lahf
popf
jns
xchg
mov
mov
sub
or
inc
xor
leave
pop
jae
fisttps
push
or
lret
jl
sbb
jae
mov
fwait
in
jnp
aam
cmp
test
xor
inc
pop
mov
and
sarl
dec
jb
pop
enter
add
mov
mov
dec
repz
pop
fwait
pop
fwait
dec
rcll
lds
and
and
sbb
sbbb
mov
push
pop
movsb
shrb
push
das
sbb
or
push
mov
cmp
pop
xchg
sbb
and
sbb
addr16
inc
enter
and
daa
and
fldenv
test
repnz
inc
imul
cmpl
mov
pop
pop
addr16
inc
inc
mov
xchg
int
sub
sub
test
movsb
in
lcall
movsb
pusha
fisttpll
mov
loopne
mov
iret
or
enter
xlat
add
mov
orb
pop
mov
insb
adc
jae
mov
jmp
xchg
daa
lock
hlt
outsb
js
push
stc
sti
jb
xchg
mov
fwait
data16
aam
ret
ret
add
outsl
and
cmp
icebp
pushf
pop
addr16
push
cmpsb
jb
mov
loope
sbb
int
jp
sti
pop
xchg
xor
mov
out
aad
jle
and
xchg
pop
orl
leave
pop
xor
xor
dec
or
mulb
mov
jmp
scas
mov
push
and
cmpsl
out
cmp
out
xor
xchg
push
push
inc
fsubrs
outsb
lds
mov
add
jge
pop
int3
mov
lahf
stc
jge
xor
jl
xchg
adc
or
fisubs
ficoml
mov
nop
scas
cmpsl
xor
mov
dec
pop
mov
nop
scas
mov
and
out
lods
mov
leave
adc
or
insb
fcom
imul
xor
add
cli
incb
push
scas
roll
lods
xor
mov
or
push
pop
xchg
rcll
int
or
sahf
jae
sbb
sar
push
rorb
rclb
vrsqrtps
in
je
test
sbb
jmp
insl
push
pop
xchg
xchg
daa
xchg
dec
sub
pop
cwtl
adc
ret
daa
cmp
in
xor
jb
in
mov
mov
add
and
lret
addb
inc
fistpl
jle
mov
ds
mov
mov
pop
imulb
rorb
mov
movsl
pop
cmp
mov
adc
mov
fisubrl
mov
clc
rcrl
push
xlat
mov
add
pop
dec
subb
cmp
mov
das
stos
ljmp
out
andl
adc
mov
mov
cli
bound
push
adc
cltd
mov
ret
popf
and
dec
pop
mov
fs
mov
popa
xor
sbb
mov
or
adc
push
inc
addr16
fidivl
es
lret
mov
aaa
pop
fs
jg
mov
in
mov
mov
jp
xchg
cltd
movsl
insb
or
sub
pop
loopne
push
lods
ja
or
in
adc
sub
dec
popa
fidivs
test
xchg
mov
std
imul
xchg
scas
outsb
clc
pop
jo
fiaddl
pop
outsb
cmp
mov
subl
push
sbb
xchg
cmc
movsl
icebp
addr16
push
pusha
leave
xor
jnp
jg
scas
xor
daa
xor
mov
dec
lahf
push
movsl
jp
pop
adcb
jae
imul
mov
testl
lcall
mov
in
cmpsb
pushf
cmp
jecxz
mov
stos
pop
mov
or
xchg
pop
out
aas
mov
fldenv
scas
imul
repz
mov
push
pop
das
repnz
jg
push
je
mov
leave
test
jo
inc
das
add
mov
lds
outsl
enter
nop
mov
mov
adc
jmp
inc
and
or
cmc
push
and
idivl
into
loopne
repz
add
sarl
aas
sub
loope
xchg
push
in
incl
adc
push
or
pop
pop
sti
xchg
add
into
mov
add
lock
idiv
inc
and
or
xchg
pop
je
cltd
call
mov
seta
or
jb
stos
adc
lds
inc
in
sbb
jbe
xchg
jp
jl
gs
loop
cmp
stc
pop
jecxz
sbb
xchg
mov
add
cli
adc
in
dec
xor
mov
mov
jb
rclb
jo
out
sub
or
jecxz
stc
xchg
mov
xlat
ljmp
pop
ss
xorl
insl
scas
dec
loope
pop
xor
rcll
pop
jb
mov
or
jbe
cltd
rcl
popa
test
cmpsl
scas
out
mov
scas
addr16
inc
add
rol
fcmovnu
mov
and
nop
insl
divl
and
dec
test
jmp
stos
push
ja
into
cmp
mov
out
mov
jb
dec
dec
out
push
or
mov
lods
mov
cmp
inc
das
repnz
push
xchg
out
cmpb
loop
push
push
xor
mov
outsl
ds
dec
fstpl
push
std
xor
test
jmp
enter
sti
mov
lret
sbb
dec
push
cmp
movsb
xor
inc
mov
cmp
das
push
add
or
neg
ja
pop
xor
or
shrb
into
and
repnz
ret
aad
pop
jne
scas
pop
bound
outsb
decl
fwait
xor
fisubrs
xor
test
jp
add
icebp
jmp
cmpsl
int3
out
ss
out
cmp
scas
dec
cld
icebp
cmp
popf
xchg
xchg
mov
jmp
dec
push
fdiv
cmp
cmpsb
rorw
or
cmp
fidivrs
push
sub
cmp
shlb
nop
mov
sub
xchg
mov
dec
insl
loope
pop
dec
pop
mov
imul
inc
pop
jg
daa
and
stos
in
stos
faddl
jle
fiadds
dec
sti
sbb
out
mov
in
ffreep
lcall
icebp
cmp
lods
xor
rorb
mov
decb
mov
and
outsl
push
adc
push
cltd
iret
pop
xor
cmp
cmp
aaa
xchg
fadds
sbb
cmpsl
mov
or
cltd
push
push
inc
adc
mov
loopne
push
push
call
mov
mulb
je
rcrb
inc
mov
lret
add
fistps
jmp
push
out
imul
ds
push
test
vpunpcklqdq
xchg
mov
dec
test
sub
xchg
sub
mov
inc
jl
inc
mov
ds
int3
dec
dec
rep
ret
pmulhw
jnp
arpl
test
xor
stos
cwtl
ds
test
lea
mov
js
xchg
sub
dec
cmp
ljmp
test
cmc
cmp
into
aas
or
adc
xchg
push
adc
negb
lods
imul
jle
xchg
leave
cmp
push
stos
dec
xor
fs
or
stos
in
data16
out
jae
cmp
ret
jo
cwtl
jl
mov
xor
dec
xchg
jge
das
js
adc
in
outsl
adc
jbe
or
mov
push
adc
cltd
into
pop
rorb
pop
fwait
stos
mov
popf
push
cli
push
pop
nop
add
push
sbb
mov
add
sub
clc
into
mov
xor
mov
and
cmp
ficoms
jg
das
mov
mov
sub
sub
cltd
insl
shlb
push
pop
add
lea
xchg
adc
popf
jle
sub
inc
adc
jl
call
gs
out
or
loopne
fstps
movb
notb
and
repz
mov
mov
push
mov
mov
mov
test
cmc
mov
push
mov
out
jl
adc
pop
adc
nop
sub
orb
or
bound
xchg
cs
push
or
ds
xchg
push
aas
test
fdivrs
pushl
and
stos
and
fsubl
push
add
sbb
and
and
mov
fs
mov
inc
xor
xchg
dec
inc
movsl
mov
fdivrs
sub
mov
es
ds
nop
ljmp
sbb
inc
mov
or
add
jge
adcl
repnz
mov
sub
mov
ds
push
adc
adc
or
sti
pop
inc
scas
jbe
icebp
jecxz
movsl
movsl
push
mov
cmp
sbb
inc
mov
mov
xchg
lahf
out
lcall
aaa
sub
ret
adc
xlat
cs
lahf
push
mov
cltd
cmc
stos
jns
mov
and
aam
mov
adc
into
cmpl
and
aaa
add
testb
sbb
fwait
lret
loopne
loope
out
nopl
sub
or
push
incb
dec
cs
xchg
test
cwtl
sbb
mov
mov
xchg
jo
rcl
iret
pop
pop
out
xor
sbb
ret
pop
inc
or
mov
cmp
push
jl
out
mov
outsl
add
dec
pop
mov
je
and
imul
pop
push
mov
xchg
sbb
cmp
mov
out
iret
les
cmp
cmpsl
pop
mov
jnp
call
add
icebp
mov
movl
in
hlt
bound
cmp
dec
xchg
fst
flds
shll
addr16
subl
dec
xchg
add
lock
out
popa
mov
movb
dec
test
dec
mov
mov
out
xor
fwait
stos
rcrb
aam
clc
sti
stos
xor
or
dec
ficomps
in
in
mov
in
test
mov
sub
testb
and
push
xor
pop
mov
pop
mull
jb
repnz
ret
xchg
andl
dec
add
jne
repnz
es
mov
pop
je
je
or
mov
out
test
popf
leave
sub
xor
lret
mov
movsl
icebp
test
jp
push
or
sub
js
clc
loopne
ds
or
xor
test
inc
fildl
xor
jmp
xchg
cmpsb
dec
stos
mov
data16
inc
adc
inc
inc
mov
loopne
aaa
xchg
jae
insl
or
scas
inc
cmp
jle
jmp
mov
stos
popf
adc
popa
imul
sub
pushf
add
lret
pop
lea
fbstp
andb
popf
xchg
sahf
inc
enter
dec
push
pop
shl
or
mov
lea
pop
xor
jp
cmp
insl
sbb
jecxz
fcom
shr
sbb
xor
and
addr16
mov
popa
clc
frstor
mov
into
cmp
or
mov
sbb
mov
pop
addr16
outsb
mov
stos
scas
mov
std
lods
cmp
int
fstpt
insl
cmp
arpl
les
cmpsb
int
mov
leave
xor
xlat
cmp
pop
clc
mov
shll
popf
jmp
lcall
rorb
dec
inc
out
xlat
mov
cwtl
adc
push
jle
in
pop
and
rorb
push
mov
jns
movb
xor
mov
cmc
das
cmpsb
sub
andl
jb
popf
jmp
insb
jae
xor
jmp
mov
insb
pop
notb
imul
sbb
sbb
pop
popa
and
push
and
push
shrl
and
sti
cltd
in
jnp
cmp
pop
mov
subb
mov
es
orl
cld
pop
xor
int3
idivb
movsl
jno
mov
insl
mov
adc
push
mov
mov
ret
push
cmp
cmc
jnp
xlat
loop
in
xor
and
scas
daa
sub
inc
mov
outsl
cmc
adc
fdivs
mov
sub
es
xchg
dec
fwait
test
stos
stc
push
push
or
lods
mov
adc
adc
adc
and
sbb
mov
outsb
adc
movsl
mov
xchg
in
addr16
out
roll
adc
mov
movsb
inc
push
pop
popa
push
std
push
cli
in
adc
add
xchg
iret
test
and
daa
jg
ud2
dec
ds
shlb
or
ret
faddp
mov
cmp
fistpl
mov
jae,pt
push
mov
or
cld
jb
jmp
ljmp
and
aas
insl
ret
xor
imul
pop
xchg
sti
add
int
data16
loop
std
cmpsl
ss
push
xchg
cmp
add
ljmp
pusha
mov
cwtl
lret
das
insl
lret
push
ret
dec
cmp
cwtl
pop
xchg
pop
lods
lods
int
dec
jb
inc
ds
xor
in
cmpb
lret
or
mov
sub
cmp
mov
dec
test
pop
out
sub
mov
stos
pop
dec
insb
sahf
sub
jmp
fcom
pushf
mov
hlt
bound
xlat
xor
jne
jp
add
dec
inc
into
cmc
cmp
in
xchg
clc
mov
dec
fiaddl
daa
aas
pop
mov
std
xor
pop
std
pop
mov
lods
in
and
mov
add
aad
icebp
adc
repz
xor
sbb
add
cltd
ficoml
adc
xchg
add
mov
or
pop
push
mov
mov
push
sbb
sbb
je
dec
pop
mov
fsubr
or
adc
rcr
push
sub
movsl
dec
pop
inc
ret
or
in
and
ret
or
pop
cmp
int3
and
jae
mov
js
sbb
adc
aas
push
call
push
mov
mov
push
sarb
push
outsb
mov
adc
pop
ljmp
push
push
add
leave
sbb
lret
mov
loope
mov
dec
lcall
lahf
cwtl
in
hlt
es
dec
or
mov
stos
sti
sbb
cwtl
inc
rclb
sbb
cmpsb
xchg
inc
mov
inc
sub
and
fistpll
dec
cld
xchg
xchg
inc
rclb
cli
lret
or
loop
subl
lds
jl
cmpsb
push
in
cmp
adc
inc
cmp
sub
cltd
sub
cmpsb
int3
pusha
je
push
mov
and
pop
outsb
push
xchg
adc
and
cmp
inc
rorl
aas
xor
rorl
jb
jno
test
mov
xor
test
sub
sub
rol
and
fiadds
in
cmc
sub
test
adc
in
lret
adcl
into
popf
lds
mov
repz
cmpsl
mov
fildll
adc
stos
negl
push
jbe
push
pand
mov
test
jbe
inc
stos
mov
mov
lods
popf
push
test
mov
dec
insl
xor
cmp
fiadds
pcmpeqb
mov
jns
movsl
dec
test
pop
out
push
pusha
into
loop
jo
lahf
and
icebp
fiaddl
cmp
pop
cmc
jmp
std
imulb
xor
imul
xor
mov
mov
movsb
in
sub
push
mov
pop
and
push
or
pop
cmpsb
pop
fcoms
mov
mov
sbb
and
mov
mov
adc
leave
sub
std
inc
and
jae
push
adc
ret
sub
into
test
add
shrb
gs
cmp
test
push
jbe
shrb
data16
mov
nop
add
fildll
and
mov
ret
sti
and
adc
into
lcall
mov
leave
jge
icebp
call
jbe
enter
xchg
mov
imulb
leave
fcompl
mov
popa
enter
call
das
xchg
jnp
call
or
xor
daa
lock
xchg
jge
les
push
mov
addb
ja
mov
jg
movsb
fsts
sarl
pmuludq
pop
or
pop
sbb
sub
mov
aaa
cld
xor
lock
sbb
daa
das
and
shl
insl
ret
jle
arpl
sbbb
mov
scas
xchg
leave
jl
movsl
sub
jne
mov
daa
es
daa
add
test
jecxz
aad
mov
or
jecxz
xchg
add
xor
dec
mov
jnp
jp
mov
rorl
in
lds
jno
testb
sahf
mov
mov
xor
faddl
imul
ret
sub
shll
adc
out
cli
loope
and
push
int3
loope
add
and
xor
or
mov
dec
js
mov
imul
cmp
mov
pop
movsb
repz
pop
adc
insb
add
ficomps
out
stos
filds
jnp
jle
push
scas
add
test
ss
pop
fwait
test
jne
ja
fldenv
jg
mov
inc
and
insl
dec
in
dec
jle
gs
and
call
push
add
jno
xor
push
out
pop
sub
cli
xchg
pop
jno
xor
mov
je
adc
add
imul
push
push
xchg
jg
mov
popf
push
ds
push
loopne
dec
sarb
fdivrl
repnz
pop
xor
push
aad
jo
neg
jbe
pusha
out
xor
or
dec
loope
scas
insb
lret
aam
or
data16
scas
fidivrl
inc
cld
test
andb
dec
loope
out
cmpsl
cwtl
ja
add
aaa
fnsave
aaa
xor
add
or
cli
div
or
into
push
mov
push
adc
jmp
test
mov
loope
mov
cmpsb
and
jmp
push
xchg
rorl
rcl
pop
movsb
jnp
or
les
lods
xchg
push
fwait
sub
push
push
inc
mov
pop
js
dec
and
add
jbe,pn
mov
or
dec
dec
out
stc
repnz
sbb
pop
push
bound
jnp
in
out
cmp
into
popf
testl
dec
or
sti
push
or
orb
lret
add
gs
mov
enter
fisubrl
movsb
push
mov
add
in
fistl
lock
ljmp
push
mov
call
subb
hlt
popa
xchg
shlb
lea
jb
lods
mov
iret
jns
push
pop
aam
arpl
inc
cld
mov
jl
push
pop
cmpsl
aas
mov
daa
movl
mov
dec
out
add
xchg
xchg
jecxz
in
movsl
pop
adc
adc
pop
sbbl
out
out
fcmovnbe
sbbl
andl
jne
cmp
xchg
mov
mov
jmp
ss
daa
jg
div
mov
and
xor
cltd
sbb
xchg
nop
push
cwtl
shlb
popf
mov
xor
push
push
js
pop
cmpsb
xchg
cmpsl
cld
xchg
pop
arpl
xchg
push
xchg
loop
rclb
and
jbe
lret
orl
movsb
sbb
ljmpw
loop,pn
push
loope
push
xchg
mov
lea
xchg
mov
push
aam
inc
mov
stos
sub
hlt
dec
push
fistpl
gs
mov
sub
das
je
std
mov
test
xlat
add
jns
sahf
add
mov
daa
frstor
jmp
sbb
jg
les
shl
dec
pop
xor
sub
sbbl
insl
addl
in
push
mov
jecxz
cld
scas
fistpl
repnz
jmp
int3
sbbb
fnstcw
inc
xchg
dec
mov
dec
movsb
fwait
stc
jno
es
sbb
ja
jno
xchg
mov
inc
and
and
arpl
mov
sbb
movsl
or
xorb
push
leave
xchg
clc
mov
ja
ss
xor
shll
andl
jge
mov
js
out
nop
repnz
sub
jmp
cmpl
ret
xchg
mov
icebp
dec
pop
sub
sub
cltd
jge
aaa
push
jge
ss
sub
pop
cmc
mov
nop
in
add
shlb
cwtl
movsl
sbb
mov
dec
cmp
bound
xorb
clc
ds
int3
inc
sub
outsl
je
fnstsw
jl
lods
mov
fiaddl
addr16
adc
adc
cmc
dec
sub
aam
stc
push
movsb
ret
cs
sbb
or
lret
sbb
scas
xor
xchg
xchg
ss
jp
jne
mov
and
frstor
shrl
jno
loopne
movsl
fisubrs
ja
mov
ljmp
roll
int
mov
adc
mov
fwait
dec
xchg
mov
jge
and
lret
adc
or
daa
adc
jmp
pop
pushf
push
mov
inc
dec
movsl
mov
std
out
pop
or
dec
in
add
loope
mov
iret
or
decl
pop
in
cld
lret
fwait
sti
xchg
icebp
scas
insl
cmp
pop
mov
cmp
pop
xor
dec
fidivrs
mov
jle
addr16
enter
or
jecxz
pop
xlat
icebp
mov
dec
ds
insl
inc
sbb
jmp
loope
xchg
imul
adc
mov
mov
bound
scas
shlb
dec
push
xchg
cmp
push
test
popa
pop
lret
ss
dec
mov
dec
push
addr16
jge
je
test
in
insl
sbb
fdivrs
pop
test
and
add
fistps
aaa
xor
leave
in
sbb
push
jne
fisubrl
int
sub
into
sbb
test
push
mov
mov
inc
pop
mov
xlat
movsb
mov
xor
mov
mov
cmpl
cmp
daa
lock
divl
dec
out
jl
and
sub
js
xor
cmpsb
mov
ja
int3
push
xchg
push
mov
lock
jne
cmp
jle
push
mov
sti
push
push
jnp
into
mov
daa
aad
xor
add
gs
push
aaa
and
hlt
push
mov
pop
push
sbb
push
pop
push
in
jge
popa
rorb
out
sbb
push
leave
jl
jns
call
out
fisubrs
or
mov
dec
pusha
ja
sub
and
shlb
shlb
push
scas
call
lds
mov
dec
and
and
xchg
mov
rcr
and
mov
dec
fisttpll
and
aam
lahf
sarl
xchg
mov
in
push
or
loope
add
mov
ljmp
je
mov
xor
lret
test
mov
movsl
or
adc
and
pop
cmpsb
les
xchg
lret
scas
nop
dec
mov
or
mov
lods
inc
mov
mov
xchg
sub
pop
enter
lret
cmp
in
outsb
xchg
mov
ret
aad
jno
sbb
mov
cmpsb
and
xchg
popa
addr16
ret
testb
bound
shl
test
es
sbb
or
xorb
rcl
lret
push
inc
push
out
aas
jbe
lds
jl
ret
das
daa
dec
sub
icebp
dec
add
and
mov
dec
and
inc
jae
mov
mov
or
xor
ljmp
shrl
and
in
movsl
adc
xor
jbe
sti
inc
lret
loop
sub
std
pop
xor
arpl
or
sbb
pop
or
push
out
rol
cmp
push
xor
and
xor
adc
inc
pop
into
adc
xorl
or
sti
in
mov
xchg
test
cs
jne
push
or
dec
cmp
jb
xor
xchg
mov
inc
mov
inc
and
std
repnz
dec
sbb
roll
andb
adc
xchg
jg
pop
addr16
and
or
cmp
insb
xor
testb
lock
xchg
dec
sbb
pop
call
mov
or
push
xor
aam
fs
loope
inc
aad
and
add
add
stc
jbe
inc
push
nop
inc
or
jb
xchg
sbb
cli
ds
push
mov
xchg
lods
mov
enter
mov
repz
jno
jo
xor
cwtl
inc
les
push
jne
lock
lods
dec
sbb
rcrb
jle
and
leave
lods
jmp
cwtl
mov
inc
or
mov
cmp
loope
popf
dec
sub
mov
in
add
out
adc
stos
push
jg
movb
lds
aad
ficomps
pusha
push
push
add
xchg
sub
adc
shl
dec
enter
add
xor
in
mov
push
flds
daa
mov
or
shr
lret
popf
push
cmp
or
stos
jbe
aad
out
cmc
daa
sbb
jns
rcll
dec
push
xchg
sub
call
sbbb
mov
dec
stos
sahf
and
outsl
add
loopne
inc
dec
sbb
lods
pop
fildl
aad
fs
mov
inc
jge
data16
sub
and
jne
adc
pop
inc
addb
imul
jbe
jo
xor
fiadds
mov
fisttps
stos
inc
add
mov
mov
ret
andb
sbbl
outsl
lcall
lret
xor
jp
mov
dec
xchg
and
mov
xorl
xchg
sbb
jne
cmpsb
dec
aad
iret
fwait
sahf
js
adc
fcmovnu
hlt
gs
loop
out
pop
push
and
jne
movlps
pop
fimuls
inc
rcll
fisttps
ja
lods
sbb
cmp
pusha
pop
lcall
out
lret
test
cmp
mov
sbb
dec
or
outsb
xchg
mov
mov
add
push
ror
xlat
sti
ret
outsb
ss
loope
xchg
mov
jns
lret
es
pop
je
dec
hlt
cmp
fwait
popf
sbb
xor
add
pop
aam
aaa
lret
addb
mov
inc
push
mov
cltd
push
arpl
shll
or
in
aad
cmc
xchg
jb
sbb
out
sbb
ja
and
out
sub
sbb
sub
cs
and
faddl
ja
adc
hlt
push
mov
lods
sahf
jecxz
pop
rep
mov
push
dec
push
or
add
into
in
mov
mov
mov
fidivs
cs
jle
add
sub
add
jmp
xchg
adc
imul
sbb
mov
jbe
pop
xor
aam
sahf
out
in
loop
inc
jnp
test
int3
mov
pop
inc
lods
clc
ja
sbb
mov
or
and
stos
js
mov
inc
push
xor
imul
aad
pop
sbb
lods
fs
push
les
mov
int
adc
sub
pushf
cmpsl
sbb
dec
iret
xchg
repz
push
punpckhwd
mov
mov
push
mov
inc
popf
andb
sbb
cmp
mov
push
sbb
lcall
or
das
mov
xchg
mov
xchg
repnz
sbb
mov
sar
gs
cmp
mov
mov
or
std
daa
das
out
fistpl
mov
mov
adc
idiv
mov
arpl
inc
adcl
inc
loopne
into
adc
fsubrp
xchg
mov
push
repnz
jbe
int3
cltd
add
leave
fildll
imul
jbe
addl
sahf
sub
pop
std
xchg
jo
mov
jnp
sbb
cld
inc
inc
push
xor
sub
pop
test
cmp
roll
cmp
imulb
push
imul
clc
mov
cwtl
movsl
stc
mov
and
cmp
xor
lods
out
das
test
inc
xchg
imul
test
add
enter
loopne
out
sbb
push
lcall
shr
mov
or
xor
sbb
or
rorb
xchg
add
cmp
in
pop
stos
dec
cmp
cmp
inc
cmp
jl
sahf
gs
sbb
mov
in
mov
les
and
nop
out
loopne
cmp
xchg
imul
adc
mov
movsl
adc
xor
or
adc
and
cli
int3
and
jge
mov
push
outsb
xor
jbe
jmp
xchg
mov
je
pop
mov
mov
xchg
push
sbb
shlb
insb
adc
sbbb
mov
jns
movsb
aam
stc
aaa
aas
pop
dec
popf
scas
lcall
dec
fadd
lcall
push
idivl
ja
fsubs
mov
ss
pop
mov
push
outsl
inc
cmp
popa
cld
ret
mov
rclb
stc
mov
cmp
bound
test
xchg
scas
xchg
fists
or
movsb
dec
mov
cltd
fst
scas
or
data16
iret
adc
jb
ss
arpl
xchg
ja
lock
jle
ljmp
cmp
fistps
andl
out
cmp
mov
lahf
inc
jecxz
mov
push
pop
cltd
fsubrl
lock
ret
jmp
fcmovnu
pusha
into
fsubs
dec
or
xorb
jge
pop
xor
in
ja
adc
mov
pop
lcall
xchg
rol
out
addr16
aas
js
jns
cmpsl
mov
lods
add
sub
aaa
aad
outsb
and
push
pop
lcall
mov
mov
js
shlb
leave
stos
sbb
ret
adc
adc
mov
jne
xor
insl
lret
scas
cmp
pop
adc
lods
aam
testb
sub
fldenv
pop
jae
ret
fwait
nop
push
out
push
adcb
mov
push
xchg
cmp
and
nop
dec
clc
cs
int3
push
dec
lahf
sbb
mov
inc
pop
lods
lods
fmull
mov
daa
adc
cmpb
aam
mov
and
mov
inc
jge
fwait
mov
jecxz
mov
dec
sub
and
mov
jae
add
and
cld
add
inc
sub
in
data16
dec
fs
mov
sbb
or
push
or
fidivrs
mov
mov
je
add
dec
inc
pop
icebp
add
mov
mov
xchg
inc
in
lods
add
enter
mov
in
or
cltd
and
mov
and
fistpll
mov
push
ror
lret
cmp
mov
les
in
xchg
ljmp
sti
je
shl
xchg
in
dec
out
jne
mov
inc
rcll
or
cs
dec
out
movsb
ss
aas
mov
inc
jbe
xchg
je
ret
cmp
out
ljmp
cwtl
lods
lds
jnp
xor
out
mov
or
mov
cmp
inc
test
arpl
mov
xor
mov
loope
lock
fcoml
push
outsb
and
cmp
mov
push
mov
mov
sbb
popa
js
out
push
insb
loop
dec
jno
jo
gs
inc
xor
aas
sbb
mov
lcall
das
aam
pop
pop
ss
cli
gs
stos
adc
cmpsl
sti
adc
notb
scas
jae
xor
cs
sub
out
xor
dec
test
shll
jo
sbb
sub
adc
inc
add
sar
xor
jmp
xorb
stos
or
sbb
fisubs
test
pushf
repz
mov
push
lock
int
lret
dec
test
stc
fcomps
cmpsb
leave
add
inc
dec
xlat
mov
mov
mov
out
push
inc
or
dec
je
adc
push
jmp
lds
and
in
xchg
sub
inc
into
cwtl
cmc
or
les
shrl
and
pop
and
or
mov
mov
jo
mov
aas
jmp
loop
push
mov
les
mov
clc
cld
xchg
add
mov
mov
jnp
xchg
cld
add
or
cwtl
jae
leave
push
das
sbb
pop
sub
es
imul
bnd
test
lds
mov
repnz
push
fdivr
cld
pop
pop
aaa
cmpsl
and
cmp
push
pop
sub
aas
adc
cli
lret
cmp
sbb
pop
push
cmp
aaa
outsl
xchg
arpl
mov
mov
cltd
fcomp
pop
mov
lods
orb
mov
cs
ret
dec
movsb
push
mov
pop
cld
mov
jmp
pusha
fistps
push
sbb
cwtl
pop
cmp
pop
cld
andb
nop
push
imul
leave
leave
add
xor
aam
dec
clc
mov
arpl
add
or
adc
aas
xchg
mov
cltd
pop
adcl
insb
cmp
mov
mov
sub
or
fadds
xchg
pushf
insb
mov
pop
adc
pop
into
mov
inc
or
xchg
sbb
dec
into
and
repnz
xor
add
ds
push
inc
xchg
cli
pusha
pushf
jecxz
imul
mov
push
add
mov
imul
sub
xchg
or
fildl
xor
sub
dec
inc
nop
mov
sti
popf
mov
jbe
setns
pop
inc
stos
cltd
divl
mov
loope
push
loop
stc
sbb
adc
cmpsb
dec
out
xchg
jno
pop
inc
inc
lcall
push
rolb
adc
mov
je
call
mov
push
mov
jae
dec
sub
push
sub
mov
xchg
jae
mov
sbb
push
scas
les
adc
dec
mov
cmp
dec
mov
sub
movsb
cmp
or
scas
pop
dec
in
jns
shlb
jle
jecxz
je
in
loop
add
pop
push
and
movsl
xor
xlat
jnp
lods
dec
popf
out
jnp
aaa
sbbl
ror
pop
insb
rorl
inc
xor
push
lahf
pop
dec
fwait
mov
xor
in
rep
cmpb
push
xor
xchg
punpckldq
dec
inc
lahf
or
test
jp
stc
mov
dec
pop
inc
outsl
in
aaa
inc
call
test
pop
dec
mov
xchg
ja
mov
fistl
es
aad
fwait
leave
popf
xchg
push
push
sub
cmc
divl
clc
mov
dec
loope
xor
in
call
shlb
out
subb
sbb
iret
mov
test
out
push
mov
pushf
rcrb
sbb
int3
arpl
mov
insb
std
inc
sbb
mov
movsl
sahf
mov
adcb
and
fcmove
pop
subb
mov
lcall
sbb
fdivrl
shlb
add
lods
roll
inc
in
or
mov
xorb
pop
jns
out
xor
sub
arpl
inc
push
sub
popf
cmp
je
jae
mov
xchg
dec
fidivs
cmpsl
js
pop
sti
sbb
sarb
aad
xchg
mov
ret
fadd
jg
and
sub
dec
cltd
adc
add
sbb
mov
xchg
dec
imul
bnd
sbb
popa
pop
ds
and
es
push
jecxz
mov
in
aam
insb
pop
mov
mov
gs
push
ret
imul
mov
mov
aam
adc
fwait
popf
into
out
mov
push
cmp
push
arpl
jmp
repnz
push
lea
cmpsb
fs
jle
sbb
xchg
in
xchg
fadd
iret
cmp
or
xchg
loopne
shlb
out
mov
xor
clc
out
loop
mov
sub
cmp
jl
fbld
in
cmp
imul
push
notl
and
jmp
sub
or
rol
mov
sbb
incb
sub
lret
sbb
sbb
add
inc
in
sbb
or
cmp
pop
insb
addl
add
int3
out
fimuls
lock
sub
and
jb
mov
add
sti
xor
xor
arpl
shr
cmpl
popa
lret
mov
aas
test
jmp
sbb
test
add
lea
push
neg
push
xchg
jmp
adc
lds
stos
cmp
adc
orl
mov
lods
sbb
pop
fnstenv
xchg
sub
cmp
jb
add
in
lock
dec
fiadds
test
dec
movsl
push
rcr
mov
xor
xchg
rclb
shll
mov
xchg
imul
addb
dec
neg
mov
xchg
shrl
nop
lret
sahf
xor
cmp
ds
pop
insl
inc
cmc
push
dec
aam
jb
bound
or
xchg
sti
jb
sbb
loopne
cmpsl
pop
cwtl
mov
orl
scas
and
sub
adc
shlb
mov
test
push
push
icebp
iret
incb
inc
test
int
fdivp
mov
bound
leave
int
inc
sahf
dec
pop
mov
mov
int
aas
stos
sahf
mov
mov
push
push
stos
lcall
xchg
aas
jne
mov
and
lods
cmp
or
fwait
test
mov
mov
add
jns
ffree
mov
sti
cmc
push
xchg
aaa
xchg
mov
js
mov
xlat
ret
xor
scas
mov
cmp
aaa
lcall
les
das
jmp
mov
insb
lods
and
adc
sub
jge
movsl
icebp
or
sbb
bound
xlat
xchg
mov
ret
cld
cs
in
pusha
jp
lea
cmp
and
push
enter
lret
or
mov
sbb
lea
inc
fnstenv
cmpsl
fs
xchg
insl
imul
or
stos
cwtl
pop
jge
or
icebp
insl
and
andb
test
dec
pop
pushf
xlat
mov
in
add
fstps
push
and
repnz
out
pop
inc
mov
jo
mov
andl
jmp
jmp
decl
push
mov
inc
and
mov
or
adc
cmc
adc
jo
xchg
int3
sbb
add
ds
ffree
inc
mov
imul
xchg
lret
jmp
out
jnp
insl
push
cltd
xchg
or
stc
sbb
and
xor
xor
xchg
or
mov
dec
loope
lods
add
adc
jne
fistpl
mov
into
sar
pop
and
scas
mov
xor
ja
idivb
hlt
inc
nop
fsubrp
movsl
in
jecxz
cld
hlt
push
mov
call
imul
push
notl
mov
sbb
fistl
xchg
jnp
push
or
dec
push
lret
mov
lock
popf
xor
rcrb
push
insl
mov
fdivr
test
or
cld
jmp
stc
mov
int
and
clc
mov
or
lods
int3
mov
jge
xchg
fwait
xchg
xchg
fstl
jp
cld
push
mov
cld
ja
sub
sti
in
jecxz
shrb
jbe
sub
iret
inc
xor
sbb
mov
push
mov
test
loop
sbb
in
jge
notb
jo
bnd
test
aam
loopne
pop
jl
cmp
pop
add
mov
nop
cld
jo
repnz
call
fs
sub
shr
loope
and
and
cmpsl
cmc
ds
sbb
or
ss
pop
lds
ds
xor
int3
cs
or
cmp
or
in
and
sub
xor
mov
divb
repz
scas
jo
int3
mov
adcb
hlt
sbb
je
mov
outsl
test
lock
cmp
fcoml
push
cltd
in
jnp
push
pop
lods
jge
sub
rolb
aaa
adc
cmpsb
adc
sahf
les
loopne
loope
rorb
inc
cwtl
and
mov
mov
push
in
xor
cmp
cmpsb
leave
or
push
dec
je
cmc
inc
loope
push
dec
jmp
mov
add
mov
push
pop
shl
xor
pop
iret
jne
xchg
xor
ret
imul
xchg
in
push
mov
sbb
pop
adc
loop
pop
scas
je
das
pop
sub
xor
in
mov
mov
and
push
inc
enter
imul
aam
mov
jae
inc
and
and
les
into
fadds
mov
mov
into
jmp
stc
movl
popa
lods
hlt
push
aas
sub
jge
je
push
test
mov
xor
sbb
xchg
loope
cmp
cmp
pop
inc
cmp
sti
inc
lods
divb
divl
fsubs
aad
outsl
push
stc
mov
pop
jae
dec
test
and
ljmp
adc
xor
and
or
xchg
sbb
loopne
cmpsl
mov
cld
sbb
sub
imul
fsubrs
xchg
mov
adc
shrl
lods
cwtl
jo
xor
jae
cmpsb
pop
sbb
lds
aad
xchg
xchg
out
clc
iret
lcall
or
ret
imul
in
mov
push
sti
pop
dec
je
push
fstpt
jb
cmp
pop
xor
push
pop
lods
cmp
jg
mov
out
xor
mov
push
in
ret
imul
add
push
push
pop
mov
inc
jae
mov
jno
xor
fiaddl
pop
xor
out
inc
test
xorl
jb
in
fucomp
iret
pop
sbb
mov
mov
sbb
stc
and
push
fstpl
icebp
xchg
push
adc
outsb
sub
js
pushf
fsubs
xorl
out
mov
pop
sub
movsl
out
rcrb
lds
cmpl
sbb
xlat
or
pushf
push
mov
subb
popa
pcmpgtd
or
aad
scas
cmp
jne
mov
bound
pop
xchg
mov
add
xor
mov
cmpl
dec
pop
or
adc
cmp
xor
jnp
cmp
dec
mov
sbb
mov
repz
ret
xchg
jle
in
jo
out
out
ret
xorl
mov
xchg
push
mov
adc
push
sub
test
shll
sub
adc
or
movsl
or
push
out
xor
mov
dec
outsb
int3
fstps
out
mov
subb
sbb
mov
pop
cmc
fiadds
test
movsl
ficoms
or
jo
jb
jecxz
fidivs
xchg
rolb
fsincos
addl
mov
shll
xor
cmp
repz
jb
push
sbb
pop
xchg
stos
cmp
dec
xor
add
je
insb
sti
sub
in
fwait
incb
aas
lahf
adc
inc
int
jns
jl
dec
mov
repz
mov
push
fadd
cmpsl
lcall
mov
mov
push
sub
cs
outsl
pushf
adc
cmp
xor
dec
pop
popa
mov
adc
push
pushf
cmp
inc
je
js
addr16
xchg
push
fisubs
pop
jp
cmp
mov
aaa
sub
lods
fisubrs
jecxz
pop
or
or
stos
cmp
cmp
xor
les
in
aam
pop
add
pop
or
sub
and
sub
sub
xor
fwait
ss
inc
mov
adc
repnz
sbb
sbb
dec
xchg
push
push
fwait
xor
dec
add
test
cmp
xor
sub
shll
adc
cli
push
jns
cmp
cwtl
outsl
fdivrl
jp
xchg
xchg
cmp
jne
xchg
mov
push
xchg
aam
cmp
lds
pop
mov
xchg
bound
cmp
test
mov
outsb
mov
rclb
mov
bound
outsl
bound
inc
lret
cwtl
imul
daa
xchg
dec
sbb
and
out
jg
mov
mov
rcll
stos
jo
addb
cmc
cmc
cmc
test
mulb
call
leave
testl
jne
hlt
stc
repnz
sbb
outsl
pop
cmc
adc
or
lcall
or
out
push
lds
add
aam
jbe
xorb
mov
push
imul
nop
mov
cmp
mov
pop
pop
pop
xchg
test
xor
and
mov
fldl
inc
outsl
fildll
mov
cmp
loopne
call
daa
loopne
mov
add
mov
das
jg
sti
pop
cmp
idiv
inc
mov
mov
pop
aam
cmp
mov
gs
lret
mov
xchg
cmc
pusha
mov
xchg
xor
push
sub
shrl
ret
and
or
jle
aas
aaa
cli
testb
cmp
in
mov
lcall
fdivrl
test
aaa
mov
jl
stos
lods
xor
push
push
loop
sub
pop
in
sub
gs
and
addb
scas
scas
mov
call
mov
lret
jl
add
pop
push
push
xchg
adc
insb
jg
add
movsb
xchg
mov
jmp
popa
mov
loop,pt
fcmovnbe
xchg
dec
stos
sbb
cltd
xor
push
inc
cmp
pop
je
mov
adc
mov
jge
and
ja
fs
xlat
cmp
push
cmpsl
mov
jle
ja
hlt
sub
mov
mov
pop
testb
or
jle
scas
ja
arpl
push
mulb
scas
ds
jb
cvtpi2ps
cltd
push
fistpll
ret
aam
cmpsl
mov
adc
sbb
test
inc
sbb
cld
cmc
or
aaa
fidivrs
add
je
and
aam
and
mov
aam
mov
sarl
xor
mov
sti
cmp
lock
mov
sub
fisttpll
jl
outsb
lret
iret
sbb
add
push
ja
and
jg
adc
push
call
adc
pushw
sub
jbe
movsl
mov
sarl
cld
roll
mov
cmpsl
cmp
pop
popa
xor
aam
push
jne
or
mov
inc
js
test
mov
sub
std
inc
cmp
rcrb
mov
and
int
out
test
xchg
clc
dec
push
and
lahf
sbb
repnz
sub
fcmovne
jb
repnz
dec
xor
dec
das
jbe
push
or
cld
int
rclb
mov
and
xor
add
movsb
mov
imul
jb
sub
mov
jge
std
cld
push
inc
inc
mov
out
mov
cld
jns
jge
test
out
lods
test
mov
fidivl
lret
out
insb
jae
cmp
and
jnp
popf
fwait
cmp
dec
nop
dec
add
test
mov
jge
enter
rol
or
dec
and
push
incl
insl
mov
add
shlb
pop
sub
inc
xor
mov
flds
les
ret
movsb
pushf
fimull
pop
and
add
insb
jnp
enter
es
cs
subb
xlat
lds
sbb
pop
inc
xor
movsb
int
push
inc
inc
popf
push
push
add
jp
jbe
pop
vmread
call
add
mov
pop
jecxz
out
dec
mov
adc
inc
xor
into
test
nop
sbb
add
lret
cs
scas
ficomps
or
inc
in
cld
mov
push
add
xchg
or
jb
fimuls
dec
pop
cmc
sub
mov
mov
aas
rol
fdivrl
popw
push
mov
cmp
adc
sti
xchg
xchg
pop
xlat
jne
push
dec
xchg
mov
push
pop
jne
test
mov
jnp
xchg
cmp
jne
sub
rcl
mov
push
fisttpl
pusha
and
pop
ss
mov
pushl
ljmp
jle
lea
icebp
pop
notb
mov
or
loop
iret
jnp
test
pop
xchg
repz
mov
mov
pop
stc
test
and
call
push
loop
and
data16
jns
imull
mov
ffree
mov
inc
test
xchg
fldl
and
ja
cltd
fimull
dec
mov
int
mov
jecxz
mov
cmpsb
je
xorl
cmp
sahf
ss
inc
cmp
pop
adcl
pop
and
sbb
sbb
push
jge
mov
fwait
jge
push
and
inc
mov
sub
rcr
sbbb
scas
leave
dec
leave
leave
mov
or
sti
push
jge
lds
and
ret
sbbb
xchg
sbb
sahf
dec
cli
jmp
test
sub
mulb
xchg
or
insb
add
imul
out
test
lock
aam
mov
sbb
mov
int
stos
push
stc
mov
aam
mov
adc
out
mov
arpl
dec
repz
sub
lahf
mov
fmul
cmovne
push
shll
ret
sbb
cmp
and
scas
enter
lods
pop
daa
dec
or
jae
jno
xchg
adc
xlat
and
cltd
cmp
clc
mov
push
iret
out
jno
and
ret
sbb
jo
and
pop
fcomip
pop
cli
xchg
adc
daa
sarl
sub
dec
stc
es
mov
mov
xchg
push
dec
fcomp
ja
mov
pop
aad
mov
outsl
sahf
adc
or
xlat
lds
outsl
inc
and
xor
add
jo
sbb
xchg
xor
xor
push
enter
mov
and
dec
adc
aas
sub
mov
inc
outsb
cmp
pusha
testl
adc
xor
jb
cmp
push
or
inc
cli
push
movsl
int
pop
and
test
jg
dec
xor
jnp
mov
dec
mov
aam
js
mov
aad
test
push
add
andl
notb
dec
fwait
mov
rorl
fbld
dec
int
xlat
popa
aas
cmp
jl
xor
int3
arpl
xchg
cs
movsb
daa
lods
adc
inc
and
int3
aam
adc
iret
les
hlt
mov
push
lahf
xor
mov
popa
sub
jp
inc
int
pop
jno
or
test
xchg
pop
and
outsb
clc
mov
push
std
in
loopne
iret
loope
addb
xor
and
clc
popa
out
repnz
and
test
and
in
adc
xlat
in
mov
fcomps
and
jp
imul
push
daa
jecxz
outsl
push
add
in
movsl
adcb
xchg
jo
lock
adc
sub
mov
int3
iret
dec
mov
pop
sub
in
sub
test
xlat
cmc
cltd
sbb
cmpsl
cmp
es
adc
aam
sub
arpl
imul
mov
xor
sbb
xor
mov
sbb
outsl
stos
add
cmpsb
movsl
stos
fistpl
or
mov
insb
xor
xor
in
int3
mov
mov
adc
xchg
xor
stos
and
hlt
lahf
loop
incl
cmc
xor
xchg
mov
cmp
popf
jns
ret
aam
cwtl
ffree
aas
adc
fistps
cmp
or
repnz
lcall
jbe
pop
push
xor
das
xchg
int3
mov
xchg
fwait
pop
sub
insb
and
push
data16
push
mov
sub
nop
xchg
xchg
inc
icebp
test
jno
mov
and
cmpsb
mov
fists
push
mov
roll
ret
push
or
mulb
mov
pop
adc
push
jp
enter
sub
mov
push
lret
aad
cmp
ss
in
sub
sub
sub
jge
ret
pushf
add
out
inc
hlt
outsl
or
or
rcrb
adc
jle
int
bound
adc
cwtl
imul
das
cmpsl
sbb
push
rcll
mov
in
jae
lock
jle
sbb
mov
adc
dec
ljmp
xchg
inc
lods
adcb
cmp
repz
repz
lods
out
test
cmp
mov
push
ret
inc
jbe
cwtl
push
sub
cmp
scas
sub
sarb
in
cmp
out
lea
lods
sahf
inc
jne
jmp
outsl
dec
inc
sub
dec
lock
in
arpl
mov
mov
sar
lods
lock
cmp
jl
cmc
pop
xchg
sahf
mov
cmp
and
std
test
ja
negb
xchg
das
daa
adc
loop
adc
cmp
rorb
mov
ret
ret
rcll
cwtl
fidivs
ret
cltd
and
sbb
xor
out
leave
sbbb
jne
jae
insl
leave
out
add
ss
adc
test
dec
enter
insl
and
xchg
mov
mov
sub
inc
cmp
dec
jmp
sbbb
sub
xchg
push
jae
pop
ror
jns
cld
mov
xchg
insb
dec
imul
loop
inc
push
push
fisubl
inc
dec
adcl
or
xchg
int
stc
inc
in
sub
or
mov
je
je
in
insl
out
movsl
outsb
mov
mov
ljmp
lods
jbe
sub
in
mov
data16
int
sti
test
inc
push
fbstp
enter
gs
fwait
push
cmpl
xchg
adc
dec
std
inc
daa
mov
test
mov
scas
hlt
lods
stc
jo
cli
jmp
push
cmpsl
sub
jne
cmpsb
jbe
cwtl
jno
pop
push
mov
mov
mov
repnz
sub
cmp
scas
push
fimull
push
pop
lahf
mov
scas
mov
mov
lods
push
pop
jno
adc
dec
inc
jecxz
inc
ja
ds
pop
shr
outsb
popf
lahf
push
inc
cmp
push
cmp
jg
adc
jb
pop
popa
shll
outsb
sbb
push
int
icebp
aad
out
and
jne
icebp
aas
out
add
loop
ret
and
push
ret
inc
adc
sub
in
jbe
xor
and
inc
testl
mov
std
add
rorb
jle
ficomps
push
pavgw
es
out
xor
pop
inc
jmp
lods
inc
sub
or
outsb
jo
cmp
sub
rolb
lods
push
mov
loope
inc
sbb
adc
ss
inc
jb
pop
jbe
scas
movsl
or
sbb
add
pop
movsb
adc
mov
xchg
clc
mov
rorl
es
cmp
xchg
movsb
pop
fisttpl
std
jecxz
or
xchg
ror
andb
pop
sbb
xchg
aad
add
jb
loope
push
aas
test
loopne
in
mov
inc
incl
divl
enter
into
and
push
push
dec
movsb
idiv
sub
nop
loopne
inc
mov
mov
loope
sbb
jae
dec
push
divb
imul
sub
inc
push
mov
mov
ret
sub
sbb
ret
repz
jnp
inc
das
push
and
mov
and
mov
das
into
unpckhps
dec
xchg
fimull
pop
lock
mov
pop
cmp
cwtl
sub
xor
push
jnp
mov
push
pushfw
bound
movsl
push
punpckhbw
stos
shll
cmp
dec
aas
pop
sub
mov
adc
fldl
jnp
pusha
nopl
mov
std
imul
mov
fsubrl
xor
orl
jnp
fwait
mov
inc
fisubs
gs
dec
in
pop
enter
adc
or
mov
cmp
aam
sbb
dec
adc
inc
fimull
sbb
xchg
jne
mov
or
adc
and
out
outsb
je
icebp
mov
jo
xchg
sbb
pop
scas
xchg
mov
stos
mov
jmp
add
int
sub
pop
xchg
mov
sbb
rolb
out
push
inc
adc
pop
pop
mov
inc
rol
xchg
mov
add
and
stc
fistl
fcom
pushf
subb
pop
std
in
idivl
inc
rcrb
push
std
iret
xor
fcmovne
lock
fwait
push
in
inc
test
arpl
dec
xchg
jl
pop
addl
mov
shll
repnz
dec
in
mov
mov
jecxz
fdivrs
lods
adc
out
sar
ds
imul
xchg
or
js
pop
or
push
outsl
or
imul
and
gs
std
leave
pusha
clc
mov
mov
mov
mov
fistps
and
stc
mov
sbb
popl
pop
jnp
pushf
rcll
popf
adc
xor
and
pop
out
jnp
sbb
lds
cmp
je
mov
cmpsl
fisubrs
jle
test
sub
push
inc
decl
jnp
loop
lea
in
outsl
pop
dec
ret
mov
fmuls
test
leave
and
xchg
inc
sbb
cmp
sub
out
fidivs
cld
movsb
sbb
mov
popa
in
inc
mull
stc
fimuls
iret
popf
out
push
loop
mov
inc
cmp
popf
nop
cmpsb
and
stos
push
sbb
lret
xor
scas
outsl
dec
and
inc
clc
cmp
cmp
shlb
adc
mov
mov
in
cmp
jb
inc
decl
nop
push
js
rclb
mov
sbb
or
xchg
shr
jae
iret
pop
sub
incb
sbb
aad
movsb
push
scas
int
dec
cmp
sbb
pop
cmp
lock
pop
mov
nop
cmp
mov
mov
test
and
int
sub
subb
cmp
sbb
cmp
jl
pop
das
clc
cmp
or
les
shlb
pushf
dec
or
je
lock
fstl
loope
push
xchg
pop
movsl
dec
addb
and
lock
sbb
pop
pop
stos
or
push
xchg
jns
mov
push
jle
add
ja
cmpsb
mov
cli
push
stc
pop
orb
push
jae
popa
add
mov
dec
aas
inc
or
fstps
fisttpll
repz
add
xchg
push
gs
xchg
push
dec
xorl
call
and
push
mov
xchg
fisubs
sbb
dec
xchg
sub
sbb
outsb
add
jp
fldcw
xchg
xor
sub
popa
adc
sbb
inc
pop
jae
shl
outsl
iret
jne
test
shll
mov
mov
mov
mov
jecxz
aaa
mov
dec
aam
movsl
sbb
add
adc
xchg
sub
mov
and
or
pusha
aad
cmp
push
adc
cmp
negb
pop
jp
jne
xchg
cmc
sarb
dec
push
aam
add
sub
enter
mov
pop
cs
ret
and
int3
and
cmp
xchg
testb
addl
sbb
add
movsl
push
hlt
shll
lds
push
icebp
jl
pop
push
adc
lcall
and
shr
js
rorl
sbb
in
sbb
lret
push
or
ss
xor
pusha
and
push
in
cli
cmpsb
mov
insl
and
inc
jmp
ja
sbb
mov
sti
mov
and
test
dec
push
dec
in
push
mov
loope
add
cmpsl
adc
pop
movsb
pushf
jb
pushf
sbb
mov
aam
testb
xchg
popa
in
pushf
cli
xchg
xchg
cwtl
pop
inc
sarb
pushf
pop
fwait
lea
aas
or
pop
xor
icebp
lods
adc
lods
cmp
mov
cmp
mov
orb
call
aam
out
cmc
int
das
mov
mov
nop
mov
sub
inc
movsl
mov
push
add
je
out
and
push
xor
pop
cmp
sub
sbb
das
or
arpl
rorb
sbb
xchg
and
push
popf
les
xor
pop
and
out
dec
fwait
test
pop
and
mov
out
pop
std
jecxz
mov
jb
jae
inc
push
and
ds
mov
ret
loop
push
or
out
ds
push
inc
fistpl
in
movsl
jle
sbb
sbb
sbb
test
jg
mov
out
je
cmpsl
push
ds
and
push
out
movsl
mov
pop
or
inc
mov
xchg
ljmp
push
jae
pop
pop
roll
sti
xor
int3
inc
lods
pushf
repz
fwait
lods
lahf
mov
dec
cwtl
push
xchg
popa
cmp
xorb
adcl
sub
mov
orl
pop
test
xchg
adc
scas
mov
rcrb
movsb
dec
stos
dec
in
loope
mov
inc
add
sub
shll
pop
cmp
mov
and
lahf
jle
fs
icebp
push
test
xchg
ljmp
out
insb
mov
ret
popa
mov
push
pop
loopne
inc
repnz
aad
ds
inc
xchg
cmp
mov
add
pusha
arpl
inc
pop
mov
cld
add
inc
repnz
xor
pop
jle
adc
xchg
inc
movsb
gs
out
lret
jne
xchg
jnp
mov
stos
fxch
lret
pop
test
inc
mov
mov
ljmp
xchg
xchg
dec
xor
sub
sbb
xchg
add
push
mov
movsb
lret
push
or
sbb
adc
lret
mov
pop
std
adcl
add
aam
push
aaa
incb
jns
mov
mov
cmpsb
mov
adc
and
lods
mov
lds
movsl
sbb
jl
lods
cmp
fistpll
leave
ret
sbb
mov
fmuls
push
push
cmp
lods
popf
inc
test
lock
jbe
and
jg
rorl
divb
inc
pop
mov
rorb
outsl
sub
inc
add
out
roll
stos
add
xor
adc
jb
mov
lods
icebp
push
and
js
xor
jns
xchg
mov
sbb
dec
lcall
dec
xor
pop
sub
popa
and
cli
fstpl
xchg
push
movsb
sub
sti
sbb
es
cli
sti
push
add
push
ret
sub
movsl
movsb
mov
mov
push
pusha
leave
mov
mov
mov
or
jns
pop
xor
addb
out
mov
fs
push
and
push
adc
faddp
lds
pop
stc
ficomps
xor
sarl
mov
ds
testl
pop
sbb
call
popf
push
aad
mov
mov
lret
int3
data16
pop
sub
insl
popf
jae
xchg
stos
mov
nop
jb
jnp
stos
decl
les
cltd
push
out
sarb
cmc
sti
shrl
mov
test
mov
or
test
lods
roll
push
xchg
adc
in
cmp
frstor
and
mov
mov
ljmp
sub
pop
jne
xchg
in
test
cmc
sub
data16
mov
or
xchg
adc
and
jae
repz
adcl
xchg
dec
mov
fisubrl
mov
sbb
pop
aaa
pushf
pop
mov
es
call
sub
clc
loopne
or
sub
xor
arpl
out
mov
dec
scas
cmp
subl
adc
cmp
arpl
inc
pop
lods
sbb
xchg
in
rclb
ficompl
cmpsl
jae
aad
inc
sarb
lods
sbb
mov
inc
pushf
jbe
and
cwtl
dec
daa
dec
pop
xchg
sub
loop
sub
cmp
mov
mov
int
jle
jbe
les
push
xor
jp
stos
call
idivb
push
movsb
push
dec
pop
aad
das
lea
int
xchg
int3
xchg
xchg
xlat
mov
jecxz
jmp
mov
sbb
outsb
in
mul
mov
mov
mov
repz
jns
push
lods
cmc
sti
mov
js
add
cld
sbb
dec
bound
fisubs
insl
ljmp
sti
out
push
loope
add
out
sbb
xchg
jp
mov
lret
xchg
mov
or
call
fdivrs
pop
lods
fldl
jne
popa
js
cmp
xchg
daa
hlt
fisubl
mov
sub
mov
sub
scas
int3
dec
shlb
in
inc
leave
add
popf
mov
sub
mov
imul
in
push
dec
test
fistl
sti
sbb
icebp
cmp
aas
sbbl
mov
insb
and
subb
mov
repnz
and
and
push
mov
popf
xor
imul
jb
mov
incl
sbb
mov
push
cmc
cmc
inc
pop
clc
sbb
in
add
pusha
jmp
inc
mov
repz
daa
repz
xchg
test
xchg
call
cmpl
into
mov
mov
mov
pop
out
das
dec
adc
outsl
push
adc
dec
aad
not
imul
cs
out
into
sub
lock
roll
movsb
icebp
sub
pop
adc
sbb
test
xchg
pop
cmc
repnz
mov
lcall
sti
dec
pop
or
jo
sub
pop
add
or
mov
daa
test
xchg
inc
sbb
sub
and
and
fwait
js
fdivrs
shl
inc
xor
dec
xlat
mov
mov
fnstenv
sub
insl
xchg
imul
lods
inc
mov
mov
lds
push
js
data16
xchg
dec
mov
adc
mov
mov
xorl
hlt
int
pop
fisttpll
adc
call
ja
mov
add
or
jge
enter
or
pop
cli
imul
sti
inc
jl
sub
xor
xlat
sub
xchg
arpl
mov
pop
jmp
mov
loop
sub
loop
scas
stc
mov
repz
in
push
push
push
imul
dec
pop
mov
jmp
pop
and
or
out
sub
fs
adc
add
jne
pop
ss
xor
bound
imul
arpl
push
xor
add
scas
insb
js
cli
sahf
shlb
xor
mov
pop
xor
out
pop
cmpsb
stos
adc
arpl
mov
dec
stos
xor
int
or
push
cmp
sti
jmp
push
mov
xor
jmp
cmc
dec
movsb
sub
shl
adc
or
lds
pushf
push
scas
icebp
dec
or
cmc
jl
je
lea
pop
cmp
jbe
lahf
jo
leave
and
push
add
xchg
into
addl
and
rclb
mov
add
push
mov
jp
or
and
ss
lock
cs
pop
cmc
test
cld
xchg
jmp
jp
push
mov
push
adc
mov
loop
inc
mov
mov
call
rclb
data16
jecxz
int3
aas
shll
mov
jl
lods
mov
mov
fimuls
inc
adc
mov
fcompl
mov
jo
insl
xlat
scas
scas
lea
insl
js
ss
mov
add
test
xchg
cmp
xchg
and
mov
aaa
mov
sub
aad
pop
sbb
add
pop
aam
cmpsb
xor
ds
xorb
mov
add
cmp
adc
xor
fisttps
push
fxch
test
jp
js
mov
sbb
movsb
fnsave
ljmp
into
push
fnstcw
fbstp
mov
push
cmp
sub
fwait
orl
lcall
cld
mov
stc
and
sarl
aas
mov
xor
sub
jae
inc
and
dec
insb
cli
lock
cmp
into
cmpsl
fwait
xchg
and
sub
jle
int
pop
pop
clc
xor
push
outsl
cld
inc
jecxz
test
sub
add
inc
pop
xlat
xchg
test
imul
call
xchg
jbe
adc
cmpsl
xchg
and
clc
sub
or
jb
loop
dec
jp
out
mov
push
xchg
fimull
push
dec
jnp
mov
add
pop
jae
ljmp
pop
add
cmpl
fimuls
stos
adc
mov
lret
xchg
scas
orb
mov
mov
das
repz
dec
mov
insb
jo
ljmp
sahf
lret
and
ret
mov
mov
xlat
aas
shlb
cli
icebp
orb
gs
inc
push
mov
fsubrp
cmpsb
lea
push
pop
sarb
lds
cmpsl
push
xor
sub
inc
test
adc
mov
push
dec
xchg
adc
jae
pusha
or
cmc
or
fcomip
jbe
mov
mull
mov
sbb
mov
sahf
push
loope,pn
test
mov
cmc
lret
sub
nop
adc
xchg
or
push
push
in
jle
xchg
aad
push
sub
cwtl
sub
iret
cmpsb
mov
popa
imull
loope
cmc
mov
xchg
dec
cs
scas
or
dec
mov
test
lods
aas
mov
inc
popf
push
rorl
shrl
loope
leave
sub
fsubrl
bound
xchg
ret
xlat
xor
ja
outsb
enter
rcrl
movsl
mov
pop
adc
jmp
cmpl
in
fdivr
mov
nop
das
inc
icebp
popf
outsb
enter
faddl
fdivp
mov
sub
jmp
nop
movsb
lods
sbbb
or
adc
xchg
scas
and
mov
inc
dec
ja
lahf
mov
int
push
js
fs
clc
fbstp
frstor
imul
sbb
inc
add
fldt
add
fcomps
xor
ret
dec
pusha
mov
xchg
das
cli
sub
je
gs
dec
push
or
outsl
and
push
and
dec
pop
mov
dec
fwait
addr16
decb
jbe
incl
ret
clc
ret
shll
xor
sbb
pop
andb
dec
add
adc
push
fs
inc
cmp
adc
out
ljmp
out
push
cs
adc
push
sub
push
mov
mov
xlat
push
jmp
std
push
mov
push
sub
aam
xor
xor
mov
mov
mov
adc
jle
fwait
adc
xchg
shrl
leave
sbb
xorb
stos
dec
pop
dec
jge
mov
push
jbe
mov
into
movsb
sub
aad
sarl
iret
adc
out
xchg
cmp
or
or
inc
adc
jnp
lods
add
mov
pop
lods
mov
sbb
mov
cld
add
dec
xchg
and
xchg
pop
adc
xor
cmp
mov
fimull
push
cmp
xchg
jmp
xchg
outsb
mov
pop
push
shl
jne
fwait
shrl
ficoml
mov
cli
out
adc
dec
lock
sbb
jb
push
push
cmp
dec
pop
add
ja
jae
mov
xchg
sbb
jmp
dec
jnp
das
in
loope
push
cltd
icebp
or
inc
popa
cld
adc
adc
out
mov
hlt
xor
push
adc
mov
sarb
sub
fistps
scas
call
inc
fistpl
jb
and
dec
xchg
das
xchg
push
adc
mov
in
adc
iret
dec
pusha
jb
test
lock
add
shrb
jae
sub
mov
mov
ret
subb
xchg
push
xchg
mov
inc
mov
clc
rcr
push
test
mov
pop
xchg
pop
xor
repz
insl
push
pop
lds
outsb
cmp
faddp
jo
jl
movsl
mov
push
lret
repz
retw
fnstenv
fsubs
lea
les
ss
gs
stos
sub
lock
and
mov
cmp
or
adc
dec
mov
sub
xor
in
shll
sti
xchg
inc
shrl
mov
inc
jnp
pop
xor
insl
mov
and
outsb
xor
dec
data16
add
mov
hlt
das
ds
pop
pop
adc
pusha
or
cltd
lret
in
add
mov
je
push
add
scas
stos
cmpsl
inc
xchg
jl
jp
jno
test
xchg
and
dec
lret
push
mov
in
call
cld
or
add
ljmp
mov
jp
jbe
aas
popf
lret
push
fdiv
lods
xchg
pop
cs
xchg
cld
pop
pusha
inc
cld
insb
add
xorb
xchg
paddb
push
xchg
sbb
sub
scas
loopne,pt
out
data16
das
push
dec
lahf
icebp
bound
fwait
into
or
loope
or
mov
xchg
sub
adc
std
test
adc
repz
pop
mov
ds
pushf
js
mov
fimull
std
mov
in
out
cli
sbb
cld
in
sti
cwtl
pop
xor
xlat
cltd
arpl
add
pushf
add
dec
jnp
out
fcmovnu
rcrl
add
mov
popa
inc
popf
jns
mov
icebp
or
inc
jb
mov
cmp
or
pmulhuw
inc
scas
adc
xchg
jl
cwtl
mov
aaa
push
popf
lds
test
and
test
cmp
mov
cmp
fdivs
sahf
insb
pop
fbld
mov
rol
stos
setge
push
mov
jle
repz
out
sub
xchg
ficoms
add
loope
call
aaa
movsb
dec
dec
fstl
mov
pop
popl
pop
test
lcall
in
in
in
xorl
stc
rol
or
pop
sti
lock
xchg
in
scas
xlat
adc
xorl
jno
test
xor
bound
and
mov
pop
je
mov
dec
xchg
cltd
xchg
cmpsb
les
or
sbb
in
dec
adc
dec
xchg
ja
out
pop
adc
imul
xchg
daa
push
dec
in
jbe
or
shlb
sbb
mov
fimull
cmpsb
imul
add
scas
push
in
cli
sub
push
xchg
inc
ffree
loopne
lea
sbb
stos
sub
sarb
jb
stos
aaa
cmp
fldenv
and
inc
loope
mov
and
scas
push
outsl
sbb
xor
lock
test
shl
movsl
push
in
push
sub
lret
sti
outsl
pop
dec
and
addb
and
ret
insl
jnp
clc
arpl
imul
addr16
inc
repnz
pop
roll
cwtl
xchg
stos
pop
push
inc
jae
cmpsl
fidivrs
jmp
pop
fdivl
push
inc
inc
mov
sbbl
scas
xchg
hlt
mov
fcomi
or
mov
fisubl
adc
jae
inc
inc
xor
sub
jo
dec
call
push
mov
adc
outsb
jecxz
mov
shrl
outsl
cs
test
lahf
or
repz
shl
add
fists
test
ja
aam
pop
add
pop
mov
scas
insl
inc
push
sbb
jge
jb
inc
ret
jmp
stc
fs
es
xor
sbbb
fimull
mov
aas
ljmp
out
das
cmp
mov
adc
or
fwait
js
aam
jne
lret
inc
ret
shrb
aaa
or
insb
mov
loope
popa
mov
mov
dec
test
jmp
pop
mov
jg
dec
inc
in
sub
out
push
pop
aam
push
push
mov
push
cld
mov
cld
lahf
mov
in
shl
sub
addr16
js
mov
lea
pop
xchg
andb
jl
jge
sub
sub
or
jl
in
sub
dec
dec
xchg
mov
mov
outsb
out
or
sub
push
clc
xor
cmc
mov
cli
inc
cltd
in
mov
jl
mov
sub
cli
sbb
pop
cltd
mov
lods
int
clc
insl
add
sub
fidivrl
loop
pop
cmp
divb
cmp
stos
repnz
ds
mov
inc
fxch
xorl
sahf
loopne
shrl
push
ja
int
mov
iret
je
xor
ret
push
stos
shl
push
adc
cmp
vpcmpgtb
xor
pop
lods
imul
and
cmpsb
mov
lds
jb
xchg
jae
nop
sub
adc
in
cltd
adc
scas
pop
mov
jl
jge
mov
xchg
jl
xchg
jl
cmp
cmp
jmp
pushf
mov
imul
cmc
enter
or
in
mov
mov
sbb
cli
add
lret
pop
fcompl
sbb
in
jb
or
xor
push
sete
jo
nop
test
push
and
jno
pop
xchg
leave
fldt
or
mov
pusha
int3
push
cmp
dec
je
cmp
inc
lret
mov
lahf
imul
std
xchg
xchg
in
pop
out
rolb
sub
loopne
ss
add
mov
adc
out
pusha
in
into
stc
les
or
jo
stos
repnz
dec
push
cwtl
jp
and
repnz
push
and
cmpb
inc
dec
cltd
addr16
dec
push
cli
inc
pop
cmc
lret
xchg
push
mov
lret
ficomps
and
add
lock
int
loopne
repnz
xorb
mov
cmpsl
popa
je
movsl
arpl
sti
sbb
enter
fistpll
mov
lea
add
inc
or
xchg
sbb
mov
test
mov
out
push
shlb
jne
hlt
xor
pop
dec
fnsave
icebp
cs
adc
and
push
ss
sahf
enter
iret
lock
pop
xor
push
icebp
xor
mov
iret
das
jmp
cltd
shrb
popa
sub
ljmp
mov
sbb
jb
pop
popa
ja
or
shll
xchg
or
cmp
hlt
loope
sub
in
idivl
orl
and
sti
sub
mov
pop
mov
in
in
xchg
mov
outsb
and
scas
mov
aam
pop
hlt
movsb
xchg
aad
jecxz
add
xchg
inc
dec
pop
outsl
cmp
jl
push
and
push
insb
dec
in
sub
pop
ds
into
or
jg
test
aas
mov
mov
xchg
mov
sbb
xchg
rol
or
adc
jge
pop
jl
out
int
cmp
jnp
in
pop
sbb
js
loopne
outsl
call
and
out
push
jge
adc
cltd
and
shlb
in
adc
stos
cmp
insb
nop
lods
scas
into
pop
shl
pop
xor
shll
clc
addb
mov
mov
push
setno
or
and
test
int3
mov
ljmp
jmp
insl
mov
rcr
fimuls
addr16
repz
popf
mov
aaa
cmp
in
fsubrs
jbe
shrb
pop
or
mov
mov
push
popf
xchg
rcrb
cli
aas
or
push
stos
adc
imul
sbb
out
jle
fcoms
lret
sahf
sti
adc
pop
jbe
add
in
data16
cmp
test
icebp
dec
jp
into
enter
push
mov
push
mov
loope
cltd
loop
jo
push
dec
xlat
or
scas
mov
scas
jle
divl
add
lods
lds
les
nop
test
dec
ret
mov
jmp
add
frstor
mov
or
fstps
mov
sarb
push
gs
adc
mov
out
mov
pop
or
jbe
xor
push
icebp
xchg
or
mov
rcll
pop
fildl
mov
test
push
mov
nop
pusha
mov
xchg
pop
push
dec
sub
shr
jmp
xrelease
jl
pop
sub
pcmpeqd
push
sarl
cmp
dec
popf
fdivs
push
das
inc
dec
mov
push
and
sub
sti
rcrl
adc
dec
sbb
inc
repz
jo
mov
push
test
pop
imul
aaa
add
xor
jns
push
inc
sub
jmp
or
test
icebp
popf
cmp
jbe
mov
cmp
fisubrs
out
xlat
jno
adc
xchg
idivb
mov
int3
and
fnstenv
xchg
aam
lods
sub
sbb
push
mov
lcall
lods
sub
std
adc
mov
fstps
mov
inc
jle
inc
lods
stos
cmp
mov
pop
in
enter
push
cs
add
mov
jbe
adc
mov
outsl
ljmp
jbe
pop
call
cmc
pop
add
ret
xchg
in
pop
rcrb
cmp
push
aam
ret
adc
lods
adcl
fcomps
pop
fnstcw
inc
or
jecxz
add
std
xchg
add
push
adc
out
pop
pushf
jecxz
lea
pop
call
sub
jecxz
mov
mov
aas
mov
push
inc
or
adc
lods
adc
mov
dec
mov
fst
pop
out
fdivs
or
es
sub
cmp
mov
xor
enter
movsb
and
test
mov
scas
mov
ret
sbb
xlat
sbb
pop
add
lret
lds
mov
xchg
nop
inc
push
pop
jmp
ss
daa
cmc
jae
lcall
stc
mov
xchg
ja
mov
aam
xchg
bound
jle
daa
mov
push
mul
push
icebp
lret
aaa
fnsave
clc
push
mov
cltd
mov
sub
dec
ja
pusha
loop
sbb
push
jns
ficoms
sub
bound
subb
and
rcrb
inc
outsl
mov
add
insb
adc
mov
pop
inc
je
jle
mov
into
flds
add
inc
lods
mov
lret
cmpsb
leave
and
push
cmp
imul
cmp
push
pop
xor
sbb
adc
cwtl
cwtl
fimull
mov
fucomi
push
aam
in
repnz
cld
xor
sbb
pop
adc
insb
cli
add
pushf
je
fcoml
ret
or
ret
fisubrs
inc
sti
addr16
push
jle
shl
int
dec
dec
les
movsb
pusha
xor
push
repz
dec
loopne
cmpsl
fdivrl
jns
hlt
cmp
cmp
cmpsb
xchg
negb
mov
jg
icebp
pop
mov
push
out
lods
ja
cmp
fisubrs
cli
cmp
cmpsl
ret
mov
pop
bound
and
sbb
dec
std
sub
mov
sti
xor
sub
into
ja
shr
popf
lahf
inc
loopne
imul
push
pop
adc
add
cmc
jae
sub
or
mov
xor
jae
mov
stos
push
arpl
popa
test
sbb
cmpsb
add
bnd
lods
xor
call
adc
push
lret
adc
adcl
clc
call
jb
mov
adc
jae
and
push
mov
dec
add
push
bound
int3
jmp
les
jno
pop
clc
sti
and
and
xor
jp,pn
iret
add
pop
inc
mov
jecxz,pt
pop
inc
jge
insb
fistps
mov
insl
ds
pop
and
sbb
adc
or
push
pop
xor
cld
mov
mov
and
cmc
pusha
or
or
fnsave
dec
inc
fwait
jmp
ja
ja
push
test
adc
adc
inc
insb
jge
dec
jmp
sub
nop
jno
adc
jl
adc
push
fstps
inc
rcr
mov
les
call
pop
jg
mov
fidivrs
push
add
faddl
fidivl
aas
fbld
jmp
cltd
fs
imul
iret
cmpsb
pop
cmp
cltd
mov
fisubrs
lcall
lcall
push
cs
movsb
test
mov
sbb
sub
pop
popa
adc
lea
mov
pop
test
inc
outsb
mov
ja
or
pop
push
add
mov
push
pop
cld
xchg
fwait
pusha
sub
cmpsb
and
inc
out
mov
ret
add
mov
test
dec
xlat
add
or
or
fldcw
ljmp
cltd
lea
lods
mov
adc
rcl
fiaddl
lcall
mov
pop
pop
adc
xchg
test
or
sub
sub
push
xor
adc
icebp
out
xchg
lods
arpl
aam
orb
movsb
in
cmp
push
xchg
mov
sahf
and
scas
pop
cltd
pop
cmp
cwtl
int
jge
adc
std
sbb
pushf
ds
xchg
pop
xor
push
cmovs
sarb
mov
outsb
cld
stos
add
into
mov
mov
int3
test
in
bnd
pop
jge
test
lahf
push
xor
lea
rorl
push
sbb
dec
push
popa
lcall
lea
sbb
ret
out
jb
mov
les
pop
icebp
pop
inc
sbbb
mov
cmc
mov
mov
insl
rcrb
lahf
sti
sbb
loop
lds
mov
ret
mov
scas
sub
cmp
call
cmp
enter
xchg
jae
push
xchg
lea
lods
jnp
pop
aam
xor
mov
adc
adc
insb
inc
iret
pop
jae
mov
pop
sti
mov
inc
cmp
dec
and
gs
pusha
jo
xchg
clc
jo
push
mov
lods
fimull
in
lahf
fdivp
jecxz
jno
push
xor
je
jno
lods
in
push
rolb
or
xchg
adc
and
push
xchg
xchg
aad
inc
popf
stos
dec
xchg
and
mov
or
in
adc
mov
cs
jo
sub
dec
dec
cmpsb
push
mov
nop
fwait
push
ds
xor
sahf
pop
test
dec
mov
add
cmpsb
jp
push
test
push
pop
aam
xchg
fxch
mov
inc
mov
inc
push
pop
stos
stc
and
es
repnz
push
dec
xchg
push
push
lcall
push
xorb
mov
add
and
repz
sub
pushf
mov
addl
push
mov
stc
popl
rolb
inc
fucomp
enter
xor
imul
arpl
mov
movsl
xchg
pushf
ret
cltd
loop
xchg
or
add
fsubs
idivl
jmp
cmp
sub
xor
and
lock
sub
sbb
and
dec
dec
mov
dec
pop
repnz
xor
mov
gs
out
jle
jo
enter
cmpsl
cmp
xorb
pop
push
sub
and
mov
push
shrl
push
jae
sub
dec
xchg
mov
imul
push
and
inc
decb
cld
or
popf
cmp
pop
pop
inc
cld
cmc
mov
jmp
xchg
shll
jae
ror
pop
add
xchg
fildl
add
into
in
dec
mov
sub
adc
in
pop
out
loope
fs
cmpsb
sti
xchg
sbb
and
fistl
jno
inc
loop
xor
mov
push
ret
fmuls
xor
push
repz
loop
imull
testb
dec
cmp
shlb
mov
add
mov
lret
scas
dec
adc
ss
xchg
mov
or
dec
lahf
add
ret
pop
out
pop
mov
pop
push
cmp
and
mov
add
add
or
outsl
inc
jecxz
jge
repz
cld
push
sti
leave
push
nop
pop
adc
cmp
stos
int
jecxz
gs
push
scas
and
jle
insb
scas
shl
shlb
sbb
ror
sbb
out
cmp
lcall
test
popa
push
xlat
mov
mov
fnstenv
add
shll
and
xchg
jbe
cmp
fstl
sti
insl
pop
add
push
jg
push
jle
std
add
lock
ret
pushf
enter
stc
xchg
call
adc
or
aam
lret
pop
xchg
xchg
ja
pop
inc
xchg
mov
outsl
loope
push
cmp
sti
pop
and
pushf
into
and
push
push
push
sahf
fcomps
lds
scas
push
lcall
adc
dec
rorl
mov
or
ret
push
mov
or
jecxz
daa
les
or
dec
lahf
dec
and
add
inc
subl
pop
out
pop
ljmp
xor
cmp
add
xor
add
sbb
pop
inc
in
outsb
mov
jno
divb
add
sbb
or
addr16
mov
sbb
andl
xlat
scas
lock
mov
ds
sarb
fldenv
aad
popf
daa
dec
adc
pop
test
std
mov
icebp
mov
push
stos
pop
je
sub
xor
hlt
sub
sbb
adc
xor
lcall
dec
loop
cmp
cli
scas
shr
fneni(8087
int
dec
jnp
xchg
fiaddl
adc
fisttps
add
lods
cmp
std
jmp
rcr
fwait
dec
into
mov
lods
mov
ja
out
outsl
int3
faddl
mov
pop
rcrb
adc
mov
inc
bound
clc
push
adc
stc
pop
cmp
cmpsb
jecxz
dec
int
and
sbb
je
xchg
lret
xchg
and
aam
cli
pop
call
pushf
fs
inc
ds
jle
xor
call
push
shl
std
adc
adc
inc
imul
mov
lea
push
ds
bound
movntq
out
scas
daa
cmpsl
mov
mov
and
push
cmp
push
lods
cmp
fisubl
mov
mov
pusha
and
jge
rcrl
dec
mov
push
dec
jle
jl
mov
les
repnz
jle
fnsave
mov
mov
clc
add
mov
mov
push
jg
ja
jne
bound
rcll
fcomps
clc
cmc
call
mov
xchg
mov
xor
or
enter
in
call
adc
fmul
test
xor
push
in
push
mov
sbb
and
shlb
aad
out
icebp
fs
mov
mov
jle
xor
adc
add
xor
pop
lret
sbb
push
out
adc
movsl
jmp
jg
or
lock
inc
or
sbb
inc
je
pop
sub
xchg
mov
and
ljmp
int3
and
inc
jle
popa
call
and
adc
dec
int
mov
cmpsb
ret
mov
cmp
leave
or
jns
cld
das
nop
sbb
inc
dec
nop
mov
imul
push
add
in
add
mov
jge
sub
dec
jge
std
and
das
mov
fistpl
jecxz
xchg
adc
adc
popf
test
call
scas
mov
nop
pop
stc
pushf
or
ret
mov
mov
ret
sub
gs
ds
cltd
mov
sbb
adc
and
push
mov
int3
repnz
mov
pop
mov
xor
jg
sti
mov
std
mov
sbb
mov
xchg
pop
mov
cmpsb
stos
out
xchg
mov
or
nop
cltd
ljmp
mov
popa
fnstenv
lret
aas
pop
jmp
mov
xor
pusha
popa
lods
jg
iret
jb
andl
or
xor
test
jne
in
push
cmpsb
lret
fcom
xor
lods
clc
jb
shlb
out
inc
add
jb
lods
je
sbb
dec
in
push
mov
pop
xchg
sub
pushf
and
adc
movsb
push
inc
mov
out
push
mov
lods
mov
adc
xchg
int3
movsb
test
xor
shrl
out
sbb
iret
add
cmc
adc
icebp
or
pop
pop
fcoms
les
pop
lahf
loop
les
push
repz
adc
int3
mov
lea
inc
push
xlat
lea
jle
dec
fadd
inc
mov
out
xchg
lods
int
js
fsubs
mov
daa
std
xor
cmpsl
xor
and
divl
sub
out
pop
push
arpl
cmp
dec
push
and
sub
sarl
lahf
adc
push
dec
imul
cmpsl
xor
xor
adc
adcb
movsw
xchg
mov
dec
stc
dec
aad
xchg
iret
sbb
shll
sahf
rcll
mov
adc
push
daa
mov
mov
loope
and
cmpsb
cwtl
jne
pop
push
js
cmp
mov
sub
ret
xor
inc
fstl
xor
or
mov
test
cltd
sbb
and
push
pop
in
hlt
into
xchg
sti
movsb
ja
int3
mov
shll
test
adc
ss
fisubs
sbb
aad
shl
int3
sub
jge
out
scas
mov
lods
push
adc
push
call
loope
and
aas
out
ret
jmp
pop
jg
or
inc
js
pop
add
fists
inc
push
xor
inc
scas
jle
lods
mov
fists
enter
in
inc
and
repnz
cs
or
sarb
fwait
sbb
inc
movsb
or
push
xchg
pop
lods
fsubp
jl
add
in
or
stc
movsb
inc
sbb
testb
push
lock
shufps
or
insl
mov
sbb
mov
daa
sahf
adc
dec
iret
sub
sub
pushf
arpl
lea
repz
adc
repz
pop
test
push
xor
cmp
jbe
pop
mov
xchg
mov
dec
pushf
mov
mov
movsb
sub
movl
jg
cmp
aaa
xchg
movsb
cltd
out
mov
xchg
aaa
and
jnp
push
add
add
adc
sub
pop
mov
and
test
mov
push
push
dec
xor
gs
mov
and
add
jno
test
clc
mov
jns
inc
cld
lret
mov
lods
imul
mov
jbe
aam
mov
lahf
clc
add
call
inc
or
fwait
ljmp
pop
adc
enter
xchg
arpl
dec
adc
addr16
out
ret
sbb
movsb
mov
roll
or
out
mov
loope
sbb
std
ret
push
aaa
loope
inc
push
sbbb
pushl
adc
add
movsl
lds
mov
sbb
jae
mov
out
bound
inc
cmp
pop
mov
or
out
adc
loope
add
test
dec
out
mov
xchg
lret
mov
jl
clc
in
push
or
jne
test
sub
pop
sub
xchg
pop
jp
xlat
pushf
cwtl
jae
mov
mov
or
movsl
jmp
xor
pop
jo
push
sbb
call
sub
fdivrl
icebp
mov
jae
mov
ret
xchg
dec
sbb
jnp
jge
pop
lahf
hlt
xor
mov
inc
jp
dec
pop
ret
pusha
in
fldcw
sbb
xor
jns
xchg
push
sub
dec
mov
jne
xor
cmp
inc
pop
movsl
push
mov
mov
or
aaa
jg
insb
add
mov
daa
mov
insl
adc
sarl
mov
mov
enter
xchg
mov
add
mov
xchg
mov
es
mov
daa
into
test
xchg
jae
cli
cmp
mov
aaa
and
inc
and
cli
aam
and
dec
push
xor
js
sub
adc
xor
adc
nop
cmp
jne
out
push
xlat
sti
mov
pusha
dec
pop
lretw
and
ds
push
adc
popa
fwait
xor
cmp
xor
mov
pop
addr16
ret
ljmp
fadds
jo
clc
sbbb
dec
xor
ss
outsl
xor
pop
pop
dec
roll
sbb
push
jb
pop
add
sbb
push
xorb
xor
push
xchg
outsl
cltd
fsub
add
fwait
sbb
xor
xchg
add
adc
xchg
dec
out
xor
sub
cmp
inc
es
xor
es
jb
iret
pushf
dec
xor
push
mov
cli
dec
std
cmpsl
inc
psubb
insl
stos
jo
lods
jbe
lock
in
xorl
aad
std
xchg
xor
fsubl
and
out
cs
push
fisubrs
mov
movsb
and
popf
sahf
cltd
dec
xchg
call
addl
cmp
add
jl
mov
xor
xchg
fbstp
and
pop
jg
adc
mov
outsb
fs
enter
test
inc
pop
mov
out
add
xrelease
xor
xor
jp
mov
mov
and
and
jl
mov
pop
sub
mov
sbbl
or
pop
loopne
xchg
sbb
mov
ret
and
xchg
imul
sub
sub
int3
int
jmp
xchg
in
gs
dec
and
shll
mov
fsubrl
cmp
in
push
leave
xchg
push
mov
jp
fld
rcr
jl
pop
cmp
fs
scas
mov
mov
sahf
inc
jno
lahf
or
inc
jmp
ss
loope
les
and
jmp
sub
loop
mov
insl
outsl
idivb
inc
sub
and
imul
lcall
rclb
sub
sbb
lret
mov
cltd
pop
test
es
call
lahf
mov
imul
mov
scas
or
test
add
mov
add
test
add
adc
mov
fstp
push
outsl
add
data16
push
or
ds
inc
outsb
pop
ja
push
std
loop
push
pop
data16
and
testl
cltd
rorb
or
lahf
lock
mov
mov
es
ljmp
jle
lret
sbb
sub
dec
jb
sbb
sub
mov
add
mov
jb
ficoms
adc
sub
clc
and
std
add
popa
dec
stc
cmp
jp
pop
stos
hlt
and
pop
movsl
mov
aas
repz
inc
cltd
lods
adcb
inc
adc
pop
adc
jmp
lret
cltd
push
pop
or
push
mov
xor
icebp
mov
jmp
imul
pop
dec
fisubrs
jp
mov
inc
sarb
je
insl
sub
xor
sub
lret
ljmp
in
aaa
das
dec
mov
sbb
js
add
divl
aas
xor
push
das
pop
ret
and
dec
notb
pop
mov
mov
mov
in
push
mov
jno
push
pop
dec
stc
pop
sub
testb
lds
pop
lea
ror
push
pop
inc
and
xchg
mov
aam
or
jo
addr16
pop
inc
fiadds
push
lea
mov
dec
xor
testl
lods
xchg
xchg
test
push
mov
ja
inc
jmp
sub
mov
or
mov
add
sub
scas
clc
cmpsb
adc
insb
push
cmp
mov
xchg
xlat
pop
jae
and
inc
pusha
outsb
lock
mov
or
cmpsl
loopne
sarb
gs
inc
outsb
sub
fsubr
xor
pop
mov
sub
sub
push
popa
gs
xor
xor
push
or
sbb
int3
or
out
cld
lret
push
inc
xchg
push
mov
cmpsb
mov
xor
gs
out
loope
leave
pushf
adc
dec
mov
fucom
aad
popa
insl
mov
or
lea
addr16
push
data16
clc
and
add
jne
int3
add
cmp
pop
push
cld
sub
ja
lock
das
dec
rorb
adcl
jecxz
out
xor
sub
daa
dec
mov
out
mov
pop
pop
rcll
fdivrl
daa
sbb
pop
xor
std
push
movsl
mov
and
mov
sbb
cmpsl
inc
frstor
add
jb
and
or
loopne
ja
mov
enter
fcompl
outsl
pop
insb
mov
jg
dec
xlat
inc
shlb
push
add
pop
shll
aam
pop
xchg
sarl
test
mov
dec
xor
in
arpl
add
out
mov
negl
adc
scas
icebp
ficoml
adc
cmp
sub
fstpl
mov
push
sub
rcrb
cmpsb
or
cmp
pusha
inc
cmp
mov
sbb
popf
in
mov
repz
sbb
leave
shlb
pushf
std
mov
jp
mov
xchg
rclb
jo
and
xchg
mov
les
out
pusha
sbb
lods
imul
jge
in
mov
aas
fldl2t
fadd
fld
add
mov
data16
pop
aad
es
jp
stos
mov
pusha
mov
sub
flds
xor
lds
rclb
aaa
jns
cwtl
jnp
mov
push
add
jge
ret
add
jmp
nop
aam
xchg
fst
pop
inc
xchg
hlt
xchg
and
or
mov
pop
adc
test
pushf
into
xchg
push
jns
pop
mov
movsb
mov
clc
push
push
test
cmp
and
imul
xchg
xlat
push
shrb
gs
js
movsb
pop
loopne
jae
pop
inc
push
pusha
popa
aam
outsl
xchg
push
sub
mov
push
adc
ss
add
push
pusha
outsl
sti
mov
arpl
adc
pop
ret
dec
sbb
cmp
add
jne
mov
mov
notl
fidivs
sub
pop
in
fidivrs
hlt
adc
fisubs
cmp
fwait
arpl
push
bound
addl
push
imul
add
movsl
jle
in
and
inc
outsl
and
dec
mov
sub
cmp
pop
sahf
ja
popf
mov
sub
ljmp
pop
pop
test
xor
out
xor
aam
div
js
jge
lea
xchg
std
gs
jns
lods
add
ds
mov
loop
xchg
sub
js
and
adcl
cli
lods
sbb
adc
xchg
test
stos
shr
out
jno
inc
jmp
cmp
mov
mov
pusha
imul
xlat
inc
lret
and
daa
push
xor
sub
mov
test
sub
cs
je
mov
cmp
mov
xlat
sub
sbb
sub
scas
add
sbbl
scas
mov
ss
mov
sti
outsb
rcrb
je
call
mov
lods
setp
xchg
test
jae
xorl
ds
andb
movsb
or
mov
mov
lret
dec
sbb
mov
loope
sbb
fidivs
sub
fdivl
jne
outsb
cltd
push
aad
xchg
sarl
rorl
rcl
push
int3
and
mov
push
push
mov
std
fiaddl
aam
sbb
push
inc
aad
sbb
push
add
stos
imul
in
xor
mulb
clc
inc
push
fistpll
out
xlat
mov
cmp
orb
out
adc
and
push
mov
cs
jne
push
mov
mov
int3
xor
out
std
icebp
popa
sub
out
ret
jecxz
pop
arpl
inc
sbb
push
and
mov
shll
rcl
mov
icebp
insl
loope
inc
daa
inc
mov
push
sub
adc
cs
into
pop
aam
divl
daa
push
fwait
adc
repz
stc
imul
lods
clc
mov
jle
fidivrl
sbb
jmp
sub
cmp
jns
and
sbb
mov
add
push
jl
or
icebp
shrb
xor
loopne
or
sbb
inc
inc
sub
add
out
movb
or
inc
fsub
repnz
mov
sbb
adc
add
loopne
lea
filds
jno
fs
mov
in
scas
dec
jae
popa
cwtl
add
ret
mov
popf
test
rcr
mov
adc
or
sbb
pusha
or
jl
xor
sub
std
enter
xor
rorb
xchg
shl
dec
or
xchg
sbb
adc
inc
push
cltd
push
add
xlat
adc
mov
jmp
mov
dec
and
fiaddl
mov
jge
mov
mov
gs
aas
popf
mov
jg
xchg
inc
clc
cmc
rcrb
mov
int
inc
icebp
dec
xor
loope
dec
je
or
mov
imul
cmp
pop
jno
inc
xchg
outsl
ss
insl
cmp
stos
int
mov
sub
scas
aam
pushf
rorl
iret
roll
popf
mov
stos
fs
mov
cld
pop
and
das
adc
lret
fmuls
mov
push
jge
inc
lret
push
fs
mov
jno
ljmp
ljmp
rclb
inc
bnd
dec
mov
cmpsb
pushf
js
loope
imul
lds
cmp
rsqrtps
enter
inc
daa
jecxz
pushf
mov
push
addb
dec
insb
push
sahf
dec
mov
xchg
shlb
xchg
icebp
mov
jne
scas
sbb
repz
sub
jmp
movsl
insb
sbb
inc
sub
filds
lea
cmc
lods
mov
adc
push
scas
sbb
pop
mov
stos
arpl
addr16
xchg
adc
jo
test
shlb
popf
ds
cmp
lods
pop
sub
aad
negb
or
mov
push
lock
lods
xchg
cmpsl
or
je
jl
push
jge
out
mov
sbb
or
inc
mov
jbe
mov
mov
pop
mov
mov
adc
cwtl
adc
mov
into
movsb
cmp
mov
popa
and
or
add
cmpsb
bound
mov
lea
sbb
inc
mov
inc
lds
mov
clc
adc
mov
cmp
in
pop
repz
xor
in
sbbl
jne
mov
scas
push
ficoml
xor
mov
test
sub
arpl
jnp
mov
and
xchg
fimuls
add
in
or
scas
inc
add
stc
imul
stos
cmp
jge
xor
inc
mov
add
or
out
mov
out
dec
test
or
pop
pop
add
out
and
mov
pop
repz
arpl
jns
aaa
sbb
jne
insl
orb
xlat
xchg
push
js
inc
cmpsl
jmp
mov
pop
popa
push
mov
es
insb
ja
xchg
xor
out
inc
fsubrs
push
test
mov
loope
push
jae
lods
jo
push
lcall
arpl
pop
sbb
xor
fimull
leave
xchg
icebp
outsl
jle
xchg
repz
test
bound
mov
mov
and
rcrl
int3
push
les
mov
movsl
sub
inc
push
xchg
mov
ss
xchg
dec
pushf
lods
xor
and
pop
xchg
mov
dec
cmpb
test
sarl
test
imul
xchg
sub
mov
mov
imul
adc
popf
je
push
lock
bsf
lock
inc
into
pop
mov
push
outsb
icebp
cmpb
push
adc
add
outsb
inc
pop
inc
mov
rorb
xchg
test
push
xchg
xorl
in
mov
inc
imul
push
loop
shlb
rcrb
call
js
repnz
cmp
scas
cwtl
jecxz
out
xchg
les
imul
push
push
sbb
pop
data16
mov
jo
sti
sbb
dec
mov
xchg
add
mov
aaa
lcall
mov
mov
cmp
cltd
out
repnz
adc
sub
xchg
cmp
out
insb
or
push
clc
cmp
arpl
cmpsl
icebp
repz
ss
pusha
cvtps2pd
rorl
psllq
test
mov
cli
loope
sub
lret
jno
lock
call
pop
leave
sub
xchg
nop
mov
arpl
sbb
out
cli
mov
xchg
sahf
mov
ret
shrb
cmpb
fcoms
pop
mull
xchg
cmpl
pop
add
addr16
sbb
xchg
test
clc
jmp
jno
sbb
dec
lahf
mov
pop
and
cwtl
or
push
mov
jb
rcr
sub
insb
idiv
stos
pop
dec
lret
or
mov
xor
lea
jg
lahf
push
stos
fcomps
icebp
ret
dec
cmpsb
cli
mov
data16
and
sub
jl
aaa
mov
push
push
mov
hlt
test
xor
add
inc
inc
xchg
push
fwait
jo
shlb
sbb
gs
jl
mov
and
jmp
mov
mov
mov
jmp
sbb
push
cld
jbe
repz
inc
mov
push
mov
aaa
xchg
loope
jge
loopne
outsb
sbb
notl
sub
fistpll
icebp
stos
sub
xchg
orb
adc
and
iret
xor
sbbl
mov
inc
int3
sub
ds
stc
aad
scas
push
jnp
arpl
scas
xor
push
adc
bound
mov
sar
add
dec
pop
sbb
aad
ds
push
lahf
jmp
adc
push
inc
xchg
fwait
and
xchg
outsb
xor
xchg
loop
or
ljmp
add
pop
cmc
inc
inc
lea
add
mov
ljmp
sub
fistpll
loop
inc
pushf
add
add
or
orb
mov
addr16
mov
icebp
mov
cmpsb
js
inc
lock
xor
push
mov
adc
mov
mov
jg
mov
inc
cmpsl
jne
lods
shll
mov
jbe
mov
mov
adc
subl
lds
fcomi
add
push
jle
add
sbbb
leave
std
popa
mov
orb
dec
das
mov
pop
mov
cwtl
or
mov
pop
sbb
adc
or
xor
out
xor
or
push
mov
add
pop
in
adc
loope
mov
and
xor
scas
inc
inc
mov
out
das
inc
fimuls
xchg
mov
mov
out
es
sub
inc
stc
cmc
fildll
aad
fdiv
lea
enter
notb
dec
add
pop
adcl
test
jbe
loope
subb
jl
test
mov
rclb
dec
or
lods
xchg
fmull
cmpsb
xchg
test
test
into
xchg
mov
imul
and
hlt
shlb
mov
or
mov
and
adc
sbb
sbb
inc
lds
sbb
pop
rcr
dec
mov
sub
mov
insb
ds
pop
pop
jo
icebp
sub
outsl
sub
dec
mov
psubb
ljmp
roll
pushf
or
pop
cli
lcall
mov
jnp
push
pop
arpl
add
sbb
inc
icebp
stc
mov
hlt
popf
jae
scas
xor
sbb
lcall
dec
pop
aam
add
pop
cltd
fs
orb
call
lock
test
cmp
inc
xchg
scas
pop
xlat
outsb
mov
sti
and
sbb
rorl
in
fistps
js
pop
sub
andb
mov
mov
mov
adc
mov
aam
sub
and
enter
stc
lret
xlat
xor
inc
orb
xchg
stos
push
enter
xchg
mov
data16
aam
es
xchg
pop
pop
loopne
and
inc
and
mov
inc
xchg
lea
pop
cmp
push
rcrb
lods
add
inc
adc
lret
pop
in
or
scas
insl
ja
mov
mov
lea
dec
xchg
fnstenv
imul
sbb
jae
pop
mov
mov
mov
cmp
mov
das
push
loopne
out
inc
stos
mov
aad
inc
fldenv
xlat
clc
out
and
add
mov
test
jbe
cmp
fsubl
sbb
mov
lods
jo
jg
push
inc
scas
enter
comiss
fidivrs
in
lods
and
outsb
cmc
popa
daa
enter
ljmp
inc
cwtl
mov
lock
jmp
popf
cmp
rcl
jbe
repz
sbb
pop
jae
fdivl
rcr
in
jl
es
pop
jae
adc
test
in
dec
jnp
addr16
cmc
push
les
sub
ljmp
xor
aaa
cmpsb
flds
jne
sub
hlt
lea
ljmp
movsb
ret
xchg
jne
dec
fs
mov
rcrl
pop
dec
hlt
sbb
xlat
and
rclb
mov
push
sahf
shr
xor
push
divl
stos
inc
adc
jmp
scas
mov
xchg
shlb
dec
mov
cli
js
xchg
jbe
add
cmpsb
scas
mov
cmp
mov
mov
stos
sub
xor
jne
insl
rol
loop
jge
in
inc
ud1
aas
pop
jl
mov
cmp
loopne
cmp
push
jg
push
sbb
inc
jg
jbe
clc
imul
cmpsb
jecxz
adcl
cmp
jecxz
cltd
fwait
push
pop
mov
test
sub
add
in
aad
xchg
sub
rcrl
inc
das
pop
push
push
cmp
int3
jle
ret
pop
dec
mov
lods
inc
sub
neg
and
mov
xor
aad
cmp
stos
mov
lret
gs
push
out
adc
out
xchg
sbbb
fistl
mov
mov
imul
ds
sbb
popf
adc
adc
cltd
push
xchg
das
std
jno
incb
and
popf
pusha
mov
rolb
fisttpll
das
jns
sub
loop
fstpt
dec
mov
cld
aas
imul
lock
push
mov
scas
std
xor
cmp
sbb
mov
in
mov
rcr
rorl
ret
int
je
cmp
inc
and
ficompl
or
hlt
clc
mov
lea
and
inc
aad
dec
sbb
imul
sti
leave
ja
loope
repz
jl
adc
popf
mov
fwait
in
out
ret
xchg
aam
adc
sbb
inc
dec
and
loope
jo
loopne
cmpb
sub
push
cmp
push
mov
and
push
xchg
rcrl
shlb
out
sub
popf
subl
pushf
in
fistps
fstp
add
or
cs
test
jecxz
adc
inc
mov
mov
inc
cmp
or
mov
add
mov
and
shlb
dec
gs
popa
mulb
xchg
sbb
mov
add
scas
pop
mov
loopne
push
cmp
mov
repnz
cmp
pop
push
sbb
sti
push
xchg
out
cmc
lds
mov
sbb
xchg
lock
and
cmpsb
push
sub
jo
xchg
lahf
lods
orl
test
inc
das
icebp
insb
mov
in
dec
push
mov
xor
bound
cmpsl
and
or
sub
ja
cs
movsb
movsb
xchg
mov
lods
inc
push
fwait
sub
cmpsb
pusha
loop
stos
ljmp
arpl
pop
or
test
mov
ja
in
cmpsb
mov
adc
sub
out
adc
dec
adc
sbb
cld
test
mov
jne
data16
xlat
cmc
pop
out
lret
mov
hlt
iret
push
lahf
xor
mov
out
push
sbb
jae
add
std
fsts
cmp
mov
jnp
sub
mov
and
add
mov
push
xchg
inc
push
lods
jle
pop
loop
lea
adc
fiadds
push
mov
pusha
and
lcall
jg
xor
push
xchg
inc
jge
mov
in
xor
mov
cli
push
inc
push
xrelease
add
sbb
aaa
add
push
repz
inc
mov
out
aad
in
xor
mov
sub
xchg
stos
xchg
arpl
shrb
mov
inc
ljmp
mov
push
jno
lods
pop
pop
dec
bound
popa
out
mov
mov
push
cli
mov
ret
xlat
mov
repnz
xor
sbb
mov
sub
lret
xlat
jg
nop
aaa
lret
sbb
in
push
dec
pop
xor
addr16
cmpsl
js
push
inc
leave
mov
or
mov
jbe
inc
iret
daa
inc
pop
jo
push
mov
cmp
add
outsl
into
aad
rcrb
xor
inc
dec
mov
ficomps
mov
inc
insl
popa
mov
sbb
das
or
pop
enter
pop
and
pop
push
lock
lock
rorb
mov
icebp
push
xchg
into
shll
mov
and
xchg
jp
popf
add
rcl
jg
push
mov
xchg
adc
push
push
nop
decb
sahf
sub
sbbl
adc
or
lret
inc
add
fistl
sbb
sub
cld
mov
cs
pop
jge
mov
sub
loop
loop
imulb
stc
mov
imul
in
push
fimuls
and
das
je
and
scas
test
mov
lea
pop
jp
in
push
jae
mov
fisubs
mov
jb
sbb
test
jg
mov
push
fs
xchg
in
test
xor
pop
inc
mov
or
daa
add
js
scas
sub
jecxz
mov
cwtl
mov
or
xorb
xlat
out
ss
stos
sub
mov
test
jns
and
mov
xor
sub
cmc
fbld
inc
push
lds
out
sbbl
jno
stc
and
mov
les
divl
jne
les
jbe
mov
xchg
mov
fdivs
jge
fdivrl
arpl
lock
jae
mov
pop
xchg
mov
adc
ja
xchg
mov
jnp
push
cmpsl
mov
sbb
add
test
or
int
push
inc
pop
jno
aaa
xchg
dec
push
sti
inc
test
sbb
mov
cmp
pop
jl
lret
jecxz
mov
and
dec
int
xor
repz
roll
pushf
das
pop
lds
dec
cmp
xchg
mov
mov
dec
jl
sbb
fdivs
push
out
nop
and
xlat
pop
push
cmc
push
sbb
xchg
xor
fwait
popf
hlt
and
jge
pop
aas
push
testl
insl
cmpsb
or
in
xchg
movsl
inc
xchg
mov
movsb
lds
in
push
call
jbe
sub
cmp
int3
push
shlb
cmp
cld
das
xor
push
inc
jg
push
mov
sub
xchg
sub
stos
jg
cmc
cmpsb
mov
mov
add
sbb
xchg
jae
or
jno
adc
vphaddubq
push
jle
push
cmp
sbb
std
mov
out
loop
jg
clc
jne
mov
inc
mov
out
mov
push
dec
aam
loop
xlat
pop
in
pop
in
xchg
fnstcw
mov
orl
mov
mov
jne
lahf
add
adc
nop
lock
cli
hlt
add
mov
xchg
aaa
mov
push
xor
cmp
icebp
cmp
fdiv
or
je
stc
sbb
ret
cltd
and
aaa
mov
out
iret
push
xor
loope
xchg
pop
inc
pop
mov
fcoml
addb
xchg
incb
cld
shl
lods
fwait
cmp
adc
scas
push
xor
pop
and
in
inc
popl
dec
push
out
cmp
clc
pop
iret
mov
pop
ret
insb
ljmp
movsl
dec
into
xchg
mulb
jmp
movsb
jbe
jns
mov
push
test
push
lods
fisubs
inc
jl
sbb
sbb
test
stc
ss
rcrb
adc
fisubs
mov
les
and
inc
cli
mov
dec
es
incl
sidtl
ljmp
cmp
orl
xchg
cmpsl
movsb
xchg
pop
add
mov
aam
mov
mov
pop
add
stos
push
jne
dec
ror
call
rorl
jo
xor
pop
fstl
xchg
je
lahf
push
jl
xor
jge
les
test
xor
jg
and
dec
push
add
arpl
cld
inc
outsb
out
cmpl
xchg
addr16
jno
aaa
xchg
jp
mov
vpaddusw
ljmp
les
je
pop
mov
jae
pop
hlt
shl
shll
dec
dec
jns
pop
adc
inc
or
out
out
push
xor
mov
into
jmp
int
jle
xchg
repnz
add
pop
lret
cld
mov
push
jl
sbb
add
inc
mov
xchg
inc
nop
push
sti
ds
push
in
sarb
push
xorb
jo
mulb
out
fwait
push
arpl
inc
enter
add
mov
lret
popl
loope
pushl
mov
mov
imul
and
pop
adc
sbb
dec
pop
mov
dec
or
push
pop
and
push
inc
mov
push
push
and
lret
mov
imul
in
push
push
rcll
movsb
sbbl
push
fimull
addb
add
cwtl
xor
add
out
shl
lret
pop
mov
jp
adc
sub
aad
in
push
repnz
pop
xlat
outsb
and
cld
jbe
call
cmc
nop
clc
xor
movsl
stos
ljmp
mov
push
jge
xor
inc
test
lret
in
add
fstpl
or
xor
mov
mov
cs
dec
nop
out
ret
ss
xor
inc
in
hlt
fcomip
mov
ret
outsl
push
or
pop
fscale
popa
ret
and
dec
xlat
daa
pop
out
mov
xlat
aam
je
loopne
out
repnz
sub
ljmp
sbb
jnp
pop
inc
mov
xor
pop
fistl
sub
jg
fildll
cmp
cs
mov
mov
enter
sub
shl
jae
sbb
sbb
and
imul
xchg
into
mov
mov
jo
lds
aad
jbe
testl
cmpsb
cmp
xor
imul
jg
xor
pusha
mov
xchg
mov
mov
dec
jg
and
or
inc
sub
jno
mov
sbb
jg
test
pushf
addr16
popa
leave
loope
loope
jmp
fcom
mov
inc
sete
lahf
mov
mov
aas
fmull
sub
cmp
and
and
inc
jl
cmp
sub
adc
dec
mov
bound
mov
mov
or
and
pop
je
scas
adc
pop
cmc
inc
adc
cmc
clc
inc
mov
sub
je
cmpsb
lret
or
pop
cli
test
ret
fwait
pop
in
iret
jecxz
enter
into
jle
test
jmp
movsl
inc
hlt
dec
nop
cmp
mov
pop
in
pushf
or
int
and
aas
xor
add
insl
iret
ret
push
jl
mov
adc
pop
mov
repnz
jge
cltd
test
mov
sub
xchg
mov
sub
pop
mov
rorl
cli
sub
in
cld
dec
sbb
pop
push
push
icebp
test
lahf
pop
and
mov
fwait
xchg
pop
or
jb
in
adc
mov
repnz
sub
enter
push
pop
dec
pop
insb
mov
outsl
mov
aaa
in
out
sbb
movsl
sbb
sarb
sti
sub
add
mov
jecxz
stos
pop
jno
out
jb
xor
push
jb
aas
jl
push
loop
lods
mov
cltd
call
pusha
pop
in
xchg
mov
pop
pop
out
inc
add
clc
shlb
scas
add
cmp
dec
and
incb
in
in
sub
lods
daa
sarb
mov
loopne
sti
roll
rol
fwait
out
cmp
mov
shrb
sbb
jge
or
jo
lods
call
inc
jp
add
scas
push
ret
pop
aas
in
sbb
xchg
shl
adc
adc
and
data16
sahf
cmp
lock
leave
adc
xchg
pop
push
xchg
lcall
into
and
dec
jecxz
jae
mov
mov
and
out
icebp
sarb
loope
aad
jno
mov
hlt
mov
cltd
jmp
adc
dec
cmpsb
xor
mov
inc
lcall
xor
gs
movsb
fmul
xor
pop
lea
mov
add
movsl
daa
lock
mov
push
enter
cwtl
addr16
aas
mov
cmp
jne
cmpsl
cmp
mov
clc
out
dec
popf
jmp
push
mov
sub
cmpb
and
imul
add
push
jbe
adc
inc
dec
pop
lods
repz
push
ljmp
xor
dec
adc
sub
jge
push
leave
push
pop
gs
xor
jnp
and
xor
cmpsb
and
les
leave
jl
into
pop
and
imul
or
outsl
movsb
or
jne
gs
fadds
mov
enter
mov
gs
ror
cmp
cwtl
addr16
sub
ds
mov
dec
pop
scas
sbb
xchg
daa
jl
arpl
ljmp
push
popf
or
pop
movsb
lahf
sbb
sti
xchg
mov
xchg
movsb
jne
cs
jp
inc
and
pop
lret
and
sbb
lret
adc
popf
sub
fadd
pop
popa
add
mov
mov
mov
sti
movsl
push
xchg
test
mov
push
sar
in
jnp
push
add
mov
xchg
hlt
adc
enterw
insb
sub
je
mov
xchg
sbb
adc
in
mov
and
sub
lret
sbbb
sbb
ss
scas
cli
inc
ret
in
scas
lds
sub
cmp
ljmp
mov
mov
std
cmp
fdivrs
and
int3
push
jmp
push
lods
mov
jbe
inc
lock
mov
les
scas
sarb
mov
in
add
xchg
ja
cmc
adc
mov
repz
sti
fmuls
xchg
adc
cld
inc
imul
es
scas
jne
push
test
inc
cwtl
insl
add
ds
xchg
xor
sub
push
add
test
nop
mov
inc
pop
xchg
icebp
sti
mov
mov
fisubrs
mov
push
cmp
mov
and
dec
fwait
ret
loop
sub
adc
jo
mov
shl
fs
pop
cmc
lcall
es
xor
mov
add
test
repz
out
sub
xlat
mov
push
imul
enter
repz
addr16
xorb
shr
dec
das
jecxz
pop
mov
dec
fsts
push
and
aaa
mov
ja
pop
ret
bnd
sbb
cmpsb
pop
mov
jp
rclb
sarb
in
les
xor
sub
mov
xchg
dec
clc
fiaddl
mov
pop
xchg
jmp
push
imul
xchg
cmpsb
xchg
fdivrl
inc
mov
idivb
test
pop
orl
pusha
dec
leave
ja
std
xchg
jecxz
idiv
push
mov
mov
stos
in
xchg
pusha
daa
pop
jecxz
cltd
lea
popf
jg
adc
sti
mov
dec
adc
imul
sub
ret
or
push
xchg
pop
inc
movsl
push
insl
mov
pop
scas
or
lds
lods
aaa
adc
out
aaa
frstor
outsb
fimull
repz
mov
addr16
sub
scas
pop
jno
das
repnz
out
push
imul
mov
jno
lret
add
stc
mov
mov
add
mov
mov
mov
adc
cmp
lahf
sbb
mov
lahf
popa
or
jecxz
adc
jne
pop
add
daa
leave
inc
mov
cmp
add
adc
cmp
in
shll
inc
aaa
out
jge
or
daa
testl
leave
ja
jle
dec
bound
adc
bound
cli
addl
subb
xchg
mov
aas
mov
outsb
sub
mov
in
test
push
xor
or
push
hlt
ret
jo
mov
pop
cmp
test
cwtl
xor
mov
inc
sahf
fbld
cld
mov
insl
lods
adc
mov
fsub
addr16
sbb
push
cmp
rcrl
addr16
popf
mov
push
push
cmp
sub
cmp
pop
pusha
in
inc
out
ss
sahf
repz
mov
lret
popf
jns
mov
mov
cltd
mov
cmp
outsl
dec
icebp
mov
test
sub
dec
push
lcall
shll
sbb
out
xchg
js
int
xchg
mov
or
and
ljmp
and
fdivp
popa
jnp
pop
insb
and
add
mov
out
inc
mov
push
fcmovne
mov
or
into
sbbl
ret
cmp
nop
mov
shrl
pusha
pop
dec
dec
adc
popf
push
int
sbb
subl
in
icebp
xchg
int
mov
cmp
stos
icebp
outsl
loopne
shrb
mov
pop
jmp
xor
xchg
add
mov
enter
pop
xchg
push
xchg
jne
xor
mov
leave
pop
test
push
jb
loope
mov
rorb
sub
inc
outsb
push
push
outsl
ja
lods
fdiv
sbb
cmp
rcll
mov
or
shll
mov
pop
fdivs
incl
aas
mov
inc
sub
into
loopne
mov
rol
mov
leave
xchg
test
test
sub
cmpsl
ret
punpcklwd
push
loop
das
sbb
idiv
sub
sbb
xor
inc
loopne
lret
repz
std
pop
dec
xchg
sub
roll
lods
pop
adc
pop
mov
mov
mov
mov
rcrb
gs
mov
jo
dec
xchg
xchg
mov
out
pop
push
bound
rorl
cmp
mov
aaa
cld
lds
or
loop
adc
add
movsb
jecxz
shl
aam
pop
iret
in
fs
jmp
in
jle
int3
shlb
mov
mov
cmp
data16
lock
daa
cmp
out
cmp
and
outsl
ds
mov
dec
mov
out
mov
aam
insl
loopne
jbe
mov
cmc
mov
aam
or
cs
dec
hlt
imul
jbe
pop
sbb
jge
aam
lock
lret
mov
mov
int3
repz
adc
push
xor
push
mov
mov
pop
dec
ret
adc
rcrb
pushf
jmp
cmp
inc
sti
add
sbb
and
lret
lret
mov
or
pop
push
sbb
icebp
jmp
mov
enter
mov
mov
jnp
and
fisubrl
jl
aam
fcoml
fisttpll
adc
inc
jmp
ljmp
aaa
test
sub
lret
stos
negb
fidivs
cmp
mov
dec
sbb
ret
arpl
mov
loope
pop
jb
lahf
stc
lret
lret
cmpsb
pop
push
xor
cs
icebp
inc
and
lds
into
cmp
dec
insb
scas
sbb
flds
lret
adc
push
shrb
cld
inc
add
mov
push
int3
push
fildll
scas
lret
adc
cmp
repz
sub
cmp
inc
xchg
rcrb
mov
pop
clc
pusha
mov
fdivrs
add
add
add
add
scas
and
mov
sbb
pop
adc
dec
arpl
ljmp
inc
mov
jle
mov
push
jne
mov
or
adc
gs
fcoms
jmp
lods
xchg
cwtl
outsl
inc
pop
mov
pop
imul
xlat
pop
lahf
std
or
test
inc
jl
scas
cmpsb
mov
sbb
xchg
daa
mov
mov
jae
cmp
sub
sub
xchg
mov
addr16
jnp
fisubrs
or
sub
je
jnp
es
jg
mov
fs
or
sti
pop
mov
xchg
int3
out
movsl
pusha
xchg
push
cmp
jg
sub
sahf
jnp
mov
dec
xor
push
or
movsl
loope
insb
dec
pusha
mov
sarl
mov
pop
adc
in
stos
nop
data16
mov
outsl
ds
js
lods
mov
aaa
cmp
movsb
xor
shlb
jp
hlt
dec
stc
fwait
mov
mov
and
xchg
mov
arpl
scas
mov
xchg
arpl
jns
ja
nop
cmpsl
repnz
xchg
push
cmp
mov
or
mov
or
adc
repnz
dec
je
xchg
or
inc
cltd
mov
sub
inc
mov
mov
fdivs
mov
insb
imull
popa
mov
xor
mov
andb
loope
mov
lret
mov
int3
jne,pt
xchg
int3
imul
mov
pushf
inc
aaa
add
and
aam
stos
stc
std
mov
cmp
fcoms
inc
mov
pusha
push
cmp
pop
push
popa
push
mov
sub
ljmp
mov
std
xchg
mov
add
mov
mov
aaa
mov
call
mov
or
adcb
clc
enter
mov
repnz
dec
or
cmp
movsb
push
aas
mov
pop
xchg
xchg
call
sub
subb
hlt
cmpsb
and
or
fimuls
cmp
pop
in
push
pop
jbe
xchg
in
ds
shl
fs
mov
mov
xor
mov
inc
fwait
jnp
repz
push
push
incb
sub
sahf
shlb
je
data16
ss
add
call
pop
rclb
enter
add
loop
fucom
sti
sub
push
adc
or
in
ret
push
xor
fcmovnbe
push
jge
and
mov
jge
fcomps
test
push
xchg
jg
test
dec
in
mov
pop
test
outsl
pop
movsb
fisttps
out
adc
out
cltd
sub
or
daa
stos
mov
jae
xchg
addr16
cs
add
jnp
popf
jne
adc
gs
jnp
xchg
cltd
mov
call
clc
je
das
push
jae
dec
les
push
jnp
js
in
mov
xor
pop
sarb
loopne
add
shll
int
xchg
fistpl
lahf
jno
pusha
cltd
push
bound
rolb
sbb
cmp
fstpl
xchg
fiaddl
push
push
sbb
test
shlb
inc
sahf
in
je
lret
lcall
movsl
cltd
les
jns
repz
dec
icebp
cmp
pop
xchg
rcll
js
orb
push
pop
mov
dec
out
mov
inc
loop
sbb
xchg
arpl
push
sbb
xor
mov
andl
jb
sahf
or
std
cmp
mov
sub
scas
mov
or
pop
test
pop
adc
stc
xor
ja
lea
in
jp
add
insb
xchg
divl
aas
aaa
sub
cmp
lods
das
into
and
jnp
or
cld
leave
sub
mov
add
xchg
or
xchg
out
push
add
ljmp
movsl
mov
mov
fsubrs
sbb
add
push
lcall
xchg
inc
jecxz
ficoml
adc
push
in
push
pushf
or
add
iret
in
cmpb
xlat
xchg
and
orb
stc
stc
insb
aas
into
insb
and
pcmpeqb
sbb
daa
mov
sbb
rcrb
adc
xor
flds
and
mov
fwait
sbb
insb
jl
mov
fxch
loop
stos
test
push
cmp
test
jns
imul
inc
data16
xchg
dec
shll
ja
sti
mov
aad
push
xor
shlb
jo
lcall
or
std
jne
xchg
cmp
loop
bound
cmp
push
adc
movsl
jmp
xchg
sahf
push
mov
push
jo
fldcw
ficompl
pop
sti
test
sub
jbe
outsl
loop
test
pop
sub
xchg
fldenv
cmp
fmull
push
adc
xor
or
inc
or
and
and
mov
xchg
jle
aad
add
idivl
mov
jge
or
sub
cltd
pop
dec
out
data16
push
loope
bound
mov
int3
sub
cld
mov
xchg
add
pop
mov
cmp
xlat
push
inc
andl
outsl
sub
jge
or
push
lds
mov
addr16
cmp
mov
mov
mov
lret
shrb
and
xor
movsb
scas
sub
cmp
inc
loop
int
sub
lret
aam
pop
in
jecxz
fiadds
push
lret
rorl
mov
xchg
cmpsl
mov
cltd
inc
mov
inc
mov
iret
sti
xor
dec
xor
daa
jmp
or
mov
mov
mov
repz
sbb
push
repnz
daa
scas
lock
push
fisubrs
sub
fwait
pushf
fdiv
cmp
movsb
add
lahf
mov
sbb
arpl
jge
nop
lods
xor
iret
fldt
mov
sub
pop
ret
je
pcmpeqb
insb
gs
dec
lds
mov
aad
push
add
inc
mov
cmp
mov
fdivrl
adc
jge
insl
cli
aad
cwtl
mov
daa
lods
outsb
js
lds
and
cli
xchg
push
mov
mov
fnsave
xor
cmp
mov
mov
xchg
movsl
repz
out
lock
jb
shlb
push
data16
jo
test
scas
fistl
loop
or
mov
in
sbb
push
mov
xchg
orl
in
mov
scas
ss
push
fdivrs
scas
or
mov
js
aas
pusha
das
test
into
push
int3
aas
xchg
and
push
into
pushf
mov
or
mov
imul
shll
imul
and
xchg
jns
enter
xchg
rcrl
dec
and
fwait
aas
or
and
sbbl
sub
inc
and
mov
fwait
fwait
push
stc
push
mov
fnstenv
test
mov
adc
mov
xor
ss
aad
inc
into
shrl
subb
mov
inc
aaa
adc
int
xchg
mov
mov
jnp
adc
sub
xchg
xor
inc
jp
jno
cwtl
push
and
mov
xchg
push
nop
pop
or
mov
sti
pop
test
jns
nop
push
sub
push
adc
test
push
inc
sub
cli
mov
push
mov
adc
push
mov
push
push
sbb
jmp
sahf
and
push
outsb
jle
fadds
leave
fcompl
jns
push
stos
dec
sub
lea
out
push
insb
pop
pusha
loop
xchg
mov
xor
mov
add
xorb
into
clc
bound
mov
in
pop
mov
jg
in
lahf
push
xor
xchg
pusha
out
jl
adc
cmp
jg
xor
js
insb
mov
or
in
push
pop
mov
mov
imul
cmpsl
gs
lcall
lahf
fldcw
adc
dec
push
jnp
or
adcl
insl
sar
push
fisttps
mov
mov
sub
sbb
sbb
and
sub
xor
cwtl
xchg
mov
out
out
cmp
ret
jo
mov
xor
sbb
bound
sarb
or
mov
adc
xor
je
stos
pop
mov
les
out
jle
sbb
xor
scas
pushf
ss
movsl
fsubl
mov
lods
sub
add
push
imul
and
mov
fwait
mov
rorl
cmp
inc
leave
lcall
loop
mov
push
push
in
xor
out
dec
enter
lea
mov
pop
push
int3
pop
scas
pop
cli
rcrl
mov
out
mov
push
shlb
test
lods
stos
jmp
and
hlt
sub
ss
adc
pop
inc
cmc
fcmovb
fwait
notl
fiaddl
mov
inc
push
stos
orps
scas
mov
jne
pop
xor
inc
xor
cmp
mov
nop
and
xchg
adc
jle
mov
pop
test
js
in
pushf
or
cltd
dec
xor
add
jns
shrl
out
xchg
lea
push
push
push
sahf
and
pop
add
mov
push
xor
mov
adc
scas
clc
jle
xor
lock
adc
sub
imul
push
sub
loop
mov
dec
mov
jnp
mov
add
fists
cmp
xchg
shll
push
mov
fisubrl
pop
std
popf
or
lock
sbb
data16
push
adc
inc
lds
dec
push
sar
dec
dec
or
imul
js
sbb
test
jmp
mov
rorl
and
push
pushl
test
stc
xor
mov
repz
loopne
add
jnp
ds
test
cmp
or
jecxz
inc
fdivr
adc
into
stc
mov
popa
mov
jle
adc
push
push
fstl
outsb
jno
lret
scas
inc
add
push
jbe
push
xchg
or
test
lea
mov
or
aas
add
test
stc
mov
push
mov
nop
xlat
ljmp
sbb
jle
insl
out
or
das
push
in
dec
popa
enter
jecxz
fimull
inc
mov
sbb
push
cmp
mov
setge
xor
pop
sti
cmp
ljmp
outsl
mov
xchg
or
movsb
mov
mov
lds
mov
cwtl
outsl
lods
lock
popf
pop
jns
jmp
push
xchg
mov
je
je
sbb
mov
sbb
aas
imul
sub
sub
out
int3
xor
cli
mov
ds
xor
xchg
or
sti
in
mov
ljmp
push
cmp
enter
imul
lods
pop
call
loop
and
push
shll
in
das
jns
cmp
jno
repz
stos
or
jnp
xchg
ljmp
mov
xor
mull
jb
jp
inc
push
xlat
jge
scas
and
dec
xor
pop
mov
std
aad
cmpl
dec
jb
pop
jns
jne
pusha
xchg
xchg
insb
aaa
mov
cmpsl
push
mov
dec
pop
faddp
cmp
ljmp
shlb
xchg
xor
adc
xchg
fwait
es
push
jmp
lods
or
inc
outsl
jp
add
xchg
imul
scas
cwtl
enter
cs
or
cmpsl
push
add
iret
rorl
xor
insb
add
dec
scas
dec
cmp
push
or
and
loopne
in
sub
inc
int
cs
mov
les
and
inc
addr16
test
testb
or
div
or
cli
dec
pop
orb
dec
pop
cmpsl
idivb
movsl
cwtl
popf
out
les
testb
push
fwait
inc
pop
js
notb
xchg
sar
mov
mov
imul
je
incb
pusha
sub
jmp
daa
iret
adcb
add
cmc
loope
das
sbb
and
mov
sub
adc
xor
stos
in
dec
addr16
adc
ss
dec
je
in
imul
adc
test
add
lock
add
jp
push
fcmovbe
adc
pop
es
subl
mov
imul
pop
dec
push
fdivp
fdivl
mov
pop
pop
je
outsb
in
scas
fdivrs
inc
jg
call
test
cmp
sub
aam
mov
ss
mov
test
sbb
mov
testl
mov
sub
in
jl
mov
push
xor
mov
cmp
fcomi
jecxz
fs
loopne
push
jmp
jne
rcll
sub
fsubl
aam
dec
divb
mov
lret
test
int3
dec
mov
jl
add
and
adc
sbb
rcll
out
int
popf
movsl
dec
jmp
xchg
pusha
in
cltd
movsl
jg
insb
push
es
or
jecxz
clc
or
mov
fs
loopne
ficompl
mov
xchg
test
popaw
mov
andb
or
sbb
repnz
pop
pop
std
add
aam
jbe
or
lods
dec
lock
mov
loopne
nop
ja
dec
push
lods
mov
pop
or
add
add
or
push
xchg
and
in
sub
std
inc
push
xlat
push
add
cmpsb
fnstenv
cld
lahf
test
jge
shl
inc
ljmp
mov
pop
or
test
sarb
data16
ret
fsubs
mov
insl
int
jno
jl
push
ljmp
mov
imul
pushf
jl
mov
popa
outsb
lods
xor
daa
or
hlt
push
inc
out
or
cmp
mov
cs
mov
adc
std
sbb
jne
sbb
inc
fildll
xchg
out
cmp
adc
leave
mov
sbb
stos
call
lock
lret
mov
xor
adc
cwtl
or
jb
ljmp
in
hlt
jmp
in
dec
adc
pop
pop
xlat
mov
std
test
inc
jecxz
push
ret
imul
gs
cmc
lret
cli
insb
dec
push
mov
loop
xchg
rolb
xchg
jecxz
outsb
cmpsl
mov
nop
les
push
bound
jnp
lock
lods
dec
pop
pop
push
and
jmp
lcall
add
lods
sbb
mov
xor
flds
mov
fcompl
clc
jno
imul
lea
pop
jle
ret
xor
stos
mov
dec
sarb
mov
jae
sbb
mov
inc
pop
push
cmpsl
pop
test
jne
and
cmp
add
aad
int3
push
ljmp
pop
xor
mov
lret
arpl
inc
addr16
mov
inc
movsb
jno
fdivrl
inc
and
fcmovne
jle
in
pop
mov
cmp
adc
mov
loop
xchg
pop
dec
sbb
xor
lret
inc
lcall
add
xchg
adc
pop
dec
xor
push
lea
mov
clc
xor
scas
cmp
sub
mov
dec
sbb
pushl
div
in
rcrl
sub
cmp
inc
cmp
add
cmpsb
inc
and
jecxz
dec
outsw
jecxz
or
inc
lods
mov
das
decl
into
ret
lea
cmc
lock
jmp
dec
sub
dec
fsub
cmp
push
movsb
or
data16
gs
cltd
sub
pop
xchg
sub
adc
dec
pop
ret
cmp
out
mov
cmp
test
in
xchg
rcr
ds
adc
push
stos
lcall
cmp
inc
add
pop
cmp
xchg
push
repz
sbb
pushf
sub
cld
out
sub
xchg
mov
addl
call
adc
leave
xor
out
movsb
negl
inc
adc
lds
das
cwtl
cmc
push
xor
aam
in
pop
xor
push
mov
aaa
push
das
jne
movzbl
movlps
mov
or
scas
mov
jge
xchg
je
js
aas
push
mov
scas
adc
mov
dec
cmp
sub
sbb
mov
mov
mov
lret
mov
pop
dec
add
xor
sbb
push
shlb
adc
dec
sarl
sub
stos
mov
jmp
dec
dec
pushf
push
popa
and
insb
mov
xor
dec
ficompl
stos
inc
push
mov
or
pop
dec
lds
sbb
es
loopne
pop
push
mov
mov
jb
mov
aas
cmp
filds
xor
pop
push
out
cmp
imul
loopne
sub
xchg
jmp
lret
adc
nop
js
cwtl
mov
inc
dec
push
adc
test
inc
stos
iret
sbb
mov
push
insl
xchg
mov
dec
jbe
loope
std
push
pushf
out
push
pop
xchg
cmp
gs
and
popa
xlat
sbb
add
push
xchg
mov
dec
out
cltd
pop
daa
push
shr
add
insl
mov
mov
orl
mov
dec
stc
and
in
rorl
sarl
out
ss
adc
ret
mov
pop
mov
push
sub
jbe
cmp
enter
scas
repz
sbb
outsb
into
fwait
sub
or
push
scas
jns
xchg
movsb
icebp
mov
pop
push
xchg
and
xchg
or
pop
jp
sub
push
cs
stos
mov
dec
lods
js
sbb
neg
nop
inc
stos
push
call
rolb
push
fstpt
cmp
push
mov
mov
adcb
fmuls
add
sbb
loopne
mov
sbb
jg
add
sub
out
xchg
lock
sahf
into
mov
pusha
or
je
add
ffree
mov
lret
mov
mov
xor
pop
mov
mov
xor
out
mov
cmp
mov
into
and
sub
lock
mov
add
out
adc
fwait
push
push
jae
lret
cli
jle
cld
push
xlat
test
jno
scas
push
mov
sbb
push
sub
insl
mov
adc
pop
js
push
mov
add
out
addr16
dec
outsl
dec
repnz
pop
je
mov
in
adc
test
or
inc
call
cmp
fistl
xchg
xchg
aad
jmp
lret
cmpsl
enter
loopne
pop
scas
loope
jno
mov
xor
xchg
mov
pusha
test
sbb
xor
add
rorl
add
push
aad
int
repnz
mov
ljmp
cmp
jmp
jg
inc
mov
mov
inc
sbbb
mov
dec
insb
push
cli
test
icebp
js
inc
sti
jge
popa
lds
loopne
mov
call
or
cmc
test
in
add
repnz
push
sub
stc
pop
sub
fsubrs
inc
stos
jg
adc
push
addr16
punpcklbw
lret
popa
incb
mov
mov
inc
scas
xor
sbb
lds
jo
mov
xor
rorb
dec
xchg
int
insl
cmpsb
mov
lds
xor
jb
inc
pop
insl
fistpl
bound
cwtl
outsb
out
jbe
jmp
and
jg
push
pop
fnsave
movsl
jnp
or
arpl
cs
or
arpl
daa
sbbl
xor
test
pop
or
in
xor
test
sub
out
or
mov
dec
cmpsb
cmp
jae
mov
gs
dec
in
jns
lret
movsb
adcl
xchg
and
jb
arpl
xchg
repnz
xor
bound
mov
or
enter
pusha
or
add
xchg
subl
cmp
mov
das
mov
xor
xchg
ret
repz
add
cmp
mov
lods
clc
scas
jbe
scas
enter
test
push
pop
outsl
pop
mov
or
mov
push
adc
test
roll
cmp
mov
mov
popf
mov
out
inc
hlt
xor
repz
cmp
jge
jnp
inc
rolb
sub
inc
xchg
push
pop
mov
nop
stos
je
mov
mov
popf
enter
fs
ror
mov
cmpsl
cmpsl
scas
mov
popa
dec
sbb
subl
dec
pop
dec
mov
fnstenv
ret
jo
or
adc
shrl
pop
sub
icebp
addr16
mov
in
sub
mov
push
loop
adc
xor
mov
int3
int
fadds
aam
xchg
subb
push
pop
adc
scas
leave
cmp
pop
mov
xchg
ss
fimuls
scas
inc
xchg
inc
dec
shlb
adc
in
mov
movb
inc
ljmp
xlat
mov
mov
nop
cmp
std
fs
filds
jno
jo
jo
fsubs
lods
dec
pop
call
daa
loop
movsl
enter
or
and
adc
cmp
outsb
test
push
cmp
mov
jl
arpl
nop
add
cmpsl
repz
and
push
jecxz
arpl
or
xchg
jecxz
sub
dec
xlat
lret
xchg
into
stc
jecxz
push
xor
add
push
inc
movsb
lods
mov
cmc
ljmp
mov
loopne
cs
sub
daa
push
cli
stc
push
and
inc
test
jl
aaa
add
adc
gs
arpl
jmp
in
clc
push
jbe
xor
cmp
adc
mov
rcrl
cltd
push
je
and
xchg
rcrl
adc
aas
imul
sbb
mov
fsubl
push
std
pop
cmp
dec
and
pushf
xchg
mov
dec
mov
mov
adc
push
pop
push
or
mov
sub
es
xchg
loop
mov
icebp
aam
add
inc
mov
aad
and
mov
lea
mov
add
xor
cmp
shll
or
inc
arpl
icebp
inc
inc
push
pop
ljmp
lea
xchg
stc
test
pop
das
xlat
and
outsb
ss
pop
sbb
jmp
or
cmp
dec
sbb
cmp
mov
pushf
ficoms
pop
jle
dec
imul
insb
push
dec
xchg
jno
lods
shlb
xlat
cmp
or
aaa
in
in
cmp
or
mov
lcall
insl
pushf
fimull
adc
and
cmp
popf
bound
cmpsb
aam
xchg
mov
loope
inc
add
das
xor
or
adc
or
nop
inc
hlt
scas
sbb
cli
xchg
imul
push
stc
es
mov
lea
into
popa
mov
jl
inc
cwtl
shrl
inc
jno
or
jmp
mov
test
pop
pop
in
xor
lret
in
push
jle
andb
int3
repz
fnsave
jno
loop
repz
mov
fidivl
cmp
sub
aad
pusha
lods
scas
and
movsb
and
mov
pop
pop
mov
aam
nop
imul
jge
jns
add
jmp
je
cmp
dec
pop
dec
xor
add
or
cmp
add
jns
movsb
jno
jno
sti
add
insl
lods
paddw
test
fisttps
sub
test
and
mov
lods
adc
add
mulb
fwait
dec
xlat
ja
fs
sahf
mov
negb
xor
or
mov
jle
mov
test
ja
or
adc
jns
roll
leave
mov
movsl
sbb
adc
mov
or
sub
mov
push
inc
cmc
cmp
loope,pt
pushf
or
in
in
in
aaa
lods
sbb
in
push
xor
popf
push
stc
jno
dec
mov
mov
add
cmp
and
cmc
xor
into
loopne
fsubr
rorb
testb
ljmp
orl
pop
dec
adc
inc
or
cli
jne
inc
sub
repz
pop
jnp
out
test
movsb
pop
lret
cs
add
sub
pop
mov
in
out
pushf
clc
mov
test
rcrb
pop
pop
jno
xchg
clc
or
notb
cmpsl
ds
mov
cmc
mov
mov
cmp
inc
das
cmpsl
sti
mov
mov
cmp
xor
bound
imul
pushf
lds
lcall
lea
insl
sub
jbe
add
jno
pushf
push
loop
repnz
mov
movl
dec
aad
mov
inc
mov
imul
pop
mov
inc
aad
inc
jbe
outsl
ljmp
jne
adc
bound
outsl
mov
xchg
loopne
push
push
inc
pop
sahf
ds
mov
lds
insl
push
insl
pop
stos
pushf
adc
cltd
in
mov
fidivrs
out
in
aam
test
dec
add
jle
ja
mov
inc
outsl
fiaddl
mov
test
call
addr16
xchg
jmp
xchg
sbb
jnp
add
push
arpl
mov
push
ret
or
mov
and
pop
pushf
jne
std
aaa
push
insl
cmp
loopne
sub
add
and
mov
jno
jge,pt
test
cmp
pop
pop
adc
adc
ret
add
test
addr16
xor
pop
rcrl
and
scas
fs
push
pop
cmpsl
sub
dec
dec
sub
popa
daa
enter
mov
daa
lea
and
rsqrtps
inc
js
sub
mov
or
cld
xor
dec
out
cwtl
lahf
sbb
sub
mov
ja
mov
ljmp
in
add
lea
bound
push
adc
fidivrl
cli
jnp
ret
int
pop
pop
test
xor
imul
and
mov
add
les
enter
xor
mov
negl
lret
cwtl
pop
loop
movl
nop
push
imull
pop
ret
gs
fnstcw
lods
shll
jg
popa
xchg
lock
xchg
cmc
or
inc
out
faddl
leave
lods
xchg
popl
scas
imul
or
mov
cmp
je
lods
js
jmp
jo
lea
in
test
jno
cs
nop
mov
test
sub
push
icebp
pop
adc
jb
pop
lret
rcrb
jmp
sbb
pop
mov
mov
in
hlt
inc
int3
cmp
les
pop
xor
sub
loopne
cmp
fstpl
repz
xchg
loope
mov
in
sbb
aam
in
sbb
cs
roll
out
repz
cli
mov
push
dec
lret
clc
add
lods
mov
outsb
stc
pusha
pop
mov
mov
jmp
loop
inc
lret
xlat
lods
rclb
daa
sub
inc
stos
and
mov
pop
cmp
push
push
cmp
lods
lods
int3
scas
mov
push
xchg
popa
jb
andb
inc
inc
cs
adc
loop
jecxz
stc
and
pushl
out
pop
inc
scas
cld
xor
mov
xor
lock
xchg
fldenv
push
or
inc
shr
lcall
mov
add
int3
jnp
mov
jmp
mov
adc
and
shlb
fdivp
mov
xor
hlt
push
rorl
jp
or
inc
xor
lcall
out
pop
mov
pop
ljmp
adc
lret
adc
mov
fnstsw
fildl
add
inc
pop
cld
dec
xchg
cmp
mov
testb
sbb
icebp
pop
add
inc
push
scas
shrb
sbb
push
push
ljmp
push
cmp
pushf
jno
push
in
add
out
outsb
add
imul
addr16
pop
pop
adc
jnp
xor
sub
mov
add
addr16
push
xor
lock
xor
inc
shlb
inc
sbb
mov
add
dec
push
fs
insl
xchg
out
lock
rcr
movsl
aam
adc
add
mov
orb
mov
sbb
test
jmp
adc
xchg
adc
push
inc
add
push
sahf
ss
dec
cmp
mov
cld
sub
adc
adc
cs
push
inc
and
mov
cwtl
mov
shrl
in
cmp
adc
push
cmpsb
mov
push
push
jp
jo
popa
fs
dec
stos
jg
insb
les
jae
mov
cmp
sbb
jmp
test
dec
aas
mov
push
leave
adc
orb
clc
sbb
cmp
pop
pop
outsb
push
sub
xor
dec
iret
scas
stos
aam
xor
iret
jns
adc
xchg
fcomip
mov
int
les
pop
sbb
xor
mov
cmpsb
ljmp
dec
sub
loop
xchg
enter
iret
xor
sub
cld
idivl
pop
or
imul
les
insb
fwait
test
cmpsl
arpl
or
notb
repz
lcall
jae
mov
shrl
or
rclb
fs
lods
ss
xchg
add
sub
dec
movl
adc
jecxz
xchg
inc
mov
cmp
and
pushf
aam
js
and
xchg
cmp
movsl
mov
dec
stos
inc
fimull
mov
push
repnz
lods
mov
enter
stos
dec
jmp
xor
imul
pop
jp
cmp
sbb
mov
aad
test
dec
movsb
mov
jle
ja
jo
lods
sbb
mov
jns
aas
sbb
stos
sahf
pop
fmull
xchg
repnz
sbb
orb
inc
jmp
cmp
out
aad
mov
push
mov
cmc
stos
int3
subb
lea
mov
inc
mov
inc
mov
and
outsb
es
test
mov
mov
ds
daa
xchg
outsb
ud0
repz
jp
cmpsb
lahf
in
cmpsl
pop
sub
in
mov
push
mov
push
std
dec
push
out
scas
divl
jge
movsl
xor
dec
std
jecxz
and
std
clc
xchg
xor
jae
pop
xchg
inc
jae
sti
adc
cs
in
cmp
imul
xchg
and
pop
sbb
stc
or
inc
dec
insb
aam
sahf
call
call
or
stos
mov
std
in
xor
sub
sbb
jnp
and
cld
int3
xchg
cmp
jns
mov
jo
adc
mov
xchg
pop
addr16
inc
pop
inc
adc
xlat
mov
xchg
popf
mov
fwait
mov
fldt
mov
lods
push
adc
notl
outsl
adc
clc
pop
push
lret
sbb
sbb
lea
addr16
mov
inc
mov
jae
test
mov
cmp
sub
aam
mov
or
or
or
std
insb
test
adc
lods
sub
stos
add
scas
aam
in
out
cmp
int3
lcall
sub
dec
mov
hlt
scas
push
or
cmc
lahf
lock
or
nop
push
mov
lahf
xor
aam
cmp
std
jge
lret
daa
mov
jns
movsb
sbb
das
mov
or
rcl
stos
xchg
rol
movsb
mov
leave
ljmp
addl
enterw
out
push
ss
sub
xchg
mov
inc
fldenv
data16
pop
cltd
jge
dec
adc
sbb
dec
pop
xchg
rol
lods
fisttpll
lret
mov
xchg
jnp
pop
cmp
ds
lcall
sbb
push
and
aas
add
push
stos
pop
xor
jae
repnz
pop
pinsrw
fwait
mull
xchg
cmp
jb
push
sub
fcomp
sub
sub
ret
pop
jecxz
inc
int
daa
cmp
arpl
cmp
sahf
divb
pop
daa
stc
sbb
jb
or
insl
insb
dec
jmp
ficoml
adc
mull
stc
pop
jge
mov
int
pop
dec
mov
jb
and
push
sbb
lods
fsub
push
clc
loopne
in
repnz
add
jl
sub
sbb
adc
inc
or
enter
mov
mov
in
add
xchg
cmp
fsubrs
add
xor
pop
imul
mov
nop
loopne
sub
sub
ja
jecxz
mov
test
cltd
jb
add
les
mov
dec
fadd
push
pop
in
xchg
adc
lods
cmp
add
loope
fxtract
jl
jo
pop
xlat
push
push
daa
pop
into
xchg
stos
fiadds
jp
and
daa
push
pop
xchg
popf
push
pop
outsb
push
aas
shlb
dec
push
push
into
adcb
xchg
push
aam
fcompl
sahf
push
and
mov
aad
lahf
and
popa
mov
hlt
adc
lret
mov
test
fnstcw
inc
fimuls
cmp
lea
scas
aam
xchg
mov
add
xor
xchg
int
adc
jmp
into
jecxz
popa
push
mov
call
imul
mov
push
aaa
mov
adc
mov
cli
loop
or
xor
ret
clc
data16
incl
movsb
push
mov
push
adc
cmp
dec
das
mov
cli
jl
stos
test
movsl
xorl
add
jne
ret
inc
cld
xchg
jne
push
outsb
pop
ss
adc
xchg
popf
adc
pop
and
mov
rcrb
scas
xchg
pop
xor
test
jns
push
test
push
jno
js
popa
mov
ror
lcall
adc
and
cmpl
dec
xchg
aas
jmp
scas
ljmp
push
daa
or
cmp
inc
rolb
sbb
iret
mov
ss
cpuid
rclb
out
pop
int3
mov
aas
cs
mov
mov
daa
sub
push
pop
test
xchg
or
inc
cmpsl
mov
push
mov
xchg
stc
mov
in
arpl
push
imul
stc
jl
loop
stos
sahf
jo
rcrb
stos
lds
cmp
test
mov
sub
xchg
cmp
cmp
xchg
mov
inc
xchg
rcll
add
iret
stos
shrb
out
inc
xor
clc
push
push
dec
xor
adc
ror
jb
leave
mov
pop
xorl
push
test
decb
and
jge
jge
cmp
add
xor
pushf
fcoml
dec
mov
push
test
sub
cmp
jge
and
mov
and
adc
mov
daa
mov
push
jnp
or
fdivr
cwtl
bound
cmp
sbb
aaa
test
sub
ljmp
add
fmuls
lahf
fnsave
sbb
aas
sub
faddp
push
into
xchg
fwait
jnp
test
lock
cmp
mov
in
ljmp
adc
sti
lea
adc
ja
mov
out
test
jb
sahf
fmulp
insb
ja
push
jg
fs
inc
jmp
and
and
push
cltd
pop
jp
mov
mov
dec
xor
xchg
xor
fstp
iret
adc
push
stos
sub
pop
mov
inc
mov
ljmp
lock
movsb
xchg
xchg
xchg
push
push
aas
cmpsl
mov
mov
cmp
or
sub
stc
clc
jne
cmp
cwtl
mov
negb
xchg
jns
adc
jle
adc
lock
xchg
leave
adc
push
lea
fstp
scas
mov
mov
dec
dec
dec
jb
mov
stc
pop
movsl
imul
subl
test
outsl
pop
mov
mov
shlb
in
setno
sti
out
mov
out
cmp
pop
in
xorb
sbbb
mov
shrb
lods
rclb
or
sub
mov
sbbl
xchg
adc
stc
mov
xchg
jmp
test
and
aaa
stos
nop
fcmovne
jns
jmp
pop
inc
mov
xor
xchg
stc
icebp
js
pop
xor
sub
stc
jbe
repz
fcmovnbe
test
in
test
xor
mov
push
pop
sub
bound
negl
sar
fwait
xor
inc
in
leave
mov
in
ljmp
scas
mov
xor
popa
sbb
fmull
and
divb
jbe
imul
les
andb
mov
jmp
aam
pop
jne,pt
movsb
lds
mov
bound
iret
push
flds
mov
idivl
add
and
rorb
cwtl
ret
cmc
gs
inc
lods
pushf
pop
mov
out
ret
shlb
fmull
arpl
es
movsb
call
inc
pop
test
dec
popf
push
lea
jne
fstl
mov
test
es
jb
lret
cmpsb
cmc
outsb
and
mov
jb
jae
pop
cwtl
lods
mov
sub
mov
lahf
or
loopne
push
mov
fwait
sbb
push
fiadds
adc
lods
mov
scas
dec
dec
ja
inc
rclb
push
loope
dec
mov
xor
mov
xchg
and
sbbb
das
jmp
adc
sub
push
lock
test
mov
or
jb
push
into
cltd
add
loop
outsb
testb
enter
sbb
subb
inc
cli
inc
xchg
mov
push
mov
data16
aaa
gs
roll
push
pusha
leave
jo
push
cmp
scas
xor
or
popa
jmp
mov
loope
cmpsl
lock
sbb
mov
ret
lods
mull
mov
mov
pusha
jp
pop
test
test
rol
loopne
adc
lahf
xchg
mov
xchg
pop
les
rcr
jmp
sbb
mov
inc
jecxz
jnp
adc
xor
arpl
and
inc
cmpsb
fstpl
movsl
xchg
outsb
xlat
movsl
shrl
or
mov
jnp
insl
push
out
dec
push
fwait
lret
adc
stos
sbb
cld
fadd
push
insb
push
xor
les
mov
enter
xor
test
inc
insl
cmp
jecxz
mov
fdivrs
push
cmc
sub
xor
or
sti
dec
mov
jg
sarb
sub
hlt
mov
aaa
cld
mov
fdivs
ljmp
pop
sub
mov
iret
and
adc
imul
xchg
adc
jp
mov
movsl
rcrl
xor
lcall
mov
andb
popa
mull
enter
inc
mov
push
xchg
gs
fstpl
add
in
jmp
cmp
jle
bound
pop
aad
js
mov
hlt
imul
adc
cs
add
insl
test
adc
xor
scas
inc
cltd
dec
rclb
leave
popa
jno
or
loope
pushf
adc
push
icebp
or
xor
lds
loope
adc
scas
sub
icebp
psraw
or
sbb
cmp
cmpsb
insb
jle
aad
arpl
cmp
repz
imul
mov
ret
fildll
jno
fldl
pop
adc
mov
jp
scas
pop
out
cmp
mov
dec
stos
subl
dec
negb
cmp
sbb
jns
jno
ss
repz
addr16
js
cmp
add
insb
daa
xchg
call
pop
leave
mov
xchg
or
loopne
push
popf
stos
fidivrl
adc
js
xor
outsb
movsb
sub
xchg
inc
adcl
add
fdivrl
negb
adc
roll
mov
int
or
jnp
pop
shll
cld
mov
inc
stc
mov
push
into
dec
out
cltd
jecxz
xlat
xor
std
jnp
pop
repnz
dec
movsl
mov
shrl
inc
in
pop
or
stc
stc
loope
push
add
dec
das
cltd
cmp
insl
lcall
rorb
push
push
pop
shrl
pop
add
loopne
sub
shlb
es
inc
in
cli
subb
pop
adcl
pushf
dec
pop
pushf
push
cmp
imul
xchg
jecxz
out
fxch
repz
ja
xor
sbb
sub
pop
cwtl
loop
out
stos
loop
lcall
dec
cli
pop
fisttpll
out
xor
enter
mov
test
into
and
in
fldenv
in
cld
insb
popf
sbb
outsb
sarl
insl
jecxz
adc
xchg
sub
jnp
pop
outsl
lock
sub
ret
mov
adc
or
dec
pop
data16
inc
pop
mov
