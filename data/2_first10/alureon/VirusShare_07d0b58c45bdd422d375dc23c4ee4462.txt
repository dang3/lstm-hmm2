mov
rol
mov
lea
xor
not
shl
mov
xchg
lea
mov
rcl
jmp
mov
xor
mov
not
xor
rcr
not
neg
mov
jmp
xor
rcl
neg
neg
shl
call
mov
add
shl
ror
mov
and
shr
jmp
lea
lea
xchg
push
xor
mov
ror
lea
push
lea
not
jmp
ror
rcr
mov
xchg
mov
xor
mov
mov
xor
mov
xor
not
rcr
mov
mov
jmp
push
mov
sub
push
push
push
xor
neg
shl
mov
mov
mov
push
shl
jmp
xor
xor
xchg
add
not
not
xor
rcl
jmp
xchg
rcr
lea
xchg
xor
xchg
jmp
mov
ror
mov
mov
xor
xor
ror
xor
mov
mov
ror
not
movl
mov
lea
jmp
xor
shr
mov
mov
mov
xor
not
jmp
and
mov
lea
add
pushl
and
and
xor
lea
xor
not
pushl
rcl
jmp
mov
mov
rcl
mov
push
add
mov
rol
mov
lea
xor
xor
pop
rol
jmp
xchg
neg
lea
mov
not
not
xchg
not
and
mov
jmp
neg
shrl
and
mov
mov
mov
mov
not
rcr
mov
lea
xor
xor
mov
jmp
rol
xor
xchg
mov
not
xchg
rcl
rcr
jmp
add
adc
lea
xor
lea
mov
mov
lea
neg
mov
add
jmp
lea
lea
lea
not
mov
popl
mov
mov
mov
jmp
neg
lea
lea
push
call
not
shl
rol
jmp
mov
rol
adc
xor
mov
mov
mov
shr
and
jmp
lea
lea
mov
xchg
lea
lea
shr
lea
neg
mov
mov
jmp
lea
ret
rcl
adc
and
not
xchg
lea
shr
jmp
xor
decl
jne
xor
lea
lea
and
jmp
rcl
shl
lea
mov
lea
mov
xor
mov
xor
mov
not
lea
neg
xor
jmp
xor
xor
mov
mov
xchg
add
rol
jmp
xor
xor
mov
and
not
jmp
ror
lea
and
lea
lea
add
rcl
xor
xchg
add
mov
rol
lea
jmp
add
xor
rcr
rol
mov
jmp
not
mov
neg
lea
push
neg
mov
mov
ror
mov
add
jmp
mov
xor
mov
rcr
mov
shr
rol
lea
jmp
mov
and
lea
rcr
xor
mov
neg
rol
add
mov
not
lea
jmp
lea
rol
mov
neg
add
mov
xchg
and
mov
xor
mov
adc
jmp
fs
mov
shlb
lret
mov
call
dec
cmp
sbb
pop
jns
iret
push
iret
ret
fildl
scas
rorl
adc
mov
jae
inc
js
loopne
rcl
in
jno
and
les
mov
dec
pop
xchg
mov
int3
pop
pop
push
dec
cmp
arpl
pop
sub
je
mov
arpl
ss
leave
inc
inc
arpl
or
in
cmp
jecxz
dec
mov
call
mov
push
loop
inc
push
stc
lahf
inc
addl
and
sub
imul
or
push
lds
and
popf
icebp
mov
or
push
and
xor
lahf
arpl
mov
gs
sbb
inc
cmp
or
lds
js
jmp
push
mov
pop
mov
aad
or
pop
out
cmp
inc
cmp
sbb
cmp
hlt
and
outsl
sub
dec
stos
add
pop
pop
lea
xchg
xchg
add
pop
mov
jg
int
lret
and
mov
lods
dec
shlb
les
subl
and
shl
cmp
lods
mov
or
addb
mov
dec
jbe
lds
sub
gs
arpl
fs
arpl
xor
mov
adc
adc
call
iret
in
cs
and
movsb
call
sbb
push
mov
pushf
pushf
mov
arpl
mov
call
add
push
dec
iret
mov
sub
test
mov
adc
jg
jmp
pusha
mov
in
and
pop
cmpsl
cmp
cmpl
sub
jnp
sbb
gs
pop
push
mov
push
out
mov
mov
gs
adc
mov
test
inc
dec
jecxz
sbb
sbb
xchg
lret
arpl
mov
daa
movsl
dec
mov
inc
xchg
incl
xchg
mov
in
push
arpl
test
inc
int3
test
shlb
pop
gs
inc
jecxz
sbb
cmp
push
in
icebp
int3
sbb
dec
push
iret
jo
test
adc
sahf
fcompl
inc
push
call
push
xor
push
ss
mov
jae
push
adc
adc
push
arpl
jmp
or
fucom
imul
popf
lahf
imul
test
adc
scas
inc
push
cmpsb
mov
mov
xchg
daa
mov
pop
orb
xchg
pop
push
dec
sbb
xor
dec
fbld
cmpsl
push
push
mov
gs
pop
or
stos
xchg
adc
scas
push
lcall
out
and
inc
stos
xor
dec
jecxz
push
mov
int3
adc
add
xchg
and
inc
push
lea
push
addr16
idivl
pop
inc
push
xchg
arpl
mov
scas
and
scas
arpl
daa
push
inc
push
lea
jnp
std
pop
stc
sub
imul
jp
sbb
inc
sbb
mov
nop
sbb
sub
int3
lods
pop
adc
xchg
cmp
lods
out
les
insl
out
add
jp
aad
mov
lcall
xchg
lcall
inc
in
push
je
filds
test
shlb
dec
gs
xchg
add
inc
and
.byte
.byte
