clc
iret
push
mov
mov
dec
rcrl
aaa
cmpsl
mov
inc
mov
xchg
out
xor
pop
ja
outsl
iret
jmp
pop
xchg
inc
push
mov
sbb
push
aas
and
inc
xchg
xchg
push
fldcw
test
aas
addl
cmpsl
sbb
xor
fs
xchg
fadds
push
mov
push
mov
jg
in
push
cmp
test
sub
adc
push
xor
jmp
xchg
fiaddl
sub
lock
mov
insb
dec
lods
cs
addr16
add
shl
sbb
sbb
xchg
aam
in
dec
or
ss
push
icebp
dec
or
repz
in
cmc
jge
pop
in
jno
lret
fisubs
insb
xor
xchg
adc
daa
or
mov
mov
sahf
xchg
push
adc
sbb
popf
pop
lcall
loop
nop
sub
sarl
mov
mov
push
jmp
rcrb
mov
jge
icebp
icebp
in
cmp
sub
sbb
mov
jge
add
dec
rol
mov
dec
cmp
jno
xor
repz
xchg
out
xor
ljmp
int3
out
jle
jb
jne
pop
out
inc
push
mov
inc
sti
mov
les
jmp
pop
push
or
add
imul
jb
adc
mov
jae
outsb
inc
rcll
sub
pop
aas
dec
lcall
out
mov
inc
insb
xchg
mov
mov
lahf
or
in
lcall
out
insb
push
lahf
cwtl
xchg
xor
jo
fbstp
stos
test
cmp
mov
adc
push
xchg
ljmp
pop
mov
cld
push
mov
push
inc
mov
jge
adc
mov
lds
xor
jecxz
push
ficoms
sbb
push
mov
shr
lea
test
dec
subl
xor
mov
mov
push
popa
mov
and
in
test
test
lds
rcll
aad
test
stos
das
push
popa
cmp
mov
sub
sbb
push
dec
jp
or
mov
mov
mov
pop
movsb
mov
push
stos
dec
mov
ss
add
outsl
les
sub
dec
pop
mov
fwait
aas
mov
xchg
adc
ja
jecxz
loopnew
and
sbb
dec
mov
dec
xchg
lcall
ds
mov
cltd
jae
lds
inc
lcall
xor
push
mov
sub
popf
cli
stos
mov
sub
xchg
mov
in
mov
and
pop
and
and
sub
cwtl
inc
xchg
mov
jb
mov
push
add
fdivrs
subl
fadds
cmp
jg
in
outsl
xor
lods
leave
loop
pushf
or
mov
pop
pop
xor
jp
mov
into
leave
pop
mov
cmp
filds
xor
mov
out
mov
cld
mov
cld
rorb
out
xchg
sbb
hlt
ds
and
mov
xchg
popa
dec
jno
cmp
test
mov
cs
xchg
mov
icebp
imul
push
stos
ss
scas
or
sub
ss
xlat
push
jle
fists
jnp
cmpsl
pop
add
fcomps
jae
icebp
rclb
xchg
jnp
add
cmc
ret
cli
iret
sti
push
push
push
mov
subb
retw
ss
movsl
cmp
pop
mov
sub
movsb
jp
or
shlb
adc
outsb
popa
mov
jbe
divb
sub
pop
loop
and
shlb
cmp
in
popa
sub
addl
inc
jbe
mov
xchg
sbb
dec
cmp
adc
jno
cmp
daa
pop
sub
loopne
mov
add
test
jnp
mov
icebp
jle
inc
sbb
push
addr16
test
clc
xchg
push
xchg
imul
icebp
hlt
jbe
rcll
stc
in
sti
mov
push
jno
jecxz
imul
push
cwtl
xchg
outsl
mov
cmp
ja
and
out
adc
or
xor
outsl
mov
mov
jns
cmp
cmp
xor
jge
jno
jne
mov
fwait
push
shll
pusha
in
clc
mov
test
sbb
mov
stc
in
xchg
dec
loopne
std
ja
adc
icebp
and
mov
scas
mov
sahf
insb
es
jbe
mov
jg
push
bound
fsubr
out
ret
pop
cwtl
rclb
mov
adc
repz
sub
mov
or
call
rcrw
arpl
xchg
js
sub
or
xchg
mov
xchg
insb
hlt
adc
push
mov
xor
stos
inc
dec
imul
jo
enter
xlat
pop
in
ljmp
pushf
clc
push
jo
aad
and
ficoms
cmp
movsl
push
dec
cld
jmp
inc
add
addr16
xorl
jbe
popf
mov
push
adc
sub
sub
and
lods
lods
sti
cmp
js
jge
clc
or
jmp
dec
aas
pop
ljmp
loopne
negb
pop
jns
lahf
les
pop
stos
jecxz
mov
repnz
bound
cli
jno
mov
push
jp
sti
divb
cli
push
dec
or
lahf
cli
fisttpl
insl
sarb
test
out
ret
xchg
ds
xchg
cmp
fldt
pop
sbb
lret
dec
fsts
or
adc
mov
insb
jmp
aaa
xchg
aad
test
int
or
leave
mov
pop
dec
aad
leave
jl
or
imul
fimull
and
mov
lret
fisttpll
aas
pop
jnp
imul
imul
and
xlat
cmp
icebp
cltd
mov
push
sub
add
add
inc
outsl
mov
out
in
orl
xor
ret
scas
rcrl
and
aaa
and
lret
aad
ret
int
icebp
lods
pushf
mov
fcomps
mov
mov
in
jg
out
xchg
xchg
callw
jmp
push
divl
inc
and
lock
and
sbb
and
mov
lock
aam
xchg
inc
or
lret
bound
adc
leave
rcr
pop
cmp
ds
adc
or
mov
shl
mov
inc
push
mov
js
inc
and
mov
std
data16
inc
xor
in
mov
stos
inc
daa
clc
cld
dec
ss
loop
das
pop
xor
adc
xor
dec
sbb
adc
push
iret
add
rdmsr
lods
fstl
aaa
loopne
imul
cmp
xor
outsl
mov
jns
leave
mov
mov
test
pop
cltd
mov
lret
addr16
das
jecxz
pop
adc
adc
sub
lret
iret
mov
add
jne
iret
sbb
popf
mov
adc
insb
push
jnp
add
scas
js
test
push
push
xchg
loope
lds
sub
dec
pusha
push
shlb
add
mov
test
jecxz
cld
lods
or
push
popa
sub
cmp
pop
pop
pop
test
jae
sbb
jge
xchg
popf
bound
xchg
xor
or
xchg
add
nop
xchg
xchg
sbb
xchg
push
rorl
notl
fwait
aas
fdivl
insl
add
jg
xchg
cmp
pop
inc
mov
and
popa
mov
jp
mov
out
mov
fiaddl
jle
cmp
inc
inc
pop
mull
xchg
xchg
jo
mov
pusha
cld
adcb
or
pop
cwtl
lret
xchg
xchg
fdivp
movsl
insb
push
jb
jns
cld
data16
movsl
jns
dec
lock
ds
ds
xchg
xchg
xlat
cmpsb
ficoms
jne
mov
loop
ficomps
add
add
pop
mov
aam
sahf
xor
push
in
xchg
pop
in
pop
sbbl
pusha
jno,pt
xor
fs
movsl
cmpsl
out
mov
daa
cli
sbb
rcll
ret
iret
inc
test
jbe
in
shlb
daa
cmp
cmp
pushf
push
in
lea
cmp
in
lahf
fidivl
jge
cmp
lret
adc
mov
cli
int3
or
pusha
es
jae
dec
repz
jecxz
or
clc
int3
jo
stc
ja
imul
jbe
jnp
lea
xor
test
stos
adc
jo
push
addl
clc
dec
js
jae
repnz
jmp
clc
mov
xchg
in
cld
int3
fldcw
pop
aad
faddp
mov
repz
ljmp
ljmp
scas
ficomps
inc
pop
shll
rcl
inc
mov
cmp
sahf
and
out
std
aad
cld
dec
das
mov
mov
stc
repnz
push
and
mov
or
or
push
imul
aaa
mov
mov
cmp
rcrl
xchg
cmp
scas
outsb
pop
es
jae
dec
cmpsb
fisubl
rclb
inc
scas
or
lret
daa
aam
xchg
enter
cmc
mov
lahf
xchg
xor
in
or
loope
ret
popf
cli
mov
or
test
add
out
es
xor
outsl
sub
pop
popaw
xchg
inc
stos
nop
fildl
vcvtdq2pd
sub
cmpsl
sub
and
dec
pop
push
jb
test
lcall
or
in
jae
mov
rolb
push
or
cltd
stos
lahf
pop
repz
fbld
pop
cmpsb
pusha
jmp
cs
cli
mov
pop
ret
aas
stc
cltd
xchg
je
sar
pop
out
jbe
rcll
mov
and
shr
or
or
and
insb
cmp
ret
xor
sub
push
fcompl
or
lcall
out
jne
repz
insl
mov
shl
push
xchg
add
test
aam
jae
sub
arpl
pop
mov
mov
adc
inc
shll
adc
mov
fbld
addr16
cmp
imul
jbe
imull
cmp
imul
jecxz
cmp
fidivl
push
xlat
leave
or
ret
xchg
std
nop
sub
add
test
jg
adc
and
lock
mov
divps
addb
jmp
and
xchg
cmpsl
sbb
sbb
pop
data16
or
mov
scas
pop
das
or
push
xchg
in
lods
xor
loope
cmp
mov
je
mov
lods
rol
test
and
sub
jne
nop
mov
jae
mov
and
in
xor
dec
repnz
add
ljmp
cs
lods
push
cmc
mov
pop
fld
jp
std
nop
in
dec
andl
or
cltd
pop
mov
dec
shrb
pop
stc
and
inc
mov
sahf
fcomps
mov
adc
fisubrl
cwtl
call
xchg
push
pop
jb
or
arpl
in
xor
jno
call
pop
nop
pop
movsb
adc
enter
int
sahf
rep
push
or
xor
sub
push
sbb
ds
idiv
or
fldt
xchg
cld
nop
aad
ret
leave
lods
imul
movsb
mull
mov
ret
out
jg
sbb
in
pop
inc
ljmp
test
or
sbb
cmp
push
mov
sub
and
jns
push
add
cmp
and
pusha
fidivrs
mov
xchg
mull
cmpb
fcmovu
lods
inc
inc
mov
jno
xor
xlat
mov
dec
in
mov
sub
imul
and
out
xor
ljmp
push
out
fisttpl
cli
mov
or
sbbl
stc
cmpsl
pop
int
jmp
mov
jbe
inc
cmp
add
dec
lods
es
mov
sbbb
push
lahf
and
dec
mov
lahf
aad
mov
je
dec
ror
cmc
mov
loop
inc
mov
fwait
push
das
mov
scas
jl
sub
sbb
inc
dec
in
js
or
xchg
fiadds
cwtl
pop
adc
inc
inc
adc
in
loop
cli
xor
push
cmp
push
insb
rol
mov
mov
adc
push
ret
inc
inc
sub
push
in
rorl
mov
popw
incl
lcall
inc
mov
inc
ret
or
inc
add
push
ljmp
adc
sbb
jns
test
test
inc
jmp
jb
je
adc
mov
std
pop
imul
and
sbb
xchg
push
jns
cmpsl
repnz
imul
add
dec
add
aaa
add
dec
idiv
xchg
or
iret
jge
and
ljmp
lock
dec
rolb
xchg
popa
repz
into
mov
aad
and
cmp
xor
ja
fsubrs
rorb
add
in
inc
lcall
push
jae
cli
xchg
sbb
cmp
push
add
or
ret
cmp
sbb
xor
xor
inc
iret
pop
lahf
arpl
shll
mov
cmp
call
xchg
push
insb
adc
bound
add
xor
and
push
mov
sti
push
cs
push
clc
and
mov
out
mov
xchg
cwtl
add
jo
jl
sub
arpl
adcb
and
xor
lcall
stc
mov
sti
nop
mov
xchg
lods
mov
loope
test
js
mov
adc
and
sbb
sbb
adcb
mov
in
daa
sbb
sbb
loopne
pop
scas
outsb
loope
test
int3
or
rorl
lds
loope
jmp
mov
ret
xor
mov
xor
pop
jo
scas
jae
cld
dec
insb
xchg
cmp
push
subb
sbb
mov
pop
jp
cmp
push
xlat
mov
jge
xchg
cmp
push
pushf
loope
xchg
in
xchg
gs
insb
aad
push
adcb
mov
js
scas
cmp
inc
enter
dec
add
push
push
mov
or
cmpsb
mov
rcl
push
mov
mov
in
xor
push
aad
pop
lret
pop
inc
push
shl
sbb
xor
xor
push
or
push
mov
ja
mov
mov
aad
loopne
xor
jo
push
je
adc
push
imul
out
push
add
inc
test
lahf
fldenv
mov
jmp
adc
movsb
gs
jo
and
pop
pop
in
stc
xor
xor
shrd
fldl
test
sbb
ss
dec
int3
jl
adc
push
enter
push
push
test
test
adc
incb
mov
sub
add
lahf
sbb
sbb
in
shll
dec
call
dec
jl
mov
pop
push
pop
dec
mov
not
jmp
filds
test
scas
pushf
mov
dec
stc
test
sub
movsb
out
test
lcall
nop
add
adc
fstl
movsb
gs
mov
inc
out
push
daa
mov
lret
icebp
mov
jbe
mov
inc
dec
cmp
adc
and
sarb
stos
test
mov
in
fld
fsubrs
mov
add
aad
ja
ficoml
and
cmp
cmp
scas
int
sahf
pop
and
and
pushf
outsb
rep
cmpsb
jns
cmp
in
jae
faddl
pop
leave
mov
aam
lea
xor
cmp
xchg
jle
add
or
adc
sbb
outsb
sub
jbe
adc
shr
aaa
xor
mov
pop
jns
lods
shll
in
pushf
dec
push
lcall
mov
or
scas
fs
js
xchg
sti
test
xor
dec
jns
pop
lock
cmp
push
testb
leave
clc
jno
ljmp
pop
add
lods
xlat
push
fsubs
push
inc
xchg
sbb
sub
ret
pop
aas
int
or
aas
push
sarl
sbb
js
gs
cmp
pop
pop
push
jp
dec
dec
in
pushf
or
cmp
fwait
popf
ds
sti
sbb
push
scas
cs
jo
shll
fadds
popf
jle
adc
mov
in
or
vpunpckhqdq
mov
xor
cmp
mov
fisttps
and
hlt
push
mov
xor
outsb
or
mov
clc
call
and
lret
int
sbb
jnp
outsb
mov
cmp
in
push
xor
and
enter
xchg
in
cwtl
mov
movsb
or
mov
adc
or
stos
or
jle
pop
test
cmp
mov
movsb
adc
imul
test
xchg
cmovge
push
adc
cmpsl
inc
xlat
jne
pop
cltd
dec
or
bnd
aas
iret
push
loopne
mov
jp
sub
cmp
adc
adc
inc
push
mov
ja
jg
pop
push
mov
lods
aad
out
sub
inc
addr16
sarl
jne
repz
cmp
popf
jne
or
fs
aad
loop
sbb
pop
das
and
lds
mov
push
and
insb
jp
or
xor
mov
add
xor
je
shlb
shlb
pop
popf
add
sarl
leave
iret
dec
inc
movsl
pop
lods
xor
jl
pusha
mov
aad
in
dec
xlat
adc
mov
push
arpl
sbb
negb
jmp
jge
out
adc
mov
inc
jo
inc
hlt
inc
inc
cmp
loope
stos
fs
aaa
cli
into
fidivrs
push
aas
fnstcw
xchg
clc
inc
xor
call
lret
jno
push
adc
adc
xor
loopne
lret
push
idivb
sub
adc
push
insw
cmpsb
sti
scas
dec
shll
scas
push
sbb
and
xrelease
xchg
sbb
mov
insb
mov
dec
sub
mov
sti
cmp
pop
cmc
xchg
out
imul
inc
jns
jl
popa
imull
cmp
cmpb
sub
negl
mov
mov
shlb
or
xchg
inc
jno
xchg
xchg
xor
xchg
jl
dec
and
jp
jb
call
or
int
and
std
out
jbe
xor
cmp
dec
sub
test
fsubs
xor
sbb
mov
dec
popa
fisttpl
sub
cmc
xor
mov
adc
mov
mov
or
lcall
cs
adcl
dec
pop
imul
addr16
xlat
sbb
and
call
and
iret
loopne
out
pop
out
mov
jne
cmpl
pop
sub
sbb
push
out
int
add
iret
push
shr
and
sub
outsb
mov
cmp
lods
sarb
push
jg
add
sub
sbb
xor
lret
popa
dec
and
fidivrs
in
jo
std
aas
nop
test
push
icebp
sarl
add
cmp
out
test
cmp
enter
rcl
iret
xor
sbb
mov
icebp
inc
cltd
nop
enter
das
push
sarb
cwtl
sbb
cmc
or
inc
sbb
mov
inc
mov
ror
cmp
in
jnp
push
lret
pop
inc
push
and
dec
mov
xlat
popf
mov
test
popa
nop
iret
pop
xchg
mov
cltd
ret
push
mov
daa
jge
lahf
sbb
add
lcall
scas
lret
popa
cmp
addr16
int3
out
jmp
or
sub
pop
arpl
int3
inc
sti
inc
dec
dec
jo
popw
enter
mov
push
jnp
orb
setb
add
daa
movsl
add
in
push
push
shlb
orl
sbbb
and
lcall
push
push
pop
xchg
and
pop
cmp
cltd
or
xchg
and
jecxz
or
pushf
les
xlat
cs
cwtl
dec
sbb
dec
pop
push
jne
inc
std
cwtl
aaa
fcmovbe
mov
mov
mov
xorl
adc
push
mov
stc
insb
popf
sbb
pop
fdivrs
jecxz
hlt
dec
lret
mov
mov
mov
stc
jb
sarb
sarl
mov
out
mov
add
xor
jl
insb
das
scas
clc
jb
inc
jecxz
inc
mov
push
enter
adc
inc
les
xor
or
stos
jo
outsb
test
movsl
xor
sti
push
mov
xchg
int
pop
push
or
sbb
mov
dec
hlt
ret
xchg
fisttps
fs
loop
cmpsl
fcmovb
adc
fidivrs
pop
inc
int
loop
mov
xchg
or
clc
push
inc
dec
fmulp
jmp
fwait
rclb
jae
mov
sbb
mov
es
and
insb
sub
dec
sub
ljmp
cmp
rcll
aaa
adc
xor
push
xchg
lea
pusha
insl
testb
dec
adc
cli
pop
push
stc
pusha
inc
mov
xchg
push
sbb
call
shlb
pop
cmpsb
mov
out
inc
sbb
dec
loopne
pop
cld
or
push
sub
iret
mov
dec
mov
enter
and
int
pop
mov
out
xor
andb
dec
adcl
pop
mov
lea
lahf
mov
sti
mov
cltd
push
and
mov
mov
stos
pop
mov
mov
je
dec
sbb
push
dec
lock
xlat
test
xor
mov
push
sbb
push
loopne
and
inc
pop
hlt
jne
insb
dec
test
cmp
fcomip
in
in
rcll
daa
and
sub
xor
addb
push
pushf
pop
push
leave
xor
insb
sbb
cs
aam
and
out
fdivl
push
jnp
pop
fstpl
dec
mov
add
and
dec
sbb
mov
cmp
mov
lods
jo
call
adc
or
push
inc
adc
cmp
aas
movsl
lret
int
js
mov
test
subl
mov
aad
jge
rcrl
hlt
mov
add
sbb
mov
loope
jbe
lods
idivl
mov
cltd
repnz
sub
popa
lret
mov
aam
repz
mov
add
ret
xchg
pop
mov
jnp
jle
sub
xchg
cld
fcmovnu
stos
addl
xchg
mov
jae
loop
cwtl
sub
push
in
mov
jnp
xbegin
cmpb
in
mov
xor
mov
and
xor
movsl
dec
fsubrs
int3
jns
idivl
scas
faddl
dec
jecxz
adc
cmpsb
sub
xchg
push
orl
jecxz
xchg
or
mov
or
xchg
into
test
gs
loope
dec
cmc
and
and
dec
sub
add
aad
int3
notl
ds
sbb
les
icebp
imul
push
lahf
adc
sbb
adc
lods
jecxz
loop
or
cltd
test
stos
pop
jo
mov
insl
insl
lock
lock
fistps
mov
push
xchg
jb
inc
mov
sub
test
xchg
jb
cmc
popf
arpl
pop
xchg
out
test
rclb
enter
xchg
add
stos
xchg
inc
insb
aas
movsl
in
pop
dec
dec
movsb
mov
push
int3
mov
mov
jp
and
xchg
xor
mov
cmp
mov
dec
jo
test
mov
test
mov
pop
cmp
idivb
fstpt
call
out
shr
push
mov
jae
adc
aaa
adc
pop
iret
jns
push
jle
sub
or
fstl
inc
fcompl
jo
or
add
cmpsb
jmp
mov
sbb
dec
sahf
sub
mov
popa
mov
imul
pop
push
jp
push
mov
push
adc
xor
mov
jmp
arpl
fidivrs
das
mov
sbb
mov
xor
mov
clc
addr16
out
pop
jo
mov
push
leave
push
pop
adc
cmp
das
add
out
sub
ljmp
add
adc
ret
xor
xchg
or
gs
lahf
inc
bound
call
mull
outsl
shrb
rcl
push
adc
rorl
and
adc
jl
sahf
js
cmpsb
das
mov
inc
ds
lock
cmpsb
enter
add
mov
mov
jecxz
fadd
pushf
in
push
cmp
dec
stos
js
adc
outsb
stos
sbbb
ret
pop
std
pop
inc
aam
pop
pop
xchg
fimull
xor
je
mov
jle
pop
pop
inc
int
ror
adc
je
xchg
aaa
sbb
cmpsl
je
xchg
jle
mov
popf
or
jo
dec
ret
mov
cs
lret
loope
adc
cmp
xor
mov
leave
or
shlb
sbb
inc
dec
in
das
mov
ljmp
cmp
or
push
arpl
cmp
add
mov
test
cmp
repz
outsb
sub
sarb
and
jge
addr16
shrb
test
or
mov
or
push
add
test
and
repnz
sti
clc
sarl
addb
and
xor
test
jns
lock
int3
dec
ss
push
pop
cld
adc
inc
inc
mov
adc
inc
hlt
add
dec
xchg
and
movl
pop
mov
lock
pop
adc
in
std
repz
addl
imul
ja
lret
sti
pop
test
inc
mov
jp
adc
cmp
shl
ja
popf
add
sbb
mov
mov
and
in
clc
enter
add
add
outsb
pop
cmp
loop
leave
lods
mov
cmc
cwtl
jp,pn
dec
aad
or
xchg
movsl
add
dec
stos
sub
jns
scas
pop
push
arpl
fadd
dec
popa
push
aam
cltd
mov
ror
xchg
in
cmpsl
insb
add
cs
xchg
push
fildll
mulb
mov
fnstsw
test
das
scas
ficoml
leave
add
push
xor
mov
pop
add
mov
iret
cmpsl
mov
dec
mov
out
push
sub
sub
push
mov
ficoms
scas
aam
push
and
stos
loop
dec
bound
clc
in
mov
jo
movsb
rcrb
adc
add
sbb
in
rcl
adc
int
xchg
shr
mov
fstpl
xor
xchg
pop
lods
jns
into
jecxz
outsl
push
inc
or
cmc
adc
dec
data16
fwait
push
inc
jge
ljmp
les
jl
mov
sub
adc
popf
mov
dec
or
pusha
test
fisttpll
pop
subl
pop
xor
lds
pop
daa
ss
inc
out
rcrb
movsl
cmc
in
cmpsl
and
rolb
out
arpl
pop
stc
sbb
cmpsb
mov
or
xchg
adc
cmpsb
lods
mov
jecxz
add
dec
and
test
and
cmp
loopne
add
adc
xor
ss
nop
mov
add
inc
int
stos
loop
loop
push
xor
or
jl
push
test
loop
mov
sub
pop
push
cltd
sub
loop
mov
pop
dec
cmc
dec
mov
cld
fwait
push
shlb
inc
lods
ja
mov
mov
jne
stos
jbe
rcr
or
jp
jns
fdivr
jo
sub
lahf
jecxz
jl
lds
repz
xchg
cli
ljmp
xchg
sbb
lcall
imul
test
jecxz
jae
scas
push
xchg
sub
cmpsb
outsl
dec
fs
test
push
or
ret
pop
push
shrb
xor
add
enter
pop
sub
pop
cmc
or
loope
cmc
or
loop
mov
popf
negl
adc
les
and
or
pop
push
pop
movsl
mov
fdivs
iret
mov
cmp
test
out
mov
out
int
sbb
test
movsl
mov
lahf
fnsave
push
inc
lock
push
push
cwtl
enter
mov
cltd
out
pop
addr16
xchg
jnp
imul
mov
mov
and
adc
mov
sub
or
imul
lcall
and
mov
mov
sarb
add
cmp
insb
ja
sahf
or
fdivrl
and
jo
cmp
jae
inc
std
xlat
jbe
jo
jp
lea
repnz
mov
test
iret
bound
shrb
nop
jae
xorl
push
jmp
enter
and
xchg
fs
sub
add
je
xchg
cmp
cli
addb
ret
jecxz
mov
das
scas
lea
mov
repz
push
xchg
int3
enter
mov
pop
arpl
mov
je
ror
push
cwtl
dec
gs
addl
mov
or
pop
rol
xchg
push
rcrl
fidivl
inc
adc
adc
fistl
std
loop
mov
add
or
div
cld
jns
imul
push
cmp
mul
pusha
ds
xor
out
in
outsl
xor
jmp
and
push
sbb
outsb
cli
std
in
sbb
push
cmp
or
xor
imul
rcl
cltd
cltd
gs
fnstsw
sti
daa
mov
jg
subb
push
ljmp
adc
xor
mov
fwait
or
shlb
dec
mov
mov
rorl
pop
jg
decb
mov
jl
aaa
push
ljmp
adc
and
mov
imul
loop
movsb
adcl
xor
call
repnz
jnp
push
lods
or
int3
pop
inc
aam
mov
cmp
lret
sub
in
push
ja
inc
sbb
imul
sub
iret
loop
cmp
dec
add
jmp
stos
mov
jno
fisttpl
jle
mov
imul
jb
xchg
cmpsb
or
and
and
mov
mov
add
pop
add
fsubrp
rcrl
mov
cmp
dec
dec
mov
xor
jo
nop
sbb
pop
aam
lcall
xchg
rolb
pop
mov
dec
rcll
dec
pusha
aaa
lcall
shll
flds
ja
push
xor
xchg
pshufw
sub
lret
dec
mov
fadds
fadds
inc
mov
sub
mov
xor
cmp
inc
xor
mov
rorl
stos
nop
mov
js
add
mov
lds
ror
pop
push
icebp
xchg
cmp
nop
dec
or
ror
pop
sahf
ret
leave
inc
movsb
enter
scas
or
movsl
cmp
and
popa
sub
std
hlt
pop
mov
add
push
lret
mov
hlt
sbb
in
out
or
pop
mov
pop
inc
jp
rcrb
inc
push
pop
dec
xchg
aaa
inc
inc
sbb
sbb
xor
jo
js
fisttpl
pushf
in
popa
out
dec
mov
adc
jg
sub
pop
sti
sub
and
aam
mov
jge
push
cmp
sbb
iret
lcall
push
and
push
inc
ds
shlb
and
adc
dec
inc
push
xchg
fnstenv
mov
inc
jle
push
je
fisubrs
and
sar
outsl
pop
aad
les
call
lock
iret
cmp
sbb
cmp
mov
mov
mov
aas
pop
stc
pop
push
stos
push
adc
mov
add
out
insb
sub
inc
out
jg
int3
mov
lds
fstpt
cmp
ja
aas
aas
rorb
xor
imul
mov
inc
jnp
sbb
rcll
orb
cli
fcoml
cs
xchg
xchg
adc
sbb
mov
daa
fimull
add
aad
push
iret
push
out
arpl
add
lcall
mov
ljmp
inc
mov
je
mov
iret
std
fwait
add
ret
adc
dec
xor
or
mov
daa
pop
subb
or
xor
hlt
lods
les
lods
mov
test
ret
les
adc
incl
pop
sub
sub
lods
icebp
push
mov
pop
bound
jb
testb
push
popf
jp
cmp
mov
imul
lcall
mov
fs
movsb
rcl
xor
repnz
jo
cli
aaa
adc
out
mov
es
push
mov
pop
sbb
sbb
and
popf
out
mov
mov
add
dec
push
xchg
jns
aad
icebp
mov
insb
xor
popf
sbb
movb
mov
or
jae
cmpsl
inc
dec
jae
inc
cmc
cmp
xor
push
insl
jb
mov
add
pop
mov
mov
and
mov
cmpsl
fcoml
ret
jnp
lds
xchg
in
outsb
sub
mov
adc
adc
jnp
pcmpeqw
ljmp
cmp
fwait
mov
aad
sbb
idivb
inc
das
jne
xchg
push
mov
rolb
mov
cmp
lods
test
xorl
lods
enter
mov
inc
notl
bound
xchg
jl
mov
das
shlb
push
in
out
mov
cwtl
shlb
into
mov
std
dec
in
scas
rclb
inc
jle
sub
shrb
mov
test
call
dec
sti
mov
adc
cld
rol
jg
push
mul
sbb
imul
ret
rorl
lcall
cli
mov
xlat
test
and
dec
mov
push
addb
ja
aad
push
add
dec
mov
sahf
add
into
and
pop
in
bound
and
leave
jp
inc
call
push
nop
dec
shlb
mov
sbb
and
outsl
sub
mov
add
mov
rorb
adc
xlat
adc
adcl
add
push
jecxz
jae
bound
mov
cltd
fwait
es
sbb
dec
jl
fisubrs
sbb
cld
out
fs
pop
or
loope
jno
mov
cld
push
xor
fwait
ret
dec
dec
in
scas
fildll
mov
push
mov
shrb
adc
bound
in
or
das
or
or
imul
insl
sahf
imul
lods
lds
jle
jecxz
mov
xchg
fistpl
pushf
scas
iret
mov
loope
fnstsw
push
and
add
mov
test
sti
cwtl
cs
push
jg
add
ror
sub
roll
mov
test
inc
cmc
ja
int3
leave
adc
es
jo
and
inc
dec
in
jno
cmpsb
cmpsl
sub
pop
mov
ss
loope
daa
push
movsb
cld
imul
jp
sbb
or
sbbl
ss
mov
xor
jl
or
dec
and
outsb
daa
movsl
out
test
in
in
mov
push
sbb
outsl
movsb
cmp
fistps
into
sahf
push
in
add
pop
mov
bswap
insb
stc
mov
dec
fwait
iret
and
repnz
cmp
sub
rcll
and
outsb
stos
jbe
mov
mov
xor
and
cmp
aaa
mov
call
pushf
pop
enter
dec
inc
mov
out
imul
fs
scas
mov
cmc
fisubrl
sub
mov
xlat
or
imul
xor
push
mov
stos
mov
jge
sub
xlat
cmp
dec
mov
call
inc
adc
mov
stos
std
ret
add
xchg
lcall
mov
in
call
mov
nop
scas
jg
int3
inc
int
in
mov
mov
mov
aam
lcall
daa
sahf
sbb
adc
es
mov
cltd
es
jl
dec
xor
xchg
mov
out
sub
sarl
fdivrs
insb
mov
add
or
popa
xchg
sbb
cmp
adc
mov
or
xlat
mov
mov
xor
daa
ror
pop
fiaddl
bt
pop
dec
addr16
jbe
popf
iret
xchg
testl
xchg
dec
push
mov
popf
in
jecxz
mov
popf
mov
dec
push
mov
jmp
imul
out
xchg
das
jmp
push
dec
sub
push
pop
leave
lret
inc
sub
mov
push
jb
nop
xchg
icebp
out
outsl
insl
push
cltd
and
mov
lods
lret
cwtl
rep
scas
popa
add
jle
lret
mov
cmpsb
arpl
in
movsb
movsl
adc
daa
js
std
pop
movsl
pop
out
arpl
dec
mov
adc
shll
mov
enter
pop
jns
fmuls
fwait
mov
sbb
outsl
xchg
je
xor
mov
xchg
add
je
outsl
lods
jp
push
xor
sbb
ret
daa
and
mov
cmpb
add
and
cld
dec
inc
pop
inc
mov
xchg
aas
push
dec
push
add
outsb
add
and
testl
lods
jmp
and
xchg
inc
mov
mov
cmp
mov
mov
pop
ss
xchg
push
sbb
xchg
jmp
inc
xlat
test
push
repz
rol
dec
mov
pop
mov
mov
add
fidivl
repnz
scas
popf
adc
test
sub
xchg
lods
inc
pop
push
out
ss
int3
pop
and
arpl
fwait
cmp
cmpsl
into
push
ja
push
cld
mov
jmp
outsl
xchg
fwait
push
inc
inc
les
pop
sbb
dec
ja
or
js
outsl
mov
xor
cmp
aam
or
shlb
cs
cmp
mov
mov
dec
and
and
xchg
add
outsl
rol
movb
push
movsb
outsl
test
out
out
xchg
mov
sbb
cmp
or
lods
sub
mov
test
sub
dec
add
jne
hlt
and
int3
mov
xchg
or
test
mov
iret
cwtl
fsubp
out
loop
sbbb
mov
shrl
loop
shlb
xchg
out
xchg
add
mov
and
inc
inc
movsl
and
inc
jp
mov
fmuls
or
adcl
xchg
pop
sub
in
jmp
sbb
sub
in
sub
add
mov
or
cmp
push
dec
std
push
popf
leave
add
lods
pop
pop
cli
stos
and
out
dec
mov
xor
mov
fistpll
lret
and
adc
push
scas
sbb
jmp
jb
mov
mov
outsl
inc
fstpt
cmp
aas
or
adc
xor
pop
mov
cmp
aad
mov
cmp
repnz
or
adc
test
jp
into
sbb
lock
mov
sbb
sub
aad
hlt
and
or
mov
lret
xchg
outsb
addl
pop
nop
arpl
andl
aaa
mov
scas
cmp
cs
aad
mov
inc
imul
mov
fistps
push
loope
lcall
pop
lds
pop
xlat
mov
mov
push
xchg
mulb
inc
mov
movsl
jbe
sbb
add
pmullw
sbb
mov
jns
inc
orb
lea
jnp
pushf
jl
cmp
pop
mov
mov
cli
lret
sbb
shlb
dec
jno
push
fwait
pop
pop
test
pop
add
ja
xchg
subb
push
mov
jmp
inc
dec
mov
shrl
lret
fdiv
mov
scas
and
inc
test
repz
out
inc
js
adc
scas
cwtl
mov
sub
jg
shlb
imul
leave
xor
xchg
pop
arpl
insb
je
ret
notl
ret
test
sbb
add
iret
push
adc
xchg
inc
shl
jo
lret
imul
mov
cmp
lahf
and
xchg
enter
cli
jnp
dec
pop
movsb
xchg
stos
pop
lcall
pop
mov
loopne
mov
mov
xor
inc
mov
in
jecxz
fiaddl
testb
sti
push
addl
pop
mov
orb
sti
in
and
daa
les
adc
pushl
cmpb
xchg
into
sbb
popa
jmp
xchg
push
mov
xchg
xchg
es
test
stc
mov
movsl
aad
push
or
out
movsl
insb
nop
dec
mov
and
cmp
or
adc
jno
sbb
add
lret
mov
mov
dec
out
mov
push
cmpsb
mov
aas
jle
jg
addr16
jo
fwait
xchg
loopne
mov
mov
push
inc
iret
rcll
mov
das
clc
out
lock
xor
das
clc
repz
push
outsb
or
out
pop
outsl
push
rclb
outsl
fsts
xor
fistpl
dec
add
push
and
fimull
dec
cltd
mull
out
push
cmpb
push
dec
cs
into
and
xor
fisttpll
jb
addr16
aas
adc
das
dec
sbbb
xchg
f2xm1
push
fabs
enter
enter
ficompl
mov
es
addl
add
dec
jbe
stos
rol
pop
lock
lods
enter
cmp
pop
sub
push
sbb
pop
ja
ljmp
dec
sti
push
mov
dec
dec
addr16
and
xchg
push
fsts
dec
mov
cwtl
shlb
fwait
mov
mov
inc
aas
jns
ficoml
sbb
push
test
xchg
pop
jns
xor
nop
cmp
in
cld
dec
outsb
loopne
outsl
idivl
mov
pop
arpl
mulb
push
cmp
mov
in
pop
push
sahf
inc
ret
xchg
add
mov
faddl
mov
in
add
dec
mov
add
push
jecxz
sahf
sub
das
cs
or
jg
jae
cmp
xchg
orl
mov
fs
int3
sarb
jp
loope
mov
push
cmp
sub
xchg
mov
test
inc
jnp
loop
cmp
jl
add
fsin
add
dec
fdivrs
dec
lds
or
pop
sbb
pop
add
xchg
aas
cli
fidivl
cmp
lret
push
fmul
sub
mov
sti
jb
cltd
popf
fcoml
push
rcrl
cmpsb
loop
cltd
dec
mov
inc
cmp
mov
scas
xchg
inc
aas
nop
aam
cs
inc
pop
add
leave
push
push
pushf
mov
jns
pop
ffree
xor
push
adc
dec
cmpsl
aam
mov
pop
rolb
add
gs
ds
lret
roll
insb
cwtl
xor
or
ficoms
inc
xor
inc
cltd
xchg
in
sti
not
add
cmc
push
shrb
add
jne
xor
ljmp
add
les
bound
jb
popf
add
jns
insb
jmp
pop
jnp
xchg
mov
xchg
cs
stos
push
pmaxsw
cwtl
stos
sub
pusha
xchg
adc
stos
rep
mov
mov
nop
mov
enter
fcomps
sarb
fists
xor
dec
fstpl
sbb
push
adc
pop
daa
ja
xchg
mov
add
in
js
cltd
mov
pop
loope
sbb
cmc
addr16
fildll
add
cs
mov
dec
aas
or
sbb
aad
insl
jle
std
push
sbb
mov
mov
pop
and
data16
or
jae
cltd
push
std
test
dec
je
shll
data16
and
notb
sbb
jl
lret
or
mov
daa
or
daa
cmp
sar
movsl
mov
sbb
xchg
mov
cli
call
mov
xor
sub
cld
push
dec
jns
pop
repz
pop
mov
aas
sub
orb
enter
in
idivl
mov
sbb
inc
cmpsb
jno
gs
mov
mov
sahf
dec
sub
push
movsl
adc
shrb
in
fstpt
lahf
mov
ja
fldcw
jmp
fs
mov
test
into
push
pop
sub
clc
stos
add
test
mov
cmp
in
xchg
pop
xchg
fisttpll
int3
insb
sti
call
adc
imulb
or
inc
push
inc
pop
cmp
xor
inc
outsl
push
les
iret
mov
push
add
scas
pop
insb
mov
push
dec
mov
xchg
pop
push
sbb
dec
ret
and
test
cmpsb
push
aaa
lcall
jmp
jl
pop
sbb
rcrl
dec
mov
and
sbb
fbld
cmp
mov
jmp
add
adc
cmp
insl
mov
pop
pop
cmp
sbb
sbb
insl
fldt
mov
inc
lret
mov
dec
imul
repnz
dec
mov
leave
popa
in
mov
lcall
mov
fisubrl
sbb
repnz
xchg
out
or
jge
in
pusha
xchg
cltd
mov
cmp
test
sahf
mov
pop
mov
sbb
jge
xorb
ljmp
out
xchg
popf
mov
lret
adc
jnp
pop
insl
cmc
cmpsl
aas
jne
xchg
mov
gs
in
xlat
out
push
push
cld
lods
mov
mov
pushf
adc
xchg
inc
pop
sub
xchg
test
sbb
inc
mov
cmp
fbld
mov
mov
mov
push
std
sbb
test
daa
and
add
jnp
icebp
inc
push
jmp
add
jnp
mov
sbb
mov
jns
push
shl
jb
mov
outsb
pop
pop
les
ret
and
sbb
test
lret
pop
rorl
les
sub
fimull
negl
negl
or
in
out
sbb
jno
dec
and
pusha
aaa
adc
push
dec
jae
pusha
hlt
test
mov
sbb
sbb
push
add
orb
dec
sti
xor
lods
and
faddl
add
mov
or
cwtl
sbb
lds
mov
addr16
mov
lahf
pop
inc
push
pop
push
push
and
push
icebp
and
add
cmp
test
jne
fs
add
sahf
jmp
stos
sbb
cmpsb
push
cmp
insl
jno
cmpsb
mov
fs
and
lret
int3
adc
out
push
xor
mov
and
push
xorb
fldenv
in
mov
jb
or
mov
cmp
adc
lods
push
add
sbb
fwait
test
adc
fsts
xchg
fs
das
or
ss
push
sbb
sub
idivl
pop
aaa
inc
out
mov
mov
sub
movsb
adcl
fldenv
movaps
sahf
jns
shl
inc
mov
xlat
outsb
dec
or
repnz
out
jnp
popa
lods
pop
cmp
mov
cmove
mov
push
xor
mov
shrl
pop
cmp
mov
mov
iret
adc
pop
test
mov
stos
add
out
sbb
xor
data16
cli
jmp
fiaddl
jo
pop
mov
popa
lahf
jmp
mov
dec
or
sbb
jg
shrb
jp
lods
movsl
loope
insb
mov
cld
xchg
jmp
sbb
dec
in
nop
jg
sub
xor
dec
inc
scas
inc
jne
nop
mov
sub
outsl
add
cmp
data16
stos
lcall
add
in
push
mov
out
jns
shlb
and
mov
cmpsl
jnp
dec
nop
pop
outsl
lcall
ss
lcall
fidivrs
inc
xor
insb
xchg
sbb
out
jg
cmc
loopne
jmp
mov
sub
test
add
add
pusha
add
dec
pop
sub
iret
add
mov
out
les
clc
fbstp
int
jb
mov
xchg
movsl
int3
sbb
movsb
iret
rorl
gs
dec
pop
and
test
mov
icebp
jnp
push
clc
dec
cmp
mov
les
xor
roll
out
add
inc
or
daa
out
aam
lock
and
sbb
test
sti
js
pmaxsw
stos
mov
int3
fimuls
mov
dec
movsl
sbb
out
adc
xchg
jnp
mov
rolb
pop
iret
imul
lock
je
aas
cmp
push
mov
leave
idiv
push
dec
or
add
xor
and
fadds
fcoms
jnp
mov
test
fiadds
push
sub
and
shl
jl
dec
jecxz
fsts
popa
push
adc
push
ret
cli
pop
out
cmp
and
pop
mov
xchg
adc
pop
sti
push
shll
das
js
inc
push
jo
xchg
jl
filds
cmpsl
dec
icebp
lods
test
outsl
ds
pop
fwait
addr16
dec
and
in
cltd
push
pop
push
pop
inc
mov
imul
addr16
fldcw
mov
adc
xor
stc
popa
mov
push
mov
jl
test
lock
push
inc
sub
cmp
sbb
icebp
or
add
adc
inc
pop
es
mov
mov
adc
lods
mov
cli
fcoml
xchg
push
mov
into
mov
mov
repz
stos
add
xchg
outsb
ljmp
jbe
push
push
xor
pop
pop
xchg
inc
mov
in
cmp
jne
mov
shr
pushf
in
test
adc
pop
inc
xor
lea
sub
lods
stos
pop
xor
jge
pop
inc
dec
or
mov
mov
jne
movsb
std
push
jns
test
and
mov
xlat
pushfw
sub
dec
mov
mov
testw
inc
stc
popa
pusha
sarb
cmp
insb
push
xor
fdivs
ja
mov
ret
ret
push
pop
or
push
cmpsb
mov
aad
ss
inc
rcrl
and
scas
add
pop
pop
and
pop
jae
pop
xchg
or
jb
jo
sbb
push
mov
pop
push
xchg
push
fisubl
mov
adc
jo
mov
inc
inc
movsb
push
lahf
cwtl
inc
pusha
stc
aam
stos
test
rep
adc
out
jne
xor
je
push
fnsave
mov
mov
flds
cmpsb
roll
scas
fstps
adc
push
mov
mov
popf
mov
xchg
call
pop
leave
sub
push
fs
mov
mov
xchg
stc
dec
sbb
xchg
sbb
dec
sahf
mov
cld
jge
ljmp
mull
ss
mov
call
ret
out
pop
add
add
in
xlat
add
imul
lret
int3
int3
btc
movsb
sahf
inc
add
test
add
sub
inc
addr16
popf
sbb
mov
or
rorl
add
jl
mov
lods
fsincos
popf
ss
stos
jg
call
mov
ret
mov
outsl
xchg
clc
imul
jb
jecxz
add
sub
pop
jl
jbe
lods
pop
xor
mov
test
adc
clc
divw
insl
inc
cli
add
divl
test
lods
fdivrs
mov
scas
and
jae
out
mov
fists
add
and
push
jge
cmp
mov
bound
mov
cmp
xchg
hlt
mull
push
push
lret
cltd
sbb
pop
pop
mov
xchg
mov
pop
mov
fs
ss
shrb
pop
mov
adc
mov
jg
ljmp
mov
xor
pusha
jo
pop
enter
jne
mov
ja
subl
andl
lea
adc
pop
fucomp
rclb
out
fiaddl
inc
stos
push
jecxz
jns
mov
mov
jge
pop
and
jnp
mov
xlat
sbb
sub
or
push
sbb
nop
jae
inc
sbb
or
fildl
std
lods
mov
pop
pop
adc
cmp
loope
add
mov
xchg
clc
ret
xchg
out
sbb
xchg
adc
aam
icebp
aad
aam
test
xor
jp
mov
xchg
es
xor
dec
sub
or
cld
mov
dec
icebp
mov
fimull
fcompl
mov
test
popl
pop
xchg
stos
mov
add
jo
mov
or
bound
pop
mov
iret
adc
mov
outsl
cmp
cmpsb
lock
fidivrs
xor
clc
lds
ja
sbb
outsb
xor
pop
mov
mov
inc
push
clc
fwait
daa
popf
cmc
cmpb
sub
icebp
push
fidivrs
jmp
divl
lds
pop
xchg
push
push
xor
mov
or
mov
in
push
pop
push
sub
out
ret
inc
sub
pusha
cmpsl
inc
test
shrl
test
lret
sub
add
sbb
jns
xor
inc
xor
xchg
addr16
mov
pop
mov
cmpsb
lcall
loopne
cli
cmpsl
push
cs
xchg
or
jle
xchg
pop
shrb
dec
mov
push
mov
mov
jbe
mov
loopne
or
ljmp
daa
js
lret
pop
inc
mov
sbb
push
pop
fisubrl
pusha
icebp
sub
and
mov
jbe
xchg
leave
repnz
loope
lock
mov
aas
and
or
iret
add
fs
add
test
stos
adc
xchg
mov
mov
pop
mov
fidivrs
lahf
aas
sahf
dec
jb
jb
inc
test
sub
ja
adc
cmp
ret
cld
cltd
sub
pop
jno
jmp
or
outsl
std
cmpsb
xchg
aad
inc
and
or
sbb
jae
and
and
nop
jne
mov
sti
push
imul
jns
ljmp
cmp
xor
outsl
cmp
pop
ljmp
mov
sub
dec
ret
mov
fdivrs
stos
fcompl
movsl
or
pop
dec
mov
xchg
ret
lahf
repnz
jno
xlat
fmuls
addr16
sbb
mov
ds
stc
rcr
aaa
xchg
ror
lea
inc
sti
mov
in
mov
insb
pop
inc
xor
jne
push
xor
fmuls
ja
xchg
push
mov
rcl
daa
jp
mov
cmp
mov
test
and
jo
cmp
sub
inc
mov
aaa
add
js
mov
mov
xchg
or
loope
push
sbb
xlat
pop
xor
outsl
je
jbe
sbb
call
outsb
mov
mov
or
mov
sbb
arpl
add
sahf
stos
mov
cli
cmp
pop
sbb
dec
dec
ljmp
les
mov
test
outsb
inc
pop
inc
fdiv
ljmp
andb
insl
or
adc
repz
dec
arpl
repnz
cmp
cmpsb
in
repz
adc
daa
sbb
les
jns
cmc
sbb
gs
mov
inc
aad
xor
mov
scas
insl
jle
aad
pop
lock
aas
add
iret
mov
mov
xchg
adc
lods
sahf
and
stos
or
mov
and
lcall
dec
dec
cld
sbb
lcall
inc
fisttpl
dec
repnz
mov
dec
int3
sub
loopne
and
add
mov
inc
adc
inc
sbb
mov
cmp
or
fs
or
or
dec
push
popf
pop
insb
sub
aas
ffreep
push
jp
cmp
jg
daa
sbb
lock
mov
cmc
insl
outsl
xchg
dec
or
or
and
xchg
lret
mov
leave
insb
mov
pop
sub
jl
enter
xchg
loopne
imul
fmuls
outsl
mov
stos
lcall
cwtl
pop
into
mov
loopne
lret
je
lods
lods
adc
out
xor
pop
or
dec
mov
inc
xor
rol
jo
out
stos
int
sbb
or
in
ss
inc
aas
inc
adc
scas
jmp
scas
popa
dec
stos
sub
mov
cs
jge
cmp
xchg
cs
cmpl
inc
rorb
sub
ret
mov
int3
rorb
int
jae
call
xchg
or
cli
scas
or
nop
push
mov
js
mov
out
xor
cmp
push
repnz
roll
cli
sub
jmp
pop
movsl
pop
pushf
mov
add
bound
inc
and
fnsave
inc
xlat
insl
sbb
and
sub
icebp
in
inc
jne
pop
and
push
and
mov
loopne
fldl
mov
pop
dec
aaa
ja
mul
mov
inc
scas
and
loope
sti
mov
dec
stos
bound
shrb
sub
lret
jl
sbb
dec
pop
popf
cltd
dec
cltd
and
stos
inc
or
jmp
jne
mov
and
rcr
pop
add
xchg
jns
mov
bound
inc
cltd
cmp
cmp
mov
push
or
cmp
sub
mov
daa
cli
mov
inc
xchg
sub
mov
ret
inc
fdivrp
xchg
lret
jg
cmp
jns
sub
cmp
aaa
mov
ja
sbb
int
roll
orb
mov
lcall
mov
cmp
gs
mov
mov
je
adcb
lret
lcall
fisubrs
push
scas
mov
ds
add
dec
loopne
js
jecxz
sub
mov
sbb
sbb
jnp
sbb
lret
add
push
mov
pop
mov
xor
pop
les
jne
xchg
movsl
xor
aam
push
out
xlat
lret
fwait
insb
mov
lods
aam
mov
mov
outsl
cmp
cmp
ljmp
pushf
sti
push
dec
bound
cmp
push
push
jl
sbb
mov
iret
call
inc
mov
cmpsb
cli
push
sub
out
repnz
scas
mov
shlb
cld
xchg
hlt
sbb
insl
gs
imul
mov
and
cmp
inc
je
sahf
movsb
inc
movsb
xchg
cmp
mov
aaa
cmp
ss
iret
mov
nop
push
aaa
adc
adc
lahf
iret
mov
bound
push
xlat
out
adc
jae
inc
mov
and
jbe
push
loopne
sti
arpl
xchg
in
dec
or
push
inc
pop
cmpsl
lods
popf
scas
and
push
jp
push
imul
jae
sbb
lret
orb
out
pop
ss
nop
xchg
cmp
add
out
outsl
shll
add
out
mov
rolb
push
inc
sbb
ja
inc
mov
dec
fdivrp
test
adc
in
jl
xlat
or
mov
mov
jmp
enter
mov
jge
mov
jmp
cli
arpl
mov
jp,pn
mov
add
dec
mov
mov
in
pop
jecxz
add
adc
lret
rcrb
xorl
adc
and
jmp
data16
addr16
lret
adc
dec
mov
stc
lods
in
addr16
rorb
and
cld
popa
inc
xchg
test
mov
mov
movsb
add
shl
jle
xchg
and
adc
jno
daa
jle
push
dec
addb
dec
insb
xor
push
cli
addr16
add
xchg
mov
or
cmp
sub
fcompl
shll
dec
popf
loope
sbb
inc
push
out
xchg
cmpsb
jno
push
cltd
inc
icebp
push
or
mov
dec
hlt
xor
and
scas
lea
stos
shl
sub
cmp
mov
fistpl
scas
stos
jl
jne
adc
add
add
jne
dec
daa
cltd
push
cmpsl
jnp
sbb
sub
adc
notl
daa
or
xchg
aad
mov
mov
xchg
mov
fincstp
mulb
jg
mov
mov
sub
dec
mov
push
add
es
in
cmpsb
push
aad
jmp
push
push
data16
out
xor
dec
jle
mov
xchg
add
xchg
dec
jbe
sub
mov
add
adc
into
jp
jnp
sbb
rcrb
and
mov
push
fnstcw
jnp
xor
adc
std
adc
mov
jnp
xor
pop
push
and
cmc
je
inc
adc
scas
push
and
mov
mov
rcrl
aam
adc
mov
push
xor
add
mov
clc
movsb
mov
or
xchg
stos
mov
ja
insb
sub
shll
dec
test
pop
fwait
xchg
or
pop
push
xor
adc
cld
sub
data16
jo
sarl
mov
mov
jge
mov
dec
ret
adc
add
push
xchg
lock
and
insb
pop
jnp
jb
push
xchg
pop
bound
scas
pusha
push
mov
or
les
arpl
popa
xchg
pop
jp
dec
mov
stc
addb
std
jge
test
enter
xchg
jne
xor
and
aas
fisubl
ljmpw
adc
or
add
movsl
pop
aaa
mov
mov
jmp
mov
cmpsl
jl
pop
stos
jl
fisubrs
xchg
stos
or
push
inc
pop
rol
outsb
jecxz
jno
or
pop
int3
fstl
push
inc
dec
push
push
fsubl
pop
xchg
rcll
adc
sub
cld
jns
data16
add
faddp
ljmp
aaa
xorb
fcom
bswap
inc
or
iret
pop
pop
lret
sub
cmp
adc
push
mov
and
dec
mov
cmp
out
sbb
cltd
hlt
jge
mov
xchg
cs
adc
jnp
ja
mov
mov
xchg
sub
cwtl
ds
push
xchg
push
mov
scas
int3
cltd
inc
and
jae
mov
xor
lcall
sti
pushf
add
sbb
into
sti
push
dec
mov
push
inc
jp
xchg
sbb
xchg
cwtl
js
outsl
js
hlt
mov
pop
jle
scas
rorb
xor
sub
xchg
mov
scas
mov
cmp
repz
je
movsb
add
fwait
je
loop
jo
pop
cwtl
aaa
pop
leave
decb
xchg
sbb
or
arpl
mov
cmp
lret
xchg
push
aas
and
fwait
or
push
shll
xchg
faddl
jle
jno
repz
jns
je
in
sbb
aam
or
call
mov
mov
xlat
pop
ss
xchg
and
xchg
rol
imul
ret
dec
inc
jle
movsl
xchg
gs
inc
dec
cmp
daa
xor
ss
test
add
or
and
hlt
xchg
pusha
mov
jp
enter
mov
ret
mov
loopne
cmp
xchg
rcr
sub
popa
fs
jb
jle
push
repnz
in
dec
sub
jae
adc
dec
mov
out
lar
dec
lods
jne
ffreep
lret
mov
aas
sbb
inc
das
fistl
in
outsl
jle
push
es
xlat
test
and
pop
xchg
sahf
inc
int3
pop
pop
mov
inc
adc
cld
out
repz
sub
jns
add
xor
pop
je
and
jo
mov
cs
mov
stos
mov
pop
xor
pop
cld
xchg
sub
push
jle
or
aam
and
out
fidivrs
jle
imul
cli
push
sub
jecxz
fwait
dec
lds
jae
mov
enter
out
cmp
in
call
mov
inc
xchg
lods
sub
enter
pop
popa
mov
inc
dec
jbe
jle
adc
fisttpll
mov
mov
mov
sbb
xchg
jbe
push
push
sbb
mov
scas
lret
jo
sub
daa
jae
push
std
call
xor
jae
daa
pop
icebp
sbb
jno
enter
sub
xchg
inc
sub
dec
lods
sbb
inc
mov
inc
loope
cmc
rcl
jle
adc
or
movsl
leave
pop
roll
testl
pop
hlt
ret
lock
in
jo
movsl
jns
das
iret
and
dec
inc
pop
leave
test
mov
xchg
bound
pop
lock
fs
test
sub
jne
jmp
sub
adc
jbe
dec
lds
enter
xor
mov
add
pusha
clc
ret
and
out
sub
sbbb
das
je
pop
stos
sti
insb
sti
mov
jecxz
xchg
idiv
pop
push
push
adc
lea
aam
outsb
and
sarb
push
xchg
add
lea
dec
cmpsb
cmpb
inc
cltd
loopne
jnp
lea
sub
inc
std
dec
out
pushf
push
mov
xor
pop
adc
jno
daa
or
mov
jno
push
rorb
push
dec
std
mov
ljmp
push
jb
adc
push
mov
cmp
jmp
push
arpl
mov
mov
sti
sbb
and
xchg
scas
mov
mov
push
inc
imul
xchg
jp
push
mov
sahf
loope
std
sub
inc
fsubrs
sub
cld
scas
out
xchg
mov
inc
dec
push
cli
test
outsb
cltd
mov
daa
fnstcw
jmp
xchg
mov
out
mov
xor
mov
xorb
and
jno
adc
add
outsb
dec
add
in
sub
cwtl
mov
xchg
clc
cmp
out
lret
aas
inc
push
xor
lea
jge
push
lods
mov
inc
sbb
mov
mov
aas
sub
popa
and
xchg
stos
jg
add
es
fs
insb
mov
ret
insl
stos
xchg
aam
cmp
mov
insl
xor
mov
std
push
jae
fmul
rcll
cmpsl
inc
inc
sahf
jns
clc
nop
xor
loopne
mov
xchg
sbb
ss
cmp
and
inc
pop
sbb
daa
xlat
jle
pop
pop
scas
cmpsl
sub
pop
mov
cmpl
roll
mov
add
mov
jle
ds
lret
sub
pop
shll
or
fnstcw
scas
or
out
xor
hlt
mov
lret
aad
xchg
out
ja
out
mov
sbb
leave
push
repz
popf
clc
sbbb
jge
sti
sub
xor
mov
sbb
ret
jp
mov
leave
in
inc
jno
lret
jne
leave
das
jnp
outsl
enter
sub
sar
sub
cli
push
out
dec
and
jp
lahf
xchg
js
mov
leave
imul
mov
cmpsl
data16
dec
test
adc
mov
popl
movsl
inc
insl
xchg
sub
xlat
ficompl
add
lea
das
lods
ss
inc
push
cmc
push
lds
mov
dec
scas
insb
imul
inc
daa
cmc
imul
xchg
lcall
icebp
xor
xor
xchg
inc
dec
sti
insl
pop
rolb
jns
push
mov
xchg
xor
jmp
or
push
rorb
mov
or
jno
fsubrs
push
pop
add
mov
jmp
inc
jns
fcoml
mov
cmp
mov
fisubl
sbb
mov
sbb
stos
addr16
lods
add
and
stc
sbb
int3
xchg
dec
lahf
adc
jmp
gs
int
rcrb
cmpsb
xchg
mov
ds
add
in
mov
push
pop
jp
sub
and
jmp
push
lcall
jle
dec
or
mov
hlt
inc
sbbl
mov
dec
jne
inc
jg
sbb
add
iret
xor
jbe
repnz
test
push
mov
clc
mov
les
in
out
push
jnp
push
dec
ret
jno
dec
lcall
xchg
push
and
pop
sub
iret
pop
push
and
jle
add
pop
inc
pop
xchg
sbb
bnd
push
inc
mov
imul
iret
lret
arpl
add
loopne
test
fs
js
hlt
cmp
aam
into
cmpb
xchg
xchg
dec
xlat
vmovsd
dec
cltd
lods
stos
mov
jecxz
cmp
sub
jno
ret
mov
sub
xchg
loope
sti
xchg
popf
and
xchg
push
mov
mov
xchg
pop
sti
mov
sbb
cmpl
lods
mov
icebp
dec
mov
mov
loopne
mov
gs
push
fdivrl
test
xor
fcmove
mov
cmp
mov
add
iret
add
data16
push
punpcklbw
sub
dec
xchg
mov
inc
sahf
leave
fs
hlt
inc
or
or
cmp
pop
std
inc
repz
call
sub
cmp
outsl
lcall
sub
fsub
scas
insb
xor
push
jmp
mov
cmpl
jl
sbb
aam
mov
loopne
arpl
wrmsr
or
loop
stos
bound
pop
and
push
xorb
mov
sbb
mov
ficoms
pop
lahf
sub
xchg
je
fimuls
add
lock
sub
xor
clc
js
dec
stos
in
lods
out
push
mov
and
sbb
mov
and
fstpl
test
lret
mov
dec
cmp
xlat
sub
jae
lret
scas
and
aas
enter
xor
push
into
data16
popf
cmp
mov
pop
push
orb
mov
sahf
movl
cwtl
stc
xchg
imul
mov
out
ret
inc
xchg
and
cwtl
sub
mov
or
mov
dec
cmp
adc
jp
adc
mov
pop
divb
cmp
mov
jbe
mov
and
xlat
mov
hlt
repnz
cmp
imul
movsb
xlat
repz
dec
fldl
cmc
add
out
lret
jl
push
xchg
mov
push
push
xchg
movsbl
dec
inc
add
push
fdivs
dec
shr
outsl
mov
icebp
add
xor
ret
enter
push
mov
pop
lret
fidivl
inc
movsl
push
sbb
fsts
pop
lods
sahf
ficomps
rcrl
lock
cmp
push
xchg
pop
dec
xchg
sarb
scas
iret
pop
xor
lret
adc
enter
inc
stos
cmp
cmp
and
bound
addr16
repnz
cmp
insb
and
jno
aas
sbb
xor
push
mov
dec
xchg
adc
cmpsb
rorl
xchg
xchg
popa
lea
outsl
stos
cld
out
mov
push
in
push
fsub
xor
mov
std
orb
or
aad
sbb
les
sub
mov
repz
data16
mov
dec
inc
mov
mov
ds
cmpl
mov
cltd
hlt
aas
cmp
add
adc
push
jl
out
sbb
push
xchg
dec
icebp
ss
xchg
mov
mov
mov
aas
jecxz
mov
adc
mov
xchg
ds
dec
push
test
adc
les
mull
mov
call
add
cs
jecxz
or
pop
mov
popa
orb
fsubl
dec
xchg
fiaddl
fidivs
xchg
jmp
into
mov
in
mov
mov
mov
xlat
imul
stc
addr16
jge
push
stc
fcomp
mov
dec
dec
adcl
sbb
and
jle
out
test
add
sbb
sbb
mov
mov
pop
mov
enter
cli
mov
rorl
aas
mov
xchg
xchg
push
and
xor
mov
push
dec
jecxz
pop
mov
test
jge
stos
je
testl
jecxz
dec
fstpl
int3
jmp
gs
out
inc
xchg
xor
out
cmp
sahf
adc
into
and
dec
mov
jae
jbe
sub
lret
aaa
loope
mov
push
shrb
test
mov
mov
mov
sbbl
pop
sub
cli
mov
adc
sbb
cs
adc
test
js
push
addb
das
pop
ret
mov
pop
sbb
lret
pop
jp
imul
sbb
divl
and
or
push
fisttpl
repz
andb
lcall
shrl
mov
push
test
addr16
mov
dec
mov
push
insb
lods
xchg
push
jae
fcomps
inc
fnstsw
and
cmpsl
mov
or
int
stos
inc
pop
imul
push
imul
mov
push
jne
shlb
add
pop
lea
push
jb
mov
dec
add
imul
mov
add
jp
repnz
shl
sbb
scas
sti
add
mov
fsubl
mov
inc
jle
cmp
cwtl
and
cmpsb
sub
add
and
push
pop
cmp
out
rorb
pop
mov
pop
pop
test
insl
xchg
mov
les
stos
rorb
push
les
jns
or
sub
jge
mov
test
xor
pop
push
inc
out
mov
push
or
pop
xlat
repz
loope
fs
mov
rcrb
pop
xor
popa
and
add
mov
adc
mov
push
xchg
pusha
or
push
jno
cwtl
adc
stc
fdivrp
mov
out
or
cmp
ja
add
lods
xchg
mov
dec
cld
pop
testl
subb
mov
lret
adcl
dec
cs
ss
je
pop
push
cmp
lock
imul
dec
add
ss
das
or
daa
jmp
add
and
mov
arpl
push
addr16
cmp
test
inc
dec
xchg
shr
mov
sbb
lret
add
mov
fwait
push
fiadds
rol
dec
mov
fidivs
sbb
lret
cmp
fisubrl
insb
ss
int3
or
push
or
sub
sub
inc
add
and
imul
mov
ja
int
adc
lock
outsl
push
cltd
call
xchg
rolb
stc
leave
xorb
mov
inc
f2xm1
xchg
add
cmpb
stos
jae
mov
mov
push
mov
dec
add
js
out
add
adc
movl
out
insb
jge
cwtl
daa
out
bound
inc
sub
and
aas
push
xchg
cmp
inc
mov
mov
xor
pop
je
mov
jo
rclb
push
mov
dec
jno
mov
jmp
fs
cwtl
sbb
pop
push
push
lahf
aaa
in
addl
neg
adc
cwtl
popa
and
jg
jnp
jns
cmp
mov
inc
pushf
lds
xchg
aad
add
jg
jle
adc
popa
push
jge
dec
fs
shl
inc
push
push
jecxz
xchg
adc
mov
mov
mov
mov
test
sub
imul
push
roll
movsl
sbb
shl
dec
cmp
mov
negb
in
je
mov
test
push
inc
loopne
sub
inc
jp
andl
call
iret
push
inc
lcall
insl
sbb
sub
mov
popf
push
cli
popf
xor
je
mov
sub
in
test
push
ret
pop
ret
movsb
lock
enter
sub
push
subb
pusha
std
ja
mov
sub
dec
mov
aaa
mov
rorl
cli
mov
repz
icebp
mov
test
fbstp
pop
lahf
sbb
or
mov
test
fsubr
stos
push
in
movsb
aas
pop
dec
fcompl
xor
scas
xchg
xchg
dec
cmp
fbstp
jp
adc
mov
popa
mov
sbb
mov
ja
nop
push
or
lea
fs
aad
hlt
inc
popf
movsl
dec
out
fbstp
mov
adcl
pusha
clc
push
xor
mov
stc
leave
hlt
mov
sub
jns
jmp
fwait
clc
add
jnp
xor
xchg
pop
jle
loopne
xor
std
sbb
dec
cs
bound
js
sub
clc
pop
test
pop
jmp
add
test
mov
es
fstpt
fistpl
mov
popf
stos
bound
pusha
lahf
fimull
xchg
out
and
sub
adc
mov
shlb
adc
loop
push
sub
pop
in
movsl
loopne
in
add
push
cwtl
jae
sbb
mov
xchg
xor
jno
xchg
sbb
ss
and
and
loope
pop
mov
and
inc
out
push
xlat
out
xchg
jg
mov
push
adc
fildll
cli
dec
std
pop
or
push
sbb
sub
cmp
inc
pushf
mov
add
cmpsb
imul
xchg
pop
sub
sbb
hlt
and
in
xor
loopne
int3
mov
idiv
movsl
mov
sti
xchg
popf
mov
xchg
inc
mov
addr16
adc
pop
in
mov
fildll
or
mov
jb
rolb
outsl
adc
xchg
jno
cmp
inc
sbb
cmc
push
test
icebp
push
sub
mov
and
and
ret
movsl
sbb
fistpl
and
stc
aas
xor
push
jmp
inc
aam
inc
sahf
pop
jae
scas
repnz
pop
out
jle
xchg
leave
push
mov
movsl
mov
jno
adc
inc
mov
sub
insl
fcmovu
out
popa
fwait
sti
sub
and
scas
mov
jno
dec
mov
rclb
jnp
add
xor
loopne
dec
mov
add
outsb
ljmp
dec
ljmp
inc
sbb
jns
divl
dec
sbb
outsb
in
mov
mov
push
dec
iret
movsl
mov
mov
and
cmp
mov
mov
out
push
gs
xor
addr16
rorl
and
xchg
xor
data16
in
shrl
ds
add
push
clc
sub
sahf
int3
dec
adc
in
lea
bnd
jge
adc
dec
mov
xlat
add
andb
test
pop
push
add
dec
in
out
cmp
sbb
outsb
add
mov
dec
lea
jle
std
loope
and
lods
movsl
in
fcoml
pop
insb
les
rcrb
jmp
shlb
mov
cmp
cmp
dec
shl
ja
fisubl
movsb
sti
mov
dec
gs
ja
lret
fcmovb
sub
xor
pop
xchg
or
aam
jne
add
sbb
cmp
int
mov
testb
ficoms
adc
sbb
push
sub
mov
cmp
fldenv
outsl
pop
lcall
bound
cmp
jb
mov
sbbb
or
xor
adc
cmp
fstpl
cmp
pop
jecxz
push
imul
mov
dec
add
xchg
cmp
sbb
das
mov
enter
sti
inc
jns
or
or
xchg
xor
dec
adc
xchg
imul
divb
scas
popf
fldcw
mov
inc
jmp
pop
jno
loopne
into
das
cwtl
orl
sbb
sbb
add
rcrl
or
mov
jae
push
stos
movsb
shlb
lret
mov
ds
pop
testb
push
pushf
sbb
xchg
jo
sub
out
int
out
into
jb
jo
movsb
inc
xchg
cmp
push
push
cmpsl
cmpsl
pop
jle
mov
mov
cmc
in
cmp
insb
arpl
dec
outsl
jae
jb
cs
xchg
rclb
sub
fadd
aaa
loop
jg
cmp
mov
xchg
add
push
lods
out
mov
shlb
push
fwait
aad
or
xor
xlat
dec
add
lahf
pushf
fnstsw
lret
pop
cmp
dec
and
xchg
orl
and
push
mov
pusha
fnstsw
dec
mov
jg
sbbl
cmp
and
addr16
mov
int3
mov
jmp
add
mov
lret
pop
nopl
mov
ret
jb
insl
test
mov
pop
xor
inc
mov
repnz
nop
push
sub
les
jle
xchg
lcall
mov
mov
mov
stc
adc
pusha
popf
xor
scas
test
outsb
sbb
fwait
sahf
insl
bound
xchg
or
enter
dec
test
inc
out
test
push
push
mov
stos
insb
sub
jae
ror
mov
in
lahf
sub
adc
adc
mov
aam
test
push
aam
int3
data16
jl
mov
mov
dec
pushf
adc
fldt
out
push
pop
cmp
dec
push
sbb
pop
out
int3
sbb
pop
in
cwtl
loop
push
sti
mov
mov
arpl
lcall
push
icebp
repnz
into
cltd
dec
mov
cmp
mov
bound
dec
out
cmc
arpl
mov
out
pop
dec
and
stc
push
pushf
sub
decl
push
loop
sub
ljmp
xchg
sub
inc
dec
add
into
daa
je
testb
lea
add
aaa
jge
mov
aam
je
or
jb
sahf
or
add
jp
xchg
adc
xlat
mov
adcb
mov
lret
add
aam
sarl
repnz
or
pop
sbb
jge
pushf
xlat
add
loope
popa
adc
filds
mulb
rorl
lcall
insb
call
cmp
lret
sub
sahf
pop
nop
or
fisubs
and
pop
insl
cs
pop
aaa
pop
addr16
jmp
xchg
jmp
lock
aad
fldenv
ljmp
dec
mov
movsb
ret
add
and
mov
clc
mov
adc
inc
in
jb
adc
pop
in
jo
and
out
jbe
mov
nop
jl
jg
das
inc
jae
cltd
ds
xchg
pand
movsb
cmpb
lods
mov
lret
pop
shrl
aaa
pop
ja
out
in
addr16
in
push
arpl
sbb
rolb
shlb
mov
leave
sbb
or
cmp
dec
aad
pop
iret
cli
jle
loop
pop
aaa
sbb
ja
jg
lds
fcoml
sbb
mov
jge
cs
filds
lods
mov
int3
sub
scas
outsl
testb
stos
xchg
mov
xchg
and
dec
mov
jl
imul
notl
xor
adc
lea
sub
fsubr
cld
add
jno
movsb
cmp
add
popf
out
aas
dec
push
jmp
incb
testl
out
jno
xlat
comiss
mov
adc
into
and
dec
mov
mov
sbb
cwtl
dec
addl
push
stos
mov
mov
repnz
jl
mov
ljmp
mov
lret
mov
insl
push
cli
dec
mov
jmp
add
dec
add
jmp
daa
call
rorb
mov
xor
jbe
iret
mov
movsb
adc
or
fcoms
pop
leave
sub
bound
out
ss
pusha
xor
test
scas
das
dec
lcall
xor
cmp
outsb
lods
mov
sarb
ret
cli
xchg
xor
inc
and
jne
aam
cs
mov
xchg
fidivrl
sahf
jbe
add
xchg
push
mov
jns
push
jle
sbb
imul
push
icebp
negl
inc
int3
mov
mov
mov
mov
fsubr
sub
addl
push
adc
add
xchg
add
clc
push
dec
in
push
stos
loopne
sets
and
je
pushl
push
lods
cmc
es
pop
dec
hlt
xor
or
cltd
mov
in
rcrb
adc
sbb
or
fs
pop
test
mov
out
adc
push
or
mov
test
clc
sbb
stc
xor
mov
popa
pop
pushl
sub
movb
in
mov
stos
sub
movsl
push
std
pop
mov
mov
mov
jge
loopne
inc
fmuls
loop
xor
out
push
cmp
adc
mov
int
jp
jmp
dec
lock
das
xor
leave
xor
pusha
in
mov
lds
insl
xlat
xor
out
ja
cmp
sbb
aas
mov
mov
mov
cld
and
jmp
push
mov
clc
fimull
add
and
scas
fisubl
mov
movsl
in
or
aaa
popa
sub
xlat
arpl
ds
scas
pop
outsb
push
push
jns
sbb
imul
cmp
xchg
cmp
sbb
imul
xor
sub
adc
mov
clc
inc
fcomps
out
movsbl
stos
mov
mov
and
fsubrs
sub
mov
ja
cmp
pusha
xchg
pop
mov
lret
mov
dec
jmp
add
xor
mov
inc
cmp
lods
add
int
or
sub
xchg
push
inc
pop
mov
cmp
bound
and
adc
lret
xor
mov
sbb
cltd
rcrb
in
ret
xchg
mov
jnp
mov
sbb
cmp
xchg
mov
fisttpll
shrb
mov
in
mov
fildl
aad
out
lret
jecxz
lock
mov
fidivrs
xor
xor
or
test
adc
or
sti
addb
inc
pop
scas
xor
adc
shll
inc
push
adc
das
jno
jecxz
in
pop
test
jb
aaa
fnstenv
test
lret
shl
pop
inc
pop
jne
stc
es
and
or
addr16
addr16
sbb
fsubrl
mov
sub
or
jg
mov
and
adc
je
cmovnp
sti
fnstsw
cli
negb
ljmp
cmp
sti
leave
dec
push
or
cld
lcall
in
fucomi
cli
inc
ret
shl
sub
jne
and
inc
jno
cmc
in
std
jge
pop
vpshufbitqmb
enter
jecxz
xor
xlat
stos
in
mov
out
outsb
and
out
pop
and
xchg
movsb
mov
daa
lret
mov
push
ud1
out
pop
mov
mov
jne
fimuls
subb
sub
lea
mov
fs
push
xor
das
sub
shl
sbb
lea
pop
jne
add
xchg
outsb
fwait
push
push
push
push
jo
std
iret
rclb
bswap
sahf
lea
sub
fsubs
imul
mov
leave
fcmove
or
mov
addb
jp
loope
popa
loop
mov
jno
shrb
fildll
xchg
pop
cmp
ret
daa
js
mov
jnp
jp
dec
stos
xor
jle
ret
adc
decl
adc
adc
sub
mov
push
repz
mov
sbbl
cs
xor
std
mov
or
cmpl
and
out
inc
xchg
paddq
in
outsb
jge
and
mov
mov
xchg
and
mov
dec
sbb
cltd
shlb
test
mov
mov
jb
cmp
sub
inc
popa
cli
iret
xor
xchg
mov
push
stc
jo
pop
adc
lret
pop
inc
jo
aad
sahf
push
pop
cmpsl
push
in
pop
xor
imul
mov
insb
cmpsl
roll
jb
addr16
jnp
fimull
jo
dec
lock
pusha
sbb
jmp
insb
xchg
addr16
push
fdivs
mov
sub
insb
inc
notl
adc
mov
jmp
jle
mov
fildll
paddsw
cwtl
int3
push
xchg
scas
or
pop
mov
and
test
pusha
ss
mov
bound
xchg
jecxz
jb
rol
addr16
jge
add
pushf
inc
mov
mov
xchg
push
loop
fnstsw
pop
mov
lret
dec
mov
xchg
push
push
pop
jl
lock
adc
in
xchg
xor
mov
or
mov
sti
adc
dec
add
in
xchg
pusha
ret
mov
sbb
shlb
adc
and
jb
movsl
adc
lods
pushf
stos
xlat
and
push
jae
dec
and
dec
push
dec
jnp
xor
inc
xor
xchg
push
fiaddl
mov
dec
testl
rorl
xor
inc
push
hlt
imul
pusha
add
stos
mov
push
mov
and
dec
in
or
inc
dec
sub
enter
loope
lock
out
xor
jmp
arpl
data16
adcb
lock
mov
mov
gs
stos
and
out
adc
xrelease
lea
or
call
out
imul
push
push
mov
dec
dec
mov
adc
push
iret
adc
dec
sub
lcall
out
cmp
jo
out
jae
jge
aas
cmpsl
test
pop
push
add
inc
jne
decl
jbe
outsl
push
outsb
xchg
push
shrb
iret
enter
in
adc
mov
push
mov
jp
dec
popa
sti
push
mov
hlt
mov
lock
add
push
add
or
rorb
dec
pop
cmp
aaa
adc
add
push
mov
dec
dec
xor
call
test
mov
fwait
lret
ja
mov
fcmovb
cld
jmp
movsb
and
iret
dec
lcall
out
jl
push
cmpsb
lret
cmp
cmp
cmpl
ret
push
jno
imull
rorl
inc
lret
into
insb
dec
insb
jbe
adc
loopne
cmpsl
xlat
cmc
inc
dec
mov
insl
mov
clc
pop
push
popf
sbb
cltd
into
and
out
mov
push
das
jg
test
popf
fiaddl
xor
cmp
out
xor
push
jae
dec
shl
inc
jle
sbb
in
roll
pop
insb
mov
jle
testb
ffree
outsb
cmp
aam
xchg
or
sub
ja
sbb
xchg
pop
inc
std
inc
sti
daa
icebp
gs
das
adc
lea
add
lcall
or
and
ljmp
add
stos
mov
cmp
jl
enter
iret
in
insl
cld
in
dec
jbe
sub
pushf
sub
xchg
sub
jo
out
stc
adc
scas
or
call
sar
out
pushf
mov
pop
hlt
insl
cwtl
sub
arpl
xchg
jp
mov
les
cmp
mov
inc
lret
jmp
aaa
test
inc
cmp
add
cmpsb
stos
inc
mov
lods
xorb
dec
xor
out
aam
mulb
mov
stc
pop
inc
sti
push
pop
add
test
push
jmp
mov
mov
rorl
pop
mov
pop
push
sbb
push
mov
cmp
push
mov
dec
xor
xor
inc
xlat
jo
out
xchg
fcoml
jmp
ret
bound
dec
dec
mov
push
aaa
daa
fdiv
mov
cmp
int
sbb
popf
pop
in
sti
shll
call
lods
into
dec
out
bswap
push
mov
notb
mov
addr16
in
sub
outsl
jge
std
lock
xorl
nop
dec
aad
push
pop
scas
mov
or
fisubs
cmp
jl
stc
mov
dec
add
pop
inc
dec
or
jb
iret
orb
mov
inc
lds
out
movsl
movsb
xchg
adc
sbb
popa
dec
cmpsl
roll
mov
push
inc
inc
shll
sub
xchg
ret
dec
loope
mov
iret
imul
imul
fstpl
pop
loopne
add
fsubs
xchg
aas
or
and
cmp
inc
mov
aad
or
popa
xchg
shrb
imul
cmp
repz
pop
pop
jb
insb
repnz
sub
loope
inc
shlb
or
sbb
popf
pop
jmp
adc
dec
gs
add
int
icebp
inc
inc
decl
mov
sub
xchg
push
jge
mov
xchg
sub
dec
loop
and
mov
in
push
enter
cmp
inc
jne
xlat
push
push
scas
popa
pop
fildl
es
sti
dec
jns
clc
jge
nop
xchg
fisubs
pop
addr16
faddl
fidivrs
repz
and
sub
dec
aad
sahf
movsb
lret
sbb
std
add
sbb
arpl
fnstsw
fwait
das
std
sbb
push
fildl
add
in
and
pop
and
ds
pop
cmc
leave
movsb
iret
xor
repz
pop
push
jne
push
inc
cmp
imul
outsl
testb
inc
add
sahf
push
inc
push
mov
jne
outsb
rcrb
sub
mov
pop
sbb
imul
and
call
push
jno
dec
lds
imul
jl
xorl
stos
xchg
xchg
sub
enter
cwtl
or
mov
repz
lods
push
or
or
rcl
or
shll
mov
movsl
adc
std
mov
inc
mov
push
aad
adc
daa
test
neg
or
inc
add
je
jge
call
push
mov
das
ljmp
push
xchg
sbb
mov
divb
outsb
repnz
inc
xor
jns
decb
out
jae
shrl
or
subb
test
cmc
mov
hlt
cmp
frstor
cli
shll
aas
mov
sbb
fidivs
inc
cld
rorb
sub
je
int3
movsl
jmp
iret
test
ret
xchg
stos
cmp
hlt
in
cmp
dec
xchg
and
lock
pop
sbb
push
mov
mov
pop
lods
jo
or
pop
xlat
in
enter
leave
dec
hlt
inc
insl
pop
xor
lret
and
mov
sub
fdivr
mov
adc
sub
testb
or
pop
mov
cmp
int
hlt
movsl
jno
in
jae
test
mov
push
and
xor
fsubrs
inc
andb
aam
mov
loop
lods
bound
fisubrs
idivl
in
insb
dec
xor
scas
xchg
pop
xor
push
fsts
add
js
and
sub
imul
in
xor
add
inc
pushf
inc
js
dec
pop
std
fsubrl
sbb
loopne
xor
xchg
arpl
int
aad
ret
ja
mov
mov
in
and
xchg
repnz
repz
sbb
enter
jp
dec
std
popa
in
cmpb
dec
lock
xchg
push
push
cltd
aaa
xchg
in
sub
lret
gs
mov
mov
cmp
push
sub
add
jnp
inc
das
add
adc
mov
or
jge
insb
fs
in
stos
in
mov
add
add
or
dec
in
dec
jl
push
pop
xor
inc
jmp
mov
xchg
jbe
fwait
mov
cmp
adc
xabort
out
mov
jae
dec
inc
cltd
ljmp
xor
iret
or
add
sub
call
pop
xor
mov
push
stos
lret
aad
jb
pop
dec
xor
xchg
fcoml
test
in
mov
pop
push
inc
push
pop
jge
jno
jmp
jmp
mov
sub
xlat
add
mov
cmp
adc
ss
icebp
repnz
repz
fxch
stc
aas
mov
adc
jmp
mov
stos
sbb
xchg
bound
fimuls
fstpt
add
fst
adc
dec
pop
iret
adc
enter
test
lods
hlt
mov
stos
adcb
push
test
cmp
pushf
mov
mov
ficomps
rorb
jo
stc
cltd
repnz
add
xor
loope
xchg
cwtl
pop
test
js
mov
jmp
repz
or
nop
clc
inc
fnsave
jo
add
inc
outsl
out
sbb
and
loope
mov
jae
sahf
xlat
mov
xchg
sbb
push
rcll
or
mov
mov
insb
adc
xor
xchg
ds
fstl
mov
aaa
cmp
cmc
aaa
test
and
xabort
ss
jecxz
cld
pusha
mov
push
cmpsb
mov
outsb
sub
xchg
lahf
pop
inc
adc
sbb
js
cmp
call
push
loop
push
sub
jb
sarb
shll
nop
shll
pop
jns
pop
sbb
loopne
test
push
sub
shlb
mov
aas
scas
addb
jmp
pop
bound
loopne
pop
jg
cmpsl
jecxz
cmp
lea
mov
xchg
jb
adc
lock
aad
sub
and
jbe
and
das
out
out
and
lret
cmp
inc
push
jno
xchg
push
xor
stc
or
mov
dec
xchg
push
imul
sbb
push
test
frstor
mov
bound
or
imulb
push
lods
dec
jns
xlat
xchg
fwait
dec
ds
jns
test
mov
fists
fimuls
or
loop
jne
iret
int3
scas
jmp
imul
icebp
fimull
in
stos
lret
icebp
xchg
lds
xchg
pushf
mov
sub
stos
adc
hlt
orb
cmc
and
xor
jbe
pop
push
push
pusha
add
into
lahf
in
rolb
insl
mov
fdivl
mov
jle
mov
out
xchg
sub
add
push
loopne
pop
push
and
stos
popf
je
mov
or
sbb
bound
sti
out
xchg
fmuls
aad
cmpb
mov
gs
inc
mov
ja
add
lods
arpl
rorl
pop
enter
inc
and
sub
mov
fmuls
arpl
fidivl
sahf
adc
sub
pop
jmp
nop
push
je
xor
and
jo
push
iret
scas
arpl
xchg
inc
lret
xchg
inc
stos
je
fnsave
xchg
stos
cwtl
arpl
and
inc
cmp
or
loope
add
int
cld
mov
sahf
lea
jbe
loopne
sarb
nop
in
xchg
pushf
adc
das
and
int
in
xor
mov
adc
test
sub
es
out
or
sub
add
cmp
pop
gs
sbb
test
push
rorl
pop
push
sub
pop
pop
test
cli
push
ja
adc
lret
jge
iret
jne
sbb
or
int
pop
sbb
aaa
cli
pop
incb
ljmp
xor
mov
xor
pop
int3
adc
sbb
or
rorb
pushl
in
fisttpll
cmpsb
or
fsubs
cmp
ret
pop
repnz
add
mov
fisubrl
icebp
mov
in
lock
cmpsb
testl
and
fstps
cmpsl
mov
cli
shll
xor
mov
cmp
vmread
sub
dec
bound
loopne
cmp
das
push
xchg
push
fs
pop
jg
xchg
or
dec
out
adc
sbb
dec
or
xchg
pshufw
pushf
jno
lret
std
aad
pop
xor
ljmp
jnp
mov
ret
cmpb
imul
and
xchg
out
push
std
mov
outsb
insb
add
mov
ljmp
sbb
test
shl
push
jg
cwtl
leave
aas
dec
pop
and
arpl
inc
int3
push
lods
sbb
mov
addl
in
jge
cwtl
in
imul
adc
mov
pop
sub
repnz
or
aad
pop
hlt
mov
jp
cmp
inc
es
ljmp
xchg
push
push
and
cmp
scas
dec
fs
add
dec
adc
test
lahf
mov
cld
test
imul
ljmp
inc
sub
and
cmpsb
ret
cmp
rorb
test
cltd
and
out
inc
pop
mov
jo
or
sbb
scas
lret
ficoms
aaa
dec
test
popf
and
mov
idivb
mov
subb
and
cwtl
jbe
xor
cmp
sub
fists
pop
aam
cmc
adc
pop
inc
cmp
daa
cmpsl
jle
mov
bound
data16
test
pop
xchg
sbb
xor
dec
lahf
and
or
sahf
arpl
mov
mov
cmp
adc
push
mov
lock
inc
jmp
mov
mov
mov
cmp
outsb
mov
fimull
loopne
xchg
jg
scas
adc
es
mov
push
add
and
xor
clc
mov
cltd
cli
xor
lcall
push
bound
into
sbb
mov
sarl
sbb
pop
ret
stos
shr
pop
fbld
pop
or
leave
pop
or
xchg
lahf
loopne
mov
fdiv
push
add
adc
test
test
fstpt
adc
cld
inc
loopne
mov
ret
and
jno
mov
nop
divb
push
dec
sahf
je
js
lods
push
sbbl
ds
cmp
mov
fldenv
andb
fcompl
cmpsb
in
xchg
adc
xchg
fcmovne
jmp
jne
xchg
lret
push
xor
sbb
subb
les
aaa
lahf
sbb
xchg
je
icebp
rclb
and
mov
leave
cmc
pop
add
xchg
and
inc
add
xchg
mov
adc
js
dec
sbb
loopne
cmp
lods
mov
cltd
add
push
xchg
lcall
stc
lret
stos
es
sub
aad
push
les
cltd
jl
inc
jb
mov
sub
lahf
mov
loope
xchg
jns
jmp
call
lcall
rorb
data16
xchg
push
sbb
pop
cwtl
aas
adc
jmp
xchg
gs
out
push
or
fwait
and
seto
or
sub
pushf
inc
push
add
mov
mov
std
cli
adc
ds
dec
arpl
xor
and
xor
arpl
clc
ljmp
xor
and
jp
jl
sbb
cmp
adc
in
leave
push
sbb
sbb
push
rol
adc
mov
xchg
cwtl
negl
mov
loope
mov
gs
sbb
mov
ja
add
dec
dec
sub
pop
xor
gs
pop
mov
push
mov
int3
lret
pushf
mov
sbb
dec
push
push
js
sbb
rcr
aas
add
xor
sub
add
xor
jo
push
push
pusha
pushf
es
pop
test
in
mov
in
pusha
fwait
jne
mov
scas
arpl
jecxz
fldl
dec
dec
xchg
lds
sbb
ljmp
pop
and
das
push
sub
int3
loope
lret
dec
add
test
and
mov
dec
fimull
les
jmp
xor
sub
scas
ss
pop
and
mov
fisttpl
dec
cltd
loope
adc
mov
std
pop
jns
lock
lahf
lea
les
fiadds
es
cld
inc
pop
je
leave
outsl
imul
pop
dec
dec
add
sbb
xor
xchg
push
mov
xor
xchg
mov
push
jg
std
xorb
out
insl
cmp
std
jg
dec
popf
push
ja
jge
ret
add
test
jl
cmpsb
das
lods
fs
xchg
je
cli
cwtl
lcall
and
sbb
add
inc
dec
pop
mov
iret
stos
mov
out
std
push
push
test
das
incl
adcl
push
push
int
clc
repz
les
sub
fistps
cli
fmulp
mov
sbbb
nop
fdivrl
ficomps
or
leave
jg
ret
jo
push
out
repnz
sbb
pop
fisttps
mov
sub
dec
shl
out
cmpsb
push
inc
in
fistl
in
xchg
and
stos
scas
ljmp
jp
cs
xor
add
test
stos
push
fdivs
xchg
fwait
add
mov
call
xchg
ret
pop
jecxz
lods
and
jmp
jmp
orb
nop
sahf
stos
push
lcall
ret
lods
les
mov
ljmp
mov
jne
jo
data16
add
pop
fiadds
xor
loope
mov
es
gs
xor
pop
das
and
jle
adc
out
xchg
jp
cmpsb
enter
cmp
mov
sub
cmp
sub
jbe
sub
mov
adc
inc
mov
inc
jl
pop
leave
mov
adc
inc
xor
pop
add
adc
cld
in
test
sahf
loope
arpl
push
xchg
mov
mov
mov
hlt
orb
adc
mov
lock
push
and
cmp
xchg
imul
test
push
sbb
addb
mov
sbb
test
and
push
jg
fstl
or
cmpb
inc
sbb
test
outsb
mov
mov
sub
mov
push
subl
cmp
cld
dec
cmp
jmp
sarl
fmulp
icebp
or
out
sahf
adc
or
ja
aam
and
xor
sub
xlat
hlt
test
fdivr
lahf
add
std
cmp
cmpsl
sub
push
stc
and
push
cld
jge
repnz
push
rclb
outsl
lea
or
lahf
fstpl
addr16
jmp
stc
or
cmp
jge
test
loopne
mov
add
jnp
inc
xlat
in
mov
into
icebp
cmc
cli
mov
or
in
call
test
arpl
sub
xchg
inc
pop
mov
dec
aam
imul
lds
add
rclb
mov
in
push
or
fwait
push
or
stos
cli
and
pop
out
pop
xor
xlat
add
outsb
mov
orl
out
insl
push
sar
push
cwtl
sahf
pop
jge
sbb
add
push
out
or
in
cmp
mov
pop
jle
pusha
jne
adc
mov
leave
jb
mov
in
inc
movsl
fs
jp
sti
mov
cmp
xchg
repnz
cltd
jecxz
fcom
fsubrl
cmpsb
in
out
imul
shrl
or
sarb
gs
push
cmp
lods
cmpsb
adcl
scas
out
outsl
out
fwait
xchg
shrb
dec
imul
fwait
xchg
loop
sub
test
push
dec
or
or
and
test
movsl
jmp
int3
imul
lret
dec
dec
inc
cs
ret
sbb
lahf
fdivs
gs
icebp
dec
hlt
jle
add
inc
xchg
cmp
inc
inc
ja
out
xor
fnstenv
mov
sbb
in
mov
or
pop
mov
dec
jns
out
cltd
dec
fwait
mov
sub
cltd
push
fadds
mov
pop
pop
push
or
iret
add
mov
out
and
inc
mov
pop
inc
adc
addr16
das
je
pop
lock
mov
push
cmp
ljmp
add
mov
mov
sahf
add
lcall
cmc
push
pop
popa
xor
pusha
jecxz
repnz
repnz
in
sub
add
das
repnz
out
mov
lret
fwait
push
stc
lahf
mov
add
inc
jge
xor
loope
xchg
outsb
popa
das
int3
adc
pop
leave
inc
dec
lds
jle
cmp
cmp
pusha
lods
inc
outsl
xor
scas
shl
and
push
pusha
sbb
add
lahf
push
mov
fisttpl
mov
pop
pop
mov
dec
push
stos
loop
arpl
dec
popf
in
dec
fistps
dec
cs
orb
xchg
or
mov
loopne
movsb
sub
cmc
mov
jecxz
out
insl
clc
sti
sbb
movsb
xor
push
xor
sbb
cmp
fs
mov
js
inc
out
mov
mov
adc
push
inc
scas
in
lods
mov
cltd
in
mov
adc
sti
push
cmp
cltd
lea
mov
jle
xor
sbb
gs
lock
adc
xlat
in
mov
mov
xor
push
lcall
shll
int
sub
scas
dec
push
pop
push
mov
cld
fstps
clc
jns
or
pusha
in
push
push
or
cmp
add
push
push
nop
mov
push
pop
pop
cmp
mov
xchg
ficompl
clc
mov
mov
fstps
lods
mov
mov
dec
jno
jmp
xchg
lock
sub
sub
adc
xchg
adc
push
cld
mov
jbe
cltd
in
push
nop
xchg
enter
xrstors
adc
pusha
lret
fwait
movsl
insl
xor
test
inc
aam
hlt
sbb
outsb
aas
dec
ljmp
cwtl
sti
ja
cmp
adc
sti
inc
dec
jae
jle
mov
mov
sbb
lods
dec
pop
lret
jmp
pop
je
mov
jo
mov
lret
dec
cwtl
lret
sbb
cmp
clc
adc
test
mov
bound
hlt
add
or
sub
cmp
sub
aaa
mull
and
xchg
adc
fs
add
or
test
movsl
mov
mov
notl
lds
sbb
inc
test
sub
dec
dec
pop
lods
out
pop
mov
jbe
inc
insl
loopew
adc
addb
mov
jle
in
push
mov
mov
inc
pop
das
xor
and
sbbl
xchg
movsl
lds
loop
hlt
pop
push
or
mov
jle
push
addr16
lods
jmp
lds
in
xchg
and
and
xor
cmp
roll
fidivrs
pop
lahf
push
pop
and
int3
stos
mov
push
cltd
or
add
loope
mov
out
in
das
sar
xor
lods
out
das
push
insl
push
in
adc
aaa
repnz
mov
jge
add
pop
inc
mov
mov
mov
jo
pop
notl
stos
stc
adc
lea
in
aad
imull
test
lock
outsl
and
jmp
fldl
mov
cli
cltd
fs
xchg
xor
jge
cmc
jnp
fidivl
pushf
movsb
dec
sub
jmp
push
or
inc
and
pop
jbe
cli
imul
fadds
dec
add
pop
out
xchg
mov
movsl
mov
dec
cli
sbb
cmc
shll
idivl
ss
jo
push
or
and
ror
cs
iret
mov
and
insl
mov
xchg
call
aas
add
adc
cmpsb
push
bound
ds
jne
mov
dec
stos
sbb
pop
lahf
jne
fst
fsubrp
in
mov
aad
inc
sub
les
ffreep
mov
pop
inc
dec
addl
aam
hlt
push
ret
push
inc
inc
xchg
inc
dec
fs
sub
cmpsl
jp
push
mov
leave
xor
addr16
mov
adc
dec
out
cmc
ljmp
sti
jp
add
aam
in
out
adc
shlb
and
addb
out
mov
in
in
pop
in
pop
sbb
pop
add
jne
mov
mov
xor
lea
jno
mov
jno
pusha
add
mov
out
rcrl
jmp
out
inc
push
ss
and
inc
sarl
ds
jmp
or
sbb
sub
or
sahf
pop
sub
lcall
xor
pop
scas
pushf
inc
ret
adc
fs
iret
loope
and
push
pop
std
stc
jne
cltd
push
arpl
test
pop
xor
push
mov
ds
fs
popl
popf
es
xor
push
arpl
ds
jae
shrl
sahf
and
insb
push
mov
sub
pushf
add
mov
lahf
and
mov
inc
dec
int3
mov
sbb
xchg
popa
mov
shrb
sub
push
in
pop
pusha
das
icebp
rclb
mov
jp
cmpsb
sub
hlt
stos
stos
outsb
stos
cmp
push
sahf
aad
jl
idivb
scas
iret
sti
pushf
pushf
mov
in
adcb
adc
and
movsl
leave
push
inc
movsb
ret
push
shrb
mov
xor
xchg
cmp
lock
sub
lahf
and
jno
repnz
dec
mov
flds
inc
pop
push
out
loope
jb
mov
inc
xor
dec
aam
in
adcl
cs
mov
jecxz
sbbb
dec
dec
inc
push
in
sbb
jo
repz
sbb
movsb
push
mov
dec
sub
sub
and
ss
xchg
test
insb
pop
add
mov
add
je
xchg
push
cmpsl
add
push
xchg
add
inc
sub
ljmp
sub
ds
push
ljmp
add
lock
cmc
add
adcl
shll
mov
fwait
sbb
int3
mov
and
gs
add
mov
push
xchg
jb
sbb
roll
mov
or
xchg
add
jmp
cwtl
sub
or
xchg
loopne
sbb
sub
call
mov
pop
aaa
or
xor
int3
mov
mov
cli
ja
setae
mov
mov
pop
scas
xchg
sti
jae
fists
cli
xchg
jmp
cld
pop
inc
fisubrs
adcl
mov
shr
push
mov
loopne
sbb
int3
xchg
inc
data16
cmp
iret
pop
insb
pusha
pop
or
xor
mov
cmp
adc
aam
add
cmp
mov
jne
mov
sub
cld
cmp
jae
popa
pop
mov
adc
cmpsb
inc
sub
int
xchg
sub
inc
mov
sti
testl
push
sbb
cmpsl
xchg
lds
fcmovb
mov
cwtl
repz
cli
daa
mov
push
mov
out
push
pusha
dec
call
arpl
shlb
sbb
sub
in
stos
push
sbb
ficoml
mov
lcall
inc
rcrb
loope
std
xchg
xchg
and
dec
push
jnp
mov
pushw
xchg
dec
loope
inc
push
cmc
jp
loopne
dec
sahf
jg
mov
pusha
cltd
mov
rep
add
lock
inc
jne
pop
cltd
lea
adcl
mov
xor
xor
jb
stos
dec
pusha
adc
and
leave
fwait
cs
adc
xchg
pop
loopne
dec
scas
lret
std
sahf
je
stos
xchg
mov
adc
sub
fsub
jecxz
mov
loope
inc
sbb
cmp
fidivl
sub
lds
lds
outsb
addr16
je
mov
sarl
sub
push
loop
fwait
mov
ljmp
jno
jg
mov
mov
inc
inc
dec
ss
or
jbe
inc
daa
sahf
bnd
adc
out
lahf
adc
sbb
and
adc
add
cmp
xor
std
push
stos
or
leave
and
stos
shrb
mov
lods
xor
jbe
jb
iret
sub
sbb
cmp
scas
loop
sub
sub
aas
lahf
or
add
sub
inc
push
test
out
imul
int
xchg
push
xchg
cli
push
movsb
test
mov
scas
cltd
inc
dec
adc
mov
adc
mov
sub
int
jne
dec
cmpsl
inc
or
fistps
mov
mov
adc
mov
pushf
mov
jbe
add
jno
insl
xchg
mov
out
int3
mov
jl
adc
pop
ss
cmpb
push
scas
dec
sbb
or
cwtl
int
cltd
fsubrs
aas
xor
cmp
adc
or
adc
jg
loopne
shlb
das
mov
rcr
ss
loope
jg
cltd
jge
pusha
or
jnp
out
add
jp
inc
les
inc
add
test
es
loop
push
and
bnd
pop
jmp
sti
sbb
rcll
pop
cmp
daa
push
fs
and
cmpsb
dec
jecxz
ret
add
addb
imul
adc
mov
lods
data16
jle
inc
mov
loope
fdiv
outsl
lea
or
add
xchg
mov
daa
sbb
inc
push
mov
repz
aaa
jnp
dec
out
xchg
xchg
or
outsl
pop
out
iret
test
adc
icebp
shrb
jle
mov
xchg
lea
mov
adc
insb
push
lret
out
popa
mov
mov
jnp
push
imul
mov
cwtl
xorb
xchg
nop
jecxz
js
mov
divb
movsl
repnz
pop
push
cltd
out
mov
rorl
sub
popa
mov
mov
pop
aam
add
xor
aas
inc
pop
or
pop
scas
dec
pop
popf
in
out
mov
sub
push
clc
push
mov
sub
icebp
testl
dec
mov
imul
cmp
std
dec
add
popf
sub
out
xor
lock
popa
xchg
out
stos
jo
mov
or
and
jnp
sbb
push
ud2
test
cmpsl
sub
push
hlt
ret
mov
pop
rcrl
cmp
in
lahf
add
or
pop
xchg
jns
jmp
pop
mov
movsl
popf
xchg
out
in
inc
inc
sar
das
cli
insl
jp
sub
pop
and
inc
mov
jp
incb
sub
adc
inc
mov
cmp
xor
xchg
stos
sub
cmc
jb
in
mov
inc
out
ljmp
push
insb
bound
add
fcmovnu
movl
push
cmc
ja
pop
or
sub
cmp
inc
or
addr16
sub
outsb
rclb
jo
fwait
aad
add
pop
lcall
cmp
leave
and
mov
clc
fcoms
aaa
cmp
pop
sub
mov
xchg
xchg
or
push
push
pop
int3
repz
frstor
jbe
mov
insb
sti
mov
mov
insl
mov
push
cmp
adc
sub
mov
je
xchg
sub
in
stc
jl,pt
pop
xor
mov
roll
ljmp
adc
bound
testb
add
lret
aas
mov
hlt
or
mov
mov
add
out
loopne
ret
fstl
imul
mov
outsb
mov
in
out
jl
push
or
jmp
or
test
mov
mov
arpl
push
int3
jecxz
das
test
sbb
cltd
or
adc
rcll
pop
fcmovb
ficoms
mov
jnp
mov
pop
lods
aaa
pop
mov
dec
mov
xchg
jne
mov
xchg
xor
xchg
int3
xchg
xor
inc
jo
push
cmp
mov
lods
or
pop
les
sub
jnp
xor
xchg
ljmp
adc
fistps
cwtl
mov
daa
clc
sub
out
call
js
enter
dec
stos
nop
jmp
stos
imul
mov
test
dec
decl
adc
adc
jge
cmp
iret
test
mov
add
add
cmp
fisttps
pop
scas
out
stos
jmp
into
mov
inc
xchg
and
insl
aad
push
nop
stos
or
jns
xchg
dec
xor
mov
cmp
jmp
imul
lret
mov
fisubrl
pop
faddl
xor
cwtl
mov
or
mov
jecxz
adc
stc
sahf
shr
out
mov
lods
mov
adc
outsb
imul
fiadds
repnz
popa
popf
and
in
out
into
add
movsb
popf
fidivl
insb
sub
js
sub
ret
mov
xchg
mov
lods
mov
test
in
jecxz
int
mov
out
inc
imul
mov
or
dec
dec
mov
addr16
frstor
xor
fisubl
popf
jns
pusha
xchg
stos
leave
mov
sub
pop
loop
aam
repnz
loop
push
bound
add
mov
pop
inc
into
pop
lcall
xchg
adc
and
xchg
aam
dec
and
ss
inc
aaa
sbb
lret
rcll
mov
je
xor
sub
test
fmuls
push
xchg
pop
test
xchg
inc
imul
fs
add
cmp
mov
decl
addl
dec
scas
or
data16
cli
mov
in
mov
jne
sbb
mov
insb
dec
outsl
cmp
mov
leave
hlt
rcrl
add
fnstsw
mov
es
cltd
jne
add
arpl
jge
or
inc
popf
inc
add
jnp
add
nop
ljmp
out
add
mov
jnp
xlat
ret
xor
sbb
cli
je
in
xor
mov
xor
xor
lea
pop
xchg
insb
inc
and
cmp
inc
xor
sub
rorl
subb
jg
cmpsb
notl
xlat
push
sbb
pop
sbb
pop
ja
leave
mov
pop
sarl
repnz
inc
cmpps
pop
cmp
add
add
xor
loopne
mov
mov
add
xchg
push
fdiv
inc
pop
jecxz
pop
pusha
push
lahf
aad
lea
aad
out
in
in
mov
sub
mov
ret
mov
inc
push
mov
shr
rclb
adc
ds
xchg
mov
andb
mov
ss
sahf
jne
sbb
push
int3
daa
cmp
pop
jmp
insb
cmpsb
xorl
pop
and
xor
mov
cmp
sbb
mov
aas
pop
out
xchg
mov
cwtl
popf
mov
repz
inc
sbb
ds
scas
lea
push
idivl
rorb
mov
pop
orl
clc
or
out
or
xlat
lcall
imulb
mov
enter
cltd
sub
shrl
xor
in
pop
sti
in
jbe
mov
fdivrl
ds
mov
repnz
inc
and
out
test
cli
or
scas
pusha
loopne
out
fwait
mov
push
cmp
dec
les
inc
pop
sar
lods
cli
fstps
icebp
push
stos
xchg
push
je
enter
daa
stos
imull
push
cwtl
push
lods
test
inc
lods
fdivrs
and
cmp
mov
inc
aaa
aam
push
jl
repz
loop
stc
dec
insb
inc
shl
ficoms
in
out
ficoms
mov
cmc
jo
pop
lahf
arpl
jp
mov
in
push
outsb
enter
jecxz
mov
mov
push
mov
and
mov
fcomps
sbb
xor
sbb
inc
repz
xor
xor
dec
inc
das
and
push
or
adc
cli
cmp
imul
adc
cltd
cwtl
in
aaa
sti
add
xor
ds
popf
daa
pushf
xor
es
lea
sbb
mov
out
movsw
testb
cmp
das
lock
mov
lods
push
fdivl
pusha
aaa
test
or
push
sub
subb
stos
stos
sub
cwtl
roll
mov
sbbb
test
mov
xchg
xchg
shr
les
lahf
sarl
cltd
rclb
adc
fnstsw
jae
stos
jle
push
addr16
dec
or
push
sti
gs
scas
std
cmpsl
xchg
pop
incb
mov
jns
sub
xchg
pop
in
aad
repnz
sub
jo
fisttps
das
sbb
push
test
xor
inc
aad
lock
bound
loope
push
popa
jnp
ds
repz
sub
shll
push
jg
xor
es
mul
std
mov
adc
add
mov
stos
xchg
xchg
fcom
mov
and
cmpsb
cmpsb
ss
jle
stos
or
cltd
or
sub
push
xchg
mov
int3
xor
ds
repz
sbb
std
rcrb
jne
push
daa
sub
or
stos
sbb
repz
insb
loope
scas
add
in
fisttpll
loopne
pop
mov
dec
add
sub
roll
fists
in
xchg
call
mov
ret
jle
lods
out
mov
sub
or
xor
shll
repnz
jno
iret
leave
loope
addr16
loopne
cmp
push
sbb
lods
add
lret
std
sub
push
jo
outsb
cmpsl
leave
xchg
push
addb
add
in
push
rolb
pop
enter
jle
hlt
out
int3
or
mov
push
cmp
jle
push
xchg
fldl
es
mov
pop
pop
dec
ret
cmp
pop
jns
fidivrs
mov
ds
clc
lods
jne
add
cmp
or
cmp
inc
outsl
ljmp
xchg
inc
dec
jno
adc
add
push
inc
cmp
jg
or
xor
mov
scas
inc
xchg
add
jg
adc
movsb
push
pusha
and
outsb
stc
jne
add
mov
add
iret
in
push
shll
dec
mov
and
sub
cmpl
adc
jp
inc
iret
xchg
gs
in
cmpsb
mov
cmp
inc
not
fmul
cmp
dec
mov
dec
add
sub
je
cmp
fdivrp
sub
lahf
imul
les
pop
not
lock
flds
call
mov
enter
incl
std
imul
dec
dec
mov
sub
sub
int3
test
inc
add
comiss
pop
adc
xchg
push
and
outsl
enter
and
xchg
push
enter
cmp
jle
sub
jns
pushf
xor
cmpb
icebp
cltd
movsl
lock
push
cmpsb
test
ss
push
xor
cmp
call
in
mov
decl
xor
ja
mov
addr16
sub
out
adc
mov
fdivs
enter
sbb
loop
mov
push
in
sarl
add
imul
pop
mov
mov
inc
mov
xor
mov
sbb
mov
sub
dec
stc
loopne
xchg
xor
insl
imul
add
xor
pop
das
jb
push
addr16
shll
jns
mov
mov
add
mov
les
mov
clc
or
or
add
mov
nop
xchg
mov
xor
dec
out
inc
xor
fs
cld
stos
mov
je
mov
mov
fnstsw
iret
push
or
mov
xchg
mov
dec
mov
pop
daa
mov
call
pop
xchg
add
fisubs
aam
lret
pop
fdiv
xchg
lret
pop
sub
ljmp
not
mov
jecxz
fisubl
stc
scas
adc
and
es
and
dec
mov
push
mov
or
fildl
lahf
dec
popa
pop
scas
imul
xchg
int
xor
int3
ss
cmp
pop
adc
jbe
pushf
add
xchg
jl
loope
iret
rorl
mov
push
test
ror
lods
mov
adc
imul
or
pop
les
jg
push
xchg
jo
adc
adc
aam
outsl
sbb
shll
adc
roll
push
pop
jle
stos
or
aaa
add
cmc
push
outsl
cld
jbe
pop
sub
push
cmpsl
push
push
add
jbe
in
std
fmul
shl
ret
roll
in
jmp
jecxz
dec
cwtl
push
arpl
push
jb
mov
or
pusha
or
popf
shr
adc
inc
js
insl
inc
ds
orl
jg
push
or
cmpsb
in
stos
imul
out
xchg
push
notb
outsb
nop
sarl
out
inc
clc
outsb
imull
cmpl
jae
xor
shl
cwtl
aad
fsts
popf
addr16
cmc
js
sub
mov
cmpsl
out
stos
ds
xchg
cmp
clc
aas
mov
push
push
shlb
add
push
lahf
mov
sub
add
and
cwtl
mov
mov
mov
insb
mov
pop
mov
push
mov
jb
inc
out
out
cmpsl
ss
nop
add
jp
sar
adc
ret
and
in
add
cmp
rolb
loop
mov
mov
jecxz
push
les
mov
out
pop
fwait
inc
call
dec
sub
cmp
mov
call
dec
push
test
outsl
jmp
icebp
or
sub
loope
repnz
inc
sub
mov
cwtl
lock
pop
iret
insl
rolb
mov
sbb
sub
mov
adc
and
lods
inc
cmp
xchg
leave
mov
addl
bound
stc
mov
mov
aas
push
mov
lods
in
push
jge
ficoml
cmp
push
and
push
test
dec
dec
jmp
clc
ds
sub
and
jae
orl
rcrl
mov
mov
imul
sbb
mov
in
scas
push
mov
cwtl
mov
dec
cmpsl
clc
vunpcklps
mov
iret
sub
jl
loopne
xor
mov
xchg
add
pop
fsubrl
xchg
jne
popa
jecxz
or
xchg
rcll
stos
push
inc
or
pop
push
push
mov
test
pop
cli
data16
mov
and
dec
test
aam
imul
mul
rol
cld
pop
push
mov
in
or
inc
cmc
ficomps
add
repz
lcall
mov
xor
cli
mov
fwait
pop
sub
xor
stos
cmp
sub
inc
rcl
adc
bnd
add
add
ficoml
add
stos
mov
xchg
clc
popa
mov
adc
xor
call
sbb
cmp
cli
aaa
repz
jmp
push
aas
and
xchg
enter
lret
cmpsl
pop
js
mov
jp
xchg
and
repz
lods
adc
xchg
jne
sbb
movsb
cmp
cmp
xor
fldl
xchg
and
enter
sub
mov
test
mov
xchg
and
sahf
xchg
add
and
subl
jecxz
jle
inc
shrb
inc
push
sbb
or
imul
jmp
je
cmp
inc
mov
shlb
ja
mov
leave
xchg
or
rcl
gs
jge
stos
enter
stos
popa
inc
ret
test
in
nop
loope
push
cmp
lods
mov
outsl
std
sub
clc
mov
bound
mov
mov
inc
and
sub
inc
add
fists
in
mov
mov
cmp
jne
push
mov
fwait
lcall
push
in
popf
and
xchg
imul
add
negb
pushf
pop
push
mov
arpl
pop
daa
leave
adc
sub
jns
lahf
arpl
imul
cmp
mov
lock
xlat
and
xor
fidivl
rorl
mov
nop
push
pop
hlt
pop
sti
in
add
pusha
push
or
xor
pop
fcoml
movsl
cmp
sbbl
out
inc
add
pop
sbb
hlt
ljmp
rclb
inc
mov
ds
cmp
lods
dec
bound
and
sbb
inc
fmull
sbb
and
pop
movl
adc
xchg
xor
cs
sub
fst
movsb
ret
ret
out
rcrb
adc
dec
pushf
iret
dec
jle
subb
pop
push
pop
mov
leave
cmp
xchg
in
inc
jmp
mov
sahf
or
ja
andl
lea
dec
inc
loopw
adc
sub
adc
loope
mov
xchg
bound
int
mov
pop
movsb
fldt
inc
mov
inc
iret
ja
xchg
lahf
mov
xor
and
out
jns
push
mov
pop
movsl
rorb
jl
sahf
inc
je
loope
add
jo
in
popf
and
insb
xchg
inc
mov
loopne
je
fsubs
iret
loopne
dec
sub
fcmove
rcrl
sbbl
pop
ret
ror
add
ror
dec
ljmp
scas
push
sub
jmp
mov
data16
fmuls
movsb
or
xor
mull
xchg
sub
jle
pop
sbb
lahf
lret
and
push
or
stc
lods
pop
jb
jnp
or
mov
cli
mov
cmp
int
loope
or
jge
inc
cld
pop
dec
adc
pop
xor
jo
add
loop
lret
adc
sub
sbb
rolb
jge
mov
xchg
jl
pop
xchg
repnz
lods
pop
push
pusha
scas
iret
es
xor
xchg
adc
xchg
add
adc
fcoml
mov
imul
lahf
mov
cmp
cmp
adc
xorb
add
cmp
mov
mov
lcall
mov
inc
lds
lods
jae
mull
fwait
mov
popa
addb
roll
dec
mov
and
cld
jecxz
jno
mov
addb
xor
scas
sbb
ss
mov
push
pushf
push
pushf
push
xor
xor
jno
shrb
dec
inc
rcrb
mov
mov
sbb
mov
fwait
repz
sbb
cli
in
out
rcr
adc
int3
sub
mov
stos
bound
xlat
int
cld
in
jmp
sti
js
xchg
ret
xor
jp
movsl
add
imul
pop
cmp
sub
stos
dec
cmpsb
das
xchg
inc
lret
sti
leave
add
sub
cmp
or
fwait
cmc
or
std
mov
enter
pop
fadds
fistl
lcall
ret
js
mov
jae
adc
sbb
js
out
pop
or
fdivs
in
push
das
fisttpll
cmpsl
push
adc
pop
cmp
loop
in
mov
fistl
pop
xor
call
cmpsl
cwtl
and
mov
xchg
std
jb
sbb
shl
sub
pop
loope
dec
dec
jne
sub
jle
xor
add
and
sbb
dec
jne
int3
imul
or
or
inc
cmp
hlt
adc
mov
std
pusha
jl
ficomps
test
lea
xchg
mov
call
mov
popa
js
std
and
outsb
dec
mov
fists
mov
pushl
aaa
pop
jae
repnz
mov
outsl
jecxz
loopew
mov
cmc
hlt
lods
pop
and
mov
scas
xchg
loopne
enter
adc
xor
nop
push
jle
sbb
sub
adc
in
lods
inc
inc
arpl
mov
push
jp
insb
mov
pop
dec
push
mov
loop
adc
or
sub
repnz
movsl
cwtl
aad
xchg
inc
push
jmp
sbb
jbe
rorl
mov
or
loope
aas
add
cmp
adc
jno
shl
pop
add
sub
push
fdivrs
mov
lods
aas
jo
sbb
outsl
test
mov
jb
std
shr
inc
mov
sub
js
fisubs
idivb
mov
rclb
dec
mov
sbb
loope
mov
rcl
mov
xor
pop
mov
repz
pop
xchg
mov
or
repnz
popa
jno
vmptrst
add
sub
sbb
xor
insl
jmp
je
pop
faddp
fcomps
or
lret
xor
mov
mov
jg
push
sti
xchg
mov
jne
leave
icebp
ja
cltd
and
dec
sbb
loopne
sbb
adc
or
pop
stc
dec
pop
sub
xor
mov
jbe
in
cld
push
cmpsl
pop
cmpl
inc
dec
ss
adc
stos
xchg
mov
or
jge
fwait
sbb
gs
and
out
ret
lods
mov
in
inc
lcall
fstps
inc
in
add
sbb
pop
mov
xchg
jne
mov
xor
jno
dec
jbe
or
icebp
pop
fiaddl
pop
and
adc
mov
inc
imul
push
jp
in
nop
stos
lods
lcall
call
xlat
mov
cmc
push
push
inc
clc
movsb
pushf
imul
data16
push
xor
push
mov
inc
aam
ret
jle
xor
out
stos
mov
mov
scas
in
xor
arpl
jae
mov
dec
and
insb
movsb
nop
popf
cmpsb
sbb
movsb
scas
mov
test
pop
lcall
xor
dec
xlat
lods
aas
push
jp
xchg
movsl
push
push
fwait
or
or
inc
xchg
inc
jne
push
xor
out
jl
outsb
add
test
sub
testb
jno
dec
ljmp
ret
inc
jo
out
hlt
or
fisubrl
inc
mov
pop
mov
cs
mov
sbb
xchg
dec
push
filds
dec
shl
fcompl
mov
inc
push
xchg
dec
inc
orb
pushf
dec
enter
push
pushf
andb
dec
push
test
push
push
xor
or
aas
in
adc
out
daa
cmpsl
cmp
jmp
les
lock
cmp
aas
pop
ret
inc
negb
in
xchg
les
inc
xor
adc
sub
mov
daa
inc
out
ud0
lret
stos
mov
out
jnp
pushf
clc
je
xchg
outsl
roll
sbbl
dec
jae
jno
repnz
cmp
add
and
xchg
sbb
insl
fwait
inc
pop
clc
xlat
cmp
cmp
mov
js
pushf
adc
imul
pop
push
std
mov
push
in
pop
sub
cmpsl
cli
jge
mov
inc
xor
and
sbb
pop
xchg
jo
mov
push
jb
adc
movsl
push
daa
fwait
and
xor
dec
es
push
cli
out
push
notb
mov
sbb
arpl
popf
mov
movsl
ss
int3
test
mov
add
sub
fdivrs
inc
lea
fcomps
es
adc
in
sbb
inc
inc
sub
ficoml
mov
sti
sti
ret
inc
xchg
pop
inc
scas
dec
ljmp
mov
loope
and
fcompl
cld
inc
in
adc
pop
adc
or
pop
cwtl
mov
ds
enter
mov
adc
cmp
call
fidivrs
movsb
jg
lock
jno
jg,pt
lods
add
popa
cli
inc
xor
add
mov
ret
adc
add
jne
or
mov
jp
sbb
scas
mov
movsl
out
aaa
mov
aas
mov
push
cmc
std
ja
pop
lock
lods
fwait
clc
xor
das
push
stos
jnp
sbb
es
lds
pop
xchg
int
ds
out
sbb
aaa
sahf
cltd
test
push
cltd
mov
mov
mov
dec
sub
out
sbb
orb
push
call
cld
xchg
mov
sbb
or
adc
or
mov
fsub
xorb
jecxz
sub
sti
and
jle
sbb
add
xchg
std
adc
fabs
pop
dec
rorl
cwtl
inc
rolb
jmp
cmc
ret
popa
cld
les
jae
inc
subl
xor
inc
mov
xor
xchg
popa
stc
shlb
out
jmp
xchg
scas
inc
xor
data16
cwtl
or
mov
xor
jecxz
mov
shlb
add
inc
fcmovu
and
in
pmulhw
lret
aas
mov
add
arpl
or
jbe
cmp
lods
cmp
adc
push
pop
js
std
jmp
mov
dec
adc
sub
aad
adc
dec
fisttpll
shlb
mov
adc
rcll
popf
sub
std
icebp
insl
xchg
out
shrb
pop
outsl
xchg
in
pop
push
or
mov
aam
fldcw
adc
data16
dec
loopne
cmp
sbb
add
mov
mov
jnp
push
xchg
gs
sbb
dec
jbe
repnz
test
cmp
mov
test
dec
dec
movsl
in
or
incl
or
xchg
rorb
xchg
lods
fs
lock
or
xchg
ret
div
sti
dec
adc
ficoms
popa
fwait
xchg
xchg
lcall
das
cmp
jg
ds
ror
pop
cmp
imul
es
mov
fldenv
rcrl
and
push
mov
sbbl
cmp
xchg
cwtl
mov
pop
mov
jl
lods
pop
xchg
mov
or
adc
movsb
sub
hlt
out
mov
cmpsl
inc
lods
cmp
cld
add
jns
sub
testl
jmp
lock
lahf
xchg
dec
inc
shl
push
loop
add
fstl
jno
jp
mov
dec
cmp
mov
add
stos
shlb
cmp
mov
sub
inc
sti
and
fwait
mov
pop
fsubrs
add
or
or
jo
pop
out
clc
inc
mov
and
sbb
xchg
sub
jne,pt
jp
bound
adc
jno
jns
adc
push
pop
push
movsl
fbstp
jmp
mov
shlb
pop
es
loope
lds
xchg
outsb
movsb
mov
ja
lds
stos
or
popf
jno
les
mov
mov
repnz
xchg
and
test
sub
loope
stc
pop
or
cmp
jno
xchg
cmp
movnti
push
mov
lcall
cmc
lret
mov
lock
mov
pop
pop
test
cltd
fcmovne
push
sbbb
cmpsl
test
pop
stos
push
repz
aad
inc
mov
add
sub
cmc
mov
insb
rol
xor
pop
loop
in
mov
sub
push
dec
aaa
insb
pop
sti
xor
xchg
ds
pop
jg
sarl
fstl
mov
sbb
data16
push
out
push
dec
fistpll
and
mov
stos
dec
test
pop
inc
cmp
in
icebp
add
scas
lock
pop
sub
out
in
lods
lret
stos
adc
sub
mov
aaa
and
xlat
shll
aad
into
cmp
movsl
test
mov
cli
movsl
sarl
lock
fwait
sbb
xchg
jne
adc
mov
leave
mov
orb
ja
loope
and
dec
inc
mov
inc
push
push
loop
xor
xlat
les
or
cli
movsb
outsb
int
insl
and
frstpm(287
mov
pop
xchg
in
sbb
scas
xchg
lret
clc
adc
leave
stos
das
push
cmc
mov
out
aam
pop
popf
mov
rcrb
mov
xor
repz
data16
push
add
mov
pop
mov
dec
xchg
lods
lods
cltd
xchg
inc
icebp
ljmp
fdivl
jle
leave
adc
jecxz
pop
call
push
jnp
cwtl
inc
addr16
out
leave
notb
mov
mov
add
lds
pop
daa
loopne
and
test
mov
addl
aam
or
push
sub
sbb
xchg
iret
xchg
lcall
mov
fwait
out
push
push
imul
repnz
xchg
rclb
loopne
mov
mov
mull
jp
insl
add
push
pop
jae
push
mov
inc
xor
mov
jmp
mov
xor
repnz
jno
fmulp
add
ret
jp
or
btr
hlt
scas
shl
add
dec
dec
and
loopne
push
pop
and
mov
xchg
add
add
mov
mov
fidivl
and
negl
mov
cmpb
add
add
push
add
mov
pusha
pop
repnz
or
rcrl
jg
scas
inc
fbld
pop
sbb
mov
rolb
jg
in
dec
sti
pusha
clc
mov
lods
insb
hlt
es
push
fwait
loop
pop
mov
dec
test
cmpsb
in
add
xlat
push
mov
jg
ljmp
mov
xor
xchg
jnp
pop
mov
mov
cmp
adc
sub
jae
mov
jmp
movsb
inc
sbb
shl
mov
push
ja
or
mov
mov
mov
das
cmpsb
pop
pop
rep
fstps
sbb
or
das
adcb
cmp
and
lahf
das
fldenv
adc
nop
xor
mov
std
jmp
push
in
mov
dec
lock
imul
lods
cmp
pop
negb
pop
mov
mov
push
adc
inc
fdivrp
jecxz
sbb
lds
mov
gs
push
icebp
imul
inc
rolb
and
mov
pop
add
cmp
jmp
out
ja
pop
jno
out
icebp
jae
test
or
mov
push
and
xchg
leave
aad
cld
loopne
xlat
mov
aad
add
mov
cld
stos
dec
adc
adc
xchg
and
dec
push
pop
push
aas
push
cs
ja
dec
xchg
andb
sub
cmp
ret
jecxz
scas
lcall
xchg
cmp
inc
pop
xchg
shll
and
cmp
or
inc
mov
les
hlt
lahf
sub
fistpll
mov
sarb
mov
call
popl
push
lods
shrb
outsb
scas
cmc
repnz
lahf
mov
in
jno
mov
sub
sbbl
ss
lods
pop
adc
ret
cmp
lods
dec
enter
sub
dec
in
jns
icebp
imul
cmp
out
js
fdivl
fidivl
insl
push
push
out
xchg
enter
rcrl
jae
addb
jno
popf
dec
sbb
xchg
test
sbb
ret
ja
adc
push
out
movsl
test
xor
dec
push
cmp
clc
cltd
imul
mov
clc
cmpsb
xor
addr16
jbe
stos
into
ja
les
inc
pop
ret
in
mov
lods
jmp
adc
sub
sub
lret
mov
add
loope
fwait
pop
ret
pop
push
adc
fdivl
sub
mov
fmull
repz
aas
jno
dec
stc
lds
push
rorl
mov
pop
add
sub
shl
inc
les
push
js
call
mov
xor
jge
in
bound
dec
sbbb
sbb
jle
and
in
sbb
hlt
xchg
ret
cwtl
lret
icebp
pop
gs
xor
push
adc
stos
add
ret
mov
jns
orb
push
cmpsb
sbb
icebp
cmp
xchg
jg
and
mov
cs
jo
out
jnp
sbb
movsl
popa
xchg
mov
add
mov
or
adc
mov
jns
out
or
mov
out
testb
and
mov
xchg
mov
iret
xor
pop
insb
std
sbbl
sub
push
jno
and
movsl
call
cmpsb
orl
and
jge
pop
imul
loope
in
sbb
movsl
lahf
lock
stos
inc
mov
and
out
loop
sub
mov
cld
inc
rcr
jmp
inc
loope
das
cld
sarl
fldl2e
ljmp
test
addr16
loop
or
fcmovb
xchg
xchg
pop
mov
cmp
outsb
xor
das
inc
inc
arpl
dec
sbb
pop
dec
movsl
jge
mov
in
fcmovu
mull
and
cltd
lock
jbe
pop
into
jnp
sbb
ret
out
push
aam
lcall
imul
loop
inc
or
clc
xor
mov
int
push
mov
sub
and
les
aaa
fmul
aad
xor
jne
aaa
hlt
sub
mov
jmp
xchg
pushf
std
shll
rclb
les
pop
mov
mov
sbb
sahf
mov
imul
rcl
lods
dec
sub
cmpsb
jge
bound
fists
mov
inc
in
and
mov
jne
aam
and
inc
inc
iret
push
leave
sti
jno
sbb
mov
mov
jg
xchg
jecxz
mov
fcmovne
lret
loopne
inc
ss
dec
or
test
dec
hlt
lcall
cmp
mov
movsl
add
sub
in
mov
xchg
adc
stos
mov
or
pop
repnz
ret
int
xor
pop
sub
push
mov
ds
mov
push
xlat
push
subb
xchg
push
jle
jp
add
arpl
test
inc
ja
mov
pop
fiaddl
jmp
adc
xlat
das
push
lock
cmpsb
and
cmp
into
pop
add
xor
pusha
dec
jns
mov
shl
cmp
dec
sti
pop
imul
mov
popa
pop
cwtl
shlb
bound
mov
or
stos
daa
popf
push
adc
scas
idivl
sbb
mov
or
ss
adcb
rcl
in
or
sarl
sub
push
dec
roll
imul
cmp
adc
scas
jne
mov
inc
lahf
mov
aaa
fistpll
imul
push
push
insl
jmp
out
pop
mov
push
jbe
ja
or
mov
jno
pop
ljmp
pop
sbbl
and
or
mov
adc
jp
or
jnp
jecxz
fcoml
leave
sbb
xor
frstor
sub
aad
lods
addr16
cmp
mov
dec
mov
xor
jmp
out
push
dec
sahf
cmpb
jne
mov
sub
sub
fidivrl
dec
mov
aas
mov
aam
fwait
les
stos
js
lret
mov
les
push
jo
lret
lahf
or
int
ss
xor
imulb
aad
addr16
cmp
in
or
xchg
movsb
sbb
sahf
mov
push
mov
dec
xchg
add
fwait
mov
sti
popf
jb
stos
fidivrs
pop
icebp
ffreep
push
jmp
test
lds
jg
ret
test
pop
stos
mov
cmp
sarb
or
add
ljmp
leave
std
inc
stos
pop
mov
push
psllw
cmp
iret
cmp
push
imul
mov
adc
scas
andb
mov
cmpsl
push
sub
dec
stc
jg
add
jnp
icebp
jmp
cmp
in
cmp
shl
pop
pushl
idivl
jns
test
push
and
cmpsb
cmp
movsl
out
shlb
push
stos
cmp
out
std
dec
out
and
idivb
push
bnd
nop
mov
popf
in
aad
jmp
lret
fnstcw
xor
or
pop
push
icebp
stos
daa
push
add
mov
inc
mov
ret
sub
mov
mov
leave
jmp
leave
mov
mov
add
push
mov
orl
cmp
into
cmpl
jns
push
mov
aas
or
fisttpll
daa
mov
iret
push
fucomp
cld
mov
sahf
xchg
or
lret
cmp
inc
in
push
adc
and
jp
iret
out
mov
pop
sub
rol
lcall
and
cmpl
test
pop
and
dec
rcrb
in
arpl
push
dec
insb
sbb
inc
sub
mov
scas
add
sahf
das
xchg
xor
popf
jl
push
mov
jp
or
push
add
cltd
or
sub
in
aad
ret
pushf
or
ficomps
jle
std
sbb
arpl
out
fcoms
stc
dec
inc
jns
inc
ss
jp
fists
lahf
mov
add
ss
fsubl
mov
pop
int
fiaddl
cltd
rcll
or
call
inc
add
shr
test
in
xor
call
xchg
aad
push
int
and
pop
add
add
insl
in
dec
fidivrl
lret
into
dec
jno
sbb
ss
and
fstpt
jl
inc
jmp
cmp
gs
adc
pusha
pop
adc
xchg
in
sub
arpl
das
aas
scas
or
ja
cmp
sub
mov
rclb
mov
fldl
ljmp
lcall
pop
push
jns
inc
ja
cmpl
cmpsl
jae
sbb
scas
push
negb
xchg
cmp
mov
jnp
cmpsl
cmp
int3
ffreep
inc
test
xor
adc
stc
mov
lcall
imul
orl
cmp
aam
fistpl
cltd
push
in
add
fwait
adc
mov
and
loopne
aas
idivb
loope
pusha
push
push
addr16
and
bound
xchg
mov
roll
ss
push
ja
iret
pop
xor
jg
lcall
sbb
arpl
in
inc
lods
stc
xchg
pop
sub
andl
push
adc
aaa
jecxz
movsl
fsubl
xor
fsubr
jge
sbb
fnstsw
mov
lret
add
mov
xchg
sti
mov
into
test
shrl
lret
sahf
mov
out
mov
mov
pop
mov
push
jle
pop
test
cmp
push
sti
gs
adcl
enter
push
lahf
cwtl
lret
cmp
sub
adc
repz
xor
sbb
iret
out
xchg
or
sub
hlt
xor
sub
push
mov
int3
mov
mov
xchg
nop
fcmovb
nop
mov
sub
insb
fildll
push
jne
test
pop
ljmp
stos
sbb
mov
pop
mov
icebp
xor
adc
hlt
sbb
jns
or
mov
mov
jl
cwtl
inc
test
lods
mov
adc
cld
pop
les
cltd
movsl
das
ss
out
cwtl
mov
in
or
shll
jg
push
rolb
in
mov
cmpl
add
xchg
and
repz
or
push
inc
sub
push
jmp
sub
hlt
fiadds
out
into
push
lods
bound
mov
xchg
imul
sarl
scas
iret
scas
pop
arpl
jb
ret
je
dec
ds
lsl
xchg
lods
fucomp
mov
das
mov
cmp
int
cmp
js
pushf
inc
clc
jnp
pop
adc
jae
add
pop
cmp
mov
xchg
rorl
push
mov
scas
mov
in
pop
pop
pop
mov
in
ljmp
push
jne
loop
and
mov
mov
push
cs
mov
filds
fimuls
xlat
pop
xchg
lock
jecxz
leave
add
fnstenv
imul
cld
push
rcll
inc
push
push
les
add
mov
aam
jb
pusha
dec
jb
mov
je
pop
inc
aad
jmp
sbb
andb
cmc
pop
dec
push
aas
lock
rolb
push
xor
rolb
mov
adc
out
add
int3
das
cs
adc
cmpsb
int
movsb
dec
rclb
cmp
jg
les
lret
in
ret
fistl
cmp
pop
adc
loope
in
sub
fcom
mov
mov
shlb
inc
scas
cs
or
addr16
ret
ret
daa
lahf
inc
push
push
shrb
mov
pusha
jne
ss
mov
lahf
cmpsl
call
mov
pusha
jnp
mov
and
sbb
ss
adc
sub
dec
sar
outsb
sub
xchg
je
fwait
adc
cmp
add
mov
fs
js
clc
jno
push
fld
sub
sbb
ja
imul
cmp
idiv
pusha
popa
cmc
and
sti
and
jge
add
push
jo
or
lods
insl
outsl
or
out
xor
inc
fsub
rcrl
xor
out
or
in
cmp
ss
inc
pop
xor
push
sbb
adc
dec
test
add
aas
xchg
fsubs
jge
lret
ss
inc
sbb
xchg
pop
sub
sbbb
mov
xor
decb
sbb
clc
push
vmread
xchg
mov
cmp
push
jne
rclb
pop
push
mov
xchg
aam
icebp
jns
push
fildl
push
sub
lcall
xor
sub
rcr
jg
and
lock
cwtl
mov
adc
out
movsb
jle
push
inc
daa
fs
sti
imul
or
mov
xor
mov
shl
add
dec
call
call
mov
daa
dec
dec
jl
adc
std
ja
mov
mov
mov
sub
loop
mov
insl
faddl
repz
stos
pop
sub
or
mov
rclb
fisubl
xchg
ljmp
outsl
dec
clc
popf
into
or
outsl
cmp
xlat
xor
push
lds
sbb
add
fldenv
clc
pop
minps
mov
sbb
adc
push
mov
xchg
sbb
sbb
xchg
roll
xor
jo
push
pop
push
fs
inc
lret
lcall
jecxz
outsl
pushf
outsl
mov
das
mov
repnz
mov
mov
scas
mov
sub
mov
cmpsb
xor
shlb
insl
in
pop
jbe
sarb
add
shll
sahf
or
pusha
lock
shll
popa
xor
loopne
mov
cmpsb
pop
pushf
mov
mov
std
repz
jl
stc
push
xchg
sub
jmp
std
ss
repz
mov
cmpsb
mov
mov
out
cmp
aaa
jmp
lcall
inc
cmc
sbb
push
xor
jae
dec
add
mov
jmp
fidivrs
outsl
outsb
lods
clc
pop
and
jl,pt
cld
and
push
inc
test
bound
sti
popf
inc
mov
push
rcrl
ret
pop
test
add
aam
xor
inc
add
jno
filds
iret
add
jb
outsb
pushf
call
or
dec
dec
addr16
sbb
or
in
xor
pop
out
aam
adc
pop
ljmp
jmp
pop
ret
xchg
xchg
or
fsubrl
push
inc
mov
movsl
mov
xchg
jecxz
sbb
xchg
sahf
mov
clc
out
aas
add
xor
jmp
pop
addl
sbb
enter
test
daa
mov
pusha
push
xchg
sbb
add
and
aas
push
mov
xchg
stos
xor
ja
cli
jg
rcr
xor
push
add
fdivrp
imul
ror
ret
or
sbb
gs
inc
std
mov
movsl
popa
out
outsb
mov
stos
or
cmp
outsl
out
aaa
stos
cltd
lahf
mov
mov
push
and
mov
adc
out
xor
add
fs
repz
mov
add
xchg
push
mov
cmp
add
leave
setns
test
adc
shlb
ret
pop
and
mov
outsl
xor
mov
push
hlt
xchg
cmp
jge
inc
lahf
bound
sub
add
xor
stos
cmp
fisubl
cmc
loop
pop
test
insb
cmpsl
outsb
lock
cld
jp
into
sbb
cmp
mov
dec
pushf
sarb
mov
fwait
std
xor
sarb
xchg
lods
addr16
repnz
add
inc
mov
or
sub
add
loope
dec
test
or
stos
push
stos
cwtl
xor
imul
imul
xor
mov
cmp
cmc
jns
ljmp
push
push
cs
out
push
ljmp
sub
in
push
in
jge
cmpsl
and
xchg
dec
iret
pop
dec
pop
mov
out
pop
inc
push
jl
repz
pusha
outsl
test
mov
sub
nop
sbb
push
cmp
pushf
out
inc
popf
loopne
jnp
in
in
ret
mov
and
stc
arpl
enter
in
sbb
scas
pop
daa
mov
xor
ficompl
fwait
std
jns
mov
bound
adcl
or
jno
mov
push
out
dec
push
or
in
mov
inc
push
pop
negb
mov
stos
cwtl
push
or
es
jbe
xor
mov
cltd
sbbl
cld
inc
sub
sbb
inc
movups
movsb
mov
push
cmp
jno
mov
into
addb
or
dec
popf
lods
sbb
btr
and
cmp
cs
movsb
shlb
adc
jmp
lds
jnp
mov
loopne
fwait
cmpl
jns
and
fists
dec
and
xchg
jo
or
inc
dec
into
sub
adc
push
daa
mov
in
daa
push
mov
sub
addr16
mov
jmp
xchg
ret
frstor
fistpl
cli
repz
out
cmp
push
ljmp
icebp
jg
stos
hlt
and
cwtl
in
cmpsl
cmpsb
cmp
pop
repz
je
and
lahf
repz
addr16
xor
out
int
outsl
pop
cmp
or
add
sti
pop
mov
fcomp
outsl
mov
cmpsb
add
sub
xor
hlt
jg
cmp
cld
loope
mov
mov
out
pushf
out
sub
push
popf
dec
add
nop
mov
test
scas
and
iret
jmp
inc
fidivl
push
push
dec
into
sub
pop
ficomps
addr16
cmp
insb
adc
sbb
lcall
or
lret
cmpsl
pop
aam
arpl
mov
loop
lods
mov
jno
pop
pusha
pop
jmp
jbe
push
sti
mov
shl
lret
aad
sbb
inc
or
fwait
jae
or
jns
push
enter
fs
andl
add
rolb
mov
sbb
aad
cmp
and
push
jg
rolb
dec
sti
std
cmp
gs
out
iret
adc
mov
jmp
cmp
notb
ds
test
push
inc
xchg
scas
mov
jbe
in
test
mov
xchg
out
in
push
outsl
or
jecxz
mov
adc
cmpsl
ja
lods
aad
mov
movsb
lret
and
movsl
ret
lock
mov
add
mov
lock
xchg
dec
push
xchg
cmpsb
xchg
out
cmp
mov
aad
popa
outsl
sbb
inc
dec
xor
cli
lods
inc
push
xor
add
stc
xor
jp
mov
xchg
xchg
cmp
sti
cmp
daa
jbe
jae
das
shrb
fdivl
mov
cmp
rcr
cmpsl
imul
jge
xchg
aas
add
repz
add
sbb
pop
shl
inc
testb
pop
nop
repz
jg
lahf
fldl
add
cmc
jns
sbb
add
int3
push
pop
jecxz
mov
lret
aam
jno
test
inc
aaa
sub
xlat
mov
jle
and
ja
xor
push
pop
jnp
shlb
popa
sub
stos
ds
test
push
loopne
ret
movsb
cmp
and
arpl
nop
xor
jb
mov
daa
xor
pop
lcall
icebp
mov
jno
out
pop
in
mov
bound
pop
je
rcr
jl
mov
imul
jecxz
lds
cmc
sti
mov
adc
sub
add
mov
cmp
outsl
push
mov
and
push
xor
sbb
cmp
into
pop
cmc
push
mov
lock
lds
fstps
cmpb
cmp
jl
and
push
out
fs
push
das
or
js,pn
xchg
jg
mov
inc
adc
test
sbb
loope
outsb
test
xlat
lcall
and
mov
mov
jns
cmp
push
dec
out
mov
movsb
div
mov
fs
cmpsb
das
xchg
gs
int3
fidivrs
jg
jle
sub
mov
fldcw
or
pop
jmp
add
stc
push
mov
movsl
ss
fwait
xchg
xor
out
imul
fimuls
jb
sbb
add
bound
dec
in
and
sahf
xchg
pop
push
adc
je
ljmp
cmp
mov
jg
fidivl
test
jb
xor
insl
xchg
in
push
loopne
cmp
adc
repz
jb
fsubl
xchg
lret
and
lcall
push
and
or
xchg
and
fidivrl
mov
stc
mov
push
push
rorl
push
xchg
fistps
ret
ss
or
lahf
pop
sbb
lds
popf
mov
mov
negl
inc
loop
out
nop
inc
mov
and
xor
cmp
out
not
and
cmpsb
xrelease
loop
jge
mov
xchg
lret
jnp
pop
sub
lods
addb
notb
jbe
xchg
mov
xor
adc
testl
xor
mov
sub
push
imul
xor
xlat
push
mov
pop
sti
cs
outsl
adc
xor
imul
sub
clc
sub
imul
jge
ja
dec
sahf
dec
sbb
inc
dec
push
mov
test
push
ret
test
or
repz
insl
mov
fsubs
aad
sbb
mov
pop
into
adcb
xchg
fbstp
in
push
mov
cmp
xor
pop
movsl
out
adc
insb
or
push
dec
shrl
add
dec
jno
inc
pop
rcl
jge
dec
inc
jns
arpl
imul
scas
nop
push
sahf
jmp
pop
inc
pop
imul
js
fwait
hlt
daa
adc
push
mov
arpl
add
lods
mov
push
jl
adc
loopne
outsl
mov
dec
nop
movsl
dec
int
push
movsl
insb
push
fcmovnbe
xchg
test
lretw
sbb
adcl
stos
inc
xlat
fidivs
sub
fcomip
sbb
test
pusha
add
push
push
push
or
fldenv
imul
cmp
push
jecxz
sahf
pop
aad
mov
es
and
jae
and
std
mov
lods
shl
cmp
jo
jge
or
dec
mov
cwtl
jecxz
and
xchg
fmul
repz
std
jne
outsb
and
add
ja
adc
mov
xor
icebp
mov
sub
nop
push
jae
mov
in
es
fstps
push
dec
aam
mov
aaa
or
dec
imul
mov
add
insb
clc
adc
insb
repz
mov
sti
lea
cmp
out
out
push
mov
aas
sbb
fimuls
ficomps
fdivrp
push
test
subl
jp
clc
xor
mov
mov
jg
in
repz
pop
outsb
push
and
mov
mov
dec
or
cli
out
pop
scas
mov
daa
fwait
pop
cmpl
or
sbb
leave
xchg
imul
stos
call
out
push
test
insb
inc
mov
push
xchg
xchg
push
les
cwtl
sbbl
arpl
js
adc
icebp
mov
fxch
and
movsb
into
shll
inc
scas
mov
aad
lret
call
in
push
movlps
push
cmp
mov
js
pop
dec
xor
into
and
shlb
or
lret
add
aas
inc
xor
sub
or
lods
xlat
aaa
xlat
fidivs
adc
and
aas
stos
xchg
push
lea
fldenv
rcll
daa
adc
lcall
mov
out
cmc
xor
jl
jmp
iret
int
push
mov
arpl
mov
mov
punpckldq
fsubr
pop
cmpsl
stos
sbb
mov
mov
xchg
pusha
loope
jmp
int3
pop
add
stos
mov
add
push
aas
and
aaa
pushaw
mov
jb
add
test
push
xor
mov
sub
mov
fbld
jno
xor
add
jbe
out
inc
cmp
mov
fsubl
loop
jo
adc
cmp
movsb
arpl
xorb
sbb
push
out
mov
dec
mov
mov
jl
int
shr
outsb
cltd
xor
divl
push
popf
mov
and
and
aam
and
jne
int3
std
cmc
imulb
inc
popa
mov
divb
pop
sub
mov
mov
pop
inc
cwtl
sub
dec
cmp
adc
jg
pop
mov
test
fs
ficoml
mov
fcompl
jbe
mov
movsl
mov
je
add
dec
mov
pop
mov
sub
add
xchg
add
loopne
cmp
sub
mov
sub
cld
rol
push
sub
pop
jbe
das
mov
mov
jp
mov
inc
xchg
sub
or
mov
in
outsl
dec
jb
jmp
inc
mov
mov
addl
inc
mov
enter
jae
daa
test
xlat
cs
insl
xchg
out
lret
sub
jg
fnsave
sub
clc
lret
jecxz
pop
mov
add
into
stos
xchg
pop
or
push
push
push
sbb
pushf
inc
or
dec
stos
adc
fadds
leave
daa
arpl
int
xchg
sti
mov
mov
add
push
push
pop
mov
orl
pusha
sbb
cli
cli
mov
xor
or
inc
mov
das
pop
jmp
jmp
mov
repnz
cmp
xchg
and
sub
push
lcall
mov
mov
inc
call
inc
pop
xchg
add
xchg
pop
test
ljmp
in
or
dec
xor
pusha
orb
adc
je
in
fsubs
or
and
jns
lods
scas
pushl
jg
mov
jnp
or
test
jo
repnz
mov
fimuls
lahf
leave
mov
into
mov
es
orb
jnp
mov
cwtl
jmp
add
shll
add
jns
test
and
jmp
inc
mov
ret
jo
jg
fildl
test
popa
mov
iret
adc
bound
fcomps
nop
xor
push
mov
sub
cmc
scas
inc
adc
scas
sarl
mov
push
dec
push
enter
imulb
arpl
les
jl
clc
insl
fsubl
or
sub
and
xchg
pop
aam
mov
sub
push
or
mov
scas
sbb
sub
testl
pop
imul
cmpl
mov
shlb
push
fsubs
pop
icebp
inc
pop
and
pop
inc
mov
int
add
and
dec
scas
sub
pusha
lock
inc
pop
cli
dec
dec
popl
mov
or
in
cli
sbb
pop
mov
bound
and
sub
insb
cmp
es
outsl
popa
sbb
inc
lahf
les
out
push
icebp
lods
mov
or
inc
push
mov
add
xchg
sahf
cltd
pop
cmp
pop
cs
push
xor
adc
xchg
sub
push
inc
push
pop
mov
jb
inc
add
lret
inc
sub
imul
mov
outsb
nop
and
fs
cld
cld
xor
cwtl
shlb
roll
or
xlat
pop
hlt
xchg
lahf
nop
xchg
bound
in
inc
fstl
sub
pop
js
add
ret
inc
pop
daa
xchg
mov
inc
imul
inc
add
adc
test
push
push
aam
stos
push
or
xchg
sbb
jae
mov
inc
fldl
in
nop
out
roll
dec
fwait
adc
mov
iret
lret
lock
sti
xor
xchg
xor
pushf
xlat
push
iret
xorl
sub
pop
pop
addr16
adc
mov
arpl
int
adc
xchg
fdivs
imul
hlt
aad
adc
call
cli
jno
insb
jne
sbb
cmc
adc
push
cld
mov
lds
notl
dec
add
pop
lret
lahf
push
lret
int3
mov
push
push
in
xor
iret
sub
or
pop
in
mov
test
ljmp
std
add
mov
cmpsb
dec
jle
out
jg
lock
push
cmc
fisubrs
jae
ror
pop
mov
mov
and
icebp
testl
pop
jno
mov
xchg
ljmp
jbe
adc
dec
outsl
mov
add
mov
push
mov
in
movsb
mov
push
jno
adc
add
cmp
cld
xor
push
out
push
stos
lock
sbb
push
sub
jnp
lea
xor
shr
xlat
cmp
fwait
lret
jmp
fsub
aam
jae
cmp
imul
jne
and
test
sub
mov
jb
push
sbb
mov
js
adc
or
xor
shr
sahf
outsb
imul
sub
sti
or
sbb
mov
aas
or
push
mov
mov
cmpb
test
test
cs
dec
je
hlt
xchg
lods
adcb
lret
inc
mov
popa
pop
pop
or
xor
rolb
cmc
in
jb
and
idiv
mov
xchg
test
cmp
xor
jb
adc
add
ss
imul
push
push
mov
mov
sbb
mov
outsl
dec
inc
icebp
mov
jo
dec
ds
mov
add
and
pop
mov
sub
sbb
call
or
inc
inc
mov
shrb
loope
xor
dec
jae
iret
mov
push
pop
dec
out
fdivl
icebp
loope
and
sar
or
mov
mov
ja
xchg
into
or
adc
call
xchg
das
push
mov
fbstp
lock
notb
jae
jmp
xor
jmp
mov
pop
call
inc
mov
mov
rcr
inc
mov
seto
pusha
ss
or
cmc
and
cli
scas
scas
add
and
cmp
inc
imul
ljmp
inc
jb
add
mov
dec
stos
xchg
loope
xchg
mov
and
cmp
scas
xchg
adc
in
sahf
aad
out
pop
scas
dec
mov
cld
inc
push
mov
dec
xchg
lds
inc
jae
movsb
lock
ljmp
std
cli
push
jecxz
repz
xchg
push
ret
push
inc
push
mov
and
push
lock
dec
or
in
xchg
add
xchg
inc
pop
push
int3
es
or
pop
popf
lahf
or
and
adc
sarl
jns
icebp
insl
scas
jmp
mov
popa
dec
push
sti
jns
jbe
lret
jmp
cltd
pop
btr
sub
jb
push
jae
mov
pusha
sub
mov
pop
das
fcomps
movsl
and
es
leave
or
outsb
addl
js
sub
pop
js
iret
or
ret
adc
pop
adc
push
push
sbb
inc
out
adc
lods
insl
xchg
add
in
iret
pop
and
adc
imul
fimuls
mov
jg
popf
xor
pop
push
lea
add
lahf
push
cmp
fisubrl
leave
mov
lret
mov
je
mov
xchg
push
push
ret
xchg
xchg
push
jp
out
int3
divl
cmpsl
nop
shll
inc
aaa
jne
push
lds
xchg
fisttpll
mov
popl
jnp
xchg
gs
es
xchg
push
cmp
daa
sahf
jecxz
ja
or
cmp
ds
sbb
jne
xor
scas
insl
gs
ds
insb
cmpsl
cs
jg
fbld
xchg
push
int3
cld
push
cmp
inc
sbb
inc
dec
xor
sbb
aam
in
into
test
mov
pop
mov
outsb
cmpsb
inc
aas
fcomps
movsl
ljmp
repnz
shl
pusha
mov
aaa
add
xchg
mov
mov
gs
dec
push
add
xrelease
add
mov
cs
sbbb
in
pop
pop
sub
es
fldl
xor
cmp
push
sahf
mov
mov
ss
fimull
push
lret
mov
lcall
xor
daa
push
or
add
rep
sub
jno
stos
mov
fisubl
cwtl
in
aaa
jmp
pop
dec
cs
aaa
pop
adc
add
mov
sub
jge
mov
jmp
mov
xlat
adc
inc
and
xor
xchg
pusha
cli
mull
xor
sub
das
jl
fwait
mov
sub
sbb
in
mov
sbb
add
popf
sub
pop
std
adc
sbb
popf
movsl
mov
scas
pop
fnsave
dec
repnz
dec
sahf
push
mov
dec
cmp
pop
rcl
out
adc
sbb
in
add
aad
push
int
mov
pop
xor
add
adc
inc
into
cmp
fidivl
push
and
mov
imul
inc
dec
je
enter
sbb
hlt
add
sbb
bswap
push
jle
cltd
push
mov
adc
cmpsb
sbb
jl
push
adc
pop
mov
pxor
dec
loope
ss
mov
sbb
jne
mov
cmp
xorb
push
or
call
mov
sub
mov
int3
or
pop
movsl
xor
and
mov
adc
arpl
mov
mov
fsubrl
mov
cmp
jecxz
lds
mov
leave
inc
repz
iret
daa
or
cmpsb
dec
xchg
stos
jb
jmp
adc
loope
lock
mov
es
mov
push
jnp
into
xchg
pop
scas
and
fnstcw
pop
inc
pop
cmc
inc
popf
jo
push
leave
xchg
aas
cli
xchg
cmp
movsl
jg
fists
sub
dec
fsubs
clc
push
call
insl
inc
cmovp
and
dec
lret
cli
movsl
in
mov
xchg
imul
xor
mov
leave
lock
aad
outsl
xchg
xchg
mov
jg
add
fistpl
cmp
pop
clc
lods
mov
xchg
push
dec
rcl
push
mov
fsubrp
mov
inc
adc
fsqrt
mov
movsl
adc
cmp
scas
jl
int
or
mov
xor
push
pop
popa
mov
push
lahf
dec
mov
mov
imul
cmp
adc
stos
or
push
movsb
sbb
jnp
lcall
hlt
or
ret
sub
and
xor
rcrb
stos
mov
bound
aam
mov
sub
inc
jge
add
into
lea
sbbb
sub
or
xchg
aaa
adc
push
xor
cmp
nop
xchg
mov
jl
mul
push
lcall
adc
incb
inc
aas
xchg
add
jge
push
jne
mov
mov
popf
outsl
lret
and
adc
sbb
mov
adcl
inc
sub
aad
lods
dec
pusha
inc
mov
iret
lods
repz
clc
jle
pop
fnstsw
xchg
sbb
lods
dec
in
sbb
mov
or
mov
sarw
idivb
in
cmc
jp
adc
lea
out
inc
ret
jg
or
xchg
shl
pusha
lret
insl
inc
aaa
mov
callw
xchg
pop
add
jnp
pop
lahf
jecxz
scas
fildl
inc
imul
fwait
rcrb
shrb
adc
and
ja
out
pop
cltd
dec
lds
mov
ret
mov
movsl
cmp
inc
inc
push
push
xor
aam
mov
push
fbld
dec
lock
repnz
les
repz
rcll
dec
cmp
inc
outsl
pushf
std
adc
aaa
sbb
jns
xchg
mov
jno
pop
out
inc
rorl
or
cli
test
xchg
in
pop
loopne
inc
mov
or
or
mov
js
mov
movsb
popf
lock
outsb
pop
cld
or
pop
ss
or
cmp
loopne
push
fildll
mov
jno
sub
stos
pushl
shr
mul
scas
jle,pt
or
clc
mov
dec
aaa
mov
ds
mov
clc
rcrl
leave
fbstp
sbb
xchg
xor
push
fimuls
mov
cli
mov
lods
or
push
insb
inc
cmp
mov
pop
mov
scas
push
cli
cwtl
add
fdivrl
loope
and
push
stos
test
jbe
dec
adc
into
in
and
iret
inc
fs
or
addl
jp
push
out
push
orl
xchg
iret
jno
jnp
sti
test
pop
or
adc
mov
xor
push
pop
mov
out
popa
adc
push
in
ss
fiaddl
push
rorb
jmp
mov
arpl
aas
and
xor
mov
sub
xlat
inc
daa
add
xchg
mov
gs
mov
cld
adc
fisubl
cmp
jbe
cmp
out
bswap
inc
insb
fadds
mov
push
dec
xchg
pop
adcl
dec
stos
adc
ljmp
cs
lcall
mov
sub
dec
addr16
inc
xchg
out
out
cltd
int
inc
pop
into
mov
xor
inc
test
push
repnz
subl
adc
jp
cmp
pop
add
ror
add
scas
adc
push
mov
std
xor
sahf
mov
aaa
mov
push
mov
in
sub
push
fistpll
sbb
push
or
lcall
jge
dec
jne
sbb
push
inc
inc
jg
ja
aas
dec
pop
ja
mov
sub
mov
cwtl
aad
mov
jmp
push
inc
push
andl
aam
pushf
mov
inc
and
cli
or
jae
mov
sub
in
xchg
pushf
aaa
lods
mov
cmp
mov
sti
fimull
int3
jnp
mov
lods
xor
imul
divl
adc
daa
in
sub
movsl
addr16
pop
out
pusha
pop
mov
and
mov
xchg
fcos
outsl
negb
mov
lds
stos
rorl
outsb
mov
call
popa
jl
cmp
mov
add
pop
inc
or
data16
mov
mov
pop
xor
icebp
adc
out
and
ja
test
cld
xchg
jne
out
xorl
in
adc
pusha
fidivrs
mov
sbb
mov
push
xchg
sbb
sbb
test
xor
inc
sub
jo
add
enter
pop
insl
pushf
add
iret
xorl
xor
ja
xchg
je
in
test
mov
cmp
lcall
push
xor
cmp
insl
mov
mov
lahf
jbe
adcl
mov
pop
cmc
repz
mov
in
sub
sub
lods
popf
push
sbb
orl
push
sti
cld
xor
sbb
and
xor
jnp
in
inc
xchg
aad
push
daa
repnz
fs
sub
mov
dec
push
aam
fnstsw
mov
pop
hlt
jne
mov
inc
loopne
sbb
std
das
add
jne
jecxz
mov
insb
jne
add
and
test
ret
cmp
das
out
xchg
mov
adc
scas
pusha
adc
mov
cmp
mov
mov
sub
xor
out
into
mov
mov
push
fistps
adc
lea
dec
mov
ss
adc
sbb
mov
lods
mov
lock
jecxz
cmpl
lahf
xor
jae
pop
push
movsl
add
add
fcmovnbe
push
cmp
outsb
sbb
popf
add
jmp
aam
enter
out
jb
inc
xchg
sub
mov
mov
inc
cs
aaa
mov
cmp
lock
cltd
stos
pop
adc
cmp
add
xchg
icebp
dec
dec
add
adc
addb
dec
cmp
cwtl
bound
or
push
cmp
xchg
jmp
push
in
add
pusha
in
push
int3
les
scas
pop
xor
add
xor
insl
xchg
push
test
push
xchg
popa
imul
data16
leave
push
mov
iret
sub
pop
or
fstps
aas
subb
inc
sbb
xor
scas
mov
les
out
sub
roll
jg
outsl
test
in
push
movsl
popf
jmp
push
lret
iret
popf
out
lock
and
je
lcall
sub
push
sbb
cs
lock
and
ret
mov
xor
lret
jg
cmp
fists
inc
es
sub
push
jl
pop
je
cld
insb
sbb
dec
adc
scas
push
mov
icebp
les
pop
rorb
fcomps
clc
lret
jle
jo
mov
sbb
outsl
sbb
mov
jmp
das
or
and
or
push
xchg
sarl
stos
pop
mov
mov
popa
fsubrp
inc
sbb
push
add
icebp
outsb
mov
mov
xchg
enter
and
pop
inc
or
jae
cmp
ret
fldt
in
lds
std
mov
mov
cld
pushf
scas
xchg
imul
js
and
cmp
or
add
fwait
daa
fs
xchg
pushw
adc
jg
mov
push
out
push
pop
je
jae
pop
mov
aam
sub
cmp
mov
adc
jp
std
pop
je
pop
mov
sbb
scas
fisttpll
dec
or
sub
xchg
add
pushf
mov
xor
cmpsl
xchg
sub
mov
js
nop
lcall
loopne
add
xchg
insb
fucom
test
push
cmp
mov
js
ss
add
fwait
pop
push
push
adc
and
xor
or
dec
in
push
dec
data16
aas
sti
pop
lret
cmp
mov
decb
fs
jg
repz
sub
sbb
sub
scas
rcrb
ret
out
and
mov
push
add
outsl
stos
ds
sub
sub
mov
mov
xchg
mov
movsb
addr16
dec
inc
std
xor
lret
scas
xchg
leave
cmp
rclb
scas
jge
jg
or
leave
sub
inc
imul
mov
cwtl
das
xor
fidivrs
fs
ds
flds
dec
pop
dec
aad
sarl
xor
jno
roll
jg
dec
scas
sahf
sbb
adc
xchg
out
fwait
pop
rol
or
call
das
hlt
ss
fidivrs
les
pop
dec
inc
dec
jb
jp
xchg
mov
push
iret
aaa
aas
cmpsb
call
mov
cmpl
mulb
xchg
stos
leave
call
fisttps
xchg
inc
lock
mov
inc
leave
lods
jmp
or
iret
jg
cmp
cmp
sub
push
cs
aad
fcompl
stc
mov
call
roll
je
int
arpl
inc
sti
rolb
cmp
jns
lcall
xor
shlb
xor
out
insl
mov
out
jo
shrl
add
ret
aad
sbb
hlt
pushf
cmpb
daa
movsb
cli
mov
xchg
pop
call
jmp
js
leave
mov
push
lds
jle
and
ds
push
xorl
scas
adc
iret
inc
cmp
inc
stc
loopne
sbb
pop
mov
or
inc
repnz
cmpsb
inc
outsb
jecxz
inc
stos
fstp
mov
stos
movsb
bound
xchg
cltd
mov
xchg
outsb
xchg
jmp
jp
adc
mov
or
or
mov
in
cltd
cmp
adcl
inc
push
pop
andl
xchg
adc
adc
fcomip
jp
xchg
int3
dec
sub
sbb
sub
leave
lcall
fisubs
icebp
nop
dec
call
daa
cmpsl
btr
or
imul
ret
jp
push
xor
ljmp
jb
jge
fs
push
sbbl
inc
ret
out
mov
push
sahf
mov
sub
out
out
fdivp
std
divb
inc
and
push
hlt
stc
loope
iret
cmp
dec
dec
mov
lock
push
xchg
xor
add
iret
jno
mov
pop
jmp
dec
jo
push
rorl
sub
fisttps
or
out
xchg
sub
insl
ret
leave
repz
push
xlat
clc
ret
scas
add
mov
dec
rorl
cwtl
test
xchg
adc
cmpsb
and
lea
lds
into
ja
divb
test
aam
rorb
int
dec
mov
cmp
int3
mov
enter
fistpll
ret
in
pop
orl
out
push
dec
ss
arpl
xchg
sbb
js
adc
xor
mov
xor
cwtl
mov
sbb
test
mov
out
lret
mov
fimuls
enter
mov
jecxz
and
jge
ret
inc
inc
int3
and
addr16
or
or
sbb
cmp
mov
pop
subb
and
cmpsl
in
mov
pop
pop
sbb
dec
push
imul
jb
lods
push
jno
mov
sbb
scas
jae
dec
xchg
mov
sbb
aaa
xor
jg
push
data16
xchg
mov
xor
adc
hlt
imul
jnp
jo
fmull
aad
mov
mov
rol
mov
add
mov
dec
jge
cmp
mov
adc
movsb
and
adc
inc
sub
sub
sar
sub
xchg
sub
mov
jno
xchg
xchg
cld
out
or
sbb
sub
xor
test
sahf
lret
adc
das
in
xchg
out
xchg
test
xor
mov
adc
es
push
xor
jae
cmp
cmp
jmp
fcmovbe
fnstsw
or
outsb
mov
inc
pop
pop
adc
and
pop
minps
call
js
nop
push
adc
mov
lcall
iret
mov
ja
adc
lods
aas
xchg
ss
adc
jne
push
ficoml
div
push
in
jecxz
inc
jns,pn
outsb
sysexit
xor
mov
sbb
pop
mov
jmp
dec
or
inc
or
inc
push
in
inc
shll
mov
sub
push
cmp
fsubs
pop
and
sahf
jl
pop
mov
lds
cmc
push
cmp
fistpl
pop
pop
outsl
inc
scas
jns
fistps
mov
imul
popa
loopne
stos
stos
lahf
add
jl
jb
test
mov
adc
mov
jne
sti
and
add
add
add
and
scas
je
xchg
imul
mov
adc
jg
je
loope
gs
scas
pop
lcall
pop
clc
imul
xor
mov
push
xor
shr
movsl
xchg
inc
and
test
imul
mov
mov
jp
bound
mov
xor
and
aaa
dec
pop
ret
adc
sbb
xor
bnd
shll
int
loop
mov
and
inc
or
loop
push
xor
dec
cmc
shrb
inc
jecxz
mov
insl
outsl
add
mov
test
mov
lods
les
dec
adc
inc
adc
push
bound
jne
dec
adc
add
jp
mov
out
cmp
sar
repz
dec
mov
add
adc
orl
imul
das
xchg
xchg
cmp
xchg
or
pop
xor
repz
mov
mov
shll
js
pop
stos
mov
fidivrl
fs
popf
stc
cmp
adc
push
bound
jae
lahf
add
aas
mov
sbb
cmp
dec
loop
aad
arpl
push
jmp
in
aas
in
mov
sub
rolb
fsub
inc
adc
mov
add
mov
test
xor
sub
cmp
xchg
pop
imul
xchg
inc
xor
mov
fwait
call
cmp
sub
xor
in
test
jno,pn
mov
push
lret
out
mov
rclb
pop
pop
aas
and
aad
dec
aas
data16
leave
ficoms
into
adc
push
jbe
aam
in
fidivl
lods
add
repz
mov
jnp
cwtl
int3
jg
mov
push
dec
pop
mov
push
lods
mov
aaa
add
aam
nop
sbb
push
outsb
or
cmp
xchg
xchg
mov
cli
bound
ljmp
stos
out
lahf
mov
shll
push
push
lret
pop
not
jp
xchg
sbb
pop
out
adc
pop
outsb
addr16
mov
xchg
mov
test
das
sahf
cltd
adc
inc
and
dec
insl
stos
call
ljmp
fcoml
into
mov
cmpsl
push
lahf
sub
cs
stos
stos
pop
jnp
mov
xor
js
push
jp
addr16
fwait
mov
in
adc
lods
sub
sbb
adc
push
iret
test
pop
push
xchg
cld
int
xor
test
pop
or
ret
sub
add
fwait
test
frstor
jae
in
mov
inc
insl
push
inc
ja
mov
mov
jae
xchg
gs
mov
push
and
add
xor
push
fnstcw
test
xlat
dec
push
out
addb
idivb
mov
imul
rorb
sti
mov
cmp
push
pop
lea
jecxz
test
jg
sbb
push
mov
insb
mov
not
pop
fidivrs
pop
sub
pop
lods
cltd
scas
sbb
je
adc
movsl
inc
js
mov
sti
test
cmpsb
outsl
inc
popf
stc
mov
pushf
lods
out
ret
popf
lret
cmp
inc
ljmp
xchg
mov
push
dec
pop
fs
clc
fdivl
aas
push
in
pop
mov
inc
push
test
testl
mov
fnstenv
call
cmp
mov
mov
xorb
push
adc
mov
lahf
mov
nop
cwtl
xchg
std
loopne
int3
in
pop
pop
mov
push
xor
testb
xchg
add
ret
js
add
mov
enter
fwait
ja
sub
insb
sub
out
in
lahf
in
sarl
sbb
pop
adc
orb
and
push
movsl
mov
add
sbbb
mov
push
icebp
into
pop
push
es
pushf
popf
xchg
xchg
cmp
call
cmc
test
loopne
mov
adc
outsb
lcall
jno
and
fcomp
pop
loop
lods
mov
testl
lods
test
fwait
adcb
lea
sbb
arpl
fstpl
mov
push
xor
pop
iret
ds
hlt
aam
xor
stos
lea
inc
xor
adc
pusha
push
push
iret
jb
or
or
push
aas
aaa
orb
sub
mov
nopl
rcrb
mov
fstl
adc
add
jb
and
or
sbb
stos
inc
sbb
lahf
stos
xor
pop
fwait
mov
addr16
xchg
sub
xchg
scas
insb
ret
ror
inc
in
xchg
js
aas
inc
push
shlb
fdivrl
cmp
lods
xchg
mov
jno
jne
or
dec
jnp
dec
leave
hlt
add
push
pusha
insl
xchg
pop
fwait
js
fidivrl
mov
je
adc
push
adcl
mov
mov
pop
mov
dec
add
push
fnsave
loopne
jle
jo
jecxz
cmp
je
lret
mov
aas
cmpsl
and
loopne
jmp
xor
dec
dec
call
mov
mov
push
jno
or
mov
fadds
lret
jmp
dec
cmp
roll
or
fs
pushf
jle
xchg
jp
mov
xchg
das
adc
push
dec
leave
cmpsb
adc
mov
rol
and
push
push
fwait
shlb
xchg
dec
movsl
mov
add
cs
mov
lcall
mov
test
and
lret
jmp
push
mov
adc
daa
in
mov
adc
lcall
lea
outsb
mov
mov
lret
jno
mov
jne
jns
mov
ret
dec
scas
push
fwait
sbb
popf
and
lahf
jbe
mov
sub
fsubrl
aas
sub
pusha
popf
adc
xchg
push
mov
push
mov
pop
and
fimull
aaa
lahf
insl
mov
inc
mov
or
lods
cmpb
les
ds
imul
and
inc
aam
test
push
xor
pusha
rorb
shll
push
mov
adc
push
mov
push
push
pop
lahf
cs
icebp
push
out
inc
fwait
addl
std
push
test
test
fs
les
ret
adc
mov
mov
ret
xchg
xlat
push
data16
push
or
fsubs
mov
rol
hlt
test
or
lea
test
xor
pusha
sub
insl
jbe
fsubs
mov
lock
and
shll
sub
icebp
mov
xchg
fistpll
lahf
xchg
push
popf
mov
jle
mov
movsl
adc
sub
mov
xchg
sub
cmp
pop
popf
mov
pop
pop
out
jp
shr
cmp
mov
pop
aam
or
xchg
outsb
call
mov
hlt
pop
sahf
pop
pop
jne
inc
daa
inc
mov
adc
dec
pop
sub
sbb
fwait
cmc
rcrl
jne
repz
add
in
shld
jo
cwtl
jno
push
or
mov
push
test
ds
cmpsb
mov
mov
flds
push
mov
push
lahf
push
push
inc
pop
jno
mov
fidivrl
mov
push
jl
ss
fmull
sub
lea
rol
mov
fisttpl
mov
and
sarb
std
add
pop
pop
das
sbb
push
adc
mov
jne
cmp
es
mov
repz
into
inc
mov
pushf
push
push
inc
mov
adc
sub
mov
sub
cmp
push
pop
mov
mov
ja
mov
adc
sahf
add
and
xor
push
pop
jl
adc
mov
inc
mov
sbb
pop
lret
mov
clc
outsl
imul
fiadds
aad
sub
cmp
jae
daa
popf
loope
sbb
xchg
and
cmpsl
push
and
mov
inc
mov
repz
mov
repz
mull
sti
add
loop
scas
push
adc
mov
push
jmp
jnp
mov
addr16
arpl
jl
hlt
aas
or
mov
pusha
in
add
mov
lret
dec
mov
dec
push
std
dec
mov
shll
and
fsubl
jb
jne
xchg
mov
inc
movsl
ljmp
mov
push
pop
fcomps
fcompl
xchg
cmpl
push
aaa
add
cmp
scas
xchg
sub
mov
out
jle
jne
and
ffree
sub
and
fnstsw
test
test
mov
arpl
jne
lea
jns
test
fdivr
jg
or
inc
aad
and
xchg
movsb
pop
cwtl
push
fwait
dec
jle
and
pop
mov
sbb
cmp
repnz
outsb
xor
lcall
push
mov
in
mov
add
inc
imul
dec
jecxz
pop
adc
cwtl
add
daa
movsl
fiadds
mov
pop
bound
push
inc
scas
lods
push
or
mov
xor
mov
sub
cmp
sarl
in
aas
lahf
sbb
mov
jge
call
test
aad
aas
fstpt
push
loop
pusha
push
jle
mov
mov
sub
out
hlt
push
mov
mov
bound
fdivs
xchg
ret
or
imul
test
mov
dec
or
cld
push
add
pand
das
or
or
mov
jecxz
mov
das
les
test
push
orb
icebp
test
scas
shlb
loope,pt
pop
push
aad
lret
jecxz
add
pop
add
xchg
jmp
bound
or
dec
inc
lcall
lret
jbe
xlat
cmc
leave
adcl
pop
ja
jle
test
pop
fimull
inc
sbbl
sub
cmc
jge
xor
cltd
adc
dec
lret
push
jo
fisubl
mov
cs
add
inc
cmp
jmp
mov
jnp
push
test
arpl
xor
addr16
or
cli
leavew
das
xchg
inc
xchg
and
jle
aaa
cmp
mov
lcall
inc
dec
enter
mov
sbb
adcb
ljmp
mov
cmp
in
outsl
fidivrl
jae
fisubrs
out
adc
insl
out
xchg
adc
jb
inc
test
cmp
sub
mov
and
dec
insb
out
out
loope
pop
cmp
mov
repz
cli
xchg
icebp
cs
stc
aam
outsb
add
int
call
iret
mov
out
or
adc
adc
sbb
mov
push
jno
or
cmp
and
xchg
add
clc
clc
lock
cmp
pop
and
pop
aam
outsb
jecxz
lahf
xor
ss
scas
ud0
pop
imul
nop
pop
loop
daa
sbb
jne
push
insb
call
sbb
cmp
daa
sbb
inc
rcl
or
mov
push
add
mov
aaa
lea
jg
fldt
testb
rcll
dec
jg
arpl
call
push
repz
xchg
mov
imul
fdivr
std
lock
mov
das
cmp
or
xchg
lret
and
repnz
or
jbe
jo
jns
fnstsw
inc
cmp
inc
mov
inc
and
lods
sbb
jb
mov
sahf
lock
ficoml
xor
push
out
popw
repnz
xchg
movsl
std
clc
mov
push
xchg
aaa
lcall
pop
adc
mov
scas
std
mov
cmc
pop
es
mov
rcrb
xor
orl
jge
in
mov
lods
scas
ret
push
fisttps
xchg
insb
sub
insb
lret
in
and
and
int3
sbb
loop
and
imul
rcl
adc
xchg
std
dec
jno
ljmp
enter
sub
orl
popa
jp
mov
push
sbbb
fldl
mov
add
jbe
out
push
push
in
lret
mov
hlt
mov
inc
xor
das
jg
lds
xor
jmp
lret
xor
add
sub
xor
test
pop
ret
or
dec
xor
je
pop
jle
xchg
mov
or
sbb
mov
ja
in
mov
add
cmc
or
push
jo
icebp
or
add
add
dec
leave
cmp
xchg
xchg
pop
les
sbb
jg
xchg
inc
push
jnp
xor
mov
xor
pop
movsb
inc
mov
testl
xor
cmp
add
cmp
inc
mov
imul
jnp
jg
cmpsl
ja
adc
push
je
inc
loope
std
cmp
pushf
cmpsl
test
cmp
in
aam
in
popa
fs
mov
dec
fnstenv
out
inc
xchg
cmp
mov
mov
lret
gs
mov
xor
jae
and
pop
cmp
or
push
ljmp
aad
sbb
and
mov
and
mov
pop
pushf
inc
push
out
xchg
push
lods
pop
add
imul
out
lcall
add
or
mov
cli
test
sbbb
mov
push
pop
fimull
cmp
leave
leave
xor
movsb
mov
xchg
ret
and
dec
dec
mov
cli
cmc
lea
pop
shlb
out
xchg
xchg
and
cmp
sub
test
js
mov
lea
mov
ljmp
jo
sti
rclb
inc
mov
int3
pop
fs
mov
push
dec
fs
xchg
push
push
push
add
push
dec
cwtl
repz
mov
pop
rorb
xor
xchg
ja
adc
cs
in
nop
pusha
fincstp
push
push
hlt
pushf
fwait
inc
ja
xchg
push
stos
cmp
fwait
xchg
push
inc
inc
push
xor
sub
fstpt
aaa
jp
or
adc
mov
and
mov
and
push
jl
jp
xor
pushf
xorl
and
sub
ja
adc
adcb
das
inc
jmp
push
cmp
int3
jg
rcr
pusha
fs
leave
insb
popa
into
mov
hlt
jbe
std
lea
push
push
or
ljmp
sti
ret
push
xor
mov
or
cmpsb
sbb
mov
test
xchg
pushl
pop
pop
xchg
mov
xchg
or
adc
adc
fsts
or
jbe
mov
adc
push
mov
cmp
mov
sbb
jo
cmp
das
fs
push
pop
mov
inc
pushf
icebp
or
rcll
inc
dec
insb
and
mov
incl
arpl
sbb
mov
add
mov
or
aad
dec
pop
outsl
jp
mov
loopne
jl
les
stos
dec
ja
jecxz
bound
jae
pop
add
ficomps
notl
popa
cs
sbb
in
push
test
sub
sub
inc
aaa
cmpsb
adc
jle
mov
std
lods
out
xchg
aad
test
fsubs
stos
mov
adc
fistps
sbb
mov
cmp
lea
xor
pushf
lock
xor
lret
fcompl
dec
out
mov
sahf
mov
scas
ret
orb
iret
push
adc
inc
nop
loope
out
mov
popf
loope
ds
inc
inc
pop
daa
ficompl
aas
or
cmp
int
arpl
xor
pop
pop
and
test
cmp
lahf
movsb
or
jmp
push
ficoml
aam
sbb
nop
out
xor
add
dec
push
pop
aas
popf
ljmp
push
testb
dec
daa
xor
cmp
jg
adc
add
fwait
pop
adc
mov
mov
enter
scas
jo
repnz
cmp
push
movsl
lret
xchg
add
xchg
add
imul
shlb
into
xor
testb
pop
les
rorb
je
rolb
neg
xor
jg
sahf
dec
pop
xchg
push
rolb
xchg
mov
xor
insl
push
out
aaa
sub
stc
mov
add
aas
testl
cmp
in
int3
gs
fwait
inc
xchg
jb
lods
mov
jl
push
mov
insb
or
adc
cmpb
mov
repz
in
xorl
scas
stos
ficompl
jg
jp
adc
mov
adc
bt
cld
xchg
scas
adc
inc
outsl
enter
fimull
loope
pop
pop
inc
cmp
ficompl
jl
dec
test
sub
sub
cmpsl
xchg
movsb
enter
mov
mov
mov
shlb
cwtl
fidivrl
xor
xchg
jno
mov
jne
outsl
jo
push
and
mov
subl
call
aam
xchg
lcall
pop
mov
iret
fisttpll
inc
mov
adc
mov
mov
cmp
mov
jns
dec
pop
lods
lods
fistl
leave
jle
arpl
jb
test
push
jecxz
inc
mov
pop
fcmovu
out
xchg
lcall
and
sub
dec
hlt
iret
mov
and
lret
inc
jbe
push
loop
adc
pop
test
jge
sub
jecxz
and
sub
notl
je
movsb
pop
mov
dec
ja
ds
std
es
and
sbbl
cmp
and
test
ds
fdivl
scas
mov
jno
xchg
scas
dec
rol
cmp
xchg
add
mov
bound
pop
mov
xor
push
jae
dec
xchg
into
mov
xlat
out
add
testl
adc
insb
icebp
dec
pushf
cmp
xor
xchg
loopne
cmpb
sahf
adc
cld
and
lods
sub
jno
imul
jmp
mov
dec
inc
lock
mov
sub
inc
dec
inc
or
dec
mov
pop
add
in
loopne
je
or
pop
xor
jle
add
or
push
jp
cmc
xchg
push
cmp
push
and
jb
mov
out
mov
popa
jecxz
or
es
lds
nop
fcmovnbe
rcrb
loope
cmpsl
dec
push
scas
or
shll
inc
sbb
dec
mov
xchg
add
mov
mov
or
clc
test
out
lds
insb
cltd
cmp
in
jge
sub
dec
add
jne
mov
pusha
add
addr16
in
xchg
mov
int
jae
mov
test
xchg
inc
inc
sub
xlat
jbe
je
insb
mov
pop
int
xchg
add
sarb
rcll
pop
lods
jmp
lock
xor
sarl
push
mov
adc
ret
inc
push
dec
add
push
jp
cmc
mov
xchg
jl
in
xchg
mov
decl
cwtl
movsl
dec
inc
fiaddl
lret
push
pop
inc
test
aad
inc
out
mov
imul
pop
aam
imul
dec
xor
mov
dec
jno
insl
push
insb
sbb
dec
add
paddb
xchg
xchg
push
inc
push
add
jge
and
test
inc
add
clc
cmc
std
loope
xor
test
addr16
mov
cmpsl
repz
dec
ret
xchg
div
fbstp
xadd
cmp
mov
push
dec
push
fdivp
rolb
cmp
push
push
cmovp
jbe
dec
inc
cmpsb
les
mov
add
and
clc
cmc
add
lods
mov
lods
lds
xchg
adc
cmp
and
pusha
fs
jae
xchg
mov
sbb
arpl
add
jp
push
mov
mov
sub
mov
insl
ret
ss
mov
adc
xchg
pop
xor
cmp
jecxz
lds
cmc
ror
or
cmpsl
shl
int3
push
hlt
mov
xchg
pop
xchg
fs
push
leave
push
sub
sti
inc
pop
int
cli
mov
leave
push
inc
shlb
ficoml
mov
mov
push
lret
mov
clc
sahf
pop
add
rcl
pop
into
xor
or
lods
mov
stos
mov
push
test
push
jns
xor
xchg
mov
mov
push
mov
sbb
mov
jmp
cltd
pop
sbb
push
arpl
lret
jb
movsl
xchg
iret
cli
xor
cmp
or
adc
push
fdivrp
sbb
je
fistpll
and
xor
mov
rorl
or
aam
add
mov
add
dec
mov
scas
dec
aad
xchg
arpl
sbb
xorb
push
mov
stc
jae
adc
dec
pushl
inc
lret
js
mov
sarb
fidivrs
lahf
xor
ss
lea
cmpl
lahf
inc
inc
jl
or
testl
lret
cli
vandps
lock
or
or
mov
inc
int
push
ret
stos
ds
out
sub
repz
es
mov
mov
pop
out
push
mov
nop
add
fisttpll
add
leave
cmc
pop
inc
cwtl
cmc
loope
sub
push
cvtps2pi
gs
mov
decb
js
sub
mov
cmpb
xor
jecxz
pop
fs
push
in
adc
mov
sbbb
test
push
fcmovnb
sub
das
iret
jp
jne
cmp
mov
push
fmuls
xchg
out
inc
pop
pop
jmp
sbb
pop
or
loope
std
inc
dec
lods
scas
mov
or
mov
hlt
and
push
push
push
loopne
mov
mov
xor
rclb
test
dec
jmp
mov
inc
mov
xor
loope
ljmp
dec
pop
inc
nop
or
stos
loopne
jo
das
movups
cmp
je
cli
pop
loopne
dec
push
add
lock
inc
lds
in
xchg
test
data16
test
pop
fwait
or
rcr
mov
mov
inc
inc
gs
mov
pxor
into
sbb
fadds
incb
xor
push
and
daa
sbb
pop
ja
fnstsw
out
pushf
rorl
adcl
pop
or
aaa
jnp
bound
inc
hlt
or
repz
clc
subb
mov
mov
add
mov
jmp
clc
fwait
and
sub
mov
sub
push
arpl
rolb
inc
arpl
call
push
pop
popa
test
mov
add
cmp
repz
stos
push
xor
xor
sbb
mov
pop
paddusw
test
lahf
sub
push
xchg
mov
mov
add
call
push
lea
inc
out
jle
dec
sbb
push
popa
xchg
test
mov
dec
jbe
inc
push
aad
inc
inc
data16
dec
into
mov
cmp
repnz
xchg
add
xchg
data16
fadds
enter
pop
fldl
mov
dec
ljmp
fldl
push
popa
pop
int
fildl
pop
les
pop
dec
mov
ret
cmpsl
cltd
and
jno
mov
movsl
and
pop
nop
ret
or
jecxz
cmp
les
adc
out
jge
cld
fists
push
fidivrl
orl
fstpt
dec
mov
mov
dec
sub
xor
mov
and
leave
jno
dec
or
xorl
pop
mov
iret
inc
lods
mov
xor
xor
loope
jg
movsl
jb
sub
ljmp
rolb
mov
ss
or
xorb
das
mov
jnp
loope
mov
push
jl
adc
popf
sbb
sub
xchg
sub
lret
shll
subb
mov
lret
in
fwait
aaa
imull
stc
or
divb
arpl
or
dec
les
push
cld
or
into
mov
inc
lods
loop
js
push
call
testl
adc
adc
or
xchg
sbb
mov
or
icebp
sub
pop
pop
xor
insb
cli
inc
ss
fcomip
out
inc
sbb
mov
jmp
xchg
and
xchg
sub
mull
and
dec
ror
mov
sti
jb
addr16
stos
or
xor
inc
adc
mov
cmc
lahf
inc
int3
mov
adc
dec
xor
push
or
dec
mov
jp
call
sbb
shrl
das
mov
push
mov
cld
xor
and
fwait
nop
pop
adc
ja
add
in
loopne
cmp
mov
sbb
into
stc
stc
movsl
dec
cmp
aad
bound
cli
cmp
mov
enter
mov
mov
inc
pop
dec
or
mov
aad
add
bound
lock
lret
inc
mov
std
sar
mov
dec
loop
push
sbb
sub
lods
stc
stos
dec
push
add
cmp
aad
cmp
add
add
mov
pop
cmp
and
jge
mov
mov
jl
push
mov
loope
xor
hlt
call
inc
pop
roll
pop
and
sub
xchg
in
and
decl
inc
push
push
cwtl
loopne
push
enter
jge
pop
dec
adc
jnp
je
cmpsb
adc
push
pop
push
cli
sarl
test
and
movsb
mov
inc
jbe
sbb
cli
cmpsb
stc
por
out
inc
aad
ljmp
int3
jge
sbb
pop
hlt
test
aad
outsl
push
nop
pop
outsl
jecxz
push
test
cmp
add
jne
inc
inc
jo
mov
sbb
cli
les
outsb
add
push
mov
xchg
adc
pop
push
jp
popa
imul
sbbl
xchg
mov
lret
ljmp
inc
lret
mov
mov
mov
sbb
js
popa
scas
xor
xlat
add
jmp
or
adcb
es
and
fwait
xor
mov
adc
mov
mov
cmp
push
mov
stos
aad
jno
push
dec
cmc
or
jne
jge
fs
pop
bound
fwait
add
add
and
adc
ja
mov
inc
sub
scas
inc
xchg
cmp
cmp
daa
daa
push
mov
pop
mov
aam
jecxz
lods
call
sub
jecxz
xlat
gs
adcl
test
out
jle
decl
xchg
add
mov
ret
data16
inc
lds
pop
loope
sarl
clc
or
repnz
sub
movsb
fs
aad
inc
mov
push
lods
loopne
fldlg2
stc
pop
jmp
and
pop
jae
pop
lock
stos
push
add
icebp
pop
inc
cmp
ret
pop
dec
shr
fidivrl
push
jge
and
sub
jp
xor
mov
outsl
out
dec
mov
mov
lahf
imul
icebp
sub
aad
cmp
ds
lcall
bswap
xorb
cli
jl
jl
repz
fdivl
cmp
mov
popl
dec
cli
adc
scas
ljmp
sbb
orl
out
mov
lea
aad
mov
andb
dec
mov
jb
call
fs
adc
in
stc
push
mov
xor
sub
jmp
sub
mov
mov
xor
in
imul
mov
adc
dec
cmpsl
push
fldenv
cmp
jp
sbb
in
int
js
push
jmp
mov
in
out
mov
inc
adc
fs
mov
mov
adc
push
jl
add
fnstcw
xchg
mov
mov
paddw
pop
cmp
mov
and
call
das
xchg
push
mov
and
mov
and
rolb
imul
movb
push
add
add
out
scas
xchg
movsb
outsl
sub
stos
test
fsubrl
int
stc
mov
aaa
outsb
or
inc
cltd
dec
push
mov
ds
fsubs
ss
subb
sbb
mov
rolb
push
push
cmp
mov
xchg
lret
or
add
inc
fdiv
imul
sbb
icebp
das
push
push
pop
bound
mov
rorb
stos
sub
popf
lods
mov
aaa
jne
imulb
pop
adc
and
cmpb
push
sbb
jae
xchg
inc
test
jl
jmp
insl
xor
pop
push
sbb
inc
inc
sbb
stos
into
cmpsl
jne
inc
pop
cmpsl
mov
test
std
or
enter
jbe
pop
movsl
mov
ret
fwait
idivl
pop
mov
nop
dec
and
jbe
mov
notl
fmul
mov
add
add
pop
popa
sbb
cmp
xlat
adc
lcall
mov
insl
pop
hlt
and
fnsave
in
and
outsl
hlt
shll
cmp
cmp
xchg
leave
imul
int
clc
mov
fstl
xlat
sub
shll
daa
mov
int
aas
mov
cs
in
mov
lods
mov
pop
loopne
lods
mov
addr16
mov
sub
jle
jb
shlb
or
xchg
jbe
jecxz
mov
jnp
add
jle
jo
jnp,pt
iret
cmpl
aas
pop
mov
roll
add
xchg
mov
roll
fistps
fstps
jbe
mov
repnz
hlt
cltd
stos
cmc
repnz
movsb
xchg
sahf
xchg
sub
ret
sub
mov
or
push
icebp
or
outsb
cmp
in
cmp
mov
jle
shrb
jle
mov
or
add
es
std
fisubrl
push
std
adc
mov
xlat
jmp
mov
test
aam
xchg
sahf
xor
mov
cmp
xlat
mov
xchg
xor
mov
dec
aam
movsl
popa
jae
popa
aad
fwait
stc
jecxz
and
jbe
sub
ljmp
scas
adc
add
lds
jp
lret
loope
dec
sbb
loop
subl
inc
call
mov
testl
jo
loopne
sbb
lea
mov
adc
cmpsl
and
jne
push
mov
std
sbb
mov
pusha
sub
cmpsb
push
or
pop
ds
jl
into
ror
fcomp
dec
stos
jmp
sbbl
pusha
fwait
xchg
sub
test
dec
mov
incb
mov
and
mov
stos
xchg
inc
fdivp
int3
push
fisttpll
int3
inc
sahf
mov
inc
lods
test
mov
faddl
sbb
push
scas
push
xchg
mov
jl
ds
sub
mov
jo
xlat
fwait
mov
sub
add
jle
testb
mov
xor
pop
push
jle
outsl
cwtl
adcb
ret
into
nop
xor
add
je
add
or
sbb
dec
jp
push
ljmp
fisttpl
or
cmpsb
jp
dec
and
inc
clc
jg
lods
mov
jp
mov
dec
ficomps
ljmp
sbb
movb
jo
xchg
push
dec
call
in
sub
jne
jns
add
pop
add
and
cmp
repnz
xlat
jmp
jge
jl
shrl
push
adc
push
scas
and
lds
out
jns
cltd
push
cs
aad
push
xchg
pop
and
sbb
mov
lret
push
outsl
pop
lret
and
pop
adcl
fldt
push
sbb
shlb
enter
add
jp
cltd
in
mov
scas
xorl
jg
dec
mov
sbbl
icebp
cltd
mov
sbb
and
jle
sub
sbb
cmp
popl
scas
lret
movsl
cmp
dec
pop
jl
sarl
cmc
cs
out
jecxz
popa
push
scas
inc
lods
stc
rcll
rcll
xchg
movsb
mov
pop
test
jae
adc
push
lods
popa
je
les
movsl
pop
mov
jmp
add
dec
push
jmp
ret
push
leave
pop
jno
int3
lcall
pushaw
sbb
lea
scas
sub
lahf
push
aam
inc
mov
push
xor
out
xchg
inc
xchg
in
mov
jno
es
call
push
jae
in
jge
sub
push
testl
decl
sub
mov
lock
sub
icebp
movzwl
push
push
mov
xchg
lods
out
mov
test
scas
and
bound
sub
jg
aam
in
adc
stos
fidivrl
arpl
push
loopne
std
jb
sbb
mov
js
sub
testb
and
lcall
in
pop
shrb
push
pop
movsb
pusha
or
adc
or
lcall
adc
out
sub
mov
cmp
jl
dec
add
cmp
popf
jge
std
mov
xlat
mov
cmova
mov
adc
push
xchg
in
js
jmp
movsb
in
lock
add
xor
clc
inc
pop
test
repnz
insb
mov
jo
inc
insl
lods
sub
push
insb
push
mov
aad
push
mov
pop
or
stc
inc
imul
pop
mov
cmp
jmp
in
fucom
out
les
pop
xchg
fildll
push
addl
inc
out
fwait
xlat
lea
pushf
repz
iret
mov
cltd
mov
js
stos
in
push
xchg
je
cmp
pop
dec
sahf
stos
je
push
push
insl
sub
sbb
push
fdivr
js
icebp
adc
sahf
and
push
dec
cli
or
xchg
mov
cmp
mov
mov
or
or
ds
and
cmp
lock
ffree
scas
xchg
scas
je
insb
inc
cmp
mov
cmpb
adc
add
push
fcompl
jge
into
lds
pushf
jbe
fst
inc
popf
fnsave
bsf
mull
clc
cmp
das
adc
hlt
xor
inc
pop
nop
cmp
ret
sahf
dec
lods
pop
pop
push
and
pop
or
add
fisubs
pop
sbb
or
sbb
popa
pusha
test
mov
jp
inc
cltd
outsl
cmp
push
mov
sar
mov
in
push
mov
pop
test
arpl
mov
ds
dec
dec
call
fstpl
cmp
or
pop
dec
add
dec
or
fnstenv
xorb
mov
repz
mov
inc
dec
das
and
js
inc
popa
push
fcomps
adcl
insl
lret
push
mov
and
and
repnz
or
xor
arpl
adc
dec
sbb
mov
jnp
cmp
adc
add
movsl
fisubs
mov
or
bound
and
test
adc
test
cwtl
arpl
std
xchg
or
dec
ljmp
xchg
and
int
int3
mov
mov
xchg
mov
ror
addl
jge
movsl
or
ds
cld
jecxz
sti
in
push
jne
repnz
and
testl
lret
repz
xchg
inc
loope
rcll
imul
jl
jno
orl
scas
lea
loope
int
clc
cmp
push
cmp
cs
fidivl
xlat
mov
push
pop
mov
add
pop
movsb
xor
jne
xchg
aas
sbb
adc
scas
sahf
and
scas
xchg
mov
leave
stos
mov
stos
std
call
mov
xchg
mov
cmp
xor
jae
mov
inc
lcall
repz
dec
andl
push
inc
jne
pop
movsb
xlat
std
mov
daa
sub
repz
loop
push
aam
stos
das
push
mov
cmp
mov
jle
leave
jae
jge
pop
insb
fimuls
jbe
scas
adc
or
xor
pop
stos
adc
mov
shl
hlt
in
fwait
xchg
jecxz
and
cmp
mov
aam
add
test
and
mov
fwait
mov
jnp
and
xchg
push
int
cmp
lcall
mov
push
jl
dec
pop
pop
mov
xlat
js
leave
mov
loop
cld
pop
repnz
add
movsl
mov
or
pop
pop
inc
jg
sub
inc
pop
out
leave
outsl
push
push
clc
mov
imul
call
or
stos
shll
roll
adcl
fdivp
mov
and
cld
push
dec
or
jge
fwait
int3
std
fisttpll
xlat
mov
push
leave
fildl
push
fimull
xor
mov
hlt
inc
xchg
jne
and
aaa
mov
xchg
push
xor
add
pop
dec
movsb
ja
mov
jp
outsl
ja
out
scas
pop
inc
rcrl
imul
lods
xchg
outsb
rorb
shll
pop
nopl
test
pop
loop
loope
pop
cmp
xchg
xchg
bound
nop
or
sarl
fistpl
imul
mov
or
mov
ret
popf
test
test
inc
pop
xchg
jne
or
pusha
aad
mov
pop
push
xchg
cmp
lea
or
xor
dec
pushl
into
jbe
or
fistpll
mov
js
loopne
cmc
daa
out
movl
aas
jecxz
sbb
out
rcrl
fdivp
sbb
out
add
idivb
aaa
jl
lret
mov
pusha
out
mov
pop
dec
clc
pop
jl
xchg
mov
fwait
xor
fcmovb
sub
aam
add
addl
ret
test
lds
pop
outsl
jne
stc
inc
addr16
adc
jnp
out
jg
xchg
ds
xchg
sub
cmp
xchg
xchg
inc
test
jg
aas
je
mov
lock
repz
hlt
push
xchg
adc
mov
sbb
es
lods
push
jne
adc
repz
leave
mov
lcall
lcall
fidivs
push
lea
fidivrs
jle
pop
repnz
inc
cmpb
je
insl
out
loopne
xchg
ret
in
call
xchg
jl
lea
data16
cli
xor
dec
jecxz
scas
inc
add
andl
in
ds
scas
mov
and
rcrl
mov
hlt
xor
inc
dec
cmp
fsubrl
jg
pop
add
and
loop
imul
sti
jmp
test
aaa
xchg
ret
imul
sbb
ret
enter
inc
add
sub
push
mov
fs
movsl
call
mov
jge
test
mov
leave
mov
test
mov
dec
dec
out
call
call
adc
out
pop
mull
add
jl
sub
jnp
cmpsb
int3
cltd
mov
pusha
and
movsl
into
stos
lock
loope
int
inc
sbb
test
inc
testl
aaa
adc
bnd
test
or
mov
loop
push
mov
push
or
dec
sti
inc
rorl
mov
inc
sub
jne
inc
mov
jmp
cmp
loop
test
push
pop
pop
inc
dec
scas
sub
add
cmp
xlat
mov
fbstp
xchg
inc
mov
pushf
std
add
inc
push
test
lcall
jbe
pop
jge
fwait
jmp
lret
and
cmc
sub
movsw
lock
test
adc
fs
fisubrl
cltd
negb
inc
xchg
orb
jnp
not
call
cmp
push
popa
push
dec
pusha
popf
mov
jo
add
pop
es
fsubr
in
xchg
and
and
lods
call
add
adc
aaa
scas
pop
fcoml
test
mov
loopne
sbb
ja
sbb
pusha
cmp
mov
jo
xchg
and
mov
sbb
rcrl
cld
call
mov
cmp
fcomps
pcmpgtd
adc
icebp
xchg
cmp
notb
out
stos
xor
xchg
rclb
cmc
imul
sbb
push
bound
xor
add
pop
and
xchg
sbb
or
icebp
dec
jbe
in
xchg
addl
iret
mov
stos
adc
push
lahf
push
jae
lods
and
jns
push
dec
pop
aas
cs
stos
jnp
jnp
sbb
xchg
ror
dec
push
push
adc
push
mov
jecxz
sahf
insl
test
inc
add
ss
or
mov
push
push
movsb
jb
mov
xor
cmp
int
ret
sbb
shll
aam
add
jo
inc
popa
jl
jmp
jnp
add
sub
arpl
push
adc
or
dec
cs
repnz
and
jae
popa
add
mov
popf
add
mov
jbe
aas
xchg
add
pop
push
out
les
mov
sub
pop
or
dec
mov
push
movsb
std
outsl
pop
nop
cmp
repz
loop
pusha
xchg
cmp
lret
or
jno
adc
ret
mov
mov
jnp
push
movsl
cmc
fld
push
add
xchg
jge
sub
cmp
decl
repz
jb
xchg
xchg
in
xchg
push
lods
push
in
shll
out
mov
mov
fst
mov
push
xchg
dec
push
pop
outsl
stos
shrb
cmc
movsl
mov
in
shl
fs
sbb
jle
and
addr16
rcll
xorb
mov
stos
xchg
fstl
addr16
lods
mov
in
xor
fwait
mov
adc
xor
and
lret
pop
ljmp
xorb
cmp
jne
scas
mov
adc
sbb
and
lds
pop
in
repnz
add
imull
lahf
mov
sbb
jnp
inc
lahf
scas
dec
xor
icebp
pop
aaa
lret
pusha
insb
js
ret
stos
adc
mov
fwait
int3
js
push
roll
pop
jno
and
mov
imul
je
aaa
aad
es
mov
sahf
mov
mov
or
sbb
mov
fsubrp
mov
icebp
inc
stos
aam
mov
xchg
lret
push
sbb
pop
bound
add
ret
mov
lods
mov
sub
insl
mov
data16
xchg
scas
jb
inc
or
pop
int3
xchg
sahf
mov
push
adc
dec
mov
addr16
jecxz
xor
xor
clc
and
pop
push
jg
sbb
int
lods
iret
adcb
mov
sub
or
mov
mov
mov
push
dec
divb
jmp
mov
xor
sahf
mov
inc
pushf
cmpsl
dec
rorl
testl
lods
lods
stos
add
pop
cmpsb
sub
sub
adc
test
out
lock
sbb
aas
cmp
outsb
bound
test
orl
adcb
out
cmc
int
xchg
push
mov
rclb
cltd
imul
pop
adc
push
enter
jp
push
scas
call
orb
dec
cmc
out
es
and
imulb
fisubs
fadds
test
jle
add
inc
out
add
jne
add
outsb
lret
insb
adc
loop
push
jo
mov
dec
mov
in
mov
divl
loope
scas
es
fisubrl
fwait
pop
rolb
jne
sbb
repnz
xor
pusha
cmp
in
push
out
add
clc
testb
xchg
test
fnstcw
test
and
cmp
push
xlat
test
movb
mov
xchg
or
int3
sarl
jnp
int3
lock
xchg
mov
push
push
shlb
test
int3
dec
stos
fwait
push
fistps
mov
xchg
ds
aaa
loop
xor
pmaxsw
dec
jo
arpl
dec
cmpl
sub
cltd
mov
fmull
daa
outsl
xchg
and
jbe
sahf
lock
adc
hlt
fcmovu
inc
arpl
jne
pop
adc
ja
mov
shll
or
hlt
pop
jg
or
jb
out
jmp
das
aaa
add
in
les
hlt
test
neg
popf
fs
push
push
out
movsl
and
pop
xor
movsl
or
imul
stc
cmp
push
mov
outsl
inc
and
xor
test
in
dec
mov
test
gs
arpl
pop
sbb
jno
inc
aas
add
mov
ret
dec
jnp
call
int
clc
inc
inc
cmpsb
in
fwait
cmp
xchg
dec
in
addr16
lods
fmul
mov
mov
inc
ret
fdivp
and
mov
outsb
mov
gs
mov
pop
std
frstor
pop
rcll
or
in
shll
into
psrad
pause
cmp
xor
out
or
enter
sti
fldenv
fsubp
and
mov
xor
cwtl
mov
pop
jb
adc
insl
push
mov
int3
je
and
sti
mov
out
cmc
inc
push
push
inc
aaa
add
data16
sub
leave
push
inc
data16
psllq
testb
out
or
inc
testl
adc
sbb
ja
and
mov
in
mov
cwtl
js
cmpsl
push
pop
out
inc
les
sub
mul
into
rolb
sbb
dec
sti
imull
push
lock
sub
cmp
cmp
test
push
pop
push
sub
cmp
shll
adc
cmp
lcall
sub
jmp
ss
mov
dec
rorb
icebp
adc
jo
pop
sti
fisubrl
or
push
adc
imul
fsubl
inc
shrb
jnp
xchg
sahf
scas
xchg
sub
std
mov
pop
add
sbb
loope
adc
ret
rolb
leave
in
or
dec
mov
sti
jmp
outsl
icebp
mov
sub
loopne
mov
inc
mov
push
mov
xchg
fwait
leave
lret
jbe
fldl
scas
mov
or
xor
popl
ss
repz
xchg
sti
inc
cmc
dec
mov
mov
int3
add
xor
mov
movsb
lret
fadd
pop
or
paddb
mov
outsb
in
push
mov
jns
cli
xchg
mov
xchg
sub
push
mov
je
test
js
adc
arpl
lcall
or
push
inc
test
cwtl
lret
in
adc
inc
adc
loope
mov
movl
shrl
call
lret
xchg
lcall
insl
or
xchg
or
xchg
xchg
adc
test
ljmp
mov
insl
dec
mov
mov
nop
cmp
sbb
loope
mov
mov
pop
cmp
and
dec
push
sbb
pop
addr16
icebp
lea
cs
test
sub
push
push
imul
jmp
lods
add
xor
dec
in
push
inc
or
arpl
js
cmp
jg
mov
mov
gs
ja
jno
push
es
mov
sub
mov
mov
push
or
mov
int
jp
insb
dec
add
out
or
mov
inc
cmp
xor
in
xchg
imul
les
mov
bound
sub
cwtl
addr16
lret
loope
bound
inc
jbe
pop
or
call
rcr
lahf
in
scas
mov
pop
in
mov
insl
leave
cmp
repz
out
outsb
jp
xor
mov
pop
out
clc
push
sahf
jns
mov
aaa
outsw
frstor
xor
push
icebp
movsl
adcb
adcl
push
out
xchg
mov
jp
or
mov
sbb
inc
hlt
mov
cmpsb
jg
dec
loopne
sbbb
and
push
jmp
fwait
jle
int3
mov
jmp
inc
cs
iret
jl
sub
inc
inc
pop
outsb
pop
gs
hlt
jp
inc
mov
mov
and
add
movsb
add
xor
cwtl
pop
mov
scas
sub
insl
pop
pop
cmp
jne
add
aam
pusha
test
xchg
cmp
int
in
lret
in
cmp
std
data16
jge
arpl
aam
inc
imul
push
mov
mull
jnp
shll
adc
push
shr
sub
in
hlt
dec
or
test
mov
aas
in
pop
int3
add
push
dec
cmp
xchg
rcll
jns
daa
push
lods
addr16
sub
int
std
cmp
out
pop
jb
loop
cmp
jp
loopne
icebp
into
jp
mov
xchg
lds
or
xor
adc
jne
push
sahf
mov
push
cld
jmp
pop
call
stos
lret
les
mov
adc
xchg
in
sub
xchg
test
insb
rcrl
lahf
das
dec
xor
mov
cli
adc
aad
fbstp
fcoml
mov
pop
pop
in
cmp
mov
lods
xchg
add
rcrl
lds
mov
or
lcall
pop
mov
rcrb
push
add
jb
jmp
repnz
jecxz
inc
imul
inc
rolb
sub
popa
loop
jns
xor
ret
addb
or
pop
add
push
fwait
jb
sbb
pop
addb
js
adc
inc
pop
fsubrl
aaa
jne
sti
or
out
jbe
stos
jle
adcb
pop
dec
cli
out
out
ficomps
test
out
rcr
cmp
out
in
or
ss
jbe
push
fisttpl
push
jmp
mov
je
testl
mov
je
mov
adc
mov
xor
arpl
sbb
ret
add
xchg
xchg
adc
mov
mov
jae
and
mov
bound
jl
clc
sub
in
inc
jns
mov
out
cli
ret
cmp
int3
jo
stos
sbb
int3
push
mov
jp
outsb
jns
push
lahf
scas
mov
or
mov
imul
inc
pop
jecxz
mov
or
sbb
scas
mov
cmp
test
mov
test
jecxz
mov
das
dec
push
mov
cltd
jo
sub
mov
int
pop
jno
adc
mov
cwtl
rcr
test
cmp
aaa
test
mov
adc
add
fsts
xor
sub
xchg
cld
dec
xchg
das
lea
mov
hlt
ret
and
and
lods
bound
dec
daa
cmp
lods
push
test
xchg
aad
cmp
push
dec
cld
lea
xor
adc
xor
fcoms
lods
bswap
xor
jno
mov
and
gs
fiaddl
ds
add
pop
pause
mov
enter
aaa
mov
mov
shll
mov
gs
lahf
cmp
cmpsb
lret
sbb
jns
mov
sbb
iret
out
sti
mov
out
mov
xchg
pusha
and
dec
mov
les
push
mov
xchg
sbb
lds
or
adc
cwtl
add
shll
jge
out
test
rcr
or
jp
inc
sub
jecxz
incb
test
jecxz
cmp
inc
add
xchg
push
sbbl
mov
and
adc
lcall
in
jge
orb
outsb
std
and
loopne
fs
pop
aas
push
or
sahf
xchg
cltd
icebp
xchg
xchg
scas
inc
int3
fwait
dec
jne
inc
pop
and
xor
fisttpl
inc
xor
pop
cmp
mov
xor
sub
jnp
add
lahf
cmp
arpl
test
mov
pop
pop
and
sub
pushf
lcall
loopne
in
lcall
out
lock
and
jmp
ljmp
ja
mov
shlb
ret
test
aam
and
enter
out
je
push
rorb
jo
lods
adc
fnsave
adc
in
out
mov
xchg
pop
mov
lods
push
addr16
dec
cs
mov
cmp
mov
inc
sub
call
push
adc
mov
decb
mov
mov
fwait
cmpsl
sbb
lea
and
mov
mov
outsb
mov
sahf
cmp
out
jo
fcompl
push
push
push
xchg
sub
sbb
leave
sbb
and
lea
xchg
ljmp
mov
cwtl
jb
aad
mov
adc
dec
fcomps
mov
aad
pop
ss
xchg
ffree
testl
movsb
lods
stos
and
fbstp
outsb
or
loopne
jg
movzbl
push
test
stc
rcrl
push
cmpsl
xchg
dec
je
or
notl
loope
mov
push
jbe
fisubl
testl
cmp
cmp
xchg
orb
lahf
push
or
stos
rolb
push
dec
pop
adc
lea
mov
add
shl
fwait
aas
mov
test
stc
cmpsb
outsb
sub
inc
repz
popa
bound
out
mov
cmp
cmc
inc
popf
fcomi
jp
push
loopne
cmpsl
dec
repnz
mov
or
nop
push
pop
bound
xchg
adc
repnz
das
pop
lret
jmp
in
mov
xor
add
mov
ljmp
insb
and
movsl
imull
pop
pop
and
aaa
incl
dec
cmp
sub
inc
mov
lahf
or
fistl
test
xchg
ljmp
mov
sub
or
hlt
jns
cmp
pusha
and
aas
lea
gs
out
out
jle
jnp
jno
and
xchg
xchg
pop
xchg
jmp
lret
lods
rcr
divb
add
push
jge
scas
or
test
sub
icebp
jns
jmp
jmp
movsb
ret
dec
jmp
nop
mov
push
out
cmp
inc
push
xchg
stc
adc
addr16
xchg
xor
fwait
pusha
jmp
in
jns
cltd
pop
inc
sti
sbb
pop
sti
mov
push
arpl
insl
cwtl
mov
andb
mov
loope
mov
fs
in
jle
inc
cs
push
insl
jg
scas
xchg
sub
jno
loop
cmp
loopne
ss
pusha
push
mov
dec
lret
test
adc
mov
cwtl
je
in
push
inc
mov
and
jnp
adc
lahf
jecxz
adc
nop
fcmovnbe
ss
nop
addb
mov
imul
fldlg2
push
push
jno
adc
push
or
leave
or
in
push
out
add
dec
mov
inc
andb
xor
push
in
jbe
pushf
rorb
jp
mov
test
sbbb
std
sub
push
pop
inc
lcall
das
dec
call
pop
iret
and
and
mov
or
das
mov
inc
outsl
jnp
subb
outsl
inc
movsl
xor
es
sti
push
aam
imul
leave
sbb
sub
lock
out
dec
lahf
xchg
pop
addb
rcr
adc
pop
cwtl
cmp
jg
jbe
in
sbb
xchg
int3
dec
rorl
les
lcall
jmp
test
lods
test
daa
aas
or
test
pushf
bound
loope
inc
cmpsb
xor
xchg
pop
adc
ret
jbe
sub
push
sbb
push
in
mov
adc
pop
sub
xchg
lahf
stos
orl
dec
pop
test
lods
test
cld
sbb
mov
or
into
in
and
jno
sbb
stos
fmul
popa
fcoms
mov
les
mov
stos
sub
sub
imul
sti
or
jle
inc
js
push
fcmovnb
xor
jno
push
test
xor
jno
mov
push
pop
sbb
outsb
inc
push
repnz
xchg
xor
add
xchg
push
mov
lret
repz
cmc
insl
push
aam
lock
cwtl
test
mov
push
aam
imul
test
push
pop
push
inc
pop
test
jne
mov
sub
loopne,pt
mov
push
mov
jne
push
in
cmc
out
jnp
cmc
pop
leave
in
pusha
dec
sub
lock
pop
aam
gs
adc
jg
inc
inc
in
nop
mov
and
addb
push
add
sbb
fmul
pop
ljmp
inc
fidivs
rolb
je
leave
lods
nop
push
pop
lods
incl
push
mov
mov
mov
scas
mov
test
repz
icebp
movsl
dec
cmp
xchg
pop
fwait
pop
xlat
sub
lods
push
test
fdivrs
ror
scas
out
mulw
ds
mov
mov
int3
rcll
fs
sub
fwait
xchg
out
icebp
lret
negb
aad
adc
mov
imul
cmp
or
xor
xchg
aaa
jne
loope
mov
push
pop
xor
adc
xchg
addps
negl
add
outsb
and
icebp
mov
mov
call
icebp
xchg
test
jb
cmc
les
cli
mov
add
push
jle
inc
jge
inc
dec
xchg
jle
jns
je
in
pop
addr16
cmp
fldenv
and
mov
jnp
lcall
sub
xchg
pop
mov
push
mov
jb
jg
lcall
test
jmp
adc
adc
or
mulb
inc
popf
xor
or
movsb
inc
push
clc
dec
shll
stos
nop
sub
cmp
xlat
xchg
xchg
scas
inc
out
out
cmc
push
mov
or
inc
test
es
dec
and
cmc
push
out
in
mov
jo
adc
pop
popf
mov
xchg
pop
testl
leave
pop
imul
adcl
mov
ret
call
fidivrs
cltd
daa
xchg
inc
shlb
mov
sub
and
imul
test
mov
aas
dec
test
sbb
adc
loopne
jmp
adc
jmp
jbe
mov
andb
and
cmp
and
or
mov
add
sbb
adc
lret
cltd
or
inc
mov
call
ret
mov
add
lret
stos
lret
sbb
jp
fs
pop
leave
sub
jl
imul
inc
and
or
mov
imul
fimull
sbbb
aaa
sahf
outsb
or
push
and
stos
lods
loopne
and
je
iret
mov
loopne
add
and
dec
in
mov
dec
and
jle
and
frstor
xor
mov
sbb
movsb
enter
inc
mov
jbe
jo
xchg
inc
and
dec
sbb
sbb
mov
push
jmp
mov
scas
bnd
out
xor
cmp
jl
mov
inc
sub
mov
fstpt
push
aaa
jno
mov
shrb
loopne
ret
int3
pop
lret
xchg
inc
xchg
aas
fwait
iret
scas
sbb
or
inc
mov
insb
and
out
dec
pop
cmp
shlb
cmp
sub
ja
sub
loop
push
mov
iret
orl
addb
push
cmp
sbb
inc
add
movl
and
mov
or
ficoms
push
inc
pop
stos
fstps
xor
xor
xchg
mov
les
dec
add
jo
cmpsb
sbb
outsl
sbb
sub
cmpsb
mov
pop
inc
inc
xchg
jne
dec
je
stc
or
cmp
les
out
fsubl
dec
push
jns
cltd
or
xchg
xchg
pop
push
or
jae
mov
mov
inc
mov
test
addb
cmpsb
pop
ds
jnp
adc
dec
lahf
mov
std
xor
hlt
pop
mov
outsl
dec
cld
cmpb
cmp
push
cld
mov
addr16
lock
filds
es
movsl
sub
js
inc
mov
sahf
jo
jne
xchg
int3
jno
add
pop
jns
call
adc
leave
xchg
daa
add
dec
push
addr16
jae
jo
inc
mov
pop
pop
dec
fmuls
mov
iret
gs
mov
mov
int
cmp
imul
and
sbb
inc
add
insl
pushf
dec
icebp
push
into
pop
mov
popa
mov
shll
xorl
and
sbb
stc
fdivrl
mov
mov
adc
ja
mov
cwtl
fsubrl
inc
inc
inc
jae
cmp
out
xchg
insb
stos
sub
mov
or
lcall
in
filds
mov
rclb
clc
push
pusha
mov
inc
xchg
sub
cmp
or
adc
repnz
inc
mov
mov
sub
sbb
xchg
mov
or
xor
cld
es
xor
jno
add
jg
je
fildll
dec
loopne
iret
ret
ret
ret
mov
repnz
mov
popf
lret
jecxz
mov
pop
mov
mov
sbb
mov
jge
insb
std
dec
cmp
popa
sbb
dec
cmp
lcall
xchg
pop
mov
rcl
inc
sub
rol
in
test
lock
in
mov
cmc
nop
lods
xor
js
in
clc
cmp
cltd
jns
jl
push
cmp
ss
dec
dec
xchg
lcall
movsb
cld
std
gs
out
loop
xor
mov
push
imul
dec
dec
rorl
lret
aam
cmc
push
out
outsl
pop
mov
sbb
mov
add
fadd
xor
adc
sub
xchg
cwtl
notb
mov
sbb
divl
stc
jo
fidivrl
js
in
cmp
filds
call
sub
push
in
sub
dec
sub
mov
or
std
push
mov
int3
push
lret
add
rol
rcr
scas
int3
hlt
xor
enter
mov
mov
jnp
loope
sbb
xchg
mov
mulb
mov
push
jnp
add
dec
xor
cwtl
xorl
inc
lret
rorl
push
scas
or
cmp
int3
addr16
imul
out
mov
inc
out
sti
outsb
push
fld
jl
ja
rolb
daa
adc
mov
push
push
mov
dec
test
sub
inc
xchg
mov
fwait
lret
add
mov
test
insb
insl
cmp
imul
scas
int3
mov
jno
push
mov
sti
inc
and
in
mov
push
mov
push
rcll
popa
cmpsl
inc
lock
cmp
sarl
cmc
stc
inc
gs
outsl
xchg
cmovne
in
mov
mov
and
shlb
ss
je
out
outsl
test
xchg
sub
push
lahf
and
das
dec
mov
cmpsb
stos
cmp
sub
dec
xchg
loopne
in
push
mov
or
fldt
std
inc
mov
cmpsb
pop
dec
mov
add
push
fwait
add
push
dec
aaa
mov
clc
insl
sti
and
add
pop
xor
xchg
mov
xor
in
daa
mov
mov
mov
push
sbb
out
daa
inc
gs
push
enter
test
int
pop
jnp
jl
or
mov
push
jmp
sbb
in
daa
addr16
imul
xor
push
test
and
pop
pop
jmp
and
xchg
lock
sub
ss
jo
aas
jle
mov
push
das
enter
test
insb
jne
lea
lea
xor
mov
jae
sbb
out
loopne
pusha
xor
xlat
sbb
sub
mov
rorl
pop
in
sub
lods
sti
cmp
imulb
data16
outsb
mov
and
sbb
push
pushf
pop
lret
jle
inc
and
adc
cmpsb
es
ds
xor
es
popf
cmc
rolb
xchg
sar
movsb
lcall
or
scas
scas
ftst
cwtl
jns
mov
inc
pop
xorb
sbb
sbb
mov
arpl
aad
mov
mov
loope
lods
mov
scas
lds
insl
ror
xorl
aaa
sub
xchg
push
xlat
pop
hlt
sub
dec
iret
insb
cld
adc
aam
inc
shll
adc
pop
mov
mov
fwait
jge
sbb
cmpsl
lret
push
mov
daa
mov
adc
mov
sbb
lcall
dec
add
nop
es
sbb
mov
shr
xor
mov
test
imull
movsl
jno
or
cmpb
inc
mov
mov
adc
in
mov
or
push
or
pop
cmp
lods
sub
sub
imul
jo
sti
xchg
add
cmp
push
xchg
daa
dec
fucomi
daa
mov
ret
xor
pop
lret
mov
mov
loope
in
jp
xor
ss
sbb
lahf
repnz
sbb
mov
pop
test
mov
sub
inc
fcos
loope
pop
jo
popa
ret
out
add
out
out
push
hlt
cmp
pushf
sub
sbb
jecxz
jp
ret
sub
idivb
push
lock
ds
in
add
into
insl
mov
mov
jno
addl
push
scas
rolb
rorb
fsubr
in
push
inc
test
push
push
cmp
mov
cmpsb
out
mov
sub
jge
mov
int
jge
subb
in
sti
add
fwait
push
inc
mov
dec
add
sbb
aam
xor
jle
jl
add
jg
mov
clc
adc
daa
pop
jl
insb
lock
pop
cmpsb
cwtl
cmp
iret
cmp
int3
adc
jecxz
mov
mov
lcall
push
scas
rolb
imul
sub
bound
test
jbe
inc
cmp
xor
cmp
test
mov
into
cltd
insl
xor
fwait
test
push
and
xchg
pusha
fnsave
fnstsw
aam
ds
stos
add
iret
adc
and
cmpsl
adc
jno
pushf
push
cmp
dec
cmp
pop
or
pop
aaa
or
push
add
nop
mov
imul
mov
arpl
repnz
jle
cltd
idivl
or
mov
pop
jae
xchg
mov
sbbb
stos
inc
or
xor
das
mov
mov
cld
mov
das
test
mov
sbb
jno
repnz
pop
cmpsl
repz
test
fildll
dec
mov
xchg
xor
cld
aaa
loopne
xor
into
sub
mov
lcall
js
xchg
sub
je
loope
cmp
jl
inc
cwtl
jg
fsubrp
xor
or
leave
ljmp
xor
pop
jo
daa
fimull
push
push
or
mov
cmp
inc
lds
xchg
shrb
stos
mov
push
jns
and
adc
add
int3
push
in
shlb
ret
push
jb
test
ljmp
inc
fs
dec
xchg
mov
and
cmp
mov
cltd
stos
or
cs
mov
mov
cli
iret
repz
jmp
add
ds
std
mov
cmpl
fmuls
test
mov
out
xor
jge
mov
cld
dec
fwait
mov
adcl
aas
test
insl
xchg
cmc
scas
cmpsb
lahf
push
sub
inc
arpl
sbb
mov
dec
sub
sub
mov
not
in
repz
dec
xchg
add
out
faddl
mov
sbb
int3
or
inc
iret
mov
lds
cbtw
fdivs
pop
xor
shr
mov
pop
stos
scas
sbb
arpl
ret
out
stc
aad
inc
mov
lock
out
enter
insl
int
pop
imul
sbb
dec
insb
insb
mov
stc
mov
sbb
jmp
test
das
shrl
adc
mov
pop
outsb
mov
mov
mov
mov
inc
dec
fnstenv
cmpsb
adc
and
bound
lods
jecxz
or
mov
out
mov
pop
repnz
out
js
out
lds
test
shrb
shlb
jl
inc
add
mov
sbb
push
daa
push
shrb
cmp
push
daa
pop
sub
xor
out
aam
addr16
in
inc
xrelease
scas
add
xchg
pop
mov
scas
jb
cmp
test
std
dec
adc
xchg
cmp
cmp
adc
mov
ja
dec
mov
xchg
lds
mov
mov
add
sub
pop
into
ja
xor
or
daa
cli
xchg
push
gs
pushf
pop
pop
xchg
adc
in
add
inc
out
rcrb
shl
data16
mov
enter
push
dec
adc
aam
sbb
jno
loop
push
cvttps2pi
push
orb
mov
js
outsl
mov
pushf
imul
in
fldenv
mov
daa
fucomip
inc
xchg
and
inc
inc
int
cmp
push
mov
loop
sbb
in
jae
pushf
das
mov
lods
jecxz
mov
sbb
stc
push
mov
pop
and
dec
jmp
push
mov
cmp
xor
js
lahf
mov
jno
fisttpll
leave
sub
out
outsl
add
cmp
jae
mov
inc
int
pop
adc
push
andl
lahf
xor
mov
mov
insl
pop
pushf
mov
clc
mov
pusha
inc
sarl
xor
cli
int
cmpsl
pop
outsb
xchg
scas
add
outsb
cmp
popa
repz
jp
sbb
std
pushl
jg
rclb
pop
jae
pop
pop
cmp
or
lahf
mov
sub
sbb
rcll
mull
and
sub
std
and
sahf
mov
outsl
cmpsl
dec
cmp
aam
fisubrl
lahf
std
or
cmp
lock
xor
fmuls
sti
jg
lods
push
insl
inc
lea
cmpsl
push
dec
int
ret
mov
pop
ljmp
inc
push
in
jae
pop
bound
out
sti
les
xor
push
xchg
aad
jbe
xchg
mov
rorb
or
loopne
scas
push
repnz
or
jecxz
icebp
les
push
xor
cmp
sub
sub
sub
mov
jmp
jne
popf
test
push
sbb
das
ss
or
xchg
aaa
push
movsb
sbb
nop
mov
adc
fistpll
jns
out
cmp
leave
repnz
jl
arpl
sbb
xor
mov
fsubr
mov
sbb
push
or
cltd
sbb
popf
ljmp
insl
pop
fimuls
cmp
adc
pop
or
ljmp
push
pusha
or
xlat
mov
cmp
add
rcl
cmp
push
and
ds
mov
stc
cld
sub
xchg
pop
cltd
push
outsb
bound
cmp
mov
dec
cmp
fstps
jmp
dec
out
into
lods
int3
pop
cwtl
ret
or
popa
mov
push
stc
imul
inc
int
sub
and
cld
jecxz
clc
outsl
negb
sub
add
out
sub
nop
arpl
adc
fucompp
pop
loopne
cld
dec
out
cld
fidivrs
push
icebp
data16
mov
mov
insb
add
mov
adc
sbb
in
jo
push
and
mov
jo
cwtl
cmp
or
dec
sub
xchg
xor
fsubrp
imul
xchg
sti
cmc
loopne
push
mov
xchg
mov
push
fwait
lcall
jmp
cltd
ret
add
stc
or
jbe
pusha
test
mov
in
xchg
addr16
mov
mov
call
jecxz
jns
daa
cltd
jecxz
pushf
shl
data16
hlt
sbb
cld
fists
sub
fs
dec
stos
mov
inc
or
xor
mov
in
icebp
xor
stos
std
ds
sarb
push
lret
pop
sbb
cmp
fdivrl
and
xor
es
and
add
and
enter
lea
xor
dec
decl
mov
orl
xchg
jno
arpl
xchg
xchg
or
jmp
fisubrs
loop
mov
dec
popa
jecxz
dec
mov
mov
cmc
mov
scas
stos
and
fmulp
inc
lds
les
inc
aad
in
jns
adcb
subl
lret
adc
add
pand
aad
mov
xchg
jnp
hlt
nop
lock
int3
arpl
inc
fsubrp
pop
push
xchg
jb
lcall
add
dec
cli
daa
inc
lret
pop
fsts
pop
jle
roll
inc
push
xchg
adc
addb
ret
dec
int
leave
sbb
popf
cmc
arpl
mov
movsl
xor
cld
cld
mov
jecxz
mov
ja
push
aaa
orl
inc
jb
adc
mov
add
in
add
dec
mov
mov
push
popa
dec
sbb
fs
insl
and
xlat
push
mov
jns
inc
js
and
jnp
lret
or
cmp
testb
jge
int3
addr16
out
cmpsl
jbe
dec
pop
clc
fcomip
jbe
adc
push
pop
int
cmp
jno
mov
mov
outsb
sub
xchg
dec
sarb
das
fimull
pop
stos
adc
xchg
lret
mov
mov
loopne
adc
std
inc
xchg
shll
in
in
push
arpl
dec
sbbl
adc
scas
add
mov
push
dec
pop
xor
scas
add
sub
cmpl
dec
dec
jp
cmp
cmp
inc
cli
sub
sbb
adc
pop
aaa
mov
add
cmp
dec
dec
adc
and
ror
not
ss
rclb
adc
icebp
xor
lret
xor
fisubrs
push
scas
lret
xchg
fcoml
test
inc
or
and
outsl
ja
popa
das
lahf
xchg
cmp
pop
sahf
xchg
mov
add
clc
xchg
or
cmp
adc
sahf
pop
lret
jns
idiv
ja
jg
jp
push
clc
pop
and
jne
sub
xor
hlt
ret
xchg
subb
pop
cmp
push
repnz
xchg
pop
or
add
cmp
push
out
jne
inc
out
ss
out
jge
hlt
pop
cmp
lahf
fimuls
dec
xchg
mov
xchg
mov
cmpsb
fldt
xor
inc
inc
adc
inc
dec
cld
and
into
push
ret
fimull
mov
pop
leave
pop
or
popa
sub
pushf
cmpsl
popa
cmpsb
int3
or
pop
pusha
push
nop
xor
xlat
popl
lret
outsl
lock
inc
sbb
xchg
jb
sbb
xlat
or
gs
into
add
arpl
mov
xchg
std
repz
jno
inc
xchg
ret
add
mov
inc
xlat
lods
out
pop
pop
jp
adc
js
pop
lock
cmpsb
mov
xchg
mov
jo
das
mov
lock
das
shlb
movsb
xchg
cmc
outsb
stos
xchg
dec
in
in
cmc
push
cmpsl
call
jns
jae
xor
js
adc
inc
pop
lds
or
out
ret
mov
add
xor
cmpsl
xor
pusha
or
push
xchg
xchg
hlt
divb
rclb
push
insl
shr
dec
mov
ret
imul
xlat
andb
sti
dec
pop
scas
rorl
hlt
jne
shrb
xlat
int3
xchg
enter
idivl
pop
dec
adc
pop
imul
vfnmsub213ss
lret
sub
pop
cmp
sub
lret
rcll
dec
and
inc
adc
jno
clc
dec
or
sub
pop
mov
or
xchg
pushl
xchg
hlt
xchg
or
or
push
jnp
or
xchg
mov
daa
ja
sub
pusha
jno
outsb
adc
ds
jl
in
mov
add
arpl
jae
xchg
popa
sub
mov
imul
subb
jns
into
nop
scas
ficoml
jl
mov
xchg
js
call
dec
ret
mov
push
icebp
jmp
into
out
pop
lods
lea
mov
out
push
mov
cld
pop
jecxz
rcrb
or
lds
pusha
hlt
sub
dec
mov
rclb
adc
add
add
loopne
sbb
sub
cmpsb
mov
push
push
loopne
fs
outsb
pop
outsb
clc
sub
push
and
in
pop
xor
loopne
push
and
jns
xor
add
adc
les
push
sbb
and
shrb
mov
rcrl
sbb
out
add
in
dec
mov
pop
add
jo
repz
into
in
loope
jne
add
jo
loop
gs
add
sbb
sub
sbb
mov
pusha
std
rorb
mov
sbb
imul
push
dec
ud1
add
mov
lods
out
aaa
fs
icebp
pusha
sbb
les
sbb
xchg
lds
fcomps
movsl
jo
cmc
gs
dec
rolb
lods
dec
pop
pop
jge
and
scas
int
push
ljmp
shl
mov
jp
cwtl
mov
add
or
pop
iret
addr16
iret
loop
cld
sahf
cwtl
stc
lcall
sbb
adc
xchg
in
mov
mov
xor
xor
sar
scas
xchg
adc
lock
outsb
mov
sbb
dec
pop
stos
nop
iret
pop
sarl
es
stc
dec
pop
int3
clc
ds
jno
js
cmp
je
shl
push
cltd
nop
test
mov
add
xchg
fwait
xor
icebp
adc
lret
xlat
lds
dec
sub
fldpi
hlt
repz
adc
push
sti
roll
rcll
jbe
push
push
add
aaa
pop
mov
push
mov
andb
mov
adc
xor
movsl
dec
cmpb
das
sbb
jo
arpl
and
bound
ror
hlt
out
xchg
sbb
mov
adcl
pop
lock
mov
repz
add
xchg
add
push
mov
leave
jmp
popf
jle
pop
and
add
sbb
stc
inc
adc
dec
lcall
lahf
jp
cltd
lret
cmc
pop
std
sti
push
mov
inc
sahf
sub
notw
mov
repnz
rcr
jp
or
pop
sti
testb
cwtl
pop
mov
adc
dec
pop
cmp
xchg
test
sbb
mov
cmp
xor
jg
jne
and
call
add
inc
jg
in
js
stc
nop
ret
test
outsl
mov
cmc
pop
push
xor
add
movl
fbstp
fisubrl
lret
test
add
popa
rcrl
cmpsl
xchg
pop
notl
rorb
mov
inc
je
loop
rcr
ds
push
xor
movhps
cmc
or
push
lea
sub
mov
push
icebp
sbb
xchg
xor
jbe
mov
xor
sahf
sbb
into
or
in
nop
sbb
test
xor
sub
imul
mov
loopne
rorl
sbb
jae
mov
insl
in
dec
inc
ficomps
testl
jle
xchg
or
jge
pslld
daa
arpl
sub
out
jno
pop
push
xchg
repz
xchg
lret
insb
pop
cli
pusha
fcomps
mov
cltd
or
lret
lret
jnp
sub
push
dec
or
lods
push
fstps
icebp
ret
lock
adc
jecxz
mov
cltd
add
mov
inc
pop
cmp
adc
push
lret
pushf
xchg
inc
lret
mov
subl
aam
cli
mov
cmpsl
andl
cltd
mov
cmp
mov
xchg
mov
push
repnz
mov
in
jb
aam
enter
mov
lcall
test
xor
sub
sbb
jae
or
jmp
push
loop
add
adc
ss
cmc
stos
push
pop
mov
mov
add
and
adc
mov
sub
into
shlb
jle
mov
cmpl
xor
inc
xchg
jle
jg
fcoms
cmpsb
jbe
xor
pop
add
lods
fnstcw
jl
pusha
shll
push
cmp
add
pop
and
cld
dec
and
js
test
cmpb
add
jge
pop
push
or
jp
mov
addr16
shll
push
cmp
dec
adc
lea
cmp
jg
or
sub
mov
std
jne
ss
ss
pop
xchg
rcll
xchg
fldt
repnz
lods
jno
pop
adc
fisubs
inc
out
ret
cmpsl
mov
mov
mov
inc
ret
addr16
cmpsb
push
call
andl
mov
mov
shrb
cmove
lahf
rcll
incl
testl
cs
fsubs
xchg
push
mov
add
pop
jnp
and
xor
cmp
fwait
lcall
mov
add
sahf
mov
fisttps
xchg
jno
add
mov
dec
add
dec
or
dec
call
inc
inc
fimuls
enter
cmp
and
mov
js
rcll
dec
pop
int3
mov
pop
push
add
jne
mov
filds
loope
call
add
movsl
add
or
sub
shr
mov
cli
pop
sbb
loopne
push
enter
out
cli
fildll
or
hlt
lea
in
das
adc
or
pop
js
pop
push
sbb
clc
cmc
dec
xchg
sub
sbbb
outsl
push
lds
das
jge
out
add
leave
jae
add
ret
clc
inc
insl
test
bound
mov
cmp
leave
xchg
adc
inc
call
dec
hlt
push
mov
sbb
sub
xchg
cli
inc
scas
ficoml
outsb
or
cmp
aaa
add
push
movsl
shrl
inc
and
push
jp
idiv
out
cmpsb
add
gs
jmp
mov
xor
out
enter
jmp
ret
push
xor
and
rcrb
loop
mov
add
lods
mov
mov
dec
hlt
imul
cld
rcl
ret
and
fnstcw
sbb
mov
inc
sbb
subl
insl
fmul
add
ret
jne
cmp
adc
inc
sti
xchg
shll
filds
sbb
loopne
les
data16
insb
sub
cmp
int3
mulps
bound
int3
xchg
stc
bound
idivb
or
pushf
or
mov
enter
adc
repnz
push
movsl
dec
aam
lods
cmp
fadd
mov
cmp
and
inc
sbb
inc
in
pop
iret
and
sub
sub
sbb
or
jmp
cmp
out
and
dec
jns
call
test
fstl
fs
xchg
ret
fisubrs
mov
in
sbb
jo
cwtl
and
sub
into
test
pop
mov
addl
sub
in
sub
loop
push
cmp
mov
adc
cld
inc
loopne
mov
xchg
add
test
insb
add
and
xchg
jb
or
sub
sbb
mov
cmpsb
mov
cmc
mov
sub
push
mov
adc
sub
inc
mov
sbb
sbbb
jbe
cmpl
repz
jge
popf
fstpl
in
ljmp
mov
inc
adcb
and
aaa
sarl
xchg
pop
sbb
inc
inc
push
adc
mov
sbb
loopne
add
scas
out
sti
fisubrl
push
jnp
inc
gs
and
je
dec
movsb
dec
add
jp
arpl
subb
xlat
cmc
jge
mov
adc
test
shlb
and
xchg
sti
in
pushw
es
and
fldcw
push
dec
mov
mov
pshufw
lock
std
xor
jnp
outsl
or
das
sub
jb
mov
mov
int3
lods
in
or
pop
dec
dec
setbe
loope
lcall
addr16
cltd
mov
lds
jbe
loopne
into
nopl
xchg
insb
sbb
adc
mov
pop
cmp
inc
jbe
repz
jb
mov
cwtl
pop
xor
mov
int
push
inc
test
sub
ficoms
xlat
jns
add
sub
sbb
sti
shr
hlt
sub
jge
addl
xor
aad
mov
adc
adc
mov
out
mov
push
pusha
lret
shl
xor
ds
and
inc
mov
xor
dec
sbb
pop
testb
mov
add
cvttps2pi
sub
mov
cmp
mov
add
js
inc
mov
out
jns
popf
pusha
mov
mov
movsb
mov
fwait
aam
inc
dec
jbe
jo
enter
mov
mov
mov
arpl
xlat
lods
addr16
push
mov
insl
jae
in
insb
push
dec
sbb
bound
icebp
loope
adc
sbb
lcall
das
jle
gs
jmp
mov
or
inc
ljmp
mov
aas
and
aad
mov
ret
adc
das
jns
std
adc
xchg
adc
dec
sbb
and
fdivl
pop
popf
push
out
cmp
aam
inc
int
or
in
stos
or
push
mov
lea
sub
push
cmp
sub
rcl
and
fwait
dec
add
in
ror
pop
xchg
cmp
inc
lods
call
xlat
mov
dec
xchg
xchg
fldcw
test
test
add
push
std
fucomp
adc
sub
fisubs
pop
outsb
imul
rol
inc
into
cwtl
fdivrp
sti
in
in
cmp
sbb
push
inc
outsb
add
fs
dec
sbb
add
inc
mov
cvtpi2ps
mov
bound
add
into
dec
or
inc
jno
aas
idivl
sbb
or
in
pop
outsl
pop
sub
xor
adc
daa
insb
adc
jb
repz
fcomip
cmc
jo
cmp
lahf
adc
mov
sti
mov
pop
and
sahf
pop
or
push
mov
push
or
mov
add
subb
data16
mov
or
pop
mov
fst
popa
popa
call
inc
or
aaa
int3
push
sti
dec
pop
out
push
fistps
xchg
inc
xchg
add
mov
mov
fimull
cmp
mov
sbb
adc
mov
jge
inc
jmp
or
xchg
sbb
cld
mov
scas
fdivrp
mov
lcall
cmp
call
sub
jle
pop
aad
das
loopne
xchg
dec
rol
cmp
jo
cmp
in
jbe
jecxz
sub
jmp
int3
scas
xchg
dec
jno
add
ss
push
xchg
cmp
clc
cld
mov
in
pop
sarb
cltd
adc
or
cwtl
mov
popf
arpl
jl
sub
js
dec
adc
xchg
es
iret
nop
xor
ds
insb
or
out
test
sbb
movsl
nop
in
fwait
pop
aaa
jg
xor
mov
inc
lock
sub
jne
sub
inc
jo
das
add
cmp
repnz
data16
or
and
and
inc
sub
jb
sti
push
push
cmp
push
mov
andb
lds
jae
add
pushl
test
inc
lds
add
lcall
cmp
push
cwtl
cmp
iret
aam
sub
out
dec
test
shlb
xor
rorb
add
inc
mov
fisttpl
push
in
cs
in
xchg
sub
mov
ljmp
mov
and
inc
cmpsl
nop
jne
cwtl
push
jg
or
cmp
mov
or
mov
mov
lods
add
arpl
pop
mov
cmp
xchg
sti
push
push
sti
scas
sub
daa
cld
sub
dec
loopne
push
cli
scas
cmp
stos
cwtl
inc
xor
frstpm(287
and
dec
or
lret
insl
and
negl
int3
mov
imul
cmp
sub
add
fsubs
cltd
mov
cmp
adc
scas
pop
pop
push
mov
and
sub
jge
xor
call
xchg
ret
cmpsb
sti
mov
aad
hlt
ret
mov
ljmp
jnp
xor
aaa
pushf
cmp
xchg
movsb
xchg
lahf
pop
mov
imul
mov
insl
jnp
jmp
int3
push
pop
test
roll
add
mov
mov
cwtl
jle
rolb
lock
or
add
fs
addr16
inc
insb
jecxz
sbb
xor
shrb
pop
pop
stc
mul
ret
mov
sbb
ret
cmp
imul
mov
outsl
push
pop
mov
pop
loop
aas
xor
cmp
arpl
out
lret
xchg
mov
mov
cwtl
xchg
mov
pusha
stos
mov
mov
das
enter
stos
iret
or
rorl
fisubrl
or
jle
pop
icebp
jp
and
xchg
test
int3
fsubrs
test
into
mov
xor
jge
pop
lock
out
sub
pop
scas
flds
pop
or
xchg
testb
mov
repz
pusha
pop
ret
ljmp
imul
test
popa
lret
mov
div
cmp
adc
cld
repnz
ljmp
enter
outsb
aam
int
or
jle
test
mov
ljmp
ficoms
sti
and
xchg
pop
ss
popa
and
out
ja
jnp
dec
xlat
inc
out
cmp
xlat
ffreep
push
and
stos
ds
shlb
push
sbb
call
adc
loopne
cmp
js
inc
mov
imul
ja
sahf
mov
sub
dec
sbb
mov
test
jg
mov
fwait
shl
cld
out
in
cld
sahf
imul
fadd
sahf
xor
mov
adc
cmpsl
sub
pop
cmpsl
fwait
sti
insb
sub
test
push
jns
aaa
nop
cmp
jo
in
adc
inc
notb
cli
add
das
dec
insl
repnz
lret
test
sub
sub
mov
cltd
adc
jae
inc
pop
jmp
mov
pop
cld
sub
or
adc
jecxz
sbb
bound
add
xchg
push
sti
add
push
lcall
fcomps
imul
loope
cmp
cwtl
add
mov
jno
lret
ficomps
cwtl
push
adc
push
xchg
pop
sub
adc
inc
xbegin
xchg
aaa
dec
lea
out
xchg
jnp
es
jle
push
aad
aaa
sbb
and
sarl
dec
add
xchg
out
in
fdivrs
sbb
mov
and
and
mov
mov
pop
mov
push
lea
rorb
inc
shr
xchg
in
fcoml
add
addr16
mov
adc
xchg
pop
in
jle
or
call
cmp
lea
shll
and
mov
xor
sub
lock
push
jmp
pop
aas
fs
pop
test
lea
inc
outsl
jmp
push
mov
and
pop
divl
xor
ret
push
mov
fldt
and
or
xorb
sub
adc
cli
out
sbb
dec
lock
mov
pop
jmp
dec
popf
popfw
testl
xchg
sub
lret
xchg
dec
adc
mov
fcomp
mov
cmp
inc
out
scas
and
gs
jle
ret
dec
xchg
mov
add
pop
push
leave
push
imul
outsb
test
mov
cmp
pusha
test
sub
dec
xchg
mov
js
mov
nop
les
stc
movsl
sub
ds
outsl
cmp
pop
scas
xor
add
loop
mov
cmp
orl
into
sahf
pop
add
js
shlb
inc
loop
hlt
push
scas
push
shlb
dec
dec
in
and
dec
and
mov
xlat
iret
xchg
mov
sub
stc
insb
add
push
jns
sub
imul
mov
mov
not
inc
es
outsl
push
int
mov
into
in
icebp
insl
fwait
jg
sub
mov
gs
rcll
stos
outsb
mov
subb
mov
dec
or
rcrb
lock
push
jp
sub
mov
aaa
pop
cli
lds
jnp
add
lahf
jmp
mov
and
add
and
bound
mov
mov
xor
iret
int
test
orl
sub
ror
es
std
cltd
push
nop
nop
daa
mov
or
fs
int
fucomp
sub
aas
fs
pop
ja
pop
call
xchg
dec
addr16
xchg
fwait
and
cmp
fucomi
push
rclb
sub
xor
mov
je
nop
les
sbb
add
ror
aam
call
ret
sub
ds
bound
push
bound
cltd
cmp
mov
or
movb
in
xor
cmp
or
das
jae
push
inc
jl
lahf
stos
fucom
jns
add
xchg
mov
mov
mov
rolb
fisttps
addr16
dec
sbb
into
rcll
arpl
add
repz
iret
xchg
es
gs
fdivp
test
adc
ficoml
lcall
mov
xor
mov
push
inc
jge
and
stos
dec
das
test
stos
insl
adc
lea
iret
icebp
js
loope
repnz
and
pop
adc
sub
movsb
adc
outsl
cmp
pop
cmp
push
sti
pop
aas
adc
popf
dec
adc
jns
xchg
outsb
jp
push
les
jmp
cmp
lret
mov
mov
add
lahf
adc
pop
in
add
mov
repnz
ss
add
mov
sub
pop
test
out
es
xchg
jge
cmp
mov
sti
addr16
in
push
inc
sub
and
add
push
push
lcall
xchg
aam
stc
loope
inc
aaa
adc
xor
mov
fs
sub
fwait
andb
je
test
xchg
bound
stc
aaa
shll
push
les
fucomp
int3
dec
sub
sarb
pop
test
call
nop
add
adc
out
test
pop
adc
jo
repz
cmp
mov
scas
out
inc
lret
xor
call
push
loopne
add
dec
in
std
popf
test
xchg
xchg
jae
add
fdivrl
fwait
lock
dec
test
ja
inc
pop
imul
cmp
mov
iret
shrl
cltd
scas
or
or
aam
inc
dec
inc
out
push
xor
shlb
fcom
in
and
dec
in
outsb
clc
ret
jg
pop
add
in
popf
fstps
adc
jp
mov
insl
lds
add
mov
mov
xor
lods
or
xor
lods
shl
jo
je
jp
and
jns
push
push
js
mov
xor
insb
push
fldt
lods
jecxz
notl
aad
or
and
cli
mov
push
xor
sub
inc
sub
icebp
sub
xchg
jo
call
cmp
mov
cmpsl
mov
scas
cmp
bound
je
xchg
ds
clc
xchg
shll
pop
dec
stc
inc
test
sbb
lahf
iret
dec
into
imul
mov
xchg
out
fbld
sub
js
cmp
mov
aas
data16
cld
push
in
int
add
testb
jmp
insl
fsubr
call
mov
xor
les
into
or
and
mov
fisttpll
fs
mov
mov
mov
scas
and
ljmp
je
mov
add
lahf
dec
in
lahf
pop
repnz
adc
fldcw
cli
cwtl
loop
lret
and
ret
dec
push
cmpl
or
lcall
sbb
mov
or
popf
pop
lds
add
test
cmc
mov
cmp
incb
loope
cli
outsb
push
jbe
mov
das
inc
lock
into
jle
mov
shl
adc
jl
and
push
mov
push
or
test
adc
pop
add
shl
or
cli
add
push
mov
push
mov
fimull
inc
addr16
jae
mov
push
mov
mov
adc
fstl
mov
xchg
mov
cmp
ljmp
in
iret
and
enter
ret
pop
fdivr
cli
inc
push
sbb
hlt
scas
ret
cwtl
das
add
add
xor
mov
and
movsl
inc
inc
addr16
mov
xor
stos
hlt
mov
movsl
stc
fnstcw
fsubr
or
push
lods
into
push
ret
xchg
inc
mov
popf
subl
stos
addr16
in
mov
dec
jb
push
cwtl
jp
add
inc
lcall
adc
dec
push
lret
shlb
popa
pop
mov
lcall
pushf
mov
and
shll
out
jle
add
ljmp
psadbw
xor
jge
popf
in
add
gs
push
movsl
push
loopne
adc
inc
jo
cltd
push
push
jg
sub
rcl
in
addb
shll
or
and
outsl
push
or
cld
adc
outsl
cmp
aas
mov
call
push
movsb
fiadds
andl
leave
or
inc
mov
loopne
int3
das
movsb
jb
mov
add
lahf
dec
push
cltd
fstl
out
lret
les
lahf
js
pushf
inc
iret
xchg
fucom
inc
outsb
push
xchg
sub
dec
pop
or
test
dec
dec
xor
gs
cmc
sbbl
lods
xchg
and
xor
test
or
loopne
sub
pop
testl
jb
mov
data16
mov
fcoms
test
mov
dec
push
subb
push
mov
sub
adc
pop
addr16
iret
mov
lea
mov
leave
and
test
loope
cmp
scas
std
ret
sub
pop
mov
nop
out
js
mov
cmp
xchg
repnz
jmp
xchg
scas
adc
and
jns
orl
addl
push
adc
mov
mov
pop
dec
aas
lods
xlat
adc
add
mov
shr
scas
test
movb
fiadds
into
addr16
fwait
arpl
inc
pop
and
roll
mov
sahf
push
mov
ret
mov
aaa
les
enter
mov
fwait
xchg
add
xor
xchg
mov
jecxz
inc
cld
cld
xchg
sub
inc
in
int
mov
in
pop
div
aad
pusha
jge
sub
icebp
ljmp
adc
xchg
mov
cmp
xlat
lods
jmp
inc
mov
movsl
and
iret
push
inc
insb
and
xchg
jne
add
shl
xlat
push
in
loope
or
stc
pop
pop
je
push
sti
mov
mov
xchg
ret
sub
adc
dec
jl
cmp
and
mov
mov
insl
mov
fcomps
cltd
xor
jl
out
cmp
or
bndldx
inc
pop
insl
mov
dec
mov
mov
stos
add
es
in
xchg
incl
mov
pop
mov
xchg
aam
imul
mov
test
loop
sub
jg
fwait
mov
cltd
sbb
pop
pop
add
xor
adc
lcall
fcomp
lahf
mov
fbstp
or
lock
aaa
jne
cmp
insl
in
sbb
scas
lock
cwtl
sbb
fsubr
mov
mov
dec
cmp
icebp
popf
sbb
xchg
clc
bound
xchg
cwtl
pop
pavgw
mov
cld
adc
sbb
daa
data16
lcall
mov
jns
cmp
inc
and
ret
or
lock
sub
jae
imul
cltd
das
sbb
insl
lahf
jg
es
ljmp
sahf
lret
pop
and
mov
xor
mov
test
pop
add
leave
push
or
repnz
mov
jns
sub
or
mov
jo
pop
mov
and
jbe,pn
lcall
pop
fwait
lret
dec
test
add
jb
and
and
loope
mov
les
mov
ljmp
or
testb
ret
cmp
push
mov
in
rcr
movsb
testl
std
hlt
mov
std
popa
mov
inc
test
jnp
movsb
es
jno
mov
outsb
cmp
daa
mov
jp
xchg
addr16
inc
mov
fimull
out
ret
or
jp
jbe
sub
dec
ss
iret
je
cmp
nop
xlat
push
sbb
fwait
sub
inc
test
and
xor
cli
into
faddp
cmc
sbb
gs
pop
mov
adc
jne
stc
sbb
push
mov
and
sbb
cmp
mov
push
popf
xor
and
sub
adc
rcrl
sarb
mov
mov
sahf
xor
iret
mov
neg
dec
dec
xchg
int
lret
out
into
and
sub
cmp
dec
or
xor
clc
enter
cmpsb
mov
sub
lods
in
mov
ljmp
cmp
stc
jp
mov
xor
sub
adc
hlt
mov
icebp
jb
test
jb
mov
or
rcrb
fwait
rorl
jns
sbb
call
js
sub
fwait
iret
pop
jle
jno
dec
inc
daa
repnz
jge
sub
pusha
roll
leave
subl
sti
out
sub
rclb
add
aaa
jne
call
xor
sub
mov
nop
repz
fnstcw
jp
clc
sub
mov
and
bts
jns
pop
je
lahf
ja
rcrl
adc
mov
jmp
dec
scas
aaa
aaa
loope
out
xor
lds
int3
in
jl
mov
idivl
fucomip
xchg
cmp
out
or
and
cmp
pop
mov
pop
rcrl
jge
stos
test
fwait
mov
in
imul
push
sbb
pop
into
xor
mov
test
fistl
aam
into
in
cli
jmp
idivb
popf
mov
aam
lods
xchg
outsl
push
in
loope
test
clc
insl
into
jecxz
xor
clc
push
mov
stos
das
mov
xchg
std
inc
test
test
scas
cmpsl
fnstcw
js
fs
ret
mov
jge
in
add
sub
adc
cli
inc
loop
xor
std
xchg
fwait
in
inc
into
enter
imul
or
mov
or
cwtl
xor
and
cmp
fs
popf
mov
adc
dec
sub
jae
mov
ret
jp
sub
pop
pop
and
jb
jne
lret
add
hlt
jge
fs
arpl
jns
and
into
mov
stos
fstpl
add
repz
insb
cmp
push
cmpsb
or
xor
test
or
arpl
dec
add
cmp
imul
mov
into
add
jo
or
jno
inc
std
mov
clc
test
pop
ret
add
in
arpl
mov
loope
in
mov
mov
aad
addr16
in
push
ljmp
data16
test
and
adc
shrb
jne
xchg
pushf
js
dec
mov
xor
jnp
in
pop
leave
ss
subl
insb
mov
cmp
lret
pop
test
lret
jge
add
pop
dec
pop
xorb
xchg
inc
mov
fimuls
cs
loop
push
adc
dec
mov
sbb
imul
adc
xchg
sub
pop
pop
jg
out
scas
inc
pop
arpl
push
shl
repz
shl
popa
cs
fcompl
aaa
addl
int3
cs
push
pop
test
adc
mov
pop
mov
negl
mov
mov
insl
repz
pushf
mov
adc
and
fcmove
cld
add
mov
popf
cmp
adc
ret
mov
imul
or
fs
xor
je
loop
inc
mov
lcall
mov
cli
adc
popa
out
and
xchg
pop
fisubrs
jne
jne
stc
xor
gs
or
popf
fcmovbe
rcrb
mov
pop
shll
rol
out
aas
es
sub
inc
sub
jmp
and
and
push
mov
add
fucomp
mov
mov
push
icebp
into
shll
sbb
sbbb
sbbb
rcrl
pusha
pop
hlt
cld
inc
adc
mov
call
aas
push
xor
repz
repz
cmp
pop
or
pushf
xlat
aas
in
ja
jnp
push
add
jecxz
inc
insb
jae
add
pop
loope
push
inc
fists
sbb
in
in
aam
jno
dec
js
adcl
pushf
adc
fcmovb
push
fnop
in
mov
js
lcall
imull
push
pop
xchg
cmp
or
cmpsl
inc
les
scas
jp
decb
cmp
mov
jae
stc
mov
pop
orl
push
pusha
jne
fistpl
mov
or
outsl
out
mov
sbb
imul
push
cmp
jl
leave
sbb
sub
aam
jne
in
sarl
jmp
sti
gs
fsubs
pushf
pop
rolb
movsl
cmc
push
cmc
daa
cs
movsl
test
cmpsb
cmp
int3
cli
rorl
push
stos
xchg
orl
xorl
jp
fildl
mov
xor
faddp
hlt
test
mov
faddl
mov
loopne
bound
or
lahf
flds
inc
test
jns
call
loope
xchg
out
loop
dec
push
out
inc
rcll
push
pushf
shlb
fdivs
dec
fidivs
mov
or
jg
sbb
rolb
add
loop
adc
decb
sbb
dec
stos
xchg
pop
test
pop
lods
jno
pop
dec
mov
xor
ljmp
pop
mov
inc
loope
ds
lods
adc
xor
pushf
mov
push
push
repnz
scas
mov
push
popf
inc
xchg
dec
sub
cmp
mov
in
js
add
fs
aam
ds
push
adc
xlat
xor
mov
cltd
sbb
sahf
shrb
cmp
ja
dec
fcmovbe
cli
mov
cltd
cmp
pop
lds
outsb
and
ret
xlat
sbb
inc
sahf
out
rcll
hlt
pushf
dec
add
roll
fcmovb
mov
mov
shlb
add
and
out
mov
hlt
and
sti
xchg
jnp
fsubs
push
pop
pop
lods
push
bound
mov
negl
sti
push
cmp
fsts
pop
pushf
inc
add
dec
dec
cwtl
arpl
add
scas
push
mov
lock
jb
inc
pop
fsubrl
loope
insl
fidivrl
movsl
or
test
jb
fmul
cmp
incb
fwait
loopne
dec
mov
enter
imul
cmpsb
xor
cwtl
popf
xor
aas
xlat
hlt
mov
sbbb
inc
cli
mov
insl
movsb
ret
xor
cmpsb
faddl
mov
es
dec
add
ds
incb
repz
xor
clc
dec
push
loop
jnp
mov
jae
les
jecxz
fwait
lahf
cmp
mov
scas
sub
imul
push
or
in
xor
daa
mov
push
mov
push
jae
sbb
mov
mov
popa
push
dec
imul
push
jae
mov
inc
or
idivb
pop
mov
jecxz
dec
mov
xchg
mov
cmc
in
adcb
dec
sahf
aam
lea
sti
jb
pop
cmp
out
enter
je
jmp
pop
call
subb
sar
mov
xchg
inc
dec
adc
pop
insb
mov
xchg
lahf
lods
xor
les
aad
ss
mov
insb
stos
xchg
cmp
adc
jne
push
jecxz
stos
xchg
aas
mov
in
push
dec
test
dec
ficoms
stos
repnz
push
dec
cmpsb
dec
ret
jne
sahf
ds
sub
int3
and
fiaddl
repz
jbe
insb
xor
push
mov
dec
mov
xor
jmp
rolb
xor
fstl
lcall
insb
pop
imul
idiv
dec
push
scas
lret
pushf
popf
vmovsd
adc
cmp
decb
stos
xlat
xchg
mov
and
add
sbb
dec
pop
pop
cmpsb
jae
add
fldcw
lret
and
jns
dec
dec
inc
nop
push
cmpb
test
jl
mov
pminub
int3
lock
je
leave
dec
adc
divb
popa
fisubrs
lahf
add
cmc
insb
jb
mov
xchg
push
ljmp
cld
cmp
or
es
in
push
nop
push
fs
shrl
fadds
add
enter
and
mov
aas
and
sahf
jg
in
jne
arpl
jmp
or
sbb
adc
dec
or
cmp
push
test
inc
fsubr
into
cmp
je
rolb
imul
dec
xor
loopne
fs
inc
mov
cltd
psubb
add
divb
mov
sbb
sahf
loop
iret
cmp
imul
xchg
lds
mov
jecxz
ret
rolb
fbstp
add
shlb
cmpsb
aas
jne
xchg
in
pushf
clc
lds
mov
mov
push
xor
xor
sub
dec
ds
lret
pop
or
insl
xchg
out
test
inc
pusha
fimull
hlt
push
lret
scas
xchg
mov
in
call
pop
push
mov
push
adc
mov
sbb
inc
jle
mov
frstor
add
loope
dec
cltd
cmp
jmp
jg
xlat
inc
pusha
mov
hlt
les
adc
cmpb
mov
xlat
sahf
mov
mov
jl
or
lret
push
rcl
out
push
dec
inc
inc
sbb
ret
std
mov
bound
jecxz
pop
ds
ss
sub
cmc
icebp
jp
es
daa
cs
ljmp
ret
jae
sti
idiv
mov
adc
shrb
icebp
push
mov
pop
dec
xchg
pop
repnz
cmpsl
mov
int3
pop
jl
jmp
and
std
sti
xor
orb
pop
fiadds
lret
lods
rcrb
test
dec
lahf
pop
xor
fdivl
fs
mov
jo
push
dec
inc
in
mov
or
das
sbb
cmp
xor
dec
sti
push
pop
mov
js
jae
xor
gs
and
bound
stos
roll
cs
lock
repnz
lret
pop
jmp
cld
lret
add
test
jae
cmp
push
cltd
jnp
mov
cmpsb
xchg
lahf
icebp
lds
fldcw
fwait
cmpsb
mov
xchg
fwait
sbb
dec
mov
lahf
aad
insl
loope
lahf
sbb
lea
enter
cli
push
fisttps
lret
cmpsl
outsb
xchg
dec
rcr
out
mov
out
cmpsb
xor
pop
add
inc
cmc
and
pop
sub
pop
xchg
jae
stos
sti
cld
jl
ja,pt
mov
shrb
fld
scas
fcmovnb
sbb
mov
aas
fdivrl
rolb
inc
cmp
adc
dec
lock
hlt
stos
or
stc
loopne
xchg
cmp
sbb
divb
fmul
stc
dec
and
fcompl
sbb
outsb
jns
dec
dec
adc
cmp
sahf
addr16
jns
sbb
mov
aas
jbe
mov
rorb
adc
sbb
je
scas
inc
pop
xor
xchg
rcl
xor
mov
jb
hlt
push
in
mov
add
popf
add
mov
xor
push
addr16
jne
push
shrl
std
scas
idivb
js
pushf
rorb
or
test
call
cmpsl
loope
and
mov
pop
mov
xor
movsl
aas
jo
push
test
add
mov
jns
fistpl
mov
test
inc
mov
call
les
into
and
popf
mov
arpl
cmp
fdivs
xchg
sbb
stmxcsr
jo
fs
jg
pushf
repnz
cmovne
xlat
sbb
popf
dec
loop
jbe
stc
subl
mov
jb
jge
adc
shll
add
mov
add
mov
xchg
and
aas
sub
xor
mov
or
movsb
add
xchg
lds
mov
lods
pop
daa
mov
rclb
inc
xchg
cltd
outsl
pop
cwtl
call
popa
daa
out
push
in
popf
mov
xor
cwtl
sbbl
mov
stos
out
xchg
dec
mov
pop
dec
push
ljmp
sub
cmpsl
fs
xchg
pop
push
cmp
insl
adc
fisubl
adc
lret
daa
fnsave
daa
nop
dec
test
jb
dec
lret
xlat
jno
push
cmc
jg
iret
out
fiadds
mov
js
repnz
push
mov
testl
cltd
xor
sub
xchg
jp
or
subb
jns
imul
xchg
fdivrl
ss
in
in
out
sub
cmp
stos
mov
stc
lahf
mov
push
aas
imul
sub
cwtl
sarl
sub
sub
xchg
stc
push
mov
ss
pop
mov
dec
push
fwait
sti
ffreep
lods
bound
mov
mov
xor
int
add
cmp
push
xchg
adc
aam
jmp
stos
scas
or
sbb
in
jo
adcl
push
push
jne
xor
xlat
cmp
pusha
sub
fistps
int3
xor
repz
les
pop
inc
fwait
xor
ret
pop
cmp
xor
xchg
shrl
out
lods
jo
popf
or
jecxz
jnp
cmp
scas
sbb
ret
cmp
xchg
mov
gs
lock
out
inc
out
or
aad
jp
in
and
dec
loopne
es
int3
je
arpl
mov
jbe
push
sahf
sarl
inc
xor
out
jle
push
pushf
jb
xlat
sarb
popa
aam
frstor
jbe
inc
sahf
inc
stos
icebp
ljmp
test
daa
pushf
arpl
dec
push
push
leave
sub
daa
xchg
xor
inc
sahf
popa
repnz
scas
mov
fsts
imul
push
and
mov
or
sbb
in
addr16
xchg
pusha
fsts
popl
adc
or
or
and
pop
out
loopne
xchg
jne
mov
popf
scas
add
add
lea
ss
mov
dec
jne
idivb
mov
out
cmp
jl
loopne
jle
jb
dec
mov
cwtl
xchg
pop
sub
pop
lea
add
in
xchg
ret
outsb
fwait
adc
loope
in
mov
scas
shrl
es
mov
daa
xlat
test
sbb
aas
cmp
ds
adc
repnz
inc
mov
mov
cmp
jge
mov
mov
lea
aad
jnp
xor
in
xchg
xlat
aam
and
jp
xchg
imul
add
xor
dec
push
in
out
insl
jge
scas
xchg
mov
imul
cltd
mov
bound
mov
cld
pop
das
call
lods
shl
leave
test
leave
insb
sbb
lcall
fwait
lock
lret
cmp
add
pop
shrl
std
cmp
ss
mov
jbe
mov
xchg
and
lcall
mov
filds
insb
or
into
leave
lret
dec
cmp
xor
cmp
cmp
outsb
dec
push
or
and
insl
lcall
jb
jno
mov
adc
mov
sub
add
repnz
pop
mov
in
xchg
pusha
out
pop
sbb
sub
test
and
mov
out
pop
mov
andl
adc
mov
xchg
ljmp
jae
jb
pop
and
sub
cld
xor
push
lahf
xchg
mov
stos
sub
mov
cltd
lods
shl
mov
ret
inc
inc
sbb
jecxz
pop
push
stos
jmp
fwait
js
repz
aas
movsl
sub
mov
mov
outsl
jl
filds
lds
adc
cs
sti
mov
orl
pop
mov
xorl
scas
dec
fldpi
cmp
iret
and
test
movsl
sub
mul
lock
shlb
movsl
mov
fs
dec
pop
lea
mov
adc
test
shll
sbb
push
pop
sti
call
mov
xlat
sarb
xchg
ss
gs
mov
pop
pushl
stos
rcrb
dec
sbb
mov
push
outsl
out
add
xor
movsb
and
out
in
test
xchg
mov
xchg
dec
jbe
mov
or
mov
push
mov
sbb
fdivr
or
inc
jbe
and
sub
add
es
imul
pop
in
bound
cmc
jne
xor
stos
pop
std
pop
cmc
pop
in
pop
dec
pop
cmp
es
jo
mov
fldenv
jo
sub
adc
jno
mov
mov
adc
call
mov
sbbb
clc
pop
hlt
push
push
ret
and
mov
ja
push
out
es
inc
dec
out
stc
sbb
popf
aad
push
shrb
dec
rcr
mov
pop
clc
cmp
loop
faddl
fwait
mov
jge
push
sub
inc
push
jae
pusha
xlat
dec
adc
cwtl
mov
jne
pop
scas
push
pop
mov
insl
jle
push
movsb
push
inc
jnp
push
and
dec
dec
dec
rorb
push
sub
xchg
inc
jge
outsl
adc
cli
icebp
mov
repnz
pop
fwait
and
jmp
out
aad
lods
dec
xor
cmp
lock
xlat
xchg
inc
mov
push
stos
insb
call
in
popf
into
mov
pop
hlt
das
push
out
icebp
lcall
cltd
repz
dec
orb
pop
jns
jle
cmpsb
cltd
cs
fistps
test
push
push
iret
adc
es
sarb
jns
repnz
or
bound
mov
stc
sub
mov
ja
je
sub
lods
sbb
dec
push
mov
mov
lds
xchg
adc
add
pop
adc
add
and
aam
idivl
jno
enter
and
mov
aaa
js
bound
add
sahf
and
dec
cmpsb
mov
insl
shlb
pop
pop
cmp
dec
daa
orb
dec
sbbl
or
rolb
aad
daa
xchg
xchg
xchg
shlb
cmpsl
cmp
dec
mov
mov
int3
or
neg
jno
jge
insb
aaa
loope
push
push
or
mov
jl
aas
jge
fwait
mov
sub
stos
jl
mov
xchg
xor
add
mov
push
lds
push
lcall
jl
int
mov
out
sub
pop
pop
inc
push
or
mov
dec
push
jecxz
lret
ja
fs
lds
adcl
add
and
adc
pop
jmp
popa
in
mov
xor
cmp
push
add
adc
je
mov
add
jae
lods
add
iret
xor
bound
cld
jg
jno
pop
in
scas
aas
pusha
mov
ret
int
imul
pusha
push
fldt
adc
imul
push
cld
outsb
push
ss
inc
mov
mov
or
cmp
in
lds
insl
mov
test
push
lahf
cld
movb
fwait
popf
push
and
cmp
fiaddl
jecxz
jp
mov
jns
jne
xchg
fucom
roll
gs
in
fwait
and
ljmp
sub
stos
xor
aam
repz
pop
fxch
cmp
mov
cmp
insb
daa
sub
je
push
add
rorb
fbld
adc
adc
jge
jae
inc
adc
mov
xchg
sub
mov
mov
mov
lea
fistps
mov
test
sbb
cmp
lcall
imul
jmp
in
add
mov
dec
mov
pop
inc
jbe
mov
int
and
mov
sti
push
rol
push
daa
inc
test
shl
xor
psraw
fwait
sti
lea
repz
inc
arpl
rcrb
and
push
jo
dec
or
ficoml
mov
inc
movsl
jmp
scas
adc
dec
int
push
push
imul
mov
stc
push
stos
mull
movsb
aam
lods
sub
mov
dec
scas
fmul
icebp
dec
addr16
push
inc
in
push
mov
push
test
divb
sub
movsl
xchg
getsec
rcll
wrmsr
hlt
adc
mov
dec
push
outsb
adc
push
js
jmp
jp
cmp
dec
movsl
rorb
inc
fwait
inc
aam
xor
mov
aas
aad
dec
sub
dec
cmpl
repnz
pop
sub
mov
je
inc
imul
and
pop
mov
cld
mov
in
jo
cmpsl
push
mov
ss
dec
js
sbb
pusha
pop
sub
das
aaa
or
pop
in
add
adc
dec
sbbl
pushf
out
imul
inc
std
adc
adc
xor
nop
les
fmull
cld
mov
lcall
mov
scas
jge
adc
data16
jmp
mov
add
push
jo
dec
push
sub
enter
ret
mov
xor
cmpsl
pushf
ss
jbe
push
add
jns
xor
fbld
repnz
push
dec
adc
sbb
adc
out
jmp
sub
cmp
pop
mov
cmp
sbb
dec
out
add
and
mov
cmp
xchg
mov
cmp
daa
fcoms
lret
pop
lcall
mov
push
pop
jno
ds
mov
xchg
incb
and
je
pop
les
outsl
adc
and
pop
adc
mov
cmpsl
cmp
jnp
fistps
jge
into
push
mov
fildl
repnz
rol
sbb
cmp
mov
popf
ret
ljmp
sub
xor
mov
jno
xchg
dec
jb
inc
lods
mov
lcall
pop
shrb
pop
mov
inc
das
xchg
adc
push
sub
jbe
dec
or
repnz
lahf
jecxz
shlb
int
push
mov
in
flds
jg
stos
rcrl
or
dec
sub
fiaddl
popf
mov
ficoms
in
cmp
push
or
cmpb
inc
push
ss
mov
xlat
cwtl
jbe
ret
xorb
mov
gs
hlt
cmp
jmp
dec
cmp
lods
jge
test
pop
cmpb
stos
inc
sti
out
pop
and
mov
sub
fnstsw
test
daa
notb
mov
sub
out
mov
mov
jbe
sub
hlt
pop
push
jle
and
aam
and
xchg
popa
jecxz
jmp
push
mov
jge
cmp
mov
mov
out
xor
pop
push
lahf
add
cld
pop
imul
ss
mov
jmp
int3
popa
imul
ror
repz
sub
and
and
fnstenv
lods
jbe
lods
xchg
adc
dec
xor
sub
or
je
xor
mov
cli
sbb
mov
in
dec
popa
cs
popa
push
xchg
je
mov
imul
lods
mov
lock
jecxz
insb
movsl
nop
pusha
ret
sub
jl,pt
pusha
mov
inc
out
loop
mov
dec
sbb
push
dec
push
add
lods
aad
insl
test
dec
ror
dec
aas
int3
pop
jbe
and
add
jns
push
mov
fs
addr16
xchg
ja
and
dec
push
mov
mov
clc
int3
lods
fmuls
adcl
sbb
and
cmp
lock
and
fwait
cltd
adc
sub
sahf
testl
adc
imul
lds
mov
sub
loope
cwtl
or
sti
movsb
add
stos
jb
fcompl
pop
pop
scas
outsl
into
sbb
push
dec
or
lahf
sahf
jecxz
mov
ret
divb
xchg
adc
and
adc
fadds
jb
test
fildl
popa
xchg
ljmp
lret
aaa
mov
dec
dec
movsl
sbb
dec
push
or
add
pop
mov
add
repz
xchg
daa
xor
dec
fists
xchg
dec
cs
ja
insl
adc
sahf
sbb
lret
or
shrl
xor
push
sbb
je
mov
add
jmp
xor
dec
in
jecxz
pop
shll
lea
repz
dec
imul
mov
sbb
pop
lock
sbb
call
jno
shrl
out
adc
cmp
lods
inc
ss
mov
or
mov
push
in
sti
cmpsb
and
add
outsl
push
dec
orb
dec
movsl
dec
inc
jb
pop
push
push
cmpb
sub
xchg
push
or
nop
lods
push
lcall
cmc
xor
lods
addl
sti
mov
test
andb
clc
xor
cmpb
std
in
jae
imul
push
xor
negb
inc
test
cmp
cld
sub
or
pop
mov
repz
movsb
arpl
popl
inc
pop
outsl
cmp
xorb
bound
pop
mov
rcrl
in
inc
popa
push
aaa
jg
xor
jle
adc
lahf
mov
fs
shlb
mov
test
aad
xchg
inc
in
dec
hlt
cmp
pop
popa
xor
and
cmpl
xchg
mov
lret
cltd
mov
cmc
xchg
arpl
pop
inc
add
xchg
mov
dec
ret
unpckhps
shrb
mov
insb
ret
xchg
pop
add
bound
loopne
jmp
int
mov
xchg
lock
mov
push
out
in
jp
test
in
test
inc
lods
out
or
cmp
out
sbb
xor
jbe
std
sbb
jbe
out
mov
or
sub
lret
push
bound
lock
stos
jae
ss
push
add
sti
in
inc
lret
ljmp
dec
xorl
movsl
inc
xor
in
bound
mov
lds
pushf
mov
cli
cmpsl
dec
jmp
mov
cmpb
sbb
loopne
mov
addr16
or
ss
inc
pop
insb
fmull
lods
xchg
ret
mov
ljmp
cmpsl
fs
push
pop
je
cs
gs
aad
push
mov
jae
cmpsb
sub
mov
or
leave
aad
test
in
inc
inc
jns
cmp
scas
add
cmp
or
out
inc
out
aam
xchg
mov
mov
cmp
mov
adc
outsl
adc
cltd
pop
sub
bound
jno
jb
cmp
mov
push
popa
add
mov
popa
in
sub
lea
pop
repz
dec
shlb
test
push
mov
push
imul
aas
in
xchg
int3
es
pop
pop
imul
pop
add
adc
rorb
movsb
xlat
push
movsl
push
xor
xchg
movsl
xor
or
hlt
push
cmpsb
jno
push
mov
mov
insl
scas
or
and
imul
outsl
add
repz
push
dec
or
out
push
in
mov
cmp
lds
fldcw
xchg
jecxz
int3
xor
sti
mov
mov
push
stc
dec
loop
aas
sub
cli
int3
fbld
imul
mov
sub
dec
add
lea
push
add
neg
mov
push
mov
xor
and
imul
jne
test
ljmp
jbe
push
cwtl
dec
test
xlat
cmp
mov
add
jo
xchg
mov
xchg
rcr
stos
nop
dec
add
cs
sar
sbb
loopne
into
xchg
push
sti
push
adcb
rclb
loopne
push
mov
pop
bound
push
mov
into
enter
in
das
cmc
jp
mov
cmp
jmp
inc
cwtl
mov
mov
cmpsl
iret
out
lret
add
push
or
add
cmpsb
roll
push
adcl
dec
out
mov
inc
ljmp
xor
xchg
push
push
or
jl
mov
out
fildll
jl
je
lods
mov
adc
mov
test
mov
adc
rolb
popf
fsubs
fs
lcall
add
add
mov
mov
jb
dec
ds
sbb
sbb
cs
into
in
pop
test
shlb
fsubl
push
sub
xchg
push
ja
jb
scas
jno
dec
pop
stos
sbb
or
inc
mov
fs
lret
pop
mov
fs
push
inc
adc
mov
cmp
jne
or
cmc
cwtl
adc
jo
lea
add
stc
out
sbb
inc
xchg
push
addr16
pusha
lods
lods
jmp
lcall
xorb
fcmove
adc
lds
push
mov
pop
jns
xor
adcl
pop
int
add
sahf
xchg
mov
out
fldt
les
pop
lret
insb
push
lcall
mov
pop
lock
mov
aas
popa
cwtl
out
roll
mov
adc
arpl
lahf
mov
ret
cmpb
clc
push
sbb
push
popa
dec
aas
aaa
mov
test
and
mov
scas
cltd
lret
xchg
add
lret
loop
bound
or
daa
dec
movsl
cmp
ret
in
test
shrb
dec
into
ficoms
dec
mov
and
jge
leave
add
jle
xchg
jle
add
pop
mov
lret
mov
xchg
adc
xchg
loopne
movb
lds
mov
or
dec
mov
je
sti
ret
ja
sbb
push
push
mov
inc
or
stos
stos
mov
cmc
pop
cmp
jge
cmpl
iret
cs
fs
adc
lret
hlt
outsl
xchg
mov
dec
jecxz
adc
outsl
pop
iret
jno
ljmp
out
das
cltd
sar
sbb
pop
stc
jns
pop
daa
int3
dec
popf
mov
and
cld
sbb
repz
daa
cld
lea
shlb
jne
push
sbb
mov
and
loopne
cs
test
scas
out
push
inc
jp
cmp
xchg
xor
push
loopne
push
pushf
push
jo
pop
gs
lods
lcall
je
add
push
or
stos
add
sbb
or
sub
shrb
mov
sub
popa
push
ret
sbb
iret
inc
cmp
mov
add
xor
pop
add
in
jno
stos
popf
nop
roll
push
cld
mov
mov
dec
mov
les
sbb
jp
mov
inc
stc
insb
mov
insl
fcom
fwait
test
jle
inc
lods
adc
in
nopl
dec
dec
fisubrs
pop
or
adc
sub
sub
stc
or
mov
dec
xchg
mov
jae
orb
fnstcw
jp
jo
xchg
add
lahf
inc
andb
mov
stos
cmp
pop
fidivl
loope
js
sub
jae
cltd
inc
cpuid
xor
jb
push
push
xorb
xchg
lods
mov
sbb
lcall
outsb
jne
test
and
out
repz
ja
or
xor
fs
dec
xchg
adc
inc
push
subb
push
pop
add
into
push
arpl
ficoml
ljmp
inc
sti
es
rcrl
pop
ds
mov
add
jl
daa
cmp
je
sbb
mov
in
mov
popf
pop
cmp
shl
test
jo
mov
shll
shlb
pop
lret
cs
mov
bound
stc
sahf
outsl
aaa
test
outsb
lock
mov
hlt
sub
mov
push
jns
ret
and
push
xchg
call
mov
sbb
ljmp
int
cmc
pushf
ret
xor
xchg
std
push
fidivs
mov
aad
pop
lret
dec
out
inc
daa
sbb
cmp
push
cmp
hlt
in
lea
xchg
addr16
andb
scas
ficomps
sub
outsl
call
lock
daa
sti
and
cmp
inc
mov
push
dec
push
in
inc
std
inc
test
xchg
pop
out
pushf
repnz
push
and
sub
daa
lea
mov
fyl2xp1
jae
mov
in
dec
jl
out
test
cmpsl
insb
mov
and
xor
out
enter
pop
cmp
fmul
cmp
pop
adc
fsubl
inc
xor
pop
call
negl
jle
aam
outsl
mov
shr
and
adc
fadds
jbe
push
inc
in
adc
push
int
jg
jmp
fwait
jo
sub
cmp
sbb
scas
and
hlt
pop
jge
xchg
xchg
js
and
jns
mov
xor
leave
push
push
cmp
aam
pop
mov
cmp
sub
aaa
leave
ret
daa
sti
js
cmp
add
inc
imul
cmp
and
xchg
jb
mov
cmp
test
iret
ljmp
pop
cmp
addr16
add
jle
jo
inc
xchg
sub
push
inc
daa
add
mov
mov
jmp
adc
lcall
push
jae
xchg
pop
push
xchg
dec
mov
ss
xchg
pop
dec
js
push
push
jg
stos
scas
dec
xchg
add
or
pop
ja
mov
mov
mov
mov
fisubrs
cmpsb
dec
or
bound
fstpl
inc
hlt
xchg
ss
and
mov
ljmp
fwait
add
in
jl
bound
bound
outsb
and
stos
dec
xchg
cmp
in
mov
inc
call
cmp
enter
hlt
cmp
push
add
icebp
xor
cmp
mov
iret
xlat
adc
inc
out
ficomps
and
arpl
dec
loop
lcall
dec
cmp
xacquire
jmp
push
xor
into
gs
add
mov
repnz
out
out
cli
add
sti
jp
mov
sbb
xchg
outsb
imul
dec
dec
push
mov
fcoms
int
je
adc
insl
jnp
fsubrp
push
xchg
mov
jbe
cmc
pop
js
iret
ja
movsl
ja
call
mov
fldl
outsl
xchg
leave
or
aad
xchg
and
cld
movsl
sbb
xchg
dec
pop
icebp
ljmp
aad
mov
sub
mov
cmp
adc
jmp
mov
add
cmpsb
in
sub
sub
adc
xchg
xchg
adc
sbb
imul
or
lock
addr16
dec
repnz
leave
in
dec
fdivl
shrb
inc
test
out
shr
sbb
lods
test
cmp
dec
lods
and
jl
jo
cmpsb
inc
sbb
push
cltd
push
jne
mov
aaa
xor
or
ljmp
jmp
jmp
psubd
imul
mov
bound
add
fnstsw
in
and
sbb
jge
pushf
shll
lret
ret
out
mov
out
pop
out
stos
jns
sub
ljmp
mov
adc
insb
lret
out
daa
adc
insb
mov
push
sub
pop
dec
adc
jns
and
lds
xor
aad
add
and
insl
dec
jne
scas
xor
push
pop
cmp
push
and
cmpsb
xchg
popf
inc
xchg
test
inc
xchg
sub
push
cli
adc
cmp
cmpsb
or
xchg
xchg
push
loopne
aas
jp
mov
in
push
popf
sub
mov
mov
pop
mov
sub
pusha
das
mov
xor
aaa
lcall
mov
movsl
inc
xchg
mov
xchg
out
sahf
aas
or
adc
dec
insb
xor
out
dec
jbe
out
inc
call
mov
lods
popa
cld
aas
sub
jmp
adc
adc
add
fmul
inc
xlat
rolb
push
jno
cmp
bound
push
in
lret
adc
in
mov
js
sub
inc
sbb
enter
data16
push
shrb
mov
ljmp
popa
mov
out
jle
rep
popf
pop
pop
mov
add
cmp
rcrb
jmp
jne
cmc
call
inc
cmpsl
lock
cli
pop
jl
test
repnz
stos
and
adc
nop
add
xchg
pop
and
mov
ficoms
ljmp
jbe
adc
out
sbb
push
xor
scas
xchg
dec
dec
shl
pop
loop
aas
jne
pop
xchg
lahf
jns
in
lods
aaa
add
cmpsb
jge
loop
pushf
insl
repnz
push
mov
adc
add
mov
fimuls
fstpl
lock
sub
mov
pop
sbb
sub
loopne
test
enter
mov
dec
jb
xor
and
loopne
jle
repz
sbb
outsl
shll
pop
insb
ficoml
add
jne
pusha
fldpi
clc
dec
cltd
cli
gs
push
xor
imul
or
jge
nop
in
nop
mov
add
or
cmp
push
lea
adc
pop
adc
mov
mov
pop
pop
fidivrs
loope
fwait
addr16
addr16
adc
daa
pushf
sbb
push
mov
add
nop
out
shr
call
nop
sbb
lea
pop
mov
pop
fstps
in
in
data16
pop
lcall
insl
or
push
jecxz
adc
cmp
arpl
sub
cmp
sub
inc
ljmp
add
add
aas
inc
test
test
js
ss
push
dec
push
aas
add
inc
cmp
aam
jmp
test
orl
test
imul
stc
and
jmp
adcl
clc
imul
sahf
add
lret
fwait
cs
cmp
sub
mov
pusha
add
sbb
repnz
rclb
xor
jb
cltd
test
flds
push
inc
cmp
popf
inc
popf
push
and
push
stc
sub
test
ror
and
cld
cmpsb
loop
xchg
pop
into
jne
jle
mov
jle
imul
add
pop
pop
cli
insb
adc
cmp
push
xor
sub
rclb
rol
mov
adcl
sahf
clc
xchg
or
popa
shl
sbb
mov
cmp
scas
mov
mov
inc
loopne
in
and
mov
popf
pop
push
mov
jg
testl
ret
mov
inc
mov
inc
and
fwait
mov
sbbl
sbbl
mov
nop
sub
jae
mov
sub
inc
jb
xchg
int3
add
int
dec
push
fsubl
jno
cmp
xor
fists
sbb
pop
xor
daa
sub
add
pop
repz
scas
mov
inc
mov
inc
adc
ds
xchg
inc
add
cmpsb
enter
rcrb
insl
sub
jne
mov
push
rcr
lods
in
sahf
dec
stos
adc
push
sbb
out
xchg
divl
mov
push
outsl
fsubl
pop
fdivrl
or
sbb
adc
add
or
push
fistl
cs
fisttpll
lcall
or
cmp
sbb
dec
ss
mov
outsl
aam
rcrb
insb
lea
repz
xchg
stos
mov
std
andl
stos
jo
cli
dec
dec
es
fcompl
xchg
mov
out
xor
push
cmp
push
fwait
push
rcrb
dec
jecxz
pop
mov
xor
pop
mov
fidivrl
xchg
mov
cmp
mov
jl
sub
fbld
ret
jb
fs
aad
dec
sub
or
mov
out
mov
jge
cmp
mov
pop
and
cltd
mov
dec
scas
pop
ret
dec
data16
repnz
add
xchg
test
mov
sbbl
and
xchg
cld
cmc
stos
scas
ja
adc
and
notb
mov
nop
inc
pop
push
es
mov
ret
mov
or
cmp
pop
adc
and
negl
xchg
nop
jmp
lahf
jbe
sti
mov
mov
xor
outsb
or
or
iret
cmp
push
xchg
fsubp
lahf
cmpsl
dec
mov
pop
lods
pop
and
push
lods
add
mov
test
sbb
xor
add
dec
loopne
mov
das
xchg
pop
sub
in
in
jecxz
je
lds
add
stc
mov
pushf
mov
mov
daa
pusha
push
clc
addr16
adc
inc
xor
dec
ds
pop
mov
xlat
xor
pop
arpl
gs
pop
lds
fisttpl
sub
in
push
adc
std
cmp
push
jne
pop
lret
test
adc
cwtl
out
push
gs
push
xor
stos
stc
stc
popf
cmpsl
push
mov
sub
push
je
test
aas
sbbl
or
push
pop
jno
iret
and
pop
sub
hlt
mov
jno
xor
mov
fimuls
and
out
dec
mov
aam
sub
and
push
jg
nop
sti
or
push
or
pop
in
mov
add
jge
stos
ret
out
int
xchg
pop
xchg
test
and
cmp
mov
movsl
or
mov
jge
rorl
stos
jle
cld
clc
mov
jmp
rcrl
into
popa
scas
sbb
dec
outsb
bound
cltd
call
jo
xchg
push
fistpll
rcrb
mov
fcomp
jmp
sbb
xor
cmp
xor
mov
mov
sub
xchg
dec
sub
jno
mov
jno
push
loop
cmp
outsl
dec
mov
scas
xor
mov
out
cmpsl
mov
push
push
xor
in
sub
in
aas
mov
rcrb
sub
test
fcmovnu
je
sbb
imul
je
ret
jbe
je
adc
icebp
xchg
push
rcrl
icebp
dec
mov
inc
push
aad
add
jge
push
push
insb
add
add
or
push
clc
flds
jle
pop
lret
lock
and
xchg
fucomp
rorb
js
jns
xchg
add
jbe
mov
dec
pop
icebp
add
popf
sub
fiaddl
sub
and
repnz
jmp
outsl
push
leave
pop
leave
out
rcl
outsl
adc
punpckhdq
cmp
mov
dec
inc
shrl
test
inc
adc
xchg
jl
insb
mov
mov
push
f2xm1
sbb
imul
xor
xchg
add
jp
mov
je
incb
jg
sub
fistpl
loop
lds
and
push
shlb
rep
adc
xchg
rclb
xor
mov
push
adc
mov
stos
sub
inc
jecxz
pop
mov
cmp
sub
lret
and
ja
mov
jns
dec
daa
arpl
mov
xchg
out
jp
dec
enter
jl
fnop
and
stc
daa
in
cltd
dec
lret
cwtl
bound
cwtl
in
and
push
add
out
xor
mov
mov
repz
xor
pop
xchg
ret
push
jp
int3
gs
adc
add
inc
xor
aad
mov
inc
sub
fsub
dec
scas
das
sbb
add
add
push
shrb
scas
push
xchg
jle
xchg
scas
inc
push
mov
insl
cmp
loop
pop
sub
iret
mov
fdivl
call
lods
cmp
test
mov
inc
aam
cmp
fadds
adc
push
push
mov
mov
sub
mov
add
add
sarl
mov
cmp
inc
jp
mov
mov
addr16
push
jno
xor
jae
bound
cmp
in
insb
and
mov
sbb
fimull
jbe
pop
dec
inc
test
adc
mov
iret
jge
fnstcw
mov
push
outsb
insb
sbb
fisubrs
bound
addr16
jno
shll
jae
push
cld
add
icebp
inc
inc
popl
dec
adc
leave
stc
mov
dec
iret
xor
orb
stos
fs
sub
mov
jmp
sbb
lock
mov
mov
ljmp
les
aam
jg
lret
fstpt
stos
rcl
hlt
xchg
jae
rcrb
sbb
cmp
cld
aas
jle
xchg
test
inc
mov
inc
adc
call
and
fisttpll
outsb
pop
shlb
xchg
push
and
push
mov
inc
mov
cmp
fisttps
daa
rol
fisubrs
mov
pop
sbb
mov
xlat
xchg
rcl
fisttps
add
mov
mov
enter
push
cmp
lds
add
pop
cmp
gs
cmp
shlb
inc
add
dec
adc
dec
sarl
adc
push
push
sbb
test
xor
enter
add
insb
or
popl
gs
mov
aaa
mov
sbb
ficoml
shlb
and
dec
mov
out
xchg
arpl
pushw
mov
mov
cmc
xchg
push
aad
jno
test
mov
jne
fs
and
and
popf
xlat
adc
xchg
iret
dec
pop
xchg
repz
jecxz
testb
and
sbb
das
sbb
inc
flds
mov
add
xchg
push
ret
adc
add
xchg
dec
push
les
pop
push
js
sub
popf
roll
xor
daa
fnstsw
jbe
mov
js
mov
stos
mov
sbb
dec
mov
insb
or
dec
xor
int
js
stc
adc
lock
fmulp
or
sub
mov
das
das
aas
movsb
es
jmp
loop
or
push
jae
pop
jae
je
sub
mov
jge
jl
pop
test
jecxz
mov
push
clc
es
xchg
sub
mov
fdivr
out
leave
fistpl
mov
ds
xchg
push
lret
mov
jmp
outsl
mov
ljmp
hlt
mov
addr16
cmp
jle
xchg
xchg
mov
ud1
xor
dec
ljmp
xor
addr16
sbb
pop
sbb
ljmp
mov
out
movsl
push
add
pop
out
xor
scas
mov
stc
test
adc
pop
and
notb
notb
mov
dec
cmc
lahf
cs
scas
add
xor
or
or
dec
jae
jle
in
ljmp
das
out
nop
sub
cmp
and
jno
mov
jne,pn
in
adc
stos
pop
lahf
out
int
int3
in
inc
in
mov
mov
and
cmp
lcallw
imul
add
repz
sub
lea
std
dec
mov
decb
push
pop
mov
mov
test
add
pop
imul
sbb
mov
xor
jno
mov
clc
sub
js
das
add
shlb
cmpsb
dec
dec
inc
shrl
ss
mov
ds
xchg
bound
and
add
stos
add
ds
sub
repz
shrb
movsb
jmp
push
cltd
jl
cltd
jno
stos
add
add
and
outsl
mov
jb
jecxz
xor
leave
xorb
cmp
cld
push
cmp
ja
rcrl
stos
sub
lcall
loop
xchg
sub
and
cmovns
add
sbb
lret
add
shl
out
xor
lahf
stos
add
cmpsl
push
push
out
iret
xor
add
leave
ret
ss
mov
jge
xor
fwait
lea
pop
push
jae
or
sub
dec
ljmp
in
mov
cmpsb
js
fisttps
mov
add
daa
push
inc
adc
push
fidivs
cli
add
dec
xor
stos
les
adc
cmc
mulb
cmp
sti
add
lcall
jg
ljmp
and
or
push
add
sahf
in
enter
iret
cs
jnp
sub
dec
outsb
roll
gs
dec
xchg
and
mov
mov
adc
jp
in
push
icebp
xchg
lods
lds
stos
xor
js
stc
inc
lea
mov
adc
out
xchg
psrlq
pop
daa
pop
ret
stos
add
sbbl
loope
mov
and
or
fucom
mov
lods
mov
dec
sbb
push
cltd
xor
and
sub
or
loope
ret
or
stos
add
imul
jg
lods
rorb
xchg
outsl
jp
loopne
bound
addr16
hlt
mov
rorb
xchg
sub
dec
pop
pushf
dec
jmp
lcall
jo
lea
divb
and
cmc
pop
push
mov
mov
popa
leave
sbb
or
outsb
add
jne
dec
fimull
and
sbb
test
movsb
mov
es
xorl
movsl
test
jg
sbb
dec
mov
jbe
data16
pop
inc
fucomip
movsl
stc
sahf
push
jns
push
cmovo
mov
mov
sub
add
xchg
add
cwtl
fidivl
cltd
lret
pop
ja
lods
dec
fsubl
std
test
cs
mov
adc
imul
mov
mov
adc
test
decl
mov
mov
adc
leave
dec
lds
sub
dec
cltd
ds
jb
test
adc
mov
aaa
in
mov
cmpsl
ds
xor
fisttps
shlb
mov
pop
lds
jle
ret
aaa
push
movsl
cmp
or
sbb
int
pop
jmp
sbb
sbb
sbb
gs
mov
das
pop
xchg
or
mov
inc
xchg
sahf
rcrl
and
push
leave
shrb
push
popa
adc
pop
shrl
dec
and
ljmp
inc
xor
ds
push
cmpsl
jmp
cs
ss
xchg
xor
jnp
xor
add
out
jo
add
js
stc
rclb
jle
jbe
aaa
sub
jb
test
sti
stc
nop
xchg
mov
shll
int
add
cmp
aam
imulb
jecxz
test
or
adc
sbb
decl
lahf
jmp
mov
cmp
sti
push
push
xchg
cmpsl
and
in
add
lret
les
mov
je
pushf
pop
add
ljmp
test
ja
xchg
adc
push
add
cmc
mov
roll
mov
adc
pusha
cmc
push
test
jl
ret
adc
ficoml
pop
stos
pop
or
add
push
xor
mov
in
add
in
fiaddl
cmp
dec
call
inc
into
cwtl
inc
test
das
push
jl
add
pop
in
xor
notb
cmpsl
cli
mov
cmpsl
inc
xor
jmp
movsb
call
cmp
popf
insb
out
aad
pop
pop
cmp
sbbb
adc
and
xchg
cmp
loop
adc
cwtl
pop
mov
xchg
adcb
pushf
or
add
mov
mov
enter
xchg
sbb
and
nop
pop
mov
hlt
es
pop
xchg
adc
cmp
icebp
jnp
pop
push
sub
inc
sub
add
mov
out
or
pop
je,pt
sbb
in
cmp
dec
mov
cmpsb
inc
cwtl
test
pop
test
dec
sbb
lret
cltd
or
mov
out
test
lahf
xor
std
jae
es
xchg
jg
pop
stos
cltd
rcrw
add
mov
lahf
xor
mov
outsb
out
sbb
cmp
cmc
xchg
leave
ret
dec
bswap
cmp
push
das
xchg
imul
pop
dec
sub
in
sub
mov
lret
add
xchg
stos
xchg
lret
inc
mov
mov
fdivr
ret
xchg
add
test
adc
inc
in
mov
popf
stc
jl
push
mov
rolb
idivl
fildl
jle
jbe
outsb
lock
mov
subb
xchg
jo
int3
sub
bound
xchg
mov
xchg
or
out
es
add
ljmp
mov
mov
je
or
xchg
adc
jmp
jo
cmp
mov
sub
pop
mov
dec
mov
xor
inc
jo
stos
pusha
out
push
leave
inc
sahf
dec
fisubl
mov
cltd
lea
test
cwtl
xchg
dec
jecxz
mov
adcb
mov
punpcklwd
cwtl
pop
out
push
xor
adc
pop
idivl
mov
repz
sub
sub
mov
jecxz
daa
sub
call
aas
into
mov
fsubrp
mov
xchg
hlt
or
mov
lret
dec
xchg
ret
xlat
cmp
jbe
aam
push
add
shl
mov
popa
cltd
int3
sub
dec
or
stos
push
mov
iret
testb
adc
call
sub
adc
cmpsb
add
push
sbb
cld
add
add
into
insb
and
int
sub
roll
dec
sub
inc
rol
into
hlt
sbb
lock
out
fimuls
cmp
push
sub
sub
ss
stos
pop
xor
and
stos
rcll
or
mov
push
mov
cmp
pop
dec
outsb
cmp
imul
jne
daa
lods
shll
loop
sbb
icebp
push
push
jge
xchg
push
lret
dec
jbe
pop
insl
fs
jl
fstl
rclb
lcall
xchg
test
fists
insl
sub
cmp
shlb
clc
aas
adc
in
xchg
insl
imul
or
inc
cwtl
mov
pop
mov
je
jmp
mov
stos
add
dec
cltd
xor
scas
pop
cmp
cld
mov
pop
fdivl
stos
sarb
loop
mov
arpl
inc
jae
ljmp
imul
and
push
in
out
psadbw
dec
mov
jl
scas
mov
fnstenv
arpl
fchs
sbb
jnp
cmp
je
sub
add
stos
adc
cmp
sbb
lods
jecxz
cmp
rorl
inc
pop
jge
cs
mov
mov
mov
mov
mov
rcrb
jb
dec
aad
popf
xchg
movl
in
aad
ja
dec
xlat
test
inc
lcall
mov
mov
adc
jmp
xchg
out
imul
lds
jmp
adc
push
jmp
jge
arpl
rcrb
lret
data16
sbb
call
arpl
cli
mov
mov
and
sti
call
jns
in
imulb
pop
mov
lods
stc
jmp
icebp
cs
dec
mov
inc
pop
outsb
mov
cmp
adc
or
and
pop
sbb
insl
push
pop
sbb
and
inc
jg
rcrl
in
inc
jno
and
dec
push
mov
add
ja
adc
cmp
clc
lods
mov
test
loope
dec
leave
xchg
shll
addr16
imul
lock
cmp
aad
dec
and
negb
pop
in
add
cmp
out
out
aas
stos
xchg
fists
push
pop
push
data16
jns
dec
mov
xor
jb
push
fucomp
inc
jno
or
loopne
fisttpll
fwait
mov
filds
jno
pop
push
inc
jbe
lret
or
out
push
or
sub
hlt
cwtl
cmpsl
cmovg
and
adc
sbb
mov
imul
mov
pop
jo
push
push
mov
in
jbe
sbb
xchg
loope
out
shrb
popf
das
pop
jns
cld
prefetchnta
mov
enter
shrl
add
iret
or
rcrl
icebp
add
push
sub
dec
fisttpl
sbb
push
mov
out
fsubrp
test
or
xor
inc
pop
arpl
fistps
xchg
jl
mov
int
test
cmp
jecxz
bound
dec
fildl
test
mov
mov
mov
dec
pop
test
mov
pop
clc
pop
fwait
add
push
shlb
xor
out
inc
mov
jmp
addr16
mov
push
rcll
sbb
push
xchg
adc
mov
pop
mov
pop
sbbb
sub
ror
bound
adc
aaa
int
mov
inc
cmp
loop
in
cli
inc
xchg
and
stos
repnz
jge
sub
dec
clc
sbb
mov
sti
sahf
scas
dec
mov
xchg
mov
pop
call
inc
call
in
rcrl
cltd
jbe
ljmp
insb
push
xor
pop
add
mov
and
cld
mov
push
test
mov
xlat
sbb
xlat
pop
dec
push
cli
sarb
pusha
testb
imul
mov
fidivrl
mov
lcall
daa
push
or
lcall
xorb
mov
loope
loopne
jb
xchg
jecxz
movsb
xchg
test
or
push
popa
pop
int3
jge
sti
or
test
hlt
arpl
cltd
and
jae
pop
xchg
pop
lea
loope
repz
lcall
lcall
popa
mov
pop
ss
and
xor
out
aam
dec
inc
popf
outsl
fmul
jl
adc
inc
pushf
cs
jmp
pop
push
lahf
pop
inc
jno
and
mov
xchg
dec
loope
xor
jnp
mov
shlb
lea
sub
je
int
add
movsb
and
xor
ja
jl
adc
and
adc
and
es
lret
mov
cmp
pop
pusha
ds
inc
xchg
pop
push
add
inc
push
sbb
into
mov
adc
shl
cld
pop
lods
in
cmc
out
sub
mov
or
push
mov
mov
arpl
ja
repz
scas
inc
pop
sub
shll
sub
mov
les
cld
cmc
lret
xor
sub
cld
rcrl
jb
fdivr
mov
das
sarb
sub
add
inc
jmp
sub
rcll
lods
xchg
mov
es
adc
inc
adc
xchg
xchg
and
fildl
aaa
lret
add
pushf
mov
cwtl
and
fistpl
mov
cli
imul
jns
loopne
mov
shlb
cmp
pop
sti
icebp
push
fcoml
leave
mov
pop
jp
lea
mov
int
push
dec
mov
and
sahf
lods
and
mov
xor
das
cmp
mov
inc
iret
in
scas
inc
outsl
aam
or
adc
mov
pop
mov
test
sbb
data16
mov
xchg
shlb
and
pop
push
and
jae
jp
pop
lahf
sub
int
mov
push
cmp
mov
sbb
js
jle
mov
add
xchg
aam
xchg
cwtl
jno
les
fwait
ror
dec
icebp
clc
lea
loop
fs
mov
shrb
jnp
sti
fstl
jo
movsl
xor
sbb
gs
movsb
ret
sbb
inc
data16
lea
fdivr
cli
jns
mov
scas
sbb
add
mov
movsl
pop
cltd
or
jns
mov
pop
dec
xchg
jge
mov
xlat
cmp
dec
je
lock
ds
movsb
inc
testl
push
xchg
push
sbbl
mov
into
rorl
push
push
mov
jp
xchg
mov
mov
repnz
enter
xchg
jns
ret
add
aad
in
out
arpl
push
out
test
out
xchg
xor
jo
mov
and
and
mov
mov
adc
cs
sbb
mov
pop
pop
test
pop
sub
dec
xor
clc
shll
fisubs
xchg
jp
ror
ret
cwtl
loop
dec
rcr
pop
inc
cmp
mov
xor
lds
or
mov
xor
jns
insb
dec
jmp
dec
das
xchg
mull
mov
popf
jge
xchg
cmpsl
and
sbb
sub
in
and
sub
ss
mov
sub
shld
out
insb
lret
mov
and
inc
iret
push
xchg
loopne
ret
mov
mov
xor
add
test
dec
sbb
jns
or
js
test
xchg
mov
or
lods
inc
shr
push
mov
data16
mov
dec
je
pop
jge
enter
lret
xchg
cmp
jae
mov
fs
adc
insl
or
push
iret
fnstcw
jl
out
mov
and
cmp
test
adc
pop
out
cmpl
jecxz
es
in
pop
inc
push
mov
pop
xor
mov
jecxz
mov
or
push
movsb
out
xor
cmp
clc
cmp
gs
cmc
lcall
or
call
adc
xchg
and
mov
iret
arpl
dec
xor
mov
jmp
and
push
jmp
shlb
sbbb
pop
mov
cmpsl
dec
lcall
sub
mov
mov
les
cwtl
sub
jg
mov
cs
pop
inc
out
adc
shl
ret
mov
xchg
shrl
out
idivb
adc
lret
and
lods
inc
into
lret
pop
push
outsl
push
lods
lcall
jle
iret
outsb
mov
lret
dec
inc
daa
daa
pop
jae
incl
push
call
cli
in
loopne
mov
sub
jmp
ds
pop
add
loop
jmp
inc
stc
mov
jbe
xchg
roll
lret
lea
dec
lock
push
cld
pop
mov
mov
loopne
push
cmpl
push
lods
inc
sub
sahf
cmp
sub
flds
aas
dec
xchg
mov
addr16
in
sub
test
pop
xchg
cltd
xchg
and
bound
cmp
fnstcw
loop
cs
sbb
call
shlb
movsl
sbb
test
mov
adc
subps
lret
mov
mov
loopne
addl
loop
cltd
rcll
jg
bound
push
pop
fs
movsl
std
cmp
add
std
dec
or
pop
stos
adc
hlt
movsb
add
fcmovnbe
out
hlt
into
xchg
lcall
insl
jbe
and
push
mov
pop
xchg
rolb
loop
mov
mov
repnz
cmc
xor
sub
es
xchg
ljmp
xchg
outsl
and
push
push
in
cmp
adc
mov
mov
fcomp
push
sub
mov
jbe
add
add
aam
adcl
add
push
xorb
loopne
mov
into
sub
mov
add
push
mov
pop
or
mov
jb
insl
inc
aas
cmp
out
pop
mov
pop
xchg
shrl
xor
or
mov
repnz
ss
pop
dec
das
sbb
cmp
daa
out
hlt
mov
mov
ret
jmp
mov
mov
cmp
fstl
sub
pusha
outsb
addb
jno
fstl
sub
cmpsb
xchg
add
lds
adc
and
pop
inc
fdecstp
or
and
add
jb
divl
imul
arpl
adc
arpl
sti
xchg
shrl
nop
fsub
xor
sarl
mov
mov
mov
data16
jns
out
pop
mov
cmp
call
cmp
imul
pop
dec
adc
pop
xor
enter
ffreep
sbb
jge
add
push
mov
mov
fmull
cmp
nop
add
movsl
pop
repz
adcl
inc
add
mov
jmp
xchg
js
mov
into
inc
aam
imul
pushl
add
repnz
ds
pop
insb
orb
ljmp
pop
xor
xor
js
push
mov
jno
pop
sub
xchg
pop
mov
pusha
mov
out
int3
xchg
jne
mov
loop
stc
sbb
dec
inc
jo
ret
inc
cmp
mov
in
popf
jbe
mov
dec
push
loop
pushf
clc
jmp
ret
cwtl
idiv
sub
icebp
nop
int
sahf
int3
push
cmpsb
inc
shlb
push
into
std
xchg
jnp
jmp
xor
adc
rcrb
jge
fbld
push
xchg
jbe
cmp
xor
in
xlat
out
std
insb
mov
cmpsl
hlt
mov
mov
xchg
fcmovnb
xlat
popa
inc
dec
mov
std
pop
mov
inc
pushf
pop
das
pusha
cmc
stos
xor
mov
fnstsw
aas
aaa
popa
sbb
xchg
es
bswap
adc
bound
cmp
and
mov
mov
mov
cmc
cld
sbb
stc
xchg
ja
mov
lock
add
jecxz
cmc
xchg
and
inc
iret
imul
jp
rcll
mov
push
xor
add
dec
sbb
mov
inc
cltd
decb
insl
xlat
int3
dec
mov
icebp
or
in
ss
and
loope
mov
cmp
inc
pop
pop
mov
xor
or
cmpsl
push
dec
or
and
insb
jne
adc
push
sti
jbe
sbb
int
test
add
pop
outsl
mov
nop
popf
lret
pop
mov
mov
out
shlb
call
push
add
fnstcw
pop
mov
in
adc
aaa
movsb
cmp
lahf
mov
sub
push
xor
rcrl
or
pusha
adc
stc
sub
pop
jnp
xchg
push
xchg
orl
fs
xlat
insl
enter
fsub
fidivrs
xchg
cld
sahf
sub
stc
xchg
jo
mov
add
bnd
jle
adc
sub
push
xor
fsubs
lret
divb
nop
xor
cmp
int
sub
inc
in
ja
stos
pop
lods
insb
leave
out
xchg
push
mov
outsl
mov
lds
jge
jns
out
and
js
cwtl
insl
xchg
cmc
add
pusha
pusha
xchg
loope
xchg
pop
cmc
or
mov
xor
sahf
push
cmpsb
decl
lea
mov
repnz
hlt
lret
subb
and
add
movsb
pop
imul
cltd
cmpsl
iret
sahf
aas
in
das
ljmp
je
mov
jae
daa
lea
pusha
mov
ljmp
fcmovnb
dec
cmp
fmul
push
mov
lret
insl
or
adc
mov
xor
insl
mov
sub
into
outsb
mov
popa
push
jns
mov
mov
lods
lods
jae
int
push
adc
filds
lds
repz
jmp
loop
mov
or
leave
sti
loopne
outsb
xor
pop
lcall
call
xchg
fisubrl
mov
sbb
jmp
sbb
sarb
shrb
mov
sub
loop
pop
inc
in
mov
rorb
test
data16
ds
cmp
or
jp
and
push
add
or
mov
ret
xor
add
push
mov
scas
pop
or
adc
sub
daa
or
push
ljmp
xchg
mov
into
idivb
dec
mov
jp
sti
cmp
pop
mov
insb
push
xor
jle
jo
dec
imul
dec
out
lods
jo
adc
xor
popa
mov
sbb
into
test
mov
cmp
loopne
dec
add
cmp
xor
xor
mov
gs
lea
sbb
adc
mov
pop
xchg
dec
jnp
test
cmp
adcb
ljmp
mov
lret
stc
ljmp
inc
loop
cmpsl
stc
cmp
push
lcall
stos
cmovge
cmp
xchg
xchg
push
or
cli
mov
mov
sbb
cmp
xor
mov
cld
xor
push
fwait
test
ret
int
lea
test
mov
push
xchg
add
psubusb
jmp
gs
jae
fstpl
jge
mov
mov
arpl
mov
sarl
ret
scas
sub
sub
sub
jbe
hlt
mov
inc
and
cmpsl
jge
loope
imul
pop
cwtl
push
inc
test
cmp
xchg
jge
aad
pushf
or
fcmovne
in
cmp
idivl
inc
xor
and
push
lods
sbb
adc
std
cmp
xlat
inc
outsb
jl
add
sbb
rolb
mov
dec
sbb
mov
pop
dec
add
lret
sub
aaa
pop
push
lods
sub
cmp
and
push
test
lcall
mov
aaa
in
pusha
leave
fsubl
mov
jb
adc
pop
cmpsb
sub
jg
push
and
pop
or
push
sbb
mov
scas
movsl
lahf
pop
mov
idivb
and
daa
out
fdivl
mov
lock
fmull
mov
stos
cmp
out
xor
jns
stos
inc
pop
mov
scas
cmp
jno
lods
in
imul
sbbb
rolb
fnstcw
mov
sub
lret
pop
mov
popa
popa
pop
fisubrs
xchg
or
or
mov
lcall
mov
xchg
pop
dec
push
scas
sbb
adc
jbe
xor
sub
push
or
loop
dec
sahf
decb
lahf
loopne
nop
into
dec
movsl
jl
xlat
aam
pop
sbb
pop
fmull
jl
dec
xchg
out
lock
mov
imul
pmaddwd
jge
jg
ret
push
dec
jmp
fsts
test
test
out
and
leave
addl
sub
add
fsts
out
fstl
pop
xchg
push
jp
sbb
scas
xchg
sbb
dec
repz
cmc
std
mov
sahf
in
push
add
jg
ficomps
lods
push
repnz
pop
jmp
repz
pop
xor
scas
fisttpl
out
xor
mov
push
mov
arpl
jp
mov
xchg
jno
stos
jns
jp
mov
jb
mov
inc
xchg
mov
xor
xchg
imul
xor
in
inc
pop
les
movsl
fcomip
push
cmc
add
int3
push
lods
cmpsb
iret
sbb
out
lock
iret
push
test
mov
popf
ljmp
fwait
push
das
push
ficomps
mov
inc
sbb
ret
cltd
loope
xor
push
call
inc
and
bound
cmp
dec
into
mov
pop
inc
mov
or
and
mov
testl
je
incb
add
or
jmp
cli
pop
out
jp
push
xchg
lahf
push
js
cmp
in
push
stc
add
outsl
mov
aas
mov
cwtl
sub
or
push
xchg
push
inc
rcl
inc
and
jo
lret
sti
out
cmp
arpl
mov
cld
hlt
popf
xchg
int
pop
outsl
mov
jecxz
fsubrs
jbe
mov
or
push
mov
or
push
js
cmp
fcoms
pop
dec
and
rcrb
aaa
out
adc
pop
adc
push
arpl
mov
movsb
mov
dec
push
jb
cs
inc
adc
push
jbe
dec
icebp
and
cmp
inc
mov
sbb
sub
mov
ret
mov
inc
sbb
dec
sub
fs
sbb
js
roll
aas
jle
xchg
lcall
mul
pop
xor
adc
js
out
mov
or
push
cmp
aaa
loop
loop
lret
lcall
sbb
faddl
add
mov
testl
and
adc
or
inc
inc
cltd
cmp
push
inc
ret
out
xchg
mov
lods
xchg
push
push
mov
cmp
add
jge
sbb
in
test
cli
sbb
mov
adc
nop
mov
jmp
int
insb
sahf
idivl
xor
out
not
push
sbb
ret
insl
or
outsl
leave
add
hlt
add
clc
lahf
lods
lock
into
gs
and
dec
mov
pop
mov
lea
xlat
xor
add
xchg
mov
clc
pop
xchg
pop
enter
icebp
shl
pop
inc
dec
repnz
aad
mov
jo
andb
jno
lret
dec
loope
mov
xchg
int
mov
jg
or
dec
mov
dec
dec
cli
iret
gs
cmc
inc
repnz
push
imul
int3
cmp
pop
outsl
mov
pop
imul
loop
cs
and
pop
notl
dec
xchg
scas
ljmp
popa
addr16
sub
mov
xor
jbe
loopne
xor
nop
sbb
push
xchg
adc
push
mov
or
out
xor
icebp
cmp
out
repnz
or
mov
xchg
adc
sahf
in
hlt
push
push
lahf
mov
sarl
movsb
jb
stos
nop
jae
sbb
iret
aad
stos
jns
ret
pop
out
repnz
dec
pushf
jecxz
mov
xor
mov
dec
leave
leave
out
pushf
pop
pop
rorl
leave
es
test
or
xchg
jo
and
je
in
jne
jns
xor
int3
pop
test
cmp
mov
icebp
fidivrl
cmpsl
jne
movb
xor
fidivrs
xor
andb
adc
or
into
lds
and
lcall
inc
mov
lret
fs
mov
pop
jae
xor
jbe
xor
mov
push
pushf
repz
cmpsb
add
adc
add
in
rcrl
movsl
bound
cltd
inc
jecxz
test
mov
or
int
pop
cwtl
add
sti
lret
and
xorl
clc
sbb
cmp
in
mov
enter
dec
in
xor
xor
sub
jne
mov
mov
jbe
es
adc
push
js
mov
jns
and
fbstp
adc
rcrl
sub
nop
daa
icebp
imul
icebp
mov
cs
jmp
daa
sbbl
rcrb
xchg
pop
ret
cld
pop
das
cmp
jo
icebp
movsl
jp
imulb
outsb
mov
and
dec
lods
divb
jl
out
adc
icebp
insl
cmc
pcmpeqd
mov
and
pop
sbb
gs
add
dec
or
ss
lods
icebp
mov
and
addr16
loope
jne
mov
fwait
ljmp
jecxz
jb
jnp
addr16
mov
jmp
sub
jp
cmpsl
in
pop
scas
addr16
dec
pop
pop
push
aad
icebp
dec
arpl
add
xor
xorb
mov
jnp
aad
cmpsl
lods
jae
mov
cld
pop
mov
clc
in
scas
mov
test
je
push
leave
add
stc
fnstsw
ljmp
test
sbb
mov
jo
fsubrl
dec
and
ret
lds
movsl
jp
cmp
bound
scas
cmp
stos
imul
cltd
mov
cmpl
insl
outsb
decb
jnp
filds
jnp
mov
pop
hlt
add
mov
mov
data16
push
push
aas
test
ds
ss
dec
cs
imul
flds
xor
iret
sbb
jne
xchg
lahf
and
mov
loopne
xchg
sbb
test
cwtl
mov
mov
mov
in
ja
mov
mov
addb
push
insb
push
push
cwtl
clc
xor
adc
cmpsl
xor
xor
cltd
rorl
push
jecxz
imul
lret
mov
adc
pop
xor
pusha
dec
dec
inc
dec
imul
dec
test
sti
sbb
pusha
sbb
pusha
adc
sbb
outsb
pushl
xchg
inc
ret
add
aas
mov
cmpsb
int3
lahf
adc
scas
andl
scas
in
mov
xor
clc
aad
xlat
in
pusha
test
roll
sbb
dec
or
aam
pop
popf
sbb
scas
aam
lock
cmpb
int3
addr16
push
xchg
es
in
ss
jo
xchg
fs
cli
icebp
mov
cs
out
insl
cmp
in
pop
les
xlat
inc
arpl
mov
xchg
xchg
xchg
bound
notb
out
fldt
sbb
sub
push
cwtl
loope
bound
push
push
push
jbe
mov
outsb
dec
and
lahf
jmp
cld
arpl
xor
out
pusha
rorb
stos
mov
pusha
pop
pop
inc
nop
pusha
add
lock
loop
xorb
aam
or
and
fnstsw
test
mov
mov
sbb
push
pop
jbe
fiadds
jbe
lret
aaa
scas
mov
in
iret
leave
out
pusha
addr16
sub
dec
jnp
cmc
imul
pop
movsb
mov
jg
das
add
movsl
sahf
enter
fstpt
pop
cld
lea
lds
inc
xchg
inc
add
or
cwtl
jae
jns
mov
push
loope
out
aas
fadds
mov
xor
mov
mov
add
rcrb
shlb
sahf
repnz
cld
inc
mov
clc
repnz
loopne
jo
cmp
mov
das
push
pop
mov
push
arpl
jo
push
mov
sub
and
or
mov
xlat
cmp
xor
dec
cmp
test
jae
lcall
loop
push
popf
mov
outsb
dec
mov
lods
jae
fidivrs
cwtl
out
mov
fimull
icebp
scas
sbb
les
add
enter
cmc
mov
or
mov
movsl
mov
xchg
push
insb
movsl
jno
pop
xchg
mov
nop
cltd
scas
outsb
jge
sub
movsl
pushf
push
stos
xchg
mov
adc
mov
loop
in
cmc
xor
xor
add
out
jmp
xor
cmp
jb
lret
or
lods
pushf
leave
cwtl
pop
fwait
ja
inc
push
fidivrl
push
in
mov
jge
sbb
xlat
pop
push
xor
outsl
inc
stc
rcll
jg
mov
out
and
pop
jge
popf
ljmp
out
dec
sub
mov
scas
jl
jne
or
xchg
imul
sbb
imul
jl
gs
daa
mov
outsl
mov
lods
cmc
iret
xchg
lcall
jecxz
xor
push
push
inc
popf
add
sub
mov
cmc
pop
popf
inc
ja
lahf
pop
dec
shlb
mov
mov
add
repz
shl
in
pop
cmp
stos
scas
lock
daa
imul
xlat
popa
dec
shlb
xchg
loopne
push
mov
jbe
dec
mov
dec
or
pop
adc
mov
push
dec
bound
mov
xchg
cmp
cltd
ljmp
iret
out
mov
pop
mov
cmp
fimull
cld
in
pop
and
sbb
or
bound
and
out
lods
arpl
jo
call
int3
cmpsl
sub
in
pop
lock
sbb
incb
repnz
stos
add
mov
inc
jb
xchg
xlat
aaa
xor
and
int3
fsub
pop
jle
push
cltd
subl
pusha
dec
repnz
inc
xor
or
or
sub
loopne
jno
sub
sub
jmp
adc
push
jb
mov
leave
pop
imul
decl
adc
push
adc
sbb
movsl
or
mov
pusha
mov
andl
sub
mov
cli
lea
xchg
xor
dec
inc
cmp
adc
push
mov
pop
dec
ret
push
test
ss
cmp
dec
push
jl
das
lods
dec
pop
mov
adc
xchg
loop
cli
pop
jg
loope
int
popf
mov
jo
jmp
sub
sbb
in
test
into
hlt
xchg
dec
movb
icebp
push
sub
push
push
fdivs
xchg
rclb
push
cld
out
sub
and
dec
call
xlat
scas
rcr
pusha
mov
loope
paddusb
je
pop
sub
mov
push
cmpsl
arpl
push
mov
lods
in
jns
jne
in
movsl
pop
mov
jbe
push
jne
pop
lahf
fdivr
cmp
cltd
aam
pop
cwtl
pop
inc
pusha
lret
cmpl
adc
enter
or
cmp
sbb
sub
xlat
cmc
cmp
lods
push
mov
pop
lods
mov
inc
sub
je
pop
and
push
mov
ror
out
adc
dec
xor
pop
jg
insl
loop
adc
insl
inc
push
cld
imul
mov
faddl
lahf
dec
inc
push
push
jo
xor
or
jle
pop
hlt
pop
les
push
outsb
cmpb
and
scas
popa
subl
popf
xchg
cltd
cmpsb
xchg
test
lods
pushf
ljmp
sti
and
daa
outsb
inc
fnstcw
je
mov
fsub
popf
or
xor
inc
adc
in
cli
mov
sub
sub
aam
lds
sub
adc
addr16
popa
lds
or
lods
das
jp
test
sbb
add
ret
aas
in
push
rclb
xor
mov
pop
push
cmp
inc
dec
gs
ljmp
xchg
stos
shrl
push
in
loopne
popf
addb
rorl
push
data16
shll
jmp
jle
push
flds
mov
lea
xor
sub
xchg
sbb
pop
daa
cli
into
arpl
popa
and
adc
setge
lock
inc
mov
push
popf
or
mov
xchg
aaa
arpl
sub
mov
xchg
enter
sbb
js
data16
mov
movl
sti
sarl
rolb
imul
sub
or
sub
cwtl
in
push
push
clc
bound
jbe
mov
jecxz
cli
mov
cmpsl
jl
xchg
inc
adc
in
jo
shlb
or
fadd
xchg
sahf
push
mov
lcall
xchg
fdivrp
jb
imul
popa
mov
adcb
mov
xchg
movl
mov
fs
dec
sbb
mov
push
ja
outsb
das
xchg
out
test
int3
jb
inc
shl
dec
aas
scas
bound
pop
xchg
shll
push
mov
add
int
cmc
roll
negb
mov
das
pop
aam
add
xchg
mov
push
lea
or
adc
xor
inc
mov
and
pop
imul
jns
sbb
clc
mov
dec
xchg
les
stos
xchg
je
in
out
mov
push
xlat
into
ljmp
addr16
outsl
pop
loopne
adc
pop
das
lea
popaw
xor
pushf
cmp
lret
inc
cmp
and
cltd
pop
leave
mov
sarb
push
mov
dec
xchg
mov
dec
cmpxchg
js
mov
sbb
jns
or
sbb
aam
pop
stc
sahf
das
xchg
mov
inc
sbb
inc
and
adc
test
adc
shlb
jo
sbb
sbb
jmp
mov
mov
arpl
loope
and
and
mov
in
xchg
mov
das
cmp
inc
mov
outsb
cs
push
cmp
cmp
sti
sub
pop
pop
test
gs
inc
cmpsb
lods
and
xchg
insl
clc
and
loop
adc
mov
push
fs
clc
js
jae
push
jno
into
enter
xchg
mov
sub
sub
pop
cmp
ss
jae
mov
jmp
sub
sbb
mov
xchg
pop
dec
push
adc
xor
mov
xlat
push
and
sbb
sbb
es
ljmp
pop
mov
bound
push
jge
jp
xchg
popa
sahf
test
fstps
adc
cltd
jo
rcrb
loope
mov
sbb
jge
les
and
jge
ss
adc
mov
cmp
pop
or
dec
stos
fldl2t
test
and
mov
outsl
outsl
sbb
dec
jecxz
ss
lods
mov
xchg
ficomps
sub
xchg
and
adc
loope
jns
push
pop
dec
pop
inc
add
loop
sub
js
inc
int3
test
je
and
mov
pop
add
les
ret
adc
and
mov
jl
mov
stos
fildll
ficoml
xor
mov
cmp
pop
cwtl
sub
loop
popa
mov
ret
dec
and
and
cmpl
mov
xchg
dec
test
or
and
mov
sbb
mov
xchg
fstpt
insb
mov
enter
xchg
sub
ja
cmpsl
push
pop
xchg
std
sbbb
mov
lock
scas
xlat
in
xor
add
std
push
stc
int
shrb
sar
test
int
int
mov
sahf
pop
outsl
scas
lods
or
cmp
xchg
rorb
mov
sbb
and
mov
sbb
pop
rcrb
imul
and
mov
mov
mov
daa
push
lret
fwait
loopne
andl
add
inc
shl
adc
or
mov
adc
mov
cmpsl
add
inc
mov
out
out
negb
mov
ret
fcomps
mov
daa
cwtl
push
scas
out
inc
sbb
outsb
pop
lea
fs
cld
sub
dec
pop
std
jg
mov
add
inc
fs
nop
ja
push
fistpl
gs
mov
sti
dec
or
jmp
push
ret
cli
in
push
fs
lods
sbb
or
sbb
xchg
lods
add
pop
insl
jmp
dec
pop
dec
sub
jne
jle
mov
rorl
xchg
or
mov
and
call
jne
xor
xor
sbb
push
jae
adc
jge
ficoms
cmp
inc
xchg
sbb
rorl
cld
pop
mov
stos
rorl
adc
push
mov
push
mov
push
and
lods
not
mov
negb
xor
pop
sbb
sub
lods
xor
in
mov
or
mov
bound
nop
enter
mov
fcoml
notl
test
stos
in
out
orl
sbb
mov
push
mov
jmp
rcll
daa
in
test
sbb
add
ljmp
and
outsb
outsb
ret
mov
lret
mov
mov
jns
mov
jmp
jg,pt
mov
loopne
loopne
push
push
shll
adc
add
fisttpl
packssdw
pop
jno
pusha
add
xchg
aam
push
pop
inc
dec
das
xor
sub
loopne
jmp
rolb
pop
add
dec
cmp
das
out
std
inc
mov
sub
jg
addr16
ljmp
inc
dec
mov
hlt
mov
loop
push
test
xchg
sbb
mov
in
sub
fcompl
in
mov
mov
ds
mov
mov
je
cld
xchg
xchg
xor
test
dec
sub
add
jmp
mov
mov
xor
jg
pop
sti
adcl
adc
leave
aam
outsb
dec
inc
es
push
ret
jl
ljmp
adc
testb
push
push
pop
fdiv
mov
sub
adc
jns
xchg
push
shl
mov
lcall
xchg
sub
mov
loope
cltd
mov
mov
rcrb
dec
cmp
xchg
jbe
into
rcrl
lds
push
in
sarb
xor
js
les
test
push
mov
fnstenv
out
jae
mov
decb
lahf
or
jnp
push
xchg
add
stos
popf
fimuls
inc
aaa
add
mov
jecxz
mov
pop
scas
mov
sbb
inc
imul
add
jo
aaa
xchg
int
pop
jnp
lret
popl
fidivl
cli
mov
inc
inc
sbb
jp
fldt
push
dec
sub
pusha
or
push
and
dec
lcall
in
lret
mov
mov
inc
cmpl
jmp
xchg
push
mov
lds
imul
xlat
in
test
pop
jp
xor
pop
aad
or
dec
sub
xor
loope
fs
mov
out
mov
scas
cmp
dec
or
sahf
sub
lods
insl
sub
daa
pusha
sarb
lds
and
sub
jmp
movsb
loope
aam
lock
into
xor
xlat
dec
lcall
ja
pop
sub
jo
iret
inc
test
sub
lea
mov
push
mov
repnz
xor
mov
repz
jl
idivl
push
inc
and
xchg
mov
inc
outsb
xchg
inc
pop
pop
lret
aam
mov
cmp
in
xchg
bound
bound
sub
cmpsl
mov
push
lods
add
stc
fwait
and
jne
add
push
repnz
pop
dec
shr
jbe
in
adcl
ja
imull
mov
xlat
ret
mov
and
pop
test
cmpsl
adc
dec
mov
inc
mov
movsl
scas
pop
jecxz
out
push
inc
push
les
jl
jge
inc
adc
jmp
in
clc
ja
add
test
jecxz
outsl
test
add
cwtl
jmp
jno
orl
dec
pop
xor
mov
faddl
pop
fimuls
xor
daa
sti
iret
sbb
mov
sub
fdivp
add
scas
sbb
addr16
daa
lahf
xchg
imul
mov
pop
rorl
aaa
fwait
lods
xchg
test
add
push
or
push
jno
cmove
mov
cmc
aas
pop
dec
loopne
lods
stc
lahf
repnz
xor
gs
push
lcall
iret
inc
cmpsb
and
loope
int3
scas
mov
inc
xor
cmpsb
test
ja
jmp
call
ja
jno
scas
nopl
mov
scas
sarb
aaa
mov
jnp
orl
sub
inc
mov
je
mov
dec
cmp
test
stos
add
into
pop
lret
or
pop
test
mov
cs
aad
mov
add
dec
dec
rcll
jecxz
in
pop
xchg
jns
lods
pop
mov
out
pop
rcrl
sub
mov
or
lock
into
add
scas
or
mov
out
je
repz
outsb
int3
cmpsb
fisttps
insb
sub
int3
lret
roll
loope
and
mov
dec
xor
fs
aaa
fsubl
xchg
repz
add
rcll
nop
int3
dec
repnz
or
loop
xchg
sub
stc
clc
fsubrs
addb
in
mov
mov
pop
test
dec
ret
and
jl
sub
test
inc
or
sahf
mov
lods
mov
lcall
jne
cmovp
inc
repz
pop
iret
adc
cmpsl
mov
adc
dec
pop
and
mov
mov
imul
cmp
cmp
loop
addr16
ficoms
arpl
inc
fiaddl
sub
jne
jle
inc
adc
pop
in
popa
repnz
pop
or
jg
test
xchg
movl
cmp
lcall
inc
pop
pop
testl
pop
ret
js
clc
pop
data16
cltd
sbb
xorl
mov
jb
shl
ss
push
xchg
xchg
inc
xchg
aad
mov
cmp
sub
fimull
fcos
outsl
orl
and
push
sub
sub
mov
jmp
cld
xchg
adc
ret
xchg
insl
pushf
int3
mov
jge
push
or
push
fiaddl
in
mov
cmp
add
fstps
cmpsl
out
popa
xor
or
mov
pop
ljmp
pop
and
push
sub
sbb
negl
movsb
fnstenv
sarb
xchg
fs
loopne
mov
bound
or
es
xchg
mov
sbb
xor
jecxz
rorb
cltd
repz
lcall
sbb
fists
add
out
imul
cwtl
sbb
out
addr16
aam
cmpsl
fldl
dec
daa
jle
int3
leave
fwait
pop
dec
icebp
xor
scas
stos
jge
and
out
adc
addr16
lock
adc
bound
decb
sarb
roll
stc
jnp
jae
add
add
lods
dec
inc
jno
andl
sbb
shl
imul
rcll
rcrb
fcomp
and
jg
mov
call
aaa
rcrl
das
ljmp
xchg
mov
iret
cmpsl
mov
pcmpgtb
dec
add
popf
pop
movsl
push
cmp
and
mov
fcomi
outsl
and
test
js
push
push
ljmp
or
dec
cmp
push
and
inc
stos
das
jp
imul
divb
mov
mov
test
xchg
push
movsb
les
pop
mov
add
pushf
filds
cli
adc
or
repz
dec
pop
icebp
ret
test
insl
addb
popf
pop
or
stc
mov
jns
in
pop
int3
cmp
sarl
cmc
push
loopne
stc
stos
sub
addr16
pop
cmpsl
mov
inc
xchg
in
mov
scas
cmp
jbe
arpl
stc
xor
filds
add
iret
pusha
fwait
sub
cmp
lsl
pusha
pop
and
sti
cmp
xchg
push
xorb
jge
jmp
stc
mov
test
sbb
jns
jle
adc
faddl
xor
or
je
out
dec
push
sbb
lods
mov
mov
xchg
dec
inc
lahf
lds
xor
lret
or
adc
sbb
mov
add
mov
cmovns
out
pop
mov
stos
paddw
dec
mov
jmp
fisttpl
hlt
xchg
ds
xchg
push
maxsd
pop
jl
call
mov
loop
xchg
xor
lds
push
fwait
pusha
sbb
sahf
fsubrp
mov
pushf
lret
imul
loop
std
aam
jns
loop
cmp
cmp
imulb
cmp
mov
out
push
mov
into
or
in
mov
mov
inc
cmp
mov
dec
jg
ret
ret
mov
lods
int3
outsl
movsl
xchg
in
or
inc
cltd
addr16
sbb
dec
xchg
or
xor
pushf
aaa
out
push
lcall
mov
out
lods
divl
push
xchg
gs
lahf
mov
mov
bound
adc
adc
jns
test
or
mov
les
cmp
jne
movsl
cmpsb
cmp
outsl
push
popf
loopne
enter
jl
ja
stc
cmp
test
stos
stos
ror
les
sub
jge
jg
and
jbe
aad
mov
sub
cmp
sbb
mov
push
sbb
lahf
cmpsl
cmp
push
scas
aam
push
aad
call
mov
and
fadds
inc
pop
sbb
bound
test
int3
mov
push
jle
cmp
das
imul
std
cmp
pop
sub
xchg
daa
cmp
adc
and
imul
in
stos
sbb
inc
les
sub
sub
jge
enter
xor
add
outsl
inc
out
dec
je
stc
mov
dec
fdivs
xorb
mov
out
fisttps
leave
or
in
jae
add
dec
data16
hlt
out
jae
addr16
push
fsts
cld
movsb
nop
mov
jl
pushf
mov
and
mov
stos
add
call
lock
outsl
pushf
add
xchg
push
push
xchg
mov
sub
sbb
cmp
sub
jne
cmpsl
mov
inc
mov
mov
movsl
loopne
stos
idivb
fidivrs
es
mov
fnstenv
fistpll
inc
xchg
cld
imul
dec
lods
inc
mov
imul
dec
jle
mov
daa
out
push
adc
and
xor
mov
lock
fdivrl
xor
out
test
enter
mov
dec
sbb
outsl
jl
jb
lods
out
push
rcr
out
leave
adc
pop
out
test
pop
fsubl
fbld
int3
xor
xchg
cmp
jnp
inc
push
imul
repz
jno
iret
fs
fnstenv
pop
jl
add
and
xchg
dec
xor
pop
push
movsb
sub
xchg
clc
mov
lods
sub
and
push
add
sti
add
xor
xchg
xor
ret
xor
pop
in
out
inc
gs
mov
xor
shlb
mov
das
add
lahf
cld
or
xchg
jns
test
push
xchg
cmp
or
inc
pop
adc
sbb
dec
call
adc
repnz
push
test
xor
cltd
and
nop
loopne
sub
fisubrs
data16
lcall
pop
je
into
dec
jmp
arpl
adc
pop
cmp
ret
sbb
push
dec
mov
jmp
jl
xor
daa
fidivrs
pop
repz
leave
lcall
cmpsl
add
sbb
push
push
mov
jmp
add
xchg
rcll
jl
and
movsl
loopne
stos
repz
fadd
int
inc
mov
mov
cmpl
push
lcall
cli
sub
mov
jle
int
pushf
dec
outsb
callw
lods
cmp
mov
cmpsb
and
and
jg
fdivrl
enter
fldl
shlb
sbbb
mov
push
subb
leave
std
push
jg
sub
sbbl
inc
push
sbb
dec
outsl
mov
cmp
inc
cmp
and
das
pushf
inc
add
jo
adc
add
dec
add
out
les
push
lods
out
outsb
shlb
cmp
and
push
test
imull
rorb
std
testl
mov
push
pop
popa
lret
pop
xchg
lcall
xchg
lcall
sub
or
cmp
es
push
mov
je
sbb
jecxz
js
repz
mov
stos
adc
into
or
enter
add
shlb
inc
push
sti
pop
xchg
sbb
outsb
and
jb
and
fwait
mov
lret
fcmovnu
jne
push
inc
aas
and
lahf
das
jno
jl
pop
mov
dec
dec
jle
inc
xchg
mov
mov
push
outsb
cli
mov
and
aam
call
sub
popf
lcall
adc
subb
cmc
in
and
sbb
mov
jg
jb
sbb
mov
dec
outsl
enter
dec
out
mov
mov
xlat
clc
push
cld
sub
in
or
popa
pop
loop
movb
pop
icebp
dec
cli
sub
pop
insb
cmc
sbb
cmp
cmp
mov
inc
cmp
nop
jp
sub
jb
dec
adc
add
sahf
iret
stos
sub
ret
jne
out
and
leave
add
ret
clc
test
cmp
enter
mov
rcr
fiadds
std
mov
xchg
sbb
adc
aad
test
es
stos
movsl
push
jnp
repz
lret
jg
mov
pop
popf
mov
fstpt
mov
cld
mov
repnz
dec
ficoml
cmp
dec
or
loopne
fmuls
sub
mov
or
mov
push
mov
ret
sub
pop
sbb
sti
lahf
dec
mov
pop
pop
xor
in
outsl
clc
data16
pushf
push
dec
or
mov
or
movsl
push
mov
lret
sub
push
insb
mov
jnp
pop
mov
inc
lret
das
movsb
sub
mov
lods
in
inc
mov
push
mov
jno
popf
inc
mov
fsubrp
pop
ljmp
mov
popa
push
and
fidivrl
adc
int3
add
add
hlt
pop
xor
arpl
cmpsl
push
add
sahf
xchg
sbb
sti
jl
xchg
and
or
std
push
sub
jne
dec
imul
mov
stc
orl
fidivrl
cwtl
or
test
dec
movsl
sub
sub
in
mov
push
imul
loope
add
fwait
int
gs
push
sub
loope
mov
push
outsl
add
xlat
and
fistpll
mov
sti
scas
inc
push
int3
sbb
inc
or
mov
cmp
cmc
das
inc
ret
ljmp
insl
push
xchg
lahf
xor
mov
scas
cmp
icebp
and
xchg
fsubrl
pop
shll
jbe
mov
and
ss
or
xor
pop
or
adc
mov
icebp
fdivrs
ss
dec
adc
mov
xchg
adc
sub
hlt
lcall
xor
adc
or
ret
sbb
adc
arpl
js
dec
aad
dec
int
cmp
jo
fisubl
cmp
inc
inc
icebp
sub
imul
cli
push
xchg
mov
push
outsb
dec
aam
mov
repnz
and
mov
add
dec
out
sub
stc
jo
jmp
pop
jecxz
rcr
mov
cwtl
mov
adc
push
push
xchg
pop
in
or
lea
arpl
sbb
je
and
jne
ds
adc
push
pusha
pop
mov
pusha
insb
iret
mov
pop
dec
mov
cwtl
pop
dec
cld
fcmovbe
out
push
lock
push
inc
add
push
xor
inc
sub
popa
icebp
insl
das
jo
mov
fs
sbb
ret
std
jo
sahf
cmp
inc
test
aas
or
inc
les
je
mov
xor
cmp
lahf
les
pop
push
jnp
cmc
and
mov
out
push
ja
rcll
push
or
test
gs
pushf
aam
ret
sub
or
dec
lahf
lahf
push
mov
adc
movsb
push
shlb
popa
rcll
jmp
jle
push
inc
mov
mov
mov
popa
xchg
mov
push
test
leave
or
adc
mov
mov
sarb
and
xchg
sub
arpl
loope
mov
xchg
inc
outsb
push
or
or
pop
xchg
sti
lock
cmp
add
sbb
mov
sbb
incb
fnstcw
mov
pop
mov
and
add
xor
sbb
imul
jmp
scas
cwtl
push
push
inc
pop
ret
xor
and
or
test
sbbb
jge
or
cmp
scas
xchg
push
cmp
pop
loop
inc
stc
test
addl
pop
rcrb
xchg
lock
pop
sbb
add
pop
adc
mov
and
xor
jl
movsb
popa
sub
adc
jecxz
inc
imulb
add
jmp
mov
push
pop
in
inc
sti
or
fildll
ret
pop
aam
cld
adc
pop
js
fisubl
jno
movsb
inc
add
cmp
int3
mov
jp
lods
imul
insb
pop
mov
sbb
ja
int
mov
push
cmc
out
dec
inc
iret
adc
mov
cmpb
jmp
mov
push
sbb
pop
xor
clc
xor
xchg
shll
ss
mov
lock
lods
mov
adc
adc
add
pop
sub
sub
enter
xchg
fninit
mov
stc
inc
lods
push
stos
push
jp
xor
jecxz
xchg
call
pop
out
cli
xchg
incb
idivl
lock
push
mov
ret
sbbb
or
repz
lret
push
mov
popa
push
outsl
movsb
movsl
iret
mov
movsl
insb
fneni(8087
jmp
into
lea
add
outsl
sahf
pop
mov
or
xorb
push
shrb
aad
xor
fcomps
inc
stos
pop
jae
sbb
sub
out
fmull
xor
pusha
sbb
pop
outsb
push
dec
popf
xor
sbb
iret
pop
mov
inc
fnstcw
lock
sahf
fdivs
pop
ss
xchg
cmp
dec
pop
adc
call
pop
mov
cmp
jbe
inc
push
int3
push
push
fwait
sbb
sub
mov
or
inc
dec
dec
cli
notb
test
mov
test
pop
data16
inc
test
stos
sbb
mov
sbb
loop
fsubp
push
je
xchg
or
pop
insl
pop
pop
add
xchg
push
adc
or
test
imul
pop
leave
testb
adc
andb
jmp
push
lock
mov
cmp
mov
loopne
ret
sahf
scas
clc
mov
jp
subb
add
mov
rcpps
mov
mov
ds
mov
adc
orl
or
add
mov
sub
loope
pop
je
sub
pop
add
xor
sub
push
stc
inc
imulb
aad
movsl
jmp
out
xchg
lods
out
cmp
mov
xor
sti
jo
dec
xchg
cmp
sarb
icebp
imul
sbbb
xchg
enter
and
cmp
in
cmp
adc
cmp
push
mov
rcll
iret
pop
mov
mov
hlt
adc
in
push
sahf
sub
imul
pop
and
popf
add
add
cmp
popa
inc
adc
and
push
int3
mov
lcall
call
fsubrl
leave
loopne
add
movsl
int3
aaa
cmpsb
inc
cltd
sub
adc
stc
into
push
rcll
into
pop
add
stos
push
cmc
setg
dec
insl
in
stc
pusha
std
sub
scas
mov
iret
sub
ds
test
xchg
inc
inc
push
pop
cmp
mov
mov
or
sbb
adc
mov
push
sub
jno
add
xchg
in
push
inc
out
mov
call
cmc
lcall
jno
or
mov
fldt
jb
inc
mov
dec
les
in
fbstp
jmp
repnz
arpl
sub
pop
add
jmp
lods
subl
push
or
fisubrl
pop
cmp
or
push
lahf
push
push
in
int3
jecxz
imul
or
rcrl
xchg
mov
cli
imul
dec
clc
xor
sub
arpl
adc
in
in
cmp
leave
pusha
fdivs
add
pusha
aad
xchg
insb
mov
std
fwait
ljmp
pop
and
mov
icebp
repnz
testb
and
mov
call
push
aad
xchg
push
push
mov
xchg
sub
cmp
mov
mov
jns
pop
fsts
cmp
mov
xor
fstpl
push
movsb
sti
add
mov
or
dec
inc
pushf
loopne
jcxz
les
dec
inc
pushf
std
cmp
adc
pushf
orb
mov
imul
cmp
dec
inc
pop
dec
cwtl
sbb
add
jns
cmp
stc
lret
test
pop
jmp
cld
sbb
sbb
dec
mov
aad
xchg
cmp
sub
int
jbe
iret
or
sti
imul
xchg
cmp
testl
jb
lock
lahf
sub
cmp
jmp
jecxz
dec
inc
pushf
mov
jmp
cld
jmp
xor
xchg
nop
mov
jl
jmp
inc
in
sahf
out
sbb
movsb
outsb
cmp
add
aas
in
imul
jmp
rdpmc
mov
sbb
cmpsl
and
aad
enter
cmpsb
or
stos
jecxz
test
jecxz,pn
push
dec
xchg
insb
call
xchg
add
add
imul
or
dec
lock
pushf
adc
test
test
lcall
push
aaa
pop
aaa
cmpsl
lcall
roll
jb
push
fcmovnbe
inc
jecxz
push
stos
jns
cld
imul
adc
dec
cmp
adc
loopne
lds
push
sub
mov
inc
cld
imul
sub
pushf
push
out
scas
cmp
scas
sbb
mov
rcrl
outsl
fsubrs
mov
pop
popf
lods
xchg
nop
mov
mov
flds
lret
aas
repz
mov
sahf
mov
adc
pop
test
aam
js
dec
je
dec
mov
cmp
daa
popa
mov
arpl
push
stc
cmp
add
mov
mov
std
pop
nop
daa
mov
and
xchg
dec
mov
mov
push
pop
mov
adcb
jnp
add
aaa
xchg
popa
fldlg2
xchg
push
ret
dec
sub
xlat
jbe
xor
xchg
pushf
ljmp
xor
or
sarl
or
and
dec
push
outsl
dec
mov
sbb
rclb
xchg
push
dec
mov
loop
jne
jg
and
add
out
test
cmp
adc
mov
jmp
adc
insl
test
popa
xlat
aam
insb
movsb
sub
inc
cltd
inc
mov
mov
push
xchg
adc
push
pmaxub
mov
int
pop
push
push
add
ss
ds
cwtl
jecxz
jge
inc
je
nop
fldl
cltd
adc
ds
sbb
mov
popa
lds
test
jmp
add
pop
sbb
pop
out
fldenv
jae
lret
int3
popf
insl
xor
add
adc
pop
jnp
fwait
ret
mov
jmp
lods
inc
out
lahf
out
inc
jge
ror
pop
je
cmp
push
dec
lret
add
xchg
lea
test
outsb
shlb
mov
mov
unpcklps
push
aad
jmp
daa
shlb
sti
or
fisubrs
push
in
or
es
lods
mov
aas
test
in
leave
and
test
nop
out
popf
into
sub
imul
cs
pop
fildl
jno
lods
jp
xchg
push
stc
clc
lds
sub
mov
inc
add
popa
mov
mov
jns
push
ret
adc
pop
add
cmp
adc
aam
jns
xchg
adcl
push
push
ficoms
lock
in
pop
mov
or
and
lcall
add
jns
jmp
test
cmp
dec
or
push
clc
mov
loopne
es
nop
adc
imul
add
jbe
sub
outsl
xchg
sub
outsb
sbb
stc
and
or
inc
cmp
and
dec
or
and
fisttpll
xchg
jbe
clc
mov
xchg
add
dec
pop
faddl
xchg
cmp
pushf
pushf
push
pop
test
fidivrs
xchg
xchg
add
push
push
xchg
xchg
push
aaa
sbb
jp
cmc
lods
nop
fiaddl
jmp
int
fisttpl
loop
mov
cmp
push
push
pop
shrb
fiaddl
jns
lcall
mov
xchg
sbb
pop
push
sbb
out
gs
mov
mov
andb
mov
inc
out
movsb
loopne
inc
movsl
into
adc
dec
es
shrb
and
xor
pop
clc
jle
jns,pn
sti
out
imul
inc
out
xchg
les
add
mov
test
sarl
cmpsl
cmpsl
xchg
push
jb
lret
jo
push
repnz
cmc
mov
jo
sub
xchg
lea
cld
adc
sahf
shll
aad
and
sahf
js
cmp
arpl
fnstcw
scas
dec
ja
push
arpl
mov
jp
cmpsb
inc
lds
mov
aas
inc
xchg
ljmp
sarl
cmp
fcom
aam
push
leave
or
inc
jns
popf
stos
loopne
outsb
dec
dec
xchg
out
adc
jb
daa
xlat
mov
lods
sbb
das
mov
cmp
mov
or
inc
arpl
jmp
movsb
mov
aam
mull
dec
add
and
push
add
test
in
cmp
mov
insb
lds
ja
outsb
stc
pop
mov
jnp
add
cmp
xchg
lahf
out
in
dec
pushf
inc
mov
push
add
nop
rorl
cltd
push
xchg
scas
pusha
mov
idiv
aad
stos
shlb
mov
inc
jae
adc
int
jo
icebp
icebp
lock
mov
push
mov
cmpl
stc
into
jno
lock
dec
xchg
fs
mov
xor
xchg
cmp
fcmovu
fmul
roll
mov
incb
jl
fsts
lods
add
ret
lahf
int3
ficomps
js
jns
ds
mov
mov
je
jbe
insb
nop
pop
inc
jns
pop
pop
sbb
movsl
out
ret
inc
rolb
xorl
jne
jbe
shrb
add
sub
mov
or
loop
xor
sbb
lods
add
jg
loop
mov
xchg
arpl
rol
mov
xor
lea
addb
xor
cmpsb
mov
sub
and
mulb
daa
jne
loope
std
jns
insl
lret
push
jnp
repnz
adc
sub
jae
cmpsl
aam
dec
movsb
push
mov
sub
int3
cli
add
xor
mov
inc
and
mov
mov
insb
push
nop
dec
pop
mov
inc
mov
scas
ss
inc
sbb
shlb
sbb
mov
pop
mov
shrl
inc
push
pushf
scas
movsb
pop
lret
xor
adc
js
dec
shrb
xchg
test
idiv
mov
jne
push
xor
adc
xchg
pusha
or
es
ret
push
int
rcrl
test
mov
data16
outsl
test
inc
cmpsb
mov
xchg
xchg
inc
and
mov
fstpl
jae
addr16
stos
push
loope
cmp
push
jbe
std
leave
xchg
imul
jecxz
andl
insl
aad
jo
out
xchg
xor
ret
xchg
popf
test
jge
lods
andl
arpl
lds
sub
cmp
adc
cmc
sahf
fwait
inc
sub
sub
push
inc
mov
xchg
push
cli
push
in
rcr
push
mov
mov
popf
out
fwait
inc
mov
and
stc
sub
xchg
in
lahf
xor
mov
aas
cmc
adc
xchg
xor
addr16
scas
daa
push
popa
jg
fs
int
pop
pushf
lods
iret
mov
bound
cmc
lret
cmp
movsb
pop
mov
sbb
mov
sarl
hlt
cmp
push
out
cmc
shrb
mov
mov
jmp
fs
test
roll
dec
pop
sahf
jns
pop
bound
cwtl
mov
cli
cmp
movsb
lds
in
inc
aam
sbb
and
mov
pop
cmp
jae
push
lods
jge
sarb
ja
dec
fldl
mov
cmp
mov
adc
push
jns
and
dec
jle
or
jp
hlt
into
fldcw
mov
jmp
leave
hlt
mov
inc
dec
jne
and
push
jmp
pop
push
rol
cmp
push
punpckhwd
sub
fimull
jmp
inc
shll
cmc
and
jp
out
aaa
cli
cmp
mov
shrb
icebp
std
in
std
stos
aas
add
mov
cmp
add
or
and
jbe
aas
cwtl
fcmovnbe
xor
pop
jne
in
pop
xor
inc
adc
bound
inc
mov
xchg
jl
ficoml
jmp
jns
dec
cmp
out
ficoms
or
add
lods
out
push
ja
mov
inc
mov
nop
and
in
iret
mov
es
xchg
cmp
pop
adc
ja
sbb
insl
jbe
sub
xchg
push
add
xchg
cmc
xor
lea
test
add
xor
mov
insb
sub
sub
add
daa
jecxz
and
insl
and
push
les
jg
icebp
jmp
movsb
ss
pop
push
ss
cmp
xchg
dec
js
push
ljmp
lcall
idivb
pop
scas
leave
ds
sbb
addr16
rorl
cmp
pop
push
inc
fimull
sub
mov
jo
pop
inc
cli
xor
scas
pop
mov
mov
imul
lods
add
mov
into
lahf
fisubrs
add
pop
out
inc
out
jno
cmp
fndisi(8087
mov
pop
fildl
aad
daa
int
int
jp
mov
cwtl
repnz
jb
mov
cmp
jo
mov
popf
out
mov
test
push
sbb
mov
dec
sub
mov
jecxz
pop
pop
in
pusha
push
or
insb
push
rolb
mov
push
ret
sbb
and
sub
xor
movzbl
movzwl
mov
xchg
lea
movzwl
add
or
xor
mov
imul
lea
sub
inc
mov
mov
dec
jne
imul
mov
mov
mov
pop
movzbl
mov
pop
and
lea
pop
add
or
or
dec
movzwl
inc
inc
mov
mov
mov
or
add
ret
push
push
lea
mov
push
inc
inc
mov
imul
add
lea
push
inc
dec
dec
dec
push
lea
or
sub
movzwl
inc
dec
inc
push
mov
mov
add
push
or
mov
xor
sub
and
push
add
inc
push
mov
dec
pushl
add
call
imul
add
imul
inc
add
movzwl
and
dec
inc
pop
ret
dec
mov
cmp
jb
and
xor
inc
dec
mov
inc
mov
inc
inc
inc
sub
add
dec
inc
imul
add
mov
lea
add
cmp
jb
sub
pop
lea
dec
xor
sub
add
sub
lea
and
lea
add
imul
imul
inc
inc
xor
inc
xor
imul
mov
dec
xor
test
jbe
sub
mov
sub
mov
inc
mov
add
sub
lea
dec
mov
and
lea
sub
mov
lea
dec
movzbl
mov
imul
add
mov
dec
and
xor
mov
mov
imul
dec
mov
inc
and
mov
mov
lea
mov
lea
mov
add
dec
dec
jne
lea
mov
and
mov
mov
imul
add
inc
mov
inc
or
mov
inc
dec
mov
add
dec
dec
dec
dec
mov
inc
lea
test
jbe
mov
mov
inc
xor
dec
add
dec
add
dec
imul
mov
movzwl
dec
add
imul
inc
mov
sub
mov
lea
sub
dec
and
lea
and
mov
inc
add
movzbl
mov
mov
add
mov
inc
and
add
movzwl
mov
or
mov
movzbl
xor
movsbl
mov
lea
imul
mov
sub
inc
movzbl
inc
xor
add
inc
jmp
push
and
inc
mov
dec
movzwl
mov
inc
inc
movsbl
and
lea
add
sub
lea
or
mov
mov
lea
sub
xor
lea
mov
mov
inc
mov
sub
lea
mov
dec
mov
movsbl
movsbl
and
add
mov
movzwl
sub
inc
dec
cmp
je
lea
mov
sub
push
lea
call
call
add
inc
call
call
inc
dec
lea
or
inc
inc
sub
ret
sub
mov
pop
imul
ret
push
or
lea
mov
dec
mov
push
lea
inc
push
or
push
movsbl
push
mov
imul
mov
add
dec
call
inc
push
mov
inc
xor
lea
sub
imul
neg
lea
imul
lea
inc
dec
movsbl
mov
add
mov
mov
sub
imul
inc
dec
mov
dec
je
mov
mov
dec
mov
lea
lea
mov
lea
dec
inc
or
repnz
and
add
add
mov
jmp
mov
add
mov
inc
xor
lea
imul
lea
lea
dec
and
mov
movzwl
add
jmp
into
scas
lret
xchg
sbb
loopne
cmc
sbb
cmpsl
pop
add
mov
jno
mov
popa
adc
jmp
pop
jecxz
rorb
push
and
add
push
and
cmp
dec
test
xor
cmp
xlat
or
add
xchg
int3
cmp
jae
shll
mov
cli
int
cmp
xlat
ret
subb
popa
rclb
iret
lret
xchg
loop
cmp
push
or
fldcw
pop
sbb
cmp
dec
xor
test
inc
repz
xchg
nop
xchg
xor
mov
jo
mov
or
aad
adc
lret
in
dec
or
mov
mov
loop
pushf
adc
stos
int3
gs
mov
adc
mov
dec
repz
inc
inc
and
jge
mov
mov
scas
pop
cmp
popf
push
mov
push
addr16
cmpsl
mov
xchg
or
mov
sbb
mov
and
sbb
lods
aaa
sub
cmp
xor
scas
push
or
push
stos
and
pop
cwtl
addr16
inc
fdivl
sbb
jns
dec
mov
fildll
and
ret
out
inc
cmp
fdivl
and
outsl
cmpsb
add
jno
test
stos
int
fsubs
push
dec
es
stos
jnp
inc
and
jl
cmp
inc
test
daa
mov
xchg
mul
xlat
lods
mov
cmp
mov
push
icebp
icebp
sub
imulb
arpl
fs
stos
es
push
mov
mov
dec
lcall
pop
or
daa
adc
push
movsl
mov
xchg
lods
jl
sub
inc
movsl
lret
mov
cmc
fsubrl
jmp
das
adc
aas
mov
xchg
out
push
xchg
xor
divl
dec
pop
dec
fidivrl
mov
cmp
pop
lahf
push
xchg
dec
jb
daa
dec
mov
mov
cmp
shl
inc
mov
mov
stos
xchg
hlt
pop
add
mov
scas
xor
cmp
and
fsubrp
sub
or
jl
push
mov
stc
hlt
in
lret
add
ljmp
sub
jb
pop
popa
lret
or
xchg
jne
add
shrl
hlt
mov
pop
dec
inc
add
icebp
movsl
pop
xor
pop
add
out
cmp
xor
int
fnstenv
sub
jle
rolb
mov
sbb
out
aam
or
sahf
pop
jl
ss
xor
cmp
imul
jo
in
into
rol
pop
jbe
orl
andb
mov
mov
pop
lret
jbe
pop
add
ljmp
and
add
push
rcr
in
out
xor
dec
xorl
jp
and
rcrl
xor
ror
aas
sbb
mov
shl
loop
mov
xchg
and
mov
push
jl
jle
dec
roll
lods
bound
add
mov
mov
inc
arpl
cmp
sbb
into
xlat
aas
lods
mov
inc
cwtl
mov
arpl
xchg
and
xlat
inc
sbb
icebp
mov
scas
xchg
inc
mov
pusha
jl
jecxz
push
icebp
test
das
xchg
movsb
jmp
sub
cmp
adc
add
or
mov
and
test
jb
cmc
out
push
aam
pop
jle
ja
loope
rorb
sub
testl
jne
into
divb
divl
fcoms
xchg
imul
lock
cmpsb
sbb
jmp
mov
in
subl
cltd
dec
adc
ficoml
pop
pusha
mov
out
daa
jbe
mov
push
daa
cltd
jecxz
mov
adc
mov
repz
sub
pushf
fstps
jnp
inc
std
mov
out
arpl
notb
dec
fldlg2
adc
sub
sub
gs
cmp
xlat
and
subb
js
sti
mov
aaa
rol
bound
nop
lret
push
jae
popa
cmc
mov
xor
jmp
shl
sbb
stos
or
mov
call
fmuls
pop
fldl
shll
fwait
or
cmpl
sbb
test
movsb
cltd
fidivrl
pop
add
int3
inc
pushf
xchg
cld
das
jle
call
mov
push
outsl
mov
shr
cmp
lret
cmp
inc
out
and
jns
and
sub
mov
push
notb
add
enter
mov
jae
out
rolb
add
inc
pop
scas
test
pushf
push
xchg
cmp
es
pop
inc
je
clc
outsb
sahf
dec
inc
pop
cmp
cld
divb
dec
push
fidivrs
jmp
out
int
push
mov
or
mov
and
cmpsb
imul
xchg
mov
inc
xchg
ljmp
push
mov
jmp
and
mov
lds
shl
shl
cmp
sbb
push
sub
inc
adc
lret
xchg
cs
adc
xor
push
lahf
pop
inc
or
dec
das
loop
mov
pop
jo
repz
clc
bound
loop
pushl
into
pop
xor
jno
ja
mov
test
ficoms
aam
push
scas
dec
inc
sarb
ss
cmpsl
push
mov
mov
orl
adc
pushf
add
inc
mov
cmp
movsl
cmpsl
mov
jle
push
stc
and
out
jmp
mov
out
shll
mov
xchg
lahf
xlat
in
repnz
mov
jecxz
cltd
pushf
mov
sbb
cmpsl
pusha
jo
dec
push
xchg
loop
dec
xchg
and
mov
sub
and
leave
fisubl
sub
into
std
loopne
gs
loop
sub
cmp
adc
or
mov
add
shll
jmp
inc
cmc
leave
lds
pop
mov
fisttpl
ficoml
rcrl
xchg
pushf
inc
sbb
and
fcoms
cli
notb
nop
xor
cmp
sbb
lret
loope
enter
pushf
test
fwait
xchg
xchg
xchg
cmp
dec
fxch
rep
xchg
mov
xchg
jge
cmp
mov
movsb
shlb
adc
lock
repz
mov
mov
leave
sbb
mov
inc
test
mov
jbe
lret
and
sbb
mov
pop
adc
jle
push
xchg
sub
sbb
int3
aad
dec
inc
repz
push
cmp
add
add
sbb
aam
imul
out
jno
stos
add
dec
in
mov
xchg
test
es
cmpsb
cmpl
ret
dec
pusha
data16
test
jbe
push
jecxz
sub
mov
sub
stc
gs
mov
lcall
xchg
sbb
lret
and
int3
sub
push
and
leave
aaa
cli
data16
xor
adc
in
rcl
sub
cli
adc
fmul
mov
mov
dec
cli
call
inc
push
insb
and
and
dec
cmc
push
ret
mov
mov
fwait
and
sti
loopne
hlt
je
push
bound
push
adcl
xchg
jb
sbb
sar
loop
movsl
cmp
cmc
into
cmc
fistps
or
xorl
sub
mov
push
mov
dec
insb
cmp
xor
cmpsl
or
aas
lahf
xchg
mov
adc
fiadds
ja
sub
cs
ja
push
push
xlat
mov
aam
jp
adc
mov
inc
push
mov
in
adc
stos
mov
shl
cmp
lds
fwait
pop
iret
mov
adcl
jo
rcll
movsl
sbbb
aaa
shrb
mov
xor
mov
lret
mov
dec
pop
sbb
out
mov
popf
pop
icebp
mov
jecxz
mov
xchg
xchg
call
cs
aam
fstpl
out
scas
arpl
cmp
jo
imul
scas
xchg
arpl
xchg
inc
pushf
dec
xchg
out
add
addb
imulb
sub
arpl
mov
xor
dec
addr16
add
sub
movsb
data16
inc
sahf
or
cmpsb
xchg
dec
jl
lds
fiadds
mov
out
push
push
ret
push
xor
jnp
pop
push
inc
loope
pusha
sbb
std
pusha
ljmp
outsb
mov
xchg
jne
or
dec
xchg
outsb
jl
push
mov
in
subl
xchg
cli
cli
mov
xor
push
cwtl
rcl
sbb
ds
adc
pop
loope
add
adcl
aad
pop
fwait
push
sub
lret
pop
xor
cli
cwtl
push
and
movsw
mov
pop
cld
xchg
nop
lret
push
shlb
sub
inc
scas
xor
push
mov
cltd
shrl
dec
adc
insb
sbb
rcll
jb
rcr
adc
xchg
or
dec
or
mov
jno
adc
push
mov
out
shlb
mov
dec
dec
dec
dec
xchg
add
mov
sbb
sahf
rcl
sti
jne
push
xor
cmp
mov
ret
mov
pushf
clc
aad
push
and
or
in
inc
or
inc
push
lret
jns
xchg
subl
insb
adc
cmpsb
mov
adc
mov
repnz
dec
inc
addr16
cmp
insl
stos
lds
cmp
push
push
jecxz
mov
or
xlat
dec
jge
xchg
test
shll
aam
pusha
out
mov
and
jno
xchg
or
mov
fdivl
cwtl
pop
mov
mov
push
movl
ljmp
mov
mov
sti
add
lods
test
xchg
or
inc
sarb
cltd
int3
enter
push
mov
lds
popf
mov
movsl
arpl
sbb
cltd
xor
sbb
adc
jne
int
dec
aam
cwtl
popf
mov
dec
jp
pusha
imul
out
xor
xor
shr
sub
pop
push
test
sub
sub
add
out
popa
inc
mov
ret
mov
jno
inc
cmp
dec
add
lret
fwait
push
xor
popa
ret
pushw
jns
pop
inc
sub
mov
jbe
mov
pusha
out
or
scas
cmc
out
mov
leave
push
aaa
xor
sbb
loopne
pushf
lock
ljmp
xor
or
cmp
addr16
add
or
popf
sti
adc
xchg
push
sahf
adc
jno
jae
shll
add
cwtl
pop
xchg
xor
je
jno
push
sbb
jge
fnsave
mov
dec
xchg
sahf
adc
inc
dec
inc
push
aad
in
aas
add
sub
in
imul
lods
pop
jae
jne
adc
mov
mov
sti
int
fisubs
pop
icebp
loope
nop
les
jl
adc
fst
notb
jno
add
inc
mov
cs
mov
ds
jbe
leave
nop
call
pop
into
sbb
mov
dec
fldt
int
repnz
lods
pop
shl
arpl
pop
and
cs
cltd
push
dec
jle
pop
adc
ja
stos
cmp
cwtl
dec
add
mov
adc
lcall
mov
push
xor
xor
sub
pop
jmp
or
push
cltd
xor
jecxz
xchg
mov
loopne
movsb
aaa
jne
js
mov
jge
lcall
pop
movb
mov
add
sarl
add
loopne
int
push
xchg
shl
dec
sti
jmp
sahf
rcrl
nop
shll
out
das
mov
or
lahf
jb
cmp
lret
test
jecxz
mov
lret
mov
dec
cs
icebp
imul
lea
cmp
loop
test
jne
outsb
test
fwait
and
mov
lds
imul
lds
in
mov
xchg
mov
cwtl
mov
testl
mul
lods
je
cmp
popa
pusha
sub
or
js
add
roll
scas
popf
mov
xchg
dec
push
int
in
lock
imulb
and
jecxz
mov
mov
call
push
and
pushf
aas
inc
add
in
jg
test
jle
push
cmp
fwait
jg
dec
adc
sar
pop
xlat
dec
cmp
jb
jno
dec
and
push
cld
jno
and
mov
lahf
push
pushf
mov
push
jmp
jno
push
adc
push
or
mov
push
push
std
call
idivb
idiv
loopne
pop
or
adc
jae
hlt
push
in
test
jmp
xor
adc
adc
nop
adc
or
jnp
les
mov
mov
js
fidivl
inc
fmull
lea
dec
lcall
sub
stos
and
cmp
test
and
pop
aam
out
adc
rcrl
aad
sbb
xor
push
jne
stc
nop
cmc
cli
push
adc
inc
sub
inc
pop
jnp
and
adc
sub
arpl
adc
xchg
push
std
cmp
das
inc
pop
cmovnp
jnp
dec
push
es
rcrl
push
sub
movsl
and
fbstp
andl
mov
repnz
adcl
sbb
cwtl
jge,pn
in
lret
jmp
xchg
sub
jns
xchg
mov
sub
pop
jp
test
std
push
xor
es
dec
nop
fdivr
jmp
fsubp
mov
lcall
rcr
xchg
imul
xchg
jb
lods
mov
lea
adc
adc
cmc
in
aad
pop
lods
xchg
in
cvtps2pd
sub
fildl
ljmp
mov
pop
mov
lds
lahf
jae
data16
cmc
dec
mov
ss
xlat
adc
mov
sub
inc
call
mov
inc
call
push
add
call
dec
mov
imul
and
mov
call
inc
xor
add
add
sub
mov
inc
inc
mov
add
dec
movzbl
movzwl
inc
call
dec
add
xor
dec
mov
call
dec
sub
call
imul
mov
inc
mov
imul
mov
inc
inc
pop
dec
imul
inc
add
xor
pop
xor
dec
pop
sub
inc
sub
mov
pop
dec
and
mov
add
imul
add
add
dec
pop
inc
mov
pop
mov
movsbl
mov
imul
movzbl
call
sub
mov
sub
sub
ret
imul
add
push
mov
mov
push
imul
add
push
lea
mov
push
add
sub
push
inc
add
mov
imul
imul
push
sub
ret
push
mov
push
dec
lea
dec
inc
push
mov
add
dec
call
pop
ret
jmp
mov
movzwl
pop
pop
ret
push
imul
dec
mov
inc
dec
dec
or
dec
mov
imul
inc
inc
sub
sub
dec
dec
add
dec
inc
inc
dec
imul
dec
lea
movzwl
pop
ret
sub
mov
mov
inc
mov
mov
dec
add
mov
mov
dec
mov
movswl
add
xor
mov
inc
mov
add
mov
inc
dec
mov
mov
dec
xor
lea
cmp
jb
imul
push
dec
lea
push
inc
and
push
lea
mov
xor
mov
mov
xor
sub
inc
xor
add
add
push
lea
dec
push
lea
inc
pop
mov
add
lea
movswl
mov
mov
dec
movzbl
mov
dec
xor
inc
lea
mov
inc
dec
mov
sub
sub
movzbl
add
sub
lea
add
add
or
add
imul
movzbl
inc
add
dec
inc
add
inc
inc
mov
movswl
add
dec
jmp
add
inc
add
push
add
sar
inc
add
adc
add
cs
add
movl
add
xchg
jb
add
shll
sahf
call
cmpsl
outsl
out
cmp
testb
out
adc
stos
or
mov
call
push
jnp
inc
and
xchg
xchg
imul
bnd
inc
das
push
mov
mov
push
icebp
mov
mov
mov
fldt
daa
xchg
cmp
popa
dec
stos
mov
xor
mov
mov
rep
fisttpl
mov
int3
mov
mov
setnp
pop
pop
adc
lock
jnp
cmpsl
pop
gs
outsl
scas
xchg
scas
mov
cli
mov
stos
idiv
xchg
imul
sbb
adc
sub
jae
mov
jg
leave
xchg
mov
leave
or
dec
xlat
pop
loop
sub
enter
je
push
mov
loop
out
int3
lods
pop
mov
mov
adc
adc
xchg
stos
and
mov
nop
push
adc
repnz
movsl
ret
cmpsl
pop
das
cmp
cmpsl
lret
aas
data16
sbb
or
jb
stos
jne
jecxz
enter
ret
mov
add
mov
leave
ret
mov
sbb
and
push
mov
repz
adc
inc
add
sub
mov
and
and
popa
inc
bound
jmp
loopne
mov
std
repnz
jmp
push
cmpsb
xor
fisttpl
outsb
pop
fsub
jl
pop
mov
sbb
fldenv
add
das
dec
xor
lcall
test
scas
adc
lods
test
pop
push
loop
dec
sbb
xor
roll
sbb
mov
sub
lea
jbe
movsb
mov
jl
cs
sti
out
mov
dec
cmp
aad
out
mov
and
inc
es
out
popa
pop
or
xor
mov
pop
repz
jge
push
iret
dec
insb
sahf
push
cld
nop
loop
pop
fs
lcall
or
rcrb
mov
lods
sub
pop
fs
cmpsb
add
ss
push
inc
int3
scas
mov
mov
adc
in
xchg
clc
or
jns
in
pop
cmpsb
les
dec
insb
xchg
rcr
popa
sub
inc
xchg
cmp
xchg
mov
aam
scas
imul
outsl
lahf
jmp
test
fucomip
test
mov
fucom
test
xchg
gs
add
adc
loop
cltd
cmp
call
xchg
cltd
adc
fs
arpl
sub
scas
dec
mov
cwtl
mov
sbb
in
insl
push
xor
xorl
adc
inc
push
sbb
dec
add
rclb
testl
lcall
cmp
icebp
push
or
jge
inc
in
and
aas
insl
adc
lahf
fists
movsl
dec
and
imul
xchg
sub
int3
jne
xor
jo
xchg
inc
dec
fists
pop
pop
in
nop
loope
and
out
hlt
je
js
imul
in
negb
sub
pop
inc
loop
shll
pop
movsl
jae
andl
pop
pushf
adc
xor
js
mov
imul
jp
push
lods
xchg
test
adc
test
enter
adc
mov
jb
mov
cmc
push
xchg
shl
int
cmp
shr
xor
ret
or
fistl
cmp
iret
xchg
push
cld
dec
inc
mov
jge
test
push
lret
ficoms
pop
adc
sbb
sub
pushf
mov
push
ja
ds
pop
in
lods
sub
jbe
sub
hlt
int
cli
inc
cmp
movsb
jecxz
mov
jbe
mov
cmp
in
adc
nop
cld
mov
mov
aaa
test
jbe
loope
adc
iret
xor
mov
and
std
mov
jecxz
jb
push
dec
xchg
xchg
mov
cmc
xchg
in
xor
xchg
int3
call
mov
fwait
pop
lahf
cmpsb
mov
dec
or
mov
push
popa
imul
popf
mov
dec
pop
rcrb
pushw
jmp
pushf
ss
in
inc
call
idiv
aas
jp
cmp
xchg
lret
fdivrs
rcll
imul
shrb
jle
icebp
pop
repz
pop
cmp
in
pop
add
jle
fimuls
mov
jae
daa
icebp
add
xor
push
jp
movzbl
xor
insb
fwait
or
dec
xchg
not
or
das
or
dec
in
jp
sub
in
test
test
std
call
rcrb
mov
dec
sbb
pop
scas
cmp
je
pop
test
xchg
jno
rorb
push
sahf
mov
ficompl
push
lret
push
fisubs
ljmp
test
mov
stos
pop
enter
xor
test
repz
out
mov
fs
in
adc
lock
sub
scas
jo
ss
sti
sbb
jle
ja
xor
and
das
mov
xorb
in
push
dec
push
pavgb
loopne
mov
push
iret
push
sub
push
das
sarb
adc
xor
aas
mov
jp
test
and
push
pop
push
repnz
jecxz
mov
aad
mov
push
dec
and
pop
dec
xchg
xchg
push
xchg
xor
push
data16
xor
pop
and
xchg
inc
mov
mov
inc
js
std
test
aas
mov
fdivs
imul
andl
push
push
jp
inc
leave
lods
jne
add
jb
inc
shl
pushf
inc
cmp
inc
cmpsl
xchg
push
mov
test
sub
sbb
std
push
pop
nop
dec
insb
and
jecxz
mov
mov
in
loop
mov
mov
ss
mov
arpl
inc
notb
shr
into
lea
dec
mov
xchg
cmp
xchg
jcxz
outsl
mov
outsl
mov
mov
je
jbe
mov
jmp
fidivrs
xor
into
sub
fistpl
or
mov
cmp
cli
pop
adc
daa
adc
mov
pop
mov
or
mov
lods
inc
scas
jno
shl
insl
call
jecxz
cld
loop
cltd
ss
jnp
push
cmp
adc
out
bnd
test
mov
icebp
out
rcrb
sub
dec
aad
test
pop
inc
ljmp
aas
scas
cmp
xchg
lods
iret
mov
xlat
lods
popa
and
mov
adc
pop
int3
cmpsl
jp
stc
stos
loop
pushf
mov
add
ficomps
xlat
inc
aam
data16
lahf
clc
fs
dec
cwtl
adc
outsl
push
out
arpl
dec
jbe
jecxz
insl
pop
cld
jno
lahf
mov
mov
fcmovu
pop
std
lahf
pop
loopne
loope
pushf
push
xlat
stos
sbb
dec
cmp
sub
push
ret
push
fdivl
xchg
xchg
xchg
cli
out
ficompl
repz
movsb
jg
xchg
stc
test
push
sub
jmp
sbb
movsb
add
lea
pop
gs
lods
addl
push
mov
and
ret
adc
loope
cmovbe
dec
jae
leave
and
repz
sarb
pop
in
and
lds
pop
es
push
push
adc
js
adc
loopne
js
inc
loopne
mov
mov
cld
sbb
aaa
leave
inc
popa
lcall
push
inc
push
insl
xor
sahf
mov
in
push
dec
dec
mov
mov
fmuls
add
xchg
data16
adc
hlt
adc
jecxz
mov
aaa
push
rol
dec
daa
orl
ds
jns,pn
dec
cmp
scas
lock
xor
mov
add
into
mov
andl
fstpl
pop
fs
cmp
out
mov
add
repnz
xlat
mov
lods
cli
mov
dec
sbb
mov
rcrl
cmp
cmpsl
mov
and
dec
sbbb
aam
cld
sub
or
push
shll
dec
repnz
out
xchg
ljmp
xchg
xchg
es
push
jle
aad
fs
mov
loope
call
mov
stos
xchg
jno
addr16
push
dec
jbe
clc
sub
sbb
and
mull
mov
jle
adc
das
or
das
inc
js
cmp
repnz
outsb
pop
test
jnp
aad
out
xchg
ss
cld
push
push
and
push
adc
movsb
stos
ds
jbe
aad
and
xor
sbb
inc
xchg
repz
mov
int
lahf
dec
mov
repnz
push
push
jb
icebp
es
dec
fldenv
dec
fisubs
sub
popf
xor
es
push
lds
xchg
stc
stc
pop
xor
stos
sbb
cmp
scas
push
xchg
rcrb
xchg
loopne
in
icebp
lds
test
icebp
out
xor
inc
ret
mov
lea
mov
adc
aaa
sbb
enter
sbb
mov
loop
pop
pop
mov
xchg
ret
dec
addr16
adc
jno
push
pop
mov
lret
add
std
sbb
cmp
inc
push
mov
cwtl
out
aaa
sub
adc
les
inc
mov
dec
stos
push
das
add
jae
dec
cmp
push
mov
stc
dec
call
push
addl
fbstp
adc
mov
push
leave
jne
ss
idivl
xchg
cmp
ret
dec
ror
stos
jne
jmp
insb
call
pop
popa
pop
and
shlb
inc
xchg
sbb
inc
xlat
repnz
out
cmp
cmpsl
mov
loopne
jne
cmp
movsl
iret
adc
outsb
add
insl
sbb
sahf
xchg
add
mov
sub
mov
add
test
rorb
pop
loopne
mov
stos
dec
rorl
dec
jp
add
sbb
mov
mov
push
insl
sti
mov
dec
add
mov
mov
mov
lret
mov
shrl
nop
aaa
or
xchg
jmp
mov
mov
test
add
add
xor
sbb
or
out
sub
mov
mov
out
cli
mov
pop
adc
pop
pusha
sub
fucomp
mov
jge
cmc
xor
call
mov
ja
sub
popa
mov
mov
mov
inc
mov
lcall
and
roll
cmp
xchg
inc
das
dec
loopne
int
aam
mov
es
outsl
rol
dec
jg
mov
repnz
insl
or
dec
jle
mov
dec
inc
aaa
es
xor
mov
repnz
rcrl
inc
in
lret
test
pop
mov
or
lock
mov
inc
lret
mov
inc
mov
mov
mov
std
pop
fistl
push
scas
pop
das
mov
cmp
aam
out
or
xorb
inc
testb
cmpsb
mov
jecxz
out
push
jl
sbb
push
adc
jns
pop
mov
inc
push
int
imul
mov
and
into
and
inc
push
mov
xor
push
icebp
insl
mov
dec
and
shlb
loopne
push
jge
cs
xor
mov
rcll
fstpl
pop
daa
das
pushf
mov
repnz
out
iret
lea
add
leave
test
xchg
fyl2x
pop
push
scas
pop
xor
jne
rorb
jb
cmpl
pop
add
add
mov
xchg
pop
xchg
pop
jno
mov
sar
fdiv
sbb
push
jmp
sub
and
clc
loopne
mov
or
int
unpcklps
mov
xor
negb
xlat
adc
mov
popa
ret
xlat
jb
push
cmc
mov
inc
jnp
lock
out
jae
cli
imul
adc
xor
mov
and
ret
in
push
and
pusha
sub
push
aaa
nop
pushf
mov
or
mov
out
push
xor
nop
fistpll
or
mov
add
push
sub
or
popa
in
test
mov
push
dec
nop
dec
pop
test
push
and
ret
jno
cmc
jle
jno
repnz
pop
dec
ret
and
iret
add
cmp
jbe
mov
jge
ud1
dec
sub
sbb
mov
jg
icebp
push
jns
push
insl
shl
cmp
mov
add
mov
cwtl
jb
cmp
adc
xor
adc
imul
cmc
xchg
loope
std
cmpsl
scas
xchg
aaa
stc
jb
xor
es
inc
fs
sub
ja
pushf
call
adc
int3
dec
inc
call
sub
jmp
pop
jge
insb
add
sbb
test
and
test
jne
pusha
aad
in
mov
mov
push
lock
pushf
in
jg
cmpsb
dec
fimull
mov
inc
inc
repnz
dec
js
arpl
xchg
test
xchg
inc
sbb
sbb
inc
dec
jge
inc
loope
in
out
fwait
mov
int
ljmp
jne
pop
out
mov
shrb
int
out
loopne
cmp
prefetch
jecxz
xlat
sub
cli
adc
out
lods
jno
cmpsl
int
mov
mov
adc
lods
fbld
dec
in
push
rolb
gs
push
lahf
jbe
fisttpll
and
and
pushf
loopne
inc
gs
data16
daa
in
js
lcall
fidivs
fsubs
out
ljmp
and
lods
subl
hlt
jns
mov
stos
pop
or
leave
jl
clc
lcall
pop
mov
aas
xor
jae
lock
adc
cmp
fs
test
push
out
fidivrs
or
inc
add
inc
out
add
add
fwait
adc
mov
stos
mov
adc
insl
fidivl
stc
imul
cmp
aaa
adc
mov
mov
dec
outsl
divb
add
jb
imul
sub
mov
or
popf
in
test
xor
dec
fwait
xlat
mov
test
cmpsb
aaa
stc
hlt
nop
leave
dec
jnp
inc
mov
inc
in
jns
dec
subl
lods
lods
mov
sub
sub
sahf
ret
fmulp
sahf
lahf
xchg
sbb
add
gs
fidivl
mov
pop
adc
imul
xlat
mov
inc
mov
jg
nop
jno
ficoml
test
lcall
jae
xchg
jae
push
xor
xor
lea
sbb
outsb
lcall
jl
test
and
dec
shr
xor
cmpsl
sahf
jg
arpl
push
fisubl
xchg
mov
ss
aad
sbb
push
stc
dec
insl
pop
inc
popf
mov
sub
xchg
fcomp
mov
adc
mov
aad
fwait
inc
mov
out
repz
bsf
inc
insb
add
bnd
inc
int3
icebp
push
jo
and
loopne
jmp
push
mov
cltd
adc
mov
sub
stos
ljmp
mov
mov
mov
imul
mov
test
in
adc
stos
ret
xlat
jecxz
mov
test
dec
icebp
adc
icebp
add
push
hlt
stos
dec
add
pusha
pop
pop
lock
mov
jns
or
jb
cmp
mov
xor
cli
repnz
fs
lea
ret
add
out
add
or
lss
jg
int
in
into
cmp
aam
hlt
mov
nop
pop
es
movsl
sub
out
cmc
or
ficoml
repz
leave
pop
sbb
sub
fcmovu
testl
mov
inc
or
jge
mov
adc
icebp
pop
mov
mov
add
ret
ret
mov
inc
sub
and
fcomps
je
pop
repnz
fsubr
cmp
xchg
sbb
gs
pop
mov
pushf
adcl
test
dec
xchg
loop
imul
xor
cmp
ret
insl
in
xor
inc
fwait
sub
adc
loop
loopne
mov
xchg
mov
add
xchg
jbe
loopne
lods
out
cmp
push
cmpsl
sbb
xchg
xchg
shlb
dec
sub
xchg
jno
aad
in
xor
imul
xlat
fcompl
push
adc
test
adc
inc
stos
xchg
int
fs
pusha
out
data16
divb
scas
and
xchg
popf
out
add
cmp
mov
cmp
xor
leave
repz
pop
dec
inc
push
cmp
pop
pushf
fadds
ret
testl
jge
fisubs
mov
mov
clc
mov
inc
mov
popa
adc
inc
sub
mov
jns
inc
into
xor
icebp
lods
xorl
int3
imul
rol
sbb
mov
or
in
in
aaa
outsb
add
mov
loopne
shr
mov
jae
popa
cmpsb
pushl
addr16
notl
adc
dec
sbb
dec
test
dec
adc
or
ficomps
jl
lret
or
hlt
imul
mov
xor
push
pop
shrl
xor
incb
pusha
push
das
push
xchg
hlt
dec
pushf
xchg
add
scas
leave
aas
xor
lahf
clc
ja
jg
mov
out
pop
popa
jecxz
fsubs
add
jecxz
xchg
sbb
xchg
mov
scas
shl
jmp
lret
mov
mov
or
push
jmp
popa
outsb
xchg
mov
push
mov
daa
aaa
sub
jb
push
mov
pop
sub
push
sub
mov
ud2
mov
xorl
cmpsl
rorb
imul
movsl
mov
cmp
lcall
call
sbb
mov
mov
push
inc
cmpsb
cld
ljmp
aad
test
lahf
fcomps
imul
pop
inc
cmp
inc
sarb
clc
stos
nop
jne
mov
mov
lods
xorl
out
or
sbb
mov
pop
std
cmc
and
lock
decl
adc
ds
into
jp
mov
test
xorl
xchg
pop
shl
mov
fdivrl
fdivrs
inc
imul
mov
aad
sbb
sti
sbb
not
aad
bound
imul
pop
dec
adcl
arpl
enter
mov
push
leave
sbbb
outsl
fdivs
inc
dec
xchg
and
roll
mov
inc
mov
fdiv
popa
xchg
lods
repz
pushf
jg
mov
inc
xor
pushf
fdivs
push
pmulhuw
cmp
jle
push
out
mov
jecxz
aas
not
sbb
jbe
rcr
loop
sbb
sarb
cmpsl
pop
mov
stos
sub
mov
aaa
lods
xchg
cmpl
jmp
insb
push
mov
or
dec
push
mov
xor
idivl
jecxz
jg
push
sub
repz
nop
movsl
data16
popf
sbb
cmpb
push
and
je
popf
loopne
cltd
sub
adc
jne,pn
push
fldcw
pop
pop
cmpsb
aas
mov
aad
out
jmp
pop
and
bound
ja
inc
pop
pop
lods
dec
mov
mov
xor
dec
dec
into
inc
push
mov
mov
stos
jg
lret
popa
dec
mov
ds
mov
jae
mov
rep
insb
repnz
and
xor
loopne
pop
fs
pop
adc
cmpb
adc
add
clc
imul
ja
or
movsb
or
bound
js
jle
fildll
and
sbb
inc
or
adc
cmp
mov
push
fmul
mov
lea
xor
or
jne
lock
lret
or
xor
or
push
cmp
test
dec
mov
mov
popa
cmpsb
fmuls
push
pop
mov
push
inc
sbb
fldl
shll
pop
cmpsb
cmp
mov
mov
fistpl
and
outsb
mov
repnz
pop
imul
mov
or
ds
xor
pop
dec
test
dec
mov
adc
adc
fwait
adc
xchg
inc
xchg
add
dec
insl
xor
test
pop
je
xor
call
push
je
in
mov
jge
xor
pop
out
inc
stos
cmp
fnstcw
cmp
push
js
out
and
mov
push
dec
and
sbb
loopne
push
popf
cltd
mov
mull
add
ret
jae
lods
scas
stos
adc
jne
ss
cmp
flds
dec
outsb
push
cmp
push
mov
xlat
add
call
in
shr
push
mov
add
mov
test
mull
imul
rol
addl
cmc
mov
clc
push
rcrb
mov
ja
scas
call
loop
mov
xchg
ret
das
add
arpl
sbb
enter
inc
pop
jle
cmp
jno
clc
jbe
int
clc
enter
es
test
push
js
mov
add
sub
mov
out
cmp
data16
sbb
jmp
mov
sar
leave
inc
into
out
data16
or
mov
mov
loopne
in
xchg
push
stos
imul
sar
frstor
subb
es
jg
ffreep
jg
push
aam
dec
loopne
jmp
inc
mov
lea
shrl
dec
push
aas
adc
into
imul
cmpb
dec
dec
mov
jl
inc
fcoms
ffree
push
mov
into
fs
cmp
bnd
loopne
bswap
movsl
insb
icebp
out
mov
pop
dec
adc
punpcklbw
pop
xchg
arpl
out
gs
int3
pop
cmc
ljmp
ss
adc
mov
add
icebp
popl
fstpt
aad
jo
cmovl
push
or
fcomps
jno
inc
xchg
xsavec
inc
xor
add
je
inc
xor
add
pop
aaa
pop
mov
inc
pop
out
fidivl
je
enter
cmp
cmp
push
sbb
lcall
cmp
ljmp
mov
or
push
test
or
jne
or
hlt
inc
jno
cs
lret
outsb
ja
mov
cmp
push
sbb
fldenv
push
and
in
add
xor
mov
je
cld
lods
jge
bnd
jns
imul
mov
xor
outsl
aam
lret
mov
or
in
push
test
xor
push
xchg
mov
test
adc
adc
adc
jbe
idivl
sub
push
les
addb
mov
ret
mov
nop
xchg
pop
ja
lret
pop
pop
xchg
lock
mov
andl
adc
leave
inc
sub
add
jno
push
inc
mov
dec
insb
rcrb
bound
gs
pop
add
xchg
std
xor
push
sti
mov
mov
sub
jecxz
sbb
lods
fdivrs
xchg
push
cltd
inc
aad
inc
or
pusha
test
xchg
jno
imul
flds
sahf
iret
popf
lods
sti
xorl
xor
jo
ffree
jbe
imul
add
sbb
and
cld
dec
jo
jo
inc
and
or
jle
pop
jecxz
sbb
movsb
aaa
mov
ret
test
shrb
rcll
arpl
aas
inc
outsb
sub
pop
xor
dec
ret
xchg
jg
jl
fs
mov
or
hlt
sbb
adc
sbb
fsubrl
cmpb
xchg
cs
mov
insl
mov
ret
inc
dec
outsl
push
sub
xlat
xchg
sub
out
loop
aas
loop
cwtl
sub
mov
ret
pop
sbb
cld
add
rcll
jb
inc
leave
ljmp
dec
lcall
adc
xor
imul
push
xor
mov
lcall
ret
cmp
mov
dec
data16
xchg
imul
jg
cmp
adc
stos
fstps
add
cmp
iret
jmp
or
das
cmp
jbe
jnp
adcb
jecxz
jbe
ljmp
gs
jb
xor
mov
add
out
or
or
jmp
fstl
mov
scas
call
sub
push
cli
and
aas
mov
adc
roll
stos
stos
push
xor
pop
insb
popa
iret
xor
add
lret
or
fcmovu
je
inc
push
mov
cmp
cmc
lret
loopne
xor
sub
push
stc
ror
out
loopne
mov
insb
aaa
adc
gs
inc
jno
add
lods
test
xlat
subl
shr
sbb
mov
jle
negl
inc
cmpsb
sbb
inc
xchg
aaa
xor
and
inc
fisttps
push
add
ss
arpl
popf
inc
cli
cwtl
dec
cld
fldcw
sub
loop
les
jge
inc
rol
mov
push
mov
outsb
lock
xchg
ljmp
xor
pop
cli
sbb
cmp
and
das
jg
jns
daa
sub
pushf
sbb
add
jg
mov
mov
lret
push
es
mov
adc
int3
adc
cli
cmc
xchg
lds
or
dec
cmc
jp
add
shl
push
sbb
dec
jecxz
out
in
les
movsb
mov
xchg
adc
xchg
or
push
lret
insb
lret
test
cmp
pop
loop
test
xchg
xchg
dec
jecxz
add
add
popf
aas
pop
movsl
test
inc
add
pusha
dec
aam
out
movb
notb
inc
pop
mov
push
adc
mov
out
ds
mov
inc
outsb
jle
data16
insb
aam
aas
mov
lahf
jns
daa
cli
aaa
call
lea
enter
lds
pop
jecxz
enter
inc
jns
jo
ja
mov
fmull
mov
jbe
jge
ljmp
bound
cmp
leave
mov
push
cmp
in
sbb
push
jns
inc
or
jl
shll
add
icebp
mov
mov
addl
outsl
repnz
jle
and
sbb
xchg
jg
shll
sub
or
dec
or
shlb
and
inc
cli
movsb
inc
jno
jecxz
and
push
hlt
repnz
mov
add
shl
fucomp
jg
xor
jno
in
lcall
sbb
or
aas
fs
clc
or
movsb
sarl
add
aaa
mov
inc
repz
xor
fwait
xor
mov
mov
and
andl
pop
jbe
add
es
scas
sub
push
addb
lahf
mov
ror
icebp
jae
push
sahf
dec
dec
mov
push
push
das
sbb
mov
mov
sbb
jbe
mov
dec
adcb
shrl
mov
mov
push
int3
push
lret
std
or
lock
loop
pop
out
mov
sbb
mov
push
lock
mov
cmp
ja
xor
pop
inc
test
pushf
dec
dec
in
rorl
and
jne
sbb
lods
in
jo
ja
cmp
mov
jne
and
and
nop
loope
xchg
mov
push
test
stos
int3
adc
movsb
neg
xchg
mov
in
scas
inc
int
or
enter
xor
shlb
fs
adc
pop
dec
push
push
xlat
sahf
add
pop
sti
in
mov
jno
jne
out
sahf
shlb
jbe
adc
fisttps
out
sbb
repnz
lret
mov
push
flds
cmpsb
div
add
cwtl
sub
enter
pushf
pop
insl
add
jle
push
mov
pop
sub
dec
mov
sar
ret
xor
and
sbb
push
dec
imul
or
sar
mov
stos
adc
sbb
jns
repnz
push
push
iret
pop
repnz
movb
repnz
je
xchg
jnp
xlat
scas
jb
outsb
movsb
fcmovne
xor
lds
testl
fildll
push
test
pop
mov
push
dec
ljmp
inc
xor
divl
push
jb
rorl
dec
push
jge
mov
mov
test
inc
rep
cld
or
loopne
jne
jmp
icebp
xor
inc
jmp
or
push
xchg
insl
aam
loopne
add
and
clc
add
test
cmp
sub
mov
xchg
pop
jmp
lods
xchg
adc
sbb
sbb
sub
sti
mov
rorb
xchg
push
push
shr
jle
daa
cmp
fstps
lods
cmp
clc
or
pop
cmp
rolb
and
loopne
pop
jns
adc
in
sbb
into
dec
test
cmp
cmc
add
inc
stos
or
das
add
out
mov
ljmp
pop
arpl
mov
jae
aad
jg
jle
imul
mov
addb
push
mov
push
lods
fnstsw
ja
add
pop
xor
pop
pop
fisubs
ds
xchg
out
mov
xlat
sbb
movsl
inc
inc
call
mov
pushf
mov
jge
stc
jmp
sbb
lock
or
pop
ret
adc
or
pop
mov
loop
adc
mov
nop
sub
push
ss
fsubr
add
inc
cltd
cli
mov
pushf
mov
sbb
jmp
pop
xchg
lods
jle
jmp
jne
mov
mov
mov
inc
test
ja
sub
out
in
divb
mov
daa
sbb
and
rcrb
dec
fucom
adc
lret
push
out
xor
imul
mov
fildll
jmp
std
enter
fs
repz
jnp
test
dec
call
mov
pop
roll
add
test
mov
enter
fnstcw
sahf
into
xchg
lock
enter
or
cld
ds
int
xchg
pop
add
cmp
cli
arpl
out
ja
xor
xor
xchg
out
inc
cld
popa
popf
data16
sahf
out
imul
mov
or
test
mov
or
loopne
imul
jb
jno
push
test
aaa
pop
adc
push
repnz
xchg
jp
jne
pushf
xchg
cmpsl
xchg
mov
mov
inc
dec
mov
lods
pop
mov
mov
pusha
sub
adc
fisubs
pop
mov
sbb
icebp
mov
test
mulb
mov
fs
loopne
dec
jbe
clc
rcrl
and
daa
sbb
test
xchg
sub
add
pop
jnp
mov
notl
outsl
stos
push
mov
cmpsl
xor
pop
xor
lea
repz
sbbl
cmp
inc
ljmp
sbb
mov
and
mov
popf
loope
mov
pop
jne
shrl
add
mov
lock
or
bound
jecxz
stos
sbb
testl
cmp
aad
or
pop
lahf
fisubrl
jg
repnz
xchg
lret
push
pop
inc
sahf
jne
and
inc
and
das
mov
dec
cmp
xchg
in
sub
sbb
cld
popf
pop
aad
xchg
dec
push
popa
call
inc
nop
loope
xchg
sbb
test
jp
das
dec
pop
sti
mov
mov
pop
cld
cli
mov
pop
shrb
jp
iret
or
sbb
fstpt
cmp
push
adc
sahf
mov
mov
or
call
sub
into
rclb
imul
add
ret
cmc
xchg
jp
or
loope
jl
pop
gs
cmp
lret
xlat
leave
mov
rcr
out
pop
lret
sub
xchg
enter
sub
js
gs
pop
xchg
imul
dec
cmpsl
jno
sbb
or
mov
pushf
jecxz
les
inc
and
and
mov
popa
out
dec
jg
inc
imulb
pusha
jb
mov
push
add
jb
mov
mov
ret
jmp
mov
add
clc
xor
scas
in
cmp
cltd
or
cmp
mov
loop
push
mov
cltd
fstps
popa
loopne
lds
test
shrb
xchg
loop
insl
dec
dec
pop
lea
outsl
cmpsb
mov
jns
adc
shr
xchg
movsb
mov
addr16
jg
stos
or
mov
clc
fcmovnbe
mov
jle
inc
fwait
clc
fnstcw
xlat
mov
loop
and
in
jg
shl
inc
cmp
dec
mov
jmp
sbbb
inc
addr16
jge
das
nop
fnstenv
imul
push
adc
mov
nop
push
dec
sahf
inc
push
inc
cwtl
xlat
emms
pop
in
ljmp
movsl
or
incb
jb
psrlw
push
xlat
pop
jle
outsl
pop
cmp
les
inc
aam
sub
inc
mov
jb
lret
mov
lret
mov
add
inc
xor
xchg
in
das
mov
push
cli
xchg
shr
lret
pop
inc
aam
lock
stos
xlat
jp
jmp
negl
xor
sub
pop
dec
mov
aas
push
aad
add
das
pop
or
fst
inc
xor
aad
lcall
adc
testl
fwait
rclb
and
mov
cltd
cmp
punpckhwd
mov
mov
pop
daa
mov
clc
inc
xor
test
jno
inc
ret
insl
mov
cs
push
in
data16
out
outsb
out
shll
adc
dec
sub
mov
aaa
hlt
push
xor
jmp
jp
adc
add
popf
in
cmp
dec
pushf
jp
xchg
xor
movsb
push
mov
dec
out
pop
jp
das
test
or
fs
outsl
in
repz
repz
leave
mov
sahf
xorb
inc
add
bound
ret
pop
xchg
inc
out
cmpsb
popf
or
add
cmpsl
jge
paddd
sub
outsl
xor
mov
push
repnz
xor
repz
fs
in
or
sbb
jo
inc
test
inc
push
mov
fwait
out
daa
mov
testl
mov
testb
sbb
mov
int
fidivs
icebp
cmovne
push
mov
scas
hlt
fdivrl
lcall
fwait
insl
pop
stos
loopne
fisubs
sbb
fnsave
or
inc
and
call
in
xor
clc
call
mov
inc
sbb
push
imul
mov
dec
jge
aaa
sti
es
out
xlat
adc
sub
clts
fld
mov
add
repz
adc
mov
cs
jmp
jl
ss
xlat
mov
sub
icebp
cmpsb
outsl
dec
mov
repnz
lea
jno
pop
dec
es
pusha
fwait
stos
test
sbb
inc
ljmp
dec
pop
and
inc
pop
lds
mov
lds
lahf
sbb
shrb
pop
jnp
cmp
or
insl
call
stos
inc
mov
lret
in
lds
sbb
or
dec
mov
cmpsb
insl
fistl
cmc
lea
jecxz
push
jne
dec
sub
and
enter
stos
xchg
mov
clc
icebp
scas
orb
push
sbb
icebp
push
pop
outsl
ljmp
std
inc
pushf
lods
into
sub
xchg
pop
inc
adc
loopne
lea
les
dec
nop
imul
ss
out
daa
lds
xor
pop
std
lock
fcomi
cli
rcrb
pop
pop
and
inc
clc
dec
es
add
push
ret
add
das
iret
jmp
jb
lret
sbb
dec
jno
xchg
mov
xlat
push
mov
clc
jno
jp
insl
mov
pop
push
xor
imul
mov
adc
xor
sub
aaa
mov
ficomps
call
sub
repz
cmpsl
leave
sbb
or
fcomps
adc
mov
jo
orl
ficompl
int3
inc
sbbb
aam
pop
mov
xor
adc
sub
inc
cltd
add
pop
arpl
scas
loop
loopne
sahf
icebp
sub
pop
jae
out
int3
cld
rcrb
mov
imul
pop
mov
inc
adc
add
mov
stos
imulb
cltd
lds
iret
testb
and
std
rcr
sahf
add
xchg
leave
shlb
lahf
fstpt
jge
cs
ljmp
add
cs
adc
hlt
cmp
call
cmp
add
data16
push
insb
icebp
stos
adcb
cmp
xchg
fucomp
adcl
xchg
add
xchg
and
fdivp
dec
xchg
insl
mov
or
je
push
test
jg
push
ss
icebp
mov
cmc
push
xchg
push
mov
out
adc
pop
pop
rcrb
stos
pop
daa
push
and
enter
xchg
repz
mov
ret
sbb
pop
inc
outsl
fidivrs
test
push
lock
xchg
pop
movsb
pop
xchg
stc
addr16
pop
scas
lahf
scas
sub
mov
dec
inc
bound
push
aam
cmp
mov
mov
call
jno
stos
jnp
mov
jle
je
fdivl
cmc
dec
sbb
pop
lds
loopne
sub
dec
cmpb
cmpb
leave
xor
ljmp
xchg
xchg
addb
push
adc
ret
test
cld
out
adc
std
push
xchg
out
ret
jne
add
fnstcw
inc
out
les
repz
sti
pop
sbb
leave
sbb
int
arpl
push
mov
cwtl
dec
ss
je
popf
ja
sbb
and
bound
mov
notl
or
movsl
insl
mov
inc
cmp
stc
sbb
jbe
push
cwtl
add
or
push
mov
mov
scas
jno
repz
sbb
jns
fbstp
sbb
cmova
pusha
push
or
and
fidivrs
test
aas
push
cmp
mov
das
movsb
pusha
mov
jecxz
repz
insb
cmc
or
and
cmp
add
imul
xor
stc
lret
loopne
jno
nop
xchg
sbbl
std
jbe
sbb
int
hlt
stc
mov
adc
cmc
mov
pop
cld
adc
push
sub
movl
pop
pushf
push
jb
mov
sub
xchg
mov
stos
inc
jle
xchg
and
fadds
mov
push
fildll
cs
iret
in
repnz
mov
mov
mov
xor
sbb
insl
jmp
dec
xor
cmpsb
sarl
jno
and
dec
roll
movsb
fstps
js
mov
je
mov
es
sbb
mov
xchg
mov
outsl
lock
push
add
int3
shrl
sbb
in
es
push
or
push
popf
add
stos
mov
sti
xchg
jno
enter
mov
mov
test
mov
into
and
scas
sti
dec
fstpl
shr
pop
lret
mov
adc
shlb
addr16
aas
out
adc
jp
and
xchg
dec
bnd
xor
sbb
popa
cltd
andl
dec
test
sbb
pop
dec
dec
xchg
cld
cmpl
mov
rcl
mul
dec
sbb
les
and
and
mov
jae
adc
jle
push
ret
cld
popf
les
fistpll
jl
testb
mov
inc
icebp
ja
pop
popa
mov
mov
fisttpll
mov
clc
lret
inc
imul
mov
push
icebp
inc
mov
std
cld
sbbl
lret
mov
push
pop
xor
daa
iret
jbe
jno
imul
lods
clc
dec
push
mov
stos
mov
xor
loope
in
mov
insb
sarl
pop
imulb
adc
push
hlt
cli
cmp
push
push
sbb
sub
call
push
cmpsb
jmp
jge
jbe
cli
dec
cmp
dec
or
cld
xchg
pop
mov
cmp
aam
or
dec
push
sub
outsb
inc
aad
loopw
adc
jmp
push
push
jp
addl
or
popf
out
mov
xor
fidivl
mov
lret
xchg
xchg
incl
sub
cmpb
jnp
orl
gs
mov
aaa
mov
xchg
xchg
out
mov
out
jo
nop
dec
dec
pop
notb
in
mov
call
stos
sub
jge
in
out
xchg
jmp
jno
mov
sti
loope
dec
repz
sbb
sbb
lock
ret
adc
fidivl
jb
clc
stos
dec
push
loopne
iret
pop
ret
stos
push
lcall
cmp
in
imul
mov
cmp
imul
ds
cmp
cmp
xor
subl
push
jecxz
out
pop
iret
out
daa
inc
jnp
dec
mov
inc
dec
mov
sub
lock
repz
adc
push
mov
insl
mov
push
and
pop
int
cld
cmp
out
push
insb
mov
repz
insl
sub
insl
sbb
mov
jl
rcl
fwait
loopne
pop
cs
jbe
lret
inc
test
cltd
js
loope
push
shr
jg
adc
cmp
adc
push
or
je
mov
inc
lret
mov
push
inc
mov
sub
test
or
andb
sbb
sub
sbb
inc
jno
sahf
bound
jnp
mov
fidivs
push
rcr
sub
stos
imul
mov
add
xchg
sti
mov
push
int3
andl
jnp
push
fwait
adc
cltd
mov
lcall
mov
mov
ds
lahf
xchg
xchg
jmp
add
jbe
lret
jp
pop
sub
mov
xor
popl
addr16
cmp
fs
jno
cmp
adc
nop
sub
mov
adc
mov
xor
stos
scas
mov
repnz
ds
dec
pusha
loopne
sub
adc
push
adc
movsb
testl
pop
addr16
push
cmpsl
ds
or
je
sub
pop
call
add
and
lods
stos
sub
cmpsb
js
cli
fadds
xchg
pop
sbb
and
adcw
mov
cld
fstpt
xor
les
inc
mov
dec
adc
movsl
push
scas
adc
and
adc
fidivl
mov
xor
or
jge
push
mov
fwait
or
mov
inc
out
incl
in
xor
cmp
gs
stos
mov
adc
imul
jp
pusha
movsl
cmp
xchg
scas
lods
and
pop
imul
jmp
and
insb
cmp
loopne
mov
ficompl
sti
test
imul
rcrb
sub
jno
movsl
jle
in
into
sbb
rorb
fldt
pop
test
stc
push
fs
in
sub
imul
pushf
dec
jp
notb
cld
mov
das
test
mov
lret
sahf
lret
sbb
adc
sub
mov
xchg
stos
jl
rclb
jne
daa
xor
mov
xchg
lret
gs
dec
je
subb
mov
daa
daa
mul
push
out
inc
xchg
fnsave
insb
dec
mov
or
ficomps
pop
jge
or
popf
pop
push
pop
stos
rol
das
mov
gs
ja
lea
pop
int
and
dec
test
pop
lret
mov
rolb
test
and
sbb
iret
xor
cmp
sbb
dec
xor
mov
sbb
pop
mov
clc
repz
fdivl
cmp
daa
jge
xchg
int3
jns
outsl
fdivs
scas
loopne
dec
ror
ss
sbb
lea
and
inc
ja
adc
sub
out
add
movsl
or
imul
push
cwtl
testb
hlt
and
inc
xchg
push
xor
cmp
cmp
insb
loop
ss
lret
sahf
dec
sbb
sti
xchg
out
into
pop
sbbb
dec
fwait
sar
lea
ret
sbb
inc
stc
dec
inc
adc
cmp
pop
xchg
imul
popa
add
arpl
incl
lret
lret
add
outsl
repz
fmuls
shlb
sarl
lcall
cltd
and
das
push
enter
cli
inc
inc
fwait
lods
ja
push
push
inc
sub
ljmp
sbb
loope
aad
pushf
mov
add
cmpsl
scas
push
pop
test
mov
xchg
xlat
in
int3
rcl
mov
dec
and
dec
imul
cmp
addr16
push
sub
mov
insl
adc
xchg
mov
pop
mov
mov
push
pop
imul
sub
in
sub
mov
int3
push
das
ja
add
fistps
cli
pop
sti
rorb
push
lock
mov
xchg
dec
notb
clc
xor
fisttps
and
lock
les
jnp
jl
lds
push
push
jne
push
xchg
sbb
jb
pop
fcmovu
mov
lea
iret
in
cmp
rorb
pop
std
xchg
inc
xchg
jno
dec
hlt
jg
int3
and
jecxz
fsubp
jecxz
cld
imul
add
or
rcrb
pusha
inc
loope
or
in
sub
filds
out
and
repnz
sti
rcl
dec
daa
push
dec
jns
movhps
or
mov
pop
aaa
lods
dec
pop
adc
mov
dec
fsubl
test
xchg
lock
jbe
mov
lret
sub
mov
je
scas
bound
int3
ror
and
mov
add
push
xchg
je
movl
loope
lcall
add
add
lret
xor
bound
push
pop
stos
adc
addr16
or
int
ret
or
hlt
push
pop
fdivl
pop
jo
mov
rep
mov
lods
scas
xchg
dec
test
mov
sub
inc
inc
fldcw
gs
push
xor
jnp
lcall
inc
push
push
es
dec
xchg
test
ret
jg
jge
add
cmpsl
mov
inc
mov
aam
hlt
push
dec
in
add
jno
outsb
jle
lahf
xlat
aas
imul
mov
fstl
imul
pop
pop
ss
jp
mov
cmpsb
imul
or
mov
sub
mov
fs
add
or
or
imul
movsb
sub
cmp
in
and
sbb
jmp
loope
lcall
mov
loopne
xchg
adc
push
or
je
jo
movb
jo
cld
dec
mov
pop
insb
push
movsb
lret
movsb
aas
pop
in
ds
movsb
sti
aas
inc
sub
xchg
pop
out
nop
lock
in
popf
jno
das
or
add
fstl
imul
jmp
inc
cmc
filds
sbb
insl
mov
xchg
inc
aam
stos
in
jp
lds
jb
lcall
leave
sub
test
cld
in
adc
add
xor
in
fnsave
cmc
or
mov
sbb
jmp
repnz
add
add
dec
mov
and
pop
scas
add
je
fwait
sbb
inc
std
fildl
shll
xchg
out
sarl
pusha
addb
scas
push
pop
adc
xor
jo
jo
mov
pop
sub
xchg
add
loope
mov
and
int3
jl
sub
pop
dec
pop
push
js
jno
sub
cltd
out
mov
nop
sar
es
inc
cmp
pop
pop
add
fidivs
daa
add
lds
sbb
dec
xor
outsb
push
lahf
je
or
mov
adc
jge
jg
dec
insl
in
cmp
mov
jno
sti
lods
and
insl
int
ljmp
mov
add
mov
dec
mov
mov
test
jg
adc
cli
into
mov
fldcw
push
fstpl
mov
stc
cmp
test
push
loop
push
mov
push
xorb
mov
xor
dec
ss
mov
sbbb
pop
pop
sbb
add
jns
push
lods
jecxz
icebp
daa
xor
rorb
repz
lahf
int
inc
cmpsl
or
lea
idivl
andb
ret
loopne
cmpsl
pop
imul
mov
mov
loope
mov
xor
push
add
cmp
aas
or
stos
icebp
cmpsb
sub
pop
xchg
scas
lock
imul
test
jno
scas
outsl
insb
adc
push
mov
int
dec
dec
es
fsub
jbe
clc
inc
outsb
int
pop
std
cmp
mov
and
fbstp
outsl
lahf
push
xor
repnz
xor
push
ss
jae
and
mov
mov
pop
mov
lahf
aad
mov
sbb
sbb
push
call
imul
adc
mov
stos
lods
fdivrl
fstp
pusha
int3
mov
sbb
lcall
jle
sbb
lods
jnp
pop
movsb
dec
test
pusha
xchg
popa
js
insb
sbb
lods
mov
mov
push
mov
push
mov
xor
or
xchg
movsl
js
dec
push
jecxz
sarb
or
icebp
and
cwtl
clc
xchg
mov
negb
fwait
repz
pop
lods
xlat
push
sbb
mov
nop
dec
push
jl
pop
push
push
test
cwtl
mov
add
or
xchg
xor
mov
call
movsl
lret
out
mov
jmp
mov
push
into
lret
dec
sub
dec
gs
xor
sar
aad
push
lret
xor
out
loope
pusha
dec
sahf
or
dec
jo
dec
xchg
cmc
push
mov
cmp
incl
std
loop
adc
mov
jns
sub
ja
dec
xor
xlat
js
scas
ljmp
cmp
das
aaa
fwait
pop
push
mov
cwtl
lock
pop
cmp
loope
jl
mov
adc
cs
test
mov
dec
cmp
push
aaa
sti
sbb
shrl
icebp
stos
pop
fs
or
enter
add
inc
aam
cmpsb
jae
in
sbb
xchg
mov
push
xchg
fnstcw
and
clc
pop
inc
cmpsl
sbb
loopne
mov
cmpsb
ficompl
loopne
adc
pop
aad
ficoml
xchg
adc
in
xor
into
sarl
in
jnp
mov
mov
and
jl
mov
xchg
dec
cmp
pop
sahf
inc
xor
lret
scas
sbb
in
xchg
leave
std
lcall
add
rorl
lods
rolb
addr16
fdivrl
xchg
sti
push
mov
je
sbb
mov
push
insl
das
inc
push
cwtl
outsl
cli
mov
test
add
pop
outsb
mov
addl
inc
in
pusha
pop
hlt
fstpt
fidivrs
fs
out
cld
jbe
lods
daa
jo
scas
mov
xchg
repz
mov
sub
jg
xor
mov
sbb
repz
fistl
mov
out
test
jne
add
js
add
in
cwtl
xchg
popa
inc
push
and
fnsave
adc
dec
inc
int3
test
mov
xchg
out
dec
inc
xchg
cld
and
push
or
mov
sbbl
cltd
lret
filds
or
add
test
ljmp
movsl
cmp
imul
push
pop
mov
sarl
fstpt
cmp
inc
mov
icebp
or
dec
lret
push
lods
sti
test
lea
out
rorb
pusha
out
sub
out
push
cwtl
or
mov
cmp
pushf
mov
adc
test
cs
push
push
mov
xchg
push
mov
mov
testb
aas
call
data16
jno
fadds
movsb
enter
bound
mov
stos
ss
jno
xchg
jp
jmp
scas
xor
rcrb
inc
loopne
push
cmpsl
cwtl
push
add
data16
pop
sbb
cli
mov
mov
xchg
shrb
push
push
dec
outsb
mov
hlt
xchg
sub
sub
repz
lret
ret
hlt
es
inc
push
cmp
test
pusha
faddp
ficoms
push
mov
xchg
loopne
aam
inc
pop
sub
sub
or
add
or
add
adc
sbb
or
repnz
aad
pop
push
pop
ja
xchg
jmp
cmc
mov
test
into
daa
out
jo
enter
jg
jmp
sub
out
xchg
mov
push
push
push
cltd
movsb
test
loop
imul
int3
pop
lahf
dec
cmpsb
or
sub
mov
lret
jge
in
cmp
fnsave
ficoml
in
popf
lret
out
call
es
jne
ds
jbe
call
les
in
cmp
repz
xlat
hlt
aas
xchg
xor
push
jle
orl
test
stos
add
loopne
test
jno
repz
fdivl
jnp
pop
xchg
mov
pop
popa
outsb
cli
sbb
dec
push
adc
mov
clc
ds
aam
call
imul
lahf
jno
jne
and
mov
pop
aam
aaa
test
pop
lock
cltd
sbbl
shlb
lods
push
mov
popa
in
sbb
xchg
xor
push
shll
cmp
es
clc
pushf
mov
adc
mov
mov
sub
push
das
cmp
and
adc
or
es
sahf
dec
test
lods
lods
cmp
jmp
in
pop
push
in
cld
inc
adc
cmpsb
push
dec
jg
sub
fstps
fiadds
mov
out
and
jl
les
or
out
out
or
jecxz
and
mov
dec
fwait
mov
dec
fisttpl
cmp
mov
jb
lret
mov
lret
dec
xchg
xchg
pop
sar
mov
shll
notb
cmc
ficompl
movsl
roll
popa
and
xorb
dec
in
lcall
cmp
jbe
cwtl
lahf
pop
lods
popf
dec
std
lods
iret
push
inc
adc
inc
xchg
in
push
mov
aam
adc
aad
shr
test
sbbb
notl
xor
aad
in
mov
jae
jo
mov
jecxz
sbb
or
add
sbb
sbb
cmp
hlt
addb
jns
mov
and
outsb
outsb
xor
xchg
mov
push
push
mov
ficompl
mov
mov
mov
xchg
xchg
shll
sub
int3
lods
fidivrl
jo
push
mov
pop
rclb
push
pop
ljmp
call
and
and
mov
push
push
jle
xchg
dec
mov
enter
dec
mov
add
adc
xlat
je
repz
int
cmp
loop
jns
notb
loope
mov
xor
lods
sar
sbb
mov
loope
das
xor
dec
cs
repnz
cmp
and
shll
out
cwtl
std
mov
mov
push
mov
out
subb
mov
sbb
in
pop
sbb
pop
es
jmp
adc
ds
mov
push
add
jo
add
mov
aaa
cmp
test
adc
sub
and
jecxz
fildl
fdiv
scas
les
sub
rol
sub
stos
les
scas
adc
mov
stos
rcrl
push
shrl
test
fcoms
and
lea
push
roll
call
mov
cmc
or
aas
cmpsl
imul
pop
lcall
sbb
adc
add
mov
push
jnp
pop
aaa
add
fdivrs
lods
cmp
outsb
sbb
les
or
lds
mov
sbb
mov
dec
test
mov
adc
scas
sbb
jle
js
mov
fwait
mov
dec
mov
ja
mov
je
sub
pop
pop
mov
mov
sub
adcb
mov
pop
adc
push
push
adc
andl
loopne
inc
not
jecxz
in
or
cmp
mov
pop
hlt
inc
adc
jnp
aaa
jmp
add
lret
fadds
out
jbe
arpl
adcb
out
mov
adcl
pushf
iret
ret
dec
push
sub
push
test
xor
lcall
cld
pop
loope
lds
push
adc
loop
std
mov
mov
pop
mov
lds
mov
sbb
add
ja
and
leave
fwait
pop
pop
add
out
xchg
cmp
data16
jae
sti
adc
dec
and
insb
mov
icebp
jmp
add
mov
or
popf
mov
and
cmp
mov
or
push
mov
push
mov
jno
das
dec
je
mov
ds
xor
out
or
push
pop
pop
adc
jl
dec
mov
pop
mov
mov
xor
rorb
push
cmpb
inc
mov
cltd
cmp
fnstsw
or
adc
push
cld
cwtl
dec
fmuls
sarl
shl
sbb
nop
jo
xchg
lods
mov
mov
stos
in
loopne
xor
arpl
adc
add
test
add
jle
pop
daa
cwtl
jge
into
mov
pop
sbb
inc
mov
ss
and
xor
ss
ds
cmp
sbb
fcmove
fists
jle
push
push
mov
lock
shrb
mov
sbb
xchg
push
out
lcall
push
out
mov
fldl
lea
gs
fwait
push
lahf
jns
js
loop
cmp
add
fcmovnbe
mov
mov
scas
mov
jnp
out
lods
sbb
pusha
lcall
movsl
lods
push
pop
xchg
aad
adc
or
jmp
cmpsl
xor
push
lgs
aaa
jo
fistl
xchg
loope
cwtl
ljmp
pusha
std
dec
test
mov
test
sbb
mov
mov
in
jno
jo
daa
stc
out
adc
xlat
and
adc
mov
mov
cmc
push
vxorps
pusha
out
xchg
cwtl
jnp
sub
jno
leave
inc
mov
pop
popa
cmp
shrd
jae
adcb
sbb
loope
mov
jle
out
rcrl
inc
mov
gs
dec
push
insl
adc
push
adc
test
mov
dec
sub
adc
out
aad
in
mov
ja
xchg
mov
ss
and
cmpsl
int3
push
mov
test
das
push
add
push
push
lret
push
pop
mov
hlt
push
ja
scas
adc
ss
dec
jns
fsubr
dec
xor
push
rorb
push
jo
push
jb
movsb
jae
push
fisubl
push
xor
fistpll
sahf
sub
movsb
mov
sti
dec
stos
arpl
xchg
cmp
xchg
cld
dec
mov
roll
das
lods
mov
out
pop
or
lahf
sub
xor
dec
pop
xchg
mov
mov
test
or
ret
lret
imul
mov
jns
push
mov
hlt
jne
cli
xchg
lock
xor
cltd
scas
faddl
jecxz
fisttpl
sub
popa
int
sub
and
andb
lods
push
fnstcw
leave
or
xor
sub
fistpl
add
jnp
stc
sub
testl
insb
push
inc
add
mov
loope
in
cmp
call
lea
pop
push
push
sbb
imul
stos
push
mov
in
daa
insb
fldcw
int3
test
pop
mov
js
pop
adc
mov
adc
insl
xor
aaa
adc
add
loop
pushf
inc
fidivrs
out
xor
mov
sbb
cmpsl
pop
ds
ja
addr16
inc
in
mov
ret
push
ljmp
jo
mov
push
add
rcl
mov
mov
loopne
push
mov
ja
and
divb
shll
pop
jae
or
xchg
roll
in
clc
mov
xor
cmp
int3
mov
paddw
jno
int3
xor
cmp
mov
push
test
bswap
or
sub
and
or
adc
jnp
and
daa
test
sub
mov
dec
scas
out
out
cmp
adc
or
xor
inc
jne
push
cltd
or
std
movb
aad
in
outsb
and
add
or
ss
push
lods
fcompl
adc
or
aaa
iret
stos
pop
pop
cmp
in
mov
rclb
inc
stc
mov
cmpsl
lds
cmpb
test
ret
scas
call
or
cmp
mov
das
out
jns
jmp
inc
push
and
loopne
sarb
pop
mov
call
sbb
or
pop
jnp
bound
movb
pop
int3
or
pop
push
loope
add
mov
cmc
xor
clc
and
popa
ja
adc
inc
xor
repz
outsw
mov
mov
sub
push
aaa
mov
add
fidivrl
shrb
out
test
cmpsb
mul
fwait
arpl
pop
aad
fs
inc
out
add
xor
lds
jne
fs
cmc
idivl
push
out
push
or
mov
cmp
sbb
push
adc
iret
fnsave
pop
je
or
out
hlt
xor
mov
cmp
cli
or
xor
sub
daa
insb
dec
adc
sbb
jnp
mov
lods
aam
das
sbb
cmp
daa
jno
out
push
shl
movsb
dec
pop
test
cltd
popf
cwtl
jmp
cs
push
mov
ss
test
scas
les
mov
icebp
ljmp
mov
imul
lds
sub
jnp
or
and
adc
cmp
dec
jne
jno
loope
aam
sub
mov
outsl
cmp
sub
cmp
cmp
push
test
mov
cmpsb
and
dec
xchg
mov
stc
mov
xor
mov
xor
pushf
std
add
cmp
or
mov
sub
adc
push
js
inc
and
push
call
mov
lods
jecxz
lods
stos
pop
xchg
xorl
mov
dec
xor
je
pop
jg
loop
fsubrl
out
fcompl
out
or
loopne
cmp
hlt
mov
sbb
sub
clc
mov
stc
dec
dec
or
andl
nop
cmpsb
test
mov
adc
jecxz
addl
arpl
sbb
mov
jo
add
mov
pusha
sub
add
sub
sub
mov
xor
inc
xor
lods
test
add
pop
lods
jne
enter
movb
roll
adc
in
xlat
dec
call
jecxz
fnstcw
sub
mov
loope
mov
dec
sbb
sbb
inc
mov
sub
adc
add
sub
pop
mov
pavgb
and
dec
mov
aaa
gs
lahf
inc
pop
ds
mov
ret
hlt
pop
in
inc
in
iret
cmp
arpl
mov
lcall
sti
sbbb
pop
insl
fwait
roll
add
add
or
xchg
lret
pop
out
ds
push
or
and
push
lret
aas
pop
inc
je
and
or
push
fbld
xchg
or
jmp
lret
rolb
add
sbb
push
jge
mov
inc
add
push
pop
fmul
dec
ret
push
mov
lret
subb
test
and
ficomps
dec
fdivrs
or
pop
inc
out
pop
jl
dec
mov
or
adc
mov
cmp
sbb
leave
shrl
pop
dec
shll
or
sarl
int
push
loope
icebp
test
stos
sarl
inc
das
daa
out
mov
ja
enter
sub
jl
mov
call
jl
xchg
mov
pop
test
test
outsb
loop
fwait
jl
mov
sub
push
aaa
adc
inc
sarl
xlat
das
in
cwtl
out
push
insl
and
sub
sub
aas
or
into
xchg
cmp
outsl
or
out
int3
std
cmp
fldl
mov
jo
mov
push
in
imul
mov
and
jne
call
stos
add
bound
add
cltd
cmp
imul
fbstp
sub
adc
aaa
or
outsb
or
loop
ret
imul
andb
pusha
repnz
xor
outsl
in
xchg
repz
movsl
js
xabort
pusha
sub
bound
xchg
ja
call
not
xor
pop
xor
and
movsb
scas
adc
cli
mov
cmp
dec
sahf
mov
andb
addr16
xor
test
pop
shr
ss
mov
sub
movsl
dec
or
mov
inc
pop
pop
iret
lods
incb
sub
stos
mov
pop
out
mov
popf
imul
popf
incl
xchg
add
jbe
adc
gs
xor
test
lcall
cmpsb
dec
test
xor
add
and
xor
popf
inc
mov
lret
add
add
enter
in
jnp
mov
or
sub
mov
les
clc
and
jl
cmp
xchg
jecxz
jno
in
cmp
lods
sbb
cld
push
aaa
xor
mov
inc
xor
jl
xchg
mov
repz
sub
jae
or
jae
std
or
pop
pop
aaa
sub
cmp
arpl
push
sbb
push
jns
cmp
std
and
push
xchg
pop
ss
stc
aaa
ja
push
mov
stos
sub
xchg
xor
and
lret
push
mov
or
scas
aas
mov
cmp
dec
lock
add
sub
adc
push
mov
call
std
sub
xor
inc
nop
xchg
outsb
fisttpll
sub
into
jb
pop
ret
push
div
mov
pop
lods
es
shrb
icebp
adc
dec
mov
icebp
inc
outsb
lods
fbld
cmp
xor
test
shll
add
cmp
fs
rolb
repnz
sbb
repnz
inc
mov
daa
mov
adc
xor
and
out
aad
lods
xchg
hlt
cmp
push
and
cmp
shrl
and
adc
int3
mov
and
sar
aam
dec
call
cmpsb
dec
mov
jg
dec
sti
mov
andl
fimuls
sarl
pop
sub
test
int3
or
pop
jg
mov
xchg
in
jecxz
loop
or
jnp
sbb
xchg
add
test
idivb
daa
roll
fstpl
or
xchg
pop
adc
pop
push
and
loop
mov
mull
jmp
mov
dec
push
sub
imul
movsl
inc
add
pop
pop
rorb
xor
sbb
js
mov
jmp
cmp
aaa
fsubrp
rolb
mov
sub
into
pop
shlb
orb
data16
pop
mov
jle
jbe
int3
mov
cs
pop
ret
into
mov
fistps
xchg
xor
pop
sahf
add
cld
pop
lods
fcmove
lret
and
pop
add
scas
cmpsl
inc
test
out
ljmp
mov
shrl
xchg
dec
pop
sbb
clc
mov
mov
imul
fiadds
or
jge
pop
es
mov
jbe
jp
hlt
cmp
pusha
xor
adc
add
or
sub
fcomps
cli
inc
aas
rorl
mov
xor
loopne
enter
mov
fidivrs
push
xchg
outsl
jecxz
lods
xor
outsb
in
sbbl
mov
lods
or
sbb
cmp
int3
pop
dec
jge
and
icebp
imul
lods
ss
popa
sub
mov
shrl
mov
cmp
fs
push
cmpsl
or
xor
stos
js
and
shlb
mov
outsl
jg
adc
sub
div
mov
cwtl
jmp
mov
bound
loope
jmp
dec
or
scas
movsb
movsb
mov
sar
mov
adc
daa
mov
mov
sbb
dec
push
jmp
out
cmp
adc
xchg
push
mov
mov
loope
or
icebp
mov
movsl
stos
push
dec
mov
jmp
mov
add
xor
out
mov
loope
xchg
loop
insl
imul
inc
test
sub
mov
add
fxch
in
dec
jp
cmp
mov
outsb
mov
sbb
jbe
das
insl
leave
mov
adc
and
sbb
enter
mov
inc
mov
inc
sub
xor
cmp
cli
sbb
lcall
pop
cmpl
enter
sti
lea
jmp
in
adc
ds
mov
insl
mov
cmpsl
daa
fnstsw
fdivrl
pop
fst
aaa
outsb
testl
add
mov
nop
shrb
cld
inc
bsf
repnz
jge
or
repz
out
ja
mov
pop
lods
pop
ss
es
push
cmp
aaa
push
sahf
adc
rclb
rcl
test
in
imul
lahf
popf
mov
in
adc
icebp
mov
fldl
xor
inc
rcrl
outsl
std
and
xor
xor
int
scas
jne
jo
jge
repnz
mov
cmp
das
mov
pop
das
andl
shlb
mov
gs
and
jo
mov
xchg
adc
xor
enter
cmpsb
imul
enter
jmp
negl
dec
das
orl
xchg
enter
xor
mov
mov
or
mov
cmp
in
dec
push
mov
jg
or
pop
add
adc
fadds
shlb
jb
ss
arpl
inc
pop
lret
and
mov
movsl
push
sbb
ljmp
xchg
test
int
lahf
push
or
adc
mov
or
pop
mov
repnz
cmpsl
add
pop
lret
adc
push
jecxz
orb
cmp
subl
je
fdivl
push
test
xlat
pushf
inc
lock
or
ljmp
imul
aad
dec
or
ret
mov
pop
push
arpl
in
jbe
out
inc
sub
dec
and
jne
movsb
js
xchg
cmpsb
std
rcr
cli
je
mov
add
inc
pop
rcl
mov
pop
sub
sarl
push
mov
mov
inc
inc
pop
cmp
xchg
add
out
jo
dec
mov
nop
push
ljmp
adc
xlat
xchg
roll
cmpsl
add
push
push
jns
pop
xor
repnz
sub
push
test
mov
push
adc
pusha
push
loope
push
mov
in
cmp
xor
les
dec
fdivrp
xchg
outsl
pop
hlt
push
pusha
xor
jl
add
sub
imul
xor
outsl
sub
xchg
je
je
dec
cmp
cmpsl
aas
mov
lcall
std
int3
test
fwait
mov
cmp
xor
add
fsubs
sbb
or
push
out
cli
or
leave
insb
xor
std
call
sbbl
sti
add
push
xchg
mov
lcall
mov
sbb
inc
add
mov
jo
jle
mov
insb
mov
mov
repz
pop
cmp
mov
mov
mov
test
stos
mov
insl
adc
fsubr
fidivrl
std
dec
std
or
push
and
fdivrl
dec
cmp
push
mov
pusha
cmp
mov
les
out
icebp
sbbl
cmpl
outsb
leave
insl
xchg
js
push
add
mov
push
sub
cmp
xchg
ja
pop
xchg
pop
imul
cld
push
sti
lods
sbb
dec
push
sub
cs
cmpsl
nop
push
mov
test
sbb
ljmp
mov
stc
hlt
dec
dec
add
loopne
sbb
outsb
dec
pop
pop
fwait
rorl
out
add
inc
fnstsw
inc
xchg
popf
adc
and
cld
test
aam
lcall
mov
add
test
icebp
negl
repz
lret
roll
add
adc
movsb
lahf
cmp
cld
mov
cltd
add
in
xorl
pusha
push
cmc
icebp
push
or
in
adc
xchg
add
dec
aad
outsl
sbb
dec
jmp
ljmp
cli
cmp
mov
jg
stos
outsb
ja
pop
cpuid
lret
loop
pop
inc
shrb
push
and
or
sbb
push
inc
cmp
dec
das
sub
xchg
out
movsl
mov
adc
pslld
movsb
popf
jbe
daa
and
punpckhbw
cs
stos
lds
lods
pop
or
mov
lock
mov
inc
mov
ja
adc
jl
filds
out
int3
push
xchg
jmp
cs
add
xor
rorb
setb
loopne
jo
ja
and
outsb
lds
ljmp
mov
push
adc
movsl
cld
cmpsl
gs
enter
push
mov
jae
scas
pop
stc
xchg
push
push
lret
movsb
xchg
sti
and
mov
mov
jno
push
outsl
inc
mov
mov
out
or
popf
loope
sub
sbb
push
sbb
lret
sbb
loop
cmp
test
add
pop
jg
sahf
in
sub
lds
dec
cmp
jl
mov
in
xchg
shrl
scas
sar
adc
pop
xchg
xchg
cli
pusha
insb
addl
add
sub
push
mov
bound
push
lret
dec
mov
push
cmp
cmp
or
cltd
stos
in
es
popa
adc
jmp
loope
outsb
xchg
repz
push
ret
or
xor
mov
ss
icebp
xchg
clc
out
iret
dec
mov
add
arpl
ja
rep
hlt
repnz
push
cli
mov
ret
in
lea
incl
mov
fidivrl
push
xor
cmc
pop
sub
cmp
push
mov
push
mov
mov
shrl
push
lods
jne
push
inc
inc
push
add
cmp
xor
pusha
xor
lea
scas
popf
dec
into
je
mov
pop
jb
and
dec
dec
es
xchg
sti
shll
out
shlb
icebp
mov
dec
lods
adc
shl
jnp
push
push
addr16
icebp
adc
cmp
pop
cmpsb
dec
pop
ficompl
das
out
hlt
or
inc
in
inc
cwtl
leave
jl
js
popa
call
xchg
jp
inc
mov
mov
xchg
add
cwtl
adc
xor
dec
dec
pop
stos
inc
jg
lahf
xor
pop
mov
bound
adc
mov
and
cs
cmc
sub
jl
insb
test
mov
ja
stos
lods
adc
pusha
je
jne
push
repnz
jmp
subl
cmpsl
out
lods
or
shlb
push
nop
sti
sbb
mov
aas
xlat
inc
and
test
mov
xor
ja
push
movsl
dec
pop
test
cmpsb
into
repnz
push
push
xchg
pop
ret
and
mov
into
scas
mov
inc
jbe
inc
les
jg
mov
cmp
push
push
push
cmc
shr
pop
cwtl
insb
cmpsb
bound
dec
nop
hlt
lods
pop
test
popf
sub
jb
jle
mov
jl
xor
push
mov
push
cmp
pop
sbb
and
pusha
sbb
rol
ljmp
shrb
je
stos
jns
sets
mov
xor
xchg
test
paddusb
xor
fidivrl
sahf
inc
push
popa
lret
sbb
std
mov
xchg
and
mov
xor
jbe
push
pushf
xor
fwait
jmp
jns
jae
xchg
aam
aam
push
mov
or
in
clc
in
pop
add
xchg
jecxz
arpl
mov
push
adc
mov
mov
sub
add
dec
rolb
push
mov
adc
std
sub
testb
cmp
and
cmpsb
out
daa
mov
lock
jg
loop
and
addl
int3
pop
lcall
lahf
pop
push
sbb
xor
test
rcrl
sub
push
clts
push
mov
mov
movsb
pusha
mov
scas
insl
push
jnp
lret
je
and
ja
mov
or
xor
orl
test
es
stc
adc
pop
xchg
das
data16
xor
je
add
mov
xchg
insb
addl
add
inc
adc
xor
sub
or
push
ja
jecxz
add
loop
scas
mov
xor
mov
mov
mov
sbb
fdivrs
push
add
mov
add
mov
lods
mov
jecxz
xrelease
iret
ret
frstor
in
cmp
and
outsb
jp
and
cmp
pop
movsb
out
mov
cmp
es
fisubs
cs
negl
ss
push
pop
ja
enter
cmp
push
test
stc
add
mov
lds
mov
rcll
xchg
mov
test
idivb
lea
subl
sub
sbb
mov
mov
push
into
xor
sbb
pop
insl
fwait
loope
nop
cmp
inc
push
lods
inc
xchg
push
sub
scas
cld
push
mov
mov
fdivrp
pop
xor
or
cli
cld
mov
jnp
dec
in
test
cld
sti
popf
push
aas
mov
cmc
popf
mov
mov
sub
test
cwtl
push
sbb
int3
fnstenv
add
int3
jecxz
push
call
mov
mov
aas
outsl
insb
aad
gs
sbb
int3
inc
jp
inc
pop
shrb
dec
xchg
sbb
fcoms
cmp
scas
into
mov
mov
lret
insl
scas
mov
pop
push
test
ljmp
cli
stos
lea
jbe
stc
lock
push
jle
or
dec
int
pop
paddsw
cmp
xorl
mov
sub
push
aad
add
or
xchg
adc
jbe
subl
xlat
sbb
xlat
push
xchg
push
sbb
or
mov
insl
loop
cmp
inc
cltd
movsl
movb
int
jp
dec
stos
sbb
dec
jge
movsb
mov
sahf
addr16
sbb
cld
movzbl
int
mov
mov
add
fidivrl
push
or
outsb
inc
pop
out
mov
mov
gs
test
jnp
dec
cmp
xor
ret
sarb
cli
fimuls
cmpsb
in
xor
mov
push
xchg
jp
xlat
pushf
ja
fisubl
js
sahf
xlat
adc
xor
mov
sub
mov
pop
jge
push
outsl
call
pop
push
push
mov
dec
push
mov
dec
sub
sarl
xor
and
mov
jo
push
rcr
and
jno
inc
jle
incb
rorb
lock
loop
or
add
addb
mov
leave
cmp
sub
pop
insb
sti
std
fstl
out
sub
pop
lock
dec
test
mov
xchg
adc
test
xchg
sbb
aam
jo
cwtl
mov
faddl
bound
pushl
imul
repz
insb
aam
jp
or
jns
sub
addl
rolb
or
xlat
xchg
loop
jl
mov
sub
stos
jnp
xchg
mov
lods
add
mov
lock
ret
xor
mov
push
ret
xchg
inc
mov
dec
add
shll
mov
dec
rcl
lods
mov
jecxz
mov
or
inc
mov
call
push
push
nop
nop
arpl
xor
pop
pushf
mov
push
xchg
cmc
mov
mov
in
imul
cmp
cltd
and
mov
inc
popf
out
inc
lret
out
pop
add
xor
pop
pop
jle
dec
shll
int
mov
out
adc
pop
aas
fsubs
into
daa
sbb
inc
enter
cmp
add
xchg
add
out
adc
cwtl
mov
aas
inc
inc
jb
daa
pop
xchg
cmpsb
jns
xor
or
xor
out
sub
ds
cli
dec
xchg
xorb
cmp
and
xchg
in
ret
push
xchg
push
xchg
jns
cltd
inc
xor
jne
dec
mov
sub
push
xchg
push
sbb
ss
addr16
xor
add
je
addb
dec
stos
sub
xchg
ret
rcrl
cmp
cmp
and
mov
mov
int
insl
xor
aam
mov
jl
jnp
or
pop
lcall
das
fwait
jne
idivl
scas
mov
fcmovb
push
sub
repz
loop
out
jne
sbb
and
sub
cmp
sahf
and
sub
mov
sub
fidivrs
cmpsl
mov
and
cwtl
das
stc
loop
test
repz
loop
stos
test
sub
jge
mov
cmpsb
xor
add
pop
sti
jecxz
pop
pop
lret
arpl
sbb
pop
cmp
mov
pusha
hlt
dec
js
aas
mov
sbb
movsb
ret
js
fidivrs
pop
in
cs
cld
sub
fmul
push
cmp
mov
mov
std
or
sti
pop
mov
xchg
sub
mov
push
into
push
test
sub
fs
fnsave
jb
mov
mov
dec
fdivs
jne
push
pop
and
sahf
or
cmp
cmp
dec
pop
fstp
stc
out
sub
lcall
or
in
repnz
bound
sbb
jmp
xchg
loope
mov
sbb
push
cmpb
add
or
jle
hlt
data16
addr16
int
test
inc
loop
aaa
or
jmp
jnp
dec
sbb
jl
sti
mov
aam
mov
imul
pop
in
stc
push
ret
sbb
and
test
jge
xchg
push
xchg
push
cld
jns
loopne
push
frstor
dec
repnz
sub
and
icebp
data16
int3
xchg
xor
mov
rsqrtps
stos
mov
imul
mov
fildl
mov
cwtl
mov
adc
addr16
sbb
fstpl
loop
xor
insl
cmpb
popf
out
pop
loopne
dec
xchg
js
dec
push
xor
ret
loop
sub
or
nop
mov
shrl
notl
xor
inc
dec
insb
xor
sbb
fistl
push
fnstenv
mov
xchg
lret
and
addl
inc
sub
test
bound
xor
scas
outsb
jmp
testb
adc
pop
int
mov
lahf
xchg
and
sub
jecxz
dec
fdivl
movsb
je
sub
inc
outsw
fcomp
cmp
data16
mov
mov
lock
pop
outsb
fst
inc
iret
mov
cwtl
jns
scas
pop
in
adc
cmpsb
dec
jecxz
stos
test
sub
fildl
adc
stos
mov
lods
dec
insl
inc
pushf
adc
cmp
mov
inc
adc
xchg
adc
lds
cmp
add
hlt
mov
mov
outsl
pop
push
mov
into
movsl
cwtl
ljmp
clc
stos
dec
xor
jge
pop
ret
push
jl
and
cs
or
rcrl
rorb
sub
movsb
aad
mov
mov
fldenv
pxor
lret
sarb
pop
jb
fs
call
add
testl
jecxz
hlt
icebp
cmpsl
cli
cld
sahf
popa
out
push
pop
dec
push
inc
pop
repnz
loop
call
xor
cmpsb
pop
pmovmskb
je
nop
insb
stc
cmp
subb
rolb
in
enter
pushf
stos
push
jbe
cmpsb
and
aam
push
mov
dec
sub
and
pop
test
mov
push
mov
cs
in
push
stos
push
or
cmpsb
dec
mov
mov
mov
rclb
adc
add
and
testl
dec
mov
cmp
fldenv
sub
mov
lret
jmp
jne
jno
out
mov
mov
in
imul
fs
mov
ret
out
xchg
and
or
jg
fsubs
pop
out
pusha
fcmovnu
sub
add
xchg
jb
iret
sub
dec
imulb
jae
iret
loopne
inc
dec
ds
mov
jb
fiadds
lahf
mov
pop
jge
xchg
and
out
les
imul
rorl
jne
sbb
test
sbb
mov
xchg
aad
xor
stc
negl
mov
ret
lods
roll
pushf
jbe
or
in
and
push
sarb
out
pop
inc
hlt
add
movswl
add
jl
in
jl
shlb
mov
mov
negb
shll
cld
mov
std
adc
or
addb
icebp
inc
inc
mov
push
sub
mov
xchg
sbb
in
movsb
call
add
gs
mul
pop
je
dec
loopne
je
outsb
lret
push
add
popa
or
inc
clc
mov
loop
or
xchg
outsl
int3
ja
jecxz
test
imul
out
jmp
mov
jbe
in
loopne
aad
loopne
mov
lods
lock
adc
jmp
jecxz
mov
push
mov
lret
xor
icebp
or
imul
sbb
fistps
les
test
xchg
jge
loope
push
cs
push
mov
jne
negb
or
xchg
push
gs
push
mov
sub
xor
add
pop
pop
dec
mov
jecxz
jne
lds
mov
out
inc
push
std
packssdw
in
jns
lret
xor
je
cmc
jecxz
cmp
sbb
sahf
cmpsb
icebp
in
dec
cmp
in
popa
mov
popf
xchg
aam
xchg
hlt
sub
fs
cltd
call
in
xchg
dec
inc
andb
pop
movb
test
inc
push
cwtl
and
pop
cmp
jmp
lods
and
cmpsl
out
std
mov
push
imul
cmp
aad
flds
lea
fidivrs
adc
in
test
cltd
mov
pop
js
adc
and
mov
fnstenv
mov
mov
mov
push
inc
mov
in
push
js
ljmp
push
test
pop
xor
movsb
add
push
inc
popa
xchg
xchg
jnp
inc
into
or
cmp
and
inc
cmp
negb
pop
ds
or
out
xchg
push
mov
mov
repz
movsb
push
shlb
aaa
mov
popl
cwtl
xchg
adc
push
mov
xadd
pop
xlat
jle
int
je
movsb
sub
xor
add
mov
aam
jb
inc
gs
cld
pop
imul
cmp
fwait
clc
into
or
popf
mov
pop
xchg
stos
xchg
xchg
loopne
xchg
pop
push
inc
enter
adc
pusha
pop
add
sbbb
pop
std
xchg
add
inc
sub
in
add
idivl
mov
cltd
clc
stos
bound
repnz
lahf
int3
cmp
lcall
sub
or
cmpsl
mov
outsb
pushf
dec
mov
imul
xchg
andb
std
std
lods
sarl
xor
ds
xchg
push
inc
cmc
push
test
ljmp
mov
ja
into
dec
pop
mov
mov
es
nop
jns
mov
jnp
dec
jecxz
out
in
es
test
add
movsb
enter
mov
notl
mov
adc
inc
mov
and
xchg
popl
or
add
xchg
sbb
movsb
sub
jbe
cmpsb
sbb
push
pusha
cmp
in
std
dec
dec
enter
xor
loop
or
cld
das
arpl
je
xlat
xor
aas
andl
iret
dec
test
xor
je
enter
jns
inc
jl
mov
dec
cmpsb
scas
or
mov
out
xor
mov
and
lods
sub
pushf
cltd
insl
adc
jmp
in
outsb
mov
sub
sbb
ja
dec
std
push
xor
dec
add
clc
mov
pop
adc
adc
movsl
js,pt
push
mov
mov
scas
xchg
clc
inc
adc
sub
jnp
scas
mov
xor
scas
out
enter
mov
fcom
jae
pop
clc
dec
sbb
hlt
cmp
leave
ja
mov
shrl
inc
or
popa
xchg
push
dec
fcoms
jmp
js
push
pop
lock
test
xchg
and
push
add
pop
xchg
push
and
cmpsl
out
je
fisttpl
sbb
mov
inc
sbb
inc
imul
lahf
clc
icebp
int
enter
pop
sarb
mov
push
inc
pop
dec
mov
rclb
xchg
xchg
out
dec
adc
cmpb
jae
and
or
test
add
popa
xor
mov
xchg
jmp
cmp
cmp
dec
mov
mov
mov
and
xchg
scas
loop
pop
jno
sbb
js
jg
mov
cmp
mov
xor
dec
fidivl
jle
pop
adc
lahf
inc
dec
xor
jb
scas
outsb
addr16
in
leave
dec
xchg
in
xor
mov
sti
rolb
xchg
mov
push
lock
dec
repz
mov
jecxz
or
out
and
cli
nop
fiadds
aas
dec
test
out
adc
inc
test
mov
int
inc
push
sbb
mov
mov
jnp
xorb
xlat
pop
cmp
jl
push
and
pop
sub
repz
inc
and
fistpl
popf
fnsave
loope
or
jmp
pop
add
iret
xlat
inc
fcoms
repz
in
cmp
in
outsl
push
xor
nop
or
jbe
xchg
pop
mov
adc
xchg
fstpt
cli
daa
xor
mov
mov
dec
jg
in
sbb
in
or
shlb
jb
cs
jbe
cmp
in
push
movsl
mov
jle
lock
sbb
sarb
pushl
popa
mul
sub
mov
jmp
pop
xchg
adc
mov
rorb
push
xchg
aad
cmp
push
xor
lds
out
or
addr16
cmpsl
popf
in
xchg
xor
aaa
jb
mov
jmp
aad
mov
xchg
ss
loopne
cmp
xlat
jmp
inc
jbe
adc
xchg
inc
in
sub
pop
scas
fnstcw
outsb
dec
stos
ss
mov
xor
test
pop
lcall
cmpsb
pop
mov
jnp
inc
inc
pop
ret
shll
sbbl
insb
fnsave
ljmp
fimull
add
and
sbb
in
iret
mov
xor
dec
xchg
push
lods
clc
cvtps2pi
xor
jae
pushf
xchg
mov
mov
orb
aaa
cltd
sub
aas
add
and
cmp
sub
push
jae
cld
mov
sub
in
das
aas
add
js
mov
jle
mov
es
pop
inc
dec
imul
jl
push
mov
xor
mov
lods
xchg
outsl
data16
xlat
push
test
mov
into
sub
es
xchg
push
icebp
js
fucom
mov
outsl
out
movsl
mov
neg
into
push
ret
fsub
js
or
sub
mov
add
adc
inc
and
jne
jecxz
cmpsl
xchg
inc
xor
mov
mov
sti
aad
pop
push
mov
pop
fs
jno
push
sub
fisubs
outsl
pop
jno
outsl
push
rcl
or
mov
mov
clc
rcll
inc
mov
xchg
mov
add
mov
pushf
mov
bound
inc
int3
cmp
push
add
mov
inc
add
push
jp
mov
jmp
cmp
outsb
lcall
mov
aam
dec
add
fisubrs
xor
sub
sub
pop
mov
xchg
dec
out
or
and
sbb
dec
shr
mov
jo
imul
sub
rcll
xchg
and
pusha
sti
adc
pop
adcb
imul
adc
daa
mov
or
les
shl
pop
into
insl
loopne
pop
sub
fistps
cmpsl
jl
js
lcall
ret
lods
mov
movsl
scas
fsubrp
inc
vpsllq
xor
ljmp
xchg
sub
pop
pusha
push
inc
in
leave
xchg
pop
nop
adc
push
movsl
stc
jle
and
sub
ret
ficompl
dec
sbb
pop
adc
in
sub
jno
mov
sbb
sbb
jp
mov
jne
jmp
test
jb
mov
lea
push
adc
and
sub
mov
mov
jbe
inc
sarb
lcall
loopne
push
fnstenv
jecxz
xchg
test
subb
stos
cmp
clc
and
fdivrs
push
add
iret
adc
cmpxchg
out
sbb
shl
in
mov
or
fisubrl
mov
sub
cld
sub
inc
mov
jge
dec
mov
out
shlb
in
shlb
push
or
mov
idiv
outsl
xor
cmp
and
add
and
in
jg
mov
mov
ljmp
or
push
in
or
ss
aam
or
idivb
push
mov
adc
je
mov
stos
insb
mov
pop
and
popf
jg
into
mov
or
fiaddl
or
jecxz
jecxz
imul
and
dec
xlat
jg
jl
out
add
loop
sarl
stos
outsb
hlt
aas
cmp
out
jmp
pusha
mov
sub
int3
inc
sub
xchg
gs
movsb
add
nop
jo
adc
dec
add
in
aaa
inc
stc
jmp
jbe
arpl
test
push
out
add
sub
adc
fimull
pop
or
out
bound
faddl
int
out
mov
cmpsb
idivb
push
lds
add
push
sub
or
cmpsb
ret
fucom
xor
repnz
idivb
fisubl
push
ss
dec
pop
pusha
mov
repnz
dec
out
adc
iret
push
out
lcall
xchg
test
sbb
xchg
pop
fwait
dec
sti
ljmp
dec
test
sarl
mov
enter
cmp
mov
xchg
mov
mov
aas
fldcw
dec
jl
adc
add
sbbb
ret
mov
lahf
mov
popf
decl
add
daa
jle
jl
mov
fcompl
mov
push
aad
cld
sbb
mov
mov
outsl
cmpsl
daa
dec
test
scas
mov
pop
mov
imul
mov
lea
sarb
inc
pusha
pop
jne
ffreep
repz
fistps
inc
mov
inc
sarl
addr16
mov
shll
out
adc
cli
xor
jecxz
ja
icebp
sbb
pop
and
sbb
cwtl
pop
inc
jae
pusha
sbb
inc
lods
fprem
sub
jb
pushf
movsb
mov
adc
sar
sub
sub
and
or
out
add
xchg
enter
in
addr16
rcrl
inc
mov
cmp
sbb
fwait
mov
inc
inc
scas
stos
jmp
out
aam
jbe
adc
pop
or
imul
cwtl
jne
pop
mov
popa
inc
dec
mov
mov
xchg
in
lret
je
cmc
xchg
or
mov
push
xchg
insl
jnp
dec
arpl
mov
and
push
dec
ret
loop
adc
cmc
sbb
loop
loope
shll
and
loope
inc
push
fsubl
jl
aaa
or
add
or
insb
test
cs
scas
sub
loopne
mov
cwtl
add
sub
xchg
mov
ss
jecxz
out
xchg
xor
fcomi
sub
std
daa
push
dec
add
cwtl
in
ror
pop
mov
xor
xchg
addr16
insb
stc
jge
xor
data16
jmp
jbe
sub
call
jno
pusha
shl
adc
ret
pop
stos
nop
daa
mov
inc
mov
and
mov
inc
mov
sti
cmp
adc
fisubs
iret
pop
movsl
xor
lahf
movsl
cmpsl
mov
sbb
sbb
mov
or
mov
pop
clc
adc
subl
dec
repz
inc
inc
dec
movsb
mov
inc
adc
xor
shlb
mov
push
mov
jp
mov
nop
and
adc
or
outsb
push
push
pushf
outsl
mov
mov
aaa
fistps
scas
loop
test
ja
je
rcr
ja
inc
pop
push
mov
mov
inc
addr16
cli
xchg
rcr
lods
xor
hlt
iret
lret
mov
cmp
in
test
out
and
jle
sub
sbb
aaa
xor
mov
lcall
mov
sarb
mov
mov
insl
mov
loope
aaa
mov
jbe
movsb
cltd
stos
clc
or
std
mov
cmp
leave
mov
dec
sahf
aaa
in
roll
mov
test
fcmove
pop
cmp
loopne
add
inc
test
pop
out
incl
sub
fisubs
and
and
lret
int3
rcrb
sbb
popa
std
add
clc
adc
mov
pop
lods
subb
cmpl
ljmp
jmp
jmp
add
jnp
dec
jg
xor
pop
inc
outsb
pop
xor
lods
lret
jg
adc
push
pop
pop
push
pop
add
jae
xchg
xor
xlat
push
sarl
pop
xchg
xchg
psubsw
xchg
fsubrp
xor
rcrb
push
sub
mov
lds
mov
sbb
mov
inc
stos
scas
out
cwtl
pop
ficoml
iret
add
insb
pop
iret
xor
cmc
jp
sbb
lods
cmp
leave
ljmp
xchg
mov
mov
mov
pop
ficoml
mov
icebp
daa
cld
popf
jle
jbe
ffree
aad
aaa
inc
mov
test
repnz
jae
testb
inc
mov
add
mov
mov
ja
in
inc
int
mov
cmp
or
fdivrp
aad
mov
out
cmp
ja
pop
jb
inc
std
push
and
js
int
insb
ja
mov
push
arpl
lock
outsb
xor
and
enter
ss
jnp
xchg
pusha
adc
mov
fs
xchg
mov
xor
cmpsb
rorl
leave
sub
cmc
cmp
outsb
push
fwait
sub
shlb
mov
shr
into
mov
fstps
xor
cmpsb
xchg
and
out
pop
pop
pop
push
xchg
in
loop
mov
add
adc
sbb
inc
xchg
push
out
cmc
int
mov
insb
lret
jae
subb
mov
mov
movsb
aas
push
insb
call
out
imul
sysret
or
pop
inc
neg
sub
jle
add
mov
jnp
mov
add
sti
cmpsb
sbb
arpl
or
movsb
adcl
mov
sahf
ds
cltd
or
dec
cmp
ds
jecxz
push
test
mov
sti
mov
andl
mov
rcr
cmp
inc
dec
push
adc
jl
mov
jns
xchg
push
push
fidivl
mov
stos
add
mov
inc
loope
outsb
ds
lods
cs
fs
js
add
xor
push
lea
sbb
es
mov
jle
insl
rcr
fwait
jb
sub
pop
and
out
xorb
pop
cwtl
lret
sbb
arpl
sbb
push
lods
dec
and
movsl
rol
int3
test
pop
pop
push
lds
aam
rol
sub
out
test
mov
sub
sub
scas
sbbl
add
ljmp
add
inc
in
or
imul
and
xlat
xchg
pop
repz
popf
cmp
xlat
xor
jo
call
fsubrs
dec
or
cwtl
cld
stos
clc
push
aas
in
dec
call
mov
xor
loop
sub
ss
and
in
insl
pop
arpl
push
nop
xchg
sti
xchg
mov
mov
pop
fistl
mov
gs
mov
cmpsl
in
call
push
mov
stos
aas
xor
mov
sbbl
add
mov
push
bound
pop
pop
lret
pop
stos
push
cmpsb
pop
add
sbb
pop
cmc
cmp
lods
mov
cmpsl
lods
movups
sahf
xlat
jns
mov
je
lret
loop
stc
ss
mov
sub
xchg
jge
mov
fisubrs
sub
out
mov
test
test
pop
xchg
call
xchg
test
xchg
loope
in
push
push
loopne
out
ja
mov
jnp
push
xchg
lods
int3
push
daa
dec
jecxz
shlb
jns
add
rclb
sub
lods
lret
cmp
sub
mov
add
push
or
xchg
sbb
adc
xlat
bound
hlt
pop
sub
or
sbb
add
fildll
stc
jo
inc
xchg
sbb
push
lret
cltd
mov
imul
mov
aaa
cmp
fcomps
xchg
push
push
and
mov
out
mov
or
inc
jb
imul
push
aaa
mov
jae
mov
out
xor
cwtl
lret
mov
xor
std
add
cltd
mov
lret
mov
aam
das
inc
rcrl
fwait
mov
jle
fildl
outsl
mov
xor
rorl
xor
sbb
sbb
imull
xor
into
add
fmull
daa
sub
arpl
inc
test
iret
dec
mov
mov
daa
lock
and
and
cwtl
push
adc
mov
cmc
fadd
mov
and
stos
lods
cli
pop
imul
sbbl
mov
scas
mov
dec
hlt
lock
push
lahf
xchg
dec
je
or
imul
inc
and
mov
js
sub
or
bound
icebp
lcall
add
inc
xorl
js
jae
adc
mov
mov
push
int3
mov
sbb
rclb
call
inc
mov
arpl
movsbl
push
enter
or
adc
xor
lock
faddp
push
mov
aad
mov
repz
je
jmp
aas
push
push
stc
adc
enter
push
subb
inc
bound
push
addr16
xchg
movsb
enter
jmp
aas
pop
aam
mov
mov
mov
and
lret
movsl
jnp
jle
xchg
inc
pop
faddl
dec
addb
aas
sbbb
jo
mov
push
das
dec
fsubrp
cmp
cmp
cmp
add
sbb
in
add
lea
dec
imull
aaa
push
adc
ljmp
mov
push
aaa
dec
xor
jne
test
jge
lods
sti
ja
adc
dec
pusha
fwait
lret
hlt
push
xchg
pop
sub
sub
pop
jle
push
cmc
insl
and
push
sub
sbb
sbb
loopne
imul
jbe
frstor
jbe
inc
jmp
mov
loope
mov
pop
adc
xchg
mov
pop
cli
pusha
cmp
push
movsb
jl
call
stos
cmpsb
cmp
xor
push
insl
testb
lds
lea
inc
cli
and
mov
fildll
cltd
in
xchg
push
cld
adc
aas
and
xor
jp
lods
sbbb
loope
adc
adc
pop
fwait
out
adc
call
test
fwait
jbe
out
dec
push
push
xchg
enter
mov
mov
or
into
adc
pop
aaa
int3
push
jnp
pop
insb
inc
and
pop
mov
mov
mov
out
lahf
mov
mov
aam
cwtl
jecxz
in
ficoml
mov
mov
insb
lahf
add
imul
mov
fcmovb
faddl
mov
test
mov
fisubs
mov
ljmp
in
test
in
add
sub
adc
or
inc
and
insb
shr
mov
popa
xor
das
sarl
js
push
or
push
lret
lea
sbb
lods
ret
mov
ret
cld
movsb
pop
flds
imul
jne
jo
clc
xchg
mov
jae
and
jl
sub
pusha
les
mov
cs
pop
mov
sub
sar
mov
xor
push
popf
in
push
add
pop
lahf
jge
add
mov
jp
fstps
fucomi
lret
adcl
aas
repnz
loopne
inc
sub
pusha
pop
add
dec
mov
cmpsb
pop
sub
add
inc
sbb
mov
in
sahf
imull
mov
cld
sbb
nop
test
cmp
js,pt
std
jl
xor
insl
les
mov
in
jmp
int
mov
cmpsb
loopw
mov
cmovns
sub
mov
cmp
or
outsb
mov
pop
insl
jecxz
dec
and
cmc
out
jo
call
jbe
jo
popa
sbb
mov
rclb
xchg
pop
mov
mov
xchg
xlat
iret
jae
pop
fwait
pop
ret
or
push
lret
aam
mov
hlt
stc
dec
cwtl
lock
je
push
cs
inc
out
xchg
and
mov
shrl
fisubl
popf
in
cli
jmp
jo
mov
movsb
mov
inc
or
dec
cmp
cli
cmp
sub
push
xlat
mov
data16
push
mov
fistl
in
out
bound
xor
jge
push
xor
aas
loop
jp
cmp
std
mov
gs
inc
lret
sbb
out
push
jae
push
in
lea
lds
inc
mov
mov
cld
xchg
cld
xchg
cmp
sub
ds
insb
not
and
in
cmc
xchg
fldl
inc
mov
cmp
pop
dec
mov
xchg
roll
pusha
mov
pusha
iret
xor
mov
lahf
add
repz
sbb
arpl
pop
fldl
mov
test
call
pop
sub
sahf
xor
push
loope
mov
cmc
adc
mov
imul
xchg
popf
xor
pushf
loop
ljmp
inc
hlt
imul
sub
sbb
popf
cmp
push
adc
xchg
lea
arpl
xor
or
jnp
arpl
push
jp
sub
add
shr
adc
arpl
lds
or
fsubrs
testl
icebp
push
lahf
mov
inc
inc
adc
outsb
jnp
push
hlt
inc
mov
sbb
add
jmp
int3
cwtl
mov
lods
jl
dec
cld
cmpsb
mov
adc
fmul
outsl
inc
xchg
sbb
hlt
push
mov
test
bswap
iret
jo
lds
out
or
add
jge
lcall
push
mov
je
add
jns
loop
add
mov
mov
std
push
jecxz
mov
pop
mov
adc
ror
repz
cli
sbb
pop
cmp
testb
loopne
lea
imull
jo
dec
aaa
dec
and
aad
rcll
movaps
sub
outsb
out
mov
mov
hlt
add
jp
adc
mov
lahf
sbb
nop
adc
jns
out
or
les
and
push
gs
push
inc
fs
cmp
cmpsl
jno
pushf
cmp
imul
dec
aaa
bound
fists
bound
sbb
sub
and
xor
sbb
leave
icebp
out
mov
int3
mov
loope
insb
xchg
pushf
aas
add
lods
dec
cmp
sub
cmpsb
test
jmp
jecxz
cmp
cs
cld
in
mov
movsb
loop
cmp
sbb
shr
cmpsl
cmp
cmp
xor
sbb
out
js
ss
jle
cmp
jne
pop
repz
cmpsb
xor
or
aam
cmp
mov
xchg
adcl
and
jb
mov
popa
sbb
add
xchg
stc
mov
add
mov
dec
push
or
je
dec
sbb
aas
mov
fldcw
incl
mov
int
lret
mov
mov
dec
jnp
ret
fcmovnb
add
fiaddl
cltd
in
mov
jo
inc
sub
repz
les
sbb
out
push
int
push
lds
jmp
add
xlat
pop
adc
xor
jecxz
in
mov
lret
out
pop
or
imul
jecxz
cmp
inc
inc
sbb
sbb
test
jmp
paddusb
lock
pop
ds
pop
pop
mulb
mov
lahf
xor
fidivs
pop
inc
dec
fnstcw
pop
inc
and
in
sbbb
add
fs
inc
mov
lods
rorb
cs
jne
sub
add
fidivrl
cmpsl
cs
ja
sub
sarl
mov
icebp
fnstcw
push
mov
mov
jg
jmp
sbb
leave
cld
inc
inc
pop
hlt
scas
dec
leave
cli
or
call
push
mov
or
sbb
mov
push
in
stc
in
push
cmpsl
jns
pop
iret
mov
mov
bound
jae
les
mov
cltd
mov
push
je
pop
imul
jns
mov
sarb
stos
repnz
jbe
sub
hlt
push
mov
fstl
stos
mov
and
mov
outsb
push
jecxz
cmp
cmc
fistps
dec
aam
add
and
jle
lods
leave
add
mov
imul
out
movsl
fisttpll
and
roll
cmp
inc
scas
adc
mov
das
jg
cpuid
add
out
pop
dec
add
repz
mov
mov
int3
repnz
int3
jne
mov
ret
xchg
jmp
push
mov
mov
jl
arpl
fidivl
push
clc
jno
xchg
cmp
cltd
fcmovnbe
jl
xor
cli
pop
out
push
mov
pop
ja
test
mov
test
inc
adc
cmpsb
mov
xchg
mov
adc
xor
xor
mulb
push
fwait
sub
pop
mov
push
scas
add
sub
pop
call
mov
enter
add
mov
mov
sbb
les
and
inc
mov
jmp
std
es
sbb
lods
shrb
pop
fsts
xor
out
cld
test
or
leave
out
sahf
adc
mov
jo
pop
sub
loop
jno
push
push
lcall
mov
mov
mov
repz
jl
or
pusha
aas
add
cmp
fs
popf
sub
sbb
pop
enter
popa
dec
xchg
cmp
movsb
inc
sub
arpl
or
add
sbb
mov
iret
aaa
cmp
out
stos
add
sub
xor
pop
negl
dec
ja
xor
pop
or
es
adc
jne
out
subb
test
insb
into
pusha
or
enter
inc
repnz
decl
aaa
lahf
fidivrs
fisubl
mov
cwtl
mov
sub
cmpsl
das
cltd
mov
fidivl
adc
sub
and
ret
jnp
ror
push
clc
stos
sbb
stc
mov
sbb
and
inc
xchg
in
pop
inc
jmp
mov
xor
push
pop
lock
jnp
push
out
ljmp
dec
inc
ja
in
cs
ss
addr16
mov
in
ds
push
fldenv
jae
xchg
push
jmp
jle
adcb
in
xor
mov
out
je
mov
xor
pop
std
dec
adc
mov
push
and
lock
lock
and
orl
and
scas
lods
addr16
and
jne
ds
sbb
fadds
xchg
test
aad
sub
adc
mov
dec
sbb
cmp
lods
flds
andl
add
push
mov
pop
mov
fidivl
std
cmp
es
jo
xchg
push
pop
mov
in
mov
add
pop
xchg
repnz
sub
push
adc
jno
inc
loope
daa
int
fisttps
pop
lods
dec
jecxz
stc
roll
popa
test
sti
shll
cmpl
inc
mov
in
ds
ss
fldcw
sahf
sub
cltd
dec
jle
call
stc
push
shlb
pop
jecxz
lret
je
fs
hlt
xlat
and
out
js
lahf
xchg
insl
movsb
icebp
imul
dec
out
shrl
mov
jl
push
mov
pop
dec
mov
jnp
into
jmp
icebp
jbe
out
fdivrs
aaa
mov
pop
fcomps
xor
aaa
enter
fucomip
shll
xchg
push
nop
es
loop
push
mov
daa
xor
popf
rcll
mov
jge
loope
adcl
ret
mov
jmp
mov
or
dec
mov
push
jle
data16
jp
cld
mov
test
dec
jne
lods
cmp
push
mov
push
lret
subl
pop
gs
sahf
xchg
fdivr
fsts
stos
cmp
dec
ss
push
sbbb
cmp
cmp
xchg
das
lds
pushf
lret
fucompp
dec
mov
dec
repz
out
push
lahf
pop
ss
mov
mov
jb
mov
add
nop
mov
scas
mov
das
lcall
adc
push
jp
add
mov
pop
out
les
push
movsb
add
mov
or
and
cltd
or
movsb
fs
dec
shrl
outsb
in
idivb
and
xchg
sub
xor
mov
mov
push
mov
inc
push
ljmp
imul
cmp
test
jbe
loope
inc
aas
xchg
push
xchg
jnp
pop
or
repz
cmp
push
mov
pop
sub
popa
push
lods
sarl
xchg
dec
and
xor
cmpl
fldenv
ja
mov
dec
inc
add
mov
ljmp
and
mov
lahf
xor
and
sbb
jbe
push
fwait
mov
xchg
adc
inc
int3
jnp
nop
test
jle
ret
xchg
sub
insl
cmpb
fidivrs
iret
aas
dec
mov
cli
mov
jecxz
cli
jg
arpl
jne
movsl
xlat
outsb
mov
dec
push
push
push
or
out
roll
mul
aas
pop
mov
mov
nop
push
lcall
xchg
cmp
cs
or
cli
f2xm1
mov
sbb
xchg
sub
loopne
add
mov
outsl
push
lock
jbe
mov
pop
sbb
push
and
insb
mov
movsl
mov
insl
icebp
mov
sti
repz
jg
js
and
enter
add
xor
movl
sub
addr16
mov
fsubl
inc
inc
add
in
sub
fcompl
cld
push
hlt
sete
pop
idivb
dec
sbb
inc
lcall
mov
mov
das
daa
lret
push
xor
int3
xlat
aam
push
imul
inc
out
imul
or
insb
sub
adc
cmp
push
sbb
lods
es
outsb
xor
mov
cld
xor
mov
jmp
push
mov
ss
pop
in
in
jns
or
dec
in
mov
xchg
push
mov
fld
xchg
aam
stos
push
xchg
xchg
or
sahf
cmpsl
jns
jns
mov
mov
sub
pop
out
outsl
jbe
xchg
out
inc
mov
mov
jl
loop
xorl
push
sbb
push
hlt
movsb
fucomp
pusha
mov
jecxz
mov
jns
ds
or
mov
dec
sbb
popa
cli
jl
jg
mov
scas
inc
push
adc
rcll
jmp
ret
sub
or
adc
xor
cld
cmp
sbb
into
bound
xchg
add
repz
xor
inc
mov
or
push
dec
jp
mov
push
adc
std
lret
fisubrl
xor
adc
icebp
mov
cltd
movsl
mov
add
or
or
mov
ret
mull
pop
push
inc
cmp
fwait
ret
mov
aas
in
lods
out
lds
ja
mov
mul
out
inc
das
mov
popf
in
push
adc
sub
insb
cmp
and
fildl
xchg
mov
or
inc
js
test
dec
imulb
sub
cmp
or
add
xor
lods
sbb
push
loopne
int3
pop
icebp
mov
xchg
mov
frstor
or
sarb
addb
xchg
popf
push
jp
mov
loope
sbbb
movsl
jns
jmp
add
jecxz
imul
sub
movsl
xor
push
stos
adc
lret
dec
fs
jmp
cmp
and
sub
pop
sub
cmc
mov
sub
cmp
fadd
sbb
notb
ret
fcomps
and
and
es
mov
fs
insb
dec
mov
jne
adc
xchg
hlt
std
sbb
es
in
clc
mov
push
stc
jns
pushf
outsb
es
or
ds
scas
test
sahf
fcoml
adc
push
mov
inc
fisttpl
testb
aam
mov
hlt
xlat
jg
fistpll
mov
imul
sbb
mov
cmp
lret
or
push
leave
pop
fwait
ljmp
cmp
mov
push
pop
clc
dec
test
movb
ret
gs
scas
mov
orl
sub
ljmp
fwait
mov
lock
xchg
jl
adc
dec
add
aas
dec
jle
cmc
mov
movsb
ds
push
outsl
inc
mov
pop
adc
aaa
cli
stos
mov
mov
pop
adc
jecxz
arpl
ret
jnp
jecxz
push
mov
loop
push
dec
mov
mov
lret
daa
icebp
sub
pop
adc
xor
jbe
inc
adc
pop
fstl
repnz
mov
and
pop
push
ficompl
lret
out
into
outsb
push
call
sahf
fdivl
inc
inc
aas
int3
add
mov
das
jne
jge
add
push
jmp
or
stos
cwtl
cmp
inc
push
test
lock
gs
adc
ljmp
pop
je
sbb
out
lcall
xchg
jle
jne
lret
orb
adc
pop
jmp
and
aad
fnstenv
cmp
xchg
ja
sub
mov
jl
lock
icebp
dec
into
jns
sti
jg
and
in
and
dec
lods
sahf
testb
mov
pop
out
je
fists
or
fcomp
outsl
sti
push
in
adc
push
sub
out
mov
fwait
xchg
shlb
call
das
sub
pop
ror
loope
js
inc
push
jle
cmp
loop
cltd
enter
les
addr16
or
cld
sahf
lahf
aam
fs
loop
mov
mov
es
nop
outsb
inc
jnp
jb
xchg
movsb
pop
ja
lret
fnstsw
mov
cmpsb
push
mov
pusha
pop
adcb
dec
jg
aas
add
ds
divb
jo
dec
or
add
xorb
jle
dec
leave
xchg
jb
mov
push
fs
mov
xchg
js
adc
idivb
inc
lahf
fidivrs
pop
lea
addb
jbe
sarb
adc
fidivrs
out
ljmp
and
sbb
add
fwait
popf
stos
push
movsl
xorb
lock
insb
ficoml
cmpsl
les
cmpsl
mov
and
mov
add
pop
xor
xchg
arpl
nop
scas
push
push
andb
scas
mov
imull
mov
mov
push
lds
pushf
push
rcrb
or
mov
shll
pop
nop
sub
fisttpl
sbb
inc
fsubrl
cwtl
xchg
sub
movsl
mov
add
jnp
daa
jb
push
ljmp
push
out
dec
adc
loope
mov
xchg
hlt
movsb
inc
or
adcl
lods
out
ja
push
fmulp
ds
sbb
jmp
cmp
add
pop
jae
dec
lods
ret
mov
inc
out
dec
imul
xchg
xor
pop
push
jno
mov
pop
sar
rclb
add
mov
xchg
fdivrl
test
les
mov
lds
cmp
mov
mov
and
mov
fldt
shlb
stc
push
movsl
xchg
fsubrs
mov
mov
nop
je
add
pop
stc
insb
ds
imul
push
xchg
mov
sbb
jg
cs
sub
in
mov
rcll
mov
out
iret
or
in
out
and
icebp
push
aas
and
xor
push
pop
cmpsl
gs
jo
cmc
xchg
out
adc
add
sets
jmp
dec
iret
jno
stc
mov
ret
or
jl
push
imul
add
in
cmpsl
or
pop
push
sub
jnp
jo
xor
int
es
dec
sbb
mov
sbb
mov
lds
jb
dec
mov
pop
das
dec
movsl
dec
std
add
jle
pop
mov
fwait
clc
pop
imul
cwtl
pop
push
mov
movsl
fs
fimull
fnstenv
mov
push
scas
out
enter
inc
es
loop
push
sub
cmpsb
xor
cltd
call
push
insl
push
scas
dec
in
push
inc
rcll
push
pusha
jno
mov
enter
sub
in
ret
pop
sahf
inc
aad
lods
in
cmp
lahf
mov
sahf
xlat
sbb
xchg
add
loopne
cmp
insl
daa
jge
jp
sbb
stc
cmp
adc
icebp
push
dec
lcall
jp
enter
xor
xchg
adc
mov
or
daa
leave
push
rcr
or
fdivp
add
clc
mov
in
sub
adc
push
dec
sub
sbbb
and
sbb
ja
mov
jl
mov
mov
int
xchg
mov
lret
xor
xor
mov
ficoms
xor
cwtl
lds
push
jp
das
adc
jp
add
sbb
das
ret
idivl
mov
ljmp
dec
cltd
inc
movsb
loopne
mov
insb
pop
xlat
out
arpl
push
cs
in
ss
xchg
xor
sub
xor
movsb
xor
mov
jo
push
push
dec
and
or
cmc
cmp
rorl
ror
pop
daa
sahf
pop
call
imul
dec
xchg
pop
mov
test
cmpsl
in
loop
and
les
pop
adc
push
push
inc
xchg
enter
add
lea
std
cli
add
jmp
sarb
popf
adc
xor
dec
jmp
push
add
sbb
fwait
push
adc
sbb
mov
or
lods
arpl
sarl
cld
sahf
gs
les
dec
inc
pop
das
or
in
push
xchg
xor
push
pop
jmp
mov
aas
in
aaa
add
orb
xor
lock
mov
lea
push
stc
hlt
fisubs
icebp
and
fists
xchg
jns
xadd
dec
dec
xor
ds
je
aam
test
jns
aam
cmp
js
or
mov
movsb
mov
loope
ficomps
test
stc
push
xor
sub
add
push
es
arpl
cs
and
adc
dec
sbb
cmp
nop
aam
pop
cmp
add
ss
dec
xlat
nop
dec
pop
push
in
sysexit
add
cwtl
int3
cmp
rcrl
cmp
push
fldl2t
data16
sub
jecxz
mov
bnd
dec
push
cs
add
push
leave
testb
mov
int3
pusha
sbb
adc
pusha
pop
sub
jle
and
inc
and
lock
out
add
jbe
push
push
pop
dec
mov
dec
sahf
fmuls
inc
into
mov
fwait
jnp
pop
cmc
xor
mov
cmpsl
sbb
daa
cmp
and
xchg
dec
xlat
pop
lds
lahf
mov
es
adc
popa
aaa
rorb
push
push
sub
add
mov
sub
mov
test
jbe
and
xchg
dec
mov
jp
jle
mov
test
fs
mov
pop
and
inc
and
scas
popf
mov
icebp
and
mov
add
loope
cltd
mov
fisubl
push
cmp
imul
jge
fbstp
or
xchg
inc
inc
addb
or
aam
xor
mov
xor
rolb
std
xor
sbb
fists
outsb
shlb
pop
push
outsl
movsb
cmp
scas
outsb
or
daa
inc
add
sbbl
es
stc
dec
and
sbb
and
ss
mov
out
dec
mov
jecxz
pop
xchg
mov
pop
xchg
lock
loop
push
mov
jmp
test
xor
aam
or
lcall
daa
cmp
dec
cli
pushf
mov
subb
or
jp
cwtl
mov
mov
add
jne
dec
xor
mov
inc
xchg
dec
sbb
pushl
mov
movsl
jmp
insl
sbb
xchg
ds
scas
fisttpll
xor
mov
mov
in
enter
push
out
pop
mov
in
outsb
and
mov
pop
mov
push
sbb
imul
push
test
imul
pop
jmp
aad
test
jns
fwait
ja
inc
jae
mov
sub
popf
xchg
xor
push
lcall
int
lahf
mov
in
fwait
add
xchg
xor
mov
loopne
mov
cmp
mov
aam
xchg
push
stc
je
sbb
push
cmpsb
add
dec
inc
ss
lock
loope
pop
mov
jbe
imul
test
jg
xor
pop
cmp
scas
rorl
mov
les
push
gs
push
cmp
sub
cmp
aad
fimull
adc
fs
xor
fnsave
jno
add
popf
sub
sub
push
mov
call
loopne
mov
or
xchg
xor
out
pop
scas
jb
inc
ret
pop
stos
add
push
scas
or
push
fldt
mov
frndint
push
cmp
scas
xchg
in
repz
push
stos
divb
es
rclb
jge
mov
cmp
cwtl
xchg
mov
ss
push
shlb
inc
mov
cmc
imul
mov
lret
ds
dec
jmp
popf
or
mov
xlat
fisttpll
pop
pop
mov
jnp
outsb
cmc
je
adc
sarb
jno
mov
cmp
jne
and
sti
fisttps
daa
stos
jnp
scas
enter
and
add
jmp
lcall
stos
rcr
lea
jae
sarb
fwait
cli
lds
xlat
test
mov
std
mov
subb
add
xchg
in
movsl
pop
pop
shrl
push
adc
hlt
add
jg
ret
notl
push
stos
scas
lcall
xchg
out
fldenv
xchg
lods
loope
repz
fsubrl
out
cs
sub
bound
lret
xchg
jne
cmp
cli
push
addr16
mov
dec
xor
lods
add
fs
outsl
cld
dec
cmpsl
ss
out
push
jns
ja
push
inc
push
loopne
rolb
add
dec
sbb
mov
ret
jne
mov
pushf
mov
sbb
ret
jle
sub
aad
mov
iret
adcl
xchg
cmp
hlt
in
mov
inc
cmp
in
je
mov
pop
and
ja
mov
push
mov
arpl
les
sub
pop
and
movsl
fwait
sbb
call
sbb
pop
jp
aad
push
outsb
jmp
fcomp
movsb
add
aaa
filds
push
adc
adc
sbb
les
mov
xchg
popf
stos
or
push
loope
adc
xchg
mov
addb
loopne
movsl
imul
push
xchg
call
je
pusha
sbb
shrl
stos
xchg
mov
pop
in
inc
jae
ret
or
popf
pop
sbb
int
cmp
or
cli
push
aad
adc
shrl
cmpsb
jb
ljmp
sarb
cmp
ja
rcrl
popf
xchg
push
sbbb
popa
aaa
repnz
or
cmp
out
jl
ds
ret
in
cltd
add
cmp
push
ss
mov
adc
inc
popa
insb
cmp
das
bound
adc
in
fmull
inc
and
sahf
ljmp
lds
pop
mov
iret
shll
sub
and
daa
mov
andl
and
xchg
jecxz
fdivr
cmp
mov
into
or
push
push
adc
or
lds
jns
inc
mov
dec
movsb
stos
adc
cmp
cmpsb
push
cmpl
xchg
cs
mov
dec
je
subl
pop
push
mov
dec
jae
pop
cmp
jge
xor
mov
push
test
inc
popf
cmc
xchg
push
pop
fmuls
out
inc
mov
fmuls
cltd
out
incl
int3
jg
sub
xchg
clc
ljmp
inc
or
test
mov
push
rorl
xchg
inc
jg
call
pop
mov
sbb
inc
jb
ljmp
lcall
mov
repnz
dec
mov
incl
xor
or
push
and
testb
mov
cmp
mov
adc
mov
mov
mov
int3
into
or
mov
push
pusha
adc
cmp
fwait
mov
outsb
fiaddl
test
or
outsb
mov
jae
pop
adc
mov
jne
pop
icebp
push
popa
dec
fwait
push
sub
xor
in
push
cmp
mov
jecxz
lret
insl
dec
out
andl
cmc
fldl
in
jne
xor
mov
xchg
dec
xchg
scas
fidivl
and
out
ds
jmp
pop
sub
lea
inc
pushf
cmp
push
das
call
or
cmp
mov
sub
pop
mov
out
lods
cmp
pop
inc
jne
push
cmc
push
iret
dec
out
inc
xor
js
pop
ret
inc
ss
mov
ret
fimuls
jae
pop
popa
loope
aas
fwait
add
fnsave
gs
dec
mov
sbb
in
jmp
sbb
add
gs
popa
xor
adcb
ret
mov
adc
mov
mov
nop
enter
loope,pn
lea
faddl
fstpt
xor
sahf
and
jge
cmc
mov
sub
dec
fs
mov
lods
movsl
push
in
call
outsl
clc
mov
push
xchg
push
in
pop
xchg
fsubs
sbb
adc
dec
in
and
in
xchg
push
push
push
push
jl
rcrb
or
sti
in
and
mov
jg
xchg
lock
loopne
xor
jge
fdivrl
sbb
dec
aam
aaa
xchg
jns
xchg
jae
push
adc
fucomp
out
push
aaa
roll
add
cmpsb
add
enter
in
cs
xchg
push
inc
xchg
movsb
push
pop
sub
scas
mov
adc
mov
les
sti
ljmp
mov
jb
nop
add
leave
dec
rcll
fcom
ja
jge
push
xchg
mov
in
mov
inc
sbb
ficomps
dec
xlat
jge
lret
sub
or
cmp
std
xor
cmp
je
xchg
rcrl
fcmovnu
jl
mov
sbbb
cmp
rcrb
pop
xor
outsl
mov
dec
shlb
sub
and
arpl
jne
jae
arpl
jo
pop
mov
jae
push
and
into
dec
inc
push
and
shrb
mov
add
ficomps
cmpsl
ss
stos
js
sub
movsb
jnp
mov
sub
push
jns
sbb
xchg
inc
std
jp
enter
add
nop
std
mov
sub
idivb
ds
push
shll
adc
mov
add
push
and
ds
mov
or
mulb
pop
push
aad
fdivs
pop
aad
mov
or
dec
xchg
mov
sub
stos
xor
pop
xor
into
test
mov
mov
jb
inc
pop
fldenv
out
push
call
leave
sbb
adc
mov
push
lcall
gs
sbb
sahf
ret
and
call
aad
icebp
add
outsb
mov
test
push
mov
mov
mov
outsb
int
pop
push
js
push
push
pop
loop
push
xchg
outsb
not
bound
cld
cltd
ret
ljmp
call
sbb
lods
rep
not
negb
xchg
scas
fcomps
icebp
fidivl
shlb
mov
sub
inc
shrl
imul
popa
cmp
adc
aas
inc
mov
in
push
push
lret
shrl
adc
jmp
or
loop
mov
scas
dec
bound
dec
inc
std
cmc
or
addr16
out
jl
lods
dec
mov
sbb
push
cli
cmpsb
fsubp
sub
xor
add
fdivs
inc
dec
int3
push
int3
cmp
jno
mov
push
nop
pop
test
cmp
jecxz
push
sbb
jno
lods
push
pop
les
or
adc
push
shlb
dec
hlt
pop
cmpsl
shlb
rorb
sbb
xor
xchg
mov
ret
mov
jns
and
jmp
sbb
sahf
loop
nop
dec
xchg
lret
aas
mov
pusha
adc
shlb
das
mov
push
add
jbe
sub
test
out
sahf
out
mov
mov
imul
xchg
mov
sub
push
xor
lcall
pop
mov
dec
pop
mov
inc
divl
sti
inc
mov
add
lods
xor
jb
dec
adcl
stos
lret
pop
add
out
push
test
sub
in
sbb
push
and
or
push
shr
dec
bound
orb
out
insl
cmp
arpl
js
out
testl
mov
mov
jp
rcll
sub
lahf
cltd
add
ds
push
pop
xchg
cld
jmp
enter
mov
inc
pop
jnp
jbe
lret
sub
addb
lea
xlat
dec
ss
mov
outsb
mov
pushf
pop
lcall
xchg
sub
pop
mov
sbb
xchg
test
push
adc
jecxz
das
mov
mov
fidivrl
adc
arpl
je
icebp
jae
mov
pusha
inc
lahf
cmp
xor
in
sub
jae
add
pop
pop
jo
xor
data16
inc
xor
inc
pop
mov
mov
sti
stos
int
ret
lcall
lahf
mov
pop
shlb
cmp
out
sahf
inc
sbb
ljmp
subb
mov
mov
push
daa
fadd
sub
cli
fsubrs
xchg
add
test
subb
and
sbb
cmc
cmp
pop
sti
mov
fsubl
inc
xchg
insl
sbb
rcl
stc
stos
add
dec
jg
imul
or
cmp
inc
enter
dec
fs
inc
mov
scas
xor
jmp
bound
pop
in
mov
dec
cmp
add
pop
lds
in
cmc
gs
mov
mov
shrb
fcom
mov
fdivrl
xchg
fimuls
lods
mov
mov
nop
shl
or
push
std
xor
mov
lds
testl
add
aad
ljmp
jmp
xor
xchg
out
lret
mov
leave
and
xchg
inc
adc
test
jmp
inc
xchg
dec
or
in
mov
lret
jnp
adc
jno
daa
enter
arpl
cmp
out
ja
jl
cld
inc
pop
bnd
add
xchg
aaa
aas
popa
fcoml
int
out
rcl
sub
mov
cli
fmull
jo
into
mov
cmpsl
call
pop
mov
sbb
mov
clc
push
pop
jb
cmpsb
sub
pop
ja
test
adc
outsl
inc
push
xor
dec
jmp
cwtl
stos
popa
push
scas
jbe
sbb
pop
mov
and
mov
xor
and
ja
push
mov
dec
pop
jnp
cs
scas
mov
hlt
push
push
add
scas
insl
lods
xor
stos
inc
bound
mov
sti
jge
sub
dec
movsb
test
lcall
inc
aas
fwait
inc
cmpsl
adc
ret
sbbb
divl
loop
xor
pop
pop
lahf
adc
mov
inc
fiaddl
add
pop
test
fildl
into
push
stos
push
xchg
out
lret
enter
shlb
stc
icebp
add
enter
std
scas
out
icebp
or
cmp
movaps
lahf
gs
lods
push
dec
pusha
ret
insl
pop
mov
push
ljmp
cmp
adc
push
push
or
jb
mov
test
xchg
jnp
cwtl
jmp
jae
sub
mov
sub
clc
mov
mov
jecxz
xchg
and
scas
out
adc
dec
imul
mov
sar
xlat
rcl
sub
in
lahf
mov
stc
and
inc
adc
dec
es
or
fsubs
cmp
push
cmp
into
xlat
cmp
adc
fs
dec
arpl
stos
in
adc
lret
push
cs
movsl
idivl
cmp
xor
lds
push
cmpsl
pop
push
pop
cmp
mov
push
aad
dec
gs
pop
push
call
jg
cli
clc
dec
jle
cli
sbb
lea
sbb
inc
fbstp
pop
fisubs
mov
je
xchg
loope
sub
lea
pop
mov
jo
inc
orb
pop
xchg
and
add
pop
jmp
add
pop
mov
inc
push
xchg
ja
cmp
push
cltd
pop
repnz
and
cmp
dec
icebp
bound
sbb
nop
mov
inc
cmp
mov
xchg
ret
push
mov
cmpsb
call
out
fs
push
add
lea
and
pop
dec
jl
rorb
sub
lret
add
lahf
hlt
adc
je
loope
add
xor
cltd
andb
cmc
js
add
inc
push
rcrl
popa
imul
mov
lahf
cld
hlt
shr
mov
xchg
movsl
scas
xor
mov
dec
jp
push
addl
aaa
mov
pop
sub
xor
or
cmp
sarb
jno
fsubs
push
cmp
rcll
fildl
imulb
scas
and
insb
js
insl
nop
pop
jo
push
and
fdiv
icebp
jae
hlt
sub
push
mov
jbe
fwait
scas
sti
outsb
mov
addr16
movsl
sub
es
fsubrl
push
dec
inc
repz
jmp
add
daa
push
mov
and
ljmp
fidivl
cmp
cmp
out
popf
dec
push
mov
or
cltd
push
test
xor
ljmp
push
xor
mov
sbbl
aaa
incl
sbb
mov
mov
fidivrl
repnz
push
bnd
sarl
xchg
mov
repnz
sti
mov
jl
repnz
into
mov
and
call
int3
dec
std
rep
jbe
push
push
loopne
dec
push
jle
loope
push
pop
push
ss
xchg
arpl
push
xchg
jp
lods
repz
out
clc
pop
call
mov
and
push
cltd
icebp
pop
jp
adcb
sbb
jnp
loope
scas
jle
sub
mov
xchg
adcb
mov
mov
and
jae
cwtl
push
movsb
sar
cmp
xlat
push
xor
sub
push
out
ds
sub
mov
mov
rcrb
push
sub
cmp
sbb
cmp
xor
xor
in
xchg
add
mov
push
mov
lock
rclb
jmp
cmp
mov
cmp
and
scas
inc
cmp
push
inc
cmpsl
jb
mov
xchg
enter
cmpsb
cs
aad
sub
add
adc
jae
adc
inc
adc
out
mov
fnstcw
pushf
xchg
leave
sub
popf
xchg
in
push
sbb
pusha
call
dec
push
pusha
xor
or
xor
das
sbb
xchg
mov
pop
fnstsw
jb
push
aaa
nop
cmc
rclb
movsb
adc
ret
pop
aad
pop
mov
bound
mov
xor
dec
jns
and
shr
ret
cmp
inc
int
insl
fiadds
mov
xor
test
hlt
fdivl
dec
inc
nop
orl
rolb
shrb
bound
push
iret
fldt
pop
rcll
mov
push
clc
or
mov
enter
push
push
xchg
lahf
pop
jmp
xorb
xadd
mov
divb
fadd
xchg
shll
aad
sub
sahf
mov
mov
loop
pushf
xor
insb
fidivrl
mull
lret
sub
in
xchg
std
xchg
sbb
and
sub
mov
rdtsc
mov
add
mov
mov
xor
cltd
mov
adc
insb
mov
push
mov
lret
cmp
lret
ja
stc
sub
repnz
jge
mov
insb
dec
cmp
test
push
mov
xorps
scas
imull
movsb
call
sbb
dec
lcall
xchg
cmp
inc
jae
popf
popa
xchg
stos
lea
inc
push
ds
xor
and
jbe
fcoms
pop
sbb
or
test
shlb
je
outsl
cltd
inc
and
repz
push
mov
fwait
js
xchg
jmp
in
aam
jo
jbe
mov
sar
xchg
cmp
sub
cld
test
and
ret
iret
mov
xchg
or
repnz
lods
push
xchg
out
loop
mov
addr16
les
dec
jl
xor
xchg
dec
add
std
ds
ret
into
and
mov
xor
aas
enter
adc
test
outsl
loop
in
lcall
sbb
ret
fdiv
or
mov
mov
pop
xor
mov
mov
cltd
lea
sbb
loope
mov
out
imulb
sub
jge
dec
stos
mov
ret
dec
out
loope
sti
add
mov
push
cli
cmp
ja
cmp
dec
imul
mov
jl
imul
in
ds
dec
adc
imul
push
mov
sbb
lods
cmp
lcall
jb
xchg
dec
scas
enter
push
pop
movsb
cmpsb
mov
or
pop
inc
push
scas
leave
pop
into
and
das
mov
ja
movsb
sub
sub
and
pop
or
inc
aad
icebp
inc
test
dec
push
xchg
inc
push
lods
loope
pop
jmp
jb
pop
inc
jecxz
xchg
adc
xor
mov
sub
push
jo
nop
lcall
jmp
int
jns
fwait
cwtl
fnsave
cmpb
mov
imul
bound
movsb
addr16
pop
imul
jge
push
cmp
cmp
jne
out
mov
rorl
mov
xorb
sbb
pop
adc
push
popf
les
jecxz
iret
mov
inc
shl
add
jg
mov
add
shlb
gs
inc
into
sub
fldlg2
pop
push
lret
pop
stc
das
and
add
mov
xchg
dec
or
fidivrl
inc
sti
add
mov
adc
inc
repnz
adc
pop
shll
fwait
xor
dec
cmp
movsb
shlb
xchg
xor
lret
pop
rol
lahf
xchg
push
mov
test
push
jecxz
adc
movsl
test
sub
push
xorb
jno
sub
or
mov
cli
cmp
or
or
inc
insb
mov
arpl
pop
xchg
lret
test
push
idivb
rcrb
mov
imul
sub
cmpsl
sub
mov
dec
adc
stos
push
add
push
enter
xor
mov
cmp
imulb
and
adc
pusha
and
shlb
cmp
and
cli
sti
pop
call
inc
cltd
inc
hlt
es
cmc
push
dec
xor
mov
lock
mov
xchg
jmp
je
je
mov
and
into
sti
in
xchg
pop
rep
aad
sub
jp
inc
fbstp
push
mov
cmp
fsubrs
pop
stos
sub
jae
aad
lds
dec
daa
das
roll
stc
xor
scas
jb
and
cmc
aas
clts
jbe
lods
inc
in
psubusb
cmpsl
add
rol
filds
push
push
pop
jecxz
jb
push
jle
sbb
ljmp
xchg
mov
fisttpll
out
jo
shrl
cmp
lods
in
aas
dec
je
mov
cmpl
cmp
dec
add
jo
mov
imul
and
add
inc
cmc
fnstenv
cmp
cmp
addr16
dec
lret
js
pmullw
pop
xchg
add
shlb
ja
pop
scas
push
or
mov
aam
sbb
sarl
jmp
jae
fimull
adc
or
out
adc
out
push
jmp
jge
xchg
mov
mov
pop
mov
xchg
sub
popa
xor
push
rcll
mov
lock
ljmp
loop
push
repnz
inc
mov
dec
pop
xchg
sbb
push
dec
push
in
jae
test
lock
xchg
std
adc
jns
test
dec
fsubrl
leave
mov
push
adc
arpl
ficompl
mov
sub
sub
call
cwtl
fidivrs
xlat
test
mov
cmp
mov
mov
pop
push
out
repnz
and
and
enter
cltd
inc
and
aam
jge
dec
mov
jno
xor
and
mov
jl
dec
repz
jb
jg
stos
or
cmp
push
scas
and
adc
push
add
mov
pop
loope
mov
shl
outsb
push
jle
fldt
dec
data16
xlat
jg
xor
push
jb
js
leave
cmpsl
jge
imul
iret
jae
fs
out
aad
mov
scas
hlt
pop
xchg
aas
sub
dec
arpl
sbb
cmpsb
inc
into
addr16
das
mov
xchg
adc
cwtl
int
dec
xor
sbb
cmp
push
jb
pop
jbe
addr16
adc
xchg
pop
xor
lods
mov
jmp
add
je
sub
rolb
and
add
mov
jns
imul
pop
mov
mov
or
ds
outsb
add
jp
mov
push
rcr
jo
push
in
std
xchg
pushl
lret
cmp
jns
xchg
sbb
mov
lret
ret
addb
andb
int3
jmp
pop
and
mov
jg
xchg
jmp
arpl
std
addr16
sub
mov
leave
pop
enter
and
sti
shr
push
jne
mov
jge
lret
fisttpl
sti
ljmp
lock
and
in
dec
mov
mov
pusha
test
xor
xchg
mov
test
pop
loope
fcmove
pop
push
jecxz
or
jae
mov
std
xchg
incb
jnp,pt
in
jbe
mov
push
insl
fsubrp
inc
pop
pop
fsts
sub
xor
orb
leave
push
cmp
bound
arpl
fisubs
xor
inc
xor
mov
dec
push
test
cwtl
mov
hlt
iret
ds
js
dec
mov
arpl
pushf
insl
mov
js
pusha
cmc
addr16
adc
mov
sub
push
mov
inc
inc
lret
mov
enter
mov
out
gs
or
notl
add
cmp
and
adc
sub
lods
fsubl
dec
sbb
or
popa
movsl
scas
jmp
push
xchg
mov
mov
mov
jecxz
lret
and
pop
shl
cwtl
fistpl
or
ret
dec
xchg
cltd
and
mov
pop
jecxz
cmp
ds
in
movsb
mov
cld
in
lcall
mov
mov
je
fs
lahf
stos
adc
out
jne
jno
test
repz
in
xor
and
push
aaa
stc
cs
shll
leave
lret
stos
test
xchg
mov
cmpsb
push
andb
mov
push
adc
ljmp
lret
jnp
lcall
in
cmp
and
mov
test
je
add
lahf
dec
sub
repz
jecxz,pt
inc
lock
std
int3
mov
daa
inc
in
outsl
sbb
lods
jae
inc
cs
repnz
pop
and
dec
xor
jp
mov
push
das
ficoml
sbb
enter
mov
pushf
and
dec
jmp
ss
or
stos
push
outsl
cmp
sbb
or
xchg
push
inc
in
cmpsb
dec
arpl
outsl
mov
jb
ss
andb
imul
push
idivl
xor
jle
loopne
daa
jb
mov
lea
loopne
testb
repnz
xchg
out
or
adc
pop
mov
stc
push
aad
dec
xchg
or
out
loopne
push
imul
push
pop
dec
cs
mov
gs
js
ds
xchg
xchg
insb
fbstp
scas
adc
adc
je
sti
xchg
iret
dec
xlat
loopne
jnp
add
xorl
lods
push
lcall
movsl
xorl
shrb
addl
sarb
mov
out
fwait
shl
inc
jmp
cmp
mov
push
push
add
inc
enter
fistpl
dec
dec
fdivrs
sbb
push
pushf
call
movsb
in
repz
push
add
das
fbld
rdmsr
rcll
enter
sti
mov
cs
pop
adc
inc
stc
out
ret
jecxz
cmc
inc
inc
jnp
adc
or
cmp
mov
ret
ret
out
in
sahf
inc
push
cltd
mov
and
clc
aad
iret
mov
jns
mov
add
inc
fmull
jne
into
rcrb
jb
xor
push
mov
movd
fs
sub
test
inc
pop
in
mov
sbb
adc
fdivr
insl
and
adc
or
gs
lahf
repnz
push
jo
mov
leave
ret
scas
cmp
notb
jno
mov
imul
pop
jno
pop
shll
ret
xor
fs
lock
rcrb
sbb
pop
enter
sbb
or
adc
rolb
inc
in
dec
push
lret
push
imul
cmp
and
or
stos
outsb
jle
xchg
stc
fs
rolb
pushfw
xchg
cmp
add
sbb
adc
mov
das
mov
cmp
ds
rcl
jl
dec
imul
lods
mov
int3
add
pushf
sbb
jo
test
sbb
xlat
or
xor
rorb
scas
enter
xor
mov
jb
push
add
int
fbstp
pushf
fdivp
cmpl
idivb
shlb
stc
add
sub
jb
dec
imul
cld
mov
and
sbb
ss
sbb
mov
es
pop
dec
mov
mov
std
mov
in
test
ds
mov
loope
in
jae
sbb
mov
gs
mov
xchg
jns
cld
adc
mov
out
sbb
gs
and
mov
push
push
std
orb
push
push
xchg
cmp
iret
je
gs
outsb
popf
in
mov
jne
mov
rep
jp
mov
icebp
dec
xchg
add
add
push
iret
dec
es
aam
pop
and
lea
idiv
mov
iret
in
loopne
fbstp
lea
and
mov
inc
sbb
sbb
xor
jle
inc
push
xor
sbb
stos
dec
and
inc
inc
push
or
pushf
adc
nop
std
jle
pop
lock
pop
pop
notl
aaa
cmp
lahf
mov
xchg
dec
cmp
dec
out
cs
loopne
mov
or
jle
cs
sbb
lret
add
jle
push
pop
lcall
pop
mov
scas
fmuls
pop
xor
pop
dec
subl
movsl
ja
ds
in
ljmp
jb
or
cld
ret
lock
xchg
xchg
push
in
jne
xor
mov
inc
push
or
into
into
fldenv
push
nop
data16
out
push
cmpsb
mov
insl
stc
sbb
xor
das
insl
sbb
or
gs
clc
push
repz
jno
inc
xor
das
pop
in
add
pop
inc
rcrl
sahf
jo
es
movsb
ret
cmp
xchg
int3
outsl
jns
stc
mov
dec
outsb
popa
adc
nop
rcrb
dec
jae
adc
test
scas
js
xchg
dec
mov
mov
cwtl
xor
mov
in
jmp
nop
and
cld
std
sub
movsb
cmc
sub
pop
negb
sub
test
inc
std
je
adc
lret
jno
stos
dec
or
orb
mov
pop
in
sub
clc
xor
into
mov
loopne
mov
inc
push
sbb
loope
xor
outsb
les
or
inc
gs
mov
push
sub
dec
jge
pop
jmp
jmp
dec
mov
in
lcall
and
mov
cli
lret
ljmp
xchg
dec
test
and
call
push
add
loop
jb
inc
dec
sbb
push
lcall
mov
aad
jl
jae
lahf
or
sahf
vpmacssww
add
int
orl
mov
lea
xor
push
popf
inc
shll
sbb
call
xor
pop
mov
ja
push
adc
or
and
loope
mov
repnz
adc
hlt
hlt
adc
sbb
fildll
pushf
sub
lret
pop
mov
loope
loope
pop
sbb
rcrl
fldl
test
cld
mul
xchg
data16
adc
inc
push
icebp
shrb
mov
std
cmp
and
scas
pop
out
inc
xchg
in
add
fs
xchg
push
lcall
sbb
ja
mov
mov
stos
orb
fcomi
aad
inc
xor
jl
mov
push
xchg
shlb
add
push
adc
adc
les
iret
outsl
push
jecxz
add
not
or
movsb
jmp
mov
and
pop
cmp
push
loope
xchg
into
mov
mov
or
fldt
ds
cmp
inc
mov
inc
mov
sbb
ficoml
and
cmp
fwait
xor
iret
dec
adc
loop
dec
mov
cmp
adc
mov
jmp
sub
leave
dec
cltd
xlat
jp
rolb
sub
xor
lret
xchg
push
jl
aam
adc
fidivl
les
dec
pop
cmc
pop
cli
lods
dec
sbb
cmpb
adc
or
and
cwtl
mov
ficoms
cmc
jp
dec
mov
inc
dec
xchg
cmpsl
movl
cmpsb
push
cmp
subb
mov
data16
push
out
repnz
sahf
call
leave
sahf
push
ret
pop
add
sbb
push
mov
push
xor
aas
inc
insb
jp
and
orb
movsb
inc
pop
cmpsb
sarl
pop
jne
adc
push
pop
incb
loopne
out
cmp
scas
or
les
push
dec
push
dec
mov
imul
inc
out
fsubl
add
or
adc
mov
mov
jl
repnz
inc
sar
mov
int3
mov
add
aad
xor
nop
lea
shrl
lahf
pop
fs
insb
jl
inc
cwtl
mov
pusha
hlt
iret
scas
or
add
jl
ffree
cs
js
add
scas
or
lcall
addr16
xor
sub
sub
jo
dec
mov
gs
pop
adc
mov
fcom
out
dec
ret
in
mov
inc
imul
fs
jle
mov
jp
test
jp
or
in
mov
pusha
sti
jg
jns
mov
inc
js
xchg
jb
mov
xchg
loope
push
push
arpl
cli
jecxz
mov
sub
stc
fidivrs
mov
and
pusha
lahf
fs
lret
int
xorb
and
pop
out
cmc
jl
push
cli
fists
dec
mov
aad
andb
cli
adc
pop
lds
jae
cmpsb
adc
repnz
and
mov
leave
cmp
repz
mov
or
rcrb
sbb
pop
xor
cmc
mov
or
cmp
cld
xor
xchg
xor
and
int
pop
cld
sub
jg
cltd
imul
jecxz
repz
mov
fmull
jb
jb
call
cmp
das
es
xchg
adc
jae
fisttpll
cltd
add
scas
or
andb
je
in
bndstx
or
popa
sub
rol
mov
push
mov
lods
push
int3
pushf
call
imul
mov
jns
add
and
movsb
push
mov
adc
outsl
sub
in
aad
or
dec
out
pop
movsl
jne
mov
or
ret
into
or
ds
jbe
xor
loopne
sbb
and
out
inc
movsl
fistps
jl
xchg
hlt
cmpl
xchg
lods
and
bound
add
je
mov
sahf
loope
or
in
jne
or
adc
pop
lret
in
into
imul
mov
push
push
aaa
lcall
pop
in
sub
scas
cmp
jno
adc
fs
mov
pop
cwtl
jle
jb
mov
dec
repz
movsl
insb
loopne
fsubs
js
fsts
jns
sbbb
jnp
pop
and
test
decb
pop
mov
stc
cmp
adc
mov
fadds
in
inc
cwtl
icebp
rolb
fiadds
sbb
xor
sti
and
inc
xchg
sbb
jnp
nop
dec
lock
xchg
pop
shl
stos
into
pop
mov
jp
movsl
pop
and
mov
pop
push
ss
mov
es
push
stc
mov
mov
mov
dec
mov
and
std
ds
push
jb
jg
hlt
jecxz
je
cwtl
or
cld
adcl
test
adc
popf
adcb
xor
xlat
adc
arpl
sahf
lds
add
mov
out
sbb
inc
rol
xchg
push
loop
or
jecxz
push
mov
hlt
jae
aam
out
pop
jns
mov
push
jnp
xor
insl
jge
xor
lods
outsb
pop
cmp
mov
bound
add
popa
xor
pop
push
ds
inc
in
frstor
js
aad
jb
movsl
lcall
mov
sarl
ret
clc
jae
and
sbb
stos
sahf
sub
jecxz
or
movsb
inc
cli
xchg
jns
fldt
mov
inc
mov
insb
sbb
les
mov
outsl
sub
mov
addr16
movsb
sbb
fwait
dec
int3
ds
in
cltd
cmp
subl
les
lret
mov
loope
push
mov
mov
and
repnz
sub
pop
outsb
in
push
sti
cmpsl
dec
icebp
adc
adc
sub
pop
shlb
shrl
xor
iret
sub
jp
ja
pop
out
pop
cmpl
imul
in
add
xchg
sahf
push
scas
jae
rolb
out
bound
add
or
arpl
adc
mov
xchg
lret
and
mov
inc
xlat
popf
out
cld
cmp
xchg
cmp
in
ret
mov
mov
cmp
dec
addr16
jmp
adc
cld
sbb
outsb
mov
inc
repnz
stos
rol
iret
xor
cmpsl
scas
clc
jbe
std
test
pop
cmc
xchg
push
out
cmp
lahf
mov
out
mov
js
jge
xor
sub
addb
xlat
cmp
inc
cmp
mov
fprem
sub
sahf
es
clc
mov
dec
je
xchg
inc
hlt
inc
jl
mov
int3
dec
punpcklwd
inc
lods
inc
cmpsl
sub
stos
cmpb
fwait
or
in
je
movsl
or
jg
in
inc
pop
sbb
dec
adc
cltd
jbe
cmpsl
push
dec
or
aaa
testb
inc
ss
mov
dec
xchg
stos
shlb
sahf
jle
cltd
fwait
int3
sub
rcrb
add
movsl
aaa
adc
aas
mov
popf
push
push
int
and
sub
mov
push
dec
aad
outsb
push
jmp
out
xchg
mov
and
jg
fwait
insl
jmp
outsb
adc
movsl
mov
jo
sbb
cmp
pop
outsl
pop
jnp
frstor
ja
lret
sub
popf
enter
and
pop
std
test
addr16
jg
int3
jl
pop
jo
inc
dec
ds
lcall
mov
frstor
ret
inc
inc
jge
xor
loope
cld
hlt
push
pop
es
lret
push
xor
popl
adc
sarb
mov
xor
xor
sub
fcomps
jl,pt
xor
test
jns
push
jmp
add
jae
mov
fldenv
cwtl
adcl
nop
test
adc
xlat
xchg
inc
cmpsb
lret
cltd
out
push
or
bndstx
leave
mov
cs
and
push
pop
imul
movsl
leave
ret
mov
jg
sbb
mov
inc
sub
testl
xchg
mov
test
leave
in
iret
inc
lcall
leave
sahf
jnp
cmp
jno
clc
out
pushf
fxch
inc
xchg
mov
inc
sub
ds
daa
repnz
xchg
pop
mov
push
xor
jmp
test
mov
adc
add
adc
xchg
or
out
ret
fsubrl
fwait
jno
sub
sub
dec
xchg
idivb
push
ret
sub
in
xor
insb
pusha
adc
xor
pop
xchg
jmp
repnz
loope
rcll
add
xchg
aaa
and
incl
into
movsb
andl
cs
pop
pop
xchg
cld
push
notb
lahf
imul
aad
and
clc
ret
sbb
imul
mov
pushf
cmp
mov
xchg
and
jbe
into
inc
mov
mov
adc
push
sbb
jb
sbb
sub
jo
stos
mov
mov
outsb
into
out
f2xm1
pop
push
mov
mov
mov
rorl
fwait
jb
xchg
xchg
cmp
es
and
and
iret
jp
inc
inc
jg
in
jo
loopne
jno
ret
cmpsl
pop
pushf
dec
pop
push
inc
movsl
fcompl
stc
out
jp
jnp
imul
xchg
xchg
ret
leave
ljmp
ret
inc
sub
jnp
inc
popf
mov
cmpl
cmpsl
push
push
mov
mov
iret
lea
test
aam
or
sub
ds
dec
testb
mov
push
lea
iret
arpl
rep
les
mull
pop
push
jp
and
add
push
dec
stos
mov
or
xor
jns
pop
inc
lods
cs
lahf
mov
cmp
push
int
lcall
pop
ret
push
and
add
and
pop
loope
and
add
jecxz
jp
jge
out
leave
adc
cmpsb
push
pop
imul
mov
inc
pop
outsl
add
inc
fistpll
cs
stos
pop
mov
lcall
adc
lods
and
scas
das
or
pop
cmpsb
ret
pop
fldt
push
in
test
jle
lcall
xchg
xchg
ficoms
rol
cmp
sar
xchg
push
dec
mov
pop
pushf
xchg
insl
sbb
mov
or
mov
mov
push
mov
xchg
fsubl
add
or
decb
lret
sub
jno
dec
push
or
lods
lahf
pop
decb
cmp
xcrypt-ctr
cmpsl
fiaddl
out
push
imul
jnp
push
push
imul
fisttpll
adc
sub
mov
pop
fldt
sbb
add
push
xchg
into
mov
xchg
cmp
jg
mov
inc
fistl
mov
imul
jge
into
inc
pop
cmp
in
dec
lods
aad
inc
xchg
ret
out
out
stos
add
xchg
cmpsl
sbb
mov
rorl
fs
sub
pop
popa
pop
jmp
mov
in
add
loope
popa
adc
fdivrl
std
lods
jnp
pop
add
scas
adc
mov
inc
or
dec
bnd
sbb
testb
lea
mov
mov
pop
out
loop
adc
cmp
lcall
mov
or
popa
cmp
loope
mov
inc
mov
inc
inc
out
cmp
data16
daa
lcall
decb
xorl
push
test
mov
xchg
sahf
roll
nop
sti
mov
lods
sarl
xor
imul
lods
dec
or
outsb
jg
cmovne
sub
adc
pop
incb
scas
and
imul
add
mov
test
push
lret
jb
test
sbb
sub
in
outsb
push
mov
sbb
imul
pop
out
pop
xor
int3
mov
sub
loop
lods
in
mov
fnstsw
or
mov
aam
into
xchg
mov
outsl
mov
and
cmp
push
xor
sbb
cmp
push
scas
push
push
gs
cmp
or
mov
je
das
mov
xor
in
outsl
jae
push
ss
test
mov
lds
inc
lret
mov
dec
push
fwait
int
cmp
sbb
push
push
sti
stos
les
repnz
fs
jns
adcl
bound
bound
sahf
mov
push
xchg
or
negb
mov
sub
adc
adc
push
dec
sub
and
stc
test
fs
jge
lods
pop
fsubl
ret
jle
js
fildll
xor
mov
imul
mov
pop
push
sub
xor
add
adcl
lahf
xlat
xor
loop
jg
pop
jae
dec
jno
cld
pop
cmp
mov
xor
sbb
es
jnp
or
cmp
xchg
rolb
sbb
xchg
jmp
lcall
lcall
flds
leave
and
cltd
pushf
xchg
into
nop
ficompl
insb
or
lcall
jmp
add
dec
dec
add
test
pop
hlt
mov
xchg
and
enter
push
add
fsubrl
cmp
std
sti
dec
xchg
cmp
cmpsl
imul
leave
pop
ds
adc
insl
dec
cmp
push
inc
addr16
into
in
adc
imul
fwait
popf
sbb
xchg
loop
aad
pop
fadd
fmulp
mov
pop
adc
adc
and
sbb
cmp
pop
ficoml
jb
xchg
ljmp
mov
flds
scas
mov
sbb
xor
adc
add
loop
frstor
and
mov
inc
push
arpl
movsl
sbb
inc
dec
dec
mov
lds
xchg
mov
add
sbb
mov
mov
adc
popf
adc
movsl
sub
jb
mov
add
rclb
popf
cmc
push
rclb
pop
mov
inc
and
movsb
pusha
pop
sbb
shlb
push
sahf
in
jmp
lds
add
xchg
pop
aaa
push
sub
push
into
mov
jg
fbld
mov
cmp
jnp
jecxz
insb
inc
gs
pop
cmp
adc
fs
jno
pop
je
out
sti
je
cmp
mov
jecxz
mov
and
add
nop
mov
mov
xchg
cmc
sbb
mov
seto
or
jns
popa
hlt
cmp
inc
xor
and
xlat
mov
or
sbb
test
ffreep
cld
cmp
or
cmpsl
aas
dec
je
jo
pop
mov
rcl
leave
jg
cs
imulb
mov
xchg
jno
jnp
push
loope
xchg
fstpl
pop
mov
lock
mov
xor
sub
xchg
pop
das
hlt
or
movsl
dec
arpl
data16
insb
out
add
pusha
jb
icebp
into
cwtl
iret
jle
cltd
mov
in
jmp
xor
lds
xor
xor
inc
pop
pop
icebp
hlt
mov
jl
cmp
mov
sbb
add
test
lret
je
ja
cmp
nop
add
jo
xchg
mov
and
imul
adc
and
adc
inc
or
push
sub
aad
cmc
sbb
fwait
movsl
pop
add
pop
dec
test
pushf
cwtl
aas
xor
mov
push
sahf
flds
xchg
push
jae
cmpsl
pcmpgtb
xor
les
iret
inc
cltd
push
mov
jae
addr16
lods
xor
xchg
adc
inc
mov
aas
out
pop
mov
push
pop
xchg
jns
or
in
jl
cld
mov
movsl
in
fwait
pusha
popa
mulb
fcomp
out
popf
not
inc
ficoms
mov
std
test
mov
into
jne
push
mov
xor
add
in
dec
jnp
cmp
jmp
addr16
mov
test
aad
pushf
cli
rcrl
xchg
rolb
lret
rcrb
lret
and
and
fwait
aam
jnp
sub
fsubrp
mov
jae
or
mov
or
dec
cmp
jl
mov
ja
scas
xor
sub
int
stos
mov
aas
and
fiaddl
xchg
sbb
jmp
icebp
sub
call
fs
into
add
pop
das
add
adc
push
xchg
mov
test
adc
xor
sbb
mov
or
xor
xor
mov
sbb
pop
es
ljmp
jae
adc
cmp
inc
add
data16
push
sbb
cltd
jb
insl
cld
fucom
mov
mov
jge
shlb
lahf
test
xchg
mov
iret
mov
dec
test
or
fwait
push
inc
mov
sub
test
mov
out
sbb
daa
imul
xchg
xor
push
xor
cwtl
push
outsl
es
ja
push
jl
jnp
stc
jne
push
arpl
cmc
ljmp
rclb
push
popf
dec
dec
sbb
push
push
jns
jo
sbb
out
dec
and
out
jmp
inc
adc
iret
dec
scas
jmp
in
cmpsl
dec
aad
sub
cmc
mov
dec
out
xchg
lret
or
pop
arpl
loope
xchg
sub
aaa
dec
or
stc
jmp
adc
add
jmp
and
enter
or
jle
iret
das
pop
rorb
in
or
add
adc
xor
in
sahf
pop
adc
add
jle
jp
jge
inc
jbe
cmp
gs
test
inc
or
rcrb
jmp
push
xlat
sub
testb
jns
lds
and
sbb
insb
xchg
pop
and
lcall
jp
push
and
dec
mov
pop
negb
out
or
jmp
stos
fstl
xlat
es
lcall
sbb
mov
jmp
aam
test
mov
pop
iret
jns
adc
ret
andl
lahf
cltd
aas
mov
cmc
in
cmp
push
fidivrl
int3
push
add
enter
mov
mov
cmp
fwait
imul
imul
pop
repnz
adc
mov
jmp
xchg
xor
or
rorl
jb
mov
clc
push
lock
pop
inc
xlat
aad
add
stos
push
popa
out
idiv
fwait
cmp
and
and
pop
cmp
xchg
mov
push
fwait
mov
arpl
cmp
inc
or
adc
inc
jp
test
leave
out
sub
mov
mov
insl
nop
cmp
mov
repnz
or
test
jl
aam
or
gs
cmc
lods
push
jb
mov
mov
fs
and
xchg
pushf
movsb
sbb
cmp
xchg
jge
lret
pop
add
mov
cmp
stc
or
sbb
adc
hlt
push
scas
data16
push
jmp
fldl
cwtl
xchg
outsl
mov
das
sub
add
dec
jns
jl
std
insl
out
insl
mov
data16
jg
sbb
std
push
mov
sbb
out
and
push
idivb
inc
lret
cmp
push
mov
jno
adc
in
inc
mov
mov
mov
add
and
fwait
cmp
push
andl
inc
push
aad
inc
adc
push
jns
sbb
cmpsl
xor
inc
sbb
insb
adc
ss
in
jns
lods
and
in
jp
shrb
in
pmuludq
xor
mov
push
imul
xchg
sub
movsl
pop
stos
jle
mov
xor
cs
cld
loop
cmp
adc
test
adc
nop
sub
mov
inc
sbb
lahf
test
cli
push
in
imul
je
daa
mov
add
mov
cmp
cmp
enter
insl
push
test
pop
mov
out
xlat
and
pop
loopne
ret
rep
sub
push
dec
mov
add
jle
incl
mov
or
pop
lea
cmpsb
movb
das
mov
decl
sub
rclb
insb
test
ljmp
cld
push
and
insb
subl
mov
push
mov
cmpl
sub
dec
jle
xchg
xor
data16
and
xchg
cld
adc
out
mov
scas
pop
mov
pop
pusha
pop
pop
pop
das
call
inc
mov
sbb
add
pop
stos
repnz
mov
cmp
sub
stos
cmc
sti
push
popf
cmp
sbb
arpl
mov
int3
jo
clc
fdiv
out
sbb
jmp
adc
shl
outsl
and
jmp
fdivrs
lcall
adc
mov
insb
movsl
and
insl
fsubrl
movsb
fptan
jno
iret
frstpm(287
nop
dec
inc
adcb
mov
ret
sub
mov
adc
inc
lea
push
ret
jge
jbe
inc
xchg
repnz
jno
pusha
cmp
xchg
mov
sbb
rcl
add
add
mov
cld
cmpsb
ja
ljmp
jne
in
and
pushl
adc
scas
and
add
mov
out
test
mov
fildl
ret
dec
pop
cmc
lahf
pushf
jbe
pop
lret
push
sub
fs
jge
pop
push
mov
jg
test
repz
push
push
std
and
repnz
test
xor
in
stos
repnz
daa
xor
fistpll
and
aas
fnsave
dec
pop
fwait
rorb
pop
scas
in
xor
fisttpl
insl
dec
add
push
leave
out
daa
icebp
dec
sub
jg
fmull
cmc
js
add
popf
arpl
mov
pop
test
jle
mov
adc
pop
ret
jecxz
xchg
push
ds
cmp
mov
mov
xorb
adc
jno
ret
pop
popf
add
mov
or
xchg
loop
jbe
inc
xchg
ret
repnz
ds
dec
outsl
cmpl
push
mov
fsubrl
fwait
loope
dec
and
push
push
mov
decl
int
ja
shlb
dec
xchg
jge
push
movsb
insl
dec
add
jnp
fstpt
and
mov
add
adc
into
movsl
scas
ds
inc
mov
in
push
jg
es
sti
mov
mov
sbb
pop
pop
cmpsb
bswap
loopne
int3
xchg
add
dec
or
jae
cmp
icebp
out
lds
pop
mov
xorl
and
shl
mov
bound
ret
jns
mov
adc
adc
cmpsl
scas
imul
cmp
and
push
mov
mov
push
mov
out
fsts
dec
adc
lcall
xlat
js
mov
sub
xchg
out
mov
xchg
std
movsb
sub
mov
push
xchg
and
jb
push
into
push
dec
movb
pop
push
lods
sbb
jle
mov
push
int
jecxz
loope
lock
leave
add
jns
fidivrs
inc
insl
push
fimull
dec
or
out
xor
dec
or
adc
dec
out
pop
inc
test
xchg
sbb
mov
sub
dec
dec
xchg
push
daa
xor
cmp
aad
xchg
pop
fistpl
jl
test
xor
and
sub
inc
sti
cltd
fcomps
lock
hlt
shll
sbb
data16
pop
or
xchg
and
mov
addb
push
ficoml
add
hlt
aas
mov
fsubr
int3
jecxz
in
es
mov
sub
stc
sbb
and
mov
cmp
mov
mov
mov
addr16
mov
add
outsl
bound
add
mov
stc
push
rclb
pop
stos
mov
xchg
fadd
mov
scas
mov
inc
loopne
test
or
and
dec
cwtl
push
jbe
ret
dec
xorl
push
sbb
sub
sbb
push
adc
pushf
or
jmpw
adc
lock
sbb
mov
sub
xor
sarb
jmp
xlat
cmpsb
sbb
inc
mov
ds
fwait
jae
sbb
pop
cs
or
nop
ret
jae
ret
lea
adc
mov
fsubs
hlt
addr16
gs
sub
ret
push
call
pop
fadds
mov
stos
xor
mov
test
out
shrl
mov
jmp
add
push
and
or
inc
ja
iret
adcl
stos
icebp
inc
test
fidivl
add
std
cmp
cld
pshufw
aad
fmull
sub
adc
mov
sub
scas
cli
mov
test
test
push
fwait
ja
lahf
bound
mov
mov
popa
aaa
xchg
lcall
mov
mov
mov
cmp
xor
jmp
push
add
imul
push
mov
pop
add
push
cmp
into
cwtl
sbb
gs
or
dec
sbb
cmc
lods
sbb
cmpsb
popa
dec
push
adc
pop
cmpsb
inc
mov
outsl
xchg
push
jle
and
scas
cwtl
mov
mov
cmc
sti
and
movhps
jne
add
mov
lret
lahf
ret
ret
dec
push
cmp
xlat
lods
mov
jns
mov
loop
test
test
and
inc
push
je
sbb
lds
xor
aaa
sub
fwait
adc
mov
sbb
orb
sbb
mov
pop
xchg
shll
adc
cmp
fdivrp
das
add
lahf
cltd
add
jmp
dec
clc
cmc
or
arpl
in
cld
ret
inc
cmp
leave
jl
ja
pop
push
sahf
jno
adc
cmpsb
cmpsb
pop
cmpsl
and
dec
fnstenv
jp
inc
shl
mov
cmp
jecxz
and
dec
add
push
cmp
test
cld
ret
xchg
inc
sbb
das
pop
pop
mov
jmp
inc
push
inc
cmp
arpl
pushf
jbe
ret
pusha
out
push
xchg
xor
aam
insl
in
lahf
in
xchg
mov
popf
dec
jb
inc
cmp
mov
mov
xor
mov
ds
add
jp
xor
sbb
jecxz
mov
out
push
jl
pop
inc
xchg
shrl
xchg
sbb
pushaw
mov
int
lahf
pop
pop
xor
xor
push
sub
mov
dec
aaa
jle
data16
sub
add
cmp
fimull
lds
sub
add
xchg
push
lds
cmp
lahf
jb
push
data16
jbe
adc
pop
fcomps
ljmp
cld
or
adc
loop
pop
shlb
lods
enter
jg
movsb
cli
ja
sbb
jmp
aas
pop
add
pop
pusha
push
xor
mov
pop
xchg
dec
jecxz
mov
jnp
sbb
or
mov
insb
hlt
aam
scas
mov
jne
shrb
xchg
repz
sbb
add
iret
sbb
mov
outsl
cmp
inc
mov
jg
mov
add
lret
cltd
enter
xor
das
pop
repnz
insl
sbb
pop
adc
je
jne
mov
xchg
push
clc
jae
outsb
xor
push
xor
sti
and
xchg
mov
out
fisubrs
ret
sub
rcrl
shl
cltd
cld
xor
sub
andl
sub
adc
stc
jecxz
call
ja
bsf
lret
cmp
mov
pop
scas
pop
sub
fsub
sbb
sub
push
cmp
cmp
jmp
in
xor
or
mov
jmp
mov
xchg
test
outsb
sbb
xor
mov
mov
adc
pop
enter
jg
test
stos
out
sti
sub
scas
test
lods
mov
in
jmp
cmpsl
mov
js
shll
cmp
shrl
sbb
cltd
jmp
addr16
scas
cmp
xchg
fldl
push
cmpsl
and
insl
les
popf
push
xor
lcall
mov
and
push
dec
test
push
lds
pop
dec
int3
xchg
std
leave
lea
das
fistpl
outsl
adc
in
fs
gs
stos
add
lds
sbb
out
and
in
dec
mov
les
dec
pop
add
jg
pop
shr
nop
mov
push
cwtl
xchg
xchg
or
adc
and
adc
sbb
aaa
or
sub
mov
outsb
mov
bound
imul
outsl
add
fnstenv
sub
sub
nop
xor
pop
or
xor
and
jne
sarb
ja
xchg
outsl
dec
pop
into
adc
pop
jns
nop
inc
push
inc
xchg
enter
fwait
fwait
pop
push
sub
add
or
cmp
jg
les
mov
dec
les
and
test
mov
inc
fdivr
xor
sub
hlt
out
jmp
cwtl
pushl
scas
imul
insl
in
dec
mov
dec
andb
cs
mov
sti
push
mov
sbb
xor
lods
cmp
jl
and
xchg
adc
inc
test
insb
sub
mov
push
mov
adc
push
adc
jmp
xor
es
leave
dec
mov
outsl
pop
pop
lahf
in
addr16
bnd
add
xlat
xchg
dec
mov
movsb
push
xlat
adc
and
jno
xor
add
shlb
mov
and
sbb
mov
fs
cs
xchg
sbb
jnp
icebp
sub
and
in
fwait
cmp
sub
cmp
dec
add
mov
add
bound
ljmp
adc
fnstcw
loope
mov
or
ret
dec
xchg
pop
push
lret
and
inc
inc
mov
dec
cmc
ret
lods
ret
aad
adc
cmp
into
pop
xor
adc
lret
je
sbb
xor
cmpsb
data16
sti
add
call
jecxz
cmp
add
inc
fs
or
outsb
push
in
sbb
xor
dec
dec
cmp
stc
into
inc
cltd
dec
push
popa
mov
inc
imul
vorps
dec
lods
xor
ret
mov
dec
pop
daa
cs
inc
cmpsb
jecxz,pn
call
xchg
jb
xchg
cs
in
pop
sub
pusha
or
int3
sbb
and
imul
mov
pop
lods
jae
lcall
dec
inc
ss
pop
outsb
adcb
aas
mov
test
sarb
jecxz
insl
fisubrs
pop
jb
bound
fs
or
jo
shrb
xchg
adc
iret
or
out
sub
insl
dec
cmp
jge
xchg
fmull
nop
jns
mov
xor
ljmp
mov
mov
add
gs
sub
jbe
outsb
jae
aad
inc
clc
test
insl
aas
add
and
int
dec
pop
mov
dec
fdivs
adc
movsb
fidivrl
or
aad
ss
mov
mov
dec
iret
push
xchg
mov
cmp
mov
lret
imul
inc
or
pop
test
sbb
movsb
pop
pop
mov
push
pop
scas
and
out
cmp
sbb
mov
xor
or
clc
lret
addr16
aas
lahf
cmpsl
out
mov
mov
pop
mov
aad
xchg
seto
push
jbe
and
xor
cld
and
outsb
sbb
ret
insb
ret
decl
insl
rorb
test
movl
and
mov
iret
add
mov
add
mov
jp
icebp
fistl
sbb
repnz
and
xor
mov
sbb
add
test
and
ret
mov
scas
mov
cmp
nop
data16
imul
mov
dec
loope
mov
lahf
lcall
loop
dec
or
pusha
xchg
xor
xor
pop
ret
loope
js
mov
sbb
and
adc
adcb
or
cmp
mov
es
pop
sarl
in
mov
jge
sub
push
jmp
in
call
push
mov
mov
add
js
mov
in
sub
mov
sbb
lock
inc
ss
add
std
loopne
dec
xor
push
lods
jle
imulb
or
rcr
inc
inc
cmp
xlat
stos
pop
jo
neg
int3
adc
xor
mov
roll
jnp
pushf
pop
sub
mov
arpl
fnstenv
sbb
pop
jae
notl
mov
stos
mov
push
popa
ficomps
pop
or
int3
mov
and
mov
push
jmp
faddl
mov
cmp
in
push
sbb
fwait
sahf
push
inc
xchg
mov
icebp
cmp
adc
pusha
cmpsl
dec
xor
mov
adc
or
hlt
mov
sub
leave
pop
pushf
pop
inc
xor
pop
mov
add
jmp
mov
xor
daa
cmp
xchg
femms
push
push
pop
lret
xchg
mov
push
push
ss
and
repnz
inc
repnz
out
imul
arpl
mov
inc
clc
lret
xor
jp
cli
shll
pop
sbbl
mov
lods
dec
jmp
adc
cmp
lret
adc
xchg
sbb
stos
dec
sub
adc
jne
fld
push
outsl
jmp
pop
cltd
jo
jbe
int
mulb
jae
ja
fdivp
sahf
mov
add
mov
or
das
aas
mov
or
adc
push
jle
aam
pop
sbb
adc
add
call
sbb
aaa
cmpsl
out
mov
or
lds
sarl
pop
jle
lods
pop
xor
mov
cmc
fidivl
add
xor
add
outsl
jno
dec
ret
js
dec
inc
push
lcall
arpl
sbb
dec
cmc
cmpsb
stos
nop
sahf
outsb
push
jmp
nop
inc
pop
mov
inc
dec
movsb
add
inc
jge
pop
mov
loope
xor
addr16
add
jecxz
and
xor
sub
jge
shlb
cmp
imul
or
sbb
fnsave
cli
addl
inc
jo
and
and
add
lods
mov
mov
mov
mulb
cmpsb
mov
movsb
pop
pushf
pop
xchg
fstpl
shll
rorb
xor
pop
dec
push
xchg
shl
jge
xor
js
repz
dec
ret
or
stos
pop
bnd
mov
aad
mov
mov
dec
push
iret
imul
fcmovu
int
cmc
push
daa
jl
fstps
xchg
fstpl
arpl
test
xor
push
fsubrl
inc
cmp
stos
scas
test
mov
out
int3
ljmp
mov
dec
das
mov
iret
fdivrl
inc
xor
fucomi
cmp
push
jp
push
ret
mov
push
cmpsl
jmp
mov
sarl
stc
sahf
sti
pop
cmp
and
or
and
xor
sub
fisttpl
dec
into
in
fcomps
mov
sub
test
ljmp
incl
mov
jg
push
dec
dec
out
mov
adc
or
pop
xor
dec
pop
add
jl
sbb
orl
cmp
fstp
cmpsb
fs
out
adc
pop
xchg
fucom
inc
push
lods
or
addr16
fsubs
push
hlt
dec
jns
ljmp
shll
addb
in
inc
xchg
and
std
xchg
sbb
daa
popf
mov
ss
fldl
inc
movsl
inc
mov
push
out
push
sub
mov
mov
pop
sub
xchg
outsb
cltd
call
je
sub
into
pop
cmp
jns
mov
inc
mov
jbe
out
in
outsb
adc
pop
bnd
xchg
and
mov
fnstenv
jno
sub
jg
test
jp
sub
cmp
adcl
sbb
shrl
adc
movsl
outsl
dec
cmpl
int
and
stos
cmp
pop
insb
inc
add
or
loopne
int
bound
loope
enter
iret
testb
pop
add
cld
out
dec
stc
xchg
push
es
mov
cld
xor
les
in
in
gs
adc
or
test
xor
fdivp
xor
arpl
pop
mov
rcrb
xchg
movsb
orb
push
mov
lds
neg
jle
pop
xor
loopne
jno
mov
or
jg
test
mov
rcll
add
jo
in
mov
lahf
mov
fwait
lds
mov
jns
or
fnstenv
cs
clc
mov
mov
lahf
bound
adc
aas
add
imul
pop
xor
ljmp
loop
push
or
adcl
lret
jnp
fwait
pop
iret
xchg
pop
xchg
dec
stc
sarb
mov
mov
rcll
mov
xchg
mov
aas
repnz
jno
mov
sbb
cmpsb
xchg
mov
je
mov
inc
mov
mov
clc
mov
mov
lcall
ljmp
dec
inc
adc
adc
xchg
or
ljmp
mull
pop
cmc
mov
xor
jge
xchg
adc
mov
mov
aas
pusha
and
mov
leave
roll
inc
jno
cmp
lcall
push
mov
cmpsl
jno
inc
adc
pop
push
sbb
cmc
push
movsl
mov
and
into
sarb
cmpb
cltd
and
daa
sbbl
and
out
jecxz
inc
or
jno
jb
inc
or
iret
xor
stc
scas
outsb
jl
aas
dec
cld
popf
and
inc
lahf
sbb
or
adc
pop
xchg
rcr
jl
int
daa
out
cmp
pop
jae
xorl
out
dec
fistps
jbe
pop
or
xor
scas
mov
cmp
xor
sub
movsb
pop
or
subb
ficoms
inc
fxch
aaa
fnsetpm(287
sub
xchg
in
xor
test
ficoml
mov
sti
lcall
mov
sti
or
fs
or
out
je
clc
mov
add
icebp
dec
push
es
aas
ret
xor
lock
mov
dec
repnz
jb
mov
cld
mov
mov
sarl
push
xor
mov
mov
xor
test
sub
call
pop
bound
xchg
lds
repnz
or
cmp
xor
mov
daa
call
xor
stos
popf
aad
pop
mov
aas
cmp
ret
jb
mov
ret
enter
dec
mov
stos
inc
test
es
and
xchg
movsb
adc
jbe
repz
dec
jp
stc
jecxz
jnp
les
adc
xor
shl
ss
pop
dec
or
jnp
daa
cmp
cmp
push
out
stos
jmp
icebp
jo
loope
cmp
fincstp
scas
add
adcl
cmp
cwtl
dec
dec
and
testl
cmp
test
lcall
jmp
mov
dec
add
dec
test
push
dec
jno
jbe
push
mov
push
mov
fdiv
push
dec
arpl
fdivs
sbb
fnstsw
sub
mov
and
inc
test
shll
jg
shrb
imul
push
push
stc
imul
in
hlt
int3
xor
aaa
fnstenv
je
mov
mov
lret
fs
rcrl
out
mov
stos
out
jne,pn
mov
std
sub
sub
cli
sub
aas
push
leave
cmp
lret
pop
jae
imul
repnz
mov
fadds
fidivrs
test
pop
pop
lock
pop
cmp
inc
mov
inc
pop
mov
in
fsubrl
or
and
sbb
mov
sbb
push
imul
cmp
push
lea
call
int3
ds
xor
pop
pop
dec
aad
lcall
bound
push
xor
sbb
fisubl
jae
idivb
inc
add
clc
rol
sti
mov
popf
xchg
and
dec
mov
fcmovnu
mov
mov
jae
dec
fld
xchg
and
push
jp
fcom
mov
mov
mov
stc
in
push
sar
xor
test
imul
mov
bound
cmp
hlt
lods
insl
sub
roll
icebp
jmp
mov
mov
in
rcll
cli
add
push
outsb
cld
inc
sbb
sub
je
inc
lods
push
in
jle
inc
pop
fdivrs
mov
mov
iret
sarl
negb
mov
mov
mov
mov
addb
out
mov
adc
pop
dec
inc
test
paddb
enter
jbe
cmp
xchg
mov
aam
mov
or
outsl
push
fiadds
dec
mov
lret
pop
xchg
cli
mov
insl
xchg
jno
add
inc
push
adc
int
sub
mov
mov
sub
sbb
in
fstl
sti
sub
mov
xchg
add
iret
movsl
dec
and
addr16
leave
push
rcr
lea
push
mov
adc
add
lcall
stc
adc
mov
cmp
sbb
xor
push
jne
out
sbb
push
gs
xor
daa
jmp
and
int
popf
mov
dec
movl
mov
pop
add
cltd
hlt
xchg
notb
mov
mov
shrl
jg
aaa
fcomip
xor
faddl
pop
ret
mov
int3
xor
sahf
jnp
jne
xchg
out
fwait
ss
pop
cli
ss
or
lods
mov
dec
or
lods
inc
ficomps
aam
nop
cmp
jbe
mov
dec
or
pop
add
les
or
xchg
mov
pop
xchg
cwtl
repnz
jle
aaa
mov
dec
pop
mov
fs
jl
mov
cmp
push
xchg
or
cmp
mov
dec
sbb
outsl
xor
dec
out
dec
lahf
pop
sarb
cmp
fs
push
and
cmc
pop
fisttpl
pusha
ret
xor
lods
and
sub
sbb
int
enter
jle
les
mov
das
imul
mov
cld
mov
cmp
sbb
push
jne
loop
sahf
mov
pop
jecxz
xchg
jp
push
int
cmpsb
ds
cltd
adc
repnz
push
js
outsb
ds
rclb
dec
inc
push
sbb
pusha
popf
insb
adc
push
add
inc
ja
adcl
jl
pop
push
push
out
jno
iret
pop
rclb
push
inc
cwtl
enter
in
sub
pop
push
add
or
out
mov
jmp
js
mov
je
roll
mov
pop
mov
in
fsubl
inc
or
fstps
rclb
mov
stos
insl
mov
xor
add
push
repnz
jmp
insb
cwtl
test
push
dec
xchg
sti
int3
ss
cmp
dec
dec
mov
pop
leave
iret
adc
in
adc
testb
in
pusha
hlt
lahf
adcl
lret
add
sbb
dec
loopne
and
rorl
arpl
fadds
pop
shlb
dec
shrb
scas
dec
and
popa
ja
mov
inc
pop
cwtl
pop
hlt
pop
push
push
jmp
stos
jae
push
cmc
js
imul
xor
fsubl
xchg
jmp
lods
cli
test
aam
push
xchg
adc
loopne
cmpsl
pop
fs
sahf
mov
xchg
xor
push
jecxz
dec
push
jbe
mov
sbb
sub
or
mov
push
pop
jne
bound
xchg
add
sub
popf
js
xchg
jle
ds
mov
xchg
lods
push
pop
or
xlat
lods
incb
and
and
adc
dec
mov
sar
pop
rcrb
mov
mov
push
sub
aaa
push
cmp
sbb
fsts
sbbl
imull
inc
or
jle
mov
and
pop
lahf
faddl
in
mov
xchg
adc
dec
dec
pop
enter
jl
xor
ret
jne
stc
inc
push
jbe
pusha
add
test
subb
fdivl
fsubrl
jecxz
dec
sahf
pop
in
push
and
js
enter
jmp
mov
jae
push
js
push
inc
pop
push
push
lret
sti
add
xorb
mov
fistpl
mov
sub
mov
pop
popa
or
cwtl
jg
and
and
loopne
dec
sub
fidivrl
push
pop
shl
jnp
movsl
fwait
cmpsl
sub
sub
test
jo
push
cmp
aad
dec
fcoms
pop
mov
filds
enter
clc
lcall
mov
inc
jns
jno
jae
addr16
mov
push
ret
aaa
pop
adcb
mov
scas
sub
cli
mov
shlb
imul
inc
cld
mov
aad
jbe
leave
push
add
icebp
push
call
sti
fidivrl
inc
js
test
leave
out
dec
lds
in
loop
loop
int
data16
jmp
ret
testb
adc
xchg
ljmp
mov
stos
repz
and
or
pop
aaa
int
daa
rcl
lret
xchg
out
mov
into
jmp
xchg
adc
aad
or
pushf
pop
pop
aas
push
push
pop
dec
mov
shl
jmp
lcall
cmc
lods
ljmp
adc
mov
push
stc
mov
out
fmulp
cli
xchg
jge
cld
push
pop
loopne
and
icebp
push
xchg
aas
xor
stos
imul
mov
add
sahf
push
pop
add
inc
pop
mov
or
sub
imul
cmpl
jmp
mov
mov
or
rcrl
jae
jle
cwtl
dec
inc
repnz
cmpsb
mov
pop
inc
shll
das
insl
add
loopne
jbe
sbb
jo
stos
rcrb
mov
inc
mov
repz
nop
inc
dec
fwait
and
pop
mov
sahf
pop
cwtl
rorb
cmp
cltd
adc
xchg
mov
stc
cwtl
or
jo
stc
ret
in
ds
fldt
xor
mov
lods
cmp
daa
cli
mov
nop
jg
mov
mov
pop
mov
mov
pop
gs
in
jb
out
mov
imul
data16
stos
notb
adc
fsub
dec
cmp
and
mov
mov
mov
xor
xchg
popf
adc
insl
mov
int
add
repz
push
sbbb
push
aas
sbb
inc
movsb
xchg
clc
add
in
sub
addr16
mov
out
mov
dec
sbb
pop
lea
repnz
mov
mov
in
adc
andb
push
scas
movb
stos
insb
dec
test
and
cmp
add
aaa
add
inc
testl
ljmp
pop
sub
inc
pop
sub
in
push
dec
or
jge
les
xor
mov
scas
mov
push
jecxz
fisubl
xchg
sub
xchg
sarb
mov
in
faddl
es
pusha
pop
adc
pop
sbb
movsl
inc
les
pop
sub
test
xchg
xor
push
and
sbb
mov
xor
or
push
outsl
loope
ret
pop
inc
mov
orl
xor
shll
ds
xor
mov
dec
daa
das
loope
mov
xchg
js
adc
and
das
mov
or
xchg
push
shll
pop
and
xor
imul
adc
repz
ds
push
pop
dec
mov
jecxz
jnp
sti
jg
push
or
frstor
jbe
scas
ds
jge
sbb
fdivs
hlt
sbb
push
scas
jle
lahf
sarb
and
add
lds
inc
test
ljmp
aaa
mov
shrl
or
add
popf
lock
movsb
pop
bound
std
nop
add
mov
movsb
push
ffreep
mov
fcompl
lds
mov
inc
jno
leave
push
fs
mov
in
inc
ret
loop
loop
fmulp
mov
mov
pop
lret
clc
fsubl
cmc
imul
ret
in
pop
add
in
aad
lcall
in
pop
sbb
or
popa
jmp
out
stc
nop
xchg
test
add
fdivrl
test
jmp
push
dec
repz
pop
add
push
mov
xor
adc
dec
or
jnp
jae
lret
cmp
xor
leave
xlat
lds
ja
in
pop
dec
test
push
mov
push
adc
lret
pop
sti
aas
nop
int3
not
loope
lcall
cmc
mov
test
push
frstor
xchg
cwtl
push
test
repz
cmpsl
rcll
mov
and
push
in
rorl
call
adc
shr
cmc
js
mov
mov
adc
add
cmpsl
mov
icebp
repz
lcall
and
cmp
jnp
out
inc
dec
add
mov
inc
scas
dec
cmp
fdivrs
jb
loopne
mov
mov
mov
mull
outsl
add
or
outsl
sub
cs
out
bound
sbbl
mov
pop
adc
popf
dec
jns
mov
imul
xchg
push
lock
pop
test
sub
jecxz
in
jne
fs
sbb
adc
insl
rorb
push
mov
mov
int
call
lock
xchg
inc
jge
or
shl
mov
and
icebp
fwait
xchg
sub
lods
orb
mov
enter
and
and
or
jo
bound
stc
fs
or
jae
out
and
icebp
or
fwait
cmc
shl
sub
xchg
dec
addb
subl
into
mov
push
les
xchg
jnp
aad
nop
scas
movsb
andb
or
mov
or
mov
adc
sbb
out
mov
out
push
out
xor
scas
imul
adc
xor
push
dec
and
ficompl
test
inc
ja
mov
bound
jl
jno
cmc
adc
outsl
pop
push
cmc
push
ss
dec
loope
cmpl
daa
xchg
imul
add
mov
movsb
iret
enter
mov
push
mov
cmp
xchg
pop
mov
sub
cmp
movsl
sti
xlat
std
js
cltd
pusha
push
pop
fs
push
mov
mov
lock
loope
test
outsl
lret
inc
ds
pop
xor
mov
cwtl
sbb
in
xor
or
jae
push
loopne
clc
and
fwait
push
inc
or
arpl
in
cmp
push
xchg
sub
imul
fwait
cmc
rolb
add
mov
cmc
lods
inc
shrl
into
dec
cmp
sarl
xor
loope
jecxz
addr16
xchg
test
lahf
rclb
aas
push
mov
into
xor
and
stos
xchg
fwait
pop
xchg
mov
call
cmc
aad
adc
or
stos
inc
push
addr16
jmp
inc
clc
xchg
out
adc
das
std
xchg
or
mov
lret
enter
sahf
push
in
dec
xor
jne
pop
jge
or
scas
roll
or
push
stos
cld
adc
ret
jecxz
mov
push
pop
mov
enter
loope
dec
in
fs
push
push
sbbl
adc
test
out
fs
jne
mov
mov
jnp
or
xor
push
sbb
ror
jnp
arpl
and
jge
cmpsb
lret
outsl
stos
mov
lock
mov
push
lds
xor
and
push
fmull
cld
mov
jle
adc
and
lds
push
cmp
lock
dec
iret
or
pop
js
dec
rolb
jbe
mov
outsb
adc
jg
fs
mov
imul
hlt
jb
sbb
mov
jp
push
and
int3
and
imul
add
mov
and
sbb
xor
inc
pushl
repz
push
aaa
nop/reserved
dec
imul
mov
out
outsb
pusha
pop
sti
fadds
incl
mov
mov
jl
sbb
aaa
and
in
frstor
dec
sbb
pusha
loop
sbb
int
mov
add
push
xor
push
movsl
mov
cwtl
and
adc
cmp
push
push
adc
aad
imul
xor
xor
gs
sbb
mulb
pop
xor
jmp
add
rcr
push
xchg
cmp
das
sbb
fisttps
aas
rolb
push
xor
bswap
adc
pop
cmp
and
in
cmp
outsl
push
nop
loope
out
pusha
adc
adc
popa
fdivrl
jnp
adc
jmp
inc
add
pop
push
gs
lods
mov
lods
sub
test
pop
sbb
stc
mov
dec
bound
lcall
jnp
scas
pushf
push
shlb
aas
xchg
inc
and
xor
sti
push
xor
push
fistpl
nop
lahf
loopne
pop
mov
int
imull
pop
call
and
cmc
out
sti
outsl
imul
stos
or
push
arpl
loopne
add
sbb
inc
ljmp
rclb
lods
pop
mov
or
jns
jp
xor
bound
imul
jbe
imull
cmpsb
mov
jp
inc
dec
inc
lock
push
adc
jmp
inc
add
xor
clc
int3
adc
mov
daa
icebp
bound
aas
fimull
push
bound
lahf
faddl
inc
aas
test
mov
cmp
popa
mov
jge
popf
roll
pop
lret
jae
and
inc
push
or
cwtl
sbb
cs
sub
mov
jns
pop
test
je
mov
ljmp
imul
fildl
cmp
scas
push
dec
adc
cld
xor
jns
push
push
mov
in
xor
filds
cltd
mov
xor
out
lods
test
sub
inc
shlb
add
leave
sti
inc
cmp
jle
dec
pop
fwait
mov
into
mov
mov
jge
ret
mov
inc
scas
inc
clc
jnp
push
loope
add
jg
xchg
movsl
ds
add
mov
loop
shll
or
das
sahf
call
mov
or
jne
movsl
and
std
popf
cmpsb
mov
popa
mov
inc
fmull
xchg
int3
pop
cmpsl
push
arpl
pop
lahf
addb
jl
int
ret
fcmovne
adc
addl
data16
shl
mov
ror
iret
xchg
xor
lods
aas
jecxz
xchg
jne
cmpsl
lods
arpl
pop
std
xor
dec
push
mov
push
push
das
mov
jnp
jne
xchg
pop
sbb
test
inc
inc
imul
push
and
inc
insl
fdivs
or
sub
lods
sub
pop
jo
js
neg
and
test
rclb
sub
mov
push
cmpl
xchg
dec
out
cltd
repz
mov
and
dec
pop
adc
aam
and
lea
dec
ret
ret
data16
repz
lcall
mov
clc
cmc
jbe
xor
sub
movsl
or
leave
push
or
dec
loopne
sbb
xchg
xor
test
pop
mov
cmp
je
fdivl
jae
mov
dec
loop,pn
cli
jbe
mov
inc
test
cmpsl
mov
pop
movsl
not
xchg
cld
mov
push
subb
or
jge
push
hlt
xor
cmp
fisubs
sbb
mov
add
pop
push
xlat
mov
push
fwait
sti
jns
popa
xchg
call
adc
bound
jb
add
incl
and
sahf
insl
cltd
fiadds
mov
or
out
pop
xor
fcomps
shll
sbb
das
mov
mov
out
xor
addr16
outsl
jecxz
push
or
push
loop
push
outsl
sub
pop
in
out
scas
inc
mov
mov
dec
inc
cmp
rorl
pop
test
mov
add
xor
mov
cld
cld
pop
out
pop
adc
int
clc
add
bnd
cmp
cmp
cmp
lret
mov
out
je
ret
or
mov
dec
pop
fisubs
dec
pop
in
mov
fstps
cmp
push
pop
in
shlb
xor
sub
sub
pop
mov
cmp
into
dec
dec
sbb
sarl
mov
test
xchg
xchg
cmp
mov
xchg
pusha
test
and
fwait
jnp
xchg
js
pushf
lock
pushl
or
repz
jnp
push
out
pushf
clc
ja
out
jl
ljmp
ja
jl
and
daa
jle
ficomps
mov
jl
push
or
movsl
aad
fldt
leave
test
aaa
xchg
bound
rolb
pop
and
aam
repnz
xor
jmp
add
out
int3
xchg
add
mov
adc
les
in
push
mov
jge
pop
and
or
orl
jo
sbb
or
push
xor
popf
xor
test
adc
cs
xlat
xchg
jne
xor
dec
mov
dec
mov
mov
ror
iret
mov
cs
push
add
inc
mov
cmpsb
jnp
mov
xchg
rolb
mov
jae
xor
xor
mov
into
cmpsl
imull
out
lret
xchg
stos
iret
cmp
xchg
xchg
sti
push
mov
shlb
icebp
lcall
mov
es
mov
outsb
out
shll
enter
test
jns
outsl
pop
sahf
xor
leave
cmp
jl
lods
push
mov
in
add
ret
fldl
int
mov
dec
mov
jmp
adc
test
stos
mov
sbb
popa
sbb
mov
mull
pop
adc
jle
sti
popf
mov
clc
push
out
dec
or
push
mov
xor
mov
pop
std
sub
test
cmp
push
aad
aaa
nop
sub
leave
and
in
iret
out
cwtl
out
repnz
aad
add
std
jae
fs
cmp
addl
push
sub
or
and
push
fnstsw
add
xor
inc
arpl
loop
cmpsl
scas
push
rorl
cmp
inc
xor
xor
sub
push
pop
fldl
adcl
jne
andb
arpl
jl
adc
pop
sbb
mov
outsl
mov
xor
or
xlat
cs
scas
lods
sub
xchg
mul
mov
cltd
cmp
cmp
xchg
xlat
iret
pop
sbb
push
dec
mov
cltd
xchg
xchg
shlb
jae
jno
push
lds
mov
lret
xchg
jg
nop
scas
push
std
clc
cmp
xor
sbb
out
in
push
inc
adc
ret
push
movl
adc
lret
inc
sub
rcl
lcall
push
xchg
movd
push
pop
mov
repnz
pop
fdivs
ret
lods
loope
push
mov
adc
inc
xchg
leave
mov
add
daa
jne
mov
adc
dec
imul
pop
not
aaa
mov
cltd
inc
cmp
adc
push
fucompp
gs
je
les
lods
inc
cmpb
popf
lret
notb
cmpsb
mov
pop
mov
xor
ret
cwtl
negb
std
negl
movsl
loope
and
rcrb
leave
mov
fwait
xor
sti
xchg
idivb
orl
outsl
test
icebp
adcb
or
movb
nop
std
outsb
and
add
push
cli
mov
arpl
aad
xor
aam
sbb
aas
pop
xchg
xchg
aad
enter
sbb
test
sbb
mov
and
dec
xor
sub
icebp
icebp
cmp
xor
shrl
sbb
pushf
stos
mov
sbb
pop
jnp
lods
dec
fiadds
jo
ret
mov
xlat
std
cmpl
test
addr16
ret
mov
inc
fistpl
jo
xor
aam
mov
cmp
sbb
ljmp
mov
je
sti
push
lock
fwait
mov
cmp
sbb
adc
jae
fimull
mov
ds
xlat
fs
adc
mov
aad
jge
in
inc
inc
into
out
lock
mov
stos
aaa
mov
daa
dec
scas
out
adc
xor
push
and
mov
inc
jns
mov
cs
daa
in
xchg
add
mov
js
jno
cltd
lret
sub
loopne
sbb
cld
addr16
cmc
sub
push
inc
mov
push
lds
xchg
cmp
std
push
icebp
cmp
cmp
ror
xchg
xor
scas
test
movsl
leave
stos
add
push
scas
fidivrs
pop
push
xchg
sbb
xchg
xor
cwtl
mov
xor
addr16
mov
les
cmpsb
xchg
enter
cmc
ret
adc
int
into
jle
mov
sbb
jg
xlat
test
in
dec
lods
lock
nop
ficomps
cld
adc
loope
insb
dec
sub
lcall
cmpsl
mov
jmp
xchg
ja
adc
fwait
ljmp
fidivl
adc
imul
and
ficoms
aaa
inc
cmpsl
fldcw
cltd
mov
in
jno
das
cltd
rorw
cmp
sbbl
mov
fs
fists
dec
or
in
test
and
push
push
xchg
xchg
mov
lock
andb
jle
and
clc
or
xchg
arpl
cs
aam
sub
add
jne
in
mov
cmc
dec
push
inc
add
lea
ja
add
adc
dec
div
shlb
insl
fs
or
pop
jb
mov
dec
cmp
dec
lds
cli
pusha
imul
test
negl
jl
shlb
add
call
sub
loopne
andb
cmc
sbb
pop
and
push
sub
or
mov
into
mov
repnz
test
mov
loopne
in
push
mov
cmpb
in
mov
cmp
xchg
loopne
cmp
push
aad
mov
pop
cmpsb
or
fwait
sub
jne
mov
call
hlt
adc
jmp
imul
jl
lock
mov
lock
hlt
add
fs
shrl
and
daa
mov
rorb
js
mov
jo
pop
dec
scas
mov
inc
sbb
mov
jb
mov
cmp
sub
inc
mov
movb
mov
lret
or
test
jp
incl
aad
pop
xchg
ss
xor
fwait
jecxz
in
hlt
sub
pop
int3
or
movsb
xchg
jg
movswl
out
jns
mov
shr
mov
aad
out
add
outsl
push
std
pop
or
push
cwtl
lea
mov
imul
lcall
test
cmpsb
mov
push
push
pop
stos
leave
pop
and
ljmp
cwtl
add
push
jo
mov
mov
xchg
and
pop
imul
ficompl
insl
lret
div
dec
cmp
jb
xchg
sub
enter
test
sub
enter
inc
sbb
in
add
sbb
insb
mov
add
jo
inc
adc
popf
add
inc
mov
pusha
or
sub
ficoml
in
aad
sti
or
sub
sahf
mov
stos
les
ret
insb
sub
test
and
ljmp
jp
push
cld
mov
mov
cmp
mov
xchg
mov
push
test
jl
cmp
enter
jbe
loope
or
in
fdivs
push
ficoml
cmp
bound
inc
cmp
push
int3
bound
add
inc
outsl
das
cld
jmp
push
test
pop
push
mov
xor
xor
cltd
rcr
lea
xchg
cmp
pop
movsl
jae
std
cmc
sbb
inc
dec
pop
mov
xchg
std
mov
xchg
dec
les
pop
lods
loope
cltd
dec
repnz
mov
cmpsb
mov
into
mov
push
xlat
jne
jo
mov
xor
pop
xchg
inc
mov
xchg
or
xor
hlt
cmpsb
test
xor
pop
rcl
int
sti
mov
fnstenv
inc
jno
outsb
fiaddl
or
and
loopne
repz
hlt
push
fcompl
cmp
jb
lds
in
fwait
movsb
push
jnp
sbbl
add
ss
stos
mov
and
ss
in
rcrl
imul
adc
in
rcr
jo
inc
and
enter
aam
call
call
movsl
push
mov
mov
daa
ret
js
mov
xor
jmp
cli
and
inc
sbb
mov
pop
pop
sub
lret
push
repnz
mov
mov
jnp
stos
clc
xchg
ret
daa
push
insb
push
lret
imul
mov
mov
sbb
adc
pop
adc
es
aaa
xchg
sub
cmp
push
xor
popl
bound
cltd
ljmp
sbb
xchg
arpl
lahf
push
jle
int3
nop
push
mov
repnz
or
and
or
ds
pop
fucomip
fldl
sbb
pop
lea
xor
clc
stos
xor
imul
cs
shlb
pushf
rcrl
and
hlt
adc
cmp
xor
into
mov
xchg
cmc
ficoml
lock
test
fidivrs
add
mov
stos
xchg
cltd
sti
mull
cwtl
mov
in
repnz
sahf
jae
pop
or
mov
jno,pn
mov
in
imul
jnp
or
jge
xor
xor
cmc
jecxz
mov
jno
imul
int
xchg
add
neg
xor
arpl
insl
mov
imul
lcall
ss
mov
mov
lods
sub
lock
and
hlt
dec
in
adc
cmp
jne
orb
mov
mov
dec
inc
mov
mov
adc
or
repnz
pusha
xchg
cmp
in
addr16
add
lahf
fwait
test
aam
mov
or
mov
popf
xchg
jl
pandn
mov
jae
sub
sarl
ss
fimuls
jbe
xchg
ljmp
jno
ds
pushf
inc
mov
push
lcall
dec
mov
iret
dec
iret
int3
stos
dec
shrb
and
lods
sub
push
scas
xchg
fdiv
pop
sbb
mov
push
outsb
popf
push
jae
mov
jmp
pushf
cld
aaa
lods
mov
push
mov
dec
stos
add
cmp
fistl
pop
dec
out
outsb
sbb
or
lods
rcll
ret
stos
mov
push
xchg
push
ficompl
xor
lods
stos
cmpsb
popa
adc
ret
ficoms
and
jns
jle
sbbb
cmp
push
cmp
dec
mov
inc
push
movsl
inc
cmp
mull
mov
xchg
jb
repz
shrl
cld
dec
repz
aad
rclb
and
cmp
insb
into
or
fidivrs
arpl
mov
ja
or
fwait
pushl
ds
and
addr16
fdiv
rcrl
comiss
push
dec
pusha
cmp
xchg
shrl
fists
sbbl
movl
loop
repz
cmpsl
dec
or
mov
xchg
in
stos
test
add
sub
outsb
mov
dec
in
inc
icebp
daa
sub
mul
outsl
pop
mov
mov
inc
jl
jo
cltd
into
mov
sub
pop
ja
xlat
lock
mov
xchg
out
mov
xchg
xchg
mov
test
fdivrl
xchg
mov
aam
sub
ffree
push
lds
shlb
lret
outsb
mov
sarl
lock
imul
clc
sub
cltd
xchg
adc
out
adc
sub
loope
stc
xchg
mov
aam
push
out
loop
lds
mov
fcomp
iret
jne,pn
sahf
cmp
lock
aad
imul
adc
dec
into
lret
fldenv
adc
dec
loopne
mov
call
add
dec
pop
aam
pop
sub
cmp
insl
inc
mov
fwait
fucomip
les
mov
push
jp
lock
mov
jno
sbb
cmpsb
push
mov
mov
outsb
test
sub
jb
je
loop
push
add
sbb
and
cli
cs
loopne
xchg
frstor
mov
cmp
nop
rcr
xor
insl
rorb
pop
add
xlat
sbb
orl
jnp
or
mov
jecxz
sub
mov
lods
xor
ljmp
jns
pushf
pop
add
bound
inc
lea
dec
inc
or
jno,pt
or
leave
pop
adc
vpmovusdw
add
adc
movsb
or
jle
out
es
test
or
ds
aad
pop
sub
fidivrs
cmpsl
inc
jmp
outsl
or
xchg
cmpl
push
lret
mov
loopne
sub
divb
or
nop
movsb
bound
clc
loope
jp
addb
add
mov
aad
loop
movsl
stos
mov
inc
add
push
push
lock
jbe
in
inc
xchg
and
rcr
sbb
jbe
movaps
movsl
in
cmp
pop
ret
or
popf
sbb
ds
shrb
idivb
lods
mov
mov
out
adc
shll
ja
loope
push
outsb
scas
cmp
gs
cmp
sbb
mov
xchg
pop
rcr
test
subb
in
fcomps
pop
es
mov
add
xor
adc
jo
cmp
xchg
add
cwtl
repnz
fldt
adc
xchg
add
test
jmp
adc
cld
test
mov
sub
mov
lret
cltd
jnp
mov
jbe
ret
lea
xorb
push
jg
pop
ljmp
jp
jge
addb
or
cltd
pop
adc
stc
pop
mov
outsl
std
xor
add
aas
fs
or
lods
and
fisttpll
pop
stos
mov
mov
sbb
das
dec
insl
je
cmpsl
clc
push
addr16
inc
nop
mov
xor
inc
jg
xchg
ret
xchg
pop
jns
int
push
adcb
aam
sahf
pop
outsl
fdivrp
jecxz
mov
cmp
shrl
mov
push
mov
pop
orb
adc
sbb
shrb
jo
mov
sub
fwait
mov
mov
cmp
push
push
decb
pop
dec
test
dec
lds
loopne
test
sub
sbb
push
loopne
adc
dec
xchg
sbbl
xchg
imul
dec
xor
push
pop
rcl
or
fsubr
ds
ja
push
fwait
push
inc
nop
addr16
xchg
repz
mov
dec
cmp
push
mov
cmp
lods
imul
sub
mov
adc
pop
nop
mov
and
mov
cmpsb
sbb
bound
rcr
lods
mov
aad
dec
testb
inc
jle
lds
mov
sahf
mov
inc
fwait
add
iret
mov
push
imul
lds
js
jo
or
adc
popa
add
sarl
sbbl
test
add
test
cwtl
clc
add
pop
pop
mov
mov
movsl
fdivl
sbb
das
and
jecxz
std
dec
clc
adcl
or
sub
adc
stos
pop
stc
inc
jo
jae
pop
and
pushf
xlat
scas
push
jne
cltd
add
idiv
bound
xlat
push
and
fists
jne
ljmp
jnp
sbb
dec
mov
aad
jle
add
rorl
sbb
call
imul
jns
sub
or
daa
push
ss
xor
movsb
jno
lods
xor
dec
in
lea
insl
jb
movsb
mov
testb
in
mov
or
jbe
cmp
inc
pop
mov
aaa
adc
mov
inc
movsl
ret
cmpsl
popf
std
adc
sarl
pusha
rep
enter
jae
inc
outsl
mov
cld
and
popf
dec
lret
push
adc
jmp
jbe
and
pop
jp
or
jno
aam
dec
cmc
rcrb
js
pop
clc
fistpll
lods
shll
arpl
pushf
shl
adc
aas
into
lahf
jnp
ja
daa
pop
inc
fadd
or
es
adc
add
cmc
popa
or
jge
mov
in
ljmp
dec
int
xchg
xlat
mov
je
fs
lods
dec
or
movsb
jmp
mov
incb
jg
mov
inc
hlt
loope
divb
das
scas
sbb
push
add
sub
mov
add
roll
shll
xor
jp
out
push
push
xchg
mov
pop
dec
ss
sub
loop
dec
lea
xchg
sbbb
and
jmp
andl
stos
mov
scas
dec
jnp
insl
daa
shll
dec
js
cmpsb
jmp
mov
shlb
cmp
leave
fsubrl
pop
mov
push
out
lcall
jnp
loopne
jnp
bnd
int3
das
xchg
adc
incb
sub
mov
cmpsb
popa
cmp
push
aaa
adc
adc
nop
shll
jg
idivb
pop
mov
lahf
cld
add
jge
add
repz
inc
mov
rcll
and
pop
xchg
iret
xor
sub
dec
xchg
pushf
dec
mov
fcompl
addr16
shlb
mov
andb
in
cmpsl
lock
iret
inc
nop
lret
into
push
testl
inc
test
mov
adc
arpl
push
inc
pop
sbb
test
test
mov
pop
pop
jbe
push
add
cld
inc
out
push
pop
mov
stos
ret
lret
inc
sahf
inc
dec
mov
cmp
fidivl
sub
out
pop
in
insb
sub
mov
hlt
pop
jnp
mov
sub
mov
lock
inc
push
cmovno
cwtl
stos
cmp
xor
inc
setle
or
xor
pop
sub
or
jne
pop
repnz
mov
pop
cmpsl
inc
push
sub
inc
mov
cmp
call
ret
int
mov
out
push
movsb
cmpsl
mov
aaa
int3
stos
data16
insb
add
in
push
mov
clc
mov
cltd
xor
push
lods
test
add
and
jne
cld
jecxz
mov
and
push
add
subb
or
or
xchg
dec
xor
test
push
mov
xlat
shlb
lods
aas
xor
lock
je
stos
push
cli
out
je
jp
popa
shll
push
pop
push
and
stos
xchg
out
repz
lret
aas
and
mov
out
pop
aas
iret
dec
stc
jmp
fucomip
or
mov
cltd
fadds
cmc
pop
lahf
test
inc
sbb
xor
mov
test
xchg
shrb
movsb
movsb
mov
sbb
std
mov
popf
jmp
push
fistl
repz
pop
and
imul
push
jbe
ret
cmp
lds
jge
mov
and
repnz
gs
sahf
insl
mov
hlt
icebp
gs
jno
xor
cwtl
pop
mov
xor
xor
xchg
in
gs
push
sbb
inc
in
xchg
test
mov
ret
outsb
cs
sbb
andl
sti
stos
push
cld
imul
bound
jbe
push
xor
outsb
xchg
imul
js
pop
add
sub
movsb
or
jb
add
test
or
movsb
arpl
cmp
mov
enter
ja
fimull
add
and
movsb
sub
into
addr16
adc
nop
mov
pop
lret
sbb
repnz
stos
pusha
adc
sbb
add
in
push
jb
imul
nop
xchg
pop
cld
jo
cli
add
rol
jno
test
push
mov
dec
repnz
stos
cmpsl
mov
xor
out
pmuludq
jp
test
cltd
cmp
jns
mov
rcr
sahf
jge
jne
ret
cli
cmp
sbb
adc
je
mov
mov
dec
shll
loope
lret
jmp
andb
dec
js
xor
int3
ret
sub
xor
mov
cmp
iret
aam
roll
adc
push
inc
fisubrs
mov
push
int
inc
sub
dec
jnp
sbb
pop
aad
add
fisttpll
cmc
mov
xchg
jge
mov
jp
push
daa
ret
repz
cmpsl
gs
mov
lea
push
aad
sahf
movsb
xor
jg
fcmovbe
int3
xlat
ret
xchg
iret
outsl
scas
dec
xor
and
cmp
sub
dec
jge
or
dec
xchg
add
shll
push
sbb
cmp
xchg
xchg
push
lahf
imul
mov
inc
xor
adc
aaa
sbb
pop
sub
addr16
cmpsb
pop
loope
mov
sub
cltd
xor
in
add
stos
push
mov
test
sbbl
cltd
jns
jg
mov
inc
aam
std
ret
pop
jno
arpl
hlt
push
fbld
jecxz
or
push
in
push
mov
sti
fwait
cmp
sbbb
shlb
popf
cmp
ficoms
jmp
pop
mov
sub
dec
loopne
pop
xchg
lret
in
cli
aaa
testl
sub
sub
les
push
dec
filds
scas
jmp
xor
adc
inc
out
ret
xor
js
pop
cmp
add
and
lods
sbb
sbb
pop
leave
jle
sbb
lret
dec
cli
mov
add
lcall
pop
or
int
outsb
cmp
fld
aam
mov
push
nop
cmc
push
mov
shl
cld
dec
sbb
sbb
scas
pop
xor
xorl
xchg
dec
out
adc
xchg
inc
cmp
and
rol
mov
mov
or
push
cwtl
rcrl
mov
ss
mov
pop
test
arpl
mov
cmp
push
push
lods
or
xchg
shll
shll
sbb
push
dec
push
out
fidivrl
aas
lret
cmp
xchg
aas
cli
pop
xlat
pushf
decb
cmp
jg
adc
pop
sbb
or
inc
andl
lods
jne
push
aad
lea
int
in
dec
addr16
pop
mov
xor
adc
mov
mov
rcl
mov
call
mov
mov
aam
hlt
and
jmp
xchg
cmp
mov
add
ja
jmp
adc
adc
jbe
mull
mov
push
adc
adc
mov
adc
push
addr16
aaa
imul
movsb
sbb
mov
xchg
mov
pop
mov
shlb
mov
cmc
xchg
sub
sbb
xorb
fadds
addr16
pop
cmp
add
jmp
mov
into
jge
sbb
mov
xor
int
pop
inc
rclb
xchg
adc
adc
xor
xor
mov
test
cli
sub
dec
ret
jbe
add
adc
push
mov
inc
push
and
scas
data16
mov
sbb
adc
xchg
mov
inc
mov
clc
push
cmpb
sarl
push
inc
xchg
add
call
push
scas
sti
adc
mov
mov
cs
jne
jl
push
ss
xor
cwtl
outsl
movsl
dec
push
js
stos
test
data16
pop
aas
dec
cmpsl
and
and
inc
hlt
jge
mov
dec
jl
shlb
aad
mov
push
loopne
mov
sahf
rcll
add
mov
mov
addr16
pop
push
inc
pusha
aaa
push
pop
xor
in
je
mov
jge
movsb
lods
dec
scas
jnp
push
repnz
adcb
in
andb
sub
test
in
mov
pop
cwtl
inc
mov
mov
lods
jo
fsubrp
roll
loopne
in
rorb
mov
mov
jmp
pop
inc
cmpl
scas
push
mov
jmp
mov
add
outsb
loope
and
fs
push
sub
imul
test
inc
test
dec
adc
fptan
add
in
stc
and
fldcw
jecxz
pop
adc
mov
aas
adc
mov
mov
shr
sbb
adc
shll
push
mov
fmull
jp
nop
test
loope
mov
pop
stos
repz
mov
test
popf
notl
sti
xchg
test
mov
inc
iret
fucomi
cmp
add
fcoms
fwait
xchg
sbb
cs
xor
bound
mov
jg
cmp
inc
xchg
add
ficompl
sub
lea
mov
and
and
adc
les
adc
mov
dec
sbb
adcb
scas
push
fmuls
repz
arpl
mov
in
aaa
push
movsb
leave
repnz
and
in
pop
stos
movsb
shrb
rorb
lret
lcall
inc
and
and
mov
loope
inc
mov
aad
xchg
xor
mov
xchg
aad
daa
sbb
adc
js
lds
cmc
ret
xchg
jmp
mov
lods
push
jno
lods
loope
push
xchg
pop
dec
jp
subb
imul
es
fadds
icebp
jle
ljmp
or
jne
sahf
div
and
js
lea
or
mov
sbb
add
jno
adc
adc
cmp
in
loope
test
push
das
int
bound
mov
test
lods
cmp
out
dec
sbb
cltd
adc
aas
xor
or
xor
adcb
fchs
sub
loopne
add
push
sub
push
imull
les
xchg
nop
dec
or
sahf
outsl
push
mov
es
inc
movsb
les
pop
in
ret
addl
xor
dec
fcomp
push
shrb
pop
mov
pop
iret
movsb
push
dec
andb
les
jbe
adc
or
or
call
push
andb
jecxz
mov
mov
sbb
dec
mov
and
inc
dec
dec
repnz
and
mov
sub
stos
cmpsb
fst
es
inc
xchg
aas
out
je
insb
outsb
insl
sbb
pop
xchg
and
push
pcmpeqd
adc
dec
dec
fisubrs
cmp
push
hlt
dec
push
mov
mov
add
cmp
pushl
xlat
stc
sahf
and
nop
xor
adc
mov
xchg
xchg
aam
fldl
jnp
and
int3
pusha
xor
daa
sti
push
shlb
ja
jmp
xor
int
lahf
fwait
jb
jle
insl
aam
xlat
dec
arpl
andl
jae
jmp
cmp
imul
inc
pop
out
pop
imul
pop
je
ficoml
mov
pop
cmp
sub
xor
in
push
push
xlat
into
call
adc
pop
cli
jae
mov
mov
add
mov
enter
fstl
cwtl
mov
adcl
movsb
mov
les
mov
xor
pop
sahf
idivb
mov
and
ja
sbb
insb
mov
mov
divb
data16
fisubl
in
xchg
imul
aas
jnp
int3
jbe
popa
rcrb
and
cmpsl
xor
jne
aam
aam
int
cmpsl
or
sub
data16
ja
xchg
push
xchg
xor
addl
inc
repz
stos
jp
jns
mov
mov
jmp
das
cmpsb
dec
pop
jge
mov
out
mov
dec
jecxz
sub
aas
iret
cli
shll
lret
cmpsl
out
adc
in
sub
aam
push
out
jge
popl
in
repnz
push
sub
cmp
dec
stc
jno
lds
int3
daa
popa
mov
adc
sbb
decb
arpl
int3
mov
jg
or
xchg
imul
stc
scas
xchg
jo
xor
ss
sub
mov
mov
mov
shll
xor
inc
loope
pop
clc
jp
js
in
inc
cmp
adc
push
fs
sbb
mov
jmp
sub
add
jo
jne
test
add
dec
test
mov
adc
and
add
mov
loop
imul
or
pop
pcmpgtb
and
test
imul
cld
mov
fs
mov
mov
sbb
cmp
je
mov
rorl
sbb
and
mov
cmpsb
into
and
movsl
xor
lods
into
sbb
and
push
jecxz
add
jno
push
pusha
cmpsb
mov
outsb
sub
dec
je
xor
inc
jmp
mov
xchg
and
icebp
movl
icebp
add
push
sub
jge
mov
jecxz
adc
adc
xchg
jns
push
inc
popf
adc
mov
xchg
jns
adc
jge
push
into
adc
xchg
fwait
cmp
xor
jnp
gs
xchg
xor
inc
xor
push
push
pop
dec
mov
or
outsb
pop
jne
pushf
jbe
aaa
lods
sarl
xor
cmpsl
fidivrs
mov
xor
hlt
cmp
xor
in
or
ret
mov
pop
add
pop
inc
ja
add
sbb
pushf
jne
jo
pop
insb
iret
jmp
xchg
bound
mov
mov
in
outsb
mov
scas
xor
dec
xor
lods
data16
rcr
cmp
mov
add
mov
inc
std
add
xchg
out
cltd
loope
icebp
mov
sarb
leave
mov
adc
sub
inc
stos
sbb
xchg
in
rcll
xor
lock
dec
cmp
mov
adc
fwait
cwtl
in
in
dec
jno
sbb
fisubrs
int3
ds
mov
aad
push
mov
repnz
sub
and
fwait
int
ret
fs
jno
jl
js
scas
std
jno
xchg
movsb
test
outsb
je
mov
hlt
sahf
inc
xchg
xchg
test
idivl
push
seta
mov
xlat
pop
call
inc
jecxz
add
es
inc
insl
out
jmp
mov
sti
popa
inc
rcr
mov
xor
icebp
pop
imul
psrad
andl
dec
sub
sub
mov
leave
fs
jl
dec
mov
inc
jmp
mov
jmp
scas
inc
aam
add
jp
xlat
cmc
add
loopne
cmpsb
inc
negb
imul
call
pop
out
dec
iret
enter
xchg
adc
sbb
xchg
cmp
rorl
xor
out
jno
mov
push
dec
inc
stc
xor
ret
cmpsl
lea
adc
aad
test
mov
lods
ja
add
inc
xor
notl
xor
lahf
daa
adc
cwtl
cmp
adc
jb
cmp
jecxz
arpl
push
call
push
test
jmp
test
fstpt
notl
push
sub
jle
or
inc
repnz
or
test
aaa
xchg
xchg
jne
pop
push
push
jmp
cmp
push
dec
aad
dec
sub
mov
lahf
dec
inc
lret
mov
movsl
pop
add
jnp
dec
add
fcoms
jmp
das
mov
sub
jmp
jnp
xchg
mov
cmp
xchg
fistps
mov
lret
notb
mov
mov
or
mov
rorb
movsl
cmp
test
mov
jne
or
sti
rorb
inc
push
sub
out
sub
sub
adc
cmp
fwait
in
cli
ljmp
int3
fldcw
aam
or
cmp
mov
xor
sub
jae
pop
in
icebp
xlat
inc
shll
sub
scas
sbb
jg
outsb
dec
inc
iret
pop
bound
pop
pop
icebp
repz
mov
clc
xor
ljmp
out
js
mov
mov
testl
xchg
or
movl
or
or
xchg
dec
xchg
cli
pop
shll
cmp
das
neg
mov
leave
insl
adc
lret
sub
js
or
aas
lods
mov
cwtl
mov
pop
and
arpl
iret
add
cmp
ja
out
mov
outsb
pop
xor
push
scas
mov
mov
ss
mov
push
pop
mov
addr16
pop
shrb
out
negb
pop
int3
jp
addr16
xchg
sbb
pop
popf
push
loopne
jbe
mov
xor
daa
stos
pop
and
jl
mulb
or
jo
call
sub
ss
fmull
jnp
and
rcrb
mov
outsb
hlt
daa
sarb
pop
mov
cmpsb
lea
es
loopnew
repnz
in
hlt
xor
jno
inc
cmpsl
xchg
mov
aas
insb
push
pop
mov
out
mov
mov
adc
or
mov
xchg
cmp
inc
imul
inc
cmp
xchg
pop
lcall
lock
mov
cli
daa
cmpsl
sub
jae
neg
nop
xchg
cmp
adc
in
mov
loopne
clc
sub
inc
sub
insb
add
in
sub
ljmp
cmpsb
loope
psrad
or
lds
jns
xor
inc
aam
jb
xor
enter
ja
loopne
push
aas
insl
ss
pop
leave
stc
lock
mov
adc
outsb
cmp
push
dec
xchg
pop
divb
sbb
insb
shlb
call
mov
icebp
nop
rol
xchg
sub
pop
or
lods
jo
push
jg
sbb
sbb
mov
pop
lock
jo
pusha
xor
and
pop
cld
andb
push
dec
cli
push
inc
inc
sahf
loopne
inc
stos
push
test
push
aaa
test
stos
lret
xchg
xchg
mov
sbb
jae
je
ficoms
mov
sbbb
movsb
xchg
sbb
jo
sub
cmp
xor
fstps
fisubl
or
xor
insb
jbe
jmp
dec
adcb
jge
lcall
jae
mov
lock
and
xor
inc
sub
dec
or
xchg
inc
and
cltd
pop
out
lret
adc
mov
dec
in
push
dec
inc
or
shl
mov
add
rcll
out
push
add
push
test
mov
aas
sbb
xlat
jp
cmp
push
adc
jae
das
mov
xorl
xchg
sarb
lods
sbb
add
mov
in
fwait
xchg
xor
inc
dec
in
xor
sti
cmpsb
cmp
aad
jns
sub
test
sbb
pop
inc
xchg
push
pop
push
enter
sbb
ljmp
add
pusha
push
fsubr
mov
inc
mov
in
fadds
inc
inc
jg
lret
mov
stos
add
add
insb
not
pop
xor
in
pop
mov
and
sub
stos
aas
push
jge
mov
push
rolb
pop
loopne
or
xlat
cmp
cli
xor
or
jae
push
addl
sbb
icebp
or
lds
ret
ss
xor
in
bound
sbb
sub
pop
pop
popf
pop
xorl
or
and
es
add
sub
ja
je
cmpsl
pop
push
dec
mov
jecxz
ja
adc
push
mov
mov
int
call
lds
movsb
xchg
out
or
and
icebp
and
popf
and
imulb
xor
pusha
pop
adcb
hlt
cmp
rorl
sbb
inc
fisttpl
pop
pop
and
push
adc
ja
cmp
sbb
mov
ss
xchg
mov
rcr
mov
or
sub
xchg
fs
sbb
sub
lods
cmc
leave
rcrb
daa
aas
add
cmp
pop
stos
imul
push
push
mov
jl
clc
enter
push
filds
jle
popa
or
sub
imul
movsl
mov
fsubs
cli
or
add
mov
jae
mov
dec
cltd
xor
pop
dec
sub
neg
into
in
popf
mov
out
push
ja
std
imul
stc
xchg
mov
js
mov
and
xchg
clc
cmpsl
les
ss
pop
cmp
out
notb
enter
and
mov
mov
es
inc
mov
sbb
into
mov
jmp
ret
fmull
loopne
inc
mov
dec
and
lods
xor
adc
sub
mov
into
or
in
xor
enter
lods
jl
and
fwait
pop
and
subl
or
cmp
lods
incb
and
leave
mov
push
movsb
mov
dec
lea
and
in
addr16
andl
fcmovne
aam
xor
mov
add
scas
fwait
test
scas
dec
loope
sbb
aas
cli
inc
jae
dec
mov
data16
imul
out
fiaddl
cmp
mov
shll
mov
pop
push
adc
inc
cs
cs
imul
push
sbb
and
in
cld
divb
jnp
sbb
cmpsl
or
aaa
xlat
ds
xchg
pop
xchg
cltd
nop
cmpsl
xchg
lea
mov
in
icebp
inc
pop
je
add
add
xchg
fs
jecxz
mov
jae
pop
mov
cmp
nop
out
pop
xchg
push
xor
negl
jg
mov
add
cmp
shrb
shll
mov
mov
aad
pop
hlt
push
cmp
in
int3
inc
lods
insl
xor
mov
in
jb
into
lods
aas
ljmp
pop
mov
and
in
fistpll
int3
jae
pop
xchg
xor
xchg
fbld
das
mov
mov
in
mov
lcall
cmp
jmp
pop
shlb
pop
push
rcll
sbb
dec
aas
dec
xor
shl
inc
cmp
out
fnstsw
repz
lea
inc
stos
lret
je
fldcw
cld
sahf
add
das
jle
push
mov
mov
jo
mov
adc
cmp
mov
xchg
pop
dec
inc
scas
mov
dec
push
mov
pop
aad
rorb
pop
loope
add
jp
xor
loope
fimuls
pop
push
mov
cmp
jb
mov
fs
dec
mov
cwtl
insl
fwait
xor
loope
mov
xchg
mov
push
pop
mul
mov
ret
and
addr16
aad
rclb
mov
aam
add
movsb
or
int3
jns
das
shrl
pop
push
push
pop
inc
xor
icebp
mov
in
mov
cmpsb
lods
sub
push
cli
fstpl
mov
fcoml
mov
ja
cltd
es
fmull
mov
aaa
in
jle
adc
jp
ret
lds
xchg
loop
addr16
stos
je
inc
cmpsb
fcmovb
push
mov
out
mov
mov
mov
sbb
push
pop
data16
ljmp
xchg
aas
pop
sti
mov
mov
mov
lret
jl
jnp
ficoms
mov
or
xor
jmp
push
sti
neg
xor
push
add
test
xchg
cmp
fucompp
fisttpl
inc
jmp
cmp
ficoml
repz
push
nop
xchg
jle
aas
jo
sahf
sbb
cltd
mov
cli
popa
mov
shrl
int3
dec
adc
mov
cli
jbe
rcrb
adc
leave
mov
or
push
loope
arpl
prefetch
cmc
sbbl
lret
inc
xchg
inc
sub
insb
ret
xorl
fwait
clc
daa
and
stos
aam
inc
add
gs
ret
addr16
cmp
push
cs
movsb
jecxz
lret
popf
pop
or
xchg
inc
imul
cmp
mov
xor
xlat
aaa
and
enter
sbb
fnstsw
dec
pop
sub
cli
dec
test
in
cmp
imul
shl
shlb
dec
xor
adc
xchg
fwait
ds
es
pop
jg
out
bound
adc
and
bound
divl
jp
mov
add
ljmp
ret
icebp
daa
lods
jmp
pop
push
cmp
xchg
data16
outsb
scas
inc
cld
roll
mov
and
mov
daa
fimull
test
lods
in
arpl
sbb
sbb
inc
lcall
scas
repnz
fildll
mov
adc
ret
popf
loope
dec
and
je
mov
test
xor
or
cmc
movsl
jne
push
push
fbstp
int3
out
sar
dec
outsl
or
xchg
enter
mov
in
mov
out
pusha
arpl
adc
aam
add
push
jb
enter
test
bound
adc
fildl
out
cmp
add
aaa
out
and
add
jnp
sbb
fs
daa
add
out
in
inc
dec
or
push
ljmp
jge
inc
cltd
out
aaa
es
cmp
stc
ja
push
out
psrld
mov
sub
hlt
ror
pop
sub
ficoml
adc
rorl
pop
add
daa
xor
dec
rcrl
xchg
lds
loop
push
sti
pop
and
mov
jo
add
out
mov
out
pop
lods
xor
mov
icebp
sbb
push
loopne
adc
jbe
in
repnz
push
dec
in
jne
into
lds
in
sbb
mov
ret
pop
cmp
mov
sbb
int
lahf
int
mov
mov
jmp
test
sbb
jb
ljmp
rcr
lahf
add
rorl
inc
pop
push
xor
mov
in
add
andl
in
and
dec
xor
or
jne
lock
pop
movsb
inc
xor
jae
add
in
push
adc
or
xchg
mov
jecxz
cmp
mov
cmp
popa
sub
xchg
and
jo
xchg
stos
xchg
rol
hlt
js
in
dec
add
fneni(8087
pusha
addr16
jnp
add
pop
sub
insb
arpl
fsubs
fs
out
push
pop
das
outsb
dec
imul
in
repz
add
clc
pop
cmpsb
sbb
lods
mov
mov
mov
and
pop
cmp
js
stc
fisttpl
sbb
pop
cs
jge
das
pop
sub
rclb
ds
xor
sbb
adc
push
movsl
scas
or
cmc
cld
fnstenv
sub
cmp
push
mov
cltd
and
les
outsl
test
jae
into
stos
lock
test
push
in
notb
push
das
imul
xchg
ss
xor
fcompl
cmp
lahf
imul
lods
adcl
fistl
pop
xchg
cmp
add
lret
jb
imul
mov
int3
fucomi
pop
or
sub
outsl
push
fdivs
push
mov
sbb
popa
imul
add
pop
push
stos
or
les
call
in
pop
jmp
and
stos
lds
jp
clc
stos
xor
cmp
add
push
adc
mov
mov
ficoml
dec
mov
or
push
mov
in
ljmp
popa
push
mov
add
test
dec
add
and
xchg
rcll
test
aad
mov
jne
es
aam
dec
lods
inc
hlt
mov
or
scas
sub
push
orl
push
insb
mov
add
cwtl
lock
mov
fdivs
insb
adc
mov
jb
add
fldl
jb
invd
addr16
aaa
jno
push
call
leave
sub
leave
outsb
xchg
adc
pop
xchg
int3
lret
cmp
jne
sub
xchg
push
leave
push
mov
dec
xor
iret
aad
dec
mov
and
dec
push
andl
xor
dec
cwtl
les
or
fs
push
mov
ss
mov
or
cltd
pop
sbb
mov
aaa
jl
outsb
mov
sbb
mov
cwtl
adc
or
jg
jbe
mov
adc
mov
pop
out
lcall
add
pop
push
xchg
or
xor
fstps
jp
lock
or
fists
sbb
xorl
add
sub
mov
scas
jmp
pop
call
ret
cmp
pop
lahf
inc
mov
retw
loop
fwait
mov
push
xchg
adc
cmp
jl
push
cmp
hlt
insb
xchg
bound
int
test
jecxz
mov
add
mov
or
push
stos
enter
adc
mov
or
dec
out
mov
fcomps
pop
out
mov
out
jnp
xlat
push
lret
jmp
inc
pusha
mov
jo
xor
dec
or
leave
fsubr
mov
ss
lahf
sbb
ds
lret
test
inc
dec
mov
or
into
and
fwait
sub
call
dec
sub
mov
mov
jmp
aad
or
adc
sbb
mov
mov
fcompl
test
pop
cwtl
iret
and
cld
pop
push
addr16
sub
lea
fwait
into
jl
mov
xchg
sub
jno
or
movsl
adc
push
push
dec
push
leave
in
ficoml
sbb
xchg
lret
repz
adc
enter
jmp
adc
stos
jmp
flds
test
sbb
pop
mov
adc
mov
cmpsb
mov
fisttpl
adc
jecxz
mov
or
pop
aaa
shr
loop
repz
out
fstpl
jb
movsl
cmc
add
ja
insb
pop
and
or
inc
mov
iret
rorl
imul
push
jb
xor
cmp
push
ret
lods
out
sbb
int
fcompl
shlb
xchg
or
mov
push
pop
retw
shl
mov
add
pop
mov
dec
pop
dec
sahf
in
into
fcoms
pop
sub
hlt
mov
cs
push
pop
inc
imul
push
adc
cmp
xchg
cli
fstps
punpckhwd
add
pop
pop
sbb
jp
lahf
mov
sbb
fcompl
jns
daa
inc
xchg
int3
idivl
aaa
inc
test
into
jecxz
cltd
movsl
xchg
mov
aad
lret
dec
cmp
sti
loop
std
jecxz
ret
fidivl
jbe
sbb
arpl
orb
mov
lcall
leave
mov
nop
xchg
call
pop
push
orl
mov
or
std
clc
jo
add
and
pop
fistps
push
mov
dec
xor
cltd
dec
cmpsb
test
jecxz
mov
mov
es
movsl
mov
dec
fistps
dec
test
and
testl
and
xchg
cmp
adc
xchg
fstpt
scas
out
loope
out
or
mov
jle
in
mov
and
mov
dec
repz
and
sbb
pop
jp
adc
call
xchg
cli
dec
das
mov
shl
pop
mov
scas
push
xor
clc
xchg
mov
cmp
into
data16
and
ret
mov
shrl
mov
xor
test
mov
jno
aam
push
xchg
adc
mov
xchg
pop
sarl
add
aad
in
rclb
add
pop
or
dec
mov
adc
ret
aas
cmpsb
sub
ss
mov
and
mov
lods
lcall
mov
xor
jecxz
dec
mov
cs
cmpsl
xor
add
pop
pushf
push
sti
sbb
add
dec
jmp
movsb
lcall
mov
sbb
or
out
js
scas
scas
bound
jno
jb
xchg
js
int
mov
and
fcomi
je
push
dec
cwtl
inc
int3
mov
push
negb
inc
push
subb
mov
mov
jae
outsb
adcb
out
sahf
add
lea
shlb
add
aam
mov
dec
daa
in
xchg
pop
aas
sti
mov
cli
sbb
ljmp
mov
mov
in
loope
in
pop
push
sbb
inc
pop
jge
inc
scas
stos
scas
scas
dec
popf
xchg
lock
enter
in
sub
lret
pop
xchg
nop
push
inc
or
and
cwtl
iret
push
popf
push
out
gs
or
pop
jae
mov
pop
gs
rcrl
not
mov
shrb
jae
leave
inc
and
mov
ja
in
sub
mov
pop
jne
aad
xor
call
fwait
xlat
dec
lcall
ret
subb
insb
scas
xor
dec
jae
push
dec
out
das
and
mov
adcl
icebp
adcl
xor
mov
add
aaa
mov
dec
jae
cltd
sub
ret
lods
xor
dec
dec
sub
out
xor
mov
cmp
sbb
outsb
fiaddl
mov
cmpsl
pop
out
andl
cs
daa
imul
notb
hlt
sarb
lods
pop
mov
pop
hlt
loopne
push
mov
fldl
mov
inc
xchg
sti
repnz
dec
cmp
decb
mov
lock
arpl
mov
sti
add
orl
cwtl
sahf
sbb
pop
pop
push
dec
lods
sub
sbb
mov
pop
mov
arpl
adc
cltd
adc
xor
and
cmc
ret
into
ljmp
ret
mov
jecxz
jbe
and
and
lods
int3
xchg
dec
dec
push
cmp
in
dec
jo
and
bnd
mov
sbb
fs
dec
push
push
sbb
js
mov
xchg
adc
push
adc
jp
and
shrb
insl
outsb
fs
ret
adc
sub
inc
fdivs
cmp
and
test
push
xchg
inc
mov
xor
dec
stos
outsb
mov
shll
dec
fldl
dec
push
aam
xchg
xor
inc
sbb
and
jne
adc
cwtl
psllw
mov
lahf
stos
es
cmpsl
pop
lcall
jmp
fimull
lods
xlat
fcomps
push
insl
mov
push
lret
adc
insb
test
insb
push
popa
push
cmp
pop
add
in
cld
jle
jae
xor
mov
mov
jae
sub
daa
mov
mov
sbb
mov
es
pushf
adc
pop
or
shrb
das
mov
pusha
clc
pop
outsl
iret
fstl
jg
ds
cli
mov
call
imulb
insb
ja
and
inc
xor
fstl
std
outsb
inc
lret
rcl
jl
dec
jo
repnz
jge
dec
or
enter
movsl
lea
sub
pop
push
enter
jp
out
jg
cmp
push
mov
xchg
ja
jo
inc
int
pop
sbb
push
push
adc
mov
mov
inc
scas
inc
icebp
testb
add
jo
pop
sbb
fdiv
push
fsubrs
mov
repz
mov
mov
mov
in
nop
pop
xchg
inc
pop
sahf
inc
xchg
popw
call
sub
dec
iret
sti
sar
mov
jmp
push
ret
scas
lret
mov
push
nop
and
fsubs
and
sahf
loopne
stos
push
repz
pop
fmul
leave
fwait
ljmp
xchg
addr16
outsb
xchg
sbb
and
inc
fdivrs
inc
icebp
push
add
xchg
lahf
test
pop
xchg
ret
sti
in
add
ret
mov
insl
push
test
adc
dec
push
in
data16
sbb
dec
pop
fstpt
and
mov
dec
inc
pop
loopne
push
dec
fwait
ja
pop
jns
adc
popa
mull
pop
or
or
inc
pop
mov
outsl
lods
pop
pop
xor
sub
int
xchg
dec
xchg
mov
pop
inc
inc
inc
mov
jns
push
mov
popf
pop
push
ret
es
xchg
mov
leave
out
xchg
aaa
jb
jno
test
jmp
pop
jnp
and
push
fneni(8087
cmc
iret
in
or
cmp
fidivrl
hlt
push
xor
cmp
lahf
mov
fdivrl
mov
ret
rolb
sti
stos
test
xchg
xchg
jae
int3
pcmpgtb
pop
xlat
inc
out
mov
dec
cltd
pushl
cs
aad
add
insb
cmp
xor
mov
in
iret
lods
sbb
mov
nop
out
loopne
adc
stc
cwtl
jo
push
leave
hlt
pop
mov
fwait
mov
fsubl
sbb
or
push
xchg
cmc
add
jno
jbe
jp
scas
cmpsb
stos
fistps
ficoml
mov
adc
pop
add
push
call
push
mov
rcl
mov
aaa
cmp
add
sbb
mov
xor
aam
fistps
inc
mov
jmp
pop
cmp
and
pop
cmp
andl
loope
jno
inc
mov
sub
push
push
test
insb
mov
mov
sub
add
cld
pop
jbe
out
out
stos
fidivrl
icebp
in
incb
jo
cmpsl
imul
jne
aaa
cld
mov
jecxz
imul
sub
pop
pop
and
cwtl
mov
xchg
and
loope
xchg
leave
ds
repnz
fwait
push
loope
inc
adc
mov
lcall
movsb
and
mov
cmp
lods
jge
lea
mov
mov
mov
cmp
and
lods
mov
xchg
mov
jbe
sti
push
and
icebp
sub
mov
cmp
adc
or
aaa
add
stos
lret
or
jnp
pushf
sti
mov
scas
push
adc
outsl
fdivl
stos
loope
cmp
sbb
sub
push
and
cltd
adc
adc
xor
add
xor
pusha
addl
jmp
imul
sbb
shlb
hlt
jnp
push
in
popf
int
mov
dec
in
sub
mov
leave
push
pop
push
push
adcl
jmp
xchg
xor
and
jae
push
aad
mov
and
je
jecxz
data16
jns
xchg
mov
push
loop
push
mov
int3
jge
mov
jecxz
dec
mov
sub
stos
cs
push
sbb
in
insl
cmpsb
int3
xor
bound
push
test
mov
in
rorl
mov
mov
inc
mov
pop
in
popa
sub
xor
or
sbb
cmp
cmp
in
cmc
cli
push
add
in
lock
mov
xchg
jo
adc
fsubrs
cld
sub
pop
jno
mov
pusha
mov
push
pop
dec
ljmp
test
hlt
mov
xor
sbb
xor
mov
insl
cmpsl
cmp
into
mov
lds
rdtsc
jecxz
inc
cmc
xchg
fildll
sub
xchg
jle
cmp
mov
mov
push
in
cli
test
aad
mov
jns
les
push
incl
cmp
dec
push
outsb
mov
push
xor
cli
fdivrs
addb
or
loope
mov
jns
and
inc
shlb
sub
imul
popf
xor
clc
adc
cld
mov
push
mov
xlat
sub
fcmovu
adc
pushf
and
mov
mov
mov
aam
mov
pop
popf
pop
mov
xchg
pushf
enter
pushf
outsl
adc
imul
mov
push
fwait
adc
pushf
inc
inc
adc
mov
cmp
in
inc
iret
fwait
push
faddl
stos
movsb
int3
adc
lds
and
es
sub
mov
test
mov
mov
aam
mov
fcompl
mov
movb
xchg
cmc
ljmp
xlat
cmpsl
test
std
movsb
and
cmp
cmpsl
xor
in
mov
insl
mov
add
pop
inc
push
daa
dec
std
adc
inc
mov
xchg
sub
mov
nop
shrb
adc
loop
and
jno
push
leave
es
pop
push
xchg
fisubrl
dec
mov
xchg
cld
sbb
jns
xor
in
mov
test
ljmp
fistpl
dec
xor
lret
notb
add
xchg
jbe
std
outsb
inc
sbb
jle
daa
jecxz
sub
adc
sbb
fisttpl
les
xchg
xchg
push
inc
loop
push
cmp
jle
jb
sbb
or
movsb
imul
arpl
cli
push
pop
adcl
cmp
push
cmp
jbe
jmp
int
or
outsb
sub
cmp
mov
lock
insb
pop
lret
lret
ja
orb
xlat
or
lods
in
stos
adc
adc
cmp
xchg
dec
mov
jno
out
xchg
sti
insb
notb
jns
ret
or
addr16
jmp
fcmovbe
test
leave
arpl
mov
insl
cltd
jle
push
adc
dec
cmpsl
mov
cmp
je
fadds
outsb
push
cmpsl
cmp
push
std
adc
sub
mov
xlat
lret
lock
mov
ret
push
icebp
cmp
inc
dec
icebp
sti
adc
nop
mov
repz
push
mov
pop
jns
les
nop
dec
loopne
cli
xor
or
xor
nop
push
push
pop
gs
mov
das
inc
ljmp
jle
add
int
adc
inc
inc
vpunpckhdq
push
arpl
xlat
outsl
sub
dec
pop
xchg
sub
lock
mov
jge
ror
pop
inc
test
sub
test
mov
pop
xchg
dec
adc
insl
insl
and
out
xorb
mov
fwait
int
ja
push
insl
push
mov
push
lods
pop
push
jmp
arpl
pop
cmp
dec
push
sar
out
mov
sub
sbb
mov
inc
jns
sbb
inc
fcompl
icebp
jae
sbb
and
and
test
out
and
dec
movsb
enter
mov
rorb
into
add
sbb
in
out
in
jg
add
shlb
pusha
and
pop
jae
jo
jle
jl
arpl
mov
lcall
sti
and
and
xor
in
fsubs
aas
sbb
mov
ret
popl
lret
scas
cld
lods
loope
push
add
imulb
sbb
lds
sbb
ficoml
xor
xor
push
rolb
mov
cmp
add
jmp
mov
sub
sub
pop
cmp
and
int3
bound
lods
stos
out
or
bound
scas
inc
and
call
push
bound
inc
arpl
fwait
inc
sarl
pusha
sub
loope
gs
nop
mov
xor
aad
push
sbb
push
fists
or
cmp
stc
gs
aam
ficoml
repz
dec
mov
mov
sbb
sbb
cmp
and
repz
test
insb
sbb
push
jbe
cltd
xor
out
mov
mov
add
xor
dec
fnstsw
inc
adc
test
popf
xchg
mov
inc
pop
sbb
cwtl
popa
mov
lret
add
sbb
inc
lahf
mov
les
jge
iret
gs
adc
mov
pop
push
insl
in
lods
adc
test
in
mov
jns
or
add
jecxz
sti
les
movsl
adc
and
rcrl
inc
in
lret
cmp
jl
dec
leave
mov
popa
inc
pop
rolb
mov
sub
and
hlt
loop
mov
dec
mov
sbb
test
jb
movb
pop
mov
sbb
sbb
mov
jo
inc
jmp
leave
orl
loop
sbbb
loope
add
or
push
frndint
ret
pop
in
out
aas
repnz
popa
movsb
fwait
sar
jle
out
sbb
mov
and
sub
pop
andb
cmp
push
mov
sbb
mov
cmc
jnp
inc
mov
pop
or
push
call
cmpsb
sbb
push
or
jbe
enter
imul
add
es
sbb
jbe
enter
xchg
rol
push
add
sahf
fidivrl
insb
hlt
dec
mov
and
cltd
test
push
pushf
gs
jne
lods
push
into
icebp
mov
jae
mov
repnz
je
sbb
xchg
xchg
shrb
outsl
mov
xor
cli
into
mov
mov
pmaxsw
xor
sub
paddusw
ljmp
xor
decl
das
in
xor
outsl
ja
dec
push
inc
push
push
xor
push
xlat
pusha
fimuls
cmpsl
and
popf
and
shll
sub
add
jo
cmpsb
inc
xchg
mov
adcl
jbe
sti
imul
pusha
xchg
imul
subl
popf
xchg
jo
jno
das
ja
cmpb
cmp
dec
pushf
fcmovu
call
out
xor
sub
or
in
es
mov
f2xm1
ss
decb
xor
push
add
fcom
mov
and
call
pop
pop
movsl
rol
inc
mov
out
mov
adc
andb
fstps
lods
subl
xchg
stc
sub
and
sbb
enter
push
jle
and
enter
cwtl
loop
insl
jle,pn
sbb
dec
add
pop
adcb
and
sbb
movsl
in
mov
cld
divb
adc
pop
cmp
lods
stos
or
push
or
out
orb
pop
lods
or
cmc
fcomps
ret
leave
sar
push
jae
or
js
inc
dec
sbb
sarb
push
jnp
xchg
push
cmp
or
lock
mov
dec
add
decl
jno
jo
and
in
dec
cmp
shll
lea
jp
xchg
sbb
js
orl
xchg
sub
jle
sub
pushf
sti
mov
enter
mov
sarl
fdivl
xchg
dec
adc
pop
push
inc
out
icebp
pushf
pop
test
mov
sti
mov
cld
cmp
mov
aad
aaa
ds
dec
jne
push
in
cwtl
jg
inc
out
dec
adc
sbb
sbbl
ret
lret
adc
lcall
sbb
fucomi
fcom
pop
push
std
popf
outsl
movsl
push
mov
loop
mov
movsl
jno
xlat
lds
xchg
xor
test
fmuls
adc
adc
and
in
faddl
stc
jae
fsts
popf
inc
mov
leave
fst
mov
pop
jnp
popf
lock
jle
push
hlt
dec
sbb
cs
xor
pop
lock
daa
push
frstor
or
rclb
cmp
dec
or
outsb
lods
xor
icebp
push
call
in
xor
jbe
cmp
hlt
xchg
mov
dec
in
jnp
sbb
push
mov
cmp
popf
lret
fists
push
push
mov
add
xchg
or
daa
pushf
add
push
xor
hlt
mov
or
out
cli
sbb
dec
cltd
jecxz
push
xlat
nop
xchg
mov
cmp
int3
lea
repz
in
and
add
insb
jmp
fcomp
bound
add
lock
imul
rorl
hlt
subb
mov
aas
pop
test
sbb
adc
mov
lret
mov
mov
or
sbb
rorl
fisubl
adc
cmova
pushf
fwait
jg
repz
and
sub
dec
arpl
aas
orl
jne
test
cmp
jp
inc
lods
enter
mov
test
sbb
mov
mov
leave
xor
outsb
setbe
test
pop
imull
pop
inc
movsb
sbb
scas
sub
into
arpl
cmpl
movsb
je
jge
pop
pop
movsl
jo
loop
das
fdivrs
mov
fistpl
cwtl
or
outsb
push
mov
movsb
jbe
add
ljmp
push
cmc
xchg
mov
pop
jb
dec
in
gs
mov
enter
dec
test
xchg
pop
cmp
lahf
dec
cmp
int
cmpsb
mov
sub
inc
cli
jecxz
sub
clc
push
aad
addb
loopew
cvtps2pd
bound
jne
dec
call
rep
sbb
ss
and
hlt
pop
jb
es
bound
ret
sbbl
xor
sub
add
jmp
stos
test
ljmp
pop
xchg
xor
ficomps
or
in
jge
imul
push
sub
sbb
aam
fdivs
gs
addr16
ds
adc
pop
in
sbb
xchg
adcl
jbe
outsl
shll
lock
popf
ja
sbb
cli
pop
int
pushf
push
push
and
in
push
fsubr
bound
loope
push
cmp
mov
mov
add
adc
xchg
cmp
das
lahf
rol
shrl
mov
das
pop
xor
cwtl
fdivp
idivb
cmpsb
jmp
stos
jge
adc
ret
xor
push
fwait
adc
bound
fcompl
xchg
testb
xchg
adc
pop
sarl
fcompl
and
add
inc
ljmp
addb
outsb
test
hlt
pop
ficompl
cmp
fldt
xor
add
pop
push
nop
jne,pn
inc
daa
cli
mov
inc
jl
xlat
roll
sub
imul
dec
push
cmpsb
aas
cltd
inc
jmp
add
cmp
pop
gs
je
and
ja
sub
or
movsb
sti
sub
inc
frstor
push
aad
jp
inc
mov
xchg
sar
sub
push
in
xor
push
mov
fdivr
and
call
pop
enter
leave
or
add
jo
mov
in
mov
stos
or
in
xacquire
orb
ss
test
add
movsb
mov
out
adc
lods
gs
inc
outsl
mov
mov
xor
ficomps
fmull
sbb
dec
mov
mov
jl
insb
mov
xorb
bound
or
lahf
cmp
ret
cmc
and
lcall
inc
jg
arpl
xchg
daa
scas
cmpsl
sbb
jl
gs
dec
stos
sub
mov
faddl
shlb
jne
mov
shlb
cwtl
lods
lock
andb
mov
push
repnz
fimuls
mov
int
sub
xchg
or
push
fdivrl
mov
push
scas
jbe
dec
dec
aad
pop
sbb
out
subl
pop
jg
loop
pushf
leave
fadd
mov
cmp
movsb
add
ss
ja
adc
pushaw
stos
pop
pop
jbe
pusha
addr16
jmp
mov
test
shll
mov
sbb
pop
cmp
lds
loope
scas
cmpsb
xorb
fbstp
clc
push
jecxz
push
in
test
pop
sub
enter
push
jbe
data16
or
fwait
rcll
iret
xchg
or
cmp
cmp
and
fst
pop
insl
aas
dec
mov
sub
lds
nop
push
push
nop
mov
push
mov
pop
pusha
and
idivl
adc
imul
cmp
cmp
xchg
pushf
add
sti
outsb
inc
jo
stos
leave
adc
movl
xchg
and
xlat
mov
stc
pop
jns
cmp
rorb
lahf
stos
es
test
jae
jnp
mov
xchg
mov
jg
and
fcompl
mov
outsb
mov
test
sbb
mov
cmpsb
mov
xor
pusha
mov
cli
fistl
and
add
rcll
jecxz
adc
nop
out
test
call
xlat
jno
rorl
jecxz
outsb
push
and
repz
cmpsl
sub
in
sarl
jb
jmp
orl
fwait
jo
jge
lods
aad
int
shll
sbb
in
cmpsb
mov
hlt
pop
inc
pop
mov
out
in
lds
inc
push
adc
mov
cs
jl
cmp
inc
int
enter
mov
xchg
jl
stc
cmp
out
inc
mov
or
xlat
or
mov
dec
push
test
cmpsb
or
rol
and
sub
mov
jp
xchg
push
cs
pop
scas
fdivrp
in
xor
xor
cmc
jmp
es
in
sarl
leave
jb
cmpsb
dec
ds
inc
push
mov
sub
shr
push
les
test
push
cmpb
mov
icebp
xor
ret
aad
ljmp
push
cmp
sub
cmpsl
xchg
and
dec
cmpsl
sahf
vcomiss
lds
and
jae
outsb
mov
mov
cmp
scas
pop
jecxz
dec
push
xchg
div
and
imul
push
adcl
inc
sub
ja
outsb
pop
in
imul
cmovnp
test
xor
mov
push
mov
pop
fsubs
ss
or
xchg
test
xchg
addr16
cwtl
sarb
lock
call
adc
enter
insl
test
int
gs
push
fists
sbb
add
sub
push
mov
xchg
sarl
mov
test
lds
jbe
fists
mov
mov
fs
xlat
mov
shrl
cmpb
fisubl
jb
jo
addr16
out
sbb
sub
push
test
mov
out
push
xchg
icebp
cmp
sar
mul
psubusw
xchg
jbe
rep
les
inc
lret
sbb
lret
aam
cltd
xchg
movsb
mov
xchg
and
push
jne
js
mov
sub
insl
jecxz
adc
mov
adc
sub
dec
aam
xor
dec
repz
adc
dec
cmpsb
mov
addr16
icebp
lods
jo
cs
add
scas
xchg
push
mov
std
xchg
push
loope
sub
popl
xchg
out
and
das
mov
pop
or
xchg
jae
mov
mov
mov
mov
mov
lret
in
scas
repz
pop
push
ret
data16
ds
adc
jg
or
call
jno
out
insl
stos
std
adc
mov
jb
jb
scas
jnp
sbb
mull
loop
cwtl
cmp
mov
pop
mov
fcomps
cltd
ljmp
mov
ror
lock
icebp
cmova
mov
cs
cmp
popa
xlat
cmp
xchg
adc
into
push
jns
adc
sbb
negl
and
lcall
add
lea
scas
or
daa
test
push
stos
mov
arpl
js
pop
je
hlt
dec
aas
cmp
lock
mov
outsl
add
pop
mov
sbb
sub
cmpb
in
movsb
jae
popf
adc
or
in
adc
xchg
out
sub
xor
mov
movsb
inc
cmp
or
fdivl
mov
or
cltd
in
push
xchg
imul
and
cmp
ror
inc
sti
inc
out
jnp
daa
xlat
cmp
lret
sub
rep
scas
mov
push
inc
mov
push
ret
es
nop
jecxz
xor
push
dec
outsb
data16
imul
sub
test
sub
into
jge
je
add
leave
mov
mov
ja
call
or
aas
adc
pop
pop
outsl
scas
out
cltd
sarb
push
shlb
es
pushl
cld
adc
outsl
add
push
mov
pushf
xor
sbb
popa
dec
pop
mulps
loop
sbb
adc
scas
dec
fwait
add
pop
inc
mov
mov
push
or
repz
dec
data16
les
ljmp
xchg
xor
mov
int3
jb
dec
lret
js
cmpl
pop
test
pop
cmpsb
inc
xchg
shlb
jl
pop
inc
pop
loop
icebp
loope
icebp
jmp
mov
xchg
outsb
xlat
loop
data16
mov
push
mov
roll
cmp
and
lret
mov
addr16
arpl
movsb
jecxz
and
cmpb
ss
pop
cmp
jno
repz
sbb
mov
dec
cli
xchg
cld
dec
cmpsb
add
xchg
je
pop
pop
lods
jae
xor
xor
aad
outsl
jns
sub
shl
or
push
int3
and
ja
mov
push
int3
sti
mov
shrl
mov
bound
sub
sub
mov
test
vmread
fistpl
pop
imul
leave
fsubs
push
imul
les
or
das
sbb
jne
sbb
imul
pop
xor
lods
addr16
and
push
and
xchg
ret
jno
push
mov
mov
mov
xor
sti
jb
push
dec
xlat
nop
pop
add
mov
cmc
inc
iret
xchg
es
dec
repz
dec
push
mov
jno
adc
sahf
mov
test
xchg
xlat
mov
loope
mov
outsl
and
je
enter
ds
push
cwtl
mov
mov
cmp
daa
adc
adcl
cmc
pop
into
rcrb
lods
mov
sbb
in
mov
push
cmp
pop
xchg
jp
push
push
inc
cmc
pop
int3
pushf
imul
sbb
push
das
xor
and
pusha
mov
jbe
inc
xchg
cs
xor
je
or
sbb
dec
xchg
or
rorb
cli
nop
lods
pop
outsl
aam
arpl
cmpsb
imul
sub
cmpsb
pop
push
xchg
aam
mov
sar
push
es
iret
loop
das
push
jmp
aad
scas
adc
outsb
setbe
inc
mov
cmc
or
cmp
or
sub
inc
mov
dec
cmp
inc
mov
sbb
inc
jle
aam
dec
push
in
int3
mov
adc
cmp
lahf
dec
or
movsb
mov
aam
in
in
ds
push
jns
xor
cwtl
xor
mov
data16
sub
outsb
add
loop
sbb
jb
inc
nop
or
data16
mov
mov
lds
pop
jbe
add
pop
or
in
lds
mov
sub
inc
mov
mov
subl
pop
cmp
std
popf
mov
mov
sbbl
pop
das
scas
jle
adc
orl
fdivrs
sbb
sahf
fadds
or
loopne
cmpsb
pop
aas
outsl
xchg
notb
inc
sub
in
cmp
adcb
jns
add
pop
testl
sbb
jp
cwtl
andl
fs
dec
arpl
dec
dec
shr
lahf
or
pop
and
iret
jae
push
fucomi
xor
insl
mov
cli
repnz
leave
fstps
add
mov
lahf
in
rolb
jl
push
jb
and
and
mov
and
outsl
in
mov
mov
test
leave
insb
sti
jge
xchg
out
mov
mov
xchg
je
arpl
mov
sub
and
addr16
shll
dec
mov
mov
jl
enter
test
xor
dec
push
insb
mov
ljmp
dec
push
in
or
pop
loope
fwait
mov
insb
fs
lods
jecxz
aad
int
movsl
sbb
testl
jne
imul
inc
xor
mov
in
push
mov
mov
push
out
inc
loopne
push
jg
jns
imul
shr
xchg
push
pop
or
xchg
and
aam
pop
xor
out
fnsave
dec
and
aad
xchg
adc
jp
mov
jecxz
ret
test
lock
std
dec
mov
jbe
mov
es
je
mov
sbb
mov
jo
subl
mov
dec
lcall
mov
xor
rcrb
fstl
mov
repz
pop
mov
popa
cmp
sbb
push
stos
loope
into
test
movsb
pop
int3
push
xchg
in
jp
outsl
and
std
out
rclb
sbb
push
xor
dec
cmp
or
lods
testl
and
arpl
jb
call
dec
aaa
sub
into
push
das
xchg
inc
jns
xor
call
fistpl
ljmp
xchg
sbb
stos
xchg
cmpsl
aam
xor
sbb
daa
sbb
les
mov
mov
lods
and
xor
pop
and
and
andl
int
inc
dec
cmp
mov
or
out
test
mov
pop
adc
aam
jae
inc
pop
fdivl
adc
dec
mov
cld
inc
lcall
cltd
loope
add
pop
cmp
movsb
out
jle
push
aaa
cmp
lret
roll
inc
mov
rol
shll
lahf
popf
xor
sbb
push
shlb
shlb
jb
pop
jno
sub
xor
aad
mov
xor
dec
lods
mov
mov
sti
call
je
dec
clc
cld
aas
ds
test
push
xchg
jnp
xor
or
iret
mov
dec
push
xor
xor
dec
jns
loope
cmp
aas
mov
or
fs
adc
fsubs
std
xor
orb
dec
jg
mov
xchg
aas
testb
push
pop
adc
imul
mov
xchg
fdivrs
daa
loop
fnstsw
xchg
mov
adc
rorb
mov
subb
nop
loop
into
pop
ret
mov
negl
repnz
mov
movsl
push
test
pop
popf
imul
add
imul
and
jmp
mov
fidivrs
lcall
push
fmul
pop
push
out
push
repnz
lds
scas
pushf
rclb
imul
test
es
iret
cmp
sub
xor
loop
dec
push
imul
daa
cmp
test
mov
inc
adc
outsb
push
pusha
and
into
test
sub
xor
in
jl
enter
es
lds
adc
cmp
fwait
sbb
rcll
xor
fbstp
push
je
lock
bound
dec
aam
sarl
pushf
dec
in
pop
roll
or
pop
sbb
outsl
imul
daa
mov
jae
shr
push
aaa
and
inc
pop
leave
sbb
xchg
scas
sbb
rcll
mov
ror
xor
dec
test
inc
jmp
jl
notl
pop
ficompl
jnp
mov
inc
out
insl
xchg
jb
popf
inc
into
mov
lahf
and
int
push
stc
fldcw
jne
test
lret
call
jge
out
dec
fsts
sbb
cmpsb
mov
cmp
lods
ret
sbb
push
mov
push
push
or
xchg
cmpsl
leave
pop
mov
inc
jecxz
inc
pop
mov
jo
pop
lret
scas
jo
mov
or
pop
jmp
nop
xchg
cwtl
rorb
aas
lret
xchg
push
xchg
xchg
pop
pop
fnstcw
push
xor
push
ss
pop
or
in
in
loop
pop
shll
es
inc
lcall
xorb
or
or
shll
mov
mov
xor
negb
cli
mov
aas
dec
fmul
insl
mov
jns
and
sbb
adc
cmp
sbb
jo
pusha
jne
daa
xchg
shrb
into
jp
push
shll
mov
or
ss
sub
mov
and
xchg
dec
testb
fldcw
jle
lock
jp
add
xchg
mov
jl
and
sub
dec
cltd
mov
mov
and
not
jb
loopne
data16
cmp
xor
out
popa
jne
lahf
adc
mov
leave
scas
inc
icebp
sbb
mov
mov
repz
add
dec
jle
xchg
in
lcall
fs
clc
bound
cmp
scas
je
xchg
mov
outsb
add
les
jae
jl
les
lahf
adc
cmp
pop
hlt
mov
icebp
test
sbb
inc
inc
cmc
rcrb
adc
pop
mov
dec
icebp
cmp
aas
jns
int3
mov
call
in
sub
mov
leave
in
inc
xchg
add
xlat
push
pop
xchg
hlt
push
insl
hlt
xchg
cltd
pop
mov
mov
test
xchg
adc
lret
lods
clc
popa
mov
inc
mov
repnz
shrb
pop
xchg
xchg
xchg
cmp
gs
and
fiadds
adc
fnsave
push
lea
mov
mulb
dec
sbb
shlb
repz
push
mov
jbe
fwait
cmp
mov
imul
pushf
xchg
stos
loopne
mov
adc
sahf
ss
stos
cmpsl
mov
lret
adc
out
cwtl
add
dec
sub
in
iret
xor
in
dec
aad
lock
jae
jge
test
jne
jle
das
add
jmp
test
and
xchg
sti
mov
push
jns
inc
cmp
les
mov
mov
mov
inc
jae
out
add
outsl
mov
sti
testl
js
sub
mov
out
and
xchg
outsb
and
or
sub
mov
add
js
dec
mov
hlt
push
in
push
hlt
mov
hlt
scas
xor
mov
rolb
xchg
lcall
xor
iret
sub
hlt
sub
sub
clc
pop
in
test
sub
loop
push
lods
or
decb
jp
out
lds
hlt
inc
lock
jg
std
stos
fwait
lods
popa
mov
mov
icebp
xchg
xchg
je
leave
js
std
mov
lcall
cmpsl
pop
outsb
pop
pop
pop
outsb
cld
in
or
inc
leave
mov
xor
cltd
cld
in
dec
inc
mov
pop
pop
fs
arpl
fdivs
jecxz
pop
imul
pop
xor
adc
rcrl
add
cmp
nop
movsl
cmp
mov
enter
daa
adc
stos
lahf
adc
cmpsb
or
dec
in
fcoms
push
sub
sti
cld
out
xchg
pop
xor
frstor
push
xor
in
push
or
mov
push
dec
sub
mov
aaa
pushf
or
cmc
clc
push
into
mov
pushf
xchg
cltd
and
dec
or
mov
es
inc
adc
jae
jbe
push
sarl
in
sub
push
jne
add
sbb
loop
jle
jno
pushf
mov
and
sub
nop
jg
insb
stos
aad
xor
fs
or
pop
clc
cmp
pop
lret
cmp
inc
sti
xor
lret
int3
jge
subb
cs
jl
les
test
xchg
push
out
jne
mov
mov
stc
rcll
jo
mov
mov
dec
orb
inc
add
add
pop
inc
popf
mov
filds
pop
fildll
xor
out
jo
cmp
xchg
pop
insb
adc
push
popf
loopne
sbb
push
xlat
cli
xor
cmp
xor
mov
arpl
dec
rcl
jecxz
setbe
sarl
mov
jp
hlt
lea
jnp,pn
test
or
mov
xor
xchg
fcoml
sahf
dec
pop
mov
gs
loop
push
fmuls
sub
aad
jl
xor
fldenv
icebp
cmp
cld
xor
cs
in
lock
or
sbb
rclb
out
sub
in
scas
fwait
pop
lock
insb
ret
sub
loope
ret
sub
add
lret
inc
add
outsl
stos
or
adc
test
rorl
cmc
popl
mov
jmp
movsl
xchg
cltd
and
scas
mov
js
mov
aam
dec
jecxz
cltd
dec
sub
dec
adc
push
sbb
cltd
jmp
xor
fwait
pop
int
pop
outsl
push
cmp
dec
pop
cmp
outsl
jle
mov
fimull
sub
xchg
aad
fdivrl
xlat
adc
insl
sbb
adc
arpl
lea
pop
mov
stos
sub
lds
movsl
push
clc
sbb
mov
clc
ficoml
fucomi
pop
mov
mov
clc
loope
test
sarb
out
sahf
lea
jb
mov
out
lods
cs
cld
pmuludq
xchg
jne
arpl
stc
sbb
mov
out
fidivs
adc
pop
hlt
fistpl
jae
adc
stos
in
jecxz
mov
or
sbb
jmp
sub
test
mov
push
je
xchg
cli
sbb
icebp
mov
mov
addr16
shll
test
pop
movsl
movsl
xor
push
in
repz
cltd
dec
lds
test
hlt
add
ja
cmp
enter
insl
js
xchg
sahf
push
push
ss
loop
ja
pop
fcomip
mov
sbb
and
xor
mov
pop
or
mov
pop
and
movsb
rclb
xchg
call
inc
cltd
jbe
repz
push
jg,pt
enter
push
sbb
in
sbb
jmp
mov
shrb
cmpb
jns
jo
test
xor
add
lods
inc
pop
fdivl
fwait
dec
push
jmp
mov
push
sbb
add
cmp
add
scas
xor
stc
sub
jnp
in
add
push
pusha
les
mov
in
sub
es
arpl
and
mov
daa
out
cwtl
repz
fwait
std
xchg
inc
out
iret
add
fnop
or
add
nop
mov
push
cmp
jnp
leave
enter
push
mov
ret
cs
insb
lret
jnp
inc
adc
dec
fucomp
adcl
mov
cmp
in
pop
pop
sub
sbb
xor
rolb
fnstenv
pop
dec
xchg
mov
xchg
mov
mov
hlt
or
ja
fchs
mov
insb
cmpsl
jns
mov
inc
xor
mov
repz
aaa
xor
mov
hlt
cmp
mov
rcll
ret
jbe
ss
out
xchg
xchg
test
add
loop
lahf
lret
xor
jne
outsl
stos
mov
aaa
push
dec
pop
leave
rcl
inc
outsl
mov
mov
jecxz
stc
fcomps
aas
push
cmp
testl
or
mov
add
push
pop
je
xlat
and
sbb
orl
pusha
addr16
jb
push
mov
xor
jl
push
decb
flds
dec
test
inc
nop
popa
xchg
cmp
sub
fwait
pusha
pushf
jb
sbb
test
mov
cmpsb
fwait
lock
push
lock
incb
pop
mov
adc
dec
mov
test
movsl
pop
mov
repnz
mov
aaa
adc
add
addr16
cld
dec
or
aam
dec
xchg
insl
sbb
cmpsl
cltd
jno
jl
aam
or
insb
mov
mov
mov
mov
inc
add
pusha
mov
mov
add
or
pop
dec
ret
cld
lahf
fcmovb
cmp
dec
mov
dec
mov
loop
cmpsb
testb
mov
push
loopne
inc
mov
cmc
fcoms
imul
push
fdivrp
push
fildl
out
fildl
das
xor
push
push
mov
imul
test
rcr
xchg
push
push
xchg
shrb
rol
ret
into
mov
clc
fcmovnb
outsl
int3
push
je
pop
jae
aas
sub
aam
imul
or
adc
push
sbb
sbb
lods
mov
test
repnz
iret
and
aam
xor
sub
xor
xchg
adcl
insb
xorl
je
jo
mov
add
lcall
push
lahf
lock
dec
push
push
loope
pop
faddp
ss
xor
sub
scas
lret
rolb
ret
xor
cld
adc
cld
lahf
or
mov
mov
xchg
fnstenv
mov
pop
ficoml
pop
jnp
lahf
daa
xchg
mov
cmp
push
jns
mov
les
pop
in
adc
sub
mov
scas
lods
push
add
cltd
xor
stos
sbb
add
add
jle
js
repnz
jne
dec
fstpl
movsb
fisubs
sbb
cmc
pop
clc
push
in
jne
test
es
mov
dec
mov
imul
scas
push
and
cli
scas
inc
mov
aam
test
push
xor
sti
ret
xor
mov
test
mov
xchg
cli
fincstp
insl
sub
xor
inc
mov
sbb
mov
aas
fdivrs
xchg
aad
fwait
jl
dec
jne
pop
loop
addb
jl
dec
out
rcrb
adc
and
or
or
push
push
jne
push
jg
dec
mov
xor
jl
adc
insb
pushf
xchg
mov
hlt
sub
sub
adcl
push
mov
test
mov
leave
and
int
fadds
popa
shlb
xor
jae
mov
fisubrs
addr16
jnp
sbb
mov
dec
pop
xchg
sbb
es
ds
xchg
leave
mov
dec
out
subb
mov
add
mov
pop
cwtl
sbb
iret
lods
and
fcoml
and
ss
stc
mov
add
in
jne
inc
inc
and
pop
xor
int3
addl
or
cmpb
ret
imul
sbb
mov
int
mov
mov
pmulhuw
stos
pop
xchg
ss
cmp
int3
xorl
dec
in
pusha
inc
add
ja
xchg
iret
jbe
jno
gs
push
jb
ja
push
mov
add
stc
sub
adc
or
pop
or
sub
mov
adc
mov
ud2
pop
pop
outsl
sub
pop
jp
jle
outsl
xor
inc
sbb
mov
pop
mov
frstor
jle
das
cmpsb
dec
jmp
leave
mov
fidivrs
mov
xor
mov
add
fdivrs
pop
arpl
jne
data16
xor
fisubl
enter
inc
pusha
jl
data16
je
mov
loope
in
enter
dec
push
mov
lret
mov
int3
pop
cmp
fdivrl
xor
mov
out
dec
add
in
not
test
xor
int
push
push
mov
in
sbb
iret
lret
stc
imul
and
ja
push
mov
mov
lret
or
add
sub
sbbb
pop
in
pop
mov
mov
jns
iret
repz
aad
bound
mov
mov
jae
test
mov
or
mov
ret
mov
pop
jne
mov
shrb
sbbb
push
mov
pop
dec
sbb
fcmovb
dec
js
test
stos
dec
mov
shlb
aad
ljmp
pop
xchg
sub
and
int3
inc
add
fstpl
mov
ret
out
push
pusha
push
es
out
lcall
xchg
dec
addr16
xchg
shll
sbb
mov
xor
ret
sbb
xor
or
std
out
cmpsb
fdivl
sub
add
imul
es
scas
lods
aad
in
popf
xchg
add
jne
loop
into
cmp
cmp
push
aad
notl
shrl
rorb
fidivrs
adc
mov
int3
mov
popa
call
xor
insl
xchg
aad
sbb
bound
cmp
sub
scas
int3
jmp
out
or
lahf
sub
jp
sub
stos
icebp
mov
or
pop
xchg
push
addl
jmp
fimuls
subl
push
ja
out
mov
cmp
iret
aad
imul
testl
add
pop
cmpsl
ja
jle
popa
popa
adc
push
add
int
cltd
or
mov
xor
pop
xchg
jns
cmp
cmpsb
xchg
jmp
daa
es
jl
lods
jno
lahf
test
imull
mov
stos
pop
xchg
das
lahf
rcl
xchg
sbb
mov
arpl
les
pop
in
inc
es
jb
xchg
scas
cmp
test
sbb
adc
mov
aad
jp
mov
bound
scas
aad
mov
scas
or
rorb
pushf
jg
jno
test
fstl
xor
mov
mov
insb
cmpsl
loope
aas
fs
test
add
jg
add
ficoml
xchg
decb
aam
fyl2xp1
orb
adc
mov
inc
mov
aam
jbe
xor
cmpsb
outsl
leave
dec
inc
inc
inc
cmp
pop
mov
cmp
push
arpl
ljmp
jge
lea
int3
lods
cmpsb
jg
shrb
insl
dec
pushf
jle
les
je
mov
mov
jge
or
inc
stos
xchg
pop
repnz
jno
sbb
add
aam
pusha
jbe
sbbl
jns
sbb
mov
iret
popf
lods
pop
mov
aas
sub
popa
adc
mov
mov
test
ja
fwait
popf
cmc
jge
scas
xchg
push
aaa
aad
cmp
fstl
aas
cmp
out
outsb
leave
or
loopne
add
in
cmp
les
call
jno
mov
push
dec
jae
repnz
stos
js
imul
sbb
push
sbb
sub
dec
sbb
sahf
sbb
push
dec
jl
pusha
lret
arpl
enter
add
pushf
mov
xchg
or
and
jb
rcll
xor
xor
lahf
cmp
pusha
push
jae
mov
lods
loope
xor
adc
xor
hlt
jne
mov
movsl
sub
leave
xlat
xor
into
xchg
pusha
stc
dec
mov
xlat
push
cmp
mov
testl
mov
in
cltd
mov
out
test
adc
out
mov
cmp
enter
xchg
ret
in
stos
and
pop
mov
mov
add
xor
cmc
push
std
mov
xchg
push
pop
mov
or
push
pop
sbb
pop
ret
movsl
jle
adc
into
lea
sub
mov
push
icebp
push
sahf
jbe
push
dec
mov
push
add
mov
or
in
or
cs
test
in
repz
push
shll
or
jmp
mov
jg
cmp
dec
pop
iret
ret
mov
mov
clc
or
dec
cmpsb
out
fdivs
fs
xor
mov
xor
sbb
scas
lods
mov
test
popf
divb
add
mov
cmpsb
jle
sbbl
and
gs
adc
jl
mov
les
adc
mov
mov
mov
add
loope
mov
pop
dec
inc
shrb
clc
fwait
movsl
jo
add
jae
cmp
inc
fs
lahf
add
dec
test
bound
pop
mov
lret
stos
fmuls
dec
inc
sar
jl
add
push
dec
push
xor
jb
or
and
bound
ret
clc
dec
mov
pop
and
int3
cmp
pop
and
inc
xchg
sub
sbb
add
xchg
lods
push
or
rorl
bound
inc
mov
int3
mov
sub
loop
mov
cmpb
sbb
cmp
cmp
push
sbb
loop
incb
dec
jbe,pt
mov
adc
out
mov
ret
cmpsl
pop
test
mov
fs
clc
movsb
flds
fists
mov
aaa
adc
movsl
inc
pop
xchg
dec
mov
jp
fsts
sti
fisttpll
and
jo
cmpb
mov
adc
dec
into
sub
sub
push
dec
scas
dec
ja
sbb
lea
pop
adc
andl
mov
gs
pushf
push
lret
int3
fstpl
fcmovbe
jl
and
push
pop
nop
cmc
xor
cmpsl
xor
std
aam
lds
push
mov
sub
push
cmpsl
in
inc
aas
xor
add
or
cmpsl
cli
mull
test
dec
cmp
arpl
and
push
inc
push
insb
mov
negb
movzwl
les
fsubr
addr16
pop
or
mov
test
jne
test
mov
lret
arpl
sbb
es
in
and
mov
scas
sbb
mov
pop
xchg
out
js
dec
mov
rcr
xor
sub
hlt
sub
jge
stc
or
pop
xlat
nop
fsts
inc
jno
mov
fsubrl
jae
dec
cmpsb
mov
push
loop
nop
xchg
push
in
or
inc
jb
lahf
test
aad
pop
pop
cld
xor
and
test
sbb
mov
mov
xchg
ficompl
push
ficoms
adc
add
and
sti
mov
xor
push
ds
xchg
dec
rcl
cli
push
mov
or
pop
decl
xlat
jbe
mov
cld
and
clc
jne
iret
jl
sbb
mov
mov
js
xor
cmp
ret
test
inc
dec
dec
push
mov
or
jbe
xchg
xchg
lahf
inc
xchg
out
loope
add
stc
push
ss
push
nop
call
ret
rcll
mov
je
sub
ret
inc
lds
js
push
aas
mov
out
popf
or
inc
sbb
push
xchg
in
aad
call
into
jae
push
cmpsb
fldl
sbbl
pop
negl
out
jp
mov
imul
mov
or
push
mov
add
cli
cld
xor
mov
in
enter
pop
cwtl
adc
mov
mov
lea
mov
stc
cs
add
mov
mov
pop
push
pop
je
adc
or
aam
mov
imul
mov
cli
push
xchg
testl
mov
lock
mull
add
dec
sub
data16
sbb
cmp
mov
and
and
push
jp
xchg
gs
in
jnp
data16
cwtl
shlb
cli
sarb
lock
jne
cmp
pushf
shlb
mov
fistl
lods
out
xchg
imul
pop
pop
jns
pop
aas
gs
adc
push
stos
jb
dec
leave
out
mov
or
addl
add
aaa
sti
fmul
jle
inc
aas
pop
test
inc
fstps
frstor
pop
mov
mov
and
and
popa
mov
pop
out
mov
and
rcrl
popf
sub
sub
out
subb
mov
fmull
jge
gs
mov
js
sub
cmp
and
xchg
jle
pop
mov
gs
icebp
push
push
enter
cmp
inc
dec
mov
pusha
fsubl
and
ror
xchg
jb
jns
xchg
pop
dec
xchg
shrl
jg
mull
shr
jmp
shrb
pop
pop
cmp
stos
aas
xor
fwait
xor
addr16
inc
add
in
pop
xchg
push
sets
in
inc
jecxz
cmp
push
sub
xchg
sbb
outsl
call
or
popa
std
lods
sbb
insl
xchg
int
rorb
clc
mov
mov
adc
mov
loopne
sub
pop
xor
mov
inc
popa
clc
and
add
lods
sbbb
stos
xor
lret
fcoml
inc
xchg
dec
xor
mov
shl
call
cmp
mulb
in
lds
je
sbb
ja
pop
pop
cmc
mov
xchg
data16
fbstp
cmpsb
ljmp
mov
xor
fstps
jo
add
sub
jl
mov
fs
and
xor
jp
lock
repnz
sbb
mov
push
stos
add
out
mov
cmp
shl
lret
mov
enter
push
inc
adc
rcrl
pushf
imulb
lds
cmp
mov
or
sbb
pusha
pushf
jecxz
mov
sahf
sbb
aad
jg
push
movl
mov
test
fsubrs
int3
push
xchg
popa
sbb
sub
sbb
mov
cld
push
push
inc
and
mov
mov
and
out
and
push
xchg
addr16
out
sbb
xor
and
flds
cmpl
lds
insb
jno
repnz
sub
popw
and
and
jecxz
or
add
cltd
jo
cmpsb
dec
jle
fsubrs
lock
pop
testl
int
addr16
jp
insl
repz
mov
or
sti
mov
fidivrl
mov
lock
lods
out
xlat
push
sub
stc
loopne
stc
mov
inc
fcoml
mov
lock
pushf
je
and
sbb
cmpb
ds
push
test
mov
outsl
in
or
pop
add
dec
jne,pn
push
test
imul
orb
jnp
and
lret
clc
je
shlb
mov
and
mov
cltd
int3
inc
xchg
sub
xchg
push
and
gs
mov
test
in
sbb
dec
jmp
sbb
inc
popf
ficoms
loopne
pusha
addb
adc
notl
mov
pop
mov
ret
insl
xor
lahf
les
es
xlat
cld
push
and
pop
sahf
add
and
mov
out
pop
or
inc
sahf
push
ss
jnp
ds
addb
lods
adc
popf
jo
fsubrp
add
aas
mov
sahf
das
into
lods
cmp
inc
cmp
dec
push
lea
xlat
push
test
cmp
lahf
in
insb
mov
data16
lcall
dec
and
inc
icebp
test
cmp
mov
cmp
mov
pop
or
add
add
inc
orb
pusha
sbb
andb
les
icebp
xor
mov
sbb
in
xor
lahf
enter
fs
jg
lcall
out
adc
push
lods
call
adcl
rorb
imul
ret
andb
dec
shlb
mov
add
mov
and
cltd
pop
out
cmp
or
jb
mov
or
jb
or
shll
imul
lock
ret
mov
cmpsb
lds
scas
ret
loopne
sbb
xor
inc
push
fldl
daa
xorl
xchg
xchg
xchg
and
mov
mov
dec
out
inc
cmc
daa
cmp
imul
xchg
cmpsb
cmp
push
dec
pop
cmpsl
dec
das
test
in
insb
sbb
dec
jg
test
xor
mov
or
xchg
idivl
lret
iret
push
pop
xchg
lds
fisubrs
fwait
push
shlb
cmp
sbb
push
data16
std
insl
dec
mov
push
mov
pop
repz
push
mov
sti
dec
cld
les
push
roll
inc
lods
or
sbb
out
inc
mov
enter
dec
dec
cltd
xchg
pop
inc
fisubrl
test
dec
pop
mov
cmc
lea
sub
loop
jge
mov
je
stos
fsubl
xor
mov
sbb
and
out
arpl
rcll
fisubrl
es
icebp
sub
movl
xor
mov
pop
test
nop
sub
stc
out
ss
call
add
pop
sub
shr
pop
sbb
imul
sub
jecxz
and
mov
mov
sbb
fildll
sti
dec
mov
or
loop
or
push
or
fmuls
inc
in
idiv
xor
xor
xchg
dec
arpl
or
jmp
xchg
cmp
pushf
mov
addr16
push
aas
pop
pop
adc
mov
sub
xlat
gs
jmp
lods
pushw
add
das
in
add
scas
arpl
jo
sub
jecxz
sarl
rolb
rcll
dec
xchg
data16
pop
ljmp
mov
mov
loop,pt
sub
scas
dec
push
or
cmc
ror
sbb
enter
sbb
dec
data16
dec
fadds
jbe
in
mov
loope,pt
fs
jg
sub
adc
icebp
aaa
iret
xlat
jne
xchg
pop
sbb
scas
jecxz
ret
cmp
pop
inc
dec
xchg
and
sbb
pushf
jnp
out
sbb
fwait
pop
inc
sti
push
xchg
pusha
lcall
test
xchg
pop
mov
jne
sbbb
ret
or
mov
cmpsb
mov
jl
xor
iret
push
mov
loopne
hlt
hlt
jbe
push
xchg
push
out
jnp
sbb
in
scas
hlt
movsb
jae
or
ret
push
inc
inc
and
int
cmp
push
scas
mov
ret
subl
push
bnd
xchg
aam
inc
andl
stos
fsubl
dec
aad
imul
inc
pop
adc
insl
inc
scas
fdivs
sbb
xor
jle
inc
sbb
stos
sbb
inc
dec
mov
add
outsl
pop
imul
jp
outsl
push
lcall
or
xor
pop
sarb
lods
sbb
mov
xor
test
es
int3
out
js
xchg
adc
mov
sub
sub
mov
sub
rolb
aaa
cld
sbb
lcall
sub
out
xchg
scas
filds
jge
or
push
das
sbb
and
push
or
and
xor
loopne
mov
xor
loop
mov
jnp
sub
fbld
mov
dec
jmp
popa
xor
add
ljmp
push
aam
jl
popa
leave
mov
sbb
idiv
or
dec
cmp
nop
mov
sahf
cwtl
xchg
add
sbb
aam
and
xor
lds
mov
adc
xor
push
out
xor
lea
jb
inc
scas
inc
fimuls
adc
pop
sbb
mov
inc
into
imul
xor
jle
pop
cltd
dec
jnp
lds
hlt
dec
adc
jge
cmc
std
les
roll
pop
adc
pop
into
lret
jo
divb
and
js
mov
lcall
mov
movb
dec
clc
pop
lahf
out
push
jae
xchg
mov
jp
lea
add
sar
roll
lahf
add
mov
dec
mov
mov
rol
das
les
jns
adc
lcall
pop
out
xor
test
in
sub
lea
xchg
fs
mov
mov
and
add
mov
push
fcoml
xor
sahf
sub
insb
adc
lret
scas
std
inc
and
test
idivl
xlat
dec
jo
dec
dec
shlb
mov
out
dec
inc
jnp
mov
mov
cwtl
jbe
into
hlt
mov
xlat
addl
loopne
lds
aad
xor
pop
sub
mov
adc
mov
mov
dec
inc
rolb
sbb
sub
inc
jae
pop
inc
out
sub
push
fiaddl
xchg
test
jl
mov
and
mov
jb
jg
in
dec
sbb
xor
pop
aam
mov
loopne
dec
movsb
mov
sub
loopne
lods
inc
ret
pop
decl
push
hlt
sub
sbb
pop
dec
dec
jns
call
mov
dec
aam
aad
mov
xor
xchg
sbb
push
jecxz
pushf
in
push
mov
or
lahf
push
in
dec
inc
add
jge
push
mov
test
mov
add
jno
loop
testb
push
jno
xchg
or
nop
testl
xor
in
jo
pushf
xorl
push
add
mov
push
jo
stos
xor
pusha
loop
cmpb
int
scas
xchg
pushf
xchg
push
xchg
jmp
insb
dec
mov
jecxz
les
or
mov
mov
lret
in
jae
mov
xor
repnz
xchg
lcall
or
or
cmpsl
stos
jae
imul
arpl
int3
sbb
mov
out
pop
mov
push
imul
aas
ficoms
scas
mov
mov
insb
dec
imul
adc
cmp
repnz
mov
mov
or
enter
xchg
pop
pusha
inc
adc
mov
jo
pop
sbb
or
pop
test
xor
mov
xor
leave
pusha
sub
movl
out
cmc
dec
push
sbb
adc
jmp
data16
inc
or
push
mov
add
and
push
and
sub
push
lods
push
orb
xor
nop
xchg
dec
mov
loopne
pop
lret
or
inc
test
pop
dec
mov
roll
dec
and
jecxz
and
je
add
jl
clc
pop
scas
mov
les
inc
mov
aam
pop
out
jp
xchg
sbb
loop
in
ss
jl
cmc
jmp
loop
and
inc
push
sti
mov
inc
jg
das
insl
mov
add
jae
add
cmpsb
mov
aam
cmpsl
push
or
inc
int
sbb
test
incb
dec
repnz
addr16
fs
mov
mov
xor
test
in
incl
mov
fcmovbe
mov
sub
jae
cmpsl
jmp
cli
jno
fnstsw
outsb
cmp
push
or
mov
in
dec
inc
cld
lret
test
xchg
pop
sar
out
pop
movsl
sub
icebp
fisttps
addr16
jmp
adc
rorb
sub
cmpsb
mov
and
pop
adc
lahf
lret
out
mov
mov
sub
pop
sub
xor
fists
daa
sub
mov
cld
scas
push
pop
js
pop
cmp
cmc
xchg
cltd
and
xchg
addr16
test
inc
pushf
jle
jo
pop
inc
pop
jmp
sbb
xchg
xchg
push
rcll
push
xchg
sub
mov
dec
cmp
insb
ja
sti
sbb
and
cmpsb
sub
movsl
adc
inc
rclb
cmp
adc
and
mov
out
adc
dec
jns
dec
enter
fisttps
adc
call
dec
or
or
mov
push
shll
test
cmp
das
xor
jge
xor
or
sbb
xchg
sbb
xor
insb
ret
xchg
inc
clc
stos
in
out
jb
pop
jnp
pop
cli
and
jmp
or
mov
jo
lahf
pusha
bound
cmp
sub
scas
scas
rcrb
int3
iret
fistpll
jbe
enter
pop
jge
add
dec
add
repnz
gs
daa
or
outsb
cmpsl
shrl
test
sub
adc
jne
arpl
and
leave
mov
mov
or
out
push
pop
jle
xor
lcall
jge
scas
add
xor
inc
sahf
xchg
pop
push
call
in
jnp
sti
xor
cmp
gs
and
cmpsl
mov
push
inc
dec
test
movsb
xchg
jmp
inc
add
jg
dec
push
test
sub
fwait
jne
pop
adc
loopne
jns
sahf
xchg
pop
add
ss
sbb
mov
ret
mov
xor
loopne
and
push
popl
stos
mov
pop
div
sbb
xor
sbb
dec
mov
mov
and
xor
mov
out
rcrl
imul
mov
data16
inc
xor
ja
push
xchg
or
or
nop
lahf
aaa
pop
push
sub
dec
mov
xor
int
dec
mov
nop
push
jb
sbb
mov
insl
lods
add
push
jo
cmp
pop
sbb
mov
xchg
xor
loope
mov
or
negb
push
and
icebp
ret
daa
mov
push
pop
inc
in
idivb
push
xlat
lods
arpl
adc
push
mov
fsubs
mov
in
and
or
and
cmpsl
lea
nop
sbb
lret
mov
push
xor
or
jae
sbb
dec
fldenv
and
dec
push
addr16
imul
enter
xor
push
scas
xlat
ficoml
adc
cwtl
mov
shrl
popf
arpl
loope
in
jne
xor
cmpsl
data16
hlt
arpl
data16
push
inc
iret
das
aad
inc
xcrypt-ctr
cmpsl
fsts
pop
into
popf
xchg
mov
inc
fidivl
imul
xchg
popa
bound
inc
pop
dec
lock
outsb
xor
insl
dec
mov
adc
into
rcr
shlb
out
xor
xor
xor
mov
push
pop
dec
lahf
in
enter
hlt
jecxz
xchg
inc
fisubrl
adc
in
mov
fisubrl
js
lahf
ds
test
sub
lods
add
out
fisubs
push
repnz
xchg
push
push
das
pop
rclb
lock
sbb
jb
xlat
and
mov
xchg
sbb
sub
pop
mov
rcl
lahf
out
adc
cmc
jb
jmp
cwtl
inc
jbe
cli
es
stos
xor
push
or
mov
dec
and
cmp
push
in
and
push
pusha
add
repnz
outsl
pop
in
xchg
test
or
mov
js
inc
call
imul
icebp
mov
lods
jb
bound
mov
cmp
jle
ret
fisubs
mov
cmpsb
fdiv
cmp
or
fistpll
repnz
js
pop
mov
mov
lods
pop
cmpsb
push
jnp
fmull
inc
in
push
ja
lods
jnp
sub
xor
adc
and
lods
ja
xchg
loopne
cli
stc
mov
shrl
ret
lcall
cmpsl
movsb
xchg
repz
into
xchg
scas
fidivl
fs
sub
inc
insb
bound
cmpsl
pop
testb
cltd
and
mov
adc
add
fwait
test
add
pop
mov
sbb
inc
push
xchg
insb
mov
jmp
cld
lret
xor
mov
dec
cmp
cmp
fdiv
mov
jge
les
ss
lcall
notb
jns
mov
lret
adc
cmpl
sub
leave
pop
jg
bnd
xchg
push
ljmp
xchg
mov
and
xchg
push
xchg
mov
ss
jecxz
clc
sbb
les
xchg
mov
sarl
xor
fildl
pop
dec
adc
and
je
insl
dec
add
jecxz
sahf
xchg
fwait
jge
xlat
or
in
cmc
repz
pop
pushf
outsb
pushf
sub
mov
aaa
add
add
loopne
stos
cli
in
call
mov
mov
push
fidivrs
push
fsubr
dec
pop
cs
divl
xchg
jecxz
push
xor
ljmp
pop
cld
insl
and
loop
mov
jae
mov
xchg
cltd
das
xchg
or
pop
cmpsl
mov
mov
jae
xchg
rcll
pop
movsb
movsb
subl
stos
loope
adc
and
mov
pop
lods
arpl
shrb
clc
lds
pushf
sub
stc
stos
mov
sbb
in
ret
decb
outsl
repnz
jnp
arpl
fcmovbe
mov
aas
lods
pop
xchg
pop
cmp
and
out
and
jb
cmp
stos
xchg
lds
push
ret
stc
std
sub
cld
aas
cmp
pop
lcall
fidivs
push
adc
cmp
repnz
neg
cltd
out
cs
call
mov
lahf
sub
jb
faddl
mov
xchg
add
or
and
adc
adc
mov
jp
es
mov
push
lahf
push
iret
in
push
in
pop
cmpsl
imul
sub
push
shrb
movsl
jnp
mov
enter
in
add
ljmp
in
xchg
js
rcl
in
mov
shl
pop
flds
add
jb
mov
mov
mov
mov
loop
sti
dec
ffree
inc
xlat
stos
popa
push
adcl
das
push
and
pop
xor
movsb
xor
and
jp
pop
inc
inc
clc
dec
xor
movsb
add
or
pop
or
gs
fldl
xor
or
aam
pop
jl
xor
inc
sub
push
daa
icebp
mov
and
mov
pop
daa
xor
cmpsl
push
int3
or
inc
cwtl
leave
fwait
pusha
add
std
aam
cmp
add
mov
inc
insb
fists
outsb
adc
sbb
cmp
das
inc
add
sub
aas
lret
mov
sub
lods
pop
pusha
cmp
push
sbb
popl
jp
out
add
setae
idiv
shlb
int
ret
popf
std
bound
rolb
mov
lea
mov
mov
aam
aas
inc
iret
add
jmp
dec
movsb
xchg
inc
mov
stos
test
cmpl
test
pop
xchg
mov
ret
stos
mov
sarl
sub
or
and
mov
inc
pop
push
pop
push
pop
mov
and
dec
jae
imulb
cmp
jae
shl
mov
mov
pop
pop
cld
psrlq
std
fisubrl
and
or
cmp
test
dec
lahf
add
cmc
xchg
pop
test
xor
outsb
mov
push
mov
scas
into
cld
jecxz
lret
jecxz
call
push
test
push
nop
fisubs
push
fs
das
in
cmp
mov
add
lods
or
faddp
fidivrl
push
add
pop
xor
dec
hlt
hlt
add
jae
sti
adc
push
scas
jmp
push
iret
jo
fdivl
add
mov
test
or
xchg
sub
jnp
xchg
arpl
adc
inc
into
cmp
into
xor
test
jg
adc
icebp
mov
dec
mov
or
xchg
imul
sbb
jp
pop
mov
and
sbb
cltd
jb
sarb
into
sub
pushl
push
ds
pushf
mov
push
dec
dec
xor
mov
aaa
imul
jnp
test
jp
cli
mov
and
stos
xchg
enter
inc
lock
adc
lods
cmp
xlat
loop,pt
jo
in
and
lahf
imul
sahf
mov
shrb
fldpi
loope
cltd
rolb
shlb
daa
out
aaa
lods
sub
jl
test
shrb
xchg
adc
sub
movsl
mov
sbb
xor
call
add
mov
mov
lcall
lods
push
inc
rorb
mov
aaa
mov
lock
xor
fiadds
sahf
lods
cmp
sbb
sub
inc
js
jp
pop
leave
add
add
ficoms
pop
mov
mov
adcl
addb
pop
loop
sbb
div
in
cmp
dec
pop
stos
out
int3
mov
pop
xor
subb
mov
popa
fstpl
pushf
std
mov
hlt
pop
push
mov
inc
and
es
mull
pop
stos
icebp
cmp
xor
jne
sarl
mov
or
mov
jae
in
mov
push
mov
jge
lea
outsl
push
fidivs
adc
pop
mov
out
or
movsb
mov
pushf
bound
outsb
testl
xchg
push
out
addl
addr16
arpl
lahf
movsb
stc
insl
dec
and
out
dec
add
jle
sbb
cwtl
jnp
shlb
sub
add
push
jl
cltd
inc
dec
ja
idiv
pop
mov
xchg
in
xor
lods
mov
mov
ret
jle
repnz
cwtl
out
push
push
test
js
pop
and
ljmp
js
push
dec
mov
in
mov
ja
out
data16
insb
or
cmp
int
mov
cld
fmulp
inc
pop
or
fsubl
sbb
dec
pop
add
xchg
add
test
push
jge
ljmp
inc
jne
cwtl
or
cmp
ret
aad
xorb
pop
repz
pop
das
mov
stc
loope
dec
push
sub
mov
sub
sarb
iret
int3
cli
and
stc
addr16
jl
test
dec
ss
roll
cmpsb
insb
scas
pusha
popf
sbb
das
insl
mov
leave
lcall
rcrl
push
cmp
mov
adc
aaa
push
mov
jo
sbb
dec
loop
lds
xor
lret
js
int3
data16
adc
inc
lea
fcompl
enter
loop
mov
insl
mov
nop
sbb
push
iret
cmovo
roll
andb
stos
test
xor
dec
push
xor
adc
and
dec
mov
dec
rcl
packssdw
mov
adc
repz
mov
mov
out
mov
mov
jmp
jp
faddp
adc
pop
xchg
into
lcall
in
push
cmp
clc
cmpsb
cmpl
xchg
mov
xchg
out
cli
ret
dec
loope
add
mov
ljmp
jnp
mov
or
out
pusha
pop
loop
sub
scas
mov
mov
mov
mov
test
les
rorl
outsl
into
loop
jmp
jg
int3
push
and
cmp
xor
inc
or
jbe
cmp
out
bound
outsl
or
inc
pop
sbb
bnd
test
clc
adc
int
outsb
in
stc
stos
inc
cmpsb
lock
push
mov
mov
fidivs
mov
cli
dec
and
xor
test
cmpsl
mov
cmp
scas
lret
nop
xor
les
cmp
dec
ret
xlat
iret
xchg
je
scas
xchg
sti
test
fs
xor
jl
cli
push
repnz
repnz
fld
push
jmp
popf
pop
sbb
call
cmp
adc
inc
inc
lea
loope
stos
xchg
xor
sub
and
insl
sub
stos
push
and
cld
jbe
fdivs
push
and
push
jnp
add
add
imul
cmp
mov
aad
test
dec
cmp
fbld
push
xor
xor
inc
mov
jmp
sub
fxch
push
push
cs
fcoms
sub
neg
jmp
out
push
fstpl
sub
or
inc
cmp
sbb
bound
repz
cmp
cmpsl
fstpt
test
int
mov
sub
lea
inc
stos
and
out
insl
xchg
adc
dec
rcr
imulb
jg
dec
popa
pop
cmp
aad
int
mov
inc
sub
dec
dec
cmpsb
into
lods
ljmp
loope
and
lods
cmp
mov
or
call
pop
xor
clc
test
fsubrs
and
hlt
push
arpl
add
lret
ja
push
mov
fsubs
repnz
hlt
and
dec
cmp
mov
xlat
mov
xor
mov
out
aaa
jne
stos
cwtl
adc
inc
push
xor
mov
loop
out
and
xor
dec
and
cli
popa
test
add
fcmovnbe
sbb
sbb
pusha
jecxz
xor
or
push
jge
pop
mov
sbb
push
inc
fstpl
cmc
dec
xor
dec
xlat
sbb
ljmp
and
and
mov
daa
xlat
xchg
add
js
outsl
daa
dec
pop
mov
sub
mov
out
adc
push
lahf
mov
bound
push
sub
sar
mov
jge
cmp
add
jg
lret
dec
mov
mov
lret
loope
mov
lds
push
jg
or
mov
addl
xor
ror
dec
imul
cltd
pop
jo
loopne
xor
je
lods
dec
add
sub
jns
out
jne
xor
adc
xchg
adc
outsb
mov
inc
popa
aas
and
movsb
into
in
push
or
les
insb
adc
xor
jns
arpl
and
and
mov
subb
push
cmpsl
add
insl
xchg
mov
neg
mov
push
and
push
scas
jae
fbstp
push
mov
lods
push
push
nop
pop
aaa
xor
mov
and
popa
fiaddl
adc
ja
outsl
add
push
xchg
or
movsl
mov
mov
fisttpl
les
mov
add
movsb
dec
ja
lahf
movsb
lods
push
or
pop
scas
push
mov
sub
inc
sbb
push
out
mov
out
hlt
dec
mov
iret
jmp
mov
add
cmp
jne
shl
or
sbbl
movsl
inc
testb
in
in
clc
pushf
jp
ds
dec
adc
or
es
dec
cmp
mov
inc
lret
loop
out
lock
jg
xchg
xchg
xlat
pop
inc
inc
jle
das
out
lcall
cmpb
sub
cmpsl
or
pop
cmp
ljmp
xor
ret
mov
rclb
sbb
xchg
lods
outsl
lea
outsb
push
jl
xor
insl
cmp
mov
mov
rorl
xor
shll
adc
in
xor
ret
dec
sar
sub
repz
pop
mov
add
mov
mov
xor
jecxz
jecxz
aas
out
push
or
xor
mov
addr16
pop
lret
mov
jp
in
lahf
xor
and
or
aam
dec
mov
lret
test
outsb
scas
inc
insb
mov
push
testl
push
add
mov
into
jg
jg
lods
mov
mov
pop
inc
dec
fdivr
lds
nop
data16
test
push
lock
ss
sar
mov
nop
and
jns
push
ja
sub
mov
jecxz
fiaddl
in
in
adc
xor
push
pushl
cmc
sub
fidivrs
fidivrs
test
xor
in
movsb
popl
adc
add
lahf
mov
cmp
mov
je
and
shll
in
pusha
xor
std
xor
pop
and
sahf
lea
mov
push
jb
jns
pop
fs
aaa
jge
lock
arpl
mov
gs
pop
stos
sbb
stc
adc
inc
shlb
jbe
pop
mov
jbe
aam
pushf
outsb
out
push
jae
scas
cltd
xorb
stc
inc
mov
loopne,pt
push
stos
sub
sub
mov
pusha
loop
add
sub
cmp
sbb
fwait
xchg
repnz
and
addr16
sbb
push
mov
into
add
mov
sbb
or
jno
movsb
loop
pop
adc
mov
out
xchg
push
add
stos
jae
cli
mov
push
mov
daa
push
or
inc
inc
push
push
aad
mov
scas
xor
aaa
xchg
lcall
mov
pop
adc
out
sub
imul
sbb
mov
cmp
lock
xchg
mov
mov
inc
out
cltd
xchg
in
add
je
lods
int3
adc
lods
jge
enter
jmp
test
hlt
mov
aam
in
mov
push
push
popa
in
or
push
loope
xor
in
pop
mov
sbb
js
scas
aad
push
pop
andl
jb
and
int3
mov
and
nop
stc
and
popf
jbe
shlb
mov
into
loopne
jb
test
popa
mov
cmp
rcl
pop
rcrl
in
mov
push
call
ret
int
add
xchg
and
xchg
push
xchg
add
stos
inc
push
mov
shrl
pop
cld
mov
mov
inc
pop
mov
cmp
adc
in
dec
in
xchg
fdivrl
mov
call
in
jp
loope
pop
ficompl
inc
addb
cmp
cmpsb
and
or
cmp
adc
jnp
test
adc
mov
dec
sub
insb
inc
mov
mov
mov
cwtl
dec
mov
testl
loope
add
in
hlt
mov
jnp
mov
call
daa
mov
int
or
push
fstpt
aad
cwtl
ret
inc
mov
cmp
fdivrl
dec
push
or
add
inc
cs
or
gs
sahf
and
add
dec
xchg
gs
mov
cmp
je
inc
imul
mov
sbb
cmp
mov
cmp
mov
fsubp
addr16
cs
jns
ja
je
xor
cs
dec
dec
pop
sub
sahf
or
bnd
enter
add
lret
inc
je
inc
xchg
mov
sub
and
push
mov
pop
xchg
lods
jp
in
mov
push
jle
sub
ret
xchg
mov
pop
stos
les
and
mov
enter
out
repz
in
scas
mov
daa
mov
xlat
inc
sub
or
stos
lds
mov
ja
sub
push
das
fnstsw
xchg
int
mov
adc
xchg
jmp
mov
push
setp
fldenv
jno
inc
mov
scas
sti
push
mov
enter
daa
pop
cld
pop
out
es
cs
inc
fldenv
add
out
xchg
out
cmc
js
fcmovu
push
push
push
pop
enter
je
xchg
add
out
inc
jnp
push
sahf
mov
cmp
orl
dec
imul
jle
scas
dec
out
adc
ret
and
std
shll
xchg
push
aad
jns
and
loop
fsts
jno
les
les
push
scas
xor
lret
or
fwait
push
das
imul
and
mov
lea
xchg
mov
lods
mov
jae
cs
aad
jmp
pushf
and
pop
fbld
dec
xchg
push
jb
cmpsb
add
stc
sub
fmuls
or
in
inc
insl
xchg
xor
leave
das
xor
sub
flds
ret
mov
sbb
ja
pop
fs
xorl
dec
out
mov
mov
xchg
mov
mov
mov
lock
cld
fsubs
lret
push
push
xor
mov
rorl
adcl
lcall
and
lahf
pop
nop
inc
and
scas
mov
scas
loop
aas
sbb
loope
jecxz
cli
fimuls
sbb
test
je
xor
and
fmuls
xor
icebp
jg
clc
dec
rcll
push
sub
mov
iret
cmp
inc
fsubrl
push
daa
lds
shl
outsb
or
push
dec
dec
pop
loope
insl
test
roll
add
push
cmpsl
jmp
repnz
dec
and
mov
in
dec
out
or
add
xor
cmp
js
xchg
mov
pop
aam
pusha
xchg
fdivrp
adc
mov
repnz
daa
mov
jb
fmull
inc
mov
nop
insb
cmp
xchg
fisttpl
jb
shlb
fstpl
adc
xor
lods
mov
xor
pop
jb
pusha
stos
pop
ror
jbe
lock
xor
repz
mov
cmp
xchg
jg
push
notb
xor
dec
jge
jns
sti
inc
dec
repz
sbb
push
adc
mov
push
clc
mov
add
jo
push
out
adcl
mov
inc
test
inc
mov
xorb
jne
std
push
push
sbb
je
add
scas
idivb
mov
fs
xlat
xor
jo
jnp
leave
xchg
sub
push
test
or
inc
xor
pop
sbb
popf
jmp
mov
lcall
aad
das
pusha
xor
outsb
mov
inc
inc
aam
xchg
arpl
jns
adc
popf
imul
xchg
fcmovne
fcomps
std
mov
lcall
mov
sub
mov
clc
mov
into
mov
mov
into
aas
sbb
mov
movsl
test
ja
cmp
jb
push
lock
pop
mov
cld
repz
ficompl
pop
leave
bound
fwait
and
inc
adc
popa
xchg
lods
push
cmpxchg
mov
pop
jg
std
mov
in
sub
stos
test
cmpsb
xchg
cmp
data16
dec
imul
int3
notl
mov
mov
cmpsb
push
arpl
xchg
add
pop
ss
lret
push
xchg
repz
aad
ret
and
lahf
mov
insl
mov
xchg
or
pop
jmp
arpl
lret
push
lret
cmp
lcall
push
pop
in
mov
add
ret
es
xor
js
pop
mov
test
jmp
mul
xor
inc
adc
rcr
pop
sbbb
mov
push
bound
cwtl
sub
cmp
jmp
push
pop
sub
mov
ljmp
rcrl
sarl
ljmp
out
lcall
fcomps
sub
je
xorl
push
flds
xchg
pop
ficoml
sub
movsb
pop
dec
out
daa
dec
xor
dec
dec
popf
sub
mov
lahf
and
icebp
mov
jle
inc
test
shrb
repz
in
fadds
dec
ret
cmpsb
cmp
xchg
popa
mov
push
mov
lret
insb
add
mov
outsl
push
pop
lods
or
stos
je
pop
addr16
inc
sub
jne
cltd
dec
adc
ja
adc
sbb
ret
or
push
mov
push
enter
sub
cmp
add
mov
cltd
jae
mov
es
or
jo
mov
int
cmp
test
loope
cmp
dec
jb
in
add
mov
pop
sbb
dec
icebp
xor
add
sub
or
fiadds
pushl
mov
fsubrs
xor
stc
rol
and
push
mov
push
xchg
and
ljmp
add
inc
shll
test
cmp
pop
sbb
les
dec
sub
adc
mov
push
pop
hlt
push
xchg
mov
dec
cwtl
notl
mov
prefetch
jbe
mov
push
in
enter
push
mov
ljmp
outsb
and
sbb
xor
push
scas
pop
xchg
jge
rolb
in
push
sub
es
sub
push
outsb
inc
push
cmp
not
jle
test
mov
push
pop
jmp
xor
jno
jne
inc
mov
aas
or
ret
lods
lret
int
push
push
clc
inc
push
jg
push
popf
sbb
aad
mov
ja
cmp
add
cmp
push
inc
outsb
int3
testb
mov
push
sub
aaa
jmp
xor
mov
xchg
dec
addr16
jg
sbb
dec
dec
movsb
mov
in
and
lahf
push
fistps
imul
bound
pop
insb
mov
mov
iret
fmull
dec
scas
out
fstps
mov
adc
fwait
sbb
leave
dec
daa
xor
shl
or
xor
lcall
popf
sbb
pop
loope
mov
data16
mov
push
push
push
out
sbb
jge
pop
frstor
sub
insb
jno
xor
sbb
xchg
daa
ja
mov
dec
mov
je
jno
mov
add
xchg
push
mov
call
mov
add
xor
fwait
stos
dec
jno
enter
je
jo
ss
dec
sbb
nop
test
xchg
aas
jecxz
aas
fmul
fdivs
cltd
push
pop
gs
fnstenv
jecxz
les
pop
pop
ficomps
adc
jmp
bswap
mov
mov
ror
icebp
mov
repz
enter
cmpb
sub
or
cmpsl
or
popa
or
call
push
daa
xchg
loopne
mov
or
mov
pop
icebp
rcrl
test
mov
cmc
adc
test
dec
out
aaa
xchg
sbb
lahf
lods
je
lret
fsubrl
dec
cltd
or
cli
lcall
add
mul
dec
lret
pop
js
adc
add
lcall
xchg
jb
inc
sarb
in
lcall
or
and
xor
test
test
aad
pop
jl
stc
js
subl
sub
loop
push
mov
nop
xor
repnz
std
and
mov
iret
xlat
push
sub
cmp
cli
mov
daa
insl
add
and
clc
mov
and
and
mov
fisubl
adc
mov
pop
push
mov
jecxz
es
int3
mov
pop
test
inc
test
xor
jge
stc
int
movsl
jbe
xor
jg
cmp
or
mov
lds
int
mov
mov
lods
aam
adc
das
movsb
jecxz
and
dec
jecxz
cmpsl
xor
aas
mov
fs
and
sbb
ss
sbb
idivl
cmp
mov
or
enter
push
mov
imul
fsubr
rorl
dec
decb
push
aam
and
scas
inc
mov
push
roll
loope
cltd
addr16
jmp
fldenv
dec
mov
js
insl
jbe
adc
pusha
mov
push
pop
orb
fs
insl
xor
shll
cmp
movsb
sbb
test
mulps
add
arpl
mov
inc
imulb
pop
ret
lods
dec
sbb
dec
jecxz
cmc
test
jl
rorb
js
sbb
jmp
push
dec
fimuls
cwtl
jns
int
bound
dec
fs
lcall
loop
push
pop
cs
xchg
clc
lods
inc
shll
test
sub
push
pop
mov
push
or
mov
imul
adc
add
xchg
fcmovnu
pop
add
aam
cmp
adc
and
sti
xchg
push
je
add
or
add
out
sahf
dec
pop
stos
inc
pushf
push
call
test
pop
and
paddusb
mov
cli
xchg
sti
mov
movsl
scas
mov
cmp
mov
out
cs
dec
xor
je
sbb
subl
outsl
mov
ja
enter
outsb
inc
test
xchg
dec
loope
inc
or
cltd
xor
test
lds
jns
mov
xor
add
dec
das
pusha
add
mov
mov
sar
daa
fisttpll
sbb
adc
es
loop
add
sub
iret
shrl
push
jnp
add
ret
push
adc
mov
and
push
mov
cmp
jbe
dec
test
pop
movsl
outsl
outsb
es
add
lods
jmp
and
sti
xchg
das
sbbl
in
or
or
fmuls
push
das
add
call
mov
cmpsl
flds
mov
imulb
rorl
lea
daa
ficompl
popa
jge
push
iret
or
int
ja
dec
cmp
adc
aam
lods
xchg
jg
cmp
mov
mov
jl
pop
test
lods
cwtl
lahf
rorb
cmpsl
xor
dec
inc
push
cltd
mov
mov
call
and
dec
mov
mov
ds
les
daa
xchg
out
mov
ljmp
arpl
push
pushf
sub
adc
jl
in
outsl
mov
test
dec
enter
pushf
jnp
mov
nop
xchg
cwtl
lcall
or
adc
mov
inc
inc
fcoms
outsl
mov
inc
push
mov
stc
fmuls
sahf
jbe
iret
mov
mov
sbb
stos
dec
pop
jmp
cli
out
push
dec
jg
sub
aad
add
js
inc
jae
jmp
enter
and
cmp
jge
jmp
mov
xor
lcall
in
mov
mov
inc
jp
mov
sti
call
popa
jno
sub
fs
add
push
mov
sub
in
fistps
ljmpw
or
cltd
pop
jns
jmp
sub
or
mov
sbb
lods
fld
cmc
jae
movsb
jp
lret
mov
push
mov
pand
mov
in
movsb
loop
stos
fs
dec
iret
fs
addr16
pop
mov
cs
cmp
ljmp
jne,pt
and
jbe
out
mov
out
adc
cld
stc
xchg
push
cli
ljmp
jge
sub
mov
cmpsb
insl
push
sti
das
fwait
pop
add
mov
xchg
sbb
cmp
ret
and
in
mov
ret
ret
jns
adc
dec
pop
cmp
dec
add
add
xchg
call
cmpsl
mov
fcomp
jg
push
bswap
dec
dec
xchg
lods
movsl
adc
cmp
or
hlt
cwtl
sbb
in
dec
loope
ja
lahf
jle
push
fstps
add
mov
cs
out
call
xchg
mov
pop
cld
in
inc
xchg
push
and
mov
sub
outsl
popf
cmpsl
mov
in
cmp
addb
out
or
aas
sarl
push
les
or
les
das
sub
lret
pop
pusha
xchg
enter
mov
cmc
aam
dec
popf
lret
sbb
call
sub
xlat
es
adc
pop
jae
icebp
add
mov
xorb
jmp
iret
jle
pop
mov
imul
cli
jns
or
xor
lods
jae
rorl
xchg
xor
mov
jg
clc
xor
jbe
ror
pop
mov
sbb
outsl
sub
push
insb
pop
pop
addr16
mov
and
jno
mov
cmc
mov
add
xchg
popa
mov
cmpsl
fxch
sarl
push
sub
ds
adc
xchg
pop
inc
cli
cli
test
push
xlat
add
lcall
sahf
sbb
ds
rcll
add
mov
sbb
jne
and
mov
inc
scas
out
jnp
xor
and
shll
inc
add
cld
lods
adc
cld
push
je
dec
aam
mov
loop
int
inc
jle
mov
in
pop
pushf
out
mov
xlat
xchg
out
sarl
shrb
fstps
cmp
out
sbb
call
test
icebp
mov
rorb
lea
and
xor
dec
dec
repz
pop
shl
push
or
mov
imul
mov
inc
cmpl
rol
test
adc
add
pop
lock
or
cmp
push
and
nop
outsl
sti
stos
jbe
cli
lret
stc
in
insb
out
test
push
out
and
jne
bound
sbb
sub
hlt
xor
subl
adc
inc
cli
popa
shlb
or
sub
mov
cmp
les
inc
mov
lahf
repz
inc
jp
adc
cmpsl
lret
scas
dec
lret
movsl
adc
cli
loop
pop
push
dec
jnp
pop
or
or
iret
test
icebp
dec
mov
xor
mov
mov
push
clc
sub
je
sub
inc
loope
dec
xor
or
iret
sub
aas
fisubrs
stc
fsubrs
dec
sbb
int3
shll
out
xchg
aad
out
and
sbb
repz
xlat
push
pusha
popa
push
mov
and
and
imul
mov
mov
inc
out
test
pop
add
testb
and
jmp
aam
mov
enter
pusha
dec
xor
stc
nop
mov
sub
loop
cmp
das
in
rorb
je
mov
fstpl
fwait
jecxz
jg
cmc
jb
inc
xlat
dec
cwtl
lret
mov
adc
jp
jne
fistpll
jbe
mov
jae
mov
lods
dec
mov
in
adc
shll
popa
nop
and
sbb
lods
out
and
addr16
inc
sub
mull
push
jbe
pop
les
ljmp
lret
sub
les
cmc
mov
arpl
idivl
inc
or
fidivrl
xchg
jne
push
les
out
dec
and
bound
pop
pop
aam
xchg
cmp
popf
ret
popa
and
es
in
pop
sub
loopne
ret
jne
mov
sub
not
outsb
push
int3
jle
movsl
adc
int
mov
shrl
cli
lock
xor
andl
mov
push
cmpsb
xchg
dec
nop
sbb
lods
nop
fdiv
pop
push
nop
movsb
xor
xorl
rorb
movsl
jb
xlat
cmp
or
jg
sbb
jp
and
loop
adc
push
fstpt
inc
repz
je
scas
enter
rcrl
aad
repnz
pusha
ror
ljmp
push
scas
xor
jo
mov
lea
sub
aam
mov
fcomi
jp
call
dec
rclb
in
clc
inc
fisttpll
ret
xor
push
pop
jnp
sub
mov
inc
xchg
jns
outsl
push
repz
cwtl
aaa
jbe
sbb
and
add
in
jl
pop
iret
pop
imul
insl
push
nop
pusha
cmp
cmc
das
mov
inc
pop
data16
sbb
mov
sub
mov
into
add
scas
aas
sahf
fstp
movsb
push
shlb
add
fstl
enter
popa
and
mov
es
les
add
xor
cltd
mov
mov
push
hlt
mov
sar
adc
fidivrl
scas
inc
int3
mov
std
mov
push
xorps
bound
sbb
adc
sbb
int
mov
cmp
shll
pop
sbb
lea
enter
stos
movsb
mov
adcb
mov
xchg
pop
aam
or
mov
cli
mov
inc
inc
inc
jb
mov
push
outsl
add
es
or
addl
mov
xor
jbe
cmp
mov
movsb
cld
sbb
add
dec
inc
orl
ja
sbb
mov
jo
adc
xchg
lods
fsts
push
test
and
sbb
fisubrl
fs
into
pop
shrl
sub
int
push
jmp
mov
ds
pusha
sbb
xchg
adc
mov
out
pop
imull
or
xchg
ja
xchg
sbb
gs
outsb
repnz
or
or
xchg
stos
mov
or
les
and
jl
leave
and
cmp
sbb
into
sbb
xchg
add
pop
out
fldcw
jmp
xchg
jg
or
cld
dec
mov
fsts
dec
sbb
jge
inc
jge
lds
ffreep
jns
mov
hlt
add
daa
shll
add
loopne
sti
cmp
pop
stos
ficoms
data16
xor
jg
or
sub
fcoms
push
jns
and
fdivr
pop
mov
cmp
gs
push
dec
inc
or
mov
xchg
xchg
jg
bound
mov
mov
repz
insb
mov
jl
pop
inc
je
ds
push
or
pop
add
cld
xchg
mov
stos
int3
test
sub
cmc
decb
ja
stos
aad
xor
shl
inc
sbb
lock
fucom
pop
push
sub
mov
mov
mov
orb
xchg
lret
pop
jno
ss
lahf
mov
mov
jae
into
mov
and
inc
stos
push
insb
fwait
mov
jg,pn
dec
sbb
dec
jmp
mov
mov
and
pop
push
je
out
adc
xor
pop
in
out
inc
pop
jnp
leave
popa
js
add
jno
movsl
jp
pop
fisubrs
ljmp
inc
xlat
jle
roll
rclb
ret
cld
daa
adc
adc
mov
stc
mov
out
aaa
popa
jo
push
lret
arpl
push
xchg
les
mov
jl
jg
sbb
sub
sbbb
in
lods
adc
loope
stc
dec
or
cwtl
adc
dec
add
adc
and
ds
repz
test
movsb
fldl
out
dec
jp
lret
notb
pop
push
stos
mov
fstpt
jns
ficoms
hlt
jno
add
inc
dec
int3
mov
stc
xor
fnstsw
lock
pop
mov
out
mov
imul
mov
repz
fs
sbb
cmpsl
cmp
dec
xchg
rolb
daa
inc
scas
stos
pushf
fstpl
xchg
inc
cwtl
loopne,pt
loopne
repnz
pop
in
loop
inc
insl
pop
stc
sub
clc
ja
sbb
xorps
xchg
cld
dec
mov
adc
mov
outsb
imul
and
ds
xchg
neg
jp
mov
or
lea
mov
adc
pop
dec
mov
ds
cmpsb
addl
out
dec
jae
addr16
sbbl
mov
in
add
test
push
lods
lock
arpl
lea
jo
pop
mov
mov
outsl
loope
pop
int
pop
cld
or
dec
fmuls
leave
test
inc
mov
enter
mov
pop
inc
sub
and
mov
pusha
xor
mov
outsb
jmp
xchg
shl
iret
loopne
adc
and
cmp
out
mov
inc
cmp
cwtl
nop
iret
addl
int
in
loop
jp
jp
ljmp
lea
mov
out
lock
push
mull
mov
orl
clc
sbb
cmp
popf
pop
out
cmp
ficoms
xchg
mov
mov
inc
inc
outsb
sbb
out
pop
imul
inc
cltd
hlt
fsub
out
pop
sub
dec
cmp
inc
push
fidivs
inc
jae
push
jle,pn
dec
add
xorb
jns
push
pop
clc
divl
jns
mov
pop
je
cmp
pop
and
nop
lcall
inc
into
mov
xchg
mov
rol
and
add
mov
cmp
fidivs
xchg
push
insl
mov
fwait
je
js
inc
jnp
imul
jmp
push
sbb
scas
push
notl
enter
insb
lret
xchg
add
or
lods
call
fs
push
addr16
pop
test
sbb
fdivp
xchg
fimuls
repnz
jae
or
push
jno
mov
sub
and
jb
xor
movb
outsb
pop
iret
in
and
jae
cmp
std
jno
push
pop
or
cmpsl
insl
incb
mov
cmpsl
pop
add
cld
insl
shll
cld
loop
clc
mov
mov
insl
xor
movsb
pop
xor
ds
shlb
mov
pop
inc
in
xchg
pop
bound
test
in
xchg
pop
enter
roll
repz
rep
loope
out
fsubrl
pop
pop
sub
mov
add
cmpsl
rorb
in
fdivp
jmp
loope
das
mov
push
aad
mov
pushf
jecxz
mov
pop
sarb
pop
dec
lods
sub
mov
jns
and
sub
mov
imul
mov
js
push
shrl
jmp
push
mov
test
inc
mov
stos
inc
arpl
inc
and
int3
pop
cs
test
sbb
lcall
ret
jecxz
sbb
addb
and
lods
push
pop
push
and
inc
fstpt
push
mov
xchg
negb
jno
out
sub
push
mov
and
cli
adc
fsubr
orb
xchg
push
cmp
fwait
pop
push
mov
inc
lea
inc
add
cmp
rcrl
mov
xor
fimuls
sbb
ss
gs
xor
aaa
jecxz
leave
inc
sub
jne
xchg
cmp
fs
xor
xor
icebp
popf
push
js
in
sbb
loopne
dec
cld
sub
cmp
in
pop
jo
and
mov
adc
push
dec
out
sub
push
iret
js
and
repnz
leave
repz
iret
stos
inc
jb
sub
stos
pop
and
dec
push
or
cld
leave
movsb
xchg
cltd
jmp
in
filds
pop
sbb
inc
inc
inc
mov
loopne
mov
rep
stc
ret
sbb
lcall
clc
sbb
imul
mov
or
xor
das
push
scas
mov
and
js
popa
iret
sar
sub
mov
xchg
pop
and
jo
mov
dec
das
sbb
and
data16
es
clc
sarl
jecxz
dec
in
aas
cs
jmp
xchg
fdivrs
sub
sub
sbb
lods
mulb
xlat
idivb
and
or
sbb
jae
jl
mov
lahf
xor
add
fidivl
jbe
scas
cld
mov
push
stos
push
mov
je
lods
inc
scas
mov
outsb
add
aaa
leave
fimull
fucomip
sub
pop
cmpsl
xchg
xor
cmp
add
mov
mov
stos
inc
lods
lock
lds
scas
pop
sbb
repz
xchg
pop
cwtl
jge
inc
and
mov
ja
mov
adc
dec
lret
insl
or
outsl
inc
out
fs
lret
inc
scas
dec
clc
test
push
jle
xchg
mov
test
xlat
rolb
push
test
xchg
cmp
dec
jbe
sub
divl
mov
jmp
aaa
aaa
adc
or
sub
add
mov
adc
hlt
ljmp
jmp
in
ret
dec
lods
xor
mov
or
sti
and
sbb
cmc
xor
mov
add
imul
stos
lret
lahf
xor
fidivrs
aas
sbb
jnp
inc
jmp
out
filds
pushf
pop
xor
test
pusha
cmpsl
push
hlt
xchg
ret
clc
pop
lock
mov
outsl
ficoms
pop
ret
testl
leave
or
je
out
jp
inc
jo
div
shll
lds
jle
jbe
loope
xchg
sub
pop
add
push
xchg
int3
lock
xor
inc
mov
cmp
mov
icebp
cmp
jae
jne
pop
lcall
or
mov
movsb
inc
xchg
mov
xchg
out
pusha
out
pop
and
out
mov
jge
loopne
jno
mov
or
repnz
xor
addr16
pusha
out
add
xor
out
leave
adc
xchg
out
lcall
add
mov
jns
ljmp
imul
push
dec
fidivrl
repz
in
push
mov
clc
iret
addr16
and
icebp
jp
pop
xchg
subl
mov
dec
ficomps
aad
shll
in
mov
ficoms
lret
sbb
xchg
adc
pop
outsl
call
movsl
jle
adc
int3
xlat
sbbl
jg
dec
inc
jns
push
sub
adc
dec
dec
fsub
sahf
aaa
leave
notb
ss
dec
daa
cli
rorb
data16
shl
push
pop
repz
inc
pop
mov
or
cmpsb
inc
jp
pop
imul
push
fscale
fcoml
insb
mov
and
ljmp
sub
enter
mov
fstps
jns
sub
fistpll
push
adc
push
data16
sub
mov
mov
jbe
rclb
iret
mov
cmc
mov
dec
jecxz
scas
stc
ljmp
shr
addr16
mov
fildll
ja
add
cwtl
cltd
in
xchg
fisubrs
dec
lds
fdivrl
cmp
cmc
nop
dec
mov
daa
lret
mov
or
mov
adc
push
or
cmp
cmp
push
mov
dec
mov
push
in
movsl
scas
jp
push
xchg
inc
ret
ja
pop
mov
cs
lock
inc
dec
filds
fsts
jns
dec
pop
push
outsb
jmp
xor
test
out
fimuls
cs
pusha
out
cmp
js
enter
dec
test
mov
push
push
mov
xchg
inc
mov
mov
out
out
pusha
pop
lcall
dec
in
das
and
sub
sbb
add
pop
dec
testb
ficoms
xor
mov
jp
ret
jne
sbb
std
test
jns
push
dec
cmp
lcall
cmp
cmpsl
aam
dec
xchg
fdivrs
scas
mov
shrl
cmp
pushf
mov
xchg
cmp
insb
rol
sbb
push
aas
and
in
out
jge
jl
and
and
ss
fcompl
cmovle
xor
loope
pop
push
and
imul
leave
shll
pop
pop
inc
inc
adc
sub
fisubrl
sub
sub
jge
jbe
addr16
sub
xchg
xor
push
testl
xor
mov
popf
mov
movsb
sub
mov
lret
cmpsl
bound
sub
icebp
clc
pop
fisubl
jnp
pop
push
nop
and
cltd
xor
out
fistpl
ljmp
cli
xor
xchg
lret
data16
mov
xchg
mov
jmp
fcmovnu
sbb
clc
subb
outsl
inc
xor
mov
cmpsb
in
into
adc
or
jns
fdivrs
push
mov
int3
xchg
inc
data16
sbb
lea
cmpsb
arpl
mov
dec
push
aam
sbbl
push
push
and
loopne
sbb
push
ficomps
jl
jne
fs
mov
jo
or
xchg
push
cmp
std
mov
or
les
das
sbb
divl
xchg
mov
and
ficomps
fistl
and
xchg
enter
push
mov
jns
rcll
pop
cmpsw
aas
mov
scas
ljmp
loop
adc
jecxz
ljmp
lods
sbb
pop
push
rorb
add
xchg
or
testb
mov
enter
fsubs
xchg
pop
jge
shrl
adc
inc
test
adc
test
lret
inc
sbb
xchg
mov
int3
ret
xor
sbb
das
aaa
insb
xlat
leave
ret
sub
xor
push
xchg
stos
nop
lods
enter
fistpll
pop
ret
clc
pusha
das
pop
push
rcl
pop
gs
or
jecxz
adc
insl
cmpsl
in
mov
add
pop
xchg
push
xchg
lret
jne
cmp
pop
ds
mov
jl
lods
xchg
movsb
out
inc
jns
xchg
dec
push
in
or
out
cwtl
mov
add
push
lods
shlb
xchg
mov
in
dec
fcoml
hlt
addr16
xchg
jle
lret
pushf
je
mov
pop
mov
test
lret
mov
mov
push
add
ljmp
or
cmp
fmuls
insl
and
popa
imul
mov
mov
movsb
jno
push
push
mov
sub
das
mov
push
sahf
cmp
cmp
lds
jmp
cwtl
mov
or
cmp
in
ss
out
mov
push
popw
loopne
jecxz
xchg
jmp
jge
pop
stos
adc
inc
addr16
push
adc
dec
jnp
sub
xor
lock
pop
pusha
lock
gs
in
mov
jbe
cmp
decl
dec
mov
pop
pop
movsl
push
rorl
and
int3
xchg
jp
loopne
cwtl
mov
and
fiadds
stc
mov
data16
ret
call
fxch
in
mov
inc
mov
add
jbe
add
pop
mov
out
sub
lret
jecxz
je
pop
ss
xchg
adc
movsl
repz
repz
add
push
pop
insb
scas
leave
jo
mov
jmp
add
inc
lahf
mov
outsl
scas
mov
lcall
xor
pop
scas
cltd
sub
leave
or
fdivrs
lcall
imul
cmp
rcl
mov
mov
mov
icebp
adc
pop
fidivrs
pop
sbb
sti
jle
aad
test
xchg
dec
mov
sub
add
inc
mov
push
jmp
scas
and
sub
das
dec
dec
jmp
mov
das
xor
xor
mov
ror
inc
bswap
ret
push
movsb
data16
stos
dec
shr
xlat
push
sbb
js
push
call
fnsave
mov
cmpl
imul
push
pop
or
mov
push
dec
xchg
mov
icebp
bnd
ss
xchg
sbb
pop
es
pop
fstpl
inc
push
outsl
sbb
mov
cli
sub
sub
sub
add
cmp
sub
inc
ret
xchg
pop
sets
mov
mov
jo
and
inc
movsb
repz
push
sahf
adc
aas
pushf
ja
hlt
and
lahf
adcl
mov
mov
lss
leave
into
mov
and
stc
loop
push
cmpl
out
pop
pop
inc
sarl
shlb
cmp
je
push
pop
and
inc
or
mov
mulps
xchg
into
xchg
and
rcrl
xor
mov
xor
into
sbb
imulb
sub
inc
jnp
add
push
fwait
sbbl
lret
insb
push
out
clc
adc
or
les
dec
lock
mov
mov
shrl
test
out
mov
loop
cld
test
sbb
fidivrs
adc
push
dec
mov
sarb
xor
sub
inc
xor
sbb
xchg
lods
scas
and
shll
xor
in
insb
cli
inc
cmp
adc
test
fucomip
adcl
sub
in
mov
push
pop
sahf
iret
xchg
adc
sbb
xchg
pop
popa
rcrb
test
jbe
gs
adc
mov
xor
push
arpl
and
push
daa
mov
movsb
inc
pusha
push
imul
scas
add
dec
out
das
aaa
mov
xchg
mov
scas
fisttps
adc
or
mov
push
faddp
sbb
pop
je
clc
jbe
lods
jp
mov
pop
cmp
add
mov
pop
cmp
inc
xchg
mov
stos
lea
xor
mov
sbb
jmp
cmpsl
dec
call
loop
inc
inc
in
sbb
test
push
push
addr16
sub
in
movsl
dec
inc
inc
jge
stos
push
sub
sbb
sbb
sahf
jns
pop
mov
lret
pushf
pop
jle
or
jne
cmp
cld
movsl
je
jno
loopne
fs
cmpsb
clc
loope
dec
cmp
or
out
in
push
sbb
push
jne
call
ret
setno
or
or
cmc
pop
adc
mov
lret
jmp
inc
out
nop
adc
test
xchg
mov
push
or
adcb
sahf
shrl
pop
cmpb
cmpsb
sbb
in
int
jmp
popa
inc
xor
and
popf
rorl
xor
imul
lods
ret
xor
add
aam
mov
rcl
mov
mov
imul
dec
xchg
incb
xor
cs
daa
sub
fstpt
add
stc
test
divb
jmp
loope
mov
jg
out
mov
adc
push
test
inc
fsubrs
inc
sub
push
xor
popa
leave
push
mov
pop
mov
sbb
mov
xor
ss
call
jno
test
inc
mov
in
dec
cmpsl
jg
mov
jbe
mov
stos
sub
and
divb
test
daa
fucom
out
adc
xor
fwait
push
xor
loope
aam
ja
mov
fildll
fs
cmp
test
mov
lock
jbe
je
or
shlb
xor
mov
jb
mov
push
fbstp
mov
pop
push
sti
clc
add
push
add
loop
dec
xor
jmp
dec
dec
daa
dec
aam
mov
inc
inc
aas
pop
jnp
pop
sbbb
cmp
cmp
pop
rcrb
iret
and
mov
cmpsb
or
inc
aas
mov
lods
cltd
cmp
sbb
test
ja
ret
subl
and
xchg
xor
inc
les
stc
repnz
add
jae
mov
pop
in
sbb
xor
jae
hlt
sbb
and
add
sub
mov
mov
jle
sti
xchg
or
test
jae
stos
shrl
fbstp
sbb
dec
test
push
dec
mov
fiadds
imul
out
dec
pop
ljmp
and
rcrl
movsl
sub
popa
addl
mov
add
sub
jle
jle
jecxz
push
jge
ja
push
lods
push
inc
call
push
pop
adc
pusha
push
loope
push
mov
int
test
mov
sub
mov
xor
mov
xchg
cmp
data16
push
xchg
pop
jae
pop
mov
fimuls
stc
jns
in
ret
cltd
out
bound
mov
clc
and
xor
aas
mov
loopne
mov
fsubr
outsl
sbb
gs
sahf
cmp
int3
cmc
sub
mov
xor
in
leave
and
outsb
in
loope
mov
gs
push
movsb
add
mov
mov
sahf
enter
shll
sbb
pop
sar
mov
mov
loope
mov
nop
fmull
nop
inc
or
dec
les
rorl
mov
adc
ret
fsub
popl
outsl
jmp
sub
push
or
inc
add
pop
sub
inc
push
adc
jne
push
add
fwait
push
xor
cmc
or
ds
mov
lea
addr16
pop
and
stc
add
xor
andl
sbb
add
pusha
cmc
push
lods
dec
pop
inc
dec
cmc
add
orl
movsl
jp
add
andl
cmp
mov
mov
mov
rorl
cmpsl
or
cmpsb
mov
mov
adc
dec
not
aas
add
stos
cltd
jbe
dec
movsb
gs
add
mov
mov
in
xor
push
jmp
call
out
cs
mov
jle
jno
imul
jmp
loopne
scas
sub
jbe
in
mov
push
subb
test
movsb
movsl
inc
ja
or
and
cmp
fs
addl
es
sti
sti
pop
gs
bound
jne
mov
cmpsb
dec
jmp
test
negl
xrelease
cli
jno
scas
pop
ljmp
rcr
ds
mov
fs
xchg
mov
nop
adc
fwait
inc
sti
xor
xchg
dec
xor
xchg
addr16
adc
jmp
and
push
mov
aad
push
pop
jg
push
pop
in
push
push
loope
and
xchg
test
sarb
xchg
cld
out
push
push
ret
add
arpl
in
or
sarl
and
loope
andl
addb
cli
ja
aas
rcll
jecxz
enter
xchg
fsub
loopne
mov
push
rclb
mov
sbbb
sub
pop
or
lock
arpl
sub
mov
xchg
loope
inc
adc
movd
xor
je
mov
mov
ljmp
adc
xchg
lods
enter
rclb
sbb
lods
jne
js
fnstcw
mov
sbb
dec
mov
jo
int
jo
sbb
in
je
loop
sub
pop
insb
dec
ja
push
daa
cmp
inc
ljmp
jl
pop
cmc
inc
cld
icebp
loopne
jae
jbe
ret
mov
out
outsl
lock
cs
dec
push
xchg
mov
das
in
xchg
aas
addr16
scas
rcrb
inc
in
std
lret
or
fisubrl
push
inc
xor
mov
out
mov
inc
sbb
push
xchg
hlt
xchg
mov
test
jo
cmp
xchg
mov
jbe
clc
push
add
and
cltd
nop
popa
add
stc
mov
repz
xchg
jns
cmp
loopne
test
cmp
addr16
cmpsl
cmpb
add
aas
gs
add
es
out
jecxz
jno
int
push
cmp
adc
outsb
pop
push
sub
push
or
pop
clc
xchg
aad
xor
jnp
dec
mov
cmpsl
out
fcmovnu
rorb
or
icebp
enter
mov
and
loopne
fs
push
fnstcw
or
test
imul
sarl
in
or
jge
out
cld
nop
push
cmp
adc
pop
xor
arpl
jecxz
sub
mov
jge
js
pusha
mov
outsb
mov
dec
jo
pop
test
jns
mov
sbb
add
mov
push
mov
repz
sbbb
movsl
repz
and
push
add
lds
outsl
addb
adc
outsb
push
or
rclb
add
mov
cmpsl
cltd
test
in
imul
lret
sub
test
xor
loopne
popa
aam
repz
cld
push
xchg
ficoms
orl
loop
ss
ds
or
add
adc
shrb
mov
fdivrl
scas
pop
test
out
in
push
fdivrp
sti
jnp
push
jo
es
scas
arpl
mov
lods
cmp
jno
mov
fbld
pop
and
pop
xor
orb
jl
mov
mov
jo
jmp
add
sahf
pop
or
push
sub
lahf
in
test
mov
mov
sti
bound
inc
xchg
or
in
cmp
out
aas
insb
mov
xor
jae
jne
idiv
mov
push
ret
xchg
mov
dec
xchg
leave
and
sub
mov
sti
cmp
mov
out
test
rcll
pop
in
outsb
cmpsb
jge
leave
outsl
popa
test
loopne
inc
fs
adc
sbb
rorb
mov
bound
sti
pusha
stos
and
cmp
in
stc
cmpl
jg
jne
scas
jg
mov
xor
jne
shlb
inc
mov
aaa
cmp
pop
dec
rorl
push
test
xor
in
lret
mov
push
dec
adc
sub
gs
ja
out
lcall
push
pop
add
sub
dec
lret
das
cmp
iret
shrl
cmp
add
mov
sahf
mov
add
imulb
int
addl
popa
xchg
or
xlat
cmp
lea
lcall
mov
inc
jmp
aam
push
mov
repnz
adc
pop
pushf
inc
in
xor
push
stos
in
and
mov
cmp
arpl
adc
xchg
mov
fisttps
or
fcmovu
dec
cmp
iret
shl
xor
xchg
add
ret
and
pop
stc
xchg
mov
mov
add
in
sbb
fdivrl
repz
mov
inc
jnp
push
or
add
je
jge
mov
lock
imul
les
push
jae
das
mov
mov
adc
mov
nop
mov
xor
add
jmp
dec
inc
lock
mov
mov
adc
push
mov
xchg
and
xchg
pushf
mov
and
add
je
inc
pop
out
mov
mov
mov
test
add
mov
pop
das
icebp
or
decl
rorb
cmpsl
in
cmp
dec
inc
cld
aam
jae
mov
pusha
out
jmp
mov
lods
or
push
test
sbb
and
push
dec
mov
mov
cmpb
roll
sti
test
mov
ret
lret
lret
dec
add
inc
pop
lahf
xor
out
mov
adcb
test
addr16
dec
push
inc
or
add
cmp
xor
xor
sbb
inc
insl
and
aaa
test
push
mov
or
insb
jnp
sub
mov
pop
sbb
jno
rcrl
mov
stos
fldcw
ljmp
push
rcll
in
sbb
ds
jecxz
lret
adc
ljmp
mov
mov
cwtl
divps
inc
and
out
cmpsl
inc
jnp
xchg
pop
mov
test
mov
neg
lahf
repz
mov
sub
into
nop
lods
js
mov
xor
lock
fdivr
out
push
mov
sbb
int
xchg
aam
cmp
adc
mov
inc
aas
pop
adc
pop
and
pushf
bound
cmp
lahf
mov
idiv
in
imul
mov
sarb
negb
in
jbe
out
jl
clc
xchg
scas
mov
nop
fs
push
mov
and
push
inc
jmp
pop
dec
imul
mov
sbb
inc
shl
push
leave
pop
aad
jg
or
push
sbb
push
into
sub
add
fwait
pushf
fisttpll
xor
aas
or
repz
inc
jl
jno
xor
jge
cli
in
out
xor
dec
xor
cmpl
mov
addr16
push
call
cmp
adc
cmp
adc
mov
int3
inc
cmp
or
inc
or
jae
jbe
sbb
mov
lret
loope
push
pop
or
sti
popf
shlb
test
inc
add
lods
or
ret
pop
pop
dec
mov
mov
rep
pop
iret
iret
fs
sub
bound
sub
mov
rorl
push
scas
out
xor
jecxz
add
pop
ds
inc
std
or
mov
cwtl
sub
sub
idivl
das
inc
das
mov
push
inc
imul
and
jno
add
xchg
sbb
dec
testb
je
leave
pushw
cmp
lahf
xor
in
fidivrl
xor
fnstcw
test
xor
add
mov
dec
dec
xchg
test
mov
leave
leave
loope
mov
add
out
and
ficoms
les
pop
outsb
cs
inc
imul
xchg
sub
jne
mov
pop
mov
mov
dec
jbe
add
movsl
test
jge
dec
inc
xchg
cld
stos
cmp
daa
mov
xor
inc
or
mov
sub
pop
lahf
push
inc
andb
mov
jl
pop
jnp
mov
pop
ss
out
mov
sub
sti
outsb
imulb
cmp
aad
push
outsl
insb
je
clc
lcall
sub
push
sub
xor
inc
jbe
xchg
int
mov
sbb
shrl
inc
cmp
mov
aad
and
sub
dec
das
in
mov
inc
daa
inc
sub
push
xchg
pop
cmpb
lock
out
aam
mov
xchg
or
std
dec
push
mov
out
pusha
dec
jae
gs
cmp
lods
push
imul
pop
inc
jo
xchg
lcall
and
rclb
push
out
pop
mov
nop
ss
pop
int
cmp
xor
push
pop
add
pop
pop
movsl
push
xorl
or
xor
jbe
test
test
sbb
mov
pop
enter
xchg
call
jg
shlb
jne
add
sbb
jge
sub
jo
adc
cs
sub
xchg
push
mov
dec
mov
adc
imul
aam
add
aad
fistpll
and
or
fnsave
cmpsb
sub
fcoml
pop
mov
imul
shlb
xchg
push
mov
lahf
and
js
addb
dec
mov
incl
push
shlb
js
mov
das
or
dec
fists
pop
inc
pushf
es
test
loope
pop
icebp
jmp
or
shlb
lds
enter
and
mov
es
adc
push
dec
out
adc
sub
test
push
and
push
in
inc
push
lar
lds
dec
or
mov
mov
mov
xchg
leave
and
cmp
call
dec
leave
mov
aaa
scas
in
xor
or
and
es
std
fistpll
pop
enter
movsl
ljmp
sub
xor
loope
mov
add
in
cli
sbb
outsw
imul
cwtl
outsb
lock
mov
pushf
mov
das
mov
outsl
and
lahf
xchg
or
pusha
jns
sub
push
les
int
lds
add
sarl
insb
fwait
call
sub
into
xor
nop
fwait
push
jo
adc
roll
pop
mov
out
xor
out
and
pop
andl
sub
bound
dec
and
or
mulb
lods
pop
loopne
xor
and
nop
gs
inc
jmp
js
or
dec
es
jp
or
push
rolb
frstor
insl
push
inc
in
xor
div
ret
loop
movsl
loop
and
inc
mov
es
aas
in
pop
scas
push
mov
xor
push
shrl
and
mov
xchg
xor
popa
fidivl
mov
cli
fidivl
test
cs
push
cld
jbe
rorb
xor
js
add
shrl
mov
iret
cmpl
mov
call
sbb
cmc
loop
in
fcmovnbe
and
jne
xor
adc
in
ret
adc
add
ds
adc
stos
or
orb
das
mov
in
jecxz
ret
push
lcall
mov
enter
mov
mov
push
arpl
inc
xchg
in
rcr
or
jge
repnz
cli
cld
filds
xor
or
inc
popa
adc
cmpsl
adc
dec
call
adc
xor
gs
cmp
add
movsb
cwtl
nop
pop
mov
add
mov
xor
insl
cmp
sbb
jmp
xor
in
call
pop
sub
or
ret
jnp
sub
repnz
inc
cli
or
fmulp
cltd
push
pop
push
clc
mov
out
dec
xchg
cs
cld
test
imul
sub
sbb
stc
lods
cmpxchg
xor
mov
nop
pop
int3
lret
outsb
xorb
sub
jle
sti
ds
adc
lret
or
gs
scas
call
out
or
mov
cmpsl
push
in
add
cmpsl
sarl
adc
adc
rep
dec
ja
cld
pop
cli
jl
mov
scas
das
jp
das
repnz
adc
mov
cmp
dec
jle
xchg
xor
rorb
or
pop
add
xchg
mov
mov
push
xchg
cli
mov
clc
aam
ja
roll
add
fs
push
sbb
cltd
lcall
pop
mov
lds
dec
icebp
push
arpl
test
sub
lock
icebp
xor
push
mov
cltd
push
sahf
jns
pop
pushf
in
or
gs
mov
aad
pop
aad
ds
inc
outsl
iret
ss
cs
sbb
filds
dec
outsl
scas
stc
push
pop
iret
and
lds
xchg
cld
jne
xchg
sub
and
out
imul
sub
stos
jae
add
and
mov
mov
push
fs
push
fildll
adc
in
sbb
push
jge
in
dec
fwait
mov
dec
sub
pop
mov
in
inc
xlat
mov
pop
push
pusha
ja
std
cli
lods
fdivs
xor
sub
ret
pusha
xchg
push
cli
loope
jb
add
iret
add
fistpl
mov
jle
mov
pop
or
lock
or
sbb
mov
lock
push
push
push
sbb
std
mov
pop
lock
sbb
sbb
std
ret
clc
cmp
mov
cld
cli
repz
inc
out
movsl
push
dec
stos
pop
sub
stos
ss
dec
mov
sti
sahf
mov
ss
or
add
pop
or
out
daa
and
fwait
pop
xchg
testb
loopne
fimull
push
cmp
push
mov
ss
jp
inc
push
pushf
mov
sbb
cwtl
dec
cmc
push
xchg
lret
arpl
pop
fwait
push
mov
stc
icebp
ficomps
push
je
cmpsl
or
lret
push
shlb
lcall
popf
xlat
sbb
loop
sahf
les
and
xchg
pop
xchg
stos
es
daa
dec
pop
sub
dec
jae
inc
je
jo
jae
inc
adc
insl
sbb
out
in
ret
and
cmpsl
jmp
and
aad
mov
sbb
shll
add
push
lahf
cmc
mov
lods
mov
mov
lea
add
push
insl
cltd
std
cmp
pop
adc
jecxz
pop
test
das
pop
dec
push
sbb
sbb
mov
cmp
xchg
cltd
adc
push
fsts
aaa
repz
scas
ljmp
push
test
das
bound
inc
dec
loopne
jnp
lret
nop
iret
sub
mov
cmc
mov
outsl
scas
fwait
ss
mov
pop
xor
dec
flds
aas
aad
das
cmp
adc
xchg
jge
rcr
cmp
fnsave
pop
adc
sub
push
mov
sti
dec
pushf
jmp
les
adc
xchg
stc
daa
mov
mov
mov
fwait
das
cmpl
das
shlb
ljmp
inc
inc
mov
or
stc
lods
aas
and
mov
outsb
aam
push
sub
add
movsl
js
cmp
jb
jne
xchg
dec
jno
icebp
sub
jbe
push
mov
add
push
sbb
outsl
cmpsl
xor
mov
add
lods
cs
push
add
adc
adc
mov
mov
fsubp
sub
jecxz
xchg
and
arpl
push
fsubrs
pop
movsb
in
mov
lret
bound
mov
adc
test
mov
aas
jne
div
xor
mov
adc
pop
lret
movzbl
mov
inc
sub
aas
lods
sti
sarl
arpl
jae
cmp
lds
lods
xor
stc
scas
rorb
mov
jo
enter
lret
mov
cs
mov
mov
mov
push
xor
mov
aaa
data16
stos
sub
mov
xchg
je
adc
in
out
xor
inc
sbb
fisttpll
sbb
js
aad
loopne
jb
push
mov
pop
adc
pop
inc
pop
xchg
xor
dec
ds
add
mov
sbb
push
and
sbb
adc
push
insl
pushf
xor
push
lahf
pop
shrb
rorb
xchg
icebp
icebp
jmp
jmp
adc
mov
adc
cmc
test
add
ret
in
sub
jo
or
xor
mov
imul
cltd
xchg
fcompp
dec
mov
mov
xor
xchg
out
pop
mov
mov
or
stos
inc
or
push
dec
loope
or
mov
add
dec
pop
inc
xchg
adc
cltd
xor
in
dec
inc
cmp
dec
xor
jle
dec
jns
or
jecxz
sahf
mov
lods
add
das
shlb
fldl
imul
xor
movsb
cmp
jp
decl
mov
gs
mov
call
fsub
push
xorl
pop
push
push
or
lock
xchg
std
loope
movsl
adc
daa
xor
push
mov
xor
popa
pop
dec
in
jne
cmp
jmp
out
add
jns
das
push
sbb
jbe
pop
xor
stos
loopne
jo
or
pop
rcrb
mov
sub
pop
pop
mov
xor
mov
jmp
lock
mov
imul
push
add
gs
movsb
dec
mov
mov
into
push
insl
cltd
jmp
or
rolb
push
push
add
roll
dec
xor
adcb
pop
push
cmpsb
ja
push
rclb
dec
and
stos
divb
adc
add
das
push
imul
outsb
scas
in
lock
jmp
fnstsw
jmp
imul
repnz
sbb
negl
out
or
cmpsl
outsl
add
mov
pop
mov
das
lret
mov
add
sbb
lahf
inc
cltd
repnz
xor
iret
push
jp
and
and
add
test
mov
fldcw
jbe,pt
sub
xchg
mov
aad
pop
push
add
pop
clc
stc
xor
cwtl
mov
cmp
jle
mov
add
or
les
jmp
and
push
or
imul
sbb
outsl
loope
cmp
shr
pop
ljmp
insl
push
pop
push
adc
xchg
xchg
push
jb
add
fildll
daa
push
mov
xor
cli
mov
cmp
je
cmp
xchg
aad
jbe
shrl
insb
movsl
add
ret
sub
iret
popf
mov
sbb
mov
loope
xchg
jg
xchg
mov
enter
pop
clc
pushf
or
lcall
movsl
mov
leave
cli
imul
mov
cmp
test
jg
cmpsl
dec
dec
xchg
inc
insb
pop
fdivrp
test
jecxz
bound
sti
inc
and
push
in
xor
push
pop
adc
dec
clc
sub
jno
mov
je
jl
cs
jl
imul
and
jp
cmpsl
movsb
es
or
ret
clc
lret
or
arpl
fwait
divb
fisttpll
iret
xchg
cmc
test
inc
les
pushl
sub
movsl
mov
rcrl
addb
push
mov
pop
shrl
pop
xlat
rcrb
pop
test
dec
mov
jecxz
push
out
inc
je
and
addr16
aas
in
sbb
cmp
or
lods
imul
mov
jae
dec
mov
pusha
sbb
or
imul
jmp
data16
and
js
test
dec
cwtl
inc
out
add
xchg
push
scas
lods
pusha
jl
test
es
outsb
movsb
pop
push
enter
sbb
add
sbb
xchg
push
imul
pop
cltd
pushf
pop
mov
loop
stos
scas
aaa
outsl
adc
push
lgs
nop
cmpsb
xor
cmp
pop
cmp
xor
cmp
xchg
fcmove
fstl
test
out
dec
out
pop
mov
push
push
fwait
adc
xchg
mov
js
aas
imul
or
js
xor
xor
sub
popa
inc
and
rcl
xor
test
lret
ss
stos
gs
mov
push
adc
clc
out
dec
push
mov
push
mov
mov
xlat
inc
lahf
inc
cmp
jne
add
ljmp
pop
out
ja
loopne
roll
and
fsts
sar
aas
test
stos
fcmovnu
inc
mov
add
mov
sbb
aaa
mov
movsb
arpl
mov
xchg
xchg
push
insl
stos
mov
cli
dec
lahf
push
cld
sub
rcl
mov
into
xorb
shlb
pop
in
dec
cld
lahf
leave
shl
les
add
adc
into
loope
cmp
js
aas
fisubrs
pop
mov
mov
mov
and
in
gs
fistl
pop
in
ret
xor
ja
mov
test
lcall
mov
mov
dec
mov
adcl
enter
in
outsl
icebp
daa
inc
adc
adc
ret
xchg
test
xchg
add
cmp
aam
stos
cmp
push
jmp
pop
fnsave
cmpsl
and
sub
dec
adc
cltd
adc
addr16
pop
mov
and
popf
jae
sub
cmp
ss
dec
mov
cmp
xor
adc
popl
mov
loopne
xchg
jmp
daa
jne
test
push
negb
ja
fcmovnu
daa
pusha
pop
nop
bound
sub
jge
mov
js
mov
sarl
fiaddl
mov
and
fstl
mov
jge
pop
in
clc
xchg
fimull
jmp
loopnew
adc
out
push
push
adc
repnz
or
stos
adc
fstpl
adc
mov
and
ss
iret
mov
xchg
sarb
fsubrl
mov
mov
push
and
es
dec
mov
add
sub
sub
sbb
loopne
mov
jp
insl
adc
mov
pop
ret
and
push
insb
and
fimuls
push
cs
in
xor
fldt
xchg
dec
out
jmp
aam
iret
xor
outsl
mov
mov
pop
rcrb
inc
movsl
ja
jb
jmp
add
mov
fcoml
out
out
in
xor
mov
aaa
cmp
pusha
push
push
add
lods
mov
in
call
std
mov
popa
mov
inc
shlb
mov
inc
shrb
cmpsb
add
jo
xor
pusha
mov
rorb
lea
mov
rorb
mov
sub
ret
cmp
sbb
pop
cmp
andb
int3
or
fwait
cwtl
mov
mov
inc
add
add
jge
cmp
add
mov
movsl
jno
int3
ds
aad
rcrl
xor
push
dec
jle
call
sbb
stos
mov
inc
mov
in
xor
iret
jle
mov
sbb
dec
pop
cmpl
inc
fsubrs
pop
bswap
push
lock
xor
mov
clc
mov
mov
insb
inc
fildl
sub
call
ljmp
push
jb
lock
rorl
fldenv
mov
arpl
int
push
xchg
jle
sbb
sbb
adc
xchg
inc
dec
shlb
stos
add
imul
in
aad
inc
inc
cmp
xsha1
cmpsb
lret
xchg
mov
push
call
fldenv
add
ficompl
sti
xor
pop
mov
sahf
or
mov
movsl
or
data16
adc
pusha
mov
lahf
pop
push
xlat
xor
mov
mov
and
jp,pt
add
jecxz
dec
push
stos
jb
popf
repnz
jns
xor
lahf
rcrb
shll
cmpsl
subb
pop
adc
push
pop
mov
fwait
mov
jno
pop
icebp
or
mov
aaa
lret
mov
and
and
mov
aaa
sahf
dec
int
in
jge
jno
jecxz
cld
stos
imul
adc
cmp
into
inc
push
dec
dec
add
fidivrs
adc
jmp
inc
mov
and
pop
mov
pop
sbb
faddl
cmp
mulb
push
pop
jbe
adc
mov
jge
or
int3
imul
iret
fidivrs
pop
xchg
out
xlat
add
test
jg
outsb
inc
movsl
jle
mov
lahf
in
cli
test
pop
xor
std
arpl
xchg
int
xor
stc
inc
mov
mov
xor
sub
inc
sbb
and
fnsave
hlt
jle
fstl
xor
mov
or
lods
pop
negb
mov
xchg
movsb
xchg
movsb
mov
int
fmul
push
pushf
jp
enter
sub
cs
cli
mov
sbb
int
iret
or
cmp
ljmp
and
loopne
iret
xchg
mov
add
stos
jae
xor
negb
add
pop
pop
push
pop
test
fmulp
clc
loope
test
loop
inc
lods
ds
jg
xor
inc
mov
imul
out
push
sahf
iret
clc
pusha
inc
and
pop
xchg
sbbl
scas
adc
loop
push
dec
mov
inc
insb
call
lods
push
mov
loop
and
fs
jp
cmp
ficomps
popa
call
add
add
mov
and
or
push
mov
inc
js
adc
std
gs
subb
lret
cmc
or
cs
aaa
ljmp
adc
data16
sarl
jmp
dec
rolb
daa
xchg
pop
xchg
in
push
xor
test
pop
push
shrl
jl
xor
mov
mov
cli
add
sbb
out
dec
add
mov
cmc
push
adc
add
mov
sbb
add
imul
xchg
jp
mov
sbb
ss
je
add
inc
push
int
fiaddl
dec
dec
pop
dec
pushf
cmp
fists
test
jnp
jge
push
xor
pop
add
loopne
fiadds
or
enter
jp
fcompl
jle
xchg
inc
fs
sub
inc
push
push
frstor
test
push
jbe
pop
or
mov
mov
out
mov
cmp
dec
inc
dec
add
mov
cmpsl
xchg
out
xchg
lret
pop
addl
and
and
sub
scas
pop
and
sahf
pop
mov
lods
mov
adc
xor
fwait
mov
in
cmpsl
push
lret
gs
mov
mov
jg
xor
pop
xor
dec
pop
pushf
jo
out
shrl
adc
cmp
pop
push
fmuls
xor
push
add
fs
es
aas
xchg
loope
ret
adc
sbb
xchg
jno
sub
daa
push
jmp
dec
xor
sahf
fsubl
dec
popa
xchg
lods
dec
popl
movsl
movsb
or
fadd
aaa
test
sbb
int
lret
pushf
ret
push
mov
in
xor
sar
mov
xchg
xor
mov
addr16
sbb
dec
dec
cmc
les
and
fwait
imull
test
dec
push
add
push
icebp
in
js
xor
push
add
rorl
and
mov
rolb
xchg
and
testb
add
mov
fdivl
mov
or
pop
into
dec
jmp
rolb
in
jge
dec
imul
test
rcrl
stos
xchg
test
into
push
add
lea
pop
or
mov
xor
stc
push
daa
hlt
js
mov
mov
dec
cld
mov
xor
outsl
xor
pop
cmp
insb
lods
sub
imul
je
mov
push
loop
cwtl
bound
data16
cmp
ljmp
out
in
adc
fs
sub
mov
add
pushf
add
stc
out
inc
ja
cld
xlat
out
mov
adc
adc
fisttpl
out
sahf
sbb
jno
nop/reserved
or
ja
sub
test
ss
dec
stc
pop
nop
cmp
insl
and
mov
imul
shll
idiv
out
leave
movsl
push
ljmp
ljmp
je
mov
fldenv
xchg
aam
sbb
insb
sarb
out
vpsrlw
or
push
loop
mov
jo
pop
push
aaa
sbbb
sbb
ret
pop
stos
into
rcl
aaa
add
pop
in
lret
mov
cli
outsl
cmp
mov
aam
jmp
das
adc
inc
ds
push
xor
xor
sti
sbb
or
rolb
xchg
int
pop
sbb
pop
mov
std
xor
push
cmc
jbe,pt
les
mov
ret
adc
jae
sub
add
xchg
jg
xor
movl
ds
mov
outsb
dec
inc
pop
in
cmp
fcmovb
sub
mov
dec
xor
loope
pop
dec
dec
add
jge
sbb
pushf
shll
nop
icebp
xchg
ja
cmpsb
iret
jecxz
daa
cmp
push
bound
movsl
fsubs
mov
fcmovu
test
mov
je
xlat
sbb
mov
ret
popa
test
sub
xchg
xchg
js
add
out
pop
xor
jnp
cwtl
aad
push
testl
mov
and
xchg
pop
ja
loop
movsb
push
mov
add
mov
xlat
packuswb
pop
or
dec
pop
xor
scas
lea
pop
test
inc
lret
cs
std
mov
movsb
mov
xchg
xor
sub
push
dec
or
ds
cmpsb
sub
inc
sbb
fildl
or
out
mov
mov
xchg
arpl
pop
and
mov
ret
xchg
and
fisttps
outsb
in
cmp
mov
sub
hlt
lods
mov
inc
mov
lret
xor
and
sbb
sub
fcomps
cmpsl
fimuls
ret
push
dec
xchg
adc
cltd
pop
xchg
mov
hlt
xchg
cmp
fwait
pop
mov
adc
fnclex
or
cmc
inc
pushf
fwait
into
pop
test
cmpl
add
jae
mov
and
sbb
adc
inc
fidivrs
jge
sub
int3
xchg
ja
jb
cmp
cmp
int3
push
les
out
mov
add
sbb
push
cmpsl
sbb
pop
jbe
das
xor
roll
aaa
dec
stc
adcl
adc
pop
insb
orl
sbb
fwait
xor
fnstenv
fdivs
and
call
xchg
xchg
repnz
xor
dec
mov
movsb
xlat
loopne
iretw
sarb
cmpsl
and
fldcw
or
cli
xchg
test
xor
xor
outsl
and
adc
pop
add
test
fcom
adc
inc
pop
jb
in
orb
mov
or
fldl
inc
enter
inc
cmp
xor
mov
out
into
sbb
stc
rolb
mov
sbb
push
jno
movsb
frstor
rcll
xor
mov
enter
push
push
push
add
jns
mov
fcmovb
jp
cmp
cmp
cli
ds
insl
cs
mov
dec
ficomps
rcl
jmp
mov
pop
adc
adc
mov
sti
mov
push
mov
adc
outsl
sub
arpl
mov
cmpsl
inc
js
fldln2
imul
dec
loop
sub
int
or
inc
xchg
fbld
jo
inc
mov
push
add
arpl
dec
daa
scas
aad
stos
jnp
shl
shr
mov
adc
fwait
push
xor
mov
pop
in
inc
lahf
sub
mov
inc
jle
sub
jp
adc
or
cmp
loopne
outsb
shrl
inc
xchg
mov
mov
mov
fiadds
cld
arpl
pop
aas
xor
and
mov
push
push
loop
sti
mov
outsl
fs
push
cli
ret
ss
xchg
loopne
mov
test
data16
insl
mov
data16
jbe
scas
inc
divb
pop
push
and
movsl
adc
int
sbb
xor
testl
mov
shlb
adc
ljmp
xor
icebp
jl
sbbb
popa
lahf
dec
lods
out
inc
and
sub
xchg
pop
adc
push
pop
adc
mov
stc
clc
test
jg
test
rorb
scas
cmpsl
jnp
sub
int3
mov
scas
shrl
sub
xor
inc
orb
jg
xorb
xchg
stos
add
pop
or
inc
pop
push
bound
or
popf
push
cmp
arpl
fsubrl
jg
loope
mov
jp
mov
out
daa
scas
mov
cmp
jno
mov
sbb
mov
flds
loope
sar
inc
in
loopne
cmp
repnz
cli
das
call
int
loop
das
pop
or
popf
je
push
xor
cmpsl
sub
add
add
dec
mov
add
stos
mov
adc
cmp
push
sub
fscale
lret
sbb
mov
dec
fldenv
jg
or
inc
xchg
dec
loope
adc
es
jmp
aad
jb
lret
outsl
sbb
repnz
sbb
inc
int3
insb
pusha
andb
cmp
insl
std
repz
in
inc
loop
add
inc
andb
rcrl
shlb
mov
in
sub
popa
add
pop
imul
loopne
cmpl
mov
push
sub
fwait
lret
rcl
cmp
out
and
je
inc
inc
xorl
addl
je
xchg
fiadds
pushf
mov
dec
adc
and
movsl
mov
fiaddl
sti
mov
ja
pop
pop
inc
cmp
xchg
mov
nop
xor
and
jne
pop
mov
mov
mov
jecxz
xchg
jmp
sub
sbb
mov
dec
adc
sbb
or
xchg
cmpsl
xchg
pop
push
das
loop
hlt
cwtl
xchg
sbb
jl
dec
sbb
rcl
rorb
lods
addb
dec
pop
fwait
mov
aam
pop
push
dec
mov
dec
cmp
xchg
iret
xchg
inc
push
enter
jb
or
not
jnp
mov
xor
xchg
in
dec
leave
lock
mov
push
idivl
das
fwait
imul
xor
adc
popf
jbe
adc
mov
bound
and
ljmp
pop
test
inc
dec
xchg
jl
sarb
sbb
jns
lret
cmp
sub
ret
inc
dec
xchg
add
jb
xor
or
je
sbb
ret
out
cmp
sub
mov
loope
aas
das
jne
mov
inc
pop
hlt
jmp
sub
adc
cmp
inc
pop
gs
fadds
pop
inc
or
das
es
test
test
xchg
je
lea
xchg
lods
inc
pop
mov
out
mov
addr16
adc
push
pop
cmc
mov
mov
mov
pop
and
sub
or
andb
notl
leave
mov
lods
cmp
sarb
xchg
mov
sub
xchg
jo
jbe
sahf
lahf
rclb
dec
xchg
int
inc
shrl
pop
cli
jg
leave
in
int
addr16
xchg
filds
xlat
add
mov
mov
fwait
mov
cmp
mov
xchg
push
sub
and
sub
jmp
enter
cmp
test
mov
and
xor
pushf
loopne
dec
sbb
add
out
mov
sub
daa
popa
cld
mov
jmp
into
jmp
sbb
inc
inc
sub
adc
les
dec
mov
add
arpl
das
ljmp
add
pop
imul
std
popa
std
test
in
or
xor
cld
rclb
sti
jns
daa
pop
mov
dec
aad
mov
in
sub
cmc
cmc
enter
fnsave
mov
filds
push
cmc
dec
jns
stos
xchg
xchg
push
mov
or
xor
fldt
xchg
outsl
imul
adc
adc
mov
jo
bound
mov
subb
mov
xchg
pushf
dec
loop
frstor
inc
cwtl
mov
sub
roll
xchg
pop
ja
mov
adc
shr
insl
std
fdivr
sbb
mov
cld
shl
gs
movsl
push
faddl
in
cmp
lret
mov
inc
jne
adc
lea
insl
sbb
xor
movsb
cmp
stc
sub
mov
jmp
ds
fisubrl
test
sbb
jle
dec
sbb
jne
mov
xchg
xor
pop
dec
leave
xor
ja
push
in
cmp
aas
pop
dec
cmpb
mov
jl
xor
mov
push
pop
out
add
lcall
cmp
sbbl
outsl
out
enter
loop
andb
lea
js
push
orb
cmp
data16
mov
sbb
dec
inc
sbb
addr16
cmp
popf
cltd
cmp
xchg
mov
repnz
xchg
imul
je
int
cmp
mov
test
ficomps
scas
cmp
imul
stc
jbe
dec
clc
sbb
adc
orl
movsl
or
xlat
in
mov
sbb
dec
pop
inc
push
ljmp
add
repnz
or
jnp
into
ljmp
and
fstpt
cld
out
jmp
sti
sbb
filds
jg
out
jecxz
stos
je
mov
imul
ds
call
cmpsb
mov
mov
pushl
popa
fsub
mov
adc
repnz
xchg
mov
hlt
dec
mov
adc
xchg
mov
push
mov
push
addr16
or
or
or
stos
je
sub
jno
xchg
xchg
push
divl
xor
push
fs
into
mov
and
sarb
cmc
or
xor
test
adcl
gs
xchg
add
lcall
popa
movsl
fs
aas
mov
aaa
xor
js
cmc
pop
ret
cmp
cmp
mov
inc
rcll
repnz
arpl
cmpsb
fcompp
or
out
in
call
andb
inc
das
adc
mov
sti
xor
sti
or
push
mov
mov
sar
or
gs
cmp
push
pop
lahf
add
shlb
test
test
inc
mov
mov
mov
sub
mov
fstps
outsl
or
pop
cmpsb
jns
jle
dec
sbb
fsubrs
pop
insl
aad
das
or
cwtl
cs
popa
data16
jb
cli
insb
adcb
arpl
in
std
shrl
adc
insb
mov
ja
fwait
xor
mov
jno
push
add
cli
xor
dec
mov
scas
into
scas
jmp
pushf
adc
xchg
scas
aam
fmul
stc
nop
push
and
fdivrl
mov
adc
xchg
fscale
xchg
sti
fisubl
sub
mov
inc
push
notb
cld
jge
cld
test
add
inc
push
dec
sub
adc
movsb
cmp
cmp
mov
fs
xchg
or
dec
ja
fs
out
into
fadd
mov
enter
pop
pop
bound
adc
sti
idivb
movsl
add
pop
js
or
data16
xor
fistpll
shll
xchg
jo
cmpsb
icebp
sub
cmpsb
test
jnp
imul
cld
addb
xchg
push
dec
in
outsl
enter
call
xchg
movl
aad
hlt
jne,pt
dec
and
arpl
aad
ja
fists
pop
xchg
sbb
push
pop
repnz
dec
push
xchg
movsl
enter
sti
ss
addr16
sbb
movb
adc
adc
pushf
es
push
push
dec
mov
or
lods
lcall
loop
mov
adc
and
adcl
shlb
cmp
push
push
aaa
push
popa
addl
jne
and
xchg
sbb
ret
fidivrs
sbb
nop
adc
cmp
sar
cmp
clc
xor
jo
icebp
rcl
stos
sar
in
add
pop
dec
dec
imull
adc
loop
shrb
sub
int3
xor
sti
xor
into
lss
popf
mov
mov
sub
enter
ret
dec
or
int3
adc
cmp
ret
push
cli
dec
fcompl
inc
xor
outsb
ret
lods
cwtl
push
aam
jp
iret
addl
insb
add
dec
and
mov
pop
cs
sub
xchg
jo
gs
dec
mov
shld
jns
dec
arpl
shll
pushf
sub
push
xor
push
pop
push
ret
add
ja
xor
jb
push
and
in
and
addr16
aaa
iret
sub
hlt
jno
dec
mov
xor
mov
push
push
pop
inc
rcrl
mov
movsl
gs
fs
out
jnp
jge
fsubl
popf
cmp
andb
xor
add
aaa
loop
push
pop
inc
pop
out
or
jo
dec
mov
js
in
repz
mov
pop
cltd
cmp
xchg
and
sbb
jg
mov
sub
bnd
dec
push
cmc
dec
mov
mov
cmp
js
nop
pop
icebp
loop
push
into
add
add
pushf
insb
out
cmp
enter
adc
sbb
xchg
and
ret
adc
inc
notl
mov
pop
clc
and
xor
add
jb
mov
lods
dec
neg
push
cmp
xor
dec
gs
data16
stc
pop
fldt
xor
and
inc
xchg
scas
or
pop
adc
enter
test
aam
push
aas
inc
pop
scas
pop
xor
and
ret
inc
gs
lods
inc
inc
incl
lods
dec
dec
addr16
test
in
icebp
pop
xor
js
inc
mov
cmp
jmp
adc
fdivl
inc
shrl
and
out
cld
sti
sbb
and
cltd
mov
cmp
sbb
jnp
add
pop
cs
dec
lret
pop
leave
je
mov
stos
ss
pop
cmpsb
lcall
int
daa
pop
sub
std
jge
jge
insl
and
popw
fstpl
out
ss
sbb
or
pop
sahf
jl
bound
and
sub
push
xor
jae
jl
outsb
mov
das
mov
dec
or
cmp
and
push
push
sbbb
ja
packuswb
adc
jnp
jae
popf
push
jae
cmp
xchg
mov
add
enter
cs
fistps
jae
dec
mov
cld
cld
fisubrs
bound
mov
and
sbb
repnz
add
and
imul
sti
out
inc
lahf
mov
test
scas
xchg
jne
sub
jge
jmp
repnz
mov
ljmp
inc
jle
or
sti
adc
lahf
inc
add
shll
dec
dec
cld
xchg
iret
faddl
stos
out
jne
pusha
jae
sub
xchg
daa
jmp
loopne
sub
mov
mov
xor
xor
sbb
arpl
jp
push
enter
dec
jmp
lds
movsw
push
adc
xchg
push
scas
jns
loop
test
jbe
cs
mov
mov
push
push
jge
pusha
stos
subl
fistl
out
test
les
mov
mov
mov
jecxz
std
xchg
dec
jp
test
fsts
xchg
test
inc
or
mov
loope
rcrb
outsl
or
mov
mov
mov
adc
loope
into
mov
testl
arpl
xchg
pop
mov
loopne
nop
cmp
rolb
mov
sub
mov
gs
jmp
push
call
and
adcl
cs
inc
cmp
sub
mov
aas
fildll
mov
jg
pusha
insb
dec
add
push
or
or
mov
jp
sub
arpl
sub
mov
nop
leave
inc
stc
adcl
vpslld
mov
adc
cmpb
andb
mov
sbb
rorb
or
cmpsb
popf
sti
out
pop
and
insb
or
inc
cltd
pop
push
daa
or
pusha
jne
std
les
popl
sub
cld
icebp
adc
lret
sub
pop
inc
imul
jge
iret
scas
std
sbb
iret
out
push
cmp
call
test
icebp
ljmp
and
adc
mov
clc
mov
or
ret
push
stos
shll
clc
mov
idiv
in
sbb
scas
dec
insb
dec
cwtl
bnd
pop
cmp
fcoml
fisubrl
push
scas
pop
jbe
mov
xor
test
xor
add
js
inc
dec
ds
adc
out
ss
and
jecxz
adc
jmp
sub
into
push
sbb
mov
adc
adc
pop
xor
inc
sysret
lret
mov
push
mov
jmp
sbb
cmp
and
icebp
add
jnp
sbb
mov
int3
pop
stos
push
popa
push
test
mov
cs
outsl
mov
bound
repz
pushf
sub
lods
ljmp
cmp
dec
cmp
pop
add
aas
pop
iret
jg
int
xor
aam
sub
mov
test
xchg
push
ss
dec
gs
add
mov
popa
stos
aad
adc
mov
inc
test
mov
fstpl
mov
cli
cs
stc
ds
test
xchg
mov
lods
add
xor
lcall
fcomp
in
outsl
les
cmp
add
mov
sub
or
cmp
int3
sbb
jns
jo
cmpsl
scas
cwtl
dec
lret
mov
mov
aas
adc
sub
dec
in
cli
cwtl
mov
mov
pop
push
rclb
mov
or
pusha
cmp
mov
ficoml
jae
sbb
push
aad
out
or
sahf
xchg
dec
xor
dec
cli
mov
inc
push
in
iret
hlt
jg
push
or
push
fbstp
inc
xchg
xchg
mov
nop
imul
dec
sbb
rcr
inc
mov
aam
hlt
sbb
shlb
cmp
add
subl
pop
andb
push
movsl
sub
std
mov
out
sub
xlat
mov
mov
xor
fiadds
lods
imul
jge
bound
das
fdivs
loop
lcall
leave
push
pop
xchg
pop
inc
icebp
call
out
jae
addb
neg
lret
ret
gs
std
adc
jge
sahf
repz
cmpsl
call
shlb
push
xor
mov
jae
popf
test
push
or
mov
jae
mov
inc
cs
andb
sub
xchg
sbb
mov
loop
xor
call
cmp
jo
sub
inc
cmpsb
sbb
adc
arpl
jmp
mov
dec
xchg
repz
adc
xchg
xchg
push
mov
das
ds
cmp
fs
outsb
rclb
jmp
int
call
sarl
and
jge
push
loope
lods
push
sbb
ljmp
mov
sarb
and
cmp
sbbl
jge
data16
xor
jnp
out
into
jbe
mov
sub
lock
cmp
xchg
or
and
aaa
insl
push
test
cmp
mov
ss
pop
dec
clc
mov
xchg
push
dec
popa
fadds
mov
xor
xchg
or
cmp
fildl
fsubs
add
cmp
push
hlt
mov
seta
sti
xchg
mov
scas
rcrl
lret
push
cmp
cmp
and
jns
inc
sbb
push
mov
outsb
std
aaa
mov
push
mov
add
dec
cmp
xchg
push
push
and
inc
lods
push
mov
rolb
in
xchg
xor
mov
cltd
shrb
or
pop
push
and
pushf
push
xchg
jo
push
outsl
sbb
xor
xlat
cmc
test
fdivl
lods
sahf
in
fucom
and
cltd
lret
sbb
lock
mov
fsubr
jns
dec
ljmp
popa
mov
or
outsb
inc
into
maxps
inc
outsl
jbe
js
mov
pushf
popf
loopne
or
and
mov
cmp
test
cmp
test
xor
pop
jp
lods
xchg
or
cmp
rol
push
mov
scas
ljmp
in
loop
ss
aad
jg
pop
cmc
sarb
std
loopne
add
mov
sub
in
push
roll
scas
ja
and
push
rcll
mov
dec
outsl
inc
shrb
and
adc
mov
mov
cmp
pop
mov
and
insb
loopne
inc
sarl
ret
xor
sub
add
and
hlt
jae
gs
add
fnstsw
in
adc
jg
mov
ret
sub
test
sti
cmp
dec
xchg
mov
jbe
stos
adcb
faddl
popf
dec
inc
xchg
cli
pop
inc
mov
aad
cmp
popa
cmpsb
cmpsb
popl
fadd
or
popf
pop
sbb
dec
mov
movsb
dec
mov
bound
sub
cmc
dec
rcll
out
mov
and
in
push
stc
push
jp
test
imul
lods
repnz
outsb
xchg
cmpsl
loop
or
dec
add
xchg
push
jbe
inc
pop
outsb
mul
shlb
sbb
sbb
jo
fwait
pop
xor
negl
arpl
mov
movsb
xchg
cwtl
dec
fnstenv
xchg
sarb
sbb
rol
cli
rorl
ljmp
std
stos
jp
cvtps2pd
pop
and
mov
out
xchg
sarl
fsubl
xorb
rcr
ds
lahf
mov
inc
push
xchg
rcl
lea
xlat
mov
popa
mov
push
popa
out
xchg
mull
nop
sub
add
pop
jns
adc
sbb
lock
xchg
dec
testl
add
iret
pop
push
dec
cmp
add
repnz
data16
stc
test
mov
mov
out
push
ret
inc
push
xchg
pop
inc
mov
stc
sbb
fistpll
shrl
push
jge
sub
lcall
fmul
add
mov
ret
mov
out
mov
call
test
gs
mov
aad
mov
lods
ljmp
mov
adc
jge
push
jns
in
aas
mov
dec
arpl
imul
push
jl
dec
xor
es
or
inc
mov
mov
mov
cmp
mov
fcmovnbe
xchg
mov
mov
jns
mov
mov
inc
ja
sub
push
cwtl
pop
pop
cltd
jnp
inc
pop
xchg
mov
cltd
lea
push
in
cmpsl
xor
int3
in
loop
push
shl
xor
push
and
in
aad
cmp
sbb
xor
fstl
movsl
sbb
rcl
into
add
xchg
add
ret
add
imul
inc
arpl
dec
push
stc
mov
stos
mov
addr16
mov
dec
mov
dec
adc
fisubrl
insl
pop
xchg
aaa
pop
repnz
leave
insl
mov
jae
jns
scas
cwtl
mov
add
add
push
xlat
inc
in
out
sub
daa
sub
cmp
xlat
cmp
imul
movsl
in
inc
rcl
xchg
scas
rorb
loopne
mov
jmp
loop
mov
lock
dec
dec
movsb
add
jg
aaa
je
shlb
nop
test
loop
aas
adc
imul
jbe
subl
pop
jp
out
minps
push
xchg
fistps
scas
or
aad
cmp
movsl
jnp
cmp
mov
rorl
dec
xor
dec
fcomps
sbb
imul
fnstsw
inc
mov
in
mov
int3
stos
add
cmp
sbb
inc
leave
je
fs
lds
loop
mov
jecxz
loopne
cmp
pmulhw
push
cmp
loopne
cmp
sbb
dec
popa
stos
push
adc
or
stc
or
cmpb
int
sbb
pop
fidivrs
lcall
pusha
test
mov
les
nop
jp
xor
cmp
add
lds
das
dec
shl
jmp
mov
stos
pop
mov
sahf
push
push
decl
xor
fldt
clc
xchg
inc
cmp
lcall
pop
jmp
pop
cmpsl
push
loopne
mov
or
int3
mov
gs
in
mov
cli
or
aam
inc
andb
lods
loope
jmp
scas
add
mov
jmp
roll
ja
stos
pop
pop
dec
ret
outsb
mov
or
inc
sub
sbbb
xchg
dec
mov
ljmp
mov
lret
fidivl
mov
aad
call
jns
adc
movsl
and
nop
mov
cmp
mov
xchg
and
mov
fisttps
clc
out
sub
aas
inc
xchg
mov
mov
xor
sub
loop
imul
mov
test
ja
xchg
lret
mov
fbld
and
mov
sarl
jg
sub
popf
rorb
addr16
jge
push
cltd
jmp
movsb
and
lock
xchg
inc
cmp
or
pushf
insb
lret
fmuls
dec
mov
mov
sbb
leave
mov
sub
and
cmpsb
dec
mov
and
add
or
arpl
and
test
xchg
mov
or
notl
adc
mov
xor
sub
xlat
aad
mov
pop
imul
notl
cmp
out
and
inc
jno
stc
scas
cmp
test
sub
pop
add
je
sbb
cld
ja
pop
test
push
pushf
cmp
ljmp
cmp
shlb
push
and
lret
fwait
mov
push
inc
sbb
sbb
or
xor
sub
jmp
inc
lds
adcl
mov
cwtl
sub
sub
and
aaa
pop
jg
mov
push
sub
mov
insl
bound
mov
aad
js
mov
pop
adc
jb
pop
std
mov
dec
or
pushf
lahf
jge
insb
sbb
sbb
adc
pop
test
iret
loopne
out
fwait
inc
gs
sti
adc
imul
xor
cmp
pop
aam
mov
sbb
repnz
or
mov
repz
pop
mov
in
movsb
fcoms
fs
ss
test
pop
in
pushf
xor
aad
jp
mov
dec
cmp
icebp
cmp
inc
dec
push
mov
into
mov
call
xor
xchg
addb
stc
lds
ficompl
push
in
dec
mov
mov
dec
subl
or
push
in
cli
mov
or
lods
mov
pop
sub
and
ss
push
mov
or
pop
js
mov
push
fstpl
push
nop
mov
xor
out
pusha
sub
sar
xor
pop
testl
xorl
inc
inc
pop
xor
jp
int
mov
push
mov
imul
xor
jmp
lcall
inc
fsub
push
jl
lds
mov
cmp
pop
jnp
addr16
in
rcr
movsl
mov
leave
or
mov
cmp
xor
popa
ret
jg
and
xchg
stos
mov
in
cwtl
xchg
mov
aam
call
call
lds
jno
imul
inc
in
loop
sub
pop
pop
fldt
dec
and
push
mov
loop
push
xchg
mov
test
pop
popa
out
sbb
ljmp
cmpb
leave
push
jp
jbe
push
pop
enter
movsl
jecxz
lret
xchg
xor
scas
mov
stos
scas
add
neg
insl
xchg
jmp
mov
movsl
cmp
cmpsb
push
les
sarb
jge
cmpsb
sub
pusha
pop
inc
mov
cmp
mov
dec
dec
sub
inc
dec
sub
pop
cmpsb
cmp
push
sub
sbb
outsb
xor
insl
outsb
push
out
mov
loopne
repnz
mov
pop
jne
gs
sbb
add
in
inc
cmp
icebp
scas
pop
xchg
loop
or
mov
lds
cwtl
inc
mov
pop
mov
xchg
lret
sub
adc
int
push
lds
jmp
push
pop
mov
mov
cmp
scas
xchg
push
leave
lock
xchg
inc
push
fidivl
inc
xchg
push
jbe
push
pop
mov
add
xorb
das
dec
adc
inc
mov
jg
in
dec
and
xchg
imul
xor
sub
mov
mov
lea
popa
mov
je
sbb
pop
xor
dec
loop
sub
inc
in
leave
mov
push
sub
bound
ljmp
inc
mov
leave
add
scas
insb
mov
xchg
ss
cltd
in
in
pushl
pop
lods
not
or
insb
add
pop
out
movsl
jg
nop
mov
cmp
xchg
cmp
jbe
sbb
inc
mov
fwait
and
add
jae
imul
sbbl
ss
mov
jnp
jo
stc
and
or
sahf
mov
or
int
hlt
je
adc
sbb
lock
fisubrl
jecxz
fistps
jne
jbe
rcl
or
imul
pop
out
rol
cmp
xchg
ficoms
out
sub
and
push
xchg
ljmp
jae
call
sub
outsl
xor
pop
es
mov
push
in
cmpsl
sahf
cmp
fstps
mov
adc
push
scas
jae
xchg
dec
pop
cmp
and
and
imul
xchg
ds
fsubl
or
jno,pt
adc
jae
xlat
xchg
and
sbb
aas
lea
sbb
cltd
jbe
cld
pop
mov
loope
fdivl
push
inc
mov
push
adc
stos
les
insb
mov
mov
dec
sbb
cmp
daa
xchg
add
dec
leave
fnstsw
ja
fbstp
adc
lea
jb
lret
inc
push
xor
cmp
and
sub
lock
inc
fwait
or
xchg
pop
in
popf
adc
addr16
pop
cmpsb
jns
mov
fistl
or
pushf
stos
jbe
mov
adc
xor
xchg
mov
push
imul
and
jns
imul
push
mov
jl
loope
int3
and
push
sbb
mov
cmp
mov
outsl
xchg
outsl
mov
ret
mov
push
xchg
jnp
sti
hlt
push
in
add
icebp
mov
mov
dec
sub
rorl
push
inc
jbe
shll
push
pop
push
add
stos
push
popf
and
ja
loop
fistpll
test
mov
or
xor
cmpsl
xor
and
xchg
jmp
ljmp
enter
test
mov
push
mov
fdivs
mov
imul
js
mov
xor
repnz
xor
lcall
xchg
push
add
lea
icebp
mov
into
lcall
add
adc
addr16
add
and
pusha
add
mov
inc
sub
or
sti
test
js
push
icebp
imul
daa
fxch
lcall
pop
imul
pop
dec
or
mov
imul
push
inc
stos
testb
xlat
mov
jg
fcoms
insl
fbld
push
shrd
jb
pushf
push
mov
adc
stos
aad
jg
rol
out
sbb
push
sub
lods
xor
sbb
cmpsb
and
rcr
sahf
or
jg
mov
mov
repnz
sbb
xchg
pop
dec
insl
push
out
imul
sbb
xor
xor
push
cmp
ja
movsb
dec
push
imul
test
repnz
xchg
lahf
push
mov
sub
data16
xchg
out
dec
jge
iret
inc
repnz
jne
mov
push
xor
roll
das
cmp
cld
or
in
cltd
xchg
adc
mov
loopne
cld
movsb
movsl
xor
xor
xchg
imul
dec
push
arpl
mov
push
rcr
aaa
repz
jno
hlt
lock
in
jo,pt
sbb
not
outsl
mov
dec
push
xchg
mov
mov
lods
cmp
mov
mov
inc
sbb
and
add
sbbb
dec
xor
fstps
std
std
ja
sti
xor
aad
jp
pop
cmp
test
xor
pop
ds
gs
das
add
in
imul
rorl
inc
sbb
sbb
das
mov
divb
and
xor
fs
dec
lods
outsb
and
mov
mov
mov
cmp
jecxz
ror
adc
outsb
jb
mov
fs
xchg
lock
rcll
ljmp
in
std
push
lods
mov
xor
add
movl
popf
scas
cld
sbb
bound
inc
inc
inc
sbb
mov
xor
shll
cs
mov
leave
xchg
sar
aaa
movsb
pushf
movsl
jl
push
dec
pop
jae
insl
mov
xchg
jae
or
inc
add
jl
dec
shlb
adc
jg
mov
das
xorl
cltd
imul
cmp
sbb
test
adc
sbb
les
out
mov
shl
fwait
add
iret
push
mov
xchg
pop
movsb
adc
nop
lcall
sub
sub
loop
in
push
popf
mov
fsubs
mov
jp
aaa
jno
fisubs
add
xchg
ret
std
mov
xor
in
aam
aaa
lods
fstps
mov
fisubrs
cmpsb
xor
lcall
dec
daa
cli
or
xor
pop
insb
and
pop
mov
push
mov
jno
xchg
popf
pop
inc
or
xor
mov
mov
stos
inc
std
jnp
mov
cmp
mov
cmp
dec
out
sbb
mov
inc
xchg
jecxz
sub
subl
push
test
mov
xchg
fsubrp
scas
xchg
pop
call
add
test
cmpsl
xor
mov
jbe
lret
pop
scas
fbstp
jecxz
inc
mov
addr16
mov
adc
lret
cmc
push
in
xor
mov
add
enter
daa
pop
pop
xchg
xchg
jns
inc
sub
jo
xchg
dec
jo
pop
or
aad
repz
or
rorb
sbb
popa
mov
mov
sbb
pop
std
test
out
and
pusha
aas
or
fnsave
std
lea
push
sbbb
imul
or
mov
ret
jbe
sub
jp
int3
nop
dec
fs
push
call
sbb
ljmp
incb
sub
aad
push
sub
sarl
pop
cmc
movsb
sub
mov
sub
mov
and
and
push
out
push
lahf
into
xchg
mov
sbb
push
dec
cltd
adc
jbe
adc
in
cmp
aam
push
insl
xor
mov
dec
iret
pusha
cmp
test
sub
leave
or
adc
stos
xchg
or
jp
pushf
je
pop
xor
scas
lea
fcomps
push
and
cmp
insb
cmc
jle
fsubr
lret
push
jo
sbb
sub
rcl
repnz
xchg
iret
mov
cmp
push
lods
push
cmp
mov
mov
jg
inc
or
pop
int
jge
xchg
fwait
inc
mov
testl
mov
fmuls
mov
mov
add
out
adc
push
jmp
repz
xchg
insl
dec
dec
push
xchg
jmp
insl
inc
mov
push
aas
arpl
inc
std
scas
cmp
dec
lahf
movsb
lods
xor
mov
nop
dec
bound
pop
enter
or
ret
fisttpl
cmp
stos
sbb
pop
mov
mov
and
movl
mov
or
daa
xchg
sub
pop
xor
sub
cmp
out
sbb
xchg
movsl
arpl
sub
mov
adc
mov
dec
mov
test
adc
or
hlt
repz
add
ss
fldenv
pop
stc
cld
sbb
sub
out
add
in
inc
repz
bound
outsl
popf
aad
cmp
xor
fidivs
and
push
pop
push
dec
les
mov
jle
and
ror
add
and
std
dec
nop
jmp
and
mov
fcmovbe
jo
inc
and
int
push
jle
mov
sub
inc
jmp
add
cwtl
sbbb
test
bndstx
in
lea
xchg
shll
int
adc
outsl
imul
icebp
hlt
mov
push
pushf
test
push
jb
aam
ja
dec
sti
in
outsl
cmp
in
cmpsb
sahf
fstp
mov
jb
push
movsb
out
pop
cmp
xchg
lahf
les
sbb
jns
es
cs
inc
push
cmpsl
jb
in
mov
outsb
jae
fwait
int
jno
loop
jno
mov
cld
inc
push
pop
aam
in
push
mov
inc
stc
movsb
cmp
lret
ret
test
mov
movsb
xchg
push
mov
push
mov
push
loop
mov
mov
mov
ja
mov
jb
cwtl
jecxz
out
outsl
jmp
adc
int
pop
std
fcmovnbe
jg
pop
lods
data16
leave
aad
sahf
add
sbb
clc
mov
in
daa
ret
cmc
add
push
iret
call
cmpsl
sbb
dec
scas
icebp
mov
test
dec
mov
out
cmp
jmp
ficoms
in
rcr
sbb
and
mov
addr16
adc
jnp
sahf
test
jnp
loopne
arpl
mov
ljmp
mov
call
inc
lea
mov
cmpsb
ret
or
dec
jns
addr16
sahf
adc
pop
jne
xchg
lds
aas
sbb
cli
xor
and
or
jecxz
or
subb
shll
xrelease
dec
xchg
ret
cld
sub
mov
adc
mov
mov
data16
ja
lcall
xchg
jno
outsl
cli
ret
xchg
push
andl
or
jo
aaa
aaa
or
fxtract
jnp
xchg
loopne
mov
push
cmc
cwtl
mov
aam
push
sbb
ja
movsb
inc
jge
or
lods
cmp
outsl
pop
in
js
pushf
inc
iret
clc
call
xchg
fiaddl
dec
add
xchg
sbbl
push
icebp
lret
rclb
hlt
cmp
pop
jle
mov
loope
ljmp
xchg
movntq
mov
mov
ret
cmp
dec
ret
aad
aas
cmp
outsb
inc
mov
ljmp
lock
mov
fidivrs
cmpsl
adc
out
sbb
test
cltd
inc
inc
pop
adc
in
cwtl
jns
lcall
dec
mov
cmp
mov
jp
xchg
lock
stos
and
ret
addr16
ret
cld
xor
pop
pop
sbb
in
bound
shlb
jns
sbb
lcall
xchg
lods
cmp
add
cmpsl
loope
jnp
orb
icebp
outsb
mov
cmp
xchg
xor
pop
dec
cmp
arpl
xchg
addb
popa
fstps
xabort
cmp
movsb
arpl
pop
ret
stos
cmp
sbb
add
jle
jnp
in
maxps
mov
leave
lods
xchg
xchg
lret
pop
mov
test
setnp
mov
int3
outsl
lea
ss
enter
cmp
dec
xor
mov
negb
stos
add
push
cmpsb
mov
lods
fistl
and
jmp
je,pn
xor
aad
js
push
mov
inc
push
jp
pop
sarl
xor
popl
orb
jle
popf
iret
add
loope
mov
movsl
sbb
dec
push
dec
ror
testl
cmpb
pop
pushf
fistps
pop
or
ret
cs
mov
lcall
or
lcall
scas
cmp
add
pop
rorl
mov
cmc
lret
add
cmpsb
adc
adc
cli
in
jle
fisttpl
popa
dec
inc
imul
fldt
mov
test
aaa
pop
addr16
xor
pop
insb
push
orb
cs
pop
pop
lods
xchg
out
hlt
and
jne
shlb
sahf
aad
orl
inc
data16
mov
insl
nop
or
xorb
mov
es
iret
push
sub
cld
jle
sub
pop
pop
sbb
repz
and
xor
sbb
pop
gs
mov
inc
dec
int3
call
mov
add
imul
add
pop
or
ja
fcoms
in
hlt
lcall
enter
mov
push
test
adc
sarl
inc
repz
jl
xchg
out
mov
inc
xlat
in
lods
add
adc
mov
dec
ret
mov
cmp
stos
and
stc
in
sbb
clc
mov
mov
mov
leave
cmp
dec
lret
and
push
fildll
cltd
fld
mov
sti
jecxz
adc
data16
lds
sub
mov
out
filds
sbb
shrb
mov
jbe
ror
jo
addr16
mov
das
sbb
xchg
push
rcrb
cli
jne
insl
into
nop
mov
aas
sarl
dec
dec
sbb
pop
and
sub
inc
jb
inc
out
dec
mov
movsl
mov
adc
es
js
sub
je
sub
mov
pop
fwait
cmp
stos
hlt
roll
inc
jo
pop
sarl
aas
sub
push
ss
jbe
mov
jns
dec
dec
les
mov
pop
mov
push
outsl
pop
les
xlat
mov
enter
repz
popf
shr
or
sti
enter
lea
push
ja
test
inc
test
add
aam
cs
sahf
movb
fwait
out
pop
cmp
lcall
push
xor
movl
loopne
leave
loopne
and
and
in
xchg
cmpsl
repz
repnz
mov
test
mov
push
std
lahf
jnp
into
push
mov
mov
mov
addl
lods
int
testb
ljmp
pop
mov
mov
adc
rcrb
mov
sti
mov
ds
push
jo
mov
fsubrl
mull
pop
cmc
out
mov
shl
fsubs
pusha
inc
lcall
clc
cmp
mov
push
or
sbb
sbb
mov
cwtl
or
sbb
out
jg
xchg
cmp
test
jae
fldlg2
lods
in
sbb
mov
mov
cmc
in
cld
scas
cmp
clc
movsb
movsb
xor
dec
lahf
or
sbb
dec
leave
pop
int
in
lahf
jb
mov
or
adc
roll
je
pop
or
cmp
test
xchg
sti
jmp
loop
ss
inc
inc
or
ret
jbe
cld
ja
cwtl
loop
lahf
xchg
inc
sub
ja
pop
loopne
cmc
fmuls
inc
pop
std
repnz
pop
inc
stos
imul
mov
mov
jp
mov
jle
fbld
dec
test
push
fldenv
movsl
push
mov
jbe
mov
jecxz
arpl
repz
push
imul
and
add
pop
loopne
inc
call
inc
call
xlat
xor
cmp
daa
js
fnstsw
xor
or
dec
enter
jecxz
aad
push
loope
or
jmp
xor
push
arpl
inc
mov
cltd
sti
fcoml
fcompl
push
aam
ss
pushl
test
pop
js
dec
dec
jb
adc
cltd
sbb
adc
and
or
pop
sbb
mov
pushf
rcrb
lret
sub
loopne
repnz
lds
movsb
inc
sub
cmp
fcomps
add
mov
mov
cwtl
addr16
pushf
into
xchg
in
icebp
in
adc
and
xchg
mov
fwait
pop
dec
pop
mov
aas
push
mov
lds
mov
xor
or
dec
mov
dec
idiv
mov
pop
push
cwtl
or
ljmp
aad
dec
cli
mov
ja
mov
push
push
dec
shrl
push
popa
adc
or
sbb
shr
adc
hlt
lods
sub
mov
xor
pushf
testb
jo
sub
movsl
and
lcall
movl
fwait
sub
mov
mov
out
sbb
lret
xchg
std
xchg
dec
pop
inc
push
rcrl
mov
lds
xchg
cs
rcrl
sbb
js
int
ja
shl
push
sub
test
test
jp
inc
pop
inc
imul
aad
sbb
call
testb
push
mov
test
ljmp
inc
jmp
cld
jbe
sub
popa
mov
lds
addr16
lahf
fdivl
mov
xchg
shrl
test
sbb
jne
push
and
cld
ja
inc
out
mov
popf
ja
std
cmpsl
add
inc
mov
jo
push
inc
scas
and
data16
or
lret
rcrl
adc
ljmp
imul
xor
sbb
inc
cmp
je
mov
and
jge
or
fimuls
mov
cs
or
dec
imul
jo
or
test
leave
inc
add
sub
fisubrs
xchg
and
xchg
xlat
es
test
cs
xor
fcom
sub
mov
dec
insl
sbb
or
ljmp
jnp
call
mov
scas
jo
in
fmulp
jl
adc
inc
push
mov
cld
mov
divl
hlt
ret
mov
outsl
roll
lret
cwtl
in
das
xchg
shlb
jns
ret
xor
xor
sub
cmp
mov
dec
dec
rcl
xor
je
out
mov
xchg
sub
movsb
inc
add
dec
mov
loop
inc
shrl
sbb
mov
int
inc
add
orb
int3
inc
xchg
inc
fwait
leave
je
add
mov
shl
pop
lcall
add
fisubrs
jmp
jnp
js
shlb
cltd
test
xor
dec
test
out
cmp
das
scas
jo
cmp
jno
adc
test
rclb
lock
std
in
or
dec
inc
mov
mov
call
dec
int
push
push
or
out
sbb
mov
aam
inc
mov
fnstenv
cmpl
push
push
inc
jge
xchg
scas
ljmp
add
dec
out
cli
lahf
lret
inc
aad
mov
mov
mov
hlt
push
jb
icebp
mov
sahf
cmc
sbb
outsl
int
decb
xchg
sti
pushf
jb
pop
sbb
inc
mov
leave
es
jle
or
push
sbb
mov
jns
xor
rolb
test
loopne
das
fnstenv
sub
shr
out
xchg
inc
bound
insl
inc
cmpsb
hlt
aas
jp
cwtl
push
js
addr16
adc
push
daa
push
or
rcl
insb
fldenv
mov
fnstenv
orl
mov
dec
add
xchg
jmp
mov
push
jo
mov
scas
sbb
sbb
xlat
and
xchg
xor
and
cli
insb
xor
and
pop
xor
mov
stos
sub
pusha
lds
insb
btl
and
xlat
mov
negb
rcll
addr16
mov
xor
mov
test
pop
jb
xchg
dec
roll
push
mov
push
pop
ficoms
inc
sbb
mov
inc
push
repnz
jl
pusha
jl
adc
add
shrl
pop
dec
pop
rcll
insl
mov
sub
push
jae
sbb
push
nop
pop
xor
or
arpl
pop
jp
dec
fsubr
ja
mov
rcrl
in
out
mov
jmp
sbb
lcall
pop
dec
mov
lea
movsb
out
mov
pop
lock
js
fsubs
das
cs
jmp
inc
xor
sarl
push
lds
sahf
aaa
fcmove
jne
push
in
shrb
sbb
add
and
push
sub
ret
sbb
xchg
fcmovnbe
lret
hlt
adc
mov
in
xchg
call
sub
repnz
movsl
push
mov
adc
sbb
mov
outsb
mov
adc
push
loop
data16
ljmp
cmp
adc
jno
loope
sbb
pop
dec
xchg
repnz
sbb
cltd
jns
jg
fucomi
xor
and
sar
je
int3
sbb
aas
xlat
mov
dec
lret
and
xor
sub
mov
mov
sarb
ljmp
inc
out
popa
xchg
stc
dec
add
push
inc
pcmpeqd
cli
lds
sbb
ja
xchg
dec
jecxz
movsb
das
cli
jo
push
and
std
cmc
js
ret
cld
jp
adc
out
inc
inc
xchg
adc
xchg
stos
mov
mov
in
int
scas
repz
insb
lret
fildl
addl
shrb
add
or
dec
sub
and
int
fadd
mov
ret
popa
insb
lods
and
push
and
call
test
dec
or
iret
add
adc
or
add
das
inc
push
mov
jecxz
push
cmpsl
je
popa
ja
sub
adc
fcmovbe
adc
and
cmpsl
lret
ds
xor
out
mov
pushf
in
dec
mov
dec
adc
push
pop
pop
push
xor
sub
jb
jmp
enter
iret
mov
xorb
shlb
ret
pop
in
test
cmc
mov
inc
or
popa
in
in
cmp
lret
in
jo
int3
sbb
mov
cmp
sarl
cmp
pusha
ss
loope
fs
cvttps2pi
add
jns
ret
adc
jno
xchg
sub
test
insb
test
hlt
sub
pushw
mov
jmp
sub
dec
pop
int3
out
jle
push
xchg
jmp
add
out
and
mov
adc
inc
shrb
popf
push
repz
jle
daa
dec
xchg
cltd
ljmp
jo
in
cmp
popf
jo
shrb
mov
push
inc
mov
mov
mov
push
adc
pop
sti
lcall
cmovae
incb
xor
shll
lret
sbb
cmpsl
movsb
xchg
rcrl
jle
mov
pop
add
arpl
adc
sbb
cmp
pusha
add
cmp
mov
mov
rcll
ja
mov
push
test
pop
sbb
sbb
and
jns
leave
fisubrs
lock
pop
repz
jmp
lock
jmp
adc
je
outsl
mov
inc
fdivrl
push
inc
push
int
mov
fdivrs
mov
xchg
jno
inc
ret
addr16
mov
insl
shlb
mov
push
scas
xchg
inc
ret
je
push
icebp
inc
xchg
pop
cmp
jmp
loopne
and
inc
out
xchg
jmp
mov
sbb
lods
mov
sbb
sbb
cld
lret
add
sbb
inc
dec
lret
test
loop
cmpb
rcr
mov
faddl
add
mov
and
movsb
jmp
gs
lret
xchg
mov
in
add
mov
push
push
add
push
cmp
mov
xor
push
jge
pop
push
mov
fsubrl
fwait
xor
pop
insl
pop
into
imul
out
lret
imul
fwait
movsl
repz
mul
fmulp
xor
loop
sub
adc
jb
mov
push
call
push
mov
adc
dec
sbb
inc
and
mov
and
sub
xchg
fsubrs
push
ja
inc
std
jnp
in
in
pop
dec
gs
rol
adc
inc
add
fldenv
ds
cmpsb
ja
popa
or
mov
lock
adc
cld
cmp
and
into
ss
div
inc
sub
jp
xor
push
inc
xchg
gs
mov
mov
cs
movsl
icebp
xchg
cmp
cmp
jmp
mov
adc
out
jbe
dec
sbbl
in
cmp
inc
inc
fcomi
fs
jae
jne
cmp
push
jo
push
cwtl
push
movb
add
cmp
popf
es
xlat
mov
adc
or
jne
scas
std
shr
adc
adc
mov
pop
inc
cs
push
rol
out
sub
divb
nop
test
clc
jmp
test
xlat
mov
jb
outsl
mov
push
inc
add
mov
lds
fcmovnb
jmp
mov
aad
jge
lds
andl
jno
push
inc
inc
inc
int3
inc
jg
add
adc
or
inc
iret
fistl
mov
fisubrl
test
insb
sarb
xchg
std
lock
out
and
jecxz
insl
fistpl
imul
pop
xchg
mov
cld
shl
mov
jecxz
scas
sub
repz
fs
push
mov
mov
mov
loope
cli
pop
push
sbb
ja
scas
and
mov
cmp
mov
popf
movsb
fsubs
pop
lods
leave
hlt
or
je
fwait
xchg
dec
js
xchg
add
out
out
push
scas
repz
cmp
daa
rorb
cwtl
repnz
std
add
dec
cltd
mov
pop
out
xor
outsl
cmp
fiaddl
in
pop
mov
pop
jle
stc
repz
shll
cs
subb
scas
pop
sub
mov
fstps
shrl
xchg
test
adc
aaa
repz
test
subl
ds
es
cmp
cmc
lahf
jle
je
lcall
cmpb
push
fnstsw
push
addb
cmpsb
push
jp
xchg
jnp
stos
idivl
dec
adc
lea
mov
xor
stos
in
inc
mov
insl
mov
sbb
push
jmp
subb
push
js,pn
cmp
xchg
mov
daa
out
shll
pop
in
mov
push
dec
cmpsl
in
mov
in
jl
xchg
push
and
sub
bound
or
sahf
nop
shl
xchg
cmp
je
xchg
pop
inc
test
icebp
jno
cmpsb
mov
mov
loope
and
pushf
addr16
sbb
shrb
data16
sub
cmc
xor
cwtl
shll
outsl
movsl
xchg
cmp
mov
cmp
lods
xorl
flds
cmp
stos
pop
das
xor
mov
cmp
add
xchg
call
adc
push
and
int3
xchg
or
sbb
push
js
sub
test
push
or
mov
jp
push
aas
cmc
mov
popf
lods
rcl
insb
cltd
or
test
sub
pop
insl
data16
int3
inc
cld
ja
inc
fimull
jle
pop
xor
das
jl
mov
xor
insl
adc
nop
inc
sub
call
in
ja
inc
aad
sbb
mov
imul
pop
xchg
iret
add
test
ss
mov
sarl
inc
push
inc
sub
mov
stos
pop
mov
dec
add
lea
mov
divl
mov
fstpt
xor
mov
or
in
icebp
test
lds
xorl
mov
test
cmp
mov
push
adc
dec
pop
xor
cmp
jmp
add
adc
ja
sbb
jecxz
cld
mov
adc
shll
jg
add
push
outsb
sub
fwait
pop
jg
popf
imul
mov
ret
pop
in
jb
pop
add
sbb
call
xor
icebp
inc
xchg
jmp
mov
daa
test
stc
pcmpeqw
cwtl
xchg
cmp
cmp
fnstsw
pop
out
mov
push
dec
add
popa
subb
push
cmc
mov
pop
test
or
jle
push
lock
rclb
shrl
outsb
jo
scas
xchg
push
addl
stos
dec
bound
mov
popf
int3
je
cmp
jmp
mov
popa
repnz
adc
test
xchg
jmp
pop
sbb
mov
in
add
cmp
jns
das
cmc
lret
jg
and
scas
pop
pop
adc
mov
cmc
jmp
addr16
cmp
xor
jo
in
jno,pt
adc
mov
vmwrite
jmp
mov
orb
stc
cltd
push
stos
dec
test
popf
inc
dec
fs
push
add
push
loop,pn
frstor
mov
jno
push
iret
into
dec
lret
adc
sub
mov
mov
pop
sub
xlat
and
stos
je
or
aaa
mov
xor
scas
and
jo
in
das
jns,pn
outsb
cmp
jle
sbbl
in
pop
call
leave
xchg
mov
aaa
xchg
lds
jno
dec
lret
mov
adc
scas
imul
mov
mov
stos
jmp
pop
xchg
test
or
lock
lret
jns
inc
jb
push
mov
sub
or
mov
pop
nop
syscall
or
lock
cli
out
push
inc
mov
test
fsts
js
fs
adc
dec
or
rcrl
mov
pop
pop
loop
js
jmp
mov
xchg
ljmp
daa
hlt
lds
fsubr
gs
fwait
clc
or
in
lea
and
out
adc
jecxz
and
push
int
mov
pop
sbb
jae
fstp
fidivs
rcrl
jnp
fisttpll
dec
adc
icebp
arpl
repz
cmp
jl
pop
push
in
pop
loop
xlat
xor
adc
bound
sub
jge
xchg
mov
push
lds
insl
add
cmp
inc
xchg
out
daa
cltd
add
out
jp
dec
movsl
dec
repnz
inc
pusha
pop
dec
cmp
out
sbb
leave
and
and
scas
xchg
push
cli
pop
shrl
fildll
scas
hlt
iret
outsl
insl
aaa
pop
pop
push
loopne
sub
lods
dec
out
cmp
pop
xorl
push
jmp
jl
pop
add
cmpsl
mov
in
sbb
out
mov
mov
or
pop
mov
sub
cli
lret
mov
insb
sbb
mov
mov
insb
adc
mov
push
das
popf
call
xchg
daa
or
imul
mov
call
into
cltd
and
cmpsb
rorb
sbb
cmp
add
gs
call
ja
jns
adc
sar
mov
or
push
and
dec
insb
and
imul
adc
rcr
cmpsb
xchg
push
and
popa
mov
mov
inc
inc
mov
testb
pop
repnz
fistpll
pop
mov
jne
mov
sbb
into
imul
mov
or
dec
pop
add
and
mov
xor
jns
jne
stos
jae
int3
shrl
dec
jmp
or
mov
push
subl
push
sbb
or
fnsave
sub
cmc
or
lahf
ds
jmp
int3
push
dec
lods
cmp
cmpsl
adc
lods
pop
mov
sub
daa
mov
cli
jbe
lock
out
xchg
loopne
pusha
add
std
xor
pop
repz
rol
inc
inc
adc
mov
mov
add
shrb
fcmovb
xchg
ljmp
shl
pushf
jns
rcrb
mov
int
sub
jae
lods
aas
jmp
das
or
out
lahf
js,pn
fisubrl
sbb
dec
out
push
inc
fildl
movsl
dec
enter
xchg
enter
ja
loope
xorb
pop
xor
and
movsl
sub
mov
add
outsb
rolb
dec
inc
adc
jo
xchg
outsl
fucomip
xchg
adc
mov
mov
cs
iret
and
into
xchg
or
adc
aaa
xor
pop
rorl
notb
sbb
push
sub
pop
int
adc
and
pop
int3
jg
sbbl
cmp
std
adc
adc
or
into
fcmovbe
or
xchg
pop
jg
push
dec
mov
or
cwtl
push
mov
sbb
push
jl
imul
xor
popa
iret
and
stc
push
cltd
mov
ficomps
sbb
and
sub
cmpsl
pop
je
mov
cmp
fs
lods
mov
popa
rcrl
mov
or
jl
mov
or
cmp
divb
ss
bound
aas
inc
or
ret
cld
sti
ljmp
xchg
pop
or
pop
lahf
push
mov
push
in
adc
inc
je
fsubp
xor
and
xchg
xor
in
mov
out
pop
cwtl
imul
push
outsb
mov
or
clc
or
push
scas
loop
aaa
leave
sub
push
cld
rolb
lahf
or
push
jl
sti
jns
nop
rcr
in
fisubs
sub
stos
imul
js
mov
shrb
mov
or
sub
push
and
ret
dec
xchg
lret
lret
out
xchg
popa
dec
pop
or
inc
jo
mov
sti
fidivl
inc
inc
jbe
jnp
jge,pn
mov
jg
les
sub
faddl
inc
xchg
movsl
popa
jne
mov
jp
cmc
scas
jnp
or
mov
test
out
cs
out
out
bound
inc
xchg
imul
data16
ljmp
lcall
add
std
movsl
and
fwait
dec
xchg
dec
cmpsb
test
jo
jp
cmc
mov
jle
jbe
pop
daa
mov
andl
sbb
cmpsb
movsb
pop
xlat
pop
pop
xor
shlb
cmp
cmpb
enter
xor
pop
call
push
add
pop
adc
mov
and
es
ja
testb
jl
mov
rclb
sub
mov
push
stos
imul
mov
pop
xchg
pop
dec
aad
out
sbb
inc
stc
push
int
pop
mov
je
mov
push
push
and
rorb
pop
loop
pop
int3
loop
gs
cs
lods
movl
lds
cmp
lds
xchg
jne
call
mov
jmp
push
aam
pusha
and
inc
sbb
adc
mov
lods
and
lret
loope
scas
xchg
loopne
dec
mov
push
repz
dec
and
cmpb
inc
push
addl
sub
jns
fbstp
sahf
push
sti
call
adc
jne
rcrl
xchg
pop
cwtl
mov
and
roll
cmp
push
aam
inc
pop
dec
jle
pop
rorl
cmp
cltd
sbb
pop
jg
ds
xchg
lods
mov
push
enter
testl
ds
xchg
lods
inc
sbb
cmp
fnstcw
mov
cmp
mov
dec
pop
test
repz
push
cmp
mov
addr16
bound
enter
movsl
or
and
sub
mov
adc
mov
ljmp
gs
std
repz
test
out
xchg
sub
and
adc
xchg
or
or
add
mov
and
mov
cmp
ret
rorl
out
fsubrs
nop
daa
das
adc
jg
rcr
out
stos
xchg
pushf
pop
xor
mov
or
ficoms
loop
call
mov
insb
lret
divl
pop
push
push
arpl
add
push
and
popa
mov
mov
sahf
mov
fcmove
dec
out
dec
xlat
dec
pop
xchg
pop
mov
sahf
inc
sti
push
adc
movsl
jae
jmp
push
push
mov
leave
mov
cmc
cs
imul
les
xchg
or
outsb
aaa
push
movsl
jge
or
pop
push
mul
sub
fmuls
lret
sub
mov
rcll
ds
int
xor
insl
pop
xor
das
add
or
xchg
add
jle
inc
mov
orb
insl
fldenv
sub
mov
fistl
cltd
push
pop
bound
cs
mov
inc
and
inc
push
in
jo
inc
dec
fisubs
push
inc
fnsave
addr16
out
and
out
adc
ljmp
out
push
add
push
add
not
adc
push
jae
out
mov
push
lock
rclb
das
inc
lahf
cwtl
pop
aam
test
inc
jl
or
jmp
sbb
add
rclb
add
jle
cmpsl
cld
repnz
popa
lret
and
and
test
aas
mov
xor
rclb
es
addr16
inc
mov
xchg
subb
cmp
cld
mov
cmp
cmc
sbbl
setnp
push
adc
movsl
sbb
ljmp
fidivrs
mov
dec
cs
popa
xchg
scas
addr16
push
adc
ljmp
cltd
scas
pop
mov
test
jae
test
dec
jp
scas
jmp
call
imul
scas
es
ret
pop
int
mov
inc
bound
test
push
jmp
fcmovb
arpl
idivb
push
stc
call
shll
fwait
popa
in
aaa
and
jbe
loop
xor
jecxz
jne
aas
jae
cmc
ljmp
mov
leave
xorl
gs
xor
xlat
or
in
daa
ljmp
xchg
roll
ja
repz
mov
cld
lock
lods
fmuls
mov
mov
loopne
adc
pop
cmp
fisttps
setns
sbb
xchg
xchg
push
and
inc
pop
stos
rolb
and
sti
jnp
in
mov
enter
ret
xchg
out
nop
cwtl
cwtl
mov
xor
mov
lcall
jl
add
xlat
test
mov
or
mov
jmp
push
mov
mov
pop
aas
jp
or
nop
pop
and
rcr
adc
shl
pop
mov
or
sbb
or
xor
int3
add
stos
push
outsl
mov
mov
mov
or
jmp
out
mov
pop
and
pop
jnp
pushf
fs
fs
ds
icebp
xor
ret
pop
jno
popf
sub
jne
xlat
arpl
stos
cmp
lods
cmp
clc
sbb
insw
and
sarb
nop
shr
iret
imul
cmpsb
fidivs
cld
xor
sbb
or
mov
incl
nop
cmp
jnp
inc
mov
stos
mov
sarb
inc
in
popf
or
mov
incb
cmp
xlat
adc
adc
addr16
xchg
pop
fnstenv
out
das
out
xchg
mov
jne
cmp
enter
mov
jge
and
sub
mov
fstpt
fmull
movsl
hlt
jmp
mov
pop
out
xor
ficomps
leave
add
xchg
jle
ss
add
ljmp
sahf
imul
addr16
inc
out
loop
cmp
outsl
cmp
inc
sub
and
not
imul
jle
test
aas
stc
add
pushf
sti
xor
and
sti
sarl
nop
repz
inc
fwait
pop
ds
out
sbb
jmp
in
fcmovnbe
sbb
jno
enter
xor
dec
fcmove
xchg
mov
sub
mov
cmpsl
lock
add
adc
movsb
popf
ljmp
ret
outsl
daa
or
mov
sbb
fcompl
push
jae
xor
cmp
jb
xor
out
loop
call
lret
push
mov
insb
scas
das
icebp
sahf
pavgb
scas
push
xchg
out
and
iret
push
and
shr
xchg
imul
cld
test
and
and
das
mov
stc
jle
cmc
or
imul
hlt
adc
pop
lahf
jge
xchg
xchg
imul
hlt
xchg
arpl
in
and
sbb
mov
mov
mov
and
rorb
cwtl
clc
push
les
sahf
lods
xlat
xor
outsl
call
ja
xchg
mov
lock
sbb
mov
add
mov
cmp
cltd
dec
pusha
push
mov
aam
xchg
cmpsb
inc
stc
mov
jge
mov
mul
data16
aad
clc
push
mov
mov
ds
pushf
adc
dec
popf
inc
idivb
addr16
pop
cmp
push
mov
incl
jmp
push
pop
js
sub
sbb
and
push
push
mov
sbb
mov
test
outsl
jmp
les
push
mov
xchg
dec
inc
inc
fwait
pop
cld
sub
inc
adc
dec
movsl
or
pop
mov
insl
imul
pop
or
imul
nop
mov
and
add
sbb
data16
add
mov
int3
xchg
push
inc
sti
aas
inc
sub
cmovge
pop
inc
dec
sub
arpl
mov
inc
imul
sbb
loope
lds
test
xchg
fadds
inc
push
inc
adc
xorb
enter
inc
pop
push
insl
cmp
sub
test
notl
ret
int3
pop
and
rclb
stos
inc
push
hlt
in
sub
gs
cs
clc
ret
jmp
aad
pop
cmpl
pusha
jp
mov
mov
movsb
les
nop
in
clc
mulb
add
mov
jp
push
fcoml
inc
pop
xchg
pop
out
adc
inc
repz
addr16
inc
lods
pop
dec
lahf
adc
int
insl
clc
sbb
push
cmp
jo
enter
sub
hlt
test
adc
jge
outsl
mov
insl
adc
mov
repz
push
sub
pop
push
cli
mov
into
or
addr16
adc
lods
or
mov
xor
jmp
sbb
and
add
pop
xchg
cltd
aas
test
xor
test
xor
add
das
pop
fs
mov
fidivrs
xor
stos
ljmp
xchg
sbb
mov
cs
bound
repz
jno
xchg
pop
je
hlt
add
mov
xchg
dec
fstpl
pop
sahf
sbb
pop
sbb
out
addr16
fs
test
adc
lock
movsl
fidivl
inc
das
jg
test
sub
push
jmp
push
sbb
fs
mov
shll
aaa
sbb
iret
xchg
int
lods
and
gs
insb
cmp
xor
sbb
push
mov
sub
xchg
jmp
out
jb
ret
test
test
jl
divl
adc
ss
movsl
imul
insl
outsb
stos
clc
jbe
sbb
inc
cmp
je
sbb
sub
mov
mov
add
ljmp
sub
ret
push
cmp
mov
nop
fucom
push
fldt
fildll
icebp
mov
jg
pop
bound
insl
cmpsl
std
je
dec
aas
push
ds
adc
cmpsb
xchg
ljmp
adc
mov
xor
stos
loope
pop
dec
std
fsubl
adc
faddl
cmpsb
scas
call
adc
push
mov
jecxz
push
inc
dec
xchg
mov
iret
mov
pop
fmuls
les
xchg
faddl
mov
adc
data16
xorb
test
in
xchg
into
push
ret
jmp
jbe
mov
sti
fs
fildll
push
mov
lods
sbb
popf
shlb
sbb
sbb
test
insl
sahf
sub
mov
les
testl
adc
enter
sub
inc
mov
xchg
inc
inc
inc
mov
jb
test
outsb
int3
pop
push
andb
push
int3
fwait
icebp
cld
dec
mov
jnp
inc
sbbl
cwtl
jbe
cs
push
xchg
test
jns
xor
push
mov
pop
sub
sbb
mov
pushf
sub
push
stos
pop
cs
cmp
pop
lods
outsb
or
sbb
sbb
jg
add
pop
or
pusha
fucomip
sbb
pop
adc
mov
repz
mov
and
addb
adc
xor
push
and
pop
je
in
out
mov
lret
arpl
pop
mov
test
aam
xchg
fisttps
mov
movsb
sbb
and
es
icebp
sbb
and
cmp
sti
dec
jb
lahf
mov
jno
xchg
jno
sub
pushf
out
repnz
cmp
ret
ret
jp
lds
dec
jb
jnp
scas
and
pop
lret
add
inc
popf
stc
out
mov
sbb
inc
dec
mov
adc
or
addr16
adc
jmp
and
cmpsl
movsb
xchg
xor
stos
mov
stos
push
insl
popf
mov
packssdw
inc
gs
lret
inc
mov
inc
dec
dec
sti
xchg
xor
jbe
xor
push
ficompl
orl
xchg
xchg
sub
add
sahf
ljmp
std
lds
shll
mov
adc
cli
imul
or
inc
xlat
pop
jno
mov
orb
je
addr16
mov
jle
xchg
sahf
cltd
or
xchg
mov
int
inc
mov
dec
pop
js
cmp
sub
push
ja
shlb
fdivl
pushf
loope
mov
lea
mov
jns
add
push
imulb
mov
mov
test
mov
lea
pop
inc
loop
cld
xlat
xor
add
cmpsb
add
loope
add
jbe
call
sbb
pop
jne
mov
or
mov
inc
arpl
lods
mov
xor
daa
cmp
fidivrs
lret
push
xor
and
mov
mov
jmp
sbbb
inc
mov
sub
add
ss
pxor
jle
ret
jne
sti
push
or
das
ror
ss
push
xor
xchg
xchg
jmp
dec
rclb
jnp
jp
neg
sub
ds
pusha
pop
push
fistpl
je
jae,pt
jge
lea
add
fwait
xchg
xor
lahf
mov
jb
mov
in
lea
add
mov
aaa
push
lahf
xchg
fimull
mov
cltd
inc
mov
mov
ss
sahf
cmp
push
cli
fimuls
cmpsl
xchg
aaa
andl
inc
pop
movsb
cmp
mov
jge
daa
adc
and
mov
and
ret
ret
movsl
jle
ja
xchg
repz
out
sub
xor
mov
jp
fsub
mov
sub
sub
test
jns
and
cmpsb
ljmp
and
xchg
ret
outsb
loope
mov
sub
push
stc
cmpsb
imull
mov
jmp
lcall
xchg
outsl
cmc
inc
data16
fs
dec
xchg
xchg
test
imul
insb
dec
pop
lds
insl
and
add
pop
loope
daa
mov
push
jg
fstpt
inc
daa
pop
inc
fnstcw
adc
lods
mov
lcall
notl
and
in
jo
int3
push
cmp
stc
inc
and
je
add
add
mov
fcoml
and
mov
daa
movsl
int3
sbb
jno
sbb
pusha
lret
xchg
sahf
mov
cmpsl
arpl
lock
jbe
inc
inc
daa
addr16
pop
test
outsl
xor
mov
inc
mov
sahf
add
lods
sbb
ret
dec
arpl
inc
cmp
push
shl
cmp
arpl
aam
xor
jmp
xchg
xchg
xlat
dec
xchg
pop
and
mov
loop
test
clc
jae
jmp
dec
push
xlat
ret
iret
jmp
dec
push
mov
hlt
aaa
pop
loope
add
add
cmp
push
fwait
into
and
mov
in
and
cmp
sti
pop
cltd
js
mov
and
xchg
ds
push
sbb
aam
mov
dec
lods
inc
push
test
mov
fcomp
inc
fisttps
cmp
loope
mov
mov
enter
out
adc
ror
mov
xor
stos
xchg
adc
cmp
cli
pop
loope
jge
push
and
imul
xchg
in
xlat
cmpsb
cmpxchg
icebp
mulb
xchg
cmpl
lcall
icebp
mov
and
pop
arpl
sub
lcall
ljmp
fidivs
dec
mov
popf
in
pop
mov
xor
inc
pop
push
mov
in
adc
mov
inc
mov
pop
insb
add
add
ret
icebp
mov
lcall
cmp
push
jns
push
das
xchg
sarl
sbb
push
pushl
daa
sbb
icebp
mov
or
test
ffree
in
fdivr
shl
mov
xor
enter
lds
aas
shr
add
popf
add
sub
sub
aas
dec
outsb
cmc
adc
mov
jne
inc
cmp
dec
sti
jbe
dec
fisubl
addb
dec
cmp
mov
and
sub
mov
pop
mov
mov
sbb
xchg
rcrl
lcall
sub
push
xchg
xchg
mov
es
out
mov
test
cmc
or
int3
ror
imul
xor
mov
scas
mov
pop
sbb
aam
add
inc
push
sub
sbb
adc
cmp
lret
sub
xchg
mov
pop
inc
lahf
in
icebp
sub
test
shll
mov
dec
sbb
jge
xchg
add
clc
in
pop
rcrl
pop
push
loope
push
lret
inc
ja
fdivrs
jecxz
jno
add
insb
jbe
mov
ja
mov
cld
aaa
pop
push
cld
cld
pop
sub
and
pop
pop
inc
mov
cli
rclb
inc
cmc
pusha
mov
sbb
rcrl
jne
inc
mov
call
jns
pop
scas
and
pop
xchg
out
push
jbe
push
add
out
and
mov
shlb
lds
cmpsb
xchg
jne
ret
mov
movsl
inc
call
cmc
jb
hlt
or
jmp
mov
xchg
shll
pop
xor
and
in
and
and
jle
rcrl
icebp
das
jle
jp
fsubrl
out
pop
into
es
out
mov
mov
cmc
loop
sub
cld
lods
mov
sti
cmpsb
mov
stos
je
mov
and
outsl
mov
test
adc
adc
aas
js
and
loope
andnps
inc
jno
pop
or
add
and
pop
aas
add
pop
sti
fsubrp
mov
or
ds
mov
push
addr16
movsb
push
lret
cli
push
xchg
js
dec
and
sbb
push
enter
or
mov
xor
push
cmp
lahf
icebp
push
pop
scas
jge
in
in
mov
lahf
ljmp
fdivrp
jle
lret
jg
loop
sti
jecxz
cmpsl
and
mov
adc
test
je
mov
mov
adc
add
mov
iret
add
dec
cmp
pop
out
pop
outsb
movsl
inc
rclb
hlt
xchg
mov
repnz
data16
sarb
lcall
mov
mov
decl
shr
pushf
repnz
es
ret
cmc
lret
ss
add
add
pop
in
mov
lahf
sbb
xor
out
push
sub
cmpsb
inc
out
inc
ljmp
out
push
xor
inc
loopne
xlat
add
ret
es
je
jo
push
or
nop
vmwrite
mov
cltd
or
add
xchg
pop
xor
incb
cmpsb
lods
lock
mov
fwait
lods
and
mov
ficomps
ljmp
cmp
inc
dec
out
ret
popf
pop
mov
loopne
jge
addr16
pop
mov
movl
pop
jmp
in
popf
addb
lahf
pop
jg
mov
mov
push
cmp
and
dec
mov
xchg
dec
aad
sti
fistpl
jnp
pop
adc
outsl
arpl
outsl
jg
mov
es
mov
or
and
sbb
movsl
aas
ss
ljmp
pop
cld
adc
sub
inc
jo
and
xor
inc
shll
mov
iret
xlat
rorl
sub
outsb
lods
xor
xchg
sub
notl
add
mov
shl
pop
lcall
std
mov
or
pop
fsubs
push
mov
sbb
mov
push
insl
sbb
push
lret
xchg
add
add
adc
jae
hlt
xchg
adc
add
dec
loopne
jns
pop
js
adc
into
lret
fists
adcb
fwait
pop
js
scas
hlt
dec
testl
xchg
fsubs
xrelease
iret
mov
stc
dec
setle
and
add
cld
bnd
or
loop
aam
imul
push
hlt
mov
jmp
in
outsl
imull
sbb
mov
shrl
pusha
mov
cmp
or
movsl
sahf
mov
lcall
nop
inc
test
push
sbb
cmp
mov
faddl
adc
sbb
sub
adc
xchg
in
movsb
push
in
pop
sti
out
mov
stos
cld
stos
sub
pop
push
add
fiadds
lahf
lock
xor
jmp
je
cmp
mov
je
add
jo
rorl
and
leave
dec
test
and
cmp
or
cmp
jle
into
push
xor
ljmp
daa
inc
sti
iret
lret
sbb
pop
mov
stc
mov
lock
xchg
lret
addr16
xor
mov
mov
dec
push
inc
mov
push
pop
lret
mov
lods
cltd
outsl
inc
xor
push
cs
iret
xchg
lea
jnp
ret
fwait
cmp
shrl
add
sub
loopne
inc
bound
jbe
mov
cmpl
mov
lcall
sub
dec
in
push
sbb
and
insb
insb
dec
rorb
addl
xchg
adc
sbb
cmc
les
je
cli
icebp
scas
jmp
pushf
mov
jg
call
xor
sub
xchg
ds
pop
cmpsl
into
cmpsb
movsl
repz
push
jno
sbb
mov
add
subb
jb
mov
dec
nop
mov
es
mov
jbe
cmpsb
les
inc
es
mov
mov
hlt
addr16
xor
test
xlat
divl
jp
aad
push
sarb
cmpsl
dec
addr16
icebp
jg
lahf
inc
pop
popa
pop
jbe
mov
xchg
repnz
je
or
ret
rcrl
cmp
fcmovb
push
mov
dec
shll
scas
sub
and
lods
out
int3
aas
in
test
push
fdivrs
add
jno
dec
pusha
insb
ret
call
ljmp
shll
cli
aas
cli
or
and
hlt
push
pop
xor
inc
aad
sbb
gs
aad
icebp
mov
xor
add
jecxz
mov
movsl
pop
push
cmp
lock
jle
aaa
cmc
dec
iret
ss
lcall
inc
mov
push
dec
pop
fdivp
loop
insl
mov
fadd
hlt
sbb
shrl
push
out
cli
repz
repnz
aas
xchg
adc
mov
outsl
loope
push
mov
cmp
lods
decb
cmpsb
cmp
movsb
or
mov
fcomps
addr16
pop
push
push
scas
subl
mov
pop
imul
int
stos
adc
dec
enter
xchg
ja
mov
add
in
mov
ss
and
xlat
sub
call
roll
ds
push
das
frstor
scas
out
loop
rcr
jb
mov
or
adc
sub
in
adc
mov
cld
test
fwait
int3
jl
cmp
movsb
int
fnstenv
out
mov
fists
cmp
js
sbb
xor
mov
lods
ret
mov
mov
jne
rcrb
insb
mov
jecxz
xor
jp
adc
push
inc
and
scas
dec
fcoml
cs
loopne
adc
jge
addl
sbb
aaa
into
rolb
addl
jg
jns
aad
enter
je
cwtl
jl
scas
call
and
xchg
xchg
cld
iret
sbb
imul
xor
xchg
dec
sbb
push
mov
push
adc
pop
movsb
aam
dec
mov
out
dec
hlt
xchg
pushl
cmp
shrb
icebp
jle
mov
divb
adc
dec
pop
into
scas
mov
neg
lock
add
sub
repz
mov
rcrl
dec
inc
adc
addb
inc
jp
movsl
xor
sub
ss
jo
add
push
sbb
lret
fwait
ss
out
bound
push
adc
gs
cwtl
inc
sbb
insl
add
stos
mov
pop
xchg
jge,pt
and
xchg
js,pn
adc
xor
insl
lea
scas
mov
inc
sub
ficoml
and
iret
adc
push
mov
into
sbb
fstpt
ret
cltd
mov
mov
mov
xor
inc
push
mov
xor
jg
add
inc
mov
call
leave
xor
add
xchg
out
and
dec
iret
jge
jae
fwait
and
mov
les
loope
jno
scas
fld1
popa
jb
je
mov
daa
ljmp
loop
pop
inc
pop
out
jbe
xchg
icebp
mov
std
xchg
mov
pusha
sti
or
push
add
sbb
or
ljmp
lahf
jp
adc
popf
fcmovnb
xchg
and
call
cld
add
enter
dec
inc
add
outsl
mov
jg
popf
fs
das
test
arpl
aad
and
jo
push
addl
sub
int3
jns
mov
mov
fldt
jnp
push
mov
je
inc
or
inc
shll
and
into
xchg
lds
loop
cmc
dec
dec
dec
cld
mov
pop
cmp
out
adc
in
dec
js
push
pop
jbe
fistpll
adc
push
pop
lods
mov
xchg
push
outsl
mov
popf
mov
cmp
xor
bound
movsl
adc
mov
jecxz
mov
sbb
adc
fwait
push
scas
pop
outsl
xchg
inc
std
dec
adc
sbb
jne
mov
xchg
into
mov
mov
cmp
and
sbb
adc
cmpsl
jmp
ret
adc
sbb
into
div
dec
stos
clc
push
adc
push
and
ret
mov
cmp
popa
mov
loope
std
inc
lahf
xor
cs
test
jb
mov
fldcw
jbe
add
outsb
adc
jno
pusha
sbb
std
mov
jle
sti
inc
sbb
repz
movsl
popf
or
pusha
sar
mov
adcb
in
and
iret
mov
aaa
cli
mov
xlat
adc
cmp
stos
jae
xchg
inc
aas
stos
inc
mov
mov
cs
xor
inc
dec
mov
loope
roll
add
sbb
add
std
sub
jnp
bnd
lods
popa
aad
std
adc
sbb
daa
cmpsl
xor
dec
cmp
pop
shll
inc
out
std
je
push
add
sub
std
mov
cmpsb
inc
fcomi
xor
sahf
cs
imul
or
ret
loop
imul
xchg
rorb
fmull
pop
or
pop
in
iret
cld
push
nop
and
mov
jg,pn
push
mov
stos
bound
leave
sbb
mov
add
jg
push
call
sub
shr
mov
jns
dec
add
and
and
call
mov
daa
jno
mov
out
add
xchg
dec
jbe
mov
adc
dec
call
or
adc
and
lock
xor
push
mov
jg
jae
inc
sbb
addr16
mov
shl
stc
xchg
mov
int3
adc
cli
jb
sbb
negl
int3
sub
dec
pcmpgtw
ja
adc
or
popf
in
cmpsl
popa
dec
rcrb
cltd
nop
fadds
xchg
push
sbb
arpl
or
adc
gs
out
mov
pop
mov
jle
mov
les
xchg
fnstenv
ljmp
dec
xor
push
sbb
fidivrs
call
mov
xchg
and
cmp
mov
cs
mov
cmpsl
dec
sbb
pop
mov
hlt
xchg
pusha
push
cmp
aas
repnz
adc
cmp
filds
rorl
push
jmp
mov
mov
dec
pop
xor
js
int
iret
lods
or
jp
rcrb
pusha
test
pop
sarb
mov
sbb
lcall
push
inc
add
mov
xchg
jle
or
jbe
sbb
sar
or
cmp
jne
fadds
mov
repnz
int3
sub
fnop
repnz
sub
inc
pop
packsswb
adcb
scas
jecxz
inc
xchg
add
gs
mov
pop
pop
mov
push
mov
int3
js
insl
fistl
cld
cmpsb
sbb
pop
in
std
adcb
xchg
test
mov
and
adc
cmc
pop
lss
cli
sbb
mov
movsb
mov
cmp
cmp
cmp
stos
pop
rorb
aaa
je
inc
lods
and
mov
gs
test
add
add
fnstenv
clc
repz
add
mov
jnp
inc
into
mov
loop
xchg
nop
sub
imul
xor
mov
sarb
sub
mov
in
dec
daa
loopne
dec
or
adc
dec
adcb
fwait
clc
xchg
mov
pop
ja
lea
lds
stc
data16
push
push
push
sbb
aas
and
out
arpl
mov
cwtl
add
mov
pop
sbb
xor
push
in
jnp
jp
and
imul
inc
out
cmp
xchg
cmp
mull
dec
push
and
sbb
sbb
aam
sub
pop
xor
add
aaa
mov
inc
fiaddl
pop
in
int3
in
cmp
push
fwait
incl
mov
arpl
lret
lea
xor
and
js
lock
aam
cli
call
hlt
cmp
add
pop
lods
jecxz
aad
jl
es
rclb
fisttpll
mov
dec
pusha
push
xchg
pop
ss
icebp
int3
pop
pop
push
or
sbb
mov
es
repnz
jnp
cmpsb
xlat
jo
xor
and
ss
adc
out
xor
xlat
je
lods
or
or
mov
add
dec
lds
ret
xchg
cmp
mov
add
cltd
and
pop
aaa
loopne
jmp
add
or
fnsave
push
or
subl
xorb
rolb
sub
add
xchg
pop
adc
sbb
dec
push
test
pop
xchg
test
repnz
imull
or
xor
sbb
test
ret
jle
sub
ljmp
fsubr
cmp
out
xchg
mov
dec
cltd
shlb
mov
push
add
stos
mov
fucomp
pop
ja
lds
jae
dec
jmp
shrl
out
jl
out
dec
ss
xchg
ret
loope
movsl
int3
mov
add
jnp
rcll
xchg
mov
gs
aaa
scas
sti
rcll
cmpsb
jne
adc
sbb
ss
imul
cmp
xchg
data16
and
test
rcr
fisttpll
clc
insl
sbb
pop
pop
lahf
insb
aas
sub
mov
adc
xchg
mov
ret
lret
pop
bound
rclb
inc
add
mov
mov
xchg
dec
fimull
out
mov
jbe
jl
inc
or
aaa
sub
je
mov
cmp
mov
stc
adc
mov
mov
mov
fldcw
scas
mov
loope
loopew
and
xchg
iret
fistpl
bound
add
bound
cmp
repz
outsl
adc
pop
pop
or
mov
jg
pop
jmp
push
push
inc
mov
pop
xor
jl
arpl
subl
das
jo
cmc
insl
lret
xchg
dec
in
scas
loopne
push
into
sub
add
aam
and
aaa
mov
xchg
xchg
mov
negl
scas
imul
jno
xlat
in
xchg
movsb
cmp
mov
arpl
adc
cmp
dec
cmp
jle
daa
lahf
daa
int3
add
repz
xor
pop
in
arpl
dec
out
push
or
mov
ja
fxch
cli
mov
push
arpl
push
movsl
stc
lds
push
mov
sbb
mull
int3
loop
jge
mov
mov
jnp
jp
xchg
shl
pop
iret
int3
push
ficoml
pop
sahf
pop
add
fidivl
aad
xor
cmp
lret
popf
inc
sub
rolb
divb
pop
adc
mov
es
ret
fisubrl
shl
xor
lock
outsl
mov
std
in
xor
adc
add
dec
fstps
pop
push
push
outsb
xor
cltd
push
add
das
jb
int3
cmp
movsb
icebp
js
mov
mov
aam
jno
mov
pop
outsb
rorl
dec
dec
adc
sub
aam
pushf
aad
adcb
cs
or
cwtl
dec
mov
cmp
leave
mov
adc
cmpsl
sbb
dec
or
sub
pop
jge
inc
sti
addr16
and
hlt
mov
cmp
cli
or
jo
xchg
or
aad
jmp
add
xchg
enter
imul
xchg
fwait
pop
lock
outsb
fiadds
add
cs
into
leave
mov
aas
roll
popf
shlb
cmp
aad
mov
mov
insl
out
scas
adc
mov
fisttps
cmpsb
cli
cmp
roll
pop
or
mov
mov
mov
repz
jbe
mov
pop
mov
cmp
inc
xor
rcrb
fucomip
or
roll
cmpl
iret
addr16
decb
icebp
das
sbb
pop
rcl
xchg
test
aad
mov
xor
jl
test
add
push
repz
cltd
icebp
mov
pop
lcall
jnp
mov
int3
lcall
sub
push
sub
gs
popf
xchg
sub
in
test
lahf
sub
mov
push
mov
add
outsl
hlt
fimuls
fwait
stos
mov
rclb
add
pop
mov
sub
sarb
out
fstl
jnp
jns
xor
jg
jg
inc
outsb
mov
push
mov
jge
incl
push
inc
xchg
arpl
dec
push
call
imul
mov
scas
mov
sbb
out
fs
inc
adc
lret
dec
sbb
call
loopne
push
mov
ds
mov
fldcw
int
xchg
adc
jnp
and
or
out
icebp
jb
jo
rcll
mov
pop
mov
push
movl
dec
rclb
push
jmp
fisttpl
mov
ret
outsl
inc
in
xor
add
push
mov
sbbl
and
ror
repz
or
fnstcw
adc
mov
inc
push
mov
push
sbb
push
pop
stos
lea
int3
add
das
pop
loope
xchg
adc
loopne
dec
adc
mov
pop
pop
stos
cmp
cs
add
sarb
jnp
push
out
sbb
into
xor
fs
jl
mov
xchg
loope
jg
add
sub
mov
std
jg
icebp
jbe
les
nop
sbb
test
sti
aaa
jo
outsb
push
cmp
ret
and
rcrb
pop
adc
iret
daa
lret
sbb
rclb
sub
repnz
pop
and
push
cmp
mov
lcall
dec
test
pop
or
stc
pusha
mov
iret
jae
ja
clc
in
sbb
dec
add
rdtsc
popa
and
fwait
jge
xchg
hlt
cmp
pop
mov
adc
xchg
out
dec
out
mov
rorl
movsb
inc
sbb
xchg
inc
mov
call
inc
cld
adc
arpl
aaa
xor
push
ficoml
pop
inc
test
outsb
jmp
jmp
out
jmp
adc
je
and
in
xchg
or
lret
sti
inc
jne
shll
push
xor
dec
mov
sar
push
jae
cmp
xchg
in
movsl
and
nop
jo
xor
jns
gs
add
stc
dec
sbb
xchg
outsb
stos
fwait
xchg
pop
rorl
pop
test
cltd
in
pop
fs
aam
test
jnp
ret
iret
mov
ret
add
out
push
sub
negl
std
jns
jge
outsl
in
cmpsb
adc
cltd
adc
movsl
or
pop
and
jo
int3
fsubs
cli
xchg
jmp
outsb
push
cwtl
in
out
aas
aad
aad
ss
loop
xchg
outsb
sbbl
ret
pop
sub
push
add
xorl
inc
subb
mov
or
jl
xlat
add
ljmp
sub
into
adc
inc
jl
shl
movsl
in
jp
add
loope
cvtpi2ps
xchg
lock
test
cmp
dec
addr16
inc
imul
aad
cmp
out
pop
jge
xchg
xor
aaa
xor
add
push
mov
test
jno
dec
mov
adc
push
xchg
mov
mov
mov
or
into
rcr
jb
outsb
sbb
sub
lcall
pop
fcompl
push
jnp
xor
xor
mov
sbb
push
into
pop
out
xor
jecxz
inc
sub
in
lret
pop
sti
cmp
ficomps
or
and
sarb
out
cmpxchg
xor
xor
movsl
lods
inc
mov
in
inc
sub
dec
pop
test
xchg
pushf
lds
xchg
jbe
mov
filds
inc
cmpsb
inc
gs
push
mov
cmc
mov
bound
inc
and
mov
pusha
push
dec
leave
cmpsl
icebp
cmp
fisttpl
outsl
jne
push
xor
ret
enter
rclb
jmp
jo
or
fdivp
icebp
jl
adc
xchg
xorl
or
sub
jg
loope
cmp
ret
pusha
loop
or
mov
adc
or
enter
inc
xor
lock
push
fwait
push
int
test
or
pop
enter
cmp
insl
pop
lods
inc
lods
add
outsl
jmp
add
inc
mov
ja
adc
add
pushf
mov
adc
movb
xor
mov
ret
mov
sub
out
out
dec
test
outsb
daa
insl
mov
loopne
sub
and
pushf
jo
outsb
sub
lret
repz
cmp
push
add
sbb
dec
pop
mov
movsb
sub
cmp
sbb
ds
cmp
ds
aas
pop
out
sub
inc
sub
mov
pop
dec
mov
in
mov
pop
add
xchg
jno
imul
sbb
mov
ja
xor
xchg
pop
lcall
push
dec
fildll
xchg
call
movsl
movsl
gs
add
xor
popf
inc
mov
mov
push
or
adc
cmpsb
inc
add
clc
call
mov
mov
jne
mov
popa
push
jo
mov
data16
pop
sbb
in
push
ljmp
jp
gs
mov
dec
mov
incl
sub
addr16
jae
cmpb
popf
xor
shll
xchg
inc
arpl
loopne
push
lret
mov
or
xor
cmp
lret
bnd
sub
sti
gs
movsb
cld
lods
out
and
cmovbe
jo
or
pop
lahf
ret
and
fnstenv
inc
push
cmp
out
and
sub
rol
or
lahf
insl
sti
mov
push
in
sti
sti
xor
cmc
xchg
shll
cmp
mov
inc
xchg
dec
idivb
insl
xor
inc
mov
insl
mov
rclb
push
adc
jl
xor
in
sbb
inc
add
push
into
sbb
jo
dec
add
cmpl
add
cli
add
jne
xor
lret
loop
pop
scas
hlt
dec
pop
rcrl
ret
int3
data16
jo
push
into
jbe
add
cs
ss
mov
test
inc
mov
out
out
add
xchg
lret
pop
pop
inc
pusha
xor
xor
push
pop
cmp
pop
dec
hlt
adc
xchg
jb
lods
pop
add
or
push
test
mov
cmp
and
repz
adcb
or
or
sub
cmp
mov
xchg
sub
sub
enter
mov
mov
lock
mov
test
ret
ljmp
ret
ja
mov
mov
xchg
mov
imul
jecxz
lcall
imul
and
fmul
ret
jnp
dec
fwait
cmp
lock
cmpsl
insb
jns
lahf
scas
adc
jbe
jl
ret
shrb
pushf
jne
add
sub
mov
lret
add
in
icebp
add
dec
pop
mov
xor
jne
dec
push
inc
test
rcrb
sahf
push
call
adc
dec
ficoms
fs
lods
lods
fiaddl
mov
cs
mov
out
adc
lock
cmpsb
push
imul
pop
sbb
inc
in
icebp
push
mov
jmp
out
pop
repnz
pop
inc
cld
add
divb
cmp
dec
imul
bound
mov
inc
or
ljmp
fldenv
mov
addr16
push
loop
inc
fs
outsl
aam
mov
push
popa
jg
data16
lcall
cmpsb
into
test
sarl
mov
or
dec
mov
lcall
es
cmpsl
inc
mov
lock
jne
jnp
sbb
call
or
arpl
das
and
cmpsb
push
leave
fisubrl
fcmove
xchg
int
aam
in
fldcw
fdivr
or
std
mov
mov
int
cs
outsl
je
cmc
fwait
xorb
iret
dec
ret
fldl
push
nop
mov
adc
lds
lods
sub
enter
je
outsl
iret
add
les
sub
test
mov
xchg
shlb
pop
jmp
mov
es
outsl
xor
out
xor
jbe
pushf
adc
stos
push
cmpl
inc
es
and
into
adc
and
scas
mov
mov
xor
test
adc
rorl
inc
stos
pop
sub
sub
sbb
pop
fs
fisubrl
lret
or
js
mov
in
cwtl
xchg
jge
xor
movsb
cmp
iret
dec
popf
and
mov
jg
mov
lahf
push
add
inc
mov
enter
fs
mov
sahf
push
mov
add
mov
fldenvs
popa
inc
int3
pop
adc
mov
mov
inc
or
je
cs
hlt
daa
pop
lods
ret
in
dec
out
pop
add
test
je
addb
xor
jb
ljmp
sub
jae
rclb
mov
movsl
int
mov
and
stos
pop
dec
adcb
fs
mov
or
icebp
jo
jmp
fcomps
arpl
rclb
pop
push
sbb
rclb
xchg
and
pop
mov
insb
es
xlat
jns
adc
ds
push
sbb
arpl
pop
ret
mov
mov
cwtl
insb
pop
ficomps
add
and
lcall
test
push
pop
mov
cltd
insl
jae
and
jmp
push
lea
fsubrl
or
subl
clc
dec
sbb
sub
pop
dec
jmp
jno
rcrb
add
and
mov
dec
sbb
lock
adc
fbld
lahf
push
dec
mov
inc
mov
cli
cmp
iret
movsb
or
and
jnp
in
loop
das
test
sub
xor
cmp
or
xor
adc
and
cmp
lds
les
pop
hlt
paddsw
lods
jns
push
jle
xor
hlt
or
inc
shll
add
push
jns
push
push
xchg
aaa
gs
inc
jno
and
scas
jle
push
in
xor
ret
imul
pop
sbb
dec
push
or
push
add
pop
mov
scas
xchg
ja
pushf
inc
data16
out
mov
divl
loopne
mov
jno
dec
dec
ljmp
fisttps
movsb
rcr
mov
xchg
mov
or
jp
rorb
scas
inc
and
stc
mov
add
and
or
inc
pushf
ret
inc
into
pop
xor
pop
inc
stos
lds
mov
xchg
xchg
xor
mov
sub
pop
adc
lods
lods
lret
ficoms
inc
add
sarl
inc
addr16
ds
push
and
inc
or
or
mov
lock
out
sbb
imul
aad
jne
cmp
mov
sbb
jae
push
or
cli
add
sbb
pop
lock
cmpsl
fs
mov
inc
push
mov
mov
test
shll
jb
mov
adc
fcomp
pop
scas
xchg
dec
cmp
mov
imul
ret
bound
ja
popa
jno
adc
mov
push
push
into
mov
mov
cmp
cmp
and
push
dec
dec
movsl
mov
lods
adc
lea
jmp
fistpll
pop
rcrl
push
lcall
clc
sub
xor
in
cmp
adc
jmp
jecxz
or
dec
outsl
mov
mov
mov
adc
cmpsb
lods
data16
mov
mov
popl
xor
adc
cmpsl
stos
jbe
mov
dec
mov
lods
push
adc
mov
out
movsb
add
jecxz
inc
xchg
adc
test
sub
flds
sub
xchg
jnp
adc
in
daa
in
popa
frstor
inc
push
daa
fldcw
sbb
loop
scas
je
mov
adcl
jae
scas
aad
scas
dec
jns
lds
xrelease
inc
cwtl
js
jne
sbb
sbbl
sub
xchg
fs
or
mov
shlb
fists
aam
mov
sti
cmp
imul
xchg
cmp
sbb
outsb
ret
shrl
push
fldcw
add
mov
test
mov
loope
aam
fisubrl
mulb
sbb
xor
roll
sbb
jae
ret
lea
lahf
pop
dec
cwtl
mov
and
popf
imul
and
add
push
push
xchg
ljmp
shr
cmp
mov
sbb
pop
inc
lcall
shr
dec
sbb
jb
and
push
mov
and
xchg
add
in
cmp
push
push
cli
cmp
fisubrs
std
pop
outsb
xchg
stos
je
mov
xor
lods
pop
jle
sbb
and
xchg
sub
push
nop
inc
pop
das
rol
xchg
stos
icebp
mov
scas
js
cmp
jbe
popf
cltd
sub
test
pop
lret
imul
jae
mov
xchg
jo
lret
out
data16
pop
leave
mov
test
pop
pop
adc
xchg
aaa
mov
outsb
mov
pop
push
test
cli
cwtl
imul
push
xchg
jmp
mov
mov
add
mov
jne
test
insl
mov
cltd
out
das
mov
jno
mov
adc
jo
sbb
cwtl
ror
inc
pop
out
adc
addl
xor
mov
add
push
push
add
mov
adc
clc
andl
sub
gs
push
mov
sub
xchg
out
cmp
cmp
and
pop
push
inc
repnz
rcrb
xchg
inc
stos
cli
mov
add
call
and
daa
std
and
call
popa
push
int3
pusha
call
jno
out
and
movsb
cmpsb
lret
or
xor
aam
add
mov
mov
mov
inc
dec
lds
icebp
pop
addr16
xchg
mov
sbb
les
imul
jge
and
adc
pusha
aam
xor
mov
ficoml
fwait
and
sbb
nop
pop
int3
leave
test
push
push
add
pop
cmp
sub
sbb
push
mov
pop
xor
fistl
fstpt
cs
dec
mov
add
or
test
js
sbb
ss
out
sub
clc
popf
ja
dec
ror
pop
xor
and
mov
outsb
loope
inc
dec
mov
xor
sub
mov
mov
fs
out
daa
jg
neg
je
cmp
pop
dec
roll
mov
xor
push
mov
xor
pop
addr16
popf
adc
lock
repnz
les
loope
mov
cmp
and
mov
outsb
arpl
in
cltd
movsl
inc
jne
dec
jl
es
out
daa
bound
pop
out
xchg
cs
fstps
xchg
xchg
imul
es
clc
dec
mov
sub
sub
mov
or
inc
mov
xchg
daa
jbe
loope
scas
in
sarb
fsubrs
andl
and
je
loope
push
adc
and
minps
jle
lea
cmp
xlat
jbe
rclb
rcll
jg
in
ds
jg,pn
xor
xchg
xor
sahf
mov
push
jbe
xchg
mov
mov
jne
add
sbb
mov
pop
rolb
xor
lcall
mov
pop
fs
aas
mov
dec
add
sti
pop
mov
lock
jo
cmc
dec
aaa
mov
lret
idivb
popf
andl
push
jns
cmp
adc
loope
sbb
aaa
push
stos
inc
popa
jno
mov
nop
les
add
add
loope
cwtl
inc
dec
fwait
cmpxchg8b
iret
or
flds
pop
jmp
ret
mov
add
pop
es
dec
sub
daa
stc
or
das
mov
out
cmp
outsb
cmp
xchg
into
stos
sub
jo
add
shll
cmpb
sti
loopne
and
addb
outsl
adc
test
push
test
adc
push
pop
jl
std
test
cmp
xchg
sbb
xchg
xor
scas
mov
and
aas
lret
popf
repz
sbb
add
jmp
mov
mov
cmp
in
push
push
clc
xchg
test
mov
movsb
test
push
imul
xchg
ss
test
ret
stos
out
popa
and
cmp
loop
cmpl
xchg
in
mov
mov
ljmp
ret
loope
mov
lds
popf
mov
push
pop
popf
movsb
xor
stos
or
lret
lcall
das
cmp
mov
andb
clc
fimull
add
sbb
push
push
or
sub
jns
inc
push
pusha
ljmp
dec
pop
sahf
inc
mov
xchg
test
push
mov
mov
push
in
xchg
aam
mov
testl
adc
sbb
bound
jl
xchg
aam
roll
outsb
iret
mov
or
cmpsl
push
dec
cmpsl
imul
fmull
and
xchg
rolb
notl
xchg
mov
mov
std
scas
and
add
in
mov
cli
lret
add
inc
in
pop
test
test
push
jne
mov
inc
das
inc
sbb
movsl
repnz
lret
and
out
setbe
bnd
jecxz
loop
dec
pop
lock
cmp
fnstenv
loopne
shr
cli
repnz
movsb
or
push
out
pop
sbb
and
xchg
push
call
das
pop
xlat
sub
mov
jns
jnp
repnz
sti
aas
sahf
adc
sub
mov
jns
dec
add
mov
mov
ljmp
pop
push
push
inc
push
inc
mov
ljmp
or
mov
xor
and
xor
mov
fcmovnbe
pop
dec
test
mov
sbb
mov
sub
add
fisttpll
call
incl
aas
test
frstor
mov
jecxz
sub
mov
push
pop
mov
mov
lea
aam
jbe
dec
pop
lods
negb
lahf
idivl
mov
jb
and
cmp
add
dec
cmp
rolb
loopne
adc
das
testl
movsb
push
sbb
in
fstpt
push
fwait
call
mov
insb
or
cmp
repz
flds
xchg
inc
incl
mov
jo
mov
mov
loop
mov
sub
jl
dec
jmp
test
cmp
add
and
ja
dec
das
and
cmp
inc
lcall
mov
push
sub
test
rcr
mov
enter
dec
sahf
enter
mov
in
mov
aas
repnz
push
adc
cwtl
clc
push
fidivrs
dec
sbb
pop
ret
popa
mov
mov
fidivl
mov
pusha
jmp
loope
cmpsl
jp
out
xorb
jmp
loop
add
mov
jns
in
or
insb
xchg
mov
test
sub
shld
mov
cmp
faddl
mov
scas
test
mov
movsb
cli
dec
dec
add
add
add
add
inc
mov
bound
push
cmp
lods
cwtl
jae
insl
add
inc
push
add
popa
mov
jl
add
push
xor
test
and
pop
sbb
mov
repz
fistpll
shl
mov
adc
jb
sahf
jns
jno
inc
push
cmp
rcr
out
adc
arpl
test
and
xchg
lret
xlat
lcall
rol
leave
sarb
mov
push
push
rcll
roll
cmpsl
dec
jg
push
fwait
adc
bound
add
inc
cmc
mov
lcall
mov
and
mov
jl
push
mov
jns
add
fldl
jns
ficoml
fistps
push
fbstp
cmc
dec
in
sbb
aaa
pusha
jecxz
cld
jl
int3
test
setg
aam
pop
aad
add
sarl
pop
pop
sub
pop
lods
mov
das
ja
mov
cmp
xor
jl
es
dec
loope
das
pop
icebp
pop
push
and
scas
mov
rol
sti
lcall
icebp
cmp
inc
mov
pop
out
es
std
mov
jle
push
xor
je
scas
insb
dec
cmp
inc
xor
push
jnp
insl
lahf
pop
dec
sbb
jg
mov
pop
fs
imul
cmp
xchg
mov
nop
fwait
jecxz
aas
mov
sbb
and
movsb
in
and
les
stc
js
nop
fsubl
out
imul
mov
mov
jmp
mov
jecxz
xchg
fs
fadd
and
inc
inc
cltd
xorb
pop
clc
xor
movsl
clc
pop
ss
push
hlt
jp
inc
and
dec
mov
fadd
into
cwtl
pop
stos
inc
mov
dec
jo
rcr
pop
inc
mov
fcomip
ljmp
jae
testb
cmpsl
cmp
lahf
or
test
xchg
add
and
outsb
lds
pushf
adc
icebp
jno
xchg
jecxz
das
pop
rol
lock
mov
pop
icebp
jmp
and
xor
or
pop
push
push
sar
pop
in
notb
jnp
cmp
mov
inc
cld
in
aad
fisubl
in
repnz
out
clc
lds
test
mov
fildl
mov
jnp
addr16
repnz
or
pusha
loopne
test
cmp
sbb
xor
jae
or
mov
sbb
adc
xchg
pop
mov
pop
dec
scas
jno
or
ss
mov
nop
push
jne
out
push
push
rcll
inc
sub
aaa
xor
push
loopne
mov
mov
jae
sub
pop
ja
push
pop
xchg
mov
cli
push
push
subl
subb
pop
xor
sti
xlat
lahf
inc
insl
or
mov
and
pushf
fcmovnbe
cltd
fsub
fnstsw
pop
filds
xchg
mov
mov
call
loop
sub
aad
mov
mov
out
mov
ficoms
arpl
xchg
xor
jne
aad
hlt
scas
mov
cld
mov
jmp
fst
aaa
insb
mov
jb
mov
into
dec
insl
pop
sbb
in
cmc
inc
xor
pop
test
xorb
pop
push
xor
dec
and
lahf
or
ficoms
stc
push
lds
leave
push
and
push
fsts
shlb
fildll
mov
push
xor
iret
lcall
push
ja
rol
xchg
es
cmp
inc
hlt
mov
xor
or
imul
xchg
inc
out
hlt
outsb
shll
mov
stc
jge
jo
lods
mov
pusha
add
out
pop
aam
out
add
lea
push
mov
jbe
jle
loopne
sub
xor
shll
sub
sbb
add
aaa
divl
cmp
and
icebp
mov
sbb
repz
xchg
jbe
int
or
add
pop
scas
mov
call
and
inc
add
insl
cmp
lret
inc
jae
and
xchg
adc
daa
and
sbb
es
shlb
mov
aas
insl
sub
loope
das
jno
jecxz
scas
push
test
mov
test
mov
icebp
xor
inc
mov
addr16
es
test
xchg
dec
fwait
push
lods
inc
mov
repnz
xor
mov
push
push
adc
lods
movl
push
lcall
and
add
jecxz
xlat
push
mov
jns
xchg
lock
into
or
jp
test
adc
dec
xchg
or
xchg
add
mov
test
test
xor
std
shl
mov
mov
in
push
dec
mov
dec
dec
xchg
jg
test
pop
xlat
lea
mov
rcll
mov
dec
mov
cmp
aam
adc
sbb
jae
jns
loopne
ljmp
xor
imul
xor
and
repnz
icebp
fadd
jns
dec
mov
sub
outsb
dec
or
in
jge
test
mov
mov
loop
movsb
out
incb
push
xchg
outsb
mov
push
xchg
sbb
insl
lods
dec
mov
sbb
ret
leave
add
sbb
sub
sbb
stos
xchg
add
or
pop
xlat
push
mov
divl
into
xor
mov
pop
xor
fidivl
jl
adc
filds
arpl
fs
xor
shll
test
loop
gs
rcll
iret
dec
pop
jo
out
dec
popa
xchg
faddl
add
movsl
pop
mov
lock
leave
xchg
xchg
leave
into
sti
movsb
pop
xchg
stos
or
imul
ss
mov
lret
outsb
fnsave
inc
push
fldt
xor
rcrb
jg
js
mov
lds
jb
shrl
mov
inc
stos
mov
sbb
or
inc
sbb
inc
loope
jne
or
fisttpl
cwtl
pop
mov
inc
aaa
push
arpl
in
sti
adc
in
pusha
pop
lods
movsl
jns
nop
loopne
fsubs
lret
push
or
cltd
cmp
jge
rol
xchg
dec
sbb
or
negl
xchg
mov
cld
sub
inc
addr16
jg
and
loopne
inc
ljmp
ja
inc
mov
mov
add
imul
jnp
out
xor
dec
xor
bound
cmp
dec
adc
out
sbb
xchg
aam
cli
mov
push
xor
cltd
nopl
shl
dec
test
shrl
add
jo
mov
loop
lcall
lret
in
shrl
dec
sbb
push
mov
jb
std
mov
mov
xlat
and
popaw
add
push
cli
sarl
fisttps
rorl
cmp
cli
mov
int
or
cltd
dec
sbb
push
xchg
stc
stos
enter
or
xor
add
test
inc
fucomp
sbb
fidivrl
cmpb
out
psrlw
jle
or
adc
imull
cmp
inc
lock
arpl
call
sbb
sub
dec
repnz
mov
jp
fsts
adc
mov
lods
lds
jp
cmp
call
xor
adc
shl
orb
xor
pop
inc
movsb
dec
cwtl
imulb
sbb
xlat
insl
aas
add
testb
loope
push
mov
push
arpl
or
insb
cmp
rorb
xchg
mov
dec
loopne
jle
mov
jnp
jmp
push
hlt
outsb
add
enter
fwait
sbb
adc
call
push
out
push
mov
popf
jmp
dec
mov
push
icebp
sub
pop
shll
mov
das
int
adc
xchg
mov
dec
or
mov
mov
xchg
mov
inc
ret
adc
add
and
out
jle
adc
subl
mov
push
mov
inc
repz
mov
mov
aam
xchg
xor
stos
das
push
push
jecxz
add
mov
jg
pop
adc
mov
push
mov
aaa
mov
push
xchg
jl
xor
lcall
outsb
push
outsl
test
imul
movsl
out
inc
je
mov
in
mov
push
es
push
sbb
fs
shlb
jp
dec
mov
inc
mov
cmp
mov
xchg
addr16
sub
jns
mov
in
mov
ds
jmp
mov
cltd
sbb
popa
push
jl
mov
fwait
outsb
jne
jecxz
ret
dec
mov
jg
stc
bound
jno
jle
lods
mov
lret
and
mov
lods
sub
fildl
sbb
sbb
out
addb
jae
mov
mov
scas
xchg
cmp
pop
push
or
pop
sub
pop
ds
inc
mov
pop
xchg
sar
sbb
aaa
inc
das
popf
test
mov
or
cwtl
add
clc
test
mov
or
pop
out
pop
cltd
xchg
icebp
arpl
push
pop
or
aad
sti
es
es
je,pn
push
bound
das
and
cmpsl
adc
test
std
cmp
cmpsl
adc
jo
stos
hlt
out
sub
lods
test
and
adc
and
js
in
cmp
xor
popf
mov
cmc
sub
rorl
dec
sub
push
or
dec
arpl
push
mov
dec
orb
js
inc
idivl
mov
bswap
mov
mov
popf
shr
imull
pop
bound
and
inc
ljmp
sbb
push
push
fisubrl
push
ljmp
iret
imul
call
add
add
fadds
clc
add
inc
cmp
sub
inc
pop
mov
ret
dec
cmp
mov
jnp
shll
pop
mov
stc
dec
xchg
jmp
xchg
in
cld
inc
sahf
outsb
jo
pop
fdivl
test
outsb
arpl
adc
inc
mov
fwait
pop
cmp
adc
xor
xor
inc
xor
scas
insb
dec
sbb
or
and
or
jne
pop
loopne
nop
xchg
mov
pop
into
cltd
pop
pop
lahf
test
mov
sbb
insl
imul
movsl
das
push
pop
lea
pop
cmpsb
cltd
inc
das
in
xchg
in
in
sbb
sub
fs
out
sub
sub
mov
insl
out
insb
mov
aad
jle
faddl
push
xchg
cwtl
lret
pusha
cmp
pushf
loop
pop
enter
cwtl
shl
adc
pop
fwait
in
sbb
push
aas
inc
cmpsl
and
sbb
adc
popa
cmp
test
mov
cmp
aad
xor
and
pop
xchg
in
adc
xor
ljmp
fwait
cmp
fdivr
fsubrl
outsb
test
imul
inc
fwait
inc
lods
xchg
ljmp
addb
xor
test
push
les
add
mov
aam
pop
adc
mov
sbb
jecxz
push
xchg
sbb
xor
cmp
lods
and
and
test
shrl
mov
in
push
fcmovb
stos
rol
and
adc
push
cs
sub
push
fmuls
adc
or
push
rsm
jmp
mov
jae
sysret
dec
repz
fwait
cltd
lds
xlat
lret
mov
jge
and
negl
pop
mov
and
imul
out
je
pextrw
scas
cli
or
mov
xchg
outsb
stos
push
addb
cmpsb
and
dec
arpl
ret
in
xor
dec
dec
jnp
xor
dec
push
stos
ds
or
test
pop
cmc
jl
into
jns
cwtl
mov
push
dec
ja
ljmp
call
inc
call
mov
push
mov
xlat
sbb
notb
pop
into
push
mov
mov
test
jns
insl
jl
mov
mov
push
gs
xchg
jne
and
daa
or
in
pop
call
call
test
ljmp
out
pushl
insb
cmp
das
pop
sbb
loop
push
rorl
lea
cld
mov
in
adc
decl
movsb
xor
mov
cmp
add
push
dec
cmpl
cmpsb
bound
xchg
sub
push
clc
and
fstpt
jl
es
aam
xchg
push
adc
lods
aas
lret
cmp
mov
lcall
xchg
cmp
sbb
imul
out
mov
inc
sbb
push
test
test
imul
cmp
aaa
insb
pop
cmp
dec
sbb
push
loope
mov
lret
xor
push
xchg
ja
insb
mov
imul
aaa
aam
ljmp
lock
cmp
cwtl
in
rolb
or
int3
add
pop
rclb
add
jg
repnz
in
outsl
and
test
pop
and
into
test
fistl
shlb
mov
push
testb
inc
add
lcall
pop
lods
inc
popf
pop
and
sti
pusha
lahf
cld
mov
gs
sbb
mov
shl
pop
adc
sub
bound
push
ret
fdivrs
test
loopne
sub
imul
fs
push
fsubrl
sti
mov
arpl
xchg
mov
insl
aas
jecxz
lret
cmc
ljmp
inc
push
sbb
or
flds
dec
scas
or
inc
sbbb
dec
shrb
shrb
push
cmp
push
and
cmp
pop
or
inc
xchg
ds
dec
mov
dec
inc
rorl
mov
xchg
cmpsl
repnz
cltd
mov
jp
insb
mov
or
icebp
jg
mov
sbb
jb
adc
and
bnd
and
in
cmp
pusha
je
and
xchg
ljmp
push
leave
xor
mov
aam
mov
dec
aam
xchg
in
insl
jne
rcrl
push
xchg
rol
mov
mov
mov
sahf
sahf
mov
insl
mov
std
sahf
or
add
decb
xor
push
repnz
out
mov
dec
pop
je
mov
dec
notl
shrl
or
std
fimuls
sbb
sbb
push
xlat
sub
inc
or
jl
xchg
xor
or
sbb
xchg
jmp
cmpb
cltd
call
adc
pop
addr16
sahf
inc
push
je
mov
mov
dec
sbb
pushaw
lods
push
pop
fiadds
push
lcall
jmp
mov
mov
and
inc
rcl
scas
movsb
ret
xchg
ret
dec
and
pop
stos
mov
xchg
cltd
pop
jge
xor
and
adc
inc
scas
pusha
shlb
test
push
rorb
cmp
ret
lret
call
lods
pop
idivl
mov
stos
bsr
sar
pop
cmp
mov
xchg
sbb
xchg
push
fwait
pop
add
mov
clc
out
leave
cld
insb
push
pop
mov
lcall
xlat
jb
inc
ret
mov
fdivrl
in
dec
ret
mov
arpl
leave
cltd
adc
dec
pop
faddl
shll
push
jo
test
mov
jne
adc
mov
iret
cmp
inc
popf
add
adc
xchg
in
xchg
popa
push
mov
lds
dec
imul
mov
mov
aam
mov
mov
fdivrs
out
sbb
adc
stos
or
jle
imul
push
mov
jnp
inc
andl
push
push
add
cmp
rorb
push
outsb
das
mov
jbe
dec
jl
fisttpll
mov
popf
cmc
xchg
divb
sbb
jno
cmp
ljmp
mov
cmc
or
inc
sub
scas
push
sub
lds
cli
ds
in
adc
rcl
js
cs
loopne
cli
jne
lea
pop
cmp
mov
xlat
movsl
dec
loop
cmpsl
loop
in
icebp
int3
xchg
mov
jno
push
and
xor
sub
xchg
ljmp
inc
push
inc
enter
mov
bound
jns
lock
add
repz
int
add
adc
mov
mov
add
iret
sahf
pop
mov
scas
mov
stos
cmp
or
mov
sti
adc
mov
jbe
in
cli
pop
int
dec
mov
cli
dec
imul
mov
mov
ljmp
push
pushf
shll
aas
movsl
or
jl
dec
dec
pop
push
mov
dec
lods
or
pop
cmpsl
int3
dec
jle
add
xor
in
inc
jns
mov
cltd
outsb
inc
aaa
mov
lock
call
mov
out
xor
jmp
adc
mov
mov
dec
in
lcall
cmp
and
inc
pop
push
jmp
and
dec
pop
jg
mov
mov
add
push
loop
mov
mov
rcr
aaa
pop
xor
fidivrl
jb
mov
shll
daa
pop
dec
mov
xor
and
xor
icebp
repnz
mov
jl
hlt
pop
cmovbe
mov
xor
hlt
mov
mov
push
jp
shr
jns
iret
int3
adc
test
rcr
jg
mov
push
mov
mov
fcompl
mov
popf
shrd
mov
rcr
pop
je
mov
lods
mov
inc
cmp
clc
or
leave
and
push
mov
jb
xchg
xchg
and
pop
inc
popf
push
popa
adcl
pop
popa
dec
jns
inc
test
cmp
mov
mov
movsl
loopne
pop
dec
push
sbb
rcll
push
lret
out
xor
and
in
jge
or
sub
aad
or
xor
and
mov
int3
les
lret
gs
mov
jae
rolb
push
icebp
xor
mov
mov
ret
and
mov
test
cli
xchg
in
inc
xchg
jg
lret
movsbl
xchg
xor
arpl
mov
jg
inc
mov
and
popl
mov
xor
in
negb
xlat
jbe
xorl
add
rorb
xchg
push
fisttpll
int
insl
das
xor
push
cwtl
mov
jae
mov
sbb
outsb
mov
fdivrl
popa
mul
add
aam
cltd
adc
adc
ljmp
mov
cmp
mov
aaa
cli
cltd
shlb
mov
inc
push
mov
popa
dec
std
es
mov
rclb
je
add
push
xor
popa
stos
or
test
add
test
stos
popf
cmp
into
and
pop
xorl
jle
das
fldenv
inc
iret
push
addl
jb
xor
push
ljmp
jge
dec
roll
dec
mov
mov
mov
adc
xor
xchg
xchg
push
adc
jl
jbe
ja
inc
por
pusha
sahf
pop
inc
inc
jmp
ss
dec
imul
fldenv
std
sbb
push
lret
mov
imul
mov
shlb
movsb
enter
sub
aaa
aam
mov
pushf
xchg
mov
es
imul
adc
out
xlat
push
lock
shl
push
mov
insl
inc
hlt
imul
mov
pop
fs
fs
repnz
fwait
adc
pop
add
or
jno
std
xchg
mov
lods
xor
iret
test
push
push
ss
ficompl
out
add
mov
scas
mov
in
inc
divl
mov
outsl
lea
out
scas
ss
pusha
or
mov
cmp
popa
outsb
cmp
xchg
cmc
cli
cld
mov
add
lock
pop
jnp
jmp
pop
test
xchg
push
orl
push
fidivrl
sub
push
adc
in
sbb
or
pop
leave
adc
es
rol
sbb
test
hlt
pusha
fistpl
adc
or
out
arpl
pop
pop
call
cmpsl
mov
cli
cmp
das
add
ret
mov
loopne
std
outsb
inc
aaa
push
push
roll
cmp
fisubs
fldcw
xchg
sub
sbb
push
fwait
in
cmp
aaa
rorb
lahf
bound
and
cli
cmp
sbb
lahf
mov
mov
imul
and
inc
cmpsl
movsl
lods
clc
inc
test
dec
ret
sbbl
push
add
xchg
dec
xor
and
push
mov
or
ss
ret
xchg
push
xchg
mov
jg
jecxz
fmuls
xorb
jns
and
jae
pop
std
inc
imull
ss
xor
or
cmp
xchg
ljmp
dec
out
push
cs
adc
rep
popf
jl
jle
or
fldenv
shr
mov
stc
cmp
imul
jecxz
clc
jmp
aam
movsb
push
popf
dec
mov
mov
jp
addr16
enter
rcl
test
push
pop
incb
dec
ja
xchg
and
mov
and
add
ret
jecxz,pn
xchg
pop
lret
xchg
jg
repz
add
xchg
addb
pop
out
push
mov
js
xor
and
push
sarl
xor
sub
jnp
sbb
mov
inc
repz
lahf
pop
jle
pop
dec
pop
out
mov
test
sbb
push
iret
mov
sub
sub
popa
dec
push
cltd
mov
mov
lret
adc
rorb
jno
sbb
imul
cmpsl
fistps
rcll
mov
cld
mov
xchg
fs
pop
arpl
clc
cmp
dec
xor
clc
and
gs
xchg
pushl
dec
mov
cmc
xor
out
in
fsubl
push
icebp
push
mov
lods
sbb
gs
rep
es
mov
clc
sbb
mov
sub
lds
imul
cwtl
cmpsl
and
push
int3
dec
sti
cmp
popa
bswap
jecxz
xchg
shrl
leave
pop
or
add
aad
cmp
sti
shll
mov
and
xor
aaa
inc
imul
sub
xchg
sub
fnstsw
pushf
inc
sub
pop
idivb
or
and
mov
stos
mov
xor
jbe
ljmp
and
in
aad
sbb
mov
fdivrs
mov
lds
test
and
movsl
and
pop
rcrb
push
fwait
in
in
inc
pop
jmp
add
xchg
fxch
sbb
into
xchg
xchg
push
mov
mov
inc
and
and
ljmp
adc
jb
add
or
xchg
lret
add
dec
gs
sub
and
stos
hlt
xor
aas
scas
and
loope
inc
clc
mov
nop
jg
pop
notb
xchg
mov
mov
xchg
cmpsb
hlt
lock
dec
or
mov
sub
sub
mov
movsl
cmp
lret
or
push
pop
xchg
roll
insl
ss
movsl
negl
fstpt
mov
mov
sarl
loopne
sbb
addr16
sbb
xor
xchg
jp
jne
jae
add
jb
xor
push
inc
push
cmp
add
hlt
jno
mov
jmp
sub
jecxz
inc
out
push
leave
arpl
inc
repnz
cld
or
cld
jae
clc
repz
call
or
add
xchg
add
rclb
sbb
negl
and
cli
mov
mov
push
test
xchg
sub
outsl
push
jge
imul
std
mov
mov
jnp
inc
cmp
pop
iret
xchg
mov
cltd
cld
pop
cmp
mov
ds
mov
stc
xchg
mov
aam
out
jno
jne
inc
add
jb
or
aas
push
push
aas
mov
jle
loop
add
das
dec
push
adc
sahf
mov
cmp
jno
push
mov
lods
pop
fsts
cmp
cmp
ss
or
inc
inc
test
aad
lds
cltd
pushf
pusha
jecxz
mov
js
test
inc
adc
aam
cmp
inc
inc
dec
dec
mov
stos
mov
dec
int3
or
enter
in
movsl
js
sarl
sti
pop
mov
mov
push
lcall
and
ret
xchg
push
push
fmull
mov
dec
and
imull
mov
mov
fidivrl
hlt
cmp
test
push
xchg
shll
stos
mov
std
xchg
mov
leave
leave
fimuls
pop
nop
lahf
popf
inc
imul
jb
in
mov
push
aam
loop
lods
mov
in
push
push
iret
mov
add
lret
imul
lcall
jp
xchg
divl
pusha
xchg
add
aad
adc
imul
mov
out
cwtl
bound
sarl
ja
pushf
repnz
pop
or
dec
or
divb
and
enter
ficomps
add
stc
mov
sub
pop
les
mov
sub
lret
iret
push
mov
pop
enter
inc
mov
rolb
jne
cmp
stos
fiaddl
fcomip
int
inc
xchg
bound
aad
jl
dec
stos
outsl
sub
subb
and
call
pop
or
dec
insb
lods
jge
sub
ds
or
cltd
shr
lea
loope
xchg
nop
jmp
sub
dec
or
mov
enter
sub
xchg
add
in
mov
and
jb
pushf
imul
mov
in
jno
lock
int3
jb
push
inc
push
ss
xor
cmp
out
sbb
fbstp
adc
fwait
push
xchg
es
jb
push
dec
lock
mov
bound
sub
push
xchg
cmpsl
jo
sub
mov
sbb
dec
push
or
jle
shll
sbb
sti
pop
xor
sbb
mov
and
mov
aaa
xchg
sub
jno
out
or
push
fistpl
daa
fs
ja
push
rcr
out
jae
xor
mov
push
xchg
jo
jne
sbb
mov
test
sbb
data16
mov
dec
outsb
mov
push
or
fyl2x
lcall
call
pusha
nop
fld
lock
dec
or
mov
and
sub
jne
jo
data16
sbb
hlt
arpl
dec
add
loop
cmp
aam
fidivs
mov
mov
mov
fwait
lds
xchg
gs
scas
js
jnp
lcall
mov
repz
test
push
test
cltd
cmpb
push
or
sub
out
cwtl
cltd
pop
loop
lods
push
cmc
mov
sbb
pop
dec
and
xor
mov
pop
fimuls
cltd
or
lock
mov
cmpsl
fcmovnb
out
mov
nop
shrb
jecxz
repz
mov
mov
sub
insb
popf
aas
lret
inc
sub
adc
xchg
or
inc
mov
dec
xchg
fs
cmc
and
shl
jle
popa
add
in
lret
sub
mov
xor
lret
repnz
bswap
jmp
mov
das
cld
flds
andb
in
icebp
jns
jecxz
and
mov
push
lret
xchg
repnz
mov
add
or
add
jnp
mov
cmpl
xchg
xchg
test
push
das
ss
mov
insb
inc
add
sbb
out
adc
lods
xchg
adc
push
loop
daa
adc
pop
mov
rolb
dec
cmp
xor
outsl
push
into
mov
and
je
dec
roll
mov
fidivrl
add
dec
sbb
stos
je
push
dec
ja
jl
movsl
inc
inc
cmp
dec
inc
mov
xchg
mov
or
test
lret
pusha
leave
sbb
cli
push
lock
push
lahf
mov
sti
sub
jbe
xchg
ss
sub
int
mov
mov
and
xchg
cmp
xchg
and
xchg
insl
sarl
cmp
sub
pop
jl
dec
push
mov
icebp
movsl
xchg
mov
add
jge
jnp
fistps
jge
into
jecxz
mov
pop
inc
push
mov
jg
dec
out
test
dec
sar
and
mov
sbb
jge
pop
decb
xchg
mov
arpl
xchg
cmc
xor
ret
sub
cli
xchg
adc
sub
testb
sub
imul
sbb
rorl
icebp
lcall
pusha
out
xchg
mov
aas
push
stos
std
imul
roll
pop
fs
add
xchg
mov
mov
andb
inc
mov
out
jmp
add
cs
mov
dec
dec
cmc
fistpll
movsb
aas
inc
rcl
rcrb
mov
das
sub
inc
fs
jo
mov
mov
mov
dec
lock
and
daa
rorl
test
daa
dec
lods
les
sub
xchg
dec
pop
sbb
rcrb
dec
lret
jne
pop
lret
adc
pop
mov
stc
pop
push
insl
loopne
adc
mov
mov
popa
mov
xlat
ds
mov
push
mov
mov
cmp
or
adc
ss
in
push
popf
test
les
mov
sahf
inc
ret
cmpsb
pop
stos
in
clc
xor
xchg
movsb
js
pop
out
bnd
punpckhwd
pusha
or
jl
pop
push
or
outsl
adc
pop
pop
mov
mov
aaa
jge
fisubrl
or
jecxz
stos
adc
push
aaa
fld1
mov
cmp
xchg
xor
ja
idivl
sar
lret
lret
enter
fmul
mov
popa
cltd
jmp
or
cmp
notb
jno
fldcw
out
dec
inc
aas
add
shrl
add
mov
xor
adc
sahf
pop
je
test
pop
sbb
out
rorl
sbb
pop
push
daa
pop
sub
push
mov
out
test
out
and
mov
js
mov
cmp
dec
pop
dec
lcall
sbb
ss
inc
and
push
movl
mov
cmc
xchg
rorb
arpl
shrb
cmp
shll
push
popa
leave
jmp
inc
in
adc
xor
mov
pusha
outsb
xor
and
rorl
stos
lea
int
mov
arpl
cmp
loopne
xchg
and
in
loop
mov
push
ja
arpl
mov
mov
jno
mov
movsb
lds
loop
sub
and
in
xor
sbb
push
xchg
inc
adc
xor
sbb
hlt
stc
nop
insl
pop
jl
rol
pushf
lret
mov
adc
mov
nop
stos
fldenv
movsb
js
push
or
mov
inc
inc
arpl
xor
push
movl
jns
sbb
jge,pt
inc
icebp
pop
in
cmp
jne
cmp
lds
outsl
jp
adcl
lods
cltd
imul
inc
aam
xcrypt-cbc
cmpsl
xchg
aad
repnz
sbb
cmp
mov
cmp
outsb
adc
test
mov
fmuls
hlt
mov
sbb
xlat
pop
iret
inc
addl
je
cmp
push
sti
int
push
and
dec
xchg
arpl
xorb
dec
mov
mov
out
mov
jae
or
ret
testb
cmp
or
andl
ljmp
arpl
lahf
xchg
mov
mov
and
inc
or
fwait
nop
xchg
fadds
imul
dec
push
mov
xchg
pusha
adc
xchg
dec
mov
push
cmp
cmp
jb
cmp
xchg
into
inc
fisttpll
xchg
in
mov
mov
cmp
mov
mov
dec
mul
fcomps
mov
or
mov
fidivrs
or
ret
mov
stos
cmpsb
sahf
mov
call
sbb
adc
adc
mov
sub
push
fisubrl
push
add
lods
push
scas
cmpsl
mov
dec
testl
add
xchg
repz
xchg
aas
jo
mov
jl
rcrb
test
pop
orl
test
jge
inc
test
mov
data16
call
add
pop
add
es
iretw
das
sub
jmp
adc
mov
cmpsb
dec
stos
stc
lcall
stos
mov
pop
sub
flds
icebp
mov
cmp
pushf
dec
pop
cwtl
divl
jp
and
fs
in
mov
fsubl
cltd
call
inc
jmp
mov
shl
fwait
sub
dec
mov
push
leave
dec
movsb
adc
push
rcll
cltd
push
popf
mov
cmpsb
lahf
sub
into
sub
fiadds
pop
sbb
repnz
test
xchg
lods
xchg
add
aas
jecxz
xor
xchg
jmp
fidivrl
inc
and
dec
sqrtps
das
push
or
in
mov
cmp
sti
repnz
or
decl
add
cmpsl
inc
mov
stos
pop
sub
loop
je,pt
stc
adc
jns
fisttpl
xchg
insl
jne
or
stos
in
inc
lods
add
pop
fcos
stos
pop
leave
mov
les
in
pop
dec
cmp
lock
xchg
clc
addr16
pop
xor
ret
xor
ret
or
gs
inc
test
pop
inc
test
mov
lcall
fwait
mov
lcall
clc
mov
sub
xchg
mul
test
clc
cwtl
cld
aas
pop
ds
dec
fldenv
jno
push
sub
jmp
std
adc
xor
cmp
xor
lcall
insb
lods
and
jo
lds
push
push
push
scas
xor
std
int3
jmp
push
xor
lock
pop
cmpsl
in
pop
movsb
jo
cli
pushf
pop
xchg
data16
popf
aam
rol
ret
sbb
push
sti
xor
js
aas
jb
in
pop
mov
pop
mov
ficompl
adc
pop
inc
pop
pushw
pop
jnp
je
aaa
mov
jb
xor
leave
lahf
jge
lods
jl
sub
pop
das
or
jno
inc
xor
bound
cmpsb
mov
lea
cld
test
push
pop
pusha
xor
xchg
adc
mov
pop
fcoms
push
jbe
and
sbb
pushl
dec
jp
ljmp
dec
lcall
test
inc
adc
xchg
add
or
in
fistps
out
jg
mov
sbb
sbb
and
int
and
sub
stos
mov
in
mov
movsb
ds
ljmp
jecxz
subb
lods
jge
lods
shl
nop
lahf
icebp
and
jns
rcrb
loop
iret
mov
jl
lods
sub
jb
lock
cs
ljmp
stos
adc
js
enter
and
push
fiaddl
cmpsl
mov
ds
sbb
test
popf
lock
sarb
xor
or
jbe
mov
jge
mov
insl
mov
and
inc
cmp
testl
inc
lret
ja
dec
dec
and
je
add
cmp
cmpsl
or
out
jne
xor
insl
insb
ret
fcompl
mov
mov
sub
mov
or
push
shlb
xchg
push
out
ret
and
pusha
pop
out
shrb
lds
dec
enter
mov
in
pusha
inc
out
fwait
in
inc
cltd
in
push
pop
or
rcl
jno
mov
lock
test
lahf
push
pop
sub
push
push
bound
xor
jae
mov
pop
shrb
mov
mov
sarl
jecxz
cmp
test
das
test
lock
pop
jge
or
mov
movsb
mov
mov
test
lea
xchg
data16
cmp
xor
mulb
xor
sti
xchg
fldcw
jl
sub
pop
aas
ss
inc
add
cli
nop
add
test
std
or
rcrb
xor
xchg
push
in
aas
sahf
repnz
dec
mov
or
mov
das
jnp
jno
enter
mov
cltd
ficoms
or
icebp
mov
xlat
dec
outsl
mov
es
jb
stos
mov
and
and
mov
mov
movsl
push
xchg
leave
popf
scas
cld
clc
addb
imul
mov
sub
loopne
mov
cwtl
xchg
and
cmpsl
scas
stos
xor
stos
mov
dec
pop
movlps
insl
mov
sbb
ljmp
scas
mov
icebp
mov
fsubl
xor
ret
gs
test
dec
jbe
dec
sarl
and
ljmp
mov
mov
sbb
cmp
call
dec
enter
dec
movlps
sbb
sbb
and
insb
mov
jno
sub
xlat
movsb
scas
mov
in
cmp
dec
leave
movsl
xchg
or
loopne
dec
pop
adc
pop
jmp
xor
sarb
dec
xor
dec
fsubs
loopne
loope
sub
mov
cmc
in
not
adc
test
add
cs
lods
xchg
rorb
sub
adc
scas
icebp
icebp
stos
in
mov
call
jecxz
out
push
cmp
inc
inc
sbb
mov
insb
les
mov
jmp
dec
and
stos
orb
aaa
mov
xchg
andb
mov
jl
mov
pop
xchg
xchg
gs
idivl
mov
xor
xchg
cmp
into
and
lcall
mov
dec
lret
adc
pop
xchg
scas
iret
add
mov
mov
sub
or
scas
add
out
in
push
dec
push
pop
insl
lcall
jo
in
lods
push
sbb
into
mov
xchg
fisubl
daa
xor
fisttps
inc
out
and
jmp
fcmovbe
xchg
cld
stc
add
aas
or
outsl
aas
outsb
inc
pop
arpl
sub
push
mov
and
mov
int3
cmp
mov
xor
mov
adc
fdivl
pop
xchg
inc
cmp
aam
les
or
add
dec
rcrb
mov
mov
repz
mov
adc
and
mov
cvtps2pd
mov
mov
bound
ss
out
push
mov
clc
addr16
pop
mov
push
ret
pusha
sub
add
mov
clc
xchg
add
sti
in
loopne
je
dec
cmp
hlt
sbb
push
xchg
pop
loop
xor
rcl
cmpsb
in
inc
push
jle
daa
dec
jns
popl
dec
cwtl
orb
aaa
out
mov
and
and
mov
sbb
roll
adc
int
sti
mov
aaa
sub
in
xchg
subb
dec
fnstcw
mov
cld
in
inc
and
fadds
xor
push
xchg
shrl
test
push
int
cmpsb
aas
mov
loope
sarb
mov
and
add
sbb
and
sbb
jl
lea
jle
cwtl
scas
dec
cmp
pop
push
loope
or
pop
adc
jo
popa
dec
mulb
movb
or
cld
movsl
ss
repnz
xlat
dec
cmc
enter
xchg
pop
inc
push
insl
or
dec
and
lret
daa
fstpl
test
rcll
outsl
imul
jae
mov
adc
cmp
dec
aad
mov
leave
cli
add
push
cmp
in
cwtl
lret
daa
mov
lods
jae
adc
sahf
mov
and
into
loop
pop
or
mov
adcb
pop
xor
popf
adc
fs
sbb
aas
lahf
push
lds
cld
cli
cmp
pop
insl
xor
and
mov
pop
arpl
sbb
mov
lock
xchg
jge
popf
or
dec
cmp
cmp
and
jae
sub
cltd
dec
add
iret
test
jge
sub
inc
ja
sbb
cmp
sub
jg
into
adc
sub
jmp
inc
push
jge
sbb
cmp
mov
adcl
xchg
sbb
mov
jne
addr16
jecxz
xor
mov
lea
clc
xor
mov
adcb
bts
test
xor
fdivrl
clc
xlat
lret
loope
push
int
rcrb
sbb
add
movsb
cmp
loopne
popf
mov
adcb
cmc
mov
pop
les
ja
xor
and
lahf
test
xchg
xchg
xor
cmpsb
jle
mov
adc
pop
es
mov
clc
std
daa
dec
mov
push
push
push
rclb
pop
sti
scas
mov
inc
adc
ds
popa
jmp
fstpt
jg
fsubrl
ja
jmp
stos
fsubs
ret
scas
gs
push
leave
xor
loopne
fwait
pushf
pop
lret
repz
cmc
push
je
ret
les
pop
xor
cwtl
mov
iret
push
sti
js
iret
lret
push
xchg
mov
ficompl
mov
stos
das
mov
imul
pop
sub
mov
shll
jle
fdivr
fwait
leave
es
mov
adc
sti
mov
jmp
int3
adc
repz
push
mov
nop
xchg
loopne
out
mov
addr16
lcall
dec
jecxz
push
popl
pop
pop
mov
mov
les
push
std
fdivrs
mov
into
clc
sti
pop
rcrl
mov
popa
shll
fists
pop
rcll
push
sub
push
push
inc
sbb
inc
lret
stc
sub
fcompl
pusha
pop
clc
mov
pop
cmp
push
and
inc
sti
fnsave
jae
jns
iret
mov
outsb
mov
call
lret
add
mov
movsl
and
jl
xor
xor
mov
pushf
xor
push
sbb
dec
ja
inc
inc
sub
xchg
adc
repz
leave
jl
xor
es
into
mov
stos
popf
mov
das
int3
scas
push
ret
adc
mov
xchg
add
jl
loop
xlat
xchg
sahf
or
int
je
inc
adc
lods
movsl
stos
mov
cmp
lcall
xchg
cmp
xor
xchg
add
jl
adc
sub
jg
sbb
clc
jnp
xchg
lods
dec
push
dec
out
push
sub
inc
pop
test
xchg
cli
sti
push
xor
xor
sahf
je
lods
push
add
nop
fstl
leave
push
xchg
sub
xchg
mov
mov
daa
not
movsl
or
out
or
int
cmp
pop
inc
ja
sti
xchg
add
std
jmp
inc
loope
ljmp
insb
inc
sub
push
repz
aam
addr16
movsl
mov
fwait
mov
lret
or
test
sti
not
lahf
push
outsb
adc
jp
or
test
lods
adc
and
cmpsb
inc
sbb
mov
ret
or
and
addb
cmpsl
nop
mov
sahf
ljmp
and
fsubrl
adc
mov
pop
testl
out
pushf
addr16
cli
add
mov
jb
mov
inc
add
xchg
push
leave
jle
lret
cmpsb
out
cwtl
or
mov
ja
xlat
xchg
pop
lret
lret
dec
mov
sbb
movsb
aaa
outsl
xchg
mov
pop
rorl
movsb
sbb
sbb
cltd
lock
scas
leave
mov
shr
inc
inc
inc
sub
hlt
imull
mov
adc
test
sbb
jbe
push
or
lcall
jbe
mov
ds
xlat
jp
sbb
stos
and
jnp
jmp
adc
inc
lods
pop
test
lods
shrb
pop
ja
rclb
std
cltd
adc
add
aaa
cmp
mov
push
std
xchg
adc
cmp
popa
ret
sbb
shlb
mov
in
xchg
in
decl
sti
xchg
sahf
jo
mov
and
call
or
ret
jbe
sub
aaa
mov
out
mov
jno
mov
pop
sub
arpl
xchg
aad
into
inc
lods
pop
cmp
lods
bound
xor
jne
stc
icebp
xorb
pop
lret
mov
lea
out
or
sub
jo
push
loopne
and
push
cmp
pop
rorb
leave
adc
xor
pop
out
pushf
mov
push
xchg
rcrb
sti
dec
sbbb
jae
out
adc
add
lahf
cmpsb
pop
push
dec
pop
inc
sbb
or
jae
mov
adc
dec
mov
lcall
mov
imul
inc
dec
pop
fdivrs
fimuls
jae
mov
out
pop
mov
mov
in
test
dec
lock
into
aas
and
je
cmp
fs
dec
add
out
fsts
pop
push
loopne
push
lods
mov
rolb
cli
aam
dec
adc
mov
out
jns
sete
add
add
ficomps
sbb
sub
movhps
cmp
push
js
gs
pop
sbb
and
mov
mov
divl
mov
out
pushf
adc
int
enter
lret
push
jns
call
scas
mov
negl
mov
mov
xor
add
sar
int3
data16
xor
dec
pop
lret
cmp
test
outsl
mov
sbb
pop
lret
orb
xor
cmpl
leave
rol
andb
mov
sbb
jno
sbb
mov
inc
mov
xchg
clc
sub
jbe
mov
push
mov
pop
sbb
jns
ja
cmpsl
jl
stos
push
or
addr16
mov
xlat
mov
add
outsb
cmpsl
shrl
dec
mov
fiaddl
sub
and
lret
pop
in
inc
loope
push
adc
sub
xor
mov
cmp
inc
pop
repnz
add
data16
xlat
and
cmpsb
xchg
or
lcall
aam
or
scas
sub
nop
pop
jb
sbb
test
scas
movsl
inc
mov
call
sbb
adc
jge
mov
ds
negb
aad
movsb
push
out
inc
movsl
fcoml
mov
add
xchg
mov
xor
cmp
sub
popf
pop
ror
sub
lret
out
sbb
pushf
and
addl
or
inc
xchg
jge
dec
arpl
push
mov
ss
sahf
mov
fldenv
cmp
push
dec
fs
pop
inc
mov
sub
pop
into
mov
in
mov
or
sub
xchg
mov
jbe
fists
add
inc
jecxz
and
lahf
movsl
sub
inc
and
or
adc
jb
xchg
scas
mov
sub
mov
lret
lea
in
or
ja
int
sbb
test
add
push
pushf
rclb
pushf
cwtl
ss
addl
mov
add
dec
mov
test
cmp
sbb
movsb
pusha
mov
xorl
mov
mov
sub
mov
sti
iret
push
out
mov
push
inc
lock
iret
insb
mov
lret
daa
cmp
jp
mov
add
negl
fbld
hlt
pop
mov
adc
pop
jbe
mov
xchg
outsb
inc
pop
adcb
out
xchg
jl
push
enter
add
or
mov
mov
push
cmpsl
dec
mov
cli
sbb
scas
mov
rep
mov
sub
aam
cmp
rorb
pushf
push
xor
imul
cld
arpl
jae
negl
movb
sbb
sub
dec
dec
das
cwtl
lds
mov
xor
imul
jg
add
dec
sub
int3
xchg
orb
decl
inc
in
dec
stos
std
rorb
inc
pop
int3
into
xchg
arpl
mov
je
jns
or
stc
int3
adc
push
lds
or
arpl
adc
popa
push
jle
popa
lahf
xchg
fcompl
add
sbb
inc
mov
cmp
add
test
mov
fwait
mov
js
mov
scas
imul
xor
test
cmpsl
lcall
hlt
sahf
mov
loopne
jg
out
insb
mov
loope
outsb
mov
outsb
dec
aad
testb
adc
loope
out
cli
and
xchg
push
stc
or
ljmp
xchg
cmp
mov
push
int
inc
stos
lods
aam
in
fidivrs
sbbb
pop
aam
xor
pop
jb
scas
gs
arpl
lahf
pop
dec
out
aad
scas
call
leave
add
pop
dec
pushf
sub
cmp
cli
icebp
shll
pop
stc
push
sbb
bswap
pop
loopne
loopne
mov
mov
adc
jle
mov
xchg
rcrl
sbb
in
aam
fcomip
push
adc
and
dec
addr16
movsb
jne
popf
movsb
clc
cmp
sub
push
sti
inc
scas
insl
adc
dec
push
das
or
cmpsb
sub
std
mov
adc
adc
js
xchg
push
fldt
dec
cltd
addl
push
bound
pop
inc
jp
add
andb
testb
ret
jb
cmp
ja,pn
mov
mov
iret
fisubs
sar
push
imul
std
rorl
dec
filds
ret
out
icebp
dec
xlat
xor
sti
cltd
decl
xor
fwait
mov
sbb
add
pusha
jb
test
mov
ret
imul
lcall
lahf
jge
cmc
lods
fimuls
orb
pusha
mov
jge
lret
dec
inc
xchg
stos
adc
mov
mov
jl
pusha
stc
mov
loopne
aad
adc
mov
xchg
or
hlt
jp
rolb
cwtl
mov
dec
scas
push
outsl
movntq
xchg
pop
jns
lds
add
sbb
loope
leave
lret
mov
aad
dec
push
gs
jo
movsl
sbb
mov
mov
test
lret
insb
sarl
stos
jmp
xchg
mov
mov
outsl
lea
sub
gs
test
in
call
sahf
inc
std
movsb
popf
mov
push
or
cwtl
mov
inc
or
stos
adc
dec
cwtl
iret
pop
xlat
mov
push
addr16
fwait
push
dec
orb
test
add
movsb
adc
pushf
push
push
mov
sub
mov
pop
push
aad
into
cs
test
iret
jle
pushf
xchg
mov
jg
mov
xor
inc
add
adc
cld
jg
jle
or
lods
jae
scas
xchg
mov
xor
fs
cmp
lret
xor
mov
inc
adc
mov
cltd
jno
test
mov
xchg
mov
push
xchg
xchg
pusha
dec
adc
sub
aas
pop
stos
or
jp
mov
fidivs
jno
push
jmp
rclb
bound
add
sub
popa
xor
cmp
rcrl
ljmp
jb
popa
push
xor
faddl
repnz
outsb
aas
mov
dec
lcall
and
repz
xchg
andb
addl
shr
add
scas
mov
enter
test
fs
insl
divl
sbb
mov
push
jne
mov
loopne
addr16
dec
adc
adc
or
daa
sti
jge
cltd
push
aas
dec
pop
and
sarl
pop
mov
fwait
jp
test
jg
push
test
jg
pop
sbbb
nop
inc
jb
hlt
adc
in
dec
dec
enter
int
nop
lgs
in
mov
imul
ja
push
and
mov
mov
or
pusha
jno
shrb
inc
fs
and
jl
mov
jmp
sti
in
cmpsl
jmp
and
jmp
mov
dec
ja
je
into
dec
insb
call
inc
mov
movl
je
out
cmpsb
iret
inc
xor
cmp
repz
sbb
pop
scas
sahf
mov
mov
pushf
repnz
movsl
lret
pop
mov
dec
lea
daa
das
imull
cmp
les
mulb
add
inc
bound
fiadds
leave
jmp
mov
xchg
jmp
sbb
notb
clc
clc
cmpsl
daa
into
mov
xor
popf
ficomps
addr16
xchg
push
fidivs
sbb
movsl
sbbl
push
jl
outsl
inc
push
adc
mov
js
sub
and
test
frstpm(287
mov
dec
dec
jae
rcll
jbe
mov
loope
fucomi
test
jns
or
or
or
in
sub
xchg
subl
mov
div
repnz
and
test
push
pop
scas
xor
ret
cli
rolb
shrl
mov
lock
adc
cwtl
cmp
cmp
jp
stos
lcall
stc
push
adc
pusha
dec
jb
mov
cld
ret
repz
mov
xor
sub
out
int3
and
xchg
icebp
sbb
leave
inc
jnp
in
imul
cmp
cmp
dec
lds
push
sbb
xchg
lock
adc
subb
nop
sbb
or
lret
and
leave
addl
jbe
jp
or
xchg
lret
and
out
inc
lock
dec
jb
jl
lahf
inc
push
movsb
xlat
lahf
loope
int3
add
mov
aad
out
lcall
js
pop
mov
push
repz
jbe
cmp
icebp
xor
xchg
and
movsl
lcall
xchg
push
sub
inc
jl
cmpsb
jns
jbe
push
into
cmpsl
xor
mov
rol
daa
mov
and
ja
pop
mov
xchg
adc
jo
mov
stc
ret
fadds
subb
lret
and
push
mov
jle
mov
scas
lea
push
sti
js
test
and
scas
in
cli
mov
jo
or
ss
ret
lods
xor
ss
sbb
loop
sbb
add
lock
sub
nop
bound
mov
inc
test
aam
jp
sub
push
push
pop
jb
jg
divb
stos
enter
out
xchg
inc
mov
pop
notl
cmpsb
repz
daa
mov
sub
dec
inc
iret
loope
frstor
xchg
pop
call
test
dec
pop
pop
nop
fwait
mov
jne
mov
sbb
sub
adc
sub
ss
pop
cli
push
loope
mov
jmp
lret
gs
lea
cmpsb
mov
data16
push
xor
decl
mov
rorl
sbb
push
shlb
jp
test
push
jl
adcl
fld
jns
popa
stos
lret
insl
aas
dec
lret
mov
out
sbb
mov
dec
gs
andb
xchg
pop
jno
cwtl
in
jmp
cmpsb
jp
sub
adc
jae
mov
mov
shlb
xchg
sbb
ds
pop
test
push
mov
repnz
outsl
cli
jl
push
xorb
and
lahf
xor
sub
int3
or
push
push
cmp
lret
lahf
mov
mov
into
cmp
pop
rolb
mov
std
imul
inc
testb
les
mov
ret
mov
outsb
mov
cld
jb
inc
xchg
mov
fcomip
mov
out
cld
fwait
xor
xchg
adc
sub
and
xor
loop
lahf
mov
fdivrs
lret
xchg
rclb
jg
negl
repz
shll
leave
cli
aad
rorl
xchg
scas
add
xor
jbe
or
push
jecxz
fsubs
xchg
shrl
cmp
inc
pop
je
movsb
mov
pushf
dec
sbb
subl
mov
jae
push
mov
into
add
adc
pop
mov
in
mov
das
cmpsb
rolb
xchg
cmp
daa
xor
xchg
fsubl
inc
pop
std
add
fldenv
ljmp
mov
jmp
cmp
cmpsl
dec
and
in
ds
stc
icebp
hlt
jnp
cmp
pop
hlt
pop
lea
jb
pop
nop
push
lea
mov
bound
mov
adc
mov
fwait
repnz
or
inc
cld
mov
fdivs
int3
push
sbb
test
jnp
mov
dec
and
lods
jg
lock
test
inc
push
leave
pop
dec
das
sbb
pop
and
loop
dec
lcall
lcall
leave
and
adc
arpl
adc
mov
cmpsl
mov
adc
cmp
out
addl
cmpsl
sbb
lods
cmp
sbb
mov
mov
jno
int
cmp
push
ss
and
pop
test
in
dec
jmp
cmp
int
jnp
ds
mov
pop
lea
out
cwtl
int3
inc
mov
cmp
sahf
mov
push
adc
pop
into
xchg
int
loopne
enter
shr
ss
ljmp
sbbb
imul
pop
jmp
out
mov
std
addr16
sbb
imul
subl
jae
movsb
cmp
mov
dec
jge
mov
jp
mov
pop
xor
js
imul
jmp
add
into
xchg
sbb
adc
out
cmpb
adc
or
xchg
dec
pop
jne
adc
loop
popa
cs
sbb
sti
dec
inc
shrl
xchg
jne
sub
aam
test
das
pop
dec
push
add
ret
add
sbbl
cmp
mov
push
cmpb
xor
xchg
lahf
rep
and
xor
cltd
jmp
push
ja
mov
clc
push
jb
iret
cmpsl
es
jg
and
ljmp
xor
stos
stos
nop
aas
cmpsb
loop
mov
fldcw
icebp
out
and
mov
icebp
test
ror
adc
mov
fmul
out
arpl
das
mov
test
cmp
out
add
aaa
pop
adc
popa
ret
lret
out
and
sub
scas
aam
xchg
pop
mov
jge
sarl
testb
cwtl
mov
inc
dec
xor
fxch
daa
les
jns
fs
daa
fldenv
test
or
pop
push
or
pop
imul
cmpsl
jno
cmp
pause
inc
out
lcall
xchg
pop
shrl
enter
push
imul
mov
pop
call
mov
lret
add
jbe
xor
mov
push
int
pop
inc
call
inc
xor
mov
adc
jg
pusha
rorb
test
add
cmp
aad
mov
pop
xchg
les
adc
sub
or
shll
mov
jmp
push
mov
jg
lret
push
add
or
mov
sub
gs
repnz
cltd
js
std
ss
pop
xor
and
xchg
mov
mov
jmp
mov
shll
cli
mov
push
cmp
neg
push
icebp
hlt
sub
loopne
pop
sarb
xor
loope
mov
pop
mov
add
pop
cmc
sti
leave
pop
pop
and
jg
add
ss
inc
and
xlat
movsl
cs
addr16
inc
out
js
test
roll
shlb
pop
xchg
xchg
das
pop
adc
imul
pop
mov
add
cmp
clc
dec
mov
mov
xchg
addr16
and
das
pop
jmp
sbb
jecxz
call
and
xchg
test
test
push
mov
mov
jno
xorb
or
mov
jl
sbb
out
inc
sub
mov
pop
in
aad
jg
iret
sbb
inc
push
nop
cmp
mov
test
push
and
leave
movsb
mov
push
enter
push
mov
mov
rolb
mov
sbb
xchg
cmp
mov
and
push
mov
lods
ss
inc
jnp
ret
out
push
icebp
fs
test
lods
rclb
pop
hlt
push
sub
adc
inc
jb
leave
xor
pop
push
push
mov
test
mov
mov
pop
es
int
arpl
jae
pop
push
clc
pusha
arpl
xlat
cmc
sbbb
movsl
push
xor
bswap
subl
mov
and
outsb
aad
je
push
mov
inc
or
sbb
or
lds
or
mov
pop
push
cld
roll
cld
repnz
xchg
fcompl
fistpll
sti
sysret
les
icebp
mov
out
cmp
inc
mov
outsb
pop
les
xor
jno
add
test
mov
pushf
fs
fildll
addr16
nop
mov
lods
cmp
shlb
or
js
mov
flds
xchg
dec
je
pop
out
cli
pop
fnstsw
add
pop
outsl
cli
mov
imul
dec
ss
and
mov
mov
pop
xchg
ja
sub
push
or
pop
scas
xor
pop
lods
lret
shrl
notl
mov
adc
xor
mov
mov
mov
out
push
test
pusha
adc
mov
sarb
movsb
shll
sahf
sbb
fdivrl
xchg
sub
adc
mulb
js
cltd
fcomip
jo
add
and
pop
dec
adc
daa
mov
jecxz
mov
xor
icebp
xchg
rolb
push
fnstsw
clc
hlt
andb
xchg
mov
or
mov
xchg
sbb
dec
xchg
adc
dec
insb
jae
sbb
adc
pop
dec
xorl
sub
rcrb
cmc
pop
jb
out
andb
int3
addr16
add
xchg
dec
test
notb
lea
test
mov
ficomps
sub
loopne
xchg
push
push
inc
loope
lods
loopne
bnd
mov
arpl
adc
inc
push
xchg
xor
or
inc
mov
push
ss
imul
mov
adc
adc
push
stos
fisttps
add
shl
mov
data16
lahf
call
in
dec
sub
shrb
pusha
inc
mov
lahf
out
pop
inc
mov
hlt
test
inc
xor
aam
testb
add
in
rorb
mov
pusha
lret
or
mov
stos
or
inc
dec
mov
push
lcall
mov
xor
addl
cmp
mov
xor
mov
aad
adc
ljmp
les
pop
push
sbb
das
pop
sub
mov
sub
inc
stos
xor
out
clc
and
adc
cmp
inc
lock
addl
pop
push
addr16
mov
cmc
fwait
bound
pop
xorl
jns
insl
shll
lret
or
sarb
movl
jle
pop
into
jl
pop
ja
adc
je
or
push
cmpsl
mov
or
dec
mov
jmp
bound
push
lds
adc
xor
lret
inc
aad
jl
fisubrl
xlat
sub
scas
dec
push
and
cwtl
mov
jp
aas
shll
pop
in
lret
dec
aaa
jl
aam
outsl
add
loope
int
inc
outsb
popf
jo
inc
pop
xchg
pop
js
xchg
and
outsb
mov
mov
and
leave
lret
pop
adc
mov
add
sub
mov
inc
movsb
dec
mov
xor
add
out
pop
scas
add
jno
repnz
or
jl
add
dec
fsubrp
jmp
repnz
insl
loopne
push
dec
inc
lods
cmp
inc
dec
jne
push
xchg
inc
add
out
out
mov
mov
out
jnp
fldcw
cwtl
aam
enter
in
pop
arpl
loope
lock
add
sbb
add
fadd
xchg
mov
and
mov
add
sbb
inc
bound
stc
outsb
dec
cmp
flds
mov
into
rcrb
pop
das
sahf
scas
in
inc
jmp
mov
popa
sub
jns
clc
fimuls
sub
or
mov
mov
sub
shr
popf
lahf
imul
dec
sar
pop
shlb
mov
aam
pop
mov
hlt
xor
in
sub
aam
fsts
cmp
repz
loope
jecxz
cmpsb
or
incb
adc
sbb
sbb
loope
hlt
push
and
pop
arpl
or
fmuls
or
adc
clc
scas
cmc
pop
fsub
dec
ret
popa
pop
pop
inc
mov
sbb
sti
and
xchg
cmp
pushf
nop
mov
cld
mov
xor
xor
insb
or
push
loop
push
xchg
inc
dec
es
fimuls
stos
into
inc
sub
xlat
dec
mov
inc
in
mov
xchg
ss
pop
sti
ljmp
lods
push
nop
filds
out
xchg
in
dec
mov
mov
imul
jl
fldt
cwtl
push
gs
lea
jl
sub
and
add
mov
jecxz
xchg
xchg
jo
outsb
mov
cmp
dec
lea
out
out
outsl
xchg
ljmp
ret
call
xchg
and
dec
jle
jmp
into
cmp
lcall
push
push
pop
sub
and
jne
push
mov
mov
add
ret
fstps
out
mov
xchg
pop
aas
xchg
add
cmp
or
mov
xor
mov
cmp
inc
and
mov
aas
aas
jl
dec
and
movsl
cltd
fwait
fwait
jge
inc
or
adc
mov
jmp
das
sub
cmp
stos
dec
jmp
jae
mov
mov
int
fisttps
call
les
push
mov
test
jo
cwtl
jnp
test
mov
adc
fldcw
fiadds
jg
test
roll
insb
or
cmpsb
leave
insl
and
lret
imul
stos
cltd
fnsave
jno
xlat
ja
outsb
xor
aad
mov
xchg
sub
ret
xchg
xor
lods
sbb
cli
and
xor
leave
mov
sub
in
dec
mov
lret
in
add
sbb
aaa
cmp
dec
addr16
cmp
lods
loopne
inc
clc
cmpsb
cmp
sbb
scas
mov
dec
mov
stos
push
out
je
in
mov
jne
test
data16
cmp
into
enter
dec
cmpsb
popa
test
add
xor
sub
push
shrb
lods
xor
ds
jnp
cmp
inc
cmpsl
fcomi
ljmp
or
sahf
push
fwait
lock
push
ret
orl
test
mov
ret
cld
imul
jp
mov
je
pop
inc
mov
sbb
pop
xchg
jne
push
cmp
dec
js
cmc
loop
fcmovnb
sbb
hlt
shll
add
xor
pop
ficoms
mov
lcall
xor
mov
and
or
ret
testl
and
stos
sbb
or
jecxz
cmp
add
xor
mov
lret
int3
lods
ds
sbb
in
cmp
loopne
ret
mov
sbbl
xor
pop
sti
lock
cld
movsb
idivl
call
jmp
int
mov
incl
out
and
jl
and
loop
shr
mov
fisubrs
mov
jp
sbb
movsl
sub
push
xlat
push
xor
or
mov
jle
xor
adc
pop
iret
mov
in
loop
dec
adc
les
pop
repnz
inc
iret
repnz
rclb
pop
imul
add
cwtl
insl
je
mov
mov
inc
js
out
mov
cli
mov
sahf
jbe
xlat
out
push
cmp
retw
and
mov
or
xchg
hlt
jmp
repnz
xor
inc
inc
lea
lods
xchg
adc
js
inc
inc
rolb
adc
jl
dec
inc
fdivr
arpl
xor
cmp
push
mov
pusha
cmp
fnstcw
faddl
jno
packuswb
mov
xchg
in
lods
popf
enter
pushf
add
ret
inc
mov
pop
add
pop
fadd
inc
pusha
push
mov
xchg
add
jae
jbe
sbb
loope
push
loope
and
sbb
xchg
scas
jge
sub
int
mov
aas
add
cs
push
test
sub
cmpsb
ficomps
xor
call
mov
daa
loope
ret
inc
pop
push
mov
jmp
adc
push
sub
push
ficompl
nop
jmp
popa
clc
pop
daa
addr16
cmp
andl
push
int3
lret
test
cmp
or
jl
inc
mov
push
push
jp
xchg
xchg
xchg
pop
dec
xor
pop
cltd
in
dec
jns
sbb
gs
pop
cmpsl
daa
and
inc
out
into
push
jbe
inc
adc
mov
out
sbb
loop
mov
cmp
cld
ret
testb
shll
jle
push
mov
test
fbld
push
mov
mov
or
fmul
mov
and
imul
in
repz
xor
xor
sbbl
mov
jb
stos
and
cmp
pop
cmpsb
arpl
xor
pop
pop
leave
ljmp
pop
ja
dec
add
push
or
cmp
push
or
mov
lret
dec
outsb
jbe
cmc
mov
push
test
daa
jg
jae
iret
pushf
cmp
xlat
dec
dec
frstor
call
ja
fsubrs
loopne
je
sti
imul
xor
loop
sub
push
aam
adc
sub
xor
scas
int3
mov
das
jmp
or
pushf
in
sbb
pop
adc
int
jp
popf
iret
inc
jbe
add
shlb
jp
mov
push
ljmp
lds
cld
and
jecxz
pop
sub
out
es
rcll
mov
xchg
js
or
into
and
and
in
sub
adc
adc
js
arpl
inc
or
insb
sbb
mov
and
aaa
ret
ss
jns
loope
daa
negb
into
outsb
iret
pusha
add
mov
fsubrp
cmp
jl
or
cmpsl
sbb
adcl
pop
pop
rorb
mov
loop
jae
lret
and
adc
mov
gs
stos
in
iret
adc
sahf
mov
int
loope
fildl
roll
into
push
and
xchg
jle
add
jno
mov
sbb
xor
iretw
dec
ljmp
addr16
sub
out
pop
mov
add
pushf
pop
pushf
push
ja,pt
lahf
andb
jno
mov
les
ja
ljmp
fldl
loope
dec
cmpb
mov
cwtl
cltd
push
icebp
xchg
xor
fdivl
and
jb
in
or
mov
mov
pop
cmc
mov
push
sub
test
jge
fsubrs
pop
and
xchg
xchg
ja
dec
addb
inc
jecxz
out
loope
mov
jge
loopne
int3
ja
addb
mov
inc
pusha
xor
sbb
pop
xor
fistps
movsb
sub
xchg
adc
jmp
shlb
or
mov
aaa
lret
cwtl
mov
add
icebp
cmp
mov
lahf
pop
pushf
xchg
jo
popa
inc
bound
jle
mov
or
fldenv
notl
or
outsl
mov
mov
adc
test
xor
and
inc
or
leave
sub
bound
and
sbb
cmp
int3
sbb
clc
mov
rcrl
cs
and
insl
mov
addr16
fadds
lods
dec
cli
popa
fdivs
loope
push
out
outsb
sbb
or
push
sbb
fldt
roll
mov
das
ds
add
add
movl
bound
repnz
or
scas
ss
fnstcw
cmp
inc
jle
and
xor
cmc
push
mov
arpl
cmpsl
in
insl
adc
mov
nop
or
repz
insb
and
inc
cld
lahf
cwtl
sti
out
and
daa
std
cs
mov
cmp
mov
push
cwtl
add
xor
cmp
mov
roll
mov
outsl
outsb
inc
loop
es
mov
je
aas
jp
fwait
lock
fwait
daa
sbb
gs
test
or
outsl
aas
or
mov
adc
adc
in
outsl
fnstenv
shl
arpl
xlat
push
ret
shrl
jp
in
lds
ja
mov
movsb
arpl
jge
fsubl
in
sti
dec
movsb
insb
mov
xlat
jecxz
push
idivb
andb
in
iret
jo
call
inc
flds
scas
sbb
insb
sub
repnz
add
les
stc
test
jno
push
imul
jbe
xor
pop
dec
jecxz
xchg
enter
fistpll
cld
fwait
jecxz
cld
dec
ljmp
sbbb
xor
lahf
or
jnp
sub
das
add
stc
jbe
in
jae
mov
dec
mov
iret
xchg
inc
or
imul
jmp
and
outsb
test
ds
aaa
sub
pop
sbb
xchg
stos
jge
ja
icebp
or
push
in
inc
stos
sub
ss
xchg
dec
repz
inc
in
xchg
push
cmc
sbb
movsb
cmpsb
pop
mov
movsl
div
sbbb
push
or
repz
es
pop
or
sub
inc
push
imulb
mov
or
pop
pop
push
fisttpl
xchg
push
sbb
mov
xor
push
pop
cli
mov
cmc
out
cmp
mov
dec
insl
lahf
cmp
aam
andb
or
jb
or
ror
cmp
adc
cli
or
addr16
jle
jns
xchg
add
sub
mov
insb
jbe
inc
sbb
mov
stc
cmc
lcall
test
test
stc
call
mov
xchg
in
adc
pop
test
xchg
pop
sti
xchg
adc
dec
cmp
rol
xchg
xchg
jp
stos
iret
addr16
fsubl
lods
push
test
inc
testl
gs
movsl
dec
mov
cmpsl
mov
dec
inc
and
cmc
inc
sbb
adc
or
jo
xchg
mov
xor
and
sbb
jmp
mov
jp
pop
cmp
in
mov
mov
out
add
push
lret
push
mov
cmp
subl
mov
mov
mov
sub
adc
cli
insb
inc
pop
pop
divl
lds
fucomi
mov
mov
inc
subl
out
dec
outsl
lods
jns
mov
and
push
pop
inc
adc
cli
mov
gs
push
xchg
outsb
mov
test
and
lret
stos
pop
ljmp
clc
aas
dec
call
insl
fistl
mov
outsl
xchg
mov
xchg
arpl
dec
mov
sbb
mov
dec
enter
cmpb
mov
div
push
ja
jb
mov
xor
cmp
mov
pop
inc
inc
mov
out
add
out
jmp
loope
xor
cmpsb
dec
or
xchg
ror
xchg
mov
imul
add
dec
push
pop
cwtl
push
hlt
pop
lret
movsl
outsl
push
icebp
jae
jae
lret
fbstp
xchg
dec
jl
test
push
mov
fstpl
nop
in
inc
mov
cmp
sbb
mov
insb
addr16
adc
test
inc
xchg
mov
and
xor
out
jp
idivb
jo
gs
pop
jnp
xor
mov
or
or
sub
or
pop
sub
cmp
clc
clc
int3
pop
or
push
push
mov
lock
testb
mov
popa
and
xor
fucom
repz
xor
push
and
lea
jbe
sar
mulb
movsl
mov
mov
and
scas
dec
push
adc
add
mov
jp
cmp
add
inc
mov
cmp
xchg
add
pop
add
daa
dec
jnp,pn
aam
fsubrl
fsubl
sub
sub
in
fstl
sbb
mov
mov
mov
sub
or
xor
or
jge
and
cmp
in
jnp
and
cwtl
jns
jl
testl
mov
cmp
pop
or
dec
push
dec
cmp
fdivl
mov
test
test
sub
add
push
lea
pusha
jno
jl
fnstenv
or
xchg
adc
aaa
push
xchg
xor
xchg
icebp
xor
imul
jecxz
adcl
incl
fwait
xchg
pop
mov
fisttps
loope
insb
jno
jg
inc
test
jl
dec
rcrl
mov
imul
push
pusha
es
xchg
xchg
xchg
adc
cld
call
jle
pop
mov
stos
push
cwtl
xchg
out
faddl
or
lock
stos
and
sti
shlb
mov
test
mov
addr16
icebp
sub
sub
imul
mov
data16
popa
cld
les
cmpsb
dec
dec
or
xchg
xor
shlb
inc
cmpsb
das
iret
pop
jecxz
fmulp
jae
jb
jp
insl
les
jno
add
cmc
icebp
jp
add
cwtl
mov
lahf
sub
jno
add
in
jbe
jne
mov
stos
inc
xchg
jo
xor
sub
pop
inc
insl
mov
push
jecxz
xchg
in
ss
add
push
popa
movsb
sub
adc
mov
jne
adc
je
daa
fisubl
pop
or
lret
pusha
iret
cli
xchg
popa
sub
mov
dec
int3
mov
mov
movb
fwait
xchg
adc
inc
lahf
sbb
into
sti
jne
cmp
in
adc
xchg
lods
subb
sbb
addr16
add
lds
jecxz
jl
ja
in
lcall
inc
pop
test
fnstenv
je
cmpsl
jge
pop
enter
bound
mov
xor
pop
lods
leave
xor
xor
fwait
or
decl
jg
lds
mov
jp
and
inc
push
fs
mov
int3
pushl
orl
mov
cmpsl
mov
cmc
jno
ss
jae
cmpsl
push
jecxz
and
imul
ja
cmc
mov
imul
sub
adc
ljmp
push
jo
data16
lds
cmc
insb
mov
mov
test
push
out
testb
xchg
dec
adc
icebp
and
inc
call
in
aaa
je
or
rol
sbb
andb
aad
jmp
adc
pop
aaa
sub
incl
push
sbb
add
or
jae
xor
lahf
dec
sbb
dec
lock
or
mov
lahf
cmc
idivb
jge
jnp
cmp
dec
pop
std
inc
mov
sbb
fmulp
outsb
push
adcl
clc
call
pushf
push
and
int
les
cwtl
outsb
jle
ret
std
sarl
push
cmp
sbb
popf
andb
jecxz
fnstenv
cmp
gs
pop
dec
cmp
dec
mov
jp
and
sti
popf
call
cmpsl
dec
subb
je
jae
data16
testb
jo
jmp
push
adcl
lods
cmp
mov
out
xor
xchg
adc
pop
in
xor
mov
lahf
adc
dec
pop
push
sbb
sub
cmpsl
sub
subb
xor
jge
mov
aaa
and
mov
dec
push
add
sahf
pop
out
jge
faddp
mov
sub
lock
add
push
or
loope
push
push
mov
js
hlt
jae
or
fdivrl
push
cmp
mov
es
xor
fsts
cmp
push
adc
adc
sbb
std
inc
ret
clc
jl
xor
mov
cmp
scas
rcrl
sub
jle
les
punpcklwd
daa
mov
jmp
test
jo
xor
mov
loope
cltd
out
shlb
in
and
aam
inc
push
lret
outsb
aas
mov
aas
mov
stos
pushf
test
push
pop
iret
inc
cmp
and
andl
mov
ds
nop
and
mov
outsb
iret
mov
dec
movsb
lods
mov
lock
enter
add
mov
xchg
mov
jb
in
inc
imul
mov
inc
shrl
push
inc
cwtl
repnz
inc
sbb
int
inc
jge
inc
fmuls
add
xchg
mov
fsubr
test
mov
jmp
sahf
cmc
push
popa
inc
xor
add
push
jl
notb
test
xchg
popa
dec
std
mov
push
fnstenv
inc
lcall
mov
mov
mov
in
and
dec
daa
ljmp
inc
push
cmp
stos
aam
cmp
dec
lcall
push
fwait
sbb
mov
mov
movsl
sbbl
test
sub
sub
mov
testb
mov
mov
andl
or
int
mov
imul
popa
stos
xor
loope
or
inc
cli
rorb
pop
fbld
insl
lock
adc
scas
xchg
cli
xor
sub
pop
push
sbb
mov
xchg
movsl
stos
dec
nop
stos
sbb
repz
test
mov
push
test
popa
jb
push
clc
insl
xchg
cltd
jbe
lods
push
lock
or
jmp
mov
jle
pop
loopne
pop
out
clc
mov
test
jge
ret
loope
fwait
dec
ffreep
xor
aaa
cwtl
arpl
pop
sbb
sbb
lahf
jl
dec
imul
lahf
imul
push
sbbb
movsl
test
adc
cwtl
mov
in
movsl
in
jmp
insl
push
shlb
pop
xchg
iret
adc
stos
inc
scas
ss
jo
fs
cmc
into
sarl
test
jno
ret
push
test
popa
adc
dec
mov
jae
test
fisttps
mov
pop
loopne
mov
repnz
cmp
jl
mov
loopne
inc
sub
and
in
in
pop
mov
outsl
hlt
pop
icebp
jecxz
push
fistps
or
push
aaa
mov
and
mov
xor
aas
cmp
lock
add
lock
movsb
xchg
idivb
bound
ficompl
inc
call
xchg
into
enter
cmp
dec
mov
shll
xchg
or
or
fnstsw
push
push
push
pop
enter
xchg
loopne
fadds
lods
xor
enter
in
iret
in
movsb
cmp
les
mov
jne
fmuls
lds
inc
cmpsb
cmpsl
arpl
dec
push
cmp
jno
mov
repnz
cmp
push
lret
push
int
add
xor
cs
stos
call
insl
inc
add
mov
shrb
and
mov
in
dec
adc
mov
and
mov
inc
jle
jge
cmpsl
mov
sub
std
mov
mov
iret
cmp
inc
mov
add
inc
test
inc
sbb
sub
mov
lcall
cmp
arpl
add
jne
mov
lods
out
jle
insl
xor
xchg
xchg
popf
xlat
popa
cwtl
out
lret
lret
aaa
js
push
ss
mov
add
aas
mov
repz
or
jl
push
hlt
fstpt
es
sti
inc
movsl
clc
jg
adc
xchg
je
nop
inc
out
out
add
cmp
push
pop
add
jge
pushf
inc
aas
jl,pt
mov
ss
outsb
xchg
mov
mov
adc
mov
cmc
pusha
lahf
popl
cmpl
cwtl
jg
add
loope
leave
fstp
outsl
out
push
add
adc
mov
repnz
and
mov
mov
icebp
xchg
test
js
mov
iret
fcoms
sub
lods
cwtl
jecxz
sbb
mov
or
nop
pop
jmp
mov
add
xor
cmpsb
pusha
or
jb
test
in
or
jne
iret
stc
dec
insb
enter
repnz
sub
dec
lods
pop
xor
add
add
popl
pop
repz
jecxz
sahf
in
mov
add
and
or
ds
xchg
xchg
or
jmp
dec
jne
push
or
sub
loope
addr16
sbb
jns
stos
outsb
xchg
pop
out
pop
sub
jbe
into
mov
cmpxchg
int3
movsl
test
frstor
arpl
mov
pushaw
subb
jecxz
mov
jg
rcll
stos
daa
addr16
mov
push
shl
ss
repz
and
aas
xchg
pop
dec
xor
ja,pn
jl
aas
sub
push
mov
in
inc
leave
andl
rolb
mov
es
mov
incl
xchg
sbb
vldmxcsr
in
jae
int3
mov
adc
mov
sub
leave
movsl
mov
pusha
jne
fisttps
in
sbb
sahf
sbb
in
cld
xchg
sahf
fwait
mov
pop
mov
mov
aas
jb
xchg
outsl
ds
add
push
mov
fistpl
mov
dec
or
mov
fstpl
add
xchg
xor
sub
pop
js
into
mov
jne
je
js
insl
sub
repz
dec
xlat
cld
pop
adc
lahf
xor
cltd
adc
cmp
insl
inc
xchg
iret
pop
ret
cmpsl
testl
jb
sti
cltd
testl
fists
idiv
or
mov
lods
test
fsubr
movsl
or
pop
leave
ja
or
mov
mov
add
add
imul
sti
and
jg
cli
stos
push
mov
inc
add
fstps
cld
repnz
jns
movsl
pop
add
lcall
sbb
out
xor
lds
out
cmp
daa
fdivl
cmp
mov
inc
mov
sbb
dec
jns
pop
inc
and
lahf
mov
sub
xor
out
mov
dec
out
mov
mov
add
gs
mov
xor
pop
in
addl
mov
in
and
sbb
mov
push
int
out
jl
push
cmp
nopl
data16
int3
push
repz
push
pop
sub
xchg
cmp
jbe
div
dec
adc
aad
mov
sub
xchg
push
idivl
roll
and
dec
imul
xor
popa
pop
mov
js
std
test
fisubs
fnstcw
push
pop
mov
sbb
imul
xchg
jns
dec
mov
push
out
test
sub
call
pop
mov
stc
mov
ss
pop
xchg
lea
adc
mov
lahf
leave
popf
scas
xchg
inc
xor
add
mov
stos
jns
pop
xchg
inc
xchg
or
add
xchg
or
jl
dec
arpl
fimuls
lock
pop
cmc
fstps
cmpsb
cli
jecxz
add
das
aad
test
sbb
or
push
adc
inc
and
mov
les
jle
loopne
test
mov
cli
popf
lea
rorl
stos
push
mov
ret
mov
sti
cmp
lret
cld
movsb
rorl
insl
mov
mov
push
mov
inc
jbe
ficoms
jg
ret
cwtl
and
mov
in
int
mov
das
add
mov
loopne
push
test
stc
shlb
push
dec
rcll
mov
adc
fiaddl
mov
lret
jmp
and
iret
cvttps2pi
lods
imul
xor
sub
les
into
push
lods
stc
sub
loope
xor
mov
jl
mov
sbb
push
mull
dec
pushf
fucomi
ret
cltd
outsl
dec
cld
mov
ss
cs
add
cmp
sbb
dec
fdivrp
mov
in
mov
mov
out
icebp
jb
jmp
lret
sti
or
enter
lock
sahf
mov
jg
pushf
sub
adc
call
mov
test
and
adc
inc
out
push
jle
and
aad
cs
out
or
int3
lahf
test
rolb
outsb
adc
sbb
xchg
or
mov
lea
mov
dec
fimuls
insl
dec
aam
mov
ds
mov
and
adc
pusha
test
into
pop
push
shll
dec
cmc
jp
sti
mov
inc
mov
pop
ds
iret
jp
popa
xchg
sbb
or
aaa
int
sbb
inc
and
dec
pop
cmp
js
dec
pop
lock
or
pminub
scas
dec
lret
pop
jae
push
and
stc
int3
or
pop
cmp
or
push
ss
push
iret
das
nop
or
cwtl
cmp
push
aas
lock
clc
pusha
jo
push
addr16
notl
or
push
sti
or
scas
lcall
sub
xlat
mov
cli
mov
dec
jb
inc
lcall
sbb
push
addr16
outsb
sbb
repz
outsb
daa
sbb
add
jae
test
jbe
das
pop
imul
lahf
lods
sub
sub
adc
out
inc
sbbw
sahf
sub
in
mov
test
mov
xchg
push
inc
stc
mov
sbb
adc
int3
bound
sbb
mov
sbb
fildll
jbe
gs
sbb
or
bound
lock
sbb
je
cmp
in
mov
add
add
mov
sub
clc
mov
jp
cmp
loop
or
adc
icebp
scas
sub
jg
ss
loopne
xchg
test
scas
or
cld
inc
mov
sbb
cmp
cmp
xor
sbb
lock
test
testl
inc
mov
popl
les
cmpsl
nop
xchg
testb
pop
add
add
cld
cld
adc
shll
xor
jecxz
or
stc
mov
mov
adc
ja
lcall
nop
and
dec
jbe
ljmp
nop
aas
add
enter
les
push
fs
sti
xor
cmp
sub
xchg
adc
dec
pop
jns
scas
mov
mov
into
cmc
icebp
mov
mov
lock
sub
cmp
xchg
jb
add
sub
inc
push
and
and
mov
movsb
or
lods
jle
lar
or
sbb
pop
dec
jg
ret
icebp
dec
push
clc
dec
mov
adc
xlat
js
imul
imul
mov
or
adc
dec
add
push
aad
jne
out
xchg
imul
adc
sbb
mov
mov
test
pop
loopne
pop
sub
pop
std
aas
out
dec
mov
mov
movsb
fmull
loop
and
mov
mov
push
stc
mov
dec
insb
mov
and
icebp
add
arpl
mov
cld
int3
outsl
pop
push
mov
pop
push
pop
cs
xor
adc
outsb
xchg
bound
dec
lock
popa
hlt
mov
stos
movsb
nop
sbbl
adc
jbe
int3
jl
jae
push
inc
sbb
adc
shrb
jbe
mov
psubq
sahf
int3
dec
pop
enter
aaa
adc
ja
fsubl
sbb
clc
mov
in
sbb
mov
xchg
xchg
ret
inc
outsl
into
scas
call
js
sub
rcrl
aam
cmp
mov
inc
mov
mov
jmp
out
mov
adc
loop
inc
sahf
push
and
mov
gs
negl
jne
push
lret
xchg
dec
arpl
data16
popf
jb
sbb
or
pop
or
jp
inc
or
mov
out
rorl
je
mov
and
mov
push
xchg
jnp
push
push
lods
sub
out
xor
and
mov
or
lods
arpl
lcall
mov
inc
call
loope
imul
mov
mov
pop
jle
adc
jb
aad
pop
outsb
loopne
jae
scas
add
or
pop
std
mov
ret
fldenv
pop
daa
outsl
push
adcb
insl
int
das
push
outsb
pop
cmp
mov
aam
jno
pushf
adc
dec
test
lea
mov
jge
add
or
mov
mov
out
pop
sbb
adc
data16
ljmp
shlb
mov
cmp
pop
xchg
sbb
cld
dec
jg
sbb
push
mov
xchg
outsb
adc
add
xchg
and
sbb
pop
push
aam
stc
pop
mov
hlt
sub
test
loopne
adc
adc
inc
cmp
inc
mov
pop
shrb
in
rclb
xor
fstl
cmpb
mov
fisubrs
jecxz
cmp
mov
aam
jns
xor
jl
mov
mov
cmp
je
nop
adc
jae
dec
and
cwtl
dec
inc
inc
mov
xor
add
addr16
cmp
xchg
and
flds
push
cmp
and
jmp
pop
leave
mov
addl
popa
sahf
idivl
imul
xchg
and
stos
sarb
test
xchg
out
and
sbb
sub
sub
cmc
mov
popa
pop
add
push
mov
into
or
out
ja
fcomi
push
mov
pop
mov
xor
inc
or
cwtl
inc
cwtl
inc
data16
xchg
push
jle
mov
xchg
jne
cli
inc
mov
pop
in
jb
mov
std
outsb
adc
push
loop
push
es
mov
ret
jbe
mov
mov
mov
xchg
xchg
out
mov
lock
jmp
mov
cmp
pop
cmp
cmp
hlt
out
jno
mov
jb
cli
insb
jl
dec
mov
movsl
cmpsb
fyl2x
incl
fbld
adc
in
movsb
and
jne
dec
or
and
out
xchg
adc
cmpsb
sub
mov
or
and
loopne
imul
lods
cmp
add
xchg
outsl
mov
mov
pop
bound
xor
call
xchg
adc
mov
dec
inc
xor
leave
sub
bound
push
mov
pop
cmp
in
mov
out
sub
fdivrs
int
xlat
clc
mov
mov
outsb
add
pushf
jnp
add
xchg
ja
fstp
or
cwtl
xchg
in
outsb
sbb
jnp
repnz
sbb
pop
dec
sbb
les
jecxz
int
testl
arpl
fisttpll
jl
in
stos
sbb
sbb
cmp
inc
inc
sbb
in
call
cmpsb
push
xchg
pop
mov
sahf
in
xor
pop
add
inc
fcmovnbe
mov
andl
push
cmpsl
and
scas
adc
aad
aaa
test
scas
out
enter
jle
sbb
aam
int
mov
ljmp
push
mov
mov
lea
test
sbb
dec
stos
dec
leave
mov
push
xchg
adc
push
ret
imul
inc
inc
les
jne
push
xchg
fs
ds
sete
push
cmpsb
cs
jae
movsb
cmp
fbld
test
and
mov
jg
push
lea
xor
sub
add
jns
inc
rcrb
cmp
inc
jb
xor
sbb
adc
lea
mov
fsubl
fmull
cmp
jae
fldenv
lcall
mov
out
or
gs
test
in
lret
jbe
stos
and
adc
fcompl
xor
insl
jno
and
dec
pusha
xor
xchg
stc
ds
pop
jmp
into
fldl
fcomps
push
adc
and
pop
sbb
ja
dec
shrl
mov
push
outsb
enter
dec
lods
out
out
mov
push
arpl
fisubs
ds
stc
jbe
xchg
pop
out
mov
xor
pop
in
inc
inc
ret
and
test
movsl
jne
scas
mov
xor
mov
xlat
adc
sub
xor
lock
cmpsl
sti
mov
fiaddl
ds
mov
lahf
scas
adc
mov
inc
add
lret
push
arpl
scas
aam
cld
je
add
pop
add
test
movb
hlt
mov
or
stos
jp
xchg
cmp
push
dec
xor
cmpb
sub
in
mov
push
xor
mov
decl
std
and
movsl
mov
cld
enter
outsb
xor
shl
cmc
test
dec
in
lret
cltd
xor
popf
add
push
rorb
mov
test
push
add
div
mov
add
lret
sbb
jmp
and
dec
mov
addb
and
in
clc
lret
mov
imul
out
jns
mov
or
push
sub
inc
imul
mov
xor
rorb
aas
pop
pop
cmp
shl
mov
mov
mov
lods
enter
push
mov
addr16
lret
outsl
in
cmpsb
jb
cmp
cltd
inc
xor
push
push
sti
loopne
xor
fs
jb
add
push
test
pop
lret
shlb
sub
icebp
mov
xchg
mov
aas
jb
fstp
xchg
push
cwtl
xorl
sbb
pop
xchg
push
push
pop
sbb
cmpsb
push
test
mov
popf
mov
add
aas
outsl
in
scas
ret
dec
cld
outsl
cli
add
int
jecxz
jecxz
push
iret
int3
adc
outsb
cmpsl
adc
xor
cmp
pop
sar
sub
jo
cmp
clc
adc
jmp
leave
xchg
bound
dec
out
data16
movsl
lods
jne
mov
dec
lods
mov
lret
out
mov
test
cmp
mov
lods
mov
fidivl
in
rorl
sub
inc
lahf
sar
mov
pop
int3
and
cmpsb
into
roll
stos
out
push
fmull
pop
mov
mov
jo
jg
inc
inc
adc
add
std
inc
orb
jne
in
push
mov
aam
or
mov
mov
xlat
or
push
cli
into
out
xor
test
jle
fwait
call
sub
mov
cmp
jo
mov
xchg
jmp
dec
int
int
aam
and
in
loope
mov
sti
mov
pop
arpl
andl
cmpsl
mov
outsl
enter
test
leave
cmp
jp
int3
ljmp
cld
push
test
cmpl
mov
fwait
rclb
sbb
das
out
inc
dec
xchg
and
jb
inc
imul
pop
mov
hlt
adc
and
cld
insb
fdivrs
sar
adc
push
rol
add
cld
dec
out
sbb
pop
jne
jne
jne
adc
jle
lods
dec
xor
data16
push
jns
arpl
mov
xchg
or
xor
loop
dec
in
pop
cmc
pop
insl
icebp
test
mov
scas
rcl
arpl
add
push
hlt
cmpsl
xchg
fcoml
cmp
into
ss
pop
iret
inc
in
adc
mov
aad
and
sbb
adc
test
sbb
sbb
inc
xor
push
fcmovbe
out
mov
mov
push
int
push
or
cmp
outsb
or
mov
xchg
iret
push
jl
add
or
cmp
mov
sbb
inc
loopne
cmc
je
rcrb
popa
xchg
xchg
imul
mov
mov
lds
decl
shlb
scas
daa
ret
fcoms
fidivs
mov
pop
xor
add
mov
mov
add
xor
jmp
loopne
test
es
mov
lea
push
sbb
cmc
das
cwtl
dec
js
sbb
inc
imul
je
xchg
push
pop
jnp
mov
jo
loope
ss
rorl
jmp
out
in
ret
xchg
setbe
subb
aas
add
mov
bound
loopne
scas
mov
outsb
push
jl
movsl
mov
sub
sub
pop
cmp
fucomip
push
jnp
insl
imul
cmc
lea
jae
fmuls
test
repz
daa
mov
stos
fldenv
daa
cmp
xor
sti
pop
pop
jecxz
mov
cmp
dec
daa
addb
fstp
sbb
out
mov
sub
sbb
iret
imul
pop
lcall
mov
sub
insb
sub
push
and
push
sub
scas
add
push
lods
cmpb
mov
xor
mov
cmpsb
jnp
in
mov
sub
mov
test
mov
setle
adc
xchg
int
cld
adcb
push
push
add
jb
ja
inc
fldl
rcrb
inc
push
in
fsubrs
clc
inc
lods
xor
sbb
xlat
cmp
pop
adc
push
lahf
in
dec
xor
pop
lods
cli
cmp
xor
push
dec
pop
xorb
loop
push
test
mov
push
mov
xchg
pop
push
jno
xchg
mov
or
sbb
icebp
mov
leave
xorb
add
insb
ss
pop
bound
and
aad
mov
jns
inc
jl
pop
loope
inc
or
imul
mov
aam
add
cmc
in
ljmp
ror
enter
popa
push
jnp
xchg
stos
addr16
aam
pop
call
push
pop
insb
scas
add
inc
xor
mov
mov
into
push
or
sub
loopne
lret
inc
xchg
ficompl
push
mov
call
cmpsl
test
adc
cmp
mov
mov
xchg
enter
jle
inc
outsl
pusha
out
sub
lea
push
push
cmc
or
jne
repz
mov
in
jnp
sar
daa
pushf
mov
sbb
mov
dec
int
mov
jnp
jmp
lret
aad
sbb
pop
imul
mov
dec
sub
fsubrp
inc
pop
lcall
push
adc
out
insb
seto
je
lahf
mov
jno
cmpsl
cli
inc
push
fmuls
repz
into
repz
jmp
mov
test
aaa
jmp
or
pop
xchg
mov
fldt
jge
sbbl
into
add
add
sbb
into
mov
iret
pop
jae
xor
fistpl
jp
sbb
push
fistpll
add
mov
inc
test
insb
sbb
roll
adc
and
fcomi
inc
mov
xor
adc
jle
push
stos
mov
cli
jecxz
lret
shl
in
jno
xchg
push
inc
dec
ret
in
jbe
jnp
scas
test
ljmp
arpl
inc
pop
std
mov
test
cmp
dec
insl
arpl
test
jno
icebp
pop
inc
fwait
add
sub
push
xlat
jmp
into
imul
in
push
cmp
xchg
pop
call
xor
dec
or
std
cmpsb
ja
loopne
scas
ret
adc
cmp
jle
mov
jg
jle
aad
cltd
adc
imul
inc
popa
sbb
mulb
or
nop
or
jmp
mov
insl
int3
fildl
rep
add
cmpsl
call
fimuls
lock
mov
dec
cmp
ret
outsb
xchg
or
xor
push
or
jle
ljmp
or
fisubrl
rcrl
xchg
mov
stos
addb
fdivl
and
mov
lock
push
mov
cltd
jb
lock
inc
xchg
xchg
push
shl
mov
adc
rolb
loop
fwait
xor
sub
leave
shrb
sbb
imul
loopne
and
das
dec
cmpsl
jns
into
fisttpl
shll
leave
dec
aaa
negl
jg
mov
add
clc
out
and
popf
js
xchg
cmpsb
xchg
out
ret
repz
in
mov
in
push
mov
test
mov
jbe
pop
or
stos
les
sbb
jmp
adc
nop
mov
sbb
jae
test
and
xchg
arpl
addb
loope
out
pop
addb
push
sub
fwait
les
es
into
imul
sbb
rolb
aam
xchg
mov
fists
in
push
iret
outsb
push
pop
gs
xor
and
popa
push
mov
xor
inc
imul
jae
mov
xchg
mov
hlt
repz
loope
ljmp
pop
adc
mov
cmp
fcmovu
jnp
xorb
pop
stos
sti
arpl
enter
pop
test
leave
sarl
ret
out
adc
jecxz
int3
movlhps
imul
divb
mov
jb
xchg
adc
push
cmp
inc
or
scas
clc
inc
mov
xchg
inc
jnp
push
sbb
mov
roll
dec
clc
add
dec
push
push
std
xchg
inc
repnz
xlat
cltd
inc
sub
pop
in
mov
cli
dec
mov
push
mov
outsl
xchg
inc
repnz
or
ljmp
xor
xchg
sbb
add
gs
hlt
iret
dec
cmc
adc
test
jl
loope
call
adc
mov
cmp
gs
enter
adc
xchg
popf
push
push
lcall
jae
mov
lret
lds
add
pop
push
addl
sub
or
icebp
imul
add
rorb
mov
loope
pop
ljmp
mov
adc
adc
into
xor
inc
jge
enter
lock
inc
dec
dec
stc
hlt
daa
sub
imul
loope
jo
and
mov
push
shlb
pop
add
imul
mov
clc
mov
stos
inc
and
loope
jb
xlat
mov
mov
rep
mov
xchg
ss
shlb
and
jle
fidivs
jge
ret
adc
mov
mov
inc
sahf
scas
mov
sub
pop
inc
lahf
fst
push
mov
mov
out
xlat
inc
lds
fwait
lcallw
insb
xor
test
adc
aam
loope
jne
in
cmp
les
cmc
xchg
jae
pop
aaa
inc
hlt
mov
cmp
aam
data16
sub
push
daa
adc
leave
pop
push
xchg
negl
inc
pop
movsl
iret
dec
mov
jg
hlt
cli
pop
sub
and
imul
cmp
into
lret
jbe
push
sub
jne
int
ror
xor
popa
inc
jae
imul
inc
push
addl
stos
inc
or
push
mov
push
test
or
insb
push
fwait
cltd
adc
clc
cmp
not
pop
sarl
xor
ss
cmp
popa
xor
adc
sahf
cli
pushf
cwtl
mov
adc
std
lret
pop
daa
ja
jle
push
mov
fsubs
nop
out
nop
sarb
add
mov
in
jns
xchg
mov
xchg
mov
subl
jno
outsl
jno
or
pop
add
xor
add
mov
jbe
xchg
xor
mov
mov
and
or
lds
insl
pusha
scas
xchg
adc
xabort
divl
dec
push
shll
imul
inc
stos
ret
mov
and
lret
arpl
pop
jmp
loope
xorb
cmp
mov
push
pop
fs
pusha
cltd
cmp
dec
pushf
aaa
pushf
int3
mov
sbb
rclb
lock
xor
sbb
fcmovbe
or
bound
cmp
ret
nop
and
mov
das
dec
std
js
out
popf
mov
push
fmull
ja
add
jbe
sub
xlat
pop
lock
xchg
mov
sbb
iret
sarb
addr16
lret
icebp
test
and
xchg
ja
mov
fs
mov
cmc
je
loopne
bnd
xchg
filds
mov
push
mov
sbb
ret
hlt
into
mov
dec
stc
cltd
popl
inc
xlat
xlat
jo
arpl
sahf
movsl
jns
adc
or
shrl
scas
mov
fldcw
fs
add
mov
ljmp
lcall
js
or
lea
jb
inc
popf
sub
sbb
fwait
imul
shl
sub
dec
out
lea
sarb
pop
sub
xor
and
push
mov
jb
adc
or
jecxz
cmp
sub
sti
xor
outsb
push
jmp
scas
or
push
jae
sub
repnz
xchg
incl
insl
inc
fxam
mov
call
fs
sub
scas
or
mov
outsb
icebp
mov
jnp
dec
sub
dec
xchg
insl
pushf
in
iret
fwait
sbb
or
andb
xchg
int3
mov
or
mov
in
mov
xor
das
bound
out
inc
sahf
and
lret
lods
xor
mov
jno
arpl
shl
cmp
jno
mov
lcall
jns
inc
push
sbb
mov
inc
push
jge
fs
fdivl
push
inc
pop
lahf
lret
mov
xchg
lods
adcl
lods
cmp
push
jg
mov
daa
xchg
rcrl
push
or
jne
fiadds
insb
sbb
adc
push
xchg
or
sbbl
dec
mov
push
enter
jns
xor
pop
sub
cs
lea
inc
in
xor
xor
add
pop
mov
test
jle
sldt
subl
icebp
inc
hlt
mov
int3
jecxz
dec
adc
in
or
loopne
adc
dec
dec
xchg
cmp
fwait
loop
gs
and
xlat
int3
inc
dec
insb
ficompl
sub
repz
testl
cmc
cmp
scas
xor
and
push
daa
jecxz
cwtl
test
cmp
push
stos
jb
jmp
inc
shrl
inc
and
inc
fs
cwtl
out
or
push
pop
and
mov
sbb
jne
bswap
das
data16
orb
sbb
push
lcall
lret
lret
mov
add
in
stc
pcmpeqw
and
and
jg
sub
movsb
les
mov
out
ljmp
mov
test
lret
addl
lretw
cwtl
dec
or
ret
mov
mov
ja
in
in
popa
js
sbb
test
pop
cmp
lds
push
repnz
push
push
pop
in
dec
addr16
loop
inc
mov
and
sbb
inc
or
xchg
inc
dec
sub
push
inc
js
outsl
inc
into
xchg
ja
movsl
xor
mov
cmpsb
aaa
jecxz
jp
sbb
in
scas
fidivrs
nop
fdivrs
fwait
shlb
sub
or
stos
cmp
fadd
and
cmp
cmp
sbb
sbb
lea
mov
dec
rcr
jno
dec
je
enter
in
and
pop
sarl
push
mov
or
cmp
cmp
xor
int3
les
and
push
fnsave
push
out
fwait
sahf
cmp
and
mov
leave
cmp
mov
fsts
jecxz
orb
mov
clc
inc
jbe
lcall
sbb
mov
adc
cmp
popf
jno
mov
add
add
sub
adc
adc
adc
pop
fdivrs
push
hlt
mov
sub
into
push
xor
mov
scas
jle
xor
pop
mov
enter
add
fistpll
xor
push
imul
mov
movsl
icebp
inc
iret
or
and
andb
les
xor
je
ret
cmp
lods
fcoml
or
jmp
icebp
popa
mov
mov
pushf
lret
cli
mov
dec
fwait
inc
fistpl
jg
jecxz
jb
jge
mov
adc
lcall
jns
out
scas
aam
icebp
in
cwtl
pop
pop
xchg
inc
fs
cld
dec
ja
jno
scas
lods
daa
pop
test
cmc
call
subl
jbe
out
cltd
pop
mov
mov
stos
fxch
cld
imul
xchg
call
call
lret
int3
and
jnp
sub
fcoml
dec
testl
sbb
mov
test
mov
std
or
or
inc
dec
arpl
and
roll
fnstenv
pop
cwtl
das
and
or
mov
mov
xchg
cmpsl
sahf
into
cmp
in
push
add
movsl
outsl
adc
mov
js
inc
mov
mov
and
jmp
adc
fmul
test
add
rcrl
jbe
outsb
dec
out
and
test
and
mov
rorl
xor
jg
pop
pop
and
sbbb
pop
mov
mov
adc
into
scas
inc
dec
jp
xchg
mov
popa
clc
insl
mov
inc
adcb
sbb
insl
je
loop
push
frstor
stos
inc
int3
loop
adc
push
adc
push
int
scas
insb
jb
aas
mov
add
mov
out
stos
out
lahf
repz
push
inc
xor
lret
and
imul
push
push
int
sbb
mov
fisubs
pop
lea
pop
mov
mov
repnz
imul
adc
scas
enter
xchg
mov
data16
enter
xchg
dec
clc
xor
in
cs
lcall
add
aad
mov
mov
iret
sbb
arpl
dec
pop
dec
xor
in
pop
test
scas
jne
aam
ss
je
mov
shrb
ret
dec
or
or
sub
movsl
les
jnp
lret
cmpsb
xchg
popf
add
pushf
sbbb
ljmp
dec
sub
addr16
pop
xor
sub
mov
popf
cmpsl
orl
stos
pop
inc
out
mov
inc
mov
adc
lds
xor
inc
les
sub
fnsave
push
daa
shlb
xor
mov
ljmp
push
test
push
cmp
xor
xchg
movsl
mov
xchg
mov
adc
xor
stc
pop
aas
aad
fdivs
inc
shrl
or
add
rcrl
repz
ret
fimuls
mov
jne
lcall
xor
cltd
jle
mov
dec
sbb
or
jecxz
pop
icebp
sub
mov
push
mov
sub
cwtl
fidivrs
sti
cmpsl
or
gs
mov
dec
push
cmpsb
orb
push
movsb
inc
shll
loopne
push
bnd
out
lahf
pop
adc
subb
cmp
cmp
xchg
aad
jl
scas
or
cwtl
mov
data16
es
or
jnp
test
test
cltd
cmc
push
daa
fcmovne
insl
sub
clc
sbb
lret
test
inc
push
aas
inc
jge
aas
fidivrl
in
inc
idivb
arpl
popl
dec
loope
jmp
jo
sbb
or
test
gs
mov
xlat
mov
or
jp
mov
nop
test
imul
stos
or
ficomps
mov
xor
dec
mov
inc
or
mov
adc
pop
adc
mov
inc
push
mov
add
repz
shrb
rclb
outsl
xor
in
ret
aam
dec
push
movq
sbb
dec
xor
pop
xchg
adc
je
in
dec
jp
sbb
mov
clc
pop
test
jge
mov
jge
in
repz
call
xor
inc
clc
sub
cmc
mov
jmp
dec
mov
sub
leave
adc
jmp
mov
mov
sbb
cmp
movsb
shll
ja
mov
cld
jmp
sub
int3
aam
adc
cmp
sub
mov
aad
sbb
aas
aaa
pop
in
test
mov
cmp
mov
cs
inc
nop
xor
ficoml
repnz
mov
enter
pop
sbb
cmpsb
lea
sti
jp
inc
dec
mov
in
insl
in
sub
ss
xchg
lea
frstor
cli
sub
rolb
mov
in
outsl
imul
gs
xchg
aas
sti
mov
jg
addb
dec
and
dec
lods
arpl
fstps
test
les
in
cmp
call
jns
sbb
sub
imul
inc
jmp
ret
mov
fs
push
ljmp
jne
jge
add
inc
aam
call
dec
gs
adc
xchg
loop
js
mov
inc
cwtl
shlb
jno
or
xor
xor
xor
sub
fadds
and
in
enter
je
jecxz
adc
xchg
add
sub
jae
or
fldenv
cmpsb
jle
xchg
push
xor
rcll
icebp
inc
out
inc
lea
adc
test
push
xlat
imulb
xchg
lea
int3
add
pop
dec
cli
adc
into
or
sub
cs
icebp
jbe
test
xor
scas
cmpsl
data16
jno
mov
dec
jg
mov
dec
pop
cmp
stos
inc
das
in
jg
dec
loopne
popf
loop
loopne
dec
insb
adc
inc
mov
pusha
enter
inc
scas
mov
adc
xor
inc
fidivrs
sahf
sarb
out
stos
lds
push
cmc
in
das
push
and
lcall
scas
fimuls
add
or
mov
aam
jno
cmpsb
and
pop
pop
cmp
xchg
outsl
cmpsb
fmul
repz
lcall
and
mov
mov
xchg
or
mov
xor
mov
xchg
mov
xchg
scas
xor
jnp
icebp
pop
xorb
inc
adc
jp
inc
insb
icebp
dec
mov
xor
inc
stc
xchg
inc
mov
xchg
test
sti
mov
je
mul
jecxz
fcomps
sarl
jb
loopne
cmpsb
bound
dec
mov
je
iret
popa
inc
fst
cmc
inc
pusha
lcall
addr16
sti
jmp
adc
pop
pop
fildll
inc
fdivs
gs
mov
cmp
push
addr16
pop
cmpsb
push
bound
inc
jecxz
int3
popa
inc
mov
add
xor
imull
mov
fistpl
in
jle
adc
lahf
lock
cmp
push
cli
jb
xchg
cli
popa
add
or
dec
mov
es
cli
mov
add
fs
sub
in
xor
xchg
mov
pusha
add
orb
subl
mov
outsl
sbb
inc
pop
add
test
sub
out
neg
push
clc
and
mov
stos
xchg
jmp
xor
mov
lret
aas
rcl
mov
mov
or
push
or
std
xchg
xchg
lahf
mov
cld
adc
xor
clc
sub
push
jbe
xchg
sti
clc
push
xchg
push
pusha
mov
inc
testl
sub
pop
adc
lea
pop
lahf
sub
leave
cwtl
xchg
ret
popa
into
cmp
pop
cltd
cmpl
jns
inc
adc
sbb
mov
scas
mov
cmp
and
xor
lcall
loop
cmp
mov
cld
cmp
imul
rorl
xchg
or
mov
fucomp
scas
into
cmp
push
or
cmc
sbb
sub
fsubl
rcll
inc
shrl
xchg
imul
or
xchg
sbb
cmc
rol
pop
inc
pop
inc
jbe
and
lock
dec
or
sub
mov
inc
jae
stos
cwtl
mov
inc
rcrl
xchg
sbb
jecxz
mov
xor
or
jge
xchg
aaa
push
add
and
gs
inc
mov
scas
mov
mov
faddl
pop
xor
pop
rorl
pop
mov
int
je
lods
adc
mov
data16
lret
out
jne
jno
cmp
cmpsb
dec
add
neg
in
fs
js
imul
andl
xor
pop
xchg
lock
stc
push
mov
dec
test
push
aad
sub
testb
cmc
in
pop
data16
sub
dec
addr16
fsubrs
notl
sbb
mov
mov
int3
sbb
sbb
add
gs
pushf
js
stc
pushl
je
sub
aas
mov
loope
xlat
bound
aad
gs
idivl
dec
mov
add
dec
into
lahf
jb
imul
out
out
mov
push
jbe
cld
dec
data16
repz
ficomps
push
inc
aam
cmp
inc
pop
cmp
push
adc
jmp
fnstsw
push
fiadds
fsubrs
aas
loope
xor
rclb
mov
inc
movsb
sub
push
jno
pop
cltd
push
sahf
cmpsl
push
pop
mov
into
sub
rolb
or
xchg
subl
xchg
adc
mov
cmp
loope
adc
or
inc
and
in
xabort
mov
fwait
mov
lock
ret
das
jg
adc
cmp
mov
jnp
adcb
test
dec
push
addr16
inc
or
sbb
xor
mov
aam
icebp
or
push
xor
inc
mov
pop
ja
dec
loopne
xchg
test
cmp
cwtl
cmp
sbb
xchg
pop
je
clc
sub
shll
dec
aaa
or
mov
push
loope
mov
push
bound
cmp
das
test
lret
cmp
or
icebp
cltd
pop
pusha
out
ret
mov
fcomps
pop
in
inc
dec
push
in
pushl
cmp
cmc
fs
xor
data16
and
test
cltd
mov
es
or
sub
pop
imul
ror
or
push
adc
mov
lahf
add
jg
aaa
fisttpl
xchg
xor
push
mov
jecxz
cmp
popf
dec
insl
inc
inc
inc
add
js
iret
icebp
lret
sbb
push
int3
in
cmp
xor
xorb
js
mov
push
xchg
imul
or
jle
mov
jo
out
cmpsl
fimull
lods
cmpb
add
cli
add
stc
movsb
cmc
adc
jg
xchg
fmull
inc
jns
movsl
pushf
xchg
add
push
in
mov
fstps
pop
xchg
xor
enter
fidivl
inc
fdivp
push
and
enter
cmp
pop
mov
and
bound
loopne
mov
call
mov
add
cltd
outsl
imul
pop
test
and
or
ss
xor
sub
jge
dec
sub
jl
out
aas
push
cmp
jns
fldl
fldln2
xchg
pushf
call
jns
lds
les
lahf
mov
jg
xchg
lea
fcmovnb
xchg
and
mov
cltd
adc
cmc
add
adc
adc
cmp
es
es
xor
jp
mov
mov
loop
pusha
out
lds
jo
lret
push
mov
xchg
or
lds
cbtw
add
jnp
push
clc
loope
adc
jg
inc
int3
mov
sarb
pop
or
rorl
out
fldt
clc
scas
sbb
or
imul
inc
mov
inc
rorl
jp
push
mov
int3
lods
cmp
inc
or
cld
dec
or
lret
mov
leave
movsb
and
jge
adc
inc
cmp
adc
pop
dec
fdivrp
push
test
inc
push
cmpsl
jp
movsb
dec
movsl
xchg
jge
test
mov
jne
add
mov
imul
out
aam
shll
mov
stos
xchg
ja
popa
sbb
jns
sub
ss
test
lret
pop
bound
stc
test
push
adc
xchg
xchg
sub
and
inc
pop
dec
and
mov
and
jbe
jge
xor
adc
mov
dec
cs
push
xchg
pushl
call
ret
xor
or
jg
jecxz
sub
adc
ljmp
cmp
popa
lock
dec
test
mov
mov
xchg
je
sub
dec
mov
and
aad
aaa
pop
sbb
fisttps
loopne
pop
popa
xchg
in
push
aaa
xor
inc
or
fmul
mov
mov
jno
cmp
es
inc
shll
cltd
push
pop
call
mov
dec
roll
or
test
loopne
xchg
insb
jb
daa
dec
popl
cmp
shrl
or
adc
adc
roll
repz
cmc
lods
and
fcmovb
imull
fmuls
mov
sbb
inc
push
shrl
cltd
pop
scas
inc
jne
les
dec
je
js
mov
mov
pushf
mov
pop
arpl
cwtl
in
lods
and
sti
int3
mov
mov
inc
mov
call
sub
inc
mov
push
mov
fs
cs
xor
inc
mov
xor
jbe
jo
fmulp
xchg
mov
mov
jne
loopne
mov
shl
data16
push
and
mov
or
mov
lds
into
or
loope
cmp
jmp
jb
in
jp
popf
insb
xorb
leave
popa
adc
and
aas
xlat
adc
and
xorl
ss
jmp
imul
push
xor
mov
rcr
inc
push
mov
mov
rcrb
cmpxchg8b
jns
outsb
addb
cmp
das
gs
cmpl
sub
xchg
insb
mov
mov
cld
iret
mov
dec
lock
ret
adc
and
shll
inc
and
fdivl
adc
xchg
push
inc
push
ret
les
cmpl
jle,pn
sarl
cltd
sbb
xchg
addl
or
dec
adc
ja
pop
push
lds
pop
addl
sub
arpl
xor
jb
or
jp
push
push
lret
xor
or
sbb
sub
out
mov
and
loope
mov
inc
sub
test
pop
mov
inc
adc
lcall
out
and
inc
xor
mul
in
outsb
rcrl
out
and
out
sub
int3
xchg
jb
inc
xlat
ret
pop
pushl
sub
js
xorb
mov
cs
fstpl
adc
inc
add
adc
pop
mov
arpl
sub
or
push
and
add
idivl
pop
mov
not
xchg
mov
in
cs
xchg
mov
es
jl
lock
imul
mov
fmuls
pop
int
in
fsubs
sbb
out
sub
or
jl
push
mov
xor
pop
bound
jmp
sbb
xchg
std
add
lret
or
rcll
mov
icebp
add
adc
cmc
add
mov
and
lds
dec
pop
leave
push
clc
fcmovb
shrl
add
mov
fnstsw
lea
cwtl
push
in
dec
and
cltd
jecxz
daa
movsl
rcrb
add
in
adc
sahf
cmpsl
xor
dec
lods
xchg
int3
mov
pop
mov
outsb
or
cmpsb
xor
into
xchg
lret
jecxz
adc
shll
and
out
stc
shlb
sbb
loop
enter
lods
test
gs
aas
cmpsl
cmp
push
dec
imul
hlt
movsb
and
jb
jl
clc
mov
iret
into
incb
sub
ret
mov
aas
mov
js
pusha
fsub
push
int3
mov
lea
stc
pushf
dec
fwait
mov
les
out
add
sub
stos
pop
rcll
dec
add
jae
out
sub
std
xchg
and
xchg
daa
dec
mov
sub
or
cmpsb
cmp
leave
pop
mov
loope
stc
jns
cmp
mov
pop
lods
dec
in
pop
jge
loope
lods
xchg
add
in
int
popa
loop
jae
stc
xchg
adc
sub
movsl
lods
dec
xchg
sub
test
xchg
pop
das
roll
xchg
fcmove
daa
xlat
xor
sbb
inc
lea
js
jle
lods
mov
push
pop
sahf
test
outsl
aaa
idivl
sbb
out
int3
cmpsb
dec
cmp
adc
jae
rcll
sarl
stos
mov
mov
stos
das
ds
mov
gs
fisttpll
xchg
popl
mov
pop
movsb
mov
push
test
js
pop
adc
into
mov
xchg
pop
sbb
pop
ds
in
daa
repnz
rorl
sbb
shll
pop
pusha
rolb
jle
cwtl
mov
xchg
lahf
and
add
test
sub
pop
stc
iret
fdivl
xor
std
lret
enter
push
cmp
mov
or
test
rcrl
xchg
arpl
lock
dec
xrelease
jnp
xchg
int3
cmp
lock
ret
mov
mov
les
jecxz
lock
ss
mov
cmc
popfw
xchg
mov
outsb
inc
fdivr
cld
sbb
fmull
adc
sbb
mov
dec
sti
sub
sahf
push
imul
push
mov
cwtl
cld
jmp
mov
lods
ds
fs
les
xor
mov
pop
jnp
xchg
push
shll
mov
test
cmp
sbb
add
mov
test
lcall
mov
bound
enter
call
inc
rcrl
mov
jb
ret
stos
mov
jae
inc
mov
xchg
cmpl
cli
imul
inc
pushf
aas
mov
push
dec
scas
jl
popf
daa
jg
jns
aas
outsl
stc
jmp
cmp
cmpsb
testb
jns
pop
aas
mov
out
xor
repz
mov
pop
or
test
leave
fwait
xchg
push
xchg
cmp
mov
mov
adc
cli
inc
mov
push
ss
pushf
movsl
test
leave
jl
es
shr
aad
cltd
fisttpl
lods
xchg
push
outsl
mov
ror
mov
repnz
outsb
scas
xor
mov
stc
jno
int
pop
out
fsub
adc
sub
int
xchg
mov
insl
and
fcomi
arpl
push
push
aas
mov
adc
pop
push
popf
sbb
stc
mov
ja
lods
rol
fidivrl
push
sbb
push
dec
mov
and
and
or
mov
inc
pop
cmp
dec
mov
shlb
mov
mov
sub
scas
xchg
ss
mov
sti
fisttps
add
rorl
jge
push
dec
mov
jp
jnp
pushf
ljmp
push
loopne
and
push
jb
jae
add
fwait
push
fwait
cmpsb
mov
dec
jo
xchg
clc
neg
fcomip
xor
je
mov
stos
pushf
dec
out
test
adc
or
sbb
fldl
shll
mov
mov
sub
mov
ljmp
mov
out
out
adc
mov
adc
jns
pcmpgtw
ficomps
insl
and
xchg
cmpsl
aad
icebp
andl
enter
test
push
mov
mov
je
add
sub
xlat
jnp
bound
inc
mov
xchg
popw
loope
add
mov
sbb
and
dec
inc
adc
roll
clc
in
push
jmp
and
or
jae
cmpsb
pop
push
pop
inc
adc
mov
pop
pop
mov
icebp
adc
ret
xor
jl
xor
std
sub
hlt
sbb
xchg
push
mov
jns
fsubl
mov
int3
in
imul
sti
mov
mov
scas
sti
mov
sub
inc
out
inc
adc
je
imul
sete
pop
ja
push
and
sbb
cli
cmp
adc
fnstcw
adc
adc
xchg
pushf
movsl
rcrb
inc
cmp
aam
or
scas
push
leave
sbb
inc
jbe
push
bnd
aas
enter
xor
jecxz
xchg
aas
repnz
outsl
lret
adc
dec
aam
fld
in
cmp
mov
imul
jl
cmp
fcoml
and
lods
sub
hlt
andb
mov
push
imul
sub
je
std
pop
jbe
out
je
out
repnz
mov
rcll
push
icebp
and
mov
xor
data16
pop
lea
xor
pop
mov
or
imulb
and
fadd
data16
xchg
sub
sbb
loopne
sahf
inc
movsb
cmpsl
jb
pop
push
mov
jnp
es
or
xorb
lock
xlat
fstps
xlat
int3
xchg
dec
push
inc
js
xor
adc
data16
and
mov
push
cmpsl
lods
mov
push
add
xor
xchg
test
mov
sub
icebp
ret
pop
jg
xchg
sti
xor
fs
mov
pop
jno
cmp
xchg
and
movsl
and
in
imul
jmp
inc
into
or
mov
sbb
leave
mov
stc
hlt
xchg
lods
bound
mov
fildll
adcl
dec
jne
mov
rorl
mov
sbb
aas
sbb
mov
dec
ret
jle
addr16
fistl
mov
mov
shr
test
int3
int3
xor
stos
mov
xor
push
rcll
cmp
in
sti
or
or
xchg
inc
test
jo
jbe
inc
push
sub
mov
add
hlt
add
jl
fnsave
inc
rdtsc
dec
inc
push
push
xchg
testl
fsubr
fists
das
pop
test
int3
dec
jbe
mov
adc
push
insl
or
out
popa
scas
js
and
stos
mov
dec
pop
scas
mov
pusha
dec
mov
jae
aaa
inc
outsl
ljmp
mov
nop
jae
jae
and
and
jbe
mov
std
xchg
mov
inc
lahf
mov
sub
jnp
test
cmpsl
outsb
sahf
pop
mulb
repz
jg
sahf
pop
scas
lds
daa
aaa
pop
mov
jb
fcom
push
fisttpll
add
mov
jne
xor
or
fmuls
sti
int3
psubsb
xor
ss
test
mov
ds
out
cmp
mov
lods
ja
dec
mov
fwait
push
push
jp
add
dec
sbb
cmc
add
or
inc
stos
add
cli
shrb
and
cld
jne
cli
stos
and
xchg
cltd
sbb
jl
cmpsb
in
dec
mov
negl
rcr
clc
cmp
div
push
fsts
sahf
in
sbbb
inc
ret
dec
push
xor
mov
popa
ljmp
cmpsb
loope
cwtl
and
xor
int3
addr16
shl
aam
sahf
mov
and
pushf
mov
in
ds
add
xchg
rcrl
pop
ss
in
sub
iret
xor
mov
xlat
fiadds
cld
pop
in
loop
cmp
dec
lahf
addb
out
mov
gs
outsl
outsb
xlat
or
or
js
mov
out
shlb
stos
xchg
mov
xor
pop
out
mov
cs
cmp
aas
mov
repz
adc
fildl
int3
imul
mov
pusha
push
push
aad
call
hlt
sbb
leave
and
out
adc
rcr
jno
mov
xchg
in
xor
dec
add
push
mov
out
sbb
mov
shr
xchg
jne
in
push
hlt
out
or
pop
push
repz
inc
sbb
pushf
test
xchg
mov
pop
bound
dec
fimull
in
pop
cli
into
xor
push
mov
jp
jg
mov
stc
sbb
es
popa
pop
or
jge
subl
lcall
dec
leave
insb
mov
add
test
stc
rcll
add
cmpb
in
andl
push
xchg
push
dec
sarl
sbb
fnstsw
subb
stos
and
lret
cmc
mov
aaa
dec
inc
stc
test
xor
jp
movsl
in
sub
mov
adc
push
sub
je,pn
xchg
gs
and
sbb
mov
orb
psraw
lcall
jnp
loopne
sbb
test
xchg
popf
jns
dec
xchg
icebp
and
push
in
orl
rorl
decl
cld
jnp
aaa
es
ficoms
rol
jno
sar
out
mov
push
push
lea
push
adc
jbe
cmc
dec
mov
fs
push
xchg
rolb
dec
sarl
cmp
pop
shrb
jp
xchg
insl
cmpl
out
mov
push
sti
sbb
cmpsl
xor
xchg
arpl
flds
lahf
sti
add
scas
stos
jg
dec
test
aam
stos
adc
jbe
sub
cmp
test
and
jge
fwait
xchg
mov
sbb
inc
mov
and
inc
xor
bound
push
inc
inc
outsb
jl
xor
and
inc
fildl
xchg
das
shll
add
push
mov
adc
push
pop
loopne
aaa
mov
loop
add
push
jmp
je
stos
mov
lret
js
mov
dec
out
inc
jmp
mov
cltd
xor
push
aas
add
dec
lcall
pop
dec
inc
sbb
inc
stc
bound
and
ret
mov
in
xor
dec
cmp
mov
xlat
js
add
imul
mov
mov
inc
stc
fisubl
xchg
add
call
pop
push
inc
jl
add
packssdw
lock
lahf
push
out
mov
jle
bound
sub
lret
push
xlat
psubw
mov
enter
cmp
xchg
adc
jns
jno
pop
stos
scas
sub
push
mov
das
dec
popf
add
dec
ret
jmp
sbb
es
inc
std
lret
in
inc
out
stos
orb
lahf
add
jns
ficoml
pushf
fiadds
pop
sbb
mov
mov
add
jns
add
dec
or
jle
mov
sub
xor
dec
mov
out
or
iret
push
sarl
mov
xor
and
fldcw
aaa
aad
cmpsb
ror
mov
adcl
out
dec
adc
pop
pop
in
jne
loop
das
dec
pop
out
fistl
pop
popa
aad
fsubs
add
cmp
repnz
pusha
testl
mov
imull
adc
call
stos
fdivrs
xlat
adc
sub
imul
add
das
test
and
lcall
sbb
sub
jne
add
ret
or
lret
jp
push
jge
sbb
jg
mov
in
outsb
stc
int3
push
repnz
imul
inc
xchg
mov
jecxz
out
sarl
cld
sub
push
das
mov
and
jl
jg
mov
in
inc
fimull
cmp
notl
sub
cld
pushf
add
add
out
jmp
sbb
shrb
bound
test
outsl
pop
movsb
mov
sub
and
out
jnp
decb
xchg
add
jns
sahf
mov
xor
cmp
jge
fsub
imul
inc
scas
bnd
lods
xlat
fisttpll
out
xchg
pushf
xchg
rclb
sbb
jae
ljmp
or
out
or
out
or
lret
mov
lock
pop
pop
insb
out
cmpsl
and
or
mov
cmp
fbstp
lret
sub
js
js
mov
add
in
inc
sub
ret
dec
test
mov
aas
fs
or
jns
jg
pushf
mov
mov
add
mov
jp
mov
pop
cwtl
notl
hlt
mull
and
jle
and
xchg
ret
cltd
test
xchg
rcrl
or
inc
rorl
psubusb
test
inc
and
popa
xchg
pop
aam
sub
fmuls
in
xchg
lret
inc
pop
insl
ja
fdivrl
mov
jg
adc
rorl
push
mov
mov
fistpll
xchg
add
bound
fidivs
mov
cld
lea
scas
sbb
mov
pop
mov
adc
and
dec
clc
mov
xchg
mov
mov
adc
arpl
inc
or
in
ror
and
jp
mul
cltd
fidivs
pop
movsb
outsl
mov
cli
ljmp
add
mov
mov
xor
imul
jno
cmc
push
jae
mov
lea
idivl
cmc
out
lret
push
fnstenv
and
cld
insl
inc
pop
pop
mov
or
xchg
adc
sbb
pop
push
sub
and
mov
mov
add
test
push
or
mov
sbbl
or
in
movsl
push
rolb
lods
mov
mov
cmp
mov
mov
fidivrs
sbb
push
test
cmp
add
fisubrl
mov
push
add
cmpsl
mov
sahf
inc
pop
or
xchg
jl
imul
push
mov
cld
ja
scas
mov
jbe
push
lahf
add
ljmp
mov
outsl
jae
movsl
xchg
push
mov
dec
je
inc
mov
out
jno
mov
xchg
fsubl
cmp
sub
xchg
aam
loopne
mov
lock
into
cmpsb
mov
mov
add
fwait
ret
lods
ud1
call
fwait
xor
ret
mov
mov
pop
add
inc
xorb
jle
andb
insb
fwait
push
cmpsl
pop
fadd
out
pushf
enter
push
pop
or
xchg
cmp
mov
adc
push
mov
inc
data16
sahf
inc
sub
sub
loope
jecxz
outsb
mov
xor
sbb
adc
mov
push
sbb
and
les
jecxz
into
lods
insl
sahf
xor
incb
inc
pop
cwtl
xchg
jg
stos
adcb
test
in
sbb
fildl
inc
jbe
dec
dec
cmp
addb
pusha
xor
or
in
movsb
jo
in
jmp
inc
or
mov
btr
mov
jmp
dec
sti
js
adc
xchg
mov
adc
dec
faddl
stos
xor
xchg
fsubrp
cmp
add
movsb
sub
and
push
sub
mov
lods
repnz
xor
push
inc
sub
out
cmc
outsl
mov
repz
pop
testl
andl
mov
jge
sub
push
adc
inc
and
popa
pop
ret
ret
pop
jae
jno
or
pop
and
sbb
arpl
jnp
scas
sti
out
jbe,pn
mov
mov
push
fisubl
sti
jnp
adc
or
daa
out
mov
xor
paddd
jns
test
insb
enter
cmp
enter
cmpsl
adc
les
pop
mov
out
es
and
push
jecxz
nop
cltd
test
push
insl
out
cmp
imulb
xchg
aad
jns
repnz
push
or
fisubl
or
or
pusha
jbe
sub
mov
mov
mov
or
aaa
adc
ljmp
and
sbb
movsl
jl
outsb
lcall
fwait
push
mov
pop
sub
mov
adc
js
popf
sub
cmp
in
xchg
popf
or
insl
movsb
sbb
mov
pushf
dec
cltd
call
dec
dec
add
cmp
jae
cmp
mov
lcall
push
mov
xchg
inc
dec
lods
xchg
mov
push
sbb
jg
push
ss
jecxz
mov
inc
sbb
push
rolb
add
dec
mov
in
dec
sbb
imul
or
jno
adc
out
jns
movl
testb
inc
sahf
pop
nop
cmpsl
and
pop
add
inc
xchg
rcr
insb
pop
stos
rclb
dec
ljmp
add
test
loop
dec
and
mov
data16
fistps
shrl
or
dec
add
test
leave
xor
push
pop
mov
frstor
rorb
cmp
data16
mov
fwait
lret
sub
inc
negb
es
push
stc
push
pusha
dec
dec
popa
insb
es
shll
mov
in
add
pop
shrb
fisubrs
es
flds
in
and
mov
sbb
sbb
mov
and
lock
stos
add
push
push
push
scas
out
push
dec
aam
push
gs
push
lods
js
out
movsl
jbe
inc
lret
jnp
dec
mov
add
xor
cld
fsubrs
mov
mov
pop
loop
andl
ret
in
sbb
xor
cmp
std
pop
xor
loopne
inc
mov
cmp
in
push
jg
enter
push
pop
dec
push
pop
mov
and
pushf
faddl
mov
fadd
pop
dec
in
jo
add
mov
pop
and
xor
clc
popf
loop
or
hlt
loopne
and
fwait
jge
mov
xchg
adc
pop
rcrb
mov
popf
ljmp
pop
sub
into
pushf
mov
add
ss
outsl
mov
fcoms
scas
fiadds
out
inc
pop
stos
pop
pop
lods
mov
les
int
adc
popa
mov
loop
decb
sbbb
cmc
mov
inc
dec
sbb
fwait
jb
fs
shll
add
repnz
adc
mov
inc
mov
insb
fsubrs
popf
adc
in
or
or
test
addr16
mov
xor
icebp
stos
out
imul
inc
clc
ss
outsb
hlt
adc
leave
inc
xchg
cmp
pop
ss
sbb
push
jmp
in
mov
rorl
in
pop
cli
movsb
pop
pop
mov
pop
fidivs
push
lret
sbb
filds
fstl
jmp
xor
sub
int3
std
pop
mov
adc
mov
gs
clc
cld
hlt
or
xchg
and
sub
cmp
jnp
lock
cwtl
cmp
cmp
adc
test
jmp
sbb
mov
adc
mov
movsl
fs
aas
stos
dec
jae
int3
ret
pusha
or
cmp
xorl
flds
jo
je
pusha
in
addr16
lcall
add
cli
mov
push
popa
ljmp
mov
negb
std
inc
pop
aas
push
inc
out
es
xchg
jg
mov
sub
xchg
dec
out
and
adc
test
lret
push
or
pop
push
dec
mov
rclb
popl
int3
ljmp
pavgw
stos
fcompl
and
mov
scas
jns
stc
adc
mov
pop
sub
cmp
sub
mov
filds
lea
cmc
adc
movsl
push
push
popa
sbb
daa
in
sbb
xchg
into
and
cmp
cmp
and
sub
xlat
enter
scas
pop
das
sub
pop
dec
popa
and
roll
sub
dec
std
enter
fdivs
or
pop
dec
lods
or
mov
imul
xchg
or
add
mov
in
outsb
std
jbe
xchg
mov
inc
push
xchg
xchg
xchg
fisttps
adcb
sub
jecxz
jge
dec
and
mulb
inc
mov
out
ss
rcrl
cmp
ljmp
and
cmp
or
xchg
jp
movsb
pusha
repnz
sbb
push
cmpsb
ja
inc
out
cmp
pushf
std
pushf
push
jne
pop
neg
shll
lds
sbb
loopne
push
cmp
ss
pop
adc
mov
fs
mov
xchg
addr16
cmpsb
pop
dec
loope
sub
and
mov
mov
jb
and
and
xchg
xchg
sub
and
cli
jo
pop
xchg
popl
jp
icebp
hlt
ljmp
mov
inc
ljmp
rorb
shll
test
arpl
fisubl
aaa
push
jmp
xchg
pop
scas
or
adc
pop
repnz
rclb
or
jno
jecxz
xchg
adc
pop
and
repnz
mov
sbbl
mov
inc
outsb
sbb
push
rcr
xchg
cmp
push
push
addr16
xchg
jo
mov
inc
mov
push
jo
sahf
fdivr
cld
jp
add
in
int
mov
jae
pop
or
cmp
or
mov
popa
xchg
mov
jns
cmp
dec
repz
xchg
inc
je
rorl
rcrb
dec
popf
fistl
mov
mov
add
sbb
test
cmc
jp
mov
xchg
stos
popf
sub
js
cs
mov
decl
adc
std
lods
call
out
push
jns
fmull
loope
cmp
push
dec
movsl
sbb
bound
rclb
jl
bound
or
adc
movups
test
and
inc
jecxz
popf
ret
add
pop
mov
jae
xchg
icebp
addr16
sarl
ds
mov
out
mov
into
fwait
sbb
xchg
add
mov
aad
lret
xor
out
les
and
lret
mov
sub
xlat
inc
fwait
lea
xor
push
sbb
sbb
repz
aas
sbb
mov
xlat
mov
ror
in
push
add
lods
or
repnz
mov
js
jecxz
ljmp
push
push
aam
mov
out
scas
es
out
adc
sti
jno
rcpps
fdivrp
push
daa
push
cmp
pop
jns
add
test
add
cwtl
sbb
mov
push
scas
arpl
add
pop
pop
shlb
je
pop
xor
or
jl
xor
fcmovnu
pop
jmp
adc
shlb
cs
jo
andl
and
adc
ds
outsb
jae
ljmp
ret
mov
and
nop
negb
cs
stos
mov
add
les
jbe
insl
sbb
sti
lods
sbb
push
xchg
push
inc
or
cmpsb
push
mov
stos
pop
fscale
loop
adc
loopne
ret
cmpsb
push
or
jnp
repz
ret
imul
cmp
shr
mov
fwait
xor
fstpl
push
mov
add
inc
pop
or
jge
repz
into
int3
or
mov
popa
dec
lahf
shrb
addl
std
scas
jo
gs
lahf
and
lock
scas
xchg
pop
jp
imul
sti
xor
aam
cmp
movhps
jl
xor
dec
mov
mov
loopne
pushf
ret
es
jb
pop
cwtl
sbb
ret
jmp
test
inc
decl
dec
mov
jae
repz
cmp
fdiv
sub
mov
shl
pop
push
lods
out
insb
pop
pop
push
sub
sub
call
sbb
in
imul
das
sub
sbb
mov
cltd
pop
jb
adc
out
push
in
adc
scas
fildl
shll
dec
xlat
jne
insb
imul
mov
dec
dec
and
fwait
sbb
push
cmpb
roll
sub
xor
mov
xchg
xor
dec
bound
stc
aad
xchg
das
jne
push
cmp
dec
lods
sbb
or
xchg
daa
pop
cwtl
sbb
addl
jle
jns
ss
fisttps
jno
enter
cld
jnp
imul
mov
das
aad
or
lret
jo
arpl
std
xor
and
or
addr16
fisubrl
mov
imul
mov
cmp
mov
int3
hlt
js
push
mov
jne
add
int
test
and
mov
push
push
and
sbbl
add
pop
inc
xchg
test
aam
lods
xchg
add
sub
pop
mov
inc
xchg
out
adc
cs
cmpsl
outsb
aad
out
xor
push
aas
mov
jge
mov
push
sub
pusha
lret
lods
mov
orb
lods
movsb
add
clc
push
pop
jne
gs
into
jp
mov
push
xchg
cmc
mov
imul
das
pop
mov
in
test
test
pop
ljmp
jge
pop
push
shrb
in
push
sub
dec
pop
xchg
jmp
subl
mov
insb
inc
rolb
or
mov
mov
xor
scas
insb
dec
cmp
mov
bound
fidivs
lods
mov
aaa
mov
mov
jbe
scas
cmp
inc
dec
mov
frstor
sbb
and
in
xlat
orb
cmp
dec
or
xchg
xchg
dec
adc
mov
imul
xchg
js
in
cmc
jl
test
sbb
mov
cmpsb
push
and
lret
sub
rcrl
stos
sbb
ja
push
ror
pop
inc
je
andl
xchg
int3
inc
add
repnz
orl
rcrl
sbb
jp
push
imul
xchg
mov
in
jae
scas
push
inc
addr16
hlt
push
sarl
adc
push
pop
lods
lds
lret
aad
xor
js
fsub
add
add
repnz
addl
lock
pop
adc
outsb
stos
xchg
ror
popf
xchg
add
mov
daa
mov
stos
add
or
mov
jne
mov
aas
iret
xchg
mov
cmovg
pop
sub
scas
push
jge
movsb
mov
incl
dec
pusha
repnz
push
pushf
push
dec
mov
push
test
jb
add
sub
jno
jg
fcomps
jns
jo
sbb
cld
sbb
ss
js
imul
daa
xor
mov
jmp
inc
mov
cli
mov
mov
iret
cltd
xchg
mov
xchg
cmp
dec
push
sbb
ret
sbb
dec
cmp
mov
push
and
mov
aad
add
repz
pop
addr16
mov
call
jo
icebp
fnstsw
shll
cmp
addr16
lret
or
mov
mov
fistps
cs
daa
mov
lea
add
mov
and
out
cwtl
and
mov
mov
and
insb
leave
addr16
movsb
aam
add
fstpl
test
cmp
mov
iret
imul
test
add
cmp
mov
push
xchg
lods
pop
mov
mov
inc
cmp
fisttps
cmp
test
sub
imulb
xor
jbe
push
and
pop
shll
popa
in
xchg
adc
sub
enter
clc
loop
mov
stos
shll
fcmovu
lcall
or
push
scas
sub
stos
push
movsl
je
clc
in
sub
loopne
fimull
push
popa
pop
xchg
ret
mov
imul
int
mov
xchg
mov
das
sahf
fsubrl
xchg
lret
jo
cld
in
je
and
and
aaa
dec
in
dec
ret
jle
push
inc
pop
and
pop
repz
lock
adcl
or
cmc
jne
mov
add
mov
aad
mov
cmp
gs
js
jne
and
xchg
out
in
in
push
or
jnp
mov
and
sahf
ja
ljmp
jge
jmp
stc
mov
sub
fildl
or
fyl2x
aas
cmp
cmp
jns
andb
fsubrs
jo
addr16
xchg
les
push
test
add
loop
xor
cli
add
je
adc
mov
or
mov
jo
add
sub
xchg
sti
test
pop
pop
stos
loope
ljmp
call
cmc
adc
mov
clc
add
sub
fs
decb
sbb
mov
scas
insb
jb
mov
push
nop
sub
clc
call
dec
jmp
cmp
push
data16
jmp
out
push
xorl
popf
jecxz
pop
dec
jb
xlat
or
aas
adc
dec
push
dec
xchg
mov
and
jg
insl
jmp
jo
test
mov
dec
add
mov
repz
xchg
out
dec
pop
nop
out
rcll
les
xor
out
repnz
sbb
pushf
mov
scas
jne
dec
rorl
and
sub
ret
sbbb
pop
imul
lods
jnp
popa
pop
xchg
cmpsb
dec
call
call
insb
mov
shlb
cmp
out
push
dec
xor
ja
popa
sub
jo
addr16
xchg
and
lods
mov
imulb
adcl
ret
push
xchg
cmc
push
xor
pop
dec
cmp
jp
mov
xchg
pop
cmp
adc
mov
add
call
ret
inc
add
push
xor
mov
test
xchg
push
add
mov
data16
addr16
add
pop
jb
adc
mov
roll
and
and
movsb
pushf
rol
test
sti
movsl
xchg
test
pop
out
js
cmp
es
or
loope
cmpsl
push
mov
fwait
jns
push
je
xor
mov
int3
rol
mov
dec
pop
mov
inc
sbb
rcrb
aas
lcall
inc
mov
jl
jb
mov
pushf
xchg
push
mov
add
rclb
xchg
pusha
jo
movb
pop
icebp
inc
fcoml
push
fidivrl
add
in
sub
ss
cmp
icebp
push
cmpsl
lret
sub
ficoml
jmp
fidivs
arpl
and
cltd
ds
stos
sbb
shlb
inc
jmp
fisubl
daa
test
fwait
jae
dec
adc
and
sbb
mov
pop
pop
std
jp
lret
sub
loope
xchg
push
xor
mov
push
fs
inc
push
cmp
aaa
lahf
mov
fcmovnb
ret
loop
and
fdivrp
add
mov
xchg
sbb
inc
cmc
mov
dec
mov
mov
aaa
add
fisttpl
adc
movsl
and
xchg
cltd
imul
sub
push
les
or
lcall
ljmp
and
fdivrs
sbb
inc
test
out
inc
adc
shrb
das
scas
loop
mov
sbb
cmp
into
xor
sbb
cli
popl
aad
iret
rcrb
xor
int
dec
icebp
or
inc
pop
ljmp
xor
scas
and
jmp
cmp
shl
fcmove
pop
stc
mov
sub
or
push
push
pushf
cmp
push
or
jge
mov
xor
cld
sub
cmp
jge
cwtl
sub
cmp
jne
xchg
clc
xlat
push
jbe
lss
test
sub
jmp
push
push
pop
sub
jp
je
pop
mov
add
adc
jle
ss
inc
insb
xchg
outsl
lods
xlat
adc
mov
xchg
outsb
jns
lret
xchg
jmp
or
jge
notl
fs
ja
test
push
popf
mov
jl
dec
mov
sar
jl
dec
movsl
fldenvs
les
in
into
mov
jb
loop
add
or
push
leave
mov
into
push
out
outsb
movsl
push
push
fsubr
xchg
jmp
xchg
pop
pusha
cli
test
inc
repnz
shrb
adc
sub
and
test
or
nop
loopne
je
movnti
out
sbb
adc
div
fucom
popa
imul
xchg
shl
sub
mov
ss
xchg
xor
jle
lea
loopne
daa
fldl
inc
jbe
mov
rclb
iret
or
lret
or
in
flds
sbbb
lcall
clc
sbb
push
xor
sbb
add
or
mov
cmp
push
xchg
pop
lret
ds
mov
mov
test
sub
lret
mov
cmp
xlat
movsl
lret
dec
push
test
test
dec
jo
in
mov
std
insb
mov
cmp
clc
jb
dec
push
mov
xor
mov
dec
data16
les
mov
mov
jnp
outsl
sub
enter
mov
mov
cli
aaa
jno
mov
aam
pop
xchg
das
inc
jle
mov
push
std
xlat
ja
xchg
inc
push
mov
shlb
push
xor
jb
jo
insb
mov
dec
fs
int3
hlt
pusha
aaa
dec
xorb
pop
int3
cmp
jle
mov
lods
mov
mov
not
cli
mov
jmp
decl
ja
subb
mov
mov
shrb
out
xchg
push
inc
fstl
push
push
sti
int3
rcrb
test
xchg
int
push
push
inc
add
mov
loop
mov
jmp
lcall
je
xchg
shl
add
in
cld
jne
movsl
int3
cwtl
mov
cmp
fsubs
mov
repnz
adc
xchg
cmp
notl
mov
out
ret
add
xlat
xor
mov
enter
and
mov
push
sarl
pusha
insl
ja
mov
jnp
dec
cmovbe
xchg
loop
bound
loope
push
cmp
xlat
aam
out
in
dec
loopne
cmp
mov
addr16
or
dec
iret
sbb
sub
xchg
loopne
push
jb
sarl
jecxz
sarl
mov
pop
test
mov
rorl
xchg
jbe
lcall
mov
sbb
inc
push
mov
ret
pop
sahf
sbb
ret
xor
fmull
cmp
jp
pop
mov
not
xchg
inc
inc
mov
int3
sub
mov
cmp
aad
mov
dec
in
stc
or
inc
xchg
xchg
ja
je
push
xlat
mov
insb
or
or
jbe
xor
sub
lahf
pop
push
jae
fdivr
mov
jbe
aaa
inc
sbb
shl
fisubrl
jb
dec
adc
jae
das
sahf
or
jecxz
enter
leave
cmpsb
sbb
mov
and
xchg
pushf
fcomps
and
fwait
popf
dec
pop
pop
or
std
adc
or
clc
fists
xchg
or
jecxz
mov
jb
mov
pop
pusha
inc
sti
sub
and
sub
out
pop
jae
xor
jge
mov
shl
cmp
and
jmp
movsl
rol
fmulp
sarb
adc
dec
pop
xchg
popf
out
xchg
push
jl
sbb
jl
mov
lea
stos
int
push
and
lea
mov
dec
paddw
and
mov
or
cmp
mov
push
mov
mov
cmp
push
xor
lods
fwait
sub
ret
pop
jmp
mov
rcrb
jnp
out
inc
pop
sbbb
and
xchg
frstor
ret
xor
js
cmpsl
mov
push
mov
mov
insb
jge
insl
rolb
pusha
pop
xor
xchg
incb
xchg
and
fists
pop
divl
push
daa
icebp
xor
sbb
push
adc
mov
lds
mov
addl
movsb
aam
cmp
sub
rcrl
inc
xchg
scas
mov
movsl
pusha
mov
inc
mov
mov
into
scas
call
lret
dec
add
push
sub
pushf
push
sbb
sub
leave
aas
pop
mov
push
loopne
repnz
xchg
jp
outsw
cmp
jmp
lock
push
xchg
mov
pop
inc
icebp
and
push
jne
es
dec
xchg
and
pop
and
cmp
xchg
xchg
popf
dec
out
and
test
fdivrl
cmp
setle
das
or
nop
fimull
rorb
mov
sub
inc
rol
mov
xchg
adc
jae
adc
arpl
ss
loope
mov
or
mov
test
dec
out
in
inc
dec
loopne
sbb
jnp
dec
dec
push
je
jge
sub
mov
xor
jne
cmp
add
jg
push
mov
lret
fcomp
push
jae
in
nop
fidivrs
mov
inc
imul
mov
cmp
das
dec
or
sub
add
repz
cmpsl
jp
inc
push
jmp
or
xlat
jo
loop
fadds
adc
pop
jle
std
scas
cmp
ds
ja
popa
cmc
add
push
or
std
lods
in
mov
pop
arpl
xor
iret
xchg
daa
lods
lahf
or
sbb
add
leave
jecxz
fldenv
pop
and
in
popf
mov
pop
sub
or
xchg
ljmp
rcll
mov
push
mov
loope
fidivrs
addb
lods
ret
xchg
push
shll
lods
sahf
jp
out
inc
cld
adc
dec
sub
cmp
sub
mov
aam
mov
gs
cmp
frstor
xchg
mov
outsl
mov
mov
gs
jp
push
inc
add
jne
push
mov
mov
ror
jne
test
std
and
les
mov
inc
repnz
cmp
loop
sbb
add
fcomps
addr16
fidivrl
enter
into
push
cs
xor
cmpsb
dec
sbb
push
rol
aam
sub
scas
loopne
jb
je
cld
mov
and
and
jb
sub
xchg
dec
mov
dec
imul
dec
divb
and
rcll
mov
cmp
cmp
in
rcll
inc
add
push
into
adc
mov
jle
pop
pop
sub
pop
lods
push
mov
dec
js
bound
fidivs
mov
sbb
lret
insl
outsb
xor
sarb
push
cmc
dec
ficomps
in
inc
and
ss
mov
lahf
push
ret
aaa
ja
ljmp
fdivp
xchg
jle
fdivrs
inc
imul
inc
mov
cmp
and
jl
sub
cwtl
jb
pop
mov
sti
fs
movsl
and
in
pusha
addb
subb
mov
sbbb
push
ret
ficoml
jae
imul
std
xchg
mov
xchg
mov
mov
movsl
jge
in
add
push
sbb
sti
push
mov
inc
lock
and
repz
idiv
mov
cmp
mov
mov
or
popa
jle
cwtl
loopne
lods
mov
test
cli
cmp
or
or
addb
dec
arpl
int
push
test
mov
cmp
dec
repz
jb
mov
dec
fisttpll
cld
roll
clc
addl
pop
inc
sub
add
xchg
xor
jae
fldcw
sar
fldenv
mov
into
mov
sahf
mov
jmp
test
js
and
or
insb
jge
adc
lret
xor
icebp
test
mov
insb
push
test
test
fists
stos
clc
pusha
xchg
out
out
arpl
add
jle
lret
sti
sub
pop
xchg
adc
cld
add
inc
fbld
adc
xchg
mov
sub
dec
adc
sub
sbb
scas
in
and
insl
mov
std
pop
mull
jbe
lea
sbb
aaa
js
push
inc
aad
inc
sbb
movsl
jecxz
fs
adc
imull
push
es
jb
out
sub
cmp
rcr
jns
rorb
fidivrs
lret
enter
mov
xchg
add
rcrl
movb
fisubrs
aad
pop
clc
hlt
cli
mulb
out
push
call
sub
inc
std
sub
shll
sub
xlat
push
stc
pop
jb
pop
xchg
pop
in
ss
pop
daa
ds
call
ljmp
lret
hlt
cmc
sbb
push
scas
xor
mov
data16
fwait
cmp
je
mov
xor
or
gs
or
in
lods
add
lods
nop
xor
dec
lods
sub
mov
fs
lret
jmp
orb
push
testb
gs
pushf
clc
mov
ss
adc
xor
jo
call
cmp
and
and
sub
pop
mov
shrl
loop
xchg
jg
or
xlat
xor
sub
or
inc
ljmp
dec
dec
data16
fildl
add
inc
adc
fimull
in
fwait
iret
or
pop
or
aaa
movsl
orb
xlat
incl
clc
inc
mov
fstps
cmpsb
add
jnp
jno
push
mov
in
xchg
jns
push
add
xorb
pop
les
cmpsb
aas
dec
data16
jl
sbbl
inc
cmp
ret
daa
insl
add
sbb
xlat
in
pop
aam
cmpsl
xchg
mov
test
movsl
clc
cmp
popf
stos
mov
pop
inc
add
out
fs
popa
push
mulb
mov
xchg
and
or
push
push
movlhps
sub
inc
adc
push
mov
es
pop
fcmovbe
inc
sbb
mov
xchg
jl
je
out
push
nop
or
or
jns
rclb
aam
test
mov
lahf
cs
add
fisubl
test
in
pop
push
jg
imul
inc
insl
sbb
lds
inc
leave
xchg
jg
lock
inc
stc
std
sbb
add
lret
outsb
add
cmpsb
mov
push
xor
sub
inc
add
test
push
inc
xor
shlb
jbe
mov
mov
push
jns
test
dec
sbb
push
les
popa
cld
imul
