mov
xor
cmp
je
push
add
pop
push
add
pop
cmpb
jne
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
mov
cmpl
jb
push
push
mov
mov
mov
sub
add
mov
lods
xor
stos
add
sub
sub
test
sub
add
ror
dec
jne
pop
pop
pop
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
lea
test
dec
jne
pop
mov
ret
xor
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
subl
test
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
add
sub
push
mov
mov
add
mov
test
jne
lea
test
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
push
mov
sub
sub
mov
add
mov
push
xor
mov
cmp
je
add
add
test
sub
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
push
add
pop
mov
test
jne
jmp
lea
push
mov
call
push
call
lea
push
push
push
pushl
call
mov
mov
mov
add
add
cmpl
jne
pop
pop
leave
ret
push
mov
sub
sub
sub
push
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
pushl
movb
call
mov
mov
mov
movzbl
imul
xor
inc
sub
jne
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
add
pop
leave
ret
push
push
xor
call
jmp
movzwl
imul
add
lea
test
cmpb
jne
test
jns
add
add
and
or
mov
pop
ret
push
mov
mov
mov
sub
cmp
sub
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
mov
test
jns
and
sub
cmp
jae
mov
jmp
andl
cmpl
jbe
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
add
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
xor
push
mov
call
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
push
mov
call
test
je
cmpl
jae
movzwl
test
jne
testl
jne
push
pushl
pushl
pushl
call
jmp
push
push
push
push
call
push
mov
call
jmp
mov
call
test
je
lea
jmp
push
mov
push
push
push
mov
call
xor
pop
pop
ret
push
pushl
mov
pushl
call
push
push
push
push
mov
call
mov
test
je
push
push
pop
call
push
add
pop
mov
jne
push
push
push
mov
call
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
sub
ret
push
mov
sub
sub
push
push
push
xor
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
call
push
pushl
mov
mov
call
mov
mov
call
cmp
jne
cmp
je
cmp
je
out
mov
add
sub
push
push
mov
call
cmpl
jbe
push
push
pushl
mov
call
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
test
sub
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
push
mov
call
push
call
lea
push
push
push
push
call
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
andl
mov
sub
cmpl
jbe
lea
mov
mov
mov
addl
addl
add
add
incl
mov
cmp
jb
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
subl
addl
push
mov
pop
rep
mov
add
sub
add
mov
movzwl
inc
cmp
jb
pushl
mov
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
mov
andl
mov
mov
xor
push
ror
movzwl
push
add
push
lea
lea
pop
call
push
push
lea
push
call
mov
sub
add
mov
imul
add
mov
mov
imul
mov
add
neg
add
add
mov
add
cmpl
add
and
add
mov
mov
mov
movl
mov
mov
lea
call
mov
mov
add
xor
add
decl
jne
addl
subl
pop
pop
leave
ret
sbb
add
popa
xlat
pop
mov
sbb
add
sub
out
test
add
cmp
jge
fcmovnbe
push
jae
mov
lretw
out
add
jge
out
dec
jle
add
rcll
mov
fnstsw
aas
in
xchg
icebp
std
pop
das
popf
inc
pop
inc
xchg
popa
insb
add
js
shl
xor
int3
fimuls
dec
jl
push
xor
add
pusha
and
es
lret
aas
imul
push
outsb
cwtl
cmc
mov
ret
lret
stos
mov
push
js
icebp
cwtl
xchg
inc
cmpsl
sub
call
sbb
jle
enter
push
adc
lea
jnp
jne
mov
movl
cmpsl
inc
xchg
leave
mov
int
nop
inc
lods
cwtl
pop
jb
or
add
mov
sub
add
iret
nop
fsts
sub
cmpsl
jp
dec
dec
mov
out
xorb
es
inc
mov
call
mov
hlt
mov
add
xchg
mov
fldl
sub
cs
or
sub
out
mov
push
fs
in
push
andb
bound
push
out
jl
test
sbb
rol
out
adc
inc
xchg
jbe
xchg
xor
mov
mov
mulb
xor
fistl
ja
ljmp
sub
shlb
pop
stc
icebp
push
mov
call
xchg
test
or
dec
in
or
rcrb
sbb
push
xchg
dec
sbb
lods
push
inc
lds
mov
fists
test
lret
mov
fcmovb
jo
mov
popw
outsb
cmp
in
or
lods
pop
jb
aad
addr16
jne
les
jmp
inc
outsb
cmp
stos
mov
dec
cld
mov
or
mov
or
xchg
aaa
add
jecxz
popf
jg
mov
test
stos
movsl
sbb
jecxz
xchg
mov
rcr
dec
lea
aas
hlt
push
mov
fbstp
ror
rcrb
jne
popf
push
jns
out
call
movups
jmp
inc
jnp
aad
xor
mov
je
jne
ds
sbb
daa
mov
push
ret
sbb
adc
sbb
xchg
or
adc
xor
jp
push
xchg
adc
sbb
pop
xchg
add
mov
cmc
aad
sub
out
adc
cmp
lret
mov
cmpsb
int3
in
xchg
pop
xor
xchg
add
divl
xor
adc
inc
out
enter
cmp
xchg
addr16
fimull
out
push
lahf
xlat
mov
stos
dec
push
mov
dec
xchg
pop
test
leave
mov
ret
mov
push
pop
adc
imul
enter
out
test
pop
fadd
sbb
inc
inc
enter
movsl
outsl
xchg
dec
xchg
cmp
fadds
xchg
mov
inc
test
leave
fsubl
in
pop
int
cmp
ljmp
cmp
sti
rcrb
in
mov
mov
stos
insl
mov
mov
xor
xor
idivb
jle
mov
test
gs
inc
xor
rorb
lret
sbb
aaa
out
push
jg
pop
jne
mov
or
jecxz
fs
lahf
mov
jns
filds
sub
mov
gs
or
lahf
mov
mov
or
pop
and
push
popf
out
divl
sbb
in
fdiv
sub
mov
cmpsb
push
push
ja
inc
je
arpl
cmp
sbb
addr16
mov
pop
sbb
push
lock
sbb
mov
les
insl
cld
mov
mov
mov
shrb
daa
cwtl
inc
jle
ja
andb
cmp
jl
std
stc
sub
int
sub
mov
mov
jae
loope
dec
sub
int
cltd
lds
xchg
sbb
jnp
adc
ja
sub
lret
sub
jae
les
dec
mov
dec
out
dec
jecxz
enter
outsb
or
gs
pop
mov
jp
out
imul
sub
xchg
les
sarb
filds
pop
ret
out
and
and
enter
je
dec
jnp
mov
xchg
mov
xchg
xchg
jae
inc
addr16
ss
popf
push
inc
mov
adc
and
dec
pop
jecxz
repz
cld
pop
insl
jnp
dec
and
mov
inc
out
and
divb
push
push
jnp
jns
mov
int
mov
push
repz
out
loop
add
xor
cmp
push
push
push
movsl
aam
add
or
inc
dec
lea
inc
dec
add
inc
aas
sub
por
loop
xchg
sub
orps
insl
iret
loop
push
add
les
lods
pop
pop
xor
adc
shlb
test
jne
testl
stos
sub
and
jp
scas
lock
push
inc
sbb
xchg
pop
ror
push
adc
cmp
icebp
xorb
fcmovb
fdivl
arpl
pop
mov
cmpsl
mov
rcr
and
not
daa
js
mov
stos
xor
ja
into
mov
ljmp
mov
pop
jnp
in
sub
ss
cmp
inc
dec
fadds
push
mov
sar
mov
cld
les
or
mov
pop
add
orb
jge
fldl
mov
inc
mov
ss
xchg
outsl
in
stos
test
mov
cmp
negb
in
loop
and
push
test
fs
jnp
je
jle
ja
cmc
mov
pop
jbe
and
sub
imul
cmp
push
and
mov
push
jp
les
push
jno
in
adc
xorl
jl
cmpsl
imul
out
and
fisubl
popa
push
push
aad
imul
xor
jp
jecxz
bound
addl
xorl
ss
cmp
or
jbe
in
sub
lret
push
jp
add
into
scas
notl
push
cmc
add
and
push
test
aam
inc
aam
es
sbb
out
ret
shl
add
iret
lds
xchg
int
hlt
sbb
lcall
pop
fimuls
lret
and
and
xchg
loope
cmp
xor
outsl
and
and
cs
lret
xchg
ds
mov
cmp
pop
sbb
fisubs
cmp
sahf
data16
aam
jb
push
adcb
int3
js
in
add
icebp
fimull
mov
cmp
dec
or
add
push
xchg
sbb
jbe
lods
jle
sbb
repz
mov
movsl
das
cltd
pusha
mov
or
jge
subb
adc
in
lods
mov
ss
or
shrl
push
inc
sbb
cwtl
mov
pop
ret
imul
jae
xchg
lret
xchg
shl
call
or
add
ja
mov
pop
arpl
dec
adc
andl
jne
jno
dec
cwtl
sub
xor
mov
cmp
jbe
js
push
mov
movl
jnp
ja
imul
fmulp
jecxz
and
mov
dec
sub
fistpl
jb
dec
int3
and
lret
dec
in
adc
xchg
roll
jbe
cmpsl
cli
ljmp
push
jo
sahf
dec
mov
xchg
fisubs
mov
das
incl
jmp
mov
mov
jb
in
sbb
movsl
xor
push
and
push
push
bound
or
mov
pop
lods
ds
in
mov
adc
xlat
mov
jmp
lods
or
mov
pop
inc
xor
adc
pop
mov
in
mov
nop
or
and
data16
adc
mov
mov
movsb
int3
mov
stos
cmpsb
push
fstl
andb
and
adc
rcrb
mov
pop
out
push
add
in
cmp
push
jno
pop
test
fcoms
idivl
imul
and
sub
or
test
mov
js
fwait
mov
gs
dec
fwait
push
test
mov
sbb
clc
lret
stos
jg
or
xchg
dec
icebp
sbb
mov
scas
cmp
nop
fbld
cmp
jne
in
dec
sarb
xchg
int3
mov
push
push
xchg
inc
cmp
mov
dec
pushf
faddl
cmp
or
stos
pop
inc
cs
fdivr
and
inc
cli
int
pop
sbb
fldcw
ror
cmpsb
es
adc
out
lret
movsl
xchg
sti
pop
inc
xchg
fidivl
sub
dec
repz
hlt
mov
dec
adc
mov
push
int
mov
pop
push
imul
mov
add
fdivrs
dec
call
inc
xor
jmpw
mov
nop
pusha
add
out
ret
xchg
cmp
pop
das
lahf
or
sub
xchg
or
scas
bound
and
jmp
sub
adc
aas
testl
dec
sbb
xchg
movsl
iret
in
jne
mov
rcll
outsl
popf
icebp
lret
cmpsb
js
aaa
loope
xchg
mov
repnz
lret
push
dec
jmp
fldl
sub
test
adc
mov
into
adc
pusha
scas
mov
filds
cmc
dec
add
stc
add
jmp
es
imul
sbb
cmc
jecxz
orl
loop
imul
pop
inc
and
popa
adc
mov
icebp
andl
les
sub
sarb
lea
cmpsl
jns
dec
mov
sub
jns
pop
mov
cli
imul
int3
mov
sub
std
mov
and
hlt
std
shrb
insl
xchg
sbbl
test
gs
movl
jbe
add
or
add
je
dec
push
stos
call
cmp
fwait
pop
xchg
inc
inc
inc
sbb
jmp
jecxz
jnp
outsb
jp
push
lret
lahf
dec
xchg
inc
negb
insl
pop
cmpsb
fwait
and
add
dec
ret
rcrl
push
ss
in
shrl
xor
inc
idivb
lret
mov
out
cmp
inc
fbstp
mov
xor
dec
mov
sub
inc
je
enter
shlb
or
imul
xchg
sub
push
dec
pop
push
adc
xchg
pop
cmc
insb
jle
push
in
and
push
out
aam
dec
dec
inc
and
sub
cld
loop
shr
pusha
inc
add
inc
lret
jmp
std
cli
nop
popa
push
outsl
add
loop
mov
fisttpl
xchg
bnd
mov
mov
push
lret
imul
arpl
notl
jmp
pushl
inc
pop
lea
outsb
push
aas
imul
dec
sbb
stc
cmp
add
shrb
loopne
push
repnz
cmp
mov
stos
sub
sbb
movsb
cld
cmp
test
xlat
push
push
pop
pusha
mov
push
sbb
imul
fcompl
cli
mov
xchg
push
insb
xorl
lods
seta
loop
jge
faddp
jp
psrad
pop
xchg
xor
xor
adc
and
inc
mov
xchg
xor
insb
decb
jle
dec
dec
in
mov
fadds
shrl
rorb
xorl
leave
insb
xchg
inc
jecxz
add
mov
push
jge
jecxz
popa
cmp
mov
cmp
mov
in
xor
ds
sbb
mov
xchg
repz
scas
cld
pop
pop
push
inc
hlt
pop
lret
mov
mov
pop
mov
sub
jae
int
or
adc
xchg
sub
mov
jmp
sub
in
das
fmuls
insb
mov
shl
adcl
repz
sti
mov
loope
and
sub
out
add
or
push
test
std
icebp
mov
pop
repz
fcomi
mov
add
dec
cmp
adc
mov
jecxz
stos
jae
dec
adc
and
insb
out
mov
mov
dec
dec
pusha
mov
scas
xabort
push
mov
mov
shr
mov
sbb
or
add
inc
into
or
sub
inc
adc
add
stc
loop
jnp
int
sub
mov
fwait
ret
fidivs
adc
stc
or
add
sbb
jg
lcall
out
pop
sti
mov
sahf
popa
xchg
aad
leave
adc
sbb
mov
mov
pop
lods
and
ja
jg
pusha
mov
mov
in
lret
jb
inc
insl
ds
and
xor
mov
out
push
fldenv
pusha
mov
sbb
lret
imul
sbb
inc
mov
sub
jmp
test
movsl
xchg
shlb
popa
add
les
xor
js
mov
loop
cltd
push
jbe
shll
pusha
add
aad
cmc
or
loope
mov
shll
daa
loope
fsubr
movsl
cmpsl
sub
cmp
enter
in
jg
cmp
add
mov
adc
loope
cli
and
pop
mov
aam
mov
cs
test
cmpsl
jmp
ret
adc
mov
outsb
and
pop
dec
mov
test
imul
sub
lret
mov
push
pop
xchg
imul
push
ss
comiss
mov
jno
int3
ljmp
or
in
xchg
xor
cmpl
cli
ljmp
mov
movsb
xlat
shll
jmp
mov
jo
les
pop
ss
xor
ja
jge
pop
divb
dec
sub
lcallw
lret
mov
xor
adc
jno
adc
fnstcw
lea
mov
gs
jns
xor
or
test
or
bound
mov
ror
fs
mov
sbb
mov
sbb
jp
ds
adc
cmp
push
jbe
arpl
mov
in
mov
es
imul
insb
xor
std
push
inc
or
mov
jge
xchg
pusha
ficomps
mov
int3
pop
lock
mov
mov
jle
adc
sbb
daa
jg
jo
xchg
push
outsb
insb
pop
add
lods
pop
fiadds
test
out
shr
inc
mov
cld
push
push
lds
es
pop
add
mov
xor
leave
xchg
mov
inc
in
fisttpl
hlt
icebp
cmpsl
sub
jbe
pop
rorl
xor
add
lock
repnz
loop
cltd
pcmpeqd
lahf
popa
mov
js
cld
std
mov
out
sub
int
stc
popf
sbb
in
cmc
movsb
xchg
stc
mov
fmull
xchg
in
repnz
js
test
sbb
bound
in
push
add
and
push
lret
sub
bnd
pushf
add
add
rcll
in
mov
pop
jmp
ja
sub
dec
mov
cmp
pop
jnp
call
in
inc
imul
inc
mov
add
outsl
in
mov
cmp
test
mov
mov
add
xor
movsl
inc
ds
lcall
cmc
repz
fistpl
in
in
and
jmp
arpl
mov
push
mov
stc
imull
mov
shrl
mov
mov
repnz
dec
mov
add
jb
idivb
in
push
cltd
jle
jle
inc
and
jmp
push
adc
adc
int
push
lea
js
enter
add
shrl
pop
mov
xchg
mov
and
sbb
lret
test
or
xor
jecxz
lret
pop
jmp
shr
add
enter
test
jns
lods
push
sbb
mov
pop
ss
mov
cli
and
cmpsb
ljmp
call
cwtl
inc
aam
inc
gs
adc
daa
sbb
pop
jne
dec
hlt
cs
andb
es
dec
mov
test
push
gs
adc
in
clc
add
in
rcrl
loop
jp
lcall
and
xchg
xchg
sbb
int3
ret
xchg
and
leave
pop
pusha
jbe
xor
mov
dec
fucomi
push
ss
cmpsb
add
mov
jmp
sbb
mulb
fwait
loope
mov
testl
xchg
push
and
orb
cmp
fmul
int3
sti
cmc
xor
daa
xchg
mov
out
dec
vmwrite
mov
cli
in
inc
aad
movsb
sbb
daa
mov
les
dec
dec
xchg
push
xchg
cmp
mov
call
mov
cmpl
xchg
aas
pop
scas
add
xchg
pushf
faddl
jo
mov
rolb
sbbl
mov
out
or
mov
inc
iret
and
fnstsw
push
push
movsw
xchg
xchg
aas
push
sbb
xchg
jnp
mov
adc
sbbb
fisubrl
loop
xor
jecxz
push
jns
dec
jle
xor
xchg
gs
fnop
push
mov
push
xlat
xor
enter
imul
negb
jl
inc
repnz
sbb
movaps
jl
movsb
cmp
repz
jnp
or
jne
inc
sub
iret
jnp
inc
das
scas
pop
rclb
mov
jmp
sbb
push
mov
mov
ljmp
sub
cmp
lods
xchg
das
jne
scas
outsb
pop
out
mov
xor
loopne
sbb
jbe
pop
push
es
xchg
adcl
mov
aaa
xor
outsl
inc
testb
arpl
leave
dec
sub
and
and
sahf
lods
call
xor
repnz
inc
test
or
push
and
test
stc
leave
pop
shlb
jl
inc
rclw
test
ficomps
pop
cmpb
fldenv
add
inc
dec
xlat
dec
add
add
sti
test
inc
mov
and
inc
repz
mov
dec
lods
rorl
lahf
out
mov
mov
xchg
fs
lods
push
push
adc
repz
loopne
shr
xor
sbb
pop
mov
xchg
es
shr
movsb
rclb
mov
mov
outsl
sbb
stc
mov
dec
jge
clc
jns
pushf
push
add
xor
mov
out
daa
aam
and
xor
push
jp
xchg
and
dec
inc
ret
cli
call
scas
sub
fimuls
jle
out
out
cld
pop
pop
hlt
into
sbb
test
xorl
cmp
xor
into
fisubrl
adc
repz
dec
out
pop
xchg
dec
mov
ljmp
pop
popf
lret
in
aas
js
insl
stc
imul
popl
arpl
mov
rcrb
mov
xchg
dec
or
and
mov
mov
sbb
sahf
repz
xchg
mov
nop
lea
lahf
shll
lret
push
dec
into
dec
sub
ljmp
mov
jg
test
sbb
in
sti
adc
push
push
pop
mov
addl
ficoml
ljmp
out
imul
scas
push
inc
pop
push
lods
pop
call
push
std
cmp
cmp
enter
pop
mov
sbb
mov
shrb
xor
into
sub
and
mov
dec
pop
lcall
in
sub
sbb
jl
divb
arpl
add
and
pop
or
lds
push
std
sub
mov
mov
and
sub
fcomi
dec
dec
cmp
dec
sub
pop
ds
inc
fidivl
or
xchg
push
inc
int
jp
lcall
fucom
mov
out
xor
outsl
xchg
loop
cli
cmp
xchg
dec
iret
loopne
sub
das
imul
xchg
pop
mov
movsl
and
pop
pop
adc
out
push
xor
es
outsb
shrb
test
pushf
mov
es
cltd
push
jmp
and
mov
dec
sti
dec
loope
dec
jo
push
mov
rorb
and
adc
fs
scas
add
adc
mov
or
ds
pop
pushf
ja
mov
pop
sub
and
dec
sbb
cld
or
popf
mov
popa
jmp
andb
dec
decb
shlb
rorl
mov
in
push
or
xchg
mov
imul
pop
fcoms
into
movsl
pop
fsts
hlt
lds
pop
xor
mov
insl
in
or
ret
loope
inc
cmp
mov
dec
jo
sbb
xchg
pop
jecxz
ja
aas
icebp
cs
adc
xchg
aad
cmp
shr
dec
xlat
mov
shl
movsl
mov
out
inc
dec
sbb
cmp
mov
cmp
sarb
movsl
push
js
mov
sbb
fsubrp
mov
cmp
addr16
pop
inc
aas
add
mov
popf
mov
insl
sbb
jns
mov
imul
mov
hlt
jbe
jmp
iret
or
mov
cli
cmp
jns
pushw
lods
jns
and
sbbl
test
push
push
inc
ljmp
fistps
sar
loope
int3
scas
dec
into
mov
lcall
dec
inc
out
and
lods
jl
jae
int
pop
in
stc
mov
daa
hlt
jg
mov
inc
out
dec
mov
movsb
addl
outsb
xor
jb
inc
inc
lcall
push
push
das
in
orb
push
pop
inc
fs
add
sbb
je
ret
mov
ljmp
std
cli
push
lret
jns
pop
mov
sub
repz
lds
iret
cmp
aas
dec
mov
leave
or
jecxz
in
push
jae
test
fs
int
push
pop
jp
mov
les
adc
mov
ret
cmp
mov
addr16
shlb
mov
add
mov
stc
aad
add
and
mov
stc
cmp
mov
xchg
xchg
inc
loop
outsb
pop
or
adc
mov
ret
ret
jns
shr
jo
mov
xor
pop
insb
dec
jge
add
mov
push
cmpsb
or
clc
push
jle
popf
aas
pop
div
imul
xchg
push
or
shr
pop
lret
dec
fisttpll
push
ret
popa
cltd
test
cmp
pop
pop
or
rolb
insb
aas
inc
js
ret
clc
push
orb
aam
mov
js
push
xor
and
incb
xchg
xchg
arpl
mov
test
imul
daa
fs
jns
es
push
mov
or
cmc
js
xor
mov
sahf
xchg
xchg
mov
sub
andb
xor
sahf
push
sub
test
xchg
push
add
fcmovbe
mov
lea
jg
enter
int
or
movsb
pop
pop
imul
adc
xchg
pop
sbb
dec
loop
inc
fdivp
jecxz
sub
mov
pop
lock
mov
push
adc
scas
test
stos
aam
mov
lods
mul
inc
aad
test
mov
loope
mov
int3
jmp
mov
jno
roll
add
dec
js
fnstsw
enter
jmp
push
xor
and
xchg
addb
out
ret
ss
xchg
inc
cmp
aam
mov
mov
dec
mov
std
mov
hlt
incl
add
add
add
add
data16
add
inc
add
inc
add
inc
add
add
dec
add
add
outsl
add
insb
add
add
jae
insb
add
je
imul
add
add
add
add
outsb
add
je
je
add
je
imul
add
arpl
outsl
add
arpl
add
outsb
add
add
jb
insb
add
add
add
add
add
popa
add
add
outsl
add
add
outsl
data16
add
add
outsl
add
add
add
outsb
arpl
je
popa
je
outsl
outsb
add
add
add
jae
insb
je
add
outsb
add
imul
popa
add
add
add
je
add
add
popa
add
add
outsb
add
insl
add
jb
outsl
add
jae
arpl
outsl
add
add
add
jae
imul
popa
add
add
outsb
add
arpl
je
insl
add
outsb
add
add
add
insl
jo
outsb
jae
je
outsl
outsb
add
add
add
add
outsl
add
jae
je
imul
