mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
andl
push
push
push
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
mov
call
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
testl
pop
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
not
imul
inc
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
call
movl
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
mov
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
mov
rorb
shlb
sbb
add
loopne
and
and
nop
mov
inc
xor
cmc
rorl
les
clc
lods
jnp
xor
add
cmp
roll
loop
mov
out
adc
sub
add
out
and
adc
pop
mov
ret
jl
xchg
xchg
adc
cmp
adc
mov
mov
out
cld
xor
and
icebp
xor
iret
sbbl
bound
jmp
js
test
sbb
test
pop
push
xchg
mov
add
push
cmp
add
lcall
or
loope
xor
pop
mov
xchg
fadd
add
sub
rcll
xchg
pop
sbb
cmp
es
pop
je
lcall
aam
inc
and
shll
arpl
aas
dec
imul
pop
sub
add
push
call
pop
repnz
shrl
scas
mov
cli
lcall
add
addb
loope
push
jne
xchg
mov
jno
leave
jb
adc
or
daa
lret
add
into
rcr
mov
ja
add
cmp
outsl
sbb
mov
jl
dec
in
jae
jge
jb
pop
mov
in
jl
pusha
inc
mov
inc
lret
xchg
into
lret
test
addr16
xlat
lods
add
sahf
jl
pop
sub
in
adc
cs
outsl
popf
imul
or
add
mov
es
stc
rolb
scas
cld
fdivrs
mov
xor
dec
mov
mov
cmp
sbb
sub
mov
lret
add
push
mov
xchg
mov
mov
fdivs
sub
jnp
mov
fistps
push
gs
adc
cmovns
add
and
daa
imul
add
sub
adc
and
xchg
xchg
push
rorl
movsb
insl
loopne
mov
adc
xchg
repz
bound
stos
mov
sub
jnp
aaa
cmp
pop
xchg
fdivl
bound
shrb
and
icebp
rolb
mov
ret
pop
mov
and
dec
dec
popa
test
arpl
lret
imul
fs
inc
mov
mov
les
lods
add
add
pushf
dec
cmpxchg
push
fs
cmp
lcall
or
sbb
bound
ficoms
pusha
sub
filds
in
in
pusha
stos
imul
into
add
rcll
das
bnd
fdivl
out
pop
js
fwait
or
icebp
xorl
and
fsts
sarb
and
ljmp
jo
add
add
rcrb
outsl
icebp
lock
std
std
xchg
inc
rclb
test
xor
arpl
jle
test
cltd
and
dec
jmp
jge
xchg
mov
ja
push
jecxz
push
fistpl
mov
inc
aad
lret
jmp
pop
pop
jb
push
lcall
push
lock
xchg
push
loop
sbb
test
fldt
and
mov
and
dec
and
xchg
xchg
sbb
das
mov
lods
lock
out
pop
nop
mov
mov
mov
ret
imul
xchg
or
popa
lcall
std
push
clc
push
xchg
push
mov
inc
jo
cmpsl
sbb
adc
xlat
outsb
mov
mov
mov
mov
jmp
into
sbb
dec
pop
cmp
test
lods
jmp
imul
in
lcall
mov
add
add
sub
adc
cmp
aad
cmp
mov
out
or
push
mov
mov
inc
sbb
pop
mov
scas
push
mov
lcall
test
xlat
shll
jmp
and
push
fstpl
int
inc
dec
mov
sub
orb
roll
jl,pt
add
in
or
and
xor
add
js
sahf
stos
pop
cmp
xchg
adc
mov
mov
icebp
xchg
inc
pop
dec
xchg
lahf
cltd
out
jae
xor
cmpsb
data16
jnp
sub
sub
loop
xchg
dec
jmp
dec
insb
push
cltd
sub
lahf
dec
and
mov
sbb
sbb
clc
jbe
dec
ss
adc
push
lahf
dec
mov
jnp
jae
mov
add
jle
mov
mov
dec
loop
fs
adc
out
sub
leave
mov
add
fs
jns
scas
ljmp
lcall
ret
add
or
pop
sbb
add
aad
popf
push
push
repz
int
mov
lea
cmp
sbb
leave
mov
fcompl
and
sbb
mov
imul
out
dec
popf
add
addr16
ja
add
stos
push
adc
jne
add
adc
sub
icebp
inc
test
xchg
xchg
cli
or
gs
aas
push
scas
daa
jmp
jnp
fwait
pop
push
repnz
cmpsb
jns
cs
adc
imul
test
jbe
imul
xor
and
outsl
sbb
jp
or
add
add
and
pop
call
repnz
fs
scas
inc
lods
test
mov
push
popa
in
or
add
fmulp
inc
cmpb
rolb
or
data16
aad
lods
dec
nop
mov
nop
mov
cmp
xchg
or
cltd
movsb
mov
rclb
fs
enter
push
push
xchg
fs
lret
test
jne
ret
stos
mov
adc
popl
add
add
add
cmc
repnz
sub
leave
shrb
mov
les
adc
inc
xorl
xchg
mov
decl
xor
xor
xor
mov
fwait
sbb
push
shll
and
aam
pop
mov
or
push
jg
xchg
jmp
jp
bound
iret
xor
imul
mov
daa
out
sbb
aam
clc
divl
ds
lods
popa
sub
add
out
insb
dec
mov
jg
inc
lock
sub
imulb
cmp
int
xor
sub
test
fwait
and
jmp
jnp
xor
and
loop
xchg
or
sub
mov
in
pop
aaa
xchg
cmp
std
xor
xchg
call
dec
popf
jns
aam
mov
add
out
inc
fsubl
cmp
ljmp
or
sbb
xchg
lock
test
sbb
lahf
dec
popf
mov
stos
inc
scas
or
fwait
xchg
ret
mov
data16
and
ret
push
fists
fdivrs
stos
arpl
das
pop
inc
push
bound
mov
int
imul
in
popf
adc
sub
sub
fstps
and
mov
test
jp
push
movsb
push
cmpsb
out
add
lahf
and
dec
adc
idivl
pop
fmuls
xchg
mov
fs
outsl
lds
sarl
xorb
in
movsl
jnp
enter
loop
jp
pusha
fistps
and
mov
pop
into
jle
test
mov
repnz
dec
aaa
xchg
adc
mov
cld
jmp
xchg
and
adc
incb
sbb
and
dec
cmpsb
fisubs
mov
das
xchg
iret
and
xchg
xchg
shll
add
ret
jmp
adc
fdivr
pop
jle
fcoms
fwait
pushf
cltd
xchg
push
aaa
mov
jnp
xchg
sarb
idivl
stos
xor
and
mov
mov
imul
push
mov
adc
inc
adc
push
pop
mov
add
push
sahf
test
out
and
es
shll
repnz
add
add
lea
xchg
jg
sub
inc
or
sarl
dec
out
ret
nop
das
inc
xor
loope
stc
push
mov
add
cmp
mov
adc
sbb
loopne
and
fisttpll
call
clc
lods
xchg
inc
lods
cmp
icebp
data16
inc
sub
fs
aaa
ds
das
mov
lahf
shrl
or
mov
data16
jmp
push
jp
pop
or
ljmp
add
add
jae
mov
cmpsb
sub
es
mov
out
in
mov
push
dec
inc
pop
pusha
and
or
movsb
test
pop
stc
push
pop
stos
lea
xor
bound
mov
fnstsw
inc
lods
call
lea
arpl
pop
mov
enter
xor
add
push
shl
fistl
loopne
mov
mov
pushf
ror
gs
loopne
daa
xorl
mov
jns
pop
in
and
mov
imul
je
sub
pushf
js
xor
or
xor
sub
pop
mov
fsubrp
cmpsl
xor
xor
cmp
xor
mov
xlat
cmpsb
imull
in
sub
test
inc
dec
inc
jecxz
or
push
xor
mov
imul
cmpl
subb
insl
jl
fs
push
mov
add
inc
jl
sub
pop
jo
loopne
rcrb
rcr
jb
xchg
xchg
or
xchg
inc
lods
jae
jg
sub
imull
stos
gs
xchg
xchg
int3
xor
xchg
cmp
pop
cwtl
fbld
sub
or
pop
or
clc
add
mov
cmp
lcall
xor
int
sub
mov
inc
jns
cmp
sbb
mov
mov
mov
add
cmc
xchg
fbstp
xchg
test
ss
or
out
mov
shl
outsb
out
int3
imul
cwtl
sbb
add
mov
push
addr16
add
cld
mov
test
lahf
stos
cmp
call
cmp
cmp
mov
ds
mov
adc
mov
rorl
jmp
jno
icebp
inc
mov
mov
dec
or
cmp
add
add
sti
lods
adc
adc
fmuls
jb
mov
xchg
sbb
fistps
mov
push
xchg
push
lds
mov
and
sahf
out
stos
pop
sbb
test
pop
call
push
pop
sbb
add
cli
ds
jg
sub
popa
icebp
inc
add
aaa
xchg
push
push
fldenv
mov
in
out
fmuls
mov
jmp
lahf
sbb
add
dec
push
mull
inc
ljmp
fwait
into
cmpb
dec
js
push
sahf
leave
daa
js
test
pop
push
mov
fbstp
stos
mov
fs
xor
imull
mov
mov
mov
dec
add
push
or
mov
lret
mov
test
cmp
inc
adc
fsubs
sahf
std
mov
loopnew
add
pop
movsl
cmp
loope
add
adc
push
out
mov
adc
out
add
push
popf
cs
and
fs
test
in
aad
hlt
mov
push
mov
fldt
sbb
pop
dec
movl
cmpsb
or
dec
sub
mov
pop
dec
in
dec
inc
test
data16
fbld
cmpsb
aad
das
movsb
jecxz
mov
mov
rorl
mov
in
pop
jae
sbb
xor
sbb
les
fdiv
jle
test
cmp
mov
sbb
iret
jo
jae
mov
lods
divl
stc
in
stos
push
mov
push
dec
cld
sbb
cli
jp
in
dec
ret
es
outsb
notb
pop
fwait
lret
cmp
inc
hlt
jns
arpl
pushf
ret
vcvtsi2ss
push
fisttpll
mov
orb
loopne
cmp
cmpsl
mov
mov
gs
adc
mov
out
negb
jecxz
inc
mov
cmp
cmp
add
jae
mov
sub
mov
inc
and
fidivl
mov
push
push
pop
js
rorl
and
jg
adc
aas
push
inc
jbe
in
jmp
arpl
mov
cmpb
pop
push
je
imul
out
mov
and
daa
rcrb
lods
cld
fiadds
and
and
adc
test
pop
cmp
adc
ds
jge
gs
mov
add
bound
push
mov
inc
pusha
xor
push
outsb
dec
rcl
cld
push
rcrb
adc
lea
jno
inc
sbb
lret
mov
fsub
dec
je
xlat
jne
push
nop
pop
jbe
jb
jb
xchg
cmp
adc
gs
js
jge
adc
mov
add
add
sti
aaa
insl
adc
mov
xchg
in
and
inc
subl
in
inc
mov
pop
cmc
mov
and
cmp
les
cmp
dec
pop
inc
xor
jl
mov
pop
cmp
push
mov
stc
loop
gs
cs
sbbb
jo
inc
xor
outsl
sub
pop
push
jne
jns
movsb
sub
push
sbb
enter
loop
add
gs
adcb
mov
add
add
sub
jnp
mov
out
je
sub
adc
xor
cmp
imul
notl
loopne
pushf
adc
jns
je
cmp
lret
pop
repz
int
ss
out
psubq
xchg
mov
fdivrl
add
pop
les
pop
fsubl
xchg
mov
mov
push
stos
ret
scas
inc
clc
cs
xor
xchg
insl
pop
rcrb
mov
rol
outsb
dec
sbb
andb
dec
aad
add
lock
in
adc
pop
mov
jns
fs
jo
sbb
fisubs
dec
and
push
pusha
int3
jg
mov
cmpb
add
cs
pop
sub
or
imul
and
popf
push
and
or
jb
sub
imul
cmpsl
pop
in
out
div
inc
stos
inc
repz
xchg
pop
pop
daa
mov
ds
enter
subb
pushf
popl
add
push
and
fmull
popf
pop
pusha
mov
mov
ret
inc
xchg
mov
dec
jecxz
ret
cmp
inc
loop
mov
mov
loop
sub
lahf
test
jne
cmp
ja
cltd
inc
test
mov
data16
test
xchg
adc
test
pop
fidivs
jns
loop
cmpsb
dec
sbb
dec
xchg
jnp
insl
dec
pop
sub
inc
xchg
dec
add
inc
jp
out
mov
and
cld
aaa
push
add
testl
mov
jg
mov
mov
call
jp
or
ja
aad
aam
xchg
mov
mov
aad
imul
mov
pop
pop
rolb
shr
push
mov
xchg
mov
popf
cld
das
jbe
stos
cs
incl
adc
sub
pop
lret
test
fsub
dec
testl
add
scas
sti
and
icebp
mov
lahf
cld
out
int
addr16
arpl
sub
push
cmp
stos
push
cmp
mov
stos
dec
jmp
inc
pop
cmp
enter
mov
sub
inc
mov
mov
inc
adc
adc
xchg
mov
push
cmp
imul
xchg
mov
popa
inc
in
sti
pop
sub
add
les
push
mov
faddl
xor
adcb
stc
into
sub
add
outsb
pusha
sar
jo
flds
pop
shrb
cmp
cpuid
mov
sbb
adcb
pop
imul
outsl
jmp
outsl
mov
filds
iret
add
gs
and
pop
adc
movsb
lret
pusha
cld
mov
mov
jns
add
pusha
cwtl
mov
test
mov
push
jecxz
arpl
leave
cmpsb
in
dec
inc
mov
jle
xlat
fidivl
or
sbb
notl
sbb
sbb
pusha
mov
outsl
arpl
clc
mov
sub
mov
dec
je
into
sbb
popa
sahf
sbb
je
add
mov
movsb
jl
or
xlat
daa
adc
add
mov
sub
mov
xchg
imul
pusha
mov
sub
pop
xchg
jecxz
fcomps
adc
sub
popa
mov
pop
adcb
sbb
sahf
nop
dec
adc
insb
or
cmpsl
js
aaa
jbe
js
push
mov
orb
inc
adc
ret
push
xchg
lahf
dec
dec
inc
jmp
xor
loope
repz
stc
jo
pop
push
je
add
inc
jnp
enter
leave
inc
mov
add
popl
mov
xlat
sar
call
stos
inc
or
scas
insl
mov
ljmp
jp
movsl
xor
daa
pop
or
jo
addr16
inc
sbb
fwait
mov
sub
lcall
and
dec
pop
add
mov
int
sub
dec
adc
pop
jecxz
ljmp
sub
ds
cmp
lret
addr16
xor
mov
pop
push
sarl
add
add
test
mov
push
cli
idivl
loope
adc
jg
xchg
arpl
jmp
cmp
mov
ja
or
mov
pop
mov
pop
stos
popf
add
pop
shll
push
sar
dec
std
pop
iret
xchg
ficoml
mov
or
push
stos
leave
xor
pop
aas
mov
pop
loopne
les
and
mov
aaa
aad
add
subb
sub
fwait
jnp
sub
add
test
jno
test
nop
ret
rorb
negl
div
xchg
scas
outsb
or
xchg
jg
pop
xor
adc
jg
inc
inc
ja
arpl
dec
insl
and
adc
xor
sbb
cli
push
les
xorl
in
jge
sarl
scas
jmp
aaa
jno
clc
add
das
insb
mov
loop
test
mov
iret
dec
pop
mov
mov
popf
fldlg2
in
push
js
push
sbb
sti
cmp
lret
out
push
repz
xchg
and
push
dec
push
jne
jns
mov
das
and
scas
repnz
inc
je
test
pop
pop
jmp
test
outsb
lahf
add
jne
clc
push
ret
add
fadd
pop
daa
xchg
iret
inc
inc
icebp
xor
mov
add
add
mov
ss
in
xchg
movsb
fildll
xorl
pop
inc
stos
decl
xchg
cli
xor
lods
lock
pop
sbb
mov
mov
out
sub
cmp
loope
gs
and
xchg
cmp
xchg
mov
js
test
mov
in
sub
or
arpl
repnz
sahf
cmp
jo
repz
mov
ret
mov
adc
les
scas
add
add
dec
fildl
push
mov
flds
mov
mov
pop
test
sbb
out
jo
push
xor
stos
out
jle
and
pop
hlt
orl
arpl
shrb
xchg
pop
das
sbb
sub
dec
out
ds
xchg
inc
and
adc
mov
pop
aas
dec
mov
sub
sub
push
sbb
imul
pushf
movsl
jbe
enter
fmuls
add
jg
test
cmpsb
xor
enter
cmp
movsb
cmpsl
sub
ret
das
cmpsb
adc
lahf
jge
out
add
out
mov
mov
out
mov
push
aas
jmp
push
dec
nop
mov
cmp
push
fdivs
ljmp
push
mov
adc
nop
pushf
les
push
das
pop
lahf
add
pop
cli
mov
stos
data16
and
dec
out
or
outsb
add
jb
gs
adc
enter
push
outsb
aam
jge
aas
int
push
fs
ret
cmp
mov
pop
xor
or
in
lock
adc
lahf
out
xor
pop
in
add
jg
int
ret
jno
jmp
and
mov
rorb
ljmp
mov
or
jge
inc
mov
cli
mov
fiaddl
leave
and
dec
loop
mov
xchg
push
adc
aas
out
in
xchg
rorl
ror
mov
sub
pop
scas
sarl
leave
jecxz,pn
cmp
mov
icebp
lods
enter
mov
ds
mov
test
and
add
add
subb
shrl
stos
loop
outsl
push
in
test
mov
ret
push
rcrl
dec
fimuls
fsubr
mov
js
into
movsb
xor
inc
aad
push
xor
out
inc
inc
jnp
es
mov
or
mov
cmp
sub
mov
sbb
sahf
mov
sbb
lret
addb
outsl
dec
in
jecxz
jb
mov
int
mov
testl
shll
jae
sbb
loopne
ret
shrb
icebp
ss
pop
jb
lea
xchg
sbb
repnz
int3
fsts
lods
pop
inc
gs
cld
popa
data16
pop
in
jae
fnsave
push
or
jecxz
int3
lcall
hlt
jae
imul
lahf
fcmovnbe
fildll
lods
es
repnz
and
sbb
repnz
fisubs
add
add
mov
fwait
lds
scas
lret
pmullw
xor
adc
pop
add
test
addr16
inc
dec
int3
in
arpl
test
push
xchg
out
cmc
mov
aam
push
into
xchg
addr16
test
in
pusha
hlt
mov
xor
je
repnz
bound
mov
rclb
mov
jecxz
fnstsw
xchg
xor
add
mov
xor
jnp
lods
pop
pop
sti
pop
or
and
xchg
add
add
iret
lods
stos
jns
ficoml
xchg
pop
mov
movsl
add
dec
cmp
out
jp
lcall
cs
sbb
dec
bound
or
sbb
jne
je
mov
cmp
cmp
andl
std
cmp
mov
jecxz
mov
int3
jmp
inc
ret
pop
pusha
int
iret
sub
cmp
cltd
xchg
das
int
mov
filds
mov
sub
add
xor
push
push
cmpsb
aam
jmp
mov
inc
or
pop
aas
and
mov
pop
fdiv
add
and
mov
in
insb
sbbl
in
inc
lcall
xchg
inc
inc
icebp
xchg
movsb
in
xchg
mov
mov
notb
xor
pop
push
adc
sub
les
stos
lahf
lret
sub
aas
lcall
add
xchg
lds
inc
lcallw
sti
or
enter
jb
mov
xchg
pop
jmp
xor
and
push
loopne
mov
jmp
mov
jl
xchg
xor
pop
sub
imulb
js
pop
test
roll
cs
sbb
xchg
popl
out
iret
loopne
sbb
decb
sti
mov
clc
mov
fmuls
ljmp
int
fistl
or
mov
xor
and
pop
mov
push
jle
xchg
fistpl
add
cmp
sub
dec
sub
jp
popa
or
xor
shl
das
dec
pop
fidivs
mov
cli
or
mov
lods
in
mov
adcl
fisubl
and
sbb
pop
dec
mov
push
pop
cmp
mov
push
jnp
fildll
data16
sti
mov
xchg
sub
dec
roll
xchg
xchg
inc
lods
fistps
and
imul
jmp
adc
push
cmp
mov
ljmp
adc
pushf
mov
loope
in
dec
insl
mov
out
push
xlat
and
cmp
test
std
inc
scas
xor
mov
pop
es
xchg
outsl
adc
or
les
aaa
jle
push
cmc
pop
mov
adc
pop
push
aam
test
mov
adc
das
add
cmp
cmp
dec
aas
ret
cltd
clc
push
cmp
dec
cmp
jecxz
sub
out
shl
or
test
pop
xchg
movhps
ds
lahf
insl
push
es
inc
fdiv
gs
add
add
jb
adc
sub
leave
sub
jmp
adc
fsubrp
mov
xchg
or
dec
add
decb
mov
and
add
mov
cmp
rcl
daa
movsb
xor
sbb
push
jae
test
in
jge
int
cmc
xor
add
xor
cli
xchg
jecxz
pop
mov
std
jo
and
add
stc
bound
xchg
adc
push
inc
sbb
in
mov
insb
adc
lds
hlt
cmp
ljmp
pop
xchg
int3
cmp
xchg
xor
jle
jg
xor
bound
std
mov
add
outsb
pop
adc
mov
sbb
mov
or
sbb
lret
sub
out
mov
cmp
and
and
cmovne
rcr
cwtl
cltd
fiadds
mov
jb
mov
aaa
xchg
out
scas
rolb
push
js
pop
mov
mov
loope
push
movsb
sub
mov
add
in
stos
mov
add
movsb
lahf
imul
popf
sar
shrd
sbb
pusha
cld
mov
mov
dec
lock
mov
mov
subb
fildl
pusha
jl
aam
or
loop
roll
push
push
jo
negb
sub
xor
lock
jg
lret
mov
ret
loop
jnp
sbb
pop
bound
pop
xor
std
jmp
outsl
std
mov
in
lcall
fs
jl
stos
insb
inc
inc
cmp
sbb
jns
lods
dec
jmp
btc
ss
fimuls
scas
or
ss
cmp
xchg
pop
decl
sub
scas
xor
aas
shlb
sbb
inc
sbb
mov
xchg
push
mov
ret
mov
jae
hlt
sbb
shll
and
mov
cwtl
das
add
lcall
xorb
dec
cmp
sub
pop
std
loopne
lahf
push
add
daa
mov
pop
jne
and
pop
add
fdivs
aam
into
lods
in
adc
rorl
adc
scas
inc
pushf
and
mov
aad
cld
pop
cmp
adc
std
sbb
sub
adc
loop
mov
int3
sbb
and
std
push
mov
xchg
add
push
push
sub
sub
push
je
out
es
leave
and
test
fistpll
popf
adc
add
and
pushf
push
dec
or
sbb
cmp
sub
adc
adc
mov
push
mov
cmpsb
imul
scas
pop
fisubs
pop
mov
je
or
scas
dec
testl
mov
sub
inc
popa
sub
push
xchg
jb
popf
sub
pop
adc
pop
call
sub
lret
push
lret
gs
ret
dec
mov
out
das
xchg
daa
shrl
xchg
inc
sbb
mov
outsl
jle
inc
sub
es
xchg
add
and
push
pop
xchg
push
mov
mov
jne
add
or
jo
or
push
xchg
sbb
dec
push
adc
iret
outsb
lcall
les
in
push
sub
into
setg
enter
inc
out
sbb
decb
pop
xchg
orl
sbb
xchg
xchg
loop
pop
shrl
mov
mov
cmp
mov
lds
xchg
add
jnp
mov
xchg
adc
inc
bound
in
xor
or
cmp
jp
push
sbb
scas
pop
xor
lahf
hlt
inc
add
fldcw
pop
add
shlb
jge
shrl
je
adc
adc
cmp
lret
testb
add
xchg
cmc
or
div
ret
sti
push
add
add
jmp
out
add
cmpsb
fsts
add
mov
ja
sub
ljmp
imul
jp
andl
in
lcall
dec
iret
insb
test
in
lds
outsl
add
xchg
fstl
loope
out
sub
adc
push
shlb
popa
xchg
aaa
mov
xor
push
dec
enter
push
jnp
pushf
les
push
adc
lods
or
insb
rcll
test
adc
push
add
dec
jae
lcall
mov
xchg
xor
mov
in
jnp
sbb
jl
dec
sub
pop
insb
aas
aam
push
jg
inc
mov
hlt
dec
imul
scas
pop
nop
roll
xchg
xor
cs
xchg
pop
fidivl
or
xor
xchg
loop
js
das
in
das
pop
xor
cmc
popf
cmp
mov
add
inc
jbe
aam
insl
pop
and
or
adc
dec
xchg
test
aad
leave
sbb
mov
adc
cld
emms
test
sti
test
cmp
pushf
adcl
aaa
push
mov
les
sub
popa
sar
es
je
aam
