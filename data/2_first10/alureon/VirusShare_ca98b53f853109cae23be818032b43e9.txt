jl
adc
fnstcw
add
mov
push
ja
inc
or
add
and
jmp
jg
test
pop
rcrl
push
push
sub
outsl
cmp
clc
push
imul
jnp
mov
popf
dec
mov
inc
ret
jae
xor
or
sbb
jp
rclb
lcall
push
cwtl
xor
jmp
sub
xor
inc
jmp
ret
gs
jbe
je
pop
push
mov
cli
out
mov
cmp
push
mov
sub
push
lea
push
call
pop
mov
ret
push
ficomps
push
jb
repz
divl
lret
pop
add
aam
bound
das
les
sar
mov
dec
sarl
inc
mov
mov
pop
gs
jecxz
jmp
fwait
icebp
sbb
cmc
mov
addb
shl
add
movl
je
jmp
clc
ljmp
sub
add
jmp
lret
test
dec
cltd
in
cmp
jb
cltd
hlt
icebp
test
push
inc
or
idivb
or
sbb
mov
dec
mov
jns
mov
pop
rclb
add
cmp
lea
addr16
jmp
mov
out
inc
hlt
add
add
in
push
xor
cmp
jae
cmp
lcall
dec
push
mov
pop
cmpsl
mov
xorb
cli
jnp
inc
jnp
inc
ljmp
or
jno
scas
cmpsb
sbb
negb
adc
mov
js
rorl
andb
push
rcrb
jmp
mov
pop
add
aaa
xor
sbb
pop
xchg
aas
into
neg
jmp
lret
out
xor
jmp
dec
fldl2e
xchg
arpl
cmpsl
xor
idiv
fstl
push
or
adc
ss
test
dec
inc
ret
aam
lock
sbb
cld
sbb
pop
inc
enter
mov
js
test
aas
test
push
int
inc
inc
popf
cli
sub
pop
jbe
in
fwait
mov
repz
xor
shlb
aad
imul
or
or
mov
xchg
incl
paddusb
pop
pop
leave
fmuls
jno
add
lret
xchg
stos
sub
add
sarb
cmp
rcl
jno
pop
inc
mov
xchg
outsl
mov
movsb
mov
cmp
mulb
test
xchg
add
jge
pushf
mov
dec
sbb
lahf
inc
sbb
jl
mov
testl
mov
xchg
push
jbe
in
inc
mov
mov
outsb
mov
shll
sub
mov
data16
popa
nop
sbb
das
add
jmp
lds
push
lahf
and
jge
sub
sbb
fsubl
xchg
test
sbb
ljmp
inc
adcb
adc
sub
xorb
sub
lret
sbb
adc
adc
rolb
mov
pop
outsl
sar
jbe
outsb
xor
pop
pop
mov
jmp
cld
add
testl
lahf
adc
cs
data16
and
test
pop
xor
repz
sub
jge
int3
push
sub
xor
sub
inc
in
lock
call
add
sbb
mov
fisubrl
in
in
xor
push
sarl
out
jbe
das
hlt
mov
inc
scas
out
and
nop
ss
inc
jns
pop
mov
sub
jmp
and
mov
xchg
adc
xor
mov
es
add
es
or
out
push
inc
mov
sbb
xor
mov
push
into
mov
fdivrs
xchg
push
nop
push
xchg
das
mov
push
outsl
clc
add
icebp
jns
divl
mov
lcall
lea
or
jmp
fs
aas
push
jmp
dec
popf
mov
shll
push
dec
xor
cmp
stc
test
add
jmp
ret
adc
rcr
enter
stc
lock
mov
jmp
lock
enter
cld
loop
cmc
and
mov
pop
lret
inc
push
and
and
dec
xchg
mull
je
and
fsubrl
sub
jmp
push
or
jmp
fmuls
cmp
loopne
dec
pusha
inc
int3
mov
mov
dec
inc
test
jmp
adc
in
je
sbb
or
ficomps
mov
lock
jmp
pushf
xor
dec
push
sub
jmp
negl
cltd
push
ja
push
repnz
sub
add
add
out
shlb
add
inc
add
xor
ds
aaa
cmpsb
cmc
leave
andl
xchg
cli
sbb
lock
cmpsl
aam
testl
and
xor
lret
movsb
subb
pop
stos
fnstenv
jmp
pushf
bound
std
jmp
mov
xor
mov
mov
sbb
push
incb
mov
std
shlb
push
xor
daa
add
stos
fwait
inc
test
leave
cmp
and
stos
mov
les
fmull
outsl
mov
xchg
xorb
or
add
or
add
add
iret
ror
xchg
jl
push
xchg
sub
push
pop
repnz
and
add
push
addl
out
cmc
pop
sbb
imul
mov
bswap
shll
add
and
std
xchg
jmp
rcll
fildl
push
or
sub
lret
pushf
loop
loopne
add
jle
sub
repnz
push
in
xlat
cld
xor
outsl
inc
jmp
nop
std
clc
in
cmp
sbb
jo
sub
jno
aaa
int3
xchg
lcall
xchg
jmp
cld
inc
stc
popf
mov
mov
iret
lods
push
int
lret
rorb
scas
imul
add
add
sti
ss
es
inc
sbb
das
mov
lea
jmp
xor
cmpsb
sub
das
jecxz
int
sub
pop
mov
lahf
repz
fnstcw
sub
mov
xchg
mov
pop
mov
mov
repnz
loop
int3
divb
fbld
ds
jb
scas
cli
ret
enter
ficomps
pop
das
add
cmp
pushf
stos
lods
push
mov
add
push
inc
lods
jecxz
dec
enter
bound
addr16
mov
adcl
sahf
xchg
fmull
mov
out
lret
dec
and
adc
outsl
push
mov
leave
sti
cmp
lds
out
jmp
xor
sub
out
adc
fs
sbb
imul
aad
shrl
add
cltd
add
test
mov
outsl
sub
addr16
pop
unpcklps
out
pop
pusha
and
icebp
pusha
pop
adc
into
mov
jp
mov
dec
pop
gs
xchg
loop
movsb
adc
hlt
and
jmp
jecxz
sahf
icebp
fdivrp
jbe
inc
and
hlt
ret
movsb
cmp
scas
das
xor
add
mov
mov
mov
cmc
mov
or
jecxz
movsl
bswap
jmp
mov
mov
add
shl
lahf
xor
jmp
stos
lods
jae
jg
add
jmp
xor
fcoml
in
test
mov
jo
out
mov
mov
jnp
ficompl
cwtl
dec
and
xchg
and
call
call
push
ja
or
inc
in
add
fimull
jl
test
jl
dec
push
or
dec
pop
loop
mov
pushf
cltd
sbb
stos
mov
add
popf
mov
jne
aas
pop
test
fucomi
xor
add
out
pop
jmp
jno
ja
mov
iret
iret
push
cmp
or
shl
fcoml
in
int3
push
aaa
clc
scas
mov
mov
dec
push
test
inc
test
inc
xchg
xchg
xchg
test
insb
lods
bound
sbb
dec
lret
dec
pop
les
adc
sahf
cmp
cwtl
mov
mov
cld
pop
dec
lds
jmp
popa
dec
pop
push
call
pop
cltd
jle
arpl
adc
es
mov
int
aad
in
ss
jmp
imul
jmp
adc
pop
sbb
movsl
xor
inc
add
icebp
std
jg
dec
xchg
cmp
ss
or
dec
mov
cli
rorb
cmp
outsb
sub
add
dec
in
fcom
fsubr
leave
push
lods
outsb
repnz
xchg
aam
adc
sbb
out
pusha
mov
jmp
std
int
inc
rcrl
jne
into
pop
insb
fcmovne
cltd
ja
aas
adc
mov
fcomi
iret
pushf
jb
push
pop
sub
mov
add
add
cmp
pop
lock
lea
cli
mov
data16
push
ljmp
xor
es
push
ret
lahf
pop
mov
sbb
jns
inc
mov
sub
outsl
cli
mov
mov
pop
cmp
add
add
loopne
inc
ret
xor
jmp
jae
mov
jl
rcll
sbb
lret
out
rcll
div
adc
ds
and
fsts
negl
jmp
pop
jmp
jns
mov
addb
jmp
insb
jge
dec
sub
pop
ret
and
and
sub
push
adc
mov
or
mov
out
sbbb
insl
into
jle
mov
dec
mov
mov
xchg
pop
jmp
cmpsb
push
dec
rolb
ret
inc
hlt
add
xor
int3
push
jae
push
push
addr16
out
cs
mov
mov
adc
dec
push
enter
sbb
mov
mov
arpl
xchg
sti
or
jmp
mov
repz
push
jmp
jmp
mov
imul
pop
ja
dec
gs
add
gs
fisubs
fistpl
and
jmp
out
pop
push
fwait
call
leave
stos
lea
jmp
cli
pusha
mov
js
pop
pop
jge
cmp
rorl
cmp
or
add
mov
xor
jmp
orl
xlat
or
push
xor
int
mov
xchg
rorl
xor
sbbb
mov
sbb
rclb
inc
push
loopne
insb
jae
nopl
or
cwtl
scas
shlb
adc
aam
push
and
jne
xchg
push
hlt
lods
and
lods
xor
dec
jecxz
test
jmp
in
jnp
fidivl
or
adc
push
mov
std
fldt
scas
test
dec
enter
mov
aas
daa
jl
sbb
loope
jmp
push
jo
sub
stc
in
enter
lcall
mov
and
jae
inc
pop
pop
loopne
xchg
mov
mov
mov
dec
adc
popf
mov
push
fidivs
lahf
or
stos
push
loope
lret
or
cmpsb
sub
loop
mov
movb
sub
into
lods
in
arpl
jp
mov
add
test
cwtl
and
ret
movsb
fwait
icebp
dec
inc
dec
aam
mov
notb
cmpsb
jge
aad
addr16
push
add
and
dec
push
movb
dec
cmc
popf
mov
nop
jmp
shlb
jmp
add
mov
and
mov
inc
dec
je
mov
imul
cmp
jne
mov
imul
cmp
jne
mov
imul
test
je
add
sub
sub
add
popa
ret
xchg
pop
mov
roll
push
stos
outsb
inc
fdivs
mov
mov
loopne,pn
xor
pop
aas
adc
js
adc
pop
xlat
sub
je
js
int3
ja
dec
pop
pushf
dec
sub
xchg
sub
cli
add
in
add
mov
jmp
arpl
enter
cmc
jp
and
jp
test
add
pop
or
jmp
das
inc
mov
adc
test
push
mov
mov
add
imul
push
sub
aam
adc
insl
jmp
roll
cmp
orb
push
jae
neg
jmp
jmp
jg
jmp
fldt
push
je
inc
mov
adc
cwtl
neg
jmp
mul
add
inc
stos
inc
xlat
xor
repz
sub
jmp
xchg
imul
push
adc
test
xorb
in
in
mov
mov
add
stos
sub
push
dec
mov
jmp
cmpsl
xor
cwtl
push
add
xor
in
push
sub
aaa
ja
sbb
jbe
hlt
add
arpl
out
or
out
dec
movsb
cltd
mov
or
pushf
jle
call
pop
idivb
lcall
in
popf
popf
dec
imul
and
inc
and
std
inc
movsb
subl
mov
mulb
icebp
lcall
mov
stos
jbe
fsubrs
jae
fstpt
jle
mov
sbb
add
sarb
push
inc
inc
fwait
pusha
pop
dec
enter
mov
mov
repz
and
jmp
dec
int3
and
lret
push
fcomip
out
popf
jl
mulb
out
shl
dec
in
outsb
inc
ret
add
jmp
fimuls
sti
test
mov
je
sub
and
pop
in
mov
pop
pushf
jae
add
ljmp
inc
test
and
dec
adc
ret
push
fsubrs
fidivs
in
sti
jle
xchg
sar
notl
mov
test
mov
sbb
shll
mov
or
mov
stc
and
into
test
add
aaa
scas
lea
sbb
and
xchg
mov
inc
sub
or
popa
ret
jns
xor
adc
scas
xor
lret
cmpsl
xor
orb
in
jno
movb
sbb
sbbb
xchg
mov
out
insb
sbb
vrsqrtps
iret
lcall
movsl
jle
or
cli
daa
mov
pop
xchg
mov
add
mov
stc
cmp
sub
inc
repz
repnz
sbbl
mov
lcall
or
daa
pop
sub
sbb
sub
adc
xor
jmp
jmp
pop
cmc
cmp
loop
js
gs
sti
pop
push
push
rorb
movsl
xchg
cs
loop
jns
sbb
push
insb
jbe
mov
xchg
cwtl
cmpsb
decl
leave
jmp
pusha
movsl
jns
sub
fdiv
mov
cs
in
pop
sub
cmpsb
jne
inc
adc
mov
cmp
cmpb
push
and
push
loope
xchg
jo
imulb
repnz
inc
adc
mov
fbstp
pop
sub
jmp
hlt
call
ret
mov
scas
mov
mov
rol
dec
jmp
jmp
dec
lods
mov
test
int3
xor
mov
push
jne
outsb
into
xor
test
lods
jmp
xchg
lret
push
mov
jge
push
testb
sub
mov
bound
pop
outsl
es
mov
xchg
push
sub
lock
mov
lret
add
enter
mov
jmp
dec
test
pop
mov
pop
xor
lea
jmp
and
jmp
mov
int3
push
cmp
mov
cmp
jl
mov
insb
jge
fmull
andl
lret
sub
je
je
jb
stos
or
push
xchg
or
repz
mov
test
jb
pop
xor
jl
fstpt
pop
sti
cli
sub
movsl
add
adc
sub
and
jmp
push
test
in
daa
outsl
pop
and
fucomip
cmp
jno
dec
jl,pn
pop
lret
popf
aas
loop
fbld
push
mov
mov
add
addl
cmp
pop
lret
popa
das
in
int
sti
push
and
add
jl
ret
popf
push
out
mov
pop
mov
or
xchg
or
pop
icebp
bound
sub
mov
dec
mov
xlat
out
push
and
jmp
js
or
ret
ret
push
adc
cmpsb
outsl
lea
mov
scas
jge
mov
inc
jge
je
leave
push
push
push
fidivl
inc
jns
enter
pop
add
mov
xor
xlat
hlt
rcpps
repz
icebp
inc
rcrb
sbb
repz
andb
sbbl
cli
mov
les
xchg
mov
jg
xchg
jne
sbb
repnz
inc
sbbl
stc
jg
pop
cmp
mov
add
cmp
popf
xor
jmp
das
filds
movsl
sbb
enter
lock
push
incl
call
dec
aaa
icebp
popf
mov
aas
add
pop
es
cmp
xchg
out
inc
xor
or
push
pop
mov
mov
add
lock
mov
test
outsb
push
jae
cmp
push
sbb
repz
adc
sub
add
jb
rorb
and
xchg
rorb
sbb
sbb
adc
pop
cmc
sbb
stc
xor
lret
push
xchg
dec
and
int3
fstpt
lcall
jl
mov
nop
ret
outsl
xchg
jmp
or
jmp
test
mov
sbb
jecxz
sub
lods
jmp
mov
clc
xor
xchg
ret
or
mov
add
or
and
enter
sbb
cmpsb
mov
push
cmp
jecxz
or
stos
test
mov
mov
xor
mov
and
cwtl
push
sbb
cmp
divb
pop
lahf
inc
xlat
dec
cmpsl
mov
lss
mov
ljmp
inc
adc
sub
push
mov
xor
fisubs
lret
jmp
mov
push
jae
test
aad
in
xchg
push
orl
fucomip
out
popf
imul
jmp
inc
movsl
add
mov
and
jnp
add
in
cwtl
add
or
lret
jle
mov
fucomi
sbb
aaa
imul
stc
insb
in
sarb
leave
popf
cmp
scas
pop
mov
jecxz
ss
movsl
xor
xchg
ret
sub
movsl
jmp
cmc
in
rcrl
fucomp
push
fsubrl
ljmp
andl
add
mov
or
movsl
pop
push
dec
pop
daa
in
or
jnp
cmp
mov
bound
sbb
pop
mov
jge
inc
cmp
call
jmp
adc
pop
sub
mov
pop
stos
shrb
addr16
test
xchg
adc
and
dec
imul
movsb
push
cmp
in
lret
sbb
lods
mov
and
cmpsl
lcall
add
pusha
mov
je
aaa
pop
and
jge
xor
xchg
jns
xchg
push
xchg
xchg
inc
sarb
lds
dec
jns
int3
push
orb
call
add
fucomi
jmp
jae
into
push
ret
cmp
insb
test
pop
push
lret
mov
pop
mov
or
das
push
mov
or
hlt
and
dec
lods
int
insl
mov
inc
inc
adc
xor
or
add
push
pop
jmp
movsl
shlb
cmpsb
xchg
mov
xchg
inc
cmc
cmpsb
mov
add
and
cli
xchg
mov
xchg
sub
jns
rclb
mov
fidivs
lahf
in
pop
out
dec
inc
bswap
insl
mov
xchg
cltd
push
sub
cmp
dec
lret
inc
cld
jp
mov
dec
cltd
xor
aad
pop
pmulhuw
inc
es
ret
subl
mov
cmp
js
in
clc
or
test
pop
push
test
push
js
les
les
mov
and
enter
add
pushw
mov
lcall
pop
out
fadds
loopne
and
dec
in
out
clc
aad
inc
add
jbe
notl
lods
scas
test
ret
popf
stc
in
jg
adc
lret
and
loopne
adc
inc
jae
fwait
ljmp
lods
and
out
sbb
enter
rclb
sbb
bound
fucom
xchg
aas
lock
inc
fistpll
scas
pop
insl
jnp
inc
add
in
xchg
inc
pop
imul
hlt
in
mov
jg
and
jmp
mov
aam
add
into
pop
push
sub
jmp
xchg
clc
adc
push
xor
call
sarl
in
ss
dec
jo
mov
ret
das
lods
push
jnp
ret
jmp
xorl
and
jno
mov
clc
adc
sub
xchg
jno
leave
addr16
cltd
dec
jb
dec
sub
test
rolb
cmp
mov
and
lds
lret
or
mov
sti
xor
mov
lret
mov
fimuls
sub
daa
or
mov
cs
sub
push
pushf
fs
fildll
xchg
sahf
jns
push
inc
adc
nop
and
mov
pop
call
and
jecxz
repz
movsb
out
pop
sarb
cmp
shr
ljmp
mov
push
shlb
jl
sub
data16
cmpsb
xchg
jecxz
jp
shlb
cli
idivb
mull
stos
int3
push
fists
and
out
mov
fmuls
ljmp
mov
and
add
adcl
orb
in
orl
mov
cmp
imul
or
dec
or
sar
mov
test
das
movsb
or
lods
sub
jo
shll
cs
adc
ss
rorb
inc
jmp
rol
ljmp
and
sbb
test
jnp
adc
jge
in
xchg
hlt
repz
pop
lds
nop
sub
inc
mov
mov
xor
and
sarb
push
push
add
stc
adc
adc
test
cmc
es
popa
sub
xlat
fs
push
aas
jge
pop
sub
jl
stos
jecxz
sbb
mov
andb
adc
sbb
push
jmp
cmpsl
push
outsb
or
mov
add
adc
sub
int3
jne
imul
lahf
es
rorb
out
clc
mov
scas
cmp
out
jmp
aam
dec
adc
xor
roll
push
repnz
jmp
popa
stc
sub
jnp
push
jmp
sti
mov
fcomps
xlat
aas
sub
imul
mov
mov
inc
adc
sahf
xor
jl
dec
jb
pop
ss
call
jno
dec
xchg
push
fcoml
mov
sahf
in
sbb
mov
or
jg
rcrl
bound
cmp
and
movsl
cli
lahf
inc
xor
xchg
jo
dec
orl
call
sub
sarl
pushf
xchg
hlt
dec
push
adc
push
in
das
sub
push
fdivs
popa
arpl
arpl
xor
lods
dec
cmpsl
je
sub
jmp
jmp
lds
xchg
sti
fsubrs
sub
dec
mov
lahf
cwtl
jecxz
push
aas
jno,pt
and
and
pop
inc
movb
ret
lret
jns
jmp
sbb
adc
dec
mov
mov
ja
in
lret
imul
insl
sbb
push
push
ss
xchg
cs
daa
or
aaa
sub
sub
push
sete
repnz
jo
aam
or
rcrl
pop
lods
inc
pop
push
pop
mov
fsub
call
in
sbb
sar
int3
sub
ss
jecxz
lods
sub
xor
fsub
or
mov
and
nop
dec
cmc
push
lock
pushw
or
jae
xchg
imulb
insb
inc
mov
xor
pop
inc
or
mov
test
xor
mov
mov
rcll
ret
or
jmp
jae
dec
add
sub
scas
sbb
inc
sbb
aam
cld
mov
loopne
icebp
mov
xchg
pop
add
lcall
test
movsb
cltd
repz
addr16
mov
and
scas
int
dec
outsb
mov
inc
dec
enter
and
jmp
outsb
sub
jae
adc
xchg
push
and
aaa
pop
iret
jbe
daa
adc
loopne
repnz
mulb
inc
fisttpl
pop
out
sbb
cmpsb
add
jg
mov
mov
jmp
mov
mov
fsubrp
test
lahf
arpl
xlat
jmp
arpl
fistpll
dec
mov
adc
add
pusha
sahf
jecxz
xor
movsb
cmpsl
adc
dec
inc
int
push
add
fsubrs
sarb
xchg
cmp
sub
or
jmp
sbb
pop
in
rol
sbb
out
lahf
pop
cwtl
out
cmp
scas
das
jnp
sbb
add
sbb
lret
inc
xor
pop
mov
je
cmpsb
jne
inc
negl
pop
es
pop
push
mov
repz
insb
ficompl
testb
xor
jmp
lock
add
sbb
push
outsl
cmp
es
inc
das
idivb
shrl
mov
flds
cld
in
add
stos
arpl
sbb
cli
and
andps
mov
insb
mov
push
fwait
xchg
aad
mov
xor
mov
popf
inc
data16
mov
clc
sub
xchg
adc
sahf
loop
pop
mov
into
enter
push
cmp
adc
fsubrp
jecxz
add
pop
jb
mov
jp
cmp
xchg
outsl
mov
jp
mov
adc
inc
inc
loope
sbb
cmpsb
mov
mov
add
dec
in
jb
int3
es
js
lret
dec
cmpb
xor
in
and
pop
fdivr
iret
test
nop
pop
xchg
lds
sar
rorb
out
jne
dec
jmp
stos
xor
int3
xchg
adc
inc
and
sub
jmp
sub
inc
xor
inc
in
loope
push
cld
hlt
xor
jmp
add
pop
pop
test
pop
jnp
test
jnp
xor
jmp
xor
mov
mov
jecxz
insl
sbb
jnp
cmp
in
ljmp
jmp
movsl
or
inc
dec
inc
sub
popa
jg
jg
jb
out
cmp
test
loope
fbld
mov
inc
jb
and
jmp
into
outsb
cwtl
cltd
dec
cmpsb
out
dec
fdivs
lahf
jmp
loopne
pop
sub
enter
frstor
mov
fwait
jl
daa
loope
in
jp
pusha
fisttpll
mov
jg
jae
test
push
and
aam
stos
xor
jmp
rorl
lock
sbb
andl
je
mov
mov
xchg
mov
jmp
call
sub
imul
mov
xchg
jmp
cmp
push
xlat
icebp
call
insl
pushw
stos
xor
cltd
mov
in
clc
fwait
cmp
stos
test
out
mov
xor
mov
cmpsl
mov
mov
jmp
mov
in
rclb
pop
lret
push
xlat
push
idiv
mov
push
pop
mov
cmp
or
arpl
sahf
fbld
sub
fists
or
jo
movsb
mov
aad
in
pop
fisubs
add
idiv
push
push
push
xor
or
xchg
aas
sbb
lret
jmp
lcall
push
or
not
fimull
push
jno
mov
xchg
pop
add
iret
mov
mov
sbb
adc
lahf
in
or
xchg
std
lret
mov
shl
cmpsl
js
aad
xchg
shrl
mov
mov
cltd
int
shlb
pop
cmpl
dec
sub
sub
cwtl
dec
pop
bound
and
out
in
mov
test
cli
jmp
ficoms
dec
mov
xchg
xchg
int3
in
xlat
inc
rorb
ret
push
mov
das
mov
xor
test
jg
xlat
cs
pop
jecxz
add
arpl
jmp
in
repz
and
outsl
insl
das
mov
xchg
inc
jmp
outsb
repnz
xchg
and
loop
pop
aas
mov
xchg
mov
xchg
out
cmpsb
inc
dec
es
shll
push
sahf
nop
arpl
out
lock
add
mov
nop
mov
pop
ljmp
inc
sbb
cmp
fldenv
pusha
ss
test
repz
mov
jecxz
sub
pop
das
jge
push
push
fsubrl
insl
dec
daa
inc
push
xor
jmp
loope
dec
jmp
mov
mov
mov
or
jnp
outsl
roll
lea
dec
mov
or
es
cmpsb
or
inc
jmp
pop
or
pop
mov
outsl
in
mov
out
out
or
or
jmp
push
test
fwait
cltd
js
and
xchg
pop
icebp
jge
sbb
lahf
int
jae
adc
cmc
mov
cmp
cli
xor
ret
mov
pusha
or
or
pop
push
addr16
pop
rcrl
ds
mov
negb
sbb
lret
addr16
sub
sbb
dec
xor
insb
lea
add
ss
add
xorl
mov
sub
fimull
add
pusha
idiv
jle
push
pop
push
cwtl
scas
pusha
ret
fistpll
sti
ret
pop
iret
imul
arpl
cmpsl
jo
aas
adc
inc
dec
lret
xchg
xchg
dec
lcall
or
rcrl
sbb
scas
xchg
xor
mov
inc
jns
mov
jo
push
lcall
jmp
daa
daa
xchg
jle
fmull
or
inc
stc
or
jmp
pop
push
cmovge
inc
out
add
in
pop
xchg
mov
adc
fisttps
test
xor
mov
arpl
in
sub
int
loopne
fdivs
inc
dec
jae
cmp
in
loopne
stos
cmp
out
cmp
pop
int
fcoml
iret
sub
test
ds
jmp
lahf
sti
loope
sbb
cwtl
fs
in
scas
jnp
push
mov
lahf
dec
movsl
scas
mov
sbb
ds
ret
inc
cltd
sub
std
jl
inc
sti
xchg
cmpsb
add
jmp
xchg
cs
rcrb
fs
jp
sahf
das
xchg
in
subl
cmp
addr16
ficoms
mov
mov
int
jp
push
frstor
aad
sub
ja
xor
jno
cmc
jb
jne
mov
decl
push
mov
xchg
popa
adc
sbb
int
imul
test
pop
fcoms
test
mov
mov
lods
xchg
inc
inc
jmp
mov
or
repz
cmp
movsl
sbb
pop
clc
das
enter
add
jmp
fnsave
sbbb
inc
sub
jmp
shrl
dec
jns
stos
lret
sbb
mov
xor
jne
into
popf
jnp
rorb
xchg
xor
dec
or
mov
dec
mov
jbe
push
dec
cltd
jb
cld
add
neg
jmp
pop
stos
sub
in
call
fildll
scas
jae
rcll
inc
sbb
nop
sub
sub
test
adc
aad
ret
add
jmp
add
inc
decb
pop
sahf
mov
out
rcll
scas
sub
mov
sub
jbe
adc
cmp
mov
or
fdivrs
mov
addr16
faddl
fisubrl
sub
push
sub
mov
dec
mov
mov
or
sti
lcall
notl
push
xchg
loop
dec
cmp
mov
insl
cltd
std
pop
mov
call
mov
sbb
push
lret
inc
outsl
lea
jmp
xchg
cli
mov
adc
mov
push
inc
mov
lock
shrl
pop
fnstenv
xchg
mov
mov
cmpl
mov
outsl
and
mov
jne
add
jmp
dec
test
aas
fwait
pop
gs
jp
cltd
fnstenv
das
mov
pop
cmp
dec
mov
scas
clc
jbe
lcall
imul
fstpl
push
or
xor
push
dec
out
jp
adc
ret
outsl
cmp
imul
pushl
int
es
mov
sbb
dec
sbb
stos
cmp
add
aad
out
push
add
sahf
mov
outsb
dec
pop
neg
jmp
mov
cmp
and
fldenv
dec
shlb
and
popa
aaa
ss
xchg
mov
ljmp
ljmp
mov
or
ret
aas
dec
jmp
mov
dec
jmp
lret
xor
mov
int3
mov
mov
add
fnstenv
pop
mov
xor
xor
andb
in
in
sbb
mov
pushf
lcall
mov
imul
ss
lcall
int3
btc
adcb
outsl
and
cld
fldl
int
cs
push
push
or
dec
pop
leave
mov
sub
add
icebp
es
mov
shl
lcall
cmp
xchg
or
and
out
daa
pop
jmp
and
inc
cmpsl
or
mov
jne
xor
shl
fidivrs
sbb
pop
ret
or
mov
scas
dec
pop
jmp
push
pop
pop
loopne
bnd
stos
mov
test
nop
rcrb
mov
jno
sbb
pop
stos
pop
fwait
ret
fwait
dec
pop
push
cmc
jge
cmp
mov
xor
dec
pop
fcomps
mov
mov
add
xor
xor
movsl
jnp
and
in
mov
inc
enter
mov
cmp
outsb
sbb
cmp
call
dec
xor
adc
push
mov
neg
jmp
jns
loop
jo
jo
orl
fsubrp
mov
add
mov
lods
and
test
jbe
jno
xor
push
inc
in
test
cmpsb
gs
popa
psllq
sub
xorb
test
lods
jbe
sub
push
int3
inc
std
popa
cwtl
cmp
ds
adc
push
data16
adc
test
mov
dec
mov
jmp
pop
push
push
add
ja
dec
fcmovnb
push
pushf
add
and
call
out
add
jbe
pop
shlb
push
dec
sahf
outsb
fisubs
pop
mov
cld
push
mov
push
es
inc
pop
jbe
pop
inc
pop
ss
sbb
cmpsb
shll
pop
cld
in
jno
sbb
out
ret
sub
cmpsl
loop
sub
mov
jl
or
mov
test
cs
sub
mov
cmc
xchg
pop
loopne
aam
and
adc
xor
pop
xlat
adc
addb
das
popf
xchg
scas
xchg
cmp
mov
popf
in
push
pushf
popf
out
or
ss
popa
xchg
lods
repz
sbb
pop
mov
adc
jmp
cmp
jb
xor
xor
pusha
mov
fisubs
and
clc
decl
mov
imul
fsub
mov
pusha
mov
xlat
lea
jmp
int3
push
int3
sbb
jns
sub
or
aas
orl
loop
pop
xchg
adc
mov
sbb
repnz
outsl
js
mov
jbe
insb
xor
faddl
mov
fists
clc
lret
ret
mov
inc
dec
pop
ja
idivb
out
sbb
jl
in
nop
loop
sbb
xchg
dec
push
outsb
ficomps
clc
sub
and
sub
repz
jb
pop
mov
mov
push
cmc
das
pop
pop
daa
xchg
adc
sub
jg
lea
push
xorb
inc
addr16
mov
and
push
xorb
pop
push
sub
ret
pop
jmp
cltd
cwtl
cwtl
xlat
pop
xor
int
jmp
nop
mov
mov
jge
cwtl
or
cmp
jmp
stos
lods
insb
aam
or
fsubr
push
cld
ljmp
pop
push
call
mov
out
xchg
imul
jmp
mov
out
or
cmpsl
addr16
gs
mov
xor
arpl
add
xorb
sbb
mov
cmp
fisttpll
fcompl
bound
pop
bound
push
out
mov
xlat
pop
mov
cmpsb
xlat
out
es
stc
in
mov
xchg
clc
call
jl
das
out
in
mov
inc
sub
xchg
movsb
mov
mov
stc
lods
mov
shlb
and
jmp
ret
imul
mov
aaa
ror
leave
lods
repz
ljmp
adc
push
jmp
jp
dec
dec
and
xor
fistpl
jl
test
sbb
int3
and
out
movsb
stos
in
mov
dec
add
cs
pop
cmp
jg
pop
inc
adc
mov
dec
jl
shr
mov
js
out
aam
mov
mulb
cmp
push
push
lret
fldl
mov
ds
dec
cld
stos
imull
add
jmp
icebp
test
or
mov
out
mov
out
sarl
add
popa
popa
push
rclb
push
mov
ljmp
loope
jb
jb
jb
mov
sahf
xor
sbb
in
and
inc
shrb
xchg
xor
negb
orb
imull
test
pop
aaa
pop
iret
push
mov
je
inc
or
jmp
or
scas
out
mov
test
mov
mov
push
insb
bound
jnp
push
adc
push
fcompl
pop
out
dec
mov
in
or
inc
mov
adc
add
jmp
in
scas
push
xchg
popa
test
and
or
cmp
gs
sub
dec
cmp
iret
dec
cmp
mov
and
cwtl
pop
add
mov
imul
xlat
jno
popa
xchg
mov
jmp
adc
test
cmp
dec
jle
jp
jge
out
je
hlt
outsl
add
test
dec
rolb
xchg
arpl
inc
and
add
pop
mov
outsb
lock
xchg
and
or
jle
int3
push
jmp
and
lret
sbb
cmpsb
cmp
jg
out
loop
mov
or
insb
xor
lcall
xchg
push
shll
scas
mov
nop
adc
xchg
lods
outsl
ret
mov
int
dec
add
ror
jmp
inc
adc
aas
scas
dec
clc
jge
mov
iret
or
cli
jmp
cmpl
movsl
fs
in
out
push
cli
int3
jo
mov
mov
addr16
cwtl
shll
jmp
insl
xchg
iret
mov
outsb
and
xchg
xchg
in
xlat
call
jb
pop
je
or
movsl
outsl
imul
lcall
sbb
jmp
sbb
ror
lea
subb
xor
call
lahf
mov
popa
dec
repnz
iret
cld
cmp
pop
icebp
mov
ret
lcall
dec
jae
int
add
inc
cs
sbb
push
jns
lock
lret
or
jmp
movsl
add
mov
rcll
xchg
pop
test
adc
sbb
call
mov
popa
iret
or
xor
add
push
daa
lods
movl
imul
xor
out
loopne
xchg
hlt
sub
mov
mov
sub
out
mov
cmp
lods
and
dec
es
mov
ret
dec
jmp
inc
and
dec
pop
xor
xchg
ret
dec
inc
cmp
jmp
ficoml
cwtl
mov
fs
inc
jmp
lret
rcrl
aam
fs
xor
jmp
cmpl
inc
mov
fistps
add
pusha
roll
adc
fisubrl
lods
push
cmp
mov
adc
add
add
stc
outsb
adc
xchg
xchg
sub
imul
pusha
movsl
int
hlt
fdivs
popa
add
pop
aam
leave
and
mov
cmpsl
lods
xchg
pop
int
cmpb
jmp
adc
pop
fisubs
cmp
mov
jmp
sbb
cld
movsl
rcrl
push
cmp
pushf
xchg
mov
gs
das
or
iret
and
jmp
test
popf
push
mov
sahf
add
sbb
xor
jno
jnp
cmp
fcoml
or
int3
fs
jnp
dec
xor
clc
mov
pop
sti
jno
leave
sbb
and
push
mov
loope
push
or
xchg
rcrb
in
popa
lods
push
jl
mov
rcl
cmpsl
or
push
push
sub
fs
inc
jl
cmp
mov
mov
sbb
nop
dec
fucomip
sbb
scas
icebp
shl
jo
movsl
inc
add
xchg
mov
pop
dec
negl
jmp
movsb
stos
jns
orl
xor
int
mov
stc
ds
rorl
add
sub
lret
popf
xchg
jb
les
je
imul
inc
cld
push
jmp
jo
mov
xchg
cmp
mov
aas
inc
add
fimull
mov
cs
mov
js
out
lret
rsm
jae
pop
dec
je
test
adc
mov
and
bound
inc
ss
rolb
xor
js
out
pop
fstp
mov
movsb
push
ret
xchg
cmpsl
xor
jnp
dec
int3
lock
pop
and
pop
push
dec
hlt
pop
ds
cmp
cmpsb
ret
push
sbb
cmpsl
jge
dec
movsl
sbb
out
fmuls
jmp
or
jns
push
aam
lods
mov
fldcw
and
lods
mov
push
and
cltd
lods
inc
jp
cwtl
aad
sub
aad
ds
jo
xchg
loop
in
testb
loope
add
and
jbe
mov
and
jecxz
sbb
stos
cmc
inc
shll
ret
fisubl
stc
xor
push
or
out
js
bound
scas
bound
pop
cmovge
stos
xchg
data16
add
lods
pop
push
mov
dec
in
cmc
js
sbb
in
sub
add
add
and
jmp
xchg
rcl
daa
pop
lret
or
mov
sbb
insl
mov
imul
xor
aas
cmp
sbb
iret
movsl
dec
lods
out
pushf
mov
scas
ret
dec
rorb
sub
stc
pop
push
mov
lcall
jmp
insb
mov
inc
sub
inc
mov
adc
ret
out
mulb
lcall
shrl
clc
adc
rorb
sub
adc
scas
push
jl
jmp
ljmp
mov
jo
and
in
cld
pusha
out
idivb
lock
out
shlb
mov
dec
mov
js
xchg
push
in
or
sub
jnp
mov
outsb
repnz
int
into
cmp
or
pop
add
outsl
in
xor
jmp
popf
insb
jae
scas
jb
fisubrl
scas
mov
stos
out
jb
clc
sbb
jmp
jno
or
aam
xchg
in
push
fs
mov
into
mov
inc
xor
je
orb
jmp
inc
out
fcompl
adc
mov
rorl
out
out
mov
scas
shr
push
jns
jnp
push
imul
xchg
pusha
lahf
ss
aam
jb
push
mov
sbb
mov
fimuls
dec
les
xchg
sbb
test
sub
sbb
xchg
fucomip
stos
jmp
lcall
cmp
mov
in
ret
mov
scas
sub
loope
bswap
jmp
outsb
lds
sbb
movsb
push
inc
mov
fidivs
andb
iret
test
in
jnp
pop
push
inc
sub
call
into
mul
bswap
jmp
mov
sarl
jecxz
cmpsb
divl
addr16
and
jmp
pop
imul
rcrl
add
jmp
and
nop
and
pop
adc
mov
mov
adc
lea
jmp
and
cs
loopne
inc
stos
mov
xor
jecxz
jl
in
mov
pop
inc
repz
pop
cmp
cmp
mov
push
mov
cmp
cmp
stos
mov
xor
loope
loope
cmpsb
popa
sahf
fs
adc
or
fucomip
add
add
ss
lods
inc
xor
jmp
push
scas
idiv
mov
imul
dec
sarl
fdivrs
pop
dec
outsb
adc
cmpsl
test
cld
mov
cmc
pusha
ret
addl
ljmp
jmp
decl
jbe
leave
es
mov
dec
mov
adc
pusha
out
xor
sub
cltd
cld
fs
icebp
hlt
inc
mov
mov
push
dec
jno
rcll
xor
popa
fimuls
jmp
push
into
dec
inc
scas
es
mov
lea
ret
push
ja
aaa
dec
pop
scas
or
push
xchg
fwait
cmpsl
rcrl
dec
sar
ljmp
jge
push
push
call
or
lods
loopne
out
test
sub
jmp
xchg
lea
jmp
dec
or
adc
inc
inc
pusha
mov
leave
push
je
sbb
xor
lds
fisubrs
lods
push
icebp
fdivl
rcrl
xchg
aad
push
lahf
jle
hlt
fwait
lea
push
add
subb
lods
aaa
sbb
in
dec
dec
aad
adc
cmp
clc
imul
or
dec
xchg
dec
cmp
cmp
cmpl
movsb
mov
jecxz
inc
xchg
fbstp
inc
roll
mov
std
loop
pop
dec
cmpsb
inc
inc
enter
lock
add
dec
mov
lea
jmp
mov
orl
add
fsin
adc
pusha
andb
jmp
dec
ficoms
inc
sbb
lret
ret
push
xor
fs
in
mov
or
gs
clc
mov
or
jb
jecxz
xor
jmp
adc
lods
xor
jl
movsb
stos
sub
jmp
scas
aaa
fisttps
mov
idivb
aas
xor
sahf
add
adcb
pop
lods
mulb
push
sar
xor
test
stos
or
pop
ljmpw
add
pusha
jb
lods
jae
out
xchg
pop
sub
pop
test
mov
sub
jmp
mov
cld
cli
adc
sbb
adc
repnz
rcrb
aas
into
push
dec
mov
sub
xor
loope
mov
std
ficomps
out
xor
loope
cmc
bound
call
mov
cmpl
lret
shll
mov
scas
in
js
pusha
in
repz
xchg
out
es
and
add
in
inc
loop
test
loop
aad
push
lahf
or
xchg
notb
lods
std
jae
pop
mov
mov
jnp
repnz
int3
lcall
les
lock
fwait
lret
fs
dec
es
or
stos
mov
dec
mov
cli
out
cmp
jne
or
push
fisttpl
lahf
xlat
xor
loope
je
cmp
iret
cmp
jno
mov
fwait
insl
outsl
js
or
or
mov
nop
push
and
outsb
sbb
push
jae
push
fcomps
jmp
pop
jmp
cwtl
mov
jle
jo
add
aam
addr16
gs
mov
aam
addr16
out
pop
inc
mov
jge
push
sub
divb
je
or
and
rorb
mov
sub
sti
gs
stc
ljmp
hlt
dec
pop
push
in
lcall
jmp
lret
arpl
adc
movsl
jae
outsl
js
lahf
fidivs
stos
aam
addr16
cmc
sbb
pusha
and
cmp
jp
idiv
mov
xchg
sbb
cs
sarl
repz
imul
cwtl
pop
insb
test
xor
sahf
ret
in
dec
aas
leave
pop
jne
sub
cmp
mov
and
add
dec
scas
loope
addr16
xchg
mov
lods
mov
mov
push
addr16
xchg
mov
loope
mov
cmc
inc
inc
sub
mov
test
dec
insl
mov
sub
mov
sbb
push
lods
test
mov
shll
mov
rep
xchg
push
pop
in
jmp
mov
mov
outsl
push
jo
add
or
fwait
fsubrl
jo
daa
inc
mov
and
jno
add
divl
pop
mov
add
jle
adc
and
out
addb
jge
aaa
push
fistpl
dec
pop
imul
adc
cld
dec
inc
aaa
fldln2
mov
inc
cmp
jo
cld
pop
sbb
loopne
or
push
pop
enter
sub
push
mov
je
xchg
push
sti
mov
inc
mov
js
or
dec
add
cmp
outsl
movsl
add
pop
jb
inc
mov
sbb
lock
xorl
dec
js
mov
rcrl
fsubl
mov
sbb
jmp
inc
lcall
inc
cmp
xor
fs
movsb
inc
fcmovnu
cmc
mov
xor
sub
jp
and
pop
insl
mov
push
push
push
inc
in
pop
addr16
movsl
out
jns
push
push
jmp
sahf
push
mov
pop
dec
jp
mov
mov
jae
pop
mov
cltd
mov
cmp
mov
mov
mov
fsubs
inc
mov
jmp
sahf
xor
f2xm1
insl
sbb
adc
out
pop
pop
addr16
mov
mov
aaa
shrb
pop
dec
scas
push
jae
ficoms
mov
repnz
in
add
mov
or
mov
pop
push
jnp
add
icebp
pushl
push
pop
xchg
mov
jb
jmp
lret
adc
mov
xchg
into
add
dec
pop
repnz
hlt
or
and
fs
lret
jb
jmp
mov
add
sbb
inc
dec
insl
pop
cmc
notb
test
or
jmp
push
push
and
sbb
adc
or
dec
outsl
popa
dec
xor
sbb
sub
ret
add
jmp
lea
mov
mov
dec
xchg
xchg
bswap
jmp
mov
add
adc
and
popf
les
inc
aad
mov
and
inc
adc
into
and
loopne
rcll
cld
aas
sbb
mov
repnz
ret
jno
sub
sbb
sub
or
or
inc
pusha
loopne
lods
jae
cmp
mov
jg
xchg
mov
pop
fnstsw
xor
add
cltd
cmp
and
push
ds
add
and
fucomi
push
lret
call
dec
mov
add
insb
idivl
pop
or
inc
rep
add
outsl
adc
in
mov
iret
popf
jnp
dec
repz
cltd
and
xchg
fs
or
mov
xchg
roll
call
dec
loop
cmp
jmp
out
in
out
fadds
test
inc
pop
cvtpi2ps
sub
repz
and
pop
jns
ljmp
or
out
sti
lret
lods
dec
jmp
cld
lret
sbb
push
clc
int
nop
addr16
or
inc
dec
lret
xchg
push
cmp
icebp
mov
add
mov
xchg
loop
mov
lea
jmp
fdivs
jmp
mov
ficomps
jge
pop
rol
sub
mov
sub
insb
jge
mov
outsb
pop
jb
push
scas
mov
fisttpll
inc
xchg
std
jae
fcomps
xchg
and
or
hlt
rol
pop
stos
sbb
fisubrs
repnz
shll
push
push
mov
test
into
les
and
fmuls
xchg
ret
fwait
mov
and
xor
or
add
jmp
push
std
shll
mov
in
dec
push
dec
xchg
call
out
push
and
mov
sti
mov
mov
cs
or
aam
pop
bound
mov
cli
fsubr
icebp
inc
jmp
mov
sahf
rorb
pop
fisubl
push
xor
push
pop
mov
aaa
cmp
or
xor
adc
xor
hlt
pop
xor
das
int3
adc
xchg
sbb
adc
popa
lds
fdivr
ljmp
mov
mov
mov
inc
cmp
and
jmp
repz
pop
popf
push
jno
bound
cmpsb
loopne
data16
xchg
in
ljmp
or
test
jmp
add
movl
adc
fwait
in
test
ror
jle
roll
add
add
decb
add
dec
add
add
add
mov
add
add
add
add
dec
add
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
add
add
add
add
