push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
add
adc
jp
repz
orl
ss
mov
fistps
gs
std
cld
or
pop
mov
loope
fimull
mov
sub
pop
clc
fisttps
pop
daa
and
leave
push
fimull
mov
cmp
add
or
insl
xor
cmc
je
lods
push
icebp
icebp
icebp
es
xchg
dec
push
in
add
push
push
lret
iret
orb
and
imul
xchg
imul
jno
mov
imul
add
mov
sub
arpl
sbb
decl
jle
fcoms
test
ds
leave
stc
or
cwtl
dec
stos
fdiv
push
cmp
icebp
pop
or
ror
addr16
push
rorl
call
rorb
aas
or
je
int3
cmp
scas
inc
adc
call
aad
sbb
cwtl
push
dec
in
fiaddl
inc
pop
loop
or
scas
jmp
add
add
mov
xchg
inc
out
leave
adc
icebp
js
rol
incl
cmpsb
add
push
cmp
cs
push
movsl
adc
sahf
scas
xor
popa
addr16
push
push
and
inc
jno
mov
sti
addr16
and
lea
cwtl
xchg
and
lock
not
ja
xchg
and
and
xor
jg
outsb
push
and
push
ljmp
jb
push
lds
inc
xor
das
adcb
in
je
filds
sbb
aam
sbb
mov
push
jl
xchg
jno
cli
and
fwait
or
cli
and
xor
or
mov
jl
push
inc
es
repnz
jo
sbb
jne
mov
xchg
std
cs
cli
sahf
fists
mov
test
das
cmp
std
in
bound
sbb
lods
jo
in
mov
sub
movsb
dec
out
adc
xchg
jns
and
mov
int3
fcmovu
sbb
repnz
inc
xchg
stc
cmpsl
mov
sub
mov
test
jp
lret
rorl
jecxz
addr16
pop
inc
test
xor
dec
movsl
shrb
ds
cwtl
adc
jmp
jl
lcall
je
scas
fisttps
and
repnz
add
addb
test
shll
stc
jo
add
jle
push
sahf
nop
cmp
sub
add
sti
sti
xor
jo
aas
or
cmp
dec
scas
mov
and
fildll
mov
pop
outsl
cmc
in
roll
aas
pop
mov
add
jge
mov
and
lea
cltd
push
adc
xor
add
repnz
gs
insl
or
fs
mov
add
add
adcb
ja
push
fidivl
cld
push
subl
xchg
mov
testl
cld
and
shl
xchg
cli
insb
bound
arpl
pop
hlt
adc
aam
lods
adc
call
cli
xor
aam
outsb
xorl
inc
or
test
mov
sub
fadd
fsts
aam
sbb
xchg
add
mov
lock
test
arpl
mov
and
fadds
add
add
push
push
out
ljmp
sub
inc
aad
sbb
in
push
push
fwait
xchg
xchg
frstor
jmp
cli
outsb
ficomps
mov
fsubl
adc
push
gs
cwtl
mov
mov
lret
pop
push
in
cmpsl
inc
popa
cmp
cwtl
push
push
mov
dec
in
sub
scas
inc
pop
sub
mov
mov
adc
loopne
aaa
cs
pop
pusha
imul
inc
je
and
sbb
sar
movsb
imul
cmp
push
push
iret
mov
pop
loopne
popf
or
ja
notb
repnz
and
out
stc
dec
mov
lahf
imul
adc
enter
scas
xchg
sahf
inc
push
sub
mov
pushf
and
es
lock
subb
ror
lret
pop
sbb
mov
fs
lahf
sub
frstor
flds
add
cltd
jle
test
cli
pop
ret
push
push
popa
adc
fucomp
sub
xchg
sahf
fldenv
in
add
out
mov
jle
std
fnstsw
fwait
test
mov
rcrl
sub
or
pop
xchg
lret
mov
rol
xchg
push
xor
push
cmp
nop
test
adc
mov
fidivrs
mov
cmp
sub
scas
outsl
jle
es
jbe
jecxz
lock
cmp
adc
adc
mov
imul
cwtl
ret
pop
add
call
cmpsl
test
mov
or
js
add
les
sub
out
adc
mov
enter
pop
push
dec
jbe
ljmp
add
repz
pusha
out
outsb
lock
and
pop
cmpsl
je
add
roll
add
pop
pop
pop
xchg
mov
in
jae
xchg
jo
fidivrl
push
scas
pop
adc
sbb
sbb
jo
insl
jbe
icebp
add
pop
xor
lret
cmpsl
xchg
push
add
lret
dec
bound
or
pop
sub
add
arpl
rcrl
hlt
mul
add
mov
cmpsl
out
xor
out
insl
leave
fiadds
outsb
fwait
pusha
xlat
mov
add
add
sbb
dec
push
lock
mov
divb
ret
test
outsb
jns
cltd
jae
sbb
push
divb
jo
cmp
psrad
mov
adc
divb
adc
cmp
or
adc
mov
test
lea
jo
xchg
pop
mov
pop
outsb
push
aad
jb
add
arpl
test
add
jmp
insl
ljmp
mov
adcl
dec
sbb
add
cmpsl
dec
adc
mov
int
icebp
shr
mul
bound
pop
lock
sbb
pmaxsw
or
add
sub
or
cmp
push
mov
ja
in
cmp
cs
and
test
sbbb
add
dec
lea
dec
mov
xchg
dec
mov
test
in
and
jnp
xlat
in
pop
movsb
dec
mov
jl
or
and
arpl
cmpsb
imul
mov
dec
dec
das
enter
cmp
xchg
or
add
movl
cld
dec
inc
mov
and
imul
gs
sti
or
movsl
lds
in
jbe
xchg
push
int3
out
or
movsb
addb
addl
sub
cmp
cmp
fstpl
cli
mov
jge
sub
inc
in
cld
mov
jl
or
and
xor
jge
movsl
mov
mov
and
sbb
cmc
test
jo
idiv
out
leave
jl
jl
and
sbb
jb
push
mov
jp
pop
mov
ror
push
pop
lock
sbb
add
mov
mov
fsubrl
js
mov
imul
add
sbb
push
sbb
idivl
outsl
data16
fs
inc
jmp
xchg
cmp
daa
mov
lods
dec
mov
mov
mov
add
dec
add
enter
push
mov
test
lahf
jbe
test
xor
mov
pop
adc
test
aam
cld
fwait
lods
add
sub
adc
xor
loope
push
pop
xchg
mov
pusha
dec
push
xchg
sbb
pop
mov
sbb
adc
jo
push
xchg
jg
ja
test
imul
aad
int3
or
mov
mov
dec
xchg
mov
jne
or
frstor
add
mov
bound
test
inc
push
std
mov
mov
push
adc
jbe
inc
inc
mov
js
jns
xchg
or
adc
jg
loope
mov
push
lahf
loope
mov
lcall
or
mov
loope
int
cmp
imul
loopne
pop
sub
pop
sub
mov
addr16
and
enter
fiaddl
push
and
mov
out
aam
scas
xor
cmc
dec
loop
push
inc
test
xor
adc
ljmp
push
test
adc
jno
and
mov
jne
and
xchg
popf
daa
dec
int
cmpsb
int3
fsubs
ljmp
jmp
das
jbe
and
out
jb
mov
jbe
add
movb
popf
shlb
mov
or
lods
cmp
repnz
ljmp
daa
mov
push
mov
dec
popf
xchg
push
ss
lret
jnp
repnz
xor
add
aaa
mov
jle
enter
cmpb
dec
xchg
mov
cmp
jge
ss
mov
insl
insl
ret
dec
sbb
add
jno
cmp
push
and
push
and
mov
xchg
mov
sbb
cmp
cmp
jbe
mov
je
pop
pop
ja
jle
enter
data16
stc
and
and
jle
sbb
aad
flds
add
gs
nop
shll
sub
lds
sbb
pop
pop
sbb
pop
lret
mov
push
mov
mov
sub
cld
xchg
inc
enter
push
shll
dec
insb
or
into
xrelease
and
mov
sbb
fs
in
incb
sbb
and
mov
add
add
inc
mov
aaa
cld
push
fcmovnb
xchg
dec
mov
xor
jae
mov
adc
mov
cltd
notl
mov
jne
xor
lcall
or
cs
negl
sub
xchg
mov
in
out
push
sbbb
std
mov
clc
ljmp
shrl
pop
rorl
mov
insl
popa
cmpsb
jnp
mov
js
mov
and
add
cld
movsb
test
sub
in
sti
sbb
in
sub
cmpsb
addr16
aam
iret
movsb
mov
dec
cmp
pusha
cmp
push
xchg
mov
rcl
cmp
outsl
push
push
jno
fsubrs
cmp
add
scas
mov
inc
sub
and
mov
lds
pop
dec
stos
sub
out
std
pop
push
lock
popa
imul
push
fildl
xchg
lret
repz
xor
cmp
stos
dec
xchg
or
rorl
mov
add
lcall
jge
aaa
inc
add
divb
sub
xlat
lock
push
aam
into
je
mov
subl
shl
addb
or
or
inc
sub
dec
jbe
ret
fidivrs
add
add
stc
loop
shrb
and
lock
movsl
in
imul
and
fwait
movsl
das
sbb
pop
jge
and
adc
mov
mov
enter
jns
fwait
inc
or
outsl
sti
ljmp
adc
sub
jecxz
add
mov
mov
js
rclb
inc
jp
and
pop
mov
add
or
dec
sbb
adc
mov
das
sbb
test
mov
sub
dec
dec
cmc
push
mov
lock
xchg
jno
pop
andl
push
push
pop
cmp
sub
cmpb
nop
in
mov
xchg
std
sbb
hlt
add
das
popa
push
fwait
push
inc
ds
jno
cmpsl
cmp
addr16
and
outsl
cmp
in
shrb
add
inc
adc
aam
sbb
outsl
insb
sub
fldl
aas
jmp
xchg
xor
or
cli
dec
jo
push
movsb
not
push
pop
dec
sbb
loopne
aas
test
jecxz
jle
pcmpgtb
lea
mov
sbb
cmpsl
jp
inc
popf
je
insb
test
jg
xchg
or
rorl
pop
adc
icebp
xor
xor
mov
xchg
sbb
jl
push
add
add
jmp
lea
sbb
cmpsb
je
add
jecxz
xchg
mov
sbb
mov
sbb
cwtl
outsl
cmp
repz
xor
xchg
xchg
cmpsb
sbb
push
inc
daa
cmp
adc
jecxz
inc
test
sub
jmp
sbb
lahf
pop
dec
pop
lcall
xor
adc
fwait
mov
adc
inc
push
cltd
inc
cwtl
pop
getsec
sub
in
xchg
dec
mov
jle
outsb
add
fldcw
mov
test
jmp
lea
xchg
scas
pop
ret
pop
xchg
add
sahf
insb
inc
iret
fs
mov
add
cmp
nop
lea
out
jl
mov
adc
movsb
mov
scas
in
sub
push
orl
push
and
xchg
lea
imul
mulb
cmc
sub
jle
dec
dec
dec
pop
fidivrl
pop
add
test
add
cmp
scas
lahf
push
mov
push
rcll
pop
sarl
lcall
daa
inc
xor
iret
or
mov
xchg
sahf
jl
lahf
adc
loopne
dec
bound
js
mov
jo
xchg
jl
jbe
mov
idivl
push
fldl
adc
int3
dec
cmp
icebp
loop
cli
or
adc
dec
xor
dec
scas
xor
aaa
fadds
mov
inc
jae
js
inc
sub
inc
dec
mov
cmpsl
xor
sbb
std
gs
fmuls
pop
pushf
popa
loop
addl
pop
mov
xchg
inc
aaa
push
scas
add
ret
mov
push
aad
sbb
cld
jge
in
dec
lods
pop
xchg
xchg
cmp
leave
lock
addr16
fmuls
je
cmp
jno
or
add
jb
and
movsb
sbb
dec
leave
cmpsl
daa
xor
mov
pop
mov
add
sbb
inc
mov
sbb
into
aam
pop
sbbl
cmp
jae
pop
cli
jmp
arpl
jns
mov
pop
lahf
xchg
std
scas
ja
call
jl
inc
mov
dec
mov
outsw
frstor
dec
mov
hlt
scas
mov
xorb
in
cmc
xchg
mov
insl
mov
mov
mov
std
test
push
add
add
arpl
mov
int3
out
insb
stos
mov
test
mov
fstpl
xchg
je
fsubrs
cmp
push
sub
lods
enter
dec
xchg
mov
divl
pop
mov
jecxz
or
mov
repnz
adc
int3
mov
rcrl
pusha
dec
cmp
scas
sbb
test
hlt
leave
and
add
pop
inc
or
sub
lret
popa
mov
and
fwait
pop
int
cmpl
push
fistpl
movsl
and
cmp
stc
jne
jp
or
xchg
out
sbb
mov
inc
mov
out
cltd
adc
dec
xor
mov
or
push
push
or
inc
jg
mov
jnp
jbe
imul
jmp
sahf
mov
add
add
xchg
sub
jns
adc
mov
mov
mov
fdivrs
push
loop
or
cld
out
mov
push
and
jmp
clc
inc
mov
and
out
mov
push
test
jae
aas
push
mov
and
cmp
scas
lods
push
out
divb
ret
into
or
mov
iret
bound
iret
decb
push
ljmp
add
adc
xchg
and
mov
xchg
jne
arpl
xor
cmp
xchg
mov
xchg
push
xchg
lret
mov
mov
adc
stos
fsqrt
pop
add
inc
rcr
or
mov
mov
je
sbb
push
lock
jge
cmp
or
pop
lret
xlat
mov
pop
dec
scas
and
xchg
xchg
mov
mov
push
adc
gs
xchg
inc
inc
mov
xchg
imul
add
or
mov
adc
xchg
mov
dec
leave
mov
mov
fidivs
jnp
js
or
push
fwait
call
stc
mov
and
mov
bound
loopne
or
lahf
and
out
ss
test
mov
lcall
inc
pop
leave
sbb
shrl
daa
cmc
rorb
insl
push
cmp
inc
lock
in
pop
int3
jo
fsts
add
add
fdiv
repz
test
mov
jmp
mov
scas
mov
jnp
inc
xchg
jmp
sbb
orl
cmp
mov
cmp
xchg
ljmp
stos
hlt
add
shlb
stos
out
fs
mov
mov
cltd
out
add
enter
rcrl
clc
add
loop
int3
aaa
fsubrl
jae
lret
mov
dec
rcrb
xchg
pop
xor
cltd
xchg
lret
xchg
fsubs
and
lret
pop
sub
xorl
adc
mov
xchg
jbe
push
sbb
sub
pop
lret
and
por
mov
std
jns
jae
sbb
shlb
adc
js
test
or
add
add
jp
cmpsb
in
in
mov
cmp
sbbb
jne
adc
and
mov
mov
test
mov
add
nop
dec
xchg
sub
mov
leave
mov
pop
jae
mov
ret
push
fwait
and
jb
scas
mov
int
inc
sbb
xlat
mov
xchg
mov
insl
ljmp
add
js
aaa
cmpsl
sub
pop
push
push
outsb
jmp
jae
pop
mov
push
mov
repz
cwtl
cmp
aas
cmpl
js
popf
fstpl
or
pop
xlat
xor
pop
lods
cltd
adc
test
mov
insl
dec
iret
dec
mov
ret
pop
xchg
push
imul
jge
lds
mov
jo
js
sbb
dec
xor
xor
add
fldl
mov
stos
and
xchg
out
adc
mov
push
xchg
enter
repnz
lods
pusha
sbb
std
push
inc
adc
insb
inc
ret
mov
push
loope
jb
or
shr
lods
jmp
pop
movsb
test
stos
xlat
pop
shlb
pop
ficoms
mov
shrl
inc
int3
movsl
jmp
lods
mov
ss
add
inc
sbb
jae
bound
rolb
imul
pop
xchg
aaa
inc
scas
int3
jbe
jb
fs
jl
rolb
pop
xchg
push
or
cmp
xchg
addr16
push
fwait
imul
jo
add
mov
jmp
loope
jb
mov
pushf
add
dec
mov
jne
shrl
data16
inc
adc
lods
mov
add
sub
fwait
jno
dec
in
and
push
movd
xchg
in
insl
insl
icebp
std
aad
dec
popf
mov
fsubr
sub
mov
imul
sbb
lcallw
sbb
mov
mov
aas
jns
xor
insl
push
sahf
fistps
add
loopne
push
inc
xchg
in
xor
sahf
mov
add
push
cld
pop
ss
daa
and
dec
addr16
ret
add
adc
je
xchg
adc
pop
dec
arpl
fmulp
dec
mov
mov
push
mov
cmpl
movsb
cmpsb
jae
xchg
outsb
push
and
arpl
shll
add
inc
pop
jle
and
dec
ja
ja
sarb
popf
shlb
pop
sbb
mov
sbb
aam
in
jmp
daa
mov
add
jge
mov
or
sbb
je
std
inc
pmaxub
pop
add
movsb
pop
out
sti
xchg
out
and
or
pushf
psrlw
sub
pusha
push
and
mov
sbb
leave
mov
adc
cld
xor
dec
test
mov
xor
xchg
cli
cmp
fildl
pop
aam
dec
add
mov
xchg
jo
pop
sbb
add
mov
xchg
popa
add
mov
sub
mov
popf
testl
inc
and
or
cmp
lret
xchg
loop
aad
pop
pop
cmp
cwtl
test
scas
add
je
xor
jns
daa
subl
jnp
push
test
popa
xor
push
push
sub
mov
test
out
xchg
mov
sub
pop
xchg
dec
mov
mov
adc
and
xchg
ret
movsb
imul
jle
and
test
xchg
inc
cs
adc
cmpsl
sahf
loop
daa
daa
sbb
xchg
dec
cmc
sbb
mov
and
bound
lock
pop
adc
lods
ret
rcr
cld
cmpsl
dec
shrb
lcall
into
dec
jae
repnz
xchg
and
addl
and
adc
in
shll
int3
mov
sub
xor
xlat
aas
mov
aam
je
add
mov
jbe
xchg
cwtl
imul
jge
lods
cli
jno
cmp
add
xchg
pop
cli
aas
in
sub
pop
inc
nop
pusha
and
ss
inc
lds
fucomip
stos
lock
lods
inc
mov
xchg
dec
shl
xchg
push
es
sbb
xor
stos
pop
rcll
outsl
movsl
int3
sbbb
lret
mov
sub
dec
cld
mov
popa
or
add
mov
xor
mov
pop
scas
lret
call
jge
je
ss
stc
add
jp
in
sbb
inc
int3
pop
mov
lods
sbb
fstps
or
mov
inc
std
inc
mov
mov
out
adc
iret
sub
mov
push
xor
pop
add
sbb
jae
sub
aad
fisttpll
inc
adc
arpl
xchg
inc
popf
popf
fiadds
out
pop
add
sti
cmp
cwtl
sub
push
inc
xchg
cmp
loopne
fistl
lds
dec
adc
mov
push
aad
mov
pushf
insb
roll
aas
jle
aas
add
fmuls
sarb
cmpsl
movsl
aas
lods
leave
pop
add
xchg
and
cmpsl
pop
aaa
xchg
in
cmp
mov
dec
jg
adc
xchg
mov
out
lret
ds
add
add
mov
sub
mov
gs
sbb
repnz
mov
xor
mov
cwtl
mov
hlt
mov
arpl
subl
mov
popl
pop
bound
push
andb
rorb
lahf
pop
jne
mov
test
stc
call
iret
daa
mov
frstor
cmp
inc
scas
pop
mov
add
pop
out
repz
hlt
push
jae
iretw
mov
add
sub
push
pop
inc
test
push
lahf
imul
pop
test
cld
lock
loop
pop
into
mov
cltd
ret
sbb
scas
adc
xchg
int3
mov
jmp
popa
mov
ljmp
cwtl
cmp
push
sbb
in
jne
push
push
xchg
outsb
dec
push
mov
cmp
dec
ret
insb
pop
js
fsubrl
push
pop
and
add
jo
ds
in
sub
sbb
cmp
xchg
mov
ja
pop
test
dec
mov
jb
fs
add
cltd
lcall
sub
inc
push
clc
push
dec
inc
gs
loopne
mov
shlb
cltd
rcll
mov
sbb
adc
insl
push
aad
dec
enter
cld
in
cwtl
cmc
stos
idivl
pop
aas
jno
stc
loope
outsl
inc
adc
out
mov
push
xor
mov
xchg
add
add
mov
push
push
sbb
xchg
mov
movsb
mov
add
sub
jno
mov
cmp
xlat
ss
das
jp
jg
jl
fcmovnb
les
test
out
jae
and
dec
pop
or
shl
xchg
fcmovnu
pop
sbb
popl
icebp
push
xchg
aas
xor
shll
jae
lret
xchg
imull
lods
lock
call
add
paddusb
pop
xchg
adc
leave
clc
fildll
addl
mov
fisttpll
cmp
add
rolb
imul
cmp
std
enter
das
xor
in
leave
mov
xor
out
push
inc
rcr
fdivl
xor
push
in
jbe
dec
shll
fsub
aad
mov
mov
aam
dec
xchg
xor
add
push
or
out
fwait
push
repz
jbe
sub
push
or
scas
sarb
jb
jge
push
jp
sbb
sub
pop
scas
das
mov
fidivrl
or
iret
sub
dec
daa
std
daa
nop
scas
xchg
aam
iret
jg
leave
xchg
clc
outsb
push
cmp
sub
cmp
stos
xchg
roll
out
inc
fdecstp
add
lahf
push
in
lahf
stos
add
mov
and
loopne
pop
test
jge,pt
fcompl
insb
xor
dec
xchg
adc
popf
in
dec
rol
cmp
mov
xchg
fcmovnb
sti
cmp
mov
hlt
pop
fnstsw
fbld
mov
xchg
dec
push
sub
in
sub
xchg
push
cs
dec
loopne
bound
sbb
xchg
mov
movsl
adc
push
mov
or
add
add
ss
mov
fwait
test
mov
pop
stos
xchg
sbb
cmpsb
iret
or
loop
push
pushf
cmp
or
adc
test
mov
arpl
push
out
sub
pxor
pop
mov
out
xchg
stos
bound
mov
and
ret
fucomi
and
and
inc
cmpsb
movaps
sbb
add
sbb
sbb
xchg
pop
imul
add
jno
in
movsb
dec
push
fiaddl
ret
cwtl
xor
sub
pushf
xorl
pop
xchg
dec
cmp
in
jnp
adc
outsl
mov
mov
mov
aaa
hlt
aas
dec
insb
bound
mov
dec
fmull
sub
push
pop
loope
sbb
es
in
scas
mov
xchg
call
dec
es
xor
cmp
xor
pop
aad
pusha
in
add
jl
xchg
mov
call
sub
push
pop
sub
shrb
leave
mov
gs
jle
or
jno
inc
push
fidivrs
roll
aas
jbe
out
inc
inc
scas
in
dec
std
xchg
shrl
fldcw
and
jecxz
push
mov
push
adc
orl
xor
insb
xor
xchg
aaa
aaa
test
mov
push
dec
jl
mov
lods
mov
or
cltd
les
ljmp
sbb
push
les
idivl
pushf
inc
lahf
pop
je
shlb
cs
movsb
lcall
decb
les
inc
iret
inc
jge
mov
fldcw
xor
data16
sti
stos
mov
pop
js
lods
rcrb
call
scas
jns
movsb
cmc
add
in
dec
int3
popf
ja
daa
sub
cmpsl
in
mov
and
bound
psubsw
add
add
jbe
shrb
ljmp
pop
pop
dec
sbb
ret
or
and
add
in
mov
cmp
xchg
push
repnz
and
dec
pop
xor
leave
xor
in
pop
and
sbb
outsl
and
mov
dec
sub
stos
cmp
mov
and
sar
adc
dec
jge
pop
mov
and
mov
jno
sub
fildl
lahf
or
fmuls
aas
pop
push
enter
fistpll
sbb
cld
jo
int3
xor
stos
pop
add
fcmovne
in
jnp
aam
jbe
fnsave
mov
inc
dec
add
subb
stos
or
or
fwait
lahf
cltd
sub
je
dec
cmp
jne
stos
cmp
sub
mov
mov
hlt
insl
mov
setbe
pop
xchg
cmp
aad
push
pop
loop
and
loop
mov
xor
pushf
adc
add
xor
bnd
dec
rorb
add
lret
loopne
in
test
xchg
xchg
shrb
adc
inc
jmp
jle
or
push
stos
fbstp
jne
or
push
mov
mov
outsb
das
or
sub
pop
loope
adc
movsl
pop
ds
stos
in
inc
and
out
vminps
jne
push
adc
fwait
incb
leave
inc
movsl
je
or
dec
sahf
mov
arpl
dec
pop
stos
int
repz
jg
stc
stos
adc
ficompl
insb
push
and
ds
pop
test
test
jl
rcr
pop
cld
cmp
ja
pop
fs
lods
loop
bound
dec
scas
fwait
xchg
popf
add
pop
xor
mov
das
xchg
mov
aad
js
test
testb
in
mov
test
xchg
mov
test
fadds
add
ljmp
sbb
hlt
shlb
push
fidivs
jge
xchg
stos
in
int
pop
inc
mov
xlat
ficoms
rcll
repnz
dec
outsw
or
adc
scas
mov
data16
loope
sub
sub
xor
dec
aaa
add
enter
dec
jnp
sub
inc
repz
lret
icebp
scas
mov
and
mov
xchg
add
lahf
jecxz
jle
das
jmp
inc
mov
push
jbe
aaa
bound
out
rcl
mov
stc
xor
fiaddl
inc
cmp
jb
fs
sub
push
jmp
