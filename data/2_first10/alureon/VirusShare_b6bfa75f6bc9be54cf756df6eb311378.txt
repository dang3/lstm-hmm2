add
jno
cmc
add
fs
ror
inc
sbb
mov
es
lret
in
shll
or
jg
test
popf
xchg
xchg
xor
arpl
and
mov
out
mov
icebp
adc
lcall
inc
insb
lods
dec
fwait
dec
push
xor
pusha
scas
movsl
shrl
sar
test
mov
and
push
rcl
out
xchg
ret
dec
out
xor
fisttps
fbstp
in
sbb
push
ret
shrb
xlat
pop
fcoms
jecxz
pop
or
and
inc
shlb
push
add
sub
pop
add
andb
sbb
mov
ljmp
clc
fidivs
mov
cmp
popa
das
mov
test
sahf
ret
pop
lds
cltd
and
mov
mov
push
test
cmp
dec
enter
inc
cmp
pop
xor
gs
mov
int3
cmp
stos
aas
xor
xchg
push
lahf
test
mov
lods
aas
mov
jnp
aam
mov
mov
ljmp
fwait
xor
mov
sbb
jbe
inc
in
inc
adc
or
and
push
jle
lods
push
lods
ja
push
mov
mov
inc
shll
movsl
push
mov
mov
dec
cmp
cmpl
cmp
in
add
pop
jge
sub
pop
or
pop
mov
out
sbb
push
mov
xchg
jo
pop
aas
and
mov
inc
mov
int3
xchg
sbbb
jp
mov
repz
pop
and
inc
scas
pop
scas
inc
cs
daa
in
outsb
mov
dec
cmp
int3
jmp
loopne
fildl
pop
cmp
xor
aaa
test
mov
jbe
aam
or
into
sub
or
push
or
and
insl
mov
rcrb
cmp
out
mov
stc
and
bound
sbb
mov
outsl
sub
aas
loop
xchg
or
sbb
fisttpll
sub
dec
xor
push
mov
lret
inc
push
mov
ret
outsb
sub
add
inc
mov
fs
xor
pop
insl
cld
mov
lods
fnsave
arpl
in
or
fiaddl
lods
mov
movsl
push
arpl
jae
mov
push
sbb
jge
xor
enter
imul
xchg
xchg
test
push
dec
adc
leavew
ret
mov
mov
in
inc
das
sub
stc
or
std
call
xor
push
cli
stos
hlt
mov
sarl
gs
mov
push
cmp
into
or
into
cmp
xchg
out
mov
sbb
in
xor
cmp
dec
outsb
fiadds
adc
cld
xor
orl
xchg
ficoms
mov
scas
push
xchg
pop
cmp
in
xor
mov
out
adc
jns
inc
xchg
mov
inc
mov
push
popa
mov
outsb
pop
scas
lret
jo
adc
add
mov
int
js
push
and
out
ljmp
xchg
inc
shl
cld
push
aam
xlat
fld
lret
sbb
push
ja
pop
xlat
xor
jnp
loop
mov
int
leave
jne
add
mov
xchg
sbb
mov
gs
iret
in
jl
push
cld
rcrb
orb
pushf
sbb
das
mov
dec
jecxz
loope
mov
in
pusha
insb
mov
pop
jae
xor
scas
stos
push
cmp
adc
add
std
mull
mov
and
cmp
decb
inc
xchg
xchg
inc
cmc
dec
jecxz
mov
dec
xchg
sub
loopne
movsb
test
cltd
ds
nop
jo
and
ja
mov
ds
lcall
or
lods
lahf
jb
sub
lret
push
in
nop
das
jns
xchg
sub
jns
add
iret
cmp
dec
pop
sbb
in
push
mov
push
sub
stos
aaa
xor
push
mov
stos
xor
jae
or
imul
xor
sbb
push
popa
sbb
inc
enter
shll
sbb
test
xchg
iret
jl
sbbb
test
loopne
call
cli
stos
jmp
jp
std
imul
push
mov
cmpsl
jl
enter
rcrb
test
mov
or
jmp
and
xorl
and
pop
xor
frstor
push
cmc
push
xchg
aaa
and
fdivs
arpl
sub
and
cmp
jmp
outsb
inc
clc
add
dec
inc
ljmp
cli
fimull
or
lea
pop
icebp
outsb
iret
or
mov
push
xor
loopne
adc
stos
inc
xor
mov
loopne
push
enter
cltd
xor
add
scas
ja
and
add
cmp
push
inc
xchg
rcll
sti
or
scas
cmp
adc
std
mov
scas
clc
sbb
mov
lods
repz
fisttpl
push
adc
inc
and
cld
mov
iret
rol
push
adc
pop
into
imul
negb
pusha
mov
insl
inc
ss
dec
sti
lret
es
adc
iret
jnp
add
repnz
out
imul
sub
fwait
enter
es
mov
or
mov
stos
inc
adc
aam
xor
dec
roll
jns
jmp
pop
lret
sub
ja
push
jns
aam
adc
fs
mov
jno
push
imul
int
int3
add
jno
jo
cltd
mov
add
ret
lcall
data16
insb
inc
stos
jmp
mov
add
inc
movsb
mov
dec
sub
sbb
mov
cmp
sbb
icebp
jbe
arpl
jbe
inc
add
push
mov
xlat
jb
test
push
xor
xor
and
cwtl
rcrb
push
std
rcll
addl
popl
es
add
mov
mov
adc
and
push
call
sub
ficomps
sbb
in
repnz
dec
adc
sub
call
out
push
icebp
lods
xor
loop
ret
imul
divb
imul
sbb
pushf
lcall
mov
mov
jbe
xchg
imul
add
ffree
mov
sub
cmpb
xchg
ja
jae
jmp
fwait
jns
insl
adc
loope
hlt
stos
mov
cwtl
mov
lea
loopne,pt
shrb
fs
mov
and
mov
jno
xchg
fwait
mov
rol
jnp
or
fstpt
inc
out
scas
cwtl
add
mov
lcall
nop
add
lcall
mov
roll
xor
mov
and
xor
mov
push
lds
push
movsb
cltd
cmp
and
push
mov
sbb
add
jno
iret
push
dec
inc
xor
cmp
imul
adcl
pop
jo
addr16
push
je
lds
insb
mov
or
lock
sti
lods
xor
lods
std
mov
jle
mov
pop
out
imul
dec
jo
pop
mov
mov
sub
es
or
or
int3
stos
xor
lret
lods
dec
in
xchg
sub
add
push
rorb
and
jo
mov
cmp
mov
mov
fadds
pop
fs
mov
sub
in
shl
into
push
mov
fdivrs
sbb
loope
xchg
push
int
pop
iret
jnp
or
roll
jo
fucomi
leave
fwait
movsl
test
push
and
sub
push
lock
je
and
mov
in
pop
clc
push
adc
je
dec
and
lahf
push
adc
add
cwtl
fadds
push
dec
lods
adc
inc
mov
in
mov
mov
sub
mov
pop
ds
loopne
int
xor
adc
inc
pusha
fmulp
in
sarb
jbe
add
or
lock
cmp
cmp
inc
sub
xchg
loopne
pusha
movsb
mov
call
rolb
lock
repnz
fstps
andb
inc
mov
lods
sub
ret
cmp
shl
orl
insl
sbb
nop
inc
nop
int3
jge
aam
jge
movsl
nop
ret
icebp
inc
cmpb
ss
cs
inc
add
mov
sbb
lcall
mov
mov
gs
mov
pop
std
cwtl
mov
das
and
movsl
addr16
adc
fadds
into
adc
loopne
xor
xchg
icebp
test
bound
adc
loopne
popa
mov
push
mov
imul
dec
call
inc
mov
call
inc
push
add
call
lea
inc
mov
mov
call
movzbl
lea
xor
and
xor
xor
dec
add
dec
inc
lea
inc
inc
call
movzbl
add
sub
mov
call
dec
inc
call
imul
mov
lea
and
inc
dec
mov
dec
sub
pop
inc
imul
lea
add
sub
pop
lea
add
pop
add
mov
lea
xor
pop
dec
dec
mov
mov
add
mov
and
add
pop
mov
inc
pop
imul
mov
mov
dec
sub
call
add
mov
and
mov
ret
inc
dec
push
movswl
dec
push
movsbl
xor
push
mov
mov
push
sub
mov
push
add
sub
mov
or
dec
push
movsbl
ret
push
dec
dec
imul
dec
dec
inc
inc
push
dec
lea
mov
call
pop
ret
jmp
dec
and
inc
sub
movzbl
xor
movsbl
xchg
sub
add
add
lea
xor
and
add
sub
dec
inc
inc
sub
dec
jne
sub
mov
mov
add
pop
dec
mov
pop
mov
mov
pop
mov
mov
mov
sub
movsbl
inc
inc
mov
mov
mov
dec
add
ret
push
push
inc
dec
push
dec
movzbl
imul
dec
dec
dec
push
imul
add
lea
imul
push
mov
dec
imul
movzbl
add
imul
imul
push
inc
mov
sub
push
dec
or
xor
sub
inc
push
lea
dec
push
mov
lea
pushl
mov
call
inc
add
inc
mov
dec
mov
imul
lea
inc
pop
ret
inc
cmp
jb
lea
xor
inc
mov
mov
inc
lea
mov
xor
inc
lea
dec
dec
imul
mov
lea
mov
cmp
jb
sub
pop
add
movzbl
movzbl
lea
mov
dec
inc
lea
add
mov
sub
movzbl
add
xor
sub
inc
xor
add
imul
mov
mov
xor
test
jbe
lea
add
inc
xor
add
inc
and
inc
dec
mov
dec
inc
and
xor
inc
mov
mov
sub
movzbl
inc
inc
add
dec
inc
and
sub
lea
mov
inc
mov
xor
mov
mov
mov
inc
mov
dec
add
inc
mov
mov
dec
jne
and
mov
imul
mov
imul
sub
or
inc
dec
inc
mov
movswl
mov
mov
mov
inc
movzbl
imul
or
mov
or
mov
test
jbe
dec
mov
or
imul
imul
lea
xor
mov
add
mov
add
and
lea
xor
or
inc
or
dec
sub
xor
lea
dec
and
mov
mov
mov
lea
inc
movzbl
dec
inc
add
mov
sub
and
mov
lea
mov
xor
imul
movzbl
mov
mov
mov
movzwl
xor
mov
mov
and
movzbl
dec
add
add
lea
jmp
push
dec
mov
mov
lea
lea
mov
add
add
inc
lea
inc
imul
lea
mov
add
inc
mov
add
xor
inc
or
lea
mov
add
movzbl
mov
add
sub
dec
mov
movzbl
and
add
add
sub
add
sub
lea
inc
cmp
je
lea
mov
mov
push
add
call
call
mov
lea
call
call
movzbl
dec
lea
mov
add
movsbl
inc
ret
inc
mov
pop
add
ret
push
mov
mov
lea
lea
mov
push
dec
inc
push
xor
push
mov
push
imul
add
mov
inc
or
call
dec
push
dec
add
xor
xor
sub
mov
neg
xor
sub
inc
sub
add
sub
mov
mov
add
mov
sub
add
inc
movsbl
mov
dec
je
imul
lea
mov
mov
mov
and
mov
inc
add
sub
or
repnz
lea
add
add
dec
jmp
imul
add
add
add
dec
dec
imul
inc
jmp
sub
lea
mov
inc
mov
add
inc
mov
pop
pop
ret
push
inc
xor
dec
inc
lea
xor
add
inc
add
and
inc
and
lea
sub
movzbl
mov
dec
mov
and
mov
movzbl
dec
mov
lea
dec
and
dec
pop
ret
sub
mov
mov
mov
add
mov
inc
add
mov
mov
add
mov
dec
inc
xor
dec
movzbl
mov
xor
lea
inc
lea
mov
sub
sub
inc
inc
cmp
jb
mov
push
lea
add
push
xor
mov
push
or
dec
xor
movsbl
movzwl
xor
mov
xor
xor
mov
lea
push
inc
dec
mov
dec
xor
mov
inc
mov
mov
mov
movsbl
movzbl
movzbl
lea
add
inc
add
add
dec
mov
movzbl
dec
add
sub
dec
and
add
inc
and
mov
sub
mov
dec
dec
imul
jmp
pop
mov
pop
dec
mov
adc
pop
sbb
test
mov
into
or
iret
hlt
mov
je,pn
cmp
jle
xor
lahf
mov
jmp
or
dec
xor
mov
notl
add
outsl
nop
hlt
insl
cli
push
inc
pop
movsb
cmc
fwait
iret
pop
lahf
xchg
xchg
add
adc
cmp
neg
mov
outsl
push
fdivl
mov
unpckhps
and
loop
negl
sti
fdivp
mov
lret
pusha
mov
xchg
repz
test
int3
stos
mull
jno
ljmp
testb
jnp
jae
xchg
std
dec
push
out
nop
sub
jl
xchg
clc
ljmp
out
push
shrl
dec
into
pop
pop
sbb
push
adcl
mov
mov
push
sbb
leave
or
insl
adc
sub
inc
jp
jle
dec
dec
sbb
cmp
mov
and
shl
adc
rclb
add
jge
ljmp
xor
xor
xchg
inc
out
mov
jg
push
dec
and
lret
mov
xchg
cmp
mov
sub
mov
repnz
mov
lahf
repz
xorl
in
xchg
inc
dec
cli
and
les
ja
shrb
push
cmp
mov
mov
lcall
insb
sbb
or
inc
jmp
sbb
sbb
ja
mov
add
adc
push
subb
jmp
sub
int3
sbb
cmp
rolb
or
cmp
aas
stc
loope
insl
cmp
sub
icebp
push
insl
std
sahf
test
pop
fcmovnbe
in
fs
aam
dec
sahf
adc
outsl
mov
and
sbb
xor
adc
imul
cmpl
fstp
add
jmp
jne
fisttps
push
movsb
and
adc
mov
clc
je
test
dec
jno
sbb
mov
xchg
orl
inc
jnp
pop
rol
inc
lahf
lea
aam
mov
in
and
or
js
out
inc
push
adc
pop
clc
fmull
arpl
inc
xor
mov
jno
ds
inc
mov
inc
xor
xchg
lcall
test
adc
inc
mov
inc
xor
mov
or
jl
sbb
pop
or
and
mov
push
pop
test
add
aam
pushf
sbb
dec
mov
lea
pusha
inc
and
out
out
imulb
movsb
fistl
and
jae
mov
mov
pusha
pop
pop
lea
scas
cmpsl
loope
jbe
int3
icebp
out
cli
and
int
repnz
push
aam
iret
ret
jp
sub
out
push
js
sbb
or
in
mov
icebp
fucomp
jno
push
dec
pop
and
pop
push
xchg
inc
xchg
roll
mov
int3
sbb
fldl
jne
mov
lods
jge
ss
imul
stc
insl
jmp
imul
mov
fadds
mov
hlt
sti
cmpsl
shll
shl
cmp
cmp
lret
add
pop
mov
pop
cmp
jl,pt
sbb
or
in
or
mov
stos
mov
repnz
jmp
fnstenv
mov
jno
cmc
dec
mov
push
and
push
roll
das
add
pushf
shll
fildll
sbb
push
jae
flds
ret
pop
mov
ljmp
in
jnp
xor
or
pop
push
inc
adc
popa
pop
lret
ja
mov
push
adc
xchg
fwait
and
in
jns
stos
cmc
sub
dec
cltd
jmp
jge
popf
popa
repnz
inc
aaa
sarl
aaa
sbb
loop
push
icebp
adc
dec
leave
hlt
mull
mov
insb
add
mov
lret
or
pusha
push
jmp
push
popa
cmp
mov
pop
push
xor
mov
movsb
xor
mov
fbstp
icebp
fbld
out
ds
dec
mov
adc
adc
sti
pop
mov
in
xor
fstps
pop
ja
enter
mov
fimull
loopne
xorb
fildl
pop
or
sbb
pop
mov
jle
pop
ret
aas
cmp
inc
daa
testl
jmp
cmp
shll
xchg
mov
cltd
sarl
add
adc
mov
push
pop
sbb
xchg
sbb
popa
sub
jo
test
pop
imul
push
loop
mov
cli
imul
add
es
push
loope
dec
lret
ljmp
adc
or
sub
push
gs
adc
js
jbe
stos
popa
mov
mov
jge
push
cmp
gs
jg
andl
lea
in
mov
mov
xchg
mov
insb
imul
xchg
lock
mov
nop
add
jecxz
push
mov
add
jae
in
mov
imul
pop
imull
push
into
loopne
dec
xchg
sub
ror
shl
sub
jl
mov
rcll
cmc
mov
les
push
sbb
stos
inc
mov
or
and
mov
mull
xor
ret
lods
pop
cld
push
or
aam
aad
or
xchg
bound
jle,pn
pushf
mov
and
in
repz
je
scas
das
roll
imul
sbb
and
es
jmp
mov
xor
xchg
hlt
mov
sub
push
mov
or
enter
mov
push
scas
push
aaa
mov
adc
jmp
dec
jns
xor
outsl
insl
into
xor
jae
popf
ds
adc
xchg
cmp
jae
test
pop
fdivs
sbb
mov
add
insl
push
add
mov
flds
jmp
dec
test
jl
or
out
fidivrs
es
add
xor
lret
pop
mov
out
sbb
jb
out
scas
pop
ss
add
mov
stc
aas
loop
add
inc
mov
stos
fwait
jb
jge
xor
jmp
retw
or
inc
iret
jmp
xor
sti
sar
lcall
dec
adc
dec
in
sbb
bound
ljmp
jbe
pextrw
pop
or
int3
bound
add
aam
pop
in
and
loop
ret
imul
mov
les
adc
xchg
inc
mov
adcb
movsl
cld
mov
pop
push
rolb
mov
imul
sub
jae
lcall
xchg
lret
std
les
mov
inc
dec
test
xchg
sub
fmull
dec
outsl
and
mov
cmc
movsl
dec
movsl
lods
pop
cmp
jl
mov
and
mov
xchg
or
jl
loope
pop
and
xor
cld
adc
cmp
mov
shrb
insb
or
rclb
inc
or
ljmp
push
mov
or
sbb
es
sbbb
sub
test
loop
lret
sbb
sbb
lds
sahf
fimuls
sbbl
add
mov
or
fwait
notb
movsb
and
jo
mov
mov
aam
sbb
pusha
and
mull
lock
jmp
sbb
adc
mov
ret
cmpsl
aam
in
das
mov
and
out
in
xchg
mov
xor
jmp
cmp
adc
fildl
add
mov
or
pop
dec
sub
pop
pop
insl
adc
shr
cmc
xchg
push
fisttpl
dec
and
xchg
inc
xor
int
out
ror
dec
jno
outsb
repz
data16
mov
and
je
add
push
jbe
outsb
imul
fsin
jp
lea
ds
sbb
adc
andl
or
jp
push
cmp
jmp
fcmovb
inc
add
xlat
dec
sub
mov
ss
out
enter
xchg
mov
cmp
push
js
fldt
sbb
mov
pusha
int3
fisubl
mov
not
sbb
add
lock
ja
cmp
mov
mov
int3
mov
addl
pop
repz
bswap
xchg
es
in
xchg
insl
gs
nop
loope
aam
imul
xorb
push
push
lret
push
add
xchg
dec
push
adc
xchg
cli
xor
push
and
pop
xor
mov
sbb
popa
adc
cmp
adc
push
mov
in
movsb
mov
and
add
push
lods
pop
leave
push
repnz
nop
leave
mov
mov
call
dec
cltd
fwait
jp
cltd
loope
jno
cmp
mov
or
dec
jb
pop
pusha
push
push
mov
mov
lea
inc
icebp
and
out
lret
js
pop
adc
fildl
jecxz
inc
mov
fldt
addr16
inc
lcall
lahf
repz
loop
in
cmp
xchg
mov
mov
scas
stos
xchg
cltd
imul
stos
fildll
mov
mov
repnz
jmp
mov
push
gs
das
adc
sbb
and
stc
lock
mov
shrl
test
mov
xor
and
cmp
jo
enter
test
fisubs
insl
jns
fwait
in
pop
pop
jmp
xchg
push
divb
or
xor
xchg
mov
jl
out
test
aaa
test
sub
fsubrs
cmp
addr16
popf
xchg
xchg
push
cmp
stos
dec
insl
inc
nop
div
lods
sarl
add
push
loope
imul
out
fxch
sub
pop
jb
push
or
mov
and
dec
lret
dec
repnz
movb
fisubrs
popa
xor
lahf
cltd
or
clc
cmc
rcrl
mov
dec
mov
xchg
pusha
xchg
in
xchg
add
push
xlat
xchg
jne
sar
outsl
xchg
inc
insl
inc
dec
pop
stc
icebp
push
test
lds
mov
loop
data16
sub
call
mul
faddl
pushf
cli
cmpsb
fwait
mov
filds
mov
push
dec
cwtl
fnstenv
or
testl
int3
out
call
xlat
push
mov
push
push
add
mov
ja
out
mov
fsubrs
fwait
mov
fistpll
and
leave
test
mov
loop
xchg
clc
dec
push
xor
push
mov
jno
or
lret
sbb
bound
jle
in
lds
dec
pop
inc
pop
mov
inc
addb
call
add
jb
mov
out
filds
ret
jecxz
add
xor
mov
test
mov
enter
mov
cmp
aad
cmp
xor
mov
daa
repnz
inc
adc
mov
out
pop
mov
pop
mov
xor
popf
sbb
sbb
mov
mov
jno
xor
dec
bound
pop
and
mov
out
adc
lcall
mov
jl
or
shrl
push
dec
lea
popf
insl
cmpsb
inc
das
std
push
and
orb
pop
fwait
sbb
adc
jne
dec
push
pop
pop
jp
aam
fcoml
pop
or
adc
cmp
sub
lcall
adc
enter
enter
imul
popa
lcall
pop
scas
mov
cmp
push
lret
orb
loopne
movsb
mov
xchg
adc
lahf
jns
stos
aas
mov
ret
xchg
push
push
nop
lret
dec
cltd
dec
push
pop
int
mov
pop
sbbl
sbb
out
aaa
hlt
ljmp
cmp
in
hlt
dec
inc
out
lods
xlat
mov
lea
pop
push
adc
loop
cmp
int3
add
aad
jp
adc
scas
inc
divl
jle
and
mov
xor
push
push
add
push
fcoml
ret
cli
push
lea
or
aaa
xchg
out
mov
sti
lret
xchg
lret
jbe
mov
inc
or
jmp
push
adc
lds
adc
fcoms
repz
repnz
push
cli
out
xchg
scas
mov
iret
mov
inc
jp
mov
dec
add
or
push
rcr
jbe
cmp
lock
lcall
mov
jb
adc
je
out
mov
xor
and
pop
adc
test
scas
int
into
mov
int
xchg
inc
jge
mov
daa
rcr
pop
jns
fistl
cmp
je
xorb
pop
jmp
scas
repz
push
inc
lea
xchg
xor
push
xor
repnz
pop
dec
in
inc
mov
clc
jecxz
es
insl
into
cmpsl
and
inc
push
outsl
pop
insb
or
sub
dec
incb
inc
or
adc
ljmp
das
loope
dec
push
mov
cmp
stos
iret
mov
sub
dec
push
sub
sbb
push
shr
xchg
in
mov
push
mov
sahf
cmpsb
mov
push
das
sti
rcll
push
add
test
mov
mov
fisubs
mov
pop
cmc
sub
lret
ret
jge
or
inc
pop
mov
clc
imul
dec
inc
cmpsb
fld
comiss
push
sub
inc
mov
dec
push
dec
pop
or
repnz
and
cmp
in
xor
lret
xor
daa
int3
gs
lods
jns
leave
xchg
shrl
js
outsl
inc
sbb
scas
xor
mov
sub
loope
cmp
in
hlt
into
push
mov
lods
add
call
mov
pop
dec
std
xchg
push
imul
jle
ss
xchg
out
loope
mov
and
sbb
sub
jbe
sub
dec
mov
xor
hlt
sahf
add
push
xchg
jae
mov
aas
and
push
arpl
xchg
pushf
xlat
xchg
sbb
mov
hlt
pop
fwait
mov
push
push
ss
mov
mov
mov
popf
cld
pop
mov
fidivrs
fcmovb
and
push
popf
adc
add
adc
les
lar
lcall
dec
test
dec
jle
add
xor
xor
xor
fdiv
fiadds
pop
outsl
jnp
shlb
ljmp
xchg
pusha
jmp
test
loope
jmp
cmp
and
test
sbb
mov
call
inc
jo
xchg
or
jp
movb
mov
or
call
mov
int3
cmpsb
shrl
jo
dec
les
ret
push
mov
lret
scas
in
xchg
xlat
xchg
xor
jmp
push
sbb
ret
xchg
scas
mov
jp
cwtl
test
scas
jo
inc
or
lock
sbb
push
xchg
andb
and
bound
pop
mov
mov
xchg
mov
daa
imul
mov
xchg
and
cmpsb
dec
cli
lahf
xchg
lcall
dec
xchg
movsb
xchg
jno
jo
icebp
xor
push
sbb
dec
mov
pop
xchg
adc
adc
ret
cmp
cmp
lahf
adc
mov
mov
add
jle
and
xchg
mov
adcl
ja
sbb
cmp
xor
sub
or
adc
dec
jecxz
xorl
cmc
adc
fidivs
repz
incb
mov
mov
pop
fiadds
sub
cmc
xor
mov
sahf
xlat
mov
data16
adc
cs
pusha
aam
mov
ja
aas
mov
cmp
or
mov
lds
push
fsts
insl
inc
imul
xor
out
fwait
pop
mov
jp
push
cltd
cltd
push
outsl
and
xchg
out
mov
int3
push
scas
xchg
mov
jne
pushf
int
pop
test
cmp
xchg
sbb
pop
pushf
clc
dec
or
or
mov
dec
xor
insb
jne
jno
pop
loope
in
out
sbb
cmp
mov
pop
jecxz
sbb
and
hlt
xor
movl
jg
jo
jbe
out
fnstenv
adc
mov
nop
test
enter
mov
leave
adc
push
enter
mov
sahf
adc
xor
loop
fcmove
inc
xor
int3
inc
mov
insl
push
lcall
mov
sub
pop
mov
sbb
pop
mov
or
fbstp
je
sub
lods
icebp
test
into
xchg
cwtl
pop
daa
push
rcl
test
lea
jns
ljmp
movsl
insb
into
insb
or
ret
cmpsl
jne
in
rol
or
cli
push
scas
sarl
scas
lea
lock
sbb
loope
test
or
sbb
jge
imul
cli
inc
int
xchg
fsub
aas
pop
sub
xchg
ljmp
xchg
mov
or
aaa
jae
aad
jge
pushl
lcall
xor
adc
popa
test
dec
out
dec
pop
pop
add
and
mov
lock
into
sbb
cwtl
dec
iret
cwtl
cld
push
dec
sub
in
cmpsb
iret
cs
test
negl
popf
xchg
dec
cmp
push
xchg
or
push
test
dec
mov
push
roll
shlb
call
pop
cmp
mov
add
outsb
add
fstpl
lea
ficoms
push
aaa
outsb
in
cmp
sub
push
push
arpl
pop
pushf
mov
pop
icebp
mov
repz
addr16
adc
pop
xor
leave
jmp
int3
pop
or
sub
call
mov
cs
cmp
jp
adc
sbbl
loop
sub
jmp
sbb
or
cmp
xchg
les
sbb
cmpsb
jne
mov
jge
int
mov
dec
xor
cs
in
das
cmc
dec
enter
test
cwtl
test
imul
mov
sub
sahf
jae
jnp
inc
add
add
fstl
popf
mov
test
mov
cmpsl
fildll
cltd
scas
mov
sub
push
dec
jbe
or
inc
inc
mov
incb
scas
repz
nop
and
ss
mov
add
pop
pop
mov
bound
mov
pop
call
fs
push
pop
pop
sub
fcmovb
push
adc
mov
push
imulb
xor
sub
divl
popf
loop
cmp
cmp
push
outsb
stc
imul
add
jae
xor
push
xchg
jae
and
out
pop
cmp
adcl
daa
dec
js
push
cmp
ds
adc
adcl
dec
or
pop
out
mov
mov
push
mov
ss
cli
cmp
mov
mov
cmpsl
mov
sub
jae
xchg
fisttps
lfs
wbinvd
and
add
sbb
cmpsl
push
aam
iret
xor
xor
bound
sub
sub
lods
push
jge
xchg
xchg
mov
push
inc
mov
stos
test
shlb
xchg
push
adc
nop
and
jp
pop
xor
test
ror
mov
pop
lods
mov
pop
loop
pop
ret
mov
add
mov
dec
xrelease
in
cmpsb
pop
shl
xor
mov
add
sarb
add
stc
cs
ljmp
pop
cmc
xor
add
fists
out
push
pop
repnz
lahf
daa
sbb
inc
xor
out
fistps
and
ret
stc
jg
je
pushf
repz
ficompl
xlat
push
mov
sub
imul
scas
sub
push
popf
loop
mov
sub
jmp
icebp
mov
shll
push
push
scas
xchg
rclb
jo
aas
shll
ja
popa
lock
pushf
and
mov
sbb
xlat
stc
test
mov
jae
loopne
std
test
inc
jg
add
ret
dec
pop
and
out
aad
mov
por
mov
out
xchg
sub
dec
inc
sub
fwait
dec
inc
cmp
push
or
mov
inc
loop
mov
sbb
ret
insl
repnz
add
cli
popf
xchg
loopne
push
or
add
and
push
jmp
std
daa
dec
adc
lock
mov
in
inc
add
je
sub
sub
xchg
jb
je
jl
mov
mov
push
sbb
cli
lret
push
add
ljmp
repz
jns
popf
outsl
popf
and
out
stos
sub
sbb
cli
xchg
jne
jb
pop
mov
push
inc
decl
iret
es
xchg
jge
and
and
and
es
jns
rcr
sar
lods
fimull
push
aas
mov
out
cld
insl
out
scas
mov
lcall
dec
pop
push
add
stc
data16
pop
inc
cld
bound
mov
xchg
decl
adc
dec
or
lret
push
sbb
jp
repnz
mov
popa
inc
xchg
lods
xor
xchg
pusha
add
pop
in
dec
nop
xchg
les
adc
sbb
cli
fsts
mov
xorl
testl
xor
scas
rcll
fs
out
jbe
jecxz
mov
pop
js
or
aas
push
mov
movsb
jb
dec
popa
movsb
xor
mov
test
sub
cwtl
or
sahf
jg
cmp
jp
dec
pop
xor
sbb
popa
push
clc
js
or
movsl
mov
push
ficoms
pop
xchg
dec
sbb
test
test
xchg
ljmp
mov
into
mov
inc
mov
push
imul
pop
js
dec
testb
fwait
clc
dec
movsl
and
repz
into
lds
push
lret
mov
outsl
jb
add
imul
fstp
imull
negl
xchg
cmpsl
mov
inc
push
pop
mov
pop
pop
dec
pop
pop
add
stos
mov
cmc
je
dec
notl
and
insl
jecxz
jge
lock
outsl
ljmp
movsb
out
rclb
mov
int3
imul
and
sub
loop
outsb
mov
cmp
pop
or
aas
lds
dec
sub
mov
pop
lods
push
adc
sbb
stos
jne
inc
mov
cmp
fdivrp
jecxz
cmpsb
add
loope
dec
jecxz
leave
mov
sbb
push
in
test
rcrl
adc
mov
movsb
mov
inc
loope
sub
addr16
es
mov
das
popf
mov
sub
sbb
jmp
cmp
js
adc
sub
xlat
das
cmp
cmpsb
movsb
push
nop
sbbb
mov
scas
insb
cs
ljmp
jp
aas
testb
dec
push
int
add
sub
sti
inc
mov
pop
sbb
test
cmp
shll
aad
dec
mov
popf
imul
mov
es
jp
cmp
fistpl
sub
cld
dec
jp
in
xchg
dec
mov
push
mov
cld
movsb
les
imulb
add
fs
mov
cltd
push
mov
xor
cmpl
xlat
xor
push
adc
js
inc
shll
jne
inc
fsubl
dec
push
and
mov
stos
hlt
ret
xor
inc
and
dec
sub
fs
cwtl
xor
scas
movsb
jb
adc
dec
cmp
xor
in
aad
notl
fwait
adc
gs
mov
sahf
cli
addb
jecxz
jge
clc
or
or
xchg
aad
mov
int
or
cmp
lahf
pop
aam
roll
mov
cmpsb
mov
push
pop
push
xchg
dec
stc
adc
cmp
inc
iret
out
roll
mov
mov
xor
sub
out
inc
cs
or
xchg
sbb
fists
cli
add
dec
nop
mov
pop
data16
add
pop
xchg
fwait
xchg
popf
testb
stos
hlt
popf
push
cmp
mov
adc
dec
or
xchg
rcrb
enter
cmp
sbb
in
xchg
push
inc
inc
loop
and
sbb
fs
xchg
sbb
daa
pop
push
dec
mov
rcrl
mov
mov
lcall
dec
jmp
fs
movsl
sbb
lea
dec
sbb
lock
jae
jle
cs
cwtl
xchg
insl
sti
lds
jecxz
and
js
push
mov
mov
push
inc
add
arpl
adc
lock
insl
das
insl
stos
inc
shrb
das
outsl
int3
hlt
iret
adc
push
push
iret
sti
in
mov
xchg
mov
or
mov
out
sbbl
mov
push
sub
insb
adc
clc
lds
mov
jns
pop
pop
or
iret
jae
rcl
jl
lds
cli
jle
ljmp
inc
mov
sub
rorl
mov
dec
popw
loop
pop
bound
addr16
dec
push
mov
add
std
inc
xchg
dec
cmp
movsb
dec
mov
push
sbb
mov
push
push
imul
pop
shrb
adc
fdivs
add
mov
adc
mov
and
pop
int
fs
push
adc
aas
push
daa
xchg
in
push
xor
arpl
mov
pop
cmp
push
adc
xlat
inc
stos
jl,pn
push
cmpsl
imul
sbb
stos
lret
mov
mov
push
outsb
push
mov
scas
subb
mov
push
in
ja
cmpsb
xlat
sub
fstps
jo
clc
cs
add
orl
popf
xor
sub
mov
sti
repnz
push
mov
es
insl
ss
mov
lods
add
out
sbb
call
out
mov
cmp
xor
add
pop
mov
mov
mov
in
push
lods
incl
ja
mov
dec
pop
mov
mov
mov
fisttps
aad
les
call
bound
cmp
jecxz
test
jns
sbb
mov
adc
or
loop
cli
loopne
sbb
outsb
add
sub
adc
outsl
sti
fs
add
dec
xchg
cld
sub
jbe
and
jge
jnp
xchg
and
nop
pop
mov
jo
push
mov
insb
mov
pop
pop
pop
loope
or
cmp
mov
push
repz
hlt
imul
movsb
ljmp
pop
loop
mov
stc
int3
jnp
aaa
pushf
pop
cmpsl
cmp
adc
inc
or
mov
fmull
mov
pop
out
sbb
mov
lret
int
push
ss
push
rcl
xchg
mov
test
mov
out
add
xchg
cmp
mov
aam
push
sbb
icebp
push
out
into
add
xlat
or
sti
mov
adc
out
lahf
sar
ret
or
inc
xchg
fidivrs
test
jle
mov
mov
enter
outsl
pop
ror
mov
call
and
out
xchg
scas
inc
mulps
jecxz
repz
pusha
sub
pop
in
fstpl
ret
insl
icebp
in
loope
test
inc
mov
mov
pop
add
ret
jns
leave
dec
cmp
ret
pop
and
imul
sbb
xchg
movsb
mov
pop
mov
pop
pop
ja
test
mov
push
adc
sub
popa
adc
es
xor
push
cmp
jg
cmp
cmc
mov
addr16
movsb
pop
mov
xchg
push
pop
test
add
out
data16
imul
cltd
sub
imul
mov
nop
nop
repz
sbb
cmp
dec
mov
das
xchg
add
lds
and
adc
add
push
inc
out
aam
push
xor
adc
add
mov
orl
pop
shlb
pop
pop
hlt
sahf
ret
fwait
mov
xlat
stos
addr16
add
fs
popa
add
or
cld
nop
es
mov
adc
inc
jne
sub
inc
xlat
sbb
pop
lcall
jp
shll
push
ja
inc
insb
test
lret
jne,pt
mov
mov
jle
nop
lds
pushf
rorb
sbb
testb
push
int3
scas
adc
push
fwait
lret
arpl
push
leave
ret
jnp
test
cmp
outsb
scas
push
out
inc
add
add
push
and
xchg
cmp
stos
daa
es
inc
adc
adc
add
enter
dec
test
add
rorb
scas
mov
sbb
out
cmp
or
inc
lahf
and
mov
add
push
mov
shlb
lods
xchg
dec
jbe
test
sbb
cwtl
imul
mov
iret
orl
ja
lds
adc
inc
cmpsl
jns
lds
or
or
scas
adc
loopne
cmpsb
cwtl
pop
cmc
je
ja
xor
jl
xor
adc
xchg
push
data16
mov
sub
mov
sub
mov
push
push
enter
xor
and
push
or
lods
jne
arpl
xchg
xchg
stos
mov
inc
shll
imul
imul
pop
add
lds
aaa
sbb
and
xchg
xchg
movsb
and
js
popf
jmp
bound
pop
pop
push
add
mov
cmp
and
in
and
inc
and
neg
movsl
sub
inc
sarl
push
mov
popa
or
inc
jle
mov
in
cltd
pop
mov
popf
or
mov
loope
and
adc
into
sbb
sub
mov
and
inc
ret
orb
orl
ret
cltd
arpl
jo
pushf
addr16
fcomps
mov
sub
cmp
jecxz
out
cmp
mov
lock
pop
std
or
and
xchg
sub
clc
call
and
or
jmp
aam
push
fwait
jb
and
mov
lcall
ret
or
xchg
jne
fwait
jno
cmp
aas
arpl
repz
cwtl
jge
adc
mov
or
insb
mov
loope
ss
rclb
mov
or
jmp
add
pop
popf
js
cmp
popa
pop
jp
mov
das
mov
aad
push
sub
pop
fimull
loop
xor
out
jno
fwait
mov
xchg
imul
ret
push
fstl
lock
mov
jecxz
fwait
jp
inc
add
or
sti
xlat
ss
lahf
clc
push
jo
push
jns
gs
adc
lods
repz
add
insb
pop
mov
das
ret
add
les
adc
hlt
cs
add
rcrb
imul
fsubrs
push
xchg
jns
pop
clc
lds
arpl
jle
or
ret
fst
jns
fld
call
pop
and
les
inc
movsl
pop
inc
inc
pusha
mov
mov
aaa
jne
int
push
lret
mov
sub
sub
and
icebp
mov
pop
sbb
inc
adc
mov
and
aaa
mov
jl
mov
and
je
push
xor
sbb
sti
pop
gs
mov
xchg
insl
dec
pop
test
xlat
and
call
push
inc
scas
scas
scas
js
pop
lods
addr16
jg
mov
mov
test
pop
and
aad
inc
pop
lret
lret
cmp
xchg
inc
mov
push
jmp
out
and
stc
clc
incl
stos
mov
sub
pusha
mov
lods
into
stos
call
jg
test
mov
jecxz
pop
pop
dec
aas
mov
inc
popf
ds
adc
popa
mov
adc
cmpsl
cmp
lcall
insb
in
pop
enter
hlt
aas
orb
add
mov
mov
mov
or
les
adc
data16
in
pop
push
xchg
cld
mov
aam
add
addr16
lods
push
sub
ds
jno
mov
icebp
arpl
ja
cmp
dec
in
lock
ljmp
ja
iret
das
sbb
add
addb
gs
mov
bound
movsb
mov
mov
mov
or
cmpsb
sti
ret
adc
mov
sbb
jl
jns
mov
mov
dec
xchg
mov
sub
shrb
xchg
sbb
cmpsl
hlt
outsb
xchg
loopne
aad
and
into
clc
shlb
subb
dec
lcall
sbb
adc
in
jne
and
lret
in
ret
test
add
outsl
icebp
sbb
mov
pop
sub
push
jbe
inc
xor
test
sbbb
fisubrs
mov
lret
lock
in
sub
sti
adc
scas
pushl
data16
mov
push
stos
mov
push
in
sbb
cmpsl
pop
das
cmp
adc
loope
test
adc
dec
push
cmp
es
inc
cmp
into
cltd
xchg
ljmp
das
adc
mov
mov
aas
fiadds
fstpl
cmp
test
out
int
clc
jecxz
out
mov
add
lret
les
jnp
cmp
mov
cmpsb
and
mov
divl
add
mov
adc
pop
sbb
jnp
xchg
add
std
sub
or
push
xchg
cmp
mov
and
dec
dec
aad
ret
mov
sbb
in
dec
add
fs
xor
push
inc
jg
cli
lea
shll
xor
mov
lods
stc
inc
jb
and
add
inc
mov
jl
jg
mov
clc
movsl
xor
pop
push
adc
inc
adc
mov
addr16
jecxz
and
ds
shlb
mov
add
mov
cmc
jp
add
xor
clc
mov
testb
xchg
pop
cmp
mov
sbb
cmpb
xchg
mov
mov
arpl
pop
sbb
movsb
xor
jae
lret
inc
cmp
ftst
push
lods
repnz
xchg
pop
push
fldenv
jmp
hlt
outsl
cmp
cmp
repz
mov
adc
jnp
mov
xchg
xor
xchg
hlt
enter
or
pop
and
and
inc
mov
adc
and
ss
mov
push
cmp
push
jle
ret
sti
es
call
add
int
xor
cmpsl
inc
rorl
dec
addr16
call
pop
bound
leave
repnz
mov
in
pop
in
dec
inc
pop
stos
enter
aam
sti
fiaddl
lret
and
dec
or
adc
or
lcall
inc
pop
mov
sbb
mov
mov
out
sbb
cmc
into
mov
hlt
pop
adc
mov
adc
mov
jae
and
aas
and
cmpsl
push
mov
inc
fs
sub
incb
cmp
pop
dec
push
idivl
data16
push
test
xlat
lret
rorl
jmp
mov
ret
dec
push
or
roll
mov
andb
stos
mov
mov
or
jp
mulb
rcr
or
add
aas
outsl
int
adc
shl
mov
sub
jbe
push
jmp
mov
lret
loopne
out
adc
add
out
stos
cwtl
jg
cmp
pushf
cmpsb
mov
mov
xor
xor
into
fistpl
out
repz
loop
push
mov
fsts
push
cmovne
loope
shlb
push
jmp
aad
clc
lea
xor
js
out
ja
pop
out
cmc
adc
add
in
jbe
stos
xor
sbb
sub
mov
lret
shlb
cmp
lret
pop
icebp
js
cmpsb
ljmp
jno
jl
in
mov
cmp
mov
fcomps
dec
pop
add
xlat
lock
aad
push
imul
nop
or
inc
pusha
cld
mov
jae
cltd
sti
es
lea
xor
divb
xchg
jg
sahf
rcl
aas
rcrl
dec
or
lods
mov
movsl
pop
mov
jno
jnp
sbb
lss
fcmovnbe
mov
adcl
ja
cmpb
stos
je
rol
fwait
lods
pop
xor
mov
mov
fistl
addr16
lahf
sti
cmp
sbb
mov
testl
popa
push
repz
or
cli
fsubs
mov
or
add
mov
mov
es
inc
icebp
sbb
jl
notb
sahf
dec
add
sub
pusha
jb
int
ret
sbb
push
sbb
setns
inc
dec
fs
sti
mov
sub
test
out
cmp
inc
fistpll
jge
xchg
dec
leave
repz
out
ss
sbb
xlat
loop
lret
lret
les
stos
fistpll
push
call
jne
adc
jg
cli
xchg
dec
or
inc
jmp
insb
in
adc
imul
dec
mov
pop
fstpt
mov
pop
adc
hlt
sub
xchg
repnz
push
push
test
lods
movsb
shrl
pop
fucom
inc
imul
fildl
dec
jno
sbb
clc
cli
fisttps
lret
in
aas
insl
sub
cmp
jecxz
fwait
bound
cmp
sarl
adc
and
mov
xor
pop
cltd
fists
fidivrl
adc
push
es
outsb
nop
cmp
shrl
sbb
je
push
in
sbb
mov
mov
ret
sub
jnp
loope
repz
pop
pusha
test
lods
std
mov
dec
movsb
hlt
and
int3
call
push
adc
pop
add
sub
faddl
daa
dec
sbb
mov
mov
push
imulb
mov
inc
lock
inc
mov
stc
and
cs
nop
add
pop
adc
fidivs
daa
shlb
dec
movsb
scas
loope
stos
nop
push
test
popa
ljmp
jne
xchg
cmpsl
xor
sub
stc
fistpl
jmp
into
out
out
mov
imul
sbb
xchg
sub
cmp
pusha
lock
cmpl
out
fs
xchg
lret
jp
scas
rcrb
sub
adc
ret
test
pop
arpl
pop
jl
fstl
jp
das
std
test
mov
push
out
adc
mov
mov
pop
mov
ja
aam
ds
dec
movsl
and
mov
xorb
sbb
and
push
pop
stos
add
xor
jl
dec
sub
pusha
mov
dec
sub
in
mov
rcrb
mov
shll
mov
and
push
and
jne
ja
ljmp
fisttpll
call
fs
in
push
mov
cmp
sbb
sbb
xchg
insl
pusha
mov
rorb
and
pop
sub
daa
and
mov
cld
insl
sub
jae
lret
cmp
loop
shr
stos
loope
mov
fists
jg
hlt
xchg
cmpsl
out
fxch
popa
std
popa
mov
daa
scas
fsubrs
cs
sbb
shlb
dec
sub
push
mov
fildl
mull
fcoml
push
out
pop
sti
pop
inc
push
aad
mov
mov
mov
or
lock
or
mov
mov
jne
daa
cmp
push
pop
shrl
sub
and
jb
dec
mov
fsts
es
outsl
jnp
add
lds
sbb
into
mov
sub
and
pop
inc
mov
lea
aaa
push
mov
clc
and
call
popf
rcl
xchg
jb
pop
out
dec
mov
jo
insl
ret
sbb
push
movsl
cli
clc
add
aad
int
test
sub
add
hlt
loope
and
nop
inc
lea
dec
mov
mov
dec
fwait
into
movsl
repnz
jl
jmp
mov
xchg
xor
aas
and
lods
pop
mov
mov
es
sarb
enter
sbb
call
jecxz
cmpsl
fiaddl
lahf
adc
xor
mov
je
dec
mov
xchg
mov
jo
inc
arpl
stc
out
fdivrl
inc
xor
sahf
int
pusha
add
cmp
shl
sahf
mov
into
call
sub
repz
fcom
fdivl
repnz
insl
xor
shl
cs
insl
cli
icebp
stc
add
mov
test
adc
stc
lock
and
or
fisubrs
and
mov
jne
cltd
inc
int3
lcall
sbb
jo
sbb
or
es
or
inc
push
jmp
add
loop
xor
scas
lea
mov
push
dec
cmpsl
inc
loopne
jns
cmp
les
les
lea
fbld
jae
aam
js
rclb
fstl
mov
fmull
sbb
jb
push
ss
loope
sbb
in
jg
jbe
iret
mov
xchg
sbb
adc
sub
div
pop
aas
push
mov
mov
sub
cmp
jno
or
xchg
mov
hlt
test
test
add
lret
mov
cltd
sbb
daa
cli
out
or
repz
loope
jge
xor
test
in
fcmovnbe
rcrl
out
mov
pop
mov
inc
jmp
pop
pop
push
mov
inc
fldcw
xchg
jns
cmp
inc
movsl
jnp
cs
into
inc
sub
or
lahf
push
mov
imulb
add
movsb
insb
and
mov
dec
inc
cmpb
dec
pop
into
into
movsl
or
imul
inc
mov
xchg
int
xchg
pop
andb
testl
push
or
inc
loopne
popa
pop
and
out
cmp
loopne
int3
mov
mov
fsub
mov
shl
or
pop
xor
dec
stc
call
mov
push
dec
movsb
xchg
pop
and
mov
sub
out
rorl
push
mov
cld
mov
mov
imul
sbb
push
fldcw
push
movsl
inc
je
push
fdivrs
lock
or
add
shrl
or
lahf
mov
rorb
pop
sarl
mov
xchg
xchg
fisubs
xor
out
push
dec
push
lea
mov
test
sbb
push
or
mov
xor
mov
inc
hlt
enter
dec
sbbl
out
mov
jg
mov
je
cltd
xchg
mov
mov
dec
in
lret
xchg
sarb
adc
shll
mov
lods
or
outsl
ds
jnp
aad
in
fidivrl
arpl
xor
insl
out
jne
out
adc
dec
mov
scas
mov
lods
push
repz
add
and
or
and
sbb
arpl
ret
shr
sub
jb
mov
fidivs
cs
call
cmp
inc
and
xbegin
cmpsl
fisubrl
cmp
xor
dec
mov
push
xchg
mov
mov
test
sbb
sub
adcl
ret
mov
stc
rcrb
popf
aad
adcb
in
push
mov
jno
ret
movsb
adc
movsl
scas
pop
dec
mov
add
sub
int
lock
xlat
push
or
addr16
inc
popa
cld
cmpsl
dec
fwait
push
nop
popf
inc
cmp
xchg
and
jecxz
adc
mov
sbb
lret
out
jecxz
inc
shll
push
testl
push
mov
mov
lods
adc
subl
fwait
jl
into
sub
lods
add
sub
es
lcall
push
push
loop
add
push
aas
ficoms
or
jne
or
inc
mov
xchg
fadd
or
dec
pushf
dec
mov
adc
lret
xchg
rclb
pop
test
lret
int
jne
mov
leave
push
aam
mov
cmp
sbbl
out
mov
mov
outsb
sahf
aaa
jbe
mov
add
pop
xchg
pop
lea
adc
lock
imul
pop
mov
xor
sbb
jle
loopne
jge
jg
pop
icebp
dec
sti
dec
jo
inc
cmp
xor
mov
orb
push
adc
ds
jne
push
ljmp
in
int3
insb
jmp
mov
dec
in
jb
dec
jmp
xor
in
aad
out
lods
cmp
mov
aam
dec
jecxz
incb
mov
xchg
in
add
pop
out
xor
bound
aam
mov
ljmp
hlt
lock
add
mov
pop
into
inc
jb
push
xor
xorl
inc
testb
cmpsl
inc
jae
cmp
xchg
push
mov
jg
xchg
adc
add
sarl
mov
ficomps
or
inc
out
adc
mov
xlat
test
nop
sbb
popf
cmp
push
mov
sub
leave
movsb
cmpsl
or
mov
sbb
jecxz
cld
xor
lods
dec
sub
cwtl
push
adc
jbe
dec
pop
sti
mov
xchg
test
dec
push
xchg
in
adc
push
lods
mov
push
jp
mov
lret
dec
fdivs
inc
mov
in
or
pop
ljmp
leave
repnz
arpl
jmp
sub
mov
push
jns
je
lret
push
or
sub
scas
xor
inc
cmpb
lret
inc
fldl
aaa
dec
pop
ljmp
adc
cmp
and
pop
pop
fcmove
shll
hlt
les
add
pop
rorb
inc
jne
jmp
fadds
imul
dec
sub
adc
leave
repz
lods
outsl
pop
jle
push
or
out
es
aam
into
pop
mov
cmp
rorl
mov
mov
and
aam
popa
jbe
adc
stos
adc
xchg
mov
xor
lret
inc
aas
int3
mov
loopne
inc
aad
add
rclb
fistps
adc
ljmp
sbb
add
cmp
ljmp
or
dec
pop
jo
nop
stos
jns
data16
push
divl
xor
sbb
mov
push
adc
mov
addr16
insb
iret
push
mov
lahf
mov
jmp
mov
and
popa
fisubl
adc
add
inc
adc
push
roll
inc
xchg
lahf
xor
sahf
cmp
xor
out
fildll
mov
imul
sub
cmp
jae
inc
movsb
add
hlt
push
pusha
mov
mov
fwait
jmp
or
xorl
movb
add
pop
cmp
add
mov
inc
stos
popf
mov
aas
and
adc
int3
xchg
xor
aaa
jo
dec
cli
pushf
rcrb
bound
jmp
outsl
sahf
lret
xchg
xchg
xchg
out
jecxz
fsubl
imul
xchg
pusha
lock
jb
dec
or
cmc
and
xchg
jns
push
in
out
cwtl
jno
insb
out
jo
push
inc
pop
jae
sub
sub
jecxz
cmc
rorl
xchg
dec
call
test
into
adc
cmc
call
inc
jmp
test
fmuls
sahf
fnsave
cmp
and
jl
mov
or
dec
fcompl
or
inc
cltd
add
jmp
insb
jb
arpl
icebp
stc
cmpsb
lods
and
mov
pop
fists
ret
lods
cld
mov
loopne
pop
jno
adc
leave
mov
jecxz
xor
sbb
test
pop
int
cli
insb
js
dec
in
divb
jns
cld
popf
cmpl
iret
mov
mov
mov
out
or
pop
loopne
pushf
push
test
les
or
cmpsl
dec
pop
cmc
andl
or
mov
xchg
js
das
je
leave
pop
adc
jmp
test
xchg
int
jns
xchg
test
in
adc
iret
push
pushf
mov
mov
xchg
in
and
lds
repnz
cmp
mov
shlb
js
mov
xchg
dec
pop
test
out
xorl
push
jno
cld
sahf
dec
inc
nop
sahf
adc
negl
loope
into
sahf
push
je
push
inc
mov
mov
mov
xchg
rcrl
sbbl
jp
xorb
loopne
jno
cmp
push
hlt
int
sbb
push
cmp
jbe
xor
jb
movsl
lods
inc
cmc
mov
mov
je
scas
test
test
mov
sub
out
dec
xchg
mov
inc
pusha
xchg
cmp
movlps
push
xor
sbb
mov
or
cmp
or
push
movsl
lret
and
and
xorb
fxch
lret
xchg
out
pop
insl
push
push
loop
jge
pop
repnz
or
xor
add
movsl
xlat
xlat
mov
fistl
ret
xor
cwtl
aad
nop
dec
add
std
mov
and
inc
mov
movsb
dec
inc
mov
data16
push
mov
dec
decb
pop
inc
bound
andl
lea
out
inc
adc
push
mov
shlb
jbe
xchg
subl
mov
js
arpl
loopne
enter
mov
daa
pop
je
xchg
pop
movsl
pusha
enter
cmp
and
gs
or
sub
dec
test
mov
dec
or
popf
cmp
sub
aaa
aas
inc
xor
cmpsl
xor
push
mov
pop
inc
rorb
push
divl
xchg
xor
leave
push
and
sub
dec
dec
mov
xchg
adc
push
enter
call
sbb
pop
sbb
mov
xchg
jae
out
mov
mov
add
xchg
xchg
sub
dec
pop
les
nop
xchg
xchg
cmp
and
fisubrl
pop
filds
jg
cmc
sub
xchg
pusha
mov
lret
pusha
mov
stos
stc
imul
hlt
pop
sbb
test
cltd
xchg
lods
icebp
inc
xor
imul
nop
jne
fmull
or
fldl2e
clc
in
sub
pusha
jno
out
ljmp
fs
addr16
add
dec
dec
mov
add
jmp
cmp
jno
cmpsb
jb
and
ljmp
and
and
xchg
test
cmpb
pop
adc
sbb
add
enter
add
add
and
add
mov
add
add
add
sbb
add
fdivrl
add
dec
push
adc
add
mov
add
fwait
cmp
add
sti
inc
in
loopne
sbb
and
cltd
arpl
pop
jecxz
sbb
lea
fdivl
popa
sbb
pop
mov
and
and
std
push
popa
icebp
mov
mov
add
ss
loopne
dec
xor
outsb
icebp
mov
dec
outsb
lcall
and
ja
cmc
ficompl
adc
movsb
pusha
mov
push
mov
in
filds
pop
lods
or
testl
cmp
xlat
add
sbb
data16
insb
jecxz
pop
adc
jmp
cmp
lods
sbb
pushf
addl
shl
dec
and
push
xchg
adc
scas
xchg
leave
cmp
sub
cmp
das
lods
xor
sahf
mov
rolb
stos
data16
ja
jp
xor
lods
inc
int3
fcomip
mov
sub
stos
sbb
decb
jp
add
jle
jae
fdivrl
std
bound
xor
fisttpl
inc
fisttps
out
mov
mov
cmp
repnz
inc
inc
rcrl
xchg
mov
mov
imul
xor
int
inc
inc
add
imul
jae
mov
popf
adc
ret
jno
imul
jge
adc
jge
into
aaa
cli
cs
retw
scas
dec
mov
dec
shlb
daa
fbstp
push
outsl
repz
or
xchg
out
jl
adc
jno
and
scas
bound
mov
add
lret
xchg
mov
lods
mov
call
mov
sub
rclb
dec
inc
push
sarl
cmp
scas
icebp
dec
daa
sbb
inc
es
popf
xor
or
pop
add
adc
xchg
stos
cld
sub
mov
lret
pop
les
and
jecxz
clc
xor
stos
push
dec
movsb
insb
cmpsb
xor
test
pop
loop
out
xchg
and
hlt
insb
popf
cmpsb
adc
mov
sbb
cmpsl
hlt
dec
cli
adc
xchg
pop
stc
insl
jle
mov
out
jo
sub
mov
xor
insb
cmp
imul
insl
jae
pop
call
gs
xchg
mov
lea
adc
ljmp
sar
hlt
sbb
mull
push
pushf
cmp
dec
xchg
leave
addr16
sub
sbb
mov
mov
pop
xchg
jns
ret
inc
mov
rcrb
lret
add
ljmp
sbb
mov
add
cmp
andl
mov
inc
test
xor
mov
jge
push
add
and
xor
push
xorl
cmp
adcb
mov
jae
lret
je
mov
decl
cmpsl
push
add
jo
sbb
adc
scas
sbb
sbbb
in
cmp
sub
loope
cmp
jne
mov
aaa
cmp
daa
sub
test
jae
adc
fisttpll
jo,pt
es
test
loope
rcr
cmpsl
insl
adc
mov
pop
cmp
icebp
repnz
movsb
outsb
in
ret
xor
mov
outsl
xor
fcoml
movsl
jle
or
push
cs
fs
and
shll
lods
nop
mov
sub
iret
mov
in
cmp
cmp
xlat
data16
jle
testl
into
jecxz
xchg
mov
xchg
mov
cltd
out
mov
daa
adc
sbb
std
ret
enter
or
test
in
in
mov
xor
fbstp
lds
sbb
gs
sbbl
lock
dec
lret
adc
pop
sbbl
add
das
stc
addl
ljmp
and
mov
jnp
aam
push
jg
inc
cwtl
loopne
jne
aam
fcomps
fstpt
and
mov
sub
sbb
xchg
cli
repnz
push
sub
lods
cltd
xor
cmp
jge
xchg
or
mov
add
out
outsl
mov
inc
xchg
xor
xchg
mov
jg
and
pop
cmp
gs
jecxz
out
fldt
mov
and
push
or
pop
cli
xchg
dec
test
pop
sub
xor
mov
mov
adc
adcl
cmp
mov
adc
xchg
sti
adc
leave
in
or
ret
or
cs
xor
int3
xchg
add
shlb
or
push
mov
insb
sbb
mov
xor
iret
mov
imul
add
mov
inc
nop
in
hlt
out
popf
clc
cli
sub
andb
mov
mov
rcrl
addb
or
stc
test
mov
adc
and
je
xchg
lods
cmpl
sbb
sbb
pusha
pop
inc
iret
gs
gs
pop
xchg
jo
cmp
fcmovnb
cltd
cld
push
mov
stos
sub
mov
or
dec
jnp
stos
sub
stos
sbb
inc
and
mov
mov
pusha
dec
mov
outsb
push
aam
nop
mov
mov
push
inc
daa
cmova
enter
jb
or
inc
in
aaa
sbb
push
repnz
adc
jae
loopne
xor
mov
jl
loopne
xorl
das
jnp
out
xor
loop
cmp
hlt
fdivp
cmp
push
xor
test
hlt
mov
jno
add
sbb
daa
in
scas
es
sub
xchg
cmp
xchg
adc
jl
jl
ja
xor
xchg
aad
scas
inc
sbb
inc
xchg
repz
push
testb
in
js
xor
out
scas
daa
js
or
shrl
lock
int
push
mov
cld
and
mov
cmp
je
stc
or
jo
add
mov
push
scas
jecxz
leave
into
add
lret
enter
test
xor
daa
cmp
enter
add
fstpl
rol
or
xchg
in
dec
rcrl
aam
xor
das
dec
pop
mov
ja
out
rclb
push
xchg
in
das
lret
sub
cltd
divb
fmuls
and
xor
mov
mov
ds
push
cmp
gs
inc
push
mov
inc
push
fs
aaa
sahf
cmp
out
sub
xor
dec
cs
iret
fidivrl
lods
dec
into
add
mov
sbb
das
dec
out
mov
and
out
sub
out
jp
out
js
cmp
cmpsl
sub
shl
mov
pop
cltd
jmp
xor
scas
aam
out
out
cmp
pop
call
jne
je
adc
xor
cwtl
add
data16
push
push
inc
adc
fdivrl
pusha
jbe,pt
addl
nop
add
cmp
pop
jns
sub
pop
and
sbb
das
mov
out
dec
ret
mov
shr
ja
js
pop
aas
push
sub
mov
dec
sub
or
mov
enter
mov
mov
cmp
div
mov
dec
out
sbb
lea
pop
das
mov
push
adc
lods
inc
mov
and
xchg
pop
bound
test
cli
ljmp
arpl
pushf
xchg
fs
sbb
jb
mov
xchg
xor
dec
jae
add
lods
sub
scas
push
pusha
xor
nop
out
mov
loop
lock
cmc
gs
loop
xchg
clc
outsb
push
bound
stos
xchg
adc
pop
jge
pop
sub
push
dec
outsb
inc
sub
push
loope
adc
imul
pusha
movb
les
flds
ret
test
push
in
push
dec
dec
lret
shrl
cmp
xor
jecxz
fsts
jno
push
and
pop
in
into
pop
loop
adc
adc
addr16
push
push
dec
dec
pop
mov
aas
sti
fstl
sbb
or
pushf
mov
cld
push
subb
push
dec
ret
push
iret
pop
and
pop
push
inc
outsl
movsb
mov
push
shll
repnz
ret
les
jo
js
add
pop
movhps
data16
ljmp
test
ret
lea
or
addb
pop
pop
int
and
repz
cmp
lods
xorb
and
je
and
mov
movsl
mov
jp
inc
test
inc
ljmp
movsl
xor
lcall
inc
xor
cli
in
ds
rcrb
sub
fidivl
mov
loope
inc
ret
mov
dec
test
inc
xchg
clc
popa
ljmp
rclb
icebp
fs
xor
insb
pop
adc
inc
mov
movl
lods
clc
xchg
push
xchg
cmp
inc
mov
add
cld
and
add
xor
jns
in
mov
xor
mov
mov
jg
les
fmuls
xchg
xchg
jns
add
sub
jmp
xor
out
pop
sub
mov
test
gs
repz
je
push
stos
lock
fs
xor
xchg
jg
push
fucom
outsb
pop
loop
mov
xor
pop
push
stc
out
sub
push
sbbb
and
mov
pop
outsb
push
loopne
pushf
sub
adc
lret
gs
lds
lds
add
sbb
or
sbb
or
jmp
jb
sar
mov
mov
pop
lret
iret
int3
iret
lcall
and
sub
jecxz
mov
movsb
leave
in
sub
sub
je
lock
cmp
mull
aaa
xchg
pushl
dec
mov
pop
fnsave
xor
stos
ja
adc
popf
pop
pop
out
pop
cmp
outsb
scas
mov
mov
xor
cmp
stc
mov
les
movsb
scas
pop
stos
ret
cli
xchg
jg
ja
pop
in
jg
sbb
stc
lcall
and
imul
mov
mov
fimull
mov
xchg
adc
mov
xchg
mov
ud0
dec
cmp
sub
cmp
stos
push
add
enter
dec
jg
fcomps
jns
ljmp
and
xor
lcall
sub
rep
popa
jmp
call
sub
adc
hlt
or
mov
mov
mov
testb
jno
outsb
imul
cmp
push
das
cmp
enter
filds
js
push
repz
or
imul
shll
loopne
sub
shl
gs
lods
sbb
ja
test
mov
loop
add
mov
push
es
decl
push
pop
lret
in
scas
pop
jo
mov
pop
mov
xor
stos
dec
sub
repnz
mov
pop
pop
jo
dec
test
lods
and
mov
push
popa
cmp
imul
fcmovnu
into
mov
cmp
cld
gs
fwait
test
mov
shl
push
jne
outsb
mov
mov
lahf
cmp
imul
out
push
sub
mov
outsl
negl
inc
adc
jae
sahf
mov
xchg
mov
jo
pop
sbb
push
adc
popl
inc
popf
adc
test
cltd
mov
sbb
int3
cwtl
mov
adc
xchg
lods
int3
call
push
adc
flds
test
xor
mov
sbb
fwait
out
mov
sbb
mov
lods
jge
mov
push
push
lret
inc
mov
mov
ljmp
out
arpl
outsb
call
jbe
rorb
ljmp
xlat
movsl
dec
xchg
std
stos
sub
je
fs
sub
pop
cli
data16
jnp
and
movsb
loop
add
add
inc
xor
je
add
push
adc
rclb
inc
cltd
bound
sub
sbb
popa
sub
std
and
cld
xchg
jns
out
sub
sub
or
pop
jb
daa
loope
rorb
test
pop
mov
and
jl
bound
mov
std
mov
flds
sbb
mov
jmp
fistpll
inc
in
fwait
jle
cmpl
mov
ss
pop
pop
push
jno
sti
movsb
sbb
cltd
shrb
mov
clc
imul
out
mov
push
dec
sbb
popa
pop
push
adc
js
lahf
mov
xchg
add
sub
cmp
cmp
addr16
sub
icebp
adc
xor
or
stos
in
xchg
push
fidivs
fwait
sbb
push
inc
mov
je
mov
repz
push
mov
push
jge
pop
pop
call
xor
push
xchg
rcl
push
sahf
and
pop
jne
inc
stc
lods
or
stos
lea
add
les
add
adc
pop
enter
mov
xchg
pop
or
mov
loop
push
push
cwtl
daa
mov
loopne
mov
mov
ret
cmp
mov
lock
mov
shl
fists
sub
mov
adc
xchg
mov
sub
sarb
jo
jle
aas
and
pop
or
lahf
scas
xchg
inc
dec
mov
lret
lahf
add
and
stc
in
cld
mov
cmp
imulb
nop
sub
imul
inc
xchg
adc
lods
mov
jbe
dec
je
je
xor
push
jmp
scas
push
sti
mov
sbbb
inc
jmp
inc
ja
movsb
ret
pop
fsubs
dec
sarb
sbb
mov
test
into
push
outsb
ret
jecxz
fs
mov
xor
js
jl
cs
pop
mov
ret
mov
lret
jae
and
outsl
outsb
mov
or
sub
incl
sbb
int3
sbbl
stos
sbb
outsl
dec
loope
pextrw
dec
adc
mov
push
ss
mov
cmpsb
fimull
mov
stc
mov
add
ja
pop
shll
stos
push
pushf
cmp
jl
mov
sub
push
shl
int
or
aam
cmpsb
xor
rorb
xlat
fcompl
push
int
mov
mov
outsb
daa
sar
std
xor
mov
push
aam
lods
shrb
fscale
adc
bound
addb
scas
lds
dec
mov
nop
xor
mov
arpl
sub
jnp
or
repz
cwtl
mov
mov
loopne
cmp
jns
mov
lods
into
xchg
aad
push
pop
or
adc
sbb
xchg
out
adc
push
jbe
stc
push
outsb
sbb
out
inc
xchg
pusha
stos
scas
xchg
mov
aam
jmp
sub
jo
bound
test
xchg
rolb
xlat
xchg
mov
pushf
xor
cmp
xor
inc
ljmp
pop
jns
mov
adc
jbe
mov
ret
push
or
bound
jo
jo
fwait
adc
insb
cmp
leave
pop
adc
fs
push
adc
mov
in
xchg
inc
mov
adc
push
ja
idivl
push
ds
pop
lea
and
push
or
sub
and
loop
jne
js
jmp
fs
loopne
jbe
mov
jge
xchg
testl
jb
test
sub
xor
mov
and
push
mov
sub
jecxz
xor
pop
adc
dec
cs
es
push
sub
mov
icebp
or
sar
fimull
sub
das
inc
jmp
mov
cmpsb
dec
test
ret
mov
xorb
jecxz
cmp
aam
movsl
cs
orb
test
loope
ja
xor
cld
fs
stos
xor
adc
cmpsb
jae
jns
and
mov
sahf
lret
push
or
or
icebp
in
sbb
in
xchg
movsb
rcrb
cmpsl
push
xchg
mov
cld
xchg
mov
xor
lret
fistl
ret
xchg
push
dec
xor
cmp
mov
dec
es
jl
aam
fs
stos
mov
add
cmp
and
push
sbb
pop
push
lcall
mov
fs
fwait
out
mov
test
call
jnp
pop
negb
lahf
orb
push
xchg
mov
mov
xchg
adc
and
shrl
ljmp
sub
mov
push
stc
push
sbb
xchg
pop
push
xor
push
jge
cwtl
xchg
add
int
pusha
fsub
loop
mov
mov
adc
xchg
push
call
out
mov
cmc
addb
push
bound
jmp
insb
xor
or
sbb
clc
push
xchg
in
das
jl
repz
insb
lods
mov
movsb
add
sub
in
mov
xchg
stc
je
adc
mov
cmp
pop
inc
dec
iret
xchg
push
mov
inc
xor
mov
dec
int3
cmp
icebp
push
daa
push
lcall
pop
ret
outsb
movsl
mov
jmp
add
xchg
inc
push
lods
pop
and
imul
push
push
pop
push
push
dec
and
shrl
mov
or
push
aad
sbb
push
ret
repz
inc
xchg
fcmovne
pusha
outsb
mov
lcall
inc
mov
sub
subb
xchg
cmpsb
mov
stos
push
add
sbb
iret
pusha
aas
jle
psllw
push
xchg
or
sub
in
xchg
out
out
xor
in
mov
jmp
push
dec
out
cmp
lods
xchg
mov
mov
adc
cmp
jl
cmpsb
cmp
fsubs
jae
sub
lods
js
pop
popf
stos
shl
xor
test
in
sbb
or
mov
xchg
rorb
push
or
xchg
inc
mov
jbe
xchg
xchg
ret
les
xchg
movsl
repnz
jnp
jg
mov
or
push
xorb
sahf
cmpl
fldcw
rcr
test
mov
adc
inc
xor
outsl
cmp
cmp
inc
test
xlat
add
testb
int3
jns
out
xlat
cmpsl
outsl
adc
ds
mov
test
imul
mov
iret
notl
shll
push
xchg
or
xor
xor
int
xchg
call
stc
nop
cmc
or
imul
pop
leave
cmpsb
clc
add
xchg
mov
push
ds
jns
in
nop
outsl
sbb
cmpsl
test
nop
rcrb
mov
aaa
enter
xlat
testb
sub
popf
sbb
jecxz
push
cs
cmp
jo
jo
dec
nop
xchg
cli
push
jmp
add
clc
lods
jnp
imul
ret
mov
gs
xchg
mov
jae
lods
aam
movsb
icebp
xchg
adc
ret
adc
sub
xchg
fiadds
sub
rcl
xor
test
sbb
cmp
dec
dec
mov
or
inc
out
sub
pop
inc
nop
test
pushf
inc
mov
dec
sub
stos
inc
lea
and
rorb
adc
cmp
daa
sub
jp
mov
ret
test
lahf
add
or
jb
jbe
test
cmp
stc
aas
pop
fidivrs
cmp
les
sbb
sarb
loopne
ds
mov
mov
pop
ds
rcrb
mov
pushf
dec
and
mov
pushf
mov
xchg
xchg
fistpl
std
jae
cmc
fwait
cli
add
jb
testl
jmp
inc
movsl
mov
push
xlat
sub
in
push
lods
xchg
int3
mov
dec
ret
mov
das
sbb
bnd
add
add
and
hlt
das
or
and
xchg
or
dec
out
lahf
or
xor
fldcw
stos
push
call
adc
pop
fstpl
js
push
or
cld
mov
mov
leave
push
adc
mov
faddl
pop
sub
popl
mov
or
cmp
inc
jne
leave
scas
in
xchg
add
fildll
inc
mov
cmp
bound
add
fisttps
xor
xchg
sbb
loope
test
inc
pusha
pop
jbe
pop
sub
and
lcall
lahf
mov
test
add
fcmovbe
inc
lds
popf
test
loopne
push
jne
in
mov
adc
insl
and
cmp
mov
dec
ficomps
push
mov
mov
test
ljmp
dec
cli
pushf
inc
inc
push
lcall
sbb
mov
std
shrb
or
flds
jno
int3
mov
punpcklwd
xchg
jle
stos
xchg
adc
dec
add
inc
ss
int3
shll
repz
and
sub
mov
mov
daa
es
scas
push
mov
adc
xchg
xchg
lret
bound
ja
dec
test
iret
pop
pop
test
sbb
xchg
pop
out
call
cmc
in
cltd
cmp
fidivrl
mov
xchg
xlat
cmp
pop
xchg
lock
jecxz
aad
xor
pop
xlat
ss
sarb
or
cwtl
popa
out
jg
pop
hlt
je
push
xchg
xor
fldt
push
lea
mov
push
adc
subb
adc
or
mov
es
lds
add
sub
adcb
xchg
mov
rol
xchg
or
cmpsb
repnz
dec
inc
and
inc
inc
xor
mov
or
aam
xlat
pop
push
sbb
jae
mov
push
adc
fbld
sbb
cmp
icebp
mov
push
push
pop
jbe
test
or
jmp
mov
dec
push
pop
lret
cmc
std
mov
je
mov
outsl
lcall
add
dec
pop
rcrb
add
sub
call
repnz
jbe
lock
xchg
or
sti
popf
fsubrs
xor
mov
push
push
movsl
push
sbb
lock
and
sbb
mov
jnp
sub
mov
mov
cmpsl
mov
daa
cmpsb
mov
cld
adc
lahf
xchg
and
addr16
sub
negl
push
sti
cli
cmp
xor
push
sbb
sub
mov
test
and
imul
xchg
test
inc
sub
outsb
int
sarl
aad
pop
fdivs
dec
sub
in
in
lods
in
decb
mov
mov
fistps
jo
push
out
out
cmp
pop
xchg
int
fs
icebp
ret
mov
mov
adc
imul
daa
xlat
xor
scas
and
fisubrs
mov
and
nop
dec
dec
stos
xor
aad
cmp
inc
push
ret
add
bound
mov
xor
jge
mov
jo
data16
mov
and
popa
xchg
jae
sub
nop
add
inc
mov
ja
inc
out
jae
dec
jmp
or
xchg
add
test
repz
adc
mov
mov
into
jno
ficoml
lods
push
int3
dec
jle
mov
inc
mov
pushf
and
int
into
in
pop
jns
sub
adc
imul
jae
mov
insb
pop
mov
or
clc
insl
inc
inc
test
mov
int
int3
stc
mov
lock
ret
cmp
loopne
sub
push
imul
sbb
sub
mov
insl
lret
and
cmp
in
push
leave
in
cmpb
les
fdivl
adc
sbb
xchg
fildl
insl
out
xchg
push
adc
fucomip
mov
xchg
ja
aad
out
push
mov
scas
mov
int
arpl
out
inc
lahf
dec
inc
imul
pushf
sbb
jl
lea
and
test
mov
xchg
loope
ds
hlt
xchg
loopne
punpckldq
add
cmc
adc
arpl
shlb
arpl
mov
lcall
js
lcall
lret
test
mov
daa
das
sahf
movsb
mov
test
fbld
jne
mov
std
or
push
add
sbb
mov
or
test
orl
xor
enter
movsb
jmp
lea
cmp
push
cmp
sbb
fdivr
mov
jo
pop
pop
jbe
and
sub
xor
sub
add
sub
out
daa
push
pop
loopne
into
sub
and
add
sarb
pop
push
sub
ja
loopne
ss
mull
shll
ret
fcomps
mov
sub
repnz
pop
imul
scas
mov
or
clc
scas
call
jmp
mov
xor
rolb
sbb
xchg
mul
pusha
jecxz
js
test
and
jno
addl
imul
sbb
adc
sub
out
push
mov
and
add
popa
jne,pn
mov
dec
or
sahf
lcall
jl
mov
push
adc
inc
fs
mov
orl
add
or
in
lret
jne
lods
adc
push
stos
dec
or
adcb
and
test
repnz
movsl
add
rorb
aam
sti
jl
sub
je
insl
jp
mov
cmp
xchg
mov
out
sahf
xchg
lock
and
dec
in
daa
xchg
mov
ja
adc
push
xchg
mov
int3
xchg
mov
push
dec
jo
clc
inc
std
aas
cmpsb
nop
shll
bound
and
push
jg
push
inc
mov
push
or
cmpsb
cwtl
lret
sti
repnz
popf
fdivrs
inc
sub
and
in
cmpl
lods
pusha
dec
pop
xchg
fnstsw
lahf
call
inc
shlb
cmpsl
jmp
fdivrp
and
sbb
or
push
test
in
punpcklwd
jno
mov
pop
sbb
cmpsl
int
pop
add
lds
or
cmp
add
bound
sub
jbe
push
lods
sbb
mov
scas
inc
cmpl
enter
gs
fisttpll
cli
sub
mov
cmp
out
mov
xor
popf
mov
ret
dec
add
psadbw
ja
push
mov
or
xchg
fcomp
push
pop
stc
lret
int3
imulb
les
popa
jns
stc
stos
stos
and
adc
push
call
or
fisttpl
int3
mov
cmp
mov
lret
sahf
out
rcll
dec
les
or
push
mov
lds
jnp
xchg
pop
je
adc
pop
pop
jg
dec
xchg
call
in
xor
adc
and
fcompl
loop
xchg
pop
add
or
lods
jb
push
js
roll
cmpl
rcr
in
xchg
mov
mov
jno
sub
push
push
dec
pushf
cwtl
mov
ficoml
paddusw
cmp
inc
adc
cli
scas
lret
mov
fwait
xchg
outsl
inc
cmp
xchg
mov
jg
add
dec
int
jo
inc
mov
xor
mov
jmp
jnp
cmp
subb
lret
jns
insl
mov
loopne
in
sub
aas
dec
mov
movsb
xchg
sub
jmp
xchg
aas
push
pop
movl
iret
stc
loopne
das
add
push
cmp
jge
xchg
in
xchg
gs
inc
inc
or
mov
in
cwtl
mov
jb
push
packuswb
call
xchg
lods
ss
movb
dec
out
orl
and
jecxz
je
jne
mov
shr
sub
adc
shlb
jmp
push
xor
inc
cmp
mov
jge
push
push
sub
scas
daa
les
dec
cli
in
shl
into
pushf
push
cltd
jp
roll
movsb
sub
push
dec
push
int
aaa
das
cltd
loop
ljmp
data16
inc
fadds
sti
into
test
add
insl
leave
mov
fs
and
ljmp
mov
enter
lea
out
and
orb
pop
and
mov
inc
jl
mov
mov
jo
xchg
push
je
inc
dec
clc
imul
in
jg
fadds
sahf
mov
aas
xchg
pop
add
hlt
nop
enter
mov
sbb
mov
push
movsb
pop
pop
mov
add
mov
cwtl
addr16
into
mov
dec
sbb
and
xchg
aas
je
pop
and
mov
sbb
les
jge
insl
cmp
or
cs
mov
fs
push
sahf
mov
lods
fsubs
dec
pop
add
add
pop
ds
stc
pusha
and
repnz
repz
adc
lret
cmpsl
ret
pop
inc
mov
cld
xchg
loop
adc
add
addr16
sub
push
jmp
sub
dec
test
daa
mov
loop
mov
add
xchg
mov
pop
sbb
scas
xor
cmpsb
pop
js
loopne
fcompp
push
push
pop
push
xchg
inc
xor
mov
pop
fwait
pslld
cmpsb
inc
mov
cmpsb
mov
aas
sub
loopne
pop
adc
sub
xor
xor
cmp
inc
ret
lock
test
jnp
jne
pop
adc
rcrl
cmp
shlb
test
inc
jo
jbe
cmp
sbb
and
addb
xor
push
mov
popf
les
pop
and
fisubs
and
adc
pushf
push
cltd
fildll
lods
pop
fcmovnu
dec
mov
iret
lret
in
dec
pop
in
jge
stc
push
sbb
jns
and
add
test
pop
clc
mov
enter
push
push
cmc
adc
aam
aaa
xchg
cmp
adc
adc
mov
js
das
cltd
jecxz
in
test
and
hlt
adc
arpl
push
inc
rolb
push
add
push
xchg
adc
dec
xor
mov
shr
outsl
add
stos
mov
xchg
inc
aam
push
inc
test
movsl
pop
nop
nop
sarb
adc
dec
adc
hlt
push
sub
movsl
nop
inc
cmp
jnp
inc
cmp
hlt
inc
lea
or
sbb
cltd
daa
xor
out
or
lcall
xor
dec
stos
and
and
fildll
orl
jmp
mov
add
mov
push
adc
add
lahf
and
ret
movsl
xchg
jo
xchg
dec
inc
cmp
mov
mov
add
gs
pop
enter
cmp
xor
in
sbb
and
dec
adc
xlat
frstor
cli
dec
movsb
add
lock
jnp
cmp
mov
nop
stos
mov
xlat
xchg
mov
bound
in
xor
cmp
xchg
in
adc
or
cmp
adc
and
jb
loope
fdivl
int3
jecxz
xlat
xlat
cmp
mov
lods
je
pushl
cmc
fsts
lret
lcall
pop
mov
into
stc
pop
data16
push
dec
pushf
jg
inc
sti
cs
das
popf
cmp
xchg
inc
lods
fsubrs
sub
fucomip
pushf
and
ljmp
out
sbb
inc
je
test
xorb
insb
aad
or
into
xor
aas
aaa
push
shrb
pop
repz
cmpsl
aaa
insb
movsl
or
enter
stos
sarb
icebp
mov
test
xchg
sub
or
and
add
and
xchg
add
xchg
lds
pop
outsb
jmp
add
xor
addr16
iret
and
fwait
hlt
cwtl
ret
sub
faddl
mov
mov
hlt
xchg
dec
std
fisubrl
outsl
sbb
mov
clc
pop
add
out
aaa
xor
adc
adc
push
movsl
push
sub
cmp
clc
dec
ficoms
mov
pop
aaa
es
int
sub
popf
mov
out
cld
mov
movsl
sti
mov
and
ja
inc
in
pop
lahf
dec
loopne
jae
hlt
jg
je
je
stos
popa
inc
mov
insl
out
icebp
inc
test
pop
mov
cwtl
jnp
push
xor
mov
mov
push
test
cmp
test
lds
pop
mov
mov
idivb
push
mov
insb
xchg
adc
jmp
dec
gs
out
outsl
repz
adc
negl
cld
push
or
pop
loop
bound
xlat
inc
movsl
push
or
mov
nop
aam
jle
ja
mov
mov
mov
xchg
dec
xlat
dec
or
or
push
imul
xor
push
adc
outsb
pop
fcmovbe
sbb
mov
inc
stos
ljmp
jns
lret
push
fsub
cmp
nop
xorb
adc
mov
inc
in
mov
and
xchg
inc
xor
jnp
popa
pop
cmp
and
aam
mov
xchg
cmp
out
or
mov
pop
out
xchg
outsl
xchg
sbb
movsb
push
stc
bound
sub
jb
rcrb
mov
inc
insb
pop
pop
test
sbb
sti
sub
push
xchg
add
jne
rcrl
sub
cwtl
test
testb
push
jno
insb
mov
push
pop
clc
vmovmskps
pop
push
shll
cwtl
in
pop
dec
cmp
aas
pop
das
and
faddl
rolb
push
arpl
dec
cld
cmp
out
mov
fstpt
icebp
ljmp
lea
xchg
es
dec
jae
fisubrl
clc
dec
sub
sub
addr16
pop
xchg
jp
dec
jae
mov
dec
xor
push
push
mov
lret
shr
or
xor
inc
movsl
imul
sbb
mov
subl
clc
icebp
add
inc
ffreep
pop
in
hlt
fs
dec
mov
or
pop
fildl
and
dec
or
xor
pop
dec
mov
inc
shl
test
jae
xchg
inc
jecxz,pt
xchg
sbb
in
push
inc
add
ret
js
or
aam
ret
stos
shll
mov
sub
cwtl
sbb
imul
pop
data16
hlt
push
mov
in
in
loop
lods
cld
mov
sub
shlb
pop
cs
es
pop
cltd
fnsave
dec
sbb
imul
adc
pop
shr
jbe
imul
and
dec
dec
mov
dec
sbb
jecxz
add
stc
adc
into
outsl
lea
push
xor
rcr
push
mov
cmp
sub
pusha
mov
pop
mov
call
sub
lock
aad
in
std
xchg
add
inc
jns
pop
push
mov
adc
sub
inc
stos
jge
jne
movsb
jg
pop
fs
mov
fmull
fisubs
sub
cmp
sub
cmp
pop
lret
cld
stc
int3
lret
aad
xchg
out
stos
pop
cli
add
testb
js
dec
das
mov
bound
subb
movsl
testb
mov
xchg
cmp
push
xor
sbb
xor
sbb
mov
cli
jo
sbb
mov
bound
outsl
or
jo
inc
sbb
aad
in
cs
aaa
dec
xchg
mov
loopne
icebp
dec
push
mov
jae
test
int
fsubl
inc
xor
hlt
cmp
iret
adc
rol
add
mov
jg
sbb
ljmp
inc
xlat
adc
jbe
or
jnp
loope
mov
stos
and
stos
loopne
jnp
std
lahf
xor
adc
cs
jge
jo
sub
insb
out
mov
and
sub
push
rolb
jne
aaa
dec
int3
pop
jle
adc
add
cmpl
stos
and
movsb
stc
add
dec
fnsave
jnp
mov
and
and
lret
push
ss
jle
sub
cmp
lret
mov
jbe
loope
or
sbb
mov
inc
movsl
inc
cmpsl
jne
cmc
xchg
inc
pusha
sbb
mov
popa
mov
jae
int3
mov
cmpxchg
jns
mov
dec
cmpsl
cmpsl
ljmp
into
lcall
inc
loopne
sbb
in
in
add
sbb
jmp
add
movsb
mov
jmp
cmp
movsl
cld
into
cmp
push
inc
aaa
sub
inc
daa
adcl
pop
inc
jns
cmpsl
push
sub
sbb
mov
adc
pushl
movsl
test
mov
cmp
cmp
fsub
mov
adc
cmp
add
dec
or
movb
imul
sub
cs
int
call
test
sbb
add
inc
sub
cmpsl
bnd
push
cmp
xchg
rcrb
sti
ss
inc
mov
xchg
jae
jmp
mov
xchg
mov
xchg
je
shrl
xchg
int
stc
add
push
cmp
pop
pusha
cmp
psllw
lret
cmp
add
shrl
sbb
jbe
aas
push
fsubs
jmp
push
aas
aad
lods
cli
dec
mov
aad
adc
cmp
adc
pop
cmpsl
std
push
movsl
xor
int3
xor
cmp
inc
arpl
inc
out
cld
push
movsl
lds
nop
rolb
adc
cmp
sbb
pop
imul
fsubrs
sti
dec
jo
cmc
pop
add
mov
dec
ljmp
std
push
sbb
xchg
out
xchg
pop
sbb
sti
dec
or
add
clc
or
jge
mov
jl
leave
sbb
movsb
je
and
sub
cmp
jecxz
adc
push
das
enter
adc
das
add
mov
pop
int
loope
sub
or
cld
mov
dec
dec
mov
push
rclb
cmp
xchg
or
jns
dec
mov
sbb
jmp
sub
mov
ljmp
jecxz
in
inc
std
ss
ljmp
mov
sbb
test
dec
int3
pushf
lods
xor
orl
jns
loop
les
or
lea
sub
sbb
mov
sub
add
inc
jnp
bound
xchg
ss
shrb
lret
inc
xchg
fld
sbb
je
loopne
lock
jnp
pop
pop
sbb
mov
dec
mov
mov
pushf
out
js
add
xchg
xchg
mov
pusha
ss
pop
jmp
daa
add
outsb
jmp
pop
mov
in
adc
sbb
adc
adc
sbb
push
push
xchg
pushf
iret
sub
xor
pop
xchg
fs
mov
movsl
jo
sub
push
scas
xor
jmp
xlat
sub
xor
clc
jl
lcall
pop
test
pop
dec
mov
mov
js
push
xchg
pop
jl
pop
out
aad
adc
sbb
mov
test
adc
push
jecxz
stos
add
aam
jb
shlb
cmc
mov
or
sub
fs
aam
ds
xchg
dec
shrl
push
les
pushf
xor
sub
cltd
jne
mov
mov
sbbb
enter
push
cmpsl
lret
fimull
hlt
jnp
shl
dec
lahf
cmp
jae
xchg
mov
or
adc
aam
aas
jns
sbb
je
mov
aam
lcall
test
icebp
xor
fs
pop
imul
dec
lock
arpl
push
jno
sub
inc
sub
cmpsl
popa
stc
mov
mov
movsl
lahf
out
out
fisubl
das
roll
jmp
push
xchg
sbb
or
fmull
add
cmp
xchg
or
lods
mov
lds
fs
add
dec
adc
fistps
jnp
out
test
sarl
das
insl
out
and
stc
test
test
sbb
mov
xchg
sub
stc
cmp
shr
inc
dec
in
scas
js
sti
push
push
ficoml
sub
mov
adc
inc
divb
cmp
andl
mov
stos
outsl
jns
push
out
popf
imul
and
adc
sbb
aam
rolb
mov
cmp
xor
mov
mov
fucomip
shrl
mov
mov
ljmp
out
insb
push
in
movb
pop
clc
cmpsb
adc
xor
in
mov
adc
rcl
cmc
or
int
jns
xorb
xchg
out
sub
gs
mov
mov
jmp
cmp
ljmp
mov
push
mov
nop
dec
in
ljmp
divl
gs
frstor
rolb
sti
jne
outsl
sbb
dec
mov
xchg
lcall
arpl
sbb
push
popf
mov
in
repnz
or
mov
jbe
mov
aas
jg
push
add
jnp
scas
aaa
sub
jns
dec
or
popa
pusha
and
mov
cmp
roll
leave
andb
call
and
test
xchg
add
in
xchg
fnstcw
mov
icebp
loop
jne
and
les
popa
clc
cmpsb
pop
dec
cs
dec
mov
ret
hlt
out
in
movsb
dec
mov
sub
out
mov
pop
fcomi
bound
iret
popa
jae
notl
cmp
je
mov
inc
and
fwait
jo
and
xor
mov
mov
inc
lcall
push
adcb
or
pop
sahf
mov
and
adcl
pop
adc
pop
inc
mov
jo
mov
decl
fldt
cmp
push
cmp
lret
test
xchg
popf
dec
out
add
cmpsl
lods
stc
mov
dec
mov
and
add
adc
or
and
div
push
stos
sbb
lahf
add
subl
sub
jne
stos
js
in
and
iret
pop
andl
mov
pushf
xrelease
int3
and
mov
mov
clc
jo
aas
popa
ljmp
sbb
lds
inc
sahf
jae
arpl
jle
push
xlat
jo
les
daa
inc
stc
aam
out
out
mov
mov
xor
adc
dec
popf
pusha
es
imul
dec
push
fwait
cmp
pusha
arpl
mov
and
xchg
ljmp
pop
jbe
or
call
inc
pop
push
fiaddl
jp
sbb
lcall
adc
cs
xor
lock
lock
mov
inc
pop
inc
loopne
push
lods
shlb
sbb
fidivs
les
cli
push
lods
fisubs
flds
dec
push
outsb
cmc
mov
lahf
stos
mov
xchg
addl
mov
cwtl
das
cmc
or
and
cs
cld
push
xor
fisubrl
lahf
sbb
cmc
push
push
lret
push
das
inc
push
fstpt
adc
add
cmp
iret
ljmp
sbb
int3
aaa
sbb
je
adc
js
or
dec
fs
mov
jp
mov
pop
dec
idivb
or
inc
rorb
pushf
and
cmpsl
adc
mov
add
sub
enter
and
or
test
std
pop
push
into
orb
loop
in
and
leave
push
in
outsb
gs
cmp
push
xor
jb
stc
adc
jmp
test
imul
js
addr16
push
lret
mov
jo
ljmp
adc
pop
enter
ret
out
outsl
mov
in
cmpb
dec
or
add
or
frstor
movsl
mov
sub
jo
test
xchg
sbb
daa
enter
pop
dec
dec
clc
cld
jle
fldz
push
hlt
lods
ret
clc
push
pop
divb
data16
cmp
les
or
add
repnz
push
fcmovnu
into
xchg
xor
push
dec
cmp
call
pushf
sub
mov
pop
inc
int3
jmp
pop
leave
push
or
lock
jno
pushf
das
sbb
inc
repnz
orb
xchg
xchg
repz
enter
add
xor
pop
add
pop
mov
nop
mov
sbb
fimull
icebp
push
int
inc
xchg
xor
jno
push
dec
push
sarb
xchg
mov
push
and
push
lods
sarb
ja
mov
scas
loopne
pop
push
and
jno
add
mov
mov
es
lods
jnp
fists
pusha
or
test
js
dec
out
mov
dec
sbb
pop
add
push
mov
mov
mov
cmc
es
sub
cmpsl
xchg
mov
stos
out
jle
cltd
lahf
xlat
aaa
cmp
xlat
add
xor
jne
bound
lret
sub
cli
jecxz
into
xorl
icebp
jo
dec
stos
jae
repnz
aaa
sti
mov
pop
sub
mov
jge
cmp
and
rorb
sbb
xchg
push
movsb
xchg
shll
pop
enter
stc
jae
aas
imul
bound
ds
xchg
cmp
push
in
cli
shll
mov
fsts
fnstsw
sbb
xor
negl
lcall
jl
adc
enter
push
push
aam
repnz
mov
jmp
push
cmp
sub
mov
cmp
lcall
insl
mov
fcompl
pop
or
leave
and
cmp
sbb
pop
mov
pop
jo
rolb
ret
test
mov
sub
cmp
in
rolb
dec
add
stos
insb
dec
xchg
lea
pop
gs
push
lcall
rclb
jp
cmc
imul
xchg
xchg
mov
sbb
push
in
ljmp
sbb
sbb
push
mov
jp
cmp
gs
lds
ret
dec
in
sahf
and
pop
add
mov
test
add
lahf
out
repz
jo
int3
pushf
and
subl
jg
lahf
jle
or
sbb
daa
jecxz
scas
jmp
fadd
lock
pusha
inc
in
mov
adc
mov
mov
dec
xchg
test
mov
fstps
sub
jns
movsb
add
inc
mov
inc
scas
stos
outsb
jecxz
cwtl
jecxz
push
fisttps
test
mov
cmp
push
pop
stc
cmpsb
adc
mov
push
adc
movsl
xlat
cmpb
cmpl
sub
lods
dec
sub
xchg
pop
mov
scas
adc
mov
jns
pop
stos
xchg
jns
hlt
out
xchg
cmp
aaa
and
dec
fdiv
daa
movsl
mov
jp
mov
cltd
xlat
mov
push
dec
sub
int
stos
and
shrb
dec
pop
popf
int3
jnp
lahf
call
mov
lods
pop
mov
subb
cmc
out
inc
jle
orl
xchg
xchg
mov
pop
fmuls
inc
push
push
pcmpgtd
xor
xchg
jb
test
sbb
sub
xor
loop
xor
ljmp
movsl
mov
or
inc
or
sub
aas
stos
movsl
in
popl
mov
mov
cmp
insl
xchg
add
lods
repz
sbb
mov
push
xchg
lock
fsub
add
mov
jge
scas
xchg
jp
mov
aam
cmp
jle
scas
jne
xchg
cmp
dec
add
pop
mov
xor
or
pop
xchg
rorl
stos
enter
fdivp
add
lcall
out
insl
mov
adc
adc
dec
aas
mov
sbb
sar
test
inc
arpl
xchg
mov
jne
aad
mov
int
inc
bound
mov
sub
iret
popf
or
jae
add
int3
mov
push
jnp
arpl
pop
sbb
imull
fwait
hlt
cmpl
xchg
xor
adc
ret
mov
bnd
mov
dec
repz
mov
sarl
arpl
aam
xor
out
and
or
jp
movsb
dec
push
movsl
pop
pop
mov
and
pop
sbbb
add
or
int3
mov
pxor
shl
fs
and
pop
mov
fucomp
cs
mov
lods
in
into
add
stc
pop
in
outsb
popa
mov
sbb
fcmovne
push
or
pop
movsl
in
adc
ss
daa
fnsave
jg
subl
sub
sbb
das
ret
leave
xor
cli
cltd
cs
mov
xchg
cmc
cmpb
out
frstor
jmp
hlt
lret
iret
jae
jno
mov
adc
lahf
xlat
mov
and
nop
fildl
mov
pop
out
push
mov
inc
cltd
pusha
das
pop
fwait
jle
adc
cmpsb
outsb
mov
sbb
imul
outsb
xchg
mov
push
bound
push
adc
or
jns
xchg
cmp
aad
cltd
sahf
jmp
sub
add
mov
pop
xlat
xchg
xchg
mov
testl
xchg
adc
aaa
gs
ret
dec
and
pop
das
cld
push
push
sbb
cwtl
lret
daa
lea
decb
sub
mov
jnp
cmp
add
daa
lds
ret
mov
pop
stos
add
inc
inc
cmpsb
cmp
cmc
mov
lea
lock
repnz
xchg
lahf
jns
scas
sbb
mov
arpl
jp
int3
fdivs
jbe
les
add
xchg
mov
out
inc
outsl
jae
mov
lcall
push
mov
mov
cwtl
mov
mov
push
xchg
pop
bound
jns
adc
jg
lahf
out
inc
mov
and
and
sahf
adc
pop
lods
addl
std
pop
lret
data16
jmp
xchg
cld
jno
xorb
adc
shlb
cltd
or
sbb
sbb
sbb
dec
inc
xchg
push
inc
sbb
ss
dec
faddp
fs
jp
fwait
out
add
sbb
pop
mov
js
dec
test
stos
stos
mov
je
int3
fisubrl
dec
loop
inc
pslld
xor
lcall
mov
loop
pusha
push
sbb
test
jge
mov
inc
test
sub
push
sti
fwait
mov
or
mov
sbb
add
out
addr16
mov
shl
jp
mov
imul
jmp
mov
dec
leave
sahf
mov
xchg
adc
testl
or
jb
and
movsl
dec
push
fsubrl
xor
mov
mov
ja
pop
jle
out
sub
add
or
jl
jle
pushw
aas
and
mulb
int
imul
loopne
fisubrl
pop
or
cmp
addb
ret
mov
imul
jno
lods
mov
push
mov
xchg
imul
fisubl
pop
les
add
fists
lods
xor
mov
inc
adc
movsl
dec
or
mov
xchg
or
insl
das
mov
and
ret
inc
into
decb
cmp
cmpsb
cwtl
sbb
loop
daa
push
inc
stos
cmp
mov
call
subl
aas
imul
and
sbb
jnp
rol
pop
jb
je
ljmp
jns
inc
pop
decb
jecxz
stos
jp
mov
dec
jbe
cmp
sbb
cmpsl
dec
fstl
inc
fnstsw
inc
addr16
cmp
push
std
add
pop
call
cld
sar
fbstp
mov
mov
in
lock
inc
fsubs
pushf
sub
push
push
cli
cmpsl
gs
hlt
pop
mov
aad
xor
out
sbb
das
lahf
mov
repnz
inc
mov
mov
imul
push
cmp
sub
add
jno
rolb
rorb
mov
movsb
inc
add
leave
pop
stos
jnp
cmc
adc
daa
in
inc
cmpsb
ja
loopne
nop
ret
adc
or
shl
pushl
jmp
jp
loopne
pop
or
repz
jp
addr16
stc
mov
adc
add
or
fsubl
ficoms
jecxz
xchg
and
sbb
dec
jl
std
leave
or
push
mov
mov
sbb
xchg
popf
push
das
shrd
jb
dec
sbb
je
dec
scas
inc
test
in
xchg
clc
adc
sub
mov
sub
push
outsl
arpl
shrb
xor
jle
mov
stc
addb
test
scas
cli
insb
in
sub
fcomip
sbb
rcll
cltd
or
stos
sub
xchg
pop
mov
loope
and
dec
fwait
dec
sbb
popf
aad
ja
sarl
lock
in
subl
push
shl
cmp
cwtl
fisttpl
mov
dec
add
xor
adc
ljmp
shll
dec
xor
adc
mov
insb
xor
push
int3
push
ud0
mov
movsb
add
mov
cli
loop
lods
mov
dec
inc
bound
iret
scas
pop
cmp
add
imul
sahf
imul
sbb
dec
jae
sub
fdivrl
jo
xor
pop
and
and
fcoml
xor
cmp
arpl
icebp
or
aaa
push
cmp
mov
out
pop
out
rcr
mov
sub
dec
mov
mov
mov
in
std
out
push
rcl
xchg
stc
lahf
adc
pop
fwait
jb
cmp
aaa
mov
divb
dec
ss
dec
cltd
xor
mov
js
outsb
sbbl
pop
and
lea
lock
shr
or
in
xchg
add
push
add
mov
and
mov
or
add
rcl
pop
into
mov
dec
addb
xchg
loopne
mov
in
aad
push
or
sbb
push
ljmp
popf
dec
jp
cli
test
sbb
mov
outsb
rolb
sub
xor
out
mov
dec
mov
mov
loop
jl
insl
ds
pop
push
pop
cltd
push
aad
pop
xchg
xchg
imul
sub
lods
sbb
cwtl
ss
cli
or
mov
test
push
push
dec
mov
test
sbb
or
mov
push
sti
xchg
adc
test
mov
and
fistpll
js
mov
sub
dec
push
and
or
cmp
repz
shlb
xor
xchg
mov
lds
in
xchg
mov
inc
sub
mov
pop
jo
sub
cwtl
and
jne
int3
mov
push
mov
xor
push
xor
xlat
lret
not
insb
enter
jp
xlat
jo
scas
outsb
push
leave
jo
loop
pop
dec
ds
mov
pusha
imul
sub
rorb
push
ds
jl
negl
jmp
xlat
pop
dec
hlt
je
mov
pop
aas
ss
mov
dec
subb
mov
pop
mov
insb
pushf
adc
jno
stc
jb
repnz
sub
fwait
ss
sbb
cmp
adc
fiaddl
repz
inc
push
sbb
xchg
mov
sbb
adc
xor
ret
lods
push
clc
adc
and
jo
popa
fcomip
or
out
cltd
hlt
sbb
call
push
xor
pop
mov
pop
sub
jo
push
lods
sbb
loop
adc
pushf
das
icebp
mov
pop
out
or
push
jno
mov
or
mov
jns
sub
inc
es
idiv
popa
mov
push
sub
je
push
inc
or
push
fldl
jl
sub
inc
mov
or
pop
and
push
push
xor
sub
push
sbb
sub
sti
or
scas
adc
push
cltd
adc
std
push
stc
aam
jg
out
cltd
repnz
dec
lret
ds
rorl
xchg
mov
mov
cmc
test
and
in
imul
add
jge
adc
add
xorb
xor
xchg
ljmp
inc
mov
push
es
movsl
stos
in
rolb
lcall
mov
and
sub
outsb
fidivl
cmp
jbe
ret
mov
aas
out
push
adc
dec
adc
movsl
clc
sarb
dec
lret
icebp
mov
pop
jecxz
mov
mov
add
dec
and
sub
repnz
mov
jecxz
xchg
mov
xchg
subl
add
movsl
push
jmp
adc
xor
dec
sub
imul
outsl
mov
cmpsl
movsb
adc
sub
sbb
movsb
jle
jmp
das
and
push
cmp
jae
fcoml
inc
fs
repnz
in
push
in
push
lock
rorl
jmp
pop
fcmovu
add
push
xchg
mov
mov
mov
jmp
xor
ret
add
clc
sub
nop
shlb
loope
shl
mov
fidivrl
out
jl
cmpsb
lcall
jp
mov
repz
cmpsl
cmp
loope
mov
dec
das
outsl
jns
lahf
cltd
jmp
jle
jp
xchg
inc
nop
add
imul
jns
push
cmc
xchg
movsl
adc
lds
xor
adc
sub
jge
jle
jle
mov
rcl
lods
pop
mov
jge
sub
fwait
jbe
je
or
jl
pop
adc
divb
fisubrs
daa
mov
jae
adc
dec
mov
jg
or
sahf
jne
sub
cmpsb
ja
sub
mov
neg
pop
mov
or
or
xchg
cmpsl
push
or
mov
ss
lods
sahf
and
ret
cld
popf
loopne
cmp
jp
sub
inc
cmpsl
rcr
and
lahf
insb
mov
jmp
out
fwait
adc
sbb
imull
sub
ja
cwtl
jae
not
outsl
aaa
data16
mov
das
fistps
cltd
sti
pusha
rorl
mov
out
cld
iret
cmc
mov
and
sbb
mov
cmp
push
inc
push
int
xor
jno
call
and
sbb
mov
add
mov
enter
inc
pop
aad
mov
adc
jo
cmp
sbb
pushf
adc
mov
xchg
clc
stos
mov
fimull
lahf
stos
mulb
or
mov
ja
cltd
insl
mov
lret
xlat
or
cs
pop
cmpsl
push
ret
scas
or
and
xor
subb
jne
jb
pop
sub
mov
jne
sub
adc
ret
int
jecxz
inc
xlat
mov
lock
add
push
addl
fisubrs
lods
mov
xor
and
inc
jecxz
pop
repz
cmp
cwtl
mov
int3
push
rep
adc
xchg
jge
ljmp
push
sahf
out
insl
pop
insl
xor
add
mov
test
lea
dec
cld
push
xor
sbb
mov
inc
inc
pop
lret
push
jecxz
out
push
loope
ljmp
popa
sub
int3
cli
xor
or
mov
xor
jbe
pop
jnp
add
movsb
jnp
lret
aam
sbb
and
int
insl
xchg
and
andl
cld
xor
leave
test
popa
shll
mov
or
fiaddl
icebp
clc
add
or
mov
jge
or
mov
inc
stc
mov
pop
mov
je
int3
dec
aad
pop
stos
rcll
loop
addr16
push
sarl
and
shll
into
mov
fistpl
adc
ds
cmp
loop
pop
stos
mov
fnstenv
ds
push
bound
inc
daa
mov
add
xor
and
stos
add
push
sbb
jb
mov
dec
mov
loopne
mov
xor
movl
add
imull
pop
pop
and
or
leave
or
or
mov
jns
xchg
sbb
or
and
in
sbb
sbb
addl
fdivs
daa
pop
scas
das
jp
mov
mov
and
cmp
and
int3
and
das
xchg
or
or
or
adcb
movsb
and
sub
filds
push
jg
int
xorl
lret
xor
or
adcl
add
lahf
in
out
out
pop
add
sbb
std
cmp
mov
add
mov
in
in
fwait
push
pop
cmp
xor
dec
hlt
lock
mov
lcall
scas
imul
cld
or
mov
mov
loop
jp
outsb
mov
addr16
xor
test
push
rorl
loope
in
mov
add
push
or
lret
inc
xchg
mov
mov
decb
mov
sbb
push
adc
jg
adc
sub
stos
sub
and
push
sub
int3
dec
mov
mov
test
sbb
mov
xchg
test
xchg
xchg
dec
fimuls
inc
jns
xchg
sub
cmp
jb
js
call
loop
dec
aam
adc
out
fildll
out
out
imul
xchg
negl
cmp
mov
sbb
es
mov
push
shrl
stc
pushf
push
call
dec
out
call
xchg
sbb
rol
std
outsb
mov
enter
jmp
nop
sub
mov
jnp
sbb
adc
loop
das
ds
inc
and
cmpsb
push
lahf
sbbb
dec
imul
test
insb
fisttps
and
inc
lret
or
in
cmpsl
insb
mov
in
test
fsub
push
mov
adc
aaa
incl
push
lods
and
int3
mov
movsl
or
sbb
lock
in
and
daa
loop
dec
mov
add
daa
and
mov
ror
test
sbb
add
popf
cmpsl
outsl
dec
clc
push
pop
jbe
or
mov
movsb
sbb
mov
ds
cmp
leave
mov
test
mov
sbbb
pop
jb
cmp
xchg
scas
xchg
inc
add
xchg
fldcw
stc
xchg
jns
test
scas
out
xchg
pushf
das
jle
fwait
insb
push
push
and
push
or
pop
in
adc
cld
popf
or
aad
stos
loope
sbb
pmulhw
xor
loope
pop
test
cld
fistps
cmpsb
inc
out
mulb
or
mov
jns
xchg
jns
or
rclb
sarl
sbb
fucomi
fwait
jle
in
and
popa
ss
adc
fwait
rcrb
push
push
mov
adc
inc
push
mov
jg
and
mov
pusha
mov
pusha
popf
pop
fnstsw
dec
and
or
jb
aaa
push
shl
imul
pusha
scas
jecxz
enter
shlb
xor
mov
divb
xor
jb
loopne
jecxz
or
adc
push
notb
pop
adc
inc
daa
jg
sub
out
sbb
hlt
mov
rcr
and
rcl
xchg
push
jl
jl
outsb
mov
dec
xchg
pop
daa
xchg
mov
mov
pop
mov
push
fsubs
xor
xor
decb
mov
push
iret
adc
push
icebp
lods
shl
jb
cwtl
jmp
inc
xchg
sti
xchg
cmpsl
inc
pop
mov
das
cmp
push
les
mulb
jne
roll
dec
in
push
inc
sub
push
mov
movsb
sub
jb
fcomip
mov
add
aaa
dec
pop
mov
repnz
jns
jne
xchg
mov
dec
je
in
pop
dec
mov
out
in
cmp
insl
cmp
or
pop
xor
cmp
inc
pop
push
jbe
and
push
movsl
rcr
stos
cmpsl
das
int3
or
or
cmpb
cmp
sarl
dec
cmp
mov
inc
arpl
jl
jg
loop
and
dec
pop
orl
pop
in
shrl
fadds
cmc
dec
xchg
pushf
or
cmp
loope
ss
cmpl
insb
loopne
shlb
add
xchg
shl
sub
push
lret
out
cmp
aad
jb
mov
pop
push
push
stos
mov
xchg
or
mov
push
adc
mov
mov
xlat
xor
mov
or
cmp
xor
mov
mov
repnz
mov
adc
mov
mov
test
lods
sub
push
fbld
pop
mull
mov
jnp
in
insl
repnz
outsb
mov
xchg
push
shl
and
pop
fmuls
dec
int3
xchg
daa
nop
mov
cwtl
frstor
sub
inc
dec
bound
out
in
mov
int3
lahf
loopne
sub
nop
adc
push
insl
sbb
les
outsl
xchg
pusha
adc
test
cmc
out
sbb
dec
hlt
mov
faddl
mov
dec
xor
int3
cltd
and
fadd
xor
enter
hlt
xchg
sbb
xchg
test
xor
mov
xchg
mov
xchg
mov
imulb
insl
lock
ljmp
push
xchg
cli
add
aaa
inc
sbb
cmp
push
mov
inc
sahf
loop
inc
sbb
outsl
scas
inc
subb
test
shll
mov
xor
jne
aas
insl
mov
pop
into
pop
and
ds
iret
popf
je
jne
pop
cmc
sub
loopne
or
movsl
mov
test
ljmp
fimull
dec
cmp
outsb
sbb
and
movsl
test
out
adc
lea
push
pop
es
pop
pop
lret
sbb
fninit
gs
pop
stos
lret
sbbb
dec
xor
sub
push
xchg
adc
fmull
outsl
mov
adc
mov
mov
movsb
adc
pop
mov
mov
jl
lods
stc
into
or
sti
fs
mov
adc
rcll
xchg
inc
xchg
mov
mov
ss
or
cmp
mov
add
mov
xchg
stc
leave
loop
sbb
scas
mov
lods
imul
cmpl
aas
mov
xor
mov
addr16
jp
ficompl
adc
or
xchg
jecxz
inc
add
popa
mov
testl
dec
cmc
push
jae
out
stos
in
pause
ljmp
mov
popa
pop
mov
hlt
cs
mov
dec
pop
sub
add
sti
sbb
les
pop
decl
mov
je
xor
mov
in
sub
movsl
pop
stos
or
fs
loopne
jns
push
ret
push
pusha
push
and
mov
jle
pop
adc
data16
and
jle
sub
sbb
cs
test
inc
stos
in
lods
lret
cmp
dec
push
outsl
push
or
sub
jecxz
pop
les
jne
in
jecxz
jp
pop
jp
divl
jl
push
decl
int
pop
sub
mov
inc
sbb
jl
pop
jae
fwait
pop
dec
push
repz
imul
xor
outsb
sbb
gs
call
test
dec
mov
inc
or
or
xchg
fbld
in
arpl
xor
dec
xor
mov
cli
stc
roll
dec
sbb
icebp
sbb
pop
pop
inc
adc
and
adc
and
je
mov
ds
std
fidivrs
push
xchg
fwait
sbb
mov
push
inc
aad
insb
into
lahf
mov
test
popa
fstps
jl
shll
pop
xchg
pop
ds
jp
add
ds
clc
leave
mov
cmp
iret
daa
stos
lods
inc
sbb
push
sti
lret
dec
push
loop
mov
ret
push
pop
lahf
stc
je
fwait
and
psubusb
sbb
jp
push
loopne
xor
sbb
lea
or
icebp
nop
aaa
mov
std
jno
mov
lret
cmpsl
in
sbb
inc
sub
mov
lahf
push
cwtl
stc
orl
lret
or
sub
add
fldpi
inc
xchg
shll
jns
jnp
cld
xchg
push
sub
sbbl
adc
cmpsb
scas
sahf
pushf
icebp
xchg
jne
mov
aas
pop
repnz
xchg
sti
loopne
aaa
fsubl
mov
push
jbe
mov
mov
pop
es
sub
loopne
xchg
mov
sub
in
xchg
fdivl
xchg
fidivrs
aad
lds
sbb
inc
imul
push
ret
inc
jns
pop
xchg
lahf
mov
xchg
inc
xchg
fstps
push
dec
xchg
addl
add
push
mov
dec
fcompl
sbb
lods
adc
in
xchg
lock
xchg
lock
mov
pop
fucomip
adc
xor
pop
mov
movsl
ja
fmul
cmp
mov
mov
movsl
push
cli
fistpl
imul
adc
out
sub
cmp
cmpl
add
rorb
std
gs
ret
add
pushf
iret
movl
sub
or
int3
mov
ficompl
addr16
outsl
cmp
mov
iret
sbb
cmp
decl
inc
shlb
push
ret
jb
nop
and
cltd
and
pop
xchg
enter
and
fwait
pslld
adc
mov
in
lret
sahf
sti
or
sbb
and
pop
xor
test
lahf
dec
xor
jp
dec
and
mov
shrb
iret
repnz
cmpsb
test
push
insl
aad
out
divl
pop
inc
jo
adc
aad
movsl
nop
leave
int3
scas
fwait
cld
or
adc
insl
ret
fcomip
stos
ret
jg
filds
mov
or
jne
lret
lods
fists
fadd
gs
scas
dec
scas
mov
mov
push
fs
xor
hlt
lea
pop
cwtl
pop
jmp
mov
fsts
push
pop
adc
push
bound
inc
roll
mov
movsb
pop
and
test
dec
xor
rcll
punpckhwd
adc
out
lcall
jp
js
sbb
lret
lcall
sub
push
lcall
xor
pop
inc
js
mov
sub
lods
lock
xchg
cmpb
cmp
notb
test
flds
inc
aas
add
push
clc
pop
sub
cmp
and
mov
mov
add
pop
and
scas
push
movlps
rep
inc
movsb
push
mov
jno
popf
jns
sub
or
jno
out
xchg
sbb
mov
stc
mov
lcall
ljmp
and
xor
mov
lods
mov
jbe
and
pushl
fsub
in
ret
das
popa
mov
dec
add
mov
in
add
into
mov
mov
in
mov
inc
pusha
sub
mov
xlat
cld
and
js
xchg
adc
dec
jp
cmp
mov
aaa
icebp
je
imul
xor
push
and
out
out
inc
ja
xchg
lcall
inc
ds
mov
in
pushf
les
test
in
push
dec
pop
xor
jns
fsubr
testb
sbb
lahf
cmp
out
push
movsl
and
pop
int3
mov
aas
fcoml
mov
xchg
sarl
rcrb
rclb
xchg
lret
xchg
enter
jns
push
arpl
jbe
add
jbe
scas
nop
out
sti
mov
xchg
cmpsl
xchg
push
insb
stos
mov
pop
xor
in
inc
xor
and
xchg
sti
jno
stos
outsl
push
sbb
jle
lcall
lock
scas
mov
mov
jg
daa
jl
imul
pop
cmc
fs
inc
sbb
mov
mov
rcl
pushf
cltd
mov
dec
lret
cmp
xchg
mov
sub
xor
adc
xchg
cs
mov
arpl
outsb
sub
jbe
inc
mov
push
mov
add
stos
ret
lret
inc
ja
mov
pop
call
mov
mov
out
xchg
outsb
push
and
subb
xor
out
cmp
notl
or
dec
jnp
sub
xor
jno
push
repnz
insl
mul
sub
mov
leave
subl
add
movsl
adc
aad
fiadds
test
movsl
pop
enter
xchg
sub
xor
int
repnz
shr
xor
mov
add
pop
jecxz
xor
dec
mov
std
mov
sbb
sahf
mov
shlb
into
push
and
mov
enter
and
push
add
pop
pop
pop
and
in
add
push
movsl
cmpsb
dec
add
add
popf
dec
xchg
push
fimull
adc
sbb
cwtl
or
sbb
nop
fsubrp
mov
insl
inc
mov
ja
mov
cmp
xor
hlt
shll
sbb
lock
aas
xor
out
mov
lds
mov
xchg
shrl
jo
enter
scas
mov
jmp
mov
scas
xlat
movsl
cmp
fsubrl
inc
adc
lahf
sbbb
mov
mov
xor
loop
jp
ret
fimull
dec
mov
mov
insl
ds
daa
mov
mov
xchg
mov
pop
xor
icebp
inc
and
outsl
jb
xchg
test
jp
cmp
dec
cmpb
popf
aad
je
xor
cltd
jo
stos
dec
test
dec
daa
mov
cmp
pushf
lods
mov
pop
je
or
rcr
les
icebp
mov
sub
jnp
xchg
add
xchg
adc
mov
das
mov
pandn
jnp
xchg
push
rorb
push
out
xor
add
sub
aaa
push
ret
iret
mov
in
shlb
push
sbb
dec
cmp
loop
pop
jb
sub
mov
sbb
mov
outsb
out
or
int3
xchg
imul
jge
push
pop
aam
subl
mov
xchg
mov
or
sub
ja
testl
pop
and
das
jecxz
cld
stos
sbb
loop
rcrl
or
mov
dec
test
jge
sbb
sbb
rcrb
dec
jne
sub
mov
sub
push
jns
inc
out
mov
xchg
js
andl
in
sub
stos
test
sbb
lds
mov
push
pop
mov
jle
jle
mov
out
je
aaa
lods
inc
and
push
std
leave
icebp
lds
test
lods
fsts
jmp
dec
aas
mov
rcll
lods
cmovne
loop
dec
jnp
pop
icebp
push
andb
pop
mov
sbb
aas
dec
es
aad
icebp
out
inc
scas
test
imul
icebp
or
ja
cld
sub
lcall
sbb
adc
cs
xchg
psubd
sub
rolb
aam
jmp
nop
and
xchg
fsubrl
push
mov
stc
mov
xchg
sbb
insl
xchg
mov
add
jnp
je
pop
sbb
and
lcall
dec
inc
loopne
xchg
pop
add
xchg
push
jg
xor
mov
cmp
push
mov
inc
int3
xor
fs
rolb
scas
dec
mov
fstenv
rorb
in
mov
mov
adc
scas
sbb
lds
mov
mov
fs
xchg
je
loop
jge
mov
fsub
sub
add
mov
cs
mov
mov
sarl
inc
ret
and
jo
repnz
sub
mov
ds
gs
cwtl
scas
into
adc
lret
loopne
or
ffreep
popf
aad
mov
push
jns
std
cmp
mov
loopne
loopne
fmuls
loop
mov
arpl
mov
xorl
add
cmp
push
xor
test
mov
push
gs
xchg
rclb
push
call
mov
mov
addr16
sub
add
add
xor
xor
pop
fsts
add
out
mov
lea
jl
add
mov
outsl
xchg
dec
dec
dec
fisttps
cmp
inc
add
iret
xchg
cmc
shlb
xor
push
push
popa
pop
leave
imul
int3
dec
xchg
idivb
jg
push
test
or
add
sti
dec
push
push
stos
mul
dec
shl
push
mov
adc
and
dec
xchg
jnp
mov
lcall
shrb
inc
pop
sahf
inc
pushf
lods
aaa
adc
out
aaa
add
arpl
lods
and
mov
inc
divb
mov
jmp
xlat
sub
xchg
rclb
inc
jo
pusha
jbe
cmpb
push
cmp
popf
cmp
xor
and
bound
mov
pop
jmp
and
mov
inc
pushf
push
xchg
push
popf
xchg
sub
sahf
mov
push
jns
cld
daa
dec
aam
out
xor
push
hlt
push
pop
test
int
shl
xchg
mov
rclb
sub
mull
pop
test
fimuls
insl
ds
sub
push
dec
lret
in
mov
fidivl
mov
cltd
adc
push
jae
mov
cld
push
aaa
mov
sbbl
adc
loopne
mov
iret
add
addr16
mov
out
in
lcall
cld
inc
leave
add
lds
dec
ret
movsl
pop
mov
ror
lds
loopne
push
cmp
push
adc
daa
test
xor
aaa
nop
iret
ret
xor
ja
test
idivb
mov
ss
and
fwait
sub
jb
lock
push
or
mov
decb
out
sti
cs
mov
dec
mov
sahf
dec
mov
in
test
mov
adc
add
cli
int3
cld
mov
stos
push
or
sub
xchg
add
repz
fmull
push
cmp
sub
xchg
xchg
outsl
mov
fsubr
popf
mov
lods
or
push
inc
xchg
sbb
es
cltd
movb
or
adc
icebp
out
cmpsb
mov
dec
daa
fistps
mov
insb
xor
bound
sbbl
add
mov
hlt
push
ret
cld
fisttps
mov
es
or
adc
cmp
in
mov
xlat
jne
cli
mov
cmp
cmpsl
or
push
mov
sbb
lret
mov
out
lcall
jae
lds
fimull
in
push
or
aaa
clc
mov
fildl
mov
jle
mov
push
mov
test
jle
adc
and
hlt
mov
les
push
push
shld
negb
popl
jne
add
jnp
orb
fwait
add
fstl
cltd
outsb
sbb
pushf
cmc
shrb
mov
or
std
mulb
pop
jmp
mov
mov
insl
mov
enter
insl
into
repz
xor
dec
pop
jle
push
jo
idivb
xchg
cmpsb
ret
push
push
les
jae
add
dec
sub
xchg
add
pop
ljmp
pop
int
inc
push
xor
fdivs
cmp
test
stos
imul
ljmp
push
mov
xor
icebp
mov
sbb
jo
pop
rolb
negb
mov
in
add
jmp
mov
push
idiv
or
dec
xchg
cmpsb
jmp
xchg
aam
cld
scas
repnz
add
jmp
lret
insl
ret
mov
sbb
rclb
call
jnp
sub
cmpb
cmp
fiadds
repnz
mov
xchg
imul
mov
out
dec
das
stos
repnz
xchg
sub
mov
mov
mov
xor
push
repz
movsl
mov
xor
add
xor
and
leave
fst
mov
inc
xor
les
repnz
imul
in
pop
hlt
dec
sbb
add
xor
dec
xchg
pop
mov
sub
push
pop
fwait
mov
cmp
into
leave
faddl
mov
aad
lods
test
cmp
lods
imul
popa
lea
fmull
rclb
or
xchg
fldl
adc
xorb
mov
jb
mov
std
or
and
movntq
mov
xor
test
ja
bound
cmp
loop
and
add
push
cs
push
in
cmpsb
stc
mov
and
rcrb
mov
mov
adcl
xchg
jle
int3
and
insl
jo
lcall
xor
mov
jecxz
jecxz
xor
adcb
ret
jmp
ds
ljmp
and
jns
mov
mov
mov
lods
or
mov
in
xchg
aad
push
pop
lcall
icebp
ljmp
dec
shlb
sbb
mov
mov
mov
out
and
in
mov
daa
ret
jns
ds
aad
sbb
repz
lret
cmp
jmp
fidivl
mov
pop
lods
out
sub
mov
adc
inc
ds
call
loopne
lea
nop
cmp
addb
xchg
jge
xlat
add
mov
fs
inc
stos
xchg
in
fwait
jns
or
ficoml
repnz
stos
sti
dec
adc
icebp
fdivrl
cltd
popa
add
adc
xor
mov
test
sub
mov
sbb
rcll
daa
js
and
push
mov
data16
fbstp
and
jmp
cmc
xchg
sub
insl
and
movsl
pop
cwtl
push
dec
cmpsl
mov
lea
mov
fstl
mov
cld
clc
adc
mov
xor
push
enter
sbb
pop
cmpsb
mov
inc
dec
loop
and
or
or
sbb
add
xor
test
sar
sbb
dec
cmp
and
dec
jb
mov
push
std
mov
inc
dec
dec
mov
and
dec
jg
and
aam
mov
mov
dec
adc
or
lock
jl
fwait
outsl
out
outsl
and
pop
mov
inc
insb
push
and
inc
add
or
leave
bound
push
adc
test
push
or
push
dec
insb
xchg
xor
pop
out
pop
xchg
div
push
push
sub
xchg
stos
and
imul
sbbb
add
pop
pop
movb
pusha
jnp
in
subb
ss
push
pop
cwtl
adc
cmp
pop
repz
push
jbe
ljmp
adc
cmpb
mov
out
xchg
lahf
inc
cmp
movsl
sarb
mov
int3
sub
push
fwait
mov
mov
xchg
mov
push
mov
mov
rclb
push
dec
sub
out
adc
and
inc
inc
xchg
das
nop
lret
cld
cwtl
mov
mov
sub
sub
adc
xchg
paddw
jp
cmp
mov
and
lahf
rclb
adc
adc
pop
fisubrs
adc
daa
subb
inc
lahf
ret
hlt
pop
repz
dec
xchg
cli
test
das
lods
mov
inc
and
out
loopne
fstps
push
jg
das
dec
sahf
shl
or
pop
enter
enter
pushf
pusha
push
push
and
cmp
test
adc
mov
imul
in
xchg
or
lcall
xchg
xor
mov
pop
outsb
shlb
push
mov
jno
push
sbb
xor
adc
adc
loope
iret
sub
data16
cld
add
jg
lock
dec
shr
jmp
loope
push
and
adc
xchg
push
lea
pop
mov
out
insl
dec
idivb
fwait
inc
dec
pop
and
clc
ret
and
lock
pop
nop
imul
gs
ljmp
add
ret
dec
mov
push
les
dec
lods
mov
xlat
lods
or
mov
or
insl
cmpsb
movsl
sub
lahf
push
pushf
mov
pushf
fstl
ljmp
mov
or
dec
addr16
pop
ss
movsb
xchg
outsb
fbld
test
jge
sbb
idivb
fcmovbe
popa
push
aad
add
mov
ret
jmp
push
popa
fdivs
lret
mov
adc
sub
jo
mov
jge
sub
or
or
aam
or
loopne
push
cmp
bound
mov
fldt
xchg
scas
iret
and
lea
dec
jb
cmp
dec
xor
repnz
cwtl
ret
lahf
ficoms
xor
jb
mov
add
andb
and
adc
movl
fisttpl
push
adc
sbb
jg
out
shlb
lods
add
and
dec
mov
jns
sar
push
dec
inc
mov
movsb
add
mov
jl
jmp
add
outsb
xor
mov
inc
cmp
insl
mov
push
jno
mov
scas
jg
fwait
add
pop
les
adc
aad
mov
fldt
push
lahf
xor
push
imul
mov
test
pop
fnstsw
nop
icebp
mov
repz
pop
xor
mov
cmc
mov
or
mov
hlt
mov
add
in
xor
jbe
outsl
jecxz
push
push
mov
int
sbb
push
mov
andl
dec
scas
movsb
push
and
cmp
pop
push
add
inc
in
ss
cmp
mov
decb
xchg
jns
test
xor
aaa
cmp
inc
jge
pushl
fnsave
xchg
adc
pop
ret
das
mov
dec
pop
xor
dec
scas
jmp
jle
ds
lret
mov
or
jp
sub
jle
mov
push
test
sbb
mov
int
leave
jl
xchg
fcompl
pusha
mov
ds
push
mov
popf
pop
aaa
pop
mov
leave
shlb
pushl
mov
insl
pop
and
inc
mov
je
mov
dec
sbb
icebp
or
mov
xor
test
sub
push
mov
clc
pop
inc
ss
add
movsl
hlt
adc
xchg
addr16
mov
xor
cmpsl
jle
aaa
sbb
aad
pop
jle
push
sub
sub
mov
mov
cld
xchg
jecxz
sahf
repnz
pop
inc
shrl
cs
jb
push
test
out
es
sbb
int
loope
add
dec
icebp
cmp
repz
or
add
or
imul
in
sbb
into
enter
cs
add
xor
xor
je
test
push
adc
fistl
aam
dec
lods
adc
inc
jns
jbe
ret
mov
clc
ret
pushf
fneni(8087
out
inc
popf
jb
adc
lods
add
xchg
popa
out
in
jl
fcompl
push
mov
mov
test
pop
fldenv
repnz
push
pusha
add
push
or
lahf
sbb
ret
in
sbb
out
dec
xchg
add
jle
mov
mov
aam
js
mov
lcall
addr16
pop
inc
enter
mov
std
popa
sub
pop
add
jg
test
cwtl
jge
mov
stos
movsb
sbb
fists
les
lea
popl
dec
and
dec
jge
xlat
or
push
mov
mov
pop
add
jae
lock
xor
insl
in
mov
ffree
pop
mov
cmp
fisttpl
sarl
jmp
dec
fsubs
mov
mov
cmpsb
pop
and
jmp
adcb
int
dec
fwait
repnz
jmp
call
mov
jmp
inc
jle
xor
fsts
subb
ds
ljmp
int
in
ret
fsts
dec
mov
insl
sarl
das
jg
inc
xchg
jmp
in
cmpsl
es
xchg
out
out
pushf
jmp
addl
push
dec
out
in
adc
cld
sbb
pop
mov
sbb
les
fwait
sbb
mov
inc
mov
mov
or
lcall
loopne
dec
lods
sub
xchg
pop
mov
std
and
nop
mov
or
inc
sarb
add
mov
add
sbb
out
sub
test
xor
bound
fistpll
rcr
xchg
shlb
push
je
lret
and
fcoml
jno
dec
and
xor
outsl
dec
cwtl
jo
push
dec
mov
xchg
jae
dec
sbb
and
and
mov
cmp
or
mov
aam
rorb
push
loop
insl
rol
cmpsb
and
jecxz
xor
cmpsb
les
in
pop
jl
mov
mov
fidivrs
sub
cmp
aam
cmp
test
roll
pop
sahf
cwtl
out
inc
adc
adc
loopne
mov
loopne
cs
xchg
stos
xchg
das
jecxz
lret
enter
push
popa
push
push
addr16
test
in
daa
mov
ss
fnsave
add
scas
shrl
xchg
adcb
cmp
adc
push
jae
getsec
dec
inc
andb
push
add
dec
push
adc
push
daa
imull
in
int3
cld
jo
xchg
lahf
xchg
mov
mov
lret
dec
mov
movsl
fadds
stc
adc
mov
cmp
inc
push
cmpsl
cmp
ret
add
fnstenv
dec
sub
mov
bound
push
push
je
aam
or
dec
popf
sbb
dec
add
das
dec
mov
ja
mov
and
dec
into
pop
imul
icebp
fisttpll
mov
pop
fsubl
inc
adc
dec
inc
mov
cli
and
push
xchg
outsb
or
cmp
aaa
inc
enter
and
xor
xor
popf
jl
push
sub
adc
mov
dec
jmp
bound
scas
js
lds
daa
out
aas
sahf
push
cmpsl
jl
cmpsb
push
sbb
sub
insl
and
pop
push
jmp
jg
mulb
mov
ljmp
pop
push
xor
out
nop
push
sub
mov
sbb
fstps
mov
mov
mov
test
mov
rorb
movsl
mov
adc
pop
mov
sbb
mov
mov
pop
int3
call
dec
sub
loopne
cs
add
out
add
push
sub
ljmp
or
ljmp
or
pop
filds
es
mov
movsl
sub
cli
xchg
cmp
sbb
mov
cmpsl
sbb
sbb
dec
stos
shl
sbb
out
jp
popl
push
sbb
mov
cmpsb
push
mulb
movsb
lea
dec
push
shll
mull
std
push
loop
jl
jbe
pushf
push
mov
jp
or
jne
enter
adc
push
cmc
mov
imul
cmp
imul
pushf
imul
or
gs
pop
cmp
loopne
sbb
and
hlt
mov
mov
fisubrs
cmp
add
lcall
mov
aaa
in
adc
inc
push
mov
mov
rcll
push
test
loope
sub
fcomps
inc
fildl
dec
push
rol
scas
iret
mov
add
scas
and
jge
jg
pop
stos
test
pop
jne
xor
outsb
out
mov
scas
inc
push
cmp
sbb
pop
add
xlat
scas
dec
mov
pop
xor
push
pop
in
adc
dec
lods
cmp
roll
aam
outsb
out
in
std
dec
dec
es
xchg
icebp
xor
add
lcall
ficomps
cmp
sub
mov
pop
cmc
jns
cmpsb
xor
xor
mov
add
add
popa
enter
outsl
mov
cmp
sub
in
sub
add
inc
or
adc
xchg
insb
movsb
imul
int3
lea
mov
out
fwait
pop
mov
popa
sbb
adcb
bound
xchg
and
fcompl
lea
call
imul
pop
hlt
mov
sarb
daa
add
inc
pop
pusha
lret
inc
stc
icebp
inc
je
mov
mov
dec
outsl
and
and
loope
insl
mov
jbe
lcall
test
dec
insl
fstps
das
xor
sub
rcrl
ja
pop
mov
lds
stos
adc
add
insb
sti
push
dec
adc
mov
jmp
or
xor
xchg
mov
mov
std
ljmp
and
push
ja
imul
mull
adc
pusha
popa
movsl
or
inc
in
jno
insb
sub
repnz
je
pushf
test
mov
ret
test
fstl
lret
cwtl
enter
xchg
loope
xchg
push
call
fildl
shll
in
mov
cmp
popf
sbb
inc
popl
ljmp
xor
jg
cld
mov
outsl
mov
mov
lret
lahf
adc
jmp
push
adc
push
test
cmpsl
mov
dec
xor
mov
ds
mov
push
loope
jo
pop
and
pop
and
fwait
dec
into
xchg
sahf
or
jg
les
fsubrl
mov
push
sahf
pop
inc
jae
cmp
movsb
pusha
add
dec
pusha
outsl
iret
cmp
adc
ret
jb
int
bound
cli
jge
xchg
shrb
cmp
sub
pop
lahf
mov
mov
mov
jb
stos
push
scas
fisubs
loope
lds
jns
popf
arpl
and
test
dec
xor
icebp
pusha
or
sub
dec
push
in
cli
js
jmp
je
lea
pop
and
add
push
out
iret
xor
fcompl
xor
xchg
lret
xchg
shrd
outsl
inc
sub
clc
cmp
cli
aaa
xor
mov
pop
xchg
aad
aad
push
and
repz
and
xor
mov
call
mov
push
mov
mov
jnp
add
std
movsb
jl
jae
scas
jmp
or
push
je
out
out
cmpsl
cmp
xchg
add
pop
jne
mov
add
cmp
inc
mov
out
xchg
or
mov
pop
dec
mov
pop
lcall
jno
jne
daa
cmp
dec
mov
imul
std
ret
add
sub
mov
xchg
adc
scas
cmpb
orl
pushw
and
cwtl
pop
jge
xchg
add
popf
mov
aad
lock
sbb
and
cmp
xchg
adc
xor
shr
dec
or
insl
jge,pn
adc
adcb
or
loopne
xor
daa
push
in
jp
sub
push
jge
cmp
pushf
or
adc
data16
sbb
call
mov
mov
jl
aaa
addr16
mov
push
pop
test
shll
mov
or
jns
jae
ret
and
imul
xchg
xchg
jbe
aam
pop
lock
bound
xor
pop
fiadds
into
imul
sub
sub
adc
or
popa
fistps
xchg
add
leave
add
popa
sbb
xchg
add
sbb
mov
js
inc
add
out
out
ljmp
bound
pop
mov
sbb
test
mov
push
mov
in
sahf
out
cmp
push
fistpll
notb
lcall
lea
clc
aaa
mov
test
fimull
sub
subl
inc
loop
xchg
popa
dec
test
loop
dec
add
and
rolb
mov
mov
loopne
subb
dec
shl
je
inc
mov
call
xchg
ja
jno
jecxz
pop
rcrb
aaa
mov
or
mov
jb
fdivrl
out
pusha
mov
arpl
add
shl
lahf
ret
shll
std
rorb
imul
and
pusha
push
es
iret
inc
daa
fcompl
repz
xchg
ud1
mov
xorb
pop
pop
jnp
test
sub
call
imull
push
fisubrl
pop
lcall
movsb
in
dec
xor
aam
gs
push
movb
stc
int3
xor
aas
sub
mov
jp,pt
lea
les
shlb
xchg
sbb
sbb
inc
out
and
inc
mov
adc
fmull
mov
sbb
movb
movsb
test
movsl
inc
pop
dec
push
adc
push
adc
lcall
pop
lahf
rcrl
ss
or
add
inc
add
mov
sbb
jge
add
scas
push
inc
cwtl
push
lock
sub
cmp
jbe
stos
movsl
xor
orl
mov
cmpsb
int
xor
scas
jmp
sub
std
adc
sub
lods
lock
or
movsb
push
mov
mov
sub
pop
test
sbb
dec
shll
movsl
add
das
add
scas
out
into
xchg
lret
std
filds
pop
popf
aam
int3
xchg
lock
jp
pop
dec
sbb
addr16
or
std
lret
dec
imul
jns
pushf
cmp
stos
inc
jl
pop
add
push
push
push
sbb
movsl
sbb
mov
mov
in
or
sbb
imul
cmp
jl
inc
scas
rorb
test
add
popf
and
jmp
lret
jns
adc
and
rolb
mov
jb
inc
rcrl
pop
and
mov
xor
je
pop
stos
add
jae
aas
insl
sbb
into
jg
test
loop
push
testb
mov
and
jp
pop
sbb
xchg
fisttpl
lods
mov
loope
xlat
pop
add
add
push
jmp
in
and
fs
fstpt
mov
or
insb
popa
lock
mov
xchg
inc
sti
cld
cmp
push
aad
icebp
test
jne
sub
push
ja
shl
dec
cld
inc
sub
and
arpl
js
in
cmp
push
sub
jge
pop
ljmp
ss
inc
jnp
adc
lods
cmp
jae
ret
cmpsb
mov
pop
mov
das
aam
or
inc
popa
repnz
pop
jmp
and
dec
adc
hlt
mov
fstps
jecxz
insb
mov
dec
pop
lret
in
leave
cwtl
out
daa
stc
adc
adcb
mov
fs
cld
jg
add
xchg
aas
test
mov
jnp
iret
leave
les
test
sahf
lcall
adc
scas
mov
inc
mov
pusha
movsl
fildl
popa
adc
mov
push
jge
cmp
xor
jnp
ucomiss
xor
loop
or
aad
shlb
pop
arpl
pop
subb
inc
xchg
cmpsl
ljmp
add
adc
jmp
aas
cltd
jecxz
jge
in
lret
or
movsl
cmpsb
pop
mov
or
lcall
pusha
das
xchg
loopne
sub
jno
dec
in
and
pop
rolb
mov
jmp
add
ljmp
insl
jns
in
or
cmp
add
into
ljmp
aad
lea
fmull
dec
dec
cmpb
dec
fs
jbe
sbb
jl
lods
pop
shrb
mov
scas
or
or
push
cmpb
mov
mov
push
xchg
iret
add
jmp
xorl
jg
and
fwait
inc
xchg
mov
loop
outsb
mov
mov
pop
rcrb
and
inc
mov
mov
lea
sbb
es
inc
or
xlat
sbb
jns
cmp
add
inc
mov
call
std
pop
das
scas
jle
adc
repnz
xor
rol
fbstp
xchg
pop
and
jnp
repnz
adc
pop
push
imul
dec
ror
std
and
dec
mov
into
xchg
or
pop
jne
jmp
sub
xor
pop
adc
jg
repz
addr16
mov
sbbb
add
xor
push
je
xor
add
jne
outsb
jb
movsb
std
test
loopne
xchg
mov
fsubrl
jnp
sub
mov
push
inc
repnz
push
rorb
scas
leave
outsb
cmp
loope
int
mov
andb
adc
scas
das
sub
bound
push
sub
les
xchg
xlat
iret
test
sub
inc
lock
inc
es
jne
punpckldq
sbb
lock
cs
jle
stos
sbb
mov
mov
cwtl
aaa
mov
add
sub
cmc
push
shll
or
pop
sub
fcompl
aas
cld
fstps
push
scas
push
mov
rorl
pop
test
int
hlt
mov
movsb
mov
cmpsl
push
sbb
sbb
inc
arpl
sarb
add
mov
nop
mov
lods
vpsrld
inc
or
cmp
outsl
sbb
hlt
push
leave
xchg
push
ret
dec
movntps
xchg
add
inc
cld
shrb
fwait
lret
jns
sub
roll
inc
subl
test
les
andb
dec
inc
push
std
stc
fidivs
test
loope
fdiv
dec
xor
pop
enter
icebp
stos
imul
inc
push
aas
and
out
fisubs
mov
cwtl
mov
js
enter
jl
in
xchg
push
push
fdivp
scas
out
or
sbb
mov
imul
xchg
dec
ds
mov
jle
pop
pop
icebp
add
das
mov
fldt
ret
test
mov
jle
mov
icebp
ds
sub
and
jo
mov
adc
rorb
aas
enter
mov
sub
add
mov
filds
push
jmp
and
dec
test
lock
or
cld
outsb
lea
lcall
xor
lock
pop
fwait
jge
inc
add
mov
inc
pop
mov
push
outsl
jo
inc
mov
jecxz
cltd
test
testl
sub
insb
sub
mov
adc
daa
xchg
xor
jbe
jge
jnp
jmp
sbb
faddl
mov
call
sbb
or
repnz
gs
add
push
jae
sub
xor
jl
or
leave
mov
push
push
dec
cs
jg
test
or
mov
push
and
int
fldenv
pop
out
push
inc
incb
jge
push
aas
fs
jle
ret
adc
test
frstor
xchg
or
push
js
testb
xchg
add
and
jns
sub
and
and
mov
aaa
insl
loope
cmp
lods
das
xchg
mov
lds
int
std
test
fwait
jp
jns
mov
mov
arpl
mov
sbb
fcmove
lret
icebp
xchg
cmp
loop
int3
ret
jmp
push
dec
pop
xchg
mov
in
adc
cmpsb
xor
pop
jne
test
mov
adc
mov
loop
aad
sub
fcmovu
pop
ljmp
jno
or
mov
ficomps
imul
xchg
lret
pop
jbe
jg
test
add
mov
push
jmp
jge
xor
lea
lods
rcll
xor
bsf
xchg
lret
aaa
push
pop
adc
data16
xchg
mov
mov
sarl
xchg
mov
fildl
fwait
or
cld
add
lock
lret
dec
jno
dec
mov
push
das
adc
jb
and
pop
adc
cwtl
test
sbb
push
hlt
les
sar
pop
das
fstpl
lcall
sbb
dec
mov
loop
nop
sbb
out
or
stos
and
push
jge
divb
clc
xchg
jle
mov
leave
mov
movsb
out
inc
in
jl
bnd
popf
inc
fstp
lock
outsb
filds
mov
xor
cmpsl
pop
outsb
jl
push
sbb
dec
xor
dec
stc
lods
sbb
jae
ljmp
mov
cld
das
fisttpll
test
sub
icebp
cmp
xchg
movsb
lcall
sahf
aam
sub
sbb
jl
dec
jmp
and
inc
sub
dec
inc
add
xor
stos
or
dec
fimuls
outsl
mov
test
fxch
ret
dec
jno
or
mov
sbb
cmpl
je
sbb
dec
int3
mov
mov
lods
bound
ficoml
add
xchg
dec
push
adc
into
out
jge
push
push
xor
cs
xor
or
call
test
pop
mov
sbb
push
sbb
fbld
andb
por
pop
inc
fwait
aam
cli
pop
movsl
popf
sub
fwait
push
pop
loope
cmpsb
xor
sbb
aam
mov
shl
or
cwtl
jb
ss
adc
fbstp
or
inc
jge
pop
das
mov
sub
inc
sub
add
jo
daa
add
inc
test
lahf
idivb
and
inc
pop
mov
add
dec
or
push
loope
outsl
icebp
in
lcall
popa
cwtl
mov
call
je
push
scas
ret
jmp
stos
xchg
xor
cmpl
cltd
and
or
jo
xchg
push
add
outsl
clc
testb
sbb
fldenv
daa
cmp
push
jnp
push
mov
sbb
mov
data16
jo
repz
inc
leave
add
adc
cmpsl
sub
ror
pop
cmp
and
pop
lea
push
shll
lods
adc
loop
adc
pop
fnstsw
mov
bound
mov
rcll
mov
cmp
stos
cmpsl
mov
lret
or
outsl
jg
xor
pusha
fnstenv
jbe
mov
orl
pop
xor
andl
add
nop
fldcw
repz
in
aas
adc
test
pop
add
in
mov
mov
xor
dec
popa
pusha
scas
mull
sahf
mov
insb
loop
xchg
in
icebp
dec
adc
arpl
mov
lock
ficoml
inc
test
mov
ficomps
inc
adc
jp
push
fsubs
and
scas
cmpsl
pusha
scas
dec
jmp
loopne
and
xchg
pop
in
push
loopne
mov
adc
dec
arpl
data16
int3
adc
out
mov
iret
dec
mov
lcall
jge
fisubs
pushf
adc
out
adc
nop
push
loopne
mov
add
inc
push
mov
cmp
js
in
push
arpl
jle
sbb
or
pop
shll
xchg
pop
fisubrl
mov
lret
mov
lods
and
shl
mov
jle
dec
xchg
popa
mov
cmpsb
pop
push
sub
movsb
pushf
in
pop
mov
mov
out
cmp
push
ds
xor
xchg
ja
mov
inc
aas
in
adc
xchg
shl
je
adc
jmp
pop
icebp
push
ds
mov
and
xchg
scas
mov
inc
cmc
lahf
jg
and
rcll
adc
adc
lret
jns
sub
loop
movsl
iret
adc
dec
pop
adc
mov
divl
jbe
lock
mov
jae
mov
iret
xchg
das
mov
nop
mov
mov
es
shl
decl
mov
jmp
test
arpl
aaa
lods
test
ret
xchg
lahf
jmp
push
aaa
xor
fwait
lcall
xchg
mov
add
ljmp
in
js
jbe
jle
imul
jle
mov
addr16
aad
in
inc
and
jns
and
insb
sbb
or
push
and
bts
shll
lea
adc
pop
add
push
scas
test
mov
sbb
addr16
add
int3
mov
divl
arpl
mov
pop
adc
or
add
out
inc
push
iret
jno
dec
loop
push
lcall
jecxz
shlb
rcrl
fldenv
pop
cmpsl
dec
push
mov
add
adc
leave
jo
vpsubb
inc
rol
mov
imul
push
mov
xchg
or
xor
int
test
data16
mov
inc
jb
push
xor
or
cmp
add
sub
call
cs
repz
or
lea
xlat
pushf
fs
ds
xchg
mov
inc
mov
cmp
dec
pushl
scas
std
mov
idivl
in
addr16
in
xchg
xor
in
xor
lods
inc
add
mov
arpl
lods
adc
push
mov
test
mov
inc
cwtl
cmp
jno
mov
repz
popl
std
mov
ret
xor
dec
daa
sub
inc
fbld
into
jg
mov
dec
popf
dec
aas
pop
iret
mov
aaa
jb
aas
std
push
or
stos
leave
and
fcoml
add
adc
push
push
out
arpl
mov
pop
insl
or
inc
insb
mov
int
fwait
sti
loope
and
cmp
mov
ret
stc
and
inc
outsb
test
cwtl
ret
les
xchg
mov
gs
lods
out
jp
out
jle
dec
mov
mov
adc
rolb
scas
mov
ja
mov
inc
mov
jnp
xchg
imul
inc
jb
pop
fbstp
cwtl
imul
mov
xchg
add
inc
por
mov
rclb
ss
xlat
mov
test
adc
ljmp
lds
aam
push
jge
rolb
or
mov
aad
fnop
mov
mov
dec
cmp
sub
lahf
loope
das
dec
dec
dec
pop
lahf
test
or
fidivl
outsb
iret
lret
jg
sarl
pop
es
add
ffree
cmp
popa
in
fsubp
xchg
icebp
jne
scas
loope
fwait
in
and
xchg
dec
inc
test
ljmp
lods
mov
dec
add
out
jmp
popa
outsb
call
cld
les
jns
daa
mov
push
rcll
sbb
xor
pop
int3
cltd
mov
int
push
mov
jg
in
arpl
stc
das
shr
fcmovnbe
inc
sbb
dec
adc
pop
dec
mov
cltd
stos
xchg
push
fwait
lret
jnp
sbb
addr16
mov
push
mov
lret
je
xor
stc
stos
scas
mov
xor
jne
push
jl
in
movsl
dec
mov
dec
gs
mov
ds
lcall
or
bound
roll
divb
pop
adc
movsb
frstor
push
mov
fsubr
divb
aas
test
push
scas
ljmp
test
jb
mulb
andb
out
jae
arpl
mov
out
cmpsb
data16
enter
lods
ljmp
fadd
pop
mov
dec
push
bswap
lret
aad
pop
sbb
clc
fisubrl
popf
fs
xchg
mov
jnp
and
jo
fs
stos
jnp
or
pushf
pop
adc
xchg
out
sbb
push
lds
ljmp
jl
sbb
dec
sub
ja
popf
movsb
xor
pop
and
in
sub
dec
mov
adc
pushf
pop
subb
pop
push
sbb
mov
cld
inc
sbbl
sahf
aaa
push
mov
cmp
mov
lahf
and
mov
pop
stos
add
imul
rorl
and
mov
jbe
dec
adcb
sub
insb
das
ljmp
or
mul
xor
pusha
sub
xor
roll
add
ljmp
jno
popf
dec
mov
aas
jge
mov
mov
stc
pop
cli
jl
jne
fs
push
mov
inc
mov
or
movsb
sub
xchg
jb
push
scas
mov
dec
call
arpl
into
popf
xchg
pop
insb
jns
add
wrmsr
push
inc
in
scas
push
cmpsl
xor
ja
cltd
imulb
lea
push
sbb
aam
xor
test
lock
aad
adc
out
xchg
cwtl
jns
mov
jmp
iret
adcl
or
xchg
xchg
push
mov
fimuls
ss
push
arpl
mov
js
pop
or
leave
sub
adc
imulb
sub
dec
fcomps
adcl
push
int
push
dec
sub
jecxz
jg
adc
stos
out
dec
in
dec
jle
incb
fs
or
push
xor
ljmp
jp
add
subb
aas
dec
inc
sbb
dec
shrl
mov
mov
pop
lods
ret
fs
lcall
jmp
or
mov
jecxz
mov
fs
frstor
mov
int
and
mov
ds
mov
mov
xchg
xor
scas
mov
inc
jns
mov
aam
jl
jb
dec
lret
lock
ja
sub
fnstenv
in
sbb
mov
xchg
dec
sub
xchg
mov
mov
mov
clc
ljmp
dec
push
xchg
iret
pop
nop
pusha
adc
xor
loopne
shrb
fwait
js
mov
push
dec
mov
mov
jo
inc
mov
je
jne
jmp
xchg
xchg
es
gs
mov
inc
imul
mov
xchg
xchg
scas
cmpsl
mov
mov
inc
sbb
outsb
sub
mov
inc
dec
repz
mov
insb
fisubrs
stos
fsubrl
ficoml
xchg
add
popf
pop
push
pop
scas
or
int
or
cmp
callw
push
insb
ret
fmull
or
shll
xchg
jnp
cmp
out
leave
add
push
xchg
cmp
and
test
test
sub
adc
js
mov
mov
les
mov
lret
ficomps
push
rorb
and
xorb
stos
in
sub
adc
sbb
mov
jbe
enter
cmp
push
imul
scas
bound
movsb
loope
ret
inc
rolb
sbb
insl
andl
push
mov
add
add
jle
hlt
cmp
or
sbb
repz
mov
inc
clc
add
and
jnp
shl
pop
mov
bnd
je
lock
mov
in
cld
loop
dec
lock
push
icebp
add
jno
push
ret
push
enter
dec
daa
add
sarb
jmp
stc
mov
adc
dec
pop
add
loop
add
test
sbb
insl
inc
fadd
jg
pusha
dec
xor
xchg
or
pop
cmpsl
dec
es
nop
cmpsl
mov
dec
inc
inc
push
shl
lcall
ds
rclb
xor
scas
push
fwait
aam
or
repnz
mov
cmp
test
popa
call
jp
push
inc
nop
sbb
xlat
insb
or
cmpsl
xor
test
push
aad
movb
in
hlt
mov
mov
lret
mov
mov
hlt
lods
mov
je
shr
pop
mov
aaa
cltd
faddp
mov
sarb
pushw
cmp
arpl
outsl
fwait
adc
cli
movsl
lahf
cmpl
jmp
push
xchg
out
xchg
cmp
lret
adc
dec
in
lcall
and
in
push
inc
pop
call
cmp
inc
mov
mov
mov
adc
outsb
fdivrp
stos
mov
jo
jge
test
test
inc
adc
lods
fstl
and
aad
jecxz
clc
sub
xor
and
and
sbb
add
stos
cmp
or
adc
insl
mov
xchg
push
or
inc
add
repnz
add
cmp
xor
ret
jp
arpl
push
xchg
pop
pop
mov
mov
dec
or
add
pop
popl
std
imul
push
inc
sub
cld
jp
sbb
sub
push
mov
stc
mov
xor
ja
jg
adc
lds
push
mov
xchg
cmp
fsubp
jecxz
pusha
insl
hlt
add
lods
and
sbb
test
mov
sar
xor
dec
outsl
and
flds
imul
or
popf
shlb
sarl
lds
xchg
cmp
or
mov
sub
push
movsl
inc
test
fsubl
jp
mov
outsl
mov
out
lods
rorl
mov
loope
sub
push
xor
fwait
ret
mov
jb
push
arpl
sub
rorb
movsb
mov
scas
add
inc
in
cmpb
ret
jae
sub
pop
and
cmp
cmp
jp
mov
test
pop
sub
push
jmp
xchg
into
mov
shll
adc
xchg
outsl
cmp
js
out
enter
xor
or
xor
cmovb
inc
test
xchg
in
pop
push
addr16
roll
adc
mov
mov
aaa
repnz
mov
lods
push
lods
xchg
clc
pop
ss
enter
push
sub
inc
lret
pop
or
mov
jmp
data16
sahf
fiadds
push
dec
ret
dec
fdiv
push
dec
pop
out
loope
outsb
roll
and
es
push
mov
aam
loope
enter
imul
sbb
or
adc
add
into
push
add
divb
push
add
cmp
ljmp
push
cs
or
fistps
xchg
xchg
mov
xor
xor
stos
scas
fcmove
and
xor
sub
push
bound
or
push
pop
es
mov
or
nop
xchg
add
cmp
pop
in
push
inc
mov
lcall
xchg
inc
aam
push
sub
mov
popa
cmp
mov
test
push
cmp
inc
dec
repz
mov
ds
mov
sub
sbb
cli
iret
and
pop
dec
inc
ret
push
inc
ret
es
jg
mov
rorl
cltd
xor
rol
pop
dec
cmp
mov
dec
mov
decb
pop
insl
jb
stos
xchg
jns
loop
adc
pop
fwait
lds
pop
xchg
dec
daa
sbb
jno
jns
push
xchg
pop
orl
enter
mov
aaa
mov
jmp
leave
imul
iret
cs
jb
and
movsl
xchg
test
nop
and
sbb
imul
loop
xchg
cvttps2pi
imul
mov
pop
cmc
pop
arpl
push
pop
mov
jb
stc
cmp
mov
and
mov
mov
sbb
mov
mov
push
or
repnz
xlat
aad
loope
cmp
test
cmp
pop
movsb
dec
inc
pop
int
into
pop
mov
mov
sarl
roll
and
cmp
subl
xchg
mov
jmp
push
movsl
sbb
add
pop
mov
mov
xchg
push
sbb
test
mov
cmp
push
xor
pop
mov
stos
inc
mov
xchg
aam
mov
push
testl
sbbl
imulb
mov
jmp
xor
aad
sub
push
inc
mov
mov
xor
movsb
cmp
push
cltd
push
cwtl
mov
xlat
sbb
stos
repnz
or
lock
dec
mov
subl
cmp
js
insb
nop
fisubrl
push
mov
sbb
in
loopne
sarb
mov
mov
cmc
or
jp
lret
shl
jb
test
ss
jno
shrb
out
gs
lahf
gs
sub
pusha
and
adc
sbb
cs
in
cld
lds
ret
dec
loopne
push
repz
push
add
cli
cli
pop
mov
jp
push
out
inc
pop
push
cmp
jno
lea
xor
xor
ljmp
test
adc
mov
sbb
shlb
aad
ret
aam
pop
push
xor
mov
cli
xchg
xor
pop
cld
andb
dec
insb
sub
outsl
jno
sbb
fadd
loop
lds
xchg
mov
and
rcrl
jb
out
scas
mov
rorl
popf
jmp
push
mov
mov
imul
aad
add
fcoms
pop
les
adc
mov
leave
mov
push
jns
adc
jb
pop
sbb
lret
pop
or
loop
mov
int
xchg
mov
xchg
in
xlat
add
lods
popa
hlt
adcl
testb
or
pop
sbb
aas
sbb
push
dec
jnp
aas
in
clc
hlt
shl
shll
stos
jno
lock
imul
jmp
aam
shl
leave
inc
mov
iret
or
jg
sub
pop
cmp
jae
lods
call
jo
outsl
stos
add
test
pextrw
lods
sbb
push
and
mov
fcom
and
dec
pusha
sub
ss
nop
lea
lea
subb
fisttpll
cmp
adc
mov
ret
outsb
addl
xchg
or
sbb
jno
pop
imull
mov
inc
mov
xor
notl
lds
push
int
jno
pop
or
cltd
sbb
cltd
mov
mov
inc
push
outsb
or
test
sub
test
adc
cmp
lret
je
add
pushf
xlat
jle
push
adc
call
push
and
pushf
cmp
mov
fdivp
sti
shll
inc
xchg
xor
into
inc
mov
cmp
scas
cmp
add
aas
aaa
adc
mov
stos
sbb
jl
popf
decl
push
xor
or
mov
mov
getsec
clc
mov
pop
ds
inc
ret
popa
inc
push
sti
sbb
or
dec
mov
xchg
jecxz
aam
sub
in
cmpsl
adc
imul
adc
xchg
jne
xor
cli
and
mov
subl
fidivs
push
cmp
test
cmp
in
insb
cmp
push
xor
xchg
pop
cltd
js
into
into
scas
pop
