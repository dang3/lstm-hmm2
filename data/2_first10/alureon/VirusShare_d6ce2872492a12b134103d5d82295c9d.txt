push
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
xchg
call
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
push
sub
mov
sub
mov
push
call
pop
pop
pop
pop
mov
mov
mov
xchg
add
mov
mov
mov
mov
call
mov
mov
mov
mov
xchg
push
mov
pop
sub
movl
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
sub
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
xchg
call
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
xchg
push
mov
pop
mov
mov
mov
mov
sub
mov
mov
pop
cmp
je
arpl
pop
add
push
mov
pop
sub
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
push
mov
pop
mov
mov
mov
push
mov
pop
mov
push
mov
pop
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
xor
mov
mov
mov
xchg
inc
add
cmp
jb
jmp
push
inc
add
nop
inc
add
sahf
inc
add
stos
inc
add
mov
inc
add
in
inc
add
sti
inc
add
or
add
inc
add
sub
add
aas
inc
add
push
inc
add
pop
inc
add
outsb
inc
add
addb
xchg
inc
add
mov
inc
add
lds
add
inc
add
in
add
repnz
add
add
inc
add
sub
add
inc
add
inc
inc
add
pop
inc
add
addr16
add
jbe
add
mov
add
add
push
inc
add
nop
inc
add
sahf
inc
add
add
add
faddl
add
add
add
ljmp
inc
add
mov
add
add
incl
inc
add
mov
add
add
jnp
add
nop
inc
add
sahf
inc
add
stos
inc
add
mov
inc
add
in
inc
add
sti
inc
add
or
add
inc
add
sub
add
aas
inc
add
push
inc
add
pop
inc
add
outsb
inc
add
addb
xchg
inc
add
mov
inc
add
lds
add
inc
add
in
add
repnz
add
add
inc
add
sub
add
inc
add
inc
inc
add
pop
inc
add
addr16
add
jbe
add
mov
add
add
dec
add
gs
je
inc
imul
jns
add
insl
push
jns
je
insl
dec
outsl
arpl
gs
add
je
jb
arpl
jae
int
inc
imul
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
imul
imul
popa
jae
inc
jb
outsl
jb
imul
gs
outsl
arpl
push
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
jb
outsl
jb
je
inc
insb
popa
jae
add
push
jb
arpl
jae
gs
jo
lahf
add
je
jb
arpl
jae
add
push
je
dec
popa
outsb
fs
gs
add
je
push
push
jb
outsl
jb
je
add
add
je
imul
popa
je
add
add
je
gs
imul
insb
outsl
bound
inc
insb
insb
outsl
arpl
and
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
xor
dec
jae
popa
insb
imul
add
dec
outsl
arpl
push
outsb
insb
outsl
arpl
outsl
add
outsb
inc
jbe
outsb
je
add
outsl
jbe
inc
imul
jns
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
jbe
outsb
je
or
push
gs
imul
bound
gs
add
insb
gs
dec
add
insl
imul
jb
popa
add
insb
jae
gs
popa
insb
jne
add
push
imul
insb
insb
outsl
arpl
addb
popa
imul
insb
gs
bound
arpl
add
imul
insb
gs
add
je
inc
imul
gs
xor
cs
insb
add
add
int3
inc
add
fiaddl
add
inc
add
hlt
inc
add
add
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
les
dec
outsl
popa
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jae
push
jne
je
gs
popa
add
gs
xor
fs
insb
add
add
add
scas
jne
in
cmp
inc
cli
ror
dec
scas
push
or
orl
into
cld
pop
add
cmp
inc
sbb
je
stos
pop
push
leave
pop
mov
ja
push
enter
subl
fbld
push
cltd
cmp
mov
jno
aaa
into
cmpsb
jge
cmp
xchg
pop
xchg
jo
mov
into
arpl
adc
cmp
insl
lea
arpl
pop
or
sbb
data16
jle
arpl
ret
sub
gs
pop
cmp
out
in
enter
subl
push
mov
pop
leave
loope
insl
jge
push
aad
stc
dec
adc
xchg
add
xlat
jp
and
stc
pop
out
and
insl
das
inc
mov
nop
stc
gs
dec
and
xchg
add
pop
fcoml
rolb
mov
adc
dec
xchg
movb
lret
jnp
pop
cwtl
inc
nop
push
sbb
xchg
xchg
cmc
mov
adc
dec
mov
shl
ret
sbb
xchg
in
lret
daa
es
or
jae
and
xchg
into
stos
mov
icebp
pop
push
loop
pop
pop
in
outsl
jmp
lret
sbb
rolb
pop
fwait
mov
sub
or
sub
mov
in
and
and
mov
ret
mov
mov
add
xchg
adc
out
adc
fstp
xchg
arpl
xchg
jns
mov
mov
push
jecxz
lds
repnz
inc
adc
cmpsl
push
add
cltd
rolb
sbb
test
rcr
enter
fnsave
sbb
mov
cmp
outsl
pop
imul
jg
mov
idivb
pop
push
lods
cmp
repnz
scas
outsl
in
pop
xor
mov
or
outsb
stos
es
sti
cmpsl
cmp
cmp
fwait
cmp
sub
cmp
gs
xchg
ljmp
add
adc
ljmp
lret
mov
xor
mov
lcall
xchg
loop
mov
shlb
mov
fs
das
faddl
xchg
mov
lea
shrl
xor
das
inc
addl
push
cmpsb
cmpsl
jnp
xor
iret
jae
inc
mov
push
sub
pop
imulb
lcall
aas
or
jbe
sbb
nop
push
arpl
scas
les
aam
flds
fcoms
aad
pop
loop
cmpsl
push
fnstsw
iret
adc
mov
fistpl
push
adc
jnp,pn
lea
xor
inc
pop
dec
repnz
ljmp
insb
das
xchg
pop
cli
pop
or
dec
or
cmp
xchg
push
push
xchg
inc
aaa
out
shlb
xchg
inc
ret
insb
dec
add
mov
rol
inc
push
cmp
push
loope
pop
mov
xor
lea
adc
rcrb
insb
out
mov
jnp
test
lret
xor
push
push
xor
sub
lret
inc
rcll
pushf
adc
push
mov
lods
inc
push
test
mov
mov
xor
aas
xlat
lods
lfs
fisubl
test
movsb
incl
xor
xchg
dec
push
inc
push
jecxz
sbb
mov
adcb
mov
add
inc
or
std
pop
xor
mov
xor
push
enter
push
xchg
cmp
outsb
daa
aaa
mov
into
mov
stos
dec
and
inc
cmp
arpl
dec
ret
jl
dec
cmp
in
fwait
incl
sbb
inc
pop
or
pop
cmp
lahf
mov
cmp
jg
gs
aad
cmp
mov
xor
add
ja
and
xchg
int3
outsl
sahf
add
xor
jbe
mov
insl
xchg
mov
mov
xchg
push
outsb
jae
mov
shl
push
shrb
lods
shr
xchg
cmp
xchg
sub
pop
cmpsl
int
push
dec
jb
jbe
aad
jb
lahf
ja
pop
cmpsl
adc
into
add
jg
pushf
popa
in
mov
push
js
xchg
mov
and
push
popf
dec
incl
enter
gs
sbb
inc
mov
cmp
lahf
lock
push
ror
adc
movsb
dec
inc
imul
inc
ss
dec
mov
inc
pop
or
out
fildll
lret
lds
cmpsb
int
lret
push
es
fiadds
sbb
mov
add
add
ret
mov
dec
in
mov
xchg
sahf
scas
add
insl
pop
xchg
adc
arpl
sbb
lcall
mov
sub
movlps
enter
lock
dec
mov
je
sub
rorl
loop
add
xchg
and
dec
xchg
fs
adc
jne
cld
jl
mov
sbbb
or
cs
pop
push
and
dec
push
push
cmp
dec
push
add
cs
arpl
addr16
dec
loope
cmc
sbb
dec
dec
mov
adcl
lret
lret
lahf
sbb
pop
es
mov
inc
or
mov
mov
and
aad
insb
inc
or
popf
dec
lea
push
mov
mov
test
push
push
jo
fwait
push
mov
push
mov
jb
scas
push
rorb
sahf
mov
les
pop
repz
out
lods
mov
and
mov
ljmp
dec
and
mov
pop
cmp
xor
push
push
sub
bound
xchg
ja
or
mov
xchg
ret
aaa
into
xor
dec
mov
lods
mov
dec
xchg
inc
xor
and
popa
dec
push
mov
dec
sbb
call
cmp
fstpt
icebp
ja
jbe
dec
aaa
jb
mov
add
sbb
jp
inc
xchg
ljmp
dec
push
mov
mov
sub
cmp
add
mov
mov
ljmp
adc
mov
mov
bnd
mov
jge
aad
cmpsb
cmp
push
add
lock
fisubl
jecxz
subl
push
inc
xchg
lds
adcb
sub
lock
cmp
addb
ja
push
dec
add
push
dec
xchg
mov
add
inc
std
daa
call
pop
mov
xchg
adc
cmpsl
scas
lds
mov
movl
xchg
int3
sbb
lock
sahf
add
jbe
popf
cmp
outsl
aaa
adc
mov
mov
cmovne
dec
xor
les
xor
fwait
shl
push
inc
xlat
sub
jecxz
rcr
add
ds
roll
pop
xor
sub
dec
adc
jb
aas
arpl
pop
or
inc
clc
cs
jmp
push
or
cmp
jne
sub
push
sub
idivb
mov
arpl
jecxz
out
mov
jno
imul
addr16
mov
pop
fidivrs
or
test
cmc
leave
xor
cmp
xor
dec
stos
cmpb
ss
cmpl
push
add
inc
jmp
cmp
jae
cli
das
dec
dec
xor
sbbl
add
cli
pop
test
repnz
inc
inc
cltd
mov
pop
and
lds
xchg
outsb
pop
adc
mov
out
xchg
fwait
addr16
pop
fwait
in
jle
lahf
xchg
pusha
mov
push
dec
push
aaa
push
scas
sub
xchg
cmp
fsubrs
bound
mov
dec
or
mov
into
addr16
jp
inc
mov
aam
pop
lahf
or
or
cmp
invd
xor
mov
and
add
sub
ja
inc
rcrb
pop
push
insl
pop
js
movsb
inc
sbb
push
call
mov
inc
add
cmp
mov
mov
add
mov
js
dec
popa
dec
fwait
cmp
push
cmp
xchg
test
fcomip
js
imul
leave
cmp
fstpl
jp
mov
push
pop
hlt
sbb
insl
cmp
fisubrs
inc
inc
add
sbb
stos
lcall
adc
orl
pop
fstpl
add
or
clc
clc
add
mov
pop
xor
jmp
ss
sub
cmpsl
cmpsb
insb
xor
aaa
pop
cld
mov
adc
mov
mov
mov
mov
shrl
roll
mov
dec
and
loope
aas
add
push
shrl
sbb
pusha
pop
out
xor
lea
lea
xchg
scas
inc
test
pop
nop
fildll
fidivl
mov
mov
xchg
mov
or
xchg
mov
push
ret
insb
mov
push
scas
push
mov
fwait
cmp
add
jns
xchg
add
inc
xlat
outsl
cs
popa
cmpsb
sbb
stc
sub
mov
push
mov
ret
insb
jnp
dec
fwait
sbb
popf
std
jl
and
and
fcompl
int
mov
dec
lods
or
dec
imull
add
sti
sbb
cmp
dec
or
into
rolb
mov
pop
scas
push
ljmp
popa
out
push
lock
sub
cmp
or
aam
daa
mov
loope
xchg
jbe
insl
push
or
arpl
test
lcall
jecxz
dec
dec
mov
and
nop
mulb
sub
jg
lock
mov
push
daa
inc
iret
mov
stos
out
iret
maskmovq
testl
out
into
arpl
pop
iret
push
clc
pop
orb
mov
mov
jl
jl
out
nop
aad
push
sub
jo
lods
cmp
pop
push
jle
xorl
fcmovnb
cmp
mov
add
push
mov
adc
jbe
fcmovnb
pop
imul
push
js
sub
out
sbb
cld
jb
mov
xchg
stos
mov
inc
loopne
pop
sub
sti
lds
fcoms
add
cmp
cmp
loopne
push
loopne
xchg
jo
arpl
enter
loope
fstps
dec
inc
or
aas
add
or
addr16
cmp
cmpsb
or
hlt
add
jl
mov
sub
pushl
mov
mov
mov
dec
jecxz
and
dec
mov
pop
add
sbb
aas
cmpsl
rcl
pop
mov
xor
andl
test
jo
pop
push
pop
pop
addb
add
jae
shl
lods
push
mov
pushf
mov
lods
arpl
lret
lods
fld
sub
sbbl
ss
arpl
fimuls
sub
enter
xchg
push
cmp
out
ss
sbb
jo
mov
insb
mov
lods
fisubrl
das
jg
mov
cmp
es
jns
cltd
cmpsl
jo
inc
push
and
or
pop
pop
out
jp
sbb
xchg
adc
inc
add
fwait
sbb
mov
enter
stos
and
dec
or
jp
push
sbb
pop
dec
movsl
xchg
xchg
fimull
dec
inc
xor
or
add
and
mov
cmpsb
xchg
aaa
insl
dec
fistl
fistps
cmpsb
mov
lock
mov
pusha
idiv
mov
insb
sub
jb
ret
scas
popf
sub
lods
and
out
inc
test
in
lods
lds
push
jbe
ficompl
jnp,pn
aam
push
or
mov
sarl
pop
out
imul
push
pop
aam
and
lahf
mov
scas
aad
andl
mov
dec
pop
mov
sub
jo
or
rorl
mov
mov
jns
xlat
adc
pop
jne
std
adc
repz
popf
rorl
adc
gs
mov
xor
nop
lret
inc
pop
fptan
mov
loop
xor
xchg
sarl
js
push
cltd
sbb
imul
scas
cmp
xchg
sbb
and
cli
loope
jbe
adc
dec
bound
clc
jns
inc
cmp
sbb
inc
xchg
rorb
out
stc
push
fcos
pop
push
stos
cmp
jb
ljmp
movsl
push
and
adc
inc
inc
dec
movsb
inc
inc
mov
xchg
cmp
pushf
mov
xchg
int
add
jle
mov
adc
lret
sub
and
arpl
js
insb
dec
loopne
cmp
sub
addr16
sarb
pop
sbb
cmpsb
push
cmp
aaa
and
lahf
cli
adc
stc
pop
jbe
hlt
cmp
ret
sub
andb
and
dec
es
cmp
icebp
jl
inc
xchg
sti
sub
pop
add
and
dec
pop
inc
mov
test
scas
fcoms
mov
adc
js
enter
dec
clflush
pop
sbb
or
fsubrs
fdecstp
xor
xor
into
add
jmp
jp
jb
mov
push
xchg
imul
in
dec
imul
xor
or
mov
test
sbb
mov
jnp
push
push
fists
push
loopne
sbb
das
mov
clc
scas
rcll
push
jle
sub
outsl
mov
xchg
xor
push
add
jbe
and
movsb
sub
mov
push
pusha
fdivs
mov
scas
push
lea
cs
sbb
adc
inc
inc
daa
daa
xchg
and
ds
rolb
daa
mov
lret
loopne
xchg
adc
inc
cltd
mov
push
dec
shrl
mov
and
mov
dec
sbb
or
mov
scas
mov
fcomps
pop
lods
push
mov
xor
sbb
xor
push
cltd
insl
jae
pop
hlt
gs
pop
in
sbb
mov
mulb
test
pushf
adc
arpl
pop
imul
stos
xchg
xchg
add
add
iret
or
jecxz
movsl
inc
imul
imul
inc
adc
add
push
loopne
lock
call
sbb
das
jns
sbb
subl
sbb
out
inc
dec
dec
loope
push
sbb
push
pusha
test
push
stos
lret
arpl
pushf
insl
xor
jmp
or
cld
nop
lods
jns
je
cmpsb
lea
inc
xor
push
enter
stos
cld
mov
out
or
rolb
mov
and
adc
and
or
mov
and
push
xchg
movsb
pop
scas
cmp
inc
int3
stc
cmp
dec
xor
loop
movsb
lahf
xor
jae
sbbb
sbb
mov
and
add
fistps
pop
pop
cmpsb
inc
stos
aad
xor
popf
pop
jo
add
cmpsb
pop
insl
sarl
push
push
sti
add
add
adc
sbb
aas
fdivs
lcall
into
orl
add
dec
jnp
ljmp
test
inc
mov
mov
xchg
test
arpl
popl
cmp
decl
push
pop
fmull
fcompl
sahf
inc
mov
dec
jae
popf
cmp
xor
mov
and
movsb
gs
cld
lods
bound
push
jmp
sub
popf
imul
andb
js
and
mov
jg
xor
xor
push
subl
pop
push
mov
cmp
cmp
pop
js
sub
adc
push
pop
sahf
push
arpl
sbb
pusha
push
lods
jbe
push
das
dec
sbb
test
pop
dec
fimull
into
add
and
mov
cmp
mov
inc
sub
pushf
in
pop
pop
jns
shl
push
cmpsl
sub
cmp
dec
jecxz
inc
xchg
into
das
test
sub
jp
call
mov
jecxz
mov
sti
xchg
push
lret
lahf
add
fidivrl
pop
cmp
pop
add
lock
fdivrp
pop
lods
fucomp
sbb
dec
data16
add
inc
sbb
xchg
dec
adcb
test
xor
jle
mov
in
xchg
cmc
mov
or
ret
xchg
jg
adc
pop
push
cmp
lds
jno
xchg
fisubrl
cli
lret
into
cmp
and
sti
lret
outsb
cmp
mov
pop
or
std
pop
aad
sbb
adc
mov
inc
and
and
std
pop
and
into
adc
into
xchg
xchg
cmpsb
push
push
addr16
push
repnz
les
imul
lcall
cmp
loop
repz
xchg
xchg
cmp
xor
jecxz
scas
mov
addb
xchg
inc
mov
adc
sbb
sub
sbb
lds
pop
aas
mov
nop
sbb
mov
jnp
outsb
gs
sub
mov
or
int
xchg
addl
xchg
aaa
jo
sbb
and
adc
add
xor
mov
dec
ret
out
and
sbb
mov
aad
sahf
add
xor
mov
popf
test
imul
sbb
faddl
add
cmp
dec
aas
shl
mov
xor
inc
lret
and
jns
clc
xabort
jp
push
fstpt
cwtl
orb
shrl
mov
bound
sub
gs
dec
aad
dec
rorb
add
sub
and
pushf
pop
mov
mov
jle
add
outsb
out
fs
das
adc
or
cmp
call
insl
scas
jle
mov
mov
shll
fcmove
or
ret
subps
pop
and
ret
pop
pop
ds
jae
xchg
mov
inc
loop
cmp
jp
mov
daa
ds
sub
xchg
ds
lcall
scas
jge
ljmp
inc
popa
adc
fs
out
inc
and
into
xchg
ss
fldl
push
mov
push
daa
ret
jbe
movsl
and
fimuls
jbe
push
hlt
adc
daa
test
inc
adc
xchg
lcall
add
pop
add
es
stos
in
sti
iret
or
inc
popf
jnp
dec
imul
mov
mov
dec
push
and
adc
in
mov
pop
xchg
push
push
push
iret
mov
or
call
aaa
mov
addb
adc
cmpl
jp
push
scas
fcmovb
mov
dec
addb
pop
mov
mov
fstpt
jne
inc
hlt
dec
push
mov
push
mov
sbb
sub
pop
xlat
jg
push
idivl
imul
scas
pop
add
stos
inc
shrl
test
sub
and
sbb
sub
jnp
xor
cmp
push
inc
popf
js
mov
int3
mov
popa
pushf
adc
jp
ljmp
mov
dec
jo
jp
addl
jmp
hlt
je
jp
imul
rorl
inc
in
in
cld
in
push
imul
sbbb
fsts
imul
divl
push
shrb
cwtl
jne
mov
xchg
movsb
and
ljmp
rcrl
jge
out
sub
dec
fsubrl
mov
mov
scas
ficomps
mov
jmp
rol
xor
out
pop
mov
jge
adc
scas
sub
imulb
xchg
int
pop
cmp
dec
stos
pop
ja
in
lods
cs
iret
lahf
pushf
dec
adc
rorl
fiadds
cmp
mov
aaa
sbb
xchg
add
sbb
pop
mull
and
dec
xor
loopne
in
ljmp
mov
cs
scas
flds
jmp
xchg
xchg
cmc
popf
mov
sti
xchg
lcall
adc
inc
jl
sbb
nop
ds
xor
addb
adc
lret
fistpl
jae
adc
je
ja
and
lret
sub
lods
xor
shll
xchg
dec
or
shlb
lea
cwtl
mov
cmp
sbb
mov
fnstcw
xchg
pop
cmp
add
aaa
xor
hlt
xchg
into
arpl
mov
movsl
sub
push
es
adc
pop
loope
test
sub
mov
imul
sbb
ja
jmp
sub
inc
jmp
or
std
fdivl
dec
mov
ret
cmp
lcall
packssdw
ficoml
sbb
xchg
outsb
ja
mov
sbb
add
xor
add
sbbl
mov
jp
sbb
mov
ljmp
dec
cwtl
outsl
inc
pop
bound
scas
push
dec
test
ja
sbb
inc
inc
clc
mov
and
lahf
dec
pop
into
add
push
arpl
or
jnp
push
mov
add
test
dec
push
in
jmp
in
rorl
dec
leave
xor
icebp
leave
fnstcw
sahf
lret
js
xchg
sbb
sbb
dec
adc
sbb
lret
ljmp
in
add
sub
sarl
rcrl
ret
jbe
mov
mov
xor
loop
pop
std
inc
mov
pusha
repnz
pop
mov
scas
jbe
sub
and
daa
or
loopne
decl
shlb
out
loopne
or
into
push
mov
das
jg
jecxz
cmp
mov
scas
mov
cs
mulb
xor
inc
inc
lret
mov
lcall
pop
or
adc
subb
jns
jl
sbb
loope
mov
sub
add
in
sahf
add
or
mov
sbb
cmp
fwait
xchg
jnp
scas
xlat
inc
push
arpl
mov
pop
ljmp
push
adc
or
mov
pop
in
sbb
aas
in
scas
or
jne
jno
fisubl
repnz
fcoml
outsl
cmp
pusha
in
ret
xor
jg
jb
push
lret
outsl
lcall
lcall
pushl
fisttpll
inc
adc
lcall
mov
cmp
je
cmpsl
jmp
imul
cwtl
imul
mov
push
aad
mov
stos
repz
push
test
and
mov
outsl
dec
cmp
pop
out
adc
add
pusha
push
insb
ds
pushf
dec
test
fbld
mov
cmc
lods
ljmp
or
popa
cltd
rol
jmp
sub
ret
in
xchg
ja
sbb
pop
mov
pop
lret
push
dec
mov
push
out
js
push
sub
test
adc
enter
sbb
inc
stos
imul
mov
loope
test
out
xor
adc
dec
mov
or
add
pop
dec
jle
or
push
push
add
push
rcrl
test
dec
icebp
sub
test
fwait
shll
bound
pop
call
lds
pop
mov
xchg
push
cmp
sti
and
sub
dec
idivb
inc
stc
in
jb
push
jge
add
out
rorb
add
mov
lret
loop
dec
pop
test
mov
insl
mov
mov
pop
adc
stos
loop
mov
sahf
test
or
xor
and
mov
inc
lods
arpl
adcb
out
sbb
jecxz
jbe
push
sbb
neg
adc
and
xor
push
rorb
mov
andl
add
mov
mov
and
pop
fisubs
mov
test
in
mov
jbe
pushf
in
adc
ret
enter
jbe
ss
mov
das
adc
repz
dec
aas
mov
add
js
fnstsw
xlat
pop
mov
cld
lock
das
mov
cwtl
inc
sbb
stc
jp
dec
in
jbe
ja
flds
add
sub
cld
and
mov
sbb
icebp
add
cld
push
sbb
lock
aas
push
xchg
jno
mov
mov
ror
jle
test
incb
pop
push
mov
pop
in
test
punpckhwd
andb
in
test
popf
cmp
cs
les
mov
ss
cmpsl
lods
jns
scas
push
dec
ret
jno
inc
frstor
add
mov
sbb
jl
ret
mov
nop
imul
mov
pop
pop
lods
adc
out
jb
add
cmc
adc
pop
aad
lea
push
add
jecxz
loop
pusha
cmp
sbbl
ror
mov
adc
pop
repz
mov
sti
fst
pop
in
leave
mov
mov
inc
xor
or
cs
xor
sbb
xor
add
xor
cs
inc
orl
mov
imul
cld
sub
jl
jge
in
ret
jl
or
sbb
lods
test
mov
jl
xor
jae
adc
cmp
push
add
iret
fcomip
dec
bound
pop
rcll
or
in
pop
dec
xchg
mov
jl
in
inc
es
imul
lahf
dec
inc
sbbl
pop
jae
pop
cs
mov
mov
mov
stc
push
neg
jle
nop
push
sbb
dec
leave
xor
jge
xor
cmp
ja
mov
popa
add
mov
or
and
and
adc
add
dec
out
imul
mov
stc
mov
dec
push
cmc
push
divl
or
pop
loopne
pop
push
sub
mov
scas
rcll
fidivrs
sub
dec
pop
jp
addr16
mov
insl
pop
xchg
cmp
cli
js
sbb
mov
sahf
pop
dec
inc
jno
cmp
test
cltd
adc
mov
ss
leave
rcrl
xor
cmp
add
cmp
adc
sarl
fistl
shll
pop
filds
push
popa
cmp
jecxz
inc
fs
mov
xchg
push
jae
pusha
lds
adc
ljmp
and
inc
loopne
imul
cwtl
add
add
out
or
fstl
xor
jbe
jp
cmp
inc
mov
movsb
loop
cmp
int
xor
add
push
das
test
inc
arpl
mov
mov
pop
fldl
outsb
in
push
fistpll
iret
xor
cs
imul
aas
inc
bound
dec
aas
xchg
adc
sub
sbb
xchg
pushf
orl
add
mov
fsubrs
sub
arpl
sbb
mov
cmp
dec
sub
popa
sbb
ss
inc
xchg
clc
jbe
cs
jne
shrb
movsl
pop
jmp
dec
mov
adc
mov
mov
push
xor
test
cs
dec
scas
mov
stc
std
jne
sub
outsl
xor
je
xor
std
and
add
lret
cmp
aaa
leave
mov
dec
push
adc
push
test
and
sub
push
sbb
ret
mov
cld
xor
adcl
sub
fldl2e
pop
dec
inc
fldcw
fcomip
cmp
mov
ja
sahf
mov
pop
sbb
or
sarb
cmp
cwtl
test
orl
lahf
aaa
push
sub
loop
bound
cmp
mov
or
mov
mov
adc
push
and
leave
dec
sub
add
outsl
xchg
movsl
sbb
mov
pop
push
adc
shl
jbe
iret
bound
push
xchg
idivb
xlat
pop
rclb
cmp
sbb
or
aam
xor
aas
pop
sbb
aam
mov
mov
pusha
cli
lods
call
cmpsb
addr16
cs
stos
nop
movsl
mov
xor
mov
push
std
ret
imul
jo
jb
xor
shll
push
push
iret
push
mov
mov
in
aaa
lods
negb
pop
dec
mov
mov
sub
push
inc
lods
test
insl
pop
sbb
adc
sahf
fs
cmpsl
leave
sub
add
jge
lods
out
inc
lret
hlt
push
or
stos
call
ret
xor
pop
xchg
lcall
scas
jne
mov
std
inc
lahf
ja
or
ja
push
aad
fmull
ret
inc
insb
neg
insl
insb
ljmp
lods
add
std
loope
repz
mov
and
mov
mov
outsl
and
and
adc
mov
cmp
jbe
cmp
dec
sbb
stc
subl
sub
mov
cmp
loope
sahf
mov
sbb
pop
into
cli
pop
popa
nop
jbe
xchg
xchg
outsl
cmp
popf
stos
stc
fcompl
add
cmc
movsb
shrb
shrl
dec
inc
mov
test
mov
test
sub
adc
pop
cmp
xchg
pop
ficompl
pop
and
lock
pop
arpl
cwtl
gs
leave
fdivs
pop
outsl
int
data16
test
sub
pop
in
mov
pop
test
and
cmc
sub
jae
decl
gs
xchg
aaa
add
arpl
jnp
add
pop
jecxz
ret
lret
test
jle
insb
mov
lods
mov
lret
xor
sub
icebp
pop
jge
gs
dec
mov
out
insl
movsb
call
lahf
sti
shlb
cli
aas
scas
mov
xchg
lahf
cltd
addb
and
idivl
or
dec
mov
add
sbb
mov
ss
int
mov
xor
inc
push
xor
test
pop
pop
js
mov
mov
loopne
outsb
stos
inc
repz
mov
jl
and
push
fs
mov
inc
in
mov
clc
dec
into
push
push
adc
sbb
mov
out
cmp
and
sub
aaa
mov
add
int
push
mulb
scas
outsl
pop
mov
lcall
or
insl
test
xlat
mov
fldl
mov
iret
cmp
das
je
jnp
mov
pop
sbb
inc
out
lods
push
gs
in
out
push
ljmp
sahf
fsubrs
popf
cmp
clc
jp
or
fwait
aas
fldt
cs
jge
sbb
sbb
in
sahf
ljmp
out
in
in
nop
push
testl
xor
push
popf
jg
xor
and
push
pop
sahf
sub
add
rol
pop
ja
mov
adc
mov
ds
mov
adc
jno
jl
add
cmp
das
add
mov
mov
cltd
jecxz
movsl
and
test
pushf
push
cmpsl
or
sub
add
add
lret
lds
orb
cwtl
jns
cmp
sub
out
jbe
jne
pusha
mov
cmp
pop
sbb
loop
inc
sar
add
xor
mov
pop
xchg
jmp
lcall
fisubrs
push
out
ret
int3
mov
mov
addr16
call
mov
jl
jnp
push
movsl
stos
inc
cmp
add
push
mov
xchg
xchg
mov
mov
dec
cmp
and
mov
cld
hlt
movsl
jnp,pt
jae
insl
inc
aam
out
push
pop
outsl
mov
mov
dec
fwait
xor
dec
popf
bound
fwait
pop
add
cs
scas
das
repz
push
sbb
adc
dec
and
sarb
pop
fcmovnbe
mov
ret
ds
shrl
pop
shll
and
or
rcl
lret
pusha
sub
arpl
mov
shrb
and
push
test
testl
mov
mov
imul
mov
into
cmp
lods
inc
nop
sbb
sbbl
jnp
inc
add
movsb
push
lahf
and
add
mov
fisubs
push
pop
push
cmpsl
add
repz
pop
ja
lods
mov
dec
mov
push
xchg
cmpsb
into
push
jae
lock
sub
fidivl
sbb
out
jbe
pop
pop
ja
jle
push
pop
mov
aam
cs
das
in
aam
outsb
mov
ja
add
inc
adc
shrb
imul
stos
cmp
arpl
xchg
inc
int
cli
dec
sbb
mov
push
cmp
in
or
in
xor
cmp
and
add
ror
fwait
scas
pop
push
lea
test
je
sbb
xchg
ficomps
aas
popa
aad
cmp
lcall
aas
jmp
fnsave
sub
aad
mov
push
popf
mov
fwait
add
dec
cmp
hlt
rcr
ja
in
jno
push
jge
mov
or
nop
or
mov
aas
sahf
mov
cli
xchg
dec
aam
xchg
fucomip
jmp
popl
movl
fisttpll
subb
pop
outsl
cmp
or
in
push
insl
lret
and
inc
daa
subl
inc
jg
mov
mov
test
fdivrs
mov
insl
in
cmc
pop
sbb
xchg
dec
sbb
jge
adc
sbb
repz
sti
dec
std
aad
sub
dec
les
filds
and
mov
cmp
jmp
fwait
dec
mov
mov
xchg
aad
pop
and
mov
in
std
fimuls
xor
pop
adc
gs
pusha
cs
dec
cld
in
aas
clc
fisttps
test
jae
fcmovu
fs
push
sbb
push
inc
cmp
ja
mov
ds
or
out
or
bound
and
call
mov
leave
ja
add
orb
add
hlt
lret
mov
pop
jbe
xchg
sub
scas
test
jmp
xor
xchg
sti
jbe
ret
push
push
testl
adc
jbe
and
cmpsl
inc
inc
mov
and
pop
sti
inc
jb
repz
xorl
push
fcoms
fcoml
popf
push
gs
outsb
push
sbb
out
add
add
fdivl
pop
mov
and
fdivl
into
mov
push
fstpl
dec
add
arpl
in
cmp
xlat
and
aas
loope
adc
aad
sub
add
addr16
ja
out
lods
iret
popa
xchg
sbb
test
inc
xchg
push
enter
mov
sub
ljmp
adc
imul
adc
daa
add
push
fsubrl
test
clc
rcll
imul
adc
inc
xchg
jns
aad
mov
rorb
pop
sbb
es
pop
in
cmp
in
test
mov
xorb
fdivs
sub
scas
sub
mov
xchg
and
push
ja
ss
jne
pushf
pop
pop
sub
pop
xchg
cld
and
popf
bound
xchg
test
jnp
pop
mov
jnp
inc
mov
xchg
mov
cmp
ret
cmp
sbb
pusha
add
rcrl
sahf
aad
and
enter
add
fimuls
testb
iret
hlt
push
push
stos
dec
jne
dec
sti
pop
mov
mov
mov
outsl
jne
sahf
sbb
ljmp
arpl
xor
cmp
push
mov
ret
and
insl
iret
sub
mov
rcrl
cwtl
xor
mov
sti
xor
cmp
mov
sub
fidivl
xchg
mov
xor
subb
cwtl
lcall
pop
stos
nop
cli
and
add
xchg
lds
mov
mov
iret
xchg
pop
adc
fidivs
fwait
popf
shl
ret
ficoms
inc
sub
lea
rep
sbb
xor
gs
shrl
scas
or
dec
inc
add
outsl
rcrl
dec
dec
adc
fs
pop
xor
pop
xchg
mov
mov
cmp
stc
ret
pop
lret
or
mov
pushf
pop
aam
movsl
mov
negb
mov
and
xchg
rclb
or
ja
sbb
jne
jne
xor
enter
adc
sahf
mov
sub
fstpt
mov
mov
pop
pop
jg
arpl
sti
cmp
fildll
add
push
inc
cmpsl
xor
js
push
mov
mov
cli
jae
std
xchg
xor
test
shlb
inc
std
pushf
cmp
cwtl
jb
push
xchg
sub
lods
pop
jp
mov
je
jecxz
aaa
inc
push
sub
mov
mov
rclb
aas
shll
mov
push
unpcklps
inc
xchg
std
dec
fwait
fwait
or
clc
lcall
xchg
fsubrs
and
mov
mov
push
lahf
int
aam
adc
aam
or
xchg
shl
ds
push
xchg
lods
arpl
adc
mov
mov
enter
and
jno
test
lret
pandn
aad
imul
push
ret
fwait
popa
ret
fmull
aas
sub
imul
add
pop
push
aad
add
insl
jbe
fwait
push
cmp
out
cmp
or
xchg
imul
mov
xchg
aad
sbb
stos
aad
push
shll
scas
addr16
dec
inc
add
test
mov
fidivrl
std
inc
mov
leave
fstl
imul
test
sahf
xchg
pop
js
adc
add
and
popf
sub
mov
cli
mov
dec
pop
dec
je
fisubs
call
dec
dec
mov
in
jg
iret
aas
scas
fsubs
pop
fdivl
ret
aas
ja
push
and
jp
sub
cli
outsl
and
or
fidivs
es
inc
mov
pop
daa
pop
aas
pop
ljmp
shl
fnsave
add
jo
adc
pop
inc
jl
cmp
mov
xor
call
into
das
jae
aaa
fldenv
fdivr
xchg
sbb
shll
sub
iret
push
mov
mov
stos
mov
xchg
mov
inc
cs
push
enter
hlt
adc
xlat
push
test
pop
subb
dec
pop
sub
adc
or
test
push
xorl
aad
pusha
arpl
sahf
sub
pop
push
int
push
xor
cli
arpl
jg
add
lret
jo
rorb
fadds
daa
and
popa
gs
pop
push
in
adc
sub
sbb
jbe
out
and
push
mov
push
bound
les
pusha
cmp
push
xchg
arpl
mov
lods
mov
dec
cmp
lds
jg
xchg
cmp
adc
cmpsb
push
push
dec
jle
lret
ja
clc
jns
iret
mov
pop
int
movsl
jmp
and
inc
sub
aas
cmp
mov
lcall
mov
cld
icebp
subl
push
push
insb
imul
add
stos
or
aaa
xor
adc
jg
sbb
pop
mov
aas
pop
mov
mov
ret
adc
lods
or
aam
xchg
xchg
or
test
iret
fdivs
pop
sub
mov
sub
jmp
pusha
xchg
je
fcmovbe
pop
fnstsw
mov
sbb
lret
push
mov
jns
test
add
mov
sub
repz
inc
ljmp
adc
adc
sahf
aaa
dec
lods
push
push
adc
pusha
rcl
out
mov
push
xchg
dec
pop
in
cmc
jns
and
iret
ret
popa
daa
mov
enter
mov
lcall
flds
mov
or
xchg
push
pop
xchg
or
scas
xchg
shrl
ja
nop
add
into
nop
dec
and
xorl
jnp
push
cmp
iret
xchg
or
push
pop
add
cli
fisttpll
xchg
jns
sbbl
out
shlb
and
clc
clc
andb
dec
es
pop
mov
lahf
orb
xorl
aam
daa
scas
cli
cs
test
pop
pop
nop
dec
stc
in
pop
push
lds
not
or
inc
cltd
arpl
sbb
sub
lcall
mov
dec
aad
mov
and
mov
ret
test
mov
test
add
aad
cmp
push
mov
fiadds
mov
das
pop
pusha
inc
shll
cs
push
jge
xor
inc
add
and
addr16
adcb
cmp
movsb
test
dec
dec
stc
xchg
jae
popf
jo
inc
sbbb
inc
ljmp
shll
fbld
xchg
imul
adc
mov
mov
and
scas
div
ficompl
movsl
add
rcl
push
test
or
rcrb
jecxz
jg
fistpll
mov
adc
iret
cmp
cmp
icebp
sub
cld
sahf
es
dec
jge
outsb
sub
push
sub
out
aam
pop
xor
lahf
mov
fbld
dec
rclb
movsb
enter
test
mov
sub
mov
mov
mov
jmp
out
dec
push
push
imul
xchg
add
movsb
sub
sbb
cmpsb
xor
sbb
jp
mov
call
out
jmp
addr16
movsb
es
loopne
sbb
sar
popf
cld
mov
ret
fucomip
mov
insb
scas
bswap
test
mov
push
xor
mov
add
cmpsb
enter
pop
pop
add
loopne
xor
dec
pop
push
les
push
jge
sbb
push
cmc
pop
pop
mov
cmp
ss
js
xchg
pcmpeqw
sub
pusha
shr
lahf
add
xchg
jecxz
cmp
add
in
aaa
in
jo
jl
sbbb
dec
mov
cltd
shrl
mov
out
aam
sub
gs
pop
add
out
pop
sub
icebp
xchg
scas
mov
lret
movsb
sti
jno
mov
arpl
lods
rcrl
test
jmp
ret
pushl
addb
scas
adc
and
pop
add
sub
movsl
mov
xchg
lock
test
fst
add
jmp
incb
inc
sbb
sti
sub
enter
lods
dec
pop
or
push
insl
sub
pop
xor
push
insb
aam
pop
mov
shl
or
jae
inc
lods
fdivr
pop
and
mov
or
jg
add
cmp
das
mov
dec
test
add
mov
mov
jmp
push
es
aad
daa
xor
push
mov
movsbl
cmpsb
pop
sbbl
pop
cmp
mov
and
xor
fwait
sbb
imul
mov
push
sbb
lods
pushw
mov
pop
dec
in
jecxz
pop
cmp
mov
xchg
loop
dec
mov
bound
cmpl
push
lock
and
ljmp
cld
or
cltd
sub
mov
sahf
mov
ret
cmp
xor
xor
leave
xor
mov
leave
aam
push
xchg
jo
repnz
dec
xchg
sub
std
movsb
sete
rorb
arpl
aaa
repnz
jecxz
pop
mov
into
stos
or
mov
mov
push
xor
aam
adc
inc
out
in
lea
and
inc
out
or
fidivs
sub
add
orl
shr
les
out
mov
or
mov
jecxz
cmc
pop
sahf
in
addr16
fcmovne
and
aaa
inc
dec
sub
push
or
lret
mov
xor
popf
iret
pop
mov
cmp
pop
in
insb
ds
cmc
cmp
or
mov
inc
push
movsl
fdivrl
ret
dec
lret
fistps
xchg
jmp
pop
in
pop
daa
testl
sub
and
imul
mov
mov
mov
add
ljmp
hlt
add
jno
xlat
ret
pop
jae
iret
jns
jne
mov
xorl
loope
in
or
xorb
adc
dec
aaa
lret
leave
scas
push
pop
jle
je
les
mov
jns
adc
push
aas
jno
inc
lock
mov
jb
mov
and
push
jl
popa
push
sub
jb
adc
scas
out
je
jmp
stc
pop
in
jno
cmc
pusha
pop
movsb
faddl
dec
or
cld
xor
sub
or
jmp
out
and
movsb
xorl
lods
add
push
and
pusha
xchg
test
out
lahf
cmpsl
cmc
cltd
addr16
mov
jns
stos
sub
jns
outsl
cld
pop
jb
and
ret
adc
call
and
sbb
xor
push
stos
and
outsb
jg
mov
stc
adc
cmp
in
ss
sarb
jb
mov
imul
iret
leave
popa
call
mov
adc
loopne
dec
test
xor
jbe
mov
clc
into
adc
inc
push
fisubs
jg
inc
arpl
test
ss
and
cmp
pop
sub
pop
mov
sub
aad
jb
push
or
lds
cmp
xlat
jge
mov
addr16
insl
inc
lods
xor
out
cs
fmull
mov
mov
pusha
mov
lods
mov
js
adc
dec
loopne
ret
cmp
negb
test
pop
push
adc
jae
aas
push
test
cs
callw
inc
scas
fwait
sub
int3
sbb
std
sbbl
les
dec
sarl
mov
add
xorb
into
mov
outsb
int3
mov
dec
pop
popf
jle
cmp
mov
popf
sahf
jle
push
push
pop
or
push
sahf
out
pop
arpl
xlat
mov
nop
stos
sbb
push
addr16
shl
test
adc
sub
rcrb
lea
into
add
dec
movsl
fisttps
clc
and
nop
ret
xchg
test
mov
sti
push
pop
pop
fcomps
aaa
dec
jle
jb
jae
notb
sbb
jnp
or
data16
nop
lcall
rolb
push
sub
sub
pop
mov
jp
cwtl
add
sub
adc
push
jnp
dec
into
ret
pushf
sti
ljmp
test
sbb
and
jo
jl
or
pop
push
roll
jbe
lret
pop
sbb
push
jae
and
dec
sbb
ss
cltd
cmp
xchg
fcoml
jle
inc
add
push
les
ss
push
das
jg
mov
dec
dec
cmp
out
jle
jbe
lret
rcrl
push
mov
mov
jbe
mov
xchg
mov
outsb
outsb
xchg
cmp
mov
scas
pusha
shrl
mov
aad
mov
mov
jecxz
xor
push
sahf
sbb
push
fwait
sub
pop
cltd
sub
add
sub
xor
jnp
sbb
xlat
xchg
aam
and
ds
push
add
lcall
stos
mov
scas
sbb
les
inc
cmp
adc
jle
jbe
lret
ja
mov
and
not
fistpll
jae
sbb
int
mov
lcall
mov
dec
imull
lret
xchg
into
int3
mov
mov
mov
adc
sahf
inc
adc
enter
cmc
mov
sbb
ljmp
shlb
push
pop
fisubl
inc
loopne
and
pop
rclb
imul
sbb
mov
js
xchg
jne,pn
or
fstps
jle
inc
out
mov
or
out
add
pop
test
je
pop
icebp
fcmovnbe
in
ljmp
fxch
pop
mov
inc
and
push
mov
movsl
push
or
xor
in
negb
cs
pop
push
mov
dec
mov
and
int
fwait
push
mov
call
or
cltd
or
fisttpl
and
cwtl
xchg
mov
push
mov
jb
mov
push
sub
fildl
shlb
dec
leave
or
movsl
sbb
iret
mov
xor
cmp
das
sbb
test
jg
roll
dec
jmp
jno
push
fdivrl
pop
sahf
bound
sub
xor
inc
in
dec
dec
lret
out
in
mov
mov
dec
pop
pop
sbb
cmp
sub
daa
xchg
xchg
pop
adc
mov
mov
dec
stc
ss
insl
and
or
lret
push
xchg
cmp
mov
push
jns
fcompl
xchg
fwait
adc
sub
fistl
ljmp
xchg
lods
dec
dec
push
sub
mov
cmp
ja
or
in
inc
in
push
insb
es
in
sbb
push
cmp
roll
movsb
scas
into
pop
cmp
cmp
insl
mov
pop
ja
xor
data16
scas
daa
daa
cmc
addr16
jae
pop
les
icebp
in
push
inc
js
sbb
pop
es
adc
xor
mov
test
fcoml
ret
dec
dec
and
jne
sti
sbb
cs
sbb
jge
pop
into
js
adc
je
pop
jae
adc
outsl
push
add
jbe
in
mov
pop
push
xor
push
push
adc
je
cli
mov
std
dec
cmp
mov
or
jge
mov
jge
adc
fdivrs
pushf
cld
imul
lret
sub
in
outsl
sub
outsl
ss
dec
loope
cmp
adc
popf
das
outsb
xor
je
inc
insl
xor
cmp
xor
mov
arpl
outsl
dec
push
stos
decl
ss
sub
pop
imul
mov
or
lret
and
outsl
mov
dec
pop
pop
push
mov
and
das
push
inc
mov
cmp
mov
cmpb
sbb
inc
add
decb
mov
bound
scas
mov
push
cmp
push
out
lods
cmp
divl
sub
sbb
aaa
lock
jmp
imul
rcrl
mov
cld
cltd
or
jae
sbb
xor
int3
add
pop
fdivrs
mov
insb
movl
add
fildll
test
leave
and
sbb
push
pop
pop
sub
fwait
or
push
call
lods
ret
outsl
jo
outsb
dec
es
adc
in
jnp
loope
sub
lretw
cmp
js
xor
jl
pop
movsl
pop
into
xchg
into
call
leave
mov
add
push
ret
sub
add
shlb
mov
mov
clc
jno
insb
mov
imul
fwait
xchg
out
add
ja
inc
sarb
movsl
test
or
dec
adc
ds
shll
pop
push
hlt
add
out
hlt
inc
scas
movsl
xchg
mov
daa
call
push
pop
clc
jl
pminsw
sub
mov
das
push
inc
sub
mov
shll
add
jmp
daa
push
mov
mov
or
dec
or
mov
dec
cmp
jl
test
fst
lret
and
pusha
incl
ds
pop
fildl
sub
adc
mov
add
sub
push
inc
or
lret
in
xchg
insb
mov
sub
dec
enter
aad
rorb
mov
dec
mov
shll
push
lcall
pop
jmp
sub
sahf
pop
inc
andb
int
cmp
mov
in
lcall
shll
xchg
imul
dec
push
dec
xor
pop
push
push
push
push
xlat
sbb
std
dec
lods
cmp
dec
sahf
lds
xchg
or
xchg
push
aad
pop
pop
adc
pop
mov
cmp
dec
xchg
mov
jp
add
jmp
enter
sub
popa
iret
fs
mov
insl
push
mov
jl
mov
je
loop
xor
mov
mov
movsl
test
adc
dec
sub
or
pop
mov
sbb
cmp
ret
cltd
pusha
xor
mov
xor
sahf
shl
lods
jp
out
inc
cs
pop
pop
cmp
rcrb
xorl
mov
or
rorb
sbb
testb
shll
clc
cmpsb
sub
insb
popf
jne
clc
addl
out
pop
mov
into
mov
or
push
daa
shrb
mov
mov
or
mov
mov
addr16
adc
push
leave
push
jge
std
loope
loope
mov
sbb
bound
ja
jmp
and
sub
outsl
notb
insl
je
xchg
dec
jb
sub
fstps
xor
enter
aad
sub
sub
mov
imul
in
push
test
xchg
das
movsb
mov
ret
push
cwtl
cmpsw
push
or
cltd
inc
adc
fnstcw
push
pop
out
test
pop
js
and
xor
aaa
imul
add
jge
cmp
dec
xchg
jmp
jmp
mov
jmp
inc
daa
lret
push
adc
sahf
jl
testb
rorl
daa
stos
jbe
cmc
add
xchg
shll
pop
adc
iret
or
fs
push
xor
orb
fidivrs
repz
push
rclb
inc
mov
sbb
xchg
popf
daa
jne
inc
pop
cmp
dec
pop
xor
scas
cmp
aaa
out
lods
or
mov
mov
sub
pop
rolb
mov
mov
mov
push
or
sahf
push
bound
pop
mov
push
sbb
add
dec
mov
xchg
pop
lret
add
jl
inc
pop
mov
cmp
xchg
and
out
adc
push
lahf
xor
xchg
jmp
rorl
mov
push
adc
popf
xchg
cmpsl
aad
inc
lret
mov
pop
mov
push
jb
popa
xchg
mov
xchg
jl
mov
jae
aam
pop
out
aas
ficomps
jp
mov
xlat
xor
jmp
popl
xor
pop
test
xchg
add
mov
jnp
fildl
jno
fistl
lcall
or
dec
orl
iret
popf
jecxz
add
loop
int3
adcl
cltd
out
mov
pop
rclb
inc
add
push
push
loop
dec
and
mov
pop
repz
test
adc
mov
inc
lea
sub
cltd
dec
in
test
adc
shrb
movsl
sub
xor
lock
lea
int
mov
push
das
decl
jns
adc
adc
adc
sub
push
bnd
data16
test
dec
mov
xor
sub
mov
je
fsubl
dec
or
repnz
cmp
inc
lods
lret
adc
mov
xor
cmp
fwait
push
aaa
scas
shlb
ljmp
ljmp
cmp
push
mov
pop
pop
xchg
les
lea
sbb
fnstsw
adc
push
insl
ljmp
andb
div
pop
sbb
fcmovnu
outsl
movsl
and
imul
iret
jmp
pop
int
push
jne
jne
push
mov
cmp
inc
ret
pop
shlb
aas
dec
mov
loope
ljmp
pop
cmp
cs
cmpsb
sahf
enter
popa
inc
sti
push
in
fistpl
ljmp
push
ret
pop
pop
jns
push
mov
out
fwait
sbb
sub
int
jnp
xchg
dec
xor
push
pop
push
or
imul
and
cmp
jb
mov
or
and
loope
in
hlt
push
cmp
into
rcl
sbb
jmp
pop
test
cmp
cmp
cltd
aas
mov
test
xor
nop
dec
daa
jae
add
out
sbb
xchg
cmp
sub
push
repz
cmp
insb
nop
insl
add
mov
cltd
inc
inc
int3
stc
mov
sbb
orl
js
xor
pop
stc
push
ljmp
push
inc
pop
lcall
pop
xor
adc
push
out
sahf
loop
scas
stos
outsb
mov
inc
mov
pop
ljmp
sub
push
cwtl
sub
push
cmp
cmp
sar
pop
adc
rcll
mov
dec
test
sti
dec
adc
fucomi
xor
nop
imul
and
lcall
int3
cmpsb
icebp
faddl
or
xchg
xlat
cmp
cmpsb
dec
ds
pushf
dec
mov
or
push
sub
notl
lds
lea
xorb
mov
or
dec
sub
push
fstpt
pop
fbld
inc
out
clc
push
xorps
push
fistps
adc
movsb
in
xchg
inc
bound
ficoml
lods
lret
xchg
dec
lea
mov
popl
lods
or
dec
sbb
inc
pop
add
fsubrp
addr16
testb
fcmovne
adc
pop
mov
inc
imul
push
bound
dec
and
fimull
mov
inc
mov
sbb
cmp
rcll
or
mov
lea
int3
jbe
dec
aad
call
xchg
xor
in
mov
xor
inc
inc
inc
lock
push
push
xchg
jmp
jge
out
or
scas
cmp
add
icebp
cmpsb
cld
xchg
fwait
push
mov
aad
ret
jno
lret
sbb
ret
imul
lret
mov
mov
inc
jp
add
fnstcw
bound
imul
xchg
pop
add
inc
sarl
es
ret
jg
and
jbe
xchg
fistpll
out
jbe
xor
pop
add
push
sahf
and
dec
lahf
lods
xchg
out
orb
mov
out
xchg
aad
sub
jmp
push
cmp
popf
xchg
das
loopne
adc
inc
push
push
sbb
pushf
gs
cmpsb
add
cmp
in
je
call
sub
icebp
dec
sahf
fldcw
enter
mov
fistl
cmp
pop
call
cli
jge
push
loope
movsl
mov
fnstenv
dec
jecxz
pop
jns
mov
xor
arpl
inc
push
mov
int
ljmp
stos
jmp
sub
lods
ret
cld
mov
sbb
or
lret
adc
jo
mov
fdivrs
or
jo
call
lea
push
mov
lret
movsb
faddl
jecxz
and
adc
sub
cmp
mov
clc
mov
and
sub
mov
cmp
sbb
ja
ss
popa
bound
outsb
hlt
insb
pop
pop
mov
movsl
lds
inc
imul
sbb
popf
jbe
ja
sahf
cmp
xchg
popa
sbb
pop
in
aaa
cmp
and
adc
pop
mov
push
rolb
imul
jl
outsl
popa
jge
insb
or
mov
jno
sub
add
jg
dec
inc
cs
int
pop
and
es
mov
sbb
fnstenv
stos
cmp
pop
mov
lock
fwait
dec
iret
push
push
jecxz
or
lds
xchg
jg
and
add
rcrb
cmp
adc
jl
jmp
dec
adc
jo
fs
push
mov
out
std
jle
shll
xchg
push
jbe
popa
cmc
ret
jo
popf
das
popf
sti
cli
mov
movsb
mov
hlt
out
pop
inc
fwait
test
pop
inc
sub
sub
repnz
and
scas
push
sbb
sbb
out
into
and
outsb
sar
int3
mov
pop
add
pop
xchg
or
xchg
mov
ret
lahf
mov
xchg
pop
cli
mov
jmp
test
popa
push
xchg
stos
xchg
lcall
mov
jno
sbb
into
inc
push
push
add
sar
inc
pop
sub
or
xchg
add
pop
mov
cs
mov
fistpll
sahf
xorb
mov
ja
xor
sbb
jno
sahf
xchg
xchg
push
mov
call
and
or
or
inc
adc
xchg
jp
sbb
movsb
inc
sti
add
filds
arpl
adc
xor
jmp
mov
cmpsl
push
mov
pop
movsl
lret
mov
adc
cs
push
push
lods
add
jle
add
sub
sub
ja
icebp
pop
or
sbb
js
jno
sbb
fs
je
jl
je
sub
sub
jle
sbb
adc
push
scas
ficomps
inc
cmp
cld
cmp
sti
mov
lret
in
scas
aaa
mov
dec
mov
mov
js
inc
lods
mov
push
mov
loop
dec
sbb
jl
mov
sbb
shll
aas
pop
leave
cmc
rorl
pop
stos
cmp
or
scas
dec
addb
aam
push
cmp
pop
out
loopne
jg
sub
adc
rclb
xchg
bound
insb
mov
loop
fnstcw
pop
es
mov
xor
xchg
hlt
outsl
push
sub
inc
imul
lret
xor
xchg
xlat
ja
adc
outsl
cmpsl
mov
mov
mov
mov
jae
decl
sbb
into
pushf
cmp
pop
jg
mov
aas
mov
shr
cs
insb
xor
add
es
stc
sub
cmp
xchg
add
push
enter
ret
pop
inc
cmpsb
mov
ja
push
popf
cmp
repnz
sbb
daa
adcb
call
inc
sub
in
stos
fmul
ja
out
ss
mov
dec
cld
xorb
std
or
jo
cwtl
pop
call
mov
out
andl
cwtl
or
lret
popa
mov
cmp
mov
or
push
mov
movsl
push
mov
sub
xor
pop
loope
sub
mov
xor
mov
cld
mov
xor
lds
addb
test
mov
dec
cltd
jmp
dec
mov
sbb
call
add
fsubrs
mov
and
gs
dec
mov
gs
ret
push
sar
loope
add
out
inc
fidivl
int
mov
fmull
dec
sbb
adc
imul
xchg
loope
pop
out
lods
cmp
rclb
notl
push
ljmp
les
mov
pop
cli
les
mov
aas
and
ja
lods
xchg
xchg
hlt
es
stos
dec
mov
scas
mov
ret
sbb
cwtl
mov
xchg
xchg
faddl
adcl
inc
dec
sub
das
inc
mov
ret
out
jns
mov
jge
out
jae
cmc
aas
pushf
ss
push
cltd
sub
je
or
xchg
arpl
fbld
in
and
int
xchg
repz
pop
daa
test
in
push
leave
pop
xchg
or
push
inc
xor
rcll
aad
jo
jmp
and
xor
pop
pop
imul
andb
cmpsb
dec
stos
mov
mov
bound
mov
xor
push
pop
mov
popa
sbb
sbb
push
bound
loop
in
sub
cs
push
jbe
fldcw
inc
inc
iret
jecxz
int
lds
dec
fisubrl
cmpsl
dec
ja
inc
jmp
pop
fcomi
cmp
push
jg
push
xor
je
xchg
in
dec
addl
scas
mov
dec
and
pop
mov
cmp
jbe
push
insl
ja
cmp
cmp
sarl
dec
xchg
cmc
in
dec
and
movswl
jecxz
loop
decl
pop
jle
subl
pop
loop
movsl
test
jg
or
gs
jle
sbb
xchg
push
ljmp
in
lahf
mov
into
xchg
leave
clc
scas
popa
xchg
cmpsb
cmp
mov
push
fcomps
push
subb
pop
push
cmp
sbb
in
cs
cmp
jg
push
jp
sub
jbe
xlat
add
dec
mov
adc
js
lea
sbb
arpl
or
inc
mov
cmp
adc
out
and
mov
jle
adc
lret
cltd
pop
fists
repnz
in
pusha
add
xchg
shlb
mov
imul
lret
sbb
push
mov
or
push
xor
cwtl
daa
sub
clc
and
sbb
mov
sbb
or
sbbb
sbb
or
dec
imul
add
fcomps
sbb
mov
mov
mov
sbb
arpl
insb
or
pushf
cmp
cmp
ja,pn
out
xor
stos
std
add
insl
cmpl
or
sahf
in
pop
mov
xchg
mul
push
pushf
mov
jns
add
ret
push
pop
stc
cs
ds
jns
jle
mov
movsb
lret
into
sbb
fs
xchg
sti
inc
int
imul
sar
xchg
into
shll
add
ret
lds
cltd
sbb
push
sbb
hlt
mov
inc
fsubrs
push
adc
or
and
sub
adc
outsl
pop
fwait
jge
inc
pusha
sbb
pop
mov
out
jp
mov
pop
pop
xorb
xchg
add
jno
popf
std
xchg
and
stc
shr
stos
dec
bound
xchg
out
imul
adc
xchg
daa
addr16
les
cs
scas
gs
mov
fistpl
push
mov
imul
add
mov
int3
or
sub
lds
pop
pop
dec
daa
aas
sub
pop
xor
insb
sub
xor
in
sbb
sbb
loope
add
lods
sbb
cmp
and
xchg
push
movsb
subl
lods
mov
sbb
into
fwait
pusha
insb
fbld
int
cmpl
inc
cmp
cmp
je
stos
xor
lret
lret
daa
or
add
fsubrs
cmp
add
pop
inc
push
imul
aam
sbb
shrl
jae
cltd
adc
int
add
mov
in
pop
mov
popf
sarl
dec
jb
inc
jbe
xchg
stos
xorl
mov
pop
gs
jbe
push
inc
cli
pop
andl
cltd
cmpsb
and
add
push
mov
cld
andb
mov
iret
mov
std
loopne
xor
aaa
shlb
cmp
mov
stc
mov
or
cmc
inc
test
or
lods
call
mov
mov
negb
mov
adc
xchg
shrl
xchg
pusha
cs
xchg
enter
int3
mov
test
aas
ds
xchg
fnsave
std
jmp
clc
sti
test
hlt
imulb
out
in
mov
ds
mov
out
mov
push
loope
subl
mov
mov
iret
mov
xchg
jl
mov
jo
push
popf
jne
dec
popa
mov
dec
push
xchg
push
outsl
fwait
das
inc
jae
sub
es
jp
and
mov
jne
test
jo,pt
mov
adc
xchg
add
popa
pop
mov
pop
pop
mov
sbb
jmp
jns
imul
pop
les
scas
ja
pusha
xlat
xor
ljmp
sbb
mov
stc
jecxz
icebp
xchg
mov
push
iret
mov
push
push
int3
arpl
paddsb
faddl
out
fisubrs
cs
inc
mov
sbb
inc
cli
sbb
dec
movsl
sbb
stos
addr16
imul
push
jnp
shrl
imul
push
mov
add
cwtl
lock
mov
js
inc
inc
sub
xor
scas
push
inc
or
dec
cmpsb
cmp
divl
shr
mov
pop
mov
lods
lock
mov
mov
mov
cmp
outsl
jmp
cmpsb
lock
mov
mov
add
lods
sub
jb,pn
sbb
es
adc
push
sbb
lea
adc
dec
fs
stos
mov
mov
clc
popa
jge
jno
and
aad
je
outsl
stos
xchg
xlat
out
or
add
pusha
movsb
push
add
scas
xor
sbb
mov
adc
jnp
mov
xlat
lods
scas
push
push
and
ds
inc
mov
cmc
mov
cmpsb
imul
xor
icebp
xchg
xlat
dec
loop
adc
push
out
push
cltd
popa
add
fs
pop
mov
mov
and
out
adc
cli
imul
hlt
pop
addl
sub
or
fsubr
inc
sti
xchg
mov
and
sbb
jge
pop
xchg
push
inc
ds
subb
mov
mov
mov
push
lahf
add
cmp
xchg
daa
cli
sub
out
shrl
fmull
jno
dec
std
outsl
jae,pt
or
js
scas
fucomi
nop
push
ss
or
sub
movb
sarb
js
mov
or
xor
dec
adc
cmp
cmp
pushf
pop
imul
sbb
pop
or
fidivs
addr16
mov
test
push
test
mov
adc
mov
inc
mov
scas
mov
mov
sbb
insl
leave
lcall
jle
out
les
xchg
dec
or
jne
int
mov
mov
pop
and
dec
add
dec
imul
pushf
sbb
or
clc
fsts
sub
push
push
adc
imul
movsb
add
jg
pop
pop
ds
sarb
repz
jae
or
sub
and
jne
fcmovnb
mov
imul
jno
xlat
mov
push
lret
jnp
aam
pusha
adc
jnp
in
and
and
and
adc
lcall
fcompl
shll
mov
pop
mov
jp
xchg
es
xor
outsb
iret
cmc
test
test
dec
push
ret
ds
lds
mov
into
stos
loop
xchg
jns
fsts
aam
dec
adc
mov
xchg
sbb
ss
lea
popa
push
clc
out
imul
lods
lret
jae
gs
adc
mov
cli
outsb
insl
enter
mov
aam
mov
dec
loope
xor
gs
out
sahf
mov
mov
outsl
mov
xor
or
push
test
xor
aas
mov
xchg
inc
mov
push
cmp
dec
mov
xchg
inc
jp
aas
iret
push
daa
xchg
andl
mov
sub
ds
pop
lods
iret
icebp
push
sub
mov
pop
cmpsl
inc
ss
sub
jns
jmp
push
ret
lahf
lret
add
clc
cmp
mov
mov
xchg
popa
popf
push
cmc
and
dec
jg
push
cwtl
xchg
mov
aam
inc
sahf
popa
sbb
adc
call
mov
jle
dec
sbb
adc
mov
fldenv
cmpsl
adc
arpl
jae
jbe
lock
shll
push
jp
cmp
jno
mov
popa
or
mov
in
mov
inc
adc
pop
and
stos
sbb
inc
jg
movsl
ret
test
mov
imul
jo
cmp
mov
xchg
mov
jno
mov
leave
stos
sahf
std
int3
lods
mov
add
pop
das
inc
ss
xorb
ret
push
gs
pop
insb
pop
or
fstpl
push
adc
fwait
xchg
ds
push
outsb
cmp
imul
push
mov
movsb
lcall
cmp
or
mov
repz
mov
jb
outsl
cmp
insl
cmpsl
cli
nop
sbb
lods
mov
sbb
and
mov
or
sub
push
xor
adcb
cli
js
movsl
in
lock
inc
pop
and
inc
inc
pop
aaa
mov
aad
fldz
ror
fwait
into
sarl
fsubs
jmp
adc
jb
xchg
aaa
ficomps
push
xchg
push
sub
outsb
sbbl
mov
adc
and
out
popa
add
gs
loop
mov
inc
rclb
adc
cmp
int3
sbb
cmp
int
pusha
xlat
and
and
jno
push
lret
push
out
and
fimuls
mov
jmp
xor
and
lret
stos
popa
sbb
mov
and
sbb
jae
data16
frstor
xchg
dec
ljmp
inc
mov
addr16
mov
out
and
push
push
inc
popf
push
xchg
push
fcomps
sbb
add
jmp
mov
sarb
sbb
push
sub
pop
cs
aaa
call
mov
notb
mov
decl
mov
xchg
add
mov
cmovnp
cltd
or
mov
inc
aam
add
lods
ficompl
gs
adc
popa
pop
cld
insl
mov
lds
andb
stos
xor
lahf
dec
hlt
movsl
loope,pn
mov
aaa
xor
ljmp
scas
cmp
dec
lahf
xchg
idivl
and
jo
arpl
popf
loope
movsl
lods
in
mov
pop
lods
sub
bound
fwait
jg
inc
push
clc
pop
mov
push
push
cltd
cmpl
hlt
fsubs
lcall
call
pop
sub
or
cmp
xor
in
lds
daa
bound
out
daa
cmp
xchg
mov
or
test
int
and
aam
ds
or
mov
loopne
pop
xchg
bound
cmp
ret
and
mov
and
and
dec
xor
pushf
loope
dec
lahf
sbb
jmp
lods
cli
sbb
and
in
lods
sbb
into
jae
cmp
enter
imul
xor
test
mov
icebp
mov
dec
dec
mov
jp
mov
jns
rolb
mov
sbb
ljmp
or
ret
add
shlb
dec
mov
or
add
mov
jae
test
and
sub
xor
mov
mov
sub
loopne
sub
add
ds
fsubl
mov
mov
pop
mov
inc
mov
xchg
hlt
icebp
lea
dec
call
test
out
lret
aad
inc
gs
mov
gs
xor
leave
xchg
jge
and
push
inc
fs
xor
repnz
push
push
sbb
inc
mov
fisttps
sub
sub
ds
mov
cwtl
es
cltd
arpl
fnstsw
jnp
fsubl
aam
inc
mov
jp
mov
push
dec
ja
jl
xchg
das
push
sbb
shrl
out
xorl
cmpsb
mov
mov
roll
stos
fmull
lret
adc
bound
arpl
sub
or
adc
add
sbb
sbb
dec
xchg
stos
jmp
pop
nop
dec
dec
insl
bound
stc
outsb
rcrl
jecxz
mov
or
js
xor
or
lea
enter
mov
xchg
jecxz
jnp
stc
jae
xor
and
jae
out
jl
ret
ror
fwait
xchg
ds
jecxz
cmp
push
mov
mov
mov
pop
and
push
mov
mov
mov
inc
sarb
xchg
fldt
hlt
repnz
lea
int
mov
cmp
cmp
negb
push
pop
cmpb
mov
pusha
pop
std
cmpl
stc
xchg
jo
mov
cmc
pop
movsb
mov
jb
dec
shl
aad
imul
stc
xor
adc
pop
in
push
out
inc
cmp
out
dec
icebp
lock
out
call
and
mov
out
mov
incb
inc
add
sbb
ret
and
cmp
xchg
xor
xor
sub
xchg
dec
cwtl
or
inc
fildl
rcrl
mov
aaa
bound
pusha
lock
or
or
insb
clc
into
push
outsb
sti
push
test
push
inc
xor
or
jmp
xchg
sub
mov
out
mov
add
addr16
inc
and
jecxz
ja
lods
xor
cmp
loopne
mov
add
insb
mov
mov
imulb
dec
leave
icebp
dec
imul
rclb
push
mov
nop
adc
dec
int
lret
addr16
test
stc
or
fcomi
push
dec
outsb
mov
mov
mov
insb
lea
mov
cmp
and
xor
inc
mov
out
mov
bound
sbb
inc
icebp
adc
sub
mov
adc
jno
xor
xor
adc
pop
loopne
or
or
and
arpl
cmp
push
and
fadds
mov
or
loop
aaa
xchg
pop
arpl
mov
mov
pop
ds
push
aas
xchg
push
add
scas
sub
jmp
fucom
xchg
xor
adc
fucomip
xchg
jbe
mov
lcall
pop
sub
xchg
sub
push
popa
loop
xchg
jno
pop
fldt
push
cmp
das
sbb
jne
scas
sbb
pop
loope
jb
scas
mov
adc
out
in
cmp
jle
stos
cmpsb
ja
pop
mov
and
dec
or
loop
and
inc
jne
inc
lds
inc
int3
iret
pop
inc
aaa
into
add
push
push
addr16
sub
sbb
dec
jbe
outsl
xchg
push
shlb
and
mov
mov
sbb
cmp
xchg
pop
sbb
mov
jecxz
xchg
pusha
sbb
push
fsubs
xchg
xchg
lcall
shr
ficoms
sbb
jg
mov
adc
lds
aad
sub
jg
rcl
rcrl
fisttps
cltd
das
in
ds
mov
cmpsb
scas
mov
add
xor
lods
icebp
xor
fcomi
ss
mov
rorb
cmp
pusha
ret
ds
and
xor
pop
data16
add
in
cltd
ret
pusha
andl
repnz
fdivrs
jg
mov
jl
adc
pop
sub
sub
dec
mov
lods
into
mov
repz
ds
out
pop
loop
jbe
test
pushf
imulb
movsl
and
aas
cmpsl
mov
or
xchg
fisubrs
mov
mov
mov
mov
test
std
or
dec
out
dec
jge
adc
adc
imul
mov
push
pop
cmpsl
and
arpl
lods
pop
jmp
mov
sahf
out
adc
imul
ds
les
jno
in
sub
dec
aam
fimull
enter
add
xchg
mov
add
roll
in
stos
mov
stos
loopne
and
fistpll
mov
dec
popa
push
inc
mov
cmp
jp
add
xchg
data16
imul
mov
add
int
cmp
pusha
in
jmp
push
rcl
das
push
call
sub
sbb
ffreep
aam
sbb
jns
inc
jmp
inc
movsb
push
sbb
dec
mov
pop
dec
sarb
xchg
xorb
leave
sub
inc
pushf
sub
inc
mov
inc
orb
or
pushf
push
arpl
rcl
push
repz
sbb
arpl
scas
adc
xchg
or
pop
xchg
into
fidivrs
cmpsb
mov
mov
iret
mov
push
adc
test
pop
push
lock
ds
cmc
lahf
fsubs
pop
sahf
push
arpl
js
xor
or
fmull
repz
push
jbe
jb
jge
mov
jecxz
std
or
or
scas
arpl
mul
call
mov
jmp
arpl
loopne
ds
add
je
lock
pop
leave
pop
fs
sti
adc
addl
je
xlat
mov
fst
jnp
xorl
add
fistpll
adc
ds
jg
fs
in
sbb
and
repnz
push
dec
cltd
jbe
inc
mov
jp
mov
orb
inc
imul
fs
hlt
jo
lahf
jnp
cwtl
mov
rolb
jns
mov
push
cmp
xorb
push
mov
push
mov
cmpsl
test
cmp
lods
sbb
cmp
adcb
cwtl
ret
and
mov
xchg
imul
pop
lods
mov
nop
jmp
cmpsl
leave
mov
push
ret
dec
push
in
xchg
icebp
ret
sub
dec
test
test
xchg
frstor
dec
pop
je
push
mov
sub
jg
stos
clc
xchg
xor
jl
sbb
mov
mov
mov
or
faddl
aaa
cwtl
fucom
mov
jo
cmp
inc
in
or
je
dec
sub
mov
into
sub
loope
fs
sub
mov
xlat
cmp
sub
imul
stos
jl
ljmp
cmp
adc
sarb
adc
inc
push
aad
test
movsb
cmc
pop
out
xor
fwait
pushl
sbb
mov
enter
pop
mov
mov
jne
push
stos
mov
adc
sbb
sbb
sti
add
dec
aad
dec
push
dec
mov
hlt
dec
cmp
insb
inc
lahf
imul
mov
mov
add
imul
test
mov
mov
sbb
inc
out
lods
fs
pop
mov
mov
xor
cmp
int
cld
mov
out
mov
hlt
les
cs
push
data16
fincstp
jg
aam
sub
pop
jmp
push
mov
mov
lds
or
icebp
cltd
mov
mov
xchg
cwtl
jo
xlat
jbe
or
jo
sti
xor
es
test
lea
out
jle
jns
rorl
mov
and
push
insb
push
pop
cmpsb
mov
aas
shrb
int3
inc
jmp
sahf
fidivl
testb
jg
pop
test
push
lret
cmpsl
dec
aad
cmp
les
rclb
pop
insl
sub
lahf
mov
push
mov
movsl
out
ds
xchg
add
imul
or
scas
movsb
test
adc
or
fldl
mov
jmp
jnp
cmp
push
jbe
rclb
push
inc
mov
xor
mov
push
icebp
xor
or
mov
mov
mov
cmp
pop
push
xor
bound
in
sbb
mov
mov
nop
xchg
mov
jbe
stos
xor
pop
fcmovnb
sbb
stos
leave
xchg
lock
xor
mov
inc
cwtl
cmp
ja
mov
cld
inc
xchg
adc
mov
or
jl
xchg
pop
pop
jge
cltd
mov
aam
xchg
cmpsl
xor
add
adc
aas
sbb
dec
xor
adc
rorl
pusha
in
fnstsw
cmpsb
push
fsts
dec
inc
mov
pop
fs
mov
notl
subl
aaa
cmp
sub
fwait
cli
mov
jne
lahf
xor
hlt
enter
std
paddq
pop
inc
orb
rorl
rorl
arpl
pop
mov
mov
mov
add
data16
insl
xor
jns
mov
mov
lods
div
and
mov
fs
jle
inc
cmp
and
inc
daa
pusha
or
movb
ljmp
in
cld
mov
inc
jmp
enter
jmp
adc
mov
testb
cltd
mov
ds
push
cmpsb
shlb
adc
stc
xchg
outsl
cwtl
adc
adc
iret
jo
mov
sub
xlat
insb
mov
mov
inc
mov
xlat
mov
cmp
in
jbe
lahf
sub
mov
xchg
test
add
loope
xlat
in
sbb
mov
sub
mov
xor
and
and
mull
fcoms
jle
or
mov
outsb
lahf
pop
aam
adc
test
xchg
insl
push
ja
adc
sbb
xor
mov
add
and
orb
sbb
lret
sti
int3
mov
fs
dec
fisubrs
mov
jl
sti
stos
js
out
aaa
bound
gs
adc
out
mov
int
popf
scas
dec
in
ds
sub
dec
jge
mov
inc
sub
ret
jb
std
mov
mov
fwait
mov
les
repnz
cltd
scas
xor
jne
sbb
gs
ret
mov
mov
xor
inc
pop
xchg
and
sahf
movsl
sbb
mov
push
mov
dec
and
add
fs
sub
je
lea
mov
cld
xchg
imul
out
push
fs
and
mov
sbb
js
mov
mov
pop
cmp
cmp
mov
push
das
cmp
imul
jbe
pop
gs
jno
mov
mov
aad
cs
pop
add
fdivl
arpl
pop
loopne
dec
lea
add
sbb
arpl
and
dec
adc
jp
cmpb
pushw
cmp
kmovb
mov
fidivrs
sbbl
mov
adc
or
arpl
push
stos
jl
jo
mov
ljmp
sti
js
mov
push
mov
in
pop
movsl
addb
and
aad
fstpt
adc
in
imul
aam
mov
test
mov
jnp
ds
outsb
enter
pop
cwtl
jle
shl
mov
push
and
pusha
stos
mov
push
mov
out
movsl
jb
cwtl
shlb
ljmp
cmp
xchg
mov
loopne
int3
cmp
nop
push
shl
mov
or
jmp
sbb
shl
push
popf
inc
ds
cmp
adc
scas
mov
cld
sbb
in
icebp
mov
test
jbe
shll
jle
cmp
lret
es
and
cli
aam
test
jmp
mov
aaa
data16
adc
nop
or
mov
inc
inc
test
popl
push
hlt
ljmp
sarl
xor
out
ror
out
or
xchg
jmp
leave
xchg
adc
pop
push
push
cli
inc
scas
add
gs
jl
jne
gs
aas
mov
mov
jae
jnp
jecxz
ja
jecxz
shlb
sub
jmp
cmpsl
subb
pop
mov
xchg
mov
imul
push
mov
mov
jl
mov
cmp
jecxz
gs
cmp
ljmp
lahf
and
scas
and
std
mov
and
and
and
and
jp
xor
inc
bound
outsl
rorl
ds
pop
rolb
repz
inc
jns
mov
adc
mov
lods
mov
stos
mov
lret
fs
repz
mov
push
test
xchg
sti
es
movsl
das
cmp
pop
adc
vucomisd
jecxz
add
cmp
mov
mov
ud2
daa
mov
getsec
mov
mov
data16
push
in
adc
jns
mov
aam
or
fimull
dec
aas
adc
sti
pushw
ret
cltd
popa
movsb
test
cmp
push
push
push
fstpt
jecxz
lcall
test
addr16
jo
pop
push
add
pop
insb
cmp
and
cli
addb
test
jp
cmp
leave
inc
lret
push
ds
fldenv
jp
or
mov
jecxz
xchg
sub
mov
scas
cmpsb
xor
flds
sbb
js
aas
leave
mov
stos
cwtl
test
and
test
cmp
iret
inc
cmp
xchg
xor
cmc
xor
fmuls
pop
idivl
pop
jnp
insb
data16
add
push
push
mov
mov
stc
jecxz
aas
repz
jle
imul
out
roll
xor
ja
roll
inc
xor
cmpsb
rorb
pop
sub
ljmp
stc
shll
xchg
jne
in
mov
cmp
adc
and
or
in
nop
je
hlt
shrl
mov
xor
inc
xor
mov
mov
insb
mov
sti
std
cmpsl
xor
cmp
mov
lret
mov
xchg
mov
aam
cmpsb
mov
out
inc
jae
js
nop
mov
cmpsl
test
ds
xchg
in
js
and
push
fimull
inc
lds
ds
jp
cmp
dec
mov
xor
add
dec
mov
push
fwait
or
stc
fistpl
cmc
insb
int3
shlb
fcoml
mov
inc
sbb
decl
cmp
in
int3
adc
mov
cmp
imul
or
and
mov
cmp
ss
es
out
test
ljmp
push
cmp
or
mov
out
mov
mov
sahf
pop
loop
inc
enter
mov
in
stc
mov
or
in
add
xchg
and
jae
jp
js
xchg
cltd
data16
daa
cmp
shrl
addr16
ret
data16
push
lret
sbb
retw
repz
xor
in
dec
enter
mov
cmpsl
inc
insb
cmpsb
cwtl
jnp
mov
subl
out
stos
pop
idiv
inc
and
mov
cmp
ss
pop
pop
mov
mov
xchg
or
cmpsb
imul
mov
je
jo
add
jbe
mov
inc
popa
testb
xor
popf
and
jge
fistpl
push
loope
mov
scas
fidivrs
mov
test
mov
ret
cli
jbe
mov
hlt
mov
icebp
ret
sahf
sub
hlt
mov
fisubrl
jmp
cli
sbb
cltd
outsb
mov
mov
or
push
and
sbb
dec
into
mov
daa
cmp
out
adc
into
aam
cli
call
mov
addr16
dec
pusha
pop
mov
fisttpll
stos
fs
jmp
pusha
or
shr
jg
rcrl
mov
push
push
std
std
cli
mov
fidivl
imul
xor
out
out
out
out
sti
fstpt
mov
in
xchg
inc
sub
add
mov
add
mov
mov
jno
add
jp
std
jmp
xchg
in
ret
xor
add
xlat
stc
sbb
cmpsl
mov
xor
sti
test
or
jns
gs
rcrb
dec
popl
mov
xchg
mov
dec
iret
and
mov
dec
out
cmp
inc
cmp
pop
das
dec
pushl
ds
mov
iret
mov
imul
fwait
mov
scas
mov
test
push
loope
adc
sbb
dec
inc
arpl
mov
push
sarb
pop
enter
in
aaa
pushf
pop
je
jp
decb
test
push
std
cmp
addr16
out
mov
jl
jbe
mov
push
lret
adc
je
std
lds
scas
mov
adc
lret
inc
mov
push
lods
cwtl
int
jp
jle
cmpsl
adc
mov
sbb
push
mull
xchg
or
fs
push
add
aam
loopne
cmp
xor
addr16
mov
scas
fwait
mov
ret
cwtl
push
js
xor
aaa
cmp
add
inc
loopne
shlb
outsl
lret
pop
inc
sbbl
lds
mov
scas
or
mov
jnp
enter
aas
mov
out
ja
call
mov
stos
arpl
push
jp
pop
push
out
insb
adc
sbb
add
xlat
call
into
mov
mov
sub
push
mov
mov
mov
icebp
mov
sbb
xchg
in
jmp
jg
mov
imul
test
mov
sub
push
out
shrb
or
pusha
xor
je
loop
outsb
push
jb
xor
cmp
push
aas
xor
rorb
mov
ficompl
or
fistps
jbe
pop
mov
js
cmp
mov
adcl
addr16
sti
mov
iret
mov
test
jne
mov
shrb
dec
push
and
test
mov
insl
fs
xchg
and
xchg
inc
adc
mov
xchg
cmp
push
and
aam
and
cmpsb
lret
push
hlt
or
int3
mov
addr16
cmpsl
es
addr16
std
fidivl
aaa
add
and
mov
fcompl
ds
outsb
sbb
xchg
pushf
inc
iret
xchg
ficompl
ds
or
mov
mov
out
pop
pop
daa
loop
sbb
fldenv
pop
test
mov
sbb
adc
adc
pop
hlt
cld
mov
es
mov
and
imul
out
sub
jg
cmp
xchg
add
inc
xor
mov
mov
push
mov
push
xchg
mov
mov
jg
scas
enter
mov
jg
or
jg
pop
out
cmc
mov
dec
stos
and
add
sub
into
in
shrl
in
pop
or
lret
inc
pop
nop
ja
in
push
push
popf
clc
sub
cmpsl
imul
cli
fstpt
and
popa
mov
das
sub
inc
fimull
ret
pop
cmp
cltd
mov
mov
or
outsl
sbb
inc
lods
pusha
fwait
sub
fimuls
cmp
scas
or
sub
mov
xchg
repz
adc
push
xchg
ds
std
cwtl
adc
pop
mov
xchg
push
jo
test
pop
sbb
rcrl
call
popa
iret
iret
jp
xchg
insb
outsl
adc
incl
mov
out
push
mov
sub
mov
sub
ret
sub
rorl
mov
or
js
pop
sub
xchg
repnz
scas
or
inc
cmc
jnp
xor
inc
cmpsb
andb
jge
add
jg
sub
push
int3
mov
and
test
and
ja
sbb
testb
hlt
mov
adcl
addb
mov
daa
in
dec
add
inc
adc
xchg
pop
push
xor
xchg
aad
and
sbb
dec
jge
jl
insl
test
fnstcw
stos
adc
iret
mov
adc
dec
cmp
movsb
lods
mov
call
sahf
movsl
fwait
lock
mov
movsl
rol
pop
outsb
inc
push
push
repz
push
mov
sbb
mov
scas
push
insl
or
xchg
ja
adc
int3
stos
in
adcb
subl
inc
divl
mov
add
xchg
mov
push
inc
sub
cmc
cmp
xlat
call
mov
jecxz
or
roll
sub
bound
dec
mov
or
sub
ss
out
aam
aaa
ret
inc
ss
div
lcall
test
mov
rcrb
fimuls
lcall
bound
jae,pt
mov
mov
pop
mov
pop
in
xor
and
pusha
mov
sub
hlt
negb
scas
aas
jl
pushf
mov
dec
pop
movsl
sbb
mov
cmp
jb
or
or
neg
jge
add
je
les
and
lock
aas
adc
xor
inc
xor
push
mov
push
and
ds
mov
lds
orb
xor
push
mov
add
mov
shrl
inc
pusha
ret
jb
loope
in
mov
std
in
sub
dec
push
jbe
inc
xor
lret
jge
jg
ljmp
sbb
inc
mov
fistpl
ret
fistpll
lret
and
out
add
les
orb
out
cmc
pop
dec
mov
mov
jp
sub
fistpll
mov
jmp
mov
mov
imul
and
xchg
jnp
popf
mov
gs
lcall
dec
lods
insl
push
sub
jno
jge
push
jbe
shrl
push
jns
lods
out
shll
mov
fildll
rol
adc
inc
outsb
out
sub
popa
es
mov
push
in
dec
push
iret
sti
loope
mov
ja
addr16
les
ljmp
movsb
xchg
xor
push
mov
xlat
push
cmp
call
mov
jecxz
mov
fwait
jnp
jne
je
mov
hlt
fdiv
scas
loopne
cmp
sahf
mov
aad
out
xchg
adc
and
mov
ret
mov
push
out
push
test
insl
div
sbb
stos
fnstcw
jp
mov
inc
test
add
mov
sbb
out
pop
push
inc
out
push
or
pushw
add
xchg
xchg
sbb
fwait
int
adc
xor
cwtl
outsb
bound
outsl
in
xchg
fsubrl
sub
cmp
aas
std
jp
add
xchg
mov
adc
or
push
push
cltd
push
or
mov
sti
pop
jp
mov
mov
testb
cwtl
jecxz
inc
std
iret
xchg
dec
pop
mov
ja
icebp
sub
std
xor
js
add
sbb
cmpl
xchg
jmp
xchg
pop
inc
or
jl
xlat
cmp
js
and
mov
jl
stos
inc
les
popf
ds
mov
or
je
jp
testb
iret
xchg
imul
xchg
sbb
inc
pop
adcb
adc
fs
repz
mov
mov
jecxz
dec
mov
pusha
mov
fs
loop
xlat
jne
addr16
push
lock
std
inc
sub
test
mov
adcl
mov
push
out
and
int
cmp
fiaddl
lds
pop
jae
fisubs
jle
les
and
in
sarl
cmp
lea
pop
cld
dec
pop
ds
insb
sbb
add
sub
out
and
out
sti
shl
adc
shl
pop
lock
aad
out
push
ret
imul
mov
cli
mov
aas
jmp
add
out
adc
loop
mov
sbb
cmp
cmp
sbb
cmp
mov
or
lods
movsl
sahf
mov
testb
fadds
adcl
jmp
test
in
ds
data16
mov
xchg
push
cmp
cmpsl
mov
lret
testl
add
xor
dec
xchg
les
jmp
mov
insl
inc
sub
jle
xchg
adc
xor
aam
push
js
test
fcoml
lret
gs
sahf
and
jbe
popf
mov
imul
cltd
cmp
add
jmp
mov
cmpsb
lea
outsb
jae
test
xlat
inc
addr16
out
pop
mov
push
out
push
imul
push
outsl
jmp
and
mov
mov
jns
aad
mov
push
lcall
aam
cmp
imul
loopne,pt
xchg
addr16
push
lods
fistpl
xor
faddl
jb
fwait
and
and
xchg
or
test
adc
rcrl
gs
test
pop
mov
clc
push
xchg
push
stos
dec
cli
sbb
push
out
cmp
out
repz
jmp
mov
jb
into
outsl
sub
mov
xor
imul
cmp
adc
dec
ds
pushf
cli
sbb
dec
ds
dec
rcrl
mov
std
jae
push
addr16
mov
imul
lds
mov
js
cmp
push
mov
addr16
fcompl
movsl
in
outsl
sbb
jbe
add
rcrb
mov
xor
je
push
xor
in
leave
lea
out
mov
add
rcll
sbb
out
add
bound
imul
jg
push
cltd
bound
nop
fs
mov
daa
push
mov
or
fmull
in
or
scas
jb
push
subl
xor
push
inc
pushf
push
out
xor
xchg
mov
stc
decb
aam
clc
stos
int3
out
pop
and
imul
jae
dec
outsl
push
test
add
cmpsb
sub
fsubrs
ss
push
sub
mov
or
jl,pn
shr
push
add
out
jae
push
sti
dec
adc
mov
imul
in
test
lahf
push
sahf
es
jl
mov
push
out
pop
xorl
and
ss
dec
add
push
aam
shrl
lcall
ljmp
aad
mov
imul
imul
push
mov
fistpll
jge
imul
sti
iret
cli
fldcw
xor
lret
and
pop
and
push
pop
cld
push
adc
outsl
clc
dec
mov
jb
arpl
jnp
jl
mov
pushf
dec
push
jne
arpl
gs
jae
stos
cmp
sbb
sub
jnp
repnz
and
sbb
insb
loop
inc
push
push
fdivrl
push
std
inc
or
and
jo
and
push
fwait
mov
inc
cmpsb
ret
and
mov
enter
mulb
dec
mov
leave
mov
adc
clc
and
notl
sbb
mov
dec
ds
int3
loope
stos
insl
xchg
notb
cmp
faddp
cltd
bound
ja
aas
mov
imul
sub
or
aas
enter
bound
loop
adc
xor
fstcw
xor
push
popf
lret
test
call
push
fstpt
cmp
dec
adc
push
mov
test
sarb
mov
push
ds
aaa
in
andb
cmp
dec
xor
pop
fmuls
lcall
repnz
imul
add
jmp
jo
jnp
ds
xorl
icebp
jb
adc
or
ds
subl
ds
imul
popfw
nop
or
ljmp
lea
stos
dec
lret
adc
insl
aas
aad
mov
adc
into
or
jg
out
repnz
pop
div
adc
sub
ret
mov
xchg
mov
jecxz
rorl
ljmp
jecxz
cmp
and
out
data16
leave
lods
pop
or
mov
rorb
xor
cltd
dec
mov
inc
jb
in
or
out
jbe
gs
out
mov
jp
pusha
iret
xchg
fildll
mov
fstpl
mov
sarb
jnp
lret
lods
push
mov
jb
jg
mov
and
dec
xlat
sar
jg
xchg
es
sahf
xorb
push
adc
xor
mov
and
sub
leave
insl
in
adc
scas
pop
loope
mov
mov
notl
sbb
ljmp
leave
jno
mov
pop
push
cmp
push
ljmp
test
rcl
inc
decb
xchg
pop
clc
push
dec
and
add
xchg
inc
rolb
xchg
mov
jmp
ljmp
sub
or
mov
xchg
cwtl
in
sub
push
or
mov
mov
jnp
or
aaa
lods
inc
outsl
imul
iret
lods
push
test
sub
push
lret
clc
daa
sbb
inc
xchg
sbb
test
jns
cmp
mov
lods
popa
sbb
cli
pop
inc
jle
adc
cltd
dec
in
sahf
sub
dec
scas
push
mov
imul
mov
mov
cld
add
sbb
jbe
aad
cld
xor
inc
cmp
push
jmp
cltd
enter
je
add
sbb
lds
punpckhwd
push
std
lret
mov
pop
xchg
cmp
ljmp
fadd
sysret
push
lahf
mov
pop
rorb
push
mov
sbb
and
xchg
pop
inc
mov
xor
xchg
fwait
xchg
lods
dec
loope
out
scas
sub
cli
mov
jmp
mov
and
idivb
sub
popa
call
mov
pop
or
ja
mov
int3
lahf
mov
pop
mov
jne
data16
jecxz
icebp
test
fdiv
test
adc
and
push
cmc
mov
pusha
test
cmpb
inc
dec
cmp
jb
xchg
xchg
fdivr
add
out
imul
cs
iret
imul
faddp
mov
inc
pop
mov
repz
repz
es
xor
jbe
cmpsl
ja
push
mov
jb
cmpsb
adc
jmp
fidivrl
pop
in
test
cmp
imul
ljmp
mov
xchg
sahf
dec
inc
jb
icebp
cli
pusha
data16
movsb
std
pop
rcrl
dec
jle
mov
out
mov
stos
jmp
pusha
insb
sub
and
or
mov
mov
imul
inc
jle
mov
imul
inc
cmp
movsl
dec
test
mov
imul
imul
insb
testb
daa
and
test
inc
mov
enter
jae
ret
imul
push
xchg
cmp
push
xchg
cmp
je
cmc
rcrw
fwait
nop
ds
lcall
cmc
push
hlt
xor
imul
imul
xchg
ds
add
xchg
hlt
mov
adc
lock
das
inc
das
imull
ja
idivb
outsl
mov
xchg
imul
leave
repnz
mov
pop
jecxz
pop
mov
repnz
and
xchg
add
lcall
and
mov
repz
adc
or
jae
loop
insb
sbb
xchg
cmpsl
push
sub
mov
lahf
out
aam
imul
cmp
xchg
cs
jle
pop
clc
mov
jne
xchg
jmp
cmp
push
push
mov
jp
inc
cmp
cmc
xor
fidivrs
mov
ffreep
ja
movsb
imul
jno
sub
sbb
sbbl
or
stos
sub
pop
andb
cmp
xchg
fidivrs
xchg
push
mul
lea
push
in
mov
insb
lret
jle
scas
push
fs
xchg
xlat
mov
sub
ds
dec
mov
xor
jae
push
loopne
inc
or
inc
aas
ret
jp
loope
mov
cmp
add
fwait
popa
push
stos
sbb
je
mov
popw
clc
cmp
jle
and
cli
lahf
and
sub
add
into
xor
ret
idivb
push
insl
mov
dec
add
pusha
sbb
repz
sbb
pop
inc
aaa
mov
enter
scas
movsl
and
mov
incb
dec
fbstp
push
jge
gs
repz
adc
and
mov
divl
sub
push
cmp
rcl
scas
dec
pop
leave
sub
sub
in
push
js
mov
dec
jo
inc
sti
xchg
repz
into
out
cmp
inc
jge
enter
orb
add
insb
fwait
jns
js
cmp
or
stos
xchg
loopne
mov
lret
mov
adc
ljmp
cmp
repz
mov
insl
in
add
flds
xor
aad
mov
cs
notl
jbe
clc
outsb
fbstp
mov
lea
ds
outsl
adc
xor
cltd
xchg
daa
imul
xchg
adc
inc
cmp
jmp
sarl
mull
popf
jno
mov
cmc
insl
pop
sbb
jmp
lods
dec
xor
xchg
xor
lods
mov
sbb
dec
lret
add
cmpsb
jne
sub
int
dec
test
aas
pop
loop
xor
iret
inc
shlb
xlat
cwtl
adc
dec
mov
out
push
test
push
mov
and
jp
mov
jmp
pusha
push
pop
insb
popf
inc
aaa
jge
or
cs
cmp
xor
insb
pop
out
mov
pop
jne
xor
sti
push
jg
mov
aas
ds
and
popf
sub
dec
mov
setbe
stos
sbb
push
fistpl
push
jle
test
ret
sub
stos
dec
dec
push
aam
scas
dec
daa
push
ret
mov
and
cmp
adc
hlt
imul
loopne
and
mov
sub
ret
mov
mov
in
btc
mov
lea
cmp
mov
lret
mov
ds
inc
movsl
mov
je
ds
pop
popf
aas
pusha
aas
fstps
and
cli
jne
lods
lods
mov
inc
call
pop
mov
das
mov
mov
adc
movsl
adc
cmpb
dec
test
fbstp
pushf
xchg
icebp
in
ja
and
xor
mov
imul
xchg
sbb
imul
dec
popf
jns
lret
inc
inc
mov
insb
js
jo
out
jo
loop
out
dec
cmp
pop
mov
mov
pop
xchg
movsl
mov
push
cld
loopne
inc
enter
fisubl
fistpll
std
xchg
js
xchg
leave
nop
mov
push
aad
mov
test
aas
repnz
sbb
jge
loopne
push
cld
test
sbb
xchg
jns
mov
paddb
fidivrl
ret
add
clc
cmp
mov
sbb
lahf
pop
jecxz
sbb
rorl
loop
in
dec
cmp
inc
or
jbe
in
pop
aam
lock
scas
jbe
orb
cli
push
insl
imul
mov
loope
and
adc
add
sbb
ret
jecxz,pt
xchg
and
xor
es
jne
and
mov
int
dec
stos
sbbb
jno
xchg
push
repz
xchg
jne
ret
insb
sub
xchg
lahf
fimuls
xchg
fisubrs
sbb
insb
outsb
xchg
xlat
jno
out
inc
cli
loop
mov
dec
mov
mov
call
pop
imul
lods
andb
mov
jne
bound
insb
es
scas
cmp
scas
ja
cli
lcall
arpl
out
adc
aaa
adcb
jl
fimull
ret
mov
insl
lret
mov
enter
pop
xor
jl
adc
je
fmul
sbb
cmp
enter
push
stos
adc
fimuls
cmp
lahf
daa
gs
adc
adc
and
mov
mov
subb
jl
orb
sub
int3
icebp
insb
mov
push
cmpsb
push
xor
in
pop
mov
fsubrl
lods
loopne
and
jo
jo
loope
pop
mov
cltd
fadd
insb
cmp
inc
mov
push
jo
outsl
mov
pop
insl
cmove
jno
mov
repz
pop
int
pushf
xchg
outsl
mov
nop
lahf
es
ds
hlt
cmp
inc
rclb
xchg
enter
mov
jle
out
mov
sbb
push
dec
shl
sub
lahf
cmp
jae
bound
jmp
shrb
out
inc
mov
sub
pop
fsubrl
sbb
cmc
lcall
mov
ds
xchg
jnp
sahf
sbb
xchg
int3
cmp
add
inc
orl
mov
cmp
or
jl
push
or
popf
and
adc
stos
add
aad
repnz
sub
scas
dec
sub
cmp
or
add
into
mov
popa
or
pop
int3
inc
cli
inc
aaa
ds
mov
cmp
mov
push
xor
add
pop
insl
and
xchg
sbb
rep
push
imul
mov
add
out
cmpsb
add
jp
shlb
lahf
cmp
mov
pop
ja
bound
aas
push
xchg
dec
mov
push
lcall
jg
pushf
stc
sahf
mov
mov
or
daa
iret
cmpsb
mov
xlat
push
imul
mov
mov
push
ds
aas
testl
xor
or
lock
out
dec
ss
jbe
nop
arpl
enter
stos
jae
cmp
notl
das
ss
dec
ds
outsb
mov
cmp
insl
bound
cmc
jns
dec
sbb
rolb
insl
xor
cmp
std
mov
mov
jmp
push
mov
or
mov
xchg
xorb
xchg
xlat
pop
data16
and
ds
ret
out
insb
push
prefetchwt1
or
out
jge
adc
xor
sysexit
pop
cs
push
insl
push
xlat
pop
jecxz
sub
in
jo
sub
test
push
insl
mov
push
push
adc
ds
mov
and
xchg
lock
jge
stos
push
jne
sbb
pop
inc
mov
lea
xor
dec
je
mov
std
test
call
mov
xorb
jo
cmc
stos
arpl
inc
stc
lea
fcompl
mov
test
call
jp
lret
dec
jle
ss
or
mov
add
cltd
pusha
push
call
or
je
inc
push
sbb
mov
andl
pop
mov
and
xchg
jge
mov
push
or
movsb
pop
aas
fidivrl
add
daa
pop
add
add
lret
adc
rcl
mov
or
sbb
xor
mov
lret
ds
test
pop
cmp
cmpsb
into
jbe
sub
cwtl
sub
repnz
lcall
xchg
lcall
jno
or
push
jle
sahf
fwait
mov
cmp
not
dec
mov
jecxz
neg
data16
mov
rorb
lahf
test
into
sbb
insl
inc
ds
push
cmp
lea
push
pop
inc
insb
std
mov
cmpsl
or
ds
or
xor
mov
xchg
outsb
movsb
mov
ja
mov
xor
out
push
es
fidivrl
sbb
pop
adc
test
js
ret
call
call
es
push
and
jl
je
mov
cmpsl
cmc
add
aaa
sbb
dec
fwait
sub
cmp
push
push
sub
mov
iret
xchg
or
sub
inc
inc
push
sbb
fs
and
fs
mov
pop
cs
xchg
push
mov
and
stc
subl
push
sub
cmp
lret
call
outsl
mov
rcll
ret
mov
mov
leave
out
cmpb
shl
sub
mov
mov
lods
xchg
cmpsb
dec
mov
dec
jns
mov
pop
hlt
adc
push
jl
sub
or
popf
imul
repnz
loop
ficoms
ds
outsb
cmp
push
insl
add
inc
jle
cmp
das
pop
das
stc
loope
data16
das
jb
push
mov
cwtl
dec
stos
sbb
xorl
add
loope
jg,pt
mov
stos
add
xchg
stc
pop
xchg
pop
cmp
cmp
enter
mov
adc
dec
ficoms
adc
sbb
icebp
cmp
push
inc
imul
imul
cs
clc
mov
fisttpl
int
adc
ds
rol
fs
orl
jp
fisubrs
sbb
pop
popa
mov
inc
jb
sbb
stos
imul
sbb
pusha
lret
subl
adc
pop
pop
push
aas
inc
stos
in
dec
jnp
push
xchg
or
cmc
out
mov
stos
and
mov
loop
pop
cld
scas
out
dec
mov
into
out
jae
mov
jge
mov
cmp
add
pop
aas
jb
mov
outsl
pop
aas
outsl
mov
gs
outsl
aam
cmp
mov
outsl
in
aas
sbb
pop
cltd
mov
xor
cs
mov
mov
inc
sbb
es
push
fldl
add
shrb
sbb
subb
pop
mov
pop
jnp
pushf
inc
or
jg
test
pop
push
push
mov
cmp
inc
push
aas
push
bound
cmp
dec
jl
es
test
outsb
xchg
int3
mov
mov
aad
xchg
add
xchg
xchg
jge
out
xor
xchg
lcall
bound
sti
in
sbb
lds
movsl
into
push
in
sti
test
pop
shll
ljmp
aas
iret
les
stc
ror
sub
mov
ds
pop
mov
fadd
xchg
iret
lock
mov
ljmp
jle
imul
in
stc
sbb
push
or
dec
pop
dec
popa
call
add
mov
sbb
cld
sahf
sti
pop
mov
lret
fdivrl
sub
jne
push
popa
mov
shlb
xchg
fldenv
jns
cltd
dec
cmpsb
ds
pop
mov
sub
mov
inc
mov
mov
popa
mov
fimuls
cmpb
fs
lahf
aad
arpl
test
xchg
and
mov
dec
xchg
jle
inc
negl
jns
or
mov
jle
mov
pop
mov
sar
mov
inc
sti
xchg
mov
mov
push
repnz
jp
fwait
cmpsl
insl
mov
xchg
mov
loopne
aam
fisttpll
shll
push
enter
jmp
mov
jmp
mov
sub
mov
inc
mov
cltd
aas
and
jecxz
int3
inc
mov
shl
sbb
fistps
jmp
les
pop
cltd
cmp
cmp
adc
subb
jnp
xor
cmp
insl
popf
xor
xlat
inc
mov
jo
jge
push
enter
lret
pop
hlt
push
call
ds
pop
lods
movzbl
mov
stc
inc
jmp
mov
je
sub
xor
cmpsl
pusha
shll
ret
sub
outsb
test
fidivrl
jb
roll
fldenv
xchg
jg
dec
out
xor
daa
xchg
jne
and
pop
out
jae
cld
das
clc
or
loop
mov
ss
mov
xor
pop
in
jbe
mov
inc
fistpl
lret
adcl
and
pushf
sbb
loope
mov
incb
jns
adc
mov
out
sbb
or
cld
inc
ds
mov
pop
fildll
pop
fmuls
mov
mov
loop
sbbb
inc
xchg
pusha
jmp
mov
mov
mov
movsl
jbe
sub
outsl
pop
inc
lret
mov
inc
jge
fcoml
stos
or
addr16
sbb
push
xchg
btr
mov
xchg
fcompl
loopne
dec
aaa
sbb
jge
jg
push
sub
xchg
es
jo
daa
inc
fiaddl
adc
fsubp
lea
enter
loope
jb
lahf
lea
mov
xchg
test
sub
sbb
mov
les
inc
cmp
xchg
lods
test
iret
ss
sub
jne
fs
aas
sub
daa
cmc
pop
mul
in
mov
cmpsl
negl
lods
push
or
pop
pusha
js
mov
mov
pop
xor
stos
dec
xor
adc
pop
sahf
xchg
inc
nopl
es
incl
sub
cmp
jg
xor
inc
xlat
lret
mov
and
xchg
jae
jge
fcompl
decl
mov
pusha
dec
test
jge
mov
das
outsl
jnp
outsl
pop
cwtl
xor
xor
or
xor
lea
dec
push
jge
or
and
jae
cmpsb
int3
xchg
pushf
scas
test
int3
mov
jbe
clc
push
ss
xchg
jae
cld
fldcw
repnz
aam
xchg
ds
mov
pop
inc
test
push
repz
mov
cld
add
cwtl
mov
or
xchg
mov
xchg
xor
jle
lret
jle
rcl
xchg
fwait
imul
into
ja
ret
jae
test
xorl
stos
dec
push
push
icebp
movsb
pop
jmp
icebp
testb
mov
xchg
jecxz
scas
loope
mov
push
je
dec
or
push
push
or
push
inc
test
shrl
adc
imul
popa
push
js
lock
cmp
jg
jge
aaa
jae,pt
jle
shlb
aaa
mov
jb
ss
and
aam
lds
xor
inc
orl
add
movsl
xchg
stc
xor
push
mov
and
pslld
mov
sub
sub
mov
leave
rolb
jne
jne
push
subl
fsave
popa
mov
jo
arpl
xchg
leave
cmp
pusha
mov
xchg
lds
in
adc
or
xchg
out
push
lods
or
sbb
inc
cmpsb
jb
push
cmp
push
add
ret
sbb
inc
xchg
mov
inc
popf
jge
sbb
aaa
aaa
push
iret
shrb
outsl
mov
and
inc
add
int
and
adc
cmpsl
and
push
adc
mov
mov
inc
dec
jb
or
jno
pop
enter
xchg
pop
or
mov
cmp
lock
jae
sub
outsl
test
roll
out
rclb
aad
rcl
loop
outsl
inc
mov
xlat
pop
sub
cmpl
jne
fs
loopne
mov
cmpsl
sub
cmp
sub
lods
mov
dec
add
scas
sub
jno
and
jns
cmp
adc
push
add
mov
xlat
xorl
dec
and
cmp
clc
pop
subb
add
push
mov
and
sbb
mov
cmp
pop
int3
push
into
ja
fisubrl
in
js
enter
stos
push
into
or
pop
lret
fwait
nop
imul
cmp
ficoms
dec
push
mov
imul
pop
aas
hlt
or
js
add
mov
dec
sub
pushf
pop
jecxz
decl
inc
addl
xor
push
push
adcl
fstpl
aaa
mov
negl
fwait
cmp
mov
les
cmp
jb
insl
std
push
adc
dec
bound
jne
jnp
sbb
adc
add
cld
inc
adc
fiaddl
or
and
js
mov
xchg
sub
ds
outsb
xchg
cs
or
mov
stc
mov
jo
ds
pusha
cmpsl
pushf
leave
jb
lods
lret
cltd
mov
lods
mov
xorl
mov
sbbl
adcb
in
push
out
xchg
fldcw
pop
nop
dec
aas
cmpb
sub
cld
mov
lds
xchg
pop
fld1
push
inc
mov
movl
push
or
stos
xchg
insb
push
pop
push
sub
cmp
cmp
stos
jp
mov
mov
out
adcl
js
cs
nop
lcall
jo
pop
jne
mov
popa
sub
xor
fxtract
dec
mov
sbb
or
mov
or
test
data16
fcomip
pop
test
mov
mov
shl
or
pop
adc
xlat
inc
stos
jno
xor
mov
sarb
pop
jno
daa
pop
jecxz
aas
int
mov
pop
rcrl
dec
pop
pusha
loopne
jge
mov
add
bound
sub
fadds
push
push
or
sub
das
outsl
jb
push
dec
push
sub
ja
xchg
cmp
dec
push
mov
jle
cmpsl
push
outsl
jge
int3
lahf
xchg
gs
daa
mov
jl
push
fimuls
adcb
loope
pop
call
scas
rorl
shrl
cwtl
mov
leave
loopne
andl
mov
dec
ds
push
test
data16
rclb
mov
test
sbb
xor
fbld
mov
fisttpl
mov
or
bound
add
dec
dec
daa
stc
sub
hlt
sarb
stc
dec
xchg
pop
jmp
push
popf
sti
adcl
adc
mov
or
addl
fidivl
cmc
pop
xor
rcrb
rcl
loop
repz
or
ja
dec
lcall
push
popl
pop
dec
and
inc
mov
imul
cmpsl
sub
ja
or
stos
jae
fisubrs
popa
lahf
pop
mov
insl
xchg
mov
pop
lock
push
xchg
imul
je
rcll
mov
dec
xchg
jp
mov
mov
sub
fcmovbe
mov
bound
fs
and
lock
pop
les
inc
sub
les
dec
stos
outsl
lods
jne
pushf
cmpsb
fmuls
test
pop
mov
mov
jle
and
fisubrs
sbb
dec
dec
adc
jmp
repnz
push
jb
scas
daa
add
xchg
dec
add
in
sbb
dec
add
ds
pop
popw
push
lret
fs
stos
xchg
jo
push
int
loope
xchg
sbb
das
test
cmp
jbe
idivl
arpl
enter
ret
inc
repz
mov
ljmp
out
cmp
adc
pop
pushf
sbb
cmp
mov
and
dec
mov
and
inc
test
fstpl
adc
icebp
mov
xchg
push
in
lock
imul
adc
fadds
push
pop
outsl
mov
fimuls
add
aas
ret
mov
or
inc
aas
int3
mov
fwait
loope
dec
pop
setns
mov
mov
mov
jo
aad
pop
out
pop
inc
loopne
jno
test
sarb
rorl
es
imul
xlat
pop
push
cmp
lock
jecxz
sub
ds
div
inc
dec
pop
outsb
and
insl
jo
push
hlt
stos
inc
lret
sahf
ds
pop
push
add
jne
mov
xchg
adc
mov
jno
mov
pusha
test
lods
sub
push
jbe
jg
mov
fstpl
and
dec
mov
fwait
ret
mov
and
lods
mov
les
bound
inc
sbb
clc
cwtl
cmpsb
and
jno
dec
xchg
aam
aas
push
mov
mov
jle
xchg
fisttpl
dec
icebp
es
add
and
fs
data16
jmp
cmp
mov
ucomiss
mov
dec
jecxz
cmp
test
fisubrs
dec
inc
mov
mov
mov
cmpsw
mov
add
cld
fsubs
fistl
mov
mov
xchg
roll
jle
mov
outsb
or
pop
sahf
push
aas
gs
inc
mov
jns
shrb
mov
mov
aad
aas
mov
and
scas
sub
pop
jo
xor
int3
int3
nop
xlat
lods
jle
mov
mov
cmp
push
sub
into
xchg
cmp
and
mov
inc
push
in
xor
adc
mov
insl
inc
mov
roll
insl
dec
push
dec
sub
mov
jb,pn
rol
insb
mov
dec
pushl
xor
mov
xchg
int3
dec
mov
push
stc
outsl
dec
and
mov
shr
jns
inc
jl
xor
lcall
outsl
cltd
out
ss
xor
or
adc
outsl
dec
es
ds
and
mov
mov
es
ds
mov
in
fisubl
cmpsl
add
shll
inc
cltd
cmp
sarb
std
push
lahf
cltd
in
sbb
xor
dec
ficompl
push
pop
cmpsb
ss
mov
bound
sbb
loop
loop
pop
push
sbb
fidivrl
out
int3
call
adc
imul
or
das
fbstp
into
sarb
repnz
dec
movnti
jmp
and
mov
lcall
sbb
inc
jmp
scas
jns
arpl
mov
mov
arpl
xorb
lcall
mov
out
ror
pop
add
jecxz
sub
loopne
das
cmp
add
imul
add
xor
pop
cld
xchg
lret
mov
ret
das
mov
xchg
sbb
xor
lret
jle
scas
mov
xor
dec
jle
inc
xor
cmp
push
movl
xor
inc
sar
pop
ljmp
xlat
aam
push
xchg
mov
mov
xchg
jns
push
mov
or
mov
shlb
pop
stos
xchg
add
sbb
dec
in
fdivl
cmp
jg
ret
rorb
xor
jns
shll
ljmp
sbb
xor
xchg
pop
int
inc
out
out
int3
lret
test
leave
jne
dec
mov
mov
jno
rorl
xchg
mov
scas
test
out
dec
pop
sub
mov
and
mov
pop
sub
dec
push
movsl
pop
add
mov
jae
jae
inc
icebp
cmp
fsubrl
stc
xchg
cmp
rcl
pop
or
sbb
cmp
sbb
gs
mov
arpl
in
sbb
std
lret
mov
add
pop
sarl
or
sub
and
xlat
mov
mov
lods
mov
cmp
ds
arpl
sbb
das
xor
arpl
movsl
lret
mov
inc
iret
lods
mov
or
lret
stc
dec
test
das
push
out
cmp
pop
in
add
adc
mov
mov
fdivl
ss
jp
enter
adc
sahf
idivb
aas
dec
pop
insb
inc
bound
mov
outsl
rcrb
jl
loope
insb
jns
ret
popa
std
dec
pop
dec
dec
pop
lock
adc
into
lods
jnp
mov
daa
int3
sahf
mov
lods
iret
pop
icebp
push
xchg
xchg
mov
xor
inc
das
scas
stos
nop
cmpb
dec
inc
inc
flds
test
out
push
sub
sub
cs
insl
dec
mov
cmp
inc
pop
lock
pop
bsf
insl
cmpsb
insb
or
inc
inc
pop
lods
mov
add
mov
scas
int
in
add
xor
sub
stc
fstl
rclb
push
xchg
mov
mov
mov
lock
sub
push
and
int3
sar
xchg
ljmp
and
cmp
push
add
inc
lret
jo
fsts
test
lock
enter
add
in
pushf
mov
cmp
push
frstor
std
lret
cs
inc
ret
xchg
out
fcoml
mov
in
mov
fsubr
lock
mov
mov
sbb
inc
insb
xchg
loopne
out
enter
xor
jno
stos
mov
int
cmp
xchg
add
mov
sub
mov
out
or
and
sbb
cs
pop
std
les
and
lret
cmp
jns
jmp
add
cmpsl
int3
mov
movsb
outsl
in
and
mov
fstpl
xorl
lock
add
test
jno
pop
mov
cmp
imul
stos
enter
nop
add
sub
bound
imul
inc
decl
inc
rcl
jge
xchg
push
ret
arpl
out
and
mov
or
xchg
push
jnp
sbb
std
ljmp
imul
xchg
test
pushf
ret
jge
scas
add
lea
sub
je
jg
or
push
and
and
lret
fbstp
iret
data16
xchg
and
adc
das
mov
push
mov
or
jl
call
std
ljmp
push
loop
sub
pop
push
xor
enter
mov
arpl
das
insl
or
sub
add
ret
and
movsb
jp
jl
test
out
or
jnp
or
sbbl
inc
roll
lcall
ja
add
lcall
pop
lods
out
dec
int3
sti
inc
mov
ret
shlb
push
jecxz
das
and
test
mov
fs
std
jmp
dec
cpuid
movsl
inc
lock
cmp
or
or
test
dec
mov
pop
addb
pop
push
repz
lret
sub
in
add
test
cmpsl
jbe
mov
sub
sub
int3
and
dec
sub
mov
int3
pusha
lods
sub
dec
or
int3
mov
push
int
add
popf
dec
add
or
inc
adc
in
or
sub
jns
fwait
into
das
push
scas
push
jmp
arpl
mov
xor
cltd
outsb
push
ret
ds
outsb
xchg
mov
cmp
cs
mov
cmp
iret
cs
out
icebp
cmp
xchg
fldl
sbb
sbb
les
sub
ljmp
int
xchg
mov
jb
out
scas
scas
cld
lret
cmovl
aaa
mov
cmp
lret
lret
pop
mov
ja
js
pop
jns
cld
lret
shl
mov
jnp
mov
adc
mov
dec
inc
jp
cld
les
aaa
add
add
sahf
dec
mov
int3
jno
add
mov
pop
dec
mov
jmp
mov
inc
addr16
fcompl
xor
inc
filds
fcoml
fidivs
pop
xor
cmp
xor
ror
ja
lock
aaa
push
int3
xchg
lret
in
addl
scas
iret
inc
xchg
lret
mov
cmp
icebp
lret
test
stc
mov
xor
leave
ss
mov
clc
jno
inc
ds
jae
ret
fdivs
clc
mov
icebp
out
cmp
test
cmc
mov
add
dec
inc
mov
std
xor
inc
mov
dec
jno
add
or
addr16
jno
test
mov
pusha
cmpsl
inc
dec
add
mov
mov
out
lahf
dec
sbb
dec
sti
xchg
mov
cltd
mov
stos
shlb
cld
cld
lret
loopne
inc
adc
xor
lret
imul
data16
jb
lret
not
jg
mov
xchg
cld
lret
shll
jmp
ret
xchg
out
aam
dec
mov
xchg
cmp
scas
lret
fwait
add
aam
dec
mov
sahf
shl
mov
outsl
or
add
dec
mov
dec
push
pop
out
adc
push
mov
pushf
out
xchg
in
test
xchg
mov
add
out
lea
xorb
jle
inc
inc
mov
xor
jl
movsb
mov
pop
mov
jo
out
cmp
dec
adc
sub
mov
pop
nop
stos
or
das
cmc
fcomip
shll
mov
dec
clc
loope
mov
lds
cmpxchg
add
enter
pop
push
mov
jg
adc
push
decb
jno
ja
gs
add
out
or
jge
sub
xchg
fnstcw
imul
dec
push
jns
ret
pop
leave
scas
cld
ljmp
fldl
mov
jnp
rcrl
lcall
xchg
adc
leave
jp
lret
xor
sub
jo
or
xor
push
int3
dec
jg
cmp
cmpsl
out
int
mov
dec
std
sub
and
mov
data16
sarb
arpl
mov
in
push
xchg
scas
outsb
pop
addr16
jg
out
int3
ficomps
jo
jg
out
sub
mov
and
jno
xchg
mov
lea
mov
jno
movsb
bound
ds
mov
int
lds
or
mov
lahf
sbb
jmp
xchg
cld
add
push
jns
jb
push
cmpb
cmpsb
cmp
or
and
push
ss
jg
dec
mov
lods
jl
mov
fcoms
xor
ss
ljmp
inc
jg
pushf
xchg
inc
rolb
sbb
les
push
dec
lock
fcmove
icebp
popa
repz
sub
lahf
dec
cmp
int
pop
stc
inc
push
pushf
imul
dec
sahf
or
add
aam
cltd
sahf
sti
ljmp
dec
int
mov
dec
outsb
sbb
insl
mov
mov
insl
xchg
and
lret
mov
mov
xor
jge
cmp
adc
jns
les
or
ljmp
or
mov
sub
jl
setnp
add
and
int3
dec
lcall
mov
pop
cmc
lret
imul
xchg
mov
shlb
adc
xorb
push
mov
ja
movsl
inc
inc
adc
push
gs
or
cwtl
push
loop
xor
pop
push
add
sub
test
add
xor
push
cwtl
cmpsl
push
pop
mov
or
inc
push
sti
das
or
repnz
das
push
fs
and
aas
rcrb
in
mov
pop
loopne
dec
dec
mov
js
test
fs
aas
das
or
test
jle
add
sbbb
dec
mov
lea
mov
mov
mov
pop
mov
xchg
addb
push
leave
inc
push
in
movsb
jg
enter
mov
add
in
xchg
dec
mov
js
test
push
dec
mov
jg
xchg
sbb
dec
sub
insb
lock
xor
jmp
iret
push
into
jns
mov
and
mov
jle
push
fsubrl
cwtl
pop
sbb
jns
push
mov
fwait
ja
pusha
dec
mov
lea
bsr
movsb
nop
or
daa
decb
push
ret
cmp
lret
test
cmp
jne
add
and
decb
jp
andl
jge
lahf
in
sbb
jmp
pushf
imulb
outsb
std
pop
xlat
jbe
jae
dec
aam
sub
cmp
ret
xor
push
mov
xchg
xchg
ret
add
xchg
mov
jl
adc
pusha
addr16
inc
outsl
int3
adc
cmc
jg
lods
lods
sbb
push
adc
pop
js
aas
sub
inc
mov
pop
ljmp
mov
mov
push
cli
into
mov
pushf
mov
or
xor
mov
lahf
xor
and
cmp
xchg
pop
jle
inc
ret
sbb
movsl
stos
mov
inc
repz
ffree
pushf
push
das
int
loopne
adc
add
aam
clc
mov
jb
mov
repz
xor
popl
test
pop
icebp
cmp
xor
jo
mov
push
icebp
cmp
jo
test
fdivp
cmp
cmpl
cmp
hlt
movsl
xor
lcall
pop
mov
leave
jp
cmp
cmp
lods
jle
dec
add
lret
jg
cmp
mov
mov
mov
jge
ss
push
sbb
lret
inc
xor
xchg
sub
sbb
orl
loop
ljmp
lock
add
and
push
rorb
std
inc
jne
inc
out
loopne
push
pop
nop
ss
or
or
and
imul
push
test
add
mov
aad
and
imul
aaa
xchg
pop
rclb
adc
mov
mov
imul
lock
xor
mov
aaa
mov
push
add
jb
and
test
negl
and
inc
cltd
lret
sbb
hlt
loopne
mov
push
xorb
or
aas
mov
mov
sub
fisubrl
pop
xchg
or
aas
sbb
jg
and
andl
jge
in
or
iret
imul
push
xorl
dec
cmpsl
imul
enter
xor
mov
sbb
ja
mov
xor
cwtl
pop
jno
mov
pop
jge
orl
hlt
loop
inc
adc
inc
xor
sahf
xor
stos
jns
aad
call
gs
je
ret
aad
shr
xor
mov
rcrb
cld
mov
push
stc
shll
dec
push
sbb
or
fidivs
pop
or
aad
outsb
icebp
xor
test
mov
mulb
pop
xchg
sbb
mov
mov
insl
pushf
popf
outsl
mov
xor
leave
push
idiv
pusha
ds
jge
test
insb
adc
xlat
mov
fs
ljmp
ret
in
cwtl
aas
hlt
adc
adc
call
add
loope
fbld
scas
or
xor
bound
jb
js
mov
lret
or
cmp
dec
jne
lret
jno
gs
xor
xchg
mov
mov
lds
decl
loopne
es
jbe
dec
mov
into
test
orl
orl
add
addl
jb
cmpl
and
inc
dec
movsl
and
out
mov
test
mov
jmp
fwait
shll
sub
sbb
dec
push
movsl
add
mov
imul
push
movsl
push
mov
sahf
test
fwait
movsl
pop
int
sbb
out
js
test
fsubl
sub
leave
mov
mov
out
and
test
bound
stos
out
mov
test
cmpsl
movsl
cmpsl
cmp
test
call
inc
sub
xor
push
sub
xchg
add
and
jg
jmp
icebp
ljmp
popf
shll
lret
out
mov
xor
jge
add
xor
sub
sbb
mov
jle
mov
or
mov
cmp
push
inc
inc
mov
bound
mov
push
adc
dec
cmp
mov
test
rcr
hlt
lret
lods
inc
xchg
addl
lea
out
jne
movsb
je
inc
adc
jecxz
movsl
lods
repnz
in
and
inc
stc
imul
lcall
fistpll
test
rcrl
push
shl
xor
pop
mov
jbe
stos
or
cmp
add
pusha
lcall
cmp
std
add
cltd
dec
scas
das
add
pop
loopne
mov
subb
repz
movsb
int3
push
pop
inc
jle
fs
push
cli
imul
inc
mov
sbbb
inc
out
xor
fs
cmp
mov
push
xor
mov
cmp
call
dec
paddsb
sbb
enter
sbb
fisttps
out
lds
andl
out
add
cmpsb
xchg
frstor
jecxz
out
mov
jbe
mov
xor
ss
pop
movb
jno
ljmp
dec
addb
mov
aaa
cmc
fiadds
addr16
sub
icebp
out
js
movsl
mov
pop
scas
inc
subb
sbb
mov
pop
push
icebp
inc
or
scas
inc
jne
ja
mov
es
or
hlt
mov
lods
jbe
negl
jl
imul
loope
mov
test
push
pop
dec
sbb
popa
nop
cmp
jmp
xor
out
jno
jmp
mov
sahf
jbe
stos
bnd
fs
pop
xor
jns
fstl
xchg
in
mov
inc
outsl
and
mov
jns
dec
bswap
mov
lock
pop
scas
enter
cld
sarb
xlat
jecxz
mov
test
lea
movsl
sti
sahf
or
mov
mov
in
mov
xchg
mov
pop
negl
dec
insb
xchg
mov
push
hlt
push
ret
adc
mov
imul
jmp
mov
fists
pusha
add
push
mov
jg
jb
imul
jns
mov
aaa
stc
ljmp
xlat
mov
loope
inc
and
orl
xchg
lret
push
sti
daa
addb
push
addb
imul
sub
ja
test
mov
cmp
cli
hlt
add
je
cld
and
hlt
push
in
mov
in
fs
js
mov
dec
jg
inc
stos
les
xchg
pop
inc
push
xchg
data16
mov
sbb
out
push
mov
jne
mov
orb
pop
xchg
lods
fsubl
pop
sbbb
add
mov
and
pop
push
out
mov
mov
sub
sub
pop
mov
push
push
mov
jb
or
push
orl
subl
in
lcall
push
xor
mov
mov
lahf
push
je
add
push
mov
cmp
push
push
int3
outsb
and
jb
push
push
jge
sbb
shr
push
mov
pop
mov
jg
std
and
std
pop
pop
imull
push
push
mov
je
cltd
repnz
sbb
idivl
bound
xchg
mov
mov
and
sub
dec
seto
sub
ss
fwait
stc
enter
adc
sub
or
mov
popf
cmpsb
cmpsb
and
out
sbb
xchg
test
sub
add
jle
and
outsb
stc
push
mov
push
pop
cltd
inc
call
test
aaa
lds
mov
xchg
mov
cmp
dec
scas
and
aaa
andl
jg
lock
call
push
dec
mov
sbb
test
xor
icebp
cmp
jb
and
icebp
push
pop
sahf
ret
sahf
nop
das
mov
and
call
data16
pop
lds
stos
sahf
mov
xor
jo
imul
jno
jno
mov
outsb
mov
insb
mov
mov
je
add
scas
mov
lods
xor
add
mov
es
out
sbbb
loopne
mov
inc
pushf
add
mov
jg
lds
setbe
lods
pop
push
sub
jge
int3
in
pop
push
setle
call
sti
add
imul
adc
addr16
fdivs
popa
mov
or
push
lcall
mov
rorb
lret
lds
enter
dec
dec
out
clc
lret
push
test
pop
mov
adc
and
lret
leave
pop
adc
es
lret
test
inc
fnstenv
or
setae
lock
cmp
enter
cmpsb
lock
orb
cmp
and
inc
frstor
jecxz
or
add
in
xchg
push
sbb
out
cmc
int
cmp
pop
imul
das
clc
xchg
dec
sbb
lret
push
fsubrs
cmp
xor
push
outsl
scas
es
jns
xor
hlt
and
lock
imul
jnp
adc
jae
cs
ljmp
inc
call
das
inc
jg
lret
lcall
xchg
int3
cs
ror
dec
imul
inc
inc
dec
lods
das
test
gs
stos
das
lcall
jl
out
scas
lock
int
out
mov
mov
loop
repz
inc
jns
cmpl
jge
ret
lods
dec
cmpsl
sbb
jae
and
cmpsb
add
dec
sbb
and
out
sub
or
jne
movsb
out
jl
test
xchg
cmpsb
dec
or
push
mov
shl
imul
and
out
aas
xor
in
or
adc
pop
mov
inc
and
fs
enter
sub
loopne
and
scas
jb
push
repz
pop
adc
push
pop
fnstsw
dec
scas
dec
ror
push
cmc
cli
mov
mov
dec
jbe
psubb
cmp
lock
cmpsl
ficoml
push
arpl
popf
adc
sbb
jp
aas
aaa
xor
lret
imul
and
in
mov
add
mov
adc
je
jbe
jmp
inc
fwait
dec
sbb
mov
setle
std
dec
adc
iret
cmpl
movsb
mov
and
out
jmp
imul
and
shrl
nop
inc
or
addr16
scas
push
lcall
jmp
jle
jg
fsubrs
icebp
cmp
jae
jb
pop
icebp
cmp
dec
es
fcompl
and
std
iret
xor
push
shlb
test
aas
lret
data16
andb
dec
mov
nop
stos
inc
add
mov
aad
add
dec
mov
stc
rolb
jg
pushf
movb
lret
xchg
jg
inc
lret
cld
jno
addl
mov
push
popf
sbb
popf
sbb
push
test
shll
sub
xchg
cmpsl
das
mov
scas
pop
aam
aaa
add
std
add
pusha
jmp
and
jb
add
call
aaa
jns
insl
jge
jle
iret
add
aaa
cli
dec
mov
add
add
cmp
inc
aaa
popa
in
incb
aaa
xchg
and
mov
add
push
and
jle
mov
pop
in
mov
cltd
xlat
and
pop
nop
xchg
push
test
xchg
clc
int3
loop
jnp
add
fs
push
dec
mov
loop
dec
loope
dec
mov
fldl
popa
pushf
insb
dec
mov
mov
int3
and
xchg
lret
in
loop
sub
cmp
sub
insb
lret
mov
ja
arpl
mov
jmp
push
in
out
fimuls
pop
inc
aam
lods
out
or
adc
movsb
dec
insb
repnz
add
loopne
loop
jae
xchg
mov
rolb
sbb
aaa
ret
dec
xchg
pop
add
sahf
daa
cmp
pop
mov
or
adc
icebp
jo
roll
gs
cld
jo
mov
fidivrs
xchg
pop
mov
sbb
fwait
pop
mov
ficoms
sbb
fs
jp
shll
cmp
cmp
dec
sub
stos
mov
add
in
aas
jp
adc
jl
push
test
inc
lcall
inc
sbb
add
mov
outsb
into
and
or
nop
mov
scas
pop
mov
pop
xchg
movsl
jns
fcomps
call
mov
jns
fdivrs
sahf
fwait
xor
pop
xchg
xor
push
in
mov
mov
out
pusha
int3
imul
enter
dec
lods
test
inc
pop
test
jbe
mov
sbb
add
jmp
pop
pop
xlat
out
sbb
sbb
xchg
pop
sub
pop
sub
sti
mov
push
push
negb
bound
mov
lock
enter
add
mov
insb
or
dec
shl
pop
mov
fcmove
ret
mov
xor
sub
mov
mov
pop
or
aas
enter
sarl
fdivs
cltd
adc
sbb
xchg
testb
jb
xchg
mov
xchg
or
push
ja
js
or
pop
sarl
add
mov
int3
cmp
lods
lds
add
pop
mov
imul
ss
and
leave
aam
jl
lock
cld
pop
dec
jle
hlt
sbb
mov
inc
xor
pushf
cltd
lcall
pop
dec
lahf
lahf
mov
and
jmp
or
dec
jns
xchg
jecxz
pop
pop
mov
cmp
lret
test
inc
xchg
loop
cld
push
popf
pop
add
adc
stos
mov
aaa
loope
dec
mov
stos
icebp
imul
imull
sub
and
add
out
mov
cld
lods
lock
imul
sbb
mov
orl
cwtl
mov
dec
pop
getsec
xchg
and
xchg
stos
mov
rcll
insb
test
push
adcb
fistpl
sbb
cmp
inc
mov
add
das
cmpsb
leave
xchg
mov
mov
shr
inc
ud0
adc
ss
pop
or
mov
test
in
push
mov
cmp
inc
add
inc
outsl
out
jbe
ja
mov
jl
test
out
dec
pop
out
loope
std
pop
enter
movsb
mov
lret
xlat
popf
arpl
lret
xorl
das
or
out
cmc
out
jb
je
add
dec
das
cli
cld
pop
das
into
add
das
jp
jmp
pusha
adc
movsb
jns
enter
imul
and
out
lock
cmp
rorb
ds
test
mov
cmp
jb
add
jo
jl
push
scas
jae
movsl
popw
cli
xorl
out
push
inc
fld
jg
and
shrb
push
inc
in
fmuls
add
inc
fists
mov
sbb
mov
xor
in
ret
lock
in
xchg
dec
test
jbe
jmp
mov
out
cwtl
imulb
jge
pusha
imul
xchg
fs
inc
jg
mov
jle
add
jl
ja
shll
lret
arpl
mov
fs
xchg
out
inc
push
addr16
pop
ljmp
push
out
test
imul
add
iret
adc
mov
and
cmp
add
pop
sti
cwtl
inc
cmp
push
bound
add
jmp
sahf
lds
jnp
js
jecxz
cmp
and
xor
lret
sub
mov
int
sahf
inc
sub
arpl
add
notl
inc
nop
push
cs
jno,pt
and
mov
push
fstps
mov
xor
ljmp
push
and
mov
or
setne
aam
push
or
mov
jl
inc
scas
xor
pop
test
xlat
pop
xchg
mov
std
push
jle
test
movsl
push
mov
stc
xchg
stos
shl
lret
jmp
cmp
mov
in
scas
pop
xchg
test
dec
out
add
movsb
and
mov
std
ss
cmp
loop
out
movsl
data16
sub
cli
aam
and
or
add
and
or
cmp
and
push
addr16
rcll
sub
jle
xor
popa
xchg
mov
mov
push
int3
push
xchg
cld
mov
notb
test
mov
fwait
xchg
stos
popf
inc
mov
pop
repz
dec
and
les
lret
mov
pop
inc
pop
repz
inc
scas
mov
jae
xchg
sbb
push
add
das
fsubl
not
add
jns
leave
inc
and
popf
sahf
lock
cmp
in
pop
cltd
subl
ljmp
ljmp
das
xchg
mov
sbb
ds
jge
arpl
dec
add
test
mov
jecxz
out
pop
adc
mov
test
ds
ret
test
neg
xor
cmpsb
add
roll
mov
add
adc
push
imul
mov
lock
jbe
inc
stos
es
xchg
insl
add
outsl
lods
dec
or
ret
lods
mov
movsl
cmp
shrl
jg
fistpl
mov
inc
mov
xchg
shr
sar
xchg
cltd
mov
hlt
xlat
xor
lcall
cmp
stos
aas
push
pop
sbb
std
shlb
js
mov
jne
jb
pushf
push
mov
imul
push
ja
xchg
stc
mov
iret
insl
loopne
mov
cmp
jge
jns
dec
icebp
cmp
test
in
fidivrl
shlb
icebp
cmp
mov
lods
fnstcw
dec
int
icebp
and
pusha
sub
ja
int3
pushf
adc
cmp
xchg
std
clc
pop
add
das
inc
sti
xchg
rclb
add
lds
into
cltd
xchg
push
inc
setle
lock
test
testl
into
int3
int3
push
jnp
jmp
lods
mov
mov
xlat
rcll
cmp
addr16
cli
or
inc
mov
pop
shll
iret
jns
leave
enter
ljmp
test
add
les
lcall
add
out
lock
jle
and
add
mov
jle
pop
nop
outsl
inc
cmp
aam
or
repz
das
pop
cmp
decl
jle
js
out
pop
cmp
dec
pop
mov
mov
scas
push
cmp
mov
addr16
outsb
adc
mov
push
loopne
inc
aam
inc
out
sub
stos
adc
je
xlat
pop
push
mov
sahf
mov
cmp
sub
lret
in
lcall
sub
lcall
lret
int3
out
dec
inc
mov
or
test
movsl
mov
pop
or
movsl
insb
jno
jmp
andl
mov
cld
das
jbe
add
lahf
shlb
ljmp
data16
or
int3
jno
aad
or
std
jg
in
add
das
and
mov
push
jb
mov
pshufw
ss
leave
adc
pop
jbe
test
hlt
in
sbb
cmp
loopne
xchg
ss
jno
cmc
mov
xchg
les
cmp
sbb
fwait
adc
add
jne
add
loopne
imul
pop
push
push
xchg
push
cmp
push
jp
cmpsl
aam
inc
mov
in
movsl
add
in
adc
inc
mov
and
jne
out
mov
add
and
mov
pop
hlt
in
movb
xchg
aam
shrb
fs
movsb
popa
dec
mov
xlat
out
and
lret
jns
lret
stc
cmc
ljmp
pop
and
imul
mov
add
dec
or
jecxz
fwait
inc
mov
cmp
pop
jp
inc
mov
add
add
adc
adc
ss
xchg
xchg
ss
sub
mov
mov
push
mov
cltd
push
stos
inc
dec
div
jmp
or
dec
lods
icebp
inc
add
cwtl
adc
mov
hlt
roll
and
fsubp
mov
lret
aad
and
lret
sbb
lcall
pop
mov
int
int3
sbb
dec
fldenv
fcomps
in
pusha
bound
push
lods
mov
or
jge
pop
pop
in
gs
mov
int3
or
xlat
mov
xchg
shlb
fnstsw
inc
out
xchg
mov
jnp
leave
fnstenv
xchg
mov
in
hlt
dec
lret
icebp
and
es
mov
lods
and
in
lea
cmpl
loopne
das
mov
add
mov
in
mov
dec
daa
imul
push
out
lock
push
xchg
push
je
cmp
int3
adc
xchg
je
cmp
xor
fmul
aam
imul
mov
cwtl
add
int3
xchg
and
sub
or
mov
hlt
or
add
das
gs
shlb
push
jns
lret
pop
cmc
call
add
stos
inc
xchg
mov
sub
test
ror
mov
inc
out
cmp
test
ds
add
inc
sub
push
adc
fs
push
leave
lods
mov
imul
add
jo
inc
sbb
jg
hlt
cmpb
out
mov
sub
outsb
cmpsb
notb
jle
push
shll
cmp
sahf
add
push
mulb
sbb
jle
fidivl
mov
cmp
adc
mov
stc
and
adc
add
das
stc
adc
pop
filds
sti
bound
inc
packuswb
xchg
lock
adc
xchg
test
into
mov
add
call
dec
cmp
jns
std
add
inc
dec
fstpl
js
int
cmp
mov
cli
js
ret
and
cmp
adc
mov
popf
in
sarb
seto
test
cmp
push
in
xchg
adc
out
jno
icebp
inc
les
lcall
sub
mov
mov
sub
push
and
pushf
pop
int
jno
into
add
das
sub
call
ret
pop
int
cmp
cli
mov
setg
sbb
stc
cmp
pop
mov
filds
sarb
test
pop
mov
xchg
xor
jnp
js
mov
pop
mov
sub
mov
into
js
mov
lahf
mov
jge
mov
insl
sarb
push
in
inc
aas
and
sub
and
cli
sahf
dec
cmc
ljmp
and
add
jns
add
shlb
push
out
popf
test
and
out
xor
or
sahf
dec
out
imul
test
pop
mov
jmp
test
imul
jg
adc
and
mov
scas
cs
call
cmp
movl
push
std
fdivs
mov
push
sbb
jge
jns
sbb
pop
mov
xchg
cmp
sub
sbbl
dec
jge
mov
jmp
ret
ret
inc
scas
cmp
and
jle
cmp
arpl
cmp
sub
ret
cmpsl
imul
pushf
mov
inc
in
push
mov
adc
lcall
or
mov
cs
mov
std
mov
push
jecxz
outsl
es
ffreep
lock
jecxz
enter
cmpsl
rorl
sbb
push
test
test
subb
out
sbb
test
lds
ljmp
jnp
push
inc
mov
add
movsl
fmuls
bsr
ss
xchg
dec
mov
mov
cmp
push
sbb
inc
pop
adc
mov
negb
xor
sbb
jp
jg
mov
jp
jae
pop
sub
pop
xchg
jle
mov
add
fidivs
jg
pop
fstpl
shl
ss
jne
enter
push
mov
test
fisubs
cmp
ja
mov
ja
aam
arpl
jae
inc
cmp
les
fcomps
mov
pmuludq
xchg
aam
xor
aaa
dec
hlt
lret
dec
aas
dec
xchg
mov
xor
fmuls
mov
cmp
loope
lcall
mov
out
cmpsb
int3
lret
shlb
gs
jne
daa
mov
add
sub
and
or
mov
stos
and
movb
cmp
and
daa
sarb
jmp
bts
cmpb
test
in
dec
mov
popa
xlat
fmul
hlt
lret
cmp
xchg
mov
jns
mov
sub
inc
hlt
lret
fimull
xor
push
adc
cmc
mov
rcl
andb
mov
jmp
addr16
adc
sbb
xchg
divb
add
or
addr16
and
cli
cmp
xchg
or
jg
and
xchg
sti
dec
jl
inc
stos
std
push
or
push
push
cmp
jecxz
xchg
sti
das
lcall
test
jmp
xchg
mov
fcomps
lahf
cmpsl
xchg
mov
mov
out
inc
scas
mov
inc
push
in
lcall
out
int3
add
jnp
test
and
ret
aad
sbb
in
ds
aaa
and
test
push
gs
xchg
data16
pop
xchg
add
inc
lret
push
aam
popl
test
inc
aad
dec
loope
add
inc
shlb
bound
in
fiaddl
xor
repnz
je
xchg
sbb
inc
fdivl
in
jge
add
pop
das
and
xor
add
pop
test
cmp
sahf
dec
mov
mov
cmp
sahf
ljmp
ret
jno
cltd
stos
loop
xor
jg
std
cmp
sahf
push
in
mov
mov
dec
lock
addr16
cld
pop
xor
inc
icebp
cmp
jg
loopne
xor
ja
add
push
in
adc
sbb
int3
cmpsl
pop
xchg
cmp
mov
add
addr16
xchg
sbb
stc
bound
in
push
inc
push
push
mov
inc
inc
sbb
inc
add
stos
mov
xchg
int
das
ljmp
mov
fwait
in
pop
int3
lcall
repnz
xchg
repz
mov
push
adc
les
mov
push
mov
rorb
jo
mov
mov
xchg
repnz
sub
lret
iret
arpl
mov
out
inc
out
test
inc
lods
adc
cmp
mov
adc
mov
lods
adc
add
out
pop
mov
repz
add
pushf
jns
test
icebp
data16
add
repnz
mov
cmp
dec
dec
add
mov
cmp
xlat
repnz
int
mov
mov
mov
test
cmc
or
xor
imul
daa
or
mov
cmp
jle
jmp
cmovp
bound
cmp
mov
push
arpl
inc
outsb
cld
loop
pop
jae
pop
or
push
data16
xor
cmpsb
stos
pop
into
or
cmp
lea
add
lret
sbb
mov
scas
insl
dec
mov
sub
cmp
pop
outsl
mov
in
xchg
call
pop
lret
sub
pushf
pop
xchg
bound
gs
fiadds
lahf
push
bound
sahf
inc
pop
jmp
shrl
cmpsb
fdivrl
decl
jno
leave
sub
xor
int3
stos
ret
test
sub
xchg
lahf
add
push
sub
and
ss
pop
icebp
sbb
mov
aas
mov
movsl
sbb
sahf
lock
mov
ret
adc
repz
cmp
push
sbb
inc
mov
jbe
cmpl
in
imul
and
into
popf
or
out
xchg
lcall
cltd
outsl
add
push
ds
int
jle
cmpb
cmp
repnz
cmp
mov
dec
jno
ds
push
das
jg
push
icebp
jns
jl
xchg
inc
mov
int3
jg
sahf
stos
add
test
stos
mov
and
mov
inc
mov
and
repz
fldcw
or
mov
aad
pop
xchg
lret
mov
xlat
ret
xchg
in
repz
mov
lcall
in
loope
or
pushl
rolb
fisubrl
lock
aam
push
or
adc
cmc
enter
mov
pop
cmp
cmp
sub
int3
std
jae
in
insl
sub
jmp
int3
iret
or
lods
sub
fdivs
int3
adc
mov
jge
bound
hlt
lcall
mov
insl
pop
dec
fcoms
mov
int
sbb
cld
in
sub
xchg
sti
and
inc
jne
out
push
mov
out
rcll
cmp
loopne
adc
pushf
sbb
lret
cmp
lea
jo
mov
insl
hlt
jecxz
lcall
push
out
pop
int3
add
movsb
push
inc
sbb
dec
mov
mov
mov
mov
insl
xor
pusha
nop
scas
sbb
xchg
repz
mov
lds
enter
xor
dec
inc
pop
and
mov
lods
adc
push
fs
call
lods
jae
rcll
dec
cli
test
stos
scas
cmp
adc
loopne,pn
and
push
arpl
push
insl
sub
dec
nop
test
popf
in
mov
int3
ret
inc
mov
sbb
cld
sahf
inc
mov
dec
add
push
pop
inc
mov
neg
test
sbb
xchg
negb
push
enter
lea
fildll
insl
mov
movl
cmp
ret
lcall
push
mov
pop
data16
enter
and
xchg
test
movsl
out
enter
xor
inc
or
pop
cmp
rolb
out
and
mov
mov
jge
fsubrs
lods
sub
int3
jns
fucompp
sub
cmpsl
les
ss
xchg
add
jg
dec
mov
cmp
int
pop
icebp
es
inc
ljmp
addr16
and
jle
sub
in
inc
daa
jb
stos
push
in
out
and
aas
cmp
daa
inc
pop
pop
lods
in
testb
ror
xor
add
ljmp
shl
add
jne
sahf
call
mov
adc
out
sti
int3
mov
cmp
shlb
fwait
push
jg
cs
imul
push
pop
mov
in
or
test
dec
inc
mov
or
sub
jp
mov
rorl
push
push
shlb
repnz
in
mov
add
repnz
push
test
inc
mov
push
jnp
cmpsb
repnz
test
rolb
gs
sbb
pop
sub
mov
push
jbe
inc
mov
push
imul
xchg
add
in
jno,pn
mov
mov
add
fstpl
xor
mov
bound
ror
mov
popa
dec
fmull
sub
or
inc
test
dec
scas
xor
xor
jle
fcompl
in
cmp
sub
add
icebp
mov
xchg
loop
stos
je,pn
add
arpl
xlat
cmp
add
dec
aas
pop
pop
dec
jg
adc
push
jns
push
dec
jg
jns
hlt
mov
bound
cmp
xchg
xlat
mov
jo
je
dec
cs
call
cmp
shll
mov
dec
mov
or
lret
sub
lds
lret
fstps
adc
enter
xor
mov
xlat
les
movsl
test
jne
lret
cld
cmc
jg
ljmp
lahf
inc
xchg
or
push
repnz
loop
lock
add
jnp
test
mov
lods
cmp
mov
mov
cwtl
inc
or
pop
xchg
pop
test
dec
add
or
jg
lods
add
clc
in
sub
pop
int3
mov
loope
sub
jg
imul
push
adcl
cmp
mov
xor
mov
pop
jae
inc
pextrw
xorb
enter
adc
test
mov
pop
popf
icebp
add
or
push
add
push
movsl
inc
and
sbb
adc
push
xchg
les
pop
adc
adc
cmp
jns
fst
mov
cmp
cltd
sar
mov
fistl
clc
fpatan
adc
mov
outsb
jmp
or
jae
sbb
inc
push
cli
mov
popf
outsb
je
fincstp
stos
jecxz
insb
mov
in
pop
mov
repnz
movsl
mov
lock
jecxz
stc
xor
test
cmpsl
mov
mov
add
repnz
inc
mov
jecxz
scas
add
lods
mov
movsl
inc
mov
push
jmp
mov
out
nop
sbb
je
outsb
add
pop
cli
das
add
cmpsb
sbb
arpl
les
mov
aad
test
aaa
into
jb
addr16
bnd
call
add
inc
mov
shrb
add
push
ljmp
jecxz
cmp
mov
dec
inc
pop
inc
mov
jbe
dec
add
mov
sbb
roll
lock
enter
sub
test
xchg
cmpsb
xchg
cmp
mov
loop
out
outsl
jbe
inc
xchg
dec
sbb
pop
lahf
xchg
cld
ficoml
pop
aam
jbe
insb
mov
out
xchg
lods
imul
mov
cmp
leave
or
xchg
cmp
cmp
jl
xchg
jns
mov
inc
jbe
popf
out
outsl
inc
jb
xchg
jo
cli
mov
or
scas
mov
ret
jle
mov
ds
adc
repz
add
int3
int
cwtl
sbb
pusha
dec
mov
inc
lods
or
orl
jg
shlb
mov
imul
pop
cld
les
mov
pop
ret
cmp
push
adc
mov
mov
pop
jp
rolb
push
xor
mov
dec
dec
outsb
int3
fistps
pusha
or
and
pusha
or
dec
mov
and
sbb
sbb
pusha
or
lcall
dec
xchg
lret
jge
mov
shrb
or
xchg
call
icebp
ljmp
dec
xor
rorb
test
xchg
cmp
jnp
add
pop
lds
sub
jg
mov
adc
pop
mov
icebp
fimuls
lret
adc
repnz
mov
rorl
and
and
jp
mov
setbe
cmpsb
mov
xlat
test
test
stos
cmpsb
push
pop
sub
sbb
adc
mov
lcall
mov
xchg
cld
test
add
mov
imul
adc
inc
mov
cmp
pop
es
out
push
adc
cld
pop
mov
out
inc
scas
bound
test
scas
xor
lds
cmp
push
rolb
cmp
nop
fucom
mov
add
push
test
cmp
test
test
add
mov
lret
pop
loop
mov
jmp
jge
lcall
pminub
in
int3
sahf
sub
lret
push
cld
ss
dec
dec
pop
xor
loopne
xchg
sub
xchg
xchg
xchg
push
sbb
add
push
mov
dec
cmp
push
pop
mov
lret
xchg
xchg
mov
ds
fs
aad
outsb
outsl
fbstp
aam
push
adc
lcall
into
enter
loop
push
lock
rorl
pop
sbb
xchg
cmp
add
jne
adc
inc
arpl
pushf
sbb
std
lcall
sbb
mov
xchg
cmpsb
punpckhwd
xchg
sub
and
pop
adc
hlt
cli
mov
or
xor
aas
cmp
mov
sbb
sarl
test
push
and
out
pop
int3
pcmpgtw
or
push
mov
or
in
inc
jl
pusha
or
loope
nop
and
cltd
cmpsl
in
pop
inc
lock
mov
xchg
or
out
cmp
enter
iret
or
xlat
iret
cmpsb
add
ret
pop
ss
adc
and
mov
outsl
lds
add
push
jns
cmp
mov
call
xor
sbb
movsb
or
adc
xor
xor
jbe
insl
sbb
test
cmp
rep
adc
or
outsb
jnp
mov
xchg
add
aas
jge
pop
int
mov
iret
loope
in
pusha
shll
jbe
sbb
cld
xchg
jge
mov
pop
pop
fildl
sbb
stos
pop
lret
roll
outsl
pop
pop
inc
out
loope
fsubrp
in
mov
arpl
adc
sub
jno
push
add
shll
repz
push
add
jns
lcall
lock
fildll
cmpsb
inc
cmp
sub
imul
xlat
mov
cltd
enter
filds
in
lock
cs
add
mov
lret
test
cmp
mov
test
jp
sbb
xchg
daa
test
mov
mov
and
lods
rcrl
outsb
add
adcl
lahf
rclb
or
loope
jae
call
lock
push
inc
sub
lret
test
sub
push
push
or
lods
rcrl
push
sbb
mov
test
add
lahf
push
mov
or
add
sbb
cmpsb
test
inc
enter
pusha
xchg
jle
dec
test
inc
scas
jp
jne
mov
mov
jp
out
lds
aaa
and
xchg
stos
xlat
rcrb
mov
rcrl
mov
imul
repnz
sbb
push
cmp
pop
jp
mov
mov
push
das
dec
icebp
and
fisubrl
jecxz
xchg
or
jle
mov
cwtl
mov
arpl
arpl
ljmp
arpl
fistps
sahf
lahf
test
test
cmp
and
pop
sarb
and
sti
repz
cltd
add
inc
ret
das
imul
imul
pusha
sbb
xchg
dec
cmp
inc
mov
repnz
sub
push
mov
test
push
test
mov
out
fsubr
mov
scas
nop
fwait
xlat
cld
cmp
roll
sub
push
out
cmpsl
loope
sti
repnz
fs
jo
cli
sarb
popf
add
lock
rolb
faddl
push
dec
dec
lock
or
das
jns
fildll
int3
jmp
mov
jbe
icebp
inc
mov
add
add
inc
jno
pop
cmpsl
scas
push
out
lret
inc
ljmp
xchg
jge
loop
dec
mov
jbe
popa
outsl
xchg
jge
mulb
cmp
add
scas
mov
xor
into
mov
jnp
mov
shlb
mov
sarb
dec
outsb
insb
in
in
pop
mov
lock
dec
or
xor
jno
push
push
test
imul
add
addb
add
adc
stc
sti
fs
xor
scas
jge
mov
ja
xchg
mov
and
cs
ja
lods
inc
dec
jg
xchg
movsl
push
cmp
lcall
shrl
xchg
iret
jge
pop
push
xor
and
or
mov
lcall
fsubs
out
out
movsl
insb
rorl
push
add
popa
dec
divb
mov
pop
out
stc
ror
pop
fsts
mov
sbb
jle
lcall
lock
loop
pop
out
sarl
ret
mov
lods
mov
mov
xchg
push
int
fcomi
mov
lcall
dec
inc
out
sahf
push
adc
sti
stc
ret
cld
add
pop
in
sbb
imul
push
mov
popf
pop
iret
in
inc
loopne
mov
cmp
cmpsl
shlb
ret
or
inc
push
pop
sti
and
jno
imul
icebp
mov
xchg
sbb
ss
lock
jl
sbb
lret
mov
xchg
cmp
jo
aad
pop
out
fcmovnb
jge
cld
mov
jae
icebp
mov
inc
test
outsl
fdivp
ss
mov
out
je
add
mov
lret
test
xchg
push
mov
or
jle
xchg
repz
rcrb
xor
mov
scas
rolb
xchg
xor
clc
mov
add
aas
into
sti
adcl
add
mov
shlb
gs
push
ljmp
por
dec
mov
fwait
sub
orl
and
jno
addb
lret
aam
fiadds
je
in
sbb
lret
sbb
outsb
xchg
push
bswap
test
xchg
jecxz
push
enter
fwait
rcrb
mov
pop
adc
inc
cmp
ljmp
and
add
jmp
sti
addl
mov
jle
sbb
mov
push
sbb
lods
mov
xchg
sbb
or
dec
jne
push
insl
sbb
out
in
mov
cld
dec
add
mov
js
jbe
cmc
call
incl
fcmovnb
shlb
fwait
shlb
mov
sti
adc
or
vmptrst
popl
rorl
dec
sbb
add
dec
ror
nop
out
sbb
je
xchg
addl
outsb
xchg
and
fwait
push
test
lret
jns
inc
je
imul
test
pop
push
out
sub
cmp
push
add
testb
imul
cs
stos
push
mov
or
add
int
add
lcall
sbb
pop
add
cmp
mov
push
sbbb
and
test
aad
fistpll
and
xchg
ret
movl
jns
and
inc
movl
push
xlat
ja
lock
into
lds
pop
out
or
xchg
push
out
fiaddl
sti
xchg
cmp
das
jp
jns
and
push
or
mov
xchg
pop
lret
xchg
mov
loope
push
mov
push
xchg
mul
mov
xchg
jbe
add
movsl
addr16
sbbb
dec
adc
dec
inc
cmp
mov
out
and
jge
cli
cmc
jns
popa
popf
or
xchg
mov
aam
test
mov
loop
lret
test
sbb
inc
icebp
cmp
pop
jns
into
test
pushf
xchg
cmp
cld
fcomps
mov
lahf
leave
jbe
pop
xchg
inc
addr16
cmp
into
push
int3
mov
sahf
or
dec
aam
inc
mov
cli
sbb
outsb
in
inc
mov
push
sub
xchg
inc
push
insl
mov
test
jns
xor
in
cli
lock
push
mov
fdivrs
jmp
out
insb
mov
pop
sti
out
mov
jg
and
sbb
and
jg
lods
popl
jnp
mov
loop
and
fidivrs
adc
sub
push
movsb
dec
mov
add
xor
inc
ret
mov
lock
dec
enter
cltd
or
cmp
cmpsl
subb
int3
cmp
jp
mov
iret
and
sbb
dec
imul
add
stc
jns
and
enter
sahf
out
jns
and
add
jl
imulb
push
stc
push
xchg
or
aaa
add
sahf
jmp
sahf
jno
add
adcl
imull
jecxz
xor
ficoms
sbbb
cmc
xor
div
cmp
insl
ss
shl
icebp
cmp
js
ja
stos
mov
and
cmp
test
ljmp
mov
jecxz
mov
mov
pop
cmp
push
sti
imull
jns
cmp
popa
clc
mov
pop
lahf
sahf
and
sbbl
jge
ret
shlb
ret
test
sahf
mov
xchg
pop
cmpsl
imul
test
imul
push
nop
mov
sub
das
cltd
and
sbb
in
push
xor
pushw
ljmp
mov
push
adc
shlb
call
add
inc
aad
inc
xor
sub
sbb
xor
xchg
cld
jns
flds
mov
inc
and
nop
jne
lret
in
and
push
imul
cmp
sar
add
xchg
xor
push
addb
push
sbb
mov
mov
sub
cmpl
push
mov
mulb
jb
dec
inc
popl
pop
mov
lock
loope
enter
mov
mov
sbb
xor
pop
dec
in
and
push
ret
loope
outsb
lods
inc
jle
mov
movsb
inc
and
add
mov
sbb
ss
movb
andb
sbb
shll
test
mov
notb
enter
les
pop
sti
xor
filds
add
adc
stos
mov
xor
jl
push
xor
sti
je
jg
insl
mov
cmp
pusha
sti
paddw
inc
mov
aad
shrl
dec
hlt
push
ljmp
iret
xchg
add
jmp
xor
mov
out
addr16
test
shl
add
lcall
and
xlat
jmp
mov
movsl
sarl
push
gs
mov
sbb
out
pop
mov
js
stc
dec
xchg
popl
pop
icebp
add
add
shll
arpl
ja
lcall
and
lcall
dec
mov
cmc
pop
arpl
lcall
inc
pushf
arpl
inc
pop
lcall
pop
out
addl
fdivr
sbb
loope
ljmp
jo
adc
mov
cmpl
fdivrl
scas
mov
and
cmp
xor
dec
ja
fdivrp
cmp
add
rorl
nop
pop
ret
sti
std
outsb
jg
inc
lds
ja
jle
lcall
sub
imul
cmp
imul
sbb
inc
jns
xor
je
fstl
add
sub
jge
and
pop
jp
xchg
lahf
push
jbe
loopne
cmp
sbb
mov
mov
into
bound
adc
jmp
daa
and
cltd
cli
sub
jo
and
into
and
or
xchg
mov
and
repnz
lahf
or
mov
and
push
xor
lahf
or
mov
inc
imul
sbb
insl
dec
sbb
lret
mov
in
sbb
xchg
dec
xor
inc
jno
xchg
int3
inc
push
pop
mov
dec
jge
int3
test
jae
mov
test
les
clc
pop
mov
push
int3
add
enter
loopne
mov
xchg
fidivs
inc
or
ret
xchg
push
shlb
lds
cld
ljmp
in
xchg
cltd
test
daa
inc
adc
pop
mov
fistl
xchg
add
inc
mov
xchg
mov
push
stc
out
je
cltd
ljmp
es
rcl
insl
pushf
or
das
push
roll
aam
mov
fwait
adc
cli
xchg
pop
cmp
push
fdivrl
lds
sub
test
or
xchg
cld
cltd
push
repnz
repz
stos
jecxz
sbb
pushf
dec
pop
sbb
mov
jg
inc
and
fists
mov
es
mov
mov
paddusw
dec
sbb
mov
mov
les
mov
cld
add
or
mov
jbe
imul
xor
in
mov
xchg
rolb
push
fimull
ljmp
or
mov
hlt
and
dec
lds
jns
and
sahf
mov
fs
and
xchg
mov
xor
icebp
and
sbb
pop
out
mov
push
jne
and
sbbl
outsl
mov
pop
mov
adc
add
xchg
inc
and
add
push
push
pop
adc
test
sbb
mov
jle
sub
rcl
xchg
mov
jge
mov
lret
mov
js
dec
outsl
test
lock
jle
xchg
test
dec
pop
lcall
dec
mov
adc
xor
cld
mov
push
mov
or
lret
movb
xlat
ja
andb
in
shrb
cmp
sub
lock
ljmp
fwait
adc
pushf
dec
inc
xchg
inc
mov
shlb
loop
outsb
sbb
inc
lds
mov
xor
jns
and
jae
lds
jns
and
jne
fcomps
cmp
adc
int
add
jecxz
push
xchg
mov
pushf
adc
jp
jp
imul
xchg
mov
adcb
inc
xchg
iret
lds
mov
sbb
jno
orb
jmp
in
lcall
sbb
in
dec
mov
pop
mov
movsl
lcall
cwtl
sub
fs
lods
pminub
leave
jns
pop
divl
xor
stc
cmpl
sub
shrb
jl
mov
push
cmc
xchg
movsb
inc
xchg
inc
xor
lock
fcmove
scas
pop
fisttpl
push
dec
lcall
xchg
int3
adc
jno
int3
iret
gs
adcl
punpckhbw
sub
xor
and
popf
pop
icebp
push
inc
sbb
pop
pop
adc
das
push
addl
jns
xor
cmp
lea
adc
xchg
cmp
rolb
xor
and
hlt
jnp
rcll
imul
mov
xor
cmpsl
sbb
jo
or
call
adc
scas
sbb
lds
add
or
xchg
mov
jmp
jnp
fistps
pop
or
or
int3
xchg
push
scas
cwtl
mov
pusha
in
jne
std
mov
xor
movsb
and
cltd
push
aaa
clc
mov
xor
int3
or
push
roll
adc
stc
xorl
mov
stos
mov
cmp
jmp
inc
std
out
lds
lock
sub
clc
les
sub
sarl
and
popf
or
sub
int
loopne
or
ljmp
xor
xchg
popa
lds
fwait
in
xchg
mov
mov
push
push
rol
lea
pop
add
mov
popf
shll
dec
push
mov
lock
xor
sub
loop
clc
popf
inc
insl
jg
data16
add
sarl
and
push
les
sahf
xchg
scas
dec
jns
and
out
out
lock
aaa
jns
and
mov
push
or
and
aam
mov
lock
push
enter
or
enter
pop
movsl
repz
mov
xchg
outsb
loopne
mov
int3
mov
jbe
sbb
lods
mov
push
xor
mov
scas
lock
insl
push
repz
popa
clc
inc
out
out
test
test
mov
add
leave
pop
add
sub
inc
dec
mov
je
mov
pop
push
and
loopne
insl
xchg
xchg
test
fistl
out
jb
and
inc
jmp
lcall
push
or
call
xor
test
jo
jmp
inc
bound
jns
xor
xchg
cltd
fdivp
ss
sbb
repz
push
popa
and
mov
xor
stc
vpmacsdd
pop
pop
sbb
and
das
dec
test
inc
xchg
or
popa
imul
leave
xchg
pop
movsb
imul
xchg
and
outsl
xchg
or
icebp
cmp
add
mov
leave
jg
orl
shll
mov
add
leave
lret
movsl
push
cmc
ja
rolb
cmpsl
xchg
lea
fwait
hlt
mov
pop
ja
push
lods
sbb
jle
imul
adc
aad
lret
sub
sti
data16
or
stc
pop
in
jne
inc
mov
inc
stc
xor
dec
lock
stc
adc
cmp
jns
pop
xor
jo
mov
lock
lock
mov
jbe
test
jns
push
mov
dec
into
mov
or
jl
cmp
xchg
les
pop
or
or
xchg
jecxz
push
pop
mov
loope
sub
inc
es
jns
mov
sub
or
lock
fcmove
stc
push
xchg
ret
dec
call
push
inc
and
jno
sti
add
xor
add
mov
pop
add
xchg
adc
push
adc
or
cld
or
xchg
cmpsb
jge
mov
mov
imul
dec
jb
pop
xchg
mov
das
mov
xchg
stos
dec
inc
imul
subl
das
mov
in
lea
push
rolb
jge
jne
insb
je
enter
mov
pop
imul
out
jle
mov
pop
ret
mov
jle
sub
mov
dec
xchg
mov
in
es
and
xchg
mov
clc
orl
lock
mov
adc
jnp
or
jmp
ja
addb
out
lret
xor
out
ja
xor
jecxz
cvtpi2ps
popa
int3
lock
in
sbb
mov
insb
adc
mov
mov
cs
cmp
and
jb
dec
sahf
icebp
add
pop
mov
jnp
jns
and
in
inc
enter
sbb
mov
ret
mov
sbb
mov
lock
pop
enter
int
mov
push
mov
pop
ss
push
push
sub
out
xchg
outsb
dec
xor
imul
nop
push
xchg
mov
in
test
push
push
arpl
cmp
mov
inc
adc
sub
push
xchg
mov
fs
test
lock
push
mov
dec
cmpsl
stos
out
popf
xchg
test
in
mov
out
mov
push
ljmp
scas
imul
and
out
rcll
add
sbb
or
gs
outsb
mov
ds
mov
jae
popa
sub
mov
mov
lock
mov
sub
ret
lcall
mov
mov
jp
sub
ljmp
mov
in
jbe
popa
push
ret
sub
adc
rorl
fcmovnbe
dec
jnp
test
xchg
sbb
lock
enter
sbb
mov
fs
in
cmp
dec
mov
mov
in
push
mov
icebp
imul
mov
fdivs
push
sahf
push
lret
movsb
xor
adcl
outsb
test
loop
mov
out
jg
test
pop
push
in
jg
adc
int3
mov
pop
add
iret
incl
das
outsb
or
cmpsl
xchg
add
add
jge
mov
sbb
ljmp
mov
repz
lcall
sbb
in
test
int3
adc
jb
xor
sub
inc
dec
int3
inc
aad
add
and
or
ds
sub
loop
int3
rcr
mov
hlt
lcall
das
mov
mov
push
pop
or
jns
xor
fisubl
or
pcmpgtb
xchg
cld
add
rorb
cld
subb
and
icebp
dec
cwtl
inc
adc
and
cltd
arpl
popf
sbb
lcall
cmp
ret
js
lcall
mov
test
rcrl
shl
cmp
cwtl
mov
dec
test
test
mov
push
or
int3
mov
fidivrl
sub
int3
bound
bound
clc
sub
test
xchg
and
xor
mov
jns
push
and
std
pop
lcall
jnp
cs
xlat
cmpsl
adc
shrb
loope
cli
sub
xchg
add
mov
adc
scas
es
pop
or
mov
pop
ror
mov
jo
jnp
and
xchg
mov
cltd
notb
mov
xchg
xor
cmp
adc
mov
mov
out
inc
leave
xchg
fdivrl
loopne
fcompl
push
ret
dec
mov
adc
cld
jb
test
rorl
mov
mov
dec
add
lahf
hlt
push
cli
popf
in
ficoml
mov
push
icebp
mov
int3
fisubl
cmp
in
nop
cmc
lcall
push
mov
mov
mov
push
push
pop
sub
or
mov
clc
jg
fwait
fwait
aad
lock
arpl
cltd
cwtl
int3
pop
inc
inc
dec
lret
cmp
push
jb
loop
push
data16
and
lret
xor
fwait
xchg
mov
pop
lock
test
xor
xor
push
mov
ljmp
dec
dec
add
mov
sub
hlt
pop
adc
mov
cmp
xlat
add
jb
dec
and
pop
int3
sbb
outsl
push
push
push
push
cs
inc
cld
pop
nop
inc
cmpsb
pop
sarl
sbb
in
push
mov
adc
std
or
lahf
das
mov
mov
cmpsl
add
andl
push
add
lea
jae
lcall
leave
std
outsl
int3
mov
mov
fiaddl
addl
sbb
sub
cmp
dec
mov
cmc
pop
mov
cmp
adc
jno
les
imul
ljmp
testb
mov
push
xchg
bound
stos
loop
sbb
incb
das
and
shlb
rorl
jns
xor
ljmp
mov
stos
xchg
movsb
mov
test
dec
fcmovbe
addr16
adc
stc
out
mov
or
jno
sub
jns
int3
call
jle
sub
int3
test
mov
jnp
sub
and
push
js
sub
loope
pop
push
int
mov
stc
push
cmp
mov
dec
sbb
std
mov
pop
xor
imul
mov
test
push
xor
test
mov
push
push
fadd
mov
ds
sahf
stos
push
jno
dec
ljmp
roll
push
je
mov
jb
fwait
jbe
in
mov
dec
inc
je
mov
loop
movsl
inc
push
adc
jne
imul
mov
mov
pop
push
mov
loope
xchg
roll
icebp
jg
fistps
push
ret
pop
ret
jg
jnp
stos
ret
fdivl
popa
mov
ret
test
jns
and
in
dec
aaa
js
das
lahf
push
addr16
push
mov
int3
adc
ja
shl
in
or
mov
inc
jg
and
decl
inc
jp
xchg
stc
or
sahf
das
leave
cwtl
inc
test
cmpsl
pop
mov
repz
mov
xchg
or
jge
and
sub
or
dec
xchg
inc
imul
jno
sub
lcall
pop
lods
jns
lcall
xor
jge
mov
shl
sub
xor
stos
stos
fwait
or
fistps
mov
jecxz
inc
xchg
push
adc
push
or
sbb
sbb
jge
mov
jp
das
mov
push
icebp
cmp
mov
lret
adc
cmp
rorb
data16
cmp
subl
fdivs
in
paddq
lcall
jo,pn
push
aas
int3
out
add
mov
sub
divb
test
imul
jnp
sti
inc
pop
inc
sub
lret
push
push
mov
dec
out
or
fistpll
aad
push
rorb
lret
fcoml
add
adc
lea
jae
fisttpll
jmp
push
dec
js
inc
ret
pushf
mov
cmp
sbb
xor
dec
inc
fstl
mov
les
push
lret
dec
lret
int
jg
leave
add
jno
mov
rol
add
push
mov
push
mov
pop
addb
jae
push
cmpsl
cwtl
cmp
cmp
add
lock
xor
mov
push
test
dec
push
inc
popf
lret
daa
add
jle
push
jb
enter
mov
test
ret
jno
mov
je
out
sarb
testb
add
sbb
inc
nop
jl
pop
insb
adc
add
aaa
repz
lds
jle
in
adc
and
mov
jnp
rorb
fbstp
xor
pop
nop
or
jg
cmp
notl
mov
xlat
push
enter
dec
push
adc
mov
dec
repnz
and
sar
mov
popa
jb
jg
fiaddl
xchg
decl
jg
shll
cli
mov
fmul
jg
xchg
jb
adc
mov
pop
mov
push
fsubrs
shl
dec
mov
cmpsb
fistpll
cmp
repnz
subb
cltd
jmp
jb
cmpb
stos
icebp
cmp
and
xor
arpl
pop
repnz
addb
sub
ss
enter
je
push
test
dec
pop
iret
repnz
test
sar
mov
push
and
or
inc
cmp
ja
fistps
loopne
dec
xchg
jnp
js
outsl
push
enter
cmp
das
or
xchg
fimuls
outsb
inc
das
inc
xchg
and
rclb
in
popf
xor
ljmp
fiadds
mov
mov
pop
pushf
jo
sub
push
add
bswap
mov
mov
pop
lret
out
adc
mov
in
sbb
int
pop
insb
jg
orb
dec
sub
ss
xorb
xchg
in
pop
inc
or
pop
jnp
or
sbb
xchg
cld
xlat
pop
and
rorl
mov
scas
jo
dec
pop
push
xor
mov
pop
aas
shl
jns
gs
dec
fiaddl
insl
dec
inc
fs
jmp
shr
or
or
ret
xchg
cli
rorl
ret
das
lods
dec
adc
xchg
loope
subl
jns
inc
sahf
dec
push
mov
testb
inc
lcall
lods
mov
push
ror
test
in
mov
cld
out
adc
cwtl
dec
mov
push
cmc
outsl
inc
jg
push
mov
push
sbb
cmp
loope
repnz
outsb
bound
jno
addl
cmp
jmp
jnp
and
jg
aas
pusha
or
cli
inc
sbb
aam
xorl
inc
sbb
mov
addr16
scas
sub
out
insb
int3
push
aas
fstp
ss
out
clc
cwtl
dec
sub
mov
rcrb
push
test
xchg
mov
sbb
pop
rcr
imul
mov
mov
add
mov
lock
mov
enter
lea
cmpsb
push
out
sub
cs
and
ret
jecxz
push
mov
xchg
shl
cld
mov
lods
sbb
jns
cld
pop
sub
inc
movsb
sub
fistpl
rorl
push
sbb
mov
test
mov
inc
xchg
lock
pop
jo
add
addr16
xchg
mov
int3
inc
or
insb
ss
pop
add
jno
sbbl
cltd
clc
dec
cmc
jbe
and
xchg
movsl
insl
mov
shl
loop
movsl
test
adc
ss
mov
or
lahf
lock
add
stos
cmpsl
mov
cltd
jnp
jo
stc
and
lret
lret
aam
jb
lods
repz
mov
push
mov
out
add
adc
div
dec
cs
into
lock
pop
push
pop
iret
cmp
mov
in
loopne
aam
pop
imul
push
sbb
repnz
lret
mov
or
cwtl
sbbb
ret
arpl
ja
push
int
negl
arpl
rcl
add
rcrl
lcall
or
insl
mov
mov
push
call
jg
call
pop
mov
and
movsl
mov
and
outsl
jge
in
lock
movsl
xchg
mov
loopne
cs
inc
gs
mov
mov
mov
jecxz
jecxz
mov
dec
leave
and
std
and
mov
lcall
hlt
dec
cs
imull
scas
outsl
xchg
rorb
jp
xchg
jns
daa
push
sub
cmp
imul
outsb
jecxz
testb
sub
std
popl
pusha
ljmp
std
sbb
stos
inc
sbb
xor
mov
push
and
std
mov
cmpb
mov
stos
shll
cmp
das
or
xchg
lock
sbb
ret
xor
pop
imul
ror
sahf
mov
cmpsb
jge
pop
sub
mov
pop
lahf
shlb
sub
stos
and
std
xor
aad
das
insb
xlat
sti
rcr
movsb
dec
push
loop
sub
inc
shl
ds
lock
loope
das
sti
je
pop
addr16
call
adc
cmp
loop
push
rolb
lock
cmp
das
stos
or
hlt
xchg
enter
mov
push
rclb
push
jne
add
mov
push
push
ja
push
sbb
add
dec
xchg
sbb
aaa
jno
jno
movsl
fildl
scas
sarb
arpl
dec
daa
cli
xorb
arpl
adcl
sub
or
mov
lcall
push
sbb
mov
int3
mov
xor
fsubr
out
ljmp
mov
push
stos
out
pusha
xor
aas
lahf
xchg
add
insb
imul
ja
mov
movsb
mov
mov
cmp
push
movsb
mov
sbb
mov
fimull
lret
push
adc
xchg
mov
pop
mov
mov
lret
or
arpl
les
test
cs
int3
mov
int
into
test
adcl
lret
push
and
insb
xchg
pop
cmp
pop
and
jo
mov
cltd
or
insl
xlat
and
lret
mov
or
rcll
and
push
xlat
dec
mov
arpl
addl
fbld
inc
movsb
xchg
mov
inc
mov
jg
mov
lock
cmpsb
addr16
in
add
and
cltd
dec
shll
lock
cltd
or
and
and
add
xchg
mov
inc
cmpsb
lret
gs
js
aam
cwtl
xor
pop
or
fsubrl
das
xchg
pusha
push
rclb
ret
call
in
pop
or
pop
mov
xchg
cld
xchg
push
sub
xor
lret
mov
mov
clc
retw
add
lock
sub
mov
push
add
jbe
adc
fnstsw
outsl
add
and
outsb
dec
mov
adc
inc
into
mov
sub
lcall
fwait
mov
cs
pop
jp
push
lock
inc
jns
and
lods
ds
or
sub
cmc
int3
xchg
dec
or
arpl
inc
jae
imul
sub
add
jne
out
adc
add
test
pop
jge
and
shlb
aas
adc
aaa
lcall
stos
xchg
cld
xchg
push
bound
xchg
fcos
cwtl
push
rcrl
lcall
lock
jo
data16
iret
adc
mov
and
lcall
fsubp
popa
sbb
cs
add
out
dec
cmpsb
jle
push
xor
incl
cmp
jecxz
ss
enter
cld
adcl
jge
sub
dec
rolb
movsb
data16
lods
test
aaa
cld
xchg
push
pusha
xchg
mov
loopne
adc
jge
xchg
mov
pop
or
fs
mov
sbb
inc
sub
roll
sbb
mov
mov
scas
lock
enter
jae
nop
pop
call
cmp
or
or
mov
mov
or
inc
push
mov
jecxz
or
and
xchg
aas
ror
mov
cmp
mov
push
push
icebp
cmp
mov
dec
inc
xor
lcall
and
out
lret
int3
lock
daa
add
rcrb
in
mov
push
add
pop
push
mov
cs
xchg
mov
mov
jle
lret
cli
pop
sub
mov
out
inc
int
cmpsl
pop
push
dec
je
cmp
lea
inc
ds
add
cltd
imul
pop
sbb
lret
cld
xor
sbb
jo
mov
aaa
pop
ret
fdivs
les
dec
lahf
lret
test
mov
cmp
xor
imul
and
or
movsl
push
repz
fnstcw
cmpsb
cwtl
dec
shlb
adc
push
cmp
xlat
stos
shrl
sti
pop
dec
dec
stos
adc
nop
mov
jmp
stos
adc
xlat
jnp
push
stos
push
in
mov
jmp
out
jecxz
ljmp
test
pop
pop
sbb
lcall
lea
lds
cmp
jbe
shrb
cli
arpl
fcomps
add
sub
inc
lcall
jg
out
dec
int3
jmp
sub
sub
and
cmc
jge
repnz
lcall
int3
push
in
mov
add
xchg
pop
add
scas
dec
int
mov
jl
cwtl
loop
mov
sbb
jl
add
jl
popf
js
lcall
cld
test
xor
cmpsb
shlb
push
add
dec
xchg
into
and
je
mov
and
cltd
repz
int3
jg
or
dec
jns
sub
iret
iret
cmp
add
es
iret
sti
sahf
jmp
sub
cltd
mov
xchg
mov
sbb
mov
sbb
out
shll
outsb
jle
inc
xor
in
test
and
pop
imul
xchg
jg
push
jb
stos
lds
in
sbb
and
add
sbb
popa
stos
inc
icebp
jge
sbb
pop
xor
movsb
cmpsb
pop
lahf
cmpsl
fsubrp
int
cmpsb
or
fisubl
out
fidivrs
pop
fbstp
jle
push
arpl
mov
pop
decb
xorb
jo
cmp
or
ds
xor
popf
lds
and
jmp
imul
inc
xchg
cmp
dec
test
or
mov
adc
jmp
mov
rolb
push
and
mov
xchg
subps
insl
inc
ds
jbe
into
jge
sub
shlb
ja
mov
shr
push
mov
xor
push
mov
mov
pop
fucomi
inc
les
mov
sbb
dec
repnz
jo
mov
arpl
cmp
cmpsl
add
rorl
jns
mov
popf
stc
loop
jno
rorb
and
repz
cli
call
andl
dec
loopne
testl
jmp
pop
lock
cmp
lahf
loop
xchg
cmpsb
ficomps
inc
fisttpl
arpl
xchg
push
ds
stos
stc
jle
lea
ret
adc
xchg
xor
mov
cmp
cmp
mov
xchg
adc
and
lahf
mov
push
int3
push
repz
xchg
mov
sbb
mov
add
mov
add
xchg
jb
lret
xchg
or
jo
aad
popa
cmp
pop
mov
jmp
data16
testl
push
mov
shrb
popa
mov
in
jns
rcrl
cmp
in
xor
cwtl
jmp
dec
gs
inc
sbb
fistpl
jbe
sub
mov
setno
mov
pop
sub
mov
inc
daa
mov
daa
bound
outsl
aas
xor
mov
cmp
xorb
jmp
decl
fildll
inc
sub
into
inc
mov
pop
mov
sub
in
xchg
push
push
cltd
dec
add
mov
push
outsb
ret
push
aam
popa
dec
not
dec
pop
sub
imul
lret
sbb
mov
in
les
jns
xchg
xor
mulb
pop
sti
sarl
imul
out
mov
adcb
shrb
mov
mov
pop
mov
mov
or
add
mov
pop
ss
and
ficomps
sarb
sub
andb
dec
sub
mov
mov
mov
mov
pop
fmul
push
aas
cmp
sub
mov
mov
xor
inc
mov
mov
mov
test
dec
outsb
insb
mov
add
mov
pop
ret
lcall
mov
mov
mov
scas
hlt
push
ja
out
imul
cs
mov
jns
ds
xchg
lea
daa
mov
cmp
add
andl
xchg
push
dec
jg
rep
cli
sbb
cmp
pop
cs
mov
loop
ljmp
push
fimuls
mov
push
je
jbe
mov
rcrb
loop
movsl
sahf
fcmove
lock
pop
adc
dec
fbstp
ds
pop
push
adc
repz
pop
or
out
dec
add
loop
mov
ljmp
gs
sahf
push
cmpxchg
push
and
pop
lods
dec
sahf
imul
mov
jecxz
jp
cmp
mov
repnz
jbe
mov
out
mov
push
into
fisubs
in
fadd
mov
push
pop
arpl
mov
xchg
jae
xlat
sbb
or
or
or
lret
rcrb
mov
push
movsb
repnz
push
pop
mov
add
cmp
push
fwait
scas
mov
push
insb
fs
lret
test
mov
xchg
mov
jl
sbbl
lods
stos
int3
jp
ss
adc
rolb
or
ss
pop
jbe
js
ds
jl
pop
cmp
int3
sbb
call
or
pop
or
mov
cwtl
sbb
ret
dec
jbe
sarb
pop
mov
mov
push
or
test
xor
leave
in
cmp
dec
mov
mov
clc
mov
daa
gs
stos
pushf
mov
mov
ds
mov
pop
out
jecxz
lcall
subb
movsl
movsl
lcall
or
push
popa
add
cmp
pop
mov
fdivr
pop
mov
dec
jge
mov
outsl
mov
push
ljmp
add
lahf
adc
cmp
out
gs
pop
fwait
jne
hlt
clc
push
cld
out
mov
je
sbb
dec
mov
addr16
ljmp
sbbb
add
stos
xor
sbb
mov
gs
push
xchg
add
xorb
cmp
push
clc
inc
into
adc
or
gs
in
nop
repz
imul
xchg
lret
imul
jno
cs
cmc
cli
mov
jae
mov
aas
or
mov
lcall
cmp
xchg
push
loopne
or
pop
xor
mov
mov
bound
rorb
push
and
shlb
dec
popa
dec
mov
pop
fwait
jns
sahf
and
outsl
aam
fwait
lock
mov
gs
cmc
mov
popf
es
movsb
adc
cmp
push
sub
or
sbb
mov
push
hlt
jl
jns
sbb
pop
imul
mov
mov
nop
mov
adc
cmp
sbb
fsts
pop
out
lret
icebp
and
jnp
and
lock
add
mov
jne
cmp
add
sbb
mov
dec
mov
xchg
test
mov
jnp
lods
out
nop
aam
push
mov
iret
hlt
mov
ljmp
mov
xor
mov
mov
or
mov
test
arpl
das
sar
sub
bound
out
lods
xchg
and
imul
movsl
out
mov
inc
and
add
das
mov
jle
pop
scas
push
jns
pop
imul
mov
and
mov
sub
push
fwait
in
in
dec
add
lahf
xchg
gs
adc
mov
aas
stc
out
inc
andb
jle
sbb
xor
jns
jmp
jl
lret
add
cmp
jbe
jl,pn
and
pop
inc
cmpsb
or
pop
cmpsb
and
es
andl
sub
mov
ds
arpl
popf
paddd
xchg
mov
nop
movsb
mov
mov
mov
mov
dec
adc
jnp
test
dec
ds
stos
lahf
testb
aaa
js
pop
jge
jb
push
nop
iret
fidivs
icebp
pop
ds
dec
jbe
pop
pop
xor
aam
ds
push
cli
push
pop
sbb
lret
movsl
mov
mov
sbb
mov
sub
and
jb
add
mov
push
ds
pop
mov
mov
ds
adc
dec
lods
les
pusha
sti
mov
push
sbb
sar
popa
stc
xchg
mov
fiadds
sar
push
aam
mov
cs
mov
jnp
sbb
sbb
sub
setae
pushf
inc
ljmp
mov
ficoms
mov
adc
mov
inc
loop
mov
or
mov
jnp
cmp
xchg
cmp
add
aas
pushf
jg
push
rorb
xchg
cmp
inc
aas
rorl
out
mov
mov
outsl
icebp
outsl
test
lods
lea
sub
inc
cwtl
jnp
testl
ret
or
xchg
stos
jecxz
xchg
gs
mov
sub
sbb
jecxz
mov
lcall
insb
xlat
jp
ja
pop
dec
repz
cmp
cmp
fdivrp
loop
mov
mov
psubd
pop
stos
fstp
rorl
jecxz
insb
push
clc
call
pop
ds
push
sarb
rorl
mov
push
jl
sub
pop
mov
inc
sbb
pop
hlt
aad
pushl
mov
sbb
aas
test
or
rorl
mov
mov
shrl
scas
mov
and
dec
pop
ds
sahf
dec
in
popw
inc
in
roll
or
adc
mov
pop
test
je
pusha
pop
lret
dec
adc
push
icebp
or
sbb
fsubrp
mov
mov
push
mov
and
lock
sbb
xor
pop
push
inc
push
cwtl
repz
cmp
mov
pop
sub
fdivrs
cld
outsl
rol
sbb
ss
jbe
adc
mov
mov
or
dec
gs
jae
inc
test
cmp
ret
lret
jne
pop
jmp
outsb
mov
leave
and
xor
xchg
repz
ret
rorb
jp
push
pop
ds
mov
xor
movsb
jmp
cwtl
pop
or
je
jle
jle
inc
xchg
add
iret
lret
xchg
ret
jmp
fisttpl
ja
sbb
inc
imul
xlat
nop
mov
mov
mov
or
jno
sub
xchg
cltd
test
mov
stc
ficompl
ficoms
sub
push
in
clc
mov
xor
xor
mov
stos
inc
mov
inc
shlb
and
cs
jmp
outsl
addb
fstl
and
addr16
pop
loope
push
icebp
mov
mov
push
and
mov
xchg
mov
push
mov
or
mov
and
mov
call
fsts
cmp
rcl
repnz
sarl
hlt
push
cwtl
jl
jmp
ds
je
sbb
js
clc
and
and
lea
adc
ficompl
jbe
mov
xchg
mov
lods
cltd
cmp
push
loopne
addr16
fmuls
adc
push
jmp
sbb
fwait
and
mov
fcomp
mov
mov
int
mov
dec
jmp
test
stos
xlat
ds
push
xchg
jns
mov
lahf
and
xor
out
cwtl
cmp
mov
push
xchg
aaa
push
xor
lahf
cmp
mov
adc
mul
xchg
subb
xchg
stos
imul
jo
pop
push
repnz
push
sub
or
lods
or
shr
mov
dec
sub
shlb
rclb
ja
lret
fadd
pop
mov
mov
cmp
insb
mov
xor
iret
mov
push
mov
and
or
cmc
daa
je
push
rorb
adc
push
dec
mov
sbb
mov
roll
ja
add
int
cmp
inc
ljmp
push
add
or
push
cmp
push
dec
pop
sub
test
lock
lcall
pop
inc
call
loopne
mov
push
jle
or
mov
cwtl
cwtl
icebp
cmpsl
pop
mov
idivb
ret
repnz
fsubl
dec
inc
xchg
jae
mov
push
test
ficompl
cmp
insb
xor
stc
sbb
adc
dec
cwtl
fcmove
sub
lret
inc
lret
mov
ds
jne
out
lods
sbb
jg
sti
sbb
mov
xor
push
xchg
into
and
gs
lea
in
pushf
push
xor
jmp
sahf
jno
pop
mov
jl
mov
pop
mov
sti
add
xchg
rorb
xchg
jmp
repz
icebp
sbb
hlt
popf
in
xchg
pop
stos
sarl
shll
cs
sub
mov
add
sub
mov
test
outsl
mov
pop
popf
cld
mov
xorb
jle
cli
inc
cmp
fisubl
mov
dec
jnp
fsubs
outsl
insl
mov
fisubl
in
mov
mov
cs
mov
rolb
popl
sbb
aas
and
out
ds
push
xchg
fisubl
mov
pop
cwtl
arpl
push
mov
jo
pop
testl
shrb
dec
loopne
js
test
sbb
xchg
mov
sbb
es
scas
mov
and
pop
mov
out
in
push
fdivp
bound
ds
and
leave
adc
ds
test
jo
ret
mov
xor
sbbb
mov
mov
adc
adc
mov
dec
push
jmp
mull
mov
test
js
adc
fldt
add
cmp
iret
mov
je
leave
les
rcl
fs
in
rclb
dec
out
push
jg
scas
pop
or
pop
aaa
jns
xchg
lock
mov
je
mov
push
pop
and
inc
out
sbb
movsb
mov
xchg
shrb
cmc
in
pop
jae,pt
sub
dec
scas
imul
inc
imul
mov
pop
arpl
mov
test
lock
clc
push
push
mov
mov
insb
pop
xorb
xchg
jmp
test
push
int
icebp
data16
stc
pop
xchg
sbb
jae
js
dec
lret
mov
jb
incl
mov
mov
rcl
pop
cs
xor
jl
test
cld
lods
xlat
ss
outsb
add
cld
xor
push
into
push
adc
push
lock
test
fadd
fdivrp
aas
bound
fisubrs
mov
inc
rclb
aas
outsl
js
or
cmpsb
dec
loop
loope
sbb
imull
sbb
jge
loop
pop
sarb
pop
xchg
mov
or
inc
mov
out
cltd
adc
pop
test
loopne
sbb
cmp
pop
mov
add
aaa
int
mov
mov
jo
stos
int3
cld
xor
inc
and
mov
imul
mov
push
dec
lock
into
shl
jno
sub
lds
fsub
inc
stos
bound
inc
ret
hlt
lds
ret
mov
mul
push
jge
mov
cmp
adc
fimuls
addr16
adc
dec
push
sub
push
cmp
sub
mov
ds
mov
into
lea
inc
mov
loope
pop
sti
xchg
xchg
push
adc
jge
mov
cmpsb
orb
lock
rcll
into
jbe
cwtl
cmp
add
shl
movsl
and
rcrb
pop
pop
ds
lahf
aam
push
mov
adc
nop
xor
inc
pop
cmp
ja
and
repz
xchg
push
call
mov
cmp
cmovb
or
xor
jns
or
imul
in
in
fidivrs
arpl
jne
out
clc
inc
ss
push
neg
out
sub
popl
xchg
mov
jl
out
push
bndldx
sahf
icebp
add
cmp
cmpsb
dec
jbe
mov
sti
pop
push
sbb
repz
and
std
push
jmp
push
jl
lcall
cli
or
cmc
push
xchg
inc
or
icebp
test
xor
lea
pop
pop
jmp
xchg
repz
cmp
cmpl
dec
mov
mov
js
lahf
in
loopne
adc
mov
inc
or
idiv
jno
mov
push
lcall
xor
sbbl
and
jnp
lea
push
xchg
loopne
lea
bound
fisttps
imul
mov
add
inc
and
sub
ds
lret
movsb
xor
dec
sbbb
inc
fisttpl
dec
imul
cltd
push
test
pop
mov
nop
jae
sbb
xor
mov
or
cs
leave
ds
jecxz
inc
mov
loop
and
or
xchg
add
mov
cmp
add
push
xchg
lea
or
test
push
je
les
pop
push
leave
and
push
lret
lret
mov
cmp
les
pop
xlat
push
add
mov
mov
scas
loope
cs
mov
dec
pushf
mov
or
cmp
sub
fstpl
sbb
lea
jno
xchg
loopne
adc
mov
outsl
lcall
pushf
cmp
push
and
pop
subb
lods
xor
scas
cmp
loopne
stc
jno
in
adc
xlat
test
fwait
in
test
fldenv
add
xchg
push
and
shll
into
icebp
ret
sub
imul
mov
jge
pop
mov
outsl
mov
gs
inc
mov
jae
jb
sahf
arpl
test
inc
adc
jecxz
dec
lea
push
test
mov
inc
clc
or
add
lret
xor
inc
xchg
lea
sbb
add
call
sti
mov
dec
dec
mov
arpl
push
adc
jae
adc
out
mov
mov
push
icebp
decl
push
xlat
inc
dec
ds
popa
xor
in
setb
lret
sub
push
cmp
stos
insl
add
aaa
inc
mov
jp
or
lock
mov
inc
xor
adc
mov
mov
sbb
leave
ds
jnp
incl
add
lret
ds
fstpt
mov
xchg
mov
ret
clc
fbld
inc
mov
and
adc
add
jb
cli
jecxz
cmp
scas
and
sub
cmpl
cli
push
cmpsb
and
and
mov
repnz
and
mov
das
cmp
lcall
cwtl
ret
stc
dec
mov
test
bound
xchg
mov
popf
call
fadd
mov
arpl
mov
lret
add
mov
sub
push
pop
mov
mov
stos
imul
ss
cmp
xchg
aad
scas
jno
mov
dec
je
std
repz
cmp
dec
mov
leave
lea
xlat
mov
int3
movsb
lahf
push
xchg
adc
xor
dec
sbb
pushf
push
mov
lret
sbb
mov
push
xor
xchg
jae
int3
mov
push
fisttpl
test
repnz
rcr
and
add
cmp
pop
pop
gs
call
pushf
sub
gs
mov
inc
pop
int
sti
hlt
test
or
xor
cmpsl
fucomp
adc
arpl
sbb
popa
cmc
or
pop
xchg
out
lods
in
orl
cltd
inc
jg
cmp
xor
stos
push
repnz
jbe
arpl
dec
and
and
adc
lods
repnz
inc
inc
push
jae
jae
ds
push
or
adc
cmpsl
pop
pop
imull
ds
lahf
sbb
jle
add
mov
enter
sub
adc
loop
dec
xchg
cmp
leave
test
inc
adc
sbb
cmp
lcall
mov
orl
imul
mov
arpl
loope
push
enter
mov
mov
xor
jb
push
push
in
push
mov
push
cmp
fsubp
mov
push
icebp
sbb
xchg
add
cwtl
les
xor
movsl
repnz
lock
popa
and
and
das
cmp
dec
mov
cmpsb
inc
test
mov
aas
repz
sub
test
mov
ds
sbb
loopne
dec
pop
jns
mov
ja
push
sti
mov
lcall
sti
clc
fistps
mov
lret
insl
aas
and
stos
fldl
mov
sarl
jp
inc
dec
jb
sub
jne
ret
iret
xchg
inc
sbb
or
dec
roll
movsl
dec
test
and
push
adc
pshufw
push
or
ds
mov
mov
jmp
xor
aas
out
xor
icebp
mov
xlat
ljmp
pop
aas
ret
xchg
sti
lods
dec
cmp
mov
push
adc
dec
or
mov
adc
mov
mov
mov
cli
cmp
mov
add
pop
xor
sub
rcr
out
xchg
or
mov
roll
or
sbb
sub
clc
hlt
sbbl
sbb
shr
mov
push
sahf
mov
inc
inc
mov
cwtl
in
xchg
outsb
and
cmpsl
mov
push
ds
popf
sub
bound
ret
mov
sti
ljmp
or
shlb
jb
nop
xorl
bound
imul
insb
jge
dec
push
push
mov
mov
popf
addr16
mov
push
in
pushf
xorl
iret
jae
pop
ljmp
std
mov
cmp
in
mov
insb
into
jne
push
int
iret
stc
icebp
sbb
negb
ds
lret
jbe
jo
adc
mov
mov
mov
xchg
shll
mov
dec
mov
xor
push
repnz
jno
shlb
test
jge
jbe
mov
dec
mov
jb
lea
popa
jnp
lock
mov
sbb
mov
mov
outsb
into
rcrb
div
inc
js
xor
pushf
das
fmuls
lret
lret
jp
iret
pop
mov
inc
sahf
and
fmull
jns
aaa
push
mov
cmp
push
jmp
sbb
or
je
adcb
mov
push
pusha
adc
mov
sbb
cli
inc
pop
loopne
leave
jno
popf
cwtl
jnp
jle
mov
cmp
jae
mov
mov
leave
pop
mov
ds
ds
outsl
repnz
gs
adc
iret
mov
shll
scas
adc
xchg
aas
fwait
insb
lock
sbb
adc
xorl
vmwrite
xchg
jnp
dec
out
aaa
icebp
rcrl
xchg
dec
push
movsl
push
dec
std
xor
jne
ss
insb
mov
jmp
fisttpl
lods
xchg
sub
pop
dec
mov
repnz
fucom
mov
and
push
fdivrl
or
add
cmpb
cmpl
add
cmp
mov
imul
js
pop
ss
aas
jp
mov
mov
sub
and
mov
or
push
imul
mov
cli
fistpll
mov
inc
cmp
idivl
sbb
sbb
rorl
ds
sbb
movsl
sbb
xlat
ret
sbb
jmp
cmp
repz
or
fnstcw
and
daa
shll
or
mov
cmp
int3
xchg
push
mov
pop
fnstenv
and
out
mov
cmp
mov
add
add
sub
in
cli
mov
dec
or
lret
mov
js,pn
into
ds
adc
stos
sbb
mov
repnz
push
test
rcll
loopne
cwtl
push
aaa
add
mov
orb
cmp
jns
mov
dec
add
mov
xchg
test
mov
imul
imul
pop
mov
inc
xlat
out
xchg
fcomip
mov
cltd
sub
arpl
xchg
mov
jmp
in
xchg
rcl
sub
xlat
clc
lds
ret
mov
sti
clc
sub
clc
cmp
cli
ja
outsb
mov
decl
ds
enter
mov
xor
jmp
mov
mov
shlb
into
sub
push
mov
add
xchg
fwait
adc
cmp
add
subb
scas
dec
jae
cwtl
lret
cmp
xor
cmpsl
mov
and
sarl
sub
xchg
dec
and
hlt
inc
jl
sarl
push
xorl
sbb
lahf
fnstenv
test
push
xchg
adc
das
faddp
test
sbb
sbb
push
cmp
xorl
lods
addr16
stos
and
scas
mov
jmp
dec
lret
sarb
mov
ljmp
cmpsb
or
rcll
lods
outsb
sbb
add
push
dec
dec
ds
loop
pop
scas
mov
cmpb
xor
and
mov
cwtl
enter
lods
mov
fiadds
xchg
adc
or
ds
mov
adc
out
add
cmp
xlat
cmp
push
outsl
sub
scas
loop
or
test
sbb
pop
sbb
je
and
xchg
adc
mov
jb
jp
adcb
mov
mov
push
aas
int
std
sbb
lds
fldcw
cltd
clc
dec
pop
lahf
cmpsl
adc
icebp
push
mov
add
or
dec
fwait
jl
enter
xor
mov
ljmp
jae
cmp
repnz
sub
jnp
icebp
fidivs
in
sar
xchg
add
es
call
imull
dec
daa
loopne
iret
cmp
mov
xor
jp
adc
popf
cmp
mov
inc
mov
ds
pop
icebp
inc
repnz
out
stos
scas
lret
ret
daa
jno
mov
jb
sbb
jmp
mov
inc
xlat
inc
push
add
mov
fimull
xlat
xor
xor
aas
mov
dec
jns
pop
mov
xchg
fstl
add
jbe
test
dec
xchg
ljmp
xor
mov
out
and
inc
jle
sbb
sbb
push
repnz
faddl
mov
std
faddl
sbb
pop
rep
inc
ja
xor
jb
lahf
jge
popf
jp
stc
xor
repz
scas
push
fsts
and
aad
sbb
push
test
std
imul
das
ljmp
sub
push
daa
enter
movsl
shll
clc
in
adcb
mov
xchg
push
cs
and
mov
cltd
lods
dec
lret
jnp
sub
mov
movsb
fdivrl
xchg
push
fwait
mov
sahf
ja
sub
xchg
stos
xor
push
jbe
bound
adc
ljmp
out
or
fwait
jo
cmp
cmp
adc
sbbl
pop
and
insb
xor
mov
jecxz
loop
or
sti
mov
test
into
movb
sbb
lret
xorl
cs
mov
and
or
movsl
sahf
jae
add
xchg
adc
cmp
pusha
sbb
jecxz
shll
mov
sub
lret
push
int3
mov
jge
and
push
mov
icebp
sbb
pop
xchg
pop
stos
fwait
imul
fisttpl
call
jl
inc
sahf
pushf
push
ja,pn
ret
add
lcall
pop
sbb
addr16
lock
mov
cli
push
pop
daa
xchg
and
dec
aam
sar
jo
mov
jp
push
and
ds
stos
mov
jb
test
in
xlat
jmp
jne
in
sub
mov
fldenv
ss
pop
mov
mov
mov
pushf
mov
scas
nop
scas
cs
push
pop
inc
and
mov
lahf
scas
add
test
jo
xchg
dec
js
xchg
xor
popa
out
xchg
mov
inc
vshufps
adc
shrl
cmp
mov
daa
daa
gs
pop
imul
xor
push
popf
lret
lock
arpl
lcall
or
push
and
cli
xchg
outsl
gs
lahf
fmulp
mov
lret
pusha
daa
mov
ljmp
loopne
jne
mov
ja
ljmp
test
dec
jg
frstor
mov
xor
in
and
push
out
jg
mov
sbb
ss
xlat
les
cs
iret
lods
inc
fisttpll
pop
cmp
push
xor
out
dec
pop
sti
pop
mov
cmp
lock
dec
pop
jb
int3
leave
mov
iret
xor
into
pop
xor
pop
sbb
sbb
nop
shr
cwtl
js
scas
les
sti
setge
add
nop
leave
loopne
es
and
mov
xor
adc
mov
xchg
add
xor
pop
or
pop
push
mov
dec
imul
lcall
xchg
aas
pusha
lock
loopew
xchg
cmpsb
inc
enter
xor
in
xchg
mov
pop
xor
sub
xor
xchg
or
mov
xor
mov
mov
or
cs
xor
adc
adcl
and
int
aam
push
sub
mov
and
ror
xor
dec
push
jl
imull
and
mov
pop
mov
xor
jl
xor
mov
sbb
je
psadbw
jmp
nop
sub
mov
test
jp
mov
divb
ds
adc
sub
sub
add
inc
imul
gs
scas
dec
and
arpl
xchg
cli
das
mov
lock
and
aad
jbe
ds
es
dec
pop
out
jle
popa
fs
stos
rcrl
xor
lods
lahf
aaa
dec
sahf
sbb
push
add
outsl
pop
les
inc
xor
xchg
daa
test
or
adc
mov
lock
inc
adc
pop
mov
das
lahf
jns
cmp
jle
jnp
add
mov
jecxz
xchg
inc
or
jno
es
les
cltd
xchg
xchg
lea
pop
mov
xor
sub
fwait
ss
mov
cmp
mov
mov
xor
xor
push
adc
cmpsl
sbbb
inc
jp
cmpsl
sbb
adc
or
loop
int
inc
scas
mov
stos
scas
pop
out
xor
sub
movsl
jp
pop
pop
arpl
jecxz
mov
push
mov
jne
sub
push
sbb
movsb
jbe
cld
mov
int3
ljmp
mov
sub
dec
adc
pop
cmp
sub
inc
lds
jge
push
cmp
jno
mov
ja
ficompl
mov
mov
cld
imul
mov
ja
add
lods
pop
in
scas
flds
lret
sbb
icebp
jns
data16
jno
inc
jecxz
cmp
ljmp
fs
push
negl
mov
or
outsb
pop
mov
push
fmuls
outsl
xchg
repnz
cs
mov
sbb
push
and
out
popa
mov
xchg
das
mov
aas
cwtl
push
lahf
int
push
mov
cmp
ror
arpl
mov
push
mov
xchg
mov
fcompl
mov
mov
dec
xorl
adc
inc
test
aas
gs
stos
mov
push
ds
xchg
popf
imul
mov
das
arpl
ds
out
fdivrs
movsl
add
jp
lea
xchg
xchg
loop
lods
hlt
shlb
mov
mov
aas
stc
ds
xchg
hlt
mov
in
xchg
into
addl
stos
push
jb
cwtl
scas
pop
out
pop
adc
enter
daa
stos
cld
adc
push
add
in
pop
repz
mov
out
repz
or
and
pop
mov
jmp
inc
dec
xor
xor
xor
in
add
lds
xor
jo
sbb
mov
shl
fs
mov
add
dec
cltd
ficoml
je
fnstenv
mov
jle,pn
cmp
and
outsb
add
outsl
adc
cwtl
cmp
xchg
aas
xchg
jns
test
mov
push
insb
push
test
dec
clc
std
and
add
frstpm(287
sbb
fs
lock
sti
adc
loop
pop
xchg
addr16
dec
dec
test
pop
mov
push
mov
cmc
roll
andl
mov
pop
in
mov
cltd
sub
and
fistpll
icebp
outsl
test
xor
mov
or
aam
sbb
andb
push
in
pop
call
push
orb
cmpsl
outsl
div
shl
shll
es
lock
xchg
mov
out
sub
enter
jle
xchg
push
inc
ret
adc
lret
ds
or
test
out
jle
cmp
lds
into
repnz
and
mov
out
mov
jns
cmpsl
push
cmpsb
xchg
into
and
mov
or
rclb
xor
fistps
fcmove
jl
daa
and
outsl
pop
outsb
out
lods
cltd
hlt
loopne
cli
lahf
xor
out
adc
leave
adc
nop
sti
ret
jp
cwtl
adc
pop
stos
lret
push
ljmp
cmpsl
mov
cmp
outsb
loop
or
mov
adc
pop
dec
and
into
popf
cmp
xchg
sub
leave
mov
xor
aam
xchg
jae
stos
test
fiadds
mov
mov
xchg
test
sbb
mov
pop
push
js
shll
cmpsl
inc
cs
push
sbb
xor
xchg
cwtl
aam
out
push
and
test
movsl
popf
and
mov
iret
call
or
mov
popa
imul
jno
cmc
mov
push
sbb
das
inc
pop
xchg
outsb
mov
cmp
outsb
adc
inc
mov
xor
pop
out
ds
aas
mov
jp
leave
test
xor
pop
mov
xor
xchg
lcall
pop
mov
sahf
xchg
push
jno
dec
xorb
outsl
subb
xor
cmp
xor
mov
sbb
sub
mov
xchg
push
xor
pop
jp
movsl
lods
or
pop
xchg
in
jne
push
pop
out
mov
push
push
xchg
andl
cmp
addr16
stos
ds
out
inc
aad
sub
insb
dec
xlat
or
mov
mov
pop
mov
arpl
leave
sbb
cmpsl
out
scas
xchg
mov
aas
pop
push
sbb
inc
outsl
rcl
mov
pop
lea
icebp
mov
rcrb
pmaddwd
sub
xor
fidivrl
adc
cli
ret
mov
xchg
cmpsl
xor
jb
xchg
popf
push
ss
xchg
push
in
repz
push
mull
aad
xchg
fcomip
cltd
out
jecxz
ds
adc
pushf
fucomi
xchg
repnz
xchg
jns
push
pop
pop
test
ds
jp
arpl
mov
shrl
out
pop
sub
fs
inc
aad
and
aam
jg
lret
and
pop
arpl
adc
mov
add
xchg
aaa
mov
sbb
ds
popa
cmpsb
rcrl
movsb
xchg
mov
xor
jo
cmp
mov
in
lcall
ror
and
out
push
xchg
mov
lret
movsl
popa
and
sti
test
cld
add
sti
add
mov
or
mov
ds
jp
pushf
repnz
xchg
insb
jnp
inc
mov
shlb
pop
in
into
rorb
sarl
andl
inc
xchg
jnp
mov
stos
sub
push
lds
test
xor
mov
inc
push
mov
push
adc
fdivr
or
mov
adc
fiadds
xchg
jl
xchg
mov
lahf
mov
ds
fadds
inc
aad
jge
jge
sub
add
mov
notb
mov
mov
outsb
dec
pop
dec
out
and
dec
and
mov
mov
jge
mov
push
xor
sbb
mov
arpl
ja
pusha
hlt
jb
sbb
pushf
pop
mov
pop
xor
dec
ljmp
in
imul
repnz
rcrl
mov
push
int
xrelease
sbb
enter
mov
and
or
pop
push
or
pop
adc
test
movsb
push
pop
sub
sub
imul
xchg
test
sti
inc
adc
add
inc
adc
das
mov
ljmp
leave
insl
ds
add
mov
fistps
fcompl
cmpsb
insl
mov
pop
rcl
sub
shl
mov
pushf
mov
stc
xchg
fs
pop
xlat
movsl
push
stos
mov
out
mov
insb
nop
fsubrp
jge
loope
incl
andb
test
dec
call
pop
push
ds
inc
mov
inc
data16
stos
subb
xor
cs
mov
aaa
add
pop
aas
sbbb
fstps
ds
jno
cmpsl
stos
lods
outsl
mov
outsl
xor
push
ror
push
aam
xor
mov
repz
js
dec
sub
sti
jl
cli
xor
sarb
jl
inc
inc
inc
sub
int
insb
add
mov
or
gs
push
pop
call
mov
mov
xor
xor
mov
sahf
lods
inc
or
ds
mov
sbb
inc
inc
inc
adc
jl
pop
push
ljmp
cltd
popa
pop
inc
daa
mov
ss
scas
in
loop
negl
xchg
pop
mov
cmp
inc
pop
std
pop
scas
xchg
push
adc
cld
pop
imul
clc
movb
xor
and
mov
jmp
and
arpl
mov
dec
pushw
pop
mov
aam
sub
push
sbb
test
rcr
ljmp
push
xchg
cmp
mov
jo
sub
mov
fsubrl
add
inc
rol
movsbl
xor
sub
jo
out
outsl
jmp
cwtl
mov
call
daa
ret
xchg
and
fdivrl
push
daa
clc
adc
cvttps2pi
dec
dec
and
sbb
lock
cmpsl
mov
outsl
aaa
lwpins
stos
ds
sti
xor
outsl
pop
mov
int3
mov
data16
cmpl
lods
je
movsl
and
mov
nop
hlt
sbb
mov
xchg
and
idiv
jl
mov
aam
sbb
std
js
sbb
cwtl
dec
dec
mov
mov
repz
cld
test
xor
frstpm(287
movsb
aas
xchg
fistps
xchg
std
push
cmpsb
daa
add
or
xchg
inc
addl
adc
cmpsb
mov
add
aam
and
sahf
mov
mov
adc
mov
inc
cmp
sub
xchg
into
aas
mov
out
lods
push
mov
cmp
shrb
adc
xor
call
pushl
rcrb
pop
mov
xor
adc
scas
call
jo
jle
mov
mov
lcall
sti
fcmovnbe
mov
lods
psrlw
ret
cmp
cwtl
cld
mov
dec
xchg
mov
pusha
mov
ror
rorl
jmp
fwait
dec
jmp
or
jle
leave
fdivrl
mov
mov
and
pusha
or
jg
push
rorl
jge
dec
outsl
loop
jge
push
pop
imul
inc
push
xor
rorb
xchg
xor
js
sarl
mov
mov
jp
nopl
flds
push
adc
aas
es
pop
xchg
sbb
add
mov
call
mov
inc
or
dec
out
adc
cli
jmp
test
add
cli
jmp
cld
mov
xchg
out
dec
dec
lods
cmp
rcrb
lret
sbb
cwtl
mov
cmpsb
cmp
ss
jl
out
test
das
ds
inc
cmp
adc
leave
loopne
mov
mov
mov
test
out
add
rcrl
and
xchg
sbb
ss
lcall
pop
sub
addr16
or
js
xlat
adcb
push
mov
and
adc
aam
mov
aaa
and
xchg
push
stc
std
push
xlat
pop
jmp
xchg
imul
or
popa
bound
push
mov
popa
int3
xchg
add
dec
push
inc
and
leave
sub
jno
adc
sub
inc
in
loope
js
in
hlt
adcb
jecxz
mov
aas
pop
push
mov
jl
mov
jmp
push
inc
aas
outsl
orb
pop
jmp
mov
aas
scas
ds
fcmove
mov
movsl
shll
mov
cmpsb
subb
push
dec
jecxz
fisubl
push
jbe
mov
mov
mov
add
mov
mov
mov
nop
rol
inc
lds
test
das
dec
sbb
lahf
out
xor
dec
jbe
jge
test
hlt
js
cmpsb
pushf
testb
mov
test
xchg
add
aaa
lret
pop
inc
cli
or
add
int
xchg
fidivs
push
out
js
xor
pop
mov
fiaddl
fmull
dec
loop
insl
or
fs
test
arpl
loopne
js
fwait
mov
xchg
mov
sarl
sbb
jo
andb
xchg
daa
sbb
jnp
jne
add
push
es
ja,pt
stc
leave
mulb
fcomp
shl
mov
ds
and
into
xor
xchg
lock
mov
orl
mov
test
mov
popf
fcoml
jg
repnz
push
daa
lock
push
insl
scas
jp
in
ljmp
mov
imul
sub
mov
sbb
fldenv
mov
hlt
ds
rcrb
inc
jp
out
loope
les
stc
jmp
lock
hlt
fsubl
xchg
mov
ja
scas
pop
jne
popa
xchg
adc
scas
cld
mov
xor
incl
push
aam
xor
xor
mov
inc
dec
push
fldl
cmp
xor
outsb
lods
sbb
mov
mov
movsl
lods
xorb
data16
lods
dec
push
or
inc
sub
addr16
cmp
test
xchg
mov
addr16
icebp
sahf
mov
mov
xchg
pop
mov
lock
rcll
sbb
hlt
dec
test
cmp
jmp
setbe
dec
sub
stos
arpl
jne
xor
pop
mov
cld
into
bound
push
jmp
int3
dec
rclb
cld
xchg
mov
jne
mov
dec
push
inc
repnz
mov
mov
pushf
cmp
dec
sub
cmp
inc
xchg
scas
mov
sub
movsl
xor
and
outsb
cmc
or
dec
jg
mov
or
jns,pt
mov
imul
jge
mov
dec
call
jg
cmp
mov
mov
insb
cli
sbb
out
xor
cmpl
das
and
imul
insb
insb
sar
pop
jle
jge
int
loope
mov
push
sbb
dec
sub
mov
and
sarb
pop
js
imul
mov
xchg
mov
popf
xor
adc
negl
adc
data16
adc
popa
cli
call
sbb
jmp
imul
xchg
push
xchg
cmpsl
and
adc
jge
xor
jae
inc
shlb
lret
in
inc
dec
inc
cvtpi2ps
pushf
or
pushf
jp
sbb
nop
jo
std
xchg
xor
add
hlt
mov
cld
sbb
sub
insl
mov
test
ret
out
cmpsb
popf
mov
xchg
scas
gs
mov
in
xor
aad
aaa
dec
and
int3
jecxz
sub
loop
mov
psubusw
jno
push
mov
sbb
xchg
xor
xchg
dec
inc
mov
xchg
adc
push
mov
lods
jne,pt
shl
aad
mov
jb
arpl
in
fwait
xor
push
imul
ret
jmp
repz
je
lea
out
sbb
leave
mov
add
in
mov
and
rcrl
call
js
mov
sub
ror
or
jmp
xchg
cmp
in
mov
add
cmp
cld
arpl
repz
xchg
xchg
or
sbb
or
xor
xor
icebp
inc
add
mov
ret
or
sti
outsb
inc
push
and
pop
rcll
sbb
out
push
iret
lds
sar
shll
mov
data16
add
scas
mov
xchg
inc
xor
mov
cmp
lock
xchg
cmc
pop
mov
arpl
movsl
xlat
inc
lret
mov
lea
cwtl
xor
pop
inc
jns
insl
mov
repz
ret
icebp
pop
lods
pop
xor
in
dec
sbb
pop
ljmp
les
add
pop
jp
xchg
or
jns
jle
sbb
test
ret
aaa
ds
push
sbb
sahf
lods
repnz
jp
push
xor
mov
fists
push
jnp
ljmp
fnsave
insl
fwait
pop
dec
xchg
dec
sbb
add
or
leave
jecxz
test
movsl
sbb
xchg
adc
mov
mov
mov
daa
in
mov
cld
xchg
mov
and
pushf
mov
jmp
ds
push
pop
cmp
icebp
xor
xchg
push
fs
ss
lret
cmp
gs
xor
fisttpl
lds
push
cmp
in
fwait
and
and
inc
das
inc
mov
xchg
out
outsl
push
ds
ret
xchg
jl
sbb
shl
mov
or
and
testl
cwtl
xor
adc
push
in
addr16
inc
inc
cmpsl
add
cmpl
call
out
sahf
and
in
jp
jge
mov
ds
jns
pop
mov
sbb
ljmp
dec
jb
test
mov
ljmp
and
adc
add
clc
ss
negl
int
pop
divb
lods
ds
repnz
call
lea
sbb
mov
shrb
fdivp
inc
movsb
in
call
pop
ss
das
or
iret
xchg
cmp
rcr
repnz
jb
jns
inc
lret
xchg
stos
lret
cs
and
sbb
je
mov
sub
clc
test
mov
xor
and
cmpsb
std
pushf
mov
lds
ret
fsubs
jne
mov
mov
and
dec
cld
mov
lock
mov
pop
or
sub
cwtl
cld
xchg
jnp
jb
icebp
xor
cmp
jns
inc
out
sahf
out
fcoml
stos
jle
cmp
adc
movsl
dec
ret
jnp
xor
or
lret
in
int
dec
dec
dec
lgs
loope
outsb
push
mov
sarl
mov
sbb
xlat
lods
push
ret
mov
xchg
mov
cmp
shlb
xchg
sbb
mov
adc
inc
insl
adc
in
ds
iret
and
pushf
inc
mov
out
push
lahf
call
inc
data16
fcoms
pop
push
jg
int
mov
dec
xor
lock
lret
dec
or
cmp
mov
cmp
lock
mov
xchg
outsl
sub
in
mov
andps
sahf
mov
adc
mov
or
sahf
inc
jge
sbbb
mov
mov
cmp
mov
sbb
mov
ds
pop
shl
add
cmp
push
xchg
inc
xorl
popa
cmp
cwtl
push
pop
inc
mov
out
mov
idivl
push
cmc
lcall
mov
mov
or
or
adc
push
cmpsl
int
mov
xchg
pop
aas
sbb
cwtl
xlat
mov
lods
xchg
xchg
in
dec
cmp
pop
movb
adc
adc
or
imull
in
data16
cwtl
in
adc
scas
test
scas
imul
test
outsb
xor
arpl
iret
stos
push
das
jo
mov
pop
rcr
add
sub
cmp
or
cmpsl
fisubrs
jle
pop
xchg
hlt
shrb
inc
mov
in
sub
push
lret
ss
hlt
sub
jle
lea
in
or
sbb
sahf
lret
mov
insb
sarb
xor
pop
pushf
outsb
test
mov
jae
and
pop
sub
test
out
je
pop
lahf
dec
movsl
int3
ds
test
xchg
mov
ljmp
jo
ja
sbb
imul
fisttpll
test
xor
aad
add
pushf
fs
add
xchg
inc
cmp
mov
push
mov
call
cs
sbb
sub
jbe
cmpsl
inc
push
out
pop
xor
scas
sub
dec
fxch
testb
outsl
mov
mov
cmp
imul
inc
clc
cmpsl
int3
test
add
xchg
pop
push
ror
xchg
jp
adc
cmpsb
push
pusha
ss
mov
push
sti
jo
xlat
xchg
dec
pop
repz
adc
and
pop
dec
mov
fdivrp
xchg
in
xor
ret
pop
mov
xchg
mov
mov
stc
insb
sbb
in
inc
or
add
clc
inc
int3
outsb
popl
test
mov
sbb
data16
icebp
mov
inc
adc
jmp
mov
imulb
ds
adc
dec
inc
fildll
out
xchg
test
sbb
xchg
add
or
clc
sbb
mov
xchg
popa
or
inc
sti
lods
test
addr16
jmp
test
aad
and
sub
mov
in
popl
mov
out
pop
cmp
in
xlat
adc
mov
jnp
outsb
xor
mov
and
sbb
push
add
mov
mov
cmp
stc
xor
xor
mov
xchg
or
hlt
add
rorb
movsb
xchg
ja
inc
jg
cmp
pop
pop
or
xchg
adc
aas
push
int
aaa
gs
cmp
cld
sbb
mov
clc
pusha
in
out
lret
lds
inc
pop
fmuls
packssdw
jnp
or
or
mov
sub
jns
adc
xor
and
xchg
xor
js
jl
jp
insl
dec
leave
push
mov
xchg
jns
dec
pushf
popf
mov
xor
adc
mov
aam
sbb
xor
and
mov
movsl
xchg
cltd
dec
shlb
push
popa
mov
stc
dec
jmp
xchg
aaa
popf
pop
pusha
xor
xchg
sub
mov
ja
add
jno
outsl
cmp
fsts
jle
enter
in
aas
mov
xor
mov
lret
cmp
adc
add
or
mov
aas
rol
add
test
aas
in
ret
in
rorb
add
pushf
jg
add
mov
mov
aas
in
or
or
add
cmp
inc
lods
push
mov
ss
shlb
add
ds
or
ret
mov
pop
lea
pop
adc
push
loope
lock
xchg
cmp
mov
ds
mov
pop
mov
clc
xor
sub
push
pop
nop
xchg
mov
xor
roll
out
test
mov
xchg
outsl
loope
jb
stc
mov
mov
push
dec
mov
mov
call
cmc
xor
sub
test
popa
xchg
xchg
ret
movsl
jmp
pop
pushf
push
mov
cmpsl
jo
rcll
orb
popf
mov
movsb
mov
pop
sub
sbb
pop
xchg
cmp
inc
test
pop
arpl
pusha
mov
fdivs
jecxz
xchg
jl
xchg
xchg
mov
fst
ds
xor
xor
push
push
les
fs
cmp
pop
stc
adc
mov
into
push
mov
in
out
cmc
push
xlat
and
call
mov
loopne
sub
mov
sub
fsubr
mov
pop
movsb
adc
out
mov
sub
and
les
imul
push
sbb
cmp
pop
xchg
std
add
outsl
test
cmpsl
imul
xchg
imul
jbe
inc
arpl
ret
jno
xchg
into
and
xchg
sbb
sbb
xor
adc
mov
les
ret
add
jle
mov
test
stc
ljmp
shr
inc
jne
outsl
mov
scas
nop
or
pop
popa
shll
inc
insl
scas
loop
mov
push
mov
movsb
jmp
ret
shlb
icebp
add
push
into
fcoml
inc
imul
jb
cltd
test
mov
cmp
cmp
jne
repnz
mov
and
hlt
cmp
dec
xchg
insb
mov
cltd
aam
sarl
push
pop
pop
sbb
adc
aaa
pop
pop
mov
cltd
mov
addb
pop
push
fildl
add
rcll
ja
adc
add
loope
dec
cmpsb
in
inc
fdivrl
and
shll
loopne
loopw
imul
loope
pop
scas
ds
cmp
popa
in
jne
xchg
cld
aaa
xchg
sub
fcoml
mov
cmp
sahf
jno
jae,pt
jae
inc
lcall
inc
mov
mov
push
rclb
dec
dec
xor
out
imul
and
dec
call
mov
mov
inc
sub
ds
fildl
decl
push
add
sub
shr
cmp
xchg
decl
sub
nop
adc
cmp
xor
add
mov
movsb
dec
add
xchg
fcompl
insb
jo
mov
add
xchg
xchg
lock
iret
std
sub
mov
mov
call
mov
test
inc
fstps
addl
scas
xchg
xchg
xor
sbb
pop
sar
jnp
or
cltd
ds
or
mov
pop
loopne
imul
into
or
daa
pushl
inc
jne
stc
sbb
cwtl
loop
test
and
mov
xor
ret
adc
outsb
out
ficoms
jne
inc
cmc
mov
mov
mov
rorb
aaa
test
ljmp
fcompl
movsl
or
fisttps
or
push
inc
cs
dec
cwtl
jbe
cld
jnp
subb
mov
push
int
xchg
into
cli
popf
ds
sub
inc
mov
push
mov
fwait
ds
push
pop
jl
dec
push
jg
daa
in
hlt
mov
mov
es
push
iret
lock
jge
inc
xchg
cmpl
mov
fdivrs
mov
lret
arpl
cwtl
arpl
pop
mov
xor
pop
movsl
or
or
or
mov
mov
hlt
sub
icebp
adc
mov
popf
mov
push
or
mov
jae
icebp
rclb
pushf
push
shlb
int
cmp
cwtl
cmp
mov
cmp
loopne
xchg
in
mov
imul
jne
iret
icebp
sbb
stos
mov
das
and
mov
pop
mov
xor
cmc
xchg
jmp
mov
test
mov
les
into
pop
cmp
aas
out
cmpsl
cli
or
push
into
pop
in
push
push
sub
loope
in
sbb
jp
mov
push
add
xchg
mov
outsb
and
ret
cmp
jno
ret
cwtl
sbb
or
pop
jae
sbb
adc
adc
fldcw
jmp
mov
fnstsw
jmp
lcall
test
lods
cmpl
sbb
mov
jb
inc
mov
mov
les
xchg
inc
lea
mov
dec
insb
sbb
mov
movsl
mov
inc
loope
mov
lret
xchg
adc
mov
add
fmuls
ret
sti
add
shlb
xchg
fldl
mov
push
sub
dec
or
and
out
adc
outsb
dec
loope
cwtl
mov
jg
int
stos
cmp
cwtl
cmp
daa
out
push
cld
mov
mov
or
lds
xor
cld
cmp
orl
xor
inc
sahf
dec
jnp
dec
sbb
xchg
icebp
cmp
idivb
fisttps
pushf
gs
imul
xor
adc
fimuls
xchg
mov
push
xchg
in
mov
xor
cmp
mov
daa
cwtl
fdivr
jo
dec
out
push
rep
loopne
sub
insl
xchg
or
jb
bnd
dec
icebp
enter
and
aad
add
cwtl
push
jns
cmp
testb
jns
xchg
je,pt
incb
out
xchg
pop
mov
and
or
cmp
cmpsl
sbb
in
jmp
xchg
inc
inc
lods
push
cli
clc
fcmove
xor
or
xchg
ljmp
sub
sub
fwait
mov
jle
jp
dec
scas
orl
push
and
mov
dec
push
fdivr
es
mov
mov
imul
and
mov
out
lea
sarb
addr16
packsswb
scas
cwtl
cmpl
adc
add
jge
imul
pop
sub
and
inc
sti
call
jecxz
sub
and
push
push
or
jl
int
pop
dec
push
cs
ja
jecxz
sbb
push
mov
insl
and
incb
dec
jp
inc
mov
in
cmpl
mov
leave
idiv
inc
lcall
out
sub
movaps
push
jg
lea
or
jne
rorb
data16
jg
adc
xorb
gs
mov
mov
mov
xchg
loope
mov
notl
pop
mov
mov
inc
adc
xchg
xor
xchg
dec
mov
and
push
idivb
sub
cli
push
xor
mov
aam
jg
inc
push
add
dec
rclb
sub
jle
xor
adc
mov
pusha
xchg
je
or
inc
sbb
mov
rorl
xchg
bound
imul
hlt
push
dec
popf
inc
lcall
pop
xchg
fnstcw
out
adc
shrl
ja
gs
dec
pushl
jbe
adc
pop
pop
or
push
xchg
cltd
sbbb
iret
mov
das
push
movsl
pop
popa
movsl
in
add
pusha
ud2
nop
mov
jp
cltd
cmp
or
adc
clc
notb
mov
push
mov
cltd
out
or
xchg
push
or
loopne
push
hlt
out
call
xor
mov
out
and
aaa
test
or
iret
jbe
imul
ljmp
push
lret
movsb
cwtl
pop
dec
pop
adc
jl
movsb
cmp
and
sbb
sbb
cli
cld
cmp
sub
jno
push
lret
and
jae
push
stos
lret
rorb
xlat
cmp
sbb
js
push
mov
mov
adc
inc
dec
and
dec
mov
cltd
mov
cmp
mov
cmp
fwait
xchg
scas
push
aaa
adc
std
lea
in
ficomps
mov
and
pop
fisubl
jo
int
js,pt
stc
test
or
pop
out
mov
sahf
and
dec
push
xorb
pop
xchg
test
jbe
lds
mulb
popf
jns
dec
cmp
xchg
push
push
std
insl
scas
test
push
out
xchg
iret
mov
mov
lods
popa
or
push
ss
dec
sahf
and
leave
inc
aas
dec
cmpsb
gs
add
xor
and
adc
cmp
cltd
mov
mov
imul
dec
shrb
jne
iret
push
mov
movsb
test
adc
push
jg
test
test
lret
jge
push
or
or
pop
mov
enter
sbb
loopne
aam
push
xorb
lods
notl
pop
movsb
mov
out
cmp
inc
rcrb
push
dec
in
push
inc
cmp
jae
jns
sbb
insb
jae
insl
pusha
test
jmp
inc
sarb
push
mov
icebp
pop
mov
cltd
push
sbb
int3
mov
stos
cli
loop
xor
test
rorl
inc
aaa
movsl
rorb
out
cmovbe
mov
stc
or
mov
call
ds
jo
idivl
cli
mov
stc
push
jge
sub
ds
push
loop
jns
nop
xor
in
mov
mov
mov
jno
jecxz,pt
xor
xor
cmp
lret
jnp
je
add
orl
lcall
jo
pop
sarl
lea
jns
in
ja
add
out
mov
sub
cmp
cmc
ret
subl
xchg
sbb
push
pop
scas
idivb
repz
push
mov
mov
int3
out
mov
ret
inc
aam
insb
xchg
inc
adc
in
jnp
dec
and
ret
mov
dec
out
xchg
cld
mov
ds
cmp
out
es
sub
gs
sub
dec
cmp
hlt
mov
outsl
or
inc
fadds
out
mov
adc
xchg
jp
mov
jmp
aas
xor
lcall
xor
mov
dec
je
xor
lcall
cmp
es
faddl
ds
dec
pusha
pop
repz
add
mov
inc
cmp
jmp
inc
jae
je
inc
cmpl
jecxz
out
sub
mov
int3
fmull
lret
fwait
dec
dec
jle
imul
mov
call
mov
in
jl
add
dec
out
or
inc
jecxz
jmp
sub
pop
cltd
dec
filds
sarl
aam
push
mov
sub
add
add
fsubl
test
unpcklps
and
or
mov
hlt
push
addr16
fwait
or
xor
mov
push
push
pop
ja
or
cmp
xor
pushf
cmp
or
lcall
lret
ja
pop
roll
pop
enter
dec
jbe
outsl
cmp
mov
int
pop
push
fisttps
ds
push
adc
loopne
cwtl
mov
cmp
xor
pop
push
inc
aam
mov
cmp
xor
sub
pop
push
paddb
mov
mov
test
fsts
or
jge
mov
dec
mov
es
rol
in
int3
test
jmp
aam
xor
cmpsb
mov
jns
stos
and
mov
js
cmp
test
pop
outsl
adc
lcall
mov
test
mov
sub
out
ds
mov
fadd
daa
xor
imul
out
mov
pop
sbb
mov
in
xchg
sub
fcmovb
dec
or
add
sbb
and
jge
cltd
ds
and
cmc
or
popf
ret
lret
pop
inc
mov
loope
xchg
sbb
or
mov
mov
and
adc
lcall
ds
mov
xchg
mov
ds
mov
mov
leave
xchg
out
adc
fstl
jb
sbb
lods
pop
fdiv
mov
les
jbe
and
mov
mov
data16
into
push
int3
or
jb
lret
stc
or
ds
scas
pop
rclb
dec
sbb
shlb
push
daa
shlb
and
cltd
ficoms
ds
jl
lcall
and
mov
sahf
xchg
lods
cmp
add
stc
fmuls
xchg
add
es
data16
sbb
fmulp
call
mov
les
jo
mov
in
pop
int3
popf
je
dec
in
fsubrl
jl
std
xor
cmp
mov
ss
inc
pop
insb
cmc
cwtl
xchg
mov
adc
mov
sbb
aas
mov
clc
xchg
popf
ret
sbb
mov
add
lahf
sarb
jle,pt
sub
gs
add
pop
dec
jns
js
cmp
fdivs
fwait
jmp
inc
aam
hlt
xor
mov
add
sub
incl
sub
mov
imull
ds
gs
cli
mov
or
das
adc
andl
icebp
stc
sub
sbb
xor
or
mov
ds
xor
jl
and
add
mov
jg
insl
imul
pop
xchg
add
mov
or
pop
fwait
mov
pop
xchg
jno
jno
xchg
popa
and
rorl
xchg
jle
dec
push
push
and
sbb
xchg
sub
lcall
lods
mov
adc
jge
push
jge
inc
xchg
cs
lret
or
adc
decb
fs
js
mov
push
mov
repnz
pop
push
or
jb
jbe
aad
jmp
sub
sahf
shl
enter
imul
imul
clc
popf
xor
insb
leave
xor
dec
dec
dec
pop
xchg
push
dec
inc
xor
mov
mov
sub
rorl
sbb
fmuls
cmpsb
jecxz
mov
jns
push
mov
and
mov
adc
xchg
pop
movb
movsb
fwait
mov
std
adc
in
xor
and
inc
inc
xor
dec
outsl
cs
xor
in
std
sub
ret
lea
mov
dec
andl
fwait
addr16
sbbb
ljmp
mov
cmp
pusha
out
imul
into
fwait
bnd
pmovmskb
and
cli
or
add
lret
sarl
sbb
pop
jns
ds
leave
dec
xor
adc
test
ss
icebp
dec
lret
shll
pop
mov
mov
insb
pop
cli
addr16
sti
jo
scas
in
xor
lock
mov
insl
mov
fmull
fwait
add
push
xor
nop
out
sbb
pop
sbb
or
fwait
cmp
mov
push
pop
aad
or
sub
sbb
outsl
stos
xchg
shrl
lret
ret
jmp
ficompl
ret
and
pop
inc
flds
jmp
pop
push
mov
roll
and
mull
jb
jp
sahf
pop
ror
add
fwait
inc
pusha
pusha
fwait
neg
stos
test
cmp
push
fld
out
fdivrl
mov
in
mov
hlt
dec
negl
adcb
insb
xchg
jp
pop
fwait
ss
cltd
jl
ret
cmp
lea
and
in
fwait
add
into
pop
loope
jle
mov
or
and
adc
call
rol
adc
fwait
pop
enter
fwait
mov
mov
mov
sti
xchg
and
add
rolb
mov
jns,pt
fisttpl
push
sub
lods
or
test
adc
fdivl
jne
mov
imul
lea
push
inc
xor
pop
add
jmp
mov
gs
cltd
fists
fs
push
clc
shrl
ds
dec
jb
mov
pushf
loope
dec
or
hlt
das
das
in
adc
or
fwait
fwait
jecxz
cwtl
jle
fidivl
xor
xor
inc
in
and
push
mov
insl
sbb
in
lods
popa
addr16
stos
add
sahf
fwait
and
ret
mov
out
adc
test
popa
or
shll
adc
rolb
fwait
mov
cmovae
fdivrl
arpl
test
or
pop
lods
or
fwait
xchg
rclb
arpl
ss
mov
mov
aas
insb
das
dec
xor
imul
pop
pushf
fldt
mov
sbb
ljmp
xchg
sbb
cli
popf
push
push
jle
pop
shlb
mov
mov
hlt
stc
sahf
and
clc
sahf
cmc
cmp
negb
pop
cwtl
int3
ds
cmc
sub
xor
pushf
in
jnp
aaa
or
pusha
mov
push
hlt
sbb
cmp
imul
scas
fcoml
inc
test
andb
fwait
loope
mov
sbb
mov
cmp
dec
sbb
orb
dec
mov
add
cmc
jmp
mov
push
sbb
cmp
add
cmp
dec
mov
fildl
in
push
mov
pushf
rorl
jbe
adc
mov
push
movsb
stos
xor
or
mov
pushf
and
adc
scas
mov
mov
sbbl
ds
jno
aaa
scas
popa
js
arpl
jns
mov
inc
mov
addr16
mov
or
or
add
sahf
xchg
and
mov
inc
enter
bound
mov
mov
mov
mov
ljmp
jle
xorb
in
das
daa
sti
call
adc
cltd
jecxz
mov
inc
roll
stos
cli
jl,pt
jno
loope
incl
dec
xchg
cltd
xchg
ret
test
pushf
stos
jae
int
fisttps
mov
push
ss
cmp
pushf
in
adc
cwtl
sahf
push
in
call
and
push
add
jmp
test
jnp
pop
mov
mov
scas
outsb
sbbl
ds
xor
mov
lret
mov
or
pop
push
data16
in
sub
xchg
test
dec
jo
mov
and
cld
xor
mov
into
lods
xor
lods
mov
dec
push
cli
mov
shrl
ficomps
jp
dec
addr16
xlat
add
jb
insb
pop
scas
lods
adc
cmpsb
mov
cmp
cmp
popa
pop
pushf
movsb
in
push
mov
subl
adcb
push
and
jbe
pusha
add
arpl
mov
fisttps
in
sub
in
xchg
pusha
push
in
mov
lret
and
jmp
xlat
sub
cmc
dec
cs
test
xchg
or
movsl
mov
mov
jo
out
ffree
sub
ds
jnp
or
push
popa
mov
inc
pushf
ljmp
mov
push
dec
in
or
mov
push
mov
jno
lret
xor
js
mov
pop
sub
xchg
push
shll
stos
fistpl
loope
ja,pt
jnp
push
cmc
xchg
xlat
in
xchg
xchg
notl
adc
jecxz
sbb
cmp
mov
rorl
lods
pushf
repz
xchg
ja
or
and
jg
add
dec
mov
and
add
and
daa
dec
push
adc
test
testb
adc
sub
mov
cmpsl
mov
leave
xor
xor
cmc
lret
jge
mov
and
mov
dec
dec
int3
lcall
mov
clc
sbb
mov
pushf
jb
inc
insl
add
sbb
int
popf
jmp
xchg
ss
and
or
xor
mov
popf
mov
dec
add
mov
jno
testb
pop
inc
sahf
scas
mov
mov
je
xorl
add
test
inc
mov
data16
sub
pop
popf
lahf
repz
pop
and
cltd
mov
sbb
xchg
nop
sub
popf
cwtl
orb
lahf
xlat
adc
cltd
fisttpl
scas
aas
mov
or
jmp
cmpsl
mov
xor
xchg
mov
xlat
ss
aad
mov
fst
es
iret
mov
sbb
or
mov
push
rorl
scas
mov
jnp,pt
js
adc
bound
adc
pushf
xchg
and
cmp
cmp
jecxz
sub
mov
adc
mov
lea
and
lcall
hlt
xor
insl
aas
sub
ds
scas
push
stc
into
pop
dec
push
push
in
mov
nop
jnp,pt
adc
dec
pop
fcmove
jge
xchg
xchg
mov
andl
push
cltd
mov
imul
or
xlat
loope
mov
test
pop
mov
xchg
sbb
dec
mov
mov
pop
jnp
in
jno
les
dec
imul
add
stos
outsb
out
ss
orl
lods
mov
movsb
and
mov
jmp
outsb
xchg
int
jmp
mov
repnz
in
gs
fwait
jns
ret
jb
mov
in
xchg
push
pop
ljmp
mov
movsb
pop
add
lret
out
dec
dec
aam
inc
xchg
jmp
cld
xor
inc
inc
popf
daa
cmpsb
sub
xor
ljmp
mov
adc
fists
add
or
sbb
lcall
dec
jo
jb
adc
pop
lock
mov
in
push
xchg
lcall
xor
in
inc
pop
iret
in
ljmp
pop
jecxz
cld
pop
loopne
call
push
jmp
das
lcall
ret
rorl
fs
jl
maxps
push
movsb
andb
mov
xchg
shrb
das
xchg
mov
and
rclb
xchg
test
and
sahf
popf
sub
mov
hlt
pop
insb
push
fdivrs
adc
int
pusha
insb
int
fs
push
dec
bound
inc
lret
mov
sub
imul
push
push
push
out
dec
push
ja
and
repnz
and
test
inc
sub
data16
mov
ss
xchg
pusha
sbb
sub
das
xor
iret
sub
xchg
pop
xchg
xor
mov
sbb
test
push
je
decl
add
jo
adc
push
ret
adc
jge
pop
mov
orl
push
mov
imul
sbb
icebp
dec
sub
jg
jl
jl
pop
int
xor
cltd
jnp
aad
in
mov
mov
imul
lds
leave
mov
sbb
mov
cmp
lahf
mov
and
fnstsw
add
scas
xchg
push
insl
cltd
cmp
sahf
cmpl
jmp
sarb
repnz
add
into
adc
testl
fstpl
pop
and
jns
mov
adc
jmp
pop
ds
leave
xchg
pop
dec
pop
adc
in
loopne
incb
mov
les
divb
jmp
enter
mov
adc
add
pmullw
repnz
mov
clc
adc
sbbb
adc
mov
lock
dec
out
cld
push
jo
cmpb
xchg
into
pop
push
hlt
out
jge
inc
ljmp
aam
dec
popa
in
sbb
and
push
enter
hlt
mov
rol
jg
enter
mov
loopne
pop
push
jb
or
xor
adc
iret
adc
mov
mov
add
out
cmp
mov
push
add
mov
aaa
mov
sub
cwtl
ja
cmp
nop
inc
das
xchg
cwtl
or
xchg
bound
pop
arpl
aad
push
movsl
pop
stos
fimuls
shl
sahf
fs
scas
add
notl
dec
and
scas
dec
fs
push
insl
out
outsl
data16
mov
cmp
das
inc
lcall
idivl
sahf
fisubs
or
cmp
pop
pop
outsb
rep
cmp
bound
js
dec
jbe
cmpsl
lret
fldl
ja
aad
and
out
cmpsb
cmp
or
daa
lock
das
lahf
les
sub
rcrl
xchg
imul
sub
xchg
ds
add
mov
rclb
mov
in
push
xlat
mov
add
push
imul
jp
mov
mov
jae
mov
jo
adc
popa
fsubrp
jo
mov
pop
dec
mov
sahf
fsubr
and
movsb
loopne
inc
mov
mov
mov
inc
ds
pop
add
push
loop
pop
inc
sahf
mov
mov
nop
je
mov
push
or
fsubl
mov
mov
and
push
lahf
in
pushf
inc
ss
mov
cmp
xchg
rorb
cmp
jo
push
outsb
sbb
jmp
loope
frstpm(287
add
cmp
andl
xlat
out
sahf
cmp
enter
shll
inc
xlat
mov
ljmp
xor
mov
xchg
and
cmp
push
stc
cmp
lahf
adc
push
pop
pop
cwtl
stos
push
sub
push
movsb
pop
cmp
sahf
xchg
cmpsb
flds
stos
loopne
mov
xor
lahf
xor
add
adc
pop
mov
xor
je
dec
bnd
les
leave
mov
mov
pop
push
mov
loop
dec
je
js
fidivrl
sbb
ret
mov
ljmp
jmp
push
fwait
hlt
std
cltd
inc
sbb
sahf
sbb
dec
lret
ss
stos
fwait
or
cmpsl
movsl
add
cmc
in
push
call
mov
sub
or
cwtl
scas
les
mov
adc
lcall
xchg
roll
xorl
nop
adc
lahf
stc
subl
repnz
pop
pop
push
stc
jp
mov
push
in
loopne
add
jns
call
ja
fcmovbe
push
mov
fcompl
les
rcr
dec
cmpsb
mov
sub
ds
repz
pop
xor
sub
das
popf
mov
sahf
and
pop
push
push
ljmp
mov
outsl
ljmp
cli
push
sub
push
jno
jg
or
jl
add
ja
mov
fs
add
imul
lds
movsb
inc
and
mov
ficompl
stos
stc
and
cs
cwtl
dec
cmp
out
push
pop
testb
or
enter
out
mov
sub
and
mov
movsb
adc
mov
and
sbb
lcall
mov
xor
jno
pop
add
cli
cltd
ds
sbb
repnz
mulb
push
mov
dec
xlat
lahf
pop
imul
mov
sahf
push
mov
mov
xchg
inc
das
pusha
push
fwait
sbb
adc
sbb
push
scas
xchg
mov
and
out
out
cmp
out
arpl
cli
addr16
pop
cmp
mov
jecxz
mov
mov
lret
fldl
mov
xor
adc
cmpsl
adc
or
xchg
into
or
jo
lds
push
xchg
mov
rol
outsl
js
mov
rcrb
inc
xchg
jmp
pop
in
sub
mov
rolb
int
jle
mov
movsl
xor
fwait
movups
pop
fsubr
mov
cmp
movsb
subl
push
out
lcall
fildl
pop
imul
nopl
pop
and
inc
pop
add
xchg
push
inc
xchg
or
adc
movsb
xor
xor
adc
mov
pop
xchg
sbbb
popf
ds
stos
lock
xchg
cmpsl
mov
arpl
xchg
test
push
cmp
int
dec
in
pop
adc
dec
daa
out
out
daa
pop
lret
pop
iret
fadds
stc
scas
push
out
shrl
mov
xchg
push
dec
fisubl
mov
sahf
xchg
add
out
out
mov
loopne
test
xchg
aas
cmp
out
sahf
pop
icebp
sar
test
push
fldcw
adc
lret
inc
fisubrl
lret
std
js
push
mov
pop
ffree
bound
lods
cmpsl
out
push
fdiv
call
xchg
int3
mov
dec
scas
fisttpl
inc
push
scas
adc
xchg
or
cmp
negb
xor
and
or
push
iret
daa
sbb
test
sar
xor
stc
add
mov
mov
test
sbb
lret
ret
jle
sbb
adc
addr16
cmp
popf
mov
jle
outsl
mov
or
cmp
xchg
adc
out
pop
ret
jle
mov
sbb
xor
xor
rcrb
outsb
jl
push
jp
in
add
lret
lock
into
daa
jl
mov
pop
pop
mov
das
into
adc
ss
push
dec
sbb
fildl
out
ret
add
test
mov
mov
scas
add
scas
lods
and
pop
jmp
iret
or
adc
pusha
jmp
fimull
jbe
push
clc
adc
scas
iret
into
xor
jbe
push
xor
dec
scas
lods
fwait
in
pop
not
out
or
jl
stc
inc
xor
mov
in
fdivl
in
mov
xchg
sti
sbb
jno
call
xor
mov
in
scas
imul
push
xchg
sub
mov
dec
xchg
pushf
jbe
or
shll
jns
xchg
adc
popa
mov
push
pop
dec
adc
mov
scas
clc
mov
mov
dec
mov
lea
xchg
fcompl
xchg
cs
mov
hlt
ret
jbe
mov
xchg
push
and
mov
stos
iret
sub
scas
clc
mov
sbb
rcrl
fldl
rcrb
pop
ret
fsubp
and
in
test
push
daa
bound
mov
mov
add
mov
mov
mov
and
mov
aaa
cwtl
stos
and
scas
or
mov
push
mulb
iret
sbb
lahf
cmp
jge
fwait
jecxz
jp
repz
das
ljmp
stos
or
mov
xchg
inc
mov
testb
popl
addb
int
loope
push
addl
inc
or
fwait
das
and
loope
ret
call
stc
enter
lods
xchg
mov
jno
cmc
xlat
dec
pop
fildl
aam
rcrb
shlb
aas
inc
mov
addr16
aas
inc
xorb
pop
hlt
aaa
push
scas
add
imul
lret
mov
ror
cmp
sbb
cmp
xchg
add
push
lcall
adc
xor
and
fidivs
imul
mov
clc
mov
sub
inc
or
repnz
mov
ret
pop
je
inc
loop
call
pop
cmp
cmpsl
mov
movsl
mov
sti
sub
loope
imul
gs
inc
mov
push
push
and
push
mov
lahf
sbb
pop
mov
push
outsl
addb
mov
or
sub
xorb
cwtl
and
mov
or
dec
mov
push
mov
xor
sbb
cli
add
leave
out
les
sti
sbbb
js
sub
loopne
xor
movaps
ss
mov
fcoml
mov
es
mov
or
inc
jnp
mov
incb
in
add
jle
mov
pop
jnp
iret
test
mov
out
fldenv
jecxz
jp
arpl
push
out
mov
lods
or
fwait
jmp
enter
pop
fidivrl
enter
xor
inc
jno
loope
push
movsb
sti
mov
bound
out
jp
mov
dec
daa
push
adc
push
dec
repz
insb
xor
mov
xor
jmpw
xchg
test
stos
outsb
pop
insb
je
pushf
loope
xor
data16
mov
aas
testb
inc
jne
cmp
jp
daa
es
loope
sub
fldenv
rcll
into
outsb
leave
imul
mov
add
pop
incl
inc
mov
xchg
enter
pop
mov
mov
je
dec
inc
adc
jecxz
mov
xchg
dec
lcall
or
nop
xchg
mov
adc
jb
enter
xchg
xchg
cli
idivl
inc
xlat
js
inc
sbb
imul
rclb
add
loopne
mov
add
mov
dec
xchg
sub
jmp
gs
adc
mov
push
mov
int3
jns
les
jae
dec
cmpsb
xor
call
ss
mov
xchg
add
dec
test
sbb
outsl
inc
and
and
insb
and
aas
jbe
in
cltd
xchg
sbb
out
pop
iret
sub
jae
shlb
fnstenv
sbb
movsb
sbb
add
fwait
jb
imul
popa
xor
pushf
xchg
jo
cs
scas
in
xchg
das
psllw
sbb
outsl
pop
icebp
push
outsl
and
pop
outsl
aas
icebp
dec
outsl
dec
icebp
xor
icebp
and
push
icebp
sub
icebp
adc
icebp
movq
clc
popf
subl
arpl
int
push
mov
rcll
dec
push
fcmovne
push
push
xlat
int
push
jecxz
insl
push
dec
jle
or
push
sbb
popf
push
pop
int
push
jo
add
dec
mov
lret
dec
ret
inc
ret
insl
ret
jl
or
lods
mov
sub
xchg
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
dec
scas
arpl
test
sbb
mov
mov
jns
outsb
mov
outsl
push
sbb
stc
dec
outsb
int3
gs
idivl
std
out
inc
adc
pop
mov
dec
mov
or
scas
mov
xor
outsb
aad
pop
out
or
or
popf
cmc
adc
fsub
aad
jg
mov
adc
or
xchg
dec
dec
das
or
xlat
push
mov
lret
bound
ret
mov
mov
je
fisttpll
mov
xor
sbb
out
pop
fbld
cmp
dec
lahf
lret
mull
cmc
out
inc
dec
xlat
mov
out
pop
xrelease
ret
and
aaa
or
loop
int
and
lock
pop
movb
push
mov
insl
fidivl
xchg
insb
sbb
push
test
sub
xchg
aam
mov
mov
cmpl
call
jg
fnstenv
xchg
jmp
xor
sbb
ljmp
das
std
push
add
inc
cwtl
mov
adc
ror
push
cmp
mov
inc
mov
cmp
aaa
push
sarl
inc
adc
cs
fstp
push
jg
mov
push
fldcw
inc
mov
xchg
xor
mov
daa
in
sub
les
push
stos
mov
js
mov
js
jnp
jl
clc
outsl
push
xchg
aam
mov
adc
out
decl
rcrl
xchg
arpl
lret
sbb
cltd
lcall
inc
outsl
push
pusha
inc
sub
dec
incb
lcall
aam
loopne
icebp
sahf
pop
add
sahf
add
sahf
aaa
add
pop
add
arpl
test
or
sar
enter
push
or
rsqrtps
int
push
xor
pop
push
inc
int
push
insl
int
push
jae
arpl
or
inc
movsb
stos
xor
out
rol
pop
ret
loop
int
icebp
ret
pop
ret
push
ret
cmp
ret
pop
ret
push
and
mov
stc
mov
daa
sbb
sbb
cmp
mov
mov
test
test
es
out
in
fnstcw
inc
or
flds
inc
push
fsts
orb
push
int
in
dec
iret
fcomps
mov
pop
adc
addr16
and
jp
pop
push
pop
popa
cmp
popf
or
push
xor
mov
outsb
jge
lret
xchg
subb
fucomi
lods
inc
in
mov
add
push
push
inc
ret
push
ret
jl
rcrb
mov
jmp
in
jne
cmc
mov
out
mov
out
mov
in
movsl
stos
fnstcw
and
add
jp
sub
test
lret
jns
ljmp
inc
push
fstps
inc
inc
mov
out
popf
js
fisttps
inc
push
loopne
stc
jle
sbb
push
inc
inc
adc
inc
mov
scas
add
mov
aad
mov
int3
add
and
bound
loope
xchg
jns
sarb
and
aad
cmc
mov
and
mov
mov
push
out
ja
das
ret
cwtl
pop
iret
mov
mov
push
and
mov
fcoml
add
scas
add
cmpsl
sub
cmp
xor
pop
dec
xchg
inc
movsb
add
int3
pop
fldz
inc
insb
xor
push
popf
sbb
fstpt
outsb
pop
dec
repz
loop
adc
dec
pop
xor
cmp
bound
out
jnp
loop
jae
cs
fadds
cltd
add
mov
popf
push
xor
lcall
lcall
cmp
insb
hlt
jns
faddp
mov
or
movsl
push
pop
lret
push
ret
mov
sub
pop
mov
xor
sarl
movsl
inc
inc
f2xm1
inc
push
shr
scas
add
jg
inc
and
gs
scas
push
xor
sbb
jmp
pop
push
or
in
jp
mov
es
dec
fists
scas
and
adc
mov
push
adc
scas
mov
add
in
pop
in
dec
cwtl
xchg
pusha
inc
int3
lcall
ret
into
std
cmp
inc
test
mov
adc
movsb
das
xor
dec
outsl
shlb
pop
jg
test
xchg
popf
mov
popa
lahf
in
dec
inc
or
jbe
scas
int
push
cmpsl
int
push
mov
int3
sbb
jbe
out
mov
ret
jmp
cmp
ret
sti
ret
adc
or
out
add
out
pop
sbb
lock
adc
stc
pop
sub
fdivrl
inc
xor
out
dec
mov
mov
cmp
std
popf
dec
js
pushf
push
jns
sub
imul
cmpsb
sbb
testl
inc
pop
inc
add
iret
into
ds
mov
xlat
sbb
addl
xlat
outsl
lock
cmp
xlat
pop
mov
movsb
mov
mov
test
inc
mov
popf
jnp
and
cmp
sahf
scas
sahf
loopne
pop
cmp
sub
ret
pop
cmp
xlat
bound
cmp
or
pop
cmp
dec
cmp
cli
or
rorl
test
pop
cmp
fwait
or
cs
xchg
icebp
pop
add
pop
mov
or
or
test
bt
mov
cmp
cmp
ret
pop
cmp
jno
outsl
mov
sarl
rorl
mov
pop
or
cmc
cmp
rcl
lock
fidivrs
or
pop
cmp
lds
jo
pop
dec
sbb
out
cmp
mov
repnz
or
sub
loopne
pop
cmp
inc
or
test
dec
iret
jno
outsl
rcrb
in
mov
cmp
lods
inc
mov
aam
jnp
outsl
jl
or
scas
sahf
orl
addr16
push
jp
fimull
idivl
pop
cmp
fistps
loopne
cmp
loope
or
imul
outsl
push
cmp
insl
or
shrl
aas
shlb
cmp
outsl
push
cmp
jmp
insb
cmp
adc
mov
push
push
cmp
inc
pop
les
insl
test
addr16
sbb
dec
jnp
and
cmp
or
subb
fs
push
addr16
pop
inc
pop
int
insb
popa
mov
dec
imul
cs
jge
xor
nop
sub
je
mov
stc
mov
sub
faddl
inc
pop
sub
or
scas
mov
icebp
les
test
pop
xchg
dec
pop
push
mov
mov
or
jnp
sbb
xchg
push
pop
push
mov
mov
or
pop
mov
cs
jnp
cwtl
fildll
push
pop
push
movsl
movsb
mov
or
pop
mov
push
jnp
xchg
fistps
pop
pop
push
scas
movsb
mov
or
pop
mov
jle
jnp
lods
fists
arpl
notl
mov
or
jnp
in
mov
jle
imul
dec
add
inc
jno
mov
or
mov
or
mov
cmp
lods
or
pop
or
shl
sbb
andl
pop
cmp
add
cmp
add
inc
push
mov
xor
pop
mov
push
mov
pop
and
data16
dec
pop
sarl
lret
das
push
or
cmp
jb
int
push
pop
lret
cmp
cmp
pop
mov
mov
pop
ret
pop
jg
cmpsl
pop
or
pop
push
arpl
xchg
clc
add
outsl
lock
or
push
pop
mov
pop
jp
faddp
cmp
adc
add
sub
iret
push
jge
or
rorl
mov
mov
mov
aaa
jp
pop
jge
or
fistpll
or
pop
push
int
mov
pop
cltd
cmp
andl
mov
push
sbb
dec
add
sbb
cmp
cmp
or
sbbl
cmp
ljmp
or
cmp
jno
ss
mov
adc
aam
icebp
out
sbb
test
pop
cmp
xor
pop
cmp
jne
mov
jnp
cmp
jge
dec
sbb
pop
xor
or
or
js
testl
pop
lds
cvtdq2ps
sub
leave
pop
mov
or
or
idivl
movsb
mov
xor
outsl
lock
adc
mov
rcll
or
mov
pop
cmp
je
sbb
icebp
sub
add
loop
pop
mov
rorl
sub
test
pop
cmp
xor
pop
cmp
mov
sahf
cmp
es
outsl
stos
pop
jae
inc
cltd
cmp
mov
lret
and
ret
dec
jle
lods
xor
pop
cmp
or
ja
insb
ds
fdivrp
or
movsb
mov
dec
stc
fistps
or
pop
ds
pop
lds
xor
ret
test
dec
mov
out
iret
xchg
lcall
mov
gs
or
or
cmp
cmp
orb
sbb
pop
or
mov
push
sbb
mov
pop
or
stc
push
or
pop
or
out
iret
xchg
pop
lds
pop
or
lret
mov
dec
sub
inc
sub
mov
sahf
mov
pop
dec
out
shrb
cmp
insb
cli
loopne
pop
cmp
test
mov
popf
in
sub
xchg
pop
cmp
into
popf
dec
ljmp
mov
or
pop
adc
xchg
dec
rorb
pop
cmp
int3
icebp
jmp
xchg
adc
rorl
xor
pusha
cmp
pop
dec
add
aas
jnp
faddp
ja
pop
jnp
jnp
mov
fstps
mov
and
aas
and
sub
aaa
insb
repz
sbb
dec
repz
mov
stc
and
jns
imul
