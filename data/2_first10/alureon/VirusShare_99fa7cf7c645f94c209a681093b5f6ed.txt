push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
cmp
subl
add
cmp
jb
pop
pop
pop
leave
ret
push
lea
add
cmp
sub
push
push
xor
push
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
call
mov
push
lea
push
push
pushl
mov
call
cmp
je
in
push
push
mov
call
cmp
je
cmpl
jne
lea
push
call
pushl
mov
pushl
mov
mov
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
subl
sub
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
push
mov
mov
call
push
call
lea
push
push
push
push
call
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
test
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
cmpl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jne
lea
push
mov
call
mov
andl
mov
sub
cmpl
jbe
lea
mov
mov
mov
addl
addl
add
add
incl
mov
cmp
jb
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
mov
addl
addl
push
pop
rep
mov
add
sub
test
add
mov
mov
movzwl
push
add
pop
cmp
jb
pushl
mov
pushl
pushl
pushl
call
pop
pop
pop
add
add
leave
ret
push
mov
sub
add
add
push
xor
push
mov
call
lea
push
push
mov
call
push
mov
call
test
jne
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
cmpl
jae
movzwl
test
jne
testl
jne
push
pushl
pushl
pushl
call
jmp
push
push
push
push
call
push
mov
call
jmp
push
push
mov
mov
mov
add
sub
mov
lods
xor
stos
sub
sub
add
sub
add
ror
lea
test
jne
push
push
push
mov
call
pop
pop
test
je
idivb
push
lea
push
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
xor
pop
leave
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
push
add
pop
dec
jne
pop
mov
ret
xor
ret
push
push
pushf
rdtsc
pop
imul
add
mov
and
ror
xor
pop
pop
ret
push
push
push
push
mov
call
mov
jmp
push
mov
add
add
sub
push
mov
mov
add
mov
test
jne
push
add
pop
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
test
sub
mov
add
mov
push
xor
mov
cmp
je
add
add
cmp
sub
cmp
je
mov
push
cmpl
jne
mov
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
sub
mov
test
jne
jmp
lea
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
addl
addl
mov
cmpl
jne
pop
pop
leave
ret
mov
xor
cmp
je
lea
test
inc
cmpb
jne
ret
push
mov
add
sub
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
push
movb
call
mov
mov
mov
movzbl
imul
xor
push
add
pop
decl
jne
push
push
push
mov
call
mov
mov
cmp
jne
movzbl
push
push
push
call
pushl
push
push
call
xor
lea
test
pop
leave
ret
push
xor
call
lea
test
jbe
push
movzwl
imul
add
add
jne
pop
test
jns
add
add
and
or
mov
ret
push
mov
sub
sub
push
push
mov
mov
mov
mov
mov
andl
push
xor
xor
add
call
test
je
push
lea
push
push
mov
call
sub
add
jmp
mov
shr
xor
ror
movzbl
mov
mov
shr
xor
ror
movzwl
mov
add
add
sub
push
mov
lea
pop
mov
mov
mov
call
mov
mov
mov
mov
sub
cmpb
add
mov
lods
xor
stos
sub
test
add
sub
add
add
ror
dec
jne
mov
mov
sub
add
mov
mov
mov
imul
neg
add
add
mov
mov
mov
mov
add
mov
imul
add
add
add
and
add
movl
mov
mov
lea
mov
call
mov
add
mov
xor
add
decl
mov
jne
addl
cmp
subl
pop
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
lea
test
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
andl
cmpl
jbe
jmp
mov
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
lea
test
cmpb
jne
push
lea
push
push
mov
call
sub
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jb
push
push
push
mov
mov
mov
sub
add
mov
lods
xor
stos
sub
sub
sub
sub
add
ror
add
jne
pop
pop
pop
pop
ret
adc
ficoml
cld
das
add
xorl
inc
xchg
outsb
push
mov
addl
jbe
or
dec
dec
mov
orb
ret
and
adc
int
add
pop
and
add
push
inc
mov
insb
in
inc
or
and
jno
inc
imul
scas
popa
dec
ja
xor
pop
xchg
mov
outsb
dec
pop
or
sub
dec
fucom
dec
pop
jp
fcmovnbe
shlb
sub
jno
xor
imul
pop
mov
adc
into
scas
test
into
addr16
xchg
xor
pushf
sbb
out
pop
mov
jle
std
cmp
scas
adc
jns
add
jo
mov
aad
xor
mov
negb
and
pop
lods
xchg
pusha
mov
cli
popa
sub
add
mov
push
stc
pop
into
mov
inc
dec
push
dec
test
mov
loope
cs
mov
data16
lock
add
mov
xchg
push
mov
std
or
stc
xor
mov
sbb
inc
mov
push
nop
leave
adc
pop
popa
daa
dec
xchg
outsl
mov
push
sub
scas
inc
cli
xchg
out
cmp
sbb
fneni(8087
hlt
decl
cmp
ret
das
inc
pop
pusha
sahf
fsts
fsubrp
and
pop
mov
sbb
and
and
mov
leave
imul
fistps
pop
notl
movsb
cltd
cmc
cld
dec
rclb
iret
push
hlt
sbb
ja
mov
aaa
fwait
call
xchg
lods
xlat
loop
pop
out
lods
jle
and
mov
pushf
mov
xchg
std
fwait
mov
fmulp
jne
jbe
adc
outsl
jnp
jbe
pop
rcr
sahf
mov
jae
push
inc
push
cmpsl
shrb
push
fimuls
and
jmp
inc
mov
push
cs
push
cwtl
cli
add
das
sub
into
gs
aaa
movsl
std
and
inc
push
xchg
fucomp
lahf
pop
pop
insl
cli
mov
mov
fsubrs
cli
mov
std
loopne
mov
ja
or
adc
mov
inc
fs
xchg
jno
push
in
hlt
dec
mov
lea
rclb
movsb
adc
fistl
sbb
idiv
jmp
int3
adc
in
bound
shlb
xor
test
mov
and
movsb
pop
std
scas
divl
mov
lret
push
mov
cmp
push
jp
lds
push
rcl
push
idivl
adc
das
push
sbb
sbb
and
pushf
mov
mov
icebp
dec
mov
mov
test
push
imul
push
mov
inc
sti
and
lods
mov
subb
scas
xlat
loopne
jge
cmp
jge
and
mov
mov
cli
cmpsl
bound
and
lods
loopne
add
sub
xor
aas
iret
fcmove
pushf
push
and
aad
nopl
mov
dec
popa
repnz
sub
jg
adc
aam
sqrtps
push
rcr
lods
cwtl
shrb
xchg
and
enter
add
popa
xchg
pop
addr16
sbb
out
jmp
lret
xor
push
addr16
ret
out
jne
ja,pn
inc
dec
cli
mov
addr16
cs
lahf
lock
aad
and
fimull
js
pop
or
je
pop
add
pushf
lods
mov
pop
sahf
je
into
inc
push
lret
subb
mov
mov
adcl
mov
insl
cmp
mov
cmpsb
dec
pop
push
stos
push
push
fwait
test
test
cltd
inc
xor
push
cwtl
xor
cs
testb
pop
inc
xlat
sub
int
push
iret
push
cld
pusha
xchg
inc
sbb
push
nop
or
fisubl
addr16
xor
pop
out
std
int
out
aad
push
scas
in
cltd
cmc
sub
mov
or
fiadds
test
push
out
lods
aad
mov
xor
pop
xor
leave
stc
inc
fildll
inc
lds
mov
mov
xchg
mull
jge
inc
mov
or
mov
adc
or
mov
enter
cmpsb
cmp
ss
rorl
pop
icebp
ficoms
out
cmpsb
cmpsl
mov
push
cli
daa
sbbb
sub
rcrb
xlat
or
mov
shll
cmpsl
fld
jno
retw
cmpsl
insb
imul
push
fcoms
cmp
xchg
aad
cmpsl
sub
mov
or
addr16
adc
xchg
jg
fldenv
push
push
or
movsl
call
icebp
cltd
fs
dec
adc
adc
inc
je
js
mov
lods
sub
stos
adc
outsb
scas
ret
ja
sahf
daa
movsb
xor
push
xchg
ret
addr16
nop
dec
push
xchg
sub
inc
mov
imul
std
outsb
movsb
cmp
pop
out
inc
imul
enter
loopne
test
scas
xchg
aaa
call
pop
addr16
push
add
adc
imull
jo
cmp
fstpt
adc
mov
jmp
mov
rcr
pop
pop
int3
outsl
pop
mov
jo
pop
loope
mov
stc
out
pop
pushf
and
sub
inc
sbb
insl
stos
bnd
mov
cmpsl
jl
rcrl
sub
popf
stos
sub
inc
mov
js
dec
push
shlb
outsb
ljmp
negl
xchg
andl
lods
push
xchg
fsubrs
out
fsubl
sbb
loope
or
xchg
mov
inc
sbb
daa
cmpsb
in
ja
pop
enter
lds
movsl
cmpsl
jnp
enter
mov
xchg
ss
mov
sahf
fcompl
pop
inc
and
jae
mov
jl
in
jns
sbb
and
pop
data16
cmpsl
push
in
jg
or
dec
pop
lock
xchg
pop
js
jge
out
sub
mov
add
pop
sub
dec
std
scas
jbe
fwait
shl
jbe
je
cld
cmpxchg
xlat
sbb
movsl
adc
push
ja
out
lods
dec
cltd
enter
scas
call
mov
cmp
jmp
dec
movsb
mov
fsubrs
sub
pop
mov
ljmp
out
aad
or
and
je
imul
iret
fstpt
or
inc
enter
xor
xor
mov
pop
cmp
jl
xchg
leave
mov
pushf
xchg
jno
cmp
xor
ds
out
mov
vpaddb
fstp
cs
cmp
mov
cli
sub
and
adc
imul
cli
pop
mov
pop
push
xchg
sub
xchg
scas
xchg
pop
jle
jle
sbb
insb
fidivl
xchg
ljmp
rorb
out
jnp
add
xchg
pusha
mov
jl
data16
sub
lods
in
mov
and
sbb
push
mov
and
cmp
or
popl
icebp
outsb
imul
imul
lods
insl
into
inc
mov
and
adc
shll
sub
jae
add
shrl
mov
xor
fsubrl
mov
sbb
out
xchg
addr16
mov
lods
adc
enter
nop
xlat
mov
mov
inc
popa
sarl
push
outsb
add
mov
outsl
scas
fs
cmp
bnd
mov
xchg
and
pop
sub
repz
enter
fwait
lret
fdivrl
lcall
stos
pushl
push
sbb
std
pop
icebp
pop
repz
ret
xor
mov
outsb
sti
test
xchg
icebp
mov
sbb
je
out
test
mov
jg
or
fstl
sub
scas
movsb
mov
into
ss
ss
jge
notb
mov
and
dec
xchg
ja
mov
mov
mov
ss
inc
xchg
mov
int3
jno
or
push
nop
or
mov
dec
leave
rcr
and
idiv
sbb
push
add
aaa
inc
loopne
mov
mov
inc
orl
pop
or
and
leave
mov
and
mov
dec
sbb
repz
in
std
cmp
mov
dec
fwait
repnz
add
pop
mov
shrb
dec
test
mov
ficoms
inc
push
adc
stos
test
jbe
push
xchg
cmpb
in
aas
xchg
js
mov
sub
dec
fidivl
cltd
int3
loopne
or
ss
inc
push
mov
push
fnstsw
jne
loop
icebp
int3
inc
je
or
mov
mov
pop
pop
push
push
inc
cli
jmp
xchg
jl
int
xchg
adc
pop
or
pop
in
pop
popf
test
outsl
dec
pusha
cmp
mov
sub
scas
int
jmp
or
inc
stc
popf
xor
call
adc
mov
pop
xor
mov
add
scas
test
loope
pop
adc
push
sbb
nop
lahf
push
mov
inc
scas
or
mov
repz
cmp
xor
and
neg
cli
addb
inc
loope
jecxz
mov
rcr
dec
out
lret
outsl
mov
mov
ret
cmp
add
test
jl
bound
out
push
fwait
pop
jg
enter
scas
iret
mov
shlb
cmc
repnz
loop
xor
pushl
jmp
xchg
lcall
push
or
iret
hlt
mov
inc
filds
lods
pushf
or
sbb
fcomps
jl
cld
cmp
fbstp
jns
ret
pop
cld
pushf
push
xor
les
adc
sbb
xchg
xchg
popf
repz
ret
xor
cmc
push
pop
mov
or
push
arpl
or
lock
cmpsb
les
push
jecxz
cmc
fwait
bound
mov
pop
mov
jns
nop
xchg
loop
or
cmp
xchg
pop
sbb
pop
std
jnp
cld
idivl
jmp
mov
test
sub
mov
xor
fidivrl
mov
cmc
cli
repnz
adc
mov
scas
jmp
xlat
outsl
xchg
cmpsb
xlat
sahf
jl
out
dec
sbb
loopne
lods
jge
lcall
mov
hlt
xor
movsb
push
aaa
test
lahf
je
mov
mov
jmp
ror
push
mov
add
mov
out
aaa
sbb
dec
inc
inc
aas
dec
adc
jae
mov
xchg
je
lret
sbb
ljmp
dec
jl
mov
jecxz
popa
lret
arpl
aaa
mov
cltd
and
lret
xor
psubsw
xchg
jo
in
add
repnz
dec
stc
add
pusha
sar
adc
aas
and
mov
enter
out
push
push
or
test
cmpsb
push
jo
and
xor
adc
test
xchg
jno
jo
push
fldenv
or
jns
adc
jl
out
jno
into
sar
aad
fcompl
pop
and
lret
adc
cli
and
das
pusha
xlat
dec
sub
rorb
add
cmpl
sbb
loop
popf
inc
xchg
xchg
mov
aaa
cmp
lods
inc
jno
js
test
movsl
xorb
mov
icebp
xor
test
fnstsw
sub
fcoml
mov
cmpl
push
xlat
mov
fiadds
adc
jns
pop
cmpsb
lahf
dec
add
addr16
cmpsl
dec
jne
cmp
xor
lahf
add
pop
into
fs
push
pop
push
dec
add
inc
aam
jecxz
sub
cltd
mov
subb
mov
lret
mov
sub
cmp
shlb
arpl
mov
lret
sbb
ja
leave
adc
jl
add
add
jg
pusha
js
outsl
mov
dec
cs
or
and
xlat
leave
lods
push
out
inc
mov
sub
aaa
sub
dec
xor
or
jno
push
or
cmc
shrb
jg
pushf
imul
fmull
adc
sbb
mov
add
movsb
adc
adc
clc
cmp
test
mov
lret
cmpsl
outsb
rcrl
mov
daa
jp
mov
pop
adc
je
mov
pop
lcall
xchg
jg
pop
add
ds
fistpl
push
mov
dec
push
iret
sbb
pop
in
mov
das
add
jnp
mov
fmulp
jb
add
cli
mov
in
fwait
arpl
movsl
push
xlat
iret
loop
jae
loope
mov
enter
adc
mov
pop
call
and
cmp
pop
or
mov
ret
mov
mov
sbb
movsl
xchg
mov
adc
and
shrl
lds
rorl
mov
aad
cltd
stc
inc
push
jne
bound
pop
push
loopne
lret
push
xlat
xor
and
ret
movsl
push
jb
sahf
mov
outsb
clc
les
jge
sbb
mov
and
roll
out
add
outsl
test
shll
enter
jmp
pmaxub
sbb
popw
outsl
mov
shrb
mov
repz
cmpl
push
dec
test
cmpsb
les
bound
out
mov
inc
jno
pop
push
addr16
and
cld
add
and
mov
cmp
xlat
jns
cmc
pushf
adc
mov
lods
loope
jmp
mov
incl
je
and
cmp
shl
int
push
cmpsb
aam
mov
sub
mov
int3
shll
loope
sub
inc
inc
gs
inc
into
movmskps
push
cltd
rcrb
testb
mov
popf
adc
dec
jmp
fldl
dec
cmc
push
cmpl
cmpsl
mov
loop
sbbl
loopne
insb
outsb
xchg
mov
cli
inc
movsb
out
sbb
cmp
aad
pop
xchg
lods
cli
push
push
in
scas
inc
mov
int3
sti
inc
inc
mov
pop
ret
adc
fstps
les
lock
shll
jno
ror
sbb
xchg
mov
nop
dec
test
insb
pop
cmp
push
or
xchg
pushf
repz
or
push
lds
mov
ja
leave
or
adc
mov
test
cmpsl
test
cmp
jle
data16
out
js
pop
js
xchg
or
bound
mov
xor
fsubrl
mov
ret
and
add
sbb
cmc
movsl
fcoms
popf
mov
cmpsl
daa
or
loope
call
mov
cwtl
add
leave
and
movsl
jp
add
std
arpl
pop
mov
dec
clc
inc
push
popl
shlb
in
out
jo
orl
mov
shr
pop
jg
fwait
and
je
pushf
jne
push
je
sarl
scas
cmp
xchg
add
lcall
add
mov
adc
push
push
dec
in
mov
test
cli
jmp
fdivr
push
jb
mov
enter
std
xlat
sbb
or
dec
cwtl
clc
test
lahf
loope
test
jns
shll
fldt
pop
and
ds
xchg
pusha
outsl
jle
call
inc
xchg
mov
xchg
fistps
loopne
addr16
jb
das
dec
jo
daa
mov
out
sbb
popf
mov
push
sbb
pop
dec
pop
lds
or
add
mov
in
pusha
aam
popf
xorb
lods
aaa
fcomps
jmp
push
mov
iret
and
shlb
adcl
xor
xor
jo
cwtl
jo
push
sbb
sbb
adcb
pushf
xor
je
and
cmp
mov
or
xor
jg
into
pop
frstor
jae
fnstsw
xchg
dec
leave
cmp
mov
aaa
hlt
mov
mov
mov
mov
add
subps
enter
fwait
movsl
push
pop
jne
xchg
xchg
mov
das
push
out
xchg
mov
jge
fisttpll
repnz
icebp
jne
je
outsb
mov
mov
cmp
cli
test
out
cmp
in
in
pop
push
hlt
ror
out
lret
out
sub
push
add
es
inc
sub
fcmovnb
fidivrl
mov
lahf
xor
jnp
or
dec
and
inc
outsl
imul
push
mov
sub
repz
mov
and
movsb
cmp
stos
xor
or
and
mov
cmp
rorb
adc
int3
mov
pop
xchg
mov
arpl
iret
dec
lds
pop
bound
inc
test
mov
xchg
push
aam
popf
xor
xorl
fcmovne
fisttpll
ja
mov
jp
in
fistpll
repz
jle
out
push
sub
lret
jmp
inc
jge
lods
rcrl
push
sub
mov
shrb
push
outsb
cs
push
xor
push
xchg
dec
mov
lcall
xor
push
lock
jne
add
lea
mov
pusha
push
sub
dec
sahf
inc
test
jno
xchg
sbb
or
sub
xchg
mov
out
push
sub
imul
mov
cmp
xor
negl
icebp
daa
xchg
outsb
lods
ret
loop
xor
fdivr
pop
dec
cmp
icebp
mov
adcb
mov
cmp
mov
into
jg
sub
mov
or
pop
or
arpl
push
jl
or
outsb
scas
movsl
out
cmp
mov
pop
xchg
cli
in
enter
frstor
and
test
lock
add
jmp
nop
fwait
repnz
jge
mov
jno
mov
xchg
push
dec
sbb
loopne
add
in
cs
jmp
ja
ret
sbb
nop
cli
fdivs
add
xchg
out
rcrb
xchg
sbb
adc
lea
mov
push
js
fdivl
je
cmp
jp
sbb
daa
mov
add
mov
xchg
sub
adc
or
lds
scas
jbe
data16
and
cli
cmp
les
mov
push
xor
dec
push
and
shll
dec
stc
out
fsubrl
ljmp
cmc
sub
sbb
sbb
cmp
sbb
inc
and
mov
push
pmuludq
jo
sbb
and
xchg
leave
testl
jmp
sarb
dec
jne
cld
cli
mov
jmp
sub
je
enter
and
dec
std
outsb
pop
movsb
mov
mov
cmpsl
ljmp
add
mov
jge
xorl
fs
cmc
xorl
sbb
dec
fst
push
mov
lods
lcall
fsubs
loop
inc
dec
xchg
jge
sub
lcall
pushf
leave
xchg
mov
cmpsb
mov
add
dec
das
fimuls
loope
jnp
xor
cs
std
mov
adc
cmp
xchg
outsb
mov
add
cmpsb
fisubrs
pop
jb
jecxz
repz
jle
das
js
push
xor
xor
ljmp
and
mov
push
jl
std
sbb
aas
movsl
imul
mov
jecxz
push
repz
lret
mov
mov
mov
pusha
scas
inc
adc
pop
lods
or
lahf
xor
popf
cmp
stc
jnp
cmp
xor
jno
ret
pop
dec
mov
inc
add
adc
sbb
pop
cwtl
push
es
pop
jle
and
addl
out
shrb
mov
andb
mov
xor
test
ficompl
mov
ret
fistpl
scas
and
jno
inc
mov
mov
sbb
jnp
mov
and
sub
int
rcl
mov
jns
mov
repnz
ja
adc
sub
push
repnz
aad
popf
in
lahf
jl
popf
out
into
scas
popa
dec
mov
insl
je
inc
cwtl
jge
sahf
jne
push
pop
or
out
test
push
ss
lds
pop
negl
add
and
lahf
or
push
dec
mov
fidivrs
dec
mov
mov
shll
fisubrs
aaa
sub
rcrb
add
sub
push
push
sub
lods
dec
mov
mov
jno
in
arpl
mov
xor
sub
in
jne
rorb
das
into
aaa
push
mov
push
lret
inc
insl
leave
dec
fidivrs
mov
in
sti
xchg
popf
add
lds
mov
in
jge
rcll
call
jns
leave
shll
cs
cmp
jb
outsb
shlb
or
pop
jae
xor
sbb
pusha
sbb
cs
test
xor
sub
adc
fadd
dec
es
out
sbb
enter
hlt
add
cld
sbb
movsl
call
scas
or
cmp
loopne
mov
in
sub
int3
dec
push
std
mov
xchg
ljmp
das
mov
stc
cs
sub
mov
jnp
jo
leave
xchg
xor
sbb
sbb
imul
mov
push
adc
cmp
movsb
rcrb
xchg
int
dec
push
xchg
pusha
aas
xchg
subb
mov
int3
mov
add
dec
push
push
arpl
jmp
out
cmpsb
fdivrl
leave
pop
fdivl
sarl
sub
std
xor
xor
js
dec
ds
inc
scas
addr16
or
and
out
mov
xor
mov
fbstp
js
sbb
jle
insl
fsubs
inc
frstor
sbb
loope
add
aam
push
jle
jg
jbe
lea
push
cmp
insl
aad
inc
adc
cmc
jne
xor
aam
and
or
mov
je
push
enter
rolb
cmpsb
push
xor
int3
pop
je
sub
mov
pop
xorl
xor
adc
mov
inc
aam
mov
in
cmp
xor
flds
lahf
pop
int
sahf
pop
jo
xchg
sbb
add
pop
cmp
sub
rcr
and
bound
cmp
loop
or
out
adc
mov
push
jp
dec
push
push
sub
in
jnp
and
or
jmp
pop
jno
mov
stos
cmp
ljmp
inc
mov
inc
mov
popa
inc
mov
lds
imul
clc
fstps
add
xchg
lock
les
out
adc
loope
jle
mov
stc
pop
and
xor
jg
lret
lcall
repz
xchg
out
movl
lcall
pop
cmp
call
popa
push
lret
mov
mov
stc
and
or
mov
repz
pusha
jge
sub
mov
out
sbb
fimuls
jne
rep
dec
fimull
pop
orb
mov
jbe
inc
pop
mov
push
xlat
js
xchg
sub
mov
inc
inc
mov
inc
iret
add
popf
addr16
loop
fs
aam
aam
aaa
stc
mov
lahf
xchg
stc
dec
out
dec
push
in
mov
lcall
test
sahf
mov
es
sbb
jnp
xchg
add
nop
movsl
scas
jnp
or
nop
mov
add
outsb
jg
clc
add
mov
es
repz
jecxz
leave
ljmp
into
inc
push
push
imul
inc
ficoml
outsl
and
mov
cmpsl
imul
ret
rol
movb
xchg
inc
push
hlt
pop
imul
icebp
movsl
les
mov
pusha
add
arpl
das
lret
push
pop
das
pop
fldcw
rcrb
sbbb
fisubrl
cmp
cmpsb
inc
subl
inc
stc
pop
sbb
dec
pop
mov
in
into
dec
and
push
scas
pop
cmp
mov
imul
mov
mov
pop
xchg
pop
mov
adc
xchg
dec
push
es
sbb
add
inc
add
or
lahf
pop
jno
cli
imul
fstpl
ds
es
jne
cs
adc
icebp
mov
push
int
packsswb
push
jg
pop
popf
sub
jne
rorb
fwait
jbe
in
rorl
stos
mov
in
int
or
adc
or
js
cmp
sbb
movsb
xor
test
and
cmpsl
add
rolb
push
ljmp
adc
loop
jbe
fcoml
pop
hlt
push
push
mov
push
mov
ficoms
jbe
dec
mov
imul
push
dec
stos
mov
pop
insl
mov
pop
xchg
adc
das
fidivl
repz
push
mov
and
pop
sahf
mov
insb
jmp
push
ljmp
xchg
mov
mov
jg
iret
mov
mov
or
add
enter
sbb
scas
insl
xorl
leave
imul
jl
inc
out
outsl
pop
mov
cltd
cmpsb
inc
jb
punpckldq
repz
popl
mov
mov
or
push
mov
jl
mov
mov
cmp
aaa
loopne
movsl
addr16
xor
fwait
pop
inc
and
int3
inc
and
rolb
jge
icebp
jle
ffree
add
fcompl
je
rcrb
out
push
rcll
and
idiv
cltd
lret
mov
out
adc
adc
outsl
xor
outsb
inc
bound
dec
adc
cmp
cmpsb
aam
popf
pop
push
pop
sti
ljmp
lock
push
adc
nop
arpl
call
scas
fs
push
inc
std
shr
jae
stc
loope
mov
adc
jp
subb
and
xchg
cmp
mov
cmp
inc
clc
lret
arpl
fucomip
add
jb
imul
cmp
jg
push
cmp
cmp
jbe
push
adc
push
xchg
pop
mov
or
stc
xor
xor
and
dec
mov
push
sahf
pop
es
test
loopne
fmull
nopl
test
std
mov
and
pop
aaa
mov
movsb
mov
cmpsl
dec
jae
inc
imul
pop
mov
dec
imul
cwtl
decl
xchg
sbb
mov
xchg
iret
orb
xchg
inc
add
cmp
mov
pushf
adc
pop
std
mov
and
sbb
add
idivl
mov
xchg
xor
bound
in
xchg
sti
call
cmp
jnp
repnz
fsincos
or
data16
ret
fldl
aad
notb
push
xor
mov
ljmp
mov
cmp
push
sti
movsb
sbb
sbb
into
sahf
push
or
rorl
mov
jns
outsb
mov
and
sahf
movsb
inc
call
out
push
fstpl
daa
jns
pop
pop
dec
pusha
cmpsb
adc
cmpsb
xchg
mov
dec
nop
jle
imul
cmp
push
movsb
imul
bound
das
in
push
and
jp
repnz
lcall
cmp
hlt
stos
jecxz
div
pusha
push
in
sbb
ret
out
push
mov
xlat
mov
mov
or
shlb
adc
sahf
push
and
call
or
push
xchg
mov
cmp
rclb
and
push
shrb
rorl
pop
and
sarb
inc
repz
mov
jmp
icebp
and
and
inc
stc
test
mov
arpl
mov
call
lahf
ret
std
sub
inc
push
in
push
inc
push
mov
shlb
das
hlt
push
pop
xchg
imul
stc
imul
or
xchg
lret
inc
cli
xchg
mov
dec
mov
ss
fisubrs
push
or
cwtl
mov
add
movsl
in
dec
mov
cltd
in
pop
xchg
sbb
xchg
aam
enter
dec
bound
mov
cmpsl
lods
cmc
cli
mov
popf
scas
mov
mov
pop
mov
dec
xor
push
enter
insl
push
arpl
nop
push
test
movb
pop
stc
and
out
jns
loopne
push
mov
jecxz
ficomps
adc
push
inc
or
xchg
mov
ja
jl
das
andl
test
xchg
mov
lret
mov
xchg
repnz
sbbl
xor
sub
xchg
insl
out
mov
pop
imul
jle
stc
ljmp
xor
mov
jecxz
dec
js
insb
mov
mov
jbe
inc
loopne
pop
int3
out
add
mov
call
insb
push
das
cwtl
xlat
hlt
pushf
adc
xor
fmull
cmp
cmp
shll
je
out
faddl
mov
lahf
outsl
sbb
pop
jecxz
icebp
mov
daa
xchg
pop
fimull
and
aad
xor
pop
add
movsl
repz
enter
fucom
aas
lret
popa
mov
add
lods
imul
inc
xor
adc
pop
inc
ficoms
xchg
or
add
pop
bound
add
dec
xchg
dec
mov
jmp
ja
jl
call
js
mov
scas
fdivrs
xchg
stos
mov
lds
out
xchg
outsb
sarb
push
or
fldt
pusha
mov
mov
sbb
mov
cmp
lcall
inc
add
mov
lds
out
xor
push
insb
and
push
pop
insb
push
aam
mov
or
push
dec
mov
mov
inc
subl
push
add
push
mov
stos
imul
sbb
jno
dec
mov
and
sahf
stos
mov
rclb
jecxz
in
out
int
mov
jne
rcrl
psrlw
xchg
jp
push
in
leave
loop
ret
push
cmp
jg
inc
arpl
push
dec
xchg
fs
mov
jo
test
dec
scas
test
mov
mov
imul
test
jecxz
jmp
imul
sbb
adc
stc
sbb
shld
es
cmpsb
data16
ret
std
gs
fidivl
cmp
pop
ret
xchg
sub
or
pop
xlat
or
pop
push
enter
or
mov
sub
add
push
out
cmpsl
cwtl
dec
shrb
repz
jns
jno
mov
mov
xchg
mov
lds
stos
aaa
ror
lret
and
dec
scas
add
rolb
in
je
test
inc
add
xchg
cmp
sub
xchg
dec
push
outsb
into
aam
cltd
clc
dec
mov
movsb
inc
and
into
lret
jno
cli
jecxz
or
pop
sbb
push
cmp
shll
outsb
push
mov
outsl
jg
movsb
cmp
gs
nop
inc
push
sub
rcll
mov
adc
sub
jl
mov
arpl
das
xchg
sub
ficoml
or
push
test
push
pop
cld
cmp
add
icebp
xor
aas
jecxz
jmp
cmp
ljmp
inc
pop
iret
lret
in
inc
popa
push
pmullw
fcoml
pushaw
push
jne
dec
aas
jne
icebp
xor
negl
shl
addr16
and
jecxz
repnz
pop
mov
lcall
or
pop
in
in
mov
and
mov
loopne
into
cmc
mov
adcl
jge
or
adc
out
out
enter
or
rorl
loop
aad
popf
movsl
xchg
mov
lcall
or
outsl
or
sahf
mov
repnz
dec
leave
mov
imul
push
jge
arpl
fs
inc
add
mov
mov
test
inc
mov
hlt
xchg
jb
jmp
jns
clc
hlt
mov
jmp
loope
or
neg
iret
jo
call
in
ret
adc
repnz
mov
leave
scas
add
addr16
mov
sbb
fdivrs
mov
insb
loope
lret
jbe
sub
xlat
push
xchg
hlt
cmpsb
xchg
push
aam
xor
out
sub
mov
inc
or
jle
or
sbb
inc
xchg
jnp
cmpsb
in
xchg
xchg
dec
int3
outsl
orl
dec
jnp
pop
mov
dec
pushf
adc
popf
jns
adc
add
enter
mov
add
adc
frstor
movsb
pushf
in
jle
mov
mov
dec
fsubr
ja
add
mov
shll
loope
xchg
scas
adc
or
lcall
push
cmp
push
adc
pop
insb
jmp
std
jb
add
mov
mov
mov
test
push
xlat
pop
js
lock
comiss
push
dec
aam
sub
enter
pop
ds
cmp
notl
insb
cmp
inc
lods
cmp
dec
mov
push
jl
out
in
daa
dec
lahf
cwtl
jo
mov
int3
pusha
je
add
lcall
xchg
and
jne
dec
add
cwtl
xor
sub
and
mov
dec
sti
jnp
push
enter
xor
pop
gs
push
ret
ljmp
push
addr16
pop
and
cmp
adc
lods
xor
repnz
sbb
aam
lcall
or
pop
jp
out
rcr
add
rolb
neg
loope
mov
repz
add
mov
jp
sahf
cwtl
xor
pusha
addr16
in
bound
sbb
ljmp
mov
adc
inc
pop
outsb
bnd
xchg
mov
lahf
addl
in
fdivl
pop
xchg
pop
aaa
mov
js
sub
sub
popf
loopne
out
leave
jge
mov
sub
mov
fiadds
push
scas
repz
outsb
int
inc
cmc
outsl
push
out
inc
mov
lods
dec
mov
lret
cmp
cltd
xor
hlt
pop
push
xlat
pop
stc
and
lahf
xor
xor
cltd
ret
pushf
sbb
or
inc
clc
int3
or
in
rorl
ds
mov
inc
movsl
dec
pop
in
push
adc
shl
sbb
mov
adc
out
and
test
xor
imul
dec
je
xchg
addr16
mov
mov
push
ret
xchg
sub
test
je
ret
popf
in
dec
loope,pn
ficompl
js
push
pusha
clc
shrl
rol
icebp
outsl
sar
xchg
pushf
mov
imul
ss
popa
out
dec
out
jle
ds
mov
mov
dec
pop
icebp
sub
push
repnz
cmpsl
insb
xchg
stos
xchg
jns
xor
dec
and
cmpsl
jg
or
stos
sub
adc
ret
sbb
mov
ret
in
push
mov
cmp
aad
xchg
push
push
pusha
andb
xchg
pop
mov
cmp
repnz
idivb
cmc
dec
sbb
or
insb
repnz
add
mov
mov
pusha
or
sarb
push
stc
mov
jne
dec
insl
mov
in
lret
jo
xor
scas
inc
push
mov
dec
mov
ds
test
push
cli
jo
inc
and
rorb
arpl
mov
enter
sub
cld
outsb
loopne
jmp
adc
outsl
cltd
mov
and
aaa
bound
sbb
jmp
push
rcrb
jbe
push
push
cmp
fcom
sbb
out
pop
iret
push
bound
pop
jg
cmp
fwait
adc
je
xor
dec
js
xchg
sbb
sub
ljmp
and
mov
or
sbb
enter
daa
pop
pop
cmpsb
push
lret
test
les
in
mov
push
mov
push
mov
xchg
dec
lcall
xchg
fmul
arpl
fidivrs
gs
mov
mov
or
insb
dec
sub
sub
and
jno
jg
stos
or
sub
or
dec
int3
jne
test
movsl
and
or
js
mov
ja
mov
aaa
shlb
rcrb
ljmp
outsb
xchg
lcall
hlt
pushf
lret
sbb
or
sub
aaa
mov
mov
and
mov
pop
dec
mov
push
lea
xlat
aam
pop
sub
mov
mov
xor
cld
repnz
jl
test
xchg
hlt
mov
ljmp
add
out
mov
fisttps
sbb
rcrb
test
xchg
adc
jno
dec
fld
xorl
fcom
mov
lds
sbb
imul
aam
push
add
add
and
dec
call
imul
lret
movsl
sub
cld
clc
jbe
lods
aaa
aad
xor
inc
pop
dec
int3
int
mov
test
push
push
les
fucomi
ficompl
jl
ja
int
js
adc
out
push
sub
addr16
and
and
jbe
out
mov
pop
repnz
mov
rcrb
xchg
dec
jge
ss
icebp
push
test
jl
sub
cli
push
scas
mov
cmp
fwait
stos
inc
adc
pop
and
aas
outsb
lea
add
fidivl
dec
cld
fidivl
pop
aas
sub
sbb
in
pop
xorl
lds
rcll
sarb
lea
mov
ret
cmpsb
dec
sar
xchg
and
mov
jle
mov
and
imul
jmp
mov
xchg
xchg
inc
mov
in
inc
push
bound
mov
clc
adc
pop
mov
mov
mov
mov
scas
sbb
sbb
lret
rcrb
mov
push
stos
jns
insl
lds
inc
push
into
sub
sbb
lea
into
in
iret
xchg
mov
or
add
sub
or
mull
and
add
or
out
scas
ljmp
dec
add
jmp
add
add
pop
repz
orb
in
jnp
addl
or
adc
repz
or
adc
dec
call
mov
mov
push
jb
ds
paddsb
xchg
out
repnz
push
inc
push
sahf
jp
andl
xchg
lods
repz
std
movsb
inc
out
stos
jns
mov
lods
pop
add
lcall
and
jmp
push
mov
outsl
ja
add
ds
lahf
jle
push
ds
pop
dec
inc
pop
push
xchg
dec
xchg
repnz
rol
insl
inc
jl
repz
add
jns
jl
pop
and
pop
stos
xor
jnp
hlt
stc
or
adc
xor
or
sti
in
gs
pop
lret
call
cmc
fs
cld
pop
xchg
std
testb
fdivl
rcl
test
lret
xchg
cld
add
or
adc
add
arpl
lret
jae
out
inc
pop
frndint
push
jecxz
cli
rolb
sahf
mov
inc
in
mov
adc
cmp
mov
push
cmpsl
sbb
nop
rcll
rorb
ljmp
mov
sub
pop
aaa
mulb
add
mov
sbb
aaa
ret
rcrl
dec
aas
mov
add
in
loopne
arpl
xchg
ja
xor
in
sub
insb
imul
pop
mov
into
xor
jno,pn
lock
test
jge
mov
mov
fiaddl
ror
mov
or
push
mov
mov
into
movzbl
iret
mov
mov
cs
inc
add
push
pop
inc
and
jbe
hlt
shl
js
mov
inc
scas
ret
pop
and
out
in
dec
fldt
ja
pop
push
lret
push
and
imul
test
lods
dec
dec
push
push
or
enter
push
sbb
jle
notb
lods
stos
aad
dec
and
push
dec
mov
mov
push
imul
push
jns
jmp
xchg
cwtl
negb
rcll
sbb
bound
insl
sahf
out
push
bound
xchg
pop
popa
or
add
outsl
mov
cmp
cli
push
pop
jbe
lret
mov
cmp
or
sbb
outsl
xchg
lods
scas
adc
jl
sbb
jmp
mov
mov
mov
loope
add
ljmp
ss
jns
dec
aad
loope
inc
lret
das
imul
lret
lret
fucom
xchg
push
xchg
nop
addr16
out
or
jno
lret
fldenv
hlt
cwtl
pop
loopne
mov
ljmp
stos
jp
mov
cmpl
mov
ret
cmp
or
lcall
cmpsl
lods
lea
cli
pop
loope
stc
jno
clc
jmp
loop
jl
inc
testl
cltd
loopne
rorb
xorl
lock
mov
outsl
xor
or
pop
xlat
sbb
xlat
daa
cli
loope
mov
bound
outsl
scas
push
xchg
repz
test
mov
xor
sbb
xchg
insl
aam
call
movsb
movsb
daa
std
inc
xchg
mov
jg
pop
arpl
push
mov
test
cmpb
inc
scas
hlt
ljmp
clc
push
xor
daa
add
inc
loop
cmpsb
in
push
loope
call
add
inc
jns
aas
add
cmp
mov
jle
xchg
mov
insb
subb
add
jbe
movsl
xchg
les
insb
inc
jns
divb
outsb
movb
arpl
repz
cmpl
repnz
stos
rcll
loop
jbe
sarb
test
lret
cli
testl
test
mov
and
adc
popa
adc
sti
cmp
in
sbb
jbe
test
aaa
mov
xorl
iret
inc
jg
cmp
iret
pusha
out
je
sbb
push
das
ret
sbb
int
jl
out
addl
and
mov
cmp
sub
ds
test
ret
push
xor
jns
jo
cmp
mov
repnz
lea
movsb
add
mov
sub
mov
or
cltd
dec
lds
jae
sbb
notl
popf
jle
push
call
aam
push
or
cmpsb
mov
enter
fiadds
outsl
add
add
add
add
je
outsl
outsb
add
add
imul
imul
add
insl
jne
je
add
add
add
popa
add
popa
add
add
add
add
add
add
add
jb
outsl
add
add
add
add
data16
add
add
jb
add
add
add
jae
add
add
add
jne
jb
imul
add
push
add
add
add
add
add
data16
add
add
add
outsl
add
add
je
add
add
add
outsb
jbe
outsb
je
outsl
outsb
add
add
outsb
add
add
jo
outsl
add
add
add
jb
add
add
je
imul
push
add
jae
je
outsl
outsb
add
add
add
add
add
add
add
add
add
arpl
jae
add
add
add
add
je
jb
imul
jae
add
outsl
add
jb
add
outsl
data16
imul
add
insb
add
ja
add
imul
imul
arpl
popa
add
je
add
bound
add
jae
jo
jb
je
outsl
outsb
add
push
add
add
add
je
add
outsb
