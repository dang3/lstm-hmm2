jge
add
mov
add
movsl
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
xchg
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
adc
add
add
push
adc
add
add
jl
add
adc
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
das
add
outsl
lea
hlt
iret
lret
insl
aaa
out
in
in
adc
popf
test
cmpsb
and
mov
inc
or
inc
pop
sti
inc
movsl
pop
push
std
ret
pushl
gs
into
push
mov
std
imul
sahf
sub
enter
test
ret
pop
hlt
mov
fdivp
loope
subl
lret
push
fstl
push
pop
push
fbld
testl
push
imul
fidivs
and
cmp
mov
pop
adc
clc
insl
push
sbb
in
js
xchg
fsts
dec
shr
je
int3
sbb
clc
sbb
jle
xor
call
and
cld
xchg
fistpll
mov
movsl
bsr
pop
or
out
ljmp
jae
mov
mov
pop
in
movsb
push
ja
movsl
fcomps
aad
mov
ja
rcrb
or
lds
mov
push
insl
mov
lahf
cmp
out
sbb
mov
cmp
mov
xchg
lods
icebp
xor
cmp
sbb
inc
sbb
mov
mov
int
ja
inc
rorb
inc
mov
clc
fimuls
jp
inc
jmp
xor
mov
sti
jecxz
xor
sub
stos
mov
stc
cmp
lods
mov
out
xchg
dec
clc
call
xchg
xchg
cmpsl
or
sar
arpl
outsb
inc
inc
fwait
mov
clc
in
cmp
jnp
jmp
push
cwtl
jmp
sbb
es
xor
mov
lret
test
mov
pushf
jg
cmp
adc
xor
pop
mov
or
test
jns
cmpsl
cmpsb
test
daa
fldl
adcb
mov
inc
imul
mov
cmpsb
jno
shr
and
xlat
ds
out
jp
jnp
sbbl
ds
cmp
add
jg
push
add
and
pop
test
dec
fs
in
jo
adc
cmp
sbb
xor
add
lods
iret
add
push
mov
into
aam
shrb
jns
xchg
or
pop
and
xchg
call
cwtl
xor
and
jp
je
test
mov
adc
lcall
mov
rorb
pop
sti
cmpsl
inc
scas
stos
enter
mov
add
jnp
lret
xor
push
jne
lcall
sbb
push
dec
and
shlb
jmp
icebp
adc
add
dec
popf
aas
mov
jl
cltd
dec
data16
stc
jbe
fs
cmpl
es
orl
xchg
dec
aas
jae
cs
jo
icebp
xchg
adc
or
cld
scas
adc
insl
addr16
mov
sub
mov
pusha
pop
sub
xor
movl
daa
lods
xchg
stos
dec
fsub
cmp
mov
ds
xchg
add
fisttps
in
adc
mov
push
ds
pusha
or
sarb
shl
mov
mov
and
fnstcw
push
adc
push
lret
repnz
cmpsb
mov
int3
xchg
insl
call
add
or
in
cli
sub
mov
pop
fdivr
loopne
fbstp
inc
insb
ret
dec
std
rorl
jl
pmulhuw
push
dec
fnstsw
pop
fiadds
inc
dec
pop
fsubp
sbb
inc
outsb
imul
mov
xchg
mov
aaa
sbb
adc
or
les
repnz
rol
adc
adc
inc
add
call
dec
dec
call
mov
push
mov
call
mov
lea
lea
imul
imul
lea
call
movswl
and
sub
add
and
sub
dec
imul
or
mov
imul
movzwl
dec
call
lea
add
dec
add
inc
call
inc
call
dec
movsbl
inc
add
dec
dec
lea
sub
inc
pop
sub
lea
or
add
add
pop
dec
lea
pop
dec
inc
add
lea
pop
imul
imul
and
dec
imul
lea
imul
dec
pop
add
add
pop
sub
lea
mov
imul
dec
call
inc
dec
mov
inc
ret
add
dec
push
mov
mov
push
add
mov
push
mov
lea
push
inc
sub
push
or
add
mov
inc
mov
push
dec
ret
push
dec
lea
add
mov
sub
lea
sub
push
mov
mov
push
imul
call
pop
ret
jmp
movsbl
xchg
dec
inc
inc
add
xor
mov
add
mov
lea
inc
movzwl
sub
dec
jne
mov
mov
imul
sub
pop
xor
lea
pop
mov
sub
pop
add
lea
movsbl
add
dec
inc
mov
mov
dec
lea
imul
add
ret
push
sub
mov
mov
dec
sub
dec
mov
or
push
push
push
push
mov
dec
mov
push
movswl
imul
dec
dec
and
inc
mov
inc
dec
mov
sub
push
mov
dec
xor
mov
dec
push
mov
xor
push
imul
dec
pushl
dec
call
dec
add
add
sub
mov
add
mov
mov
add
pop
ret
mov
mov
lea
lea
inc
inc
add
add
movsbl
imul
add
mov
inc
imul
cmp
jb
add
mov
mov
dec
xor
imul
inc
xor
dec
movswl
pop
mov
test
jbe
xor
movsbl
lea
mov
dec
xor
imul
imul
mov
movzwl
mov
inc
add
inc
mov
inc
dec
mov
add
xor
movzwl
lea
and
sub
or
mov
lea
movswl
movzbl
add
mov
add
lea
inc
and
inc
dec
mov
imul
sub
mov
add
mov
mov
dec
xor
mov
mov
dec
mov
lea
add
inc
dec
jne
imul
mov
movzwl
dec
inc
mov
inc
mov
mov
mov
or
sub
mov
and
add
imul
lea
inc
dec
dec
mov
mov
mov
dec
test
jbe
imul
imul
inc
inc
or
inc
add
add
mov
mov
mov
mov
mov
mov
imul
inc
and
dec
xor
mov
sub
and
and
mov
mov
mov
movzbl
imul
movzbl
dec
inc
add
sub
lea
and
dec
lea
mov
inc
and
movzbl
mov
mov
mov
inc
and
mov
mov
xor
movzbl
mov
add
add
mov
and
and
mov
mov
movzbl
dec
jmp
push
call
imul
xor
inc
add
xor
sub
add
inc
inc
add
inc
add
dec
xor
dec
lea
imul
add
shl
or
inc
xor
or
inc
push
lea
sub
dec
call
mov
pop
inc
mov
mov
dec
or
mov
lea
sub
cmp
je
call
call
xor
iret
add
sub
pop
mov
ret
push
lea
sub
mov
inc
lea
push
inc
mov
push
inc
push
mov
push
mov
dec
push
dec
lea
mov
inc
sub
call
mov
push
add
push
dec
pop
or
or
mov
xor
movzwl
mov
add
dec
inc
inc
sub
dec
je
inc
movswl
lea
dec
sub
inc
mov
inc
mov
mov
inc
dec
mov
lea
dec
mov
mov
repnz
inc
imul
add
inc
jmp
add
add
inc
mov
add
dec
add
lea
add
mov
dec
imul
dec
mov
dec
or
pop
pop
jmp
ret
push
mov
imul
inc
mov
add
mov
movzwl
movsbl
mov
sub
mov
sub
dec
mov
mov
mov
dec
inc
add
inc
xor
sub
inc
mov
lea
pop
ret
sub
mov
mov
lea
sub
mov
imul
inc
mov
dec
mov
mov
inc
add
xor
lea
mov
mov
inc
dec
inc
lea
inc
inc
sub
lea
add
cmp
jb
inc
push
xor
dec
push
dec
imul
push
dec
or
mov
add
movzwl
xor
lea
lea
xor
and
sub
xor
add
add
push
movsbl
movzwl
xor
lea
mov
add
mov
mov
sub
movzbl
inc
lea
mov
add
inc
xor
add
add
dec
movzbl
imul
lea
mov
lea
lea
add
inc
inc
movsbl
mov
inc
and
xor
sub
add
sub
cmp
jb
lea
xor
sub
dec
mov
dec
jmp
and
scas
pusha
xor
lock
adc
dec
sahf
clc
or
lods
adc
mov
xchg
stc
es
dec
mov
ljmp
repz
dec
or
jecxz
lds
cmp
in
adcl
adc
mov
lcall
aaa
mov
imul
jne
les
mov
cmp
jo
inc
ds
les
mov
subl
and
fmulp
sub
lds
fisttpll
cmp
ja
scas
fiadds
cld
push
imul
mov
mov
fbstp
repnz
xchg
call
mov
add
scas
mov
mov
lods
les
inc
stos
imul
pop
xor
ljmp
xor
sub
data16
mov
call
cltd
pusha
xchg
aas
push
jb
shll
sbb
mov
xchg
xchg
decl
movsl
sub
cmpsl
jmp
fsubr
outsl
jns
mov
imul
mov
sbb
lea
and
dec
mov
or
inc
cmp
adc
lds
aam
loopne
or
or
out
mov
or
mov
iret
dec
sti
xchg
push
cmp
gs
xor
test
insb
pop
std
mov
aad
popl
or
pop
ja
mov
divl
xchg
aas
loop
xchg
push
add
dec
lods
xor
out
or
out
xchg
dec
fsubs
lcall
mov
inc
test
dec
leave
dec
xchg
inc
mov
cmpsl
pop
dec
js
test
das
cs
xor
test
push
aaa
movsl
sub
test
adc
pop
jl
dec
pushf
jno
push
lea
dec
jo
std
and
add
jecxz
cmc
adc
add
cmpsl
outsb
repz
mov
adc
insl
cmp
pop
in
movsl
dec
aas
or
pop
mov
cmp
inc
insl
das
out
cmp
fwait
data16
mov
sbb
cli
fdivr
xchg
dec
in
paddw
xorl
mov
stos
pop
sub
add
inc
daa
pop
xor
mov
mov
pop
push
cmp
sahf
data16
lahf
jge
ss
das
mov
scas
mov
dec
mov
gs
fisubs
ljmp
xchg
pop
xor
jmp
ds
or
mov
mov
mulb
int
mov
sbb
repz
mov
jp
xchg
jb
aam
or
aaa
inc
dec
mov
pop
cmpsl
movsl
imul
and
or
sbbb
mov
arpl
and
sbb
and
insl
lods
je
sbb
add
inc
jecxz
mov
rcll
lahf
fmuls
loop
xor
lcall
push
insl
rcll
or
push
and
inc
sub
stos
push
add
cld
fs
push
int3
jg
pop
inc
es
xchg
xchg
fcomi
push
and
push
adc
xor
mov
jle
or
xchg
nop
jecxz
mov
or
pop
stc
pop
add
std
ds
les
jno
and
shrb
dec
lods
pushf
jo
addb
pop
ret
add
push
insb
addr16
cwtl
mov
adc
out
lods
clc
xchg
or
pop
rcll
out
lcall
add
sub
dec
sub
icebp
mov
mov
cmc
lds
sub
inc
ret
cmp
inc
xchg
pop
mov
push
adc
push
cwtl
ljmp
js
mov
test
test
jp
push
mov
lcall
out
mov
and
dec
pop
pusha
add
lea
test
jne
icebp
int3
orb
dec
je
not
jecxz
push
int3
cmp
scas
pop
lods
enter
std
add
jns
pop
testl
lea
mov
push
fildll
in
lds
faddp
ds
push
sbb
repz
mov
nop
or
test
into
dec
mov
jns
test
dec
stc
test
cli
push
push
jnp
jno
fwait
push
add
and
and
out
popf
xor
mov
jge
push
lods
aam
out
stos
enter
in
mov
filds
dec
fsts
add
adc
cmc
fbld
pop
and
out
push
adc
ret
jmp
ret
xor
popf
or
pop
mov
xchg
lea
mov
sub
imul
inc
sti
iret
gs
adc
addl
sbbl
fisttpl
aas
sbbb
aas
mov
rolb
mov
or
dec
cld
push
dec
adc
xchg
xor
xchg
sbb
mov
and
data16
and
std
outsb
pop
js
jne
xchg
xchg
xchg
hlt
adc
lock
and
mov
adc
fs
and
ret
icebp
daa
mov
mov
ss
shlb
out
jp
mov
mov
cmp
sub
test
lea
push
jmp
ja
cwtl
mov
cmpsl
jge
imul
out
gs
jle
cmp
int3
sub
jbe
pop
dec
dec
push
adcl
shrl
das
fwait
dec
test
mov
and
push
adc
imul
scas
lods
cmc
xchg
jg
pushf
xor
pop
cli
out
xchg
inc
fldl
cmpsl
xchg
push
nop
addr16
lcall
add
pop
cmp
inc
loop
jecxz
imul
out
mov
push
repnz
mov
xchg
stos
dec
in
xor
stos
pop
adc
xchg
mov
outsb
ss
int3
xchg
dec
jns
push
test
jae
or
lea
mov
xor
jle
ja
mull
test
in
dec
add
jbe
cli
in
xor
dec
pop
adc
repnz
mov
sub
dec
fisttpll
movsl
mov
cmp
js
pop
sbbb
mov
inc
repz
and
popf
pop
pusha
cwtl
pop
sahf
adc
push
lcall
rcrl
mov
adc
xchg
or
sarl
mov
insb
xor
and
mov
sub
scas
push
and
in
push
jnp,pn
xor
sarb
loop
cld
inc
adc
mov
test
pop
pop
mov
or
stos
push
loope
imul
fwait
int3
pusha
into
enter
cmp
shlb
or
mov
shll
xchg
lcall
pop
or
jbe
mov
dec
mov
mov
inc
movsl
out
sti
mov
pop
sub
mov
lahf
out
or
mov
jo
xchg
cld
std
scas
lret
xchg
jl
faddl
and
jecxz
test
aad
aad
dec
xor
push
sbb
add
ss
sbb
xor
leave
pop
sub
icebp
jae
push
repz
adc
fs
aad
dec
mov
adc
dec
and
lods
imulb
imul
dec
pop
mov
pop
dec
frstor
sub
xchg
dec
cmc
xchg
sub
fsts
adc
insl
sub
ret
pop
mov
cmp
shrb
lret
inc
jns
ljmp
inc
in
xchg
sub
sbb
cmp
fstps
pop
dec
push
xor
aaa
divb
jae
pop
movsl
sub
dec
std
ret
aas
mov
mov
scas
dec
mov
sbb
ficompl
pop
inc
fbstp
repnz
flds
push
fmull
in
ret
lcall
mov
push
xor
test
push
mov
sbb
pop
lock
inc
pop
dec
sbb
popa
add
loopne
loope
add
mov
int3
pop
xor
and
dec
lret
pop
xchg
dec
pop
ja
jg
adc
sub
in
lret
aaa
add
xor
shlb
push
mov
inc
out
in
sub
call
sub
fdivr
fmull
andb
daa
test
push
bound
stos
out
adc
rolb
jmp
xor
inc
ds
mov
mov
int
mov
cld
push
fwait
add
lods
and
xchg
call
stc
fistl
stc
cmp
xchg
rcrl
sub
inc
testb
xchg
xchg
nop
pop
cld
mov
mov
jl
lret
adc
gs
mov
sarl
test
cmpsl
das
mov
pop
dec
xchg
adc
mov
faddl
stos
std
adc
lahf
mov
inc
jns
jne
mov
shr
mov
mov
push
ret
mov
shll
cmp
xor
mov
filds
xchg
ja
sbb
sub
sti
sbb
add
mov
scas
jnp
or
dec
mov
xchg
data16
lea
out
adc
inc
loope
dec
mov
ret
pop
jp
lcall
mov
or
ret
jae
lea
push
adc
jl
fadds
inc
call
pop
and
push
movsb
mov
ret
ds
xchg
sub
mov
bound
adc
inc
fiaddl
cmpl
push
mov
push
dec
dec
jmp
jmp
jo
push
test
inc
loopne
mov
push
xchg
xchg
xor
mov
lret
call
pop
je
ret
mov
mov
pop
les
jnp
popf
xchg
insb
xchg
or
xor
into
out
jne
lods
and
cwtl
cmp
inc
xchg
ret
mov
pop
cmp
aas
out
stc
fisubrs
jne
push
pop
aam
push
cmp
pop
jae
scas
testb
outsl
mov
jmp
in
enter
addr16
mov
insb
cltd
jbe
subb
pushf
lahf
xchg
shll
lea
stos
cmp
xchg
xchg
sub
push
or
pushf
ds
fldcw
adc
int
cwtl
scas
push
ja
out
push
sbb
movsb
adc
xchg
repz
sti
push
jno
std
push
jmp
jae
sti
mov
aam
loope
dec
js
dec
mov
push
sbbl
pop
into
dec
fisttpl
or
jbe
fidivrs
dec
aas
pusha
lods
cmp
cmp
jno
inc
out
mov
push
imulb
inc
sbb
push
mov
cwtl
daa
push
inc
rclb
add
adc
inc
out
and
dec
push
and
loope
jg
push
pop
or
cmp
or
mov
push
int
jl
and
rcll
bnd
cmp
sti
movl
cltd
rcl
sub
fcoml
int3
xor
in
xchg
test
mov
xchg
inc
ja
loopne
jl
push
in
push
sti
pop
das
and
out
daa
xor
xlat
hlt
divl
cmc
cmpsl
xchg
lods
cmovbe
xchg
lahf
out
stc
push
call
and
mov
daa
inc
imul
pop
push
mov
cmp
inc
push
call
jle
xor
and
ret
cmc
adc
sub
mov
xchg
out
cmp
out
pop
lret
lods
add
insb
dec
jns
xor
ss
rorb
mov
ret
sbb
scas
pusha
outsb
orb
icebp
add
repz
std
insb
or
subl
imul
repnz
or
addl
adcb
adc
or
jne
out
xor
push
inc
aam
pop
pop
dec
mov
pop
std
adc
popf
jb
lock
mov
cmp
push
ret
test
sarb
imul
push
or
xor
mov
pop
mov
ror
inc
mov
cmpsl
stc
in
ja
divb
jno
adc
push
mov
inc
push
popa
xor
adc
inc
bound
xchg
and
jg
sbb
div
sbb
std
or
mov
inc
add
xchg
insl
sub
cmp
mov
xor
mov
shrb
xchg
fists
mov
inc
adc
push
imul
mov
dec
mov
cmp
stos
les
sbb
test
jg
jne
out
push
cmp
cs
int
fidivrl
xor
call
adc
jne
test
std
aad
invd
fwait
stc
dec
inc
jle
aas
lcall
add
push
add
fcompl
xchg
mov
lret
outsb
icebp
sub
dec
hlt
push
xor
ficoml
xor
cmpsl
mov
insl
cltd
add
fwait
addl
xor
pop
dec
scas
mov
out
nop
jnp
out
sti
loopne
jne
xchg
jns
mov
fsts
jl
inc
xor
pop
stos
push
mov
mov
loop
js
jo
dec
jecxz
std
dec
jecxz
es
sahf
loop
fldcw
test
adc
sub
shll
or
xchg
pop
movsb
jbe
lret
out
loopne
adc
es
loope
dec
fisttps
adc
push
mulb
or
dec
pop
xchg
cmp
xor
lahf
cwtl
xor
jb
nop
test
jo
sahf
sahf
addr16
clc
cwtl
mov
nop
mov
hlt
movsl
pusha
hlt
hlt
jbe
xchg
call
mov
push
inc
roll
or
push
mov
xchg
rorb
dec
mov
pop
sbb
pop
scas
jnp
not
inc
nop
call
icebp
int3
ja
mov
hlt
and
mov
dec
daa
xchg
stc
test
jmp
dec
lea
test
jne
in
sub
gs
push
xchg
stos
cmc
subb
movsb
jne
push
jns
int3
les
mov
jnp
repz
jbe
enter
sub
in
ficoml
daa
loop
dec
into
ret
ja
pop
mov
std
or
pop
dec
cwtl
insb
cs
movsb
mov
movsl
call
sbb
push
dec
mov
pop
cmp
lahf
inc
das
test
int
icebp
xor
dec
outsl
aas
or
jb
dec
pop
dec
dec
cmpsb
clc
push
mov
pop
push
je
mov
jp
dec
xlat
jnp
xchg
repz
sub
push
jno
es
pop
add
in
cmpsb
stos
xchg
das
dec
push
out
mov
sbb
mov
adc
mov
sub
loop
ss
xor
fidivl
loop
call
aad
insb
subl
xchg
push
sbb
out
testl
into
jge
es
js
jp
pop
add
adcl
in
sbb
or
add
mov
lea
and
insl
shlb
fsubs
sarb
mov
xor
cmp
mov
jmp
punpcklwd
sbb
scas
mov
push
bnd
mov
jns
push
xlat
mov
jbe
sbb
pop
cmp
jge
arpl
or
push
fsubr
inc
jl
roll
mov
lea
lahf
or
add
inc
mov
inc
or
jb
lods
fdivs
xchg
fistl
push
jp
in
in
testb
pop
adc
push
push
fdivrl
jnp
fisubl
sub
xor
loope
inc
lea
mov
dec
mov
and
inc
mov
mov
add
pop
dec
adc
imul
jnp
dec
push
in
push
fldl
add
cwtl
add
roll
outsl
mov
cmpsl
fcompp
outsb
out
push
imul
in
jp
mov
xchg
shll
pop
lea
lret
movsl
inc
stc
in
and
inc
lds
jmp
mov
clc
mov
dec
push
xlat
or
stos
pop
aad
ja
and
mov
xchg
dec
or
pop
cmpsl
ja
lret
sbb
and
cmp
mov
push
shlb
orb
fbld
mov
inc
and
add
xchg
add
xchg
pop
stos
mov
mov
dec
imul
out
lock
sbb
fbld
cwtl
enter
filds
bound
mov
push
shrl
repnz
dec
jo
fcoml
xchg
das
stc
orl
xlat
mov
jl
cmp
rorl
xor
sahf
add
jle
adcl
lods
cmp
push
mov
fidivs
cmpsb
add
jg
cli
push
add
test
dec
sub
lahf
arpl
add
fdivr
ds
dec
xchg
mov
push
roll
mov
shll
fimull
push
pop
add
icebp
addr16
add
lods
enter
sbb
push
fisubs
xchg
jne
aas
das
adc
int3
loopne
cli
pop
mov
movhps
mov
cmc
movsb
cltd
test
call
test
adc
sub
fstps
push
js
inc
cld
mov
sub
add
mov
loopne
shll
cli
cld
add
incl
mov
dec
ret
in
pop
cwtl
cmp
sub
or
icebp
icebp
mov
dec
sbb
xlat
sbb
dec
jecxz
andb
xchg
dec
cmp
pop
in
add
mov
test
enter
lahf
sub
pushf
pushf
pop
pop
xchg
push
mov
gs
mov
mov
add
or
in
popa
xchg
cltd
mov
in
inc
push
in
notl
inc
xchg
into
insl
shlb
mov
std
sub
out
jecxz
sbb
mov
inc
into
pop
mov
sub
xchg
idivb
outsl
xor
cmp
xlat
jmp
out
je
adc
std
out
jle
popf
cltd
je
or
adc
je
icebp
sbb
mov
sahf
xchg
cltd
fldl
lds
ret
sub
pop
mov
and
lcall
sahf
mov
into
adc
inc
fidivs
mov
sti
cmp
sub
xor
adc
imul
cmp
inc
jmp
push
mov
inc
sbb
je
ss
jnp
out
mov
cwtl
insb
xor
dec
scas
adc
push
movsb
js
sarb
leave
fisubrs
std
fst
ficomps
inc
fisubrl
leave
ret
in
enter
mov
aas
and
popf
and
in
fidivl
jg
adc
jl
or
addr16
movsl
dec
or
mov
div
enter
pushf
mov
lods
cld
or
mov
inc
sub
insb
je
and
pop
mov
mov
roll
pop
frstor
int3
jo
popa
iret
test
mov
jnp
scas
lock
cmp
mov
sbb
pop
inc
into
mov
cltd
icebp
dec
gs
nop
rcll
inc
or
ds
int
mov
cltd
mov
xor
adc
repnz
mov
in
data16
or
outsl
repnz
cmpsl
and
rcll
jle
pop
insl
ret
mov
dec
pop
fcompl
test
adcb
iret
push
push
xor
fsubs
or
mov
fisubl
cmpsl
pop
ret
cmp
cmp
xchg
imul
lock
mov
sbb
icebp
std
or
sub
push
test
jl
push
inc
cmpsl
adc
inc
jmp
inc
xchg
in
in
out
lods
js
mov
fmuls
mov
comiss
mov
aas
mov
xlat
or
mov
mov
and
sbbl
mov
and
popf
ds
xor
push
rolb
cwtl
sbb
sti
pminsw
lahf
xchg
daa
and
jnp
mov
fisttpll
pushf
jae
push
cmp
aad
push
xor
pop
outsl
and
pushf
cmpsl
dec
pop
cmpsl
fldl
pop
adc
jle
adc
mov
mov
jne
add
push
fisttpl
imul
cmpsl
or
mov
jge
loop
push
inc
or
ja
out
mov
insb
cmpsb
adc
frstor
pusha
arpl
enter
mov
or
sub
into
lods
inc
int
sbb
xchg
mov
and
leave
in
fdivs
xor
or
inc
cltd
or
clc
lahf
xor
pusha
flds
loopne
sbb
imul
jecxz
int3
cmp
scas
stc
arpl
imul
mov
fmull
mov
pop
xchg
push
loope
test
and
fwait
jg
push
leave
repz
aam
inc
add
jg
pop
in
gs
scas
mov
pushf
in
cmp
inc
sbb
pop
dec
jno
mov
icebp
sbb
dec
popa
inc
inc
inc
and
fldt
fldenv
and
popf
icebp
adc
es
cld
andb
mov
sub
and
scas
dec
dec
push
stos
jecxz
dec
out
cld
addl
ja
pop
dec
mov
shrl
repnz
ss
cli
cmp
out
jb
sub
out
mov
inc
sub
outsb
xchg
ja
pop
mov
mov
shll
sbb
lcall
clc
in
xchg
mov
out
jne
cmp
mov
test
jb
adc
add
ljmp
sub
sub
and
jmp
mov
push
jge
jno
cmp
dec
mov
mov
daa
push
js
sub
addr16
mov
mov
sub
ljmp
cli
inc
pop
mov
out
mov
jno,pt
int
mov
inc
daa
mov
and
sbb
decb
enter
in
rcll
pop
mov
jae
nop
ss
aaa
mov
pop
js
cltd
sub
sti
out
cmp
add
push
cmp
cmp
cli
jp
lret
notl
sbb
in
out
repnz
xor
add
ret
div
enter
xor
mov
lea
cltd
fcoms
xchg
test
mov
nop
scas
or
push
fisttpl
sbb
mov
push
pop
scas
out
push
outsl
xchg
xor
mov
sbb
xor
mov
movl
out
mov
decl
pop
outsb
cmpsl
iret
mov
ret
sbb
push
jbe
out
adc
cmp
mov
mov
mov
out
fidivs
das
lret
loopne
mov
or
mov
shlb
xor
mov
pop
fucomp
gs
test
push
xor
clc
jg
ds
sub
ja
add
mov
jae
cltd
mov
mov
leave
cmp
mov
cmpsl
ret
popa
movsb
mov
push
mov
xor
lea
outsl
icebp
cmc
popa
rorb
xor
dec
sbb
in
sub
pushf
pop
mov
lret
xor
int
mov
sbb
or
pop
mov
mov
add
or
mov
jle
stc
xor
add
sbb
xorl
lret
jbe
jno
repz
lret
fld
dec
mov
inc
pop
cmp
les
addb
in
loopne
jecxz
es
xor
adc
test
repz
vxorps
out
cmp
nop
pop
mov
sti
or
jnp
cmp
xchg
ja
pop
lods
adc
jmp
addr16
pop
fdivrp
gs
add
add
nop
es
pop
sub
jmp
test
test
scas
or
lret
or
in
sbb
cmpb
je
cs
xchg
out
jmp
or
or
adc
pusha
cmp
enter
add
incl
ffree
test
cmp
jo
aas
mov
imulb
dec
cmp
cli
inc
insl
popf
adc
dec
xor
ja
in
mov
pop
xchg
or
cmp
jno
sbb
test
adc
movsl
jg
add
test
sbb
fwait
mov
pop
jnp
jb
lock
fwait
movsb
jg
cmpsl
test
insl
fisubs
insl
aas
push
and
out
int3
add
int3
adc
add
fildl
inc
jg
out
scas
push
dec
lcall
lods
jle
stc
and
lahf
add
orl
xor
jno
mov
shr
xor
ficompl
ficoms
insl
pop
adc
gs
call
push
adc
push
xchg
mov
out
cltd
es
jns
push
mov
or
or
cmpsl
or
jecxz
loop
sti
push
rol
test
jle
outsb
jl
dec
xchg
jl
pop
dec
jae
sti
orb
jecxz
pop
jbe
leave
imul
or
dec
stc
sub
shll
aas
test
sbb
cld
into
adc
in
sub
in
pop
addr16
inc
cmpsl
shlb
sahf
inc
xchg
pusha
jno
into
xor
hlt
test
popa
dec
out
push
ljmp
pop
popf
and
out
sub
push
mov
mov
mov
mov
outsl
jecxz
push
lods
push
mov
mov
adc
cmp
ja
js
dec
int
jb
adc
shrb
push
stos
adc
push
fstpt
leave
mov
or
repnz
negl
adc
cmp
aas
inc
mov
pop
push
or
test
loop
and
psrld
dec
in
fs
mov
push
mov
pop
aaa
or
loope
sub
repz
outsb
test
arpl
ljmp
xor
lds
jg
sbb
in
btrl
cmp
scas
rorl
fimuls
sbb
lock
jb
pop
das
mov
hlt
push
sbbb
dec
aam
push
and
std
jno
daa
xchg
loope
movsl
inc
fistpl
dec
shr
xchg
rolb
sbb
rcrb
test
jo
jmp
mov
iret
inc
lret
lret
jmp
lea
adc
shll
aad
aam
loopne
lahf
xchg
push
arpl
jbe
xchg
pop
test
xchg
jbe
out
leave
xor
int
add
fs
ss
xchg
int
jbe
nop
dec
roll
add
mov
cmp
jge
pop
loopne
cwtl
dec
lret
lret
pop
cli
inc
je
dec
push
fwait
sbb
mov
xor
sub
dec
scas
ss
push
mov
cmp
push
aas
out
sbb
lahf
in
jmp
jb
and
jl
adc
ja
cmp
pop
imul
mov
les
cmc
insb
mov
lods
lods
icebp
cmpsb
ret
icebp
or
lock
inc
add
cmp
sbb
mov
xchg
and
icebp
das
iret
ret
xor
fisubs
add
xor
or
mov
data16
arpl
and
stc
rorl
lock
or
stos
into
xor
mov
js
adc
test
pop
faddp
cmp
inc
or
sbbl
scas
inc
sbb
add
fcmovbe
hlt
movsb
fbld
mov
into
mov
inc
outsl
push
scas
xlat
and
dec
push
clc
repz
test
int
outsb
int3
sub
adc
jb
sub
cld
add
insl
jne
aad
push
adc
repz
or
js
nop
pop
clc
stos
jno
lret
pop
in
inc
and
movl
ja
push
xor
sub
push
add
sbb
iret
mov
cmp
jo
in
add
in
movb
pop
outsb
fnstcw
jae
mov
inc
loop
xchg
mov
aam
add
int
and
xchg
js
jg
in
jno
in
into
popa
xchg
dec
das
or
dec
inc
pusha
out
dec
sti
lods
sbb
sub
imul
clc
jbe
inc
xchg
push
std
sub
adc
imul
int
sbb
lcall
in
ja
gs
movsl
std
outsl
jbe
or
ljmp
sub
out
stos
lock
xlat
adc
adc
mov
adc
and
insl
mov
cmp
push
xchg
jecxz
mov
movsb
mov
leave
fidivrl
jg
adc
rorl
pop
jp
push
jno
sub
aad
enter
cld
sub
ficomps
fiadds
clc
nop
cld
loop
push
mov
sbb
in
mov
pop
jnp
inc
lds
mov
loop
out
test
std
cltd
dec
bound
pop
mov
cmp
dec
cmp
shrl
cmp
xchg
jb
pushf
fcompl
mov
data16
xchg
jg
jb
lock
xchg
jo
cmpsb
add
testb
das
sub
push
imul
lods
and
push
adc
jg
dec
out
jb
call
adc
shrl
sbb
lret
push
mov
pop
adc
mov
adc
push
in
addb
loopne
lods
mov
call
stc
cmp
or
push
cmp
mov
into
sub
in
jo
sbb
movsl
and
pop
mov
xor
sahf
lods
das
cmp
fnstcw
bound
call
insb
rcr
add
pusha
xchg
fists
sahf
cwtl
sbb
inc
adc
orb
mov
cmpsl
in
imul
out
mov
jnp
push
sub
lods
or
leave
adc
xchg
sub
sti
adc
sub
stos
mov
lret
sti
cltd
rclb
ss
add
hlt
jecxz
push
pushf
negl
lds
sti
sub
movsl
outsl
pop
dec
andb
dec
sbb
clc
sahf
pop
adc
pop
lods
shrl
dec
pop
outsb
outsb
push
add
mov
ljmp
adc
push
mov
mov
leave
jmp
out
stos
inc
fcmovnb
in
inc
stos
sub
push
pop
sub
xchg
in
lahf
sub
je
sti
cmp
enter
test
in
fcomps
inc
repz
cmp
mov
cmp
mov
dec
jge
aas
adc
cmp
dec
lock
inc
outsb
and
xor
out
jno
xchg
jnp
fstps
xchg
scas
int
cmp
js
jae
out
lea
test
and
lret
cmc
or
or
lret
btc
or
mov
mov
mov
inc
sub
xchg
dec
adc
shr
andl
popa
push
fisttpll
sub
cli
test
shrl
lds
rorb
gs
jecxz
addr16
cli
repz
outsl
repz
ret
and
shrl
pop
out
imul
sbb
stos
stc
push
or
xchg
xchg
sub
push
or
push
daa
mov
dec
in
xor
jle
or
in
xchg
cmp
pop
or
ret
add
scas
jp
addr16
xor
adc
and
dec
adc
dec
lcall
dec
cltd
inc
fadd
out
lahf
shlb
jmp
ret
in
nop
mov
cmp
pop
les
jo
mov
in
xchg
or
in
cmp
imul
or
cmp
mov
and
add
push
add
sti
pop
iret
mov
jge
mov
xor
push
pop
mov
jne
daa
pop
sbb
inc
out
daa
pop
jae
popa
or
pushl
inc
pop
pop
aas
je
rclb
ret
adc
out
imul
adc
inc
sti
lock
mov
xor
cmc
mov
fdivs
push
and
jne
cmc
lcall
and
push
jl
mov
shrl
or
xor
adc
mov
cmp
cmpsb
pop
movsl
fisubs
arpl
outsl
shll
mov
xlat
xor
xor
sti
jb
std
loopne
pop
inc
imul
xchg
pop
sbb
enter
mov
ss
pop
popf
in
xchg
out
pop
pop
xchg
loopne
scas
mov
lcall
jnp
mov
dec
roll
rorl
push
push
inc
adc
add
xchg
fisubrl
xchg
shlb
jo
adc
clc
mov
mov
mov
les
xlat
jmp
and
sbb
mov
push
push
sbb
lret
pop
scas
movsl
push
pop
fcomps
lcall
test
cmp
fstl
jl
add
cmp
pop
mov
or
cmp
std
mov
jae
and
int
fldl
lock
insl
xor
mov
cmp
test
mov
cld
cmp
mov
inc
cmpsl
ljmp
repnz
mov
cmp
cmc
push
mov
sbb
in
sahf
push
ret
mov
dec
lods
pop
adc
jmp
sbb
ja
lcall
lret
push
iret
jmp
hlt
push
ret
mov
inc
lea
test
or
orl
mov
jge
ljmp
mov
lret
mov
jbe
adc
inc
add
push
dec
mov
loope
repnz
or
insb
cmpsb
sbb
popa
mov
add
inc
or
test
outsb
repz
and
add
adc
pop
mov
test
je
sbb
push
call
mov
lods
mov
cmp
into
and
loope
dec
insb
adc
or
in
imul
nop
sub
inc
inc
out
jmp
dec
arpl
cmpsl
mov
lods
sarl
mov
or
mov
mov
in
adc
lea
in
adc
mov
outsl
loop
bnd
or
jl
adc
xor
adc
outsb
sub
imul
push
test
or
mov
mov
pusha
jne
jno
dec
cmp
dec
sbb
add
sti
pop
jnp
and
lods
mov
adc
and
clc
lahf
mov
fmull
jne
push
ljmp
movsb
add
xchg
cltd
negl
jbe
push
cmp
daa
mov
xchg
test
insb
lea
cmpsl
loope
ret
xor
push
mov
push
add
mov
repz
test
or
or
stos
add
lods
lahf
pop
add
jecxz
push
sbb
fincstp
mov
sti
mov
dec
daa
mov
test
jbe
pop
inc
jp
inc
rolb
outsl
mov
shlb
out
loope
pop
sti
jecxz
mov
jmp
aad
rcrl
mov
test
mov
daa
insl
mov
add
mov
mov
jo
fidivs
movsb
push
fdivs
fwait
xchg
rol
mov
cmp
push
adc
leave
mov
scas
pop
scas
jb
daa
xchg
push
adc
mov
sbb
pop
rol
add
pop
push
mov
ret
jmp
mov
adc
add
sbb
pop
into
inc
xchg
rol
loope
add
lods
sbb
jno
jno
xor
mov
xor
mov
and
ja
mov
jmp
inc
xchg
mov
cld
sub
lret
pop
stos
mov
shlb
into
mov
nop
add
rcrb
xchg
cwtl
in
jo
jp
sub
push
repnz
divl
add
lods
test
mov
int
mov
ret
out
inc
in
mov
sti
fdivrs
mov
jae
mov
push
pop
adc
inc
sbb
lea
aaa
fldenv
lahf
or
mov
data16
jmp
repnz
jl
stc
mov
jno
in
pop
daa
pop
pop
in
push
pop
jg
dec
xor
popa
push
xchg
lds
pop
insl
into
aad
mov
sub
mov
int3
mov
in
push
sbb
and
inc
push
jg
stos
fs
mov
sbb
cmp
jp
ret
mov
mov
cmp
bound
enter
xchg
andb
mov
adc
and
les
scas
add
push
movsb
and
icebp
daa
cld
in
out
repz
roll
cmp
stos
or
in
push
test
mov
arpl
adcl
out
or
roll
mov
push
mov
mov
pop
vandps
sub
pushf
dec
sub
repnz
and
xchg
sub
fucomi
ret
cmp
int
nop
push
cmc
in
imul
inc
sbb
movsl
sub
repnz
inc
push
cld
int
add
in
pop
xchg
mov
xchg
negl
jle
inc
mov
sbb
pop
rcrb
loope
and
push
pop
in
mov
jle
mov
movsb
sbb
pop
sub
fistps
mov
loop
cmp
rol
dec
scas
addl
sub
inc
cmp
or
mov
test
or
out
cmc
movsb
or
pop
pop
das
inc
test
call
outsb
or
xor
test
divl
add
push
data16
dec
scas
cmp
push
cld
insb
insb
out
push
int3
add
push
sub
aas
arpl
pop
push
adc
mov
mov
or
push
arpl
add
insb
or
and
jecxz
fisttpl
insl
jne
movsb
xor
adc
hlt
mov
pop
cs
mov
cmp
mov
push
inc
pop
insl
into
adc
imull
sahf
int
jbe
pushf
sbbb
nop
jmp
insb
jg
xchg
mov
rcrl
cltd
fistpl
add
inc
adc
mov
lds
push
xchg
xchg
add
aad
cltd
jl
inc
pushf
cmpsl
mov
jns
pop
xor
stos
cmp
in
cmp
push
mov
not
sbb
ja
std
adc
je
push
dec
mov
sbb
xchg
push
pop
xlat
mov
push
std
or
pop
dec
stos
push
mov
mov
mov
iret
mov
sti
stc
xchg
mov
test
cmpsl
pop
dec
dec
cmp
pop
cmp
push
aam
nop
adc
cli
rcl
fninit
scas
xorl
push
mov
jno
sbb
aam
jp,pt
adc
and
add
inc
add
push
insb
fldt
mov
pop
mov
mov
mov
lcall
sbb
dec
cmpsb
jle
pop
adc
jg
mov
xchg
cmp
out
loope
std
testl
cmp
pop
das
js
and
imul
out
mov
pop
jb
movb
jecxz
mov
hlt
jge
or
lahf
pop
arpl
imull
rcrb
xchg
test
sbb
pushf
adc
or
inc
cwtl
add
rcrl
xchg
add
jmp
add
subl
sbb
rolb
mov
cltd
stc
out
ljmp
mov
pop
dec
mov
xor
mov
std
scas
mov
xchg
inc
inc
mull
inc
outsb
push
aas
lret
arpl
mov
add
dec
lods
ret
int
fldcw
mov
cmpsl
and
pusha
sti
jo
fcmovbe
in
loop
push
xor
aaa
pop
or
push
adc
enter
int3
repnz
adc
enter
xor
sub
or
and
push
sar
pop
cld
imul
xchg
xchg
insb
and
dec
adc
dec
hlt
leave
xchg
add
jae
dec
mov
mov
sbb
mulb
ja
repz
pop
mov
insb
lcall
rcrb
divl
inc
xchg
adc
ss
pop
test
push
icebp
add
popf
aaa
add
cld
sub
adc
add
ret
insb
pop
mov
test
add
mov
add
adc
ja
ror
or
enter
mov
cmpsb
shrl
js
test
jle
subl
jle
mov
cltd
jecxz
push
ja
cli
loop
daa
dec
dec
ljmp
sub
stos
jb
js
sbb
push
outsb
pushf
xchg
push
or
sbb
xor
pushf
mov
imul
xchg
cwtl
push
push
sub
and
pop
test
dec
dec
push
inc
and
push
ljmp
shl
mov
cli
das
mov
ja
pop
in
jns
cmpsl
imul
fildll
lock
and
xor
cmp
test
pop
int
rorl
mov
mov
mov
xchg
sub
xor
sbb
sub
cmp
push
cmpsb
mov
inc
mov
jecxz
mov
stos
add
test
xor
pushf
jp
mov
call
aaa
or
push
xchg
dec
push
ss
xor
xor
pop
int
mov
inc
mov
jnp
xchg
inc
paddw
in
mov
es
hlt
scas
sbb
jg
sbb
shr
push
enter
cltd
aaa
jbe
imulb
fs
mov
mov
and
push
ss
leave
inc
add
push
mov
fdivr
pop
sbb
sub
xchg
adc
loopne
sub
pop
in
inc
and
popf
mov
es
test
jb
not
push
adc
xchg
or
push
dec
jle
stc
and
repnz
mov
out
adc
lret
xor
movsl
out
pop
test
scas
fwait
movb
movsl
add
fcompl
js
insl
mov
jg
add
lea
cwtl
leave
add
cmpl
repz
adc
sbb
popa
cmpsb
fmul
jmp
xchg
into
cmp
out
es
cld
inc
mov
popf
jmp
or
xchg
dec
pop
rorl
mov
pop
mov
push
jnp
std
mov
jmp
pop
pop
xchg
inc
push
sbb
mov
cmc
lret
adc
leave
icebp
and
inc
push
jg
mov
pusha
push
pop
push
xor
xchg
into
jae
ja
cmp
xor
mov
aam
sub
add
shlb
ret
lret
leave
and
lcall
xlat
mov
shll
dec
push
sbb
and
loope
imul
in
js
les
xor
nop
icebp
add
lds
mov
outsl
dec
cltd
icebp
sti
stos
in
fcoml
cltd
sbb
add
add
leave
jge
arpl
fmull
xchg
mov
add
cmp
xchg
mov
loopne
pop
xor
pop
lods
aaa
xor
cli
mov
pop
and
pop
test
pop
xlat
loope
add
js
mov
testb
out
dec
lahf
adc
imul
lods
or
or
pop
out
mov
ss
int3
mov
aaa
mov
fistps
push
out
dec
test
or
dec
imul
jl
mov
mov
and
je
push
orb
push
fcompl
xor
out
pop
pushf
pop
outsl
insl
lods
dec
pop
pop
fwait
jmp
sub
gs
cmp
inc
cwtl
xchg
fistpl
ja
sub
iret
cmp
xlat
imul
mov
mov
mov
in
fbstp
jnp
and
adc
mov
mov
or
jg
daa
fstps
ffreep
lahf
push
fidivrl
addr16
xchg
pushf
mov
adc
mov
orl
fiaddl
cmp
out
mov
push
dec
cmp
mov
mov
aaa
mov
aaa
jne
leave
or
out
lock
sub
rclb
int3
dec
pop
fbstp
test
int3
or
xor
dec
inc
outsl
outsb
enter
testl
ja
jne
test
sbb
adc
jmp
imul
ret
and
pop
add
popa
mov
mov
xchg
repz
std
stc
fisubrl
sbb
and
das
jnp
push
cmc
lock
jge
push
sub
cmpb
xor
ret
orb
fwait
sbb
mov
and
test
pop
fldcw
jmp
clc
jns
cmp
out
jb
xor
cmp
adc
pop
mov
jle
xchg
inc
scas
insb
add
jp
add
xchg
insl
adc
push
pop
mov
jae
pop
ret
ss
jo
test
jge
push
dec
and
mov
pop
mov
inc
in
lcall
fisubs
rcl
insl
push
cld
jns
out
ss
dec
cmpl
outsl
paddw
pushf
scas
jne
divb
lahf
push
adc
insl
loop
inc
cmp
rcrl
mov
mov
rcrl
mov
icebp
sub
hlt
push
sbb
paddsw
outsl
jge
cmpl
dec
cld
mov
movl
xchg
mov
mov
outsl
adc
mov
xacquire
dec
imul
lea
subl
lahf
mov
test
xchg
xor
mov
add
jns
in
sbb
nop
adc
adc
loop
mov
xor
ds
xor
scas
xchg
out
aas
push
jno
ret
push
pop
aam
mov
xlat
out
inc
mov
mov
sbb
push
xor
and
pop
out
jl
pop
push
mov
cwtl
rolb
dec
inc
push
mov
lea
in
aam
repz
inc
idivl
pushf
stos
mov
sahf
add
or
cmpsl
xlat
mov
adc
hlt
push
mov
aas
mov
xchg
mov
cli
lahf
mov
sahf
push
mov
mov
daa
loop
xchg
mov
cmp
je
or
cmc
ds
add
ficoms
aas
or
repz
dec
jns
loop
mov
dec
jbe
loop
cld
cmp
je
mov
pminsw
arpl
mov
fcom
ret
es
mov
push
and
cmp
xchg
push
cld
xor
sbb
cmp
les
inc
in
loopne
sub
cmc
sbb
jp
jg
lahf
push
cmpsb
dec
je
or
adc
mov
push
cld
ret
les
lcall
call
xchg
test
adc
sbb
cmp
dec
scas
fsubs
nop
call
ds
pushf
lock
inc
out
aas
xchg
xchg
push
or
sti
push
fcomps
pop
adc
mov
push
push
pop
rorl
ljmp
rclb
or
pop
xchg
in
in
into
gs
nop
add
cwtl
mov
mov
fdivrl
cmp
pop
cmc
dec
push
das
sar
shrb
mov
je
and
ja
jns
jle
push
stos
in
jle
mov
cmova
cwtl
jmp
cli
dec
hlt
int3
mov
rol
rorl
cmp
aam
and
pop
dec
adc
cmp
test
inc
add
in
sub
icebp
jae
and
or
push
adcl
mov
les
pop
out
fwait
outsl
and
pop
adc
sub
nop
pushf
ljmp
push
jo
inc
push
in
lock
cmp
mov
pop
xchg
xor
div
sbb
es
xchg
jo
pushl
jnp
sbbb
nop
out
mov
in
or
test
jns
into
sub
fsubrs
xor
lahf
pop
xchg
mov
mov
inc
or
leave
sbbb
psubsb
mov
and
repz
mov
js
xor
mov
pop
call
add
xor
pop
test
ja
mov
xchg
fnstsw
sbbl
or
lret
aaa
dec
cld
dec
sub
mov
xor
or
jmp
xor
xlat
add
mov
in
inc
pop
sahf
lock
add
popf
jg
inc
and
sub
mov
inc
xchg
insb
and
xor
pusha
fisubrs
fcmovnbe
scas
das
mov
in
jl
jbe
aad
les
stos
pop
mov
inc
xor
and
cld
pop
mov
adc
dec
std
sbb
inc
dec
arpl
das
out
cmpb
inc
stos
cld
xor
cmovl
adc
roll
sbb
add
mov
shll
xor
mov
test
adc
loope
pushf
gs
sub
and
int3
outsl
int3
cmpsb
movsb
lds
div
pop
sub
inc
jb
jne
pop
jbe
pop
jbe
movsb
cltd
insl
xchg
test
imul
push
out
aam
or
xchg
aad
mov
imul
jge
nop
cmpb
daa
inc
dec
test
adc
adc
fldt
lods
sbb
xor
mov
xor
out
in
inc
jbe
vpcmpgtw
mov
shrl
jo
sahf
aam
nop
gs
ret
lds
mov
lock
push
inc
adc
pop
mov
mov
fidivrl
jg
ret
pop
push
sub
and
push
inc
imul
nop
sbb
mov
adc
out
push
jbe
inc
loop
cmpsb
xor
dec
and
adc
fs
mov
imul
jae
sbb
dec
inc
adc
xor
jl
mov
sub
ja
fcoml
mov
mov
mov
jne,pn
cltd
jle
inc
aad
mov
adc
adc
stc
mov
out
xchg
jmp
cmc
pop
cli
test
mov
jnp
fcmovu
stc
sub
inc
lcall
cmpsb
dec
arpl
sbb
lods
into
pop
xchg
pushf
push
lods
xor
das
xchg
call
orb
cmp
neg
xchg
pop
or
arpl
jp
decb
xchg
in
xchg
sub
lods
je
pushf
inc
adc
dec
add
in
xchg
test
mov
inc
pusha
xchg
je
repz
mov
lods
or
inc
or
iret
add
inc
stos
inc
addl
add
inc
ret
in
or
js
std
int
add
nop
sub
ds
xchg
divl
add
aam
mov
xor
shl
divb
dec
aaa
arpl
imul
push
test
jbe
cld
pop
xchg
mov
lods
clc
loop
mov
rol
popf
aam
jl
cld
popf
pop
inc
dec
or
mov
inc
inc
fidivrl
mov
inc
lds
add
add
add
push
mov
aaa
xchg
into
arpl
mov
repz
daa
cmp
ret
xchg
loopne
scas
push
adc
adc
pop
ja
int
xlat
lods
push
mov
sahf
xchg
ficoml
sbb
and
scas
fcoml
lock
pop
mov
ja
cld
mov
push
pop
in
scas
fistl
fbstp
pop
cmpsl
lahf
sbb
mov
cmc
imul
cmpsb
inc
clc
push
out
adc
icebp
inc
hlt
movsb
sahf
loop
push
xor
arpl
jnp
sbb
mov
outsl
aam
cmp
insb
aam
xchg
mov
repz
outsl
js
jb
mov
cmp
js
clc
cmp
and
outsb
inc
int3
xchg
cmp
xchg
xor
je
mov
stos
sbb
push
fdiv
pop
lods
dec
mov
fistpl
mov
leave
es
inc
jge
xor
jns
push
xchg
push
loope
int3
jge
enter
insb
adc
dec
adc
imul
push
jnp
stc
cmp
jnp
mov
xchg
mov
jae
or
std
mov
push
xor
add
loope
dec
jecxz
mov
dec
shlb
stos
shrl
xchg
out
fwait
sbbb
push
push
sbb
jbe
pop
ja
inc
dec
inc
or
adc
xor
sub
adc
adc
loopne
pop
push
jnp
jns
push
xchg
adc
mov
loope
lods
jae
ret
je
mov
jns
stos
es
push
fldenv
mov
ret
pop
mov
xchg
fs
mov
fsubl
cmpl
mov
clc
add
push
int3
iret
fwait
out
out
jecxz
pop
jne
cmpsb
ss
cmp
test
out
std
bound
decl
aaa
add
lret
in
leave
push
or
ret
pop
ret
mov
mov
cmpsl
pop
test
fnstenv
sti
pop
jmp
or
out
dec
rcll
rorl
xor
inc
mov
dec
inc
push
push
aad
inc
mov
inc
test
aaa
jno
jb
gs
dec
lret
faddl
push
mov
xlat
push
loop
dec
and
cmpsl
xchg
mov
ljmp
lcall
or
adc
push
pushf
sahf
fs
push
jno
data16
in
mov
cltd
lret
pop
or
adc
cmp
lret
andl
push
jle
xor
ss
andb
sub
jecxz
stos
insb
push
lea
cmp
inc
mov
repz
pushl
into
cmp
pop
sub
shlb
test
in
jp
lods
jo
adc
mov
mov
mov
push
sbb
ja
xor
das
js
xchg
lret
repz
lahf
imul
mov
cmp
mov
sbb
jmp
inc
imul
andb
mov
cmp
mov
dec
test
mov
out
xchg
inc
sahf
or
sbb
adc
inc
jl
fmull
mov
xor
repnz
jle
xchg
inc
je
mov
mov
aaa
cmp
push
xchg
mov
shlb
movsb
out
outsl
mov
shll
adc
add
popa
test
in
addr16
loop
mov
decl
xlat
xor
jnp
iret
iret
cmpsl
xor
imul
gs
shl
mov
gs
cmc
imul
xchg
push
inc
cmp
inc
test
dec
pop
cmpsl
cmp
test
jmp
xlat
ret
mov
pop
mov
xlat
fs
jecxz
mov
out
sub
ss
sbb
popa
adc
filds
ret
or
call
adc
mov
cmp
fdivrs
mov
pop
out
xchg
shrl
mov
leave
call
test
sti
pop
push
incb
outsb
fsubr
lret
in
insl
cs
lret
jne
hlt
add
mov
cmp
add
dec
aaa
mov
mov
inc
jne
in
in
push
mov
mov
pop
dec
inc
xchg
jne
outsb
inc
leave
inc
pop
or
pop
cmp
shrb
dec
sub
add
dec
mov
jno
fisubrs
sbb
xor
mov
push
cmp
gs
das
out
push
insl
call
daa
dec
rclb
sahf
dec
test
out
cmpsb
in
xor
mov
jb
dec
rorb
push
imul
mov
sub
ja
pop
scas
movb
int
sbb
in
popf
xor
adc
gs
mov
jle
xor
iret
jb
push
ljmp
stos
jo
mov
adcl
jb
inc
xlat
jno
sbb
jne
xor
xor
repnz
test
add
sbb
push
jno
add
data16
sahf
mov
rcr
out
cmc
mov
imul
cmp
inc
xchg
adc
dec
cld
mov
mov
lahf
pop
cmp
cld
out
sbb
pop
or
xor
test
xchg
mov
hlt
xlat
rcrb
call
xor
pop
mov
scas
xchg
insl
xor
jns
loop
pushl
pop
xchg
aaa
aas
or
les
xchg
sub
xchg
mov
pushf
aaa
add
in
lcall
jmp
pop
xchg
mov
cmp
int3
and
cltd
push
cmpsb
mov
inc
and
pop
stos
test
cmp
pop
lret
add
ja,pn
loop
movsl
cld
jnp
sub
jo
add
clc
lret
or
sar
pusha
mov
push
mov
ja
shr
sub
leave
dec
cmp
mov
push
jecxz
push
ja
sub
clc
mov
sahf
dec
cld
js
xchg
xchg
lods
sub
test
mov
adc
enter
testl
cwtl
xchg
ficoms
aad
xor
cmpsl
jp
xchg
icebp
sub
jne
mov
cltd
rolb
test
pop
test
mov
repz
mov
loope
mov
push
sbb
aam
cmp
mov
jns
icebp
adc
std
jmp
iret
ljmp
ret
add
sbb
mov
pushf
xchg
jp
push
lods
mov
icebp
in
cmp
cwtl
xlat
jns
jge
and
cmp
ljmp
mov
ss
mov
mov
pop
or
push
jbe
ret
add
shl
sub
imul
std
lea
in
sub
movsl
push
pop
sbb
ficompl
mov
jge
addr16
mov
pop
insl
shll
mov
inc
shrl
fldenv
aas
ret
push
xlat
outsb
xchg
pop
ret
sbb
addr16
jg
dec
or
int3
add
pusha
cs
jmp
or
test
notb
and
xchg
inc
adc
mov
inc
xchg
repz
out
xchg
jl
cmp
imul
adc
pop
inc
or
movsb
movsl
push
mov
and
cmp
pop
pop
xor
scas
int3
xor
in
push
pop
bound
ret
movsb
cmp
outsb
ret
and
pop
pop
mov
inc
out
add
mov
xchg
adc
in
sbb
nop
add
testb
add
out
adc
xchg
ljmp
mov
pushf
mov
js
dec
cli
mov
loopne
ret
test
stos
pop
mov
dec
and
fs
mov
mov
int
mov
ja
jbe
push
lcall
popf
mov
int
and
cwtl
jne
aad
ss
push
mov
cld
stos
mov
out
pushf
dec
push
xor
xor
mov
fldt
movsl
dec
ja
push
mov
and
xchg
mov
push
sbb
adc
mov
push
loope
cwtl
mov
sbb
add
pop
inc
lods
lock
js
inc
mov
cmp
mov
sbb
add
cmp
ret
lret
or
push
mov
jl
and
in
push
sub
test
pop
push
lods
aad
xchg
add
nop
push
fmuls
iret
mov
scas
leave
dec
mov
push
mov
adc
sub
ja
jnp
stc
xor
cmp
push
mov
and
push
gs
add
jmp
dec
or
push
rcll
sbb
jo
lret
adc
test
mov
push
lods
add
popa
ljmp
push
in
mov
pop
scas
jge
call
xchg
xor
gs
sbb
adc
sub
in
mov
movsl
mov
aad
push
sub
or
jecxz
xchg
mov
jae
stc
mov
out
fnstcw
xchg
cmp
adc
sbb
pop
in
movsl
xor
add
arpl
idivl
cwtl
add
in
addr16
sub
into
in
insb
and
mov
xchg
inc
sbb
mov
jg
and
mov
repz
inc
xchg
push
repz
inc
lods
sarl
data16
dec
jge
sub
cmpsb
mov
xorb
mov
imul
arpl
in
cs
adc
testb
or
xlat
fstps
mov
and
cmpsb
and
in
xchg
mov
out
sbb
sbb
or
frstor
push
jge
filds
or
add
push
lret
mov
adc
addb
loopne
mov
inc
push
cmp
push
jle
lcall
aam
xor
sub
mov
testl
decl
sbb
sahf
mul
add
cltd
leave
idivb
mov
lret
push
pop
xor
fwait
mov
xor
ds
and
lcall
in
jecxz
adc
jae
jo
fnstenv
mov
mov
mov
cwtl
hlt
sub
or
sbb
adc
sbb
pusha
repnz
xor
xchg
push
mov
or
add
pop
xor
adc
insl
xchg
push
xchg
jmp
sbb
je
rcll
inc
dec
or
shlb
push
int
out
repz
lds
xchg
mov
std
pop
sbb
cmp
nop
inc
cs
adcl
mov
lret
mov
mov
mov
or
gs
or
xchg
mul
aam
out
enter
xchg
dec
mov
xchg
mov
or
stc
outsl
notb
push
xlat
jno
mov
scas
and
mov
xor
ljmp
add
dec
add
stos
adcb
add
cltd
add
xor
pop
adc
xchg
cwtl
jbe
cmp
daa
icebp
test
clc
lea
dec
rol
clc
fsts
outsb
jmp
lcall
in
inc
rol
pop
or
scas
mov
add
nop
mov
js
adc
mov
mov
fs
xchg
loope
push
and
decl
jl
clc
or
shll
ret
mov
inc
pop
mov
gs
ds
adc
call
cmpsl
jno
cmpsb
inc
lcall
mov
adc
sub
dec
mov
jge
std
sbb
add
pushf
ror
test
insl
mov
mov
cmp
push
pop
fstpt
and
mov
nop
dec
xor
bound
adc
data16
scas
mov
adc
mov
dec
movsb
add
cmp
lea
rcrl
push
push
lret
lcall
mov
xor
aam
rcl
pusha
add
cmpsl
sbbl
mov
in
add
scas
sarb
call
jmp
ret
mov
shll
inc
pusha
xor
push
xchg
cmp
mov
dec
outsb
adc
inc
insl
fwait
in
pop
push
lret
mov
adc
out
test
adc
inc
scas
clc
xor
push
jp
pop
or
sub
scas
test
jb
jle
sti
and
jp
and
gs
push
mov
inc
adc
inc
push
filds
nop
imul
rcrl
fcmovne
icebp
aam
mov
jno
jl
push
shrb
shrb
mov
pop
mov
sbb
mov
adc
std
push
xchg
push
rolb
push
scas
je
dec
fs
push
sbb
mov
out
addr16
inc
cmp
js
loopne
jmp
aaa
push
or
mov
lret
jns
mov
mov
pop
sahf
out
test
jnp
repnz
cld
in
mov
ret
jnp
inc
rolb
lahf
and
stc
rcrl
andb
shll
cmp
jge
xlat
jno
pop
ja
leave
jp
stos
cmp
mov
aaa
int
cmp
or
add
jo
movsb
and
xor
push
xor
ret
idivl
loope
shrb
jbe
or
enter
add
cld
rorb
ret
shr
inc
and
stos
jns
int3
das
pusha
in
cltd
les
jnp
xchg
jp
jnp
in
cmp
aaa
lock
lds
out
jns
cmp
je
or
arpl
push
mov
xchg
rcr
mov
fs
add
fiadds
fsubrl
int3
lea
jbe
jae
lods
mov
or
xchg
push
cmpsb
dec
push
push
sbb
push
jle
and
pop
adc
insl
mov
jns
xchg
dec
mov
pop
fsubrs
test
ds
out
bound
sbb
mov
aaa
adc
ret
push
imul
fimuls
mov
test
lods
inc
pop
cltd
aad
std
inc
imul
cmp
mov
xchg
mov
imul
inc
sbb
mov
lock
push
fwait
cltd
mov
mov
ret
push
pop
mov
out
pop
outsb
lret
jge
loope
xchg
fucomip
adc
paddw
mov
loop
in
fidivl
ja
push
xchg
fdivs
jmp
mov
cld
scas
adc
and
mov
mov
je
sbb
mulps
push
cmp
outsb
add
pop
aam
adc
andb
dec
dec
mov
mov
push
test
push
jns
cmpsb
movsl
popf
cmpsl
dec
jl
fldl
loopne
cmp
call
dec
repnz
in
out
pushf
mov
repnz
cmp
sub
ret
lock
stos
iretw
das
les
xchg
dec
bound
rcl
out
mov
or
xor
fisubrl
jbe
cmp
push
jle
sbb
mov
jge
mov
ss
fwait
mov
xchg
jecxz
data16
test
imul
jns
push
rorl
rcrl
repz
inc
aaa
or
xchg
xchg
pop
push
xor
push
cs
mov
ja
lahf
cmp
out
data16
testb
rorb
stos
ds
mov
addr16
adc
push
push
scas
movsb
add
test
iret
push
jb
push
pop
jnp
addr16
jg
mov
xor
out
mov
pop
push
sbb
cmpsb
mov
push
nop
xchg
fs
and
pop
pop
daa
inc
mov
sbb
cli
add
and
cmp
jmp
adcl
pop
rcrl
stc
mov
lods
insb
inc
pusha
pop
jbe
push
and
cmp
cmp
dec
jno
pop
mov
jb
xchg
in
mov
mov
cmpsb
ret
fninit
pop
pop
pop
cmpb
lods
xlat
ds
push
xor
sub
sbb
inc
pop
and
outsl
subl
test
shl
outsl
pop
inc
mov
mov
out
adc
iret
mov
sub
xchg
nop
mov
dec
sub
mov
fwait
or
das
scas
pop
and
or
cmp
adc
sets
int
jne
lret
pushf
data16
in
jnp
xchg
sbb
rcll
xor
cmp
xlat
outsl
inc
pusha
and
push
icebp
xor
adc
pop
jp
inc
mov
cwtl
cmp
jo
ror
cmpb
fists
dec
inc
dec
mov
shrb
int3
addr16
lds
sahf
mov
sub
and
mov
dec
mov
mov
arpl
cmp
popf
sbb
mov
xor
stc
inc
and
aad
lods
pop
jno
mov
push
shlb
rorl
xor
aaa
mov
xor
stos
and
push
cmp
lret
mov
push
xchg
pop
mov
mov
rcrb
lcall
and
push
sbb
push
add
pushf
mov
sbb
jnp
and
insb
mov
fldl
or
je
push
dec
popf
xor
fsts
filds
push
sbb
pop
mov
mov
push
adc
xchg
and
mov
movsl
cmc
iret
or
dec
inc
test
push
dec
lods
cmp
dec
lret
lods
inc
push
scas
mov
or
mov
and
das
jmp
ljmp
push
adc
lcall
fdivl
xor
jnp
cmp
add
mov
cld
std
or
inc
pop
fwait
cwtl
nop
repnz
pop
fisubs
pop
pushf
lret
into
jbe
loope
sahf
xchg
iret
pusha
cmpsl
nop
out
ljmp
adc
or
out
jg
push
dec
daa
cwtl
movsl
fnstenv
inc
fsub
xchg
add
jno
adc
push
sub
sti
pusha
loope
aad
outsl
jne
imul
test
push
adc
mov
push
sub
and
arpl
js
push
in
adc
rol
sub
aaa
or
jmp
je
leave
fcoml
inc
cli
lock
ret
ss
std
dec
pop
lcall
and
mov
ljmp
aam
pop
nop
loopne
shl
bound
int3
push
pushf
ficoms
shll
jb
add
rcl
aaa
mov
mov
dec
and
cmp
and
lret
in
jo
mov
call
roll
and
iret
into
sbb
pop
std
addb
xchg
jp
insl
xlat
jmp
cmpsl
and
mov
push
mov
out
addr16
and
mov
in
std
ja
sub
in
out
dec
push
or
mov
lcall
sub
imul
shld
jnp
in
fwait
adc
sub
and
loop
fildll
daa
inc
jnp
jmp
test
push
mov
push
mov
mov
insl
loop
adc
pop
in
leave
loop
sbb
shl
mov
sub
cmp
inc
subb
test
stos
sub
adc
inc
mov
inc
loopne
xchg
lcall
xchg
xchg
negb
pop
sub
dec
jmp
mov
sub
ds
dec
push
lcall
lahf
insl
xchg
iret
or
test
bound
shll
sub
push
push
xor
adc
dec
jmp
inc
movsb
icebp
cwtl
in
jo
imul
cs
pop
sbb
push
xor
cmp
das
jecxz
xor
lret
sbb
or
pop
push
hlt
fadds
mov
lahf
mov
icebp
cmp
push
arpl
fs
xor
mov
adc
xor
and
inc
or
cld
scas
xor
gs
ss
xchg
sbb
addr16
in
xor
aad
or
hlt
push
or
aad
nop
cwtl
adc
out
mov
aad
repnz
cmp
add
cmp
mov
inc
lret
jle
xor
jo
add
or
test
push
lret
mov
lcall
xor
lret
pop
sbb
xchg
mov
push
jmp
pop
dec
jmp
neg
pushf
jp
sahf
dec
rcll
orb
mov
stc
lret
repnz
cmpsb
rorb
cmpsl
or
xor
ss
xor
ret
and
or
add
outsl
push
movsb
xor
rorl
bound
sti
mov
hlt
push
std
in
scas
adc
aad
scas
testl
mov
ret
das
lea
adc
cmpsb
cltd
mov
jb
insb
rol
xor
or
cltd
mov
jle
mov
pop
push
std
je
mov
inc
int3
daa
sub
bound
mov
mov
jbe
stc
xor
shlb
cmp
inc
fsubr
sahf
push
jae
jne
addr16
xlat
push
inc
pop
add
and
xor
je
in
ja
xchg
cmpsb
int
add
push
fwait
jns
add
fadds
cltd
mov
lods
iret
or
fisubl
iret
dec
in
lahf
insb
stc
cmp
fcoml
mov
or
popf
mul
or
mov
or
stos
xor
cmpsb
sub
mov
das
inc
push
stos
fstl
and
jne
jbe
jle
stos
add
lahf
mov
lcall
jg
aam
adc
xor
aam
mov
jae
mov
add
xchg
ja
les
scas
xchg
mov
mov
mov
cmp
xchg
in
pop
mov
xor
dec
dec
adc
xchg
pop
or
sahf
jmp
stos
mov
aas
dec
cmpsb
or
sbb
cmp
lcall
or
cwtl
sub
pop
pop
push
adc
xchg
push
xor
adc
imul
sub
and
mov
sbb
lock
out
mov
pop
jb
arpl
cld
sbb
cmp
and
out
dec
out
test
and
jecxz
test
shll
jo
shl
jmp
inc
sbb
add
addr16
xor
popf
cmp
lret
mov
push
adc
sub
or
scas
push
out
aas
mov
nop
adc
lahf
incb
jnp
and
adc
enter
dec
xchg
adc
shl
xchg
xchg
pusha
pop
xchg
stos
call
inc
dec
sbb
scas
sbb
push
popa
adc
jne
push
shrl
das
ret
popf
mov
in
push
int
ds
jne
add
xchg
mov
pop
cmp
jae
data16
fisttpl
ja
mov
js
xor
pop
inc
clc
xlat
xorl
pushf
push
push
fprem1
ja
test
sbb
add
push
and
jo
pop
dec
pop
mov
or
mov
outsb
pop
mov
fnstenv
fldl
xchg
jnp
repz
aam
xlat
cmpsb
push
insb
addr16
cwtl
cmpsl
sub
aad
jecxz
lds
lcall
jbe
push
imul
out
pusha
xchg
or
mov
repnz
leave
sub
dec
cmp
xlat
mov
and
scas
stos
and
or
jmp
or
mov
xchg
cmp
mov
adc
aaa
stc
and
push
mov
sbbb
sub
dec
push
arpl
jnp
enter
add
inc
cmp
daa
out
sti
and
imul
mov
lcall
mov
std
fsubl
push
adc
add
push
in
imull
lods
loopne
lods
loopne
pushf
xor
rorb
push
movb
jge
in
mov
pushw
push
ja
bound
inc
cmpsb
sub
add
int
pop
imul
jbe
sbbb
out
inc
pop
sub
outsl
pushf
push
outsl
adc
dec
inc
pop
xor
pop
jne
dec
push
scas
adc
xchg
sub
scas
push
dec
inc
sbb
push
testb
xor
or
ret
sub
adc
dec
lcall
push
xchg
lcall
repnz
cmp
pop
xor
and
jge
cmp
sti
lahf
dec
cmpsl
cs
cmpsb
fists
xchg
lcall
jp
sbb
inc
xchg
mov
inc
jb
cwtl
inc
ds
stos
fwait
push
push
push
movsl
cmpsl
dec
popa
mov
scas
mov
or
popa
rclb
mov
lahf
lret
icebp
loop
fisubs
mov
pop
cmp
lahf
out
sub
ds
add
jmp
add
adc
add
and
inc
ja
pop
pushf
push
lds
fidivrs
adc
sub
mov
jne
cli
cmpsb
push
mov
cmp
cmp
int
cmp
lods
pushf
and
aad
outsb
aam
fnsave
xor
jbe
in
arpl
std
and
xchg
dec
adc
scas
lods
jnp
lock
mov
or
xor
xchg
outsb
or
xor
jae
loop
stos
mov
mov
data16
data16
fisubs
imul
mov
ss
mov
ret
mov
sbb
pop
repz
mov
dec
pop
xchg
lods
push
aad
cmpsl
repnz
bound
or
js
adc
xlat
push
sbb
pusha
push
nop
xor
or
insb
sti
inc
outsb
pop
or
mov
cmp
mov
test
fcmovnb
das
stos
repz
jnp
or
jno
inc
lcall
rol
adcb
fs
into
sbb
je
loopne
ret
mov
in
movsb
push
and
rsm
je
cs
ficompl
mov
insb
jb
fisttpl
into
fwait
dec
mov
lds
shll
sbbb
int
js
lea
cltd
stos
div
pop
mov
out
js
xacquire
lret
jae
les
push
scas
out
mov
ret
rol
xchg
clc
insl
sarl
add
sub
jno
or
shll
rcrl
into
out
mov
popa
push
ja
insl
shl
xlat
lds
addr16
fiaddl
sbb
pop
lret
mov
lock
sub
lret
and
stos
insl
fistpl
mov
cmp
add
add
fwait
dec
ret
rolb
mov
in
loopne
dec
outsb
out
pushf
xor
movb
sbb
mov
jecxz
lds
aad
insb
lods
mov
push
lret
jmp
adc
lret
mov
push
outsl
sbb
mov
jg
icebp
pop
xor
xor
push
add
mov
and
xchg
push
aaa
jle
dec
pusha
mov
ror
jp
lcall
insl
cs
dec
xchg
test
lcall
mov
ljmp
test
test
mov
mov
in
push
cli
div
fnstcw
in
jb
adc
insb
cmc
mov
xchg
push
add
dec
cmp
cmpsl
or
lcall
dec
cmc
or
test
pop
in
subb
scas
arpl
xchg
cmp
inc
sbb
loopne
dec
orl
add
mov
aad
and
sub
call
cmp
pop
hlt
jbe
lahf
fldt
cmpsb
fwait
je
adc
mov
mov
mov
inc
push
inc
mov
icebp
pusha
add
imul
daa
jmp
shufps
shrl
xorl
xor
loop
jp
jae
or
enter
push
jge
sahf
and
ljmp
movsl
test
sahf
mov
rol
out
add
xchg
mov
repz
imul
ja
cmp
lock
mov
aad
add
xchg
mov
mov
fcom
roll
add
aaa
xor
aas
push
and
sbb
jo
inc
ret
pushf
ficoml
mov
inc
enter
push
mov
lds
test
push
push
mov
push
cmc
inc
cmpsb
jb
lret
insb
jp
mov
dec
mov
add
xor
insb
icebp
inc
leave
xor
inc
leave
xchg
jmp
aaa
mov
pop
jno
cmp
fisttpll
nop
cmp
ja
cmp
dec
xor
lahf
adc
jo
cmpsb
sti
scas
movsl
leave
push
out
pop
pop
add
addb
into
and
cmp
insb
mov
jb
sahf
or
hlt
jo
and
cmp
fs
push
mul
cltd
push
push
or
insb
out
std
imul
fldenv
jo
dec
xchg
mov
dec
jmp
ljmp
leave
sti
mov
mov
movsl
xchg
je
addr16
stos
arpl
or
pop
daa
xor
xlat
mov
lcallw
imul
dec
rcll
cmp
rol
jg
dec
xchg
out
leave
lock
pop
dec
sbb
fimuls
mov
dec
repz
jno
xor
data16
or
scas
in
out
shrl
jnp
stos
add
icebp
int3
in
call
orl
mov
jnp
jne
icebp
mov
and
aam
test
mov
xor
test
push
mov
jno
arpl
into
xchg
rcll
imull
xchg
loop
add
xchg
subb
inc
inc
es
push
cmp
lret
mov
adc
pop
sbb
das
int
and
push
pop
mov
je
cmp
mov
dec
sub
aaa
cmpsl
dec
mov
mov
add
sbb
push
fsubl
and
sbb
imul
scas
inc
fisubs
arpl
mov
xchg
lods
js
orl
lods
and
lds
scas
jl
lods
addr16
sti
adc
mov
daa
imul
bound
xchg
pop
jno
mov
add
or
outsb
cltd
fldl
mov
pop
push
push
cmp
insb
push
popf
dec
stos
dec
add
and
mov
lods
add
data16
stc
dec
lods
das
mov
stos
inc
sbb
push
sub
shl
ror
inc
pop
fmuls
or
pop
adc
stos
mov
sub
fxch
in
aas
scas
sub
sub
push
in
or
add
pop
shl
in
xor
push
ljmp
jg
and
cltd
push
out
mov
ret
lds
inc
hlt
mov
rcrb
lods
adc
stos
sbb
subb
mov
in
je
je
ss
pop
daa
orl
popa
push
cld
icebp
mov
psubsb
lock
inc
iret
push
lods
cltd
xor
cmpb
cmp
ja
mov
dec
adcl
aas
js
in
popf
xchg
lret
pop
mov
js
inc
push
xor
clc
jle
inc
sbb
inc
mov
aam
pushw
aaa
dec
mov
cmpsl
fistpll
or
jmp
push
repz
sub
push
ljmp
sbb
outsb
sbb
bnd
push
mov
ret
jnp
pop
dec
xlat
push
dec
push
pop
jecxz
mov
mov
je
stos
pop
jle
xchg
data16
pusha
out
add
sub
scas
push
out
inc
pushf
pop
aam
leave
and
loop
mov
or
pop
pop
mov
xor
in
push
mov
es
fwait
push
inc
push
aaa
cmp
inc
scas
inc
mov
aad
xchg
adc
mov
lds
pandn
inc
movsl
mov
or
mov
dec
inc
repnz
push
cmp
orb
sub
ret
iret
and
mov
aad
dec
adc
fs
cmp
cmc
pop
mov
mov
add
mov
sar
inc
add
push
outsb
cmp
mov
adc
pusha
inc
cmpsb
jge
cmp
test
scas
xchg
sbb
jecxz
in
cmp
mov
and
dec
push
or
imul
xor
and
sbb
cmpsl
xor
ss
insl
jge
shrl
jo
ss
mov
push
adc
cmp
insb
xor
daa
mov
push
into
fstl
mov
mov
ficomps
rorl
es
es
lock
daa
lret
into
inc
je
rolb
dec
loop
mov
sbb
mov
mov
jo
add
stos
idivb
dec
je
out
jno
sbb
jg
mov
bound
cmp
push
cltd
fldcw
cmpsb
inc
repnz
shlb
fs
mov
lret
push
subb
inc
and
and
ljmp
inc
xor
push
lahf
sbb
aad
out
dec
clc
inc
mov
aad
add
pop
je
movsb
mov
scas
xor
cld
cld
test
xchg
jae
out
loop
mov
push
jb
or
fs
mov
jns
mov
push
jmp
stc
pop
call
into
enter
mov
cld
clc
mov
pop
sbb
dec
sub
repnz
jae
mov
outsb
dec
and
arpl
cli
ds
push
dec
testl
iret
push
xchg
arpl
xchg
leave
loope
jmp
xor
push
leave
mov
int
push
sbb
repnz
les
ljmp
jb
sub
bswap
mov
enter
xchg
pop
loopne
jl
or
sarl
sbb
enter
adcb
add
push
in
cwtl
sbb
sahf
cmp
sub
insb
aas
leave
cltd
xor
xchg
jnp
dec
sbb
jb
cmc
sub
insl
jb
ret
cli
adc
scas
add
aad
jmp
jmp
arpl
add
repnz
sub
xor
lods
mov
push
sahf
jp
dec
ror
cmpb
sbb
sahf
cld
cmp
cmp
loope
lret
jb
adc
mov
inc
add
mov
jbe
push
aam
lcall
data16
cwtl
pop
adc
or
sub
fcomps
adc
sti
dec
ret
push
dec
lock
addr16
xchg
out
sub
xchg
push
ljmp
leave
xchg
cwtl
inc
jo
cmpsl
rorl
push
lahf
push
inc
imul
loope
adc
push
pop
inc
hlt
jbe
adcl
mov
aad
push
and
ret
adc
xchg
lret
stos
popf
movsb
pop
aad
pop
adc
xor
pop
loopne
mov
js
out
xchg
rorb
les
sub
xor
inc
jae
cmp
daa
inc
inc
repnz
call
std
or
out
orb
adc
cmpsl
mov
inc
lret
dec
mov
call
int3
xchg
inc
js
jmp
pop
rcll
les
std
cli
das
loop
sub
adc
int3
pop
pop
push
hlt
dec
in
popf
ss
adc
lcall
add
adc
jecxz
outsl
cld
cmp
xchg
pop
subl
or
jp
into
cli
mov
and
repz
fs
data16
mov
call
ds
lahf
cmp
xor
in
mov
jge
dec
mov
sbb
mov
ds
xchg
in
cmp
mov
mov
cld
stos
xchg
push
fnstsw
adc
jb
je
outsb
mov
push
test
dec
fcoms
roll
xor
push
jle
push
sbb
fcmovbe
xor
call
jl
rcrl
ret
test
cmpsb
add
inc
pop
dec
adc
jp
xchg
mov
test
in
xchg
and
stos
fs
iret
ja,pt
sub
push
cmp
mov
call
inc
cmp
mov
bound
and
jbe
mov
test
leave
pop
loope
adc
out
jmp
sbb
stos
addl
scas
ret
std
sbb
jae
push
stc
js
sub
fsubl
mov
rcll
ja
mov
xor
and
sub
add
inc
jbe
cltd
cmpsl
fimull
lea
inc
jb
jecxz
rcrb
push
andl
sbb
std
xchg
imul
ja
out
xor
js
test
jle
outsb
sub
push
stos
cmp
bound
fwait
punpckhdq
orl
lods
adc
push
incl
mov
or
mov
sub
mov
paddusb
in
push
sbb
cltd
sub
xlat
xor
clc
fsubrl
test
mov
cmp
cmp
pop
dec
cmp
nop
sub
mov
sbb
out
lcall
into
fistpll
or
sub
cmc
aaa
inc
rcrl
xor
mov
mov
sub
xor
push
rcl
cwtl
call
jns
sub
inc
dec
push
xchg
mov
lods
ficompl
in
addr16
mov
cld
subl
ficompl
push
pushf
test
mov
xchg
and
inc
imul
mov
jnp
xor
insb
jbe
lret
cs
xorb
call
cltd
out
xchg
subb
xor
cmp
or
jl
or
xchg
fwait
lcall
outsl
les
jns
aas
nop
pop
mov
out
aaa
nop
test
andl
mov
sub
xor
mov
sti
sbb
arpl
cmpl
xor
popf
add
enter
pop
or
cmpsl
inc
enter
xchg
lock
into
push
xchg
mov
adc
in
lock
sarb
arpl
jbe
cltd
or
mov
push
frstor
and
clc
push
mov
and
pop
jae
push
pop
pop
bound
lock
mov
icebp
add
add
inc
outsl
mov
fiaddl
psrlw
mov
mov
shlb
sub
push
enter
cmp
repz
out
jmp
movsl
out
cmc
dec
xchg
xchg
ljmp
xchg
cs
push
mov
or
lds
add
mov
dec
cmp
jle
daa
decl
test
nop
je
xchg
and
mov
sbb
dec
ljmp
cmp
mov
add
insb
mov
sbb
dec
adcb
cmp
dec
insl
push
int3
out
cmp
mov
jno
aad
push
mov
fs
inc
pop
dec
add
scas
push
cmp
mov
aad
ret
popf
insb
lods
repnz
addr16
inc
add
cmp
push
jecxz
mov
in
mov
popf
std
jmp
xchg
mov
dec
xchg
pop
push
or
and
push
adcb
inc
jbe
aas
pop
fildll
movsl
jb
add
jmp
pop
mov
dec
sbb
mov
cltd
clc
cmp
inc
xor
insb
clc
in
in
pop
and
iret
dec
xchg
xchg
adc
lock
aas
cmp
sbb
mov
test
adc
ficompl
lds
or
inc
pop
int
out
mov
loop
push
bound
jle
sti
fldl
push
push
fistps
add
push
mov
push
pop
jp
popf
pop
stc
in
aas
scas
push
pop
and
call
call
stc
rorl
sub
repz
lret
mov
int3
xchg
aam
xor
loopne
sbb
and
add
mov
decl
js
fs
push
xchg
mov
out
das
fwait
xlat
and
jb
hlt
fidivrl
jnp
lds
out
mov
dec
mov
jo
mov
pushf
stos
jg
clc
add
xchg
xchg
xor
push
add
lock
scas
lock
jle
sbb
dec
mov
dec
je
jns
push
jecxz
inc
mov
or
sub
inc
mov
xorb
pop
cltd
mov
pop
dec
ljmp
jge
js
movsl
scas
adc
cmpsb
lahf
and
fs
in
xchg
xchg
xchg
fcmovnbe
and
or
pop
push
jecxz
and
lret
ret
xor
mov
push
add
xchg
sahf
popf
push
sub
scas
std
lods
daa
jae
adc
inc
xor
ljmp
loope
aas
lcall
or
cmp
jmp
insl
xor
adc
inc
out
cmpsb
add
inc
iret
call
in
dec
inc
shrl
pop
pop
mov
sub
pushl
in
lock
call
std
stos
outsl
aaa
std
filds
adc
lods
push
orb
data16
insl
shlb
cmp
lret
and
fwait
cmp
mov
fimull
cli
jns
xchg
orl
sub
pop
add
loop
xor
imul
subl
jne
and
lahf
lahf
leave
mov
ret
pop
add
mov
inc
and
and
lret
je
mulb
push
loop
pop
std
push
push
dec
js
sbb
xchg
and
mov
fcoml
jne
iret
mov
lea
int
xlat
mov
idivb
xchg
dec
lods
jnp
shrl
into
push
fmuls
cmpsl
jnp
dec
or
rorl
in
fwait
cmp
dec
cmpsb
xchg
outsl
cmp
insb
in
sbb
cmp
inc
mov
icebp
pop
jnp
mov
jp
push
rorl
push
lahf
push
xchg
mov
loopne
mov
jbe
mov
hlt
push
cs
popa
pop
mov
and
sahf
xor
mov
inc
push
lods
ja
mov
pop
pop
fisttpll
decl
jg
dec
xor
sahf
leave
dec
mov
inc
mov
sti
or
lahf
fsubrl
mov
push
cmp
and
fld1
fwait
call
push
or
xchg
pop
dec
inc
lcall
push
mov
loope
call
pop
adc
dec
or
add
adc
xor
push
xchg
jb
xor
stos
enter
adc
jle
movsl
loope
or
push
hlt
fdivl
lret
gs
or
mov
iret
fsubrs
adc
sub
rcrb
mov
fs
addr16
es
add
mov
inc
mov
adc
cmpsb
pop
sub
pop
dec
aas
sbb
mov
pusha
fcoms
push
loope
xchg
mov
icebp
jg
mov
les
rcrb
cmp
jnp
push
jae
mov
imul
inc
clc
cmpsl
aad
mov
dec
jne
or
adc
push
jo
jne
leave
xor
adc
xor
out
pop
pop
int3
lods
dec
cmp
in
orb
push
adc
add
add
je
imul
xchg
in
push
fimull
and
inc
sub
shlb
insl
repnz
xor
or
xor
rorl
xor
testb
lret
push
ljmp
daa
dec
dec
ss
int
add
mov
imul
ja
mov
in
andl
sbb
test
add
movb
jne
jae
sbbl
popa
roll
fcmovnbe
or
add
fisubrl
mov
ret
rcll
xlat
add
scas
jmp
rol
jns
popa
add
mov
and
dec
stos
int3
or
out
sahf
rol
or
mov
cmc
notb
sbb
push
arpl
sbbl
inc
inc
pop
test
push
daa
je
push
adc
call
and
mov
inc
sub
cmp
and
xor
imul
and
mov
mov
gs
cmc
jns
stos
repz
adc
jmp
sub
iret
xchg
sarl
fs
mov
gs
xchg
stos
ss
sub
xor
mov
and
in
out
dec
and
mov
arpl
fistl
pop
test
cmp
idiv
outsl
push
sub
test
addr16
push
lret
cmp
pop
ja
test
add
rcrl
cmp
jmp
push
xchg
mov
sbb
jbe
add
and
ret
mov
in
dec
movsb
mov
dec
or
mov
sub
or
inc
adc
mulb
jae
jae
pushf
jbe
in
add
xor
xor
xchg
fwait
xchg
jg
out
mov
xor
inc
dec
stos
cltd
jne
xor
mov
mov
je
mov
pop
jle
lret
je
mov
nop
shlb
fs
ds
enter
cmp
jecxz
or
mov
in
lret
mov
lcall
movsb
lret
insb
cltd
jb
and
mov
mov
mov
push
xor
fnsave
sbb
int3
push
mov
insb
fs
cltd
cmp
inc
mov
add
and
sub
add
pop
xor
fwait
lcall
ljmp
fstpt
aad
adc
mov
xchg
test
push
or
push
push
ljmp
repnz
out
mov
jb
scas
les
ljmp
cld
inc
gs
cmp
mov
xor
outsb
xchg
ret
stc
push
xor
fnstsw
sbb
jae
pop
das
fisttpl
jne
sbb
insb
int
andl
std
push
out
jg
adc
pusha
outsl
nop
imul
adc
dec
jmp
push
or
leave
add
arpl
das
adc
mov
clc
ljmp
xchg
xchg
cwtl
rorb
add
pop
rorb
pop
mov
jge
or
lds
push
or
cmp
sahf
cli
icebp
testl
or
int
loope
rol
sub
add
xor
mov
out
mov
rorb
repnz
cmp
inc
into
dec
into
or
mov
fmull
cmpsl
rcll
dec
cmp
adc
jb
inc
enter
dec
es
hlt
test
add
aaa
test
jno
inc
jmp
ss
push
lret
xor
sub
addr16
lods
mov
dec
fs
fildl
imul
mov
push
bound
into
lds
out
test
adc
fld
movsl
aad
xchg
sub
pop
lea
pop
xor
mov
sahf
mov
loope
fs
iret
fldcw
aaa
lea
or
loop
sub
aas
xchg
call
mov
adc
roll
mov
xchg
pop
fwait
and
ljmp
lret
dec
jno
and
sub
jne
mov
lahf
mov
mov
or
sub
mov
iret
push
gs
lea
rcr
push
push
outsl
cwtl
das
dec
or
pop
clc
ja
stos
imul
sbb
lea
jle
imul
ret
cmp
mov
lea
xchg
rcrb
fisttpll
jl
mov
xchg
xchg
inc
sbb
push
sub
adc
pop
lahf
adc
push
lock
or
icebp
test
xlat
push
movsb
inc
lret
pop
cmpsl
and
js
scas
push
dec
repz
out
aam
ss
out
lret
shlb
or
ljmp
packsswb
mov
leave
inc
jle
hlt
addr16
sub
or
jo
push
mov
subps
out
shll
gs
xchg
sub
mov
or
js
and
inc
test
clc
mov
dec
mov
out
mov
test
fs
sub
inc
les
jbe
das
inc
int3
add
pushf
filds
outsb
sub
jns
frstor
cmp
cmp
or
push
fwait
arpl
xlat
cmovge
cwtl
stos
sbb
fcomps
sbbl
test
jle
xor
outsb
mov
xor
in
clc
bound
inc
dec
mov
or
pop
mov
movsl
insb
in
lods
out
xchg
xor
pusha
cli
mov
mov
das
or
popf
cmpb
fidivs
pop
cmp
xor
sub
movb
addl
nop
ljmp
pop
fs
jp
mov
popa
xchg
mov
inc
rclb
sbb
dec
out
pushf
sti
ss
xor
ds
and
sub
in
sbb
in
int3
jmp
iret
or
xlat
into
aas
ret
imul
jge
inc
enter
insb
add
jne
cmp
adc
add
lock
jbe
test
popa
and
sub
hlt
cmp
fcomps
loope
andl
test
aam
loope
sar
inc
movsb
xor
pop
cltd
andl
xor
cmp
push
out
mov
pop
cmp
dec
out
mov
xchg
mov
scas
add
mov
movsb
stos
dec
cmp
mov
test
dec
xchg
fs
negb
dec
pop
dec
rclb
daa
cmp
pushf
fimuls
ret
test
mov
out
fbld
add
stos
sbb
orps
or
adc
ret
cltd
lahf
cmpsb
cmpl
xor
lcall
mov
ficompl
mov
add
push
ret
jle
or
inc
rcrb
push
rcll
scas
adc
loop
dec
and
aaa
and
sar
cmp
lahf
jns
int
pop
fistps
bound
loopne
mov
cwtl
fs
cmc
insb
lahf
push
push
in
pop
sbb
orl
pushf
push
add
sbb
push
sub
jle,pn
sbb
mov
outsb
and
das
test
cmp
std
cld
and
mov
scas
js
xchg
xchg
sarb
fstl
jg
addr16
insb
jp
jp
xchg
xchg
popf
mov
xor
data16
stos
fwait
sbb
or
jbe
lahf
jl
mov
pusha
add
push
test
sub
dec
xor
sub
push
push
shlb
push
pop
movb
xor
negl
jnp
nop
xor
mov
pop
inc
in
test
jnp
popf
arpl
cmp
in
xchg
cmp
sbb
ret
adc
mov
jo
mov
or
sbb
push
xchg
lea
aad
sbb
jne
cmp
mov
loope
mov
sbbl
cmp
xchg
cmc
adc
pop
gs
xchg
pop
push
in
jmp
shrb
and
jle
xlat
jp
icebp
push
mov
dec
mov
aad
or
rol
cmp
loop
xorb
sahf
outsb
adc
jo
and
mov
pop
adc
imulb
shlb
ficompl
sbb
repnz
pushf
jae
int
mov
cmp
jge
sbb
add
mov
sub
subl
sti
inc
rcll
test
stos
shrb
rolb
loop
sbb
add
mov
cmp
sar
and
mov
push
add
sti
push
mov
xor
inc
xchg
push
cmovp
test
out
xchg
xchg
adc
addr16
andb
scas
jmp
push
les
xchg
add
cmpsl
push
sbb
jmp
xor
mov
pop
das
sub
out
fwait
mov
je
sbb
xchg
inc
cld
cmp
sbb
jle
in
push
ja
inc
outsb
out
xor
jecxz
xor
lock
sbb
sbb
cmp
mov
outsl
aaa
loope
mov
xchg
dec
ss
sbb
movsb
icebp
cmp
push
ret
xchg
push
test
add
ret
scas
jecxz
inc
pop
inc
inc
sub
pop
mov
aaa
add
call
fcomps
mov
aad
add
cmp
ret
mov
mov
cltd
mov
fists
test
and
sbb
sbb
and
jbe
or
adc
jne
ss
jmp
imul
pop
shl
subb
test
jo
lods
adc
loope
ds
xor
inc
mov
cmc
sub
mov
mov
mov
cmp
push
rcrl
and
pcmpgtb
pop
xchg
xlat
shl
in
movsb
mov
sub
sbbb
push
pop
dec
addb
jp
cmp
shll
sub
adc
and
jle
xchg
push
ficompl
cmpsb
jl
fs
int3
push
pushf
orw
pop
inc
and
test
shlb
push
jmp
mov
lods
sbb
mov
pop
jle
push
sti
fidivrl
fnsave
es
adc
fcmovnu
or
iret
frstor
xor
xor
dec
pop
lock
jmp
sub
hlt
aas
sbb
addr16
scas
sub
scas
pop
jmp
subl
or
push
scas
pop
xlat
mov
pop
es
andb
iret
mov
sbb
mov
bswap
mov
ljmp
mov
lcall
mov
adc
arpl
xchg
aaa
cltd
in
call
pop
sbbb
fisubrs
inc
cmpl
xchg
xor
test
push
sub
xlat
fimuls
xchg
pop
aad
gs
xchg
inc
push
jge
jo
ret
xchg
data16
loope
scas
ljmp
cmp
nop
mov
add
test
push
adc
sub
mov
test
xor
aaa
fwait
or
ret
orb
adc
jns
and
movsb
xor
fwait
ljmp
pop
out
add
jae
jmp
lret
adc
pop
sbb
in
jecxz
add
iret
test
pop
xor
add
repz
shlb
and
into
lret
dec
imul
das
push
shrb
xchg
or
jle
das
xchg
push
je
push
cwtl
stc
mov
mov
mov
xor
dec
push
inc
movsl
and
xchg
sub
bnd
adc
dec
and
sub
insb
fisttpll
loope
das
cmc
ljmp
jl
adc
mov
lahf
insl
outsl
cmp
add
sbb
mov
push
cmp
loopne
mov
loop
pop
fnstcw
shlb
popa
mov
outsl
jge
ds
sbb
repz
decl
inc
push
mov
inc
les
fisubrs
leave
or
testb
mov
inc
mov
xchg
add
push
or
push
xchg
outsb
xor
sbb
outsb
lret
outsl
sub
nop
add
outsb
add
cmpsl
movsl
xor
sbb
movsl
xor
enter
lods
out
and
pop
mov
movsl
or
or
sub
sbb
jns
mov
fidivs
add
in
out
mov
mov
sub
aam
mov
leave
mov
jg
or
pop
jp
inc
lods
xchg
and
movsl
scas
mov
inc
pushf
loope
leave
sbb
aaa
or
ficomps
outsb
lods
and
fsub
xor
ret
roll
out
sub
fst
ret
xchg
imul
mov
setbe
test
loopne
mov
sbb
xor
sbb
mov
ss
dec
xor
sti
push
xchg
sbb
bound
lret
shlb
xchg
dec
dec
lret
adc
mov
inc
push
inc
xor
sub
aaa
jns
add
xorl
mov
int
sbb
or
icebp
mov
lods
mov
std
push
mov
fwait
cld
repz
enter
mov
sbb
filds
push
call
rcrl
iret
fistl
jae
xor
leave
xor
inc
movsb
ds
cld
pop
sbb
jl
les
test
jg
dec
mov
lods
xchg
loope
dec
jne
fists
out
das
xchg
sbb
jl
out
inc
lock
inc
mov
addr16
out
jnp
das
jecxz
jp
sbb
or
add
push
leave
dec
neg
shll
mov
rcrb
lret
lock
push
cmp
xlat
xor
inc
jne
outsl
cmpsl
pop
and
pop
sub
rorl
push
add
mov
xchg
add
fwait
inc
push
cmpsb
enter
test
fdivs
cmp
mov
inc
jbe
sbb
cwtl
jb
push
xchg
inc
aad
mov
sti
cltd
out
pusha
mov
jo
jl
insb
xchg
xchg
je
push
pop
mov
popa
shll
cmp
test
pop
xchg
sbb
xor
sbb
sub
leave
and
movsl
mov
adc
or
ss
jae
or
jno
pop
push
in
xchg
cs
out
fistl
das
es
test
push
lret
pop
data16
and
pop
ret
popf
movsb
mov
incl
push
dec
icebp
pop
mov
and
xchg
addr16
pop
xchg
jl
xor
outsl
lods
out
sub
out
push
and
enter
pop
test
mov
inc
int
fbstp
mov
mov
out
inc
ss
test
mov
je
nop
xchg
pushl
jg
out
ja
test
jl
iret
adc
dec
test
je
push
lea
push
sbb
out
mov
fadd
lret
sbb
stos
es
inc
std
jns
leave
scas
sahf
repnz
cmp
mov
ds
pop
pop
cmp
cmp
bound
and
int3
out
jns
out
push
insb
push
xor
inc
cmpsb
add
pop
pop
rol
cmp
cwtl
jno
add
mov
int
dec
jno
filds
push
inc
sbb
sahf
jle
push
mov
out
and
push
jne
push
push
es
push
jl
dec
adc
add
rorb
ljmp
jg
out
mov
lahf
cmp
test
lea
in
inc
mov
xchg
addr16
xor
jbe
xchg
mov
cltd
xchg
cmp
in
aad
ret
or
push
popl
sub
fimuls
cmpsl
add
fildll
in
mov
fcmovbe
push
sbbb
and
mov
jns
imul
lret
add
xchg
mov
mov
xchg
mov
pop
and
lea
loop
stc
cmp
push
clc
mov
enter
mov
xchg
negl
or
dec
popa
lret
daa
add
dec
or
daa
mov
mov
and
aam
jmp
aad
std
sarl
stos
hlt
in
aad
cmp
inc
sub
or
pop
in
addb
inc
dec
and
sbb
mov
dec
cmp
jge
loop
cmp
add
ret
jg
pushf
imul
aam
inc
les
data16
nop
mov
into
and
cmp
stc
cmp
lods
sbb
aaa
jns
mov
push
cmp
dec
mov
mov
sahf
mulb
aas
add
add
in
sub
add
inc
pop
std
sbb
dec
or
adc
aas
lds
push
inc
xchg
xor
push
vfnmadd132pd
mov
insb
fucomi
xor
lds
xchg
add
ret
xchg
add
cmpxchg
fisubrs
cmpsb
insb
or
imul
test
xor
cmpsb
jno
fwait
and
and
out
or
mov
xor
xor
fbld
jne
xchg
data16
adc
je
mov
add
mov
shll
ss
outsb
and
iret
fiaddl
faddl
mov
inc
push
mov
out
inc
push
xor
pop
adc
inc
and
jns
pop
out
es
cmpsl
fsubl
lret
mov
jo
adc
xchg
mov
mov
add
test
pop
push
or
divl
frstor
mov
mov
mov
jle
push
push
gs
sub
mov
xchg
dec
aad
aam
fcmovnb
adc
bound
dec
mov
xor
or
nop
mov
xor
dec
imulb
sbb
scas
add
xchg
loope
push
test
sub
inc
test
es
or
fmul
pop
test
lret
dec
sbb
mov
pop
mov
dec
ret
or
ret
in
hlt
mov
adc
dec
data16
dec
sbb
jp
lahf
shlb
ss
ret
pop
mov
lret
xor
enter
xchg
pusha
repz
jne
out
or
jns
xchg
dec
mov
insb
or
sub
add
sub
out
xor
and
jbe
call
mov
inc
idivl
sub
pop
mov
cmpsl
add
sarb
inc
pushf
or
xchg
or
lods
ja
push
call
mov
jb
js
xchg
pop
sahf
pop
jmp
jns
jge
fcompl
xor
lret
into
jecxz
inc
dec
and
in
inc
inc
daa
gs
sbb
sub
add
stos
adc
inc
gs
movb
or
pushf
addr16
lahf
ret
loope
test
dec
mov
mov
sub
sub
popf
imul
arpl
mov
mov
into
pop
ja
lds
add
xchg
outsl
ljmp
xchg
lock
mov
push
lret
mov
jecxz
mov
dec
test
call
pop
mov
test
pop
test
push
pop
movsl
dec
mov
add
push
stos
cmp
loopne
xchg
dec
inc
aaa
and
jae
cwtl
sahf
jo
subb
xchg
push
push
dec
fists
mov
fcompl
dec
pusha
stos
add
xor
movsl
movsb
loope
stc
adc
jge
loope
repnz
fs
dec
xchg
push
push
jge
shl
xor
cmpsb
ds
push
in
insl
and
jle
or
inc
sbb
xor
sbb
lret
sti
xchg
pop
enter
out
dec
fsubp
or
ret
leave
lock
dec
and
cwtl
and
mov
cltd
arpl
inc
add
jle
stos
mov
xchg
push
sub
push
and
mov
push
test
addr16
mov
xchg
dec
pop
jge
cli
mov
cmc
arpl
mov
lahf
and
and
in
cmp
ficoms
push
mov
pushf
andb
outsl
jo
mov
std
pusha
jns
ss
iret
push
push
xor
aad
cli
dec
xor
push
dec
lock
insb
inc
ret
dec
stos
aaa
outsb
rcrb
out
daa
xchg
iret
into
movsl
mov
xor
subl
sbb
ss
mov
push
and
mov
mov
out
inc
out
nop
jl
out
imul
xlat
jmp
or
pop
ret
fadds
mov
and
jnp
or
xchg
pop
inc
pop
sub
inc
bound
dec
push
mov
fcompl
mull
int
test
rolb
and
add
inc
xchg
xor
ds
inc
cwtl
dec
sub
cli
xchg
fldcw
aam
jecxz
cmp
lahf
inc
arpl
imul
pop
push
inc
xchg
lahf
maxps
pop
imul
bound
mov
fsubrl
mov
hlt
add
cmp
push
aas
loopne
lods
push
aas
jl
push
add
imul
pop
pop
sub
pop
es
sub
mov
xchg
or
cltd
sahf
sub
sahf
fildll
cmp
adc
or
and
mov
mov
push
cmc
lds
imul
js
movsl
adc
movsl
mov
rcrb
cs
js
add
push
pop
nop
jno
inc
jp
movsl
repz
jl
and
mov
shrb
pop
popf
insl
cltd
sbb
mov
or
sub
xor
xchg
lods
and
aas
mov
adc
xchg
mov
push
xchg
jge
push
mov
jmp
enter
xchg
adc
adcb
cmp
or
bound
pop
xchg
push
shl
test
lahf
mov
push
mov
roll
jmp
fiadds
xlat
in
and
cmp
or
xor
xchg
jl
sub
sbb
mov
add
mov
lods
adc
and
and
xor
sub
adc
imul
in
dec
cltd
and
das
inc
or
xchg
addr16
daa
jae
int3
xchg
insl
movsl
mov
gs
cmp
push
insb
cmp
stos
movsb
sub
data16
adc
test
ljmp
stos
mov
push
pop
sti
rorl
aad
vcomiss
dec
mov
and
in
mov
mov
inc
mull
fmul
adc
lods
adc
add
hlt
sbb
lahf
out
dec
xor
or
lds
test
mov
pop
xchg
fadd
fisubrs
out
sbb
inc
sbb
push
sub
adcb
and
ja
mov
lds
add
aad
mov
push
subl
into
inc
sbb
mov
add
jg
xchg
mov
xchg
cmpb
hlt
adc
xor
mov
jns
pop
aas
cmc
jae
push
jo
xchg
icebp
rcrl
sbb
mov
inc
lds
jp
adc
cmp
sbb
fwait
mov
pop
dec
test
push
mov
add
pop
jnp
push
mov
or
loopne
es
scas
cmp
mov
shlb
xor
mov
aad
sbb
dec
int
scas
aaa
push
fidivl
pop
rcrb
push
mov
adc
jle
sbb
ffree
adc
roll
push
pop
and
out
jns
lret
mulb
mov
and
inc
outsl
cltd
jo
pop
imul
dec
pop
stos
inc
adc
cltd
xchg
pop
push
repz
sub
push
xor
cmp
push
cmpsb
test
mov
sbb
testl
dec
out
cmp
cmpsl
sbb
lods
es
rorl
sarl
imul
insl
fwait
mov
jo
nop
jmp
push
dec
mov
jecxz
into
or
add
mov
inc
std
mov
popf
clc
in
popf
enter
sub
push
pop
xor
mov
pop
js
int
mov
mov
insb
sahf
xor
and
adcl
movsb
fildll
testb
and
popf
stos
xorb
dec
pop
ss
decb
sbb
popa
addr16
push
xor
push
and
xor
mov
loope
lods
add
and
rcl
gs
insl
std
pop
or
and
cli
loope
ret
xlat
aad
push
or
in
adc
mov
out
mov
out
inc
inc
add
adc
jb
jl
in
loop
inc
jnp
or
jg
xchg
test
movl
leave
loope
fstpl
cmp
imul
test
out
dec
push
mov
xchg
sub
xor
xchg
and
scas
mov
arpl
mov
adc
sub
or
xchg
std
dec
aaa
les
sbb
ja
mov
cmp
lahf
rcrb
dec
pusha
add
es
aaa
lcall
sub
inc
pop
sub
adcb
inc
adc
mov
mov
xchg
incb
and
jmp
iret
ret
push
in
sub
enter
mov
jg
sub
fsubrs
dec
es
xor
jp
loope
sarl
jp
test
jno
sbb
scas
fcmovbe
aas
jge
ret
mul
push
dec
cmc
je
in
mov
in
or
out
xor
push
dec
es
cmp
inc
lods
js
mov
lock
and
adc
aaa
stc
sub
arpl
testl
shrl
mov
cs
les
data16
fsubs
inc
add
and
jmp
lods
fdiv
inc
inc
cmpsb
stos
mov
mov
idivb
mov
and
scas
popl
pushl
or
xchg
outsl
push
repz
ss
mov
xor
stc
pop
inc
pop
es
mov
cltd
ja
je
pop
pop
and
mov
sbb
inc
call
and
mov
arpl
jmp
and
mov
jae
arpl
out
sbb
pusha
xchg
xlat
mov
mov
cs
or
dec
imul
in
cmp
adc
dec
cwtl
mov
test
add
fidivrs
cmpsl
add
dec
push
addr16
sub
jl
stos
adc
xchg
push
xor
pop
inc
cltd
outsb
pop
inc
imul
fsubrp
push
out
jae
aas
ja
mov
and
xor
push
jno
out
jl
dec
sbb
jmp
or
mov
mov
inc
jnp
cmp
sub
mov
clc
imul
inc
out
cmpsb
jns
dec
mov
lods
jmp
call
aaa
pop
popa
mov
je
fs
jae
cmp
call
test
pop
mov
lock
call
rcrl
cmp
mov
dec
lods
je
test
loop
data16
xor
pop
inc
push
not
xor
dec
dec
pop
hlt
cmp
mov
add
or
dec
stos
jl
jb
or
les
mov
or
xchg
xchg
rcr
sub
fs
iret
mov
daa
jnp
push
sub
addr16
clc
into
push
cmp
aam
sti
jg
inc
xor
pusha
int
cltd
push
mov
and
jmp
clc
sbb
insl
aam
dec
data16
lcall
out
or
sbb
cwtl
pop
fcoml
jae
xor
lret
sar
cmp
out
mov
lret
push
or
int3
xor
xchg
or
adc
mov
out
faddp
xchg
mov
mov
leave
icebp
pop
or
fidivs
enter
ret
cmc
dec
pop
in
jae
addr16
dec
cmpsl
sbb
adc
or
jnp
jo
cwtl
jne
leave
pop
fnstsw
mov
cmc
mov
test
mov
mov
inc
jg
iret
jb
xchg
pop
arpl
clc
decb
pop
loop
loop
pushf
add
push
sbb
mov
popa
adc
pop
sbb
mov
jb
fdivs
cwtl
ja
sub
pop
subb
rolb
aas
xchg
fnsetpm(287
out
ds
std
sub
cmp
add
lea
jge
adc
ja
mov
cmp
out
or
scas
lods
mov
sub
push
mov
xchg
outsb
jae
sahf
in
jae
xchg
pushf
fldenv
mov
xchg
mov
jae
mov
mov
repnz
rcrb
jo
and
cwtl
pop
mov
jge
inc
pushf
stos
or
mov
and
jns
rcrb
and
cli
jnp
stos
shl
inc
shrb
sbb
rcrb
outsb
lods
pushf
mov
enter
enter
in
je
jl
push
push
mov
enter
js
push
xor
imul
pop
sahf
adc
mov
cmp
sti
adc
fwait
gs
jmp
imul
sbb
adc
movsb
mov
lds
cmpsb
fincstp
nop
test
mov
sbb
cmp
dec
xor
cmpl
insb
and
cmp
cmpl
mov
int
das
lds
mov
xor
push
add
mov
xor
std
rcrl
cmp
push
xor
inc
push
out
dec
mov
or
mov
sbb
sbb
xor
in
mov
or
mov
xor
in
sti
mov
adc
add
nop
jns
and
bnd
outsl
into
xchg
ss
sbb
fs
sti
or
stos
push
ja
mov
xchg
hlt
pop
roll
pushf
enter
and
push
sbb
adc
xor
mov
cmp
dec
jg
out
pop
add
arpl
fcoms
sbb
pop
inc
push
aam
iret
out
jno
bound
jmp
jmp
not
jb
icebp
shlb
pshufw
mov
decb
lock
or
dec
pop
in
test
pcmpgtb
cmp
xor
in
mov
sbb
xor
mov
push
or
test
mov
jns
stos
mov
mov
stos
dec
lock
data16
ss
sbb
mov
jle
sbb
fwait
lret
aas
xlat
loopne
stos
and
ret
ljmp
mov
cmp
shlb
f2xm1
shlb
out
cmp
call
mov
aam
leave
aaa
dec
pop
imulb
xchg
and
pop
scas
push
lret
mov
sbbl
mov
scas
icebp
add
cmp
jb
pop
adc
cmp
movb
cmp
inc
addr16
push
loope
aam
fldl2e
icebp
and
sbbl
jp
xchg
call
xor
out
popl
test
sub
pop
pop
and
mov
sbb
or
aad
jmp
dec
mov
sub
add
shll
and
or
dec
xchg
pop
loopne
jg
dec
jecxz
popf
cmpsb
stos
adc
xor
pushf
decl
jp
lret
lcall
cmp
scas
sub
sbb
sbb
scas
repnz
adc
add
xchg
cmp
into
push
fidivrl
mov
jp
faddl
loopne
xlat
push
jp
jae
ss
cs
or
jo
std
cli
mov
dec
popl
or
and
daa
in
lcall
divl
sbb
adc
pushf
out
imul
cmp
xchg
shll
mov
adc
mov
inc
add
roll
inc
mov
mov
fstpl
sub
mov
jb
lock
cltd
enter
hlt
testl
inc
adc
stc
cmp
mov
xchg
iret
sbb
cmpsb
in
jmp
adc
jne
nop
or
shll
jl
mov
adc
and
jle
sub
ss
pop
repnz
mov
scas
sarl
lcall
dec
mov
mov
inc
ljmp
add
xchg
xlat
int3
iret
dec
scas
scas
pop
lods
aaa
sbb
pop
push
and
xchg
xor
inc
aaa
adc
push
jmp
mov
js
inc
popf
mov
mov
fwait
cmp
sub
or
lret
dec
shl
fs
nop
xlat
mov
xchg
sbb
sahf
mov
cmpb
cltd
fistpll
lods
jge
mov
repnz
xchg
dec
aad
pop
xor
lahf
pop
adc
test
inc
rclb
add
mov
subb
pop
int3
fdivs
pop
cmpsb
push
or
fwait
or
js
cmpsb
mov
add
fdivrs
and
fsub
mov
lret
pop
cmp
aad
iret
and
sub
scas
cli
mov
lea
insl
push
leave
xor
inc
fidivs
push
adc
orb
fbld
testb
sbb
in
lret
in
test
jne
or
adc
loopne
pop
pop
and
mov
adc
imul
push
push
or
fistpll
icebp
out
inc
int
test
inc
jb
sbb
mov
inc
xor
mov
mov
clc
push
cmp
outsb
mov
pop
pop
jp
pop
inc
mov
mov
mov
stos
hlt
test
or
cmp
jo
inc
imul
out
or
mov
sbb
xchg
aad
push
subb
xor
aad
mov
cmpsb
sbb
cli
and
dec
cmp
cmp
add
mov
adc
mov
into
scas
iret
inc
imul
mov
mov
int3
std
scas
lock
cmp
xor
adc
fcomps
sub
test
xor
int
lock
in
fstps
pop
cmovle
cmpxchg
mov
cmpb
stc
daa
loope
insb
pop
mov
add
ljmp
add
dec
and
ror
aaa
test
movsb
push
sbb
nop
cmp
and
sub
and
ljmp
mov
cmp
dec
loop
icebp
adc
into
or
enter
xor
push
adc
out
les
scas
mov
out
fucomip
pop
aam
dec
xchg
fcmovbe
jmp
mov
sbb
mov
int3
loope
pop
jae
cs
scas
push
ret
ret
jae
push
add
jl
push
fnsave
jge
lods
iret
data16
into
jge
xor
and
bsf
jmp
lods
pop
cmp
add
add
movsl
lea
sub
pop
xchg
cs
pop
xchg
adc
adc
cwtl
ror
adc
ror
popa
into
pop
mov
pop
mov
into
lock
xchg
lds
leave
mov
lret
adc
inc
pusha
and
jle
mov
adc
adc
push
adcl
pand
push
xor
mov
addr16
sub
call
sub
adc
pop
lahf
or
xor
sub
jbe
jb
stos
sub
vpsubq
movsb
xor
inc
in
mov
stos
sub
frstor
add
outsb
push
add
mov
fsubl
aad
lcall
cmp
cwtl
cmpsb
in
sbb
loope
fdivrs
mov
push
adc
cmc
cmp
cmp
imulb
mov
sub
adc
fistps
mov
pop
mov
dec
xor
adc
pop
shrl
inc
adc
dec
dec
inc
orb
inc
shll
pop
mov
div
leave
ret
loopne
inc
jecxz
sbb
push
scas
std
xchg
mov
dec
push
addr16
jge
pop
push
cmp
sbb
pop
dec
clc
push
mov
scas
mov
or
cmpsb
jmp
sub
sahf
inc
mov
pusha
rorb
xchg
in
push
pop
repnz
push
imull
ret
rorl
sbb
xchg
into
ret
or
je
sti
pushf
inc
lret
and
xlat
adc
add
sbb
jo
inc
pop
orl
arpl
arpl
mov
cs
ljmp
or
mov
push
das
jmp
insl
repz
sbb
mov
aam
outsb
add
ficoms
into
lahf
dec
out
out
inc
xchg
xor
jno
sub
add
xchg
dec
repz
and
subl
adc
bound
subb
fsubr
mov
jl
push
or
insl
jmp
je
xchg
adc
or
into
cmc
icebp
mov
mov
cmpsb
fnstsw
dec
mov
inc
out
test
popf
fcompl
sbb
fbld
cltd
test
ss
jb
cmp
push
adc
lcall
xchg
cmovns
fsubrs
inc
imulb
dec
sub
bound
out
xchg
lret
xchg
ljmp
adc
sub
fwait
stc
mov
mov
lods
test
xor
pop
iret
push
add
dec
int
xchg
rcr
andl
inc
bound
mov
outsw
mov
bnd
push
leave
cmpsl
mov
add
adcb
cmp
sbb
or
je
xor
xchg
inc
ljmp
pop
sub
or
cltd
add
mov
sbb
loop
inc
insl
sub
test
dec
pop
lret
xor
lcall
out
data16
popa
fidivl
repz
mov
or
loope
testb
popa
jmp
aas
push
jg
jge
mov
push
jmp
es
test
xchg
sub
lret
add
jge
xchg
jnp
fnstcw
and
int3
lods
sbb
push
lret
cmp
mov
sub
insb
sub
push
scas
addr16
xchg
mov
insb
inc
imul
lret
dec
and
mov
les
decl
cmc
js
pop
or
jns
daa
pop
xor
add
pop
lret
dec
fbstp
cmp
xor
mov
lcall
pop
in
into
rolb
pop
mov
or
and
scas
rorl
mov
mov
cmpsb
mov
ret
lea
repz
dec
cmpb
mov
adc
mov
xchg
jecxz
and
and
mov
cmc
add
push
pop
fdivl
add
sahf
outsb
dec
fs
imul
cmpxchg
shll
iret
test
xor
cld
pop
lock
into
sarl
lret
xchg
js
divl
mov
ljmp
xchg
push
stos
stos
in
aas
xchg
jnp
out
mov
lock
cltd
js
push
in
inc
loope
mov
pop
lea
adc
xor
add
push
push
pusha
lds
fisttpll
xor
add
pushf
test
nop
jo
mov
imul
lds
cmpsb
xor
lcall
repnz
jp
pop
sbb
imul
aam
gs
xchg
clc
insl
xor
mov
je
fcomps
xchg
imul
jne
aam
adcl
pop
stos
mov
mov
scas
mov
add
mov
dec
sub
mov
push
xchg
je
stos
mov
je
xor
test
adc
inc
dec
cmpsl
jae
out
jl
push
inc
jl
inc
jl
sbb
and
add
xchg
inc
mov
mov
pop
push
fdivs
or
lcall
cmp
jge
sbb
sub
adc
test
vpsubusb
pop
outsl
repz
ds
mov
out
and
repnz
out
pop
push
call
cmp
pop
idivb
fiadds
test
pop
mov
andb
leave
pushf
inc
stc
push
xlat
cmp
mov
xchg
dec
idivl
xchg
in
push
dec
sub
ret
test
insl
inc
movsb
fwait
mov
mov
ljmp
lods
fwait
and
or
stos
sti
push
ret
push
xor
cltd
adc
and
dec
sahf
mov
shlb
cli
mov
aam
testb
neg
out
dec
mov
setne
inc
movsb
jmp
mov
bound
cmp
push
hlt
shll
xor
mov
fldenv
xchg
xchg
je
inc
into
je
push
mov
dec
dec
fbld
fmull
jno
adc
repnz
rolb
cmp
dec
cmpsl
std
mov
adc
cmp
hlt
pop
mov
repz
pop
mov
mov
sub
sub
fcmovne
inc
sbbb
xor
xor
inc
stos
int
dec
push
push
repz
and
js
pop
std
lds
and
lcall
jmp
xchg
mov
test
adc
jmp
dec
loope
sbb
in
cmp
das
leave
mov
and
rclb
push
mov
sbb
in
pop
pop
and
neg
ljmp
or
pop
add
xchg
mov
aaa
lahf
outsl
mov
data16
out
into
xchg
dec
pop
sbb
dec
dec
sbb
or
xchg
sbbl
mov
in
sbb
fsubl
xlat
mov
xchg
dec
adc
mov
sbb
lret
inc
icebp
das
jne
jp
mov
inc
pop
pminsw
dec
xor
popf
cmp
and
sub
mov
sbb
loope
adcb
jle,pn
or
cwtl
and
pop
mov
pushf
add
outsb
pop
xchg
filds
or
xchg
in
jne
sub
push
les
mov
jmp
or
ja
pop
push
mov
icebp
dec
adc
mov
sub
mov
lods
sub
outsb
lea
adc
imul
lea
dec
sub
inc
xchg
inc
dec
jecxz
push
pop
vsubps
addr16
sbb
fimull
mov
or
inc
jmp
js
mov
add
lock
adc
or
in
lods
add
cli
repnz
lahf
jo
stc
jno
shrb
rcl
jl
pop
rcll
push
lahf
sub
icebp
pusha
icebp
jae
xchg
push
icebp
cwtl
orb
mov
add
call
imul
out
sbb
mov
ja
xor
cltd
mov
or
stos
outsl
rol
sub
sub
aaa
js
lods
jle
nop
add
rcrb
cmp
pop
es
jecxz
mov
xchg
rcl
add
pushf
jne
and
sub
lahf
push
pop
push
or
adc
cld
test
lahf
ret
movsl
jl
cwtl
in
adc
xor
ret
call
jnp
data16
push
mov
jmp
fs
sub
imul
jno
repz
push
addl
cs
sti
stos
pushl
cmp
mov
call
jle
sbb
mov
xchg
inc
sbb
push
push
aad
add
movsb
aam
mov
jl
out
rorl
scas
andl
pop
xchg
adc
push
sbb
cmpsl
cmc
cmp
mov
cs
adc
insl
cmc
xor
adc
shlb
mov
insb
fadds
test
mov
or
popf
push
pop
inc
shlb
dec
cs
das
inc
adc
xchg
adcl
dec
dec
cmpl
les
mov
cmc
cltd
pop
mov
loopne
xor
push
fstps
jecxz
aad
repz
scas
cmc
cltd
push
aaa
in
sbb
cltd
in
pop
inc
fidivrl
adc
push
das
sbb
outsl
cmp
adc
and
sbb
pop
test
add
test
rorl
mov
sarb
adc
adc
xor
or
roll
or
add
sbb
rdmsr
dec
pop
jle
test
addr16
xor
divl
add
mov
inc
sbb
imul
xchg
mov
ret
ja
pop
repnz
and
jecxz
cmc
les
lds
stos
hlt
sbb
hlt
push
mov
or
mov
or
and
or
xor
sbb
push
pop
xchg
or
mov
inc
push
mov
xchg
push
mov
push
insl
nop
mov
call
lds
les
ficoml
mov
fs
pusha
iret
adcl
fs
inc
adc
xorb
push
pop
hlt
mov
icebp
cwtl
inc
mov
xchg
xchg
inc
in
and
xlat
punpckhdq
mov
add
and
or
outsl
rol
popf
into
sbb
call
outsl
xor
repz
imul
mov
mov
xchg
adc
sbb
popf
repnz
dec
jns,pn
or
inc
js
dec
fcom
fistpl
out
daa
int3
scas
sub
leave
jae
or
test
xor
js
fldl
jo
cld
sub
lds
dec
and
call
stos
push
mov
xchg
sbb
fcmovb
sub
shlb
adc
orb
and
repz
movsl
jno
cmpsl
je
cmpsb
mov
mov
adc
sti
aad
mov
xor
xchg
int
sub
insb
push
cltd
repz
mov
rcl
dec
inc
jg
orb
in
xchg
int
mov
inc
push
insb
inc
pop
adc
ret
int
insb
pop
cwtl
pop
add
jg
xchg
iret
xchg
adcl
shlb
test
mov
mov
icebp
sarb
dec
into
jecxz
shrb
call
push
add
xchg
mov
divl
mov
test
adc
orb
mov
cmp
or
dec
xchg
or
pop
clc
mov
add
nop
or
mov
shlb
mov
outsl
bound
fcoml
in
jo
shll
mov
pusha
mov
leave
push
fldpi
scas
pop
out
ficompl
jg
dec
xchg
dec
imul
or
int
popa
js
xchg
movsl
mov
in
lahf
clc
test
out
jns
mov
adc
outsl
das
mov
testb
push
movsb
imul
out
ret
push
push
xchg
xchg
inc
vmovntdq
xlat
fcomps
or
jae
mov
orb
mov
movsb
clc
pop
jnp
mov
std
incl
pop
pop
push
shrl
jno
cli
rcll
jne
out
sahf
fildl
cmp
jbe
jb
or
push
sbb
sub
inc
ds
add
xchg
and
outsb
fdivrp
mov
cmp
fwait
mov
fadds
lea
rclb
jmp
adc
adc
test
add
leave
push
lahf
fcmove
jns
fldenv
add
daa
cmp
sti
dec
int3
pusha
sub
jmp
mov
mov
jg
arpl
lods
mov
mov
xor
inc
cmp
int
arpl
shlb
call
dec
ljmp
data16
incb
loope
out
pop
in
cltd
cmpsb
xchg
jo
add
push
mov
mov
xchg
imul
imull
or
movsl
pop
adc
push
mov
not
lcall
xor
in
mov
sbb
daa
push
pop
inc
aam
fists
js
les
jmp
mov
cmp
into
sbb
das
mov
jns
xor
or
sbb
dec
xchg
mov
aas
push
enter
dec
int3
mov
dec
inc
lcall
xor
inc
ja
pop
and
js
inc
repnz
in
mov
inc
movsb
mov
cli
mov
clc
mov
sub
mov
icebp
add
iret
scas
stos
add
or
xchg
movsl
rolb
lret
jbe
jg
jnp
sub
fucomi
lcall
push
cs
dec
jne
or
call
sub
mov
movsl
insb
inc
push
aad
dec
stos
sub
popa
stc
mov
out
mov
les
pop
arpl
and
or
jmp
sub
mov
push
mov
dec
ficomps
pop
cmpsl
das
leave
mov
xor
pop
ds
inc
pop
sub
mov
sub
xchg
mov
loopne
mov
inc
inc
lods
les
add
push
sbb
and
aas
push
or
cmp
ficoml
inc
call
jecxz
popf
mov
jmp
in
add
push
les
out
outsb
xchg
ja
mov
fildl
fwait
push
pop
mov
pop
dec
xchg
mov
pushf
imul
push
mov
lea
sbb
sub
adc
xchg
push
push
xchg
add
ret
mov
mov
scas
sub
xchg
xlat
cmp
daa
mov
cmp
insb
test
jle
sahf
jge
pop
sub
mov
es
add
push
mov
sarl
push
xchg
jg
dec
out
aad
jno
mov
cmp
inc
popf
pop
int
sahf
push
mov
ljmp
mov
jge
das
mov
dec
mov
add
sarl
mov
mov
daa
enter
or
mov
ljmp
mov
in
ret
push
movsl
std
ficoms
mov
sub
nop
movb
and
out
xor
int
jp
aam
jge
or
mov
cmp
and
in
je
sub
jl
test
js
outsl
jbe
cmp
mov
add
ds
mov
outsb
cmp
lods
sbb
aaa
jecxz
imul
cmp
div
mov
add
xor
mov
pop
lahf
sbbb
xor
cmpl
fidivs
lret
insl
xchg
push
push
idivb
lcall
adc
jl
cmp
xchg
cmp
cmpsb
lret
mov
xchg
rorb
inc
mov
jne
imul
adc
movsb
pop
dec
insb
cmp
xor
xchg
mov
scas
xchg
push
into
mov
cmpsb
mov
aad
jb,pt
inc
decl
pop
clc
nop
and
jno
and
adc
shlb
mov
mov
pop
fistpll
pop
jo
sti
and
fsubl
fcoml
xor
sahf
jmp
pop
xor
jmp
xchg
adc
or
scas
cs
cmp
jl
es
mov
ret
arpl
fsubr
dec
stos
pop
pop
inc
push
xor
cmpsb
fidivrs
ret
xchg
jmp
in
loopne
cmp
push
sbb
adc
loope
rcrl
test
push
out
or
gs
jnp
out
sub
push
adc
fwait
inc
sbb
sbb
pop
jecxz
outsb
pop
test
fcmovnb
xor
popa
fistl
mov
movzbl
lahf
lahf
sub
adc
xor
sbb
and
inc
mov
xchg
adc
enter
mov
mov
rcll
inc
jp
inc
rorl
push
stc
fistpll
or
stos
xchg
sbb
sub
inc
adc
pop
mov
sbb
fisubrl
cld
xlat
pop
stos
iret
add
inc
mov
xor
les
in
mov
pop
xchg
fidivrs
pop
push
in
enter
mov
sbb
mov
jl
pop
jno
inc
movsl
ds
or
jae
cmpsb
ret
data16
jle
and
iret
adc
sbb
popa
loope
cmp
mov
push
mov
pop
sbb
out
mov
mov
inc
dec
gs
aam
nop
cmp
xor
iret
call
mov
pushf
imulb
ljmp
loope
mov
push
pop
adc
scas
pop
add
push
and
cli
sti
rolb
jnp
sub
mov
es
or
lret
mov
ja
hlt
cmpsb
mov
jg
pop
adcb
lods
leave
sub
jg
jb
cmp
pop
cs
or
push
xchg
xchg
repnz
out
js
and
sub
mov
fsts
cmp
lea
in
loope
cli
loopne
push
add
push
jb
scas
mov
outsb
cmp
inc
inc
fstl
shrl
cli
mov
jle
lret
mov
clc
jp
into
mov
hlt
add
xor
mov
sub
xchg
push
inc
fsts
sbbl
popf
inc
loop
rorb
mov
mov
dec
dec
xor
call
push
xchg
out
add
sub
jmp
jae
dec
mov
lea
lock
movl
push
xchg
rorb
lret
mov
cmc
mov
jp
imul
call
test
cmp
jmp
sbb
xor
inc
lods
out
jbe
add
xchg
aas
mov
rcll
jle
sbb
jp
cmp
pop
or
pop
sahf
jbe
dec
jmp
mov
pop
push
je
add
nop
jmp
es
sub
and
push
add
shlb
or
cli
sbb
cs
inc
popf
hlt
scas
sbb
jecxz
push
pop
lcall
jbe
xor
cmp
daa
loope
xchg
pop
mov
add
inc
adc
mov
rdpmc
ficoms
je
jbe
inc
loop
jns
jo
add
mov
fucomp
mov
aas
jb
push
dec
add
mov
push
mov
loope
xchg
jg
pushf
adc
call
cmp
xor
xchg
xchg
es
scas
push
lock
sbbb
frstpm(287
push
mov
sub
nop
cmp
jge
and
adc
add
add
add
add
add
mov
add
mov
iret
add
sarl
adc
add
cwtl
call
mov
pushf
out
cmp
push
addr16
test
mov
mov
mov
loopne
jmp
aam
test
outsl
and
addl
lret
or
mov
xchg
ret
xor
and
ss
aam
inc
dec
fsub
lods
mov
fs
adc
mov
jb
dec
xchg
lahf
mov
mov
js
pop
insl
jge
mov
jp
iret
cmp
dec
call
jcxz
pushf
repnz
xor
cmp
pusha
cmpsl
or
lahf
lcall
test
xor
mov
add
rep
lret
jg
setl
mov
push
pop
adc
add
es
cmp
xchg
sbb
or
add
arpl
stos
lahf
mov
ja
pop
inc
faddp
enter
xchg
mov
in
jb
pop
ficompl
cltd
lock
daa
cmovbe
js
rcl
imul
mov
daa
mov
fld
add
out
aas
ds
adc
inc
cmp
and
cmpsl
inc
loopne
aas
sub
pushl
cmp
ljmp
inc
push
inc
dec
cmp
stos
iret
out
es
int
mov
ret
sbb
pop
cmp
jge
adc
push
lcall
add
into
jl
cmp
mov
push
out
js
imul
xchg
in
push
jmp
subl
inc
cmpsb
repz
icebp
imul
in
scas
insb
call
mov
sbb
pop
mov
sub
das
and
repnz
cli
cmpsb
adc
jae
inc
jb
pushf
xor
sbb
es
push
into
fdivrs
rcrb
fcoml
sbb
pop
insl
xor
in
idivb
cmpsl
std
cwtl
outsl
xor
sbb
xchg
insb
and
cmpsb
addb
nop
and
decl
cs
mov
pop
fucompp
mov
adc
test
mov
xchg
sub
pop
and
outsb
popf
sbb
ja
adc
cmpsb
mov
push
xchg
lcall
lods
sbb
pop
stos
cmc
sahf
xor
in
push
gs
cmp
loopne
hlt
jg
dec
pusha
mov
mov
hlt
scas
lea
es
ret
lock
imul
test
inc
lds
or
or
fmuls
dec
sbb
inc
enter
js
mov
lcall
jns
inc
dec
sbb
aad
push
mov
fadd
mov
xchg
inc
xchg
iret
adc
cs
out
sbb
xchg
out
add
aad
mov
pop
notl
shlb
test
pusha
iret
jg
rolb
scas
lock
mov
cmpsb
popf
push
test
pop
jp
dec
add
in
dec
mov
mov
add
addl
gs
aaa
dec
fists
dec
clc
mov
push
mov
xchg
insl
jge
cmp
addl
leave
cs
fstpl
arpl
sbb
mov
std
inc
mov
add
mov
enter
xchg
rorl
and
je
mov
inc
gs
jne
sbb
mov
nop
test
pop
mov
inc
sub
push
jae
stos
into
fdivrs
or
mov
in
jns
out
xchg
call
xor
mov
mov
mov
adc
cmp
push
outsb
in
xor
mov
jge
xchg
pop
mov
mov
push
ror
pop
fildl
jnp
cmp
pop
jecxz
and
popf
das
outsl
mov
scas
stos
mov
cmp
cmpsl
pop
imul
aam
jecxz
adc
stc
pushf
xchg
cmp
rolb
push
cmovno
enter
es
push
mov
mov
movsl
and
shll
mov
loopne
cmc
lret
movsl
cmp
adc
xchg
fisubl
cmpb
mov
jmp
mov
out
sbb
shrb
outsb
cmpsl
add
out
inc
scas
add
adc
mov
fcoml
mov
ret
sbb
push
addr16
mov
stos
loop
sub
mov
hlt
cmpsb
fs
dec
icebp
lahf
outsb
mov
arpl
imull
bnd
push
add
inc
rorb
gs
fmuls
sub
in
dec
xorl
test
repnz
sahf
xchg
out
lcall
adc
mov
in
jmp
std
inc
lret
rcl
insb
lods
lcall
mov
jecxz
pop
sub
jb
push
test
jb
jl
jo
icebp
fistpll
mov
in
test
add
xor
jo
cmp
lcall
pop
sahf
dec
movsb
jb
mov
gs
and
jmp
sti
jg
mov
test
imul
ficoml
cltd
adc
mov
les
fistps
nop
mov
add
rorl
jmp
enter
das
pop
push
lock
xchg
adc
fwait
xchg
xor
mov
sahf
or
adc
addl
pop
pop
cld
lret
and
or
ret
movsl
inc
mov
pop
dec
jns
std
or
inc
push
movsb
cmp
rcrb
sbbb
xchg
fadds
xor
cltd
mov
xor
inc
js
shlb
mov
mov
fdivrp
repnz
mov
sbb
lret
lods
jae
js
int3
ja
push
sub
cmp
pop
pusha
mov
subl
add
and
into
mov
cmc
mov
cmp
mov
stos
aaa
lret
pop
jns
bound
pop
shlb
rep
push
inc
mov
dec
or
jae
movsb
sti
pop
mov
cli
jns
xchg
push
neg
mov
int
cmp
cmp
mov
mov
xor
push
into
mov
sbb
xlat
in
pop
cld
add
sub
sarl
imul
xchg
mov
or
icebp
js
rolb
call
cmpsb
shlb
cmpsb
push
mov
sub
mov
jbe
add
sub
mov
xchg
sti
scas
adc
lcall
pop
popa
pop
and
adc
push
push
xchg
into
cmpb
push
insb
xchg
lcall
fcmove
xchg
xchg
mov
pop
mov
aaa
aad
cmpsl
scas
dec
mov
adc
mov
pop
popf
push
hlt
dec
ror
or
fldlg2
xor
jge
std
iret
cs
and
loop
jno
inc
jecxz
mov
xchg
xchg
int3
sub
imul
in
ret
add
mov
mov
iret
and
and
jb
inc
out
jge
shrb
lahf
jmp
cmp
adc
jge
sub
lcall
adc
shl
sbb
mov
cmp
sti
and
stos
cmp
into
cli
sub
jnp
and
mov
push
mov
lods
loopne
shll
push
mov
inc
movsb
jbe
out
cltd
mov
lock
addr16
les
and
out
mov
inc
rcrb
test
push
push
xor
popa
cli
dec
pop
imul
mov
mov
loop
dec
dec
jnp
xchg
xchg
lds
inc
ja
les
mov
mov
push
fsubrs
mov
andb
out
push
mov
push
daa
jnp
sar
fcomip
sub
push
mov
pop
pop
lods
shrb
inc
rcll
jb
lret
xor
mov
ror
xchg
clc
ja
or
sub
in
pop
fbstp
stos
fldl
and
imul
sub
mov
testl
mov
ret
movsl
push
jo
mov
adc
mov
lods
pop
mov
mov
imul
mov
xchg
std
pop
punpckhdq
shrl
pop
cmc
out
jmp
imul
sbb
jmp
ljmp
and
mov
cli
ror
jg
xchg
gs
mov
and
mov
pop
shl
mov
fnsave
xor
testb
loopne
sti
mov
jmp
dec
sbb
repz
push
jo
mov
enter
mov
into
xchg
out
push
jne
dec
adc
dec
mov
fldenv
mov
lea
aaa
cmp
daa
mov
jmp
xor
les
cmp
dec
iret
push
dec
adc
sub
jns
lret
movsb
test
push
push
loope
pushf
or
dec
dec
or
xor
loop
adc
les
jecxz
lods
les
out
jno
loopne
lods
sub
lds
mov
mov
jp
scas
fs
insl
pop
outsb
inc
mov
rcr
xchg
xor
and
aad
or
push
cli
pop
pop
rolb
cmp
insl
rol
sbb
cltd
inc
es
icebp
arpl
lahf
sbb
outsb
loopne
sbb
pop
cmp
rcrb
add
loop
pop
std
sub
rcrl
sub
sub
xchg
fisubs
imul
xor
xchg
aad
scas
add
stc
adc
jbe
leave
xor
mov
mov
xor
icebp
jbe
xor
gs
inc
fisubs
cltd
repz
mov
push
aas
mov
dec
mov
xchg
aas
mov
and
adc
cmp
lea
add
cli
pop
xor
mov
jne
adcl
adc
push
cmp
push
call
cmp
push
pop
lock
pop
outsb
loop
fadd
shll
xor
push
test
xchg
enter
mov
sbb
popf
add
push
and
xor
pop
addr16
sub
xor
dec
loopne
cld
lds
movsl
leave
jae
or
adc
out
mov
xor
in
lods
loopne
cli
ljmp
mov
leave
imul
push
sbb
lds
cld
or
ds
popf
shll
cwtl
lret
testl
add
pop
cmp
fcmove
popf
jno
add
enter
mov
cmp
dec
push
pop
fcoms
movsb
fmul
ds
xchg
mov
cmp
fcompl
xor
test
cmc
int
test
mov
and
cmc
leave
aas
push
popa
in
sbb
xor
sbb
adc
outsl
movsl
inc
cmc
iret
call
mov
jnp
int
pop
mov
out
xor
lods
mov
std
inc
outsl
xor
push
out
mov
mov
pop
fistpl
outsl
pop
stos
pop
rcrb
test
in
scas
dec
xchg
lahf
sbb
into
cmpsl
push
popa
fsubp
xlat
nop
adc
jmp
out
cld
shrl
mov
mov
cmp
scas
sbb
pop
gs
daa
mov
push
jbe
lcall
pop
rclb
mov
push
shll
push
ret
scas
sbb
jl
cmp
sub
pop
pop
lds
shrb
mov
pop
popf
popf
inc
mov
mov
mov
imul
and
jl
int
cltd
cli
inc
xchg
lods
lds
ret
xor
idivl
das
xchg
loop
cmpb
mov
xor
pop
xlat
sbb
jle
mov
inc
sbb
out
adc
cld
loop
popf
fimuls
aaa
mov
jle
lods
and
add
push
fs
sahf
mov
fcmovu
pusha
push
mov
dec
push
xor
cs
pop
pop
add
push
cmp
in
jne
outsb
xlat
xor
aas
pop
enter
dec
das
xor
push
sub
dec
dec
jo
test
xor
xchg
out
sub
popf
xor
and
rcll
inc
and
or
lods
mov
xchg
xor
roll
jne
ret
mov
add
ret
cli
js
dec
adc
jne
sarl
insl
mov
mov
mov
or
jle
cmp
cmp
inc
loop
adc
test
stos
dec
les
or
jmp
jp
subb
mov
sti
mov
sar
mov
addr16
or
mov
ss
in
jo
mov
mov
les
out
push
jge
sbb
pushf
jb
dec
mov
out
testl
ja
sbb
sub
cmpsl
stos
lds
or
jl
mov
stos
sar
call
cmp
mov
lds
dec
pop
lret
or
mov
repz
notb
add
rol
cmp
push
rcll
pop
pop
lcall
fcoms
jl
push
addr16
fwait
and
movsb
jmp
lds
mov
lock
out
scas
loope
inc
mov
mov
mov
mov
mov
xor
cli
mov
inc
lods
xor
inc
push
lret
stc
loope
lahf
mov
int3
mov
mov
and
pop
ja
mov
dec
xchg
pop
daa
sbb
jae
xchg
pop
pop
test
in
cs
push
imul
jle
or
cld
pushf
pop
das
popa
scas
popa
mov
jmp
mov
cld
xor
xor
jnp
popf
aaa
and
and
push
add
sahf
sub
push
fst
in
dec
lahf
sarb
jecxz
cmc
test
fwait
cmp
mov
xor
xchg
sub
rcrb
out
mov
and
in
jmp
outsl
das
adc
lret
test
in
cwtl
add
ja
mov
stos
cltd
ret
jl
addr16
mov
jg
enter
in
movsl
sub
add
sbb
add
mov
mov
mov
add
sub
and
pop
je
mov
xor
mov
imul
fidivrs
mov
pop
push
stos
sahf
and
call
call
cltd
imul
cs
inc
cmpsb
ret
outsb
in
push
and
in
jae
push
adc
xchg
in
stos
dec
pop
mov
sbb
in
movb
notb
lret
xlat
xchg
mov
jno
mov
movsb
xchg
hlt
add
jmp
out
mov
scas
cltd
xor
lret
xor
lret
icebp
and
sub
ss
stos
xor
jbe
les
cmp
sbb
cltd
mov
dec
pop
aas
daa
pop
cltd
lods
mov
cmp
outsl
pop
test
vmwrite
aad
fisubrs
sahf
inc
or
test
shll
inc
cs
test
mov
or
jno
jle
pusha
xor
cmp
insl
dec
lods
adc
jge
and
jge
mov
jge
dec
adc
jbe
lret
cmpsb
popf
mov
push
cmpsb
sub
mov
int3
and
xchg
ficomps
jo
dec
adc
mov
bnd
lds
sub
xchg
add
mov
shrl
orl
mov
pop
les
mov
dec
ror
xlat
pop
cmp
orb
jne
leave
pop
xor
cmpsl
xlat
nop
pop
mov
in
xchg
in
out
xchg
and
push
rcr
outsl
mov
cmpsl
in
arpl
ret
or
rcrb
stos
cmpsl
testl
in
int
pop
mov
bswap
and
test
sti
mov
sbb
jo
inc
dec
xor
xor
aad
mov
add
out
inc
mov
fs
push
dec
jns
adc
or
in
xchg
idivb
aam
dec
dec
add
cltd
sbb
test
cmp
fnop
xor
jl
bound
testb
es
cli
stos
jl
outsl
cli
test
loop
sub
mov
adc
lahf
int3
mov
xchg
dec
xchg
div
add
mov
cltd
xor
mov
fisttpl
movsb
repnz
in
mov
dec
push
push
jno
fstpl
xor
inc
lods
bound
cmp
mov
loop
sub
cmpsb
popa
push
cmc
in
mov
adc
pop
pop
ret
push
lods
icebp
es
lds
and
icebp
adc
arpl
mov
shll
pop
fisttps
or
shll
pushf
pop
push
sbb
or
ret
cmp
sbb
repz
mov
sbb
stos
fidivrl
ret
aaa
push
sbb
dec
je
pop
bound
xor
xor
mov
orl
mov
fmull
pusha
enter
add
fnstcw
mov
testl
pop
cmpsb
push
lock
into
lret
aam
fcomi
xor
mov
lahf
repz
cmp
bnd
adc
mov
ds
fnstcw
push
pushf
orl
sbb
repnz
lods
out
jg
lods
mov
test
sbb
sub
xor
xor
sub
pop
cvttps2pi
shl
pop
or
pop
out
xchg
ljmp
add
sub
push
dec
das
dec
loopne
mov
popa
icebp
int
jle
pop
jns
into
movsl
pop
fcmove
dec
imul
push
sarb
and
add
sar
add
mov
sbb
lret
cmp
xor
jg
adc
lea
dec
jo
mov
mov
jle
std
sub
jbe
inc
imul
rorl
jno
jp
bound
adc
dec
cmc
mov
insl
jecxz
fdivrl
addb
aas
inc
fsubl
mov
jl
xchg
arpl
subl
xchg
insb
jne
or
push
cltd
jmp
lds
mov
jnp
mov
push
sub
jg
rcr
and
xchg
jmp
in
sub
inc
mov
mov
sub
adc
xor
cmpsb
aad
xchg
mov
pop
aad
lds
pop
lods
scas
xlat
jo
mov
scas
push
adc
mov
rcrl
and
mov
mov
inc
inc
xchg
jg
xchg
push
jp
into
inc
lcall
lret
add
fisubl
mov
pop
out
scas
stos
mov
sbb
lock
push
inc
inc
xor
lods
insb
rol
setge
into
inc
pop
subb
sti
push
jmp
sub
repnz
gs
mov
push
fisttps
addr16
cmp
dec
push
push
cmp
adc
inc
xchg
cmpsb
into
pand
mov
and
and
mov
aam
dec
push
mov
out
mov
fwait
xchg
cmpsl
or
jmp
outsl
jns
dec
dec
pop
cli
fimull
loopne
adcl
cmp
outsl
test
add
bsf
lods
mov
lret
scas
lret
or
cmp
cmp
pop
inc
xor
xor
jmp
jae
pop
or
in
lea
pusha
mov
shlb
daa
sarb
dec
mov
ret
lret
movsb
add
fldenv
lret
testb
fdivl
js
rorb
push
add
mov
mov
cltd
xchg
pop
mov
cmp
aad
std
icebp
and
cmp
fistl
pop
push
scas
pop
ja
or
gs
movsb
add
adc
or
pop
pop
in
fistpll
xor
adc
or
sbb
cmp
mov
je
sbb
scas
lea
lds
sarb
mov
add
fdivp
fnstcw
das
bound
mov
or
dec
mov
idivb
sbb
test
push
xchg
lahf
mov
pushf
lea
or
js
dec
jae
outsb
and
pusha
xchg
push
mov
sub
rcll
or
aam
ret
jg
inc
retw
push
js
jbe
aam
cmc
pop
mov
int3
pop
movsl
pop
icebp
pop
dec
sub
dec
pop
mov
inc
xchg
lods
or
call
jbe
call
in
movsb
jno
imull
pusha
or
xor
sbb
xchg
sbb
cmp
lcall
mov
scas
divl
inc
rcll
pop
decl
cld
add
sar
lods
xor
rcr
ret
loop
testb
or
or
mov
pop
and
xchg
cmp
inc
inc
pop
cwtl
fnstsw
inc
repnz
mov
jne
divl
jb
jge
bswap
pop
add
jp
repz
and
and
mov
inc
scas
inc
xchg
mov
mov
cmp
pop
imul
jae
mov
push
lahf
gs
insl
mov
mov
js
call
xlat
pusha
push
add
cld
fwait
loop
mov
in
dec
aas
scas
push
repnz
lret
cmp
test
rolb
lret
inc
shr
das
js
xchg
ja
aaa
inc
mov
and
arpl
xor
sti
jno
mov
cmpsb
pop
cld
int
idivl
fidivl
lcall
mov
xchg
and
lahf
push
arpl
out
xchg
push
out
mov
ja
push
and
sbb
popa
fdivrp
ja
xchg
pop
outsl
pop
mov
and
sbb
imul
add
mov
jge
bound
fwait
jo
or
fiadds
shrl
mov
arpl
add
movsl
subb
dec
stos
xor
mov
or
sub
adc
cld
pop
or
lret
sub
into
cmp
test
popf
jge
cmc
sti
ss
lret
pop
pop
das
pop
inc
sub
test
pop
in
out
push
popf
add
out
test
pushf
xchg
cmp
sbb
jnp
sub
mov
adc
pop
stc
insl
mov
jne
sahf
fadds
mov
and
cmp
mov
into
and
addr16
sbb
mov
lock
pop
orb
mov
test
imul
sub
jbe
cmpl
into
or
mov
mov
lea
scas
jnp
aaa
scas
imul
pop
stos
pop
lcall
fcoml
jb
gs
ja
pop
mov
gs
test
repz
pop
test
in
std
imul
lods
jp
or
sub
enter
mov
ljmp
loop
clc
movl
jns
aaa
dec
fdivrl
and
lods
std
add
movb
aas
inc
fbstp
fcmovne
rcrb
xor
lcall
mov
pcmpgtb
add
shlb
adc
push
sbb
mov
push
inc
sarb
adc
test
or
mov
fyl2x
mov
dec
push
pushf
insl
jnp
push
lret
lods
fnstsw
push
iret
mov
inc
leave
hlt
aas
imul
cmpsl
loop
xor
sbb
push
mov
stc
sahf
inc
shll
sub
outsl
test
mov
ret
out
inc
mov
test
pop
xor
or
sub
jle
out
dec
inc
jp
or
je
mov
jnp
out
jb
sbb
inc
add
je
das
dec
sbb
popf
push
popf
leavew
rorl
fs
das
mov
sbb
fwait
insb
fstpt
nop
mov
ljmp
add
icebp
rorb
and
rcll
cmp
sahf
in
xchg
xor
and
stos
cmp
xor
lock
push
test
andl
adc
fbld
push
cmp
push
dec
cmp
or
movsl
dec
cmpsl
mov
xchg
sbb
cld
adc
push
out
lea
addr16
call
shrb
fcomps
flds
sbb
loopne
aaa
mov
cmp
sub
in
cwtl
insl
decb
and
cli
sub
jno
dec
and
adc
fcmovne
jge
adc
mov
mov
jecxz
bound
lret
inc
or
inc
ja
mov
pop
imul
xor
sub
out
lret
dec
jo
cmp
push
dec
inc
repz
dec
mov
idivb
mov
js
iret
call
or
inc
sbb
fmuls
mov
cltd
cwtl
pop
lea
movsb
push
in
shrl
mov
cli
sub
stc
sbb
or
movsl
sbb
aad
aas
pop
xchg
sub
push
pop
sarb
xor
sub
or
push
xchg
inc
pop
pushf
jne,pt
cmpsb
mov
and
lahf
imul
outsl
in
and
cmpsl
push
cmp
lahf
push
mov
jp
add
mov
jo
push
xor
sbb
rclb
sub
xchg
mov
inc
pop
jmp
xlat
jns
test
add
xor
aas
adc
je
ret
inc
mov
movsl
sti
or
cwtl
mov
arpl
fldt
cmpb
orb
je
js
pop
xor
ficomps
movsl
idiv
cmp
sbb
mov
cmp
pusha
lahf
and
call
push
rclb
pop
out
lds
mov
popf
lcall
push
add
cmp
inc
aas
sbb
pusha
xor
adc
pop
insl
cmp
lret
pop
imul
cmp
cmp
mov
test
scas
and
inc
pop
mov
in
ret
pusha
into
jl
mov
sbbl
add
imul
inc
xor
sub
out
imul
jns
clc
sbb
push
shrb
and
mov
ljmp
jle
stos
adc
cwtl
adc
outsl
mov
or
leave
jp
lcall
pop
xorb
xor
push
repnz
mov
sub
repz
lahf
popf
stos
mov
pop
sbb
push
iret
sub
pop
int
les
mov
popf
lock
and
add
or
xor
xor
push
mov
lcall
xchg
pop
jae
push
mov
cli
add
dec
add
or
mov
mov
int
mov
test
cmp
stos
lea
fiaddl
jo
cmpsb
fisubs
inc
sarl
mov
movb
sub
dec
xor
push
inc
nop
mov
jp
ljmp
in
mov
jo
test
fwait
cs
imul
test
je
inc
inc
outsl
dec
fildl
or
mov
inc
mov
inc
jb
in
push
xor
lods
cs
sbb
xchg
xor
mov
ja
enter
xlat
xor
adc
mov
mov
call
dec
add
fistl
adc
data16
mov
inc
mov
sti
lds
out
add
lcall
adc
in
mov
fabs
pop
cli
jb
lea
fstl
cwtl
scas
sti
sub
ja
fadd
dec
outsl
nop
pop
pusha
dec
inc
jnp
sbb
pushf
leave
ss
xor
jge
bound
xchg
out
ja
cs
push
lock
adc
aas
daa
push
pop
sub
add
in
clc
inc
jmp
in
rcll
sti
xor
int
xor
scas
dec
sub
mov
xchg
fisubs
jge
sub
cmp
push
cli
pop
push
sub
pop
xor
push
ja
fwait
xchg
adc
mov
jl
jae
lret
aam
add
decb
sbb
mov
or
insl
mov
jge
push
inc
mov
repnz
out
insb
jge
jae
icebp
icebp
sbb
mov
outsb
sub
adc
sbb
sub
outsb
aas
out
divl
fcmovbe
clc
inc
mov
xchg
pop
xor
mov
adc
inc
or
adc
xchg
add
lds
sub
sub
mov
and
pop
and
shrb
add
ds
dec
mov
mov
into
jno
push
xor
cmp
scas
jecxz
stos
stos
pusha
add
mov
ss
sbb
add
aam
mov
les
ja
lcall
jne
push
pop
dec
enter
repnz
shl
in
es
xchg
jae
pop
mov
insl
lods
mov
inc
hlt
add
clc
dec
arpl
xor
stos
sub
sub
xchg
mov
in
out
push
insl
addl
or
fistpll
push
dec
mov
bound
or
int3
push
incl
in
std
inc
xchg
aas
pop
and
cmp
aas
fnstenv
xchg
cmp
sbb
add
test
notl
xchg
mov
aas
ljmp
sbb
cmp
imul
ja
mov
dec
jle
inc
int
cmp
xor
popf
adc
lcall
jmp
sub
inc
mov
nop
rcrb
adcb
cld
aaa
xchg
aas
add
push
mov
lods
push
mov
ja
lock
scas
pop
mov
and
rolb
jns
mov
mov
add
sar
scas
jnp
mov
cmp
dec
sar
rcrb
cmp
subl
loop
inc
add
repz
jge
inc
xchg
jg
out
add
imul
rcrl
scas
repnz
mov
jg
test
decb
inc
ret
out
xchg
mov
xchg
pop
in
das
clc
test
mulb
shll
dec
adc
dec
push
mov
out
sbb
es
and
je
das
pop
mov
outsl
in
lcall
fwait
jp
nop
push
fnstsw
int
scas
shll
ss
test
daa
cmpsb
mov
push
cmp
xchg
mov
icebp
or
icebp
lahf
sarb
sub
inc
rcll
les
notl
mov
jmp
sbb
sbb
imul
scas
jbe
orb
and
fisttpl
lea
dec
mov
fstpt
loop
sbbl
cmp
gs
mov
or
pop
jp
lahf
test
fucom
mov
ret
xor
cli
cmp
loopne
and
push
dec
in
jbe
stc
push
shl
jle
movsb
bound
push
xchg
pop
mov
sub
mov
pop
rcrl
out
enter
enter
lcall
cmp
dec
loopne
hlt
addr16
adcb
dec
mov
lods
cwtl
fwait
xchg
sbb
fldenv
sbb
cmp
and
mov
scas
mov
lahf
rcll
push
add
subl
fs
into
and
cld
int
lods
push
in
mov
push
xor
adc
fs
shl
push
sub
push
mov
repnz
mov
and
iret
test
mov
cld
push
out
or
aad
fcmovu
pushf
lret
sbb
pop
push
repnz
push
in
fistpl
cmp
mov
mov
popf
adc
xor
mov
fdivrp
enter
pusha
repnz
mov
mov
jge
jbe
cmp
jmp
sub
movsl
jge
bound
dec
jge
stc
mov
fiaddl
fsts
rcll
adc
jp
inc
or
lods
filds
jmp
xor
inc
jle
jge
int
prefetch
roll
inc
mov
cli
cmp
prefetch
test
repz
out
fidivl
fisubrl
je
subb
std
inc
or
sbb
and
xchg
cmpsb
xor
xor
iret
fsts
jecxz
rclb
mov
jmp
add
int3
ss
js
mov
fidivrs
mov
xchg
test
pop
lods
cltd
outsb
xchg
xor
or
ljmp
mov
adc
leave
xchg
dec
adc
movsb
or
mov
loop
jbe
pop
adc
adc
mov
xchg
dec
adc
ret
xchg
push
adc
fxch
dec
out
inc
mov
pop
fs
sub
dec
mov
pop
jno
jno
test
pop
xor
jle
or
pop
mov
inc
data16
cld
xchg
pop
xor
jnp
jmp
dec
mov
jle
ja
aad
pop
rep
pushf
cmp
or
hlt
sbb
scas
test
shl
cmp
pusha
subb
push
stos
xchg
push
adc
aad
in
movsb
jge
pop
mov
outsl
mov
push
xchg
push
icebp
push
cmpsl
or
pop
loopne
ljmp
cmc
mov
dec
sub
fldl
xchg
push
pop
jmp
out
fnstenv
dec
shll
sbb
push
std
mov
ja
cmpl
movsl
push
mov
lea
xor
rclb
pop
jecxz
sub
test
shl
xor
je
mov
or
not
ret
adc
push
popf
out
inc
lahf
dec
sub
xchg
sbb
pop
shlb
test
jno
pop
jne
pop
lock
push
pop
pop
pop
stos
push
pushf
sbb
into
xchg
cld
rcrb
sahf
jae
mov
loopne
push
mov
mov
dec
aam
push
push
jle,pn
addr16
xchg
pop
adc
stos
jo
jge
aaa
lods
sbb
push
sub
lcall
lahf
ljmp
inc
fidivl
sub
sub
idiv
jo
hlt
std
popa
add
pop
int3
push
add
lret
fisubrl
sub
jg
es
clc
mov
mov
and
dec
jge
lret
xchg
lahf
out
mov
jmp
js
nop
rolb
dec
mov
mov
and
in
inc
daa
mov
dec
fistps
push
cwtl
ja
test
out
cmpsl
sub
and
cmp
out
mov
das
cli
mov
sti
add
sub
loope
sub
inc
add
jae
mov
mov
inc
pop
mov
mov
jge
arpl
push
dec
ret
call
xor
inc
mov
lahf
js
aam
inc
dec
icebp
inc
jno
dec
je
cmpsb
xchg
xchg
adc
xchg
push
pop
inc
mov
sbb
cmp
xor
cmc
adc
cwtl
jns,pn
out
add
sbb
pop
jo
cmp
es
std
fstp
mov
or
popf
sub
cmp
and
inc
fwait
jns
mov
mov
pop
adc
mov
xchg
out
lcall
xor
enter
insb
xor
inc
out
adc
pop
xchg
into
fisubl
or
rcrl
pop
push
adc
in
test
mov
mov
mov
je
pop
dec
jge
cmp
or
push
jg
jns
and
adc
sbb
loopne
jo
mov
loopne
vpmulhw
mov
pushf
inc
gs
or
roll
and
xchg
mov
in
cmpsl
mov
mov
push
fmulp
ds
sbb
mov
pop
jl
or
test
sbb
xlat
hlt
jl
adc
sub
jge
out
dec
push
pop
cmp
adc
fldcw
subb
inc
push
xchg
dec
pop
fstpt
xchg
cwtl
mov
sub
pop
inc
push
mov
inc
je
sub
add
es
mov
pop
dec
xchg
test
sbb
fisubs
cld
int
or
inc
sbb
fldenv
xor
out
arpl
mov
pushf
sbb
loop
orl
xor
mov
and
in
push
cs
filds
sar
loopne
loope
test
sub
push
mov
jmp
jle
popf
pop
sbb
je
loop
insb
iret
and
or
push
and
adc
push
and
iret
adc
lret
mov
mov
dec
jg
daa
pop
imul
ret
adc
je
inc
imul
jnp
int3
or
inc
test
cli
cmp
fisubl
lods
aad
call
subb
jmp
int
push
xor
jecxz
js
dec
stos
xor
sub
ror
ss
lods
rclb
jg
lret
push
daa
mov
movsb
ja
xor
lret
imul
jmp
je
sub
push
icebp
add
imul
scas
mov
cmp
std
sbb
and
xlat
cli
dec
jnp
arpl
out
pop
addr16
sbb
imul
int3
mull
es
in
mov
insb
pop
inc
lock
mov
inc
ret
push
sti
adc
aaa
add
jbe
cmp
mov
roll
adc
das
arpl
hlt
or
cmpb
push
sahf
pop
dec
loop
adc
add
in
addr16
cmc
jecxz
or
das
loope
push
xor
xchg
int
jecxz
mov
sub
loope
test
movsb
jmp
loop
movsl
ljmp
adc
mov
mov
out
jae
xlat
fsubl
insb
mov
and
mov
or
mov
int3
ret
pop
ljmp
sub
nop
jle
push
nop
inc
out
test
mov
ja
xor
aam
adc
fdivl
inc
or
cmpsl
pop
adc
imul
push
sbb
shrb
dec
jb
test
ret
pop
arpl
mov
or
xchg
jge
sbb
gs
testb
pop
inc
cld
pop
and
or
lock
add
dec
hlt
dec
sbb
inc
pop
add
push
das
adc
imul
mov
or
pop
mov
insb
test
sbb
ja
mov
cmp
xchg
ja
pop
dec
xor
add
in
cmp
fisubrl
addr16
mov
mov
mov
adc
orb
lods
mov
inc
mov
jne
push
mov
push
push
jl
xor
sbb
sub
iret
movsb
repnz
pop
ret
es
int3
add
push
xor
dec
out
mov
sbb
dec
sbb
fsubrs
aas
sbb
hlt
pop
pop
mov
fldl
jae
and
push
sbb
fcmovbe
nop
scas
mov
nop
mov
iret
inc
push
and
push
test
fsincos
test
mov
fstpt
frstor
dec
push
pop
stc
fisubl
xchg
xchg
mov
mov
repz
push
mov
xor
push
xchg
loopne
xor
adcb
out
mov
out
dec
jns
or
add
jbe
and
cmp
mov
or
and
push
jg
test
mov
dec
inc
sbb
movsl
sbb
movsb
xchg
dec
inc
cmp
iret
jmp
jb
in
test
mov
cmpsb
cwtl
jle
push
push
pop
push
in
push
outsb
aam
in
lds
inc
fwait
sub
mov
mov
adc
adc
clc
pop
xor
fadds
xchg
mov
test
je
imul
arpl
in
fcomps
test
insl
jg,pt
push
mov
push
adc
popf
mov
mov
sbb
and
cli
aaa
or
lods
add
in
jecxz
push
loop
add
sbb
push
xchg
or
sti
inc
inc
jl
stos
arpl
xor
ret
mov
ljmp
adc
pushf
clc
push
and
jl
add
and
sbbb
shll
xor
sub
push
pop
comiss
and
mov
div
or
popa
js
clc
out
dec
mov
push
dec
and
mov
imul
fildll
imul
mov
or
aas
dec
xbegin
mull
mov
inc
sub
aad
out
int
jge
sub
rcll
push
cwtl
jns
divb
in
mov
cmp
mov
jae
xor
inc
rol
dec
pop
dec
faddl
imul
ja
int3
hlt
cmp
je
shll
aaa
movb
pushf
mov
mov
or
icebp
pop
mov
mov
mov
adc
or
shll
inc
dec
push
loopne
jb
push
push
inc
and
insb
pop
sti
loope
mov
cmp
add
or
and
bnd
fistpl
outsb
and
push
mov
push
insl
sub
add
pop
mov
inc
pop
push
cmp
fstl
pop
cwtl
push
stc
js
adc
divb
popa
daa
lret
xor
jmp
fistpl
xchg
xor
jae
adc
nop
ljmp
cmpsl
popa
stos
hlt
fsts
bound
and
xchg
mov
xchg
inc
in
add
call
mov
gs
dec
icebp
adc
mov
lea
push
inc
mov
cs
call
nop
mov
les
lret
andl
int
cmp
mov
ljmp
or
sub
push
mov
iret
xchg
mov
lahf
add
lea
jmp
out
bound
lods
dec
mov
in
in
bound
dec
lcall
dec
sbb
out
cmp
lret
add
fst
add
jmp
iret
dec
nop
testb
fs
ljmp
aas
daa
cmp
cwtl
mov
sub
out
mov
xor
aad
lods
pusha
jns
mov
and
imul
cmpb
xor
cmp
ja
sbb
cmp
lock
jmp
pushf
frstor
leave
pop
loopne
adc
or
push
mov
mov
jb
shrw
mov
adc
lock
arpl
xchg
mov
push
call
xchg
arpl
push
mov
push
sbb
xor
mov
out
dec
adc
orl
add
icebp
jmp
out
lds
mov
outsb
adc
mov
or
xorb
adc
in
inc
dec
idivb
mov
mov
push
jns
pop
xchg
mov
xchg
cmp
popa
mov
mov
xchg
push
insl
push
add
mov
mov
xchg
shll
pop
stc
pop
jl
inc
pusha
push
pop
inc
fdivr
leave
mov
push
sub
in
fildl
cltd
sub
cmp
jns
ret
mov
jb
sarb
rcll
jns
and
movsl
xor
jne
daa
add
push
repnz
sahf
add
or
jg
pop
enter
jb
xchg
inc
stos
xchg
mov
int3
and
xchg
mov
js
hlt
and
xor
sti
lods
outsb
addr16
ret
pop
push
push
movnti
sub
pop
dec
das
and
insb
and
sub
orl
scas
fists
jl
inc
dec
dec
or
dec
jo
add
ret
fsubrl
jo
xor
cmpsb
js
xor
int
popa
or
cmpsb
push
sbb
daa
jnp
mov
sbb
movsl
add
test
mov
xorl
ret
xchg
test
xor
sbb
aas
mov
mov
and
inc
test
inc
fsubs
or
xor
jle
pop
xchg
pushf
imul
add
mov
xchg
pop
aam
daa
lea
pop
push
adc
dec
lret
xor
test
dec
pop
mov
xlat
dec
sbbb
jne
jne
movsl
subb
push
cwtl
cmp
mov
and
jecxz
inc
push
lahf
shlb
sbb
cmp
int3
jns
push
mov
mov
jne
and
test
enter
inc
fmull
mov
mov
fistpl
shrl
xchg
ja
push
mov
mov
ja
sti
imul
inc
or
xchg
mov
ret
mov
faddl
insb
fwait
cmp
cmp
push
dec
mov
dec
fcmovnbe
pop
dec
int3
lret
cmp
dec
outsb
add
adc
lcall
push
pop
sub
sub
mov
push
mov
pop
leave
jle
mov
popa
xchg
or
inc
add
stc
js
out
xchg
in
hlt
popf
in
xchg
movsb
ss
dec
mov
and
mov
pop
jge
mov
fcoms
xor
pop
push
addr16
sti
dec
aas
push
mov
je
xor
pop
add
xchg
push
cli
arpl
lahf
mov
mov
mov
push
fsts
sti
cs
iret
lea
cmp
insl
int
aad
xor
adc
leave
inc
leave
addr16
aam
mov
sti
cli
xor
adc
jnp
shlb
out
aad
cld
nop
dec
jnp
pop
pop
add
rorb
xchg
xchg
ss
and
and
jns
iret
xchg
out
imul
icebp
das
out
dec
xlat
sub
clc
out
push
ss
mov
mov
fistpl
mov
cmp
jge
lods
xchg
iret
jge
in
add
xchg
mov
pop
bt
mov
repz
adc
cld
iret
pusha
mov
fidivrs
dec
push
inc
adc
sbb
enter
or
pop
aam
mov
subl
pusha
gs
cmpsl
sub
jmp
or
xlat
scas
shlb
push
xchg
call
not
adc
mov
xor
jle
adc
pop
jl
sbb
fwait
bound
xchg
inc
xchg
les
pop
int
les
addr16
bound
in
sbb
das
lock
pusha
push
sbb
cmp
fisttps
sti
xchg
push
adc
jp
stos
xchg
inc
lahf
xchg
mov
js
inc
enter
jnp
ljmp
movsb
push
cmpsl
sub
mov
xor
push
xchg
and
mov
add
add
in
cltd
lods
aam
call
ret
mov
dec
push
mov
cwtl
mov
scas
cmpb
cmpsb
push
out
out
in
in
xchg
das
popa
in
jp
adc
xchg
push
and
ss
mov
sbb
mov
and
mov
movsl
mov
xchg
int
or
lret
fcoms
xor
or
fwait
icebp
dec
lea
mov
mov
repnz
cs
adc
cwtl
bound
cmp
popf
loopne
frstor
ja
jecxz
in
push
pop
mov
pusha
lahf
mov
jmp
repz
fbld
ja
imul
sbb
das
adc
sbb
jns
fisubl
pop
xchg
mov
lret
loope
push
movsb
xchg
movsb
movsb
pop
imul
mov
mov
mov
pop
enter
addr16
roll
hlt
jge
xchg
fcomip
jle
sti
lods
mov
dec
insl
cs
pop
dec
adc
jb
xor
pop
pop
xchg
sub
cmpb
mov
lret
loopne
cli
call
cmp
ret
les
popf
outsb
in
jne
hlt
and
jnp
insl
push
or
pop
aad
movsl
mov
lock
or
repz
mov
add
stos
int
es
arpl
pop
pushf
add
adc
jecxz
mov
adc
add
fdivrp
adc
sub
cmp
orb
push
ss
adc
add
cmp
push
fcompl
adc
bound
cmp
push
inc
clc
mov
lcall
ds
pusha
in
call
hlt
test
lea
pop
adc
lret
fcoms
js
aam
mov
divl
push
aad
addl
push
mov
add
sbb
enter
rclb
jp
dec
lds
jns
fidivs
lahf
and
and
jns
js
lahf
pop
scas
push
movl
dec
pop
xorl
dec
call
dec
push
mov
jl
pop
push
lcall
call
xchg
shll
loop
imul
lret
mov
jp
xor
into
fwait
movsl
or
cmp
add
popa
lret
mov
add
mov
add
dec
clc
pop
mov
inc
adc
add
mov
addl
popa
sbb
xchg
test
aad
mov
shlb
lea
in
out
fdivs
sbb
out
insb
filds
pop
addr16
into
jecxz
ds
stc
lcall
xchg
stc
mov
mov
ss
idivl
push
cld
leave
testl
jnp
cmpsl
push
mov
mov
pop
arpl
sub
imul
sbb
cmp
and
vpmaxsw
in
add
xchg
cmp
jbe
lods
gs
out
push
sbb
add
or
cmpsl
mov
aad
push
scas
icebp
loop
out
jbe
in
add
mull
mov
sarl
add
or
cmp
push
insb
sbb
outsl
jp
lods
jno
daa
orb
dec
ja
jb
add
loope
mov
cmc
xchg
imul
and
adc
inc
pop
dec
stos
add
cld
xor
imul
mov
shrb
rclb
xchg
cltd
add
pop
and
daa
cli
push
sarb
pop
fwait
sub
mov
mov
dec
repnz
rcrb
mov
loope
inc
sub
push
lret
scas
daa
nopl
fwait
subl
add
push
jg
ljmp
xchg
xchg
int
repz
and
mov
cmp
dec
pop
jecxz
mov
call
or
aad
aaa
mov
push
adc
or
inc
sbb
rclb
dec
hlt
inc
pop
mov
adc
ljmp
inc
bound
lods
inc
cmpsl
loopne
cwtl
dec
inc
nop
inc
bound
popa
aam
in
cmp
mov
cmpsb
lcall
ficoms
push
adc
mov
inc
pop
scas
lea
ret
lock
stos
and
sar
xchg
dec
pop
lock
nop
arpl
pusha
lahf
jle
dec
xchg
pop
sbb
arpl
mov
je
dec
loop
imul
in
stos
outsb
dec
adc
fwait
loopne
xlat
sub
leave
frstor
lock
inc
mov
pop
nop
pop
lods
les
jge
mov
jnp
rclb
fistpl
repnz
cmp
push
bound
and
ds
insl
mov
add
lds
mov
xchg
mov
mov
int3
addr16
test
xchg
int
sbb
push
push
xchg
and
pop
mov
cld
pop
popa
aaa
imul
int
add
mov
fidivrs
cmp
jmp
push
mov
jp
xlat
addr16
arpl
or
push
push
fdivrl
xor
shll
dec
insl
mov
testb
aaa
or
inc
mov
mov
imul
outsb
push
hlt
push
imul
push
dec
movsl
mov
or
loope
sub
addl
scas
cmpb
mov
leave
mov
jle
adc
cwtl
scas
mov
bswap
mov
test
shl
ret
jo
mov
dec
cmp
ja
cmp
shrl
and
fwait
add
adc
pop
mov
in
jge
sub
jg
mov
dec
movd
hlt
sub
aaa
dec
push
push
pop
mov
cmpsl
loope
pop
sbb
jb
ja
mov
pushf
imul
adc
adc
in
add
int
rorb
test
and
sbb
add
or
jmp
push
mov
xor
and
push
sbb
sub
jo
or
je
into
and
adc
repz
into
insl
add
arpl
iret
inc
cmpsl
ljmp
cmp
pusha
lret
mov
and
icebp
mov
pop
mov
mov
sbb
call
inc
ljmp
enter
insb
add
sbb
into
andl
mov
lock
cmp
pop
cld
es
outsl
iret
scas
fbld
push
pop
aam
pop
pop
repnz
bound
in
aas
pop
in
je
and
add
sub
and
xor
and
sar
mov
cmp
int3
sub
clc
cld
inc
rclb
out
std
inc
sbb
xor
xchg
sahf
add
lahf
pop
inc
sbb
sub
inc
sarl
fucom
xor
insl
subb
dec
das
icebp
cmp
pop
and
xchg
sub
cmpsb
sbb
shl
and
xchg
cmp
push
loop
call
adc
cmp
pushf
xor
mov
and
add
xchg
inc
xor
shlb
shlb
and
jecxz
xchg
mov
cmp
aad
rorb
hlt
and
loopne
out
orps
sbb
add
bnd
inc
push
mov
dec
add
jno
mov
pop
or
daa
push
push
xchg
shrl
dec
sub
xchg
jle
pop
push
stc
jg
incl
pop
cmp
les
xlat
fldcw
call
es
scas
or
imul
push
mov
clc
outsb
push
cmc
mov
sti
cwtl
frstor
jae
xchg
xchg
xchg
arpl
cmc
xchg
xor
pusha
in
jge
pop
push
fcoms
fwait
mov
and
sub
xchg
iret
jl
divl
pop
xchg
mov
push
add
sub
gs
aas
or
jmp
adcb
inc
out
xchg
push
sbb
pop
push
ja
lds
cmp
or
loopne
push
mov
std
xor
xchg
mov
idiv
mov
movsb
xchg
xchg
jo
bound
aaa
mov
pop
out
cltd
aas
dec
jbe
cmpsl
cmp
stos
ss
add
leave
movsb
mov
shrb
js
sarb
stos
stos
inc
rorb
push
cmp
xchg
or
cmp
bound
ja
insb
sti
xchg
or
stc
pop
sbb
shll
ret
mov
xchg
xor
pop
adc
lret
mov
mov
in
lret
stos
fnsave
dec
test
lret
cmpsl
mov
scas
shll
push
fcmovnbe
movsb
mov
sbb
xor
mov
int
sti
rorl
loop
sub
addr16
ljmp
cltd
mov
cmp
adc
test
dec
andb
mov
mov
push
xorb
cmpsb
mov
int3
inc
dec
out
cmpsb
adc
add
xchg
jnp
ds
imul
adc
dec
add
dec
or
or
inc
sub
lahf
mov
cmp
mov
mov
cmc
sti
lahf
mov
jge,pn
push
lret
mov
das
pop
sub
add
sbbl
addr16
bnd
xor
jp
loope
jbe
cs
sbb
sub
loope
mov
jg
dec
rcll
and
das
cwtl
movsb
xchg
cltd
push
das
jmp
leave
pop
mov
dec
or
adc
stos
cwtl
mov
clc
mov
sbb
lret
in
mov
jns
and
push
push
xor
pop
mov
or
xchg
push
mov
dec
cld
repnz
add
add
fwait
enter
and
pop
fistpl
pop
cmpsb
orl
or
test
lods
cltd
pop
cltd
xchg
hlt
pop
xor
mov
xchg
arpl
pop
or
push
sbb
adc
out
jb
push
inc
leave
out
mov
dec
pop
fistpll
imul
or
orw
dec
jmp
pop
cli
jg
and
loopne
and
mulb
gs
movsl
adcb
ss
mov
inc
adc
xlat
hlt
adc
inc
out
add
xchg
outsb
pop
push
jo
pop
mov
es
lds
call
fdivl
subb
mov
mov
insb
lret
add
call
sbb
sbb
ljmp
lea
sbb
out
fldcw
shl
cmp
inc
data16
in
out
aam
jb
popf
push
or
dec
mov
pop
jo,pt
pushf
xor
mov
sbb
negb
and
pop
push
cs
mul
repnz
sub
xor
aaa
sub
xor
fcomi
daa
lock
decb
sahf
sbb
outsb
or
dec
cmp
and
inc
push
and
mov
cli
faddl
arpl
test
in
cmp
lods
cwtl
mov
pop
adc
pop
sbb
push
rol
mov
stc
and
fiadds
fld
movsl
cmp
or
pop
cmp
dec
mov
add
dec
mul
cmp
or
mov
push
sub
test
cmpsb
adc
lds
insb
jle
add
icebp
movsl
aad
jecxz
imul
jae
ljmp
rclb
xchg
jno
fsubr
add
ror
adc
sbb
dec
lcall
dec
ja
xchg
jno
fidivs
sub
pop
inc
mov
rcll
fbld
sbb
cmp
out
push
or
shll
addps
jmp
subl
push
mov
pop
xor
imul
loope
arpl
dec
dec
inc
mov
or
ja
scas
jl
fsubr
xor
movsl
rorl
es
mov
pushf
mov
ds
xchg
adc
cmp
sbb
das
and
mov
add
cmp
push
jae
pop
jmp
subb
aam
and
lods
push
jl
insl
mov
fisubs
or
push
cmc
cmp
into
lods
filds
xchg
pop
xchg
dec
in
dec
and
sti
lret
sahf
jb
xchg
daa
scas
lret
call
pop
test
sahf
outsb
push
mov
aas
inc
daa
push
insb
xor
push
testl
pop
int3
ret
gs
and
add
push
or
mov
xor
inc
inc
lods
out
jmp
inc
jb
cmp
xor
mov
inc
idivb
adc
push
cmpl
in
or
add
jbe
das
rcrb
ret
call
loopne
jbe
pop
cmp
add
shlb
jne
or
loopne
cmp
push
call
mov
lcall
loope
sarl
rol
or
out
das
ret
jne
mov
and
xchg
xor
mov
and
iret
hlt
out
in
add
pop
and
mov
repz
mov
cmp
ret
mov
cmp
sbbl
rcrb
cltd
inc
fs
in
sbb
pop
dec
movsl
xchg
stc
iret
cmpsl
push
or
or
jl
dec
mov
test
mov
mov
dec
lods
pushf
cmp
ret
out
scas
mov
bound
cltd
or
fldcw
imul
xchg
xor
gs
jmp
and
repz
jns
jp
jmp
loope
sub
fmuls
int3
cmp
xchg
mov
pop
inc
scas
in
andb
notl
dec
push
inc
push
or
idiv
mov
adc
xor
jg
push
sbb
mov
sbb
mov
test
lcall
add
xchg
adc
jae
jg
jnp
scas
pop
shll
dec
mov
lret
mov
pop
xorb
out
ss
icebp
inc
in
push
addl
mov
xchg
test
stc
loopne
inc
nop
clc
mov
ror
xor
sbb
xchg
xchg
pusha
leave
in
and
out
es
adc
dec
lea
cmp
cwtl
inc
mov
inc
dec
mov
mov
xlat
jne
lea
call
test
ss
jb
cs
sbb
pop
cmc
test
stos
ja
movsl
fisubrl
xchg
ret
jns
je
push
in
arpl
dec
lahf
sbb
stos
mov
loope
in
test
cmpsb
outsb
mov
iret
sub
ficoms
jae
jl
ja
cmp
mov
add
and
out
fnstcw
sbb
mov
cmc
lret
push
pop
jo
inc
xchg
and
inc
lods
cltd
sbb
sahf
and
test
fcoml
xchg
addr16
ja
adc
test
mov
popf
pop
xchg
add
jp
and
jl
lds
mov
inc
inc
ficoms
mov
das
icebp
out
jnp
subl
xchg
jg
outsb
or
push
cli
push
aas
push
repnz
jp
subb
daa
fwait
mov
sbb
jns
fsubl
mov
adc
shr
pop
add
mov
scas
hlt
mov
repz
cltd
xor
jbe
and
jbe
inc
and
mov
std
andb
dec
push
imul
jge
fcmovnb
lods
pop
mov
mov
ret
mov
push
insl
xchg
inc
imul
shlb
mov
aaa
lea
dec
or
scas
out
dec
mov
xor
pop
cltd
push
ss
jmp
dec
nop
sub
sub
xchg
js
sbb
cwtl
xor
fldl
scas
out
test
insl
shlb
call
xchg
out
inc
mov
mov
and
aam
xchg
scas
ret
jmp
clc
mov
outsl
addr16
xchg
sbb
pop
decl
mov
lret
xchg
cli
fiaddl
es
cmp
lea
test
lods
inc
sub
outsb
pop
add
pop
outsl
lds
xchg
jae,pn
sub
add
andb
ret
fldenv
dec
mov
mov
popf
jle
and
in
mov
sti
call
fsts
xlat
mov
xor
xor
push
push
inc
cmp
xor
rol
dec
gs
fildl
shrl
insl
mov
arpl
das
mov
ja
movsb
cmc
push
push
lret
shlb
loope
xor
inc
add
icebp
insb
sub
int3
sbb
inc
fbstp
fcoms
xchg
push
aas
xchg
test
je
pop
push
ficomps
pop
ss
fisubs
pop
cmp
and
adc
popf
sub
cmp
mov
dec
push
add
jmp
out
fstpl
popf
xor
jbe
jnp
push
sub
dec
shrl
xor
mov
mov
push
filds
mov
xchg
cli
cld
outsb
add
in
dec
mov
jnp
pop
pushf
or
inc
bound
outsl
pop
jbe
xor
cmp
lret
mov
mov
bound
xor
mov
xlat
mov
jnp
rcl
jle
ret
pop
cmp
int3
push
ss
mov
xchg
cld
ret
lock
je
sub
lock
sbb
les
icebp
cmp
and
in
mov
add
or
and
jg
inc
shrb
add
sub
jbe
and
and
cmp
pop
xor
int3
cs
inc
lahf
xor
mov
imul
dec
jp
mov
xchg
dec
add
shrl
fnstcw
sub
mov
jge
fists
push
push
push
daa
mov
push
aaa
ljmp
lods
faddl
lds
push
pop
pop
imul
lods
sub
add
and
hlt
cmpsl
or
dec
or
pop
add
ret
repnz
fimull
stc
hlt
push
mov
mov
sub
xorb
mov
ss
jns
shlb
sahf
push
sub
sub
pusha
js
stos
fisttpll
iret
cmp
ret
dec
xchg
adc
fimuls
icebp
xchg
mov
popl
loop
add
test
dec
jp
pop
push
imul
mov
push
cmp
sub
les
fcomp
sub
rol
jno
rorb
arpl
ret
iret
push
inc
js,pn
insl
test
mov
test
fs
pop
xor
cwtl
fs
jmp
test
fstps
mov
test
sbb
mov
bnd
cwtl
fldenv
clc
sbb
pusha
ja
rcrb
pandn
adc
jge
arpl
push
imul
push
rorb
mov
jge
lcall
imul
ljmp
push
adcl
je
xchg
xor
mov
lock
cli
faddl
push
sbbl
pushf
mov
add
xor
xchg
mov
jle
mov
sub
mov
xchg
std
jno
mov
dec
lahf
aaa
lds
dec
jbe
iret
dec
mov
mov
and
push
mov
cmc
pop
sbb
repz
les
jge
shll
mov
inc
or
pop
sbbb
clc
and
shrl
rclb
add
sbb
enter
cmp
mov
push
pop
jnp
inc
xlat
lock
pop
popa
pop
ljmp
test
push
je
ss
in
mov
jae
js
jmp
mov
mov
sub
andl
pop
test
fcompl
fisubl
ds
xchg
sbb
and
mov
xlat
inc
loop
mov
seta
mov
xor
mov
dec
xor
in
xchg
mov
xchg
fxch
jle
jbe
mov
jle
iret
outsb
lds
mov
dec
dec
scas
lock
and
popa
je
xchg
bndstx
fwait
leave
sbb
mov
int3
aam
or
fisttpll
adc
sbb
and
idiv
ret
mov
arpl
pop
cli
push
testb
mov
hlt
les
xor
rolb
inc
stos
inc
cmpsl
mov
loopne
xor
loop
xor
mov
bts
pop
lods
frstor
or
lea
sbb
in
push
js
add
test
scas
mov
or
arpl
xor
pop
dec
pop
stc
fmuls
jp
jle
or
push
fldenv
lods
mov
push
push
and
or
rol
mov
jb
in
cmp
mov
cmp
pop
icebp
gs
aaa
dec
imul
jne
ss
scas
inc
call
lds
cs
mov
decb
mov
dec
test
sub
jg
dec
mov
testl
sub
inc
int3
cs
push
movsb
pop
jp
push
push
bound
and
fcmovnb
cmpsb
inc
or
inc
push
insb
push
xor
hlt
dec
lcall
sbb
clc
insl
inc
xchg
lcall
add
and
testl
cmp
call
iret
cmp
lds
mov
fidivs
jl
and
mov
xchg
and
pop
xor
xor
sbb
pop
cmpb
add
cmp
incb
inc
and
notb
or
repnz
inc
dec
test
sbb
repnz
xchg
fwait
arpl
push
aam
adc
test
cmp
repz
xchg
bound
xchg
mov
imul
mov
jb
xchg
mov
push
pop
out
roll
pop
add
nop
imul
and
stos
inc
rclb
testl
mov
cs
sub
lret
fbstp
push
or
pushl
mov
lods
inc
pop
mov
cmp
pop
add
inc
xlat
xchg
adc
dec
hlt
pop
fists
cmc
and
pop
in
mov
popf
arpl
mov
dec
ljmp
cmp
or
mov
es
testb
fwait
rep
sarl
fwait
loopne
dec
adc
insl
xor
inc
mov
clc
iret
xor
pop
rcr
in
xor
rclb
cld
rcll
sbb
adc
jno
inc
push
dec
dec
sub
out
adc
sbb
lret
sub
faddl
mov
jmp
or
xchg
push
in
scas
stc
aaa
push
pusha
lcall
dec
cwtl
mov
in
mov
orb
cld
or
rolb
add
cmpsb
loop
adc
or
adc
pusha
adc
xor
sbb
and
inc
xchg
inc
sbb
shrl
cmpsl
dec
into
mov
imul
insb
das
xchg
cmp
mov
stos
xor
mov
dec
xchg
mov
ljmp
leave
outsb
sbb
test
ss
cmp
pop
icebp
inc
lret
mov
inc
popa
adc
and
or
int3
or
stc
insb
mul
cli
loope
loope
arpl
pop
xchg
mov
jecxz
xor
mov
ret
xchg
incb
aam
inc
xchg
in
sbb
sahf
cmp
and
mov
jno
mov
jg
push
roll
mov
xchg
idivb
mov
sti
test
jg
push
stc
cmp
cwtl
subl
dec
stos
lock
rcrl
daa
adc
sbb
sti
aad
mov
inc
pop
and
push
jl
xor
mov
inc
jmp
pop
cmp
clc
mov
and
jl
jb
jge
rorl
push
mov
sbb
mov
popf
cmp
cmp
push
add
inc
test
icebp
sub
aad
xor
mov
sarl
mov
mov
lods
cmpsb
jl
mov
cmpsl
add
lahf
cmpsl
mov
push
sti
push
hlt
jae
cmpsl
mov
mov
fnstenv
xchg
mov
cltd
fisubrs
pop
push
dec
in
pop
and
test
mov
mov
rcr
ja
hlt
vgatherqpd
loop
fcoms
fadd
daa
js
dec
sbbl
jo
mov
dec
aas
out
mov
mov
adc
fimull
jmp
push
popf
pop
mov
aam
int3
addl
jecxz
jg
lret
sahf
sbb
das
fisubl
jp
push
or
es
cmpsb
jge
dec
aaa
insb
filds
in
idiv
lret
adc
lods
xlat
sub
repnz
daa
xchg
lods
rclb
enter
fs
cmpsl
cmpsl
roll
cwtl
jp
int3
fidivrl
push
sbb
mov
sahf
sub
cmp
ffreep
fistpll
out
mov
mov
arpl
lret
mov
scas
inc
xchg
sub
dec
or
jl
lahf
mov
pop
jecxz
clc
ret
loop
push
test
cmp
fildll
lahf
lods
shr
movsb
rol
add
cmp
lret
jmp
push
imul
movsb
in
adc
imul
aaa
scas
movsl
idivb
fadds
add
sub
cmp
jbe
pop
fcmove
out
dec
jns
xor
movl
mov
xchg
aam
or
mov
xchg
and
xchg
enter
jne
sub
nop
cwtl
mov
test
jmp
fucomp
push
ds
dec
loopne
sub
mov
mov
xor
stos
mov
jb
pushf
inc
push
jg
mov
out
mov
mov
data16
pop
sub
lea
push
in
jmp
sub
out
in
cli
mov
pop
sbb
dec
mov
sbb
pop
loop
xor
jl
lods
mov
or
adc
dec
fildll
sbb
outsb
mov
bound
jbe
and
xchg
push
out
std
scas
add
popa
mov
dec
loopne
sub
je
cld
mov
cmp
test
stc
cmp
pop
xchg
pop
das
clc
pop
rclb
sub
outsl
xchg
sub
pop
jnp
inc
je
or
mov
test
mov
sub
imul
dec
aad
push
sbb
mov
ficoml
xorb
in
xchg
push
int
mov
filds
mov
sbb
or
cli
jo
rolb
out
pop
sbb
lods
cwtl
sub
test
adc
arpl
test
cld
jge
je
xchg
mov
in
rcrb
sbb
aam
leave
repnz
lret
fisubs
popf
movsb
mov
ret
mov
jg
test
xlat
push
ret
out
xor
adc
add
adc
push
add
xor
sti
dec
mov
inc
andb
popa
jae
vprotd
fyl2x
lea
inc
mov
dec
int
mov
or
das
dec
sbb
adc
je
jl
and
fimuls
mov
xchg
cmc
mov
xchg
mov
in
inc
fucom
test
jmp
add
mov
jne
xchg
fistpll
pop
ret
pop
jecxz
popa
insb
jl
xor
jnp
cli
mov
popa
pop
jge
enter
jle
jecxz
mov
pop
scas
and
pushf
push
ljmp
mov
nop
ss
add
nop
xor
gs
xchg
or
aam
imul
or
add
mov
jle
jge
fdivl
mov
fidivrs
cmpsl
stc
cmp
cld
aad
xlat
cmc
push
enter
xchg
pop
neg
mov
xlat
and
sbb
imull
add
xor
sub
lock
xchg
add
cmp
jmp
icebp
push
and
pop
mov
icebp
xchg
imul
popa
and
popf
sti
inc
jecxz
inc
mov
pop
mov
dec
or
scas
pop
hlt
clc
mov
pop
mov
adc
or
xor
int3
xorb
add
fwait
test
fsubl
in
mov
mov
sub
ret
lcall
movsl
orb
cwtl
push
mov
test
scas
outsb
std
ljmp
xchg
push
ja
pop
xchg
aad
push
mov
mov
shll
rcr
out
inc
xor
xor
mov
popf
outsb
sbb
add
iret
or
pop
or
bnd
popf
cmc
mov
ja
jge
or
fcoms
stos
jmp
mov
push
push
ds
mov
mov
nop
mov
movsb
das
jo
in
xchg
les
dec
fisubrl
aaa
das
mov
push
shl
arpl
pop
mov
icebp
lock
sarl
iret
rclb
push
fdiv
fmulp
loopne
cmp
add
dec
aad
sbb
mov
xchg
xchg
cld
sub
fcmovne
push
add
orl
pop
mov
int
push
cmpsl
bound
pop
and
inc
jne
jnp
arpl
lcall
negb
jo
push
rcll
les
mov
xor
inc
push
sub
mov
mov
test
pusha
imul
xor
push
test
pop
xchg
cwtl
insb
lds
mov
mov
int3
mov
ja
les
mov
fs
call
xor
or
aad
rclb
leave
jl
cmp
aad
jg
xor
add
fisubrl
xchg
xor
test
mov
mov
scas
cld
test
xor
cmc
adc
adc
push
sub
mov
mov
cmp
aaa
lret
lea
rol
inc
es
and
pop
arpl
push
jo
mov
inc
movsl
mov
sti
das
pop
xchg
addl
lret
dec
mov
xchg
add
xor
add
mov
imul
out
pop
xor
xchg
xchg
xchg
push
mov
cmpsb
mov
sti
jne
jmp
insl
cltd
xchg
add
cmp
mov
aam
add
push
in
nop
je
mov
sbb
or
addr16
jmp
repz
add
lea
fucomi
insb
inc
sbb
cmc
dec
jae
and
sub
xchg
mov
cmp
sbb
loope
xorl
inc
aad
gs
call
xchg
ljmp
xor
push
push
add
add
adcb
fsubrl
and
fidivl
test
pop
mov
xlat
lret
mov
dec
in
cli
stos
test
adc
push
call
jns
xchg
lock
scas
pop
xor
lods
mov
adc
jns
stos
pop
mov
sub
cmp
sbb
adc
insl
movsw
or
push
lret
fdivrl
int3
cltd
je
push
xor
or
mov
dec
jns
cmc
negl
sbb
pop
pop
jo
lret
mov
nop
rorl
xor
test
push
lea
andw
cmc
in
xorl
adc
inc
ret
mov
aam
cs
out
sub
ret
jnp
rol
fisubl
lods
cmpb
mov
inc
mov
call
jl
test
mov
inc
sub
and
sahf
adc
mov
fbstp
outsb
mov
bound
push
sbb
icebp
dec
sbb
add
out
and
dec
push
outsb
mov
cmp
pop
xchg
sarl
inc
leave
jns
cmc
out
cmpsl
adcb
cmovno
jmp
push
subb
xchg
lock
fstpt
add
pop
hlt
shlb
sbbl
and
into
and
mov
sbb
pop
data16
dec
aas
mov
sbb
rolb
clc
mov
imul
adc
jge
mov
in
insb
daa
sbb
push
in
imul
sub
je
sbb
mov
lods
jne
adc
nop
jne
and
xor
je
test
lahf
cmp
sar
popa
or
or
or
mov
inc
mov
popf
xchg
dec
fucom
cmp
out
mov
shlb
mov
scas
out
mov
cmc
xchg
push
inc
adcl
rolb
jmp
loop
fstpl
dec
dec
call
loope
rorl
mov
push
add
aas
push
xor
dec
push
popl
popa
mov
cmpsb
scas
sbb
sahf
out
in
xchg
mulb
ss
in
push
cmpsl
adc
stos
inc
loope
jmp
cmp
pop
mov
imulb
js
das
mov
mov
add
lret
out
mov
pop
loop
mov
jg
fnstsw
adc
daa
push
mov
rclb
xchg
inc
inc
dec
pop
jge
pop
jl
or
push
jns
pop
fdivrl
jnp
sub
int
sub
imul
dec
pop
jmp
inc
clc
inc
pop
outsb
cwtl
aam
pop
pop
pop
jl
fs
inc
pop
pop
mov
adc
push
jbe
xchg
cli
enter
cli
jns
jmp
jns
lds
fyl2xp1
pop
cwtl
cmc
test
dec
push
int
nop
cli
inc
ja
push
imul
mov
pop
rcl
pop
insl
je
xchg
ficompl
in
mov
cmpsl
or
test
movsb
ljmp
sti
dec
aas
jp
adc
cltd
xchg
lret
mov
mov
and
lcall
mov
roll
jae
dec
mov
icebp
dec
xchg
int
mov
inc
lea
and
jmp
sbb
sub
pop
movsl
stos
or
xor
rcrb
fs
and
shll
xchg
and
out
adc
inc
clc
movb
sti
stos
test
rcrb
pop
add
fnstenv
neg
cmp
fs
stc
xchg
test
xchg
jb
icebp
adc
fwait
jne
stos
pop
dec
into
xor
mov
les
mov
das
fdivl
aaa
xchg
ficomps
xor
add
push
mov
icebp
hlt
jb
aad
mov
inc
mov
sti
add
mov
daa
inc
mov
fsubrl
pop
pop
jbe
rcll
std
dec
stc
jecxz
dec
push
imul
mov
cld
call
popf
mov
and
popf
shl
arpl
inc
lds
popf
call
dec
or
outsl
cmp
mov
call
mov
mov
and
rorb
es
lods
sub
dec
push
leave
sbbb
or
loope
fidivl
ljmp
loop
jbe
lret
push
xchg
xchg
push
sti
clc
test
mov
sub
mov
xchg
add
add
out
movsb
addb
mov
out
and
xchg
fsubrs
sbb
cmc
movsb
test
out
mov
ficoms
sbb
cmp
or
cmovp
pop
and
push
cld
ret
rolb
push
xchg
jbe
out
js
lcall
mov
mov
out
mov
dec
into
dec
push
outsl
out
test
pusha
or
roll
sbb
outsl
adc
shr
pop
leave
cwtl
cwtl
mov
dec
fwait
mov
aas
js
sub
jl
or
jge
imul
and
sti
pushf
mov
in
repz
inc
call
jecxz
hlt
ss
cmp
test
or
cmpsb
add
mov
cmp
ret
loope
xlat
sbb
stc
loop
sbb
pop
jg
dec
pop
mov
mov
test
mov
leave
jnp
or
adc
adc
or
jmp
in
into
jbe
out
rcl
lahf
in
cli
loopne
imul
dec
stos
imul
push
push
pop
inc
sbbb
xchg
pop
clc
fwait
jbe
neg
das
arpl
jne
lret
cld
dec
mov
cld
shlb
aam
cmpl
jge
mov
loop
jne
inc
testb
sahf
jmp
inc
adc
shll
dec
sbb
sahf
cmpsb
insl
fs
fists
pusha
and
push
repnz
iret
vdivss
aad
mov
mov
repnz
push
xchg
test
sbb
pop
mov
stc
jns
push
inc
mov
scas
ja
adc
mov
xchg
cmp
jo
jne
sub
movsb
adc
lahf
out
jbe
xchg
xchg
mov
in
push
ljmp
es
nop
in
movsb
sahf
stos
ljmp
aaa
aaa
into
lods
inc
xor
push
and
jne
xor
and
repnz
adc
or
mov
faddl
inc
dec
pop
call
lahf
lock
out
test
mov
out
inc
mov
in
cmp
add
std
adc
mov
mov
ljmp
push
loopne
mov
mov
in
repnz
pop
loop
and
outsb
jle
aas
jno
jne
std
popf
mov
call
push
jb
sahf
jmp
enter
das
dec
mov
cmp
mov
icebp
cld
cli
jecxz
stos
mov
and
mov
inc
adc
nop
adc
mov
lret
xchg
dec
lds
adc
push
mov
cmp
jns
repnz
xchg
xchg
insl
jmp
or
loopne
ret
fwait
in
ss
jne
push
mov
mov
leave
inc
or
pushf
jno
and
inc
sbbb
leave
mov
sbb
loop
pop
test
loop
or
add
insl
in
sbb
xchg
movsl
test
in
sbb
push
dec
out
shrb
xchg
test
mov
xchg
adc
and
lret
pop
pop
movsb
inc
loop
lods
xchg
adc
sbb
cmpsb
cmp
clc
dec
aad
mov
mov
mov
and
mov
sub
js
movsb
jb
inc
stos
push
and
lahf
mov
xor
jne
jae,pn
ja
enter
mov
sub
add
mov
mov
pop
stos
and
cltd
mov
mov
test
jle
sbbl
xchg
aad
mov
mov
icebp
dec
adc
dec
inc
xchg
sub
jbe
pop
push
cmp
xchg
arpl
jns
and
stos
inc
int3
add
jmp
idivb
pop
push
xor
sub
adc
add
xchg
rcrb
pushf
push
lods
nop
mov
inc
mov
xlat
stos
xor
push
repnz
xchg
jge
jno
jo,pn
jbe
out
adc
xchg
gs
mov
iret
and
pop
dec
xor
je
ljmp
push
add
mov
adc
lock
adc
cmpsb
mulb
data16
inc
or
or
mov
in
ret
cmp
in
cli
sbb
stos
and
in
or
mov
xchg
pop
insb
ja
sbb
dec
fisubrs
aam
push
add
sub
mov
inc
stc
jnp
repz
and
mov
mov
or
loopne
push
hlt
in
inc
mov
cld
mov
ja
mov
ds
mov
fsubs
push
jno
je
mov
js
stc
fcmovbe
push
sbb
push
out
inc
pop
pop
sbb
inc
aad
inc
cmpl
outsb
cmp
jo
imull
sub
ljmp
push
ljmp
std
jg
inc
adc
enter
ret
pop
push
xchg
ficoms
mov
xchg
in
and
dec
popf
aam
mov
ds
out
ret
mov
addr16
cmp
pavgw
dec
add
xor
jo
les
ficoms
adc
int
lods
jp
or
add
fucomi
pop
jno
mov
mov
push
enter
xorb
ja
scas
fsubs
sub
mov
cmpsb
outsl
push
loop
data16
subl
cmpsb
mov
and
or
sar
xor
push
rcrl
lock
xor
inc
stos
lock
iret
push
stc
js
pop
ss
adc
stc
mov
popf
push
fdivl
or
push
fucomp
test
jmp
jg
push
cwtl
fsts
push
dec
cmc
ret
insb
insl
xchg
mov
aaa
mov
addr16
lods
aam
sbb
adc
movl
fbld
jae
inc
mov
cwtl
clc
add
fnsave
inc
cmp
fs
push
fisttpll
imul
xchg
test
fiaddl
pusha
xor
pop
xchg
pop
sarb
stos
out
sarb
sub
and
mov
jcxz
cwtl
dec
mov
xor
jne
push
fstps
inc
insl
sbb
and
pop
pop
cmc
inc
fwait
pop
aas
cmc
sbb
push
xchg
scas
push
ror
xchg
or
inc
and
sbb
les
mov
push
pop
dec
pop
push
cmp
sbb
scas
or
pop
mov
ret
aaa
jbe
adc
jbe
lea
ja
cmp
popf
jae
xchg
mov
inc
out
test
inc
sbb
jmp
ret
jl
mov
xchg
adc
test
dec
lea
in
call
popa
rolb
push
or
push
sbb
cmpsb
out
mov
lret
or
dec
decl
popa
int
dec
mov
adc
mov
jl
iret
jp
fdivs
push
and
sub
popa
mov
and
fisttpl
nop
xchg
fdivp
das
push
cmpsb
rcll
aas
jp
cmp
sbb
inc
mov
enter
inc
shr
fistps
xchg
push
push
nop
mov
xchg
mov
mov
insb
daa
cmp
mov
or
cltd
pop
jle
or
stc
stc
mov
push
add
movsl
out
mov
dec
rorb
adc
push
cmp
out
push
pop
xchg
movsb
dec
sti
into
fists
dec
lock
and
and
cmp
and
mov
add
push
addr16
inc
in
and
lods
cwtl
push
inc
xor
pop
movnti
add
jo
mov
dec
mov
mov
cmp
ljmp
or
add
loopne
rcrb
pop
jae
adc
out
xor
lahf
xor
cwtl
mov
mov
inc
sarb
imul
jmp
adc
js
dec
movsb
cwtl
mov
add
xor
mov
jg
fsubrl
andl
lret
es
sbb
in
push
sbb
push
inc
pusha
push
aad
add
lret
and
push
loop
mov
loope
sbb
add
push
xor
jmp
movsl
movsb
lret
imul
bound
jne
pushl
dec
aam
divl
jnp
xchg
cs
and
into
pop
aad
or
push
and
inc
dec
push
adc
mov
xchg
mov
pop
adc
out
push
jbe
jge
adc
sbb
mov
mov
fistps
outsb
mov
push
mov
rol
push
sbb
adc
add
push
neg
mov
cmp
roll
outsb
out
sub
sbb
pushf
ljmp
idiv
push
lods
mov
add
cli
ret
sti
mov
add
push
lock
push
js
add
sbb
repz
nop
or
ja
sbb
enter
outsl
out
ljmp
or
mov
inc
dec
mov
mov
aad
movb
gs
test
mov
mov
cmpsb
jg
push
bound
in
xchg
push
dec
inc
sbb
into
lret
jle
mov
push
push
or
mov
popa
stos
dec
mov
lahf
scas
sbb
mov
mov
sbb
mov
lea
sbb
xchg
inc
adc
call
aas
hlt
faddl
xor
xor
adc
inc
lds
notl
and
xchg
ret
sarl
jb
inc
jo
ret
movq
sbb
push
out
lds
sbb
daa
popa
sbb
imul
xchg
dec
mov
into
out
or
outsl
movsl
mov
test
shrl
and
adc
fcompl
les
add
adc
in
inc
out
mov
jge
insl
mov
int
add
jecxz
inc
test
shll
and
or
cltd
fdivrl
sub
pushf
or
mov
and
outsb
hlt
jbe
adc
xor
aas
push
lock
fs
out
dec
ret
and
jecxz
pop
pop
scas
mov
jbe
test
xchg
mov
cmpsl
or
jp
ficoml
mov
mov
idivl
xchg
pop
adc
lcall
test
mov
and
mov
lret
jg
sti
fldt
stos
aas
cli
dec
out
pop
jp
das
inc
adc
aam
sbb
mov
cmpsl
insb
int
sub
shll
iret
xor
add
cmp
inc
or
sahf
ljmp
jmp
je
out
cmp
popf
xor
aas
mov
leave
aam
or
dec
and
std
in
dec
add
test
adc
xchg
cld
push
scas
push
nop
xchg
sbb
mov
xor
call
jecxz
xchg
ds
lods
pop
cmp
xor
sub
and
and
mov
xor
xor
stc
jo
xor
cmpsl
pop
adc
and
jle
ja,pn
adc
dec
sahf
imul
hlt
mov
rorb
pop
push
push
mov
dec
mov
mov
sbb
xchg
inc
cmpsb
mov
jne
add
xchg
add
or
xchg
push
push
push
or
inc
sbb
mov
xchg
mov
inc
js
jmp
idiv
adc
std
jle
mov
mov
mov
mov
nop
inc
mov
int3
loop
loope
pushf
sbbb
lock
mov
mov
cmp
cmp
fldt
pop
fildll
cmpsl
sbb
add
pop
js
or
pop
mov
cmp
sbbb
mov
test
xchg
test
mov
aad
testb
sbbb
mov
mov
gs
inc
sub
xchg
push
movsb
add
sub
repnz
inc
or
mov
fwait
into
xor
lods
inc
jns
lcall
test
or
loopne
pop
clc
ljmp
mulb
call
sbb
mov
pop
ret
sub
adc
js
push
dec
loopne
aad
push
inc
jmp
and
cmpsb
cld
mov
arpl
scas
inc
push
inc
push
loopne
push
test
or
mull
outsl
or
scas
repz
xchg
mov
and
jmp
popa
or
ffreep
jmp
in
mov
mov
sub
lret
out
dec
push
subl
cs
sub
mov
daa
sbb
cltd
jp
data16
jecxz
aas
xchg
jle
mov
push
movsl
xchg
jbe
ss
int
mov
mov
push
jl
sti
adc
out
sbb
std
xchg
pop
add
jb
dec
push
and
lret
xor
sub
xchg
xchg
pop
dec
jnp
inc
movsb
mov
gs
jg
inc
add
je
mov
xor
aam
std
dec
aam
insb
lahf
cwtl
jle
mov
dec
and
pop
mov
inc
test
jp
push
inc
fwait
jno
lods
jb
and
dec
addl
outsb
xchg
cmc
lds
dec
push
sub
jge
in
js
push
leave
xchg
clc
test
push
hlt
in
mov
mov
cmpsl
popa
pop
scas
sub
or
out
pop
imul
xchg
scas
rolb
rorb
das
sbbl
mov
pop
add
imul
dec
jmp
adc
jb
aaa
adc
je
sti
dec
cmc
hlt
addb
repz
std
xchg
mov
in
out
push
ret
into
data16
hlt
push
cmc
or
dec
leave
xor
jmp
stos
addr16
xchg
dec
and
aas
mov
and
jmp
rcrb
subb
stc
fmulp
pop
mov
stos
fsts
into
pop
imul
dec
cmp
out
push
sub
rcll
enter
mov
outsl
clc
jmp
ret
outsl
sub
arpl
int3
inc
stos
cmp
or
sub
fmuls
cmp
mov
adcl
sub
jmp
pop
or
rol
dec
and
shrl
ret
mov
lcall
inc
sbbb
mov
jmp
je
cmc
adc
sbb
int3
repnz
dec
push
cmc
rorl
int3
test
cmp
loop
xor
scas
sarb
shlb
and
movsb
in
fstpt
sahf
cli
jae
inc
push
aad
ret
or
dec
adc
js
call
mov
test
sbb
pop
push
fsub
shr
xchg
sbb
repz
inc
add
fs
cmc
push
cmp
add
push
jno
xchg
adc
xor
fcomps
pop
add
enter
mov
aas
sub
push
loopne
fwait
cld
iret
out
or
mov
dec
inc
daa
or
jecxz
popa
clc
test
mov
xor
insb
cmovp
ss
mov
sub
add
jl
or
xchg
push
pop
pop
push
pop
mov
movsl
insb
push
adc
popf
mov
stos
dec
ffreep
cld
cmpsb
dec
mov
push
mov
in
orl
imul
push
push
mov
inc
outsb
mov
aaa
xchg
sub
inc
sbb
sbb
imull
and
insb
add
jae
xor
xchg
lea
imul
xor
mov
jno
xor
lret
ret
add
push
push
inc
push
jns
adc
insb
pop
enter
pop
mov
loop
icebp
lret
sbb
iret
push
mov
lret
lods
in
xor
leave
cmp
jecxz
adc
dec
sahf
out
mov
mov
pop
or
jl
out
add
fs
pop
and
imul
out
adcl
ljmp
ss
sbb
or
vmovhps
leave
dec
fs
popa
leave
add
out
and
nop
mov
adc
xchg
and
inc
dec
in
xchg
test
pop
lds
xor
cld
or
mov
mov
cwtl
fidivs
xor
test
add
sub
out
ds
pushf
mov
sbb
lret
fiadds
es
xchg
xor
movsb
sub
ljmp
andb
sbb
mov
icebp
les
pop
cmp
dec
jb
hlt
popf
and
in
mov
mov
lahf
pushf
dec
pop
test
or
fwait
daa
sbb
jp
ljmp
pop
cltd
cmpsl
xor
das
in
in
pop
sub
lock
fisubrs
mov
fsubs
xor
mov
sub
mov
mov
cmp
and
dec
cs
out
jle
cmp
sub
ds
pop
cmp
mov
jo
xor
aas
cmp
ficomps
pop
mov
jmp
dec
movaps
and
popf
cmpsl
sub
dec
je
cmp
pop
add
rcl
push
mov
mov
cld
into
mov
push
mov
sub
cmpl
jp
scas
push
sbb
mov
sti
xchg
lcall
shr
cmp
push
fisubrl
cmpsb
xchg
sbb
mov
jbe
shll
lods
and
cmp
xor
and
jb
or
ss
lock
negl
fcoms
mov
add
cwtl
add
icebp
push
xchg
push
int3
push
jnp
je
cwtl
push
fisubs
mov
sbb
out
pop
mov
ljmp
add
int
leave
unpcklps
insl
mov
mov
dec
leave
pop
aas
add
mov
jbe
sahf
push
dec
jne
lea
int
dec
inc
jnp
add
lods
jno
jnp
movsb
jbe
repz
mov
icebp
dec
sub
mov
push
push
mov
gs
mov
xchg
xchg
sub
icebp
out
lea
or
fwait
je
cmp
aam
stc
pop
mov
fsubl
popa
adc
adc
jo
or
mov
in
addr16
popa
and
push
or
or
push
cmp
xor
iret
cmp
sarl
lcall
pop
inc
icebp
fwait
pop
ss
inc
xchg
push
dec
enter
in
xchg
rclb
call
into
inc
adc
loope
insl
inc
cmp
cmp
stc
popa
mov
mov
xchg
or
rorb
jge
push
fisubs
inc
bound
into
sub
jb
push
add
call
pop
in
movsl
outsl
std
fwait
mov
dec
rorb
xchg
cltd
cmp
aas
test
ja
sbb
int
mov
xor
xchg
add
jbe
sbbl
push
stos
shlb
xor
loopne
mov
adc
daa
cltd
dec
enter
mov
dec
lods
daa
das
pushf
push
inc
xchg
fcmovnu
in
aam
outsb
das
out
pop
lds
fsts
mov
rorb
pop
lods
pop
inc
sbb
call
xor
sbb
mov
adc
jo
data16
sbb
mov
ds
bound
sbb
testl
fstl
pop
mov
sbb
call
repnz
adc
add
mov
popa
fwait
mov
popf
inc
out
mov
sbbb
mov
lret
ljmp
scas
mov
imul
es
mov
dec
icebp
movsb
xchg
ss
shl
insb
adc
fsubr
cmp
rolb
sbb
xchg
sbb
cmpsb
cmc
sbb
out
mov
xor
inc
dec
inc
sub
and
mov
mov
jae
movsl
cli
or
cmp
call
mov
or
jne
dec
pop
mov
cmp
hlt
scas
imul
popf
and
xchg
shrb
je
push
inc
push
ret
mov
orb
lret
or
popf
int
dec
scas
out
and
mov
mov
das
dec
mov
mov
xchg
stc
push
leave
mov
inc
cmpsl
hlt
pop
lret
and
mov
ja
stc
fidivrs
and
out
dec
mov
mov
std
sub
mov
lock
call
mull
and
fcmovu
cmp
xor
and
jb
js
xor
fs
dec
cmp
ds
arpl
cmpsb
and
mov
dec
stc
xchg
out
jnp
lods
int
and
outsl
jge
les
push
ficompl
test
push
mov
leave
jge
dec
stc
mov
out
pop
sub
cmp
jb
jecxz
test
pusha
mov
cltd
jp
sbb
add
cld
aam
shl
or
xor
pop
push
pop
xchg
add
mov
or
and
mov
xor
jns
repz
add
jno
mov
dec
mov
and
jmp
push
gs
xor
fsts
mov
xor
xor
cld
pop
xchg
push
test
shlb
or
mov
test
call
add
stc
add
inc
nop
scas
ss
cwtl
mov
stos
cld
sub
imull
lds
fnstsw
sub
int3
push
cmp
pusha
das
cmp
repnz
das
mov
icebp
inc
cmp
fsubr
dec
xchg
push
in
push
mov
inc
inc
divb
push
inc
adc
xor
out
js
lods
bound
add
inc
insl
and
mov
inc
add
sbb
adc
insl
xchg
lret
mov
pop
inc
fdivl
jne
sub
mov
mov
sbb
or
ficomps
int3
orl
mov
mov
loopne
xchg
ja
cmp
loopne
mov
cmpsl
das
and
imul
or
push
add
lahf
sbb
pushf
in
jl
pop
lret
cld
mov
icebp
testl
aas
cwtl
jg
sbb
or
xor
push
xchg
imul
dec
xchg
jne
jno
xchg
lock
popa
push
adcb
es
lret
cld
add
inc
popl
xor
xlat
cmpsl
dec
out
dec
mov
push
pop
jb
mov
fcoml
mov
call
xchg
std
ljmp
mov
jl
cmp
imul
iret
loop
cmp
lds
pop
shr
inc
lcall
daa
add
test
clc
sub
mov
outsl
xor
xchg
pusha
rdmsr
in
add
mov
jge
push
icebp
xor
fs
clc
loop
xchg
dec
mov
lock
xor
dec
mov
dec
sub
jle
mov
mov
lods
xor
outsb
divb
mov
popf
mov
adc
and
inc
push
cmp
stos
and
push
mov
or
add
inc
jmp
orb
xchg
es
add
fstpt
rclb
popa
add
into
mov
lea
cmpsl
dec
mov
repz
lds
stos
lea
inc
mov
orl
hlt
out
repz
lret
stos
in
inc
xchg
jno
dec
mov
mov
adc
into
lahf
jle
and
adc
xchg
push
bound
cmp
and
cli
bound
pop
or
pop
cwtl
or
notb
pop
fxch
xchg
fdivl
and
stos
test
test
cmc
leave
adc
mov
dec
ss
mov
jae
imul
int
mov
jge
push
clc
xor
movsb
sbb
out
bound
stos
stc
jo
iret
loope
push
mov
xor
in
or
or
loope
gs
jg
leave
rorb
daa
ss
push
xor
mov
in
popfw
insl
pop
mov
xchg
pop
sub
or
pushl
mov
stos
stos
aam
iret
stos
xchg
ret
jb
dec
sbb
mov
xchg
mov
sbb
xor
in
and
jp
sbb
aas
in
ss
scas
leave
inc
pop
ja
test
addr16
mov
xchg
outsb
test
push
mov
adc
rolb
dec
xchg
cld
fisubs
pop
inc
adc
dec
xchg
aad
mov
mov
popa
and
ljmp
mov
xchg
std
test
push
dec
or
xor
stc
jle
repnz
test
cmp
mov
cmp
xor
in
cmp
in
pop
mov
push
lret
sbb
jnp
cmp
xchg
push
sti
push
and
in
cmp
es
push
out
movups
adc
inc
cmpsl
push
or
imul
push
xor
sub
inc
dec
leave
jae
sti
cmpsl
jbe
stos
jno
cmpsl
ds
roll
pop
add
scas
movsl
pop
out
mov
mov
add
sarl
inc
stos
dec
aaa
mov
movsl
push
lods
test
mov
xchg
cmp
pushf
movsl
cmp
and
mov
inc
push
push
outsl
xchg
insl
aas
cli
shlb
ret
int
pop
sbb
inc
mov
arpl
jno
pop
cmp
mov
mov
adc
idivb
fisttps
fnstcw
js
or
cmp
or
pusha
push
or
and
subb
pushf
add
into
cmp
aas
int
cmc
es
out
jnp
ret
imul
sub
inc
cli
mov
adc
adc
cltd
jecxz
add
sbb
xchg
inc
sbb
dec
daa
jg
aad
inc
xor
lea
cli
shrb
dec
in
scas
in
and
xchg
leave
jmp
cmp
mov
stos
jo
fsubl
jno
add
or
xor
jecxz
ss
xchg
insb
leave
fbstp
loop
add
inc
sub
ss
std
add
cmp
dec
push
mov
pop
mov
push
arpl
fcomps
fisttpl
test
mov
pop
dec
xchg
mov
lock
fimuls
iret
add
popf
stos
sub
loop
divl
xor
loopne
xor
push
jmp
repnz
repnz
add
push
mov
pop
pop
nop
outsl
inc
into
mov
xor
stc
cmpsl
jmp
inc
fldt
je
lcall
and
movsl
xchg
pop
pop
in
lock
std
push
pop
scas
inc
scas
mov
mov
pushf
jo
ja
les
xchg
push
jle
nop
jae
imul
cmpsb
and
and
mov
jmp
push
int3
sbb
cmp
sbb
mov
movsl
dec
cs
sub
imulb
lret
push
dec
fldt
xchg
jecxz
das
std
or
test
or
add
mov
jmp
notb
push
push
fs
scas
outsb
add
in
sbb
sub
iret
inc
stos
adc
jnp
std
inc
cmc
insl
or
lods
jmp
stos
call
cmp
lret
test
out
out
aad
int
mov
dec
push
add
mov
hlt
pop
jne
pop
adc
scas
insl
mov
or
and
dec
mov
sub
loop
or
loopne
scas
mov
inc
pop
lea
subl
inc
sarl
shlb
cmp
sub
scas
sub
adc
iret
pop
ds
or
shrb
test
xchg
inc
dec
sbb
dec
mov
lods
mov
xlat
inc
push
rcr
sti
pop
dec
or
xor
fbld
and
sbb
fsubr
ret
mov
and
and
das
fs
test
push
xor
sub
jne
sbb
pusha
add
gs
jb
jmp
aas
push
dec
sti
inc
jg
jle
dec
pusha
hlt
mov
loop
or
or
push
add
or
mov
call
fwait
mov
xorb
and
inc
xchg
sbb
or
call
push
fldl
fwait
dec
pop
inc
cmc
in
adc
and
lahf
mov
outsl
sarl
adc
xor
ljmp
mov
iret
inc
push
clc
sbb
bound
fadd
ja
add
aaa
pop
mov
inc
mov
push
dec
movl
xor
add
sbb
and
fistpl
mov
sub
sbb
out
repz
sub
dec
inc
xchg
in
aaa
mov
mov
nop
into
jne
ja
mov
int3
add
pop
push
jle
sub
fwait
sbb
mov
pop
imul
and
sbb
ret
aaa
mov
cld
sbbl
mov
sbb
and
insb
mov
ret
jae
hlt
mov
pop
jg
inc
jge
jp
and
cltd
mov
fbld
dec
cmp
cmp
sub
mov
fstl
mov
test
xchg
jg
and
jns
mov
test
adc
shll
ret
test
mov
nop
ja
xor
mov
aad
xor
mov
and
repz
adc
lods
in
dec
mov
jmp
add
jo
in
pop
sbb
or
xchg
std
xchg
push
push
adc
jb
ret
lret
repnz
push
adc
jmp
rcll
stos
xor
push
xor
in
jbe
loope
pop
test
popa
cmpsl
add
fs
in
mov
mov
ljmp
rol
xchg
inc
jle
outsl
or
movsl
adc
inc
jbe
movl
jne
test
xchg
shr
lea
ficomps
xor
call
test
stos
mov
std
xlat
dec
cmp
lret
stc
aam
mov
adc
clc
fs
xchg
popf
sarl
cmp
mov
sub
lds
ret
int3
jmp
scas
push
add
daa
xor
pop
adcl
cmp
sbb
push
mov
int
sub
mov
test
jge
fstps
jae
int
ljmp
nop
jo
inc
add
mov
daa
jecxz
test
mov
pop
jne
push
and
rol
fstpl
nop
nop
cmp
repnz
pusha
stc
xchg
pop
cmp
sub
pushf
mov
sub
rorl
into
sti
lods
add
add
push
scas
decb
sub
xor
inc
push
pop
mov
dec
imul
jp
xchg
xchg
cmp
imul
cmp
push
gs
xchg
mov
xchg
or
pop
negb
cmpsb
xchg
mov
xor
ret
push
adc
fimuls
rcrl
rcl
sub
fiadds
adc
xor
pop
insb
pusha
je
push
imul
push
adc
jg
jp
das
dec
daa
xor
aas
adc
cs
bound
mov
test
repz
sub
in
rorb
lret
or
aaa
xor
fnsave
imul
jecxz
sbb
daa
call
xor
push
cli
imul
adc
call
dec
popa
imul
aas
bound
inc
cld
sbb
std
xor
les
dec
aas
cmp
out
mov
gs
int3
jecxz
aas
gs
es
push
inc
js
lret
fadd
movsb
repz
jo
xor
mov
imul
mov
add
test
in
cmp
push
xorb
ljmp
jae
pusha
setae
out
mov
scas
shrl
inc
hlt
xor
int
pop
push
jg
dec
jmp
cld
adc
bound
mov
shlb
popa
jl
inc
jecxz
or
sbb
xchg
fadd
xor
sub
scas
add
push
pop
das
push
push
add
sarb
fiadds
xor
xlat
arpl
out
loopne
mov
sub
lods
inc
adc
mov
pop
dec
ja
roll
xchg
leave
jnp
fsubl
sub
fwait
push
prefetch
in
test
sti
mov
push
inc
push
sub
xchg
les
je
aas
test
loope
or
jmp
inc
mov
pop
pushf
out
xchg
jae
xor
das
or
fwait
lds
xor
cmpsb
jle
pop
in
or
pop
pusha
xor
xchg
mov
jnp
shrl
or
jbe
add
shrl
sbb
pop
mov
jno
popa
test
mov
movsb
loop
jmp
rcrl
int3
add
loop
addb
jbe
adcl
mov
add
cmc
imulb
xchg
jno
jl
fildl
cmp
je
repnz
mov
lret
pop
push
and
ret
pop
push
lock
xchg
repnz
jns
mov
es
test
sbbb
ljmp
ds
cmp
pushf
push
cmp
jne
push
out
adc
mov
sbb
push
je
xor
es
incl
and
jg
andl
loop
cmpsb
subl
fistps
mov
pop
leave
jecxz
or
mov
inc
in
sbb
ficompl
movsb
aaa
cmpsl
adcb
aam
jb
insb
cmp
push
mov
cs
repz
pop
cwtl
cmc
push
mov
mov
xchg
aad
sbb
icebp
jnp
ret
xchg
push
mulw
aas
rolb
mov
dec
mov
and
xchg
popa
and
xor
lea
sbb
mov
mov
cmp
mov
aad
inc
fsubrp
dec
mov
xchg
xchg
sbbb
ja
jnp
daa
test
aam
outsl
outsl
iret
sbb
bnd
xchg
sbb
shlb
or
enter
mov
in
jl
movsb
imul
rorb
mov
inc
in
and
add
jb
sbb
adcb
dec
mull
dec
jle
std
das
and
push
ret
je
cmpsb
cli
call
std
aad
sub
scas
loope
mov
or
mov
ror
mov
pop
inc
or
pop
xor
adc
add
xor
push
sub
and
adc
stos
mov
in
xor
ss
jmp
mov
dec
ljmp
adc
ja
es
mov
out
push
inc
shrl
je
dec
push
repz
into
nop
out
fstpt
xchg
dec
rcrb
in
adcl
sub
icebp
call
push
and
call
xor
pop
dec
inc
push
mov
pushf
lods
mov
loopne
fst
jo
lods
inc
push
cmp
add
mov
in
lret
fcmovnb
push
pushf
push
cwtl
add
int
mov
add
cmp
or
mov
test
clc
imul
adc
sbb
xor
push
cwtl
shl
push
lods
cltd
sub
pop
lahf
pop
shll
sub
pop
mov
test
jmp
popl
xchg
sbb
xchg
outsb
or
push
mov
iret
and
mov
sub
mov
xor
mov
js
aam
inc
movsb
out
test
je
mov
pop
jg
ljmp
cmpsb
shrl
stos
add
call
xor
xchg
and
push
aam
shll
dec
and
inc
add
cs
push
imul
pop
sbb
xchg
rol
std
fistps
mov
and
xor
in
mov
pop
dec
cmp
daa
repnz
push
clc
dec
or
push
stos
icebp
cmovns
lea
sarb
es
mov
js
aam
pop
mov
repz
pop
popa
or
mov
testb
and
fisubrl
inc
das
cwtl
pop
cmp
clc
cmp
cmpsb
adc
jno
pop
push
inc
out
pop
inc
inc
leave
cld
and
add
int3
dec
xor
pop
data16
cmpl
fdivs
and
mov
pop
test
js
push
mov
popa
add
sub
push
xchg
dec
mov
mov
out
mov
mov
scas
orb
xor
inc
cmpsb
push
sub
jns
dec
mov
inc
add
outsl
dec
sub
inc
lahf
lock
cmp
test
xchg
dec
pop
imul
sub
imul
repnz
test
jo
add
sbb
dec
push
dec
sbb
fldenv
mov
cwtl
xor
jo
mov
cltd
sbb
push
add
sub
dec
std
aad
or
mov
ret
sub
test
push
rcrl
xchg
outsl
add
cli
jge
cmp
mov
mov
testl
std
mov
out
pop
and
test
repz
and
stos
xor
jne
cltd
inc
add
test
mov
mov
sub
rcr
cmp
icebp
xchg
push
ds
fnsave
popa
fwait
or
iret
mov
stc
mov
shll
repz
mov
sbb
rorb
cmp
push
pop
je
mov
sbb
mov
jb
pop
ljmp
sub
in
imul
mov
pop
test
mov
popa
lods
xlat
push
sahf
iret
scas
cmpsl
lods
stos
and
pop
mov
mov
sub
inc
push
push
roll
push
jmp
xchg
shlb
push
jl
mov
and
test
test
ficoml
sti
mov
sbb
fldenv
or
inc
push
jb
dec
scas
ss
pop
ret
iret
and
repnz
sub
mov
scas
aas
mov
xchg
push
jns
mov
inc
pusha
rcl
notl
or
sub
cmpsl
call
mov
and
sub
jecxz
lcall
dec
nop
stos
jmp
ret
jnp
addb
sbb
xchg
scas
xchg
test
js
leave
stos
jp
scas
lret
pop
popw
loop
subb
cmc
jnp
jns
sbb
adc
repz
pop
dec
or
ja
sbb
in
pushf
inc
fdivrl
popa
ret
out
test
pop
mov
data16
scas
in
cmp
push
cmpsb
push
jno
mov
mov
fisttpl
ds
testb
push
dec
xor
jo
jle
xchg
sahf
decb
pop
in
lock
test
outsl
adc
or
out
scas
dec
inc
adc
shrl
in
lcall
hlt
pop
loopne
pop
or
sti
mov
mov
xor
push
sbb
xchg
pop
mov
and
xlat
and
xor
jecxz
sub
mov
pop
stos
js
mov
aam
das
push
mov
xchg
insb
inc
int
dec
data16
mov
decb
mov
push
dec
jecxz
leave
xchg
test
clc
dec
mov
in
fdivr
pop
jle
cs
pop
cmp
sub
push
insl
popf
les
fdivl
cmc
testl
fistpll
lods
ficoms
shl
bound
lret
jne
imul
in
pop
sub
cli
cmc
imul
in
and
inc
out
push
jp
movsl
add
dec
cmp
xchg
pop
rclb
jne
pop
mov
add
pop
xor
clc
push
loop
in
pop
jo
lret
adc
sbb
adc
jecxz
repz
sbb
mov
arpl
cmp
and
cwtl
jns
mov
xor
aad
nop
repz
adc
call
adc
shrl
cmp
inc
cmc
cli
push
push
imul
leave
loopne
or
and
push
add
xsaveopt
sub
inc
mov
in
mov
xchg
jbe
sub
add
push
testb
arpl
add
fadds
pop
push
push
loopne
add
add
sub
push
test
dec
xchg
ret
les
fneni(8087
imul
cmp
jmp
nop
and
ret
push
cmpb
cwtl
cmpsb
mov
sub
repnz
push
jne
add
adc
jecxz
jo
sbb
stc
scas
and
lret
adc
cs
fiadds
lcall
dec
xor
jno
jb
xchg
mov
mov
fmul
popf
shlb
stc
push
and
sub
xbegin
loopne
int3
pop
iret
cmp
xchg
mov
leave
lret
jb
cmp
jge
or
imul
push
cs
pusha
clc
movsl
mov
repz
lsl
xor
inc
rorl
sbbl
shrb
cld
xor
popf
ffree
or
add
inc
lods
scas
lret
mov
inc
test
inc
addr16
push
lock
xor
and
push
out
adc
sub
clc
mov
cmc
xchg
mov
add
push
and
out
outsb
and
fsubrs
push
push
idivl
xchg
push
cmp
add
enter
mov
stc
pop
shrb
jp
enter
imul
ret
push
inc
lahf
fimull
sub
mov
stos
inc
outsb
shll
inc
mov
icebp
push
cmpsb
or
inc
rolb
ficompl
test
push
int
pop
test
mov
xchg
xor
leave
add
notl
xor
pushf
xchg
and
shrb
orl
mov
push
pop
add
push
cld
inc
and
mov
push
ret
pop
sbb
in
fidivs
mov
or
mov
movsb
scas
mov
ss
or
adc
popf
pusha
push
xlat
scas
iret
xor
and
fstpt
inc
and
fadd
mov
or
sahf
xchg
adc
xchg
movsl
stos
iret
sub
xor
pop
ss
fcomi
or
shld
sub
adc
mov
arpl
pop
call
mov
mov
rcrl
out
cmpsl
or
rorl
inc
add
mov
adc
aaa
arpl
push
cmc
push
lea
pop
mov
push
test
leave
push
and
jl
inc
cmpsl
lret
stos
pushf
fildll
pusha
test
and
dec
imul
inc
pop
jp
jle
push
pop
pop
loopne
cwtl
xor
je
nop
mov
or
rcrl
xchg
jns
sbb
in
or
clc
xor
js
fnsave
test
cmc
or
mov
stos
ret
pop
xchg
loope
push
fistpll
add
fwait
scas
sbb
cli
lahf
cmpsb
sub
ss
sub
push
jg
into
and
adc
ss
jo
mov
inc
mov
js
fwait
aam
push
cmpsb
sbb
jp
xor
adc
inc
cmp
out
mov
shlb
cmp
jg
pop
jmp
fwait
out
jmp
xchg
mov
test
xchg
or
mov
loope
xchg
sub
clc
push
arpl
idiv
push
lret
dec
in
add
mov
gs
push
arpl
lods
in
add
inc
outsl
jbe
pop
cmp
sub
psubusb
jl
movsb
shl
les
aad
std
xchg
pop
scas
push
fildll
scas
loopne
sbb
inc
repnz
jb
jbe
sub
in
inc
jne
inc
subl
popa
mov
or
lea
aam
push
sub
ret
xor
insb
sub
jmp
in
clc
mov
mov
inc
rclb
mov
out
jg
aaa
test
ljmp
in
orb
sub
push
cli
adc
fmul
das
rorl
fldl
shlb
clc
shll
cmp
xor
and
negb
mov
out
pop
sbb
movsb
pop
sti
xchg
push
push
cmpsl
test
xchg
lret
push
shlb
sbb
dec
xor
sub
arpl
ffreep
add
fiadds
add
ret
mov
mov
ret
xchg
dec
or
jns
xchg
out
push
aam
push
jge
xor
mov
imulb
hlt
shr
outsb
xor
pop
orb
in
imul
push
fucomi
je
cmpsb
or
and
cmp
mov
push
nop
dec
mov
fwait
pop
shll
arpl
cmp
mov
sub
mov
jp
test
mov
fwait
sbb
gs
in
clc
cltd
and
jbe
push
or
dec
leave
mov
stos
xchg
inc
lods
mov
and
adc
mov
jo
sub
jecxz
inc
inc
loope
mov
mov
outsl
pop
lea
out
mov
insl
mov
sbb
fsubl
xchg
xchg
fimuls
xchg
mov
fldt
outsb
push
add
push
jne
jp
rolb
pop
mov
fsubs
mov
test
cmpsl
jp
lds
xchg
out
in
clc
xor
into
popa
test
insl
or
imul
mov
ret
andl
inc
mov
xchg
clc
pop
lcall
jo
xchg
or
in
xchg
sub
lods
je
fidivrs
sub
scas
inc
filds
add
fmull
sbb
lret
ja
out
xlat
mov
dec
aad
test
fsts
adc
push
aaa
or
or
cmc
lcall
sub
adc
ds
mulb
push
in
xor
rclb
or
cmp
xchg
and
out
push
dec
xchg
shl
push
or
cs
sub
sbb
push
push
rclb
pop
sbb
mov
call
sbb
xchg
je
int
out
rorb
in
je
stos
mov
loop
iret
aam
adc
xchg
iret
xchg
hlt
add
xor
push
icebp
and
or
loopne
xchg
inc
orb
pop
mov
aas
push
cli
and
push
loope
mov
sub
lods
lret
pop
adc
stc
pop
repnz
loope
insl
dec
dec
sub
out
mov
rcrb
dec
inc
shlb
dec
xorl
enter
mov
add
mov
stos
test
mov
cmpsb
xchg
xchg
jmp
pushl
mov
dec
xor
in
jno
pop
pop
dec
sub
mov
rcll
mov
in
xchg
fs
or
enter
mov
pushf
leave
mov
addr16
out
push
fnstenv
and
std
lret
into
lods
fiadds
mov
mov
dec
push
cmp
sbb
adc
mov
pop
mov
divb
adc
and
xlat
mov
rcl
aaa
ljmp
fistl
pop
loop
push
sub
loopne
popa
xchg
call
fisubs
pusha
lds
or
cmpsl
cwtl
aad
popf
jle
inc
and
push
mov
mov
and
inc
push
fwait
sarl
cmp
int3
dec
daa
push
dec
jmp
call
decb
push
div
icebp
das
stos
imul
ret
jmp
sbb
dec
movsl
add
xor
rcll
xchg
fstpl
cmp
outsl
inc
or
lret
xchg
outsl
and
xor
sti
jne
inc
jae
mov
cltd
push
inc
movsb
adc
hlt
scas
or
xor
divl
loopne
sahf
arpl
fdivs
dec
cs
push
outsb
mov
inc
dec
xchg
mov
mov
push
inc
maxps
xor
in
jge
mov
popa
jp
cmpsl
insl
ficomps
test
adc
and
xor
or
fists
jne
sbb
sub
sub
mov
jmp
nop
int
and
lods
je
dec
mov
call
mov
iret
inc
pop
fcomip
mov
idivb
sub
or
es
adc
outsb
pop
cmp
les
clc
std
js
and
xor
testb
int3
rcrb
adc
mov
dec
cld
lods
jle
cmp
mov
je
call
int3
fdivl
jl
mov
and
icebp
loope
adc
push
outsl
je
adc
lret
jp
adc
in
and
mov
inc
int
fdivr
mov
xchg
fwait
push
cmc
xchg
or
imul
pop
mov
dec
pop
push
loopne
xchg
xor
dec
mov
mov
fwait
pop
dec
fistl
into
inc
ljmp
testb
cmp
lcall
sbb
and
or
aaa
add
out
sbb
sbb
outsl
pusha
and
imul
cmp
sbb
jbe
add
mov
loop
push
popf
loope
in
xchg
scas
lods
jmp
aad
pop
xchg
addr16
int
jg
pop
das
jmp
push
int
push
in
jno
orl
mov
cmp
add
cmpsb
push
push
inc
icebp
scas
sbb
mov
fcompl
fisubs
dec
xor
sub
stos
inc
and
into
xor
push
push
push
jle
lds
inc
sar
jp
mov
jge
pop
popf
sbb
addb
andb
fmulp
mov
jmp
mov
out
mov
lcall
mov
mov
dec
cmc
sub
inc
sbb
and
inc
out
sbb
xor
xchg
mov
mov
xchg
scas
adc
bound
testb
ret
xchg
lcall
dec
lahf
call
into
shrb
repz
xchg
cltd
sub
repnz
loope
push
movsl
mov
push
mov
lods
push
inc
mov
cmpsl
repz
cmpsl
pop
std
xchg
in
jmp
stos
gs
add
and
mov
cs
int3
cmp
sub
rcrl
ret
sbb
xor
xor
dec
xchg
movsb
int
enter
lock
out
inc
ja
jge
stos
leave
ficoms
imul
mov
fldt
sub
addr16
adc
fsub
ljmp
in
aam
mov
pop
data16
or
orb
sub
int3
mov
cmc
add
push
mov
ror
dec
andps
dec
mov
xchg
idivl
ret
outsb
push
cmpsl
xchg
ja
stos
inc
testl
jl
add
xchg
mov
mov
pop
cmp
pop
data16
shlb
mov
cli
sub
mov
jo
rcll
scas
cmpsb
push
iret
mov
or
scas
pop
cli
mov
mov
lds
mov
cmp
scas
fnsave
ret
filds
inc
push
sarb
lahf
jecxz
sbbl
pop
push
mov
cwtl
push
mov
adc
in
filds
push
int
movsl
add
loopne
jns
cmp
dec
inc
mov
popa
pop
outsl
sbb
movsb
inc
stc
fidivrs
sbb
mov
dec
fisubrl
and
movsl
and
sbb
hlt
add
out
add
cmp
push
push
jle
mov
mov
sub
mov
mov
test
clc
lcall
xlat
and
jns
vmovd
mov
mov
lods
xor
fcmovbe
xchg
mov
ret
fdiv
and
clc
cmp
xor
xor
sbb
imul
adc
into
test
fdivs
mov
test
dec
inc
cmp
jecxz
cmc
outsb
into
pop
mov
inc
adc
test
ds
lods
pushf
push
mov
into
cmp
lret
push
movsb
sahf
cmpsl
inc
sbbb
inc
sbb
outsl
into
pop
fnstcw
int
ds
adc
cmc
xchg
fsubr
aam
test
clc
sbb
gs
imul
mov
sbb
mov
orl
jl
loop
sarb
test
add
in
sbb
ret
pop
pop
adc
movsb
lahf
movsb
and
test
fisttpll
jo
and
fstp
push
inc
dec
pop
mov
inc
lods
fbld
xorb
pusha
push
dec
stc
sbb
pop
and
cld
fs
push
sbbl
xchg
test
lods
inc
icebp
mov
or
cli
inc
ret
sbb
rolb
int
or
cmc
daa
insb
push
and
test
call
dec
and
lahf
pop
mov
or
sti
jmp
filds
jl
aas
insb
lods
xchg
mov
mov
sub
mov
adc
icebp
pop
test
jb
andl
and
or
sub
sti
aad
mov
mov
dec
je
mov
jo
fsub
mov
mov
sub
mov
idivb
adc
mov
mov
mov
push
jle
push
inc
mov
or
jl,pn
mov
andl
sbb
repz
pop
mov
aad
mov
add
daa
addr16
ss
cmp
fisubl
adc
cmpb
cmc
lods
inc
gs
into
cld
out
cmp
in
outsb
out
mov
sub
dec
jns
mov
mov
push
lods
andb
dec
dec
xor
and
xchg
insl
cmc
push
sahf
jbe
or
pop
popl
jb
rcrl
jae
loopne
pusha
inc
idivb
bound
repz
and
cwtl
pusha
push
mov
pushf
out
dec
mov
pop
loope
mov
divl
pop
xchg
test
stc
movsb
stos
jg
inc
icebp
push
sub
sti
fldl
imul
cmp
cmpsl
xor
repz
xor
sbb
sub
push
inc
test
sub
aas
hlt
dec
loopne
insb
pop
and
int
push
xor
cmp
push
dec
ret
xorl
mov
jbe
adc
fidivrs
pushl
dec
fimuls
stos
xchg
gs
sub
insb
insl
jle
and
adc
mov
imul
pop
sub
jmp
pop
test
sbb
ss
sbb
popa
mov
fnstcw
cli
or
call
cld
inc
call
dec
or
iret
sahf
out
movsl
pop
cmpsb
mov
sbb
call
repz
aam
pop
movsb
rcrb
mov
std
mov
jae
jmp
mov
mov
test
pop
push
xor
enter
push
arpl
out
loop
dec
clc
lods
xchg
icebp
sub
pop
outsl
and
cmp
std
fildll
outsb
je
add
ret
mov
push
push
repz
xchg
xchg
insl
test
ja
clc
icebp
cmp
pop
sbb
fcom
and
lods
or
fisttps
mov
sbb
leave
std
hlt
lock
repnz
mov
add
cmp
aas
inc
dec
stos
mov
dec
push
cmp
mov
daa
lret
jl
jmp
aad
mov
stos
cmpsb
inc
aad
mov
mov
aas
cli
in
dec
xchg
out
imul
aas
sbb
xor
call
lods
mov
dec
in
xchg
in
cmp
insb
jo
push
or
sbb
enter
xor
push
mov
incb
push
sub
mov
sti
pop
loope
sbb
mov
adcb
xchg
lret
ja
mov
sbb
or
jecxz
mov
add
mov
push
loop
push
jnp
jo
jbe
scas
adc
jge
pop
push
jl
xor
mov
pop
stos
mov
lahf
popa
inc
add
sub
loope
shlb
ss
push
add
mov
out
sbb
lods
add
clc
dec
xchg
js
sub
lss
dec
divl
mov
inc
and
add
rcll
rcr
push
sub
xchg
and
movsl
cwtl
inc
arpl
inc
lret
std
or
add
mov
jb
add
mov
or
in
lea
aas
lods
nop
push
push
mov
xor
movsl
cmp
movsb
push
popf
sbb
adc
data16
stos
sti
cmp
addl
xor
sbb
test
imul
dec
ss
sahf
or
test
mov
mov
iret
fcmovnb
mov
push
push
or
mov
xor
ss
dec
mov
stos
aas
mov
je
and
ljmp
or
or
or
mov
int3
add
mov
test
pop
mov
roll
cmp
int3
sub
xor
xchg
shlb
aaa
or
dec
fcomip
mov
imul
add
adcb
inc
sbb
cltd
cmp
and
lret
repz
in
out
aam
push
clc
add
pop
mov
call
and
mov
cmpsb
lock
add
mov
gs
js
aad
int
push
popl
ror
add
or
aaa
xor
aas
pop
popa
shll
and
inc
test
and
rcll
adc
lahf
dec
cmpsb
inc
push
fiadds
rorb
test
xchg
repz
orb
inc
andb
pop
cmp
mov
mov
inc
adc
jecxz
ds
inc
movsl
xor
mov
jb
jge
add
ss
mov
sbb
jmp
out
mov
imul
adc
xor
xor
test
mov
lret
subl
push
test
push
lea
test
aam
fistl
mov
cs
mov
jb
orl
aaa
mov
arpl
mulb
and
rorl
add
pop
inc
xchg
pop
inc
sbb
cli
fwait
push
shll
inc
xlat
mov
and
xchg
ljmp
andb
outsl
outsb
xchg
and
pushf
xchg
add
push
jmp
sbb
pushf
add
add
push
int
pop
test
mov
jnp
inc
ror
sub
lods
test
movl
jb
stos
in
mov
inc
repnz
jge
add
inc
adc
sbb
cltd
push
or
push
std
dec
test
push
and
es
repz
inc
movsb
ja
stc
aad
subb
dec
lods
pop
xor
mov
fcompl
shrl
inc
fcompl
push
mov
dec
push
roll
sbb
add
mulb
test
rorl
cmpsl
jg
adc
enter
ljmp
ret
jge
into
call
fstpl
mov
dec
daa
lods
mov
sub
arpl
enter
jae
aaa
cwtl
insb
sbb
or
addr16
lods
add
xorb
jno
popa
pop
jnp
jae
jnp
insl
xchg
andb
scas
xor
mov
insb
in
sti
fidivs
stc
xchg
in
xchg
inc
adc
pop
cmpb
fadds
insb
pop
jo
cwtl
mov
into
xchg
sahf
mov
rorb
dec
sub
movsl
in
fdivs
lret
dec
test
cltd
sub
out
shlb
pop
dec
add
or
push
xor
xchg
aam
arpl
cmp
popf
in
or
push
lret
or
mov
jne
sti
jo
pop
leave
fistpll
cld
jne
xor
mov
push
sub
mov
cmp
push
jge
pop
add
xor
push
fidivs
mov
mov
pushf
outsl
jmp
sbbl
or
push
in
cltd
mov
pushf
repz
outsb
out
iret
ljmp
xchg
mov
in
lcall
pop
stos
lahf
mov
fbstp
xor
popa
sub
adc
jle
ja
or
shrb
and
jnp
rcl
fstp
scas
push
lods
pop
jno
call
adc
rorb
add
lret
inc
and
pop
adc
sub
aaa
dec
loope
dec
dec
dec
mov
repz
jmp
cmp
and
xor
or
test
add
jo
out
mov
adc
jle
mov
xor
or
add
mov
sbb
mov
out
inc
pop
lock
call
mov
sub
dec
sub
outsb
ss
out
into
jl
jns
daa
das
popa
xchg
sub
xchg
es
xor
insb
push
xchg
pop
lock
std
xor
jbe
mov
out
or
movsl
dec
push
jecxz
outsl
insl
xchg
popf
mov
push
xorb
xchg
xor
mov
inc
mov
mov
pop
or
push
ret
movntps
repz
shl
fstps
add
cmp
int3
sub
xor
mov
shl
pop
nop
movsb
cmp
fbld
loope
sub
mov
inc
popf
pusha
dec
xchg
or
mov
fisttpl
or
inc
int
jbe
dec
test
adc
inc
lret
leave
push
jae
jae
inc
cmc
and
test
push
imul
stos
jae
jnp
dec
jo
out
loopne
subl
stc
mov
dec
mov
test
int
leave
aas
gs
imul
inc
lods
inc
movsb
dec
xor
or
pop
out
push
mov
add
adc
out
hlt
mov
stos
enter
or
ljmp
aas
sarl
or
mov
sbb
dec
jp
jge
js
xor
jnp
stos
dec
repz
pop
pop
xor
mov
imul
add
shlb
sbb
cmp
cmp
jnp
ja
pop
stos
loop
pop
clc
mov
push
sub
repz
sti
mov
sub
or
js
mov
jp
pop
roll
and
outsb
jge
inc
ljmp
aad
or
shlb
mov
push
mul
push
aad
outsl
cmp
imul
sbb
push
adc
cmc
or
or
sub
nop
shrl
adc
mov
fmull
cld
jmp
sbb
adc
add
mov
inc
pop
fcompl
cs
repnz
rclb
shlb
es
jle
fiadds
imull
rclb
or
pusha
fsubl
jbe
loop
xchg
fidivrs
dec
es
das
fwait
test
clc
dec
nop
scas
lea
sarb
push
xchg
cmpsl
push
jmp
outsb
push
jge
inc
add
popf
clc
add
xor
pop
push
or
mov
push
rorl
mov
fcomp
jnp
aad
adc
ret
sbb
xchg
gs
dec
imul
es
jbe
jns
or
sbb
testl
mov
data16
cmpsb
vphaddbd
lahf
mov
test
pop
push
std
or
pop
lock
push
gs
dec
dec
push
cmpsw
and
xor
add
lea
popf
and
and
push
and
cltd
push
mov
sub
loopne
fiaddl
test
inc
xor
aas
lea
leave
and
or
aaa
or
xor
xchg
je
jge
mov
bound
mov
leave
scas
aaa
sahf
out
pop
jle
mov
xchg
push
adc
sub
push
push
adc
jno
aas
sti
dec
stos
xor
xchg
dec
cld
mov
add
shll
test
test
js
mov
jns
cmp
pop
pop
shrb
xor
dec
adc
test
dec
shlb
or
mov
ret
int
and
add
mov
shlb
inc
or
pop
sub
jg
xor
jecxz
dec
cli
arpl
aas
fidivl
mov
pop
xor
pusha
imul
cltd
adc
das
inc
xchg
adc
xor
dec
sub
sub
pop
fiaddl
dec
je
in
sub
jp
imul
rorl
cmc
mov
bnd
mov
gs
pop
sub
xchg
xchg
mov
notl
sbb
mov
jmp
sti
mov
pop
cmpsb
mov
ja
and
fs
ja
xor
pop
jecxz
sub
jno
test
add
aas
push
sub
xchg
sbb
fsubrs
fprem
and
repnz
rclb
pop
dec
mov
mov
pop
xchg
cmp
mov
adc
push
mov
mov
out
xchg
inc
mov
leave
loopne
popf
cld
sbb
xor
popf
xchg
outsb
or
sbb
rorl
mov
lret
sub
jmp
nop
mov
adc
mov
mov
and
xlat
lock
xor
jne
push
cmp
rcrl
repz
int
loop
adc
stos
lock
pop
xchg
call
xor
mov
loopne
mov
mov
jae
jp
jns
jb
push
inc
cmp
xchg
out
dec
mov
push
outsl
call
jmp
lahf
sub
xchg
iret
popf
or
orl
out
mov
cmp
or
sbb
das
jns
shr
mov
mov
iret
cmpsb
lods
aas
jno
int3
or
mov
or
andl
in
fs
cmp
lret
outsl
xorl
fwait
jns
push
add
mov
pop
int3
add
lds
stos
dec
movsb
mov
testl
insl
fiaddl
pop
sbb
add
jb
dec
inc
jb
repz
int3
repz
mov
sti
in
sti
es
xor
ret
jg
dec
xchg
icebp
push
jb
repnz
sbb
aas
imul
sbb
cmpsl
in
jns
xchg
es
shr
jge
xchg
scas
sahf
or
mov
scas
adc
push
mov
cmpsb
pop
sahf
xchg
jge
dec
int
mov
dec
out
inc
mov
addl
dec
dec
mov
mov
fdivs
pop
push
jmp
xor
int3
or
repz
dec
sbb
scas
mov
daa
xor
pop
imull
xor
movsb
call
pop
lahf
sbb
jae
xor
lods
int3
jo
sbb
sub
push
xchg
lods
fisubrs
inc
inc
dec
sub
inc
sbb
cli
mov
aas
xor
jecxz
push
cmp
add
sub
insl
aam
xor
ret
add
pushf
ror
aad
inc
jno
fstpt
pop
mov
inc
in
and
adc
lock
cmp
dec
xchg
jno
xlat
mov
stos
das
std
sbb
mov
loop
fnstenv
mov
stos
loopne
xchg
add
jmp
popa
xchg
cmp
mov
dec
cwtl
jge
lea
mov
rclb
aam
jmp
and
xchg
jl
cmpsb
inc
lcall
add
mov
stc
mov
and
mov
sahf
lods
xchg
jge
mov
push
imul
pop
xor
fimuls
movsl
sbb
add
loopne
lahf
mov
inc
sub
daa
ficompl
mov
or
push
xchg
cmovg
mov
fucomi
ja
mov
loopne
mov
ffreep
ficompl
sbb
inc
adcb
dec
pop
push
sub
lea
ror
in
iret
stos
movl
rcl
rcrl
jo
es
in
cli
xchg
inc
pop
insb
aam
or
ds
in
mull
sub
xchg
mov
test
add
enter
mov
movsb
pop
pop
mov
loopne
arpl
xor
mov
mov
icebp
mov
jecxz
xor
pop
movsb
adc
jmp
pop
sbb
outsl
sbb
or
push
in
cld
int
mov
jmp
cmp
aas
adc
adcl
mov
mul
je
nop
dec
mov
mov
lcall
mov
test
sbb
pop
inc
cli
jnp
out
add
pop
fwait
dec
sub
testb
stc
fs
insl
int3
xchg
adc
mov
cmpsb
outsb
push
out
ds
or
test
in
sub
sarl
xor
ficomps
mov
arpl
fidivs
jmp
mov
pop
and
xchg
lret
add
clc
mov
dec
add
pop
push
call
sub
jb
sbb
gs
cmp
stos
rorb
into
mov
mov
dec
jns
push
push
sub
lret
rolb
xchg
and
and
repnz
cmp
push
sub
mov
out
inc
sbb
pop
mov
and
cmp
sbbb
or
add
mov
or
sbb
call
xchg
xor
int
dec
cmc
push
imull
mov
pop
xchg
fadds
adc
mov
sbb
sbb
and
cmp
cmp
cmpsb
mov
ret
fst
lret
jle
mov
jne
cs
rcr
inc
mov
hlt
stc
aam
xor
add
fldcw
push
or
sbb
lea
cmp
xor
cmp
ja
enter
jmp
shll
and
aad
lcall
ja
fdivr
mov
ret
adc
adc
push
jo
int
loopne
cmc
outsb
call
and
std
adc
mov
jns,pn
cmp
cmpsl
mov
or
pusha
sbb
imul
pusha
cld
lret
mov
jbe
mov
mov
sub
cli
mov
cmpb
cli
push
jb
adc
cld
mov
insb
imull
inc
mov
adc
xor
das
jne
rcrl
mov
inc
mov
loop
jl
push
popa
or
iret
in
je
xchg
mov
pushf
das
xchg
mov
pop
call
popa
test
mov
adc
shrb
std
mov
negl
jg
cmp
mov
mov
pop
xchg
sub
aad
ja
adc
adcl
lret
fisttpl
xchg
popa
lret
pop
push
stos
lcall
adc
and
cmp
js
popf
pop
inc
lock
xlat
inc
xor
adc
push
mov
xchg
or
push
rol
repnz
aad
push
es
cld
push
out
dec
das
push
inc
int3
jl
iret
shll
pop
cs
mov
add
sahf
sub
sub
pop
dec
push
jg
insb
dec
std
imulb
sub
popf
cmp
fldl
out
out
xchg
sbb
daa
and
push
jbe
cwtl
xor
push
lahf
jbe
xor
sbb
inc
pusha
out
dec
outsb
nop
jb
cltd
subb
pop
lods
mov
je
and
test
jae
sbb
pusha
jle
xor
pusha
sub
movsb
add
mov
mov
jb
dec
mov
cmc
adc
and
and
les
mov
mov
or
pop
jmp
out
xchg
and
push
mov
jmp
daa
xchg
mov
jl
pop
lret
mov
add
add
inc
lret
mov
ret
add
sbb
jecxz
js
sbb
dec
int3
cmp
in
xor
sub
or
xor
push
pusha
addb
add
out
pop
sarb
insl
scas
sub
mov
jg
cmp
xchg
and
mov
pop
push
sbb
jmp
sbb
lcall
pop
jle
mov
push
adc
xchg
idiv
dec
pop
jns
push
lods
lea
loopne
hlt
jg
mov
mov
sahf
lret
in
cli
mov
hlt
inc
add
lret
or
sbb
test
pop
out
dec
jle
aad
sbb
pop
gs
ret
dec
xchg
push
shlb
cmp
int
scas
out
cli
sub
pop
test
js
data16
movsl
ljmp
cmpsb
cmpsb
xor
fsubs
pop
mov
pop
push
shrb
nop
sub
fabs
cmp
dec
mov
faddl
xchg
movl
shlb
xchg
cltd
movsb
in
arpl
adc
pop
jmp
cmp
enter
popa
addr16
fildll
push
push
shrl
bound
cmpb
orl
fwait
pop
test
push
lahf
inc
add
loope
out
ret
icebp
push
or
outsb
cltd
aam
pusha
xor
jecxz
pop
stos
sbb
int
or
cmpsl
jno
dec
push
xchg
pop
dec
xchg
popf
scas
pop
mov
rol
xchg
jnp
orl
pop
daa
push
adc
sub
xchg
test
mov
and
lock
adc
and
add
push
aad
je
mov
rorl
cs
xor
jmp
and
xchg
xchg
inc
jge
movl
ret
inc
sbb
xchg
add
mov
cmp
jle
jnp
cld
scas
mov
pop
lods
or
daa
mov
decb
or
icebp
ret
inc
test
addr16
flds
push
std
movsb
or
ret
pop
jbe
inc
xchg
jge
push
stos
push
or
cmc
jae
add
gs
nop
fdivl
in
push
push
mov
loope
jae
mov
add
clc
jbe
add
adc
jns
or
nop
imul
inc
xor
dec
stos
dec
xchg
cmp
movsb
dec
fdivrp
add
in
sbb
pop
push
leave
ret
mov
testl
jb
push
popa
and
cld
fsubrl
sbb
xorb
sbb
or
xchg
into
mov
add
adc
dec
je
dec
mov
popa
es
pop
jbe
or
or
mov
outsl
xchg
inc
cmc
mov
pop
mov
sbb
iret
adc
jnp
fwait
inc
adc
iret
xor
dec
enter
scas
push
stc
rclb
sbb
nop
push
into
popf
xchg
or
push
lds
loop
cld
loop
mov
inc
or
mov
arpl
jecxz
es
and
bound
cli
in
lret
pop
inc
imul
pop
xor
std
loopne
dec
fidivl
cs
das
jbe
dec
and
sbb
cmp
mov
in
push
sarl
jmp
cmp
cmp
xchg
or
js,pn
push
and
xchg
data16
push
pushf
and
aam
insl
test
movsb
popa
out
call
mov
xchg
fidivs
sti
int3
jmp
dec
jmp
lahf
in
arpl
push
add
jne
jg
xchg
aam
xlat
arpl
xchg
lds
loop
push
sti
inc
in
sbb
shr
mov
push
sbb
aam
pop
add
vandnpd
lds
or
popf
jge
inc
aam
mov
sbb
daa
call
loope
add
dec
pop
outsb
mov
xor
pop
and
sub
repz
mov
fiaddl
add
cmp
ret
js
pop
int
call
mov
mov
mov
mov
push
shlb
cltd
xor
cmp
jbe
bound
jl
push
adc
imul
out
cmc
pop
dec
js
jmp
adc
scas
mov
cwtl
test
pop
movsb
push
scas
mov
pop
lods
loope
sub
adc
lcall
inc
adc
xchg
out
xor
adc
rorb
cmp
xchg
and
sub
jge
adcl
mov
jno
pop
insl
aaa
cld
add
addr16
adc
dec
push
js
scas
arpl
cmp
mov
hlt
jo
dec
push
call
out
dec
mov
jnp
inc
in
mov
into
loop
test
mov
pop
push
xor
jp
rol
lods
push
mov
mov
aam
dec
mov
xlat
in
jle
sbb
push
mov
mov
mov
mov
mov
out
and
mov
xor
add
pop
inc
mov
jmp
packsswb
jbe
testb
jge
in
push
adc
xor
mov
dec
mov
shrl
rcrl
push
imul
loop
fildl
mov
lock
push
cmpsb
dec
imul
sbb
fwait
aad
sbb
and
iret
js
mov
inc
lea
stos
mov
xlat
orl
adc
les
fninit
inc
or
sarb
mov
in
js
mov
mov
loopne
mov
sbb
outsb
inc
dec
cmc
shrb
mov
add
insb
sub
mov
mov
sbb
xchg
pop
mov
mov
xor
nop
aam
sahf
hlt
push
cltd
rorb
in
iret
in
outsl
add
nop
cltd
icebp
dec
or
stc
jne
sti
or
movsb
adc
add
push
inc
xchg
cmp
jl
es
cmpsb
movl
arpl
decb
add
sbb
pop
lret
and
inc
enter
lock
mov
push
loope
gs
int3
push
cmp
sti
xor
cmp
addr16
ljmp
jne
movsl
jae
inc
pop
inc
decl
out
or
or
gs
lret
pop
cli
mov
add
pop
push
pushf
push
sahf
ljmp
xchg
js
les
in
inc
pop
std
daa
cltd
fisubrs
pop
fisubs
dec
lock
leave
cwtl
imul
xchg
push
jge
lock
mov
and
add
sbb
pop
inc
enter
lahf
leave
sub
mov
fmul
cli
int3
jle
enter
test
imul
lods
sbb
shr
daa
stc
add
je
xchg
cmp
bound
and
adc
push
stos
addr16
jnp
mov
jns
hlt
fildll
mulb
and
ret
cmp
repz
mov
inc
lock
filds
out
repnz
sbb
aam
pop
xchg
xchg
push
push
mov
shlb
pushf
dec
jo
jo
add
scas
cmp
clc
ja
shll
popa
cmp
and
mov
adc
lret
cmp
lock
sub
insl
mov
sbb
test
test
fwait
daa
sbb
cltd
cld
cmp
fwait
push
push
cmp
out
es
cmp
testb
shlb
xor
push
and
pop
je
arpl
ret
sbb
jl
cmc
test
sub
dec
inc
data16
pop
or
insl
movsl
rolb
arpl
inc
clc
enter
movsb
loop
add
pop
test
imull
adc
adc
and
movsb
cmp
jbe
scas
inc
xchg
xchg
test
cli
jge
je
js
push
jnp
xchg
push
std
inc
add
and
jae
or
mov
or
movsl
mov
shlb
jne
jp
divb
popa
or
jmp
mov
push
jmp
jle
std
out
fnstcw
cmc
xlat
sub
cmp
out
jmp
mov
test
mov
push
xchg
pusha
inc
adc
shlb
stos
add
jns
loope
popa
cmpsb
and
ja
cli
and
sbb
fcomp
push
push
pusha
leave
sbb
insb
adc
inc
pop
push
scas
cmpsl
popf
pop
push
cmpsb
call
push
mov
sarb
test
scas
push
ja
xchg
fwait
inc
addr16
dec
subl
inc
aaa
sbb
inc
lds
xchg
jge
mov
add
leave
aaa
and
adc
mov
sbb
pop
in
push
aam
les
or
loope
fninit
into
andl
in
pop
ficoms
mov
mov
sti
sub
pop
mov
imul
pusha
jle
jb
mov
pop
outsb
cli
mov
jae
push
push
mov
sbb
adcl
and
test
test
xor
shl
leave
loopne
dec
jg
xchg
stos
sub
aas
loop
cmpsb
call
imul
xchg
push
xchg
fwait
cmp
test
or
std
insb
movsl
adc
imul
popf
loop
mov
cmpsl
into
das
cmp
push
xor
sub
push
jmp
into
ss
movsl
xchg
frstor
add
fstl
shlb
push
pop
cmp
cwtl
out
xchg
das
test
mov
xchg
icebp
dec
out
add
ds
or
add
xor
fcomip
rep
or
out
jno
and
jg
cmpl
lds
in
xor
stos
mov
xchg
int3
mov
or
and
in
add
cmp
mov
xchg
rcrl
imul
andl
sub
cmp
aas
and
pop
clc
scas
push
out
in
addr16
add
into
sti
ficomps
inc
dec
pop
int3
jns
out
jecxz
lahf
mov
xor
cmc
dec
bnd
rolb
xor
add
out
or
adc
adc
jl
and
js
loopne
and
xchg
lahf
in
push
mov
inc
cmp
loop
adc
mov
stos
ljmp
fisubl
mov
cmp
repnz
leave
shll
adc
jl
gs
or
mov
xchg
mov
lds
loop
sub
cmp
inc
pop
loopne
pop
aam
popa
sbb
jmp
add
inc
mov
shrl
js
shll
and
pushf
shrb
push
lock
js
sub
jge
call
not
sub
aas
sarb
lds
xchg
in
in
int3
xor
mov
xchg
push
jb
pop
inc
and
xchg
insl
or
mov
es
loope
push
fwait
adc
loop
sahf
adc
roll
jecxz
dec
lea
fimull
jno
dec
insb
pop
faddl
imul
xchg
xor
scas
sahf
cmp
jge
and
fsubs
pop
pop
and
push
std
inc
dec
dec
sarb
loope
xchg
aam
shr
or
dec
rcrl
scas
mov
test
scas
test
aam
sti
ss
xchg
fwait
sbb
fmuls
pop
test
js
dec
cmp
adc
sub
jbe,pt
jl
inc
adc
divb
inc
fwait
cltd
leave
mov
dec
and
cld
mov
outsb
sbb
lds
xchg
cmp
loope
pop
rorl
test
andl
lahf
jne
repz
cli
and
leave
test
dec
repnz
cmpsb
sti
rcrl
push
jl
cltd
dec
cmp
cwtl
std
mov
das
push
xor
es
leave
test
xchg
mov
xchg
add
ret
movsl
lret
ds
xor
movsl
pop
sub
mov
gs
add
xor
popf
dec
push
loop
mov
xchg
insl
or
mov
lods
shl
pushf
divl
push
adcb
sbb
enter
jmp
jo
and
popf
mov
pushf
rcrl
lcall
cmp
mov
loopne
pop
push
dec
pop
pop
mov
jg
pop
repz
fidivs
push
or
dec
into
xchg
ds
adc
inc
jp
jne
mov
test
cltd
sub
sub
add
cmp
push
xor
mov
xchg
lods
push
loopne
mov
sub
xor
pop
and
and
je
pop
or
and
test
cli
sar
lods
xor
lea
leave
dec
rcl
jmp
jp
sbb
dec
mov
adc
das
clc
outsl
xchg
shr
inc
ljmp
out
push
sbb
mov
cmp
sub
in
aam
xchg
inc
outsl
inc
sahf
out
sub
out
aas
out
mov
sahf
hlt
enter
sahf
mov
decb
mov
mov
cli
sbb
cwtl
stc
or
sbb
in
inc
sub
in
jns
incl
cmc
stos
xor
iret
test
in
roll
push
cmp
das
jg
mov
cwtl
or
xchg
fistpll
mov
push
loopne
xchg
iret
adc
lods
aad
inc
iret
mov
sub
sbb
out
out
iret
inc
hlt
lock
addb
movl
jns
adc
xchg
scas
mov
pusha
add
cmpsb
mov
mov
clc
fcoms
pop
pop
xchg
mov
cmpsb
push
aad
xchg
movsl
int3
addl
jmp
test
and
scas
cmp
add
mov
cmpb
aad
mul
in
mov
incb
pop
xchg
jno
cli
outsl
pusha
cmp
mov
subb
cmp
dec
cli
jp
push
jbe
enter
fwait
loopne
pop
sti
insl
pop
insl
outsb
add
fldl
dec
lods
sub
dec
or
dec
aas
cld
push
outsb
fcmovbe
aam
scas
mov
pop
mov
out
es
into
aam
daa
pop
xchg
cmp
xor
ja
xchg
sar
pushf
jnp
adc
cmc
repz
popa
xor
inc
jp
cld
outsb
jmp
imul
popfw
or
call
out
push
mov
arpl
fwait
or
mov
mov
adc
shrl
and
xchg
lret
outsl
push
pop
adc
mov
mov
stos
xchg
sub
xchg
push
jo
imul
mov
cmp
pop
add
jg
cmp
mov
xor
jg
psrad
lods
inc
dec
ret
aas
sub
mov
add
shll
pop
aad
movsl
adc
adc
out
lea
cltd
leave
fnsave
lock
adc
sub
xor
mov
arpl
shll
stos
cli
cld
je
test
out
movsb
push
movsl
push
mov
xchg
jbe
jmp
mov
iret
pushf
cmc
ficomps
repz
fcmovb
jnp
mov
mov
test
iret
adc
mov
fisubrs
cmp
sbb
jmp
ss
decb
or
add
rclb
rcrl
lods
test
or
or
movsb
mov
ss
push
rcrl
push
xor
mov
inc
mov
mov
xchg
xchg
fwait
and
cmp
inc
push
push
mov
sub
das
cli
push
dec
popf
test
nop
adc
and
pushf
jecxz
dec
movsb
mov
lock
jae
ret
cmp
mov
or
jl
dec
lods
aaa
ficompl
jae
push
mov
mov
adc
test
mov
mov
daa
add
outsb
incb
jl
rcrl
aam
xchg
icebp
lahf
mov
and
ss
xchg
loope
sbb
dec
cmp
mov
xor
push
cmp
push
add
jp
xchg
mov
push
mov
js
aas
mov
push
jb
fiadds
iret
xor
push
mov
jg
inc
pushf
fs
sub
dec
xchg
rclb
imul
loope
mov
and
ja
lds
push
and
icebp
lea
cs
lock
xchg
fistpl
add
mov
cmp
jo
lods
push
xor
dec
lret
loopne
mov
lea
jl
out
adc
pop
mov
in
mov
push
fsubrp
pop
mov
cmc
jge
mov
je
lods
jle
jne
mov
stc
clc
cmp
push
loope
xchg
mov
mov
mov
jp
rcrb
mov
popa
mov
aas
icebp
in
outsb
inc
mov
ret
aas
ljmp
push
xor
xchg
inc
push
icebp
add
cwtl
cli
pop
cmc
xor
int3
xchg
leave
xchg
cmp
or
fcoml
fisttpl
aad
mov
dec
arpl
sub
lret
or
sub
and
cmp
les
daa
mov
in
fisubrl
xchg
imulb
rorl
xorl
ljmp
andb
sub
cmpsb
add
lods
jle
cmc
pop
or
jbe
sbb
push
sarl
rcr
enter
js
movsl
sub
mov
mov
dec
mov
ret
clc
jecxz
sbb
cmp
add
mov
jge
mov
sarl
aam
rcr
mov
in
aad
pop
mov
rcrb
adc
or
mov
and
adc
add
imul
push
ss
sbb
xchg
sub
sbb
pop
sbb
inc
push
sbb
xor
jle
popa
pusha
arpl
shl
sbb
imul
cmp
clc
adc
cmp
inc
add
xchg
mov
xor
push
nop
mov
outsl
out
repz
xor
int
sbb
aaa
mov
fisubrs
mov
jl
sbb
dec
mov
push
ret
clc
xchg
and
ss
aas
cmp
cs
inc
mov
loope
es
je
loop
outsb
mov
fdivl
aad
dec
scas
lock
das
xchg
fnstenv
sub
ljmp
mov
xchg
adc
movsb
inc
jbe
call
lods
jns
fimull
stos
andb
push
fidivs
jns
scas
jne
push
dec
pop
xchg
lahf
adc
jb
shl
jmp
fnstsw
pop
gs
cmp
pop
movsb
inc
fldl
nop
ja
push
or
cltd
sbb
pop
inc
jge
movl
adc
and
loopne
cmp
pop
pop
imul
lahf
aas
sub
test
test
aad
jb
sbb
inc
cmp
lret
or
pop
mov
jno
dec
sbb
nop
repz
sbb
js
sub
inc
add
shll
mov
movsb
arpl
and
cli
inc
insl
andb
icebp
cmp
jb
addl
sub
pop
movsl
xchg
push
add
or
xchg
imul
popf
hlt
push
pusha
in
mov
mov
mov
repz
xchg
fsub
jmp
ss
cmp
lret
cmc
aas
dec
out
test
inc
in
push
dec
inc
sti
sbb
out
mov
aas
int3
scas
mov
imul
adc
stos
mov
cltd
jl
sub
xchg
fistl
and
lods
mov
cmpsb
ret
inc
hlt
mov
jle
movsb
lods
push
stos
imul
push
lahf
in
sbb
pusha
mov
jbe
loop
out
imul
sahf
mov
das
mov
mov
jne
add
outsb
lea
mov
clc
xchg
loop
std
push
les
jbe
jno
push
inc
fiaddl
mov
test
bound
scas
out
ja
loopne
jle
sbb
cli
and
adc
scas
mov
das
imulb
push
pushf
stos
arpl
xchg
xchg
mov
xlat
adc
incb
pusha
lods
into
or
cmp
cmp
add
test
in
cmp
iret
pop
adc
add
pop
sub
cltd
sbb
dec
shlb
pop
jg
xchg
lret
outsl
fiaddl
jb
pushl
push
pop
push
jmp
mov
cltd
push
cmp
sub
inc
mov
sub
and
sarb
xchg
mov
popa
mov
sbb
xchg
out
xchg
testl
xchg
fisubs
mov
sbb
mov
mov
dec
test
ret
lahf
xchg
inc
sub
std
test
and
call
sti
loop
hlt
mov
inc
mov
gs
aas
insl
mov
insl
adc
xor
xchg
das
loopne
pusha
xchg
lock
pop
dec
insl
aad
cmp
xor
or
jae
data16
jo
clc
push
xlat
ret
xchg
sbb
jno
fucomi
inc
jnp
scas
test
sub
push
outsl
mov
jbe
add
sti
into
xor
imulb
pop
sbb
push
test
ss
jle
push
push
mov
lods
sbb
mov
push
addr16
mov
pop
xlat
test
imul
mov
and
daa
sub
cmp
or
pop
pop
fwait
dec
sub
mov
mov
gs
lods
sbb
loop,pt
dec
mov
sbb
inc
insl
sbb
jns
ret
icebp
xchg
mov
mov
sub
pop
adc
sti
stos
int
cmp
adcl
sub
pushf
dec
sbb
xor
mov
pop
movsb
cmp
ret
push
ds
loopne
movsl
mov
adc
inc
jle
sub
pushf
loopne
xlat
imul
adc
mov
fsubp
and
adc
dec
popf
in
mov
popf
push
aaa
dec
sarw
mov
into
in
out
sub
movsl
jge
aas
mov
cmc
faddl
mov
incl
xchg
filds
fimull
xchg
fs
cwtl
leave
movsb
lock
sbb
ds
int
sar
dec
cmc
jge
or
push
arpl
pop
add
sub
jne
or
das
jns
cmc
xlat
call
sti
ss
mov
push
xchg
test
mov
adc
add
add
dec
jge
push
mov
negl
psubb
jne
loop
lock
xor
out
call
icebp
mov
sbb
pushf
jge
insb
ret
jae
xor
or
sub
cltd
fmuls
mov
in
sbb
testb
mov
fdivs
xchg
ss
inc
movntps
add
xchg
daa
inc
push
ds
sub
dec
movsb
mov
mov
notl
push
push
cli
test
pushl
repz
pop
arpl
sti
jae
pop
rorl
pop
outsl
jnp,pn
jp
adc
pop
inc
les
ss
lret
mov
inc
inc
pop
insb
std
mov
and
test
cltd
lods
ss
sti
popf
mov
insl
stc
xor
pop
jne
sbb
jno
jg
push
in
jge
and
or
pop
jl
mov
aad
fs
popl
nop
cs
ficompl
mov
pushf
mov
cmp
push
push
or
inc
jg
jae
jecxz
add
xchg
pop
dec
lea
lods
test
mov
jg
hlt
cmc
fistpll
out
dec
cs
shll
xchg
mov
push
pop
jle
push
or
js
xchg
add
cmp
mov
xor
mov
jp
push
pop
mov
mov
cmp
or
xchg
pop
adc
dec
sub
mov
je
test
orl
cwtl
cld
and
scas
jns
mov
adc
xor
xor
mov
stos
cmc
xor
fwait
mov
xlat
cmc
push
hlt
sbb
jge
mov
bound
ss
jle
insl
lods
mov
xchg
fsubr
xchg
sub
inc
std
mov
andl
sub
xor
mov
adc
stc
pop
loope
xchg
fcmovnbe
pop
pushf
sbb
in
repz
lea
add
and
bound
push
out
pop
adc
out
outsb
or
sub
lahf
push
mov
push
mov
push
pop
mov
loopne
ret
rorl
mov
xor
or
jo
sahf
je
stc
lea
aad
hlt
iret
inc
lret
jmp
pop
mov
into
loope
lcall
es
adc
jo
jne
sbb
dec
shl
ss
insl
outsb
pop
xchg
subb
inc
push
mov
pusha
rcrb
or
jecxz
subl
dec
push
lods
pop
std
mov
jp
pop
cmp
jne
jl
sahf
jae
in
or
sahf
add
enter
mov
sahf
mov
or
je
rcr
and
test
mov
xchg
pop
lret
fisttpl
mov
lods
add
pusha
hlt
fmuls
aad
sub
test
fsubl
add
push
pop
pop
mov
cmpsl
gs
xchg
out
mov
and
lods
cmp
or
sub
movsb
fstp
adc
adc
jmp
sti
stos
flds
jle
cwtl
bound
jmp
clc
clc
sub
ret
mov
add
dec
fildll
into
mov
in
xor
sti
pop
pop
lods
test
aam
cld
push
xor
add
lods
mov
xor
shl
inc
push
push
sbb
add
lea
dec
dec
lea
stos
pusha
out
xorl
shrb
pop
ret
mov
and
fsts
lahf
inc
lcall
js
popa
test
sbb
adc
cmpsl
insb
aam
adc
adc
lcall
push
lds
jecxz
adc
inc
and
loopne
rclb
fsts
repnz
testl
push
cs
out
lods
xor
xchg
std
jae
test
int3
or
cwtl
test
push
std
inc
sahf
testl
cmpsb
out
or
adc
mov
repnz
bound
mov
sub
xlat
xor
and
das
outsb
mov
pop
aaa
fistpll
push
call
fisttpl
inc
and
rorb
mov
jo
mov
fstpl
mov
test
push
outsb
outsl
push
shlb
rcrl
mov
jae
int3
or
jno
mov
xlat
push
test
mov
cmp
pop
and
add
push
lea
cmpsl
mov
iret
xchg
and
roll
push
mov
in
push
dec
inc
out
pop
mov
jbe
jmp
cwtl
out
dec
push
and
add
sbb
pop
out
xchg
dec
xor
push
jns
push
jno
add
es
lds
xor
clc
and
shlb
sbb
cmp
std
push
push
mov
xchg
fadds
jge
push
mov
inc
fwait
xchg
negl
and
jg
xchg
dec
out
push
jbe
jmp
pop
and
jmp
pop
popa
xor
inc
push
mov
jae
xor
fildl
or
out
arpl
lods
add
imul
push
mov
filds
xlat
test
repnz
test
in
mov
mov
or
xor
movsl
xchg
rcll
lds
add
xor
push
stc
gs
xchg
ds
mov
popa
rcrl
adc
adc
mov
call
js
idivl
xchg
push
push
ja
mov
push
test
pop
dec
mov
je
scas
stos
dec
fcom
cmp
std
pushf
fisubrl
aaa
mov
out
mov
adc
enter
fucomi
cwtl
adc
push
pop
je
ficompl
mov
push
stos
jne
xchg
adc
lds
arpl
pushf
xor
xor
aas
es
leave
ja
fidivrs
mov
sbb
nopl
pushf
aad
mov
loop
mov
rolb
outsb
outsb
and
pop
mov
cmpsb
jl
sub
add
popf
sbb
mov
sub
mov
sub
adc
stc
pop
arpl
mov
mov
fwait
incl
repz
cmpsb
mov
inc
mov
adc
add
ss
int
sti
mov
icebp
shlb
mov
xor
sub
stc
xchg
cmpsb
mov
push
mov
popa
and
fucomp
arpl
dec
xor
cmpsb
mov
int
xchg
loopne
and
filds
outsb
xor
stos
fimuls
int3
sahf
xor
mov
lcall
pop
or
rclb
or
cld
or
orl
test
inc
push
sub
xor
pop
xor
sub
xchg
mov
xlat
shll
fistl
mov
cmp
sub
pop
in
icebp
imul
rorl
shlb
rorl
add
sarb
push
sbb
popa
push
mov
xor
aad
cmc
cld
xchg
lahf
cmp
roll
adcl
lea
ja
or
sub
div
adc
fsubp
lock
mov
push
or
out
pop
cld
fiadds
inc
into
xchg
outsb
push
push
lea
mov
and
loop
clc
add
inc
xchg
mov
js
sbb
jae
and
test
dec
or
fs
mov
shll
and
lods
xor
dec
jl
scas
mov
xchg
int
push
mov
push
xor
mov
popl
xchg
repz
push
or
cmp
inc
testb
fisttps
ror
sub
mov
or
call
jp
in
mov
stos
sub
inc
mov
adc
mov
fs
stc
ljmp
jb
ljmp
mov
push
jp
out
lret
lea
xchg
adc
pop
sub
aad
loop
ds
inc
inc
mov
int3
pop
xor
ljmp
cwtl
mov
mov
jecxz
mull
or
test
add
xchg
cli
push
jne
adc
add
dec
add
aad
ja
sbbb
mov
lods
int
es
aam
fwait
jl
and
and
mov
sub
stc
push
out
xor
mov
lret
das
clc
jl
lret
pusha
fnsave
or
xor
mov
mov
add
xchg
jne
jns
adcb
xchg
divl
mov
sbb
mov
mov
popf
jle
test
lea
int3
adc
das
lods
sub
ja
ds
inc
les
xlat
dec
and
mov
jnp
inc
sub
cld
cmpsb
test
xchg
movsb
test
mov
fisubrl
mov
inc
mov
aad
outsb
sbb
jnp
xor
cmpsl
and
pop
lahf
mov
cmp
xchg
inc
lock
jns
push
cmp
imul
push
inc
sarb
in
scas
pop
cli
test
pop
popf
adc
subl
xchg
cmp
cmp
lret
nop
roll
sbbb
cmp
mov
imul
jo
out
jae
xor
test
mov
xor
movsb
mov
mov
dec
ret
pop
sbb
fwait
xchg
mov
mov
loopne
dec
sbb
mov
mov
dec
scas
or
ret
lea
dec
out
jl
movl
out
cs
iret
stos
inc
repz
lods
mov
cmp
jno
or
xchg
test
cmp
test
cmp
andl
int
ret
out
mov
fnstenv
pop
shr
movsb
stos
shrb
jno
mov
mov
adc
xor
mov
popf
out
into
out
repz
pop
cmp
mov
loope
xor
imul
loop
ja
ret
sbb
sti
cmpsl
ja
es
cmp
sbb
pushf
mov
incb
sbb
aaa
outsl
sti
scas
lock
or
in
inc
jno
sbb
adc
inc
sub
cmp
shll
outsl
je
in
push
mov
bnd
imul
test
push
sub
fcmovb
xchg
js
adc
roll
pop
jg
ret
lock
and
popf
xor
inc
popf
lock
and
mov
push
jge
pushf
pop
aas
data16
jle
je
movsb
or
and
mov
dec
pop
clc
mov
scas
cltd
out
loop
jl
cld
popf
addb
mov
in
sbb
cmpsl
jnp
leave
icebp
imul
pusha
into
dec
mov
dec
pop
test
xchg
jbe
in
adc
push
xor
pop
xor
lahf
sbb
mov
inc
sbb
jge
imul
push
int
ds
das
dec
decb
pop
loope
mov
lcall
add
imul
lods
rcrb
cmp
mov
cmc
outsb
fldl
xchg
scas
sti
cmp
sub
push
cli
dec
lock
xor
sub
imul
addb
out
in
pop
in
push
or
fisubrs
inc
or
mov
test
and
mov
adc
loope
and
mov
mov
pop
jnp
stos
ss
adc
fildl
fnstsw
test
add
or
mov
cmpsb
inc
mov
mov
cmp
and
or
and
dec
dec
mov
inc
bound
adc
xchg
mov
cmpsl
pusha
adc
ret
ret
daa
cmpsb
dec
paddb
pop
xlat
pusha
ret
mov
ds
sbb
add
add
lods
push
pop
mov
mov
dec
movsb
cli
cmp
movsl
repnz
pop
cwtl
ror
and
mov
imul
shlb
mov
shll
addr16
xchg
cmp
insb
scas
dec
jg
jb
xor
adc
sbb
lea
fldt
stc
push
lods
jnp
cmp
jmp
in
adc
in
outsb
push
ja,pt
sahf
outsb
or
in
mov
inc
or
lret
lds
jmp
ret
jb
add
push
ret
xchg
icebp
imul
mov
pop
jns
jns
fdivs
cmp
scas
xchg
jmp
push
pop
inc
cmp
jmp
cli
int
daa
out
and
jp
or
lock
cli
shl
lds
fdivp
es
incb
xchg
scas
xor
push
iret
cli
sbb
or
or
loop
mov
aad
or
insb
ret
loopne
sub
jns
lahf
lds
mov
xchg
repz
pop
push
add
fmuls
cmp
popa
adc
inc
mov
and
jg
sbb
mov
mov
push
data16
scas
or
xchg
inc
out
pop
xor
jno
sar
loopnew
sti
sbb
lahf
xchg
sub
jl
adc
sbb
sub
add
jle
xor
outsl
mov
push
dec
sbbl
pushf
mov
inc
mov
pop
inc
and
cmp
call
fisttpll
pop
stos
adc
cs
pop
outsl
fbstp
push
xchg
mov
mov
rorb
cmp
pop
dec
je
test
jns
push
jmp
add
pop
enter
add
stos
das
jns
loope
stos
dec
outsb
mov
lret
push
out
add
aas
mov
add
sahf
sub
ss
sub
negb
cltd
xor
aaa
sahf
stos
fsubrs
clc
shl
insb
mov
ret
shl
shrl
mov
shll
fcoml
and
popa
xchg
out
and
in
mov
cmc
pop
add
outsl
std
xor
push
cltd
add
push
sbb
jp
add
data16
popl
cmp
jbe
dec
or
pop
fwait
mov
push
xchg
sub
cmp
jmp
xchg
popa
dec
pop
push
insl
stos
adc
adc
mov
pop
inc
jl
pop
xorl
sbb
nop
mov
cmp
cld
shll
dec
sbb
decb
ds
imul
dec
popa
arpl
adc
and
ffree
add
push
out
xchg
in
jno
incl
sub
sub
cmp
push
stos
fidivrs
sub
inc
mov
jns
add
jl
rolb
pop
dec
iret
stos
pop
push
negl
push
sahf
pop
nop
cwtl
add
push
cs
dec
test
es
or
or
xchg
mov
cmp
enter
or
jns
fnstcw
push
scas
pop
test
cmp
mov
movsb
xchg
inc
imul
mov
aad
or
stos
loopne
cwtl
fadds
lcall
jle
xchg
cli
xchg
jno
mov
fucomp
mov
and
adc
fsubr
push
and
jns
shrl
daa
mov
mov
add
lea
add
jbe
cmp
loopne
jle
xchg
lret
ficomps
push
and
xor
mov
dec
ffreep
xchg
int3
cmp
sub
fwait
imull
dec
ret
xchg
dec
inc
push
cmp
sbb
pop
jg
test
popf
lret
jbe
xor
fbstp
pop
sub
mov
sbb
jbe
imul
popa
insb
jge
rclb
add
xor
scas
xorl
dec
test
es
and
daa
inc
or
mov
test
js
adc
std
jp
out
xor
fsubrl
mov
aad
stos
push
inc
gs
cmpsb
repz
xor
addb
mov
push
je
push
loopne
jg
add
pop
jo
sub
aas
int3
adc
sub
jg
xchg
ret
movsb
int3
or
jbe
xor
jle
cs
xorl
aas
stc
sub
insb
cmp
xor
cli
and
out
mov
inc
xchg
mov
or
aas
in
dec
gs
es
dec
outsb
jo
test
mov
lods
shll
clc
inc
out
adc
pusha
and
mov
mull
daa
js
ret
imul
push
out
jb
dec
nop
les
arpl
push
add
cmpsb
leave
or
iret
repz
pusha
das
xor
sarb
inc
les
out
and
lock
punpckldq
test
adc
inc
inc
and
test
in
sbb
or
mov
push
insb
pop
aam
out
pop
fs
push
out
imul
cli
call
dec
cmp
dec
in
mov
scas
shll
mov
aad
mov
jle
jg
pop
js
es
push
call
outsb
loop
repz
inc
fsubrs
xchg
pushf
push
ja
xchg
enter
or
stos
popf
scas
jo
push
xlat
inc
adc
mov
or
dec
call
imul
jmp
lock
mov
adc
shll
jp
loopne
lds
mov
jae
and
push
addl
dec
push
xchg
dec
nop
cs
negb
dec
cmp
aad
add
repz
adc
test
and
roll
cmovs
inc
or
stos
mov
mov
lahf
pop
outsl
pop
mov
shll
aas
xor
repz
sahf
mov
cs
shll
dec
lcall
jg
inc
cwtl
xor
sbb
add
push
stos
repnz
push
jae
adc
lcall
test
dec
add
mov
lret
adc
adc
lret
mov
mov
and
out
mov
cmc
ficoml
mov
in
push
pop
sub
pop
std
scas
rcl
hlt
sbb
and
jnp
mov
and
mov
subl
mov
scas
mov
pop
xchg
lods
push
push
cmp
je
dec
out
mov
fidivrs
cltd
dec
add
stos
dec
fs
cld
das
ror
pop
stos
mov
and
cmp
test
pusha
pop
insb
adc
out
add
enter
mov
push
mov
push
mov
jnp
das
sbb
dec
insl
mov
cmp
data16
mov
lcall
fsub
add
cmp
push
sahf
stos
stc
rclb
addr16
mov
pop
adc
ret
push
cmp
or
int3
iret
lods
push
cmp
or
push
mov
arpl
enter
sub
outsl
jae
sub
ret
jge
in
rcll
or
testl
xor
movsl
insl
cmpsl
mov
stc
sbb
add
push
xor
fstpt
faddl
cltd
cli
sbb
in
sbb
mov
sub
xchg
divl
pop
bound
mov
push
pop
loope
test
sbb
icebp
aad
clc
jbe
sub
jle
dec
push
in
xchg
add
fnsave
loopne,pn
mov
sbb
imul
and
sbb
popa
xchg
xchg
sbb
mov
or
imul
dec
lods
xchg
pop
inc
sahf
mov
cltd
cmp
aas
fsub
mov
cwtl
das
addb
xchg
cmp
int
mov
push
lods
fdivrl
cmp
sbb
loope
and
push
mov
jns
inc
das
sbb
push
not
mov
addr16
dec
push
cltd
sbb
pop
or
es
adc
add
inc
scas
mov
sti
in
sub
sub
push
inc
shl
ret
lods
shlb
cmpsl
xchg
push
int3
or
les
push
fildll
add
pop
mov
fistl
sahf
in
roll
mov
or
pop
pop
scas
pop
enter
inc
gs
fabs
mov
add
sti
dec
push
out
push
or
push
jne
push
sar
adc
adc
sbb
lods
test
pop
popa
xchg
inc
add
frstor
mov
ret
inc
push
loopne
xchg
add
ds
jge
or
mov
jns
pop
dec
std
pushf
cmp
jg
push
js
aaa
bound
imul
cmpsb
adc
inc
incb
add
or
add
lret
movsb
scas
nop
test
test
icebp
and
sarb
and
inc
es
out
fstpt
mov
test
in
faddl
ss
xchg
stc
mov
movsl
clc
adc
jbe
hlt
mov
or
loop
inc
xor
sbb
push
rcrb
icebp
test
sub
mov
add
add
inc
fsubr
jmp
les
xor
sub
nop
sarl
mov
test
sbb
gs
pop
hlt
xor
add
xchg
mov
sbbl
stc
repz
enter
sub
xchg
and
dec
in
loopne
inc
mov
jns
icebp
pause
cmp
jp
jo
stos
jmp
adc
mov
out
inc
nop
outsl
sbb
roll
inc
sub
adc
out
in
jg
loopne
iret
stos
or
inc
push
dec
rol
add
sbb
push
enter
out
ss
pop
mov
popw
dec
aaa
jecxz
andl
and
les
lods
imul
sub
ss
out
cmp
nop
dec
shll
sbb
inc
push
outsb
pop
popf
mov
sub
je
gs
test
sbb
cli
and
insb
and
sahf
inc
inc
aaa
pop
inc
push
shlb
test
rorb
pop
xchg
push
push
aam
sbb
lret
jg
enter
cs
fdiv
pop
cmp
leave
add
ficoml
mov
mov
aad
mov
mov
and
cmp
jmp
xchg
shll
nop
insb
adc
lret
inc
lret
push
and
test
dec
inc
ljmp
push
push
or
dec
sbb
or
xchg
hlt
aas
xchg
lcall
xchg
inc
sti
and
xor
in
and
or
lret
push
mov
popa
mov
mov
shll
push
data16
xor
stos
jmp
and
lret
jge
or
jnp
scas
or
leave
and
push
inc
outsl
or
icebp
pop
pop
dec
rcr
dec
fwait
push
repnz
into
scas
add
adc
imul
mov
pop
rclb
ficoml
adc
adc
lods
scas
and
pushw
dec
cmpb
pop
inc
mov
mov
orb
fcmove
add
popl
lea
sti
sub
xorl
xor
int
leave
arpl
adc
dec
pop
push
and
cmp
dec
push
js
clc
arpl
adc
ja
cltd
cmp
cmpl
lret
aad
xor
mov
dec
add
push
push
mov
inc
or
arpl
enter
push
or
mov
jae
inc
cld
test
dec
and
sub
imul
rclb
movsb
cs
add
orl
sub
cmp
dec
mov
push
lret
movsl
dec
mov
cmpsb
and
lea
adc
jo
fmull
push
dec
ja
mov
sarl
inc
dec
addl
adc
jbe
insl
push
movsl
mov
sti
pop
arpl
mov
cld
in
mov
dec
ja
mov
or
add
pop
cmpsl
scas
xor
xchg
daa
jbe
sbb
xchg
xlat
fimull
pop
and
adc
sub
in
out
xchg
out
and
xor
jl
and
int
lret
in
in
adc
cmpsl
pop
mov
cmp
cs
shr
and
xor
sub
jb
sub
mov
dec
sub
fst
shl
pop
push
sbb
mov
enter
cmpsl
fwait
mov
mov
adc
fs
sbb
ds
scas
scas
jmp
pop
mov
cmp
out
dec
int3
xor
cmp
adc
mov
repnz
stos
cmc
cmpb
pop
in
fstpt
xor
jns
xlat
jg
pushf
int3
idivl
call
sub
lock
mov
out
movsb
or
or
mov
addr16
push
jg
icebp
add
or
and
mov
jo
imul
or
fs
push
pop
shl
dec
adc
sti
pop
jle
cmpsl
test
xlat
mov
inc
xor
ret
sahf
xchg
mov
gs
fcmovne
cmpsl
lods
inc
loop
dec
push
dec
es
push
mov
mov
mov
dec
push
pop
into
lret
das
roll
mov
sbb
addr16
data16
push
and
mov
decl
shrl
inc
sub
cmc
aaa
ja
das
aaa
hlt
inc
shll
pop
idivb
aam
mov
mov
ss
mov
or
ss
xchg
and
mov
sub
xor
or
roll
icebp
push
sbb
fucomi
xorl
subb
mov
push
push
rol
outsb
fstps
sbb
sub
rol
mov
scas
xlat
pop
outsl
mov
lock
jns
adc
xor
std
mov
mov
daa
sbb
mov
aas
outsl
inc
daa
push
inc
push
rorl
idivl
lcall
jbe
xchg
insb
or
pushf
xchg
mov
jns
mov
dec
add
cmp
push
add
ret
fistpl
nop
mov
push
dec
outsb
jge
insb
aad
jne
fstpl
xor
mov
pop
jp
xchg
inc
es
jle
mov
xchg
mov
adc
sub
bound
mov
pop
push
pushf
adcb
push
add
out
pop
fcomi
loop
test
xchg
loope
clc
or
pushf
sbb
jae
lds
repz
dec
shlb
fs
xor
pop
mulb
imul
mov
sbbl
decb
fs
leave
jnp
mov
loop
shrb
xchg
fmull
push
cmp
pop
imull
mov
adc
mov
adc
test
fdivr
les
mov
test
inc
jns
daa
dec
add
cmp
aas
shll
xor
jno
icebp
sbb
mov
jge
repnz
ret
lods
dec
test
jle
ljmp
xor
xor
jns
mov
xchg
push
mov
mov
add
in
shll
and
in
mov
pushf
movntps
sbb
popf
sbb
movsb
dec
cmpsb
outsl
mov
jb
mov
lret
ja
aad
adc
fsts
out
lds
pop
jp
stos
push
xchg
mov
pop
cwtl
out
das
xor
sbb
stos
daa
pop
and
adc
push
inc
dec
or
jge
idivl
add
or
jo
xchg
fisubs
in
insl
push
mov
sub
movsb
jnp
insl
test
or
or
int3
sahf
inc
imul
mov
int3
add
inc
lret
std
test
xlat
fs
shrl
mov
push
mov
cmpsb
sbb
mov
imul
daa
and
faddp
scas
mov
ja
mov
mov
sti
cmp
pop
pop
inc
and
sahf
fdivl
mov
jo
scas
push
cmp
adc
adc
xchg
push
mov
int3
inc
insb
test
jp
push
sub
test
lock
dec
lret
push
dec
and
xchg
sbb
sub
xchg
inc
ja
dec
in
repnz
inc
and
push
cmp
data16
imul
cmp
mov
jecxz
fdivp
push
aaa
cltd
icebp
test
mov
adc
inc
mov
push
lods
cmp
add
jnp
xchg
xchg
mov
in
int3
ds
mov
inc
clc
push
shl
dec
addb
mov
ret
nop
pop
pop
std
mov
adc
outsb
cmp
jmp
sbb
xchg
xchg
iret
mov
out
popa
std
ret
movsl
insb
jmp
aas
fstl
push
mov
adc
adc
mov
ja
stos
pop
rcll
int3
sub
jl
xor
stos
out
out
insl
test
xchg
pop
ret
push
cmp
shrb
xchg
mov
jmp
rcr
flds
mov
arpl
pop
enter
xor
push
les
cmpsl
cmc
dec
leave
insb
mov
roll
fnstsw
jbe
adc
inc
mov
lods
cs
push
cmp
dec
gs
loope
dec
cmp
adcb
sbb
hlt
mov
push
mov
jecxz
pop
and
jb
xor
cmp
pop
mov
je
inc
sub
clc
mov
in
sbb
movsl
adc
xchg
repz
pop
mov
or
sbb
insb
mov
dec
push
xchg
pop
pushl
push
lock
sahf
repz
lret
sub
cmpsb
out
test
in
into
push
jle
movsl
leave
mov
dec
in
jg
or
cmp
test
shll
pop
push
dec
sbb
daa
fisttpl
xchg
dec
adc
ret
mov
mov
xchg
cltd
sbb
clc
rcrl
mov
or
or
push
xor
xor
pop
rcl
inc
sub
sti
cmp
in
pop
push
push
sub
jb
push
cmp
pusha
cli
mov
clc
cmp
mov
or
or
push
mov
icebp
push
pusha
lds
fmull
cmp
popa
dec
jbe
aas
push
out
sbb
pop
add
push
add
lods
iret
xchg
lret
gs
dec
xor
stos
fsubrl
and
inc
inc
inc
addr16
les
out
or
xlat
in
test
enter
aaa
xor
int
inc
inc
fcmovnbe
pop
jno
out
push
pop
mov
faddl
out
mov
ja
je
ljmp
dec
dec
mov
push
inc
inc
mov
loopne
lods
notb
stos
popa
mov
stos
arpl
cmp
mov
push
xchg
sub
int
xchg
push
loopne
jo
out
inc
lahf
mov
adc
test
pop
iret
es
les
sub
insb
stc
mov
pop
add
add
loope
adc
into
pop
sub
xchg
pushf
mov
cmpsl
adc
test
popa
popa
mov
adc
push
roll
lods
neg
inc
push
stc
call
adc
push
and
mov
inc
pop
and
jecxz
xlat
push
aas
xchg
ret
addl
pop
cld
outsb
scas
stos
dec
data16
popf
lahf
push
mov
cld
inc
cwtl
mov
adc
dec
js
das
aas
add
int3
cli
xchg
fwait
test
es
leave
and
nop
push
jmp
and
mov
ret
lea
cmp
adc
das
aam
divl
jnp,pn
lahf
pop
or
lret
loopne
loop
dec
add
pop
mov
push
push
adc
jbe
mov
mov
mov
aam
iret
aad
inc
xchg
jl
dec
popa
repz
idiv
pop
enter
pop
cmc
inc
adc
push
ds
arpl
pop
dec
dec
lahf
mov
cltd
cmp
mov
dec
call
outsl
lret
scas
xor
outsl
insl
push
jle
pop
xchg
iret
stc
int3
lcall
ljmp
xlat
push
sahf
arpl
and
test
push
fidivrl
cmp
push
notb
mov
or
mov
pop
test
push
rolb
mov
jge
idivb
test
jae
pop
inc
mov
rcl
leave
pop
fmul
orl
dec
or
sbb
inc
mov
lock
cmp
gs
dec
push
pop
xchg
adc
xor
aas
and
xchg
insl
jp
pop
pop
clc
arpl
mov
iret
jnp
cmpb
jg
out
mov
mov
movsb
into
outsl
pop
sub
mov
pop
xchg
sub
fldenv
mov
xchg
fidivl
push
insb
cmp
add
loopne
arpl
mov
push
ret
sbb
inc
dec
mov
mov
scas
add
movsl
ss
std
das
push
inc
cmp
and
imul
mov
add
cmc
mov
cltd
mov
testb
dec
pop
aaa
sbb
sub
xchg
jmp
pop
mov
outsb
xor
ror
xor
pushf
xchg
popf
enter
or
pop
fs
loope
sub
int
in
mov
ror
or
xchg
xor
dec
xchg
jp,pn
js
loop
rorl
and
inc
mov
push
fdivrs
ret
adc
inc
stc
adc
inc
in
stos
push
mov
andb
jbe
xchg
add
cmp
adc
paddusw
xor
mov
xor
xor
incl
push
insb
push
out
pop
push
clc
notl
scas
xchg
add
loop
jge
orb
notl
sbb
pop
and
dec
adc
clc
lods
aaa
pop
mov
loopne
test
mov
push
lock
mov
dec
cltd
notl
lahf
sbb
loopne
fcmovu
inc
cli
int
dec
xor
adc
cmpsl
mov
movl
inc
mov
jecxz
push
sbb
arpl
add
repnz
cltd
push
jmp
loop
inc
rorb
cmp
out
scas
jbe
clc
push
es
test
clc
out
jns
push
mov
adc
cmp
and
sbb
enter
sbb
inc
aaa
mov
push
in
jle
fisttpl
dec
jo
sbb
xor
push
das
inc
jmp
xchg
cltd
and
add
lcall
sub
xchg
ja
mov
add
push
scas
jbe
sbb
push
mov
les
fsubs
repnz
add
push
sub
sub
ret
jp
adc
inc
aad
inc
adc
add
xor
aaa
xchg
add
cmp
cmp
cmpb
add
sahf
out
xchg
fwait
sbb
push
fdivrs
imul
divb
lock
mov
cli
test
test
ds
pop
icebp
jmp
push
jno
pop
mov
or
pop
ror
cs
xor
mov
mov
cmp
dec
dec
aaa
xchg
stc
ds
sbb
add
push
cli
lahf
sbb
sti
mov
mov
pop
push
mov
fbstp
daa
das
ret
push
scas
mov
add
ja
cs
popa
jbe
dec
cmp
insl
mov
add
mov
jmp
lret
fwait
jae
jp
loop
gs
xchg
add
mov
dec
add
dec
add
sub
nop
lret
cwtl
jno
cmpsb
adc
xchg
jne
outsl
mov
out
fnstenv
test
pop
or
andb
leave
mov
mov
call
pop
imul
jg
push
jmp
aaa
out
mov
sbb
aam
inc
mov
std
loope
arpl
fdivs
dec
shlb
stc
shlb
les
aad
inc
xor
push
iret
add
pop
call
xor
xchg
loopne
mov
loope
fidivs
cmpsl
push
je
test
insb
mov
mov
and
jp
notb
test
push
jmp
inc
les
movsb
iret
mov
jge
data16
inc
mov
xchg
stos
mov
push
arpl
inc
int
jb
mov
or
inc
dec
xor
sahf
mov
leave
mov
mov
stos
incb
inc
pushf
hlt
mov
stos
aam
dec
jmp
in
mov
adc
cld
push
sbb
filds
iret
pop
push
push
push
push
sub
jge
outsl
push
push
fimull
jl
mov
inc
outsl
or
adc
loope
jg
push
rorb
or
adc
lods
pop
sbb
shr
jno
inc
pop
es
mov
rorl
in
push
shlb
mov
sti
dec
sarl
loopne
push
movsb
lahf
popa
push
or
loop
mov
mov
loope
popf
push
xor
es
bound
or
jo
adcl
test
push
shll
in
jae
push
js
test
lock
inc
jge
stos
inc
mov
xchg
adc
jmp
aad
scas
push
aas
push
push
xchg
imul
jge
xsaves
lret
fcomip
sub
notl
lods
scas
and
lods
sbb
dec
or
das
test
lahf
and
inc
sub
loop
mov
and
adc
push
inc
mov
js
cmpsl
cmp
mov
xchg
mov
ficompl
daa
push
inc
pop
jne
sahf
jmp
pop
cmp
pop
cmpsl
adc
cs
std
pop
ja
bswap
lds
inc
sti
lret
je
out
jg
data16
cmp
jns
leave
push
sub
fdivs
nopl
ret
sub
inc
call
sub
mov
les
sub
xchg
jp
addl
rclb
les
push
sub
cmp
cmpl
push
cmc
adc
xlat
pop
fwait
jge
or
inc
subb
subb
fcoms
add
jmp
pushf
ret
test
xchg
mov
inc
mov
cmp
test
mov
mov
ja
pusha
cs
sarl
adc
sbb
cmpsl
jno
aaa
xchg
popa
mov
hlt
inc
pop
dec
in
pop
jecxz
jo
fcoms
dec
adc
pusha
fmull
jmp
test
cmpsl
sbb
mov
fidivl
mov
mov
sti
fiadds
mov
ljmp
mov
fstpt
sbb
mov
repz
mov
loop
sbb
outsb
repnz
call
call
pop
jno
shll
sti
push
lret
dec
mov
cwtl
xor
cs
xchg
add
sarb
loopne
int3
jo
call
sub
lahf
dec
gs
sbb
insl
loope
mov
arpl
adc
enter
lds
movsb
xchg
in
orl
sub
lods
loopne
pop
inc
call
movsl
daa
mov
scas
into
jmp
push
insl
and
mov
into
xchg
dec
lahf
jbe
mov
adc
jle
dec
fwait
push
adc
mov
inc
pop
push
bound
adc
xchg
or
movsb
test
mov
sbb
xor
fiadds
pop
stos
cmp
jecxz
ljmp
lock
shlb
insb
xchg
sbb
dec
or
xchg
jecxz
scas
ss
dec
andl
xchg
inc
add
aas
jle
cwtl
roll
and
sub
mov
push
lock
push
jmp
cmpl
mov
aam
jle
push
jmp
in
push
ja
sub
xchg
mov
xchg
in
and
or
pop
push
std
repnz
sub
iret
shrl
pop
cmp
sub
popa
and
cli
or
inc
add
jmp
negl
rcrb
mov
stc
popf
repnz
xor
sub
jae
dec
push
fs
inc
adc
imul
push
in
arpl
fisubl
mov
push
jno
jge
insb
es
ljmp
in
cld
fwait
popf
das
lret
aaa
cmp
pop
test
ss
sub
cmp
or
mov
mov
sahf
add
sub
stos
mov
inc
sub
test
aam
cmp
jb
add
aad
mov
adc
cwtl
shlb
in
scas
ljmp
inc
xchg
mov
pandn
fidivrs
hlt
sub
stos
mov
mov
mov
mov
movsb
pop
jmp
test
out
xchg
test
xor
pop
pop
push
stos
sbb
rsqrtps
pop
xchg
movsb
fs
cmpsl
hlt
lds
mov
into
cmp
push
test
push
inc
daa
mov
enter
pop
jp
psubsb
mov
lods
adc
movq
jb
mov
xchg
sahf
or
inc
les
idivl
cmp
add
pop
test
sbb
mov
dec
push
test
stc
pop
dec
mov
or
mov
insl
lock
and
jb
cmpb
jns
sub
or
dec
dec
jg
nop
sar
arpl
loop
loope
cmp
hlt
xchg
inc
mov
popa
mov
idivb
jle
jge
jno
repnz
repz
ss
sub
test
mov
mov
test
daa
or
jae
stos
xor
adc
mov
inc
shr
mov
mov
and
cmp
adc
inc
or
aam
cwtl
popa
mov
test
mov
or
mov
scas
rorb
push
xchg
mov
out
adc
dec
push
sbb
and
lret
xchg
cmp
mov
in
aaa
out
adc
pop
imul
shl
fpatan
and
and
jmp
sbb
ss
ja
cs
imul
jg
daa
cmp
dec
inc
and
mov
and
sahf
loop
lods
mov
push
movl
jae
sbb
push
lcall
ja
test
adc
inc
das
pop
xchg
push
xlat
mov
and
in
enter
repnz
push
xchg
shll
ds
test
dec
and
and
pop
sarb
mov
jo
neg
call
jbe
xor
mov
sub
pop
adc
jnp
cmp
shrb
les
add
xor
lcall
es
notb
fs
rclb
loopne
loop
in
push
lods
or
nop
fnstcw
out
mov
cmpsb
pop
ds
xchg
or
sub
or
sub
jne
push
adc
lods
xchg
nop
push
loopne
lock
insl
and
repz
shl
inc
cmpsl
out
jb
sbb
cmpb
jg
or
je
add
aam
in
mov
and
testl
outsb
xchg
sub
sti
sti
jne
call
lret
mov
push
unpckhps
pop
jle
and
pop
or
mov
or
pop
pop
jo
dec
pop
inc
pop
das
mov
cwtl
or
add
int
mov
mov
jns
rol
sbb
mov
xchg
push
mov
imul
jp
cmpb
pop
or
xchg
or
pop
daa
cmp
jnp
cld
mov
cmp
sbb
dec
ljmp
dec
int3
add
pop
stc
pop
fisttps
popa
mov
cmp
rcrl
pop
and
insl
jno
push
mov
pop
les
jnp
orb
mov
pop
mov
lea
fisubrl
adc
mov
jmp
cmpsb
xlat
fcompl
mov
xor
sub
push
aas
lret
and
xchg
dec
lret
push
jmp
xchg
jle
loopne
fidivrl
adc
loope
je
rclb
cmc
jns
push
fbld
leave
je
out
lock
sti
fdivp
xor
and
stc
out
xor
xor
push
addr16
pop
add
xor
test
add
test
push
sbb
in
loop
cmp
sbb
std
inc
nop
mov
push
xor
leave
out
lea
lret
sahf
xor
jbe
ds
sbb
add
xor
cs
xchg
jns,pt
adc
cmp
fs
ljmp
scas
sbb
movsb
or
mov
lods
ss
jecxz
xchg
or
daa
lds
adc
lods
pop
popf
xor
inc
enter
sbb
repz
mov
mov
jb
sahf
mov
test
ror
and
push
into
ficoms
je
das
movsl
or
push
clc
dec
inc
stos
push
sbb
add
and
shll
sub
clc
jns
pop
jbe
lahf
icebp
lea
movsl
adc
mov
xor
and
addb
xchg
mov
rcrl
or
cmp
sti
lds
shrl
rcl
sub
or
jno
repz
mov
add
mov
lods
push
mov
cmp
aad
push
and
xor
fsub
imul
push
daa
shll
mov
outsb
fs
jg
or
sub
je
mov
dec
xchg
mov
outsl
sub
mov
xchg
pop
aam
sub
adc
jbe
hlt
push
insb
clc
mov
out
or
jne
fcmovnu
xchg
shlb
loop
popf
xchg
xor
repz
imul
cmp
cmpsb
inc
stos
rcll
iret
push
ja
xor
cmpsb
test
in
mov
repnz
and
sbb
add
int3
mov
adc
int3
iret
mulb
or
aad
jecxz
cmpsl
mov
fs
pop
or
std
cmp
mov
fwait
in
sub
and
int
lock
into
jmp
mov
sub
sarb
and
loop
mov
pop
jg
dec
jl
sub
adc
cltd
fbld
mov
push
mov
insb
jle
stos
pop
jne
mov
test
sbb
pop
jmp
addr16
jl
cmpsb
into
test
in
test
mov
mov
cmp
out
push
mov
inc
test
inc
or
mov
jmp
lret
push
dec
loope
aam
sbb
and
mov
add
jno
push
mov
jae
xchg
inc
dec
imul
call
xor
addb
sahf
ljmp
pop
push
enter
dec
xor
pop
fcompl
sub
movsb
push
aaa
sbb
add
sub
fisubs
mov
cmp
push
ss
inc
lods
out
dec
push
aam
in
lds
lahf
enter
jae
cmp
push
inc
pusha
inc
add
sbb
sub
xchg
popf
lods
sbb
fwait
es
xchg
adc
aaa
subb
push
sti
sub
lock
xorb
add
js
ficomps
lods
fwait
mov
outsb
adc
movsb
xchg
popa
adc
lahf
mov
mov
ss
stos
sbb
clc
nop
inc
cmp
aam
loop
je
insb
dec
test
and
sbb
jbe
xchg
mov
daa
neg
stos
inc
sarb
mov
add
sub
repz
push
insl
mov
inc
outsl
imull
ja
insb
mov
jmp
push
repnz
push
cwtl
fimull
sub
fldcw
sbb
inc
test
lds
lahf
jg
gs
aad
pop
fnstenv
jnp
fistpl
cmp
test
cwtl
sub
mov
es
mov
mov
jbe
push
sbb
vcmpss
fwait
mov
add
sbb
imul
out
fwait
out
jae
call
push
in
fdivs
mov
cwtl
inc
daa
jns
hlt
rol
fstpl
div
inc
lods
mov
xchg
setle
jl
repnz
inc
out
jb
rclb
mov
add
outsl
daa
mov
adc
negl
ds
pop
inc
mov
mov
dec
cmp
lea
sahf
int3
xchg
xor
sub
dec
add
adcb
mov
cmp
inc
out
push
in
repnz
aaa
clc
push
es
stc
bound
cmp
and
popf
xchg
fstl
inc
xchg
lret
mov
jnp
or
cmp
jno
jbe
jae
ds
xchg
fcmovbe
je
mov
pop
jnp
loopne
insl
and
nop
into
sub
sbb
mov
mov
sub
add
lea
inc
fs
xchg
shll
push
int3
mov
sbb
lret
leave
pop
notl
mov
xchg
or
lcall
mov
adc
adc
aad
out
and
xchg
aas
loope
test
lret
sub
lret
push
repz
insl
xor
popa
rcr
inc
insl
adc
cmp
adc
bound
adc
add
cs
mov
fisubrs
incb
sti
mov
jg
rorb
mov
pushf
je
paddusw
mov
push
or
sbb
xchg
aaa
sbb
lea
es
and
and
sbb
push
pop
push
ja
or
rep
mov
ljmp
push
filds
cmp
dec
inc
mov
clc
push
lahf
jg
stos
jg
jg
jg
aam
push
jecxz
repz
aas
test
out
inc
cmc
add
pop
rcrb
cmovle
xlat
cmpsb
cmp
push
inc
jl
scas
jne
sbb
inc
cmp
pop
and
mov
push
cmp
and
sahf
or
mov
insl
insl
mov
mov
data16
cmp
mov
sbb
stos
mov
and
pop
lret
mov
adc
lock
cmp
bnd
push
shr
pop
in
dec
inc
cltd
xchg
pop
pop
sub
and
sbbb
into
push
xlat
jmp
dec
insb
lret
xchg
push
sbb
outsl
repnz
jge
loopne
out
cmc
add
stc
cmp
add
mov
xchg
shll
add
sub
sbb
cmp
cmp
sub
out
adc
and
psadbw
lods
pop
imulb
cli
stos
xchg
mov
or
sbbb
inc
loopne
arpl
inc
push
xchg
imul
mov
arpl
stc
mov
push
test
xlat
out
add
mov
loopne
icebp
jne
dec
sahf
lds
movsb
pop
push
loope
imull
inc
fcomps
dec
sbb
push
lahf
cwtl
mov
popa
mov
jge
in
addr16
sarl
mov
mov
inc
fs
adc
fwait
xchg
push
sub
mov
and
out
test
jg
cli
mulb
or
sub
mov
js
stc
xor
add
lcall
mov
sub
sub
decl
int
or
dec
xchg
pop
cmc
test
ja
sbb
daa
sub
cmpsl
cwtl
leave
sti
stc
push
int
int3
int
xchg
mov
repz
pop
rcll
jmp
mov
cs
rcr
push
push
push
pusha
sbb
xchg
sub
jl
lock
pop
xor
loop
mov
mov
mov
movsb
test
loope
rorl
or
sub
xchg
sahf
pop
cmovge
mov
es
out
add
xchg
inc
das
push
outsb
cmp
push
dec
xlat
adc
push
iret
dec
mov
dec
lcall
or
mov
pop
cltd
and
pusha
dec
mov
push
adc
add
js
push
adc
ja
enter
cmp
and
inc
jg
fwait
icebp
jo
dec
jp
xor
push
jne
mov
sub
imul
nop
jns
sbb
xchg
nop
sbb
cs
push
jge
mov
std
lods
jge
jae
jmp
iret
sbb
push
pop
add
repnz
movsb
add
ds
mov
sub
jle
sbb
mov
jb
adc
add
mov
imul
mov
push
xor
outsl
sti
sub
xor
scas
ljmp
ret
pop
lahf
sahf
or
or
fsub
ret
gs
fists
cwtl
cltd
inc
je
nop
popa
insl
lods
cli
lods
pop
outsl
fisttpl
mov
shlb
mov
adc
aaa
test
aas
into
stos
data16
mov
and
push
mov
cmp
or
inc
jl
mov
jne
arpl
lock
push
inc
inc
nop
adc
pop
les
aas
push
rcrl
out
cmpsb
movsb
stos
sub
lods
jp
out
push
inc
orb
fisttpl
add
mov
sahf
sub
jp
mov
fsubl
xchg
aas
pop
aam
aaa
add
aas
cmpsb
hlt
xor
mov
test
fistl
adc
insb
xchg
mov
fmuls
cli
in
add
fsts
mov
xchg
fsubs
inc
xor
and
jb
jg
mov
mov
adcl
mov
ss
xor
push
push
pop
inc
addb
cmpsb
mov
mov
xchg
stos
pop
jp
aad
les
add
mov
loopne
ljmp
aam
stos
aad
push
cmp
mov
or
and
mov
dec
cmp
push
cltd
sarb
add
hlt
xor
jb
jo
in
addb
cltd
data16
xchg
jge
les
test
mov
dec
inc
jg
call
cli
jge
imul
or
mov
xorb
sar
pop
push
ss
push
mov
push
mov
inc
lea
inc
lea
cli
adc
in
daa
lock
mov
mov
mov
nop
ljmp
jae
outsb
adc
mov
dec
aas
xchg
aas
mov
stos
mov
ljmp
fbld
jns
cld
adc
out
sbb
xor
repnz
cmpsb
push
sub
jns
jmp
jmp
dec
mov
pop
sub
scas
mov
mov
pop
cmpsl
aaa
jbe
ljmp
cli
out
push
dec
in
cs
cli
sti
mov
fdivrs
sub
out
int3
or
jo
movsb
xor
mov
aad
inc
leave
adc
or
in
test
test
loopew
mov
adc
mov
or
call
inc
xor
jnp
popa
push
call
pop
fildll
jne
sub
sarb
cmp
test
and
lahf
mov
xlat
fcoml
jp
nop
pop
test
das
sbb
xchg
insb
mov
jns
cmp
imul
jb
stc
sub
ljmp
or
jnp
aam
insb
in
jmp
xchg
popa
bound
pop
cmpb
pushf
movsl
pop
cmp
or
lods
add
cmpsl
fwait
jb
in
imul
mov
adc
cld
or
sbb
les
push
sub
jmp
int3
xchg
pop
sbbb
out
dec
dec
xor
sbbb
ljmp
sub
popa
mov
sar
jae
xor
jbe
add
or
lcall
jae
sub
add
sti
xor
dec
adc
lea
fbld
lods
xchg
lcall
loope
fisubrl
jl
sub
into
int
mov
xor
xchg
xor
mov
pop
rorb
adc
ja
fstpl
xor
push
pop
stos
loopne
jne
push
mov
add
cmc
loopne
push
fisubrl
cmpsb
sub
fdivs
xchg
mov
cmp
pusha
push
push
inc
aam
insb
jbe
sbbl
push
sahf
mov
push
dec
scas
sbb
jne
xchg
sbb
mov
xor
push
xchg
dec
fstps
frstor
mov
call
sbb
xor
add
clc
jp
mov
loop
xchg
fisubrl
loopne
aam
stos
mov
adc
lock
divl
es
jno
add
push
sub
jl
idiv
cmp
mov
aas
scas
int
and
out
lcall
sahf
push
jle
lds
mov
loope
js
lods
fstl
aaa
mov
stc
aad
testl
loop
mov
iret
rcll
xor
into
adc
xchg
jl
and
jns
inc
and
fwait
push
shlb
lock
inc
cmpsl
inc
jl
dec
rorl
add
mov
push
push
aam
mov
push
int
stc
negb
and
insb
fistps
lods
subl
dec
mov
or
insl
lock
dec
fstpt
sub
push
adc
jnp
xchg
sbb
and
jmp
ret
mov
dec
add
stc
lods
das
add
pusha
inc
ret
pop
sbb
sbb
xchg
scas
repz
push
insl
mov
or
fwait
jg
cmp
test
cmp
das
sbb
mov
xor
mov
mov
mov
out
xchg
cs
daa
out
fs
mov
in
out
lock
mov
loope
aas
sbb
rcrb
ficoms
sbb
add
sbb
fwait
sbb
in
mov
lret
push
popf
scas
mov
out
push
adc
inc
dec
sbb
lods
xchg
pop
or
and
test
mov
les
add
and
or
test
stos
repz
test
mov
mov
out
mov
ror
xchg
push
mov
enter
dec
pushf
pusha
push
sub
add
scas
in
adc
dec
or
sub
out
jnp
and
sub
jnp
add
gs
je
adc
xor
xchg
sarl
insl
lret
xor
cltd
cli
lds
bound
stc
jmp
loop
and
loop
adcl
jne
leave
ss
add
popa
jmp
push
dec
or
xlat
dec
mov
lods
dec
cmpsl
test
pop
lahf
lods
int3
jne
adc
imul
adc
das
and
popa
push
testl
pop
lods
inc
adc
dec
lds
mov
xor
mov
adc
jae
push
push
add
and
or
sbb
or
fucomi
leave
fcoml
les
add
mov
jb
dec
pop
cli
stos
mov
pushf
jo
or
sub
sbb
cmpsl
sbb
sub
push
je
add
mov
mov
adc
inc
dec
ficomps
jno
movsl
xor
rolb
rcll
pusha
lahf
leave
and
jp
sbb
ror
push
mov
ds
bound
mov
jge
aas
in
add
xchg
jbe
addb
jp
rcrb
insb
sub
jne
jnp
and
jae
movsb
add
jno
mov
movsb
mov
mov
mov
call
pop
push
pop
orb
sbb
jmp
cmp
cli
shr
dec
out
mov
add
inc
cwtl
xlat
movsl
scas
add
rorl
dec
jle
fadds
divl
pop
aaa
sarl
scas
cwtl
lcall
mov
pop
test
mov
aam
xor
inc
out
ret
mov
jb
movsl
nop
add
ret
or
movsb
xchg
push
and
ss
clc
xor
jl
out
mov
and
lods
cli
dec
clc
jmp
pop
je
xchg
int
sti
sub
xor
sbb
lret
jns
popf
mov
repnz
xor
mov
jno
sarl
and
jecxz
into
aaa
pusha
cmp
push
cmp
add
hlt
imul
cmp
inc
pop
adc
nop
ljmp
or
mov
lods
inc
ret
sbb
fdivs
rcll
mov
pusha
int3
repz
lret
loopne
movsl
imul
loope
jb
int3
cmp
push
enter
aas
sti
add
ja
out
das
in
adc
inc
push
mov
push
pop
mov
sbb
sbb
shrl
sbb
xchg
sub
mov
push
imul
fstps
lea
pop
inc
sub
and
mov
mov
bound
jmp
mov
clc
xchg
jne
imul
mov
fdivrl
mov
out
dec
gs
jbe
shl
shlb
mov
lret
adc
mov
xchg
adc
adc
mov
div
imulb
fstpt
fstps
data16
sbb
aas
int
mov
jge
push
mov
cmpsl
test
or
jge
push
pushf
lret
cmpsb
and
sbb
jle
scas
pop
and
jb
or
inc
hlt
push
or
insl
shl
sti
cmp
xor
cmp
adc
aad
montmul
cmpsb
xchg
push
and
push
or
cld
pusha
sbb
xchg
mov
cmp
inc
pop
mov
xor
shll
adc
ljmp
push
add
cmp
sbb
lods
mov
cmpsl
push
rclb
aad
lods
rcll
std
sbb
fmul
mov
jne
lret
fadd
lret
xchg
push
pop
sbbl
inc
and
jnp
cltd
add
xlat
and
mov
mov
push
mov
xchg
je
and
mov
jmp
sbb
ret
and
mov
aas
push
xchg
adc
lahf
pop
mov
mov
imul
test
cli
test
add
lret
lcall
mov
out
ja
adc
fs
xchg
jne
mov
adc
add
sub
push
pop
mov
das
popf
test
mov
cmp
pop
pop
or
pop
mov
andps
and
mov
andl
pop
test
faddp
int
mov
inc
jle
xchg
adc
sub
addr16
adc
and
test
les
call
inc
enter
push
movsb
or
shr
cmp
cli
cwtl
fsubrp
lock
das
in
ficoml
in
mov
inc
sbb
stc
jns
sub
adcl
aas
push
mov
mov
lret
repnz
pop
sahf
mov
xor
push
or
lret
mov
icebp
popa
daa
xchg
jge
lock
sub
cmp
sbb
inc
jmp
dec
cltd
lods
rcrl
mov
sahf
pop
mov
lretw
adc
daa
pop
out
data16
leave
data16
mov
or
in
mov
fisubs
data16
sahf
jg
xor
dec
addr16
in
sbb
inc
cmp
fcmovne
outsl
adc
sbb
gs
mov
or
jle
add
movsb
jnp
inc
xchg
pushf
jp
dec
push
sarl
stos
fisttpll
fwait
cmpsl
adc
decl
sub
xchg
add
mov
sub
cmp
shll
pushf
xor
lea
pop
dec
out
xchg
aam
pop
xchg
cmpsl
enter
imul
mov
jle
jp
mov
stc
xchg
loopne
bound
cmp
cmp
insl
aad
out
xor
inc
sub
sbb
jne
ret
ss
lea
and
dec
sbb
mov
in
xor
xor
xchg
out
outsb
es
mov
mov
mov
or
mov
jo
out
or
jns
adc
mov
aam
leave
mov
xchg
pop
stos
jnp
int
sbb
mov
add
lcall
jl
mov
sahf
fnstsw
daa
push
jo
mov
in
push
mov
jbe
and
sbb
pop
insl
aad
push
cmc
jnp
push
hlt
inc
sarl
cs
or
stos
cli
and
and
ss
and
adc
int3
pop
stos
insb
lahf
subl
inc
jg
xor
add
push
aam
and
arpl
jnp
popa
mov
cmp
push
and
mov
aad
test
or
mov
xchg
clc
pop
xor
les
mov
cltd
mov
mov
xor
mov
shlb
push
xchg
mov
push
inc
jmp
push
shll
ds
jg
jmp
xchg
hlt
sub
aad
adc
add
xor
mov
mov
mov
sahf
xchg
xlat
jg
jge
xchg
call
adc
pop
push
xchg
or
ret
mov
pop
inc
out
mov
sbbl
xchg
pop
in
and
repnz
jno
sub
or
scas
or
lods
roll
out
bnd
inc
and
outsb
sbb
mov
cmpsb
pop
mov
cmpsb
and
or
pop
rcrl
pop
daa
xor
push
mov
dec
ret
sbb
or
rcll
clc
adc
lock
xchg
and
mov
out
push
fs
fistl
test
out
mov
adc
or
popf
outsb
int3
sti
sub
lds
ljmp
xchg
sbb
adc
lret
lret
inc
scas
xchg
shl
push
mov
mov
cltd
pop
stc
fs
in
jns
enter
shrb
sti
and
xchg
cld
fnstcw
std
mov
mov
call
ret
pushf
test
pop
adc
jle
adcb
out
xchg
push
fwait
and
pushf
test
nop
insb
fs
cmp
fstl
js
jl
pushf
ret
fs
cs
aam
or
cmpsb
fldt
repz
xor
mov
add
cmp
lret
dec
stos
pop
sub
jge
push
mov
sbb
add
dec
div
in
jl
mov
test
fimuls
and
inc
push
xor
imul
inc
add
push
push
insb
push
fs
dec
fxch
inc
hlt
mov
pushf
push
or
leave
or
cltd
inc
push
sub
test
sbb
or
xor
add
test
xchg
mov
inc
int3
xorps
scas
pusha
jb
addb
push
cmp
sbb
or
jno
arpl
sub
pop
pusha
shl
mov
js
inc
jnp
stc
ljmp
mov
rcll
rorb
xor
mov
push
js
and
repz
add
in
cld
cmp
xchg
xchg
push
lods
push
mov
aam
mov
insl
pop
and
fildll
push
mov
pop
insb
das
and
xchg
test
xorl
and
mov
jno
cwtl
sbb
or
std
inc
jbe
and
dec
aad
ss
xor
sub
cmp
arpl
pop
jmp
xchg
popf
daa
push
scas
pop
lret
fisttpll
and
sub
mov
pop
mov
inc
hlt
adc
test
adc
lods
xchg
shll
mov
push
cmpsb
mov
mov
pop
xchg
cli
jecxz
cmp
adc
pushf
shrl
mov
and
hlt
fcmovnu
das
das
mov
fstpl
pop
cmp
inc
xchg
jle
pop
push
imul
or
je
mov
mov
cmp
xor
dec
adc
mov
fisubrs
leave
les
lea
pushf
je
add
and
bound
sbb
ficomps
mov
test
mov
mov
jp
ja
sbb
xlat
test
sbb
inc
push
push
or
mov
jns
lock
cs
mov
sbb
jns
xor
into
fs
or
dec
adc
fs
add
std
insb
push
aas
ljmp
hlt
inc
shlb
push
xor
lret
jno
aad
les
sub
cmpsl
cmc
in
ss
fucomp
push
and
aaa
repnz
and
out
aad
mov
fisttpl
mull
sub
and
shlb
repz
jle
pop
mov
or
mov
int3
stos
pop
sub
sub
daa
add
cmpsb
clc
jo
push
pop
test
aaa
add
pop
repnz
bound
dec
out
fistpll
loope
arpl
test
pop
pop
xchg
lret
jg
jp
dec
cmp
adc
mov
mov
xor
jae
insb
aas
push
dec
and
sarl
lock
cmc
xchg
bt
repz
or
movb
jge
es
push
or
dec
fstp
test
jns
das
subb
or
mov
adc
dec
aaa
stos
mov
pushf
mov
mov
out
lret
mov
out
mov
movsl
cwtl
dec
xchg
xlat
mov
adc
rorl
jl
cmp
roll
ret
ljmp
or
repz
jl
sub
jne
fdivrl
or
sub
enter
jecxz
mov
push
stos
mov
call
xor
jle
sbb
sbb
cmp
xor
fmull
jo
sbb
and
faddl
or
mov
push
xchg
push
repnz
cld
icebp
enter
and
aam
in
jbe
dec
je
arpl
push
je
daa
inc
pop
push
mov
cmpsb
addr16
inc
cmp
adc
lret
mov
sbb
push
leave
in
sbb
cmp
inc
mov
shll
ljmp
addr16
sbb
js
push
adcb
stc
xor
pop
inc
sub
mov
lahf
mov
sub
insb
fs
ret
dec
sbbl
iret
insl
dec
mov
into
iret
jl
xor
pop
xchg
mov
cmp
sbb
lods
jmp
shll
sahf
cltd
pop
jae
int
mov
call
jp
inc
inc
jg
ret
sti
ret
mov
out
popa
aas
and
and
inc
mov
add
fs
adcl
rcr
or
movsl
ds
in
jne
inc
pusha
cmovne
mov
inc
pop
rcrb
dec
xchg
js
test
imul
push
jp
cmp
or
out
xchg
or
xor
sbb
test
roll
mov
sbb
xchg
push
scas
cmp
or
insb
sti
test
in
and
push
mov
sbb
push
leave
pop
fndisi(8087
in
insl
sbb
sub
lds
cmp
mov
push
imul
cs
test
lock
sti
push
jo
pushl
mov
jnp
outsl
mov
cltd
mov
ret
jb
sbb
hlt
sub
cmpsl
push
dec
pop
shld
dec
mov
sub
daa
mov
cmp
int3
pop
cli
mov
mov
inc
add
jge
xchg
orb
lods
dec
ja
sub
fstpt
dec
adc
jns
adc
test
enter
lahf
fs
out
xor
pop
push
inc
movsb
push
mov
outsb
fdivs
push
mov
call
jbe
push
aam
insb
shlb
cmpsb
std
pusha
div
in
imul
add
ret
or
ljmp
cld
mov
out
outsb
jg
daa
aad
sub
lds
and
sub
push
add
imulb
repnz
int3
inc
cmp
scas
lcall
push
movsb
fsubr
jb
or
xchg
xor
cld
push
mov
mov
movsb
icebp
loope,pt
loopne
addb
sbb
lahf
sbb
xor
jb
push
mov
aam
pusha
mov
leave
xchg
insb
sbb
out
fnstsw
cmp
nop
cmpsb
xchg
jnp
pop
jmp
push
xlat
jmp
sub
and
jae
and
jmp
adcb
lods
pop
fwait
leave
popa
aad
fcomi
add
sahf
push
loope
adc
mov
iret
inc
or
repnz
lods
stos
out
lds
pop
enter
test
fisubs
or
adc
and
gs
test
or
stos
xor
xchg
sbb
fwait
cld
adc
nop
and
adc
fdivl
mov
int3
fildl
mov
push
push
ds
sbb
insl
sahf
les
movsb
dec
jl
add
sti
cmp
jb
jl
rsm
aam
push
push
dec
andb
sub
sub
das
cmp
insl
ja
rcll
xchg
mov
mov
loopne
mov
popa
js
je
insb
js
pop
dec
sub
lock
insb
scas
add
out
das
aaa
cmp
subl
pop
and
mov
notl
int
push
rolb
and
cmp
pop
jno
cmovs
xor
sub
gs
and
adc
rolb
xchg
pop
xchg
loop
pop
je
fwait
jecxz
add
xlat
imul
loop
push
pop
into
push
push
inc
lret
das
adc
ror
rcrl
fnsetpm(287
jbe
jp
inc
mov
pop
sti
xchg
xchg
jns
test
ja
jge
push
or
stos
adc
xchg
dec
xor
outsb
jmp
popa
push
or
mov
jecxz
outsb
jmp
jno
inc
mov
arpl
test
lds
inc
and
push
sub
nop
std
pusha
mov
lock
hlt
mov
jl
stos
adc
movsb
nop
cld
mov
hlt
cmc
jmp
rcl
popa
mov
js
push
mov
mov
pusha
add
jns
mov
insb
xchg
and
lds
pop
push
mov
dec
inc
cs
rcl
mov
arpl
sub
insl
adc
mov
cld
and
lret
or
notb
jbe
mov
mov
xor
test
movsb
cli
push
and
popf
mov
lret
sahf
xchg
scas
lds
sbb
pushf
sbb
sbb
cwtl
fdivs
ret
scas
das
pop
shll
mov
mov
adc
dec
push
add
pushf
mov
pop
push
inc
std
push
leave
mov
daa
ret
enter
adc
inc
ss
mov
jo
in
and
in
cmp
movsl
xchg
jne
or
push
test
loopne
inc
push
leave
jl
ja
rolb
adc
jns
scas
fcoms
test
ds
pop
out
pop
jge
outsl
das
sbb
sbb
ljmp
das
sub
cltd
clc
jmp
jb
push
popf
and
cli
lods
clc
xor
test
or
mov
mov
pop
sub
add
lods
pop
mov
adc
pop
mov
push
inc
arpl
notb
iret
cmp
fwait
jp
xchg
das
cmpsl
out
incb
repnz
cmp
fistpl
ja
dec
test
xor
fcmove
cwtl
push
mov
rcr
push
fnstsw
pop
cmp
dec
inc
pop
jne
fcmovbe
pop
mov
lods
push
push
shll
dec
push
jmp
cmp
inc
sti
repnz
pop
add
aas
xchg
inc
mov
rcrl
loope
and
fcomps
pushf
sub
iret
addr16
pop
rorb
fs
sbb
inc
and
add
movsb
cmc
js
mov
nop
popf
push
sub
fdivl
pop
or
sbb
in
add
pop
push
pop
push
nop
and
or
aad
push
xlat
sbb
mov
push
add
mov
pop
cld
mov
or
pop
jg
push
hlt
and
cmp
push
out
stos
cwtl
iret
pop
enter
sub
dec
fldenv
pop
cmpb
test
outsl
sti
sahf
dec
sarl
cld
rcll
sub
fiadds
inc
xlat
aam
and
cmp
or
push
cmpsl
xchg
mov
pop
jg
inc
in
mov
insl
mov
push
xchg
mov
push
pop
push
mov
in
xchg
dec
dec
aaa
cmc
jl
mov
shl
insb
addl
xor
jne
sub
cltd
cmp
mov
leave
test
mov
popf
mov
int3
addr16
or
cs
in
cmp
enter
xchg
adc
jmp
pop
lds
add
cwtl
pop
adc
in
xlat
loop
push
and
cmc
rcll
hlt
push
test
mov
push
push
les
cltd
lret
hlt
xchg
test
ljmp
cmc
mov
mov
ret
sbb
daa
cmp
push
xor
mov
les
jmp
inc
fxch
xor
mov
test
mov
int
mov
pop
jle,pt
pop
lods
inc
lods
inc
sbb
je
mov
xchg
mov
xchg
jecxz
jbe
sbb
in
shll
jmp
ficoml
je
addr16
adc
in
pusha
xor
cmpsl
imul
jo
pusha
xchg
cltd
pop
xor
cmp
and
mov
xor
inc
adc
sbb
repz
push
fnsetpm(287
out
call
movsl
int3
addl
cmp
inc
int
cltd
pushf
aam
jb
dec
xor
mov
pop
or
or
dec
cmp
loope,pt
and
ja
push
arpl
mov
pushf
fcmovne
mov
dec
sub
adc
iret
and
push
or
cwtl
faddp
arpl
ljmp
pop
push
or
push
mov
xchg
xchg
out
xor
subb
dec
aaa
fldl
cmp
dec
test
pop
push
int
cmp
xor
xor
mov
cmpsb
lcall
movsl
mov
pushl
pop
xchg
and
xchg
sahf
pop
cld
dec
lcall
jp
and
insb
shll
xchg
out
pop
sbb
jle
inc
data16
cmp
adc
or
push
scas
pop
xchg
ret
jecxz
lods
jnp
bound
std
xor
jno
ja
or
fdivrl
inc
pushf
add
sbb
gs
or
in
jbe
mov
fists
gs
and
push
cmc
scas
and
dec
add
push
fidivl
xchg
fnstsw
inc
testb
push
js
popf
jg
xchg
dec
in
fs
cmp
insb
cmpsb
push
mov
cmpsb
lea
shlb
pop
and
loop
stos
insl
xchg
mov
ftst
push
mov
and
jno
clc
sbb
xchg
jnp,pt
jle
push
pop
lcall
icebp
div
lds
test
pop
jge
fiaddl
dec
fdivr
or
cltd
fldlg2
addr16
jp
pop
mov
xchg
cltd
cmp
arpl
adc
enter
cmp
jae
pop
pop
pushw
dec
inc
or
dec
pop
les
and
sub
pop
dec
add
inc
loopne
mov
push
enter
shl
ret
dec
adc
stos
dec
adc
rcll
add
jno
nop
xlat
jmp
ss
adc
add
aam
push
push
dec
hlt
repz
push
lret
push
sbb
es
inc
outsb
lret
in
xor
mov
dec
aam
or
mov
repnz
xchg
pop
ljmp
lcall
cli
lods
insl
jne
inc
and
jo
dec
mov
pop
mov
xchg
adc
cmp
into
roll
hlt
ss
jbe
sarb
adc
mov
cmpsl
jecxz
add
adc
add
inc
and
xor
jne
out
xchg
mov
sub
outsb
add
aad
inc
jo
xor
mov
mov
xchg
pop
fdivrs
imul
cmp
das
dec
scas
or
adc
mov
push
ljmp
xor
orl
or
inc
ljmp
pop
mov
adc
lahf
xchg
es
bnd
dec
cmpb
stos
ljmp
mov
xor
pop
sub
jmp
movsb
test
xor
fsubrs
fmull
out
pop
add
xor
clc
dec
cli
push
lret
repz
xchg
imul
repz
mov
sub
pop
adc
imul
cwtl
push
mov
mov
inc
cwtl
sub
stos
inc
movsl
lret
pop
pop
imulb
push
ret
insl
repnz
mov
pop
mov
sub
popf
sarl
rcrb
rorl
inc
flds
out
push
jno
adc
mov
push
jae,pt
cmpsl
shl
adc
xor
cwtl
xchg
lahf
ja
popf
shrb
loop
rcrb
popa
push
and
and
push
sbb
jge
xor
xor
out
mov
add
xchg
fcompl
std
mov
test
cmpsl
test
leave
mov
fs
inc
rol
pop
pop
fisttpl
xor
jmp
andb
das
pop
xor
dec
pop
or
push
adc
sub
cli
aam
inc
pop
inc
xchg
sub
mov
and
fldenv
mov
mov
adc
push
popf
push
or
push
stos
enter
jmp
or
or
mov
xchg
cltd
lods
mov
mov
imul
cmpsl
dec
sbb
daa
sub
imul
ljmp
push
sbb
cli
and
push
inc
ret
arpl
sarl
jno
cmc
js
popa
nop
sbb
mov
rcll
rorl
out
inc
leave
cld
sub
add
xchg
jns
adc
stos
sbb
xor
mov
sahf
mov
addr16
arpl
xchg
fmuls
test
add
mov
pop
cmpsl
mov
lea
dec
sarb
mov
testl
inc
enter
orb
test
push
xlat
popa
inc
rclb
test
cmc
mov
std
mov
push
bound
cmp
sub
xor
in
mov
inc
xchg
sub
mov
add
insl
sbb
loopne
test
or
fucomip
push
push
sarl
sub
sbb
mov
xchg
stos
loope
jmp
mov
data16
pusha
sub
xchg
mov
bound
adc
jnp
int3
adc
addl
mov
lret
push
pop
stos
cli
jge
or
add
pop
and
cmc
mov
lock
sub
jl
mov
subl
pop
mov
mov
push
xchg
cli
cmp
cmp
mov
xchg
inc
lods
out
inc
nop
push
ljmp
jecxz
xor
lds
sti
aas
lods
mov
dec
push
jmp
icebp
fisttpl
fimull
xor
fdivs
sbb
fadds
arpl
out
mov
pop
add
xchg
mov
pop
mov
pop
cmp
or
outsb
and
mov
cltd
xor
enter
or
jo
les
add
jns
cmp
pushf
cli
scas
or
sub
push
cmp
mov
in
fadds
arpl
jmp
sti
rcll
out
xor
inc
push
repz
lahf
lcall
mov
inc
dec
imul
mov
inc
daa
rclb
or
sub
lret
sti
ror
ds
dec
push
or
mov
gs
mov
lahf
ficomps
add
cwtl
data16
push
enter
pop
int
leave
in
push
sub
and
xor
fisttps
mov
hlt
repnz
in
cmp
iret
cmc
ss
pop
scas
adc
movsl
out
sbbb
shll
jl
int
inc
aaa
dec
jmp
jg
jle
sti
not
outsb
sbb
pop
sub
mov
fistpl
cmp
lods
push
out
mov
xor
dec
outsb
push
mov
mov
push
daa
jge
or
ret
dec
adc
fstl
stos
rorl
lods
push
aas
insb
mov
sarl
xchg
adc
ds
lock
xorl
shr
mov
mov
add
sub
dec
ljmp
addr16
inc
aam
lcall
fildll
imul
das
and
das
loop
andb
cmp
mov
sbb
out
sub
lcall
add
arpl
sbb
mov
lcall
cwtl
inc
lds
and
movsl
cmp
sub
test
jg
push
sub
dec
popf
push
lret
out
inc
arpl
dec
jle
jns
cs
cld
sbb
mov
push
ja
adc
stc
out
add
shlb
inc
ret
outsb
inc
push
stos
stos
jg
and
je
pop
push
jmp
inc
in
pusha
mov
addr16
lret
add
xchg
outsl
push
dec
fsubs
cmp
add
loop
in
sarl
test
pop
push
mov
movsl
or
shll
orb
fdivrl
daa
mov
scas
push
xchg
mov
mov
mov
push
ret
mov
mov
adc
inc
aaa
mull
sbb
leave
cmpsl
jge
jns
dec
mov
mov
mov
ja
push
or
imul
hlt
jo
sub
and
and
cmp
dec
je
sbb
std
insb
dec
inc
jns
mov
dec
xor
mov
sub
push
mov
out
call
and
sub
leave
mov
mov
shr
xlat
js
push
sbb
push
ja
inc
add
push
stos
push
sarl
dec
lahf
push
xchg
packsswb
dec
jbe
xor
jno
dec
jmp
adc
mov
fsub
pushf
fpatan
nop
pop
xchg
push
fcomp
dec
sub
xchg
sbb
fs
sub
pop
mov
pop
sub
adc
mov
lahf
popa
mov
test
test
inc
push
jl
pop
sbb
cli
jl
fidivl
hlt
dec
inc
sbb
adc
push
movsb
mov
ret
das
push
leave
mov
dec
or
cli
cmpsl
pushf
ss
cltd
sbb
pushf
xor
mulb
mov
push
gs
pop
xor
pushf
lds
or
jns
push
ret
scas
adc
mov
mov
rorb
dec
add
xlat
cs
test
outsl
sub
and
cwtl
cmp
pop
mov
mov
xchg
lock
mov
aaa
test
mov
pop
cli
in
ret
adc
imul
dec
or
pop
aaa
fidivrs
mov
xchg
mov
mov
ds
sti
dec
push
lea
mov
xchg
shll
lahf
or
mov
lahf
and
cmp
mov
ja
mov
adc
lret
test
cmp
outsb
adc
jae
add
sbb
in
add
hlt
jns
mov
scas
movsb
cmp
test
pop
mov
cmpsl
enter
shll
out
rcrl
jae
push
jne
testl
push
push
loope
pop
dec
lea
test
mov
sub
pop
xchg
ljmp
fisttps
cs
pop
dec
popf
imul
add
and
cmpsb
xchg
xor
into
test
cmp
sahf
ja
sbbl
cmp
mov
in
nop
lret
negl
int
loop
in
xchg
lret
add
inc
xor
lret
repnz
data16
push
sub
inc
cwtl
add
push
xchg
aaa
lahf
imul
cmp
xlat
mov
sub
jbe
lods
sbb
ds
pop
adc
mov
jp
xor
int3
mov
mov
inc
or
out
pop
lock
fld
mov
adc
movsl
ss
jns
hlt
xchg
adc
arpl
cli
xlat
leave
jae
repz
outsl
push
sbb
mov
fcoml
daa
add
add
adc
test
fsubl
or
xchg
and
push
insb
arpl
das
jae
pushf
cmpsl
jmp
cld
pop
push
sbb
aad
js
std
in
aas
dec
insb
stos
xor
or
mov
outsl
stc
lock
test
fwait
cmpsl
loope
cmc
divb
icebp
sbb
and
rclb
add
aaa
mov
repnz
call
in
and
push
jecxz
adc
andb
lods
lahf
test
pusha
loopne
mov
jo
pop
adc
iret
dec
mov
jbe,pt
and
cmc
mov
cvtps2pd
das
les
scas
mov
in
add
icebp
in
and
testl
jmp
jp
aas
cmp
sub
mov
enter
lcall
xor
mov
adc
neg
sub
loop
and
je
mov
sarb
sub
add
bound
xchg
fisttps
sti
and
mov
and
shlb
jne
xor
sub
loop
and
and
lods
bound
xchg
fdivs
add
pop
pusha
int
dec
in
xor
loopne
xchg
jne
popa
pop
cmc
or
outsl
or
xchg
testb
cltd
in
mov
repnz
addb
sub
inc
or
cmp
dec
lahf
add
pop
push
ljmp
pop
mov
imul
test
push
and
clc
dec
mov
pop
push
or
xor
or
mov
inc
pop
std
xor
sbbl
call
das
sahf
cmp
push
js
notb
pop
notb
cmp
sarb
pop
ja
cmp
mov
ja
xor
jl
xchg
add
inc
js
shrl
outsl
test
and
loope
mov
faddl
iret
clc
jle
pop
in
sti
mov
in
cmp
jno
stos
mull
lods
inc
sbb
cmp
ja
add
mov
mov
jl
loop
imul
shl
xchg
xchg
sbb
fdivr
push
sbbb
cmpsb
fs
adc
movb
push
add
les
cmpsb
xchg
jge
xchg
into
adc
sti
aad
jno
out
jmp
imul
inc
sbb
mov
popa
xor
daa
and
xchg
mov
adc
outsb
xor
mov
ja
push
xor
adc
lret
push
imulb
cmpsl
outsl
out
and
insl
sbb
or
or
dec
push
shl
incb
mov
idivb
sbb
jge
pop
sbb
testl
fwait
inc
outsl
push
movsl
dec
daa
sub
lods
push
and
mull
rcr
in
sarb
cmp
push
ret
and
test
push
sub
std
mov
imull
stc
or
push
je
sbb
cmp
mov
nop
test
das
shrb
mov
mov
shl
push
mov
fmull
adc
mov
loope
push
push
or
out
leave
in
pop
push
sbb
pusha
lock
fdivrl
xor
popa
cltd
adc
cmp
pop
cmp
shl
stc
out
dec
enter
or
sub
fs
push
clc
repnz
or
dec
or
push
das
int3
sbb
xor
add
mov
scas
add
call
xor
push
xchg
pop
jb
cmp
xchg
dec
add
std
outsb
cmp
dec
pusha
push
js
xchg
sbb
rcrb
movsb
jl
push
push
lock
pop
hlt
and
push
repz
mov
nop
and
outsb
test
jle
cmpsb
or
xor
and
sbbb
fadds
dec
push
add
fwait
lods
andl
ffreep
gs
insb
aam
in
mov
les
dec
addr16
out
in
jecxz
adcl
imul
mov
leave
aam
shlb
nop
lods
inc
stos
imul
stc
ffree
test
ds
scas
sbb
das
popl
jp
and
cmpsl
jle
jno
jg
add
xchg
dec
mov
adc
aas
clc
cmp
xor
sub
inc
les
mov
out
lcall
lahf
daa
pusha
shlb
add
rcl
cmp
inc
iret
test
fists
add
pop
sub
aas
sbb
inc
aad
add
into
popf
imul
or
fadd
sub
inc
int
cmc
jp
mov
push
insb
leave
push
add
sbb
mov
cmp
cs
sbbb
das
in
in
mov
mov
sbb
xchg
cwtl
and
bound
ja,pt
gs
sub
cmp
call
addl
adc
mov
pop
sub
sbb
push
jle
ljmp
inc
mov
mov
aas
lea
pop
cwtl
pushw
cmp
cli
mov
push
push
out
cmp
stos
mov
ss
repz
cmpsl
adc
add
mov
or
sub
and
enter
sub
mov
adc
es
mov
adc
sub
sbb
mov
stos
jp
or
es
mov
mov
int3
daa
xchg
mov
loop
mov
cmp
jo
gs
add
and
mov
add
sbb
lods
sti
sub
mov
pop
pop
pop
or
mov
push
aaa
lret
pop
mov
dec
sar
iret
nop
mov
lods
lds
stos
mov
cmp
mov
xlat
jnp
sbb
lock
popa
inc
push
fnsave
je
mov
aam
or
dec
sbb
adc
jl
je
in
mov
addr16
sti
jmp
les
cmp
or
cmp
sub
inc
test
xchg
cmp
push
mov
jmp
push
lock
adc
movsb
cmp
and
pop
fidivrs
dec
test
out
pop
xor
jnp
cltd
scas
mov
scas
mov
cmp
jb
cld
sub
call
pop
jp
lret
das
orl
mov
dec
push
sbb
enter
add
or
mov
sub
or
cli
loopne
dec
mov
sarb
push
pop
add
fisubrl
jp
stos
add
cli
fcomps
push
inc
sub
nop
enter
das
adc
std
imul
lcall
xor
outsb
mov
cmp
xor
inc
or
idivb
jns
mov
imul
sub
lahf
mov
mov
je
fnsave
xchg
sub
xchg
out
cmp
pushf
inc
inc
cmpsl
iret
repz
rorb
jno
fstl
fisttpl
pop
mov
cld
mov
add
lret
sbb
mov
addr16
repz
lahf
mov
cmp
xchg
or
test
fldl
repnz
adc
sahf
mov
inc
inc
xor
push
mov
fs
call
jnp
cwtl
ret
mov
out
xor
js
mov
out
jnp
cwtl
jae
in
outsl
clc
inc
dec
roll
sub
mov
dec
jae
adc
add
push
outsb
mov
dec
push
adc
pop
inc
aad
sub
imul
fcoms
mov
push
fs
cmpsl
mov
and
xor
test
mov
dec
inc
xor
mov
and
and
jecxz
mov
push
adc
and
dec
mov
sbb
mov
jbe
and
or
dec
icebp
les
in
dec
sbb
loopne
pop
and
add
popa
or
sahf
rorb
nop
jmp
imul
xlat
mov
mov
loop
fwait
int3
jbe
ret
push
cli
mov
or
dec
cmpsb
scas
cmp
aaa
xor
lea
ret
xchg
add
lea
inc
xchg
outsl
xchg
dec
adc
fwait
insb
cld
push
hlt
cmp
icebp
or
stos
mov
mov
std
xor
ja
mov
ret
cmp
lock
iret
dec
icebp
sub
inc
inc
jnp
hlt
pop
mov
cli
push
xor
mov
push
ss
aas
cwtl
xchg
mov
in
in
or
sub
inc
sbb
add
xchg
fimuls
dec
jge
lahf
push
test
ret
sbb
ret
sbb
mov
pop
out
cmc
pslld
xor
or
pop
inc
add
adc
sbb
jbe
js
xchg
push
lcall
sub
mov
aam
jmp
dec
mov
xchg
insb
repz
rorb
add
push
sub
mov
adc
pop
pop
sub
clc
cmpsb
mov
push
stc
or
mov
into
jmp
clc
push
mov
aaa
jg
mov
mov
push
movsl
sbb
add
outsl
and
and
push
mov
mov
in
cltd
cs
movsl
leave
adc
popf
xchg
inc
aas
lahf
notb
jb,pn
inc
mov
lods
dec
pop
dec
popa
aaa
push
dec
fbstp
fimull
jb
cs
test
jl
or
cmp
rcll
dec
stos
add
fsubrl
sub
push
scas
pop
xor
push
lahf
push
adc
mov
mov
xchg
and
mov
loope
pop
aad
imul
js
adc
dec
xorb
mov
pop
scas
into
mov
push
mov
push
mov
stos
or
mov
cmp
pop
popa
mov
adc
push
sbb
lcall
and
xchg
clc
cs
adc
xchg
inc
xchg
out
cmc
and
stos
fmulp
and
sub
mov
cltd
lret
sub
iret
pop
ficompl
xchg
jnp
lock
sahf
push
gs
das
mov
lret
mov
loope
push
mov
rolb
repnz
pop
jecxz
movsb
jb
int3
and
sub
or
push
in
push
mov
insb
out
fsubl
stos
sahf
push
xchg
and
lahf
xchg
mov
cmpsl
dec
mov
push
por
fisubs
dec
arpl
jg
xchg
jne
les
inc
mov
dec
or
dec
bound
lea
mov
mov
and
jge
jo
testl
repz
pop
jns
xchg
test
nop
mov
loope
adc
mov
lret
mov
lcall
cmp
scas
push
data16
add
cmpsl
loopne
adc
ror
test
pop
push
jno
mov
pop
aaa
movsb
loope
jl
mov
mov
cmc
fcomip
or
ror
or
subb
and
jmp
cltd
adc
ret
lcall
xor
sbb
rcll
jae
xchg
daa
xor
sahf
aad
stc
cmp
cmpsb
lret
and
lret
ds
xchg
stos
enter
in
out
data16
fldl
push
loope
sub
ss
mov
cmp
insb
sbb
insl
push
xor
clc
dec
inc
lods
jl
addr16
or
fcoml
aad
push
aas
xchg
cmpb
ret
xchg
jp
nop
cmp
sub
push
addr16
xor
and
cmc
lret
push
add
cmp
push
sub
test
dec
shlb
mov
test
test
fcmovnu
repz
shr
jae
enter
adc
imul
push
in
icebp
popl
outsl
aas
push
jo
daa
mov
pop
ja
ja
cmp
das
das
clc
dec
ds
outsl
cmp
mull
aaa
leave
aas
and
sub
inc
out
push
in
ds
into
jno
mov
sbb
idivb
iret
lods
lcall
lahf
inc
dec
popf
aas
push
sbb
push
add
ja
lcall
out
sbb
nop
movsb
jbe
add
xchg
dec
pusha
xchg
aas
aas
or
inc
aad
int
xchg
cmpsb
and
test
imulb
jnp
lods
int3
adc
mov
pop
es
and
jae
test
sbb
sahf
add
jb
popf
xchg
cmp
pop
or
cmp
dec
mov
lret
dec
in
in
xor
ret
movsl
and
xor
clc
xor
jmp
cwtl
jp
pop
push
imul
out
jg
pop
lahf
dec
push
sbb
dec
jne
mov
inc
ror
cmc
dec
iret
roll
jle
fidivl
hlt
aaa
pop
imul
sub
dec
cld
sbb
lds
mov
adc
jmp
mov
ja
sbb
cmc
movl
jo
adc
mov
addr16
add
test
push
out
movsb
xor
mov
pop
test
jecxz
cmp
pop
rolb
mov
cltd
push
dec
sub
andl
ret
inc
aam
nop
jl
arpl
push
in
cs
ss
xchg
cld
das
shl
and
aad
xor
pop
sub
aad
data16
push
mov
add
jns
shrl
sub
arpl
mov
fisttps
pushf
test
add
push
xchg
mov
fildl
ljmp
loop
add
xchg
repz
pop
push
lock
out
inc
std
push
ljmp
push
xor
mov
push
stc
leave
and
imul
mov
gs
cltd
push
addl
sar
mov
ds
mov
sahf
jmp
jp
sub
mov
push
dec
lret
in
or
lods
pop
movsb
es
sbb
ror
xchg
mov
frstor
jge
mov
push
push
sbb
mov
mov
enter
arpl
push
idivl
ds
sbb
lock
dec
out
add
test
push
xchg
push
xor
push
push
jle
scas
add
jmp
rcl
push
sub
mov
jge
enter
dec
lods
lcall
push
sarb
in
test
xlat
sarb
xchg
das
jne
mov
fidivs
adc
mov
or
add
sub
fnstcw
push
jp
adc
push
xchg
mov
enter
sub
or
gs
and
pmulhuw
jno
ss
lds
mov
push
mov
popf
ret
int3
pop
dec
lret
mov
jmp
lcall
fists
jae
lods
dec
pusha
ss
aad
push
jae
sarl
jno
into
jle
in
mov
imulb
cmpsb
ret
jo
dec
scas
pop
cmp
in
fwait
xor
scas
repnz
push
ret
testl
jle
out
inc
pop
lds
jnp
iret
pop
xchg
out
out
sbb
xor
inc
inc
add
xchg
xchg
testb
xchg
cwtl
and
sahf
xchg
stos
imul
ret
clc
pop
push
nop
pop
or
subb
ss
jbe
cmpsl
stc
mov
mov
pop
jmp
lods
xor
dec
fs
dec
mov
cmp
je
into
add
pusha
dec
ficomps
orb
cli
jno
cld
pusha
sub
aad
aam
repz
xorl
ret
inc
cltd
ds
push
shll
mov
in
subb
es
movsb
mov
ja
jae
insl
jmp
push
ror
mov
popf
mov
lret
mov
xor
jle
gs
ret
dec
ja
add
or
cmp
stos
and
xor
fnstenv
negb
aas
mov
insb
pushf
pop
rolb
addr16
imul
or
mov
xor
hlt
rcll
cmpsb
adc
add
xchg
movsb
pop
hlt
add
int
daa
sub
negb
stos
les
mov
sbbb
repz
sahf
test
mov
out
dec
mov
test
pop
in
xchg
ds
int3
or
test
dec
aas
inc
sub
stos
jg
bound
dec
jmp
fwait
cmpsb
xchg
xchg
sbb
push
jnp
push
iret
stc
or
add
pop
adcb
ret
jo
dec
adc
sbbl
push
pop
clc
das
push
cli
bound
pop
pop
cmp
push
or
out
xorl
repnz
mov
jl
lcall
dec
jns
data16
lods
lock
repz
jle
push
inc
aad
mov
inc
sbb
sub
fs
xchg
cs
ljmp
dec
push
push
in
dec
adc
xchg
xchg
xchg
cld
shl
sub
pop
sub
fwait
cli
fdivrp
push
in
sub
nop
test
mov
dec
lcall
int3
incb
aad
dec
jp
adc
xchg
shrb
sbb
shlb
test
pop
dec
xchg
imul
scas
fs
inc
enter
movsl
je
mov
xchg
adc
mov
movsb
andl
push
mov
mov
pop
xor
iret
sbb
adcb
bound
lahf
in
ljmp
aam
outsb
mov
xchg
xor
push
push
leave
push
jbe
pusha
mov
adc
sarl
mov
es
orl
cmp
pop
or
lcall
jne
lds
cmpsl
stos
mov
sub
xor
mov
outsb
out
imul
fdivrs
ret
xor
in
faddl
in
out
popf
mov
cmp
outsb
add
or
mov
js
call
lahf
rolb
mov
loopne
mov
cmp
imul
popa
loope
mov
push
lcall
out
fldt
nopl
mov
popf
lret
dec
nop
adc
cmp
and
and
xchg
adc
loope
addl
inc
mov
imull
jae
rcll
push
and
fsubrs
daa
xchg
push
inc
inc
fs
xor
or
dec
rcll
mov
insl
adc
sbb
leave
xlat
mov
cmp
icebp
insl
adc
fimuls
fwait
and
push
and
mov
imul
sarb
and
pop
test
aaa
ljmp
mov
hlt
lret
cmpl
dec
lahf
xor
ss
pop
leave
arpl
sti
ljmp
popa
adc
xorb
dec
pop
cmp
ret
sti
imul
push
gs
std
loope
mov
adc
fstpt
mov
cmpsl
outsl
xchg
xchg
mov
pusha
and
lock
jae
mov
ja
and
std
insb
jae
cmp
outsb
pop
sbb
push
jle
outsl
pusha
loopne
mov
into
and
mov
push
rclb
es
sub
test
jbe
adc
pop
cmp
xor
out
jne
xchg
dec
out
fistpll
sti
add
adc
xor
push
pushf
repz
push
mov
data16
in
test
jecxz
std
dec
xchg
int
mov
lahf
dec
lret
inc
mov
xchg
lods
xor
adc
mov
lret
fdivl
add
rcrl
ret
cmp
xor
aas
adc
out
mov
jno
sub
lock
mov
mov
inc
je
lods
iret
sub
inc
adc
gs
stos
dec
push
js
push
adc
jg
imul
rorl
nop
sbb
cmpsb
jmp
aaa
ret
xchg
inc
fldcw
dec
xchg
mov
jmp
stos
push
push
pop
mov
subb
push
jmp
cwtl
sarl
push
mov
adcl
int3
leave
xchg
das
inc
lods
jg
cmp
fcompl
push
imul
cmp
xor
push
test
add
and
cmp
mov
addr16
test
or
out
mov
pop
jne
add
filds
aad
mov
inc
pop
add
out
popf
xchg
mov
push
and
test
pop
arpl
jp
fistl
and
xor
gs
movsl
idivb
int
sbbl
lods
mov
sbb
je
cltd
or
std
test
sub
fwait
adcl
xchg
leave
and
inc
leave
add
lods
push
out
sahf
jp
stos
push
jns
subl
xchg
dec
nop
cld
lahf
jbe
in
cmp
jo
or
lcall
xchg
repnz
sub
faddl
sub
in
cmp
testl
cmp
imul
lea
or
xchg
cmp
pop
pop
cli
loop
pop
lods
and
adc
repnz
movsb
mov
sti
push
mov
mov
icebp
test
jne
inc
adc
and
sub
mov
ss
xchg
push
lahf
fcmovb
dec
sar
and
adc
mov
xchg
cmp
push
xorb
add
aas
inc
clc
or
sahf
ss
mov
add
ljmp
cmpsl
dec
push
dec
push
pop
leave
mov
xlat
movsb
push
pop
daa
out
icebp
pop
lea
sub
cmpb
and
xchg
fld
add
jbe
lcall
sub
pop
push
aas
jge
iret
inc
enter
inc
jbe
sti
cmp
pop
jns
les
test
and
repnz
repnz
mov
xchg
and
sbb
sub
xor
sbb
mov
inc
xchg
int3
rcl
sbb
loopne
mov
fcomi
fisttpl
push
dec
sbb
test
fcmovnu
out
jne
jecxz
mov
scas
and
push
push
hlt
jno
sbb
adc
ja
jmp
inc
mov
sub
push
fcmovu
std
jo
sub
mov
mov
scas
sub
out
test
into
cli
sbb
fs
test
fmull
mov
mov
mov
dec
pop
mov
into
in
sub
cs
notb
cmc
push
or
lods
data16
push
xor
jne
imul
sub
mov
ja
add
adc
pop
cmp
jmp
sub
fistl
dec
mov
dec
mov
sub
mov
notb
out
and
inc
inc
mov
sbb
mov
out
xchg
cmp
push
mov
gs
rcll
into
pop
outsl
sub
mov
mov
movsl
in
add
sub
sahf
inc
dec
fwait
mov
mov
leave
push
adc
fmull
loopne
sbb
mov
mov
sbb
mov
push
loopne
xor
test
shlb
out
pop
call
adc
mov
movb
ret
and
out
adc
jbe
repnz
fbstp
insl
leave
lds
mov
lds
mov
dec
stc
int
cmp
cmp
call
xchg
aam
js
insl
push
pop
sahf
clc
fdivl
cmpsl
fimull
in
jl
sar
iret
mov
ret
mov
inc
fnsave
adc
pop
push
mov
jbe
in
adc
jmp
pop
sub
dec
sbb
sbb
loop
push
or
add
dec
fsubl
xor
fstpl
repnz
cmp
pusha
cmpsl
loope
jl
jne
sbb
sub
scas
pop
mov
sub
pop
clc
pop
mov
repz
pop
decb
lahf
xorl
test
xor
das
insb
xchg
bnd
icebp
popf
fistps
add
or
data16
mov
pop
or
aas
pop
xor
aas
call
add
jge
xor
adc
das
inc
popa
lock
les
jb
push
mov
inc
insl
into
negl
cmpl
dec
stos
unpcklps
mov
dec
in
lea
je
cltd
sarb
xchg
psrlq
lret
cs
iret
cli
mov
test
sbb
sub
mov
lods
les
call
xor
jg
lea
mov
inc
mov
in
push
pushf
std
rorl
inc
sbb
adc
add
jnp
addr16
xor
sub
mov
sti
in
pusha
fildll
pop
out
jnp
pop
ja
add
mov
cmp
jle
pushf
int3
cs
pop
fs
loopne
outsb
mov
and
jnp
jnp
aaa
add
lods
lds
xchg
sub
mov
and
jecxz
or
pusha
lret
aam
mov
xchg
test
popa
icebp
in
or
pop
pop
ljmp
or
das
mov
out
in
and
sbb
je
pop
mov
pop
jle
aam
sub
mov
neg
test
adc
push
pop
out
or
andnps
lea
sub
js
xchg
and
icebp
pop
mov
lcall
and
fstl
ljmp
jmp
push
aad
stos
dec
addr16
push
mov
pop
test
sti
mov
sbb
imul
lds
jp
fistps
push
xchg
aas
lods
pop
mov
lea
aas
jnp
icebp
movsl
dec
scas
inc
xor
scas
flds
sbb
mov
mov
fyl2x
leave
lret
ja
lahf
lock
cwtl
insl
imul
mov
mov
sbb
pop
mov
pop
insl
or
int
lahf
ret
fdiv
jle
out
jge
xorl
push
push
test
mov
ljmp
call
int3
scas
or
call
mov
xor
cmp
xor
mov
loope
xchg
add
pop
enter
cmp
out
and
lea
fdiv
loope
icebp
aaa
push
loopne
sti
cmc
lcall
mov
sahf
cmc
pop
pop
repz
lock
dec
mov
enter
fisubrl
lret
sbb
mov
and
enter
dec
fists
imul
xchg
leave
in
gs
aas
pop
lods
mov
insl
enter
lods
pop
clc
stos
xlat
lea
jnp
cmp
rcr
fsubrl
pop
fwait
outsl
incl
aad
add
pusha
sbb
xlat
mov
push
das
icebp
movsb
push
in
les
push
lods
mov
mov
fcomip
inc
xor
in
inc
out
pop
dec
sub
or
testb
outsb
lcall
jp
in
or
inc
xor
out
in
add
adc
fcmove
push
cmp
fsub
aad
mov
repnz
movsb
das
pop
sub
and
push
ret
cltd
stos
lret
je
pop
add
out
lret
cmp
in
mov
dec
mov
push
aam
sub
cmpsl
pusha
add
int
enter
or
cmp
lock
nop
nop
js
push
xor
mov
mov
stos
inc
dec
in
mov
stc
shlb
sbb
add
cmp
nop
mov
sar
pop
lods
sub
inc
xlat
sub
xor
fdiv
scas
idiv
cmp
pop
and
add
jns
xor
jbe
and
fiaddl
dec
daa
js
adc
rolb
aaa
call
in
and
daa
or
adc
shl
hlt
out
in
mov
jmp
je
scas
inc
mov
mov
sub
jle
repnz
add
pop
stos
lods
pop
aaa
aad
mov
enter
push
cmp
adc
jb
loop
sbb
or
sub
stos
movsb
in
dec
mov
inc
sarl
jl
jmp
jne
add
out
addr16
enter
stc
lods
push
into
enter
cmp
rcrb
and
cmpsb
lret
pop
mov
ficompl
in
subb
mov
je
mov
fimuls
mov
stos
mov
mov
ret
insb
xor
push
or
ret
add
shlb
aad
in
push
in
or
cmpsl
xor
jo
push
sbb
fwait
lods
ja
jne
mov
mov
es
sub
test
jo
shrl
jge
ljmp
imul
movsb
aam
dec
jns
decl
jno
test
sub
aam
inc
dec
adc
bound
push
test
bound
aam
dec
mov
mov
inc
lods
sahf
testb
rcll
add
jmp
nop
rorl
add
sub
ficomps
lods
or
mov
push
cwtl
test
cmpsb
daa
xchg
popf
gs
sbb
enter
mov
aad
mov
jae
jecxz
sar
insb
das
or
lahf
mov
mov
push
stc
mov
loopne
lret
mov
dec
aad
or
dec
popa
jecxz
jg
repz
mov
movsb
xlat
jmp
and
icebp
add
mov
scas
mov
movsb
loope
insl
fimull
push
mov
sub
scas
adc
xchg
cmp
shrb
mov
sbb
pop
pop
imul
mov
mov
xor
mov
mov
inc
addr16
inc
movsb
push
out
in
ss
insb
inc
or
or
xor
sarb
jle
jb
xchg
sbb
cmpb
pop
test
cld
push
fwait
out
adc
out
jae
mov
sbb
lds
xorb
or
xor
stos
lds
jns
push
or
ljmp
lods
arpl
jns
cli
aas
aad
jg
ja
ret
xchg
je
popa
in
push
sbb
test
mov
jl
jbe
lods
pusha
adc
mov
mov
sbb
pop
sbb
pop
dec
imull
shr
cmp
adc
adc
mov
mov
enter
cmp
xchg
call
jo
pop
clc
push
int3
lock
mov
xor
jns
sbb
movsl
mov
add
mov
push
dec
aam
add
inc
js
bound
clc
cmpsb
sub
xor
fdiv
mov
lods
mov
std
orb
int
frstor
lods
mov
sub
inc
xchg
lret
ret
test
jecxz
inc
xchg
addb
je
stos
test
adc
xchg
fisttpll
mov
pop
ljmp
xor
rol
out
xchg
sbb
bound
and
aaa
mov
arpl
push
push
stos
fisttps
mov
pop
fs
pop
mov
jg
sbb
sbb
ss
imul
push
or
repnz
bound
in
sbb
pop
lock
jno
fidivs
mov
fnstenv
push
outsl
imul
push
add
and
pushf
xchg
inc
ja
jle
mov
mov
xchg
adc
mov
xor
clc
and
pop
mov
sti
mov
sub
mov
or
jae
adc
in
dec
pop
xor
sbb
lahf
pop
mov
adc
mov
loopne
xchg
pop
xlat
xchg
add
sbb
inc
test
je
sbbb
sbb
in
sbb
jbe
cli
insb
bound
aaa
mov
xor
leave
js
push
das
cmp
dec
jp
shrl
test
add
cmp
popa
shr
loope
popf
inc
adc
test
into
aam
cli
jne
mov
sbb
inc
test
hlt
sub
js
cld
sub
jnp
test
movsb
lahf
cmp
lea
loope
dec
lock
mov
out
pushf
in
test
push
in
repnz
mov
cmp
push
test
in
lret
int3
or
sub
pop
cmc
add
arpl
mov
dec
mov
xor
cs
sbb
xor
mov
shlb
xchg
adc
xchg
dec
pop
xchg
int
cmp
jp
sub
mov
sbb
sbb
sbb
cmpsl
sbb
push
mov
ss
cld
mov
xchg
pushf
xchg
sbb
dec
mov
dec
stos
scas
mov
or
call
mov
orl
cwtl
mov
into
lods
mov
sti
es
rcrb
imull
mov
fists
push
push
dec
aas
nop
lcall
xchg
jae
mov
fildll
or
push
aaa
stos
lock
lods
cmp
clc
cwtl
push
pop
ret
aad
mov
mov
das
dec
je
sub
push
inc
xchg
mov
push
pop
pop
stos
push
fwait
mov
popf
adc
out
test
jno
cmp
jle
or
rcrb
rep
fxch
popa
aad
in
inc
adc
repz
shlb
inc
popa
pop
mov
scas
addr16
cmpb
push
scas
jecxz
pop
push
nop
mov
lods
xlat
mov
es
fs
mov
aad
sarl
and
pop
in
or
icebp
xor
sub
cmp
xchg
sbb
sbb
pop
push
daa
addr16
push
jp
fistpll
fnstenv
enter
cli
cld
adc
cmp
mov
scas
aaa
fcmovnbe
int
orl
aam
icebp
fwait
pusha
mov
xchg
mov
jo
outsl
test
xchg
repz
cmp
iret
fs
add
jbe
ret
xor
aaa
rcr
js
enter
popa
add
push
stc
arpl
pop
dec
dec
lock
xchg
loop
cwtl
rolb
in
pop
push
negb
imul
lret
mov
lcall
imul
lret
xchg
jg
add
jb
movsl
sub
je
aas
mov
popa
leave
push
outsb
cmpsb
adc
sub
cwtl
enter
fimull
lods
mov
lahf
repz
stos
jp
dec
in
in
cltd
cs
fisttpll
scas
stos
sub
push
jp
adc
out
add
pusha
fwait
and
inc
gs
rol
scas
idivl
rolb
push
dec
push
stc
adc
sbb
mov
jmp
mov
popa
xchg
aam
jecxz
out
fbstp
mov
cmc
sbb
hlt
jmp
sbb
pop
outsb
or
jne
insl
insb
in
add
mov
and
adc
push
popa
outsl
sbb
xchg
cmp
cmpb
adc
inc
cmc
or
or
or
sbb
sbb
movsb
into
add
adc
pop
adc
adc
mov
in
mov
int
movsl
xchg
cmpl
push
lock
bound
dec
shlb
jae
icebp
jp
xchg
xchg
mov
stc
repnz
stos
mov
pop
loop
ror
cli
mov
jle
sbb
clc
into
clc
out
sbb
orb
xor
ss
into
jge
push
dec
aas
sub
ss
push
add
aaa
aaa
aas
fsubrp
pop
pop
dec
outsb
test
mov
inc
lcall
mov
sbb
inc
lahf
ss
push
pop
mov
mov
cmp
cmpsb
xchg
mov
testb
push
jg
fstpt
in
pop
mov
pop
inc
adc
mov
fs
jno
in
inc
test
push
fdiv
out
jns
mov
test
out
mov
inc
cld
outsl
lea
sub
and
enter
cltd
addr16
sbb
rcl
inc
jo
push
fdiv
jmp
dec
leave
mov
adc
pushf
in
jmp
mov
sarb
fstl
jae
mov
mov
fcoms
addr16
js
loop
adc
sub
cmp
sub
lret
jmp
loope
ret
lods
add
dec
loop
fistps
imul
inc
mov
scas
cld
dec
mov
lea
lods
comiss
test
ja
jecxz
mov
jno
sbb
or
xor
jae
sub
mov
xor
sbb
xchg
jnp
cwtl
push
insb
mov
pop
dec
mov
fwait
pop
add
insb
dec
mov
or
cmp
or
sahf
aas
nop
cltd
cmc
jb
insb
add
in
and
mov
imul
insl
mov
mov
mov
es
pop
cmp
xor
and
sbb
jl
ja
ficoml
je
mov
pop
pusha
pop
push
fdivl
iret
xchg
pushf
or
or
push
ja
inc
into
loop
mov
cmpsl
ret
push
and
xor
mov
jne
xor
xchg
pop
pop
mov
or
and
in
pop
add
jge
imul
out
stos
inc
pop
or
xor
aas
and
push
shrb
jae
add
xorb
out
cmp
andl
cltd
sbb
fstl
push
mov
push
aas
popa
call
lock
add
push
mov
mov
cmp
fstpl
adcb
in
pop
lods
push
pop
push
jbe
push
push
xchg
andb
mov
jo
pop
dec
inc
pop
inc
and
cmp
les
jne
sbb
rclb
aas
adc
imul
jbe
lahf
stc
add
fbld
in
mov
sbb
pusha
sbb
pop
test
es
nop
incb
dec
insl
in
cmp
cmp
out
add
mov
fisttps
imul
mov
xchg
jns
xchg
push
data16
dec
adc
mov
pop
outsl
mov
sub
stc
jl
adc
les
nop
and
das
push
sbbl
pop
add
adc
mov
mov
repz
stc
adc
xchg
mov
xlat
push
ror
dec
xchg
dec
cs
lahf
xor
jp
add
or
mov
xor
add
icebp
mov
insl
add
xchg
inc
sbb
jecxz
cmpsb
in
sbb
sub
mov
cmpsb
fdivl
in
loopne
mov
dec
or
rclb
mov
hlt
int3
int3
in
in
sbbb
enter
and
adc
notl
xchg
mov
xor
push
pop
roll
lcall
push
sarl
mov
repnz
test
mov
cwtl
scas
mov
inc
xchg
aaa
leave
pop
mov
jo
ret
xchg
push
movsl
add
out
loop
test
sbb
push
push
out
lds
xor
mov
xor
cmc
xlat
pop
test
fadds
lea
and
cmp
dec
adc
test
adc
adc
das
jb
aam
mov
or
dec
iret
jnp
pop
sbb
cltd
call
out
test
add
mov
inc
fistpll
andb
in
add
sbb
ret
push
xor
fwait
pop
addr16
iret
gs
ret
cmp
sbb
test
dec
jae
shl
repnz
adc
adc
xor
mov
lahf
call
enter
sbb
dec
aad
jl
push
sbb
xchg
pop
jbe
dec
jo
ret
xor
icebp
pop
mov
ret
sub
mov
pop
stc
xchg
jne
cmpsl
bound
jo
dec
out
icebp
pop
call
sbb
inc
sub
sub
rcrb
std
in
cmpsl
icebp
inc
xor
push
cmp
loop
pusha
ret
aaa
aas
push
pop
js
mov
sub
xchg
jnp
lock
or
xchg
das
or
inc
inc
insl
lods
repz
push
push
or
std
cli
in
into
sti
cmp
mov
jmp
or
ljmp
or
outsl
js
adc
dec
jnp
adc
sbb
mov
mov
hlt
pop
pop
mov
jl
das
and
outsb
adc
cmp
dec
and
jp
nop
aam
cmpb
scas
xchg
jne
xor
mov
mov
mov
mov
xor
jp
sub
es
addl
cmpsl
or
fwait
arpl
inc
jmp
lock
inc
cmc
les
imull
flds
dec
jb
lea
stc
jae
pop
xor
stc
stc
mov
icebp
hlt
cmp
fldt
aaa
push
inc
dec
push
mov
xchg
cmp
sub
jo
lods
xor
xchg
aaa
xchg
xchg
test
dec
push
movsl
popf
xchg
ret
or
arpl
add
xor
or
aaa
sub
pop
sub
sahf
pusha
mov
call
and
inc
iret
push
xor
push
jge
adc
inc
scas
mov
mov
xchg
outsl
sub
in
in
es
out
cmpl
divb
inc
stc
sub
lret
sub
bound
cmp
push
mov
mov
push
gs
pop
nop
popa
cli
xlat
mov
jae
pop
add
roll
sarb
stos
sub
loope,pt
lds
xlat
scas
mov
adcb
movsl
mov
mov
mov
mov
mov
pop
push
adc
std
xchg
enter
lret
push
popa
mov
mov
lcall
mov
mov
roll
inc
rcl
lret
pop
js
push
and
push
test
outsb
ret
sbb
xor
xor
pop
loopne
add
cmpsl
xorl
or
push
cs
jecxz
push
popf
or
jp
imul
in
fistpl
push
jns
mov
stc
jl
shrb
sub
sbb
ljmp
fimull
mov
loopne
enter
or
push
in
xor
mov
dec
scas
mov
in
call
pop
push
xchg
push
mov
dec
arpl
pop
fidivs
and
test
cld
lret
and
adc
jp
add
dec
lahf
jbe
xchg
mov
test
stos
repnz
inc
into
dec
loop
sub
adc
and
nop
adc
icebp
cld
fcmovnu
push
aas
repnz
loope
jbe
imul
aad
jge
inc
sbb
ds
enter
inc
push
lds
ja
rcrb
mov
push
insb
jnp
adc
fisttps
add
out
add
xor
xor
inc
lods
in
and
and
and
mov
sbb
nop
push
call
test
or
lret
sub
enter
add
hlt
jmp
ss
sbb
roll
mov
push
cmp
cmp
rorb
xchg
cli
js
push
pop
lods
addr16
imul
loopne
fcmovnbe
in
dec
pushf
int3
in
xor
int
lahf
iret
out
sti
dec
cmp
adc
mov
jo
and
iret
imul
clc
mov
jo
lret
in
xchg
or
sbb
jnp
or
and
dec
enter
ret
inc
imul
and
sbb
stc
pop
lods
or
sub
cmpsb
fdivp
adc
pop
sub
pop
jo
sbb
repnz
mov
imul
roll
sub
push
sbb
dec
pop
imul
sbb
and
loop
bound
adc
in
push
popa
shlb
sti
jecxz
and
in
inc
xlat
pop
popf
aaa
ss
stos
das
cmp
test
ret
lahf
pop
push
push
and
sbb
xor
scas
add
cli
mov
jns
gs
push
xor
js
sti
bound
mov
shll
jbe
rclb
push
jae
xchg
cmpsl
or
into
push
pop
imull
mov
jb
jmp
dec
cmp
jecxz
cld
xchg
lret
in
int3
dec
pop
test
jae
and
cld
cmpb
or
xor
dec
dec
inc
mov
push
add
insw
jb
jle
or
pop
xchg
std
xchg
stos
sbb
add
rcl
test
sbb
mov
pop
pusha
inc
jo
mov
popa
mov
cltd
stos
mov
mov
sahf
dec
lods
inc
out
xorb
imul
je
icebp
pushf
pop
mov
outsb
jg
imul
push
and
jne
cli
or
sbb
xor
jge
or
test
dec
or
lea
test
movsb
sahf
or
lock
aas
xchg
xor
dec
daa
sub
sub
add
pushf
popa
cmp
notl
lret
fwait
mov
fidivrs
dec
les
fdivrs
push
imul
mov
and
fidivrl
xor
inc
loope
imul
outsl
xchg
mov
popf
xor
fisubrl
sub
lret
std
bound
mov
rcll
sbb
dec
sub
mov
sub
aaa
mov
das
ss
fucomip
in
cmp
sbb
rcl
imul
adc
and
in
mov
aam
out
push
movsb
add
cld
sti
je
cmp
testb
int
or
mov
or
shrl
imul
push
jmp
jns
jmp
mov
lds
inc
push
loopne
lock
cs
push
and
pop
rcrb
lcall
sub
outsl
sub
ja
dec
fs
add
sub
cs
push
or
dec
nop
hlt
jo
cmc
pop
sti
enter
pop
and
or
xchg
jecxz
outsb
jl
roll
clc
fdivrl
icebp
ret
push
ja
icebp
daa
xchg
add
lock
cmp
test
or
sub
out
fldl
cli
test
loop
push
mov
xlat
xchg
lock
jbe
pop
push
mov
jns
pop
lds
sahf
sahf
cmpsb
and
pop
rclb
aad
jae
cltd
ret
push
or
adcb
inc
mov
xchg
xor
sbb
int3
mov
lods
push
data16
aam
iret
rcrb
popa
cmp
mov
xchg
jmp
mov
addr16
ret
dec
fwait
lahf
push
add
popa
shlb
push
sbb
xor
cmpsb
test
lock
inc
and
or
lcall
cmp
mov
sahf
mov
jne
jg
popa
ss
sar
punpckhdq
mov
decb
xchg
int3
lods
mov
in
pop
or
sub
subb
dec
js
mov
lret
in
out
sbb
push
cmp
xorb
aad
pop
stos
and
mov
mov
mov
cltd
push
cmp
adc
stos
dec
pop
jne
test
sbb
push
inc
pushl
add
sub
push
and
sahf
push
xlat
push
jnp
je
rolb
or
jae
pop
push
mov
adc
cld
push
movsb
inc
cli
repz
in
mov
icebp
xchg
or
ljmp
aas
inc
ja
ret
mov
sti
nop
icebp
push
lods
sub
fbstp
push
sub
dec
push
adcb
mov
adc
add
imul
pop
lds
jb
or
adc
xor
mulb
aam
cmpsl
adcb
arpl
sbb
adc
sub
pop
ret
xor
add
add
loop
fbld
sbb
inc
mov
lods
and
popa
pop
movsl
imul
lods
cmpsl
mov
pop
lcall
dec
mov
stc
xchg
roll
push
sub
jae
mov
aaa
inc
dec
jns
cmp
bound
enter
filds
and
inc
mov
cmpsb
out
adc
or
push
add
or
outsb
sbb
mov
pop
push
mov
int3
or
outsb
mov
gs
jnp
mov
and
lock
pop
xor
jge
out
push
rcrl
mov
and
stos
int
push
xchg
dec
cmp
leave
inc
and
cli
adc
sub
jge
mov
xchg
arpl
clc
fiaddl
mov
scas
mov
pop
bound
cwtl
lds
sbb
pop
and
jg
xchg
cs
push
nop
push
dec
movsb
jmp
push
sbb
subb
and
hlt
outsb
push
cmc
xchg
mov
fstpt
xchg
mov
sahf
sbb
cli
pop
mov
jle
outsl
add
fidivs
push
add
mov
and
pop
out
ss
sarb
pushf
das
push
sub
outsb
sub
add
mov
jmp
js
int3
rorb
cmpsl
mov
adc
testb
cmc
aas
or
enter
cs
dec
or
cmp
es
add
jl
or
add
aas
mov
mov
insl
jle
xor
data16
loope
enter
cmp
leave
and
mov
xchg
xorb
add
sti
mov
push
push
fst
mov
rcrl
mov
xchg
rol
xlat
loope
cmp
and
enter
xor
testb
mov
icebp
arpl
std
add
das
xor
aas
dec
dec
inc
outsl
shll
xchg
mov
xorl
add
popa
int
mov
jecxz
inc
push
es
push
xor
subl
inc
or
pop
mov
lea
fisubrs
inc
aas
adc
ret
shrl
in
sti
repz
sbb
shl
mov
jbe
sbb
jnp
push
subl
jmp
lcall
lret
jnp
popf
inc
xchg
fdivrl
push
shrb
mov
cmpsl
jge
jp
xchg
dec
call
cmpb
inc
and
mov
movsl
out
insl
adc
mov
push
mov
or
sbb
mov
cld
jmp
rep
sub
pop
xor
mov
push
arpl
rcr
xchg
inc
add
enter
cmp
sub
test
or
xchg
inc
dec
sbb
mov
adc
sbb
jb
fildll
jecxz
adc
scas
popa
sub
pop
xor
nop
cmc
fcmovu
daa
push
out
call
push
pop
push
jecxz
inc
scas
aad
rcl
icebp
inc
push
fimuls
mov
mov
jbe
push
mov
adc
and
inc
sub
cmpsl
push
ljmp
mov
sarb
ret
mov
out
mov
fcomp
cmp
nop
mov
pop
lock
or
pop
fisubl
push
out
and
dec
lret
adc
imull
xor
loopne
mov
imul
sbb
jle
sbb
and
hlt
insb
addr16
sarb
push
push
push
lods
push
or
xchg
insb
aas
stos
sbb
mov
jae
jmp
bound
dec
test
mov
add
das
loop
pop
adc
jnp
pop
mov
fsubrs
cmp
cli
adc
je
stc
ds
pop
jp
incb
and
pop
jns
idivl
sbb
lds
lea
js
ja
mov
or
ljmp
and
pop
aas
add
arpl
mov
mov
adc
loopne
mov
std
daa
inc
dec
sbb
jge
sub
sbb
decl
push
es
iret
pusha
dec
xchg
cltd
dec
pop
pop
test
test
or
pusha
int
pop
xchg
or
sub
subb
repnz
adc
in
les
jb
xchg
movsl
cmpsb
add
int3
xlat
jecxz
mov
mov
ds
and
cs
add
sbb
into
adc
jnp
cmpsb
lods
inc
cmp
sub
aam
pop
push
xor
cmp
xor
cmp
outsl
cwtl
aad
xchg
into
mov
cmp
mov
xor
mov
push
xor
pop
je
vmovaps
int
xor
ficomps
push
pushf
scas
mov
insl
jbe
xchg
sbb
lods
pop
jmp
aad
dec
pop
int
adc
mov
iret
fsincos
test
iret
fucom
aam
xchg
and
outsb
sub
loope
bound
push
add
pop
int3
outsl
imul
out
mov
jge
sbb
push
shll
jmp
shrl
sti
lds
fs
add
aam
dec
repz
dec
cmc
mov
mov
inc
cmp
inc
mov
inc
popf
or
sbb
mov
faddl
xchg
loopne
xor
popf
leave
outsb
outsb
popf
nop
js
inc
xlat
scas
sbb
dec
pusha
xchg
popa
jge
ss
xchg
mov
repnz
adc
cmc
psllq
push
pusha
add
test
jl
test
add
mov
jmp
jno
inc
sub
sub
mov
xchg
dec
xor
in
or
xor
std
data16
fldenv
aam
xor
dec
iret
and
mov
push
aam
dec
ss
mov
pop
enter
stc
inc
movsl
mov
in
mov
cmc
pop
and
test
inc
nop
cmc
jecxz
mov
jnp
int
imul
sbb
lcall
stc
inc
xor
pop
aaa
subl
mov
adc
push
fwait
imul
sub
out
jp
hlt
ds
addb
xchg
cmc
xchg
out
push
mov
std
fldt
js
push
lods
xor
xchg
mov
pushf
daa
lods
xor
xchg
mov
push
add
cmp
inc
int
sub
mov
fdivl
leave
dec
lret
add
cmp
and
pop
daa
ror
ss
and
sahf
adc
jle
test
mov
lods
incb
into
sub
xor
jmp
sub
fnstcw
push
sarl
mov
sub
sahf
xor
aam
cmp
sub
dec
scas
rcl
xchg
inc
shll
fs
jmp
rcr
sti
inc
jge
jne
pop
push
inc
out
jg
jle
and
lea
ret
adc
into
std
adc
jmp
xchg
movsb
mov
lret
cmp
sub
sbb
jb
popf
and
ffree
sarl
inc
jl
popf
mov
and
iret
sbb
mov
cwtl
cltd
xor
loop
add
ss
xchg
sbb
and
jl
cmc
push
fwait
ds
mov
popa
mov
jb
lods
iret
mov
scas
fucomip
xchg
pop
or
stos
cmp
scas
adcl
xchg
or
pop
or
inc
and
jnp
mov
jle
xchg
jle
shll
dec
popl
inc
sbb
and
mov
adc
mov
xor
sar
mov
test
add
dec
jno
adc
cmc
mov
and
imulb
cmpsl
xor
pop
xor
add
fdivl
push
pop
lahf
jecxz
decl
xor
xchg
dec
adc
fwait
test
shlb
je
xchg
lods
sbb
fidivl
pop
pop
std
xchg
in
sbb
jbe
push
xchg
pop
repnz
push
pop
incl
cmpsb
cli
shl
lahf
cwtl
daa
jge
mov
and
push
insl
cwtl
push
lret
fadds
push
sbb
fstps
insl
bound
call
fiaddl
cmp
cwtl
adcb
cmp
mov
fnstenv
xor
push
ds
ljmp
in
push
jno
and
and
jbe
cmpsb
jmp
fdiv
movlps
add
or
pop
or
jb
ret
mov
test
test
movsb
arpl
xor
cwtl
daa
scas
js
insl
pop
shl
add
and
rcr
cmpsb
cli
xor
mov
pop
pushf
push
iret
test
sbb
and
mov
sub
loopne
cmpsl
pop
push
in
xchg
sub
inc
mov
mov
mov
rcll
testb
or
orb
mov
jno
add
xor
loopne
mov
mov
jle
ds
std
int
mov
xor
mov
dec
mov
sbbl
notl
lods
xor
add
cs
sbb
mov
jl
mov
lcall
ds
and
mov
jmp
je
inc
outsb
adc
dec
mov
inc
pop
outsb
sbb
xor
sti
add
repnz
shl
call
lret
push
dec
negl
aad
ffreep
mov
xor
add
fidivrs
cmpsl
or
mov
push
pusha
adc
inc
inc
cmp
dec
enter
into
pop
xorl
rcrl
imul
xor
cwtl
cmc
mov
fcompl
add
sub
add
test
sbb
imul
ret
repz
or
push
mov
inc
or
pop
cmp
test
push
das
dec
cmpsb
mov
inc
jmp
mov
icebp
add
adc
out
adc
dec
dec
push
int3
push
hlt
jl
add
fsin
adc
sub
pop
in
jo
pop
faddp
lds
pop
dec
mov
xor
push
lret
xchg
setne
sub
fldlg2
dec
inc
jo
cli
test
jmp
lock
jnp
stos
fwait
add
lods
test
outsb
mov
push
pop
or
fisubl
dec
add
cmp
imulb
loope
push
orb
pusha
mov
or
test
hlt
xchg
mov
adc
leave
adc
xchg
or
outsb
int3
aam
xor
jno
loopne
mov
std
sub
dec
adc
sbb
push
pop
xchg
shl
daa
cmc
and
sub
test
cli
stc
mov
or
shrb
dec
mov
in
icebp
mov
decl
push
jne
cli
push
mov
call
fs
je
push
adc
int
gs
xor
sbb
leave
ror
loope
movsl
xorb
aas
mov
pop
sti
push
adc
js
mov
ljmp
inc
jle
aam
lods
adc
stc
lahf
les
aas
dec
les
mov
scas
cmpsl
fdivs
or
adc
sbb
xchg
int3
xor
cmp
ja
jne
cs
or
xchg
xor
test
rcll
fcoml
mov
mov
push
lods
lret
sahf
push
xchg
mov
hlt
pop
pop
ja
mov
push
mov
fisubs
leave
cmp
mull
or
jmp
in
popf
fisttpll
es
jae
adc
sub
push
int3
inc
mov
jb
mov
mov
inc
sbb
insl
jbe
out
jbe
jns
in
cmc
xor
lret
pop
sub
jo
mov
or
mov
mov
jmp
dec
xchg
dec
add
bound
push
add
into
aaa
mov
addr16
jmp
arpl
testb
push
jecxz
push
xchg
inc
xchg
sbb
lahf
mov
iret
scas
lahf
sbb
xchg
scas
or
xchg
pop
xorl
into
adc
sbb
insb
out
push
jg
sahf
fs
loopne
cmpsb
notl
pop
xchg
cmp
xchg
inc
mov
fdivrl
or
in
inc
adc
pop
pusha
pop
notl
mov
inc
lods
jae
daa
xchg
lds
mov
cltd
nop
push
stos
insb
iret
lea
bound
xchg
push
push
adc
pop
xor
mov
pop
push
sti
xchg
and
in
pop
xchg
sbb
aam
cwtl
cmp
jp
out
lods
pop
enter
jnp
in
xor
les
dec
push
fiadds
cmp
push
outsl
pop
jne
pop
xor
loope
movsb
push
cmp
mov
xor
fdivs
daa
cmpsb
ljmp
out
clc
cmpsl
mov
es
lahf
xchg
cmc
ds
push
dec
pop
xchg
lret
leave
repz
jp
loopne
aam
aam
pop
js
roll
cltd
mov
repnz
cmp
adc
in
leave
enter
not
sub
sub
iret
es
test
xlat
push
cmpsl
aam
lods
in
and
test
popa
lea
mov
rcll
mov
outsl
stc
dec
or
or
mov
jecxz
shll
jecxz
push
adc
shll
movsl
push
fldenv
inc
rorl
lcall
lods
and
test
test
test
cld
push
add
pop
in
jno
jb
scas
into
pop
outsl
call
adc
out
jno
enter
test
sub
mov
adc
push
push
imul
mov
and
jge
jno
jb
mov
add
push
xchg
xchg
sub
jl
outsb
aam
fisubl
push
shlb
in
data16
les
aaa
insl
cs
pushf
popa
dec
test
inc
push
push
in
cli
and
mov
mov
iret
dec
daa
jl
insb
push
pop
mov
test
imul
add
mov
pop
mov
int
push
sub
mov
rcrl
xor
push
mov
or
fdivs
lahf
mov
mov
xor
inc
insl
push
lea
je
mov
push
cmpsl
or
jne
fnstsw
add
pop
ljmp
cmp
adc
push
hlt
xor
push
out
cwtl
sub
cmpsb
mov
sub
cmp
repz
sti
into
icebp
shl
lret
push
shlb
mov
adc
pop
lcall
dec
pop
gs
jl
cmp
aaa
imul
push
negb
xor
pop
cmp
mov
lock
bound
push
gs
mov
jb
mov
jb
inc
fildl
xor
notb
hlt
pushf
imul
xor
jg
dec
js
push
jns
fisttpl
xchg
xlat
aam
stos
xchg
mov
pop
in
xor
xchg
and
mov
jle
pop
xchg
mov
lods
lcall
fwait
sub
les
inc
sub
mov
xchg
mov
das
push
aas
xor
test
xchg
pop
enter
mov
mov
cmovg
aad
jne
lret
mov
mov
mov
lock
stc
mov
lds
scas
neg
mov
pop
popf
lea
cmp
pushf
rorb
in
in
test
inc
xor
inc
add
cmp
push
mov
outsl
push
jp
inc
or
sbb
in
testb
mov
leave
adc
cmpsl
ss
push
ss
scas
push
lock
aaa
and
sbb
stos
repnz
sub
jg
je
fnstcw
push
je
push
dec
mov
pop
pop
inc
pushf
insl
rcl
mov
je
call
call
and
test
movsb
inc
pop
pop
bound
pop
fimull
out
test
loopne
gs
les
pop
inc
cmpsb
jl
cltd
push
dec
mov
pop
dec
xor
xor
mov
and
cmp
ds
cmp
mov
mov
shl
in
ret
pop
inc
pusha
pop
out
push
rcl
dec
ljmp
addl
aad
xchg
popf
ljmp
jb
fstpt
pop
mov
pop
addr16
data16
mov
sub
das
pop
imul
fmuls
insb
in
and
adc
pop
std
arpl
mov
int
jge
in
lods
sub
push
adc
push
xchg
mov
into
out
in
mov
or
or
dec
xchg
push
adc
ja
je
or
mulb
outsl
add
repnz
push
mov
je
dec
arpl
jbe
push
add
jecxz
mov
test
xor
movsb
cmp
xchg
and
push
add
mov
mov
jno,pn
lods
mov
iret
lods
cld
out
cli
jp
xor
das
test
xchg
insb
aam
jne
fs
cld
int
mov
notb
mov
mov
push
repnz
mov
cld
shll
mov
icebp
out
add
cli
jge
cmpsl
in
sub
js
popa
push
pop
lds
cmp
add
push
sub
dec
inc
pop
and
cld
push
loope
dec
xor
and
pop
and
lock
es
cmp
or
faddl
cmp
stc
push
xchg
nop
aad
inc
and
repz
lahf
xor
pop
mov
dec
popf
mov
and
cmpsl
scas
lods
cltd
mov
scas
cmpsb
dec
scas
mov
aaa
cmc
sbb
jno
pop
mov
and
jg
loop
xchg
or
sub
sbb
pop
inc
mov
les
fs
sbb
js
out
cld
arpl
mov
pop
repz
ss
jno
leave
mov
xor
pusha
pop
or
jbe
getsec
inc
fs
jl
jle
cmp
or
xor
dec
es
and
ja
mov
xchg
mov
or
ret
or
jle
cli
sti
in
movsb
nop
xlat
lcall
test
fcomi
sub
xor
sub
pop
in
cwtl
mov
mov
pop
call
repz
sub
adc
pop
bsr
push
xchg
shl
adc
lcall
pop
inc
xor
push
cltd
roll
xor
jecxz
jg
cmp
push
mov
jns
adc
xchg
lcall
mov
cli
lret
outsb
push
pop
cmp
hlt
and
mov
push
call
add
repnz
dec
pop
divb
xor
add
pop
cmp
push
cltd
xchg
pop
lds
xchg
idivl
daa
cwtl
cs
das
push
or
shl
outsl
test
int
mov
sarb
fnstcw
jne
popa
outsl
aad
testb
sub
jae
fdiv
jno
mov
xchg
xchg
xchg
mov
jo
mov
in
sti
aas
negl
dec
ffreep
mov
nop
mov
xorl
ja
xchg
or
mov
push
gs
daa
add
aam
mov
ficompl
ss
xchg
pushf
jns
das
movzwl
int
push
dec
mov
out
imul
insb
dec
addr16
or
cmp
xchg
xor
int3
sbb
or
sbb
xor
imul
dec
repz
cmp
xlat
push
test
jbe
ret
hlt
enter
xor
aaa
push
mov
sub
pop
in
test
aaa
mov
xchg
bound
leave
adc
in
mov
sub
dec
es
jae
jo
add
xlat
dec
mov
push
jp
shl
cmp
inc
fildl
jae
xchg
mov
inc
lret
jns
roll
es
ljmp
fcoms
out
xchg
jl
cmp
in
and
data16
or
cwtl
jg
jns
push
add
pop
movsb
insl
mov
stos
and
cmc
xor
xchg
int
pusha
mov
dec
push
andb
cld
mov
push
movsl
cmc
add
insb
leave
inc
jns
faddp
ljmp
lret
and
fdivrs
fcomps
sub
mov
jne
pop
data16
rcrb
add
or
and
and
out
imul
pop
mov
lret
mov
jno
xchg
cwtl
iret
pop
and
out
dec
xchg
jp
cmp
xchg
mov
pop
xchg
push
roll
xchg
fisubs
test
fcoms
in
popa
mov
adc
push
mov
mov
cmp
test
push
mov
imul
divb
jmp
in
fdivrp
daa
cmp
fldenv
push
push
scas
scas
push
shrl
incb
popa
adc
mov
loopne
outsb
jbe
pop
jbe
dec
sub
ss
fidivrl
inc
jns
outsb
and
jmp
hlt
inc
cmpsb
mov
mov
fs
in
adc
loope
jbe
addr16
in
xchg
into
mov
repnz
fsubl
or
stos
or
add
pop
adc
push
add
sahf
ret
notb
pop
mov
int3
insb
push
out
popa
jle
inc
lahf
jge
jecxz
test
pop
cmpsb
std
jb
ret
fimuls
mov
xor
loop
call
adc
push
pop
stc
sbb
jmp
scas
mov
mov
or
add
rcl
mov
mov
mull
xchg
pop
push
outsb
pop
add
subl
les
add
mov
lcall
jae
xlat
lods
in
push
xchg
jge
scas
adc
mov
jnp
fldt
jl
push
mov
loop
pop
or
jae
outsb
lcall
and
cmp
push
fldcw
sbb
cmp
dec
mov
mov
mov
xchg
popf
xlat
cmp
popf
div
mov
mov
jnp
and
push
and
xor
and
clc
push
sub
push
fistpll
jae
inc
mov
mov
inc
mov
in
cmpsb
jmp
and
stos
xchg
ss
ret
inc
and
mov
je
iret
int3
movsb
push
mov
lock
in
cmpsl
mov
jno
das
ss
xchg
pop
and
mov
insb
ret
cmp
ja
or
sbb
cmc
pop
das
lahf
cmpsl
rcr
adc
fistpl
push
dec
sub
lds
and
mov
jg
cltd
dec
les
inc
mov
in
or
xor
mov
mov
popf
xchg
pop
sub
and
addr16
mov
movsb
push
cli
cmp
sub
push
xchg
jp
push
sbb
mov
iret
rclb
cmp
or
mov
neg
cmpsb
fsubrl
js
idiv
and
push
fstl
test
mov
sbb
add
ret
mov
je
lea
dec
hlt
mov
mov
and
sub
sti
push
jnp
rorl
add
setae
je
lret
rcl
dec
or
cli
add
mov
jae
mov
pop
push
add
dec
fdivrs
pusha
pop
pop
stos
xchg
ds
sub
cmpsb
hlt
insb
dec
faddl
rol
cmpsb
mov
mov
outsl
pop
push
adc
mov
mov
inc
lds
mov
cmp
ficomps
lock
bound
mov
and
popf
pop
dec
inc
test
dec
nop
mov
leave
push
cmp
nop
xor
je
loope
sbb
sub
outsb
test
mov
dec
push
lret
sbb
xlat
jecxz
push
cli
push
lds
andb
fdivp
imul
das
dec
fcompl
adc
aaa
cmp
rcll
popa
cmp
jecxz
dec
shlb
lods
push
sbb
adcl
mov
cli
mov
jge
or
xchg
mov
pop
aam
shll
repz
push
cmc
xchg
pop
jne
adc
in
setg
daa
arpl
and
or
mov
ss
int3
fs
mov
jns
rorb
lahf
arpl
mov
icebp
movsl
jne
hlt
aad
mov
cmp
or
hlt
fs
inc
cmp
ljmp
cmpl
cli
dec
inc
mov
insl
fildl
scas
and
pop
jno
leave
rolb
enter
mov
or
jp
xchg
xor
mov
sub
movsb
dec
lret
adc
in
add
xchg
mov
jle
push
and
add
ss
or
rcrb
xchg
fwait
pushf
pop
mov
aaa
das
stos
pop
mov
ljmp
push
or
ss
dec
inc
xchg
xor
mov
jo
imul
mov
aas
out
stc
inc
xor
mov
testb
test
sub
ret
push
jg
fprem1
inc
ror
pushl
bound
repnz
mov
or
pop
aad
pop
movsl
loopne
rcll
pop
in
jmp
sbb
mov
aad
pop
mov
or
aaa
cltd
xchg
movsb
cltd
roll
fsubl
xchg
and
out
xchg
sbb
xchg
dec
fucom
mov
push
mov
push
subb
fdivrl
insb
push
jmp
push
daa
hlt
inc
lds
aam
xchg
inc
lods
add
mov
lea
push
int3
fnstsw
leave
nop
and
push
mov
cs
jl
xchg
popf
jge
fwait
inc
insl
cld
jb
in
fisubrs
in
iret
mov
inc
mov
hlt
sub
stc
or
mov
inc
push
fs
cmp
xor
mov
jbe
je
sarb
shlb
sub
sub
push
rcrl
cmc
outsb
mov
jnp
pop
wrmsr
insl
decb
leave
popa
lods
inc
sbb
mov
cltd
ret
adc
pop
stos
sub
add
ja
xor
in
flds
cli
cs
addr16
enter
add
mov
push
mov
push
fucomi
cmp
mov
ret
xchg
inc
ret
or
sbb
lds
fsub
cmp
movl
push
cmp
or
dec
adc
inc
mov
jno
and
les
test
sbb
outsb
or
cli
sbb
leave
or
fsubr
movsl
or
push
mov
add
mov
cltd
inc
cltd
insl
stos
jae
movsb
jne
jbe
fisubl
jne
cwtl
imul
adcl
jno
or
stos
fdiv
jbe
xchg
inc
in
dec
adc
cmpsl
xchg
addr16
loop
mov
sub
mov
add
xor
fcomps
mov
dec
or
jle
inc
std
fbld
lcall
sub
int3
xor
jne,pt
xor
and
sub
pop
sub
jle
stos
push
xchg
out
lahf
js
data16
xor
in
lea
movsl
pusha
xchg
add
xchg
leave
xorb
push
or
jbe
std
and
jge
mov
xor
mov
dec
sbb
add
outsb
push
pop
sarl
hlt
lcall
adc
fstps
data16
ljmp
addr16
cmp
cmp
xlat
call
ljmp
daa
jl
pop
lds
inc
insl
rcrb
enter
fidivrs
add
add
adc
add
iret
xor
add
add
rolb
adc
add
outsb
aas
jbe
jle
xchg
mov
