mov
jmp
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
add
not
add
not
shr
add
push
mov
add
sub
push
lea
push
mov
call
add
xchg
add
mov
mov
mov
mov
push
popl
sub
add
lods
xor
stos
sub
sub
sub
sub
rorl
sub
sub
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
xchg
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
add
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
mov
or
xor
mov
and
rol
movzbl
add
sub
add
not
mov
sub
add
not
shl
imul
sub
add
imul
add
add
decl
mov
jne
pop
ret
sub
sub
push
push
push
push
xor
push
push
push
push
mov
call
cmp
jne
mov
mov
cmp
je
mov
jmp
push
mov
call
push
lea
push
push
mov
push
mov
mov
call
push
push
push
push
push
push
push
lea
push
mov
call
mov
mov
call
cmp
jne
cmpb
jne
push
push
push
push
mov
call
mov
lea
push
mov
mov
push
pushl
push
mov
call
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
sub
add
push
mov
call
mov
mov
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
push
mov
call
push
mov
call
push
call
pop
push
mov
call
push
mov
call
mov
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
call
cmpl
push
jne
mov
call
push
mov
call
mov
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
test
je
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
mov
call
push
mov
call
push
mov
call
jmp
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
xchg
add
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
call
pop
pop
jmp
mov
call
call
push
mov
call
push
mov
call
push
mov
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
call
pop
pop
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
movb
mov
add
push
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
add
push
and
add
push
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
call
sub
add
push
mov
call
test
je
push
mov
call
push
jmp
push
mov
call
mov
call
push
mov
call
push
mov
call
mov
mov
add
pop
pop
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
cmpl
mov
mov
je
mov
test
je
add
mov
mov
mov
jmp
andl
andl
mov
test
je
pushl
add
mov
mov
mov
mov
add
push
push
call
or
sub
mov
push
mov
call
pop
push
mov
call
push
lea
push
push
pushl
mov
call
push
mov
call
push
lea
push
push
pushl
mov
call
push
mov
call
push
lea
push
push
pushl
mov
call
mov
call
push
mov
call
push
mov
call
pop
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
add
push
lea
push
pushl
call
push
mov
call
pop
xor
push
mov
call
push
lea
push
push
pushl
mov
call
push
call
push
lea
push
push
pushl
mov
call
push
call
push
mov
call
mov
pop
mov
mov
xor
xor
cmp
jae
mov
mov
mov
addl
xchg
addl
push
pop
rep
mov
add
add
add
mov
mov
movzwl
push
add
pop
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
push
mov
call
xor
pop
pop
pop
pop
add
xchg
add
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
push
xor
push
mov
call
push
lea
push
push
xor
add
push
push
push
push
mov
call
push
mov
call
mov
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
push
call
push
mov
jmp
push
push
push
push
push
push
mov
call
test
je
push
mov
call
xor
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
add
cmp
jb
pop
pop
xor
add
ret
push
mov
sub
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
push
add
pop
pop
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
lea
test
add
sub
cmp
jb
pop
pop
ret
push
mov
mov
add
mov
sub
xchg
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
push
add
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
xchg
sub
lods
xor
stos
sub
sub
sub
sub
rorl
sub
add
jne
pop
pop
pop
ret
push
mov
sub
sub
mov
mov
add
mov
push
xor
mov
cmp
je
push
push
lea
mov
push
mov
mov
call
push
mov
call
push
mov
call
push
call
add
xchg
add
mov
push
mov
call
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
lea
cmp
je
mov
cmp
jne
mov
add
push
mov
call
pushl
push
mov
call
mov
cmp
je
mov
add
mov
jmp
cmp
je
push
add
pop
mov
mov
cmp
jne
jmp
lea
mov
mov
mov
add
xchg
add
cmp
jne
pop
pop
pop
leave
ret
fstpt
or
add
add
add
jae
rep
mov
mov
cmpsb
mov
pusha
add
roll
xchg
shrb
xchg
pusha
int
andb
ss
push
cmp
fildll
dec
stos
cmp
popf
mov
pop
arpl
push
data16
inc
inc
and
mov
in
inc
fsubs
scas
lock
sub
dec
test
pop
pop
test
insl
pop
add
scas
daa
adc
sub
push
add
sbb
add
fwait
in
and
popa
andl
aaa
inc
mov
fnstsw
cltd
jno
clc
sbb
mov
idivb
inc
fcomi
mov
out
cli
pop
add
push
ss
inc
test
and
jb
pop
addr16
mov
jb
in
jnp
fmuls
outsl
ret
insb
xchg
mov
cmp
push
pop
insl
adc
shr
decl
jns
ret
inc
cmc
leave
dec
and
cmp
fisubl
loope
mov
in
inc
inc
out
mov
lods
mov
adcb
pop
outsl
mov
or
sub
or
mov
mov
sub
dec
in
out
mov
sub
cmp
lea
lods
or
or
pop
lret
pusha
shrb
fisubl
mov
std
into
cmp
sarl
push
jbe
lds
lret
outsl
dec
inc
sti
sbb
push
sbb
add
inc
pop
mov
pop
out
adc
mov
lods
sti
xchg
test
gs
js
std
push
mov
lods
dec
push
push
aas
leave
sbb
inc
xchg
mov
in
sbb
dec
sahf
lcall
leavew
psubusb
lahf
fidivl
dec
add
sub
push
jge
mov
add
orb
fbstp
inc
or
dec
leave
mov
dec
enter
stc
xor
pop
push
cmpsb
sbb
jecxz
out
mov
dec
push
lea
je
and
fidivrs
dec
mov
mov
xchg
xchg
call
addr16
or
cmp
xchg
push
jmp
fdivrp
cmp
cld
adc
sbb
xchg
aad
je
imul
xchg
mov
popf
ret
lcall
and
jno
hlt
xlat
pop
ljmp
ljmp
push
aad
push
test
push
xor
std
idivl
movsl
push
pop
mulb
or
push
subb
aas
fcomps
mov
cmp
push
jne
enter
outsl
scas
xor
xlat
out
cli
roll
loopne
roll
int3
je
in
and
inc
jne
mov
pop
cmp
add
xor
add
faddl
jbe
pop
and
arpl
xchg
mov
jne
loopne
add
jo
xchg
nop
or
je
mov
mov
sub
xchg
cmpb
and
test
dec
fldcw
cli
pop
mov
pop
adc
in
jmp
movsl
jno
mov
jg
call
fldcw
mov
in
lcall
lds
mov
ja
adc
lahf
jo
gs
jnp
idivl
outsl
pop
and
pop
jno
mov
cmpl
xor
xchg
fnsave
cmpsb
xlat
shr
xor
aaa
sub
mov
scas
sub
aaa
incb
clc
icebp
imulb
mov
add
ret
pop
and
test
arpl
insb
and
and
lds
mov
es
insb
cmc
jne
pop
pop
std
pop
bound
inc
insb
mov
sbb
sub
mov
pusha
fsts
sbb
sbb
stc
imul
mov
inc
into
stos
cwtl
lds
xchg
adc
outsb
pushl
mov
into
sbb
dec
fwait
add
rorb
xor
cltd
xor
dec
inc
lock
nop
jae
leave
fstp
orb
xchg
dec
gs
jmp
mov
xchg
dec
cmp
sbb
adc
hlt
aas
jnp
pop
add
xchg
fnstenv
add
xor
inc
fcoms
jae
push
int3
sahf
ficoms
inc
jge
and
mov
dec
adc
or
jno
push
mov
mov
stc
sbb
arpl
mov
ret
cmc
rcrl
test
out
test
sub
out
imul
loope
outsb
pushl
push
sahf
fisubrs
cmpb
test
mov
adc
movsb
lods
push
mov
fwait
in
or
fwait
inc
out
fists
mov
enter
fdivrs
fstpt
jb
sub
lds
pop
pop
insl
leave
movsl
mov
mov
fs
sbb
xor
add
jb
sbb
cmp
xchg
inc
imul
pop
xchg
mov
mov
imul
popf
lcall
pop
xchg
cmp
push
or
stc
pop
jae
jle
scas
or
push
cmp
inc
es
mov
js
add
mov
icebp
pop
test
jmp
jno
xchg
push
mov
mov
in
xchg
or
inc
adc
pop
fcomi
fiaddl
hlt
add
push
xlat
and
std
lcall
xchg
add
roll
enter
lahf
cmp
adc
or
popf
aad
sahf
loop
sahf
scas
shll
sahf
mov
push
pop
cmc
sub
imull
lret
sub
dec
adc
jg
adc
rcl
mov
dec
jbe
out
daa
jecxz
mov
mov
cmc
mov
or
mov
stos
mov
sub
stos
cli
mov
xchg
mov
int3
test
or
xchg
dec
shlb
push
xor
or
in
insl
push
mov
jecxz
hlt
nop
bswap
sahf
loop
addr16
or
mov
jl
stos
pop
sub
fstpt
lret
or
inc
in
dec
shlb
dec
sbb
dec
inc
pop
les
inc
out
lock
push
scas
xor
pop
sub
fstps
cltd
les
lods
psubsb
loope
fdivrs
aad
rcr
jo
and
dec
and
or
ljmp
adc
mov
sti
add
mov
jbe
rolb
mov
mov
fsub
loopne
ret
nop
sarl
pop
jle
mov
outsb
lahf
inc
mulb
clc
loop
sahf
test
pop
add
push
xchg
syscall
sub
lods
sub
xor
pop
jp
xor
scas
fbld
dec
mov
aam
cmp
imul
xchg
imull
add
leave
stos
and
int3
stos
out
inc
loope
sbb
hlt
xor
cmp
cld
inc
mov
push
cmp
lea
aam
jb
push
xchg
adc
stc
icebp
xchg
ret
out
iret
mov
stos
dec
and
jp
stos
pop
and
jp
aas
rorb
lahf
fwait
adcl
push
dec
loop
xchg
sub
imulb
push
jne
int
push
shl
nop
or
sti
imul
jo
inc
cmp
mov
adc
call
aam
adc
test
and
mov
xchg
pop
inc
int
mov
push
and
inc
jnp
les
push
push
push
jae
ret
add
xchg
inc
mov
cmpsl
sbb
scas
nop
mov
in
jns
adc
mov
dec
insl
int
and
lods
inc
pop
mov
add
dec
sti
pop
je
add
packssdw
and
mov
ret
in
pop
cmc
xor
fnstenv
mov
cld
cmp
loop
mov
in
pushf
and
dec
add
push
arpl
sahf
dec
cli
pop
pop
cmpsl
lcall
andl
mov
dec
fldenv
xchg
rcl
das
cmp
jl
jg
or
inc
enter
sub
lcall
int
rcr
sbb
lahf
fdivl
push
aas
ss
int
mov
dec
mov
cmp
into
or
sbb
stc
ffreep
fstpt
lret
jle
adc
arpl
rcll
inc
jge
icebp
mov
add
fmuls
cmpsb
push
andl
sub
adc
xchg
pop
ficoml
inc
cltd
stos
pop
les
in
lods
retw
jbe
and
loopne
ja
mov
mov
jns
xchg
inc
rcll
or
xor
and
sti
popf
add
xchg
scas
ds
cmp
or
push
dec
or
mov
lahf
push
pop
pop
jno
cli
mov
cs
jne
cld
adc
or
push
or
pop
movsb
mov
cmc
inc
ja
pop
add
and
mov
adc
and
aas
sbb
ret
mov
add
lret
sub
arpl
mov
repnz
pop
add
jo
test
test
je
sub
aaa
cmp
rolb
sub
push
lret
in
jp
mov
shlb
and
sti
mov
mov
inc
mov
rol
repz
daa
fsubs
ds
icebp
push
or
push
xchg
shll
dec
mov
ds
and
and
inc
adc
stos
lret
fwait
mov
inc
mov
in
adc
fisttpll
out
les
mov
mov
pop
jmp
rolb
scas
adc
mov
les
movsb
jne
repnz
mov
fldl
xor
mov
dec
ret
push
lret
fisttpll
mov
or
fwait
mov
jo
lret
mov
shlb
dec
stc
loopne
test
adc
mov
jge
dec
inc
loopne
or
std
insb
pop
add
jg
dec
stos
xor
cmp
jbe
dec
jb
cs
inc
mov
ret
cld
pop
leave
sub
jae
dec
scas
push
mov
iret
fcmove
and
dec
jmp
pushl
sbb
cltd
jno
or
xchg
dec
pop
mov
mov
sbb
inc
push
js
pop
xor
push
xor
mov
inc
out
test
loope
ret
push
and
out
mov
dec
inc
fiaddl
call
inc
sbb
pop
dec
rclb
sti
dec
in
enter
mov
mov
fs
sub
mov
sbb
or
out
sbb
pop
in
pop
add
lods
add
ljmp
lcall
cwtl
shll
popa
loop
mov
testl
and
inc
pop
lret
out
ja
xor
jo
xlat
rclb
jmp
add
movsb
int
cltd
adc
dec
xor
cmp
out
lock
sbb
dec
cmp
dec
push
mov
sti
jo
push
mov
push
in
cs
push
rcrl
call
fildl
push
mull
int3
adc
addr16
outsl
fcomps
testb
xchg
arpl
pop
mov
xchg
mov
lret
jnp
add
jmp
jne
xlat
push
inc
jge
dec
pop
xor
inc
mov
in
lods
aas
int
mov
push
ret
jae
dec
je
push
push
jnp
popa
out
adc
loopne
cmpsb
and
adc
sbb
mov
insb
ret
test
and
aas
xchg
adc
addr16
add
icebp
adc
gs
outsb
lods
or
or
insl
addr16
fisubs
jmp
cmp
lds
xchg
mov
mov
lods
jmp
jae
leave
pop
push
mov
repz
push
pop
and
inc
test
cmpsb
xchg
pusha
in
aad
and
call
inc
xor
gs
loopne
daa
orb
mov
mov
push
inc
mov
dec
roll
xchg
xchg
nop
rcll
sbb
dec
pushf
pop
testb
rep
add
jle
popa
jno
mov
jo
test
fildl
or
jmp
test
jnp
fsubs
rcrl
mov
sbb
xchg
lret
stc
add
and
pop
insl
fwait
stos
adc
adc
push
mov
test
sbb
dec
push
inc
mov
jl
mov
inc
xor
pop
aam
jp
jno
clc
jnp
das
or
lcall
push
les
inc
dec
in
cmpsl
jnp
jmp
rol
xlat
xlat
inc
inc
xor
lret
add
mov
cmp
push
gs
fwait
sub
in
add
and
push
sub
xor
sub
xor
pop
or
xor
xlat
and
imul
adc
popf
jnp
mov
xor
push
ss
mov
cmpsb
add
xor
mov
cwtl
xchg
xor
add
sub
mov
cmp
ret
leave
loopne
aaa
aad
or
dec
lea
ljmp
push
push
loope
mov
mov
dec
out
mov
fistl
dec
xchg
dec
inc
and
push
add
lret
lea
pushf
pop
adcb
add
stos
lret
inc
sarb
sub
fiadds
adc
mov
jb
outsl
or
adc
cmpsl
dec
fdiv
push
and
jmp
out
aam
mov
loopne
idivb
ficoms
bound
test
dec
inc
fidivl
push
cwtl
mov
cmp
mov
xor
movl
js
fbld
rcrb
xchg
adc
pop
add
xchg
dec
mov
enter
push
cmp
adc
addr16
movsb
jecxz
orb
jmp
gs
scas
mov
pop
outsb
neg
pusha
lods
pop
int
or
mov
xchg
imul
fwait
mov
mov
jecxz
cmp
lret
xlat
dec
push
fisubrl
ss
adc
add
sbb
push
or
xchg
mov
add
pushf
pop
sbb
cltd
in
cmpsb
lds
ret
dec
sub
test
sub
jg
dec
sbb
adc
dec
fisubrs
add
test
lock
dec
ss
jbe
imulb
nop
cmpsl
adc
movsl
call
mov
sub
cwtl
fmul
push
bound
mov
lcall
push
cld
cs
pop
loopne
jno
in
rorl
aaa
sub
mov
xlat
pushf
outsl
mov
xchg
stc
fstps
xor
int
adc
pusha
sub
xchg
mov
mov
out
pop
add
movsl
clc
fcoml
shlb
in
or
jae
mov
add
daa
je
leave
or
push
mov
pop
adcl
rcrb
repnz
daa
call
xchg
jae
call
dec
jecxz
loope
sub
loopne
or
inc
add
pop
jb
negl
push
cld
jb
je
jne
xorb
icebp
sbb
mov
aaa
gs
orb
push
jp
pop
addl
out
cld
push
jp
shr
cmp
and
ret
sub
in
jae
sub
rorb
fsubl
pop
mov
lahf
out
xchg
test
stos
and
push
and
sbb
mov
outsb
lret
xchg
lods
fwait
pop
int3
adc
pop
xor
out
jle
daa
and
jno
mov
pushf
xor
ret
sub
mov
ret
ja
cmp
push
inc
fbstp
fdivrs
mov
rorb
int3
stos
push
jmp
rol
in
mov
orb
in
mov
mov
cltd
cmp
pop
jno
mov
movsl
add
xor
sub
mov
xchg
les
mov
mov
pop
mov
jp
ljmp
adc
jmp
fwait
pop
imul
jg
sahf
insb
cli
add
les
aaa
inc
enter
div
adc
pop
xor
pop
mov
jecxz
mov
ja
sbb
popa
pop
aam
dec
xor
xlat
popf
jno
filds
and
cmp
bound
gs
out
inc
dec
lods
add
push
outsl
scas
pushf
leave
ss
dec
push
fxch
scas
mov
imul
and
jb
cli
sahf
add
sub
jbe
or
inc
out
paddq
dec
fmuls
cmp
dec
adc
out
in
jge
cmc
jp
int3
sbb
aad
dec
int
aaa
popa
xchg
mov
jbe
mov
lods
lods
sbb
fwait
negb
sbb
fbstp
in
rclb
popa
sub
shl
sub
xor
or
mov
inc
or
test
pop
cmp
notl
movsbl
xlat
adc
gs
inc
xchg
stc
cmc
jae
push
xchg
mov
mov
lods
mov
int
mov
xchg
xchg
es
outsb
aad
mov
and
dec
xchg
pusha
cmpsb
pop
mov
sub
sbb
aam
mov
xor
imul
mov
inc
xchg
push
sub
scas
insb
jb
popf
mov
sub
pop
jns
pushf
rorb
mov
fnsave
fwait
popa
dec
into
fdivrs
out
dec
push
sub
xor
push
or
push
xchg
lods
cmc
jbe
mov
push
in
xor
mov
mov
cmpl
cmp
jbe
sbb
and
sub
and
cltd
scas
hlt
push
outsb
mov
aad
mov
jns
stos
mov
divb
pop
js
ja
adc
lahf
and
push
xchg
and
rcrb
negl
jbe
sahf
inc
stos
cmp
cmpsb
sti
mov
dec
inc
and
push
loop
push
xchg
mov
vpunpckhwd
cld
outsb
aaa
adc
xchg
enter
mov
sub
movsb
and
mov
and
dec
mov
xchg
mov
jle
cmp
mov
bound
inc
dec
xor
adc
add
lret
sbb
or
mov
out
inc
mov
xchg
xor
test
sahf
and
and
in
mov
divb
inc
or
push
push
push
sbb
ljmp
cmp
rclb
dec
dec
orb
push
ljmp
add
cmp
ja
push
fnclex
data16
push
push
adc
hlt
fdivrl
adcb
jmp
cmc
loope
jmp
pop
jno
fsubl
addr16
add
push
mov
jns
addr16
or
pop
test
shr
stc
push
data16
push
inc
push
ljmp
leave
dec
jnp
movsb
jg
stos
mov
sahf
repnz
push
inc
addb
and
mov
loopne
push
data16
repnz
in
mov
or
push
popa
jmp
inc
out
xchg
cmp
mov
push
test
cmp
insl
fstps
cmpsb
cwtl
jb
lods
sbb
xchg
mov
xor
test
mov
out
lds
loopne
popf
frstor
daa
jge
je
testb
xor
mov
int
mov
sar
cmp
xlat
stc
jae
les
aas
push
jnp
fsubrl
jmp
jl
mov
in
xor
lahf
fs
xchg
sbb
push
andb
mov
xlat
ret
pop
push
cmp
mov
push
mov
or
push
xor
lods
outsb
or
mov
test
fwait
lea
mov
inc
out
aaa
popa
lds
loope
int
hlt
lcall
les
dec
dec
popa
fcoml
xchg
mov
in
addl
rorb
dec
inc
ret
fistl
ljmp
add
jg
push
cmpsb
add
or
pop
mov
pop
psubsb
iret
fstps
add
xor
inc
adc
cmp
int
loop
pop
sbb
sbb
das
add
cs
dec
pop
sbb
nop
lahf
test
ret
insb
hlt
iret
in
or
outsl
jl
insl
sub
xchg
dec
dec
cltd
aam
sbb
cmp
out
dec
xlat
xcrypt-ctr
cmpsl
pop
push
call
push
fmulp
or
or
ja
je
xor
lods
sub
int
mov
out
pusha
push
mov
push
testb
in
lcall
jnp
pop
sbb
dec
cld
or
and
xchg
xorb
cmc
push
mov
sub
mov
outsb
dec
xchg
jne
xchg
shrl
imul
jns
xchg
hlt
jne
jno
adc
mov
add
sub
inc
bound
addl
addr16
std
sbb
sub
sarl
cmp
mov
dec
xchg
lret
rorb
xor
insl
loop
cmp
jne
je
jnp
sub
movsb
or
sub
lret
das
mov
sub
push
test
mov
loop
imul
add
sbbb
jne
sbb
mov
rol
fildll
sarl
pop
cmc
lahf
mov
stos
les
mov
ret
and
fstl
or
inc
xchg
pop
std
lea
mov
and
ret
in
test
fsts
sti
mov
in
in
jns
cld
add
mov
adc
mov
push
mov
mov
jmp
adc
outsl
cmp
jae
ja
sbb
jnp
popa
xchg
inc
out
jo
mov
inc
popf
or
sahf
xor
add
sub
test
fs
mov
adc
cld
aaa
cmpsb
jae
test
lock
push
sub
jp
xchg
xor
push
arpl
push
jne
test
jae
iret
cmp
in
cmp
or
test
lret
aaa
dec
cmpsb
push
sub
sbb
mov
and
jmp
ja
aad
test
lock
mov
xor
and
sbb
pop
sbb
push
dec
xchg
decb
cmp
enter
pop
pop
mov
add
jno
in
int
push
loopne
xor
pop
addr16
outsb
mov
jge
pop
sbb
sub
xor
mov
xchg
inc
cwtl
mull
jge
sub
mov
push
sub
xchg
dec
lock
scas
push
arpl
sbb
mov
sub
cmp
fwait
dec
adcl
enter
js
leave
lret
ds
cltd
mov
or
into
nop
pop
sub
mov
xor
cwtl
mov
and
in
mov
test
jbe
repz
jae
call
rcll
nop
outsb
push
lock
into
or
outsb
call
dec
mov
xchg
adc
in
inc
push
sub
dec
sub
out
jmp
pop
jno
out
mov
sub
fwait
enter
cmp
or
mov
inc
xor
js
pusha
mov
fwait
hlt
jbe
arpl
sub
mov
fs
inc
test
xchg
enter
fnstsw
in
add
jb
outsb
mov
fxch
adc
jmp
test
insb
inc
je
pop
fadd
mov
out
add
add
xchg
mov
mov
sbb
ja
popf
int3
in
sbb
mov
outsb
jae
jbe
mov
dec
xor
out
lods
inc
jp
xchg
test
insb
add
adc
mov
cltd
pop
jle
call
cltd
mov
test
repnz
adc
das
in
stos
jns
and
sahf
mov
mov
mov
call
xchg
lds
xchg
jbe
push
inc
int
mov
faddl
push
test
xchg
hlt
out
test
pop
pop
adc
mov
push
ss
sbb
pushl
xchg
mov
iret
jmp
clc
sub
out
out
push
dec
adc
push
jb
lds
jl,pn
jae
ss
xlat
mov
movsl
mov
pop
and
aas
lret
insb
flds
imul
xor
scas
stc
xchg
into
out
xchg
sub
sti
fisttpl
mov
ss
lock
xor
addr16
dec
mov
mov
jne
mov
test
add
cmp
xchg
sub
bound
fsubl
xchg
lds
out
push
jno
addr16
and
pushf
pushf
cs
jle
push
cmc
sub
in
push
pop
mov
sub
mov
pop
enter
scas
outsb
inc
xchg
jecxz
push
mull
cmp
cmp
xchg
loope
cmp
pop
inc
cltd
js
push
mov
inc
mov
scas
nop
or
addr16
mov
in
sahf
imul
add
clc
enter
fs
daa
cmpsl
int3
inc
xor
movsl
cld
adc
div
shll
cmp
sub
stos
jbe
ljmp
lret
add
outsl
mov
repz
shl
je
mov
xchg
jo
shlb
xor
ja
daa
add
filds
cmpsb
dec
incb
pop
hlt
xor
jnp
repz
into
inc
icebp
dec
fsubs
and
cld
mov
addr16
sub
add
int
in
sti
arpl
addr16
pop
add
cmp
add
movsb
cmp
lea
lods
xor
inc
subb
jo
outsb
and
rclb
mov
scas
sub
xchg
sbb
or
cmpsl
dec
movsb
iret
hlt
add
aaa
mov
cmpsb
dec
enter
xor
ss
out
in
push
into
push
mov
or
dec
adc
jp
cld
xchg
les
jg
cmp
test
dec
out
pop
cmpsb
push
cmc
jnp
dec
sbb
jp
test
cmp
sbb
mov
movsl
dec
inc
push
jmp
add
repz
test
xchg
clc
pusha
and
mov
stc
add
push
jnp
inc
mov
sub
test
call
outsb
test
xchg
fsts
scas
add
ss
xchg
xchg
fidivs
out
jo
dec
inc
mov
push
mov
pop
enter
cmp
pop
repz
shll
xchg
and
inc
or
lods
xacquire
dec
popa
add
sbb
pop
ret
lock
adc
jcxz
mov
fsubr
fisubrs
add
sarb
lea
fdivl
xor
jnp
pop
pop
pop
push
addb
outsb
nop
mov
push
imul
dec
mov
xchg
negl
test
inc
push
push
mov
dec
jmp
cmpsb
ret
rcrl
push
and
mov
in
sarb
in
sar
sbb
push
sahf
add
test
popl
lea
xor
add
cmpsl
push
idiv
lret
push
cmpsl
adc
cmp
push
mov
dec
ret
fists
add
sbb
add
cmp
test
mov
clc
cmp
stc
pushf
xor
ds
xlat
xor
xor
mov
mov
jae
pop
fs
fcompl
shll
outsb
clc
fwait
jge
cltd
inc
jmp
push
fwait
dec
push
and
rorb
mov
inc
mov
or
nop
mov
cmp
pop
inc
jo
idivb
adc
add
fidivs
pop
xor
jb,pt
mov
push
mov
mov
imul
and
clc
out
int
int3
push
mov
cmp
scas
cmp
add
mov
mov
sbb
xor
aaa
or
sahf
push
repz
in
cmp
inc
xor
inc
cmpsb
xchg
icebp
dec
lcall
adc
adc
aad
jne
rcrl
mov
jg
stos
faddp
loopne
ror
fidivrs
fldl
mov
push
cmc
push
int3
mov
xchg
cmpsl
stos
sbb
pop
int
scas
and
cmpsl
mov
dec
rcr
imul
loop
xchg
shr
pushl
jo
push
ds
inc
lds
cmp
shl
ljmp
out
lods
pop
xor
pop
cmp
test
sbb
pop
xor
jno
jle
adc
add
xor
mov
mov
push
push
add
push
cmp
push
adc
or
dec
inc
pop
sbb
and
enter
into
adc
and
jb
ss
mov
mov
push
or
enter
testb
out
mov
xchg
int
jmp
rcrl
loope
call
pop
xlat
or
sub
arpl
icebp
pop
add
imul
cmp
daa
pop
pop
daa
cmp
inc
jecxz
test
push
push
pop
mov
mov
shll
pushf
stos
and
ja
pop
sbb
es
push
or
pop
test
inc
jo
int3
mov
xor
dec
push
dec
mov
in
mov
fidivrl
cmp
out
dec
add
imul
mov
cmpsl
pandn
xchg
daa
fdivl
fidivrl
sbb
sub
xor
or
push
sbb
sub
adc
mov
jmp
clc
inc
xchg
mov
adc
jg
jnp
das
push
add
stos
and
jb
dec
adcl
test
out
or
clc
popa
mov
mov
ss
mov
mov
subb
add
sub
clc
cmpl
test
mov
sbb
sbb
aaa
jo
mov
subb
push
pusha
int3
pusha
imul
xchg
int
jmp
add
in
pop
mov
popa
shlb
and
jecxz
adc
or
add
xchg
ds
fnsave
jno
xor
setnp
enter
mov
movsl
or
pop
push
shld
sub
pop
sub
ljmp
add
dec
pusha
shrb
je
cmp
int3
or
mov
or
in
mov
jno
loop
pop
loope
lcall
ficoml
sub
popa
push
lods
orb
cmpsl
std
mull
hlt
pop
aas
cmp
xor
je
lret
lea
xlat
stos
pushf
dec
sbb
inc
add
cmp
mov
jmp
repz
push
add
xorb
sarl
rcrl
mov
icebp
ds
insb
push
inc
in
push
aad
jl
mov
movsb
add
test
jge
js
xor
mov
out
test
rclb
sbb
mov
pusha
aam
out
sbb
pop
stos
sub
mov
pop
xchg
lahf
jecxz
outsl
icebp
mov
adc
fcmovnbe
mov
push
in
mov
scas
mov
leave
lret
out
mov
dec
addr16
movsl
pop
mov
jae
xlat
lret
adc
push
js
pop
jns
in
ss
and
lock
std
sahf
mov
cwtl
insb
das
push
insb
push
mov
enter
mov
or
sbb
xchg
clc
in
icebp
cmpsb
inc
jecxz
xchg
in
push
mov
cmpsl
jg
mov
rcll
and
and
xchg
sti
sti
or
jl
lea
stos
pop
cmc
fcoml
aad
add
in
inc
js
jl
push
or
icebp
xchg
and
mov
or
leave
push
mov
mov
lock
mov
popf
lods
es
stos
pop
push
xchg
lock
ds
repnz
jo
incl
xor
fcoms
leave
add
fldenv
pop
jecxz
inc
dec
mov
stc
nop
push
lret
dec
gs
push
or
mov
xor
jbe
jmp
sti
fdivrl
mov
mov
pop
mov
je
dec
add
std
mov
push
sbb
ret
popl
xor
into
movsb
or
mov
fxch
dec
ror
pop
cmp
mov
or
adc
dec
cmpsb
int3
lahf
xor
push
sub
test
pop
cmp
jo
add
cmp
push
inc
inc
add
jmp
sbb
cmp
out
sub
loope
add
aam
fucomi
add
addb
loop
into
fsubrl
mov
push
mov
mov
pop
sbb
sti
insl
and
xor
repnz
add
push
or
and
adc
lods
push
xor
mov
cwtl
adc
cld
adc
and
lret
sub
arpl
jle
out
aad
adc
test
cld
push
mov
cs
mov
jns
in
cmpsl
cmp
int3
cltd
std
pop
mov
inc
sub
push
push
leave
enter
sahf
mov
sarb
pushf
arpl
dec
lods
dec
push
sub
add
mov
sahf
cmp
addb
add
imul
cmp
mov
cmc
mov
mov
mov
orb
sub
add
es
lock
mov
mov
jae
out
mov
data16
jmp
mov
fbld
rcr
sbb
mov
and
push
xor
push
sti
xor
fimuls
xor
aam
stos
adc
fldenv
sub
jle
cmpsl
inc
jl
pop
jmp
xchg
test
addl
cmp
push
test
mov
stc
lea
push
mov
or
mov
popa
inc
clc
xchg
mov
cmp
cmp
and
movsl
inc
mov
mov
xchg
jae
push
lcall
lds
pop
enter
out
dec
cwtl
lock
shl
sbb
stos
popf
jg
xchg
xchg
jl
xor
dec
jne
dec
aam
add
fiadds
outsb
jo
and
aad
stos
xchg
fs
add
aam
pop
xor
mov
lods
mov
aam
adc
daa
jae
inc
fwait
in
push
mov
jnp
adc
std
out
std
xchg
test
popa
mov
or
xchg
ret
repz
lret
and
dec
pop
or
mull
nopl
jg
add
imul
pushf
push
xor
mov
stc
ljmp
or
sbb
das
fdivrp
scas
cmp
add
clc
popa
fdivs
and
inc
jl
aam
repz
mov
xchg
and
into
nop
push
push
sub
loope
inc
repnz
in
xor
insl
xor
in
lds
jb
repz
sbb
or
mov
xor
lods
icebp
cli
inc
fbstp
icebp
xorb
jg
jne
outsb
pop
or
scas
mov
lcall
cwtl
adc
test
movsb
sbb
pop
push
aam
cmp
xchg
jae
andl
xor
insb
xchg
ljmp
nop
int
push
pop
or
sahf
push
sub
or
jmp
scas
pop
aad
aam
mov
pop
and
xor
xlat
inc
inc
aas
popf
jmp
push
out
and
xlat
mov
dec
lods
ret
fiaddl
cmp
sbb
lret
and
je
les
sub
cmp
sbb
movsb
movhps
call
leave
mov
ss
lret
push
scas
out
mov
sub
imul
imul
lret
pop
mov
loop
test
sti
jecxz
inc
mov
cltd
sahf
xor
ljmp
push
ljmp
icebp
mov
cmpsl
into
mov
inc
inc
testl
sti
fnstsw
xor
cli
aad
dec
js
cmc
cmpsb
std
into
dec
add
dec
xchg
cmp
out
pop
rcl
pop
in
inc
sbb
add
aad
xchg
xchg
inc
cli
dec
jne
into
test
jno
cmpsb
cmp
push
jge
push
iret
pushf
jl
imul
lahf
sbbb
cwtl
movsb
in
xchg
loop
xor
sbb
mov
lea
mov
mov
or
ret
cmp
mov
orb
rclb
pusha
fdivrp
pushf
std
sub
pop
xorl
dec
and
test
subb
lahf
push
data16
pause
lahf
nop
sub
xchg
bound
cld
fstpt
mov
mov
inc
xor
add
movsb
cmp
dec
dec
xor
orl
sbb
mov
sub
mov
sarb
mov
adc
mov
fldcw
sbb
std
fs
adc
xor
sbb
pop
fcoms
gs
mov
jge
adc
nop
arpl
rorl
inc
push
lds
and
jns
xchg
sub
jb
roll
dec
or
adc
dec
mov
mov
xor
movsb
cmp
jl
jbe
je
adc
fisubrl
adc
add
sub
adc
jmp
push
jnp
gs
adc
dec
out
data16
fsubp
or
frstor
mov
xor
arpl
int
add
testb
fdivp
pop
dec
mov
xchg
mov
clc
mov
pop
adc
pop
and
adc
mov
push
cmp
iret
adc
push
xor
cs
xchg
sub
xor
add
push
clc
mov
loop
xchg
mov
hlt
ss
dec
and
mov
jl
adc
sub
in
imul
or
or
inc
and
dec
jl
frstor
dec
pushf
test
mov
ja
mov
jno
sub
bound
sub
lret
adc
push
in
loope
insb
mulb
leave
sbb
orb
dec
jmp
in
jbe
out
pop
cmpsl
cld
and
cmpsl
sub
pop
fistpll
sub
repz
lahf
jne
arpl
sahf
jb
lds
mov
mov
push
sbb
daa
out
jle
je
icebp
dec
dec
adc
in
rol
bound
mov
push
mov
push
cli
or
pop
jge
mov
and
jbe
and
nop
cli
pop
sbb
cmp
lds
data16
cmp
mov
mov
repz
jne
push
rcr
mov
in
cmp
cs
jb
andb
lcall
sbbb
sub
mov
test
dec
or
push
sbb
xor
fildll
insl
lock
cmpsb
aaa
xor
inc
lret
xchg
ja
sahf
in
mov
stc
xchg
scas
cmp
mov
xor
sbb
mov
jae
sahf
inc
outsl
adc
jbe
sbb
adc
push
push
jb
fadd
inc
cmove
mov
mov
mov
xor
or
adc
pop
inc
pushf
cmp
dec
or
xor
xor
sarb
sub
in
mov
outsb
fdivr
pop
test
js
jnp
mov
jp
push
daa
xchg
rclb
xchg
iret
inc
sub
mov
mov
mov
jb
cli
dec
mov
pop
or
in
movsl
mov
out
push
ss
ja
push
sahf
or
sub
pop
or
int3
mov
pop
jl
or
adc
jbe
inc
lods
mov
lds
adc
pop
orb
scas
adc
mov
mov
xchg
inc
mov
iret
cmpb
sub
scas
jnp
inc
or
or
lock
cmpsl
or
push
mov
or
fistpl
sahf
ds
sub
insb
inc
adc
xor
xlat
in
std
jecxz
adc
insb
test
jnp
outsb
pop
mov
ja
jg
sub
in
js
popa
sbb
lahf
ret
dec
inc
mov
daa
and
adc
stos
stc
seta
stc
mov
rcr
pop
in
dec
icebp
adc
clc
loopne
loopw
in
push
clc
mov
xchg
ljmp
fwait
jne
mov
sbb
push
cmp
jge
add
bound
fxch
cmp
xor
pusha
mov
and
add
push
inc
in
adc
aaa
mov
aaa
ljmp
pop
cmp
mov
ret
adc
ret
cli
and
dec
icebp
xchg
lock
iret
add
add
cmp
fdivrl
clc
push
lret
ficompl
jle
aad
lods
push
mov
fnstcw
rolb
fwait
push
inc
test
leave
dec
std
cmp
push
jbe
mov
add
sahf
lahf
loopne
jns
xor
inc
mov
nop
inc
adcb
hlt
pop
in
fbstp
out
xor
sbbl
sti
xchg
popf
push
mov
jne
and
adc
in
je
sub
inc
or
or
dec
mov
ret
scas
dec
xchg
add
pop
mov
out
add
jno
mov
je
or
insl
ja
add
cmp
lcall
sbb
jbe
xor
mov
jg
rcrb
enter
js
fsubr
pop
bound
lea
sti
movsb
mov
mov
mul
lods
jb
pop
dec
cld
pop
rcr
adc
ret
push
ja
sub
mov
or
adc
fadd
mov
xchg
push
sti
bound
sbb
cld
ret
push
test
popf
and
cwtl
in
fwait
push
fnsave
stc
cmp
outsl
loopne
and
cmp
xor
fstpt
jbe
add
push
jge
cmpsb
mov
nopl
fistl
cmc
repz
mov
push
adc
fs
movsl
cs
xchg
adc
enter
mov
sbb
aam
stos
adc
les
daa
decb
test
idiv
sub
imull
jne
jg
mov
mul
inc
es
push
pop
cmp
or
outsl
pop
neg
jb
fs
xchg
shll
shrb
out
sub
nop
xor
ja
push
xlat
lds
jge
pushf
aam
in
ret
int3
pop
ffree
outsl
out
xchg
mov
jbe
insl
loope
mov
mov
sbb
xchg
std
jo
xor
sbb
fidivrl
or
sbb
push
xchg
jp
jle
xchg
pop
rcl
test
or
push
bnd
mov
and
jmp
dec
xor
lret
push
push
xchg
jl
add
pusha
test
xor
jne
xor
aaa
jg
fs
test
sbb
and
xlat
out
repnz
mov
mov
int3
dec
lret
ficoms
dec
lahf
jmp
sub
or
mov
mov
jg
out
cmp
scas
mov
fcomps
cmp
std
sub
cmp
or
and
lock
push
push
cmpsb
scas
inc
test
push
inc
aam
jb
cmp
hlt
movsl
pusha
dec
dec
ja
lods
mov
insl
or
insl
loope
xchg
outsl
dec
inc
fbld
push
cmp
test
stos
and
or
daa
and
jp
mov
in
sbb
call
xchg
cmp
pop
fwait
stos
lea
les
pop
and
imulb
andb
add
popf
or
adc
adc
pop
xchg
es
mov
clc
mov
add
or
lds
cmpsb
popa
adc
insb
sti
xchg
outsb
push
dec
inc
add
sub
pop
push
pop
pop
inc
icebp
js
mov
mov
adc
fwait
sbb
xchg
test
in
ljmp
popa
enter
ss
leave
cmpsb
out
pushf
das
imul
leave
dec
xor
int3
outsb
test
movsl
ss
pop
sub
test
mov
lret
cmp
repz
jnp
stc
push
das
jp
mov
arpl
lret
sub
mov
dec
or
sub
into
sbb
xchg
push
jne
mov
jecxz
lods
dec
sub
aaa
inc
inc
cltd
mov
jns
and
sbb
andl
lds
jp
pop
mov
push
dec
cld
data16
jne
add
outsb
stc
ljmp
or
mov
or
add
repnz
fstpl
lahf
loopne
xor
xlat
out
xchg
cmp
add
dec
pop
test
cmpsb
addr16
call
cmpsb
clc
push
xor
cld
insl
jns
pop
jb
es
push
push
xchg
stos
mov
inc
std
and
cmpsb
repnz
xchg
and
cmpsl
sbbb
test
adc
scas
inc
inc
stos
ret
loope
push
data16
lods
inc
mov
shl
arpl
out
inc
data16
ss
mov
inc
mov
cmp
mov
dec
push
addr16
mov
xchg
cmp
dec
sub
mov
in
enter
popf
dec
ss
rcrl
sbb
dec
sub
xor
jmp
fcompl
jne
or
add
or
jl
jmp
jmp
outsb
js
adc
dec
add
mov
std
mov
into
push
stos
cmp
out
leave
pop
xor
insb
inc
mov
push
adc
pop
add
out
sbb
int3
lret
clc
push
stos
adc
adc
adc
xor
pushl
or
pop
iret
dec
mov
xor
rorb
add
mov
pop
xchg
outsb
inc
add
inc
enter
cmc
pushf
xor
and
ret
jp
jge
into
mov
enter
jb
in
add
rorl
jbe
cmp
sti
fdivr
or
sub
add
dec
stos
add
loop
adc
aaa
ret
movq
iret
cmpl
lds
test
jmp
dec
jns
test
in
fcomi
xor
scas
frstors
insl
push
xchg
mov
iret
adc
cli
loope
mov
xchg
mov
sub
sub
outsb
std
outsl
mov
dec
xchg
shll
adc
fprem1
mov
xchg
push
arpl
cmp
cmp
inc
in
pop
mov
les
dec
mov
les
mov
addr16
xchg
push
mov
adc
push
push
in
jle
adc
jg
stos
and
out
fcmovnbe
jo
xor
cmpl
pop
mov
in
mov
jo
mov
into
sub
pop
or
fisttpll
sbb
mov
fcomp
adc
pop
into
lods
inc
cmpsb
mov
pushf
pop
push
cmpsl
adc
test
and
jl
test
pop
push
xor
mov
shrl
or
pushf
out
push
sbb
xchg
fisttpl
pop
jmp
lea
and
lods
push
test
sbb
clc
je
mov
jnp
aam
sub
add
int3
je
add
xchg
outsb
call
dec
call
ljmp
rcrl
icebp
and
data16
fstl
cs
lahf
int3
pop
in
jno
std
push
and
or
orl
loope
adc
dec
imul
int
loopne
je
call
mov
cmp
js
out
call
out
arpl
push
out
jp
repnz
xchg
stc
jge
sahf
or
dec
incl
xchg
jp
cmpsl
es
mov
outsl
pop
and
sbb
dec
clc
inc
data16
test
mov
fs
mov
dec
mov
pop
ljmp
and
xor
stc
sub
xchg
aad
enter
rorb
sti
push
scas
and
loopne
into
xchg
xor
mov
inc
scas
mov
hlt
stos
mov
imul
mov
mov
push
out
xor
stos
xor
fsubl
lret
push
enter
fdivs
aas
cmp
lods
dec
inc
sbb
mov
gs
or
jmp
aas
xchg
mov
test
out
push
dec
shl
adc
pop
cmp
cmp
pop
jb
shl
fsubs
shll
or
rorb
jge
xchg
sbb
mov
mov
lods
xchg
xchg
push
push
idivl
sti
xchg
into
pusha
fwait
add
les
jo
push
test
mov
fldt
fists
stc
in
hlt
push
hlt
pop
dec
inc
pop
xchg
sbb
sbb
ret
divb
dec
stos
add
mov
je
mov
jecxz
dec
mov
xchg
xchg
rcll
shr
aas
in
mov
aam
jl
sarl
mov
pop
sahf
push
xor
cltd
rorl
cmp
into
cmp
scas
je
scas
mov
adc
js
loope
mov
sub
roll
popf
test
mov
out
xchg
pushf
adc
xchg
jmp
xor
vpcmpgtd
dec
push
imul
adc
mov
call
roll
mov
loopne
cld
xchg
cli
cmp
jp
jle
out
mov
and
mov
stos
rorl
push
push
cmp
inc
pop
mov
push
xchg
sahf
mov
shll
notb
rcll
ljmp
pop
in
cwtl
cmp
and
pop
daa
sar
in
arpl
in
nop
shlb
scas
mov
mov
sbb
aad
xchg
and
cmp
xor
adcb
cmc
xor
sub
rep
pushl
dec
add
loop
leave
pop
or
dec
cmp
in
adc
js
dec
movhps
mov
dec
xchg
adc
adc
mov
xlat
push
ficomps
add
test
mov
pop
mov
fstp
xchg
add
sbb
icebp
sub
pop
push
lcall
nop
test
movsl
addr16
imul
sub
or
inc
push
ds
adc
data16
movntps
adc
mov
rorb
sbb
aas
movsl
add
test
insb
jne
mov
jecxz
es
mov
pop
adc
dec
js
les
cwtl
xor
or
mov
scas
fmuls
mov
lahf
mov
or
insl
sub
cmpsb
and
inc
and
xor
cmc
pop
jbe
pop
sub
mov
stc
pop
mov
and
bound
jo
jnp
adcl
mov
hlt
adc
scas
cmc
call
mov
loop
jno
or
jg
pop
adc
lds
imul
jg
mov
mov
lahf
add
and
cmp
ljmp
cmp
nop
in
icebp
mov
xchg
scas
pop
fnsave
popa
rcl
dec
les
mov
icebp
adc
cmpsb
xchg
fdiv
ret
pop
mov
shll
ss
out
adc
bound
outsl
push
xchg
test
rol
xchg
clc
aaa
pop
scas
outsl
sbbb
popa
xor
mov
mov
aam
test
push
scas
call
mov
jle
add
test
mov
xchg
mov
cld
jmp
inc
notb
gs
cmp
push
aad
arpl
sub
loop
ss
int3
mov
xchg
subl
xorl
cwtl
xchg
sti
jne
mov
xchg
jp
inc
mov
push
testl
pushf
ret
adc
popa
call
mov
int3
pop
and
pop
jo
sbb
testl
loope
lea
aaa
push
dec
scas
arpl
sarl
sub
cmp
arpl
and
push
lods
add
sub
stos
mov
lods
shr
in
jl
inc
rorb
or
cmpl
and
ds
fiaddl
pop
stos
repnz
fwait
jle
sbb
leave
or
and
hlt
inc
sbb
repnz
rcrl
subps
dec
stos
andl
out
insb
test
mov
add
xchg
pop
jp
xor
or
imul
cmp
andl
inc
cld
das
xorl
fwait
int3
mov
push
xchg
lret
gs
aam
mov
mov
pop
add
sbb
push
scas
popa
icebp
ret
ds
icebp
divl
mov
out
je
fisttps
repz
dec
call
dec
add
push
in
int
icebp
loop
sbb
ja
pop
jl
jbe
inc
movsl
insb
divl
xor
test
call
or
push
hlt
insl
jnp
ret
iret
mov
arpl
std
jb
int3
aam
test
push
cs
pop
cs
into
xchg
jo
lcall
mov
iret
mov
pop
scas
dec
pushf
out
push
adc
ret
int
arpl
js
inc
push
pop
pop
aaa
xchg
cs
out
or
cld
adc
adc
in
pop
or
stos
ret
xchg
push
cmp
mov
push
dec
fbld
lods
xchg
sub
add
push
xchg
outsb
sbb
movsl
lods
cli
lea
or
mov
jg
and
xchg
mov
loop
or
ss
mov
or
xchg
dec
jo
or
lcall
sub
fbstp
and
test
adc
push
filds
popa
dec
rcrb
jns
pop
xor
push
fidivrs
std
leave
pop
cmp
test
cwtl
movsb
out
dec
push
lds
cltd
rolb
push
mov
lods
movsl
scas
add
sbb
adcb
hlt
sub
lcall
pushf
and
adc
bound
stos
fwait
lret
into
data16
cwtl
pop
xchg
loope
cmp
pop
cs
test
aas
scas
loope
sbb
push
or
movswl
dec
in
pop
scas
dec
popf
push
inc
jecxz
add
adc
addl
inc
pop
loopne
mov
dec
add
pop
sbb
jae
imul
add
ret
mov
cmp
add
cmp
cli
sbb
loopne
mov
sub
sbb
xchg
sbb
or
sub
xchg
icebp
and
jno
lock
stos
adc
imul
jle
imul
inc
scas
popa
dec
sub
jns
popa
inc
outsb
loopne
enter
fcoms
add
push
fisttps
add
mov
test
arpl
cmp
test
xor
fistpll
mov
xor
les
fdivr
push
lahf
lcall
push
ret
gs
pop
mov
cmc
adc
jne
jp
repnz
mov
dec
mov
popf
mov
add
ret
inc
cmpb
test
push
lahf
pop
or
je
pop
push
push
sub
or
lock
mov
outsl
and
mov
data16
push
rcrl
sub
cmpsl
dec
sbb
aam
adc
mov
fildl
xchg
test
jb
xor
sti
scas
mov
pslld
inc
aam
jmp
push
push
xchg
dec
mov
mov
or
test
sbb
sbb
ret
repz
in
lods
or
cmp
mov
add
or
dec
mov
cld
repnz
and
pop
mov
or
test
xchg
adcl
cmp
pop
sub
andb
out
popa
or
subl
adc
mov
and
cmp
fidivrl
adc
stos
mov
int
fidivl
cltd
popa
push
inc
push
pop
mov
or
icebp
xchg
int3
xchg
lods
rcrb
and
mov
and
xchg
and
push
aas
daa
call
mov
out
aam
add
mov
xchg
push
sbb
mov
lea
ds
mov
adc
fstpl
int
jbe
or
xor
lea
and
xchg
lcall
lahf
nop
jae
std
movsb
jb
stos
fs
pushf
popf
int3
cmpsl
ljmp
sarb
jmp
in
push
icebp
or
out
push
or
shl
dec
sbb
cmpsb
dec
in
inc
into
dec
mov
jbe
clc
negb
ret
int
lock
or
xor
hlt
nop
xor
mov
fadd
sahf
xor
jecxz
cmp
hlt
ljmp
mov
and
inc
add
fstpl
lea
mov
jmp
inc
add
mov
outsl
push
sub
sub
shl
cmp
test
sub
pop
das
jbe
insb
mov
push
adc
or
sti
sub
fwait
mov
das
mov
push
out
pop
mov
rcr
xchg
into
lods
pop
in
inc
and
sub
pop
scas
dec
cmp
pop
pop
shll
cmc
add
mov
xor
add
std
mov
jle
push
inc
and
fisttps
addr16
or
insb
negb
push
cmp
orb
mov
pop
fists
rcll
push
push
stc
jl
push
cmpsb
push
div
stos
mov
add
in
in
push
sub
lock
and
aam
adc
pop
or
repz
mov
addr16
sub
xchg
mov
xor
mov
push
sbb
aad
inc
jg
xchg
sar
hlt
push
insl
scas
test
mov
jmp
cmp
lock
ficoms
push
ret
mov
inc
jle
xchg
jp
cwtl
xlat
mov
ja
dec
sarl
xor
adc
pop
or
fiadds
inc
xor
cmp
sbbl
iret
not
lahf
dec
dec
movsb
xor
cmpsb
mov
lods
stos
push
pop
inc
repnz
dec
pop
add
mov
divl
leave
out
push
es
lock
pop
mov
cmp
jmp
test
cmpsl
out
xor
xor
test
ds
test
mov
push
pop
xchg
stos
lret
xchg
sbb
sbb
cwtl
mov
loope
call
sub
pop
iret
movsl
and
mov
aam
adc
lcall
sbb
push
cmp
mov
cmp
ret
dec
test
cmc
clc
adc
dec
push
mov
daa
and
push
gs
leave
pop
mov
bound
jle
pop
jle
nop
js
mov
ror
je
std
imul
jae
jp
lods
jmp
add
leave
shlb
stc
mov
jnp
aam
pop
jge
jge
ja
pusha
popa
xlat
jns
shl
sbb
xor
in
addr16
pop
adc
rolb
fists
in
and
pop
in
mov
xorl
push
in
add
jle
sbb
mov
pop
cmpsb
pop
xor
fwait
mul
pop
lahf
clc
rclb
pusha
lret
fcmove
add
sub
mov
sarb
loopne
testb
adc
cmpsb
decl
out
xchg
mov
daa
adc
out
jmp
icebp
aaa
mov
jb
push
pop
sti
icebp
imul
mov
lret
inc
pop
dec
or
fcoml
fisubs
pusha
cmp
test
xlat
sub
loope
aam
shll
ja
xchg
stc
int
clc
mov
fisubrl
ret
adc
sbb
mov
mov
lods
out
int3
lcall
mov
dec
inc
sarl
push
rcrb
insl
push
dec
clc
fwait
push
jecxz
push
mov
dec
add
mov
iret
rorb
dec
outsb
out
adc
fmulp
cmpsl
imul
inc
sub
bound
repnz
sbb
jecxz
movsl
xor
sub
clc
push
adc
scas
jecxz
dec
sub
cli
push
adc
or
mov
jnp
inc
mov
adc
push
push
adc
lods
mov
push
aaa
xchg
bound
mov
dec
fisubs
cmpsb
out
xchg
arpl
xor
jl
jg
test
sub
inc
jne
add
push
sbb
mov
into
cmp
fcoml
dec
daa
push
out
mov
lods
arpl
imul
aad
mov
call
and
and
pop
int3
lds
inc
mov
or
or
ljmp
sub
dec
lock
lret
leave
jo
stc
clc
dec
mov
xchg
and
call
fidivs
adc
dec
jp
or
and
test
jnp
out
imul
dec
and
inc
aaa
push
inc
out
pop
push
and
jle
lcall
jg
xor
push
sbb
lahf
leave
dec
mov
data16
aaa
xchg
pop
lds
in
push
or
adc
or
adc
xorb
or
pop
jmp
mov
lret
and
xlat
lret
shll
leave
push
imul
xor
fstps
mov
in
jbe
cmp
jns
xchg
lds
movsl
jae
out
sub
outsb
std
cmp
push
inc
cmpsb
test
mov
cmc
xor
mov
sub
ja
mov
jl
jp
scas
dec
enter
sub
into
jg
gs
stc
pop
idivb
in
mov
stc
outsl
ret
rcll
out
push
mov
in
and
into
sub
out
mov
inc
fdivl
dec
shrb
or
test
cltd
push
fcompl
inc
imul
sbb
fistpll
fs
or
xor
pusha
and
pop
popf
mov
sub
dec
cmp
into
push
xor
pop
xchg
ljmp
les
ljmp
pop
aam
loope
leave
mov
mov
push
aam
fs
add
data16
or
mov
sub
mov
cmp
into
cld
dec
jnp
jg
sbb
ret
fsubl
sub
sub
mov
repnz
mov
imul
mov
sbb
dec
cmp
or
adc
ss
and
data16
cld
inc
cltd
aas
test
movl
shr
out
int3
cmp
shr
mov
mov
aas
ds
imul
inc
test
leave
das
mov
mov
mov
or
and
lret
mov
and
mov
cmp
mull
loop
pop
jg
das
and
idivb
cld
das
enter
enter
sbb
jae
push
jnp
mov
cmp
jmp
jbe
or
cmp
push
shlb
fdivs
out
push
push
iret
adc
fsub
mov
xor
pushl
mov
decl
mov
iret
dec
mov
push
pop
js
into
movsl
loopne
cli
mov
fcmovnbe
cltd
cmc
ret
lret
lret
mov
out
mov
sub
mov
sub
imul
xor
pop
in
jp
pop
leave
mov
mov
enter
lret
mov
mov
xchg
bound
es
stos
jns
xor
push
sahf
sti
jae
inc
stc
and
jns
aas
call
loop
es
popa
lods
mov
push
bound
loopne
out
call
test
outsl
mov
insl
and
scas
lret
stc
ljmp
scas
or
mov
test
dec
and
mov
adc
gs
imul
loop
add
push
repz
or
divl
aaa
fwait
ror
cmp
jno
push
insl
xlat
fists
pop
pushf
add
and
fstl
jo
into
enter
sub
mov
xchg
jo
call
xor
push
loop
push
test
stc
add
scas
movsb
iret
sbb
mov
add
xchg
fsts
xchg
dec
mov
adc
mov
xchg
jecxz
mov
add
sub
sub
xchg
in
pusha
adc
sbb
loope
or
cmpsl
in
js
dec
rcll
dec
cmp
cmp
movsl
stos
roll
mov
fstps
push
mov
rorl
fildl
rorl
inc
movl
mov
dec
jle
mov
or
mov
xor
rcl
xor
mov
adc
and
out
iret
cmp
sub
mov
mov
int3
mov
ja
dec
mov
fldt
imul
es
xorl
jmp
hlt
dec
inc
add
fcmovu
jns
out
cli
decb
or
add
shlb
arpl
call
lcall
insl
dec
adc
int
scas
or
addb
xchg
push
add
pop
mov
sbb
jge
out
jmp
adc
adc
push
adc
adc
adc
mov
mov
pop
sub
stc
mov
lcall
mov
sbb
adc
jo
js
inc
shl
scas
lret
or
mov
dec
fldt
cmpb
fimuls
into
mov
mov
pop
and
dec
out
sahf
cmpsl
movsb
lret
jg
mov
dec
mov
daa
xchg
sti
sub
loope
out
divl
fnsave
popl
pushf
adc
sahf
cmp
std
fistl
in
push
push
imul
dec
push
cmp
pushf
add
leave
mulb
imul
mov
imul
push
push
sar
cwtl
cmp
stos
mov
test
subl
test
mov
mov
push
mov
inc
mov
adc
sbb
dec
imul
push
and
or
and
js
addb
mov
popf
or
stos
mov
adc
aaa
call
jge
jno
outsb
js
push
pop
jge
faddl
icebp
scas
jecxz
add
iret
enter
cmp
xor
dec
sbb
mov
adc
adc
mov
and
mov
lcall
fsubr
pop
sub
adc
push
dec
push
lret
push
fadd
test
repnz
sub
pop
outsl
divl
pop
mov
mov
inc
jbe
or
mov
lcall
add
cmp
xor
je
xchg
iret
mov
testb
sbb
mov
xlat
xlat
jo
cwtl
les
dec
pushf
stos
jmp
aam
pop
nop
mov
loope
adc
int
arpl
push
pop
adc
cmp
jno
nop
adc
daa
mov
fsubl
outsb
mov
sub
les
fwait
xor
sub
push
xor
inc
and
iret
aaa
jns
leave
hlt
and
jecxz
js
pop
jae
and
leave
cmpsl
mov
test
jae
test
test
sbb
cmpsl
ljmp
or
nop
xchg
int3
cmpsl
push
adc
pop
mov
ja
mov
pop
outsb
mov
stc
jb
cld
pushf
rorb
sub
jns
mov
and
jle
fists
jge
clc
mov
sub
insb
hlt
adc
xchg
loope
divl
mov
fistl
or
les
adc
lods
xchg
neg
cld
ret
fnstenv
out
pop
mov
iret
imul
xor
xor
mov
lret
or
xor
sub
imul
cmp
cld
or
aad
repz
and
cwtl
pop
pop
aas
repz
cwtl
lahf
xchg
push
adc
mov
cs
je
in
mov
iret
dec
stos
or
pop
dec
mov
pop
pushf
dec
test
inc
inc
sarb
cltd
xor
rclb
test
add
fidivs
lret
in
stos
mov
add
pop
ljmp
aad
add
cmp
cmp
lahf
out
push
jp
sar
adc
sub
mov
pop
mov
or
cli
inc
rol
dec
movsb
xor
sbbb
mov
jb
mov
in
out
xor
das
and
out
jp
mov
and
add
cmp
jl
cmc
pop
push
xchg
out
sti
jge
dec
loop
in
mov
popf
mov
outsl
and
add
push
push
adc
mov
enter
shlb
ja
lahf
xor
out
or
inc
jae
testb
insb
fs
xchg
stos
sub
ljmp
ss
shrb
in
stos
dec
xchg
pushf
popf
jge
jge
xor
mov
inc
jnp
lock
push
dec
test
xor
test
xchg
xchg
add
and
add
pop
stos
cld
inc
ljmp
push
sub
test
fmuls
mov
mov
sahf
jp
and
sub
leave
add
xchg
mov
aad
mov
mov
add
cld
in
stos
xchg
jnp
es
jno
mov
jle
fwait
jno
fst
jae
xor
add
ja
loopne
mov
in
add
in
push
stos
inc
cltd
addb
sarw
dec
inc
lds
dec
enter
inc
xchg
fwait
lock
pop
jmp
cmp
push
insb
div
jbe
fldl
cld
fimuls
hlt
add
stc
pop
jecxz
sbbb
adc
sti
cmpsl
cmc
std
jns
hlt
rorb
daa
inc
jmp
mov
test
sahf
xchg
mov
mov
bound
stos
cltd
into
mov
push
xor
popf
cwtl
bound
imul
jbe
imull
rorb
push
lods
adc
jle
jp
xor
xlat
mov
ror
mov
mov
scas
std
pop
cmp
lock
sub
adcl
xchg
cmpsl
dec
sahf
add
loopne
rolb
or
incb
jo
push
sub
loop
xor
jnp
dec
aas
jecxz
mov
shlb
xlat
dec
icebp
mov
mov
push
cmp
movsl
xchg
mov
rcll
push
cmp
bound
adc
sbb
adc
lcall
jmp
sub
pop
cld
jg
outsl
adc
cltd
scas
sbb
mov
pop
aas
xchg
sti
testl
iret
xor
xor
stos
sub
loop
cmp
insb
jmp
sbb
mov
lret
cmp
cmp
loope
pop
sahf
shl
ja
cmpsl
or
mov
xchg
push
fcmovnbe
dec
pop
into
dec
xor
roll
test
mov
sub
sub
xor
into
and
xlat
rol
dec
and
pop
popf
mov
xchg
aas
push
lret
rorl
jb
sbb
lahf
rcrl
mov
dec
lcall
imul
xchg
rorb
adc
pop
xor
pop
xchg
xchg
cmp
adc
fsubs
sbb
outsl
cmpsb
ret
fwait
xor
js
cwtl
adc
pop
ljmp
adc
sbb
adc
lods
cmp
cli
je
hlt
inc
pop
inc
push
adc
xor
iret
popa
pop
loopne
mov
movsb
dec
fcomp
and
sbb
mov
jge
pushf
cmp
adc
push
roll
mov
ds
xchg
xor
movsb
addr16
movsl
jp
xchg
imul
inc
lods
loopne
insl
jo
sbb
clc
and
push
pop
sub
adc
sti
adc
popa
mov
cld
cmpsl
mov
ja
addr16
and
jmp
js
dec
in
xor
push
jb
hlt
pushf
shlb
push
enter
xor
xor
add
xchg
enter
iret
aas
adcl
pop
and
and
or
int
jne
frstor
inc
adc
icebp
dec
les
rcrl
arpl
pop
cmpsb
cmc
cli
mov
mov
and
jbe
sub
or
pushf
and
iret
push
pop
movsb
stos
or
je
push
jbe
sbb
or
je
xchg
cmp
jo
mov
push
push
jp
cmp
adc
lods
push
insl
sahf
pusha
pop
cmc
mov
es
aam
push
pop
repz
cltd
fisttpl
jmp
mov
sub
pop
sbb
mov
and
push
enter
insl
or
cmp
cmp
fwait
xor
outsl
lods
gs
xchg
sbb
imul
stos
pop
or
out
iret
nop
lcall
xchg
or
neg
xchg
xor
loope
xor
aaa
loope
xchg
sbb
jecxz
inc
shrb
sahf
pushf
stos
mov
xor
jle
cmp
out
mov
add
fcomp
and
add
push
aad
xor
fld
pop
cmp
orl
popa
pop
mov
es
or
out
popa
inc
sahf
iret
aam
xchg
lods
jecxz
inc
mov
mov
rol
or
push
divb
mov
push
cwtl
outsl
dec
mov
push
out
push
sub
add
inc
nop
into
cmp
jnp
xchg
pop
xchg
or
mov
push
pop
arpl
ljmp
into
inc
jb
adc
jmp
fistl
xor
pop
push
add
mov
pop
jae
mov
aam
adc
pop
call
xor
mov
sbb
jnp
outsl
add
stos
mov
cwtl
push
in
enter
adcl
pushf
dec
insb
cmp
jb
movsb
xchg
pop
pop
ror
mov
inc
leave
call
jae
jae
aam
mov
xchg
jle
mov
mov
mov
stc
mov
sbb
mov
mov
std
out
ja
fnstcw
mov
push
xchg
dec
lret
pop
ds
stos
lds
jo
xor
push
adc
and
frstor
fdivrl
clc
in
ss
add
pxor
dec
add
inc
aaa
mov
jnp
sbb
repz
cld
xchg
xor
into
pushf
cmc
ret
into
mov
mov
push
pushf
push
mov
sub
scas
aas
rorb
mov
loope
lods
icebp
mov
mov
mov
dec
cs
out
ds
cmpsl
dec
inc
jb
movsl
xchg
loope
insb
dec
arpl
out
cmp
mov
imul
in
fdivr
sub
lea
push
cli
dec
lds
xchg
push
push
test
pop
jae
sbb
cwtl
cli
dec
rcll
cld
xchg
jnp
mov
dec
aas
out
push
int3
sub
mov
dec
test
and
cmc
pop
push
xchg
xchg
mov
sbb
shr
arpl
lds
scas
ljmp
push
jns
aam
jbe
xor
stos
xchg
movsl
out
add
push
int
cmpsb
insl
test
loop
jo
mov
cmc
icebp
out
in
test
jle
jecxz
andl
inc
inc
popa
test
push
xchg
pushf
xor
cli
jmp
cmpsb
subb
stos
xchg
cmp
ret
adc
std
outsb
push
stc
imul
pop
cmp
test
sbb
test
sahf
xor
mov
cmpsl
pop
mov
or
mov
iret
mov
aaa
sub
cmp
push
adc
outsl
jns
or
idivl
xchg
mov
xchg
and
data16
push
icebp
adc
sbbb
loop,pn
adc
jp
icebp
ret
push
push
loope
out
xor
lea
lret
ss
push
ret
jne
add
inc
fsts
or
movsb
mov
es
ret
jno
inc
jl
aas
in
fisttpl
dec
inc
xor
fnsave
and
imul
dec
mov
lahf
inc
scas
or
inc
jne
or
dec
xchg
lret
xor
add
hlt
shlb
xor
sbb
push
sub
iret
cmp
pop
jge
mov
push
sbb
mov
mov
rol
lods
mov
and
inc
push
shrb
sub
adc
ja
popa
sub
fwait
cli
xchg
xchg
mov
test
loop
jecxz
fsubl
aad
arpl
jecxz
sbb
dec
push
add
lock
je
dec
sub
mov
xchg
stc
or
mov
inc
insb
jb
jle
mov
add
dec
jns
sbb
push
dec
lret
mov
movsl
ljmp
jne
sub
std
mov
inc
xor
sub
mov
adc
add
sub
and
pushf
add
mov
cld
jg
loope
xor
xor
fwait
je
inc
fs
mov
data16
or
mov
sti
cmp
cwtl
mov
ja
cmp
nop
jle
fstpt
mov
push
sbb
cli
int
lods
inc
jecxz
pushf
add
fimull
push
inc
fcomi
outsb
das
lods
mov
and
pop
adc
xlat
push
push
mov
cmp
mov
cmp
push
xchg
fsubs
pop
out
jge
or
xchg
sub
bound
lret
sbb
add
jnp
xor
jge
aad
cld
lahf
or
outsl
mov
int
push
inc
aam
cmp
cmp
sbb
adc
pop
pslld
jg
js
mov
jecxz
jae
or
push
aas
std
lahf
jae
cmpl
pop
push
sbb
scas
popf
in
cmp
xor
pop
xchg
fs
add
cmp
out
mov
or
arpl
push
fdiv
adc
jecxz
mov
cli
out
ljmp
pop
in
add
sbb
pop
xchg
pop
repz
iret
sub
lods
mov
adc
fnsave
mov
popl
or
fbstp
xchg
int3
dec
mov
sub
adc
or
mov
push
into
dec
out
mov
pop
sbb
mov
pushf
push
je
add
cmpsb
loope
pop
shrb
push
sub
mov
std
xchg
xor
or
inc
out
lcall
imul
sahf
stos
les
push
cmp
lods
mov
imul
jp
lcall
and
fsts
stos
add
sub
mov
pop
mov
arpl
shll
sahf
aaa
dec
pop
or
int3
arpl
pop
inc
cmp
inc
repnz
mov
adc
cwtl
jo
arpl
hlt
lret
jns
fcom
push
adc
mov
fdivrl
inc
test
scas
int3
xchg
sti
jne
xor
aas
bound
pop
cmp
call
pop
xorb
inc
inc
push
push
in
mov
cmp
aaa
jb
nop
sub
inc
div
mov
ds
jecxz
jb
jae
sub
lods
jle
xchg
inc
mov
mov
rcll
roll
test
rorl
xchg
lock
jmp
xchg
or
inc
push
imul
fs
pop
mov
push
aam
rcrl
xor
addr16
repz
in
push
and
es
daa
sbb
cwtl
mov
negb
and
dec
data16
xor
std
repnz
js
cmp
addb
repnz
das
daa
pop
jle
and
nop
aad
push
push
jno
data16
add
imul
add
sbb
daa
mov
or
sar
insb
in
mov
and
add
pushf
popa
fildl
out
fnstsw
mov
mov
xchg
sar
push
mov
jmp
pop
mov
fbstp
data16
cmp
call
les
movsl
out
fstpt
test
or
int
sti
pop
push
cltd
dec
cwtl
jg
mov
and
clc
mov
push
ds
jmp
std
jno
or
xchg
push
sub
cmp
imul
repz
cli
inc
lds
mov
sarb
inc
subl
adc
add
xor
mov
and
sub
les
fistps
test
dec
lret
cmp
pop
adc
lods
cmp
sbb
and
pop
jge
cmp
mov
sub
daa
out
add
pop
and
mov
out
push
pop
xchg
rol
gs
lea
cmp
mov
inc
aaa
push
sarl
lahf
fcompl
lahf
mov
aad
push
enter
loope
loopne
testb
jo
mov
cmp
outsl
mov
mov
jmp
inc
lock
cmp
outsb
dec
jle
stc
inc
inc
adc
imul
sbb
xchg
inc
add
les
testb
jg
call
xchg
pop
cmpsb
faddl
pop
call
fcomps
pop
xchg
fidivl
or
lret
mov
jmp
in
aaa
shrb
sbb
out
adc
pop
imul
fcmovbe
xor
aaa
jmp
lock
jne
xchg
movsl
pop
sahf
jne
dec
jmp
sbb
mov
and
scas
xor
arpl
jno
mov
lahf
xor
adc
hlt
insl
int3
dec
mov
mov
jle
sti
nop
dec
adc
ret
xchg
and
rcl
rolb
ljmp
mov
call
sbb
je
mov
pop
mov
sti
js
and
pushl
pavgb
dec
cmp
sahf
add
aad
sbbb
xchg
aad
adc
ret
hlt
outsb
and
out
movsb
bound
jns
add
add
push
cmpsl
cld
push
xchg
mov
aaa
test
xor
xor
inc
and
lret
sub
push
out
cmp
pusha
add
aad
fstl
push
mov
jl
mov
repnz
inc
pop
roll
xlat
xlat
push
sub
pop
cmp
xchg
ret
xor
jl
scas
or
add
push
xor
jle
sbb
shl
jne
push
ljmp
mov
pushfw
mov
or
and
cwtl
mov
fsubrl
clc
or
mov
xchg
mov
out
inc
cmpsl
cmp
popf
int3
adc
sub
clc
hlt
lea
adc
and
sub
sub
or
mov
lods
shl
mov
jnp
xor
mov
ficoml
pop
sbb
xchg
push
push
aaa
jbe
loope
or
mov
mov
es
cs
dec
sub
imul
adc
cmc
rcrb
ficoms
outsb
leave
and
mov
mov
xor
jbe
sbb
into
stos
or
into
inc
xchg
or
das
cmp
test
int
dec
popf
xchg
test
aad
jmp
in
daa
and
lock
and
and
jb
popa
sub
mov
iret
add
aam
hlt
pop
cld
sbb
jge
xor
loopne
cmp
jmp
scas
or
ljmp
outsb
out
test
bound
js
xor
ret
mov
test
sbb
sbb
push
sub
lods
mull
aam
insl
inc
insb
fstl
jecxz
push
and
lods
push
nop
push
loope
mov
pusha
pushf
movb
pop
push
lret
mov
scas
mov
pop
cli
adc
bswap
mov
out
test
jle
cmp
pop
add
sbb
stos
out
add
dec
adc
add
jle
fdivl
xchg
xor
jmp
aad
repz
cmpsb
ljmp
pop
jne
pop
mov
add
fst
mov
je
pop
sub
xor
inc
aaa
repz
cmp
or
xor
xchg
dec
pop
or
shr
xor
mov
stos
sub
mov
mov
in
pop
ds
addr16
cmpsb
shrl
pop
testb
enter
mov
push
lock
lea
pusha
stos
jo
pop
push
push
jns
mov
cwtl
ds
inc
add
fs
hlt
push
mov
and
imulb
cwtl
je
dec
mov
ret
popa
outsl
mov
push
mov
pop
and
mov
stc
cmpsl
dec
and
test
lcall
test
lret
subb
mov
mov
adc
ja
subl
dec
inc
pushf
cmp
ret
out
test
ret
xchg
pusha
movsb
push
sar
and
pop
aas
pop
inc
int
cs
add
outsb
outsl
fcmove
jb
aad
cmpl
push
push
stos
mov
sub
mov
push
and
cmp
scas
inc
repnz
loop
xchg
sahf
mov
icebp
jno
push
or
sbb
sti
mov
push
pusha
cltd
sar
xchg
cwtl
mov
push
mov
ss
aas
and
out
xor
sbb
sbb
push
cltd
xchg
inc
push
jns
sbb
hlt
mov
adcl
pop
stos
stos
sahf
cmp
pop
cmc
movsl
mov
insb
roll
cs
lahf
push
jge
lods
mov
insl
pop
sbb
pusha
jbe
enter
add
pop
inc
mov
in
lahf
gs
jb
fisttps
ds
mov
les
shrl
in
xchg
add
sbb
pop
inc
into
pushf
mov
pop
jg
and
sub
hlt
sbb
and
cmc
push
icebp
or
pop
aad
sub
jae
sarb
dec
mov
cmp
in
addr16
mov
sarb
xchg
adc
mov
xchg
icebp
mov
hlt
adc
dec
outsb
add
adc
in
inc
popa
ljmp
xchg
test
je
out
xor
sarb
adc
jb
pop
push
scas
mov
and
loop
std
lcall
jmp
insb
mov
mov
inc
test
pop
and
push
or
and
fsubrl
add
jb
dec
dec
mov
fmull
je
sub
mov
mov
decb
xchg
lds
jl
push
nop
sub
int3
xchg
gs
mov
fwait
das
ret
imul
shrb
add
stos
test
sub
jnp
sahf
pop
adc
outsl
outsb
hlt
jne
lret
pop
cmp
push
ret
jne
sbb
xchg
adc
frstor
pop
cmp
sarl
xchg
dec
mov
sti
fcmovu
cmpsl
sub
push
ror
jg
mov
out
pop
pop
jg
je
inc
inc
bound
pop
lods
mov
xor
test
pusha
mov
jmp
dec
sub
push
lods
push
add
push
cli
and
inc
pop
jne
mov
sbb
inc
pop
mov
push
rorb
inc
jle
out
mov
mov
out
lock
cltd
movsbl
jmp
dec
test
or
jnp
lods
imul
insb
mov
std
cvtpi2ps
ret
sbbb
jbe
loope
insb
dec
in
xor
rolb
add
jbe
jns
dec
popf
fldcw
add
insb
or
js
jbe
test
jecxz
push
jo
mov
jne
pop
sub
cltd
cmp
test
lea
mov
popa
cmc
xor
dec
je
pop
xchg
cs
xchg
and
in
imul
xchg
cltd
in
or
jmp
xchg
les
rorb
fadds
lret
jl
xor
jmp
rcll
mov
inc
pop
cmp
insb
xor
mov
add
add
sbb
xchg
out
pop
sbb
jecxz
mull
ret
xorl
movsl
push
or
leave
mov
xor
popf
scas
sbb
push
clc
xor
mov
inc
js
mov
jns
cwtl
mov
data16
jae
outsl
je
ja
jle
popa
jno
cmpsb
push
fidivl
movsb
xlat
cmpsl
mov
add
idivb
mov
clc
sub
les
imul
nop
pop
mov
stos
and
jle
push
add
addr16
and
fdivl
xchg
das
in
mov
and
cmp
jne
xchg
stos
aaa
and
arpl
ja
aas
adc
push
fwait
scas
ficomps
aaa
mov
leave
xchg
fisubrs
arpl
mov
jecxz
mov
jl
push
inc
pop
add
movsl
out
mull
cmp
das
pop
ljmp
dec
fildl
lahf
xchg
xchg
lds
add
out
imul
clc
lods
mov
cmp
pop
test
jmp
inc
push
mov
adc
push
mov
xchg
xor
es
or
nop
lock
mov
sbb
imul
jmp
aas
adc
addl
inc
rcr
adcl
push
inc
jno
lds
add
test
out
add
js
gs
add
mov
mov
push
jmp
and
mov
repnz
jb
cmp
adc
cwtl
repnz
out
std
mov
fldl
lods
cld
sbb
jle
xchg
cmpsl
rcl
mov
xchg
lds
loopne
sbb
leave
lret
lods
rcr
jmp
add
not
pop
jl
or
aas
sub
mov
jbe
mov
mov
out
mov
ja
btr
lods
xor
sti
lret
in
add
dec
mov
pop
sub
xchg
test
sbb
outsl
ret
fildll
ds
mov
sbb
int
aaa
scas
lock
or
shll
add
lock
inc
int
add
sbb
sbb
xchg
pop
mov
fisttpl
inc
daa
cmp
outsb
gs
sbb
out
enter
loopne
ret
push
add
or
rcrl
push
fdivrl
sub
mov
std
andb
inc
das
loopne
pop
push
jae
cwtl
sub
adc
and
push
push
jnp
aam
mov
sbb
into
jns
pop
scas
add
jbe
in
pop
les
leave
packuswb
mov
out
mov
add
dec
stos
aas
lahf
and
cmp
dec
cmpsl
jno
clc
jae
movsl
sahf
or
mov
cltd
or
fwait
add
ret
aas
jge
and
dec
arpl
jb
incl
push
in
divl
pushf
jecxz
ss
lds
repnz
cmp
repz
jl
jae
or
pop
out
repnz
dec
addr16
mov
hlt
sahf
jle
wbinvd
outsb
mov
mov
dec
stc
mov
incb
out
lahf
call
cli
lea
add
clc
lods
scas
lfs
mov
bound
jg
or
push
xchg
iret
std
sbb
daa
cmpsb
inc
stc
leave
add
les
mov
push
cvtdq2ps
ja
or
lds
adc
aas
fadds
or
mov
jnp
and
es
sbb
mov
jmp
add
xor
leave
push
push
ljmp
pusha
mov
mov
cltd
out
push
popa
push
dec
jmp
ds
push
xorb
cmp
or
inc
jo
sbb
cmpsb
in
fldenv
sbb
adc
mov
and
cmp
mov
jnp
fcoms
ret
in
mov
popa
mov
shlb
sbb
ret
push
cli
mov
cmp
pop
inc
loopne
xlat
in
xor
out
sbb
dec
lds
push
fidivrs
push
popa
jmp
jnp
add
in
xchg
data16
in
sub
push
aas
cmp
popa
imul
jle
pop
scas
rolb
dec
popl
inc
cmpsb
adcb
test
xlat
sahf
lods
pop
test
sub
push
cs
outsb
dec
or
add
add
add
lahf
test
sub
icebp
dec
ljmp
movsb
push
inc
pop
mov
aad
out
pop
out
je
or
movsb
data16
xchg
inc
cmp
jecxz
ret
cli
std
repnz
xchg
mov
lahf
xchg
adc
pop
inc
mov
enter
cwtl
lods
and
inc
sbb
bound
add
fwait
pop
decl
mov
and
and
sbb
cli
push
scas
xchg
dec
xor
iret
ss
push
pusha
xor
mov
pushf
sbb
push
lcall
or
adc
mov
push
xchg
pushf
mov
xor
aam
hlt
movsl
daa
mov
ret
iret
ds
rcrl
or
xchg
insb
cmp
sahf
pop
cmp
mulb
adc
adc
mov
mov
scas
mov
testb
pop
outsb
jp
cmp
adc
in
sahf
jno
and
fistl
insb
int
pop
mov
outsb
ss
lret
jne
xchg
int3
xor
xor
loopne
xor
adc
fcoml
arpl
mov
in
std
xchg
orl
gs
mov
callw
scas
icebp
pop
and
jno
mov
outsl
push
das
cmc
aam
cmp
cmp
fsubp
inc
and
fyl2x
clc
jnp
mov
out
xchg
sub
dec
jae
xor
imul
add
mov
jl
mov
push
inc
sahf
addr16
or
cmovg
dec
imul
sub
sub
clc
jno
xor
push
mov
cmp
sbb
or
gs
xchg
ret
inc
lea
mov
pop
repz
lods
and
loopne
mov
lcall
and
in
mov
xor
dec
std
or
and
mov
sbb
mov
popa
imulb
lret
movsl
jecxz
gs
mov
mov
mov
in
jp
mov
jmp
and
push
out
mov
adc
or
inc
push
out
jl
test
xor
inc
test
scas
xchg
or
lods
aaa
xor
ljmp
ja
mov
sbb
gs
int
xor
aaa
das
inc
pop
mov
into
cmpsl
jo
add
pop
mov
daa
xorl
adc
fiaddl
int3
sbb
lcall
mov
add
and
es
fldt
cmp
fcmovu
jb
insl
or
arpl
cmp
rcrl
mov
je
stos
sub
outsl
fstpt
xor
push
push
arpl
xor
aaa
mov
fucomp
fmull
mov
inc
ljmp
xchg
ja
mov
data16
xchg
out
out
out
clc
jb
dec
sarb
pushf
xor
ja
cmpsb
js
test
call
cmc
sti
push
pop
sbb
mov
xchg
pop
adc
xchg
ss
pop
push
xor
dec
sub
mov
sti
pop
dec
xlat
jle
mov
cmp
cmpsl
and
aas
jg
cmp
out
ss
shr
cmc
fadds
jl
int
adc
jmp
adc
adc
xor
leave
push
push
xor
sarl
jmp
xor
ss
push
lods
lock
movl
cmpsb
adc
jne
sarl
sbb
stc
mov
xchg
dec
mov
rcrb
incb
add
subl
movsb
nop
repz
dec
xchg
inc
std
in
push
cmpsl
add
mov
or
push
ret
ja
jecxz
push
dec
mov
out
push
imul
cmc
cmp
push
dec
fdivs
jne
and
dec
pop
roll
sub
mov
push
sbb
jg
cld
insb
mov
iret
jno
movsb
fsubrs
and
jae
movsl
or
movsb
mov
sub
cs
mov
in
out
lahf
ret
lahf
dec
enter
mov
lcall
adc
push
insl
adc
xchg
xchg
lahf
aaa
lock
daa
icebp
hlt
push
cmp
and
jle
jecxz
sarl
and
jmp
orl
push
outsl
aas
push
sbb
push
test
and
inc
pop
inc
fstpl
inc
ret
cmpl
ja
mov
mov
mov
jle
pushf
rol
lcall
jg
inc
aas
cmp
or
ja
mov
jp
cmp
fildll
test
mov
call
xchg
adc
pop
or
addr16
dec
adc
into
dec
lret
bound
pop
insb
fcomps
sub
add
mov
outsb
mov
inc
cli
sub
mov
adc
mov
add
dec
inc
hlt
aam
mov
cmp
cmc
adc
push
inc
jmp
out
jb
fnstcw
rcrb
mov
mov
js
push
push
fdivr
mov
out
in
inc
addr16
insb
fwait
mov
fsubrl
iret
ss
rorl
invd
aad
add
cmpsl
mov
inc
ror
in
aaa
jbe
sbb
mov
push
sub
ds
push
lea
lods
in
ja
or
fprem1
pop
sub
std
cmpsl
dec
push
lock
rol
inc
jbe
cs
into
inc
in
mov
shll
sbb
mov
push
adc
jmp
movl
add
push
push
cmp
lock
adc
mov
inc
mov
push
lret
cs
adc
addr16
test
dec
mov
fbld
cmp
xor
out
dec
add
add
mov
adc
push
fwait
mov
xor
repnz
pop
mov
fs
divl
and
or
sahf
ss
mov
divl
aam
addl
and
dec
jg
pop
push
jo
inc
pop
ja
pop
pop
lahf
ss
lods
imulb
cmp
xor
filds
push
cld
out
push
jbe
vmwrite
mov
push
lret
inc
in
sti
mov
add
test
adc
mov
shrb
fpatan
sbb
psubusb
or
repnz
xchg
imul
mov
jbe
cld
pop
cmp
add
push
sbb
jl
sbb
outsl
in
sub
ja
dec
and
loope
shr
push
mov
repz
icebp
inc
jns
mov
push
adc
jge
and
inc
stos
lret
jb
das
jno
int
jo
lahf
pop
and
inc
mov
jmp
shl
push
xchg
sarb
inc
jmp
xchg
or
mov
mov
dec
mov
outsl
movsl
notl
push
jno
mov
dec
sub
and
jns
lods
cmp
push
xchg
bound
xor
jg
jmp
aam
and
xchg
sbb
loop
jns
sub
addl
test
push
xchg
jp
stc
andl
jp
shr
cmpsl
cmp
ret
add
popf
add
or
icebp
sbb
adc
inc
dec
cwtl
adc
call
pop
pop
subb
mov
mov
jne
ds
clc
jae
mov
cld
mov
mov
imul
mov
or
ja
and
lcall
cmpsb
gs
and
cmp
leave
xchg
push
sbb
shlb
add
cmpsb
or
push
cmc
cld
adc
jmp
mov
pop
pop
or
out
mov
or
repnz
ljmp
adc
jo
cwtl
incl
sbb
adc
mov
cmpl
fnstenv
lock
out
stos
popa
cli
in
cmc
xchg
push
lods
cltd
sbb
sub
stos
loopne
mov
out
insb
fisttps
pop
mov
inc
mov
pushf
scas
dec
test
aad
inc
imul
xchg
and
push
jns
std
sub
push
dec
fisubrs
inc
test
adcl
mov
mov
mov
pop
jbe
icebp
pop
sbb
add
pop
cld
mov
aad
xor
loope
daa
dec
pusha
test
stos
es
jns
push
pop
push
jno
jmp
aad
std
out
xor
popa
mov
movsb
cmp
mov
sbb
stos
lret
addr16
push
xchg
push
dec
xchg
push
scas
mov
lahf
cmpsl
xlat
popf
aad
mov
cmp
xchg
push
or
or
xor
mov
add
out
cmpsl
js,pt
sti
test
orb
enter
pop
fistl
cli
dec
cwtl
test
es
pop
cwtl
and
add
ret
in
sub
mov
inc
or
mov
mov
pop
jbe
leave
imul
push
popf
inc
popa
mov
mov
std
jmp
das
das
xchg
mov
mov
test
and
push
pop
rolb
mov
fsubrp
divl
rorl
xchg
mov
jnp
sti
inc
add
jmp
jb
les
add
sbb
fwait
test
js
jnp
test
push
lock
movsb
mov
pusha
fisttpll
pusha
fbstp
mov
pop
inc
outsl
sbb
movsl
sub
movl
dec
cli
push
out
dec
mov
andb
inc
out
loope
es
xchg
mov
xorl
imul
stc
mov
sbb
in
inc
hlt
xchg
fildl
or
jmp
cmc
pop
adc
mul
loop
rcl
in
aas
xor
int3
test
cmp
xchg
loopne
outsb
nop
jp
std
mov
in
stos
xchg
lods
clc
sbb
repnz
lret
mov
arpl
insb
pop
sub
add
and
lret
insl
jmp
or
sub
ss
movsl
xchg
jp
sub
xor
shrl
aas
cmc
sbb
test
push
mov
cmp
push
iret
imul
add
aad
mov
daa
mov
lods
push
cmp
jmp
inc
xorb
xchg
jbe
nop
or
insb
mov
mov
adc
pop
subl
push
fcomps
lods
je
cli
subl
hlt
ljmp
pop
and
pop
cmpsl
add
mov
inc
sbb
sub
in
and
xchg
fisubrs
shrb
ljmp
js
jp
test
and
mov
test
cmpsl
sbb
mov
ljmp
js
xor
xchg
int
arpl
xor
out
imul
negb
adc
jo
insl
jecxz
sub
popa
xchg
xchg
and
jno
xor
call
lods
out
jno
inc
xor
jle
test
mov
dec
jp
loope
sub
fcoms
repz
xchg
fdivs
insb
inc
push
out
dec
notl
add
stc
or
push
inc
repnz
into
out
sbb
in
hlt
mov
test
xchg
push
mov
cmp
inc
lods
notb
outsb
out
lcall
lds
dec
pop
push
jns
push
cmpsb
add
mov
xchg
dec
movsl
fadds
adc
aas
data16
add
lcall
mov
xlat
fnstcw
aad
inc
add
ret
pop
lahf
popa
iret
xchg
movsl
pop
stos
pushf
push
sub
inc
andb
call
pushf
testb
out
retw
push
jmp
lea
rclb
outsb
jb
movsb
pusha
push
mov
insl
inc
cwtl
and
popf
mov
jecxz
fiadds
cltd
xchg
nop
push
inc
jmp
mov
repz
mov
call
jns
mov
add
outsb
clc
and
push
out
dec
fcoms
inc
or
lods
mov
fnstenv
push
fdivl
mov
push
inc
sbb
mov
sbb
cmpsb
jno
sti
mov
fisubrs
mov
aad
icebp
jnp
fisttpl
and
cmp
sarb
sub
insb
cs
or
add
add
mov
or
mov
fwait
or
cmp
dec
fists
insb
inc
fistpl
sti
or
das
or
popa
pushf
pop
jbe
shll
cwtl
push
sub
jge
aas
pushf
shrl
push
cmp
fnstenv
jl
jb
jo
jl
mov
addr16
jae
cmp
xor
push
adc
sub
inc
mov
xor
xchg
in
and
mov
inc
decl
call
arpl
or
sub
pop
fldt
shr
mov
daa
jbe
sub
sti
jecxz
stos
cmp
es
lea
cltd
mov
dec
sbb
scas
xor
fidivrl
jno
lret
mov
xorl
fs
inc
mov
iret
ret
insb
add
pop
and
cs
lods
mov
and
push
mov
mov
mov
xchg
lcall
mov
jmp
loopne
mov
sets
into
outsb
gs
popa
cld
or
dec
ljmp
xchg
sub
mov
ds
xor
daa
adc
add
mov
adc
lods
push
inc
jne
inc
popa
dec
push
pushf
mov
je
mov
sub
or
xor
or
adc
cmp
and
adc
shlb
inc
mov
jmp
dec
ja
sub
nop
mov
in
xor
adc
decl
or
fisubs
mov
or
mov
xchg
and
cmc
add
inc
fisubs
fbstp
and
shrl
testl
push
sbb
imul
enter
push
data16
ret
mov
jbe
call
jle
sahf
clc
pushf
cld
mov
sbb
orb
jp
sub
sub
je
pop
dec
mov
ds
int
jle
mov
dec
sbb
pop
mov
loopne
inc
dec
add
incb
mov
or
jnp
aas
mov
or
out
mov
lahf
push
inc
mov
sbb
fs
cmp
cmp
xchg
mov
jns
xor
inc
cmp
xchg
neg
out
dec
pop
sub
std
pop
add
jb
sahf
inc
call
and
ror
loopne
mov
dec
cmp
lcall
insl
cmp
fnstenv
dec
inc
pop
jae
push
div
xor
mov
mov
pop
xchg
sbb
cltd
sub
popf
sahf
icebp
adcl
mov
cs
and
ja
shlb
jmp
mov
cli
or
int3
test
xor
push
and
xchg
dec
fmull
push
xor
movsl
dec
dec
xchg
mov
shl
push
jns
hlt
mov
repz
ds
jne
hlt
mov
jg
stos
lea
mov
in
xchg
mov
rol
jle
inc
leave
addr16
loop
jecxz
roll
orl
sbb
ja
add
jle
lcall
xor
xchg
mov
ret
mov
outsl
adc
push
mov
popa
jmp
mov
mov
cmp
inc
mov
faddl
insb
shll
dec
cmp
mov
lods
pop
insl
fs
mov
add
add
shl
test
int3
or
mov
pop
cmpsl
inc
out
insl
es
in
insl
shr
jbe
pop
adc
std
jne
movsb
mov
in
out
lcall
in
mov
cmc
push
js
add
pop
jecxz
jle
push
jp
xorb
out
jle
test
addr16
out
lret
pop
int3
in
nop
push
xchg
enter
fadd
lcall
mov
addb
ss
stos
inc
int
popf
mulb
mov
int3
add
loope
cwtl
clc
das
icebp
lods
lds
jge
cs
test
lret
jae
in
repz
and
cmpsb
ja
mov
push
pusha
into
xchg
jo
pop
js
in
pop
popa
jmp
cmp
xchg
fnstenv
mov
push
add
xchg
jbe
lea
xchg
jmp
inc
inc
mov
movsb
sub
and
mov
ss
ror
add
sar
fldenv
or
sbb
aad
test
test
cmp
insl
push
or
cltd
sbb
cmpsb
and
push
mov
aad
jp
jne
scas
jae
add
mov
and
orl
cmp
jl
fistl
xor
push
pop
fisubrs
adc
xchg
jecxz
mov
jmp
sbb
scas
jo
xchg
cli
mov
jecxz
fsubl
push
nop
jecxz
ja
sub
mov
push
enter
or
xor
filds
xor
cwtl
mov
les
sub
mov
adc
arpl
testb
push
test
xor
fmulp
and
lods
pop
ljmp
stc
fisttpll
in
jbe
mov
dec
ret
jns
mov
repnz
aam
lcall
dec
inc
out
repz
rcrl
insl
cmc
aaa
in
lods
push
fwait
movsl
and
dec
xchg
ror
mov
movsb
jge
mov
loopne
xchg
add
fcoml
inc
pop
fs
cltd
add
stos
push
daa
push
in
pop
cmc
inc
fsubrl
xor
dec
jl
aam
movsb
ja
mov
or
jmp
add
pushf
add
mov
sbb
xchg
cmp
int
sub
lret
bound
in
je
es
call
xchg
cmp
dec
xor
add
push
movl
jnp
loope
cmc
mov
movsb
dec
mov
add
fs
push
and
lods
shl
notb
hlt
mov
mov
sub
inc
jle
cmp
sub
out
sub
arpl
push
xchg
sbb
mov
mov
jmp
repz
mov
test
les
pop
sub
in
jp
cmp
je
push
xchg
aas
dec
fwait
mov
adc
jne
aas
or
ret
cli
or
jns
cmp
cmp
scas
outsb
imul
sbb
sbb
test
call
test
sub
pop
push
aas
aam
ja
mov
and
xor
mov
fwait
popl
cli
rcrl
mov
ja
xor
push
push
shll
stos
xchg
aam
xor
mov
xor
mov
addr16
add
js
in
daa
in
cmp
mov
mov
jb
les
imul
cmc
ljmp
xor
xor
mov
mov
popl
test
fimuls
push
das
dec
fs
fisubrs
lret
push
rcrb
jg
fistpll
dec
dec
repnz
pop
out
pop
hlt
mov
cmc
mov
addr16
add
mov
sub
push
pop
mov
js
xor
aam
sub
sahf
ud1
pushf
shrb
clc
cld
mov
mov
popa
xor
aaa
and
js
xchg
aam
cmp
jp
aas
xchg
repnz
jb
jno
into
jbe
push
jne
add
adc
stc
jb
inc
mov
repz
out
dec
je
jge
xchg
das
out
xlat
xchg
fsubs
adc
dec
mov
mov
shl
data16
imull
or
lret
jne
adc
push
push
frstor
or
sbb
fildll
mov
push
push
sbb
flds
lret
sti
sahf
and
popa
push
in
insl
out
popa
and
xchg
call
incl
push
fwait
mov
iret
and
pop
ret
cmpsl
mov
divb
test
aam
jne
lahf
adc
and
jecxz
mov
xchg
jp
xchg
sub
jbe
and
pop
xor
inc
pop
loop
xlat
sub
xchg
enter
mov
pusha
or
fstps
xorl
test
xchg
leave
or
sub
xor
leave
mov
cltd
iret
xchg
mov
jae
mov
cwtl
push
jb
xor
pop
mov
loopne
sti
mov
loopne
mov
lds
xchg
scas
mov
xchg
stos
in
fadd
xor
dec
mov
fcomip
aaa
inc
pop
lret
pop
xchg
cmp
mov
cmp
repz
mov
mov
aas
lahf
or
dec
mov
jae
icebp
lcall
push
shlb
lahf
pop
jle
mov
imul
mov
ror
dec
scas
addr16
jnp
pop
xchg
add
clc
ja
pop
das
mov
jae
or
rcll
xor
add
cmpsb
sub
lahf
and
sbb
cmp
pop
lds
or
jmp
adc
rcll
or
lds
mov
aaa
adc
shll
xchg
cmp
mov
jne
xchg
push
ss
nop
mov
inc
fildll
filds
cmp
in
jbe
ret
lret
popa
jo
cwtl
dec
inc
cs
adc
addr16
mov
shlb
femms
add
mov
aad
adc
push
in
mov
mov
cmp
sbb
shlb
test
rorb
sub
shl
mov
mov
xchg
cltd
lds
inc
cld
xor
inc
dec
repnz
push
lds
leave
mov
std
in
fsubrs
fadds
inc
pop
repz
add
adc
movsb
aad
fcompl
nop
into
iret
pop
mov
stos
punpckhwd
jnp
pop
push
mov
add
cs
rolb
and
inc
rclb
adc
loopne
mov
or
addr16
packsswb
aad
cmp
pop
cmc
cmp
stc
lock
mov
repnz
lea
fidivl
dec
ja
stc
fwait
jp
xchg
add
imul
out
andl
test
mov
outsb
fstps
insl
sub
mov
andl
sarb
inc
shlb
insl
aaa
pop
cli
cmp
sbb
insl
stos
in
sub
xchg
xchg
mov
jns
push
out
loop
mov
repz
iret
mov
adc
andnps
out
and
mov
leave
sbb
bound
clc
in
outsb
sub
sahf
xlat
and
cli
scas
push
sti
inc
jmp
enter
inc
mov
pop
pop
cltd
push
jge
jg
pop
push
shll
shlb
and
push
data16
outsl
lods
les
push
dec
ficoml
test
mov
xor
inc
mov
add
push
mov
jne
mov
mov
mov
adc
fidivl
lret
aad
aad
stc
inc
aaa
mov
mov
sbb
add
mov
stos
jns
add
int3
aaa
sbb
int3
push
int3
sub
mov
aam
aam
mov
shl
call
pop
push
jno
mov
jb
cld
or
cld
imul
fwait
shlb
mov
ss
jb
cli
push
fdivs
add
insl
add
outsb
add
add
push
add
add
add
outsb
add
add
outsl
add
add
add
outsl
add
add
outsl
add
add
add
insb
insb
add
popa
outsb
jns
add
jne
add
add
add
jb
insl
imul
add
add
ja
imul
add
imul
add
add
add
push
add
outsl
add
imul
je
imul
jae
add
jo
outsb
imul
add
jns
jae
popa
jb
add
insl
outsb
add
jb
jo
outsb
je
add
add
add
insb
popa
jb
gs
add
jae
add
jns
add
add
data16
add
insb
popa
push
add
bound
je
jae
jns
add
imul
add
add
add
arpl
push
add
add
je
gs
ja
outsl
