push
mov
add
sub
mov
call
mov
mov
cmp
je
mov
mov
mov
xchg
mov
xchg
mov
sub
sub
mov
pop
pop
mov
sub
call
mov
push
mov
mov
sub
mov
pop
sub
mov
mov
pop
push
push
mov
mov
sub
pop
pop
xchg
call
add
inc
jmp
add
add
jmp
mov
sub
mov
ret
mov
add
nop
add
nop
mov
nop
mov
push
mov
pop
mov
sub
push
mov
pop
pop
mov
xchg
sub
mov
mov
pop
sub
push
mov
mov
sub
pop
pop
mov
mov
mov
nop
mov
mov
mov
mov
sub
push
pop
pop
inc
mov
sub
mov
pop
sub
mov
mov
pop
nop
mov
sub
mov
pop
push
push
pop
pop
add
nop
cmp
jb
lea
mov
sub
ret
add
cmc
sti
or
adc
pop
add
jno
jle
lret
jb
test
std
out
lcall
cmp
mov
jno
aam
incl
jg
mov
or
in
or
sahf
in
jb
repnz
cmp
jno
les
mov
xchg
scas
mov
jg
mov
aaa
movsl
ja
jle
push
adc
imul
pop
in
std
jno
aam
lcall
inc
adc
jo
std
jno
aam
lcall
jg
mov
stos
rcr
jle
lret
inc
jne
add
mov
jg
mov
jmp
adc
je
xchg
sbb
jbe
hlt
test
cmp
jb
or
cmp
add
das
mull
and
jle
jb
insl
ret
jle
loop
data16
jle
stos
or
jb
mov
std
jno
xlat
cmp
notb
mov
or
jbe
inc
xor
sti
jle
xchg
mov
or
sbb
ret
aaa
mov
inc
out
inc
imul
fidivs
jle
jno
jle
jno
jle
jno
jle
mov
mov
stos
stc
scas
das
movsl
mov
test
mov
cmpsl
add
das
movsl
add
jmp
inc
loopne
mov
inc
clc
jb,pt
aad
test
out
pusha
mov
jecxz
xlat
dec
repnz
jmp
inc
icebp
jno
cmp
out
pusha
jb
aad
test
loopne
mov
pop
aad
in
hlt
pop
fidivs
insb
out
loop
jb
aam
std
imul
std
jno
jle
repz
push
out
stos
std
jno
jle
fs
jno
jg,pn
hlt
xchg
xchg
cmp
in
mov
std
jno
add
hlt
lods
xchg
cmp
in
mov
std
jno
add
hlt
xchg
cmp
in
mov
std
jno
add
test
mov
fstl
mov
push
mov
std
jno
add
test
mov
lock
cmp
in
mov
std
jno
add
test
cwtl
imul
dec
std
test
push
adcl
mov
jb
mov
jg
jno
aas
lock
or
aam
std
jne
add
and
mov
jp
hlt
or
adc
jae
mov
fadds
mov
hlt
loope
xchg
jb
adc
jb
jns
add
jg
inc
and
jae
mov
fdivs
mov
sub
mov
les
je
xchg
je
aas
pop
int
ficomps
testb
adc
std
jno
mov
mov
jg
jb
xlat
adc
xchg
dec
jg
jno
test
mov
lret
incl
out
add
mov
inc
jg
jb
jle
pop
pop
mov
cmc
call
or
jle
mov
std
mov
mov
les
dec
orb
test
mov
fdivrl
dec
add
push
mov
xlat
jg
mov
lods
rcr
jg
mov
cld
xchg
cmp
sti
adc
pop
mov
imul
or
adc
in
ss
jg
je
aas
jb
push
cmp
out
sbb
mov
xchg
cmp
test
aam
lret
pop
movsl
mov
jg
jb
push
fbstp
add
lds
in
mov
adc
lret
ja
cmc
cmp
or
pop
and
lds
jp
mov
je
jl
jge
inc
std
int3
addl
add
out
in
mov
xchg
pop
out
push
test
sub
jno
or
jb
mov
imul
sbb
lea
std
jno
enter
cmc
add
inc
mov
mov
std
repnz
xchg
jg
or
mov
cmc
pop
test
add
push
jb
out
rcrl
adc
test
jg
cwtl
or
cld
divl
and
xchg
cmp
ret
in
sub
adc
std
jno
add
jp
aad
jmp
mov
add
sbb
adc
scas
jg
push
sbb
std
shll
xchg
cmp
test
jg
scas
inc
pop
std
sub
outsb
imul
dec
pop
xor
pop
sub
das
cmp
repnz
sarb
je
ds
addr16
jb
jg
xor
ja
mov
imul
adc
jae
mov
std
jno
push
push
fwait
push
jmp
push
aad
out
into
jg
scas
iret
cld
std
jno
mov
repnz
lret
je
rcll
pusha
ja
cmp
and
pop
gs
fisttpll
adc
jmp
shl
fidivrl
andl
jo
mov
or
cld
loopne
