xchg
xchg
push
xchg
xchg
xchg
xchg
mov
xchg
xchg
sub
xchg
mov
mov
mov
sub
mov
sub
mov
push
pop
pop
sub
mov
push
pop
pop
jmp
movsb
add
sarl
data16
xor
push
jp
adc
cltd
push
ret
add
push
sbbb
xor
add
or
pusha
scas
pop
mov
or
shr
xchg
or
sub
xor
test
subl
pop
mov
stc
add
and
fld1
inc
mov
add
out
push
cs
pop
js
cld
add
and
sar
cmp
andl
pop
mov
xor
shll
loopne
mov
nop
pop
movl
outsl
ficoms
adc
out
cmp
bound
or
adc
js
cmp
mov
repz
lcall
jb
push
outsl
push
add
xchg
push
rcrl
or
adc
inc
cld
cmp
je
push
adc
ds
mov
jmp
gs
jne
and
in
and
mov
aaa
add
pop
push
push
add
cmp
in
addb
fnstcw
add
sahf
fisttpl
out
cmp
push
xorl
inc
xor
addb
push
fldl
push
lock
xchg
into
pop
mov
xor
add
ja
push
pusha
push
inc
lret
jl
xlat
dec
adc
fcoml
lods
gs
sbb
imull
dec
mov
cmp
aas
add
sbb
sub
outsb
mov
imul
push
push
dec
outsb
or
push
cld
mov
add
test
and
mov
test
adc
cltd
sbb
push
fxch
xor
stc
pushf
pusha
push
loope
xchg
push
cld
addb
cmc
mov
inc
sub
mov
adc
cmp
mov
stc
adc
dec
jmp
pop
add
adc
jnp
mov
push
lcall
sbb
jo
shlb
push
stos
adc
adc
sbb
cmpsb
sub
dec
and
push
jg
std
mov
pusha
in
xor
mov
xchg
or
fstp
mov
sub
or
cmpsl
xchg
fsubr
fmulp
aad
mov
add
and
dec
pushl
pop
nop
add
adc
imul
push
mov
dec
push
lret
jno
ss
or
add
xchg
rol
bound
sbb
popa
rcrl
ret
adcl
out
pop
inc
push
mov
xchg
jno
movsl
pop
inc
sbb
jmp
adc
ss
or
sbb
pop
and
sub
push
stos
or
push
stc
push
sub
ds
pusha
leave
popa
pop
xchg
out
or
rol
adc
rcrb
xor
repz
fsub
jle
call
and
jg
iret
or
xor
cmp
cld
mov
xor
or
pop
pop
cmpsb
or
push
addb
aam
out
loopne,pt
scas
pop
push
or
push
sbbb
pusha
lock
sbb
ja
and
sbb
and
test
inc
movsl
cmp
nop
mov
dec
aas
mov
push
cltd
push
push
xor
ss
cwtl
ss
mov
jb
repz
sbb
dec
add
in
lds
roll
ss
and
shll
imul
mov
adc
jns
insb
and
loope
enter
add
pusha
invd
nop
in
fs
mov
adc
xor
iret
push
adc
cmp
adc
lds
in
stc
xor
shlb
jb
das
jb
in
mov
add
or
adc
test
es
pop
jo
aam
in
cld
mov
push
dec
fs
mov
add
mov
jl
push
mov
out
or
mov
mov
pop
xor
mov
push
push
push
mov
inc
lret
mull
ret
adcb
mov
sub
adc
add
sub
pop
je
dec
jl
inc
lret
and
pop
mov
dec
cltd
sub
out
add
jns
push
push
or
je
insl
push
mov
mov
cmpl
enter
or
sbbb
mov
fstl
and
pop
jns
add
mov
cmp
int
addr16
inc
mov
push
rcr
xchg
mov
inc
jns
mov
ret
loop
jge
dec
sub
xchg
or
push
int
and
das
fimull
lea
jae
adc
mov
sarb
ds
cmpsb
xchg
dec
xchg
inc
xor
jmp
cs
push
jecxz
push
push
stos
mov
arpl
pop
xchg
and
dec
adc
sub
clc
test
dec
icebp
call
push
sbb
inc
or
mov
xlat
and
xor
and
stc
pop
add
sarl
mov
xor
aad
stos
jmp
mov
sub
out
mov
or
andb
sub
pop
lcall
fiadds
or
pop
leave
sub
add
lds
or
fidivrs
nop
push
cltd
cmp
xchg
loop
lea
gs
aam
addr16
ror
lods
out
or
dec
cld
push
popa
xchg
int3
andl
movsb
and
fadds
jbe
xor
int3
mov
xchg
rorl
add
mov
sahf
mov
or
cmp
out
jg
jo
push
mov
mov
mov
push
ficomps
push
adc
xchg
adc
rcll
xchg
xor
push
mov
lea
adc
cmp
int
push
or
and
aad
mov
mov
mov
imulb
aam
arpl
mov
mov
je
push
jbe
rorl
repnz
inc
mov
xchg
mov
repz
xor
imul
fcmovbe
cmp
add
bnd
pushf
jnp
fnstcw
imul
adc
or
in
jne
mov
sub
jge
mov
or
ljmp
outsl
fs
xchg
dec
sbb
flds
cmp
mov
dec
aaa
movsl
add
add
sti
nop
jmp
dec
arpl
loop
add
sub
jge
ds
pushf
movsl
dec
mov
jg
cmp
aam
pop
pusha
cmpsb
mov
xchg
push
mov
dec
xor
jge
arpl
ret
pop
cmc
inc
jmp
add
dec
push
dec
cmp
bound
sbb
rclb
ljmp
mov
movsl
jle
dec
rorb
call
adc
cmp
mov
jne
scas
pop
mov
imul
xchg
push
lock
inc
loope
sub
mov
inc
sbb
and
rorb
stos
rcl
hlt
sti
pop
addr16
jb
int3
push
pop
arpl
inc
repnz
cmp
mov
add
add
jmp
pop
rorb
or
ret
cmp
adc
sub
cld
adc
repnz
and
inc
shl
inc
xor
popf
into
dec
cmp
shrl
jmp
and
test
pop
lods
xchg
loope
xor
mov
adc
xor
add
stc
stc
in
adc
xor
loopne
sbb
adc
fadd
jecxz
mov
in
rcrb
ljmp
cmp
add
adc
fisttps
out
outsl
sbb
add
sarb
cmp
repz
outsb
jb
jmp
ret
sbb
shll
inc
or
xchg
xor
nop
scas
xchg
aas
sub
inc
add
adcl
es
pushf
aaa
nop
jae
push
sub
outsb
jl
imul
dec
adc
dec
cmc
mov
repz
decl
call
lea
push
adc
ss
fldt
mov
sbb
add
sub
xor
and
xor
cld
add
loop
pop
jae
mov
add
fiaddl
fsubs
call
gs
sbb
adc
push
jmp
in
inc
push
and
insb
icebp
sbb
jle
dec
xchg
and
push
and
or
lret
sub
ret
nop
adc
das
mov
pop
inc
ds
adc
cld
cmpsb
xchg
lods
sub
loope
xor
clc
dec
jo
adc
pushf
lret
sbb
push
mov
popa
in
xor
or
outsl
jns
jp
jns
adc
out
ds
adc
cld
mov
clc
sbb
and
jns
enter
xor
lock
inc
stc
sahf
push
or
xor
aam
and
movsb
out
divb
enter
and
push
sbb
out
sbb
js
lods
push
mov
out
mov
mov
add
xor
fwait
jo
pusha
les
and
sbb
fsubs
mov
fs
subb
ret
nop
mov
push
push
out
popl
adc
getsec
inc
je
cmp
in
mov
mov
pusha
cmp
and
roll
xlat
rclb
add
test
push
and
mov
dec
mov
inc
lret
add
xor
movb
pop
sahf
arpl
cmp
aam
stos
mov
cmp
inc
je
outsb
mov
pop
push
rolb
xor
pavgb
mov
rcll
sbb
adc
jle
push
mov
xor
movsb
idivb
out
or
xor
pop
shrd
into
or
cmp
dec
test
ss
int
or
outsl
outsb
pusha
push
test
jo
out
test
call
add
jne
mov
lock
rclb
pop
mov
xchg
mov
jae
push
test
mov
cmp
mov
call
scas
insb
push
mov
lock
jnp
mov
lcall
pushf
sub
sbb
mov
rorl
dec
add
cmp
pop
adc
push
adc
roll
cmp
test
sbb
ret
cli
jmp
jle
mov
inc
inc
push
push
jmp
jmp
mov
subb
fs
xor
jmp
loop
pushf
aas
sbb
add
call
dec
bound
mov
xor
xor
leave
cmpsb
jne
sbb
lea
cld
inc
pop
jae
aam
pushf
jmp
pop
push
out
jp
pop
cmp
dec
push
mov
aaa
cwtl
sarl
ja
shll
loopne
movb
imul
mov
shll
mov
sbb
lret
pop
inc
mov
sbb
cmp
nop
mov
or
fistpl
add
dec
add
jne
sub
mov
sbb
loopne
imul
lret
pop
lret
scas
arpl
sbb
lahf
xor
repnz
push
icebp
imul
shll
or
xor
stos
movsl
int3
int3
lods
mov
push
es
pop
push
jb
js
lods
push
cmpsb
sub
adc
sarb
sbb
gs
idiv
jmp
loop
inc
jns
push
adc
xor
jns
add
jle
dec
sahf
pushl
jp
push
sub
push
pop
jecxz
mov
add
sbb
shll
clc
notl
push
sub
in
stos
push
or
cmc
addb
les
xor
stc
arpl
jle
sub
jle
adc
in
sub
iret
xor
sbb
test
jmp
adc
nop
sbb
mov
xor
cmp
dec
repnz
mov
lock
je
mov
ret
sbb
fwait
inc
and
mov
sub
nop
adc
and
mov
sub
add
loope
or
add
sub
movsb
lds
orl
mov
lods
std
popf
xor
fs
mov
sub
inc
pop
dec
dec
cmp
add
push
in
repnz
loop
mov
enter
test
or
daa
push
jnp
fcmovne
mov
adc
insl
sbb
inc
repnz
mov
jecxz
insb
enter
or
pop
lods
imul
pusha
ds
xchg
shlb
jo
add
popa
push
adc
fildl
push
sar
mov
jnp
loopne
mov
cwtl
pop
insb
call
sub
outsl
les
sbb
xchg
lcall
je,pn
inc
sub
push
adc
cmpb
aaa
loopne
or
jb
cs
or
dec
jp
sub
int3
cmp
jle
jne
mov
mov
xor
inc
sbb
inc
lods
fnstenv
je
adc
mov
cs
mov
hlt
add
daa
push
and
js
cmc
inc
mov
pop
xchg
sub
stc
mov
inc
js,pn
jecxz
lret
and
cmpsb
adc
das
cltd
xchg
xchg
repz
mov
movsb
jmp
ljmp
push
les
adc
and
mov
rclb
cli
ljmp
push
adc
sbb
fmul
cmp
jle
dec
shrl
sub
cld
push
jbe
insb
mov
push
dec
mov
ss
lock
fistl
dec
arpl
mov
mov
push
or
stc
je
mov
jg
test
inc
leave
sub
mov
stc
pop
inc
lea
inc
pop
jmp
hlt
add
pop
adc
dec
sbb
xor
daa
adc
popf
idiv
or
jg
hlt
popf
out
scas
fdivl
fs
daa
push
fsts
fldcw
or
add
adc
pop
aaa
jae
in
dec
cs
sub
dec
hlt
cmp
outsl
push
js
sbb
je
lret
adc
push
aam
cmp
lea
add
xor
xchg
pop
inc
out
xchg
cmpsl
mov
cli
sub
lcall
inc
mov
dec
xchg
add
outsb
xchg
sbb
mov
lahf
loopne
dec
sbb
movsb
xlat
in
mov
adc
pop
imul
and
hlt
lods
push
call
or
lret
push
mov
mov
sub
push
cmpsb
push
push
test
jno
and
mov
movl
cmpsb
add
pop
and
or
pop
int3
pop
push
cwtl
sub
test
sahf
cli
sub
pop
push
mov
pop
pop
addb
daa
xor
add
sub
les
fdivrs
test
in
mov
int3
mov
sub
orl
test
fsubrl
inc
mov
push
repnz
push
or
xor
jge
jne
fistps
mov
adc
cmp
nop
or
pop
sbb
nop
or
xor
adc
mov
test
cmc
repnz
outsb
jbe
fs
andb
lods
xor
addl
add
test
inc
pushf
sbb
nop
mov
jae
in
mov
nop
stos
sbb
sti
cmp
jo
xor
int
int
enter
add
arpl
fwait
imulb
xor
sub
mov
sub
push
cmp
ror
adc
mulb
cmp
inc
fwait
or
sub
mov
xor
popf
lret
leave
mov
push
mov
add
and
and
arpl
inc
iret
into
out
jmp
push
xchg
dec
mov
push
lret
subl
mov
mov
ja
cmp
jbe
adc
aad
mov
clc
sub
mov
push
mov
inc
dec
cli
ret
fiaddl
sbb
push
and
adc
les
or
scas
pop
sbb
inc
and
les
push
call
add
and
jp
popa
call
dec
scas
xchg
mov
lret
loope
ret
sbb
add
push
inc
dec
add
mov
sbb
add
sub
xor
sub
enter
das
push
mov
orl
sbb
pop
jl
ljmp
sarb
into
in
mov
sub
aas
cltd
mov
aaa
sbb
enter
fiadds
fsubs
push
mov
sub
lock
fnstcw
or
rorb
test
mov
cmp
loopne
dec
mov
loopne
push
pop
std
xor
dec
dec
mov
push
ret
adc
mov
gs
iret
cmp
loope
adc
in
jle
add
mov
or
and
out
mov
adc
shlb
xchg
add
sbb
repz
cmp
pop
mov
mov
and
cwtl
pop
cmp
push
jno
out
call
je
pushl
clc
sahf
repz
neg
sub
push
jg
in
out
push
dec
dec
pop
adc
sbb
push
pop
push
xchg
mov
insl
cmpsb
sti
test
sub
cwtl
dec
mov
lock
call
cmp
sbb
bound
mov
mov
jbe
push
aad
stos
sbb
xorb
jle
jl
test
outsl
sbb
ficoml
daa
push
adc
fsubrs
jb
mov
sub
push
mov
int
xchg
fdivrs
push
js
push
leave
sarb
cmp
addr16
cs
adc
inc
dec
ljmp
push
push
lock
push
pop
dec
or
cmp
call
push
sub
push
mov
and
out
add
or
push
mov
lcall
jmp
dec
push
jmp
mov
jno
cld
loopne
push
inc
push
pop
add
orl
or
fs
jnp
xchg
mov
adc
arpl
jge
leave
movsl
movsb
jns
in
out
pop
movsbl
fadds
cltd
pop
sbb
mov
or
mov
mov
dec
pop
and
jnp
daa
push
xorl
add
xor
and
sbb
sbb
jo
insb
imul
js
aas
ret
xor
dec
jg
inc
push
cmp
or
inc
test
je
data16
test
out
cmp
ror
mov
xchg
fwait
test
ret
mov
mov
test
sub
jne
in
adc
xchg
mov
add
lcall
leave
cmp
xor
call
ret
jns
aas
call
mov
pop
mov
jb
nop
les
inc
push
aas
or
add
je
arpl
and
pusha
mov
pushf
lock
pushl
mov
pop
call
fiadds
push
xor
xor
add
imul
int3
xor
stc
lds
jg
mov
ret
in
cmpsb
xchg
push
mov
sub
cmp
mov
jb
cmp
cmpsl
test
jge
or
test
fnstenv
aas
ljmp
std
loop
sti
or
insb
add
inc
sub
call
pop
push
ja
lret
lret
or
hlt
jg
mov
sub
inc
hlt
fidivl
call
rorb
out
cmp
cmpsb
lret
lea
adc
add
data16
int3
je
call
es
and
or
mov
inc
xchg
mov
in
add
fs
dec
stos
shll
in
jp
jmp
lds
or
call
mov
adc
test
cwtl
fisubs
popa
sub
push
int
pop
mov
inc
mov
push
dec
or
nop
call
mov
pop
inc
loopne
mov
clc
leave
jnp
jno
or
out
cmp
mov
into
inc
xchg
pop
jle
lret
mov
ss
or
test
in
jmp
add
outsb
adc
mov
mov
mov
fdivrs
mov
push
push
in
dec
dec
or
push
fdivs
add
cs
sbb
mov
push
stos
xchg
frstor
mov
stc
insb
push
xor
cmp
xor
push
dec
mov
popf
in
mov
mov
icebp
xor
mov
clc
add
daa
lea
mov
nop
xchg
pop
cmp
push
mov
mov
scas
sbb
jnp
mov
push
icebp
inc
and
aad
icebp
xchg
mov
pop
cs
or
jnp
mov
jbe
mov
js
push
daa
or
push
loop
dec
and
fcompl
or
into
xor
bswap
push
jp
das
inc
jl
dec
cld
enter
pop
and
lahf
icebp
mov
push
dec
ret
push
cltd
add
or
xor
cld
je
and
mov
setne
insl
push
scas
jp
pop
cmpsb
ss
mov
lahf
inc
push
adc
daa
xchg
pop
cmp
mov
adc
fs
inc
and
dec
mov
imul
fdivrs
inc
sbb
pop
mov
xor
push
cs
test
adc
andl
sbb
push
mov
rol
inc
cld
std
inc
mov
pop
repz
mov
ret
mov
dec
iret
je
imul
push
push
shr
nop
insb
test
pusha
mov
push
call
inc
push
sub
out
cmp
or
sbb
and
cmp
cmp
dec
js
por
jae
pop
scas
sbb
dec
jge
gs
lds
cmpb
push
dec
movsl
sub
pop
pop
dec
loope
imull
sub
pop
jl
push
add
sbb
push
mov
jne
out
adc
idivl
das
pop
xchg
jno
cltd
sbb
sbb
lock
sbb
roll
add
and
loop
rclb
mov
xor
jl
adc
loop
mov
mov
inc
dec
xor
pop
mov
ss
add
shll
inc
sarl
cs
lods
fdivs
insb
loope
cltd
leave
push
pop
ret
push
and
cmp
cmpsb
lods
mov
adc
fistpll
pop
push
or
mov
insl
push
insb
lds
sub
and
and
ljmp
adc
jmp
jo,pn
or
cmp
inc
or
je
je
test
sub
and
int
add
aad
push
daa
jmp
jne
scas
ret
mov
pop
outsl
xchg
fs
test
adc
in
in
or
cmp
std
xor
and
add
push
in
push
inc
call
dec
xor
je
lea
jns
lods
sbb
gs
hlt
mov
or
stos
jge
sub
aaa
lea
pop
lods
repnz
cmc
inc
testl
jle
das
dec
sbb
lods
push
jnp
cwtl
in
sbb
dec
mov
push
xor
mov
xchg
scas
fstl
ret
out
jg
push
push
and
fimull
add
rcrb
sub
mov
fdivrl
add
mov
add
orb
add
stc
inc
fmuls
mov
dec
mov
scas
sub
nop
dec
negb
jecxz
call
and
fdivl
ficoms
inc
pop
dec
das
fstl
xchg
mov
xchg
or
ds
nop
std
orb
rcll
xchg
push
adc
mov
shlb
push
in
jmp
xor
fs
mov
shrl
add
lods
cmp
and
fdivs
imul
std
je
movsb
push
sub
inc
or
mov
xor
jb
mov
or
sbb
xchg
mov
loope
negl
dec
mov
test
dec
mov
or
inc
repz
push
lock
adc
dec
inc
push
and
das
popa
repnz
add
adc
ss
xchg
sub
or
adc
insb
mov
sub
sub
pop
xchg
insb
aas
adc
popa
lret
aad
shlb
imul
xchg
fsubrl
xchg
lsl
adc
fcmovnb
jne
push
ljmp
xor
imul
mov
pop
inc
rclb
pop
mov
sub
dec
sbb
loope
push
mov
mov
repz
dec
mov
pop
dec
dec
add
mov
inc
in
pop
cmp
xor
sub
adcb
xor
pushf
iret
lods
scas
repz
xor
imul
push
mov
rcr
in
cltd
and
shl
mov
popf
mov
das
pop
out
xchg
adc
cmc
xor
divl
xor
add
rcrl
push
int
push
test
jnp
clc
dec
cmpsw
mov
lds
lods
push
stc
aad
sub
or
adc
test
jle
pop
sub
jmp
mov
xor
push
mov
pop
and
ficoms
stos
add
xor
sbb
cs
cs
mov
inc
mov
pop
and
in
mov
outsb
push
add
loop
in
sub
ret
mov
repnz
fwait
in
jno
loope
mov
std
dec
rcr
scas
je
push
mov
mov
xchg
lret
scas
int
jl
xchg
loopne
xchg
adc
clc
insb
cltd
mov
popa
mov
mov
bound
push
bound
lds
push
roll
dec
mov
cmp
test
push
shll
mov
adc
enter
lods
push
data16
enter
lret
sub
fsubrp
subl
jae
sub
into
clc
xorl
movsl
stc
jae
push
mov
add
enter
adc
adc
rcrl
orps
add
or
push
or
lea
push
inc
dec
dec
adc
out
mov
sti
sub
xchg
add
push
and
or
iret
std
jecxz
xlat
xor
jns
subl
mov
sbb
xor
call
push
sub
popf
aaa
mov
mov
cmp
push
in
jne
pop
cmpsb
insb
mov
sub
xor
aam
mov
lods
imul
push
fwait
lods
mov
xchg
xchg
movsb
push
sbb
sub
inc
and
adc
call
mov
cltd
sub
insl
cmpsb
in
clc
pusha
lret
inc
testl
cwtl
add
adc
mov
test
mov
in
inc
sub
rcpps
cmpsb
gs
jmp
mov
add
adc
mov
jb
jbe
xor
or
lock
push
rorl
int3
test
insb
stc
fcompl
repnz
adc
and
lahf
inc
fcoml
jno
fwait
call
cmp
test
lahf
or
sub
xchg
std
sbb
call
flds
cmp
lds
vpmaddubsw
xchg
jbe
into
dec
mov
jle
push
add
cmp
cmc
push
jo
dec
adc
adc
jae
ror
sahf
popf
dec
sub
mov
add
adc
dec
shlb
add
cmp
enter
xor
lahf
push
orl
out
movsb
adc
enter
ret
ss
add
push
and
js
xchg
notb
mov
xlat
out
xchg
push
cs
jne
sub
and
iret
or
mov
dec
cwtl
push
adc
jb
call
ret
push
pop
push
and
daa
clc
adc
imul
test
push
into
je
push
jno
cmp
fisubrs
popf
test
xchg
cwtl
scas
mov
inc
add
imul
or
pop
je
shll
js
fisubs
pop
mov
je
inc
xor
shr
adc
in
imul
jnp
and
sbb
cmp
inc
mov
sar
add
add
mov
addr16
xor
push
loope
sub
in
adc
pop
loopne
int3
notl
arpl
mov
stos
jno
add
cli
nop
sub
adc
or
call
loopne
cmp
xchg
cmp
mov
push
add
jl
mov
mov
fs
cmp
push
sbb
push
or
mov
cli
imul
xchg
mov
add
jns
pusha
sub
inc
pop
bound
je
pop
jl
pop
jno
movsl
loopne
jno
js
mov
movsl
pop
ss
inc
sti
and
adc
mov
xor
sub
cmpb
add
mov
add
repnz
xchg
es
push
pop
cmp
or
mov
push
dec
sub
cld
lahf
cmpb
sbb
mov
ljmp
add
mov
push
dec
rclb
dec
adc
add
je
xor
xor
int3
clc
stos
jl
gs
adc
cltd
pop
mov
jo
mov
adc
in
jno
mov
and
pop
add
inc
jg
jp
or
push
rcpps
call
orl
push
loope
cmp
roll
mov
clc
daa
roll
cmp
add
mov
sbb
mov
xor
shr
sbb
mov
sub
cmp
add
dec
mov
jle
jne
incb
repnz
mov
orl
ret
add
xor
jnp
jle
aad
ret
add
cmp
loopne
arpl
test
lods
cmp
das
xor
mov
hlt
loop
pusha
sbb
je
loopne
pop
and
and
sbb
or
mov
add
and
sub
add
and
push
cwtl
pop
inc
int3
adc
mov
mov
pop
pop
ss
jl
mov
dec
jmp
xorb
repnz
push
sbbl
lret
test
dec
stc
dec
push
add
jp
inc
mov
jb
jp
mov
mov
stc
je
fs
inc
mov
jl
adc
adc
mov
cmp
xor
add
xor
jmp
clc
iret
rorl
fucomp
outsl
push
pop
adc
es
clc
pop
cmpsl
adc
push
pop
inc
popa
shll
xchg
xorl
sbb
mov
fcompl
jmp
inc
cmpsb
or
call
push
loop
pop
das
les
push
outsb
in
leave
and
xchg
xor
mov
std
adc
sbb
jne
es
sbb
shl
mov
negb
ds
jbe
mov
imul
popa
pop
add
sbb
push
data16
push
ret
sub
and
cmp
or
insl
cmp
sbb
js
insl
ss
or
cmpsb
push
mov
sub
push
and
scas
and
movb
stos
arpl
pop
pop
pusha
mov
pop
in
mov
sub
jmp
sbb
adc
popa
mov
aaa
xchg
icebp
sub
inc
das
jne
mov
lods
jecxz
icebp
or
jno,pn
jge
inc
adc
scas
xor
dec
shlb
jnp
or
test
in
xchg
imul
dec
lock
je
mov
cmp
adc
shlb
rcrb
xor
fbstp
imul
dec
xor
es
hlt
push
jb
fdivr
push
popf
imul
mov
or
pop
js
or
sub
xor
adc
mov
lock
addr16
xor
push
out
and
mov
push
push
sub
pop
sete
pop
xchg
leave
or
jl
bound
js
insb
or
dec
jne
mov
pop
sub
xchg
call
push
cmp
pop
dec
fs
fucomp
inc
fwait
adc
das
icebp
repz
sbb
dec
je
lret
rolb
push
mov
jmp
adc
pop
les
or
add
jmp
test
add
jo
lret
push
push
or
sub
pusha
std
add
dec
fdivrp
xor
shl
fs
ss
loop
dec
xchg
adc
jle
sbb
lret
pop
dec
repnz
clc
aaa
scas
mov
jbe
inc
or
pop
mov
loope
lods
add
js
push
cmpsl
xchg
xchg
shrb
cs
stc
jmp
fldenv
pusha
sub
add
popa
mov
or
pop
push
repnz
arpl
mov
or
mov
das
mov
jmp
rcll
lret
int
xchg
dec
and
stos
cmp
push
and
jmp
push
xchg
push
imul
inc
cs
popa
into
sahf
add
push
jbe
aad
lahf
mov
mov
sub
or
fsubr
xor
in
xchg
or
sub
xorb
or
adc
cmp
lock
lods
sti
push
push
aad
xor
or
ja
hlt
mov
insb
scas
mov
add
test
icebp
ss
fbld
outsb
jmp
or
sti
and
leave
fisubl
test
nop
pop
mov
arpl
adc
aad
fs
lds
and
out
mov
icebp
inc
imul
in
subl
xor
and
decl
dec
hlt
aaa
mov
inc
push
mov
push
adc
repz
dec
sub
add
xor
mov
cmc
loopne
xor
out
jle
cmp
mov
fisubs
in
mov
and
clc
adc
mov
gs
inc
and
ret
xorl
sbb
add
enter
cmp
fistpl
lds
int
add
xor
call
push
inc
mov
fwait
pusha
pop
adc
push
cltd
outsl
sbb
xchg
cmp
fnstcw
or
stc
push
ret
lods
dec
lds
std
mov
mov
fs
mov
or
ljmp
out
ss
xchg
rorb
or
testl
loop
adc
bound
daa
lcall
loope
dec
std
fcoms
movl
push
push
adc
sub
inc
or
cmp
stos
dec
int
sbb
push
cwtl
cwtl
cmpsb
nop
fucomp
and
enter
mov
and
in
pop
adc
aad
icebp
daa
fucomi
mov
dec
mov
jbe
mov
jae
cmpps
nop
sub
push
mov
jle
in
shrl
add
lret
cltd
xor
call
out
xor
adc
sub
or
out
mov
daa
mov
sub
cmp
cmp
imul
aaa
xor
jo
ret
sbb
call
or
jecxz
push
shrb
fs
or
dec
sub
popa
idivb
xor
jge
push
xor
mov
jbe
insb
push
jnp
dec
repnz
push
cmc
imul
repnz
jbe
mov
push
adc
mov
mov
xchg
push
fsubl
push
in
loopne
sbb
sbb
sub
jmp
addb
push
pop
jp
js
orb
loop
pop
sub
jb
mov
lret
orb
pop
fdivs
fs
add
or
xchg
mov
mov
ljmp
xor
inc
or
rclb
int3
pop
sbb
and
add
iret
imul
dec
imul
xchg
loopne
daa
divb
jecxz
and
dec
push
jle
arpl
outsb
jo
push
add
icebp
dec
and
adc
push
je
xchg
mov
push
mov
and
jge
leave
inc
jae
mov
fstps
and
stc
push
sub
cmp
or
cmp
xchg
adc
jecxz
test
push
jle
and
adc
loop
inc
pusha
stc
aam
xchg
ljmp
dec
sub
mov
and
psrld
dec
iret
xor
jne
push
push
negl
fs
dec
sarb
sbb
jecxz
and
inc
push
inc
lods
sbb
pop
xchg
mov
insl
mov
mov
jg
aad
out
sub
mov
sbb
test
lcall
or
push
movsl
jb
test
addl
cmpsb
int3
and
pop
inc
test
push
rorl
xor
aas
push
inc
es
inc
lods
popa
loopne
sub
out
jmp
push
clc
add
dec
or
andl
divps
dec
adc
arpl
sub
das
imul
sbb
out
call
mov
xor
pop
or
inc
out
and
adc
jle
lods
adc
mov
fucomi
sub
jo
cmp
shlb
sbb
movsb
push
xchg
ja
popf
dec
int
pop
cmp
scas
rolb
ret
push
mov
pop
hlt
gs
mov
clc
js
shl
pop
mov
das
sbb
icebp
xor
mov
adc
and
xchg
pusha
daa
xchg
inc
in
insb
adc
lea
lret
out
or
fnstenv
pop
imul
mov
fmulp
fs
jo
sub
mov
lret
xchg
test
jns
push
orl
pop
call
pusha
jl
jbe
mov
pop
sub
jo
add
xorl
inc
add
add
dec
cs
adc
xchg
cmp
mov
cmp
ljmp
push
sub
xlat
xor
adc
inc
xchg
mov
sbb
mov
fwait
push
xor
dec
jnp
lods
sub
test
lcall
call
ret
call
inc
int3
adcl
pop
fmul
notl
sub
inc
into
add
out
icebp
bound
ret
in
clc
mov
lret
dec
outsl
cli
fdivr
enter
in
loop
add
in
push
mov
andl
add
sub
popf
stc
jecxz
add
les
mov
add
pusha
fnop
inc
divb
push
ljmp
cmpsb
fwait
mov
rcll
push
jnp
push
sbb
pop
pop
mov
test
pop
add
xchg
loopne
call
jl
jecxz
pop
in
adc
xchg
sti
sub
loope
push
lock
jg
dec
xorb
scas
push
cmpsl
divb
push
xchg
mov
bound
sub
sbb
adc
push
add
xor
xchg
inc
mov
or
rcrl
adc
int
or
sbb
inc
or
inc
sub
jne
cltd
out
shlb
adc
and
std
shlb
pop
mov
lcall
outsb
push
mov
rorl
arpl
data16
jl
testl
sbb
insb
repz
gs
sub
sbb
add
fwait
test
and
cmc
stos
sbb
dec
jns
and
addl
add
cmp
mov
addb
inc
xor
int
hlt
xchg
stos
inc
pop
sbb
dec
or
jle
push
jo
push
push
les
inc
ljmp
dec
sub
mov
icebp
push
add
iret
frstor
rclb
sbb
popa
rolb
ret
lds
sahf
jl
adc
outsl
lock
es
movsl
add
inc
adc
div
cmp
and
xorl
xor
cmp
fwait
sub
add
push
ljmp
lret
fdivrp
dec
or
pop
outsl
and
rcrb
fsubrs
or
pop
xchg
dec
or
adc
loop
add
mov
aaa
add
or
jnp
push
push
xor
cs
mov
or
ja
xchg
mov
sbb
loop
out
jp
popa
andl
shlb
sub
sbb
adc
push
adc
call
int
and
jnp
adc
in
ss
stos
jge
xchg
push
jae
jmp
or
cmpsl
loopne
incb
repnz
mov
mov
lahf
add
jns
shl
fcomps
cmp
enter
jmp
mov
jno
test
push
sub
push
lods
mov
icebp
adc
inc
dec
insb
mov
fldln2
das
nop
or
lcall
sbb
jge
and
and
sbb
mov
push
jbe
mov
mov
and
dec
sub
enter
xor
jns
mov
xor
and
mov
rolb
adc
jbe
lea
ss
jb
xchg
jmp
divb
pop
lahf
and
mov
test
jb
enter
enter
xchg
inc
inc
fs
inc
adc
push
sub
stos
push
adc
loop
mov
cmpsb
and
jb
xchg
test
pop
inc
test
loop
add
sbb
in
es
sub
and
outsb
mov
jb
xchg
pop
sbb
inc
xor
mov
clc
xor
pop
pop
adc
test
loope
cmpsl
mov
jno
aam
lret
xor
arpl
in
or
sub
mov
or
mov
xchg
jle
pop
pusha
jb
cmp
sbb
push
jge
hlt
cltd
loopne
repnz
mov
sbb
push
pop
leave
and
pop
dec
or
jbe
and
pushf
js
imul
or
xchg
mov
adc
stos
or
stc
xor
and
jb
xchg
jecxz
add
loop
mov
push
and
and
aaa
push
add
or
push
add
mov
repnz
jl
nop
xor
xor
xor
xor
adc
xor
inc
rorl
addr16
adc
aam
sbb
dec
xor
shlb
or
rorb
xor
out
mov
push
js
repnz
jge
enter
stc
jmp
ljmp
ds
mov
sbb
and
inc
std
lods
dec
mov
rcrl
testl
inc
add
mov
imul
add
push
xor
and
mov
sub
add
xor
cmpb
push
sbb
push
test
lahf
mov
cli
ror
mov
adc
and
daa
cmpsl
inc
pop
aad
loopne
mov
dec
pop
jp
jmp
xor
clc
fwait
adc
sbb
out
mov
bound
test
push
fsubl
and
outsb
imul
push
cs
sub
sbb
ror
ss
sbb
fidivrl
and
push
adc
lret
push
cmpsb
jae
repnz
fnsave
push
pop
pop
in
cmp
jnp
push
cwtl
adc
fwait
jge
sti
push
fwait
dec
jle
xchg
mov
inc
dec
mov
sahf
inc
ja
lock
bound
inc
outsb
jb
push
jo
dec
outsl
mov
mov
jg
push
xchg
lcall
out
cs
je
js
hlt
ja
sbb
and
jae
mov
xor
dec
pushf
je
orl
push
aad
scas
leave
ja
and
xchg
xchg
popa
fs
inc
xor
mov
push
or
stos
cmovge
adc
int3
rcrb
jbe
insl
addr16
and
dec
jns
cltd
pop
push
cmp
sbb
jne
inc
ss
stos
cs
pop
jno
insl
bound
pop
inc
xchg
mov
pop
and
je
mov
mov
add
repnz
test
inc
sbb
pop
jo
adc
gs
ss
call
jg
pop
test
jb
pop
inc
jbe
loope
shrl
sub
jb
add
xor
fisttpll
loop
jae
jmp
int3
jmp
add
ss
pusha
test
inc
inc
lods
jg
inc
mov
jbe
dec
cmpsb
push
imul
lea
jmp
push
imul
push
or
sbb
ja
movsl
inc
addl
or
xor
or
or
add
das
lods
xor
xor
push
and
xlat
lock
loopne
cmp
flds
outsb
add
jp
cmp
les
cmpsb
aam
arpl
inc
add
fiaddl
or
sbb
xchg
mov
jmp
cwtl
adc
and
pusha
xor
call
je
mov
stos
mov
inc
or
xchg
mov
adc
shr
pop
pusha
fldcw
xor
xchg
pop
lcall
push
xchg
push
sub
movsl
int
pop
push
mov
insl
sbb
js
sbb
inc
lods
outsb
jae
lahf
jb
push
jecxz
xor
fsts
les
movsl
insl
add
ret
stos
mov
and
mov
test
das
jne
mov
negl
push
sahf
pop
jnp
pop
pop
push
push
dec
call
mov
andb
fmuls
add
sbb
int
fs
es
or
cmp
pop
or
push
inc
js
es
jle
cmpsb
adc
je
gs
sub
cs
outsl
fsubrs
ss
insb
popf
out
leave
or
in
push
rcll
jb
scas
mov
push
fwait
and
filds
adc
mov
push
pusha
lret
adcl
push
mov
mov
inc
sub
int
pusha
fxch
popa
dec
mov
pop
mov
pushf
pop
dec
repnz
pop
fs
and
cmp
int3
add
cli
push
inc
mov
add
fisttpl
mov
pop
out
xchg
les
outsl
jb
sbb
sbb
mov
add
jge
sbb
call
push
cmp
lock
dec
mov
add
cs
or
xor
xorl
bound
pop
repnz
push
sbb
andb
js
or
inc
inc
sub
mov
and
or
xchg
int3
xchg
xchg
jmp
mov
push
mov
jae
and
push
mov
enter
push
sbb
pushf
mov
jle
nop
jle
nop
adc
stc
jno
dec
jo,pt
fnsave
pushf
imul
int3
dec
adc
cmpsb
mull
popf
lret
jp
aam
std
and
fs
ja
pop
sti
inc
and
lea
out
sbb
xchg
stc
cltd
sub
out
inc
push
xchg
push
mov
mov
test
or
mov
dec
iret
dec
push
js
out
scas
sahf
dec
mov
cmp
inc
add
leave
dec
fsub
aam
and
sub
ds
push
inc
mov
add
outsb
and
cmpsb
xor
dec
testl
dec
jae
adc
aas
push
jb
js
adc
loopne
gs
rol
and
inc
ja
sub
fs
imul
adc
inc
iret
inc
push
js
mov
push
inc
movsl
jmp
inc
out
aam
sbb
ja
inc
push
and
fisubl
fs
xchg
fnstcw
mov
cmpsl
test
jne
adc
inc
sbb
mov
mov
fwait
je
and
inc
mov
pop
rcrl
mov
sahf
dec
lahf
cltd
cltd
push
pop
mov
cmp
dec
mov
data16
push
test
dec
xchg
adc
inc
test
push
inc
mov
fs
xor
bound
test
clc
xor
shlb
lret
inc
lea
sub
into
inc
dec
cmp
inc
mov
loope
xor
fldz
cmp
jnp
cltd
xor
adc
xor
cld
push
pop
push
lret
and
push
scas
pop
je
sahf
jae
push
cmp
inc
inc
fs
sub
sbb
xchg
shl
cmp
and
push
pushf
ja
and
mov
pop
push
loope
mov
xor
movb
sahf
cmp
fs
in
movsl
rorb
push
jg
sub
scas
mov
adc
jns
xchg
pop
jbe
dec
pop
xor
scas
mov
flds
jmp
or
das
dec
insl
std
faddl
jmp
add
add
cmp
or
fbld
push
fbstp
cmp
jmp
mov
aaa
data16
hlt
xor
xorb
lcall
data16
adc
leave
push
das
int
and
adc
movsb
mov
push
mov
lods
arpl
mov
cmpb
rcll
out
popa
mov
cld
mov
dec
jae
notb
sbb
sub
or
out
mov
cltd
push
jo
cltd
pop
push
inc
xor
rclb
enter
test
jo
sub
push
and
jne
arpl
outsb
push
cmpsb
sub
fstps
icebp
out
in
fnstcw
push
cmp
je
push
imul
xor
pushf
ds
sbb
lock
imul
nop
or
mov
aaa
ret
loop
pop
popf
daa
sub
inc
into
arpl
mov
daa
push
xchg
imul
inc
dec
in
mov
test
push
aad
xchg
movsb
fimull
push
mov
jns
jnp
gs
add
adc
pop
or
push
push
and
jns
fildl
js
add
cwtl
leave
push
pop
fstpl
mov
addb
orl
dec
jge
push
imul
xor
out
jns
aaa
rclb
mov
int
mov
jne
pop
pop
imul
nop
inc
jp
dec
outsl
fwait
xchg
inc
popa
cmp
in
xor
dec
add
test
testb
jae
inc
leave
dec
je
or
adc
subl
bound
dec
or
pop
or
mov
xor
test
pop
and
jo
adc
sub
mov
insl
and
inc
add
data16
xchg
sbb
or
sub
sub
mov
adc
jle
dec
or
dec
add
rcrl
cmp
mov
cmp
jno
mov
dec
rcll
aas
pop
jecxz
jno
nop
add
adc
rcl
xchg
sbb
lahf
push
inc
loopne
xorb
loop
push
jo
jg
ja
cmp
into
cmp
dec
cmpsb
loope
pop
jne
call
jg
push
es
iret
dec
cmpsb
push
inc
fdivrl
xor
loopne
rolb
outsl
mov
addps
lret
pop
mul
js
push
xor
mov
mov
sub
mov
in
fs
and
jne
xlat
sub
mov
mov
mov
push
loopne
jns
int3
loop
xchg
mov
movsl
jg
push
pop
cmp
dec
mov
leave
inc
and
push
lahf
imul
jp
mov
inc
mov
loope
loope
lcall
jmp
push
aam
data16
repnz
jge
es
divl
add
jns
mov
push
stc
cmp
sub
push
outsb
adc
and
outsb
enter
xchg
les
pop
mov
dec
into
mov
outsl
out
nop
cmp
jb
sbb
stos
lret
jl
ljmp
dec
dec
bound
or
iret
jb
into
xchg
dec
sub
inc
pop
pop
pop
xorb
push
popa
push
adc
rcrl
cmp
mov
sti
push
pop
push
lahf
out
dec
std
mov
cmc
sub
cs
push
mov
movsb
cmp
xchg
in
adc
xchg
pop
movsb
adc
ja
or
jns
hlt
data16
sahf
movsb
aad
sbb
xchg
cmpsl
sub
stc
or
push
psrlq
shlb
xor
ret
inc
add
cmp
lock
insb
loopne
sarb
es
mov
stos
jmp
test
std
mov
lea
mov
shrb
dec
push
leave
test
add
lea
rorl
adcl
imul
and
imul
int3
dec
jnp
sbb
aaa
bound
or
mov
out
push
insl
push
mov
xchg
mov
inc
pop
and
cmp
xchg
sti
or
fs
xchg
outsb
call
fsts
sbb
repz
xor
lcall
and
fstl
sub
inc
leave
add
das
pop
sub
jb
dec
int
int3
popa
insb
bound
xor
lahf
popa
call
or
popa
ret
fiadds
test
das
xor
inc
adc
dec
ja
cld
pop
sbb
cmpsb
les
lods
or
push
adc
cmp
push
pop
movsl
loopne
push
lods
outsl
insl
insb
jg
dec
test
loop
inc
cmpsl
and
jnp
sub
xchg
leave
mov
lret
cmp
inc
loope
shrb
jg
sub
addr16
and
push
cmp
push
cmc
push
push
dec
jge
fildll
mov
rcrb
mov
adc
sbb
fs
pop
daa
scas
add
insb
test
pop
test
imul
pop
pop
dec
jmp
lahf
mov
dec
out
loop
jg
mov
orb
pop
and
sub
cmp
insl
push
push
sub
mov
and
cmp
icebp
fsub
push
cmp
xchg
mov
sub
dec
and
mov
jle
stc
pop
cmpb
cmpsl
filds
insl
push
in
add
and
cmp
cltd
jl
adc
inc
and
mov
jo
push
push
sbb
das
add
xor
js
dec
or
xor
std
inc
sub
mov
mov
sub
and
jno
push
pop
lretw
leave
inc
popa
fmuls
sbb
add
push
loopne
jno
sub
mov
or
pusha
lea
movsl
cmp
pop
sub
mov
sarl
cli
jl
iret
popf
outsl
inc
dec
or
jle
push
mov
push
out
cmp
add
insl
je
rcll
fadds
ret
ds
push
xchg
mov
and
jbe
std
ficomps
das
dec
lahf
xor
xlat
dec
mov
push
xor
push
arpl
movb
sahf
mov
filds
push
arpl
scas
push
adc
or
jbe
pop
push
xchg
push
sbb
cwtl
inc
push
rcrb
inc
push
mov
xor
sbbb
call
jae
gs
stc
loop
mov
repz
sbb
mov
mov
mov
adc
adc
jb
in
test
jle
dec
lock
outsw
adc
adc
adcb
xor
inc
adc
repz
shlb
mov
cltd
test
lcall
jecxz
cmpsl
loop
movsb
dec
pop
sub
xchg
outsl
data16
hlt
adc
stos
test
sbb
pop
jae
jb
push
fstpl
inc
push
jo
sbb
inc
in
mov
jae
cli
cwtl
shrb
adc
mov
push
mov
dec
push
les
fnstsw
jle
push
ds
xchg
jne
rorb
push
inc
cmp
jb
push
pop
xor
dec
jle
jmp
das
jg
and
mov
dec
jne
imul
outsl
mov
fmull
push
mov
push
bound
cmpsb
adc
push
inc
jmp
mov
test
mov
and
cmp
dec
jmp
pusha
push
xorl
xor
shll
iret
sbbl
or
jecxz
sbb
jae
jp
ljmp
dec
jae
test
movsl
shll
divb
enter
jmp
and
mov
sub
rcl
sbb
shll
cmp
pop
adc
ljmp
aas
pop
popf
sub
push
mov
or
sub
mov
adc
pop
dec
add
aam
dec
or
jne
call
jmp
adc
push
push
cmpl
stc
jp
addr16
mov
push
mov
popa
mov
xchg
popa
mov
je
dec
or
jno
dec
dec
insl
dec
sub
test
jecxz
fsubrs
add
scas
xchg
cmc
or
push
aad
jne
push
leave
icebp
inc
nop
push
outsl
xchg
insl
jbe
icebp
jns
popa
add
add
or
fistl
cwtl
jge
jbe
mov
push
aam
outsl
adc
jb
xor
insb
cltd
pusha
push
xchg
jae
adc
aad
decl
pushf
iret
adc
mov
jbe
pop
int
add
mov
out
xchg
adc
enter
pop
xchg
pushf
out
test
push
jns
ja
push
jnp
and
movsl
push
std
pop
jp
leave
scas
add
jecxz
sub
dec
jno
xor
and
push
xchg
hlt
inc
fimull
and
pusha
mov
call
outsl
mov
mov
or
fildll
imul
adc
mov
pop
sahf
jae
out
imul
pop
dec
insb
sub
dec
jns
lretw
cli
daa
jae
push
aam
lret
jb
jp
sbb
enter
sbb
outsl
js
dec
pop
xor
and
push
mov
loop
ja
sub
in
call
or
inc
inc
adc
mov
jle
push
mov
gs
rolb
adc
jns
sbb
mov
gs
sbb
dec
loopne
inc
add
dec
arpl
pop
cs
sbb
shll
sbb
mov
js
pop
sbb
loopne
jne
push
insb
into
imul
sbb
pop
inc
dec
mov
mov
jno
inc
fdivl
and
mov
mov
nop
xchg
adc
in
shll
leave
push
icebp
movsb
test
mov
insb
jne
inc
push
aam
sub
add
lods
iret
jb
leave
int
jecxz
pop
dec
idivb
inc
push
jecxz
scas
push
sbbb
xor
loope
add
pop
pushl
jb
gs
jae
adc
mov
adc
inc
xchg
jle
lahf
rolb
lret
fs
xchg
pop
mov
push
xchg
mulb
rclb
mov
push
lods
xchg
xor
mov
sbb
js
sbb
dec
inc
movsb
out
cmp
cmp
test
cmp
push
push
sub
packsswb
sbb
add
add
nop
notb
out
adc
int3
xchg
push
imulb
ret
and
lods
dec
xchg
ljmp
mov
mov
aas
insl
add
pop
cmp
call
ror
push
dec
std
fstpl
fistl
jle
add
ljmp
mov
imul
add
out
push
pop
mov
int3
pop
mov
pop
pop
jbe
bound
inc
cwtl
repz
jle
imul
test
arpl
dec
add
xchg
xchg
jl
xchg
cwtl
jmp
cmpsl
sahf
lahf
dec
cmp
cmpsb
dec
xchg
add
inc
xchg
mov
pop
mov
mov
push
xchg
ret
repnz
and
int3
int
cmc
rolb
cmp
rcl
cmp
xlat
fsubr
jecxz
cmp
loop
fsubp
out
rolb
jmp
pop
aad
add
enter
int3
idiv
call
ljmp
cmp
add
ds
or
xor
sti
cmp
adc
sub
sbb
and
sbb
daa
push
pop
leave
sbb
add
push
and
sub
adc
adc
mov
roll
add
add
mov
cmpsb
jle
inc
mov
daa
sub
inc
and
push
pop
popa
clc
dec
fs
inc
jmp
sbb
jns
inc
xchg
mov
mov
xor
aad
inc
pop
into
cmc
test
xor
adc
xchg
or
test
and
in
adc
adc
and
cmp
pop
int
xchg
add
xor
cmp
sbb
sub
jmp
cmp
jmp
jmp
leave
and
sub
cmp
mov
sub
aaa
push
lds
xorb
jl
lret
test
cmp
mov
repz
add
jns
ljmp
cmp
or
out
jno
jns
call
xchg
negb
mov
cmpsl
ret
test
xchg
add
sub
mov
mov
test
mov
add
sbb
shl
dec
mov
std
push
push
sbb
lods
jbe
pop
scas
jmp
mov
add
sbb
mov
inc
lret
sub
dec
add
xchg
add
stc
int3
fsub
push
cld
push
adc
lock
int3
lret
add
pop
push
ljmp
es
push
mov
cli
imul
adc
hlt
fcoms
rcrb
negl
in
xlat
fistl
xchg
cmp
aaa
and
inc
pop
pop
outsb
jae
or
adc
jge
add
xor
mov
leave
loop
lret
dec
scas
jns
cmp
jle
push
and
cmp
fcomi
add
call
lock
push
fs
add
pop
mov
sub
daa
add
jbe
sbb
mov
lcall
je
add
icebp
stos
nop
add
push
hlt
xchg
addb
xchg
inc
pop
mov
cmp
mov
dec
roll
ja
xchg
js
sub
hlt
mov
fbld
sti
mov
popa
or
cld
lret
and
aaa
cmp
aad
popf
loopne
out
or
add
scas
cmp
cmp
or
fisubl
add
sub
popf
pop
arpl
int3
push
add
loope
bound
loopne
fdiv
add
das
lahf
add
iret
mov
js
ss
imul
int3
sub
js
stos
imul
jmp
into
add
adc
adc
jg
out
mov
mov
add
stos
adc
xchg
jmp
cmp
xor
pop
iret
inc
loop
cmp
test
add
repnz
lods
scas
dec
pop
push
jae
jg
fimull
and
cmp
push
add
mov
out
gs
sbb
add
jb
ljmp
idivl
cli
push
add
pop
mov
cwtl
xor
jge
shrb
dec
std
outsl
out
pop
aaa
add
dec
les
xchg
lret
pushf
roll
inc
sbb
pop
sbb
add
xorl
and
lock
test
mov
sbb
ret
sbb
pushf
jecxz
inc
aad
add
ljmp
lcall
loope
frstor
push
cmp
ret
sti
cmp
add
mov
jle
mov
sahf
add
data16
in
es
mov
pop
in
dec
mov
roll
aad
scas
jge
mov
add
inc
cmp
out
add
push
and
push
add
iret
shld
rolb
add
imul
mov
out
sbb
addr16
ljmp
test
cmp
pop
mov
add
inc
and
fadds
pop
cmp
and
into
add
daa
xor
cli
popf
or
bnd
mov
mov
sub
push
data16
cmp
adc
test
lret
cltd
int3
rcrb
sbb
cmp
pop
inc
fistps
fcmovne
sbb
xchg
rorb
jmp
cmp
insb
aaa
add
jmp
emms
pop
ret
push
jmp
into
add
dec
pop
fildll
inc
adc
cmp
xchg
add
fimuls
add
add
mov
inc
and
ret
inc
and
add
cmpsb
cli
cmp
mov
cmp
adc
imul
pop
jmp
frstor
subl
loopne
out
outsl
push
xor
imul
add
sahf
filds
cld
xchg
cmp
cmp
inc
out
outsb
cmp
add
jp
or
mov
fs
xchg
cli
mov
lahf
testb
je
sbb
and
adc
fwait
mov
push
mov
add
push
mov
jmp
bnd
mov
push
lock
pop
lret
fmull
je
push
mov
out
in
movsb
fcoms
adc
nop
add
imul
adc
out
xlat
sub
add
repnz
mov
add
mov
addb
test
rcr
jl
repnz
mov
add
xchg
adc
outsb
xor
mov
clc
jb
cmp
lds
xor
xchg
cmpsl
idiv
arpl
jge
test
push
add
dec
jecxz
popa
es
out
and
xor
loopne
iret
or
pop
push
cmp
fnstenv
push
mov
cmp
popl
stc
divl
or
mov
subb
inc
dec
addr16
cwtl
mov
or
add
in
adc
dec
test
call
inc
scas
arpl
dec
mov
call
push
scas
add
mov
mov
adc
ljmp
ljmp
lahf
dec
push
pop
insl
cmp
dec
pop
sub
dec
stos
mov
mov
in
cmp
xor
xorb
daa
leave
mov
jp
lret
dec
xor
mov
xor
daa
lcall
push
idivb
ljmp
insb
lea
lret
jmp
sub
pop
arpl
add
mov
inc
popa
mov
paddusw
sti
nop
add
add
lods
shll
sbb
sbb
daa
popf
fcmovnb
inc
loopne
int
jo
and
pop
add
cmc
sub
add
faddl
pop
jb
hlt
cmp
fcmovnb
or
daa
dec
adc
shlb
pop
movsb
cmp
mov
cltd
jno
push
lcall
ja
pop
add
lds
ljmp
addb
add
clc
jbe
push
add
js
inc
sbb
movsl
popf
cmp
jle
movsl
cmp
pop
vcvtps2dq
popa
pop
movsb
and
into
mov
add
jb
negb
roll
cli
jmp
push
dec
cmp
jo
subb
les
jmp
pop
xchg
adc
and
mov
add
outsl
in
cmp
add
out
sbb
lahf
dec
mov
jp
xchg
mov
cmp
mov
enter
fs
inc
add
int3
sbb
add
inc
inc
daa
inc
shrb
aad
scas
mov
cld
int3
addr16
call
add
out
cmp
repz
sbb
push
mov
cmpl
add
insb
test
inc
or
lcall
fwait
and
and
jg
xchg
push
inc
jle
ret
fcomps
adc
xchg
loope
lods
loope
rcl
out
cmpsl
jbe
add
fdivrs
and
divl
add
inc
loop
dec
cmp
hlt
xor
adc
inc
cltd
popf
push
cwtl
pop
cmpl
test
cmpsl
mov
jg
sbb
cli
xor
sbb
ljmp
mov
lahf
ja
fbld
mov
call
leave
mov
adc
roll
lret
out
sbb
and
add
adc
or
push
lahf
sub
pop
inc
add
xor
aas
ret
pop
mov
or
pop
repnz
leave
popa
cmp
push
cltd
lret
cmp
pop
adc
xor
xor
inc
jo
inc
aad
cmp
jns
mov
aas
add
or
lahf
inc
mov
and
jmp
rorb
mov
pop
jbe
jmp
fcomps
dec
fwait
cmp
pop
fsubrl
cwtl
dec
add
xchg
push
addl
jp
mov
add
outsl
add
ret
xchg
insb
push
mov
xchg
repz
dec
mov
mov
mov
mov
ss
mov
pop
cltd
inc
add
jge
out
inc
mov
jg
inc
out
je
add
ja
mov
jmp
mov
push
sbb
push
sbb
out
in
leave
test
ret
or
std
test
jmp
cmp
cmp
adc
lods
stos
stos
hlt
and
mov
cmp
add
pop
out
in
cmp
std
aas
popf
shrb
sub
dec
loopne
jno
jp
push
mov
push
and
inc
ret
and
fdivrs
xor
sbb
add
and
cmc
push
inc
scas
jle
testl
mov
pop
popf
dec
scas
dec
xchg
mov
mov
sahf
mov
jmp
leave
add
subl
jae
dec
adc
fistpl
add
rolb
std
push
mov
or
add
mov
fidivrs
cmp
les
pop
jg
inc
cmp
cmp
sub
push
hlt
bound
push
inc
cmp
adc
xchg
jmp
lea
incb
xchg
dec
sub
dec
lock
add
dec
aaa
or
sbb
adc
mov
cmp
iret
popa
and
mov
push
sub
sahf
push
add
mov
leave
in
lcall
add
add
rcr
bnd
push
cld
sbb
pop
data16
adc
xchg
outsb
cmp
cmp
and
cmp
cwtl
and
pop
push
sub
inc
add
adc
rcl
mov
fs
and
dec
push
push
jnp
aad
xor
adc
mov
je
scas
jmp
jg
push
xor
push
mov
sub
jmp
pop
jne
or
xchg
push
cli
out
or
pusha
xor
ret
lods
or
push
in
ljmp
add
aam
lds
scas
push
in
cltd
enter
rorb
stos
and
into
cmp
dec
push
arpl
jmp
fs
ja
shlb
cmp
in
add
outsl
adc
add
imul
movsb
jp
ret
pop
sbb
sbb
pop
imul
shl
stos
in
test
push
sar
mov
imul
shr
cmp
adc
xchg
add
xor
sbb
pop
inc
adc
aaa
orl
movsl
and
mov
cmp
js
add
inc
adc
das
aas
mull
inc
aad
adc
jmp
movl
nop
push
lret
lds
and
xor
push
in
pop
pop
cmp
mov
jl
add
in
jmp
push
jo
pop
gs
jmp
dec
add
jg
cmp
xlat
and
pusha
jmp
mov
test
inc
add
sbb
sbb
sbb
sbb
pop
mov
push
mov
and
cmp
cmc
dec
call
aam
nop
add
cmp
leave
cmpsl
push
xor
add
push
xlat
mov
pop
mov
call
lret
mov
sub
xlat
out
insb
loope
xchg
or
out
adc
pop
jle
mov
xchg
in
mov
clc
sbb
cmc
insb
test
je
add
in
sbb
stos
test
add
and
ja
fwait
xchg
sbb
adc
xchg
leave
pop
push
mov
xor
in
mov
inc
sbb
cmc
jl
cmc
sbb
in
rolb
inc
push
pop
lods
enter
insb
jnp
add
sahf
mov
adc
adc
cmp
inc
out
xchg
fdivs
lahf
cmp
cmp
fcomi
loopne
pop
jne
jmp
push
lret
cmp
lahf
stos
in
xchg
xchg
push
pop
push
add
test
out
insb
shll
pop
test
mov
test
lret
ja
add
dec
or
cwtl
mov
add
jmp
mov
rcl
sbb
sub
pop
adc
lock
mov
mov
sbb
cmpsl
into
repz
lret
cltd
dec
or
imul
mov
imul
out
test
xor
or
outsb
add
pop
add
cmp
pop
add
repnz
pop
or
syscall
clc
fstps
pop
lds
adc
cmp
jo
or
addr16
pop
add
ljmp
lcall
leave
mov
and
scas
insb
cmp
adc
xor
push
in
mov
iret
dec
hlt
cmpsb
stc
cmp
fildl
xchg
mov
mov
sbb
add
cld
ds
mov
add
adc
push
ja
xor
fnsave
and
xlat
pop
and
addl
int3
mov
add
flds
mov
adc
sti
sbb
cmpsb
std
xchg
dec
sbb
xchg
out
test
out
push
ljmp
cmpsb
sbb
daa
dec
add
pop
and
xor
fiadds
xor
xchg
mov
cmp
push
jmp
fdivs
cltd
es
popa
jp
xchg
cmp
jmp
xor
add
add
sahf
ljmp
nop
mov
cmpsb
icebp
mov
addr16
add
sbb
hlt
inc
jecxz
jge
pop
inc
sbb
adc
or
insb
pop
int3
jb
aas
mov
mov
inc
sub
fsts
xor
sbb
pusha
adc
fldt
mov
add
sub
daa
jo
pop
mov
jb
jmp
xor
mov
fsubl
fbstp
lahf
adc
or
adc
mov
dec
ljmp
fs
leave
dec
insl
add
xchg
cmp
jmp
jl
jp
cmp
push
inc
in
ret
pop
cmp
call
lahf
andb
sahf
aas
push
push
test
into
and
adc
cmp
mov
cwtl
add
lods
xchg
push
setp
inc
cmpsl
sbb
xor
std
jmp
jo
xor
cli
adc
cmp
or
testb
mov
sub
ja
xor
jnp
aas
cltd
ljmp
loopne
loopne
decb
out
cmpsl
xchg
pop
pusha
xchg
pop
test
mov
xlat
push
push
add
xor
repnz
or
mov
inc
cmp
lahf
pop
or
cmp
jmp
ja
cmp
hlt
shll
faddp
stos
packssdw
push
mov
dec
lods
or
and
or
stc
popf
dec
fadds
push
push
insb
or
lcall
call
movl
mov
mov
in
imul
aaa
jmp
jno
subl
or
jge
pusha
out
jmp
pop
sub
pop
sbb
or
imul
jbe
sbb
test
into
sti
mov
add
mov
cmpsb
add
dec
icebp
mov
out
ret
cmc
movl
mov
int
inc
shr
je
call
and
xchg
int3
xor
and
out
dec
jb
rcrb
sub
dec
stc
arpl
lcall
jmp
adc
test
sbb
mov
and
jnp,pt
inc
dec
adc
xchg
mov
ja
fstps
and
add
jle
jmp
jo
push
stos
add
jae
push
jp
adc
subl
lea
adc
je
add
mov
push
loop
leave
lahf
in
xor
sahf
data16
and
mov
fstl
sbb
mov
imul
aas
cmp
add
out
jbe
add
xchg
inc
addr16
testb
mov
mov
jo
fcmovne
jp
and
and
testl
mov
add
inc
shr
dec
cmp
popl
mov
add
js
push
add
push
jg
out
pop
push
sbb
sub
and
cmpsb
cltd
insl
nop
cmp
iret
xchg
jle
int3
test
leave
inc
lds
jp
cmp
dec
repnz
push
or
pop
push
or
gs
shll
int
lods
inc
jno
sbb
mov
addr16
gs
mov
add
mov
ficompl
in
fidivs
add
adc
js
xor
insl
mov
jb
loope
inc
mov
and
out
lds
mov
sub
mov
cmpsl
jmp
sbb
fisubl
add
repz
bswap
mov
rorl
add
dec
push
pop
jbe
fldl2t
fwait
cmp
daa
mov
bound
adc
mov
icebp
bound
jcxz
mov
mov
add
cmp
pusha
jmp
mov
dec
adc
cmpsl
inc
xorb
xchg
aaa
push
loopne
fsub
pop
in
jl
adc
wbinvd
cmp
sub
sbb
inc
inc
sub
jmp
jbe
rorl
and
in
addl
pop
xlat
je
add
inc
shr
cmpsb
and
push
movsb
sarb
shlb
loop
add
lea
dec
aad
insb
je
and
add
pop
jo
push
add
imul
jg
jl
add
add
sarb
lock
jmp
stos
sub
sub
adc
int
hlt
call
arpl
das
addb
fistpl
mov
rcrb
call
adc
fcmovu
jmp
push
add
inc
push
das
les
cmp
pop
mov
mov
pop
fcomip
fs
popa
repnz
fwait
push
sbb
orl
adc
adc
cmp
jno
ret
adc
shll
sbb
cli
psubsb
cltd
mov
addr16
jno
cmp
xor
add
inc
pop
add
dec
push
daa
jnp
push
sarl
lret
subb
shr
mov
stc
ret
mov
add
jo
sbb
pushf
push
movsl
inc
xchg
rcrb
arpl
shlb
push
loope
add
mov
pop
pop
test
xchg
jg
out
sbb
xor
test
adc
cmpsl
testl
add
jb
xor
jmp
fiaddl
push
div
fcmove
cmpsb
nop
sahf
jbe
xchg
add
cltd
pop
mov
int
mov
xchg
loopne
xor
aad
mov
xor
xchg
divl
cmp
ja
loop
mov
mov
aas
hlt
clc
add
add
pop
jp
pop
mov
jb
push
movsl
add
test
in
fildll
sub
and
sub
add
dec
pop
lods
adc
add
jmp
inc
jb
jmp
push
inc
jmp
js
pop
scas
cmp
add
xchg
dec
repnz
stos
ljmp
ds
add
testb
aam
inc
cmp
in
xchg
jmp
cmp
pop
cmp
jnp
add
jbe
dec
cmpsb
add
sbb
stos
stos
pop
or
mov
aas
mov
pushf
cmp
xor
jmp
dec
cmp
pop
pop
cmp
mov
and
push
jmp
or
addb
add
jae
mov
pop
cmpl
pop
lea
adc
or
add
fcoms
dec
pop
sbbl
add
jecxz
add
cwtl
lret
cmp
int
hlt
inc
or
cmp
cmp
push
sub
xchg
pop
xor
add
in
xor
pop
adcb
cmp
or
cmp
rclb
lret
jle
add
jmp
jle
adc
mov
cmp
fstps
mov
cmpsb
nop
ret
mov
arpl
jmp
add
ret
insb
cmp
push
xchg
inc
je
mulb
or
bound
mov
sbb
xor
push
add
xchg
add
outsl
jb
and
jle
bound
jns
cmp
add
outsl
xlat
mov
sti
dec
sahf
mov
mov
lea
inc
es
ret
int
pusha
sbb
out
cmpsb
lret
cmp
push
sub
add
fsave
mov
test
xlat
or
fsubs
jecxz
aaa
into
cmp
xor
cmp
add
andl
sub
rorl
push
adc
mov
jnp
loope
sbb
jno
std
push
or
add
out
mov
mov
outsb
out
xor
jbe
xor
repnz
loop
jae
push
and
lcall
add
push
aaa
xor
cmp
pop
sbb
fcompl
push
sbb
ds
jl
sbb
aaa
mov
sbbb
jp
lock
cltd
pop
inc
pop
xchg
add
or
aaa
outsl
stos
nop
sti
push
pop
std
xor
call
neg
out
push
push
test
cmp
jbe
rcrb
jp
pop
gs
push
and
jmp
in
mov
sti
test
movsb
shr
insl
dec
mov
pop
jb
movsl
lods
hlt
movsb
jmp
insb
add
push
and
loopne
push
add
jecxz
cmpsb
or
cmp
daa
lret
sub
pop
ja
inc
sbb
and
jecxz
loope
test
push
mov
ret
inc
aad
cltd
ds
jmp
sub
jle
iret
repz
inc
pop
pop
add
add
jmp
sub
add
movsl
in
pop
out
enter
arpl
pop
loopne
sub
xchg
cmp
mov
jb
aas
testl
stos
cmp
xor
std
mov
lods
jnp
add
mov
arpl
ror
sbb
mov
test
out
out
and
aad
lock
xchg
add
pusha
movsb
xchg
dec
jbe
cmp
call
jmp
insb
pop
sbb
sbb
sbb
imul
xlat
pop
popa
rolb
pop
into
shlb
xchg
mov
cmp
xor
push
imul
mov
fidivrs
nopl
cltd
imul
clc
ret
jmp
and
mov
mov
push
mov
flds
mov
add
push
lret
movsl
or
adc
mov
es
loopne
push
addb
pop
sbb
fwait
and
rep
stos
push
adc
stos
pop
jecxz
jno
dec
fnsave
out
sarl
mov
sbb
mov
jmp
xor
cmpsl
cmp
push
shlb
xchg
lahf
push
mov
fidivrs
cmpxchg
mov
or
xor
add
cmp
call
test
inc
dec
lret
add
push
testb
popa
add
int
xchg
adcl
popa
push
add
ret
sbb
and
jmp
int
push
cmp
dec
pop
imull
push
sub
sti
mov
add
and
pop
bound
mov
cmp
and
repz
hlt
cmp
sub
test
cmp
push
daa
xor
ljmp
ljmp
xlat
add
pop
stos
add
cmpb
daa
pushf
mov
push
xchg
adc
mov
push
mov
sub
jmp
jo
gs
pusha
add
scas
add
sti
dec
sti
dec
hlt
xor
jo
cmp
out
pop
movsb
add
loop
cs
or
adc
cmp
cmp
ret
leave
in
pop
mov
imul
add
sbb
push
inc
jmp
and
mov
mov
data16
adc
sbb
xor
pop
cmp
jnp
andl
add
in
inc
jp
imul
jle
xchg
call
sbb
lcall
adc
cmp
xchg
cltd
push
out
test
cmp
pop
cmp
or
insl
fsubl
mov
xorb
mov
add
jge
test
jb
cmp
scas
das
test
ds
add
test
and
mov
pusha
or
add
inc
fiaddl
push
std
xchg
dec
icebp
repnz
mov
pop
mov
dec
add
addr16
int
xor
xchg
pop
mov
movsl
js
push
jmp
cmp
or
cmp
sub
in
push
xchg
mov
imul
ret
dec
mov
js
and
add
aad
adc
int
add
bound
pop
dec
adc
ret
stc
sahf
pop
add
sbb
jge
stos
add
and
dec
addr16
jmp
ret
out
cwtd
cmpsb
sarl
xchg
insb
mov
mov
dec
in
test
nop
push
inc
lahf
jne
xor
add
jnp
jmp
adc
cwtl
add
in
inc
ljmp
aas
sbb
sbb
dec
outsb
in
add
sub
xor
push
mov
in
add
sbb
or
adc
cmp
mov
add
imul
lahf
push
cmp
add
push
sahf
and
push
adc
pop
pop
inc
add
fiaddl
in
push
arpl
cmp
push
cltd
pop
cmp
imul
dec
pusha
cmp
mov
cmpsl
add
or
xor
jp
mov
aam
mov
ljmp
push
ret
dec
mov
mov
pop
xor
inc
cltd
add
mov
lahf
js,pn
cwtl
sub
add
sub
add
add
jb
shll
ja
aam
aam
mov
xchg
xor
jp
jle
sbb
ss
pushf
pushf
shl
outsl
in
mov
ret
dec
add
jmp
mov
into
ret
push
push
jg
and
fwait
push
lcall
mov
inc
shr
inc
aaa
out
int3
mov
jns
mov
pop
jbe
jge
or
xorl
call
sahf
into
and
ret
and
jg
sbbb
ret
jmp
cmpl
adc
jle
sbb
lcall
jb
out
jp
sbb
xor
jmp
movsb
pop
clc
out
cmp
loop
sbb
cwtl
dec
or
sbb
sub
xor
push
mov
into
mov
mov
imul
into
jne
adc
dec
mov
fwait
icebp
inc
in
push
mov
and
int
mov
pop
stos
ljmp
cmp
mov
xor
iret
and
out
dec
sbb
cli
xacquire
insl
push
sbb
xchg
add
mov
and
movsl
cmpsl
add
movsb
shrb
iret
aaa
sub
push
xchg
popa
sub
xlat
testl
loope
pop
out
adc
subl
mov
cmp
pushf
jo
dec
adc
fwait
xchg
cmp
int
cmp
shr
stos
add
neg
jne
clc
ror
imul
add
mov
jmp
int
aas
mov
sub
mov
jecxz
push
cmp
lcall
jmp
adc
mov
call
sub
and
je
lret
inc
int
lds
add
into
xlat
aas
and
xchg
test
and
and
push
cmp
ret
popa
int
sbb
in
jle
xor
jp
add
mov
sarb
sbb
mov
jbe
jo
ds
jmp
dec
push
scas
imul
jbe
push
sbb
jne
cmpsb
jge
inc
push
push
jmp
cmp
arpl
mov
jns
test
out
mov
jmp
fs
and
jg
jmp
push
pop
inc
cmp
pop
repz
pop
or
sub
cli
mov
add
xchg
jp
fcmove
or
jmp
test
push
xor
mov
mov
inc
push
cmp
pop
or
mov
leave
notb
lret
or
cmpsb
add
shlb
xchg
sub
pop
iret
sbb
and
mov
dec
sub
dec
insb
out
les
xchg
dec
jmp
enter
ds
ja
or
negb
inc
sub
push
js
push
xor
loopne
push
add
cld
in
push
xlat
push
roll
sub
inc
jmp
mov
idivl
or
lcall
mov
or
das
fwait
push
or
jmp
subb
cli
aas
jmp
lret
mov
jo
loopne
lds
sbb
out
cs
xchg
jnp
fs
cmp
add
je
add
mov
ret
push
inc
nop
or
dec
inc
dec
ss
mov
jg
cmp
and
adc
fsubp
adc
cmp
dec
sti
mov
add
fxch
mov
test
sbb
jae
inc
add
fistps
pop
stos
or
clc
xor
cmp
stc
ljmp
adc
sti
bound
cmp
mov
loopne
fmuls
adc
sub
aam
jns
pop
jp
inc
in
xor
sbb
cld
lret
enter
add
adc
bound
into
mov
lret
sub
popa
add
inc
jmp
mov
inc
add
dec
add
inc
jns
imull
push
cmp
loopne
movsl
popa
sahf
push
fsubrp
sbb
std
mov
arpl
cmp
jmp
xor
addr16
lds
jl
jle
xchg
popa
mov
add
daa
test
add
out
add
mov
movsb
out
popf
pusha
xor
mov
pop
jbe
mov
mov
out
ds
mov
leave
inc
jge
into
cmp
popa
cmpsb
faddl
xor
test
jmp
and
dec
xchg
push
add
push
mov
pop
push
pop
sbb
dec
inc
add
pop
xor
sbb
fadd
jmp
mov
xor
jae
push
mov
stc
inc
add
or
das
pusha
in
int
rcll
cmpl
add
xchg
pop
or
cmp
pop
rcl
push
inc
add
push
inc
sub
xlat
fs
rorl
pop
jnp
lret
mov
hlt
test
orb
movsb
lods
fdivp
outsb
faddl
out
cs
aam
xor
add
xchg
cltd
in
sub
jb
pop
inc
ss
subl
mov
or
pop
add
out
clc
into
or
and
sub
xorl
xchg
imul
adc
fnstenv
ljmp
cwtl
adc
out
add
shl
inc
int
cli
shll
dec
cmp
xor
add
and
add
das
sbb
fisubs
push
push
add
shl
xor
call
lods
scas
sub
dec
push
mov
cmp
or
xor
jmp
ja
sbb
or
je
jae
scas
and
xlat
push
pop
add
andl
stos
es
inc
sub
mov
imul
mov
xchg
out
xchg
pop
mov
or
in
mov
mov
push
cs
sub
jo
mov
bound
adc
add
cmpl
in
xchg
xchg
ret
stos
fsubrl
cld
enter
mov
pop
add
lcall
sub
std
stos
jg
mov
add
jb
fdivrs
in
xchg
xor
and
sub
std
add
mov
pop
add
bound
ljmp
shl
and
cmp
pusha
inc
fstpt
mov
sahf
sbb
add
cmp
ret
sbb
nop
add
and
sti
jo,pn
jns
cmp
cwtl
mov
add
mov
and
push
repnz
xchg
pop
add
dec
in
and
dec
fadds
addb
cli
xchg
loope
adc
js
loopne
testb
popa
xchg
dec
imul
fdivp
mov
in
fwait
jmp
shlb
bound
out
stos
pop
mov
xchg
outsb
mull
insl
inc
imul
or
pop
into
aas
xchg
lds
mov
dec
jmp
rol
enter
fiaddl
pop
rcr
xchg
subb
dec
push
pop
mov
mov
inc
xchg
mov
js
jmp
ficoms
jno
mov
imul
push
add
xchg
mov
push
adc
out
adc
dec
pusha
aad
sub
xor
and
and
mov
in
jbe
push
loop
out
pop
test
jp
dec
and
xchg
mov
jo
jmp
xor
xchg
xor
popf
out
sbb
jle
push
add
aam
shrb
add
rolb
dec
add
mov
and
pop
cmp
jmp
add
inc
test
inc
add
mov
add
les
int3
xchg
or
sahf
mov
pop
bound
jg
cs
lea
jb
mov
shll
adc
sub
sbb
ljmp
jg
aad
outsl
lods
add
stos
add
adc
ret
push
mov
int
sahf
mov
pop
jmp
or
shr
ret
push
test
pusha
dec
dec
mov
adc
mov
aad
xchg
test
fwait
xor
jmp
lahf
in
call
push
and
cmc
push
and
xor
sub
push
xor
xchg
mov
stc
inc
sub
pop
hlt
cmp
xchg
out
bound
mov
data16
dec
mov
fcoml
pop
movsl
jmp
out
add
lret
in
jmp
xor
rcrb
pop
mov
or
xchg
add
mov
sarb
cli
test
mov
fwait
sbb
mov
mov
and
addl
aas
xchg
aaa
lret
lahf
pop
mov
jge
push
dec
or
jp
jmp
push
add
mov
adc
pushf
in
scas
pop
ljmp
pop
inc
cmp
dec
jp
inc
dec
cmp
subb
clc
push
nop
adc
test
or
daa
xchg
push
add
xchg
adc
sub
xor
adc
pop
push
sahf
sbb
and
insb
aaa
sbb
push
icebp
add
outsl
mov
ret
jae
cwtl
cmp
insb
out
dec
repz
sub
mov
mov
rcll
jmp
sub
and
cli
test
dec
daa
sub
in
sub
push
fstl
loop
cmp
ds
mov
push
out
shr
dec
pop
push
test
or
cld
add
pop
and
imul
lods
mov
ficoml
mov
in
movsb
cmp
popf
lods
add
xchg
cwtl
js
mov
add
nop
mov
add
popf
inc
xchg
mov
mov
jne
stos
jne
add
ds
imul
stos
add
stos
sub
mov
lcall
add
dec
cmp
clc
shr
or
mov
fidivrs
ljmp
add
mov
dec
mov
xchg
daa
pop
xor
push
popf
pop
into
cld
loopne
mov
movsl
adc
push
das
cli
jmp
mov
mov
xchg
pop
jbe
jmp
mov
jge
cmp
xlat
adc
nop
das
into
ss
add
mov
push
cmp
jp
cmp
and
push
push
loop
pop
fisubrs
lods
jmp
pop
mov
jo
pop
inc
test
dec
pop
mov
push
cmp
dec
add
mov
or
popf
push
push
in
xchg
adc
cmpsb
shrl
sbb
cmpsl
push
gs
or
jmp
pop
sub
jb
push
jmp
xor
cmc
shll
idivb
in
jne
cmp
lret
xchg
addl
inc
data16
adc
mov
es
dec
arpl
daa
dec
xor
add
nop
push
jae
pushf
in
in
push
mov
add
cmp
dec
jmp
add
and
andb
cmpsl
rolb
stos
pop
xor
pushf
xor
jecxz
jmp
cmpsb
loopne
js
add
jae
ret
fildl
jbe
and
cmp
xchg
mov
ret
inc
jmp
imul
mov
inc
push
jo
cmp
sbb
fsubrs
cli
in
add
adc
add
movsb
sbb
aas
mov
aam
add
js
ss
jle
insb
jmp
cmp
loop
dec
mov
cmp
repnz
loope
sbb
pop
pop
mov
adc
mov
ljmp
push
add
push
out
mov
mov
xor
and
jmp
mov
push
xchg
jp
or
cmc
pop
lret
dec
add
andb
xchg
jno
in
mov
push
add
jo
jge
cmp
stos
add
push
jns
add
xchg
dec
pop
add
mov
jmp
les
into
sub
add
jmp
and
sbb
cwtl
shlb
repnz
xchg
arpl
inc
and
and
xchg
inc
je
shlb
cli
sti
sahf
add
or
cmp
imul
or
repnz
jmp
cwtl
fdivrl
sahf
push
or
daa
lahf
push
inc
add
dec
in
lods
clc
cmp
lock
push
xor
movsb
jne
subb
lret
cs
jle
pop
inc
negl
inc
lret
clc
pop
mov
ss
jno
or
imul
inc
in
test
cmp
mov
jne
mov
lea
loop
scas
dec
add
mov
push
sahf
adc
cmp
popa
cmp
cwtl
loope
jnp
xor
lods
outsl
jo
mov
jp
adcb
jo
in
out
cmpsl
mov
dec
lea
hlt
add
jle
ja
mov
aaa
lcall
dec
xchg
imul
popf
jbe
ja
jmp
mov
xchg
fimull
out
dec
loope
push
negb
test
pop
jge
mov
pop
aaa
movsl
sbb
sub
adc
mov
std
jb
not
sbbl
mov
or
cld
pop
mov
ljmp
out
jmp
adc
lret
adc
xchg
push
cltd
mov
adc
inc
ljmp
push
aam
push
movsb
sbb
out
data16
mov
add
int3
mov
dec
jmp
ss
jl
add
xlat
lock
mov
jmp
hlt
stos
inc
add
cmp
inc
or
lock
hlt
lret
ljmp
mov
nop
cmp
iret
adc
fstpl
pop
lods
xchg
jae
cmp
mov
test
pop
enter
mov
shll
test
mov
aad
clc
cmp
ljmp
mov
cmp
xchg
aaa
fimull
inc
aas
push
out
ds
sarb
add
shrl
leave
mov
imul
int
inc
aaa
repz
loopne
das
scas
adc
les
sbb
mov
mov
cmp
dec
mov
fs
movups
dec
and
icebp
xor
imul
jbe
mov
pop
jg
cmp
adc
pop
add
mov
cmp
adc
outsl
test
fidivrl
pop
sub
mov
stos
lcall
fnstsw
and
jmp
in
xchg
jl
out
lods
or
out
lahf
shr
lahf
sub
xchg
add
mov
jle
jmp
ja
call
pop
pop
pop
jmp
jne
loop
out
pop
and
add
and
ds
addr16
insb
es
mov
movsb
movsb
ja
ljmp
decl
ljmp
call
xor
mov
jmp
push
xlat
adc
imul
mov
loope
xchg
sti
pop
mov
test
dec
lahf
or
fsubrs
jecxz
mov
push
sti
stc
cmp
push
loope
push
arpl
mov
push
out
adc
shr
add
sbb
xchg
fucompp
jnp
loop
sbb
je
and
cmpsb
lea
add
mull
hlt
int3
mov
notl
push
cmp
push
shlb
enter
scas
ljmp
lret
mov
dec
add
mov
sbb
and
mov
adc
ljmp
cld
add
rol
and
jl
jmp
lock
cmpsb
push
loopne
inc
inc
jmp
cmpsb
xchg
outsb
sbb
leave
jb
mov
mov
sbb
jmp
lea
xor
insl
push
push
into
sbb
js
pop
jnp
jg
jmp
dec
aam
xchg
mov
inc
aaa
fisttpll
xor
loope
and
std
insb
in
enter
add
lret
sbb
mov
enter
and
cld
out
adc
in
and
xchg
pop
std
pop
in
cmp
int
out
mov
or
ret
pop
and
jb
lcall
jns
ljmp
jecxz
or
out
push
lahf
mov
add
sarl
push
cmc
mov
repnz
nop
pop
push
cmp
ret
push
sub
js
push
jp
fsub
mov
adc
xchg
cmp
xor
fistpll
dec
cwtl
cs
fiaddl
loope
cmp
imul
mov
out
jne
pop
adc
cmc
les
or
and
push
cmp
lcall
push
rcl
imul
lods
nop
jmp
or
push
out
mov
mov
dec
xchg
adc
jae
mov
cmp
inc
or
bound
out
pop
xor
leave
mov
into
cmp
xchg
adc
sub
pop
adcb
and
idivl
sbb
bnd
ljmpw
xor
or
cmp
sarl
js
cmp
call
adcb
aam
add
xor
mov
fs
pop
out
nop
dec
inc
cli
ds
outsb
fcoml
in
ja
pop
out
movsl
sub
pushf
sbb
cmp
test
sbb
sbb
sbb
inc
fildll
lds
pop
test
arpl
dec
out
data16
xchg
pop
scas
stos
fnstsw
sub
jo
lds
stc
mov
xchg
add
fdivrp
pop
addr16
sbb
stos
mov
negl
sarb
xchg
inc
or
jbe
cmp
call
std
data16
movb
mov
push
xor
pusha
out
repnz
push
cmp
jle
xchg
mov
dec
jmp
popf
jg
aad
inc
inc
stos
je
sar
add
cmp
mov
dec
xchg
fcoms
aam
mov
mov
leave
cmp
pop
hlt
imul
cmpsl
ja
out
addr16
sti
sbb
mov
or
jle
cmp
jo
call
sti
push
adc
push
add
testl
add
cmp
or
test
xor
cmp
jne
pop
test
and
sbb
adcb
mov
add
repz
popl
or
ja
mov
lods
loop
cmp
mov
cwtl
cwtl
add
call
fwait
xchg
and
loope
sbb
fstp
jo
cmp
jns
add
jle
scas
outsb
jge
inc
add
cmp
inc
and
or
ret
imul
pslld
jmp
and
aad
push
or
push
mov
neg
cmp
stos
cmp
add
incl
jle
push
ljmp
hlt
sub
rclb
mov
incl
pop
mov
imul
sub
adc
sub
push
add
add
jmp
push
add
insb
imul
iret
hlt
lret
popa
pop
lock
pop
cmp
std
aas
rcll
mov
sahf
push
or
mov
add
subl
add
stc
lcall
and
fmulp
jmp
mov
add
or
out
inc
shl
adc
loopne
mov
arpl
pop
or
movsl
je
cmp
mov
xchg
mov
or
iret
nop
shr
loopne
inc
cmp
lahf
add
add
call
inc
add
add
lea
mov
add
insl
dec
loope
out
arpl
jmp
repz
jmp
jp
cmp
sti
loopne
and
lock
xor
mov
push
mov
out
addr16
jmp
adc
cmp
inc
push
and
popf
or
sbb
aad
ljmp
push
es
lock
mov
jnp
sbb
loopne
jne
add
int
icebp
ljmp
mov
xor
inc
xor
sub
shll
mov
push
xchg
lds
inc
ret
jp
test
xchg
mov
sbb
fcmovne
mov
cmp
pop
and
jno
dec
fsubrs
movzwl
in
out
mov
rcrb
jno
fnstcw
xchg
popa
ret
mov
ljmp
mov
js
ficomps
mov
cmpsl
pop
cmp
add
sahf
orb
pop
or
add
jmp
push
or
movsl
jno
sarb
cwtl
inc
test
js
sub
rorl
aam
aaa
fistpll
jbe
or
movsl
inc
fstl
cmc
out
mov
cmp
mov
push
jge
mov
cmpsl
pop
fnstcw
inc
ds
jl
das
nop
inc
mov
jg
xchg
push
add
inc
xchg
imulb
insb
push
add
insl
test
test
out
mov
lcall
es
fwait
cli
aam
call
add
and
cmp
mov
mov
shrl
out
jbe
hlt
add
add
movsl
ret
pusha
xchg
jmp
xor
cmp
ljmp
cmc
in
sub
cltd
pop
test
cli
lret
xor
cli
cmp
icebp
int
add
call
mov
lods
sti
imul
inc
xor
add
cmp
and
popf
hlt
gs
push
jns
popa
inc
mov
push
mov
stc
xchg
jp
mov
cmp
cmp
mov
mov
sbbb
nop
xchg
pop
mov
cmp
lret
and
add
cmpsl
or
movsl
ljmp
add
mov
and
or
add
out
cmp
cmp
add
int3
out
push
or
and
cmp
lods
not
push
sub
roll
aad
loop
lret
adc
inc
jmp
jae
or
out
shl
and
or
data16
fmull
add
adc
negl
sbb
cmp
lock
out
add
pop
add
adc
cmp
mov
mov
mov
jmp
inc
xchg
mov
bound
dec
in
sarb
shll
add
sbb
sbb
inc
add
in
inc
mov
xchg
cmp
clc
insl
mov
add
scas
dec
xlat
sbb
in
jb
and
bound
bnd
arpl
pushf
cmp
lahf
pop
int3
das
loopne
iret
add
popa
push
push
leave
data16
cmp
xchg
fmuls
jecxz
gs
scas
cmp
sub
ss
shrb
lcall
sub
sub
loope
adc
mov
pop
loopne
in
mov
push
mov
jmp
mov
cmp
add
fidivl
cmp
sub
add
sbb
lock
cmp
fisttps
xlat
jmp
inc
lret
loope
iret
or
or
loope
decb
adc
or
pop
repnz
sub
xor
out
mov
fdivrp
jno
adc
sub
stc
popa
xlat
adc
sub
stc
push
out
adc
lock
and
sub
inc
movsb
xor
dec
jns
adc
mov
pop
call
mov
or
imul
sub
jmp
adc
xor
jns
mov
roll
cmpsb
arpl
cmp
addr16
cmp
shl
pop
adc
sbbb
fdivp
add
loop
sbb
clc
data16
pop
xor
or
icebp
hlt
test
rolb
ret
jmp
shlb
mov
cltd
out
fsubrs
call
rcl
es
lret
xchg
aaa
loop
int
sahf
scas
mov
cs
mov
sahf
and
lcall
dec
jmp
mov
mov
lods
push
test
fidivrs
stos
popf
adc
mov
lahf
fwait
xchg
das
addr16
dec
pop
es
test
jo
adc
jno
pop
jge
mov
push
cmpb
push
add
gs
push
pop
push
push
dec
insl
pop
sbb
das
add
les
xor
xor
xor
pop
dec
and
add
aaa
xor
adc
add
dec
pmulhuw
pop
mov
cmp
and
outsl
adc
daa
pop
push
repnz
or
fmuls
add
popf
cmpsl
xchg
in
inc
cmp
mov
jmp
aas
stc
in
xlat
aad
jmp
decl
int3
xor
mov
fidivl
int3
add
xlat
nop
icebp
pop
xchg
enter
mov
fisttpll
cmpsb
sbb
xor
inc
sbb
in
cmp
mov
or
aad
cwtl
mov
jp
xchg
popf
xor
or
arpl
pushl
es
cmp
mov
lret
insl
incl
jns
lea
jnp
xchg
and
testb
jg
pop
jmp
inc
add
pop
add
out
jbe
pop
mov
mov
cmpsl
xor
fstpt
add
pop
xor
cmp
pop
xor
fdivrs
jnp
rorb
popw
fwait
push
mov
push
mov
cli
add
sbb
data16
in
pop
in
stos
add
cmp
in
add
out
xor
test
cli
push
loop
sbb
and
sub
flds
es
fildll
rcr
xor
dec
daa
jnp
aam
stos
jb
call
fsubrl
movhps
mov
and
xchg
fs
mov
ja
lcall
scas
cmpl
scas
xchg
sbb
inc
xorb
addr16
jp
and
pop
and
dec
jnp
pop
sbb
popa
inc
jo
incl
push
loop
dec
nop
jmp
fadds
mov
outsb
jb
lods
push
jle
sbb
out
or
xor
adc
int3
adc
sbb
ret
add
push
cmp
loope
adc
shrd
mov
add
cmc
and
adc
insb
sti
pop
and
and
jge
imul
or
loop
movsb
popf
add
jmp
mov
mov
mov
iret
call
jmp
je
ja
ret
sbb
sub
adcb
or
mov
mov
into
sar
call
int
scas
fstpt
sbb
cmp
test
xor
mov
xorl
inc
repz
aam
adc
add
adc
sub
jle
and
cmp
pop
jno
cwtl
dec
add
popf
inc
jo
test
pusha
jb
adc
add
sub
pop
insb
into
inc
shr
and
sbb
ja
adc
adc
add
push
jge
sarl
sub
leave
add
cmp
lods
add
in
pop
xor
jle,pt
popf
outsb
add
divb
dec
push
repnz
pop
aas
ret
fisttps
add
call
les
fadds
out
lea
iret
push
xchg
popf
add
stc
jmp
mov
int3
out
icebp
rorb
jmp
stc
xchg
add
fwait
cmp
ror
jmp
neg
mov
fbstp
jmp
sbb
mov
loopne
lds
mov
push
mov
adc
ret
cmp
sahf
cmpsl
add
push
sar
jmp
mov
rcll
addr16
pop
push
arpl
adc
scas
nop
out
les
nop
test
push
lahf
outsl
jne
dec
sbb
jnp
js
push
cmpsl
jnp
push
loopne
and
and
ja
pop
scas
and
dec
in
push
dec
mov
pop
add
inc
popa
int3
pop
and
rcr
fnstenv
pop
hlt
xor
cmp
pusha
nop
adc
cmp
cli
pop
hlt
aas
sbb
fmull
out
sbb
mov
and
adc
or
testb
sbb
addb
cmpsb
mov
fisubs
lock
or
inc
mov
stc
repz
mov
add
icebp
ret
mov
fcmove
jno
fldt
outsl
dec
test
push
add
clc
or
repnz
fidivrs
movsl
add
out
add
add
pop
mov
sbb
in
xchg
lahf
inc
jno
loopne
scas
es
xchg
ja
iret
jo
aam
jae
negb
out
insb
inc
ret
mov
adc
icebp
jp
dec
call
cwtl
jbe
jl
lods
xor
dec
mov
popa
dec
pop
movsb
jnp
add
xlat
mov
cmp
sub
pop
sbb
fs
xor
pusha
mov
rcrl
sbb
mov
clc
sub
add
push
mov
pop
sub
fisttpll
pop
dec
aad
add
sub
push
or
pusha
cmp
lock
or
testb
cmp
cli
pextrw
rorb
sub
jae
sbb
add
rol
es
stos
push
add
in
mov
fcom
stc
fisttpll
cmp
mov
cli
add
loopne
lods
pop
xlat
jo
jge
mov
movsb
inc
mov
mov
push
loope
or
jmp
add
test
fwait
xorb
mov
cli
cmp
les
push
roll
gs
add
ss
mov
add
inc
jns
lods
cmp
dec
mov
jnp
jl
pop
jge
stc
and
pop
mov
cmp
dec
mov
add
test
jne
ja
add
push
aas
sub
add
rorb
cmp
leave
pop
insb
ja
fwait
push
push
mov
cmp
and
mov
cmp
stc
sub
inc
nop
cmp
mulb
mov
stc
fsubrs
cs
add
add
mov
add
ret
fsubl
gs
xor
mov
aad
fadds
in
xlat
loope
hlt
icebp
int
adc
mov
cmp
pop
or
cmc
in
sarl
shrl
fstp
add
lret
mov
xchg
xlat
stos
insl
sbb
sub
add
add
sbb
pop
js
lods
dec
js
cltd
out
add
sbbb
mov
or
test
lret
add
clc
pop
fsubrp
dec
rolb
in
add
or
ret
imul
jmp
xor
or
int3
or
add
sbb
loope
jecxz
xchg
fisttpll
push
jb
sub
cmp
mov
mov
or
ret
or
imul
adc
sub
adc
adc
stc
mov
and
in
dec
and
sbbb
outsl
leave
sbb
in
pop
and
hlt
sbb
test
add
loopne
ss
or
mov
cmp
jecxz
add
sbbb
dec
es
push
in
cmp
mov
pop
add
inc
add
add
loope
into
test
fisttpll
jge
lock
jne
lret
shr
in
int3
frstor
mov
leave
xor
aaa
out
sub
pop
call
xlat
lds
push
xor
lds
jmp
mov
lahf
rcrl
mov
or
scas
inc
mov
mov
mov
leave
inc
in
idivl
shrb
add
cmp
bound
push
or
jmp
cmpsb
jno
popf
and
repz
enter
sub
jecxz
arpl
imul
push
fidivl
mov
mov
jns
mov
jns
es
or
add
add
ds
adc
jg
jns
jecxz
jmp
mov
adc
mov
pop
jae
add
daa
cmp
jno
cmp
adc
sub
loope
push
sbb
and
mov
push
faddl
in
lret
push
dec
adc
cmc
jecxz
int3
hlt
fwait
and
rorb
cmpsb
sarb
cld
jl
push
xchg
loop
pop
mov
rcll
in
fisubl
sbb
cld
fnstcw
dec
add
scas
stos
mov
mov
jno
stc
pop
or
ljmp
pop
mov
add
jns
pop
dec
sub
xorl
sbb
mov
xchg
inc
dec
outsb
lahf
cmpsl
push
jno
cmp
mov
iret
inc
aam
shlb
scas
rolb
sub
or
sub
cmpsb
jle
push
shll
xchg
jl
jnp
ret
out
xor
insb
jmp
aas
xlat
cmp
xor
pop
sub
sbb
dec
sub
das
xor
adc
ss
or
push
or
fs
cmp
iret
xchg
sbb
bound
popa
out
sub
push
jecxz
sbb
sbb
cmp
iret
add
adc
ljmp
sub
mov
int3
repnz
pop
clc
jmp
in
into
jno
jmp
test
dec
sub
mov
xor
mov
sti
hlt
leave
rol
stos
jecxz
iret
aaa
cli
in
push
cmp
mov
cmp
jge
outsl
pusha
add
pop
pop
dec
jmp
out
push
sbbl
xlat
pop
push
xchg
iret
sbb
push
inc
xor
scas
push
mov
cmp
add
mov
add
mov
icebp
jne
das
add
jl,pn
sarl
sbb
dec
xchg
pop
adc
test
call
xor
addb
ret
sarl
jg
jno
or
cmp
andb
mov
jno
add
fs
pop
pop
cltd
andl
push
fdivrs
cmc
mov
test
in
inc
fsubrs
js
in
dec
jge
cli
mov
jo
in
test
add
outsb
mov
add
js
inc
movsl
xchg
xchg
jmp
enter
add
fcmovbe
inc
subb
push
push
ret
push
iret
jmp
mov
outsb
lea
hlt
jae
ltr
test
jmp
push
stc
dec
xchg
daa
jmp
or
fstps
push
jmp
fcmove
stos
mov
pop
fimuls
add
cltd
sbb
cmp
mov
fwait
loop
cmp
lock
adc
sub
xchg
lret
test
mov
dec
cmc
sbb
inc
mov
mov
cmp
stos
cmc
mov
and
xchg
sahf
jge
dec
cld
int
jmp
inc
pop
sbb
test
push
leave
dec
xor
jmp
inc
or
ficompl
sub
xor
jmp
outsl
into
cmp
popa
nop
mov
push
adc
mov
or
pop
notb
je
push
in
icebp
sbb
xor
add
popa
fdivl
rcrl
idivl
push
or
mov
push
sbbl
cmp
shll
xchg
mov
orb
push
cmp
xchg
inc
and
add
mov
stos
mov
cmpb
push
sub
lods
aam
cmpsb
mov
inc
or
xchg
repnz
or
clc
sub
add
jb
push
cmp
clc
das
inc
pop
pop
pushf
push
clc
imul
mov
lcall
orl
and
sbbl
in
or
push
and
push
inc
pop
insl
push
imul
aam
mov
or
idivb
adcl
mov
out
and
loop
push
scas
xchg
mov
mov
popa
sbb
into
into
xor
mov
cmp
or
pop
mov
or
or
ffreep
push
hlt
or
xor
aas
sbb
hlt
cmp
cwtl
mov
inc
movsl
lea
dec
pop
test
stos
jnp
popf
sub
stos
add
loop
sub
or
dec
sbb
pop
pmulhuw
and
push
je
data16
call
out
sbb
sbb
into
out
dec
movsl
vpcomuq
pop
test
inc
insl
shl
lret
sub
push
loop
or
push
popa
in
inc
pop
push
sub
or
mov
or
or
xchg
gs
lahf
popl
xor
fcmove
cmp
aas
dec
popl
out
cmp
jmpw
jg
dec
push
push
aas
pop
pop
adc
fstps
hlt
outsb
std
aam
ljmp
sub
pop
insl
adc
xchg
pop
sub
fistpl
jg
fwait
xchg
fcomps
jge
mov
push
dec
sub
xor
lahf
das
popl
int
push
pop
mov
out
adc
hlt
ljmp
mov
and
arpl
push
mov
notb
pop
insb
mov
fidivs
sbb
inc
and
mov
add
loopne
cmp
xchg
add
mov
sahf
pop
dec
daa
inc
mov
cmc
aaa
pop
psubusw
imul
jno
inc
hlt
repz
fidivrs
xchg
into
adc
lret
fdivs
inc
add
dec
or
pop
call
enter
adc
sub
mov
lret
in
clc
arpl
imul
jnp
mov
pop
jae
in
or
sub
or
pop
nop
cmc
sbb
or
adc
xor
push
les
sub
xchg
inc
dec
das
inc
leave
sbb
call
scas
lcall
jnp
pushf
cmp
xchg
xor
dec
int3
adc
imul
fadds
inc
sub
sbb
popf
xchg
call
cs
dec
dec
lret
int3
xchg
xor
jmp
push
push
arpl
and
adc
adc
xchg
fsubr
sbb
in
stc
dec
cmp
aam
push
add
cmp
cs
cmc
push
ja
xchg
mov
iret
push
xorl
push
and
call
fsubrs
aaa
sti
dec
pop
mov
scas
imul
mov
jecxz
jo
std
pop
pop
pop
push
jge
mov
pop
or
cwtl
leave
xchg
mov
out
aam
mov
push
push
negb
inc
xchg
mov
pop
mov
hlt
push
ret
out
cmp
add
xchg
or
pop
adc
out
ret
adc
test
ss
jnp
jns
loope
sub
and
fcom
in
popa
mov
add
out
sbb
pop
push
test
sbb
jnp
mov
enter
sub
enter
mov
cmp
repnz
and
adc
andl
fsubrs
xchg
inc
cmpsl
pop
scas
mov
sbbl
add
cmp
jnp
lods
xchg
sub
es
fldenv
stos
xor
sbb
jge
mov
mov
leave
movsb
mov
jp
daa
inc
push
mov
repnz
and
push
push
pushf
scas
add
mov
mov
idivl
test
push
idivb
loop
jecxz
clc
pushf
cmp
sbb
loop
bound
adc
push
sub
mov
aam
outsb
jb
inc
or
ss
test
mov
inc
fsubr
hlt
notb
stos
xchg
jae
inc
adc
push
cli
aam
ljmp
inc
icebp
imul
pop
test
jl
adc
cmc
scas
cmp
lret
imul
cmp
hlt
pop
stos
pop
mul
cmp
inc
orb
cmp
or
mov
scas
shlb
popa
jbe
mov
jecxz,pn
mov
inc
adc
adc
sub
scas
test
push
push
and
mov
push
and
popa
inc
xor
imul
cmp
jl
aas
fcomps
jge
mov
pushf
xchg
mov
cmc
repz
dec
stc
in
push
lret
fdivs
inc
xor
imul
pop
cmpsl
xchg
and
fstl
cmp
in
push
inc
loope
mov
out
jmp
and
jno
mov
cltd
aaa
inc
add
fimuls
push
testl
jp
das
mov
pop
das
sarb
in
push
int3
adc
add
test
mov
add
shr
cld
jge
mov
negl
mov
idivl
push
subl
push
dec
mov
mov
push
scas
sbb
jp
call
pop
add
jmp
popf
dec
vorps
or
dec
je
fsts
mov
cmp
fwait
xchg
lods
leave
mov
jo
into
or
lea
js
push
into
or
into
fdiv
loope
xchg
adc
jge
hlt
loope
lret
into
or
sub
adc
or
jle
hlt
pop
das
and
ljmp
std
mov
add
lret
sbb
mov
sarl
jp
bound
jbe
data16
mov
mov
test
or
popl
xor
inc
xchg
out
cmp
and
inc
inc
mov
mov
daa
jns
mov
fsubp
popl
in
adc
data16
and
and
cmp
xchg
cmp
inc
jp
jge
repnz
mov
clc
mov
inc
loopne
add
push
mov
aam
cs
lea
cmp
cmp
cmp
das
pusha
cmp
jp
cmp
cmc
mov
push
mov
in
loopne
or
push
cmp
lret
cwtl
rcrb
xor
and
sbb
lock
and
mov
mov
cli
xor
add
sub
pop
mov
xchg
popf
cmp
loope
adc
mov
or
loope
pop
xor
or
push
mov
xor
into
or
add
stc
hlt
loope
pop
or
into
or
push
or
hlt
loope
gs
mov
ljmp
sub
mov
ljmp
pop
lods
and
lret
sarb
or
jb
lret
rcrb
and
lret
shlb
ljmp
jp
repnz
aam
mov
adc
cmp
pop
aam
xor
popa
push
sbb
dec
hlt
or
test
xchg
sbb
hlt
je
sbb
and
sar
lods
mov
or
data16
sub
dec
xlat
inc
jge
mov
xlat
xor
mul
enter
adc
lcall
fsubs
inc
xchg
pop
fnstenv
pop
decl
and
mov
idivb
subb
jne
and
int3
shlb
sbb
push
cmp
xor
lea
lret
cli
ficoml
test
mov
mov
dec
rcl
pop
pop
add
xor
or
sti
popf
add
loop
fisubrl
mov
popa
and
popa
push
sub
hlt
mov
ret
push
push
and
les
adc
add
inc
add
imul
jp
mov
daa
pushf
inc
add
pop
out
jp
leave
mov
pop
sub
and
lods
fsubs
jge
mov
popf
mov
xchg
xor
cmp
adc
jne
addr16
fistl
sub
sub
movsl
or
lahf
adc
idivb
cmp
and
sbb
and
shrb
cmp
rorb
push
adc
or
dec
fnsave
push
ret
sbb
or
loop
xchg
imul
loope
dec
aam
add
pop
dec
imul
vphaddwd
jne
mov
test
mov
mov
test
mov
loope
xor
out
idiv
xchg
and
pop
test
jg
or
jle
cltd
filds
pop
repnz
sbb
adc
out
divb
fcom
cmp
pop
push
jae
fwait
popf
jno
inc
test
orl
mov
call
mov
outsl
add
loop
mov
or
cmp
jnp
mov
inc
repz
mov
inc
imul
jle
orl
clc
xor
es
jnp
imul
out
sbb
push
pop
adc
pop
mov
mov
in
adc
inc
out
sub
test
call
roll
sbb
mov
scas
pop
mov
jle
arpl
popf
cld
jnp
mov
lock
xor
imul
mov
jle
outsl
push
ret
mov
insl
out
in
xchg
xor
es
int3
in
int
lcall
fnstsw
inc
jnp
sub
fcom
and
mov
stc
lcall
call
mov
push
sub
mov
push
and
adc
es
cmp
sbb
rclb
daa
and
ljmp
jg
and
cmpsb
jmp
jo
xchg
xchg
add
dec
stc
and
mov
rcrb
out
cmp
scas
inc
mov
mov
dec
push
leave
push
ret
cmpsl
cmp
cmpsl
pop
ud2
popf
push
scas
hlt
loope
cld
mov
lret
rorb
les
ljmp
dec
inc
and
lret
sar
outsl
inc
sbb
xor
scas
cmp
jne
push
cmp
in
sbb
cld
mov
ja
cmp
sbb
push
ret
pop
cmp
fs
cmp
adc
mov
hlt
and
push
or
jge
ljmp
fldcw
dec
data16
loop
xchg
cmp
jnp
jno
je
sub
and
out
mov
xchg
xchg
idiv
jbe
jg
push
adcl
jp
adc
movsb
int3
xchg
ds
out
xchg
push
jp
mov
add
das
push
call
dec
add
and
mov
dec
mov
les
popa
insb
mov
inc
sbb
inc
add
adc
test
insb
addb
cmp
dec
jp
adc
add
cmp
mov
cmpsl
data16
cmp
adc
mov
jb
ret
adc
sub
adc
leave
dec
call
inc
rcrb
or
mov
add
lret
mov
ret
test
aaa
cmp
imul
test
popa
jno
add
cld
jbe
xchg
and
push
mov
push
inc
ljmp
mov
sub
or
out
pop
and
dec
inc
dec
add
xor
dec
ljmp
mov
xchg
ret
lock
or
cmp
xchg
xchg
xor
mov
fiadds
popa
fsubrs
jne
mov
mov
cli
leave
cmp
mov
mov
adc
or
xorb
scas
sti
sbb
pop
mov
and
adc
arpl
dec
lea
pop
dec
mov
mov
test
int3
adc
je
dec
lret
fsubrs
addb
jmp
sub
and
in
xor
call
adc
dec
call
inc
rcrb
call
add
pop
adc
mov
xchg
idiv
cwtl
lds
test
jbe
jnp
faddl
jns
mov
aam
cmp
jle
idivb
bound
pop
cmp
xchg
mov
add
xchg
jbe
cmp
dec
pop
add
aaa
int
cmp
push
into
or
mov
hlt
loope
push
jle
into
adc
inc
xchg
in
enter
fsubs
into
pop
mov
inc
imul
jge
mov
mov
fdivp
in
sbb
int3
adc
inc
movsl
in
clc
add
arpl
xor
rol
fdiv
aas
cmc
add
cmp
inc
and
sbb
ss
popa
push
cmp
and
pop
shl
pop
sbb
inc
cmp
rcrb
jge
mov
stos
bound
idiv
inc
jg
pop
test
iret
jnp
mov
jb,pt
enter
add
fisubs
push
mov
test
xchg
ds
jp
clc
outsb
and
in
ljmp
jnp
cmp
jnp
daa
mov
pop
sub
lcall
mov
fdiv
sarl
lea
add
pop
inc
inc
cmp
dec
pop
add
jmp
test
or
clc
hlt
rcll
inc
cmp
jle
add
test
gs
clc
jno
add
test
and
jnp
mov
fidivrl
adc
mov
loop
mov
lock
mov
popf
jnp
jae
mov
mov
test
in
xchg
inc
add
sbb
ret
hlt
loope
orl
or
loope
lds
mov
or
xor
loope
call
mov
cltd
adc
dec
and
ljmp
movsl
mov
jns
lret
shlb
orb
popl
scas
push
mov
movsl
mov
loop
cmp
add
test
aam
cmp
jae
cmp
aam
inc
testl
mov
cwtl
mov
and
aam
mov
cmc
clc
cmp
and
cmp
jmp
cmp
popa
aam
in
movsb
jnp
add
add
aad
mov
mov
aam
orl
andl
pop
cmp
popa
aam
hlt
push
cmp
int3
xor
xchg
or
sbb
sti
hlt
mov
jae
add
pop
mov
inc
pop
cmp
inc
aam
pop
or
hlt
or
lret
xor
cmp
add
xchg
sbb
sbb
push
scas
and
inc
and
mov
shlb
push
ret
jnp
insl
adc
sub
xor
cmc
jecxz
lods
fcomp
mov
ljmp
popl
or
mov
pop
movsl
cmp
call
cmp
add
aas
aam
push
dec
mov
sub
out
xor
adc
mov
cmp
mov
unpckhps
push
ret
or
insl
xlat
sub
xchg
daa
ret
aad
and
std
sahf
adc
dec
bnd
scas
mov
mov
scas
movsb
mov
push
push
and
push
jbe
push
imul
aam
lahf
rol
inc
or
fdiv
adc
adc
in
sahf
sbb
xor
push
imul
popa
mov
negb
ret
sti
cmp
xchg
xor
scas
inc
in
inc
lret
fdivrs
dec
inc
xor
imul
pop
pop
cmp
sbb
mov
cmp
pop
aam
add
add
fsts
or
cmp
mov
pop
gs
fs
clc
or
adc
loop
and
jmp
inc
push
sub
mov
push
jb
or
shl
adc
inc
xchg
in
xor
or
xor
inc
xchg
mov
jb
cmpsb
push
xchg
push
aam
xchg
mov
add
dec
push
cmp
ds
sbb
jp
or
mov
or
int3
xchg
das
int3
jp
scas
push
mov
push
fs
jnp
stos
and
xor
sub
aaa
and
push
orl
mov
test
divl
add
push
xchg
ds
mov
xchg
cmp
xchg
xor
ss
jge
fcomps
mov
pop
leave
cs
sub
or
in
test
mov
inc
mov
sti
test
push
mov
mull
call
fiaddl
jl
data16
xchg
clc
ret
add
mov
xchg
lret
fcomps
pop
and
pop
lahf
or
mov
mov
adc
add
sahf
xor
cmpsl
inc
adc
test
ja
or
das
pusha
idiv
mov
sub
xchg
and
testb
inc
cwtl
outsb
push
sbb
je
sub
popl
sti
jecxz
data16
and
orl
data16
mov
lret
pop
fldenv
cmp
push
and
clc
pop
fdivrl
jnp
push
nop
sbbb
pop
mov
imul
cmp
into
clc
cmp
shrb
cmp
icebp
mov
bound
shlb
pop
mov
add
cmp
mov
sub
cmp
push
jno
fcmove
xchg
inc
imull
xchg
aam
out
push
add
sti
push
push
jp
add
xchg
pop
inc
add
daa
mov
test
adc
loope
call
ljmp
xor
inc
sahf
lcall
xor
outsl
cmp
xchg
xor
ret
int
repnz
adc
push
out
jl
in
sub
or
mov
mov
hlt
negl
rcrb
call
pop
adc
sub
add
add
shrl
repz
rol
and
lret
lret
mov
clc
orl
pop
pop
test
shll
mov
pop
pop
pop
in
jb
pop
test
jg
adc
fcomps
jns
inc
add
cmp
jne
cmp
add
cmp
pusha
scas
cmp
sbb
out
hlt
adc
push
in
mov
or
aam
inc
sti
mov
cli
cld
pop
test
lret
cmp
outsb
and
inc
pop
push
xor
cli
mov
idivl
xor
pop
sub
mov
and
jge
mov
mov
cld
xchg
xor
xor
adc
mov
push
xchg
xor
dec
jno
cltd
scas
mov
xchg
dec
mov
add
idivl
push
and
mov
push
adc
cmp
xchg
xor
pop
ss
adc
leave
jne
mov
push
fdivrs
push
int
pop
adc
mov
cmp
std
cmp
jnp
push
mov
sub
call
xchg
add
add
push
sub
xor
and
repz
push
jae
push
and
les
cmp
loopne
inc
add
pop
mov
xchg
dec
jae
add
repz
loop
loop
sbb
popa
test
add
sub
jle
mov
or
jne
adc
jno
in
mov
ret
sti
stos
mov
jbe
cmpb
dec
mov
movsl
loop
hlt
loope
cmpsl
enter
data16
dec
fs
into
or
mov
jb
loope
in
xor
fsubr
xor
add
fadds
inc
pop
jl
jp
pop
inc
js
and
sahf
or
dec
sti
jnp
in
stos
pop
sub
xor
imul
sub
or
pop
add
jmp
inc
psubb
add
sub
cmp
mov
cld
mov
jmp
sti
in
pop
add
popf
mov
mov
daa
jmp
mov
lock
push
fbld
sbb
clc
pop
xchg
dec
add
loop
pop
scas
sub
popa
inc
imul
push
stc
inc
pop
cli
mov
jo
or
rcrb
cmp
push
push
and
pop
in
mov
push
push
and
xchg
cmp
xchg
add
cmp
ds
fistl
push
popl
pop
add
jle
sahf
scas
aam
divl
jne
add
cmp
xor
lds
aam
sub
cmp
out
sbb
jo
mov
scas
call
cmpsl
rclb
call
out
pop
adc
pop
cs
daa
rclb
adc
sub
addr16
and
mov
lret
mov
mov
dec
stos
shl
cmpsb
jle
pop
test
rcrb
jnp
adc
pusha
negb
xor
pop
je
aad
and
ja
and
push
and
addr16
push
or
inc
rclb
test
int
xor
jns
add
xchg
adc
sbb
push
testl
mov
je
std
push
ret
fidivrs
xchg
xor
cld
int3
jle
scas
dec
mov
sbb
hlt
jnp
jo
push
test
cwtl
adc
sub
ljmp
repnz
add
mov
sbbl
mov
sub
insb
dec
or
int
mov
sub
adc
push
scas
mulb
jp
lods
pop
xchg
lret
stos
call
mov
cmp
mov
aad
sarb
scas
lret
shlb
mov
and
je
lret
sarb
ljmp
mov
and
dec
push
popl
ljmp
push
adc
lret
data16
ja
rorl
mov
mov
lcall
pop
dec
aam
mov
rcll
add
cmp
add
adc
lret
push
mov
hlt
or
dec
mov
nop
hlt
or
mov
sbb
push
hlt
or
xchg
stos
or
adc
or
xor
mov
add
jecxz
sbb
xchg
rcr
or
dec
xorb
vphaddbq
shlb
adc
mov
mov
jmp
dec
cmovo
push
lods
sahf
rorb
lahf
out
or
ljmp
data16
and
shr
lret
rclb
add
cld
ljmp
and
lret
sarl
lock
push
xor
daa
data16
testl
out
jp
ds
dec
imul
jno
aam
sub
xor
into
daa
aam
repz
std
cmp
out
xor
sub
mov
cmpsl
sbb
jge
or
xor
cmp
mov
inc
dec
push
mov
sbb
addr16
loopne
scas
cmpsb
loop
scas
pop
add
pop
cmp
xchg
add
pop
add
repnz
je
das
pop
add
aad
out
leave
ret
dec
inc
jmp
dec
fsubs
addr16
mov
loopne
cmp
xchg
xor
push
int3
mov
mov
sbb
inc
lret
popl
jge
mov
idivl
push
sub
mov
pop
jp
cmp
ds
rcr
jp
fdiv
pop
test
int3
adc
lret
fnstcw
jecxz
push
sub
sbb
notb
stos
mov
in
jnp
mov
xor
and
jle
imul
mov
mov
rcr
xchg
sub
mov
cmp
insl
pop
add
loopne
movsb
cmp
xchg
xor
repnz
int3
adc
repnz
jmp
push
iret
inc
das
pop
pop
sub
push
adc
cmp
xor
mov
incl
add
test
scas
jnp
mov
into
jne
scas
fldenv
orl
fisttpl
add
xchg
ds
stos
mov
jp
rcrb
movb
inc
mov
mov
sub
loop
insb
adc
inc
imul
add
addr16
stos
and
xlat
xlat
pop
mov
lds
jmp
add
cmpsl
add
jp
pop
insl
jecxz
sub
int
xchg
stc
loope
push
ret
lods
cmp
add
loop
xchg
scas
xchg
push
push
and
loope
fadds
rorl
repnz
push
inc
push
push
and
jns
sti
add
push
and
fwait
rcrb
jnp
mov
jno
sub
and
out
fisttpll
fidivs
push
xor
sbb
dec
jmp
mov
aam
clc
or
fsubl
movsb
jp
loope,pt
jb
sbb
sbb
push
icebp
mov
mov
jle
sarb
xchg
xor
int3
leave
lock
add
mov
xchg
dec
not
mov
mov
ss
adc
cli
inc
jbe
mov
mov
mov
jl
xchg
jge
mov
mov
mov
idiv
or
pop
pop
mov
dec
lret
fsubrs
ja
push
aam
xchg
push
lea
ret
fistpll
jnp
push
cmp
sub
pop
test
mov
adc
jge
mov
jae
add
test
pop
repz
popl
add
data16
pop
dec
in
inc
adc
data16
or
inc
pusha
js
mov
mov
ret
aam
mov
sbb
cwtl
and
jge
mov
mov
idiv
into
jne
pop
test
out
or
daa
inc
xchg
pop
sahf
lds
mov
mov
inc
cmp
aaa
cmpsl
push
pop
sub
adc
and
and
lcall
mov
lcall
mov
push
inc
je
cmc
push
lcall
inc
mov
cs
test
les
shl
negb
scas
dec
outsl
pop
xor
aas
cmpsb
cmp
mov
shll
add
cmp
hlt
or
adcl
xor
sub
hlt
sbb
adc
jecxz
adc
mul
mov
lahf
int3
adc
push
sahf
fnstcw
icebp
mov
mov
insl
testb
cmpsl
rcrb
daa
xor
pop
sbb
inc
rcrb
cmp
xchg
and
add
inc
sti
sbb
fstpt
inc
dec
and
rcl
scas
sbb
lcall
shrb
sbb
pop
cmp
andl
fistps
jb
cmp
cmpsb
and
add
fimull
push
popf
sub
xor
daa
mov
pop
in
or
mov
mov
pop
sub
xor
enter
popa
outsb
test
push
ret
cs
xchg
xor
push
int3
or
push
add
loope
repnz
lock
or
ret
xor
or
loope
xchg
inc
jo
or
lahf
out
lahf
mov
push
mov
cmpb
or
xor
faddl
clc
jp
sub
lods
jno
adc
insb
mov
inc
jp
rcr
adc
js
les
pop
xlat
icebp
rcrb
call
xor
inc
decl
popa
mov
ror
fnstcw
sahf
into
or
loope
lock
into
out
sbb
scas
xlat
sarb
and
lret
rclb
pop
and
lret
rclb
cwtl
inc
movsl
pop
movsl
enter
inc
movsb
adc
arpl
xor
xchg
data16
mov
jp
push
idiv
xchg
jl
pop
test
and
push
xchg
lods
fnstenv
inc
mov
push
add
call
xchg
add
call
push
add
jle
scas
dec
mov
add
cmp
xor
push
out
cmp
cmc
aam
push
bound
popf
mov
cmp
add
fsubrs
fistps
sub
test
addr16
sub
les
or
pop
std
pop
shrl
cld
aad
adc
push
adc
lret
dec
sbb
pop
into
rcl
add
xchg
fcompl
inc
iret
jne
push
popa
div
jb
sti
int3
adc
cmp
popa
insl
mov
inc
mov
mov
or
jo
push
in
or
ljmp
mov
cli
mov
aas
push
daa
push
movl
adc
imul
imul
push
cld
mov
jmp
inc
repz
lahf
into
dec
scas
test
inc
mov
mov
sarl
dec
inc
cmp
das
jge
mov
push
and
idiv
cli
mov
insb
jnp
lret
fmuls
inc
cli
pop
xchg
aam
pop
shlb
sarb
inc
nop
mov
inc
add
inc
in
xchg
jp
mov
adc
jne
call
fwait
rcrb
arpl
cmp
lcall
in
jecxz
or
mov
and
imul
dec
scas
mov
mov
stos
mov
jge
aam
jge
test
add
or
lret
std
mov
xor
repnz
inc
rorb
dec
pushf
sub
or
loop
xor
jmp
or
xor
stos
hlt
adc
enter
cltd
inc
push
mov
lret
cmp
push
ret
and
xchg
xor
cli
cltd
int3
cmp
xor
popa
test
push
dec
stc
and
mov
push
xor
outsb
movsl
mov
cmp
cmp
inc
fdivrs
fcoml
ror
mov
hlt
sub
mov
and
push
sbb
inc
enter
ss
pop
sub
xchg
idiv
das
adc
add
pop
outsl
push
fs
cmpsb
inc
cmp
jge
mov
arpl
sub
in
mov
adc
jbe
ror
mov
fsubs
lods
mov
pop
or
push
and
mov
push
push
mov
and
xchg
shlb
sbb
cmp
cltd
ljmp
and
adc
jg
push
mov
loop
sub
ret
cs
xchg
xor
or
ds
dec
rolb
lds
jae
ljmp
jne
and
pop
jmp
dec
sub
scas
aam
sbb
outsb
mov
add
adc
outsb
aam
jecxz
dec
inc
or
sbb
sbb
xor
lods
inc
test
addr16
lea
jnp
adc
idiv
js
iret
add
fildll
push
mov
ret
jle
addr16
cmp
and
cli
push
lret
cmpsb
fs
lcall
cwtl
lret
shrl
jmp
data16
sti
xlat
dec
cmpsl
cmp
in
sbb
jae
xor
das
inc
enter
cmp
rcrb
sbb
or
jp
jge
popl
test
mov
repz
rorl
push
popl
xchg
jge
data16
dec
int
popl
push
push
sub
cwtl
cmp
inc
or
and
cmp
sbb
xor
inc
pop
mov
mov
sub
mull
add
or
xchg
xor
test
or
add
inc
test
mov
inc
clc
cli
mov
or
loop
scas
into
mov
repnz
push
daa
mov
nop
iret
sbb
cmpsb
stc
fsubrs
jge
mov
inc
lcall
out
xor
int3
adc
inc
pusha
in
dec
lret
fadds
cs
in
and
adc
mov
add
push
jno
jp
xor
add
lcall
xchg
inc
inc
add
movsl
lea
outsl
pop
sub
les
or
xchg
sub
data16
idiv
cmp
lea
test
and
shl
aam
mov
mov
adc
or
cmp
add
cmp
loope,pt
mov
push
mov
hlt
adc
cmpsb
in
xchg
push
xor
sub
mov
inc
mov
into
adc
push
sub
inc
stc
aam
mov
or
push
sub
xor
or
xor
mov
or
subb
mov
or
mov
add
add
fcoms
nop
inc
or
idiv
push
push
xchg
pop
mov
call
mov
inc
jmp
cli
int
pop
or
push
and
mov
dec
cmp
sbb
popf
hlt
or
roll
mov
sbb
cmp
and
sbb
call
jae
mov
push
xchg
add
push
cmp
inc
pop
inc
rcrb
adc
scas
jl
outsb
fwait
insb
inc
es
sti
ljmp
lahf
inc
out
lret
notl
mov
push
push
and
shl
pop
mov
push
arpl
sub
xchg
xor
leave
fdivr
mov
add
je
clc
and
pop
pushf
push
mov
xor
inc
lods
pop
scas
mov
xor
bound
movsl
sbb
mov
sbb
and
sbb
and
sarl
shl
pop
sbb
in
repnz
xor
jnp
loope
push
pop
pop
sub
pop
xlat
jmp
add
lods
jnp
cwtl
lcall
add
loop
das
scas
sbb
popa
dec
in
push
sub
or
aam
mov
push
inc
add
cmp
fisubl
fidivrs
aam
pusha
es
cmp
test
cmp
dec
pop
cmp
inc
sbb
leave
and
stos
fsubs
sbb
and
shlb
cmp
rolb
cmp
shll
jns
insb
iret
sbb
and
cmp
pop
dec
jge
mov
js
pusha
mul
or
int
in
rclb
adc
lret
and
add
push
and
test
mov
inc
hlt
dec
inc
add
and
cmpb
dec
push
mov
dec
and
fcoms
xchg
cmp
xchg
xor
xchg
int3
adc
lret
fcoms
filds
pop
lock
in
pop
push
fwait
jo
ret
test
xorb
loope
cmp
cmpb
add
cmp
pusha
mov
fs
aam
xchg
addr16
adc
rolb
ljmp
fmul
inc
sub
and
sbb
cmp
and
ret
cmp
jnp
mov
addr16
inc
mov
insb
mov
outsb
fneni(8087
loopne
jmp
or
add
mov
hlt
imul
pusha
cmp
test
inc
and
loope
adc
lret
repnz
aam
frndint
fmuls
lock
mov
mov
sbb
cmp
jnp
sbb
test
mov
mov
movsb
mov
mov
enter
mov
cmp
xor
hlt
loope
push
sbb
xor
hlt
loope
dec
xor
into
or
fdivr
hlt
loope
sub
ss
adc
pop
lcall
lcall
lods
aam
jle
sbb
mov
adc
aaa
in
mov
xchg
cmp
xor
testb
add
ljmp
mov
lods
pop
mov
dec
ds
rorb
push
mov
insl
xchg
pop
push
sbb
aas
sub
into
or
int
push
hlt
loope
add
pop
into
or
lea
fdivp
loope
xlat
jge
into
or
push
insb
sahf
hlt
loope
mov
mov
in
call
pop
sbbb
out
pusha
aam
pop
sbb
inc
cmp
clc
aam
call
je
imul
add
lods
sbb
rolb
call
hlt
sar
cmp
daa
mov
xor
xchg
pushf
jge
mov
idivl
push
sbbl
pop
push
and
mov
inc
dec
jp
jl
pushf
faddl
pop
adc
sbb
inc
pushf
dec
stos
repz
xchg
and
xchg
stos
jge
push
outsb
or
hlt
aad
add
sbb
sbb
in
xor
push
adc
sub
call
push
shlb
das
pushf
call
xchg
rorb
sarb
mov
rcrb
sbb
adc
push
lcall
mov
mov
inc
or
jmp
cmp
mov
push
cmpl
cmp
pop
loopne
cmpl
add
arpl
mov
fisubrl
jp
out
insb
clc
cmp
and
aas
dec
cli
xchg
jo,pt
and
add
push
push
mov
fsubl
cli
jp
daa
mov
xchg
xor
dec
push
je
and
stc
dec
mov
sbbl
jo
add
pop
or
in
adc
add
loope
cmp
fisttps
lock
cmp
jmp
xor
mov
inc
jo
andl
adc
mov
mov
das
mov
clc
ret
add
test
xchg
or
and
loope
out
push
into
or
sbbl
xchg
into
or
pop
hlt
loope
push
and
into
or
push
aam
hlt
loope
scas
or
into
jo
lret
shll
jp
inc
mov
popl
mov
pop
xchg
or
add
pushf
cmp
cmp
inc
pop
and
clc
aam
jge
mov
rcl
mov
xor
or
xor
sub
hlt
or
xor
or
rcr
negl
in
hlt
or
xor
pop
fld
ja
xor
pop
sbb
or
pusha
xchg
aaa
sbb
sub
negl
in
hlt
adc
aaa
in
mov
mov
in
rclb
jmp
dec
pop
filds
add
dec
push
cmp
pop
pop
add
fcmovnbe
cmp
pop
into
sbb
jg
mov
jbe
jp
xchg
mov
clc
xor
aam
mov
and
pop
negb
in
hlt
or
inc
or
into
lods
hlt
adc
pop
ret
in
xor
lcall
sub
ja
cld
lcall
icebp
stos
inc
ficoml
jne
jp
ds
inc
jl
add
lds
lock
sub
push
push
fdivrs
dec
addb
movsl
fisubrs
jg
xchg
hlt
loope
popf
push
popf
into
or
loope
dec
testb
ficoms
pop
andb
sbb
cmp
rcrb
inc
pop
pop
insl
movb
pop
cs
xor
add
mov
jmp
push
int3
mov
and
leave
ror
push
sbb
sarl
dec
mov
dec
mov
bound
mov
mov
mov
repnz
adc
sbb
rorb
pop
mov
and
xchg
cmp
pop
cmp
adc
push
hlt
loope
mov
test
loope
mov
mov
fstl
cmp
into
dec
mov
add
jge
xchg
xor
mov
adc
lret
fsubrs
jns
pop
push
inc
call
inc
add
xchg
int3
xchg
jp
mov
add
sbb
push
jp
xchg
out
jge
inc
add
adc
inc
in
sbb
pusha
loopne
sarl
jmp
or
pop
jns
in
jb
inc
out
xchg
jne
push
mov
mov
rcrb
gs
add
fsubr
pop
and
mov
testl
cmp
jge
mov
fstps
push
adcl
ljmp
insl
lret
or
and
inc
mov
and
popa
fisubrl
adc
sub
cmc
and
inc
or
jle
inc
in
je
mov
pop
mov
je
mov
mov
int3
sub
loope
inc
notb
es
sbb
out
sahf
in
popl
cmpsb
mov
int
cmc
cmp
out
aam
or
in
cmp
das
aam
stos
xchg
push
outsl
sbb
jb
sub
cwtl
push
ret
lahf
cmp
out
aas
arpl
rclb
ljmp
lcall
je
push
scas
rcrb
and
lret
rolb
inc
loope
ror
or
daa
stos
cmp
jnp
negl
mov
in
fndisi(8087
sbb
jge
add
sbb
cmc
and
jmp
mov
sarb
fcompl
and
cmc
sub
out
das
lods
inc
in
jo
adc
push
cmpl
mov
cmpl
xchg
jp
lret
fdivs
inc
adc
fisttpll
pop
pop
pop
shlb
fisubrs
mov
loope
inc
mov
sub
pop
adc
xchg
jge
jge
mov
add
jge
mov
lds
dec
mov
test
mov
inc
popf
push
xor
test
push
inc
das
idiv
test
or
loop
ret
scas
add
popa
nop
mov
add
xchg
jg
mov
int3
aas
xchg
sub
mov
xchg
imul
pop
adc
push
sbb
or
es
jmp
loope
mov
loop
or
loope
das
jnp
into
or
icebp
bound
loope
test
into
or
loop
stos
hlt
loope
into
mov
into
or
sbb
hlt
loope
fidivrs
nop
hlt
loope
incl
dec
mov
cmc
mov
push
or
pop
cmpsb
lret
rclb
and
and
adc
lret
shl
in
cmp
ljmp
push
ljmp
lret
shrb
and
arpl
cmp
lds
pushf
and
xor
ljmp
jge
shlb
cmp
dec
sbb
push
hlt
or
inc
mov
xchg
hlt
or
sub
leave
sbb
shl
or
in
or
adc
sbb
sbb
cmp
and
sbb
and
rcll
test
mov
adc
push
arpl
pop
aas
or
push
sbb
aam
mov
loope
gs
into
or
and
loope
lahf
outsb
add
or
inc
test
hlt
loope
scas
mov
into
out
or
rorl
jmp
mov
cmp
sbb
mov
inc
mov
xor
push
dec
inc
and
sub
imul
mov
and
add
cmp
jnp
ja
lret
xor
lcall
jge
mov
idivl
jp
enter
xchg
cmp
in
push
and
inc
cmp
jle
inc
jg
push
outsl
fsub
jge,pn
mov
mov
adc
xchg
xor
dec
push
int3
adc
push
in
mov
ja
fcoms
or
pop
std
pop
repz
sub
and
pushf
or
cmp
jnp
cmpxchg
pop
sub
fsubs
popf
and
fsubrs
adc
aad
mull
jp
insb
push
mov
xchg
ds
or
mov
frstor
dec
adc
xchg
dec
cmpsb
add
call
popa
daa
xlat
or
sub
and
mov
or
pop
ja
adc
mov
inc
push
mov
cmp
push
frstor
mov
and
pop
sahf
mov
and
aaa
cmp
cmp
add
loop
jns
mov
shr
pop
and
lret
rclb
and
mov
xchg
xchg
sbb
dec
dec
ljmp
nop
test
and
or
pushf
inc
xor
mov
daa
sbb
xor
leave
inc
mov
adc
test
pop
testb
in
jmp
cmp
inc
sbb
pop
add
loope
in
inc
insl
into
clc
inc
lret
shlb
mov
adc
xor
rclb
movl
pop
jno
push
and
sahf
pop
lods
cmp
jnp
mov
mov
push
xor
push
ret
gs
add
loop
mov
loop
arpl
ret
aam
cmpl
fnop
sbb
push
sbb
and
sarb
cmp
push
dec
mov
leave
movsl
jmp
ret
int
insl
push
fs
call
inc
in
test
sub
mov
cltd
aam
mov
out
mov
adc
push
push
xor
imul
push
or
mov
mov
or
loop
scas
adc
dec
jmp
add
push
and
xchg
xor
pop
loopne
scas
mov
jecxz
popa
or
stos
push
cs
adc
push
cltd
fildll
add
les
sti
mov
xchg
xlat
inc
call
mov
bound
and
fiadds
lcall
sbb
stc
sbb
idiv
and
test
xchg
idiv
inc
adc
xor
jecxz
std
add
outsb
cmpsb
in
cmp
jnp
add
arpl
sub
mov
shrl
mov
rolb
ds
mov
lahf
pop
rorb
jp
pop
pop
pop
or
jl
leave
into
or
loope
push
rorl
jle
enter
fadds
inc
pop
pop
aas
fdivs
pop
add
xchg
outsb
stc
cmp
jnp
add
pop
sub
sbb
jmp
ret
sarb
int3
and
xchg
loop
aaa
scas
sub
arpl
rcrb
xlat
test
cmp
add
lret
cmp
push
or
cmp
pop
aam
pop
stos
arpl
add
loop
jnp
aam
pop
sub
and
jge
mov
test
cmp
add
loop
push
lret
rorb
xor
or
loope
popl
mov
data16
mov
ds
push
and
arpl
jle
imul
push
aam
jge
dec
inc
or
and
notb
fs
lods
in
lahf
sbb
dec
xor
daa
inc
orb
sti
inc
or
ret
in
insl
mov
xor
hlt
rcrl
popl
xlat
lahf
sbb
xor
popl
and
in
cltd
sbb
dec
mov
ret
push
pusha
xchg
adcl
mov
test
sub
jnp
lods
int3
jb
nop
out
cs
sbb
fstps
and
test
mov
insl
xor
jg
push
push
and
or
fstpt
push
and
and
jl
push
and
lea
insl
fidivrl
scas
sbb
pop
sub
sub
daa
and
fdivs
dec
jge
mov
sbb
rep
xchg
xor
jne
mov
ja
stos
test
pop
pop
mov
jle
fadds
out
mov
jnp
pop
sub
jb
adc
or
lods
fs
xchg
adc
js
call
repnz
adc
cmp
mov
cmp
dec
mov
stos
sbb
ret
dec
cmp
xchg
add
jae
and
or
sbb
inc
jnp
xor
fldl
mov
dec
in
push
ret
lds
xchg
xor
call
cmp
out
jp
cmp
add
or
xchg
loopne
or
push
das
cli
sbb
and
jns
sbb
cmp
sar
and
sbb
cmp
shrb
sbb
mov
dec
loopne
pop
adc
fs
lock
mov
jmp
in
shll
ljmp
jo
add
imul
xor
push
sahf
loopne
stc
cmp
iret
fwait
and
fdivr
outsl
jge
mov
sbb
js
mov
jp
stos
sahf
xor
xchg
loop
add
mov
xor
or
jp
mov
xor
mov
bound
arpl
push
idiv
in
movb
popw
in
popl
mov
mull
bound
cmp
fbstp
aam
lods
or
insl
cmp
sbb
lods
hlt
or
std
mov
outsb
shll
mov
fdivr
add
mov
sbb
mov
outsl
sbb
test
in
dec
fdiv
clc
leave
loope
add
int3
mov
push
push
and
cmp
stos
push
push
push
and
mov
push
and
out
icebp
push
pushw
loope
sub
pop
repnz
pop
and
or
sbb
jge
mov
aad
cmp
add
pop
or
mov
popl
enter
cmp
add
lods
lcall
outsl
cmp
jne
cmp
add
push
mov
ds
and
shl
adc
testl
xor
push
inc
test
mov
pop
and
addl
xchg
xor
add
fisubrs
fcompl
or
aad
and
pushf
mov
je
push
and
frstor
push
add
mov
hlt
push
push
and
loopne
leave
cmp
jnp
cli
cli
cwtl
pop
sub
and
jge
mov
xchg
dec
idiv
fucom
addl
sub
sub
aad
and
jp
add
cmp
shll
xchg
ljmp
mov
aam
lea
or
push
aam
lds
lahf
cmpl
mov
xor
nop
and
in
jns
jge
mov
insl
sbb
div
daa
test
int3
or
popa
and
sbb
or
shl
loope
movsb
push
sbb
or
sbb
adc
lcall
std
lret
shlb
ljmp
or
cmp
jnp
shr
xchg
pop
add
cld
xor
loope
and
imul
and
lret
jno
pop
jge
mov
sbb
cmp
adc
ret
cltd
pop
sbb
icebp
cmp
inc
jmp
scas
test
popa
out
addr16
frstor
sub
add
loop
cli
or
sub
in
cmp
jnp
jge
inc
pop
sub
leave
and
fsubr
xchg
jge
mov
jge
vprotq
mov
dec
inc
dec
lock
scas
stc
mov
fnstsw
xor
mov
in
pop
jns
inc
push
jg
mov
mov
and
xchg
xor
pop
lock
adc
or
popa
mov
enter
mov
or
pusha
je
in
and
test
jb
clc
sub
pop
or
lret
jmp
lcall
xor
fs
pop
add
jmp
push
into
movb
test
nop
test
enter
adc
popa
inc
loopne
push
sub
enter
loope
js
lds
fdivs
jge
mov
and
xchg
xchg
pop
xchg
xor
ds
adc
gs
in
fdivl
xchg
popa
mov
jl,pt
pop
sub
testb
sarl
xor
push
int
addr16
jg
and
push
push
daa
mov
ret
cs
out
add
cmp
cmp
cmpsl
pop
add
in
jmp
notb
int3
adc
mov
push
lret
fdivrs
sub
xor
cmpsb
imul
and
bound
xchg
mov
sbb
xor
inc
repz
or
cmpsb
cvtps2pi
aaa
hlt
or
lods
pop
insl
sbb
mov
lcall
mov
data16
clc
or
aad
inc
jnp
mov
dec
mov
sbb
lods
hlt
loope
mov
add
inc
in
hlt
loope
rcrb
into
or
xchg
out
in
or
cmpsl
mov
cmp
xchg
jmp
dec
and
fisubs
cmp
jnp
cmc
aad
pop
sub
popf
pop
and
jge
mov
test
sarb
pop
add
sbb
jmp
jmp
int3
jns
pop
add
xor
aas
out
loop
add
neg
imul
pop
add
syscall
stos
cmp
xchg
xor
fucomip
int3
jl
scas
add
popa
and
jg
sub
and
neg
in
gs
mov
cmpsl
mov
xchg
es
push
mov
out
scas
dec
mov
cmc
push
pusha
adc
lret
jp
fs
popl
int3
add
mov
popl
add
lret
pop
repnz
popl
fdivr
or
cmp
add
mov
loope
fstps
pop
mov
jp
mov
add
icebp
push
ret
sub
add
loop
mov
cld
popa
test
jb
pushf
pop
sub
sub
push
xchg
ds
push
lods
mov
leave
mov
xchg
inc
mov
sarl
sub
int
xchg
add
mov
scas
daa
mov
iret
ss
popa
sbb
push
sub
xor
imul
mov
sub
mov
movsb
push
xor
xchg
push
add
adc
push
jb
xlat
clc
into
pop
test
cli
rolb
mov
call
scas
repnz
popa
aad
and
pop
aam
sahf
iret
popf
inc
or
mov
inc
popf
in
inc
sbb
xor
inc
inc
mov
jle
jle
adc
or
in
inc
add
jnp
scas
popf
mov
xchg
jbe
scas
frstor
dec
mov
mov
pop
dec
xchg
jl
scas
pop
mov
popa
mov
mov
pop
inc
sbb
call
iret
lcall
int3
and
mov
and
push
cmpl
mov
out
mov
test
lea
jnp
in
sbb
xor
jp
xor
xor
repz
outsl
in
mov
and
and
nop
in
mov
and
cmpsl
gs
mov
movsl
push
insb
mov
pop
je
push
ret
ljmp
xor
inc
aaa
xor
dec
lret
fmuls
packuswb
pop
add
dec
and
mov
lds
into
scas
in
inc
aas
sahf
clc
call
imul
rcr
leave
sahf
push
pushf
lods
lcall
fidivrs
xor
push
ds
jp
arpl
not
or
inc
pop
cld
fsubrs
and
push
and
cmp
jnp
lock
mov
jne
or
pop
in
clc
out
sub
mov
jle
ss
fadds
inc
ja
and
mov
jge
inc
arpl
pusha
repz
jns
and
inc
mov
scas
mov
inc
jecxz
jno
ss
stc
mov
and
cmp
mov
jbe
addr16
jnp
stos
add
pop
sub
insl
sahf
and
lcall
lea
cmp
sti
push
inc
adc
xchg
mov
mov
sbb
ret
jecxz
push
sbbl
cmp
cmpl
xor
jbe
inc
jnp
add
push
idiv
cmpb
add
loop
fldt
aaa
popa
arpl
inc
sbb
dec
jle
pop
mov
lcall
mov
push
sub
pusha
add
loop
int
pop
popl
push
fiaddl
cmp
negl
sbbl
sbb
sbb
sbb
or
loop
sbb
int3
and
mov
gs
lods
pop
cmp
clc
cmpsl
adc
pop
lahf
inc
js
in
add
add
pop
inc
pusha
pop
pop
repnz
and
xchg
les
jnp
aas
mov
lret
mov
repnz
fmuls
into
pusha
into
test
sbb
add
inc
mov
inc
loopne
test
mov
sti
and
and
sub
add
out
jnp
lret
dec
jle
add
xchg
mov
adc
inc
mov
test
fs
aam
pop
pop
sub
fcmovbe
xchg
jne
jge
mov
push
lcall
std
push
popa
inc
push
lcall
fcmovnbe
mov
push
jo
pop
mov
xchg
lcall
sti
push
sahf
dec
sbb
clc
cmp
add
loop
fsubrl
adc
push
sub
cltd
dec
aam
mov
dec
inc
or
movsb
notb
inc
sub
in
add
jnp
xor
push
inc
fisttpl
popa
xor
ss
ret
cmp
xchg
xor
int3
testb
fimuls
fnstcw
add
push
push
push
and
dec
xchg
pop
pop
push
push
and
mov
push
and
xchg
xchg
imul
mov
and
out
rcrb
xchg
xchg
and
fistl
pop
push
push
and
leave
or
push
imul
into
aam
test
add
dec
and
fdivs
jge
mov
sub
and
in
and
xchg
mov
fcmove
or
loope
cmp
or
jge
mov
mov
mov
jge
mov
jne
icebp
mov
dec
add
cli
les
push
subl
pop
test
fcompl
pop
add
loop
pop
scas
das
mov
ds
cmc
adc
in
cmp
mov
adc
scas
iret
mov
sbb
push
lods
repnz
sbbl
adc
es
xor
out
nop
aaa
sti
call
xor
push
adc
ss
mov
out
xor
fstpt
cmpsl
jecxz
ret
lock
xchg
xor
insb
jle
adc
push
dec
in
cli
sahf
imul
xchg
inc
add
fdivrp
pop
jp
dec
mov
push
inc
add
adc
jp
sbb
add
lcall
rcl
inc
or
sbb
adc
cmpsl
fs
test
xchg
pop
xor
jb
push
mov
flds
popf
push
fucomp
push
push
fsts
add
sub
adc
inc
inc
call
pop
add
insl
sub
clc
inc
mov
loop
std
mov
popa
dec
ret
je,pn
test
inc
push
addr16
js
lahf
inc
cmp
fwait
inc
pop
sbb
sbb
out
ret
jne
and
xchg
ds
aaa
add
out
cmc
idiv
sahf
mov
add
loop
mov
and
cli
in
enter
xor
std
inc
mov
dec
sahf
mov
das
push
nop
fildll
cmp
pop
pop
fcom
xchg
hlt
xchg
or
pop
push
ljmp
cmp
and
fsubrp
daa
sbb
rclb
lods
mov
enter
popl
adc
push
sub
adc
fcom
andb
fcoms
jge
mov
shrb
sub
dec
add
mov
and
or
xchg
int3
jp
out
push
xchg
repnz
or
jb
xchg
ret
sarl
dec
mov
push
dec
push
popf
xchg
pop
fs
arpl
aam
ret
notb
inc
cmp
xor
or
ret
cs
jnp
pop
jp
pop
sub
and
fcomps
in
jg
cmp
dec
in
add
js
cmp
call
push
add
add
ret
scas
xchg
add
adc
cs
call
fdivrs
sbb
pop
mov
in
and
je
sbb
in
cld
sbb
lret
xor
dec
mov
lds
xor
cmc
adc
cmp
or
loope
lock
mov
pop
jge
mov
in
testb
push
notb
stc
pop
insb
in
nop
sbb
add
xchg
mov
mov
sbb
mov
dec
xor
insl
mov
insl
pop
lds
or
arpl
adc
dec
jp
jle
stc
push
xchg
ja,pt
decl
xor
add
mov
clc
out
roll
jbe
inc
push
lret
pop
pop
icebp
sbb
jne
lcall
pop
sbb
push
xor
xchg
inc
fmuls
popa
aaa
fildl
ret
insb
cmp
xchg
dec
and
loop
jg
jmp
popa
jnp
mov
sub
sahf
jle
and
or
xor
push
and
daa
or
mov
mov
push
popa
mov
in
je
jo
inc
add
ljmp
sti
pop
sub
nop
and
fadds
jecxz
popa
mov
dec
pop
mov
adc
nop
in
push
lret
fsubs
jns
clc
jecxz
pop
xchg
push
fsubs
enter
push
jne
cmp
pop
inc
add
orl
jp
jne
prefetchnta
mov
or
inc
aad
inc
add
lret
jp
inc
adc
lcall
into
iret
jge
mov
stos
xchg
mov
clc
mov
xlat
mov
imul
cltd
ljmp
ret
fcoms
mov
jp
jge
stos
popl
shlb
data16
xchg
mov
ror
data16
jns
sub
jnp
je
xor
cld
jge
mov
aad
negl
ret
cmp
xchg
dec
and
scas
and
popa
out
push
fldt
push
inc
add
push
jp
mov
sub
mov
aad
adc
xchg
sub
lahf
movsb
psubsb
roll
xor
add
addb
push
in
filds
lcall
and
gs
pop
popl
xor
push
out
in
jbe
ljmp
pop
xchg
lahf
pop
scas
lods
xchg
and
fists
push
outsb
jp
psubusb
jae
cs
daa
rcrb
scas
xor
call
shrb
adc
scas
call
cmpsl
lcall
fiaddl
xchg
cmp
xchg
add
gs
test
repnz
popa
lahf
jo
push
sub
jnp
mov
or
aaa
notb
mov
out
mov
mov
jp
pop
loope
lods
xchg
ds
ja,pn
add
and
insl
xchg
fsts
push
aaa
jp
mov
outsb
sub
imul
mov
fcompl
inc
dec
and
dec
and
cmp
in
pop
sbb
inc
jge
adcb
mov
inc
pop
add
push
hlt
dec
cmp
test
sub
loopne
or
jmp
push
cmp
int3
aam
movsl
sbb
cmp
jnp
dec
ficompl
outsw
mov
pop
popa
mov
pop
aas
adc
mov
cmp
jmp
cmp
jno
mov
add
jmp
stos
aam
adc
jno
cmp
adc
imul
hlt
or
xchg
sub
mov
ret
test
mov
or
mov
inc
pop
pop
out
jp
pop
mov
int
ret
and
jnp
lea
clc
jecxz
mov
inc
cltd
fistps
cltd
pop
sub
mov
push
xor
mov
push
cmp
cld
cmp
add
xchg
mov
dec
dec
sub
stos
push
xor
sub
inc
test
adc
dec
jmp
shll
push
daa
mov
ja
fmuls
popa
fnstcw
push
ret
int3
cmp
xchg
add
and
stc
xor
imul
dec
jp
adc
adc
or
rcrl
mov
add
mov
inc
cltd
mov
ljmp
cmpsb
fsubs
inc
xchg
pop
xor
mov
iret
ja
and
or
fdivrs
jnp
insl
and
test
fucomp
mov
dec
inc
cmp
into
leave
xchg
cld
idiv
mov
xchg
mov
movsl
scas
inc
add
inc
mov
push
loope
inc
add
test
negb
inc
add
mov
lahf
fs
sub
and
in
xor
pop
jnp
mov
out
sbb
add
loope
lcall
cmp
jnp
xchg
sbb
xor
fiaddl
mov
xor
push
orl
cld
push
xorl
jne
fwait
mov
sub
idivl
push
sub
mov
sahf
mov
scas
in
xchg
mov
negb
notl
and
jmp
inc
cmp
gs
aas
hlt
or
and
and
push
or
cmpsb
gs
enter
mov
xor
add
push
fidivl
jnp
xor
inc
jae
in
mov
lret
insb
dec
ljmp
push
roll
adc
popl
pop
shll
jge
loop
cmp
in
add
outsb
fstpt
loope
cmp
add
xor
inc
popa
push
push
aaa
push
movl
or
cmp
adcl
jp
mov
mov
mov
adc
rcll
sbbb
int
pop
xchg
mov
inc
mov
pop
iret
out
and
cmp
cmp
aam
sbb
add
shlb
aam
mov
or
imul
idivl
adc
or
addr16
rorl
mov
inc
testb
mov
push
daa
xchg
addl
fwait
mov
inc
pop
cmpsb
mov
data16
push
adc
popl
push
xchg
and
cmp
add
pop
jle
xchg
and
or
push
rorb
cmc
add
sub
and
jge
mov
rorb
in
xor
mov
out
in
mov
mov
fsub
add
pop
add
add
adc
adc
xor
and
je
mov
lahf
test
mov
out
pop
in
shrb
call
sub
pop
and
adc
negb
iret
loope
push
les
insb
pusha
notb
inc
cmp
in
jne
jne
xor
testl
mov
lods
jmp
push
fsubl
inc
idiv
test
and
hlt
mov
mov
jp
das
out
popl
test
lahf
aam
xchg
ljmp
lds
cmp
mov
inc
cmp
pop
aam
lret
inc
jp
inc
inc
fadds
mov
xor
pop
roll
test
push
jo
clc
mov
and
jecxz
shll
mov
sahf
jp
call
add
adc
pop
jp
clc
aaa
iret
xchg
inc
add
popa
xchg
push
jp
add
xlat
inc
add
outsb
pop
fidivrs
cld
cwtl
pop
pop
inc
sbb
fcompl
mov
jge
mov
mov
mov
mov
idiv
stc
xchg
xchg
test
popf
fisubs
xchg
add
loop
les
xchg
inc
pop
dec
imul
xchg
and
mov
enter
cli
cltd
mov
and
hlt
sbb
mov
push
aam
popf
push
push
and
xlat
sub
clc
fs
mov
cmp
xlat
and
test
rcrl
es
outsl
jne
add
mov
jo
mov
push
jl
lcall
adc
cmp
fwait
sub
jnp
shlb
cld
call
xor
mov
dec
loop
xchg
test
jnp
cwtl
sub
idiv
imul
add
loop
adc
sub
shlb
and
enter
pop
ja
pop
data16
sub
inc
lods
xor
sbb
inc
jnp
jb
aam
jge
pop
inc
or
ret
pop
cmp
jge
xor
inc
mov
popa
sbb
sbb
ret
out
insl
inc
ret
rclb
cmp
inc
sbb
pop
data16
addr16
mov
nop
xchg
dec
add
fcmovbe
cmp
or
sarb
aam
pop
sahf
or
cmp
adc
xchg
and
mov
mov
inc
popf
mov
aaa
es
push
pusha
rcrl
jl
cltd
cmp
xchg
xor
jl
insb
mov
lcall
mov
inc
pop
shrb
hlt
inc
adc
cltd
mov
push
lcall
adc
out
nop
cltd
mov
clc
inc
cmpb
push
popa
idiv
in
pop
add
loop
sub
and
roll
cmp
jnp
jp
push
pop
sub
and
xchg
push
ret
xchg
cmp
mov
add
cmpb
xchg
inc
xlat
icebp
pop
add
xlat
icebp
cmp
xor
or
cmp
hlt
loope
sub
jno
or
add
test
in
lea
out
aas
loop
ja
jbe
lret
popa
push
pop
movsb
push
sub
test
mov
or
add
or
mov
lahf
cmp
clc
cmp
jb
hlt
pushf
cmc
and
lret
sarl
clc
pop
mov
jp
pusha
push
insl
popl
push
out
ja
jne
jp
sub
mov
inc
addb
cmp
jb
jge
mov
ljmp
idiv
mov
push
pop
inc
idiv
dec
pop
mov
add
adc
scas
mov
popa
lahf
rclb
sub
outsl
jb
mov
add
push
push
dec
ss
inc
add
add
idivb
pusha
mov
jg
add
jle
mov
in
sub
xlat
mov
divl
in
cmpsl
mov
jge
notb
fsubrs
push
mov
cmp
popa
shl
jae
ret
imul
out
or
xor
hlt
loope
xchg
sub
sbb
mov
jp
adc
sahf
test
jne
cmp
pop
push
das
cmp
xor
movsl
inc
or
jb
adc
mov
in
xchg
sbb
push
xor
xchg
and
mov
test
mov
cmp
xchg
xor
fldl
inc
mov
and
adc
clc
mov
xchg
xor
jp,pn
sbb
xchg
ds
shr
jp
add
hlt
sti
in
jp
xor
negb
rcl
push
sub
inc
aam
adc
repnz
xlat
notb
xor
inc
testb
aam
ret
jge
mov
mov
jge
mov
cli
lcall
push
mov
push
subb
clc
cmp
xchg
xor
stos
dec
in
loopne
push
sub
push
mov
sbb
push
fnstcw
and
xor
fdivs
and
fnsave
mov
push
and
add
in
jp
mov
jnp
pushf
scas
xor
pop
sbb
xor
inc
ja
rcrl
test
fistl
insl
mov
clc
ror
adc
cmp
in
call
dec
je
scas
lret
mov
xchg
dec
ljmp
das
cmc
inc
push
dec
sbb
int
dec
mov
adc
mov
scas
or
popa
push
and
loopne
cmp
loope
fmuls
jge,pt
mov
jp
ret
push
cmp
loope
adc
sbb
or
gs
nop
hlt
loope
jmp
adc
leave
push
hlt
loope
jp
cltd
into
or
push
adc
clc
add
pop
add
loop
or
cmpsl
outsb
lods
fnstenv
outsb
pop
sar
inc
movsl
mov
cmp
mov
in
cmpsb
ds
ret
cli
cmp
add
xchg
call
popl
ficoml
inc
push
push
call
dec
add
adc
sbb
jne
sidtl
xchg
cmpsl
aad
mov
push
pusha
iret
add
and
call
fdivs
outsb
sub
rcr
pop
sub
jne
xlat
jnp
jmp
aad
iret
aam
jg
imul
aam
sub
test
mov
pop
jl
adc
mov
outsl
mov
hlt
or
out
stc
and
mov
push
hlt
or
sub
sbb
adc
or
pop
push
sbb
mov
push
popa
test
mov
inc
pop
push
orb
xchg
dec
ffree
mov
mov
push
fists
add
inc
inc
mov
int
test
mov
mov
and
div
test
dec
mov
mov
mov
jbe
mov
jns
add
jno
inc
mov
scas
mov
and
xchg
inc
insb
dec
mov
mov
sub
or
mov
mov
in
dec
movsb
xchg
mov
fiadds
dec
jb
shll
outsl
add
push
cmp
jnp
aam
cmp
sub
jns
mov
nop
into
fmul
out
jge
mov
or
vpmacsdd
addr16
add
push
sbbl
mov
push
addl
pushf
push
lahf
icebp
push
andl
movsb
test
in
mov
or
jbe
cmp
loop
dec
scas
jbe
je
cltd
popa
pushl
push
sub
jp
aam
test
mov
adc
sbb
hlt
jecxz
inc
inc
les
ljmp
mov
cmp
loopne
cmp
dec
and
loope
cmp
mov
jg
hlt
clc
ret
dec
jns
mov
int3
je
mov
popa
lcall
dec
aam
mov
test
cmp
adc
pushf
cmp
or
sub
sub
jge
mov
pusha
fwait
loop
and
push
orl
adc
andl
rcrl
lahf
insl
fstl
leave
xchg
xor
in
int3
adc
lret
ficompl
aas
mov
push
inc
or
dec
notb
aad
xchg
in
insb
sbb
xor
jae
or
mov
lods
aaa
push
push
ret
inc
cmp
xchg
cmp
jne
sub
or
push
call
jecxz
shlb
sbb
cmp
outsl
and
pushf
push
andl
sub
loope
adc
enter
lret
fnstenv
ret
lret
push
sub
stos
jmp
roll
mov
mov
std
sbb
xor
inc
push
mov
jg
popa
xor
mov
ret
mov
insl
or
push
xchg
xor
andb
in
mov
fs
fsubs
inc
inc
negl
xor
pop
push
pop
and
test
push
xchg
sub
outsb
jge
mov
into
lcall
push
push
inc
push
lcall
mov
stos
out
mov
pop
cwtl
daa
push
ret
insl
mov
js
xor
add
mov
and
popa
loope
cmpsb
push
sub
aas
test
mov
or
lahf
push
mov
and
cmp
xchg
cmp
out
test
mov
std
fstpt
cmp
outsl
pop
add
loop
cmp
inc
and
insb
jnp
fs
idiv
fwait
cmp
outsb
loop
and
mov
mov
inc
add
inc
jp
test
pop
aas
cmp
in
cmp
ljmp
into
movsl
aam
sbb
mov
adc
xor
into
push
xor
inc
orb
icebp
inc
in
push
ret
lret
sahf
adc
outsb
int3
lock
scas
dec
mov
mov
mov
orl
jno
pop
or
dec
les
push
and
pop
mov
sub
shl
and
sub
dec
mov
add
push
sub
stc
add
stc
call
mov
mov
fsubl
jae
jmp
clc
sbb
add
adc
clc
lock
mov
push
ret
mov
test
out
jnp
mov
shrl
jge
mov
jmp
sbb
dec
jno
ret
and
push
xchg
inc
add
xchg
jne,pt
cmc
pop
jp
sub
idiv
aaa
das
or
sub
ret
in
mov
ds
inc
dec
lcall
sarl
inc
mov
inc
mov
enter
js
add
or
shll
ja
xlat
xchg
xor
sub
aas
jg
mov
sub
adc
lahf
and
mov
dec
sarb
rcll
inc
add
les
jp
out
nop
mov
std
aam
jp
push
sahf
cmp
addb
jle
jo
clc
in
roll
xchg
movsb
sub
pop
lret
fcoms
inc
cmp
js
push
pop
inc
jo
and
fsubs
xor
dec
jge
mov
ret
mov
popf
idiv
inc
jnp
inc
push
sbb
mov
push
xchg
daa
hlt
pop
xchg
dec
adc
clc
addr16
filds
rcll
pop
lret
test
cld
clc
movsb
sbb
in
loop
push
scas
sbb
popa
cmpsb
dec
and
sub
aas
and
shrb
mov
xor
sahf
push
push
and
lods
push
rcrb
or
popf
lahf
dec
push
push
imul
aam
in
jle
inc
or
dec
out
lret
sbb
xor
cvtps2pi
mov
adc
in
lock
xor
add
insl
and
aas
xor
push
jmp
stc
lret
push
mov
loope
addr16
hlt
into
or
aad
std
hlt
clc
sarb
loope
xor
mov
lret
pop
sub
pop
ss
call
xor
pop
mov
push
jne
notl
push
mov
sub
ljmp
cmp
into
sub
cmc
rcl
and
jge
mov
arpl
jmp
repz
adc
sarl
fadds
inc
and
pop
shlb
and
xchg
cmp
in
push
sub
adc
sub
xor
mov
adc
push
lcall
or
call
clc
stc
dec
lods
pop
test
inc
jnp
xchg
idiv
pop
sbb
add
loop
mov
cmc
jg
push
repnz
pop
sub
fnstcw
jge
mov
idivl
push
adcl
js
aaa
inc
push
andl
fwait
or
pushf
aad
jge
add
and
loop
add
rorb
push
sub
sbb
aam
jmp
xchg
pop
sub
jp
movsl
stos
daa
and
insb
add
add
subl
jb
inc
add
sub
andl
inc
add
or
pop
jp
sbb
dec
pop
sub
and
fcoms
cmp
mov
lock
mov
xchg
cmp
clc
cmp
clc
mov
and
add
adc
sti
mov
push
test
push
sub
in
aam
mov
push
hlt
or
xor
inc
and
or
sahf
jg
sbb
loop
or
sarl
mov
js,pt
sub
fiaddl
cmp
rcrl
xor
mov
insl
ret
sti
in
pop
pop
test
out
jnp
sahf
nop
test
mov
call
aaa
add
adc
gs
testw
lret
call
mov
out
adc
lret
fsubs
inc
daa
pop
ret
cmp
stos
movsb
and
sbb
fs
pop
or
or
gs
adc
sbb
lret
scas
push
add
imul
inc
push
dec
mov
mov
dec
xor
mov
xchg
dec
sub
lock
dec
mov
popa
cli
pop
push
push
sub
stos
ja
mov
jp
or
push
iret
xchg
cltd
not
pop
out
and
push
rclb
and
outsb
das
popl
mov
inc
mov
cmp
mov
cmp
stc
scas
cmp
jnp
mov
mov
data16
popa
loopne
ljmp
push
stos
lock
xor
or
xchg
lret
sarb
jp
dec
femms
popl
inc
rcll
add
ror
cmp
aam
cmp
mov
xchg
sbb
sub
pop
adc
or
jge
mov
and
mov
adc
idiv
stc
addr16
pop
orb
fs
jmp
xchg
pop
add
jmp
sbb
fmulp
xor
cli
pop
add
mov
outsb
xchg
lea
pop
add
mov
jnp
ljmp
add
loop
shrl
cmp
popa
add
cmc
push
sub
add
fistl
inc
mov
push
and
gs
push
push
and
push
adc
lds
push
mov
idivl
cmp
cmp
mov
push
popl
xor
inc
jl
icebp
rcl
lock
lret
rclb
and
js
ss
out
ror
repnz
mov
or
adc
lods
int3
xchg
and
je
cmp
jnp
movsb
movsl
fistpl
sub
pop
lods
jno
push
pop
fsubrs
push
pop
inc
hlt
idiv
add
ljmp
xchg
ds
add
jge
jo
jl,pt
punpckhdq
jecxz
xchg
xor
sub
ds
inc
xor
pop
loop
fsubrs
lret
xchg
xchg
sub
sub
cmp
aam
adc
nop
fwait
and
fmul
cmpb
sub
cmp
cmpsb
pop
add
outsl
cmp
popw
add
test
es
add
add
out
cmp
out
add
adc
adc
jno
mov
popa
push
or
jmp
rclb
mov
leave
pop
fs
fidivrs
ds
sbb
daa
dec
cmp
jo
dec
adc
sti
mov
mov
pusha
mov
push
xor
and
mov
fwait
jbe
jmp
call
cli
xchg
sub
lcall
cli
mov
mov
add
or
addl
mov
in
and
lods
repnz
into
mov
pop
add
insl
pop
pop
loopne
ret
fsubs
in
fbld
xchg
ss
fnstsw
cmp
mov
icebp
add
and
into
les
cli
dec
mov
clc
cmp
sbb
popa
fisttpll
mov
dec
jmp
inc
fsubl
inc
sbb
add
push
jne
pop
xchg
sbb
bound
clc
pop
in
incb
shl
or
and
sub
jne
inc
int3
add
fisubs
jmp
pop
subl
outsl
ja
cmp
mov
addl
imul
mov
scas
pop
inc
and
xchg
add
jb
mov
fstpt
mov
outsl
pop
dec
add
jmp
xor
inc
data16
jecxz
lahf
sbb
dec
cmpsb
xor
jg
xchg
shlb
dec
jmp
mov
sub
push
cwtl
ds
pop
test
icebp
mov
js
jle
pop
jmp
popf
filds
out
fildl
jecxz
out
add
xlat
fsubr
xor
aam
jmp
call
into
mov
sub
cli
inc
ret
xlat
ds
cmp
shrl
aaa
jl
mov
xor
das
mov
dec
add
inc
sub
sarb
or
add
inc
pop
inc
lock
pop
test
aas
add
out
repnz
jecxz
or
mov
jo
dec
xchg
in
jp
js
inc
add
mov
ja
adcl
sub
mov
sbbb
jle
sahf
popa
cli
inc
shrl
subb
dec
pop
jo,pn
add
sbbl
xchg
mov
pop
outsl
mov
pop
sub
add
xchg
xor
mov
dec
loope
lock
iret
cwtl
cmp
aas
jns
xchg
push
popa
cmp
push
mov
test
xchg
push
lds
insb
sbb
divl
add
xlat
add
out
xor
add
in
push
out
loopne
jmp
in
fsubs
fiaddl
cmp
push
pop
into
ljmp
lds
cmp
mov
aam
add
add
xor
repz
sub
sbb
and
daa
and
leave
cmp
gs
das
add
add
push
call
aas
out
aad
loop
jmp
aam
negl
dec
cmpb
add
test
dec
pop
lods
data16
adc
call
and
push
pop
das
mov
add
cmp
and
adc
insl
pop
and
out
sub
jle
jnp
cmp
push
push
pop
lahf
roll
xchg
loopne
xchg
jecxz
shlb
fbstp
call
aad
or
lahf
test
dec
jecxz
add
roll
add
dec
pusha
pop
lea
sub
mov
add
cmp
add
cld
mov
rclb
outsb
imul
jno
and
data16
mov
insl
imul
inc
add
inc
xor
inc
jo
scas
inc
push
ds
xchg
movsl
and
icebp
xlat
add
push
jnp
mov
xchg
sub
sarl
mov
aad
pusha
sub
push
and
ficoml
inc
cmp
out
jbe
jmp
sbb
add
or
out
adc
imul
pop
dec
mov
push
fisttpll
repnz
clc
adc
adc
pop
cmc
sbb
jmp
fucomp
and
mov
inc
mov
add
outsb
jp
push
lods
fists
cmp
jb
mov
pop
cmp
mov
mov
imulb
or
fdiv
gs
jae
loope
jecxz
sub
in
fadds
in
add
adc
add
ss
push
in
xchg
ss
cmp
gs
adc
cmpsl
sbb
sahf
js
or
inc
sub
adcb
sbb
dec
inc
push
mov
ljmp
xor
cs
push
sub
in
add
jns
push
js
add
out
mov
lds
add
fstl
ljmp
into
inc
clc
mov
xchg
out
jno
jge
or
insl
test
loope
mov
js
vpmacssdd
dec
sbb
pop
or
lahf
rcrb
cmp
or
inc
jb
fstp
rclb
popa
cmp
int
add
bound
cli
adc
cld
dec
cltd
test
sub
out
cmp
cld
sbb
ret
test
mov
sbb
adc
movsb
sbb
jo
in
in
fnsave
test
rolb
popf
leave
out
sarb
adc
jmp
ss
add
in
sbb
call
adc
dec
fbstp
and
mov
add
and
push
cli
mov
rorb
push
jmp
jno
jle
cmpsb
cmpsl
rolb
lods
fistps
cmp
cmp
loope
sti
pop
cwtl
add
fistps
and
push
sbb
or
add
jno
inc
jmp
mov
test
lods
xchg
imul
je
sub
mov
inc
add
adc
xchg
pusha
lock
cwtl
fs
mov
dec
pop
jg
mov
add
loop
jp
ret
cmp
or
add
cld
aad
insl
jmp
sub
iret
jecxz
pop
int3
sbb
fs
add
lods
lock
adc
sub
cmpsb
out
mov
or
adc
shr
mov
xor
mov
adc
pop
jg
inc
dec
lret
out
push
cmp
daa
hlt
xor
loop
sbb
push
dec
in
inc
jmp
and
mov
jl
je
cmp
pushf
mov
mov
ljmp
mov
pop
data16
dec
adc
lahf
xchg
or
fwait
fs
jp
jge
jb
push
lea
loop
dec
mov
and
sbbl
cmp
pop
pop
mov
shlb
cmp
es
loopne
jno
mov
inc
push
pop
out
jge
mov
cmpsl
inc
mov
xchg
cmpb
ljmp
add
add
movsb
incb
cltd
inc
jg
push
aam
pop
shr
sub
add
pusha
jge
aas
test
push
push
add
cmp
jb
sbb
rcrb
sar
cmp
pushf
aaa
xor
lds
dec
pop
jmp
insb
inc
add
sti
xchg
and
das
ss
and
dec
out
sub
ljmp
lock
mov
and
stc
pushf
dec
add
sub
fwait
into
cmp
jge
cmp
and
fs
insb
mov
jmp
dec
jmp
sbb
aam
push
ja
cltd
rclb
stos
cmp
adc
jg
nop
in
pusha
testb
mov
sub
out
xchg
xchg
cmp
xchg
cmp
push
xor
jo
pop
jg,pt
jmp
jnp
es
cmp
fistpll
mov
xor
inc
jg
mov
js
sbb
rcr
pop
add
fcomip
cmp
cmpb
adc
adc
push
add
push
cmpl
lods
movsb
hlt
or
es
pop
enter
inc
or
outsl
push
sub
in
mov
daa
fnstsw
sbb
out
adc
jg
popa
sbb
pause
es
add
incl
and
rol
cs
roll
sub
mov
sahf
mov
xchg
movsbl
dec
cmp
mov
mov
test
incb
out
mov
push
sbb
or
out
cmp
inc
repz
movsl
add
ret
insl
incl
testb
xchg
shll
cwtl
std
wrmsr
and
loop
test
push
inc
das
add
dec
nop
jne
movsl
and
adcl
popa
cmp
popf
loopne
pushf
ss
mov
stos
jmp
cli
adc
pushf
and
dec
push
movsb
sub
adc
std
pop
xor
sbb
leave
sbb
jmp
jle
shl
dec
sub
dec
sbb
cli
fstpt
icebp
xor
call
sub
push
or
push
mov
inc
adc
jns
xor
cmp
mov
mov
or
xlat
jecxz
fstpl
pop
push
loope
shrb
add
pop
jnp
cmpsl
test
ja
into
js
daa
hlt
test
jle
jmp
aad
in
cmp
sbb
add
pop
divb
out
fldl2t
dec
and
mov
cmp
adc
xor
ds
mov
stos
mov
cmpsb
sbb
shlb
adc
loop
add
inc
inc
call
jo
xor
cmp
popf
lret
push
mov
call
gs
aad
add
shr
cmp
ret
sbb
fldenv
xchg
and
mov
cli
jmp
call
je
jmp
int
cwtl
jmp
and
jmp
je
sbb
movl
sub
daa
cmp
fldenv
inc
daa
add
iret
pop
sbb
aam
dec
inc
sub
insl
push
jno
dec
pop
cs
pushf
dec
mov
jnp
stos
pop
test
stos
push
xor
ficomps
jmp
mov
cwtl
sub
fsubrl
or
mov
mov
mov
addb
jg
loope,pn
add
inc
fdivl
push
ficoms
subl
pop
lcall
mov
lret
gs
daa
adc
add
fcmovu
add
xchg
add
loopne
jbe
scas
cli
add
cmp
inc
add
sbb
fdivs
mov
aam
idivl
xchg
add
mov
add
pushf
leave
sub
jae
add
nop
jmp
mov
loope
jmp
cmp
add
les
or
lock
and
or
add
adc
enter
jns
sbb
aaa
push
mov
ret
add
out
xchg
testl
inc
inc
mov
dec
sub
push
fdivs
mov
mov
mov
fstpt
cli
jmp
dec
lods
push
xchg
jmp
jnp
push
ret
xchg
rclb
adcb
cmp
mov
pushf
mov
cmp
cmp
sub
xor
xor
pop
aam
sarb
loopne
in
inc
and
daa
pop
hlt
mov
inc
loopne
cmp
jbe
shll
jp
push
in
imul
push
fsubr
dec
ja
iret
sub
sub
pop
cmp
adc
jmp
mov
shl
imul
loop
mov
dec
cmp
dec
push
pop
jb
js
sbb
sbb
cmp
jmp
shll
pop
jmp
inc
std
adc
push
jg
or
mov
or
aaa
sahf
lcall
xor
jmp
push
jle
dec
cmp
mov
sahf
push
js
jmp
dec
jge
imul
mov
test
xchg
rolb
imul
pop
das
mov
out
jmp
jmp
movsl
xchg
sub
add
dec
mov
push
jl
loopne
add
dec
xor
pop
pop
xchg
add
jb
cld
and
dec
mov
rcrb
mov
aas
and
cmp
loopne
repz
lods
jge
out
mov
bound
cmp
jns
hlt
sti
pop
ret
loopne
sub
and
int3
inc
cmp
pop
stc
cmp
ror
outsl
imul
faddp
add
lret
int3
xor
add
pop
lods
hlt
ret
push
mov
cmp
xor
addb
insb
fistl
xchg
je
inc
add
inc
sbb
jle
add
pop
sub
pusha
cwtl
pop
rclb
movsl
nop
push
xchg
push
add
jb
je
int
sarl
cmp
and
cmp
dec
rorb
imul
pop
mov
in
lcall
push
pop
mov
dec
sbb
mov
sub
cltd
loopne
dec
or
jg
stos
mov
pop
hlt
inc
mov
add
mov
jecxz
add
aas
cmp
stos
mov
add
roll
cmp
ss
adc
ds
push
daa
stos
add
adc
ret
daa
sub
fwait
scas
out
in
jne
subb
adc
gs
aaa
xchg
dec
pusha
jmp
das
push
and
adc
loop
sbb
cmp
ds
pop
sbb
aad
jns
rclb
mov
add
pop
outsb
mov
sub
lcall
add
arpl
pop
test
cmp
aaa
cmp
aad
out
rcrb
pop
xchg
bound
mov
sub
xrelease
inc
sub
add
xchg
mov
add
mov
xor
nop
or
sub
shr
arpl
and
sahf
test
mov
arpl
xor
xor
add
mov
jl
xchg
cmp
jecxz
push
inc
cwtl
inc
out
shrl
cli
xor
push
jmp
fxtract
fbld
sub
std
cmp
add
testb
jae
cmp
cmp
or
mov
stc
cmpb
fidivrl
push
fisubs
pusha
sbb
dec
popf
dec
push
cmp
cltd
cmp
cs
jg
add
xor
pop
sahf
flds
pushl
cltd
add
lret
sub
rcr
add
sub
sub
and
xchg
jle
fcmove
dec
pop
pop
adc
mov
dec
test
test
inc
out
xchg
inc
insb
dec
imul
hlt
sarl
push
in
xor
push
push
pushf
pop
adc
arpl
sahf
data16
imul
mov
sub
scas
scas
mov
xchg
stos
add
stos
cmp
jne
dec
jae
pop
and
dec
and
jmp
sbb
aam
daa
pop
sbb
mov
mov
add
hlt
ss
mul
daa
add
sbb
inc
dec
enter
or
sub
mov
push
es
mov
push
in
and
jmp
loopne
push
aad
lods
xor
sub
inc
clc
movsb
jmp
sbb
cmp
add
fwait
jae
adc
lock
idivb
call
out
mov
jae
bound
push
push
insb
xchg
out
stc
lds
add
jp
stos
mov
call
movsl
aas
inc
fucomi
cmp
sub
imul
mov
lods
cmpb
mov
dec
xchg
bound
xor
pop
cmc
mov
lea
or
jl
push
sub
int3
test
inc
add
mov
imul
out
xor
jmp
stc
sbb
fdivp
jp
sub
insl
cs
add
add
lret
jmp
mov
cmp
or
sbbb
int3
sbb
xor
scas
xchg
jg
add
and
sbb
in
add
inc
in
xor
mov
mov
pop
push
push
jmp
and
int
icebp
movsl
ds
push
notb
popa
push
pop
mov
or
bound
aad
jbe
in
dec
inc
outsl
sbb
add
lds
in
xchg
test
jmp
mov
push
dec
idivl
gs
pushf
push
outsb
add
push
ret
push
mov
test
mov
pop
add
sarb
imul
pusha
xor
into
ljmp
xorl
repz
sbb
add
or
pop
roll
or
pop
xchg
fldt
leave
hlt
mov
sub
insb
cmp
addr16
jne
ja
pop
hlt
fadd
dec
roll
imul
and
dec
add
into
in
std
mov
cli
mov
cmpsb
cmp
or
sahf
mov
cmp
push
or
add
inc
decb
add
sbb
shld
and
std
jle
imul
shll
inc
add
pushf
pop
cmp
fimull
outsb
push
jnp
dec
inc
stos
add
inc
push
pop
push
lret
or
pop
out
cmp
test
mov
scas
add
cwtl
mov
cltd
dec
and
pop
imul
bound
test
or
xor
jmp
xor
movsl
inc
or
push
pop
add
lret
iret
in
stc
ljmp
in
push
icebp
inc
pop
in
jbe
add
ljmp
cmpsb
add
insl
cmp
shll
cmp
jb
add
std
out
jmp
cmc
in
mov
shl
sbbb
pusha
jo
sbb
jmp
pop
sbb
sbb
in
enter
scas
jmp
add
cmp
fdivrl
pop
mov
imul
adc
dec
insl
mov
lods
sub
popa
xchg
inc
add
cmp
pop
pusha
ljmp
xor
dec
in
dec
jmp
add
mov
cmp
in
jbe
push
or
out
test
popa
xor
or
movsl
adc
push
lcall
cmp
mov
push
add
cli
lods
mov
nop
std
inc
cmp
js
mov
call
aas
nop
push
rcrb
xchg
sub
push
push
aad
xchg
add
call
mov
or
xorb
xlat
add
pop
pop
out
jmp
pushl
add
pop
loopne
or
adc
pusha
add
xor
or
lds
dec
sbb
xor
sub
push
inc
sub
sbb
dec
arpl
fsts
jmp
inc
adc
iret
and
leave
sbb
sub
out
sbbl
addb
mov
sbb
mov
ret
shl
dec
lea
or
pop
cmp
popf
sub
movsl
cwtl
push
out
into
mov
mov
push
cltd
lock
cmpb
push
pop
mov
rorb
and
lahf
jle
xchg
xchg
rcrb
jmp
pcmpgtb
popf
mov
popf
jge
scas
repnz
mov
and
xor
sub
adc
sbb
jbe
int3
fucomp
ja
std
rolb
pop
fisubrl
lret
mov
cmp
mov
jns
cmp
fdivr
sub
cli
push
cmp
iret
sbb
sub
pop
das
mov
lea
in
das
out
sahf
sbb
out
hlt
mov
andl
jmp
sbb
dec
and
rcrb
dec
nop
cmp
cmp
loope
repz
or
das
lock
sti
pop
in
lock
ljmp
or
jmp
mov
cmpsb
jmp
add
jnp
je
shr
out
loope
gs
mov
jg
jmp
push
or
rol
jmp
rorb
jmp
xchg
add
cltd
mov
outsb
lods
mov
cmp
mov
cmp
stos
jno
es
push
mov
mov
mov
add
js
xchg
test
cmp
lret
mov
mov
adc
push
jne
or
fxch
mov
add
into
pushw
xorps
sahf
or
rolb
push
jbe
aad
hlt
xchg
mov
add
pop
movl
pop
in
add
jb
es
cmp
dec
inc
add
jl
inc
inc
leave
or
ficoml
ds
cmp
mov
sub
aas
adc
sti
pusha
jmp
fnstsw
adc
mov
mov
adc
pop
add
bound
sub
mov
jne
fs
add
stos
xchg
xchg
test
add
dec
popa
dec
dec
inc
mov
sti
js
loopne
loopne
xchg
pop
cmp
lods
add
pop
or
pushf
sbb
ret
sub
dec
lock
cmpsb
mov
add
mov
push
jb
jnp
or
dec
lcall
enter
fimull
lock
les
xor
sysenter
movsb
mov
rcl
cmp
push
push
adc
loopne
cmp
das
or
or
jmp
cmp
in
rorb
mov
cltd
jp
adc
pop
add
mov
or
data16
js
pop
fsts
adc
add
sar
js
jle
aas
add
mov
loop
ja
fcmovnu
xor
jmp
stos
xor
in
addr16
cmp
mov
mov
lods
daa
fldl
std
or
mov
sub
fs
push
test
add
enter
push
fwait
and
mov
add
js
cmp
and
jne
cmp
test
test
movsl
sarb
mov
mov
movsb
cwtl
jmp
pop
pusha
pop
pop
hlt
jl
jmp
xchg
mov
pop
mov
pop
sbb
pop
mov
test
in
add
cmp
out
cmp
ljmp
xor
cmp
pop
pop
test
mov
and
into
sbb
pop
sub
stc
enter
scas
iret
add
ret
shl
inc
push
shr
dec
adc
or
or
out
add
in
xchg
nop
in
mov
jmp
jmp
mov
popf
fldcw
sub
fidivl
in
shrb
int3
rolb
add
lods
insb
aas
add
mov
push
test
pop
ljmp
mov
mov
add
fsubr
aam
ds
xchg
insb
js
idiv
sbb
addl
adc
dec
into
daa
inc
test
popf
out
pusha
adc
jae
sub
push
mov
pop
nop
inc
xchg
add
mov
mov
jmp
inc
dec
xchg
and
jno
test
xchg
rcl
ret
rcrb
add
daa
add
loopne
mov
repnz
std
sub
loopne
or
fimuls
add
call
mov
cmp
cmpsb
add
pop
sbb
mov
js
scas
cli
add
jmp
fsubs
hlt
dec
mul
inc
out
pop
jo
fnstcw
jp
mov
push
call
sub
dec
xchg
adc
inc
jmp
mov
xchg
pushf
cmp
cmp
or
fsubrs
jmp
mov
outsl
lods
jmp
push
test
pushf
enter
int3
jae
or
and
popa
or
xchg
pop
out
jno
add
xchg
xchg
in
dec
cmp
add
popa
pop
xchg
sbb
inc
xchg
add
xchg
filds
cmp
outsl
add
lods
pop
mov
ss
lcall
sub
loop
push
cmp
xchg
fistps
xor
and
fcomps
add
or
inc
rorb
or
testb
mov
mov
ljmp
cmpb
add
std
cmp
fucom
fwait
sbb
xchg
add
adc
and
int
cmp
xlat
jmp
movsl
cmp
add
stc
or
push
push
xchg
outsb
jge
add
sub
das
movsl
into
and
pop
mov
cltd
mov
dec
das
cmp
jae
in
aam
add
scas
jle
ret
add
fs
test
jo
imul
fistpll
inc
add
imul
daa
cmc
lahf
loopne
movsl
das
adc
mov
mov
cmp
adc
mov
dec
xor
ds
call
jp
sbb
dec
mov
fstpl
cmp
shlb
ja
in
inc
cmp
fldl
out
xor
test
xor
mov
fildl
mov
popa
mov
xor
fnsave
subl
jmp
xchg
and
mov
stos
mov
pop
pusha
jbe
rcll
lahf
jmp
js
sub
jp
call
sub
jmp
add
add
push
add
mov
out
enter
popa
insl
jnp
cmp
cmpsb
cld
pop
or
stos
add
popa
adc
cli
int3
shrl
jmp
jmp
es
adc
fldcw
frstor
add
mov
inc
cmp
loopne
cmp
faddl
push
xchg
jle
clc
jle
xor
xchg
mov
subb
adc
aaa
sub
stc
repnz
push
inc
mov
jle
xchg
into
out
nop
and
push
pop
leave
jb
jmp
inc
adc
sub
push
jl
daa
loopne
aas
pop
ja
sbb
jno
jle
imul
lret
ret
aad
testb
pop
fcmovnbe
in
rolb
sub
test
add
jo
out
cmpsb
out
nop
and
push
cmp
cmp
cmpsl
imul
je
xlat
bound
repz
pop
push
sbb
imul
aaa
dec
jnp
jmp
push
adc
jbe
inc
jle
cmp
push
sbb
push
pop
xor
mov
cmp
and
jo
inc
mov
push
ljmp
jge
inc
outsb
push
add
shrb
mov
je
cmpsb
inc
scas
andnps
jmp
sbb
inc
loopne
xor
mov
xor
out
add
jne
xchg
push
ret
daa
fnstcw
hlt
shlb
or
jmp
add
into
dec
into
add
ja
mov
jmp
jl
push
lret
cmp
push
mov
insl
bound
cmp
pop
sbb
fimull
ds
xchg
mov
loop
adc
jle
imul
sbb
sahf
mov
push
sbb
push
jnp
adc
leave
push
stc
mov
clc
popf
and
scas
mov
in
or
pop
inc
inc
xor
mov
pop
int3
add
movsl
or
lds
add
repz
dec
push
jns
add
or
imul
dec
fisubs
pop
add
dec
das
or
lds
call
in
cmp
push
std
iret
ja
add
pop
mov
cmp
jecxz
test
cmp
jl
je
stos
lock
repz
cmp
and
rclb
movsl
out
shrl
add
aaa
push
add
add
mov
add
dec
scas
dec
sahf
pop
mov
mov
push
fs
gs
adc
test
test
mov
test
ds
cmp
cmp
sbb
cwtl
std
rorl
add
inc
dec
in
in
push
out
aas
mov
jp
mov
in
cmp
cmp
sti
xor
xor
mov
stos
inc
dec
add
out
hlt
aas
popa
leave
fisttpl
shr
scas
sar
in
ja
cmp
jmp
sbb
sbb
dec
mov
dec
jae
push
fistps
fucompp
sahf
hlt
js
jmp
ror
and
notl
cli
xchg
fisttpl
cmp
xlat
loop
cld
add
cmp
fwait
es
mov
push
stc
sbb
push
insl
xchg
jl
push
add
cmp
in
cltd
call
xor
push
push
xchg
mov
cmp
imul
insb
in
add
rcrb
and
cmp
lock
cli
aas
mov
mov
sti
mov
sbb
and
sbb
mov
or
jl
mov
lock
rcrl
sub
cli
shlb
mov
add
xor
push
add
pop
or
dec
mov
pop
jb
pushf
mov
ffreep
sahf
jo
add
test
pop
push
mov
leave
into
and
inc
add
push
jns
cmc
stos
lock
cmp
cmc
mov
dec
inc
jbe
add
mov
xor
cmp
sbb
movsl
pop
mov
mov
jae
jp
jnp
sbb
test
push
dec
add
and
mov
xchg
add
mov
jmp
movsl
mov
popf
cmp
cmp
push
pop
lret
jmp
das
in
jbe
bound
loop
cmpsl
setbe
shlb
mov
iret
ret
jne
adc
cmp
enter
xlat
int
xor
cmp
inc
stos
cmc
pop
sub
add
aaa
mov
add
sub
jmp
dec
dec
xchg
push
shl
mov
sub
mov
inc
sub
inc
fsubp
into
cmp
xchg
xchg
xchg
mov
add
xor
ss
xchg
sub
jb
call
sbb
bound
fs
sub
aam
mov
add
lret
mov
dec
jmp
lock
mov
lds
or
ja
cwtl
xor
and
enter
out
pop
lods
inc
pushf
fsubp
push
loop
push
call
cmpsl
pusha
xor
xchg
or
pop
pop
push
xor
test
mov
imul
ds
xchg
roll
or
inc
out
push
add
call
data16
sbb
cmpb
cmp
fldt
mov
add
repz
sub
push
mov
fs
dec
and
imul
push
xchg
or
dec
cs
mov
xchg
lods
mov
shll
sbb
sbb
jge
cmpsb
push
dec
pusha
imul
call
mov
subb
mov
add
dec
mov
sbb
push
jb
lods
jg
add
ret
pop
stc
xchg
xchg
inc
pop
mov
lcall
mov
lds
and
or
cmpsl
sub
imul
leave
fsubr
sahf
add
mov
push
mov
popf
mov
add
inc
flds
mov
loop
mov
adcb
mov
dec
movsl
jmp
xchg
cmp
add
ds
pop
into
lods
insb
add
jp
das
mov
xor
cmp
mov
pop
shlb
leave
jl
add
pop
mov
out
sub
rcrb
add
je
call
mov
data16
mov
bnd
int
jmp
mov
or
lock
inc
add
jge
push
or
or
push
ja
outsl
xlat
cmp
adc
and
push
outsb
jmp
push
cmpsb
bound
in
sahf
lahf
int
mov
jmp
mov
pop
aaa
popa
cmc
add
pusha
stc
and
cmp
jl
lcall
jg
dec
add
add
cmpsb
lea
int3
fidivrs
pop
sub
jo
sub
cmpsb
sbb
outsb
mov
in
or
add
inc
clc
stc
cmp
ja
push
scas
cli
push
inc
pop
fs
fildl
pop
add
pop
imul
test
jmp
jae
cltd
inc
sub
inc
xorb
cmp
adc
jmp
pop
add
lods
push
cli
mov
push
scas
pop
fmuls
add
mov
divl
push
int
repnz
jmp
cmpsl
jbe
xor
mov
aas
cmp
add
adc
add
add
insl
sub
pop
and
and
xor
in
push
fiadds
mov
lret
movsl
orb
mov
aas
pusha
pop
push
call
cmp
xor
add
mov
push
aad
or
in
xchg
enter
je
leave
xlat
sub
shlb
xor
lea
outsl
push
push
xor
cmp
or
outsl
inc
dec
test
mov
jae
adcl
cmp
pop
push
shll
fsincos
popa
gs
addr16
mov
in
cmp
inc
add
add
push
lods
mov
pushf
repz
add
enter
pop
ja
nop
les
mov
ss
ret
cmp
ljmp
mov
adc
xor
add
nop
sbb
or
jle
push
cmpb
add
dec
dec
iret
movzbl
xor
icebp
mov
and
repz
jle
inc
call
xchg
mov
call
popf
xor
sub
incb
lret
xlat
pop
insl
xor
js
mov
lea
sbbb
pop
adc
ja
cmp
adc
cld
int
xchg
cmp
ss
call
and
add
cmp
divl
pop
and
in
dec
xchg
lret
cmc
pop
out
mov
cmpsl
or
push
cmp
jl
scas
jle
adc
push
cmpsl
inc
testl
repz
xor
loopne
jne
push
add
fistl
les
in
adcb
jmp
into
popf
stos
jb
add
mov
jne
add
adc
push
mov
pushf
mov
pushl
enter
outsb
xor
clc
dec
cmp
cvtdq2ps
cld
dec
xor
movsb
push
and
ds
dec
inc
dec
es
out
pop
pusha
cmpsb
mov
mov
pop
and
paddsb
fstpt
add
adc
aam
and
nop
or
sbb
mov
mov
scas
pop
mov
jmp
lods
shlb
jle
mov
dec
fiaddl
pop
mov
jae
cltd
adc
cmp
pop
jb
call
sub
stc
adc
jne
pop
xchg
mov
mov
xor
test
pop
cmp
outsb
cmp
lcall
rcrb
pop
rol
ret
test
xor
mov
fucom
xlat
add
pop
cmp
xor
or
cmc
push
and
jmp
mov
aam
in
jge
shl
insb
add
mov
dec
int3
sbb
rcrb
push
clc
in
lsl
sbb
sti
sub
adc
cmp
mov
mov
ss
fbld
or
data16
xor
arpl
jg
cmp
inc
add
pop
fists
inc
add
sub
xchg
bound
call
adc
dec
je
cmp
jae
cmp
fs
shl
add
add
pop
stc
pop
add
sub
arpl
xchg
lea
mov
mov
adc
push
jo
add
loope
icebp
icebp
outsb
push
popa
mov
xchg
pusha
fwait
pop
imul
dec
xchg
popf
popw
stc
repz
xchg
pushf
push
mov
out
hlt
xchg
idiv
xor
inc
pop
pushf
mov
subl
int3
pop
clc
inc
aas
sbb
mov
idiv
sbb
inc
add
cmp
xor
sbb
inc
lods
jg
int
sbb
sub
pop
rol
shlb
adc
lods
testl
pop
xor
jge
jmp
out
jb
pop
sub
imul
out
xlat
les
inc
jne
stos
cmp
rolb
loope
lahf
add
out
sub
sti
dec
mov
cmc
xor
in
pop
loopne
in
mov
mov
mov
icebp
mov
sub
nop
insl
xor
outsl
adc
mov
add
dec
jl
cmp
addr16
inc
test
stc
cmp
xchg
push
hlt
aas
nop
push
jmp
inc
push
mov
outsl
notl
fwait
push
leave
arpl
andb
out
mov
adc
sbb
xchg
adc
iret
pop
cmp
add
movsl
loopne
jmp
mov
movsl
xchg
xchg
add
push
jno
aad
push
adc
mov
sbb
mov
fsub
cwtl
stc
add
mov
push
sbb
insb
fadds
inc
pusha
inc
in
fwait
and
lret
push
ds
mov
lret
adc
sub
out
jmp
mov
jne
push
mov
sbb
movsb
loope
xor
fisttpll
and
hlt
and
test
add
push
add
xor
pop
push
or
add
xchg
dec
mov
jne
negl
add
cmp
sbb
test
in
insl
cmp
xor
shl
cs
jae
jns
dec
inc
adc
popa
jns
pop
fisttpl
add
icebp
dec
mov
cmp
sub
or
adc
sbb
les
mov
fxch
pop
jmp
mov
mov
push
invlpg
add
lcall
cmp
mov
jno
cmp
mov
rcl
xchg
push
cltd
fistps
fstps
movsl
cmp
cmp
daa
xchg
out
jge
jmp
xor
repz
add
or
pusha
mov
sub
cmp
adc
pop
cmp
jge
sar
inc
jae
jmp
pop
inc
inc
rcl
add
xor
iret
lcall
sti
sbb
push
mov
mov
xchg
inc
add
dec
xlat
lock
sbb
cwtl
ds
lcall
nop
add
mov
das
jmp
rcrb
push
add
pop
cmp
push
or
clc
mov
andb
mov
mov
rcrl
and
insb
into
mov
repz
inc
jbe
loope
pop
and
popa
cltd
int
cmp
jle
addb
cmp
push
sbb
cmp
ja
clc
mov
es
mov
loopne
out
adc
adc
out
push
call
sub
mov
sbb
adc
ret
cmp
adc
fldl
add
mov
cmpsl
cmp
mov
popa
adc
iret
inc
add
ret
decb
repz
xchg
mov
insb
jmp
test
mov
cmp
icebp
mov
xor
cmp
imull
push
cmp
and
test
sub
jecxz
repnz
out
loopne
out
ret
dec
dec
xor
mov
arpl
or
lock
jmp
pop
aad
in
fildl
pop
cli
nop
inc
ja
fnstenv
xchg
ds
mov
mov
out
popf
fiadds
cld
mov
stos
test
fs
pushf
js
sub
loop
add
stc
in
js
fadd
pop
cmp
xor
testl
lea
add
pop
xchg
or
jbe
cmp
lret
out
or
and
cmp
hlt
xchg
inc
pop
les
push
lea
or
sbb
add
add
pop
xor
loopne
add
ret
cmp
pop
pop
and
jl
push
daa
xchg
sarl
and
insb
cld
shlb
pop
jnp
or
xchg
je
push
ds
out
mov
xor
mov
subb
and
or
call
or
sti
cmovs
fldenv
pop
sub
jge
mov
lret
add
or
ja
aam
lcall
xor
sbb
jbe
jmp
sbb
xlat
in
jnp
lods
cmp
mov
jl
test
lea
imul
mov
add
or
jecxz
lods
push
insl
inc
insb
xor
jnp
add
push
arpl
insb
or
sbb
cmp
xlat
ret
repnz
mov
add
cmp
adc
xor
jne
xor
add
xchg
out
add
scas
xor
out
stos
ljmp
fstp
nop
enter
pop
test
push
inc
sti
sbb
add
adc
adc
sub
nop
idivl
dec
out
rcrl
enter
pushf
sbb
lcall
test
aad
mov
loopne
imul
mov
ja
pop
lods
jb
aam
add
pop
decl
adc
loop
cmp
add
cmpsb
popf
sbb
cmp
jg
jp
in
cmp
lcall
xor
notl
add
sahf
xor
cmp
or
mov
dec
jb
dec
inc
add
in
inc
repz
sub
push
sbb
out
or
cmp
scas
mov
push
roll
or
and
cmp
mov
lahf
jno
add
sub
les
mov
shll
mov
xor
fisubrl
and
adcb
gs
cmp
jmp
sbb
lock
lds
or
punpckhwd
mov
fisubrl
cmp
cmp
sti
push
mov
ljmp
mov
inc
rclb
jmp
inc
ficoms
fnsave
fdivr
insl
adc
cld
out
stos
in
cltd
in
add
mov
jmp
sbb
mov
push
or
cmp
add
mov
xlat
mov
mov
push
or
bound
mov
shll
or
mov
dec
ljmp
mov
cmp
dec
cmpsl
push
push
das
out
mov
data16
lods
iret
in
jge
inc
rclb
push
xchg
or
dec
jb
cmp
push
or
add
test
ds
xchg
push
lret
arpl
in
jmp
cmp
jno
adc
xor
sti
pushw
and
pushf
data16
add
and
push
sub
cmp
pop
call
loop
jns
adc
xchg
aaa
sub
jmp
out
push
lcall
jg
shl
mov
xchg
sbb
pusha
add
cmp
jg
lret
xchg
movb
jno
or
je
xorl
bswap
inc
mov
adc
jl
xor
xorb
sub
push
lods
sbb
arpl
nop
xchg
add
sbb
aad
das
cmp
cmpsl
cmp
addl
lret
daa
jmp
fstl
push
cmp
cmc
or
outsb
pop
mov
inc
cmp
out
pop
imul
xchg
lcall
lahf
leave
xchg
sbb
and
xchg
jmp
add
int3
aaa
pusha
add
lods
adc
out
cs
cli
movl
mov
scas
xorb
je
and
mov
daa
jecxz
lcall
push
push
sub
arpl
and
orb
xlat
arpl
mov
dec
mov
cmpxchg
jns
cmp
sbb
daa
jbe
fimuls
xor
adc
das
iret
add
pop
inc
sbb
cmp
dec
cmp
mov
aad
mov
sub
mov
imul
pop
fxch
jae
flds
cltd
xchg
mov
cmp
cmc
lock
push
jo
jb
in
adc
clc
in
add
inc
insl
ja
sti
cmp
xchg
orb
enter
add
scas
lcall
xchg
dec
rcrb
je
pop
out
and
dec
mov
push
sub
jl
xor
adc
xchg
cmpsb
mov
movsb
or
loopne
loopne
js
fisubl
jb
imul
jg
hlt
jno
in
dec
or
cmp
sbb
pop
add
xchg
xor
out
std
mov
cmp
fisubs
or
mov
ret
fiadds
decb
or
sbb
cmp
les
loop
enter
in
int3
push
popa
test
imul
mov
dec
cmp
sub
cltd
push
out
xor
shlb
dec
orb
and
fsub
xor
cwtl
sbb
mov
jecxz
rorb
ljmp
mov
cmp
xlat
shl
pushf
test
push
mov
into
jbe
dec
pop
cmp
inc
mov
add
sub
out
jle
sbb
push
cld
nop
add
aaa
inc
loope
jbe
shlb
ss
jmp
and
pop
cmp
jmp
xor
add
lods
push
movsl
scas
les
add
xlat
push
jge
mov
sar
test
arpl
mov
clc
mov
xchg
int3
nop
testb
fucomi
fnsave
mov
dec
xchg
sub
sub
cmp
movsl
lcall
into
pop
shlb
sbb
add
xchg
imul
movsb
add
daa
sbb
jnp
mov
mov
aad
xchg
jmp
add
and
aam
dec
imul
jo
out
cltd
rolb
fcoms
sbb
xchg
cmp
and
lods
inc
stos
rorl
mov
ljmp
rcrb
fidivs
rcl
jne
add
icebp
int
dec
xor
pushf
dec
xchg
out
push
loopne
mov
add
jecxz
js
int
call
stos
jmp
xchg
push
sbb
mov
pop
jmp
leave
test
sbb
xchg
mov
cmp
pop
push
and
adc
cmp
jns
shl
fstps
shlb
aas
dec
push
test
sbb
movsl
mov
fldenv
int
loope
adc
icebp
nop
adc
jbe
and
cltd
xchg
cmp
dec
sbb
add
jno
aam
out
pop
add
daa
adc
sarl
pop
add
and
jbe
mov
dec
xor
jae
cmp
jle
fwait
inc
loope
cmp
jp
add
mov
outsl
fidivs
enter
dec
lock
sbb
sub
fcmove
popa
add
or
jmp
loope
xchg
dec
adc
mov
and
mov
loopne
sbbl
jmp
jl
sbb
jne
scas
insl
xor
out
sub
add
fadds
add
or
mov
jno
js
stc
ss
shll
pusha
or
cmp
jge
jg
add
aas
stos
cmp
pop
in
andb
in
and
pop
insl
sbb
mov
cmp
pop
sbb
movsl
test
adc
cltd
cmp
nop
pushf
mov
lcall
jmp
dec
cmp
and
mov
jle
lock
jns
cmp
adc
stc
add
paddb
cmp
hlt
or
enter
sahf
or
nop
mov
lahf
iret
pop
add
cs
and
inc
aad
cmpsl
daa
loopne
sbb
fcoml
ds
mov
jo
sub
or
mov
ficompl
shrb
add
loop
lret
push
add
inc
or
aas
test
add
lods
movsl
push
jne
pop
add
in
jmp
mov
scas
test
push
test
daa
cmpsl
sub
push
or
cmp
mov
add
and
loopne
cltd
inc
cwtl
cmp
lods
add
pop
add
rcl
insb
jmp
jmp
outsb
mov
enter
add
pusha
daa
cmpl
fbld
loope
ret
jmp
ret
and
fnstenv
lcall
loop
sub
inc
adc
mov
xor
sbb
mov
xlat
push
out
fildl
adc
repnz
sbb
stos
mov
sbb
rcl
sysenter
jb
add
add
mov
lret
inc
jno
jmp
dec
xor
mov
adc
mov
push
mov
in
cld
fucomp
sbb
mov
sbbb
push
cmp
iret
rcll
shr
and
data16
ret
in
mov
jne
xor
ret
popl
sbb
movsl
repnz
test
cmp
lcall
add
mov
fsubl
inc
and
push
popa
mov
mov
sub
pop
xor
dec
pop
jecxz
mov
clc
push
add
inc
mov
and
xor
xor
test
sub
xchg
add
sbb
mov
sub
je
pop
divl
push
orl
clc
sub
cmp
nop
incl
inc
ljmp
add
pop
cmpsb
sarl
add
inc
repnz
jmp
push
mov
cmp
mov
outsb
adc
dec
add
and
mov
rorl
sbb
mov
mov
cmc
cli
lea
cld
lods
sub
iret
mov
jbe
aad
dec
add
in
aaa
jo
ds
mov
jg
jmp
movsb
xlat
aad
mov
pop
push
dec
pop
jg
cmp
daa
push
push
push
push
lds
adcb
cmp
sbb
add
mov
xchg
mov
jmp
mov
mov
in
xchg
jge
or
jnp
icebp
xor
insb
hlt
sbb
xchg
fwait
inc
xor
cmp
daa
cli
daa
cli
cmp
jmp
sti
stos
fmuls
jns
mov
sarb
dec
repnz
push
push
fdivl
jns
stos
sbb
filds
xchg
mov
imul
imul
push
enter
nop
add
enter
pop
mov
jl
cmp
popf
xor
push
sbb
jns
jae
sub
bound
sbb
xchg
jmp
sbb
adc
cmp
loope
cmp
enter
pop
inc
sub
mov
sbb
xchg
jb
int
push
ficomps
pop
out
inc
out
lcall
jno
andl
dec
add
inc
cmp
les
add
pop
inc
cmp
pop
and
imul
or
jnp
xlat
call
imul
add
jge
adc
jns
in
jg
add
arpl
cmp
jge
jmp
inc
subl
cmp
mov
dec
and
bound
and
mov
jo
or
popf
push
adc
out
pop
enter
add
xchg
daa
popl
rorb
popf
mov
xor
fidivs
dec
aas
aad
xor
jmp
xchg
inc
mov
push
imul
cmc
mov
call
inc
clc
dec
xor
pop
enter
lahf
inc
imul
or
pop
in
adc
out
mov
push
rcll
dec
add
insb
xchg
popa
addr16
les
sub
mov
ljmp
aas
mov
xchg
pop
inc
push
pop
out
mov
nop
mov
js
jae
dec
dec
add
adc
scas
add
inc
jmp
iret
imul
mov
outsl
mov
arpl
pop
push
add
insl
inc
mov
outsb
dec
mov
inc
lods
cmp
fwait
dec
xor
mov
jl
add
mov
call
mov
xor
pop
idivl
pusha
mov
cmp
jmp
jle
push
jo
push
push
mov
or
xor
shrl
arpl
addr16
imul
and
movsb
jb
rol
pop
rorb
fucomi
aam
mov
sbbb
in
lcall
cmp
shrl
dec
es
cmp
push
fnstenv
xchg
imul
fmull
sbb
jbe
subb
in
lcall
in
daa
cmp
fdiv
adc
lock
inc
add
mov
pop
xor
cmp
jmp
fstps
sahf
call
pop
outsl
mov
mov
add
add
divl
lcall
cmp
sbb
jecxz
mov
xchg
dec
enter
cmp
lock
out
xor
pop
jbe
daa
jp
and
fbstp
insl
aam
test
jmp
push
lock
cmp
in
pop
rcl
jecxz
icebp
sub
mov
add
movb
mov
loop
sar
pop
subl
mulb
push
shrb
pop
push
mov
xor
fadd
xchg
xor
add
push
rorb
push
xor
cmp
add
or
or
sbb
jle
adc
lods
iret
call
sbb
movsb
stc
pop
dec
add
je
mov
cmp
dec
mov
mov
loope
dec
std
xor
sbb
mov
mov
sub
lea
cmp
mov
push
arpl
xchg
aam
popa
add
ja
das
mov
enter
je
adc
xchg
fimuls
cmpsl
int
arpl
jg
inc
js
pushf
cmp
addb
outsb
mov
mov
stos
sub
adc
add
sub
fwait
jl
test
and
xor
inc
out
xlat
sub
dec
cli
loopne
outsl
addr16
shlb
add
inc
jge
inc
stos
into
add
pop
and
repnz
push
sbb
and
xor
cmp
sbb
xchg
test
int
psrld
add
aam
jge
ficomps
jl
jno
mov
cli
xchg
jns
adc
jmp
cltd
and
shrl
mov
fiadds
xchg
cmp
push
mov
inc
mov
je
push
add
leave
cmp
mov
xchg
in
popf
ds
push
ret
add
sar
repz
pusha
pop
add
data16
sbb
jmp
adcb
inc
cmp
xor
ljmp
out
scas
imul
gs
inc
add
aaa
ficompl
mov
pop
sbb
ljmp
mov
pop
out
push
cmp
adc
adc
jmp
xlat
sbb
stc
or
cmp
jp
and
add
ss
mov
cmp
ja
arpl
pop
inc
jae
jmp
xor
js
xlat
push
pop
dec
imulb
movsb
add
icebp
clc
movsl
fnsave
shlb
jbe
ret
outsb
out
mov
mov
fisubl
shlb
lea
sbb
jbe
enter
pop
mov
mov
add
outsl
aas
test
jg
lods
testl
jmp
into
inc
push
aam
call
lret
mov
in
cmp
je
pushf
popf
sbb
add
mov
xor
sbb
pop
pop
lods
mov
cmp
or
out
je
adc
mov
fstl
ss
daa
inc
filds
cmpsl
adc
cmc
and
in
pop
fsts
push
add
in
push
ret
and
ret
mov
pop
ljmp
mov
add
imul
stos
xchg
mov
lret
inc
loope
fs
cmp
mov
arpl
sahf
imul
jecxz
sti
dec
mov
cmp
jb
cmp
cmp
or
jbe
call
adc
lea
mov
sub
cmpsl
loopne
sbb
add
fsubrs
call
pop
insb
popa
adc
inc
fdivrp
and
fisttps
std
cmp
jecxz
imul
or
xchg
mov
push
and
dec
aam
push
cld
nop
cmp
or
stc
cld
jbe
mov
xchg
lret
hlt
call
cmp
in
les
add
lret
imul
in
cli
inc
fcomps
out
xchg
xor
stos
mov
imul
lret
loopne
bnd
mull
xor
push
jno
add
test
adc
xlat
jmp
outsl
pop
into
arpl
imul
xchg
ljmp
aad
in
pop
ds
cmp
add
outsl
jmp
out
or
mov
cmp
xchg
mov
mov
jmp
xor
rcrb
movsl
iret
out
cmp
sbb
cmp
cmp
adc
dec
leave
mov
mov
loope
in
jmp
out
mov
xor
mov
inc
mov
or
bound
outsl
das
lret
mov
ja
addr16
or
mov
clc
outsb
mov
xor
lods
movsl
and
jmp
mov
or
cs
xchg
in
push
sub
lods
mov
out
cmp
les
push
mov
in
xchg
sarl
mov
xor
jae
stc
fnstsw
add
mov
test
pusha
jns
or
push
pop
adc
push
int
daa
jmp
jae
push
testl
ljmp
lock
mov
cwtl
add
inc
sub
cwtl
cmp
inc
push
push
icebp
sbb
sti
pop
sub
fsubrs
cmp
lret
mov
xor
es
lret
jne
ret
mov
rclb
xchg
inc
call
inc
sbb
cmp
std
push
movsl
dec
dec
fiaddl
popa
add
gs
sbb
adcl
test
fidivs
leave
ds
mov
gs
fs
and
hlt
jmp
xor
jmp
dec
mov
cmp
mov
add
fists
sub
das
lock
pop
div
cmpsl
test
ljmp
jmp
pop
lods
ja
add
shrb
addr16
into
add
orl
nop
push
add
inc
cmp
and
fiaddl
cld
xlat
push
cli
push
cs
fs
add
xor
mov
pop
add
fucomi
loopne
cmp
xchg
int3
xchg
je
adc
dec
or
stos
stc
add
imul
jmp
mov
stos
or
or
retw
mov
insb
subb
fmul
jp
add
fidivrs
mov
fadd
push
jb
sahf
std
sbb
addl
sub
dec
push
sbb
in
push
mov
xchg
mov
fwait
xor
sahf
and
mov
adc
mov
xchg
mov
cmp
mov
ret
notl
mov
push
mov
insl
xor
cmpsb
call
mov
fiaddl
cltd
in
outsb
fcompl
movsl
sub
and
mov
iret
ss
jnp
mov
ret
das
push
xor
add
or
mov
inc
dec
rcrb
pop
sub
ffreep
subb
add
stc
gs
js
mov
mov
or
mov
xchg
xchg
add
ja
aas
ja
insb
mulb
xor
mov
cld
ljmp
adc
out
add
xchg
xchg
aam
jl
xor
pop
repz
jmp
dec
and
rorl
push
mov
sbb
jne
mov
cld
jno
cmp
cmp
hlt
jnp
fisubrl
add
mov
or
pop
imul
subb
testb
clc
ret
dec
dec
dec
xor
int3
lock
pushf
mov
cmp
adc
pusha
mov
shrl
xchg
add
enter
lea
pop
sbb
rcll
lcallw
or
cld
ds
movd
sahf
insb
addl
pop
mov
xor
stc
push
xchg
aaa
mov
mov
gs
jno
add
or
movsb
adc
cmp
fcompl
and
les
add
sub
stc
lea
add
push
jge
sbb
pop
sbb
or
push
sub
push
insb
mov
xchg
jns
add
inc
mov
outsb
add
test
repz
fimull
in
rol
mov
mov
jo
gs
sub
add
sub
inc
jmp
or
clc
mov
fidivs
test
mov
xchg
repz
and
mov
mov
mov
test
xchg
sub
leave
mov
hlt
jae
ja
hlt
pushf
scas
mov
push
lcall
imul
out
loop
inc
rcr
jl
jge
mov
es
roll
je
push
dec
loopne
jb
xor
mov
test
cs
lret
les
into
insb
adc
inc
jge
movsl
sti
sbb
or
out
xor
add
out
add
aaa
loop
mov
or
clc
add
in
sbb
pop
stos
out
out
jg
pop
sub
mov
in
cmp
scas
sti
insl
enter
hlt
in
sbb
xor
fsubrs
rorb
push
pop
jne
inc
add
shll
fadds
xchg
popa
es
sub
push
xchg
push
mov
xchg
push
pusha
adc
leave
jle
in
sub
inc
in
leave
cli
add
inc
mov
inc
xchg
cmp
fistpll
fdivs
aaa
mov
dec
insb
push
push
rorb
out
outsb
adc
lahf
mulb
iret
pop
jge
stos
lods
cmp
xor
sub
cmp
scas
repnz
incb
inc
add
jo
jmp
or
loopne
mov
mov
jnp
jg
xchg
iret
mov
add
imul
call
or
fs
add
aad
jne
scas
pop
loopne
xor
xchg
and
jp
xor
in
adc
les
adc
cmp
push
and
fucomi
jns
mov
add
movsb
repnz
je
sub
mov
jmp
fdivrs
sbb
ss
pop
mov
cmpsb
inc
cmc
jg
jmp
mov
xor
mov
cmp
je
shll
sbb
mov
fwait
push
add
and
mov
out
sub
test
cmp
push
icebp
sbb
addr16
cmp
cmp
call
loope
xor
mov
sbb
ficomps
sbb
out
bound
mov
pop
mull
add
push
je
jmp
sub
add
cmp
jne
lods
mov
mov
adc
das
sub
shll
cmp
andb
sbb
daa
jne
pop
insl
cmpsb
mov
loopne
mov
enter
add
jle
in
fiadds
and
add
dec
sbb
jmp
adc
test
rcl
cmp
popa
mov
lods
nop
fisttpl
sahf
aas
clc
add
xor
lcall
rcrb
cltd
mov
mov
cmpsl
std
inc
cmp
aad
mov
fndisi(8087
jns
push
in
mov
outsb
jmp
lds
sub
cmp
inc
pop
push
or
mov
and
xchg
js
cs
mov
negb
xlat
push
push
or
add
ljmp
call
ret
lcall
mov
dec
cmpb
das
nop
mov
pop
add
xchg
fadds
ss
call
add
shll
jmp
xor
fs
shrl
aam
js
xchg
xor
sbb
outsb
push
or
add
movb
in
jmp
clc
or
mov
cmp
push
add
es
arpl
in
sarb
ss
sbb
xchg
test
repnz
aas
mov
or
sarb
aam
adc
aaa
sub
add
mov
decl
xor
mov
xchg
xor
push
cwtl
mov
cmpl
xchg
sahf
cli
mov
push
or
sub
hlt
repz
jmp
mov
ret
out
jno
add
gs
xor
or
cltd
icebp
cmp
sbb
popa
add
cli
imul
mov
stos
shll
mov
push
mov
mov
pop
inc
sti
loope
adc
inc
pop
ret
nop
popf
sbb
je
fstpl
rcrb
cmp
xchg
mov
jmp
test
inc
xor
ret
cmp
das
mov
scas
outsb
cli
jmp
out
jb
xor
jne
movl
insb
sub
aam
popf
ds
shl
scas
jmp
daa
mov
xchg
jbe
pop
inc
test
mov
jnp
cmp
fdivr
enter
mov
in
hlt
int
lods
add
add
std
enter
adc
nop
push
sub
adc
iret
std
cmp
or
xchg
sbb
xor
scas
stc
imul
rolb
repz
les
js
notb
inc
cmp
push
pop
push
xchg
cmp
cld
pop
pop
pushf
inc
fucomi
call
nop
addr16
add
mov
mov
sbb
and
imul
jp
ja
int
pop
cmp
push
test
movsb
pushf
js
pop
in
pushf
push
add
rol
rolb
jmp
pop
fwait
shll
adc
inc
inc
cmp
jnp
cld
sbb
in
loop
daa
dec
mov
pop
add
leave
sbb
jmp
cmpl
xchg
push
xchg
call
jge
sti
orb
jmp
inc
adc
jne
mov
mov
mov
cmp
rcl
nop
xor
outsl
sub
sbb
inc
call
imul
or
fdivs
or
mov
data16
bnd
pop
sbb
or
pop
cmp
jae
add
lock
xchg
adc
lods
cmpsb
call
lret
imul
inc
loopne
jl
hlt
ja
fwait
xor
out
and
adc
clc
add
callw
or
jb
add
jmp
sbb
and
or
stos
movsl
rclb
push
jmp
mov
pop
filds
test
mov
call
pop
popa
loopne
push
xchg
xor
dec
or
adc
mov
xor
dec
rorl
clc
xor
cltd
roll
movsb
push
fs
cmc
fninit
xchg
in
add
cltd
jle
outsb
push
shll
out
fcoml
inc
sbb
or
or
push
adc
adc
incl
push
dec
add
test
lret
push
mov
aam
push
dec
mov
xchg
scas
xchg
dec
dec
add
push
nop
add
ret
mov
mov
push
rcl
ret
icebp
add
insl
popl
add
inc
loope
xchg
mov
loop
addb
ja
pop
shlb
cmpb
add
mov
fsubl
push
dec
popa
jbe
push
aam
xchg
or
sahf
dec
stos
cmp
mov
or
ret
rcrb
add
add
inc
outsb
call
mov
or
filds
and
dec
jmp
inc
jle
sub
std
pop
mov
cli
sbb
push
jbe
push
pop
lds
in
rcrl
bound
cmp
out
jns
fisubrs
jmp
sub
loopne
cmp
push
stc
notb
mov
outsl
cwtl
dec
call
dec
jne
mov
mov
jmp
xchg
push
loop
pop
mov
cmpsl
dec
in
push
mov
adcl
ljmp
popf
int3
jne
faddp
jno
arpl
mov
xchg
cmp
sub
arpl
dec
fadds
mov
shll
mul
es
punpckhbw
add
mov
add
xlat
pusha
lods
add
mov
mov
sub
push
sbb
cmpsl
outsl
enter
lds
jnp
jp
out
pop
pop
std
out
sbb
mov
or
pop
pusha
pop
push
cmpsl
add
aam
stos
test
xchg
loope
sbbl
or
cmc
sti
add
rep
xor
xor
add
push
test
cmp
icebp
clc
pop
movsl
mov
outsl
das
repz
ja
add
lret
cmp
jb
push
loopne
stos
pushf
add
push
std
jl
in
fcoms
out
xor
aad
mov
push
push
cmp
adc
sbb
xchg
sub
add
inc
inc
sbb
sbb
or
dec
mov
jmp
add
dec
mov
stc
jmp
cmp
arpl
push
mov
setns
dec
pushf
inc
sub
dec
and
and
lea
aad
cmp
mov
dec
xchg
add
pop
mov
xor
rcrb
jp
push
xor
ret
jge
jo
jne
push
add
add
dec
jmp
jge
jae
cmp
arpl
push
std
adc
push
popf
sbb
cmp
mov
xchg
rolb
push
push
popa
faddp
stos
xchg
xor
neg
stc
xor
add
push
xchg
xchg
insb
cli
in
out
aaa
xor
bound
aad
or
pop
ret
jmp
pop
stos
out
cmp
sbbl
push
icebp
aas
mov
or
aas
xor
out
push
les
jle
dec
fidivs
dec
add
into
or
sbb
and
jmp
and
fcmove
lret
sub
in
int3
out
mov
clc
imul
in
lahf
push
add
mov
sbb
cmp
xor
xchg
in
shll
cmp
adc
push
sahf
arpl
push
pop
lcall
pop
das
cli
cld
dec
cmp
mov
push
in
lret
outsl
pop
insl
xchg
add
sbb
add
push
icebp
sub
xor
add
loope
ja
cmpsb
inc
sbb
push
jmp
add
mov
mull
pop
add
inc
pop
clc
jmp
cmp
ror
mov
jmp
cmpsl
adc
test
dec
mov
daa
mov
or
sti
sbb
mov
mov
icebp
add
add
cmc
in
pop
sahf
adc
add
cmp
and
daa
jmp
inc
pop
xor
cmp
mov
mov
loope
lret
mov
lods
add
mov
mov
cmp
movsl
jmp
in
adc
cmp
std
sbb
je
lds
cmp
es
repz
sti
sbb
dec
stos
cmp
lret
in
int3
mov
lcall
add
imul
test
leave
jge
lock
xor
push
xchg
pop
incl
loope
mov
xchg
fimuls
inc
movsb
aaa
cwtl
xor
cli
stos
cmp
adc
cwtl
loopne
mov
pop
mov
test
jl
roll
in
xchg
aaa
adc
ficompl
lock
or
push
insb
arpl
jo
mov
leave
loopne
gs
mov
cmp
and
push
dec
lret
int3
xor
test
and
jp
and
add
call
insb
mov
idivl
addb
xchg
push
push
jno
add
out
decl
fiadds
insl
xor
cli
test
aam
jmp
mov
pop
nop
or
loopne
lahf
ljmp
jmp
bnd
and
cmp
mov
loop
jl
mov
mov
xor
outsb
cli
mov
add
nop
lahf
les
mov
dec
daa
mov
in
stos
push
cltd
jge
js
das
xor
sbb
add
rclb
pop
mov
jge
into
push
cmpl
mov
repnz
add
dec
rorl
push
inc
cmp
add
mov
call
js
xor
leave
add
xor
insl
sarl
rolb
adc
add
mov
iret
xchg
jmp
mov
scas
sbb
and
mov
cmp
subl
jg
stc
xchg
xchg
add
in
push
iret
xchg
cmp
subl
mov
cmp
add
pop
pop
sbbl
jmp
scas
xlat
cmpb
jecxz
sbb
rol
cmp
and
mov
mov
push
sbb
add
adc
pop
pushf
clc
mov
bound
pop
pop
jb
enter
stos
mov
repnz
test
cs
push
push
icebp
mov
cmp
adc
in
xchg
inc
dec
cmp
ret
push
adc
mov
stc
sti
cmp
add
sbb
sahf
pusha
and
sbb
and
shlb
add
push
mov
cmp
inc
popf
out
fisttpll
jge
test
mov
dec
cmp
xor
fildl
dec
mov
cmpl
or
lds
imul
jne
adc
push
ret
int
aas
and
xchg
pop
mov
xlat
adc
je
pop
fwait
into
mov
sbb
negb
shl
xchg
mov
enter
imul
lods
test
mov
imul
add
icebp
or
cltd
out
pop
pop
add
sti
mov
push
push
int3
cmp
cs
add
repnz
add
sbb
shr
les
repz
and
test
add
sbb
dec
inc
cmc
add
jg
stc
xchg
sub
out
add
sub
addb
fsubl
push
jmp
stos
sub
aaa
cmp
mov
jnp
jmp
int
dec
jns
adc
lods
pop
leave
fistpll
loopne
jmp
or
cltd
bound
out
cs
rcll
add
inc
add
out
push
jmp
cs
loope
cmp
and
xor
or
or
pop
and
sbb
and
or
cmp
lock
ds
shl
or
jl
loope
std
cmp
ret
sbb
mov
lcall
or
pushf
cmpb
jp
imul
es
mov
mov
movsb
pop
mov
es
out
jo
aad
aas
add
or
adc
adc
and
ret
js
repnz
das
aad
in
jmp
ljmp
out
les
cli
in
push
ss
add
cli
call
sub
ds
loopne
mov
scas
lds
subb
xchg
cs
mov
stos
push
mov
andb
xchg
inc
push
xchg
scas
lahf
xchg
dec
jg
adc
jmp
push
inc
jo
sbb
inc
je
mov
imul
adc
pusha
js
xchg
ret
xchg
pop
lahf
sbb
inc
mov
ja
inc
jle
popf
fucomp
pusha
mov
and
xchg
dec
xor
dec
xchg
jae
dec
xlat
pusha
cs
loop
shrb
xlat
inc
addb
sbb
sub
pop
push
xor
sbb
or
ret
shlb
or
and
pop
stc
sub
roll
sbb
add
and
jae
dec
ds
std
adc
cmp
push
add
lock
out
rolb
icebp
or
call
and
mov
push
leave
loopne
add
jmp
jmp
lock
and
call
fstpt
sub
lret
adc
idivb
fsubr
movsl
mov
nop
test
cld
inc
inc
cmpsb
add
iret
ljmp
add
dec
xchg
mov
cmp
jns
mov
push
loop
mov
bound
xchg
cltd
jo
cmc
lcall
xor
sub
inc
add
js
mov
pop
loop
movsl
push
add
cmc
and
cltd
fs
test
push
sbb
js
dec
scas
pusha
shll
dec
and
out
inc
in
fiaddl
add
je
cmpsl
push
adc
es
ds
dec
jno
dec
in
adc
add
add
xor
push
hlt
xor
cmp
std
push
xor
mov
add
sub
and
xor
pop
movsl
sbb
jmp
xor
roll
xor
or
subl
fxam
mov
mov
popa
jge
in
adc
roll
iret
out
ds
rcl
mov
ret
sub
or
cs
fsub
add
call
lret
add
notrack
mov
inc
orb
pop
jmp
mov
xchg
add
pop
mov
shr
out
inc
mov
sbbb
mov
xchg
push
or
mov
lahf
push
jo
push
imul
xor
mov
arpl
dec
imul
imul
add
arpl
in
jp
pusha
stos
addr16
jg
pop
mov
dec
mov
or
shll
rcl
push
add
int3
pop
cmp
leave
add
push
and
cs
sub
xor
xor
pop
xor
or
push
in
or
adcl
sbb
cs
nop
adc
or
and
add
sub
cld
fisttpll
push
rolb
mov
xchg
jl
xchg
movl
cmp
lahf
out
sahf
iret
and
cs
cmp
add
inc
rcl
out
or
inc
idivb
cli
rcrb
psrad
push
add
enter
cmpsl
xchg
pop
cli
sbb
and
mov
daa
inc
mov
pop
call
idiv
xlat
mov
outsb
mov
outsl
bound
inc
call
sbb
mov
dec
add
jae
dec
repnz
or
push
xchg
cmpl
movb
add
xchg
or
shrb
nop
sbb
pushf
inc
ja
pop
cwtl
inc
mov
lea
rol
loopne
jecxz
addr16
add
jmp
lds
std
jmp
cli
out
or
ficompl
fcompl
add
cmp
add
in
fsubr
loopne
fsubr
into
leave
fldenv
dec
test
pusha
stc
jl
mov
sarb
inc
add
mov
cld
aas
fdivs
xor
fldl
subb
push
inc
ja,pn
add
iret
mov
xchg
repz
adc
add
std
loopne
int3
loope
or
xor
jae
mov
jnp
pop
lret
jg
xchg
inc
addb
dec
mov
push
outsl
push
mov
lcall
jecxz
sbb
fs
mov
push
mov
mov
push
dec
inc
jne
dec
fdivs
inc
jmp
flds
push
ret
xlat
addl
pop
mov
mov
addr16
pop
lods
cwtl
inc
mov
movsb
inc
cmp
cwtl
add
jne
sahf
sbb
lcall
stos
scas
xchg
ljmp
test
roll
adc
dec
jmp
dec
stc
or
cmp
cmc
std
leave
cs
rcl
add
ret
push
out
or
and
lcall
js
push
cmp
shlb
daa
cmp
int3
stc
lock
enter
add
push
test
xor
cmp
add
scas
movsb
add
and
rclb
sub
fnstsw
cmp
pushl
sbb
repz
sbb
and
add
mov
popf
loope
or
in
add
jno
lods
jb
dec
push
sbb
push
jnp
nop
jp
aas
xchg
ljmp
sbb
imul
mov
mov
jbe
mov
adc
mov
inc
adc
jp
inc
in
repz
or
add
push
mov
jmp
subb
cmp
test
mov
lods
and
leave
add
and
xchg
aaa
jmp
mov
test
lea
mov
add
pusha
adc
add
jge
push
cmp
xchg
sbb
out
add
or
out
xlat
add
jmp
sbb
mov
shrl
add
xor
leave
std
sub
stc
stc
pop
shr
iret
jmp
and
inc
movsl
push
push
xor
mov
cmp
xor
and
sbb
das
jmp
jae
jns
aas
pop
sbb
mov
imul
adc
cld
push
push
and
and
or
jb
mov
cmp
push
pop
inc
dec
jns
inc
cmp
mov
push
cwtl
cmp
pushf
in
add
mov
or
icebp
add
fmuls
add
jb
sbb
mov
or
push
push
and
xor
mov
aaa
inc
sarl
sbb
cld
or
adcl
scas
fwait
insb
inc
loope
pop
dec
pop
cmc
xor
std
or
imul
adc
mov
cmc
pop
or
mov
xorb
add
xchg
mov
pushf
sbb
and
rorb
inc
pushf
loopne
adc
mov
lea
jo
mov
and
pop
sub
sti
or
sbb
jno
dec
pop
fdivr
sub
xchg
or
and
scas
xor
roll
xor
cltd
or
lods
fidivrl
and
xchg
and
lock
xor
push
nop
ja
fwait
int
popf
test
cs
rcll
sub
or
imul
stos
jp
dec
roll
test
movsl
notl
jne
adc
popf
inc
sub
jo
xchg
mov
mov
push
imul
jbe
inc
and
pop
mov
add
repnz
cmp
int3
pop
icebp
push
fldenv
xchg
cltd
dec
xchg
mov
sub
shl
or
lock
jno
xchg
add
ds
add
loop
sbb
push
dec
divl
dec
dec
mov
iret
push
cmc
iret
add
adc
test
imul
jmp
fdivp
icebp
movaps
rcl
inc
in
lret
arpl
cwtl
cld
sub
cld
or
idiv
out
ss
shll
scas
out
aaa
sub
test
cld
sub
cmp
mov
lock
loopne
shlb
in
add
add
pop
lahf
push
jbe
lahf
lcall
daa
subb
cmpsl
shl
push
aad
leave
cmp
je
pop
or
sbb
stc
xchg
adc
stc
scas
adc
stc
adc
stc
rclb
loop
ficoms
fdivrp
ljmp
clc
add
dec
or
adc
repz
and
sub
fildl
xlat
inc
inc
jle
inc
push
jle
inc
pop
jle
inc
push
jle
inc
cmpb
xchg
jle
inc
lret
es
mov
movsb
sbbl
movsl
ficompl
or
repnz
adc
or
stc
jge
mov
xchg
std
jge
jl
lahf
out
ffree
out
stc
or
push
and
dec
cmp
push
js
inc
test
sahf
jle
inc
int
xor
jmp
adc
shlb
lahf
lea
sbbb
xchg
shll
fxch
in
es
ret
pop
fldt
xchg
and
mov
sub
pop
or
jbe
movsb
jle
xchg
cwtl
jle
xchg
lea
xchg
hlt
jle
xchg
fstps
fisubrl
popf
sbb
testl
lahf
bound
lahf
je
inc
lahf
xchg
lahf
stos
jbe
lahf
mov
cmp
fxch
aaa
cmc
in
add
test
push
or
sar
rcl
flds
movsb
leave
push
repz
pop
repz
ja
push
jae
in
aam
notb
xabort
fmull
je
dec
push
js
inc
xor
inc
jle
inc
outsl
dec
push
iret
movsl
es
ret
iret
jecxz
mov
fbld
xchg
sub
mov
sub
test
stos
repz
sbb
repz
fpatan
in
sbb
lock
xor
adc
sbb
hlt
dec
adc
jno
mov
cld
out
adc
add
cmp
add
aas
outsb
add
aas
xor
add
stc
jae
stos
stc
push
inc
jbe
pop
push
jbe
lahf
outsb
jbe
lahf
mov
lahf
movsb
jbe
lahf
mov
xchg
shll
lahf
jecxz
lahf
cmc
outsb
cmp
or
sub
test
aas
hlt
mov
movb
sub
aam
xor
icebp
cld
pop
movb
shrb
cmp
sarb
ds
mov
enter
lcall
es
icebp
xor
mov
add
sbb
push
cmp
inc
cmp
lods
cmpsl
test
mov
stos
shll
push
ret
in
test
jb
popf
lock
adc
xchg
sbb
les
hlt
je
mov
jmp
push
cwtl
test
cmpsl
ret
pop
jmp
adc
ret
jg
fmulp
call
sahf
test
push
mov
add
jl
mov
stc
stos
aaa
cmp
popa
mov
sarb
fsub
stc
sbb
cmp
or
loopne
mov
pop
pop
jb
popf
ja
push
xchg
lds
xlat
mov
sahf
cld
in
aas
aas
xor
push
inc
sbbl
or
cmp
add
movsb
testl
inc
add
jp
js
mov
jmp
call
fstpl
cmp
int
repnz
push
into
push
add
dec
jg
mov
loopne
daa
mov
fldt
aaa
es
fadds
jb
popf
arpl
xchg
push
jp
xchg
mov
sahf
aas
and
adc
mov
mov
lret
dec
sbbb
inc
pop
jp
leave
rorl
fldlg2
lock
in
cltd
pop
mov
stc
ja
insl
jae
mov
adc
clc
adc
dec
cmp
pop
pop
mov
jecxz
sbb
push
addr16
mov
cwtl
out
fisubrs
je
sahf
call
std
sbb
add
fwait
push
pushf
jle
lret
jns
push
ret
cmp
xor
xor
test
xor
std
outsb
sbb
out
in
test
mov
sub
repz
sbb
lock
outsb
add
hlt
lret
es
ficomps
ja
push
xchg
jbe
pop
enter
or
sbb
inc
scas
mov
cmpsl
mov
fidivs
jl
nop
fxch
or
jmp
or
sub
loope
int
mov
jb
dec
and
ret
inc
xor
xchg
cltd
jo
cmp
pop
cmc
push
je
xchg
daa
jl
imul
lahf
jns
xchg
lahf
jno
pushf
lahf
dec
movsl
movsb
lahf
inc
movsl
lods
lahf
pop
movsl
mov
push
movsl
mov
lahf
and
aam
xor
jle
es
iret
lock
lret
clc
mov
or
sub
adc
xor
iret
and
adc
sub
or
xor
scas
cmp
test
fisttpll
fstl
fstpl
lcall
adc
inc
push
xchg
add
nop
sub
sbbb
cltd
mov
adc
loope
shll
xor
test
add
repz
mov
add
xchg
sub
mov
mov
pop
pop
push
mov
pop
push
mov
pop
xchg
mov
mov
mov
popl
xchg
xchg
add
xchg
mov
mov
mov
mov
sub
mov
mov
pop
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
push
mov
pop
xchg
xchg
movl
sub
mov
mov
pop
sub
mov
mov
pop
xchg
xchg
mov
mov
mov
mov
xchg
call
xchg
mov
mov
mov
mov
sub
mov
mov
pop
xchg
call
inc
incl
cmp
jne
mov
inc
cmp
jne
mov
mov
add
add
jmp
jmp
mov
lea
mov
xorl
add
cmp
jb
jmp
pop
sub
mov
jmp
mov
add
mov
subl
mov
ret
call
mov
mov
mov
sub
mov
mov
pop
sub
mov
push
mov
pop
xchg
addl
xchg
mov
mov
mov
pushl
mov
mov
mov
mov
mov
mov
sub
mov
push
pop
pop
sub
mov
mov
pop
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
pop
mov
mov
mov
decw
sub
mov
mov
pop
sub
mov
mov
pop
sub
movl
xchg
mov
mov
mov
call
dec
rolb
add
add
rolb
add
add
add
rolb
add
add
add
pushl
add
add
add
dec
rolb
add
add
rolb
add
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
fiadds
inc
gs
gs
imul
js
je
jb
arpl
jae
imul
gs
xor
cs
insb
add
stc
and
mov
roll
cld
push
clc
push
add
xor
pop
dec
mov
clc
sbbb
add
adc
add
jb
movsb
call
stc
and
lock
inc
jb
pop
cmp
cld
inc
add
add
add
add
lahf
push
xchg
add
jb
inc
add
das
cmp
ss
shlb
jb
jo
lcall
clc
push
add
xor
pop
dec
cli
inc
add
hlt
js
jb
push
shlb
jb
jo
lcall
clc
push
add
xor
pop
dec
mov
ss
lea
imul
lret
push
add
jb
movsb
pop
icebp
mov
pop
fwait
iret
jp
lea
add
add
jb
add
jb
add
jb
xor
inc
inc
ss
dec
dec
xor
inc
inc
xor
inc
inc
cmp
inc
inc
xor
inc
inc
ss
dec
dec
xor
inc
inc
xor
inc
inc
cmp
jb
push
xor
cmp
push
cmp
add
jb
xor
push
inc
gs
gs
daa
jb
adc
fs
jae
jb
push
xor
and
push
add
xor
insb
outsl
adc
push
inc
gs
imul
xor
pop
ja
push
sbb
push
jb
add
push
ja
push
mov
addb
add
adc
cmp
add
sub
cltd
test
add
cmc
shll
ja
inc
roll
lahf
add
mov
push
sahf
shll
ja
inc
roll
lahf
dec
add
mov
push
mov
xor
inc
roll
lahf
aaa
add
mov
push
ret
ja
inc
roll
lahf
pop
add
mov
push
iret
shll
ja
inc
roll
lahf
pop
add
mov
mov
mov
and
push
push
and
jne
adc
ds
sub
jg
ja
add
cmpl
pop
add
add
xor
sbb
iret
pop
cmp
and
add
cld
pop
and
or
mov
cmp
movq
cmpsb
pop
jb
les
or
mov
inc
dec
xor
inc
sbb
jne
xor
add
push
mov
inc
movsl
mul
sub
xor
or
add
jb
mov
test
mov
inc
or
sub
pop
sub
ret
cld
push
clc
push
xor
jb
mov
cld
inc
or
in
add
xor
pop
push
or
xor
add
jmp
lea
jmp
mov
push
mov
inc
cld
and
add
push
add
xor
jmp
mov
mov
adc
mov
jnp
inc
jle
lcall
outsl
jne
mov
sbb
ds
add
and
add
cwtl
mov
stc
and
orl
add
jb
addb
aaa
add
xor
roll
cld
push
clc
sti
cmc
pop
shll
ja
mov
inc
add
lea
jno
adc
cmp
add
jb
je
push
mov
add
push
inc
roll
mov
mov
clc
sub
inc
jb
sbb
lds
xor
xchg
call
jno
push
mov
add
hlt
roll
jmp
icebp
mov
jmp
mov
push
clc
icebp
or
push
dec
mov
hlt
jmp
orl
inc
push
jp
mov
adc
jecxz
inc
adc
adc
decl
in
add
xor
push
jge
rolb
jbe
dec
cmp
mov
inc
cmp
xor
add
add
jb
add
idiv
pop
aaa
jbe
jb
sbb
add
sbb
add
add
loopne
roll
cld
push
clc
sti
cmc
push
shll
ja
push
mov
add
jb
call
xorl
mov
mov
and
inc
jb
add
jno
rep
sbb
add
add
jno
pushl
in
shll
ja
push
mov
mov
push
sub
shl
fcmovnbe
les
call
add
add
jb
sbb
mov
pop
add
jae
shll
bound
adc
add
aam
aas
ja
add
jne
lcall
lods
mov
mov
shl
fucomi
sub
ja
cmp
add
cld
ja
push
orl
xchg
mov
subb
adc
shlb
std
push
inc
bound
call
adc
mov
mov
jl
pop
jl
outsb
push
ret
