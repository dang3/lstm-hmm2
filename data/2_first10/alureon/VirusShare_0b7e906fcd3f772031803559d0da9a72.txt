push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
mov
lods
mov
xor
mov
stos
mov
sub
sub
rorl
sub
dec
mov
jne
pop
pop
pop
ret
push
lea
sub
push
push
xor
push
mov
mov
mov
call
mov
mov
cmp
je
mov
jmp
push
mov
call
lea
push
mov
push
mov
call
lea
push
mov
mov
call
lea
push
lea
push
mov
mov
call
pop
pop
mov
call
lea
push
call
lea
push
lea
push
call
pop
pop
push
mov
call
cmp
je
cmpl
jne
mov
call
cmp
jne
push
push
push
push
push
push
push
mov
call
mov
mov
mov
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
mov
mov
add
push
mov
call
push
call
push
push
push
pushl
call
add
mov
cmp
je
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
add
leave
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
mov
jmp
lea
mov
mov
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
lea
mov
mov
dec
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
mov
mov
push
mov
push
add
push
lea
lea
pop
call
push
push
lea
push
call
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
add
and
add
mov
mov
movl
mov
mov
lea
call
mov
mov
add
xor
add
decl
jne
addl
pop
pop
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
inc
dec
jne
pop
mov
ret
xor
ret
push
mov
sub
push
push
push
push
xor
lea
push
push
mov
call
add
xor
movzbl
push
mov
call
inc
pop
cmp
jb
lea
push
mov
mov
movb
mov
movb
mov
call
mov
lea
push
call
add
pop
pop
cmp
je
xor
inc
jmp
push
push
push
mov
call
mov
cmp
je
cmp
jne
testl
je
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
je
push
push
mov
push
mov
push
call
push
mov
call
jmp
push
push
push
push
push
mov
call
test
je
pushl
mov
call
xor
pop
pop
pop
leave
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
mov
pop
push
rdtsc
mov
mov
test
jne
movl
jmp
mov
not
xor
ror
not
mov
movzbl
lea
cmpb
jne
push
push
pushl
movb
call
mov
push
call
push
push
pushl
mov
call
mov
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
inc
pop
leave
ret
cmp
cmc
cmp
add
add
movsl
scas
push
stos
into
fs
dec
outsb
outsb
lds
out
int3
pushl
cmp
test
ljmp
jge
lahf
sbb
sub
negb
mov
cmc
xor
sub
sti
pop
ret
mov
enter
inc
inc
ljmp
jno
rcr
lds
cli
fisubrl
fucom
rdmsr
popf
xchg
mov
dec
fdivrl
in
xor
cmp
mov
pop
jne
adc
jae
push
jae
test
dec
test
add
xchg
rclb
scas
cltd
test
push
cltd
cmp
or
fdivrs
sbb
sub
int
outsl
push
cmpsl
xchg
nop
and
jp
sub
push
outsb
fs
xchg
xchg
mov
into
push
dec
xchg
out
rcpps
scas
mov
sbb
push
mov
insl
push
jnp
sbb
inc
ja
inc
mov
xor
and
and
and
push
imul
pop
out
mov
mov
mov
shll
sti
jnp
int
or
and
push
and
cwtl
out
xchg
rorl
out
jne
cld
shrl
adc
cmp
and
aam
cmp
xchg
ret
pop
cmc
mov
jb
xchg
iret
cmpsl
add
addr16
icebp
ret
cmp
adc
insl
mov
xchg
or
mov
push
fbstp
movsb
inc
mov
jl
push
pop
mov
lea
test
fnsave
jno
cmp
fldl
xchg
inc
sub
inc
lods
imul
aaa
pop
jnp
aad
xchg
mov
out
mov
sub
mulb
xchg
imul
push
leave
xor
add
pop
sbb
shl
mov
fadd
sub
fiaddl
hlt
outsb
scas
jno
mov
and
push
jle
ret
cmpsb
pop
xor
insb
sbb
daa
push
push
cs
sbb
addr16
dec
ret
inc
mov
cmp
and
cmpb
mov
lods
xor
push
and
fsubrl
scas
lods
fs
xchg
and
int
in
and
lock
push
add
pop
cmpsl
les
imul
inc
flds
or
lds
in
push
xor
mov
pop
std
imul
iret
mov
cmc
insl
nop
jae
pop
setl
fwait
lret
les
sbb
insb
in
xlat
cltd
scas
daa
add
dec
movsl
repnz
mov
mov
fs
hlt
xchg
jo
pop
stc
aad
ja
and
loopne
inc
cmc
imul
stos
test
test
add
cltd
pop
pop
lea
mov
mov
shrl
dec
cmp
dec
and
clc
lret
mov
push
jno
sti
cmp
or
adc
xchg
add
push
jnp
gs
fmulp
or
add
ficoml
adc
loopne
cmc
sbb
sti
mov
mov
mov
inc
add
out
pop
leave
adc
dec
jecxz
pop
and
stc
sbb
call
cltd
mov
pop
adc
in
cmp
xor
push
add
dec
adc
inc
sub
mov
mov
dec
dec
mov
mov
popa
or
mov
lds
dec
add
fwait
lcall
pop
arpl
sub
or
mov
adc
sub
je
mov
leave
imul
adc
cmpsl
xchg
sub
sarb
imul
xchg
mov
sbb
leave
fldt
mov
pop
jmp
les
xchg
loope
sub
flds
xchg
bound
xchg
xchg
push
xchg
mov
and
jl
data16
fiaddl
in
scas
bound
mov
out
popa
mov
cmpl
pop
enter
xor
stos
enter
jno
lods
iret
fs
dec
mov
stc
jl
mov
sub
dec
dec
add
fwait
je
clc
iret
cwtd
cld
add
pop
stos
dec
cs
jge
push
orl
pop
adc
das
pop
mov
pop
adc
test
imul
mov
inc
ljmp
jecxz
inc
push
push
idivb
inc
dec
cmp
leave
arpl
sbb
outsl
pop
push
fbstp
and
push
jbe
xchg
test
int
cmp
int3
add
mov
test
lahf
pop
inc
cwtl
outsl
scas
or
test
dec
push
and
adc
mov
cmp
xchg
inc
mov
test
shl
mov
inc
mov
loope
mov
js
inc
imul
sbb
lcall
and
repz
jmp
mov
in
cmp
out
push
mov
test
aas
ljmp
and
pop
xchg
and
dec
fldl
and
lods
xor
sub
adc
enter
nop
ret
and
mov
inc
ficompl
xchg
shlb
stos
in
xor
mov
out
out
sub
movsb
push
rolb
pop
insl
rol
inc
es
mov
cmpl
shll
jecxz
dec
jg
jp
arpl
mov
xor
in
add
cmp
push
call
mov
cmp
in
ror
and
pop
and
mov
inc
out
sub
sub
mov
dec
in
mov
out
ja
pop
adc
stos
mov
maskmovq
negl
sbb
outsb
repz
add
jle
ret
mov
inc
loope
push
imul
cli
lret
ret
sarb
xchg
pop
xlat
in
mov
xchg
jbe
rol
mov
mov
sbb
mov
xchg
jg
ljmp
insl
icebp
aad
mov
out
push
js
adc
and
sub
test
add
movsl
shr
ds
out
inc
lcall
lret
mov
push
lods
sub
ljmp
shll
scas
lcall
xchg
in
pushl
out
lea
jbe
pop
stos
lret
cmp
and
and
mov
test
mov
in
sub
inc
ds
dec
subl
pop
je
mov
xorb
iret
or
lods
movb
aas
lahf
pop
mov
sahf
pop
movsb
lcall
xchg
lds
aad
pop
pop
dec
dec
mov
jmp
pop
icebp
test
push
pop
mov
inc
xor
jae
push
imulb
out
push
clc
cmpsl
xlat
mov
imul
lods
repnz
dec
jb
xchg
pop
fs
and
shrl
loope
xor
push
jmp
pop
cmp
jnp
sub
iret
pop
sbb
int
xchg
jns
je
adc
lods
fldcw
out
mov
enter
pushf
decb
inc
scas
or
loop
mov
jne
sbbb
adc
sub
inc
xchg
sub
mov
sub
sub
lods
out
pusha
shrl
pop
adc
jle
push
insb
test
and
les
add
pop
das
cmp
movsb
repz
pop
push
cmp
shrl
int
push
pop
ret
mov
xchg
adc
loope
mov
sub
push
mov
adc
aaa
cli
mov
xor
pop
jae
leave
push
dec
dec
test
stc
mov
mov
push
aas
ret
insl
dec
int3
lds
mov
cmp
xchg
faddl
dec
mov
imul
pop
mov
dec
out
sbb
dec
sbb
pop
dec
das
out
dec
es
dec
pop
sarb
mov
inc
xchg
fsubr
sbb
mov
sub
scas
in
inc
push
push
fidivl
ds
arpl
mov
dec
lret
push
mov
lods
stos
xchg
pop
roll
inc
movsl
rcrl
inc
xchg
fiadds
dec
cs
ss
cmp
lea
pop
fucom
push
bound
cmp
sarl
dec
dec
adc
xchg
inc
mov
xor
pop
mov
test
out
push
cmp
jbe
fadd
ss
lahf
imul
and
sbb
ljmp
jmp
loopne,pt
mov
movsb
jne
pop
sti
cli
sub
arpl
mov
out
and
adc
aad
push
movsl
sbb
jns
pop
jge
inc
data16
out
pusha
or
out
lahf
inc
dec
test
and
shl
sahf
dec
call
xchg
pop
orl
les
es
pop
pushf
in
xchg
lret
pop
insb
insl
mov
mov
mov
pusha
sbb
data16
out
jbe
xor
fs
fidivl
dec
outsb
cmp
scas
ja
je
xor
sbb
gs
cli
test
add
lods
mov
imul
imul
roll
movsb
lea
movsb
cmp
call
stc
pop
push
push
cmpsl
sbb
aaa
pop
lea
xchg
dec
mov
push
mov
push
xchg
xchg
inc
adc
mov
in
popf
sbb
and
xchg
aas
and
add
clc
adc
fsubrp
ret
pop
stc
jmp
in
je
inc
loopne
mov
and
adc
addr16
push
mov
cli
out
outsb
sahf
cmpl
jmp
xor
out
pop
stc
xor
loop,pt
add
mov
nop
sub
jb
decb
ja
aas
or
and
sbb
inc
mov
test
cmp
aad
ret
data16
push
outsb
mov
decl
and
stos
aad
fwait
insl
lods
std
nop
dec
test
rcrl
sub
mov
in
sahf
adc
jg
sub
icebp
stos
and
sub
lret
fwait
in
xlat
ret
mov
sbb
jle
mov
push
add
test
int3
sbb
mov
outsl
movsb
nop
push
ss
jecxz
inc
jo
aaa
repnz
lcall
xor
aam
pop
pop
lds
inc
xchg
push
cmc
cmp
mov
dec
cs
and
sub
loop
and
fadds
rclb
mov
adc
adc
popa
pop
imul
sbb
sbb
into
adc
jecxz
mov
mov
imul
sti
lea
lcall
leave
mov
mov
imul
call
outsb
aad
xchg
imul
and
mov
test
push
test
int3
je
jecxz
jbe
notb
aaa
xchg
push
dec
test
lahf
pop
sar
mov
popf
std
push
jbe
cli
push
dec
mov
push
outsb
add
dec
int3
mov
dec
jno
stc
sbb
mov
stos
test
pop
push
mov
ret
dec
push
pop
cld
xor
sub
mov
arpl
cmp
sbb
enter
jo
out
push
mov
test
andb
mov
or
jne
pop
loope
adc
cltd
or
xchg
ficoms
insl
inc
xchg
stos
or
lret
inc
sbb
jge
js
sbbb
pop
xor
leave
lret
sub
push
out
lcall
dec
dec
testb
and
loopne
dec
and
call
fcomps
jae
xchg
dec
fdivrs
outsb
cs
out
into
cmpsb
rorl
cmp
push
dec
das
mov
xor
sbb
stc
arpl
out
ds
push
test
rclb
mov
inc
aad
out
dec
add
mov
adc
sbb
cmpsl
in
lret
lods
addl
dec
test
sbb
xchg
adc
fimull
andl
outsl
decb
xchg
push
jno
mov
sbbl
and
test
or
fwait
ljmp
repnz
fidivl
xor
xor
xor
push
pop
nop
jge
daa
mov
out
lods
fcomps
lds
adc
sub
test
enter
mull
test
js
inc
aas
mov
mov
or
mov
mov
jge
xchg
mov
mov
int
jmp
sti
inc
mov
or
mov
mov
int
pop
sub
jnp
cmp
mov
fwait
std
and
mov
mov
push
lahf
inc
jg
pop
fists
inc
cmp
jmp
in
sub
testl
daa
mov
pusha
mov
cli
jns
test
and
xchg
cmovb
test
test
pop
int
mov
push
inc
and
cmp
xor
loop
int
imul
adc
stc
lds
popa
add
dec
mov
test
shrb
lcall
mov
fistpll
pop
pop
push
scas
jno
in
testb
out
pusha
inc
aas
mov
jo
inc
imul
int3
adc
push
mov
push
xchg
mov
inc
out
xor
loop
insl
or
xchg
adc
into
mov
pop
loope
xor
and
lahf
mov
call
dec
push
pop
push
dec
leave
in
cmpsb
and
xchg
insb
es
mov
icebp
fisubrl
stos
enter
lock
mov
mov
outsl
cmpb
gs
mov
outsl
dec
outsl
fisubl
pop
insb
out
cltd
xor
test
das
or
mov
movsb
jb
or
inc
out
or
fidivrs
loop
inc
push
mov
dec
jp
jbe
test
mov
aaa
mov
add
das
sbb
mov
aaa
in
sub
std
ret
stos
mov
inc
int3
mov
inc
in
pop
imul
out
out
in
fwait
addr16
inc
adc
pushf
add
xor
ds
imul
and
fwait
pushf
inc
xor
ja
insb
xchg
fidivrs
or
xchg
scas
leave
sub
pop
dec
dec
sub
xor
pop
out
sub
push
int
arpl
stos
push
mov
cmc
mov
push
push
add
arpl
testl
int3
xchg
xor
pop
enter
mov
stos
test
pop
lds
push
jge
ja
or
pop
sti
pushf
fdivrs
mov
xchg
test
sbb
push
pop
cltd
aam
nop
jbe
xchg
outsb
cmp
into
movsl
int
in
pop
ss
xchg
push
out
mov
ljmp
xchg
mov
xchg
mov
mov
cmpsb
aaa
cmc
and
pop
idivb
adc
pusha
and
pop
repz
loop
lahf
fdivrs
lret
pop
push
dec
in
fadds
dec
mov
fs
mov
mov
ja
orb
sub
cmpsl
mov
push
cmpsl
push
xchg
push
cld
sti
pop
test
jl,pt
dec
ss
lock
jmp
push
and
cmp
push
aad
sub
and
xor
xchg
in
mov
xor
mov
pushf
sarb
insb
push
cs
inc
leave
bswap
outsl
push
loope
cmp
cltd
sub
dec
ret
add
jne
jecxz
call
cmpsl
lea
push
sbb
mov
inc
test
xchg
cmp
inc
addr16
sub
sub
imul
pop
test
or
test
dec
mov
aas
mov
cmp
cmc
fmul
imul
repnz
leave
mov
mov
in
fcoms
mov
fnstenv
adc
jns
rcrl
and
jns
jl
push
adc
sbb
scas
cli
int
mov
lcall
mov
and
sub
stos
xorb
das
insl
and
addr16
lods
pop
cmp
mov
xchg
mov
test
inc
pop
sub
insb
cmp
push
adc
mov
cltd
icebp
arpl
mov
and
pop
lret
sbb
sbb
cmc
dec
cmc
pop
jg
sub
iret
es
sbb
mov
jmp
fsincos
inc
push
popa
jp
js
mov
sbb
iret
fsubp
dec
push
mov
push
imul
dec
lods
lock
jno
data16
jae
adc
or
imul
mov
out
jns
pop
addr16
pop
pop
cmp
int3
xlat
push
pop
sub
inc
leave
adc
adcb
mov
cwtl
mov
mov
mulb
mov
push
push
jno
cmp
arpl
xlat
loope
fnsave
es
sbb
int
sbb
jne
lods
outsl
je
mov
add
jmp
mov
jmp
pusha
and
stos
xorl
lret
jns
cmpsb
add
add
ficoml
jns
fdivrs
jb
add
outsl
push
sbb
mov
dec
sub
dec
rcrl
push
ss
jmp
insl
sti
or
cli
push
sbb
repnz
ret
stos
test
mov
jmp
das
pop
fsubl
xchg
jmp
stos
icebp
outsl
inc
andb
pop
sahf
cmp
sbb
mov
lods
sub
jb
lds
add
lcall
mov
mov
data16
xchg
icebp
xchg
rcrl
ljmp
or
adc
popa
stc
sbb
clc
inc
idivb
add
mov
int3
add
xchg
test
mov
xchg
mov
pop
jg
push
adc
sbb
ss
outsb
push
mov
xor
loopne
dec
sbb
push
movsl
pop
push
arpl
cltd
or
jo
ss
mov
cmp
add
les
loopne
mov
or
cmp
mov
arpl
push
pop
sahf
jmp
outsb
xlat
cmp
aaa
push
dec
push
mov
mov
xchg
push
dec
enter
sbb
xchg
ljmp
ret
cwtl
cmpsl
push
jmp
xchg
mov
and
jae
add
mov
repz
mov
and
loope
int3
mov
mov
dec
mov
das
leave
add
or
cmpsl
xor
mov
push
repz
jb
jne
and
pop
enter
add
or
xor
aad
xchg
add
test
jle
mov
shl
jae
mov
adc
sbb
mov
add
decb
or
js
loop
jecxz
push
or
in
mov
cmp
push
test
jecxz
mov
sub
and
fsubrl
mov
bound
cmc
sbb
out
mov
and
mov
adcl
push
jge
out
sbb
inc
jb
fsubl
test
mov
lcall
pusha
pop
push
cmp
push
lock
lock
push
movsb
test
lcall
and
adc
jmp
imul
xor
daa
adcl
sub
push
test
sub
adc
cmp
pop
cmp
movsb
mov
or
mov
pusha
cmp
push
xchg
mov
cmp
push
aaa
adc
testb
mov
or
pushf
push
jg
aas
int
leave
jp
popa
int3
stos
into
movsl
out
sbb
jnp
adc
mov
xchg
lret
rolb
adc
jl
aas
cltd
insb
jnp
pushf
or
jl
rorb
dec
or
xchg
xlat
movsl
cmpsb
mov
or
loope
fwait
xchg
or
push
pop
repz
loopne
fstpl
inc
mov
cmp
push
icebp
test
add
add
mov
jbe
push
rolb
push
sub
insl
xchg
imul
in
and
enter
scas
ja
and
add
xor
xor
mov
mov
sti
aaa
push
insb
push
or
outsl
movsl
mov
push
lods
cmc
int
xor
call
cmc
cmpsl
test
xchg
pop
mov
cmc
mov
cmp
ljmp
testb
bound
mov
sbb
es
jp
in
or
loop
xor
jle
cmpsb
cmp
xor
jl
repz
fistpll
push
in
xor
pop
mov
xor
les
xchg
mov
pusha
imul
or
adcl
incl
outsb
xchg
jp
jno
mov
or
push
mov
cmp
inc
addl
pusha
sahf
xchg
fwait
out
xor
and
ficoms
pop
sub
aam
sahf
nop
aam
repz
sub
mov
and
and
ss
xchg
jmp
aad
jp
sub
lahf
and
dec
loopne
adc
push
mov
cmp
ret
pushf
jbe
sub
pop
ds
pop
std
sahf
insb
pop
daa
subl
add
idivl
lcall
xchg
mov
mov
btc
rcrl
sbb
ret
adc
ss
mov
les
mov
rcr
dec
lds
and
push
and
sub
aas
in
ffreep
ja
popf
fisubs
jns
insb
push
cmp
push
jno
cmpsb
xchg
add
xlat
stos
cs
out
push
push
jne
or
scas
and
in
aas
cld
loopne
pop
into
sti
mov
leave
imul
outsb
mov
dec
adcb
insb
xchg
insb
int
mov
movsl
or
in
or
inc
dec
mov
mov
fucomip
xchg
cmp
push
cmpl
shlb
pop
fmull
lock
xor
arpl
aad
loope
dec
outsl
push
fcmovnbe
cmp
and
sbb
pop
test
push
outsb
test
stos
pop
sbb
sub
hlt
inc
pop
fbld
xchg
pusha
pop
orl
add
data16
icebp
xor
es
inc
mov
pop
lds
ret
jno
push
and
les
and
ss
sbb
pop
mov
xlat
or
std
rclb
icebp
and
xor
scas
adc
loop
ss
fidivl
fldt
test
popf
adc
push
xchg
mov
push
push
fwait
xchg
push
inc
icebp
gs
outsb
xor
pop
jo
inc
xorb
jo
stos
out
dec
push
add
pop
je
iret
jmp
and
xchg
addb
pop
dec
xor
lcall
sbb
mov
lret
mov
ret
sbb
sub
cmp
pop
pop
xor
bound
mov
xchg
mov
mov
push
xor
adc
pop
insb
adc
subb
and
push
imul
stos
ds
mov
mov
test
and
icebp
out
jno
lcall
outsl
mov
fstps
xor
push
mov
test
in
xor
cmpl
icebp
js
xor
push
add
jmp
inc
stos
mov
sub
xchg
clc
jmp
pop
int
loopne
stc
sti
jle
iret
outsl
enter
fs
sbb
mov
test
cmp
bound
cmp
les
mov
test
adc
test
cmc
imul
cmp
inc
sbb
sub
andb
enter
and
inc
jae
test
or
les
xor
xchg
pop
cmp
mov
dec
push
dec
jge
dec
test
mov
sub
pop
loop
enter
dec
lea
adc
push
sar
or
sbb
jle
jp
push
dec
ret
js
or
mov
shr
loop
sub
sarl
adc
add
mov
fnstenv
icebp
clc
sbb
push
push
and
std
mov
mov
aad
mov
push
sbbl
xchg
ss
mov
lahf
xchg
lds
or
and
inc
sahf
jns
arpl
push
cmpb
push
repz
xor
inc
xchg
fdivs
lock
fists
cmp
lahf
inc
stos
xchg
jmp
cmp
in
xchg
pop
mov
lcall
jp
cmp
inc
or
inc
dec
fisttpl
icebp
aas
xor
sbb
mov
fmuls
stc
test
and
sub
cmp
jbe
leave
pop
mov
repnz
insb
daa
xor
sbb
in
xor
repz
loopne
mov
test
add
test
xor
push
cltd
sub
cmp
jno
jmp
sar
dec
sbb
enter
pushf
jae
rcll
mov
rclb
mov
enter
stos
mov
xchg
subb
sub
aas
hlt
scas
inc
pop
lret
test
adc
test
and
mov
fisubl
pop
mov
xchg
and
into
sbb
call
xchg
cltd
inc
lret
cld
das
popa
call
fdivrs
inc
pop
out
xchg
xor
add
add
mov
fwait
in
jne
xchg
push
insl
sbb
das
mov
sub
xor
pop
cmc
fidivl
cmpsb
loop
push
xor
and
mov
loop
xor
sbb
push
jb
mov
imul
pop
dec
dec
int3
out
aaa
mov
outsb
call
data16
and
jo
xor
mov
push
pop
mov
inc
cltd
mov
mov
into
pusha
mov
int3
fisttpl
mov
aas
enter
mov
and
mov
cmpsb
or
xor
test
push
leave
shr
pusha
loopne
xchg
leave
and
add
cvtpi2ps
dec
int3
sbb
cmp
or
das
cmpsb
and
iret
mov
int3
call
sbb
and
push
dec
popf
aad
mov
mov
add
adc
mov
dec
jle
sarb
les
lods
adc
daa
icebp
std
inc
cs
out
movsb
loope
and
mov
sbb
adc
xor
aas
push
jle
mov
adc
insl
addb
push
sbb
jb
aaa
daa
ljmp
or
jae
sub
mov
pusha
loope
sbb
popa
mov
fisttps
sub
nop
adc
xor
pusha
mov
aas
les
xor
inc
xor
fimuls
fs
sti
jnp
lahf
mulb
enter
push
imul
and
sub
imul
shlb
or
pop
andl
lcall
pop
push
in
mov
pop
lock
push
flds
pop
ja
and
push
adc
add
xchg
push
xchg
testb
or
mov
or
mov
mov
xchg
and
mov
gs
adc
rcrb
aas
and
incl
sub
push
and
cli
repz
ds
stos
jmp
addr16
pop
ja
xchg
out
loope
cmp
int
mov
dec
das
sti
mov
lcall
fadds
jns
das
xchg
aad
push
lock
mov
lahf
adc
cmp
add
jae
mov
test
ficoml
dec
mov
and
sub
in
inc
cmp
xchg
pop
dec
outsl
je
add
xor
add
sub
adc
divb
fwait
inc
out
or
pop
sbb
push
inc
sub
sbbb
mov
das
sbb
out
sub
dec
pop
cmp
xchg
inc
dec
cmp
pop
mov
popa
mov
das
shlb
ds
or
mov
in
int
xchg
popf
sbb
jnp
sbb
mov
imul
lret
fsubp
or
mov
xor
xchg
gs
mov
aam
stc
xchg
xorb
loopne
decl
xchg
cmp
adc
loopne
cmp
jg
mov
or
mov
xor
and
dec
and
add
sub
and
inc
rorb
bound
pop
in
shl
nopl
in
cwtl
or
lcall
sbb
ret
mov
dec
cmpsl
sar
dec
testb
xchg
nop
push
orl
mov
push
dec
add
lock
rclb
mov
mov
mov
aam
ss
into
mov
or
dec
mov
mov
xor
mov
inc
dec
and
dec
fsts
cltd
mov
sub
ljmp
notb
push
xor
pop
xor
jae
test
sbb
in
adc
ja
mov
cmp
gs
mov
cmp
les
test
cli
fwait
adc
and
mov
xor
mov
add
fisttps
incb
jo
loope
add
testb
stc
dec
shll
pusha
xor
sub
add
and
loop
iret
jo
mov
mov
sbb
adc
jb
jg
loope
dec
scas
mov
xchg
mov
mov
add
in
jecxz
and
xlat
mov
fwait
cmp
cmpsb
inc
pop
mov
nop
pop
push
and
out
ss
out
es
fstps
rclb
scas
bound
xor
nop
push
inc
in
mov
test
mov
mov
sbb
pop
js
enter
mov
inc
ja
loop
stc
outsb
daa
pop
inc
in
insl
das
test
and
outsl
pop
mov
jl
nop
in
sub
in
cmp
popf
rcr
push
std
mov
movsl
testb
pop
idivl
sub
shll
rorb
pop
add
cmpsb
inc
mov
mov
add
pop
sahf
or
divl
pop
and
cld
mov
ret
jb
sub
addr16
aad
xchg
shrl
rorl
add
stos
sub
in
jns
fwait
and
mov
push
cmpsb
int3
pusha
cmp
and
fbstp
add
inc
pop
jecxz
cmp
ja
and
iret
lea
pop
mov
or
gs
arpl
mov
in
aaa
cltd
orb
inc
cmpsl
xor
testb
imulb
fmuls
fsubp
int3
push
es
jecxz
mov
inc
xor
sarb
fimuls
push
mov
mov
mov
push
push
movsl
inc
dec
or
cmp
cwtl
mov
fnsave
pop
adc
sub
and
mov
cmp
and
cmp
sub
pop
mov
push
fwait
addr16
subl
movsb
aaa
packuswb
cmp
pop
dec
out
and
sub
or
repnz
and
mov
mov
repz
xor
dec
sub
cmp
ja
mov
cmp
xchg
enter
std
fwait
in
lret
mov
push
xor
cmp
insb
and
enter
cmc
jno
fcomps
ret
fidivl
je
neg
jo
pusha
or
mov
fwait
sahf
mov
jbe
je
add
xor
sub
in
mov
into
adc
mov
xor
dec
stc
jge
jnp
or
pushf
shrb
push
sbb
add
dec
mov
fistpll
cmpsb
add
inc
mov
sub
push
jbe
adc
mov
mov
mov
es
mov
dec
ss
pop
pop
cmp
lods
outsb
subl
movsb
cltd
push
mov
cwtl
adc
inc
mov
push
xchg
sbb
in
sub
lahf
push
xor
das
or
mov
jmp
push
ss
push
push
in
sub
in
out
outsl
lock
adc
scas
mov
loope
xor
sti
scas
mov
sbb
jns
stos
inc
je
fwait
sub
std
add
cmp
insl
xlat
sti
inc
cmpsb
int3
nop
and
out
out
icebp
loope
jo
test
sub
mov
pop
rol
ret
push
and
lods
and
fwait
aad
mov
or
adc
shll
stos
lahf
mov
ja
jp
add
push
push
mov
jmp
sub
stos
decl
int
xchg
or
inc
ja
ss
mov
add
pop
fistps
sub
nop
xchg
xor
imul
mov
mov
outsl
int
loop
push
dec
pop
dec
pushf
inc
jnp
outsl
fmul
and
scas
xchg
addr16
out
cmpsl
imul
and
push
push
sub
dec
and
push
adc
in
mov
imul
and
aas
sub
aad
fdiv
inc
jne
jno
arpl
dec
and
xchg
or
mov
inc
sub
pop
pop
inc
lcall
jae
mov
add
movsb
loope
movsb
mov
int
sub
jecxz
mov
das
push
xchg
push
push
js
add
data16
rorb
sarl
sti
jne
dec
in
push
push
jne
frstor
adc
or
or
pop
push
fistl
stc
or
dec
pop
sbb
testl
cwtl
jecxz
pop
mov
lods
inc
movsl
into
jnp
mov
insl
enter
das
sbb
xor
sahf
filds
fcomps
int
data16
scas
cmpsb
mov
loope
pop
and
fisubs
arpl
sub
push
shll
bound
out
loop
fstpt
into
dec
nop
outsl
arpl
jle
push
adc
push
bound
mov
enter
sti
lcall
mov
or
fmull
rolb
shlb
jae
xor
mov
mov
ss
inc
call
repnz
sub
imul
push
xchg
hlt
int
cltd
iret
pop
aam
adc
add
jmp
sbb
pop
pop
repz
sti
ljmp
fisttps
sbb
and
pop
push
ja
jo
push
insl
xchg
roll
pop
stos
ds
lahf
or
repnz
xor
lds
int3
loopne
ret
dec
icebp
in
pop
push
and
and
cmpsb
fldcw
scas
leave
testb
xchg
and
xchg
mov
sub
mov
adc
sub
cmp
lea
xchg
or
xlat
js
mov
mov
sbb
mov
add
ja
fidivrl
xchg
mov
popf
sub
xchg
xor
sub
lret
cmp
mov
dec
inc
jg
mov
movsb
mov
cltd
push
out
add
fcmovne
fcmovu
push
sub
cmp
add
dec
xor
add
cmp
cli
outsl
mov
cmp
xor
imul
sub
test
aad
mov
mov
cli
mov
lret
adc
pop
jb
mov
inc
and
mov
cmpsb
lcall
cltd
mov
and
cmc
testl
cmpl
pusha
mov
cmpsb
xchg
adc
inc
leave
adc
lret
mulb
mov
jp
mov
cmpl
in
mov
bound
jle
jnp
fwait
paddusw
fnstenv
ja
xor
les
insb
xor
aad
pop
test
subl
cwtl
and
aas
ds
xor
pop
mov
mov
loope
int
gs
movsb
dec
xchg
pop
sub
nopl
adc
xor
jnp
push
out
mov
js
cmp
add
fstps
pop
sahf
mov
push
jle
and
pop
pop
aaa
flds
testl
add
pop
ds
cwtl
data16
rolb
leave
test
jp
test
dec
lcall
fucom
lds
dec
out
push
push
scas
xor
int3
mov
jae
dec
xchg
lret
in
ljmp
scas
jg
insb
xchg
add
or
mov
dec
lock
shll
rclb
loopne
es
jmp
arpl
loope
mov
out
jmp
push
cmpsb
fistps
sub
shlb
shrl
addb
aas
arpl
push
movsb
mov
and
int
add
mov
push
mov
jmp
sub
dec
into
enter
call
xor
test
push
and
repz
std
ret
xchg
ss
fwait
jns
aam
lds
dec
xchg
cs
mov
mov
and
xor
fldl
ljmp
repz
mov
pushl
fmuls
arpl
test
push
ljmp
or
adc
movsl
push
push
cmp
scas
cmc
adc
inc
mov
sub
sbbl
das
cmp
inc
and
inc
push
xchg
mov
dec
das
insb
inc
xchg
rorl
and
gs
mov
call
call
jbe
push
sti
cld
push
jne
pop
rorl
pop
shrb
or
fs
aad
push
sub
adc
sbb
out
fbstp
leave
int
lods
adc
int
inc
lret
fs
pop
aad
hlt
imul
lea
fwait
mov
mov
int3
cmp
scas
xchg
push
bound
jecxz
xchg
lods
out
dec
push
adc
enter
and
sahf
inc
fwait
and
lret
mov
cmc
ljmp
mov
cmp
leave
inc
xchg
loop
inc
jo
jle
xor
xchg
xor
inc
mov
nop
scas
shl
fidivs
aas
lods
ret
fsubs
xor
dec
sub
leave
aad
mul
cmp
pop
shlb
outsb
or
xor
inc
sbb
mov
pop
add
fistps
mov
sbbl
stos
cmp
dec
inc
arpl
add
sub
popf
stos
mov
inc
pop
mov
pop
ljmp
daa
inc
xchg
mov
or
adc
mov
fs
sti
mov
xor
dec
cmp
add
lds
mov
sub
jecxz
mov
mov
out
test
and
xor
repz
aam
inc
cli
orb
fwait
mov
outsb
pop
xor
or
adc
fnstenv
mov
ffreep
inc
enter
test
fs
push
in
mov
or
stos
out
jecxz
cmp
sub
je
add
jae
cld
shrl
daa
test
mov
mov
push
push
enter
je
inc
cmp
stos
xchg
mov
call
enter
dec
or
cmp
inc
adc
push
fcoml
mov
hlt
and
jle
sarl
jmp
subb
adc
call
mov
int
aam
addr16
mov
fdivrs
fldcw
push
cld
loope
popf
lret
jnp
std
inc
cmp
inc
pushf
fists
repz
je
std
movsb
mov
out
mov
xor
aaa
mov
inc
mov
or
sbb
repz
or
fistl
inc
push
pop
push
hlt
or
xor
sbb
pop
les
pop
or
test
pop
mov
push
lods
fildll
jg
mov
pusha
push
outsb
push
adc
push
ljmp
xor
repz
jne
dec
movsb
aas
xchg
in
cwtl
movsl
sbb
push
mov
shl
sbb
sbb
jo
aas
mov
inc
stos
inc
push
lods
fiaddl
adc
mov
or
pushf
mov
xchg
sub
or
loope
mov
pop
mov
mov
or
jle
adcl
mov
cmp
mov
lock
std
cmp
inc
or
pop
xor
fwait
sbb
cltd
dec
rcl
cltd
sub
sbb
hlt
dec
mov
ss
mov
jo
fisttpll
js
sahf
sub
pop
pushf
rcrb
push
mov
repz
add
cmpsb
inc
popa
push
in
cs
fistps
in
into
mov
cmp
scas
mov
jle
mov
xor
mov
je
cld
add
pop
ja
sub
add
sub
fsts
scas
imul
sbb
leave
xchg
aam
and
gs
lods
sti
fs
sbbl
imul
dec
dec
cmp
dec
xlat
call
fsub
arpl
fiadds
ja
stc
je
pop
sbb
bound
pusha
ret
aad
inc
mov
sub
repz
push
or
jge
xor
xchg
xlat
pop
jg
in
ficoml
xchg
xor
in
stc
icebp
mov
andl
push
inc
cmp
repnz
pop
sti
add
ret
loope
je
mov
mov
push
data16
mov
jbe
call
xchg
clc
jecxz
enter
ficoml
sarl
ja
push
test
sahf
cmp
gs
xchg
arpl
call
lock
sbb
in
arpl
jl
mov
fcmovne
mov
cmp
jnp
cmp
xchg
aaa
add
inc
dec
inc
popf
mov
inc
cmp
movsl
ss
call
cmc
and
ja
mov
cmp
cmpsl
sti
das
imul
les
xchg
push
in
inc
clc
arpl
mov
and
xor
push
mov
dec
adc
mov
ret
icebp
jne
mov
dec
pop
jg
xor
dec
add
out
cld
mov
fs
fadds
or
pop
add
xchg
daa
mov
clc
push
push
sbb
lahf
in
sahf
imul
sbb
xchg
out
xchg
test
xchg
sbb
cmc
and
jle
dec
cli
cmp
ljmp
or
fcmove
jae
fdivl
arpl
xchg
out
sbb
mov
ret
xor
adc
xor
jnp
mov
dec
or
mov
xor
xor
vmaxsd
fmuls
daa
push
decl
outsb
loopne
adcb
outsl
mov
cmp
fimuls
sub
cwtl
test
inc
xchg
sti
dec
addr16
cli
and
int3
cmp
jecxz
or
dec
cs
add
and
mov
mov
inc
mov
fmuls
jnp
rorb
mov
jl
pop
cmpsb
hlt
ret
adc
es
add
lret
movsl
outsb
push
fdivl
xlat
jle
je
jae
mov
scas
xor
cltd
gs
dec
adc
add
lods
xor
std
mov
jne
das
jle
aas
lds
mov
outsl
mov
push
movsl
addr16
cmp
inc
mov
repnz
repnz
outsb
sub
or
xchg
add
xor
sbb
sbb
mov
add
int
jb
xlat
scas
in
stos
bound
stos
and
inc
jbe
fnstsw
js
push
xchg
call
out
mov
test
aas
addr16
pop
pop
push
and
fwait
or
insl
fdivrs
add
nop
cmp
popf
mov
jae
xchg
enter
and
ds
shlb
pop
imul
dec
jg
push
cltd
imul
pop
out
andb
xchg
cmp
mov
shrl
push
jge
jns
pop
lahf
cmp
movsb
lahf
inc
pop
in
out
jno
mov
ja
sub
push
jne
mov
les
xchg
loope
rol
lock
mov
push
xchg
in
xchg
ss
lods
cmp
jbe
pusha
out
loop
ljmp
push
mov
inc
aam
jae
mov
enter
cld
shrl
outsl
pop
xchg
mov
add
ss
cwtl
jge
negb
push
and
lock
dec
add
or
mov
or
pop
mov
mov
clc
and
fs
jns
das
jae
out
int3
out
mov
icebp
push
dec
rep
mov
inc
test
fwait
adc
pop
lret
int3
mov
mov
mov
push
add
and
psraw
outsl
adc
jg
lods
dec
mov
xor
add
pusha
lods
iret
push
jp
imul
jmp
adc
pusha
imul
pop
aas
jne
inc
push
data16
fnstenv
xchg
gs
inc
jnp
inc
mov
arpl
inc
and
sub
in
sbb
adc
xor
test
mov
sbb
xchg
add
push
adc
inc
add
cwtl
inc
call
sub
ds
mov
insl
daa
call
pop
in
sub
sbb
lret
mov
or
js
push
aad
imul
adc
cmpl
dec
lret
test
push
jae,pn
or
fsubrs
int3
fcoms
pop
inc
out
jle
fnstenv
sahf
aam
jmp
jge
js
dec
mov
sbb
cli
or
mov
dec
loope
xor
enter
mov
gs
sub
lods
inc
inc
xor
mov
cltd
pop
sub
pop
shl
mov
aam
mov
and
je
fwait
adc
adc
rcl
data16
out
add
call
inc
xchg
aas
dec
ss
inc
fsubrl
enter
push
adc
push
inc
or
push
jae
or
or
push
das
dec
xchg
hlt
sbb
mov
daa
push
aas
sub
push
enterw
cmp
cmp
movsb
mov
xchg
mov
cmc
mov
push
icebp
in
loope
popf
mov
add
scas
rclb
jo
iret
negl
ljmp
ljmp
iret
movsl
repnz
out
jnp
xchg
xchg
cmp
sbb
adc
lods
mov
repnz
rolb
insl
xchg
lahf
xchg
aaa
stos
adc
push
out
xchg
aaa
mov
call
jmp
adc
imul
xor
xor
out
in
mov
lret
mov
mov
clc
movsl
popf
mov
sbb
add
inc
test
cmp
mov
in
mov
mov
dec
jmp
addb
ds
push
outsl
inc
push
test
pop
lcall
dec
inc
roll
mov
sahf
lea
int3
push
push
loopne
xor
sub
clc
jge
and
sti
xchg
and
push
int
dec
sbb
movsb
sarb
sub
mov
xchg
jns
push
pop
dec
jg
shlb
cmc
xchg
pushl
sub
fwait
iret
push
sub
lahf
fwait
mov
cmpsl
mov
mov
mov
mov
fimuls
lret
shlb
fstl
and
jmp
xchg
test
lea
lret
mov
jno
movsb
out
fimuls
xchg
jecxz
push
sub
jnp
push
mov
add
cmp
es
xchg
outsb
xchg
xchg
and
mov
adc
clc
outsb
sbb
outsb
jb
lods
xor
aaa
lahf
sar
push
sbb
mov
pushf
mov
in
in
int
cmp
inc
test
icebp
addl
loopw
xchg
imul
fsubp
mov
push
mov
lret
mov
icebp
faddp
insl
int3
xchg
frstor
ret
or
mov
outsl
fimull
inc
sbb
mov
call
pop
div
push
pop
and
sub
cmp
mov
ss
clc
fs
lfs
mov
out
fdivr
orb
test
ret
pop
clc
xchg
inc
scas
ret
and
cmpsb
outsb
inc
std
cmp
jns
ss
imul
push
cwtl
outsl
pop
jecxz
fs
adc
mov
testb
lods
repz
mov
loop
mov
inc
jmp
js
iret
lahf
mov
das
ds
push
dec
lea
arpl
aam
cmp
jmp
outsl
pop
lods
pop
mov
ret
imul
es
popf
cs
neg
imul
outsl
aaa
or
cmp
fsub
jmp
cs
mov
lret
hlt
adc
shll
push
movsb
mov
sub
in
xor
rorb
dec
pop
inc
and
ljmp
ja
les
cmp
cmp
inc
cmp
adc
jl
rcrb
cld
repnz
addr16
movsl
sbb
inc
dec
out
adc
push
or
stos
inc
cmp
push
push
jne
lea
sbb
icebp
jge
in
push
cmp
aaa
icebp
inc
stos
mov
or
sbb
fwait
aam
call
xlat
sub
lret
in
clc
fcompl
scas
xlat
lret
in
shll
out
lock
je
mov
test
cmp
pop
mov
sbb
bound
je
jno
stc
jmp
jo
xchg
xchg
pop
mov
push
adc
xchg
push
outsl
out
push
xchg
ds
push
stc
pop
pop
mov
icebp
and
inc
sbb
iret
stos
aam
xor
xchg
add
xchg
push
hlt
aas
pop
jp
repz
mov
clc
fidivl
or
and
mov
loop
jp
hlt
xchg
mov
mov
in
jle
jl
mov
sub
adc
adc
pop
mov
popf
loope
sbbb
mov
mov
jle
jae
push
outsl
push
xor
adc
push
aaa
mov
mov
mov
cmp
sbb
adc
jbe
inc
std
xchg
cmc
dec
sbb
xor
adc
aam
pushf
fisubrs
ja
mov
sbb
xchg
jmp
daa
ja
mov
das
push
fmul
stos
stos
xchg
lcall
jle
es
rorl
cmp
xchg
adc
ljmp
psubusw
mov
gs
clc
push
inc
sub
adc
test
dec
mov
mov
mov
pop
stos
cmp
mov
js
jae
mov
cmp
xchg
inc
and
test
push
das
jnp
test
ficomps
lods
test
push
movsb
in
push
dec
outsl
xchg
xlat
pop
icebp
jno
or
sub
cld
mov
mov
lock
fistpl
test
fcoml
push
cmpsl
push
loope
push
cmp
insl
insb
lret
mov
jge
add
jg
je
lret
sbb
push
fs
imul
cmp
sub
loop
xchg
arpl
es
cmp
ret
xor
rorl
add
out
mov
ftst
lret
lock
aad
es
ret
das
mov
or
fwait
ret
das
xchg
fwait
lea
push
push
arpl
je
js
pop
cmp
mov
jae
dec
scas
adc
inc
outsb
adc
fistl
jl
pop
mov
out
out
fiaddl
cmpsl
insb
pop
or
sub
pop
xor
lock
in
cmp
adc
xchg
pop
popl
nop
ds
ljmp
fcompl
lea
mov
push
jle
xor
push
fisttpl
jge
xor
sar
into
leave
and
jb
fdivs
push
pop
add
in
jle
mov
pop
dec
nop
xchg
in
imul
pop
mov
cmpsb
repz
dec
dec
test
outsl
repnz
sarl
or
lods
dec
cmp
mov
insl
xchg
pop
jns
out
mov
inc
mov
push
push
push
sbb
dec
in
popf
data16
jo
loop
in
or
int3
inc
loop
out
and
mov
or
addr16
or
mov
jbe
ja
sub
or
in
sahf
pop
and
sbb
repnz
int3
push
jae
jg
aam
inc
mov
cmp
imul
orb
arpl
mov
sbb
sub
push
adc
das
mov
push
pop
cltd
stos
loopne
push
dec
je
mov
mov
test
or
popa
orl
sbb
sbb
sub
cwtl
das
jae
push
or
outsb
jno
iret
cmp
aaa
arpl
inc
or
mov
out
cmpsb
mov
jmp
loopne
sbb
xor
or
mov
scas
and
in
push
and
sbb
inc
or
xor
push
xorb
adc
arpl
outsb
or
pusha
pop
xor
push
addr16
pushf
mulb
fistl
fldl
push
aas
jecxz
lods
daa
in
sub
push
cmp
jbe
hlt
mov
into
inc
mov
sub
popf
leave
jnp
xchg
mov
jbe
push
sbb
push
jo
push
inc
dec
imul
rolb
and
call
clc
je
cmp
jp
mov
xchg
cmp
lret
outsb
ljmp
movsb
cmpsl
imul
fildl
loop
xchg
cmp
cmpsb
xor
mov
imul
jl
inc
dec
or
lock
dec
addr16
xor
out
clc
add
cmp
pop
addb
cmp
add
mov
scas
les
dec
sub
cmp
stc
push
movsb
sub
mov
jno
push
sbb
mulb
mov
fstpl
xchg
xchg
js
fistpll
jmp
jmp
and
lods
mov
stos
and
in
and
push
pop
mov
jbe
xor
ja
mov
jns
ret
gs
mov
outsl
das
jecxz
sub
dec
or
fildl
mov
repnz
pop
pop
inc
call
in
push
test
ss
outsb
mov
movsl
inc
fldenv
mov
inc
into
mov
or
movsb
subl
adc
jae
int3
aas
and
or
mov
xchg
sti
ss
and
sbb
enter
sub
jb
pop
or
and
xchg
jns
nop
call
data16
dec
mov
add
ja
mov
sbb
js
push
sbb
loope
mov
xchg
fxch
mov
dec
das
adc
mov
inc
mov
inc
mov
mov
fs
in
push
outsb
loopne
cmp
mov
mov
jne
jle
das
pop
cld
dec
jnp
mov
dec
pusha
lahf
cld
loop
imul
insl
xchg
test
pop
adc
xchg
mov
pop
push
arpl
cmp
and
adc
pop
aad
push
xchg
test
push
or
in
stos
cmp
in
mov
sbb
and
leave
aaa
mov
or
loop
in
pop
dec
popf
sahf
enter
call
loop
mov
jmp
mov
cmp
mov
xchg
cmp
sbb
or
scas
jns
insb
arpl
mov
mov
add
mov
cmpsb
sbb
aam
je
mov
stc
dec
inc
adc
rorb
mov
mov
fsts
lret
jl
xlat
test
ret
inc
lahf
xor
shl
movsl
cmp
inc
test
mov
xchg
sub
xchg
add
in
sub
addr16
ret
test
add
ret
push
sahf
and
ja
jmp
fs
sbb
into
xlat
xchg
dec
push
or
dec
aaa
stos
jb
lcall
cli
jno
xchg
sbb
imul
and
test
out
jns
std
jg
jb
mov
fcom
ss
jg
rcl
mov
cmc
mov
sub
dec
mov
icebp
test
or
push
fldcw
mov
pop
leave
xchg
mov
fsubrl
popa
push
sub
in
lcall
movsb
clc
push
data16
into
lret
int
mov
das
les
in
fiadds
shrb
sub
dec
or
sub
loope
dec
inc
es
xor
bswap
cli
orl
push
sbb
mov
push
leave
xor
add
out
ficoms
loop
and
mov
add
adc
in
pop
pushf
push
addb
inc
dec
mov
or
mov
inc
or
out
dec
out
clc
sbb
cmp
push
sti
lcall
sbb
cmpsb
sarl
cli
xor
loope
out
xor
ror
adc
ret
or
scas
pop
lret
pop
mov
fcoml
and
lds
pop
pushf
rorb
fistpll
mov
aad
mov
mov
shr
stos
xchg
and
jne
rcr
cld
dec
inc
adc
lock
es
push
imul
enter
cmp
shlb
sbb
cwtl
sbb
pop
sbb
push
cmp
jl
popf
pop
inc
sbbl
mov
mov
pop
xchg
imul
stos
repnz
xor
jnp
mov
xchg
pop
cmp
fs
sahf
jno
dec
jnp
leave
loopne
ja
divb
popa
call
addl
fadds
ja
repz
dec
sbb
mov
cmpsl
ds
push
ds
xchg
mov
adc
in
dec
jg
rcr
imull
pop
rorl
jg
adc
push
jne
loop
mov
test
popa
xchg
push
jl
jecxz
jmp
rcrb
xchg
jbe
jecxz
adc
add
jno
scas
movb
out
movsb
xor
insb
xor
shll
sub
loop
mov
add
mov
adcl
xchg
sbb
mov
lret
lret
call
ja
sti
jg
mov
rorl
mov
dec
and
add
data16
push
cmp
jo
scas
push
outsl
jo
mov
mov
xchg
mov
das
fimuls
cmp
in
push
adc
ja
call
sbb
xchg
in
cmpsb
shll
xchg
mov
push
mov
mov
jo
insl
mov
inc
push
push
iret
nop
pop
test
xor
mov
call
sub
ja
pop
fldt
fistl
push
adc
cltd
mov
stc
mov
dec
das
or
test
or
hlt
xchg
xchg
orb
mov
lods
test
xchg
and
xchg
xchg
mov
arpl
and
stos
cmc
cmp
mull
adc
loopne
push
pop
fsts
push
add
stc
push
add
add
ret
cmp
repnz
fucomip
pop
add
cmpl
data16
mov
mov
inc
into
test
mov
cmpsb
pop
int
shlb
imul
decb
nop
cli
sub
pop
dec
adc
pop
jnp
and
dec
dec
jns
into
xchg
mov
jp
out
stos
or
aaa
adcb
inc
pop
add
cwtl
in
roll
hlt
xchg
jg
or
mov
call
fs
inc
mov
mov
int3
and
sub
cld
ret
xchg
out
mov
sbb
arpl
cmp
repz
pop
pop
and
movsb
das
ret
ss
xor
push
mov
rcll
cmpsb
mov
jns
sub
pop
mov
adc
jmp
pusha
lods
xchg
jo
push
inc
mov
outsl
sub
das
lock
push
cli
test
pop
sahf
mov
rcrb
mov
imul
sub
flds
cmp
aas
inc
and
jbe
xchg
cmp
cmp
pop
pop
jp
dec
icebp
push
inc
add
push
mov
mov
inc
mov
jno
mov
lret
andl
enter
add
cmpsb
xlat
pop
mov
pop
inc
cwtl
pop
bound
in
dec
cli
je
shl
cmp
sbb
mov
cmp
cmp
xchg
add
imul
mov
gs
mov
lcall
and
stos
cmp
cmpb
lods
pop
hlt
push
out
push
cli
movsb
jl
xor
sub
aad
rcrl
jno
aaa
mov
mov
cmp
ss
mov
fildll
into
idiv
fnsave
dec
jle
jge
mov
xchg
ret
jb
in
movsl
ja
mov
fstpl
lret
xor
cmp
cmc
push
mov
cmp
leave
push
dec
inc
mov
jb
mov
or
sahf
jl
xchg
jg
sub
test
sahf
aas
push
cli
pop
call
pop
adc
ja
push
insb
cmpsl
stos
add
jns
mov
mov
in
mov
sbb
popa
repz
int
sar
push
data16
dec
mov
push
push
sbb
outsb
das
xchg
enter
cwtl
les
aad
repz
push
dec
pop
bswap
out
push
ds
inc
or
jns
popf
andb
adc
cmp
jge
icebp
jbe
mov
pop
loopne
add
add
rcll
jb
movsl
lods
fldenv
sub
mov
fs
mov
inc
test
scas
test
cmp
and
iret
mov
scas
jge
pop
lret
push
sub
and
sbb
es
or
and
and
sbb
insb
je
into
addr16
inc
das
outsl
cmp
push
into
loop
cmc
mov
pop
push
pushf
push
lret
scas
jbe
sbb
xchg
push
add
cmp
xor
and
loop
leave
mov
aaa
mov
sbb
stos
ret
in
and
jno
xlat
cmp
sti
xchg
loop
cs
xchg
insb
lods
imul
push
ss
sbb
xchg
shl
mov
xchg
popa
mov
dec
sti
pop
pop
adc
jp
sub
mov
std
mov
cmpsl
out
pushf
push
into
add
push
ret
call
pusha
sub
adc
je
push
adc
mov
mov
lods
es
push
pushf
jmp
jo
lret
aaa
adc
mov
push
inc
aaa
aas
or
insb
out
lock
dec
mov
mov
push
mov
mov
test
notl
push
or
mov
pop
fwait
sub
and
jne
sub
mov
and
dec
int
addl
mov
into
and
faddl
and
js
stc
adc
das
mov
stos
mov
repnz
lods
repnz
out
scas
inc
test
sarl
xchg
add
dec
pop
lods
add
pop
hlt
mov
fmuls
mov
adc
xchg
roll
fs
mov
jnp
pop
fsub
and
rcll
scas
mov
and
shlb
ljmp
adc
sub
cmpsl
jb
fldl
xchg
mov
aam
stc
xlat
je
cwtl
mov
repnz
mov
or
je
ljmp
mov
cmpsb
xchg
mov
sarb
popf
adc
dec
ret
push
testl
mov
mov
andb
push
clc
or
popf
cltd
adc
adc
lods
xchg
lods
cld
xor
push
mov
lret
pusha
arpl
xorl
stc
pop
pop
cli
push
ret
jle
xor
mov
das
imul
movl
aaa
mov
dec
jge
cmp
mov
jecxz
or
std
ret
cwtl
je
adc
xchg
adc
jge
cld
lods
loop
lcall
jg
xchg
xchg
jmp
fmull
xlat
xchg
sbb
inc
imul
cld
mov
bound
mov
adc
sub
pop
rcl
or
jo
xchg
out
imul
incl
rcrb
fmul
das
mov
rol
jne
mov
adc
imul
popl
xchg
cmc
cmp
pop
ja
mov
and
dec
pushl
add
mov
dec
xchg
ss
outsl
das
mov
dec
dec
int3
push
and
loopne
sbb
fisubrl
jg
inc
adc
cmpl
jmp
nop
out
dec
push
enter
dec
fistl
iret
cs
imul
ja
out
aam
dec
fmul
jmp
mov
mov
idivl
movsl
das
outsl
test
jmp
sti
mov
mull
std
sbb
and
adc
jo
sbb
jmp
int
das
and
addb
test
stc
sbb
subb
pop
nop
fs
add
mov
aad
out
pop
xchg
inc
jg
push
adc
jae
lods
in
rcrl
call
std
ficoms
lock
sub
outsb
jns
mov
sbb
dec
das
ret
ja
dec
ljmp
jne
cmp
push
loope
xor
je
fmul
mov
aad
cli
fcoml
icebp
dec
out
lods
aad
mov
cmp
cwtl
test
mov
pop
fistpll
js
or
cli
dec
xchg
add
fs
inc
mov
mov
jnp
rcr
test
sub
mov
sub
add
leave
fcompl
mov
shll
loope
ljmp
imul
pop
mov
or
jmp
ljmp
lock
lret
cmp
loopne
mov
lock
jp
negb
movsl
or
pop
lods
push
sub
add
in
pop
mov
loop
cmp
jp
sbb
mov
popa
push
out
mov
cs
mov
adc
or
pop
push
xchg
or
test
cmpsb
jmp
xchg
std
cmp
sbb
insl
xor
mov
mulb
ror
mov
pop
aaa
loope
fistpl
add
inc
aad
inc
aam
sbb
dec
pop
push
xchg
mov
sub
aam
pop
sub
aad
pop
testb
xchg
in
mov
adc
jmp
and
dec
mov
in
or
mov
adc
nop
push
xchg
sbb
pop
mov
sub
mov
jp
incb
scas
sti
repnz
inc
int
mov
mov
daa
in
inc
mov
mov
and
pop
std
cmp
or
movsb
add
mov
mov
mov
pop
fstpl
push
mov
insl
test
arpl
inc
adc
negl
push
add
xchg
pop
cmpsl
cmpsb
mov
jo
data16
adc
fcoml
and
add
sbb
loop
or
dec
mov
jp
lret
and
sbb
inc
lahf
add
jnp
lods
push
repz
pop
xor
incl
sbb
cwtl
mov
pop
mov
fs
push
call
sub
repnz
fldcw
pop
addr16
mov
mov
insl
stos
clc
mov
xor
in
push
sub
inc
pop
cs
jg
xchg
pop
mov
add
inc
xchg
aam
mov
jns
jno
sbb
scas
sbb
pop
in
lcall
mov
in
lret
and
mov
mov
mov
mov
mov
call
lcall
ss
pop
and
loop
sahf
test
gs
int
inc
cmp
pop
sti
imul
inc
mov
jnp
popa
lods
adc
lcall
stos
mov
loopne
imul
mov
shlb
je
ret
dec
xchg
lods
jecxz
and
nop
jb
push
out
sub
adc
fwait
push
imulb
add
lods
sbb
sbb
out
in
cmp
inc
std
out
jl
xor
test
adc
imul
push
cld
or
lea
mov
shll
jo
call
mov
aad
ret
cmp
mov
xchg
or
int3
xlat
pop
dec
fidivrl
lods
movsb
stos
push
lret
inc
stos
cltd
ds
sahf
mov
dec
or
xchg
fnstsw
push
mov
addl
shll
fstl
imul
shll
enter
stc
movsl
sar
xor
icebp
jecxz
add
in
and
js
in
mov
neg
push
incl
add
fisttpl
std
or
push
pop
ja
cmc
jb
sbb
adc
and
daa
or
adc
ds
jl
idivb
cwtl
or
dec
mov
in
add
sbb
mov
lret
ljmp
push
mov
add
cmp
arpl
sahf
loope
mov
fnstsw
in
outsb
loop
sahf
jmp
xor
mov
lahf
xor
pop
call
out
pop
xor
mov
stos
sarb
dec
loop
add
push
mov
push
rclb
inc
hlt
adc
and
inc
iret
fcmovb
adc
fs
cld
inc
sahf
int3
nop
xor
mov
xor
xchg
cmp
int
pop
xchg
mov
loope
sbb
mov
mov
mov
orb
jmp
data16
jp
popf
test
jae
fldl
aad
push
dec
outsl
divl
dec
cli
std
scas
jge
iret
testb
aam
notl
xor
lds
push
and
add
imulb
clc
pop
lret
cmpsb
loop
inc
test
xchg
and
mov
pop
push
cltd
xchg
jecxz
dec
loop
or
inc
fdivs
cmpsl
scas
and
mov
addb
out
mov
xchg
dec
sub
sub
lahf
push
dec
sti
mov
es
mov
rolb
sub
xorb
push
adc
into
xchg
sahf
cwtl
jne
xor
mov
mov
aaa
into
out
out
adc
ret
push
fdivrl
xchg
jg
or
sub
fwait
push
dec
inc
cmpps
ja
ret
pop
jmp
xor
push
popf
imul
mov
dec
adcl
lret
xor
int
adc
pop
leave
sbb
push
stc
mov
loop
mov
sbb
add
lahf
xor
nop
pop
sbb
clc
call
cmp
mov
or
andb
adc
inc
into
pop
xchg
xor
xlat
sub
lods
sbb
fdivs
loope
and
imul
xchg
cwtl
lret
movsb
add
lcall
add
ljmp
adc
lret
jae
int3
pop
ret
sbb
push
stc
call
stos
add
dec
dec
cmp
mov
add
lock
xchg
jecxz
ja
addr16
mov
sbb
mov
xor
mov
pop
sbbl
jno
push
popa
pop
scas
pop
mov
cmp
mov
fcoml
test
sarl
or
enter
mov
cwtl
inc
dec
or
hlt
lds
sbb
mov
mov
inc
loopne
sarb
int3
sub
scas
jo
add
sub
sbbb
xorl
xchg
add
push
fsubrs
ds
adc
add
jnp
jle
and
xchg
js
cmp
adc
enter
cltd
lahf
movsl
inc
sbb
jnp
add
jmp
fbld
jno
rcll
data16
filds
jg
xor
or
cmpsb
stc
sub
or
lock
push
je
pop
sub
nop
inc
mov
pusha
push
je
push
mov
mov
hlt
push
lea
fildl
cmp
mov
fcoml
lahf
mov
xchg
repz
push
je
xlat
ja
popf
and
mov
inc
xchg
mov
daa
adcl
push
sbbl
out
sub
push
inc
lahf
mov
outsb
lods
call
mov
adc
xor
dec
ret
jmp
jle
loopne
add
push
fistpll
stc
loope
aas
pop
mov
xchg
dec
or
jge
inc
daa
loopne
ljmp
inc
inc
dec
or
out
add
xchg
inc
lods
xchg
flds
cmp
fwait
and
push
xchg
sti
cli
cmp
lods
push
pushl
pop
push
mov
outsb
inc
cmpsb
xchg
mov
notb
mov
in
pop
add
imul
adc
ficoml
push
dec
xchg
cmp
cld
icebp
mov
xor
and
sbb
andb
lods
mov
inc
pop
dec
cltd
mov
jl
imul
pop
gs
sbb
es
in
mov
and
sub
xor
test
imul
call
cmc
add
and
push
sbb
rorb
stc
sbb
and
mov
dec
clc
pop
push
and
nop
enter
push
cmp
dec
sub
inc
ret
test
ficoml
lds
das
mov
addr16
adc
adc
sbb
inc
inc
pop
lret
andb
inc
ljmp
stos
add
sub
sbb
xlat
sub
gs
xor
mov
lods
dec
incb
xor
in
cmp
sahf
inc
inc
mov
repnz
lock
xchg
cltd
ss
je
sub
filds
fstps
sub
inc
into
es
gs
sbb
xchg
adc
push
push
repz
jmp
and
pop
push
cmp
cmp
mov
enter
in
pop
out
jg
xor
or
out
mov
insl
sbb
push
clc
les
inc
popf
das
jecxz
inc
js
inc
ds
xchg
add
pop
cmp
sub
cmc
test
xlat
inc
cmpsl
in
and
and
push
add
std
adc
sbb
aad
jne
popa
pop
jno
cmp
icebp
sbb
mov
imul
jge
jle
pop
imul
movb
fcmovnb
ljmp
lods
cmc
dec
xorl
cwtl
aad
xchg
pop
cli
cmpsl
scas
sbb
lret
push
jg
int
das
aaa
jle
jb
pop
jle
adc
gs
cs
and
icebp
pop
pusha
jle
mov
xchg
inc
in
movl
cmp
xchg
ss
mov
mov
dec
pop
inc
sbb
jle,pt
hlt
outsb
dec
and
fbld
incl
push
ret
or
movsb
lcall
xchg
pop
pusha
aas
push
bound
mov
outsb
jge
das
xor
popa
in
add
add
lea
cwtl
jae
sbb
repnz
pop
pop
push
mov
mov
pop
push
outsl
ljmp
cli
and
in
xor
call
mov
outsl
ds
mov
fbstp
loop
xchg
adc
ljmp
mov
dec
push
pop
sbb
cmp
or
test
out
inc
cwtl
cld
pop
xor
xor
in
hlt
pop
mov
push
daa
sub
sbb
loop
dec
loop
pop
jge
clc
mov
sub
jecxz
incb
inc
imul
outsb
mov
push
icebp
jg
jle
bound
xor
fnstsw
movsb
imul
pop
pop
mov
push
cmp
jle
and
mov
pushf
and
inc
push
aas
das
ret
stos
imul
adc
cmp
dec
stos
or
pushf
sahf
inc
xchg
mov
push
lods
push
pusha
idivl
clc
push
mov
adc
add
cmp
cmp
and
cmp
mov
adc
les
jmp
lea
mov
cltd
aam
xor
fs
out
cmp
mov
mov
cmp
loopne
ficoml
insb
jecxz
pop
roll
and
or
dec
aaa
outsl
mov
shrb
inc
shlb
scas
sti
iret
lods
icebp
mov
jo
mov
push
fcomp
loope
fisubrs
out
fwait
inc
js
aaa
or
sbb
fwait
xor
mov
push
movsl
mov
dec
std
adc
std
stos
jmp
fsts
ret
cmc
cmpsb
push
cmpsl
orb
scas
sbb
xchg
mov
and
adcb
lods
js
lret
jb
pop
aad
pop
aam
mov
or
jmp
aaa
mov
sbb
lcall
fisttps
ja
dec
mov
fnstsw
std
sub
add
sub
or
fcompl
xor
cld
das
pop
jp
aad
imul
jbe
xlat
lret
mov
push
out
cld
xor
mov
negb
int
adc
pop
mov
cld
imul
mov
das
fadds
pop
pop
out
into
xchg
ljmp
jl
out
inc
ja
mov
add
mov
push
sbb
hlt
sub
mov
out
clc
test
nop
fistpll
aaa
sub
inc
pop
dec
cmp
ud1
loope
sub
ds
in
cmpsl
aas
or
add
push
adc
mov
and
mov
mov
pop
das
out
or
les
cmc
je
mov
pop
dec
jns
cmp
das
sub
enter
adc
mov
inc
lret
pop
xor
push
mov
insb
lret
sub
in
cmp
add
xchg
pop
out
mov
dec
ret
subb
push
fsubrp
fs
cmpsb
out
cmp
shl
outsl
into
push
shrl
pop
pushf
divl
mov
mov
orl
and
cmpsl
xor
fst
xlat
pop
push
in
cld
jmp
add
sbb
sub
pop
xchg
imul
hlt
out
sub
sbb
decl
or
xchg
or
aam
mov
out
pop
in
pop
stos
test
mov
or
dec
xchg
das
mov
fadds
pop
movsb
mov
xor
fisubrl
mov
xchg
inc
pusha
rcll
lods
and
push
mov
and
lods
clc
cmp
or
js
pusha
js
add
popf
and
and
iret
mov
lret
arpl
rolb
jne
sub
jl
cmpsl
inc
lods
cmpsl
outsb
test
imul
push
jp
clc
sub
inc
test
fs
or
pop
jno
dec
dec
pop
dec
mov
cmpsl
enter
mov
adc
and
mov
scas
pop
mov
movsl
andl
inc
sbb
cmp
xchg
pop
xchg
jp
mov
sbb
notb
les
sub
leave
in
loopne
sub
mov
gs
fildl
sti
jp
mov
aad
js
inc
jb
imul
ret
sbb
popa
rcl
or
xor
xchg
xchg
daa
jmp
stos
mov
es
mov
mov
and
sahf
xor
out
push
daa
ljmp
jne
xchg
into
sub
test
mov
ja
mov
sbb
lret
cmp
in
ret
test
add
pushf
cwtl
sub
adc
sbb
daa
push
xlat
insl
je
push
adc
jb
cmpsl
filds
addb
fnstsw
or
push
push
fmul
in
repz
cmp
cld
movsb
mov
mov
jg,pt
lds
and
int
int3
iret
jmp
jl
xchg
sub
test
leave
into
inc
dec
call
xchg
fprem
mov
xchg
add
mov
cmp
cmpsb
mov
jbe
sti
pop
mov
mov
in
lret
decb
push
xor
scas
pusha
xchg
int
aam
ss
jmp
and
mov
mov
mov
and
adc
sbb
or
es
mov
stos
cmp
ret
dec
add
mov
sbb
jecxz
cwtl
inc
pusha
adc
cli
aam
les
test
lea
test
dec
pusha
dec
jno
scas
popf
xor
pop
mov
inc
insl
ror
stos
mov
mov
mov
rclb
hlt
sbb
and
adc
leave
lods
push
jno
push
int
push
sahf
ficoml
stos
push
divl
fistps
jb
rcl
ja
pop
jp
pop
inc
out
mov
mov
mov
sub
pop
and
pcmpeqw
inc
shlb
fcoml
push
pop
xchg
in
jbe
sbb
inc
iret
inc
and
fsubs
ja
dec
int3
mov
orl
pop
test
or
pop
mov
out
imul
dec
adc
int
scas
in
addb
add
pop
nop
xor
in
pop
xchg
int
adc
mov
movl
sbb
aas
dec
xor
push
sahf
mov
shll
pop
or
scas
xor
pop
xorps
pop
push
decl
dec
cmp
dec
cmpsl
ss
inc
xchg
aad
stos
imul
std
cmp
mov
inc
xor
xchg
je
and
nop
add
fsubs
ljmp
inc
jg
xor
xchg
mov
aaa
sub
in
pushf
int3
pushf
fisttpll
or
fcmovb
imul
mov
mov
inc
mov
cmp
mov
movsl
int3
cmp
pop
imul
rcl
xchg
cmpsl
dec
rcll
cld
ljmp
test
dec
ljmp
outsb
test
inc
popa
movsl
mov
cld
idiv
xor
sti
and
gs
fnstcw
aam
pop
inc
pop
es
jnp
xchg
fcompl
or
mov
mov
decb
outsl
jg
out
repnz
inc
xor
rcr
ja
jmp
or
hlt
testl
dec
cltd
data16
cli
inc
fnsave
test
jp
pop
push
push
test
lea
lret
and
sub
bound
addr16
adc
mov
xor
sub
iret
nop
test
fistpl
jmp
mov
mov
test
jg
gs
sti
stos
jp
push
shll
in
movsl
loopne
ja
sahf
ret
add
mov
push
adc
iret
sbb
outsb
xchg
fstpt
inc
popa
sub
out
cmc
aas
or
sbb
xchg
ficoml
xchg
call
xchg
movsb
push
jae
adc
xor
cwtl
cs
dec
mov
scas
je
pop
int3
mov
jl
fst
adc
leave
jnp
fs
sub
je
fnop
jl
pushf
push
sbb
mov
leave
or
test
pop
cmp
ret
sahf
xchg
shll
outsl
fidivrs
imul
or
xor
mov
pusha
pop
cmp
lret
fisubs
jmp
ljmp
ja
push
cli
stc
xor
scas
cmp
lret
and
xor
inc
pop
aaa
adc
mov
clc
es
xchg
je
cmp
stos
push
dec
and
xchg
sbb
loopne
mov
xchg
sbb
pop
iret
dec
movsb
icebp
mov
in
mov
sub
and
insb
dec
clc
loop
push
xor
xchg
dec
sub
cmpsb
pop
and
mov
cmpl
testl
jle
inc
and
xor
mov
pusha
shl
shlb
ljmp
pop
inc
mov
movsl
aas
cmpsb
js
jmp
lock
pop
notl
jno
add
xor
pop
cmc
ja
inc
dec
ds
cmp
push
and
sbb
out
push
movsb
dec
xchg
test
fldlg2
jl
mov
push
ja,pn
fistpl
es
mov
dec
push
push
mov
sahf
cltd
stos
pusha
sbb
pop
fbstp
repnz
dec
and
lret
inc
jmp
add
mov
jp
xchg
xchg
pop
cmp
sbb
aas
sub
mov
bound
fs
inc
add
sub
in
inc
adc
stos
cwtl
add
js
mov
ss
flds
mov
sub
stos
mov
sbb
ret
rclb
push
pop
inc
xchg
cmp
scas
or
cmp
xor
fstl
jb
fcmovnu
sub
or
sbb
cld
inc
cmc
adc
and
lret
insl
lods
dec
lret
or
cmc
mull
inc
push
sarl
lret
das
or
add
int
add
and
lea
shrl
jge
cmp
adc
cmp
xchg
mov
bound
in
lods
loopne
mov
or
sub
pop
push
out
sub
jne
xchg
ret
mov
adc
aas
ja
popa
lahf
mov
leave
pop
dec
popl
test
pop
xchg
jp
cmp
sar
outsl
shr
out
ja
mov
insl
sbb
movb
add
jecxz
adc
pop
mov
test
ja
xor
adc
cmpsb
aaa
dec
rorb
bound
add
icebp
in
inc
adc
jne
pop
inc
mov
test
inc
insb
sti
cmp
jns
cmp
sbb
push
adc
cmpl
mov
pop
lods
or
mov
in
xchg
fisttps
nop
mov
repz
pop
ffreep
in
pop
mov
mov
je
int
test
fiadds
sub
xor
or
pop
mov
ljmp
into
mov
bound
cmovs
push
in
std
out
mov
out
dec
dec
push
cmp
andb
lcall
mov
leave
les
sbb
repz
icebp
mov
cmp
int
xor
adc
add
subl
cli
scas
dec
sbb
mov
pusha
adc
cmp
fnsave
xlat
cmp
and
cmpsb
push
enter
sti
jno
lret
jmp
rclb
jge
jge
xchg
int
clc
xchg
add
ret
sbb
out
sbb
mov
loope
testl
push
mov
and
jbe
xlat
add
pop
jno
std
dec
mov
jmp
jo
mov
int
and
jecxz
xchg
sub
sub
call
dec
icebp
shrb
inc
mov
fsubl
stos
or
mov
shl
adc
ret
adc
add
mov
icebp
cmp
cmpsl
and
pop
ffreep
jb
sub
jecxz
add
or
xor
mov
enter
cld
enter
jmp
mov
pcmpeqb
shl
push
mov
pusha
scas
jae
hlt
mov
cmp
or
add
sub
sub
xor
sub
fbstp
mov
mov
jb
xchg
and
mov
fcomps
add
cmp
xor
push
insl
dec
jno
loope
pop
insl
lcall
das
mov
mov
fcomi
adc
pop
lahf
mov
inc
push
pop
xor
out
mov
inc
ss
test
mov
inc
jo
mov
sub
jb
mov
ficomps
imul
sbb
xchg
cmc
lcall
mov
adc
sub
out
inc
or
cltd
je
aam
add
cmpsl
jg
add
adc
add
xor
xchg
jo
inc
lods
pop
pop
daa
jne
aas
pop
mov
sub
pop
ljmp
xchg
sub
xor
int
aas
jp
mov
mov
mov
mov
fwait
je
xchg
das
xchg
adc
daa
mov
cs
aam
test
movsb
add
mov
dec
leave
cltd
jge
aam
push
xor
fcom
inc
mov
dec
add
mov
cmp
fsts
add
gs
lret
test
test
push
push
cmp
inc
mov
push
cmp
ficoms
mov
movsb
repnz
xor
xor
push
push
push
push
movsb
sti
adc
and
push
pop
cmc
mov
lret
adc
push
or
jmp
outsl
mov
pop
jmp
xchg
lea
int
test
push
adc
xchg
xorl
inc
xchg
loope
nop
fwait
adc
addr16
pushf
and
sub
insb
ljmp
aad
push
xor
pop
push
into
pop
insl
push
cli
out
sub
add
in
jecxz
out
mov
xor
jmp
cmp
adc
shr
inc
jnp
or
pop
cli
adc
mov
in
xchg
mov
stc
mov
jb
push
mov
mov
scas
adc
jo
insb
push
mov
std
fcmovnb
test
xchg
rclb
xchg
scas
lret
loope
jb
jle
cltd
ret
stc
mov
pop
lret
mov
add
xchg
mov
add
or
mov
jle
mov
imul
fldl
or
sbb
es
mov
sti
dec
push
rcrl
xchg
lcall
pop
jno
inc
gs
ljmp
xor
add
in
sbb
dec
fsubrl
or
add
mov
pop
xorl
jle
mov
push
xor
inc
fildll
fs
fisubrs
jnp
mov
push
ret
dec
out
int
mov
dec
outsb
dec
sbb
nop
nop
and
mov
int
cmpsl
je
mov
jo,pn
lods
ret
jg
cwtl
enter
jp
dec
enter
sbb
cmpsl
cmp
cmpsb
adc
mov
or
mov
mov
fyl2x
and
lods
mov
and
filds
pop
sbb
mov
dec
push
and
mov
rcrb
lahf
nop
dec
loop
movsl
repz
xchg
popa
pushf
sbb
sti
ret
std
sbb
negb
in
lods
dec
lret
dec
add
movsl
aad
jno
adc
shrl
or
mov
stos
push
es
fiaddl
xor
xchg
outsb
mov
push
jno
jl
adc
loope
cmp
fsubrl
jb
jge
mov
addr16
scas
fldcw
inc
lock
insl
or
adc
test
rcll
in
xchg
push
xor
mov
pop
wbinvd
mov
add
dec
pop
xchg
iret
mov
out
into
cltd
test
inc
xor
cmp
ss
aaa
cltd
inc
inc
mov
notl
out
sti
or
lods
push
jne
xlat
cltd
ret
sti
les
sar
arpl
addr16
pop
das
loop
mov
test
dec
mov
sbb
lahf
das
xor
cs
xchg
out
ficomps
sbb
fiaddl
mov
xchg
sbb
popa
sub
lods
loope
sbb
ss
js
xor
testl
add
push
add
jge
les
test
cmp
xor
mov
cs
dec
jecxz
hlt
inc
xchg
fbld
or
pop
mov
push
jmp
xchg
shll
or
hlt
mov
test
lds
or
or
jmp
cmp
dec
and
dec
adc
out
xor
hlt
rorl
sbb
jnp
mov
push
fdivrs
dec
sahf
cmp
lahf
movaps
push
es
pop
mov
in
add
shrl
jbe
insb
pop
xchg
cmp
pusha
cs
aas
out
inc
ja
orl
sub
int
sarl
inc
imull
test
jecxz
sub
push
lcall
in
ret
lock
ret
cmp
mov
sub
aaa
and
in
push
into
aaa
notb
xchg
xor
sub
andb
imul
lret
movsl
pop
std
push
pop
mov
jecxz
clc
ja
pop
mov
push
in
mov
mov
pop
cld
rorl
adc
out
daa
pop
mov
test
mov
repnz
and
sbb
in
jns
pop
aaa
xchg
jae
adc
sub
add
and
mov
xchg
or
inc
pop
fwait
gs
or
jo
sub
and
mov
sti
lods
test
or
pop
mov
mov
fdivrs
jae
movsl
push
daa
ds
ficompl
xchg
insl
out
add
ret
adc
mov
daa
or
dec
fldenv
adc
fidivl
enter
adc
imul
cmp
push
aam
ret
cmp
sahf
adc
sbb
or
jl
push
shll
cmp
and
int
xor
and
outsl
jp
pushf
insl
mov
je
push
jg
mov
test
mov
cld
cld
dec
xor
in
popf
cmp
xchg
hlt
mov
pop
mov
ljmp
shll
pop
xor
cld
mov
mov
into
cmpsb
sarl
sbb
xorb
rcrb
sbb
std
std
jbe
ficoms
sub
xchg
pop
inc
in
xchg
sets
gs
test
test
mov
outsl
out
repnz
jmp
mov
adc
mov
mov
pusha
cmp
aam
lock
push
stos
in
add
fwait
sti
mov
movsb
int
gs
sub
jmp
jb
cmpsb
sbb
jle
mov
push
das
push
adc
cmp
pop
fisttpl
rclb
das
pop
push
test
sbb
out
adc
popa
add
xor
xor
fldt
push
jae
dec
xor
inc
repnz
out
sub
addr16
ljmp
mov
test
mov
and
pop
inc
sbb
sub
xchg
pop
or
not
lea
push
inc
out
mov
add
push
cmpsb
cmp
test
fisttpll
dec
adc
test
repnz
insb
test
dec
lahf
pusha
and
fisubs
out
clc
adc
pusha
cltd
xor
push
cmp
dec
pop
pop
sub
popl
mov
pop
sub
lock
push
pop
es
outsl
cmpsb
ljmp
mov
cmp
mov
outsl
pop
dec
sbb
mov
stos
add
xchg
cmp
jnp
mov
popf
in
inc
jae
rclb
mov
mov
bound
stos
cli
mov
dec
daa
ljmp
int3
pandn
sti
or
repnz
pop
subb
sub
adc
ja
movsb
mov
imul
add
arpl
xor
cld
mov
sbb
cmpb
adc
sbb
lods
inc
es
lret
push
jae
jl
mov
or
and
ja
arpl
icebp
subl
jmp
stos
fsubr
adc
xchg
shll
and
adc
cmp
scas
faddl
add
fadds
xorb
pop
pop
pop
mov
clc
pop
scas
jo
push
rorb
loopne
popf
jns
lcall
push
cmp
cmpsl
lea
ror
push
enter
inc
or
arpl
or
mov
scas
pop
outsb
push
in
mull
pusha
mov
mov
cwtl
push
fldcw
xor
out
dec
mov
pushf
adc
cmp
imul
in
mov
rclb
xlat
pop
das
and
mov
and
scas
iret
ss
cmp
out
sbb
mov
cmp
push
sbb
stc
push
dec
jae
mov
mov
stc
scas
add
bound
sub
clc
adc
push
fadd
mov
out
mov
or
xchg
or
dec
andl
adc
ret
mov
in
les
add
sbb
cmpsb
cli
pop
sbb
inc
inc
xor
push
fstl
fisubl
ret
dec
pushl
sbb
repz
out
loope
push
and
call
repz
sub
fistps
cltd
push
in
dec
ss
cwtl
dec
pop
mov
add
mov
dec
lcall
insb
in
add
bound
xchg
mov
clc
and
popf
adc
cmp
and
gs
xchg
outsl
mov
aam
mov
stos
and
ljmpw
xor
leave
scas
sbb
test
imul
mov
je
push
dec
sbb
push
pop
inc
xchg
sarl
cmp
xchg
sbb
jmp
test
sbb
loopne
xchg
inc
mov
out
dec
clc
add
jge
or
or
ljmp
movsb
cli
mov
sbb
stos
mov
jle
jno
repnz
mov
mov
loopne
jmp
jp
into
xchg
xchg
xchg
xor
ret
push
rcrb
sbb
fiaddl
subl
out
fadds
ljmp
mov
inc
cmpsl
call
xchg
sub
jmp
test
sub
add
ja
nop
mov
pop
pop
test
jno
movsl
jmp
aam
in
aaa
adc
loop
lods
cmpsl
dec
loope
cmpsb
aaa
aad
sub
test
rcrl
mov
and
mov
adc
push
ret
push
shlb
pop
insl
pop
popa
sub
clc
bnd
popf
and
push
ds
pop
orl
cmc
xchg
and
push
pop
ret
pop
ret
and
imul
pop
push
sub
mov
fdivrp
cmp
jp
and
popa
or
decl
ja
cmp
adc
test
lcall
mov
test
inc
es
and
popa
insb
sar
jns
pop
mov
xlat
jge
mov
lahf
loope
arpl
aad
sub
ret
fmull
aas
push
lret
mov
sbb
enter
cmp
mov
sub
fsubs
dec
and
ficoms
rcr
test
idivb
mov
fcmovu
pop
add
pop
fmul
jle
inc
out
xchg
jae
pushf
mov
pop
pop
mov
xchg
scas
in
pop
xchg
dec
int3
adc
add
mov
int
packsswb
ja
or
jnp
adc
nop
fstp
cmpsl
pushf
mov
jne
mov
sti
repz
push
movsb
xchg
pop
jb
inc
dec
data16
les
inc
test
je
fsubl
into
je
sbb
lcall
das
fdivrl
mov
inc
mov
out
sbb
shlb
pop
sbb
je
in
add
aad
cmp
fs
push
in
imul
push
out
rcrb
push
add
mov
fnsave
fidivs
push
mov
cmp
xchg
stc
cld
insb
cmpsb
std
dec
mov
jns
cmp
test
loop
fcmovu
or
xchg
dec
not
xorl
fcomp
mov
loopne
sahf
push
push
lret
xor
enter
