jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
push
push
push
lea
xor
rcr
rol
xor
mov
rcl
push
lea
and
ror
mov
mov
xor
neg
adc
rcr
mov
mov
and
ret
add
mov
mov
ror
add
mov
xchg
rol
rcl
neg
and
neg
shr
mov
not
mov
neg
add
neg
lea
not
and
mov
mov
mov
neg
mov
neg
shl
add
mov
mov
add
xchg
xor
mov
add
mov
mov
mov
xor
xor
mov
xor
neg
neg
mov
push
rcl
mov
mov
lea
lea
not
lea
rol
mov
mov
neg
neg
xchg
xor
pop
xor
neg
lea
lea
xor
xor
xchg
xor
mov
adc
lea
mov
and
xor
not
rol
lea
not
mov
neg
xchg
xor
xor
add
xor
xchg
add
rcr
mov
adc
add
rcl
xor
mov
add
and
mov
lea
and
xor
lea
mov
not
lea
mov
lea
mov
neg
shr
rcr
mov
mov
mov
mov
shl
not
add
xchg
mov
xchg
mov
add
neg
add
jmp
lea
ror
rol
neg
xor
mov
mov
lea
not
mov
mov
add
xchg
adc
mov
not
shl
lea
shr
lea
xor
mov
neg
mov
mov
add
shr
mov
rol
not
lea
xor
shr
not
neg
rol
xor
lea
neg
xor
xor
rcl
rcl
not
shl
shl
mov
xor
xor
lea
mov
xor
mov
mov
neg
and
rcr
not
not
mov
lea
xor
mov
not
xchg
xor
xor
xor
mov
and
not
mov
xchg
shl
xor
xchg
xor
mov
shl
mov
mov
xor
xor
add
rcl
push
call
not
lea
lea
not
lea
rol
rcr
not
push
lea
mov
mov
not
rcr
not
adc
neg
add
rol
mov
mov
mov
mov
xor
popl
mov
rcl
xor
lea
not
mov
lea
movl
mov
add
neg
neg
xor
xor
mov
neg
rcr
xor
mov
adc
lea
lea
mov
mov
xor
rcl
neg
lea
xor
mov
xchg
lea
xor
mov
mov
mov
not
push
rcl
xor
xor
xchg
mov
xor
rcl
push
rol
mov
rcr
xor
xor
not
lea
mov
pushl
adc
neg
xor
mov
xor
rcr
neg
not
pushl
shr
rol
add
rol
xor
lea
not
lea
call
rol
add
not
xor
not
mov
lea
xor
not
xor
xor
mov
lea
lea
lea
ror
lea
xchg
xchg
xor
neg
xor
lea
xor
xchg
neg
mov
adc
not
shrl
lea
xor
lea
xor
mov
mov
ror
mov
rcr
add
mov
mov
shl
not
mov
and
mov
neg
shl
xor
xor
xor
not
neg
push
add
rcl
add
neg
mov
mov
rcr
lea
xor
not
lea
xor
neg
lea
add
xor
popl
xor
lea
shr
lea
mov
mov
add
xor
lea
rcl
adc
mov
mov
xor
not
xor
lea
decl
jne
mov
mov
mov
mov
mov
xor
xchg
xor
xor
not
xor
mov
xor
mov
adc
lea
neg
mov
xchg
add
not
neg
mov
xor
mov
xchg
rcl
mov
mov
xor
jmp
shl
shr
mov
mov
rcr
mov
neg
lea
mov
movsl
jbe
pusha
adc
cs
sti
sub
test
sti
sub
sahf
sti
sub
push
jl
xor
and
push
negl
fidivrl
pop
dec
sbb
and
and
out
out
arpl
sbb
mov
pop
sub
loop
pop
sbb
fnstcw
insl
or
sti
jl
inc
js
lret
mov
and
mov
movsl
fcmovne
nop
and
push
dec
and
pop
inc
and
test
jbe
leave
add
jae
stos
decl
test
test
dec
nop
dec
pop
mov
scas
aam
dec
inc
lcall
add
xchg
inc
pop
sbb
push
jecxz
imulb
subl
and
xor
sub
stos
cmp
adc
rcll
test
inc
aad
rcll
insb
fcoml
int3
stos
scas
aad
push
stc
call
fisubl
sti
sub
and
jmp
test
mov
xchg
add
shll
sub
sub
mov
dec
and
ror
jp
arpl
or
cs
add
outsb
test
fisubrs
stos
js
or
sti
mov
inc
test
mov
inc
test
repnz
pop
mov
xchg
inc
or
test
repz
aas
stc
hlt
lahf
lods
insl
fisubrs
and
fildl
insb
fisubrs
clc
inc
cs
mov
movsl
sub
or
test
jo
movsl
aam
sub
and
or
sti
fimull
jmp
jo
push
push
lret
aad
mov
or
test
test
js
sahf
sub
push
adcb
xorl
cli
mov
stos
test
test
mov
xchg
push
jns
fisubrl
std
pop
xchg
jl
repz
jl
lahf
loope
sub
push
or
rcrb
scas
inc
call
es
ffreep
jns
bound
cmpsl
pop
scas
add
jg
daa
rcl
jmp
pop
sbb
pop
push
sbb
push
ds
cmp
xchg
fidivrl
push
movsl
push
sbb
jp
je
test
xlat
negl
mov
aaa
sub
sahf
pop
push
scas
adc
out
cmp
icebp
gs
lods
cmc
pop
mov
adc
xor
test
sub
pop
mov
out
jbe
jl
xchg
xor
out
sub
sub
push
mov
sbb
hlt
sbb
sbb
push
mov
xchg
ja
lcall
dec
cmpsb
insb
and
xor
xchg
mov
ja
and
xorb
aad
pop
push
cmp
pop
jl,pn
nop
sbb
mov
xchg
nop
push
fdivp
or
or
xor
cmpsb
insb
and
jo
mov
xor
sbb
xchg
shl
jl
fwait
es
fldenv
xor
scas
mov
sub
pop
loopne
inc
pop
shrb
mov
pop
sbbl
pop
mov
xor
xchg
out
pop
sbb
jbe
mov
xchg
in
js
adc
push
jnp
negl
out
and
fiaddl
xchg
pop
mov
fdivs
ljmp
add
int
jns
inc
scas
repnz
jmp
or
je
or
out
out
jmp
pop
sbb
pop
push
sbb
push
cs
rcl
rcl
pop
arpl
mov
mov
push
mov
jnp
negl
pop
fstpt
sti
mov
enter
xchg
sarb
mov
sbb
imull
fisubl
push
pop
rcrl
lods
insl
and
jp
inc
lds
rcr
and
xchg
pop
in
jnp
fimull
mov
rcr
or
js
mov
lds
and
insb
and
mov
pushf
pop
mov
xchg
fimull
ljmp
lahf
push
xor
or
push
aad
jo
shrb
mov
cmpsb
test
add
rcr
clc
faddl
lea
xlat
outsb
and
call
pop
xchg
shl
sarb
arpl
pop
xchg
fiaddl
nop
cmpsl
add
rclb
rcl
int3
jl
fnstcw
fisubl
or
xor
or
fwait
push
subb
push
mov
add
fldcw
pushf
insl
test
scas
jmp
and
rcl
loop
pop
pop
sub
push
pop
mov
xchg
out
in
jl
xchg
subb
subl
insb
scas
add
push
les
insb
push
jl
xchg
mov
xchg
pop
into
sarb
roll
sub
lds
pop
jmp
push
scas
cld
psubq
cwtl
lods
xor
insb
and
out
mov
push
add
shl
and
ja
cltd
out
clc
jecxz
lds
sbb
mov
and
insb
and
je
xchg
push
rol
sarb
fldcw
ret
mov
imull
fistpl
std
xchg
pop
out
jl
flds
shrb
xchg
repz
es
std
pop
hlt
cmc
ja
lock
ljmp
xchg
fninit
popa
jno
jl
fstenv
pop
adc
pop
xchg
loope
sub
jl
xchg
mov
xchg
pop
out
jl
xchg
icebp
stc
ficoml
cmpsb
xor
mov
sub
outsl
and
fcoml
and
stos
mov
not
pop
xchg
pop
sbb
jl
push
pop
nop
scas
call
in
cld
scas
out
pop
push
push
scas
out
rclb
cmpsb
out
or
xor
negl
push
mov
sbb
jl
fwait
jecxz
inc
out
jl
stos
xchg
out
sub
push
lods
jno
xchg
ror
jle
xchg
mov
repz
stc
ficompl
mov
or
stos
fsts
cmpsb
adc
enter
dec
push
adc
inc
popf
lds
xchg
outsb
xchg
mov
notb
cli
test
cwtl
ds
mov
cltd
inc
fsubrl
cmp
inc
sahf
pop
xlat
xchg
mov
nop
mov
cmp
cltd
mov
sub
mov
ljmp
push
push
sbb
out
scas
mov
mov
jne
cli
mov
mov
adc
mov
mov
adcl
in
sbb
mov
push
push
fcmovu
negl
cmpsl
pushf
ljmp
shrl
jne
rcrb
push
pushf
pop
out
mov
jnp
xchg
jno
icebp
pop
fldt
cmp
adc
imul
fldcw
idivl
movsl
jne
decb
xchg
jnp
xchg
hlt
push
jle
jb
pusha
dec
arpl
shl
lods
in
les
in
int3
rcl
roll
fsts
mov
jo
test
lcall
mov
pop
push
sbbb
shl
mov
xlat
fisubrl
aaa
sbb
xchg
enter
push
rcr
push
and
popa
xchg
fwait
jbe
xchg
fcomi
and
or
hlt
rcr
sar
out
xorb
mov
fwait
ss
cmp
idivl
cmp
mov
adc
bound
testl
adc
aaa
das
rcll
fldenv
test
dec
pop
xchg
mov
out
popf
pop
or
leave
xchg
clc
xchg
es
scas
inc
out
mov
out
into
addl
hlt
dec
loope
or
in
insb
pusha
lahf
outsl
dec
sbb
test
lahf
mov
sub
scas
out
popf
pop
xchg
fldenv
cmpsb
out
xor
ret
cli
mov
es
ror
and
or
outsl
cmpsl
pop
mov
mov
inc
xlat
lret
xchg
shrb
sbb
icebp
sub
and
test
imul
sbb
push
sub
jnp
or
pusha
rcrb
cwtl
loope
push
ret
mov
pop
xchg
hlt
push
sbb
aaa
les
adc
lea
jns
sti
mov
xor
jecxz
dec
jo
adcl
scas
jb
push
jo
in
push
pop
push
fisttpl
das
pushf
pop
lret
imul
jg
imul
xlat
insb
mov
out
xchg
mov
push
push
lahf
wbinvd
stc
fcmovnbe
adc
roll
add
xchg
mov
movsl
ret
xor
test
push
cs
sbb
jmp
jg
pushf
jge
fs
test
xor
jge
scas
cmpsb
pop
sbb
out
test
ficompl
icebp
push
ret
insl
sbb
shlb
pop
mov
fstp
aaa
or
mov
mov
inc
scas
push
jb
sbb
push
push
sete
scas
cmp
push
push
dec
int3
adc
mov
xor
scas
jae
les
imul
push
ds
repnz
clc
add
add
mov
out
push
push
cmp
shrl
jge
lcall
fucom
jb
adc
push
stc
lods
xchg
mov
mov
repnz
flds
rep
and
and
mov
test
rorl
cmpsb
lret
and
nop
lahf
jo
inc
add
push
mov
imul
fwait
or
dec
addr16
fistl
dec
jnp
scas
fistpll
and
push
out
or
in
jo
scas
push
mov
lahf
cmpsb
cld
repz
xchg
in
daa
sub
fs
clc
fsubl
nop
sub
jle
jecxz
loopne
psrad
cmp
rcr
pop
nop
movsl
lock
xchg
ret
mov
clc
jns
stos
push
adc
addr16
imul
lods
sbb
fwait
push
add
lahf
or
fidivl
les
xchg
sbb
pop
out
sbb
lret
inc
lock
iret
cli
xchg
pop
or
mov
lock
icebp
xchg
ss
fbstp
and
sbb
push
sti
out
lods
add
xchg
xchg
jae
push
cwtl
mov
mov
jnp
sbb
insl
or
mov
mov
into
sbb
or
xor
pop
push
pop
adc
xchg
jae
push
cltd
pop
ret
data16
pop
arpl
jns
xor
js
push
pop
jg
into
pusha
jmp
sahf
sbb
pop
push
pushf
or
inc
std
mov
adc
xor
hlt
xchg
in
rcrl
mov
jge
pop
xchg
ss
mov
imul
sti
stc
cmpsl
fwait
ret
xchg
out
adc
or
jne
push
cmp
sbbb
and
xchg
fnstsw
add
fldt
aad
orb
mov
push
iret
movsl
scas
cmpsl
xchg
je
sti
adc
xchg
icebp
stos
in
push
cli
shl
cmp
mov
cmp
scas
or
pop
push
cmp
adc
ror
jmp
adc
adc
push
mov
test
js
shl
mov
sbb
aaa
jno
loope
fnsave
jle
repz
pop
dec
bound
pop
add
mov
fldt
test
jg
sar
cmc
push
mov
icebp
mov
lea
test
cld
cmc
mov
je
xor
cltd
ret
lahf
inc
cld
dec
imul
jnp
push
and
fsts
push
mov
inc
popf
mov
push
cmp
mov
mov
into
sub
pop
insb
and
push
sbb
mov
mov
subb
mov
test
cmp
jne
pop
repz
push
jmp
mov
mov
xor
pop
clc
sysexit
clc
popa
bound
ret
sti
sahf
clc
xchg
shl
lea
test
cmp
xlat
dec
in
mov
sbb
sti
dec
hlt
out
fcomip
mov
and
ljmp
aam
xor
xchg
sbb
cmp
into
adc
inc
jecxz
sbb
movsb
pop
xor
sbb
add
fsts
aam
xor
lcall
mov
jnp
xlat
xor
outsb
xchg
xchg
int3
int
ret
dec
aas
fwait
ror
into
mov
jecxz
jp
cmc
mov
add
mov
mov
adc
push
ret
or
nop
out
sbb
jecxz
or
pop
shlb
repnz
repz
pop
int3
push
xor
enter
mov
adc
clc
lock
pop
dec
cmp
sbbl
popf
imul
xchg
jecxz
pop
push
mov
mov
repz
mov
or
mov
or
cmp
xchg
push
ret
lea
xorl
je
mov
fdivl
and
dec
test
aam
dec
pop
daa
aas
in
rcrl
mov
jmp
cmp
push
push
bnd
mov
lret
ret
stc
or
pop
sti
xor
and
movsl
push
push
lock
push
mov
outsb
dec
xchg
out
add
dec
jp
fld
and
mov
push
sti
add
cs
push
mov
popa
iret
rorb
into
xchg
add
sub
jnp
negl
push
push
int3
dec
mov
or
push
aad
fucomi
mov
or
ja
lock
outsb
xchg
jge
insb
cmpl
lret
adc
xchg
fnstsw
ret
xchg
and
js
cld
out
aas
iret
out
push
shll
nop
dec
or
cmp
and
mov
sarb
dec
lahf
cwtl
sub
cltd
mov
jnp
sbb
ja
pop
js
es
stc
sti
iret
inc
int
mov
ds
lcall
cltd
popa
mov
pop
test
mov
sbb
mov
mov
mov
pop
xchg
or
shl
push
shlb
jl
pop
ja
xor
subb
lds
adc
in
ror
pop
xor
xchg
dec
sub
or
pop
lret
aaa
inc
test
inc
jg
lahf
lahf
cld
push
jmp
faddp
icebp
xor
aad
jnp
xor
rol
jo
stos
jmp
jno
icebp
iret
or
xor
nop
aad
repnz
repz
push
inc
inc
or
and
add
.byte
dec
js
idiv
