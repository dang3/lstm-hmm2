mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
sub
push
mov
mov
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
mov
jmp
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
add
push
lea
push
push
call
add
pushl
lea
push
pop
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
push
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
ret
push
mov
mov
imul
sub
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
div
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
leave
ret
push
mov
push
push
mov
push
pop
cmp
jb
lea
push
xor
mov
test
jbe
sub
push
mov
mov
mov
lea
lea
mov
ror
imul
xor
mov
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
test
je
push
pushl
pushl
pushl
call
mov
mov
push
call
dec
jne
pushl
pushl
pushl
call
mov
pop
jmp
mov
pop
ret
jmp
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
push
push
push
mov
mov
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
push
push
push
xor
push
push
call
mov
mov
rol
mov
mov
cmp
je
mov
jmp
push
call
mov
mov
add
movl
mov
push
shl
add
incl
push
push
push
call
push
push
mov
push
mov
call
cmp
je
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
push
push
push
call
push
push
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
push
pushl
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
lea
mov
pushl
and
pushl
push
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
push
call
pop
pop
pop
xor
pop
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
jmp
add
add
std
xchg
mov
xchg
in
aad
adc
movsl
movl
fdivs
or
stos
sbb
cmc
dec
fidivrl
repnz
rol
gs
mov
add
out
xchg
mov
xchg
out
repnz
cwtl
cmc
outsl
imul
mov
xchg
in
aad
adc
testl
fdivs
or
stos
sbb
lds
cmp
or
daa
cmc
cmpsl
aam
js
sti
fisubs
lcall
imul
lret
mov
fisttpll
mov
push
shll
stc
jge
inc
inc
in
jecxz
wrmsr
popf
pop
sti
push
nop
sub
outsl
dec
mov
adc
lods
jns
push
pusha
ret
cwtl
iret
aad
cmpsl
xor
cli
mov
inc
add
sbb
and
xchg
push
lods
and
inc
add
pop
addb
pop
inc
lea
in
test
sbb
or
add
test
xchg
mov
xchg
dec
mov
xor
mov
fcmovnb
outsb
pop
lods
movsb
add
mov
add
shrb
cmpsb
add
jmp
jg
je
outsb
aaa
dec
push
and
pop
mov
ffreep
add
filds
lods
int3
xchg
or
mov
in
movsl
test
add
push
mov
xchg
stc
xchg
filds
sti
add
jle
loopne
ret
outsl
push
daa
stos
sbb
mov
mov
cwtl
jb
pop
push
je
lahf
cmp
push
loop
out
int3
fldl
sbb
sbb
movsl
dec
pusha
mov
in
sbb
fsts
dec
stos
mov
in
call
sub
std
lods
xlat
mov
adc
jno
stc
movups
sbb
mov
js
cltd
outsb
in
lock
add
add
rol
dec
ja
pop
jmp
test
cmpsb
arpl
test
inc
cmpxchg
jge
cmp
adc
jmp
xchg
das
cltd
xor
repnz
mov
movsl
jmp
aas
xor
mov
mov
jne
jb
idivl
fsub
sbbb
movsb
sub
mov
movsl
mov
loopne
rcl
aas
jno
in
jle
lea
inc
pop
add
mov
mov
int3
cmpps
mov
push
mov
xchg
cmp
bound
xchg
inc
hlt
push
ljmp
add
lret
jecxz
push
dec
daa
inc
and
push
push
inc
lahf
les
xor
push
pop
mov
mov
cmp
sub
addl
inc
pop
mov
mov
aas
int
stc
jmp
fldcw
popf
test
add
fistps
push
and
aaa
outsb
popf
sbb
mov
lock
pop
sar
das
jb
push
xor
in
cmp
mov
setne
xor
dec
sbb
pop
das
jp
aas
pop
xor
fwait
cmp
and
mov
pop
push
loopne
pop
push
stos
insb
iret
mov
dec
fbstp
clc
orb
in
push
ja
sub
pop
inc
mov
dec
add
pushf
cmc
test
add
add
xchg
pop
dec
fcomp
fisttps
xor
ds
push
adc
mov
and
add
rcll
dec
cmp
jns
dec
jo
adc
mov
inc
cs
js
popf
mov
into
add
adc
sbb
xor
aam
mov
or
addr16
in
mov
mov
sbb
or
or
dec
inc
nop
and
add
add
pusha
ja
adc
xor
ljmp
pop
sahf
and
mov
pusha
sbb
xchg
sbb
push
or
push
mov
mov
out
fisubrl
insl
mov
rorb
ljmp
andb
decb
lret
inc
inc
jg
pop
cs
movl
adc
cld
cmpsl
js
ss
pusha
ffreep
enter
jge
loop
cs
fsts
mov
pushf
add
and
add
add
dec
xchg
dec
push
and
imul
out
in
push
sahf
enter
cwtl
orl
sub
dec
jmp
mov
pop
and
sub
insl
and
pop
mov
pop
mov
dec
lea
jge
dec
gs
dec
popf
inc
repnz
and
fldl
xchg
data16
dec
adc
mov
jge
ss
jg
orl
shl
or
jns
mov
je
mov
out
popf
push
xchg
xchg
ret
nop
es
ret
mov
sti
popf
ficompl
mov
pusha
je
add
or
sti
and
imul
add
sbb
jb
aad
sub
add
or
lods
fisubl
adc
lods
out
pop
inc
adc
add
orl
andb
sbb
pop
mov
cmp
popf
adc
add
aas
int3
iret
test
push
mov
test
ds
aam
popf
jo
rclb
mul
xor
pop
pop
ljmp
push
addr16
pop
sub
fistl
cmp
sbb
mov
push
cmp
daa
repz
fadd
jnp
xor
add
aam
test
test
fcmovne
daa
call
xchg
xlat
cmpsb
cmc
in
aam
aaa
js
test
mov
decb
sbb
push
sbb
addb
in
test
mov
enter
cmp
ds
sbb
lds
repz
insl
xor
shll
push
jmp
mov
push
jne
fwait
cwtl
jl
dec
sbb
lods
xor
and
sub
out
dec
test
scas
mov
push
ret
addr16
popf
rcrb
inc
add
cmpsb
shlb
dec
loope
mov
jbe
jge
enter
lret
test
mov
addr16
mov
lcall
cmp
push
div
push
sub
loop
push
es
outsl
mov
mov
jb
sbb
or
ljmp
or
and
xchg
out
pushf
mov
fs
jge
push
xchg
lock
lret
scas
in
ss
imul
add
add
add
add
dec
or
or
xor
aam
jle
jne
adc
std
cli
pushf
in
jb
jle
xchg
fwait
call
mov
sub
cmp
xchg
stc
arpl
imul
sbb
aas
cmp
and
scas
inc
cli
out
xor
mov
pop
inc
push
rol
push
fs
mov
xor
push
and
jno
mov
mov
add
add
xor
scas
lock
cmp
lods
aaa
sub
fimull
sbb
sub
sar
sti
repnz
nop
fsubl
test
or
cmpsb
xor
add
repz
jle
adc
xor
xchg
sub
jno
insb
ret
insb
push
mov
dec
pop
and
or
jecxz
pushf
mov
orb
push
mov
inc
es
adc
push
jg
inc
and
int3
push
ret
add
add
lret
pop
std
inc
xchg
lods
sub
xchg
ljmp
dec
pop
jl
mov
jbe
aam
add
mov
mov
leave
pusha
addr16
mov
repz
loop
push
movsb
sub
push
es
in
mov
pushf
cs
inc
insb
fsubrl
mov
stos
xor
shll
jmp
mov
jb
stos
push
sbb
push
add
add
add
and
dec
notl
mov
or
mov
loop
sub
stos
push
das
into
es
fs
icebp
xchg
out
mov
mov
sbb
xor
ret
ret
add
les
cmp
loop
mov
sahf
test
js
repnz
push
inc
mov
mov
dec
pop
stc
mov
push
cwtl
leave
shlb
lcall
cmp
add
xchg
push
std
pop
cmp
pop
dec
and
js
lahf
sub
jecxz
es
pop
in
lret
leave
cmpsb
repz
jmp
xchg
jmp
push
ljmp
call
int3
xor
call
inc
mov
xchg
daa
iret
outsl
cmc
addl
les
sbb
adc
sbb
movsb
lret
cmp
push
rol
aam
rolb
dec
cmp
mov
aaa
add
test
xchg
add
cld
or
lods
filds
dec
mov
popa
jge
lock
inc
loope
mov
cmp
cmp
addr16
jae
loop
shll
pop
jecxz
fchs
lea
cltd
mov
andl
mov
fldenv
jne
inc
or
inc
jl
out
aaa
scas
push
arpl
cmovl
pop
movsl
inc
push
add
push
out
pop
out
fidivl
cmp
inc
cltd
xor
push
add
shll
ja
adc
jae
and
pop
rcl
and
arpl
jae
popf
out
pop
gs
cmpl
push
dec
sbbb
push
js
fistps
fidivrs
xlat
pop
push
xor
mov
xchg
lea
push
xor
dec
sbb
inc
inc
sbb
pop
cli
sbb
xchg
insl
enter
sbb
xor
fcmovu
add
fnstcw
test
xchg
popa
mov
rclb
add
in
ja
cwtl
or
pop
in
cmp
adc
lret
notb
repz
jecxz
mov
aad
aaa
xchg
in
add
inc
jecxz
fnstsw
xor
push
jne
or
mov
imul
cli
mov
js
cwtl
mov
addr16
push
test
mov
pop
lods
jp
mov
scas
hlt
fbld
rcrb
add
scas
sub
xchg
in
lods
jge
shr
mov
or
sbb
inc
xor
sahf
adc
popa
test
push
lock
roll
stc
sub
push
pop
and
jecxz
iret
or
push
fdivr
mov
in
outsl
data16
fcomps
adc
ret
lea
rcrl
pusha
mov
mov
mov
pop
add
mov
into
mov
iret
stos
mov
jle
push
lret
mov
popf
emms
dec
shrb
xor
push
sub
or
jmp
xor
fsubl
push
inc
xchg
or
and
xrelease
adc
pushf
push
inc
push
movsl
testb
mov
or
inc
cmp
repnz
mov
mov
sbb
jle
add
adc
jns
fwait
scas
into
adc
cmp
stos
js
adc
push
jmp
or
pushf
orl
roll
iret
js
ss
mov
pop
cmp
cmpsl
popf
mov
in
or
repz
shrl
mov
out
adc
jbe
xor
jg
arpl
lds
imul
test
daa
push
sub
adc
dec
dec
faddl
add
add
addr16
lods
jp
inc
ja
cmp
fcoml
int
ficomps
fmulp
incl
sub
mov
out
shufps
dec
jg
cmp
push
cmp
daa
pop
cmp
mov
out
cmp
stos
orl
pop
fldl
icebp
into
push
test
jns
cmp
lahf
jbe
mov
pop
xchg
add
add
cmc
xchg
cmp
out
nop
xlat
enter
in
jge
cltd
lea
test
jge
pop
jb
or
push
cli
cltd
inc
push
cwtl
mov
sbb
js
sub
shrb
outsb
addr16
outsb
xchg
out
xchg
cltd
js
enter
mov
fidivl
cltd
mov
push
xchg
pop
xchg
hlt
or
add
addb
rcll
js
adc
jns
movb
and
mov
cli
inc
jl
lahf
adc
dec
mov
arpl
sbb
ss
mov
ret
cmp
int3
dec
jmp
sub
loopne
movsl
xchg
shlb
jmp
leave
push
scas
lret
push
mov
std
xchg
adc
dec
inc
pushf
std
addr16
lea
mov
mov
and
xchg
cmpl
or
jmp
adc
add
add
in
das
in
pusha
jmp
push
pop
test
or
stos
mov
or
mov
add
xchg
insb
repnz
in
or
sbb
jbe
call
push
rcrb
xchg
mov
sahf
lahf
or
testl
pop
divb
xchg
iret
pop
dec
stc
xchg
sbb
mov
scas
pop
mov
hlt
push
sbbl
orb
stos
clc
into
inc
ret
imul
cmovnp
lret
add
cmp
xor
jns
leave
addr16
stos
pop
mov
cmpsb
dec
mov
iret
lcall
and
stos
push
aaa
aad
mov
das
add
pusha
jge
rcl
cmp
pushf
cld
cs
adc
jmp
nop
or
mov
dec
addr16
xchg
daa
jg
pop
or
mov
mov
xchg
test
into
movsb
fcoml
adc
int3
mov
popa
push
mov
dec
add
add
cs
xor
adc
xchg
sbb
movsb
or
fcoml
ds
sbb
scas
cmpb
adc
in
arpl
fs
pop
dec
out
addr16
add
in
mov
push
mov
pop
add
pop
xchg
pop
sahf
or
loope
lcall
hlt
dec
xchg
shrl
cmp
call
mov
cmpsl
out
sub
mov
push
fldt
sub
ds
mov
pop
cmpsl
addr16
clc
mov
and
dec
scas
pop
cmpsb
lret
mov
fildll
shrb
jle
movsl
shlb
std
mov
mov
xor
xor
arpl
pushw
mov
jmp
mov
add
lcall
push
push
inc
inc
sbb
les
push
push
add
add
jmp
push
adc
shrb
cmp
mov
in
push
cld
dec
adc
dec
adc
xor
mov
sbb
jae
cmpsl
lea
and
test
fwait
movsl
loope
and
xlat
sbb
inc
lea
jecxz
xchg
inc
adcb
je
imul
or
xor
mov
aaa
mov
or
adc
stos
xor
push
inc
sub
xchg
jge
aaa
test
push
push
cmp
pop
push
inc
pop
xor
mov
sub
push
cwtl
adc
and
addr16
mov
sbb
movsl
leave
inc
push
cli
scas
pushf
mov
outsb
es
pop
rcrl
adc
aaa
mov
es
fildl
jo
int3
mov
adc
and
ds
stc
outsb
sti
jp
decl
and
inc
rolb
popa
cmc
mov
inc
mov
add
add
dec
stos
jae
syscall
inc
xchg
fwait
jbe
loope
out
and
loopnew
mov
dec
cmp
xor
dec
std
lcall
xchg
jl
cmp
mov
mov
xor
pop
or
mov
push
fldenv
push
add
aas
test
cmpl
or
stos
inc
fwait
outsl
cltd
test
adc
cmp
dec
out
inc
push
cltd
push
pop
test
and
push
leave
in
add
add
jp
mov
movsl
test
mov
and
push
stos
mov
push
push
je
andl
xchg
mov
sub
dec
push
mov
scas
add
sub
pop
mov
sub
mov
inc
ret
aam
cld
lods
mov
adc
or
push
aam
pushf
jp
loopne
inc
cld
imul
xor
test
shr
dec
ja
aas
lret
xchg
dec
outsl
cmp
ja
lods
xchg
mov
jecxz
leave
jge
add
add
inc
mov
scas
jp
add
xlat
in
sub
test
sbb
push
das
lfs
in
jg
shll
xchg
js
sti
movb
sub
mov
push
fidivs
add
jb
sarb
push
scas
mov
mov
and
or
push
cmp
adc
jmp
out
icebp
shrl
push
pop
loop
lds
add
inc
pop
stc
add
mov
add
mov
sbb
mov
addr16
mov
hlt
xchg
inc
mov
mov
test
pop
or
movsb
jl
cmpsb
cwtl
pushf
shr
loope
jp
repz
push
inc
add
dec
xchg
out
loope
mov
stos
inc
push
push
push
adc
mov
pop
test
dec
push
and
xor
sub
or
scas
push
xor
inc
je
test
dec
leave
arpl
add
daa
sub
rclb
shll
pop
push
push
xchg
testl
jge
adc
push
aad
test
inc
push
mov
lds
xchg
mov
adc
lea
or
sbb
dec
pop
aam
das
add
dec
pop
arpl
stc
out
stc
into
aaa
sahf
je
mov
lret
cmpb
ss
push
dec
add
fstpl
call
mov
adcb
inc
int
adc
pop
lret
cmp
and
mov
pushf
sbb
xchg
push
clc
mov
test
add
jns
pop
rclb
sahf
fstpt
stos
sub
xchg
pop
mov
inc
mov
fcomi
nop
mov
inc
lods
ja
mov
jge
ss
push
fbld
mov
in
inc
mov
ja
inc
fwait
stc
leave
mov
jne
gs
fists
add
add
add
add
inc
pop
out
xor
xchg
nop
or
int3
test
and
rol
cs
and
pop
or
popa
inc
or
roll
je
xor
call
or
push
fcomip
inc
stos
jmp
scas
ja
mov
xor
icebp
adc
mov
add
lods
inc
xchg
mov
sbb
mov
and
stc
xchg
pop
clc
xor
fwait
push
xchg
sub
stos
mov
and
add
bound
push
xchg
mov
mov
mov
pushf
pop
xchg
and
cmp
mov
add
je
xchg
lahf
loopne
sub
cmpsl
mov
data16
call
mov
aam
sbb
and
lds
leave
popf
idivb
movsl
into
pop
hlt
dec
fdivs
cmpsl
js
mov
aas
xchg
dec
mov
adcb
test
push
sbb
aas
in
add
push
lcall
jb,pt
adcl
sub
push
jp
sbb
push
fldt
mov
cwtl
cmp
sub
scas
popa
adc
xchg
jecxz
or
dec
lds
jb
push
shl
out
push
sbb
pop
loopne
cmp
arpl
adc
les
xlat
xchg
imul
add
add
add
sbb
pop
not
shll
xlat
pop
push
xchg
popa
pusha
cmp
mov
and
fld
scas
jp
icebp
or
movsl
fidivl
cmpsb
add
jg
sarb
mov
mov
cmp
and
fdivr
mov
sub
dec
add
scas
iret
push
or
jno
or
out
adc
lods
ret
je
sbb
stos
jns
sbb
cmp
add
cld
pop
xor
adc
push
adc
sbb
push
dec
inc
jecxz
push
push
stos
mov
or
inc
xor
subl
sbb
mov
xchg
enter
mov
insb
lret
sbb
mov
or
and
jae
movsl
hlt
rcll
add
push
inc
and
pop
dec
mov
mov
mov
sub
mov
aam
jns
lret
rclb
push
fiaddl
add
jecxz
scas
je
mov
sbb
leave
or
negl
div
les
dec
test
jbe
bswap
xchg
dec
inc
pop
mov
arpl
xor
sub
out
repnz
sti
mov
mov
adcb
xor
fcoml
ror
add
ds
jg
andb
lock
mov
add
jne
shll
xchg
iret
call
sub
aam
sub
inc
xchg
lock
push
cmp
sub
enter
mov
pop
repnz
insl
xor
ficomps
mov
cli
mov
cmp
mov
sub
mul
push
mov
xor
mov
and
mov
jmp
daa
mov
lds
ret
mov
push
adc
inc
adc
push
jae
enter
mov
loop
mov
fstpt
xor
push
jo
sub
jo
gs
cld
sub
jae
jmp
sbbb
sub
push
mov
fisttps
mov
cvtpi2ps
cmpsb
mov
push
dec
stc
movsb
cld
lret
aas
sub
mov
popf
cmpsb
jg
cmp
mov
loop
adcb
arpl
aaa
fistl
outsb
ja
pop
gs
mov
push
cmpb
add
add
jne
cmp
or
cmp
hlt
js
sti
lret
mov
shlb
adc
add
pop
mov
or
pop
mov
out
sbb
mov
mov
repz
lcall
fwait
lods
xor
xchg
add
mov
push
arpl
jg
dec
test
movsb
cmpsb
sbb
pop
xor
mov
add
add
cld
sbb
les
cmp
fs
pop
sbb
jg
fimull
mov
sub
in
mov
mov
lret
dec
sub
mov
mov
dec
aas
and
imul
or
flds
ret
sbb
dec
jle
addr16
mov
test
mov
mov
pop
sub
cltd
inc
clc
push
xor
imul
data16
jbe
jo
sub
popf
mov
add
jg
cmp
or
popa
iret
ja
bound
inc
xor
lods
add
daa
enter
add
jge
ficompl
xor
sub
dec
push
mov
jmp
test
or
fldenv
push
sbb
ss
cmovge
aad
push
loopne
repnz
cld
cltd
rcll
pop
lea
ja
hlt
push
mov
push
push
repnz
test
cmp
lods
jl
loopne
add
pop
mov
loopne
in
lret
sti
pop
imul
fisubrl
cmp
stc
push
xor
out
jge
negl
add
hlt
cmpsl
add
mov
sub
pop
jae
shr
jbe
push
and
dec
gs
negl
scas
cmp
fs
mov
add
adcb
pop
mov
jne
insl
dec
or
pop
and
cmp
repz
popf
adc
scas
sbb
add
add
mov
sti
pop
pop
jae
sbb
mov
jle
jle
or
lods
in
ljmp
push
lods
adc
cmp
and
scas
movsb
sti
pop
cmp
test
lods
lcall
repz
push
xchg
lret
test
out
add
sahf
icebp
jp
add
aas
inc
mov
sub
stos
pop
in
pusha
jno
pop
in
dec
ds
mov
add
add
dec
push
sti
int3
add
mov
lret
add
cmp
aad
jl
idivb
clc
or
fwait
js
ret
iret
jae
inc
lods
add
pop
popf
xchg
mov
mov
hlt
sub
xchg
xor
stc
mov
std
rorl
xor
mov
add
stos
add
sbb
aad
das
insl
mov
outsb
imul
std
addb
int
ret
push
or
jp
outsl
outsb
loop
pop
cs
add
jne
flds
or
loop
es
jmp
jl
cmpsl
adc
lds
imul
in
ljmp
div
cmp
mov
mov
inc
movsb
aad
fimull
push
test
out
xchg
jnp
mov
pop
scas
aas
mov
mov
add
sbb
dec
adc
fbld
cmp
insb
repz
cli
pop
fisubrl
flds
std
dec
xor
or
stc
cmpl
jle
or
push
fwait
test
inc
push
les
ss
or
and
sub
add
pop
push
iret
or
inc
mov
sarl
movsl
cmpb
or
jo
imul
jne
jmp
idiv
std
test
int3
and
in
or
add
add
add
add
add
push
push
mov
add
lahf
push
fnstenv
cmpsl
pop
outsb
xchg
sbb
scas
adc
and
idiv
push
sti
adc
mov
mov
lcall
mov
xorb
shll
pusha
push
fcoms
sub
sub
arpl
pop
cmp
cmp
xchg
pop
fbstp
add
mov
sub
push
xchg
mov
mov
xor
xor
add
add
xchg
cltd
dec
add
pop
mov
imul
xlat
lods
movsb
push
cmp
insb
icebp
into
mov
fsubrl
add
movsl
sub
arpl
inc
mov
push
push
ss
lods
jmp
pop
jle
lret
xchg
cmp
mov
mov
sub
shrb
sub
inc
push
xchg
inc
push
mov
mov
mov
lea
popf
push
mov
adc
call
add
cwtl
or
loope
sbb
in
adcl
stos
imulb
loop
pop
mov
popa
mov
jmp
sub
pop
push
inc
push
shll
mov
adc
ja
add
push
mov
jmp
in
xchg
mov
repz
fwait
push
dec
clc
jae
mov
cltd
xlat
mov
ljmp
daa
in
hlt
cmpsb
inc
xor
push
and
or
enter
xchg
add
scas
test
push
sahf
add
lret
xchg
dec
pusha
in
xchg
mov
fistpl
cli
pop
jl
mov
inc
insb
loop
sub
mov
push
pushf
fcmovnu
daa
and
adc
mov
adcl
addl
cmp
mov
daa
and
or
mov
repnz
stos
and
das
jno
lret
jmp
lods
stos
or
mov
mov
sbb
mov
pusha
fbld
xchg
push
cmc
mov
sarb
iret
or
out
cmp
or
lahf
rcr
ljmp
lods
and
fcmovnb
idivl
mov
shlb
int3
jae
cmp
inc
pop
ljmp
cli
jmp
cmp
cmc
aaa
push
push
push
lods
mov
add
sub
pop
sti
add
jb
rcll
inc
adc
mov
push
add
sbbl
push
adc
cltd
clc
inc
int3
fcmovne
aas
rolb
lret
aad
out
push
daa
cmp
je
mov
cld
lret
jmp
or
adc
cmp
dec
push
xchg
mov
scas
xchg
dec
es
fldl
jmp
or
jl
pop
bound
ret
sbb
pop
inc
sbb
lret
sarb
sub
aaa
std
pop
push
dec
mov
in
ljmp
push
fldt
testl
outsb
negl
pusha
push
or
je
lds
push
push
aam
sbb
mov
testb
out
rep
faddl
inc
mov
movsb
jmp
sbb
call
pop
mov
shrl
in
fisubs
add
and
cmp
mov
jnp
testb
cmc
mov
das
inc
clc
cltd
cmp
and
push
lods
gs
push
inc
pop
loopne
roll
sbb
fdivp
xchg
sub
or
fnsave
sub
rol
mov
push
cmp
jecxz
das
cmpsl
in
xor
inc
pop
jnp
add
in
mov
outsb
sbb
and
xchg
push
sub
repz
add
andb
inc
scas
jnp
inc
fldcw
fisttps
xor
rep
sub
adc
dec
lds
fstpt
lods
rorb
into
add
fiaddl
pop
gs
pop
daa
mov
xor
repnz
orl
test
ret
inc
jecxz
mov
pusha
push
sbb
adc
cli
adc
int3
mov
mov
das
cmpsl
sub
sub
out
xor
shlb
imul
xor
lret
test
js
add
add
cmc
cltd
jae
xor
mov
stos
out
insb
add
mov
xchg
mov
js
push
mov
ja
adc
jae
movb
add
je
sub
daa
shr
push
jo
cltd
pop
idivb
imul
add
cltd
shll
adc
xor
xchg
std
inc
push
sahf
pop
in
rclb
mov
out
enter
lods
insl
push
jae
inc
test
add
stos
icebp
pushf
imul
stc
loop
imul
push
jo
push
mov
push
xor
push
mov
imul
dec
popa
pop
xchg
cmp
sub
xchg
push
jbe
test
or
shlb
adc
push
pop
cmp
xor
sbb
xchg
insl
repz
minps
xchg
inc
mov
mov
push
mov
xchg
sbb
push
jae
jo
jne
mov
add
add
stos
call
mov
jmp
mov
pushf
dec
dec
clc
jae
imul
sub
jge
or
ror
mov
fprem
xchg
and
lds
dec
push
data16
scas
xorb
mov
or
aas
js
mov
sub
sub
pop
ss
jb
pop
scas
lret
rcrl
shlb
out
cmp
data16
pop
or
fdivrs
mov
pop
insl
jae
add
out
push
in
rclb
rcrl
lahf
into
ret
je
pushf
push
push
in
sbb
jecxz
fs
hlt
jecxz
test
add
cltd
mov
push
dec
mov
mov
xor
cmpsw
aaa
jmp
mov
or
xor
mov
inc
mov
lret
inc
mov
insl
dec
sbb
mov
cmp
add
add
icebp
sub
mov
jnp
lret
loop
xchg
test
repz
popa
out
stos
cmc
cmpsl
xchg
mov
in
lret
and
push
ret
mov
js
dec
jl
pop
into
inc
add
sbb
inc
lret
iret
jbe
and
lahf
es
sbb
jae
lret
cmpsl
and
negl
loope
or
pushf
push
inc
push
subl
jl
and
add
or
inc
je
scas
nop
es
push
push
cld
dec
add
pop
lock
xchg
addr16
mov
xchg
movsl
adc
in
add
call
dec
xchg
sbb
aam
cmp
xchg
push
sbb
jae
jg
fnstenv
stos
push
pushf
mov
es
iret
movzwl
loopne
dec
and
and
or
push
std
xor
push
cmp
stc
nop
call
rorl
les
xor
shrb
lods
stos
xor
dec
or
add
add
lods
inc
mov
ja
jo
lcall
ds
dec
adc
enter
inc
cmc
outsb
lret
mov
lret
jbe
pop
outsl
std
insl
outsb
adc
mov
aaa
out
fldt
mov
and
je
xchg
sbb
pop
dec
cmpsb
mov
rol
sbb
jl
dec
shll
cmp
push
xchg
dec
repnz
aaa
or
in
dec
loopne
test
and
dec
cmp
jle
add
add
and
clc
mov
sbb
test
ret
int
fldl
fcomp
lret
std
jge
clc
in
sahf
insb
jg
mov
data16
add
jae
pop
out
movsb
std
sarl
cmp
cmp
fcompl
fildll
in
xor
adc
imul
push
jecxz
dec
sbb
out
or
mov
testb
pop
push
jmp
cmp
or
add
add
test
dec
stos
jae
int3
cbtw
and
mov
push
or
xchg
jle
pop
or
cmpsl
or
push
nop
adc
cmp
mov
out
sbb
inc
arpl
mov
cmp
dec
call
sahf
mov
call
lcall
dec
in
ret
fs
mov
stos
jp
lods
push
add
cli
lcall
jne
xor
dec
or
adc
in
push
mov
fsubr
cmc
lds
ret
outsb
dec
and
jbe
repnz
mov
and
jno
lret
sub
cmpsb
loope
push
xor
or
pop
and
pop
mov
gs
mov
pop
add
add
add
add
hlt
ljmp
adc
adc
lods
pop
sub
xor
sub
bound
fcomp
push
or
xor
fdiv
pop
aaa
sub
in
mov
xchg
xchg
clc
xor
jns
push
push
lock
add
jmp
push
jno
dec
inc
movsl
push
hlt
stos
test
pushf
sbb
aaa
fldcw
pop
mov
fidivrl
int
sbb
jo
add
pop
xorb
repnz
out
push
ljmp
enter
loope
and
adc
das
clc
popf
pusha
xor
test
xor
out
pop
adc
dec
mov
push
arpl
fdivs
sbb
mov
xor
adc
sbb
fstpl
imul
sbb
js
cmp
push
stos
push
insb
cli
inc
mov
int3
inc
popl
stc
jge
jae
movsb
in
iret
inc
out
adc
sbb
add
adc
cs
pop
and
andl
inc
repnz
leave
in
jne
inc
in
into
rorb
xor
repnz
or
jne
cmpb
clc
fs
xor
jne
jnp
fiadds
sbb
popa
jo
mov
mov
addl
les
push
scas
test
mov
repnz
jne
add
sbb
cmp
fldenv
mov
inc
xchg
shlb
fwait
test
fmuls
loope
pop
sub
ljmp
add
fbstp
imull
adc
lret
xchg
popf
inc
mov
popf
cld
and
in
pop
lods
imul
and
cmp
fsubrs
movsb
push
xchg
outsl
xchg
add
shrb
pop
add
fisttpl
fidivs
add
bound
pop
ss
sbb
sub
fldenv
je
ljmp
iret
mov
scas
clc
mov
lret
mov
add
mov
pop
inc
jb
push
xchg
subb
stc
pop
inc
mov
fiaddl
mov
shlb
imul
mov
rcrb
sbb
ja
jge
sbbl
dec
ljmp
add
add
add
add
gs
dec
aam
push
fiaddl
mov
subl
int
fldenv
jb,pn
out
aad
sarl
cmp
cwtl
sbb
push
and
dec
xchg
sub
out
fisubl
mov
push
xor
lds
or
sub
pusha
dec
mov
xor
add
jne
jecxz
imul
fmul
dec
mov
sub
pusha
pushf
cld
add
add
rcr
js
int3
cs
push
jns
mov
sub
popf
movsl
push
jle
daa
inc
out
outsb
popf
pop
gs
and
mov
ret
mov
gs
cmp
lsl
test
call
ss
enter
clc
cmp
mov
mov
rol
or
and
pushf
test
movl
cmp
movsl
cmp
xchg
mov
mov
pop
out
mov
movsb
mull
add
add
sbb
repz
movsb
inc
add
mov
mov
pusha
push
cltd
cmp
ja
push
shrl
dec
stos
inc
mov
jne
lods
aaa
inc
pop
cmp
jbe
out
mov
and
movsb
sub
outsl
mov
pop
fisubl
mov
pop
xor
sbb
mov
out
fldcw
rcrb
mov
lret
mov
dec
bound
sbb
lahf
fisubrl
add
add
xchg
sahf
add
xchg
rcll
js
jns
adc
adc
lock
cmp
sub
test
out
addr16
adc
mov
inc
inc
mov
push
push
icebp
push
movsl
dec
or
pop
inc
sbb
inc
jl
or
mov
jae
or
mov
jl
cmp
ja
jns
sbb
adc
lock
add
add
add
test
sti
cld
mov
into
js
xchg
cmpsl
jmp
loope
pop
aas
cmp
xor
or
rolb
dec
mov
movsb
in
insl
jbe
test
jnp
cmp
xchg
cmpsl
push
fisubrl
push
les
xlat
dec
cwtl
fimull
sbb
xchg
or
cmc
dec
mov
out
add
gs
dec
jne
addr16
pushf
or
dec
pop
pop
shlb
mov
push
ficompl
and
add
push
lcall
sbb
add
add
insb
lods
xor
sbb
adc
dec
icebp
rcrl
lret
mov
fwait
adc
add
imul
dec
mov
sti
dec
push
push
dec
icebp
leave
hlt
jae
push
mov
xor
sub
jno
rorb
jmp
stc
cmp
lret
inc
das
sti
push
repz
fisttpll
outsl
jns
lea
sub
adc
or
xchg
fsubr
inc
or
mov
stc
push
repnz
outsb
push
aam
xor
push
in
fnsetpm(287
divps
das
mov
pop
andb
fldl2e
je
ret
xor
sub
mov
daa
and
add
inc
cmp
lock
mov
jg
xchg
sbb
out
push
arpl
dec
adc
mov
in
or
rclb
push
inc
xchg
fs
gs
pop
int
mov
jle
jo
ds
adc
cmp
sbb
or
adc
cltd
xor
add
xor
mov
cli
inc
cwtl
out
sub
les
and
push
xchg
stos
mov
mov
daa
adc
pop
das
cmpsb
movsb
cwtl
xchg
push
gs
and
cli
js
xchg
gs
adc
or
popa
xor
outsl
aas
movsb
sub
std
adc
repnz
in
add
in
push
faddl
loop
cmpsb
adc
pop
mov
add
icebp
xor
pusha
adc
outsl
shll
subb
pop
inc
cld
mov
jnp
sub
outsl
pop
and
xor
xchg
jecxz
push
xchg
inc
out
divl
jg
sahf
cmpl
or
adc
cmc
adc
push
xchg
xchg
mov
mov
dec
lods
jns
scas
lcall
push
mov
jecxz
enter
subb
add
add
add
pop
cmp
jno
stos
mov
lret
cmpsl
fwait
jg
dec
mov
cmp
int
inc
cmp
ret
sarb
stc
insl
incb
jbe
jmp
fwait
mov
and
xchg
push
xchg
dec
lcall
cmpb
in
test
mov
sbb
mov
test
insb
push
or
or
mov
test
test
mov
xchg
add
xor
call
pop
mov
ds
push
stos
rorb
aam
incb
cmpsb
mov
or
pop
cwtl
lds
xchg
jge
enter
lods
lret
push
jnp
dec
or
fcoml
out
xor
rcr
sahf
cmp
sub
shrl
or
cmp
sbbb
pop
jge
imulb
dec
pushf
push
sahf
sar
imul
ss
cmpsb
push
loope
pop
cli
mov
fiaddl
add
add
add
nop
xor
push
test
or
sub
stc
jmp
jns
push
addr16
test
mov
enter
cld
sbb
scas
pop
es
shrl
mov
pop
mov
outsb
lcall
and
negl
xchg
popa
repz
jmp
or
fcmovnu
mov
cmpsl
push
mov
popa
out
fnstsw
and
addr16
mov
cmc
stos
mov
add
add
xor
push
sbb
mov
rorb
int
mov
jecxz
cld
jmp
inc
mov
lahf
divb
xor
js
insl
sbb
cmp
test
cmp
push
imul
mov
lea
add
push
push
pop
mov
bound
out
push
cmp
mov
xchg
fdivl
mov
ret
push
add
mov
lods
sub
leave
mov
mov
add
aaa
lock
je
pushf
repz
mov
cmp
lods
cmp
push
and
pop
xor
sahf
push
scas
mov
mov
repz
dec
or
adc
mov
or
cs
popa
mov
cmp
ficomps
notl
push
push
or
jmp
ret
mov
push
inc
addl
shl
mov
or
movsb
push
sbb
jge
fiaddl
add
push
sti
lsl
pop
lds
mov
and
jl
test
push
fcompl
add
mov
push
loope
hlt
aad
pop
push
movsb
push
pop
mov
jl
cmpsb
cmpsb
mov
sbb
cmp
test
in
data16
shlb
mov
lock
clc
int
aad
gs
aam
mov
test
movsl
cmpsb
ficomps
mov
bound
add
add
add
add
xchg
int
das
movsb
sub
movsb
cmp
inc
mov
mov
outsb
or
add
filds
fwait
out
dec
add
in
mov
mov
inc
in
fisttpll
adc
fstl
mov
cmp
jg
sub
push
push
test
xchg
jo
scas
push
mov
push
mov
gs
mov
mov
clc
or
ss
sbb
add
int3
and
and
iret
xor
pop
inc
mov
inc
std
sub
das
loop
popf
adcb
or
sub
mov
push
mov
jmp
fcompl
icebp
and
outsb
call
pushf
insl
stos
ror
mov
fdivrs
cmpsb
sbb
sub
or
iret
adc
dec
push
imul
sub
adc
fisttps
mov
dec
sbb
add
add
fistl
mov
add
iret
mov
outsl
mov
scas
jmp
adc
sub
inc
add
xchg
pushf
mov
pop
popl
aas
mov
adc
mov
cmc
movsl
cs
xchg
adc
xchg
sbb
cwtl
xchg
sbb
sbb
push
outsb
jbe,pn
loop
xlat
adc
in
icebp
dec
add
jns
cli
insb
xor
mov
cmpsl
addr16
add
lcall
sub
in
push
movsl
loop
rolb
outsb
add
iret
sub
mov
in
or
ficoml
shll
cwtl
inc
mov
cmp
add
dec
cmpsb
ja
sbbb
pop
mov
pop
pop
sbb
pusha
fnstcw
mov
jnp
sbbl
fcomps
ret
mov
mov
rcr
dec
in
lea
lods
push
pop
jecxz
inc
fimull
mov
dec
jmp
mov
xor
rcr
mov
movsb
das
inc
jle
adc
repnz
