mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
sub
mov
mov
not
mov
add
not
shl
imul
sub
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
push
add
push
mov
add
push
push
lea
push
mov
call
add
mov
mov
mov
mov
push
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
decl
mov
jne
addl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
jne
push
mov
call
push
lea
push
xor
inc
push
mov
push
mov
mov
call
mov
call
cmp
je
xor
jmp
push
push
push
push
push
mov
call
mov
mov
mov
mov
push
sub
mov
call
push
call
lea
push
push
push
push
call
push
pop
mov
mov
mov
push
mov
mov
push
lea
push
push
mov
call
cmpl
je
cmp
jne
mov
call
cmp
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
xor
push
mov
call
xor
movzbl
push
push
mov
call
inc
pop
pop
cmp
jb
mov
mov
call
dec
jne
push
mov
call
mov
cmp
jne
push
pushl
push
mov
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
xor
call
push
mov
jmp
push
push
push
push
push
mov
call
test
je
push
mov
call
pop
xor
pop
leave
ret
jl
cli
mov
add
add
sarb
dec
mov
stos
aas
fwait
cli
data16
stos
xchg
mov
dec
in
aaa
cmp
out
lahf
xchg
push
xlat
push
jb
pop
shll
xor
rcl
mov
into
imul
inc
push
pop
or
ret
or
mov
jp
pop
scas
adc
inc
call
fcoms
dec
jge
jge
and
sbb
fsubs
pop
das
sbb
mov
jge
jg
adc
daa
outsb
ss
shrl
hlt
and
lods
jp
jp
cltd
out
lods
call
xchg
jne
imul
jns
sub
pop
aam
and
xchg
arpl
rcrb
inc
fcmovnu
jecxz
inc
push
bound
sbb
lahf
mov
sbb
xchg
xor
or
addl
pop
or
pop
arpl
mov
sarb
jg
data16
and
popf
das
xchg
xor
add
pop
arpl
mov
pop
inc
adc
fs
lea
jle
jecxz
in
dec
gs
mov
sbb
loopne
call
mov
stos
lret
lret
inc
pop
pop
gs
or
addr16
clc
shll
stc
es
lods
ret
sub
or
iret
out
adc
addl
daa
mov
pop
inc
jns
aad
lock
push
mov
repz
dec
shll
call
or
jne
mov
das
xor
hlt
inc
pop
mov
stos
mov
push
cmp
int
mov
mov
mov
outsl
mov
gs
loopne
orb
in
fstps
cmp
movsl
jmp
test
out
rclb
and
int3
call
mov
push
push
xchg
jecxz
jns
or
sub
cmp
pop
lods
mov
jge
mov
popf
pop
ljmp
test
push
xorl
popa
lea
rclb
lock
mov
and
aam
dec
pop
sub
ret
xchg
mov
xchg
loopne
mov
or
inc
call
xor
test
test
lods
fisubs
jb
ficompl
inc
aas
sub
sub
xchg
jne
cmp
xor
and
mov
push
cs
mov
fsts
sbb
movsl
aaa
das
push
and
mov
call
shlb
mov
aas
pop
in
dec
rorl
ljmp
mov
xor
loop
inc
nop
movsb
notb
je
ret
insb
cli
shlb
jne
xor
add
xchg
xchg
adc
push
jno
push
push
mov
enter
inc
push
pushf
and
mov
bound
pushf
mov
das
add
add
das
mov
dec
in
das
nop
insl
pop
mov
stc
clc
or
push
sub
xchg
xchg
sti
in
dec
ret
or
iret
rorb
xchg
call
xor
push
aam
inc
andb
push
jle
icebp
nop
pop
xchg
das
add
mov
jl
jno
cli
mov
adc
mov
mov
push
sahf
add
dec
pop
iret
imull
pushf
out
sub
insl
mov
popa
lds
ja
pushf
divb
sbb
add
lea
hlt
arpl
sahf
cmc
sub
adc
jmp
push
jne
mov
movsb
call
inc
adc
dec
inc
clc
jns
std
dec
das
rcl
inc
and
insb
out
pop
cmp
in
mov
sbb
lods
into
imul
addl
arpl
adcb
cs
mov
lds
mov
adc
or
ret
inc
xchg
popa
aad
pop
mov
push
dec
mov
movsl
xchg
xor
mov
xor
mov
adc
mov
push
adc
int
ss
int
je
xorl
imul
dec
hlt
repnz
push
out
mov
mov
mov
dec
mov
mov
stos
xchg
roll
call
les
inc
int
inc
dec
packsswb
ljmp
sbb
pop
mov
fcmovne
xchg
stos
cli
je
sub
icebp
cli
xchg
xor
and
dec
je
xor
push
dec
inc
add
sbb
sub
out
dec
inc
lret
ljmp
adc
adc
and
sbbl
ss
stos
inc
int3
cmp
dec
ret
and
fwait
lock
inc
lds
adc
shrb
sbb
data16
jns
sbb
push
pop
jle
pusha
dec
pop
ret
jns
xor
das
push
sub
xchg
lahf
add
lods
or
xor
imul
jg
xchg
adc
xchg
sbb
mov
fstpt
push
jae
rolb
sbb
push
sub
ficoms
pop
adc
pusha
push
cmp
fldcw
orl
and
into
xor
add
pop
inc
test
test
adcb
cld
cwtl
fildll
stc
popa
dec
jns
mov
or
push
push
sub
jae
sahf
clc
testb
fldl
xchg
sbb
addl
test
add
ljmp
pop
jb
jbe
aam
addr16
adc
movsb
out
jne
pop
cmpsl
mov
out
test
out
inc
lods
ret
cmp
ja
jne
add
and
jp
pop
jecxz
ficompl
add
pushl
push
mov
movsb
orb
push
and
idivl
loope
xchg
aas
jne
cli
adc
lock
mov
sub
or
add
ss
out
comiss
jle
add
scas
bound
cmp
int
dec
pop
insl
push
into
nop
sub
out
loope
loop
rorb
std
mov
mov
les
and
jg
int3
cmp
jno
mov
outsl
imul
mov
pop
inc
int3
adc
push
and
mov
push
and
int3
daa
add
cmp
or
dec
or
cmpsb
cmp
jno
ror
mov
std
ret
das
sbb
rcl
insl
es
call
lret
das
xchg
dec
xchg
pop
inc
mov
cmp
int3
pop
imul
mov
les
cmp
test
adc
cmp
xor
xchg
ret
xor
cmpsb
sbb
int3
sub
jecxz
insl
out
mov
mov
pop
aad
loopne
mov
sub
idivb
push
or
popf
push
je
and
inc
mov
adc
iret
in
push
bnd
xchg
pop
popa
xor
push
and
xor
aam
mov
xlat
cmpsl
loopne
push
push
add
jecxz
sbb
lcall
les
fsubrs
xlat
pop
xchg
sub
sti
jge
stos
mov
enter
stos
vandnps
int
gs
ss
mov
push
sub
jmp
arpl
pusha
rclb
jne
sti
dec
in
inc
mov
sub
add
mov
sub
push
add
mov
inc
dec
adc
in
loopne
rcll
dec
xor
mov
add
daa
add
adc
loope
ljmp
mov
imul
mov
test
aaa
daa
outsl
xchg
inc
ss
pushf
pop
aas
dec
and
leave
mov
jne
mov
push
sbb
jmp
sub
add
leave
add
or
aas
ret
popa
stos
pop
mov
adcl
jbe
jp
in
ss
xchg
mov
lds
mov
lret
repz
inc
in
imul
jmp
rcrl
ja
dec
or
mov
xchg
mov
push
and
dec
subb
mov
jb
jnp
push
xchg
cmp
mov
fldl
or
xor
mov
lcall
insb
lds
outsl
sarl
out
mov
outsl
je
testb
stc
shlb
and
pop
xchg
pop
cmp
push
xchg
dec
je
xchg
das
and
dec
insl
inc
xor
sbb
js
sbb
lods
stos
pop
jb
cld
cmpsl
rcl
pop
test
add
xorl
dec
outsb
jp
dec
mov
xchg
mov
pop
in
orl
mov
cli
xor
sarl
test
push
jns
inc
and
push
add
mov
rclb
mov
out
popa
mov
stc
ret
and
xchg
fwait
test
test
push
cmp
js
push
push
roll
inc
and
sbb
push
cwtl
push
push
sub
ja
clc
gs
ds
lcall
push
mov
lds
popf
in
lods
out
add
add
mov
js
dec
push
aaa
shrb
and
add
inc
shrl
push
mov
repnz
cmpsl
stos
pop
andb
lods
pop
add
mov
dec
xchg
popf
das
cmp
xor
inc
sbb
pop
and
pop
out
loope
inc
adc
cmp
movsl
pop
repnz
push
pop
jle
test
jmp
ds
xor
cmpb
cmp
mov
mov
jns
popa
sbb
sbb
in
les
cmp
jl
out
add
and
cmp
and
pop
ficomps
movsl
mov
mov
outsl
lock
dec
scas
filds
jl
and
lock
or
aas
xchg
inc
jp
data16
fstl
xlat
sbb
scas
into
add
jp
push
lock
ret
je
popw
mov
or
test
clc
jb
je
mov
lcall
cld
mov
push
fs
jg
sbb
inc
mov
call
mov
in
mov
adc
mov
and
mov
adc
aad
adc
je
xor
jnp
aas
add
iret
dec
mov
fldl
test
pop
sub
icebp
lea
mov
les
jno
inc
xchg
orl
test
sar
das
call
inc
xor
pop
mov
push
stos
imul
in
fidivrl
leave
mov
inc
iret
aas
push
mov
popf
int3
fstp
xor
add
cltd
and
gs
ljmp
cld
or
xchg
add
inc
cld
lock
or
xlat
mov
fcoms
cwtl
orb
scas
sub
cmp
or
add
les
push
sub
bound
ljmp
push
mov
sbb
xchg
adc
fsubrp
push
and
scas
je
inc
dec
xlat
pop
js
sti
and
out
cmp
jle
dec
push
rclb
insw
movsl
cli
repz
adcb
jmp
push
adc
and
jno
mov
decb
in
inc
and
inc
xchg
adc
repnz
faddp
or
jns
dec
loope
imul
lea
iret
out
xchg
in
push
mov
push
sarb
in
into
fnstenvs
sar
jmp
pop
movsl
std
sub
xor
lret
sbb
shrd
cmp
add
jne
arpl
xor
xor
sub
insb
jle
adc
sbb
inc
mov
jp
hlt
nop
inc
ret
or
dec
jl
add
ja
movsl
int
mov
subb
in
xor
bound
iret
or
repz
repz
iret
les
inc
cmp
mov
sub
ret
jo
pusha
lds
sbb
sub
push
repnz
and
cld
das
sbb
push
in
pavgw
inc
inc
popa
out
cmpsb
shl
xor
push
dec
cmc
stc
fldcw
pop
pop
fldl
adc
fwait
jne
or
mov
insl
clc
ret
push
cmpsl
lahf
mov
or
inc
dec
push
or
int
mov
loop
repnz
in
rcrb
mov
fsubr
jbe
bound
test
outsb
jno
stos
push
mov
orl
or
push
pop
negb
mov
cmp
lea
into
aad
or
xchg
in
or
sbb
adc
push
dec
rcrl
mov
pop
mov
out
pop
mov
aam
cmp
shl
gs
pop
movsl
pushf
pop
sbb
scas
lods
test
push
mov
imul
incb
adc
mov
or
inc
in
and
ja
cmp
pushf
jecxz,pn
jno
repz
cmp
and
mov
or
sub
push
xor
out
mov
ss
sbb
cwtl
in
push
pop
adc
mov
js
outsb
fidivl
test
data16
nop
cmpsb
dec
add
sub
cmc
lods
bnd
lret
inc
jg
addr16
cmp
inc
repz
jb
test
mov
mov
adcl
inc
adc
lock
int
jg
leave
rcrb
mov
push
sarl
movsb
mov
mov
mov
sbb
daa
add
jno
adc
outsl
xor
xlat
push
rcll
loope
nop
lods
stos
cmp
push
and
fwait
lods
mov
mov
and
rep
pop
enter
insl
lret
jge
rorl
orl
mov
fldt
pop
cmp
sbb
fnsave
xor
mov
orps
dec
pop
or
mov
sti
sub
out
sahf
mov
mov
dec
leave
fcmovu
pop
imul
mov
not
or
xchg
lds
adc
xchg
test
stos
mov
lret
xchg
or
xor
ljmp
inc
shll
filds
loopne
inc
inc
pusha
fcmovbe
rcr
cmp
push
out
adc
cmp
jbe
xor
xor
jmp
jmp
mov
test
mov
xadd
aam
dec
push
sbb
in
aad
roll
cmp
xchg
mov
mov
std
in
inc
xchg
inc
mov
inc
loop
cmp
sbb
inc
push
pop
mov
add
xor
xchg
cld
addb
or
sub
and
add
in
repz
sub
cwtl
bound
ljmp
incl
pusha
cmp
shlb
out
incl
mov
adc
pop
mov
push
adcb
imulb
dec
dec
out
fcomp
ret
les
aad
out
pop
test
jae
scas
cmp
mov
dec
mov
adc
dec
loope
shrl
pop
dec
lahf
dec
ret
xchg
cmp
lret
popf
movsb
rorb
mov
lds
adc
outsl
xor
loop
and
pop
scas
inc
mov
push
out
int
add
idiv
sbb
stos
mov
dec
pop
mov
bound
jecxz
jae
jecxz
xchg
in
xor
adc
popa
int3
pusha
mov
lcall
push
or
jp
and
filds
rol
clc
and
