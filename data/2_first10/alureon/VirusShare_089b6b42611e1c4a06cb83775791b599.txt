push
mov
add
sub
push
xor
push
mov
call
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
push
push
push
mov
call
test
jne
cmpl
jae
movzwl
test
jne
testl
jne
push
pushl
pushl
pushl
call
jmp
push
push
push
push
call
push
mov
call
jmp
mov
mov
push
mov
call
push
mov
call
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
push
lea
push
push
mov
call
xor
pop
leave
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
andl
cmpl
jbe
jmp
mov
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
push
add
pop
cmpb
jne
push
lea
push
push
mov
call
add
sub
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
add
cmp
sub
push
mov
mov
add
mov
test
jne
push
add
pop
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
push
pushf
rdtsc
pop
imul
add
mov
and
ror
xor
pop
pop
ret
mov
xor
cmp
je
lea
test
lea
test
cmpb
jne
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
sub
add
jne
pop
mov
ret
xor
ret
push
mov
sub
sub
mov
add
mov
push
xor
mov
cmp
je
add
sub
add
cmp
je
mov
push
cmpl
jne
mov
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
lea
test
mov
test
jne
jmp
lea
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
addl
subl
mov
cmpl
jne
pop
pop
leave
ret
push
mov
mov
mov
cmpl
jb
push
push
mov
mov
mov
sub
sub
mov
lods
xor
stos
add
sub
add
add
sub
add
ror
push
add
pop
jne
pop
pop
pop
ret
push
lea
sub
sub
push
push
xor
push
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
call
mov
push
mov
call
push
pushl
mov
call
test
jne
mov
call
cmp
je
in
or
mov
call
jmp
cmpl
jbe
push
push
pushl
mov
call
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
sub
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
push
mov
mov
call
push
call
lea
push
push
push
push
call
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
test
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
cmpl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jne
lea
push
mov
call
mov
andl
mov
sub
cmpl
jbe
lea
mov
mov
mov
addl
add
addl
add
add
incl
mov
cmp
jb
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
mov
subl
addl
push
pop
rep
mov
add
add
add
mov
mov
movzwl
push
add
pop
cmp
jb
pushl
mov
pushl
pushl
pushl
call
pop
pop
pop
sub
add
leave
ret
push
pushl
mov
pushl
call
push
push
push
push
mov
call
mov
test
je
push
push
pop
call
lea
test
mov
jne
push
push
push
mov
call
pop
pop
ret
push
mov
sub
sub
push
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
pushl
movb
call
mov
mov
mov
movzbl
imul
xor
push
add
pop
push
add
pop
jne
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
lea
test
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
lea
test
ret
push
xor
call
lea
test
jbe
push
movzwl
imul
add
dec
jne
pop
test
jns
add
add
and
or
mov
ret
push
mov
push
push
mov
mov
mov
mov
mov
shr
xor
push
not
rol
movzwl
push
add
push
lea
lea
pop
call
push
push
lea
push
call
mov
sub
add
mov
imul
add
mov
mov
imul
mov
add
neg
add
add
mov
sub
add
and
add
mov
movl
mov
mov
lea
call
mov
mov
add
xor
add
decl
jne
subl
addl
pop
pop
leave
ret
les
add
lods
push
dec
sub
aaa
add
ret
rorl
mov
fdivrs
dec
repz
pop
jp
dec
dec
lods
in
inc
ficoml
mov
movsl
lock
out
push
jno
test
fistps
dec
ret
leave
pop
mulb
sar
popa
sbb
push
cmpsb
jp
or
xor
pop
rcll
sbb
shl
fidivrs
sub
sub
dec
sbb
dec
scas
inc
jae
jbe
je
aad
push
add
mov
push
es
lret
pop
mov
mov
inc
mov
mov
xor
xor
sub
in
test
jb
pop
les
adc
adc
cmp
repz
push
dec
aam
xchg
je
lret
sbb
sub
adc
cmp
aam
cmc
in
jno
inc
xor
int3
leave
in
or
in
gs
icebp
pop
fwait
lcall
pop
into
sbb
mov
jp
pusha
insl
mov
aad
push
sub
sbb
xor
es
xchg
push
cmp
jle
push
push
adc
pop
mov
push
icebp
dec
popa
cwtl
in
lods
adc
sbb
nop
xor
sub
rolb
je
and
mov
popl
enter
sub
xor
cltd
inc
fisttpll
dec
or
push
cwtl
into
push
ret
push
gs
cmovp
or
mov
aaa
pop
cwtl
cltd
sub
mov
dec
cmc
fwait
dec
es
fdivrp
pushf
xchg
adc
fwait
mov
mov
dec
lret
ljmp
paddw
das
inc
adcb
xor
or
out
out
push
mov
test
out
sub
fildl
adc
add
xchg
mov
lock
shrb
adc
fmull
xchg
adc
and
and
mov
push
jl
test
jo
xchg
lahf
dec
popf
movsl
sti
lods
testl
mov
outsb
mov
lret
cli
xchg
mov
andb
fldcw
aaa
lock
cli
push
xorb
lret
add
test
or
fs
mov
cmp
adc
inc
pop
sbb
push
imul
test
fstp
scas
out
jg
imul
add
cmpsb
pop
in
push
scas
test
call
iret
jne
fs
pusha
dec
das
adc
arpl
xchg
sbb
ror
sbb
sbb
mov
and
jg
push
sbb
je
xchg
call
add
adc
cmpsl
int3
shl
popa
add
pop
ljmp
data16
mov
dec
mov
sub
xor
movsl
rclb
add
mov
cmp
cmp
and
daa
mov
bound
add
jns
adc
xchg
cmp
in
out
orb
xlat
and
shlb
pop
push
xchg
inc
clc
or
maxps
xor
int3
pop
sub
dec
inc
movsb
mov
pop
test
daa
inc
clc
insb
mov
lods
mov
movl
push
rcl
mov
jae
push
pop
arpl
mov
push
adc
pop
in
subl
popf
and
repz
inc
sub
enter
pop
sub
adc
ficompl
outsb
loopne
nop
mov
and
pop
dec
adc
fucomip
adc
or
outsb
mov
lods
xor
fnstenv
dec
int3
cmp
insl
stc
jmp
cmp
les
pop
pop
sti
repnz
outsb
sub
sub
ljmp
mov
pop
mov
jns
lea
mov
xchg
push
leave
mov
outsb
popa
dec
sahf
test
popf
add
data16
sbb
push
lret
dec
enter
aad
addr16
mov
stc
repz
das
test
imul
inc
repnz
test
push
hlt
enter
daa
inc
insl
push
call
xchg
sbb
cmp
add
mov
push
jnp
jecxz
out
mov
xchg
mov
into
push
icebp
call
sub
pop
xchg
mov
cmc
arpl
outsb
mov
cmpsl
add
lods
dec
or
lret
cmc
jle
aam
jbe
pop
stc
lods
sbb
mov
into
mov
push
sarb
pop
fsts
into
stc
or
dec
adcl
dec
inc
pop
imul
jnp
push
jnp
cmp
mov
pusha
inc
out
stos
fcoms
clc
insb
popa
das
clc
movsb
sub
data16
xchg
sbb
movsl
sub
cmpsb
and
inc
mov
or
mov
mov
jge
stos
or
xor
out
je
jle
fiadds
nop
push
lahf
outsl
ja
addr16
jg
hlt
bound
or
fnsave
cmp
adc
push
cs
iret
xchg
ficomps
xchg
jne
cmp
sbb
stc
call
fs
loopne
dec
clc
mov
pop
idivl
ror
es
sar
mov
imul
jge
int3
lcall
fildll
data16
loope
jbe
lret
dec
imul
and
lds
push
test
jne
rclb
mov
and
cmp
adc
jle
jle
nop
test
push
jb
push
or
pop
push
sti
jns
sbb
push
aas
lret
sub
cld
jns
loopne
push
push
jp
sub
and
xor
push
add
lods
mov
sub
rcrb
mov
leave
inc
lcall
mov
dec
mov
mov
inc
inc
pop
test
or
mov
cld
mov
xor
sbb
loopne
and
push
xcrypt-ofb
cmpsl
test
insl
cmpsw
lahf
push
mov
jle
out
xchg
xor
pop
jno
pop
fs
sbb
test
dec
nop
pop
ds
xchg
jne
adc
jecxz
lret
add
sti
jg
ret
sub
hlt
sub
mov
or
sarl
lcall
hlt
rorb
inc
scas
xor
jg
test
addb
inc
outsl
push
int3
aas
pop
in
or
push
popa
fstps
mov
loope
inc
fstpl
aaa
dec
jecxz
mov
xor
dec
les
gs
jmp
pop
push
pop
sbb
adc
popf
lret
cltd
jecxz
cmp
pop
pop
std
fucomi
les
inc
ljmp
fwait
leave
adc
pop
fnstsw
xchg
out
clc
xlat
in
ja
or
jbe
aas
jae
pop
push
ret
jne
sbb
das
rcrl
dec
arpl
sbb
je
xchg
xchg
mov
mov
push
loop
mov
push
cmpl
loope
push
lahf
movsb
orl
ret
adc
pop
inc
and
push
mov
jbe
lds
imul
dec
aam
mov
clc
jb
cltd
decl
movsl
pop
ret
mov
push
lcall
into
push
fs
add
mov
mov
mov
repz
and
cmp
lea
and
gs
dec
inc
push
cmp
fistps
xlat
shrb
jnp
and
iret
mov
push
shll
pop
test
push
lcall
aas
ja
cmc
ss
push
xchg
and
mov
out
fs
lret
movsl
std
dec
or
data16
pop
lods
jnp
mov
xor
cmp
pop
insl
int3
aam
push
mov
gs
xor
cmp
xchg
jp
stos
mov
loope
ffreep
dec
mov
push
pop
fucomp
repz
lods
mov
in
and
adc
sbbb
imull
pushf
cmpsl
xor
loopne
jb
mov
ja
and
dec
pop
fdiv
fimull
inc
dec
pop
adc
scas
lods
xchg
jno
ret
or
out
push
lret
sub
leave
add
inc
adc
push
push
add
mov
mov
jle
pop
sahf
dec
testl
fwait
mov
cs
testb
inc
dec
xchg
fcoms
aad
rcrb
sub
jge
xchg
in
popa
push
cmpsb
mov
xchg
les
in
xor
cmp
dec
adc
xor
xlat
fiadds
test
adc
dec
xor
sbb
outsl
stos
jle
imul
lcall
es
insb
cs
fs
cmpsb
add
imul
inc
sbb
sbb
repz
push
pop
aaa
mov
adc
shrl
xor
pusha
js
mov
jb
push
fs
mov
cmpsl
je
pop
out
jmp
add
fstpt
test
sbb
jp
insb
imul
mov
outsl
sub
cmp
cmpsb
add
flds
pop
pop
push
sub
setl
mov
xor
xchg
xlat
pop
mov
int
push
lock
fs
imul
clc
xor
lret
repz
shr
push
lods
sub
lea
call
dec
loope
pop
xchg
xor
jb
lock
xchg
lods
dec
jecxz
insb
push
popa
bound
jmp
es
hlt
push
in
int3
imul
mov
popf
in
aas
xchg
dec
jle
sub
pop
and
push
add
aad
jp
out
movsl
inc
test
aam
sarl
sbb
cmp
in
lock
xor
inc
adc
inc
and
int
jno
dec
idivb
es
js
aas
mov
add
sbbw
mov
sbb
iret
daa
mov
sbb
cmp
call
outsl
daa
adc
sub
adc
mov
mov
xor
popf
out
push
mov
pusha
hlt
mov
xchg
jne
xchg
shlb
out
xchg
stos
adc
aas
inc
xor
loopne
dec
les
cmp
sbb
in
jae
outsb
xchg
dec
out
lods
dec
std
dec
lock
fdivs
aam
ja
jmp
dec
push
lds
pop
out
adc
mov
sub
or
arpl
sbb
add
add
in
fstps
fists
leave
jae
jp
shll
cwtl
push
outsb
adc
xorl
icebp
xchg
xchg
iret
ja
cmp
xlat
sub
dec
aad
outsl
mov
int
out
pop
jle
ja
daa
nop
in
cmp
dec
or
sbb
cmp
and
dec
xchg
add
nop
sar
jecxz
or
sahf
sbb
jno
sti
sbb
dec
dec
sahf
push
adc
cmp
mov
mov
dec
pop
je
notb
std
jo
fsubs
icebp
mov
mov
inc
adc
xchg
pop
jb
sbb
imul
scas
mov
pop
inc
adc
imul
cwtl
and
mov
jge
jo
test
and
cmp
dec
pushf
jmp
pop
push
imul
adc
out
pop
je
hlt
popl
pop
xor
cli
add
pushf
jmp
mov
mov
xchg
sub
pop
out
loop,pn
pushf
cmp
xchg
sub
hlt
pop
ficomps
adc
adc
rcrb
sti
ljmp
mov
cs
pop
dec
and
sarl
xchg
in
movsl
cmp
lret
sbb
add
push
sub
das
lret
out
adc
cmp
xor
adc
test
out
imul
fiaddl
add
addb
jbe
mov
in
pop
stc
sub
ret
pop
cwtl
xor
rorl
mov
fildll
mov
mov
push
add
mov
or
insb
lret
leave
ljmp
aad
inc
int
cltd
cltd
in
xor
mov
mov
stos
pushf
cmp
loope
movsl
mov
push
or
ss
mov
in
lahf
jg
and
ret
fcoml
sub
ret
mov
and
push
inc
sbb
or
daa
push
arpl
mov
inc
in
jge
out
clc
and
les
dec
loopne
mov
lds
dec
jle
push
popa
fs
jo
daa
lret
in
imul
pop
sbb
sub
out
cmp
push
loop
adc
out
in
inc
addr16
dec
mov
sub
rclb
fsubrs
xchg
adc
pop
out
mov
fimull
insb
pop
adc
bound
shrl
sbb
arpl
sbb
inc
add
jg
fcmovnu
pop
ret
mov
inc
repz
push
test
and
jb
push
mov
scas
push
adc
leave
add
dec
icebp
outsl
or
pop
cmpsl
fsubrs
push
pop
pop
dec
adc
cmp
ss
mov
cmp
fstpt
xchg
insb
or
sbb
nop
cmp
xor
orb
test
or
sbb
fstl
mov
sub
inc
movb
mov
popf
ja
stc
adc
sub
push
stc
push
scas
cmpsb
clc
mov
stos
pop
mov
jns
jg
nop
mov
jg
xor
inc
shll
push
movsl
jl
mov
dec
and
adc
outsb
jae
adc
pop
mov
lea
int
scas
xor
in
mov
sbb
dec
xor
pop
inc
scas
add
inc
bound
mov
lea
cmp
lods
mov
push
sbb
and
jb
hlt
pop
add
repnz
xchg
jl
mov
outsl
or
xchg
jmp
fmuls
sbb
in
out
loopne
stos
movsb
lods
cwtl
lret
mov
fiadds
jp
jg
aas
push
mov
mov
gs
pop
imul
sti
jo
rclb
push
arpl
adc
test
movsb
sub
dec
push
inc
js
xchg
mov
lds
arpl
out
repz
jbe
imul
lret
mov
mov
pop
or
jns
cmpsl
fdivrs
cmp
dec
mov
fnsave
mov
nop
daa
outsl
xchg
push
aaa
pop
dec
mov
jle
cmpsl
mov
mov
xchg
lret
sbb
bound
out
jge
lcall
jmp
outsl
add
or
ror
jne
xchg
xchg
insb
push
jge
lahf
mov
dec
sbb
mov
mov
or
push
cmp
xorl
test
arpl
nop
jle
push
andb
scas
xchg
mov
mov
push
inc
or
push
xchg
fmul
jge
ss
subb
push
repz
js
icebp
cltd
mov
sub
and
push
mov
pusha
xchg
movsl
in
ss
aas
and
data16
add
mov
or
or
xchg
popa
xchg
mov
sahf
pushf
scas
icebp
cld
data16
or
mov
jb
cmpsl
push
mov
cmpsl
cmp
cmp
jnp
je
jnp
and
xorl
mov
xor
dec
push
xchg
movsl
cmpsb
inc
and
push
pop
mov
dec
ret
pop
aas
dec
out
shr
into
inc
cmp
ret
sbb
push
scas
pop
jecxz
nop
shlb
xchg
in
and
in
mov
mov
jge
popa
fwait
jge
je
lret
ljmp
push
gs
fldenv
ret
adc
sub
pop
ret
mov
out
dec
mov
pusha
sbb
dec
jmp
mov
insb
xor
cmc
jb
inc
and
shll
jno
int
push
stc
mov
inc
inc
popf
pop
popf
mov
xchg
push
mov
mov
cli
into
xchg
xchg
adc
idiv
sbbb
inc
popa
fcmovbe
je
frstor
inc
inc
push
bound
call
and
mov
adc
pushf
aam
test
fimull
lea
pop
cmp
push
adc
mov
cltd
fnsave
outsl
mov
push
scas
subl
cmpsb
out
xchg
xchg
xchg
inc
sub
inc
fdivrl
fnstsw
vpsllw
in
jbe
mov
fsts
mov
mov
pop
adc
adc
shll
imul
jl
jns
insb
popa
cmp
arpl
sub
adc
pop
mov
mov
js
xor
sub
or
roll
cmp
dec
addb
mov
jg
mov
xchg
adc
outsl
test
xor
pop
push
loope
stos
dec
xchg
sub
cmp
mov
das
rcll
mov
jnp
ret
mov
cwtl
mov
adc
mov
adc
lea
jg
lock
lock
in
shlb
pop
inc
xacquire
addr16
mov
xchg
mov
cmc
data16
arpl
pop
jp
fistps
fidivs
and
test
sub
roll
stos
jbe
jno
xchg
xchg
pop
fs
ret
mov
or
push
pusha
mov
push
push
jge
jp
adc
test
dec
aas
test
lea
daa
stos
add
fwait
movsb
out
or
mov
mov
add
pusha
es
mov
arpl
cmp
nop
cld
jns
xchg
daa
and
sbb
cltd
push
cmpsl
mov
xor
ss
cmpsb
mov
daa
push
loope
sti
pop
jb
scas
jmp
stos
test
outsb
aas
stos
in
push
repz
dec
ret
test
push
dec
mov
sbbb
in
mov
popf
xor
xchg
inc
or
cmp
xchg
jmp
lret
int3
cmp
and
test
pop
pop
push
das
mov
cmp
add
sbb
adc
in
cmpsl
sub
inc
loopne
mov
pop
jne
sbbl
push
loop
adc
pop
pop
mov
mov
mov
mov
mov
adc
adc
rcrl
pop
hlt
stos
dec
daa
jmp
push
int3
jecxz
iret
clc
push
adc
outsb
mov
adc
gs
test
push
mov
sub
sub
data16
xchg
lods
jnp
pop
mov
std
adc
maxps
jne
sbb
adc
xchg
xchg
sub
xlat
mov
stos
adc
cmp
dec
xchg
ret
and
jno
pop
cmova
jns
fists
rcrl
lret
popa
mov
fs
arpl
xchg
dec
sub
dec
xor
sarb
pop
mov
pop
inc
stos
les
mov
aam
cwtl
lock
or
xor
xchg
repz
cmp
pop
js
inc
pop
in
shrl
fdivs
mov
mov
inc
pop
push
int3
mov
xchg
pop
repnz
add
mov
jae
xor
cld
inc
jns
lock
loope
shl
addb
je
xchg
sub
add
or
scas
aaa
mov
mov
xchg
push
mov
adc
negb
loopne
inc
mov
dec
push
rcrb
pop
mov
sbb
insl
mov
sbb
cs
and
out
daa
sbb
sub
mov
je
add
int3
mov
nop
mov
mov
xchg
xor
pushf
inc
movsl
imul
dec
mov
movhps
xor
aam
jg
sti
cmp
or
testb
xchg
jmp
sbb
push
sbb
ret
stos
sub
mov
leave
pop
mov
imulb
xor
std
sub
inc
std
pop
fildll
jae
enter
in
push
xor
push
int
ja
stc
mov
xor
push
sbb
out
pusha
xlat
xlat
adc
jne
in
cmp
lods
fstl
sbb
jp
mov
test
insl
lock
pushf
push
test
lahf
xchg
or
pop
mov
mov
out
lock
addr16
enter
dec
jnp
sbb
mov
insb
pop
fsubp
call
inc
xlat
aas
inc
mov
adc
adcb
in
push
mov
repnz
xchg
xlat
imul
pop
mov
jbe
scas
jns
stc
mov
mov
in
out
leave
xchg
xchg
bound
das
xchg
call
mov
js
outsb
cmp
ljmp
mov
dec
sub
adc
fildll
loope
cmpsb
std
pop
jns
pushf
dec
jno
adc
xorl
jg
and
push
cld
xlat
and
lret
lods
fwait
sti
cld
lret
rcrb
testl
sbb
mov
pop
sahf
gs
add
or
jne
dec
les
push
test
lods
mov
push
imul
clc
dec
xor
mov
push
fs
jae
dec
lcall
jns
testl
aaa
dec
xchg
popf
pop
xor
xchg
fmull
sti
push
sti
push
pop
inc
mov
fsubrl
pop
orl
mov
mov
pop
repz
arpl
jge
sahf
adc
sub
dec
les
pop
xchg
add
push
lahf
int3
sbb
aaa
int
divb
fwait
jb
roll
mov
jle
les
pop
ficoms
jno
dec
pop
cmc
inc
pop
xchg
mov
ficomps
xorb
icebp
icebp
imul
xlat
mov
shrb
popa
mov
xor
fwait
rorb
push
fdivrs
mov
xchg
test
and
xor
insl
roll
idivb
mov
rolb
imul
jge
sub
jle
sbb
add
fmuls
pop
int3
pop
ja
pop
shl
push
push
aad
repnz
mov
shrb
adc
adc
xlat
and
mov
pop
ja
sub
fdivs
gs
aad
xor
xor
icebp
and
xlat
ss
dec
push
test
push
mov
and
sbb
loopne
int3
stc
push
insl
xchg
cs
dec
push
jnp
repz
repnz
jg
daa
out
test
stos
xchg
out
sbb
jnp
ja
repz
jnp
push
test
lea
lahf
add
cmp
jmp
push
push
xchg
jno
jno
movsl
scas
in
jo
ret
insb
jnp
pusha
dec
es
fdivrp
inc
and
push
das
push
cld
shll
mov
sub
outsl
or
mov
sbb
ds
dec
and
jge
scas
aaa
xchg
enter
dec
jb
dec
bound
mov
mov
xchg
lods
sbb
push
into
jo
and
out
leave
cld
xchg
out
shl
les
cmp
lret
sub
and
test
enter
mov
mov
mov
add
pop
fdivp
mov
push
mov
add
push
lret
sahf
mov
std
popf
outsl
cltd
jge
int3
popa
add
jmp
cmpsb
test
push
sub
cmp
mov
jbe
sbbl
fdivrs
sti
mov
inc
cmp
nop
xor
fidivl
mov
shlb
das
mov
popf
ljmp
pop
faddl
mov
sbb
mov
or
mov
and
jb
pop
xlat
sbb
scas
scas
push
mov
push
cs
imul
adc
sbb
ds
fdiv
aad
test
fmuls
mov
sti
jnp
cmp
fyl2xp1
and
scas
stc
jne
addr16
add
lea
mov
popa
nop
push
mov
fidivs
dec
aam
lock
cmpsb
push
rcr
outsb
ljmp
or
xorb
movsb
and
inc
in
xor
cli
or
add
leave
lea
mov
mov
sbb
pop
inc
shll
sti
test
rcll
dec
or
sbb
xchg
loopne
jo
cmc
cmpsb
jb
inc
in
imul
scas
mov
mov
fs
in
test
jo
pop
arpl
inc
xchg
out
in
adc
or
stc
push
pop
stos
inc
jecxz
lahf
int3
ret
cmp
pop
test
pop
pop
xorl
jecxz
cmp
das
add
cmpsl
fwait
icebp
aas
bound
sbbl
sub
addr16
push
pop
jmp
loop
sub
mov
xor
out
jbe
mov
xor
jne
ljmp
incl
mov
les
sub
add
jns
pop
cmp
mov
adc
dec
adc
cmpsl
xor
pop
cmp
imul
cmp
fisubl
and
shrb
add
xchg
mov
cmp
lods
fnsave
push
addb
ds
jo
sub
std
xchg
add
mov
imulb
jns
cmpsb
inc
dec
sub
mov
jo
jnp
cld
and
inc
test
test
or
lea
cmp
push
push
jb
mov
push
jbe
inc
add
inc
cmc
add
mov
lahf
and
mov
ret
or
loopne
outsb
shlb
pop
out
sub
sbb
ret
hlt
inc
fs
dec
in
in
pop
pusha
je
shll
mov
lret
hlt
sub
repnz
sbb
inc
jge
push
cld
repnz
lcall
jl
lahf
xchg
dec
fwait
adc
jmp
push
mov
adc
sahf
scas
insb
pop
jmp
jecxz
lds
out
das
fadd
in
mov
mov
les
dec
jp
ja
xchg
icebp
jae
stos
sub
push
xchg
mov
xchg
adc
pop
mov
jle
subb
loope
sub
fwait
jle
fcom
aad
lea
sbb
mov
out
mov
xor
lret
and
mov
mov
enter
mov
popa
orl
mov
in
mov
imul
jle
outsb
je
or
fcmovbe
fsubs
mov
adc
rclb
lahf
insl
or
xor
aam
int
jl
sbb
mov
dec
inc
insb
cmpsb
sub
rol
out
out
mov
mov
or
pop
shll
in
push
jbe
sbb
xchg
add
loop
sbb
gs
ss
popf
push
jge
cmp
jne
jbe
mov
lods
cmp
pop
jmp
inc
dec
andb
in
push
jge
data16
mov
pushf
mov
pop
iret
scas
cwtl
std
icebp
jae
mov
test
adc
mov
xchg
push
adcb
movsb
push
mov
fstps
adc
mov
jbe
pop
jbe,pt
pop
sub
mov
dec
sbb
aas
mov
pop
nop
jnp
cwtl
xchg
dec
rcrb
adc
in
daa
mov
push
and
aad
aad
jmp
add
into
push
popf
movsb
cld
pop
add
jne
xchg
cs
push
popf
mov
push
cmpsl
lahf
xchg
in
pop
sub
pop
push
mov
mov
adc
xor
inc
mov
jbe
add
jmp
xor
push
mov
out
jecxz
jbe
xchg
mov
inc
in
ror
or
out
std
sarl
in
xor
pop
mov
lods
mov
btc
push
testb
ds
cmp
into
insl
stos
test
int3
lahf
ss
mov
xor
push
adc
mov
or
shll
imul
and
ljmp
hlt
cld
mov
dec
mov
or
in
out
fildll
dec
fprem
sub
sbb
xchg
dec
push
cmc
push
testb
sti
and
sub
cmp
inc
scas
inc
cmc
out
xor
mov
jp
dec
sbb
or
push
mov
cmp
daa
gs
sar
pushf
mov
aaa
stc
iret
jb
jae
sbb
addr16
jb
mov
roll
jae
fwait
jne
lret
jno
aas
inc
cwtl
repnz
in
cmp
mov
inc
pusha
cmp
std
sahf
loop
daa
mov
idiv
sbb
outsb
rolb
push
cmpsl
jno
into
push
iret
gs
jbe
push
mov
sbb
rorl
imul
stos
mov
pop
test
sub
mov
pop
xchg
stc
fdivs
shlb
xor
or
xchg
js
or
pusha
out
jns
or
lods
pop
dec
mov
xchg
fadd
mov
les
xchg
fucomip
mov
xor
cmp
push
insl
inc
mov
fidivrl
lock
repz
cli
mov
mov
push
xchg
mov
fwait
push
lret
out
imul
int3
adc
sbb
and
int3
dec
sub
mov
ror
or
or
mov
stos
xor
mov
dec
fisttpl
and
call
movb
shll
fs
mov
or
dec
xchg
shlb
xor
or
adc
push
mov
cmp
inc
add
shlb
cmp
or
movb
sahf
scas
xor
sti
ficoml
xor
rclb
pop
jnp
jg,pt
idivb
xchg
inc
jl
sbb
pop
lret
stos
mov
loop
shrl
push
mov
and
fadds
xchg
xchg
mov
scas
insl
cmc
negl
or
inc
push
das
inc
push
js
fdivs
sbb
loopne
fld
or
pushf
inc
push
repz
pop
fadds
mov
insl
or
jle
mov
pop
cmp
or
repnz
in
jge
xchg
cltd
push
mov
into
lods
cwtl
cltd
push
or
inc
outsl
mov
or
sub
xchg
dec
jg
lahf
test
pop
psubb
jns
popa
jp
mov
push
pop
stos
iret
sti
push
icebp
inc
lods
ljmp
pop
add
dec
je
jmp
push
or
and
xchg
sbb
cmp
xchg
arpl
lds
add
cmpsl
mov
mov
imul
jmp
aam
and
or
and
je
bound
add
inc
or
xor
xchg
inc
repnz
outsb
les
call
lods
out
stos
and
push
fs
mov
lds
lea
pop
roll
lahf
jnp
bnd
popf
lods
jb
add
add
sarb
sub
adc
jecxz
cmpsl
daa
push
adcl
jecxz
mov
xor
add
jecxz
mov
fisubs
rcll
sub
sahf
frstor
das
inc
xor
bound
pop
movsb
fistpl
inc
adc
mov
fdivrl
xchg
xchg
jnp
mov
sbb
cld
sar
inc
push
and
cmpsl
push
mov
fcmovbe
out
push
ljmp
adc
lods
jo
in
pop
dec
cli
fnstenv
insb
out
push
jb
clc
ret
frstor
adc
fnstcw
pop
mov
rorb
loop
pop
mov
mov
inc
outsb
scas
mov
push
mov
inc
fcompl
jb
dec
sub
sub
and
cmp
les
jno
inc
je
push
push
adc
movsl
inc
into
jae
leave
xor
push
in
call
sahf
lods
xchg
lea
repz
xor
in
enter
pop
in
add
add
push
jne
pop
xorl
daa
decl
repz
sub
hlt
xor
icebp
dec
arpl
add
lea
popl
imul
sahf
les
jno
jge
test
sbb
inc
xchg
pop
ds
sub
pop
inc
je
insb
cs
sahf
leave
das
dec
cmp
hlt
sbb
out
cmpsl
cwtl
adc
fildll
ja
cmpsb
mov
loope
jno
or
imull
aad
rdmsr
dec
pop
sub
femms
pop
xlat
sarb
xor
les
test
loope
in
adcb
mov
scas
inc
addl
pop
icebp
sub
movsb
stc
popa
mov
adc
mov
out
xor
leave
icebp
sbb
aaa
scas
inc
pop
mov
or
jg
jno
push
cltd
mov
add
insl
jo
push
pop
pop
in
dec
aam
and
ja
popf
movsb
push
dec
push
jae
rolb
push
xchg
inc
out
movsb
xor
je
fs
repz
jp
xlat
das
lret
ret
movsb
pop
xchg
xlat
jecxz
mov
hlt
and
mov
ret
cwtl
leave
dec
int
xlat
mov
push
fistpll
mov
jp
imul
push
dec
popf
repnz
into
sub
cmpsb
into
cs
jle
fsubl
mov
add
into
pop
xchg
into
lcall
aaa
jecxz
inc
pop
out
mov
add
lock
iret
cwtl
mov
mov
jl
dec
stos
add
imul
lret
pop
xchg
std
mul
or
pop
out
cmpsl
in
outsl
out
imul
xor
out
test
cmp
cwtl
mov
repnz
out
scas
call
jno
xchg
insl
mov
sub
sbb
xor
fldt
push
std
mov
sub
inc
xor
cmc
daa
outsl
testb
mov
jns
push
cld
fisubrl
push
gs
loop
mov
int3
cmp
in
xlat
lret
and
jb
fisttps
fiadds
jecxz
pop
mov
fcoms
movsl
sarb
push
call
test
imul
sub
jnp
xor
outsl
aad
aaa
xchg
pop
hlt
loope
arpl
ds
xchg
or
popf
push
mov
loopnew
sub
pop
and
xor
xchg
fists
xor
xchg
pop
mov
push
xor
push
add
push
out
jae
iret
pusha
jge
leave
inc
movsb
movsb
or
and
sub
rcll
mov
sub
and
pop
cmp
lar
into
mov
daa
ss
outsb
int3
int
cwtl
lea
jo
or
inc
fimull
cmpsl
loopne
xchg
pop
xor
or
and
jbe
arpl
adcl
mov
movsb
outsl
rcr
mov
dec
idivb
pusha
jg
repz
sbb
out
hlt
into
pop
sub
mov
add
jl
inc
jl
divb
push
mov
mov
sub
inc
mov
mov
lahf
mov
nop
mov
jo
loop
add
xchg
push
mov
and
push
stos
jae
lahf
cmp
xchg
inc
xor
sti
psubsb
mov
out
es
movsl
repnz
mov
ficompl
mov
mov
nop
sti
mov
sbb
test
sub
enter
in
js
cmpsl
das
sbb
sbb
xchg
mov
cmp
les
fstps
push
mov
test
sbb
leave
sbb
cmp
hlt
add
test
jge
jmp
xlat
test
movsb
test
mov
push
jns
test
repz
icebp
push
fwait
loop
jecxz
jbe
loop
inc
in
jecxz
cli
rolb
pop
in
es
jp
push
sub
dec
imul
push
sbb
jb
pushf
subl
out
lret
mov
sub
out
je
shl
cmp
repnz
xlat
fdivl
fsubrs
loope
loopne
clc
pusha
ret
mov
pusha
lods
push
xlat
xor
dec
pop
ret
xor
cmc
dec
repnz
in
sub
jge
fdivrs
push
lods
cmp
sub
cs
xchg
fdivrs
sub
pop
insl
int
jns
fwait
pop
mov
adc
ja
inc
lods
loop
loop
xchg
mov
add
mov
mov
sbb
mov
mov
pop
das
imul
repz
mov
lock
push
xchg
lret
jecxz
xor
add
or
and
test
push
mov
jbe
out
jbe
mov
push
add
fstl
fistpll
sti
loope
and
cli
and
jo
adc
cwtl
ss
inc
jp
rorl
adc
sahf
movsb
dec
loop
ja
or
add
inc
mov
adc
stc
push
xchg
leave
sub
call
int
sbb
insl
ja
mov
pop
rolb
adc
shll
ret
popf
xchg
cwtl
adc
push
mov
xor
push
push
xor
jns
xchg
mov
fistl
ljmp
dec
pop
adc
mov
mov
pop
out
cmp
add
sahf
sub
mov
rcll
mov
sub
out
cmp
in
cltd
in
jle
pop
popf
pop
pop
fistps
xchg
cmpsb
add
imul
rcll
popf
push
leave
mov
push
popf
loop
mov
daa
cwtl
jne
ss
and
pop
sbb
popf
outsl
mov
mov
cmp
lahf
ja
out
shlb
fmuls
cli
adc
add
packuswb
mov
scas
sbb
or
sbb
or
pop
inc
repz
iret
add
pop
inc
int3
aad
and
sub
pusha
in
cld
bound
push
mov
add
adc
testl
insb
mov
or
pop
pop
out
shll
shr
sbb
inc
pop
arpl
add
shr
test
hlt
mov
and
fwait
inc
adc
cli
sub
xor
mov
or
dec
and
aaa
push
cwtl
lahf
and
cld
daa
jle
stc
push
sti
fsubs
sub
fsts
cwtl
in
out
or
bsr
xor
jp
pop
mov
scas
and
lods
cmp
jecxz
add
call
sub
sub
cli
pop
popf
add
jp
and
push
lock
ds
cmpsl
cmpsb
mov
push
dec
mov
cmpsb
add
rcr
pop
call
lret
mov
inc
cmpsb
xor
icebp
shlb
adc
jo
outsb
lahf
adc
push
xlat
jns
roll
add
push
inc
icebp
adc
cmp
enter
adc
sbb
mov
push
sbb
dec
imul
popa
mov
fisubrs
iret
fcoml
aam
jl
inc
xorb
cmpsl
test
jle
fwait
pop
outsb
imulb
cmp
pop
dec
fnsave
scas
push
clc
jecxz
adc
mov
jecxz
aam
cmp
pop
cmp
rcll
mov
mov
addr16
mov
mov
xchg
push
outsb
mov
push
fwait
adc
push
outsb
insl
test
pop
push
call
leave
add
mov
mov
add
movl
mov
ret
inc
dec
test
mov
inc
xchg
push
cmpsb
add
and
ss
jle
mov
mov
int
xor
cmp
lods
mov
push
roll
int
fisubl
xor
pop
sbb
jb
addr16
push
pop
in
mov
adc
mov
cld
xor
sarb
mov
pop
add
js
andl
in
push
scas
in
sti
push
push
and
lods
fisttpl
push
xchg
adc
lds
pop
fwait
es
int3
xchg
lret
sbb
in
nop
fcompl
pop
fnsave
xor
iret
lahf
dec
idiv
xchg
add
xor
sub
push
call
arpl
jbe
or
inc
sub
push
out
call
es
fistl
cmpsb
mov
mov
sub
popf
shlb
arpl
add
lea
loope
xchg
sahf
fbld
mov
pop
dec
fs
push
inc
mov
mov
mov
xor
cmp
sarb
xchg
add
lods
xchg
push
cmpsl
cwtl
sbb
or
sub
mov
or
aas
sub
gs
pop
lret
push
mov
mov
iret
push
jecxz
push
mov
aam
into
adc
nop
cmpsl
in
repz
popl
dec
shll
jmp
jp
loopne
mov
fnsave
loopne
fidivrl
test
xor
xchg
adc
in
call
or
lods
cmpsl
jns
adc
mov
movb
stc
nop
lahf
and
cmp
adc
psrld
cmp
ret
adc
mov
push
xlat
pop
mov
cmp
out
adc
push
dec
ljmp
jmp
stos
lret
xchg
loope
jbe
pop
in
ljmp
adc
mov
mov
movsl
or
xor
les
idivb
cmp
cmp
aas
ficompl
add
dec
mov
mov
sbb
imul
xchg
movsb
sbb
cmp
mov
arpl
ret
lock
in
inc
int
imul
sub
loop
sar
pop
mov
lcall
dec
int
lahf
sbb
out
enter
adc
xlat
xor
fld
sahf
jb
ret
scas
lret
aaa
jmp
cs
and
cmp
cmpsl
cmpsb
out
fnsave
xor
cmp
jg
int
jl
sub
cld
push
adc
out
les
jecxz
mov
jns
xor
fidivrs
push
ret
pop
xchg
rcrl
jnp
shll
cltd
push
jnp
popa
xor
sub
mov
dec
dec
xor
and
dec
imul
pop
dec
fmull
jns
and
fbstp
loopne
mov
sbb
cmpsl
pop
mov
sbb
mov
and
clc
callw
aas
sub
mov
or
xor
or
add
jns
xchg
dec
pop
lods
fwait
mov
in
jl
mov
outsb
add
lret
ss
ljmp
mov
mov
movsl
mov
dec
sub
mov
inc
jge
and
jmp
pop
and
popf
or
xchg
loop
jp
mov
out
push
insl
js
out
sub
pop
out
inc
int3
and
mov
ret
inc
mov
sahf
nop
cltd
popf
push
mov
and
sub
nopl
mov
and
bound
xorb
sub
in
int3
sahf
and
mov
loop
cmp
jg
mov
mov
rorb
cmp
std
and
jne
fisttpll
jecxz
adc
xchg
lods
pusha
mov
or
and
mov
int3
push
pusha
mov
mov
cmp
mov
push
sbb
dec
ds
aas
mov
call
mov
jnp
jns
hlt
sti
xchg
dec
dec
mov
push
jo
stos
aas
sub
in
xor
sub
dec
jns
mov
xchg
pop
sbb
daa
inc
pop
cmp
lret
push
pop
xchg
lds
mov
mov
fistpl
jmp
sub
lahf
hlt
imul
andb
cmpsl
dec
in
fildl
sbb
mov
pop
dec
dec
out
jnp
and
out
lahf
enter
and
popa
iret
sbb
call
mov
sti
mov
pop
lret
push
aas
push
in
jmp
sub
test
les
add
dec
xchg
dec
cmp
and
dec
scas
adc
bound
jecxz
nop
pushf
jge
jp
push
pop
subb
sbb
es
jbe
or
jno
inc
pop
jns
sbb
scas
dec
sbb
add
pop
mov
xor
xchg
rclb
leave
and
mov
pusha
dec
mov
add
shrb
fdivs
js
xor
insl
adc
mov
push
dec
sbb
pop
cmovns
xchg
pushf
dec
pop
and
enter
bound
jns
cltd
fadds
fwait
jg
mul
lret
gs
icebp
cltd
lea
xlat
bound
out
icebp
sbb
push
dec
jmp
mov
movsl
or
lea
xchg
cmp
lods
sub
popf
repz
icebp
jb
xchg
sub
ret
push
decl
fwait
jp
pop
es
adc
dec
mov
xchg
nop
das
jmp
mov
das
ror
out
movsb
fsubs
xchg
jle
xchg
mov
sub
imul
movsb
xor
fisttps
es
cld
mov
mov
sbb
inc
sub
pop
icebp
cmovae
inc
fwait
or
push
ret
xchg
repz
and
repz
sbb
popa
mov
lds
int
mov
pop
ror
sbb
xor
and
sbb
dec
push
out
movsb
adc
gs
push
add
das
jae
movzbl
pop
jecxz
icebp
or
fs
jge
and
fldcw
fcmovb
pusha
out
sub
sarb
imull
push
jb
mov
xchg
mov
xchg
out
inc
loope
sbb
or
inc
loopne
out
inc
iret
shll
dec
xchg
mov
movsb
and
add
mov
pop
movsb
in
mov
or
test
std
jb
jb
mov
xchg
imul
fldcw
adc
dec
pop
icebp
mov
jmp
lcall
adc
outsb
pop
lea
lea
push
dec
arpl
repz
mov
jle
push
scas
jns
lods
push
dec
ljmp
push
out
mov
bound
fmul
xchg
into
cltd
sbb
sbbb
inc
bound
bound
pop
scas
push
bound
pusha
shrb
mov
ret
inc
inc
negl
mov
pop
xchg
bound
insb
in
jge
popf
ret
dec
mov
insl
dec
movb
ds
lea
jmp
pushf
pop
xchg
push
mov
pop
inc
pop
jb
sti
sbb
add
lcall
je
sbb
jne
add
insl
scas
loopne
jbe
or
mov
fs
jns
mov
rcrb
jns
incb
outsl
mulb
adcl
jmp
jle
push
in
sarb
adc
ja
pop
sbb
adcb
xor
inc
testl
jae
imul
dec
jno
mov
cli
fbld
and
mov
popf
aad
mov
pop
stos
cwtl
ds
in
les
pop
cwtl
and
or
aas
in
mov
pushf
test
mov
xor
outsl
ds
sbb
cli
push
dec
cmc
subl
daa
mov
jb
icebp
jmp
adc
cmpsl
test
fcoms
add
and
ljmp
dec
cmpsb
rcrb
ror
mov
inc
mov
xchg
sbb
xchg
mov
jg
xchg
in
movsb
int3
jo
cmc
mov
add
fsubrs
enter
andl
fsubrl
jl
mov
iret
loopne
cs
repz
add
xchg
or
push
adc
jb
ss
push
stos
adc
jbe
dec
sti
js
cmp
dec
loopne
dec
jge
les
cs
add
shll
or
shlb
mov
push
in
cli
adc
scas
push
call
fdivs
test
jae
mov
mov
add
and
mov
mov
sbb
popa
loopne
jecxz
fwait
push
sbb
outsl
scas
fs
insb
sbb
or
mov
sar
dec
cmc
jb
sbb
adc
cmp
out
inc
insl
mov
pop
out
push
es
xchg
mov
mov
cmpw
das
jecxz
xor
inc
ja
lock
aam
jae
in
ror
sub
xor
rorb
cli
inc
cmp
sbb
push
sbb
aad
sub
in
bound
jmp
pop
int3
roll
repz
xchg
push
ds
lea
add
and
inc
iret
stos
push
fdivs
cmp
int
mov
fstp
lea
jecxz
pop
fucomi
xchg
in
repnz
out
push
shll
lea
push
lahf
ret
int
and
daa
xchg
mov
fimull
leave
ds
xor
dec
mov
loopne
jle
add
push
or
mov
fcoms
psrlq
mov
cmp
and
les
sub
inc
out
pop
inc
fmull
dec
or
xor
movsl
in
mov
cmp
ret
loop
repz
dec
jbe
push
push
ljmp
mov
aam
push
sub
or
or
lods
pop
xor
add
ficomps
fucomi
and
movzwl
inc
movsb
pop
inc
fists
das
or
test
adc
loope
jo
and
add
sbb
mov
rorl
sti
scas
sub
sbb
xchg
lds
cltd
lahf
fs
out
aam
dec
mov
sbb
jmp
inc
cwtl
cmpsb
pop
cli
push
pop
out
bound
cmc
lret
sub
lahf
cmp
jle
inc
enter
popf
arpl
push
lods
out
bound
pop
cs
out
mov
mov
cld
xchg
out
xor
xor
mov
add
add
add
add
add
add
imul
jae
arpl
outsl
add
jae
je
imul
je
imul
jae
add
jae
add
popa
add
popa
add
add
add
add
add
add
je
insl
popa
je
arpl
jae
imul
popa
add
add
je
outsl
outsb
popa
insb
add
jns
outsl
add
add
push
add
jne
jae
add
outsl
add
add
imul
add
add
jae
add
popa
add
popa
add
add
outsb
add
add
add
add
jae
add
add
add
popa
add
add
add
add
insb
add
arpl
je
jae
bound
add
popa
add
imul
add
add
add
add
je
jo
jb
outsl
add
add
jne
je
outsl
add
jae
imul
insb
add
ja
imul
add
add
add
bound
push
add
je
imul
jae
add
outsb
add
je
add
outsl
data16
