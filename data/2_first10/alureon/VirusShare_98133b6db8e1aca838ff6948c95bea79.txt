push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
lea
test
mov
sub
add
mov
mov
not
mov
add
sub
not
shl
imul
sub
add
imul
push
add
pop
decl
mov
jne
pop
mov
pop
ret
push
mov
sub
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
mov
push
mov
add
mov
push
xor
mov
cmp
je
add
add
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
pushl
push
mov
call
test
je
mov
add
jmp
cmp
je
lea
test
mov
test
jne
jmp
mov
lea
mov
mov
add
add
cmpl
jne
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
add
xchg
sub
lods
xor
stos
sub
sub
add
sub
rorl
sub
push
add
pop
jne
pop
pop
pop
ret
push
mov
sub
sub
push
push
push
push
xor
lea
push
push
mov
call
add
add
push
push
push
push
push
push
push
lea
push
mov
mov
call
cmp
je
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
mov
cmp
je
mov
jmp
push
mov
call
push
lea
push
push
mov
push
mov
mov
call
mov
mov
call
push
push
push
mov
lea
push
mov
push
push
push
lea
push
call
mov
cmp
je
mov
call
cmpl
jne
cmp
je
cmp
jne
push
push
push
push
mov
call
mov
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
add
push
mov
and
add
push
add
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
call
add
add
push
mov
call
test
je
push
mov
call
push
jmp
push
mov
call
call
push
mov
call
push
mov
call
mov
mov
add
pop
pop
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
push
mov
call
pop
push
mov
call
push
lea
push
push
pushl
mov
call
push
mov
call
push
lea
push
push
pushl
mov
call
push
mov
call
push
lea
push
push
pushl
mov
call
mov
call
push
mov
call
push
mov
call
pop
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
addl
push
pop
rep
mov
mov
mov
add
sub
add
mov
mov
movzwl
lea
test
cmp
jb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
mov
add
push
lea
push
call
xor
mov
push
push
push
push
push
mov
call
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
push
mov
call
xor
pop
pop
pop
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
lea
test
add
xchg
sub
cmp
jb
pop
pop
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
sub
xchg
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
mov
add
mov
sub
nop
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
lea
test
leave
ret
push
mov
push
push
push
xor
push
mov
call
push
lea
push
push
xor
lea
test
push
push
push
push
mov
call
push
mov
call
mov
nop
lea
test
jne
mov
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
push
call
push
mov
jmp
push
push
push
push
push
push
mov
call
test
je
push
mov
call
xor
pop
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
add
not
add
not
shr
add
push
mov
add
xchg
sub
push
lea
push
mov
call
add
xchg
add
mov
mov
mov
mov
push
popl
sub
add
lods
xor
stos
sub
sub
sub
sub
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
sub
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
xchg
add
decl
mov
jne
addl
xchg
addl
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
add
ret
sub
insb
mov
add
add
add
xor
add
out
mov
test
fcompl
xlat
xchg
push
dec
pop
imul
sub
mov
or
test
push
ds
rcll
add
int3
push
aad
lret
sbb
xchg
add
xor
fs
push
mov
adc
ljmp
pop
dec
roll
or
xlat
jle
fsub
cli
add
aad
xlat
sbb
mov
or
xor
scas
cmpsl
insb
lock
and
add
sub
xlat
in
xchg
jle
loopne
xor
jne
inc
popa
lods
mov
movsb
dec
or
and
outsl
sub
into
dec
jge
dec
mov
stc
adc
mov
cmpsb
fucomi
popf
jg
jnp
lods
push
mov
xor
fildl
adcl
mov
lds
stc
out
push
rcrl
jle
int3
cltd
sbb
mov
push
mov
scas
std
loopne
jl
shll
mov
adc
lret
test
xchg
cmp
les
cmp
xchg
xchg
outsb
fwait
jne
inc
andl
lret
stc
adc
clc
popa
adc
jns
pop
ds
jmp
repz
ds
push
and
sub
imul
push
xchg
and
das
in
insl
adc
shrl
mov
test
inc
push
jo
sbb
test
pushf
inc
subl
test
outsl
fwait
loope
lret
lds
mov
mov
cmp
jbe
leave
push
pop
fs
in
add
jo
sub
in
mov
adc
loope
dec
inc
fistpl
inc
or
test
sub
xchg
pop
and
shrb
scas
xchg
sub
pop
cmc
sti
push
loop
add
mov
bound
sbb
push
sbb
lock
fs
jo
mov
sub
xchg
pusha
scas
jmp
sub
out
sbb
aam
ds
out
inc
mov
xor
nop
std
out
pop
xor
xchg
insl
daa
inc
xor
push
xlat
sub
pop
push
sbb
mov
lcall
mov
popa
xor
test
invd
push
push
sub
push
add
mov
xchg
scas
xchg
outsl
or
loopne
movsl
aam
negl
rcrb
sbb
inc
outsl
shll
pop
icebp
repz
int
sbb
out
cmp
enter
mov
mov
daa
sub
sbb
or
pop
jnp
ja
je
adc
sbb
add
push
in
jmp
jbe
in
cld
sub
rorb
loope
cmc
loop
add
movsl
jo
xor
lcall
inc
and
push
lods
cmp
loopne
xchg
ret
cltd
add
call
movsl
outsb
aaa
hlt
ds
les
mov
jmp
inc
jne
jbe
jae
lahf
and
in
insb
out
call
xchg
xchg
add
xchg
ret
jno
es
mov
in
es
jl
shrl
xchg
fwait
add
push
pop
push
lret
dec
imul
cld
lea
add
push
cmpb
xor
push
daa
fistpl
mov
nop
inc
xor
xchg
js
hlt
mov
mov
add
push
es
pusha
add
jp
xchg
push
jl
int
or
push
shl
lahf
jnp
in
inc
cmpsl
pop
push
nop
xchg
jns
fimuls
sub
and
sbb
and
imul
pop
jnp
repz
cwtl
adc
loop
int3
fwait
scas
add
test
dec
movsb
mov
scas
loop
jns
mov
xchg
inc
xlat
das
xchg
popf
out
out
dec
test
sub
sbb
gs
mov
push
insl
repnz
xor
iret
subl
dec
outsb
leave
xlat
adc
call
push
mov
cmp
ret
cmc
pop
or
push
int
addl
movl
cmp
push
outsl
in
fs
jl
in
jge
mov
xchg
xor
push
xchg
daa
xchg
inc
mov
inc
mov
push
sub
inc
adc
mov
mov
mov
lret
xor
xchg
test
adc
sti
pop
mov
adc
mov
inc
bound
imul
and
and
imul
addr16
jmp
jnp
sbb
jecxz
test
dec
scas
loop
int3
lds
push
sbb
pusha
inc
adc
femms
fistl
and
test
call
add
jp
outsb
jge
or
push
inc
loopne
and
sbb
or
je
cmp
adc
mov
jl
les
xor
loopne
ja
jne
push
imul
mov
dec
push
out
cmp
pusha
out
mov
adc
lahf
sar
lods
repz
adc
out
dec
mov
push
gs
fs
jmp
push
insl
sub
outsb
push
push
imull
sub
sbb
mov
and
mov
jne
cmc
loopne
jmp
jp
push
inc
imul
inc
jns
popf
push
jb
movsl
push
aaa
insb
sbbl
adc
scas
stos
xlat
sub
in
imul
or
stc
mov
sbb
cmpb
push
push
and
cmovae
push
fnstcw
insb
xchg
sbb
fnclex
cmpsb
cmp
in
test
mov
pop
mov
mov
pop
test
dec
sti
test
pushf
gs
into
mov
es
inc
sbb
addb
iret
or
jp
push
stos
scas
out
rorb
stos
xchg
mov
dec
cmp
add
aaa
outsl
movsb
add
insb
dec
xor
add
dec
jo
les
jle
lahf
xor
xchg
push
and
fsub
jmp
jg
lret
push
insl
mov
push
lret
aas
jp
das
sbb
pusha
pop
repnz
scas
hlt
mov
sbb
sti
lock
lahf
add
or
iret
cs
inc
pop
out
jecxz
add
mov
addr16
popa
mov
test
jle
das
lea
fisttps
or
inc
fidivs
cmp
movsb
insb
jns
xor
std
fs
xchg
cmp
arpl
jns
cmp
loopne
leave
xchg
cltd
xor
push
push
sbb
push
lret
sub
ljmp
fbld
push
cmp
pop
fldcw
cmp
mov
mov
xchg
jge
mov
mov
xchg
push
mov
dec
test
data16
xor
jmp
repnz
mov
adcb
into
jno
idivb
jns
sub
and
sarb
xchg
cmp
paddd
imul
leave
lds
icebp
or
dec
cltd
pop
sbb
or
cli
and
icebp
pop
mov
or
ss
dec
adc
loope
lods
sub
mov
xor
shrb
add
cli
xor
adc
mov
xor
push
aaa
loopne
adc
sub
push
pop
ds
sbb
int3
daa
jl
stos
sbb
pop
shrl
icebp
mov
jns
insl
mov
lcall
popf
pop
stos
je
mov
outsb
cmp
xor
dec
sbb
cmpsb
data16
push
js
add
dec
adc
xchg
jecxz
add
adc
scas
add
mov
jbe
sub
sub
xchg
push
dec
ljmp
or
xlat
loope
or
push
add
ljmp
xor
ljmp
add
mov
outsb
in
inc
jp
popa
cmpsb
sarb
mov
mov
adc
mov
rcrb
ret
adc
jmp
mov
push
lds
sbb
mov
das
nop
mov
popa
inc
leave
orl
mov
loop
ret
inc
inc
jp
cmpsl
dec
addr16
push
cwtl
or
lods
sub
addr16
hlt
mov
jl
repz
jge
gs
out
or
in
loopne
or
repz
mov
mov
sub
ret
lods
mov
test
adc
sbb
inc
jp
mov
inc
push
lock
dec
or
xlat
ja
cmc
jb
mov
sub
out
xor
xchg
pop
jmp
sbb
xchg
xor
mov
dec
adc
insb
and
xchg
aam
adc
jne
jmp
shll
imul
ljmp
add
test
jmp
mov
xchg
inc
lods
mov
jecxz
das
stos
cmp
xchg
mov
fs
jl
cmpsb
fistps
jnp
push
aam
pop
loope
popa
cmp
push
push
add
add
lock
lahf
xchg
insl
mov
inc
repnz
ja
mov
js
cmp
push
jmp
xor
xor
sbb
xchg
rolb
lret
insb
mov
xchg
mov
xlat
mov
mov
and
push
negb
push
mov
sahf
sbb
and
aam
push
popa
push
lods
repz
jbe
scas
jnp
inc
rclb
adc
sbb
stos
or
inc
jo
jge
or
inc
sub
repnz
dec
movsb
fwait
mov
shll
daa
jl
sub
cli
aam
ja
add
ljmp
xor
cld
inc
lock
add
nop
sbb
mov
ss
and
sbb
scas
xor
daa
push
lahf
aaa
mov
into
jb
inc
and
rol
movsl
test
adc
add
jl
flds
adc
sub
sub
adc
aaa
mov
jae
loop
dec
lahf
sbbl
cmp
cmpsl
shrl
clc
cli
mov
ret
fs
fimuls
mov
arpl
je
scas
mov
loopne
xor
inc
inc
xorl
popa
sti
stc
cmpsb
xchg
pop
push
pop
sub
sub
mov
aas
jmp
xor
aas
xor
enter
js
pop
lock
fsubr
pop
into
xlat
xchg
insb
pushf
fstl
jmp
xor
jae
pop
pop
jmp
push
mov
push
in
mov
cmpsl
int
dec
lock
stos
sti
cmp
lods
lret
filds
aam
push
mov
jne
cmp
xchg
push
ds
jns
je
loope
pop
jo
data16
dec
daa
mov
lcall
ds
adc
jecxz
inc
dec
and
sub
mov
stc
shlb
push
loop
cmp
jecxz
roll
mov
imul
movsb
les
pop
out
mov
outsb
aad
adc
leave
imul
mov
mov
mov
jbe
shrb
es
rcl
pop
mov
jbe
dec
mov
out
sub
shlb
pop
lods
push
lcall
sbb
fs
xchg
fcomip
mov
sbb
lea
adc
pop
rcll
add
and
ss
or
add
and
je
mov
dec
into
jle
sbb
in
les
mov
adc
adc
jns
js
sub
icebp
lret
int3
je
or
add
sub
jg
rorb
lret
sbb
and
scas
popa
in
xchg
sbb
dec
imul
pop
add
stos
cmpsb
mov
scas
shl
jg
std
cmp
repz
fs
sbb
bound
lahf
outsl
test
sbb
call
iret
shlb
dec
inc
stos
jns
sbb
je
outsb
in
aad
mov
jbe
inc
and
sarl
pop
lret
add
add
fcmovnbe
xchg
mov
loop
xor
or
out
sub
frstpm(287
mov
pop
movsl
push
clc
push
je
mov
inc
mov
icebp
mov
es
sbb
jns
push
xor
mov
je
loop
jo
dec
ret
and
dec
repnz
fcoml
mov
out
sti
jg
pop
aas
incb
inc
pop
adc
push
mov
out
jecxz
jns
ja
jns
mov
lock
fs
push
into
iret
sub
push
sbb
xchg
movsb
sbb
cld
mov
or
outsl
loop
xchg
push
xor
inc
pop
xorl
hlt
xor
lea
xor
mov
jno
out
aas
adc
outsl
scas
ret
inc
fcmovbe
mov
mov
jl
aaa
call
cld
sub
sbb
jge
xor
jecxz
stc
xchg
and
xor
jo
scas
jmp
inc
or
movsl
sbb
adc
lret
cmpsb
cmp
sbb
mov
jae
enter
or
loope
mov
aaa
movl
insl
gs
je
push
mov
js
or
push
iret
test
jns
xchg
xor
fsubrl
pop
mov
cmp
fstpt
rcrl
sbb
leave
flds
mov
arpl
and
ret
repnz
sbb
mov
dec
xor
adc
scas
int3
pushf
lret
push
rcr
cs
insl
in
mov
and
nop
add
fadds
inc
shlb
push
or
fdivrl
out
nop
insb
imul
int3
mov
mov
pop
or
out
sub
cmp
enter
pop
mov
cld
shll
fldl2e
cmp
and
dec
movsb
stc
test
jo
sti
lcall
xor
rcrb
mov
xchg
add
int
test
mov
fisubrs
and
adc
js
xchg
shlb
enter
ljmp
jb
cmp
and
dec
jno
xchg
inc
notb
pushf
ret
jnp
sbb
jge
ljmp
inc
std
out
shlb
adc
xor
push
mov
subl
scas
adc
sub
out
popf
cmp
pop
into
mov
cmp
popa
xchg
icebp
flds
fnstenv
mov
xchg
add
data16
cmp
push
mov
int
add
jnp
dec
cwtl
pushf
pushf
sub
or
mov
jmp
rol
push
inc
mov
adc
cmpsl
aas
push
scas
dec
adc
mov
pop
pop
cld
stc
mov
sub
xchg
inc
mov
jecxz
lahf
lock
in
jnp
or
fcomps
aas
cld
scas
in
bound
cmp
cmp
pop
push
fdivl
mov
and
mov
sub
pop
movsl
stc
or
bnd
out
ret
nop
inc
cmp
das
push
test
and
into
mov
and
psubd
and
push
lods
sti
dec
mov
sbb
pop
sahf
mov
push
dec
push
xchg
cmp
pop
stos
pusha
call
les
je
movb
sub
mov
xor
dec
push
dec
in
add
aas
inc
call
mov
or
sub
xlat
sarb
cli
ljmp
insb
aas
out
xorl
inc
adc
mov
outsl
test
cmpsb
cmp
inc
xlat
in
push
jne
cmp
dec
add
add
jg
jecxz
inc
xchg
mov
inc
xchg
bound
xchg
cmpsb
pop
jns
and
lcall
cmp
xchg
sub
loope
repnz
sbb
sub
cltd
lahf
std
fidivs
aaa
fcoml
decb
pop
inc
lods
insl
xchg
jo
push
insb
push
adc
xchg
dec
test
jb
inc
lods
xor
mov
loopne
mov
adc
mov
pop
inc
pop
lea
inc
push
cli
rcrb
pop
and
fistps
mov
sub
popf
dec
lahf
xchg
xor
imul
push
insl
push
mov
jle
push
out
imul
jo
jno
adc
and
pop
jo
scas
lods
push
dec
sub
dec
jo
cmp
pop
jg
inc
test
je
std
jo
and
and
push
sub
mov
fcoml
mov
gs
adc
incl
cld
adc
add
je
iret
and
mov
data16
cli
in
inc
je
fistpl
push
cs
lret
int3
dec
mov
mov
ljmp
repz
cmp
and
cmp
lock
mov
xor
test
inc
aas
ds
inc
fldt
jnp
fbstp
push
mov
inc
ss
fldt
mov
push
mov
and
fmulp
loopw
xchg
or
sub
dec
dec
mov
lods
cmpsb
dec
test
test
fistpll
push
push
adc
and
ffreep
and
inc
aad
lret
lahf
test
push
and
iret
cmpsl
int3
mov
sbb
dec
mov
jo
fimull
outsb
imull
jne
adc
decb
sar
xchg
inc
scas
add
clc
aam
jle
adc
mov
aas
push
kortestb
add
jge
jb
push
lcall
jp
mov
pop
push
aas
mov
adc
dec
fbstp
je
add
xchg
mov
stos
jge
jnp
popa
lret
out
cmp
mov
inc
scas
lcall
add
int
push
xchg
imul
jle
hlt
or
repnz
jl
mov
mov
pop
or
out
push
ja
jbe
mov
addb
fcomip
lret
jo
mov
stos
inc
outsb
fs
aas
sub
dec
push
pop
cmp
jns
cmp
and
stos
fsubr
js
xchg
jg
pop
test
add
lods
or
test
lods
repz
insb
add
lahf
sub
les
mov
andb
dec
mov
je
loope
aaa
out
in
adcb
divb
xchg
inc
cmp
sbb
xor
faddl
cs
nop
arpl
fwait
jnp
xchg
push
and
aas
sti
lds
sbb
ljmp
insb
sbb
fwait
std
les
mov
fsts
sahf
lea
push
cltd
push
shr
aam
loopne
sub
xor
push
pop
jg
stos
sti
and
fistpl
movsb
lcall
popa
jecxz
popa
sbb
je
dec
or
shlb
in
scas
adc
testl
dec
hlt
mov
stos
fldl
arpl
xor
xchg
xor
loope
and
mov
rsm
add
sub
aad
stc
std
jg
repnz
mov
add
daa
les
mov
xor
sub
lcall
jge
mov
push
adcl
popf
mov
xchg
cmp
push
jae
jbe
mov
and
xchg
xchg
in
fidivs
push
aaa
sbb
bound
and
stos
push
push
out
fcomi
xlat
cltd
pusha
out
ljmp
dec
repz
arpl
insb
jne
jb
push
cwtl
inc
or
sub
add
out
jmp
sbb
lods
dec
jl
push
scas
and
xchg
movsl
xor
or
xchg
in
cmp
fs
fmul
cmpsb
fcomps
outsl
sub
pop
clc
jl
sbb
icebp
into
hlt
sbb
bound
push
shl
fwait
das
lret
xor
in
xor
mov
rcrl
mov
pop
repnz
loopne
imul
adc
scas
jb
popa
pop
cs
sbb
dec
mov
or
imul
jo
das
rorl
dec
insl
or
cmp
jg
inc
clc
dec
mov
int
lock
hlt
out
adc
insl
icebp
sbb
adc
push
popa
fwait
dec
fildll
mov
xlat
rorl
push
cmp
dec
mov
test
xchg
xchg
repz
aam
inc
xor
xchg
sti
dec
out
mov
mov
fisubs
lahf
rol
shrb
mov
adc
sbb
and
in
or
sub
dec
dec
pop
ret
jp
or
lahf
aas
jmp
push
lock
icebp
dec
icebp
inc
sbb
xchg
dec
pop
fcmovnbe
and
push
das
push
jge
shll
mov
sbb
cmpsb
aam
fstpl
pop
cmpsl
adc
pop
jl
shll
xor
insl
mov
lcall
add
inc
mov
je
or
imul
xchg
rorl
cmpsl
cmpb
mov
jmp
ds
cmp
fdivrs
sarb
popa
mov
mov
sbb
or
cmp
movsb
jne
push
pop
lods
jb
mov
xor
rcrb
push
add
inc
mov
jbe
ret
das
xlat
in
lcall
sbb
js
fwait
cltd
sti
adc
popf
test
dec
or
add
iret
inc
std
int
add
repnz
out
stos
rcl
xor
mov
out
jo
mov
stos
cld
xchg
sub
dec
shll
into
dec
sbb
nop
inc
xchg
aam
ljmp
in
daa
pop
mov
sub
mov
scas
test
jg
das
xchg
mov
movsb
lret
add
insl
or
stc
xchg
inc
loopne
adc
outsb
xlat
lds
ds
ret
insl
jno
xchg
arpl
and
xchg
inc
push
sbb
add
or
sbb
ja
pop
push
jg
jp
dec
pop
popf
orl
lea
pusha
ret
lds
jl
aas
sti
or
xor
inc
pop
ret
mov
sahf
push
loopne
jno
test
pop
mov
scas
mov
out
mov
idivl
jl
ljmp
in
xor
mov
adc
cmp
mov
rcrb
push
dec
xor
mov
jns
jmp
test
xchg
test
inc
fistps
fadds
scas
repnz
mov
insl
dec
or
jg
not
enter
jns
out
arpl
cwtl
mov
loopne
les
xorb
jle
jo
jno
inc
xor
rsm
lahf
mov
outsl
dec
shrl
mov
filds
xor
xchg
push
lods
loop
jo
loop
daa
sub
pop
call
daa
xchg
adc
mov
hlt
test
mov
pusha
imul
sub
shlb
cli
sub
scas
cmp
xchg
push
or
adc
dec
insl
dec
mov
lahf
fistps
pop
jmp
push
pop
int3
pop
or
add
add
movsl
jmp
insl
jp
shr
call
daa
call
lds
add
push
test
cmp
test
dec
jecxz
std
jge
insl
sub
enter
mov
xorl
dec
cmp
pop
sbb
scas
arpl
dec
in
lret
int
out
mov
push
mov
in
shrb
sbb
and
ja
xchg
lea
add
clc
test
sub
adc
testl
sbb
jae
lea
jmp
sbb
fisubrl
les
sbb
lcall
xchg
xchg
adc
test
mov
rorb
xor
pop
outsb
mov
test
xchg
and
jg
jl
xor
xchg
ss
xchg
shl
inc
in
sti
cmp
inc
adc
pushf
aas
mov
bound
pusha
addr16
mov
dec
aad
js
jno
das
ret
push
orl
push
push
stc
pop
pop
stc
iret
sbb
dec
fdivrs
adc
mov
sbbl
pop
jge
add
inc
push
cmovbe
shll
jb
mov
jmp
cmc
out
outsb
les
or
xchg
mov
xor
push
dec
or
es
push
xor
clc
dec
das
cmp
icebp
dec
pop
stc
jns
mov
sahf
aam
jbe
aaa
test
push
shrl
out
mov
xchg
mov
push
sub
xchg
push
mov
fisubrl
inc
fisubrs
int
mov
jge
leave
and
mov
pop
push
daa
mov
popf
enter
push
or
out
dec
mov
mov
xchg
mov
xor
or
lea
je
imul
sahf
loop
xor
test
negl
aad
dec
ljmp
arpl
loop
fnstenv
xor
in
pop
dec
mov
and
push
mov
pop
add
aaa
stc
loop
mov
push
dec
in
mov
add
mov
push
cmpsl
add
pusha
outsl
lea
subl
inc
push
sahf
mov
push
decl
lcall
pop
push
xor
je
cmp
mov
adc
jl
mov
mov
jb
out
cmpsb
xor
outsb
inc
ss
adc
lret
pop
movsl
data16
mov
xchg
clc
fidivrl
das
push
dec
lea
sbb
jg
push
xchg
lods
dec
hlt
inc
lret
jl
cmp
loopne
jl
sub
jo
mov
pop
cmp
out
fs
mov
pcmpeqd
cmc
movsl
into
call
shll
pop
push
xlat
dec
jl
scas
fisubrs
jge
mov
mov
loope
cld
mov
stc
dec
sbb
movsl
ja
cwtl
mov
js
inc
mov
pop
pop
mov
jnp
or
mov
sbb
subb
fsincos
sub
leave
add
push
test
popa
inc
xchg
push
jno
mov
sub
add
lret
cmp
jns
loope
pop
xchg
sbb
je
cs
jle
jmp
cmp
shlb
push
addr16
jecxz
adc
mov
dec
cs
mov
push
shr
test
mov
jno
loopne
sub
add
mov
sbb
loopne
cmpb
insl
loop
sbb
imul
pop
into
xchg
call
dec
sbb
push
outsl
lock
or
jns
mov
inc
mov
cmc
adc
jl
scas
ja
repnz
cmpsl
pusha
jl
and
inc
push
pop
mov
push
test
jnp
push
stos
js
push
xchg
pop
sub
or
je
dec
and
sti
mulb
add
pop
jns
ret
cld
sbb
xchg
fsubrp
xchg
fisttpll
inc
stos
cmp
es
mov
adc
mov
fmuls
scas
fsubr
or
out
xchg
fs
imul
jnp
popf
sub
loope
iret
cmp
xchg
mov
dec
xchg
enter
int3
out
shll
mov
xor
jb
cmc
pop
xor
loopne
cmp
jecxz
mov
cmp
xchg
rcrb
shlb
adc
adc
lret
jae
stos
js
mov
outsl
lret
shll
in
testb
sub
inc
xor
cmp
push
fcompl
cmc
and
xlat
dec
cwtl
lea
jnp
mov
in
js
sar
xchg
push
aam
aaa
jg
push
out
cmp
das
hlt
jbe
dec
stos
jge
xchg
lds
jecxz
insl
sub
push
pop
lods
repz
mov
js
adc
out
lods
outsb
iret
xor
cmp
jmp
roll
out
movsl
mov
mov
pop
add
xlat
ja
loop
scas
inc
mov
xchg
sbb
arpl
cmc
adc
sbb
mov
ja
mov
push
jnp
push
xor
sub
adc
pop
or
mov
pop
ret
sbb
sbb
mov
lods
dec
aad
pop
sahf
add
pop
lret
cmpsl
imul
imul
or
dec
pop
jbe
test
popf
cmp
iret
scas
pushl
inc
sbb
aam
fcmove
std
in
mov
and
int3
adc
adc
les
sub
xor
sahf
inc
add
lcall
mov
jge
fimull
jl
arpl
cmp
xor
clc
xchg
cli
adc
sub
aam
inc
cwtl
pop
mov
mov
jno
jne
mov
test
dec
mov
xor
mov
jle
xor
xor
pop
pop
jbe
call
cld
pop
inc
sbb
push
cmp
inc
push
mov
das
dec
xchg
int
adc
mov
dec
stc
roll
je
out
and
jb
andb
inc
mov
aas
add
sub
push
push
ja
jnp
jp
fldcw
out
xor
das
int3
lcall
rolb
int
mov
nop
dec
pop
pop
adc
inc
popf
mov
mov
cmp
lret
test
jg
push
into
iret
je
cmc
inc
push
push
out
push
mov
stc
aad
cmp
add
push
outsl
insb
jl
mov
inc
sbb
cmpl
sub
cmp
or
jo
call
mov
rcrl
arpl
sahf
mov
sub
imul
outsb
mov
adc
fwait
scas
mov
and
into
fcomip
subb
pushf
mov
xor
cmpsb
stos
and
fsubl
sbb
cmp
fsts
mov
dec
push
xor
shlb
insl
push
mov
leave
push
faddl
ss
ljmp
sti
cli
test
or
mov
lods
add
imul
pop
cli
mov
xchg
lock
inc
cmpsb
frstor
in
in
cmp
ret
cltd
pop
cmpsl
sub
xor
popa
out
clc
mov
call
xchg
ret
sti
fdivr
sbb
leave
and
enter
inc
and
jg
sbb
test
push
push
mov
jmp
inc
jmp
cltd
popa
inc
mulb
xor
inc
jge
stc
imul
sbbl
inc
mov
xchg
xchg
xor
imul
out
icebp
inc
mov
mov
out
mov
loope
mov
push
dec
sub
scas
push
scas
pop
add
mov
mov
pop
movsb
movsb
lods
xor
cmc
and
aad
fistl
push
stos
mov
dec
aaa
test
andb
cwtl
aas
inc
jbe
scas
lcall
addr16
mov
sarl
mov
mov
cmp
iret
pop
fdivrs
ja
add
pop
jb
std
loop
in
shlb
movsb
bound
outsb
cmpl
xchg
daa
movsb
daa
popf
in
sbbl
pop
xchg
out
outsl
or
mov
pop
fistl
pop
call
xchg
push
addr16
sub
xchg
lods
push
mov
add
push
scas
cmpsl
les
adc
and
pusha
mov
sub
cmpsl
lahf
xchg
pop
ret
pushl
outsb
push
je
icebp
lock
or
popf
mov
movsb
mov
xor
add
mov
push
push
daa
dec
out
and
jne
adc
popf
sbb
jno
sbb
adc
push
jbe
pop
add
loop
mov
mov
fisubl
sub
repnz
lock
mov
aad
push
aas
sub
push
rol
fnsave
stc
xor
int3
pop
test
jbe
sub
les
bound
xor
xchg
sti
xchg
adc
cmpsl
popf
daa
pop
xor
in
inc
icebp
and
and
adc
cwtl
test
inc
sbb
fs
mov
test
les
roll
mov
out
cmpb
inc
fdivl
arpl
lahf
cmp
test
cs
add
or
cli
cmp
cmc
mov
mov
test
sbb
repnz
mulb
stos
filds
pop
inc
shlb
mov
and
push
popa
mov
addb
pop
out
push
scas
les
mov
fnstsw
sti
cwtl
inc
data16
xchg
nop/reserved
mov
cmc
sbb
sar
inc
ret
xor
call
fsub
jg
pop
fs
sti
adc
dec
js
push
cmp
xchg
pop
gs
push
hlt
rorl
clc
dec
mov
cld
inc
jg
push
pop
inc
mov
mov
subl
xor
inc
and
jae
xor
jmp
out
xchg
andl
std
lods
xchg
shl
std
mov
outsb
fadd
icebp
lea
out
sti
mov
cmp
fisubs
adc
enter
mov
pop
push
sub
ljmp
dec
lahf
push
xchg
notl
fnstsw
and
dec
xor
adc
leave
loop
rcrb
pop
ja
cmp
or
push
scas
repnz
xchg
test
jb
ret
push
in
lods
ljmp
inc
mov
pop
stc
push
jmp
cmp
pop
cmp
cmp
jbe
dec
sbb
rcl
lcall
repz
cli
mov
cld
add
dec
sub
fistl
or
subb
dec
loop
dec
xorb
inc
jo
fiaddl
in
jb
mov
mov
xor
xchg
fs
mov
shrl
lret
push
dec
push
xchg
rcll
add
and
or
mov
cwtl
cli
leave
pusha
jo
arpl
nop
sahf
arpl
addb
adc
iret
xor
push
jl
cmp
cmpsb
inc
sub
pop
or
and
test
add
xor
flds
psrad
lods
ret
lods
jecxz
push
in
arpl
sub
sti
sahf
movsb
arpl
mov
sub
sti
sub
pop
mov
insl
adc
shl
jns
push
lcall
loopne
inc
test
xchg
stos
mov
mov
push
pop
mov
cltd
ror
jo
ret
sbb
inc
and
mov
arpl
dec
sub
mov
jg
inc
cmp
jl
sub
daa
cmc
fsts
mov
dec
stos
daa
test
pop
add
int3
xchg
sub
inc
or
xlat
outsl
aas
pop
xchg
faddl
lcall
leave
sub
and
mov
stos
dec
push
add
xor
cmp
add
aaa
test
push
loopne
mov
ljmp
jp
or
inc
or
sahf
cmp
loop
xchg
mov
lea
xorb
xchg
cmp
xchg
xor
js
cmp
out
mov
imulb
jbe
aam
push
enter
arpl
push
xchg
hlt
ds
shll
cli
fidivl
xchg
mull
scas
cmpsl
cmp
daa
gs
push
sbb
cmp
sub
inc
outsl
mov
pop
test
add
cwtl
fldl
lcall
loopne
jno
mov
add
jecxz
lret
lea
fcmovne
stc
ja
push
and
mov
rcrl
repnz
sbb
inc
adc
test
dec
lahf
sti
lret
std
add
and
movsl
sbb
movsb
gs
repnz
lret
add
loope
das
ljmp
dec
andb
popa
repnz
push
mov
popf
pop
jnp
inc
inc
inc
daa
stos
clc
xlat
and
ss
rol
xor
inc
jp
repnz
aaa
aam
mov
test
fs
dec
ds
and
mov
outsl
insb
sbb
mov
vpsubsw
int3
add
mov
sub
test
movsb
out
fnsave
ljmp
dec
add
add
pop
adc
loop
rcrl
cwtl
nop
mov
mov
das
add
lods
mov
mov
inc
cmp
and
xchg
stc
es
adcl
jbe
std
adc
pop
dec
pop
bound
jg
or
or
xchg
sub
push
dec
imul
sub
push
sub
and
test
push
hlt
push
inc
cld
sbb
inc
push
fldt
clc
int3
sti
sbb
and
cwtl
mov
enter
aam
lret
mulb
pop
negl
jne
dec
inc
add
push
sahf
push
pusha
sub
dec
mov
sbb
sti
ds
lret
inc
popa
cltd
aam
cmpsl
rclb
psrad
pop
jecxz
pop
push
pop
xchg
cs
bound
sbb
xchg
bswap
daa
ret
mov
push
aaa
sbb
fldcw
ss
dec
pop
out
jge
lret
js
xor
push
aas
in
sbb
cmpsl
sbb
popf
fdivrs
cld
inc
out
and
xor
cltd
jecxz
add
int
push
sahf
fimuls
mov
andb
push
mov
inc
mov
dec
jle
scas
jl
and
mov
xchg
and
jmp
xchg
lret
jbe
sub
xchg
ror
adc
sti
or
dec
insl
lcall
aad
lods
add
movsl
mov
dec
pop
cs
cli
ja
mov
dec
inc
xor
fcoml
sbb
or
dec
xor
es
das
push
dec
dec
ret
hlt
xlat
decb
dec
jo
lods
imul
aam
and
addr16
lods
lcall
mov
jnp
cmp
sub
xor
cmp
and
shll
mov
xchg
pop
leave
out
fstpt
or
or
push
jae
xchg
mov
add
int3
roll
inc
mov
push
push
xchg
xchg
xor
dec
inc
add
adc
gs
add
rorl
data16
adc
std
filds
fdivrp
sub
scas
jo
mov
movsl
dec
enter
jns
inc
repnz
lret
icebp
push
loop
inc
pop
mov
cmpsb
into
push
sbb
xor
fsubp
xchg
push
pop
nop
jns
xchg
stos
dec
nop
pushf
repz
xor
mov
pushf
popf
divl
jg
pop
je
jp
jmp
bound
mov
cmp
es
or
insl
push
xchg
fdivl
mov
divb
mov
push
adc
pop
push
jns
jg
and
push
push
cmpsb
aad
cmc
push
vpaddb
in
insl
jmp
addr16
push
inc
sub
xor
jmp
xor
dec
aam
repnz
add
scas
jno
cmp
jge
xlat
cli
es
xorb
jnp
lahf
and
call
and
imul
cltd
mov
fdivr
test
loope
and
jmp
sub
cmpsb
orb
unpckhps
mov
popf
icebp
mov
sbb
jae
pop
xchg
icebp
int3
lea
lea
fsubs
and
je
icebp
mov
bound
loop
jecxz
sbb
clc
cld
sub
outsb
cmp
scas
or
cmp
inc
test
inc
js
adc
or
popf
dec
out
and
and
stos
incb
popf
mov
xchg
sbb
repz
int3
jnp
fcoms
hlt
imul
and
aas
pop
add
push
nop
push
rcrl
mov
jle
hlt
fmul
add
mov
out
in
add
mov
out
js
jmp
mov
inc
push
es
pop
xchg
mov
ss
in
in
dec
rcl
les
and
ds
rcl
int3
addl
fsubl
jo
jno,pn
stos
push
je
xor
scas
push
pop
fistpll
cmc
pop
mov
in
inc
mov
outsl
fstl
mov
mov
xchg
scas
in
jno
push
unpckhps
pop
shlb
cmpsl
repz
adc
pop
push
jbe
into
pop
aad
sbb
push
xlat
xchg
in
lods
jns
mov
mov
inc
cmp
inc
js
cmp
in
mov
push
push
push
shrl
and
shll
ss
ret
lcall
test
jns
out
push
cld
imul
add
cmp
jbe
dec
xor
inc
into
cmp
mov
arpl
cltd
mov
jecxz
xor
dec
add
dec
into
add
lcall
pop
sub
dec
pop
loop
test
scas
push
cmp
inc
inc
and
rcr
aam
fildll
lsl
imul
jmp
sub
cmpsb
push
enter
dec
inc
loop
popf
adcb
sub
in
mov
mov
xchg
int3
out
sti
into
hlt
jl
loopne
sbb
jl
bound
mov
movq
test
lods
cmp
test
or
and
popa
fnstenv
fimull
pop
cwtl
jne
xchg
dec
cmpsl
int
mov
ja
push
fsubr
push
imul
mov
dec
inc
dec
cmpl
daa
cmp
push
js
aam
mov
mov
inc
test
and
das
or
ss
jb
mov
and
mov
cmp
cld
push
arpl
lods
or
mov
dec
mov
sub
repnz
imul
rorb
mov
rorb
repz
mov
jl
pop
adc
add
rclb
std
cmpb
push
mov
mov
pusha
js
pop
aaa
mov
xchg
lret
bound
mov
adc
cltd
loopne
enter
inc
lret
iret
sub
fdivr
jmp
dec
add
dec
push
dec
sbb
imul
mov
or
push
scas
mov
ficoml
test
xor
test
in
cltd
scas
loopne
cltd
rorb
sbb
and
push
jmp
movsl
dec
or
push
inc
mov
jmp
sub
js
jp
ficoms
sub
clc
das
call
and
mov
mov
in
or
pop
lods
shrl
mov
iret
sar
sub
ljmp
push
int
jg
ss
outsb
test
rorl
xlat
or
outsl
mov
jecxz
jle
or
scas
push
mov
outsl
es
clc
push
out
push
dec
add
adc
enter
sub
jne
int3
and
cmpb
pusha
add
lahf
das
fwait
adc
outsb
lods
jl
dec
jne
cltd
and
int
iret
inc
cli
push
adc
nop
bound
push
ds
xorl
mov
jno
ljmp
inc
enter
pop
xchg
pop
and
div
jle
add
cmp
test
loope
aaa
mov
lods
xchg
daa
shl
mov
loopne
jecxz
nop
decl
xchg
arpl
fistpl
iret
mov
pop
ja
outsb
nop
add
dec
jge
ds
sbb
xor
rol
xchg
shll
arpl
int
gs
jecxz
stos
lods
mov
ret
stos
andl
fld
lcall
rcr
sub
sti
add
imul
push
push
nop
or
sub
or
ret
mov
dec
and
test
ds
cmpb
inc
rorb
lods
pop
sub
ljmp
negl
adc
insl
fiadds
fsubs
das
xor
cmp
mov
add
or
lret
dec
mov
add
or
and
xor
ja
and
out
mov
iret
scas
loop
xorb
pusha
jns
imul
adc
fwait
xor
mov
or
cmp
in
dec
inc
push
jg
or
data16
add
add
push
mov
cmpsb
icebp
fldcw
and
sub
cs
push
cli
jp
add
cmp
clc
mov
sub
repnz
lea
pop
jl
iret
mov
jne
pop
jl
stc
xchg
aad
adc
sub
mov
mov
sub
push
push
mov
loopne
or
andl
sahf
xor
les
sbb
push
scas
loop
push
dec
inc
mov
imul
mov
cmc
inc
mov
daa
sub
sub
sub
or
push
out
mov
mov
dec
sbb
loope
nop
in
cwtl
movsb
pop
sub
xchg
mov
jmp
jg
jecxz
repnz
fldt
and
or
jge
sbb
js
adc
aaa
lret
in
sbb
dec
jno
scas
cmp
sub
test
jecxz
jl
aad
add
std
lret
gs
pop
mov
ds
rcll
cmc
jmp
fs
ret
popa
inc
scas
mov
inc
lods
xor
xchg
adcl
stos
lret
out
mov
in
test
sbb
jecxz
int3
loope
cld
xchg
test
or
push
and
std
call
test
pop
inc
stos
enter
mov
into
iret
mov
shll
fisubrl
mov
fsubrl
jno
mov
or
mov
ds
ret
or
mov
sub
pop
or
pop
test
pushl
outsb
mov
mov
sbb
aam
add
aas
arpl
ret
out
xorb
push
lcall
dec
cmp
jge
jl
xor
out
cltd
xchg
mov
xchg
out
arpl
push
inc
ud2
scas
pop
ds
and
pop
inc
mov
adc
add
andb
xchg
mov
ljmp
or
mov
jg
xor
cli
lods
xchg
cwtl
daa
cmp
adc
mov
jmp
imul
jo
jl
cmp
sar
xchg
xor
jbe
out
adc
pushl
outsb
cmpb
push
xor
cltd
mov
mov
js
jbe
sbb
inc
rcrl
cltd
mov
sbb
mov
xor
test
adc
loopne
out
sahf
fimull
xor
fisttps
lds
arpl
inc
inc
mov
push
inc
hlt
push
inc
cmpl
fnsave
mov
jne
jle
push
test
cwtl
sub
dec
ljmp
or
xor
daa
push
mov
movsb
inc
pop
cmp
mull
mov
loope
jle,pn
cli
das
icebp
sub
je
rcrl
mov
xchg
adc
adc
mov
dec
bound
mov
xchg
push
fnstenv
scas
rorb
dec
sbb
dec
push
lahf
loope
jle
ret
call
mov
lahf
in
mov
pusha
lahf
jns
cmpb
in
push
mov
dec
lret
mov
cmp
xor
lea
sbb
adc
movsl
inc
stos
popa
sub
aad
fadd
pop
dec
mov
loope
mov
adc
jbe
xor
cld
pop
mov
jns
cmc
or
mov
push
call
movsb
repz
and
dec
fs
mov
shll
arpl
ljmp
add
mov
movsb
and
das
add
pop
imul
out
cmc
push
cmp
shll
mov
pusha
push
popf
add
lea
pop
mov
mulb
adc
jnp
xor
ljmp
loopne
loopne
rol
inc
jne
ds
mov
jo
jnp
pop
sub
ja
lcall
outsb
roll
add
xchg
inc
xchg
jg
xchg
fcoms
xchg
rcrl
inc
and
int
cmp
ja
and
outsl
sub
xchg
fnstcw
mov
mov
mov
hlt
fcoms
add
sbb
imul
xchg
lods
push
pop
xchg
fiadds
adc
xchg
cmp
cmpsb
pop
or
mov
pop
mulb
mov
push
adc
ss
cli
pop
xchg
dec
jmp
sti
bound
fstl
push
or
addr16
cmp
add
sbb
dec
call
sarl
pop
lock
jo
ret
and
jne
fs
and
lock
dec
stos
stos
lahf
jno
pop
imul
outsb
mov
jnp
inc
lret
in
test
lock
or
lods
or
data16
movsb
mov
repnz
clc
sub
push
sbb
mov
cmp
call
test
jge
jp
out
gs
jno
mov
xchg
fidivrs
in
fmulp
xchg
xor
xchg
test
bound
and
mov
dec
sub
mov
jbe
cmp
mov
mov
push
nop
movsb
push
shr
adc
adc
sub
sahf
mov
mov
xor
xorl
shrl
dec
gs
bnd
inc
cmp
andb
mov
ret
cmc
movsl
dec
daa
in
insl
imul
mov
or
jle
andb
cs
push
xchg
mov
push
xor
int
arpl
pop
sub
mov
xchg
mov
add
dec
inc
bound
pop
cmp
xlat
decb
xorl
mov
jmp
mov
sub
mov
stc
push
jle
mov
push
mov
ficoml
cmp
or
daa
dec
sbb
icebp
aas
cmpb
push
adc
dec
or
dec
popf
mov
xor
int
jb
fisubrs
shlb
scas
lods
fildl
scas
pop
pusha
call
xor
sub
push
pusha
inc
out
pop
mov
stos
adc
jne
xchg
das
ds
mov
lock
in
lock
je
imul
ja
jo
jns
shll
mov
pmaxub
jecxz
or
pop
iret
sbb
into
xchg
stos
pop
cmp
int3
cmp
mov
dec
xchg
ss
sbb
adc
xchg
dec
jae
fsubrs
xchg
ret
gs
add
jecxz
mov
cli
adc
sbb
sarb
sub
mov
aas
xchg
fisubl
inc
inc
adc
cmp
test
popa
rcl
out
mov
mov
xchg
pop
sbb
fsubrs
cmc
rcr
sahf
insl
scas
jo
xlat
scas
cmp
push
fists
into
push
adc
inc
lret
out
out
and
mov
push
mov
mov
jle
mov
outsl
push
adc
popf
out
pop
lea
xlat
mov
andl
xchg
ss
lea
adc
daa
xchg
jmp
maxps
cmp
adc
cld
mov
shrl
mov
xor
ret
nop
inc
addr16
cli
out
fnstsw
js
push
adc
scas
or
cmp
mov
xchg
and
sub
push
jmp
out
jnp
pop
ds
leave
in
mov
xor
jp
mov
mov
enter
lea
imul
jge
mov
jle
loopne
xchg
ss
sub
les
mov
stc
iret
sti
pop
mov
icebp
inc
hlt
cmp
in
and
fmul
nop
fcoml
das
and
jne
jne
add
sub
into
test
inc
jns
push
movsl
mov
sbb
in
jb
dec
xchg
push
sbb
aas
daa
test
mov
cmp
pushf
adc
adcl
sub
inc
cmc
xchg
or
sub
mov
xchg
or
lds
jbe
xor
clc
bound
arpl
mov
xlat
pop
ud2
lahf
outsl
stos
jb
add
hlt
mov
stc
shlb
xchg
iret
push
adc
pop
pop
int
cwtl
lret
push
push
pop
aam
ret
dec
xchg
data16
cli
in
sbb
xchg
mov
enter
iret
data16
dec
mov
aad
dec
cwtl
sbb
stos
jl
mov
jno
enter
xorl
test
mov
add
imul
dec
scas
int
shrl
xor
fists
cmc
fdivl
adc
push
in
inc
sub
inc
int
dec
push
fdivrl
adc
jecxz
mov
imul
bound
dec
and
and
push
ficoml
push
dec
leave
enter
nop
lcall
sbb
push
sub
xor
pop
xor
xor
aas
add
sub
dec
sbb
in
adc
dec
jl
dec
sub
ds
cltd
call
sbb
mov
enter
lcall
xor
dec
insb
aaa
loop
dec
inc
mul
ret
push
xor
sbb
fsubl
and
movsb
pop
movsb
xchg
jae
mov
sbb
sbb
imul
add
mov
cmpsl
mov
bnd
mov
mov
sbb
push
cltd
in
arpl
and
nop
cltd
push
jge
pop
mov
add
in
or
sahf
add
xor
jno
cmpsl
ret
xchg
sub
test
imul
arpl
and
add
jmp
scas
and
dec
stc
call
in
pusha
pop
mov
loopne
cmp
sbb
xchg
clc
fcmove
add
jne
push
movsb
and
jno
psubd
js
mov
mov
test
js
and
sub
adc
enter
gs
mov
mov
inc
xchg
or
lea
lea
loop
and
mov
pop
pop
loope
clc
sbb
gs
sbb
repnz
push
int3
xlat
mov
or
cmp
sbb
call
cmpsb
adc
inc
xor
test
mov
inc
jmp
pop
rcll
adc
aaa
test
adc
mov
popf
gs
sub
mov
pop
push
sarl
sbb
es
sarb
push
outsl
adc
in
std
les
inc
lea
xor
sub
js
fwait
ljmp
xchg
sahf
xor
jp
pop
mov
hlt
fdivrp
test
daa
ds
dec
pusha
dec
sbb
xchg
push
subl
mov
js
lds
lea
pop
pusha
mov
mov
repnz
lds
pop
mov
push
idivl
push
pop
into
aas
inc
outsb
les
mov
sub
out
mov
hlt
xchg
popf
cmp
mov
jb
popa
bound
pop
jecxz
loope
stos
xor
lret
push
lock
jp
inc
push
cmpsb
inc
jae
mov
mov
xchg
icebp
mov
mov
cmpsb
adc
sbb
xor
into
add
das
test
or
adc
fsubr
dec
jb
insb
je
xchg
inc
pop
stc
and
cmpsl
cwtl
cli
pusha
mov
rclb
sbb
sub
sbb
mov
sti
add
mov
sub
mov
mov
movb
push
inc
in
jle
xor
js
ljmp
adc
push
push
push
mov
inc
les
pop
dec
bound
mov
sbb
jne
emms
or
cmp
or
dec
dec
popf
add
loop
iret
or
and
pop
sub
pause
fs
sub
sub
cmp
xor
lods
sub
vcomiss
je
pop
bound
scas
adc
cmp
in
adc
xor
in
into
in
lods
sub
repz
mov
in
sbb
leave
outsl
mov
mov
dec
mov
inc
roll
mov
ss
pop
xchg
dec
add
xchg
rolb
fsts
inc
test
or
mov
xchg
jo
mov
jae
cmpsl
adc
fwait
in
repz
shlb
jbe
push
call
imul
or
push
lds
push
cmp
dec
or
and
lret
das
sub
pop
rolb
jnp
stc
outsb
pop
into
push
jl
clc
sub
lret
push
std
scas
int
or
ljmp
xor
sub
arpl
xor
add
inc
test
inc
movsl
sbb
fstps
repz
and
inc
cmpsl
lahf
cmc
xchg
pop
outsb
pavgw
push
das
sarb
inc
jp
mov
jno
or
jp
and
jmp
mov
jmp
mov
cltd
inc
nop
jle
sbb
outsl
pusha
imul
test
test
ficomps
inc
sbb
fsubr
arpl
jp
cmc
pop
outsb
xor
xchg
mov
fstpt
arpl
jno
mov
mov
jle
push
dec
daa
inc
fisubs
pop
sbb
dec
icebp
into
xchg
add
sbb
jnp
shlb
or
mov
mov
jb
xchg
ljmp
cmp
or
inc
dec
add
inc
icebp
lahf
jp
into
bound
and
mov
dec
push
loopne
xor
mov
ljmp
int3
inc
sbb
in
addb
xor
add
inc
adc
in
sbb
aad
cs
mov
inc
imull
rcr
sbb
ja
sahf
push
push
mov
aad
add
lock
dec
xor
mov
xor
sub
fs
dec
and
dec
and
in
and
inc
xor
mov
dec
push
fsts
mov
cmp
rorb
jge
add
pop
loopne
xor
mulb
push
jmp
add
xchg
mov
or
lock
pop
fs
data16
mov
inc
lods
and
scas
dec
xor
mov
jp
jmp
jno
push
inc
imul
lods
mov
xchg
lret
out
xor
and
jo
scas
jp
push
js
sahf
shll
int3
data16
jo
or
mov
mov
sbb
cmp
mov
mov
inc
out
push
jle
push
sbb
or
sbb
mov
xchg
mov
shll
shrb
addb
xchg
sub
arpl
outsb
dec
in
popa
scas
jbe
add
jo
sub
in
sti
add
mov
lds
mov
and
rcr
xor
and
jns
dec
iret
mov
imull
mov
pop
dec
xor
prefetch
bound
add
fs
hlt
xchg
mov
pop
jns
and
and
pop
push
or
rep
sub
jae
fildl
in
aas
call
cmc
add
hlt
sub
dec
test
subb
arpl
test
scas
scas
dec
sbb
roll
cmc
fstps
jle
pusha
xchg
mov
mov
fld
lret
bound
lock
or
add
pop
icebp
adc
mov
xchg
call
sti
pop
and
xchg
out
nop
mov
call
or
cmp
adc
mov
add
fmulp
ds
jno
sbb
push
call
xor
and
out
mov
mov
rcl
mov
push
sbb
xchg
pop
pop
cmpsb
ljmp
jo
xchg
rolb
xor
subl
mov
sahf
adc
nop
pop
add
out
jl
fbstp
in
sub
xlat
imul
xor
jle
mov
in
outsl
xor
push
add
sahf
icebp
or
jae
insl
int
mov
lods
mov
in
movsb
mov
hlt
iret
out
imul
cmp
dec
cmpsl
je
pop
sbb
push
je
jne
out
mov
cmp
rolb
jae
inc
mov
fucom
imul
out
push
and
cmp
jb
idivb
leave
ja
popa
jo
xlat
dec
jns
mov
jbe
xor
and
dec
inc
movl
sti
or
sbb
imul
fimuls
fildl
adc
iret
xor
pop
insb
push
mov
cmpsb
or
push
jge
das
inc
jecxz
pop
dec
jne
inc
ss
and
sarl
xlat
in
icebp
int
test
mov
fxam
pop
scas
sub
push
xor
addb
popa
ds
mov
jp
or
xchg
aam
aam
mov
cmc
add
int3
adc
shrl
or
sti
ds
mull
mov
inc
movsl
sub
dec
popa
js
pop
xchg
mov
ss
into
inc
outsl
xchg
jb
movsb
out
jae
lea
daa
insb
es
rorb
loopne
shlb
sti
sub
je
pop
xchg
imul
mov
and
negb
mov
mov
adc
jo
push
xchg
out
xchg
xor
xchg
hlt
in
sub
pop
cld
mov
push
rcll
aad
das
std
loop
adc
adc
cmp
sub
push
xchg
cli
sbb
mov
adc
sub
xlat
cmp
cltd
leave
loopne
cmpsb
pop
loopne
adc
xor
jg
sbb
gs
mov
xlat
jmp
mov
push
imul
cmp
out
push
push
test
in
sbb
mov
push
stc
faddl
lock
stos
aam
push
repnz
stos
je
jno
mov
pop
fsubrl
or
aad
repnz
std
and
sub
popf
mov
insb
xor
icebp
into
adcl
or
mov
fwait
out
xor
dec
insl
add
cltd
vmptrst
push
mov
popa
roll
es
scas
std
in
test
ds
mov
aaa
aas
lahf
add
pop
jno
pushf
je
push
sub
mov
jb
iret
xor
ret
fwait
mulb
cmpsl
or
scas
jecxz
out
or
sub
inc
pushf
sbb
mov
push
xor
leave
shlb
lods
jo
push
mov
pop
rolb
dec
decb
scas
outsl
cmp
pop
dec
push
loope
stc
imulb
lret
scas
xchg
int
inc
addb
inc
imul
in
pop
jg
addl
jo
push
fnsave
repnz
push
xchg
hlt
pop
mov
ja
add
insl
ret
pop
into
ret
push
test
aad
mov
cmpsb
mov
aas
inc
std
out
ret
pop
jp
mov
sub
xchg
loop
cmp
mov
fdiv
push
or
pop
xchg
xchg
mov
mov
mov
add
pop
inc
rcll
test
scas
notb
lret
jl
sarl
insl
push
or
jno
imul
aad
out
movzwl
fstpt
mov
sub
push
pop
push
cwtl
bound
push
daa
fmull
lods
or
enter
stos
inc
clc
sbb
mov
adc
or
lock
and
icebp
mov
cltd
repnz
mov
int
orl
sub
jno
mov
sub
out
lahf
jl
and
repnz
jmp
or
mov
test
ret
mov
call
idivl
sbb
lock
call
dec
lahf
dec
sub
lahf
mov
repz
testb
push
fwait
sti
in
jb
mov
enter
lcall
jmp
pop
pop
dec
iret
stos
test
shrl
vcvtdq2pd
mov
add
cmp
mov
lcall
mov
push
jecxz
inc
sarb
testl
mov
mov
test
enter
or
test
dec
push
daa
pop
or
pop
dec
xchg
loope
xorl
repnz
les
add
jge
int
mov
push
mov
adc
sbb
mov
arpl
out
ret
nop
xchg
sahf
cmp
mov
or
push
ds
cmpb
mov
xor
push
rorb
mov
jmp
stc
adcb
fisubl
xor
shlb
xor
xor
jge
out
call
add
insl
jle
jmp
repz
lock
sub
lcall
push
fwait
mov
insl
jb
jnp
mov
adc
je
sbb
into
arpl
call
push
incb
xchg
loopne
js
inc
pop
sarl
add
xor
xor
dec
nop
or
lock
mov
or
mov
cs
rcl
cmpsl
sti
jp
mov
xchg
xor
xchg
popf
dec
nop
mov
or
fidivrs
xchg
pop
mov
and
ficoml
cmpsb
xchg
pop
aam
inc
inc
pop
push
data16
pop
adc
dec
sbb
sub
pop
xchg
dec
js
adc
mov
mov
es
mov
jmp
jecxz
cmpb
cmp
mov
pop
es
imul
mov
fnsave
in
fadds
and
mov
arpl
or
or
pop
out
xchg
and
mov
inc
stos
popa
fidivs
sub
adc
pop
push
sbb
add
xorb
cwtl
jo
push
mov
adc
push
and
es
adc
fcmovnu
xchg
shlb
add
std
imul
popa
mov
mov
adc
add
xchg
push
out
mov
test
out
jns
movsb
mov
push
push
pop
lods
xchg
sbbb
push
xchg
rcr
mov
mov
fwait
add
outsb
ficoms
add
inc
aaa
cs
aam
fstpt
into
xchg
mov
je
mov
popf
push
inc
cmp
insl
nop
inc
sbb
or
inc
lds
adc
lods
add
movsb
enter
pop
fwait
in
lcall
aam
inc
jb
mov
mov
xor
push
inc
inc
mov
pop
ss
adc
mov
cmpsb
xchg
fbld
sub
xor
sub
mov
arpl
leave
shr
decb
xchg
sbb
and
mov
or
lods
test
fdivrl
lds
sahf
fs
aam
jmp
out
mov
loopne
adc
push
and
dec
jae
mov
test
stc
fldl
pop
mov
cmpsl
orb
insb
cs
dec
mov
sub
inc
popf
adc
test
fcmovu
lcall
mov
andl
pop
pop
sub
sbb
mov
xchg
jecxz
pop
stc
push
cs
lds
dec
mov
xchg
fcmovnbe
ret
aaa
fisttpll
add
xor
jmp
push
push
inc
icebp
push
lods
jbe
cmc
aam
push
jo
jmp
jne
in
adc
jae
sarb
cmp
dec
rcrl
sbb
flds
sbb
pusha
cmp
xor
push
sub
das
lret
push
dec
fwait
lods
fstpl
dec
jp
pop
jo
mov
imul
shl
and
and
arpl
cmp
aad
std
mov
stc
jb
nop
sarb
xor
aam
mov
ja
sbb
arpl
in
xchg
xchg
aaa
nop
daa
add
adc
xor
jbe
mov
lds
or
xor
in
push
mov
add
movsl
sub
add
lods
pop
fisubrl
dec
xchg
mov
sub
cltd
xor
dec
insl
ret
sti
mov
pop
and
sbb
dec
pop
cmp
jle
mov
imulb
fmuls
adc
hlt
mov
fidivl
mov
paddd
fadd
nop
cmp
jb
cvtps2pd
gs
mov
ds
sub
xchg
dec
adc
xchg
pop
sbb
gs
sbb
xchg
ja
inc
sub
cmpsb
mov
jmp
jmp
sub
dec
and
mov
pop
lcall
sub
xchg
shr
dec
add
jle
rorl
and
xchg
cmp
mov
in
mov
dec
aad
push
push
mov
mov
xor
imul
out
push
sti
xor
loopne
xchg
xchg
hlt
pushf
and
es
xchg
cli
add
sbb
dec
jecxz
nop
xchg
stos
and
sbb
cmp
push
sub
shlb
icebp
cwtl
xor
jbe
mov
mov
xor
in
out
dec
push
sub
mov
popf
mov
xchg
pop
loopne
mov
or
push
js
lock
xorb
test
jae
rcrb
mov
adc
das
cli
inc
sbb
aaa
xchg
sbb
shll
xchg
cmp
pop
shl
shrb
stc
stos
push
repz
popf
mov
cltd
int
das
fstps
pushf
arpl
jo
mov
jmp
ds
enter
and
nop
int
movsb
mov
bound
sbb
je
mov
cmp
dec
sub
and
jl
cmp
out
mov
fnsave
xchg
cmp
adc
mov
dec
js
fdivr
movsb
rorb
dec
aas
ljmp
jo
sbb
pop
stos
pusha
lea
out
mov
sahf
xor
and
lods
sti
xchg
nop
std
scas
xchg
test
pop
mov
stos
inc
cwtl
js
outsl
jg
call
jb
iret
jno
pop
cmc
mov
mov
les
inc
orb
cld
jns
sbb
ret
into
iret
lods
repnz
enter
and
push
lcall
adc
loop
sbb
and
inc
or
pop
mov
scas
cmp
pop
or
xor
mov
mulb
insl
leave
mov
shr
es
cmp
cld
xor
push
fimuls
pop
jle
cmp
jmp
imul
iret
pop
out
push
scas
mov
cmp
cltd
fldenv
fsubs
mov
push
dec
ficompl
adc
push
int3
mov
adc
xor
cmp
xor
fsubl
xor
rorb
adc
ror
jle
roll
or
push
mov
push
mov
and
cmpsb
mov
outsb
mov
pop
insb
mov
lds
lret
mov
push
xor
xchg
xchg
jge
sub
fcomi
mov
pusha
ljmp
test
dec
push
rorb
fcmove
loop
jl
lahf
xchg
outsb
jmp
jns
ficoms
push
inc
rcr
pusha
movsb
cltd
mov
movsl
sarb
popa
jle
out
std
mov
or
pop
mov
das
dec
outsl
inc
pop
cmp
mov
mov
mov
sbb
aam
adc
pop
push
jge
cmpb
sub
test
push
push
push
cld
repz
jnp
push
push
jb
jnp
mov
xor
pop
ret
push
icebp
int
push
cmc
sub
jge
push
fisubs
cwtl
jns
pop
jg
jl
mov
leave
mov
jns
add
jae
orb
data16
and
and
cmp
idiv
mov
mov
icebp
js
cld
mov
ds
pop
ret
test
imul
xor
stos
push
jp
mov
addb
arpl
or
push
cmp
pop
nop
xor
pop
jb
push
dec
stc
jae
jns
inc
movsl
push
mov
je
pusha
lock
dec
and
jl
mov
in
cmpsb
addl
jne
fsubl
mov
or
test
inc
insl
xchg
push
test
adc
aas
ret
xchg
cmp
aas
mov
bound
xchg
and
jg
clc
push
lea
lcall
push
push
icebp
out
stc
stc
dec
pop
and
jno
sbbl
mov
fidivrl
popa
icebp
fnsave
imul
repnz
int
inc
push
rolb
cmpsl
mov
sub
push
gs
lret
daa
ret
les
loopne
scas
dec
push
xchg
stos
test
fsubr
or
inc
loope
mov
xchg
mov
pop
sub
mov
jo
push
das
jg
fsubp
iret
pop
dec
cltd
shr
pusha
xchg
loopne
repnz
xchg
enter
cmpsb
or
dec
mov
push
dec
in
ficompl
mov
das
sub
lahf
mov
shll
cmpsb
jle
inc
dec
mov
hlt
rcl
loopne
or
jae
out
or
shll
add
and
pop
sahf
fidivrs
in
cmpsl
outsl
jae
into
mov
sbb
dec
les
xchg
lock
mov
xchg
js
pop
shrl
inc
fcmovbe
sahf
mov
xor
push
shr
incl
cmc
or
lret
pop
add
dec
mov
fldt
test
aad
cwtl
sbb
sti
mov
add
xchg
inc
sub
insb
cmc
lods
stos
mov
mov
test
jb
outsl
test
mov
push
in
sbb
jnp
jno
repnz
mov
repnz
lea
ja
sbb
dec
nop
sub
shl
out
push
push
adc
cmpsl
sbb
fisubs
popf
dec
mov
sahf
mov
test
mov
mov
adc
inc
dec
idivb
popf
or
pushf
pushf
fwait
outsl
dec
in
inc
add
rcll
out
lcall
mov
push
xchg
push
inc
pop
mov
enter
fwait
imul
or
or
dec
pop
sbb
movsl
cwtl
mov
fcomps
push
push
jo
pop
jae
add
mov
scas
rorl
inc
fistl
xchg
xlat
inc
jo
js
sbb
stos
lret
cltd
imul
xchg
cmp
sbb
pop
mul
jbe
jl
adc
aad
jb
jp
or
cmp
mov
sub
jb
mov
jecxz
push
cwtl
push
into
sbb
mov
gs
sbb
hlt
imul
cli
inc
mov
inc
or
or
pop
mov
loope
daa
aas
pop
xlat
mov
and
outsl
sti
out
xor
mov
adc
mov
rcrl
xchg
call
sbb
pusha
addr16
sub
popa
mov
fmulp
std
push
test
in
inc
incb
push
lret
fdivrs
sahf
add
xchg
shrl
mov
les
fidivl
xor
outsl
mov
sbb
and
mov
or
std
cmpl
pop
sahf
pop
dec
xchg
and
lock
mov
mov
mov
cmp
inc
adc
fbstp
xchg
daa
leave
inc
push
xlat
ja
mov
jo
xor
adc
jcxz
into
adc
inc
test
xlat
out
sahf
jl
nop
mov
arpl
jno
cmp
scas
pop
xchg
dec
xorl
popa
fstpt
add
xor
aad
inc
imul
pushf
lahf
int
adc
jp
xor
or
popa
sbb
sbb
xchg
adc
sbb
mov
imulb
je
dec
mov
lret
sbb
movl
xchg
and
jns
push
mov
inc
dec
sbb
pusha
test
xlat
mov
leave
mov
call
cld
sub
arpl
cmp
sub
pushf
or
aas
repnz
decb
mov
fcom
loope
mov
push
cmpsb
mov
cs
pop
dec
out
mov
xchg
sbb
xchg
adc
dec
stos
mov
cs
push
dec
pusha
outsb
mov
in
pop
nop
jp
lcallw
mov
mov
push
inc
xchg
les
push
mov
lret
andb
sbbl
jns
push
ds
inc
mov
sbb
mov
mov
std
enter
jbe
lcall
ficoms
mov
out
lods
xchg
arpl
ret
repz
mov
xor
in
test
ds
push
out
jns
movsl
aas
inc
shrd
je
pusha
or
inc
inc
dec
pop
and
repz
mov
clc
dec
ret
jns
add
sub
cmp
sub
pop
push
or
pop
sub
mov
clc
inc
xor
ja
or
popa
cmp
adc
lds
stc
test
out
sbb
dec
mov
leave
mov
push
adc
push
sbb
enter
test
loopne
notb
xchg
mov
mov
add
popl
imul
xchg
mov
sbb
add
push
adc
sbb
mov
pop
js
sbb
mov
or
push
daa
and
lods
inc
dec
sub
xchg
adc
mov
test
push
mov
push
jns
mov
sti
xor
add
lock
mov
aaa
add
fwait
lret
pusha
pop
shrl
and
push
stos
sahf
jmp
sbb
mov
sub
sub
or
fdivs
pusha
cmp
adc
leave
fmulp
jmp
xchg
addr16
jge
int
repz
aad
pop
mov
cmc
rorb
inc
mov
fs
fsts
sub
repnz
movsb
jmp
cld
cmp
rclb
push
or
pop
or
jg
lods
dec
push
or
sbbl
fsubr
dec
ret
adc
bound
imul
cmc
pop
shl
xor
sbb
inc
mov
scas
adcl
rclb
cmp
mov
imul
out
cmp
ss
xor
dec
fldcw
int
adc
add
lods
cmp
unpckhps
mov
notb
mov
and
add
dec
clc
push
test
cmp
hlt
sahf
out
sbb
lret
dec
jo
lret
popa
xchg
push
ljmp
mov
push
pusha
fsubs
idivb
and
adc
shlb
dec
in
inc
cli
xor
lea
adc
addl
gs
nop
add
and
push
push
or
leave
push
mov
jbe
repz
stc
mov
and
call
sub
popa
aam
leave
negl
pop
mov
jmp
rol
jbe
sbb
sbb
adc
jp
mov
aas
cwtl
mov
mov
std
mov
xchg
lret
xchg
shll
dec
and
shrl
cmc
push
cmpl
fadd
jno
inc
xor
cmp
sbb
pop
aaa
mov
sbb
sub
mov
add
push
dec
lods
jmp
and
mov
push
cmpsb
js
jecxz
out
mov
add
repz
aas
aas
xchg
into
mov
cmc
cmpsl
mov
pop
adc
dec
or
sbb
adc
jl
jns
mov
lds
add
inc
rcr
test
cmpsb
outsb
or
push
in
pushf
into
popa
push
jmp
sbb
pop
in
sbb
and
adc
xchg
inc
and
mov
outsl
push
add
or
jl
test
jnp
shrb
movsb
cld
in
fisubs
fdivrs
loope
outsl
cwtl
xchg
sbb
cmp
ret
cmp
repz
mov
scas
mov
shrl
ficompl
mov
adc
aam
flds
fmul
dec
int
and
inc
dec
lcall
mov
add
jb
dec
push
jbe
jno
pop
adc
mov
iret
addr16
sub
je
lret
pop
push
std
bound
in
jnp
and
leave
adc
cli
shl
ret
neg
pushf
jmp
xchg
inc
mov
jbe
mov
hlt
cltd
cwtl
pop
movsl
lret
pop
jl
xchg
cmc
push
in
sarb
pop
test
add
cmp
pop
nop
jo
lcall
xchg
ljmp
stos
sbb
test
ljmp
mov
push
lods
xchg
jmp
cmp
movaps
gs
mov
xor
push
sub
shll
or
sti
jmp
mov
push
pop
aaa
out
mov
stos
pushf
mov
and
in
lods
das
adc
or
jne
daa
jp
dec
int3
lcall
in
pop
orb
in
test
xor
test
xchg
jne
mov
push
decl
gs
push
stos
push
and
sbb
push
lds
js
jb
in
mov
mov
cmp
popa
xchg
imul
fisubs
xchg
daa
push
dec
dec
xor
jmp
std
js
jmp
sahf
negb
xor
popa
into
or
push
repz
pop
out
mov
mov
lret
sti
inc
lahf
stc
les
shll
lock
mov
ds
mov
shrb
das
mov
mov
sbbl
lods
jns
xadd
mov
inc
dec
xor
add
enter
mov
stos
mov
pusha
jae
pop
mov
and
insl
mov
addr16
mov
fcoms
shll
lret
pop
add
fisubrl
dec
mov
pop
pop
xchg
cmpsb
bound
or
jo
pop
mov
cmp
dec
fnstsw
test
in
mov
idiv
inc
fisubrs
push
cmp
stos
iret
rcl
mov
jmp
les
lcall
push
fldcw
ret
leave
xor
pop
push
fbstp
jbe
add
cmp
xchg
jae
pusha
xchg
xchg
cmc
mov
out
inc
in
popf
imull
jmp
cmp
sbb
jbe
xchg
lret
sbbb
mov
push
pop
addr16
stos
mov
push
ret
fwait
or
cld
sbb
icebp
out
xchg
test
adc
and
sbb
xchg
pop
in
call
lea
arpl
lock
add
pop
cmp
dec
lahf
jl
loopne
xor
loopne
stc
stc
imul
jbe
cld
pop
push
sub
or
ja
mov
cwtl
dec
and
aad
subl
shl
enter
test
mov
jbe
or
loope
add
clc
and
sub
or
push
sahf
push
leave
push
xchg
sbb
std
lahf
fndisi(8087
ljmp
leave
loop
jge
shlb
in
sbb
into
xchg
or
mov
inc
mov
dec
sbb
pop
aaa
cwtl
ljmp
in
xchg
xchg
sbb
shll
movsl
mov
daa
push
imul
adc
in
jecxz
sbb
in
test
ret
jge
aaa
xchg
add
loopne
mov
roll
inc
adc
push
add
lahf
dec
clc
push
insb
mov
sbb
xor
cs
scas
cli
test
adc
dec
mov
iret
mov
das
stos
xchg
mov
xchg
push
mov
adc
cmpsb
iret
cmp
addr16
cli
icebp
aas
adc
cmp
mov
push
dec
xchg
push
arpl
mul
cmc
das
mov
dec
cmc
push
in
xchg
mov
sbb
push
or
cmp
dec
dec
leave
dec
mov
xchg
pusha
jmp
shrb
push
sbb
xchg
cmp
xor
pop
mov
mov
push
mov
dec
push
pop
mov
mov
push
daa
loope
push
cltd
shll
xchg
jmp
adc
fcoms
cmp
paddusb
test
pop
pop
in
sub
scas
jecxz
or
mov
mov
push
bound
aam
mov
cmp
scas
mov
or
mov
jno
lea
inc
add
inc
sub
lahf
clc
pop
loopne
fs
inc
or
arpl
xchg
mov
shrl
faddl
or
xchg
call
in
pushf
imul
stc
aad
xchg
mov
pop
data16
pop
cmpsl
fsubrl
cmc
ret
nop
or
push
es
mov
xlat
and
xor
scas
sub
inc
mov
popf
push
sub
push
fimull
mov
fs
sub
jno
out
xor
mov
push
sti
stos
cld
xchg
bound
cwtl
call
jns
mov
xchg
jge
gs
cltd
mov
xor
pushf
jp
popa
xlat
out
mov
xchg
inc
test
or
and
sub
test
mov
fsubr
sahf
cmp
sbb
mov
popl
lock
mov
outsb
rorb
and
ss
insb
jo
add
sub
mov
xchg
test
cmp
ja
ljmp
push
shll
mov
push
loopne
mov
insl
stos
jg
in
aam
dec
mov
lods
xor
inc
fidivl
push
adc
scas
mov
repz
inc
mov
outsl
mov
icebp
jl
nop
jl
scas
rol
mov
push
cmc
or
lret
fcmovnu
xor
jmp
aad
out
ss
dec
sti
shld
js
ss
push
adc
test
sti
pop
out
inc
add
mov
das
xchg
inc
inc
mov
fcomps
insl
mov
adc
or
inc
icebp
adc
insl
dec
mov
lods
stos
inc
adc
lock
mov
cvtps2pi
xchg
add
sbb
push
ds
and
inc
adc
aad
add
sbb
test
test
sub
aaa
into
daa
test
add
sub
or
fst
aas
inc
out
movsl
cmp
ss
lcall
cli
insb
cmc
inc
sbb
ljmp
cmp
cmp
inc
mov
es
test
ja
aam
arpl
or
outsl
in
xor
xchg
jbe
dec
sahf
xchg
and
sbb
jmp
cwtl
stos
stc
push
inc
sub
les
iret
xchg
int
mov
mov
scas
push
jo
sbb
dec
rorb
popf
cmpsl
dec
rcll
sarb
push
add
sbb
xchg
and
adc
shlb
sub
fistpl
sbb
mov
mov
jno
hlt
inc
jge
cmp
jb
cmp
pop
pop
sbb
ficompl
cmp
outsl
mov
ss
movsb
stos
stc
enter
test
ds
add
xor
js
ljmp
addr16
mov
fwait
sub
mov
sub
mov
int
sub
and
xorb
and
insl
dec
add
jmp
fbstp
into
sbbl
mov
dec
ja
mov
push
mov
xchg
inc
andb
loopne
loope
adc
negl
inc
cmpsb
imul
lret
xchg
sahf
outsb
clc
cmpsl
in
jno
popa
xor
adc
and
sbb
imul
mov
push
adc
xchg
inc
adc
mov
or
and
rcrb
mov
mov
nop
gs
cmp
sub
and
mov
iret
lods
std
cld
jle
push
xorb
idiv
notl
adc
rolb
dec
xchg
mov
mov
or
sub
stc
ja
iret
movsl
mov
push
lret
inc
inc
adc
in
mov
scas
or
add
sub
dec
cmpsb
fnstenv
repz
cmp
mov
lcall
sub
test
fistpll
push
int
incb
or
xor
popf
cwtl
pusha
add
push
dec
or
jmp
adc
xlat
addr16
xor
mov
inc
mov
mov
mov
sbb
and
xchg
cmp
enter
pop
int
xchg
loopne
pop
mov
mov
cs
push
das
loop
xor
mov
xchg
jnp
pushf
popa
inc
sbb
xlat
in
pop
gs
jl
or
sahf
out
ljmp
jmp
inc
sub
mov
lock
jno
mov
pusha
sbbb
adc
jg
dec
push
cmpsl
int3
loop
adc
pop
push
sbb
aaa
push
and
push
into
push
ret
sbb
into
outsb
jo
sub
clc
ret
sarl
pop
in
dec
popa
inc
not
stos
pop
mov
out
ret
xchg
sbb
enter
inc
mov
pusha
icebp
std
aas
loopne
aad
test
sbb
arpl
xor
mov
xchg
inc
push
push
inc
xorl
xor
jns
jo
jnp
scas
mov
notl
cltd
inc
xor
push
js
xlat
pop
adc
out
nop
xorl
pop
outsl
mov
mov
push
cs
jl
mov
pop
push
push
jp
lahf
lret
xor
repz
fistpl
jae
sub
lock
into
icebp
dec
fstps
push
push
repnz
std
popa
mov
ja
inc
pop
mov
push
repnz
and
add
icebp
lret
notb
xor
push
je
addr16
add
mov
in
pop
mov
push
or
shrb
inc
inc
ficoml
sahf
add
or
dec
and
add
mov
xlat
pop
mov
sub
aam
inc
inc
dec
sub
xchg
mov
xchg
xlat
jecxz
pusha
dec
mov
ficoml
inc
sarb
loope
leave
sub
mov
sub
pop
cmpsl
sub
and
lods
and
add
fistpl
ficompl
and
pop
lock
mov
pop
test
inc
dec
xchg
pop
insb
lcall
mov
sbb
out
xor
outsb
pop
sti
roll
cmpsb
xor
inc
mov
gs
popa
mov
xchg
jp
ret
mov
cmp
fwait
push
add
xor
nop
mov
lds
mov
mov
mov
sub
mov
loope
cmp
xchg
gs
rol
push
pop
push
add
das
add
sbb
and
inc
cmpsl
add
dec
and
jle
inc
jmp
pop
leave
adc
repnz
push
pop
jnp
clc
mov
push
pop
scas
xor
cmp
lods
mov
lcall
push
adc
cmp
lods
mov
add
outsl
mov
lahf
fcoms
icebp
outsl
fldt
add
imul
mov
xor
jecxz
lret
sahf
clc
leave
jge
xor
jl
mov
pop
pop
or
mov
rcrl
sbb
fstpt
push
xlat
in
inc
sbbb
inc
jns
ret
xchg
pop
mov
pop
test
stos
adc
lahf
cmp
add
dec
arpl
cld
sbb
inc
dec
sbb
sbb
add
sbb
xchg
push
push
rcrb
inc
loopne
shll
out
movsb
dec
xchg
in
outsl
xor
sbb
sub
inc
push
xor
ja
stc
sub
add
add
loop
cmpsl
or
sbb
and
push
in
jmp
adc
pop
cmp
fiaddl
sbb
dec
cmp
cli
sbb
xchg
mov
push
and
negl
push
pop
push
adc
cwtl
fiaddl
mov
lds
stc
adc
loop
pop
daa
fistpl
aad
scas
lret
adc
jmp
decl
jecxz
das
pop
notb
jl
jne
fiadds
lret
lds
and
jnp
push
aas
or
jmp
inc
add
insl
mov
roll
fists
cmc
push
pop
mov
mov
lods
dec
lcall
int3
mov
shrl
cmp
shl
pushf
ret
cs
add
lock
xlat
pop
dec
repnz
xchg
xchg
subl
mov
pop
jne
stc
xchg
lock
int
dec
sbb
xor
push
mov
ljmp
xchg
icebp
fs
daa
lea
sub
cmp
lods
in
sub
mov
aad
imul
test
push
mov
loop
and
pushf
add
push
sub
rorb
sbb
pop
loopne
mov
sarb
movsl
out
mov
pusha
out
jge
or
call
sbb
fsubrl
ja
add
xchg
mov
and
cmp
mov
jmp
dec
dec
inc
lret
mov
out
mov
mov
fwait
dec
nop
cmc
add
lret
add
mov
adc
mov
sub
xchg
jno
sbb
pusha
std
adc
dec
sub
mov
mov
cmp
xchg
into
mov
std
mov
cmpsl
dec
cmp
xor
int
js
aaa
or
orps
xlat
es
xor
add
ja
push
test
loope
jns
jecxz
cwtl
ret
mov
outsb
mov
test
loop
decl
out
or
movsb
jge
popa
stos
push
lret
repz
cs
movsl
inc
jge
cmp
popa
imul
add
or
jl
pop
jns
xchg
push
aam
push
test
fists
out
mov
mov
and
xchg
sub
xor
sbb
or
and
arpl
jmp
inc
andl
or
jns
stc
dec
cli
inc
jmp
push
movaps
jnp
shlb
iret
mov
or
ja
push
dec
pop
aam
lret
mov
int
sbb
mov
or
jmp
lret
call
popf
sub
pop
cli
test
pop
mov
shlb
fwait
xor
dec
mov
outsb
pop
jecxz
cmp
jnp
cmp
xor
dec
daa
mov
push
or
test
mov
inc
push
rolb
sub
mov
test
je
mov
cmp
xchg
adc
xchg
int3
outsb
push
ficomps
pop
pop
insl
adc
push
xchg
push
xor
xchg
sub
sub
push
jns
pop
push
sub
fisttps
sub
push
mulb
outsb
lock
pop
popf
stos
push
aad
inc
aam
in
jle
out
push
cmpb
repz
addl
loope
inc
sbb
inc
push
cs
push
cld
mov
stc
xor
cld
push
mov
lea
jge
enter
insl
jmp
or
outsl
fidivrs
jecxz
aam
inc
add
shll
mov
shl
cltd
inc
sub
inc
and
jmp
mov
fdivl
jb
cmpsl
pop
adc
mov
pushf
sbb
xchg
sti
adc
adc
jo
sbb
pop
inc
cli
cltd
loope
and
dec
stos
out
clc
pop
dec
fisubs
outsb
mov
imulb
and
inc
push
inc
cltd
and
inc
mov
or
movsb
movsl
cmp
sbbl
cmp
test
jns
jno
push
jp
movsb
imul
sub
add
jl
pop
dec
sbb
lods
fsubl
adc
lahf
dec
sbb
and
push
sar
ljmp
stc
mov
mov
pushf
test
lahf
jl
stos
mov
sbb
mov
ffreep
mov
ds
movsl
push
jno
negb
xchg
and
inc
stos
cmp
cli
ljmp
arpl
add
push
popf
add
mov
pop
dec
adc
mov
daa
xchg
ljmp
movsl
lock
aad
push
push
int
inc
std
into
pop
leave
push
mov
pop
add
mov
sbb
pushf
mov
cld
pop
mov
xor
hlt
sbb
jo
mov
mov
pop
jp
jno
or
lcall
sub
fdivs
fstpl
je
xchg
ds
push
test
lret
add
jmp
outsb
in
insl
xor
jmp
int
xlat
mov
push
sbb
loope
testb
xchg
sbb
mov
lds
popa
imul
pop
addl
xchg
lds
mov
out
filds
sbb
push
cwtl
out
lea
adc
fs
ficomps
fistps
cmp
adc
push
stos
xchg
sbb
xchg
aas
mov
mov
pop
paddusb
cs
rcl
int3
jbe
ret
lret
pop
nop
jo
push
dec
dec
jecxz
lcall
inc
je
mov
push
xchg
push
in
pop
xlat
mov
arpl
cwtl
sub
bndldx
adc
cwtl
sub
pop
fwait
or
faddl
cmc
sbb
push
jmp
imul
adc
and
sbb
loopne
inc
sub
push
or
pop
pop
xchg
cmpsl
dec
addr16
mov
mov
mov
adc
inc
sbb
aad
pop
in
adc
in
jae
mov
sub
hlt
and
inc
out
outsl
ljmp
pop
adc
adc
stos
jo
jnp
les
cmp
mov
fsubs
sub
cmp
mov
mov
xor
clc
cltd
jle
out
jbe
sar
sahf
xchg
cmp
gs
cmovbe
mov
pop
ret
push
push
scas
aam
mov
incb
shrb
cmp
mov
and
pusha
fisubl
mov
add
outsl
cmp
dec
rcll
mov
insb
add
pop
repnz
mov
rol
repnz
stos
arpl
mov
repz
test
shrl
icebp
inc
add
inc
dec
test
and
sub
sbb
fisubs
or
icebp
mov
push
int
adc
mov
repnz
js
inc
add
lds
add
xor
arpl
nop
add
arpl
xor
mov
mov
mov
push
lds
push
mov
ja
sbb
pop
pop
push
jecxz
ret
push
decb
sub
in
jbe
inc
in
aas
pop
movsl
bound
dec
push
cvttps2pi
mov
inc
and
mov
add
ficoms
xor
sub
pop
andl
shr
sti
add
incb
cmp
cltd
mov
dec
mov
fsubs
stc
mov
mov
push
in
and
sahf
cmp
imul
out
add
cmp
popf
enter
mov
sbb
and
loopne
dec
xor
or
arpl
mov
push
sbb
pop
rcll
cld
cmp
in
adc
adc
rcll
or
pop
sbb
cmpsl
pop
adc
sbb
lahf
mov
pop
mov
rol
inc
push
std
xchg
push
cmpsb
xchg
test
out
sbb
loope
push
push
fisttpl
fucomi
sahf
flds
sbb
mov
inc
ss
mov
or
and
test
cmp
inc
cwtl
dec
repz
outsl
cmp
je
xor
sub
mov
adc
addl
hlt
push
mov
lcall
out
add
sbb
cmp
xor
mov
or
shlb
pop
mov
loop
cmp
mov
xchg
pop
aad
imul
mov
pop
roll
mov
ljmp
xchg
daa
cmpsb
mov
sbb
inc
and
push
add
movsl
xor
jmp
enter
mov
sub
cs
cmp
add
dec
insb
fimull
xchg
aad
sub
cli
xor
pop
dec
pop
int3
fnsave
mov
or
cmp
lods
fimull
mov
jecxz
pop
shrb
popa
ror
fs
dec
fnstenv
leave
enter
out
repnz
mov
inc
fsub
in
int3
xlat
xor
stc
movsl
or
lcall
pusha
stos
stos
ljmp
insl
xchg
jbe
je
jns
jbe
add
xor
fneni(8087
pop
add
fcmovb
xor
data16
lds
mov
addr16
mov
push
icebp
ficompl
and
and
adcl
xchg
cmp
js
mov
jecxz
lahf
popf
lods
nop
or
imul
push
add
dec
rolb
into
add
mov
dec
mov
and
popa
subl
shll
rolb
adc
and
fs
xor
jl
dec
sub
aas
bound
adc
bound
sub
fnstenv
dec
shll
leave
pop
pop
insb
mov
pop
or
push
sub
pop
mov
mov
inc
mov
add
int
loope
iret
out
mov
ds
xlat
lods
cmpsl
sbb
cmpsl
popa
aaa
xchg
bound
dec
pop
xor
cmp
mov
xor
mov
sub
sub
popa
jo
inc
iretw
in
filds
ja
mov
shll
jno
arpl
clc
jno
sub
stc
xor
pop
les
xor
test
jl
add
dec
mov
sbb
dec
xchg
inc
outsb
pop
fsubp
mov
mov
lcall
inc
in
sub
sbb
adc
out
mov
jle
xchg
xor
push
pop
repnz
and
stos
sub
xor
imul
lahf
jmp
std
add
cmp
jb
ljmp
sti
push
test
inc
mov
outsb
repnz
insl
in
ret
incb
std
cmp
lock
push
cmp
icebp
lods
mov
inc
outsl
sbb
dec
mov
xor
jns
mov
fildll
lahf
dec
lea
xor
ljmp
and
cmp
loop
xchg
sbb
push
not
je
fcmovnb
xor
push
inc
push
cmp
push
mov
mov
cmpsl
outsb
shlb
repz
sbb
xor
jnp
and
add
push
inc
mov
xchg
xchg
in
cmpb
xor
call
mov
imul
dec
pop
mov
cmp
shlb
add
repz
mov
cli
pusha
push
fcoms
mov
pop
sti
lods
fnstsw
sarl
mov
jne
sbb
mov
js
add
insb
pop
mov
lods
out
pop
imul
push
dec
jl
stos
and
inc
arpl
mov
int3
jl
cld
bound
ljmp
jge
rcr
push
call
xor
popf
fcompl
mov
call
ljmp
mov
popa
sbb
sub
cmp
mov
pop
in
mov
mov
jo
lds
imull
jmp
adc
fwait
push
js
push
data16
pop
push
repz
adc
in
scas
sti
and
arpl
test
imul
jge
fisubl
mov
aad
hlt
leave
ds
aam
mov
data16
xor
xchg
dec
lods
scas
fsub
push
mov
dec
imul
add
dec
inc
and
in
arpl
lcall
jg
dec
in
sub
insb
hlt
adc
mov
faddp
push
xchg
inc
mov
adc
les
and
and
push
in
or
xor
cwtd
outsl
push
or
enter
call
rcll
jnp
mov
xor
stos
xor
icebp
or
cmp
scas
xchg
inc
sbb
xchg
in
lods
xor
push
push
push
dec
out
push
jno
mov
testb
into
lods
push
push
lret
sbb
mov
inc
adc
push
jne
fldt
fisubs
pop
arpl
out
pop
jl
sub
mov
add
aaa
pop
push
add
jecxz
or
pop
stc
aaa
loopne
mov
setnp
ja
imul
push
cld
fadds
mov
gs
jb
dec
packssdw
and
push
xchg
jb
sbb
xchg
ficoml
cmp
cwtl
cmpsl
xor
aam
pop
sbb
add
sub
repz
insl
sbb
in
test
notl
sbb
cmp
jo
int
mov
cli
sbb
xor
adc
inc
out
fnstenv
sbb
inc
sbb
repz
pop
sbbb
push
cs
pop
cmp
nop
and
inc
add
psubd
xor
adc
sahf
inc
call
xor
ret
ljmp
sub
sbb
pop
bound
cmc
sub
sbb
out
pop
xlat
inc
aad
pop
lods
test
push
outsl
fwait
mov
inc
and
sbb
loope
push
adc
clc
cltd
sbb
jecxz
and
pop
movsl
ret
or
mov
pushf
movsl
lea
aad
dec
unpcklps
pop
or
test
mov
lods
ds
aas
mov
push
cld
cmp
repz
bound
repnz
and
bound
mov
lret
out
xor
cmc
and
dec
mov
lret
lahf
push
sub
dec
or
fsubp
mov
scas
jo
mov
scas
or
aas
rclb
lret
inc
push
scas
push
mov
ljmp
and
cld
shlb
ret
out
lods
fistpll
sbb
xor
add
push
jns
push
push
pop
sub
inc
lods
jle
or
mov
andl
mov
sub
aam
adc
mov
fstpt
ds
popf
stc
nop
pop
outsb
jno
push
arpl
sub
cmp
fnstcw
inc
xchg
mov
testb
dec
imul
jns
pop
sub
cmc
subb
es
mov
cmp
fistl
pavgb
xchg
pop
sub
shl
fwait
idivl
sub
jmp
ss
pop
dec
xor
mov
add
mov
lcall
scas
test
repz
fidivs
int3
jmp
pop
mov
mov
mov
and
stos
add
cmp
testb
movsb
xchg
mov
arpl
push
repnz
lock
mov
sbb
ja
mov
cwtl
movsl
jnp
xchg
xchg
dec
push
xor
xchg
jp
jo
inc
mov
lahf
cmp
cwtl
adc
cmp
stc
add
xchg
gs
jge
sbb
enter
xor
mov
cmpsl
loop
fisttps
out
out
adc
cmc
xor
mov
pop
cwtl
cmp
jne
dec
js
cmp
adc
push
inc
adc
jbe
and
add
mov
ret
adc
xchg
ss
xor
dec
pop
into
fsubrs
sub
xlat
sub
or
js
jp
imul
fs
inc
add
mov
and
icebp
shrl
jmp
push
or
mov
cli
pop
mov
pop
into
cmp
cltd
fsubl
es
xor
repnz
xor
sbb
pop
xchg
cli
ret
js
sbb
push
or
in
jo
xchg
addl
adc
dec
cmp
dec
lods
outsl
icebp
and
sub
add
mov
mov
stc
notl
adc
mov
lret
scas
ja
ljmp
sub
cmp
and
mov
sub
push
push
repz
inc
inc
adc
inc
push
int3
and
dec
popf
ret
rclb
fldenv
sub
push
ss
push
inc
mov
inc
dec
inc
lret
jne
ret
shrb
inc
dec
jns
lcall
inc
cltd
leave
push
adc
ret
jns
inc
jmp
push
cli
push
fmull
add
cli
loope
adc
ficoml
jecxz
push
out
jmp
xor
inc
cli
adcl
mov
mov
out
jecxz
scas
insl
xor
push
adc
adc
arpl
push
into
add
or
loope
cmp
shr
js
and
test
std
dec
pop
adc
pop
pop
ds
or
xorl
add
repz
negb
ret
out
push
aas
es
cs
mov
mov
test
mov
ret
mov
mov
dec
test
push
or
lcall
out
mov
or
xchg
fdivs
imul
in
pop
jle
mov
pop
jns
movsl
jmp
lea
sbb
adc
xchg
cld
lods
push
mov
stos
shrb
aas
test
out
shlb
adc
xchg
je
int
inc
sbb
push
imul
loopne
push
in
add
cmp
pop
push
enter
pop
pop
xchg
shrl
push
mov
xchg
imul
mov
push
ret
out
mov
lret
aam
test
pop
pushf
dec
xor
in
mov
fiaddl
orb
test
xchg
push
add
dec
mov
mov
enter
fwait
sub
inc
add
les
mov
stc
inc
mov
inc
inc
es
mov
mov
inc
int
cmovl
lret
rorl
or
leave
cli
imul
push
jno
and
pop
push
mov
mov
iret
inc
out
adc
push
push
jnp
xchg
mov
mov
jae
dec
jl
pop
sub
xor
sub
xor
test
push
push
pop
shll
xor
nop
push
scas
shlb
mov
lret
call
repz
imul
arpl
pop
fstl
sbb
push
mov
sbb
sbb
mov
sbbb
pop
lea
lcall
mov
les
jns
mov
arpl
adc
insl
xchg
std
std
fldcw
decl
lahf
inc
lahf
lock
jnp
das
in
mov
xchg
pop
push
sbb
shlb
out
push
xor
xchg
mov
adc
xchg
jne
cli
mov
aad
in
daa
cmp
in
xor
rdpmc
add
or
push
outsl
or
gs
mov
mov
xlat
xchg
jmp
mov
scas
sbb
fwait
mov
push
sbb
jnp
xlat
dec
dec
xchg
imull
lea
bound
iret
mov
or
out
pop
push
cmpsl
or
cld
icebp
test
dec
in
gs
int3
mov
or
repz
lret
mov
and
inc
adc
aad
push
sbb
lret
cmpsb
ss
cmp
aad
lcall
inc
push
cmpsb
pop
loope
ja
icebp
out
add
and
push
jne
jg
push
enter
inc
add
fstpt
pop
pop
fcomi
dec
pop
ss
mov
add
rorl
xchg
lea
test
adc
clc
adc
hlt
inc
mov
fwait
test
pop
pop
xor
loopne
gs
mov
mov
pop
shll
sahf
aaa
jnp
mov
fistps
push
dec
test
sub
push
in
in
adc
adcb
dec
cmp
mov
or
in
and
data16
and
fildll
or
dec
jmp
push
adc
test
cltd
pop
add
rcl
xlat
ss
pushf
xchg
mov
and
lds
pop
lock
dec
lcall
dec
dec
repz
arpl
dec
cmp
loop
fiadds
sbb
cmp
sti
mov
mov
push
xor
cmpsb
cmp
xlat
xor
sub
mov
dec
rorb
cld
cmp
lock
dec
jns
in
push
mov
imul
les
pop
imul
mov
lds
adc
add
adc
dec
mov
pop
push
stc
sub
pop
loopne
test
xchg
mov
rol
ret
leave
xchg
lret
xchg
add
xchg
int
and
shrl
mov
or
movsl
jns
jmp
adc
pop
out
sub
inc
dec
sbb
mov
movsb
xchg
addr16
push
ficoml
adc
mov
mov
inc
insb
jns
cwtl
stc
sub
jg
mov
mov
dec
push
negb
pop
out
mov
push
jl
adc
dec
inc
sub
and
mov
arpl
dec
cmp
and
xchg
outsb
stos
and
insb
int3
das
aam
or
cmpsb
jae
xchg
sbb
lea
stos
int3
mov
das
or
arpl
jecxz
js
xchg
and
mov
andl
sbb
mov
addr16
jle
stos
mov
sbb
mov
mov
mov
adc
adc
mov
lret
insl
fstpl
add
mov
inc
loop
icebp
add
add
push
dec
bnd
lcall
sub
out
fstpl
cmpsl
orl
testl
ret
shl
ds
pusha
and
les
cld
repz
je
sbb
lret
jns
inc
insb
mov
xor
fmulp
dec
push
repz
outsl
jo
push
das
in
shrl
movl
mov
cld
mov
pop
lahf
inc
popa
pop
inc
lret
dec
seta
in
dec
dec
jnp
mov
push
mov
lret
jle
inc
dec
push
pop
in
push
jnp
mov
mov
add
adc
mov
lea
int3
jg
rcll
xchg
adcb
jo
mov
xor
movsl
mov
mov
popa
dec
inc
test
in
daa
icebp
xor
adc
cmp
andb
xchg
jg
xlat
xor
sti
das
aaa
filds
jo
jp
add
out
in
inc
and
cmp
mov
adc
lret
xor
rcrl
adc
rcrb
mov
adc
mov
outsb
sbb
mov
aam
mov
xchg
out
sub
pop
pop
pop
nop
push
sub
jl
jbe
add
jae
inc
sahf
stos
fisttps
add
add
je
bound
popa
add
popa
jo
gs
jb
outsb
arpl
add
add
jb
popa
add
popa
insb
insb
add
jae
push
add
add
imul
jae
imul
outsl
add
add
jne
outsl
outsb
add
add
add
imul
jo
popa
add
je
add
jae
jo
jb
add
add
add
add
add
add
jo
jo
add
add
bound
add
add
popa
insb
insb
add
jo
jb
add
add
add
imul
add
add
imul
push
data16
add
push
add
add
imul
jae
popa
insb
insb
add
add
add
je
add
je
add
outsb
add
add
popa
add
add
add
insb
insb
outsl
ja
add
add
insb
imul
popa
add
add
add
bound
jb
sub
je
add
add
insb
add
outsl
add
bound
add
add
add
add
add
popa
insb
insb
add
outsb
