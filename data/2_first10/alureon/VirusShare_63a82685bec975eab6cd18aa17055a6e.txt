push
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
pop
add
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
pop
add
pop
add
pop
add
mov
pop
add
mov
pop
add
mov
add
add
add
mov
ja
mov
mov
ret
mov
out
jne
pop
push
adc
add
shl
mov
repnz
push
shl
clc
jge
cmp
mov
js
into
out
and
sbb
xor
inc
jbe
test
mov
gs
or
mov
xorl
fidivrs
add
sbb
idiv
inc
fiadds
xchg
mov
insb
out
mov
test
in
adc
push
mov
movsb
inc
jb
xchg
mov
dec
les
jnp
and
stc
rcrb
cwtl
fisttpl
out
cmp
mov
xor
sbb
adc
pop
pop
ret
inc
out
or
xor
or
mov
in
ret
and
shrl
shll
scas
or
sub
fwait
jb
imul
dec
dec
or
cmpsb
lret
dec
rorl
xor
test
inc
ja
push
mov
sbb
fimull
arpl
push
dec
inc
and
shlb
roll
stos
sbb
sub
sub
sub
xchg
mov
and
mov
and
popf
sbbl
sub
add
push
lcall
mov
cmp
mov
inc
pop
dec
xchg
mov
popf
push
sub
sub
std
inc
cwtl
popa
cltd
mov
lods
cmpsb
xchg
dec
push
and
shrl
das
mov
ss
idivb
push
insb
lods
mov
xor
sbb
es
xlat
dec
pop
and
sub
adc
cmp
pushf
jae
jg
jge
dec
mov
ljmp
test
mov
mov
movsb
xlat
push
shlb
add
inc
test
mov
sub
outsb
adc
push
pop
xlat
fcoml
jno
ds
cmp
mov
in
push
das
sbb
cli
or
dec
lock
stc
dec
xchg
jnp
cltd
mov
inc
shlb
out
cmp
out
clc
jl
mov
mov
and
xor
ficoms
jecxz
faddl
adc
ss
push
lods
inc
data16
lret
nop
sahf
mov
push
mov
xchg
mov
jge
ret
pusha
lock
scas
fs
pop
cmc
push
sbb
aaa
test
scas
out
into
mov
sub
int3
int
mov
adc
mov
inc
cmp
mov
out
jno
sbb
ret
inc
ljmp
mov
cmc
push
cmpsl
cmc
mov
add
mov
cmpsl
pop
mov
cmpsl
inc
cmc
out
ficomps
sbb
sub
push
sbb
int3
fisubrl
movsl
rolb
sbb
ss
push
movsb
xchg
testb
jns
leave
or
test
mov
sbbl
jg
roll
push
ret
pop
fnclex
popa
sbb
and
std
or
imul
movsl
stc
pushf
lods
shlb
and
aas
neg
jl
push
xor
push
xor
mov
jbe
js
adc
sahf
hlt
andl
hlt
or
fisttpl
fiadds
mov
mov
lret
test
test
mov
xchg
inc
aam
add
jne
movsl
imul
hlt
jae
push
inc
and
loope
aam
cs
in
and
ja
cwtl
pop
adc
cmp
sahf
push
ss
jmp
dec
xchg
addr16
cmp
cmpsl
lods
sub
push
stos
pop
sarl
enter
pop
sub
or
icebp
push
jne
insb
clc
push
cld
xor
jg
sub
ja
push
dec
or
fnstenv
ds
mov
xlat
push
and
adc
imulb
or
aas
cli
and
psubw
pop
aad
or
out
fdivl
fnstcw
popf
jl
popaw
xchg
pop
dec
mov
xor
mov
lds
push
add
jo
push
or
popa
or
xchg
stos
cltd
loope
xor
call
lods
mov
sbb
loope
xchg
hlt
add
xchg
jb
or
sub
mov
fnsave
xor
dec
popa
imul
jne
mov
sub
xor
sub
ret
jbe
xor
imul
and
inc
incl
imul
outsl
push
pushf
stos
jno
cmp
xor
ja
addr16
mov
sbb
sbb
rolb
push
lcall
xlat
mov
cmpsb
ljmp
out
bound
mov
inc
dec
out
arpl
mov
mov
mov
cmp
stos
ss
lds
aad
outsb
cld
les
rcr
mov
lea
inc
lcall
pop
and
adc
add
add
dec
fidivl
repnz
push
xor
enter
mov
ret
mov
pop
lahf
pop
das
push
in
mov
push
mov
or
cmp
mov
cwtl
hlt
fstl
jb
jmp
movsb
mov
aad
inc
popa
pop
cmp
out
and
push
scas
inc
mov
loop
mov
movl
stos
mov
push
je,pt
and
int
pop
push
and
jmp
fldlg2
das
pop
in
rcrb
addr16
outsb
push
jg
negl
adc
jne
subb
mov
mov
aam
xor
fcomps
adc
cmp
sbbl
pop
inc
mov
inc
mov
out
add
dec
mov
push
int3
push
ja
pop
notb
inc
pop
or
shlb
adc
movsl
cmp
rol
add
popf
int
push
in
sti
pop
cltd
pop
aad
mov
pushf
mov
jg
push
add
or
mov
lea
cmp
sub
pop
dec
sbb
lret
pop
push
sub
popl
push
xchg
xchg
movsl
lahf
sarb
xor
inc
call
inc
repnz
and
dec
dec
cli
push
mov
cmp
fdivr
sahf
aaa
pop
add
ljmp
inc
cmp
lret
dec
pop
cmp
xor
addr16
jnp
daa
popa
ffreep
insl
icebp
sahf
jp
push
push
add
addb
rcll
push
iret
sub
mov
inc
leave
shlb
push
test
fcomps
mov
mov
pop
in
jb
add
xlat
into
popa
cli
loope
adc
xchg
les
in
ja
xor
test
push
test
fisttps
mov
dec
or
mov
ja
adc
adc
inc
shlb
iret
mov
icebp
lods
dec
cs
xor
aad
in
xchg
xor
cmc
and
flds
xchg
jnp
enter
xor
xor
inc
mov
push
inc
xchg
cmpsb
cmp
push
or
inc
cmpsl
lods
mov
scas
shl
and
stos
and
push
movsl
xchg
pop
out
in
mov
push
fstps
test
bound
cmp
leave
sbb
adc
mov
ljmp
fcom
add
cmpsl
cmp
into
pushf
aaa
xchg
jae
pop
mov
out
mov
clc
mov
push
mov
decb
dec
les
xor
inc
stos
fcomi
push
mov
les
xchg
data16
test
jecxz
xchg
push
aad
xlat
mov
jl
popf
add
pop
lret
lock
jmp
lea
fsubrl
cmp
imul
mov
shlb
xchg
out
add
data16
scas
xchg
rcll
xor
lds
mov
cmp
mov
xor
pop
push
stos
call
enter
lods
icebp
jge
sbb
inc
addr16
push
xchg
cmp
mov
gs
add
pop
outsb
add
cmp
popa
jnp
cmpsl
mov
insl
test
inc
sub
lea
and
fcomps
adc
xor
push
jb
outsb
xor
sbb
hlt
in
adc
cwtl
jmp
mov
int3
mov
mov
adc
std
inc
into
lcall
or
adc
test
push
sarb
stos
ret
xchg
out
pop
andb
add
or
mov
and
inc
ds
in
adc
push
clc
mov
and
nop
sbb
adc
leave
je
ljmp
sti
mov
stos
aam
lods
xchg
insl
adc
sub
out
pop
jmp
cmp
xchg
fldl
es
sbb
lea
outsb
stos
pop
arpl
aas
stos
push
shlb
stos
das
push
je
popa
ss
fsub
push
cwtl
cmpsl
push
pop
aam
repnz
push
aad
push
nop
ror
imul
orb
in
push
popa
repnz
into
ss
inc
test
in
fs
in
out
sbb
push
jae
jns
scas
mov
jo
mov
sub
fiadds
pop
arpl
inc
adc
pop
sub
es
test
adc
mov
into
pop
sub
in
jmp
lahf
pop
out
andb
insl
aas
mov
mov
add
jg
push
push
lret
xor
dec
push
jge
sbb
pop
pop
clc
clc
je
repnz
inc
jmp
ret
test
and
cmp
jle
imul
xchg
cld
push
and
mov
mov
testl
or
enter
xchg
mov
fists
rcrl
mull
cmp
pushf
mov
out
mov
lods
push
sbb
dec
sub
pop
adc
add
xchg
or
stos
cmc
mov
mov
xchg
xchg
or
aam
test
or
incl
jmp
pop
jg
pop
jo
push
sub
rcrl
aam
pop
inc
inc
and
push
push
xchg
mov
loopne
into
add
int3
rcrb
xor
repz
jae
add
fxam
add
pusha
sarl
test
loope
pusha
lods
cmpsl
adc
dec
adc
int3
leave
mov
ljmp
cli
ss
jnp
pop
imull
je
insl
cmp
cmp
xchg
ret
dec
lret
mov
xor
es
and
stos
pop
xchg
xlat
nop
loope
lret
push
int3
cmp
pop
mov
mov
push
push
in
lock
popf
lods
fs
in
in
faddl
add
pop
adc
int3
les
int3
pop
push
xchg
mov
mov
jno
mov
iret
sbb
cmp
xchg
push
mov
enter
adc
pop
ret
xorl
out
cltd
sub
lcall
mov
or
mov
add
test
sbb
push
push
mov
pushf
mov
push
jge
mov
add
js
sub
mov
pushf
mov
cmp
out
xchg
lods
pop
movsl
adc
or
dec
adc
int
bound
sbb
inc
mov
sarl
adc
rcrl
add
pop
adc
or
ret
mov
push
mov
mov
sub
call
imul
add
call
lea
push
inc
call
call
call
lea
add
sub
movswl
mov
inc
dec
dec
xor
xor
add
and
lea
sub
imul
lea
add
dec
dec
dec
sub
sub
lea
sub
call
mov
sub
call
lea
lea
imul
movsbl
add
imul
movsbl
inc
pop
lea
mov
movsbl
add
inc
pop
lea
add
pop
dec
movzwl
dec
mov
pop
dec
mov
inc
sub
mov
mov
mov
inc
pop
mov
dec
pop
imul
mov
mov
or
mov
call
imul
dec
or
imul
ret
mov
dec
push
lea
dec
push
mov
add
push
inc
xor
push
and
dec
push
inc
mov
mov
mov
sub
push
add
ret
push
dec
movsbl
mov
dec
lea
inc
mov
push
mov
dec
push
inc
call
pop
ret
jmp
mov
and
imul
dec
movzbl
mov
dec
xchg
dec
mov
inc
imul
xor
mov
dec
inc
mov
inc
add
add
dec
jne
mov
mov
dec
mov
pop
sub
or
pop
and
dec
pop
inc
mov
mov
add
imul
lea
add
dec
mov
mov
add
add
ret
push
inc
mov
inc
add
inc
mov
inc
mov
push
push
push
push
dec
sub
mov
push
inc
sub
inc
mov
inc
sub
mov
movzbl
sub
mov
inc
push
inc
imul
xor
imul
mov
push
sub
inc
push
imul
mov
pushl
movzwl
call
lea
add
add
inc
dec
mov
mov
lea
dec
pop
ret
jb
inc
xor
mov
lea
movzbl
mov
inc
inc
inc
inc
add
inc
mov
add
mov
add
inc
cmp
jb
dec
mov
inc
dec
xor
lea
xor
and
pop
dec
inc
test
jbe
mov
inc
sub
mov
imul
lea
imul
dec
dec
add
dec
and
lea
lea
lea
inc
inc
inc
mov
add
imul
sub
mov
and
mov
lea
mov
mov
inc
movzbl
sub
lea
add
inc
add
and
add
inc
mov
imul
sub
mov
and
inc
mov
lea
add
mov
sub
dec
mov
add
add
dec
dec
jne
dec
mov
sub
inc
mov
inc
imul
movzwl
mov
inc
dec
mov
mov
mov
inc
lea
add
mov
mov
inc
lea
mov
add
movzwl
test
jbe
sub
dec
add
mov
inc
mov
imul
inc
mov
or
movsbl
mov
mov
lea
imul
inc
imul
add
sub
lea
inc
mov
and
lea
inc
mov
xor
mov
movzbl
sub
add
add
mov
mov
and
inc
xor
mov
mov
mov
movzbl
dec
dec
mov
lea
mov
mov
mov
inc
movzbl
imul
inc
add
mov
jmp
push
call
mov
xor
mov
add
xor
movzbl
movsbl
inc
mov
inc
inc
add
mov
xor
or
mov
lea
add
shl
imul
mov
xor
add
or
push
and
mov
dec
call
mov
pop
dec
dec
inc
add
dec
add
mov
dec
cmp
je
call
call
mov
iret
mov
add
mov
mov
sub
mov
dec
mov
movswl
inc
mov
dec
dec
and
pop
movswl
ret
push
imul
mov
dec
add
lea
push
add
sub
push
xor
push
inc
push
mov
sub
push
inc
or
inc
inc
imul
call
inc
push
inc
push
lea
pop
mov
inc
mov
add
dec
mov
mov
add
inc
lea
and
dec
je
imul
mov
dec
dec
or
lea
imul
mov
add
mov
mov
add
mov
dec
add
add
and
repnz
xor
mov
add
mov
jmp
inc
xor
mov
dec
movzwl
mov
sub
dec
and
lea
mov
add
jmp
mov
sub
inc
sub
pop
pop
ret
push
inc
movswl
add
mov
xor
mov
add
or
imul
inc
mov
dec
inc
mov
mov
movzwl
lea
imul
dec
inc
sub
mov
lea
inc
sub
dec
inc
pop
ret
sub
dec
mov
add
add
mov
mov
and
mov
sub
dec
mov
mov
movzbl
xor
inc
dec
mov
or
imul
inc
mov
lea
and
mov
imul
sub
cmp
jb
lea
push
add
inc
push
sub
dec
push
or
add
mov
dec
inc
xor
imul
mov
xor
lea
inc
xor
imul
inc
push
imul
sub
xor
dec
inc
mov
inc
inc
mov
dec
movzbl
add
add
dec
add
add
imul
add
dec
add
movzbl
lea
mov
inc
add
movzbl
dec
dec
inc
movzwl
mov
xor
lea
dec
movswl
or
cmp
jmp
cmp
mov
pop
mov
insb
adc
shlb
add
mov
cli
dec
mov
push
cltd
adc
jnp
pop
sub
repz
pushf
and
jnp
jg
pop
loopne
data16
sub
imul
in
dec
dec
movsl
pop
inc
inc
sbb
lahf
fadds
xor
imull
in
dec
mov
arpl
out
or
in
out
mov
xor
pop
sub
in
in
jns
or
inc
push
data16
sub
dec
cmpsb
test
test
das
push
cmp
imulb
mov
push
je
shll
lcall
cltd
divb
insl
arpl
aam
xchg
mov
push
xor
add
test
mov
outsb
popa
and
dec
cmp
lret
push
mov
sub
add
push
cmpsb
fwait
jo
pop
daa
mov
jecxz
sbb
je
and
xor
fwait
mov
xor
and
dec
push
repnz
pushf
sub
push
loope
stos
pop
div
sub
xchg
rcll
mov
inc
mov
mov
jmp
out
mulb
cli
sbb
bound
jge
push
loope
loopne
push
cld
stos
mov
subl
mov
xchg
inc
imul
xlat
mov
push
lret
mov
cmc
fistpl
jb
imul
fmull
or
aaa
pop
inc
sub
jno
cli
mov
push
inc
nop
mov
enter
cli
mov
std
movsb
sub
imul
and
mov
pop
and
enter
xor
jnp
ret
test
in
add
add
andb
sbb
iret
out
cmc
jecxz
fninit
sub
addr16
push
adcb
or
jmp
and
or
inc
aad
or
cmp
cld
push
sbb
cmp
clc
push
mov
scas
scas
add
cmpsl
adc
rorb
pop
rcrb
dec
in
or
int3
adc
and
bound
jno
popa
push
cld
mov
call
rcrb
jle
in
or
pop
in
movhps
je
push
sbb
mov
push
cli
add
dec
cmpb
inc
and
pushf
nop
push
mov
mov
and
ljmp
inc
cmp
cmp
insb
mov
xor
pusha
cmp
mov
and
mov
loope
clc
sbb
andb
pop
inc
into
lea
inc
fsubrl
pop
lahf
out
cmp
fstps
jnp
sub
fs
sbb
mov
pop
adc
push
fistpl
mov
jbe
loopne
pop
xchg
push
scas
xchg
push
sarb
insl
shlb
cmp
pop
add
popa
cli
fisubs
cmp
sbb
push
jg
dec
jbe
cwtl
fdivl
ret
xchg
mov
jbe
dec
sub
icebp
xlat
stc
outsl
mov
mov
and
jb
test
ret
arpl
mov
iret
push
out
popf
imul
rcrl
fs
cmp
cld
xor
jmp
dec
mov
ljmp
cs
imul
js
daa
or
sti
cmp
sub
in
add
add
jmp
xor
xchg
inc
lahf
xor
fdivrl
loopne
fists
xlat
das
pop
jae
jbe
aaa
jle
cld
int3
frstor
inc
xchg
push
xchg
sbb
test
cli
cmp
jne
or
pop
in
iret
jae
pushf
dec
subb
mov
adc
dec
xor
mov
fnstcw
faddl
push
push
add
sar
xor
push
add
cltd
ret
scas
cmpsb
pop
adc
test
movl
iret
push
scas
js
fildl
mov
add
and
roll
popa
outsb
ss
outsb
les
sub
rolb
jae
and
daa
out
mov
or
scas
mov
mov
push
mov
mov
dec
jmp
data16
mov
add
jle
mov
or
addb
in
cmp
repz
push
mov
mov
jmp
mov
pop
int3
push
cmc
mov
ret
mov
mov
shrl
repz
mov
dec
xchg
mov
sub
cltd
int3
pop
adc
adc
dec
ljmp
cmpsb
pop
sub
rclb
mov
dec
sbb
xor
push
rcll
test
mov
pop
ljmp
movsl
shll
fstl
pop
adc
jo
movsb
cs
dec
imull
cmc
scas
imul
or
clc
mov
cmp
je
sub
xchg
roll
xor
ljmp
sub
and
setae
dec
add
sbb
dec
cwtl
ficoms
jne
jno
icebp
js
and
xchg
or
xacquire
stos
enter
xchg
push
mov
stos
movsb
stos
mov
lea
fstl
es
dec
push
int
cmp
mov
or
jle
rcrb
mov
inc
pop
mov
stc
jns
add
dec
out
lds
cmc
cmp
jae
and
mov
push
xor
push
dec
mov
mov
daa
add
in
ret
xor
cmpsl
repnz
xor
or
stc
cmp
cmp
rorb
mov
mull
cmp
js
mov
xchg
xchg
repnz
jp
pop
dec
outsl
cwtl
xor
xchg
add
popa
in
xchg
lds
popa
test
sub
ja
aam
xor
push
int3
fnsave
adc
add
ljmp
sbb
stos
jne
dec
adc
rcrl
xchg
jns
push
orb
shr
ss
mov
hlt
or
mov
iret
mov
pusha
mov
loop
repz
icebp
loop
imul
outsb
ret
or
sub
mov
xchg
mov
push
in
cmp
fcompl
push
mov
decb
ret
xchg
stc
jo
cmp
mov
mov
lock
sub
call
out
aaa
or
adc
jbe
andb
mov
inc
cmp
and
mov
repnz
insl
xchg
or
lock
sub
out
xchg
fnstsw
jbe
mov
mov
push
lret
pop
fimuls
stos
insl
into
jo
mov
enter
jl
mov
xlat
enter
sbb
filds
pop
cs
mov
cmp
mov
aaa
sbb
xor
mov
mov
mov
sub
mov
scas
xchg
and
fisttpl
mov
outsb
inc
sub
das
dec
ljmp
and
sub
popa
popf
filds
jae
add
cld
pop
dec
ds
add
xchg
fbstp
add
mov
mov
dec
in
jecxz
sub
imulb
adc
das
lods
adc
stos
push
inc
mov
pop
jg
aas
test
pop
xor
jecxz
lret
inc
lret
jl
jae
mov
repnz
js
iret
xchg
fprem1
push
call
or
jmp
push
in
and
mov
test
jb
insl
sbb
xchg
dec
das
push
sarb
fists
lds
jae
adc
dec
jae
xor
lock
and
ret
add
shr
outsb
sub
jecxz
jg
notl
jg
inc
sub
mov
or
loop
das
push
push
jns
pop
int
imul
sti
sub
mov
js
fcmove
and
mov
mov
fcompl
lahf
mov
aad
popf
add
cmpsb
pop
hlt
jnp
pop
pop
xchg
ss
and
call
or
dec
repnz
lods
dec
lds
mov
std
loope
std
lahf
ss
mov
mov
sub
outsl
pop
fcmovu
out
and
xor
or
push
push
stos
shll
push
add
fdivrs
xchg
push
mov
shlb
ror
inc
idivl
fwait
ja
mov
jmp
fcomp
stos
jo
mov
inc
mov
add
je
or
push
push
mov
adc
jp
ljmp
enter
int3
mov
les
lea
inc
push
fmuls
popf
jbe
sahf
loopne
xchg
push
loope
iret
and
inc
in
jo
sbb
loopne
pop
mov
imul
pop
push
mov
mov
in
push
cs
in
mov
dec
mov
repnz
pop
imulb
std
sub
inc
mov
and
mov
call
pop
cs
xchg
jbe
jno
insl
sti
es
cmpsb
fmuls
push
jb
adc
fcoms
inc
int3
test
and
in
adc
mov
jl
adc
aas
roll
dec
test
xchg
pop
orl
out
and
push
cmp
cmp
loopne
mov
test
mov
jl
adc
jae
in
mov
ret
and
sar
out
cmp
jb
xor
sub
mov
and
mov
repnz
nop
push
jns
mov
subb
adc
in
leave
fildl
push
push
mov
cmpl
adc
or
aas
jnp
jno
or
ret
inc
adc
mov
sub
pop
cwtl
pop
push
jb
sub
in
iret
movsb
sub
mov
es
das
cmp
sarl
jb
fs
lahf
lods
bound
jecxz
ljmp
cmp
or
push
mov
call
mov
inc
sbb
leave
das
negb
mov
repnz
iret
sbb
lea
xchg
fdivl
sbb
into
push
mov
adc
mov
shrl
nop
popa
cltd
xor
inc
pop
icebp
sub
inc
mov
scas
cltd
mov
adc
stos
into
pop
sbb
ja
fisubrs
lds
mov
and
cmp
jge
or
mov
cli
popf
outsb
xor
sahf
aas
sbb
stc
xchg
fdivrl
outsb
xor
cmp
fisubrl
inc
mov
cmp
fsubl
cmpsb
ret
xchg
mov
test
sbb
cltd
adc
push
sti
lret
jg
filds
xor
cmpsb
es
jae
xor
add
roll
sub
jnp
rol
add
cmp
dec
lds
aas
adc
or
adc
test
fs
mov
loopne
jmp
enter
and
stos
addr16
pop
imul
neg
ror
pop
mov
dec
push
stos
ret
jae
mov
mov
andb
dec
testb
out
ret
repz
data16
pop
xchg
scas
je
and
adc
int
push
sbb
or
jl
mov
cmp
jb
mov
insb
mov
cmp
push
nop
insb
ljmp
jl
mov
xchg
mov
insl
and
pop
insl
insb
and
aam
push
fcomi
push
lods
out
insl
sub
mov
xor
adc
lahf
mov
adc
sub
add
or
ja
xor
inc
push
and
push
and
xchg
push
movsl
icebp
mov
in
icebp
sbb
sub
inc
loopne
inc
jne
fisubl
shll
cmp
ds
mov
mov
add
sahf
lcall
orl
js
fsubl
fisubs
fdiv
insb
or
out
and
mov
add
cltd
and
es
shrb
iret
fldenv
cmp
dec
dec
sbb
xor
clc
aas
jno
ds
fnstcw
mov
mul
out
stos
bound
xor
mov
bound
and
jl
mov
mov
imul
cmc
cmp
xor
lods
ss
aas
add
mov
in
xor
and
imul
adc
mov
or
mov
xchg
pop
scas
cmp
cmp
add
pop
lds
pop
inc
fs
imul
imul
sub
push
push
fstpt
inc
sbb
adc
dec
jne
pushf
pop
sahf
fistpl
je
cltd
cmpsl
outsl
xlat
add
xchg
cmp
mov
jp
mov
sbb
ret
lods
mov
data16
fiaddl
or
adc
adc
or
dec
stc
insb
fwait
sbb
push
lret
into
jp
insb
inc
inc
jg
lods
shlb
or
pop
jg
in
cmp
addl
cmp
xchg
push
stos
cwtl
es
xlat
lock
sbb
cmp
or
aam
test
dec
pop
sbbb
in
sub
imul
sub
ljmp
cld
in
bound
inc
lahf
xchg
aam
inc
mov
mov
mov
pop
das
sbbb
sub
arpl
push
hlt
mov
xor
es
and
push
cmp
jo
fsubrl
rcll
ss
sub
xlat
insl
sub
inc
push
add
jae
mov
lret
dec
xchg
xchg
push
movsb
pmulhuw
pop
inc
imul
inc
xchg
jle
xor
es
stc
outsl
ret
jge
sub
fwait
xor
ja
mov
mov
inc
inc
pop
or
in
lcall
cmpsl
call
mov
imul
xchg
enter
inc
pop
mov
jne
je
cmp
and
cmpl
scas
mov
xchg
mov
xor
pusha
addr16
xor
data16
cmp
dec
push
sahf
and
mov
bound
imul
lock
or
les
inc
daa
push
mov
mov
lcall
dec
shlb
loopne
lds
mov
stos
enter
fldt
popa
insl
push
clc
dec
cmpsl
mov
jge
jae
xchg
icebp
repnz
lock
xchg
aaa
pop
testl
shl
loop
das
das
xchg
fbld
dec
mov
mov
icebp
sub
jo
je
xor
fisttpl
inc
les
dec
repz
lret
fcomps
out
mov
sbb
lods
cmpsb
test
popa
jmp
mov
xor
xlat
push
ss
ds
pop
gs
in
fwait
daa
mov
push
aaa
faddl
push
lock
pop
enter
inc
mov
ja
jmp
adc
sub
repnz
cwtl
idivl
ret
xchg
in
mov
pop
mov
inc
repnz
xchg
mov
jl
mov
and
mov
imul
out
sbb
xchg
add
lret
fdivrs
aad
fcomps
nop
fildl
jns
sbb
push
hlt
addr16
pop
inc
addr16
push
jg
pop
adc
sbb
mov
dec
fcompl
sub
inc
mov
add
sbb
in
das
lret
pop
das
sub
jo
inc
nop
cmpsb
sub
out
mov
cmp
mov
mov
stc
pusha
repnz
mov
push
repnz
andl
fcoms
add
or
inc
cmp
leave
fsubl
pop
and
fdivrp
sub
enter
sub
aaa
in
adc
arpl
outsl
jb
stc
inc
ja
movsl
xchg
push
push
dec
cmpsb
in
mov
inc
lock
push
das
mov
into
fs
inc
bnd
repnz
or
and
aaa
je
adc
int
sbb
repz
jge
jae
shrb
shll
insb
aam
scas
jmp
push
cmp
push
test
cltd
insb
push
imul
pminsw
pop
push
sbb
sbb
inc
cmp
test
adc
and
lret
jnp
std
dec
sbb
nopl
push
and
inc
lock
ja
add
aam
movl
inc
orl
mov
pop
enter
pop
or
add
pop
mov
jae
js
push
adc
stc
in
add
mov
xchg
xor
fdivrs
pushf
call
lods
pusha
scas
add
imul
mov
mov
sti
inc
lds
out
scas
cmp
ror
mov
cmpsl
popa
aad
push
imulb
insb
and
mov
pop
pop
sub
pop
inc
dec
cmp
gs
adc
mul
lretw
aam
stos
add
add
or
sti
ret
mov
lods
in
test
sahf
xor
xchg
decb
sub
lea
nop
sub
in
adc
ret
shrl
dec
iret
jle
and
adc
loopne
push
push
repnz
inc
inc
dec
sbb
pop
cmp
xchg
jns
pop
fdivrs
mov
jle
xor
inc
jle
fsubs
push
repnz
and
outsl
mov
cs
pop
enter
rorb
incl
enter
dec
jb
inc
xor
mov
rol
out
ret
std
test
leave
mov
cmp
xchg
mov
sub
sahf
xchg
daa
adc
cmc
ljmp
and
in
ret
ds
adc
aad
cmp
xchg
sub
add
mov
push
mov
cli
repz
lcall
les
sub
mov
jecxz
fcoms
ja
jb
lcall
ficoml
test
or
mov
adc
sarl
lock
add
aas
icebp
aam
add
fisttps
in
aam
mov
insb
adc
jo
or
sub
mov
bound
sbb
xchg
xchg
call
mov
sub
cmpsb
jae
hlt
adc
cmp
xchg
pop
mov
sbb
in
aad
in
test
jnp
pop
or
leave
icebp
push
push
xchg
push
imul
jle
cmc
lea
xor
das
in
mov
pop
stos
in
filds
popf
xchg
push
jl
dec
jns
dec
adc
sbb
test
into
mov
pop
cmp
adc
cltd
into
fimull
adc
hlt
mov
loop
iret
mov
dec
sub
xchg
subl
mov
dec
outsl
clc
cmp
call
xor
arpl
lds
and
je
pop
js
mov
dec
call
movsl
dec
or
cmp
imull
addb
mov
or
xchg
inc
leave
shr
inc
xor
rclb
inc
add
roll
aam
xorb
adc
arpl
lea
dec
xor
mov
mov
add
cmp
and
shl
jle
sub
aad
jne
lahf
mov
sub
mov
adc
adc
pop
cwtl
orb
stos
addb
mov
inc
mov
movsl
mov
xchg
rcll
enter
adc
mov
xchg
jb
push
push
in
incb
ljmp
mov
pop
ret
sub
mov
push
je
sbb
push
cmp
mov
sbb
cmp
leave
aaa
adc
scas
jge
std
add
sub
or
addr16
cwtl
adc
xchg
mov
jl
xlat
dec
xor
imul
fisttps
jo
mov
out
mov
add
add
outsb
and
mov
das
and
fldenv
lds
push
inc
pop
mov
and
jnp
push
xchg
pop
add
pop
add
inc
xor
test
or
mov
pop
loopne
in
inc
pop
jle
fdiv
jns
movsb
cmpsb
es
mov
int3
fbld
push
outsb
or
std
daa
out
pop
mov
sub
mov
xor
push
insb
mov
xor
push
mov
scas
dec
shll
imul
lds
adc
and
mov
pushf
jne
popf
mov
lods
xor
out
insb
dec
pushf
test
sahf
stos
push
stc
add
in
push
out
add
add
fwait
je
clc
pop
dec
inc
orb
andl
cmp
mov
push
jbe
out
shlb
adc
sahf
pop
add
cs
fldcw
xchg
jnp
mov
cmp
inc
daa
test
divb
jg
leave
js
lods
insb
shlb
pop
leave
out
dec
or
scas
xor
jge
aam
push
jl
push
cmpsb
ds
dec
mov
lods
test
jmp
dec
sahf
sbb
push
pop
cwtl
mov
nop
mov
pop
in
loope
dec
shlb
stos
aaa
das
dec
push
movsl
jns
negb
dec
subl
pop
mov
je
jge
js
pop
adc
aad
lds
xor
out
sub
inc
cmovs
and
sub
les
or
mov
scas
sub
inc
pushf
mov
mov
cmp
jl
shrl
pushf
addr16
sub
and
inc
insb
pop
jp
cmp
mov
jl
fwait
pop
jge
test
or
xor
sbb
fimuls
mov
dec
das
push
mov
movsl
lock
pop
xchg
arpl
ljmp
xchg
xor
mov
dec
arpl
push
jle
out
push
ja
fisubl
cs
enter
xchg
pushfw
sub
dec
jle
mov
jnp
sub
out
sbb
xchg
movsl
dec
or
mov
imul
ret
cmp
mov
lock
cmc
aad
loope
das
jae
out
inc
pop
pop
pop
and
cwtl
jne
shll
pop
xor
testb
xchg
lahf
popa
mov
xlat
pop
out
std
jb
adc
out
stc
lock
mov
jbe
or
nop
xlat
mov
mov
mov
les
sbb
sar
lcall
js
daa
rcl
sub
lock
js
lahf
inc
xchg
cmp
lds
mov
mov
pop
mov
jb
push
iret
jg
stos
jmp
sub
mov
cmp
into
movsb
scas
inc
xchg
fcmovnbe
out
sar
push
or
cli
arpl
jl
xchg
cmp
lea
inc
stos
shll
icebp
jg
cwtl
pslld
jns
gs
fisubrl
cli
pop
mov
cld
add
std
and
andb
enter
into
mov
jp
dec
inc
mov
lret
mov
movsl
mov
mov
out
imull
imul
pop
test
and
sahf
push
mov
adc
sahf
jle
or
bound
mov
adc
insb
add
push
fs
lds
sub
adc
ljmp
repnz
arpl
fldcw
pusha
sbb
jnp
or
shll
jae
scas
hlt
mov
mov
add
ss
add
pop
addr16
cwtl
push
js
adc
lret
pusha
mov
xchg
lock
dec
pop
mov
xor
sub
cmpsb
gs
inc
jecxz
push
sbb
std
mov
cmp
xlat
xchg
stos
fists
outsl
mov
xchg
mov
and
fildl
push
jle
mov
in
mov
xor
mov
les
aam
out
shrb
cmp
or
jecxz
rcl
scas
jp
cmp
idivb
loope
loope
mov
fisttpll
or
in
loopne
int
dec
jmp
pop
ficomps
mov
dec
fidivl
sbb
or
test
es
inc
jge
cmp
mov
adc
imul
lock
std
insl
xchg
xchg
leave
stc
div
jnp
xor
ljmp
pusha
xchg
mov
push
add
push
lods
enter
addr16
add
test
add
shl
push
and
add
sti
mov
add
push
push
cmp
aad
pop
mov
xchg
vmovupd
sbb
jb
jmp
xchg
mov
push
jp
cltd
mov
mov
movsl
pop
inc
push
cmc
ret
sahf
aas
rcrb
push
jno
lock
and
pop
cs
lret
jl
fstps
mov
stos
adc
xchg
sbb
fnsave
addr16
in
frstor
lret
ffreep
int
mov
mov
fwait
mov
xchg
jp
xor
hlt
shlb
sarb
dec
pop
insb
xlat
stos
or
lcall
or
pop
push
shll
movsl
negb
push
fsubr
mov
lcall
and
fwait
push
lret
push
add
mov
xchg
pop
shll
add
push
ljmp
enter
in
in
xchg
cwtl
dec
fs
mov
pop
insl
call
mov
test
mov
mov
dec
lods
in
adc
subl
dec
xchg
mov
cmp
movsb
xlat
icebp
mov
cmp
pop
ds
in
ss
fdivr
outsl
movsl
sub
or
cmc
test
popa
add
movsl
xor
sub
cmp
lods
pop
mov
push
aad
int
push
add
dec
and
aaa
mov
mov
popl
and
sbb
ret
mov
mov
mov
or
jns
outsb
or
push
rcrb
out
and
inc
fsubr
mov
aad
lods
cs
and
mov
cmp
add
cmp
es
outsl
jl
xchg
xchg
dec
sub
dec
mov
xchg
jmp
jg
xor
pop
shr
shll
pop
rol
mov
inc
fistps
fistl
jae
lock
mov
xchg
loopne
lcall
sarb
sub
test
popf
cmc
rolb
mov
addr16
shlw
aaa
xor
jnp
cs
push
movsl
push
mov
pop
jmp
adc
xor
cmpsb
sbb
lea
out
mov
iret
aas
inc
jl
outsl
push
movsl
sbb
loopne
rorl
add
roll
add
fdivrl
sbb
pop
mov
pop
sub
out
lcall
mov
cmp
push
fistpll
fwait
or
shll
xor
xor
addl
sub
cmpsb
fmull
jae
jg
jae
fstpl
push
xor
dec
jg
cmpsl
sub
xchg
adc
dec
aas
in
jbe
std
lods
sti
add
jg
or
out
out
lahf
into
adc
or
mov
sub
imul
jne
pop
mov
xchg
sub
sbb
mull
dec
pop
pop
jb
out
out
push
mov
das
lahf
in
orb
adc
out
push
jno
pop
xchg
jae
mov
sbb
push
inc
rcrl
les
nop
incl
mov
add
sub
mov
pop
push
push
test
roll
ljmp
ficoms
and
push
mov
stos
inc
mov
push
fcmovnb
mov
or
imull
sbbl
loop
sub
movb
lret
push
test
dec
les
inc
cld
pop
adc
adc
lret
cwtl
jne
mov
sbb
jmp
filds
cmp
out
movsb
xchg
inc
popa
inc
ljmp
in
and
xor
adc
inc
int3
dec
mov
pop
pop
call
jbe
in
sub
and
fwait
idivl
sbb
dec
cmp
cmp
loop
cs
pop
dec
and
movsb
mov
push
push
orl
push
addr16
push
cmp
mov
push
mov
gs
bound
dec
jno
push
nopl
ret
mov
xor
jnp
mov
inc
sbb
sbb
pop
imul
xor
shlb
sub
out
cmp
in
jns
push
pop
mulb
cmp
js
lret
dec
cs
lret
push
or
rcr
ss
jno
bound
sbb
in
inc
mov
cwtl
sub
out
jmp
sahf
fwait
jns
sub
out
mov
repz
pop
push
vpsubw
int
sarb
xchg
xchg
mov
popf
xor
and
fsubl
cmp
arpl
add
std
mov
sbb
adc
fstpt
push
aas
fiaddl
xchg
add
imul
arpl
stos
xchg
frstor
mov
xor
enter
in
dec
sbb
or
or
mov
incl
add
dec
push
gs
mov
push
jecxz
sbb
cmp
shll
or
fldt
movsl
dec
outsb
jl
sub
fimull
pop
mov
pop
in
js
xchg
jle
pop
inc
push
mov
xor
leave
lret
insb
cmpsl
xchg
inc
repnz
arpl
mov
adc
push
push
test
imul
sbb
adc
popa
mov
aam
jmp
jmp
lahf
mov
cmp
push
sahf
push
jg,pn
jne
add
mov
dec
loopne
and
jne
xor
iret
repnz
or
mov
leave
mov
ret
addb
fnstcw
popf
xor
in
push
push
sbb
add
rorl
mov
mov
sti
xor
lds
xorl
out
jno
scas
sub
arpl
movsb
lcall
jl
sbb
xor
mov
ja
outsb
and
adc
dec
sub
popa
call
inc
je
xchg
adc
push
mov
repz
pandn
cmp
ret
sub
push
enter
aam
data16
popf
out
retw
sbb
insl
push
cmc
pop
and
sbb
in
or
sub
sbb
bound
inc
mov
testl
es
pop
daa
sbb
and
repz
rorb
xorb
jl
test
dec
hlt
dec
or
push
incb
mov
imulb
fdivrs
jp
shl
int
fsubl
aaa
nop
add
out
cmp
fnsetpm(287
dec
sub
shl
cmpsb
and
xchg
aad
sbb
out
jge
pop
push
mov
push
push
repnz
and
sti
dec
xchg
into
fwait
bound
mov
repz
or
sbb
jns
aaa
outsl
incb
jnp
orb
daa
and
icebp
push
aaa
out
mov
and
mov
es
ds
fstp
cwtl
decb
xchg
rcl
sbb
cld
bound
mov
sbb
lahf
cmp
loopne
add
loope
jmp
aad
das
loopne
lret
or
lret
fsubr
xchg
lds
jmp
aas
fld
js
je
xorb
loope
add
daa
adc
or
insl
cmp
pushf
sbbl
add
movsl
push
push
cltd
fnstenv
cmp
cmc
pusha
stos
push
mov
mov
aas
xchg
push
aas
repz
push
es
es
or
test
cmp
fdivrs
jne
mov
push
std
das
fs
mov
xorb
stos
mov
loopne
test
je
and
pop
mov
sbb
add
pop
cli
mov
xor
movsl
pop
mov
inc
gs
pop
bound
test
add
add
xchg
push
cs
scas
inc
je
xor
sub
imul
inc
mov
lods
fidivs
adc
xchg
sub
cmp
mov
adc
aas
pop
xlat
daa
outsb
mov
and
xor
hlt
in
push
js
xor
lds
aam
pop
and
sub
xlat
ret
or
mov
mov
cmp
sub
test
fldenv
adc
repz
sbb
mov
cmpl
arpl
gs
sbb
inc
in
data16
or
test
mov
xchg
push
xchg
loopne
cltd
pop
ja
sbb
push
pop
adc
arpl
in
sbb
xor
in
ljmp
xor
fiaddl
dec
fstpt
mov
clc
pushf
jne
filds
cli
mov
and
jno
push
or
mov
sbb
xchg
out
es
fnstsw
ud1
adc
repnz
push
mov
push
adc
add
mov
stos
gs
jmp
or
mov
adc
add
movsb
adc
sbb
lahf
negb
inc
pushf
js
mov
xchg
mov
mov
pop
adc
fnstcw
inc
xchg
loopne
xchg
mov
sbb
xchg
loopne
xor
cli
pop
inc
mov
ret
dec
pop
pop
test
hlt
mov
scas
cmp
add
lds
ja,pn
or
jae
cmp
lahf
cmp
cmpsb
ljmp
adc
dec
ds
scas
pop
adc
push
xchg
shl
leave
pushf
shlb
outsb
dec
shl
xor
or
sbb
pop
ljmp
mov
ss
inc
lds
cmp
sarl
inc
das
mov
sahf
and
enter
sbb
rorl
in
push
test
inc
adc
cli
pop
in
in
jge
out
jno
pop
shr
shrb
lcall
lea
lds
cmp
or
jmp
adc
das
sbb
test
fldl2e
into
clc
imul
movsb
das
mov
and
fmull
push
jecxz
js
movsl
popa
test
daa
push
sub
pop
pop
lds
mov
add
pushw
jmp
bound
popa
and
push
and
into
lea
call
mov
sbb
sbb
addb
add
and
lret
bound
cmp
pop
out
repz
in
fistpll
pop
inc
imul
arpl
push
hlt
pop
ja
aaa
mov
das
sub
and
js
in
fsubrl
ss
adc
or
mov
pop
rolb
inc
and
arpl
and
cmp
cld
inc
call
xchg
jb
cmpl
das
fs
jle
inc
test
sti
addl
ljmp
out
es
addr16
orb
movsb
adc
xor
mov
iret
fwait
sbb
stos
push
leave
fildl
jg
cli
mov
fwait
int3
jecxz
mov
insl
shrl
int
stos
mov
adc
cld
lcall
stos
nop
mov
lods
fistpl
cwtl
je
subl
data16
leave
sbb
lahf
test
mov
sub
mov
jns
dec
adc
cli
sub
fildll
out
cmp
mov
push
or
mov
ja
mov
loope
dec
cmp
jl
into
push
mov
jo
mov
in
test
mov
xlat
movl
pop
cmpsb
mov
sahf
lret
mov
test
pushf
xor
push
int
cmp
into
fadds
test
mov
xor
orb
fisubrs
jle
scas
jg
dec
cmp
xor
sti
and
addl
mov
daa
pop
int3
out
pop
xchg
insb
add
in
jae
popf
rcrl
enter
outsl
lds
mov
out
and
sarb
xchg
push
push
stos
jge
cmpsb
dec
insl
ja
and
jbe
into
fnsave
mov
and
out
outsb
ss
test
dec
mov
ret
push
dec
push
hlt
sbb
bnd
psrld
xchg
icebp
mov
mov
clc
fs
loope
aad
scas
and
pop
push
clc
inc
pop
pop
in
mov
push
mov
paddd
adc
shrl
jae
lret
out
pop
fidivrl
dec
mov
inc
inc
xlat
loope
mov
mov
push
je
bound
sub
inc
jns
cmpsl
mov
inc
jmp
push
pop
nop
in
push
stc
mov
cs
loopne
gs
xchg
sub
pop
addr16
and
cmp
pop
cmpsb
popf
aaa
add
lret
in
xor
js
inc
push
xor
add
add
outsl
sub
pop
add
fwait
icebp
ja
push
leave
loope
es
lcall
push
or
xchg
inc
loop
pop
loop
mov
cmc
imul
adc
je
out
shr
into
loop
and
pop
outsb
adc
aam
adc
inc
jnp
fidivl
push
cmpsb
jmp
into
into
jns
adc
jno
std
pop
daa
push
fsubrs
jbe
leave
jno
test
or
inc
jnp
scas
dec
mov
sti
stos
push
adc
jnp
inc
enter
mov
out
mov
push
pop
scas
mov
loopne
in
adc
xor
test
int
lods
cmp
sahf
push
ja
adc
and
sbb
shrb
lea
xorb
shrb
jns
cwtl
iret
test
call
mov
pop
xor
orl
int3
out
and
pop
inc
stos
ds
mov
scas
xchg
sub
push
xor
push
lock
xchg
adc
cltd
jg
fildl
loope
mov
xlat
fdivrs
repz
mov
or
nop/reserved
andb
enter
sbb
mov
sarl
xchg
pop
lret
xchg
adc
out
mov
inc
out
mov
cmp
int
xlat
cmp
mov
push
neg
ret
add
pusha
je
sbb
sbb
iret
fisubrl
mov
pop
stc
dec
and
or
in
push
imul
cmp
clc
enter
mov
mov
into
jecxz
iret
int3
mov
mov
mov
lahf
xchg
js
xor
ds
inc
ljmpw
lds
test
and
repz
jbe
mov
addr16
hlt
pop
stos
push
cwtl
pop
sub
into
pop
lret
inc
sub
push
mov
fcmovnu
mov
popa
xor
xchg
in
sub
pop
ret
int3
andps
cmp
int
adc
jno
repnz
ljmp
push
into
leave
pushf
out
js
mov
sahf
cld
ss
jbe
xchg
mov
shll
aas
in
cmpsl
or
mov
ja
andb
jp
aas
outsl
in
js
add
imul
add
repz
mov
popa
and
loope
inc
loopne
jp
cmpsl
call
icebp
adc
sbb
fs
cmp
cwtl
xor
loopne
adc
push
out
in
scas
mov
sti
add
in
insl
orl
or
add
xchg
xchg
cmp
stos
fldt
loop
in
inc
adc
pop
push
subl
xor
fnstenv
inc
and
aas
test
cmp
int3
push
fisttpl
mov
adc
mov
push
stos
or
nop
sti
push
js
ret
mov
or
and
in
subl
es
jg
repnz
push
ds
sarl
pusha
ss
fnstsw
pushf
popa
pop
adc
insl
imul
inc
inc
sahf
sti
imul
sbb
mov
outsb
mov
and
scas
enter
push
out
pushf
arpl
cmpsb
adc
hlt
pop
clc
int
adc
mov
insl
ret
pusha
jmp
sub
lret
mov
mov
xchg
push
addb
aas
movsb
cli
sbb
or
shlb
mov
test
fs
aaa
inc
outsb
aad
bound
sub
sub
mov
repz
mov
cmp
inc
push
leave
mov
sbb
xchg
jecxz
cmc
sbb
repz
in
adc
inc
inc
or
cmp
jp
out
fsubl
fnstenv
jle
jecxz
mov
push
mov
enter
mov
xor
inc
xor
xchg
xchg
rorl
push
cs
js
ljmp
out
je
cmpsb
adc
insb
xchg
loopne
xor
adc
xchg
and
sub
lcall
imul
xchg
fstps
cwtl
sub
inc
mov
sub
fwait
movsl
test
push
mov
add
sub
pop
rorb
lret
xchg
loopne
divb
sbb
xorb
xor
dec
jp
sub
movsb
xlat
fdivrs
rorl
inc
cmp
repz
xor
jo
into
dec
dec
outsb
or
adc
es
dec
ss
or
pop
or
xchg
jno
mov
ret
cs
mov
push
outsl
imul
aad
stos
int
add
sub
call
imul
inc
xchg
xchg
sbb
dec
fisttps
adc
imul
insb
in
cli
sub
xchg
push
sbb
cmp
cwtl
push
call
jecxz
es
push
add
es
pop
test
dec
mov
addb
inc
mov
je
seto
xchg
loop
outsb
pop
push
sti
xchg
movsl
cmpsb
xor
xchg
xchg
lods
cmpsl
or
cmpsb
jl
xor
pop
fsubrs
jns
xchg
or
inc
adc
sahf
xchg
in
add
sbb
pop
imul
jb
lret
pusha
bound
cltd
xor
stc
in
add
aas
ret
stos
xor
dec
lods
rcll
cmp
push
sub
scas
xor
int
out
cmp
lcall
js
loop
in
cwtl
ret
fcomps
sbb
pop
in
sbb
fsubs
and
repz
sub
mov
out
out
arpl
cmp
out
nop
std
add
loopne
mov
xchg
sarl
cltd
pusha
repnz
pop
int3
xor
jae
sub
xchg
xchg
imul
lods
jbe
ja
xchg
call
mov
xchg
outsl
pop
inc
lahf
sub
sub
leave
addr16
jns
ffreep
add
bswap
sub
mov
mov
loope
imul
jle
mov
push
pop
adc
lea
adc
and
fcompl
push
jnp
mov
andb
lret
pop
and
ljmp
jb
ja
mov
push
into
daa
sbb
pop
lret
call
mov
add
outsb
std
or
sub
adc
clc
outsl
out
aaa
cmp
jne
arpl
adc
nop
cmpsl
xchg
lock
push
lods
pop
mov
int
sub
xlat
or
jbe
aaa
adc
loopne
and
in
ja
ss
hlt
cltd
xchg
push
jg
test
dec
dec
dec
push
lods
add
jnp
and
nop
fimull
shll
pop
lds
or
icebp
clc
loope
jg
xchg
pop
call
sbb
call
dec
test
in
ss
xchg
adc
cmc
rcl
jne
inc
neg
pop
add
outsl
insl
or
aad
sub
cltd
cli
aad
adc
xor
cs
xor
outsl
sub
inc
mov
xchg
mov
jne
sbb
add
dec
jae
enter
out
imul
mov
gs
rolb
in
jns
mov
push
mull
ret
cld
push
arpl
nop
xchg
fiaddl
pop
ss
jg
push
nop
nop
loop
test
sti
ja
ss
ret
pushf
in
inc
or
mov
inc
jnp
add
lahf
lock
jle
mov
addr16
lea
mov
sbb
lcall
loop
dec
scas
inc
mov
insl
clc
loop
pop
popf
andl
ds
or
cmp
inc
add
fnstenv
int3
ficomps
jecxz
rorl
mov
pop
paddq
xchg
sbb
fcomps
add
lret
dec
inc
pause
pop
xchg
call
push
push
mov
mov
fdivrl
dec
or
js
and
sub
sbb
push
xlat
inc
cmc
dec
jmp
jl
stc
or
mov
mov
xchg
notl
sub
cmpsl
pop
dec
mov
sbb
popa
mov
andl
lds
and
loopne
push
and
jmp
rolb
cli
xchg
fistpll
enter
mov
insb
jnp
mov
jb
mov
sub
movsl
or
bound
cmp
adcl
inc
bound
mov
mov
pop
stos
push
js
fsubrs
ret
jo
lret
push
xchg
in
mov
pop
addr16
xor
fbld
push
int3
mov
push
push
adc
sarb
xchg
aad
and
push
xor
mov
gs
sbb
nop
jne
or
sbb
aad
sub
push
push
lods
pop
adc
ror
or
pop
rol
sbb
sub
mov
test
push
enter
in
push
rorl
in
push
push
pushf
in
push
std
mov
lock
and
int
in
daa
fidivs
in
pop
inc
add
mov
sbb
inc
iret
dec
arpl
aam
pop
sbb
gs
pop
inc
jnp
mov
sub
cmp
dec
jp
lods
dec
sub
orl
jns
cwtl
flds
cmp
test
push
shll
stc
add
int
jle
sbb
les
push
sub
dec
mov
mov
fsubrs
push
pop
jmp
dec
sbb
pop
jle
pop
mov
jecxz
loop
lock
jp
jmp
push
xor
sbb
test
push
into
adc
add
add
dec
in
stos
addr16
mov
imul
pop
ss
dec
adc
loope
fcomps
mov
xchg
sub
push
inc
ret
in
aas
push
and
pop
pop
dec
push
pushf
pop
xor
dec
mov
mov
sbb
mov
jbe
shrb
or
movl
sbb
scas
pop
or
xchg
xchg
mov
add
insb
aam
push
orl
xchg
mov
xor
mov
pop
mov
push
sti
mov
mov
jnp
mov
scas
fs
push
adc
fldenv
mov
pop
lock
aaa
in
xor
xchg
repz
xor
rcrb
sub
pop
mov
pop
lds
pop
jnp
test
rcrl
dec
es
clc
push
mov
test
or
sub
pusha
aad
add
lret
lret
add
jp
or
ds
movsl
pop
sbb
jnp
xor
jb
push
testb
leave
cmp
or
pop
cmp
ds
mov
outsb
jae
push
sbb
push
call
pop
imul
mov
insb
xchg
mov
mov
lret
sub
push
sub
push
cmp
add
jge
out
cmp
call
stc
adc
cmp
sbb
push
dec
fwait
testl
push
inc
ret
jae
mov
loopne
sbb
dec
inc
inc
pushf
jecxz
dec
cltd
and
bound
add
add
mov
jae
sbb
xchg
jno
outsl
inc
mov
or
push
dec
push
and
rcl
lds
pushf
dec
sub
adc
les
lret
jae
adc
cwtl
pminub
sbb
mov
and
jnp
cltd
sti
in
mov
add
sarb
add
in
push
lcall
fldt
pop
xor
sub
sahf
mov
popf
sbb
cmp
jecxz
add
aaa
gs
imul
clc
movsb
mov
int3
mov
insl
loop
lcall
xchg
mov
aad
subb
sub
xor
popa
shll
pop
leave
lret
cmp
shrb
repnz
dec
inc
xlat
adc
xchg
sub
xchg
add
xor
jne
jae
jns
xchg
push
out
sbb
cmc
pop
divb
cmpsl
loop
fsubs
jne
xor
mov
push
sub
data16
cs
inc
je
mov
cmp
pop
jge
jmp
inc
cmp
adc
fmulp
and
ret
xchg
in
sti
shll
scas
loop
fimuls
pop
and
cld
in
push
mov
mov
scas
divl
mov
into
jp
pushf
and
mov
popf
add
pop
in
repz
xchg
sarl
outsl
jnp
mov
rol
xor
in
cmp
sub
dec
mov
iret
lea
call
mov
mov
cs
outsb
inc
xor
and
insl
aas
dec
jge
inc
mov
sbb
jnp
mov
out
aaa
mov
pop
mov
movsb
and
cmc
insb
iret
popf
movsb
xchg
aaa
cltd
movsb
imulb
aam
cmp
push
std
stos
leave
jo
mov
stos
out
or
sbbb
xor
fldenv
aam
andl
sbbb
xor
ret
mov
jb
out
nop
xlat
push
mov
push
add
sbb
andl
rclb
xor
push
sub
loopne
lock
dec
out
mov
hlt
xor
fstp
mov
mov
sub
adc
mov
dec
mov
jl
test
iret
pop
rorb
leave
sbb
test
dec
or
out
sbb
dec
frstor
aaa
add
cmp
cmp
and
dec
adc
mov
add
and
idivb
jle
dec
mov
lods
out
repz
scas
aam
or
or
mov
imul
xor
add
in
mov
mov
sbb
loop
shrb
xchg
pop
add
and
pop
mov
add
xchg
and
jo
mov
mov
test
das
mov
popf
sub
jo
inc
xor
adc
rcr
push
js
test
cmp
movsl
xor
push
cmpsb
faddl
mov
dec
and
cmc
push
lea
andb
insw
jecxz,pt
lret
sub
mov
test
xchg
xchg
push
lcall
aaa
mov
insb
data16
pop
rolb
mov
add
test
pop
je
cmpsb
jns
pop
lcall
test
shrb
push
adc
xchg
mov
inc
or
sbb
dec
fstps
rcll
jmp
dec
jp
aam
push
pop
stos
notl
outsb
mov
iret
out
scas
jb
dec
inc
add
adc
pop
sahf
rcl
mov
adc
loope
stos
add
ja
mov
jge
inc
aad
inc
lock
mov
xor
lret
insl
ficoms
out
insl
or
mov
outsl
shlb
push
arpl
mov
andl
add
dec
sbb
push
xlat
insl
or
xadd
mov
inc
pop
mov
and
dec
rep
rcrb
mov
xor
adc
imul
int
sbb
mov
mov
stc
hlt
popf
aas
repnz
das
ret
sub
mov
popf
jae
xchg
iret
sbb
sbb
rcr
cmp
in
les
cltd
adc
fsubr
jbe
cs
jmp
ret
mov
xor
jno
push
call
mov
loopne
lock
jmp
psadbw
mov
dec
lcall
jmp
xchg
cs
mov
lahf
divb
add
inc
push
in
popf
dec
addr16
loope
dec
push
or
mov
pop
pop
or
std
aaa
outsl
and
and
xor
lea
mov
xchg
push
and
cmp
adc
popf
mov
sbb
lods
xchg
fnstsw
mov
adcl
xor
jg
adc
adc
or
add
int
rorl
mov
or
into
call
add
jl
repz
or
xor
inc
mov
sbb
xchg
pop
out
daa
mov
lds
enter
mov
lods
mov
popa
cmp
add
sub
sbb
pop
fsubr
cmp
xchg
mov
mov
jmp
fs
inc
mov
adc
jp
sub
insb
adc
and
in
and
in
ficompl
sbb
daa
adc
js
icebp
or
scas
icebp
aam
orl
sahf
shll
dec
or
xorl
add
push
jbe
pusha
inc
les
sub
dec
lods
xor
jp
mov
out
ljmp
das
inc
imul
adc
jb
mov
push
or
and
pusha
or
in
lods
repz
and
test
jns
nop
cltd
adc
xor
adc
ljmp
std
add
jg
shll
mov
sub
leave
add
mov
gs
push
sub
mov
pop
andl
xchg
xor
inc
mov
ljmp
pop
xlat
daa
add
stos
mov
dec
scas
mov
shlb
xchg
popf
xor
aaa
push
fdivs
std
dec
mov
and
in
xchg
mov
lods
cld
jnp
idivl
adc
ljmp
adc
dec
cmp
test
fs
divl
sbb
stos
lods
push
mov
rcl
imul
xchg
lret
jns
mov
fisttpll
mov
xor
test
mov
subl
dec
mov
push
pop
jmp
sub
xor
mov
xchg
xor
das
aaa
shll
test
mov
outsb
adc
mov
mov
cs
loop
cwtl
sbb
adc
add
out
inc
add
dec
sbb
lods
nop
sub
mov
dec
ljmp
jl
mov
movsl
pop
cltd
or
mov
sarb
sti
inc
dec
mov
lret
clc
out
lds
mov
pop
and
mov
ljmp
ljmp
cmp
imul
out
lea
popa
mov
jl
pusha
push
fiaddl
cs
pop
xor
rcrb
imul
je
lahf
cld
or
xor
addb
cld
pushf
lds
out
cmp
orb
lahf
jae
idivl
dec
ret
jp
fsubrl
xchg
lahf
jl
add
int3
mov
scas
shrb
je
stos
cmp
mov
xor
inc
and
sub
fildll
in
clc
or
ret
mov
imul
inc
ds
push
jg
jge
shlb
mov
int3
lods
xor
roll
adc
addr16
daa
push
mov
js
loopne
je
mov
dec
loopne
jnp
sub
rcrl
into
sub
inc
fnstcw
inc
adc
out
xor
jmp
cmc
iret
sti
out
xchg
jge
or
push
scas
repnz
lea
fbld
sbb
pop
std
nop
test
cmpsb
negl
adc
lods
dec
ja
lods
or
push
sbb
jg
loope
xchg
pop
lock
xor
add
cmpsl
sub
mov
xor
stos
daa
jne
add
out
cmp
mov
movb
mov
xchg
inc
adc
mov
rcrl
ret
push
orl
xor
popf
mov
jb
jbe
fcompl
in
rolb
dec
enter
lahf
inc
insb
repz
dec
fsubrl
cld
lret
mov
adc
gs
add
outsb
xor
push
pusha
jg
sub
movsl
mov
cmpsl
xchg
and
pop
int
push
arpl
xorl
and
pushf
test
mov
jl
mov
ret
push
rorl
arpl
push
mov
mov
rclb
nop
lcall
sub
push
loope
int
int3
int
jle
mov
dec
es
fs
in
mov
push
lods
sub
xor
pop
andb
mov
lret
push
mov
loopne
cli
test
adc
into
jnp
leave
nop
repz
sub
outsb
push
addr16
fmull
sub
ror
test
cli
or
pusha
mov
sub
adc
ss
mov
xchg
cmp
or
lods
popf
movsb
xchg
and
push
xlat
and
mov
inc
jbe
jno
mov
gs
dec
aaa
arpl
dec
xor
mov
cmp
cmpsb
mov
mov
fs
xor
pmaxub
in
loopne
push
xchg
ficompl
dec
outsb
jle,pt
movsl
test
or
cmp
push
pop
adc
jnp
fdivp
orl
sub
cmpsl
cmpsb
fs
or
pop
repz
push
lret
adc
push
jne
popf
int3
in
xchg
mov
adc
dec
dec
jmp
xchg
mulb
mov
add
jl
add
pop
push
lahf
insb
or
es
call
sbb
ds
pandn
jo
mov
incl
shrb
into
xor
push
aas
mov
add
mov
mov
xchg
aad
cmp
mov
ja
incb
mov
repnz
lods
xor
leave
adc
sub
stos
ret
out
push
push
shll
push
xchg
pop
cmp
mov
jmp
insb
xchg
vpunpckldq
pop
cmp
sbb
stc
add
cli
add
add
arpl
test
sbbb
and
imul
test
ret
mov
dec
dec
fists
roll
lahf
adc
sti
int
loop
and
inc
xor
aaa
xor
sub
jae
stos
adc
shll
pop
pcmpeqd
pop
xor
fxch
mov
aaa
out
sub
mov
mov
bound
sti
not
sbb
xor
sbb
daa
and
fldenv
lret
pop
and
lock
add
ss
xchg
lock
sbb
lock
adc
pop
fcoml
out
lock
jns
push
in
popf
sbbl
xor
outsb
fwait
xor
pop
xchg
xchg
test
mov
adc
inc
pop
xchg
fistps
insb
testl
fldl
push
pusha
push
aam
xor
pop
jg
gs
aaa
lret
dec
pcmpgtw
fsubl
cmpsl
pusha
adc
inc
mov
add
dec
mov
rolb
in
mov
leave
scas
adc
dec
lds
adc
pop
push
sub
add
fnstcw
inc
js
jmp
mov
pop
mov
test
mov
and
adc
pop
ja
and
jbe,pn
dec
mov
jp
add
mov
sub
inc
cld
movnti
cmp
mov
filds
jne
dec
pop
add
inc
and
lea
movsb
xorb
iret
out
ret
push
jle
in
enter
test
das
ret
sbb
rcrb
cltd
dec
dec
and
dec
jp
jecxz
scas
adc
negb
pop
in
and
add
into
xor
mov
pop
jmp
adc
or
and
jmp
xor
or
push
or
mov
imul
pop
rorb
call
rclb
jge
dec
cmp
or
ror
adc
inc
sub
lods
mov
test
int
es
mov
movsb
mov
mov
cmpl
scas
jns
push
xor
imulb
ljmp
and
xchg
xchg
jp
cmc
loope
xchg
popf
xchg
fs
cmpl
dec
test
push
sbb
sahf
mov
divl
xchg
dec
adc
and
ret
mov
xor
pop
es
mov
cmp
adc
mov
push
stc
jecxz
jg
jns
repnz
pop
rcrb
sub
ss
loopne
jnp
xor
dec
mov
ret
lret
inc
ljmp
inc
les
outsl
arpl
arpl
clc
ret
xor
mov
or
fidivrs
sub
mov
jmp
idiv
mov
aam
jp
push
push
rcll
lret
mov
xchg
lock
cs
cmp
pop
jl
xchg
shrb
icebp
inc
lods
stos
out
cld
mov
jge
xchg
mov
rcrl
stos
and
cwtl
lret
jns
test
jns
repz
fbstp
scas
jg
hlt
hlt
push
lret
jmp
out
inc
das
lods
push
mulb
and
dec
mov
xlat
lahf
and
mov
push
insl
add
push
cmp
adc
add
iret
or
inc
adc
pusha
mov
dec
stc
mov
push
sbb
in
das
int3
mov
xor
push
cmp
pusha
mov
inc
popa
mov
mov
popa
inc
decb
in
inc
push
push
aam
push
js
add
lahf
mov
shl
add
mov
sbb
outsl
dec
adc
repz
pop
cmc
movsb
data16
sub
or
lods
sti
scas
push
fs
das
aam
push
and
out
test
adc
insl
mov
movsl
push
jo
push
pushf
or
pmuludq
insb
outsb
dec
jne
mov
cmp
stos
jmp
in
in
in
test
mov
popf
xor
add
push
popa
div
dec
push
repz
test
push
ret
repnz
xor
movsl
flds
insb
clc
bswap
cmp
mov
loopne
je
in
fistl
ret
imul
mov
std
xchg
xchg
test
xchg
and
sti
sub
mov
mov
add
dec
adcb
mov
add
inc
dec
sahf
cs
std
insb
pop
pusha
jle
inc
mov
push
or
sub
out
push
cmp
mov
imul
pushf
dec
dec
xchg
adc
inc
pop
jmp
into
gs
stc
fstl
xchg
push
add
addr16
test
pop
mov
or
mov
hlt
shlb
cltd
inc
out
sub
ret
sbb
sub
and
add
loope
call
mov
notl
sub
daa
and
rcll
pushl
leave
adc
or
mov
test
aam
jmp
pop
inc
movl
and
cmpsl
test
es
stc
es
orb
mov
sbb
mov
mov
mov
fwait
and
call
xchg
sbb
mov
add
aas
lret
xor
jp
push
lret
sbb
gs
xchg
add
js
ret
cmp
iret
mov
push
push
and
imul
jmp
aaa
ss
clc
std
adc
jae
xor
pop
test
mulb
pop
ret
les
xchg
and
movsl
or
lcall
jecxz
mov
sub
int
mov
adc
fnstenv
cmp
insl
cwtl
mov
jle
jo
jo
xchg
dec
scas
std
mov
outsl
jno
test
push
dec
sbb
sar
mov
fnstcw
xor
cli
pushl
fistps
es
pop
mov
jecxz
xorl
fldenv
xor
ret
jbe
out
mov
addr16
popa
jge
pushf
out
xor
cmpsb
mov
fbstp
jae
inc
clc
or
sarl
cmp
fwait
xchg
ret
mov
rsqrtps
adc
out
cmp
insl
ret
jge
sbb
mov
aaa
pushf
or
add
jl
or
push
lods
loope
inc
call
das
mov
push
xchg
or
mov
push
ljmp
scas
outsb
dec
jb
jb
mov
out
bound
cmpsb
aaa
push
aas
nop
das
jbe
lods
pop
imul
push
repz
fists
stc
push
iret
div
ret
inc
scas
stos
lods
inc
int
ret
adc
repnz
mov
sub
ret
pxor
clc
jmp
sub
cmp
mov
mov
sub
push
add
pop
pop
jge
out
outsl
fbld
sbb
dec
lea
ja
cmp
lahf
fwait
cmpb
push
xchg
stc
push
shll
or
jb
mov
lods
mov
lcall
por
pop
dec
nop
jae
repz
pop
cwtl
cmp
icebp
fsts
fcos
fmulp
lret
sub
push
popa
pushf
in
push
insb
loop
iret
test
mov
jns
cmpsl
mov
ficoml
and
popf
push
and
dec
inc
mov
push
andb
mov
push
mov
and
add
insb
sbb
push
loopne
adc
repz
fcompl
lahf
cmpsl
fisubrs
pop
aaa
lret
lods
cltd
jp
adc
pusha
and
xchg
les
mov
lea
insb
lret
or
ljmp
rcrb
test
pop
pop
xchg
and
xor
cmp
ja
jnp
leave
mov
sub
jno
sbb
notb
cwtl
xor
pop
push
mov
jo
and
cmp
icebp
or
pop
aad
add
je
inc
cmp
cmp
in
das
call
sub
shr
dec
cmpsb
stos
xchg
fisubrs
ljmp
or
cmpsl
in
lock
sub
add
mov
jb
aas
dec
xchg
fidivs
inc
pop
sbb
push
mov
out
push
xchg
pop
jae
dec
shrb
cmc
mov
xchg
push
push
mov
push
cmp
mov
sub
jecxz
xchg
sub
push
into
inc
test
int
sarb
cmp
out
xchg
xchg
stos
lods
icebp
int3
inc
mov
sbbl
dec
mov
push
cmp
loopne
out
scas
leave
lcall
andb
fwait
lea
add
jne
cmc
mov
js
sti
jae
jns
add
xchg
icebp
jnp
mov
xchg
or
dec
pop
aaa
cmpsl
cmpsb
adc
jmp
dec
ret
fs
adc
mov
inc
fnstsw
mov
mov
push
ljmp
ret
adc
lret
mov
pop
popa
in
sbb
and
cmp
jns
fs
push
repnz
cs
sub
push
push
inc
testl
sub
cmp
lea
pop
and
int3
mov
or
or
mov
bound
bts
push
loopne
push
pop
orb
loopne
jge
jle
push
jge
xor
dec
sti
pop
cmp
and
add
rorb
xchg
or
lods
mov
stos
mov
sub
imul
and
sub
sub
or
in
outsb
jne
dec
fimuls
sub
push
dec
pop
add
mov
or
mov
xchg
loope
aam
jl
dec
mov
loope
mov
arpl
arpl
cmp
mov
bound
je
push
rol
push
jge
je
or
fstpt
dec
and
addr16
testb
js
xor
mov
push
lea
sub
in
jge
cmpsb
dec
or
xor
lods
mov
fistpll
add
fxch
cld
push
arpl
mov
mov
cltd
mov
popa
sbb
movsb
aaa
outsl
lods
sbb
or
mov
mov
fsub
dec
pop
dec
stc
inc
jmp
xlat
xor
test
xor
loop
push
in
xchg
int
sub
sahf
orl
pop
xchg
dec
push
inc
std
cmc
pop
add
sbb
jg
sti
test
repnz
fsub
mov
mov
pop
sbb
pop
in
jge
mov
cmpsl
cmp
cmpsb
fstpl
mov
int3
mov
imul
push
rcrl
mov
fdivs
sub
ljmp
pop
mov
ret
cltd
xchg
mov
outsl
mov
outsb
mov
insb
adc
aas
pop
push
xor
push
les
jnp
xchg
pushf
pop
mov
xor
or
test
dec
leave
jmp
int3
fsubl
dec
jne
es
cmp
mov
xchg
pop
fnstsw
mov
add
mov
call
lock
dec
mov
push
push
aas
or
xor
pop
ror
int
mov
push
mov
pop
mov
mov
test
notb
jp
je
jae
in
arpl
push
sub
das
aas
mov
cwtl
daa
xchg
xchg
mov
inc
cmpl
push
ss
test
pop
movsl
mov
lock
cmp
or
mov
out
fcmovb
stos
lock
sbb
inc
sbb
arpl
mov
and
andb
add
test
cmpl
fsubrl
mov
pop
sub
xchg
into
test
inc
fadd
push
mov
leave
fildl
outsb
arpl
lock
fadds
pop
lret
adc
movsb
xchg
xchg
sahf
dec
gs
adc
fwait
mov
adc
decl
mov
or
arpl
sbb
cmpsb
xchg
adc
mulb
jle
mov
out
mov
outsb
fstps
cmp
mov
jmp
or
xor
push
fidivrl
jns
cwtl
sub
mov
loopw
push
xchg
imul
push
pop
mov
xchg
xchg
in
addb
jl
jmp
inc
cmp
outsl
iret
inc
jg
mov
enter
pop
mov
mov
cmp
insl
mov
enter
xchg
mov
lods
daa
dec
mov
pop
scas
lods
mul
in
icebp
in
stos
sahf
jo
test
cmp
mov
fisttps
cmp
fidivs
movsl
push
pop
pop
insb
pushf
cmp
push
push
lfs
dec
lds
aaa
dec
push
clc
subl
int
fadd
std
xchg
mov
xor
sahf
sbb
xorb
mov
dec
pop
sub
lods
outsl
cmp
in
cwtl
pop
ficomps
jecxz
jl
or
les
lods
out
lahf
in
cmpsl
mov
cmp
mov
hlt
jecxz
rcrl
out
movsl
ret
push
add
ror
fs
or
mov
test
and
pop
sbb
clc
sahf
icebp
mov
test
jecxz
sbb
pusha
test
jmp
imul
popa
push
fldenv
jecxz
push
fdivs
push
or
rcrb
adc
push
cmp
mov
ljmp
or
and
inc
aam
mov
ret
pusha
iret
js
stos
xchg
popf
stc
inc
cwtl
jne
shl
insl
dec
test
cmp
sarl
mov
pop
pop
enter
push
push
into
pop
inc
into
enter
icebp
push
repnz
ficoms
aam
or
or
inc
or
cmp
push
add
mov
addr16
mov
mov
clc
push
add
inc
inc
out
and
or
xor
push
cmp
or
xchg
xchg
adc
mov
hlt
adc
test
dec
lods
stc
jne
xchg
sahf
push
pusha
jnp
lods
mov
pop
movsb
cmpsb
sub
push
in
ss
sbb
adc
lods
pop
pop
lods
sahf
inc
add
and
mov
rcll
and
xor
lret
jae
enter
ja
add
fidivs
pushl
push
sbb
fisttpl
mov
fldl
movsl
js
neg
mov
pop
push
inc
sub
js
xor
mov
jp
pop
or
into
adc
daa
pop
ret
inc
jg
pop
lcall
dec
jno
mov
mov
mov
es
daa
daa
insb
leave
int
mov
and
pop
cmc
cmp
and
insl
cmp
inc
dec
es
cmp
stc
dec
lods
and
and
jb
cltd
or
out
dec
push
aam
mov
rclb
int
push
lahf
stos
mov
lea
dec
pusha
fimuls
push
insl
and
fdivrl
dec
stc
push
daa
faddl
enter
cli
out
fnstenv
out
scas
mov
inc
push
lock
xlat
pop
add
xchg
cmpsb
add
and
test
sti
imul
les
fistps
inc
and
pop
das
xchg
pop
ss
data16
and
adc
das
arpl
push
ret
xchg
dec
aas
and
mov
inc
pop
insl
jno
in
sbb
mov
insb
stos
mov
fidivs
roll
add
dec
bnd
mov
mov
xor
push
mov
aaa
jp
and
shll
push
mov
cmp
and
adc
mov
jl
nop
icebp
pop
jle
or
cltd
iret
xor
jl
inc
or
and
loop
test
sub
and
out
fsub
mov
xor
das
lret
mov
mov
sarl
test
adc
inc
xchg
sbb
dec
sub
std
and
xor
sub
jns
sbb
cmp
stos
ret
lret
lds
leave
test
ja
adcb
pushf
testl
push
aas
xor
pusha
inc
push
fimull
sbb
mov
adcl
xchg
mulb
lods
push
or
sbb
out
inc
inc
loopne
xor
jle
pop
je
adc
idivb
adc
cmp
dec
mov
cmpsl
xlat
inc
add
lahf
inc
mov
mov
roll
push
out
jmp
mov
inc
int3
in
inc
or
lcall
ficompl
stos
into
adcb
push
jae
push
fildl
sbb
popf
sub
lds
cmc
rcrl
cmp
clc
in
and
jnp
xchg
std
scas
inc
ret
loope
jecxz
pop
shr
xor
or
dec
push
push
jmp
cmp
sub
or
xchg
popf
mov
sub
jne
mov
sub
into
cmp
mov
cmp
jbe
sbb
cmp
mov
xor
or
test
mov
cmp
mov
cld
mov
popf
fistps
unpckhps
clc
mov
into
arpl
add
fcompl
aad
cli
sbb
sub
jne
lea
mov
mov
mov
pop
xor
std
xorl
ds
test
push
mov
push
fwait
adc
shlb
cmp
shr
repz
push
mov
sarb
addr16
out
mov
jmp
hlt
adc
popa
into
scas
lret
outsl
sbb
mov
mov
push
loope
sbb
movsl
mov
test
push
mov
dec
inc
addr16
fldt
aam
daa
mov
test
stc
jae
mov
stc
xchg
fidivrs
fiadds
mov
hlt
sub
pop
test
testb
mov
inc
lock
call
sti
inc
sbbl
mov
stos
stos
das
lret
andl
cmp
daa
xor
and
cs
aas
lahf
daa
insb
fnsave
out
or
ja
lods
nop
push
mov
adcb
pop
or
insb
add
push
or
sbb
test
pop
sbb
jb
inc
pop
cmp
jns
cltd
mov
adc
and
daa
mov
jbe
shrl
xlat
aas
dec
call
xor
out
cld
push
mov
jg
cltd
and
push
xor
xor
test
pop
lret
filds
dec
xchg
jne
mov
shl
imul
add
rol
sbb
or
pop
jne
dec
shll
inc
insl
sub
push
aas
imul
dec
lret
xor
and
lea
cmc
cmp
orb
popl
sbb
and
or
mov
sub
jmp
insb
xchg
xor
push
and
aaa
mov
ja
sub
out
cli
add
mov
push
out
mov
stos
cmp
out
into
cmpl
addr16
ds
push
inc
ja
sbbl
adc
pop
inc
xor
and
fmul
sub
movsb
ss
cld
imul
rolb
ds
jle
in
and
jae
stos
cmp
pop
scas
lahf
hlt
add
cmp
push
jno
mov
mov
xchg
out
jmp
mov
push
data16
aaa
fnstcw
cmp
loope
aad
adc
inc
jl
adc
mov
jb
scas
out
jge
cmp
push
aas
xor
cmp
push
mov
jg
imul
cmp
std
imul
xor
add
xchg
outsb
cmp
mov
xchg
add
adc
gs
rcl
mov
xlat
inc
mov
mov
add
push
push
cmp
mov
jl
jmp
and
mov
aaa
lret
adc
mov
icebp
imul
push
stos
mov
arpl
xchg
icebp
cmpsl
ja
mov
inc
loope
cs
jl
ljmp
jg
sub
push
mov
arpl
push
inc
into
or
cmp
or
mov
or
outsl
cmc
cmp
jge
xchg
xchg
lahf
cld
sub
fwait
pusha
xor
das
xchg
idiv
cld
xchg
jb
pop
mov
int3
mul
xchg
xchg
jae
mov
push
and
jbe
icebp
mov
pop
test
lods
data16
outsl
out
mov
or
inc
int
dec
mov
and
or
cmc
push
fidivs
and
idivl
mov
or
divb
in
jae
push
mov
in
lahf
in
xlat
fidivl
outsl
push
imul
out
aam
push
rorb
or
xchg
rcr
push
es
stc
jb
mov
or
call
pop
mov
data16
mov
in
add
ds
bts
sub
sbb
fdivrs
mov
cmc
inc
sub
mov
mov
mov
push
sub
lcall
int3
add
adc
cmp
gs
loopne
insb
and
cmc
sub
adc
loopne
mov
cmp
pop
jns
add
shll
inc
add
mov
cmp
mov
lahf
cmp
cld
dec
lret
ljmp
incb
cli
jne,pt
adc
xor
andb
inc
mov
mov
js
dec
cmc
and
mov
inc
pop
push
dec
popf
inc
add
xchg
jbe
sbb
adc
clc
aas
fs
in
mov
fidivrl
jp
cli
xchg
fnsave
pop
mov
pop
dec
mov
int3
aad
rolb
daa
cmpsb
mov
push
xchg
incl
dec
out
or
scas
or
push
or
inc
pop
aam
pushf
and
sub
sbb
or
dec
movsl
mov
push
imul
in
xor
xchg
test
arpl
and
cmpsb
test
ret
mov
cmp
mov
xchg
xor
sbb
xor
xchg
mov
cmpsb
or
jbe
cmpb
mov
popa
std
jae
ret
cmpsb
xor
orb
jmp
roll
inc
jae
inc
repz
mov
jle
sub
push
push
outsb
xor
popf
jmp
ss
in
movsl
sarb
jns
jo
mov
cmpb
cmpl
cli
es
psubsb
adc
inc
mov
push
sub
cmpsb
add
sub
sub
push
xor
cmp
add
lfs
mov
jne
jne
lret
pop
mov
mov
xchg
cs
lds
add
jnp
popa
xchg
sbb
clc
mov
pop
jmp
sub
leave
jne
jnp
add
adc
lret
jnp
mov
inc
mov
stos
dec
outsl
rolb
sbb
inc
push
incl
repz
mov
test
adc
inc
mov
jns
xor
pop
addr16
dec
stos
sub
imull
pop
dec
fsubrl
insl
sbb
cltd
out
stos
adc
je
mov
sbb
imul
mov
jmp
push
add
lods
mov
gs
adc
lret
sbb
lea
es
pop
shl
hlt
pop
movsl
cmc
out
mov
cmpsb
push
cwtl
test
dec
cmp
push
sbb
sbb
int3
jge
inc
xchg
inc
jmp
pop
add
call
fldt
jae
xchg
and
arpl
into
stc
insl
aas
cmp
jae
test
data16
pop
jecxz
mov
aam
insl
cmp
pop
add
rorl
repnz
mov
enter
cs
leave
push
mov
xlat
ja
dec
push
xchg
jo
icebp
cmp
cmp
cwtl
popf
imul
push
scas
and
sti
mov
mov
je
sub
fdivs
jg
sti
cltd
jnp
xchg
sub
cwtl
pop
into
je
repnz
mov
scas
jo
pop
add
or
popa
flds
adcb
aam
adc
cltd
mov
mov
sahf
lods
cmp
jle
cmp
mov
lret
in
inc
ret
xchg
data16
repz
hlt
mov
push
mov
sub
pop
lret
mov
push
fmull
add
mov
jno
mov
jmp
cmpb
lret
cld
out
xchg
mov
mov
into
jo
sbb
add
sbb
jbe
jns
inc
lahf
inc
shl
insl
and
sbb
mov
mov
adc
adc
mov
sahf
jb
or
fldl
loop
xor
cmp
je
dec
lods
pop
ja
aas
jle
and
cmp
mov
mov
sbb
mov
push
add
push
mov
jge
outsb
mov
add
xchg
mov
loop
cmp
test
outsl
cli
mov
cmp
adc
mov
stc
fldl
jg
ret
sbb
push
insb
cmp
hlt
mov
ret
in
sbb
jge
lret
mov
aam
and
arpl
ljmp
call
ret
aam
mov
daa
adc
inc
adc
pop
aam
jecxz
ret
jg
xchg
fs
inc
mov
lods
push
rcr
jno
pop
lock
fldcw
and
jae
dec
xchg
jmp
test
push
mov
sub
mov
dec
mov
mov
inc
pop
inc
cmp
xor
dec
mov
pop
adc
push
nop
js
xchg
and
aas
or
fucom
fcomp
out
leave
sub
sub
add
ret
add
mov
in
cs
mov
aaa
jb
lea
sub
fmul
scas
loope
arpl
es
sbb
lcall
std
notl
insb
cmp
xchg
int3
jb
xchg
repnz
and
cvtdq2ps
push
cmp
dec
jle
pop
inc
stos
rcrl
out
aad
sar
fwait
scas
xor
and
mov
shlb
pop
das
aaa
shll
adc
mov
or
sub
in
negl
out
into
dec
mov
je
shrd
xchg
sbb
cld
test
push
jge
dec
sub
repnz
fxch
xor
out
ja
mov
int3
mov
es
inc
sub
mov
leavew
aam
inc
and
xchg
shrb
stc
jnp
and
ds
and
in
jb
scas
daa
test
les
shlb
mov
popf
xor
xchg
jae
push
insl
jno
push
mov
add
mov
sub
dec
les
sub
cmp
inc
push
add
push
nop
roll
inc
test
iretw
push
nop
mov
lods
icebp
fwait
mov
mov
xor
int
fimull
mov
cmp
and
inc
add
aaa
int
jmp
push
and
divl
dec
cmp
jno
adc
push
les
push
aaa
cmp
stc
ds
mov
std
repz
jne
mov
or
or
pop
pushf
call
loopne
or
gs
pop
xchg
adc
out
inc
js
dec
inc
fistl
inc
pmulhw
stc
jge
lret
stos
arpl
leave
sub
sbb
push
ds
cmp
adc
pop
pop
movsb
dec
data16
lods
sbb
arpl
dec
dec
mov
cwtl
orb
cld
xchg
popa
xlat
mov
mov
mov
loop
repz
adc
cmp
mov
movsl
in
das
pop
leave
sti
sub
pop
rcrb
lds
add
sbb
movsb
int
jecxz
ljmp
rorl
xchg
push
mov
aam
and
repnz
add
jb
outsl
mov
out
cmp
test
mov
xchg
add
outsb
inc
sub
inc
ds
cli
adc
in
js
xchg
xchg
leave
inc
pop
orb
sub
mov
adc
xlat
shrl
addl
mov
ds
or
out
fmull
and
je
lock
iret
shr
fsubs
in
das
ret
mov
scas
out
repz
mov
push
jp
pop
mov
fstps
jle
xor
loop
repz
or
or
adc
into
add
lret
scas
ljmp
jo
sub
xchg
dec
mov
xchg
sbb
movsl
ds
mov
mull
int3
cmpsb
lcall
inc
xlat
fwait
aad
pop
in
xor
xorb
cmp
jp
or
push
cmpl
push
inc
leave
pop
cmp
repnz
les
cwtl
mov
dec
data16
cmc
lcall
das
cmc
leave
push
or
jnp
insl
add
rorl
int3
std
fnstcw
jne
lahf
test
and
pop
in
push
inc
pop
cmpsl
cltd
inc
outsl
sub
rcll
orl
mov
imul
sbb
aad
xchg
dec
push
ljmp
cwtl
clc
scas
repz
jp
mov
pop
je
mov
testb
mov
add
mov
mov
dec
orl
add
or
jg
push
pop
icebp
cwtl
mov
das
jecxz
push
popa
insl
jg
out
aas
iret
arpl
test
sub
sbb
repz
add
ret
pushf
jb
mov
dec
outsl
add
add
sbb
or
xor
aaa
xor
pop
lock
dec
ret
fsubp
je
xchg
sbbb
arpl
fildl
adc
arpl
setnp
dec
jo
std
sti
xorb
punpckhdq
ss
stc
mov
mov
push
mov
sub
mov
outsl
std
xor
stos
cmc
xlat
mov
pop
test
ljmp
mov
xchg
dec
xor
xor
aad
cmpsl
jmp
fdivrs
movsb
sbb
lds
jno
jg
call
sti
test
test
dec
int3
pop
or
dec
dec
sbb
push
or
rcll
mov
mov
lods
lret
fidivl
add
mov
dec
mov
or
mov
stos
adc
ss
jnp
aaa
push
gs
cmp
jae
fs
lahf
hlt
adc
clc
sbb
clc
jge
and
pop
ret
add
fwait
imulb
insb
in
jmp
pusha
shlb
jmp
lock
dec
clc
pop
pop
jbe
dec
movsl
int3
pop
push
ljmp
push
in
dec
mulb
sbb
inc
or
push
cs
fidivs
ljmp
loope
mov
in
mov
cs
insl
cld
cmp
jp
std
add
ja
jae
popf
pop
nop
fsubrl
or
or
sub
push
cmpsl
jp
incb
add
cmpsl
sbb
clc
and
jg
outsb
mov
push
xchg
cmpsb
je
lret
inc
jmp
std
leave
xchg
mov
pushf
xor
jb
fstl
scas
in
mov
mov
and
ja
gs
sub
cmpsl
movsl
ss
jne
movsl
shr
pop
or
stos
dec
jne
xlat
fs
cltd
and
and
add
mov
nop
add
adc
jo
rolb
mov
or
dec
icebp
fisubrl
push
add
int
add
push
mov
xorl
cmp
and
push
xchg
into
push
dec
adc
jo
dec
lods
xor
ds
and
jl
or
notb
jno
or
insl
aas
imul
ja
imul
xlat
pop
xchg
aas
ret
movsb
mov
movsl
loop
fsubrl
mov
les
sub
ror
daa
xchg
adc
ss
inc
notl
mov
mov
mov
sbb
movsl
mov
cmp
xchg
int
mov
mov
fwait
into
push
stc
sbb
or
out
or
xor
inc
mov
outsb
icebp
in
cmpb
testb
jo
aas
daa
jecxz
xchg
cmp
push
push
and
pop
frstor
pop
xchg
xchg
stos
adc
mov
mov
push
in
mov
stc
test
and
cmpb
mov
stos
pop
mov
movsl
enter
inc
rolb
mov
and
sub
cmp
mov
pop
mov
add
ljmp
push
jl
or
push
cmp
push
jbe
aam
jae
pop
push
jb
jo
mov
shlb
dec
outsb
xor
mov
int
mov
push
test
stos
shl
les
out
lahf
sbb
mov
sub
inc
int
and
or
out
xorl
movsb
out
jb
mov
in
push
push
cmpsb
into
push
sbb
sbb
sub
sub
jecxz
das
jnp
sbb
push
pushf
pop
lods
xchg
mov
sahf
sti
jp
dec
testb
pop
jne
mov
mov
bound
loop
mov
fwait
jae
cmp
pop
cmp
xchg
pop
cmpsl
pop
push
lea
std
xor
outsl
imul
adcl
cmp
and
sbb
jmp
cmpsl
jmp
inc
push
or
mov
lret
lret
cwtl
add
lret
inc
xchg
or
and
gs
add
addb
mov
inc
ret
sbb
shlb
popa
in
aas
mov
sbb
jl
cli
insl
pop
hlt
or
push
xor
std
sub
into
pusha
xchg
cmc
ds
stos
add
sub
jle
sbb
fs
inc
aad
xchg
push
sbb
adc
mov
dec
mov
nop
into
push
dec
and
js
push
mov
lidtl
dec
jl
push
test
dec
sarb
or
pop
pusha
xchg
xor
jecxz
dec
punpckhwd
jp
dec
adc
xorb
mov
loop
and
addl
mov
pop
jp
mov
std
sub
xor
mov
mov
xchg
hlt
inc
sbb
sbb
aam
and
int
sbb
sbb
or
push
sub
mov
dec
enter
les
mov
mov
rorb
jmp
jle
rorl
stc
mov
mov
pop
outsl
gs
mov
cld
jmp
lret
mov
pop
push
mov
rcrl
mov
insl
fiaddl
mov
adc
jbe
jg
mov
mov
bswap
push
sub
mov
mov
lret
adc
testl
push
push
mov
jecxz
mov
mov
fistps
pop
out
sub
xchg
aaa
inc
insb
loopne
mov
inc
mov
bound
pop
inc
mov
nop
test
xchg
push
jae
ret
je
mov
pop
adc
sti
aaa
sahf
test
test
popf
and
movb
in
pop
fistpl
movsb
arpl
pop
jp
insl
scas
out
addr16
pop
pop
push
aad
das
pop
jno
ret
loop
mov
das
xchg
mov
push
mov
cmpsl
jmp
fs
mov
push
or
mov
test
lret
addr16
cmp
aaa
ljmp
testl
xor
inc
out
xchg
movsb
sahf
add
xchg
xlat
pop
cmpsl
ljmp
push
pop
sub
in
repz
or
xlat
lcall
pop
add
or
sub
fbld
fldcw
jne
add
adc
js
cmp
lods
pushf
lcall
pop
xchg
xor
mov
dec
sbb
push
pop
imul
xor
xchg
pop
mov
sbb
pop
jo
xorl
jns
pop
inc
movsl
mov
pushf
sar
sbbl
popf
pslld
loop
mov
pop
xor
mov
or
test
es
hlt
imull
je
xchg
ror
cs
xor
add
pop
pop
mov
xchg
out
mov
mov
jge
fsubrs
dec
leave
int
cltd
jmp
dec
movsb
call
mov
rclb
nop
jp
int
or
fxch
addr16
ljmp
pushf
fimull
imul
out
cmpsl
mov
loope
test
in
xchg
inc
xchg
into
out
push
enter
xchg
mov
xlat
pushl
adc
push
shrl
jp
mov
cmpsl
dec
pop
jnp
dec
adc
xchg
lret
xor
cld
mov
adc
cmp
xor
xchg
aaa
mov
jecxz
adc
movsb
push
adc
cli
bound
mov
subl
enter
fwait
add
outsl
pop
test
jle
mov
ss
push
int
enter
repnz
fisttpl
stc
sbb
ret
mov
into
in
dec
jb
xchg
pop
xor
lahf
mov
lods
jmp
mov
sub
pop
and
jno
pushf
mov
imul
sub
shl
jmp
and
pop
fs
insl
rcrb
imul
adc
popa
xor
getsec
jb
push
or
shrd
cltd
mov
fldenv
jno
xchg
pop
push
cmp
or
mov
fcmovbe
daa
mov
rcrb
sahf
popf
sub
test
roll
or
mov
call
or
mov
ret
mov
rcl
sti
test
sub
hlt
imul
lret
loop
jns
ror
sbb
int
outsl
fidivrl
jg
xchg
leave
aas
or
dec
xchg
testb
sbb
out
jb
sti
jge
cmp
jbe
mov
fadd
sbb
movsl
sbb
call
arpl
lds
push
sub
icebp
pushf
sub
stos
push
das
add
movl
pop
rcrb
test
imul
je
dec
js
jbe
clc
daa
mov
xchg
mov
cwtl
js
test
lods
xor
cmp
push
pop
std
mov
xchg
lret
dec
dec
or
and
sbb
push
adc
add
mov
mov
mov
pop
jg
xchg
movsb
in
adcb
aam
sbb
js
add
stos
inc
lods
nop
sbb
cmp
aaa
pusha
faddl
xchg
push
into
pop
mov
cmp
mov
je
lods
repz
sbb
iret
scas
push
mov
lahf
pushf
xor
js
pop
mov
pusha
fildl
and
jmp
inc
clc
sub
add
out
cmp
push
jg
aad
xchg
jno
inc
jnp
cmp
push
fdivl
xchg
inc
test
jge
or
sahf
dec
or
pop
cltd
andl
push
not
xorl
mov
pusha
push
in
adc
dec
sbb
shll
stos
push
mov
and
xor
add
adcb
loope
sbb
rorl
inc
xor
ret
mov
subl
jge
cmp
inc
shll
scas
lds
jecxz
dec
inc
xlat
cmp
mov
in
es
mov
out
pop
or
fstpl
cmp
sbb
cs
pushf
cwtl
jo
jno
dec
js
push
hlt
test
cltd
mov
aas
bound
jmp
mov
pop
ret
inc
and
clc
ficomps
adc
xor
movb
mov
movsb
adc
xchg
call
xchg
data16
or
out
scas
lcall
lret
xchg
jecxz
push
sbb
sbb
lea
jne
repnz
imul
jnp
jo
or
sub
push
fwait
in
adc
stos
jp
lret
sbb
xchg
jo
inc
nop
pushf
jge
aaa
rcll
cmp
mov
fmul
pop
std
loope
adcb
fsubr
gs
sub
aas
mov
fwait
imul
pop
mov
xor
jne
sbb
pop
aad
jae
dec
xchg
dec
out
pop
mov
aad
cwtl
sbb
mov
loope
test
pop
sub
cld
mov
orb
test
nop
call
rcrl
mov
lahf
dec
sbb
outsb
mov
mov
fcompl
jecxz
fdivrs
hlt
rcll
mov
lock
or
xor
mov
inc
inc
out
int3
test
pusha
scas
js
pop
rclb
ds
cld
xchg
jecxz
inc
jmp
popa
rcrb
or
out
orl
aaa
cmp
mov
fldt
mov
sti
mov
and
pop
adc
push
popa
sub
aam
lea
xchg
stos
and
mov
push
fstl
jp
fimuls
lcall
push
add
dec
jecxz
out
lret
adc
int
rclb
xor
cmp
push
or
inc
stos
cld
aaa
and
movsb
push
jg
adc
pop
sbb
lahf
mov
xchg
or
or
enter
outsl
mov
aaa
mov
in
in
fidivs
icebp
mov
lret
aam
cmpsl
mov
sarb
icebp
pop
and
std
push
enter
pop
fwait
or
push
jae
jne
add
adc
aad
sbb
stc
xor
lods
push
jg
xchg
xchg
scas
movsl
test
aas
sub
insl
cltd
scas
push
int3
loopne
jo
inc
mov
fwait
sub
pushf
cmp
cmp
icebp
sbb
fwait
push
pusha
mov
jg
js
mov
cli
jo
or
dec
test
push
mov
mov
cld
lea
jno
push
mov
push
push
loopne
mov
pop
dec
fdivp
sbb
bound
add
cmp
or
shrl
addb
stc
mov
mov
push
xchg
adc
data16
mov
sbb
push
jge
jnp
xchg
add
xor
orl
sbb
xor
mov
into
das
fists
je
repz
in
push
jb
pop
mov
sub
jmp
xor
xor
jns
pop
lods
cmp
sub
push
fsubs
inc
arpl
fwait
cli
pop
pop
cmp
sbb
cmp
xchg
insb
inc
shlb
pop
jb
sbb
dec
mov
andb
mov
cs
movsb
in
je
or
xchg
addr16
inc
mov
stc
push
or
xchg
sbb
ljmp
add
mul
jnp
es
or
fisubl
ret
loopne
jbe
fsts
popa
decl
insl
int3
mov
gs
mov
jae
ret
int
sbb
push
or
mov
scas
outsl
lcall
fnstenv
cmc
and
ss
mov
movsl
rcr
sbb
insl
add
adc
sbb
mov
addr16
xor
cli
cli
sub
sbb
mov
repnz
mov
je
fnstcw
aas
or
jns
outsl
dec
cmp
cmp
jecxz
pop
mov
xchg
pop
stc
jae
shr
xchg
pusha
cmp
dec
jns
es
repz
mov
add
jl
aad
push
mov
push
mov
into
pop
mov
sub
mov
dec
pop
outsl
lcall
rcl
mov
and
push
adc
cld
in
xchg
xchg
lret
bound
xchg
insb
cmp
jnp
dec
inc
jp
rolb
hlt
mov
dec
clc
dec
out
or
xor
sbb
and
inc
xchg
xor
adc
mov
jg
jecxz
sbb
mov
sbb
dec
cmp
xchg
aaa
push
cmp
cmp
jge
out
faddp
inc
jmp
popf
push
cmpb
cmpsb
xchg
jg
push
push
paddusb
imul
cltd
mov
adc
popa
or
mov
bound
leave
fsubl
mov
jnp
xor
out
data16
jmp
and
js
testl
add
sahf
jp
cmc
sbb
xor
ret
mov
push
int3
push
cli
clc
orb
sub
pop
cmpsl
push
inc
pop
and
testl
and
shlb
ljmp
mov
fadds
in
add
popa
bound
or
push
pusha
xor
popf
jmp
pop
mov
sub
stos
test
mov
pop
xchg
push
jg
lahf
jp
addr16
push
dec
shll
cli
sub
xchg
xchg
inc
mov
call
push
cmpsl
mov
in
outsl
imul
shrb
gs
fcmove
push
sbb
jg
adc
pop
insb
dec
fs
in
xchg
inc
negb
xor
shrl
xchg
mov
push
les
hlt
hlt
test
add
pushf
mov
lods
pop
xor
xlat
jne
cmpsb
and
clc
or
mov
ret
std
test
jg
enter
jb
push
test
add
addl
pushf
push
lock
fisttps
lret
push
pop
cmp
rol
fstl
lcall
xchg
cmovne
cld
xor
dec
cmp
sub
std
add
pushf
inc
bound
add
popa
mov
es
cmp
or
jb
test
pop
xchg
xchg
jg
xchg
loop
shl
leave
cmp
fstl
cmp
in
cmp
fs
push
pop
pop
and
xchg
notb
xor
dec
cmp
ljmp
loopne
sub
out
dec
and
int3
cmp
and
mov
in
or
gs
fwait
push
sbb
xor
dec
and
dec
pop
lds
notl
push
and
and
mov
shll
dec
jl
sbb
sub
movsb
test
popf
xchg
stos
in
movsl
lahf
rcrb
divl
inc
imul
sub
shll
push
mov
jo
lret
shlb
mov
faddl
icebp
sete
push
outsl
pop
in
in
inc
pop
lds
mov
ljmp
and
jge
fs
mov
stos
cmp
ja
push
in
popf
aas
dec
insb
xchg
mov
push
adcl
jno
adcb
stos
or
sbb
pop
ret
lcall
into
je
jne
xchg
ss
dec
dec
dec
pop
pop
cmpb
sti
mov
adc
dec
icebp
mov
cltd
call
pushf
lret
fnstsw
and
mov
clc
gs
inc
and
ja
jle
int
notb
int
cmp
xchg
adc
movsb
pop
insb
iret
lcall
test
mov
out
outsl
add
in
cmp
iret
scas
fidivrs
out
jp
jb
fsts
call
jge
loop
lods
pop
dec
arpl
push
xchg
dec
push
outsb
scas
xchg
push
mov
cltd
pop
push
shl
add
mov
sub
push
dec
push
mov
jnp
and
test
cmc
add
loopne
adc
xor
pop
mov
and
adc
mov
cmpsb
pop
cmp
mov
push
pop
aas
push
ljmp
ficoms
icebp
adc
mov
mov
inc
sbb
mov
leave
or
pop
pop
xchg
add
mov
inc
dec
mov
in
adc
scas
addb
sbb
ljmp
shlb
jno
sbb
cmp
and
add
les
sub
sub
out
mov
jl
cmp
aad
or
xor
lods
push
rcrb
out
sbb
test
push
ds
cmp
cmpsl
insl
fcmovnu
and
call
rolb
ret
and
out
xchg
negb
in
add
sub
mov
xor
add
inc
xchg
stos
xor
loopne
insl
in
dec
mov
push
push
jg
xor
insb
aaa
fsts
addb
xor
aaa
mov
stc
insb
inc
dec
lods
testb
sahf
insb
scas
jnp
fimuls
mov
pop
outsb
sti
stos
and
js
jl
sahf
pop
imul
pop
dec
shl
in
enter
xchg
push
aaa
ss
xor
jmp
mov
add
pop
cmp
cmpsb
testl
pop
add
sbb
outsb
adc
mov
cld
sub
cmp
and
rcrb
hlt
lds
invd
sahf
pop
lret
push
dec
jge
fisubl
and
nop
in
cmp
sub
mov
pop
lret
inc
aad
aas
repz
mov
iret
lcall
jge
sub
ljmp
hlt
fstl
mov
stos
pop
cmp
stc
sarb
xchg
aam
pop
lcall
push
and
pusha
xor
xchg
test
sub
mov
fisubs
cmp
push
sub
cli
stc
addb
xorl
cld
push
int
jne
xor
sub
mov
and
popf
jmp
mov
imul
and
adc
and
pop
lods
mov
repnz
adc
jo
fnstsw
pop
fs
sbb
out
cmp
in
in
push
mov
cmpsb
sbb
mov
cmp
xor
jmp
enter
inc
push
mov
add
jo
sbbl
sarl
xchg
test
jae
dec
pushf
iret
int
popf
aaa
lea
les
mov
lret
jb
je
jne
divb
xchg
xor
sbb
push
xchg
push
bound
inc
loope
xchg
sbb
out
addl
adc
adc
mov
jg
jmp
jg
adc
push
push
mov
gs
divl
movsb
stos
cmp
cmpsl
mov
out
orl
pop
outsl
subl
stc
dec
fstpt
mov
inc
and
lret
dec
inc
add
popf
fmul
xchg
mov
mov
sbb
test
dec
dec
fsubrl
fcompl
push
gs
pop
lock
inc
xor
xor
ret
mov
das
aaa
inc
cmpsl
aas
dec
fildl
pop
into
pop
push
test
fs
xchg
addr16
fcomps
cs
push
jl
int3
xorb
add
loop
cmc
pop
fwait
add
outsl
rolb
jge
leave
pop
mov
xchg
andb
jmp
pop
mov
cmp
jae
cwtl
cwtl
out
aam
lahf
pop
lcall
sarl
aam
mov
or
xchg
daa
pop
mov
mov
add
jo
lret
inc
xor
sbb
xor
shl
pop
rorb
and
mov
adc
enter
sbb
loopw
rcrl
stos
cmp
xor
lea
daa
dec
cs
pop
pushf
int3
xor
aas
or
xchg
test
loop
or
addl
arpl
call
ss
dec
push
add
mov
outsb
jecxz
ret
fsubr
decl
and
xor
pop
jmp
push
inc
repnz
jno
fsubp
mov
cmp
sbb
fsubs
andb
lods
dec
mov
jmp
adc
push
iret
imul
push
imul
jbe
cmp
add
dec
lods
scas
jmp
imul
add
push
xor
ds
mov
mov
and
jne
mov
mov
sbb
scas
mov
push
jno
xor
xlat
insl
pop
mov
popa
outsl
push
pushf
mov
scas
sbb
ficompl
jne
loop
dec
dec
test
cmpsb
adc
out
inc
mov
ret
and
fildl
sbb
push
movsl
jecxz
test
xchg
push
push
xchg
add
stos
loop
inc
jge
dec
jg
mov
sub
mov
dec
push
es
loop
out
inc
or
dec
aaa
lahf
sbb
add
sti
xor
xor
xchg
push
add
popf
lds
push
ret
or
mov
pop
out
adc
call
xchg
or
divb
push
into
lret
nopl
ret
fwait
push
out
xchg
xchg
jmp
and
pop
mov
mov
fcomps
and
hlt
lds
insl
repz
mov
sub
fsubp
repz
test
jb
xchg
mov
cmpsl
dec
popf
testl
gs
lea
xchg
inc
or
xor
jle
in
bound
ficomps
xor
jns
scas
pop
dec
push
das
dec
dec
leave
sbb
loop
mov
mov
int
jp
and
inc
push
adc
push
popf
inc
and
mov
lcall
xchg
xor
push
jne
jbe
dec
add
jb
push
pop
xchg
inc
inc
xchg
loopne
cs
push
test
inc
mov
mov
lcall
out
jne
ffreep
mov
out
mov
test
sbb
inc
xlat
and
test
sahf
shlb
xor
xchg
push
outsl
cmc
pop
adc
callw
add
movsl
stc
mov
mulb
sub
xor
ret
xor
jbe
nop
arpl
jo
orl
or
cmp
adc
rcll
out
adc
lret
leave
push
ret
dec
fsubrl
scas
push
mov
push
mov
cmp
cld
ror
inc
adc
fdivl
xor
loope
imul
push
and
add
xor
jns
xchg
xor
cmp
scas
mulb
mov
mov
ret
jge
ljmp
or
pop
in
cmp
adc
sbb
and
out
mov
inc
fstpt
xchg
inc
and
jno
je
cld
clc
outsl
movsl
mov
mov
outsl
push
xchg
xchg
imul
nop
sub
call
xchg
mov
les
mov
dec
sahf
iret
fwait
dec
inc
adcl
push
pop
movmskps
fists
jnp
sbb
subl
lea
sub
xchg
pop
jge
cltd
lahf
lods
imul
dec
push
cltd
sbb
ja
or
shrl
sub
lods
fwait
xor
outsb
hlt
ficomps
mov
fldenv
push
mov
pop
cld
roll
and
and
shlb
mov
ss
mov
add
inc
and
mov
call
mov
and
cmp
adc
xchg
cmp
mov
loop
arpl
pop
jg
cltd
movsl
xor
mov
mov
inc
inc
iret
fcoms
mov
push
and
sub
mov
jle
sub
imul
jp
and
pop
outsb
or
fimull
aas
and
icebp
sbb
and
test
and
into
inc
lds
js
cmpsb
lods
jo
scas
out
aad
and
xor
sbb
and
adc
outsl
mov
stc
jp
je
test
stc
jae
rcrl
adc
jle
jle
dec
lds
xchg
insl
je
dec
es
loopne
test
out
pusha
push
insl
cmp
cwtl
sbb
insl
cmp
cmp
push
out
inc
jno
lock
mov
neg
jp
mov
lahf
push
add
pusha
mov
adc
push
movsl
pop
jg
pop
jp
test
sahf
insl
sbb
enter
pop
xchg
ficomps
loope
mov
xor
mov
mov
sahf
dec
dec
push
arpl
xchg
sbb
mov
shrb
sbb
push
push
sti
cld
outsb
jecxz
mov
test
pop
enter
sahf
pop
ja
push
xchg
mov
mov
push
xor
adc
push
lea
cltd
scas
enter
popa
push
jnp
pop
stos
adc
shrl
lods
dec
leave
xor
scas
pop
sahf
and
dec
inc
xor
sub
repz
sahf
outsb
loop
test
sbb
jb
xchg
iret
sbbl
push
daa
movsb
mov
les
sub
sub
push
rorb
cmp
out
xchg
xchg
dec
cmpb
fbld
mov
add
xor
xchg
mov
mov
mov
loope
or
or
ret
icebp
insl
sub
dec
xchg
fildl
mov
call
fldenv
mov
stos
subl
jne
cli
lock
pusha
add
lods
in
int3
mov
das
or
mov
scas
jns
cmpsl
jae
enter
push
and
dec
mov
bound
aaa
lahf
mov
out
subl
mov
mov
jp
cwtl
pop
and
test
out
cmp
inc
les
or
ret
fdivrl
faddl
dec
das
outsl
outsl
jne
in
sbb
fbld
out
sbb
xlat
push
inc
stc
xor
cwtl
bound
sarl
stos
lds
fbld
loop
in
add
mov
divl
xchg
push
out
add
mov
pushf
add
test
mov
xchg
test
adc
mov
dec
and
call
call
sbb
pop
sub
loop
lds
sbb
dec
ja
xchg
outsl
test
icebp
mov
jb
fwait
notl
mov
sub
mov
icebp
pop
sub
ret
into
out
pop
pop
es
mov
xchg
out
push
enter
jb
addr16
dec
jo
dec
adc
dec
icebp
mov
aam
ja
cs
or
pusha
adc
or
pop
and
dec
mov
stos
dec
outsb
into
dec
popa
jmp
mov
jae
shll
and
xchg
adc
sbb
in
push
cmp
int3
nop
mov
mov
nop
mov
in
data16
inc
lods
dec
push
push
loopne
mov
add
jmp
push
sub
and
ljmp
and
dec
mov
adc
push
jb
pop
inc
in
adc
jecxz
cltd
ret
and
mov
test
test
incb
push
pusha
jmp
scas
xchg
lahf
imul
or
data16
fidivrs
lods
add
popf
pop
jno
pop
sub
mov
enter
mov
fistps
mov
add
fcoml
mov
fs
call
push
sbb
mov
imul
pop
ja
push
inc
int3
adc
xor
shl
rcl
mov
xchg
sub
sahf
pop
out
xchg
dec
push
xor
das
pop
imul
and
push
mov
lods
aas
or
fldt
inc
add
inc
js
mov
push
sbb
dec
out
jns
dec
or
call
call
mov
mov
dec
lods
mov
fwait
repnz
push
rcll
js
repnz
mov
pop
pop
sub
adc
mov
cmp
pmuludq
dec
aad
push
das
popf
dec
or
fmull
push
mov
push
xchg
sub
sub
repz
insl
insl
xchg
scas
xchg
mov
test
add
loope
sub
cmp
push
xchg
and
pop
je
movl
iret
jnp
jae
inc
cmp
movsb
sub
mov
and
ds
repz
fwait
movsl
dec
inc
jnp
mov
into
dec
mov
in
xlat
inc
jge
push
sar
ja
xor
lret
add
cmpsb
lea
loop
or
cli
ret
or
xchg
rcrl
inc
mov
add
xor
or
xchg
stc
pop
movsl
and
mov
xor
and
sti
je
cmp
aam
cltd
xor
inc
fldt
push
jb
cmpsb
fstpt
fsubrl
push
loope
xchg
push
lea
inc
push
std
adc
xor
shl
mov
and
add
push
or
gs
sub
pusha
add
lea
int3
or
push
popf
pusha
inc
mov
sbb
cmp
xlat
jle
cmp
loop
jns
mov
out
mov
xor
pop
sbb
out
js
cmc
mov
out
xor
clc
mov
xchg
inc
push
add
sub
fstps
pop
scas
pusha
in
jl
fcmovu
mulb
mov
dec
icebp
mov
clc
in
test
hlt
js
cmp
pop
loope
nop
in
adc
add
adc
inc
ret
inc
loope
insl
stos
test
xor
in
mov
mov
and
ret
fs
inc
dec
out
mov
pop
test
mov
imul
ret
loop
mov
mov
stos
bound
mov
aaa
xor
int
dec
add
cmp
fidivs
pop
cmp
or
arpl
mov
loope
pop
fcompl
mov
mov
inc
mov
push
dec
dec
shrl
xchg
shrl
outsb
es
jmp
pop
mov
jbe
sub
xchg
mulb
jo
mov
test
loop
repnz
stos
test
mov
aas
xchg
insl
int3
pop
ffreep
pop
repnz
movsl
add
adc
les
mov
pop
stos
std
fsubrl
xorb
sbb
out
push
jle
cwtl
neg
adc
ficomps
test
lret
std
call
push
push
cmpsb
xchg
mov
bound
notl
xor
mov
popf
cmpsl
ja
fstpt
fsubl
mov
cmc
cs
lahf
pushf
call
add
cmp
enter
enter
insb
test
ret
adc
add
xor
insl
push
mov
hlt
mov
lahf
pop
sbb
pushf
shl
push
fucomip
in
aam
lds
ds
out
imul
scas
and
pop
mov
repnz
inc
mov
xchg
adc
dec
into
adc
xchg
or
add
ret
xor
pop
pop
ffreep
out
xchg
mov
xchg
jnp
scas
lahf
push
movsl
out
int3
sub
shlb
cmp
mul
mov
movb
das
aas
fistpll
insb
push
fwait
mov
sub
sub
sub
cmp
jp
add
outsb
fistpl
push
loop
push
dec
repnz
mov
cs
mov
cmp
movnti
sbb
sbb
testl
jge
cmp
push
mov
daa
adc
inc
cld
les
fadds
adcb
sbb
xchg
mov
dec
addr16
mov
mov
outsb
cmp
mov
sub
jle
lcall
stos
cld
outsb
pop
pop
mov
sbb
mov
inc
int3
push
pop
cmp
pop
ja
sbbl
cld
rclb
mov
adc
and
adc
mov
orl
lea
in
dec
and
ret
and
xchg
xor
push
ficompl
sub
adc
pop
ret
xchg
jae
mov
sahf
loop
fnstenv
mov
out
jmp
add
add
cmp
mov
adc
mov
push
mov
add
sub
mov
scas
xchg
push
orb
mov
cs
or
push
adc
es
mov
inc
enter
bound
xchg
ret
add
sub
push
cwtl
push
jge
out
sbb
mov
fildll
sahf
int3
push
or
ss
scas
pop
popf
hlt
pop
pop
lods
cmp
add
xor
lds
xchg
dec
dec
cltd
movsb
fwait
and
fisubs
inc
push
push
dec
pop
imul
icebp
cmp
mov
fisubl
add
dec
inc
add
adc
add
xchg
add
mov
add
fidivs
add
mov
pop
sbbl
lods
stc
jge
jne
imul
pop
mov
mov
cmp
mov
dec
cld
int
cmpb
push
test
xor
sub
xorl
mov
adc
mov
xchg
push
pop
cli
mov
les
icebp
push
push
dec
push
movsb
stc
lret
mov
stc
sub
mov
jnp
aam
cmp
jne
sub
aaa
out
lret
mov
sbb
imul
repnz
cmp
xchg
cld
out
add
movsl
dec
test
sub
xchg
ret
jg
scas
popa
inc
scas
mov
cltd
add
popa
sbb
sub
adc
jno
adc
cmp
ss
sub
pop
xchg
sub
mov
lods
mov
mov
sbbl
and
adc
into
pop
mov
ret
adc
movsl
push
pop
jmp
stos
cld
das
dec
xchg
lods
push
or
add
dec
outsb
scas
mov
lcall
addl
sbb
sub
pop
xchg
icebp
mov
out
lret
mov
or
cmp
ds
int
dec
scas
sub
add
cmp
add
jl
jno
xor
jns
mov
pop
and
jle
and
ja
xchg
out
or
xor
aaa
xor
jno
cmp
inc
mov
pusha
mov
idiv
notb
scas
mov
lret
cs
adcl
or
push
xor
jno
shlb
shrd
lcall
mov
mov
mov
inc
test
cmpsb
fiaddl
or
mov
xchg
add
mov
cli
add
testb
stos
hlt
outsb
jmp
xchg
push
sbb
push
lcall
jb
cmp
xchg
gs
push
outsl
jmp
mov
cmc
adc
push
sub
stc
push
xchg
in
inc
adcl
cmpsl
sub
bndldx
ret
xchg
out
clc
loope
fwait
sbb
xor
or
xor
or
pop
in
mov
jmp
mov
push
lret
sub
fisubrs
hlt
mov
fcoml
mov
mov
rorl
mov
dec
mov
push
adc
bt
dec
and
cs
fsub
sub
les
and
push
mov
adc
sbbl
xchg
loope
or
push
mov
add
repz
add
dec
jo
sbb
xchg
adc
clc
out
aaa
out
push
test
sub
mov
loop
out
mov
mov
jecxz
push
and
cmpsl
dec
xchg
sbb
mov
cmp
scas
lcall
movsl
jmp
cltd
cs
movsb
sub
adc
in
test
orl
test
mov
lcall
push
xchg
pop
sahf
add
mov
rolb
cmp
ficoms
not
lret
mov
add
mov
xlat
add
jbe
shlb
cmpsl
not
in
iret
jecxz
test
sbb
stc
sub
imul
into
repnz
mov
xlat
cld
test
pop
pop
cmpsb
loope
sbb
push
fs
inc
xor
shlb
stos
push
daa
ja
sbb
jne
inc
cwtl
xchg
add
lcall
xor
adc
and
insl
dec
mov
loopne
xor
nop
enter
sbb
mov
jmp
scas
scas
mov
sbbb
nop
ss
or
sub
mov
imul
lret
jae
inc
cmc
jecxz
imul
xchg
test
testb
or
jmp
test
mov
xchg
lahf
jbe
xor
cmp
pop
push
mov
pop
fdivs
inc
jbe
dec
dec
lds
mov
test
sbb
orb
ret
addr16
je
or
call
test
and
fiaddl
enter
clc
or
cmpsl
ds
add
push
mov
jle,pt
cmp
lods
cld
insl
mov
push
and
mov
mov
pop
and
or
insb
fdivs
int3
xor
mov
ljmp
enter
xchg
mov
mov
aam
leave
xor
adc
adc
mov
add
in
mov
outsl
or
fidivs
fs
xchg
loope
ss
aam
stos
outsl
std
push
or
push
push
int
pop
and
cltd
leave
push
test
jmp
enter
inc
push
push
push
jecxz
push
faddl
inc
test
int3
gs
movsl
xor
mov
add
mov
jl
ss
mov
inc
and
jne
sbb
movsl
testb
stos
inc
lret
xchg
fidivs
pop
test
sub
aad
push
xor
dec
push
xor
mov
jns
cli
push
xor
mov
scas
sub
or
lods
or
call
shll
fwait
insb
pop
sbb
xchg
daa
repz
pop
cmp
xor
xchg
push
int
test
cmp
xchg
and
jns
mov
add
sbb
inc
leave
pop
lods
push
push
testl
mov
rclb
dec
mov
stos
adc
cmc
shrl
jmp
repnz
jno
add
test
insb
push
fxch
add
pop
jb
jmp
cmpsl
shlb
addb
stos
movsl
xor
popf
pop
stos
enter
dec
xchg
inc
add
dec
cmp
lds
xor
cltd
push
icebp
imul
frstor
inc
decl
popf
or
pop
cmpsl
dec
and
imul
mov
xchg
es
push
ret
inc
das
aas
mov
fisttps
pop
mov
movsl
and
add
ds
mov
in
fistl
fistpl
push
jns
aam
xchg
out
xor
cmpsb
outsl
rorb
leave
mov
xchg
outsb
xchg
sbb
stc
xchg
imul
movsb
push
scas
sti
cwtl
fdivrs
mov
rcrb
mov
les
sub
mov
stc
das
adc
add
stos
jno
push
loop
adc
sub
sub
enter
fsubs
aas
sub
sub
pusha
cmp
aam
leave
mov
outsl
cmp
push
cmp
popf
and
and
imul
cmp
dec
and
push
mov
and
sahf
and
addb
add
pusha
xchg
add
jnp
jae
bound
lods
and
and
xor
pop
pop
push
inc
jge
cmp
mov
cwtl
imul
jae
pop
adc
xor
aam
jl
xorb
test
mov
mov
loop
fmul
loopne
dec
pop
jp
push
fwait
push
out
push
in
xor
sbb
pop
xor
add
dec
adc
pop
push
ret
cmpsb
mov
mov
scas
bound
out
mov
stos
and
sbb
pop
or
shrb
aad
aad
xor
xchg
add
dec
adc
lds
add
loope
mov
jns
mov
std
or
rolb
pushf
ret
mov
inc
jge
mov
arpl
shlb
or
xor
andl
jne
mov
push
lea
ds
aas
ljmp
jb
fcomp
dec
imul
popa
and
xor
lods
andl
xor
aas
addr16
sub
das
push
xor
push
xchg
insl
and
or
int
sub
ret
lea
jo
mov
lcall
clc
lea
jo
into
push
jae
mov
xor
shlb
hlt
mov
out
andl
jecxz
jns
sarl
push
mov
xor
push
jbe
popa
outsb
subl
lods
aad
aad
jne
add
jne
dec
xor
bound
stos
movsb
dec
mov
jmp
mov
cmp
push
xor
cs
or
adc
adc
lock
loope
pop
cmpsb
cld
das
or
jb
dec
fimuls
test
lods
lcall
jb
pop
popa
js
sub
xchg
or
sbb
loope
dec
js
outsb
or
daa
lret
inc
pop
jo
sub
mov
xorb
test
or
into
dec
adc
pusha
dec
lcall
je
inc
in
push
add
cmpsb
push
mov
rolb
push
xorb
ljmp
mulb
mov
jbe
ds
out
idiv
stos
jmp
xchg
and
mov
mov
aaa
out
adc
cltd
call
outsb
mov
lock
pop
push
scas
ficoml
lods
ss
lds
lret
inc
in
sub
ljmp
lock
sub
inc
mov
shll
sbb
cmp
enter
sbb
or
sbb
stos
push
add
jg
out
push
mov
dec
daa
jb
aaa
arpl
sbb
fildll
or
pop
shrl
jmp
nop
sti
cld
cmp
mov
or
outsl
jnp
je
jmp
inc
sbb
mov
or
and
add
mov
sbb
mov
cld
pusha
mov
clc
add
aam
lods
add
fisubrl
shll
repz
push
sarb
push
andl
mov
rcrl
ss
repnz
fistps
jbe
ret
pop
jo
pop
jecxz
out
push
jge
xchg
xlat
or
mov
lock
arpl
mov
fnstcw
and
fidivrl
repnz
sbb
push
leave
sahf
es
lret
jo
push
mov
jno
jge
leave
out
xor
sbb
xor
sbb
insl
outsb
aam
adc
into
xchg
push
ret
add
jb
out
out
fnstenv
pop
dec
notb
mov
scas
hlt
ret
push
sbb
cmp
pusha
xchg
mov
adc
ss
mov
bound
dec
scas
mov
pop
dec
fwait
or
add
fimull
mov
cmp
mov
iret
adc
add
and
imul
sub
mov
in
cmpsb
insb
xchg
arpl
loope
dec
xor
push
cmpsl
fwait
or
xlat
rclb
int3
adcl
jmp
movsb
pushf
lock
ret
pop
and
add
xchg
sbb
and
cs
pop
insl
mov
lods
loope
mov
arpl
and
das
fwait
xchg
sub
mov
fdivrl
dec
pop
pop
mov
push
shrb
movsb
loopne
fsincos
xchg
sub
cli
arpl
pop
lds
pushf
aas
jle
push
scas
fisubs
xchg
outsl
adc
scas
ljmp
data16
push
dec
cmp
inc
stc
test
mov
out
inc
bts
into
cmc
arpl
out
call
inc
sbb
shrl
sub
cmc
jle
insb
cmp
cs
dec
scas
ret
imul
fisttpl
stos
dec
and
out
sub
nop
cwtl
mov
push
cmp
adc
adc
out
clc
ss
jmp
ds
movsb
js
shlb
mov
inc
add
inc
stc
adc
in
jl
jmp
mov
lds
pop
pop
or
loop
xor
cld
fdivs
cmp
cwtl
pop
imul
int3
testb
scas
sbb
pop
ja
jne
mov
mov
jo
rorl
nop
into
jmp
mov
cmp
popa
sbb
jno
dec
mov
jecxz
xor
in
sti
and
lds
mov
pop
fsubs
pop
mov
add
add
adc
sub
cmpsl
mov
and
mov
addr16
inc
arpl
push
push
aad
lea
loop
inc
outsl
loope
out
jb
int3
inc
mov
push
cld
pop
mov
clc
push
push
cld
je
loope
loop
mov
or
add
cwtl
add
sbb
mov
scas
and
inc
push
hlt
ja
jnp
addr16
fiaddl
dec
push
test
add
pop
mov
lock
cld
out
cmp
or
and
cmp
leave
shrl
out
std
mov
xor
add
mov
shrl
fsubl
pop
mov
mov
popf
sahf
push
xchg
dec
mov
pop
imul
dec
in
ss
pop
and
inc
aam
push
mov
or
mov
sbb
add
lock
cltd
push
stos
scas
xlat
push
mov
add
xchg
dec
test
outsb
adc
push
mov
daa
pop
vpmulhw
lret
xor
pusha
out
xor
iret
stc
cmpsb
push
jg
gs
sbb
mov
cmp
stos
inc
aad
jle
stc
testl
inc
mov
mov
imul
in
inc
cmc
inc
push
sbb
sti
and
sub
les
sar
ja
es
push
xor
jae
test
fnsave
pop
das
xor
and
xor
out
sub
fs
and
push
stc
push
lcall
sbb
shll
xor
or
aam
push
es
scas
dec
xor
cmp
mulb
loopne
dec
std
sub
xchg
test
sub
loopne
cmpxchg
and
das
lahf
xor
sub
sarb
sub
bound
jmp
mov
divl
clc
mov
mov
or
pop
adc
jecxz
ficomps
incb
lds
out
mov
xchg
jg
fsubrl
push
rol
mov
pop
or
in
push
out
and
stc
div
ficompl
jecxz
aam
dec
dec
dec
out
loop
mov
test
xor
fnstcw
push
pop
scas
xchg
xchg
sub
movsb
mov
mov
call
stos
test
mov
cmpsl
mov
iret
dec
dec
push
into
inc
bound
jo
inc
scas
pop
xor
movsl
dec
repz
rcr
mov
pushaw
dec
add
lret
dec
outsl
arpl
pop
mov
movsl
shr
inc
pop
pop
and
out
popf
inc
pop
std
cmp
out
xchg
and
dec
sbb
xchg
mov
or
hlt
mov
mov
popl
nop
stos
dec
adc
divb
and
loop
mov
dec
sahf
test
dec
or
and
mov
jbe
jno
adc
push
pushf
clc
jmp
je
arpl
lods
outsl
insb
cs
movsb
out
jle
outsl
fbld
pop
aam
cmp
rorb
push
rcrl
push
leave
adc
inc
or
mov
pushf
or
mov
xor
into
rcll
loopne
jecxz
scas
xchg
bound
mov
add
and
ljmp
roll
and
dec
cltd
ljmp
lea
insl
mov
jge
dec
stos
ret
cmp
jb
add
shrb
das
mov
mov
shlb
aad
sub
imulb
cmc
or
push
subl
xchg
cmp
in
stos
adc
push
sub
dec
in
lret
xchg
xchg
push
aam
int3
inc
into
mov
push
dec
dec
sub
xor
xchg
insl
pusha
iret
dec
add
bound
mov
stos
pop
in
lock
outsb
pop
sub
and
or
clc
inc
dec
pop
repnz
mov
inc
push
jp
mov
outsl
and
ljmp
lods
dec
inc
bndldx
es
testl
push
xchg
mov
aaa
and
dec
ss
xchg
aaa
call
movsl
sub
jno
test
adcl
jno
nop
sub
ljmp
loope
jge
ja
stc
les
es
mov
pop
fnstcw
mov
mov
popa
cltd
inc
xchg
mov
pop
sarb
xor
outsl
test
movb
mov
xlat
jecxz
add
cmp
leave
inc
out
cltd
enter
mov
mov
ficoml
jecxz
sub
xchg
and
ss
add
cmp
adc
gs
jp
push
add
pop
sbb
scas
or
sti
call
push
xor
pop
dec
or
jne
cmp
shll
xorl
pop
mov
enter
mov
sub
push
je
movsb
cmp
or
jg
push
xchg
mov
cwtl
pop
fs
ja
and
add
or
dec
loope
cli
mov
setns
clc
outsl
leave
cmp
cli
ljmp
out
outsb
pop
in
adc
xor
jge
mov
mov
cmpsb
iret
xor
push
dec
cld
dec
jmp
cltd
movsl
decl
jnp
out
adc
push
jl
jle
bound
sbb
mov
lcall
cmc
cmpsb
xor
push
xchg
in
jb
jg
add
fs
and
lods
or
cli
xchg
lds
add
push
lods
sub
test
sub
lock
xor
adc
aad
dec
popf
out
push
out
add
cli
add
repnz
outsl
push
adc
mov
mov
cmp
aaa
iret
jo
jmp
lods
out
add
lahf
sub
dec
int3
fwait
and
sbb
loop
pop
mov
jecxz
inc
mov
roll
jns
inc
mov
jecxz
cltd
insl
push
das
xor
jb
jecxz
or
lods
or
js
adc
cli
shlb
sbb
dec
xor
jo
xor
hlt
orl
aaa
insl
rolb
cwtl
adc
ret
inc
int
inc
jnp
pop
ss
add
mov
push
sub
sub
xchg
mov
aas
ljmp
jb
pop
cmp
mov
cwtl
mov
mov
add
xchg
sar
xchg
cmc
sti
inc
cmp
pop
xlat
loopne
cmpsl
dec
mov
cli
imull
call
xchg
lods
popa
dec
inc
adc
mov
daa
mov
pop
mov
aam
repz
pop
push
icebp
ja
iret
mov
les
mov
stc
scas
mov
and
enter
inc
jae
adc
inc
addr16
xchg
fcoms
call
adc
mov
icebp
pop
cwtl
jl
inc
test
sti
jns
sbb
pusha
jns
cmp
inc
cwtl
pop
pushf
lahf
jle,pn
loop
and
mov
daa
sbb
insb
pop
mov
xor
xchg
push
xchg
ret
in
leave
fildll
mov
ret
push
add
add
idivl
clc
in
jp
mov
cmp
imulb
leave
leave
stc
inc
mov
lea
push
aas
push
mov
dec
pop
std
cmp
pop
dec
mov
cld
nop
test
shl
lret
or
pop
loopne
jmp
arpl
pop
or
or
fs
in
pop
add
pop
mov
or
xor
mov
pusha
xchg
sub
sub
cmp
fidivs
mov
cmovae
pop
push
in
arpl
inc
popa
out
jns
cmp
xchg
cli
decb
pusha
xchg
push
les
cltd
movsl
sbb
jecxz
outsl
aad
out
jp
es
mov
rcrl
pop
pop
das
xchg
and
jl
cld
insb
xchg
negb
lret
jo
out
aad
cmp
push
sbb
mov
sbb
cmp
in
sub
mov
sub
and
lcall
scas
scas
enter
imul
pop
xchg
jecxz
imul
dec
adc
or
xor
out
int3
mov
in
orb
clc
mov
rolb
dec
jbe
mov
popf
in
xchg
cmp
pop
out
cmpl
mov
and
jg
rorl
and
dec
xchg
wrmsr
cmp
test
cli
pushl
fldl
mov
je
lahf
add
lahf
mov
dec
add
inc
sahf
lods
xchg
jg
fwait
int3
inc
jo
stos
jecxz
mov
xchg
cmp
les
push
shrl
mov
and
imul
aaa
pop
pop
and
xor
sarl
aas
push
xchg
adc
fcomp
and
inc
and
in
add
dec
mov
xor
xor
mov
repz
test
aas
scas
jne
les
int
imul
lods
mov
repnz
pop
dec
pusha
xchg
xchg
xor
test
or
divb
xor
mov
xor
pop
mov
mov
jp
movsl
aas
mov
mov
cmp
jle
lcall
mov
push
jo
mov
pop
test
pusha
out
push
les
pop
ljmp
dec
mov
mov
mov
mov
mov
aad
hlt
aad
lahf
icebp
jg
test
jge
roll
mov
test
cwtl
js
adc
push
and
dec
push
or
icebp
lret
out
iret
out
cmc
xchg
mov
mov
adc
fldenv
rorb
xchg
gs
jns
mov
fildll
mov
movups
lret
sbb
bnd
ficoms
and
jg
and
inc
sub
push
mov
mov
shrl
aaa
lret
pop
not
out
add
xchg
aam
or
mov
inc
dec
mov
das
out
stos
andb
loope
xor
mov
pop
incl
stc
pop
aaa
xchg
xor
mov
xchg
in
adc
fwait
hlt
mov
mov
loop
lds
js
divb
lock
cmpsl
imul
adc
adcb
sub
test
cmpsb
sbb
sbb
js
js
jle
fcoms
dec
sti
cmpl
mov
pop
idivb
lods
mov
sbb
gs
cwtl
push
mov
aad
mov
dec
repnz
push
jg
lods
sub
fnstcw
fsubrl
rclb
daa
je
add
add
scas
push
xchg
dec
cmp
aad
inc
add
je
mov
cmpsl
es
and
fsave
fs
sub
nop
repnz
mov
movsl
jmp
add
call
lret
inc
mov
repnz
lods
mov
mov
mov
jo
in
fdivrl
lcall
inc
mov
push
pop
jle
into
sahf
outsb
daa
sub
sub
mov
inc
loope
lods
push
mov
add
repnz
aas
lods
mov
sbb
sbb
inc
push
imul
sarb
roll
sti
dec
jmp
popa
xor
adc
add
shlb
clc
inc
fucomi
sbb
and
adc
and
movsb
repnz
xchg
mov
fiaddl
jb
hlt
cli
test
cmp
xchg
or
sub
cld
mov
sub
das
hlt
pop
add
mov
dec
repnz
jmp
or
stc
aaa
mov
inc
xchg
jmp
in
inc
roll
sub
aam
jne
adc
pusha
mov
jecxz
ljmp
mov
roll
es
enter
bound
shlb
jnp
in
dec
addl
pop
daa
dec
adc
inc
imul
test
ret
rorl
or
add
mov
adc
rcr
lock
push
jge
add
imul
in
mov
and
push
mov
out
daa
jno
fistl
lods
add
pusha
or
popl
add
test
xchg
and
stos
xor
test
and
cli
adc
cmp
push
dec
imul
xor
shr
loope
ret
sbb
or
fs
sub
mov
das
xchg
push
aas
sbb
jbe
rcrl
testb
lods
or
and
mov
dec
sub
push
pop
mov
pusha
xor
push
fwait
cmp
ffree
inc
les
aaa
aad
out
jb
outsb
insb
mov
sbb
rcl
insb
jb
loop
mov
pop
cld
push
sub
inc
push
mov
xchg
mov
xor
inc
xchg
and
cmc
out
in
mull
int
xorb
pop
lds
xchg
add
xchg
add
mov
pusha
icebp
fistl
aaa
or
pop
fimull
shll
mov
push
lret
cmp
jecxz
mov
dec
push
pop
adc
into
repnz
ret
imul
out
repz
pop
jae
cs
mov
bound
xorb
dec
jg
jecxz
pusha
add
sbb
loopne
add
pusha
dec
sub
inc
jmp
inc
sbb
jle
pop
jle
fnstsw
movsl
xlat
pop
inc
jl
mov
aam
push
iret
cs
push
cmp
cmpsl
jbe
rcrb
call
ret
push
out
cmp
inc
lahf
dec
enter
stos
inc
cwtl
jns
outsb
xor
jge
mov
sahf
xor
inc
add
mov
outsb
jbe
adc
jne
mov
jge
cmc
loop
sti
dec
sarl
andb
add
imul
fisubs
std
cld
cli
popa
dec
and
pop
or
lret
imul
and
loopne
das
leave
arpl
mov
mov
enter
ljmp
xor
outsb
in
mov
fnstcw
lock
mov
or
or
fildll
fistl
sahf
pop
inc
ret
stos
outsb
pop
mov
push
pop
cmp
mov
repnz
mov
lcall
daa
push
sar
repnz
cli
in
cmp
out
in
jne
push
out
mov
push
js
mov
out
fdivrl
imul
xor
mov
lock
call
mov
add
xorb
subl
cld
push
std
cmp
pop
or
cmpsb
repnz
fisubrs
jp
rcr
imul
sub
fwait
or
mov
jmp
xchg
sbbl
inc
mov
dec
fldt
xor
clc
push
xchg
jle
stos
and
xor
lds
pop
xchg
adc
out
hlt
push
xchg
mov
repz
stc
lock
xor
sub
clc
push
adc
les
das
sub
push
idivl
inc
pusha
push
mov
push
andb
call
mov
imul
lahf
scas
jbe
jne
int3
int
pop
jg
and
fs
aas
sbb
cltd
xchg
shlb
xchg
pop
sub
push
out
cwtl
mov
push
rorb
mov
and
into
popa
xchg
imul
or
adc
pusha
sti
lock
dec
hlt
clc
adc
dec
jne
push
loopne
test
out
mov
rorb
or
aaa
loopne
and
gs
arpl
push
cmc
mov
adc
pop
add
in
pop
mov
ss
fdivl
adc
push
adc
fdivl
fadds
adc
daa
mov
push
movsl
cld
cmpsl
sbb
std
lock
sahf
test
xchg
arpl
ljmp
inc
cmp
loope
data16
popf
addb
aaa
lods
mov
xchg
xchg
jo
sub
jg
popa
ret
mov
imul
push
fsubs
testb
iret
jb
pop
sbb
aam
xor
push
movb
mov
push
je
hlt
mov
cmp
lock
add
ds
mov
cs
xchg
pop
test
adc
scas
jecxz
xor
push
les
push
sub
pop
call
movsb
repz
mov
lock
mov
pop
fs
inc
mov
loopne
mov
push
out
loopne
inc
stc
jno
dec
sbb
cld
add
push
mov
push
xchg
add
mov
pusha
insb
aas
insb
jbe
xor
sbb
and
ret
push
cmp
sbbb
pop
nop
jno
jecxz
lcall
jecxz
lcall
pop
sbb
sub
scas
sbb
mov
or
inc
dec
and
fxam
jbe
out
pop
pusha
cltd
xchg
adc
sub
pop
cmp
gs
mov
ss
xchg
fsubl
nop
insb
pushf
test
inc
cmc
push
xchg
pop
push
lahf
adc
out
add
bnd
sub
loope
fcom
lret
sbb
insb
jbe
mov
cmc
cmp
cmpsl
cmp
std
jo
es
nop
mov
mov
sub
lods
xchg
push
popa
jne
jle
mov
fdivrl
mul
xchg
push
and
sub
inc
lea
sti
sbb
imul
hlt
shrl
inc
sbb
fnstenv
adc
push
outsl
pop
xchg
enter
dec
dec
mov
push
push
push
dec
cltd
mov
mov
pop
mov
insb
out
push
sbb
les
or
sahf
pop
mov
and
aas
stc
shrb
inc
sbb
pop
lock
mov
push
mov
sti
add
mov
jecxz
pop
dec
stos
test
fs
pop
inc
dec
pusha
mov
test
fdivrs
mov
push
adc
loope
cmpsl
cmp
ret
cld
pop
cmp
mov
xchg
or
cmp
xchg
mov
or
out
pop
and
out
mov
cwtl
js
icebp
push
xchg
scas
fsubrl
dec
pop
popf
push
stos
cwtl
cmpsb
pop
loope
cmpsb
loop
in
imul
or
sti
jb
fwait
or
xor
cmp
adcl
pop
mov
lahf
ffree
sbb
adc
sub
clc
aad
pop
in
sete
xor
mov
mov
mov
popa
fnstcw
lock
loopne
adc
cmc
ret
iret
inc
cmp
stc
sbb
insb
rcrb
imul
ds
cmpsb
lahf
iret
aad
fcoms
adc
push
shlb
mov
sub
mov
jae
pop
fisubrs
and
mov
out
inc
mov
je
xor
jbe
push
js
cs
sub
mov
pop
sarb
mov
shrb
jnp
mov
xor
jp
xor
jmp
adc
lock
xchg
xorb
rolb
or
xor
imul
add
mov
xor
addr16
ds
inc
fdivs
xchg
sti
jle
xor
mov
imul
sub
sbb
and
mov
mov
movsb
ds
lret
xchg
fwait
cmp
cwtl
movsb
loope
lods
cwtl
pusha
push
adc
adc
out
jno
loopne
jl
inc
in
daa
cmpsl
xchg
cmp
addb
cs
and
lahf
xchg
push
push
pusha
sub
adc
iret
lods
and
mov
popa
mov
int
mov
dec
scas
test
rcr
aaa
pop
lods
aas
or
jle
jp
pop
pop
loopne
nop
stos
jns
std
cmc
xchg
mov
push
pop
loopne
sbb
or
cmp
stos
out
dec
jb
mov
aas
xchg
leave
inc
aad
or
jecxz
fld
xor
xchg
mov
cmp
xchg
mov
add
fnstenv
xchg
push
xor
jl
mov
cli
jno
nop
adc
inc
sub
cmp
arpl
push
sti
lds
std
sbb
jg
push
in
sbb
lods
sbb
cmc
cmp
lcall
add
lea
xor
mov
cmpsl
jl
sub
popa
test
sub
and
fwait
gs
inc
sbb
jmp
jmp
lods
push
xlat
icebp
xchg
cli
cmc
inc
xchg
push
jg
rol
popf
or
add
mov
or
jne
rorl
dec
out
xor
cmpsl
push
adcb
scas
push
lret
push
movsb
sbb
mov
stos
call
xor
push
push
lock
sbb
test
cmp
inc
push
lock
in
pop
mov
or
neg
jne
out
and
inc
jge
std
push
pop
mov
cld
fdivr
sbb
rolb
mov
xor
stc
test
or
cmp
aaa
rolb
idiv
dec
mov
ror
sbb
mov
ljmp
cmp
pushf
xlat
packsswb
lods
clc
cmp
ds
ja
unpcklps
xor
bswap
xchg
mov
lea
sub
mov
bound
sub
sti
inc
pop
das
cmp
cli
dec
xchg
mov
sbbb
stos
adc
aaa
cmp
stos
subb
cmp
lcall
into
cs
mov
lcall
inc
mov
andl
cmp
rorl
out
int3
adc
dec
mov
and
mov
je
nop
push
ja
fstpt
mov
adc
lret
out
data16
adc
jl
and
hlt
sarl
sub
pop
sub
in
loopne
sub
push
hlt
movsl
sub
dec
es
rolb
std
push
into
jbe
iret
push
out
jp
pop
jo
jmp
and
push
add
fcoml
xor
pusha
dec
mov
mov
inc
cmc
mov
dec
pop
cmp
aas
xchg
loope
adc
cld
testl
int3
fdiv
leave
jbe
js
adcb
sti
or
jp
cmp
sbb
popf
jne
add
daa
add
loope
subl
cmp
push
repz
pop
jb
and
xor
rol
rcr
push
mov
aas
hlt
push
pusha
mov
rcll
pop
fdivl
das
lahf
pusha
sbb
popa
popf
mov
mov
xchg
xchg
ror
dec
sub
pop
aam
nop
mov
push
xor
and
stc
fdivrs
hlt
inc
and
fidivl
insb
ret
outsl
pusha
pop
mov
add
xchg
fsts
jmp
loope
aas
and
dec
cmp
adc
iret
xchg
mov
pushf
lea
xor
pop
out
push
adc
sub
out
mov
bound
dec
loope
popf
rolb
jno
jns
mov
ret
popl
add
jne
xchg
lret
nopl
popf
push
push
fstpl
test
aaa
fdivrl
mov
add
add
or
sbb
repz
shlb
and
mov
jnp
enter
outsb
sbb
lods
fnsave
adc
mov
stos
fmuls
jle
mov
add
inc
adc
lret
dec
adc
and
xchg
ret
aas
paddsw
ret
icebp
imul
clc
pop
xchg
das
sbb
jge
mov
dec
negb
mov
scas
jne
jb
out
sub
mov
dec
adc
add
push
in
adc
les
cmp
mov
cmp
stos
testl
cld
push
data16
mov
lds
pop
je
pusha
loope
testb
inc
in
lcall
xchg
das
lods
and
fmuls
mov
push
lahf
or
push
pushf
and
pop
sub
lea
ret
mov
ds
shrb
xor
adc
xchg
ja
outsl
sahf
xchg
cli
xor
enter
and
sbb
lods
jmp
popa
mov
inc
jae
movsb
je
mov
pop
movsb
sbb
sub
lods
dec
adc
outsb
pop
add
cwtl
ds
cmpsl
scas
mov
jle
mov
nop
test
xchg
fistpl
mov
add
pop
repz
mov
cs
mov
add
mov
pop
cld
lahf
sbb
jmp
mov
sbb
mov
pop
mov
mov
into
fistl
pop
lahf
and
test
cwtl
fstl
outsb
mov
jb
adc
subb
fnsave
mov
aam
pusha
outsl
sub
lret
adc
or
mov
or
sub
or
iret
adc
bound
or
adc
pop
jecxz
jecxz
jae
xlat
add
inc
add
mov
mov
push
leave
adcb
outsl
nop
push
lock
cmpsb
sbbl
xchg
out
out
sub
lret
pusha
fistps
lret
and
pop
lret
and
dec
daa
inc
xorl
pop
lods
add
outsl
jnp
popf
mov
adc
into
jecxz
inc
add
pop
shrl
add
push
aaa
inc
fisubrl
or
add
cmp
push
dec
scas
mov
fildl
cltd
mov
xorl
jno
cmc
outsb
loop
jl
les
inc
fildl
pusha
cmp
xchg
sarb
out
and
pop
xchg
cmp
adc
xchg
stc
jmp
adc
shlb
mov
push
push
pop
rcr
jle
xchg
fcmovnbe
or
out
sbb
cwtl
add
shrd
pusha
push
pop
jns
push
push
inc
out
dec
inc
inc
scas
push
dec
xchg
aam
adc
fmul
xchg
push
jno
adc
pop
jecxz
dec
and
aam
insb
mov
pushf
sbb
mov
or
cmc
mov
aaa
and
mov
mov
inc
es
and
test
in
and
outsb
stc
test
arpl
jg
jp
xor
stos
mov
push
clc
and
mov
jo
into
lcall
dec
js
push
mov
jecxz
pop
fmull
inc
jp
mov
xchg
sub
icebp
adcl
int
adc
inc
push
hlt
add
xor
xor
pop
xor
lods
sub
push
mov
fsubrl
hlt
ljmp
daa
push
lret
mov
fstps
pop
scas
cmp
aam
clc
in
xchg
lods
adc
cli
aad
fs
xor
pop
lret
cli
xchg
sbb
jp
testl
faddl
xchg
pop
inc
sub
loopne
inc
pop
jbe
ja
xchg
out
inc
lret
sti
pushf
popf
sub
mov
sub
std
in
mov
jb
idivl
pusha
jnp
and
int
inc
repnz
addr16
dec
movl
cwtl
gs
cmp
call
incl
js
xor
xor
dec
outsl
mov
lods
insl
adc
jns
jb
and
lret
sub
rcrl
mov
test
dec
ud1
push
sub
sti
ficoml
stc
int
xor
in
loop
outsb
scas
test
jg
push
and
dec
mov
int
iret
jecxz
fwait
les
ret
cwtl
rclb
loop
insl
adc
add
dec
or
ret
sti
movsb
lret
jbe
adc
inc
jl
mov
jae
cld
mov
dec
mov
and
ret
pop
jg
mov
test
lret
imul
ss
adc
push
mov
pop
pop
dec
push
jbe
cwtl
pop
lcall
leave
movsb
jnp
adc
mov
es
cmpsb
mov
out
dec
ret
push
loope
and
cmp
mov
inc
inc
add
mov
jo
nop
test
cmp
mov
push
loopne
aas
sti
fs
inc
daa
add
inc
cmpsb
fyl2xp1
mov
and
out
mov
stos
hlt
push
xchg
inc
fidivs
pop
mov
scas
mov
cmp
test
add
adc
pop
mov
push
pop
and
clc
in
cmp
sbb
jns
mov
cltd
cmp
fdivp
lahf
into
js
pushf
mov
cmp
imul
push
scas
lods
pop
pop
push
inc
pop
xor
rcll
dec
push
push
fstpl
adc
sub
pushf
jp
das
mov
loop
inc
mov
mov
jo
add
inc
lock
pop
sub
mov
pop
outsb
push
popf
sahf
mov
mov
cmp
sub
mov
movsl
call
les
inc
stos
pop
or
jbe
fisttpll
xor
dec
sahf
sbb
nop
in
ljmp
test
mov
daa
mov
icebp
xchg
ja
jne
cs
cmp
pop
push
mov
inc
add
fsts
pop
mov
sub
mov
mov
mov
fisttpll
aaa
push
clc
jp
push
jmp
int3
ss
jmp
int3
psrld
loopne
cmp
mov
cmpsb
cmp
jecxz
and
test
sti
cmp
mov
push
sub
hlt
mulb
data16
cli
mov
add
xlat
pop
mov
andl
cs
dec
int
jb
lods
cmpsb
sbb
cmp
out
or
outsb
mov
out
jmp
inc
sbb
inc
leave
push
scas
cmp
push
jecxz
xchg
cmp
lods
or
inc
inc
icebp
lahf
jp
jns
scas
popa
icebp
pop
push
adc
negl
test
les
fildl
push
mov
nop
pop
mov
push
xchg
pop
jns
rcll
lods
jb
aas
inc
loope
jge
jns
and
shll
mov
sub
mov
push
dec
push
inc
cli
add
dec
rorb
imul
mov
ljmp
mov
lods
daa
push
fwait
ret
and
out
out
insb
out
test
mov
xchg
mov
xor
xlat
mov
lods
scas
jne
in
addr16
scas
aaa
push
push
scas
push
push
out
fldcw
mov
lcall
addr16
inc
cmc
clc
insb
jmp
movsb
into
out
lock
push
jl
jnp
lea
ljmp
mov
arpl
or
cmp
imul
adc
dec
push
pop
sbb
xchg
stos
sbb
fstps
adc
inc
mov
ret
subb
push
gs
hlt
pop
out
sbb
inc
mov
or
jecxz
dec
call
xchg
cld
shrl
or
jno
pop
stc
mulb
pop
jae
push
test
sub
clc
lea
aam
xor
or
rorl
inc
out
cmp
fdivs
jno
lock
xchg
or
sub
scas
pop
mov
jl
cmp
fnstcw
sbb
sbb
lods
jl
mov
dec
daa
cwtl
mov
cs
cmp
cmp
mov
std
mov
jl
out
lock
push
inc
jmp
sahf
pop
sbb
mov
iret
rcrl
test
xor
and
negb
mov
xchg
dec
cmc
push
je
lods
jnp
adc
mov
push
imul
push
cmp
jecxz
and
enter
aam
xchg
cmpxchg
push
xchg
scas
fwait
xchg
subb
repz
dec
int3
cmp
jg
aad
lret
dec
out
jnp
lahf
add
imul
jno
lods
cwtl
push
mov
push
push
inc
xchg
fsub
adc
adc
imul
xor
cmp
insl
imul
sbb
lock
cmp
movsl
insl
rorb
sub
sbb
xchg
push
enter
cmpsl
push
sbb
jae
mov
push
iret
cld
xor
jns
fptan
jp
adc
out
gs
sbb
lret
and
mov
rcrb
and
scas
or
adc
movsl
dec
or
mov
call
pop
sbb
jbe
in
xchg
push
gs
add
and
cmp
mov
in
int
mov
add
ret
lret
jecxz
fisubrl
fstl
fidivs
jne
and
adc
adc
mov
xchg
push
inc
push
jge
std
dec
push
xor
lahf
push
adc
and
xlat
mov
mov
cs
arpl
add
sbb
stos
fldl
sub
xor
mov
aam
bnd
or
aad
movsl
and
inc
test
mov
loop
mov
dec
jno
icebp
push
cld
pop
inc
mov
sbb
inc
xor
rolb
out
flds
gs
out
mov
adc
xchg
push
lcall
inc
cmc
jge
loopne
filds
push
in
out
lea
xor
aam
xchg
and
ret
cmp
mov
imul
xor
mov
fcomps
sbb
fidivl
mov
xor
fcmovb
push
and
xor
negb
es
aad
int3
or
cs
cmp
push
cmp
inc
adc
sbb
js
push
out
sahf
xchg
mov
sarl
clc
ja
or
es
cld
jne
lret
and
sbb
mov
outsl
aaa
lods
pop
jmp
inc
out
js
jmp
jo
mov
mov
test
jge
in
jge
inc
xchg
push
push
pop
cmpsb
and
adcl
pop
adc
mov
addr16
outsl
and
loope
mov
mov
shrb
das
xchg
pop
daa
int3
mov
mov
push
aam
rcl
adc
aam
clc
clc
sub
cmp
cmp
ja
lock
mov
pop
ljmp
push
jle
mov
lcall
stos
inc
pop
sbb
jl
sahf
leave
ret
and
adc
aaa
cmp
pop
enter
add
clc
cmovae
xchg
stos
addr16
mov
adc
xchg
sub
push
cs
push
inc
xchg
arpl
push
pop
mov
inc
out
sarb
jns
push
test
sbb
xchg
mov
shl
ror
adc
cmp
push
cld
loop
add
sti
pop
or
push
xor
fisubrs
adc
cmp
inc
daa
imul
daa
adc
mov
xchg
dec
push
mov
xchg
pop
cmp
je
repz
into
leave
ret
and
push
pop
movsb
shl
js
xor
mov
mov
ds
in
out
push
out
pop
mov
xor
cmc
sub
mov
xor
jne
imul
and
les
add
mov
addb
jmp
lcall
call
js
push
sbb
add
pusha
ljmp
jmp
sbb
gs
addl
rcl
inc
incl
fldl
pop
jge
mov
sub
mov
ljmp
iret
mov
mov
or
leave
adcl
cmp
pop
adcb
pop
lods
jb
arpl
jbe
lods
bound
push
stos
aas
pop
push
pop
and
jl
inc
mov
push
ret
sbb
fnstcw
pop
xor
jnp
fstl
test
push
in
or
sbb
scas
data16
fcmovnbe
xchg
xchg
in
inc
push
xor
mov
es
in
cmp
int3
mov
and
pop
and
push
je
push
test
iret
pop
loopne
je
or
mov
shrb
out
testl
sub
mov
add
mov
mov
in
jl
push
jo
scas
xor
adc
sahf
mov
cmp
adc
pop
shll
hlt
mov
in
ljmp
mov
out
and
popa
fwait
lea
add
js
cld
cli
dec
jb
rorb
xchg
sub
jbe
dec
pop
push
jno
and
sbb
testb
add
pop
xchg
aas
cmp
loopne
fsts
push
sub
dec
fisttpl
mov
sub
adc
imul
ret
cmpsb
sbb
dec
jo
lret
lock
cmp
shrl
in
in
incb
fcoml
gs
push
mov
je
jg
imul
scas
cmpsl
in
adc
mov
pop
adc
testl
daa
sbb
jne
jmp
sub
icebp
ret
in
pop
mov
inc
jae
cltd
lret
pop
cmp
cmc
jl
sub
repz
ret
imul
sub
mov
and
ss
cmp
movsl
mov
jno
and
or
nop
jns
jmp
mov
repz
dec
mov
mov
stc
cmpsb
mov
cmp
sti
loopne
jge
js
push
or
scas
std
lds
jo
pop
cltd
sub
mov
inc
fadd
cltd
mov
inc
lds
sub
pusha
or
and
out
sbb
push
cmp
push
xor
jno
adc
or
xor
xchg
pushf
push
jp
xchg
inc
clc
loop
add
jle
les
stc
data16
mov
stos
out
hlt
push
out
add
xor
or
cmp
pop
jno
or
insl
ret
decb
mov
enter
add
out
xchg
imul
and
out
mov
ret
out
mov
jno
sbb
aam
in
jo
shl
push
push
fprem1
jns
cwtl
sub
test
mov
add
mov
sbb
push
and
lods
push
test
std
pop
enter
or
lds
cmp
mov
insb
out
push
xchg
fwait
daa
repz
clc
xlat
cmp
mov
sub
repnz
outsl
ss
cwtl
push
add
push
aas
mov
or
inc
inc
insb
lret
les
out
inc
sub
mov
sahf
rorl
mov
lahf
sar
fcmovu
mov
popa
sahf
push
push
movsb
or
cmpsl
add
inc
loopne
push
test
addl
out
subb
cmp
push
in
aad
lods
mov
pusha
xchg
mov
and
lahf
lods
idivl
out
mov
outsb
push
jl
adc
sarb
cmp
test
xor
outsl
mov
push
mov
push
jecxz
ret
repnz
adc
out
jecxz
fsubrs
push
out
icebp
scas
xlat
daa
or
in
inc
add
enter
bound
scas
mov
jbe
pop
sub
pop
ret
and
int
xor
pop
sub
sti
mov
cmp
in
ret
adc
mov
negb
mov
jecxz
jns
loopne
sahf
mov
enter
repnz
outsl
cmp
into
xchg
cmp
incb
jl
mov
adc
sahf
cmp
push
adc
pop
subb
mov
mov
sub
pop
aaa
push
mov
xchg
es
sahf
pop
gs
add
popa
hlt
xchg
es
pushf
loope
add
xchg
push
mov
cmc
repnz
je
xor
mov
adc
out
enter
movsb
pop
loopne
or
rcl
xchg
rcl
sbb
sahf
cwtl
loop
and
in
sbb
stc
pop
aaa
pop
jge
or
mov
test
and
xor
mov
sbbl
rcll
ljmp
ret
cmp
push
inc
bound
add
int
push
xchg
pop
ja
fcmovnu
push
xchg
out
sub
imulb
or
or
mov
or
mov
sub
cli
mov
fs
jne
fisubs
cmp
add
loope
fistps
mov
decb
cmp
cmp
pushf
jne
xor
jg
in
stos
stc
push
cmpsb
pop
int
hlt
mov
mov
imul
jae
dec
cs
mov
add
push
mov
xchg
dec
pop
idivb
push
xchg
cs
sbb
jecxz
mov
dec
pop
cld
lret
jl
mov
fcoms
sti
jo
mov
hlt
dec
cmp
ficompl
sbb
dec
add
adc
lock
mov
mov
jnp
popa
xorb
inc
stos
adc
push
sub
and
ljmp
and
inc
cmp
rcrl
lret
inc
pop
adc
add
xchg
sbb
mov
iret
iret
pop
mov
mov
add
inc
inc
cmpsl
scas
cltd
cmp
jnp
pop
out
push
mov
in
sbb
lea
es
sar
arpl
pop
pop
shlb
hlt
leave
fwait
mov
jg
and
ret
out
movsl
mov
xorl
add
fiadds
movsb
loope
dec
cli
jne
xor
mov
stos
push
imul
mov
in
mov
sub
daa
fcoml
push
xor
addr16
movsl
roll
xchg
jns
cmpsb
loope
push
pop
mov
lcall
xchg
mov
sub
adc
cltd
cmp
outsb
jg
ljmp
movsl
cmc
outsl
pop
aas
and
sbb
ljmp
adc
sub
sbb
xor
fisttpl
push
jle
stos
dec
xchg
ss
adc
roll
rcl
sarl
rolb
xchg
cwtl
push
lret
das
andl
mov
adc
sbb
inc
lods
or
mov
cltd
xor
data16
dec
enter
repz
in
ss
rcl
mov
fs
pop
inc
and
jecxz
loop
mov
int3
loop
popf
test
sub
pop
xchg
scas
dec
aam
out
aas
mov
inc
mov
fnstsw
inc
or
xchg
push
mov
fcomps
xchg
leave
dec
mov
jle
idiv
movsl
cmp
adc
xchg
faddp
jp
jecxz
sub
data16
mov
sub
mov
movsb
mov
scas
dec
and
dec
cwtl
dec
and
inc
enter
test
jmp
pop
aam
mov
mov
icebp
outsb
mov
jb
pop
pop
aad
mov
outsl
fisttpl
sbb
mov
inc
mov
inc
jmp
lock
inc
std
cmp
stos
pop
aam
les
rclb
sub
aam
inc
xchg
ret
fldenv
add
sub
jmp
gs
repnz
adc
jp
loop
fsts
hlt
mov
mov
jb
add
jne
ljmp
gs
lea
jmp
add
push
std
std
mov
outsb
add
imul
mov
mov
xor
dec
push
xor
mov
sub
stc
adc
jmp
jne
icebp
addr16
and
inc
pop
js
xchg
hlt
push
xchg
mov
mov
sbb
lahf
sub
xorb
or
jmp
aam
sbb
inc
sbb
push
ss
pop
ja
mov
lret
inc
xchg
mov
loope
sti
and
pusha
pop
push
push
lods
aam
sub
cmp
clc
cwtl
cmp
in
int
xor
aaa
mov
bnd
setnp
xchg
std
in
xchg
out
push
cmp
loop
outsb
clc
mov
mov
addr16
icebp
adc
and
jbe
jne
mov
pop
sahf
xchg
lods
adc
shlb
shl
out
ret
imul
bound
scas
sbb
add
jge
mov
push
addb
leave
pushf
divb
imul
inc
dec
jns
pop
jns
push
mov
rcrl
ds
arpl
push
jae
jno
jne
adc
pop
add
xor
add
sbb
ret
sub
in
and
icebp
rol
imul
xor
pop
mov
jno
jmp
enterw
sub
cmpsb
bound
test
pop
push
inc
nop
mov
pop
cmc
popa
in
fwait
bound
pusha
pop
pop
in
loope
or
cltd
cli
sub
or
mov
scas
inc
inc
jecxz
xor
inc
push
xchg
jmp
cmp
lahf
xchg
stos
adc
xor
xor
mov
pusha
adc
jg
cmp
jp,pt
cmc
mov
inc
mov
dec
movsl
push
cmc
jle
jae
push
push
das
mov
test
push
cmp
push
pusha
jg
mov
push
or
mov
dec
dec
mov
dec
xlat
mov
leave
sbb
xor
pop
push
test
repnz
add
and
xchg
push
push
jg
jl
test
stos
xor
mov
daa
scas
add
aas
arpl
daa
mov
mov
mov
push
jmp
pop
sbb
std
rol
sbb
pop
xchg
js
mov
xchg
inc
adc
push
xchg
xor
inc
and
into
dec
push
daa
xchg
ret
test
inc
dec
dec
inc
dec
xchg
mov
xor
xchg
mov
sbbl
xlat
mov
gs
js
dec
dec
fidivrs
gs
pop
jl
jmp
push
int3
cmp
mov
test
xchg
add
mov
scas
push
sbb
out
ljmp
out
cmpsb
inc
jle
int
and
int
dec
shlb
xchg
xor
cmp
int3
sbb
xchg
jmp
xchg
leave
mov
out
in
xchg
fidivrl
sbb
or
fwait
orl
rclb
mov
enter
jmp
outsb
and
dec
fidivrs
test
roll
popf
cmp
call
adc
lods
sbb
adc
or
shrl
dec
mov
fistpl
dec
pop
int
imul
xchg
xchg
out
adc
xchg
mov
jno
aas
dec
and
es
iret
xor
jb
jl
dec
pusha
out
out
icebp
sbb
test
xchg
dec
pop
je
cmp
pop
push
push
xlat
rolb
ja
inc
ror
pushf
inc
outsb
mov
dec
test
lea
cmc
mov
adc
and
or
adc
in
jg
push
mov
jg
pop
push
xchg
mov
test
cltd
jmp
mov
cmp
lcall
jno
out
adc
test
push
inc
sbb
sub
sub
mov
fs
mov
push
lret
inc
lea
std
sbb
es
sub
pop
dec
ret
dec
mov
mov
and
les
mov
xor
cmp
ljmp
outsb
mov
sub
cmp
adc
and
xchg
fldcw
fs
mov
jno
mov
negl
jp
pop
mov
dec
or
mov
xchg
dec
xor
xlat
dec
mov
ss
mov
mov
adc
ret
aas
notl
andl
mov
and
or
popf
xor
adc
int
pusha
sbb
mov
or
inc
das
jb
cmp
mov
pop
not
filds
dec
call
mov
push
or
adc
adc
sbb
mov
mov
xor
push
outsl
cmp
push
imul
mov
and
sub
lods
ficompl
in
roll
fildl
xchg
pop
push
mov
cmpsl
rclb
dec
xchg
cld
test
push
aam
sbb
push
test
lea
xlat
and
jne
insb
mov
outsb
out
fldt
and
scas
pop
jmp
pop
xchg
push
cwtl
enter
sbb
mov
stos
xorl
pop
xor
xlat
xor
mov
cmp
das
data16
or
inc
add
mov
fisttps
test
lock
in
sub
jle
sub
sbb
andb
flds
data16
insl
or
stc
inc
xchg
mov
xchg
pop
repz
das
dec
sub
and
and
jno
and
mov
jno
mov
add
lret
cmp
loopne
jecxz
lret
jle
out
and
xor
lret
sub
lods
in
dec
inc
mov
fdivp
shlb
xor
ja
and
adc
fwait
outsb
dec
jb
cltd
ljmp
cld
lahf
ljmp
pop
pushf
and
dec
add
dec
lahf
cmpsl
jg
or
out
jle
loopne
inc
xor
outsb
jnp
dec
xorl
add
adc
push
cmp
pop
repz
lahf
mov
adc
aad
mov
test
xchg
fistps
clc
sbb
mov
mov
jae
movsl
aad
jp
xchg
and
jno
and
dec
mov
sbb
rcrl
xchg
xor
sbb
insb
mov
fldl2t
out
add
jge
and
rorl
ja
jo
and
jnp
iret
clc
add
dec
leave
jb
or
inc
test
les
pop
xchg
pop
xor
imul
mov
addr16
xor
jge
inc
mov
imul
xor
hlt
pop
lock
pop
cmp
and
and
stos
mov
pop
xchg
popf
push
subl
add
out
ljmp
je
clc
arpl
xchg
decl
lahf
push
dec
mov
nop
dec
jg
lahf
and
mov
lock
or
xchg
loopne
pop
outsb
pop
push
pop
dec
repnz
fucomi
cmp
lods
push
xor
push
out
jg
vdivpd
movsb
push
js
insl
pushf
lahf
loop
xchg
mov
icebp
jp
mov
lea
aaa
cmp
insb
out
fstl
pop
pushl
sub
addr16
inc
inc
insb
jl
cmc
lahf
mov
call
mov
sti
outsw
jp
outsl
push
add
call
nop
pop
out
mov
pop
push
mov
scas
push
js
stc
jmp
xchg
icebp
mov
mov
fldl
int
and
xor
lods
ret
repnz
out
fmull
inc
hlt
repz
shlb
fdivr
lods
push
divl
xchg
lods
jp
popf
movsl
lea
sarb
cmp
sub
xor
rcll
inc
cmp
arpl
push
add
push
imul
jmp
mov
clc
mov
push
mov
shlb
xor
push
out
jle
xchg
cli
jle
push
out
add
jo
test
cmp
push
in
sub
mov
mov
mov
sub
int3
inc
lea
ficoms
leave
jmp
push
aam
or
jp
jl
jns
mulb
jne
into
sbb
enter
lret
xchg
shll
in
or
insb
dec
adc
loope
mov
stc
imul
out
stos
xchg
icebp
lock
rorb
jmp
jo
lods
imul
xor
cmpsb
dec
ret
enter
pop
rclb
push
mov
or
add
pop
repz
fs
fsubrs
inc
xchg
fnstsw
in
ljmp
enter
stos
cwtl
icebp
lret
cmp
mov
stos
xchg
or
or
inc
outsb
decl
es
xchg
sub
icebp
add
mov
push
pop
xchg
mov
rorl
pushf
push
sbb
insl
sbb
dec
daa
xor
sahf
push
xor
and
insb
mov
cmpsb
and
scas
xor
inc
fwait
loopw
outsl
leave
or
xor
or
push
std
ljmp
loop
iret
in
sahf
ljmp
gs
dec
sbb
push
pop
gs
pop
xor
and
fidivrs
cltd
adc
mov
cmpsb
inc
aas
inc
fs
mov
mov
repnz
adc
mov
shll
mov
daa
cld
push
lret
or
out
jae
mov
lcall
gs
shlb
xchg
popf
subb
pop
loop
into
xchg
roll
jo
fmuls
dec
scas
fisubrl
inc
into
daa
cs
pop
mov
cli
sub
cs
outsl
jg
dec
lods
testl
mov
push
pop
ret
in
jg
cmp
mov
mov
pop
sbb
push
sbb
mov
mov
cli
icebp
jbe
mov
outsl
sbb
push
dec
xor
mov
lods
mov
out
add
sub
pop
lds
popf
jnp
addl
jle
aas
jno
or
push
sahf
jmp
adc
and
imul
pop
fwait
push
adc
jne
jmp
push
xor
ficoml
test
sbb
sbb
dec
andl
cli
push
cmp
jae
xor
push
sbb
scas
sbb
mov
jnp
mov
es
sbbb
mov
jmp
mov
jg
adc
shrb
aaa
and
push
mov
and
bound
lret
aam
pop
sub
int3
pop
hlt
out
data16
dec
or
jecxz
je
fstps
aaa
pop
das
in
imul
xchg
dec
pusha
sbb
mov
int
shll
ret
stos
mov
mov
fcom
push
xchg
jge
int3
or
adc
xchg
inc
cld
jb
jae
push
psraw
pop
shlb
test
mov
xchg
lods
lock
or
insb
push
fcomps
into
cli
push
push
add
sbb
mov
pop
sahf
movl
jp
adc
hlt
cmpsb
jbe
xorl
fs
pop
sub
aad
pop
fisttpll
push
dec
jne
push
or
or
imul
mov
fldt
clc
loope
in
sbb
call
lods
jbe
cld
sbb
hlt
push
push
push
sahf
jno
ljmp
stos
stc
fsubl
mov
ret
popa
test
and
jge
bound
insb
xchg
xor
and
xor
loop
popf
out
enter
js
add
jge
filds
cmp
das
pop
and
add
add
lock
cmp
in
push
vpshufd
jg
inc
hlt
subl
jo
in
loope
shll
addr16
les
call
mov
mov
out
adcl
lcall
out
mov
ja
adc
or
lods
xchg
jmp
stos
push
enter
sbb
rcrb
int3
gs
movntq
inc
imul
cltd
push
xchg
cld
inc
xor
pop
lods
insb
fldl2e
movsl
or
cmp
addl
sahf
xchg
push
pusha
push
lahf
mov
xchg
sti
mov
jne
decl
loope
mov
mov
fisttpl
xlat
xchg
cli
adcb
ss
loopne
pop
imul
pop
mov
mov
jne
xchg
aam
mov
and
clc
sub
ret
add
out
and
sub
jp
cld
data16
jecxz
mov
xchg
mull
imulb
sbb
and
cli
dec
faddl
push
jns
shl
js
or
fiaddl
insl
inc
popf
push
lea
pop
xchg
jnp,pt
iret
sub
jge
clc
mov
mov
popl
cmp
ret
fcoms
les
mov
sub
inc
addr16
bound
jb
mov
mov
xchg
rcr
repz
add
ljmp
lret
add
push
and
pop
adc
jmp
add
cmp
add
daa
mov
push
xchg
in
int
fnstsw
jbe
inc
fistps
sub
fs
xchg
xchg
xchg
lds
test
mov
adc
ficoml
jno
lahf
or
or
stos
loope
xchg
pop
out
mov
xchg
fiadds
sub
loopne
pop
mov
xor
jae
or
subl
jns
xlat
fdivs
dec
daa
xor
out
pop
inc
lock
push
inc
cli
daa
sbb
jns
rorb
add
mov
cmp
sbb
push
sar
dec
idivl
push
mov
mov
sub
xor
shrl
aas
stos
lea
jnp
test
xlat
int
mov
not
sbb
inc
pop
xchg
dec
add
jae
pop
js
jecxz
in
mov
pop
pusha
push
and
inc
add
add
ret
bound
lea
cli
lahf
in
mov
clc
iret
jb
sub
pop
sub
test
mov
ffreep
sbb
push
hlt
lret
mov
in
insb
sub
or
inc
jns
push
and
subl
dec
cmc
mov
inc
mov
mov
push
and
lahf
sbb
cld
dec
pusha
or
std
lahf
imul
ljmp
cmp
std
and
iret
mov
mov
push
ss
jns
scas
sahf
lods
lea
idiv
scas
pop
movsl
sarl
daa
add
cmp
jbe
testl
mov
add
lods
pop
jle
mov
in
mov
mov
sbb
cmpl
lret
jg
out
cmp
imul
test
adc
xor
movsl
cmp
pusha
call
in
stos
add
xchg
jnp
fucomi
aas
add
mov
lock
out
sbb
fsub
repz
jmp
repnz
xchg
xor
daa
add
mov
jnp
popa
pop
cli
fsubrs
push
mov
pop
push
jge
in
shlb
enter
xor
scas
sar
outsb
aad
imulb
pop
pop
or
push
mov
insl
insb
loop
xor
xor
lods
mov
out
mov
sahf
enter
fidivs
int
lahf
es
sbb
mov
test
sahf
or
adc
mov
lahf
mov
or
xchg
xor
clc
xlat
push
adc
insb
inc
xor
dec
mov
push
cmp
lahf
jge
sub
aas
adc
push
mov
cmp
lods
and
shlb
test
loope
and
xchg
popf
push
add
das
mov
push
nop
sbb
out
xlat
ss
lahf
mov
push
pop
xor
jnp
in
fdivp
jg
xchg
adc
int
push
dec
mov
inc
push
or
inc
dec
pop
das
scas
popa
arpl
mov
pop
xor
sti
xor
cmp
dec
cmpl
fwait
lods
shrl
sub
mov
jb
sbb
pop
push
push
xor
jge
xor
xchg
mov
lea
aas
xchg
push
nop
ljmp
adc
aam
xchg
mov
aam
test
mov
cmpsb
shll
movsl
icebp
mov
jbe
xor
lret
addr16
stos
repnz
xchg
nop
leave
xor
and
sbb
shll
jns
movsb
and
cmpsb
mov
cmpl
add
xchg
jmp
cmp
in
mov
pushf
cmp
sahf
int3
or
dec
push
add
xor
in
jecxz
negb
cs
mov
cwtl
vmwrite
aam
scas
ret
push
fstl
pop
repnz
hlt
pop
pop
pop
cld
movsl
jne
push
pop
adc
dec
pop
mov
or
out
lods
cmp
sub
je
add
mov
or
pop
in
mov
or
ja
jne
lahf
loopne
dec
dec
mov
imul
cmp
test
ja
mov
call
daa
or
sub
and
xlat
xchg
and
adc
div
jmp
loopne
cmp
sbb
cld
ss
xchg
popa
dec
enter
into
and
jae
xchg
test
popa
sbb
es
mov
sarl
sbb
sbb
xor
jns
arpl
xor
pop
fwait
inc
test
jb
mov
outsl
pop
lea
lret
ja
jmp
lea
call
sbb
cmp
mov
movsb
fisubl
xchg
rcrb
bound
pushf
xor
shrl
das
inc
cmp
add
sbb
lcall
adc
out
es
sub
les
in
adc
fdiv
mov
mov
mov
xlat
push
mov
cmp
hlt
aaa
pop
shlb
pop
or
xor
fstps
xor
mov
cwtl
out
push
mov
popf
leave
in
jae
repnz
cltd
aam
cmpsl
and
fldcw
add
fwait
das
out
and
and
insb
mov
inc
jge
test
push
mov
adc
mov
fcmovnbe
adc
adc
or
test
sub
and
int
jl
jge
cmp
and
sbb
dec
mov
lret
and
fadd
or
outsl
jae
stos
cmpsl
jmp
scas
inc
ja
out
stos
mov
test
xchg
fs
mov
xor
test
sub
jo
jmp
adcb
lods
fistl
jae
push
lret
xchg
lcall
mov
sbb
inc
roll
mov
push
mov
push
leave
inc
jne
idivb
int3
mov
fsubrs
mov
pop
sub
fsubrl
push
mov
repz
pop
ljmp
pop
mov
adc
aaa
test
dec
test
mov
addl
movsl
stc
cmp
shr
adc
loope
xchg
mov
out
loop
or
xor
mov
fucomi
dec
outsb
lea
popf
pop
roll
mov
mov
cs
mov
scas
mov
jecxz
fs
mov
or
aaa
inc
jbe
pop
dec
in
push
daa
in
push
mov
or
inc
bound
adc
shlb
fildll
imul
xchg
pop
in
ret
pop
sbb
fwait
pop
scas
mov
in
adc
rcll
pop
into
cmp
pop
jmp
test
lea
inc
jbe
popf
jecxz
lahf
mov
cmp
fs
das
jo
cmpsb
dec
inc
les
push
or
sbb
xor
jne
stc
std
cmp
insl
xor
and
cld
dec
popa
imul
lahf
movsl
inc
mov
popf
or
push
xor
test
popa
leave
and
cmc
jecxz
ljmp
dec
inc
mov
cmc
mov
daa
out
iret
dec
iret
push
cmp
scas
lods
sar
cmpsb
cli
lds
sbb
sahf
movsl
or
mov
je
push
inc
mov
and
jns
or
or
nop
xchg
sub
cltd
adc
ret
out
lahf
mov
outsb
cld
les
dec
jg
jmp
adc
push
lahf
sub
sub
rol
xlat
flds
sbbl
mov
in
and
addr16
and
sahf
sti
lret
roll
outsb
test
add
loopne
push
inc
movsb
push
sbb
es
lahf
adc
inc
cmp
push
repz
sbb
stc
cld
fs
pushl
fistpll
pop
ss
jecxz
cmp
jb
or
sbb
dec
jne
ss
push
sub
sub
ficoms
xor
or
adc
or
mov
repz
mov
shrl
pop
sub
xor
unpckhps
testl
push
cmpsb
lret
fs
sub
xor
or
mov
jmp
in
mov
faddl
mov
popa
push
bnd
lods
adc
lret
movsl
cmpsb
mov
sbb
ds
sub
mov
aaa
jbe
mov
repnz
mov
xchg
ss
fwait
pop
mov
roll
sbb
pop
leave
outsl
inc
into
push
inc
and
cmpsl
divb
cmp
and
test
pop
sbb
daa
mov
cld
loop
ds
jb
push
lods
adc
mov
sub
add
push
mov
or
clc
mov
lahf
cmpb
cs
outsl
adc
lcall
jmp
or
add
xchg
inc
jbe
jecxz
sbb
dec
lea
icebp
inc
xchg
sbb
data16
mov
xchg
inc
and
int
test
outsl
jne
cmpsb
cli
aam
or
add
pop
fsubr
add
dec
sbb
outsl
scas
add
popa
push
sub
frstor
jae
and
dec
ss
sub
xor
xor
adc
jle
dec
movsb
push
pop
test
test
xchg
pop
pushf
jno
sbb
icebp
inc
dec
mov
jne
ljmp
jmp
mov
inc
imul
mov
or
inc
or
sbb
aad
insb
sub
push
into
mov
cmpsb
leave
lret
xchg
out
inc
or
pop
test
mov
jecxz
adc
inc
xor
pop
mov
sbb
sub
es
inc
popf
inc
mov
cli
in
or
cmp
movsb
jmp
cmp
or
lods
dec
or
push
int3
insl
sbb
or
jp
add
sub
push
ljmp
or
dec
xor
xlat
insb
cmpsb
cmp
and
sub
mov
xor
addr16
add
jl
xchg
ja
paddusw
push
inc
mov
pop
lcall
cmp
sub
ret
or
jmp
jl
mov
mov
sbb
int3
addr16
cwtl
push
push
icebp
adc
cmp
imul
lahf
dec
mov
cmc
insl
packuswb
push
rcrl
add
and
inc
icebp
mov
sbb
jb
push
xchg
adc
shlb
inc
jmp
mulb
cwtl
add
pop
ds
and
enter
xchg
and
sbb
jnp
popa
enter
pop
mov
push
add
ja
jns
loope
cmp
flds
in
mov
push
dec
pushl
dec
fildl
test
and
pop
fnstenv
mov
imul
das
lods
lds
xchg
pop
push
xor
xchg
mov
enter
loopne
fcoml
inc
jmp
je
sbb
xchg
mov
lret
test
cli
fsubrs
xor
and
aas
fisubrs
and
repnz
insl
fbld
mov
pop
shrb
lcall
pop
adc
cli
int3
sbb
gs
out
arpl
lret
cmp
pop
mov
mov
mov
dec
sbb
pop
cmp
dec
fwait
jo
aam
inc
cmp
leave
test
dec
or
call
sbb
mov
push
inc
in
insb
ret
add
sbb
sub
pushf
and
ds
xchg
jle
mov
pop
cmpsl
ret
push
in
push
mov
add
push
insl
inc
popl
xchg
pop
ja
insb
ds
jg
adc
dec
sti
add
lods
rorl
mov
lock
stc
inc
enter
sub
xor
stc
out
push
lods
inc
adc
cmp
push
in
lcall
daa
xchg
add
pop
sub
lods
repnz
addr16
pushf
mov
jp
fucom
cmpsl
in
inc
lods
adc
jp
xchg
fists
lcall
dec
sbb
pop
dec
add
mov
fwait
push
pop
sbb
pop
lcall
jnp
sti
mov
ljmp
mov
sbb
insl
or
in
decl
int3
popf
outsl
pop
mov
push
dec
cmp
sahf
push
mov
or
mov
insl
add
addl
adc
mov
adc
push
jne
push
lret
repnz
int
out
aad
in
xchg
or
lcall
and
out
xchg
jg
ja
jmp
or
cld
in
inc
jecxz
cs
rol
aam
mov
xchg
outsl
dec
xor
sbb
inc
fdivrl
xor
inc
mul
xlat
xchg
push
sub
lcall
ss
or
cmc
mov
jl
push
xchg
test
in
sub
cli
jmp
lcall
outsb
arpl
mov
adc
pop
sbb
ds
push
fstpt
ljmp
lahf
mov
pop
xchg
stc
leave
aam
in
push
mov
out
dec
pushf
push
clc
sbb
scas
or
mov
loop
lock
bound
push
stos
call
jbe
inc
mov
xchg
ss
xlat
lahf
out
or
and
test
fistl
test
add
push
in
scas
repnz
in
mov
or
mov
test
aas
hlt
fistpl
aaa
and
jae
inc
andl
add
adc
addr16
cmp
pop
jo
pop
scas
repnz
sahf
orl
fcompl
lods
add
mov
enter
fldl
clc
mov
xchg
test
aam
gs
ficomps
rolb
xchg
adc
xchg
pusha
or
jae
je
pusha
fcmove
jb
ljmp
cmp
adc
ficoml
pop
fisttpll
mov
mov
xchg
xchg
mov
dec
mov
xchg
mov
sti
cmpsb
sti
outsb
adc
fisttpl
dec
jno
mov
mov
push
leave
loopne
sub
push
inc
inc
jae
cmp
aas
and
icebp
mov
addb
icebp
xor
lcall
dec
pop
inc
mov
popa
outsb
jo
cmpsl
js
mov
xor
dec
lods
stos
ss
ret
loop
dec
outsl
or
or
addr16
pop
loop
outsb
std
movsb
das
je
mov
imul
sub
rolb
mov
mov
xor
imul
test
inc
insl
pop
xor
dec
sub
pusha
in
ret
push
fimull
push
mov
mov
sub
adcb
aad
inc
cmc
pop
cmp
movl
rep
push
xchg
mov
rorb
xchg
movsb
xor
and
arpl
cwtl
add
mov
fidivrs
test
fsubs
stc
pop
or
in
gs
xor
in
andb
into
push
jl
jp
jbe
jne
insl
inc
stc
aad
pand
lahf
pop
pop
outsl
jg
sbb
push
jnp
inc
shrb
insl
pop
insl
addr16
dec
inc
test
cmp
cltd
adc
mov
divl
cwtl
cmp
adc
dec
xor
xor
xchg
add
jg
test
aas
add
rolb
cmp
sahf
dec
loopne
rorb
xchg
xchg
jb
mov
xchg
pop
mov
mov
jecxz
call
cmp
sub
sbb
jno
push
in
push
adc
scas
shll
cmp
cmpl
or
insb
pop
jae
int
pusha
jmp
stos
pop
repz
pop
int
addr16
ljmp
and
xor
popf
out
jno
pop
push
mov
int
sub
in
adc
or
adc
aaa
fimull
sub
xor
sub
outsb
out
aam
adc
roll
mov
and
insl
ret
adc
imul
pop
test
cld
shl
gs
xchg
ljmp
mov
add
imull
xchg
gs
popa
mov
sarb
leave
lea
mov
adc
fisubl
movsl
ret
inc
sub
mull
ss
fyl2xp1
sbb
adc
aaa
outsl
test
adc
xchg
mov
jmp
xchg
inc
xor
or
out
popa
mov
mov
push
xor
jae
jno
xchg
mov
lret
es
or
or
lea
xor
cmpsl
cld
fwait
push
insl
push
nop
fnstenv
dec
leave
mov
outsl
cmp
es
mov
cmp
pop
aas
push
dec
fisttpl
insb
scas
test
aaa
mov
push
adc
out
jae
or
mov
jg
stc
gs
mov
sbb
jmp
pusha
jle
xor
xchg
or
push
lret
scas
inc
loope
inc
int3
call
loope
mov
sti
rorl
mov
and
or
mov
adc
in
cmpsb
mov
scas
mov
jmp
testb
repz
jo
das
lcall
mov
loopne
pop
xchg
jmp
mov
dec
jns
sub
cmp
mov
or
push
mov
sub
cmpsb
fnstcw
jb
add
mov
sbb
adc
pop
repz
cmp
mov
test
mov
jp
test
push
pop
mov
cli
pop
jno
dec
rorb
shl
push
data16
add
cmp
cli
mov
jnp
lods
push
dec
icebp
roll
fcmovne
xchg
insb
inc
xchg
stos
in
xor
jg
pop
out
sahf
or
xchg
mov
mov
pop
pop
je
repz
lret
sub
jbe
out
aaa
test
mov
addr16
shll
push
movl
sbb
sbb
pop
mov
and
fidivl
jl
lret
repnz
jbe
cmpsb
std
arpl
scas
call
jecxz
cmpsl
pop
push
dec
es
rclb
jl
loopne
das
inc
icebp
jns
out
mov
mov
xlat
xor
or
lret
jae
xchg
aas
cltd
sbb
jae
adc
jne
mov
xchg
scas
or
div
pop
pop
jge
movsb
or
jne
call
imul
mov
or
aas
adc
mov
ss
cmpsb
js
sbb
lods
test
mov
fmul
lcall
lds
adc
sbb
mov
xchg
push
shll
jb
push
and
scas
imul
dec
ja
dec
dec
adc
mov
std
mov
mov
pop
xchg
xor
nop
rolb
inc
inc
fwait
pushf
push
shlb
cmp
mov
enter
icebp
pop
rolb
jp
sti
cmp
or
rorl
shrl
inc
and
lret
daa
ss
mov
and
mov
insl
inc
in
cmp
andl
sub
mov
std
push
and
xchg
int
jno
std
sub
cld
ds
leave
das
add
ret
cld
cmp
jne
sub
push
fidivrl
sbb
add
dec
dec
xor
clc
lods
jmp
or
rcll
adc
cs
jmp
xchg
cld
push
mov
insl
jno
jo
or
sti
pop
divl
out
out
gs
xchg
je
mov
movsl
adc
cwtl
xlat
arpl
insl
int
fcmovu
mov
dec
jbe
addl
insl
ja
hlt
cltd
loope
push
inc
adc
push
add
fstpt
scas
outsl
and
mov
xchg
nop
jnp
shlb
push
cld
subb
mov
insb
mov
dec
cltd
sbb
inc
pusha
out
or
ficoms
mov
cmpsl
ret
orb
jmp
pop
mov
xchg
mov
mov
outsl
ret
bound
sub
and
icebp
cmpsl
cs
mov
xor
or
xchg
jne
lret
test
mov
push
negl
jnp
aas
pop
xchg
lret
imul
xchg
ret
inc
and
push
mov
aad
pop
add
cmp
imul
test
mov
clc
pop
hlt
test
icebp
inc
sbb
call
ss
cmpsb
outsl
push
mov
repz
cmc
fnsave
adc
or
ret
lret
xchg
inc
aas
dec
das
orl
divps
sub
addl
cld
ror
scas
xchg
fcmove
je
xchg
inc
test
mov
adc
sbb
inc
xorb
sar
leave
jl
add
rcrl
jnp
cmp
call
inc
imul
pop
cmc
sti
jecxz
mov
cmp
jnp
push
pushf
sub
scas
jp
and
aad
jbe
mov
cli
push
jo
adc
out
xor
xchg
pop
xor
je
adc
rclb
stos
mov
sahf
bound
test
in
xor
mov
dec
dec
sysenter
sub
pop
push
push
cmp
cmpb
idivl
in
push
inc
leave
inc
jecxz
popl
clc
dec
cs
jno
lret
addps
mov
and
mov
jg
fs
rcr
xorb
gs
out
jbe
aam
jns
scas
add
cmp
cmp
mov
mov
shlb
popa
hlt
pop
outsb
xor
or
out
xchg
aam
loopne
loope
repnz
lret
xchg
mov
dec
in
sub
jns
pop
dec
pop
cmp
push
pop
inc
aad
lret
repz
dec
and
and
nop
and
rcrb
mov
mov
test
and
inc
mov
or
cltd
xchg
test
fldenv
loopne
ret
xchg
rol
inc
jmp
sbb
fiadds
xchg
lcall
outsb
mov
adc
push
lds
aaa
cmp
ja
mov
mov
negl
push
xor
jle
mov
pop
bound
fnstcw
pop
lret
jb,pt
dec
orb
lret
push
fwait
mov
inc
cmp
fnsave
sub
decb
je
mov
xchg
cs
add
fsubrs
jb
pop
push
and
push
test
mov
sbb
add
les
lods
movsb
hlt
mov
xor
cmc
dec
in
ficomps
ljmp
pop
repnz
dec
or
movl
rclb
cltd
mov
jnp
js
data16
int3
aad
into
mov
inc
daa
mov
sub
scas
shll
cmpsl
aam
test
hlt
xchg
xchg
and
test
sbb
jl
adc
sbb
testw
pop
dec
test
data16
xor
orl
mov
out
popf
inc
cmp
data16
in
cmc
add
jmp
lea
mov
pop
mov
and
hlt
cltd
inc
lods
push
insl
loope
add
scas
adc
mov
pop
sbbl
aas
pusha
xchg
push
test
jo
inc
enter
xor
fadds
xchg
push
sar
add
mov
int3
sub
outsb
inc
cwtl
adc
cmp
xchg
lds
ja
notl
dec
pop
adc
pop
push
ret
out
push
xchg
sbb
mov
inc
aaa
insl
adcl
sub
ss
add
push
ja
pop
cmp
incl
adc
icebp
pop
sti
sub
int3
shll
sub
add
inc
xlat
xchg
jle
int3
inc
jmp
pop
dec
popf
adc
inc
sub
lock
cld
push
insl
paddsw
repz
fsts
call
imulb
or
mov
repz
cmp
xlat
or
cmp
cltd
fcoms
or
dec
std
sbb
push
pop
je
ds
insl
adc
lods
mov
popa
push
and
push
fucomp
pop
sub
cld
es
dec
into
inc
mov
negb
xchg
push
mov
fsubrl
mov
fmull
mov
dec
icebp
not
and
test
in
or
pop
push
pop
call
xchg
into
outsl
sbb
cmp
dec
xor
jg
mov
inc
sub
jge
jne
ret
outsb
pop
pop
lcall
cli
outsb
inc
cmp
mov
sbb
mov
addb
push
sbb
and
push
clc
sbb
sahf
fimuls
add
enter
loopne
adcb
shr
stos
or
sub
or
inc
mov
inc
inc
aas
cli
jne
and
je
and
mov
push
mov
xchg
pop
cmp
pop
inc
xor
inc
in
aam
jmp
mov
mov
inc
popa
repnz
lods
xor
into
adc
adc
daa
xchg
pop
xchg
xor
sub
jns
mov
or
aaa
cmp
sub
es
imul
push
dec
stos
push
lea
ret
sub
cmpsl
daa
dec
sti
mov
ret
jno
testb
or
add
movsl
cld
lods
aas
mov
jne
xor
loope
cmc
jb
cltd
in
cmp
mov
sub
jo
sub
pop
out
pop
je
lock
insl
push
push
cmp
jnp
out
push
data16
das
add
in
sti
rcl
cmp
int3
popl
rcl
jle
sub
sub
outsb
fisttpll
in
sbb
aad
cwtl
out
js
push
aaa
fdiv
mov
inc
out
or
jmp
or
stos
push
cmpsl
aad
fimuls
jg
jge
ret
dec
push
sbbb
fists
cwtl
cld
jmp
ficoms
mov
sbb
in
hlt
push
inc
das
inc
andl
adcb
adc
ss
jbe
jl
movsb
lret
fwait
xor
loopne
lret
popa
pushf
cmpsb
and
outsl
repnz
ret
or
pop
pop
xchg
or
movsl
jns
push
cmpsb
xor
mov
lods
adc
dec
cmp
sbb
scas
into
es
or
pop
push
sub
enter
int3
xchg
jg
pop
inc
inc
sarl
pop
sbb
mov
mov
sub
or
popf
and
mov
xchg
push
sbb
test
imul
movsl
std
mov
fwait
lods
adc
orw
mov
and
mov
lds
adc
mov
xor
adc
and
lods
xlat
cmp
lods
xchg
xlat
mov
aaa
popf
jns
pushf
or
int3
sub
inc
inc
mov
xor
adc
add
xchg
xchg
test
rorb
pop
jl
xor
loope
mov
cli
inc
inc
arpl
pushf
int3
lret
js
insb
loope
test
test
jl
mov
cld
adcl
adc
mov
in
ja
mov
sbb
loop
hlt
xor
stc
mov
aam
mov
ret
or
push
push
js
popa
sub
in
mov
mov
flds
push
jnp
sbb
add
arpl
inc
push
sbb
mov
push
push
cs
iret
daa
add
std
inc
test
lods
xlat
cltd
sub
ja
jns
leave
add
aaa
mov
xor
cmp
jg
lods
out
pop
insl
insl
scas
negl
dec
or
in
sub
sbb
mov
orl
adc
sbb
adc
pop
arpl
test
ret
sbb
and
and
imul
push
int
aaa
int3
out
mov
out
psubsw
in
mov
xchg
sbbb
aaa
ljmp
dec
data16
mov
sbb
je
xchg
mov
addr16
js
adc
sti
jg
adc
push
pop
sub
mov
pop
fnsave
sbb
xchg
lret
fdivrl
fucomip
sbb
inc
inc
mov
outsl
xchg
push
arpl
pusha
rclb
push
mov
in
es
jb
cld
xchg
push
lcall
mov
enter
scas
sar
int3
sbb
clc
xor
pop
imul
xor
and
jnp
lods
popf
aam
subb
cmp
jg
inc
ja
cltd
jp
jo
adcl
icebp
xor
aad
pop
cld
xor
lods
ret
push
adc
pop
and
ss
push
ret
xor
stc
enter
cli
inc
in
sbb
mov
lock
mov
into
in
dec
or
testb
cmp
sahf
insb
divl
xcrypt-ctr
cmpsl
lahf
cs
push
leave
imul
jl
and
sahf
cmp
or
push
jo
mov
std
popf
or
xchg
or
mov
mov
loope
lret
out
mov
rcrl
mov
mov
loope
out
mov
loope
pusha
ffreep
cli
sub
es
mov
adc
lcall
addr16
sbb
inc
and
dec
adc
xchg
ret
push
scas
adc
jp
in
adc
add
ljmp
aaa
in
sub
ja
add
dec
xlat
outsb
inc
pop
push
fcom
jbe
leave
mov
cli
inc
mov
shll
in
mov
in
call
icebp
and
xchg
fsub
outsl
inc
dec
ljmp
mov
mov
es
cltd
icebp
call
popf
stos
push
mov
adc
fs
or
pop
insb
mov
xor
sub
push
xor
dec
jae
sbb
sbb
addb
out
mov
pop
xchg
shlb
dec
int3
sub
and
xchg
adc
inc
pop
loope
fsubr
ja
orl
xor
std
mov
mov
lahf
cmp
add
xchg
mov
mov
iret
push
mov
jecxz
sbbl
sysexit
lods
push
lret
mov
mov
aad
cmp
fidivl
ljmp
fadd
pop
jo
or
lret
repnz
cmp
mov
mov
mov
in
insl
and
scas
fmuls
xor
adc
aaa
ffreep
cmp
mov
fbld
jnp
pusha
jno
rcrb
in
lock
push
nop
iret
sbb
adc
hlt
stos
in
jecxz
shlb
push
dec
sub
xchg
mov
jp
adc
test
dec
popf
xchg
push
mov
mov
rcl
adc
mov
pop
mov
and
sbb
xor
loop
es
cli
call
or
dec
jns
sbb
into
or
inc
je
rorl
mov
mov
fisubrs
ss
sbbb
arpl
xorl
sarl
pop
inc
xchg
pop
rcr
adc
jne
adc
xor
sbb
lahf
pop
outsb
addr16
out
pop
mov
inc
inc
jo
fucomp
dec
sbb
mov
imul
sbb
xchg
push
scas
mov
fmuls
ds
sahf
insb
clc
sub
xlat
out
xor
testl
sub
lcall
inc
rcrb
pushf
push
or
out
mov
mov
rcrl
sub
adc
les
jo
loopne
iret
out
flds
je
push
in
shll
popa
mov
fwait
sbb
out
jbe
mov
push
mov
stos
in
test
popl
test
cltd
cmp
lret
lock
pop
push
repnz
std
xchg
xchg
sti
ret
xchg
sub
push
cltd
mov
aad
xchg
adc
push
mov
mov
je
mov
ljmp
faddl
jbe
xor
cmpsl
bound
and
fdivrl
in
xor
sub
push
clc
pop
cmp
lea
jnp
je
jl
loope
subl
arpl
dec
jge
mov
aad
sub
push
insl
lock
pop
sbb
jns
sbb
dec
jo
sbb
cmpsb
mov
cmp
mov
fstp
arpl
jbe
dec
das
pop
std
sbb
lahf
mov
ds
mov
ret
test
movsb
jb
fiadds
and
cmp
aaa
mov
mov
out
lods
and
jae
incl
in
xchg
mov
jb
inc
or
inc
jl
lds
sbb
stos
dec
cmpl
cmp
mov
ret
int3
js
and
mov
arpl
xchg
sub
sbb
dec
mov
add
cmc
fdivr
movsl
mov
cmp
ficoms
mov
adc
fdivrp
andl
mov
mov
mov
into
jg
cs
imul
push
adc
fwait
bound
ljmp
ficoms
or
mov
sbb
cvtpi2ps
aaa
sub
add
popf
xchg
test
sbb
rcl
sti
std
sub
mulb
or
cmp
insb
sbb
scas
cmp
arpl
stc
pushf
adc
out
pop
or
cmp
mov
xchg
mov
shl
jno
sbbb
lock
sarl
in
mov
xchg
xchg
jp
movsb
mov
jnp
inc
jbe
xchg
fwait
adc
sub
lock
pop
popa
addps
outsl
jg
pop
cld
insb
push
inc
mov
add
orl
call
mov
mov
cmpsl
sbb
fimuls
nop
inc
sbb
cmp
fwait
nop
test
jg
leave
int3
jb
cmpsl
fsts
das
ja
pop
lcall
mov
nop
stc
push
mov
enter
movsl
dec
xchg
mov
mov
and
ret
inc
data16
cli
pushf
jge
adc
fbld
arpl
loop
sub
sub
or
ret
pop
mov
jne
mov
sub
mov
mov
or
pusha
mov
fstpl
je
movsb
clc
aas
mov
sbb
leave
je
dec
xchg
inc
xorb
mov
cmp
mov
sub
cmp
sub
ret
dec
adcb
sub
dec
and
jl
jecxz
fsubr
repnz
in
fld
arpl
test
ds
addb
dec
xor
ss
push
lods
push
dec
cmp
fiaddl
push
aad
vpshlq
into
sbb
clc
lods
jo
xchg
bnd
scas
or
push
push
rolb
sub
pop
fisubs
aad
jne
dec
stos
fidivrs
mov
xor
out
mov
cmc
sbb
pusha
clc
out
mov
mov
sbb
fldcw
fcom
adc
notb
shll
ret
xchg
js
arpl
out
jae
add
and
loope
fmuls
out
pop
les
mov
sarb
adc
mov
jg
pop
int3
mov
cld
xor
clc
sbb
xor
int
jecxz
fstl
xor
jecxz
or
adc
rclb
leave
mov
adc
ss
stc
pop
mov
test
pop
pop
pop
mov
sbb
xor
fdivl
dec
aaa
stos
in
adc
add
xchg
int
cmp
push
into
push
mov
mov
into
and
xor
ror
rolb
jne
mov
or
inc
sbb
push
loop
loope
nop
dec
test
sbb
sub
fistpll
adc
cld
fs
test
pop
jge
cmp
or
les
iret
std
push
mov
push
rcrl
xchg
leave
rcl
jg
inc
xor
scas
mov
add
fcomps
add
fs
fildll
mov
cli
stos
lea
sbb
jmp
or
mov
pop
ds
nop
mov
movsb
test
nop
cwtl
mov
data16
push
push
sub
daa
inc
add
je
sub
jl
js
rol
push
mov
es
aam
pop
rorb
add
jmp
and
mov
cmpsl
sbb
popa
lods
movsb
jg
pop
dec
xor
add
pushf
inc
add
mov
mov
xor
shl
push
mov
cmp
adc
imul
mov
call
gs
int
leave
inc
and
jne
or
sub
dec
lods
lcall
mov
mov
xor
or
nop
cmp
lret
mov
jmp
test
scas
inc
xchg
lret
bswap
les
paddq
dec
ss
add
sub
adc
cmc
dec
int
push
test
test
jo
sahf
pop
bound
and
pop
push
lahf
clc
js
pusha
mov
imul
pop
inc
subl
pushw
push
lds
xchg
ss
inc
jnp
add
dec
enter
fbstp
jp
adc
cmp
or
dec
test
add
std
fimull
mov
lcall
int3
mov
cmp
popa
in
in
cmpsb
mov
and
mov
fldl
sbb
pop
mov
jbe
mov
rcll
sbb
jb
mov
sbb
or
lods
inc
pop
or
dec
jmp
push
mov
and
mov
cltd
stos
cmp
push
push
loopne
rolb
int
pop
cmpsl
fiadds
jecxz
sbb
out
dec
dec
test
cltd
insl
rcll
dec
incb
adc
push
pop
test
mov
dec
enter
outsb
ljmp
xlat
insl
lods
cmpsb
jne
lods
cmc
and
jp
adc
ja
pop
mov
pusha
lcall
inc
mov
movsl
push
mov
popw
cs
lods
lods
cmp
mov
xchg
jns
cmp
pop
xchg
imull
mov
inc
jne
stos
lods
pop
push
pusha
loope
cmp
adc
dec
xchg
repnz
mov
push
cmp
xchg
push
xchg
pop
cmp
sub
pop
adc
sub
xchg
push
push
lods
mov
dec
add
mov
adc
jl
out
hlt
nop
mov
pop
data16
scas
clc
ds
pop
inc
mov
inc
sbb
sub
mov
setb
stc
sbb
es
stc
aaa
jo
mov
outsb
aam
mov
jle
popf
loop
testb
adc
cs
mov
andb
xchg
push
es
sbb
mov
cmp
xchg
xchg
jecxz
push
sub
dec
xchg
sub
sub
test
sbb
rcll
cmp
xchg
cmpsb
mov
lahf
cmp
push
inc
mov
and
xchg
sbb
add
adc
ds
imull
adc
xchg
popf
push
mov
popf
popa
out
aad
cmp
lds
push
sub
dec
insl
or
cmp
adc
jo
inc
mov
jae
icebp
inc
and
out
xor
shlb
push
xor
mov
and
mov
ss
mov
adc
or
nop
addr16
jbe
incl
icebp
xchg
rcrl
cmpb
stos
cmp
and
popl
xchg
fsubs
cmp
fmuls
xlat
pop
xchg
mov
outsl
pop
inc
ficoml
fistps
cmp
out
js
mov
sub
add
cmpl
enter
pusha
mov
pop
stos
cs
mov
mov
ret
aas
pop
add
mov
pop
aas
imul
inc
jg
inc
lcall
mov
mov
inc
mov
ficompl
xor
sbb
mov
clc
sub
sti
sub
pop
mov
add
and
into
data16
xchg
push
jecxz
loope
jae
cmpb
cmpsl
fisubrs
mov
jmp
push
repz
gs
mov
mov
push
xor
push
dec
fidivrl
dec
xchg
shrb
repz
add
dec
pop
lock
and
js
mov
jbe
mov
push
adc
mov
cmp
dec
adc
imulb
cs
inc
in
call
dec
inc
dec
inc
cli
dec
xlat
test
push
cld
mov
mov
int
leave
push
ret
mov
add
xchg
inc
test
daa
inc
push
jge
outsb
nop
stc
or
lret
out
addr16
push
lock
sti
imul
and
adc
push
fstpl
sub
mov
dec
mov
mov
rclb
test
dec
jne
cld
cltd
add
mov
cmp
mov
sbb
clc
xchg
inc
add
adc
push
inc
js
cli
lahf
xor
outsb
pop
mov
cs
aaa
add
push
sbb
pop
dec
pop
les
push
inc
aad
push
outsb
aam
in
and
inc
push
push
stos
jnp
in
pop
hlt
rcl
cmpsb
fmuls
xchg
out
or
dec
push
adc
inc
aaa
nop
ds
sbb
mov
rcll
sbb
pop
data16
lock
jae
cmp
mov
push
imul
lods
xor
movsb
out
ss
mov
push
test
testl
add
outsl
inc
rcr
call
add
cli
int
pop
bnd
jl
or
inc
movsb
scas
lods
dec
ret
push
mov
inc
lods
loope
sti
jl
dec
ss
mov
cmp
fwait
int
scas
aas
mov
imul
xor
and
mov
nop
repz
fisttpl
pop
push
popa
lea
jno
fimull
xchg
sahf
xchg
cmpsl
push
ja
stos
sub
inc
clc
icebp
ds
fnstsw
and
mov
je
push
js
nop
sbb
inc
and
cmp
push
cld
sub
fadds
enter
mov
lret
mov
jnp
div
int
loop
es
movzbl
dec
cmc
mov
mov
xchg
and
push
pusha
ss
repz
mov
and
push
sbbl
stos
out
add
pop
scas
divb
mov
ss
push
mov
fldcw
outsl
pop
sahf
cli
jge
mov
push
stos
or
mov
fldl
sbb
movsl
ret
xlat
mov
push
dec
or
aam
rcll
xchg
mov
scas
inc
cmp
mov
stos
movl
xor
pop
cltd
dec
sub
push
adcl
mov
adc
mov
push
ja
movsb
out
iret
add
pop
or
enter
add
sbb
xor
pop
and
add
mov
in
sti
out
adc
test
pushf
iret
pushf
loopne
xlat
ret
sub
dec
dec
aas
push
and
ret
jle
mov
push
or
sub
mov
out
push
push
mov
imul
push
in
or
push
fiaddl
push
and
aam
cmp
or
loopne
fld1
std
push
mull
jge
push
mov
xorl
sarl
leave
lcall
ret
pop
cmpsb
aad
lods
mov
outsb
shl
mov
mov
loopne
repz
fdiv
push
adc
cltd
push
lds
test
jmp
push
sahf
in
xchg
mov
adc
push
cwtl
mov
dec
xlat
xor
arpl
fwait
jg
or
les
mov
lahf
or
rcrl
cmp
xchg
test
cli
push
push
adc
ljmp
loop
ret
stos
jae
push
and
stos
push
jns
jge
dec
push
cli
mov
lahf
mov
sub
jmp
xchg
inc
jae
cmp
cmpsl
pop
cmp
orl
pop
es
jne
movsl
ret
fidivrl
and
push
rclb
aas
loopne
xchg
cmp
cmc
inc
jae
fstpt
movsb
xchg
mov
inc
mov
jmp
xchg
cmp
xchg
in
xor
movsb
adc
sub
out
incl
dec
out
ss
inc
push
xor
xor
ret
das
jecxz
jno
vsqrtss
mov
testb
pop
sub
imul
cmp
or
andl
jle
in
push
push
add
movsl
sub
sbb
loope
outsb
mov
fiaddl
dec
test
pop
inc
movsb
xor
mulb
dec
add
jnp
mov
cmp
bnd
out
shrb
ja
movaps
pop
mov
fldt
inc
mov
les
das
sti
and
pop
and
jbe
fsts
fiadds
adc
cmp
jnp
pusha
mov
sub
cmpsl
pop
and
add
dec
push
dec
or
les
lahf
jecxz
loope
insb
lock
gs
jecxz
inc
mov
scas
inc
push
inc
rorb
cmp
adc
jne
mov
adc
cmpb
mov
fdivrp
enter
es
add
add
gs
pop
push
pop
imul
fwait
dec
ljmp
push
pop
das
ds
mov
outsb
sti
dec
lds
cs
in
or
bound
fidivl
push
pushl
cmpsl
hlt
ljmp
pop
loope
orl
enter
lcall
inc
ficompl
pusha
mov
insb
xor
fnstsw
mov
jae
sub
in
add
push
adc
pop
push
sbb
test
loop
hlt
pop
aaa
sbb
mov
lret
cmpsl
jp
icebp
add
mov
mov
pop
pusha
aaa
jge
les
andl
push
fimuls
lods
and
xor
mov
mov
push
dec
dec
inc
inc
stos
mov
in
ja
pusha
mov
sti
shll
insl
jb
push
inc
movsl
imul
scas
jno
mov
push
sbb
ja
xchg
dec
das
cmpsb
pop
sub
jg
out
add
push
incl
les
xchg
mov
mov
cs
pop
adc
arpl
push
enter
dec
xchg
and
hlt
mov
dec
sbb
mov
xchg
jl
push
fsubrl
test
scas
jbe
xchg
je
scas
push
dec
pop
adc
sub
lods
and
cltd
ret
and
ret
test
inc
sbb
movsb
je
jmp
divb
fidivl
rorb
pop
jp
jmp
push
in
cltd
and
sahf
data16
cld
fmuls
mov
imul
leave
fcompl
cld
lcall
inc
lock
sti
add
fdivrl
in
xchg
sub
loop
xlat
xor
push
scas
inc
lret
lret
lcall
xchg
in
aam
add
aas
cmp
sub
mov
cli
xor
adc
icebp
mov
or
scas
dec
add
lds
enter
addb
ja
xlat
out
mov
mov
aaa
out
jl
aam
mov
pop
hlt
mov
je
push
shrl
orb
stos
inc
popa
arpl
mov
fisubrs
xchg
sahf
shrb
mov
xchg
xor
fstpl
push
push
stos
mov
popa
inc
and
xlat
mov
orl
sbb
inc
and
jle
in
lds
jmp
pop
mov
mov
mov
and
inc
sbb
insb
inc
xor
aam
lretw
cmpl
dec
push
lret
dec
adc
jg
push
into
in
inc
push
mov
adc
xchg
mov
cli
jae
cmp
push
ror
sbb
enter
pusha
inc
inc
jne
addr16
push
jl
lahf
sbb
cmp
mov
test
add
push
je
push
fldt
mov
xchg
ljmp
push
mov
pop
sub
cmpsl
mov
outsl
lods
sub
mov
data16
and
pop
pop
mov
adc
sbb
dec
fldenv
jns
dec
insl
hlt
lods
push
push
sbb
ja
imul
mov
sub
xor
imul
lahf
inc
cmc
cs
out
std
push
outsb
sub
jmp
pop
ss
and
add
mov
data16
les
pushw
mov
jo
jno
rcrb
mov
stos
xchg
cld
ret
dec
push
mov
pop
cmpsb
sub
mov
jbe
jl
push
jo
into
cmp
dec
jo
sbb
inc
faddp
mov
int
mov
cs
pop
daa
add
scas
into
mov
pop
dec
scas
leave
ret
cmp
or
and
and
repz
in
imul
je
mov
call
rcll
stos
xor
adc
flds
pop
sbb
fnstsw
dec
mov
xchg
popf
loopne
xchg
pop
dec
push
pop
or
mov
jno
inc
jne
mov
pop
inc
mov
testb
mov
push
and
adc
out
mov
nop
jbe
mov
adc
stos
adc
mov
mov
imul
jl
and
ss
gs
lret
mov
fistpl
test
aam
mov
out
sbb
adc
cmc
pop
imul
cmp
mov
add
in
lods
aam
pop
movsl
call
cmovno
jmp
cmp
hlt
jge
decl
hlt
arpl
adc
mov
cmp
and
mov
xlat
pop
pop
cld
mov
les
xchg
mov
inc
out
jbe
loope
mov
inc
cs
adc
shlb
adc
cmpl
mov
push
in
ficoml
xchg
mov
add
xor
stc
loopne
jno
pop
roll
mov
push
stos
adc
mov
lret
test
cltd
and
repz
sub
scas
iret
clc
arpl
lock
lahf
fbstp
inc
and
jns
hlt
cmp
or
rcrl
iret
mov
add
mov
mov
sub
ret
push
clc
add
jne
sub
int3
mov
fidivrs
sub
aad
test
mov
lods
dec
or
daa
jl
je
lea
sbb
mov
icebp
clc
push
sub
or
xchg
stc
cmp
mov
or
xchg
push
mov
aam
call
ror
xchg
loop
sub
insl
push
mov
test
leave
xchg
sbb
push
test
les
sarb
pop
push
stos
ret
in
mov
inc
and
movsl
cmpsb
xchg
bnd
mov
xor
inc
out
shrl
mov
jl
cli
sbb
shrl
push
mov
push
sahf
pop
xor
sub
sahf
call
test
push
jbe
sti
repz
std
cltd
add
leave
mov
rcr
in
mov
mov
nop
lahf
pop
ds
arpl
adc
adc
jecxz
stos
cld
cwtl
cmc
adc
jmp
mov
ret
push
or
pop
mov
xchg
loop
mov
fistpll
pop
stc
xchg
idivl
pop
in
jnp
stos
lret
call
ljmp
jp
fldt
xchg
loopne
or
pop
jle
mov
xor
rcrb
mov
test
ja
fisttps
pusha
scas
lcall
xchg
in
cmp
insb
das
mov
pop
adc
or
out
jecxz
outsb
addr16
jae
or
or
aas
mov
jns
cs
xchg
les
mov
mov
out
dec
mov
add
jmp
cmpsb
xor
test
mov
cmp
lret
out
push
mov
cmp
ficomps
xchg
imul
aaa
mov
ret
pop
mov
add
cmpsb
adc
cmp
outsb
ret
adc
insl
mov
and
xchg
imul
mov
pusha
clc
add
stos
xchg
insb
cmp
pop
jne
adc
test
mov
stos
icebp
lahf
dec
clc
loopne
jmp
lock
jne
sbb
lcall
add
cmpb
push
sub
les
pushf
jns
sub
pop
mov
jecxz
cld
out
mov
sbb
push
out
je
cmp
adc
inc
pushf
aad
cmpsb
shrl
add
inc
pushf
jbe
cmp
fs
mov
cmp
ret
test
pop
adc
adc
push
aas
pop
lods
xor
mov
popa
adc
mov
pop
cmp
aas
out
lret
or
inc
repz
js
jg
in
mov
mov
xor
ror
hlt
jne
bound
push
loop
adc
mov
fdivrl
sub
fcomp
inc
add
jo
cs
mov
pop
xchg
outsb
mov
int
in
imul
ret
xchg
in
mov
bound
cmp
cmp
out
or
outsb
inc
mov
out
mov
ficoms
lds
pop
mov
iret
pop
jmp
nop
or
sub
insb
jecxz
pop
addr16
leave
mov
mov
mov
insl
ror
sbb
lock
xor
out
lret
dec
xchg
mov
sbb
out
dec
pop
ss
aaa
pop
pop
xchg
inc
shll
xor
and
imul
mov
xchg
xchg
push
jp
scas
loop
or
int3
xchg
add
mov
movsl
mov
dec
adc
xchg
ljmp
inc
jge
adc
fwait
pop
sub
into
jp
ret
fdivrs
pusha
or
ljmp
sub
mov
push
test
adc
fisttps
and
cld
add
xorb
or
lahf
divl
arpl
lea
mov
xchg
dec
mov
daa
xchg
ror
rclb
jne
xchg
xchg
bound
mov
daa
out
cmp
dec
jbe
cs
or
pop
in
inc
fldenv
aaa
mov
repnz
pop
enter
test
add
xor
call
and
test
xchg
fadd
leave
inc
push
addr16
cld
adc
mov
popa
fwait
push
mov
xor
mov
shl
inc
sub
addl
rorl
push
sbb
ljmp
gs
addr16
ss
test
adc
imul
in
repz
stos
or
cld
ret
iret
scas
rcr
jbe
enter
in
mov
nop
sub
jl
enter
inc
iret
into
out
inc
pop
mov
inc
cld
scas
pop
pop
dec
lds
and
inc
cmpsb
cmp
testl
lea
add
sahf
cmp
out
cmp
or
sub
inc
sahf
jmp
pop
jl
lret
bound
fsubr
dec
popf
xor
stos
lods
int3
dec
int
xchg
divl
aas
mov
dec
sub
jmp
jg
dec
lods
cld
pop
push
lret
push
stc
dec
in
test
insb
pop
dec
mov
and
imul
jno
loop
dec
cmp
jns
aas
stc
mov
insl
cmp
movsl
std
nop
inc
xorb
push
popf
aad
pushf
xchg
xchg
mov
test
jge
jnp
mov
mov
push
scas
repz
sarl
mov
sub
movb
rcrl
pop
cmp
ljmp
faddl
pushf
cltd
stc
push
sbb
outsb
jne
fwait
popa
pop
fcomps
push
mov
mov
repnz
pushf
ss
jge
scas
push
push
les
lock
sub
jns
push
cmc
leave
mov
adc
out
push
dec
das
inc
sub
and
dec
jae
imul
aas
sbb
or
mov
sub
or
push
jbe
push
stos
inc
faddl
lcall
cmpsb
jnp
dec
xlat
dec
call
cmp
xchg
cli
into
out
jmp
pushl
inc
mov
int
pop
mov
popf
call
push
push
out
push
insl
mov
push
in
jno
lret
dec
and
cmpsb
rcrb
lea
ja
adc
sub
in
xchg
sbb
xor
jnp
bound
xor
xor
clc
push
lret
dec
and
cmp
dec
and
jecxz
aas
push
cmp
dec
dec
loope
inc
pusha
in
dec
pushf
outsb
rorl
add
pop
mov
outsb
pop
dec
fistps
fstpl
jecxz
enter
sbb
incl
dec
fwait
lret
fnsave
faddl
jns
sub
xor
dec
mov
adc
inc
cmp
in
test
mov
mul
pop
adc
mov
jns
enter
arpl
inc
in
stos
xchg
mov
lcall
enter
fisubs
mov
add
test
aas
jge
test
lret
cmp
push
xor
lods
cmpsb
xorl
fldln2
fucom
bound
shll
mov
pop
or
cmp
popa
fdivrs
cmpl
lret
xchg
jge
and
sub
mov
and
pop
adc
imul
mov
or
add
jo
dec
mov
mov
xchg
cld
call
cmpsl
sbb
xor
int3
xchg
mov
push
jecxz
inc
gs
jo
shll
jge
adc
mov
aaa
pop
xchg
mov
test
ljmp
mov
jae
lea
out
pop
or
mov
and
xlat
cs
loop
aaa
add
sbb
stos
cld
test
mov
sub
fildll
dec
or
cwtl
xchg
push
mov
mov
jg
shll
mov
and
pop
in
add
imul
and
cmp
bound
fisttpll
enter
pop
scas
add
mov
mov
or
fstpl
jmp
in
push
sbb
jg
lock
int3
in
cmpsb
mov
mov
add
cli
repnz
inc
mov
scas
fsubs
xchg
pop
faddl
aam
and
xchg
xlat
xchg
ret
aad
and
mov
ss
aam
repz
sbb
addr16
pop
inc
mov
mov
loope
xor
mov
xchg
in
cli
xor
lret
add
or
pushw
cmp
sub
inc
jne
xchg
stos
push
pop
add
sar
push
jp
xor
add
xchg
sbb
sub
test
sti
push
imul
push
xchg
and
sub
pop
jo
aas
xor
pop
lds
mov
jae
push
sbb
jno,pt
cmp
sbb
hlt
pop
mov
ret
and
outsl
adc
loope
mov
push
lret
test
cli
repz
push
pop
cwtl
leave
roll
mov
mov
jno
mov
icebp
loopne
out
push
jecxz
mov
leave
push
jmp
js
rcrb
push
push
dec
lret
lahf
dec
mov
and
call
into
xchg
mov
fdivrp
dec
inc
inc
lret
cltd
in
rcll
idivb
les
rclb
das
xor
push
lahf
add
cmp
inc
movsl
mov
insb
or
rorb
xor
mov
loopne
mov
dec
dec
mov
clc
push
jae
enter
loop
aad
jmp
dec
cmc
pop
sbb
in
test
pop
jmp
jnp
popf
pop
les
in
sbb
in
loop
cmp
fnsave
and
cmpsb
push
push
lahf
imul
xorl
push
xor
icebp
jl
dec
or
add
jbe
cmp
push
movups
adc
inc
gs
mov
or
xor
addb
nop
adc
sti
pop
adc
aam
std
mov
mov
fcoml
and
imul
out
rorb
pushf
mov
es
and
lds
xchg
fistl
dec
rclb
and
inc
out
test
cmpsl
mov
and
pop
or
xchg
or
jno
xor
cmpl
and
jae
pop
cld
lahf
mov
repz
sbb
insb
inc
stos
lods
movsb
test
shll
cmp
lea
jns
cmc
and
inc
mov
mov
mov
inc
xchg
mov
mov
inc
int
xchg
lea
xor
daa
inc
popf
jp
cmp
sbb
jmp
lahf
cmp
cltd
ffreep
lods
mov
pop
dec
add
xchg
loope
test
pushf
movsb
js
pusha
add
mov
mov
test
pop
rcrl
fldt
test
cltd
divl
iret
lahf
mov
pop
iret
xor
inc
scas
stos
adc
outsb
dec
in
or
rcll
add
lret
lock
insb
subb
mov
dec
cli
in
loop
mov
or
jecxz
sub
int
dec
lods
jl
or
and
dec
call
jg
outsl
lods
call
hlt
xchg
inc
sub
mov
fidivs
cmp
dec
ljmp
adc
aas
mov
roll
sbb
xor
repz
aaa
mov
clc
js
mov
pop
push
xor
and
lock
pushf
dec
testl
push
dec
fstl
mov
push
loop
hlt
mov
aaa
fadds
dec
mov
imul
sahf
xchg
cmpsl
nop
sub
sbb
stos
stc
cwtl
std
jb
sarl
xor
dec
xor
loopne
cmpb
push
xor
je
mov
call
sub
push
or
js
lahf
loop
lods
cmp
lods
movsl
dec
sbb
mov
xchg
iret
ljmp
leave
das
movsb
mov
das
xchg
xor
loope
xchg
ret
and
jle
xorl
dec
ljmp
jl
xchg
cmp
notl
dec
sti
pop
fidivl
push
mov
fcmove
stos
mov
pop
movl
mov
into
inc
repnz
pusha
xor
lea
addl
adc
or
mov
jge
fidivl
cmp
or
or
sti
inc
push
fs
xor
push
insl
xor
dec
popf
jge
mov
push
pop
jg
divb
sub
movq
dec
cmp
mov
call
pop
das
fwait
test
pop
xor
fsts
xchg
jecxz
and
mov
movsb
ss
dec
inc
xchg
xor
ja
jp
in
inc
popa
mov
repz
hlt
jp
hlt
push
xchg
push
dec
fildll
cmp
mov
fmuls
scas
mov
aas
in
jbe
fldl
insl
dec
repnz
shll
xchg
repz
aaa
out
push
loopne
push
icebp
dec
ja
fimuls
push
lock
cmpl
and
in
fmulp
lods
pop
je
fsubrs
dec
mov
push
mov
pop
faddl
adc
shll
aaa
mov
pop
mov
add
fs
or
push
xor
adc
pop
pushf
stc
jmp
push
jo
cmpsl
stos
scas
js
sbb
imul
push
push
das
lods
xor
lahf
fstl
cmp
out
and
lahf
fwait
out
cmpsb
imull
pushf
cmp
mov
out
es
mov
or
jmp
mov
cwtl
sahf
cmp
mov
mov
xchg
into
je
mov
gs
and
xchg
inc
xorb
lds
xchg
aad
sbb
out
jmp
stos
gs
in
adc
mov
dec
mov
mov
adc
pushf
ljmp
mov
mov
fstpt
call
cmp
ret
ljmp
add
push
popf
push
push
repnz
xchg
cwtl
mov
std
cmpl
fneni(8087
adc
ret
cmp
js
xlat
xlat
pushf
add
outsb
fsubrs
scas
mov
jno
xchg
pop
mov
jle
sub
mov
push
push
into
or
mov
push
imul
inc
dec
push
and
jns
push
push
sub
push
and
sarb
pop
jns
in
fsts
sub
stc
jb
mov
jp
cmp
jns
sub
bound
mov
mov
sbb
inc
sbb
out
sub
xchg
out
jns
cmc
pop
jne
insl
mov
fsubs
and
fs
push
mov
push
jae
dec
adc
cmp
or
mov
pop
shrl
cmp
cmpsl
pop
cmp
rcl
loopne
ret
test
push
mov
lea
xor
mov
jp
in
lret
jge
mov
repnz
mov
cli
jle
aaa
ds
cmp
movsl
add
adc
pop
aam
mov
cld
jo
stc
push
push
adc
hlt
jne
push
out
out
movsl
aad
jo
xor
mov
jbe
test
lds
popa
lods
xchg
jns
xor
je
xchg
jecxz
adc
sub
das
test
push
mov
cmpsb
or
push
lahf
and
in
mov
push
mov
int
xorb
repz
dec
xor
sti
mov
lahf
push
jae
in
lods
jmp
jns
sub
ror
hlt
jl
loop
leave
pop
faddl
sub
adc
or
inc
loop
mov
cltd
jp
sti
sbb
jns
adcb
test
aaa
mov
xchg
test
push
mov
dec
jbe
icebp
mov
add
jnp
add
mov
sbb
int
das
mov
cmp
imul
dec
mov
pop
or
out
shlb
sub
cs
or
mov
sub
and
push
fmul
xchg
cmp
pop
out
lock
sub
jg
sub
cltd
aad
mov
mov
bound
push
dec
insb
inc
fiadds
adc
pusha
sbb
mov
arpl
sbb
or
sbb
dec
and
push
adc
cmp
imul
aas
or
jbe
and
daa
mov
push
mov
xchg
addb
clc
jno
xor
sarl
popf
xor
dec
mulb
or
lret
sbb
sbb
xchg
or
lret
stos
dec
adc
ret
in
inc
mov
jns
fcmovnb
cs
dec
mov
cli
add
mov
and
and
xchg
test
mov
into
fldcw
nop
ja
out
cmpsb
popa
fwait
push
mov
lret
mov
cmc
movsl
je
sub
testb
inc
scas
mov
inc
rep
dec
adc
lahf
arpl
jmp
fimull
mov
fsts
mov
inc
shlb
sbb
mov
add
jae
mov
pop
jnp
and
mov
lcall
inc
scas
xor
jb
xor
mov
lods
push
xor
test
fs
lock
stos
sahf
push
aaa
ficomps
les
test
out
mov
filds
or
xor
lcall
dec
in
push
std
cltd
stc
into
aaa
push
xorl
fwait
jmp
mov
jns
mov
jne
sub
mov
leave
mov
sub
xor
xchg
and
lea
cmpsl
mov
inc
loopne
push
inc
in
into
dec
mov
push
fstpl
ljmp
dec
popa
or
scas
roll
push
xchg
jle
add
dec
stos
push
push
repz
pop
and
jb
and
bnd
jle
loopne
jno
int
xchg
lcall
sub
ja
mov
call
hlt
xchg
inc
shrl
jge
aam
jne
test
add
sbb
adc
pushf
pop
cltd
push
je
push
jo
sti
push
loopne
aad
fstpl
leave
sahf
push
sbb
es
jno
mov
xchg
stos
outsl
lods
jno
fstpt
dec
jnp
cld
dec
cmpsb
xchg
pop
jp
add
cmc
jecxz
daa
cltd
sbb
lods
inc
push
das
jmp
mull
jecxz,pt
mov
or
inc
xchg
out
int
rorb
icebp
in
cmp
dec
pushf
lcall
push
inc
cmp
incl
xchg
sub
int3
or
mov
mov
icebp
add
jne
loope
mov
addl
push
xchg
enter
push
add
outsl
rolb
mov
mov
mov
aad
jmp
mov
lret
sti
sub
lds
sar
mov
icebp
aas
ds
insl
xchg
xchg
leave
sbb
xchg
pop
pusha
mov
scas
push
out
cmp
dec
mov
call
mov
lock
test
add
push
cmpsb
inc
imul
ror
and
into
xchg
jne
push
in
xor
inc
je
jmp
movsl
or
mov
xchg
mov
adc
mov
cmc
adc
out
add
xor
mov
movsl
inc
jecxz
and
stos
or
inc
iret
jnp
movsb
pop
push
js
test
lcall
popf
adc
ljmp
pop
pop
leave
sub
add
sub
dec
jb
adc
sub
cmp
pusha
jbe
fucomp
push
push
pop
pop
jecxz
jge
mov
cmpsb
nop
adc
imul
cmp
ljmp
mov
sbb
test
fbstp
push
fs
push
xchg
lahf
pop
outsb
subl
pop
jle
mov
mov
lret
fnsave
es
pop
push
sbb
xchg
dec
les
cwtl
out
mov
insl
push
ss
sbb
inc
jo
sub
mov
inc
jne
or
aam
je
mov
imul
adc
in
jne
push
loop
and
hlt
cmp
jmp
mov
pop
mov
scas
iret
or
sbb
enter
dec
inc
test
inc
add
pop
shll
inc
pop
xchg
les
dec
pop
test
out
pop
jge
frstor
pop
dec
mov
je
lahf
mov
lds
and
mov
mov
test
cli
bound
jg
and
jle
out
mov
pop
loope
cwtl
test
dec
adc
outsb
sub
dec
dec
mov
dec
adc
nop
pusha
add
insb
push
dec
ret
insb
and
out
jle
lahf
sub
fldt
repnz
dec
and
mov
push
sub
out
cmp
lahf
lret
pop
stc
clc
addl
int
xlat
iret
jmp
neg
jbe
enter
out
outsb
adc
add
aas
lds
xchg
jecxz
addl
lock
cwtl
bound
clc
xor
cmp
pop
lods
in
push
pop
jae
movsb
inc
pusha
adc
push
mov
loope
pop
cmp
push
repnz
outsl
pop
xchg
test
lahf
iret
sub
out
pop
adc
and
mov
mov
xchg
stos
mov
jno
test
scas
inc
jl
mov
cmp
adc
out
jg
mov
mov
xchg
jns
inc
add
ds
mov
movsb
adc
cltd
sti
into
mov
push
xchg
or
or
int
mov
sub
pop
sub
dec
loope
sti
fs
movsb
mov
add
pop
test
pop
add
imul
cli
in
push
and
test
push
cmp
inc
out
lock
dec
into
dec
shrb
lahf
cmp
sub
dec
sti
out
dec
sub
mov
xchg
sub
xchg
jo
adc
ds
subl
idiv
xchg
push
mov
stc
in
lds
cmp
inc
push
add
add
adc
mov
int3
mov
xchg
sbb
aaa
rcrl
xlat
imul
cmp
mov
dec
out
lds
out
hlt
fs
jl
cwtl
out
dec
mov
adc
pop
and
mov
jge
mov
and
jecxz
hlt
in
jno
imul
cmp
repnz
sbb
cmpsl
cmp
mov
pop
lahf
je
cs
outsb
and
adc
in
push
and
pop
daa
or
xchg
mov
add
jne
xchg
scas
mov
lock
push
inc
into
popf
ja
mov
push
rolb
xorl
cmp
cs
dec
sub
ss
rcrb
pextrw
mov
repnz
movsl
jmp
mov
xchg
nop
cmpsb
cmp
iret
int3
and
ds
mov
jmp
int
out
xor
loopne
lods
aad
shll
pop
cwtl
or
pop
push
insb
cltd
cwtl
imul
shlb
mov
cmc
std
movsl
rcl
outsb
js
xchg
add
cmc
cs
lods
add
fimull
mov
push
xchg
enter
mov
jne
jle
icebp
xor
lea
push
pusha
add
ficoml
mov
jno
push
fists
xor
push
push
clc
mov
fs
mov
movsb
xor
mulb
pop
pmaxsw
adc
arpl
test
mov
xchg
pop
inc
lret
jecxz
and
ljmp
push
push
arpl
dec
add
aas
incl
out
idivl
push
fcoml
dec
or
and
sbb
cld
sub
lcall
xchg
jo
sahf
inc
mov
jae
imul
lret
nop
imul
xchg
imul
mov
das
ds
pop
dec
jno
or
mov
dec
subb
lret
jbe
test
sar
aas
js
dec
dec
aad
cmp
mov
add
or
cltd
mov
sub
push
dec
movl
jne
outsl
or
ja
xor
ss
mov
inc
fs
fbld
xchg
fcmovbe
mov
adc
ds
outsl
dec
repz
cmp
movb
pop
sub
into
clc
mov
add
nop
pop
jae
stc
pop
cwtl
sarl
fidivrs
or
adc
sub
cmpsl
dec
outsl
push
ljmp
cmp
sarb
and
aad
sbbl
test
sbb
pop
sbb
ficoml
ds
shlb
hlt
mov
es
dec
fst
imul
xor
enter
test
jns
pop
cmpsb
dec
sub
out
pusha
cltd
dec
mov
test
pop
xor
jne
cmp
mov
movsb
incl
mov
mov
lea
call
mov
mov
test
test
cmp
pop
dec
adc
mov
pop
mov
mov
js
ret
mov
inc
aas
mov
adc
ds
cmc
mov
cwtl
sbb
lret
daa
cli
test
mov
push
cmp
mov
mov
js
fcomps
bound
push
fdivrl
testl
cwtl
pop
mov
mov
sub
in
pop
lock
cmpsl
and
ss
jg
jno
dec
sbb
imul
xor
nop
popf
push
add
fisubrl
and
push
rcr
inc
std
dec
fmull
mov
sbb
pop
inc
xchg
xor
xor
mov
push
push
mov
mov
add
pop
adc
add
xor
push
rcll
pop
push
cmp
mov
mov
pop
jp
inc
xchg
sahf
xchg
stc
mov
addr16
mov
dec
and
dec
and
add
or
lods
xchg
es
xchg
adc
fdivl
and
cmp
iret
movsl
rorl
call
popa
in
jo
dec
xchg
push
and
xor
fwait
test
add
movb
jge
punpckhbw
jecxz
add
sub
push
xor
stc
lahf
loopne
add
sbb
outsb
and
mov
mov
lcall
pop
jl
push
pcmpgtd
dec
test
mov
rcrl
lret
jge
clc
repz
or
add
fiaddl
jmp
xchg
incb
mov
mov
jmp
scas
add
scas
jnp
push
sbb
imul
mov
scas
sbb
dec
mov
mov
xorl
insl
sub
jnp
jne
or
cmpsl
and
jne
add
lods
fsub
pop
pop
adc
push
lcall
jb
testb
les
insb
jecxz
jb
inc
dec
dec
mov
mov
mov
mov
shlb
and
and
mov
or
xchg
sub
push
mov
fs
push
jno
daa
call
and
call
outsl
jne
int
cmp
out
adc
mov
nop
pop
cmc
mov
xor
jns
add
jnp
mov
cmp
push
cmp
lahf
inc
jecxz
push
cmp
shlb
divl
inc
out
sbb
bound
fnstcw
cmpsl
les
jno
add
mov
push
jns
aam
ljmp
xchg
mov
cmp
arpl
lret
shll
popf
push
fmul
pop
int
cmp
das
jnp
in
adc
or
add
mov
add
or
jbe
jmp
mov
jae
mov
push
shrl
fstpt
addl
les
mov
dec
enter
ss
test
jo
pop
fsubr
add
aam
sbb
xor
mov
or
out
lea
push
mov
cwtl
scas
arpl
add
push
stc
rorb
int
fimull
xchg
ljmp
out
mov
aad
and
fnstcw
outsl
pop
jmp
push
pop
and
push
xor
pop
test
push
adc
daa
loope
lea
in
sbb
cmpsb
stos
stos
popf
xchg
sub
and
inc
loope
nop
mov
incb
xlat
out
addr16
pop
lods
push
inc
push
pop
and
stos
int3
arpl
add
add
sbb
adc
icebp
jle
movsl
mov
pop
shlb
sub
xchg
pushf
push
push
adc
or
mov
imul
xchg
insb
sbb
pop
popf
pop
std
xor
bound
loop
dec
ja
mov
mov
test
jp
movq
sbb
rcrb
and
xchg
stc
shll
jns
and
inc
push
xor
call
hlt
sbb
adc
jle
hlt
inc
fldl
jns
popa
pop
mov
mov
jo
js
mov
test
mov
mull
decl
adc
js
push
push
xchg
iret
xor
cmp
frstor
out
adc
and
lods
mov
mov
add
out
test
hlt
lahf
push
sub
jmp
mov
insb
clc
jg
jge
lcall
cltd
jecxz
xlat
or
in
add
and
std
cltd
nop
addr16
add
xchg
sbb
mov
repz
hlt
xor
mov
adc
mov
adc
sti
xchg
testl
and
mov
mov
outsl
pushf
add
and
sub
dec
mov
cmp
subb
bound
dec
shll
sub
inc
cmp
stos
cli
lea
stos
mov
mov
sbb
add
mov
xchg
mov
popf
leave
mov
xor
aaa
jne
mov
xchg
aas
das
pop
xor
scas
shlb
mov
pop
ret
jp
adc
mov
cmc
or
notl
mov
push
mov
hlt
dec
jmp
jl
mov
jno
sbb
jp
mov
mov
xor
pop
ljmp
sbb
sub
cmp
jp
dec
cwtl
repz
mov
push
outsl
aad
mov
in
cmp
ret
cmp
lds
scas
les
mov
mov
push
inc
and
aas
lds
xor
add
loopne
inc
add
aaa
pop
xor
add
mov
frstor
fnsave
sbb
inc
icebp
mov
test
pop
sbb
ret
insb
jae
sbb
xor
mov
cltd
xadd
es
in
stos
bound
ret
dec
std
adc
clc
mov
pop
add
loop
mull
push
xchg
xchg
sbb
pushf
push
xchg
inc
sbb
jle
xor
andl
mov
xor
xchg
sub
adc
popf
push
dec
cltd
lcall
aam
int3
aad
repnz
mov
push
adc
in
dec
cs
mov
mov
sub
fistl
pop
xchg
jbe
in
sti
in
mov
inc
scas
repnz
aaa
loopne
xchg
int
pop
fwait
int3
jge
add
ret
ficoms
out
sub
int
stos
pop
popl
cmpb
jl
jle
adc
xchg
jge
mov
sbb
and
pop
cmpsl
repnz
mov
cltd
cmc
std
mov
ja
test
bound
dec
push
mov
adc
inc
outsl
jge
sbb
out
jne
add
sbb
pop
xor
push
xchg
and
inc
mov
clc
xchg
inc
pop
add
shll
lock
sub
cli
push
inc
scas
sub
stos
dec
dec
in
push
sub
popa
mov
sbb
xchg
cmc
xchg
bnd
sub
stc
jl
or
push
push
rolb
sbb
stos
cmp
adc
sub
fcompl
dec
and
sbb
ret
cli
sub
pop
and
les
pop
cmpsl
ret
popa
rorb
ja
inc
loopne
cmp
cmpb
mov
test
mov
lahf
cmp
or
and
pop
inc
aad
xchg
pop
shll
inc
call
popa
adc
data16
pop
jg
pop
loope
andl
cld
mov
fstps
mov
or
cmpsb
aaa
fs
lock
mov
sub
pop
movsl
xchg
sbb
or
je
inc
mov
or
add
dec
mov
sub
stc
in
mov
push
jmp
je
adc
pop
in
insl
clc
je
lret
xchg
ret
jns
and
sub
sbb
push
mov
pop
into
add
cmp
idivl
xor
xchg
jmp
imul
std
xor
subl
cmp
mov
push
inc
jno
mov
jbe
mov
cmp
xchg
or
and
mov
out
lds
mov
arpl
adc
out
je
sbb
xlat
icebp
gs
les
xchg
hlt
dec
call
aaa
mov
push
movsl
imulb
dec
sub
mov
aad
mov
dec
filds
push
repnz
fstpt
loop
cld
or
jbe
test
mov
cmp
clc
daa
pop
aam
mov
pop
pushf
in
mov
dec
scas
jbe
lods
sbb
iret
les
pop
or
js
dec
aaa
push
jl
in
xor
jbe
rol
pop
add
jnp
cwtl
negl
nop
dec
fdivl
ja
mov
sbb
out
out
lret
pop
into
icebp
fisubrs
sbb
xchg
xchg
out
add
adc
sti
loope
jo
dec
inc
scas
xchg
cmc
mov
push
mov
rorl
negb
xchg
mov
cmpsl
jnp
push
pop
xorb
jl
je
xor
sub
push
push
adc
stos
jecxz
jo
stos
shlb
jp
pop
repz
jnp
outsl
cli
dec
rorb
sti
rcll
pop
mov
fiadds
in
cmp
add
xor
popl
aaa
dec
dec
imul
adc
outsl
cmc
test
pop
push
or
push
test
add
cmp
push
cmc
cli
adc
add
int3
jns
ret
mov
and
dec
cld
sub
jae
aaa
cmp
inc
lret
int3
inc
fwait
pop
xchg
fs
sbb
push
je
cmc
push
not
xchg
and
push
jge
inc
aas
mov
sub
lea
push
js
nop
sub
pop
mov
fs
lret
les
sbbl
xchg
sbb
inc
dec
mov
push
jmp
imul
pop
in
stos
lcall
int3
sbb
add
mov
bound
scas
mov
cwtl
cmpsl
adc
xchg
sub
lret
out
mov
fwait
inc
inc
mov
mov
cs
mov
lret
mov
into
jne
dec
in
pop
mov
shrl
cmc
sub
test
loop
dec
test
imul
and
pop
inc
cmp
addr16
or
push
lds
aam
or
in
rorl
cmp
add
jbe
push
sub
dec
push
mov
push
xor
push
inc
in
nop
sub
dec
pop
sbb
mov
arpl
push
pop
sbb
aam
loopne
add
pop
out
inc
bound
mov
js
out
cld
pushf
cmp
es
push
fwait
icebp
fucom
xlat
jo
mov
popf
popl
out
repnz
dec
xor
push
jns
std
mulb
fiadds
nop
int
pop
push
jo
fcmovnbe
das
mov
in
popa
loope
and
clc
and
adc
call
adc
out
repnz
nop
in
mov
mov
mul
or
pop
lods
push
loope
xchg
and
push
adc
sti
push
jl
add
fnstcw
ja
in
xchg
js
pop
or
pop
les
aam
inc
cmpsb
inc
fistpl
dec
push
sbb
and
aas
inc
sub
pop
xchg
pop
out
dec
sbb
sbbb
add
ret
mov
mov
xchg
cmp
enter
aad
into
or
push
push
push
mov
jp
pop
out
push
out
add
and
and
pop
jbe
or
shl
aam
stc
clc
mov
out
das
dec
xor
inc
inc
sahf
fnsave
add
jns
push
add
mov
xchg
fistl
fnsave
out
jb
sbb
inc
mov
mov
pop
cmp
test
jo
jbe
push
mov
sub
xorl
xchg
jns
jecxz
into
popa
fcoml
and
ret
inc
insl
dec
pop
mov
xor
test
js
btc
int3
jle
mov
and
imul
xor
pop
xchg
inc
mov
jp
mov
sti
fstl
aas
popaw
or
rcll
repz
icebp
mov
push
fwait
les
mov
sub
and
or
lds
rcl
push
and
mov
imul
loop
int3
cmp
stos
push
adc
jg
dec
or
xor
cmp
popf
mov
mov
js
testb
pop
mov
fdivl
loop,pn
dec
or
decl
call
cli
add
repnz
testl
dec
cwtl
call
mov
orl
jnp
lds
les
or
and
sub
daa
cli
cmp
insl
test
push
mov
adc
xor
notb
jp
enter
sbb
fmull
and
fwait
insl
xchg
xor
add
js
cmp
ret
aad
fistps
dec
gs
push
sub
and
sub
lahf
pop
cmp
push
mov
cltd
popa
lahf
xchg
cmp
loope
gs
dec
push
mov
ret
in
cmp
mov
add
lret
or
es
clc
aad
add
bound
stc
test
push
xor
jo
push
pushf
inc
imul
adc
lret
and
jl
jnp
xor
cmpsb
add
sub
daa
and
scas
inc
adc
pop
inc
cmp
aam
pop
test
les
push
xchg
scas
jecxz
je
pusha
sub
in
fcmovne
lret
dec
xor
or
push
adc
jmp
rcll
xor
lret
mov
inc
cmpsl
aaa
je
pusha
les
out
adc
or
mov
fucomip
outsb
inc
out
sahf
mov
jbe
repz
decl
push
out
stos
pop
mov
cmp
jns
out
mov
sbb
cmp
insl
incl
and
into
dec
mov
jecxz
or
in
dec
mov
dec
scas
dec
into
adcb
das
sbb
xor
testb
pop
xchg
fisttpll
xchg
xor
imul
and
js
cltd
xor
test
lock
decl
pop
or
pop
repnz
out
jne
dec
jnp
pushf
test
add
inc
or
jmp
shrb
pop
scas
push
or
test
popf
push
sub
jl
mov
mov
test
cmpl
cmp
ficoms
pop
pop
loopne
jle
in
sbb
ljmp
jl
ja
scas
dec
outsb
je
mov
insb
bound
lock
cmp
jne
js
ficomps
fdivl
leave
insb
dec
int
xchg
sbb
add
pop
cmpsb
imulb
outsl
outsb
dec
mov
ljmp
sub
dec
cs
push
push
rcrb
sub
aas
dec
loop
into
jno
inc
xchg
cmp
and
popf
push
jbe
mov
cmp
loopne
xchg
leave
ss
push
into
in
arpl
mov
sbb
or
mov
fxch
cmp
sub
fs
pop
cmp
sarb
lods
push
or
mov
popf
in
adc
and
pop
mov
scas
mov
xchg
int
push
mov
popaw
repnz
call
iret
in
mov
in
xchg
adc
or
pusha
push
in
xlat
jge
jp
mov
cmp
jae
inc
stos
adc
test
ja
xor
push
clc
fdivs
in
cltd
xchg
jbe
shll
jnp
lea
in
add
push
jecxz
or
dec
out
push
arpl
mov
jle
imul
out
or
bndldx
mov
add
sbb
add
cmpsl
leave
mov
jb
xchg
cwtl
cmpsl
cs
je
fwait
sbb
jae
xchg
push
dec
cmp
fstpl
cmp
mov
adc
mov
xchg
push
dec
fisttpl
mov
cmp
sarl
push
mov
sub
pushf
popa
add
and
add
in
jge
call
add
imul
aad
mov
jns
popf
pop
insb
outsb
mov
ds
sbbb
xor
adc
pop
incb
mov
idiv
cmp
repnz
aaa
push
imul
mov
and
jae
xor
push
push
pop
mov
sbb
ficoms
mov
cmp
testl
fsubrl
int
shl
sbb
clc
sti
xchg
into
push
add
inc
jnp
xor
insb
outsb
dec
into
ja
and
js
cmp
popa
aad
dec
repz
or
fisttps
fstpt
jecxz
and
jb
jno
push
fwait
jnp
xor
pop
sbb
je
cmpsl
dec
adc
and
sbb
and
jp
inc
lret
rclb
mov
or
ret
dec
bound
lcall
stos
data16
je
cld
xchg
push
sbb
into
daa
test
fiadds
xchg
pop
adc
sub
xchg
divl
lods
jmp
out
inc
xlat
push
mov
fwait
mulb
lds
pop
and
outsb
out
xor
outsb
xchg
jle
jns
aad
inc
adc
mov
dec
push
pop
or
sub
sub
jb
push
int3
pop
ret
daa
push
cmp
xchg
push
xlat
das
inc
cli
xchg
rclb
xchg
mov
cmpsb
dec
sub
dec
insb
les
addr16
adc
icebp
adc
sbb
or
jmp
rcll
cmp
out
dec
lods
xchg
sbb
mov
loopne
cld
jne
jns
push
ret
out
ja
inc
lret
ljmp
arpl
or
inc
pop
stos
xor
adc
sti
xchg
ja
pop
add
outsl
shrb
int3
pushf
cmp
out
fwait
ja
sarb
lret
push
das
inc
icebp
test
sbb
lds
mov
dec
push
push
and
xor
cmpsb
sub
jecxz
mov
cmp
inc
les
mov
test
test
and
in
or
mov
mov
dec
cli
sbb
cli
jbe
ljmp
std
cmp
in
aas
out
or
pop
popa
dec
outsl
push
rcll
faddp
imul
shll
shl
fstpt
cwtl
pop
shll
and
push
pop
aad
sarl
test
inc
and
hlt
or
inc
xlat
test
test
jle
sarb
pop
jnp
aas
and
fs
adcl
sbb
xor
test
mov
mov
data16
xchg
daa
cmp
dec
stc
mov
std
pop
popa
push
xchg
es
mov
into
popf
xchg
mov
outsl
mov
rcll
and
cli
ret
mov
outsb
imul
mov
pusha
sbb
daa
pop
in
xchg
ja
push
cmp
xor
mov
int
scas
ret
cmpsb
and
fisttps
mov
sub
jle
mov
in
mov
jl
or
xor
mov
inc
fmull
std
sarl
sbb
loop
das
fidivrs
scas
adc
insl
mov
jae
dec
add
inc
imul
pop
cmpsb
sub
pop
mov
xorb
inc
push
mov
add
mov
or
mov
xchg
lea
sub
lcall
adc
pop
inc
imul
or
das
test
mov
imul
mov
mov
jae
push
cld
xchg
push
xchg
nop
or
push
test
ja
mov
test
or
mov
inc
mov
ds
mov
in
push
mov
cmpsl
inc
test
and
fnstsw
test
fadds
add
mov
out
popf
cmpsb
lods
pop
push
xchg
adc
cld
sub
jae
out
rol
xor
mov
sbb
lock
and
mov
lcall
cmpsl
test
shll
cmpsb
mov
fildll
cmp
sub
push
int3
adc
movsl
push
sbbb
jecxz
ds
jg
popa
test
int3
or
das
loope
daa
add
push
adc
repz
dec
inc
sbb
mov
add
cmp
push
mov
loop
iret
pop
mov
ja
push
dec
adc
cmp
lret
inc
repz
fnstenv
pop
scas
loop
and
aam
fsubs
fldl
nop
int3
out
add
sub
mov
dec
cmp
dec
mov
es
int3
push
or
push
loopne
jae
ds
enter
push
cld
xlat
cwtl
sbb
xchg
pop
out
xchg
jnp
stc
shll
jno
int
sbb
leave
pop
fisubrs
nop
or
mov
adc
rcrb
aaa
jle
push
loop
insb
mov
sbb
mov
shrl
mov
shlb
loopne
ret
xchg
push
rorb
xchg
dec
adc
stc
aam
movsl
mov
aas
add
cmp
lret
add
pop
jo
test
pushf
rorb
jae
mov
icebp
in
imulb
in
jge
mov
xchg
iret
imulb
adc
int
test
add
xchg
dec
sub
sti
mov
jns
out
inc
push
mov
outsb
imul
out
dec
xor
or
addr16
add
popf
pop
dec
aam
dec
xor
push
adcl
out
aas
mov
sub
fidivrl
push
xchg
repz
push
cmp
jle
cwtl
sbb
xor
dec
ss
xlat
push
fsubl
lock
bnd
lods
orl
insb
cmpsl
vmaxsd
adc
in
fiadds
imul
ds
rclb
cmp
pxor
dec
and
pop
pushf
cmp
add
or
xchg
cltd
sub
iret
test
or
fsubrs
mov
cmpsb
imul
xor
cmp
dec
cmp
loope
xor
and
sbb
sbbl
inc
or
out
push
in
mov
int3
fimull
daa
or
jle
int3
shl
dec
ret
xchg
pop
xor
call
xor
dec
jge
clc
push
cs
dec
dec
dec
jecxz
xchg
out
mov
jl
pop
cwtl
push
mov
push
jbe
std
int
out
xor
mov
jg
cwtl
lods
inc
or
das
or
and
inc
sbb
xchg
dec
xchg
add
hlt
inc
dec
inc
cld
xor
fists
or
mov
mov
int
test
mov
push
push
dec
ret
adc
ret
in
inc
push
cmpsb
jecxz
pop
call
lahf
jp
ds
push
or
mov
jge,pt
mov
bswap
andb
andw
xchg
subb
clc
scas
xchg
push
popf
jmp
push
jnp
in
adc
loop
mov
sbb
sub
inc
sbb
clc
stos
jmp
xor
mov
fs
out
sub
adc
movsl
and
ret
inc
loop
and
mov
push
xchg
add
mov
dec
loope
adc
movsl
push
leave
ret
pushf
pop
or
movsb
test
loop
sub
inc
ret
sbb
or
arpl
add
sbb
lahf
cmp
dec
dec
pop
aaa
lret
cld
fwait
movsb
fsubrs
lret
int3
xor
inc
int
xchg
dec
ds
jbe
fstl
xor
movsb
lds
xor
adc
stc
sub
dec
test
insb
and
popf
sar
mov
or
ja
cmp
test
cmp
mov
ret
negb
lret
ja
xchg
pop
xor
lcall
cmpsl
cli
xorl
dec
or
mov
lds
sbb
ljmp
add
push
add
add
xor
push
xor
xor
push
lret
cmp
addr16
pushf
test
ljmp
inc
punpcklwd
inc
sub
cmp
jl
xlat
sbb
stos
mov
jo
icebp
in
fcoml
mov
aad
adc
loope
in
pop
mov
gs
adc
sub
xchg
jge
fxch
ror
fimull
push
test
cmp
or
popf
push
push
sbb
push
aas
mov
pop
or
xchg
jg
insl
daa
nop
or
pop
jle
sub
nop
nop
insb
jb
xor
fs
test
cs
push
mov
dec
mov
push
fdivrp
aad
imul
jle
mov
leave
fnsave
lods
popa
stos
cmp
pop
add
xchg
ljmp
jo
jae
jbe
loop
out
mov
dec
jmp
push
and
jl
mov
sub
push
sahf
sub
adc
nop
mov
mov
mov
push
enter
push
sbb
cmpsb
jmp
mov
mov
stos
cmp
test
cmp
or
lods
mov
data16
mov
cmp
cs
fisubrl
sti
pop
push
jecxz
jnp
out
cli
test
mov
fnstsw
js
notl
shl
inc
cwtl
inc
aad
and
add
or
mov
fmull
pop
insb
or
mov
xchg
jns
mov
xchg
stos
inc
sbb
dec
fs
lcall
add
sbbb
inc
aad
mov
jp
loopne
xchg
scas
mov
test
jle
cli
ja
in
sub
xchg
or
bnd
scas
mov
mov
nop
sbb
fstl
aaa
pusha
jb
aad
test
mov
xor
and
or
lods
ds
jg
fwait
dec
pop
mov
xchg
cmp
pop
xchg
mov
mov
pop
sub
es
mov
and
sbb
xor
push
jae
test
push
clc
lret
shll
sbb
mov
pop
mov
mov
pop
push
mov
and
lcall
mov
push
rorb
and
inc
lcall
push
pushf
or
dec
adc
pop
mov
pop
xchg
mov
lahf
sub
movsb
shr
loopne
xchg
cmp
popf
pusha
push
push
orb
in
in
or
jne
pop
sbb
jae
mov
mov
pop
cmc
dec
push
xchg
movsb
lcall
mov
jne
ret
sub
add
dec
lahf
rolb
cmp
mov
or
sbb
cld
cmove
and
jecxz
movsl
cmp
mov
and
jne
out
inc
pop
ret
fildl
cmp
mov
pushf
push
inc
sub
xor
adc
jns
jne
xchg
ljmp
add
pop
push
fdiv
mov
icebp
cld
xor
clc
movsb
leave
mov
dec
sbb
mov
in
push
pop
fbstp
enter
pop
cwtl
clc
es
cmp
mov
outsl
adc
and
dec
mov
and
rcl
leave
outsl
adc
movsb
stos
scas
push
mov
xchg
xor
dec
push
sub
in
sahf
in
inc
cltd
imul
jg
leave
test
or
dec
pop
dec
sub
movsl
pop
iret
aam
gs
in
std
sahf
mov
outsb
aaa
cmp
js
sbbb
sbb
test
mov
and
jnp
mov
fistpl
jbe
pop
std
js
inc
push
jns
pop
xchg
dec
xchg
pop
sbbb
pop
ret
add
jo
jl
enter
leave
pop
jle,pt
les
mov
sub
jns
test
in
push
call
bound
dec
popa
adc
leave
add
xor
adc
lock
jbe
inc
cmp
mov
cmp
incl
inc
jle
jne
loope
mov
hlt
xlat
xchg
pop
sub
fwait
pop
lret
lods
push
jecxz
cmp
fiaddl
shrl
sub
jno
add
loopne
in
stos
loop
gs
pop
push
ret
rolb
jecxz
push
into
adc
cld
jbe
cmp
mov
les
or
out
dec
dec
cli
fs
dec
jge
push
mov
mov
push
mov
mov
test
lret
ss
fstpt
mov
push
adc
xorb
gs
popa
cmc
mov
push
cmc
scas
imul
sbb
adc
out
cmpsl
pop
mov
xchg
lea
xchg
aaa
push
lds
mov
stos
pop
adc
xchg
int
mov
rcrl
in
aas
sub
mov
ss
xlat
add
push
xchg
xchg
hlt
or
movsb
nop
nop
mov
mov
jge
or
aaa
jae
aad
aas
outsb
lds
lods
and
mov
ret
outsl
loope
fwait
out
pop
push
sti
aaa
sbb
ret
push
mov
xor
sub
adc
pop
and
or
xchg
aaa
sbb
pop
shl
mov
aam
jne
xchg
or
push
sub
mov
scas
popa
out
or
test
jae
cmc
jns
and
xlat
adc
mov
jg
mov
imul
int
popf
ret
fcoms
in
mov
dec
jb
jbe
in
int3
xor
jg
les
mov
adc
jg
es
lds
fwait
mov
and
mov
pop
xchg
jno
xchg
cli
js
and
xor
hlt
cltd
sbbb
shrb
sahf
sar
pop
push
mov
std
aas
cmpsb
push
mov
std
popa
fstpt
or
add
xchg
dec
push
leave
pushf
dec
dec
adc
pop
imul
jno
fistpl
dec
out
dec
push
es
das
mov
inc
inc
inc
push
pop
inc
sbb
cwtl
pop
xchg
inc
sti
bound
pop
subb
jecxz
arpl
fcoms
subb
and
cmpsb
or
xor
mul
jnp
and
hlt
fmull
and
sbb
cwtl
mov
pop
mov
inc
jmp
xor
rcr
add
repz
cmp
mov
call
lcall
xchg
scas
cmp
stc
cmp
push
rdpmc
rolb
icebp
loope
es
shll
into
in
sbb
sub
jb
pcmpgtb
or
pop
cmp
dec
decb
aad
mov
lods
imul
cmp
outsb
test
idivb
sbb
xor
dec
sub
xchg
push
cmp
ds
jb
test
push
sbb
daa
mov
sub
dec
mov
rcll
jmp
mov
dec
aad
jp
out
ss
jnp
mov
inc
xlat
cmpsb
repz
stos
xchg
mov
cmp
shr
jne
jbe
enter
jbe
xlat
in
pop
and
mov
sbb
pusha
add
and
call
cmp
lods
inc
push
mov
int
stos
arpl
jno
mov
cld
dec
xor
repnz
sbb
sub
sub
jno
xor
inc
das
stos
xor
xchg
cmp
sub
jns
bound
sbbl
mov
pop
into
lahf
cmp
inc
lods
inc
sub
adc
push
gs
idivb
iret
pop
addr16
mov
cli
pop
ja
pop
and
jl
in
xor
mov
lock
or
mov
bound
adc
pop
or
in
push
addr16
int3
roll
add
addr16
das
push
mov
mov
lods
cmpsb
loopne
push
and
push
icebp
fldenv
mov
addr16
push
lea
and
mov
pop
arpl
stos
mov
or
push
mov
mov
push
in
imul
sar
mov
sub
pop
int3
pop
addb
and
popa
pop
adc
pop
into
and
pop
mov
test
pusha
xchg
stos
push
pcmpeqw
xorl
ficoml
mov
add
std
fs
cltd
cmc
frstor
mov
cmp
dec
das
sub
pusha
pushl
push
pop
mov
jae
and
cmp
aam
adc
inc
out
scas
push
jp
subb
mov
lods
push
mov
dec
add
sbb
ljmp
fcmovnb
fs
sbb
dec
mov
imul
bound
inc
out
cltd
hlt
dec
or
test
shrl
repz
xor
add
jmp
dec
xor
rolb
or
testl
out
mov
xchg
xchg
and
mov
data16
iret
jne
jle
out
bound
scas
pushf
or
push
loopne
push
cmp
mov
mov
mov
xor
add
sub
std
xchg
jmp
jne
icebp
mov
jl
loopne
outsb
mov
jb
dec
xor
xchg
push
mov
and
test
sbb
jb
repz
shl
aad
sub
mov
mov
and
lret
pop
sbb
xchg
or
in
add
mov
sub
pop
xchg
fstps
aad
pop
gs
scas
mov
call
add
mov
in
imul
in
add
jno
xchg
mov
pop
call
testb
popa
inc
mov
push
aad
adc
test
or
repz
mov
xor
ss
cmp
and
pop
cwtl
adc
mov
enter
push
cmc
and
mov
push
les
test
movsb
cmpsl
negl
cmpsl
rcll
adc
test
movsb
pop
add
and
movsb
cmp
lcall
mov
dec
xlat
js
sub
stc
out
lea
pop
cmp
imul
loopne
cmp
in
adc
add
mov
aaa
out
push
stc
dec
int3
cmp
out
inc
xchg
cli
fadd
or
jb
jb
stc
fsubrl
cmpsb
sti
jecxz
pop
fildll
js
dec
lods
call
push
dec
sub
jecxz
add
or
arpl
fucomi
or
xchg
push
imul
and
ja
test
in
cwtl
add
jbe
stos
xor
mov
xor
mov
mov
fsubrs
test
movsb
daa
shlb
pop
aaa
add
and
xchg
sti
cmpsb
add
rolb
xlat
les
or
add
jle,pn
jbe
cmp
out
jno
arpl
xchg
pop
lea
pop
cmc
mov
cwtl
push
and
inc
gs
sub
ret
jecxz
xchg
mov
adcb
scas
aam
adc
addr16
in
arpl
push
sbb
push
clc
or
push
mov
xchg
push
mov
mov
pop
cmpsl
adc
loope
xor
loopne
and
mov
ret
and
jmp
mov
stos
dec
idivb
inc
jge
jno
inc
mov
pop
sahf
add
out
inc
or
pop
lods
lret
das
cmp
cmp
ficoml
aaa
rcr
mov
mov
enter
fstpl
dec
mov
xor
out
mov
in
xchg
into
hlt
pop
jle
enter
scas
sbb
andb
loope
cld
pop
mov
inc
pop
and
adc
sbb
dec
idiv
xchg
dec
fcompp
xlat
andl
mov
stos
dec
out
stos
out
mov
pop
stos
jae
popf
cltd
jge
ret
inc
sbb
and
testl
jmp
add
mov
inc
call
push
bound
ss
iret
scas
js
mov
pop
sub
cltd
bound
jb
inc
and
dec
mov
add
div
dec
cmpsl
mov
adc
mov
jae
dec
mov
xchg
and
jne
es
xor
shlb
stos
ffree
sub
lea
stc
lods
int
or
pop
sub
sub
sti
fwait
addb
xor
adc
aas
mov
add
into
enter
repnz
pop
lods
mov
jmp
enter
sarl
cmp
pop
outsb
push
not
dec
cmp
add
xor
mov
sbb
lcall
add
stos
or
mov
bound
sti
lret
dec
data16
cwtl
outsb
addl
lea
jmp
pop
test
lcall
pop
sahf
push
push
push
jbe
cli
dec
pop
pusha
inc
push
sbb
jno
and
inc
nop
jns
pop
jmp
inc
pop
inc
push
mov
mov
in
inc
out
scas
out
rcrl
pushw
arpl
push
cmp
add
dec
testl
xor
or
ljmp
mov
lcall
insl
or
ret
in
cmpsb
loope
xchg
lahf
nop
mov
fisubrl
test
lds
mov
fldt
push
push
imull
cld
pushf
iret
and
subl
mov
aas
pop
je
in
addr16
pop
pop
leave
ret
push
dec
mov
test
xchg
ret
hlt
sub
xor
bound
rcll
cli
xchg
push
je
adc
sti
mov
loopne
in
insb
push
outsl
je
mov
insb
gs
mov
clc
inc
or
mov
pop
push
rcrb
ds
sbb
sub
pop
inc
inc
fisubrs
cmp
dec
imul
cmp
icebp
dec
mov
push
les
pusha
ss
jnp
pop
adc
ficoml
xchg
test
mov
cmpsl
inc
int
lret
fstl
sbb
addr16
fsubr
lretw
dec
imul
mov
or
rcll
xchg
mov
imul
push
mov
ss
outsb
es
mov
rcl
or
adc
das
dec
imul
lcall
adc
pusha
in
xchg
nop
mov
cwtl
mov
pop
inc
add
cltd
lods
lds
fcmovnbe
lods
jle
hlt
lcall
ret
imul
adc
mov
es
fucomp
faddp
jnp
ficoml
lea
das
mov
stos
xchg
sub
stc
and
lret
dec
lods
loopne
mov
mov
mov
daa
dec
push
pop
fwait
pop
push
fwait
mov
push
and
xchg
or
rol
or
cwtl
xor
lods
hlt
shll
flds
dec
and
mov
jge
xor
imul
mov
add
fisttpll
sti
inc
sarb
sbb
sbb
scas
stos
pop
nop
pop
stc
jmp
fidivl
ret
jge
and
xchg
pop
sub
in
xchg
push
ljmp
ret
jmp
fidivl
loopne
mov
mov
pop
mov
shrl
iret
icebp
sub
das
imul
movsl
pop
inc
pop
xor
aam
mov
bound
js
and
mov
cwtl
add
das
arpl
xlat
aam
sub
sub
mov
rclb
jnp
aas
call
or
xchg
or
pop
cmp
mov
incl
mov
dec
and
outsb
test
xchg
cmpsl
mov
fidivl
shr
mov
icebp
sub
dec
in
push
movsb
je
jae
or
sub
jmp
ljmp
jmp
fbstp
add
xchg
mov
pop
inc
cmp
sbb
inc
roll
xchg
fsubs
dec
lret
sub
mov
popf
sub
jns
cmp
rorb
sbb
add
mov
cmp
and
adc
stos
push
add
adc
fs
adc
inc
sahf
mov
fnstenv
fstl
pop
ret
mov
cmpsb
jno
imul
loopne,pt
pop
aaa
sti
bound
cmpsl
mov
pop
push
cld
push
call
push
pop
fisttpl
sub
mov
pop
pusha
jo
in
adc
jae
fs
jno
popa
add
fs
inc
out
xor
cmpsb
jnp
mov
jbe
dec
add
pop
orb
subb
leave
xchg
cmp
popf
adc
in
and
adc
out
mov
adc
push
pop
out
adc
push
jbe
sbb
jmp
jle
ljmp
leave
or
xor
cmp
lcall
dec
in
popl
and
lret
cmpsl
sbb
cmpsl
push
ss
cltd
mov
ds
cmc
adc
outsb
out
rcll
sbb
sbb
jo
fs
cmp
push
ja
shlb
mov
xor
out
repz
lahf
xchg
or
lock
adc
nop
paddsb
dec
mov
push
adc
add
hlt
inc
push
sbb
lret
arpl
xchg
std
jg
outsb
mov
addr16
dec
push
mov
xchg
bound
jno
rorl
loopne
mov
mov
dec
xchg
lods
scas
cmpsl
divl
sub
add
xchg
push
ficoms
inc
and
push
inc
mov
pop
push
shlb
jp
dec
pop
pop
jae
mov
inc
mov
idiv
sub
les
adc
jne
mov
scas
ret
divl
push
xchg
mov
mov
fisttps
mov
adc
mov
xchg
mov
xor
sbb
sub
ficoms
mov
jnp
mov
outsl
and
mov
iret
inc
sarl
lods
out
pop
loope
cmpsl
int
mov
cltd
cmp
cmpsb
sub
cwtl
fwait
sub
aaa
ret
adc
mov
jb
imul
and
fimull
push
cld
jnp
popf
into
iret
jns
push
andl
mov
fdivs
movsl
cmp
xor
int3
cli
push
and
in
jno
push
aaa
loopne
fs
push
inc
mov
leave
xor
dec
ja
lock
lods
and
mov
fadd
xlat
call
sarb
jmp
fdecstp
in
push
les
sub
pop
repz
sbb
fiadds
xor
test
movl
pop
ss
lods
cwtl
dec
loope
cmp
jg
push
cld
fwait
dec
mov
cmc
shll
sub
rcrl
xchg
mov
movsl
stos
adc
xor
test
ret
jae
int3
test
mov
xor
hlt
push
adc
mov
es
xor
js
add
push
icebp
or
dec
xchg
fwait
mov
dec
cmp
es
icebp
mov
loope
inc
adc
shlb
gs
push
sub
addr16
fbstp
fadds
xchg
mov
test
movsb
xor
dec
in
jnp
testl
ror
cmp
push
lret
imul
stos
xchg
adc
shrb
outsb
je
mov
aad
mov
pop
shll
mov
loop
into
scas
scas
scas
push
push
rcll
roll
sub
or
in
or
mov
add
inc
pop
pop
dec
rorl
data16
aaa
push
cmp
imul
fbstp
cs
inc
sbb
pop
mov
call
jmp
push
shll
jb
push
dec
ja
imul
loopne
movsb
inc
iret
or
jp
mov
sub
movswl
testl
notl
test
lcall
mov
mov
or
jp
lcall
dec
push
xor
dec
jg
push
sahf
sahf
push
cld
or
inc
adc
jle
mov
cli
mov
push
popf
sub
sub
fwait
ss
jbe
sub
inc
lcall
fnstsw
or
mov
repnz
lock
lret
mulb
test
shll
dec
mov
xor
aas
dec
jp
xor
lea
adc
pop
push
add
or
cmp
sub
pop
fstps
data16
movsb
push
mov
test
movl
pop
sub
jo
xchg
cmpb
shll
mov
ljmp
pop
push
jl
and
push
std
push
in
or
push
aam
sbb
jmp
inc
or
jmp
cmp
stos
and
mov
jmp
pop
dec
mov
sti
jl
sbb
shll
das
in
add
push
or
fiaddl
dec
out
cmc
pop
jl
or
or
shrl
pop
popf
lds
push
mov
add
push
sti
arpl
cmc
sub
jp
push
repnz
into
cmpsb
aas
lahf
add
popa
jl
gs
xchg
cld
jge
or
js
mov
mov
adc
jg
adc
aam
ret
gs
test
or
push
repnz
stos
mov
shlb
jo
roll
lea
xchg
out
adcb
arpl
repz
lahf
sub
idiv
cmp
push
sbb
adc
addr16
xor
insl
and
test
pop
popf
adc
fdivl
cmpsl
pop
out
pop
test
mov
ret
scas
xlat
iret
addr16
std
push
pop
cltd
and
aam
std
dec
jmp
rorl
rcll
shll
shrb
xor
out
lock
push
xchg
ja
mov
inc
in
int3
mov
add
rcrl
pop
adc
or
outsb
mov
pop
repnz
dec
or
aaa
pop
sub
loopne
ud0
stos
push
inc
inc
sub
out
push
xchg
fbld
hlt
loope
icebp
pop
xchg
xor
mov
push
mov
jl
in
cmpsb
rclb
push
mov
pusha
xchg
or
stc
sub
jno
cmpsb
ja
arpl
out
xor
into
int3
xor
add
mov
stc
mov
sub
mov
aas
push
dec
dec
push
pop
push
lods
or
lea
or
in
iret
inc
jmp
push
jmp
xlat
loope
jge
jns
icebp
sub
cmp
adc
shl
rcrb
insl
xchg
add
pop
and
lock
pop
xor
pop
pop
or
inc
lea
sub
rcr
cmp
mov
bound
mov
in
out
push
push
jo
add
es
lods
shrb
mov
xchg
sub
jne
test
adc
jge
repz
fs
xchg
int
and
scas
test
pop
jl
jmp
pop
daa
push
or
lret
incl
mov
mov
mov
lods
imul
daa
outsb
push
xchg
std
cmp
inc
mov
lret
test
pop
mov
aaa
std
aaa
insl
mov
sbbb
inc
sbb
out
cmpsl
mov
inc
mov
sbb
out
leave
hlt
ljmp
stos
mov
popf
and
setg
mov
push
jns
push
jno
mov
cmp
add
xor
sub
scas
push
xor
xchg
scas
and
xor
push
aas
adcl
in
sbbb
xor
imul
repz
popf
and
jmp
xorl
mov
xchg
sbb
mov
std
push
jl
xor
dec
pop
icebp
xchg
push
jnp
lret
jmp
mov
xor
sbb
jno
js
and
in
ja
fucomip
inc
enter
mov
add
aam
push
pop
xchg
add
adc
or
pushf
data16
clc
test
popf
inc
sar
add
cmp
mov
jmp
sub
pusha
pop
sbb
adcl
or
fwait
adc
xor
lock
in
adc
mov
into
ror
insl
cli
xchg
ljmp
adc
pop
mov
aad
xlat
add
dec
mulb
pop
pop
movsb
daa
lahf
adc
insl
xchg
dec
cmp
pop
mov
pop
mov
dec
femms
ja
repnz
hlt
dec
lret
iret
shll
pop
fucomi
rolb
idivl
jnp
cwtl
pop
jl
add
inc
jp
out
mov
clc
add
inc
mov
jl
test
push
bswap
inc
loopne
in
or
mov
test
sub
int
xor
outsb
iret
jnp
in
movsb
ret
mov
and
push
or
loop
addr16
pop
or
mov
daa
pop
adc
cs
and
repz
cmp
in
sbb
sub
test
xor
les
add
mov
inc
push
test
mov
shrb
cmc
pop
push
and
mov
cwtl
popa
mov
fstps
enter
sub
add
repz
pop
jbe
std
add
sub
sbb
push
scas
and
mov
push
inc
fwait
jbe
xchg
es
push
adc
or
dec
or
mov
sbb
mov
jb
enter
outsb
mov
xor
movsb
push
mov
lods
push
jno
cld
repz
cltd
jne
jecxz
lods
xor
mov
int3
cltd
fucomi
cmpsb
mov
or
pop
or
pop
jo
stc
lahf
jle
int3
repz
shlb
ja,pn
lret
and
shrb
pop
cs
cmp
scas
sbbl
cmp
cmpsb
sbb
addr16
setl
pop
pusha
cmovbe
lret
xchg
xchg
nop
pop
scas
pusha
out
lds
inc
sub
call
or
pusha
nop
icebp
outsl
fwait
lock
int3
push
outsb
out
jb
push
sbb
stos
xchg
mov
movsb
scas
fwait
sub
repz
enter
fidivs
jae
fisubs
shll
mov
and
jo
cmp
xchg
jno
les
ljmp
dec
addr16
fsubs
pop
jmp
movsl
lods
fs
ja
outsl
test
xor
add
pop
sahf
out
mov
ss
add
mov
sub
pop
cli
test
nop
gs
mov
cmc
fadds
js
lds
mov
cmp
mov
sti
scas
jg
pop
sub
aaa
test
cmp
xlat
push
dec
inc
add
test
mov
stos
clc
insb
loopne
test
mov
in
ficoml
lcall
push
push
movsb
mov
into
ljmp
mov
mov
xchg
subl
pop
sbb
cwtl
push
in
cwtl
push
in
scas
mov
aam
mov
mov
mov
sarb
push
dec
mov
push
xchg
je
sahf
lret
inc
jne
jg
push
mov
xchg
shlb
dec
push
shl
cmp
aam
mov
mov
dec
dec
mov
sub
mov
xchg
jbe
or
gs
lock
jbe
add
fs
fnsave
mov
aaa
or
push
mov
and
nop
mov
mov
test
pop
mov
add
out
mov
and
mov
int3
mov
mov
icebp
jecxz
or
scas
imul
test
adc
sahf
pop
in
mov
adc
mov
in
psubw
inc
jmp
xchg
mov
or
jle
dec
push
mov
aad
adc
mov
jbe
dec
xchg
sti
aaa
or
int3
inc
in
sahf
scas
sbb
dec
push
dec
and
pop
xchg
mov
fsubrs
sub
fs
divl
cmp
xchg
test
cmpsl
push
or
xchg
iret
add
out
dec
sbb
sti
pop
push
outsb
jbe
mov
push
dec
shlb
cli
lret
lds
negb
int3
lods
sbb
scas
xor
and
mov
movsb
js
sub
jns
enter
jae
repz
std
adcl
dec
ret
mov
jns
outsb
dec
inc
jne
sbb
push
push
rclb
sti
jmp
ret
mov
clc
inc
fadds
incb
testb
and
das
jno
sub
stc
mov
xchg
xor
mov
dec
mov
xchg
and
mov
fsub
jo
inc
xchg
sub
sti
push
jno
adc
ret
push
fdivl
pop
pop
lods
test
mov
ret
lret
mov
mov
dec
xor
mov
fstl
push
cmp
sbb
cmovo
in
es
pop
scas
test
in
gs
sub
xchg
aas
adc
in
cltd
mov
out
push
aaa
adc
push
pop
test
mov
popa
or
sub
notl
clc
cmp
das
int3
xchg
mov
and
popf
ret
mov
pop
inc
inc
add
pop
sarl
sbb
mov
das
sbb
jle
in
stos
add
rcrb
rcrl
and
adc
loopne
sbb
in
push
jb
test
cs
mov
xor
sbb
add
mov
scas
iret
outsl
stos
push
xorb
add
adc
cld
xor
push
dec
pop
clc
loop
xchg
les
and
adc
mov
or
loope
shrl
fnstsw
adc
inc
and
mov
shl
rorb
les
pop
sub
xchg
push
cmp
xchg
cltd
repnz
mov
sub
insb
scas
addl
inc
sti
in
xchg
aad
dec
mov
lret
mov
mov
push
add
mov
mov
dec
jnp
push
dec
jno
addr16
loop
rorl
or
pop
ljmp
xor
clc
movsb
lcall
fwait
mov
mov
shll
pushf
add
inc
pop
mov
cld
cmpl
and
or
dec
orb
add
mov
cs
add
push
scas
adc
add
push
repnz
mov
mov
add
fs
jnp
dec
mov
add
pop
loope
mov
std
xchg
cmp
inc
cli
or
js
pop
sbb
jns
movsb
and
stos
mov
loop
sub
lea
mov
add
fsub
cmp
mov
cmp
mov
in
mov
push
mov
xor
sub
sub
testl
jg
add
outsl
inc
push
test
inc
cmp
pop
cmp
or
xor
add
pop
rcrl
mov
dec
repnz
xchg
mov
cmp
mov
push
cmpsb
mov
sub
or
and
cmp
jo
test
pop
mov
adc
inc
push
sbb
loope
sub
jns
mov
out
xor
push
mov
jne
dec
or
cmpsb
xchg
ret
push
lds
mov
lods
bound
lret
test
or
push
jb
jmp
xchg
push
push
or
notb
jecxz
ret
test
cmp
das
and
or
or
js
fnstenv
add
dec
adc
mov
lods
pushf
addl
mov
mov
lea
xor
insb
add
or
cmp
xor
sbb
test
mov
mov
movsl
dec
dec
sbb
and
pop
in
stc
push
shlb
and
or
jno
fdivrs
std
inc
or
lea
push
pop
add
lahf
popa
loopne
dec
rclb
or
ret
sbb
and
ljmp
push
sub
cmp
ljmp
icebp
jns
daa
cmc
cmc
pop
push
and
jge
push
pushf
pop
inc
mov
dec
nop
mov
sub
pop
mov
cltd
sti
lods
nop
jg
push
in
mov
pusha
loopne
inc
push
push
in
cltd
mov
lods
sub
jb
cld
fcom
dec
mov
cmpsb
push
call
push
fucomp
arpl
adc
imul
sahf
andb
xchg
in
push
jbe
imul
mov
hlt
sub
popa
pop
clc
rcl
sub
shll
popf
pop
ja
mov
in
dec
repnz
divl
arpl
mov
or
fnsave
aas
cmp
jg
pushf
add
loop
mov
push
js
std
shll
loopne
in
xor
ja
pop
inc
in
push
daa
daa
fnstenv
xchg
add
lret
cmpl
gs
cld
dec
ss
imul
mov
popf
mov
mov
gs
fldt
or
inc
je
sbb
arpl
js
movsl
xchg
ljmp
addr16
pop
and
mov
jnp
xchg
cmp
loopne
loope
mov
fldt
mov
hlt
pop
pop
std
ret
pop
mov
sub
mov
pop
jo
bnd
jg
mov
mov
dec
dec
shr
lahf
xchg
std
in
cs
ja
std
push
clc
jne
outsl
fnstenv
aaa
scas
leave
inc
jnp
xor
das
loopne
mov
mov
mov
lret
pusha
movsb
sub
sub
xchg
cli
push
dec
outsb
mov
dec
xchg
sub
test
pop
test
cld
inc
pop
xlat
addl
mov
sahf
sti
mov
sbb
test
and
scas
int
stos
jecxz
imulb
and
xor
xlat
jae
sub
pop
inc
adc
jnp
push
call
inc
lcall
loop
in
fistpl
pop
loopne
or
dec
cmpsl
inc
jns
gs
movsl
outsb
leave
cmp
xchg
sbb
and
fsubl
incb
mov
push
add
fisttpll
adc
aad
pop
dec
mov
mov
into
lock
les
pop
inc
sbb
ja
popf
xor
xor
bound
lds
add
popa
xor
xchg
sub
andl
repnz
sahf
mov
call
sbb
fwait
call
inc
repz
insl
jge
pop
insb
inc
jns
inc
orb
mov
scas
cmpb
sarl
nop
pop
push
push
out
xchg
in
rorl
and
mov
pusha
sarb
jp
loope
xchg
movsl
andb
rclb
dec
jo
xchg
or
clc
pushf
je
cltd
das
aad
mov
ljmp
adc
ror
cs
mov
jmp
movsl
dec
dec
mov
sub
stc
pop
insl
mov
enter
in
in
stos
push
cmp
shll
mov
stos
les
jecxz
out
lods
out
xrstor
rorl
fbstp
fisubs
or
loope
faddp
inc
or
or
xchg
fnstenv
push
push
popf
inc
je
inc
xchg
jle
out
orb
push
push
dec
aam
push
jl
mov
add
es
stos
mov
xchg
pop
and
cmp
int3
mov
and
sbb
shll
clc
xchg
dec
jmp
pusha
inc
cld
sti
stos
outsb
pop
out
and
cmp
or
and
iret
push
leave
xchg
hlt
idivb
aas
das
roll
push
mov
xor
or
push
fisttpll
or
out
mov
clc
data16
mov
and
mov
aad
in
adcl
or
arpl
shr
stos
push
sbb
xor
sub
xor
cwtl
sub
pop
inc
scas
cmp
mov
fucomi
pop
enter
fs
repz
cli
daa
mov
mov
fisubs
xor
sbbl
call
cmp
sbb
mov
xchg
cmpsb
and
pop
mov
mov
popf
pushf
fsts
push
fistps
movsb
in
loop
xor
fidivrs
ljmp
repz
adc
in
or
aas
lret
sbb
out
jns
imul
push
pushf
mov
outsl
movsl
lret
rol
lods
cs
pop
inc
int
in
cmp
fcmovb
push
out
inc
sbb
mov
outsb
cmp
sbb
iret
mov
cli
sub
mov
add
pusha
jbe
inc
mov
push
add
aas
data16
jne
mov
adc
int3
push
sbb
sbb
fisubs
mov
or
or
xchg
test
int3
outsb
inc
lock
jmp
xor
sub
nop
xchg
sbb
fldenv
push
inc
ret
out
aas
loopne
rcr
jnp
cmp
ja
fwait
rcl
cmp
repz
or
mov
adc
jnp
xor
jno
mov
insb
sbb
jg
inc
jl
clc
lods
or
mov
lret
dec
das
mov
mov
push
mov
push
and
into
mov
push
xchg
movsb
push
xchg
fwait
add
mov
testl
imul
lret
xor
inc
or
sbb
pop
sbb
stos
xlat
pop
repz
xorb
std
mov
popf
dec
loopne
or
jge
add
aaa
cmc
jb
push
idivb
adc
imul
cmp
call
aaa
aam
push
jp
or
mov
in
adc
push
fcmovnb
and
scas
add
in
jbe
roll
xor
dec
pop
mov
jle
inc
push
int
pop
das
in
test
repz
ljmp
inc
dec
inc
xor
popf
repnz
pop
hlt
jb
test
mov
icebp
lea
popf
mov
cs
fstpl
movsb
push
out
mov
pop
scas
push
jb
jae
mov
push
out
loop
xor
xlat
mov
jg
ds
adc
lret
int
sar
in
popl
jle
andb
mov
jns
add
jbe
sub
and
gs
icebp
sarl
inc
push
xor
rcll
jo
ljmp
and
pop
jns
dec
adc
xor
add
inc
lcall
call
decl
lahf
jnp
xor
jp
adc
pop
lcall
std
cmc
sub
in
data16
das
mov
out
shl
adcb
cmp
or
loopne
cwtl
jnp
mov
sub
mov
xorl
inc
iret
nop
repz
pop
xchg
mov
ljmp
mov
lret
rcrl
rcrb
stos
in
xor
ret
std
sbb
mov
in
dec
cwtl
mov
lea
hlt
cmpsb
bound
in
orl
mov
test
sub
jae
call
sti
jns
mov
arpl
jbe
mov
jmp
ljmp
mov
jge
cmp
cmp
push
addr16
mov
pop
inc
jp
insl
jae
xchg
stos
xor
or
sti
xlat
shlb
mov
add
cmpsl
lahf
jle
arpl
sbb
es
repnz
mov
jae
je
xchg
mov
outsl
jns
in
in
cmpl
popf
pushf
fidivl
mov
adc
mov
loop
fstpt
subb
xchg
mov
cmpsb
ret
inc
jmp
adc
lea
push
push
lret
fisubrl
push
xchg
scas
pop
repnz
xor
enter
fs
pop
mov
jo
ja
inc
int3
mov
or
xchg
mov
and
dec
jo
fcmovne
test
das
stos
pushf
mov
pop
mov
fidivs
jp
sub
imul
jg
mov
movsl
mov
aas
ds
out
push
push
pusha
lea
shl
sub
sbb
mov
lock
mov
lds
rcrl
movsl
pusha
or
mul
adcl
mov
xchg
dec
cli
mov
push
push
mov
push
xchg
test
lea
lods
jle
mov
fnstenv
movsb
adc
aaa
push
stos
inc
out
cmc
fisubrl
xchg
shlb
xor
mov
mov
add
jmp
and
out
sub
repz
js
and
test
fwait
push
mov
inc
push
stos
xchg
das
test
out
es
imul
adc
lds
dec
jnp
pop
lods
stc
std
fsin
inc
test
adc
cltd
and
xchg
push
pop
movsl
jns
adc
jge
arpl
in
ss
or
and
xchg
cmp
xchg
mov
mov
dec
imul
or
xor
nop
js
je
cmpb
mov
clc
popa
mov
in
arpl
pop
mov
into
addl
fimull
push
jo
push
sub
inc
sti
nop
sbb
dec
xchg
xchg
ret
test
cmp
int3
loop
out
jbe
icebp
mov
mov
into
sub
xchg
push
fs
insl
jo
gs
outsb
ja
mov
roll
hlt
cltd
sub
test
arpl
sub
out
out
jns
sub
push
inc
test
sub
mov
push
loop
insl
js
xor
add
pop
outsl
push
adc
je
mov
or
sub
sti
or
jne
sbb
pop
lcall
nop
jns
int3
mov
xor
xchg
mov
mov
lahf
loope
sub
mov
adc
aaa
vsubss
sbb
mov
xlat
fsqrt
push
jp
mov
arpl
sbb
jb
xor
enter
push
pop
rorb
in
imul
push
inc
push
mov
adc
inc
xchg
mov
cmp
jns
adc
mov
arpl
push
sub
and
mov
test
mov
adc
repz
imul
mov
sub
pop
pop
inc
and
sarl
jo
out
or
sub
mov
aas
sbb
push
sti
lods
adc
popa
loopne
push
shll
xchg
mov
cmpsb
mov
inc
pop
ret
lret
mov
mull
sub
insb
dec
and
mov
repz
mov
das
dec
imul
popf
mov
adc
pop
and
dec
fistpll
xchg
arpl
add
jecxz
push
std
dec
pop
mov
xor
cmp
pop
cmp
pop
lahf
into
fbstp
lods
or
fdivrs
and
dec
jp
int
pop
loop
aas
dec
dec
xor
sbb
cmp
pop
mov
addr16
xchg
xchg
mov
icebp
outsb
shlb
and
cmp
leave
mov
shlb
inc
mov
sub
sbb
in
and
push
cmpsb
enter
or
cli
scas
scas
out
dec
mov
sbb
or
and
inc
dec
dec
pusha
push
push
lcall
jne
push
push
lcall
jb
xchg
out
insl
and
pop
fistl
mov
inc
mov
inc
jecxz
ljmp
aaa
loope
repnz
dec
pop
sbbl
mov
fsubrl
or
lods
jnp
xchg
insl
imul
inc
mov
cltd
mov
jg
xchg
add
dec
imul
arpl
outsl
mov
mov
fwait
push
sbb
outsb
sub
leave
movsl
or
shrl
mov
fisubrl
xchg
push
jo
lock
push
lods
push
lock
and
xor
dec
xor
call
or
jge
cmp
stos
jecxz
xlat
mov
and
insl
cmp
adc
mov
or
lods
dec
push
xor
movsb
jbe
lret
jb
cmpsb
jae
mov
fcompl
out
test
mov
cld
and
pop
aas
insl
rclb
insb
sub
lret
nop
jnp
lds
insb
scas
inc
sub
push
inc
push
mov
dec
sahf
shll
or
imul
adc
xchg
or
inc
xchg
stc
xchg
jne
jbe
jnp,pn
mov
cmpsl
adc
stos
push
mov
loopne
xor
or
xor
add
xchg
fs
cwtl
lock
mov
fistpll
mov
cli
inc
shll
lods
mov
inc
mov
aas
inc
sti
dec
scas
sub
mov
out
adc
dec
dec
xor
add
fwait
add
or
sub
insl
jnp
push
inc
faddl
add
clc
and
lods
lds
daa
fimuls
adc
add
lret
in
mov
mov
add
inc
mov
or
mov
enter
decl
sub
iret
rcl
shrl
mov
inc
outsb
sahf
xchg
adc
dec
pop
mov
jns
add
jb
pop
lock
frstor
fistpl
fs
mov
icebp
xor
loopne
sub
add
sub
add
xor
mov
pop
enter
test
test
mov
test
fsub
pop
mov
scas
aas
leave
out
xchg
int
inc
xor
xchg
shlb
sbb
and
ficoms
push
lods
les
fdivrl
fadd
inc
cld
lret
les
dec
mov
mov
xor
fndisi(8087
jne
inc
insl
adc
dec
cltd
aaa
out
cmp
notl
pop
loope
scas
sub
sub
or
xchg
jns
and
mov
push
adc
repnz
mov
iret
xchg
lds
fidivrs
cmp
adc
fbld
adc
imul
inc
xchg
scas
jg
or
cli
push
loopne
xchg
and
lret
iret
inc
cmp
add
sbb
inc
mov
xchg
inc
sub
xchg
fmuls
or
xchg
movsl
jle
sahf
popa
aaa
xor
fimull
jge
stos
stos
adc
mov
jnp
mov
fst
lods
lahf
test
mov
std
jle
sub
add
scas
dec
and
pop
sub
or
cli
out
xchg
cmp
inc
jbe
call
xor
ds
inc
ret
out
inc
pushf
sub
outsl
gs
data16
sahf
cli
aam
pop
sub
push
sbb
aaa
rorl
mov
jg
roll
or
push
mov
push
push
fwait
inc
xor
nop
bound
cmp
or
aad
es
shrb
inc
or
dec
sbb
es
imul
lahf
dec
call
bound
and
lret
mov
ficoms
pop
test
cmp
iret
xchg
ja
dec
mov
imul
adc
int
cld
jae
cmp
repnz
loope
repz
inc
dec
aaa
sub
cmpl
mov
inc
enter
leave
out
dec
jmp
push
or
insl
sub
dec
cvtpi2ps
lods
jb
scas
lods
dec
shrl
daa
stos
mov
xor
add
cmp
aam
fists
fldenv
xor
hlt
lcall
jne
fs
jbe
pop
cmp
or
mov
mov
and
or
aam
enter
or
mov
inc
sbb
dec
ss
jge
mov
mov
fwait
sub
dec
cmc
xchg
push
lcall
bound
pop
inc
addr16
mov
xchg
hlt
pop
aad
push
hlt
pop
aam
cli
test
and
aad
fsubl
mov
xlat
sub
cmovge
aad
sbb
add
ret
in
jno
mov
popa
sarb
dec
xor
jne
dec
int
dec
jecxz
push
nop
ficompl
cld
jmp
pop
orl
lds
adc
pusha
inc
punpckhbw
fildll
lods
mov
adc
rol
sbb
pushf
iret
mov
leave
xchg
ds
xor
sub
xchg
outsl
push
sbb
fwait
imul
ds
js
pop
aam
jmp
ficompl
mov
pushf
rclb
vpmulhuw
std
mov
fistl
testl
loope
push
fisttpl
sub
aaa
loop
dec
andl
pop
cmp
cmp
or
sub
lea
add
cmpsb
das
out
adc
fwait
xor
inc
xor
popf
dec
pop
aas
xchg
xchg
mov
jp
or
jp
call
or
call
in
mulb
pop
sbb
adcb
mov
mov
imul
scas
pop
jnp
inc
adc
inc
cmp
mov
inc
shlb
ja
and
sub
fwait
mov
xor
push
mov
lea
movsb
jg
xor
stos
mov
mov
pop
pop
jmp
jae
in
jns
pop
xchg
mov
xor
pop
sbb
mov
jns
cld
or
pop
mov
test
fwait
xchg
dec
dec
std
inc
test
sub
ficomps
call
dec
fnstcw
mov
dec
cld
and
inc
insl
inc
or
adc
pop
push
stos
pop
mov
jecxz
or
shll
aas
pop
push
pop
jno
popf
ret
decb
fwait
test
outsl
addb
out
aas
fistl
or
push
jl
inc
dec
mov
cmp
mov
xchg
xchg
mov
imul
imul
lret
sahf
dec
pop
mov
dec
jne
mov
leave
rolb
lods
xchg
cmp
add
push
push
je
loope
imul
sub
mull
aas
pop
and
push
dec
loopne
or
call
or
dec
mov
imul
cli
sub
mov
loopne
clc
mov
addr16
cmp
outsl
mov
aam
lret
ja
push
inc
movsb
add
mov
sub
or
mov
adc
push
and
pop
push
dec
dec
cltd
xor
push
lret
mov
xchg
pop
fsubrp
data16
rcrl
cld
push
loop
add
test
loop
in
and
lret
out
rcll
push
sarl
insl
call
push
add
sahf
sbb
int
orb
imul
imul
cmp
shr
mov
imul
lahf
pop
cmp
pop
jmp
clc
cltd
std
cmp
mov
push
jmp
mov
sarl
mov
aam
popa
add
out
and
adc
scas
push
sub
add
icebp
sbb
mov
jne
scas
mov
imul
in
sbb
inc
or
pop
cmp
fsubp
sti
js
cmp
arpl
xchg
nop
sub
xchg
addr16
sub
hlt
sbb
and
fwait
std
shl
jo
or
sub
aam
jnp
clc
dec
push
cld
mov
je
insl
jmp
lea
jecxz
inc
les
test
xchg
pop
inc
jmp
mov
pop
cld
popf
adc
gs
jmp
out
push
and
mov
cmp
xor
sub
ds
in
xchg
fdivrl
shlb
ss
sbb
ss
push
mov
sti
push
pop
dec
orl
mov
hlt
adc
ret
jbe
iret
sar
push
jmp
pop
mov
mov
xchg
aas
jp
mov
gs
into
fmull
mov
push
test
push
push
pop
mov
pushf
in
les
adc
movsl
pop
inc
dec
jmp
les
imul
lods
xor
xchg
fstps
into
push
cld
lds
mov
mov
daa
ja
mov
cmp
pop
pop
call
adc
outsb
dec
xchg
js
lcall
or
cmp
repnz
inc
xchg
dec
mov
inc
pop
adc
xchg
inc
int
daa
in
jbe
xor
outsl
mov
pop
cli
ret
add
inc
xor
outsl
xchg
lods
lret
adc
sub
cmc
mov
xorb
stos
dec
into
pop
lret
dec
push
inc
push
fsub
pop
adc
mov
hlt
jnp
pop
das
xchg
in
mov
insl
fldcw
out
fcmovnbe
jp
scas
mov
push
int3
inc
int3
xor
inc
arpl
push
sahf
push
xor
or
pop
pop
out
jo
or
cmpsb
pandn
inc
dec
aad
mov
dec
jge
scas
mov
iret
in
repz
stos
insb
mov
out
lahf
jo
iret
sub
mov
orb
adc
cmpsl
dec
mov
xchg
cs
stos
push
push
add
imul
push
stc
dec
adc
jmp
xchg
pop
adc
inc
into
push
xor
ds
ds
sahf
insb
movsl
fimuls
arpl
mov
mov
xor
out
cltd
ja
jl
mov
aas
adc
sahf
test
fdivl
xchg
adc
leave
and
ja
dec
das
fs
call
in
gs
mov
repnz
inc
adc
arpl
lock
enter
adc
in
cmp
sahf
loop
in
clc
xchg
push
test
in
jnp
lret
dec
addb
pop
shrl
mov
add
loop
in
push
push
fists
mov
call
repnz
shl
mov
lea
aam
push
das
enter
les
inc
into
sahf
ljmp
rolb
arpl
ret
pushl
and
sar
shll
cmpsb
into
and
mov
sbb
fadds
inc
mov
sub
xchg
ds
push
pushf
mov
cmpsl
mov
movsb
jle
or
daa
dec
and
cwtl
mov
inc
jl
arpl
sbbb
dec
xchg
pop
xchg
mov
mov
mov
and
jb
jl
cmp
fisubs
xchg
and
int
sub
insb
xchg
scas
push
xchg
hlt
repz
nop
int3
or
jb
arpl
jne
xor
pusha
mov
add
lods
scas
test
add
xchg
movsl
jns
mov
subl
sbb
rclb
jae
push
lret
lods
fsubr
push
cs
ss
mov
inc
push
jle
or
jns
cwtl
loope
add
xor
in
push
in
out
cmpsb
shll
pop
nop
xchg
xor
mov
cmp
rcrl
dec
pop
fdivrl
test
ret
jno
fidivs
sbb
int3
sbb
lods
ror
inc
nop
sbb
push
je
push
in
push
nop
xchg
lds
mov
aaa
mov
lcallw
out
test
leave
jge
or
jns
jae
or
adcb
and
scas
or
jo
pop
jmp
jl
addr16
mov
in
or
testb
repz
ficompl
dec
pushf
sbb
and
xor
fsubrs
and
adc
in
adc
clc
mov
sub
rcll
lds
adc
test
mov
sbb
sbb
jge
gs
lods
xor
gs
cmpsl
push
adc
addr16
xchg
and
xlat
popa
or
outsl
jno
pop
mov
mov
cmc
data16
xchg
pop
dec
mov
mov
outsl
iret
mov
mov
mov
jmp
inc
adc
and
inc
pushf
sti
mov
mov
pop
lcall
or
xor
jle
or
and
daa
in
inc
inc
es
mov
or
mov
add
xor
in
pop
dec
lods
filds
fiadds
pop
flds
mov
or
call
mov
add
cmp
mov
mov
pusha
mov
in
cltd
or
sti
jnp
pop
popf
xchg
roll
adcl
movsb
pop
icebp
inc
adc
and
mov
jne
mov
xchg
mov
stos
ljmp
pop
push
dec
mov
adc
sbb
in
lock
arpl
imul
fsubp
ds
pop
in
mov
sbbl
aas
mov
cmpsl
add
dec
pusha
jmp
orl
push
push
mov
jae
xor
sbb
popa
pop
ja
iret
push
sub
push
xor
dec
sub
or
sub
nop
dec
insl
mov
enter
mov
es
in
mov
adc
std
jle
xor
pop
inc
arpl
cmp
sub
add
scas
shlb
adc
call
clc
cmp
mov
mov
pusha
jns
mov
and
movsl
xor
xchg
xchg
xchg
cwtl
and
cmp
jne
dec
push
and
sub
push
psrad
xor
movsb
dec
mov
shrb
inc
inc
or
stos
add
sbb
divl
mov
outsb
push
push
orl
sbb
cwtl
cmp
bound
loope
movsb
xor
and
aam
cltd
loopne
imul
jmp
pop
insl
popa
gs
dec
add
jl
gs
aaa
cmp
div
push
ds
loopne
dec
sahf
stos
xor
scas
mov
sub
xchg
out
mov
sbb
add
push
fwait
pop
test
cmp
mov
adc
push
push
jne
stos
int3
inc
sbb
adc
int
sbb
jp
lods
mov
sub
xchg
repnz
push
fs
scas
dec
mov
or
rclb
ljmp
fistpl
movsl
sbb
jecxz
test
arpl
out
lock
adc
nop
and
xchg
inc
outsb
mov
addb
aad
aad
sub
das
lea
cmp
and
arpl
aas
mov
lods
lea
sarl
in
xor
push
popa
mov
cmpsb
out
cltd
adc
xchg
lea
pcmpgtw
dec
sbb
out
cmp
and
and
lret
arpl
jge
sub
shlb
sub
jo
dec
movsb
jmp
mov
cmc
push
aaa
sbb
jb
bound
mov
push
mov
mov
divl
pusha
jmp
lret
cltd
pop
or
clc
mov
inc
sarl
pop
xchg
or
dec
orl
sbb
loopne
inc
popf
pop
push
insl
dec
rcr
jno
inc
sbb
bound
jmp
sbb
sbb
ret
enter
js
sbb
rol
push
cmp
xor
xor
adc
push
lock
inc
mov
das
xchg
jne
es
rcrb
adc
cmp
xor
mov
ret
mov
or
mov
mov
push
push
ret
adc
std
push
mov
inc
imulb
sbb
dec
cwtl
aaa
xor
mov
dec
or
cmp
or
rcrl
jp
inc
fiaddl
aas
leave
mov
push
jnp
mov
cmc
test
ss
mov
mov
mov
loopne
cmpsl
lret
lahf
mov
ja
data16
adc
pop
lret
into
add
adc
inc
ret
mov
pushf
cmp
mov
xchg
int
cmp
addl
lahf
and
ds
cmpsb
fisttpl
nop
test
ret
aaa
je
in
pop
into
imul
pop
out
pop
add
je
dec
mov
pop
sub
mov
aam
in
jmp
lock
xchg
stos
insb
lods
lods
cmp
nop
neg
xchg
jns
aad
pop
pop
or
outsb
shll
imul
pushf
push
sbb
das
flds
rcrl
les
nop
jge
sbb
insl
dec
cmpsl
xor
xor
xchg
jno
cmp
jl
adc
ljmp
test
inc
and
fwait
and
out
xchg
sahf
mov
xchg
ss
mov
mov
xchg
add
mov
pop
sahf
jmp
xlat
or
pop
or
dec
imul
jo
mov
sub
cmp
or
mov
insl
add
shrl
mov
loopne
lcall
dec
sub
fstl
iret
mov
jge
jns
mov
popa
pop
repnz
je
pop
add
or
sbb
sarl
and
lds
mov
add
aad
movsl
adc
stc
fidivrl
fstpl
sub
xchg
shll
mov
xchg
push
pushf
sti
mov
sahf
cmp
shlb
dec
adc
loope
cs
dec
and
loop
dec
jecxz
out
xor
xor
or
sub
sahf
jnp
add
mov
mov
shll
pop
sbb
sbb
or
xchg
mov
cmpsb
adc
cwtl
add
imul
jnp
jp
arpl
adc
mov
push
popa
rol
pop
iret
mov
push
mov
in
xchg
call
aaa
dec
pusha
adc
rep
add
jne
bound
sahf
cmp
xor
in
push
inc
or
ja
mov
rcll
mov
xchg
test
addr16
add
aaa
fdivrs
std
ret
aaa
cmp
fstpt
add
mov
mov
scas
inc
xchg
or
adc
mov
in
sbb
les
and
shl
push
xchg
mov
cld
push
mov
inc
cltd
stos
addr16
jmp
xchg
insl
imul
push
gs
aam
pop
lock
xchg
cmpsb
pushf
sub
adc
cwtl
shrb
push
sti
pop
cmpsb
jmp
push
insl
mov
bnd
push
adc
dec
std
icebp
divl
jp
xchg
shr
add
mov
out
fcomip
fldcw
lock
dec
aaa
pop
jl
movsb
in
popa
adc
push
sahf
push
mov
lds
cltd
and
aaa
mov
jo
iret
pop
push
cli
ret
sbb
aas
jne
repz
test
mov
dec
xchg
lds
xorb
push
int3
mov
leave
std
xchg
std
xchg
dec
roll
cmp
shll
ret
arpl
xlat
fsts
sbb
push
sub
ret
mov
jb
cmpsl
push
dec
dec
pushw
mov
stos
jl
in
sub
std
mov
xor
inc
mov
out
mov
inc
cmpsb
mov
sbb
rcr
pop
inc
inc
pop
mov
pop
imul
jmp
adc
int
inc
mov
fimull
xor
clc
add
nop
fsub
and
cmpsl
rcll
out
ret
mov
jne
inc
adc
adc
pop
fdivs
sub
sbb
cmpsl
dec
xor
ds
repnz
jmp
data16
dec
sub
sbb
cli
clc
mov
ret
sbb
ds
scas
mov
pop
xchg
mov
adc
out
pop
lahf
mov
mov
mov
cmpsb
xor
xchg
lahf
leave
movsl
mov
mov
push
jle
sti
lods
cld
jbe
cli
push
icebp
std
cmpsl
in
xchg
pop
mov
shlb
pop
sbb
jnp
and
leave
cmp
mov
call
cmp
shlb
in
pushf
movsb
fnsave
pop
mov
add
pop
inc
xor
in
arpl
int
jae
sub
push
test
and
idivb
ss
fcomi
push
lods
jmp
int3
dec
add
cltd
rorl
dec
daa
inc
inc
xchg
popf
xlat
dec
cmpsl
push
jnp
jae
adc
popf
notl
std
aad
ret
xor
cmp
mov
or
mov
jecxz
sub
cmp
ret
mov
add
mov
cmp
jbe
push
mov
out
bound
sbb
push
stos
sbb
outsl
aaa
adc
fucomi
inc
lahf
and
jmp
cmp
push
and
test
jo
ret
inc
loop
loop
xlat
sbb
stos
mov
and
inc
jae
sub
rclb
in
xchg
mov
hlt
scas
test
test
daa
or
fucomi
push
aaa
xchg
pop
roll
pop
stos
and
sbb
sbb
dec
jne
push
int3
mov
hlt
mov
cmpsl
daa
xchg
ja
clc
add
and
jno
fistpl
out
fildll
ret
ss
cmpsl
sbb
test
mov
js
lock
adc
imul
lods
rcr
repnz
inc
out
jo
or
or
mov
add
cmpl
mov
sub
out
sub
in
leave
aas
ret
cmpsl
pusha
out
decb
inc
push
jnp
daa
sbb
push
cmp
scas
enter
sbb
jg
mov
or
jle
mov
and
mov
pusha
arpl
add
and
push
lret
pushf
pop
pop
sub
int3
cmc
stc
dec
sahf
adc
pop
fsubrl
ficompl
cmpsb
cli
push
lds
dec
aam
lahf
cs
inc
push
sti
clc
fdivrl
cmc
das
add
popf
ljmp
mov
sbb
pop
push
fldcw
dec
std
insb
pop
in
mov
icebp
mov
mov
add
sbb
dec
lahf
lea
push
jmp
std
xchg
sbb
inc
xor
pop
dec
dec
pop
sub
cmc
in
aad
mov
std
dec
aas
xchg
stos
push
fldt
push
mov
sbb
cmp
aas
pop
mulb
cs
bound
inc
mov
adc
mov
dec
sahf
repz
push
mov
fdivrl
loope
mov
je
lods
jno
fisttpl
inc
xchg
mov
frstor
dec
je
call
inc
jo
pop
in
lods
inc
hlt
adcl
mov
jmp
daa
int
sub
outsl
outsl
sub
sub
pusha
push
sub
into
test
call
stc
jmp
cmp
xchg
cmp
xchg
lock
aam
xor
js
movsl
test
rcr
nop
mov
jb
mov
lea
jl
fisubrs
or
pop
xchg
gs
jmp
add
mov
push
xchg
loopne
test
mov
pop
mov
xor
shlb
leave
arpl
inc
jle
jb
daa
test
arpl
pop
xchg
hlt
loop
imul
bound
xchg
gs
fistl
adc
push
pusha
push
std
in
xchg
imul
cld
test
add
push
jns
fbld
cli
or
xlat
in
iret
rorb
pop
inc
enter
nop
cld
cwtl
loope
xchg
xor
dec
loope
pop
fsts
xor
dec
scas
sub
add
cmpl
mov
lret
and
jns
mov
sbb
push
or
xchg
in
push
push
adc
jb
pop
sbbl
xchg
adc
lock
test
dec
lock
cmp
xchg
xor
add
jns
jge
and
scas
xchg
xlat
cmp
add
adc
lds
and
ljmp
sub
and
je,pt
std
das
xorl
imul
cmp
xchg
fnstsw
cmpb
mov
rorl
repnz
insl
or
stc
jnp
or
daa
pusha
je
test
sti
popa
pop
add
das
lock
and
aaa
dec
xchg
hlt
xchg
pop
xlat
and
or
mov
jmp
dec
sbb
pop
mov
cs
popa
xor
mov
andl
lock
sbb
lcall
je
inc
lock
cltd
ret
push
decb
stos
scas
xchg
xor
jle
cwtl
push
mov
sub
inc
fnstenv
mov
mov
inc
push
andb
scas
sbb
mov
xlat
mov
jno
cmc
mov
push
or
in
xchg
outsl
cmp
mov
add
cs
sbb
test
mov
fcmovnu
mov
jo
stos
push
scas
or
jge
mov
adcl
sub
icebp
lcall
dec
jp
dec
xor
mov
rcll
jp
int3
in
orb
mov
xor
push
loopne,pt
sbb
movsl
mov
sbbb
std
je
bound
test
push
mov
add
in
cmc
fdivs
jnp
ss
cs
rcrl
iret
or
imul
shlb
push
shrb
pop
addr16
stos
cmp
sarb
jle
jmp
ds
jge
mov
cmp
fld
fs
fidivs
pop
xor
roll
dec
pushf
adc
test
lock
jp,pn
arpl
push
outsb
or
lods
loop
pop
cmova
add
icebp
call
sti
xchg
dec
mov
cmpsb
mov
enter
aam
ljmp
outsb
and
or
jo
lcall
mov
ret
lds
pusha
xor
in
sbb
xor
add
in
loopne
pop
and
dec
inc
dec
insl
mov
das
aas
shll
jbe
and
jae
jo
push
pop
mov
jl
mov
call
push
jecxz
test
out
in
enter
mov
pop
mov
xchg
adc
outsl
jle
jge
lods
adcb
dec
in
sub
sbb
std
mov
dec
and
push
cmp
shrb
jp
enter
pop
imul
push
pop
jle
jae
jns
pop
stos
pop
adc
jb
dec
sub
lds
ret
lds
aaa
aaa
mov
dec
or
lea
push
pop
cltd
out
cmp
orb
xchg
push
cmp
test
popf
pop
mov
hlt
std
add
in
mov
xor
xchg
lret
cmp
mov
test
mov
stos
xchg
push
lcall
pop
mov
push
sub
mov
or
lcall
mov
vprotb
push
and
out
xlat
popf
orl
cmp
movsl
push
adc
mov
mov
cli
dec
popa
test
cmp
orl
or
ss
cld
add
sbbl
xchg
sbb
jp
cs
test
xor
ficoms
add
sbb
mov
mov
arpl
push
cmp
movsl
lock
lods
lret
fnsave
mov
mov
enter
lds
ret
pop
xor
cmpsb
add
dec
dec
xchg
jne
cmp
std
or
sub
negb
pusha
mov
or
xchg
jg
cmpsb
push
lcall
and
xor
xor
mov
adc
xor
in
pusha
sbb
insb
mov
stos
roll
xor
and
push
push
pop
and
ljmp
cs
jb,pn
dec
lcall
leave
pop
push
sbb
add
xchg
push
sbb
adc
fsts
mov
jp
xchg
cmpl
std
and
and
ss
jae,pn
call
in
push
outsb
ljmp
or
icebp
cmpb
cmp
cltd
sbb
sbb
push
xchg
stos
loop
and
leave
mov
mov
ljmp
xor
pop
clc
cmp
std
insb
loopne
pop
lea
push
lock
sub
pop
scas
cwtl
jno
popf
xchg
outsl
inc
sub
scas
fimuls
jb
orl
in
add
movsb
sub
stc
jge
dec
popa
mov
and
cmc
mov
and
add
mov
add
stc
fisubl
push
adc
sub
inc
andl
mov
lahf
mov
mov
or
ss
inc
shlb
lock
xchg
divb
popa
cwtl
and
outsb
add
xchg
pop
dec
ljmp
jo
loope
mov
pop
pop
daa
clc
or
ja
popa
mov
add
lock
in
jne
fisttpl
cmp
mov
adc
jge
into
xchg
lock
cmp
lock
pop
shrl
push
sar
push
inc
stc
mov
lock
nop
pop
pop
push
mov
fimull
cli
sub
xor
inc
arpl
push
xchg
xor
pop
adc
xchg
add
lds
push
mov
hlt
mov
push
mov
pop
sbbl
addr16
mov
adc
out
xchg
imul
mov
adc
addl
in
cmp
push
pop
negb
test
mov
test
jle
loopne
sub
push
cmp
testb
or
jne
test
push
lock
and
icebp
lcall
push
fmulp
sbb
pop
or
in
inc
mov
sahf
stos
out
sti
rcr
and
jp
mov
mov
insl
inc
dec
add
push
into
add
int
jmp
popa
mov
imul
dec
loopw
mov
mov
test
or
fcompl
push
xor
push
jl
push
leave
xchg
adc
mov
inc
and
jl
repnz
nop
jmp
sbb
fs
aam
mul
push
sbb
sbb
cmp
fiadds
loopne
pop
mov
loop
mov
pop
gs
jnp
fldl
rorb
xor
jl
test
cmp
movsl
push
mov
pop
inc
or
mov
mov
jnp
ret
push
flds
jecxz
sbb
xchg
xchg
popf
xchg
imul
fsubr
push
fldcw
movsb
jne
or
addb
jae
punpcklwd
sbb
leave
cmpsl
sbb
dec
aam
xor
pop
fs
add
lret
out
mov
ficomps
dec
cmpsb
in
or
push
fs
adc
fcompl
push
adc
add
out
js
ret
xor
test
call
mov
jmp
mov
cmp
mov
das
dec
mov
shl
add
shlb
mov
cmp
ret
push
lea
cmpsb
es
xchg
xchg
fwait
pop
and
adc
dec
jo
pop
jnp
mov
dec
adcl
jns
add
jge
push
push
xchg
test
cmpsb
adc
cmp
aaa
enter
mov
and
and
adc
stos
or
clc
inc
in
insl
sub
aas
movsl
push
out
mov
push
dec
cmp
lea
in
out
jno
bound
inc
jb
loop
add
stos
fsubp
in
mov
jns
lea
pop
and
cmp
rolb
pop
leave
mov
inc
subl
mov
out
leave
nop
mull
cli
outsl
jg
inc
cmp
add
jp
or
mov
bswap
aam
lcall
push
xchg
in
gs
inc
mov
push
inc
mov
sub
pop
push
add
aaa
aad
xor
or
sub
mov
mov
lods
sarb
pushf
sahf
jns
lret
sub
lret
imul
xorl
xchg
ja
icebp
leave
mov
push
cmp
mov
add
xorl
in
mov
mov
jle
lahf
hlt
add
xchg
add
mov
insl
mov
fcom
nop
or
insl
fwait
mov
pop
jo
push
dec
xor
shl
lock
cmp
addr16
sbb
outsb
fcoml
xor
mov
test
addl
cmc
cmp
aas
imul
outsl
stos
pop
xor
and
xor
dec
adc
fmull
ds
or
adc
popa
sub
or
leave
adc
mov
enter
dec
xchg
lcall
inc
fildll
cmp
mov
shl
flds
subb
push
adc
dec
inc
sub
fldenv
or
cs
jne
aad
push
pushf
aad
into
movsl
or
or
mov
incl
mov
or
and
andb
dec
gs
test
or
mov
mov
lods
pop
mov
cmc
in
imul
mov
lods
add
pop
out
pop
xor
cmc
or
add
sbb
jno
xchg
push
add
xor
pop
jg
mov
outsb
add
fninit
imul
repnz
xchg
das
push
fwait
sbb
fistpl
pop
daa
imul
mov
ljmp
bts
rcll
mov
push
out
popf
jo
and
pop
call
test
and
adc
inc
cmp
into
aad
xchg
rclb
outsl
dec
sarl
mov
jg
inc
push
fstps
das
in
ret
cmp
pushf
sub
pop
enter
pop
loopne
and
push
inc
mov
sbb
sbb
pop
stos
push
out
testl
sbb
ficompl
xchg
ret
cmp
add
out
loopne
fadd
mov
dec
cmp
rcll
int
out
push
gs
add
cmp
mov
rcl
add
cld
push
sbb
fists
mov
jge
je
fdivr
outsl
pop
add
inc
and
adcb
test
adc
fcomip
adc
mov
jbe
sbb
faddl
pop
stc
jle
xchg
dec
pop
cmp
sub
xor
jo
sarl
aaa
jb
fidivl
or
jmp
jle
sbbl
loop
inc
dec
jmp
bound
sub
aas
popl
mov
dec
mov
cmpsb
cmp
lret
and
lcall
lahf
xchg
xchg
push
sahf
fidivrs
add
bound
imull
call
lcall
jp
gs
xchg
sahf
mov
shrb
jg
mov
mov
cmp
push
mov
or
lcall
lcall
ja
and
and
movsb
or
stc
ret
sub
arpl
rorb
xchg
or
mov
aam
test
sub
sub
jge
dec
and
into
mov
mov
mov
test
adc
fdiv
add
lds
dec
mov
mov
push
loope
mov
or
sub
push
dec
cmpl
out
push
mov
fbld
mov
lret
jg
push
in
mov
jbe
leave
test
mov
xchg
sub
lea
mov
dec
xlat
test
fld
ret
loop
jmp
das
dec
fs
inc
add
rorl
xchg
and
or
in
stos
sub
scas
inc
fdivrp
jae
mov
xchg
lods
repnz
pop
push
fcoms
mov
ret
clc
jle
and
jbe
xchg
les
imul
mov
lret
enter
iret
mov
dec
in
dec
outsl
mov
movsl
mov
add
cmc
add
xchg
hlt
mov
sub
mov
test
iret
mov
clc
shlb
pop
xor
pop
sub
popa
push
sub
mov
dec
fnsave
sub
lods
push
sub
popa
stc
adc
push
clc
movsl
fsub
loope
sbb
adcb
mul
sub
insl
lea
mov
dec
outsl
stos
and
pop
xor
mov
cli
pop
sub
push
sub
mov
outsb
cmpsl
cmp
fldl
xchg
add
push
iret
push
idivl
and
add
mov
shrb
inc
mov
adc
inc
and
mov
fbld
jge
xchg
push
mov
outsb
mov
mov
cli
jbe
stos
notb
cmp
dec
fs
lret
jecxz
jae
dec
sahf
cs
out
push
scas
shrb
cmc
pop
cld
mov
lcall
in
lcall
jbe
insb
inc
loopne
out
sub
adc
out
mov
jns
mov
cmpsb
mov
sbb
stos
int3
push
sbb
ret
fldt
and
dec
push
sub
push
divl
xor
inc
lds
pop
cmpsb
mov
leave
pop
stos
rorl
hlt
adc
cwtl
sub
xchg
mov
jb
and
adc
dec
mov
push
fdiv
scas
test
jbe
ja
aad
repz
mov
jge
lods
push
lods
outsl
into
lret
mov
scas
push
decl
imul
push
dec
cmp
sbb
add
mov
sbbb
jb
cmp
dec
shrb
jae
out
xor
shrl
lret
fnstsw
xchg
adc
cmp
ja
xchg
lcall
push
xor
add
ffreep
imul
pusha
xchg
adc
inc
inc
jb
fs
loop
loop
ret
es
mov
test
les
push
or
gs
jmp
add
cltd
lahf
adc
pop
jecxz
inc
movsl
das
add
pop
pop
mov
mov
fildl
arpl
je
rcll
and
mov
out
daa
and
sbb
out
call
inc
filds
jle
icebp
cwtl
fldcw
xor
outsb
pop
inc
xchg
push
mov
popa
mov
add
subl
out
mov
ljmp
fildll
mov
mov
add
pop
cld
inc
jns
mov
subl
add
add
cmc
dec
ljmp
dec
hlt
aad
cmp
mov
fisttpl
les
adc
xchg
cmp
into
sub
and
aaa
arpl
stos
jmp
imul
lcall
ja
xor
outsl
lods
in
fsubs
xchg
push
movsl
sub
mov
xchg
pop
ror
xchg
cs
mov
push
shl
cmc
dec
jbe
roll
int3
jmp
pop
int
lret
clc
add
pop
rcl
rorl
test
arpl
cld
loope
jp
es
hlt
lock
addb
shll
dec
enter
jle
js
mov
stos
add
jg
push
inc
mov
sbb
std
loopne
sub
jns
jl
loopne
lret
jle
ds
pop
in
cld
ss
xchg
pop
test
push
cmpsl
sbb
fprem1
fs
shl
out
pop
out
adc
fiadds
lcall
xor
xchg
call
jnp
adc
pop
lods
das
popf
mov
pop
jge
pop
xchg
adc
das
icebp
mov
xor
inc
decb
jo
icebp
cmp
shlb
mov
jl
mov
mov
sbb
add
xchg
stos
adc
mov
sbb
scas
aad
sahf
fmuls
test
push
jmp
lods
cmp
int
push
xchg
xor
rolb
lahf
inc
jae
dec
add
ret
xor
xchg
inc
push
add
ss
push
sbb
out
fcmove
push
std
cmpsl
push
aaa
insl
mov
cmpsb
hlt
push
movsb
pop
cmpsb
shll
ret
or
or
xor
neg
cmp
mov
mov
nop
movsb
fcomps
mov
jle
sub
fwait
mov
add
lds
xchg
flds
repz
call
mov
or
sub
sar
das
je
or
shlb
cmp
mov
pop
mov
cld
ret
xlat
push
jecxz
fsubrl
sub
dec
lret
ret
xchg
mov
mov
inc
mov
repz
jb
or
xorb
mov
ss
lds
mov
push
iret
gs
xor
lock
out
dec
sbb
into
xchg
push
outsb
cmp
mov
fs
outsb
lcall
mov
mov
or
test
call
daa
sahf
data16
pusha
inc
dec
stc
sub
fcoml
insl
jp
cmpsb
add
mov
pop
fmul
jae
repnz
fnstenv
fidivs
fiaddl
inc
sahf
and
inc
fnsave
fildl
xchg
test
scas
push
cltd
das
sub
dec
inc
jno
nop
push
or
imul
std
add
adc
insb
and
cltd
test
pushf
negl
ljmpw
daa
rolb
push
dec
testb
sub
mov
inc
dec
ret
call
push
adc
pop
jne
xchg
lea
jnp
xchg
xchg
push
adc
pop
add
mov
pop
sbbb
dec
lds
lock
std
mov
jne
movsl
js
mov
inc
adc
cmp
andl
cmp
outsl
jp
enter
test
push
nop
adc
xchg
lods
cltd
pop
add
in
fcmovbe
leave
pusha
les
xor
les
adc
mov
xlat
xor
imul
cli
jnp
cmp
jnp
negl
sub
out
jb
push
mov
bound
jecxz
adcl
jl
and
movsb
imul
sbb
xchg
stos
pop
jne
iret
icebp
scas
mov
mov
cmp
icebp
fstl
xchg
mov
stos
mov
fwait
cmpsl
add
mov
cs
cmp
out
fs
jno
push
into
pushf
xchg
pusha
jno
imul
lods
cmp
adcb
fiadds
fmul
push
dec
rcrb
jbe
into
es
sub
pop
ret
or
cwtl
lahf
push
pop
lcall
fs
ret
cmp
std
mov
cmpb
rclb
xchg
xchg
push
cli
xor
in
cmc
inc
jo
int
arpl
mov
pcmpeqb
repnz
fdivrs
js
dec
inc
int3
outsl
adc
test
sbb
les
add
cld
push
push
sarl
pop
sub
iret
in
cwtl
enter
in
push
dec
pop
mov
dec
lea
mov
rorb
push
push
rorb
insl
or
pop
decb
ds
adc
rcrl
add
sub
cld
xor
jmp
nop
fwait
xchg
push
mov
xchg
or
lods
mov
and
pushf
cld
pop
pop
insb
popf
cli
shrl
sub
fldenv
gs
clc
shlb
xor
cmpsl
sbb
int
push
mov
scas
adc
jae
adc
lods
push
aam
sbb
push
lods
repnz
pop
sahf
add
sti
inc
sbb
push
rcpps
add
lret
push
cmpsl
test
mov
and
das
and
in
push
fs
fcomip
fisubs
ja
xor
arpl
icebp
repz
stos
repz
mov
adc
not
jg
xchg
inc
pop
fdiv
int3
sbb
movsl
cmp
pushw
iret
hlt
daa
sarb
cli
cmc
dec
out
or
or
jg
cmc
fisttps
mov
sub
pop
add
loopne
jp
std
fimuls
mov
fstl
or
jmp
fisubrl
enter
mov
dec
cmp
outsb
ret
ret
mov
jge
imul
xchg
negl
push
enter
inc
out
shrb
jno
sahf
mov
xor
arpl
and
leave
jbe
adcl
orb
push
ret
iret
jno
popa
cmp
in
xchg
mov
mov
fwait
in
rol
loop
fiadds
cli
pop
dec
movb
icebp
shlb
jne
fbld
sbb
ret
mov
icebp
mov
shrl
ret
inc
mov
pop
sahf
mov
fidivs
incb
add
hlt
cmpsl
int3
in
in
adcl
mov
in
cmpsb
cmp
insb
in
in
or
int3
sub
imul
push
jne
cwtl
or
movsb
and
sbb
cmp
popa
mov
ss
mov
or
add
sbb
or
stc
dec
pop
ret
enter
std
dec
dec
inc
test
xchg
mov
inc
ljmp
sub
xchg
aad
push
cmp
sbb
sahf
mov
punpckldq
pop
ss
sbb
clc
sub
and
xor
movsl
out
sbb
cmp
scas
lret
jns
cmp
mov
iret
adc
std
mov
rcrl
js
pusha
and
sti
sbb
aam
inc
or
insl
stos
jo
pop
and
push
inc
lret
ret
push
fmull
iret
scas
cmp
sbb
cmp
fistpll
and
inc
jmp
cld
aad
fsubrl
inc
sub
orb
aam
cmp
out
lea
xchg
cmp
jecxz
subl
and
dec
jp
lds
popa
cmc
rclb
mov
cmp
stos
push
or
out
inc
jns
aad
shl
pop
out
sub
and
or
lahf
jbe
das
pop
push
scas
popf
out
and
dec
jnp
repz
lds
je
push
xorb
leave
push
xor
in
lcall
fdivs
lcall
shll
and
xchg
inc
jmp
cmp
pop
pop
fldl
mov
icebp
sbb
cmp
inc
in
xchg
imul
out
test
ret
and
outsb
andl
push
std
add
jmp
outsl
in
dec
movsb
int
mov
aam
test
cmpsl
test
push
fiaddl
xor
sub
add
or
mov
pop
popl
push
sbb
in
mov
les
pop
adc
mov
call
cmp
add
loope
jne
mov
cmp
add
xchg
push
pop
jge
push
mov
jnp
daa
movsl
jmp
repnz
push
mov
ret
movsl
stc
mov
push
cwtl
push
add
lcallw
sbb
cmp
dec
testb
shlb
andl
inc
testb
dec
dec
mov
xor
lds
push
xlat
repz
mov
xchg
mov
jns
cltd
xor
mov
mov
cmp
pop
and
es
loope
jle
mov
ljmp
stos
fsub
cld
and
sub
mov
or
xor
and
mov
test
es
iret
inc
cmpsl
outsb
mov
or
jb
mov
insl
mov
stos
mov
stc
and
adc
push
sub
pop
insl
push
push
cmp
loopne
imul
push
jb
adc
adc
and
insl
int3
push
xchg
aam
lods
clc
mov
xor
mov
cmpsl
hlt
call
jbe
xor
nop
and
inc
mov
in
cwtl
test
push
in
sbb
aad
and
sub
mov
sbb
mov
push
ja
popf
out
sbb
test
into
sub
cmpsb
mov
or
mov
rcr
out
jp
mov
push
pop
sub
clc
and
rcl
adc
ror
cmp
mov
mov
lahf
shl
xlat
mov
dec
add
mov
mov
fcmove
lea
cld
inc
push
call
dec
daa
push
movsb
insl
icebp
cmp
xchg
mov
mov
jmp
lret
push
dec
cmc
into
cli
sbb
in
lcall
add
pop
add
test
cli
sub
test
dec
push
lods
and
xor
pop
mov
ret
and
repz
mov
add
mov
test
and
mov
test
out
mov
insb
cmp
sarb
xor
xor
lock
sub
fimull
je
pop
aas
cmp
xchg
arpl
sbb
pop
ret
jo
mov
xchg
scas
fidivrl
ja
les
ljmp
cmpsl
rcr
pop
xchg
push
pop
call
stc
inc
sub
or
inc
push
stc
out
jle
pushw
mov
inc
adc
das
sbb
aam
adc
std
js
or
mov
push
call
mov
xor
push
fidivs
rorl
hlt
sbb
sti
movsl
dec
cs
sti
fcomp
sbb
lret
in
popf
dec
mov
ljmp
dec
push
sbb
push
dec
lahf
cmp
inc
mov
cmc
popa
sub
adc
scas
cmp
test
pop
dec
cmp
into
mov
les
xchg
add
adc
adc
insb
mov
mov
into
push
and
push
push
mov
sbb
aad
leave
mov
stc
pushf
xchg
or
aaa
rorl
cmc
cmc
cld
mov
cmc
sti
icebp
jmp
xacquire
inc
fdiv
jae
dec
sub
mov
add
fadds
outsb
push
outsb
pop
je
imul
xchg
or
mov
dec
hlt
es
inc
fsubrl
mov
mov
dec
dec
call
mov
or
hlt
js
and
mov
cwtl
push
and
sub
push
mov
and
dec
jp
test
pusha
pop
mov
ret
loope
je
lock
pop
mov
mov
fdivr
testl
out
pop
sti
hlt
ret
fs
mov
fidivrl
test
xchg
push
stos
adc
scas
dec
jne
mov
xchg
test
add
test
test
pop
sub
push
xor
faddl
pop
enter
out
or
or
ret
add
and
call
in
xor
push
int3
imul
int
xchg
xchg
adc
mov
sbb
jmp
outsl
mov
and
movsl
out
sub
dec
cmpl
pop
sub
pusha
and
cmp
sbb
inc
xor
adcl
negl
mov
xchg
jmp
mov
pop
xor
pushf
jnp
pushl
jmp
or
add
jnp
xor
nop
xchg
dec
loop
shll
xor
push
orb
mov
outsb
ret
xor
test
mov
pop
pop
mov
push
insl
cmpsl
jg
pusha
mov
aad
movsb
dec
int
pop
push
bnd
adcb
es
mov
andl
in
jmp
jae
lods
movsl
cli
add
in
jecxz
add
pushf
fsubrs
enter
and
cwtl
les
arpl
loop
or
sbb
adc
lret
add
and
pop
mov
idivb
inc
xor
mov
aas
pop
cmc
inc
jp
leave
sub
sbb
add
mov
inc
cmpsl
movsl
ret
test
lock
push
cltd
xchg
test
lret
jge
nop
icebp
xor
les
imull
cmpsl
sub
leave
jbe
out
divb
movsl
xor
fcomps
fsubr
mov
or
stc
sub
jl
aas
call
dec
idiv
add
imul
pop
mull
ja
cmp
sti
call
cbtw
xchg
xchg
or
inc
hlt
in
outsl
adc
mov
pusha
scas
dec
clc
rcrl
lds
push
jno
jo
repnz
and
ret
lret
int
xchg
dec
add
fnstsw
mov
mov
xor
es
cmpb
mov
push
dec
test
cld
les
sbb
sub
jmp
sar
loop
jmp
ret
sti
sarb
aad
inc
cmpsb
nop
mov
pop
add
movsl
sub
sahf
orl
mov
add
dec
sub
stc
mov
rep
push
movntps
push
and
jne
jbe
in
ffree
jo
lock
sahf
inc
fsts
addr16
call
fdivrp
dec
test
add
xor
dec
mov
sbb
xlat
jmp
xchg
mov
jbe
sbb
xor
movsl
sti
xor
adc
insl
ljmp
cwtl
cwtl
sbb
cwtl
imul
push
fdivl
or
movsb
imul
jno
mov
or
and
rcr
into
out
add
pop
inc
cli
jmp
pop
cmp
mov
bnd
pushf
aas
xchg
inc
adc
pop
push
dec
out
dec
jo
xlat
mov
es
dec
jbe
clc
insl
imul
mov
mov
add
les
loopne
mov
xor
mov
inc
sbb
lret
loope
cmp
loope
mov
popf
icebp
inc
rcr
fsubrl
movsl
aas
sar
ret
mov
mov
push
mov
sbb
sub
jl
xchg
outsb
pop
cmp
scas
lret
imul
jmp
dec
push
push
test
push
inc
pushf
pop
ds
sbb
inc
add
push
and
dec
push
aaa
xor
gs
arpl
nop
int
daa
insl
adc
lahf
or
arpl
add
sbb
clc
sbbb
and
shll
mov
xchg
add
fs
aaa
pop
push
arpl
and
cmp
scas
out
or
bound
adc
les
sarb
sub
in
adc
inc
and
pop
and
fisttpll
jno
jo
scas
mov
dec
out
cwtl
and
and
or
in
xchg
sbb
inc
pusha
das
or
and
addr16
and
dec
sbb
mov
sbb
xchg
movsl
push
mov
dec
mov
stos
repnz
adc
fcmovnb
aaa
push
aam
pop
or
ds
fisttps
sub
push
mov
jb
hlt
push
fidivl
cmc
xor
and
sub
lods
cmp
xchg
stos
in
dec
push
jecxz
xchg
outsb
or
movsl
mov
cld
push
mov
fistpl
sbb
adc
movsl
mov
pop
leave
loope
movsb
cmpl
loopne
aad
fldl
cltd
lds
or
jb
int
sbb
nop
stos
iret
aas
push
xlat
or
outsl
mov
mov
js
or
insl
test
mov
sub
add
shlb
dec
sub
jle
lods
sbb
lea
lcall
fwait
or
xor
enter
adc
rorl
lds
cmpsb
xchg
push
sar
scas
jecxz
enter
pop
std
leave
test
inc
mov
fisubl
and
sub
int3
add
js
and
fisubrs
jmp
dec
mov
imul
pop
orb
add
sbb
ret
xchg
cmpsl
cs
loopne
jle
push
jmp
insl
mov
in
fcoml
fildll
adc
mov
cmp
xor
jle
mov
pop
or
incl
cmp
sbb
insb
lcall
mov
fsubrl
inc
cli
lods
pushl
cmp
inc
lret
xor
add
or
into
dec
push
jne
ret
inc
xor
sbbl
jbe
repz
aad
mov
mov
mov
icebp
push
aas
add
je
lea
or
xchg
hlt
in
push
adc
xor
stc
and
mov
repnz
leave
add
shrl
pop
sahf
pushf
jmp
jae
dec
push
out
pop
jecxz
or
addb
jno
xor
decl
sbb
add
fnsave
lret
add
cmp
popf
jno
fdivr
pop
lods
xchg
gs
or
mov
sbb
add
sub
lock
jae
pop
movsl
sub
fnstsw
fucomip
stos
call
and
push
je
mov
insl
adc
pop
scas
xchg
int
xchg
in
cwtl
or
sti
xor
bound
inc
cmpsb
call
mov
cld
in
mov
cli
push
fisttps
data16
inc
xor
jne
mov
scas
or
cmp
negl
push
dec
popa
lret
subl
mov
jb
sbb
cltd
push
js
lret
clc
lahf
sub
fsubs
dec
insl
sbb
dec
or
daa
cmpsb
sti
pusha
push
in
inc
inc
out
mov
push
cld
dec
jecxz
sub
sbb
inc
inc
inc
adc
stos
in
xorb
loop
or
daa
stos
ljmp
mov
lea
pop
or
orb
cmpsl
loop
repnz
xor
adc
clc
jmp
insl
ror
int
mulb
cli
or
cmpsb
sub
xor
lock
mov
fwait
test
mov
imul
mov
das
in
sbb
mov
out
out
or
std
push
ret
pop
add
adc
lret
or
mov
test
cmp
mov
adc
dec
imul
and
xor
push
imul
orl
adc
sbb
and
mov
jne
pop
cmp
aas
mov
push
lcall
into
pop
mov
in
inc
scas
ss
in
mov
add
pusha
iret
out
and
mov
and
and
jb
sub
loopne
push
sub
movsl
inc
inc
lahf
cmp
sub
popf
aad
jae
sbb
push
decb
mov
sti
jo
jp
hlt
xchg
xchg
jecxz
repnz
sbb
imul
mov
arpl
pop
subl
andl
jns
outsb
or
cmp
adc
daa
and
leave
and
sub
ret
xchg
push
or
shlb
lret
inc
xor
lds
xor
aad
sub
and
push
xchg
and
jnp
sar
fcoms
bound
push
inc
sub
sbb
scas
xchg
adc
sbb
aad
outsl
ret
mov
lea
pop
adc
sahf
inc
and
lret
xor
adc
sar
sub
push
mov
sbb
sub
test
dec
adc
shl
and
mov
cmp
cltd
dec
leave
cmpsb
or
stc
mov
inc
jmp
push
popf
das
mov
jl
les
jo
cmpb
mov
ret
outsl
jecxz
push
iret
into
sbb
or
jne
mov
dec
xchg
lahf
aad
mov
lock
jne
std
sub
add
pop
test
and
and
mov
and
pop
insb
mov
mov
push
inc
in
insb
ret
insb
mov
aad
imul
add
imul
leave
xchg
sub
arpl
inc
dec
mov
push
push
mov
jp
sahf
loope
mov
mov
repnz
es
lods
fisubrs
mov
mov
add
cld
add
jecxz
shr
push
leave
cmp
rolb
fwait
cld
addr16
stos
int3
lcall
adc
pop
mov
cwtl
mov
ja
aas
notb
sbb
aaa
repnz
jmp
sub
sub
xchg
mov
dec
shll
dec
dec
scas
or
jbe
adc
cmp
jbe
mov
call
