push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
add
mov
cmc
mov
mov
jne
outsl
pop
iret
ljmp
fiaddl
jnp
into
rolb
pop
sub
aaa
sbb
mov
push
add
leave
mov
andb
test
and
in
push
in
and
out
cmc
aaa
pop
add
ficompl
jl
mov
sbb
ds
or
mov
or
add
xchg
repz
sub
mov
mov
out
and
add
jnp
imul
inc
inc
std
dec
loop
dec
ss
mov
cli
lea
rol
inc
and
cmp
mov
inc
lock
xchg
dec
cmp
ja
xchg
lds
test
mov
test
add
ljmp
sbb
out
inc
lahf
les
mov
and
add
addl
pop
jp
mov
cli
inc
cld
mov
inc
std
jl
xchg
lods
inc
jge
mov
inc
mov
jg
cmpsb
out
mov
adc
jmp
shl
mov
and
pop
push
mov
mov
jbe
or
sub
xchg
jbe
mov
cli
and
mov
mov
cmc
and
les
out
and
fwait
cmpl
aad
jle
cmc
pop
icebp
pop
imul
insb
or
jns
movsb
add
popa
loope
xchg
push
and
mov
xchg
stos
add
daa
pushl
lock
lds
pop
pushl
cmpsb
inc
cmp
jne
ficompl
lods
xchg
enter
pop
xchg
popa
sub
outsl
dec
into
scas
lods
fsubp
and
jl
pop
dec
dec
lods
mov
dec
les
add
sub
push
aas
xor
ret
shrl
jnp
cmp
cwtl
addb
movl
ja
push
add
shrl
insb
pushf
ds
gs
insl
div
pop
and
adc
pop
movb
data16
fldt
push
loop
decl
into
cmp
loopne
out
jg
mov
stos
pushf
jmp
cli
cmpsb
ss
test
filds
imul
jg
or
aad
daa
cltd
sub
fucomip
sub
dec
test
sub
fnsave
movsb
add
shrl
bound
loope
cmp
push
lock
xchg
out
outsl
mov
ja
inc
cmpsl
test
cmp
daa
push
push
sub
add
push
pushf
adc
inc
lret
jle
cmpsl
push
pop
mov
and
and
adc
dec
repnz
pop
cmpsl
adc
fs
inc
gs
outsl
mov
les
or
xor
or
addr16
cmp
xor
mov
sub
mov
sub
mov
xor
in
stos
out
adc
nop
mov
out
dec
pushf
in
or
inc
les
popa
jecxz
scas
add
jo
mov
xchg
mov
loop
jmp
dec
movsb
jl
sbb
out
and
popa
or
or
rorl
jmp
jecxz
loope
fs
pop
popa
jmp
add
lods
xor
dec
mov
ja
pop
into
mov
outsl
jne
or
push
scas
nop
repnz
jb
out
jecxz
xchg
lods
mov
daa
adc
adc
repz
mov
aaa
cltd
fcomps
add
sahf
insl
push
dec
push
mov
sti
rcrb
jno
mov
sbb
test
popa
adc
cmpsb
xchg
push
pop
add
repnz
insb
movsl
repnz
clc
mov
sbb
push
fdivl
dec
pop
arpl
shll
cmp
dec
movsb
jge
mov
stc
repz
test
inc
orb
mov
add
cmc
cmp
xor
enter
pop
mov
add
enter
das
mov
and
std
mov
fdivrl
sbb
cli
shrl
inc
and
in
and
test
not
test
cmp
push
loop
mov
mov
mov
les
and
jae
cmpl
cmpl
jbe
sbb
sub
in
xchg
add
daa
jnp
loop
test
in
pushw
leave
in
or
test
jmp
jmp
mov
aas
mov
repz
bound
inc
add
out
dec
jnp
test
fdivrl
adc
jae
fs
adc
jmp
dec
push
lcall
test
fwait
lods
xchg
cli
cmp
cmp
push
push
sub
loop
pop
outsl
sub
imul
dec
enter
jg
repz
push
cmp
sub
test
xor
xchg
and
inc
jne
xor
imul
in
insl
test
xor
inc
test
mov
imul
and
cmp
jmp
sbb
icebp
outsb
scas
repnz
add
add
dec
adcb
outsb
mov
add
hlt
loop
xchg
cmp
add
inc
cli
rorb
testl
icebp
fwait
mov
shl
and
ljmp
push
push
data16
lcall
xchg
xor
pop
cmp
mov
test
pop
sub
and
pop
clc
xor
jae
int
inc
in
cmpsw
sub
lahf
add
xor
imul
mov
mov
hlt
sub
xor
cmp
dec
sbb
push
push
bound
dec
dec
sub
pop
push
sub
lds
push
pop
xchg
dec
lahf
and
xchg
into
and
jle
xchg
mov
pop
push
cmpsl
adc
cmp
or
iret
dec
inc
test
insl
push
push
pusha
shll
shl
push
cwtl
test
pop
xchg
sub
icebp
xchg
and
add
adc
mov
lds
push
mov
outsl
and
movb
add
cmc
sbb
push
adc
xor
js
mov
sarb
ljmp
sub
pop
push
add
cmp
xchg
mov
pop
sub
lahf
aam
arpl
sbb
adc
mov
gs
andb
cmpsl
push
aas
inc
aad
push
loop
loop
and
mov
ds
jge
adcb
xor
cltd
sub
jae
mov
push
mov
adc
rclb
add
inc
jne
movsl
pop
movsb
call
imul
sbb
jne
int
inc
push
inc
imul
addl
lods
push
addr16
add
mov
push
movsb
popa
loope
mov
sarb
fxch
xor
mov
testb
mov
mov
rorl
xlat
cmp
insb
stos
pusha
pop
xor
adc
sbb
inc
jne
lea
aam
fsubrl
adcb
stc
aas
repnz
outsb
mov
shlb
shlb
frstor
les
inc
jp
sti
jns
jns
lds
subb
add
add
fldt
popf
sbb
sbb
add
sub
or
push
outsb
xchg
ds
add
mov
lds
out
dec
add
jno
pop
adc
jmp
aaa
mov
stc
out
test
and
push
inc
shll
fldcw
xlat
push
pop
out
push
sub
roll
pushf
enter
xchg
adc
mov
cwtl
sub
sbb
int
add
roll
and
sub
dec
les
sub
leave
pop
js
loope
jp
ret
dec
and
stos
push
mov
xchg
add
xlat
or
sub
and
adc
icebp
jg
popf
movsl
lahf
fs
add
fcomp
jge
push
bound
cmp
arpl
ss
jbe
mov
add
add
gs
lahf
or
mov
lods
and
xchg
into
fbstp
mov
fwait
inc
mov
xor
mov
adc
inc
pop
iret
cli
or
andl
outsb
fdivrs
mov
stos
sub
pop
sarb
sbb
inc
push
push
and
int
rorb
jns
inc
pop
add
add
add
jge
fcoms
ljmp
pop
pop
pop
jl
test
shl
adc
or
mov
mov
push
ljmp
push
push
xchg
sub
dec
mov
mov
pop
jo
push
js
lock
mov
xchg
xor
mov
push
fstps
scas
add
outsb
lahf
mov
stos
imul
ja
std
adc
or
and
add
add
push
sub
popl
cwtl
les
sbb
dec
pusha
nop
mov
xor
mov
and
loopne
popf
adc
lea
sbb
in
fs
fmulp
xchg
jecxz
pop
pop
fsubs
aam
repz
xchg
xchg
rcrb
dec
mov
sub
pop
ljmp
cs
push
enter
nop
stos
xchg
rcrb
inc
mov
dec
jae
adc
jmp
les
sub
add
inc
fcoml
test
pop
or
pop
popf
jae
add
sbb
imul
mov
jg
jp
mov
sbb
js
data16
cld
xor
int3
jle
push
dec
mov
lret
bound
nop
bound
cmc
xor
out
and
out
mov
mov
hlt
cmp
lds
lahf
xchg
push
add
fstps
mov
aam
or
addr16
push
or
dec
mov
insl
aaa
dec
mov
out
in
orl
add
mov
add
clc
std
and
jne
cmc
jg
jmp
xchg
add
jmp
or
mov
jbe
or
test
stos
and
xor
iret
sbb
jnp
out
rorl
lods
and
in
mov
sbb
imul
xor
dec
sub
mov
inc
ret
mov
xchg
lea
push
dec
dec
pusha
int3
int
repnz
xor
mov
mov
pop
sbb
xor
dec
fldl
add
mov
adc
mov
dec
sahf
mov
lock
cmp
and
insl
dec
dec
mov
sbb
mov
jecxz
mov
mov
xor
sbb
jnp
pop
xchg
insl
sub
out
insl
mov
imul
sbb
pop
test
es
pushf
lods
mov
cmpsb
jno
pop
or
aad
into
add
add
push
sbb
push
xchg
out
push
repz
ss
mov
aam
mull
xchg
int3
pop
mov
pop
ret
adc
mov
sahf
cmp
or
or
cwtl
cmp
lahf
test
hlt
add
popa
jmp
jnp
push
and
cmc
dec
pop
push
inc
pusha
repnz
in
xor
mov
cli
frstor
pushf
jecxz
inc
in
sub
push
jmp
insb
sub
add
push
cmpsb
loop
leave
jbe
mov
pop
fmuls
scas
testl
xorl
xor
jmp
or
sub
or
jb
and
rcl
xchg
mov
xlat
imull
push
or
push
jne
mov
cwtl
sub
fsubl
cs
fistps
xor
in
int3
int3
sub
push
in
repz
sbb
xor
add
mov
aam
mov
mov
insb
and
and
les
outsl
insb
inc
xchg
jno
add
addr16
jecxz
testb
int
cmpsb
dec
add
es
add
xchg
ret
int3
loope
mov
xchg
push
arpl
mov
lret
jmp
mov
dec
enter
adc
dec
ds
add
shrd
push
adc
enter
out
add
pop
mov
inc
push
rcll
cld
sbb
movsl
push
and
xchg
iret
cltd
pop
sub
shl
flds
xchg
test
fiadds
sbb
cwtl
ljmp
popa
adc
dec
xchg
test
iret
or
cmpsl
cmp
cmpsb
jns
pop
add
sub
adc
add
rcrb
lods
test
add
or
pop
cld
or
dec
add
add
or
sahf
mov
mov
call
test
xchg
cs
mov
ja
or
inc
inc
mov
pop
push
mov
gs
xchg
sub
dec
mov
stos
std
jl
mov
cltd
ret
adc
out
xchg
cltd
mov
push
and
xchg
or
fidivrs
add
sbb
xchg
and
sahf
cmp
sub
mov
sub
cwtl
and
jp
ljmp
and
fisubrs
sub
clc
push
pop
out
mov
aas
mov
cwtl
loop
inc
pop
dec
push
pushf
mov
mov
loopne
and
mov
pusha
xor
nop
lret
add
adc
sbbb
imul
shl
sti
pusha
sbb
adcl
jae
and
repz
jle
vmread
xor
xchg
lods
mov
mov
fsubrs
and
shll
adc
jecxz
jbe
ja
lcall
repnz
std
outsl
push
add
aas
repz
mov
int
xorl
lahf
jne
sbb
jmp
hlt
cltd
push
cmpsl
fwait
mov
xchg
mov
jbe
mov
into
popf
test
add
fimull
pop
jo
stos
outsl
or
scas
into
xor
sbb
xor
into
addr16
sub
ljmp
xchg
or
adc
dec
enter
sub
sbb
movsb
in
pop
xchg
adc
insb
mov
push
dec
mov
sub
adc
stos
cmp
jmp
divl
leave
sub
dec
sbb
scas
or
sarl
cmpsl
cmc
insl
add
add
mov
loop
subb
pop
xchg
scas
mov
xchg
insb
pop
cltd
mov
aas
jno
shlb
xchg
xor
sahf
aas
out
fwait
cwtl
sub
push
roll
jns
shr
or
mov
pop
add
into
das
sub
dec
mov
shl
sub
stos
xor
fistpl
cmpsb
imul
jmp
add
push
iret
aaa
ds
popaw
inc
dec
icebp
xor
push
add
push
mov
adcl
pop
ss
push
mov
sbb
mov
and
inc
aad
sbb
test
in
mov
cmpsb
mov
push
push
jno
add
sahf
mov
mov
out
lods
push
mov
jmp
push
cmp
jae
mov
scas
mov
inc
mov
or
rorb
scas
xor
add
sbb
cmc
cwtl
jmp
std
pop
pop
and
mov
jp
pusha
es
insb
push
xor
test
and
push
or
lock
jno
cmpsb
loope
jle
push
rcr
and
pop
jno
jle
push
mov
pop
daa
mov
pop
lret
xor
lahf
mov
pop
ja
xor
addr16
pop
fs
cmp
or
inc
stc
mov
xorl
add
mov
dec
jge
test
aaa
sbb
xor
xchg
call
cmp
popa
aam
mov
ja
mov
out
loop
icebp
cs
jmp
sti
hlt
push
adc
imul
mov
xchg
adc
cmp
mov
cmp
jecxz
xchg
mov
cwtl
loopne
cli
jp
loopne
les
ficoms
xorl
or
div
jno
push
popf
int3
and
or
cmp
inc
fistpll
in
push
shrl
rclb
jae
in
xchg
mov
incb
mov
pop
xor
xchg
lret
ss
xchg
mov
jne
test
insb
jb
cmp
loop
cld
cwtl
xor
lea
push
add
adc
fistps
inc
push
pop
add
or
fmul
add
loop
or
aas
lret
sub
cmp
cmp
fiaddl
cmp
repnz
jle
cs
pop
loopne
cmp
xchg
hlt
sbb
inc
cmc
ds
pop
push
into
aam
push
xor
lods
push
stos
push
out
dec
inc
cs
into
pop
jne
mov
ljmp
dec
cmp
mov
sti
rcll
ret
call
jp
sub
mov
cmp
scas
sub
loope
fbstp
pop
mov
das
xchg
lods
jne
sub
adc
rclb
outsl
jbe
mov
add
stc
jae
sbb
pushf
push
outsb
mov
xor
pusha
pop
sbb
pop
stos
mov
push
mov
aam
mov
jg
sbb
mov
jmp
add
adcb
mov
sbb
or
xchg
dec
or
je
cld
mov
aaa
mov
addr16
xchg
push
cld
pop
scas
push
xor
push
add
or
jmp
mov
mov
or
leave
or
push
push
gs
cld
idiv
out
add
loopne
xor
inc
or
pop
femms
ljmp
pop
adc
nop
rcll
pop
xor
lcall
stos
ds
xor
add
lea
mov
xchg
or
in
out
xchg
sbbb
push
jle
shlb
fcoml
xor
sbb
and
cli
mov
cmp
add
cmp
mov
xor
jp
add
xchg
mov
or
sbb
pop
addr16
xchg
and
out
lret
add
mov
out
inc
and
dec
call
jmp
in
fiadds
out
sub
ret
mov
daa
cld
inc
shr
jbe
pop
lds
xor
sbb
mov
hlt
inc
mov
repz
xor
add
lds
pop
ss
icebp
xor
cmp
negb
add
push
lret
add
arpl
ds
out
fs
std
pop
movsl
cmp
fisubl
ret
gs
dec
sbb
mov
sti
xor
lret
inc
add
cmp
clc
ja
xor
lcall
test
ret
popf
in
in
or
rorl
cld
sbb
loop
into
filds
push
sbb
fwait
xor
xchg
scas
xor
dec
mov
lock
enter
inc
mov
mov
dec
xlat
pop
sbb
xor
mov
xchg
lret
sti
dec
ss
cs
cmpsl
inc
cmp
lcall
pop
pop
popa
and
push
jae
ljmp
jo
enter
es
jae
aam
dec
hlt
dec
int
push
sbb
xchg
or
mov
add
adc
mov
or
and
imul
pop
stos
jecxz
fmull
push
pop
pop
inc
ss
mov
mov
pusha
pop
add
add
add
pop
push
xlat
outsb
int3
sub
insl
iret
sub
std
push
inc
and
push
cmpsl
xchg
sbbl
push
testl
jge
aas
adc
aad
sbb
or
stos
sub
cmp
push
test
rorb
iret
xor
sbb
sub
aad
stc
push
mov
stc
push
cmp
lods
or
push
pop
movsl
enter
jecxz
xor
xchg
add
inc
cmp
lods
jp
scas
ss
loope
jge
adc
xchg
or
jle
pop
adc
test
push
iret
sbb
data16
pop
test
shll
sub
inc
pop
pop
xchg
rcrl
cmp
rorb
add
bound
and
mov
aad
jle
aas
dec
and
mov
jecxz
rcrl
int3
out
stos
mov
repz
pop
adc
shll
push
add
mov
push
lret
mov
xor
xor
pop
fiadds
dec
xchg
xchg
cmp
jge
pop
push
lock
and
xchg
test
jecxz
or
test
push
enter
add
mov
cmp
lcall
cwtl
addr16
cmp
pop
mov
cltd
inc
popa
inc
mov
mov
addb
mov
pop
inc
lock
pusha
test
cmp
add
add
inc
inc
jmp
addr16
das
loopne
inc
xchg
jbe
add
out
sbb
or
jnp
sar
rcrb
cmc
mov
cmp
cmp
inc
fprem
push
fsubrl
or
movsl
or
jns
outsl
loopne
bnd
inc
pop
ljmp
fbstp
inc
test
pop
in
mov
mov
xchg
or
mov
rclb
sub
cmpsb
fwait
dec
insb
or
inc
pop
and
or
mov
add
inc
jb
inc
push
mov
mov
xlat
rcr
ror
out
pusha
test
imul
mov
jne
sbb
scas
jp
ds
adc
mov
rcrb
add
repnz
maxps
les
push
sbb
sub
jne
mov
adc
inc
enter
orl
sti
fwait
add
inc
hlt
mov
xchg
stos
jnp
addr16
rcrb
add
adc
mov
mov
lock
cltd
pop
shlb
push
or
adc
cmp
fwait
loop
mov
jg
push
pusha
adc
scas
mov
xchg
lcall
xor
xchg
pusha
icebp
push
mov
mov
das
xchg
jb
adc
sahf
mov
insb
out
in
push
fdivr
lcall
or
imul
and
adc
sbb
sbb
sub
add
lods
fs
push
jb
rcl
cmpsb
test
xor
loop
lea
inc
add
scas
sub
jno
dec
jo
xor
dec
ret
jne
js
popf
loop
cmp
xchg
dec
out
rol
mov
shl
lahf
jmp
or
push
mov
pop
loope
jg
lods
ss
adc
xchg
xchg
jo
mov
lahf
test
loopne
mov
sub
or
jo
mov
cmp
out
ret
push
xor
pop
and
fs
stos
xlat
mov
dec
mov
movsb
sahf
pop
or
xor
sbb
andl
push
clc
out
inc
into
sub
mov
icebp
or
test
push
arpl
mov
aam
mov
dec
je
ret
stos
mov
mov
mov
mov
in
addr16
in
jns
ret
mov
into
insl
xor
push
jmp
pop
mov
sbb
sub
dec
mov
ds
test
cli
jecxz
mov
dec
popa
ret
lret
dec
jecxz
data16
std
je
inc
xor
in
ds
mov
out
mov
pop
mov
aas
sbb
pusha
aas
or
mov
xor
xchg
aaa
sahf
add
add
fdivs
dec
insl
out
call
lods
mov
hlt
idivl
sub
roll
popf
in
pop
xor
push
leave
xlat
lods
das
pop
int3
pusha
adc
das
jl
adc
pop
insb
push
adc
pop
xchg
inc
dec
cltd
pop
insl
mov
and
jle
mov
popa
jp
int3
leave
push
lods
add
jo
add
cmp
notb
js
dec
mov
lret
jbe
test
movl
add
fiadds
xchg
or
sub
jmp
jae
popf
jle
cmc
pop
push
sub
cltd
dec
push
outsl
pop
std
test
pushf
mov
sub
jmp
jo
filds
push
cltd
pop
in
dec
lahf
into
mov
jb
mul
fwait
pop
inc
cli
xor
sub
sbb
adc
inc
mov
cli
and
inc
push
dec
into
sub
cmp
scas
call
add
mov
dec
and
push
es
dec
sbb
xor
sti
je
fisttpl
jge
pusha
pushf
andl
jmp
insb
iret
scas
jo
movsb
out
xchg
mov
pop
daa
or
int3
out
mov
jbe
add
rcr
daa
js
aam
fidivrl
subb
xlat
push
movsl
inc
cld
pop
scas
add
jae
pop
scas
pop
sar
jp
test
mov
fstpt
cmp
aas
add
lcall
nop
mov
je
xchg
and
mov
loopne
mov
out
or
adc
adc
sbb
cs
into
cmpsb
xor
or
and
imul
add
imul
test
fnsave
jecxz
pushf
inc
leave
roll
rcl
mov
cmpsl
lcall
mov
mov
mov
enter
lret
data16
add
aas
xlat
xor
jb
aad
and
ret
daa
push
sub
xor
cmp
idivb
inc
push
jnp
cmc
shlb
mov
mov
jo
inc
mov
cmpsl
adcl
mov
pop
inc
imul
and
xchg
inc
shlb
test
rcrb
push
mov
mov
iret
cmp
jecxz
imul
ljmpw
adc
test
mov
mov
jge
hlt
popa
mov
cltd
outsl
jnp
repz
and
repnz
mov
add
add
xchg
pop
aaa
dec
in
xchg
sub
ss
repz
mov
loope
cmpl
push
ljmp
imul
sbb
sub
jle
int3
mov
rolb
orl
fsubs
cli
scas
ficoms
clc
cld
js
jne
pop
xor
stos
mov
std
mov
sub
shl
sbb
cmp
lret
in
push
sti
test
inc
stos
mov
pop
rcrb
push
sbb
dec
je
cld
or
sub
rorl
dec
inc
andb
mov
insl
iret
testb
lcall
add
add
mov
push
or
adc
int
or
xor
xchg
test
sbb
test
cltd
mov
icebp
nop
mov
int3
inc
outsb
repnz
cmp
push
jbe
mov
xchg
mov
ljmp
pop
cwtl
xchg
test
jae
fidivs
adc
test
ss
loope
ljmp
addl
cmpsl
cmc
leave
in
add
add
aad
fsub
inc
add
les
icebp
in
out
push
cltd
adc
add
nop
xchg
lods
jmp
mov
mov
inc
push
sbb
xchg
xor
loop
cmpsb
pop
leave
cltd
mov
mov
ljmp
mov
jp
jb
ret
jb
push
scas
xchg
lea
xor
gs
in
push
add
add
hlt
pop
pop
ret
dec
push
hlt
jmp
into
movsl
mov
mov
jmp
xchg
cmp
in
mov
add
pop
sbb
fnstsw
jnp
call
fstpt
lods
xchg
lds
and
in
into
sbbb
leave
mov
int3
jae
loope
add
fdivrp
cmpsl
aas
loope
pop
push
int3
dec
scas
dec
in
add
int3
leave
lret
dec
roll
mov
push
xchg
inc
pop
sbb
sbb
out
scas
pop
rolb
mov
push
jno
mov
gs
dec
adc
mov
inc
adc
fdecstp
mov
sbb
cltd
out
cmpsl
lock
push
jns
and
xchg
iret
lahf
sub
fistl
enter
shrb
sub
mov
ret
sbb
pop
and
jmp
add
decb
add
mov
mov
hlt
stos
std
idiv
jne
jge
xchg
xchg
dec
nop
mov
aad
ljmp
out
adc
mov
pop
repz
dec
jno
inc
push
movsb
jno
or
jo
vpsrlq
xorb
fcmove
mov
xor
mov
sbb
test
fsubs
jle
push
xor
xchg
das
and
cmp
mov
xor
mov
test
pop
jns
adc
test
ss
pop
sbb
and
add
xor
test
test
out
push
xchg
jecxz
dec
jle
cmc
les
mov
xor
lods
xchg
mov
fldcw
push
cmp
dec
mov
lret
jle
ljmp
pop
sub
sub
rolb
loopne
rclb
out
imul
mov
xchg
out
in
cs
add
sbb
popa
in
or
jle
imul
lcall
popa
jp
inc
mov
sti
addr16
imull
jbe
mov
lods
or
or
mov
jne
test
xor
insb
loopne
jbe
inc
fdivs
ljmp
push
insb
add
xor
or
lds
and
cmpsb
push
mov
mov
jmp
add
loop
and
jo
insb
pop
adc
mov
shr
inc
xor
aam
mov
mov
xchg
inc
ret
les
movsb
cli
test
int
push
shrl
out
adc
cmp
loop
out
cld
ds
es
scas
mov
push
cwtl
fdivrs
push
adc
sub
insl
leave
xor
rcrl
ud2
rcrl
stos
int3
xor
aam
stos
push
sbb
scas
mov
icebp
mov
sub
in
and
add
xchg
mov
inc
lds
push
rcrb
pop
and
dec
push
cltd
cmc
adc
inc
fwait
and
push
test
nop
leave
daa
cld
mov
jno
test
sti
cmp
inc
enter
ljmp
and
or
jo
jns
push
jbe
faddl
ss
jne
flds
dec
cli
in
mov
lock
fnsave
jae
mov
sbb
add
add
pop
