mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
sub
push
mov
mov
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
mov
jmp
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
add
push
lea
push
push
call
add
pushl
lea
push
pop
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
push
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
ret
push
mov
mov
imul
sub
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
div
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
leave
ret
push
mov
push
mov
cmp
jb
lea
push
xor
mov
test
jbe
push
push
push
pop
sub
mov
mov
mov
lea
lea
mov
ror
imul
not
xor
mov
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
test
je
push
pushl
pushl
pushl
call
mov
mov
push
call
dec
jne
pushl
pushl
pushl
call
mov
pop
jmp
mov
pop
ret
jmp
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
push
push
push
mov
mov
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
push
push
xor
push
push
push
push
call
mov
mov
rol
mov
mov
cmp
je
mov
jmp
push
call
mov
mov
add
movl
mov
push
shl
add
incl
push
push
push
call
push
push
push
mov
push
mov
call
cmp
je
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
push
push
push
push
call
push
push
push
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
push
pushl
push
pushl
call
mov
mov
lea
lea
mov
add
add
mov
pushl
mov
mov
mov
mov
call
pushl
mov
mov
call
pushl
mov
mov
call
mov
add
lea
mov
pushl
and
pushl
pushl
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
jmp
add
add
add
pop
sub
cmp
sti
xchg
push
sub
stos
fnsave
icebp
outsl
or
jo
bound
into
loop
in
jge
mov
sbb
adc
adc
sub
scas
xchg
mov
mov
lret
and
mov
pop
mov
sub
sti
xchg
push
sub
stos
fnsave
icebp
outsl
or
jo
bound
dec
shr
imul
push
xor
loop
mov
jmp
fisubrl
cmp
cmp
pop
call
mov
pop
loopne
mov
push
ss
dec
xchg
inc
sbb
mov
daa
dec
push
ss
pop
and
sub
cltd
push
fs
dec
fsubs
and
sub
or
or
scas
xor
mov
sti
jae
cmc
lods
jbe
shrb
add
add
add
sahf
pop
mov
std
mov
sbb
shl
scas
out
mov
sub
imul
pop
cmp
pop
out
or
enter
shrl
jno
push
xchg
sahf
inc
push
dec
mov
ljmp
les
lcall
mov
push
push
jg
sbb
mov
mov
mov
std
dec
fs
mov
mov
mov
mov
loopne
jecxz
push
sub
add
add
add
add
jno
icebp
jg
loopne
cmp
test
pop
insb
dec
insb
mov
cli
imul
imul
repz
and
popa
outsb
pop
xor
mov
ljmp
arpl
jns
lds
outsl
inc
enter
xchg
fiaddl
repz
lret
jb
out
push
divl
sub
xor
js
cld
lret
and
outsb
fld
cwtl
cmpsl
sahf
bound
cmp
imul
divb
add
and
or
pop
adc
movsb
out
mov
xor
mov
xchg
sbb
mov
dec
push
mull
add
add
js
testb
jle
push
fs
push
aam
inc
cmpb
sahf
cmp
cmp
rorl
fdivr
mov
arpl
mov
lds
cmpsl
and
in
inc
mov
cmpsb
jo
xor
push
push
adc
dec
inc
aas
pop
cs
adc
add
addl
scas
push
jne
lcall
xchg
popf
iret
mov
push
sub
enter
ja
mov
movsl
fs
ja
test
jp
jo
sahf
mov
xor
gs
xchg
mov
sub
or
pushf
aas
jae
fisubs
jg
je
imull
sbb
adc
and
jno
mov
pop
jecxz
in
lcall
jo
dec
mov
xor
mov
add
sub
insb
xor
mov
and
mov
imul
pop
xchg
cmp
sahf
lret
js
int
daa
aas
pop
test
push
adc
sbb
inc
outsb
popa
imul
push
mov
cmc
inc
dec
aaa
inc
stos
cli
dec
lds
xlat
pushf
test
xor
lock
xor
bnd
pop
and
mov
vminpd
jae
arpl
and
mov
push
test
pop
jle
add
add
loop
outsb
sti
push
js
xchg
fadds
cmpsb
jbe
sub
dec
inc
adcl
sarl
jno
push
sahf
jae
inc
push
shll
mov
or
inc
jb
xor
into
mov
jmp
and
sti
aam
mov
inc
or
pop
jg
ljmp
adcl
das
int3
jmp
pop
pop
push
pop
ficompl
call
add
adc
lock
fcompl
mov
adc
fiaddl
pushf
ja
jbe
clc
or
lock
mov
sbb
pop
xchg
inc
in
mov
adc
fimuls
inc
cmp
mov
pop
shrl
addb
mov
mov
inc
inc
sbb
in
and
pop
pop
mov
pop
mov
inc
inc
mov
add
xlat
dec
add
adc
cs
repz
push
jnp
sbb
adc
pusha
or
push
lods
jne
rolb
add
add
or
rclb
sbb
into
fisubl
pop
cmpsb
pop
xchg
cltd
roll
dec
rep
xor
or
add
adc
test
mov
aas
mov
fstpt
or
add
lds
into
or
dec
and
mov
hlt
aaa
je
in
dec
pusha
or
add
sub
cwtl
mov
movsb
mov
test
sub
dec
sbb
add
mov
inc
lahf
sub
push
jl
and
sub
repz
dec
jo
adc
std
xlat
dec
jecxz
mov
xchg
nop
repz
lock
test
add
or
popf
cld
jge
mov
jno
lods
jno
test
jg
xchg
push
cmp
out
scas
sbb
inc
sub
inc
lea
mov
sub
pop
pop
pop
shl
icebp
hlt
jb
push
subl
add
add
jecxz
dec
test
pop
pop
ret
dec
mov
mov
jmp
loop
inc
ss
fsubl
imul
sub
or
mov
sub
ss
mov
int
push
mov
mov
adc
pop
ja
mov
xor
mov
test
dec
das
es
and
mov
aam
xchg
aam
cld
js
loope
or
add
push
dec
push
gs
dec
in
pop
icebp
push
sarl
mov
mov
cld
cmpsl
dec
in
scas
jle
mov
cmp
dec
mov
in
cli
lahf
xchg
mov
jle
pop
in
into
jb
jbe
inc
icebp
in
out
xlat
addr16
mov
ljmp
cmp
jp
clc
xor
adc
outsb
loopne
lods
outsb
iret
in
test
dec
push
push
loopne
cwtl
add
add
lds
adc
cld
push
xor
ds
add
pop
mov
push
fsts
fs
sub
sub
movsl
mov
add
testl
sub
lods
xchg
inc
jle
dec
pop
shr
xor
cmp
xorb
inc
push
cld
pop
lds
sbb
mov
add
pop
mov
mov
push
xchg
xor
mov
add
in
push
push
dec
cld
popa
mov
imul
mov
and
push
jo
push
les
inc
shll
test
push
rcrl
movsl
je
push
clc
jmp
add
test
out
sbb
xorb
scas
xor
outsb
inc
insl
out
pop
outsb
rcrb
cwtl
fwait
xchg
mov
ja
dec
and
scas
ficoml
add
aas
and
mov
jnp
or
lret
mulb
jmp
xor
xchg
push
js
cld
dec
xchg
push
push
lock
loopne
int3
leave
mov
ja
mov
pop
xchg
sbb
cmpsb
jbe
inc
pop
cmpsl
cs
int
push
ja
jg
jno
popf
sbb
shrl
xor
scas
aas
stc
cmc
ds
and
out
jno
mov
mov
mov
pushf
notl
xlat
clc
sahf
sub
roll
add
mov
imul
jnp
sub
jp
int
xor
das
and
insb
sbb
cmpsb
adcb
idivl
out
sti
xor
dec
and
sub
out
popa
jle
adc
out
lahf
in
mov
sub
je
mov
inc
into
or
ss
jb
jg
add
test
repnz
or
push
mov
push
jnp
add
aam
ds
repnz
repnz
ret
lcall
jp
pop
dec
xor
rorb
inc
jp
addr16
inc
sub
pop
ljmp
inc
or
mov
mov
jecxz
jp
out
pop
mov
and
xchg
in
pop
cmpsl
or
loop
or
sub
push
xchg
mov
outsb
mov
jbe
sbb
push
movsl
pop
out
sub
jmp
push
add
add
mov
repnz
aas
mov
or
mov
and
testl
add
xchg
cmp
and
push
and
pop
push
mov
mov
jp
xchg
mov
mov
je
test
call
xchg
push
and
sbb
adc
adc
add
in
js
push
xchg
hlt
mov
lods
lea
or
jns
aas
inc
fisubs
cmp
test
pop
stos
cmp
adc
dec
sub
cmp
jo
xlat
movsl
test
push
cwtl
and
das
lret
sbb
push
popa
or
cmpsb
ret
mov
inc
test
lcall
push
stos
pusha
frstor
sub
scas
add
ja
push
pop
jne
iret
lea
ljmp
push
pushf
stos
in
add
add
push
jg
int3
push
movsb
lods
dec
hlt
pop
adc
call
cmp
and
mov
fs
jmp
int3
insl
xchg
adcl
repnz
adc
cltd
pop
notl
push
adcl
push
bound
or
mov
dec
push
mov
add
xor
mov
jge
xchg
lods
jecxz
adc
dec
pop
mov
jp
test
jne
adc
loop
mov
jmp
add
iret
cmpsl
popf
repz
dec
inc
filds
dec
xchg
adc
mov
push
jmp
push
adc
dec
jb
aam
pop
pop
hlt
jge
pop
add
cmp
or
pop
sub
hlt
inc
jno
sahf
and
xchg
enter
shll
jo
out
jae
jne
ljmp
pusha
push
repnz
arpl
adc
push
cmp
adc
and
add
stos
jbe
cmp
lahf
mov
and
lret
mov
nop
xchg
into
jnp
out
mov
bswap
subl
inc
add
dec
enter
into
aad
pop
lcall
xor
rclb
xor
cmpsb
cmp
pop
fldl
xor
in
fsubs
push
outsb
sahf
outsl
jmp
je
into
pop
xor
sti
jbe
sbb
lods
sub
shll
mov
add
add
jbe
push
and
mov
in
fimull
xorl
jb
add
push
repnz
add
mov
sti
pusha
mov
clc
mov
lods
cmp
pusha
gs
xor
inc
nopl
sarl
fidivrs
inc
mov
ja
xor
mov
xor
cmp
adc
repnz
jmp
push
loop
add
fdivl
inc
testl
push
push
xchg
js
xchg
outsl
sub
xlat
shrb
mov
mov
dec
push
cmp
sahf
pop
and
ret
divb
out
stos
and
or
mov
sbb
lods
dec
add
jge
lods
loope
mov
shrl
out
movsl
push
pop
jne
sub
lret
and
dec
loope
test
inc
lods
mov
in
aad
clc
enter
inc
jmp
loop
xorb
push
in
shl
jne
scas
insb
or
das
iret
das
movsb
push
push
pop
imulb
lea
mov
xlat
push
imul
imul
inc
dec
ret
adc
out
fmull
dec
sahf
or
mov
cmpsl
int
int
add
xchg
mov
xchg
pop
dec
jecxz
cmp
cld
inc
scas
sbb
pop
dec
ret
xchg
xchg
repz
cmp
lcall
dec
sbb
loop
fiaddl
add
je
lods
add
add
jmp
lods
cmp
stos
adc
pop
xor
popf
cltd
sarl
arpl
cmp
jp
mov
jo
jle
test
pusha
cmp
jp
rorb
xchg
int
cwtl
and
aad
and
or
cmp
lret
sbb
aad
pop
data16
test
cwtl
jo
xchg
fmuls
cli
mov
call
push
cmp
imul
inc
mov
add
dec
orl
mov
cmc
imul
jp
add
dec
jbe
imul
pop
xor
stos
cmp
out
or
adc
insb
fistl
out
das
push
lds
mov
lods
sarb
push
push
and
fsubl
outsw
cmp
movsl
fsubr
je
xor
movsl
loop
jl
call
xchg
add
push
xchg
insb
jae
push
add
add
aam
inc
jmp
add
lods
shrl
idiv
pusha
dec
dec
xchg
fucomp
aam
sub
mov
inc
loopne
mov
jnp
and
pop
push
ja
cld
xor
mov
dec
repz
scas
jmp
add
xor
rcr
aaa
fcmovnb
mov
push
sbb
lds
in
xor
aaa
cmp
rcll
pop
jbe
jl
and
ds
xor
mov
xor
add
add
nop
loopne
sbb
das
sahf
pop
subl
xchg
test
loopne
cmpsb
mov
mov
inc
out
push
jg
addb
push
push
mov
imul
jae
cltd
mov
mov
sub
xchg
pop
fwait
mov
pushf
dec
cs
test
fsub
push
ja
test
rorb
jb
cwtl
jo
fadd
mov
dec
insb
add
add
jle
xor
hlt
pushf
pop
mov
leave
out
push
fsts
mov
fidivs
pushf
mov
stos
inc
jae
scas
dec
in
mov
icebp
dec
add
sbb
dec
movsl
mov
aaa
sbb
imul
ret
lret
cmp
test
fistl
loop
sarb
nop
enter
cs
add
call
movsb
xchg
bnd
es
fcompl
sbb
add
rorb
out
les
pop
mov
test
xor
xchg
jl
xor
lods
dec
add
xchg
push
sbb
pop
jg
jb
fisttps
cli
sti
dec
adc
out
xlat
pop
jae
test
xchg
push
mov
mov
out
test
test
mov
add
mov
xor
ss
add
or
jo
sbb
jp
pop
int3
pop
roll
in
push
add
mov
pusha
or
in
pop
or
push
cmpb
andl
pusha
imul
jle
pop
imul
xchg
add
pushf
or
aas
loop
test
cltd
out
ljmp
or
fildll
mov
into
push
mov
inc
inc
lods
lds
xchg
mov
xor
adc
mov
aam
lock
imul
rolw
push
insl
aaa
adc
fcomi
in
jne
filds
roll
pop
mov
push
mov
adc
clc
pop
cmpsl
pop
jge
add
aad
push
fisubrl
add
mov
xor
mov
std
or
fldt
mov
les
iret
cmp
xlat
pop
stos
jno
iret
inc
pop
and
js
mov
jb
xorl
pop
sbb
add
cmpsl
cli
pop
icebp
add
iret
jmp
or
subl
jmp
mov
mov
and
nop
jns
or
xchg
inc
mov
push
xor
and
mov
mov
sbb
ss
push
int3
icebp
lahf
and
xchg
int3
enter
faddl
stos
stos
int
popf
xchg
jecxz
and
push
push
fistps
pusha
aad
jns
cwtl
inc
clc
dec
sub
pop
les
xchg
cmp
and
add
add
push
sbb
pop
popa
pusha
pop
orb
xchg
in
inc
xor
das
test
ficomps
cmpsb
pop
shl
fsubr
and
hlt
jae
push
adc
insb
inc
add
xlat
xor
or
std
push
or
sbb
popa
movsb
push
insl
xor
pop
xchg
xchg
fadds
or
push
insl
dec
add
test
popa
push
pop
and
mov
shr
lcall
lret
cmp
insl
ss
lods
loop
jge
xor
pop
inc
shl
repz
xchg
imul
aam
ret
shlb
push
cltd
imul
push
sti
mov
xchg
jge
dec
xchg
xchg
xor
mov
push
popa
mov
test
daa
stc
movsb
mov
xchg
cld
add
add
rcrl
cmp
mov
ret
jb
enter
bound
xor
mov
imul
dec
aas
jg
jbe
sarb
add
pop
mov
sub
sbb
push
pop
jno
js
adc
and
fsubrl
adc
mov
outsb
xchg
push
cmpl
mov
pcmpgtb
add
push
adc
dec
mov
inc
adc
aas
jno
dec
mov
scas
xor
imull
std
adc
popf
jo
fbld
in
xor
fwait
ror
lods
inc
or
rep
shr
dec
xor
adc
pop
and
add
mov
nop
lea
loopne
dec
mov
lock
js
xor
in
std
outsb
mov
xchg
jbe
subb
xchg
clc
outsl
outsl
jecxz
fiaddl
xchg
cmp
mov
enter
sub
ljmp
mov
sbb
mov
push
mov
cmp
out
xchg
jge
adc
gs
popf
movsl
mov
fnstcw
rcrl
push
mov
add
cmpsl
xchg
dec
xor
push
pop
call
mov
paddb
adc
mov
loopne
inc
ja
scas
adc
pop
add
loop
dec
pop
cltd
sbb
mov
push
xchg
mov
xchg
adc
mov
daa
cmp
into
ljmp
jno
std
aam
inc
inc
ss
lods
sahf
and
mov
test
push
dec
sub
outsb
and
cmpsl
and
mov
mov
mov
add
into
adc
test
imul
jecxz
sub
or
push
jecxz
lcall
cli
pusha
stc
nop
mov
mov
dec
repz
sub
inc
sbbb
jp
cmpsb
mov
test
mov
jl
pushf
mov
das
sub
jb
repnz
mov
and
add
int3
arpl
add
add
jbe
xorl
and
fwait
aam
jae
mov
fsubs
jp
stos
lcall
xchg
call
jge
xor
push
inc
std
or
rolb
ror
int
lahf
pop
sbb
xlat
sub
and
cmpsb
mov
arpl
mov
fdivs
mov
jg
sub
popa
pop
out
stos
mov
enter
gs
insb
add
pushf
xor
jne
in
lods
add
cs
insl
sbb
dec
or
push
cld
divl
xchg
es
cmp
dec
dec
std
jge
inc
stos
push
movsl
lahf
push
cltd
jae
sbb
pop
jecxz
mov
cmpsb
jmp
or
or
adc
jnp
les
jno
xchg
sar
add
imul
jge
xchg
fnstenv
sbb
sub
int3
cmp
lea
add
add
add
push
shrl
and
out
arpl
jns
ja
jae
sub
sbb
rolb
test
stos
inc
fwait
mov
mov
call
cmc
in
mov
and
aam
int
nop
sub
inc
add
xchg
gs
pop
popa
xchg
lahf
test
mov
data16
push
scas
lret
mov
cmp
push
jo
fidivrs
add
add
add
xlat
test
fstpl
add
or
mov
fs
adc
aam
test
pop
dec
stc
out
aam
out
enter
inc
push
xlat
lock
daa
mov
pop
cmpsl
sub
in
push
ret
lahf
cltd
outsl
loop
jne
lret
xchg
jo
scas
sbb
xor
xor
addb
inc
and
pop
lahf
mov
sbb
in
pop
cs
movsb
xor
jp
mov
cmp
add
add
mov
jnp
mov
push
leave
mov
xor
rorb
out
loop
xor
jo
aaa
push
imul
mov
xor
jecxz
mov
sbbb
aas
shrl
jb
fmull
xor
insb
add
outsl
ja
imul
mov
jae
xchg
pop
jns
cli
sub
andl
in
fcmovne
cli
add
dec
xchg
and
add
incb
cmp
movsl
mov
pop
mov
mov
scas
and
test
out
lea
pop
cmpl
fidivrs
pop
pop
bound
gs
and
cld
int3
xor
adc
adc
jo
pop
aam
or
inc
push
int
pusha
das
shrb
dec
pop
dec
lahf
push
push
movsl
jnp
test
jl
push
repnz
movsl
loopne
decb
add
cmp
add
mov
and
mov
jg
test
xor
sbbb
scas
push
jp
pop
sbb
mov
sbb
sbb
and
xor
jp
add
cmpsl
repnz
and
aad
adc
fsubrl
add
aas
jns
jecxz
out
jmp
inc
gs
lret
sbb
cmp
jg
adc
push
ja
sbbl
add
mov
jge
pop
daa
cmp
fwait
jp
ljmp
push
cmp
mov
in
adc
movhps
testl
mov
push
repz
add
jb
ja
int3
jmp
xchg
mov
mov
push
mov
push
mov
sar
lods
cltd
fwait
lock
inc
lgs
aas
pop
shl
jp
cli
cltd
inc
ljmp
add
add
add
xor
add
jecxz
clc
icebp
jae
sbb
cli
mov
xchg
lret
pushf
arpl
inc
imul
inc
mov
push
xor
aad
xor
mov
push
push
jae
adcl
jno
xorl
xchg
and
into
push
ficomps
xor
scas
lods
xor
js
pop
mov
scas
pushf
mov
cli
xor
or
xor
inc
add
dec
inc
fs
fcmovnbe
lock
fimull
fiaddl
ret
mov
add
aad
int
in
sbb
dec
clc
push
cmpsb
push
pop
jne
jecxz
das
push
mov
dec
mov
adc
in
xchg
shrb
dec
cs
mov
mov
popf
imul
jg
nop
sub
shlb
mov
or
push
mov
loop
mov
push
ss
mov
xchg
leave
cmp
enter
ret
dec
mov
push
add
add
mov
out
test
push
fs
xchg
and
adc
into
lret
mov
rorb
push
mov
cmp
add
mov
dec
sti
mov
jbe,pt
movsl
or
ret
xor
into
gs
fsubr
test
push
ds
xor
nop
pop
jo
lock
call
repz
adc
cs
jnp,pn
or
ja
xor
addb
push
shll
aam
xor
int
es
repz
aam
inc
xlat
mov
add
add
push
mov
push
cmp
out
call
pop
iret
xchg
jp
mov
push
pop
xor
loope
insl
lret
bswap
xchg
aaa
ret
jle
mulb
xor
stos
fsubrs
mov
mov
jb
outsl
popa
insl
hlt
xchg
push
or
in
mov
jnp
xor
and
adc
divl
pop
mov
in
sahf
xlat
fadds
mov
add
jle
mov
imul
aam
add
push
inc
mov
pop
add
loop
jmp
fwait
add
mov
aam
cmp
jecxz
out
xchg
and
mov
inc
xchg
into
dec
sub
push
cmp
shrl
call
lock
mov
ret
lock
js
ret
je
fmuls
jo
in
sti
stos
mov
out
aad
mov
add
add
add
add
add
xchg
ret
mov
js
inc
cmp
adc
scas
xchg
mov
pop
mov
sbb
in
pop
mov
inc
mov
pop
xchg
sbb
mov
mov
and
cmp
mov
jp
clc
xchg
shrb
out
sub
pop
fstps
push
shrl
inc
ja
pop
lods
and
test
mov
or
add
add
add
add
es
sub
mov
ror
aas
or
out
divl
outsl
enter
push
cmp
and
jg
and
leave
pop
mov
dec
pop
inc
stos
cmp
cmp
lods
cmp
cmpsb
xchg
jg
ljmp
add
dec
xchg
out
push
mov
mov
mov
sub
stos
insl
nop
inc
push
pop
test
mov
jbe
push
cmp
sub
fcompl
popf
jl
fcoml
add
add
add
add
hlt
aam
and
stc
sbb
add
sub
pop
pop
sbb
or
ja
sbb
je
imul
js
push
adc
in
adc
dec
push
xor
pushf
rcll
imul
arpl
cmp
mov
xchg
lods
adc
scas
js
xor
or
xchg
std
sub
cmp
sbb
daa
push
push
jae
jo
addl
inc
call
add
das
fnsave
icebp
int
pop
movsl
outsl
in
sbb
push
xchg
sub
cmp
test
inc
xchg
call
in
loopne
mov
push
pop
jo
add
or
clc
xor
addl
adc
add
jns
add
test
loop
jno
rorl
in
stos
nop
add
bound
add
in
shll
vunpcklps
pusha
add
mov
jmp
dec
dec
xor
in
cmpsb
mov
xchg
ret
test
cmp
adc
lret
mov
daa
leave
ss
aaa
ficompl
dec
test
hlt
jb
icebp
pop
push
mov
fistl
sbb
jge
pop
push
shll
loopne
adc
inc
call
outsb
outsl
inc
lcall
sbb
jp
into
add
or
into
push
ja
sub
mov
ret
jae
mov
js
jp
stos
mov
mov
iret
mov
notl
jge
movsl
ror
dec
mov
lret
out
jge
xchg
dec
and
and
mov
into
sub
push
jbe
jp
jg
sti
sub
dec
bound
pusha
insb
adc
nop
push
fadds
cmp
pusha
inc
fsubrl
adc
jo
add
xchg
lret
out
xchg
daa
inc
jmpw
dec
shll
ljmp
jmp
rcrl
push
push
enter
sar
cs
fcompl
push
stos
xchg
call
fs
insl
mov
and
stos
cmpb
mov
xchg
cmpb
jns
xor
jno
adc
out
cmp
jl
addr16
add
add
add
add
sub
data16
push
sub
das
stc
push
cmp
loop
sub
cltd
pop
repnz
mov
and
loope
lock
mulb
divb
xor
lds
jl
xor
push
loop
cli
movsb
imul
cli
subl
add
push
sti
mov
repnz
adc
xchg
test
int3
push
insl
roll
dec
or
and
mov
add
sub
in
repnz
int3
jne
jecxz
dec
cmpsb
sbb
xor
add
add
sahf
insb
dec
std
add
mov
filds
lret
fadds
subb
jnp
pop
stc
mov
in
roll
mov
xchg
xor
pop
dec
mov
bts
les
dec
fs
outsb
addr16
or
daa
pop
les
testl
add
add
add
insl
mov
mov
divl
pop
fsubrl
or
test
cmpsl
jb
in
bnd
mov
clc
sbb
aad
jp
ret
push
ljmp
out
repz
xchg
mov
imul
xchg
in
jns
or
je
cmp
lds
lahf
mov
std
or
and
dec
mov
pusha
loop
sti
jmp
add
and
mov
js
dec
inc
dec
and
pop
clc
jmp
xchg
sub
ljmp
ljmp
inc
adc
es
sbb
je
jae
inc
clc
xchg
dec
pop
ffreep
ds
or
sub
pop
jbe
movsl
lods
mov
push
clc
pop
inc
sbbb
xchg
das
mov
out
pop
pop
cltd
test
xlat
cld
mov
div
sub
mov
out
fisubrl
cmp
add
add
imul
loop
sahf
in
pop
mov
pusha
sbb
pushf
inc
xor
rcrb
js
cmp
fcomps
push
pop
notl
test
call
mov
fildll
out
push
dec
xchg
data16
shrl
pop
into
adc
call
lea
movsb
cmp
mov
adc
sbb
push
or
and
add
orl
fsubl
fisubl
sbb
popf
dec
mov
pop
bound
les
imul
outsb
lock
fldenv
loopne
stos
out
rorl
mov
mov
xlat
dec
divl
adc
pop
push
sub
jae
insb
mov
movsb
xor
iret
int3
out
inc
xchg
clc
mov
movsb
imul
hlt
fwait
mov
jp
xor
cli
js
les
imul
mov
test
ret
testb
mov
test
cmp
mov
mov
call
and
xor
pusha
insb
dec
icebp
ds
sahf
in
cli
cmp
jmp
loop
dec
xadd
clc
sti
pop
mov
cmp
shlb
sub
or
jb
jne
and
imul
xor
stc
or
add
xor
xor
add
mov
scas
in
and
mov
add
xchg
daa
mov
cmp
jae
lods
pop
pop
jne
sub
fidivrs
sbb
lods
xchg
cld
mov
cwtl
xchg
out
cmpsl
jnp
xlat
pushf
popf
mov
sbb
sub
mov
into
jne
es
xlat
xchg
outsl
shll
lret
and
in
inc
and
sub
cmpsl
and
dec
jno
xchg
inc
stc
jb
or
pop
jl
push
xchg
mov
add
add
arpl
xor
xor
movsl
imul
jmp
add
mov
fmull
push
inc
test
xor
jns
int
mov
mov
fbstp
outsl
fs
pop
xchg
stos
ret
or
cmc
add
adcl
popf
out
or
cmpsl
xchg
call
sub
jl
or
xchg
lods
nop
adc
add
enter
testb
lds
cmpsb
push
dec
xchg
and
adcl
call
mov
dec
jae
iret
mov
jmp
jo
push
cmp
pop
dec
in
jp
inc
mov
lahf
mov
fisttpll
jne
and
sub
and
cmp
hlt
pop
and
ret
mov
and
lock
mov
mov
int3
js
or
dec
loopne
dec
mov
jecxz
shrb
ljmp
mov
add
ja
xor
push
hlt
xchg
push
sbb
dec
mov
je
sti
mov
jge
sbb
rclb
pushf
stc
ds
push
adc
ret
jg
dec
mov
push
add
pop
cmp
sbb
inc
pop
inc
shll
add
enter
xchg
shlb
push
aaa
push
out
jbe
xchg
jns
les
ss
stc
add
shr
and
in
scas
push
inc
lcall
xor
lret
mov
jae
add
imul
gs
aaa
dec
sub
clc
xlat
mov
lock
sahf
mov
mov
incl
jno
out
shlb
adc
cwtl
fdivrp
sub
jb
inc
icebp
add
bound
gs
aam
mov
ss
pop
fwait
aam
jne
xchg
lcall
stos
or
xchg
ljmp
cmp
enter
int
sbb
cmpsb
aas
sub
cmp
jns
lds
shll
mov
jle
lock
add
add
xchg
pop
out
testl
cld
mov
jbe
pop
repnz
nop
scas
flds
popa
lods
fbstp
jmp
into
test
in
cmp
push
enter
rcll
and
pop
mov
xchg
sub
push
jae
fdiv
xor
xchg
cmp
sar
mov
dec
int3
jb
xchg
insl
jl
sbb
sahf
rol
xor
xor
add
add
add
push
in
hlt
call
fimull
cwtl
ds
adc
in
or
hlt
icebp
mov
push
inc
inc
gs
cwtl
dec
jnp
cmp
mov
out
dec
pop
popf
lods
jnp
sub
fsub
push
xor
sbb
sbb
mov
lcall
sahf
addr16
int3
adc
shll
rol
sbb
setle
mov
popa
dec
add
mov
jp
lret
ds
loope
aad
loopne
ja
push
leave
aas
test
add
sbb
pinsrw
mov
jbe
movsl
pop
mov
push
mov
pop
lock
sbb
das
cltd
sub
rcrl
xlat
shlb
ljmp
mov
inc
repz
cmp
add
das
out
call
jmp
je
mov
pop
ljmp
or
mov
xchg
mov
cmp
cmp
or
cs
imul
pop
add
push
and
rorb
xchg
adc
push
mov
sub
pop
aam
outsb
and
push
push
scas
mov
mov
pop
popa
push
push
xchg
shll
aaa
xor
add
into
lea
fcoml
std
stos
int
xchg
mov
push
ja
or
adc
lret
aaa
dec
nop
ja
pop
mov
in
dec
cltd
movsb
sub
outsb
arpl
aad
cmpsl
mov
and
push
mov
pop
inc
insb
cmc
decl
mov
mov
jecxz
pop
mov
jbe
stos
mov
inc
add
inc
or
mov
test
das
mov
add
mov
test
dec
inc
pop
jge
inc
scas
subl
pushf
sub
xchg
mov
jb
xlat
imul
aam
inc
outsb
les
in
lahf
stc
mov
sbb
and
xchg
mov
lret
cmp
and
xor
or
xchg
icebp
mov
jmp
popf
fimuls
mov
push
sbb
sbb
int3
aas
push
xchg
sub
lods
xchg
jle
push
xlat
movb
add
or
pop
lret
or
in
jb
mov
dec
pop
pop
scas
or
and
mov
scas
test
fisttpl
sarl
pop
repz
bnd
iret
jno
fwait
lock
or
into
stos
fstl
mov
ret
ds
dec
adc
ds
hlt
scas
and
int3
xor
pop
push
mov
jecxz
outsl
arpl
data16
add
mov
out
push
xor
lahf
mov
call
ret
xor
or
fidivrl
sti
jge
std
enter
ljmp
enter
dec
pop
xor
or
js
xchg
sub
mov
pop
ret
mov
xor
ja
lea
bound
fadd
fistl
sbb
adc
pusha
leave
ljmp
decb
mov
int3
add
add
pop
inc
and
lods
and
xchg
and
aas
sub
sbb
jnp
daa
adc
cmp
jle
pop
popa
jnp
mov
xchg
xchg
addr16
clc
cli
or
in
xor
mov
mov
adc
in
stos
add
xor
movsb
inc
mov
dec
push
cmp
gs
ljmp
ljmp
ret
mov
roll
sub
ret
int
sbb
rolb
lds
fldt
and
add
add
aaa
or
fprem1
add
movsl
mov
ret
push
cmpsb
and
iret
scas
mov
rorb
cmp
sti
cmpsl
out
sbb
cmp
dec
push
imull
imul
push
add
mov
in
mov
fisttps
int3
popa
inc
sbb
cmp
mov
cld
sbb
push
pop
xchg
pop
das
jecxz
cmpsl
cltd
cs
xor
push
jno
insb
xchg
hlt
jnp
add
add
sub
enter
add
loop
mov
ret
imul
sub
shrb
push
cmp
js
mov
or
int3
mov
cmpsb
pop
mov
mov
cltd
adc
pop
cmp
sahf
in
or
jb
fstl
sub
cmp
sbb
clc
or
ja
mov
lods
jmp
xor
cmpsb
sbb
mov
and
jae
add
pop
fistl
and
xlat
stos
or
dec
xor
sbbl
jmp
push
lods
cmp
xchg
mov
push
in
int
add
add
sub
gs
jb
fisubl
add
jo
daa
add
pushf
xor
fucomi
xor
jno
out
sbb
pop
jge
adc
int3
aad
ds
lds
pusha
cmp
mov
and
xchg
push
shlb
fisubl
mov
push
push
sub
lock
xchg
roll
cmc
sub
nop
fwait
pop
je
xor
push
xor
out
enter
mov
xor
cmp
btr
int3
mov
fcomp
sbb
loopne
shll
bound
loopne
fsubs
xchg
fwait
popa
insl
push
mov
push
or
mov
test
sti
popf
xor
push
test
cld
lods
scas
mov
cmpsl
add
stos
scas
sbb
sbb
les
cmp
and
xchg
sub
icebp
lret
add
jne
mov
jecxz
lds
pop
pop
rep
test
repnz
mov
out
dec
mov
inc
insl
rol
pop
cld
ja
push
jns
push
pop
adc
lret
stc
inc
dec
lds
pop
repnz
jae
jp
or
xor
daa
lock
jle
xor
fnstenv
xor
jb
add
add
push
add
mov
rorb
and
ficoms
adc
xor
out
je
jle
into
mov
push
cwtl
cmp
mov
insb
int
sub
iret
cs
mov
or
and
jb
movsl
xor
popa
dec
ss
jle
jnp
in
imul
ffree
and
hlt
cld
mov
jecxz
inc
ret
fwait
ret
add
pop
test
inc
cmp
lret
aaa
jb
push
cmp
dec
stos
sbb
ficoml
push
or
xchg
in
jmp
and
mov
pop
xor
pop
ja
rorl
testl
test
mov
jbe
je
add
stc
and
out
gs
adc
mov
push
add
fmuls
in
mov
jae
pop
push
repz
xlat
icebp
addl
ds
in
cmp
out
stos
push
adc
adc
bsf
and
scas
mov
cmpsl
adc
notl
mov
popf
sub
mov
shrl
sbb
xchg
sub
fisttpl
or
inc
out
arpl
in
movsl
adc
outsl
pop
mov
inc
dec
add
add
jo
and
test
lret
movsb
movsb
rcrl
sbb
xor
cs
testl
mov
cmpsb
test
leave
and
inc
xor
inc
mov
das
jnp
lock
add
gs
shl
pop
pop
push
xchg
sub
xor
jno
inc
mov
int
inc
test
cmp
std
movsb
add
jo
push
xchg
add
add
out
lret
cmpsb
sbb
je
xchg
hlt
lea
decb
jecxz
iret
cld
call
shlb
repz
inc
xchg
stc
popa
push
or
add
ljmp
xorb
divl
mov
dec
xchg
daa
jns
dec
rcrl
and
add
dec
popf
sti
and
pop
fcoml
xchg
pop
xchg
call
std
cmp
push
iret
jo
jns
test
movsb
mov
add
add
add
ret
fstpl
cmp
mov
xchg
dec
pop
cmp
inc
sbb
stc
cs
add
in
cld
dec
mov
out
imul
adc
sub
das
jmp
popa
jne
inc
shll
push
xchg
sub
inc
mov
out
leave
or
mov
cld
xchg
lcall
test
mov
mov
cmpsl
mov
in
addl
iret
sbb
add
add
clc
mov
ss
loope
movsb
cmp
pop
fcmovnu
cltd
push
aad
les
popa
or
jne
mov
loop
test
sbb
testb
xorb
pop
inc
repnz
dec
add
aaa
int
or
shr
pop
shrb
jae
mov
popf
xor
xor
lcall
push
pop
in
mov
in
das
test
jae
sarl
add
add
add
sbb
push
sahf
cmp
xchg
aam
sbb
sbb
fdivrl
insb
out
subl
mov
xchg
jne
pop
fs
jge
jmp
inc
sbb
ret
popl
divl
xlat
or
adc
sti
clc
in
or
loopne
ljmp
xchg
pop
cmc
or
push
sbb
jmp
mov
mov
fcomps
dec
ficoms
cmpl
arpl
add
mov
sbb
nop
popf
addr16
lret
cmp
add
fsubrl
movsl
mov
bound
cmp
out
fwait
aam
std
or
nop
mov
xchg
adc
mov
js
nop
and
push
adc
push
int
push
mov
shlb
mov
mov
ret
dec
cmpsb
leave
or
cmp
icebp
mov
cmpsl
mov
add
mov
in
push
cmp
int3
cmp
fcmovnbe
dec
pop
divb
xor
sbb
xchg
mov
mov
cmp
je
enter
push
aam
lret
movsb
imul
sub
add
jmp
jmp
sti
xchg
mov
test
fs
pop
and
cmp
mov
mov
daa
jmp
adc
xlat
cmp
jmp
add
add
std
push
and
xchg
add
mov
add
ss
stos
enter
mov
dec
add
movsb
mov
mov
sbb
push
mov
fadd
repnz
rclb
ds
mov
or
ljmp
xor
ds
in
shl
and
inc
stos
movsb
cmp
das
pushf
and
push
jg
sahf
cmp
add
addb
pop
and
rcll
notl
cmpsl
sbb
int3
test
inc
push
in
ja
sti
push
fisubrl
ds
push
ret
sub
add
in
fwait
or
mov
in
fiaddl
push
jno
inc
cmp
sarb
mov
pop
cmpsl
pop
xchg
shlb
push
mov
dec
mov
add
fidivrl
inc
cld
xchg
cli
lea
pop
imul
or
dec
jb
inc
mov
mov
cmpl
cmp
lds
fmull
out
mov
shrl
adc
mov
ljmp
inc
jge
pop
xchg
scas
gs
outsb
add
push
sarl
aam
adcb
hlt
push
mov
add
inc
in
add
into
repz
adc
setb
leave
in
pop
js
mov
cmpsl
pop
lods
rcr
iret
cli
popa
pop
das
jecxz
mov
adc
pusha
dec
pop
out
setns
pop
ljmp
fcoms
int3
sbb
push
or
into
cwtl
lea
push
jl
rcrl
dec
aad
lret
jno
xor
xor
cmp
jp
add
add
adc
in
xor
sub
