push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
loop
pop
pop
push
movsb
loope
sar
cmpsl
rcr
test
fbld
ja
je
imul
sbb
sbb
dec
insb
mov
repnz
mov
dec
in
add
add
xchg
push
push
cmpsb
stos
mov
sbb
inc
and
add
and
mov
mov
out
or
lahf
loope
xchg
sbb
ss
daa
adc
pushf
mov
leave
add
fwait
or
dec
push
fisubl
in
test
adc
mov
mov
das
movsb
jno
adcb
scas
out
pop
jb
sub
sbb
jne
push
mov
movsb
inc
mov
and
jae
jb
inc
lods
cmp
push
xor
jmp
loope
lds
mov
sub
xchg
call
inc
subl
jns
push
cmpsl
sbb
ret
icebp
mov
out
pop
add
jge
dec
jne
sbb
popa
in
lret
mov
jo
stos
ja
aad
lcall
jp
lcall
adc
add
lcall
cmpsb
leave
jb
and
out
lds
and
cmp
test
mov
or
sbb
and
adc
cwtl
fwait
sbb
adc
push
mov
sub
outsb
int
fdivr
and
sub
sub
push
dec
hlt
inc
sbb
push
addr16
enter
mov
aaa
les
add
xchg
les
jl
mov
pop
jne
dec
inc
mov
cmp
sbb
jge
cmp
mov
out
testl
xchg
sbb
js
cmp
xor
sub
mov
push
insl
adc
fwait
test
fdivrl
dec
mov
xchg
stc
in
cmc
addr16
loop
movsb
loopne
adc
lock
jl
fbld
jb
in
and
test
inc
add
add
xor
push
adc
popf
mov
and
jge
in
shr
mov
mov
xchg
pop
lods
lds
daa
movsl
cmpl
in
sahf
popl
add
mov
mov
push
out
iret
fnstcw
jl
and
mov
lahf
or
push
pop
sub
dec
in
divl
add
cmp
les
pusha
pop
add
cmpb
aaa
mov
adc
cmpsl
shlb
nop
mov
out
push
push
mov
mov
xor
test
xlat
xor
push
andb
xor
nop
lock
notb
cmp
push
out
pop
adc
push
adc
aas
repnz
xchg
xchg
add
aam
push
cltd
lret
testb
mov
add
add
dec
push
jae,pn
pop
jmp
arpl
leave
fisubrl
mov
jecxz
mov
test
adc
insl
pop
jp
fs
pop
pushf
fwait
cmp
nop
shll
xor
in
xor
xor
xchg
xor
and
ficoml
push
pop
cmp
push
gs
mov
xchg
fisttpll
add
jmp
jecxz
sub
adc
sahf
mov
and
cs
leave
or
mov
jb
jle
icebp
xchg
xchg
xchg
in
or
jae
xchg
dec
sbb
pop
pop
lret
stos
dec
shlb
iret
test
loope
rcl
pop
mov
mov
ret
and
test
aad
sbb
scas
movsb
adc
add
pushf
inc
jp
stos
cwtl
fnstcw
cmp
lret
mov
lods
andl
inc
xlat
xor
mov
inc
addr16
jle
or
push
fdivrs
ja
adc
bound
out
sbb
and
xchg
movsl
jne
jb,pt
jne
sub
loopne
pop
out
jo
clc
and
sub
ss
push
xor
pop
xor
scas
in
test
sub
cmp
outsl
or
add
flds
int
pop
aad
cmp
mov
stos
push
xchg
sbb
inc
fcomps
movsl
cmp
gs
add
int
pop
xor
dec
ljmp
ja
push
cltd
cli
rclb
pop
cwtl
testl
xor
xor
or
outsb
cs
xchg
shlb
adcl
cld
enter
jmp
jae
inc
mov
xor
pusha
push
push
aam
add
add
clc
ja
cmpsb
jnp
adc
pop
gs
daa
push
and
pop
je
incl
push
jb
enter
cmc
shrb
inc
and
push
and
xor
pop
xor
fs
mov
ret
cmp
je
outsl
sub
bound
mov
push
or
popf
push
and
pop
ret
add
clc
mov
adc
sbbb
cmpsl
std
stc
sbbl
outsb
rol
or
sub
and
push
sub
ret
mov
loop
sbb
sti
sti
out
lret
dec
sub
frstor
pop
das
jmp
addr16
lret
cmp
xor
mov
scas
es
insl
ss
hlt
fsubrs
mov
xchg
xchg
pushf
es
add
sub
jecxz
js
in
inc
jp
adc
push
push
fcoms
add
mov
sahf
mov
pusha
inc
js
ja
out
addr16
and
lahf
pop
rcll
cmp
ret
sahf
ljmp
fsubs
jge
cli
testb
or
clc
mov
and
outsl
les
test
mov
mulb
jne
pop
dec
push
test
add
in
addr16
pop
aaa
xorb
fidivs
add
dec
lcall
xchg
lahf
push
push
dec
dec
cld
add
aaa
aad
xor
je
mov
dec
test
jo
jecxz
pop
aas
adc
pop
dec
pop
mov
ret
hlt
jge
out
rcrl
test
imul
jbe
in
xor
push
mov
imul
and
mov
jge
xorl
add
addl
sbb
adc
in
pop
pop
fldl
bound
push
mov
hlt
insl
dec
mov
push
inc
outsb
jg
arpl
loopne
cmp
sub
push
inc
icebp
xchg
imul
cmp
outsl
call
into
cmp
add
pop
xchg
stos
push
mov
sbb
aas
jo
icebp
xor
shl
out
mov
xchg
imul
inc
add
add
add
jg
jne
fwait
pusha
cmc
inc
subl
and
je
pop
xchg
bound
mov
imul
xchg
pop
jle
inc
jl
inc
mov
ljmp
cmp
scas
loope
mov
cli
push
lock
mov
lret
pushf
into
cs
lret
adc
popf
repz
std
imul
inc
add
mov
out
stos
push
lea
ds
and
ljmp
jecxz
push
hlt
mov
fcmovnbe
out
nop
push
insl
lcall
and
aaa
xchg
jne
lock
mov
scas
fisubl
cmp
dec
inc
xchg
sub
xchg
push
adc
jo
repz
orb
arpl
shlb
out
mov
add
add
jl
xor
cs
imul
fldl
push
fsubs
adc
movsl
mov
sbb
dec
add
jbe
jbe
mov
dec
fcmove
fidivrl
in
push
xchg
or
pop
xchg
cmc
adc
jg
sbb
jbe
scas
push
loopne
mov
lds
jne
and
cmp
lods
call
lret
arpl
add
push
pop
or
subb
jne
mov
data16
and
lock
mov
lea
loopne
mov
adc
inc
inc
jo
std
and
jno
ljmp
jp
cld
scas
in
movsl
adc
jno
movsw
fstp
mov
ret
mov
adc
jge
insl
inc
iret
dec
jp
pop
aam
lods
pop
jle
sbb
popf
jmp
sbb
cmp
sbb
xor
add
xchg
fdivrl
arpl
out
call
pop
es
ret
scas
jno,pt
dec
jne
ret
out
jnp
nop
add
push
push
mov
add
imul
insl
cmc
mov
fsubr
jmp
jl
push
jecxz
test
and
mov
and
pop
int
pop
add
mov
pop
fildl
sbb
pop
and
fucomp
inc
fstpl
mov
jo
inc
mov
rorl
pop
push
lret
test
mov
fsubrs
mov
sub
or
imul
adc
inc
ds
cmpb
in
in
adc
cmp
ja
pop
popa
shr
leave
lock
je
in
mov
add
pusha
je
mov
mov
sub
add
mov
pop
stos
mov
fisubrl
or
mov
mov
ret
mov
mov
or
add
daa
imul
fsub
aad
dec
sarb
push
add
and
mov
imul
aaa
int3
pop
popf
pop
adc
fcomps
mov
aas
mov
sub
rcrb
dec
out
jle
and
inc
inc
xor
scas
push
mov
lret
sub
shlb
add
add
cmpsb
and
sub
add
inc
out
shrb
stos
lahf
test
mov
push
jge
push
dec
inc
insb
fisttpl
fdivrp
cmp
dec
jne
xchg
xchg
lock
cmp
mov
pop
adc
cmp
mov
jo
push
push
imul
leave
xor
jecxz
std
lret
add
and
xchg
into
aam
inc
shll
out
sbb
loope
add
lcall
dec
xor
or
std
pop
mov
adc
add
add
mov
sub
lea
js
jg
dec
outsl
xchg
and
dec
or
inc
pop
jecxz
dec
pop
fimull
mov
mov
out
jnp
jmp
loopne
adc
cmp
rorl
aad
add
movl
cmp
jp
aam
jecxz
lods
aas
cltd
inc
aad
mov
imul
ficompl
xchg
mov
aam
jecxz
add
or
or
push
je
fadd
jo
inc
rol
call
xchg
pop
test
clc
loope
push
push
jne
mov
pop
adc
je
cmpsl
add
jb
xchg
jecxz
int
mov
jo
inc
lret
rolb
or
aad
adcl
sub
mov
sahf
mov
pop
xor
fbstp
push
js
sub
add
jne
lahf
adc
mov
aad
cmp
leave
and
mov
mov
stos
jae
jmp
clc
ret
in
push
and
dec
or
in
fiaddl
fadd
loope
scas
mov
sahf
mov
pusha
cmpps
fidivs
lea
subb
in
mov
xchg
movsl
jne
inc
mov
push
out
bnd
lods
push
loopne
mov
sub
pop
jb
jne
insb
testl
mov
in
test
out
push
movsl
lret
cmc
repz
jp
sbb
clc
and
xlat
cwtl
jecxz
iret
les
lods
sbb
mov
dec
icebp
inc
ret
or
sub
fnstcw
mov
arpl
stos
bound
jp
or
jg
cmp
shlb
out
jl
lahf
enter
pop
addb
push
lret
xchg
jb
das
push
or
jg
clts
push
cmp
jecxz
cmp
add
push
ret
lods
mov
mov
add
aaa
push
mov
inc
jbe
mov
sub
das
pop
das
hlt
daa
std
pop
popa
jb
jbe
sysexit
xor
andb
ficoml
mov
cmp
addl
or
sub
xor
xlat
and
fistl
fistpl
out
cmc
arpl
inc
sbb
imul
add
add
imul
push
push
xchg
pop
jne
hlt
cs
push
nop
mov
imul
test
inc
shl
rol
dec
and
mov
push
push
pushf
adc
test
sbb
and
add
cmp
idiv
cmp
cwtl
ret
jne
rorl
shl
popf
inc
movsb
add
push
pop
pop
cmc
or
jo
lret
xor
loop
pop
add
add
and
xchg
jno
nop
fidivrs
or
push
adc
mov
mov
mov
sub
mov
lea
add
mov
mov
pop
outsb
clc
js
inc
aad
xor
sub
sarl
pop
mov
decb
fsub
cmpl
cli
jge
scas
addr16
cmc
repnz
jmp
mov
push
jl
mov
fldt
adc
stos
inc
push
test
or
push
sub
pop
pop
jecxz
inc
jno
popf
xor
add
xchg
ret
jp
in
insl
rol
dec
fistpll
fistps
pusha
add
out
sbb
out
mov
dec
fstpt
into
rclb
cltd
mov
outsb
loop
sbb
jae
xchg
mov
cmp
pop
push
ss
icebp
lea
sbb
mov
xorl
xor
pushl
push
jno
pusha
xchg
pop
cli
add
add
add
call
cltd
mov
test
popa
out
call
jbe
cmp
jp
ja
shlb
mov
cmp
stos
mov
pop
mov
jmp
fwait
cwtl
pop
dec
add
lock
ret
inc
and
test
push
test
mov
nop
repz
ja
outsb
out
sbb
sbb
cwtl
push
xchg
lcall
test
in
inc
sbb
xchg
pop
pushf
int
add
test
xor
and
cltd
jmp
bound
or
jecxz
int
jns
mov
sbb
leave
jp
or
imul
or
sub
lcall
es
shll
and
mov
sahf
cmp
cs
dec
jl
jae
push
xchg
daa
mov
cs
pop
adc
inc
cld
xor
inc
je
ja
add
cwtl
pop
mov
sbb
rcl
cmp
xchg
fstpt
lods
and
sbb
cs
lahf
adcb
test
test
mov
fsubs
incl
adc
movsl
mov
lcall
inc
aad
inc
dec
mov
jle
and
xchg
or
cmp
cmp
mov
lcall
xchg
ja
dec
inc
or
push
add
add
cmpsl
mov
xchg
dec
lods
xor
adc
leave
out
push
mov
daa
jmp
jge
adc
shll
xor
push
push
icebp
cmpsl
xor
es
fadd
inc
mov
pop
stc
jno
hlt
mov
cwtl
mov
ret
sub
jg
pop
lcall
ljmp
inc
out
push
addr16
jmp
cld
test
or
in
notb
add
add
sahf
aam
mov
fidivs
mov
mov
mov
fwait
jb
andl
mov
aas
in
cwtl
or
push
aaa
adc
inc
rorl
imul
in
xchg
pushf
cld
xor
loop
cli
jmp
std
cmp
aas
rcrl
sub
mov
add
insb
in
add
movsl
add
jg
rclb
mov
xchg
pop
xchg
pop
xchg
and
cltd
fld
into
cli
xor
add
adc
movsl
push
out
icebp
sarl
lcall
cmp
pop
lcall
dec
mov
pop
jg
mov
jbe
clc
cwtl
pusha
jne
cmp
add
push
dec
insb
sbb
and
addr16
out
sub
pop
shrl
in
xchg
push
add
cld
daa
addr16
mov
dec
cmpsl
lods
les
cmp
push
std
xlat
lds
pop
int
cwtl
and
jle
adc
cmpsb
lret
in
inc
repz
mov
pop
leave
aad
lods
or
inc
push
xchg
test
push
jmp
je
lock
push
dec
add
pop
mov
inc
lea
and
pop
xlat
aaa
cmp
and
pushf
and
push
sub
mov
add
js
lea
popf
fldl
push
add
mov
add
lds
cli
popa
xchg
das
xlat
add
ss
or
xor
repz
dec
cwtl
jne
sub
pop
into
call
jecxz
out
lret
inc
shl
movsl
rorb
add
loop
mov
ret
mov
mov
push
fiaddl
ds
data16
loopne
cmc
mov
test
add
scas
test
add
inc
rolb
mov
inc
shl
loopne
dec
cltd
sub
nop
cmc
arpl
mov
mov
into
lods
in
sub
adc
sahf
or
adc
jne
xchg
xchg
test
out
or
aad
lods
nop
repnz
pop
fdivl
xchg
push
and
mov
repz
imul
imul
dec
pop
inc
jbe
add
daa
pop
sti
or
dec
aam
iret
jnp
xchg
imul
mov
xor
stos
xor
add
xchg
pop
jge
enter
test
sbb
xor
iret
lds
cmpsb
call
cmp
xchg
jecxz
filds
add
stc
mov
divb
out
sub
std
mov
add
arpl
sbb
pop
xor
leave
inc
adc
ja
pushf
repz
clc
loopne
dec
xchg
cli
pusha
lods
and
mov
lcall
push
xchg
ja
cmp
testb
cwtl
sarl
fsubrs
jecxz
cmp
pop
sub
mov
xor
std
stos
adc
mov
das
cmp
lods
push
stos
xor
cmp
sub
punpcklwd
or
cmp
popf
fwait
mov
add
out
cmp
and
lods
sbb
mov
sarl
push
outsl
scas
add
and
repz
insb
mov
inc
decl
in
and
test
push
aas
add
mov
dec
lods
stos
pushf
cmp
adc
into
mov
mov
std
sarl
xor
mov
iret
fcmovnu
add
add
add
xchg
stos
fsubs
es
push
and
push
adc
mov
outsb
xchg
cmp
sub
daa
jg
push
popa
leave
add
mov
cmc
xchg
adc
xchg
shl
adc
sbb
imul
sar
mov
movsb
push
push
pushf
jns
mov
ret
lahf
fwait
mov
fldt
mov
inc
dec
sub
push
add
jb
jo
cwtl
cltd
xchg
fstl
adc
dec
xchg
sarb
vmovupd
enter
fsubr
jg
xor
fistps
add
and
pop
loope
cmp
dec
push
scas
cmpsb
jge
pop
xchg
sti
pop
sub
cmp
js
sub
or
cmp
aad
add
fdivl
jb
xor
or
xchg
jmp
rcr
stos
std
shrl
imul
ret
lcall
roll
movl
add
cmp
sub
icebp
shrl
cmpsl
or
adc
mov
ficoms
push
aad
jmp
dec
test
inc
mov
pop
imul
addr16
popf
push
mov
jmp
aas
mov
negb
mov
les
xchg
into
fisubrl
ss
mov
movsb
add
hlt
inc
sbb
aas
sarb
adcl
clc
test
add
add
pop
xchg
or
into
arpl
loop
mov
push
es
enter
push
push
enter
push
sub
jge
push
push
adc
xchg
push
xchg
adc
in
imul
xchg
jae
jmp
inc
push
stc
inc
sahf
cmpsl
out
out
pop
repnz
jb
cmp
mov
sbb
add
or
popf
xor
shr
fstps
int3
jmp
jo
push
mov
iret
mov
stos
repnz
add
cli
scas
stos
adc
jns
or
push
inc
push
icebp
add
jbe
cmp
lret
jb
and
mov
clc
movsl
jae
shll
cmp
or
shrl
fwait
mov
push
push
retw
pop
mov
fadds
cmp
call
out
int
inc
loop
cmpsb
movsl
or
je
fistps
and
push
push
clc
inc
cmpsl
pop
dec
ficomps
ret
outsl
aad
xor
cwtl
push
and
jns
movaps
aam
push
out
pushf
sbb
add
daa
sbbl
int3
rorb
les
dec
jns
repnz
daa
mov
cmpsl
lret
ret
jno
jne
call
enter
sbbb
xchg
insl
pop
icebp
test
or
rcl
xor
aad
ss
outsb
in
xchg
fwait
xor
test
in
mov
sub
sub
cld
push
mov
cmp
into
loope
jmp
hlt
adc
adc
call
pop
mov
ss
jmp
adcb
shrb
orb
xlat
mov
roll
in
mov
pop
ljmp
push
xchg
dec
jmp
xchg
ss
notb
lret
sbb
dec
mov
cltd
sub
pop
nop
mov
adc
sub
sbb
push
lret
mov
cs
mov
pop
ficoml
sbb
in
lret
mov
insl
push
repnz
mov
jp
cmp
cmc
aaa
xchg
fisubrl
jno
xor
dec
movb
movsl
stos
sbb
test
inc
ret
dec
movsb
jne
sub
mov
out
loop
mov
clc
test
cmp
cmpsl
or
jo
push
pcmpeqb
jmp
jg
test
stc
fld
aaa
inc
jle
fildll
add
xor
hlt
cmp
or
pop
dec
leave
push
ret
cwtl
cmp
sub
lods
dec
cli
shrl
mov
push
sub
repz
test
push
fidivs
fistl
in
je
aaa
jae
imul
mov
cld
iret
cmp
out
cmp
mov
imul
xor
fs
inc
rcll
xchg
mov
inc
dec
adc
push
int
inc
pop
fmul
insb
sub
or
inc
add
xor
popa
fsubrl
and
and
dec
inc
addr16
or
in
loope
push
or
pushf
pop
adc
inc
fadds
arpl
outsl
and
repnz
xchg
adc
scas
push
daa
or
shlb
shlb
cwtl
inc
sti
mov
fidivrl
movsl
pop
cmp
addr16
sbb
cmp
jo
add
add
cld
sub
sbb
sbb
stc
xchg
dec
dec
inc
daa
xor
add
mov
mov
fsubp
repnz
and
mov
les
push
test
int3
aad
jl
fcmovnu
out
lds
mov
pushf
sbb
mov
sub
mov
rol
rcll
push
jl
in
mov
mov
xor
push
pushf
loope
test
inc
and
push
loopne
into
dec
pop
pop
cmpsl
mov
dec
add
jno
push
ljmp
cmpsb
lcall
add
mov
shl
insl
dec
cmpsl
in
ljmp
roll
sub
sbb
dec
gs
outsl
inc
lret
subb
fcoms
sbb
ss
ljmp
enter
fdivr
lods
add
mov
push
sub
cld
sub
imul
cmpsb
mov
popf
inc
mov
ds
mov
nop
sub
sti
inc
fs
jae
pusha
jge
scas
ret
sysexit
cmp
pop
inc
stos
fcoml
popf
and
arpl
subb
adc
mov
lods
call
jns
outsb
loopne
dec
dec
jno
rorl
int3
xor
sahf
inc
icebp
mov
scas
mov
add
add
dec
mov
mov
jns
mov
dec
inc
or
xlat
and
cmp
mov
cmp
sub
mov
push
xchg
push
fldt
jmp
xor
lods
insl
cwtl
out
shl
jne
lret
fnstcw
aad
dec
sub
std
das
inc
rcrb
test
movsb
aam
xchg
jne
insl
dec
mov
dec
fwait
lahf
bswap
mov
xor
mov
call
lods
shll
sub
mov
jp
orb
or
aad
mov
push
adc
mov
jmp
stc
mov
stc
insb
xlat
xchg
daa
pop
test
hlt
pop
test
sarb
jns
daa
push
cwtl
mov
push
push
mov
cmp
vpcmpeqb
test
loopne
sbbb
add
lret
cli
movsl
pushl
lcall
int3
ja
cmp
add
push
jno
add
inc
pushf
jle
arpl
lods
sti
and
adc
imul
sbb
and
adc
mov
shll
aas
test
push
rorb
mov
mov
sahf
adc
xchg
sahf
mov
out
mov
popa
cmp
mov
jle
into
fsts
mov
mov
inc
inc
mov
iret
push
xor
imull
cwtl
inc
xor
lret
stc
jno
sub
push
push
cmpsl
outsl
xlat
fwait
jp
mov
sbb
dec
inc
movsb
arpl
in
lods
rcrb
test
jb
dec
outsl
pop
cmc
outsl
lock
fistl
mov
pushf
ss
pop
into
lock
and
out
sbb
lcall
lret
xor
fisttps
mov
out
dec
inc
in
push
lahf
aam
xor
je
je
xor
mov
cmpsl
lods
cmp
stc
add
xchg
jne
inc
test
sub
sub
push
sti
push
pop
mov
jle
push
leave
mov
ret
sub
add
fwait
add
mov
out
inc
lahf
fucom
inc
cmc
loopne
sub
pop
or
cmc
jg
mov
dec
sbb
xlat
mov
adc
addr16
jge
notl
xchg
mov
add
xchg
inc
not
pop
insb
jo
jl
or
pusha
insl
mov
jns
sub
insb
cmp
adc
xchg
rclb
inc
or
cmp
rcr
je
xchg
sbb
jbe
xor
and
mov
push
pop
idivb
add
imul
add
fisubl
out
mov
lods
out
mov
and
sub
arpl
add
mov
add
shlb
mov
jle
stos
push
ja
mov
js
rcll
lahf
test
mov
loop
jae
pushl
test
cmpsl
cmp
pop
nop
ficoml
mov
clc
push
and
mov
dec
jno
rcl
out
scas
bound
adc
pop
test
cs
xor
mulb
roll
ds
lods
ss
push
push
cmp
insl
lahf
push
mov
mov
gs
fiaddl
add
adc
pop
lock
hlt
sahf
sub
pop
outsb
and
sub
sbb
insl
xor
insb
ss
xlat
inc
rclb
push
mov
cltd
and
adc
mov
adc
xchg
cmc
adc
je
loop
repnz
push
pop
imul
sub
imul
out
lahf
out
popa
pusha
pop
cmpsl
scas
mov
jmp
fucom
mov
cwtl
test
dec
jo
and
into
add
add
pop
push
mov
add
pop
push
mov
xchg
loop
test
loopne
addr16
loopne
fsubp
ljmp
adc
mov
add
fucomi
lods
std
ljmp
pusha
adc
adc
frndint
mov
adc
jns
mov
sar
mov
sub
inc
mov
jo
fbld
adcb
cmp
jge
cmpsl
inc
mov
mov
add
add
mov
sahf
or
jno
adcl
mov
cld
mov
fidivl
mov
sub
pusha
jge
cmc
and
stos
and
inc
rolb
push
test
lret
loop
jbe
dec
push
movsl
js
jne
es
lods
jbe
cmpsb
pop
lock
fiadds
and
repnz
mov
lock
inc
cltd
mov
jp
arpl
repnz
add
add
nop
mov
jecxz
iret
pop
or
sub
cwtl
mov
out
dec
movsb
cmp
ljmp
xor
push
scas
in
cli
cmp
inc
mov
xor
cltd
push
sub
mov
push
mov
sti
mov
push
jbe
mov
test
into
mov
pop
movsl
jb
jmp
out
jae
push
loopne
cmpsl
mov
and
push
mov
