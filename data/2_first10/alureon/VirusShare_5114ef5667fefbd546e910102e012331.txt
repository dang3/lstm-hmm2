movl
mov
xchg
lea
movl
lea
lea
rol
movl
xor
mov
cmp
jae
adc
mov
lea
rcl
add
xor
not
cmp
jne
ror
mov
mov
adc
xchg
cmp
jae
rcl
lea
and
xor
lea
xchg
mov
lea
ror
lea
adc
mov
cmp
jae
lea
xor
xor
shr
push
neg
xor
neg
rol
mov
not
xor
xor
cmp
jne
add
xor
neg
ror
mov
pop
cmp
jne
xor
mov
rcl
mov
xor
cmp
jne
xor
mov
mov
rcr
dec
jne
lea
xor
xchg
xor
lea
shl
neg
cmp
jne
rcl
lea
neg
xor
ror
adc
mov
rol
cmp
jne
mov
mov
ror
lea
xchg
mov
mov
add
shr
xor
lea
mov
cmp
jae
mov
shl
neg
movl
not
xor
xor
xchg
ret
cmp
jne
xor
neg
push
lea
mov
lea
xchg
mov
xor
cmp
jne
inc
jne
and
xchg
ret
ror
mov
lea
not
mov
mov
lea
rcl
and
adc
shl
neg
lea
mov
shr
cmp
jae
mov
mov
call
neg
mov
mov
lea
shl
lea
mov
mov
mov
mov
lea
xor
cmp
jne
xor
mov
ror
ror
popl
adc
mov
mov
xor
mov
cmp
jne
movl
xor
adc
xor
lea
cmp
jne
not
add
lea
not
adc
mov
lea
mov
xor
lea
cmp
jne
xor
xor
mov
xor
mov
ror
lea
adc
lea
xor
mov
cmp
jne
mov
mov
ror
rcr
mov
xor
push
lea
not
lea
mov
cmp
jne
xor
mov
xor
ror
push
call
cmp
jne
popl
xchg
add
lea
not
mov
xor
cmp
jne
neg
xor
xchg
not
xor
adc
rcl
rcr
rcr
push
lea
push
push
lea
push
pushl
call
cmp
jne
push
mov
sub
pusha
lea
lea
neg
lea
call
ror
shl
cmp
jne
lea
push
push
push
push
push
push
push
call
and
ror
cmp
jae
ret
and
mov
neg
xor
mov
lea
push
push
lea
push
lea
push
call
shr
cmp
jae
mov
lea
mov
not
not
lea
neg
lea
xor
lea
mov
xor
adc
rcr
mov
cmp
jae
not
mov
mov
lea
mov
xchg
mov
rcl
shr
cmp
jne
lea
mov
mov
rol
add
xor
mov
rcr
neg
not
not
mov
mov
xchg
neg
cmp
jne
rcr
not
mov
xor
xor
mov
adc
mov
mov
sub
mov
not
mov
lea
xor
cmp
jne
popa
leave
call
call
lea
not
mov
not
xor
add
add
adc
xor
shl
mov
cmp
jne
mov
xchg
xor
lea
push
push
push
push
call
push
xor
xor
not
adc
neg
cmp
jae
and
lea
mov
xor
and
lea
cmp
jne
and
mov
not
not
lea
mov
neg
mov
shl
push
lea
push
push
lea
push
pushl
call
cmp
jne
xchg
xor
xlat
jl
cld
xlat
test
cld
xlat
or
mov
mov
jo
movsb
push
cmp
adc
inc
mov
mov
ror
mov
pusha
sti
or
jns
mov
movsb
dec
add
push
repz
sbb
ret
mov
sub
cld
add
jg
scas
push
cwtl
pop
pop
add
xlat
dec
mov
lock
pop
mov
int3
outsb
inc
xor
xlat
sub
icebp
mov
test
xor
pop
ds
jno
lods
popf
rclb
xor
mul
rorl
push
ss
xchg
mov
pop
mov
lret
mov
add
mov
gs
nop
mov
mov
jae
pop
xchg
xor
mov
outsb
dec
xor
xlat
out
aas
jl
lret
ja
mov
add
mov
mov
xlat
sbb
shrb
mov
lds
test
xchg
push
stos
xor
xchg
mov
mov
xor
pop
cmpsl
into
mov
mov
clc
jnp
outsl
mov
repz
repnz
das
sub
or
mov
jge
push
imul
push
cmp
dec
xor
push
addr16
cmpsl
pop
enter
dec
xor
push
jno
pop
push
leave
xchg
xchg
and
int3
xlat
dec
into
mov
and
xchg
popf
inc
push
aas
aad
add
ret
pop
ss
or
mov
enter
jae
fs
pop
add
repz
enter
dec
mov
sub
push
jecxz
dec
pusha
inc
rorb
cld
and
push
xchg
enter
sarb
jmp
add
lock
ja
push
jno
and
mov
cld
pop
ss
lcall
push
xor
dec
mov
enter
xchg
dec
push
xor
mov
scas
aad
testb
test
test
mov
cmp
xchg
mov
mov
mov
mov
fimuls
xlat
in
push
aam
pop
cmp
scas
sub
push
or
pop
dec
test
repz
xor
sub
adc
mov
pop
xor
mov
xlat
pop
xchg
lods
push
les
cmp
mov
fcmovnb
mov
mov
xor
sbb
mov
cmpsb
xor
lcall
movsl
sti
jl
push
pop
stos
and
mov
push
mov
xchg
scas
push
mov
and
pop
test
out
xchg
fcoms
mov
mov
jo
cmp
scas
jl,pn
and
cmp
jbe
add
and
cmp
or
mov
sahf
and
fcoms
cmpsl
push
push
cmp
aam
ds
pop
and
mov
repnz
in
rolb
sub
sub
or
stos
mov
call
rol
in
dec
adc
mov
lcall
mov
scas
jmp
mov
scas
jecxz,pn
dec
repz
dec
scas
fwait
aad
xor
push
jmp
xor
mov
fcmovnbe
mov
pop
sub
rcr
push
fisubrs
add
fiaddl
xor
mov
int
aam
sbb
pavgb
cmp
pop
and
cmovns
cmp
and
mov
repnz
adc
mov
pop
and
mov
pop
out
mov
scas
aad
dec
sub
test
fistl
test
outsl
jne
fcmovnbe
lds
test
fwait
ds
fwait
mov
xchg
lret
fstpt
cs
and
sub
mov
stos
cmp
xchg
lds
or
mov
push
gs
fwait
cmp
test
ds
and
push
mov
mov
xchg
scas
nop
scas
push
dec
jl
cmp
xchg
xor
sub
adcb
loopne
mov
and
aam
mov
sub
lcall
inc
mov
mov
dec
outsb
push
xchg
loop
lcall
sub
aad
popf
mov
pop
xchg
xchg
ljmp
stos
xchg
aam
mov
cs
and
stos
into
sub
cwtl
cli
sub
mov
mov
nop
ror
push
test
dec
aad
into
nop
lock
stos
into
mov
rcrl
cltd
xchg
aad
push
or
push
pusha
xor
cmc
popa
sub
out
lret
pop
mov
mov
shll
add
das
mov
jne,pn
sub
sub
mov
inc
push
mov
push
movsl
lret
mov
nop
leave
stos
mov
adc
js
pop
and
push
aam
subb
inc
sub
pop
push
push
dec
fcmove
pop
cmc
stos
sub
aad
test
rclb
mov
aam
ss
rcll
scas
pop
les
cmp
jge
jle
adc
xchg
test
sub
repnz
mov
movsl
mov
movsb
mov
pusha
jb
mov
push
mov
mov
cmpsb
fimuls
fists
test
jbe
mov
xchg
scas
fsubp
pop
aam
mov
push
xchg
into
mov
fcmovnbe
inc
add
sub
mov
push
aad
test
aad
pop
movsl
mov
fidivs
xor
pop
and
mov
je
inc
js
mov
sbb
mov
push
gs
mov
rcrl
lods
shlb
mov
jbe
push
aad
aad
test
fisubrl
mov
and
cmpsl
dec
xor
sub
pop
mov
mov
mov
push
jmp
cmp
cld
rcrl
mov
adc
push
arpl
lods
mov
mov
cltd
addl
test
sub
sbb
loope
ret
add
lret
popa
cs
adc
ficompl
scas
sar
fdivs
shlb
mov
cmp
mov
cmp
test
int3
mov
mov
test
mov
ljmp
int
pushf
add
xor
mov
ret
pop
test
sub
repz
xchg
ret
fmull
stos
fmulp
mov
ljmp
lret
std
out
jnp
mov
shll
fldcw
lret
cli
mov
lret
cs
push
test
or
leave
inc
scas
mov
outsl
stc
nop
leave
sbb
scas
fs
xchg
cmpsb
cmpsb
cmc
movsb
mov
sub
sub
stos
rolb
rorl
out
xchg
rclb
pop
popa
lock
adc
pop
cwtl
xchg
repnz
xlat
iret
pop
orb
dec
jo
pop
inc
arpl
in
out
shll
lret
add
pop
xchg
lcall
cmpl
mov
ss
mov
push
push
dec
inc
daa
outsb
mov
fcmovbe
mov
cmpsb
fcmovb
aad
pop
mov
pushw
or
fstps
test
div
aam
and
push
sahf
and
nop
mov
mov
mov
xchg
and
ss
push
sub
mov
dec
scas
pop
sub
imul
lods
mov
aam
xchg
pop
fmul
mov
rcl
or
sbbl
ljmp
test
add
sub
xor
xlat
mov
scas
xor
lret
rcll
adc
or
and
xchg
test
xchg
mov
sahf
rcrb
mov
pop
scas
sarl
sbb
scas
mov
loope
xchg
dec
and
jp
in
pop
rorl
mov
cwtl
ret
sub
jl
stos
loopne
lret
mov
ret
jbe
shll
in
bound
pop
xchg
aam
mov
out
cli
pushf
inc
lods
xor
and
adc
inc
jns
int
testl
cwtl
and
sub
mov
roll
push
fcomps
pop
iret
mov
mov
movb
sahf
cs
lret
popl
repnz
test
inc
dec
add
movsl
mov
aam
call
ss
or
js
push
lret
cmp
mov
adc
aad
loopne
popf
fsubp
mov
adc
xor
out
cs
cmpsl
jle
cmpsl
pushf
push
sbb
not
jle
call
pop
repnz
icebp
loopne,pn
cmpl
fists
xchg
sub
xlat
sub
xchg
inc
jae
das
in
cmpsl
sbb
xchg
dec
cs
adc
mov
pushf
cmp
cltd
sub
in
mov
or
xor
mov
lods
or
mov
xchg
push
xchg
pop
leave
test
insb
xor
and
and
movsb
out
xchg
arpl
push
test
int3
pop
insb
int
push
out
in
lahf
xchg
fisttpl
xchg
inc
sub
xchg
rcr
negb
or
lods
push
movsb
repnz
aad
jle
lcall
xor
cmp
iret
shrd
fsubp
add
pop
mov
push
dec
mov
hlt
xchg
jg
pop
icebp
lea
gs
xchg
popl
and
sub
xor
push
inc
popf
push
sahf
mov
std
shrb
in
mov
jns
std
cmp
mov
jg
inc
subl
jg
push
ret
cmpsb
or
pop
jmp
icebp
lret
addb
mov
addr16
mov
leave
and
inc
jae
sti
or
sub
mov
xchg
mov
addr16
mov
dec
iret
cmpsl
sbb
jns
jo
cmp
lds
or
inc
mov
aas
outsb
ret
outsb
cmpsb
aaa
jb
subl
add
aam
icebp
cli
into
xor
lds
pop
test
or
in
int3
repnz
lcall
iret
cmp
push
iret
aaa
bound
jle
jb
lret
jecxz
add
lds
pop
stos
add
out
imul
loopne
iret
inc
jbe
pop
sahf
mov
sbb
ret
sub
sub
xchg
inc
fdivrl
icebp
fcom
cmp
fdivp
jp
in
lock
dec
pop
xchg
insl
xchg
pop
mov
mov
in
lret
dec
cmp
out
push
pop
pop
cli
fdivrs
test
out
ds
sub
mov
mov
fcoml
daa
sahf
rcll
jo
xor
cli
mulb
scas
int3
cmp
rcr
popa
into
test
xchg
nop
push
or
stos
int3
lret
shlb
adc
imull
scas
sub
in
aam
cmp
xchg
xlat
fnstenv
iret
enter
.byte
