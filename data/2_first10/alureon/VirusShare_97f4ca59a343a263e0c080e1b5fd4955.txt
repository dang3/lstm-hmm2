lret
fdivrl
cmc
pop
lea
fwait
lret
push
je
clc
sahf
repnz
xchg
add
adc
mov
lock
jb
sub
pop
mov
mov
mov
dec
and
aam
mov
push
push
ret
scas
cmp
and
sbb
and
dec
out
fldt
sbb
pusha
pop
jno
imul
imull
aaa
dec
cmp
jg
dec
aaa
xor
inc
pusha
pop
sub
adc
incb
int3
mov
sbb
xchg
mov
sahf
test
clc
push
scas
vsqrtss
and
mov
sbb
dec
xchg
lea
orb
jle
mov
popa
scas
and
out
mov
fnsave
mov
lahf
addr16
test
inc
mov
jae
inc
outsl
mov
movsb
inc
aam
pop
push
xchg
mov
lahf
repnz
cmp
add
pop
xor
push
xchg
pushf
push
inc
call
mov
xor
lret
lret
stos
pminub
jo
push
mov
cld
cwtl
dec
and
xchg
cltd
sub
stos
pop
sbb
jo
add
or
push
shr
dec
xor
dec
arpl
imul
push
sahf
outsl
inc
inc
lahf
daa
cwtl
and
iret
or
cmpsb
push
loopne
inc
and
jge
xor
jb
dec
and
mov
mov
cmp
mov
rclb
lock
aas
scas
jno
fildl
rcrb
sbb
fidivrs
shrb
and
xchg
push
roll
xor
xchg
je
xchg
dec
jmp
fistpl
mov
jmp
pop
dec
sbb
fs
jp
xor
mov
stc
ret
sub
shll
xlat
or
imul
clc
jl
or
inc
add
sbb
inc
stos
bound
outsl
pop
fnstenv
data16
xchg
jno
cmc
repnz
adc
jne
xlat
sub
push
push
lods
sarb
aas
mov
js
cmp
fucomi
fsubrl
aaa
xor
fstpl
mov
mov
jne
frstor
daa
pop
cltd
lret
or
adc
xchg
je
ret
sbb
insl
or
aaa
pop
icebp
xchg
cmpsl
movsl
cmp
inc
scas
mov
mov
pop
push
mov
andl
xlat
addr16
les
test
and
cwtl
rdmsr
test
adc
jo
popf
test
pop
inc
dec
in
mov
out
out
ds
call
in
xor
push
adc
adc
pushf
lea
cltd
adc
mov
cwtl
mov
fnstenv
push
xor
gs
xchg
in
inc
jbe
dec
adc
adc
pop
outsb
clc
or
jno
pop
out
shll
mov
scas
or
and
es
cmp
jecxz
sub
xchg
fidivs
jb
leave
imul
loopne
loop
in
sub
hlt
loope
xlat
inc
js
push
inc
xchg
in
add
fsubp
std
xor
xchg
sbb
popa
xor
sbb
pop
mov
push
fimuls
jle
and
pop
xor
xchg
rcl
ljmp
repz
push
cmp
ficomps
or
or
cmp
adc
divb
les
add
mov
fistpl
inc
popa
jo
mov
xlat
and
pop
inc
xchg
add
adc
or
aaa
cmp
addr16
sub
mov
out
mov
mov
test
dec
jmp
jo
fwait
mov
repnz
cmp
adc
pop
sub
fmull
push
in
or
mul
cmp
push
ret
out
leave
jg
inc
icebp
repz
xchg
scas
ret
in
sahf
clc
push
movsb
test
pop
inc
data16
xchg
in
subb
fidivs
pop
cmp
xor
lcall
sub
or
loope
jne
sub
loope
andb
in
rorl
cmp
popa
repz
dec
dec
lods
xor
loope
inc
mov
test
and
push
fwait
in
faddp
mov
mov
inc
adc
dec
xor
mov
xor
mov
adc
inc
sar
and
xchg
js
fsubrp
cmpb
sbb
fisttpl
pop
xchg
mov
jp
inc
mov
cmp
add
push
roll
call
sub
and
cmp
aas
add
test
pop
pop
mov
sub
jecxz
orb
repnz
and
in
jmp
aas
xchg
sub
add
mov
test
test
cmp
mov
cmpb
pop
inc
data16
mov
cmpsl
push
pop
out
jmp
faddl
fwait
pop
stc
pop
mov
insl
mov
adc
daa
mov
aaa
pushf
jbe
inc
pusha
jg
pop
sbb
addb
cmp
jae
loopne
int
cwtl
imul
insl
sahf
xor
fdivl
scas
repz
decb
adc
test
das
mov
lret
ds
push
cmpsl
cld
add
fisttps
jl
jmp
imull
or
jns
pusha
lret
push
push
hlt
sti
pop
push
dec
and
shrb
sub
mov
mov
mov
xlat
popa
jbe
dec
dec
xor
inc
add
clc
cwtl
ffree
es
outsb
orb
adc
push
hlt
push
push
in
in
add
sub
movsl
pop
pusha
pop
int
jno
mov
cmpsl
inc
mov
pushf
icebp
test
hlt
leave
xorl
imul
js
int3
sarb
and
ficoml
loopne
sbb
ret
sbb
xchg
imul
popf
jl
std
movsl
xchg
or
xor
mov
mov
mov
rclb
rcr
xchg
out
sbb
aam
mov
sub
aad
pop
adc
inc
mov
cli
out
mov
mov
cli
mov
imul
repnz
hlt
adc
sub
aaa
mov
cmpsb
cltd
test
mov
scas
cmp
repnz
das
insb
mov
xchg
lods
ds
adc
and
push
rclb
test
rclb
and
pop
lea
mov
pop
mov
mov
lcall
pop
adc
fs
pushf
rcr
mov
outsl
js
push
pushf
xchg
clc
adc
fnsave
and
into
dec
into
stc
insl
in
mov
adc
xchg
ja
push
aas
gs
cmp
push
mov
xor
pop
sbb
mov
mov
std
jno
je
loopne
xor
push
in
mov
jge
push
out
push
jno
push
sahf
mov
inc
or
repz
sbb
scas
pop
push
pop
sbb
mov
fcomps
mov
daa
cmc
adc
out
enter
pop
leave
xchg
xor
push
iret
shlb
xor
lock
movsb
add
pusha
loopne
mov
mov
mov
adc
fiadds
add
dec
or
cmpsb
shrb
pop
push
jle
mov
fisubs
ja
mov
push
fbstp
insb
loop
cmp
jb
cmp
cmpsb
push
das
sub
add
stos
ss
dec
out
rcrl
subb
mov
inc
orb
lea
pop
insl
lcall
xor
fsubl
jg
incl
or
sbb
std
mov
pop
mov
mov
jl
popa
push
popa
sub
jo
ss
cmp
dec
pop
pop
in
or
push
cld
pop
sahf
pop
insb
pop
pushf
inc
mov
aad
out
arpl
or
pop
push
push
adc
mov
hlt
loope
nop
cmp
or
iret
push
mov
int3
fildll
pop
cmpsb
or
jp,pn
popa
mov
xchg
adc
out
out
outsl
lahf
movsl
and
je
cmpsb
cmp
rorl
mov
xor
fdivrl
rorl
and
shlb
mov
push
sbb
fimuls
mov
or
inc
fnsave
dec
xchg
insb
mov
inc
xchg
pop
mov
inc
xchg
stos
data16
or
cmp
sbb
mov
hlt
pop
xor
out
icebp
inc
push
sub
push
xor
test
jno
ss
adc
shld
cmpsl
mov
dec
lock
rcrl
mov
pop
or
pop
xchg
shll
stos
mov
sbb
jle
cmp
aad
xor
repz
push
jno
push
daa
lcallw
ret
aas
jecxz
mov
mov
and
inc
fldt
out
andl
ja
iret
sub
cmc
xor
xor
lcall
and
loopne
loope
rorb
jns
and
enterw
movsl
dec
dec
je
negb
fdivrp
mov
inc
xchg
pop
test
lea
loope
aad
out
jno
cmp
popa
xchg
fstpt
fcmovnbe
xor
mov
mov
mov
mov
popa
inc
mov
mov
out
arpl
stc
pop
scas
movsl
aad
scas
adc
outsb
data16
cld
jae
fcomps
clc
clc
movsl
imulb
and
cs
sub
and
lock
cmp
pop
popa
mov
inc
jbe
jbe
jbe
jb
add
xor
imul
insb
push
test
iret
rcll
pusha
negb
mov
out
pop
dec
lahf
out
test
lahf
loopne
sahf
xchg
fisubl
xlat
stos
pop
dec
cld
ljmp
xor
fwait
and
jle
ret
jne
push
jo
sbb
dec
fiaddl
or
stos
cmc
test
ljmp
aam
sub
fs
cmp
enter
xchg
inc
mov
and
mov
les
adc
std
or
inc
pop
add
or
push
and
add
jle
in
xchg
pop
testb
outsb
outsb
mov
push
xchg
xor
jle
pop
sub
popa
jmp
cmp
stos
lret
push
dec
pop
mov
int
fmuls
divb
daa
mov
inc
imul
push
jb
mov
lock
mull
js
lds
pop
repnz
and
xor
rcll
push
mov
add
inc
fiaddl
out
testl
stos
xchg
cmpsl
hlt
mov
jp
sub
sbb
test
mov
jns
sub
aaa
cmpsb
jnp
xchg
scas
inc
ds
and
mov
mov
lahf
imul
mov
adc
not
ljmp
out
sbb
lods
cmc
and
js
outsb
jge
or
fcomps
push
pusha
cs
xchg
pop
mov
mov
arpl
leave
daa
punpckhwd
in
scas
test
mov
adc
pop
jg
cmp
fs
iret
inc
loop
fwait
sbb
push
test
sbb
adcb
push
nop
sahf
js
lods
addr16
dec
inc
fsts
push
or
push
pop
int3
cwtl
jle
fisubl
fsubl
out
mov
push
mov
test
outsl
xchg
inc
arpl
mov
or
fstp
nop
in
nop
add
xchg
in
clc
jle
push
push
sbb
in
add
xchg
movsb
shll
push
popf
push
in
dec
fistl
mov
js
push
adc
loop
and
cmp
or
call
lods
roll
test
daa
cmp
daa
mov
std
je
outsl
or
inc
sahf
test
dec
push
jmp
divb
lds
rorb
and
xchg
fldl
xchg
imul
ret
mov
sbb
pop
or
mov
test
hlt
test
daa
dec
fs
lret
push
mov
cmp
dec
xchg
in
mov
iret
dec
pop
in
idivb
testb
sbb
pop
scas
out
add
lret
pop
add
mov
idivb
sub
cmp
clc
rcll
xlat
lahf
pop
popl
rcll
imull
adc
lcall
idivl
mov
cmp
test
das
das
jnp
les
in
fwait
test
xchg
cmp
jecxz
adc
mov
test
inc
jge
push
push
mov
cmp
mov
bnd
ret
pushf
or
lcall
ret
rclb
rorb
loopne
mov
or
loope
and
fstp
inc
inc
cmp
repz
adcl
sbb
fmull
mov
add
pop
sbb
xchg
jecxz,pt
data16
and
inc
xchg
jg
ret
mov
xor
sub
fcompl
inc
mov
sbb
dec
gs
std
adcb
inc
pusha
andb
int3
test
dec
push
and
or
lds
fistpl
lret
and
inc
xorb
pop
jmp
push
sbb
loope
or
push
mov
lea
dec
call
mov
mov
call
lea
push
lea
call
movzbl
inc
imul
lea
add
call
add
inc
inc
dec
mov
mov
sub
mov
add
dec
lea
inc
mov
inc
call
add
add
movsbl
or
mov
call
mov
add
call
xor
inc
dec
dec
inc
movzwl
inc
xor
mov
pop
mov
dec
add
add
lea
pop
dec
mov
pop
dec
or
inc
dec
pop
add
inc
inc
add
mov
lea
add
imul
pop
mov
add
pop
xor
inc
mov
mov
inc
call
mov
and
lea
dec
ret
dec
imul
push
inc
and
push
sub
push
lea
movzbl
push
and
sub
push
mov
lea
mov
imul
dec
push
sub
ret
push
add
mov
inc
inc
add
inc
mov
push
imul
inc
dec
call
pop
ret
jmp
mov
and
mov
inc
movzbl
xor
movzbl
xchg
and
and
mov
mov
xor
and
dec
dec
lea
inc
xor
mov
dec
jne
mov
mov
inc
lea
pop
inc
inc
pop
dec
mov
pop
mov
imul
mov
dec
lea
mov
lea
inc
lea
imul
sub
add
ret
push
push
inc
dec
push
inc
add
sub
xor
lea
mov
push
inc
mov
lea
xor
push
sub
mov
sub
add
dec
inc
inc
push
mov
mov
imul
push
mov
sub
xor
sub
and
push
and
inc
push
add
inc
pushl
dec
call
mov
add
lea
mov
movzwl
movzbl
mov
mov
sub
pop
ret
add
cmp
jb
inc
xor
inc
sub
mov
imul
mov
movzwl
and
inc
inc
mov
xor
add
inc
add
mov
inc
lea
cmp
jb
sub
pop
inc
dec
mov
dec
dec
inc
imul
add
sub
sub
dec
add
xor
movzwl
lea
xor
inc
inc
mov
lea
dec
test
jbe
mov
dec
inc
mov
dec
inc
dec
or
sub
lea
and
and
mov
and
mov
dec
movzbl
dec
mov
add
mov
dec
and
sub
dec
mov
add
mov
dec
lea
mov
sub
lea
mov
inc
mov
mov
inc
lea
dec
dec
jne
sub
mov
dec
mov
inc
lea
add
lea
add
sub
mov
mov
lea
inc
lea
or
mov
inc
sub
mov
mov
dec
xor
test
jbe
add
dec
movsbl
lea
mov
lea
mov
inc
mov
dec
dec
movzwl
inc
lea
imul
inc
dec
xor
dec
mov
lea
lea
and
mov
lea
mov
movzwl
dec
movzbl
xor
add
add
sub
sub
and
mov
lea
mov
movswl
inc
movzbl
mov
mov
mov
sub
dec
mov
inc
imul
movzbl
dec
mov
add
movzwl
jmp
push
sub
lea
mov
imul
inc
mov
add
mov
mov
or
inc
movswl
add
add
add
and
dec
inc
inc
mov
imul
lea
imul
dec
inc
dec
mov
mov
dec
dec
or
xor
mov
add
and
inc
inc
dec
inc
cmp
je
lea
sub
imul
push
mov
call
call
movzbl
inc
call
call
mov
inc
sub
inc
add
dec
lea
ret
dec
imul
pop
lea
ret
push
movswl
and
imul
mov
inc
push
mov
inc
push
inc
push
mov
push
sub
inc
sub
inc
dec
call
inc
push
mov
add
xor
mov
sub
add
neg
inc
mov
movswl
inc
inc
sub
mov
dec
imul
mov
movzwl
or
inc
lea
inc
dec
je
mov
add
sub
mov
sub
mov
mov
imul
mov
add
add
repnz
inc
mov
add
lea
jmp
inc
mov
or
sub
mov
lea
mov
add
jmp
dec
inc
inc
add
mov
add
inc
imul
pop
pop
ret
push
mov
xor
inc
sub
inc
sub
add
or
sub
and
imul
sub
movswl
movsbl
add
mov
dec
mov
imul
lea
xor
mov
add
dec
mov
mov
and
pop
ret
sub
or
mov
add
mov
mov
lea
mov
mov
sub
inc
mov
dec
inc
xor
mov
lea
mov
dec
dec
inc
mov
mov
mov
dec
inc
mov
cmp
jb
lea
push
mov
mov
push
inc
mov
push
mov
dec
xor
mov
dec
xor
and
movzbl
xor
mov
movsbl
push
sub
imul
mov
add
dec
xor
dec
add
mov
dec
movzwl
mov
imul
imul
movzbl
sub
sub
add
add
mov
inc
add
add
inc
movzbl
imul
inc
mov
dec
dec
mov
mov
inc
add
add
mov
dec
dec
add
inc
jmp
cmp
sub
or
or
in
sarb
sub
cmp
lret
mov
ret
mov
add
ds
ljmp
sub
lods
insl
pop
mov
cwtl
sahf
fs
xorl
rclb
std
sub
jne
and
mov
scas
sbb
cwtl
or
push
pop
or
divb
sbb
sbb
and
roll
mov
sub
or
ss
cmp
lret
push
xor
cmpsb
xchg
add
roll
adc
dec
jmp
ds
xlat
dec
ret
fwait
in
out
outsl
push
or
aaa
fldenv
cmp
data16
insb
or
xchg
pop
adc
dec
sbb
jp
shll
ja
cwtl
lretw
mov
jg
dec
inc
xchg
pop
aaa
jae
inc
pop
dec
and
inc
lahf
pusha
sbb
inc
ret
jns
clc
inc
push
andl
out
aam
ret
fs
jp
std
pushf
cmp
loop
dec
push
ljmp
add
clc
repnz
and
bound
jmp
rcrb
dec
loop
sbb
in
push
mov
stos
std
or
add
enter
and
mov
xlat
mov
jbe
loop
pop
lcall
clc
jmp
ds
mov
sub
cmp
mov
or
mov
fsubs
test
mov
or
sub
xor
jp
jnp
into
xchg
inc
cmpb
pop
inc
push
mov
add
pushf
inc
push
xor
jg
cli
pop
adc
iret
ret
in
dec
fdiv
cmpb
mov
das
shll
ffree
bound
mov
arpl
fnclex
cmp
shlb
out
xor
stos
es
imul
lea
push
iret
adc
cmp
mov
sbb
jae
movsl
lods
pop
dec
dec
xchg
jnp
jecxz
call
push
aaa
ret
and
cmpsb
aaa
xchg
jne
pop
fstps
testb
inc
mov
loopne
adc
shld
enter
sbb
mov
xor
in
add
sub
and
push
and
and
imul
or
cmpsl
outsl
daa
movsb
out
lock
leave
out
jmp
hlt
push
push
fidivrs
mov
xor
or
mov
ret
fldcw
dec
xor
cmp
jl
jl
fsubl
push
mov
xchg
pop
imul
cwtl
dec
fnsave
push
xor
jle
sub
repnz
cltd
push
sub
xchg
fdivrs
mov
lea
in
or
sbbl
or
sbb
push
andl
icebp
sub
imull
pusha
fldt
cmp
xlat
test
xchg
not
std
or
dec
push
sbb
push
loope
push
sbb
xor
inc
inc
cltd
pop
lahf
sub
mulw
lock
decb
sub
in
sub
popf
xor
dec
sbb
hlt
inc
sbb
pop
inc
inc
call
sub
cmp
bound
sub
add
fbld
into
sbb
sub
popa
sbbb
add
xchg
movsb
sbb
rcll
cmpsl
xchg
lea
movsb
pusha
jb
cmp
mov
cs
mov
mov
decb
push
stos
adc
nop
mov
insb
lret
pop
adc
mov
ss
mov
daa
mov
mov
pop
nop
int3
repnz
mov
loop
in
shlb
fisubrl
jbe
aas
push
or
sub
dec
mov
jb
cmp
push
xchg
mov
cmp
mov
fsubrs
movsb
aaa
mov
ss
push
nop
push
and
sbb
adc
inc
lds
arpl
cmp
push
dec
sbb
xchg
lret
and
add
ss
jbe
in
enter
addr16
inc
out
popf
mov
jo
mov
sbb
popf
cmp
mov
outsl
aad
ds
push
and
pop
pop
popa
add
frstor
js
add
clc
in
in
lock
mov
lret
add
stc
jne
les
in
push
test
rcrl
xor
xchg
sbb
out
fwait
push
jge
add
ds
push
jl
dec
loop
daa
ret
dec
adc
loope
mov
and
cmpsl
mov
sbbl
jbe
push
jle
dec
pop
push
xor
mov
mov
hlt
push
cltd
mov
sbb
jne
adcl
icebp
inc
adc
dec
or
loop
xor
dec
pop
sub
ljmp
sbb
std
cli
and
jl
test
out
out
dec
xchg
in
inc
adc
leave
mov
out
xchg
push
sahf
pop
adc
fcompl
popf
xor
notb
fnsave
out
test
iret
pop
lods
xor
xchg
call
sbb
mov
inc
mov
mov
mov
adc
ret
in
or
jnp
stos
mov
rolb
mov
lock
nop
sti
xchg
or
icebp
jnp
jbe
add
push
je
enter
in
sub
jg
ja
add
js
jne
xor
sbb
sub
jecxz
cmp
inc
cmp
test
xor
in
int
push
pushl
xchg
pop
fadds
xchg
roll
and
aam
add
std
sbb
faddl
dec
sbb
push
stos
pop
lret
loope
mov
xor
and
pusha
inc
gs
imul
push
sub
shll
js
repz
adc
pushf
rol
xor
xor
xchg
movsb
lock
cmpsb
inc
sub
adc
push
mov
and
sbb
int3
mov
lods
lock
enter
dec
jmp
mov
sbbl
test
push
xor
inc
pop
ret
aaa
sub
out
nop
repnz
mov
sub
jne
pop
jle
push
or
shlb
sbbb
stos
push
pop
std
das
sbb
lret
mull
mov
addr16
repz
js
xchg
xor
cmpsb
mov
loope
adc
addr16
lret
std
push
int3
les
inc
jmp
mov
out
je
aad
cmp
out
sbb
cmp
mov
cwtl
xor
fs
out
sahf
fsubrp
push
lar
int3
gs
push
call
jmp
lock
repz
push
inc
sbb
xor
fidivrl
inc
les
fildl
movsl
mov
icebp
inc
cli
jnp
xchg
add
and
mov
shll
push
cmp
dec
mov
adc
dec
lods
js
pushf
push
ds
push
mov
add
aam
mov
push
mov
leave
mov
imul
mov
pop
bound
xor
ljmp
mov
enter
inc
mov
int3
stos
inc
popf
leave
or
notl
out
xchg
icebp
fmuls
push
dec
sahf
int
adc
sbb
jb
mov
add
cmp
push
xor
jmp
push
pop
stc
mov
push
imul
mov
dec
in
js
add
in
fimuls
jns
pop
ss
dec
jmp
lret
jmp
pop
xor
sub
pop
lods
pop
sbb
gs
lcall
add
xchg
adc
mov
push
sub
bound
xchg
cmp
adc
loop
icebp
in
push
in
clc
or
mov
lock
call
adc
mulb
sahf
sbb
movsb
xor
add
xchg
and
adc
fldl2t
mov
popf
daa
test
or
push
ret
loope
mov
mov
mov
sbb
clc
mov
enter
mov
rolb
cs
xchg
mov
jns
mov
iret
out
clc
jbe
add
or
push
xor
jg
pop
adcl
push
nop
xchg
pop
add
adc
dec
jb
or
lea
addl
push
and
xchg
in
mov
outsb
js
pop
mov
loop
aad
jge
je
fistl
dec
adc
push
out
fidivl
arpl
and
add
xchg
sub
mov
divl
bnd
stos
jmp
and
movb
dec
jnp
iret
sub
inc
xchg
pusha
sbb
out
mov
mov
mov
iret
dec
xchg
and
test
xchg
cltd
movsl
in
out
or
mov
leave
sbb
jnp
dec
sbb
aas
mov
cmp
cmp
dec
dec
es
mov
and
clc
adc
je
xlat
sub
dec
inc
and
mov
std
hlt
pop
scas
aaa
mov
out
dec
xor
push
jae
sbb
cmpl
cmc
js
jl
xor
das
mov
push
xlat
fnstenv
popa
xchg
xchg
and
ror
test
roll
lret
lcall
loopne
and
sub
mov
sub
pop
test
push
mov
out
pop
test
jmp
test
jecxz
and
lods
or
inc
cmp
xor
jbe
cwtl
xor
pusha
jecxz
movsb
imul
adc
fcom
mov
xchg
push
test
neg
loop
fsubrl
pop
adc
or
push
outsl
mov
adc
jbe
sub
cmp
lret
jl
dec
js
mov
and
add
push
mov
jp
cmp
and
loopne
sbb
addb
rcll
outsb
inc
testb
push
mov
xchg
je
test
mov
mov
jl
xor
pop
adc
push
push
mov
leave
pop
int
pop
or
mov
popf
lock
jae
cmp
and
test
push
into
and
insb
mov
arpl
sbb
mov
or
aas
jno
sbb
into
dec
and
das
inc
push
add
fldenv
stos
leave
xor
or
cwtl
sub
add
ja
lret
mov
dec
insb
bound
sbb
gs
das
dec
sub
test
jg
push
popf
fnsave
sub
add
mov
jge
cmp
cwtl
stos
jb
mov
enter
ja
sti
je
and
loopne
xchg
mov
arpl
popf
lods
xchg
inc
pop
stc
repz
popa
sbb
mov
out
push
xor
adc
cmp
adc
adc
lds
repz
sbb
xlat
rcrl
lods
fisubs
push
arpl
push
mov
dec
xor
movsb
inc
inc
bound
jne
xor
jecxz
sub
mov
adc
dec
nop
adc
pop
mov
push
sarl
imul
inc
adc
cmpsl
sub
je
outsl
and
push
jg
fisttps
cmpsl
insb
mov
mov
mov
lods
sahf
loope
xlat
mov
lds
sub
fwait
sti
mov
test
stos
fcmovnb
inc
mov
ret
push
out
and
mov
mov
and
dec
arpl
xor
pop
push
add
mov
sbb
add
je
xchg
sbb
push
stos
imul
testl
push
movsb
fidivs
mov
dec
inc
roll
sub
aad
pop
mov
jnp
popa
pop
cs
insl
ljmp
das
mov
js
mov
mov
out
pcmpeqd
xchg
xchg
icebp
cmp
pop
inc
jle
lock
outsb
imul
rcl
fwait
sbb
add
dec
js
cmc
fsubl
adc
mov
ljmp
add
inc
movsb
mov
repnz
jnp
sub
je
lock
or
test
loop
int
hlt
arpl
insl
sub
xchg
push
std
not
outsb
jmp
rcrl
test
aaa
dec
jle
adc
jl
or
xor
pop
in
ror
mov
adc
and
and
sar
mov
aaa
add
adc
ffreep
push
jnp
cmp
xor
push
data16
rorb
je
push
fwait
mov
or
jecxz
data16
adc
jle
jg
clc
inc
push
mov
push
ret
je
mov
popa
pop
xor
and
lea
jnp
inc
mov
lret
into
mov
fisubrl
lods
jmp
lea
jmp
pushf
notl
xor
shlb
rcr
test
mov
adc
or
insl
fcoml
cld
mov
dec
add
mov
outsb
dec
add
out
mov
pop
xor
enter
jle
sti
xchg
dec
icebp
pushf
xlat
icebp
dec
jmp
in
imul
ret
test
pop
and
icebp
out
in
lds
aas
cmp
cmp
mov
stos
cmpsb
cld
mov
mov
mov
or
jno
cmp
popf
outsb
jl
std
sbbl
stc
xchg
mov
ja
cmpb
ret
push
in
aas
jecxz
mov
aas
scas
shlb
shll
subl
or
aaa
pop
add
lret
imul
mov
push
dec
mov
adc
sub
xor
pop
mov
repz
adc
std
add
jnp
and
adc
repnz
aas
lods
div
push
fistl
xor
dec
out
xchg
inc
fcompl
xchg
cmpl
cmpl
adc
dec
cmp
into
sbb
popf
insb
dec
into
and
movsl
icebp
push
pop
pop
cwtl
push
fistpl
hlt
sub
xor
je
dec
mov
xchg
mov
and
mov
stos
out
pop
loop
and
or
inc
push
or
repz
pushf
sub
jb
les
les
sti
lret
dec
pop
mov
mov
sbb
push
ret
jecxz
fcoms
cmp
and
sti
add
dec
jge
outsl
arpl
pop
std
je
enter
push
mov
sub
movsl
xchg
adcb
xor
cmpsb
nop
insb
les
add
xorl
scas
daa
les
fisubrl
ret
insb
sbb
insb
add
ja
ss
pop
sbb
cmpsb
add
sub
jno
adc
sub
scas
xor
push
sub
sub
faddl
adc
jae
outsb
insb
sbb
repz
out
add
data16
adc
cmpsb
scas
inc
in
icebp
xor
aas
add
mov
fcmovne
cmp
sub
fsubrs
mov
sub
ret
js
fcoms
jge
jg
rol
fisttps
sub
xchg
dec
out
pop
sbb
ret
imul
push
cmp
adc
jbe
push
pop
imulb
stos
mov
leave
push
out
mov
mov
jle
fdivs
and
xor
outsb
aaa
push
adc
add
cmpb
scas
mov
ds
shll
in
fsubp
mov
push
in
jg
movsl
push
xchg
cmp
fisttpl
std
sub
les
cmp
out
mov
imul
rcl
pop
sub
xchg
xor
stos
js
adc
int3
mov
loop
cmp
cmp
mov
pop
inc
lods
popa
ror
mov
ss
sub
jge
push
mov
aas
gs
stc
inc
push
mov
pand
fucomip
mov
ljmp
fmull
pusha
inc
lcall
test
mov
lret
mov
adcl
insl
mov
or
jg
pop
imul
push
cwtl
punpckhbw
in
stos
hlt
insl
xchg
hlt
lahf
xchg
lods
dec
xchg
sub
loop
pop
push
jb
mov
dec
mov
aam
and
cld
push
xchg
es
sahf
sub
inc
rclb
and
add
mov
js
arpl
mov
dec
xorl
sarl
cltd
call
rorb
repnz
jbe
inc
push
inc
push
lods
adc
inc
add
push
pop
nop
mov
adc
xor
mov
and
cld
or
dec
mov
cmp
jmp
xchg
out
das
adc
xor
sbb
xchg
pop
int
pop
sbb
movsl
jp
in
sub
and
daa
push
es
pop
xchg
lcall
or
stos
cmpl
ss
js
in
loope
popa
mov
xchg
adc
jo
arpl
dec
aad
adc
cmp
push
loope
push
ret
mov
popa
cmp
cltd
cs
js
dec
mov
add
cltd
pop
imul
loop
sub
js
mov
jg
and
jg
lea
pop
xchg
xlat
jmp
sub
fldenv
lds
mov
bound
jbe
sbb
in
loope
push
aam
mov
mov
addr16
lcall
stc
lock
loope
imul
mov
loop
mov
cmp
mov
dec
outsl
fmull
cmpsl
cmp
add
ds
dec
dec
inc
sbb
mov
call
jns
lods
push
sbb
push
cli
cmc
data16
jns
pop
xchg
in
mov
push
stos
dec
orb
xlat
and
mov
pop
push
inc
add
dec
add
pop
int
jmp
and
sub
sub
test
ljmp
cwtl
leave
decb
shlb
jl
stos
adc
in
xor
jge
mov
icebp
addr16
ss
cmp
cmp
mov
pushf
or
sbb
cwtl
xchg
dec
xor
lahf
cmpb
jp
sbb
add
push
xor
xchg
fidivrl
psllq
mov
nop
pop
int
dec
call
fimull
into
jb
mov
popf
fstl
in
stos
dec
gs
add
xchg
xor
inc
out
sahf
push
cmpb
add
pop
push
jg
mov
out
pop
sbb
inc
sbb
fsubs
pop
out
std
lret
mov
cli
cmp
out
les
fadds
mov
dec
xchg
mov
sub
mov
jbe
push
and
inc
test
es
mov
lret
mov
outsb
je
xor
lods
ss
xor
rorb
jb
jle
lea
inc
les
pop
add
cmpsl
sub
push
repnz
cmpsl
sub
stos
sbb
mov
jle
les
and
adc
adc
insb
popa
cmpsl
push
mov
sar
dec
je
mov
insl
jg
repnz
loopne
aaa
fbld
enter
daa
push
lahf
sub
aaa
cld
xchg
jbe
cmp
inc
cmp
mov
sbb
lea
fnsave
fdivrs
dec
jg
mov
inc
das
out
mov
mov
mov
inc
movsb
sbb
cld
stos
jp
inc
add
and
mov
push
and
mov
bound
scas
sub
scas
cmp
dec
mov
cwtl
jl
cmp
cld
out
fisubrs
clc
jnp
icebp
fldt
xor
mov
ret
mov
or
push
bound
add
xchg
jle
orl
fucom
adcl
xchg
add
sbb
testb
and
push
lret
ljmp
push
fadds
jne
inc
jne
jl
cmp
push
push
movsb
daa
inc
push
cli
mov
js
es
jae
cli
mov
dec
dec
and
mov
shll
bound
and
jbe
fiaddl
ret
and
bswap
enter
add
insb
cmp
testb
xchg
mov
and
repz
fwait
aam
scas
mov
xor
jnp
sarl
add
or
movsl
add
mov
or
and
push
sub
lret
pop
roll
pop
dec
test
stos
les
inc
int
mov
mov
mov
pop
mov
push
jo
fsubr
pop
lret
add
jbe
xchg
jmp
push
movsl
inc
fs
jmp
add
js
sub
xor
lds
sti
pop
imul
push
xor
xor
pop
test
dec
inc
mov
insl
jle
lret
and
clc
mov
pop
mov
pop
cmp
inc
movsb
jmp
leave
sub
in
and
sub
mov
push
addr16
pop
jnp
cmp
fsubr
mov
mov
dec
jno
cmp
stc
bound
cltd
ds
pop
pop
lret
mov
adc
cmp
mov
mov
movsl
jnp
mov
lcall
insl
jecxz
lcall
sbb
mov
data16
fnstsw
sbb
std
std
out
cmp
mov
data16
fldl
or
cmp
xchg
xchg
arpl
dec
inc
add
addr16
fsubrp
xor
cmp
arpl
es
sub
pop
pop
xchg
aas
pop
leave
adc
push
scas
mov
lea
cmpsl
ror
mov
mov
dec
out
icebp
push
jae
test
punpckhwd
or
std
inc
pop
lock
jbe
sub
fs
fisubrs
mov
add
cli
add
ret
lahf
push
test
nop
insl
mov
leave
je
mov
out
cmpl
xchg
pushf
aas
jmp
aas
xor
mov
cwtl
jnp
xor
cmp
iret
adc
xchg
mov
fs
mov
iret
push
mov
test
aam
loope
aaa
les
outsl
incl
enter
hlt
push
pop
jae
lods
cmp
cmp
sbb
fisttpll
xchg
jmp
pop
add
sbb
enter
pop
ret
or
stos
mov
fsubl
popa
stc
jmp
sub
pop
cli
jmp
jl
stos
popa
sbb
or
lock
in
pop
lcall
loopne
sub
fsubrl
loop
add
inc
push
dec
ret
lock
mov
fs
mov
clc
sarb
aam
sahf
xchg
ljmp
addr16
enter
jb
xlat
and
ja
aad
clc
mov
aad
jmp
jg
or
jecxz
push
leave
stc
test
inc
fdivrl
rorl
sub
xchg
inc
mov
inc
add
mov
dec
sbb
push
sub
cmp
mov
or
sahf
ret
test
daa
mov
mov
adc
loopne
push
pop
adc
roll
cld
icebp
mov
adc
jb
outsb
ss
push
inc
incl
xchg
outsb
sub
or
sbbb
add
adc
cmp
jne
mov
imul
sbb
jp
jmp
or
xlat
xor
cmp
mov
mov
mov
ds
jg
and
scas
mov
ljmp
testb
xchg
fisttps
add
xor
xor
adc
mull
repnz
mov
sar
sub
pop
dec
xchg
xor
fwait
inc
in
mov
push
push
adc
fisttpll
dec
mov
lea
sti
loop
ja
jae
cld
test
mov
fnstcw
jge
push
loopne
push
ret
jp
arpl
scas
ret
mov
mov
es
bound
repz
fimuls
sub
sbb
scas
mov
dec
adc
test
ss
push
mov
cmpsl
mov
and
int3
sahf
sbb
scas
jl
adc
add
mov
jmp
shrl
or
push
scas
adc
loop
adc
fs
adc
jno
int3
sbb
xchg
call
addr16
imul
das
jg
stos
inc
ss
cmp
mov
cmp
add
lcall
sub
movsb
dec
iret
cmp
lea
std
ret
xor
shrb
lods
lea
test
mov
push
fdivs
pop
aam
fsubrl
jno
jle
sbb
fdivl
in
and
je
loopne
mov
mov
push
add
xor
mov
and
sbb
daa
inc
jb
jne
xchg
xor
lahf
insl
pop
jmp
mov
cmp
xchg
insb
sbb
loopne
dec
mov
into
xor
dec
push
les
lock
addr16
mov
int3
jo
inc
mov
js
hlt
aaa
repz
iret
cmp
setno
push
or
aam
lds
inc
or
in
mov
outsl
jp
cmp
ja
dec
sbb
add
mov
jo
jns
dec
push
cmp
shlb
cmpsb
aaa
aas
xchg
test
pop
movsb
mov
add
dec
clc
xchg
push
mov
cmp
fsub
vpshuflw
pop
xchg
popa
fisttpll
xorb
repz
and
mov
mov
fisubrs
mov
add
cmp
xchg
mov
in
loop
pop
pusha
in
dec
in
ds
sbb
or
dec
test
or
xchg
iret
loope
cmp
cmpsb
je
xchg
cmp
mov
adc
jmp
lahf
mov
ja
cmc
cmp
inc
xchg
jns
lahf
push
jne
pop
adc
fcompl
and
in
pop
mov
scas
movsb
pop
repz
outsl
mov
les
xchg
sti
out
ret
jno
adc
pop
popa
cld
icebp
mov
and
dec
cmp
xor
xchg
dec
scas
jle
insb
arpl
cmp
insb
xchg
int
data16
xor
scas
imul
pop
dec
sub
pop
cmpsb
xor
sbb
jnp
jne
shll
popf
adc
sub
sbbb
outsb
ret
lods
adc
insb
xor
push
int
inc
lock
or
mov
xlat
sbb
jecxz
outsb
xlat
inc
cmp
jecxz
push
inc
sbb
and
add
ds
jecxz
enter
mov
mov
dec
adc
sub
pop
add
orb
add
mov
aad
mov
popf
outsl
test
cmp
repnz
rcr
ret
adc
out
mov
adc
shr
in
popf
push
adc
xlat
push
inc
jmp
xlat
or
lds
je
int3
adc
fsubl
cmpsl
shrl
dec
mov
jmp
or
pop
test
ror
out
loopne
imul
fbstp
lret
xor
push
inc
or
and
loop
xor
adc
xchg
mov
ljmp
aas
cmp
mov
nop
xorb
mov
lret
dec
sub
jns
sub
fdiv
dec
push
push
or
dec
flds
addr16
ljmp
pop
mov
andl
and
mov
call
or
rolb
push
data16
cmp
inc
jno
jns
dec
out
sti
push
out
and
pop
ljmp
insl
cmp
fnstsw
out
leave
sbb
stc
sub
lds
movsl
je
add
popf
xor
dec
or
lret
add
push
pop
pushf
scas
inc
add
jo
rclb
mov
inc
sub
fistpl
stos
pop
or
cmc
or
scas
mov
lret
xor
fs
repnz
shll
pop
loope
push
clc
movsb
sbb
sbbl
lock
push
mov
test
fldcw
idivl
or
je
or
in
scas
sbb
inc
or
jg
xor
arpl
lret
cld
jl
cmc
pop
das
movsl
xchg
xor
jl
aaa
xchg
aaa
dec
lahf
push
lret
push
shl
mov
xor
hlt
mov
fsubrs
xor
clc
test
dec
sti
rorl
sub
cli
loope
adc
iret
mov
jmp
inc
fs
dec
jo
xchg
xchg
and
pop
and
mov
push
loop
pop
xchg
and
shlb
mov
enter
test
xchg
and
movsl
pop
daa
mov
jns
ffreep
lahf
enter
es
mov
sub
nop
stos
repnz
out
into
push
int3
arpl
mov
mov
mov
aas
xchg
out
mov
iret
or
mov
pushf
add
rol
push
mov
punpckhwd
repz
sti
lret
mov
mov
push
nop
jb
loop
inc
and
pop
push
test
pushf
xor
icebp
ret
insl
xor
mov
adc
rol
pop
out
add
gs
int3
pop
sbb
jp
lret
pusha
dec
loope
testb
loop
mov
mov
aaa
shlb
shl
and
pop
enter
inc
or
in
mov
imul
loope
addr16
ljmp
je
cmpsb
inc
cmp
hlt
ljmp
hlt
mov
mov
mov
lcall
jnp
sbb
mov
ljmp
lcall
dec
push
out
push
cmp
ja
and
jl
out
stos
xchg
cld
test
mov
xchg
adc
sub
mov
push
lea
aas
sar
xchg
pop
add
int
mov
mov
sbb
mov
ss
jg
adc
mov
jg
lea
cltd
dec
mov
inc
pop
fldt
mov
adc
cmp
fstps
jnp
out
jecxz
ret
das
mov
rcl
mov
loop
ret
je
es
push
mov
or
push
fcompl
sbb
das
dec
inc
sbb
test
rorl
jo
lods
loop
dec
mov
sbb
leave
out
aam
cmp
pusha
cmp
in
iret
add
mov
rol
mov
sub
push
arpl
jb
lods
inc
add
inc
popa
push
das
loope
push
cmc
mov
cmp
shl
mov
mov
repnz
nop
loope
sahf
enter
mov
lds
sti
psadbw
loop
int
fbld
nop
dec
dec
adc
testl
cmc
dec
mov
mov
jno
mov
stos
outsb
or
xchg
adc
mov
dec
mov
xor
cmpsl
pop
addr16
inc
fs
es
cltd
fdivs
cmpsl
lret
sbb
popf
push
fisttpll
jnp
pop
aaa
xchg
xor
popa
cmp
fwait
rcll
pop
divl
loopne
in
movsl
or
pusha
call
inc
cmp
jbe
xlat
xchg
xor
pop
xor
rcl
or
jg
lea
inc
repnz
subb
mov
out
mov
das
inc
andb
push
in
sbb
data16
pop
or
xor
bound
adc
cmpsl
push
dec
mov
ds
movsb
daa
and
mov
lods
cs
in
lds
or
fsubs
aad
dec
repnz
ds
xor
pop
cmp
jle
adc
jg
or
aad
inc
cmp
in
out
jno
xchg
pushf
pop
push
or
add
nop
mov
sahf
jb
jmp
mov
clc
fiadds
sti
test
shlb
jo
sub
leave
or
jmp
sbb
xor
and
fwait
jo
xchg
cmpsl
enter
mov
mov
addl
int3
orps
out
fcmovnb
das
incb
and
sahf
in
movsl
icebp
cmpb
jne
sti
push
imul
jne
mov
gs
xchg
mov
lock
lea
sbb
adc
jns
fsub
mov
out
sbb
mov
repz
sub
dec
jno
lock
subl
sbb
stc
mov
or
xor
mov
jo
pop
push
cmp
cld
lds
mov
mov
mov
add
sarl
loopne
scas
add
stos
popf
out
call
sbb
mov
gs
push
mov
xor
repnz
inc
jbe
cmc
mov
aam
fwait
lret
out
dec
mov
and
dec
scas
inc
push
rcrl
outsb
sub
frstor
xor
out
xor
pushf
or
lahf
incb
je
mov
push
pop
repz
std
out
mul
mov
pop
jge
rolb
push
loop
cmp
mov
jnp
or
cmovnp
jl
shr
add
scas
stc
xor
pop
scas
add
cwtl
dec
fstpl
lods
cld
mov
sbb
ljmp
sub
mov
inc
push
int3
push
and
stos
out
scas
mov
gs
outsb
mov
mov
push
pusha
dec
or
lret
jns
fsubrs
aaa
cli
push
mov
repnz
mov
sub
xchg
jge
adc
fcmovnb
aas
bound
add
rcll
lods
push
in
mov
in
leave
add
setns
mov
mov
dec
push
aaa
adc
xchg
and
push
adc
adc
push
and
push
and
mov
xchg
imul
pop
and
aad
and
dec
mov
bound
push
dec
mov
sahf
cld
ret
or
sub
stos
lea
das
mov
popf
bound
or
jp
das
ljmp
push
pop
add
enter
arpl
or
cmpsb
pop
into
xchg
inc
adc
aas
in
lret
test
fninit
test
les
inc
dec
pop
nop
mov
mov
stos
pusha
pop
ss
mov
cltd
adc
addr16
mov
in
jl
mov
outsb
and
cmpsb
inc
notl
jmp
mov
lcall
clc
lret
sbb
fs
pop
add
push
shl
xchg
jp
js
lock
pop
pop
shrl
popf
out
xchg
push
fwait
or
xor
xlat
pop
daa
adc
call
pop
dec
jbe
loopne
add
pusha
jne
jae
adc
and
xor
xlat
push
std
mov
mov
sub
or
les
jae
fiadds
and
ja
stc
popf
jae
mov
dec
test
push
leave
cmc
js
cwtl
cmp
add
mov
rclb
popa
ljmp
push
rcrb
dec
jne
adc
lret
movsb
inc
ds
in
jle
repz
addl
aam
imul
pop
das
mov
add
adc
xchg
out
call
jg
push
pop
pop
add
push
sub
or
inc
jbe
mov
mov
clc
rclb
inc
dec
add
push
mov
cmp
cmpsb
scas
sbb
sbb
jp
imul
jge
fiadds
test
aam
js
dec
mov
sub
push
inc
xor
mov
test
insb
pop
pop
iret
xchg
int3
lea
dec
test
add
pushf
mov
push
lods
fdivl
jmp
fldcw
pop
xchg
iret
sbbl
andl
mov
test
dec
sub
pop
ds
jae
ljmp
inc
rcrb
sbb
xchg
adc
xchg
sub
shrl
cmc
cld
xchg
hlt
xchg
pop
clc
cltd
call
ficompl
mov
loop
add
in
andl
pop
adc
adc
sbb
rcll
mov
push
sti
mov
lods
and
inc
inc
icebp
sbb
mov
leave
adc
adc
jmp
sbb
movups
icebp
push
movsl
sti
mov
cmc
shrb
mov
fwait
add
ret
test
loope
xlat
adc
fs
icebp
out
sub
faddp
mov
bound
roll
inc
adc
pop
mov
inc
jae
jg
fistpl
jbe
mov
adcl
dec
lods
pusha
inc
in
mov
dec
mov
inc
nop
inc
inc
pop
add
test
adc
loope
mov
test
pop
ljmp
iret
pop
aaa
xchg
and
repz
xchg
push
dec
ja
insb
sbbb
sarl
mov
dec
stc
dec
je
jp
stos
sbb
cmp
jge
test
adc
push
repz
adc
push
sub
repz
or
aaa
dec
repz
push
popf
lods
push
test
fs
cmp
mov
arpl
cmpsb
xor
loop
aas
out
sub
lcall
mov
xor
and
cmp
ja
rcrb
enter
es
push
inc
xor
lret
mov
inc
cmp
dec
movsb
xlat
sub
inc
sub
lret
add
stc
inc
nop
rcll
xchg
fchs
lcall
dec
mov
es
and
and
roll
or
popf
insb
ds
and
das
out
xchg
aad
and
cmp
loopne
sub
adc
mov
sarb
insb
jne
shll
inc
jo
jnp
inc
into
int
lret
and
pop
cmc
clc
jbe
dec
rclb
out
dec
fidivl
insl
push
jecxz
xchg
std
xchg
mull
movsb
sti
dec
adc
mov
mov
lret
int
lret
xchg
lea
mov
jo
xor
jl
adc
xchg
pop
add
adc
out
test
orl
cmp
adc
mov
cmp
test
cltd
or
out
enter
cmp
xchg
cmpl
xchg
icebp
fcompl
iret
cli
sti
repnz
mov
sbb
push
inc
push
or
add
dec
cmp
jge
jnp
dec
movsb
jmp
cmc
fwait
xchg
or
jle
shlb
lea
xchg
xchg
inc
xchg
mov
xchg
fs
push
nop
daa
hlt
jns
fcoml
or
rorb
dec
aad
xor
cmp
arpl
cs
imulb
xchg
gs
pop
in
pop
stc
out
mov
jmp
stos
pop
je
lret
mov
jb
pop
js
xor
mov
xchg
xchg
adc
call
fisubl
cmp
lcall
push
enter
js
insb
xchg
std
cld
rcll
add
mov
fs
sahf
xlat
or
movsl
inc
and
inc
ds
faddp
lcall
pop
push
push
and
mov
jp
xchg
mov
dec
aas
xor
and
fwait
ja
adc
sahf
dec
ret
outsl
ret
into
mov
mov
xor
cmpsl
mov
push
mov
mov
inc
fsubrs
test
jnp
leave
stos
in
in
outsl
stc
xchg
lds
push
push
jnp
ret
loope
adc
add
add
add
push
in
ds
loopne
testl
adc
jg
mov
xor
icebp
addr16
inc
mov
add
cmp
stos
push
call
and
cmp
sahf
and
movsl
push
sbb
push
ja
or
cmp
movsl
hlt
aam
sbb
ja
lock
adc
ds
out
repz
hlt
cmp
aas
pop
mov
mov
push
dec
js
nop
mov
sub
js
filds
push
out
mov
test
jl
sub
repnz
into
in
cmp
bound
imul
add
inc
outsb
dec
mov
fisttps
mov
iret
fcompl
sbb
pushf
push
arpl
and
out
orb
and
iret
outsb
xchg
lret
adc
push
mov
and
mov
cld
mov
jge
jne
popf
jp
pop
sub
jp
jo
dec
dec
cltd
jle
add
inc
mov
xor
leave
fsubl
lret
inc
pop
pop
les
xor
xchg
adc
sub
jle
jecxz
cmc
into
into
mov
icebp
call
outsb
sbb
fists
xor
mov
je
popa
popf
jle
addl
pop
and
enter
mov
inc
andb
jp
shrl
add
cmp
sub
push
out
int
mov
jbe
add
aam
sti
xor
repnz
inc
push
aam
cmp
scas
push
js
jle
push
ss
lock
in
addb
inc
aam
les
add
test
iret
xchg
out
sub
ds
test
mov
dec
aam
or
jno
imul
js
sub
mov
insl
push
gs
xchg
xor
or
add
cld
fcoms
pop
mov
sub
ret
out
sbb
lret
push
or
inc
sub
mov
scas
loopne
in
push
cmp
shrl
add
pop
sahf
outsb
fs
inc
sbb
sbb
xchg
adc
add
jp
xor
sub
mov
xor
dec
add
mov
sub
dec
gs
add
adc
int3
test
pop
push
int
add
sbb
lret
outsb
rclb
addr16
lods
and
or
lret
test
xor
jmp
pop
mov
mov
fadd
int
mov
xchg
jbe
je
jl
add
adc
sub
mov
mov
inc
icebp
faddl
mov
je
aaa
or
mov
adc
sbb
jnp
cltd
lock
shll
pop
cwtl
rcll
xor
lret
scas
repz
out
mov
dec
ss
or
in
cmpb
fbstp
jl
mov
cmp
lds
mov
movsb
dec
xchg
bound
pop
sar
mov
outsl
pop
mov
sub
fldt
mov
xchg
mov
and
jae
out
icebp
jmp
add
loopne
shrl
push
sub
adc
test
add
mov
sti
push
xor
in
sub
repnz
lods
xlat
mov
dec
pop
lock
adc
xorps
test
nop
sbb
arpl
pushf
pop
lea
stos
mov
cmpsb
imul
xor
cmpsl
cmp
xor
flds
mov
and
mov
cmpsl
mov
movsl
mov
sbb
shl
pop
ja
or
xor
loope
fdivl
or
or
cld
leave
inc
mov
les
push
adc
into
or
mov
in
aad
xchg
mov
insb
push
les
push
xor
lret
cmc
es
inc
stos
push
clc
sbb
jnp
sub
xchg
sub
mov
cmc
addl
xchg
jg
dec
jo
mov
ds
fwait
mov
adcb
push
dec
cli
push
ljmp
mov
movsl
mov
call
inc
dec
inc
mov
rcrb
iret
inc
lcall
int3
stos
mov
mov
popf
jbe
or
aaa
icebp
fcompl
dec
sbb
ret
cmpsl
sub
orl
daa
insl
inc
rolb
jle
aam
or
inc
or
fisttpl
mov
lock
pushl
sub
xor
xor
pop
sbb
rcr
int
sti
jmp
mov
sbb
lods
sub
sbb
rol
lret
fwait
mov
push
repz
loop
pop
enter
das
mov
pushf
mov
dec
jge
pop
jmp
xor
hlt
sub
mov
push
sub
scas
lahf
inc
pop
clc
mov
add
jns
mov
shrl
push
lods
adc
push
adc
xor
pop
cltd
cmp
outsb
mov
add
cld
fwait
nop
pop
xorb
push
cmpb
push
mov
pop
cmp
ja
pop
mov
jge
lret
sub
xor
mov
push
and
mov
aas
mov
xchg
pop
repnz
jl
cmpsl
shlb
xchg
movsb
lcall
lods
imul
jle
outsb
insb
adc
jbe
test
xchg
dec
scas
or
lahf
movsl
dec
not
mov
fildl
enter
push
jmp
push
sbb
pop
sbb
lods
aaa
aaa
sub
out
adc
pop
mov
loop
pop
cld
xchg
stc
push
mov
cli
bound
cmp
push
je
popf
ficoms
lcall
sbb
lcall
cltd
test
sbb
lahf
fwait
lahf
mov
shll
les
repz
dec
sahf
test
aaa
add
cli
xchg
cmp
inc
sub
pusha
lods
hlt
or
mov
dec
xor
pop
outsb
xlat
jle
push
jmp
test
mov
scas
add
xchg
scas
inc
xchg
das
test
mov
fbstp
pop
iret
fisubrl
cmpsb
int
js
cmovbe
or
pop
mov
cmp
inc
lock
mov
adc
mov
mov
int
int3
and
sbb
push
fidivrs
xor
add
xchg
jnp
add
sahf
push
loope
pushf
int
nop
insb
sbbl
and
pop
std
idivl
mov
inc
lock
ljmp
xchg
push
mov
aas
hlt
roll
xchg
sub
pushf
cmpsb
inc
out
sub
mov
ss
cmpsb
push
and
sahf
inc
xchg
jne
or
aam
xchg
adc
lcall
mov
pop
repnz
mov
cmpl
fs
popf
xor
sbb
jecxz
aas
and
mov
lds
arpl
sbb
rcl
jo
icebp
fs
mov
sub
stos
mov
cmp
movsl
mov
pushf
cmpl
inc
cltd
pusha
inc
push
dec
pop
test
call
cmp
mov
dec
sub
mov
adc
testl
popa
mov
sub
insb
filds
aad
add
mov
mov
sbb
lds
cli
xor
sub
mov
stos
cmp
addr16
add
add
inc
fdivrs
push
mov
aad
pushf
xor
inc
xchg
fwait
insl
cmp
cltd
xabort
ljmp
movsb
xchg
in
rcll
mov
test
inc
int3
mov
ret
pop
lcall
mov
add
and
mov
xchg
lret
test
daa
lahf
sbb
mov
sub
or
sahf
dec
pop
mov
inc
enter
in
mov
in
or
cmp
jg
mov
leave
sbb
js
mov
push
push
mov
pop
mov
cltd
or
aas
popa
hlt
aad
jle
dec
mov
mov
fstl
add
sbb
mov
fsubl
jecxz
mov
dec
repz
clc
adc
jns
xchg
inc
adc
sub
pusha
aas
loop
xor
adc
cmpsl
fadds
arpl
pusha
inc
xor
fs
mov
shlb
in
pushf
loop
std
xchg
adc
pop
dec
sub
adc
call
cmp
add
enter
stc
mov
mov
add
push
loope
ret
mov
jnp
add
xor
xor
enter
rol
jle
test
sub
js
and
in
lcall
test
andps
mov
aam
jne
movsb
and
mov
pop
jp
adc
mov
xchg
mov
and
js
push
and
out
pop
lods
add
out
dec
jo
je
push
xchg
push
or
inc
fs
xchg
shrb
pop
mov
or
aaa
imull
or
jo
mov
and
add
lcall
test
xchg
scas
hlt
call
cmpsb
push
adcl
mov
cwtl
and
scas
mov
dec
jg
push
arpl
mov
and
filds
sbb
pop
mov
mov
cmp
movsb
jp
sarl
jno
push
addr16
test
sbb
shrb
and
fstpl
sbb
sub
lcall
push
xchg
pop
xchg
mov
push
ret
ficoms
mov
dec
loop
add
int
mov
gs
loope
adc
push
mov
std
cmpsb
and
pop
aam
les
or
mov
clc
adc
loop
rcrb
push
jae
push
sub
in
sbb
mov
mov
rol
jp
xor
out
sub
add
push
mov
loop
pop
add
xor
pop
daa
and
inc
or
jbe
aad
mov
imul
mov
out
enter
mov
aaa
ds
jle
mov
stos
nop
in
or
dec
iret
arpl
lret
inc
cmc
adcb
adc
mov
cmc
loop
sub
int
sbb
popa
inc
pop
inc
dec
fdivs
sbb
mov
out
push
mov
xorb
sub
lock
insb
add
call
notl
mov
pusha
mov
push
ret
xor
push
iret
xlat
dec
iret
or
push
scas
cltd
pushaw
neg
hlt
xor
pop
pop
je
repz
jo
adc
loopne
pop
test
loop
xchg
jns
jl
adc
mov
sbb
gs
dec
dec
xlat
shll
ret
pusha
mov
ja
adc
cmc
mov
hlt
inc
ja
ret
cmp
and
ret
icebp
xchg
cmp
adc
jecxz
imul
mov
jp
movsb
jne
inc
sbb
xchg
neg
xchg
or
arpl
mov
testb
pusha
push
ret
cmpsb
push
push
jp
repz
cmovae
jmp
jecxz
mov
stos
cmp
pop
pop
insl
sub
jae
mov
stos
sbb
push
scas
cld
lea
push
pop
les
pop
and
inc
pop
fisttpll
sbb
inc
daa
jb
in
stos
popf
sub
test
cmp
loopne
sbb
repnz
xor
les
iret
sub
mov
xor
hlt
gs
addr16
dec
sub
jae
mov
mov
test
or
aaa
insl
cltd
dec
adc
mov
mov
aas
in
fsubl
idivb
in
xchg
aas
test
and
mov
jmp
cmp
dec
jmp
bound
jl
pop
rcrb
fstpt
inc
mov
arpl
inc
cmp
es
in
test
pop
cmpsl
fs
sbb
mov
fwait
jns
mov
cli
outsb
imul
mov
fwait
xchg
movsb
js
out
mov
pop
lea
lea
faddl
jno
shrl
cmp
mov
and
add
outsl
mov
mov
mov
mov
adc
dec
cld
pop
push
and
test
in
lea
push
pusha
push
mov
jecxz
lds
xchg
add
insb
gs
mov
dec
xchg
ss
pop
and
notl
jg,pt
jbe
stc
mov
inc
int
sbb
call
mov
lret
cmp
push
cmp
std
mov
es
fwait
sub
repz
mov
xor
fistpll
xchg
mov
inc
loopne
sbb
adc
orb
cmpsb
pusha
push
es
or
stc
mov
or
push
jae
es
jle
dec
js
mov
btr
pop
jne
lcall
adc
and
pop
mov
fsubrp
push
outsb
mov
cli
les
mov
sub
inc
push
jg
inc
aas
inc
and
mov
xor
out
push
and
rol
jmp
gs
mov
push
inc
and
shrl
rcll
xor
cld
mov
mov
push
fsubrs
clc
inc
pop
ret
push
sarb
cli
xor
xchg
aam
inc
push
or
lret
nop
aam
pop
pop
imul
mov
push
pop
dec
imul
aad
je
vpaddb
ret
shl
cmp
xchg
lret
aad
out
in
cmpsb
xor
movsw
loope
dec
lods
rorb
jo
mov
mov
xchg
mov
call
add
scas
cli
push
xor
mov
mov
fwait
mov
scas
xchg
xchg
clc
fucomip
daa
pop
orl
mov
add
sub
jae
pop
mov
cmpsb
aam
add
in
mov
mov
pop
sbbb
sub
mov
pop
cltd
mov
adc
sbb
test
or
cmc
jo
push
lods
imul
mov
imul
jb
pop
fs
imul
lahf
xchg
pop
aam
outsl
mov
sti
pop
ss
andb
mov
inc
xor
sub
cmp
stos
jb
xlat
adc
inc
out
dec
cwtl
jg
cmp
in
adc
jecxz
cld
xor
outsb
mov
iret
or
scas
xor
ret
xchg
mov
call
decl
xor
push
push
xchg
sub
bound
inc
cwtl
xchg
inc
fs
mov
sti
sub
dec
mov
aam
dec
xchg
jmp
and
adc
or
push
jae
sub
pusha
int3
mov
int3
call
lcall
mov
ret
or
stos
shlb
pop
fsubl
aaa
stos
cmp
ljmp
mov
shll
pop
test
lahf
jge
cmp
negb
and
mov
das
mov
jmp
shll
andl
cltd
jg
sub
stc
stc
cmp
lret
gs
inc
xor
mov
sbb
ss
lcall
mov
jb
lods
fmul
xor
xor
dec
out
sub
call
repz
push
adc
int3
dec
mov
and
jno
push
xor
xchg
or
in
xchg
mov
loopne
push
mov
inc
adc
pop
jae
gs
pop
xor
mov
das
cli
xchg
push
loop
inc
push
dec
iret
dec
in
loopne
sbb
ds
popa
pop
dec
sbb
jne
add
scas
jge
pop
loope
xchg
icebp
das
ret
ret
sbb
add
xchg
cmpsl
int3
in
adc
push
dec
movsb
jle
pop
push
pop
dec
push
or
jge
fstps
xchg
pop
stos
jne
jmp
nop
clc
jbe
testb
and
dec
iret
cs
mov
jge
mov
adc
inc
out
xor
jecxz
ret
pushf
ljmp
xorl
pop
gs
add
mov
add
push
dec
pop
push
cwtl
push
je
fwait
jl
stos
gs
cmpsl
push
clc
mov
adcb
sbb
adc
jg
pop
adc
jb
pop
mov
sbb
jg
add
cli
or
outsb
sbb
das
add
adc
testl
mov
iret
push
js
mov
push
in
xor
pop
or
inc
jae
lods
pop
daa
sub
mov
lods
cmpsb
jecxz
xor
adc
shll
stc
fimull
rcl
jg
pop
cwtl
dec
fadds
sub
leave
imul
imul
loop
js
and
gs
das
fimull
xchg
leave
loope
pop
cmp
lcall
insl
sbb
and
dec
rcrl
adc
jmp
inc
fildl
std
mov
mov
addr16
fs
nop
dec
jno
les
cmc
mov
or
outsl
pop
cltd
into
jmp
xchg
sub
outsb
mov
jne
mov
mov
and
xchg
scas
subl
pop
xchg
or
in
xchg
test
dec
shll
dec
sbb
arpl
bound
ret
fistpll
mov
in
cli
pushw
je
cld
xorl
mov
jb
cmp
jle
jge
xchg
pop
cmp
repnz
cmp
popf
sub
cmp
mov
xor
subb
dec
inc
sub
pop
das
mov
xchg
out
push
and
jae
pushl
shlb
jno
jge
xchg
jb
testl
or
xor
outsl
aad
or
dec
cld
mov
cmp
aad
decb
jns
push
popaw
ret
mov
mov
dec
adc
mov
dec
jo
mov
and
mov
fcmovnb
jmp
xor
fs
in
or
adc
mov
les
xor
and
add
cmp
mov
fistpll
adc
roll
sub
hlt
jno
pushf
mov
push
push
or
xchg
mov
cmp
call
repnz
mov
aad
sbb
mov
insb
add
pop
mov
lahf
mov
testl
in
out
pop
push
adc
shlb
dec
push
dec
xchg
mov
test
xchg
xor
pop
mov
sub
aaa
cmp
xchg
mov
jl
jle
out
mov
shll
sahf
fcmovb
test
mov
and
nop
lods
popf
ds
dec
inc
add
ret
lods
je
iret
dec
inc
out
push
pop
cltd
push
pop
aad
lds
iret
add
mov
adc
test
nop
popf
loope
orl
fcomip
jno
in
movsb
repnz
lcall
push
shll
xorb
push
sbb
or
adc
push
push
cli
or
push
sbb
sub
xchg
jmp
xchg
add
sub
mov
hlt
sub
and
sti
and
mov
xlat
mov
push
dec
xor
pop
outsl
into
mov
push
mov
push
push
cmp
in
push
int3
insb
push
inc
dec
cmp
xchg
fisubl
rorl
xlat
das
cmp
out
arpl
xor
dec
push
and
or
dec
movsl
arpl
nop
shll
push
sbb
out
sub
iret
je
mov
mov
popf
lea
mov
mov
arpl
pop
pop
lcall
test
fsubp
and
jnp
mov
nop
xchg
cmpsl
cmc
jmp
pop
mov
and
or
mov
mov
mov
xor
cmp
mov
lods
xor
add
jo
add
mov
mov
daa
icebp
loope
mov
cmpb
ljmp
lea
adc
cwtl
mov
push
pop
cmpsw
fadd
xchg
push
pop
es
mov
mov
call
push
push
in
aam
xchg
mov
test
aas
loop
in
sbb
push
xchg
incl
ds
mov
sahf
jmp
lret
and
test
cld
inc
or
pop
mov
dec
cmpsb
icebp
inc
ret
rolb
push
mov
push
stos
lods
adc
insb
mov
inc
pop
sbb
mov
fmul
cmpsb
xor
lret
ror
xor
scas
cmpsb
jbe
sub
push
sbb
out
dec
and
mov
movsb
pop
xor
push
das
ret
mov
imul
dec
data16
fnstsw
fimull
cs
pop
push
enter
ss
mov
mov
xchg
lret
xor
ja
jns
adc
out
inc
in
ss
aad
out
add
out
out
mov
push
push
xchg
movsl
or
inc
xor
sbb
stos
fsts
icebp
fbstp
sarl
ljmp
or
pop
sub
push
cwtl
mov
push
add
push
pop
int
int
popa
and
push
xchg
imul
add
dec
inc
jne
movsb
cmc
shlb
or
push
mov
inc
mov
out
jne
mov
or
lds
or
sub
cwtl
add
das
or
sub
sbb
or
inc
pusha
xor
adc
push
testl
inc
jl
lods
push
sbb
jle
dec
mov
test
sbb
into
mov
jae
repz
icebp
pop
rorb
divb
sbb
adc
mov
les
pop
jl
andb
or
and
mov
out
xor
cmp
or
shlb
ljmp
xor
insb
mov
mov
comiss
jge
pop
or
cmpsl
loop
push
cld
mov
xchg
adc
adc
popa
cld
adc
add
adc
mov
add
mov
ret
adc
mov
stos
scas
movsl
clc
in
bound
pop
jbe
jno
scas
cmp
pop
dec
popf
cmp
movb
jmp
xor
lret
fsubr
xchg
inc
aad
popa
xor
cltd
xchg
fnstcw
xchg
adc
loope
lods
stos
gs
sub
mov
xchg
rorb
xor
cmp
cmp
movl
mov
ret
scas
add
inc
jg
das
adc
adcb
incl
das
ljmp
inc
jne
and
add
int
adc
daa
sub
xchg
mov
sbb
push
inc
push
inc
outsl
pusha
inc
lods
and
test
xor
dec
xor
cmp
cmpsl
xchg
xchg
jecxz
or
sbb
dec
hlt
icebp
mov
sbb
sub
ror
jle
aad
scas
push
sahf
inc
mov
fdivrl
je
mov
sbb
lods
ds
lcall
jg
ficoms
ljmp
pop
jge
xor
jl
rcrl
lcall
xor
popf
xor
testb
ds
pop
pop
negl
and
inc
dec
ja
repnz
popf
call
pop
bound
popa
inc
rclb
xchg
inc
sbb
xor
sbb
mov
cli
in
push
sbb
jge
cmp
push
out
mov
cltd
mull
lods
sahf
inc
mov
pop
pop
hlt
int3
dec
dec
mov
mov
mov
test
dec
ret
or
cs
jl
fwait
xor
and
arpl
or
loope
add
push
xchg
ss
xor
sbb
xor
jno
adc
cli
pop
xlat
sbb
nop
loop
addb
hlt
xor
pop
leave
aam
das
add
xchg
jns
hlt
mov
sarl
mov
dec
aam
in
lods
into
push
pop
fs
shrl
xor
test
xchg
int3
lret
test
daa
xor
popf
sub
aad
filds
out
in
in
ss
cmp
or
push
lahf
stos
push
cmp
loope
inc
add
clc
xcrypt-ecb
cmpsl
mov
ret
sbb
adc
inc
push
enter
mov
sti
or
sbb
push
test
cltd
scas
daa
test
jne
je
jnp
dec
aaa
sbb
dec
sbbl
repnz
je
mov
repz
jge
adc
movsl
adc
pause
cltd
out
rclb
xor
push
outsl
imul
or
push
arpl
push
test
sahf
jg
daa
dec
mov
push
dec
push
lock
xor
rolb
inc
adc
stos
jne
dec
lret
or
sub
push
gs
lcall
cmpsb
mov
xchg
push
pop
loope
pop
push
dec
sbbl
add
sahf
sub
pop
mov
loope
jne
sbb
xchg
scas
xor
or
fistl
popf
dec
jb
fisubrl
push
jmp
push
sub
sti
add
mov
aam
ljmp
dec
fsubrs
adc
xchg
test
aad
addb
xlat
mov
jae
xchg
out
lahf
dec
dec
fiaddl
dec
xor
aas
stos
xchg
add
lret
cli
mov
mov
lods
push
std
dec
xchg
and
cmpsl
out
adc
jp
or
negb
cmp
lods
fs
in
or
inc
xor
add
popl
dec
dec
mov
sbb
inc
addr16
loopne
jno
xchg
xor
lds
cmp
fdivl
inc
and
fwait
sub
push
xchg
fs
sbb
out
fnstcw
shll
sub
sbb
or
repz
rcrl
call
xor
mov
mov
movsl
fcmovnb
push
data16
or
add
movsb
lea
vpermps
push
jne
bound
or
test
xchg
pop
xchg
das
inc
jecxz
lods
adc
pop
push
ss
mov
or
and
sub
jne
aad
test
mov
js
mov
jmp
add
ljmp
stos
repnz
popf
pop
xor
lret
into
movsb
shr
push
lcall
movsl
sahf
ss
lock
fnstsw
mov
popa
adc
adc
xchg
sbb
sbb
xchg
and
cltd
fsubrl
enter
out
xor
dec
std
ss
and
xor
or
jo
enter
std
pop
xchg
push
inc
jb
jg
cmpsb
xchg
mov
lret
sahf
std
add
loope
hlt
xchg
push
and
push
push
dec
dec
rolb
lock
outsl
out
xchg
adc
enter
push
sbb
adc
jb
stos
test
sti
popw
adc
sbb
cld
scas
lea
cli
ljmp
in
and
mov
lret
sbb
add
and
dec
xchg
insl
jns
subl
loop
sub
faddl
xchg
push
sbb
daa
sbb
jno
enter
dec
pop
xlat
outsl
mov
adcb
pop
gs
lcall
lret
jp
test
data16
sar
sbb
push
insl
lret
xchg
jl
ljmp
inc
dec
mov
adc
add
test
sub
pop
mov
dec
dec
int
arpl
cmp
jno
aaa
imul
jmp
aaa
js
popf
into
lret
push
add
pop
scas
mov
jmp
test
dec
mov
out
scas
jnp
das
ds
mov
insl
adc
lea
or
dec
fwait
and
mov
in
andl
stc
cmpsb
in
mov
mov
addb
loope
cmp
mov
fldpi
sub
sub
addl
pop
jmp
inc
cmpsb
jae
sbb
dec
mov
mov
ds
std
cs
sub
mov
inc
sbb
mov
ja
mov
rcl
stc
pop
pop
inc
jae
inc
push
mov
mov
xor
mov
gs
jge
ljmp
lock
sbb
inc
movsl
xchg
mov
loopne
sub
clc
fnstcw
jne
adc
jecxz
movl
sahf
adc
mov
cmp
ret
mov
push
cmc
ljmp
jp
jge
out
push
cltd
sbb
stc
add
inc
or
mov
int3
xchg
lods
pop
mov
js
movsl
cmp
dec
mull
or
sbb
push
inc
lods
jg
lods
shll
jno
arpl
pop
bnd
ja
lods
neg
cs
jmp
pop
cmc
insl
mov
icebp
jg
stos
cmp
sbb
iret
movsb
ljmp
cmp
xchg
xchg
adc
mov
ds
sbb
adc
cmp
inc
mov
out
rorb
jno
add
and
adc
adc
lret
mov
adcb
pop
and
inc
push
iret
clc
jg
lds
or
adc
rcrl
sbb
cmpsb
test
scas
leave
leave
fldenv
and
int3
daa
in
xchg
fists
sarb
test
mov
in
and
imul
jnp
jle
pop
adcb
sarb
and
adc
sbb
xlat
shll
fdivrl
push
and
pusha
sub
sbb
bound
and
adc
jno
testl
andb
add
in
in
mov
in
hlt
iret
add
xor
test
ss
ljmp
cwtl
in
in
mov
or
iret
stos
lret
call
nop
mov
jecxz
mov
cli
sub
dec
push
cmc
xchg
sub
fildl
int
inc
push
and
push
push
std
fcomps
pushw
test
mov
fsubl
ljmp
xchg
and
les
lods
leave
loope
bound
scas
dec
and
xchg
sarl
cs
push
icebp
inc
mov
push
dec
outsl
mov
jae
jp
xor
mov
adc
jge
loop
in
cmc
andb
add
lock
enter
enter
xor
lods
sub
mov
adc
imul
add
fabs
push
shrl
jecxz
dec
pop
test
outsl
jns
icebp
inc
pop
mov
mov
mov
lods
sub
pop
je
add
xor
inc
xchg
inc
out
add
xchg
jb
int3
mov
rolb
loop
sbb
daa
cmpsb
adc
jae
adc
jne
jmp
mov
push
cltd
out
cmp
addb
sbb
push
jnp
cltd
inc
or
or
fstpl
jecxz
divb
and
mov
stos
pop
cmp
xor
push
mov
xor
xlat
jb
subb
dec
ja
xchg
adcb
sbb
and
imul
icebp
adc
pop
pop
sub
sub
cmpsb
dec
inc
inc
insl
into
mov
xor
nop
lret
and
mov
jbe
push
jb
xor
ret
lods
addr16
testl
sub
xchg
orl
mov
cmp
pop
push
cmp
movsb
push
sub
lret
push
ret
mov
cwtl
test
fstpt
add
add
mov
sahf
xlat
cmpsl
into
sub
pop
sub
stos
iret
roll
mov
push
gs
adc
and
push
mov
push
test
lock
dec
repz
add
mov
shl
ljmp
dec
fildl
pop
add
nop
push
or
mov
dec
inc
cmpsl
bound
push
push
xor
adc
test
into
push
xor
push
push
aam
jmp
pop
out
sbb
jno
xorb
es
cmp
in
jae
xor
insb
xchg
std
mov
pop
mov
mov
inc
js
cmc
pusha
iret
jne
mov
cs
dec
mov
ret
movsb
dec
sbb
fnstcw
std
arpl
lods
stos
movsl
test
repz
cmp
and
lret
fs
scas
adc
xchg
lods
lods
imul
leave
inc
mov
inc
dec
lret
test
pop
push
xor
pusha
jl
mov
rorb
std
mov
or
lds
mov
lods
rorb
jl
movd
mov
shll
fistl
add
daa
push
loope
xchg
xor
mov
incl
repnz
mov
pop
push
adc
and
dec
jecxz
pop
add
cs
pusha
push
sub
push
and
inc
sbb
xchg
insb
jae
push
dec
lds
in
ljmp
scas
xor
outsl
fwait
neg
dec
and
rolb
daa
mov
add
popa
andb
mov
and
pushf
ljmp
out
sti
inc
adc
sbb
dec
and
mov
xor
pop
xchg
rol
sti
sub
ret
shr
addr16
sub
cmp
push
xchg
inc
nop
mov
push
and
in
mov
shll
int3
xchg
and
and
pushf
xor
push
idiv
mov
xchg
aad
push
stos
outsl
mov
dec
jp
jg
or
lret
out
adc
mov
add
cmc
sbb
or
push
xchg
mov
hlt
pusha
mov
je
mov
xlat
insl
icebp
add
push
mov
mov
fsubrp
jg
stos
leave
adc
xlat
js
or
ret
push
or
xorl
lods
in
rcr
lcall
pop
cmpsb
shlb
cmpl
or
or
cmp
push
dec
loop
sti
arpl
jbe
mov
sub
mov
push
out
out
adc
ss
into
xor
mov
imul
jmp
push
data16
lea
mov
test
repnz
xor
pop
adc
subb
fistps
out
repz
test
call
std
jo
ficompl
cmp
add
mov
outsl
push
lahf
push
dec
inc
data16
ret
inc
outsb
xchg
lret
xchg
inc
xchg
cmpsb
cmp
loope
or
add
aad
jg
int3
mov
xchg
xchg
cli
fs
test
xlat
rcr
stos
inc
inc
push
mov
sti
pop
lahf
inc
ret
adc
insb
and
xchg
sub
dec
scas
add
cmp
int
add
push
add
pop
push
pop
in
test
mov
loope
lret
lods
mov
test
js
or
lret
movsl
dec
ljmp
xchg
out
test
sbb
and
leave
fists
aad
pop
mov
dec
dec
fildll
cmc
sti
and
inc
lcall
push
xor
sub
mov
fstl
jmp
xchg
jge
xor
aaa
xchg
and
aas
sbb
outsb
mov
pop
jmp
and
sub
subb
test
pop
mov
iret
lds
lcall
and
jnp
test
or
fdivs
cwtl
pusha
pop
loop
jecxz
jg
pop
push
addb
mov
jg
inc
orl
mov
in
jbe
inc
pop
xor
jb
xchg
inc
sub
dec
and
rcrl
or
lahf
bound
in
mov
pop
rorb
xor
ss
add
jb
popa
cmp
pop
cmpsb
sbb
sub
mov
mov
scas
and
imul
jmp
mov
jp
aaa
mov
sub
out
pusha
testb
sbb
hlt
sahf
sbbl
xor
push
out
imul
inc
roll
jno
mov
pop
add
dec
outsl
scas
dec
sub
mov
jb
xor
add
popf
mov
inc
aas
lahf
and
sahf
mov
pop
xchg
addb
mov
cmp
jbe
in
or
lea
call
ret
sub
repz
cmpsb
dec
mov
adc
popa
push
push
mov
add
jno
aad
adc
fisubrs
pop
mov
out
push
imul
pop
inc
scas
movsb
sbb
pop
pusha
addb
mov
adc
shll
sub
cmp
lds
push
in
lahf
loopne
sbb
andl
add
mov
inc
mov
fwait
imul
pushf
lock
repnz
sti
push
and
or
insb
les
fmull
insl
adc
jge
xchg
jb
repz
dec
test
mov
and
orl
imul
cltd
enter
imul
cmc
fcmovnb
fcomps
pushf
lret
sub
fldcw
inc
inc
divb
inc
sbb
dec
push
xchg
and
aaa
loope
jmp
add
mov
pop
iret
aad
push
jo
lahf
push
jbe
pop
ret
hlt
push
xchg
mov
cmp
loopne
xor
pop
add
push
clc
shll
mov
outsb
cli
lret
xorb
fdivrp
pop
sbb
jl
mov
aas
or
or
cwtl
test
mov
dec
dec
cs
addr16
outsl
and
sbb
fsubrs
jge
dec
outsb
xchg
pop
fwait
mov
or
xor
inc
sbb
lcall
add
and
loopne
ljmp
cld
data16
push
rcr
cmp
shl
stc
pop
push
push
mov
in
repnz
and
cltd
mov
sub
stc
cmpsl
in
cld
xchg
int
and
in
popf
test
scas
cmp
lods
and
lds
push
adc
xlat
je
dec
in
xorb
push
mov
ret
push
scas
sub
fisubrs
movsb
mov
rcrl
cltd
lock
push
cmpsb
inc
lods
mov
inc
jmp
xor
je
jo
pop
lds
jns,pn
mov
fisubrs
push
outsl
mov
sarl
lcall
test
or
and
sbb
addr16
leave
jg
cwtl
rcrl
mov
and
xchg
mov
cltd
mov
add
lds
int3
sub
inc
jnp
inc
pop
adc
in
xchg
data16
add
ss
lods
stc
push
pop
inc
or
fwait
lods
in
movsb
mov
push
and
lods
lret
cwtl
sbb
fxch
adc
add
adc
nop
mov
xchg
add
gs
mov
lods
stos
mov
and
shrl
fisubrl
cmp
cmp
mov
out
dec
mov
xchg
cmp
fwait
repz
xchg
out
dec
push
stos
mov
je
int
sub
repnz
fldcw
sbb
inc
jecxz
mov
dec
push
mov
mov
push
push
ret
call
lock
mov
inc
cmp
jge
jmp
push
aas
cmc
bnd
mov
inc
mov
aam
inc
mov
jle
pop
mov
jl
cmp
dec
movsb
jp
inc
sub
mov
and
mov
mov
lret
pop
test
mov
stos
setge
push
adc
cmp
sub
cmp
cmpl
in
adc
push
xor
js
in
testl
negl
dec
popa
add
jno
adc
inc
sub
movsl
and
mov
stc
pop
xchg
mov
jecxz
mov
jp
int
xchg
test
imul
lea
lretw
scas
in
inc
sbb
pop
push
hlt
inc
repnz
es
addl
mov
lods
test
cmp
xchg
dec
jns
fst
shll
xchg
inc
sub
jl
sti
pusha
out
bound
pop
and
push
inc
dec
or
or
stos
lret
sbb
jp
daa
outsl
or
pop
jg
ret
push
pushf
cld
outsb
lret
ret
and
cld
sub
or
popf
icebp
dec
xchg
outsl
inc
movsbl
setns
ds
cwtl
or
xor
push
jo
xchg
negb
std
pop
xor
cmc
jo
sub
pop
cmp
cmpsl
leave
movsl
adc
jb
xor
btc
mul
daa
addr16
or
out
scas
ffreep
lock
or
or
xchg
fmull
icebp
pop
test
and
fdivrl
pop
push
push
sub
push
int
pop
push
leave
or
test
xor
add
xlat
in
loop
cltd
mov
pop
push
fcomps
add
hlt
ljmp
aas
test
jnp
pop
mov
insl
xor
cmp
xchg
lcall
in
sbbb
fistpl
adc
and
adc
lock
xchg
push
in
jp
sbb
push
push
adc
fimuls
int3
pop
xor
pop
mov
add
aaa
add
mov
dec
mov
sub
ljmp
iret
adc
sbb
fiadds
stos
mov
inc
and
and
and
inc
imul
xchg
jle
loopne
mov
test
inc
sbb
add
mov
dec
sarb
pop
mov
and
mov
push
cld
stc
movsl
sbb
leave
push
inc
das
lcall
sbb
test
push
mov
mov
mov
or
xchg
mov
insb
inc
fsubr
cmp
and
stos
repnz
shl
pop
push
in
adc
mov
mov
adc
popf
add
aaa
outsb
lock
mov
insl
push
je
enter
xchg
cmp
push
lret
loope
loop
xchg
push
test
fsubrl
into
jmp
xchg
insb
movl
dec
xor
mov
and
fs
iret
sbb
adc
pop
or
sbb
xor
jae
loopne
mov
xchg
sbb
mov
ja
pop
inc
pop
add
movsl
incb
movsb
das
dec
fmuls
sub
jns
xor
test
stc
lods
cmp
lret
lret
roll
mov
push
mov
jl
popa
js
xor
je
shlb
out
xor
adc
fistpl
cld
mov
and
dec
aam
test
loop
sub
into
scas
pop
ficompl
push
jecxz
call
jno
lret
stos
neg
jbe
addr16
popf
xor
shrl
mov
cmp
jg
lret
popf
jne
jmp
int3
cmp
add
push
add
mov
sub
pop
pop
imul
xor
sahf
fsubrp
xchg
inc
repz
and
ret
xchg
loop
nop
mov
pop
add
aas
sub
call
sti
fisttps
rol
add
jge
imul
sub
pop
add
cltd
mov
fnstsw
nop
shlb
mov
loope
inc
mov
pusha
ljmp
xchg
xchg
push
or
adc
lret
inc
jb,pn
or
ret
call
mul
dec
cmp
mov
sbb
adcl
mov
jmp
mov
fcompl
jge
fisubrs
mov
and
inc
mov
scas
sub
int
insb
mov
sbb
jge
loop
test
lods
push
cmp
adc
gs
test
dec
mov
pop
jle
test
js
int
jae
stos
push
leave
sub
dec
ss
out
push
sbb
xchg
movsb
insb
or
test
rcrl
dec
push
push
add
xchg
and
and
or
outsl
cmp
pop
jp
xchg
pop
jbe
mov
jbe
mov
add
adc
rolb
stos
fldcw
xlat
sub
pusha
push
add
add
adc
inc
sub
sbb
in
repz
pop
lods
jne
xchg
ds
ss
add
mov
outsb
popf
xchg
mov
dec
push
cmp
dec
lahf
mov
movsb
dec
push
lret
and
add
popa
sub
mov
sbb
sub
add
xor
dec
out
mov
cmp
xorb
dec
or
sbb
aad
sahf
imul
psrlq
xchg
mov
fwait
pop
popa
mov
aaa
push
inc
pop
or
dec
sbb
push
out
call
jecxz
out
and
mov
movsl
outsb
push
inc
dec
adc
fcomps
add
cltd
dec
imulb
outsl
lret
insb
rcrb
mov
cmp
mov
out
mov
stos
fistpl
aad
pusha
cmpl
lea
js
packssdw
jge
jmp
push
mov
outsl
pop
xor
push
arpl
aad
sarl
dec
adc
jg
dec
dec
or
xchg
and
dec
push
cld
loop
jns
scas
mov
aad
adc
push
insl
jo
xchg
add
pop
jne
adc
jp
jno
xor
mov
bound
int3
mov
ljmp
xchg
lods
inc
adc
push
cmovbe
cmp
rolb
jg
inc
pop
ja
in
int3
push
sbb
push
add
mov
leave
fstpl
mov
es
imul
test
lahf
dec
add
push
and
mov
in
pop
scas
inc
pop
push
dec
sahf
dec
push
stc
aad
inc
pop
sbbb
xchg
push
push
icebp
fcmovu
aaa
arpl
mov
popl
add
mov
push
cmp
mov
jno
fs
add
push
mov
fistl
and
das
paddusb
dec
stc
in
data16
and
ja
xor
dec
mov
jmp
push
sbb
jl
cmc
ret
xor
popa
mov
rcll
adc
adc
mov
jg
mov
inc
lock
push
and
int3
xlat
jmp
dec
scas
xchg
and
cli
iret
jbe
cmp
pop
lcall
push
lahf
loopne
es
dec
cltd
ja
cmc
push
std
cmp
test
mov
sbb
pusha
lret
push
out
jb
xorl
fisubrl
add
scas
sbb
in
test
push
inc
mov
mov
js
xlat
dec
sbb
xor
sub
mov
lods
xor
jmp
mov
adc
mov
or
test
add
imul
or
mov
ficomps
lahf
mov
jbe
aad
ftst
mov
out
pop
and
xchg
jae
or
orl
es
cmpsl
dec
xor
repnz
push
stos
jno
pop
jb
xor
fcomps
and
mov
jns
popf
sbb
or
ss
lahf
xor
mov
sbb
xchg
add
addr16
call
pop
in
cmpl
das
mov
aas
call
sub
daa
mov
and
add
and
jl
jne
adcb
jbe
cs
cmp
std
das
mov
push
add
xor
bound
les
xchg
in
test
sub
addr16
test
cld
repz
cs
clc
cmp
cli
add
filds
inc
ss
lret
xchg
cld
pop
push
xor
loopne
push
rcrb
add
adc
ret
leave
repz
xchg
and
es
outsl
mov
icebp
fcom
jno
mov
hlt
adc
sar
mov
test
or
mov
es
ret
std
pop
bound
das
xlat
shll
inc
or
aaa
mov
std
xor
out
jmp
inc
jne
adc
fnstcw
mov
bound
and
sarl
sarb
dec
push
adc
das
pop
jmp
movsl
xchg
and
cltd
adc
loopne
inc
hlt
fcmovnu
mov
mov
xor
xorl
movsl
stos
sub
jae
dec
mov
add
test
mov
or
flds
stos
push
adc
popa
or
xchg
xor
adc
movsl
stos
test
stos
cmp
jl
aas
add
mov
add
aam
fdiv
inc
sbb
pusha
das
xlat
dec
cmp
lea
ja
push
mov
mov
icebp
jae
add
lret
mov
jnp
adc
add
or
or
ret
dec
in
inc
cwtl
sbb
aam
mov
mov
and
lcall
orl
stos
js
adc
jae,pt
mov
pop
and
mov
fcmovnb
dec
inc
push
dec
jb
mov
cltd
aas
icebp
cwtl
mov
imul
lods
fstps
jecxz
stos
outsb
gs
mov
jne
inc
or
add
sub
stos
ja
fs
push
ret
stos
sub
dec
and
call
popa
rcr
cli
jle
data16
sub
xor
sub
loopne
cltd
and
in
and
ja
outsb
mov
adc
ljmp
mov
int3
xorl
xchg
xor
pop
cmp
push
mov
push
cmp
mov
rorl
bound
cmp
mov
xlat
cltd
mov
sarb
inc
test
aam
mov
xor
and
test
push
repz
cli
invd
mov
cmpsl
mov
mov
xchg
jle
int3
push
or
insl
dec
mov
imul
sbb
cld
and
and
sub
jno
cmp
pop
jo
xor
inc
add
scas
ret
and
out
add
sbb
mov
fcoms
jmp
jo
sub
in
mov
and
test
jb
pop
push
ds
call
pop
std
clc
add
mov
fdivs
cmp
loop
addps
in
in
es
pop
push
frstor
xchg
cmp
out
add
sti
mov
fnsave
je
repz
cmp
pop
pop
divb
or
cmp
data16
test
and
cmp
movsl
xlat
and
addr16
jne
xchg
mov
jmp
adc
hlt
insl
cmpsb
mov
in
jmp
lahf
and
sbb
ds
aam
adc
icebp
imul
xor
data16
pop
mov
movsb
lea
and
jmp
ret
add
cs
pop
cmc
jmp
or
lret
aam
gs
imul
test
sub
mov
sub
fwait
xor
ret
push
xchg
cmp
rcrb
push
lret
insl
mov
mov
xor
adcl
jno
dec
cwtl
testl
mov
out
sbb
mov
loope
repnz
jno
push
xchg
les
push
ret
daa
ret
pop
sub
or
pop
shrb
mov
inc
popf
jp
jp
stc
add
sbb
loope
js
insb
jp
mov
cli
push
sbb
mov
rcll
add
jl
rcrb
lds
adc
fldcw
push
add
mov
or
mov
loopne
fbstp
cmpsl
add
in
sub
xchg
adc
jp
jl
sbb
in
jmp
pop
sti
xchg
mov
mov
jo
dec
mov
push
cmp
push
mov
mov
negb
inc
ret
push
rolb
push
mov
jns
out
in
imul
mov
lahf
arpl
lahf
mov
scas
lock
fs
iret
jns
sub
fimuls
lock
mov
pop
into
inc
lret
mov
fldcw
cmp
in
pop
xchg
mov
outsl
mov
out
jl
test
cltd
cltd
inc
call
cmp
mov
jl
sub
xchg
xchg
out
sbb
and
ror
adc
int3
icebp
push
xchg
test
lock
test
ja,pt
xchg
mov
push
scas
bound
push
mov
mov
movsl
add
push
cmp
gs
data16
mov
sbb
scas
jg
in
in
inc
dec
aaa
lcall
out
add
arpl
jne
lock
push
or
cwtl
pop
out
mov
fdivrs
mov
mov
jmp
mov
jge
fstl
fmull
pop
out
popa
jno
mov
mov
fwait
sahf
mov
fisttps
jae
add
dec
jle
jecxz
mov
bnd
mov
push
movsb
fwait
js
add
jo,pn
imull
test
pop
mov
and
sbb
push
rolb
sub
lds
fbld
lcall
push
xor
xor
mov
and
pop
cmp
cs
xchg
cmp
cld
out
mov
cwtl
adc
dec
adc
add
inc
imul
push
push
push
std
push
mov
popf
shrl
and
js
stos
pop
mov
ret
pop
out
into
pop
int3
or
rorl
sar
fs
lret
mov
push
dec
pop
fsubrl
in
lret
xor
mov
and
adc
mov
lahf
inc
repz
stc
fsubrs
cmpsl
push
cli
dec
inc
or
mov
jmp
pop
sub
shrb
in
js
data16
stos
enter
xlat
sahf
clc
mov
mov
inc
mov
test
xor
dec
dec
scas
or
inc
es
pop
xlat
sub
incl
jne
ja
stos
xor
dec
inc
and
out
xchg
xchg
ret
pop
test
adc
movsb
mov
loope
lret
pop
sti
push
iret
clc
enter
cmpsl
ret
mov
imul
push
xchg
movsb
mov
inc
lahf
mov
aam
test
insb
movsl
cmc
xlat
shll
les
dec
and
daa
xchg
les
mov
xchg
and
fisttpll
push
dec
iret
adc
test
jge
mov
fisubrl
sub
dec
enter
mov
mov
fisttps
jne
inc
inc
ljmp
int3
js
cmp
jmp
mov
mov
mov
adc
arpl
es
cmp
jp
pop
orl
js
and
dec
xchg
aam
jmp
and
out
aaa
pop
sub
das
std
push
fstl
fcmovnb
mov
mov
mov
test
inc
dec
cmp
push
and
push
mov
ret
cli
adcb
push
addl
leave
sub
loop
push
pop
jo
cmc
rclb
into
mov
lods
jo
mov
sub
insb
jle
jge
mov
fwait
adc
cmp
lret
mov
sub
push
lea
add
cmp
cmp
lret
xchg
sub
shll
or
mov
mov
or
push
mov
pop
insl
ret
imul
stc
jnp
sub
test
adc
mov
lods
pop
dec
hlt
cmp
rcl
jne
fstpt
add
lret
cmovne
cltd
sub
dec
or
adc
jae
lcall
mov
lods
and
pop
outsb
push
addb
cmp
ds
mov
iret
dec
int
push
pop
arpl
and
xor
test
call
subb
out
push
xor
pop
mov
dec
das
scas
es
adc
or
and
adc
test
es
pop
jmp
out
inc
sub
pushf
lods
fwait
cmpsb
dec
xchg
dec
pop
enter
add
mov
movsl
pop
xchg
adc
mov
xchg
sbb
adc
jbe
adc
stc
push
xor
jg
scas
mov
inc
ror
mov
mov
jmp
sbb
dec
sub
sub
and
or
mov
mov
jge,pn
scas
inc
mov
inc
pop
fisubrl
pop
inc
mov
pop
pop
ja
shll
fld
inc
xchg
and
mov
scas
stos
stos
xchg
xchg
mov
jb
and
mov
mov
push
cmp
sbb
inc
mov
lret
sti
lcall
mov
data16
scas
outsb
cltd
neg
adc
sti
js,pt
jno
pop
mov
cli
xor
pop
add
sub
pushf
bnd
out
lods
mov
dec
lock
xor
inc
stos
xlat
je
mov
cwtl
fsts
mov
jge
outsb
pop
push
inc
aas
stos
fidivrs
mov
add
and
dec
cmp
in
fsubrs
mov
iret
in
xchg
jno
in
outsl
xlat
lcall
sbb
mov
lods
imul
iret
loopne
adc
sub
xor
aaa
loopne
dec
out
or
mov
stos
imul
fnstsw
xchg
popa
cmc
sub
lock
aaa
stos
push
cli
mov
mov
cmp
and
mov
movsb
insl
fmull
shll
aam
dec
bound
pop
pop
rcrb
jl
sub
addr16
je
int
xor
xrelease
jbe
inc
xchg
scas
and
xchg
addr16
ret
fistpll
das
and
xor
ljmp
add
mul
test
mov
or
in
lret
mov
sub
inc
mov
jmp
scas
insb
mov
cmp
jmp
sarl
mov
lea
testb
dec
in
jnp
pop
and
sti
pop
add
repnz
adcb
int
lock
notb
bound
add
lahf
mov
into
jns
mov
sti
add
push
or
into
shlb
lea
xor
andl
adc
sbb
sub
jle
xlat
clc
ljmp
je
icebp
sub
sbbb
test
cmp
in
pushf
in
mov
add
out
popl
fildll
xchg
out
cmovns
inc
xchg
dec
mov
pop
sbb
cmp
xor
add
test
cmp
js
push
or
xchg
xchg
inc
inc
lods
icebp
outsb
mov
fcompl
lahf
xchg
push
mov
aad
pop
jle
mov
push
dec
popa
sub
sahf
rorl
leave
adc
dec
lea
or
movsl
jb
adc
push
and
fmul
push
iret
int
cmpb
orb
cwtl
mov
sub
dec
pop
pop
add
hlt
xlat
jg,pt
cltd
pop
lret
pop
rcrb
pushf
popa
pop
loopne
loop
cmp
pop
orl
mov
and
push
fldenv
cmp
cmpsl
lret
push
loope
out
jmp
mov
lds
mov
dec
jno
and
icebp
xor
sub
xchg
das
fwait
push
stos
xor
mov
jmp
pop
int3
fs
int3
nop
pusha
roll
fsub
dec
lods
pop
std
negb
jecxz
mov
sbb
lock
pop
sbb
movsl
jo
fnstcw
insb
jp
inc
fs
dec
cltd
and
add
dec
je
add
add
pop
lahf
lahf
inc
mov
hlt
pushl
imul
mov
js
lahf
cmp
sahf
mov
lock
pop
mov
mov
aad
xchg
xchg
test
nop
jns
push
not
fisttpll
jp
sbb
iret
orb
ss
pop
cmpsl
rcrl
adc
lods
add
or
leave
aas
shrb
xchg
out
inc
or
add
mov
cmp
xor
xchg
jmp
aad
icebp
leave
mov
jecxz
or
es
fdivrs
sub
or
push
lods
and
hlt
popa
sub
repnz
in
sbb
ret
test
add
dec
sahf
jb
lahf
dec
imul
fxam
push
jmp
cmc
adc
pop
xor
nop
sahf
movsl
mov
jb
pusha
lock
leave
imul
pop
mov
sub
xchg
shll
xorb
jb
mov
mov
ret
call
push
push
push
mov
cmp
add
iret
mov
or
sub
push
ds
aas
movsb
jl
fs
xchg
or
push
jne
lods
mov
sbb
mov
adc
nop
dec
out
mov
add
xchg
mov
pop
incl
xchg
and
and
jno
movsb
pop
and
cmp
dec
add
mov
jnp
fs
jg
pop
sbb
ds
add
pop
fcmovbe
jno
sbb
movsl
out
push
add
inc
lret
les
xor
mov
mov
pop
iret
and
hlt
paddb
push
push
out
clc
mov
shll
in
popf
and
jge
jge
xor
addr16
leave
out
repz
call
rolb
sub
adc
adc
out
in
mov
sbb
arpl
xor
lea
or
dec
out
cmpsb
xor
pop
mov
mov
loopne
mov
nop
loop
je
mov
add
ss
sbb
sti
cmp
mov
lds
jne
adc
popf
fisttps
pop
xor
loop
jp
xor
scas
mov
ds
jle
or
jle
shrl
and
lods
adc
out
lahf
inc
and
xor
jp
and
lods
xor
xchg
outsl
hlt
jmp
push
dec
inc
xor
shll
test
jmp
das
dec
icebp
jmp
je
mov
sarb
adc
repz
xchg
shl
xor
stos
stc
scas
ss
jne
pop
jne
ret
repz
jb
and
dec
in
xchg
cltd
dec
xor
xorl
or
mov
test
push
dec
jp
inc
jb
add
cmpsl
loopne
call
inc
sbb
imul
lds
and
sbb
mov
add
add
test
incb
shrb
aas
add
mov
mov
jnp
inc
xorl
push
in
sbb
push
xchg
sub
add
lret
xchg
fildll
pop
mov
nop
dec
mov
mov
jl
sbb
scas
push
mov
jmp
xchg
stos
sbb
push
dec
push
mov
sub
movsl
loope
cmp
inc
mov
jmp
fistps
add
mov
ljmp
sbb
mov
mov
add
scas
add
xchg
or
lret
pop
mov
or
dec
maskmovq
divl
mov
cmpsl
sub
inc
in
popf
mov
or
icebp
pop
dec
adc
adc
call
xchg
inc
ficompl
adc
inc
cmp
adc
gs
mov
int3
aam
leave
movsb
push
leave
popa
gs
or
push
lods
in
int3
add
adc
lods
dec
sahf
movsl
rolb
sub
add
jg
jo
imul
insl
add
in
inc
xlat
dec
xor
pop
pop
cmp
into
or
xor
fmull
lahf
sbb
inc
out
push
cltd
push
imul
ret
xor
frstor
inc
rorl
imul
inc
pop
xchg
jne
out
shr
sarl
mov
xchg
mov
mov
clc
cli
mov
es
loope
ja
pop
loopne
rcr
push
jg
push
mov
xchg
jmp
mov
scas
outsb
push
out
sbb
xor
aam
pop
pop
xor
or
aad
out
popa
ss
mov
mov
test
out
xchg
sub
or
repnz
out
aas
dec
aam
incl
inc
out
xchg
add
stc
cmc
push
mov
mov
daa
hlt
mov
add
adc
out
outsl
dec
es
ret
adc
jecxz
pop
lret
stos
jno
pushl
inc
test
pop
mov
in
xchg
lods
mov
sbb
daa
decb
mov
cmp
scas
nop
dec
fadds
pusha
aas
ja
pushf
data16
push
movsb
and
pminsw
jbe
fs
jle
mov
bswap
push
jge
jge
dec
cmpsl
dec
mov
jp
test
lcall
movsb
bound
push
lahf
sbb
jo
jmp
fcomp
mov
stc
aam
js
bound
jns
xor
hlt
add
push
lods
jl
adc
lea
push
mov
jge
fbld
ret
out
jl
mov
push
je
mov
data16
rcl
rclb
icebp
and
cmc
out
sub
xchg
sub
std
push
in
cmp
js
sarb
or
sub
clc
scas
mov
stos
sub
and
inc
jge
jbe
pop
and
mov
das
iret
sub
lods
gs
and
dec
arpl
or
jno
clc
das
mov
stos
xor
iret
dec
idivl
repz
cmp
testl
bound
push
push
aaa
sub
fs
mov
cld
jnp
mov
jecxz
adc
mov
pop
sub
dec
lods
mov
push
jmp
shlb
jae
xlat
push
je
jg
dec
fidivrl
aas
fdiv
pop
inc
xor
stos
mov
pmaddwd
xchg
movsb
xor
inc
xor
mov
push
inc
xchg
xor
cmpsb
mov
jno
cmpsl
mov
in
jb
mov
xor
cmpb
scas
testl
flds
hlt
pop
out
jle
inc
stos
xor
scas
addl
mov
xor
cmp
push
sbb
fdivrl
jle
sub
inc
add
in
mov
and
ret
xchg
int
jecxz
icebp
jp
pop
popa
cmp
and
inc
pop
inc
jo
push
fistpl
lea
adc
out
xor
push
inc
je
or
ss
stc
jmp
mov
ja
in
dec
pop
or
cmc
xor
adc
ja
mov
ljmp
pop
mov
stc
fidivrs
cmpsb
dec
and
movsb
mov
in
cs
mov
add
mov
add
sub
add
outsb
xchg
jg
inc
mov
xchg
pop
lods
sub
fstl
fstl
mov
pushf
sub
sub
sbb
adc
fildll
fdivrs
int
mov
rolb
aad
cmpsl
and
imul
jg
mov
hlt
pop
xor
mov
cltd
fnsave
mov
jp
data16
pop
dec
out
or
ja
adc
sti
inc
lds
ret
aas
sbb
pop
or
repz
jp
lds
repz
sbb
mov
sbb
clc
ja
and
or
lea
adc
pop
pavgw
xor
jl
hlt
dec
out
outsl
mov
xor
xchg
gs
mov
push
inc
dec
cmp
fwait
test
js
sbb
dec
jmp
dec
push
inc
mov
mov
dec
jnp
aad
jnp
sub
pop
xchg
aam
repnz
mov
sbb
xchg
stos
sub
scas
sub
js
add
mov
lahf
push
imul
arpl
mov
pop
cmc
pop
fidivl
ljmp
add
aam
mov
dec
scas
xchg
daa
xchg
jo
inc
dec
lods
push
sti
mov
dec
jg
popf
sbb
cmp
pop
sbb
and
out
mov
cmp
arpl
cmp
pop
pop
fistl
adc
adc
outsb
xor
inc
adc
stos
and
and
cld
jae
push
out
dec
jle
dec
fsts
data16
test
les
cltd
cmp
and
add
imul
fsubs
dec
add
mov
and
cmp
stc
sahf
jp
jp
or
adc
or
adc
inc
inc
mov
mov
adc
popf
sahf
lret
les
incl
dec
hlt
sbb
sti
stos
sub
mov
cli
pop
cs
ret
inc
jge
push
mov
in
sbbl
and
dec
dec
xchg
sbb
fildl
xchg
add
dec
icebp
jb
push
rorl
xchg
cmp
and
sbb
pop
mov
adc
popf
je
pop
xor
lods
mov
pop
cmp
ret
lock
mov
dec
testl
insb
inc
lahf
dec
mov
stos
test
sub
mov
pusha
shll
cmpsb
adc
popf
in
add
jmp
fistpll
repnz
or
lods
ret
jno
add
cmpl
pop
xchg
pop
add
or
fistpll
sub
sbb
popa
jle
mov
shlb
enter
sbb
je
add
mov
in
sub
xchg
lret
add
fsubl
xchg
jo
mov
cmpl
js
in
rcll
cmc
jge
push
push
std
aas
pusha
mov
mov
mov
outsb
std
adc
inc
das
sub
mov
pusha
and
pop
push
lcall
jp
cmp
mov
cmp
iret
scas
nop
adc
mov
and
mov
and
shrl
xchg
ret
in
cltd
fsub
ja
sbb
sub
jmp
pop
sahf
fiaddl
xchg
xchg
test
and
mov
xor
shrb
jg
mov
pop
add
rcrl
and
inc
jge
in
sbb
mov
mov
lock
mov
fsubl
icebp
je
fdivrs
xorl
jmp
inc
ja
cmp
jecxz
aaa
out
push
call
cmp
imul
dec
insl
lods
add
xor
lods
xor
push
fsubl
enter
xor
ret
fwait
hlt
test
mov
out
lods
cmp
pop
ficompl
push
jmp
addr16
insb
add
mov
in
lret
aam
bound
add
imul
call
das
dec
js
mov
mov
sbbl
cli
outsl
push
fsubrs
jp
jae
mov
push
xor
xchg
ljmp
loopne
xchg
mov
pop
lock
aam
xchg
mov
movsb
in
fdiv
iret
sbbb
sbb
or
pop
sbb
xabort
jp
scas
cmp
pop
xor
push
sbb
divl
push
push
push
lods
fidivrs
jl
sub
jnp
pushf
jno
lods
lret
je
mov
dec
xchg
es
fistps
mov
mov
cli
fisubs
dec
jge
in
sarb
dec
in
mov
and
addr16
movsb
jl
lea
lret
push
fnstenv
test
mov
cld
push
insb
or
ss
push
pop
push
lock
or
xor
int3
fisttpll
sbb
mov
adc
pushf
sub
dec
lret
inc
imul
jmp
fwait
sub
or
test
sti
inc
xor
in
mov
push
roll
lods
fstpl
cmc
ss
inc
lcall
and
and
imul
jne
testl
dec
cs
mov
mull
xchg
outsb
add
jl
pop
ss
sbb
std
inc
fldt
xchg
dec
ss
in
dec
and
fcomps
xor
sub
pushl
mov
in
data16
mov
scas
dec
and
out
mov
cmp
and
or
lock
add
test
sbbb
test
movsl
dec
mov
xor
pop
xchg
aam
je
xor
push
mov
shll
mov
mov
inc
jne
inc
repnz
outsb
inc
add
mov
or
mov
jo
aaa
sbb
fisttpll
push
dec
and
xchg
mov
lret
fwait
mov
lahf
ljmp
dec
icebp
and
mov
cli
sub
in
les
jae
les
loop
jnp
cmc
scas
push
mov
scas
in
or
es
cli
call
out
call
ja
loop
xchg
cmpsl
cmp
inc
test
mov
andb
jp
repz
ud0
aas
push
adc
ja
mov
sub
mov
lcall
imul
test
push
inc
aas
jb
sub
mov
and
xor
les
or
fidivrl
ficomps
leave
out
fsubrs
test
mov
xchg
dec
enter
mov
int3
xchg
jecxz
push
xor
adc
lret
lock
jae
lret
test
pusha
push
or
add
les
mov
pop
scas
data16
sbb
je
inc
daa
pop
scas
mov
stos
std
daa
add
fwait
clc
rcll
cmp
cmp
adc
adc
xchg
es
push
cld
push
cmp
dec
mov
lret
sub
loop
sbb
cmpsl
pop
pusha
lret
xor
int
sub
dec
scas
mov
jg
adc
pop
cmp
test
adc
or
and
inc
or
sub
dec
bound
int
add
rol
mov
mov
push
xor
arpl
dec
adc
and
add
fisubrs
push
inc
xor
aam
ds
xchg
or
cli
or
and
and
xchg
xor
pop
xor
mov
cld
stc
cmp
ja
xlat
cmp
pop
pop
jb
mov
sub
out
sbb
ds
push
aad
push
fcomi
push
std
and
jne
pop
mov
daa
fistps
ret
pop
ret
out
dec
fisubrs
mov
push
sbb
cmp
push
add
das
fmul
mov
into
outsb
or
jnp
sub
bound
jo
and
pop
xor
lds
pop
xchg
cs
cmpsb
mov
cmp
mov
cmpl
popa
mov
jne
fwait
push
std
movsb
mov
adc
fmull
sbb
push
insb
in
xchg
mov
inc
inc
cli
cmp
dec
mov
inc
stc
add
mov
push
scas
test
sub
lods
not
stos
xchg
roll
push
mov
repz
fs
loopne
cmpsl
inc
jg
nop
clc
add
lcall
mov
adc
das
movsb
jmp
dec
cmp
add
or
and
cwtl
cmp
and
cmpl
xor
push
pop
call
inc
fsubrs
jg
loope
imul
xchg
and
sbbl
enter
sbb
lret
and
mov
cmp
pop
jbe
sti
imul
mov
test
and
jle
jmp
mov
jle
daa
pop
movl
pop
jmp
call
fisttps
cld
in
sub
or
pusha
lcall
push
xchg
subl
jle
fistpl
xor
loop
aas
cmp
xor
jae
and
movb
shll
sub
mov
aad
es
jb
jg
xor
mov
inc
addb
xor
sbb
xor
jge
jmp
lret
or
xchg
and
add
push
or
pop
xchg
mov
dec
lock
js
xor
daa
xchg
ja
stos
jno
jecxz
inc
or
fs
and
pushl
xchg
call
pop
jle
jmp
shrl
mov
inc
and
xor
pop
mov
sbb
lea
add
add
add
mov
jo
pop
xchg
pop
loop
in
js
pushf
adc
fisubs
enter
jmp
sbb
je
fbstp
ds
shlb
adc
jecxz
sub
gs
aas
mov
aam
jno,pt
jmp
addr16
arpl
mov
or
out
shll
mov
icebp
mov
sbb
shlb
fadds
clc
syscall
mov
and
ljmp
dec
test
or
mov
sub
push
pop
pop
mov
mov
les
fldenv
lods
das
cmp
dec
mov
inc
out
sub
lcall
push
aam
inc
pusha
aam
lds
movsb
xchg
push
jne
je
adc
adc
js
jle
sub
mov
mul
dec
mov
loopne
xchg
mov
add
fisubs
ja
aam
clc
sub
mov
mov
sub
or
aad
mov
jne
fimuls
stc
pop
jae
ret
mov
daa
xchg
popf
jmp
inc
inc
mov
movsb
fwait
sti
sbb
mov
out
adc
aaa
orb
dec
and
cmp
loope
in
jle
inc
shll
push
int
or
mov
push
cmp
jp
xchg
repz
sbb
addr16
int
orb
dec
adc
cwtl
sarl
mov
lods
hlt
roll
mov
lds
xor
push
popf
imul
jae
rolb
je
or
cmp
or
and
test
mov
stos
loopne
jecxz
pop
jno
adc
daa
xchg
jg
aas
cmpl
lret
out
test
mov
inc
jl
iret
lcall
add
call
push
mov
lea
push
stos
lock
jne
and
mov
jg
mov
jae
adc
xchg
cmp
mov
pop
jmp
inc
repnz
fdiv
mov
lret
outsl
les
mov
clc
das
inc
sub
and
stos
mov
xchg
add
bound
aas
negb
mov
pop
sub
mov
and
mov
mov
xor
push
xor
rorb
fimuls
lods
lahf
sub
xchg
aas
jo
add
dec
or
dec
fstps
mov
mov
loop
add
in
iret
sub
jns
in
out
test
fcoml
jae
mov
push
mov
mov
stc
aas
je
repnz
sarb
adc
fs
call
repnz
loop
push
ret
xor
dec
icebp
pop
sub
sbb
test
dec
sbb
inc
pop
jge
lods
mov
out
out
movsl
lret
xor
push
addb
or
mov
outsl
pop
hlt
mov
or
fsub
dec
jb
mov
enter
stc
xchg
fldcw
fldenvs
inc
aaa
cwtl
sbb
sbb
ret
ficomps
scas
pop
add
dec
mov
out
xchg
into
dec
xchg
imul
or
cli
mov
fldcw
and
inc
xchg
ja
rcrb
mov
pop
mov
cld
xchg
sbb
rolb
aam
push
in
hlt
std
and
mov
dec
xchg
mov
cwtl
jb
mov
xor
cs
jecxz
xor
or
mov
movsl
divb
jg
hlt
pop
xchg
in
fidivrs
mov
cmp
sbb
in
xor
fstp
test
and
insl
and
inc
jae
leave
sbb
xchg
sbb
jp,pt
pushf
loop
pop
pop
mov
mov
cmp
push
mov
popf
mov
data16
daa
shll
adc
pop
cld
clc
pop
xchg
mov
rcrb
pushf
or
out
lcall
daa
jns
or
test
jo
aad
stc
cli
hlt
jmp
inc
mov
jl
cmp
or
jb
cltd
cmp
into
pushf
cld
mov
sbb
in
and
add
dec
cmp
xchg
xchg
mov
scas
sub
js
dec
push
xor
out
out
std
sub
mov
adc
loop
pop
mov
and
jp
lock
rcll
or
data16
dec
xchg
inc
push
jnp
inc
sarb
push
xchg
loope
daa
jg
adc
es
jne
sub
gs
ror
mov
mulb
mov
adc
scas
lahf
dec
push
mov
sti
dec
push
or
aaa
mov
stc
xchg
add
int
das
or
dec
shlb
cltd
out
loop
dec
mov
out
push
ret
mov
push
xor
lods
pop
sahf
push
xchg
mov
mov
pop
hlt
push
pop
sbb
adc
xchg
pop
popa
aam
push
xor
inc
xchg
cld
push
clc
mov
inc
push
rcll
popa
xor
and
dec
negl
repnz
xchg
mov
shrb
mov
mov
pop
cs
clc
or
push
daa
ds
cltd
add
mov
push
push
movsb
pop
clc
add
pushf
cmp
mov
and
xchg
push
sti
arpl
cmp
insl
nop
pop
pop
jae
das
pop
clc
and
fdiv
adc
inc
stos
sahf
xchg
jmp
dec
inc
mov
dec
push
mov
cmp
pusha
add
icebp
mov
jmp
mov
xchg
fdecstp
add
lea
shlb
jb
in
adc
outsb
addb
arpl
into
je
pushf
add
test
ljmp
mov
in
andl
fnsave
xchg
sar
sbb
les
in
cmp
pop
cmp
insb
xchg
aad
push
out
mov
or
dec
andl
mov
and
or
pusha
cli
shl
adc
mov
addr16
cmp
pop
rorl
jg
inc
inc
dec
jle
cmpsb
xor
lds
pop
arpl
out
pop
push
mov
inc
lods
pop
insb
cmpl
cmpsb
mov
ja
scas
dec
sub
lret
jmp
xchg
lret
pop
daa
mov
pop
sub
jno
inc
add
int
lahf
repz
mov
test
mov
or
ds
dec
ds
ljmp
xchg
mov
fxch
out
mov
dec
call
std
das
imul
mulb
in
xor
cmp
inc
or
adc
fldenv
sar
inc
in
add
push
addb
mov
pop
cmpsb
adc
jb
add
cmp
repz
into
or
jb
xor
pop
pushf
stc
mov
stc
sub
shll
xor
out
fwait
pop
and
xor
and
insb
mov
mov
pop
mov
iret
pop
stc
stos
jmp
sub
inc
mov
stos
sbb
lret
push
mov
jnp
cmp
push
xchg
fisubrl
fst
xor
xor
lea
sub
or
xor
shll
mov
mov
pop
inc
sub
or
imul
jae
push
dec
pop
fisubl
aad
fs
inc
mov
fwait
mov
sbb
pop
insb
push
sub
pop
and
lret
retw
gs
lods
mull
cmc
adc
cmp
faddl
iret
ds
push
inc
in
repz
fcoml
rclb
push
mov
push
add
stos
outsl
mov
testb
xchg
push
andl
xchg
mov
pop
sbb
push
jp
sub
and
pushf
test
add
es
rcl
pop
cwtl
jnp
mov
xchg
jnp
dec
lods
cltd
push
insb
insb
jecxz
mov
adc
xor
pop
aad
fsubs
inc
jbe
outsb
addr16
jae
fldt
mov
mov
jne
mov
ljmp
lds
jo
mov
dec
and
les
jl
rorl
icebp
dec
fcoml
ret
dec
int
mov
stos
add
sbb
ds
popf
shlb
push
cmp
dec
enter
xor
rcll
mov
dec
and
pusha
pushf
out
push
stc
and
pop
jo
pusha
xchg
hlt
popf
push
xchg
es
aam
daa
push
sbb
stc
adc
jb
fucom
push
sti
xlat
jnp
jnp
std
and
xchg
dec
pop
ja
mov
jg
in
insb
fwait
dec
cmpl
sbb
dec
aam
push
push
push
and
aam
ss
sbb
arpl
aam
loopne
cmpsl
aam
jne
sub
outsl
mov
outsl
lods
mov
daa
stos
cmp
push
loopne
inc
movsl
insb
sbb
call
in
push
sub
aam
pop
sbb
cmp
arpl
movsl
sub
dec
or
sub
fisubl
ficomps
out
mov
cmpsb
push
aam
gs
andb
aad
and
mov
daa
pop
test
sub
pop
or
je
rolb
sarl
leave
sub
push
adc
xchg
pop
scas
int3
add
ficoms
mov
stos
mov
outsb
xchg
add
pop
add
sti
cmpsl
mov
jg
push
jnp
in
addb
jae
mov
inc
sbb
aas
scas
pop
mov
add
dec
push
pop
dec
dec
xor
addr16
add
jno
movsb
adc
xor
js
iret
lods
out
push
ret
or
push
daa
movsl
adc
sub
idivb
xchg
jmp
das
inc
cld
pop
pop
jb
ss
js
xchg
xchg
loopne
ljmp
jne
sub
push
add
sbb
addb
xor
incb
hlt
push
push
stc
loop
push
loopne
sbb
jbe
std
test
lahf
sub
xor
imul
mov
or
jl
cmc
insb
sbb
clc
mov
xorb
sbb
std
push
pop
mov
pop
inc
repz
dec
ret
aad
lods
pop
cmp
sub
pushf
scas
push
or
test
xchg
pop
xchg
adc
sbb
insb
mov
mov
call
inc
push
push
fisttps
lock
fldl
pop
dec
or
xchg
das
add
ret
mov
add
js
xchg
test
enter
xor
dec
in
lea
loopne
jg
xchg
int
fcomps
mov
rolb
push
cld
jb
jl
faddl
addr16
sarb
add
idivl
loop
push
out
ret
fldl
cli
inc
xchg
arpl
repz
mov
out
mov
fidivrl
inc
dec
lock
dec
rcll
mov
pushf
mov
and
sti
std
popa
ds
jae
in
and
add
ss
enter
enter
enter
cmc
push
fwait
ret
adc
mov
mov
push
js
hlt
mov
sub
xchg
fucomip
jo
cli
iret
mov
lahf
sub
fwait
mov
dec
movsl
push
into
lret
cmp
or
idivl
jg
mov
dec
mov
pop
arpl
push
sbb
inc
fisttpll
imul
js
iret
add
push
mov
ret
pop
mov
cld
add
mulb
pop
loopne
aam
pop
cli
xchg
ja
push
roll
cmp
mov
ret
aad
push
dec
out
pop
lods
lret
fcoms
sti
adc
clc
mov
insl
mov
mov
pop
inc
push
xor
push
cmp
mov
jbe
lcall
push
mov
mov
mov
or
outsl
xor
fadds
sbb
mov
mov
push
scas
dec
adcb
sub
rclb
gs
sub
jns
mov
ss
and
outsb
ror
add
fisubrs
inc
or
push
sbb
jge
pop
xchg
std
repnz
mov
dec
sbb
pop
ret
mov
adc
mov
fbstp
dec
hlt
ljmp
add
insb
cmp
mov
mov
mov
enter
pop
faddl
es
into
push
mov
cmp
push
icebp
es
adc
mov
movsb
push
nop
xchg
subl
mov
xchg
or
dec
mov
lds
gs
lds
mov
mull
push
mov
leave
adc
adc
int
rcrl
fisubrl
or
cwtl
cmp
lods
je
test
mov
mov
xor
mov
cmp
push
mov
and
inc
ss
fsubl
popa
push
inc
xlat
mov
push
fcomp
push
insb
jge
in
mov
jecxz
mov
pop
inc
push
xor
pusha
fs
pop
xchg
fdivrp
add
add
rcl
dec
xchg
sbb
lahf
jbe
xchg
out
ja
jge
cli
xchg
adc
xchg
movsb
cmovs
sub
push
insl
xor
jns
jne
adc
ret
add
sbb
adc
mov
jnp
outsb
cmp
mov
push
xor
mov
xor
mov
mov
inc
insb
inc
mov
push
std
xor
adc
jno
out
lret
insb
and
adc
jno
test
sti
lret
int
insl
cmpsb
pop
loopne
aad
dec
push
sbb
lods
push
xor
xor
inc
push
dec
mov
pop
outsb
sub
mov
cld
int
xorl
dec
fisttpl
fisttps
pop
inc
inc
pop
sti
mov
add
cmp
sbb
mov
sbb
and
dec
lods
adc
lahf
dec
pop
xor
stos
les
mov
cmc
popa
imul
call
clc
inc
je
sbb
mov
lock
inc
jecxz
or
push
xor
jno
leave
push
mov
inc
lock
xchg
mov
shrl
std
and
push
lds
rorl
add
stos
loope
inc
jnp
push
xlat
sbb
sbbb
mov
icebp
idiv
add
jl
inc
push
int
inc
or
ljmp
aad
in
jno
push
popa
adc
sbb
in
outsb
xor
mov
jg
cmp
cmp
mov
mov
adc
or
inc
daa
bnd
sub
mov
mov
or
idivb
cwtl
xor
mov
dec
rorb
dec
sbb
pop
call
outsl
loope
sbb
mov
ficoml
mov
add
sbbb
gs
adc
stc
xchg
addr16
push
sbb
nop
sub
lods
or
mov
std
push
mov
push
cmp
cwtl
mov
push
pop
mov
mov
icebp
mov
nop
nop
push
fistpl
xor
pop
scas
and
sub
lock
hlt
add
or
xor
aaa
ljmp
xlat
xor
cwtl
add
jo
sbb
mov
cwtl
fsub
pusha
pop
xchg
icebp
repz
arpl
cs
popf
mov
loope
inc
div
push
add
test
sarl
loop
fistps
aam
add
sub
xor
jmp
lret
jno
daa
push
insb
push
mov
and
cmp
sbb
dec
scas
out
std
xchg
mov
nop
xchg
xlat
jecxz
jmp
jns
xchg
sahf
divb
ret
orb
mov
pushf
in
pslld
cmpb
test
sbb
cmp
or
je
push
pop
adc
add
insl
mov
popa
lahf
jae
mov
dec
cmp
icebp
pop
fistps
or
popa
addl
push
cmp
popf
popa
xchg
mov
std
dec
add
inc
das
int
shll
mov
mov
push
ds
add
vminps
sub
orb
jle
mov
daa
lea
mov
pop
add
mov
push
jle
cmp
cmpsl
xchg
jae
scas
movsl
xor
idivb
in
xor
push
popl
icebp
sbb
cmpsb
cli
dec
or
xor
out
jl
test
pop
xchg
js
test
sub
fdivs
push
xor
clc
jecxz
cmp
dec
xchg
rorb
imul
pop
lea
xchg
hlt
mov
xor
aaa
int
pop
out
fdivs
inc
sti
loope
pop
lods
stc
push
out
clc
int3
push
or
aad
cmp
mov
xor
mov
xlat
aaa
int3
jp
jno
icebp
shrl
and
mov
pusha
or
add
push
pop
add
popf
into
xor
cmpsb
push
leave
or
pop
or
js
xor
sub
int
mov
in
sbb
ret
in
data16
cmpsl
inc
xor
imul
mov
stos
cmp
mov
dec
adc
push
add
sub
and
aaa
pop
and
sub
xor
adc
cltd
lret
sub
shr
rcrl
test
inc
or
mov
xor
sub
dec
cmpsb
sub
xchg
pop
cld
daa
loop
lcall
pusha
xchg
sbb
xchg
in
or
test
mov
loop
test
jmp
cmpsb
cmc
cmp
push
push
jp
ret
jg
dec
push
or
pop
cld
add
data16
mov
mov
arpl
push
iret
daa
cmp
cmp
stos
or
xor
lea
mov
or
cli
nop
mov
xchg
jno
mov
dec
cmc
pop
adc
insb
testl
in
jae
test
lds
or
push
mov
in
dec
inc
fidivrs
movsl
jbe
mov
inc
adc
dec
mov
cmpsl
adc
cmp
mov
xor
and
scas
insl
sub
lock
sbb
or
adc
cwtl
mov
jo
xor
mov
xor
cmp
add
push
loop
mov
adc
pop
in
add
lock
sbb
setg
ljmp
push
or
push
push
cmp
and
cwtl
cs
adcb
jg
pop
das
xor
adc
dec
ficoml
iret
mov
inc
xlat
mov
push
sbb
sub
cltd
das
mov
ja
lret
pop
mov
add
aaa
fisttpll
pop
andb
sub
xor
ror
lea
movntq
icebp
and
ret
outsb
sub
insl
mov
lcall
bnd
fcoml
cmp
call
fbld
or
jb
outsb
lds
popf
cmp
int
mov
pop
fbstp
negl
jmp
pop
pop
cmp
mov
dec
and
mov
add
out
lret
cmp
outsb
dec
jne
mov
sbb
push
loop
repz
cltd
das
nop
test
stc
pop
adc
js
ja
mov
adc
test
loopne
std
cld
scas
xor
mov
and
fldcw
dec
mov
xor
xor
nopl
xor
pop
cltd
aad
push
daa
int3
insb
in
hlt
xor
cmp
filds
stc
jbe
xor
jl
or
adc
cmpsl
lock
mov
inc
addr16
mov
mov
push
push
sub
push
mov
enter
mov
sbb
cmp
insl
push
imul
sahf
pop
fucompp
loop
sbb
movsb
dec
push
dec
xor
int
loop
aaa
mov
rorl
stos
shll
xchg
add
or
jg
add
mov
xchg
push
aam
jmp
cmpsb
out
xor
inc
mov
ds
add
xchg
jns
pop
xchg
lcall
or
call
inc
imul
jecxz
imul
cmc
in
movsl
stc
mov
out
int3
test
lret
clc
push
lods
xchg
and
and
push
sti
clc
lahf
iret
mov
xchg
std
or
nop
mov
jle
xchg
cwtl
or
fwait
cli
adc
dec
xor
loope
filds
andl
cltd
fdiv
cmp
mov
sub
sbb
loop
xchg
adc
stos
imul
pop
hlt
repz
test
mov
dec
xor
push
std
lcall
sbb
xchg
mov
jo
test
pop
repnz
mov
jmp
mov
jmp
pop
loope
leave
test
fs
out
mov
clc
xor
cmp
stos
imul
push
cmc
add
lcall
add
imul
aad
and
add
aam
mov
shrl
ja
test
or
addr16
xchg
in
ds
ds
rol
fwait
mov
push
mov
mov
adc
mov
dec
push
mov
mov
xor
out
repz
and
scas
push
and
je
es
sbbb
adc
add
imul
ret
dec
lds
mov
mov
xor
lret
aam
mov
sub
hlt
leave
lahf
sub
out
out
insl
mov
mov
mov
daa
mov
cli
xlat
adc
cs
mov
jno
push
aad
xor
lret
push
rcrl
repnz
repnz
adc
mov
add
and
movsl
lret
push
fiadds
insl
adc
je
inc
jg
dec
les
js
mov
scas
jecxz
sub
mull
pop
imul
dec
push
mov
icebp
std
adc
psubq
or
stc
sbb
fldenv
das
fists
and
ss
sti
and
in
jmp
arpl
xchg
repnz
sbb
jb
movsl
cmp
inc
hlt
jecxz
sbb
dec
dec
mov
fldl
xchg
mov
jbe
mov
xchg
mov
or
mov
xlat
stos
xor
mov
or
mov
mov
cltd
sahf
int3
cli
xchg
mov
loopne
push
sbb
and
sbb
stos
push
pop
push
lret
fidivrs
or
mov
xor
addl
add
pushf
push
lods
gs
fwait
addl
lahf
jbe
call
jmp
std
je
std
jbe
enter
inc
and
add
mov
push
add
mov
jb
push
out
lea
jle
fidivrl
add
sub
jmp
ja
sub
xor
pop
jns
lods
nop
sbb
add
mov
mov
mov
in
in
jns
mov
mull
cli
lods
sbb
arpl
aam
xchg
out
and
cltd
popf
repz
rcrl
aad
js
aas
xchg
jne
mov
das
cmp
clc
mov
xor
mov
pop
lcall
adc
pushl
dec
jle
jg
scas
xchg
call
lods
or
popf
cmp
mov
sub
shl
xchg
fsts
and
movsl
jge
xchg
mov
push
mul
xor
jg
insl
xchg
lret
jb
ljmp
add
mov
pop
in
xor
das
sub
pop
ret
fs
push
mov
jecxz
mov
gs
push
mov
jno
xor
insl
lods
repz
ss
movl
mov
popa
pop
rcll
pushf
hlt
xor
push
xchg
jecxz
insb
sub
sub
sbb
lret
xchg
daa
rcr
cmp
mov
popa
loope
and
dec
rsm
not
xchg
push
or
xchg
int
sbb
mov
mov
pusha
sti
stos
repz
push
std
imul
xor
mov
jo
enter
repnz
dec
aas
sti
inc
les
scas
stos
xchg
cmp
jecxz
push
pusha
push
pusha
pop
aas
mov
cmc
dec
sbb
or
sbb
push
cmp
fwait
jo
lock
cltd
outsb
movsl
mov
mov
sub
out
nop
and
and
mov
insb
push
out
je
cmpsb
mov
test
add
add
insl
popa
insl
sahf
in
add
xor
out
cmp
cmpsl
and
dec
pushf
ss
xor
push
xchg
fisubl
push
sbb
int
movsl
xor
cmp
adc
in
xchg
sbb
icebp
jl
mov
aas
fiaddl
sahf
add
inc
cmp
scas
stos
insb
aaa
pop
or
sahf
cmp
inc
xchg
dec
je
sub
jo
cmc
in
xlat
ja
iret
fsubs
xor
add
sub
pop
mov
mov
hlt
mov
sub
nop
cmp
stos
mov
push
das
push
cmp
xchg
sbb
add
dec
sbb
lea
inc
sub
xchg
outsl
xorb
aam
mov
clc
mov
aas
jnp
fistpll
jo
aas
dec
add
mov
mov
cmpsb
sub
lahf
cmp
jg
mov
std
sbb
addr16
shrb
push
jmp
out
mov
lret
inc
add
fdivr
mul
add
push
jo
push
out
andb
mov
shlb
ret
movsl
sub
test
dec
cmpsl
inc
add
add
loope
divb
xor
mov
adc
ss
push
or
orb
push
sarl
sub
sarb
lret
fidivl
push
mov
pusha
add
adc
out
cmp
and
cmp
jbe
sahf
xlat
inc
loopne
ret
mov
lret
sbb
arpl
fstl
add
jae
scas
cmp
dec
jmp
push
cmpsl
imul
adc
push
push
bound
jmp
jle
enter
mov
add
int3
or
es
dec
inc
dec
in
mov
inc
repnz
in
xchg
or
cmp
adc
fpatan
fs
inc
mov
bound
xchg
ret
mov
aam
ret
out
mov
enter
das
lahf
jne
gs
aam
push
enter
dec
arpl
sbb
mov
aad
mov
add
xchg
cld
idivb
cmp
jae
daa
sub
mov
arpl
dec
inc
add
jecxz
jg
enter
cltd
inc
mov
push
ds
push
cmp
subl
cmp
sub
gs
xchg
sbb
dec
adc
pop
push
and
into
popa
lock
lock
xchg
insb
and
jmp
dec
xchg
mov
and
cld
push
add
daa
mov
lods
out
or
iret
out
bound
cmp
mov
push
outsl
leave
insl
nop
aaa
jb
jge
in
into
test
imul
push
jno
cmp
inc
pop
xchg
je
mov
mov
loopne
cli
add
and
pop
in
jae
inc
lods
mov
jl
push
iret
xchg
cmp
ds
jbe
sub
jl
pop
subl
xor
cmpsl
jmp
std
enter
xchg
popa
rcrb
sbb
push
push
mov
pop
test
gs
push
mov
dec
dec
mov
pop
cltd
sbb
adc
dec
inc
jecxz
jp
out
mov
icebp
xchg
int3
pop
push
testl
movsl
add
cmp
out
js
mov
dec
push
mov
pop
jo
pop
pop
jnp
leave
popf
and
jbe
call
ds
xor
push
test
sub
jbe
mov
in
mov
sbb
sti
adc
push
inc
loop
gs
cld
and
hlt
negb
in
xchg
xor
cli
mov
ja
dec
mov
pushf
pop
and
mov
daa
dec
pop
mov
ds
mov
dec
or
cmpb
in
inc
inc
pop
mov
icebp
xor
jg
add
rcrb
insl
push
dec
sbb
ret
xor
xor
lea
std
jo
add
sub
leave
pop
mov
orb
sbb
pop
and
sahf
sbb
or
addr16
movsl
int
adc
adc
std
rcl
mov
outsl
stc
fldl
adc
push
iret
repz
loopne
fistpl
push
movsl
dec
cmp
imul
sbb
fwait
outsb
imul
mov
xor
dec
mov
stc
sarl
inc
sub
das
loopne
fwait
scas
test
add
pop
fcoml
pop
std
ss
mov
clc
clc
dec
cmp
cmpb
sub
jne
mov
ss
clc
sbb
pop
lret
out
fstl
lods
add
out
cld
mov
es
sbb
loop
and
shll
shr
andl
out
pop
in
pop
data16
jae
out
xor
sbb
pop
xor
lds
out
mov
daa
cs
in
mov
mov
pusha
dec
mov
jb
push
inc
daa
mov
out
sbb
or
mov
sbb
mov
out
repnz
push
movb
fistpl
mov
lea
jle
ds
inc
lea
scas
imul
subb
cmc
dec
inc
cmp
sbb
jecxz
mov
int3
mov
mov
test
push
cmc
mov
gs
jae
lock
or
mov
xchg
mov
cmp
sbb
mov
xchg
imul
rolb
rorb
inc
ljmp
cld
stos
pop
inc
inc
or
pop
jl
lret
dec
or
fsubrp
or
pop
dec
gs
and
lock
leave
sbb
mov
inc
iret
push
mov
clc
cs
mov
push
mov
aam
scas
lock
das
push
lret
and
hlt
inc
add
mov
push
mov
fsubs
test
stc
push
andnps
lahf
push
popf
add
cmp
sbb
test
clc
shlb
cmp
and
xchg
or
cld
cmp
dec
push
xchg
sahf
jno
push
inc
pop
dec
xor
pop
push
jo
imul
push
jge
movsl
push
cld
aad
jg
pop
scas
int3
inc
jo
inc
pop
mov
adc
stos
mov
pop
cmpsb
fcomps
mov
pop
jle
push
mov
pop
add
shll
mov
mov
pop
jae
jae
pusha
or
pop
add
inc
xor
std
sbb
xor
inc
aad
inc
mov
jnp
shrl
and
jg
bound
es
cli
push
xor
pusha
sub
xor
mov
inc
jle
call
mov
decl
xchg
jl
dec
lods
ret
lea
idivl
xor
dec
inc
lahf
movl
lret
jae
jae
lret
ljmp
and
sarl
fidivl
sub
and
mov
xchg
cmc
fnstcw
dec
test
sub
test
fwait
sbb
hlt
mov
inc
or
enter
xchg
mov
daa
push
fwait
adc
ret
mov
adc
jo
lret
adc
addb
mov
lea
add
mov
into
pusha
or
fadds
cli
test
jmp
or
test
mov
mov
imul
sub
push
rcrb
sub
xor
push
xchg
adc
sbb
pop
mov
fnstenv
lret
fistpll
int
jne
jns
into
push
jge
stos
and
mov
scas
jecxz
or
mov
cld
sub
scas
push
xor
adc
gs
push
pop
imul
popa
mov
ja
dec
js
mov
jl
sub
jge
sub
pop
in
pop
movsb
mov
add
sub
in
ds
mov
and
add
sub
jge
mov
jecxz
cmc
adc
xchg
fwait
jo
fdivrl
sbb
sub
cmpsl
cmp
pop
leave
loop
rorl
mov
cmp
jl
push
pop
test
mov
scas
cmp
xor
push
fwait
imul
dec
fcomip
ljmp
mov
sub
mov
fs
sub
or
jl
roll
outsb
shlb
jge
inc
das
daa
movsb
cmp
pop
test
adc
cmp
sbbb
mov
push
jecxz
movsb
jbe
push
cmp
xchg
cmpsl
or
add
pop
orl
jg
sti
mov
iret
in
dec
and
push
and
das
push
dec
sbb
out
fs
pop
inc
jmp
dec
scas
add
and
sbb
mov
roll
test
in
mov
and
enter
aam
addl
mov
pop
push
fwait
loopne
or
push
sti
adc
ja
add
in
jb
adc
add
ja
sti
les
pop
sub
cltd
add
push
jne
push
sub
ror
hlt
stc
inc
xchg
or
or
mov
in
mov
sbb
ljmp
cwtl
add
cmp
sbb
mov
push
orb
cmp
sbb
stc
fucomi
hlt
lods
lret
add
dec
cmpsb
xor
fs
int3
int
xorb
idivl
jns
pop
enter
sub
dec
repz
sbb
insb
xchg
lret
movsb
les
mov
sbb
fisubs
int
adc
daa
dec
addr16
sar
or
sbb
lahf
sub
aam
cmc
xor
in
push
cmp
mov
inc
cmp
fwait
mov
dec
mov
pop
adc
sbb
mov
dec
sub
dec
aad
mov
cmp
clc
jge
xor
stos
in
inc
xor
in
sbb
inc
push
cmp
fnop
mov
stos
add
lods
jmp
mov
in
xlat
ret
jmp
inc
fisubs
and
push
mov
adc
shll
in
jnp
movsl
ret
push
icebp
insl
mov
insb
lds
sbb
cmpsb
mov
jl
push
call
in
push
imul
mov
fwait
adc
lods
lret
dec
imul
xchg
cmp
xchg
cltd
xchg
add
test
jge
cli
mov
aam
movsb
fidivrl
cmp
pop
mov
arpl
lock
lods
sbb
xchg
xor
xor
dec
ljmp
add
xor
sub
lds
adc
sahf
pop
out
sbb
pop
add
push
inc
in
mov
xchg
adc
inc
pop
xor
cs
xlat
pop
inc
xchg
fbld
jle
adc
aaa
inc
mov
sarb
lods
das
adc
into
pop
cwtl
aaa
js
mov
sbb
cmp
les
inc
lahf
dec
outsl
mov
imul
rcrb
pop
mov
mov
push
push
int3
cmp
es
imul
xchg
xor
sahf
and
inc
out
add
int3
push
jmp
test
lcall
pop
mov
mov
mov
stos
xor
fwait
mov
out
std
xchg
push
push
sub
xchg
ret
pop
mov
outsl
sbb
push
movsl
fildl
insb
mov
xchg
jl
iret
xlat
xchg
call
pop
std
addr16
aas
or
xchg
addr16
mov
mov
mov
gs
mov
push
fstps
jg
cmpsb
mov
test
shl
mov
pop
out
pop
out
int3
mov
mov
femms
iret
xor
fadds
inc
adc
ja
test
shl
inc
rcrl
mov
inc
inc
fwait
and
pop
jno
mov
push
push
lods
and
scas
xor
std
push
jo
out
daa
adc
daa
es
icebp
das
loopne
push
and
xchg
mov
ss
rorl
xchg
cmpsb
stc
aam
mov
mov
adc
iret
nop
leave
insl
adc
das
or
sub
xchg
sub
ds
mov
sub
xor
gs
pop
xchg
aaa
xchg
and
mov
inc
lcall
sub
push
xchg
orl
mov
push
shr
inc
andl
add
les
sbb
nop
cmp
int
mov
add
dec
push
xchg
rolb
xor
push
cmp
es
xor
ja
dec
push
popa
mov
mull
mov
dec
mov
push
jp
mov
arpl
mov
lret
sub
jae
pop
dec
push
sub
pushf
gs
daa
dec
popf
sub
xchg
mov
jg
push
sub
test
gs
add
adc
sbb
dec
cmc
mov
scas
rcll
fdivr
or
mov
mov
addr16
xor
cld
pop
adc
inc
hlt
popa
inc
addr16
leave
jns
in
rcpps
dec
stos
adc
jae
add
js
jb
pushf
add
insb
pop
inc
aam
test
scas
mov
and
mov
sub
jl
jl
adc
into
inc
hlt
jg
jecxz
enter
inc
jbe
jae
lahf
mov
inc
fs
mov
inc
out
test
cmp
lcall
cwtl
movsb
push
mov
push
jge
xlat
mov
repnz
mov
and
inc
pushf
pusha
xchg
mov
ss
sbb
xchg
cmp
add
xchg
mov
gs
lret
mov
inc
jecxz
dec
call
mov
ljmp
add
outsl
insb
fimull
sahf
cs
shrl
jmp
movsb
icebp
rcrb
push
sub
js
imul
movsb
loope
cmp
dec
add
lret
test
xchg
iret
adc
outsl
ss
addr16
inc
xchg
mov
insb
out
and
icebp
fabs
stc
dec
xchg
push
pop
int
imul
adc
dec
and
ret
in
mov
pop
push
call
push
icebp
inc
popa
sub
int
stos
adc
pop
adc
cmpsl
mov
mov
mov
cmp
sbbb
or
mov
xor
pop
cmp
mov
add
out
outsb
xchg
loop
rcll
push
scas
sbb
xor
rorl
jno
or
in
mov
test
mov
stos
jbe
in
fsubrl
jmp
call
outsl
jmp
or
mov
mov
fldcw
mov
leave
into
fsubs
rcll
push
nop
testl
out
test
cmp
adc
out
nop
or
hlt
cmpsb
inc
xor
push
loopne
sbb
sbb
push
fcmovnb
cmp
lea
pop
fmuls
xchg
jl
dec
lcall
in
jb
xor
pop
test
das
mov
adc
rcll
push
inc
dec
aas
xchg
pop
push
inc
sahf
jmp
and
test
mov
out
sub
shrb
stc
fadds
inc
imul
scas
xor
fsubs
test
bound
roll
popf
cwtl
mov
xor
mov
iret
js
icebp
sar
dec
sti
mov
fcompl
das
sbb
jecxz
sbb
test
jmp
sub
xchg
scas
xchg
stos
aam
pop
loope
push
pop
pushf
adc
lret
xchg
mov
lret
jno
mov
inc
lret
mov
in
mov
or
cwtl
addr16
adc
mov
imul
ja
jno
jmp
inc
jecxz
repz
lret
add
mov
fmull
inc
adc
pop
mull
push
jnp
or
in
xor
adc
fs
pop
int3
cmp
xor
dec
test
push
pop
push
dec
sti
es
outsl
cltd
data16
sub
test
sbb
mov
stc
pop
int
pop
cmp
jns
clc
mov
bound
iret
cmpsb
loopne
or
add
daa
aaa
mov
loope
xchg
mov
aaa
or
cmp
in
or
cmp
popf
sbb
sbb
data16
das
mov
jmp
scas
stos
or
jnp
negl
hlt
xor
lret
jo
gs
mov
lods
sub
fs
inc
int
in
pop
shlb
mov
mov
pop
pop
insl
lret
pop
daa
stc
mov
jecxz
and
ss
or
test
jbe
ret
or
out
pop
push
xor
mov
cs
cld
jmp
sub
push
rorb
dec
jmp
jo
rcrb
jge
in
popa
insl
and
xchg
and
stos
jecxz
ss
loopne
int
lods
sbb
mov
cmc
push
or
xchg
sub
mov
add
sub
lds
stos
fcompl
ret
std
lods
mov
or
and
rol
pop
dec
sub
add
add
inc
in
mov
rcr
fwait
mov
ret
mov
ljmp
inc
dec
into
adc
jbe
lods
pop
testb
clc
dec
dec
pop
mov
adc
lods
jae
mov
inc
adc
rcrb
xor
push
call
adcl
call
divb
fdivrp
dec
pop
out
loopne
lcall
pop
mov
aas
jmp
sbb
inc
sub
inc
pop
lea
push
push
add
or
incb
dec
jl
test
jg
jmp
or
rcll
pop
inc
add
loop
idivb
xchg
add
imul
xor
sub
lock
in
mov
mov
outsl
cld
cs
icebp
mov
or
inc
in
ss
jmp
in
push
lods
mov
add
divl
cmp
xchg
bound
xchg
xchg
jle
shl
int3
fdivs
adc
cmpsl
arpl
push
iret
shl
cmp
data16
or
adc
daa
fnsave
pushf
in
sub
jbe
inc
aaa
jbe
bswap
mov
movl
fcoms
push
fmull
inc
or
fs
test
pop
andb
pop
iret
std
insl
clc
pop
call
movsb
pop
or
mov
loope
and
inc
jmp
push
dec
ja
subps
mov
push
xor
add
dec
out
or
add
mov
mov
mov
cmp
lret
jae
repnz
push
sbb
mov
push
lahf
push
sbb
adc
popf
xor
or
loope
inc
rclb
mov
fldt
sbbb
inc
pusha
ljmp
dec
decl
test
loopne
inc
dec
push
sub
sarl
daa
sbb
scas
dec
imul
inc
lahf
xchg
push
lret
jmp
inc
sub
mov
sub
stos
cltd
lods
stc
notb
pop
push
pop
pop
rcrl
cmp
clc
ss
popa
mov
ds
inc
xlat
pushf
xor
sub
or
dec
out
je
sti
insb
push
adc
scas
lods
mov
jnp
sarb
jno
fdivs
xchg
popa
int
cmp
rcrl
outsl
lcall
shlb
inc
out
je
adc
inc
pop
inc
push
or
repnz
roll
sub
jecxz
lods
or
mov
add
pop
das
xor
add
out
cmp
sarb
out
ja
xor
push
icebp
test
fidivl
in
imul
rcrb
jns
jge
jp
std
hlt
dec
and
mov
ss
and
pusha
inc
ss
jo
jae
enter
aam
jbe
loopne
out
or
xor
push
into
pop
jg
push
test
xor
mov
inc
out
pop
pop
add
fistpl
aad
adc
mov
je
add
push
pop
sahf
test
popa
popl
mov
mov
sahf
and
int3
mov
jne
push
cmpsl
cmp
in
enter
cmp
lret
ss
adc
inc
and
loope
jo
pop
in
mov
int3
jns
xor
jg
repz
popf
add
xchg
bound
insb
mov
push
dec
jno
sub
arpl
xlat
std
aam
pushf
bound
sub
mov
in
scas
jmp
outsl
pop
stos
dec
adc
adc
push
rorb
mov
movsb
add
lcall
jnp
jecxz
aad
into
ljmp
add
sub
fisubrl
fwait
xchg
std
outsb
pop
mov
mov
pop
cs
rorb
mov
out
fsts
fs
and
jmp
xorb
mov
mov
cwtl
stos
push
aam
mov
mov
nop
jecxz
sub
sbb
dec
lds
test
xchg
jmp
aaa
enter
mov
in
dec
adc
sub
sbb
mov
xor
ja,pn
mov
xor
out
adc
push
inc
push
push
mov
fs
mov
sbb
cmp
cmp
or
jns
mov
mov
cmpl
mov
outsl
gs
inc
dec
iret
in
jno
xor
in
fidivl
add
insl
xor
jb
outsb
loop
test
cmp
imul
pop
std
je
jmp
pop
movsb
andl
mov
add
xor
out
push
loop
movsb
inc
mov
dec
nop
xchg
sub
bound
and
cmp
pop
push
lret
lret
lods
imul
adc
ljmp
enter
enter
dec
xor
mov
nop
pushf
pop
insb
inc
shll
out
rorb
inc
mov
jns
in
add
and
pushf
mov
cmp
or
pop
xchg
pop
and
jbe
out
or
ds
jb
iret
push
jnp
mov
mov
js
or
loopne
sub
jg
fcoml
pop
cmp
jbe
cmp
scas
xchg
call
xchg
mov
mov
push
sub
mov
adc
mov
ja
cmp
outsb
out
test
pop
push
or
clc
add
js
jne
loopne
loope
pop
pop
stos
test
cwtl
stos
add
test
add
mov
push
adc
in
int3
jecxz
jge
sti
dec
lock
cld
inc
mov
daa
or
shl
mov
out
ljmp
out
cwtl
sbb
or
inc
jp
xchg
cmp
les
jbe
cmp
out
pop
xchg
mov
and
push
outsb
sub
sbbb
and
xchg
push
mov
leave
lock
push
xchg
or
mov
insl
test
and
or
push
test
mov
push
mov
cmp
mov
add
mov
icebp
push
jle,pn
rcrb
xchg
gs
mov
pop
in
loopne
mov
dec
mov
jp
xor
mov
test
mov
mov
sti
test
das
mov
scas
in
add
adc
pusha
sbb
ds
pop
fnstenv
lret
mov
imul
repz
fstpl
fxch
add
inc
aaa
or
sub
data16
out
mov
das
inc
ljmp
hlt
fcmovu
sub
cmp
fcomi
or
in
lea
sub
xlat
stos
lock
pop
jno
dec
aad
test
orb
inc
dec
adc
mov
arpl
xor
loope
dec
test
and
leave
stc
dec
or
arpl
push
pop
pop
lds
pop
loope
xor
mov
sbb
sarb
dec
pop
cld
mov
out
push
divl
into
push
cmp
jo
jge
popa
xchg
fnstsw
enter
sbb
mov
dec
jecxz
lods
jmp
add
mov
repz
arpl
sub
fmull
icebp
pop
jnp
mov
fcoml
xchg
in
popa
out
or
iret
sbb
cmpsb
xchg
fdiv
stos
insb
movsb
notl
cli
mov
xchg
xchg
or
movsl
add
mov
cmc
mov
data16
push
testl
insl
jg
incl
xlat
dec
sbb
fisubrl
mov
and
stos
imul
add
adc
insb
or
add
mov
neg
gs
jae
faddl
aaa
pop
jnp
inc
rorb
xor
std
out
mov
mov
push
mov
fwait
cmp
push
jns
popf
jo
in
test
lcall
cmc
movsl
sub
jg
test
xchg
mov
sbbl
lcall
sub
push
insl
call
or
mov
mov
pop
mov
ret
mov
xchg
inc
sahf
mov
sub
jmp
daa
push
arpl
adc
std
mov
xchg
loop
rol
pusha
cmc
and
or
sbb
cmp
or
nop
dec
fucomip
add
mov
sub
mov
in
xchg
cmp
lret
ficomps
push
ret
cmp
pushf
insb
cmp
xchg
ljmp
mov
cmpsl
jo
pusha
sti
iret
mov
or
pop
xchg
mov
fldenv
mov
jb
mov
sbb
push
cmp
mov
ljmp
lret
inc
movsb
or
xchg
fcmovb
xchg
insb
mov
pop
inc
cmp
imul
push
imul
in
aad
mov
mov
inc
out
lods
sbb
std
xchg
mov
adc
mov
cwtl
or
ljmp
cmp
sti
aaa
mov
xor
mov
cwtl
mov
mov
ret
mov
push
orb
clc
dec
ret
xchg
jne
fldt
jle
mov
std
dec
rclb
adc
out
or
scas
daa
scas
adc
or
jo
in
mov
inc
pop
aaa
ja
icebp
or
pop
sahf
and
ret
and
lcall
out
xchg
mov
lea
fidivrl
xor
imulb
mov
pop
or
js
jp
and
cmpb
rcll
cld
xchg
mov
push
push
push
mov
arpl
mov
ljmp
dec
sti
pusha
mov
ss
call
xor
and
sbb
xchg
push
popa
mov
sbb
and
pop
insb
movsl
je
xor
lahf
cmp
mov
arpl
lret
mov
mov
jcxz
mov
adc
push
aaa
adc
dec
cmp
lods
push
ffreep
cld
ljmp
movsb
push
inc
pop
ret
fstl
aam
scas
popf
sub
shlb
gs
and
out
in
mov
pop
dec
int3
dec
fistps
and
subb
add
fcmovnu
xchg
cwtl
ffree
icebp
jp
jb
xchg
pusha
clc
movd
jle
sbb
nop
outsb
dec
sbb
shlb
icebp
enter
mov
and
shlb
mov
xchg
stc
mov
and
test
fidivrs
mov
inc
pop
testb
int3
mov
jb
dec
add
push
pop
adc
adc
jecxz
mov
int3
add
add
je
mov
gs
push
pop
rorb
mov
leave
fnstsw
jb
sbb
xchg
adc
lret
fnsave
xchg
faddl
repz
inc
jnp
mov
outsl
sbb
call
mov
das
mov
mov
dec
pop
mov
lea
push
ficompl
sub
les
pop
clc
push
pusha
jae
and
push
scas
push
cmpsl
aam
inc
dec
loopne
xor
out
jg
mov
xchg
leave
pop
scas
xor
cmp
jns
cltd
repz
xor
hlt
mov
stos
jle
daa
push
cwtl
jge
popf
and
out
aaa
mov
insb
mov
repnz
adc
popl
test
lds
cwtl
or
mov
xchg
mov
icebp
cwtl
sub
mov
mov
or
sub
mov
push
subb
bound
in
int3
je
jle
xchg
sarb
aas
push
or
push
fnsave
pop
dec
xor
pushf
in
out
test
int
in
dec
lahf
inc
xor
clc
pop
cmp
inc
pop
xchg
js,pt
inc
leave
out
rcrl
pop
or
cmp
pop
push
push
mov
rcrl
inc
cltd
mov
fdivrl
xchg
fwait
add
pop
and
cwtl
cmp
xor
cltd
or
lods
jge
sbb
pop
and
mov
test
pop
arpl
daa
sahf
out
sarl
fldt
mov
mov
dec
popa
dec
in
push
mov
lcall
ficomps
loopne
cltd
xchg
xchg
sbb
jmp
inc
out
mov
sbb
sbb
aas
inc
mull
fcoml
dec
sti
int3
call
adc
insb
sub
jecxz
mov
dec
cwtl
aad
sbb
add
mov
xchg
test
mov
lds
fisttpll
inc
cltd
rclb
push
mov
add
push
je
or
xor
call
pop
movsb
mov
mov
test
dec
sbb
cld
dec
mov
jno
jbe
enter
fcmovne
les
out
mov
fcmovne
in
fs
hlt
shl
or
and
mov
bound
xchg
imul
je
xor
sub
lock
mov
fdivl
push
dec
arpl
fdivrs
pop
cwtl
jle
xchg
shll
sub
mov
loope
mov
bound
mov
xor
clc
or
dec
inc
lock
rcrl
dec
sbbb
jb
mov
dec
daa
repnz
pop
fs
xlat
add
jge
mov
pop
or
jno
adc
xor
call
or
mov
das
push
test
mov
out
fdivrl
pop
js
arpl
pop
lods
test
pop
cmc
pop
and
call
mov
pop
inc
mov
adc
jle
xchg
inc
pushl
std
cs
and
in
filds
mov
cmp
xor
mov
sbb
cmp
jbe
fs
fnop
xor
outsl
sbb
xor
push
adc
int
mov
adc
repnz
std
popf
popa
jg
int
lret
mov
and
in
in
xchg
lods
xchg
loopne
insb
dec
mov
jbe
mov
movd
adc
fs
fmulp
inc
aaa
imul
pushf
mov
jp
push
cld
mov
dec
jns
or
mov
or
jno
dec
in
arpl
aaa
lods
inc
sub
in
push
add
xlat
add
cmpsb
add
cmp
dec
pop
add
add
lea
sbbb
int3
adc
sub
cmpsl
jp
jb
outsb
xor
pop
in
rcrl
fistl
mov
ret
call
mov
push
inc
inc
subl
leave
add
jne
sub
push
stos
call
xor
sti
ljmp
bound
push
jns
in
cs
in
lcall
sbb
out
sub
jge
add
scas
std
xchg
lds
or
sahf
mov
rolb
push
loop
cmp
dec
add
xlat
int3
xchg
jmp
push
dec
bound
ret
and
ja
aas
insb
or
das
fidivrs
idiv
imul
daa
mov
sub
pop
popf
xchg
jecxz
xchg
mov
cld
dec
shll
sbb
mov
mov
lods
aam
pop
jge
sbb
mov
jnp
inc
push
sbb
mov
mov
cmp
mov
pop
pop
movsb
js
dec
mov
mov
enter
xlat
pop
add
fimull
sub
jge
dec
jno
daa
fcmovne
out
pop
icebp
cld
xchg
dec
lcall
clc
add
inc
mov
loop
lahf
push
pop
cld
xchg
push
xchg
push
jle
test
mov
cmc
adc
lods
cmp
idiv
fsubr
mov
idivb
imul
cmpsb
mov
mov
aam
adc
xor
bound
out
mov
fsubs
mov
fucom
inc
je
addr16
sub
pop
lret
nop
stos
dec
pop
mov
cmc
push
popa
fstl
jp
mov
lods
cmpl
jl
fdivs
pop
fiadds
lret
call
xchg
mov
imul
adc
sub
sbb
ds
mov
adcl
add
cmpsb
cld
dec
pop
call
jmp
test
stc
popa
in
jle
and
and
in
push
inc
jnp
nop
shll
dec
pushf
xchg
or
scas
jno
dec
loop
in
and
imull
xchg
mov
xor
add
aad
adc
adc
aad
mov
imul
pop
push
push
pop
jbe
dec
dec
ss
xlat
out
pop
ja
mov
ljmp
jae
sbb
decb
xlat
mov
and
mov
aam
mov
push
out
mov
iret
hlt
lcall
jecxz
sbb
fcomps
std
add
fwait
test
test
xchg
mov
cld
mov
jl
and
inc
inc
or
push
addb
sbb
ret
mov
test
xchg
ljmp
xlat
mov
add
xchg
xchg
xchg
or
jecxz
and
imul
shrb
xchg
daa
test
roll
pop
sub
jg
pop
imul
in
aaa
pop
dec
adc
imul
add
xchg
mov
dec
sub
sub
add
insl
negb
int3
inc
jge
adc
bound
and
mov
push
rol
lcall
inc
xor
ds
ds
and
outsb
pusha
hlt
mov
jo
cmc
fstps
xor
jb
cmpsl
ret
arpl
in
cmp
pop
testl
dec
lea
mov
stos
mov
add
incl
sbb
push
dec
mov
in
jbe
xchg
push
fwait
clc
inc
fnstenv
or
dec
insb
push
xchg
push
mov
mov
cmc
repnz
add
jg
push
insb
inc
sub
insb
shlb
pushf
andb
inc
iret
aad
sbb
mov
ss
or
insl
cmp
jge
rorb
aaa
pusha
xchg
mov
out
je
pushf
sti
pop
movsl
mov
pop
sbb
push
or
fdivp
jne
xchg
adc
sub
and
imul
cmp
jg
shll
inc
pop
cmp
int3
dec
inc
addr16
dec
mov
lahf
cmp
pop
push
mov
clc
cmp
cmp
lahf
popf
aad
stos
bound
neg
lahf
cmp
subl
ds
sbb
aam
clc
pop
mov
lcall
aam
adc
shlb
inc
mov
out
dec
clc
add
shr
push
add
jp
bound
sti
sbb
in
or
loopne
cmp
rcll
lds
add
push
popa
fs
adc
xchg
rol
adc
insb
cmp
or
test
xchg
lahf
xchg
outsl
mov
out
mov
push
xchg
sti
das
adc
jno
sub
xchg
cmpb
pop
lods
mov
push
jno
dec
pop
andb
cmp
xchg
xorl
pop
mov
pop
test
push
sbb
in
dec
imul
push
jmp
shll
cmp
sub
xchg
shrl
scas
sbb
push
mov
cwtl
lea
nop
mov
ljmp
or
outsb
fisttps
sbb
sub
stos
sbb
jbe
and
ja
inc
shr
adc
inc
mull
sbb
and
mov
lea
mov
pusha
push
call
roll
test
js
push
js
inc
mov
cmp
icebp
add
lret
dec
outsb
shl
ja
hlt
jo
jns
jo
cli
jbe
mov
inc
iret
mov
mov
push
fcomip
mov
dec
outsb
xchg
inc
stos
adc
popa
nop
loop
mov
xchg
in
cmp
inc
push
cmpsl
nop
pop
pusha
pop
or
sub
xlat
xchg
dec
sbb
pop
adc
sarl
cmp
adc
int3
out
xchg
inc
jmp
negl
jmp
xor
mov
out
roll
cmp
or
pusha
hlt
push
adc
outsb
sbb
xchg
fistpl
cld
cmp
das
dec
push
mov
mov
inc
sahf
addb
testb
dec
cs
pop
lds
fbstp
rcrl
out
mov
and
nop
sahf
mov
add
pop
sub
inc
add
repz
pop
mov
shrl
subb
cmp
aaa
add
aam
mov
pop
test
push
lret
ljmp
xchg
leave
dec
imul
sub
mov
cmpsl
jo
mov
push
mov
lea
and
mov
ds
add
inc
add
les
pushf
push
test
lcall
pop
sub
sbb
sahf
loopne
outsb
dec
pop
test
outsb
stos
sub
push
insl
pop
or
scas
stos
movsb
imul
negb
sub
orl
and
push
xor
jae
mov
enter
sbb
mov
enter
jae
jae
stc
or
lods
shlb
pop
shll
push
mov
mov
pop
iret
ja
jno
outsb
mov
push
andl
mov
mov
sub
xor
xchg
jl
inc
loopne
jno
sub
js
outsl
mov
cwtl
inc
or
or
or
and
cwtl
sbb
cwtl
sub
fwait
scas
mov
adc
test
xor
cwtl
out
cmpsb
adc
mov
inc
outsl
xchg
jo
nop
ja
ds
mov
xor
xor
shll
adc
mov
movsb
mov
test
int
sahf
inc
cmp
jge
jp
subb
and
popf
push
xchg
popa
pop
outsb
mov
mov
ficoml
fwait
xchg
aas
push
cmp
lcall
mov
cmp
movsb
push
sub
adc
repz
mov
mov
xor
or
loop
mov
stos
scas
push
dec
mov
fnstcw
je
jbe
jecxz
rol
test
xor
movsb
xchg
push
lods
jecxz
mov
data16
popa
imul
mov
push
sub
imull
or
pushf
fwait
sbb
fldl
in
xchg
icebp
lret
popa
jg
insb
iret
adc
or
flds
lahf
push
jle
mov
pushf
jae
cmpsb
xchg
js
fists
icebp
mov
insl
repnz
mov
ss
mov
cmp
add
dec
cmp
insb
aam
rcr
lds
jecxz
mov
mov
and
xor
hlt
inc
pop
jo
in
mov
xchg
pop
pop
xlat
int
mov
das
adc
and
xor
mov
xchg
cli
mov
jmp
daa
dec
fdivl
push
mov
fdivr
add
addl
les
mov
adc
dec
add
sbb
sbb
jbe
mov
out
mov
shrb
mov
mov
dec
rclb
mov
and
es
arpl
pop
leave
adc
rcrb
stc
xchg
shlb
adc
nop
mov
mov
hlt
sbb
ret
je
iret
ss
xor
sahf
sub
cmpsb
inc
sbb
cmc
xchg
js
outsb
add
xlat
mov
pop
xchg
mov
test
bsf
sbb
std
add
inc
mov
mov
movaps
mov
jp
ret
shl
inc
sbb
fcompl
testb
jnp
cmpsl
cs
xor
insb
or
stos
out
xchg
loopne
cld
fcomp
adc
mov
push
shrl
fstl
add
fldenv
adc
push
outsl
or
pusha
fnstsw
jae
aaa
mov
push
aad
es
pop
sub
cwtl
das
xlat
cmp
add
mov
sbb
incl
dec
fists
pushf
and
outsb
es
sbb
out
leave
in
dec
ficomps
pop
ret
mov
ret
lret
add
or
dec
sahf
scas
push
imul
dec
inc
add
sahf
push
addps
push
mov
mov
arpl
decb
xor
and
pop
inc
das
mov
inc
jmp
xchg
xchg
movsl
orl
das
outsb
xlat
je
repz
push
stos
inc
rcll
inc
and
pop
push
xchg
mov
cltd
adc
jno
lods
std
out
shll
push
cmpsl
xor
jns
or
sub
jge
dec
call
mov
dec
push
outsb
mov
movsl
xchg
mov
addr16
cwtl
cmp
jnp
mov
clc
cmp
sub
repz
and
adc
insl
inc
mov
jo
lcall
and
ss
aas
jae
xchg
call
cld
sahf
adc
addr16
int
fsub
cli
in
push
mov
enter
lahf
cmc
dec
pop
loope
cmp
movsl
sub
mov
lods
pop
sub
shlb
pusha
jmp
push
sti
mov
and
sbb
pop
iret
jecxz
in
ja
mov
dec
repnz
mov
jnp
cmp
in
xor
imul
aad
xchg
pop
jecxz
jo
xor
sub
and
call
and
mov
mov
popf
mov
cmp
rorl
test
loopne
int
cmp
cmpsl
sahf
sub
and
icebp
and
lods
mov
scas
dec
inc
sbb
xchg
loop
mov
shll
cltd
push
xchg
push
sub
xor
xor
outsl
call
mov
imul
xor
push
sub
pop
mov
mov
cmpsb
mov
out
hlt
adc
dec
xor
movsb
jae
daa
pop
or
push
mov
jne
cltd
roll
das
lods
xor
je
sbbb
cmpsl
xchg
das
jmp
cmp
loope
push
adc
cmpsl
jle
je
outsl
push
adc
std
jecxz
shll
push
sbb
call
jl
push
insl
dec
push
mov
jae
cwtl
out
pop
adc
lret
sub
push
and
add
imul
scas
loope
les
dec
les
lods
sbb
jbe
jmp
inc
out
repz
adc
gs
fists
add
les
xchg
shrl
xchg
outsl
cwtl
hlt
ss
xor
idiv
mov
popa
or
insb
push
ficoms
imul
fldenv
sbb
cmp
mov
std
sub
movsb
scas
cs
adc
add
rcll
mov
xchg
adc
data16
jl
jbe
imul
dec
inc
dec
push
xchg
loop
aas
xorl
and
aaa
arpl
icebp
decb
mov
mov
in
jp
sahf
ficompl
jl
xor
test
mov
fcos
mov
xor
mov
iret
scas
inc
jnp
xlat
mov
shl
xchg
pop
cmp
btr
ds
push
dec
jne
xlat
push
imul
adc
mov
mov
testl
mov
in
out
push
insb
test
mov
ds
movsb
mov
jne
cli
sub
add
scas
jge
mov
and
inc
pop
lods
out
out
xlat
clc
inc
mov
mov
push
imul
sbb
fidivrl
xor
jge
cmp
pop
push
bound
pop
mov
cltd
fwait
shll
inc
jb
pushf
clc
sub
stc
out
xchg
movsb
xor
jle
mov
jo
jmp
and
jo
and
xlat
dec
sub
adc
mov
outsl
cmpb
xor
mov
rorb
aaa
pop
shrl
into
dec
push
mov
xchg
repnz
push
add
mov
lahf
test
inc
hlt
jle
mov
or
push
out
pusha
mov
jb
push
imul
cli
in
push
pusha
ret
leave
fs
movsb
sbb
ljmp
jae
jp
lods
sbb
mov
pavgw
mov
pop
not
dec
mov
outsl
arpl
pusha
rcrb
dec
cwtl
shlb
js
add
xor
ja
jg
adc
push
lock
or
iret
push
xor
out
les
or
stos
mov
movsl
mov
jne
aad
add
ds
pop
push
mov
xlat
int3
mov
aaa
dec
add
fistl
xor
and
adc
aam
les
xor
and
stc
nop
sbb
fwait
mov
out
sub
arpl
std
gs
mov
xlat
lret
repz
mov
movsb
ds
jns
rol
jl
and
popa
dec
cmc
inc
shl
mov
mov
cwtl
dec
xchg
pop
mov
push
loop
stos
push
out
int3
xchg
pushf
push
popa
enter
out
cmp
adc
mov
loope
push
mov
mov
testl
iret
mov
adc
imul
jle
stos
cmpsl
xor
cmc
jmp
popf
jmp
ja
cltd
stos
cmpsl
inc
mov
movsl
int
pop
fs
loopne
rcr
mulb
aam
stc
loope
add
jnp
mov
mov
or
imull
pop
jge
push
mov
push
adc
pop
add
fdivrs
cmc
and
dec
out
inc
sti
repz
sahf
pop
imul
mov
ret
sub
add
in
sbb
mov
je
push
fdivp
push
mov
loopne
insb
insb
jns
dec
test
jns
jmp
ja
test
or
mov
push
jo
xchg
test
aam
dec
inc
inc
insb
lods
movups
fiadds
mov
mov
adc
ret
xlat
fsubrl
xor
xchg
stc
jbe
iret
fs
std
stos
fmuls
arpl
dec
xchg
sub
addl
sub
lods
push
js
aas
add
out
or
add
push
xor
adc
repnz
dec
and
sbbb
rorb
js
out
incb
pop
cmp
xchg
int3
dec
xlat
sbb
mov
enter
cmpl
hlt
or
jmp
jno
pop
pop
sbb
pusha
fcompl
jmp
or
dec
xor
dec
std
pop
scas
gs
mov
psubsb
mov
add
cmp
rcrb
mov
sbb
movsb
jp
cmp
sub
lea
lods
or
gs
push
inc
imull
sbb
xchg
cmp
gs
mov
inc
mov
add
mov
mov
cwtl
xor
pushf
scas
mov
lods
xchg
in
loopne
mov
je
sbb
outsl
push
mov
stos
orb
mov
out
pop
xchg
and
or
loop
bnd
mov
jle
pop
test
add
lea
icebp
mov
int3
fwait
test
loopne
pop
sub
or
mov
sbbb
mov
std
add
or
sahf
mov
mov
testb
test
sbb
enter
pop
fstps
shl
fwait
aad
ljmp
outsb
mov
mov
pop
ret
inc
mov
xchg
ficoms
mov
aaa
pop
push
mov
jb
ja
cmpsl
and
in
divl
test
push
xor
clc
jg
pusha
repnz
mov
mov
stc
ret
fnstcw
xor
pop
pop
and
hlt
test
std
xchg
leave
imul
test
shll
inc
sahf
sbb
mov
mov
and
add
ds
sub
sub
rorb
xchg
loope
jbe
mov
dec
jo
mov
sub
inc
into
push
loope
or
daa
sub
in
lods
push
rclb
fwait
and
mov
inc
pop
sbb
add
in
aas
push
fnstcw
or
mov
push
fwait
dec
test
rolb
mov
mov
int
adc
rorb
scas
mull
or
inc
fnstcw
mov
xchg
mov
cmp
push
sub
sub
mov
aas
xchg
push
and
iret
pop
and
sbb
movsl
jbe
xchg
jne
lret
aaa
mov
xchg
mov
jo
in
push
xchg
jl
call
add
mov
push
dec
sti
mov
and
clc
jg
lods
loopne
loopne
jns
pop
push
hlt
bound
jae
or
jecxz
xchg
sbb
mulb
pop
push
sbb
sbb
mov
loop
and
scas
mov
sti
cmpsl
les
not
jno
add
test
arpl
jns
hlt
sti
or
pop
fdivrs
add
add
int3
movsb
xchg
mov
cmpsl
inc
dec
pusha
movsl
mov
and
sbb
fsubl
cltd
cmp
xor
jnp
je
idivb
jg
mov
leave
les
dec
add
sahf
adc
mov
mov
xor
jns
push
sbb
mov
repnz
push
adc
jle
sarl
jge
jno
mov
jno
push
push
movsl
sti
int
jnp
and
sbb
push
in
les
jl
movsb
inc
jmp
mov
aad
in
sbb
movl
cmp
js
sti
lea
pusha
adc
insl
mov
daa
jmp
push
jmp
add
sbb
mov
xchg
sarb
je
push
clc
ds
inc
cmpsl
push
outsl
mov
in
cs
mov
imul
inc
cld
out
mov
aaa
bound
movsl
std
sbb
or
mov
pop
inc
mov
sbb
fs
seta
mov
outsl
ret
es
cltd
int3
mov
insl
sub
lahf
cwtl
mov
mov
jecxz
ret
mov
jae
cmp
test
sbb
rol
leave
data16
and
lods
insl
cmp
adc
sbb
pop
je
cmpsl
mov
jne
jbe
sbb
sub
in
and
js
xchg
jl
into
cmpb
fwait
aas
fsubr
jecxz
xor
and
sahf
mov
jp
or
xor
and
subb
jbe
xor
mov
in
mov
jno
add
lock
daa
jne
cmp
jb
dec
or
outsb
out
popf
fmull
fistpl
push
xchg
repz
lahf
aad
pop
cmpsb
sub
mov
mov
and
dec
jmp
jbe
add
inc
sub
repz
cmp
sub
repz
mov
leave
xor
loope
ret
fdiv
outsl
loop
gs
adc
fnstcw
lods
pop
push
pop
pusha
mov
lods
inc
fidivrl
mov
lret
mov
leave
cmp
jp
pop
sarb
test
inc
es
xor
xor
cmp
nop
xchg
lret
dec
insl
dec
xor
test
sub
push
fsub
fcoms
mov
push
fs
xchg
xor
syscall
mov
leave
nop
incb
cmp
push
test
jmp
mov
lods
push
lahf
pop
adc
mov
sbb
fwait
call
sbb
enter
cmp
test
sub
jl
mov
mov
add
mov
fdivl
add
pusha
test
mov
adc
nop
and
dec
inc
lcall
lret
push
adc
or
xchg
imul
int
and
inc
mov
sbb
nop
xchg
ja
aam
push
shll
add
add
shll
sahf
fs
sub
xor
pop
push
add
jl
or
mov
sahf
test
and
dec
sub
xchg
movsl
jle
jmp
out
mov
dec
mov
xchg
ljmp
xchg
sub
loop
add
pop
mov
dec
pop
subl
aad
jge
add
mov
cmp
dec
mov
outsl
add
sub
leave
adc
push
cmp
mov
ljmp
mov
popf
popa
cmp
adcl
mov
into
sub
jns
mov
pop
xchg
push
shrb
in
xor
mov
push
pop
int
cmp
or
xor
out
sbb
xor
push
test
push
int3
and
ss
xor
js
jo
sub
pusha
push
adc
mov
aad
mov
mov
sbb
test
mov
or
aam
jns
je
adc
aaa
lock
cmpsl
mov
jnp
adc
loop
lret
or
fnsave
popl
jne
shlb
push
imul
xchg
ljmp
stos
mov
out
mov
in
inc
clc
push
dec
notb
arpl
and
popf
xor
pop
cs
call
subb
push
clc
enter
loopne
xchg
ljmp
mov
bound
jmp
test
push
out
test
sub
lds
ds
push
scas
and
sub
cld
mov
pop
xor
or
add
xor
push
and
cmp
lods
sub
fcompl
dec
shlb
push
cvtps2pd
clc
ds
orb
jnp
jno
out
add
sbb
outsb
lock
add
sub
or
xchg
inc
repz
es
les
loopne
faddl
jbe
std
inc
mov
out
jmp
int
dec
xchg
ja
inc
adc
bound
mov
decb
push
mov
xchg
mov
xor
mov
push
jp
sbb
add
add
fwait
mov
in
mov
jmp
pop
push
sub
insb
or
fwait
jnp
mov
stc
imul
inc
mulb
inc
mov
cmp
xchg
flds
pop
pop
fmull
loope
inc
aam
mov
sahf
int
movsb
data16
ljmp
neg
pop
insl
repnz
push
mov
out
cmp
jbe
add
push
cwtl
test
cmpsl
xor
push
out
adc
cmc
mov
xchg
rolb
sbb
insl
cmp
scas
sub
loope
pusha
inc
fnstcw
jge
lock
ja
lgs
enter
xchg
mov
xchg
push
ds
jl
sub
push
jnp
and
in
fs
pop
xchg
xor
ret
inc
in
js
mov
sbb
fstps
xlat
les
mov
mov
dec
dec
jno
dec
roll
xor
pop
arpl
mov
xchg
xor
adcl
leave
xor
sbb
adc
ljmp
test
loop
or
insl
int
repz
int3
stos
movsb
sub
imul
and
or
sbb
aam
xchg
hlt
fs
repz
clc
insl
sub
add
pop
stos
mov
out
lea
ljmp
sub
lret
rcl
movl
pop
nop
dec
push
cmp
xor
jns
out
cltd
push
lret
cld
xchg
xchg
add
push
lahf
cmp
popa
insl
pushf
inc
daa
fwait
sbb
push
ret
mov
mov
test
icebp
ljmp
adc
andb
xchg
pop
into
push
xchg
sbb
add
xchg
or
lret
aas
hlt
sub
lahf
nop
loop
jl
pop
mov
or
mov
push
push
in
cltd
cltd
dec
sub
push
jl
adc
adc
out
push
mov
sub
bound
sbb
push
lea
mov
out
lds
mov
arpl
je
loope
pop
out
lret
push
jecxz
sub
xchg
enter
loopne
jbe
adc
and
xchg
in
mov
and
daa
xchg
jmp
outsl
pop
dec
add
andb
mov
leave
pop
xchg
push
imul
scas
int3
cs
psubusw
add
xor
cmp
fists
jo
xor
jg
pop
push
shr
jge
inc
pop
xchg
mov
mov
jae
idivl
mov
mov
and
hlt
xor
call
pop
ret
leave
stos
mov
shll
dec
inc
pop
inc
stc
outsl
daa
or
or
dec
dec
cld
int
fucomp
add
mov
xchg
movsl
aam
or
outsl
lahf
mov
jmp
cmp
das
and
jnp
test
roll
dec
jmp
iret
pop
lahf
mov
ja
mov
xor
fwait
mov
in
sbbl
pop
leave
cmp
insl
leave
xchg
repnz
icebp
fstpt
xlat
xor
jmp
cltd
pop
push
mov
push
icebp
aam
sbb
sbb
xor
pop
call
dec
push
jmp
fistpl
push
pusha
sub
adc
das
xchg
mov
sub
lcall
sbb
add
sub
cltd
sub
arpl
daa
nop
sbb
inc
mov
adc
lock
in
jns
inc
mov
jmp
andb
lea
mov
rorb
xchg
imul
adc
jne
inc
aam
xchg
pop
mov
lods
and
jp
xlat
and
add
test
in
adc
out
dec
out
jl
push
inc
outsl
inc
xchg
jae
push
imul
mov
nop
add
pop
aad
hlt
inc
xchg
rclb
xchg
out
add
out
iret
icebp
into
fistl
or
arpl
cmp
inc
xchg
mov
sub
cmp
cmc
xor
subl
xor
outsb
dec
lods
jns
fs
int
xchg
bt
dec
aam
adc
cvtpi2ps
sbbl
lcall
shll
leave
mov
jne
push
fwait
add
adc
out
dec
adc
pop
xor
loop
es
mov
xor
int3
mov
sbb
ljmp
sar
js
rclb
jmp
push
push
outsl
out
dec
andb
movsb
iret
push
aad
movsl
std
and
jbe
push
out
inc
movsl
std
loope
mov
pop
xlat
in
jns
jno
mov
sub
ret
rorb
mov
adc
sbb
pushf
mov
rcrb
inc
lods
xchg
std
xor
sarl
in
insl
mov
jle
ja
lods
cli
arpl
push
lcall
push
mov
int3
fcoms
lock
push
or
adc
ljmp
dec
mov
sahf
stos
negl
mov
sbb
xchg
add
xor
loop
pop
or
and
je
mov
or
dec
lods
sahf
scas
ret
push
ret
scas
mov
cmp
mov
int3
pop
sti
repnz
lcall
add
dec
push
xchg
xchg
call
xor
and
insb
push
int
das
jno
or
or
inc
jb
jle
mov
inc
out
and
pop
jae
pop
daa
mov
into
mov
cmp
pop
inc
in
lds
fs
clc
jb
push
inc
shlb
cltd
addl
xchg
jp
mov
mov
xor
dec
lds
jnp
fstl
std
hlt
add
pop
jne
popa
js
xchg
mov
scas
cmp
push
cli
sti
jnp
aas
scas
outsb
fs
dec
inc
push
adc
stos
mov
lret
nop
pushf
sub
fs
pop
das
leave
mov
incb
xlat
into
int
mov
sub
pop
test
xchg
inc
test
pop
scas
lahf
ja
insb
loop
mov
mov
loope
int3
xchg
push
out
cltd
shrb
mov
sub
jl,pt
mov
arpl
fildl
ds
or
inc
and
mov
xor
mov
es
arpl
gs
cmp
hlt
outsb
pop
mov
rorl
adc
shl
mov
inc
mov
cmp
aam
lds
adc
rcrl
inc
inc
xchg
nop
push
mov
popa
xor
or
mov
lcall
in
or
adc
adc
push
shlb
repnz
inc
cmp
popa
out
cwtl
adc
out
push
xchg
repnz
xlat
sbb
pop
push
xchg
pop
fcomps
pop
mov
lret
xor
lahf
mov
test
popl
ja
lahf
mov
jne
in
push
in
dec
lcall
or
xchg
out
icebp
es
rcrl
out
sub
xor
aas
or
cwtl
mov
cwtl
or
mov
push
js
jns
out
mov
dec
dec
pop
or
sahf
jbe
fs
sbb
jbe
xor
and
mov
std
test
stos
loop
in
inc
and
popa
push
ret
stos
add
adcb
testb
imul
loop
jle
nop
mov
les
inc
fwait
imul
sub
pusha
and
clc
inc
rcrl
push
sti
cmp
movl
sbb
mov
dec
xchg
and
jmp
test
xchg
cmp
sub
imul
mov
or
mov
and
sti
daa
jmp
sub
lock
xchg
std
push
lret
movsb
mov
cmpsb
cmpsb
push
sub
mov
aad
jbe
and
test
fbld
iret
repz
xor
aad
cmpl
dec
or
pop
xor
and
and
mov
dec
or
jmp
add
adc
sub
dec
cltd
xchg
popf
shlb
frstor
push
mov
xor
out
and
jbe
shrl
dec
shlb
sarl
mov
mov
or
je
lods
mov
mov
jp
adc
rolb
sbb
cwtl
fcoml
hlt
inc
xchg
aas
rclb
fwait
sub
std
inc
jmp
and
xor
xchg
sub
mov
lcall
xor
loope
xor
sbb
aaa
aaa
ror
fdivrl
stc
fisttps
pop
lcall
sbbl
push
aam
outsb
out
movsb
ficomps
inc
out
adc
in
adc
push
jns
cmp
pop
add
stos
jne
aaa
idivb
lds
push
insl
push
fs
xchg
fs
rcrl
mov
jl
pusha
rcrl
mov
cli
movsl
push
stos
test
pop
addr16
push
dec
adc
ljmp
fldz
pushf
aam
icebp
outsb
shl
test
xchg
testb
ficoml
clc
call
mov
cmpsb
sub
bswap
and
cmp
filds
shlb
xchg
mov
xchg
push
pop
je
loopne
clc
in
xchg
and
xchg
int3
push
pop
lds
mov
or
xchg
mov
cmp
xchg
and
sbb
repz
xor
iret
in
pop
lret
bound
sbb
xchg
rorl
add
imul
push
mov
add
outsl
push
rcl
cmpsl
rcrl
xchg
mov
clc
mull
xchg
pop
cmpsb
xor
popf
mov
mov
test
or
lock
outsl
dec
push
js
sub
lods
cmp
cwtl
dec
and
mov
sbb
xchg
insl
jp
subb
push
pop
jnp
iret
add
sbb
cmp
or
pop
jno
mov
testb
shlb
adc
xadd
xchg
mov
lahf
pop
out
xor
inc
jns
pop
insb
test
jle
mov
aaa
push
and
aas
inc
mov
push
dec
dec
xchg
xor
xorb
push
lock
xor
lret
ds
repnz
out
fsub
or
cld
xor
adc
jb
pop
in
xor
sbb
repz
push
fisubrs
cmp
push
dec
sub
push
icebp
leave
sbb
pop
cld
xchg
orb
cmp
dec
sub
dec
jae
setle
sarb
std
push
std
pop
into
int
xchg
mov
mov
push
data16
sub
loop
pushf
out
adc
dec
and
repz
xchg
out
iret
mov
arpl
cmp
out
xchg
mov
loopne
or
sbb
mov
int3
push
inc
stos
xchg
cmp
cmp
daa
jge
out
or
mov
fldenv
pop
and
adc
in
and
js
jae
inc
cltd
stos
das
cmp
cld
pop
cmpb
cmp
into
fwait
mov
cmpsl
lods
sub
xchg
and
xchg
sbb
and
push
rol
fcoml
xor
gs
shll
outsb
imul
xor
xchg
sub
push
lea
addl
mov
das
arpl
inc
xor
pop
out
in
dec
and
sahf
jp
pop
andb
aaa
arpl
nop
pushf
fistpl
push
inc
jnp
popf
leave
inc
ss
xchg
inc
pop
xchg
push
gs
jns
ja
clc
ljmp
push
shr
scas
in
xor
insb
inc
aam
sbb
dec
stc
mov
mov
adc
scas
not
dec
gs
jns
push
sti
mov
loopne
test
inc
sbb
lcall
leave
adc
pop
cltd
imul
cmp
pop
neg
shll
mov
popf
shlb
lea
sbb
mov
xchg
movsb
rclb
mov
sbb
daa
push
addr16
imul
out
pop
mov
movsb
xchg
jb
test
and
fdivrl
jecxz
inc
dec
xor
ret
push
or
std
mov
pop
lret
out
popa
ljmp
adcb
mov
sbbl
scas
push
or
ret
mov
inc
mov
dec
cmpsb
outsb
fcomps
jmp
and
inc
cs
rorb
outsb
inc
repz
enter
lock
xchg
stos
xchg
xchg
andl
jge
jnp
jo
jmp
xchg
out
cmp
pop
es
xor
or
pop
daa
or
cmp
push
loopne
mov
int3
add
imull
sar
sub
xor
mov
mov
in
jne
aaa
clc
pop
inc
pop
shll
mov
and
stos
and
sahf
sub
mov
and
xor
xor
or
lds
insb
adc
lcall
in
jecxz
mov
filds
pop
stos
scas
out
xor
adc
fcompl
inc
dec
shll
sub
mov
fdivp
rolb
xlat
cmp
adc
cld
das
roll
test
jb
jmp
jp
out
inc
mov
xor
js
pushf
cmc
popf
jbe
mov
inc
pop
rolb
cld
test
sti
test
es
repnz
xchg
ss
cwtl
lahf
fisttpll
pop
push
pop
test
out
cmc
sbb
push
gs
mov
mov
or
addr16
cmp
cmp
inc
adc
inc
ja
inc
pop
sbb
inc
fldcw
testl
cs
jmp
and
cwtl
xchg
add
lcall
jle
lahf
xchg
movsw
sub
test
ja
dec
xchg
or
jns
scas
insl
or
cs
int3
xchg
inc
mov
mov
pop
xchg
mov
jo
jge
sub
mov
xchg
sub
add
loopne
test
and
sub
adc
and
js
mov
dec
add
push
jge
loop
jno
cmpsb
cli
xchg
add
fwait
or
mov
je
iret
lock
movsb
push
mov
in
in
jne
fisubs
bound
insl
lods
adc
std
pop
pop
inc
and
push
pop
jmp
movlhps
push
and
push
outsl
ja
clc
add
lret
cmp
pop
jge
call
xchg
popa
lods
and
aam
mov
pop
jmp
push
and
dec
in
add
and
adc
jg
push
into
movsb
aas
jb
pop
pop
into
das
jmp
xlat
hlt
sahf
cmp
into
cltd
ljmp
sub
dec
cli
push
xor
mov
rcrb
cmpsl
fmuls
push
cwtl
ljmp
mov
lret
pop
std
sbb
repnz
dec
or
sbb
xlat
mov
popa
repz
adc
jp
dec
mov
faddl
sub
mov
xor
lcall
int
push
pop
mov
cmp
xchg
inc
mov
push
push
sub
jbe
leave
jb
mov
imul
pop
ds
mov
in
push
icebp
pop
push
sub
movsb
mov
jbe
inc
add
test
and
lods
xchg
stos
sbb
out
pop
addr16
adc
or
cmc
pusha
jle
cmpl
jbe
leave
mov
inc
lock
cmp
lock
out
jp
in
cmp
sub
pop
mov
aam
jne
xor
dec
cmpsb
sbbb
je
mov
inc
mov
dec
fwait
addl
stos
es
in
fldl
add
jp
icebp
adc
int
scas
movsl
push
mov
xchg
pop
pop
jno
test
js
lds
lcall
fmuls
xor
xor
fnstenv
sarl
sub
and
negl
jo
data16
cmc
add
mov
sub
nop
add
out
mov
cmp
mov
xor
lcall
xor
popf
or
cmc
mov
jno
mov
pop
jl
adc
sub
int3
push
jb
or
lods
insl
jmp
fcoml
pop
ja
inc
jmp
pop
dec
mov
push
into
inc
mov
sbb
or
mov
xor
xchg
pop
mov
mov
mov
les
or
outsl
imul
cmpsl
loope
movsb
data16
cmp
ss
or
sbb
and
inc
jp
and
push
int
fucom
xchg
mov
lods
ror
mov
pushf
jle
sbb
aad
mov
inc
das
mov
ret
out
mov
int3
mov
jno
xor
fdivrl
hlt
and
pop
addb
movsl
sbb
adc
sub
cltd
dec
pop
int3
mov
in
js
lods
xchg
cmpsl
leave
inc
mov
jl
xlat
push
xlat
adc
pusha
or
in
fbstp
insl
cmc
dec
sub
pop
movsb
shll
lret
pop
mov
rolb
sbb
loopne
or
jbe
sub
imul
cmp
inc
fmull
fsubrs
mov
dec
push
scas
call
inc
ss
je
push
inc
fistpll
push
aaa
arpl
xlat
add
pop
inc
jo
jl
aam
and
jo
jne
popa
xor
addl
std
jl
data16
mov
jmp
push
dec
mov
insl
push
mov
and
add
popf
cmp
lret
adc
bound
and
call
in
push
int
add
aam
or
imul
out
das
arpl
pop
jp
test
sbb
fisttpl
leave
bound
ss
inc
jg
cmp
testb
add
mov
aaa
int3
add
inc
jns
add
pop
les
and
popf
fs
mov
out
push
cmpsb
test
or
addr16
sub
jle
jbe
add
enter
call
repz
fs
test
dec
mov
test
test
or
adc
fs
mov
test
xor
scas
clc
push
cmp
inc
movsb
push
pop
cmp
cs
or
arpl
dec
lcall
sbb
push
mov
jns
mov
sbb
jae
or
push
loope
jb
push
push
into
dec
mov
popf
and
movsl
adc
mov
add
lcall
mov
imul
loop
leave
push
or
and
jne
jmp
jg
mov
mov
stos
jns
sub
xor
cmp
sbb
mov
pop
fucomp
out
mov
sbb
cmp
aaa
mov
adc
pop
clc
sar
inc
les
pop
dec
rcrl
das
cltd
sub
enter
jns
mov
inc
insw
addr16
mov
sub
or
jge
int
cli
pop
cli
ds
out
push
mov
inc
fnstcw
and
pop
and
sbb
push
mov
xor
mov
xchg
fiaddl
add
mov
aad
add
leave
cwtl
jnp
cmpsb
aam
jb
mov
cli
pop
xchg
insl
in
outsl
mov
inc
shl
in
test
in
add
lcall
cwtl
push
pop
nop
loopne
rcrl
test
lahf
lahf
add
inc
int
push
push
fildll
xor
fmull
inc
loopne
in
xchg
xorb
mov
xor
mov
mov
inc
test
mov
push
sbb
or
xchg
push
sub
xor
imul
stc
cmp
add
xor
dec
shll
sti
xor
ret
mov
and
insb
sub
loopne
push
mov
mov
fwait
gs
push
push
mov
push
mov
xor
and
xor
flds
test
inc
popf
xchg
cmc
popa
ret
dec
add
jns
cmp
push
pusha
pop
addb
cmc
leave
rcrl
fisttpl
push
sub
push
fidivrl
std
insl
fidivs
aaa
add
add
call
in
or
insb
mov
mov
in
dec
xchg
repnz
lret
mov
pop
pop
int3
mov
cmpsl
xor
mov
gs
int
int3
sbbb
sahf
or
pop
push
inc
jmp
push
jo
sbb
pop
adc
mov
imul
xchg
sub
push
lea
mov
pop
ljmp
mov
mov
xchg
lea
outsb
jecxz
fsubs
cld
mov
inc
and
lahf
mov
cli
or
imulb
aaa
mov
inc
in
cmp
call
es
fdiv
inc
and
push
adc
mov
cmp
inc
inc
or
mov
iret
sub
pop
fwait
push
fwait
clc
push
in
jnp
xchg
inc
call
xchg
ljmp
mov
add
cltd
sbb
adc
in
out
jmp
faddp
sahf
sbb
pop
sbb
sub
cmp
jmp
dec
adc
pop
fcoms
cs
mov
pop
stos
sbbb
jnp
mov
adc
sahf
add
std
sbb
pop
sub
add
popf
mov
sub
or
pop
jns
mov
xor
scas
inc
aaa
xor
es
aam
shll
popf
aaa
outsl
shll
pusha
fs
sar
pusha
mov
rolb
and
mov
sub
and
leave
cwtl
into
add
inc
insl
pushf
imul
sbb
jae
cmpl
xchg
iret
ror
sbb
out
in
and
push
and
mov
and
xor
mov
leave
add
adc
inc
ret
adc
int
stc
push
pusha
js
push
out
mov
push
or
inc
clc
shr
cltd
insb
sub
shl
insl
push
cli
hlt
mov
jmp
dec
jno
dec
loopne
xchg
in
imul
xor
sub
leave
mov
lcall
nop
add
sub
and
pop
loope
into
outsl
sahf
clc
scas
mov
ja
addr16
cmpsb
mov
popa
sub
pushf
mov
repnz
push
add
inc
int3
testb
inc
stos
push
cwtl
and
and
outsb
or
xor
xchg
mov
insl
test
sub
fwait
test
pop
inc
je
roll
inc
lock
sub
js
xchg
sar
lods
loop
push
nop
sub
and
lcall
push
arpl
push
fs
xchg
pop
in
call
jecxz
and
or
iret
mov
and
dec
pop
pop
fidivrl
adc
ret
stos
mov
stos
popa
out
jne
or
scas
mov
or
inc
cmpsl
push
jle
sub
xor
out
sub
push
divl
add
in
sbb
pop
jg
pop
lahf
jb
cmp
jnp
arpl
jno
and
lock
jno
js
lods
loopne
mov
push
out
leave
sbb
mov
push
mov
lret
inc
andb
lret
test
pop
mov
outsb
and
add
mov
into
bound
xchg
aad
vpaddusb
push
sbb
dec
xlat
addr16
out
jmp
push
data16
sub
xor
dec
jbe
lods
sti
dec
add
adc
mov
sbbl
xor
sbb
inc
lock
and
sub
lds
test
jl
daa
push
out
data16
inc
cmp
mov
fidivrl
pop
lret
or
xchg
addr16
cmpsl
push
push
in
sti
std
cli
out
stos
outsb
push
nop
out
and
jns
jb
sbb
test
sbb
mov
pop
push
cmp
inc
popf
dec
lret
sbbb
adc
or
notl
lret
mov
cwtl
pop
cs
pop
mov
jl
rorb
sub
stos
pop
pushf
je
pop
mov
push
rorl
rorb
sub
dec
adcl
fistpll
pop
or
loope
fidivrs
loopne
ss
pushf
cwtl
int
or
clc
push
lods
inc
cld
fldcw
pop
jmp
xchg
ret
dec
in
testl
frstor
aam
xor
in
pusha
cmp
es
arpl
cmp
cld
xchg
lods
imul
mov
js
push
mov
cmp
shlb
cmp
jb
sub
mov
cmp
cmp
cmpsl
mov
insb
ljmp
xor
mov
sub
jnp
mov
fdivl
pop
xchg
push
out
imul
lods
arpl
cmpsb
mov
xlat
cltd
std
sub
icebp
lods
outsl
adc
push
test
lahf
sub
xchg
arpl
cmp
mov
or
fiadds
sti
arpl
mov
in
rcll
mov
dec
xchg
mov
out
fucomp
mov
fdivrs
ljmp
stos
fs
in
or
cwtl
shr
jl
xchg
ret
push
ficompl
push
loopne
xchg
dec
cmpsb
xchg
mov
mov
jns,pt
xchg
out
scas
mov
icebp
lret
sub
or
cltd
mov
imul
imul
jb
pusha
outsl
sbb
pop
lret
mov
jb
sub
xchg
loope
dec
dec
mov
sub
or
inc
mov
mov
pop
xchg
mov
pop
and
loop
lret
mov
add
push
jb
sarl
or
mov
push
pop
jge
mov
cmp
sbb
fbld
dec
jecxz
repz
pop
sub
xchg
dec
sub
jno
pop
scas
movsl
cli
rcrl
insb
add
xchg
mov
sub
popf
js
and
insb
lock
out
test
or
scas
jmp
lcall
out
es
mov
in
call
and
sub
fistpll
je
sub
jmp
push
xchg
and
loopne
adc
adc
fimull
push
mov
gs
and
inc
fdivrl
adc
xchg
ret
pop
adc
mov
push
jb
dec
outsb
or
enter
insl
lcall
mov
scas
sub
add
mov
fld
sahf
and
sub
pop
hlt
sbb
mov
lret
ret
out
mov
gs
rorb
xchg
xor
xor
push
or
or
out
jne
or
or
jne
add
mov
pop
fcmovnbe
jmp
adc
pop
add
mov
ret
cmp
dec
push
add
and
mov
rorb
stos
jge
icebp
push
out
cmc
test
adc
fisubl
adc
lcall
mov
dec
ret
orl
ret
pop
cltd
mov
inc
cwtl
ds
shlb
dec
mov
ja
xchg
jae
rcrl
sbb
cmpl
aaa
lret
xchg
cld
imul
out
pop
loopne
dec
test
cltd
mov
jl
rorl
outsb
sub
fimuls
fmuls
jne
je
and
or
or
stos
cmp
scas
pop
hlt
inc
sub
test
lods
and
in
jecxz
jbe
add
adc
xchg
in
sub
in
test
cli
push
mov
sbb
rcrl
out
pop
pop
ror
xchg
adc
lret
xchg
mov
out
nop
ja
cmpsl
or
push
movsl
adc
jb
outsl
and
sub
fs
or
or
jg
lods
stc
adc
mov
je
and
dec
rorl
xchg
dec
jbe
mov
jp
scas
or
pushf
lds
mov
push
push
push
sbb
dec
icebp
ss
jb
jmp
out
cmp
xchg
enter
push
pop
hlt
sbb
pop
mov
clc
ljmp
aam
xchg
nop
push
and
push
inc
adc
imul
sbb
jp
sub
insl
jge
mov
out
jecxz
jle
mov
and
in
lock
cmp
test
xchg
test
mov
xchg
jmp
mov
pop
mov
stos
les
push
push
push
and
shl
jnp
xchg
insb
xor
jo
rorl
xor
nop
lods
in
push
int
or
fildl
lods
into
gs
xlat
add
sub
inc
fsubl
mov
les
scas
inc
and
cli
mov
imul
xchg
xor
mov
into
cmc
inc
imul
jno
ja
and
or
cmpsb
jo
mov
pop
movb
in
fcmovne
loope
clc
cmc
push
std
lret
inc
jo
and
inc
punpckldq
andl
and
iret
add
call
in
loop
cmpsl
xor
hlt
jnp
push
insl
xor
xor
neg
mov
xor
shrl
or
repz
adc
int
popf
xorl
dec
or
loop
and
popa
addl
int
pop
sbb
or
lea
cmp
jle
lds
and
test
or
lods
rorb
cmpsb
out
xchg
adc
ljmp
sarb
dec
adc
adc
sbb
cmp
sub
jp
testb
hlt
iret
js
add
add
pushf
popf
adc
xor
in
jae
cmp
insl
shlb
xchg
fsub
popa
fdiv
or
mov
jmp
mov
cmp
neg
lcall
mov
pop
ljmp
push
or
loopne
pop
push
cltd
cmpsb
xor
mov
incb
and
mov
imul
add
jns
sbb
or
ds
adc
jne
push
mov
inc
pop
xchg
add
xchg
add
cwtl
and
nop
dec
inc
pop
jne
pop
xchg
in
push
rol
dec
xchg
mov
jmp
test
std
cmp
jne
repz
mov
ss
cmp
cs
jbe
mov
xchg
pop
dec
pop
lcall
add
push
enter
fisubrs
cwtl
jo
add
dec
test
mov
sub
xor
out
mov
lret
sahf
adc
dec
hlt
jle
rcr
mov
xchg
adc
inc
fbld
mov
xchg
gs
push
sar
imul
push
cmp
mov
fists
data16
and
stos
lea
push
mov
xchg
mov
and
adc
mov
xor
ss
les
mov
sbb
std
outsl
cli
scas
movsl
mov
in
jne
fadds
pop
push
inc
mov
xchg
pop
in
adc
popf
insb
and
xor
pop
or
xchg
rsm
and
cltd
mov
fnstcw
orl
lahf
shrb
pop
fcomip
push
stos
gs
mov
pop
dec
sub
insl
pop
push
cld
lods
push
xchg
in
inc
int3
sbb
in
lock
lea
jbe
ss
es
pop
loop
bound
movsl
xchg
call
popf
ja
mov
and
repnz
cmp
cltd
mov
add
iret
cmp
lret
out
mov
jno
loop
es
jnp
inc
mov
fistpl
daa
and
mov
aad
pop
dec
das
jg
jnp
cld
nop
cmp
test
xor
cmpsl
mov
push
pop
push
lock
xlat
imull
leave
push
mov
or
sti
adc
dec
jae
ret
push
jo
push
xor
xchg
fisttpl
mov
adc
loopne
inc
push
jb
scas
mov
mov
jne
mov
xor
pop
push
aaa
and
aad
adc
lret
cmpsl
adc
pop
repz
mov
js
pop
dec
push
ficoms
push
lods
jp
jmp
shll
jecxz
daa
insb
stos
sbb
or
dec
aad
ja
mov
jae
test
mov
inc
inc
sbb
sti
jb
jcxz
and
jle
add
add
sbb
dec
or
push
pop
test
jns
fisttpll
jecxz
inc
sub
pop
mov
mov
push
loopne
inc
add
adc
fs
into
xor
outsb
outsb
push
xor
movsb
jb
dec
ficoms
ss
out
mov
gs
arpl
mov
lea
adc
psrlw
in
pop
xlat
sahf
mov
rol
sub
div
pop
mov
pop
movsb
sbb
pop
push
je
roll
sarl
adc
adc
push
mov
jmp
lret
aam
push
jg
aam
mov
mov
push
lahf
hlt
test
out
and
lods
stos
jp
xchg
sub
lods
gs
xor
push
adc
or
jae
adc
jecxz
test
adc
roll
inc
xor
pop
mov
incl
or
and
xor
and
stos
mov
mov
ds
rorl
mov
shr
dec
add
ljmp
mov
aam
cld
pusha
sub
fsts
shlb
push
push
jle
xchg
xchg
pop
mov
xchg
rcr
cli
dec
aad
movsb
mov
repz
sti
aaa
clc
xor
outsl
mov
xorb
movb
dec
adc
jne
mov
cmp
or
jb
stc
popf
cli
test
lret
mov
inc
nop
sub
mov
xchg
iret
pusha
mov
fcmove
ja
or
rep
daa
xchg
mov
pop
pop
shlb
test
daa
and
cwtl
dec
dec
xchg
pop
add
sub
fcoml
adc
stos
xchg
ja
aad
mov
sbb
pop
ja
ror
pushf
aam
mov
jp
out
in
dec
xchg
gs
aaa
pop
test
mov
test
or
loope
je
cltd
inc
pop
rcrl
ja
pop
aas
testl
xor
inc
out
dec
or
iret
add
push
outsl
and
sbb
mov
bound
pop
int3
pop
imul
sbb
mov
or
loopne
clc
in
jns
mov
adc
fwait
push
imul
mov
cmp
std
fdivp
fwait
jnp
xchg
call
push
push
fiadds
repz
lds
lret
bound
loopne
pop
xchg
in
mov
fsubp
xchg
stos
stos
inc
jne
mov
mov
add
repnz
cmc
hlt
xor
test
or
fildll
adc
addl
mov
push
popa
mov
cmp
mov
or
mov
mov
lahf
add
fs
xchg
fcoms
scas
xchg
sub
sbb
push
out
xchg
cltd
push
and
mov
cmp
sub
ffree
ficoml
cmp
pop
and
out
and
call
loopne
inc
pop
mov
mov
add
mov
imull
push
iret
repz
mov
dec
fldenv
das
std
testb
dec
sbb
dec
mov
mov
mov
or
mov
mov
cmp
push
pop
sahf
pop
cmp
cmp
or
push
xor
pop
lcall
sbb
imul
xchg
arpl
nop
mov
dec
push
push
cmc
xor
xchg
mov
jl
push
lds
add
std
lods
inc
ficomps
cmp
xchg
mul
jecxz
or
mov
lret
inc
dec
lods
imul
loope
jp
xchg
imul
mov
rorl
mov
add
sahf
xor
movsl
fnstsw
inc
jns
mov
fwait
mov
xor
cmp
adc
into
cld
ret
push
add
sbb
mov
addl
mov
icebp
dec
cli
xchg
aas
dec
rep
icebp
repnz
push
adc
and
dec
and
mov
sub
sub
bound
negb
lods
stc
push
mov
fisubl
ljmp
cmp
cmp
add
jp
test
scas
lea
lahf
insb
shrl
xor
mov
int3
stc
sarl
ljmp
pop
mov
jmp
mov
jl
notb
fidivs
in
mov
lcall
jo
sarb
sub
xchg
pop
dec
push
mov
icebp
loope
das
add
imul
xor
arpl
dec
loopne
test
es
cli
pop
ss
mov
fsubrl
cmp
stc
mov
sarb
test
lcall
mov
mov
pop
bound
and
mov
add
cmpsb
leave
jne
add
jo
add
insb
mov
scas
shlb
mov
cmpl
xor
add
jae
cltd
mov
pop
es
or
inc
mov
pushf
xchg
mov
arpl
adc
aad
xor
out
xchg
subl
test
xor
inc
into
inc
or
clc
icebp
and
sub
or
clc
scas
test
sub
push
add
loopne
pop
cmp
dec
into
flds
push
push
mov
xchg
push
cli
rorl
outsb
push
subl
lret
lret
push
sbb
mov
xchg
and
cmp
mov
cmp
inc
repnz
ret
pusha
popa
mov
je
movsl
mov
lods
scas
push
jns
mov
push
adc
pushf
gs
andb
sub
push
pop
xchg
lahf
mov
popf
shrb
inc
jecxz
into
push
clc
enter
repnz
dec
pop
scas
int3
lds
sub
mov
sbb
and
fisttpl
add
arpl
jp
aam
jno
outsb
pop
push
pop
data16
inc
xchg
shlb
ds
and
push
outsb
push
test
push
into
push
cltd
mov
mov
int3
fstps
fstl
inc
mov
push
jg
sar
repnz
cmp
xchg
fistps
push
movsl
pop
mov
push
cld
pop
mov
xor
xor
neg
sbb
popa
dec
or
sub
push
je,pn
xchg
xchg
dec
dec
push
lock
fists
enter
pop
mov
jno
out
test
fistpl
mov
add
cmp
stos
dec
jb
movsb
ficoml
jb
nop
dec
push
stc
or
test
xor
cmp
lret
mov
xlat
fstpt
fwait
mov
xchg
stos
push
mov
call
fcomps
enter
xor
pop
pop
or
push
fildll
mov
ficomps
aaa
aad
mov
sub
or
jo
jg
mov
mov
mov
and
mov
popa
xchg
aad
and
xchg
push
add
mov
sti
movsl
out
cmp
mov
mov
lea
dec
ss
push
test
andb
pop
mov
lods
or
shll
insl
ret
pushf
aad
pop
or
ljmp
xor
rol
aaa
aad
sbbl
sub
push
imul
test
and
cmp
ficompl
xchg
lds
imul
lea
imul
xor
mov
adc
insl
imul
sti
xchg
in
pop
loope
xchg
shl
jbe
xchg
xor
inc
pushl
dec
or
cmp
scas
hlt
cmp
sbb
and
in
push
xor
inc
push
inc
scas
adc
cmp
push
cmpsl
das
pop
test
test
int3
mov
icebp
lret
jmp
sbb
stos
push
adc
movsb
mov
cld
jg
xor
loope
xor
inc
push
pop
adc
movsl
mov
mov
dec
fisubs
mov
shl
daa
hlt
gs
aaa
shll
and
cs
jmp
clc
inc
sbb
rcr
inc
cmp
sbb
f2xm1
mov
cmp
rorl
sub
movsl
scas
dec
lret
addb
clc
fld
sub
and
mov
shl
enter
leave
loope
cmp
mov
push
dec
cltd
sbb
iret
add
aaa
test
ret
cwtl
dec
xlat
inc
shl
stos
and
mov
test
jle
popa
xor
pop
in
jne
pop
adc
add
pop
call
mov
xor
xor
xor
popa
into
mov
pop
scas
push
xor
fdivrl
test
sub
jns
dec
mov
sbb
sub
ret
scas
outsb
cmp
add
sub
lret
pop
xchg
pushf
les
xchg
mov
mov
dec
add
stc
pop
mov
imul
int3
out
push
dec
inc
sbb
xchg
mov
pop
push
pop
loope
outsb
mov
or
jl
enter
icebp
pop
aam
mov
push
add
and
xchg
arpl
movsb
in
push
pushf
frstor
jle
and
ljmp
sbb
dec
adc
push
fnsave
push
rcl
imul
in
mov
shl
sub
outsl
nop
jnp
pop
arpl
mov
in
fadds
and
xor
leave
cmp
inc
xchg
jmp
xlat
shl
call
daa
dec
data16
pop
xor
dec
xlat
adc
dec
cmp
dec
mov
sti
pop
rcrl
sub
addr16
mov
pop
popf
add
scas
imul
xchg
popa
sbb
xor
sbb
fwait
inc
xchg
xchg
rcr
jle
aas
pop
data16
jnp
xor
jecxz
out
or
daa
cli
add
cli
fstpt
fdivs
add
push
push
xor
arpl
sub
out
push
daa
pop
sarb
mov
insb
inc
jb
push
add
mov
sub
subb
jno
lahf
pop
pop
and
xchg
dec
sti
dec
adc
rcll
ss
aad
cmp
frstor
xchg
stos
lret
cmc
xor
mov
add
imul
fstpt
addb
jg
xor
push
addr16
pop
jg
sbbb
aam
push
movsb
popf
push
add
jl
movlps
adc
loop
add
dec
sub
sbb
sbbw
loope
dec
mov
pop
add
lret
xchg
pop
and
xlat
adc
push
pop
movsl
rolb
xchg
mov
std
int
mov
rclb
mov
sti
sar
in
xchg
out
shrl
repz
iret
iret
pop
jge
les
clc
mov
adc
test
add
fstl
fisttpll
push
sub
mov
inc
cwtl
inc
pop
lods
out
cld
push
outsb
or
mov
xchg
jle
enter
inc
push
repz
inc
inc
xor
ds
fnstsw
dec
cmpb
ja
adc
and
ja
aad
fiadds
inc
test
clc
mov
clc
scas
sbb
push
dec
xchg
xor
mov
ret
sbb
ja
sub
fs
test
shll
and
cvttps2pi
lods
jne
fadd
or
pusha
mov
jo
repz
out
sub
lods
push
jne
jge
and
inc
ja
ret
stos
in
test
sahf
pop
cmp
cmp
jl
test
sbb
out
or
rcl
sbb
aad
std
and
jbe
daa
pop
rcl
ffree
or
movsl
data16
adc
fwait
shrl
je
fisttpl
adc
cmp
rcll
inc
mov
xor
push
orb
jno
mov
jge
sub
lret
lahf
js
xor
xor
push
mov
dec
je
int
popa
cmc
in
test
xor
dec
insb
mov
pop
fidivl
je
scas
xor
push
inc
xchg
pop
sbb
jp
pop
call
push
mov
mov
mov
adc
push
gs
push
lret
les
mov
jno
cmp
pushf
ja
push
in
in
out
sarl
fmulp
sub
aam
negb
push
sbb
stos
mov
push
inc
push
ret
and
cli
lcall
fwait
lds
sbb
sbb
loop
je
push
cltd
xor
xor
inc
jmp
aaa
jle
and
push
dec
and
dec
or
pushf
fadds
stc
xlat
pop
or
mov
mov
test
cmp
or
inc
push
pop
mov
pop
cmp
inc
mov
cmp
mov
dec
mov
mov
push
hlt
out
or
or
in
xchg
mov
adc
and
inc
dec
pop
cmp
inc
aam
dec
or
icebp
inc
inc
mov
ljmp
cmp
shl
scas
mov
mov
add
loopne
inc
iret
and
xor
jnp
fistl
xor
adc
stc
sbb
aaa
lods
adc
mov
cmpsb
and
add
mov
mov
jo
repz
daa
dec
cmp
add
push
push
and
push
sub
gs
das
mov
imull
mov
push
adc
push
or
mov
js
mov
gs
sbb
jnp
mov
adc
mov
in
xchg
cli
xchg
mov
fnstenv
stos
dec
xchg
insl
in
leave
ds
pop
xlat
mov
movaps
mov
into
add
mov
mov
cmp
and
pop
and
nop
jb
aas
lret
xor
push
sub
xchg
and
outsl
pusha
xchg
in
stos
xor
popa
jmp
mov
jo
pop
mov
mov
cmpsb
data16
adc
mov
jl
loopne
outsb
std
sbb
int3
mov
sar
mov
pop
dec
push
jno
fistpll
imul
arpl
push
push
mov
fnstsw
lods
sbb
jmp
mov
fsubl
dec
push
dec
ja
pop
sahf
fsubrl
cltd
jp
xchg
std
push
mov
std
cmovb
in
movsb
mov
sahf
call
cmp
mov
or
xor
mov
sbb
ja
dec
scas
mov
js
notb
cmc
das
push
rorl
mov
dec
mov
push
in
push
adc
es
iret
xchg
xchg
push
clc
mov
push
popw
in
bnd
cmp
ret
out
xlat
push
xchg
mov
lds
rclb
hlt
mov
push
xchg
cmpsb
mov
test
pop
and
dec
push
xor
mov
inc
or
cmp
int3
adc
mov
jmp
movsb
mov
xchg
std
imul
sti
imul
dec
lock
adc
pop
mov
les
subl
cmp
adc
cmp
stos
insb
inc
call
mov
fcoms
cwtl
les
das
std
movsl
and
jno
fs
mov
sahf
scas
js
lahf
xor
jnp,pn
mov
and
in
pop
movsl
test
mov
pop
cmc
ret
sub
or
jns
in
and
stos
pushl
inc
mov
addr16
adc
out
push
xchg
mov
mov
mov
push
xchg
cmp
imul
inc
int
push
lret
jp
mov
push
je
pop
push
bound
popa
xor
mov
xor
inc
mov
xor
shrb
inc
les
xchg
inc
call
xchg
cmc
xor
int3
iret
call
jns
and
scas
sub
push
movsl
fwait
xor
and
mov
add
or
dec
mov
loopne
inc
pop
or
pop
mov
in
sub
adc
add
mov
scas
add
cltd
mov
dec
inc
inc
xorl
jae
add
inc
sti
icebp
jle
inc
push
mulb
sub
shr
mov
shl
daa
sbb
fsubrl
inc
mov
sbb
add
pop
mov
pop
andl
into
adc
test
inc
or
fistpll
cmp
push
pop
jl
jo
adc
xor
mov
sub
gs
cmp
stos
lods
or
vpsllw
sahf
rcr
aad
ss
jp
add
aaa
je
ss
fsub
ficoms
addb
mov
cmp
mov
bound
jp
sbb
add
stos
fbld
int
lock
dec
icebp
mov
outsl
cmc
cli
loopne
lea
mov
cltd
fisubrl
dec
or
dec
mov
loope
cmp
and
aad
stos
sub
adc
mov
rcrl
popa
aam
dec
mov
xchg
xchg
ret
add
inc
fldcw
jg
mov
in
daa
leave
push
icebp
inc
xor
adc
mov
mov
je
sbb
jecxz
jg
icebp
fldl
rol
jne
sub
lahf
jb
adc
pop
pop
loope
sahf
xorl
inc
lret
hlt
enter
xchg
push
iret
fcomps
fcomps
subb
mov
cmp
pop
jbe
and
dec
mov
sbb
push
shll
mov
stc
jo
xor
sub
js
sub
shrl
jmp
cltd
dec
stos
repz
xor
js
xchg
add
cltd
stos
pop
ret
cmp
push
repz
aaa
jo
cmpsl
adc
leave
arpl
push
in
jne
mov
lahf
mov
inc
cld
lret
pusha
clc
movsl
insl
test
aaa
dec
push
enter
out
fmull
mov
xchg
lock
sbb
lret
dec
inc
adc
push
mov
inc
sub
add
icebp
jp
xchg
daa
jb
jns,pn
out
mov
fcomp
mov
int3
cwtl
hlt
hlt
clc
clc
rolb
pop
addr16
arpl
ret
push
xchg
xlat
inc
stos
call
ud0
mov
cmpsb
pop
not
ljmp
dec
out
repz
push
xchg
fistpl
xchg
dec
jae
nop
dec
movsl
cmc
fisubs
jbe
ljmp
andb
movsl
call
ret
adc
pop
cmpsl
sub
stos
out
inc
cmp
sub
push
in
adc
inc
arpl
inc
xchg
mov
lods
mov
dec
push
mov
cmp
mov
gs
repnz
push
xchg
pop
std
cmpsl
inc
out
lods
and
rcl
and
jle
push
adc
cwtl
aam
or
lods
and
jmp
mov
bound
aaa
aaa
into
testl
cmp
push
test
test
mov
pop
ljmp
xlat
in
lods
dec
adc
out
dec
inc
mov
flds
fnstcw
jnp
mov
aad
loopne
add
test
push
fnstsw
cmp
pop
xchg
mov
and
es
cld
jae
stos
out
ret
pop
ds
mov
faddl
push
mov
xchg
sub
push
mov
mov
pop
adc
sbb
mov
nop
mov
push
lret
lock
adc
push
test
cmpsb
adc
xchg
movsl
inc
fwait
jb
ficoms
ja
cmp
cmpsb
sbb
les
jae
jge
xchg
sub
push
daa
cltd
mov
lods
jne
xchg
inc
repz
push
push
insl
sahf
dec
rol
and
mov
jp
dec
sub
sbb
push
scas
gs
cmp
xor
xlat
aam
rol
cmpsl
xchg
dec
xchg
jp
clc
jbe
iret
imul
cli
sbb
imul
ds
inc
subb
test
scas
stos
pavgw
insb
push
subl
adc
cmpsl
jae
sub
dec
mov
arpl
sbb
mov
dec
xchg
loope
cmp
repz
mov
insl
sti
inc
stc
adc
pop
adc
sub
scas
rcll
pop
cmp
jle
mov
lahf
or
mov
sub
scas
cmpsb
das
loop
xor
and
inc
loop
add
call
cmp
jnp
sbb
sub
inc
movsb
mov
test
dec
loopne
stc
inc
jge
in
mov
daa
sti
or
je
add
mov
cmp
loop
lea
arpl
mov
iret
lea
loop
push
sahf
repnz
xor
inc
pop
cmpsl
sub
mov
or
mov
mov
pop
push
addr16
mov
int3
mov
fists
jge
mov
loope
pop
lods
xchg
nop
test
cmpb
add
clc
cmpl
push
add
jo
dec
inc
je
daa
jbe
dec
mov
xor
imul
push
aam
mov
xor
loop
das
cmp
pop
mov
ljmp
mov
out
sub
mov
clc
mov
pop
repnz
rorb
cmp
add
mov
or
lret
cmp
imul
push
out
mov
cld
or
push
dec
sbb
cmc
dec
inc
dec
lods
cmp
pop
out
lahf
aad
push
mov
shl
icebp
mov
aaa
mov
adcb
mov
js
ret
mov
sub
xchg
jno
or
mov
jne
sarb
popa
rorl
icebp
mov
mov
sub
xor
sbb
push
or
sub
loop
add
ret
popf
push
stos
xor
cmpb
mov
insb
and
leave
movsl
mov
lock
repz
xor
lea
jbe
mov
xor
daa
mulb
mov
push
adc
imul
jbe
outsb
stos
addr16
insb
hlt
lahf
insb
js
imul
mov
push
jno
std
mov
outsb
sbb
sub
lcall
pop
mov
cld
icebp
leave
pop
mov
inc
pop
sub
mov
xchg
adc
mov
xchg
cmp
movb
add
inc
fists
insl
push
xchg
icebp
mov
adc
mulb
movsl
push
pop
out
setle
dec
inc
scas
inc
dec
mov
pop
xchg
mov
pop
push
ret
pop
mov
push
push
add
shll
ljmp
jmp
sbb
daa
fisttps
cmp
insb
fiadds
shl
rcll
cmp
dec
fnstcw
push
mov
cmp
pusha
mov
hlt
sbb
adc
pop
test
jmp
rcr
jno
inc
std
call
clc
lea
adc
mov
adc
jo
loopne
mov
shr
loopne
cld
jne
jbe
mov
fs
push
daa
inc
dec
adc
test
lret
dec
aas
stc
pop
cmp
inc
add
jno
dec
pop
pop
fldl
xchg
and
jp
or
jae
push
dec
mov
xchg
xor
jge
and
and
les
repz
jae
ds
out
ffreep
jg
popa
push
ror
loopne
out
fstpt
inc
ret
movsb
in
inc
fwait
dec
xchg
push
dec
pop
xchg
adc
push
loop
and
push
cltd
bound
aam
mov
out
pop
xlat
pop
jnp
aam
fmull
jnp
loop
nop
or
fwait
movsl
add
push
jle
and
out
dec
icebp
stos
stc
loopne
and
sti
daa
mov
fstp
mov
sti
sub
xchg
mov
adc
pop
mov
pusha
dec
aad
sbb
cmc
push
sbb
insl
pusha
inc
fiaddl
pop
sbb
sahf
imul
cmpl
xor
add
cmpsb
test
sbb
outsl
je
inc
out
inc
bswap
xor
sbb
arpl
lods
or
lcall
lock
fisubrs
pushf
push
mov
push
movl
pop
sbb
aam
lock
pop
lcall
jmp
rcrl
cs
add
push
dec
pop
outsl
jne
cmp
add
lock
shll
fldcw
add
mov
or
cmp
mov
push
repnz
out
clc
push
adc
pop
fiadds
ja
jns
cmp
stos
ds
movsb
adc
aam
or
or
xor
or
clc
ja
pop
mov
push
lret
aam
jne
pop
jns
adc
scas
scas
sbb
in
scas
pop
leave
es
adc
loop
fs
shll
mov
mov
jne
cmp
lcall
dec
dec
xchg
arpl
jno
rorl
mov
aad
arpl
pop
adc
jns
adc
jae
and
jmp
test
push
and
and
and
lock
xor
int
test
xchg
xor
stos
loope
insl
test
negl
cmp
outsl
jecxz
cli
push
call
xchg
call
xchg
test
push
jae
or
mov
cmp
scas
movsl
push
outsb
sbb
pop
inc
dec
xor
jmp
cmc
dec
push
negl
je
addr16
xlat
and
rcr
mov
popa
jne
je
mov
add
xor
jmp
icebp
add
in
fildll
fwait
adc
ret
dec
add
into
dec
lock
gs
xor
lret
and
cmpsl
mov
enter
xchg
inc
push
mov
pop
decl
jo
shll
shrl
push
sub
dec
xchg
adc
dec
jne
jle
push
mov
std
es
or
pop
push
fsts
add
lret
loopne
or
aas
cs
mov
lret
ret
xor
lret
mov
xchg
sti
mov
add
inc
add
aam
out
push
jge
clc
adc
mov
dec
push
adc
xorl
mov
into
rorl
mov
xchg
pushf
cmp
inc
pop
xorb
enter
movsb
es
js
mov
lods
sub
sub
cmp
and
das
fstpt
adc
je
inc
aam
push
outsb
test
insl
push
rcll
mov
push
data16
mov
call
mov
push
mov
inc
xchg
iret
or
repnz
and
dec
add
mov
cmp
mov
in
adc
adc
dec
pop
aas
xchg
js
mov
xchg
les
jo
in
loop
add
ficomps
mov
dec
lcall
mov
arpl
jae
adc
dec
insl
cmpl
aaa
cmp
pop
lods
mov
push
sbbb
sbb
jl
mov
cli
mov
dec
jmp
and
lcall
or
inc
pmaddwd
adc
cmpsl
inc
jb
sub
fidivl
repnz
adc
sub
inc
inc
push
rclb
push
sbb
xchg
push
out
pop
int
and
push
push
iret
or
leave
out
sarb
mov
xor
pushf
popf
ds
adc
jl
push
xor
std
fstsw
rorb
shll
lea
fmulp
sub
outsb
es
mov
cwtl
push
fnstsw
arpl
imul
xchg
jns
sbb
into
add
sbbl
cmp
pop
andl
andb
lods
dec
outsb
cwtl
pushf
stos
add
add
shrb
mov
sub
imul
jp
fcomi
pop
rclb
xchg
into
int
ja
daa
stos
incb
add
jecxz
test
xor
jbe
or
mov
inc
out
aam
roll
cltd
xchg
jge
mov
lock
mov
or
push
std
enter
in
aad
mov
jns
xchg
pop
inc
cli
jnp
ss
push
xchg
or
xchg
ret
frstor
jp
xorb
imul
test
xchg
aas
sub
cmp
xor
sub
sub
fwait
lret
sub
movsl
mov
repnz
mov
cmp
xchg
lods
pop
lahf
mov
inc
and
out
shll
mulb
dec
dec
movb
add
mov
outsb
adc
test
pop
xchg
mov
inc
xchg
xchg
cltd
clc
sub
sbbl
inc
clc
adc
xchg
lret
inc
lcall
shl
or
push
push
int3
push
fstpl
lea
cmp
xchg
push
fidivs
jbe
arpl
shlb
mov
je
mov
mov
push
jno
cld
sub
xchg
push
call
rorl
mov
xchg
sbb
inc
mov
pop
shr
sbb
or
cli
loop
xchg
mov
stc
push
cli
mov
push
fdivrl
mov
xchg
push
loope
and
lods
xor
jecxz
inc
addr16
mov
popf
lahf
and
fwait
adc
sub
fidivrl
mov
sbbb
push
insb
jne
out
adc
repz
loope
leave
jle
adc
popf
das
fsubr
dec
mov
imul
call
fcom
gs
jl
jmp
cmp
mov
pop
movsb
in
lret
mov
je
insb
in
jne
and
in
inc
int3
mov
and
inc
fldenv
sub
and
mov
cmp
cld
mov
cmp
inc
test
out
dec
inc
xor
pushf
lods
decl
mov
out
test
xchg
dec
jp
mov
xchg
fs
in
mov
sub
gs
jb
aam
xchg
push
into
mov
adc
jle
dec
sub
dec
add
ss
dec
cmc
mov
add
stos
arpl
mov
dec
gs
leave
insl
inc
pop
xchg
and
aad
into
inc
leave
in
add
pushl
xchg
loope
aad
inc
arpl
sbb
imul
hlt
mov
roll
aam
dec
idivb
loope
and
int
pop
mov
cmpsb
jb
ja
rcrl
push
stc
cmovl
or
clc
adc
data16
imulb
and
and
sub
xor
xchg
scas
xor
popa
repnz
xor
jecxz
ficomps
mov
movsb
xchg
jns
fcom
add
pop
jl
pop
push
fnstcw
sub
mov
aaa
mov
and
pop
mov
lret
jnp
add
pop
lods
adc
fwait
data16
lds
cmpsb
xor
dec
mov
cmp
outsl
inc
in
jmp
push
mov
mov
mov
add
ja
repnz
inc
call
cld
cld
dec
xorb
or
adc
aam
dec
jb
and
sbb
sbb
nop
inc
push
inc
jbe
mov
cli
cwtl
sub
xchg
push
mov
fstl
adc
repnz
cld
mov
mov
and
ja
sbb
test
jmp
mov
jl
dec
push
push
xor
ret
jns
lret
daa
dec
iret
incb
xchg
pop
loop
jg
add
cmp
add
dec
test
std
stc
cmp
pop
push
lgs
popf
cmp
subl
addl
lock
adc
cmp
jge
xchg
scas
sti
push
mov
neg
pop
mov
pop
lret
and
xchg
fucomip
sbb
jnp
repnz
sbb
adc
jl
mov
movsl
cs
bound
in
cli
addr16
pushf
js
repnz
push
popf
xor
decl
pop
fs
and
iret
mov
sbb
cli
dec
test
sahf
sbb
push
inc
add
mov
loopne
repnz
jnp
stos
pop
push
jo
mov
xor
in
addr16
enter
sahf
xchg
lock
cmp
movsl
outsl
adc
push
ret
andl
nop
cli
pop
lods
nop
sbb
inc
or
push
or
dec
cld
cltd
movsb
mov
mov
inc
subb
js
xchg
mov
sahf
aam
insl
bound
loopne
mov
rorl
call
dec
call
repz
imul
xor
shll
push
mulb
stos
xor
daa
xor
sbb
and
mov
pop
pop
add
loope
cmpb
sti
add
insl
test
outsl
lods
lret
lea
shrl
jp
push
mov
scas
jge
and
adc
movsl
xchg
push
mov
jle
dec
cli
mov
push
enter
mov
mov
je
xchg
mov
jg
out
mov
mov
fisttpl
mov
add
fs
lods
aad
mov
sbb
lea
mov
ljmp
cli
mov
jmp
out
lds
push
jb
insb
mov
dec
sbb
popl
cld
push
mov
push
mov
daa
iret
sbb
decl
rol
push
shlb
movsl
outsb
fidivrs
popf
push
inc
jno
mov
pushf
es
xor
jne
subl
sti
fwait
mov
or
xchg
cmp
lcall
fnstcw
cs
inc
cmp
in
rcrl
cmp
push
mov
lods
mov
int3
or
add
into
movsl
in
jecxz
sarb
cmp
pop
fildll
xchg
lahf
sub
or
adc
push
in
xchg
int3
xchg
aam
scas
pushf
xchg
add
inc
xchg
lret
add
popf
push
pop
sbb
loope
test
pop
adc
sbb
js
lock
mov
lods
adc
lret
sarl
stos
cwtl
fcmovnbe
or
mov
push
xor
jmp
and
or
and
test
lret
or
xlat
sbb
push
add
push
fwait
test
or
mov
int3
jl,pt
xchg
jge
push
jno
push
push
imul
enter
lea
fisubs
sub
and
pop
bound
cli
sub
mov
cmp
in
push
psubq
adc
movsb
fldt
mov
fbstp
fcomip
mov
shlb
jmp
sub
mov
scas
shl
or
xchg
movsb
dec
or
cmp
aam
sub
push
adc
fwait
push
dec
bound
test
lods
sti
cs
sub
xor
mov
lcall
push
in
cmpsb
mov
inc
mov
sub
pop
adc
and
daa
mov
mov
and
mov
pop
sub
adc
addr16
cwtl
lea
lret
xor
dec
sbb
leave
in
shl
pop
add
cltd
mov
movsl
addb
adc
movsb
lods
pop
mull
inc
lds
movsl
hlt
push
bound
mov
add
call
cmc
push
icebp
cwtl
int3
add
jmp
ret
in
mov
and
sub
rol
sbb
cmp
push
popa
xchg
mov
jge
push
pop
repz
sti
enter
je
adc
cmp
mov
sbb
push
xchg
sarl
adc
mov
sti
into
imul
mov
mov
lock
and
insb
mov
andb
adc
mov
cmp
dec
shll
int
xchg
gs
ret
jb
int3
cmp
out
jno
push
fisttpl
movl
or
or
out
dec
xor
out
ja
hlt
mov
repz
lcall
push
push
and
out
sub
icebp
or
xchg
adc
and
add
in
stos
lahf
out
int
into
arpl
aad
sbb
and
xor
dec
jg
ss
bswap
cmpsb
fmull
rcrl
pop
and
call
xor
scas
mov
stos
dec
xor
shrb
xlat
ja
daa
sbb
and
jb
jecxz
xor
and
movsl
mov
adc
add
mov
add
enter
cmp
ret
push
lret
push
adc
dec
jmpw
mov
mov
into
pop
and
mov
push
xor
js
testb
les
call
cwtl
in
push
dec
nop
jg
mov
ja
call
and
dec
inc
add
mov
std
add
pop
push
lock
test
pop
pmaxsw
adc
test
or
jbe
faddl
add
psubq
popa
int
xchg
sbbb
and
les
mov
enter
push
jb
mov
roll
push
sub
mov
dec
push
outsl
dec
das
int3
clc
cmp
cwtl
daa
in
xlat
sbb
push
dec
popf
rolb
sbb
mov
lock
pop
push
divl
and
movsb
movsb
xchg
mov
add
xchg
add
jo
rclb
mov
nop
dec
int3
cmp
sbb
and
dec
push
xor
inc
jnp
adc
cmc
push
in
mov
cmc
or
dec
inc
push
leave
bnd
add
mov
jp
jmp
mov
repnz
sbb
dec
inc
push
push
add
fsubs
or
in
cmp
sahf
out
jl
loope
inc
sbb
fimuls
das
stc
mov
aaa
xchg
mov
or
mov
fiaddl
cld
bound
fwait
add
cmp
jmp
js
scas
or
test
and
pop
lcall
or
mulb
pop
out
push
sbb
js
pushf
adc
aaa
or
aam
dec
loope
outsl
xchg
out
mov
mov
sub
pop
pop
mov
mov
in
adcl
sub
mov
mov
out
outsl
and
movsl
dec
inc
das
push
sub
in
or
out
xchg
lahf
fnstsw
push
inc
or
inc
mov
cltd
fmuls
mov
jne
push
push
add
cmp
jge
adc
mov
push
inc
or
xchg
sahf
push
xchg
push
and
in
xchg
xor
sbb
in
mov
mov
mov
aad
mov
pop
mov
xchg
xchg
mov
fwait
xchg
sub
xor
lock
mov
pushf
sti
fucomi
out
stc
push
aam
cmp
add
ds
xor
mov
add
jo
test
loopne
ret
cmp
icebp
cmp
mov
push
push
sbb
lret
jno
cmp
adc
push
out
pop
push
or
je
mov
jl
mov
add
push
mov
mov
jo
out
lcall
enter
push
dec
sub
lock
leave
jnp
jae
pop
lahf
ja
ret
xor
jl
or
add
fdivrs
and
ljmp
mov
arpl
out
insb
sbb
inc
cld
sbb
lret
or
cltd
mov
js
pop
fs
cli
out
dec
int
fldz
pusha
mov
fisubrs
in
frstor
pop
sbbb
xorb
icebp
std
push
cmp
mov
sbb
mov
rorl
ljmp
int
les
or
dec
xlat
add
inc
lret
mov
pop
mov
sbb
aaa
sub
enter
and
dec
or
decl
mov
addr16
push
dec
dec
pop
mov
mov
mov
popf
jp
ljmp
les
imul
out
test
stos
loopne
mov
jmp
sub
mov
mul
cmp
sbb
push
xchg
jp
insb
pop
xchg
cmp
push
mov
mov
fidivl
jmp
std
mov
push
add
mov
sbb
hlt
ds
daa
fiaddl
pushf
cmp
lret
mov
mov
push
dec
and
insl
or
dec
fisttps
stc
jge
xor
popa
add
lods
add
cmovno
push
aas
ret
cmp
mov
pop
xor
xlat
jb
shrb
adc
into
mov
push
xor
cmp
faddl
aad
mov
xor
call
jbe
inc
test
out
mov
imul
fdivl
arpl
repnz
into
lret
adc
lods
sub
in
add
in
int3
out
push
mulb
sahf
sbb
aam
xor
cmpsb
dec
dec
je
xchg
insb
insl
mov
cli
sbbb
int
aad
repz
mov
mov
or
mov
hlt
xor
jecxz
or
adc
cltd
insb
mov
and
fs
and
lds
cwtl
mov
repnz
jg
icebp
fisubl
pushf
xor
mov
jbe
inc
cltd
out
pop
imul
lods
xchg
ud1
inc
fprem1
std
and
xchg
aad
rcrb
mov
cld
sbb
dec
in
adc
sbb
add
adc
cs
xchg
daa
xorb
call
xchg
sbb
in
xchg
mov
inc
int3
cmpsl
sti
test
les
inc
test
out
test
push
and
hlt
outsb
fistl
in
mov
cs
adc
cltd
fwait
lods
pop
push
insl
and
mov
add
adc
lahf
sbb
sub
xchg
add
notl
mov
pop
pusha
xchg
ja
or
inc
sbb
push
xchg
imul
in
mov
fldt
sub
pop
mov
data16
jp
pop
das
scas
popa
jp
std
add
adc
pushf
jnp
imulb
push
je
js
mov
dec
push
and
mov
in
fs
pusha
jg
inc
adc
int
mov
or
cmpsl
sti
dec
jp
lahf
outsl
or
sbb
aad
mov
loop
lods
pushl
scas
and
push
clc
in
sbb
lcall
int
out
mov
aad
imul
cmpb
daa
mov
shll
sub
pop
jne
out
add
repnz
inc
dec
inc
sbb
add
push
cmpsb
insl
inc
jecxz
faddl
dec
pop
gs
mov
cmp
xchg
dec
sbb
pusha
fs
mov
dec
loope
repnz
jle
add
and
push
lret
insl
dec
pusha
shll
mov
stc
scas
sbb
jmp
into
sbbb
mov
out
sub
loope
sub
jno,pt
or
sbbl
imull
jnp
scas
inc
mov
dec
xchg
outsb
pop
mov
inc
xor
jo
or
leave
dec
sbb
dec
sbb
stos
ds
js
xchg
or
insl
outsb
pop
jbe
into
jo
mov
pop
insb
xor
les
sbb
cmp
add
movsl
enter
sbb
aad
sub
movsb
dec
dec
popa
sub
in
push
sarl
int
cmp
stc
mov
lds
in
ds
push
or
loopne
insl
ret
sub
push
addr16
daa
int
ficoms
pop
into
mov
sbb
dec
imul
xchg
sub
push
add
adc
dec
xchg
outsl
insb
insl
adc
cs
fwait
sbbl
lret
gs
mov
cwtl
jge
mov
pop
sbb
aad
mov
lock
pusha
andl
test
fwait
mov
leave
sub
xchg
inc
divl
in
int3
mov
pusha
stos
mov
ss
loop
dec
and
dec
jle
loope
inc
out
cmp
cmp
or
xchg
or
icebp
dec
xorb
shufps
iret
mov
dec
lcall
cmc
mov
in
pop
movsl
in
push
inc
cs
adc
pop
sti
cmp
in
jmp
pusha
imul
hlt
fists
jnp
sub
cmp
and
in
push
es
or
mov
inc
sbb
test
cld
push
ret
popa
xor
movsb
jp
and
add
test
das
mov
movsb
loopne
mov
fisttps
jbe
ret
sub
or
jle
outsb
sbb
or
idivl
sbb
loop
xor
sti
out
aas
out
add
cmpsb
or
test
mov
push
sahf
lods
mov
cmp
sarl
out
push
pushf
imul
rcl
xchg
xchg
push
or
cltd
pop
insb
dec
in
shrb
jno
push
sbb
lods
sarb
roll
push
add
add
and
out
adc
in
in
pop
cmpsb
lock
pop
add
leave
cmp
or
aaa
stos
aam
fwait
dec
std
inc
sub
cmp
rcrl
popf
mov
aad
jle
mov
inc
pusha
inc
adc
jecxz
push
sub
dec
jmp
mov
fmul
add
push
cmp
stc
sub
adc
xchg
aas
shl
cli
lcall
jns
mov
cmpsb
jo
mov
pop
mov
out
in
in
mov
jnp
add
shlb
ret
fwait
lods
jo
in
pop
inc
lds
insl
mov
addl
cmc
cmp
xchg
clc
loop
inc
addb
jae
movl
mov
int3
lods
dec
in
sub
fbld
cmp
shrb
add
inc
push
inc
or
and
es
outsb
push
sbb
repz
ljmp
jp
lds
and
aaa
arpl
xchg
mov
xchg
xchg
add
mov
pop
fbld
jg
in
and
movsb
repnz
sti
sbb
mov
out
jle
jg
mull
std
lock
push
mov
out
dec
adc
in
sub
jb
adc
aam
ja
jl
or
mov
push
stc
lea
cmp
mov
jno
pop
ja
mov
mov
mov
jl
aaa
and
sti
xchg
inc
lret
rcl
gs
sbb
loopne
popa
stos
jl
les
daa
push
sarl
inc
add
mov
cmp
adc
ret
insb
lock
fldl
int3
adc
pop
js
lea
xor
test
andb
je
in
mov
aad
and
push
jo
dec
jb
fidivl
mov
repz
call
mov
js
push
fsubs
xchg
mov
sub
xlat
push
stos
xchg
pop
mov
out
mov
lret
jecxz
packssdw
and
adc
roll
push
mov
mov
xchg
mov
rcll
popa
pop
outsb
mov
imull
ljmp
lret
mov
repz
jecxz
pop
test
aas
add
shrb
rcrb
jmp
rclb
pusha
mov
adc
into
xor
sarb
outsb
jo
scas
jg
jno
pop
xor
movsb
clc
pop
and
imul
pop
xchg
lret
pop
sti
sahf
test
pop
arpl
test
dec
xchg
pop
call
sbb
notl
push
inc
lea
ret
pop
aaa
dec
retw
rclb
inc
stos
push
jecxz
mov
mov
cwtl
inc
loop
cmp
mov
mov
dec
cmpsb
fstl
inc
jno
and
stos
pop
adc
inc
sub
xchg
sbb
push
pusha
enter
cltd
add
lock
push
sub
cli
es
adc
push
push
cld
jo
out
int
rcrb
mov
xchg
imul
popf
and
loopne
push
fiadds
aad
cmpb
sub
movsb
fcomi
and
fldenv
sub
stos
xchg
adc
pop
inc
repz
jmp
fimuls
xchg
cmp
sbb
subl
clc
jnp
cs
stos
mov
inc
lret
adc
push
or
loopne
jp
cmpsl
pop
faddp
pop
out
ret
jb
mov
push
mov
pop
lcall
mov
xchg
adc
and
shlb
test
imul
xor
dec
or
push
cmpsl
sub
lret
sub
mov
inc
clc
mov
jns
clc
mov
or
insl
pop
imul
test
sbb
push
clc
xchg
inc
repnz
push
dec
dec
push
mov
push
in
lahf
pop
rcr
push
pop
lcall
mov
pop
cwtl
rcl
and
in
pop
and
js
stos
stc
test
stos
cmp
dec
outsl
cld
emms
or
add
rol
call
or
and
outsb
hlt
repz
pop
mov
mov
jns
ljmp
xlat
leave
out
mov
popa
cmp
in
adc
adc
pop
push
aam
int
mov
loope
sbb
scas
xchg
scas
fsubrl
inc
jno
test
fimull
mov
rorl
mov
icebp
mul
hlt
mov
jno
mov
int3
call
ja
test
gs
aad
add
add
adc
insl
fisubrl
enter
mov
es
mov
movsb
jle,pt
mov
cmpsl
xchg
mov
sub
pavgw
mov
dec
xor
mov
int
daa
int3
xrelease
iret
inc
fnsave
je
aam
xchg
outsb
mov
inc
and
jbe
adc
out
insl
jp
xchg
int
lods
mov
fs
mov
push
mov
sbb
lds
push
push
or
mov
mov
pop
rcrb
adc
cmp
push
sbb
shll
pop
arpl
jbe
in
sbb
lds
lahf
cmpsl
je
add
adc
insl
push
xchg
jg
jmp
mul
iret
fcoms
enter
test
int
mov
lahf
add
loope
rcll
sub
mov
pop
pushf
test
daa
outsl
shrb
push
sbb
fwait
jae
push
int
cmc
sbb
adc
in
subb
cltd
bound
lods
and
sti
mov
or
xchg
fldl
jb
movsb
scas
pop
inc
xchg
add
add
movsl
dec
lret
mov
mov
pop
ljmp
sub
dec
dec
pop
ss
movsb
push
push
enter
call
ds
movsb
add
lods
push
mov
fcomi
xchg
xchg
xchg
fs
btr
inc
mov
sub
fs
enter
sbb
fwait
in
pop
and
add
inc
les
popf
sbbb
jl
jmp
or
or
xor
pop
ficoml
and
icebp
jo,pn
jae
rolb
sub
mov
mov
xrelease
ljmp
jp
xor
xchg
js
cwtl
jnp
stos
xlat
stos
pushf
xor
cmpsl
mov
and
sbb
dec
or
inc
inc
arpl
mov
push
stos
jo
fwait
add
inc
movsl
push
call
inc
jle
fwait
into
icebp
add
loopne,pn
push
sub
ret
mov
mov
inc
in
jge
cmp
dec
sub
sub
or
lret
xor
sti
in
cmp
rorl
mov
cwtl
inc
jle
iret
xchg
sub
xor
inc
jecxz
leave
inc
xor
dec
imul
lea
int
cmp
dec
xchg
aas
test
jmp
call
xchg
fldt
imulb
sub
dec
arpl
pop
loope
adc
push
mov
xor
and
flds
in
adc
fwait
push
daa
aaa
stos
push
lcall
lret
inc
mov
daa
sbb
and
je
in
ret
stos
cmc
mov
test
ficomps
mov
nop
push
pop
pop
subps
and
dec
add
shlb
add
push
xchg
aad
stos
add
dec
jae
jge
xchg
mov
in
test
inc
dec
pushf
daa
xor
fcoms
lock
adc
je
xorb
inc
dec
jp
pop
or
rcll
rorb
mov
cmp
pop
dec
in
aaa
rclb
cld
push
in
mov
iret
test
jb
outsl
ljmp
inc
mov
lret
repnz
mov
fdivrl
out
mov
bound
cmp
insb
sub
push
cld
xchg
and
pop
xchg
rolb
adc
std
lret
shlb
or
pop
mov
mov
pop
enter
pop
xlat
mov
repnz
or
jne
sbb
addr16
mov
outsl
push
dec
xchg
mov
add
or
push
out
decl
movsb
pop
mov
stos
stos
fdivrs
and
cmpsb
repnz
shrl
gs
jl
ljmp
pop
add
ret
push
je
nop
call
dec
stc
test
sbb
ror
or
sbb
xchg
in
xor
daa
imul
mov
xchg
addr16
lcall
fwait
imul
aaa
or
das
dec
xlat
jno
jl
lret
cmp
dec
in
push
scas
dec
dec
mov
into
aam
fdivs
sbb
stc
fisubrs
roll
outsl
aas
cmp
mov
fwait
and
mov
and
or
mov
adc
filds
outsl
pop
pop
lcall
cmp
mov
or
sub
xchg
adc
fisttpll
aas
push
adc
imull
pop
xchg
and
addr16
jl
sub
xchg
xchg
push
or
add
xor
add
mov
mov
fsubl
mov
lock
clc
mov
jbe
daa
pop
xchg
pop
push
inc
and
mov
test
arpl
mov
mov
xchg
jle
mov
xchg
cmp
push
stos
dec
sbb
mov
movsl
les
adcb
std
mov
push
mov
xchg
jp
ret
pop
out
push
mov
ss
mov
xor
cmp
jl
fimull
loopne
sub
sbb
leave
data16
xor
in
sbb
jle
cmp
cpuid
cmpsb
test
push
sbb
je
dec
js
ss
ljmp
inc
xor
dec
or
add
mov
call
xchg
mov
xchg
push
rolb
jnp
pop
test
cmc
clc
test
xchg
inc
shll
mov
mov
sub
mov
hlt
mov
imul
stos
dec
ljmp
mov
jmp
inc
lret
sbb
ret
sbb
adc
and
shl
imul
mov
push
int
movsl
int
outsb
pop
add
push
rorl
daa
rclb
jae
mov
add
inc
clc
loopne
test
push
sbb
push
test
inc
jns
xchg
fcomi
cli
incb
adc
dec
icebp
fisttpl
int
cmc
mov
inc
xor
lea
xchg
aas
sahf
inc
jns
stos
stc
fcmovnb
iret
or
insl
xchg
sbb
add
jb
push
mov
jo
inc
icebp
cli
jge
sbb
mov
xchg
pop
mov
icebp
mov
push
cmp
das
inc
das
arpl
icebp
rcl
adc
mov
sub
mov
xor
leave
xor
inc
push
icebp
push
pushf
repnz
push
fwait
push
js
fnstsw
and
cmp
xchg
pop
sbb
or
and
xchg
dec
mov
mov
ret
cmp
jg
out
outsl
mov
lahf
push
pop
cmp
and
imul
rcrb
incl
push
arpl
mov
lret
pop
movntq
pop
repnz
cli
mov
mov
mov
xor
nop
test
in
cld
dec
add
cmpsl
cmc
inc
push
mov
xchg
adc
inc
cmp
sbb
jg
mov
cmp
sub
mov
mov
les
add
sbb
sbb
nop
pop
xchg
out
pusha
xor
jno
push
pop
or
cmpsb
nop
pop
add
inc
rcl
mov
cld
fldcw
fsub
popf
je
insl
push
push
jne
jmp
mov
mov
ret
fsub
xor
fwait
rcrb
in
out
or
xlat
inc
add
aas
jecxz
pop
in
out
xchg
jg
rcl
push
insb
adc
jne
mov
incb
in
inc
aas
out
les
into
cmp
lcall
dec
mov
frstor
rorb
popf
sti
pop
xorb
mov
push
add
dec
pop
push
mov
cli
push
lods
push
fdivrl
idivl
pop
movsb
or
jnp
mov
lret
ja
pushf
mov
mov
nop
shrb
add
dec
mov
iret
imul
cmp
inc
test
inc
mov
ljmp
repnz
sub
xchg
xchg
shl
lcall
sub
pop
daa
sub
jae
out
pop
pop
aaa
daa
popa
adc
and
jge
test
xor
push
int
xchg
in
pop
push
lcall
jo
sub
mov
or
repz
pushf
xor
ja
mov
insb
jbe
pop
push
push
fwait
mov
sbb
xchg
test
adc
pushf
arpl
dec
inc
mov
mov
arpl
xor
adc
inc
repz
pop
adc
pushf
xor
pop
mov
data16
dec
add
test
push
push
adc
jmp
add
fs
dec
jl
sub
scas
mov
jo
sti
add
cmpb
ficoms
inc
inc
cmp
fwait
mov
mov
push
xor
int
das
and
xor
xchg
cmpsl
adc
jb
xor
mov
lods
xor
mov
sub
mov
je
sahf
push
pop
sbb
mov
pop
arpl
ljmp
imul
jno
clc
insb
adc
add
push
dec
adc
push
sahf
test
inc
inc
sub
mov
pop
leave
les
mov
inc
push
xor
mov
fildl
and
sbb
sbb
dec
and
sbb
fisttps
ss
popf
push
sbb
hlt
jecxz
cli
outsl
push
inc
insb
stos
jbe
jnp
jecxz
mov
push
mov
xchg
inc
sub
adc
mov
pop
pop
js
xchg
lods
jns
rcrb
lock
mov
push
and
xchg
adc
and
push
lret
push
jnp
mov
test
or
jecxz
das
ret
pusha
pusha
and
push
sub
iret
adc
xchg
std
mov
pushl
out
adc
mov
outsl
popa
and
mov
xchg
jmp
sbb
jmp
xchg
adc
ficompl
or
test
add
jmp
nop
repnz
scas
lock
sbb
popf
loopne
gs
lods
dec
arpl
mov
jbe
test
add
stos
push
sub
movsb
rorl
ja
and
inc
stos
sub
rcrl
inc
inc
in
mov
clc
out
aam
sub
shlb
mov
dec
jne
jo
in
clc
mov
lahf
or
je
cmp
aas
or
sub
addb
or
push
mov
dec
mov
inc
jg
cmp
ret
enter
std
push
addr16
frstor
icebp
pop
mov
xor
arpl
xor
cmp
stc
cmpsb
fs
cs
jns
mov
push
orl
jbe
stc
mov
mov
int
push
xchg
ror
sub
int
cmp
int3
add
mov
aam
xlat
or
or
inc
fnstsw
dec
adc
fwait
cmpsl
test
loope
pop
adc
push
lock
pop
ret
lret
adc
addr16
dec
jnp
push
mov
stc
int
xor
and
movsb
inc
and
jmp
fnstsw
jl,pn
mov
sarl
add
mov
jne
test
cmp
movsb
jns
and
aad
and
lret
rorl
mov
lcall
into
xchg
sti
mov
and
negb
orl
push
bnd
aam
stos
mov
add
mov
dec
xor
cs
sbb
xchg
push
xchg
cmpsl
shrb
std
pop
or
and
leave
fisubs
adc
xor
xor
dec
hlt
push
idivb
and
push
or
add
cmc
into
hlt
inc
inc
pop
fldl
xchg
dec
in
pop
jl
jl
mov
mov
cwtl
data16
repnz
test
aad
xor
mov
std
fists
andl
inc
mov
pop
pop
adc
sub
mov
iret
repz
sbb
pop
insl
add
sub
shlb
ret
inc
jo
mov
ror
and
or
pop
stc
fdivs
sahf
dec
das
out
and
jg
movsb
xchg
cli
iret
push
inc
outsb
lods
push
aad
rorb
xor
mov
sub
mov
in
push
cwtl
out
jb
xchg
repnz
addl
push
das
xorb
push
imul
or
cmp
mov
pop
out
mov
outsb
in
add
lret
repnz
mov
cmp
mov
cmpsb
push
xchg
pop
xor
mov
xchg
pop
xchg
test
loope
mov
les
cmp
and
insb
pushf
rolb
xchg
stc
sbb
xchg
cmp
ret
ss
dec
test
cmp
jno
orb
fnstenv
mov
es
xlat
adc
xchg
and
stos
dec
fistpll
push
test
lods
aam
aas
lods
pop
out
cmp
lods
sub
fcomi
fisttps
lds
out
dec
sbb
enter
push
testl
and
lret
push
test
sbb
mov
test
ljmp
xor
xchg
xor
fisubl
xor
xchg
dec
add
or
adc
adc
xchg
popf
mov
add
pop
bswap
mov
aam
mov
in
jb
loopne
cmp
andb
mov
andl
ss
lret
mov
imul
jnp
xor
xchg
xchg
lret
shrl
cmpsb
aad
lods
test
jne
sbb
hlt
cmpsl
inc
popf
and
and
push
ja
scas
or
adc
cmp
push
push
and
xor
pop
scas
jnp
outsb
je
xchg
mov
xlat
pop
roll
xchg
in
mov
cld
or
mov
add
sarl
test
ljmp
or
loope
leave
js
rcll
xor
ja
mov
adc
push
pushf
add
mov
push
xchg
lock
xchg
xchg
in
sub
add
addb
call
mov
aas
fisttpl
cmp
and
pop
jge
dec
xchg
stos
iret
fistl
inc
es
mov
pop
mov
mov
add
cmp
mov
cmpl
int3
shrb
cmpsl
jle
leave
adc
in
dec
lret
cwtl
jb
push
int
outsl
adc
push
test
push
loop
aas
out
xor
test
sub
jns
jae
xor
pop
xchg
stc
cmp
mov
lock
fwait
sub
ja
jmp
or
lds
cmp
cmpsl
das
mov
movsl
loopne
inc
sbb
or
or
push
stc
sub
cli
testl
push
push
decl
pushf
aaa
or
mov
ljmp
inc
mov
mov
xchg
cmp
out
fdivs
xlat
mov
test
jge
ret
dec
sub
push
je
lods
xchg
repz
lret
pop
add
push
dec
mov
xor
call
add
cmpsb
mov
out
xchg
ret
outsl
lock
mov
add
mov
mov
jle
out
mov
ret
icebp
outsl
stos
les
ds
cmp
nop
andb
sahf
fucomip
test
cmp
and
lods
ret
lods
add
xchg
fstpt
das
ret
xor
mov
jle
inc
sub
scas
lods
xor
call
sub
dec
mov
ret
aaa
jb
xor
out
cmc
jle
xchg
inc
xchg
mov
adcl
jbe
cld
repnz
dec
add
iret
rcll
pop
and
leave
inc
cmpsb
cmpsl
out
pusha
cwtl
cmp
loopne
jne
popa
loopne
push
stc
inc
loopne
dec
test
pop
hlt
je
sbb
push
mov
xorb
add
inc
jb
xchg
mov
pop
mov
shrl
repz
lock
in
push
test
add
lods
fistps
inc
xlat
mov
push
inc
and
pop
inc
xchg
jge
aam
cmpsl
or
add
xor
in
mov
or
dec
jne
mov
and
jge
xchg
mov
pop
mov
pop
xor
mov
adc
lods
out
shrb
inc
dec
or
xor
scas
add
jo
movsb
sbb
jb
sbb
pop
sbb
test
call
xchg
or
mov
lea
mov
movsl
push
pop
sarb
test
jp
xchg
test
lods
in
loop
xor
mov
jns
stos
jg
cmpsl
push
dec
outsl
or
test
jp
lods
mov
cwtl
das
dec
adc
fcompl
or
ficompl
subl
cwtl
cld
int
cli
jmp
sub
xchg
add
or
dec
inc
test
sub
mov
push
push
subb
das
cs
sub
je
sub
popa
pusha
mov
out
lods
and
cmp
insl
push
cwtl
imul
xchg
jno
out
lods
sbb
es
cltd
pop
inc
inc
les
jne
shlb
or
adc
incl
roll
pop
xchg
xchg
xchg
lods
fs
xchg
mov
or
lods
xor
lods
xchg
fsub
xchg
and
add
inc
sbb
push
cmpsl
sahf
mov
cmp
cmpsl
push
loop
cltd
cmp
mov
dec
hlt
leave
arpl
outsb
fsubrl
pop
fidivs
mov
mov
pop
cmp
push
sub
jg
pop
stos
insb
data16
js
push
adc
out
icebp
call
adc
test
pop
lds
out
lcall
shr
cmc
jecxz
cli
jbe
loop
test
pop
add
jb
jmp
popf
push
repnz
and
jo
cmp
lds
scas
or
xor
dec
pop
mov
sbb
inc
sbb
pusha
fs
sti
pop
sar
iret
xor
mov
loop
into
stos
jge
push
in
inc
or
movsl
or
jae
cwtl
pop
scas
cmpb
xor
test
lods
testb
jecxz
rolb
enter
mov
fmul
pop
xorl
pop
sub
pushf
inc
mov
or
testl
jns
ss
daa
push
jle
push
adc
mov
iret
adc
insb
aas
test
aaa
xor
std
xchg
xor
or
dec
and
and
popa
xor
daa
push
xorl
sbb
sub
push
mov
lea
mov
cmp
xor
sbb
cmpsl
out
je
dec
mov
lcall
movsl
and
cmpb
mov
jbe
mov
mov
xchg
sub
pop
add
or
repz
idivb
sbb
sbb
jne
ljmp
lea
push
aam
popa
inc
popf
adc
int
stos
stos
bound
inc
cltd
xchg
jl
or
dec
out
imul
sub
add
test
xchg
xchg
inc
ja
push
es
inc
pusha
shrl
inc
adc
mov
lret
inc
cld
inc
rclb
add
jbe
mov
mov
repnz
or
mov
daa
mov
and
jl
sbb
shlb
loopne
insl
lods
and
js
and
jno
xchg
popl
mov
neg
adc
test
andb
xlat
push
adc
insb
sub
pop
jb
cmp
mov
jmp
push
loope
push
test
mov
popa
cmc
outsl
les
ret
xchg
or
es
out
sahf
and
push
cmpsb
ja
out
fstpl
pop
push
and
mov
pop
icebp
xor
repnz
fdivrs
or
fwait
imul
and
jg
scas
in
push
incl
mov
stc
cld
js
pop
aad
xor
or
inc
sti
mov
cmpsb
dec
inc
in
fnstsw
lods
jmp
jg
out
xchg
mov
push
cmp
push
sti
mov
rcr
inc
cmc
idivb
sbb
out
in
sub
inc
jmp
pop
ljmp
xchg
sbb
dec
std
mov
inc
jecxz
sbb
cmp
imul
mov
mov
xor
std
push
leave
orl
fldz
inc
and
xchg
xchg
or
dec
add
aam
add
adc
fs
push
sub
or
outsl
idivb
push
sbb
lret
pop
jns
cmp
in
mov
loope
lock
orl
popa
inc
aas
xchg
ret
mov
dec
sbbl
rol
adc
pop
jl
stos
lcall
cld
push
or
fimuls
movsl
mov
mov
push
cmp
push
loopne
mov
movsl
sbb
mov
push
adc
arpl
les
sbb
aaa
daa
sbb
inc
in
jmp
out
roll
dec
add
mov
inc
fmuls
out
fnsave
inc
nop
dec
in
pop
pushf
fidivl
mov
popa
push
data16
fcmovnbe
pushf
idivb
and
mov
fwait
bound
ja
std
bound
aas
insl
jbe
xchg
jbe
enter
cmpsb
rcrb
sbb
jmp
loope
mov
dec
pop
out
das
hlt
xchg
js
pop
gs
lods
stos
or
jge
pusha
cmp
pop
mov
dec
popa
in
xlat
push
cmp
sbb
xorl
mov
or
pushf
nop
pop
mov
mov
xor
xchg
outsl
xor
adc
push
or
mov
dec
ds
shrb
adc
and
gs
test
sahf
xchg
outsl
hlt
xor
lods
fwait
push
bound
lcall
mov
out
dec
mov
test
dec
dec
in
repnz
fmull
popa
mov
repnz
and
lods
into
fwait
xor
lret
out
xchg
fdivp
cmp
push
cli
cmpsl
pop
dec
jnp
cs
lcall
xor
push
sbb
jp
outsb
xchg
xchg
xor
adc
popl
xchg
push
mov
xor
jmp
xchg
jecxz
mov
xchg
mov
aam
scas
push
lcall
xlat
or
loop
mov
dec
fsubl
xchg
fcmovnbe
sbbl
int3
hlt
int3
push
jmp
movsb
mov
push
rorb
jne
es
lret
push
mov
pop
mov
inc
mov
push
mov
sbb
int3
push
iret
push
cmp
xlat
xchg
movsb
or
jno
addb
out
pop
lods
out
aad
add
push
pop
xor
loopne
rcll
xlat
lahf
lret
loopne
push
xchg
idivb
imul
pop
pop
xchg
int
dec
ret
and
dec
orl
stos
pop
xor
rolb
inc
ljmp
mov
xchg
add
or
clc
or
aaa
mov
fwait
stos
pop
fwait
mov
bound
adc
into
fdivl
and
lcall
int3
cs
mov
jge
add
call
sbb
loop
mov
sub
rcrl
adc
sahf
add
adc
std
inc
mov
inc
or
sub
out
pusha
push
sbb
cltd
jmp
les
add
cmpb
mov
data16
cmp
push
mov
and
cmp
push
jmp
out
push
jmp
jmp
outsl
into
mov
in
ret
addr16
fs
pop
sub
and
aam
cmc
ja
pop
jge
repnz
adc
std
sbbl
fldenvs
pop
stos
ds
push
mov
testl
cmovge
daa
jmp
pushf
popf
jnp
lret
aam
cmpsl
or
push
xchg
js
out
imul
jae
aas
jecxz
adc
sub
cli
repnz
lods
pop
and
mov
mov
das
lahf
push
inc
inc
mov
insl
mov
fistpll
cld
xchg
jge
jecxz
mov
aad
mov
push
dec
ds
add
int
enterw
ds
cmp
or
xor
xchg
xchg
sbb
lea
fcmovnu
sbb
insb
addr16
mov
rcrl
icebp
inc
adc
add
dec
jns,pn
pop
test
imulb
pop
mov
in
outsb
imul
xchg
call
cmc
pop
out
bound
mov
pop
hlt
and
aaa
jns
imul
outsb
mov
jge
mov
into
ljmp
int
and
fwait
mov
out
push
mov
dec
adc
loopne
aad
lcall
inc
sti
popf
push
pushf
mov
data16
iret
adc
xchg
dec
jns
sbb
adc
clc
out
sahf
inc
dec
sub
lods
int
add
push
leave
dec
mov
rolb
mov
mov
xchg
mov
jns
mov
jae
and
lods
cwtl
dec
pop
dec
aas
insb
or
push
ss
dec
push
outsb
xchg
dec
cmp
ljmp
adc
mov
cli
lret
stc
and
push
mov
push
push
adc
xchg
push
movsb
sbb
test
cltd
sub
mov
int3
add
out
outsl
xor
jae
push
aaa
lahf
cs
xor
fldt
pop
insl
jge
leave
dec
loope
pop
cltd
xor
jmp
xor
call
fiaddl
inc
cld
out
nop
int3
sub
pop
aaa
push
xchg
lret
mov
cli
adc
out
mov
xor
jbe
jb
push
and
lods
and
or
out
aas
iret
pop
xor
call
out
and
sarl
mov
mov
ret
cwtl
inc
sar
xchg
scas
cmpsb
xchg
jge
arpl
movsl
test
psadbw
addr16
negb
push
xor
popf
or
neg
scas
mov
les
xchg
push
mov
lahf
adc
lds
popf
dec
sbb
aas
cmp
icebp
xorb
push
data16
testl
xor
inc
lock
push
repnz
dec
sbb
pop
xchg
sbb
mov
call
pop
pusha
add
add
daa
sbb
nop
andl
ret
cs
mov
fs
push
andl
dec
scas
xor
cli
and
insl
and
test
bound
mov
xor
cwtl
pop
call
test
repnz
call
and
out
and
rclb
les
sub
lea
shl
test
es
sbb
mov
sbb
insl
push
jb
add
jo
jnp
mov
js
mov
sbb
dec
jmp
sub
push
cmpsl
mov
cmp
je
loop
adc
out
pop
xor
pop
add
stc
cmp
pop
sub
ficompl
or
add
out
mov
sbb
jle
add
sub
pop
mov
sti
mov
jnp
mov
push
mov
in
and
out
adc
nop
fcmovne
ljmp
add
or
fiaddl
dec
aas
cld
test
mov
xchg
xchg
adc
adc
bound
gs
pop
and
test
mov
xchg
imul
jae
jg
jo
rcrb
ljmp
mov
pop
jmp
jns
nop
inc
sbb
jge
push
or
mov
mov
sbb
pop
cmp
fidivs
movsb
mov
jb
sti
pmaddwd
cmpsb
jp
aam
stc
mov
pop
cld
mov
push
pop
or
jl
mov
xchg
add
sbb
push
push
mov
stos
mov
and
sub
jns
add
cld
dec
mov
mov
shl
push
test
inc
mov
cli
mov
roll
inc
int
mov
ljmp
test
shrb
cmovb
in
arpl
pop
xor
ret
cltd
jp
jle
jmp
adc
inc
dec
and
xchg
fnstcw
mov
es
xlat
cmpsl
inc
mov
sbb
fs
jbe
cltd
dec
loopne
orl
inc
xorb
pop
fsub
inc
stos
sbb
mov
and
aaa
push
jnp
aam
cwtl
pop
outsl
stc
in
fmuls
es
hlt
ret
ret
pusha
cmc
addr16
cmpsb
and
and
out
and
sarb
rcrb
sbb
int3
and
arpl
jo
insb
fisubl
mov
int
ss
pop
fldl
in
xchg
test
xlat
test
mov
fsubrl
lods
push
xchg
push
hlt
inc
fstl
mov
xchg
iret
in
fwait
cmpsb
outsb
mov
scas
pop
sti
imul
sbb
repnz
ja
inc
pop
nop
mov
inc
sbb
lock
inc
mov
nop
dec
pop
daa
mov
std
sbb
js
mov
xchg
cld
add
mov
jmp
rorl
mov
sbb
je
mov
add
mov
mov
mov
repz
mov
mov
push
xchg
dec
jb
mov
je
cmc
xchg
mov
lret
add
mov
outsb
push
imul
mov
call
ds
fcmove
mov
lods
and
out
mov
push
xchg
adc
mov
pop
hlt
sbb
in
mov
in
xor
out
clc
addr16
and
cmp
shll
idivl
mov
inc
mov
push
data16
inc
ljmp
pop
xchg
lret
mov
pop
mov
je
sbb
test
cmp
pop
push
lods
dec
mov
mov
fsubr
faddl
jno
daa
pmaxsw
mov
jp
movsl
bound
and
pushf
xchg
mov
add
push
xlat
stc
scas
xlat
cltd
xor
mov
add
add
aad
push
inc
clc
adc
dec
fwait
sub
call
jmp
sbb
add
xchg
push
or
push
roll
imul
pop
mov
sbb
mov
jge
jo
xor
jge
ficomps
icebp
stc
lret
push
add
adc
push
pop
mov
xchg
std
in
jae
popa
rorl
or
adc
lods
mov
dec
push
jns
jns
jnp
outsb
lahf
out
pop
cmp
lret
imul
jne
add
sti
sarb
xor
and
jge
stc
nop
movsb
bound
call
pop
mov
inc
cmpsl
lods
in
or
xchg
lods
mov
nop
sub
mov
mov
xchg
mov
mov
scas
adcb
inc
inc
push
enter
jg
movsl
cmp
dec
data16
out
pop
sub
fistpl
mov
out
cld
mov
ja
add
addr16
mov
icebp
testb
aaa
and
daa
jmp
test
adc
and
ficoml
push
cmp
push
sbb
dec
mov
icebp
pop
ret
cmc
pop
adc
push
rol
lea
scas
xchg
ljmp
repnz
xchg
xorb
les
jecxz
or
jae
sbb
rcr
data16
mov
push
adc
test
leave
pop
cmp
aaa
pop
loope
sahf
std
test
xlat
jae
popf
mov
sub
loopne
shrb
test
xchg
or
jge
jns
test
push
ret
or
aam
psrlw
xor
pop
jne
ss
or
cmpb
gs
cld
sbb
dec
xchg
orl
pushf
aas
sahf
or
add
out
clc
push
push
pop
popa
scas
push
sbb
pop
mov
push
pop
lret
mov
push
addb
pop
out
or
adc
data16
sub
lods
js
rcl
jecxz
rcl
inc
fwait
lret
mov
mov
jno
insb
aad
fcoms
cmc
stc
arpl
test
in
push
stos
sahf
pop
test
hlt
and
xor
mov
or
shrl
lret
popa
mov
dec
in
inc
fistl
hlt
test
iret
xor
cmpl
dec
adc
cmpsb
pop
mov
push
mov
xlat
sbb
xchg
movsl
inc
adc
or
test
add
inc
add
add
lods
faddl
add
add
inc
xor
add
push
add
pop
mov
push
push
add
lods
in
inc
add
add
add
ljmp
dec
push
jae
pop
andb
xor
dec
mov
adc
es
fwait
adc
iret
fnstcw
loopne
gs
stos
sahf
std
mov
fistl
mov
insl
and
sbb
xchg
jecxz
adc
ja
clc
rorl
pop
cmc
adc
jbe
or
xchg
xorl
icebp
ret
xchg
insb
dec
xchg
lcall
mov
clc
mov
mov
cmpsl
push
shll
xor
shr
push
scas
cmp
outsl
nop
mov
gs
mov
out
in
int
popa
cmp
mov
fucomip
push
imul
dec
rclb
jp
xor
xor
negl
mov
into
cltd
mov
jno
xor
loope
push
shlb
push
jae
dec
push
pop
mov
mov
and
xchg
inc
xchg
xchg
in
dec
cwtl
and
rcrl
sarb
xor
dec
in
stos
adc
aas
test
jne
in
std
sub
out
jg
cmpsl
mov
lods
add
xchg
mov
addr16
scas
sti
pop
popf
pop
outsl
sbbb
je
mov
or
dec
test
mov
lods
or
jno
iret
hlt
in
adc
inc
shrb
rclb
cmp
pop
sub
jle
mov
fadds
xchg
or
in
gs
sahf
push
inc
fs
ficoms
adc
icebp
insl
cmp
sbb
loope
bound
dec
je
xlat
shlb
sarl
pop
mov
pop
call
mov
enter
movsl
adc
push
into
cmp
addl
dec
sub
das
dec
scas
sub
into
push
mov
je
jge
mov
mov
add
ss
xchg
add
or
test
xor
dec
cmpsb
adc
cld
imul
int3
and
cmpsb
mov
or
or
dec
pop
push
cmpsl
fstl
int3
sbb
rolb
pop
out
aam
jp
or
and
stc
fmuls
and
lock
jb
mov
cmp
lds
mov
enter
xchg
sub
cmpsl
int3
xor
pusha
adc
mov
jno
ljmp
sarb
mov
popf
das
iret
je
xor
cmp
inc
ja
in
sbb
mov
and
sub
pop
mov
gs
jbe
or
xchg
sub
pop
xchg
mov
lock
xchg
jl
sub
and
orb
jne
mov
add
adc
roll
sbb
rorb
push
dec
xor
arpl
aas
arpl
stos
or
sahf
mov
lods
lods
xchg
fs
mov
mov
sbb
cld
cmp
jae
cli
xchg
aas
add
insb
jecxz
loop
mov
inc
xor
xlat
inc
inc
jne
int3
lds
jns
push
stc
or
clc
dec
imul
xlat
mov
outsl
mov
mov
fimuls
jp
loope
jbe
xchg
xchg
xor
and
outsb
jmp
add
cmpb
pop
mov
aad
xchg
push
push
cmp
repnz
push
adcl
jno
aad
jge
dec
sub
cmp
adc
push
ljmp
cmpb
adc
in
jb
adc
ret
jne
adc
test
movsb
dec
in
fsubp
and
dec
xor
shlb
pop
inc
outsb
movsb
push
aad
pop
ds
lret
repz
hlt
push
pop
fwait
xor
push
sub
out
dec
mov
clc
roll
mov
xor
lea
cwtl
out
fisttps
leave
cltd
dec
jns
adc
adc
push
inc
cmpsb
jecxz
dec
rorb
lahf
xor
add
shr
fdiv
out
or
sbb
sbb
in
incl
out
stos
loopne
aam
mov
jno
cmc
sbb
aam
push
fimuls
dec
repnz
inc
out
loope
fcompl
or
mov
sub
in
aas
mov
and
mov
out
leave
lock
out
js
pop
push
mov
mov
pop
rcll
cmp
lods
aam
mov
inc
lods
and
cld
lods
xor
fcoml
out
mov
or
or
add
mov
jae
out
int
push
xor
fcomip
in
jle
inc
jg
dec
jp
or
outsb
divb
jns
pop
add
ljmp
xchg
pop
and
add
cmp
mov
push
and
mov
mov
push
lea
mov
and
int
xchg
sarb
clc
outsb
cmp
test
jns
scas
nop
sub
pop
lea
in
lods
enter
jnp
ret
jnp
std
cmc
popf
jge
addr16
in
and
ds
out
push
xor
push
andb
in
pop
push
in
into
cs
add
insl
cmp
fmuls
fmuls
loopne
nop
adc
jb
lods
aas
cmpsb
mov
lcall
jno
out
loope
jne
sbb
jns
add
inc
cs
data16
aaa
adc
add
sub
test
cs
cmp
leave
rclb
in
scas
add
mov
xorl
sbb
cmp
adc
add
sub
call
mov
push
jne
mov
pop
dec
dec
or
fildl
int
iret
xchg
out
cmpsl
lock
and
test
addr16
hlt
jle
mov
and
sub
pop
ret
xor
push
pop
push
rorb
es
and
xor
sbb
pop
fwait
sub
pop
cmp
repnz
enter
push
std
mov
mov
mov
dec
leave
dec
inc
xchg
xor
and
lcall
add
pop
pushf
popa
jne
xchg
leave
jnp
mov
cmc
std
test
into
stos
sbb
lock
idivl
pop
push
mov
or
sbb
fwait
mov
xor
mov
hlt
mov
dec
mov
jp
push
jmp
pusha
daa
mov
ret
insl
dec
test
int3
pop
lret
clc
aam
and
pushf
pop
push
mov
sbbb
inc
fcompl
sti
daa
shl
inc
push
aaa
xor
in
repnz
lcall
rorb
adc
std
jp
inc
sbb
popf
and
lcall
jb
fwait
ja
cmpsl
jne
jne
sub
mov
pop
xor
cli
push
aas
xor
shl
pop
inc
pop
test
xlat
xchg
subb
leave
ljmp
xchg
mov
ja
int3
dec
and
and
and
inc
pusha
lods
leave
test
loop
outsl
jb
ja
push
out
int
or
mov
outsb
fadd
pop
mov
mov
dec
cmp
lret
stos
imul
mov
mov
and
jecxz
mov
fwait
mov
mov
mov
push
mov
xchg
dec
inc
mov
nop
mov
add
add
mov
scas
sbb
movsb
jb
inc
insl
or
cmpl
in
jbe
ss
jno
loopne
aas
cmp
or
xor
shr
fistpl
push
test
or
mov
mov
cmp
jp
inc
pop
jg
mov
xor
leave
jb
in
lods
mov
push
xor
pusha
lock
jae
insb
pushf
mov
call
push
jmp
push
sahf
imulb
cmp
mov
pushf
repz
sbb
push
sbb
cmp
and
ds
lahf
jb
insl
decl
fdivs
lock
and
loop
sub
push
idivb
and
jae
adc
in
xor
dec
inc
mov
jo
push
cmovl
cwtl
fcomi
cs
inc
test
ret
aas
js
xlat
jl
fnstenv
mov
xlat
and
mov
rolb
push
pop
xchg
mov
gs
dec
or
js
idiv
adc
adc
insl
jle
xor
mov
loop
loopne
test
stos
popf
repz
unpckhps
push
mov
or
dec
mov
das
mov
push
push
pop
adc
aad
fimuls
or
dec
push
lds
adc
in
sbb
fwait
enter
pop
fists
cmp
inc
out
shl
mov
out
mov
aam
mov
pop
dec
dec
mov
shrb
in
jne
loopne
test
push
push
sub
sar
stc
or
cmc
jno
test
sub
mov
jle
test
scas
pop
fstps
inc
mov
mov
sub
lods
cmp
mov
pop
mov
sarb
mov
ret
mov
pop
inc
xor
test
mov
es
cmp
aam
xor
icebp
and
test
pop
sub
jne
or
lret
mov
loope
xchg
insl
add
sbb
insb
inc
jno
pop
movsl
jnp
mov
mov
push
ss
fwait
mov
push
fcompl
sti
or
push
mov
shlb
aas
out
pop
fldlg2
dec
cmc
sarb
in
and
inc
push
dec
xor
add
int
and
push
jmp
lods
sbb
xor
movl
sub
dec
push
fdivrs
mov
les
outsb
fildll
xor
pop
ret
push
push
lcall
shlb
fs
and
outsb
add
mov
xor
add
mov
lret
pop
cs
mov
xchg
int3
insl
dec
mov
mov
xchg
cs
jae
inc
es
jns
scas
or
cmp
mov
xchg
or
pop
push
xor
fcoml
loope
jg
rol
mov
jmp
mov
push
jp
imul
dec
xchg
push
js
cmp
push
mov
jb
pop
inc
imul
dec
ret
push
pop
aam
test
faddl
repnz
inc
addb
pcmpgtd
and
imulb
pop
mov
out
jns
aad
mov
mov
jge
mov
inc
sub
mov
mov
pop
mov
pop
or
mov
cs
push
aas
mov
fs
cmp
jg
adc
inc
add
pop
or
mov
jae
jns
dec
lcall
mov
lahf
push
mov
dec
out
pop
leave
ror
sub
dec
pusha
xor
add
push
pop
mov
pop
aaa
bound
mov
stos
jae
test
test
jl
mov
loopne
xchg
pop
addr16
icebp
dec
aas
gs
outsl
cmp
push
negb
test
adc
push
daa
jg
and
inc
and
xor
dec
pop
pop
and
lods
mov
cmpb
inc
inc
mov
mov
add
or
xchg
popa
mov
mov
call
leave
add
test
cmp
fs
adc
shrl
fs
out
ss
add
dec
ljmp
cli
imul
xor
pop
leave
push
cltd
inc
cmp
mov
pop
or
mov
iret
lea
inc
sbb
call
rorb
sub
push
mov
fwait
jg
ds
push
push
ret
adc
sbb
scas
int3
jge
fwait
adc
ja
mov
cmp
inc
xchg
dec
arpl
jle
xchg
ja
enter
push
lds
lret
cs
repz
or
fwait
jp
xor
xchg
scas
xchg
mov
int
in
ficoms
andb
xor
negl
pop
xor
lock
movsb
mov
pop
jae
xorb
cli
insl
testl
in
jbe
sarl
leave
popf
mov
sub
adc
inc
and
lods
stos
int3
cmp
xor
mov
sub
pop
sbb
cmp
jl
loopne
fdivrp
int
test
insl
pop
mov
lea
inc
dec
enter
xchg
pop
pop
fs
sahf
jae
mov
sub
push
mov
mov
adc
lea
roll
into
sbb
out
push
and
or
int3
jbe
mov
add
scas
lds
push
clc
fsubrp
out
sub
and
rcl
pop
mov
ss
sub
push
lods
jmp
lds
negl
push
out
push
adc
pop
xor
pop
push
lret
in
cmc
sbb
mov
jnp
xchg
dec
stos
cld
or
mov
out
jns
xor
sub
rol
rcl
lea
inc
fisubs
dec
or
sarl
in
xchg
fldt
mov
jns
mov
fcomps
and
dec
fidivs
dec
mov
mov
shr
lods
loopne
ret
divb
xor
repz
and
test
cmp
loop
out
sub
sbb
jp
xor
mov
sub
add
cli
adc
pop
mov
dec
mov
ds
pop
pop
int3
insb
pop
lret
faddl
addr16
inc
inc
aad
out
xor
xchg
int3
sbb
aaa
test
stos
clc
fadds
subb
jnp
lods
clc
fwait
push
push
loopne
adc
loopne
ja
push
pop
mov
push
fcmovne
xlat
lahf
loopne
sahf
gs
imul
sub
push
push
pushf
and
out
lds
mov
movsl
jecxz
push
xchg
cld
lods
daa
data16
int3
xor
dec
xchg
mov
cmp
stos
and
mov
jp
inc
call
jp
imul
mov
ss
scas
xchg
popf
push
loopne
mov
xchg
jns
mov
push
pop
nop
arpl
aad
sub
or
dec
movsl
es
mov
xchg
jg
fistpll
rolb
mov
inc
sahf
fisubs
ja
fidivrl
push
mov
lret
scas
insb
cmp
fisttpll
sub
and
cmpsl
xchg
adcb
sub
fcoms
mov
xchg
adc
sarl
enter
fiaddl
lock
adc
popa
callw
pop
loope
test
popf
out
nop
in
cld
scas
adcb
dec
inc
sarb
sti
das
loop
sbb
stc
dec
pop
inc
int3
jl
xchg
push
sub
out
es
sub
jecxz
dec
push
adc
test
jg
subps
add
shlb
leave
jg
add
sub
cmp
xor
xor
jmp
inc
push
bound
push
dec
fs
fwait
popf
xor
ds
loopne
addl
dec
fsubs
mov
clc
cmc
fisttpl
gs
add
popl
sbb
adc
ret
into
or
insb
cmpsl
and
dec
push
inc
fs
out
xor
lock
jl
es
int
cmp
push
mov
movsl
ret
sbb
cmp
inc
or
je
cmc
sahf
hlt
lods
loope
ret
in
notb
ja
fldenv
iret
test
aas
add
push
pop
push
roll
pop
xor
loopne
or
sbb
popa
adc
cld
dec
scas
out
iret
push
into
ljmp
adc
pop
popa
outsb
xchg
fldcw
jns
push
test
orb
push
and
fsts
add
and
outsb
push
sbb
fimuls
in
mov
cmp
mov
mov
mov
sbb
sbb
dec
outsb
dec
pop
adc
add
negl
mov
scas
fldenv
mov
or
test
jbe
pusha
sbb
hlt
push
xor
sbbl
jne
aaa
push
xchg
pusha
xor
push
sbb
das
scas
mov
les
inc
mov
les
addr16
std
mov
push
add
or
loopne
inc
xchg
or
push
xchg
mov
sub
inc
shrl
mov
inc
cmc
jge
lds
adc
dec
or
addb
pop
fstpl
sti
sub
add
btr
push
push
mov
adcl
out
lds
mov
adc
or
cmp
popf
pop
dec
movsb
nop
sub
xor
push
out
mov
lahf
push
clc
xchg
mov
sbb
lock
mov
lret
sub
cmp
ja
shrl
fs
sbb
ffree
sub
lods
jp
mov
mov
fwait
sub
sub
int3
and
push
fwait
mov
sub
adc
mov
sbb
push
imul
lea
shll
sbb
adcb
push
sub
mov
xor
pop
aaa
xchg
cmc
cmpsl
and
in
jmp
or
mov
shrl
stos
pop
outsl
lret
dec
pop
sub
sti
pop
outsl
jg
xor
test
dec
dec
xor
notb
call
mov
adc
icebp
je
imul
insb
scas
pop
and
stos
in
and
or
aam
inc
sub
mov
in
jae
idiv
repz
stos
ljmp
fcmovne
out
push
ds
xchg
outsl
cltd
or
jle
dec
imulb
enter
and
cli
xchg
add
cltd
sub
xchg
pop
aaa
cmpsb
push
jmp
mov
jge
outsb
cmp
lea
fwait
scas
inc
sub
bound
push
add
sbb
push
inc
jb
inc
mov
mov
jnp
jl
xchg
outsb
ret
aaa
xchg
adc
int
outsb
or
mov
in
or
rcll
jge
enter
hlt
push
outsl
add
cmp
lcall
out
jp
notl
adc
arpl
cmpsb
dec
int3
out
out
loop
sbb
add
js
les
mov
fwait
push
movsb
mov
sbb
int3
decb
sti
or
mov
dec
cli
orl
pop
stos
movsl
inc
aam
sbb
call
push
push
adc
push
neg
clc
sub
rolb
dec
repz
inc
aaa
adc
frstor
add
xor
jmp
mov
jge
adc
pop
mov
xchg
and
jg
cld
fistpl
call
push
lods
fsubrs
jnp
out
add
lock
adcb
push
int
scas
cmp
out
xchg
ret
cmc
mov
cmp
mov
cwtl
xchg
push
push
fdiv
mov
push
lods
pop
add
out
shlb
inc
jg
pop
iret
add
cmpl
or
adc
ret
pop
mov
add
sbb
lock
roll
stc
cli
dec
popf
cmp
ja
xor
adc
and
jl
aad
or
dec
cs
into
mov
mov
pop
xlat
pop
add
aad
jae
in
ret
cmp
data16
cmp
mov
push
mov
dec
cmp
xor
icebp
pusha
push
popa
mov
jge
insb
sub
mov
cmp
cmp
xor
pop
push
pop
out
shlb
xchg
cltd
inc
lds
outsl
xchg
lods
dec
jns
or
or
loope
xorb
stos
xchg
mov
or
nop
pop
cmc
dec
jne
fldt
fnstsw
jl
jmp
dec
leave
jb
fcomps
xchg
jmp
sbb
inc
push
jmp
aaa
test
icebp
pop
mov
xor
fwait
je
int3
call
in
dec
pop
call
pop
mov
int3
adc
mov
adc
out
shll
jp
xor
clc
loope
dec
cmc
xchg
movsb
sbb
out
jge
sbbb
push
push
popf
or
jo
sbb
or
nop
jmp
daa
loop
fadd
lahf
push
outsb
pusha
inc
loopne
sub
adc
cmp
or
xchg
mov
cs
mov
mov
cltd
sub
in
jnp
mov
xor
ret
xchg
lahf
test
mov
jns
ljmp
ret
push
into
dec
sub
imul
push
je
popf
sarb
inc
leave
pop
icebp
sub
fucom
xchg
cmp
das
lcall
xor
ljmp
fdivrl
mov
les
mov
sahf
add
daa
sub
fldcw
inc
int
mov
lea
ret
adc
xchg
data16
or
adc
out
sbb
nop
aas
cli
out
mov
subb
jl
pop
lahf
push
das
jnp
pop
fdivr
ljmp
add
out
mov
adc
cld
enter
pop
nop
in
lret
movsl
dec
into
loop
lods
mov
imul
orb
cmp
adc
js
xor
int3
call
mov
fmuls
xchg
pop
std
pop
int
pop
lahf
js
cld
mov
mov
xor
and
or
dec
jne
adc
jl
push
ret
stos
inc
data16
xor
dec
shrl
and
popf
iret
das
sahf
add
cltd
pop
push
das
jo
jbe
insb
cmpsb
int
push
dec
adc
jp
jle
filds
push
cltd
lea
std
add
jno
clc
out
cwtl
xor
or
ljmp
push
jae
add
movsb
push
stc
xchg
mov
cld
xchg
mov
sahf
mov
hlt
add
lods
push
xlat
pop
sub
dec
in
cmpsb
mov
test
aaa
out
or
fldt
cmp
jne
inc
xor
loope
icebp
xchg
push
add
xor
add
jmp
cltd
or
mov
adc
add
sub
out
mov
sub
mov
inc
ret
inc
aas
jge
jge
lahf
jne
movb
in
btr
es
aad
pop
or
mov
pop
call
scas
jne
or
jb
fistps
hlt
mov
int3
ds
ret
cmpsl
stos
xor
add
mov
ret
dec
sbb
xor
adc
push
mov
mov
in
sub
insb
movsb
xchg
push
inc
pop
cmp
mov
xchg
je
in
icebp
jmp
in
in
pop
adc
mov
jnp
bound
imul
out
ljmp
mov
loop
lods
adc
cmp
rcr
into
mov
mov
fdivp
nop
xor
paddusw
sub
jmp
fstps
xor
aaa
sub
inc
in
rcll
mov
mov
pop
lret
mov
decb
push
fldl
test
inc
int3
pop
pop
dec
cmp
push
xor
pop
jmp
or
push
les
and
jbe
cli
fsubrs
stc
xchg
mov
jge
fldcw
sbb
sub
adc
data16
negl
adc
adc
sbb
mov
outsb
test
jnp
stc
mov
jbe
cmpl
sbb
data16
fwait
mov
or
mov
lods
in
rcrb
and
loopne
xchg
xor
cmp
dec
mov
mov
je
fnsave
lahf
int3
in
lret
test
mov
mov
xchg
arpl
and
fiadds
cmpsb
fiadds
gs
mov
in
xchg
out
sbb
mov
shr
jg
or
in
imul
minps
sub
sahf
daa
mov
adcl
out
es
sbb
movsb
add
test
movsl
mov
inc
aaa
cltd
inc
sbb
cmp
and
xchg
dec
push
mov
sub
out
test
mov
fs
jae
lds
or
iret
int3
or
mov
xchg
adc
adc
or
aaa
sbb
fisubrs
loope
mov
and
cli
in
xlat
cmp
stos
mov
cmp
mov
repz
gs
xchg
nop
scas
pop
jge
fimull
xchg
das
sahf
push
add
sahf
ds
nop
shl
pop
insl
and
les
call
fs
outsb
jno
jo
mov
fwait
int
fisubrl
stc
or
in
adc
mov
jno
mov
adc
imul
enter
aas
jnp
xchg
mov
add
mov
jb
jno
lock
test
xor
inc
sti
mov
in
andb
lret
in
jmp
push
fsubs
xchg
mov
or
fbld
adc
enter
dec
test
out
aad
fs
pusha
aad
xor
mov
xchg
and
in
es
sar
data16
xchg
adc
mul
testb
loopne
int
inc
inc
jp
sbb
and
icebp
mov
lcall
fs
jb
test
fcomps
jp
incb
xor
xor
rorl
sub
sub
jmp
out
add
mov
xchg
aam
popa
adc
or
rcrb
scas
xchg
jae
shll
inc
mov
xor
jae
out
jle
imul
test
push
aas
test
adc
pop
inc
mov
idivl
rolb
dec
pushf
mov
xchg
aas
sbb
add
cmp
jne
inc
inc
and
push
aas
dec
sbb
ret
aaa
stos
movsl
mov
pushf
mov
decb
rorl
pop
stos
pop
lods
aas
mov
jg
mov
and
popa
mov
xor
nop
and
jg
xchg
sahf
dec
add
pop
roll
and
dec
add
add
aaa
push
scas
pop
js
aas
sti
mov
sti
sub
stos
xchg
int3
adc
lods
cmp
mov
addb
jb
scas
adc
fisubs
and
jbe
subb
jnp
mov
insb
mov
xchg
mov
lock
push
jecxz
ret
sub
pop
cmpsl
test
inc
aaa
fcomi
inc
or
and
mov
ljmp
ja
mov
xlat
lret
sub
inc
adc
ret
push
mov
mov
mov
imul
ret
jno
xor
shll
enter
das
pusha
adc
nop
jbe
and
fwait
rol
stc
in
loop
push
push
bound
imul
ret
pop
pop
insb
ds
sarb
mov
insl
xchg
pop
dec
hlt
sub
jno
xor
inc
movsb
int
mov
loope
std
mov
mov
jb
pop
in
push
sbb
and
mov
or
rclb
xchg
enter
mov
push
xchg
xchg
aad
jb
sahf
sub
adc
paddsw
fcoms
loop
inc
xchg
mov
int
dec
cmp
iret
stc
sub
insl
and
xchg
mov
std
pop
loopne
inc
lcall
clc
lock
inc
jmp
jb
xor
push
jp
and
lret
mov
add
addl
std
pop
insb
aaa
jnp
in
loop
mov
push
test
or
sbb
sub
mov
sbb
and
pop
je
xchg
jge
and
mov
jb
xchg
inc
aam
mov
sub
hlt
mov
out
and
xor
push
sbb
jbe
fwait
lock
aaa
push
mov
jbe
push
andb
hlt
xor
and
cmpsl
jae
inc
sahf
jge
js
or
ja
mov
call
popa
scas
in
adc
xor
out
sub
mov
pop
jb
cmp
dec
iret
lock
jmp
mov
mov
adc
clc
xor
mov
jnp
adcl
aad
push
mov
cmp
pop
cli
and
movsb
cs
imul
ficompl
in
mov
xlat
aaa
jmp
shlb
dec
push
pusha
adc
pop
icebp
pusha
cmpsl
xor
xchg
dec
push
jns
into
cmp
xchg
ja
andb
dec
test
inc
fcoml
inc
sahf
mov
push
bound
mov
imul
fisttps
cmp
dec
dec
repz
addl
sbb
mov
das
sti
sbb
cmc
push
loop
pop
ret
lock
mov
dec
scas
ret
jno
test
xor
dec
cs
mov
cmp
lret
push
movsl
fsubrs
xchg
loop
inc
mov
mov
je
scas
fists
mov
cmp
mov
mov
xchg
push
add
cmp
adc
loope
ret
jg
mov
adc
les
sbb
bswap
jle
or
jae
jb
xor
loope
adc
and
jb
pop
sbb
add
clc
push
fnsave
sub
jo
lret
lret
push
xchg
fmulp
mov
insb
dec
mov
add
adc
shlb
sahf
push
or
add
fnstcw
adc
rorl
mov
into
bound
std
mov
pop
cmc
or
dec
xor
jno
pushf
jge
pop
jl
fs
cmpsl
pop
jae
or
cmpsl
pop
sub
pop
dec
lahf
rdmsr
push
xor
enter
subb
scas
jbe
xor
icebp
xlat
and
xchg
test
inc
push
pop
mov
aaa
xchg
ret
adc
je
iret
test
movsb
jmp
sbb
push
sbb
ljmp
ds
scas
insl
insl
out
mov
int
shlb
outsl
into
nop
xchg
sub
enter
push
inc
sub
dec
call
or
sbb
shlb
or
fsts
fimuls
lds
mov
mov
cmp
mov
cmp
mov
aam
mov
rcrl
outsl
cmp
daa
loopne
xor
mov
loope
notl
mov
in
scas
and
mov
xor
mov
dec
or
enter
xor
popa
cmpsl
cmpsl
push
xchg
jae
fs
popa
out
xlat
xor
inc
sbb
insb
ja
cwtl
push
std
stos
or
lds
popf
xor
fnstenv
sbb
jg
test
or
in
cld
jmp
loope
inc
xor
push
push
scas
or
iret
adc
dec
push
cmp
jbe
mov
mov
pop
ja
fwait
and
pop
lret
js
jp
scas
push
mov
mov
sub
push
sti
mov
inc
push
adc
dec
mulb
push
cltd
cmp
cmp
neg
cmp
and
mov
fildll
outsl
dec
addr16
jp
jl
push
shll
ret
sub
sub
cld
dec
sub
sahf
push
cmc
movsb
xchg
insb
cmp
ss
fstps
sub
jg
pop
out
enter
mov
and
fcmove
pop
sub
xchg
fistl
cmp
out
cltd
push
mov
roll
pop
cmp
lcall
sub
rcll
orl
adc
inc
and
inc
orl
sub
push
jp
push
and
push
fcomps
stc
insb
mov
xchg
sub
psrlw
cmp
pop
push
jno
push
mov
jb
or
pushf
sub
pop
xor
mov
mov
xor
ja
cmp
int3
mov
test
mov
ret
out
cmpsl
jbe
cltd
lods
push
and
sub
sub
pop
add
jnp
xchg
iret
imul
dec
cmpsb
dec
out
xor
dec
in
or
fstpt
sub
mov
sbb
jns
add
stos
and
dec
mov
rcrb
adc
and
mov
jbe
jecxz
mov
adc
fistps
sahf
divl
cmp
loop
negb
mov
cmc
jp
pop
int3
int3
in
pushf
or
or
popa
and
adc
int
data16
and
mov
or
add
loope
out
cmp
mov
mov
mov
out
sbb
cmc
sbb
mov
jns
xchg
jp
mov
mov
scas
roll
fsts
xchg
hlt
icebp
xor
rclb
outsl
adc
push
mov
js
xchg
push
mov
into
inc
int
aam
call
mov
and
cwtl
and
int
xchg
push
lret
pop
mov
shlb
int3
or
xchg
mov
daa
out
adc
jmp
xchg
push
pop
dec
jns
adc
ljmp
dec
ds
sbb
cli
lock
andb
lds
lock
popa
aad
out
pop
pop
mov
idiv
std
inc
pop
jle
ja
cmp
xchg
mov
mov
cltd
and
scas
jb
mov
sahf
loopne
push
ja
or
popf
cwtl
sbb
inc
cwtl
addr16
pop
loope
dec
mov
test
lret
lods
xchg
dec
sub
dec
dec
mov
mov
cmpsb
int3
data16
and
lds
call
pop
pushf
cli
sbb
jp
sbb
test
push
les
dec
aam
xchg
add
in
xor
sbb
sbb
mov
stos
push
jo
inc
xor
pop
pop
lret
pop
pushl
push
in
adc
mov
in
mov
and
mov
mov
inc
pop
sar
mov
push
sub
popa
je
popa
mov
pop
or
dec
xor
mov
ret
jnp
lods
sti
icebp
jne
mull
jge
test
hlt
cltd
sub
dec
mov
pop
adc
std
sbb
movsl
pusha
lret
sbb
push
sahf
push
in
adc
jno
mov
mov
and
xor
mov
xchg
adc
lods
lret
clc
sahf
and
into
dec
test
js
sub
mov
xor
movsl
dec
mov
shufps
outsl
mov
add
cld
fnstenv
push
dec
and
jle
inc
inc
sbbl
sbb
sahf
pop
test
mov
sub
std
push
push
mov
cmc
xchg
fldenv
clc
xchg
mov
icebp
stos
inc
pop
jp
mov
jp
sub
pusha
dec
add
mov
loopne
xchg
in
xchg
test
inc
popf
aaa
shrb
xorl
and
in
aas
loop
xchg
popaw
inc
jae
inc
adc
stos
push
enter
sub
insb
jge
loope
pop
pop
xchg
ficoml
or
fsubs
xchg
inc
mov
mov
fnstsw
mov
das
mov
xchg
mov
xor
xorb
imul
cmp
ficomps
pop
pop
mov
stc
adc
xlat
adcl
testl
adcl
les
mov
stos
dec
sbb
pop
jne
loope
cmp
dec
xchg
mov
xor
xor
xor
in
les
jo
loop
hlt
push
jge
xor
jle
mov
sahf
and
cmpsb
push
cmp
or
inc
sub
push
scas
inc
pusha
int
clc
imul
fbstp
nop
mov
push
test
loopne
pop
js
jo
pusha
repz
iret
jae
ds
adc
push
cli
sbb
mov
sti
pop
iret
pop
jno
push
mov
cmp
in
cwtl
inc
cli
dec
mov
rorl
cmc
andl
push
xor
inc
je
outsl
or
jnp
dec
or
mov
inc
jl
and
repnz
in
je
in
ror
stc
add
fdivrs
pop
inc
repnz
push
push
xchg
lret
ja
mov
push
jae
adc
in
or
cmp
mov
pop
push
dec
mov
int3
jbe
mul
scas
iret
dec
outsb
sbb
adc
sbb
dec
or
fwait
test
mov
dec
mov
dec
pop
out
fs
sub
popa
pop
mov
add
pop
sub
into
scas
sti
xor
std
in
xor
popf
out
es
jo
mov
cmpsl
ret
xor
imul
ljmp
and
rcrb
pop
je
or
test
sbb
and
push
jns
dec
adc
lods
mov
mov
call
inc
push
shrl
mov
cmp
xor
adc
xor
inc
push
jl
lock
xor
lahf
xchg
push
sbb
shlb
lds
test
bound
pusha
xorb
out
movsb
repz
cmp
inc
jnp
fwait
pop
cmpsb
jb
adc
fbstp
push
inc
popa
xor
cmp
addr16
cmp
sub
xor
mov
mov
cltd
lret
mov
stos
mov
call
pop
ds
or
inc
xchg
in
cld
mov
sbb
or
inc
andb
pop
lcall
pop
push
out
xchg
push
cmp
inc
sbb
jae
inc
dec
orl
ret
push
dec
dec
in
loope
sbb
pushf
testb
les
and
loop
xchg
jnp
leave
movsb
xor
out
icebp
cmp
jne
in
add
inc
and
inc
addr16
jno
or
sbb
fs
popa
push
jo
lret
lock
ja
push
xchg
jb
jle
repnz
sub
mov
out
adc
cmp
and
mov
sub
jmp
adc
cltd
in
mov
mov
out
rcrb
ljmp
dec
fcmovne
pop
cmp
std
mov
xlat
sub
fcmovnbe
cli
leave
fimull
mov
jge
daa
jo
aas
dec
shl
scas
ss
cmp
lds
cmp
add
push
scas
adc
sbb
adc
cmp
jg
push
mov
mov
add
xchg
rorb
mov
xchg
nop
fidivl
cmpl
or
adc
or
sub
pusha
mov
sub
jns
sub
addl
stc
xchg
sbb
test
cmpsl
imul
push
sub
jmp
or
mov
adcb
cwtl
adc
cmp
pop
fwait
pushf
xor
call
sarb
pop
pop
sbb
jl
and
mov
pushf
rcr
add
and
ja
aam
inc
in
fistps
jge
mov
int3
repz
cld
xchg
dec
lahf
int3
mov
movsb
test
loope
int
xchg
rorl
or
dec
mov
push
or
lods
pushf
pop
and
out
mov
popa
mov
cmovge
lea
mov
clc
insl
sbb
or
xlat
or
sar
adc
and
fnstenv
shll
or
cltd
pop
sarl
xor
inc
hlt
repnz
mov
dec
daa
push
xor
arpl
xchg
adc
xchg
pop
rcll
xchg
jl
jnp
sub
adc
rcrb
rcrl
in
mov
pop
subb
ret
fiaddl
lcall
mov
mov
cltd
nop
arpl
scas
cmp
out
mov
pop
xchg
cmc
es
stc
push
or
mov
jae
mov
out
mov
addb
lock
mov
or
mov
adc
jle
fs
lret
js
pushf
adc
mov
mov
jne
gs
cmpb
pop
or
sbb
xchg
shll
jns
cmp
pop
jbe
inc
in
sub
push
push
jle
lea
addb
mov
cwtl
adc
add
sbb
cmp
icebp
mov
stos
mov
push
mov
dec
enter
inc
inc
bound
sbb
scas
cmpsb
shll
xchg
adc
in
and
jg
les
jl
add
std
addl
xchg
jnp,pt
aaa
int
sbb
mov
inc
aad
push
dec
adc
pop
add
lcall
dec
loopne
mov
and
sti
pop
jnp
mov
pop
and
inc
ret
and
cmc
fcmovbe
sub
adcb
sub
push
add
ljmp
cmp
jb
pop
xor
xchg
rcl
push
mov
push
dec
imul
icebp
test
out
sub
ljmp
inc
cmp
cmp
mov
sbbb
xchg
test
or
js
jecxz
sbb
sahf
adc
jo
pop
dec
int
sbb
or
pop
mov
add
enter
repnz
divl
test
stos
sarb
add
mov
xchg
adc
cmp
stos
cltd
inc
jl
sbb
sub
js
push
test
jbe
push
push
sub
mov
push
jmp
add
cmp
stos
push
in
jge
mov
add
pop
or
push
addr16
sarl
ret
cmp
add
ja
gs
mov
inc
mov
loop
add
nop
dec
pop
fistl
mov
mov
aam
add
xor
push
fwait
push
push
rorb
scas
in
lds
mov
in
jle
imul
inc
fdivrs
clc
cmp
sub
dec
xor
pop
lock
outsl
inc
fs
inc
daa
scas
sub
addr16
mov
jle
and
out
push
push
push
dec
push
iret
rcrb
clc
xor
lret
hlt
lods
int3
mov
hlt
or
lods
push
cmpsb
hlt
out
outsb
shrl
add
cmp
mov
lods
repz
out
ds
mov
mov
aam
dec
dec
scas
mov
les
sub
dec
add
xlat
push
enter
out
stos
jmp
dec
jecxz
xchg
fdivrl
xchg
xchg
mov
mov
jmp
scas
xchg
push
fmull
or
rcrl
and
sub
sbbl
mov
call
add
mov
xor
int
in
inc
mov
es
add
adc
dec
ror
addb
jae
jg
sti
pop
pop
fwait
push
sub
xor
xchg
mov
cs
out
mov
xchg
pop
ror
xchg
insl
xlat
push
sub
push
xor
enter
cltd
sub
aam
jnp
pop
xchg
scas
imul
or
cld
out
and
push
inc
xor
jmp
dec
dec
lock
or
stos
mull
ret
jmp
lods
dec
mov
cmc
bound
je
mov
out
push
insl
negl
cmp
add
aad
das
mov
mov
xchg
and
inc
inc
outsb
aad
add
repz
divl
sbb
adc
adc
xchg
in
mov
xchg
outsl
push
cli
push
outsl
enter
pop
inc
mov
loopne
cmpsb
loopne
aad
dec
lcall
repnz
imul
push
fstpt
cs
push
mov
cwtl
hlt
das
or
or
rcrb
ret
jno
gs
andb
shll
xchg
sahf
outsl
sti
and
pop
or
gs
inc
call
int3
sub
mov
jmp
call
aas
jmp
outsl
les
pop
aam
lods
mov
xchg
idivl
lahf
push
xchg
pusha
mov
shll
in
and
push
push
add
and
out
push
jnp
pop
popa
adc
xor
and
pop
and
orb
add
lret
arpl
cmpsb
pop
bound
bound
dec
cs
test
fwait
push
sub
arpl
adc
push
adc
sbb
pop
and
mov
pop
imulb
std
clc
dec
inc
or
cmpb
into
sbb
into
in
stc
pop
js
inc
in
push
and
outsl
mov
cld
mov
push
lcall
and
pop
shlb
pop
pop
mov
repnz
or
cld
xchg
jp
and
out
adc
and
mov
ret
jbe
cmc
inc
test
mov
dec
lods
mov
or
movsl
xor
pop
ja
dec
cmp
xchg
cltd
pop
cli
idivl
push
arpl
mov
mov
shr
mov
popa
inc
xlat
das
nop
inc
xor
rol
add
sbb
cltd
not
stos
movsl
fstl
sub
dec
xchg
movsb
push
outsl
movsb
cmp
hlt
mov
rcrb
lock
adc
fidivrs
rep
xor
push
xor
mov
sbb
xlat
jo
pop
push
jmp
sub
inc
ds
mov
in
add
add
jno
push
sbbl
add
adc
movsb
sub
xor
jge
jl
in
fisttpll
add
cmpb
xor
push
mov
add
or
adc
popf
cmpsb
pop
push
jo
and
jmp
sub
orb
and
cmp
sbb
or
cmc
sar
cmp
jmp
xchg
push
out
hlt
push
repz
mul
and
add
cmp
xchg
pop
aad
lds
out
jne
jmp
add
push
add
call
mov
jns
test
mov
sub
jmp
shll
popa
stos
iret
sarl
xchg
int
pop
jbe
dec
scas
cmp
dec
lea
mov
jnp
jp
cmpsb
push
add
icebp
test
hlt
ret
sub
pop
lds
xchg
outsb
stos
mov
andl
mov
and
incb
stc
iret
hlt
cmc
xlat
in
js
adc
jge
in
inc
icebp
das
dec
add
xchg
cltd
fimull
cwtl
pop
insl
lret
push
and
inc
xchg
xchg
push
frstor
gs
add
mov
rcr
mov
imul
rcrl
adc
insb
sahf
adc
push
cs
leave
lret
pop
jne
bswap
call
adc
pusha
pop
push
pop
adc
ds
andl
lret
inc
int3
lret
ret
add
inc
or
insb
fdivrs
shll
mov
mov
testl
packsswb
jo
or
mov
testb
outsl
pop
ret
sbb
lea
xor
sub
xchg
mov
fnstsw
dec
xorb
push
mov
ficoms
push
pop
movsl
pop
sarb
insb
fcomps
icebp
stos
call
nop
cmp
mov
and
jmp
adc
sub
lods
gs
sub
pop
lds
or
sub
xchg
ljmp
adc
aam
push
jge
repnz
mov
pop
sbb
les
test
add
nopl
ja
imul
sbb
mov
sub
jb
cmp
popa
lds
popa
sbb
cmc
out
pop
sti
pop
pop
mov
js
movsl
and
outsl
cmp
fdivp
lock
or
in
movsb
sarb
cmpsb
xchg
jle,pn
outsb
mov
negl
mov
push
jp
clc
cmp
xor
es
stc
hlt
int3
out
adc
adcl
add
divl
sub
sbb
add
dec
dec
and
outsb
add
mov
mov
fdivs
das
popa
sub
push
jbe
je
into
inc
pop
add
push
or
add
insl
popf
adc
xchg
pop
push
push
mov
jno
dec
rcrb
add
mov
sbb
cld
jmp
hlt
fxch
test
fsubl
and
fs
rcrb
mov
adc
stos
sub
imul
inc
mov
cmp
imul
aas
lock
xchg
rol
mov
pop
or
es
inc
pop
mov
inc
add
lods
xor
pop
test
repnz
mov
mov
and
in
lret
jp
add
mov
sbb
lods
ret
data16
mov
xor
pop
shll
rolb
loopne
lcall
xlat
sub
push
jno
push
or
dec
xchg
mov
sub
jl
stos
call
push
mov
mov
pop
je
inc
mov
insb
mov
dec
in
mov
mov
test
ret
mov
pop
mov
mov
stc
mov
xchg
mov
fwait
push
jne
inc
movsl
jae
sarb
mov
cmp
in
sub
test
out
neg
xor
or
mov
and
add
sub
mov
hlt
mov
xorb
xor
scas
int
pushf
inc
push
shlb
dec
cmpl
insb
jge
cmp
or
xchg
pop
lds
push
sbb
mov
mov
xor
call
hlt
movzbl
les
dec
sahf
mov
xor
cmp
loop
lea
int
hlt
insb
repz
mov
sbb
gs
push
test
push
fnstenv
dec
test
fiaddl
mov
cmp
cmp
inc
cmpsb
rcrl
scas
add
jg
sub
aam
dec
inc
mov
out
subl
call
xlat
push
mov
rcr
arpl
mov
int3
xchg
scas
clc
test
lods
mov
in
pop
push
dec
pusha
xchg
inc
sub
jle
lret
sahf
sbb
push
stos
xchg
mov
movsb
in
dec
mov
aam
or
and
test
sbb
mov
movsl
in
and
fcomp
int3
jmp
mull
add
lock
jmp
mov
test
mov
push
dec
dec
test
stos
pusha
add
add
cmpsl
mov
pop
jl
aas
out
shrb
adc
lret
aas
rorb
mov
mov
pushf
outsl
into
cli
lods
add
push
ficompl
ret
push
mov
jo
jns
jno
ljmp
leave
mov
hlt
cmpsl
xor
test
jbe
or
in
dec
mov
mov
cwtl
into
mov
loope
ret
repnz
lcall
sti
mov
cmp
xchg
sub
push
sub
mov
sub
inc
je
mov
add
ljmp
xchg
out
ds
test
stos
add
imulb
fisubrl
outsl
aaa
jle
ds
add
xorl
push
and
data16
data16
sbb
orb
out
fstl
mov
jb
sub
pop
fsubr
mov
rcl
xor
outsb
sbb
inc
push
movl
xchg
jns
imul
fdivl
mov
loopne
addl
mov
das
mov
sbb
cmp
test
xor
mov
cmp
out
sti
adc
push
xor
xor
arpl
push
dec
sbb
adc
das
ret
cmp
mov
in
jnp
sbbl
adc
and
stos
aam
jns
in
ljmp
pop
add
xlat
ja
push
data16
dec
and
popf
pop
jle
jmp
rclb
cmp
cmp
dec
out
or
pop
out
xchg
lcall
into
outsb
fnstenv
and
mov
inc
in
nop
jo
ds
in
adc
or
lret
ljmp
popf
je
cmpsl
push
mov
lock
imul
push
pop
scas
lock
lahf
pop
sbb
mov
cltd
lock
iret
insl
and
add
sti
push
test
pop
cmp
lods
xor
cltd
in
mov
mov
push
inc
bnd
push
ljmp
dec
out
les
or
fstpt
mov
lock
icebp
das
insb
inc
mov
daa
dec
inc
mov
pop
or
cltd
push
call
test
cld
inc
cld
adc
and
sub
dec
stc
adc
popf
or
cmp
mov
mov
lea
or
jmp
adc
xchg
in
dec
push
push
inc
adc
lcall
xchg
xchg
ljmp
scas
adc
aaa
cld
mov
test
aaa
push
ja
ljmp
hlt
shll
lds
mov
scas
inc
or
jbe
aam
mov
push
orb
sbb
sub
add
fwait
out
mov
add
orl
shl
xchg
jnp
dec
mov
push
sarl
call
sti
rcrb
xchg
mov
xchg
mov
cmpsb
cmc
fists
jp
xchg
ss
dec
cmp
jp
stc
push
popf
ds
mov
pop
push
xlat
sbb
in
popf
sbb
cltd
add
movsl
in
jle
push
and
enter
je,pt
outsl
push
rcrl
fucomp
test
inc
out
xchg
adc
in
cli
cmp
fldenv
pop
push
in
mov
test
je
mov
lds
mov
push
push
pop
sahf
scas
lods
sbb
sub
imul
jmp
inc
adc
jp
mov
dec
add
mov
inc
loopne
inc
call
and
fistpl
push
scas
xor
in
sub
scas
sbb
cmpl
jp
imul
or
iret
dec
ja
js
and
cld
or
xchg
mov
test
xor
add
mov
fwait
xor
loopne
mov
test
imul
add
insb
cmpsb
jmp
add
jmp
roll
mov
gs
fimull
pop
mov
xor
fiaddl
inc
xchg
mov
das
in
push
jns
cmp
clc
outsl
xor
add
mov
jno
imul
js
mov
push
test
xchg
cmp
lea
loopne
or
idivl
in
push
daa
ja
xor
insl
mov
clc
add
imulb
lods
or
mov
outsb
outsl
into
push
lret
hlt
repnz
outsl
mov
sub
push
sbb
cmp
test
sub
adc
adc
add
icebp
fisttpl
xor
mov
fidivl
inc
mov
push
test
dec
lahf
andb
or
in
push
mov
push
imul
lds
push
lcall
int
push
xchg
cmp
and
scas
sub
addb
mov
arpl
jns
pusha
adc
push
adc
inc
push
data16
clc
dec
dec
dec
out
clc
push
jae
sysexit
sbb
movsb
jno
popf
xchg
mov
scas
mov
ror
or
das
in
sbb
mov
xor
rclb
adc
xchg
je
pop
push
mov
shll
jne
gs
pop
out
outsb
orl
lods
popf
cmpsl
into
push
sti
push
pushf
xor
mov
gs
jne
push
sbb
fidivs
dec
xchg
cmp
mov
lea
iret
mov
sub
dec
mov
add
mov
testb
leave
xchg
push
les
dec
mov
mov
test
ljmp
xchg
add
fidivrl
mov
push
add
rol
clc
inc
cs
and
repnz
sub
pop
fisubl
jnp
subl
out
jge
cmpsb
add
cmc
xlat
loop
or
ljmp
shlb
insb
xor
loopne
xchg
outsl
andb
cmp
ljmp
out
or
cmpsl
sbbl
cld
gs
jne
jg
lods
pop
lods
mov
lods
push
or
pop
lcall
data16
sbb
loope
imul
push
notb
dec
popa
arpl
jmp
outsl
fstps
les
inc
popf
lods
jae
call
lret
xor
fimull
dec
push
out
pop
mov
out
popa
mov
bound
or
adc
stos
into
cmp
push
das
arpl
movsl
pusha
pop
inc
mov
cmp
cmp
cmc
cmpsb
mov
add
mov
loope
pusha
dec
lea
fcomps
pop
int
jae
idiv
lahf
xlat
enter
es
sub
mov
push
scas
adc
push
and
cmp
xchg
aaa
and
dec
push
xor
dec
out
pushf
cld
mov
pop
add
hlt
and
jl
incl
mov
dec
testl
fldcw
dec
cmpsb
lock
mov
lock
cwtl
mov
jle
mov
and
clc
cs
sub
jae
sub
or
ss
lret
jbe
push
ret
adc
adc
aaa
dec
mov
adc
cwtl
push
sub
cmp
stos
lods
and
sbb
iret
test
mov
xlat
jl
mov
mov
pop
aam
adc
pop
mov
jge
scas
in
test
mov
pop
scas
call
inc
and
ror
mov
outsl
mov
pop
pop
cltd
rorb
fldl
push
jns
dec
gs
imul
scas
test
adc
add
add
push
or
xlat
xor
push
push
pusha
pushf
pop
sbb
daa
dec
add
sar
jns
jmp
cmp
push
xlat
push
add
adc
and
rorl
or
int
sbb
andl
xchg
shlb
pop
addr16
addb
fbld
imull
mov
jecxz
inc
in
sub
ror
arpl
mov
sub
gs
cmpsb
ret
or
popf
xchg
mov
sub
adc
clc
loope
jnp
aam
imul
test
cmp
adc
aas
sbb
add
push
mov
push
push
icebp
jg
in
or
dec
out
mov
imulb
pop
movsl
mov
push
pop
data16
cmp
mov
xchg
push
lds
stos
and
xchg
bound
adc
adc
dec
push
push
stos
sub
or
and
lret
adcb
jg
cld
dec
pushf
jne
fisttpl
pushf
or
inc
mov
daa
xchg
pusha
test
ds
mov
call
mov
dec
jne
cs
jbe
stc
lods
fistpll
std
test
pusha
stos
pop
fbld
imul
jbe
test
mov
sbbb
adc
sahf
call
ror
jl
rorl
shlb
sbb
jns
cmp
mov
pop
nop
mov
inc
ja
or
or
div
sti
inc
mov
das
jnp
out
cltd
in
add
dec
adc
gs
pop
push
test
test
lds
cwtl
mov
mov
dec
sbb
movsb
dec
dec
popa
rcrl
repz
into
xor
sbb
sub
or
sub
or
push
adc
out
push
jo
mov
xor
add
pop
cmp
sti
cmp
nop
ret
add
bsf
jge
dec
int3
and
mov
nop
jge
and
mov
pop
dec
addb
xchg
xor
sbb
cmpl
repnz
test
fmul
add
and
jmp
jbe
rcl
outsl
pop
addr16
jg
mov
mov
inc
xchg
adc
aas
and
dec
add
jne
cmp
addb
es
or
out
xor
sbb
push
xor
lret
cwtl
rolb
xchg
int
jge
in
push
test
and
jnp
lock
mov
mov
jmp
das
lcall
inc
cmp
cmp
jns
inc
push
push
sti
in
lcall
idivb
or
mov
mov
repnz
push
out
push
pop
cld
jb
insb
push
fildl
test
sbb
sub
fisttpl
pop
repnz
int
test
mov
dec
add
in
push
cs
aaa
xchg
add
mov
jmp
lcall
xor
sub
cmova
decl
or
or
mov
and
out
mov
and
pop
testb
pusha
sbb
mov
push
cmpsb
out
and
mov
mov
push
pop
push
add
mov
sti
out
enter
xor
and
sbb
movsl
dec
jg
pop
sub
clc
jmp
xor
cld
xchg
pop
in
daa
mov
bound
cwtl
and
jge
xor
icebp
xchg
testl
sub
js
roll
sub
sbb
divl
mov
pminub
lea
xchg
repz
add
xchg
into
push
popa
stos
std
xchg
cmc
inc
push
xor
adc
out
mov
mov
inc
cmp
pop
sub
pop
mov
lock
bound
jmp
dec
cmp
inc
jecxz
sub
xchg
fs
push
jnp
negb
nop
stc
xchg
push
daa
aad
rcrb
movb
bound
push
mov
push
ret
in
xorl
and
into
cmp
stos
jne
rcll
dec
fldenv
cmpsb
jns
push
jle
arpl
xchg
xor
push
pop
sahf
adc
inc
sahf
out
movsb
loopne
ret
imul
push
sbb
sub
jmp
push
mov
jle
xchg
outsl
pop
ficompl
jge
stos
arpl
mov
rcll
sbb
xorb
cwtl
cwtl
shl
adc
inc
sbb
outsl
dec
int3
mov
stos
push
sbb
push
insl
mov
push
rcl
js
adc
movsl
insl
jl
cmpsb
add
test
imul
dec
insl
inc
in
lahf
int3
scas
jge
loopne
adc
imul
xchg
ljmp
ss
fsub
ja
repz
push
scas
dec
shrl
xor
jns
and
test
lahf
inc
add
sbb
lock
mov
mov
jns
dec
in
pop
jnp
pop
in
adc
pop
dec
rclb
in
xchg
xchg
sub
jne
sbb
adc
out
aam
subl
mov
les
add
xor
mov
push
adc
mov
and
mov
jno
repnz
dec
cli
lcall
sub
std
dec
adc
xchg
cmp
popa
xor
stos
movb
dec
sbb
mov
sti
aad
sarl
xchg
inc
sub
jne
imul
jbe
sbb
ljmp
sbb
imul
outsb
sbb
pop
je
outsl
mov
aad
push
or
or
imul
mov
mov
mov
js
test
ja
xor
in
jle
mov
stc
jl
movsl
into
lock
sbb
fistpl
das
sbb
inc
je
mov
pop
add
push
lcall
sbb
in
push
mov
pop
cmp
xchg
daa
test
inc
cmpsl
stos
ss
jle
shll
push
mov
out
idivl
pop
call
sub
jp
and
repz
inc
popa
aam
rol
xorb
enter
fs
or
push
dec
pop
add
mov
arpl
sbb
cs
mov
inc
lods
pop
mov
mov
fwait
and
and
cltd
mov
pop
or
lds
sub
jl
jno
insl
fildll
in
adc
and
fnstsw
mov
cli
test
sbb
lret
in
cli
xor
mov
ss
inc
lods
fmull
mov
push
fnstcw
testl
mov
mov
loope
shlb
je
roll
mov
pop
mov
sub
mov
cmpsl
pop
or
mov
sub
lock
outsl
pop
push
nop
cmp
push
mov
adc
dec
push
out
mov
repz
cmpb
and
fwait
xchg
enter
mov
fstps
loopne
mov
imul
fisubrs
ds
leave
mov
je
mov
ss
ret
scas
dec
sbb
cmc
neg
mov
fstpl
push
adc
and
test
xor
int
test
cmpsl
popa
fmuls
jl
sub
sbb
xor
loope
mov
or
xchg
loope
arpl
std
je
push
neg
push
loopne
xchg
push
arpl
fidivl
testl
or
cmp
and
aam
push
xchg
mov
adc
testb
adc
and
data16
jns
aaa
pop
xorb
icebp
out
int
test
fisttps
mov
jge
xchg
push
dec
iret
jg
xlat
cmp
andb
pop
cmp
sub
mov
xchg
int3
mov
and
push
jno
push
addr16
outsl
fimull
aas
mov
out
mov
imul
adc
out
jns
mov
rclb
shrl
or
dec
jmp
fstps
jmp
repz
and
enter
cmpsl
clc
ret
pop
add
out
stos
inc
mov
pop
das
out
stos
fdivp
int3
push
aaa
mov
lahf
jbe
into
shl
jp
cmpsl
cli
iret
icebp
movsb
loopne
xor
cmpxchg8b
popf
mov
lods
xor
ret
fisttps
bound
lret
ret
xchg
rorl
or
push
mov
cs
mov
stos
mov
pop
dec
addr16
stos
mov
fsubr
push
sbb
scas
leave
cli
cmp
mov
cld
addr16
sti
add
mov
push
mov
inc
out
adc
ljmp
mov
adc
cli
int3
lret
stc
add
push
sbb
adc
ficompl
jns
int
shl
repz
test
cmp
cs
ret
xlat
stos
mov
jmp
dec
and
popa
je
push
dec
mov
dec
sub
in
sahf
or
and
test
mov
lcall
and
popa
or
xchg
jl
flds
mov
lcall
aad
dec
int3
cwtl
test
lahf
mov
pop
in
in
sub
test
mov
or
dec
loop
lret
xor
ret
test
loope
outsl
adc
mov
inc
xorb
inc
dec
push
dec
out
add
movsl
dec
popf
mov
pop
fnstenv
data16
mov
mov
add
rcll
popa
cmc
aad
jnp
mov
adc
leave
int
dec
pop
inc
pop
inc
icebp
and
in
aam
mov
hlt
lds
pop
negb
mov
inc
fstpt
push
sbb
sarb
fsubs
sub
xchg
push
lea
dec
ffreep
add
lock
dec
add
and
fcoms
dec
stc
jo
fcompl
sub
push
xchg
mov
outsl
ficomps
pop
lods
mov
xor
sbb
dec
push
inc
mov
xor
leave
or
pop
mov
test
leave
sar
cltd
pop
sub
mull
lods
mov
sub
sti
es
add
ret
and
cmpb
gs
xchg
jae
and
mov
gs
xchg
mov
fbld
xchg
xor
sbb
sbb
sub
xchg
iret
sbb
inc
test
ja
dec
or
andl
fmull
jmp
pop
push
sub
in
sub
sti
pop
mov
insb
jge
jge
push
imull
cmc
lods
lods
inc
shlb
cmp
inc
in
and
sbb
push
cmp
xchg
loop
and
or
loop
xchg
dec
and
in
mov
inc
sbb
incb
add
xchg
mov
cmpsl
inc
jle
adc
jno
imulb
in
out
push
in
pop
fstpt
test
ds
or
and
xchg
sahf
lods
insl
or
fisubrs
cmp
shrl
inc
sbb
mov
insb
mov
jge
lret
jp
jp
xor
add
mov
push
test
aad
mov
cmp
inc
sbb
aaa
lret
mov
jmp
arpl
pop
lock
iret
xor
mov
sbb
fwait
mov
es
jno
push
jnp
or
pop
mov
repz
test
imul
insl
mov
mov
lret
arpl
outsl
test
adc
xchg
xor
es
out
cmpsl
xchg
fidivrs
js
sahf
sbb
inc
aad
xor
xor
stos
daa
loopne
data16
idivl
mov
xor
fidivl
sub
pop
outsb
jns
movl
sbb
hlt
dec
ret
xor
int3
adc
daa
sbb
roll
adc
xor
movsb
xchg
outsl
mov
inc
sbb
lret
into
cmp
sarb
in
lret
sub
test
or
std
mov
pop
into
in
or
movsb
mov
lds
add
or
jp
and
pop
add
and
stc
dec
das
mov
xchg
shlb
push
or
out
push
push
sub
jne
dec
jle
cmpsl
das
mov
jecxz
dec
mov
or
xlat
std
sub
xchg
pop
jno
fwait
dec
lods
xchg
mov
push
xor
inc
lret
push
ret
cmp
punpcklwd
jmp
jl
lock
sub
add
or
int3
cltd
sbb
and
test
pop
inc
cmovle
bound
jmp
loop
loopne
cmp
lret
xchg
or
loopne
mov
inc
sahf
push
pop
mov
mov
adc
lods
lcall
jbe
cs
les
fnstenv
jbe
lods
push
adc
mov
cmp
add
jns
mov
cmp
test
les
pop
bswap
imul
in
mov
push
xor
jne
faddl
jae
add
jecxz
and
xchg
jnp
or
loop
mov
sub
push
xor
leave
mov
fsubl
add
mov
in
int3
in
fdivrp
mov
mov
inc
xchg
push
inc
out
xchg
dec
daa
xor
iret
or
push
push
add
lahf
sbb
test
sbb
sub
fnstsw
sti
sub
jg
xlat
ljmp
sbb
pop
movsb
stc
scas
pop
sahf
dec
scas
xor
adc
pop
arpl
int3
lods
push
popf
jmp
lret
jbe
sub
sub
cmp
xchg
repz
inc
es
sbb
shll
movsl
in
cld
enter
add
jmp
icebp
js
arpl
gs
mov
sahf
jb
jmp
shlb
add
inc
cwtl
inc
and
cli
sub
cmp
mov
push
fnstsw
lret
jmp
jge
jb
or
mov
jo
or
sub
jge
inc
movsl
repz
adc
lock
addr16
mov
inc
les
lret
mov
lret
add
jmp
and
and
mov
add
adc
shl
and
jl
or
notl
icebp
inc
inc
daa
lds
js
js
outsb
push
cld
aam
ja
cmc
dec
enter
xor
mov
into
mov
mov
xchg
lods
push
xor
mov
or
and
icebp
ja
pop
sarb
scas
jmp
divb
push
add
jbe
scas
mov
into
or
sbb
ficoml
push
pop
sbb
por
jne
push
add
aam
ret
and
sbb
push
mov
ret
pop
movsl
sbb
xchg
dec
mov
jno
in
cmp
insb
push
cmp
stos
pop
push
mov
jb
and
jl
jo
das
insb
ljmp
aam
add
pop
mov
or
add
add
lret
push
pop
js
jnp
sbb
cli
cltd
in
xchg
dec
xchg
add
pop
loopne
mov
xchg
imulb
mov
xchg
repnz
mov
aam
fwait
jns
fidivrl
dec
cmp
addb
stc
sbb
mov
cmp
mov
pcmpgtd
aaa
or
js
enter
ror
mov
cmp
dec
xor
clc
adc
sub
inc
scas
xchg
sub
hlt
movntps
cmp
fs
ret
lods
test
mov
addl
push
test
adc
dec
mov
and
jmp
ret
or
fdivs
inc
adc
bound
dec
icebp
push
cmc
movsl
adc
inc
fisubrs
jo
sbb
jae
push
sbb
or
les
fildll
sub
out
mov
mov
fdivr
test
fisubl
mov
push
jmp
xchg
mov
mov
ds
pop
mov
or
lcall
mov
enter
pcmpgtd
data16
int3
aaa
mov
inc
test
fistpl
and
repz
push
sbb
lods
jmp
push
adc
mov
sbb
or
push
push
in
inc
cld
scas
pop
sub
in
jl
or
dec
fisubrl
push
gs
inc
fcmovu
sbb
leave
and
in
jbe
outsl
add
push
int3
dec
pop
fcoml
popf
js
and
fistpll
mov
or
mov
pop
jb
push
test
rolb
ret
sub
pop
std
push
insb
jno
mov
std
faddp
adc
imul
push
mov
into
and
repnz
lret
inc
std
sti
xor
xchg
int
mov
lahf
push
cmp
adcl
cmovbe
pop
jne
das
inc
mov
jmp
fdivr
sbb
sub
repnz
stos
jne
pop
and
out
pop
das
push
dec
nop
cmp
dec
cmp
cmp
mov
lahf
add
cld
fisubs
les
jnp
fwait
test
sub
push
pop
mov
jae
cltd
mov
ds
xor
and
and
inc
sbb
add
jmp
pusha
out
dec
lea
sub
shlb
add
dec
jnp
sub
std
cmp
divb
pop
hlt
rol
jns
pop
ss
add
es
std
cltd
add
pop
xor
loope
out
jb
inc
fs
add
lea
mov
in
xchg
jmp
or
out
ja
sbb
test
roll
test
stos
aam
jb
push
cwtl
xchg
and
sbb
cmc
xchg
jg
out
dec
xor
xor
jge
lea
cld
mov
negl
adc
lock
outsl
lahf
cmp
sahf
mov
std
dec
divl
imul
daa
mov
pop
ja
dec
das
out
jle
cs
int
cmp
mov
mov
test
adc
sbb
push
stos
filds
lods
or
jecxz
mov
jg
decb
inc
hlt
shr
pushf
out
in
xor
cmpl
inc
cmp
push
out
mov
sub
push
ret
and
mov
sub
add
mov
unpckhps
xchg
mov
inc
xor
sbb
imul
mov
adc
xchg
cs
fdivp
sub
mov
jne
leave
andl
mov
insb
sub
pop
pop
mov
lods
in
idiv
mov
dec
mov
add
or
jo
mov
sub
adc
cmp
push
inc
jae
lods
call
push
xchg
jg
lcall
cmpl
cmp
test
dec
xor
bound
outsb
sub
sub
add
js
je
popf
or
popf
mov
out
mov
push
das
addr16
inc
sbb
outsl
movsb
out
fdivrs
pop
or
rorb
rclb
cli
incl
xor
xchg
push
add
add
mov
sbb
imul
push
inc
loope
jp
repz
cmp
jge
enter
mov
sub
jl
popf
cmp
jo
roll
cmc
ffreep
pop
outsl
movsl
add
pop
daa
xchg
xchg
mov
adc
addr16
test
push
in
in
stos
and
inc
sub
std
sti
push
jno
inc
std
sub
ja
xchg
out
xchg
cmpsl
js
mov
pop
les
sub
sbbb
pop
cmpsl
sbb
push
andl
mov
fsubl
jb
je
hlt
push
pushf
xor
cmp
mov
mov
arpl
adc
dec
shlb
pop
movsl
sar
loopne
cmp
shl
pop
sbb
popa
jb
fists
out
cld
test
jp
mov
filds
loop
cs
sbb
cmpsb
mov
add
fsubrs
rcll
lret
mov
inc
insb
pop
cmp
imull
sub
jl
arpl
push
cs
or
inc
pop
stos
mov
pop
repnz
cs
in
add
lods
aas
xchg
addl
xlat
ja
pop
sub
mov
lods
scas
fiaddl
in
out
ficomps
loop
or
fs
xchg
movsb
add
std
out
mov
loopne
lahf
or
pop
iret
cmp
add
ret
cltd
mov
xchg
jmp
pop
out
xchg
test
and
jbe
andl
jnp
unpckhps
rorl
decl
popf
call
out
and
xlat
jnp
xchg
adc
xchg
aas
jo
divb
fstpt
shl
sahf
xorl
and
fstpt
sub
pop
int
sub
daa
cli
xor
sbb
mov
fldz
iret
js
pop
ja
mov
xor
stc
lahf
and
mov
scas
lret
mov
sub
ret
mov
mov
repnz
pushf
rcr
stos
movsl
test
dec
fistpl
test
add
gs
std
stos
push
inc
and
repnz
xchg
and
sti
cwtl
mov
jle
imul
mov
cmp
scas
insl
outsl
xor
lock
pop
div
xchg
or
fiadds
mov
sbb
cmp
push
mov
push
notl
fwait
mov
push
inc
mov
movl
xchg
mov
mov
jb
jge
mov
xor
push
xlat
mov
mov
cmp
pop
jae
xor
xor
scas
insl
push
sub
sbb
icebp
int
pop
push
jno
stc
pop
sub
mov
jb
pop
cld
rcrl
and
sub
jle
mov
mov
ret
leave
sbb
arpl
push
dec
push
test
dec
or
jmp
mov
and
hlt
pushf
add
pop
cmp
sbb
fsubl
xor
icebp
jb
xor
imul
fwait
arpl
jge
adc
lods
gs
sbb
jge
in
cwtl
and
out
gs
in
and
les
sbb
pop
fsubs
outsl
lea
lds
fmull
mov
pop
cmp
xchg
js
add
and
dec
rcl
rcr
sub
lock
pop
fsubrl
inc
dec
mov
cltd
sub
dec
xchg
mov
lahf
fidivl
push
mov
mov
adc
xor
sub
notb
arpl
mov
push
mov
faddl
xor
movsl
int
pop
jbe
pop
xchg
xor
jns
mov
es
jle
arpl
rep
push
xchg
mov
bsr
mov
and
mov
mov
call
and
cmp
repz
jp
ss
lock
test
sub
movb
push
jl
test
cmp
and
adc
add
add
hlt
lahf
icebp
lcall
faddl
jg
or
ja
movsb
ret
lods
adc
jmp
add
cs
es
mov
out
xchg
xor
dec
test
mov
outsb
sub
lea
and
bound
hlt
lea
add
jge
inc
jp
sbb
test
fsts
icebp
mov
push
ss
iret
push
repz
cmp
shrb
mov
xor
je
lods
addl
loope
push
loopne
js
subl
test
cmp
xor
xor
dec
nop
xchg
xor
fwait
or
cmp
hlt
mov
xor
jo
jne
lret
mov
inc
push
inc
jns
dec
outsl
pop
outsl
lea
aaa
ss
jmp
cmp
insl
cld
out
int
dec
adc
sbb
push
testb
lea
sbb
stc
pop
cmp
popa
test
ss
aas
push
sbb
pop
aaa
push
adc
xor
mov
dec
ljmp
aad
pop
push
pop
fwait
jo
pop
js
jle
xor
in
roll
mov
mov
scas
adcl
push
mov
nop
and
jns
inc
pusha
or
int
rcl
and
xchg
std
add
mov
mov
or
jl
test
xor
inc
shlb
inc
xchg
mov
repnz
lcall
aaa
and
adc
cmpsl
addb
shrl
jnp
pop
or
or
adcb
push
mov
rorb
lahf
mov
dec
adc
mov
orl
lods
dec
pop
jge
jnp
mov
jg
pop
push
inc
in
xchg
cmpb
in
push
sbb
aam
jl
ja
add
adc
test
ret
add
in
dec
xorb
cmp
cmpsl
jno
sarb
cld
rcll
adc
dec
xchg
mov
stc
pop
mov
ror
push
mov
lret
adc
into
mov
lret
clc
pop
int3
pop
cmp
ss
in
cmp
sahf
nop
loop
lahf
sbb
adc
rolb
rcrl
jp
fildll
push
mov
xchg
sbb
cmpsl
cmp
es
imul
nop
inc
lods
shr
nop
jnp
lea
je
mov
ret
mov
mov
shr
mov
sub
clc
int
push
loop
loopne
inc
jp
scas
sahf
cltd
jns
mov
fucom
cli
outsb
inc
add
imul
dec
cmc
gs
in
mov
cwtl
push
fwait
or
or
popf
mov
jl
movsl
push
mov
dec
lret
or
xchg
aad
jmp
lock
or
pop
sub
pop
and
notb
jp
loope
push
jo
subb
inc
flds
inc
insb
imul
pop
xchg
push
pop
adc
jo
jbe
aam
cmc
mov
repnz
adc
jns
fwait
shl
adc
sbb
sti
clc
ror
icebp
ja
cld
daa
rclb
xor
mov
mov
inc
cli
mov
imul
xchg
sub
andl
adc
or
js
insb
sbb
push
mov
nop
shlb
mov
or
adc
mov
ror
cmp
stos
call
outsl
aaa
mov
bound
pusha
mov
dec
das
frstor
lods
sub
cmp
xor
jno
repz
adc
xor
fwait
ljmp
pusha
aad
lods
lods
mov
dec
mov
int3
in
in
pop
sbb
rolb
jecxz
sbb
lods
cmpsl
xchg
cmovg
xor
inc
xor
clc
sar
lods
jmp
lds
rorl
hlt
mov
and
das
repnz
in
sti
scas
add
pop
negb
mov
aaa
incl
sarl
movsl
out
jmp
rolb
jmp
inc
mov
sahf
lods
sti
ss
mov
aaa
mov
test
or
andb
sub
pop
movsb
push
gs
fldl
sbb
lods
sub
ud1
jne
and
mov
stc
sbb
fiadds
or
mov
add
xor
rcl
xorl
or
push
mov
cmpsl
lods
xchg
mov
jecxz
lcall
arpl
sbb
pop
cmp
dec
xor
sbb
adc
jnp
xor
jb
std
ret
cmc
inc
movsl
loope
or
and
fdivs
mov
xchg
sbb
sti
cmpl
mov
aam
in
xchg
test
adc
add
dec
jecxz
shlb
jno
cwtl
inc
adcb
adc
arpl
jp
in
rcll
mov
xchg
jb
movsl
ss
xor
jbe
dec
dec
jbe
les
sahf
pop
nop
ds
jecxz
pop
cmp
or
cwtl
add
lcall
and
jecxz
iret
sahf
jns
pop
jmp
inc
js
inc
inc
dec
jmp
push
test
adc
jbe
add
mov
mov
arpl
lds
mov
push
outsb
movsl
pop
jmp
add
add
push
inc
outsb
push
jno
in
fstpt
jmp
lods
test
sub
sahf
cmc
test
xchg
sbbb
pop
fbld
sub
into
addl
adc
aaa
cmp
lea
shrb
sub
pop
lods
or
xchg
loopne
call
pop
imul
loope
or
sbb
in
popf
add
std
lea
mov
movhps
lea
xchg
repz
clc
outsl
mov
pop
in
fdivr
fs
push
sahf
js
and
inc
or
mov
out
je
fistpll
sub
xchg
or
dec
in
and
push
je
and
adc
repz
js
inc
jge
pop
in
inc
in
movsb
ficompl
negb
je
rcr
bound
jecxz
sahf
stc
ret
jmp
ret
mov
adc
fsubr
pop
adc
mov
mov
xchg
lds
add
fsts
lret
or
loop
stos
jns
sbb
xor
loopne
shl
mov
push
nop
push
mov
ja
pop
mov
rcl
xorb
adcb
adc
std
fcmovbe
inc
dec
adc
outsl
rcl
in
jmp
xor
loope
mov
xor
cld
loopne
dec
fdivrs
push
mov
adc
ret
cld
loope
lahf
in
imull
or
or
mov
xchg
mov
lret
xor
sub
mov
mov
xor
xchg
fcmovne
dec
inc
xchg
or
fisubl
cmp
lock
push
and
xchg
test
and
cld
and
in
xchg
cli
nop
outsb
mulb
sbb
aaa
or
or
dec
xchg
divb
sbb
and
test
mov
rcll
or
pop
add
jae
xchg
dec
sub
xchg
movsl
push
push
daa
orb
adc
mov
or
in
aas
xchg
dec
push
enter
aam
or
lret
mov
inc
sub
in
imul
or
mov
sub
xchg
jb
pop
stos
cltd
dec
outsl
outsl
jno
push
lret
addb
mov
or
mov
mov
push
mov
cmp
sbb
fisttpl
mov
xor
jl
movsb
repnz
and
pop
add
sub
lea
mull
sti
cmp
sub
fisubrs
inc
fwait
jne
mov
or
adc
pop
into
in
loope
int
outsb
into
dec
daa
test
dec
inc
lahf
add
sub
mov
or
repnz
lds
cmp
stos
cmp
and
mov
push
mov
scas
mov
jge
aas
fs
xchg
pop
or
pop
xchg
in
movsb
sub
movsl
xor
inc
in
in
imul
mov
push
ja
add
loop
rorl
in
dec
inc
cli
xchg
xor
push
mov
int3
lea
inc
cmp
mov
push
jge
fcomps
movl
push
fstl
aad
inc
aam
and
lods
stos
mov
into
add
das
out
stos
pop
mov
cmc
aas
lcall
ljmp
enter
lret
jl
test
or
cltd
sbb
insl
fidivrs
cmp
roll
mov
roll
and
pop
js
imul
outsl
adc
xchg
fisubs
in
cmp
xchg
and
outsl
out
mov
sub
mov
scas
iret
jg
ja
je
push
and
adc
push
mov
sub
cmpsb
mov
bound
cmp
jmp
push
mov
and
dec
fistl
out
xor
addr16
mov
push
cltd
lods
cld
lea
test
push
adc
xor
ss
repz
mov
sbbb
cmpsb
dec
push
repz
push
cwtl
push
xchg
add
fistl
cmp
add
out
push
cmp
xchg
out
sbbb
loop
sub
mov
xchg
jb
std
cs
imul
clc
dec
pop
sbb
inc
sbb
mov
fs
mov
bound
sub
mov
pop
dec
cmc
mov
imul
sub
jecxz
jmp
mov
cmp
mov
push
lret
pusha
cmp
das
sub
test
push
pushf
ret
jb
add
sub
movl
lret
movsb
adc
aas
or
sub
in
leave
mov
and
push
jo
imul
leave
dec
iret
popf
mov
sbb
push
xor
push
stc
xchg
adc
loop
clc
add
outsb
jae
jns
mov
push
sbb
fdiv
out
rcll
outsl
adc
lds
lock
push
das
ret
push
push
mov
in
mov
leave
cmp
add
adc
adc
out
pop
pushw
sbb
lea
adc
enter
dec
xchg
rcll
enter
sbb
pop
mov
rorb
rcr
sub
inc
jmp
insl
push
pop
test
xchg
jge
cld
inc
jo
sti
rolb
into
inc
sti
push
adcl
adc
xchg
jnp
mov
pop
insb
and
imul
xchg
cld
std
cli
mov
push
aad
mov
sahf
cwtl
mov
sbb
jmp
push
add
ljmp
loopne
dec
jo
add
add
inc
fistpll
adc
jo
dec
cmp
pslld
imul
ljmp
jae
into
into
inc
jo
popf
add
mov
bound
ja
inc
ss
stc
and
daa
lods
lcall
int
jb
call
insb
pop
outsl
pop
stc
bound
mov
repnz
xchg
mov
bound
jg
imul
fisubrl
cmpsb
out
shl
pop
sub
mov
testl
shl
sub
jns
cwtl
out
lods
xchg
pop
sub
sarl
mov
fsubrs
mov
fdivrs
adc
cltd
jmp
jmp
test
imulb
test
adc
in
lock
pop
xor
pop
jecxz
pusha
xchg
repnz
ja,pn
inc
cwtl
ror
jle
mov
and
lret
inc
adc
lret
sub
shlb
das
lock
mov
or
xor
pop
sahf
mov
sub
test
popf
fimull
stc
mov
nop
shlb
jg
mov
xor
mov
sbb
call
pusha
out
out
xor
std
sbb
add
sbb
or
sub
cmp
dec
in
lahf
xorl
mov
pop
movsl
cmp
xor
xor
jb
mov
sahf
cmpsb
dec
and
dec
bound
lea
test
mov
jbe
pop
loopne
popf
icebp
fwait
push
shlb
inc
out
sbb
xchg
and
dec
xor
mov
mov
push
mov
scas
inc
ret
adc
int3
and
mov
sub
xor
mov
dec
je
xlat
daa
aas
mov
cmpsb
fbld
jge
mov
jecxz
call
dec
mov
mov
sub
sti
sbbb
pop
push
push
dec
ljmp
ds
pop
sti
repz
fstps
cmpsb
repnz
xchg
lods
call
outsl
lcall
xchg
xor
pushf
outsb
mov
ds
sbb
xchg
out
xor
fs
inc
lcall
add
repnz
das
mov
imul
loope
mov
jmp
rcrl
adc
dec
fsubs
outsl
roll
mov
mov
and
mov
popf
cmp
xlat
or
pop
sbb
je
mov
lods
jp
cmp
xchg
sbb
dec
pushf
fimull
mov
fimull
cmp
insb
push
xor
js
fnstenv
jo
outsb
push
push
aam
jmp
xor
movsb
out
nop
xor
ret
mov
test
jnp
insb
popf
jmp
loope
jb
xchg
cmp
cmc
scas
add
cld
add
incb
or
lret
bound
pop
and
loop
enter
aaa
xchg
and
fwait
sbb
mov
bound
xchg
mov
and
rolb
mov
outsl
incl
add
adc
adc
mov
shrl
pop
imul
lds
std
mov
adc
adc
lods
cmpsl
or
testb
adc
aam
mov
lock
ljmp
gs
cli
sub
or
and
dec
cmp
lahf
push
ret
push
lret
cmp
mov
loope
lods
inc
xchg
sbb
and
lret
lahf
xchg
add
loop
movsl
xchg
ds
int
movl
mov
push
fbstp
and
cld
clc
addr16
xchg
stos
push
je
adc
pop
xor
sub
push
and
rcl
icebp
cmp
daa
scas
loop
jb
xchg
mov
gs
dec
fcomp
std
repz
or
cltd
sti
add
mov
or
xor
mov
gs
cmp
cmp
lods
dec
xchg
bound
movsb
adc
les
pop
loopne
clc
enter
imul
ja
fiadds
mov
mov
sti
lds
fistpl
sbb
cmp
push
add
stc
cltd
mov
pop
adc
mov
xchg
jle
dec
jg
add
stos
xchg
enter
aad
mov
jl
push
stos
aad
stos
leave
adc
sarb
cwtd
mov
aas
jno
aaa
push
addps
mov
adc
jp
dec
cwtl
mov
mov
rcrb
jns
fistps
in
inc
cs
mov
mov
stos
stc
mov
inc
or
sbb
daa
cmp
lret
cmp
cld
imul
sbb
shrb
xchg
jl
cmp
push
int3
ret
outsl
jge
sahf
sbb
shrl
stc
mov
inc
insb
in
imul
sub
in
divb
ss
dec
out
test
jecxz
cmp
jmp
or
aad
xor
push
adc
std
ss
lods
ss
mov
lret
push
jbe
mov
sbbb
cmc
push
sub
jg
bound
loope
and
aaa
add
jge
push
in
inc
sbb
popa
push
xor
pop
and
pop
mov
stc
popa
xor
push
xchg
and
cli
loope
stos
es
dec
jecxz
mov
mov
stc
push
sbb
or
add
xchg
add
lret
roll
or
test
push
mov
inc
add
gs
paddsw
push
cmp
mov
fst
jle
mov
sbb
add
adcl
ret
or
negb
jo
lret
and
roll
adc
inc
ss
stos
mov
out
lods
xchg
mov
bnd
mov
out
push
mov
mov
dec
in
cld
stos
and
cmp
lods
inc
lahf
push
add
imul
sub
cli
stos
mov
fcompp
push
jns
sbb
inc
jnp
adc
addr16
jp
jl
jnp
arpl
and
xchg
shll
fdivl
xchg
fcomp
xchg
lcall
cli
push
fs
nop
jl
jns
add
test
mov
fldcw
repnz
xchg
cwtl
xchg
xor
lds
mov
pop
or
add
push
out
jne
test
jo
push
inc
nop
push
add
xchg
jae
xor
data16
repz
aad
jle
outsb
cmp
stos
adcl
js
sbbl
mov
bound
bound
adc
mov
shrl
and
ds
mov
push
and
fstpt
add
cli
add
and
ja
in
aad
xor
iret
or
scas
inc
xor
or
stc
inc
ror
sahf
test
jno
jns
mov
stos
les
repz
cmp
jb
fildll
push
jno
shld
pop
jmp
dec
dec
aas
cmpsb
dec
out
or
into
loopne
jmp
ret
jl
cmp
lahf
lret
pop
mov
xchg
aaa
outsl
mov
lcall
pop
jle
add
pop
lods
xor
sbb
pushl
push
div
cmc
push
stos
add
in
movsl
sbb
cmp
or
in
push
sub
fisubs
xchg
sbb
lods
in
jmp
xor
mov
sbb
mov
mov
daa
mov
aad
mov
mov
ja
pop
jmp
and
sub
addr16
lock
pop
fnstcw
mov
push
cmp
push
stos
or
lret
fnstsw
mov
pusha
sbb
push
test
test
divl
test
loopne
dec
cmpsl
mov
add
jae
jnp
adc
mov
les
movsb
pop
sub
dec
stos
jp
mov
pushf
mov
pop
test
or
dec
mov
sbb
je
daa
nopl
cmp
sbb
lds
orb
sbb
push
shll
mov
lret
and
push
bound
push
mov
jbe
dec
xchg
scas
jmp
imul
negl
ret
clc
mov
bnd
pushf
mov
sub
hlt
std
dec
or
push
mov
lret
out
repnz
cmpb
mov
dec
mov
mov
addr16
push
ret
dec
or
ljmp
inc
sub
rorb
pushf
cmp
pop
xchg
out
fwait
or
aam
test
ffreep
dec
inc
push
jecxz
in
aam
sub
mov
mov
or
or
or
lret
pop
pop
push
add
xchg
ret
jnp
or
stos
mov
stc
push
lahf
sti
test
jecxz
insl
fs
push
out
lods
mov
push
add
outsl
subl
xchg
add
push
fnstenv
and
jmp
jae
xor
xchg
xlat
outsl
popa
stos
js
mov
lds
aad
inc
or
ficompl
pop
push
mov
and
fldcw
mov
cltd
mul
std
sbb
lea
inc
cmp
dec
repz
out
sub
mov
data16
push
xchg
and
add
push
hlt
mov
subl
cmpsl
andb
sub
subb
pop
sbb
stos
mov
xchg
sbb
leave
dec
xlat
fcoms
repnz
adc
push
insb
mov
jbe
test
aas
sub
outsl
int3
and
fwait
xchg
stos
jb
xchg
cmpsl
push
fnstenv
jae
jmp
push
sbb
cli
push
pop
cmpsb
inc
mov
scas
int
pusha
mov
inc
fisubrs
mov
cli
out
jbe
fcoml
mov
mov
cltd
xchg
xchg
pop
repnz
fidivl
stos
lock
inc
sbb
icebp
pop
push
add
loope
xchg
xor
sub
vpcomw
sub
inc
cltd
inc
jns
insb
in
shlb
das
xchg
aaa
mov
sub
sub
cmpb
sub
in
cmpsl
xor
lea
push
outsl
sbb
push
push
or
out
jo
cltd
adc
scas
aaa
adc
xchg
arpl
mov
add
pushf
lock
out
mov
int3
outsb
push
fcmove
shl
and
adc
data16
cmpsl
dec
int
mov
int
sbb
fs
sbb
mov
xor
push
push
or
xor
mov
rcrb
fisubs
divl
out
lods
jb
xchg
shl
gs
cwtl
popa
dec
lret
mov
int
or
sub
cld
cmp
xchg
dec
cwtl
nop
imul
sbb
and
inc
rcrb
or
dec
shlb
pushf
cmp
add
mov
fs
sub
mov
rorl
sti
add
test
and
mov
inc
push
imul
pop
inc
aad
fidivl
lock
inc
add
push
je
and
out
pop
jecxz
or
ret
jg
jns
mov
mov
fdiv
sbb
push
push
ret
mov
xchg
in
cmp
pop
cld
push
lcall
adc
pop
cmp
sbb
push
mov
scas
lahf
adc
lds
cmp
shrb
test
mov
or
sub
xchg
cld
adc
pop
out
ret
xchg
jbe
xchg
push
repz
mov
je
ret
fdiv
je
cmpsb
fmull
aas
out
insl
dec
sti
or
jne
sbb
add
xor
jne
push
cmp
les
insl
sbb
int3
jg
es
imul
mov
pop
adc
add
loope
movsl
sub
shrb
arpl
jns
enter
add
outsl
jo
push
cwtl
xchg
sbb
iret
jle
push
insl
xor
je
xchg
dec
test
cmp
xor
jmp
dec
insb
jge
cmpsl
int
mov
sar
popa
push
fildl
and
clc
mov
sarl
icebp
cmp
dec
adc
adc
xchg
ds
xor
jg
or
dec
jg
xchg
mov
add
andl
and
pusha
dec
lahf
test
or
push
mov
imul
aad
test
stc
hlt
stc
xor
repz
push
repz
daa
data16
xor
iret
sarl
repz
sbb
lahf
pop
dec
fcompl
dec
outsb
sbbb
push
or
shll
out
pop
aaa
pop
imul
pop
inc
and
push
push
adc
sub
in
rsqrtps
xchg
jp
dec
call
mov
xor
mov
sub
int3
and
ljmp
in
jmp
lahf
inc
adc
jg
test
push
xchg
xchg
jo
sbb
lock
push
pop
cmp
xor
out
or
repnz
lock
aam
notl
xor
jge
inc
add
xchg
cmp
pusha
adc
mov
mov
in
dec
mov
cs
ss
ja
push
inc
mov
xor
mov
or
outsl
xchg
mov
pop
addb
sbb
es
mov
pop
sub
xchg
leave
cli
icebp
andl
je
mov
sbbb
or
shrl
or
and
iret
add
push
in
add
jle
sbb
jae
mov
push
mov
push
sub
mov
ror
dec
pusha
jg
mov
lcall
jb
and
stos
mov
jo
arpl
mov
inc
sbb
sub
movsb
xchg
xor
test
push
push
push
iret
pop
mov
mov
mov
repnz
adc
fildll
imul
cli
das
loop
fcom
ffreep
inc
and
std
jnp
inc
mov
in
data16
in
push
pushf
dec
xor
lea
out
fs
out
jmp
movsl
ret
mov
clc
and
add
stc
add
test
push
iret
mov
inc
pop
mov
inc
js
pop
test
xchg
dec
fisttps
popa
imul
push
call
sbb
dec
divb
xlat
cmp
push
shlb
lods
or
lret
movl
lcall
jl
xor
sbb
sub
mov
push
xor
add
sub
xor
pushf
jns
int3
inc
je
cmc
or
mov
mov
mov
cmp
std
incb
cs
adc
insb
rolb
divb
adc
rcll
jge
dec
inc
cmp
pop
divb
addl
or
jns
dec
test
cmp
dec
ret
pop
mov
and
rolb
mov
inc
sub
xchg
mov
mov
jns
shll
jp
call
imul
add
ljmp
mov
push
rorl
jmp
add
push
mov
inc
aam
test
inc
out
dec
mov
mov
out
lea
pop
data16
mov
inc
or
jno
mov
xchg
jecxz
adc
cmp
sub
mov
daa
push
push
cwtl
push
sbb
popl
int3
testb
out
aas
add
stos
jg
sarb
setns
add
xor
ret
sti
and
jne
das
jo
int3
add
add
fcmovbe
push
cs
in
and
xor
add
mov
xchg
xor
pop
push
fnstcw
cmp
gs
add
insl
push
je
test
cmp
adc
pop
xchg
jbe
movb
push
inc
xchg
xchg
cmp
and
and
mov
sub
push
cmp
fsubl
dec
mov
cli
fcomip
insl
inc
dec
aad
clc
dec
add
xchg
mov
inc
or
inc
out
jge
cmp
add
mov
lret
sub
push
scas
jno
dec
dec
enter
imul
das
les
push
shl
andl
xor
cltd
inc
lahf
jo
add
xor
aaa
lcall
xor
xchg
inc
mov
sub
xchg
loop
rsm
and
or
mov
adc
std
sbb
test
fisubl
adc
hlt
rcrl
hlt
xor
pop
pop
cmp
cs
data16
xor
rolb
mov
pushf
rcr
lock
jle
loopne
stos
mov
adc
push
or
fwait
in
xchg
imulb
push
sub
rcrl
add
pop
dec
out
lret
aas
push
add
jns
popf
popf
or
xor
hlt
push
xlat
cltd
bound
or
inc
mov
push
lret
pop
stos
sub
stos
sub
test
jge
icebp
mov
cmpsb
pop
xchg
mov
pop
movsb
mov
repnz
test
and
mov
adcl
xor
mov
and
pop
dec
repnz
inc
or
push
jo
sbb
leave
int
jecxz
add
fsubs
loopne
cmp
nop
inc
enter
adc
mov
xchg
lcall
push
push
daa
idiv
movsl
fsubl
scas
stos
sbb
or
mov
bound
xchg
inc
inc
jl
in
mov
cltd
test
dec
sub
mov
pop
leave
fwait
xor
jecxz
movsl
cli
mov
xchg
sub
psubd
hlt
lock
cmpsl
shrl
ret
andl
sarl
cltd
jo
push
ss
es
inc
enter
ror
scas
fwait
mov
mov
test
popa
or
xor
insl
pop
dec
mov
nop
mov
sub
jnp
call
adc
scas
sub
sbb
rclb
aas
nopl
cmpsl
clc
ljmp
orb
cs
mov
es
lock
pushw
cmc
in
inc
mov
xor
dec
push
mov
movsb
js
das
rcll
insl
sbb
pop
loop
pop
pop
fwait
sbb
test
mov
rclb
shr
lock
xchg
push
jge
repz
xor
dec
scas
aam
dec
aaa
mov
ret
cli
adc
dec
movsl
inc
int3
ret
in
mov
inc
pop
or
cld
mov
sahf
xchg
jl
cld
call
push
rcrl
repz
or
dec
outsl
stos
jle
cmc
mov
aam
in
cmp
sub
jmp
call
jle
inc
xor
mov
mov
sbb
call
shll
aaa
loop
arpl
and
sbb
mov
subl
and
andb
cmp
fcomip
pop
sbb
cwtl
fadds
lret
jp
xchg
mov
call
leave
mov
sub
lret
or
mov
dec
mov
mov
cmp
mov
imul
nop
mov
fisubrl
sub
lahf
xchg
pop
in
dec
test
out
sub
fs
arpl
aam
arpl
inc
das
out
push
pop
pushf
cmpsl
xchg
ret
mov
sbb
roll
divb
mov
or
les
sub
ljmp
pop
out
sub
sbb
adc
lods
push
pop
pop
jge
sub
pop
mov
mov
jae
sahf
ficoms
inc
push
add
ds
clc
cmp
sub
out
mov
jge
inc
mov
es
in
and
shr
dec
out
test
or
adc
rorl
mov
mov
or
dec
xor
add
fsubr
icebp
lret
add
jmp
outsb
les
adc
lahf
jae
jl
cmp
lods
in
sub
mov
popa
or
shll
xor
mov
jg
bound
loopne,pn
aam
stc
out
push
test
popf
lret
adc
mov
shlb
adc
jle
addr16
pop
jnp
add
jecxz
push
inc
mov
outsb
sub
adc
xor
fwait
cmp
rorl
xlat
rolb
ja
inc
int3
sbb
icebp
pop
rcl
push
test
nop
dec
lods
sbb
pop
mov
add
xor
ss
mov
mov
imul
lahf
js
aad
or
in
and
iret
call
mov
popf
sub
push
xor
andb
pushf
stos
sbb
cli
test
outsl
das
test
mov
and
not
pop
inc
ss
lahf
xchg
cmp
outsb
pusha
movsb
aas
sar
mov
jns
dec
stos
imul
pop
cmp
lods
xor
movsl
mov
mov
ljmp
fmull
push
jle
jmp
mov
cmp
mov
pop
cmc
pop
test
xchg
or
jmp
and
setl
inc
push
xchg
cmp
jo
sbb
lods
fwait
xchg
lods
subl
jmp
or
inc
add
push
cmpsl
add
add
inc
inc
cli
int
cmp
shlb
stc
outsl
mov
pop
xor
cmp
jno
push
aad
xor
mulb
mul
pop
ljmp
bound
sub
mov
pop
mov
fcmovnb
aad
or
fimuls
pop
mov
cmpsl
inc
jnp
dec
lods
jmp
push
mov
fisttpl
sbb
and
adc
rorb
sti
inc
loopne
ret
adc
push
sbb
aas
pushl
adc
xor
jo
adcb
notb
popf
nop
jmp
test
mov
mov
add
mov
ret
xchg
das
lock
push
xor
dec
sub
pop
xor
mov
xchg
in
xchg
test
add
dec
mov
inc
lds
dec
fcoml
dec
cmp
aaa
sub
repnz
movsl
mov
mov
xor
cmc
mov
popf
push
dec
jle
mov
mov
pushf
inc
out
hlt
mov
ljmp
mov
jae
sub
cs
pop
cmp
adc
inc
insb
rcr
or
out
sbb
loopne
fstl
sub
sbb
scas
sub
or
es
sub
mov
sti
xchg
cmp
dec
lahf
sbb
sbb
mov
pop
addr16
out
sbbb
mov
gs
sbb
add
out
pop
add
fcompl
xchg
test
dec
popa
mov
cmpsl
test
idivb
xlat
loopne
in
add
mov
sbbb
push
pop
pop
or
push
mov
jg
mov
cmp
movsl
lods
test
ss
movsb
inc
std
jne
shll
cld
cmpsb
rol
pop
adc
xlat
mov
and
shl
pushf
push
pusha
fldcw
mov
lahf
iret
adc
repnz
repnz
les
xchg
cmp
mov
enter
and
xor
aam
push
jae
adc
pop
rcl
xchg
add
daa
jns
lea
adc
mov
rclb
into
xor
xor
pop
movsb
adcb
mov
in
inc
fimuls
jmp
adc
fstpl
pop
mov
out
rcl
js
xchg
sbb
mov
mov
mov
mov
push
sbb
xor
repnz
push
aaa
add
ror
stos
dec
mov
jns
out
and
add
nop
adc
test
jns
or
push
mov
arpl
scas
fiadds
mov
mov
push
sbb
add
sub
or
cltd
mov
xchg
jno
mov
xchg
add
lods
cmp
dec
stos
dec
push
pop
push
cmp
repnz
cmp
fimull
and
std
sbb
push
pop
pushf
pushf
cs
inc
call
daa
cltd
scas
clc
add
jne
jl
mov
push
movsb
or
repz
fdivrl
daa
cld
xchg
stc
push
xchg
test
cmp
mov
adc
xorb
dec
mov
call
mov
mov
dec
imul
ret
sti
das
and
sub
hlt
or
sbb
lahf
push
mov
out
shll
xor
shll
pusha
js
mov
imul
clc
mov
push
test
pop
or
out
mov
mov
iret
lods
pop
loope
out
mov
jo
push
cmp
aam
lods
push
addr16
movsb
aad
xlat
mov
aam
and
dec
in
arpl
and
dec
mov
mov
mov
push
dec
add
jp
frstor
sub
mov
add
out
and
cmp
cmpb
jae
gs
add
out
popf
ss
cmc
inc
cli
stc
pop
out
adc
leave
add
add
cmp
adc
mov
add
xchg
pop
fmull
add
movsl
adc
imul
mov
fstps
sub
jg
sub
gs
pop
out
jbe
imul
push
sbb
cld
dec
lods
adc
cmpsb
jp,pt
adc
jno
dec
mov
out
add
cmc
push
push
ret
dec
and
mov
cwtl
ret
mov
jno
jo
cltd
xbegin
pop
popf
lods
push
or
imul
sub
jecxz
repnz
mov
ja
lret
repz
lret
mov
pop
scas
xor
adc
xchg
jne
xchg
loop
sub
mov
push
mov
cltd
movsb
or
scas
fldcw
cs
test
push
sbb
pop
aaa
or
sub
pop
xor
in
jg
aaa
addl
js
jecxz
push
int3
inc
or
or
inc
int
mov
cltd
and
or
xor
ret
and
imul
push
fcoml
lret
cmp
sub
mov
int3
loop
adc
push
push
dec
jp
lret
mov
pop
andl
out
out
mulb
sub
ljmp
add
lods
cli
insl
jg
mov
pop
iret
lock
jp
les
je
popf
mov
lea
jle
or
xchg
out
ds
xchg
frndint
xor
xchg
loop
dec
jp
stc
lods
push
sub
int3
sbb
test
pcmpgtw
daa
pop
movsb
push
js
sbb
pop
mov
int3
cmpsb
sub
push
movl
xlat
fisttpl
jle
pusha
inc
dec
into
pop
xchg
xlat
fsubrs
stc
arpl
cs
scas
jae
ror
sbb
sub
sub
pop
sub
dec
sbb
gs
fnstenv
ds
jnp
jae
mov
insl
pop
add
mov
adc
out
cmp
push
mov
or
sbb
mov
adc
test
clc
add
mov
hlt
or
js
inc
aad
pusha
dec
push
pop
sub
cld
pop
test
imul
push
push
or
sub
jg
xchg
idiv
test
fsubr
shll
andl
loop
lea
inc
push
sub
push
outsb
lea
loopne
test
mov
and
mov
pop
shlb
mov
dec
stos
mov
pop
fwait
mov
test
incl
xchg
mov
pop
sub
insb
lods
ret
nop
push
push
aam
loope
into
outsb
shll
or
stos
adc
sbb
add
xor
jmp
or
xor
movsl
xor
test
pusha
adc
loopne
test
test
cmpsb
inc
and
lret
mov
je
mov
dec
lret
mov
push
fnstcw
or
mov
scas
jge
sub
fwait
push
fwait
aad
sub
jle
das
jmp
sbb
inc
inc
repz
aaa
lods
outsb
test
and
icebp
dec
mov
inc
mov
cli
ljmp
push
inc
mov
cmp
xor
add
outsb
jmp
push
lahf
sub
jle,pn
cmp
and
pop
shll
push
dec
loopne
and
push
sub
cmpsb
push
nop
repz
sbb
dec
iret
inc
jmp
lods
jns
pop
jb
cwtl
mov
inc
lods
ljmp
scas
pop
sbb
scas
aad
std
ds
sub
loope
pop
aaa
imul
xchg
daa
addr16
cmp
cwtl
scas
jmp
adc
dec
enter
jg
int
leave
and
sub
or
cmp
dec
lahf
push
pop
outsb
dec
test
into
lahf
cwtl
fimull
cmp
pushf
es
out
mov
sti
mull
or
cmp
push
call
mov
inc
rclb
jecxz
loop
mov
xchg
ljmpw
push
js
sub
scas
jno
out
mov
mov
jne
jg
pushf
int
imul
test
aaa
xorl
ret
es
ja
push
inc
push
add
jmp
outsb
pop
adc
addr16
mov
sub
mov
pushf
cwtl
sub
sub
jle
pop
mov
jle
inc
das
xor
addr16
sahf
test
pop
lret
and
in
jae
pop
mov
jge
ljmp
add
outsb
sub
nop
cmp
scas
testl
mov
and
loopne
arpl
sbb
ret
push
sbb
xor
icebp
bound
cmpsl
sahf
mov
insl
push
inc
sbb
adc
pop
test
dec
lcall
inc
dec
push
ret
jnp
rclb
push
int3
and
cli
add
push
jno
test
in
rol
sbb
test
and
icebp
cmp
pop
pop
xchg
sti
xchg
popf
add
sub
sbb
sub
adc
test
jg
sahf
rcr
jl
cld
pop
out
and
jmp
fidivrs
ljmp
pushf
scas
fnstenv
jbe
iret
or
aas
lock
stos
nop
stc
jbe
addr16
jb
xchg
nop
inc
inc
xchg
in
lcall
popf
jne
cltd
icebp
fists
sbb
mov
movl
fwait
dec
pop
rclb
getsec
mov
jb
pop
lods
adc
lods
pop
adc
popf
sar
not
addr16
and
inc
push
lcall
dec
and
insl
dec
aas
js
lahf
xchg
aaa
mov
mov
mov
ficompl
in
cwtl
jb
push
fmuls
inc
test
sbb
inc
mov
fdiv
jnp
aam
scas
xor
cmp
mov
frstor
fimull
fbstp
hlt
outsb
sbb
xchg
inc
out
or
cld
dec
mov
dec
enter
repnz
mov
and
dec
inc
add
sbb
inc
add
jmp
sbb
hlt
cmp
jbe
inc
pusha
or
bound
mov
ss
jecxz
jg
add
imulb
mov
jnp
mov
das
lea
les
or
mov
xchg
pop
dec
sbbb
nop
sbb
mov
sub
mov
dec
int
shl
jp
push
rcrl
push
roll
test
imul
in
mov
ds
cmp
add
pop
out
pop
adc
cmp
jmp
sbb
call
inc
jb
ds
xor
repz
sti
mov
jnp
cld
adc
lret
push
mov
call
popl
pop
lds
mov
test
xor
mov
add
and
adc
mov
icebp
scas
aas
sub
daa
adc
andb
cmp
cmp
lea
ret
mov
icebp
cmpsb
sub
mov
mov
pop
mov
xchg
xchg
and
mov
ficoms
cmpsl
lcall
push
mov
dec
xor
stos
idivl
loopne
nop
lcall
cmpsb
jle
mov
dec
jb
data16
inc
cli
or
dec
or
lods
lahf
dec
int3
and
mov
cmc
pop
jno
nop
icebp
jl
hlt
movsl
stc
push
inc
mov
orb
mov
mov
sbb
aam
nop
add
leave
pop
pusha
lea
mov
and
out
push
and
inc
sbb
sahf
inc
loop
and
sti
scas
push
xlat
shrb
int
stos
fimuls
scas
pop
push
cmpsb
xchg
push
int3
dec
shlb
push
xchg
ja
mov
and
icebp
les
xchg
out
or
push
lcall
fcom
pop
shll
setl
std
sub
mov
fcomps
cld
fidivs
xor
pop
movsb
jecxz
xchg
dec
sub
push
cmp
sub
cmp
sub
les
dec
and
mov
xlat
bound
mov
mov
inc
sbb
mov
aas
xchg
addl
rcrb
notl
rcrl
or
lock
lret
push
das
notl
pop
mov
testb
sub
sub
out
nop
test
test
ljmp
test
xchg
xor
or
test
push
ljmp
stc
dec
lret
xor
lret
or
and
xor
insb
adc
dec
cmp
movsl
mov
xor
pop
fadds
fmuls
xchg
shrl
sbb
rorb
push
flds
es
mov
popa
call
jne
fsubl
push
mov
or
cmp
iret
fwait
or
mov
or
add
jo
push
pop
lret
mov
rorb
jo
and
lret
sub
jnp
cmp
mov
fisubrl
imul
add
jg
xchg
fmull
jne
cmp
addb
lret
mov
pop
mov
add
cs
addr16
clc
cld
stos
add
test
or
xchg
rcll
mov
loope
sub
adc
leave
cmp
nop
jmp
js
std
insl
xchg
mov
mov
pop
popa
stos
lea
mulb
int3
xorb
lret
fimull
push
push
test
repnz
ficoml
pop
lcall
inc
jmp
xorl
divl
push
xchg
stc
lods
imul
daa
lea
sbb
inc
les
sub
mov
aam
xchg
in
lods
test
sbbb
mov
fisubs
and
push
cmp
or
xor
jge
mov
push
aad
out
cli
or
lds
mov
jb
notl
cmpl
mov
push
repnz
add
ljmpw
xor
mov
jno
mov
jbe
and
adc
push
push
mov
pop
pop
mov
and
or
inc
sub
repz
mov
shlb
xchg
fistpll
xor
push
or
pushf
jne
pusha
add
xchg
add
mov
dec
mov
fdivrl
mov
popf
int
inc
and
clc
dec
in
and
sub
cwtl
lret
outsl
lcall
jno
xor
fildll
push
mov
sbb
ss
cmp
push
mov
xchg
mov
ds
lods
adc
mov
sub
mov
sub
cmp
addr16
in
nop
repz
enter
mov
out
imul
sbb
icebp
int3
adc
in
jl
push
movb
mov
pop
fmuls
lods
fsub
int
or
push
mov
out
adc
jmp
push
addl
inc
jno,pt
jecxz
out
into
andb
sti
lds
divl
hlt
push
adc
jns
fwait
inc
xor
and
imulb
and
jns
pop
or
ret
arpl
faddp
mov
xchg
aas
jbe
fisubs
mov
cmpb
stos
adc
addr16
lds
mov
popa
int
les
pusha
jae
data16
loope
dec
pusha
inc
stos
mov
imul
loop
repz
popf
xchg
lcall
rolb
stos
subb
jge
pop
outsl
pushf
cltd
xchg
inc
shrl
adcb
loop
test
adc
das
mov
xor
sub
and
inc
inc
incl
mov
mov
mov
dec
jno
fidivs
push
add
pop
mov
in
xor
fsub
leave
pop
push
insb
outsb
aaa
dec
jae
jge
and
adc
leave
jae
pop
mov
jb
inc
out
cmp
sahf
pop
mov
pusha
dec
test
lahf
jp
in
std
imul
mov
out
in
adc
scas
adc
push
xor
cmp
mov
sub
pop
cmp
js
int
pop
nop
mov
jge
pop
mov
cmp
sbb
fbld
inc
or
mov
out
cld
rclb
jns
mov
xchg
stos
jne
xlat
mov
adc
fsubrp
cmc
jbe
insb
fsts
and
out
cmpb
nop
sbb
add
add
fisttps
or
push
movsl
jmp
push
loopne
mov
ret
adc
pusha
fdivrp
sbb
js
nop
call
mov
adc
into
pop
daa
loop
jle
pop
and
mov
or
mov
push
mov
or
xor
jg
adc
and
pop
std
pop
inc
mov
daa
cwtl
mov
scas
sbb
pop
repnz
out
daa
sub
pop
pop
stc
cmpl
mov
arpl
fs
push
addr16
push
cltd
mov
sbb
mov
ss
xor
les
outsl
icebp
dec
test
imulb
cmp
inc
enter
mov
std
cmc
dec
and
mov
sbb
pop
jmp
test
or
push
xchg
add
push
push
lock
push
mov
lock
sbb
xor
ss
js
fstl
cmc
mov
adc
add
sbb
or
dec
inc
pop
cmp
push
xchg
cmp
add
loopne
mov
jp
sahf
push
pop
mov
cmp
jnp
leave
adc
or
int3
js
dec
pop
icebp
cld
movsl
pop
and
out
je
mov
push
inc
xchg
repnz
push
xchg
test
xchg
jge
mov
fstl
cmc
xor
gs
inc
lods
movsb
das
repz
insl
sbb
and
push
pop
sbb
or
mov
mov
es
dec
out
mov
pop
cmp
inc
add
lds
dec
daa
fiaddl
sub
and
mov
ror
addb
mov
adc
shlb
mov
and
rorb
cmpsb
mov
jns
xchg
mov
arpl
rcl
jns
fnsave
int3
lds
or
imul
sbb
or
mov
scas
xor
data16
sbb
aaa
test
popf
clc
jg
mov
loope
orb
rorb
out
repnz
jl
fisubl
in
lahf
ds
and
mov
popf
pop
lock
sbb
ret
sbb
decb
test
push
cs
sti
add
inc
mov
out
xchg
adc
jp
stos
pop
out
and
adc
or
mov
in
cmp
mov
adc
sti
icebp
mov
pop
stos
jmp
fimuls
or
mov
adc
inc
dec
out
loopne
xchg
push
pop
push
jbe
inc
ret
sub
xchg
jb
mov
cwtl
dec
lock
mov
pushf
or
bound
dec
adc
or
dec
sarl
aas
icebp
lahf
push
mov
sub
and
jne
lcall
fcoms
addr16
push
fucomip
mov
pop
outsl
shlb
mov
lods
mov
stc
cltd
pop
jb
hlt
arpl
inc
push
fwait
js
jle
adcb
xchg
sub
mov
outsb
ds
jecxz
inc
push
add
stc
rep
xchg
dec
incb
adc
dec
dec
xor
iret
cmp
add
xchg
pop
rcrb
rcrl
pop
xlat
nop
shrl
in
jle,pt
xchg
mov
lods
movsl
xchg
and
lods
es
filds
shlb
sarl
shrb
add
pop
inc
cs
push
pop
mov
mov
add
xchg
push
dec
aas
mov
jno
sub
and
jns
inc
dec
fwait
ljmp
fucomp
push
fcmovu
push
cmp
dec
or
lret
call
loopne
test
pop
push
bound
imulb
xorl
test
fisubl
add
or
jns
leave
and
or
dec
cmp
sbb
fs
and
xlat
sbb
pop
movsb
insb
inc
stc
cmpsl
mov
push
mov
mov
add
pop
stc
insb
popa
push
addr16
shrl
mov
subb
sub
push
mov
jl
or
and
gs
shll
seta
xchg
fldt
cmp
xchg
adc
dec
out
les
add
aas
stos
adc
add
push
adc
stc
push
aas
les
xor
or
sti
call
jae
pop
mov
mov
hlt
rclb
sbb
xor
or
inc
call
adc
inc
push
jp
pop
and
out
sub
sbb
in
inc
adc
dec
scas
lds
outsl
bound
cmp
inc
ret
insl
mov
and
and
fildl
addb
arpl
and
jecxz
pop
inc
shr
inc
mov
inc
mov
pop
lea
jb
push
psrld
sub
rorl
loopnew
lret
add
and
xchg
jmp
mov
sarb
xchg
jl
in
lcall
jo
pop
in
mov
ja
sbb
mov
loop
aam
lock
mov
repnz
pop
and
popf
inc
inc
mov
test
xchg
jae
add
js
popf
mov
xor
in
call
add
xor
lret
adc
jp
pop
jne
or
pop
daa
sub
bound
out
loopne
movsl
leave
rcr
popf
sbb
fimull
imulb
push
pop
popf
add
mov
mov
push
aas
loope
lret
hlt
dec
sarl
scas
lret
fmull
popf
mov
xor
jg
xchg
add
jge
test
and
out
pushl
push
inc
mov
and
iret
cs
adc
jns
xchg
or
into
adc
subl
add
jg
lahf
xor
sbb
jecxz
rorl
inc
mov
jle
aad
dec
ds
imul
jmp
add
frstor
dec
mov
dec
adc
lock
fstps
js
test
xchg
fwait
gs
mov
xchg
stos
mov
lods
sbb
and
cmp
nop
rolb
xchg
push
xor
sarb
sub
pop
xchg
jns
push
pop
xchg
and
dec
mov
mov
pop
cmp
xor
lock
cs
cmp
ficoml
jge
scas
push
and
and
shlb
test
xchg
out
subb
cli
pop
test
jg
les
add
mov
mov
into
sub
mov
fsubrl
addr16
lods
fcmovbe
xor
xchg
and
pop
sub
xchg
ds
push
mov
in
dec
ffreep
fmull
push
clc
mov
test
ret
mov
in
adc
imulb
dec
cmp
pusha
jbe
cwtl
fdivs
clc
jo
cwtl
and
jge
inc
sahf
xchg
cmp
daa
jns
out
out
xchg
add
pop
xor
jmp
xchg
cmp
inc
or
pop
jge
xor
jne
std
push
aam
mov
mov
pop
jb
sub
push
les
push
fistl
leave
mov
sub
int
push
pushl
enter
pop
mov
dec
ljmp
jle
adc
idivl
inc
test
cmp
in
test
sbb
js
data16
xor
in
je
sti
sub
shl
pop
xchg
adc
test
pop
adc
lds
adc
mov
fs
scas
mov
out
iret
add
es
pop
adc
fadds
arpl
aas
fs
jmp
xchg
push
cmp
xchg
stos
mov
jmp
xorl
sbb
xor
les
pop
mov
cltd
push
shrl
inc
xchg
call
or
mov
push
cmpsl
adc
mov
mov
dec
pop
ja
stos
enter
mov
jbe
das
push
add
inc
mov
shrl
scas
sti
dec
xor
addl
pop
shll
pushf
or
xor
inc
add
fimuls
mov
nop
dec
arpl
sub
mov
std
negb
or
mov
mov
int
into
add
pop
inc
sahf
jp
aas
cmp
lods
cltd
ret
fwait
rorb
das
sbb
pushf
mov
clc
mov
xor
subl
cwtl
push
jbe
outsl
or
jg
mov
stc
inc
js
cs
pop
leave
test
mov
inc
stc
shlb
push
xchg
imul
mov
xacquire
ret
mov
jno
push
in
les
gs
daa
inc
test
call
cld
adc
mov
push
fdivrs
sub
add
sbb
inc
fs
repz
push
adc
in
sti
mov
sbb
scas
jl
imul
aaa
mov
ljmp
pop
insl
aaa
xorl
loope
je
popf
cmp
or
jp
sbb
popa
jge
cmc
cmp
cmp
xor
jecxz
mov
fucomip
ret
jmp
mov
sub
jge
mov
je
sbb
aas
lahf
inc
or
add
pop
adc
and
cwtl
jo
mov
aaa
adc
or
pop
mov
fisttps
xchg
inc
push
sbb
les
push
pop
enter
mov
dec
fidivs
adcl
xor
sub
shrl
jecxz
sarl
inc
add
xor
mov
cwtl
enter
adc
cmp
scas
fidivrs
test
rclb
test
aam
test
push
push
stos
in
pop
nop
pop
xor
pop
and
sub
xor
and
dec
cmp
idivl
push
loop
push
stos
lods
and
mov
mov
lcall
aas
cltd
sub
lret
loopne
je
stos
fcmovnu
xchg
dec
xor
dec
ret
fwait
sub
notl
or
inc
push
call
les
idivb
lahf
inc
xchg
mov
sub
push
dec
dec
aad
sbb
stos
cmp
pop
ja
add
mov
pop
test
cmp
ret
cmp
cs
aaa
lock
fisttps
imul
and
cmpsb
mov
push
ja,pt
aas
fmull
add
rolb
jmp
mov
setb
mov
pop
mov
cmp
xchg
out
sbbb
sub
mov
mov
pop
jg
dec
push
jne
nop
rorb
sbb
cmp
or
mov
test
loope
mov
mov
mov
sub
iret
rorl
jp
xor
mov
stos
cld
imul
xor
je
mov
mov
cmp
or
cmc
nop
sarb
add
and
sub
das
fidivs
pushf
inc
dec
xchg
cwtl
push
lret
cmpsl
mov
inc
xchg
sub
shlb
inc
xchg
daa
imul
cmp
pop
mov
addl
mov
loopne
in
pop
xor
push
mov
xor
pop
mov
aaa
jb
insl
enter
jecxz
pop
cmc
imul
jnp
mov
push
pop
roll
cmp
out
icebp
mov
ret
xchg
rorl
mov
mov
movsl
cs
sbb
ret
add
lods
jg
push
sahf
scas
insb
loop
arpl
push
in
les
ret
mov
dec
loopne
popf
sub
outsb
add
mov
push
es
in
into
shlb
mov
lds
iret
in
inc
outsb
push
data16
stos
add
fs
xlat
xchg
fstpt
pop
cs
dec
xchg
in
push
dec
scas
push
or
jo
mov
dec
fs
lock
std
nop
push
xor
mov
push
outsw
je
and
pusha
jnp
out
xor
sbb
ja
jle
xor
and
iret
xchg
out
cwtl
in
in
ss
xchg
fidivs
push
loope
shrb
push
mov
scas
jo
xchg
jae
cmp
sahf
dec
jb
loop
mov
pop
add
push
ljmp
loope
jle
and
addl
pop
mov
or
mov
push
outsb
push
cmp
std
push
adc
addl
aad
and
lret
mov
xchg
data16
dec
push
rol
cmp
xor
mov
scas
sbb
add
sub
in
and
sub
sub
pop
xor
adc
mov
sbb
ret
dec
das
sub
int
mov
pop
pop
or
pop
add
and
lcall
arpl
jnp
xor
clc
test
lods
test
cli
inc
daa
sub
fildl
icebp
les
adc
dec
mov
loope
pusha
or
cld
pop
add
cmp
push
lods
add
jbe
minps
push
fcomps
adc
lds
into
aaa
jp
in
lock
cmp
cmp
xor
in
pop
insl
jo
sub
lahf
imul
into
out
dec
cs
push
pop
movsl
divb
xor
mov
pop
and
jo
stc
pop
repz
stos
stos
mul
jmp
cmpl
cmpb
jge
xchg
jle
aam
inc
mov
push
pop
xchg
imul
arpl
call
mov
xor
daa
loopne
xchg
lock
sbb
xchg
jge
fcmovne
dec
daa
bnd
scas
xchg
mov
loope
mov
mov
dec
into
or
jns
cmp
or
ja
fs
leave
iret
daa
addb
pop
cmpsl
add
daa
mov
fcomi
ficoms
push
std
movsl
adc
and
mov
inc
mov
jecxz
mov
dec
cmp
sub
das
aaa
sub
sbb
pop
shr
cmpsl
pop
ja
dec
or
xchg
hlt
fwait
xchg
cmp
xor
mov
jmp
push
dec
pop
mov
jo
push
imul
aad
push
cmp
andl
insb
call
in
int
push
push
lret
xor
scas
mov
fstl
xor
pop
in
and
movsl
lods
and
cs
push
nop
in
rep
lfs
sbb
and
mov
push
mov
nop
nop
jns
xchg
stos
sub
add
inc
inc
les
push
outsl
out
push
scas
or
mov
mov
dec
das
and
rolb
add
jge
popa
in
dec
leave
mov
dec
js
es
pop
vpunpckhqdq
cmp
scas
add
mov
xorl
popf
inc
pop
stos
in
cmpsl
cld
and
out
arpl
mov
push
int
jb
insl
cmc
mov
cmp
or
mov
dec
daa
mov
shrl
aam
in
jmp
or
dec
lea
lret
jle
adc
in
dec
pop
xor
mov
test
or
das
enter
mov
movsl
xor
lods
mov
jnp
jl
lahf
push
push
test
adc
pop
and
sub
insl
in
adc
popa
add
aad
jl
pusha
mov
lea
push
xor
idiv
xchg
mov
and
mov
lea
pop
mov
dec
frstor
mov
repz
cld
and
cmp
adc
dec
icebp
adc
dec
mov
mov
je
and
xchg
cmpsl
cli
dec
jmp
xchg
aam
out
clc
jbe
arpl
movsl
cmp
hlt
sub
scas
and
pop
pop
insl
or
cli
add
js
imul
addl
jge
jmp
out
repnz
in
incb
mov
push
loope
pop
mov
and
andb
out
scas
mov
pop
pop
mov
mov
repnz
test
fs
mov
ljmp
in
pushf
mov
stos
call
scas
sub
cli
push
xchg
push
push
or
jae
out
hlt
ret
into
fsubrl
lods
cmp
sbb
bound
and
cmp
popa
fistpl
loop
lods
call
xchg
loop
adc
adc
pop
mov
add
mov
inc
je
popl
pop
lds
clc
jge
cmpsb
repnz
insb
dec
outsl
pop
stos
xlat
jmp
push
arpl
enter
xchg
xchg
lods
ss
shll
mov
push
mov
hlt
das
outsl
push
xchg
call
stc
inc
push
xor
lret
fistpll
insl
pop
cltd
out
lahf
and
stos
and
add
adc
shlb
mov
loopne
pushf
push
sbb
mov
andl
dec
pop
fcomps
lods
hlt
out
pop
pushf
add
xchg
rorl
mov
scas
ds
push
xor
adc
xor
sbb
pop
mov
push
mov
aas
jl
xchg
cli
sub
leave
push
fadds
fst
pop
adc
rcrb
sub
les
pop
imul
push
jbe
rolb
mov
fiadds
fs
xchg
aas
test
add
inc
sbb
lret
test
push
loope
jno
sbb
sti
add
int
fs
xchg
dec
test
daa
stc
cs
xor
js
or
sbb
cmp
mov
sti
orl
movl
lock
sbb
cmpsl
mov
mov
adc
push
push
adc
andl
sub
cltd
mov
outsb
fdivl
lcall
fs
orl
xchg
sbb
dec
dec
cli
sbbb
lahf
movsb
dec
pop
mov
mov
stos
adc
inc
adc
mov
adc
pop
lods
sub
in
out
dec
sbb
sbb
push
xchg
jnp
pop
pop
mov
xacquire
xor
ljmp
xlat
lds
dec
fidivrl
xchg
inc
mov
rcrb
lret
int
push
add
jae
call
push
mov
fcoms
and
aam
rcrb
inc
push
insb
cmp
idiv
mov
popf
test
in
push
int3
xchg
pop
mov
cmp
adcl
xor
mov
mov
out
pop
xchg
lret
jle
out
mov
jns
lock
mov
data16
enter
xchg
push
add
leave
and
mov
jp
cmp
popa
or
inc
sbb
sbb
mov
or
fistl
adc
les
int3
shrb
test
or
sbb
adc
pop
and
sub
lods
out
popf
outsb
mov
sub
cmp
popa
sbb
push
cmp
sete
pop
subl
cli
shrl
xchg
into
xchg
je
movsl
jp
stos
subb
enter
test
fistpl
and
xchg
inc
movsl
test
sub
cwtl
add
jge
imull
bnd
mov
sbb
or
xchg
clc
jnp
cwtl
mov
jb
loopne
sub
cld
adc
imul
mov
cmp
dec
mov
xchg
add
hlt
and
rclb
scas
das
push
jge
movsl
sub
xchg
fistpl
ret
hlt
mov
and
stos
xchg
dec
mov
scas
lahf
xlat
test
jbe
jp
ja
sub
frstor
mov
ret
aam
dec
cmpsl
mov
and
and
pop
push
popa
scas
cwtl
adc
sub
xor
jl
and
sahf
xchg
xor
test
fsubrs
fs
rolb
lea
jb
lods
into
pop
test
shll
or
jp
mov
das
mov
jmp
fisubrs
fs
cmp
fsubrs
sbb
dec
cmp
xor
lea
xor
pop
pop
ror
mov
aad
lods
adcl
test
jo
rorb
jno
lock
popa
aad
ljmp
cmp
fwait
loop
xor
add
sub
int
out
xlat
mov
pop
arpl
roll
cs
out
dec
lret
sahf
jns
push
mov
xor
push
nop
jp
loopne
jb
pop
pop
mov
int3
jno
add
and
jp
jbe
mov
and
mov
rcll
fisttpll
and
dec
jno
lock
jge
rclb
mov
subb
pop
push
movsl
lret
lea
mov
fnsave
mov
lahf
adc
fidivrl
sub
cmp
daa
loop
roll
xchg
xchg
popf
add
push
fcoms
xor
add
mov
mov
call
fdivp
and
leave
rolb
leave
push
test
call
pushf
fbstp
xor
and
adc
insb
arpl
insb
jb
pop
mov
adc
fs
mov
into
lods
scas
or
cld
xor
loope
mov
mov
mov
push
jnp
out
fwait
bnd
and
cmp
mull
out
cmp
dec
cs
push
sub
test
mov
pop
inc
sahf
pop
sub
jno
in
hlt
jge
sar
les
or
les
cmpsl
aas
mov
xchg
out
mov
jle
jbe
data16
int3
popa
adc
push
push
inc
jne
mov
mov
sub
or
jb
inc
cs
pop
test
in
clc
sahf
xchg
dec
lods
test
jmp
xchg
std
dec
addr16
and
jbe
adc
xchg
mov
mov
scas
jno
adc
or
mov
fnstenv
rorl
clc
sub
ja
scas
cmp
popa
into
loope
ficoml
adc
cs
aam
aaa
data16
add
mov
cwtl
data16
mov
xchg
jl
adc
arpl
in
inc
lcall
clc
cmpb
xor
ficomps
cmp
inc
cltd
in
mov
dec
lods
leave
xchg
pushf
gs
andb
sub
data16
push
insl
push
in
loop
jb
lock
enter
leave
movsl
sub
jbe
sbb
cld
push
rcrb
and
pop
inc
pushf
inc
mov
xchg
fidivl
lcall
cs
lea
mov
ret
pop
in
cmpsl
sub
push
or
js
xchg
icebp
push
loopne
test
dec
add
bound
mov
into
push
cmp
fstl
sub
lock
and
rcll
push
mov
jecxz
popa
mov
or
dec
mov
std
push
sbb
loope
xchg
fnsave
xchg
jle
out
rcll
jge
mov
jne
ja
es
sbb
fisttpll
pop
imul
xchg
das
push
lea
repz
imul
mov
shrb
call
xchg
dec
push
fstps
cmp
dec
pop
icebp
js
mov
mov
imul
push
xorl
mov
jbe
adc
movsl
je
cmp
xchg
sbb
lahf
cmp
sbb
test
pop
in
pop
pusha
fiadds
test
call
cmpl
xor
mov
sbb
in
cmpsb
loopne
jg
repnz
jle
hlt
popf
sub
inc
stos
inc
in
scas
fs
cwtl
insl
xor
imul
lcall
cmp
adc
ja
mov
mov
arpl
jle
xor
jge
xor
inc
daa
cmpsl
stos
cmpsl
dec
dec
or
add
iret
or
rorb
dec
xor
push
andl
hlt
sar
sbb
push
clc
das
inc
push
inc
push
mov
adc
pop
fs
or
rolb
out
out
popf
push
ficoms
fistpl
arpl
das
movsl
inc
neg
out
fists
popf
or
or
pop
hlt
scas
sub
ja
outsl
and
sti
cli
or
shll
or
aam
xchg
jb
iret
xor
orl
cmp
sti
insb
sub
or
pop
or
adc
sub
and
loopne
dec
mov
dec
icebp
fbld
out
mov
fistpll
mov
xor
loope
out
mov
movsb
sti
cli
pop
int3
lds
imul
fimull
or
xchg
jbe
cmp
pop
mov
aam
insl
shll
pop
repnz
addr16
cli
fildll
mov
mov
xor
aas
jp
jb
and
repnz
mov
mov
mov
inc
pop
das
xchg
adc
push
or
ss
jo
xor
repz
cld
mov
jns
xor
cmpsl
add
lock
push
mov
and
ret
mov
push
arpl
div
sub
pop
mov
xchg
icebp
das
das
pop
mov
xchg
xor
cltd
sub
push
pop
int3
cmp
cmp
dec
or
inc
movsb
int
xchg
inc
pop
cmpsb
je
xor
xorb
push
or
push
add
or
pushf
lods
and
aaa
sbb
insl
fimuls
xor
imul
aas
in
outsb
sarl
popa
shll
inc
jo
push
mov
dec
repnz
sbb
adc
pop
jnp
and
hlt
cmovg
sbb
movsl
and
push
clc
sti
loope
dec
and
insl
mov
fsubl
mov
jnp
aaa
frstor
or
stos
sbb
js
push
rolb
std
addr16
sub
ffreep
loopne
pop
faddl
call
inc
rcrb
mov
loop
test
xlat
push
lods
daa
sub
pop
stos
stos
xor
roll
enter
out
push
dec
test
icebp
push
inc
faddl
or
shrb
fwait
out
lahf
rcl
adc
mov
ljmp
push
push
out
xchg
push
push
inc
mov
popf
mov
movsb
in
xor
insl
jbe
jl
jge
and
push
xor
fwait
mov
sbb
dec
in
xchg
jno
mov
lods
jp
push
cmc
roll
mov
xchg
mov
pushf
decl
cmpsb
lret
or
daa
pop
rcll
lret
popf
addr16
mov
xchg
xchg
xchg
loopne
cmp
cmp
stos
cmp
sbbb
mov
sub
rorl
andl
std
pusha
loopne
aad
or
sbb
out
std
ret
dec
sub
and
bound
push
mov
dec
add
mov
das
mov
push
or
ret
in
scas
jns
dec
and
repnz
outsb
and
jae
lret
add
xor
testl
mov
test
inc
push
inc
or
pop
dec
mov
int
daa
loope
jae
cmpsb
nop
jge
movsl
xor
dec
mov
pop
adc
popf
in
sub
les
push
movb
xorl
or
xchg
ljmp
adc
add
sub
out
xchg
cmpsb
outsb
pop
mov
sub
pop
scas
adc
and
add
push
inc
mov
or
cmpsl
push
into
pop
jg
insl
push
ret
push
cs
sub
ror
stos
sbb
lahf
push
mov
pop
imul
fisubl
sar
mov
xor
fbstp
mov
pop
push
pop
fcmovb
jne
xsha256
cmpsb
xlat
lods
push
adc
out
mov
jmp
out
pop
adc
xchg
flds
outsb
or
shll
leave
cld
inc
sbb
push
jbe
sbb
sub
leave
xor
adc
mov
xchg
outsl
cmpsb
aam
fwait
es
dec
out
mov
jnp
int3
std
sub
aam
sti
inc
sub
inc
mov
jns
test
sub
loopne
sbb
int
mov
repnz
xchg
dec
mov
clc
imul
int3
neg
mov
pop
or
sub
aad
loop
cwtl
adc
stc
pusha
rcrb
cli
sub
and
cmp
ret
das
out
push
jns
mov
adc
jae
mov
jb
sbb
lea
mul
std
cmp
or
add
lcall
sub
xor
mov
mov
lds
jmp
mov
jno
lcall
mov
mov
aad
pop
int
or
mov
mov
xor
push
pusha
mov
adc
int3
fwait
and
and
cli
cli
mov
fmulp
sti
gs
outsl
daa
sbb
cli
aas
out
add
in
daa
xchg
fadd
cmp
push
rorl
dec
leave
sahf
clc
or
adc
xor
sub
push
add
test
dec
inc
mov
mov
sub
push
push
out
push
es
scas
or
ja
pusha
adc
sub
pop
xchg
cmp
in
mov
hlt
es
pop
test
lock
push
mov
pop
fs
addr16
sub
stc
in
push
jae
jp
outsb
xor
out
mov
cmpsl
ds
cmp
shlb
or
in
movsb
sub
in
jmp
es
adc
cltd
lds
inc
ljmp
push
jae
pop
and
push
push
xchg
or
sarb
mov
or
andb
or
dec
dec
int
adc
push
mov
inc
pop
push
or
stos
mov
movsl
pop
add
cmp
dec
mov
es
in
push
cmp
arpl
sbb
shld
lcall
adc
lea
jne
xchg
out
jmp
in
in
test
imul
adc
lsl
jmp
ja
sbbl
xor
inc
sub
or
hlt
ljmp
sub
jge
cwtl
fisttpl
ja
jmp
addr16
ret
pop
in
xchg
jmp
adc
out
ss
divb
cmp
mov
adc
cmp
dec
sub
les
rcr
mov
call
cltd
or
enter
fnsave
repnz
jge
insl
sub
and
inc
aas
scas
rolb
jge
outsl
jge
push
xor
push
ds
sbb
push
push
jecxz
arpl
cltd
fsub
sbb
fnstcw
cmp
mov
mov
sub
mov
insb
jg
inc
scas
jns
cmp
loop
jo
mov
inc
pop
dec
jmp
xor
dec
or
fdivl
lahf
sub
or
aad
imul
fsub
cs
enter
sub
cmp
and
imul
cmp
sub
int
enter
mov
sub
sub
out
pop
and
repz
in
mov
and
inc
sbb
or
push
push
leave
adc
xor
je
or
cmp
add
jne
lahf
sahf
insb
sub
xor
mov
xor
bound
fistpl
outsl
movsb
movb
pop
mov
pop
mov
mov
mov
mov
add
push
imul
xor
jge
stos
lods
cmp
jb
pop
sbb
cmpsb
mov
data16
mov
mov
sub
repz
loopne
adc
les
mov
out
adc
mov
xor
out
daa
and
test
sbb
fsts
adc
pop
subb
popa
mov
pusha
arpl
loopne
mov
daa
or
jl
or
aam
cld
pushf
jge
sub
lds
sbb
mov
push
lea
insl
imul
mov
test
push
hlt
dec
or
jo
test
mov
dec
repz
or
push
xor
xorl
fistps
cmp
es
lcall
or
push
push
mov
les
pop
cmp
xor
cmc
js
aaa
push
in
cmp
inc
rcrb
cmpsl
nop
dec
ljmp
sub
cs
test
mov
repz
std
mov
fstpl
mov
add
jb
adc
cs
xchg
inc
push
mov
in
movsb
arpl
das
movsb
pop
push
test
mov
mov
les
cmpsb
and
aam
jp
cmp
lcall
add
loop
jp
lods
xor
jno
int3
sub
add
xor
sub
adc
dec
dec
add
push
pop
lcall
stos
inc
pop
sub
xor
adc
jmp
movsb
mov
mov
mov
fdivl
pop
dec
jmp
lcall
mov
mov
repnz
push
lods
pop
cwtl
fisttps
mov
imul
push
lock
mulb
mov
dec
jg
std
xchg
or
mov
imul
xor
inc
mov
les
insb
cwtl
popa
gs
dec
sub
dec
mov
pop
out
out
push
push
shrl
jb
pushf
shrl
dec
xchg
mov
mov
into
in
outsb
out
test
flds
iret
test
sub
loopne
mov
lock
lahf
pop
loop
or
xchg
stc
lea
icebp
outsb
or
fld
jno
cmpb
adc
loopne
dec
jae
lock
and
adc
mov
enter
dec
xchg
fs
push
fwait
fs
mov
jb
mov
stc
cmpsb
sbbb
jge
mov
xor
push
mov
mov
mov
xor
inc
cld
adc
test
imul
mov
mov
dec
loopne
fbstp
in
mov
dec
sahf
mov
pop
shl
out
xor
lea
enter
inc
cmp
loop
call
sbb
outsb
mov
adcl
jge
inc
mov
in
jo
sub
ss
pop
lret
cmp
subl
stc
inc
adc
minps
or
icebp
adc
xchg
mov
call
push
pushf
scas
inc
stos
cmc
and
jg
mov
xchg
lcall
movsb
addr16
xor
push
pop
bound
or
adc
hlt
ds
iret
movsl
sbb
and
mov
adc
push
fadd
cmc
scas
mov
inc
icebp
lahf
mov
je
dec
inc
push
imul
xchg
pusha
test
xchg
mov
les
movsb
shrl
adc
scas
insb
in
pop
sbb
cwtl
push
fisttpll
loop
or
cmpsb
xor
daa
and
inc
inc
lret
inc
jne
std
loop
xor
xchg
push
ljmp
and
xor
push
mov
dec
loope,pn
lock
pusha
xor
mov
mov
jl
movsb
movsb
and
jno
dec
leave
rclb
out
fidivs
sahf
movl
sub
cmc
int3
loopne
or
and
pusha
adc
jne
mov
jo
pop
in
and
mov
scas
dec
jmp
aas
jl
popf
mov
push
popf
lea
cmp
jne
inc
mov
pop
push
test
call
push
and
xlat
and
inc
cmp
sbb
enter
gs
mov
sbb
jle
mov
fidivrl
jae
inc
das
fstpt
ss
imul
test
jns
fisubrl
mov
notb
cs
sti
jp
xlat
fs
and
inc
pop
mov
lea
mov
mov
je
xor
daa
push
sbb
cmc
mov
mov
aad
mov
cmp
es
pop
sbb
das
pop
mov
rcrl
gs
aam
cli
lods
cmp
cmp
adc
sti
pop
mov
stos
cmp
cmpsl
bound
inc
jg
fisubl
inc
in
pop
sbb
clc
movsb
add
jl
push
add
xchg
inc
loope
push
pop
and
out
jo
js
cwtl
mov
cmpl
xlat
jl
int
add
daa
in
clc
sbb
data16
adc
mov
jg
rclb
imul
and
inc
add
lret
mov
sbb
mov
nop
or
lret
notl
rolb
jne
sub
and
xchg
into
je
cli
scas
int
ss
jg
xor
cmp
cs
mov
inc
cmp
lods
lret
test
mov
push
loopne
xor
stos
push
mov
icebp
push
fwait
into
and
and
je
adc
pop
ss
push
pushf
cltd
inc
lahf
mov
dec
inc
jl
push
repz
inc
cwtl
cmp
xchg
enter
mov
fnstcw
jp
dec
int3
dec
push
leave
in
outsb
or
dec
je
lret
loope
pop
sbb
xor
cmpsl
xor
adc
xchg
mov
out
cwtl
jmp
mov
mov
pop
loopne
out
and
sub
out
adc
cmp
sbb
mov
pop
int
rorb
leave
add
out
or
dec
pop
in
cmp
jp
pusha
mov
pop
out
jp
shll
push
and
iret
jns
dec
ret
enter
stos
les
mov
pop
scas
adc
dec
jge
lahf
insb
push
or
leave
mov
dec
gs
dec
int
loopne
out
push
test
rclb
lret
pop
inc
cmp
mov
mov
xor
pusha
mov
xor
jmp
fmull
popf
mov
cmpsb
std
jae
mov
jg
push
sarb
mov
dec
int3
test
and
sbb
cli
inc
lahf
jae
mov
mov
mov
xchg
loop
cmp
mov
inc
xor
mov
int
das
push
sbb
les
push
push
jns
pusha
iret
jbe
xchg
loope
sub
imul
sbb
addl
add
movsl
daa
or
jns
mov
dec
fsubrs
mov
aas
hlt
leave
sahf
jecxz
test
dec
inc
pop
movsl
leave
popf
push
dec
sbb
pop
sti
lret
imul
adc
mov
shll
cwtl
movsl
test
fcompl
in
loopne
lods
add
or
jne
flds
and
push
push
orl
xchg
inc
pop
pop
negb
insl
sbbb
xor
arpl
test
daa
mov
and
fcmovnb
loop
std
jl
loope
inc
jb
iret
fs
push
xor
mov
adc
daa
cmp
pushf
or
xor
int
xchg
cmp
push
add
jo
cmp
xchg
pop
add
gs
outsb
mov
push
jne
jl
movsl
inc
sbb
sarb
dec
test
fmuls
pushl
scas
aad
shlb
sbb
xchg
fldt
mov
into
pop
repnz
sbb
push
repnz
push
fcompl
mov
and
les
sahf
pop
jo
fs
lret
stos
push
inc
xchg
sbb
xor
pop
dec
fmul
sbbl
shlb
pop
ss
cmp
lods
cwtl
sub
aas
ficoml
gs
mov
mov
test
fs
notb
ljmp
lret
gs
xchg
sub
in
arpl
jae
mov
pop
push
sub
sub
das
mov
push
andl
lds
add
js
cmpsb
sti
sti
mov
jns
dec
push
int
xchg
mov
outsb
adc
pop
outsb
mov
push
cmp
test
fs
sub
test
lds
jge
roll
inc
out
and
jne,pt
push
mov
je
sbb
inc
cwtl
lahf
in
lods
daa
imul
lods
mov
aad
fldenv
push
cmp
xor
in
cmp
dec
jmp
sar
xor
pop
jg
jecxz
in
fmull
mov
dec
cld
sbb
mov
in
or
repnz
bound
scas
dec
inc
fsubrs
cmp
loop
rcrb
add
mov
add
xchg
movsb
inc
and
add
and
xchg
test
ja
inc
and
pop
sub
bound
mov
jne
mov
mov
xchg
jl
rdmsr
in
mov
xor
add
sbb
inc
test
insl
jg
aaa
push
or
cmp
out
and
pop
out
aaa
mov
add
lahf
push
fsubl
add
bnd
imul
sub
xchg
pusha
std
lods
xlat
jo
ds
xchg
imul
and
pop
stos
pop
out
xchg
sbb
subb
fstp
in
lret
xchg
call
in
scas
cwtl
ficoml
lods
daa
aam
or
dec
mov
rcl
fs
mov
addr16
movsl
and
repz
cli
jecxz
mov
sbb
and
lods
push
pop
inc
mov
aaa
sub
imul
adc
sub
cmp
das
sub
mov
push
lcall
int3
scas
outsb
jnp
jl
fdiv
xor
ss
test
push
shrl
sub
adc
aad
jb
push
shll
out
out
rcll
push
or
icebp
filds
jb
sbb
cmpsb
cmpsl
dec
push
pop
jmp
sbb
push
aaa
int3
inc
pop
out
loop
jns
add
ret
adcw
xchg
testb
loope
outsb
sahf
outsl
xchg
push
mov
ss
jo
pop
push
lods
add
lods
add
repnz
nop
je
mov
inc
xchg
sbbb
ljmpw
gs
into
add
dec
gs
stc
test
cld
add
push
pop
sahf
xchg
xchg
and
aad
es
fidivs
sub
push
jns
sbbb
pop
sub
xlat
movl
sbb
scas
cmp
mov
lds
movsb
imul
mov
mov
add
test
out
inc
sub
fcomip
sbb
cmp
in
mov
dec
cmp
xchg
imul
lret
pop
sbb
or
in
fiadds
cltd
divb
jb
imul
loopne
lods
xchg
decb
hlt
scas
out
stos
jl
inc
sub
rorb
mov
fsubrs
cmc
mov
mulb
mov
and
mov
jecxz
iret
popa
in
sub
inc
jb
mov
jno
mov
add
lret
aam
ror
in
mov
and
cmp
mulb
ret
mov
and
fwait
adc
loope
pushf
daa
and
pushf
xchg
cmp
in
or
mov
test
clc
sbb
push
movntps
call
xchg
mov
pop
mov
sbb
push
inc
test
in
push
ljmp
dec
ljmp
ficomps
mov
popf
sub
fucom
movsb
jl
rcl
xor
lock
ss
or
push
cmp
pop
cmp
sbb
mov
cld
cmp
test
or
mov
sub
pop
icebp
movsl
imul
loop
lock
mov
daa
std
sahf
mov
pop
mov
stos
mov
shll
es
andl
sub
and
ja
add
or
xor
es
jl
cmp
push
lret
stc
mov
push
cmp
mov
cmp
loope
pop
add
dec
xchg
mov
mov
js
pop
dec
and
cmp
cmpsb
push
dec
mov
in
adc
dec
addr16
ffreep
dec
add
popf
rcr
mov
iret
lods
xchg
pop
inc
or
pusha
roll
ljmp
pop
xchg
sub
call
mov
movsl
inc
push
pop
sub
add
pop
stos
fimull
adc
rcrl
imul
cmp
mov
add
cmp
cmp
mov
lods
lret
mov
leave
and
mov
addr16
xchg
scas
aaa
xchg
int
xchg
popa
test
sti
pusha
sub
inc
push
scas
mov
lfs
loop
sbb
add
xor
out
andl
test
vmread
pop
or
scas
inc
cmc
and
rorl
mov
jmp
dec
push
xor
jge
mov
cltd
testb
mov
in
mov
pop
sub
faddp
jle
test
sub
and
je
std
xlat
inc
cltd
push
cwtl
vpmulhw
int
and
dec
push
add
push
dec
xchg
daa
cwtl
loop
sbb
das
imul
pop
in
imul
or
ja
das
test
test
mov
into
inc
push
inc
xor
or
ja
lcall
pop
rcll
aam
dec
aam
cld
and
sbb
loopne
divl
or
cwtl
pop
int3
and
or
push
push
arpl
fisttpl
dec
dec
jae
jl
sub
sub
fmuls
lock
fsubl
adc
ds
mov
mov
dec
psubb
std
dec
xor
add
mov
mov
rcll
lods
xchg
cmp
push
jns
adc
dec
test
pop
lahf
movsl
push
idivl
insl
xchg
xor
push
ds
lods
fsubp
inc
or
orl
dec
cltd
inc
arpl
aas
jo
jle
notl
mov
push
or
imul
scas
rorl
or
leave
mov
int3
jmp
push
cmp
pop
dec
fsubp
or
dec
rorl
movsw
lea
mov
inc
daa
cltd
inc
out
mov
cwtl
xchg
subb
ja
inc
int3
push
dec
xor
outsb
xchg
push
xchg
imul
repnz
adc
js
rcll
insl
outsl
aam
xchg
dec
add
and
pop
and
in
sahf
sbb
mov
push
lods
loopne
shll
sbb
in
pusha
or
xor
lgs
xchg
push
or
adc
push
rcrb
lret
xor
dec
xchg
jo
outsb
adc
jecxz
loop
ret
xorb
dec
insb
mov
jo
loope
sbb
bound
mov
mov
sarb
xchg
push
jb
imul
test
cmpsb
mov
test
mov
xchg
fs
cmp
sub
bound
dec
push
sub
and
pop
add
lods
mov
sub
sub
decl
inc
test
clc
jb
test
mov
lds
mov
or
loope
dec
dec
sub
push
dec
xor
xchg
dec
clc
sub
ror
or
sub
jl
adc
cmp
adc
dec
jae
rolb
sarl
lods
cli
fdiv
jne
mov
push
mov
jno
addr16
jae
repnz
lahf
shlb
popa
mov
mov
cmp
xchg
xchg
ss
ja
sti
fnstcw
in
scas
jle
shrb
and
in
fildl
fistpll
sbb
pusha
add
xchg
outsb
or
jl
jbe
in
cmp
popf
mov
inc
push
push
adc
jg
xlat
xchg
cmp
push
daa
out
roll
scas
inc
or
push
add
inc
pop
movsb
into
dec
test
mov
es
add
out
lahf
cmpsb
fs
fidivs
mov
push
jg
pop
xchg
cmp
std
xchg
cmpsl
pop
jp
sub
addr16
movsb
aas
and
fcmovbe
cmp
or
rcrb
dec
mov
loopne
cli
adc
mov
mov
inc
repz
inc
add
mov
pop
and
aad
pop
daa
inc
int3
ss
sbb
xchg
or
inc
sbb
mov
ljmp
outsl
test
pop
inc
or
or
outsb
or
enter
jp
leave
into
movsl
jns
sbb
push
push
enter
rorb
repnz
push
repnz
sbb
insl
mov
mov
push
icebp
pop
and
or
movsb
push
cmp
or
jno
xchg
jle
jg
hlt
fcmovnu
out
jbe
push
mov
pop
xor
dec
flds
shl
sbb
xor
stos
mov
mov
paddusb
sbb
pop
or
push
inc
adc
lret
out
loope
pop
sbb
mov
rol
and
adc
add
mov
sbb
inc
jns
pop
sahf
xlat
lret
dec
pusha
les
imul
sub
dec
fdivr
stos
xchg
xor
fldt
push
imul
in
cmp
js
scas
or
pop
add
or
inc
jns
arpl
dec
bnd
mov
mov
enter
nop
pushf
test
sub
pop
cmc
push
pop
sub
add
mov
scas
hlt
mov
lea
test
xchg
jmp
arpl
lock
fldt
dec
mov
sti
jbe
out
sbb
xor
mov
nop
cltd
lods
inc
fwait
adc
imul
xor
pop
inc
stc
add
out
testb
movsb
xchg
movsb
xchg
jp
shrl
call
test
jmp
or
mul
and
loop
gs
scas
dec
xchg
into
mov
xchg
and
push
push
test
mov
pop
test
loop
jg
aad
jecxz
dec
xor
or
in
dec
ret
mov
xchg
into
pop
rcrl
in
pop
cwtl
mov
jnp
fnstenv
sbb
test
lods
pop
into
test
lock
pop
dec
incb
das
daa
pop
movsb
bound
lahf
fwait
popf
adc
cltd
int
xchg
adc
pop
hlt
xchg
sub
xor
ljmp
andl
push
and
insb
cli
test
jns
pushf
out
cmp
insl
sbb
stc
xlat
iret
mov
add
cli
jae
or
leave
mov
jae
cmp
jb
push
jge
popl
ss
mov
addr16
loopne
or
call
sbb
cmpsb
sub
gs
sbb
ds
leave
push
fiaddl
ret
scas
stc
pusha
cltd
adc
outsl
scas
mov
movsl
fbld
sti
lcall
xchg
add
loop
adc
pop
xor
mov
and
loopne
mov
rorl
lods
in
cmp
mov
mov
mov
mov
outsb
pushf
pushf
mov
out
js
cmp
test
jns
push
scas
hlt
mov
push
mov
ljmp
test
or
xor
popa
mov
adc
out
andb
notb
loope
dec
fst
push
movsl
hlt
call
push
insl
jnp
sub
sub
xchg
popa
test
lds
mov
addb
xchg
into
inc
scas
into
loopne
test
inc
mov
jnp
into
popf
xor
inc
in
sbb
pop
data16
repz
jecxz
cli
or
das
stos
mov
in
or
add
sbb
sub
test
sub
inc
lcall
faddl
adc
cmpsb
shl
filds
test
lods
and
push
mov
jb
sub
sti
orb
outsl
outsl
mov
push
jns
xor
sub
push
add
decb
repnz
adc
mov
les
int
adc
dec
mov
call
sub
jae
leave
xchg
lahf
pop
jmp
add
dec
pushf
repz
jl
es
in
cmp
pusha
data16
adc
rcrl
std
push
aad
out
jno
pushf
clc
iret
pushf
adc
fsubrl
dec
ss
mulb
cmc
repz
ret
jecxz
or
mov
outsb
add
mov
dec
frstor
je
and
scas
push
mov
and
jns
push
pop
lahf
mov
xchg
repz
popl
fwait
in
mov
ds
dec
push
test
inc
pushf
shl
movsl
fists
mov
cwtl
jne,pn
mov
mov
mov
dec
inc
int
sub
inc
ds
adc
imul
fwait
popa
pop
std
cmp
ja
xchg
mov
ljmp
das
xlat
orb
push
jle
push
add
insl
cwtl
sub
mov
mov
mov
sbb
in
out
xlat
cwtl
rorb
jge
rcrb
push
fcompl
js
push
stos
xchg
in
enter
xor
push
add
mov
dec
sbb
divl
in
aam
addl
stos
rorl
mov
inc
xor
jp
negb
pop
jle
int3
adc
dec
and
mov
aad
dec
xchg
or
or
insb
iret
pushl
fs
bound
pop
lods
mov
call
pop
dec
lret
cmp
sub
xor
mov
push
aaa
imul
mov
xor
xchg
in
jmp
push
pop
leave
arpl
stos
mov
scas
testl
js
hlt
cltd
sub
mov
and
lods
mov
mov
stc
in
mov
jae
std
loopne
ljmp
in
sub
mov
xchg
ret
sub
jmp
bound
cld
test
mov
mov
hlt
inc
and
ds
negb
mov
out
add
daa
fstl
mov
mov
clc
sub
mov
dec
lcall
push
mov
lret
jb
shrl
jl
xor
mov
les
xor
rcll
dec
mov
mov
push
xor
mov
icebp
stos
xor
ds
xor
push
ja
daa
dec
sahf
mov
aad
ror
js
imul
lods
nop
bound
int3
cmp
or
xor
push
sub
stc
xchg
xchg
xor
arpl
push
sub
lods
hlt
repnz
decl
sbb
xchg
dec
inc
xor
jge
xchg
and
pop
lods
sbb
lahf
xor
ds
shrb
scas
ret
cld
pop
loopne
divl
dec
adc
orl
sub
stos
or
cli
out
in
mov
lea
cld
das
stc
pop
test
repnz
sarl
outsl
cs
sub
inc
cs
leave
ja
pusha
das
fnsave
push
lock
mov
scas
popf
nop
imul
sbb
or
push
inc
in
inc
inc
pop
push
loope
jecxz
inc
push
out
xchg
pop
adc
jg
pushf
bound
adc
or
dec
in
popa
sahf
cmp
lahf
repz
das
or
jno
icebp
xchg
jne
roll
sub
gs
ret
sub
jno
stc
flds
das
std
into
xchg
add
and
add
adc
imull
xchg
cld
jle
xlat
stc
loop
call
shrl
add
xchg
sub
mov
nop
lea
out
popa
fsubrl
jmp
jns
sub
movb
mov
dec
lahf
outsl
fxch
stos
es
les
stos
cltd
pop
mov
push
ret
popa
pop
push
jns
jp
test
in
call
add
mov
cmp
mov
mov
push
jge
mov
sub
lea
push
cmp
xchg
jmp
add
xlat
jne
push
cltd
int3
jge
scas
xor
adc
scas
movsb
jecxz
enter
cs
jmp
mov
test
mov
ds
fsubrl
jl,pt
push
insb
scas
shll
lock
into
add
gs
movsl
jle
xchg
cs
and
das
imul
xor
cld
pop
loope
pop
movsb
pop
jb
xlat
dec
pop
outsb
shlb
mov
push
or
lods
lock
add
mov
fisubrl
stos
aas
clc
jo
fdivrl
loope
inc
sti
fcoml
pop
out
movsl
fsubrl
mov
daa
and
sbb
jbe
mov
inc
and
mov
or
cmp
mov
mov
fisubl
lahf
pop
iret
shrb
jl
mov
addl
into
adcl
insl
popl
or
cmpsb
xlat
add
pop
lret
cld
mov
stos
jo
stc
lds
sbb
jle
inc
aas
cmpsb
mov
out
mov
jmp
mov
lcall
dec
sub
pop
cmp
enter
xchg
stos
jbe
inc
aam
mov
or
jno
cmp
fisttpll
mov
jns
mov
rolb
jmp
mov
push
mov
dec
add
cli
imul
and
cmp
ficomps
std
dec
rolb
adc
stos
add
xchg
movsl
mov
xchg
and
cmp
add
clc
test
mov
iret
adc
push
mov
call
or
adcb
mov
into
cld
jecxz
mov
inc
sbb
ds
dec
test
mov
pop
ror
les
negl
sub
mov
popf
je
pop
adc
lahf
inc
ret
push
push
mov
fadds
sbb
adc
mov
mov
inc
and
jle
filds
push
in
and
xchg
mov
jp
and
push
dec
das
es
sub
cltd
std
scas
js
mov
ret
dec
into
jbe
inc
ret
int3
mov
or
push
popf
dec
fisubs
cmpsl
ds
les
lahf
pop
clc
push
or
bound
xchg
adc
pop
push
sti
daa
sub
pop
push
sti
or
cmpsl
into
movsl
inc
push
xor
push
cmp
add
sbb
pop
xchg
out
mulb
fs
mov
jle
mov
xor
sub
xchg
aad
sbb
xchg
loope
dec
mov
fwait
jecxz
mov
mov
in
addl
mov
dec
pop
mov
adc
fdivl
mov
ss
hlt
repz
inc
adc
push
pop
mov
or
jo
jg
into
ss
mov
pop
add
xchg
pushf
repnz
xchg
adc
rclb
jb
imul
xor
fs
test
cs
andl
push
jle
fbstp
mov
sub
hlt
mov
in
inc
lods
fsubl
pop
lock
mov
adc
shrl
cmp
ret
data16
out
inc
dec
in
push
xchg
mov
inc
int
jbe
loop
pop
aaa
inc
mov
aas
negl
jb
mov
fists
add
dec
loop
pop
or
rcrb
add
mov
dec
mov
adc
lret
je
shrl
mov
les
orb
addl
push
ds
mov
data16
mov
xchg
pop
cld
outsl
nop
pop
jmp
test
imul
mov
dec
mov
pop
push
xlat
sbb
and
xchg
movsb
jae
out
fists
stos
outsb
adc
int3
push
dec
fwait
loope
bound
inc
pop
fxch
cmp
push
dec
jecxz
mov
or
sbb
inc
repz
test
inc
xchg
ljmp
insb
sahf
repnz
icebp
and
mov
adc
mov
idivl
push
fcoms
inc
add
lcall
lahf
push
xorl
push
mov
jp
push
shr
stos
ret
pop
xchg
mov
iret
sbb
mov
test
lret
mov
and
test
cli
test
movsb
test
jle
out
fnstenv
jbe
push
xchg
fcmovu
jno
xor
ret
and
addr16
or
or
aam
push
mov
cmp
ret
mov
inc
jle
loopw
mov
mov
jne
rclb
stos
add
add
adc
jae
lods
xchg
inc
cmp
mov
inc
adc
fldenv
test
sbb
xchg
dec
fwait
jo
pusha
add
adc
movb
dec
inc
add
mov
mov
xchg
popa
mov
xchg
bound
iret
fcomp
lret
dec
inc
lret
roll
ja
mov
outsb
scas
xor
pop
cwtl
add
pop
inc
push
popf
mov
xchg
mov
ss
pushl
add
and
icebp
hlt
rcll
mov
nop
in
movsb
dec
add
and
scas
insb
sbb
sbb
push
sbb
cli
popa
dec
sub
mov
mov
ret
mov
out
xor
fistps
xchg
leave
vandps
jno
add
inc
gs
and
cmp
cmp
jb
inc
jp
mov
movsb
mov
mov
push
leave
arpl
popf
mov
loopne
dec
mov
add
das
jg
mov
adc
push
repz
pop
lods
inc
cmpb
in
xchg
push
xchg
mov
or
xchg
mov
fdecstp
aaa
imul
xchg
popf
sub
or
outsb
mov
add
pop
xchg
sbb
mov
push
es
stos
mov
adcb
fldl
fisubl
dec
popf
rcr
test
jp
sub
test
js
out
xor
lcall
shlb
call
cs
shrl
dec
int
arpl
jne
les
jmp
ss
jecxz
popf
outsl
in
pop
dec
xchg
stc
jae
sbb
pop
ljmp
insl
jecxz
mov
sti
push
jb
mov
xchg
jg
nop
xchg
outsl
lret
popa
das
stos
iret
les
cmp
jge
add
mov
sbb
and
xor
mov
lds
pop
lock
push
ss
movsb
lahf
movsl
leave
push
cmp
movsl
popf
sbb
sub
and
pop
adc
in
push
add
sti
sub
mov
cmpb
es
cmc
lcall
push
into
sbb
stos
dec
pop
xchg
mov
cmp
gs
and
popa
add
mov
add
js
xor
adc
mov
lods
sub
lods
dec
add
in
push
adc
push
inc
xchg
fucom
aaa
aad
sbb
adc
jmp
scas
test
dec
loop
push
sti
fcmovb
push
andb
out
cmp
lock
dec
dec
dec
enter
shl
repz
movsb
mov
pop
jg
cmpsl
mov
mov
inc
vmovshdup
add
mov
aaa
mov
mov
out
ficoml
jbe
movsb
out
xchg
enter
jmp
nop
mov
xchg
jno
cmp
jae
test
add
jecxz
popf
cmp
das
pop
cld
add
jge
push
scas
jmp
mov
cld
jmp
leave
into
rol
sub
mov
mov
jne
inc
adc
jae
fmull
fistpl
lock
in
lds
mov
dec
cmp
adc
pop
and
jmp
repz
shrl
mov
cmp
cmpsl
or
push
jl
xchg
pop
jnp
dec
repnz
out
sbb
stos
mov
test
add
sub
pop
mov
and
mov
jmp
push
in
fs
stos
cli
ficoms
xchg
jno
pop
cmp
cmc
ljmp
adc
mov
popa
mov
shlb
inc
jae
icebp
push
call
shrb
xchg
pop
movsl
sbb
push
test
inc
stc
sahf
xor
test
scas
add
outsb
shlb
repnz
cld
sub
insl
lret
scas
imul
iret
andb
adcl
dec
fwait
cld
xchg
int3
dec
lock
pop
loope
stos
and
jl
cmp
stos
mov
fcomp
mov
fdivrs
mov
ljmp
aas
flds
mov
jl
xchg
sbb
sahf
push
or
inc
mov
fdivrp
outsb
lahf
jl
push
push
push
test
popf
push
push
scas
cmp
xlat
lret
nop
mov
inc
xor
mov
adc
fimuls
xlat
xor
and
inc
jnp
push
jecxz
cmp
rol
test
bound
cs
test
pushf
pushf
mov
dec
nop
add
ss
cli
mov
shr
jmp
pop
mov
out
pop
in
push
cwtl
ror
or
add
xorl
sbb
and
jle
and
and
pushf
loope
lock
js
out
jge
mov
inc
shll
nop
xchg
dec
aam
repnz
add
cmp
mov
xlat
push
cmp
xchg
mov
inc
in
call
test
pop
push
pop
mov
or
notb
jge
xchg
sub
movsl
call
or
xor
lock
push
xor
fcoms
adc
stos
or
sub
or
inc
jo
xchg
aaa
mov
dec
push
jns
daa
adc
pop
rcll
mov
inc
stos
xor
test
mov
lret
lock
lcall
cli
inc
repnz
cli
lea
jmp
stos
add
xchg
lret
jg
jg
popf
lea
xchg
sbb
cmp
cwtl
push
arpl
stos
fcoml
mov
add
mov
cmp
outsb
or
aaa
cmp
pop
popa
xor
aaa
pusha
inc
push
into
and
mov
dec
lea
sahf
push
and
sub
in
jne
rolb
mov
and
lods
dec
lods
lahf
pusha
mov
jle
mov
xor
aad
stc
insl
jo
xchg
jg
pop
xchg
sbb
sub
mov
jge
dec
sbb
xor
sbb
xchg
xchg
and
adc
dec
aaa
test
movsb
or
xchg
mov
adc
mov
rorb
out
nop
jecxz
inc
je
bound
xor
jb
pop
loope
fildll
sub
rolb
add
push
or
add
push
bound
xchg
insb
sbb
addl
into
je
xchg
mov
clc
repz
fs
dec
xchg
in
jns
mov
sub
out
jnp
xor
xor
push
bound
adc
ficoms
mov
scas
and
xchg
xlat
xchg
mov
ss
ret
push
xadd
cltd
mov
jne
cmp
nop
stos
out
fsts
mov
pop
sbb
ss
inc
mov
dec
push
mov
hlt
loopne
or
pop
push
sbb
add
adcl
xchg
xchg
shl
mov
scas
ja
fwait
push
adc
or
jae
je
xlat
ss
rclb
pop
sbb
inc
mov
pop
push
add
movsb
xchg
fisttpl
cmp
lahf
sbb
lea
into
add
adc
and
and
adc
xchg
repnz
rorl
pop
call
lds
push
mov
xchg
jl
add
nop
jne
aad
adc
ret
jp
xor
shlb
inc
sbb
bound
xchg
mov
outsl
dec
out
sbb
jmp
pop
hlt
jmp
pop
ss
add
inc
and
and
decl
sbb
jb
cmp
sbb
movsb
xchg
out
inc
mov
repnz
sti
mov
std
ja
cmp
pop
pop
cwtl
jno
inc
sahf
sbb
cmpl
fstpl
jne
jno
xchg
shl
gs
cli
sbb
lcall
fildll
shrl
mov
sub
outsl
daa
mov
clc
dec
and
xchg
int
sub
dec
pop
adc
inc
xchg
out
mov
repnz
lahf
sub
sub
cld
sub
xchg
pop
test
cmp
inc
imul
nop
sar
lret
mov
call
mov
lret
movsl
sub
ja
sbb
movsl
add
in
arpl
pop
mov
pop
int
push
xchg
mov
dec
jns
rcrl
imul
aas
cmc
bound
adcb
add
cmc
inc
mov
mov
jb
mov
insl
idivb
sub
sbb
push
jl
add
imul
dec
loope
mov
and
call
imul
adc
loopne
fdivr
mov
clc
lock
loop
das
rclb
sub
stos
push
dec
mov
xor
jno
fdivl
mov
sub
fwait
inc
out
jmp
push
mov
iret
push
and
dec
jl
shll
xor
push
lret
popa
pop
mov
rorb
jmp
loopne
sub
cmc
mov
jmp
sbb
imul
cmp
hlt
pop
cli
cmp
mov
dec
push
fs
pop
push
xlat
scas
sub
sarl
pop
pop
jns
ja
loop
and
push
jecxz
or
jmp
or
push
dec
icebp
mov
test
cmp
cmpsl
add
dec
jg
push
pop
rolb
mov
aad
and
jno
in
mov
loope
sub
push
pop
pop
sbb
jmp
adc
mov
addr16
jb
je
imul
mov
push
lret
lcall
xchg
aas
cltd
mov
push
and
lods
sub
mov
and
sarl
mov
rcrb
push
divl
mov
cmp
push
or
mov
fmuls
cmp
jmp
cmp
aas
jle
xchg
lret
mov
mov
dec
cmpsl
sbb
fs
jmp
adc
sti
je
push
movb
adc
jp
jmp
mov
dec
sub
stc
pop
pop
mov
sbb
or
lods
movsl
test
xchg
aaa
mov
inc
sbb
inc
dec
shr
mov
sub
rclb
shlb
daa
pusha
mov
sub
add
fists
jle
fldl
xlat
stos
ds
aam
lods
xchg
daa
or
push
jo
cltd
push
sbb
data16
xchg
sub
adc
xor
mov
mov
push
sar
push
in
jecxz
das
xchg
xor
nop
out
decl
add
jl
imul
ds
push
add
stos
pop
xchg
adc
icebp
push
pop
cmp
cmc
outsl
call
pushf
out
adc
in
xor
mov
imul
jecxz
cmp
and
jae
int
in
aas
push
jl
lcall
cmp
loop
lcall
andl
mov
int
test
insl
shl
push
cmp
adc
sbb
daa
mov
and
in
adc
pop
add
popa
mov
sub
arpl
stos
mov
mov
mov
xor
pusha
movsl
lahf
subb
fadds
adc
cs
sbb
clc
stos
cs
pop
pop
loope
xor
push
les
nop
sbb
cmp
mov
std
jp
jnp
insl
xor
loopne
sar
jnp
sbb
sbb
pop
inc
nop
sbb
or
xchg
sub
xchg
sub
and
enter
sbb
sub
add
data16
lods
je
loop
shl
push
sbb
ja
xlat
insb
jns
adc
cmp
xchg
push
inc
xchg
mov
push
fisttps
test
dec
cwtl
out
flds
mov
ret
adc
out
aad
call
lea
dec
push
gs
test
shl
mov
out
or
jnp
jne
xchg
idivl
mov
and
sbb
daa
data16
adc
push
fimuls
daa
mov
int3
dec
add
add
rclb
or
fcmovu
sbb
cmp
andl
clc
pop
test
adc
mov
cli
and
int3
mov
or
pcmpgtb
jae
sub
xlat
int
jnp
pop
int3
testb
in
orb
or
adc
add
push
or
lret
repz
rolb
xchg
pop
mov
pop
loopne
jne
je
dec
nop
repnz
xchg
mov
jg
xor
mov
fisubs
jbe
fucomi
mov
test
mov
push
jge
rcl
icebp
mov
in
add
lods
xchg
inc
sahf
mov
roll
push
sub
mov
mov
push
mov
mov
js
adc
lds
jne
sbb
push
mov
adc
cmp
cs
push
sub
inc
mov
mov
hlt
jb
and
mov
rclb
cli
add
icebp
sbb
iret
mov
cmp
mov
push
cmpsb
scas
shll
out
dec
xchg
cmp
push
cmp
adc
addr16
ja
push
xor
xor
pusha
incb
or
lret
jmp
adc
sub
int3
hlt
and
ljmp
add
mov
sub
fmull
jb
movsb
cld
push
push
inc
hlt
mov
or
and
dec
mov
inc
jo
push
xlat
and
int
add
cmp
mov
mov
sbb
je
sub
xor
lds
lock
fdivrl
add
push
push
or
test
flds
pop
movsl
je
es
out
inc
stos
nop
in
cmpsb
out
adc
out
jmp
xor
stos
dec
or
pop
mov
test
and
icebp
pop
inc
push
jp
xchg
js
mov
lods
cli
mov
jno
ds
out
jl
ds
jg
aas
orb
rorb
aam
mov
mov
mov
mov
aam
push
xorb
js
xor
lahf
lahf
loopne
xor
cwtl
out
mov
sbb
sti
lods
insb
push
gs
jmp
dec
sbb
stc
mov
cld
sahf
jmp
lea
or
mov
cmp
cmp
jne
and
or
sti
cmp
push
jb
je
jno
xor
cmp
dec
ja
mov
mov
inc
subb
jmp
pushw
mov
mov
xchg
mov
sti
push
mov
imul
rep
mov
push
dec
pop
and
ss
jp
adc
jo
cs
gs
fmuls
jmp
mov
pusha
lock
push
dec
sub
cmpsb
cmpsl
xchg
mov
mov
and
cli
negl
pop
test
cmp
pop
mov
std
and
sbb
mov
das
mov
xchg
push
sar
hlt
bound
jo
inc
xor
adc
push
xlat
push
dec
ljmp
push
mov
sbb
mov
roll
mov
xor
jp
pop
imul
std
pop
sub
cmp
adc
jno
mov
pop
test
lcall
aaa
sub
ja
cmp
push
xor
cld
lods
sahf
sbb
xor
lods
je
jmp
ret
xchg
push
pop
fnstcw
add
sub
leave
pop
popf
xor
inc
stos
adc
lock
xorb
pop
int
mov
loop
sub
ss
ret
lahf
add
lods
inc
or
xor
jge
cmpsl
inc
loopne
imul
sub
loop
rcrl
in
movsl
loopne
adc
rorb
shll
and
iret
cmp
add
pop
xchg
hlt
inc
or
in
sar
rcll
adc
bound
gs
add
xchg
jl
sub
ss
adc
adc
rcll
push
cmpl
lret
push
lods
push
pop
ljmp
cmc
lock
insb
adc
jno
icebp
inc
sbb
mov
enter
xchg
cmp
jae
inc
jb
dec
pop
popf
mov
jge
or
push
lcall
jg
stos
sbbl
sbb
outsl
mov
xchg
jg
xor
mov
rcl
xchg
jmp
hlt
call
test
rorb
aas
out
setne
or
push
xchg
or
cmpsb
fs
outsl
mov
je
popf
inc
sbbl
mov
pop
xchg
ds
sub
pop
sbb
icebp
jo
cwtl
cli
movntps
ror
mov
shlb
stc
pop
ja
push
inc
sub
push
jle
xchg
adc
out
cmpsl
sahf
xchg
iret
int3
xor
cli
add
lret
and
cmp
loope
mov
xchg
shr
cmpsb
loopne
inc
push
adc
pop
leave
mov
fcompl
mov
inc
sti
mov
out
add
mov
xchg
jp
and
pusha
pop
mov
sub
or
popf
cmpsl
jg
mov
rorb
test
cltd
push
inc
stc
daa
jmp
arpl
test
lahf
sbbb
dec
sub
pop
add
jne
cmp
cmp
jnp
pop
push
jmp
add
inc
or
push
jns
rcrb
scas
adc
xchg
mov
jbe
xchg
in
scas
enter
out
stos
loop
pop
pop
sub
int3
jp
mov
pop
cmp
jmp
cltd
cs
jle
sahf
out
push
aam
jp
rclb
push
cmpsl
mov
and
jg
push
in
inc
imul
add
enter
lret
cld
push
sub
inc
inc
pop
push
loope
push
imul
aaa
clc
lds
sbb
lods
add
jno
mov
pop
add
divl
xor
jle
sbb
add
pop
into
dec
jnp
out
repz
and
jbe
test
arpl
int
jne
inc
or
out
imul
sbb
cli
mov
jne
mov
sahf
dec
push
mov
dec
pop
or
mov
loop
xor
lods
sbb
fldln2
sub
xor
lock
adc
pop
add
sti
ds
and
fwait
les
lea
mov
cmp
loop
jno
fidivl
rcll
inc
clc
cmp
dec
mov
sbb
or
jnp
test
add
outsl
push
add
inc
sub
sbb
add
rcl
mov
into
jle
push
jl
gs
jne
xchg
mov
xchg
push
fadd
shr
ret
nop
outsb
xor
mov
dec
push
adc
pop
and
call
es
and
fwait
stc
inc
pop
xor
loopne
stos
or
push
jg
mov
add
lds
push
cwtl
mov
pop
loop
and
pop
inc
cmp
lods
xlat
jge
push
outsl
cmp
sbb
sub
push
call
movb
xor
aaa
push
jo
xor
pop
sbb
add
jmp
jl
cmp
arpl
cmc
xorl
out
test
inc
jo
arpl
dec
and
gs
popl
push
jo
cwtl
out
es
orb
int3
or
jns
dec
dec
test
pop
notb
dec
lds
adc
in
sbb
xor
and
mov
jl
sti
add
and
out
imul
jae
pop
das
leave
aaa
dec
test
mov
sbb
in
xchg
dec
mov
mov
dec
or
push
pusha
jmp
jecxz
xor
jne
mov
xchg
aam
sbb
adc
bound
imul
cmp
xchg
fidivs
fidivl
rcrl
stc
mov
jns
xor
insb
enter
hlt
mov
call
jge
mov
fs
add
and
sbb
outsb
mov
clc
mov
ror
mov
xor
sbb
xlat
and
cmp
loop
cmc
ljmp
fstpl
leave
fidivrl
xchg
movsl
jo
es
sbb
popa
cmp
cmp
imulb
push
roll
fisttpl
test
jae
loopne
mov
inc
mov
mov
cmp
ss
popw
int
fistl
sub
jmp
out
leave
movsb
xchg
aaa
jne
jecxz
and
shll
mov
jbe
ljmp
and
fwait
adc
cmpsl
insl
fmuls
mov
outsb
pop
adc
mov
iret
mov
xor
jle
push
int
sbb
vcvtdq2ps
sub
and
pop
jo
fdivs
cmp
fisubrl
push
jne
pop
rorl
mov
pop
xlat
shrl
movsb
pop
cmp
loope
repnz
outsl
test
pop
loope
mov
test
jg
inc
repnz
ds
and
inc
jmp
cmp
repz
cs
icebp
repz
out
xchg
cmpl
xchg
xchg
add
in
dec
test
test
sub
loop
add
jns
jg
ljmp
xchg
push
sbb
into
rol
cmc
or
mov
enter
cmp
cld
adc
mov
int3
mov
push
mov
mov
xchg
pop
cld
xchg
bound
lods
mov
pop
cs
or
fwait
xor
lret
call
ja
cld
xor
shlb
lds
dec
jae
lret
sub
mov
xchg
mov
pop
and
rorb
sar
cmp
ss
adc
das
aad
sti
loopne
or
ds
aad
inc
jp
popa
ljmp
popa
cmp
movsl
push
pop
hlt
and
push
mov
push
sbb
cmpsl
jecxz
adc
stc
push
xchg
sub
pop
add
pop
add
mov
mov
lds
xlat
add
dec
cs
pop
pop
jb
and
imul
pop
mov
sbb
andl
push
xchg
loop
addr16
sti
cmp
adc
fistps
jge
inc
cmp
mov
or
pop
mov
mov
cmp
or
mov
fidivl
push
fwait
in
sub
shll
lods
gs
out
inc
jne
xchg
xlat
std
pop
mov
cli
xchg
hlt
dec
in
push
jbe
iret
adc
or
enter
mov
outsb
push
cltd
jae
clc
fsubs
xor
stos
popf
in
sbb
imul
mov
mov
jae
pushf
add
repnz
sbb
in
test
out
mov
adc
lds
sbb
pop
inc
idiv
inc
push
rclb
fldcw
ljmp
repz
inc
arpl
mov
fnsave
repz
out
add
pusha
in
xchg
inc
dec
pop
bound
inc
repnz
or
pop
xlat
xchg
push
push
cmc
shl
icebp
test
xchg
nop
pop
xor
sub
push
stos
jecxz
aas
leave
inc
push
mov
test
adc
mov
aaa
sbb
mov
aaa
add
js
cli
add
mov
jb
call
jge
in
loop
mov
xor
mov
adc
inc
pop
mov
inc
adc
pop
mov
outsb
fistps
mov
out
scas
sbb
or
xchg
mulb
sbb
outsl
xadd
lret
cmp
leave
shrb
jbe
loop
daa
mov
push
gs
adc
mov
in
push
popf
pop
pop
mov
pop
push
test
mov
shrb
mov
jp
test
push
frstor
fidivl
xchg
lcall
mov
lahf
xchg
enter
and
pop
push
sub
dec
fistl
mov
mov
mov
fsubl
pop
sbb
cmpl
xorl
popa
call
lea
sahf
loopne
push
mov
and
rorb
rcrb
in
shrb
sbb
push
adc
or
mov
mov
jns
mov
insl
out
adcb
in
adc
push
and
sbb
out
xchg
dec
adc
mov
popf
negl
jbe
cs
cs
mov
mov
dec
idivl
shlb
jmp
andb
repz
push
mov
xchg
xchg
mov
int
cld
sub
mov
loopne
mov
push
dec
subl
sub
mov
test
mov
mov
aaa
aaa
mov
rorl
mov
movsl
out
shlb
pusha
push
stc
test
ss
scas
lods
repnz
push
insb
sub
lcall
aaa
xlat
jae
or
mov
push
xor
xor
adc
lcall
fistpl
jne
jmp
cli
popf
aaa
push
sbb
pop
out
imul
xchg
xchg
imul
shrb
sbb
dec
mov
int
das
jle
lock
push
add
adcb
incb
stos
sub
gs
and
or
adc
push
daa
sbb
xor
mov
cmp
adc
cmp
and
and
ja
xchg
mov
cmpsb
mov
mov
pop
mov
shll
lret
movsb
roll
push
inc
mov
jns
lods
or
mov
jp
sub
pop
lods
push
ret
adc
jecxz
test
mov
jno
xor
inc
ss
imul
and
cmpsb
imul
pop
or
inc
sahf
and
or
aad
movsl
jge
addr16
inc
adcb
lds
jo
fimull
xor
in
add
push
fdivr
cmp
mov
sub
inc
mov
push
mov
cs
loopne
inc
lcall
sbb
or
neg
jbe
fildl
push
adc
out
test
cmp
xor
xor
mov
iret
add
mov
test
xchg
xor
inc
aam
push
rcrl
jecxz
dec
lds
andb
dec
shrb
mov
mov
sti
push
xor
fidivl
jo
loop
mov
and
xor
inc
call
movsl
xlat
lret
sbb
cs
shrl
or
dec
lock
push
aam
sub
pop
or
sub
loop
int3
out
fabs
xor
mov
movsl
add
adc
inc
sti
inc
mov
mov
test
call
mov
insb
test
negl
or
and
fwait
js
leave
cltd
lea
fiadds
rol
test
pop
roll
xor
pop
je
cmpsl
add
sbb
out
testl
mov
inc
leave
out
mov
insb
pop
jne
pop
and
mov
stos
pop
fists
aad
push
mov
pop
add
mov
sbb
testb
pop
push
mov
mov
pop
push
stc
mov
call
and
imul
and
out
cltd
cld
mov
push
inc
mov
and
mov
clc
gs
cmpsl
dec
xchg
push
xchg
xchg
pusha
inc
dec
or
pushf
or
mov
scas
xchg
dec
lea
xchg
andl
adc
mov
into
in
sbb
push
je
jno
mov
lcall
xlat
daa
adc
and
mov
test
sub
dec
xchg
adc
adc
in
xorl
cmp
and
popf
mov
cmc
nop
iret
daa
fwait
test
push
icebp
add
mov
jae
mov
inc
sbb
cld
lods
pop
xlat
lds
out
xor
aas
idiv
mov
inc
js
ljmp
cmpsl
jne
pusha
mov
jae
xchg
dec
aaa
add
popf
insl
dec
add
sbbl
xor
fldl
jl
repz
xchg
dec
adc
sbb
out
out
icebp
mov
mov
lahf
push
adc
mov
xchg
xor
push
in
test
mov
inc
sub
inc
lock
repnz
xchg
aaa
fisubrl
cmp
mov
xor
pop
mov
pop
xchg
cld
cli
pop
mov
mov
xchg
imul
xlat
xchg
jne
cmp
sti
leave
xorb
scas
cs
push
jmp
cld
nop
pop
mov
and
into
lods
in
test
loopne
sbb
rcrl
inc
push
icebp
mov
push
fdivrl
hlt
aas
call
repnz
or
lcall
ss
fwait
repz
add
and
hlt
movsl
or
pop
cs
fidivrs
fsubl
ret
and
pop
fadds
andl
xor
jge
dec
sub
out
in
int3
or
xchg
arpl
test
xchg
test
and
add
jp
add
enter
and
das
test
push
idivl
jecxz
pushf
jae
jo
push
mov
dec
push
out
inc
xadd
xor
subb
jge
cmp
movsb
xlat
je
cld
jnp
mov
dec
mov
stos
sub
xchg
popf
pop
dec
jne
cmc
inc
jbe
pushl
mov
ds
jnp
insb
jno
cs
push
fimull
push
rcrl
xchg
lock
jns
cmp
jbe
inc
clc
lds
mov
sti
cmp
into
and
pop
mov
lcall
push
sub
jno
rcll
adc
aaa
pop
in
mov
mov
sbb
push
xchg
out
cmp
mov
pop
add
pop
aaa
sub
adcl
dec
iret
mov
std
jl
push
jne
les
push
push
dec
sub
iret
sub
fiadds
mov
jns
test
dec
mov
push
mov
mov
aam
lcall
cmp
xchg
dec
out
scas
push
fwait
test
scas
imul
jge
push
test
insb
stc
negl
insb
push
mov
roll
push
mov
shlb
xchg
dec
jno
aad
mov
cwtl
add
addr16
inc
repnz
sbb
mov
lods
in
std
sub
dec
imul
push
mov
push
ret
sbb
jmp
jno
sub
or
adc
push
jb
push
fisttps
out
divb
insl
sbbl
sub
addr16
add
ja
xchg
xchg
out
xchg
add
test
jmp
int
xchg
std
movsl
out
xchg
insb
rclb
in
divb
aam
cwtl
test
mov
iret
ss
sub
enter
or
mov
insl
xchg
inc
inc
dec
mov
sbb
inc
dec
shr
mov
sqrtps
add
les
shr
mov
push
xlat
loope
jge
cmpsl
cs
mov
mov
cmp
push
sbb
or
dec
mov
mov
add
xchg
aaa
imul
shrl
and
mov
scas
dec
in
mov
das
push
mov
scas
aas
push
ficoml
mov
gs
insb
pop
mov
loopne
mov
push
cwtl
inc
xchg
and
imul
adc
and
inc
das
sbb
inc
jg
ja
xor
cli
inc
jns
bound
pop
aas
rolb
and
hlt
xor
mov
movsl
jno
jg
mov
notl
outsl
and
fs
lahf
lock
in
sub
inc
pop
add
popf
fwait
stc
adc
mov
jns
jge
test
addl
orb
call
lock
ret
dec
in
adc
xlat
and
mov
shl
push
in
pop
mov
cmpsl
ret
mov
jo
push
mov
adc
pop
pop
pop
stc
xchg
ss
push
scas
std
bound
sbb
push
scas
ljmp
adc
add
xchg
add
data16
cmp
and
xchg
jle
xor
lods
jl
mov
ds
pop
and
pop
inc
adc
jae
cmpsl
adc
fs
popf
jo
push
pop
xor
xchg
xlat
xlat
out
scas
mov
jb
dec
sub
push
pop
adc
jbe
lret
fbstp
insl
repz
add
mov
push
dec
scas
rcrl
add
mov
jge
aam
push
inc
mov
cmp
and
sbb
dec
insl
push
cltd
jae
mov
add
mov
pop
sbb
lea
sarl
and
mov
push
xchg
cmp
pop
sub
cmp
aaa
je
lret
pop
cmpsl
movsb
ljmp
gs
adc
fcoml
jge
popf
imul
dec
aaa
ljmp
stos
fnsave
mov
sbb
das
sub
mov
inc
sbb
cmp
dec
int3
outsb
cld
jecxz
mov
sub
pop
cvtpi2ps
js
cmp
jg
mov
xchg
jmp
insb
in
mov
movsl
js
insb
aam
pop
cmc
push
lahf
cmp
in
push
cmp
shrl
testb
stc
std
fisubl
cmc
rcl
clc
into
lret
stos
xor
jl
outsb
loop
pop
test
lcall
les
xor
jmp
cmp
insl
rorb
cmp
inc
and
mov
mov
cmp
cmpsl
pop
cmp
or
mov
or
movsl
xchg
xor
popa
xchg
into
ret
gs
add
or
lahf
daa
shrl
test
dec
sub
scas
pop
jbe
xor
jbe
inc
outsl
rorl
subl
cmp
cs
inc
out
hlt
in
push
xlat
mov
push
pop
icebp
mov
fimuls
sbb
xchg
push
hlt
cmpsb
sub
subl
sub
mov
sub
inc
icebp
out
or
mov
mov
push
jnp
or
mov
and
xlat
xchg
test
in
test
test
mov
testb
fldt
test
in
inc
sub
or
xchg
fstpt
mov
add
jnp
sbb
fisttpl
mov
jno
pushf
mov
add
inc
and
fidivrs
sbb
sbb
push
xchg
inc
lods
movaps
inc
fmul
inc
jb
int3
cmp
dec
hlt
inc
shlb
aam
andb
rorb
aaa
mov
fwait
outsb
cmp
dec
inc
enter
push
mov
into
inc
lods
popf
ljmp
and
and
jbe
idivl
lods
cmp
or
pusha
out
pop
dec
icebp
daa
es
orl
or
xorb
in
pop
ret
sub
popa
movsb
loopne
mov
jae
ret
mov
jns
pop
lcall
pop
add
jbe
fldcw
lods
test
push
or
pop
fmul
mov
xchg
inc
cmc
mov
mov
sub
int3
or
inc
inc
push
enter
push
popa
push
mov
movsl
icebp
shll
and
xchg
cmp
inc
insl
mov
imul
aas
mov
cmp
cmp
inc
cld
fcoms
loop
fst
insl
sahf
xorl
add
movsl
mov
mov
mov
mov
into
sbb
outsl
decl
stos
stos
jp
push
mov
push
or
ret
mov
jnp
or
adc
inc
jecxz
sub
cmp
mov
lret
mov
hlt
orb
adc
scas
daa
mov
cmpsb
push
adc
pop
jns
push
out
xlat
in
movsb
mov
jae
sahf
aaa
push
pop
cmp
repnz
fmul
lcall
fistpll
jno
jb
pop
sahf
rcrb
or
jmp
ret
cltd
fmull
sbb
in
rcrb
test
or
xor
loope
cmc
push
mov
jecxz
cmp
fsubp
outsb
es
or
cs
dec
jl
fidivrs
sbb
sahf
testl
adc
scas
dec
push
mov
mov
mov
xchg
test
adc
imul
add
mov
les
cli
xchg
jno
hlt
or
fs
repnz
andb
pop
jb
test
xchg
lahf
fidivrl
pop
mov
sub
xchg
jl
testl
add
scas
dec
dec
push
jmp
adc
jno
incb
stos
fsubl
xchg
pop
pop
fisubs
cmpl
in
xchg
xlat
fisttpl
movsb
lock
test
out
inc
adc
scas
mov
outsb
add
sbb
orb
js
xor
inc
xchg
js
popf
fiadds
or
loop
inc
jo
lea
mov
in
push
lahf
sub
cltd
jbe
aad
inc
sub
push
addr16
int
xor
nop
leave
mov
mov
mov
int3
out
je
dec
movsb
pop
adc
mov
push
inc
stos
and
call
push
inc
push
push
test
loopne
xor
das
xorb
pop
and
imul
jae
das
roll
sub
daa
mov
das
pop
push
out
mov
shl
bound
sbb
mov
nop
stos
daa
dec
loop
mov
adc
inc
daa
loope
mov
out
mov
cltd
cmp
xchg
das
aas
cld
jmp
test
push
pop
inc
or
lock
sbb
push
or
sub
hlt
out
jecxz
mov
mov
and
pop
xor
out
insl
loopne
or
fldl
jb
sub
or
xchg
std
mov
lret
sbb
popf
arpl
sbb
pop
sub
adc
lcall
js
repnz
out
les
hlt
push
dec
sbb
xchg
mov
test
in
sbb
inc
xor
les
sbb
mov
pop
cmp
jmp
stos
into
add
in
cli
jb
mov
repnz
xchg
in
addb
out
and
mov
sti
cli
js
std
sub
push
push
outsl
jg
mov
push
outsl
cld
mov
cmp
mov
xor
in
pcmpgtb
sub
cmp
adc
cmp
mov
lret
popa
cmp
mov
popa
lods
and
jl
ljmp
hlt
xchg
push
xlat
js
pop
xchg
pop
xchg
add
movsb
push
cwtl
dec
mov
jne
xchg
or
lret
fldcw
mov
pushf
push
jge
mov
xchg
arpl
push
shlb
sub
jl
dec
mov
xchg
hlt
xchg
imul
mov
scas
pop
push
fwait
mov
pushf
rcrb
xchg
mov
jae
mov
and
lods
in
std
pop
int
scas
rolb
adc
cmp
aas
inc
clc
stos
fs
out
adc
jl
push
js
cmc
popa
cmp
sarl
or
push
fisttpll
scas
mov
pop
fistpl
xchg
push
test
push
repnz
and
test
cmp
lret
cmpsl
pop
aas
sahf
dec
repnz
mov
cmp
testb
push
add
gs
scas
push
int
sbb
ljmp
mov
push
pop
mov
cmp
or
push
jecxz
mov
in
mov
add
fwait
ret
dec
in
aaa
xchg
in
hlt
shrb
mov
pushf
cmp
aam
xchg
rcr
call
sti
mov
outsb
lret
loope
pop
xlat
xchg
sub
pop
test
repz
clc
xor
fidivrs
lods
outsb
sub
ficoms
mov
jb
xor
std
sub
movsb
lahf
ret
sub
dec
pop
div
adc
mov
outsb
lods
jg
mov
jp
adc
pop
shrl
lahf
pop
insl
repz
shlb
xlat
int
lods
pop
hlt
fs
xchg
and
fucomp
daa
dec
mull
je
jne
pop
fsts
xor
xor
inc
arpl
mov
push
loope
xchg
popa
subl
mov
addl
sarl
popa
pop
daa
inc
lcall
setle
xchg
jbe
pushf
fnstcw
push
outsb
dec
push
dec
adc
add
jno
push
adc
fldl
daa
cmp
dec
and
test
push
jnp
dec
mov
loope
add
xor
or
aad
sub
jle
pop
or
ljmp
lret
rcl
mov
sbb
roll
iret
fsubrl
xor
jmp
mov
mov
pop
jmp
hlt
sub
pop
xchg
push
push
fisubs
stc
movsb
push
dec
cmp
adc
jp
pop
dec
mov
leave
fildl
and
or
xchg
negl
inc
outsb
pop
push
dec
mov
jns
mov
out
mov
inc
pop
dec
movsb
stc
popf
xchg
mov
pushl
xchg
pop
pop
jbe
push
inc
cmp
scas
push
loopne
pop
jl
mov
ds
in
subl
cmp
addb
sub
push
inc
es
lret
add
fs
pop
mov
es
sub
inc
mov
movsl
mov
and
adc
js
fistl
xlat
sahf
jmp
dec
not
xor
inc
rcr
icebp
aad
pusha
sub
and
cmpsl
shrl
sub
mov
imul
loop
xor
and
sahf
jae
dec
sbbb
iret
pushf
inc
enter
jg
pushl
aas
fisubl
aam
enter
data16
sahf
xor
test
mov
scas
xchg
in
and
fwait
sbb
push
out
lret
outsb
aam
adc
or
xchg
aad
mov
mov
imul
test
cmpsb
add
xor
scas
push
cmpsl
cmc
sub
icebp
std
jmp
fwait
jmp
push
out
enter
mov
mov
or
cmc
ss
jb
cmp
and
pushf
in
and
popf
mov
iret
sbb
xchg
cmp
dec
cmpsl
inc
pop
jnp
sub
and
int
int3
fs
adcb
pop
call
inc
aas
out
pop
repnz
in
arpl
dec
daa
sbb
mov
pop
inc
and
or
sbb
jp
arpl
sbb
test
lea
sub
xchg
xor
rcll
and
jo
dec
aaa
mov
push
or
fildl
out
mov
call
sbb
out
das
movsl
xlat
jb
pop
iret
push
dec
fmull
add
adc
lods
mov
dec
mov
daa
ret
jmp
mov
add
push
loope
mov
jns
jmp
shrb
mov
das
inc
hlt
nop
mov
inc
repnz
sub
adc
rcl
insb
lods
inc
aas
popa
hlt
and
jp
out
sbb
fyl2xp1
sbb
jo
lcall
insb
testl
je
aaa
addr16
arpl
aad
out
movsb
push
in
push
fisubrs
dec
inc
fldl2e
test
out
pusha
cmp
ljmp
aas
push
jle
ficoms
inc
xchg
testl
addr16
loopne
lods
adc
imul
nop
loopne
fwait
adc
aad
ds
hlt
leave
push
push
sarb
repnz
lret
arpl
fs
es
jmp
sub
push
cmp
adc
mov
inc
jnp
add
arpl
xchg
add
arpl
mov
lods
arpl
out
push
in
push
sbb
dec
sbb
cmp
mov
cmpsb
sbb
je
mov
cmp
push
fcmovb
js
stos
xor
fcmovu
push
mov
pop
jae
mov
mov
dec
in
out
mov
incl
jecxz
shr
pop
data16
xlat
push
fldl
into
jne
imul
test
popf
dec
divl
dec
dec
mov
insl
mov
xchg
clc
rorb
in
push
loop
pop
add
adc
push
mov
inc
dec
movsl
push
mov
pop
sub
or
int3
in
or
imul
sahf
sub
test
mov
add
xor
imul
mov
sbb
mov
cs
cs
and
push
outsb
fs
jle
in
fldcw
or
dec
data16
or
sub
cmp
inc
push
call
loope
mov
jbe
fwait
mov
inc
clc
jmp
adc
mov
les
xchg
rol
fnsave
pop
movsl
test
dec
jbe
hlt
out
pop
cmp
ss
xchg
mov
cli
xchg
push
sbb
xchg
dec
cmp
and
adc
pop
xlat
lcall
sub
push
mov
fsts
pushf
mov
adc
in
imul
out
dec
xchg
cmp
xchg
pop
xor
movsl
pop
sbb
fucomip
cwtl
and
cltd
or
imul
add
test
pop
pop
pop
add
repnz
mov
adc
mov
insb
mov
out
and
imul
scas
mov
into
jbe
je
lods
sbb
xor
cmp
adc
mov
jae
xchg
or
add
lahf
push
stos
lret
nop
xor
inc
and
sti
repnz
stc
and
inc
sahf
push
shlb
add
push
adc
inc
into
ror
in
sti
and
addr16
insl
sbbl
dec
cwtl
add
adc
imul
xor
mov
bound
fisttpl
mov
xor
push
aaa
inc
dec
ljmp
cmp
cmpsb
xor
aaa
repnz
dec
daa
jnp
xor
scas
negb
and
lret
adc
das
sbb
xchg
add
js
sub
rcl
and
lcall
and
and
lods
cmpsb
cli
repz
mov
hlt
jbe
xchg
inc
xchg
inc
addr16
cltd
push
or
stc
popa
pop
push
ret
jge
lahf
dec
xor
jbe
or
cmp
out
js
insl
lcall
lods
test
add
and
ljmp
xchg
fildl
jb
push
das
xchg
clc
sbb
jbe
xor
jle
pop
add
mov
outsl
mov
push
std
mull
ljmp
mov
imull
pushf
xchg
mov
lahf
scas
lods
loopne
and
xlat
test
out
orl
rep
sbb
jns
jno
mov
push
insl
cmp
lret
dec
sub
pop
sub
repz
test
test
push
mov
popa
fs
pop
xor
arpl
pop
aam
data16
adc
hlt
inc
add
iret
xchg
pop
pusha
xchg
std
in
sub
jmp
sub
pusha
pop
pop
rcrb
daa
mov
sbb
cmpsb
xor
add
int
loope
mov
int3
add
jmp
and
jae
xchg
lcall
xchg
xor
jle
push
popf
out
pop
pop
pop
jnp
jb
mov
xor
ljmp
orl
inc
in
lds
loop
jg
dec
inc
fsubr
or
and
lods
xor
lcall
push
shlb
stos
shll
adc
jb
jl
cwtl
fcmovnbe
sbb
pop
mov
and
js
sub
imul
inc
je
daa
cmpsl
loope
pop
test
and
xor
sbb
jo
xchg
xor
pop
stos
mov
add
mov
mov
push
movsl
mov
stos
aam
sub
fs
pop
test
add
sub
lods
into
das
int3
add
clc
int
out
inc
mov
mov
pop
out
jmp
mov
push
test
les
add
mov
jbe
inc
push
into
xchg
iret
outsb
xlat
pusha
mov
cmp
cs
inc
cltd
das
pop
xchg
dec
lods
stos
adc
shll
add
add
or
and
fisubrs
mov
mov
add
arpl
cmp
inc
xor
jg
mov
jg
sahf
or
and
stc
cmp
dec
fcom
sub
bound
addb
dec
in
adc
iret
neg
jns
ret
dec
movsl
repz
nop
mov
mov
testl
and
sbb
mov
mov
sub
lds
cmpsb
movsl
xchg
add
movsl
je
xchg
js
pop
mov
jnp
popf
arpl
mov
xchg
mov
fadds
ja
xchg
mov
das
adc
cmp
stos
or
cwtl
pop
jno
in
data16
or
inc
jg
pop
jne
mov
ds
int3
stos
sub
adc
cs
scas
add
dec
xchg
and
mov
ja
hlt
inc
jno
jle
jo
cmp
cmpsl
mov
fcoml
paddq
mov
jmp
data16
push
lods
mov
ds
cld
mov
scas
xchg
mov
in
out
xchg
add
pop
jno
mov
jb
or
xchg
mov
js
cmc
xchg
pop
mov
fnstsw
inc
out
mov
fs
fwait
out
std
mov
rcrb
and
pusha
jmp
xchg
mov
jl
or
mov
out
push
fistpll
add
inc
sarb
cmp
pop
push
sub
das
dec
mov
and
push
test
sub
xor
movb
mov
sbb
or
sub
inc
xor
push
clc
dec
repnz
movsl
jl
shl
mov
mov
iret
mov
aaa
sub
fs
push
enter
js
cmp
xor
iret
loop
or
lret
sub
cltd
std
mov
or
scas
mov
aad
clc
ljmp
std
std
std
cmp
mov
mov
push
mov
cmp
mov
bound
aaa
mov
sbb
dec
jbe
cwtl
outsl
pushf
scas
aam
pop
int
popa
cmp
and
add
call
mov
aas
iret
cmp
imul
xorl
dec
or
add
lock
cbtw
shlb
mov
dec
shlb
or
nop
popf
shll
test
sbb
and
jge
shlb
push
and
cmp
mov
adc
xchg
adc
cmp
xchg
scas
mov
or
lret
sti
mov
loopne
add
push
shlb
mov
and
arpl
sahf
lds
sbb
imul
pop
popa
lret
and
hlt
mov
xor
sub
sahf
lea
mov
lcall
cld
and
gs
dec
pop
movsb
stos
outsb
sbb
inc
scas
shrl
xchg
or
mov
pushf
dec
or
lret
and
xor
cmpsl
cs
into
clc
je
add
pop
push
cmp
hlt
nop
iret
pusha
outsb
pop
inc
push
aaa
push
ret
ja
std
push
dec
or
les
cmp
lods
sti
add
or
into
sub
jle
and
fwait
cmc
push
loope
dec
add
pop
stc
push
cli
insl
ja
cmp
into
fwait
lret
push
jnp
xor
lods
sbb
imul
mov
push
aad
sub
mov
mov
push
jle
jl
das
cmp
push
xchg
cmpsl
es
cmp
or
xor
jecxz
pop
lods
filds
and
stc
pop
rol
push
cmp
cmp
cmpsl
mov
cwtl
ret
pop
outsb
xor
xor
and
inc
loop
mov
call
jge
sub
arpl
dec
push
das
fcmovu
in
call
in
mov
xor
popa
xchg
cmpl
movsb
fmuls
lods
lret
aas
push
jle
mov
fisttps
loopne
aad
mov
inc
cmpsl
in
rcrb
or
adc
aas
ljmp
movsl
shr
xor
shll
mov
xor
nop
test
mov
lods
inc
cmpsb
add
js
sub
adc
addr16
jp
or
add
xor
add
inc
and
cld
shll
sti
popf
add
or
and
lcall
sub
sub
hlt
jae
divl
repnz
shlb
pushf
test
jle
dec
add
test
push
sbb
daa
in
jnp
xchg
fildl
leave
cwtl
ret
fnstenv
jmp
adc
cmp
iret
fwait
pop
mov
mov
out
dec
and
sbb
xlat
test
or
sub
movsb
adcl
testb
mov
jecxz
arpl
jge
cmp
popf
mov
daa
fs
or
push
jecxz
cmp
push
mov
shrl
fnstcw
xchg
js
pushf
cli
push
inc
rclb
dec
cmp
imul
push
sbb
test
lahf
cmpsl
adc
inc
mov
pop
mov
lcall
or
fisubl
dec
lahf
and
insb
mov
ss
mov
das
call
push
mov
shr
or
divb
or
jne
or
xor
add
jp
inc
adc
xor
mov
mov
cli
cmc
mov
icebp
shrl
cmpsb
in
lea
lock
mov
sti
js
pop
and
xlat
sub
xorb
imul
out
shl
and
icebp
cmp
popf
inc
shrb
xor
in
jg
cmp
add
inc
mov
mov
pushf
sti
int3
jmp
mov
jp
outsb
fbstp
ja
sbb
aas
lock
insl
rclb
call
scas
jl
lret
lds
or
push
icebp
add
test
mov
sub
add
push
movb
testb
xor
cltd
pop
add
lahf
mov
push
mov
pop
xlat
jg
inc
mov
lcall
loopne
outsl
xor
mov
xchg
cmpl
sub
cltd
sbb
int3
mov
sub
scas
jno
cltd
in
xchg
arpl
push
jns
xchg
shll
xor
loop
push
adc
push
mov
mov
incb
xchg
aad
xor
daa
or
addb
sti
xchg
inc
push
mov
insb
inc
pop
mov
sahf
ds
sbb
mov
mov
mov
dec
stos
jle
xchg
sub
mov
sbb
mov
lcall
push
mov
add
and
test
mov
xchg
fs
in
out
adc
inc
push
dec
cmp
adc
pop
mov
push
lret
je
sahf
jb
push
enter
pusha
jne
lds
push
int
adc
mov
cmp
test
cs
xchg
mov
push
mov
movsb
cld
lock
add
std
addr16
fdivs
push
lret
xor
std
stos
jb
lahf
adc
out
test
push
pop
es
sahf
jmp
lcall
aad
and
imul
xchg
test
sahf
insl
cmpb
fwait
or
push
sbb
into
dec
dec
fsubr
jne
imul
cmp
andb
adc
sbb
and
mov
cmpsl
inc
scas
insl
inc
in
daa
mov
dec
and
dec
lret
fs
jle
aaa
ret
orl
scas
inc
mov
scas
adc
outsl
into
cmpsl
cwtl
notl
aas
imul
pop
mov
out
adc
mov
je
fmul
imul
fsubrl
xchg
fistps
lahf
sub
push
sub
mov
out
lahf
fdivrp
add
sub
rorb
pop
aad
sbb
jo
nop
fdivrl
pop
int
leave
mov
sub
push
mov
inc
jecxz
jo
out
sub
jnp
cmc
in
sub
pop
roll
jg
push
leave
inc
mov
adc
add
mov
sti
mov
nop
cli
ja
cmpsl
ljmp
mov
repnz
lds
sbb
jl
test
inc
out
divb
das
jge
push
inc
int3
and
or
fdivrl
xchg
pushf
std
into
hlt
clc
arpl
scas
push
add
add
loopne
mov
mov
inc
stos
sbb
dec
pushf
pop
xchg
cltd
inc
push
jb
fimuls
std
int
imul
sbb
pop
xchg
mov
shlb
add
lods
es
gs
sub
das
mov
mov
sbb
ljmp
adc
jbe
flds
add
out
pop
sti
loop
pop
sbb
out
xchg
cwtl
daa
push
aam
mov
push
xor
jno
sahf
adc
mov
adc
mov
push
add
out
das
in
ss
adc
clc
loopne
pop
iret
mov
pop
ss
das
in
int
jbe
xchg
pushf
sar
xor
ss
push
cmp
in
sarb
add
popl
xor
lret
xchg
imul
cs
mov
int
cltd
inc
imul
lea
pop
in
sbb
xchg
mov
cmpl
add
sub
dec
fidivl
rclb
add
or
sti
mov
and
mov
aaa
and
pusha
leave
pop
ljmp
out
pop
mov
xor
cmp
data16
stc
sbb
test
push
fs
mov
arpl
mov
or
icebp
push
mov
cmp
popa
ljmp
scas
mov
inc
sbbl
pushl
incb
mov
jo
and
and
das
cmp
inc
mov
test
cmpsb
dec
shlb
or
inc
push
dec
fstpl
pop
shl
push
pop
inc
xor
mov
mov
or
or
fst
adc
inc
sti
ljmp
sub
push
sbb
and
jmp
mov
xor
and
jle
lret
jp
scas
mov
xchg
cmp
xchg
rol
sbb
inc
add
sub
cmp
cmc
mov
dec
and
daa
push
push
mov
adc
cmpsl
add
in
jle
mov
aas
push
and
jp
sbb
xor
dec
popa
xchg
incb
add
cmpsl
add
sub
adc
adc
test
cmpsl
sbb
adc
xchg
cmpl
pop
mov
aad
insl
jge
inc
and
in
push
test
inc
imul
jo
mov
popa
jecxz
sbb
mov
sbb
aam
push
push
data16
sbb
orb
or
pop
inc
cmp
in
into
iret
push
cmpsl
outsb
stos
jecxz
aam
aam
pop
enter
adc
xchg
mov
mov
and
mov
out
jg
shl
xchg
test
sbb
push
xor
mov
mov
aam
xchg
inc
jo
arpl
jg
leave
out
addl
fnstenv
mov
xchg
sbb
xchg
insb
xchg
add
test
nop
sub
jecxz
adc
ffreep
adc
out
fnstenv
scas
inc
in
jne
or
push
mov
loope
jp
push
rcrb
inc
push
test
stos
or
movsl
inc
mov
movsl
pop
add
xchg
test
dec
mov
push
mov
dec
and
mov
jo
xchg
sbb
jecxz
lahf
mov
jl
mov
xchg
lods
mov
or
push
test
insb
test
sbb
imul
adc
out
push
ds
fmul
lahf
loop
inc
pop
mov
lret
hlt
inc
xorb
or
jp
in
mov
insb
jne
lea
fists
int3
in
daa
sbb
ss
sahf
add
in
sahf
fldenv
push
pop
lret
scas
dec
sub
iret
cli
pop
cwtl
cmpsl
loope
ljmp
push
mov
sti
and
mov
fldcw
ds
rcrl
mov
imul
fsubl
pop
lods
jmp
inc
in
inc
outsl
orl
int
pusha
mov
push
jmp
jg
xchg
xchg
fs
mov
pop
clc
scas
push
icebp
and
in
or
mov
xchg
js
sbb
cmp
xchg
addr16
lods
add
cs
push
sub
icebp
ja
push
cwtl
aad
movsb
test
cmc
call
or
cmp
mov
push
mov
xor
mov
xchg
jge
jbe
shlb
mov
fs
lea
push
clc
adc
dec
mov
pop
cmp
fidivs
mov
ljmp
mov
push
int3
insb
sub
clc
push
je
sub
sub
sub
mov
jmp
sbb
data16
or
mov
cmp
jb
mov
xchg
or
jecxz
pop
fsubrs
ds
jmp
movsl
mov
dec
fistl
std
scas
pusha
push
add
loopne
movsb
aam
adc
out
xchg
inc
and
aas
insb
push
lods
dec
in
inc
lock
dec
fidivl
test
and
ss
cmpsb
xchg
hlt
push
xchg
test
mov
or
lock
lcall
call
xor
fwait
pop
push
ficoml
movsl
das
jb
mov
sarb
fisttpl
pop
movsl
outsl
sub
jbe
stos
aam
xor
adc
mov
jno
bound
movsb
lds
pusha
adc
or
mov
mov
jo
and
stc
iret
mov
and
icebp
mov
les
pop
outsb
je
jecxz
and
repz
testl
and
jecxz
lcall
xor
jecxz
pop
add
testb
es
and
inc
pop
inc
pop
and
push
or
xlat
inc
pop
mov
into
fisttps
popa
mov
andl
loope
sub
pop
sub
dec
sbb
pop
outsb
insb
lods
scas
lods
add
push
or
mov
xor
fcomi
cmp
and
test
in
mov
stos
scas
or
fcom
mov
mov
ds
out
mov
pushf
inc
movsb
lods
cwtl
jae
lods
aad
fisttpll
jecxz
mov
in
mov
mov
cmpsl
cmp
insl
lahf
addb
aam
pop
ret
cs
dec
cmp
xchg
jge
sub
xchg
stos
ja
repnz
cli
mull
add
sbb
add
push
inc
push
sbb
out
and
push
mov
or
sub
xchg
push
jge
rorb
pop
add
jmp
xchg
adc
arpl
sarb
mov
cmp
std
mov
outsl
sub
push
ds
adc
mov
dec
adc
and
sarl
dec
inc
nop
jnp
in
pop
mov
je
xchg
xchg
int3
std
xor
or
stc
stos
neg
lcall
push
stos
mov
add
mov
adc
bound
test
add
xor
or
sbb
adc
pop
sbb
xor
cltd
stc
fwait
inc
stos
hlt
fnsave
daa
js
test
or
inc
inc
ljmp
sub
mov
lret
push
push
popa
pop
mov
add
imul
shlb
pop
or
test
dec
and
cmc
call
xchg
sbb
repz
xor
movsb
scas
cmp
mov
cmp
adc
dec
cli
subb
lock
mov
sub
add
mov
cmpsb
aas
mov
mov
mov
dec
or
add
jns
pop
testl
mov
stos
mov
xchg
call
mov
int3
lret
pop
pop
loop
into
mov
imul
je
aas
sbb
mov
pop
sub
push
cmp
sahf
push
aad
mov
mov
out
fabs
call
adc
push
lcall
les
enter
add
and
and
pushf
xchg
call
sti
xchg
fcompl
inc
lea
dec
jp
adc
andl
add
inc
push
xor
dec
xchg
ja
enter
nop
lods
mov
js
negl
xchg
or
xor
push
icebp
or
jnp
xor
mov
ljmp
lock
orl
cs
ret
clc
mov
or
mov
xlat
leave
in
jbe
xchg
rcrb
sahf
push
cmpsl
and
mov
cld
xor
add
outsl
lea
je
xchg
push
sbb
lods
xchg
jb
sub
outsb
cmp
pop
push
leave
fwait
push
xor
xor
aam
test
mov
mov
aad
loopne
mov
pop
push
std
mov
mov
dec
jb
adc
in
in
xchg
jmp
sbb
std
xchg
test
pop
pop
into
fmuls
sub
jne
out
fs
divl
xchg
mov
lea
xor
out
movb
stc
popf
pop
cmp
xchg
jns
or
iret
js
dec
in
dec
sub
jo
into
mov
and
aas
pusha
lret
xchg
jecxz
movsb
or
jge
stos
jne
push
ja
mov
and
mov
es
pop
cmc
jmp
and
and
xchg
push
subl
sbb
scas
cmc
pop
pop
imul
mov
in
int
jbe
or
add
pop
pushf
in
pop
and
subl
jecxz
mov
aam
xor
sub
xchg
push
sub
jns
or
jl
adc
pop
adc
inc
lcall
in
sbb
addr16
sbbl
repnz
dec
cwtl
pop
push
adc
movswl
add
mov
jp
dec
rcrb
inc
loope
popl
sub
and
cmpsb
ja
sub
outsb
cmp
stos
xchg
or
jp
lcall
stos
sbb
imul
mov
mov
add
fwait
mov
sahf
test
pop
and
push
xchg
int
and
or
arpl
mov
outsl
jbe
les
or
aam
mov
imul
jne
xchg
pop
jne
pushl
mov
xor
aaa
inc
movsl
or
les
imull
adc
and
dec
add
dec
out
push
lcall
roll
sbb
stos
jle
lea
ret
dec
mov
jg
sbb
leave
inc
xlat
push
in
jmp
hlt
mov
roll
vdivps
mov
mov
icebp
mov
or
xor
mov
es
lcall
or
push
push
inc
inc
mov
rol
movsl
xor
aas
dec
add
mov
add
flds
jg
or
or
fwait
inc
sbbl
insl
ss
mov
xchg
inc
dec
cmpl
shll
and
sbb
inc
add
dec
dec
cmp
mov
or
shlb
add
mov
push
sub
dec
flds
or
add
loop
jae
sub
nop
mov
push
shlb
inc
mov
xlat
insl
xlat
cmp
push
dec
dec
xchg
inc
jae
out
and
dec
dec
leave
push
fisubl
sbb
mov
in
mov
dec
pusha
dec
insb
mov
mov
xor
lea
lcall
cli
cmpsb
cwtl
add
fisttps
rolb
sbb
or
ret
add
lgs
sbb
mov
push
lahf
xchg
mov
popa
lahf
adc
cwtl
std
out
mov
xchg
lcall
inc
xlat
mov
jae
dec
and
jne
in
ja
push
popa
mov
fs
int3
gs
out
mov
out
subb
inc
lods
js
jle
in
inc
enter
cmpsb
dec
stc
es
pop
ret
dec
ljmp
mov
xchg
mov
push
and
adc
lods
jle
dec
ss
es
fs
inc
icebp
ficoml
lret
lods
test
mov
dec
inc
jnp
dec
cmp
ret
jno
adc
xchg
or
ljmp
adc
dec
popf
jp
int
sub
inc
stc
xchg
jg
aas
mov
mov
rclb
mov
rorb
mov
jbe
out
mov
lcall
jnp
pushf
mov
push
push
into
arpl
xchg
shlb
ljmp
pop
mov
and
sub
stos
sahf
add
dec
shll
ds
sbb
xor
push
or
adc
das
jnp
jg
push
adc
pop
ret
mov
dec
js
seta
jne
bound
push
ljmp
int
mov
jmp
dec
lock
push
std
mov
int
inc
xchg
xchg
push
in
add
jle
adc
mov
in
shll
fs
add
cwtl
dec
mov
aad
out
pushf
loop
insb
mov
call
nop
cld
mov
sbb
inc
inc
clc
jmp
out
or
and
aad
jne
sbb
xor
mov
push
popf
test
leave
sbb
in
sub
test
mov
push
cmc
mov
add
add
mov
sbbb
sbb
jbe
mov
enter
cmp
cmp
imull
add
cmp
cmp
jnp
sbb
xor
ret
or
dec
hlt
mov
je
ja
push
pop
and
dec
push
lret
pushf
ja
sbb
out
xchg
hlt
loopne
sub
lea
and
and
shrl
mov
push
ror
adc
outsl
jg
popl
mov
mov
into
pop
sub
jge
sbb
sub
lret
loope
adc
or
aad
mov
stos
lret
jl
shl
lea
test
xchg
fstcw
pop
or
fcmovnb
or
rolb
pop
inc
out
mov
stos
cmp
xchg
sarl
setno
jnp
push
shll
or
inc
and
jbe
jg
dec
mov
ficomps
sub
fstps
add
dec
pop
in
aad
cmp
inc
mov
fwait
popa
testl
or
sbb
jbe
in
pusha
jae
pushf
js
inc
cmpsl
cmp
out
inc
xchg
mov
enter
int
add
push
xor
jnp
dec
andb
insl
and
xchg
lret
add
mov
pop
push
mov
and
inc
ror
dec
xchg
sbb
mov
lods
adcb
ret
dec
cmp
imul
mov
loopne
lahf
dec
fistps
out
xchg
cs
push
push
cmp
std
movsl
xor
clc
sbb
inc
or
lahf
cli
pop
call
enter
cs
and
call
mov
push
call
insl
or
test
into
jp
dec
mov
cmpsl
out
jp
mov
scas
rcrl
pop
jg
pusha
sub
mov
sbb
mov
sub
mov
lds
dec
movl
adc
out
cltd
aaa
aad
gs
push
jg
xchg
inc
xorl
xchg
or
das
pop
pop
les
pop
pop
shrl
push
xor
inc
sub
mov
dec
adc
mov
inc
cmc
notb
test
dec
lods
cltd
mov
aas
jmp
clc
imul
cmp
ret
lcall
cmp
mov
dec
hlt
into
mov
jmp
call
addr16
mov
sarl
dec
outsl
push
mov
jb
jge
rcll
and
lret
push
out
inc
out
sbb
aad
mov
xchg
xchg
inc
sti
cmp
jbe
add
aam
push
mov
das
test
xlat
pop
lret
mov
mov
test
xchg
out
je
jmp
jge
xchg
mov
out
inc
iret
ret
sbb
ja
push
mov
xchg
dec
imul
cmp
or
jmp
sbb
ret
or
sub
add
movsb
jns
add
mov
loopne
jge
cmp
or
add
dec
push
stos
dec
sahf
aaa
loopne
fidivs
sahf
movsb
aam
pusha
mov
lods
je
push
fiaddl
dec
pusha
jb
das
and
aad
jle
dec
mov
sub
in
mov
xchg
mov
loop
movsbl
int3
jmp
cld
out
xchg
cmp
shll
mov
ret
enter
loopne
xchg
mov
pushf
xor
scas
mov
jg
pop
filds
adc
jb
mov
jmp
dec
cmpsb
push
icebp
sarl
out
into
push
pop
xor
std
pusha
xchg
lock
add
insl
mov
and
add
dec
jg
lahf
xor
add
adc
jns
mov
add
jne
mov
dec
push
mov
mov
out
test
out
test
xchg
lretw
ficompl
xchg
xor
add
lock
shlb
fdivl
mov
rcl
fisttpll
aam
xchg
inc
in
sub
xchg
in
jle
or
dec
dec
push
mov
and
out
jmp
dec
fisubrs
fwait
test
dec
jnp
jle
stos
movsl
out
mov
cmpsl
push
fcmovne
dec
inc
fidivl
inc
jmp
push
mov
cltd
and
pop
cltd
and
scas
lods
gs
cmp
test
cmp
pop
push
js
adc
push
lods
pop
push
je
addr16
lock
xlat
mov
mov
nop
addr16
dec
pop
mov
std
jae
mov
arpl
xchg
push
fsts
fistps
out
mov
dec
shl
pushf
jno
bound
lahf
adc
ret
ror
das
pop
mov
add
xor
loope
xchg
adc
int
sub
adc
mov
ja
xor
pop
lcall
imul
std
dec
andl
out
mov
cld
insl
xchg
aam
insl
push
aad
jb
fs
and
imul
shrb
mov
add
push
icebp
cs
xor
xchg
push
push
jnp
stc
icebp
xchg
faddl
divb
lock
push
pop
pusha
xchg
sub
or
rcrb
test
in
lea
or
inc
leave
push
movsb
push
dec
and
pop
fisttpll
push
repz
mov
roll
dec
call
jne
inc
inc
mov
or
push
sti
sahf
int
lea
cwtl
in
jp
les
pop
inc
bound
outsl
push
insb
arpl
or
cmp
icebp
jae
cmp
cmc
inc
inc
in
add
notb
ljmp
xchg
cmp
cmpsl
and
into
cmp
inc
inc
iret
push
fisttpl
lret
xlat
enter
xlat
cmp
mov
lret
subb
fimuls
mov
add
xor
jo
adc
push
mov
jne
fisubs
push
stc
rclb
mov
xchg
rolb
push
insb
pushf
or
pop
pop
jne
and
xchg
and
pop
addb
test
sub
sbb
jecxz
mov
pop
lahf
and
cmp
push
sub
faddl
ret
xchg
sub
sub
stos
inc
pop
jecxz
cmpsl
mov
addb
xchg
or
mov
xchg
jp
mov
aas
inc
adc
sbb
mov
mov
push
xlat
jp
leave
or
cmpsl
pop
dec
mov
popf
dec
fsubs
jl
pop
iret
cmp
pop
imul
add
out
ljmp
or
lahf
push
negl
mov
aaa
mov
insl
mov
outsb
repnz
mov
fs
sbb
cwtl
inc
div
popa
cli
nop
popa
scas
pop
popa
js
mov
rcrl
adc
rclb
inc
scas
divb
pop
xor
cmc
inc
stos
movsl
mov
popa
je
mov
mov
lods
push
test
xchg
subb
jge
mov
xor
aam
push
gs
sti
in
jae
nop
das
add
mov
cmc
mov
test
aad
pop
insl
mov
test
rcll
xchg
aas
test
test
gs
cmp
lock
lahf
or
mov
or
push
mov
test
cmp
pushf
in
xchg
cmp
pop
mov
mov
mov
lds
push
jb
test
test
mov
adc
pushf
fwait
movsl
xor
out
push
outsb
pop
push
and
int3
leave
incb
jnp
pop
out
in
es
fnstcw
dec
push
insl
mov
jmp
stos
mov
mov
mov
jns
and
in
rolb
stc
fs
pop
fldcw
xor
in
fmuls
mov
int
shr
les
inc
fwait
sbb
pop
into
ljmp
jo
jmp
mov
cmc
idivb
jecxz
push
js
jne
pop
fmuls
sbb
int3
pop
and
add
pop
push
in
inc
jbe
mov
leave
fs
loop
xor
jae
xchg
push
test
es
daa
add
xorl
rol
add
test
dec
js
std
mov
nop
or
mov
clc
mov
pop
ret
mov
sahf
mov
out
loope
jns
cmp
loop
add
or
psubb
add
xchg
lock
pop
fimull
out
pop
sti
jae
je
imul
mov
ficomps
inc
push
or
jle
fistpl
sbb
dec
aas
and
xor
test
add
shrb
pop
cmpsl
pop
ret
cmp
cld
push
mov
mov
dec
xchg
jge
sub
cwtl
in
arpl
xor
arpl
int
sti
loope
cmp
lcall
lock
mov
cmc
or
inc
xor
iret
out
popa
in
nop
mov
rcrb
scas
add
push
adc
xchg
push
dec
mov
jl
sbb
xor
in
dec
pop
sbb
popa
jo
pop
fistpl
mov
sub
insb
or
test
xchg
inc
adc
mov
mov
popf
cmc
mov
cmp
gs
imul
sub
xor
leave
shl
lods
ret
sti
test
jg
fildl
mov
mov
pop
mov
adc
mov
cmp
cli
icebp
adc
lods
pop
cmp
out
hlt
sbb
lods
ret
subps
stos
insl
mov
dec
nop
push
js
rcrb
jmp
pop
mov
leavew
frstor
cmc
sarb
ret
dec
inc
cmp
adc
sbb
adc
and
daa
jle
stos
adc
xchg
or
add
push
pusha
push
and
repz
mov
ss
cmc
mov
xchg
mov
mov
or
xlat
shlb
inc
jl
nop
out
cli
push
outsb
sub
inc
inc
adc
inc
addr16
jle
lds
xor
shll
rorl
dec
in
cmp
in
inc
ljmp
jne
sub
cmp
rcrb
notb
and
add
jg
jns
pop
cmpsl
or
adc
bound
in
cmp
mov
test
jmp
sub
imulb
movsl
fcoms
and
add
aas
mov
mov
xchg
insl
mov
mov
addr16
popa
int
jg
lret
ficompl
scas
sbb
dec
inc
inc
mov
adc
stc
cs
fcompl
pushl
call
pop
ss
inc
inc
cwtl
cltd
lret
sub
adc
xchg
or
push
into
roll
jne
jecxz
in
adc
insl
adc
push
cmp
adc
fmull
mov
rcr
cmp
test
xlat
test
adc
in
jo
les
and
push
fs
lahf
out
mov
xor
stos
adc
mov
jo
icebp
inc
push
mov
mov
add
cmp
and
lods
bound
inc
lea
cmp
mov
pop
xor
mov
pop
inc
divl
cmc
sbb
mov
inc
sbb
std
push
inc
jb
jle
add
mov
pop
add
pusha
jae
ret
jb
test
jo
notl
xchg
mov
hlt
fs
pop
push
mov
mov
sbb
add
mov
fnstenv
daa
add
cmpsl
out
sub
mov
add
xor
sub
pop
jns
sub
mov
sbb
rol
xchg
sub
jl
push
jl
scas
fs
in
inc
or
cmc
mov
lret
xchg
cmp
shl
xchg
push
das
jno
repnz
and
dec
push
nop
and
jg
outsl
mov
mov
jbe
sbb
jo
sub
adc
test
adc
mov
mov
lret
mov
jg
scas
xchg
mov
shl
out
sbb
mov
or
push
sbb
je
mov
or
stc
lds
and
test
loop
test
xchg
pusha
inc
sbb
add
cmp
push
pop
fidivs
enter
add
jo
scas
xor
sbbl
add
pop
repz
adc
pop
cmp
mov
jb
xchg
insl
dec
stc
sub
andb
inc
outsb
stc
movl
pop
xchg
adc
add
and
cltd
cld
dec
nop
pop
enter
dec
mov
cmp
or
jp
mov
jnp
js
push
bound
sbb
or
fwait
ja
push
add
dec
push
scas
insb
lret
int
out
fsubr
push
sbb
xchg
cmp
orl
rcll
mov
jne
cs
cltd
mov
test
mov
nop
add
dec
in
pusha
mov
mov
push
or
pop
inc
icebp
cmpsl
adc
sbb
es
lds
and
mov
sub
in
xlat
outsl
mov
jge
xor
jmp
mov
add
xchg
adc
jbe
mov
mov
xchg
sub
xchg
rol
lock
out
cld
inc
pop
adc
fmull
pushl
fs
dec
jg
add
adc
mov
loope
loope
stos
cmpsb
mov
dec
movsb
jl
add
jg
mov
mov
dec
add
push
inc
call
repnz
push
dec
jbe
sbb
cmpsb
push
in
shr
mov
cld
push
mov
flds
lock
cmpb
outsl
ret
daa
or
mov
popf
sbb
fstpt
inc
popf
sbb
jp
mov
push
gs
pop
push
call
mov
divb
sbbb
jp
jno,pt
mov
cmc
les
fsubs
cmc
jge
in
insl
lea
push
mov
jns
loop
loope
push
testb
sbb
xor
jne
jmp
inc
pop
fs
lock
adc
ljmp
xor
push
fisttpll
mov
mov
enter
addr16
cmp
xchg
xchg
mov
idiv
outsl
xor
mov
push
lds
adc
dec
mov
test
sub
pop
push
cwtl
xor
push
sub
push
dec
adc
pusha
ffreep
fcomps
in
inc
and
rolb
jb
mov
cmp
xorb
mov
xchg
sbb
clc
stos
andl
adc
or
xchg
roll
rcrb
fs
cli
repnz
or
insb
stos
mov
push
push
shrl
mov
mov
ljmp
pop
mov
pop
stos
or
and
inc
ja
xchg
ret
dec
fsts
dec
mov
cmp
dec
ss
popa
jle
or
mov
pop
lea
or
ret
jg
in
movsl
jns
ds
cld
movsb
test
loop
sti
xorb
adc
mov
hlt
dec
add
dec
xchg
dec
cmc
cmp
inc
xchg
jp
mov
sbb
in
xchg
cmpsl
ret
mov
mov
ret
mov
es
xor
je
sub
pop
pop
cld
ror
int
cmp
jmp
popf
pop
sub
dec
jbe
clc
sarb
movsb
shll
popf
push
mov
cmc
pop
popa
sbb
aaa
mov
jo
sbb
and
pop
sets
mov
rol
imul
or
cmc
pop
adc
pop
cmp
rol
add
hlt
lret
dec
fwait
mov
mov
sbb
ljmp
jmp
push
inc
ja
icebp
scas
xchg
movsl
jb
sub
sbbb
jge
jl
sub
subl
je
out
inc
nop
sti
out
ret
call
fdivrs
stos
sbb
stc
sti
rolb
mov
adc
pop
or
cmp
std
mov
sub
lods
loopne
nop
rcll
repnz
mov
insl
pop
xor
and
fchs
insl
xchg
in
xchg
push
sbb
movaps
inc
inc
xor
into
xor
push
insl
or
rorl
daa
daa
and
add
jbe
xchg
add
loopne
mov
xor
sahf
mov
es
xchg
test
xchg
stc
push
sbb
scas
scas
mov
and
jbe
rolb
xor
lret
dec
jne
or
das
test
adc
outsl
xchg
in
push
mov
filds
and
pop
xchg
xor
push
inc
fwait
insl
sti
repz
je
mov
xor
std
xor
hlt
sahf
cmp
pop
scas
ljmp
nop
and
insb
out
lahf
outsl
aam
jge
lret
push
in
sbb
xor
cmp
testl
enter
sub
and
iret
inc
testb
pop
fildll
fcoml
jecxz
adc
mov
ja
je
jl
loope
push
insb
ret
xchg
jg
pop
push
push
ret
sbb
mov
icebp
leave
dec
dec
push
cmp
insl
adc
xchg
inc
pusha
push
sbb
js
fwait
jns
jmp
call
mov
sbb
push
lock
or
fsubl
dec
jo
lcall
jp
and
cmpsb
and
inc
cltd
pop
cmp
xchg
sub
mov
aam
push
xor
in
push
sbb
bound
in
repz
ficoms
adc
in
jg
inc
aas
push
adc
dec
push
out
pop
dec
leave
push
jbe
out
xchg
sub
imul
out
lahf
mov
test
push
mov
pop
xchg
add
inc
add
iret
aad
sub
into
mov
in
add
jmp
faddl
xor
shll
mov
test
mov
les
inc
or
pop
stc
fildl
aas
js
roll
push
xchg
js
adc
and
bound
hlt
scas
and
aad
inc
and
imul
add
ljmp
scas
jno
fldenv
not
sbb
push
sub
int
and
js
arpl
xchg
roll
inc
mov
xchg
movsb
aas
mov
xchg
es
roll
xor
loop
cld
lods
add
aad
add
sub
pop
jmp
les
sahf
cwtl
fwait
xlat
imulb
addr16
push
jns
das
push
fisttpll
arpl
mov
pop
out
push
inc
dec
jge
xchg
jo
xchg
mov
cld
sbbb
daa
scas
ret
xchg
ds
mov
dec
pop
ret
lods
xor
fstl
push
push
out
mov
jbe
or
loop
mov
testl
int
mov
int
mov
out
push
idivl
pop
pop
cmp
mov
out
add
sbb
adc
sbb
mov
enter
push
mov
cmp
pop
and
sti
sub
mov
xor
or
ljmp
insb
mov
repnz
insl
bswap
and
cmpsl
insl
enter
inc
mov
push
rclb
lds
into
mov
mov
mov
add
adc
cmp
mov
mov
std
popa
xchg
gs
jae
loop
cmp
push
test
sbb
xor
push
inc
aad
mov
sbb
xchg
lret
pop
xor
xchg
cmp
shrb
bound
mov
xchg
mov
mov
or
or
inc
fwait
xor
leave
mov
nop
push
cmpb
stos
sub
icebp
ds
das
adc
mov
or
mov
enter
jge
jb
in
ja
arpl
xchg
inc
push
xchg
imull
adc
dec
mov
pop
push
js
and
jl
in
std
loop
testl
lods
pop
or
arpl
xor
nop
xchg
add
cmp
popf
fcoms
mov
enter
xchg
xor
sbb
fidivl
dec
jbe
add
mov
fidivs
or
test
dec
mov
jg
or
pop
jmp
jb
es
sub
dec
aad
jp
sub
out
imul
cld
jne
or
fdivrs
test
sbb
cmp
cmc
sub
hlt
cmpl
push
xor
or
jecxz
mov
inc
std
cmp
sbbb
lret
inc
pusha
je
and
out
ljmp
shll
dec
mov
fbld
mov
and
stos
push
dec
xchg
push
pop
rolb
sti
push
ret
insl
sbb
lea
pop
xchg
aas
fiaddl
cmp
mov
or
in
lock
shrl
repz
mov
stc
mov
adc
xlat
add
sti
mov
sub
sub
sahf
aas
jmp
stc
dec
clc
stos
insl
push
mull
sub
lahf
pop
mov
shll
mov
repnz
mov
repz
aas
adc
jns
in
mov
and
xchg
mov
int3
pop
xor
and
jmp
imul
cmpsl
lds
call
fbstp
inc
shlb
inc
sbb
inc
movsb
add
cmp
cmp
pop
cs
or
cmp
fbld
pusha
pop
out
mov
inc
inc
inc
dec
mov
shl
movsb
imul
fisttpl
xlat
mov
ret
jge,pn
idiv
pop
xchg
and
push
jge
loopne
in
mov
cmp
sbbb
push
jp
call
jg
repz
sbb
stos
push
xchg
cltd
pop
mov
cmp
cli
stc
clc
dec
sbb
mov
xor
iret
xor
mov
inc
rclb
shll
xchg
in
push
push
or
idivb
add
mov
jmp
cmp
scas
xor
fwait
jmp
push
les
shlb
xlat
sbb
sub
imul
sbb
fmuls
lea
or
sub
cmc
pop
lods
and
fwait
mov
orl
mov
inc
in
popf
xchg
sbb
aad
jnp
jb
xor
mov
data16
jns
sahf
sub
ret
add
imull
mov
jb
outsb
stos
push
orb
inc
push
in
rcrb
subl
loopne
loope
je
aam
and
scas
xchg
mov
out
xor
pop
sub
lret
and
in
adc
movsl
dec
fstps
lock
add
orl
movsl
sub
cmp
and
push
xchg
push
xorl
push
jmp
aas
xor
fwait
out
push
out
sbb
sub
mov
daa
xchg
pusha
arpl
mov
mov
and
mul
test
mov
cltd
pop
mov
scas
leave
push
in
push
notb
inc
jg
data16
dec
inc
mov
pushf
mov
cmpsl
movsb
dec
cld
call
mov
mov
cli
xor
xor
fsubr
fidivrs
test
jg
fistpl
or
add
popf
or
push
popf
sbb
xor
in
jnp
xchg
adcl
cmp
push
popf
mov
dec
stos
sbb
add
enter
and
testl
inc
and
and
adc
add
shll
mull
lahf
cld
and
ds
aas
pop
jecxz
cmpsl
cli
jp
nop
inc
jno
cmp
lahf
or
cmp
rol
mov
push
fwait
out
ret
dec
mov
mov
adc
mov
mov
adc
xor
arpl
jle
int3
cmc
movsb
repz
pop
mov
mov
pop
in
push
cmc
pop
cltd
and
xchg
or
mov
mov
cs
mov
cmp
pop
lahf
xor
es
push
icebp
mov
xchg
jecxz
or
sarb
test
mov
dec
lock
fwait
sub
jb
ds
mov
roll
mov
pop
adc
sbb
mov
or
push
push
std
sti
stc
out
sbb
in
and
and
sub
dec
addl
test
xchg
lcall
enter
inc
fimuls
add
movsb
scas
test
bound
into
call
mov
lea
daa
jl
fnstenv
mov
rcl
or
or
mov
push
lret
jge
pop
sub
movsb
jmp
jo
sbb
sub
pop
andb
mov
mov
stc
push
push
jl
sarb
out
push
jmp
push
xor
and
outsl
imul
in
outsl
insl
test
push
loop
imul
dec
cld
pop
jmp
fs
and
shrl
jns
out
pop
push
pop
mov
mov
mov
aad
pop
in
push
popf
frstor
sub
subl
push
pop
push
adc
int3
repnz
loope
insl
xchg
add
push
mov
dec
mov
mov
xchg
push
mov
jns
dec
inc
or
leave
int3
inc
les
lret
pusha
rsqrtps
xor
rorb
jo
or
jmp
dec
cmp
in
inc
ss
repz
dec
bound
xchg
cmpsl
fsubp
jno
addr16
loopne
imul
mov
lahf
mov
rcrb
pop
push
dec
cmp
divl
xor
or
mov
and
push
call
repnz
lods
icebp
test
divw
xor
jl
mov
jl
mov
sbb
pop
cwtl
jp
aaa
mov
mov
add
shll
push
pushf
inc
es
mov
scas
sub
fiaddl
ljmp
rcrb
lret
mov
add
ljmpw
lea
mov
out
push
mov
cltd
out
and
cld
xchg
movsb
dec
sub
and
shll
mov
lret
dec
in
dec
fisttpll
adc
jae
flds
fwait
nop
and
push
test
repz
movsb
adc
lock
mov
test
fmull
andnps
ret
dec
or
sarl
jne
loope
je
mov
xlat
out
jge
imul
int3
ja
daa
mov
ret
cmpb
adc
add
inc
xchg
pushf
fisubrs
xchg
shlb
rol
lds
aas
pop
mov
and
xchg
cld
pop
mov
mov
xchg
push
sti
jl
cmpsb
or
arpl
and
sarl
add
out
xchg
fucomip
add
dec
xor
scas
stos
pop
aaa
lods
push
and
mov
push
popf
insl
insl
aas
cltd
outsl
jno
lcall
loopne
and
mov
inc
fistl
cmc
int
std
cmc
xchg
enter
aaa
mov
xchg
jbe
dec
fildll
xor
enter
int3
push
arpl
outsb
dec
aaa
add
pop
push
push
ja
push
inc
addr16
mov
std
add
mov
imul
push
xchg
std
ror
sub
sub
or
cmp
pop
pusha
out
jmp
mov
sub
out
mov
mov
adc
pop
jmp
iret
test
jnp
pop
rclb
sbb
push
sti
pop
movsb
mov
aas
xor
pop
test
imul
mov
and
out
bound
pop
add
sbb
jbe
pop
addr16
jecxz
or
jle
sub
sar
das
aam
in
lcall
fwait
mov
mov
out
enter
cmp
sbb
mov
pop
sti
sub
push
orl
dec
pusha
pop
aam
mov
cmp
xchg
cli
movsl
adcb
jo
inc
cmp
clc
sbb
notl
iret
xor
std
xchg
clc
loop
jl
xor
mov
mov
xor
data16
insl
sub
xchg
cmp
jmp
leave
mov
xchg
rolb
scas
xor
pop
inc
xchg
out
lret
push
repz
xor
cmp
out
xchg
dec
adc
scas
push
adc
aaa
jle
fdivp
fwait
cld
xlat
js
mov
jne
add
add
jnp
fdivrs
inc
inc
add
jp
lahf
stc
pop
add
jnp
das
mov
add
pop
lret
mov
divb
jge
and
push
pop
aaa
xor
cmc
push
lcall
or
mov
icebp
adcb
jb
sub
fcoms
dec
outsb
jne
jp
inc
lahf
dec
cmp
xor
mov
fbld
jnp
xorb
and
cltd
in
cs
push
scas
adc
dec
pop
dec
sbb
int3
pop
movsl
into
adc
je
cmc
sbbb
shl
sub
inc
ljmp
push
cmp
mov
xorl
sbb
ljmp
pushf
mov
leave
dec
or
xor
insb
mov
and
mov
push
mov
jl
inc
add
das
and
mov
cli
push
fwait
cmp
icebp
divb
cmp
sub
imul
mov
std
mov
xchg
cmp
es
mov
xlat
sub
lcall
push
rol
jg
and
pop
jmp
aaa
mov
iret
in
add
sub
and
push
repnz
mov
mov
fsts
cmpl
push
sarb
arpl
pop
loopne
adc
push
mov
jb
in
xchg
punpckhwd
fiadds
jg
cmp
xlat
test
fisttpl
dec
jge
aad
jno
ja
xor
and
cli
adc
loop
sub
push
xchg
push
je
push
ret
jp
ss
push
hlt
and
ud1
cmp
cmc
ds
jge
adc
mov
lret
es
or
in
iret
pop
sbb
sbb
xchg
frstor
in
jg
push
daa
mov
out
mov
out
add
push
mov
stc
adc
aaa
hlt
add
push
pop
outsl
xchg
mov
cmp
sub
push
sbb
in
mov
or
rolb
jmp
xchg
movswl
repnz
sti
int
fcmovnu
sahf
roll
sbb
shl
data16
fldt
insl
sbb
mov
nop
gs
in
sub
mov
aam
mov
or
cli
pop
fcoms
cmp
cmp
adc
mov
out
jbe
push
mov
in
mov
jecxz
dec
push
aam
nopl
mov
and
push
mov
outsb
jne
sahf
movsb
push
aas
dec
cmp
es
popa
rolb
mov
inc
cmc
xorl
jecxz
in
prefetch
or
pop
nop
sbb
aad
sub
ds
test
sub
sub
shlb
imul
es
in
add
jp,pn
in
dec
push
mov
cmp
xchg
push
fs
mov
inc
push
push
andb
gs
out
fisubrl
inc
loopne
cmp
xor
out
inc
rclb
lret
dec
cmp
aas
push
xchg
add
push
xchg
jo
cltd
in
arpl
lahf
fsubl
jmp
lods
test
dec
imul
inc
dec
mov
push
sub
pop
mov
and
fsubrs
fwait
xchg
cmpsl
push
inc
call
push
rcrb
mov
stc
push
loopne
popf
movsl
mov
int
lock
cmpsl
hlt
inc
out
push
insb
sub
fdivrs
sbb
xor
rep
enter
sbb
jnp
outsl
mov
xlat
jp
test
jecxz
cmp
imul
mov
mov
outsl
addr16
mov
out
mov
add
sahf
cmpsb
cmpl
adc
mov
add
xor
jns
mov
scas
push
mov
int3
mov
mov
es
rcrb
jmp
addr16
icebp
in
es
icebp
pop
pop
sbb
insl
push
mov
and
aad
push
xchg
jp
push
loopne
aam
inc
push
dec
xchg
sub
xlat
cmp
stos
test
repz
dec
iret
and
leave
std
xor
xchg
adc
xchg
inc
add
nop
jne
xor
push
ss
loopne
shlb
loope
movsb
fldenv
inc
popw
jmp
and
mov
mov
jne
pop
lahf
push
ds
sbb
aad
loope
cmp
hlt
andb
cmp
shrl
es
hlt
sbb
push
cmp
sub
cmp
inc
std
sahf
or
mov
mov
testl
jle
jo
movsb
out
push
into
in
stos
sub
jmp
sbb
dec
cwtl
and
or
int
bound
fbld
shl
adc
push
lock
imul
mov
lods
adc
stos
pop
xor
je
jne
jb
scas
mov
jae
mov
xchg
jecxz
push
lret
dec
push
loopne
bound
or
jae
movsb
mov
or
daa
mov
ss
pop
loope
mov
repz
and
add
jnp
sbb
sub
div
jecxz
add
push
xchg
stc
scas
dec
add
js
add
adc
ret
inc
dec
xchg
out
pop
and
sub
xlat
jo
test
dec
cmc
or
push
push
ss
jbe
lock
jmp
into
repnz
pop
sub
jecxz
jp
insl
ljmp
test
cmp
ficoml
dec
fwait
jns
and
or
push
movsb
push
mov
das
push
fnstsw
fistl
and
insl
push
ss
lahf
mov
leave
sbb
ljmp
add
push
fwait
sarl
dec
pop
sbb
mov
push
xor
aad
out
fcmovne
add
inc
scas
data16
push
aam
xchg
pop
sbb
ljmp
pop
cmpsl
lea
inc
mov
mov
cltd
shll
fists
int
test
dec
sub
mov
xchg
in
add
pusha
inc
dec
popf
repnz
jbe
sbb
cmpsl
rcrl
aaa
mov
fmulp
outsl
push
mov
sub
sub
xchg
pop
xor
pusha
mov
push
pop
mov
and
jmp
sbb
mov
inc
movsl
or
popa
popa
cs
sub
inc
in
fdivrs
jns
add
stos
pop
and
rcrl
xchg
stos
hlt
xor
push
stos
cs
xor
lea
push
test
jae
loope
jbe
or
add
pusha
cs
int3
jmp
sub
mov
sahf
loop
jp
sub
aaa
je
clc
sbb
scas
pop
dec
cmp
hlt
jae
in
fistps
fsubrp
and
sbb
jno
scas
push
mov
das
out
test
imul
dec
jl
test
or
push
mov
pop
mov
mov
fwait
inc
push
cmp
icebp
test
lock
lret
mov
xchg
adc
mov
ret
mov
pop
adc
into
pop
stos
sbb
xchg
aaa
sub
faddp
or
xchg
add
xor
cmp
mov
out
mov
out
fxch
test
ret
repz
in
aaa
scas
jbe
iret
cmp
out
repz
fwait
shl
lods
test
inc
cmpsl
mov
ljmp
ret
stos
add
mov
jbe
push
fwait
xor
pop
xchg
jbe
jnp
adc
mov
lods
inc
movsl
stc
rcr
faddl
pop
les
add
dec
aad
mov
xchg
jg
mov
icebp
out
cmpsb
fcmovnu
cmp
xor
mov
fistpll
repnz
inc
mov
mov
cmp
dec
pusha
test
jecxz
stos
aas
cmpsl
push
pusha
add
pop
movsb
roll
jmp
insb
pop
jecxz
daa
push
cmp
mov
or
outsb
cmp
sahf
cmc
push
and
fs
imul
ss
into
aaa
xor
sbb
addl
mov
lret
sti
mov
cmpsb
add
adc
mov
shr
xchg
faddl
adc
xchg
push
mov
sbb
mov
mull
mov
dec
fists
shlb
out
pushf
and
js
pop
push
jmp
cs
movsb
out
mov
or
add
shr
mov
push
inc
daa
rclb
dec
mov
lcall
roll
out
rcll
fwait
xchg
ror
push
add
fucomi
jecxz
sbbb
pushw
int
lret
mov
cmp
sub
scas
aaa
in
xlat
mov
pop
cmp
xor
or
scas
out
jg
dec
adc
dec
jge
addr16
inc
cli
movsl
gs
loope
xchg
sbb
into
pop
jae
enter
fisttps
push
fistpl
int
add
fldenv
stc
fs
pop
fldt
mov
popf
pop
jns
insb
mov
lret
stc
divl
fdivs
aad
and
and
cli
mov
pop
add
or
mov
fimull
pop
int
aam
ja
and
mov
ret
xor
test
mov
out
ljmp
stos
enter
js
enter
xor
mov
lods
lcall
std
test
sbb
call
adc
aam
enter
xor
push
xchg
mov
aas
ja
aam
rolb
psubusw
push
imul
out
add
jp
or
mov
mov
adc
jnp
add
push
aad
mov
xchg
lcall
das
sub
xchg
and
lds
loopne
xchg
and
divl
insb
lahf
dec
popf
cltd
mov
push
icebp
pop
xorb
lcall
jp
rcr
adc
cs
out
popf
ljmp
fs
cmpsb
mov
lahf
push
nop
mov
pop
lret
int
sub
dec
inc
dec
ljmp
shlb
test
push
scas
int
push
xchg
pop
int
cmp
sub
out
xchg
hlt
sbb
into
mov
fldcw
rcll
or
dec
xor
js
fs
jge
mov
cmp
mov
sub
call
xchg
pop
das
and
pop
cli
fcmovu
fucom
inc
test
mov
dec
sarb
xorb
movsl
ljmp
and
out
movsb
cmp
pop
cld
mov
sub
jns
ja
push
fmull
mov
stc
lds
stos
cmp
mov
pop
cmp
das
or
out
dec
pop
fmulp
repz
or
stos
or
addr16
ljmp
jecxz
sahf
push
into
jge
gs
mov
inc
shlb
inc
jmp
or
mov
jns
push
push
dec
jge
push
pop
add
mov
jl
xchg
or
jne
in
push
sbb
sbb
and
jl
incl
loopne
cwtl
loopne
scas
data16
xchg
cmp
jl
inc
incb
sub
inc
cmpsl
cld
fbld
push
add
inc
sub
xor
loop
div
or
repz
jae
mov
push
add
lock
insb
int
fwait
clc
leave
push
mov
mov
sbb
dec
mov
xor
jb
je
cltd
jle
sub
cmpsb
xor
add
pop
repnz
sub
lods
dec
popf
inc
mov
mov
andb
js
sub
jnp
jg
fcom
mov
sbb
xchg
fsubrs
sbb
rol
in
test
lcall
push
insl
push
ret
test
shll
scas
sbb
repz
fsts
and
sub
mov
xor
add
gs
jmp
xor
scas
pop
stos
push
fnstenv
mov
dec
subl
ficoml
movaps
pop
ret
sbb
xor
aas
out
xchg
outsb
jle
std
scas
mov
imul
sbb
cltd
flds
lret
popa
mov
fldcw
aad
sahf
shr
lcall
outsb
aas
push
mov
inc
inc
fsubl
add
scas
sarl
ljmp
scas
loop
xchg
leave
icebp
lods
pop
pushf
addr16
lock
mov
mov
imul
fucomip
into
pop
pop
iret
add
sub
movsl
sub
cwtl
pushf
inc
fs
dec
push
and
test
add
inc
jecxz
cs
js
cli
dec
loopne
sbb
push
fcomp
or
mov
cltd
sub
pop
out
adc
push
sbb
push
push
or
ja
mov
int
jmp
jmp
jne
stos
mov
ret
in
jne
dec
push
pop
and
push
subl
lds
mov
popa
push
mov
scas
shrl
or
lods
cmp
mov
lods
inc
sub
jle
test
and
sti
add
std
xchg
bound
dec
lcall
popa
and
add
sahf
push
sbb
pop
dec
adc
mov
ja
or
mov
mov
pop
push
sub
xchg
cli
xchg
mov
mov
outsl
xor
arpl
jo
inc
stos
or
sub
push
in
mov
neg
push
cmpsl
notb
mov
es
test
inc
push
sbb
jb
jbe
xchg
push
lods
inc
xor
inc
push
filds
cltd
pop
jle
jmp
xor
aas
xchg
ret
push
dec
int3
addl
in
es
and
cmpl
or
aam
in
adc
daa
scas
cmpsb
cmp
mov
iret
sbb
add
mov
out
lods
fldenv
adc
xor
rcl
jb
sti
cmp
arpl
hlt
cmp
js
cli
mov
insl
repnz
mov
dec
pop
xchg
adc
icebp
mov
aaa
shl
jns
fwait
jnp
cmp
ljmp
cltd
push
ret
pop
mov
pmulhw
xchg
loopne
sbb
popa
scas
mov
aas
inc
sbb
and
jle
imul
test
add
popf
insb
sub
dec
inc
cwtl
pop
das
aas
out
dec
cwtl
jns
movsb
fidivrs
fcompl
push
sub
ja
jl
test
push
or
movsl
inc
xchg
popa
and
inc
mov
ds
sbb
jmp
xchg
add
dec
sbb
xor
cmp
aad
push
test
xchg
fcomps
aas
mov
dec
cmc
cmp
or
mov
rolb
lret
fiadds
fistl
cmp
aaa
sub
inc
and
leave
or
mov
mov
jmp
hlt
loop
aam
sub
mov
movsl
lds
fldt
in
lcall
das
fistpl
mov
jbe
pop
pop
bound
in
or
inc
add
dec
jl
push
jg
lahf
push
nop
incl
inc
xor
push
add
ljmp
jae
cmp
sub
iret
xchg
sub
imul
xlat
shr
push
mov
fnstcw
mov
mov
push
fidivs
inc
dec
aas
mov
add
sbb
xor
pop
into
dec
sbb
jmp
push
cmpb
jne
xchg
push
int
dec
cs
xchg
cwtl
jno
sahf
cld
xchg
jae
imul
mov
sbb
sub
loop
fadds
addr16
movsl
add
jle
mov
into
mov
push
imul
data16
loope
lret
xchg
sbb
jge
push
pop
add
adc
fimull
stc
jbe
sbb
cmpsw
mov
or
lcall
sbb
jp
sub
mov
scas
fisubl
add
out
push
push
push
mov
mov
pushf
mov
pop
pop
jo
sbb
and
jl
cmpsb
shl
push
mov
or
xchg
shll
pop
enter
lret
xlat
loop
push
scas
dec
lcall
leave
in
push
aam
cs
es
inc
ds
dec
cmp
inc
adc
dec
cltd
in
xchg
push
add
sub
mov
and
cwtl
xchg
mov
mov
into
or
jne
jae
lods
lcall
cmp
clc
sbb
aad
cmc
rorb
xor
mov
mov
cmp
sub
in
or
ret
push
sahf
xchg
insl
inc
inc
loop
hlt
sbb
mov
out
jmp
sbb
and
ftst
or
fcompl
mov
ss
jbe
pop
mov
jnp
lds
pop
sub
inc
mov
lods
sub
pop
ss
daa
into
xorb
cmp
lds
dec
add
lock
mov
sub
push
popa
adc
dec
lret
inc
test
repnz
dec
jge
pop
mov
loop
sbb
out
mov
sbb
lahf
push
mov
and
xor
int
pop
insl
inc
ficomps
sbb
or
shll
fisubrl
stos
jp
sti
jne
rorl
addr16
sti
loope
mov
push
pop
push
dec
pop
rcll
xchg
jo
pop
outsl
adc
xchg
adc
sar
mov
mov
mov
stc
xor
fmull
mov
adc
stos
xchg
ficoms
into
sti
push
sbb
mov
ja
pop
and
push
sti
out
addb
and
fadd
aas
add
xchg
stos
ljmp
test
popf
outsl
rcr
xlat
mov
dec
fs
inc
cs
push
jecxz
jmp
imull
shl
xor
inc
inc
aad
mov
mov
xchg
add
scas
sbb
push
hlt
and
jmp
fcomp
sub
dec
sti
std
in
loop
adc
out
adc
sbb
or
fsubrl
stos
push
xchg
pop
add
dec
mov
mul
cs
add
pop
add
push
cli
mov
pop
mov
je
ljmp
cwtl
arpl
mov
dec
in
int
push
mov
out
cmp
test
sub
js
cmp
add
js
orl
sbb
cltd
shrb
jge
shrb
sub
aam
jg
addb
xchg
jecxz
mov
lods
outsb
or
or
loop
cmp
jecxz
inc
jno
ss
dec
xor
mov
daa
inc
add
pop
dec
imul
cld
mov
inc
push
and
sbb
mov
dec
jbe
leave
dec
cmp
xchg
inc
jo
or
out
mov
jne
mov
fldcw
repz
mov
dec
xlat
push
mov
jl
icebp
jns
iret
push
into
cmp
push
adc
push
fisubrs
call
add
xchg
cmpl
add
mov
mov
call
out
shld
jmp
iret
inc
xchg
sbb
push
les
pop
in
hlt
std
cmpsl
xchg
addr16
in
dec
xchg
insl
adc
sub
dec
in
in
xor
xor
enter
je
cmp
mov
push
adc
lahf
pop
outsl
push
cmc
lock
test
mov
dec
mov
mov
mov
aaa
stos
arpl
pop
pop
jp
inc
enter
cmp
sarb
xchg
imul
pop
xor
rcll
xchg
sub
xor
fs
sahf
or
test
cltd
sti
jmp
mov
nop
imul
outsl
in
pop
stos
mov
test
push
jno
scas
subl
pushaw
int3
add
jg
test
sti
sbb
xor
push
das
fidivs
and
jge
ret
mov
test
es
sub
xor
sbb
je
xchg
fidivs
stc
fmuls
xchg
adc
mov
scas
imul
add
mov
dec
sub
xchg
dec
movsl
repz
sbb
fmul
add
stos
rol
sub
adc
sbb
cmp
add
add
jecxz
mov
js
stos
sub
scas
cmp
insb
jmp
andb
pop
jmp
cmp
sahf
ficoml
shll
jns
jg
call
into
and
and
pop
sbb
cmp
or
sti
stos
in
lods
loope
cmp
mov
mov
test
insl
dec
lods
xchg
jl
mov
notl
adc
pop
lods
js
leave
lahf
loope
xchg
lods
out
leave
das
out
out
and
mov
xor
hlt
jnp
mov
ret
xchg
data16
pop
je
clc
aad
aam
xor
jmp
or
scas
cmp
mov
test
data16
out
jae
pop
add
fldt
cmp
ss
xchg
push
cltd
and
shl
mov
mov
in
iret
outsl
sub
cld
roll
insb
outsl
incb
xor
cld
test
push
mulb
imul
cmc
push
adc
icebp
enter
cmc
imul
aam
and
aas
cltd
ret
popa
pop
sahf
add
pop
mov
in
mov
xor
add
sbb
jle
dec
xlat
xchg
xchg
adcb
in
pusha
inc
add
cwtl
sbb
cli
lods
mov
insl
or
cld
mov
rcll
daa
pop
sub
stos
mov
clc
add
mov
shr
xchg
inc
add
gs
adc
lea
enter
mov
inc
shrl
inc
adc
stos
hlt
and
inc
mov
jns
sbb
adc
jle
and
sub
cwtl
push
cmp
mov
pop
sub
jle
mov
rcll
pushf
mov
jg
nop
fldt
cmp
iret
lock
cmpsb
roll
mov
lea
mov
xlat
testl
loopne
icebp
testb
and
fisubl
cmp
jno
pop
xchg
push
fisubrl
cwtl
daa
out
or
sar
pop
ss
popf
loope
rorl
ss
ljmp
pop
dec
inc
mov
push
inc
repnz
jmp
lds
adc
jne
and
rcrb
ljmp
add
mov
scas
and
lds
jb
dec
or
aam
cmp
sbb
in
add
adc
adc
dec
ja
sbb
jo
js
pop
popf
cmpsl
pop
sub
inc
in
jo
inc
int
jge
add
lahf
mov
out
push
popa
ja
adc
cli
roll
sub
inc
mov
mov
jno
arpl
cmp
subb
push
in
fcoms
jl
pop
mov
push
lock
mov
sub
cs
and
stos
leave
repz
enter
cld
mov
popf
stos
pop
xchg
push
arpl
test
add
cmp
icebp
sti
rolb
hlt
add
rorl
popa
mov
push
cmp
dec
sbb
test
jmp
dec
ljmp
mov
xor
rcr
jb
out
cmp
sub
and
xor
and
data16
dec
insb
lret
stos
ror
popa
mov
push
and
cmp
test
pop
xchg
lahf
push
clc
add
faddl
mov
mov
aas
dec
rorl
and
testl
jne
pop
insl
sub
pop
cmpsl
sbb
and
loopne
mov
xchg
jg
test
je
adc
dec
sti
es
sbb
int3
sub
pop
dec
add
call
jg
pop
mov
xor
loope
lock
xor
in
adc
xchg
sub
ds
cmp
in
je
mov
fisubrl
add
in
repnz
mov
rorl
ret
out
fwait
or
pop
adc
les
xchg
mov
jb
ret
inc
mov
stc
pop
ja
push
pop
outsb
je
repnz
cmpb
adc
xchg
clc
cmpsl
movsb
inc
mov
insl
fistpll
xorl
mov
dec
les
int
sub
inc
or
mov
xchg
mov
shlb
pop
movsl
lock
ret
jb
push
in
aam
mov
je
xlat
popf
sbb
into
sbb
add
adc
push
jg
add
jo
ja
filds
sub
fwait
add
cwtl
fdivl
push
lret
xlat
insb
clc
test
mov
lods
cmp
mov
invd
push
stc
addr16
repz
sti
insb
jmp
aaa
leave
jmp
cmp
adc
pop
stc
xchg
and
and
in
in
out
push
das
xor
adc
lahf
cmp
inc
sbb
push
loopne
adc
sti
cltd
fnstsw
cmc
mov
ret
movsl
mov
das
mov
shl
sub
or
mov
inc
inc
and
mov
fidivrs
out
jmp
mov
push
dec
cltd
mov
inc
aad
push
roll
jnp
and
js
cltd
outsb
pushf
fists
push
es
fcomps
xor
in
inc
xor
mov
rcr
inc
cli
and
packuswb
mov
xchg
push
mov
lods
insl
cs
mov
and
enter
stos
mov
or
shlb
jae
sub
push
mov
mov
call
ss
and
lods
sub
lods
sbb
mov
jb
xchg
jle
sti
jge
iret
sub
mov
pushf
cltd
shl
or
mov
repz
js
sti
scas
dec
mov
jns
and
outsl
add
jne
mov
xlat
pop
add
mov
cmc
das
jle
scas
gs
dec
call
out
aas
negl
icebp
sub
js
enter
mov
pop
loope
mov
ds
sub
sub
nop
call
in
sbb
cmpsl
cmpsb
fsubs
mov
sub
lcall
cmc
mov
cmp
mov
fldcw
call
sbb
mov
movsb
xchg
hlt
stos
sub
test
hlt
xchg
fidivrs
mov
mov
call
sub
add
dec
adc
and
add
cmp
bound
in
sub
imul
stc
add
xor
push
sbb
xor
pop
adc
mov
xor
mov
iret
dec
loop
mov
scas
repnz
ljmp
add
test
jb
and
clc
popa
in
pusha
test
inc
add
movsb
fdivs
add
ja
xchg
sub
and
mov
dec
push
outsb
jbe
jle
rclb
sbb
lcall
daa
cmp
adc
out
scas
in
rol
inc
pushf
sarb
arpl
sub
out
aas
enter
mov
scas
sbb
outsb
and
fwait
mov
dec
jg
jmp
sbb
cmp
loop
fnstcw
or
aad
adc
cmp
add
aas
push
insl
pusha
push
dec
dec
call
fwait
icebp
aad
and
pop
mov
mov
in
int
adc
nop
pop
and
inc
fistpll
and
fisubs
or
jl
lods
jp
cltd
imul
xchg
inc
mov
fdivs
fwait
sti
push
adc
sbb
push
addb
jmp
xor
popa
xor
repnz
push
rcrl
bound
lret
jnp
outsb
adc
and
outsb
sbb
nop
mov
jp
adc
das
je,pt
xorl
push
test
repz
es
out
shrb
add
mov
outsl
flds
icebp
cvtpi2ps
adc
jo
cmpsb
les
orb
add
pop
xchg
clc
push
pop
fs
movsb
insl
or
loope
cmp
sbb
mov
out
nop
mov
insl
sub
xchg
mov
es
and
inc
ror
nop
lds
ficoml
adc
cmp
mov
inc
and
fwait
push
and
push
pop
mov
js
gs
mov
mov
or
cli
mov
dec
mov
mov
cmp
dec
rcrl
out
shrb
into
and
or
out
leave
dec
scas
stos
xchg
sbb
or
out
push
and
mov
daa
nop
pop
mov
xchg
lods
test
mov
icebp
ficoms
dec
jp
push
cmp
popf
push
addl
btc
fsub
sub
iret
mov
jmp
loope
fdivrs
adc
mov
inc
daa
cmp
cmpsl
add
ds
stos
jle
stc
inc
jge
fistps
xchg
ret
fnsave
ret
push
adc
mov
fs
push
sbb
gs
sbb
mov
arpl
fmull
test
mov
inc
push
shr
pop
jb
cli
pop
std
adc
mov
sub
and
adc
jns
and
pop
push
jle
out
mov
out
loope
pop
push
das
pop
loop
cmp
sbb
mov
je
std
sbb
and
out
jge
outsb
ret
jnp
jl
test
sub
test
xchg
iret
jb
lahf
popf
lods
mov
rorb
mov
mov
out
cmpsl
pop
loope
stos
stc
shll
pop
stos
fdivs
push
cmp
adc
jmp
add
sahf
lds
add
sub
ja
pop
mov
push
loop
mov
imul
sub
sbb
push
jns
mov
or
pop
sub
nop
outsl
pop
ja
hlt
push
lods
jb
andl
xchg
loopne
repz
cltd
dec
jno
jae
push
adc
in
xchg
sub
and
bound
jnp
imul
lcall
add
pop
lds
fnstcw
insb
rcr
test
das
lds
inc
pop
pop
sub
call
imul
lea
sbb
jecxz
arpl
pop
inc
xor
and
stos
xchg
sahf
xor
mov
mov
xchg
pop
or
jns
js
pop
xor
testl
inc
ljmp
sub
push
and
mov
sub
gs
lock
cmpsl
clc
popf
sbb
aas
pop
dec
and
daa
dec
inc
inc
pop
andl
sbb
rorw
or
loop
and
faddp
movsl
push
push
int
fistl
jbe
mov
pop
mov
ffree
jns
enter
sub
ffree
xor
cli
mov
xchg
add
pop
xor
repz
sbb
dec
aam
insl
les
popa
adc
pop
jo
cmp
scas
add
popf
repz
sahf
cmp
adc
fwait
jnp
aad
repz
in
cs
mov
hlt
jecxz
push
sbb
leave
sbb
cmp
je
add
dec
pop
pop
mov
xchg
icebp
mov
gs
lcall
inc
and
das
addl
lods
ljmp
arpl
push
xchg
les
lods
sub
pop
push
inc
addr16
lret
mov
aaa
xor
lock
mov
test
push
aaa
cmpsb
lahf
repnz
mov
stos
sub
inc
mov
test
xchg
ss
add
push
cmp
sub
sti
stos
sarb
aas
sbb
mov
incb
aad
mov
push
mov
mov
jno
pop
jns
xchg
jo
jecxz
mov
loope
add
jmp
mov
imul
into
inc
imul
inc
pop
push
add
in
pop
in
lcall
push
ror
pop
jne
scas
rcrb
fstps
sbb
les
gs
out
jmp
push
mov
push
add
or
xor
jecxz
testb
lcall
loop
xchg
roll
je
movsb
aad
fsubr
ds
and
xor
jmp
mov
imul
fistl
roll
adcl
mov
into
push
mov
movsl
mov
and
loope
mov
xchg
push
adc
mov
lcall
out
mov
ret
cmp
dec
sbb
pop
pop
mov
mov
mov
popa
xor
mov
xchg
icebp
inc
cmp
mov
cmc
adc
inc
xchg
inc
hlt
inc
inc
sbb
inc
leave
jbe
jns
mov
pop
outsb
pop
pop
out
adc
out
inc
and
sub
mov
jecxz
xor
arpl
stos
push
lcall
pop
sbb
xor
jle
or
inc
xchg
pop
orps
inc
fwait
cmpsl
xchg
lret
sahf
icebp
dec
packsswb
mov
jmp
inc
inc
lods
int
sub
push
sub
add
loop
xchg
sub
mov
gs
jb
mov
gs
mov
dec
add
outsb
call
jg
out
or
jno
pop
push
into
pushf
inc
dec
iret
jle
cwtl
int
ret
pop
movsl
xchg
push
sbb
loop
out
aad
nop
jl
lock
mov
ret
sbb
or
add
cmp
int
mov
add
and
cmpsb
call
push
mov
xchg
imul
cmc
xchg
or
arpl
push
jmp
jo
addl
sub
dec
push
pop
mov
cmpsl
fstl
pop
fucom
or
fimull
xor
mov
aad
stc
xor
nop
data16
js
xor
mov
mov
mov
daa
or
shr
jno
inc
mov
add
inc
inc
loop
push
xchg
adc
dec
push
add
fdivs
push
push
mov
ja
and
sbb
movsl
mov
andb
fbstp
mov
adc
fnstsw
push
daa
ffree
in
andl
dec
add
mov
xchg
sub
scas
mov
xchg
and
aad
outsb
xor
cs
leave
test
mov
mov
adc
adc
adc
into
mov
leave
pushf
xlat
shlb
xchg
inc
lods
jl
out
lahf
test
into
push
inc
dec
cmpsl
mov
shll
or
jecxz
cli
aas
lea
insb
pop
fistl
nop
xor
add
sbb
jg
mov
shlb
xchg
jl
and
daa
je
cs
jecxz
inc
iret
jnp
push
jp
jp
dec
cmp
testl
out
cs
or
arpl
add
jmp
push
nop
or
in
add
mov
sub
test
dec
lea
fnclex
ret
hlt
add
out
xor
or
sti
popf
xchg
xor
test
jae
lds
arpl
in
jl
cltd
dec
mov
dec
inc
nop
dec
adc
mov
aas
inc
jae
imul
into
movsl
std
icebp
adc
cmp
addr16
inc
repnz
mov
and
xor
gs
dec
push
xchg
cmp
adc
xchg
push
cmp
jl
mov
cld
addl
adc
cmpsl
xor
aas
jno
fcoml
jnp
lret
and
or
mov
push
mov
lahf
les
mov
and
ror
rcrb
mov
andl
mov
hlt
std
mov
ficoml
jne
ja
test
pop
cmp
mov
push
lods
sub
sbb
adc
inc
inc
mov
fsts
std
int3
incb
hlt
mov
mov
push
out
dec
mov
pop
std
bound
sbb
push
dec
mov
testb
pop
sahf
pop
orb
jae
xchg
jmp
divb
sbb
add
jmp
xor
lods
cmpsb
aas
popf
loop
mov
jne
cmp
hlt
ja
sub
add
orb
inc
inc
faddp
mov
jmp
sub
sahf
mov
mov
fmuls
pop
ss
mov
jne
pop
xchg
jno
insl
sbb
jno
in
hlt
mov
insb
movsb
movsb
inc
std
scas
pop
les
mov
ds
add
dec
sub
pop
mov
xchg
sub
pop
es
stc
jp
sub
inc
jne
fnstcw
iret
push
xchg
aad
inc
stos
out
inc
jl
jae
das
mov
mov
and
cs
ret
cmpsl
nop
dec
mov
lock
ret
jae
arpl
lods
imull
sub
clc
pop
xorl
aaa
cli
mov
mov
cmovns
fildl
in
xchg
lea
xorl
xor
and
and
arpl
xor
sbb
pop
cmp
jno
pop
lret
lock
fstl
outsb
mov
shll
cli
cmp
pop
xchg
add
icebp
xor
mov
loop
jg
cmp
pop
xor
pop
daa
xchg
aad
xchg
fnstcw
mov
xchg
dec
ret
sbb
xchg
xor
jmp
scas
push
xchg
stos
inc
sub
pop
xchg
pop
std
mov
loopne
mov
jmp
xchg
pop
mov
and
adc
ja
in
or
test
sub
test
sbb
fsubs
fs
movsb
test
push
xchg
test
jbe
lcall
jns
mov
scas
loope
insb
scas
out
faddl
pop
ss
cli
xor
fdivr
add
jo
fs
pop
stc
mov
mov
add
imul
push
xchg
aam
faddl
xor
adc
icebp
in
ljmp
and
pop
pop
add
lcall
jle
das
push
mov
leave
jp
aaa
xchg
aas
dec
xchg
adc
inc
scas
pop
jno
push
hlt
ret
sete
mov
lret
arpl
push
mov
sub
mov
ljmp
fwait
aad
pop
rcl
nop
cmp
adcl
outsb
faddp
add
dec
shrb
cli
mov
ja
movsb
add
leave
jmp
adc
xor
sub
adc
jne
push
jl
dec
xor
jmp
pusha
jo
and
xchg
xor
scas
xchg
rolb
rclb
stos
jne
addr16
jb
mov
imul
ret
cli
cmp
enter
pop
xchg
push
popf
fldcw
xchg
push
nop
pop
in
arpl
xor
jns
arpl
bound
jbe
sahf
rorb
inc
ss
inc
mov
lds
sahf
pop
testb
dec
stc
pop
pop
xchg
loopne
or
xor
mov
sbb
out
xor
lcall
repz
lock
pop
add
inc
jnp
daa
arpl
outsl
or
push
stos
stc
dec
enter
sub
adc
mov
sbb
mov
pop
pop
add
cmc
cmpsl
cmp
pop
dec
mov
movsb
inc
enter
mov
xchg
xchg
loope,pt
mov
movsl
jo
add
fadds
cli
xor
mov
xlat
mov
leave
lods
testl
int3
sub
shll
scas
lock
mov
push
dec
pop
insl
cmpsb
xchg
dec
and
and
shll
pop
fisubs
fildll
inc
scas
xor
mov
and
ret
push
leave
les
add
scas
dec
mov
sub
xchg
testb
xor
jno
xor
pop
xor
incb
cmpsl
in
into
dec
sbb
mov
adc
mov
popf
lds
pop
scas
jae
scas
or
cmp
stc
push
insb
xchg
dec
inc
xorb
rorl
jge
movsb
in
jmp
xchg
mov
xchg
hlt
test
and
addr16
push
popf
mov
fstl
add
pop
sub
pop
or
addb
test
ja
and
stos
sbb
add
das
mov
js
lea
mov
or
and
mov
pop
cld
sub
pop
mov
xchg
jmp
into
int3
mov
outsb
fisubrl
lcall
fistl
pop
add
mov
out
lods
xor
inc
push
add
call
xor
idivb
in
xchg
fs
jp
xor
xchg
out
int
push
mov
dec
adc
popa
adc
rol
mov
loop
or
jmp
dec
mov
adc
mov
xchg
inc
jle
inc
lods
xchg
mov
sub
into
jnp
and
test
sbb
inc
adc
adc
mov
fstpl
and
xor
pop
add
lcall
xor
loopne
xlat
aam
mov
andl
mov
dec
cwtl
pop
shlb
iret
test
inc
mov
lock
sbb
out
jg
fs
sub
jge
add
fs
repz
dec
lds
out
popa
xlat
jne
push
sbb
pop
push
sub
lods
ds
popf
jb
pop
pop
pop
push
add
jg
cmp
mov
lcall
jbe
jle
les
sbb
xchg
out
adc
repz
cld
rcrb
cld
or
ss
test
insb
loopne
cmp
ss
in
pop
jnp
lds
in
insl
sub
fstl
les
fwait
push
adc
ljmp
mov
mov
aad
lret
push
inc
aad
frstor
dec
pop
mov
ljmp
or
sbb
addl
push
sbb
add
ss
imul
mov
add
mov
add
xor
loope
pop
stos
xchg
mov
jmp
scas
xchg
hlt
push
aam
es
push
mov
scas
repz
push
in
jmp
jecxz
mov
push
xchg
rorl
pop
insb
xchg
stc
pusha
into
jns
loopne
jmp
fidivrl
sub
iret
rcl
sbb
dec
and
in
out
aam
cmpsb
cmp
jecxz
invd
sbb
fsubs
push
std
mov
mov
lock
hlt
sbb
sbb
and
sbb
ds
out
subl
popa
stc
sbb
and
pop
add
push
inc
outsl
xor
xor
mov
out
jne
loopne
mov
jecxz
je
mov
addr16
sub
sbb
adc
sti
xor
aas
push
and
pop
sbb
out
out
frstor
lea
xor
insl
cbtw
lods
add
push
xor
xlat
pop
sub
xchg
mov
adc
std
mov
fwait
das
and
out
test
out
ds
jle
lds
adc
out
and
inc
jns
add
pop
pop
mov
xor
mov
test
into
mov
out
mov
adc
jne
pop
mov
mov
fdivrs
test
cmp
jg
lock
jmp
outsb
adc
outsb
repnz
xor
into
pop
bound
clc
inc
cmp
into
ret
test
lds
cmp
mov
imul
lahf
xlat
rcl
inc
int3
filds
add
enter
xor
or
fcmovnb
das
test
sbb
into
jg
mov
sub
xchg
ret
mov
push
adc
pop
in
jo
jo
leave
addr16
xor
inc
xor
sub
popf
sbbb
mull
inc
gs
dec
mov
in
sub
jp
push
ss
add
or
jns
inc
out
mov
inc
mov
aam
in
lea
inc
xchg
ret
ljmp
test
scas
mov
popa
jno
loop
out
dec
pusha
movsb
roll
mov
jae
mov
adc
les
xchg
pop
inc
and
stos
imulb
fisubrl
je
and
sbb
push
lds
add
sahf
inc
popa
push
lcall
dec
fdivs
notl
rcrb
inc
ficomps
xor
or
in
movsb
and
in
pusha
stos
sbb
sbb
mov
in
or
outsl
mov
out
dec
sbb
mov
enter
cmpl
mov
sub
int
inc
jge
int3
imul
rolb
push
jle
fildll
push
dec
test
cmp
iret
daa
sub
dec
inc
or
inc
es
push
xlat
and
jp
adc
dec
lods
add
cmp
xor
loope
push
mov
xlat
xor
xchg
mov
icebp
rclb
sbb
cmp
cmpsl
imul
insl
add
or
jg
push
cmpsl
sarl
push
push
or
adc
push
sarb
jg
pop
cmc
inc
popl
cmp
sbb
mov
mov
hlt
jns
test
dec
mov
cmpsb
fildll
movsl
inc
sub
test
jecxz
sub
xchg
je
arpl
in
mov
enter
cmp
mov
mov
shlb
mov
pop
pop
psubusw
or
add
int3
fwait
inc
movb
rorl
dec
mov
fidivrl
push
jnp
insl
mov
push
xor
pop
pop
mov
out
mov
inc
lcall
addr16
push
fdivrs
xor
mov
inc
or
ret
inc
mov
fidivs
ds
fs
lret
sarb
add
lods
outsl
sub
sbb
lahf
aad
enter
or
xor
adc
xor
push
mov
xchg
testl
inc
addr16
ds
bound
lods
pop
mov
sbb
mov
cmc
xorb
mov
mov
mov
aas
out
adc
jb
sarl
rorl
leave
mov
popf
dec
sbb
cmpsb
or
inc
jne
addr16
mov
insb
mov
pusha
cltd
jno
stc
push
out
cmp
cmp
in
mov
lds
pusha
xlat
mov
inc
sub
add
jae
dec
xchg
and
xchg
daa
sbb
movsl
pop
cmp
leave
and
push
outsb
jmp
or
jg
push
imul
ret
ret
insb
addl
fstl
pop
sbb
enter
dec
inc
mov
push
xchg
fidivs
movsl
test
mov
cs
or
mov
inc
xor
push
mov
jge
pop
out
mov
rorl
pop
stc
leave
iret
popa
mov
imulb
imul
pusha
mov
or
popa
push
push
dec
pop
jecxz
out
dec
out
xchg
stos
ljmp
add
outsl
xlat
das
pop
std
setbe
mov
movsb
cs
shlb
les
mov
mov
xor
add
jo
mov
fidivrs
mov
cvttps2pi
sbb
push
sahf
pop
cmp
popa
sub
jno
test
repnz
sub
cli
js
loope
pusha
roll
xchg
sbb
enter
rolb
shll
popf
cli
adc
or
push
in
push
sahf
and
xlat
jge
outsl
fistpl
int
popa
mov
pop
cmpl
lock
insl
cmpsl
std
cmp
xor
negl
sbb
mov
xchg
sbb
pop
push
arpl
cmpsb
xor
push
addl
mov
push
imul
repz
pop
sarb
test
sub
adc
fidivrl
insl
jmp
aaa
dec
sahf
or
in
or
mov
xor
push
scas
in
mov
mov
pop
xchg
xchg
stos
jl
stc
sbb
add
xor
xchg
lock
dec
push
iret
mov
fimull
jle
outsb
or
rol
insb
adc
mov
sbb
idivb
data16
gs
jmp
jp
and
scas
mov
sbb
pop
int3
mov
int3
call
test
xchg
push
pushf
in
adc
rorb
out
orb
pop
roll
mov
xor
or
cmpl
out
out
pusha
mov
ret
sub
popf
xchg
ret
pop
nop
jecxz
cltd
or
out
inc
mov
pop
sub
stc
or
jns
js
xlat
lcall
cli
cmp
adcb
fsubl
dec
dec
adc
rorb
lods
roll
rorb
sbb
jno
dec
lret
push
lea
fidivrl
outsb
mov
nop
xchg
adc
push
or
lods
jne
inc
mov
xor
fcompl
fsubp
push
mov
pop
jo
mov
xor
jbe
dec
adc
adc
inc
clc
out
inc
dec
orl
imul
jno
push
mov
iret
and
xor
jp
std
pop
or
std
jl
sbb
repz
lahf
outsl
fsubl
andl
aad
gs
fdivs
adc
cmp
or
or
cli
and
icebp
test
pushf
mov
mov
mov
jl
shll
mov
mov
scas
ficomps
inc
adc
sti
push
mov
and
sub
popa
fcoms
cmp
daa
push
fsubrs
push
sub
hlt
icebp
repnz
mov
mov
add
push
fdivs
fsubl
test
jmp
mov
outsb
xchg
or
inc
xchg
mov
adc
pop
mov
mov
push
clc
mov
push
ret
loop
inc
mov
pop
xchg
jno
inc
sahf
add
cmp
xor
mov
jmp
mov
cmpsb
clc
mov
jge
sub
es
outsl
xchg
sub
mov
xchg
scas
shlb
mov
mov
or
and
inc
test
or
mov
icebp
std
pop
sub
lods
ret
push
orl
xchg
sub
aas
and
xor
rolb
mov
and
movsb
sub
push
cli
jmp
movsb
sub
inc
adc
push
sbb
rcrl
xchg
pop
outsb
push
push
push
jecxz
jnp
insl
xchg
cltd
cs
pop
cmc
lea
xchg
aad
pop
imul
leave
test
hlt
xchg
xchg
mov
shl
popa
es
aas
mov
jne
mov
inc
xchg
imul
mov
shlb
jge
cmp
and
movsb
inc
loope
jo
dec
fwait
push
inc
and
jg
adc
cmp
jno
add
mov
dec
and
mov
sub
scas
push
lret
or
adc
call
jb
scas
sbb
nop
push
mov
ljmp
adc
jns
sub
pop
mov
clc
mov
xlat
adc
test
mov
cltd
sbb
lret
mov
sub
mov
xchg
aaa
mov
sub
inc
inc
cmp
add
xchg
std
pop
jnp
loopne
enter
fimull
sbb
xlat
ret
pusha
sub
shl
popf
mov
cmp
dec
fdivl
popf
mov
jns
test
xchg
out
ljmp
out
dec
nop
push
adc
mov
and
shlb
andl
test
mov
or
xor
out
inc
ljmp
xchg
mov
xlat
jb
push
shl
fnstenv
mov
fldenv
scas
sarb
scas
jne
or
into
loopne
add
sbb
aaa
out
pop
or
push
mov
xor
xchg
stc
lcall
fcoml
inc
shr
dec
adc
mov
mov
pop
cmp
pop
sub
add
es
pop
lods
push
inc
pop
jmp
imul
pop
sbb
sub
mov
lods
je
or
sahf
popf
cmp
outsl
xchg
pop
dec
xchg
ss
repz
push
xchg
pop
outsb
arpl
pop
pop
outsb
xor
add
cmc
sbb
test
xor
inc
fsubrs
mov
rclb
lock
pop
fwait
sbb
or
stos
push
imul
data16
pop
sbb
repnz
icebp
int
fstl
iret
fwait
sbb
aam
hlt
imul
pop
mov
mov
fs
les
dec
mov
dec
and
push
mov
mov
xlat
in
cmp
lea
mov
daa
arpl
test
insb
stos
js
clc
and
sti
cmc
shll
mov
mov
xchg
js
addl
fnsave
fdivl
inc
mov
lods
inc
ljmp
sti
jnp
sub
rolb
mov
es
icebp
icebp
inc
adc
insb
inc
enter
cwtl
xor
xor
push
cmpsl
mov
push
pop
cmpsb
lea
push
sbbb
mov
sub
mov
mov
add
int
stos
dec
jge
sub
mov
jge
cmp
ficoms
sbb
xchg
cli
dec
js
jle
pop
pop
mov
dec
fmull
loopne
pop
into
xchg
jns
and
jge
mov
add
add
clc
add
stos
pop
push
mov
lcall
mov
mov
lahf
lret
mov
aas
mov
mov
pop
jns
sbb
and
mov
jae
sti
sbb
es
in
aaa
rcll
adc
addr16
clc
mov
dec
fstl
xchg
dec
adc
pop
movsl
mov
adc
mov
ret
in
xor
sbb
jnp
in
mov
sub
test
into
repz
cmp
pop
pop
adc
rclb
lahf
shll
dec
pop
jb
out
int
mov
std
and
pop
shrb
push
movsl
lds
divl
or
fucomip
popa
enter
xchg
jne
rcrb
pop
nop
pop
mov
insb
iret
int3
push
jmp
mov
loop
and
ds
adc
dec
daa
popf
stos
jmp
cmc
xchg
sahf
jnp
fsubs
mov
xlat
inc
inc
clc
dec
insb
je
cs
sbb
push
movsb
fisubs
daa
out
inc
pop
fsubl
ja
outsb
mov
sbb
sub
pop
add
lea
inc
cwtl
popf
repnz
fucom
jo
sbb
mov
outsb
stos
daa
push
pop
mov
pop
xorl
mov
push
int3
mov
mov
push
cmpb
ss
pop
loopne
jmp
fwait
pop
popf
pushf
pop
hlt
scas
das
jmp
cmp
bound
mov
mov
jb
int
mov
faddl
fwait
or
inc
in
imul
into
insb
add
sub
mov
rorl
testb
xchg
cs
mulb
sub
mov
sub
and
out
jp
cld
mov
das
dec
sbb
faddp
ljmp
fimuls
stos
xchg
mov
pop
ljmp
jg
mov
ss
add
icebp
lea
xor
xchg
dec
jg
push
ret
mov
fs
rolb
mov
popa
ret
cmpb
fxtract
push
adc
inc
std
push
in
pop
mov
mov
xor
or
pop
mov
movsb
cmp
loope
and
mov
enter
sub
or
or
dec
leave
and
divb
pop
test
fcomip
daa
ret
and
push
xor
mov
stos
sarl
ret
push
inc
in
jecxz
sarb
shlb
mov
loop
adc
mov
adc
push
push
aaa
jo
enter
in
pop
cmp
xchg
jmp
xor
sti
cmp
sub
or
push
movsb
clc
lahf
leave
add
rcr
sub
mov
in
in
fmulp
inc
sub
inc
add
mov
loop
sti
jg
cwtl
jmp
mov
repnz
xchg
xor
out
lods
int3
push
ds
sbb
inc
jle
adc
nopl
sub
mov
movsl
ljmp
adc
dec
mov
inc
mov
inc
push
mov
popa
and
sbbb
ficoms
notl
fcomps
jae
ljmp
scas
mov
popa
mov
out
orl
and
cmpsb
cmpsl
fldenv
inc
into
lret
sub
xchg
out
out
popf
lds
add
jnp
adc
enter
xor
nop
inc
imul
and
add
fs
addr16
xchg
pop
icebp
inc
int
push
cmp
adc
movsb
mov
call
mov
dec
cli
inc
cmpsl
mov
mov
inc
inc
jne
push
rep
addr16
or
push
cmp
jo
rol
adc
mov
jo
add
mov
push
pop
roll
adc
iret
call
dec
jp
sbb
call
dec
sbb
push
xor
push
mov
mov
mov
test
imul
mov
loopne
xor
addr16
push
int
push
xlat
jnp
push
lret
mov
dec
sbb
pop
cmc
pushf
xorl
push
push
cmpsb
push
int
bound
jb
and
shrl
cmpsl
push
mov
mov
sbb
cs
dec
pusha
ficomps
add
pop
rclb
and
es
dec
push
mov
lret
cmpsb
xor
andb
stos
out
nop
test
jmp
push
leave
push
insl
lahf
jp
jb
bound
add
std
cmpsl
lds
out
push
cmp
into
in
test
decb
adc
in
rcr
popf
push
push
xlat
in
pushf
iret
shlb
pop
les
mov
mov
adc
divl
xor
mov
popf
cmp
imul
out
sbb
pop
dec
inc
stos
push
sub
das
lods
lahf
mov
push
imul
imul
cmp
mov
dec
sub
jne
rcll
xlat
inc
mov
rol
dec
movsb
cli
lods
imull
jl
clc
push
pop
jae
push
inc
lcall
shll
mov
rcrb
pusha
add
adc
xor
push
out
or
std
outsl
loope
mov
mov
push
insl
sar
std
xor
loopne
add
inc
or
cmp
and
std
rcl
ss
sub
out
inc
and
ret
stc
aaa
jns
test
xchg
stos
cmpsb
pop
xor
bound
push
mov
lods
mov
xor
sub
nop
je
jne
lcall
fisttps
out
push
outsl
loope
mov
push
xchg
xchg
insl
shrb
int
test
add
mov
lcall
ret
das
push
xchg
cltd
add
pop
aas
rorb
xor
lahf
and
lods
adc
add
jne
mov
push
in
imul
push
adc
arpl
jecxz
fdivl
pcmpgtw
lea
or
call
push
sbb
icebp
adc
adc
dec
sub
les
and
les
stc
jp
movsl
scas
jne
add
in
dec
pop
add
push
pop
rcrb
mov
fwait
push
add
jge
es
test
addr16
lea
adc
pushf
enter
stos
fsubl
int
pop
movsl
stc
mov
mov
xchg
mov
jle
cmp
cmp
fdivrl
sbb
push
pushl
mov
xor
or
arpl
sub
mov
and
push
into
adc
sub
mov
xchg
xchg
mov
jmp
push
movsb
jbe
cmc
add
xchg
shll
addb
mov
or
mov
xchg
decb
or
lret
into
push
jne
scas
push
mov
movsb
sbb
xchg
cmp
ret
stos
push
or
lds
pop
push
xchg
cmp
lret
lret
xchg
dec
jae
call
std
ss
and
xlat
ffreep
pop
sti
mov
nop
fidivl
sub
imul
iret
aam
sahf
in
mov
sub
stc
jns
pushf
fcompl
movsb
push
add
dec
pop
scas
lcall
fldt
cmp
out
mov
push
mov
subb
out
mov
mov
cmp
arpl
jne
and
aam
mov
xor
sbb
xor
mov
xchg
loope
mov
inc
inc
cwtl
mov
aad
shlb
pop
mov
cmp
xchg
mov
xlat
ljmp
mov
inc
jo
jp
aad
push
cs
xchg
jmp
push
adc
add
out
ja
fidivrs
aam
sti
jle
ficoms
andl
sub
pop
jae
loope
lock
fidivrl
push
xchg
test
fistpll
stos
mov
sti
ss
xor
mov
inc
mov
pop
add
cmp
mov
cltd
cmp
and
jbe
add
dec
loop
dec
lret
adc
outsb
push
or
outsl
call
daa
and
ds
mov
out
or
add
bound
inc
or
popf
jl
fs
adc
mov
shr
ret
pop
pop
inc
data16
jp
stos
testl
and
lcall
dec
sub
popf
push
xchg
dec
pop
ror
push
fstps
push
aam
jne
lahf
inc
inc
sub
pop
adcb
mov
idivl
enterw
inc
xor
cmpl
add
stos
xchg
cmp
xchg
sbb
insl
dec
int
ret
bound
in
repz
adc
out
lods
dec
mov
push
jb
loopne
jg
push
cmp
or
lock
fs
push
sar
lea
push
cmp
pop
adc
mov
dec
mov
movsl
push
pop
cltd
in
xchg
ret
mov
rolb
cltd
pop
lods
fisubrs
rol
sub
add
sbb
push
xchg
sarb
and
testl
or
dec
push
sub
cmp
add
mov
aas
test
test
xchg
in
pop
or
imull
mov
xor
pop
movsl
das
popa
sahf
adc
aad
lcall
mov
lret
or
mov
xor
push
mov
pop
dec
cmpsl
dec
cmp
std
sub
inc
or
shrl
stc
int3
pop
jnp
sbb
test
pop
cmp
test
pmulhuw
ret
out
mov
mov
mov
mov
jb
fimull
popf
lret
sbb
out
mov
dec
inc
int
fs
jmp
or
xchg
inc
out
mov
jmp
mov
push
sbb
mov
stos
out
xor
push
mov
mov
xchg
ror
mov
sbb
adc
shll
xchg
das
scas
sbb
or
lahf
lret
lcall
pusha
adc
dec
icebp
popa
mov
arpl
popa
ds
sahf
enter
or
pop
and
mov
dec
icebp
shlb
mov
xchg
mov
js
add
in
add
push
sub
push
sbb
daa
rcrb
outsl
stc
arpl
ljmp
adc
scas
movsb
stc
loope
movsl
int
xor
add
ret
xor
data16
jb
popa
adc
or
xor
in
cmp
cmpl
add
fsubl
fbld
cmp
push
cmp
lods
mov
js
loope
push
pop
add
ds
out
shrl
int3
adc
sub
mov
and
lock
sbb
hlt
clc
das
pop
xchg
aam
test
call
das
and
mov
add
jo
cld
jecxz
ljmp
in
dec
call
push
xlat
dec
ror
cs
mov
push
imul
mov
fimull
mov
dec
mov
orb
int
push
mov
dec
mov
xor
ja
sub
and
pop
jbe
xchg
popa
lret
push
das
push
or
xchg
nop
aad
adc
int3
mov
pop
push
or
xchg
xchg
and
adc
jns
sti
lahf
push
repz
jge
cmpsb
cmp
stos
xor
mov
sbb
cltd
xchg
jecxz
or
pop
dec
jo
adc
call
stos
push
jno
es
jo
xor
int3
mov
arpl
add
arpl
arpl
add
dec
aam
jg
negb
rorb
xchg
les
idivl
add
mov
popa
fadd
into
paddsw
stc
xchg
jg
bound
xchg
inc
movsb
sub
push
aam
or
shll
hlt
movsl
inc
popf
push
add
dec
xchg
push
repnz
inc
sbb
shlb
sub
int3
xchg
roll
test
or
jne
fwait
xor
or
adc
clc
lcall
or
mov
lret
test
or
repz
outsl
adcb
pop
test
out
pusha
mov
jae
roll
mov
movsl
jbe
or
mov
stc
adc
fwait
popa
lret
xchg
pushf
inc
testb
adc
cwtl
and
rclb
out
adc
push
loop
fcoml
mov
in
aaa
xor
dec
cmp
js
pop
lds
jl
push
cli
shrb
inc
inc
push
push
adc
mov
es
aad
or
xor
insb
or
sub
sub
into
sbb
jns
fs
lret
mov
jns
aad
xchg
and
cld
scas
inc
jo
aaa
in
inc
add
cli
and
and
pop
sub
jne
shlb
add
scas
test
dec
inc
in
jbe
insb
xor
test
ljmp
adc
jae
rcll
fistpl
mov
repnz
and
lea
jg
rorl
and
jae
pop
ficompl
fldcw
cs
pop
mov
scas
popf
xor
cltd
jge
mov
mov
lahf
fdivr
lods
lods
shlb
sbb
jg
int
jno
dec
mov
and
mul
cmp
daa
js
push
mov
jbe
daa
pop
dec
mov
adc
push
subl
sub
aas
pop
pusha
add
insl
sub
push
pop
outsl
sbb
fdivrs
ficompl
lret
push
lock
daa
pop
sarl
mov
scas
inc
mov
cmp
or
or
dec
fisttps
push
pop
push
pop
sarb
cmp
hlt
insb
les
and
push
and
jno
push
or
out
ja
push
or
test
mov
fcoml
fdecstp
sti
stc
inc
sbb
out
push
add
sbb
push
lea
jp
aam
push
mov
dec
xor
pusha
cmpsl
outsb
ficomps
sub
push
push
iret
sbb
mov
push
mov
fsubrl
push
mov
xor
outsb
add
loop
out
dec
push
je
shrb
cmp
add
mov
mov
sbb
cmp
les
dec
adc
inc
and
daa
loope
sub
into
clc
pop
xor
pusha
mov
inc
in
push
jae
adc
addr16
dec
xchg
dec
inc
loope
mov
mov
add
pop
push
and
mov
xor
fistpl
and
xor
jne
xchg
es
inc
mov
and
bound
sarb
xchg
xchg
test
ss
into
inc
in
dec
dec
jno
mov
cli
sub
or
test
inc
fstl
jge
lds
xor
stos
sbb
pusha
js
mov
movsb
pop
mov
insl
push
in
je
in
jb
push
stc
dec
sbb
adc
xlat
movsb
adc
add
push
out
aaa
xchg
into
or
cltd
xchg
jle
mov
mov
ret
psrlw
out
shrl
cmpsl
nop/reserved
dec
xchg
pop
pop
pop
pop
rorl
test
or
inc
xchg
nop
in
push
inc
adcl
rolb
push
add
sbb
lods
jne
testl
inc
sub
push
add
fst
pop
imul
lret
fxch
or
ret
shrl
push
cmp
push
loope
ds
sahf
dec
ljmp
data16
rcr
imul
adc
fmulp
cmpsl
lcall
cmpsb
dec
cmp
inc
shlb
xor
andb
inc
mov
call
mov
mov
mov
sti
shll
fwait
mov
cmp
stc
jno
std
lret
adc
mov
sarl
dec
add
dec
bound
push
mul
push
ds
pop
mov
in
or
xchg
fcomps
mov
fdivrs
out
pop
pop
bswap
aas
lcall
jl
mov
jns
xor
lcall
idivb
out
adc
das
cltd
or
out
mov
lds
das
mov
or
call
or
outsl
icebp
mov
cltd
int3
mov
sub
xchg
or
scas
out
pusha
or
push
adc
mov
lea
inc
and
aad
fcoms
decb
int
add
lret
push
sbb
and
repz
jl
jp
and
sbb
jmp
push
loopne
mov
test
jmp
mov
int3
mov
bound
add
mov
push
sub
test
insl
xor
sub
xor
subb
mov
imul
fisttpl
add
ljmp
insb
enter
mov
out
lret
adc
dec
jo
add
cmp
mov
stos
jbe
frstor
mov
mov
icebp
sbbb
sbb
pop
mov
lahf
les
adc
cli
xchg
and
cwtl
add
sub
leave
adc
insb
stc
push
cmp
jno
mov
mov
out
jecxz
xchg
in
pop
cmc
and
popf
xor
cld
jecxz
cltd
jae
inc
push
xchg
in
jg
dec
cmpsl
shl
and
adc
cltd
ds
jne
mov
and
imul
push
mov
pusha
scas
hlt
jge
cmp
nop
mov
mov
fistpl
jg
into
leave
mov
std
jl
mov
je
scas
inc
dec
into
pop
das
push
pop
ret
lcall
shll
or
inc
or
mov
inc
sbb
and
ds
sbb
xor
pop
test
push
and
adc
nop
in
cs
in
jnp
inc
pop
cltd
imull
dec
call
mov
int3
xor
mov
sbb
jae
pop
push
push
or
xor
push
ret
push
mov
xchg
lret
sub
jecxz
mov
pop
les
adc
jl
add
je
bound
sbb
mov
js
cli
gs
loop
adc
dec
pop
out
outsb
or
mov
or
test
pop
sub
lea
and
ljmp
jmp
test
fwait
lahf
cltd
xchg
lods
out
mov
aaa
aam
and
push
orb
bound
mov
ror
push
mov
cwtl
jecxz
dec
dec
outsb
cmp
arpl
aas
cmp
jp
insb
or
dec
mov
dec
cmp
in
dec
mov
fsubl
and
jo
xchg
cmp
push
dec
add
imul
or
lods
fistps
gs
rcr
jo
cmp
imul
pop
sub
push
push
scas
stc
add
imul
adc
into
sti
ljmp
fdivl
mov
and
mov
push
pop
push
cmp
ss
jno
lods
mov
clc
icebp
movsb
fwait
adcb
popf
xor
shll
movsl
add
shlb
inc
pop
lahf
xchg
ja
jmp
xor
mov
add
lahf
shr
jb
outsl
mov
jnp
popa
das
out
dec
xchg
push
sub
mov
push
aad
je
pop
xchg
aaa
and
dec
push
cmp
out
mov
fistpll
out
insb
cmp
loopne
lods
mov
add
orl
mov
xlat
pop
adc
sbb
outsb
jle
or
arpl
mov
aad
mov
xchg
mov
jbe
data16
fbld
hlt
aam
xlat
xchg
in
sub
mov
int
rcll
shrl
jns
cwtl
push
aad
daa
mov
mov
inc
pop
int3
ljmp
and
or
sbb
mov
lret
jns
ljmp
lds
int3
xchg
mov
xor
hlt
dec
shrl
mov
pushf
out
sbb
adc
int
xchg
out
jge
nop
jo
push
mov
and
pusha
mov
sub
add
add
fsubr
lcall
xchg
mov
cmp
lods
mov
cmp
mov
sti
movsb
or
sub
loop
sub
fdivrs
scas
xor
mov
add
pushf
push
stc
idivb
mov
lea
cmp
xor
shrl
dec
jmp
aam
xor
ss
out
jo
inc
shll
inc
imul
fsubp
mov
cmc
mov
arpl
aaa
pop
sbb
hlt
mov
mov
mov
lcall
lcall
sti
lods
call
cmpsb
sarl
repnz
jb
cmpsl
ja
ds
cwtl
and
stos
sub
or
cmp
aas
inc
shrl
adc
shll
inc
and
sub
sbb
inc
jne
add
out
push
int3
sub
adc
std
push
lods
add
and
and
push
mov
jge
shlb
cmp
dec
push
in
rolb
gs
ljmp
or
jge
push
shll
lods
xor
mov
mov
hlt
or
pop
fwait
pushf
insb
mov
into
jb
jo
pop
sub
push
outsb
repz
lods
mov
pop
push
pop
xor
test
dec
std
dec
rolb
pop
lret
cmp
mov
xor
inc
inc
jl
hlt
push
push
cmpsb
adc
inc
cld
lds
xchg
xor
pop
sbb
cs
mov
cltd
sti
repnz
push
mov
xor
lahf
push
out
mov
inc
and
leave
pusha
out
nop
add
xchg
pop
jecxz
nop
jo
shll
push
mov
sub
dec
adc
xlat
mov
stc
mov
push
push
movsl
cmp
adc
and
xor
pop
into
push
xchg
dec
and
inc
or
fmuls
repz
roll
fcom
and
cmp
mov
insl
out
bnd
imul
lahf
sti
pop
addr16
fadds
imul
pop
push
adc
test
dec
xchg
test
adc
adc
movl
test
fdivl
es
xor
push
out
pop
jb
mov
fsubrs
or
subb
xchg
loopne
aaa
adc
sub
push
mov
pop
pop
mov
cld
cmp
or
into
push
enter
addl
push
jecxz
sub
into
aad
mov
aam
jl
imul
sbb
jp
loope
cmp
inc
and
shlb
mov
int3
push
or
in
jmp
ret
adc
jno
scas
or
xchg
mov
jmp
ret
inc
out
ja
inc
mov
add
lahf
ss
dec
test
pushl
aaa
push
call
xlat
out
push
xor
gs
jno
inc
std
fisubrs
mov
cmp
ret
inc
sbb
bound
aaa
xor
jg
sbb
xchg
data16
test
sysret
push
mov
mov
push
fwait
sub
jl
jno
adc
fabs
jp
xchg
add
es
js
into
mov
or
adc
jae
cltd
fiaddl
jb
push
je
divl
nop
mov
repnz
mov
divb
repnz
cmc
cmp
xor
dec
push
imul
inc
js
mov
cltd
decb
xchg
mov
stc
ret
adc
inc
in
loopne
sub
inc
movsl
sbb
jno
xchg
jns
and
xor
nop
nop
jmp
mov
cmpsb
arpl
pop
arpl
mov
sbb
jg
xchg
mov
push
subb
in
push
and
jb
jae
lock
test
xchg
or
test
pop
fwait
sub
xchg
pop
rcll
sbb
sbb
ljmp
push
jl
gs
adcb
std
or
add
mov
icebp
int
push
sub
xor
cmp
lock
call
add
sub
jno
pop
cmp
ds
addr16
and
cmp
push
pop
fsubl
and
std
outsl
insl
or
mov
pop
sub
sbb
cltd
mov
sub
hlt
xor
add
dec
jne
jno
mov
mov
lods
mov
xchg
or
bound
add
sub
fs
test
jae
xor
scas
popf
xor
fstl
inc
ds
test
mov
vandnps
xor
loope
sbb
add
out
fldenv
or
mov
repnz
sbb
loopne
mov
and
sti
add
push
sub
dec
aad
rcrb
lds
loopne
jecxz
cmp
mov
and
pop
lcall
push
jge
scas
das
push
lods
push
mov
and
imul
sbb
data16
push
push
mov
dec
jge
pop
out
pop
stc
inc
cltd
jle
clc
fistpll
inc
pop
cld
jns
xchg
or
jno
data16
mov
jnp
lcall
xor
mov
xor
xchg
fwait
les
jno
stos
pop
lret
mov
std
test
cmpsb
xchg
sbbb
mov
lea
cli
or
int
sub
cmpxchg
loope
iret
pop
popa
fsub
nop
mov
cmp
notb
adc
jno
iret
scas
das
pushw
lea
xchg
cmpl
ds
cld
sahf
jo
fidivrl
fisttps
pop
adc
sbb
cli
mov
rclb
mov
mov
dec
inc
mov
cmp
fcompl
dec
xor
loop
sub
fldl
in
mov
je
push
test
add
adc
mov
lea
adcl
stc
adc
setno
imul
jmp
mov
sub
sub
das
mov
out
lods
push
lock
add
xchg
and
stos
clc
cmp
push
loope
or
pop
fidivs
je
lret
cmp
mov
fcomip
inc
pop
dec
cmpsb
mov
mov
andl
jl
adc
mov
xchg
sbb
stc
sub
idivb
inc
xor
jae
xor
cmp
cli
mov
xlat
iret
add
ljmp
mov
mov
inc
adc
int
jb
mov
and
loopne
pop
jmp
subl
fsts
mov
cmp
lss
repnz
sub
ficomps
inc
and
mov
add
sub
shl
cs
xchg
cmpl
cmpsl
lods
testb
fimuls
ds
dec
push
push
lods
leave
cmp
cmpsl
lds
inc
aad
xor
inc
adc
xchg
bound
clc
sbb
stos
mov
mov
mov
mov
pop
adc
pop
ror
sbbl
shrl
fsub
pop
sar
aaa
mov
cmpsb
test
movsl
or
pop
mov
dec
and
cmc
adc
clc
stos
sbb
mov
in
ljmp
popa
jb
jno
and
sbb
stos
or
test
enter
rorb
or
xlat
jge
shrd
nop
add
mov
int
push
cmp
movl
sub
dec
call
repnz
jne
adc
lods
je
imul
insl
aas
test
cltd
out
mov
xchg
int
xlat
addr16
jb
imulb
jnp
lret
push
jp
je
pop
lret
mov
rorl
cmp
jg
in
ja
leave
mov
test
mov
icebp
imul
jp
lds
xchg
dec
scas
and
sahf
mov
fstl
mov
fchs
test
out
daa
jl
push
inc
jecxz
aas
add
adc
imul
mov
xchg
push
sub
pop
loope
je
lods
xchg
stos
mov
mov
or
adc
push
movsb
das
cmp
ss
or
mov
pop
push
adc
sti
loopne
or
mov
adc
imul
inc
and
inc
pop
shr
out
call
pushf
inc
push
adc
lods
std
mov
bound
outsl
mov
cmpsl
js
sbb
das
mov
fidivrl
jae
fsubs
rol
xor
sbb
sahf
js
dec
pop
jo
ss
add
sbb
xor
add
sub
sub
shlb
fs
sub
push
jnp
lea
xor
push
or
rorb
loope
and
cld
jp
cmp
out
cltd
ficoml
xchg
imull
xor
clc
fidivl
aaa
jb
fdivl
lret
mov
lret
iret
pop
ret
imul
and
test
enter
sub
movsb
int3
dec
pop
push
ss
xchg
mov
insl
out
jns
addr16
rcl
adc
mov
test
or
lods
aaa
dec
int
mov
ror
add
inc
in
cld
rolb
loop
xchg
mov
inc
pop
decb
jmp
adc
arpl
xchg
int3
test
mov
sbb
fmul
iret
rolb
dec
test
insb
xchg
or
clc
mov
cmp
cmpsb
sub
loop
xchg
aas
gs
stos
fidivs
aam
dec
xchg
sbb
mov
inc
push
cs
xchg
mov
mov
cmp
xchg
and
mov
xor
add
jb
int3
inc
mov
sbb
sahf
pop
hlt
xchg
pop
xchg
or
or
jl
orb
or
or
movsl
cmp
test
aas
arpl
decb
adc
and
std
pop
jb
in
sbbl
les
aad
inc
stc
cmp
sub
in
xor
notl
ds
xor
mov
neg
bound
loope
pusha
mov
or
add
imul
rcl
fsubp
jle
sbb
adcb
or
movsl
ffreep
pusha
mov
inc
shrl
test
test
rcrb
add
cmpsl
cmp
jne
add
add
daa
scas
sbb
jg
sub
fs
jle
jns
pop
cli
test
std
xor
xor
add
push
incl
rclb
jnp
cmp
xor
pop
icebp
adc
pop
xchg
and
push
inc
adc
bound
aas
xchg
cmp
mov
xchg
div
fisubrl
lea
xor
lahf
negl
daa
adcb
and
jl
push
pop
stc
mov
ds
mov
cmp
leave
dec
aas
sbb
mov
push
vmovhps
dec
add
mov
cmp
cmp
inc
xchg
add
sbb
xchg
mov
adc
inc
lea
insl
add
lret
mov
add
rorb
sub
pusha
aaa
pop
scas
lret
xor
inc
mov
add
sbb
fistpl
stc
loopne
push
sub
jg
xchg
jb
xor
mov
gs
mov
mov
xchg
jmp
mov
mov
adc
inc
mov
leave
sbb
ret
xchg
mov
lahf
mov
inc
ja
lea
inc
adc
mov
fdivl
pop
cmpsl
mov
jle
and
pushf
int
scas
xor
test
hlt
jle
mov
pop
sub
pop
and
shlb
adc
dec
into
dec
jbe
dec
fcmovb
imul
mov
ret
insl
loope
jmp
orb
mov
neg
or
gs
jle
adc
xchg
movsl
addr16
lret
push
cltd
xor
mov
inc
ss
mov
xchg
and
lea
out
push
mov
lcall
push
mov
dec
xchg
inc
nop
js
dec
int3
int
jbe
sbb
movsb
xchg
sbb
jl
lcall
xchg
fsubr
mov
out
cmp
dec
rcrl
mov
dec
loop
jmp
xchg
sub
aad
push
cmp
lahf
cmp
mov
cwtl
movsl
mov
aaa
repz
enter
fs
and
cmc
fwait
pop
es
iret
sbb
add
andb
mov
sub
jp
mov
jae
sub
nop
cmp
stos
cltd
lds
jmp
xchg
xchg
pushf
mov
pusha
cmp
inc
ret
mov
repnz
int3
cmpsb
dec
pop
out
sbb
push
scas
cli
sbb
xchg
mov
dec
push
jae
outsl
jl
push
stos
int3
fiadds
jg
xchg
or
inc
call
lds
dec
scas
or
fiadds
ret
daa
mov
lods
xchg
add
mov
js
lock
jb
ret
mov
xchg
test
das
fcompl
sti
lods
je
shl
add
sbb
dec
ss
mov
jecxz
jae
inc
mov
ds
lods
push
adc
jbe
insb
jno
mov
je
shlb
add
aas
sub
stos
jg
jb
dec
shr
rcr
outsl
inc
adc
push
out
mov
mov
dec
push
jmp
imul
lods
mov
arpl
loop
stos
adc
mov
inc
mov
push
jp
scas
xchg
adc
outsl
out
mov
mov
or
inc
sub
xchg
insl
inc
pop
testb
sbb
test
mov
push
imul
int3
mov
mov
arpl
movsl
hlt
xchg
scas
dec
pop
xchg
fs
mov
jle
fsubr
pop
bound
iret
pop
sub
push
jno
inc
ret
addr16
mov
outsl
jg
lret
test
inc
cld
jnp
mov
in
ss
xchg
out
push
or
loopne
out
scas
clc
flds
fcomp
push
lods
jae
inc
lret
js
div
test
ss
push
int
fsub
cmc
or
nop
xor
fcomps
insl
or
mov
mov
adc
xor
mov
out
test
pusha
and
loopne
les
dec
int
scas
jecxz
pop
add
dec
jle
jge
push
mov
push
ljmp
jmp
in
jmp
jecxz
test
cmp
pop
fdivr
stc
sbb
insl
sbb
aam
addr16
sub
rcrb
mov
nop
and
push
dec
imul
cmp
andb
out
jmp
jbe
in
in
repz
jno
inc
mov
outsl
imul
fstps
loop
jae
std
and
pop
out
adc
pop
mov
cmp
mov
nop
lahf
lods
gs
push
cmp
call
push
mov
sub
sarl
push
cmp
lock
push
addl
xchg
jmp
and
push
push
inc
pop
and
push
enter
loop
fdiv
mov
jns
cmpsb
and
add
aas
ss
sbb
mov
and
dec
ds
pop
int
cmp
mov
push
dec
aam
fldt
les
out
pop
sub
fcmovnbe
lock
lods
or
scas
aaa
sub
movsl
ret
test
cmp
push
lea
push
jae
sbb
cmp
add
ds
xchg
aas
mov
fs
adc
dec
jmp
inc
and
sub
fdiv
xchg
dec
dec
inc
push
sbb
das
orl
or
pop
push
stc
cmpsl
dec
jg
add
jmp
cltd
push
inc
mov
and
shr
pop
movsb
mov
dec
jb
adc
sbb
lock
xor
stc
jno
cmp
fists
xor
lea
mov
mov
rcrl
lds
mov
jmp
cmpsl
aad
or
sub
lahf
mov
dec
inc
jne
pop
fcoms
push
push
push
xchg
or
loopne
jmp
push
out
out
xchg
insl
jo
movb
rdpmc
sub
jp
idiv
ljmp
ffreep
push
stos
fidivrl
into
inc
in
sub
jns
dec
leave
test
icebp
bnd
rcrl
sahf
inc
cmp
and
inc
fcom
cmp
mov
cld
jns
clc
fcmovnu
mov
pop
cmpl
pop
mov
add
ljmp
dec
hlt
adc
add
or
sbb
aad
insl
stos
inc
xchg
jae
dec
cmp
out
roll
jl
push
pop
push
movsl
jns
xor
sub
jae
iret
psubsb
pusha
cmp
sbb
mov
in
push
xchg
scas
aad
dec
fs
pop
hlt
pop
or
push
test
lea
sub
in
loope
add
jle
inc
or
add
das
or
jge
hlt
sbb
xchg
shll
sahf
dec
xchg
addl
xlat
mov
stc
jb
cltd
les
mov
fcomps
roll
ret
cmpsl
dec
das
fidivs
out
sub
lret
xchg
out
mov
nop
ret
jle
pop
and
inc
add
jg
pop
jg
addr16
dec
pop
xor
jle
scas
jo
dec
add
fstl
popa
mov
mov
mov
jle
data16
lds
pop
add
ljmp
movsl
popf
sub
add
or
cs
mov
jge
push
push
js
es
and
js
pop
imul
add
leave
inc
lock
out
out
and
aad
nop
pushf
ret
xchg
jecxz
pop
shll
fisubs
xor
notl
pop
aas
sti
adcl
daa
dec
xchg
scas
inc
push
cwtl
mov
inc
movl
out
cmc
mov
cltd
movsl
sub
dec
aam
pop
fdivrp
sub
shll
and
in
adc
xchg
adc
jg
xbegin
pop
sub
dec
movsb
sub
or
addr16
adc
and
push
adc
sbb
xchg
cmp
aaa
js
xor
fisttpl
std
leave
push
jp
xor
std
sub
rclb
fidivrs
sub
gs
and
jge
push
mov
test
jl
pop
xor
xor
insb
adc
scas
fdiv
arpl
xchg
xor
push
pushf
test
fisubs
jo
pushf
bound
outsb
add
and
dec
add
jmp
dec
dec
ret
xchg
sub
int3
aad
into
push
sahf
shlb
add
decl
lcall
in
cltd
adc
inc
jns
jbe
out
fs
jg
xchg
xor
fmuls
clc
nop
jecxz
iret
inc
sbb
jmp
fldl
add
fcoms
xchg
jne
add
xlat
push
movsl
xor
fstl
lret
adc
test
movsl
add
test
dec
dec
adc
popa
push
push
test
notl
or
sub
aam
test
aaa
xchg
repz
mov
push
or
jle
mulb
sub
mov
ss
dec
mov
in
and
cld
push
icebp
and
in
push
jns
or
mov
sarl
adc
inc
stc
or
push
mov
imul
xchg
xchg
aaa
and
xchg
mov
leave
inc
dec
mov
xor
adc
loope
js
inc
test
inc
sarb
pop
mov
loop
test
aas
add
es
scas
es
nop
arpl
mov
lds
popf
out
repnz
or
cli
test
aaa
loopne
push
cmp
shl
jle
sub
lahf
cmp
cmp
outsb
imul
je
jns
push
icebp
jne
pop
ljmp
es
pop
push
jge
push
leave
test
pop
sub
cmp
mov
pusha
aad
jg
jp
jmp
insl
mov
nop
stos
mov
mov
jp
jbe
xchg
jns
aas
adc
insb
das
pop
cmp
aaa
add
loop
push
add
cmpb
push
and
insl
mov
je
stc
jno
lret
das
cs
add
inc
and
leave
mov
std
push
ret
cs
jg
mov
clc
into
arpl
jge
jns
add
shrb
outsl
mov
or
xor
arpl
movsb
mul
fwait
mov
popa
iret
and
adc
dec
xchg
sub
sub
dec
pop
subb
jmp
adc
and
hlt
ret
xlat
out
out
aas
mov
js
cmp
and
mov
mov
fucomip
stc
ficoms
push
xorb
lods
pop
test
popa
ret
xor
dec
lods
in
leave
leave
pop
xchg
mov
cltd
xchg
ret
inc
cmp
out
mov
sti
test
mov
out
lret
inc
mov
jle
mov
aam
xchg
aas
cltd
or
pop
pop
icebp
jmp
push
leave
nop
mov
ss
inc
fsubs
rorb
push
ljmp
mov
sbb
push
repz
push
fildll
aas
xor
cmc
lret
xchg
xchg
mov
xor
les
fists
stos
cmp
mov
push
cmp
int3
mov
fdivs
push
sub
cld
fsubs
test
mov
adc
mov
in
inc
mov
cli
outsb
mov
int3
dec
pop
pop
cmpl
or
icebp
or
lds
mov
fs
jle
push
ss
aas
push
jne
adc
call
pop
add
cltd
das
xor
push
push
bnd
lods
daa
scas
jl
xchg
test
push
and
clc
push
fmul
nop
cmpsl
in
inc
dec
add
test
jmp
loope
xchg
pop
inc
push
inc
add
dec
repnz
in
mov
lahf
call
clc
imul
hlt
cmp
or
out
inc
shl
xchg
lea
cmpsl
cmpsb
cmp
in
xor
mov
jnp
mov
jo
aad
sti
push
cmp
add
sahf
cmpsb
faddp
inc
add
aad
cmp
inc
pop
push
xor
sbb
fisubs
movsb
ja
fnstcw
sarb
xor
rcr
xor
jnp
sub
pop
jge
enter
stos
fs
jo
or
pusha
inc
or
shrb
sahf
shlb
ss
int3
ja
mov
movsb
or
cmpsl
push
arpl
adc
sbb
and
clc
mov
flds
and
out
mov
mov
lods
cwtl
xchg
xchg
out
pop
sbb
je
int
dec
bound
insb
scas
int
dec
push
or
pop
jge
adc
xor
popa
ja
addr16
gs
fiadds
cmp
add
pushf
lret
cmpsl
add
shr
cmp
adc
mov
ljmp
outsb
arpl
add
in
lds
loope
dec
rcll
shll
mov
mov
popf
out
popa
movsl
xchg
sub
test
pop
mov
call
mov
inc
push
adc
ss
lcall
sahf
push
mov
lret
or
and
sbb
insb
lcall
mov
sbb
insl
jne
in
jl
fnstenv
ja
push
mov
call
out
mov
jl
inc
pusha
imulb
pop
sub
mov
push
ret
sbb
lcall
test
popf
frstor
call
scas
loop
lock
inc
sahf
aad
dec
push
or
icebp
push
cmpb
xchg
lret
ss
outsl
pop
add
sub
scas
push
mov
sbb
mov
roll
lods
pushf
mov
mov
and
mov
loop
mov
dec
in
into
cmpsl
std
mov
mov
inc
loope
stc
movsb
int3
jne
xchg
sbb
cld
nop
jbe
mov
lahf
sub
scas
sub
ret
ss
into
stos
aas
pop
xchg
out
arpl
inc
fdivrp
cltd
je,pt
ja
mov
xorl
mov
sbb
popa
mov
in
cmp
dec
imul
lret
sbbl
into
jne
mov
jo
xchg
rcr
enter
xor
add
ss
test
jmp
mov
pop
mov
ficomps
or
idivl
mov
out
adc
movsl
pop
ret
jae
mov
xchg
mov
jge
scas
addr16
add
inc
loopew
xchg
popf
xor
jmp
arpl
out
sub
stos
cmc
sahf
or
adcb
shl
lods
cmp
adc
outsb
pop
cwtl
in
mov
mov
push
xor
jecxz
jbe
sahf
fs
in
bound
scas
or
movsl
add
dec
repnz
jecxz
out
xor
xor
sti
dec
out
jl
xchg
enter
loope
int
aas
mov
repz
mov
int
enter
jmp
test
jle
repnz
or
std
push
sbb
sbb
push
pop
push
in
lds
out
xor
hlt
xchg
imul
push
loop
xchg
inc
stos
pop
rcrb
ret
xchg
jmp
add
adc
xor
and
adc
stos
xchg
mov
cli
int3
sbb
loopne
ljmp
push
frstor
lods
add
shlb
data16
jge
mov
ret
lcall
fsubrl
ret
pop
call
addr16
lret
dec
jmp
sbb
pop
xor
adc
shr
lahf
pusha
adc
pop
and
iret
lret
mov
jl
xor
fwait
cmovb
jecxz
xchg
inc
loop
pusha
pop
add
or
xor
adc
sub
ret
cmpsb
stos
push
sbb
mov
push
test
hlt
jo
mull
adc
ret
fldenv
lds
ds
mov
in
fimull
nop
movsb
cmp
pop
and
pop
cs
bound
lahf
xor
push
gs
add
loope
jno
ljmp
ljmp
or
dec
outsb
roll
pop
fwait
addl
testb
xchg
rcr
jns
adc
loopne
add
test
jbe
inc
adc
popa
cld
xchg
mov
movsb
and
sti
data16
sub
sbb
test
xor
rcll
and
jp
dec
jbe
iret
pop
arpl
mov
dec
xchg
sbb
data16
test
adc
or
cmpsl
pop
inc
test
popf
pop
fisttps
add
add
or
push
mov
add
dec
or
lret
add
jp
in
fstpl
or
pop
ja
cmp
mov
sbb
jmp
sahf
mov
or
leave
clc
or
adcl
adc
pop
jbe
leave
andps
inc
mov
xchg
mov
mov
push
mov
adc
icebp
outsl
jb
jl
push
roll
call
sub
scas
bound
repz
clc
aaa
jge
cld
ljmp
cld
js
xchg
sbb
jl
daa
sub
mov
pop
kmovw
sti
popa
out
imul
subl
pop
sbb
test
pushf
lea
xchg
lods
inc
jecxz
push
enter
and
sub
test
jo
sbb
addr16
movsb
pop
cs
and
inc
test
and
cmp
mov
ret
mov
xchg
lods
jno
enter
call
jmp
scas
ljmp
xor
lret
icebp
repnz
cld
ret
jmp
jmp
mov
aad
mov
mov
and
xlat
xchg
test
and
and
pusha
das
rorl
movl
insb
mov
iret
sub
movsl
cmc
cmc
rcrb
aam
adc
and
out
xchg
shll
xor
jne
jo
scas
inc
mov
nop
popf
inc
cmp
jle
test
pop
rol
stc
adc
push
jmp
lods
mov
stos
add
ljmp
xor
test
mov
mov
mov
imul
inc
lahf
xor
mov
mov
cmp
faddl
imull
aas
mov
xchg
lods
dec
ljmp
ds
sbb
das
loopne
pop
lea
insl
mov
lcall
fstpt
lods
ja
inc
and
and
and
xor
inc
out
adc
push
sbb
int
mov
adc
inc
jo
mov
pop
xchg
cmc
inc
or
jbe
inc
add
cmc
repnz
shl
cmp
cltd
orb
bound
push
xchg
popa
or
mov
scas
enter
repnz
jge
dec
popf
jns
pushf
insl
xor
loopne
test
pop
out
popf
icebp
pop
into
std
push
mov
fstl
jnp
roll
lcall
jne
sub
vmaxps
test
and
into
xor
add
adc
pusha
jnp
add
push
dec
pop
mov
mov
call
xor
negl
rcrb
addl
lahf
cwtl
cli
xchg
xchg
xor
fxch
add
jne,pt
popa
inc
jle
ret
push
inc
ds
mov
or
daa
aam
pop
fadds
je
push
ss
push
pop
inc
dec
push
movsb
jg
stc
add
xchg
and
inc
jns
xor
popl
int3
jne
mov
mov
dec
mov
cld
insl
test
sti
push
arpl
std
es
cmp
aad
sub
sub
push
cmp
outsl
cmc
movsl
in
mov
sub
jge
call
dec
dec
sahf
jae
adc
lret
cwtl
pop
loopne
push
mov
xor
js
dec
fwait
clc
test
sub
call
int
mov
pop
xchg
int3
or
xchg
sbb
lds
sbb
imul
pop
or
xor
nop
shll
pop
stos
inc
mov
or
leave
dec
push
lock
hlt
or
sbbb
das
sahf
imul
adc
ljmp
inc
jp
pop
inc
push
rolb
xchg
xchg
xor
shl
stos
sbb
rcrl
into
sub
shrb
sbbb
aas
xchg
pop
adc
jge
mov
mov
jnp
cwtl
cs
aad
std
jo
aam
lea
test
in
sar
sbb
push
push
mov
or
or
adc
xchg
mov
pop
sbb
jl
lahf
setno
ja
ljmp
jb
movsl
push
xchg
sub
and
std
sets
mov
outsl
adc
bound
adc
jmp
xor
call
aas
or
rcrl
mov
in
icebp
cmc
insb
lret
nop
rolb
jne
mov
andb
and
stos
pop
cmpl
stos
inc
popa
imul
sbb
aam
inc
cli
in
dec
inc
aas
cmpsb
jae
and
leave
dec
aam
jg
fnstcw
mov
mov
gs
push
scas
std
xchg
dec
pop
xchg
rcrb
pop
add
push
rclb
lret
pop
leave
adc
jge
dec
pop
cmpsl
mov
xor
repz
jae
sbb
pop
xchg
inc
push
shrb
cs
inc
mov
into
les
movsb
and
fmulp
add
mov
fwait
nop
mov
lock
mov
push
dec
push
mov
test
fcomi
mov
xorb
sti
lret
xchg
dec
stos
jb
push
cld
sbb
imul
fdivl
mov
mov
pop
lcall
loop
aas
lea
incl
mov
cmp
lods
push
outsb
mov
orl
mov
mov
adc
ret
mov
fiadds
test
ss
dec
enter
lods
xor
std
movsb
add
pop
sub
arpl
insl
jb
ja
loopne
nop
fs
and
lret
push
xchg
cmp
cmp
insl
mov
xchg
insb
aad
mov
xchg
pop
call
or
jae
jecxz
aam
int3
jle
sahf
sub
shlb
pusha
inc
and
pop
jp
cld
xchg
xchg
fsubr
leave
cmpsl
sbb
sbb
lret
icebp
jle
insb
mov
flds
sahf
cmpsl
daa
mov
cmc
in
fcoml
xlat
sbbb
rolb
dec
imul
pop
inc
sub
js
xlat
or
std
lock
sti
addb
xchg
imulb
xor
xchg
stc
ss
sub
adc
fdivp
xchg
into
rcrl
dec
lods
mov
cmp
stos
mov
sub
out
push
fistl
icebp
push
aaa
mov
aas
fisubrs
popf
ja
cmpsl
inc
sub
fisttpl
push
pop
mov
jno
lods
mov
out
cli
outsl
jecxz
mov
mov
push
pop
sbb
sahf
stc
xor
testb
mov
sub
test
inc
pop
push
dec
inc
lret
in
mov
and
mov
and
popf
add
aam
mov
xchg
aad
cmpsl
mov
subb
add
pop
dec
mov
mov
dec
lea
hlt
xchg
hlt
lret
fldl
push
dec
jecxz,pn
cmpsl
out
or
or
int
cld
insb
jge
addr16
in
pushf
xor
icebp
cmp
pop
int3
in
add
pusha
pop
adc
pop
push
psubusb
inc
mov
orl
add
sub
jl
cli
rolb
popa
and
mov
mov
icebp
xchg
loop
push
xlat
arpl
inc
pusha
sbb
pop
or
and
or
fnstcw
aas
aad
pushf
cmp
lds
aam
xchg
orb
cmpsb
in
and
add
or
std
push
xor
push
nop
or
js
and
in
xchg
mov
sub
aad
sub
adc
add
sbb
mov
push
cld
cli
das
jne
repz
and
jecxz
cmpsl
push
mov
sbb
bound
sub
mov
dec
push
pop
xchg
xor
inc
in
xchg
cmp
push
sbb
movsb
jo
nop
mov
pop
hlt
jl
idiv
bound
mov
int
ret
pop
insl
or
adc
xor
and
jp
mov
xor
aad
jl
add
iret
ja
int
sbb
dec
movsl
sbb
int
dec
nop
mov
nop
sbb
cmp
loope
xchg
cld
adc
add
push
and
pop
hlt
mov
jb
mov
mov
and
adc
cltd
mov
movb
aam
repz
xor
jbe
ds
dec
adc
sbb
out
jno
sti
inc
clc
mov
insb
adc
dec
cld
mov
fucomp
pop
jg
les
cmpb
test
lcall
mov
les
in
call
pop
test
lock
stos
inc
pop
fsubl
dec
mov
add
lcall
inc
es
sbb
mov
pop
pop
test
shll
fsub
outsb
jo
add
movsl
mov
adc
pop
ds
idivb
lahf
je
xchg
movsb
ja
test
out
addr16
cmp
outsl
push
jbe
adc
or
xchg
movsb
inc
jno
dec
out
pushf
scas
insl
lret
pusha
mov
pop
push
or
insb
bound
in
jae
scas
shlb
inc
xor
fsubl
inc
shrl
lahf
repnz
mov
sbb
jmp
pop
imul
xor
movups
inc
inc
xchg
cmp
add
adc
pop
and
ret
mov
pop
or
and
push
mov
cmp
push
je
rcl
add
lret
mov
loop
or
loope
jecxz
mov
or
jns
mov
xchg
cs
mov
xchg
shrb
clc
sbb
sarl
out
add
cmp
rorl
mov
xchg
mov
xor
enter
and
push
add
fwait
pop
push
test
rol
aaa
imul
fisttpl
mov
and
mov
mov
jne
hlt
sahf
xor
cmpsb
inc
jmp
xchg
es
cld
aaa
cmc
ret
add
or
ret
mov
cmpsl
cwtl
xchg
pop
fbstp
jge
push
ss
adc
xchg
sub
push
cmp
mov
repz
sub
roll
lret
shll
loope
push
push
fdivr
in
inc
adc
or
scas
and
push
jge
jle
in
mov
stos
mov
or
outsl
int
or
js
pop
and
call
scas
divl
lock
sahf
jl
mov
cmp
aam
mov
fsubr
or
movsl
int
rol
fsts
cmp
jg
subl
loope
insl
jo
mov
and
mov
jl
pop
cltd
lcall
mov
lock
xchg
stc
lret
fstl
sub
ret
xchg
xor
xor
pop
hlt
xor
cmp
xchg
ret
mov
testb
js
adc
testl
mov
jne
adc
iret
push
cltd
push
bound
cmp
xor
pop
mov
jecxz
pushf
test
test
inc
in
jg
bound
mov
out
pop
jge
cs
in
scas
scas
insl
fdivrl
and
je
xchg
addr16
fwait
rol
add
repnz
xchg
shrl
into
mov
enter
mov
std
jne
addr16
mov
out
fidivrl
test
out
pop
popf
sbb
iret
fstps
outsb
fwait
js
add
add
xchg
inc
out
dec
mov
or
cmp
stos
adcl
and
aad
jl
and
outsb
pop
pop
xchg
mov
in
sti
sub
into
cmp
aad
sti
scas
je
sahf
cltd
push
mov
mov
loop
mov
mov
shrb
push
adc
mov
fcompl
dec
cmp
mov
or
pop
pop
ds
es
fstpt
sarb
rorl
loop
movsl
sbb
daa
adc
mov
js
adc
test
dec
je
push
and
mov
xchg
jle
push
mov
xor
test
lret
push
arpl
cmpsl
xchg
or
scas
cs
jmp
cmp
dec
cs
insb
lcall
fistps
lock
fistpl
mov
jmp
jno
or
jp
pop
inc
mov
xchg
adc
xchg
adc
outsb
and
out
cld
ds
cld
test
sbb
push
andb
cmpsl
sbb
ror
push
mov
sbb
push
jae
mov
daa
dec
shlb
sti
ret
sbb
jge
xor
pop
inc
lahf
scas
mov
int
add
jg
out
mov
dec
adc
mov
xor
mov
adcb
cmp
scas
imul
ja
add
xchg
pop
rorb
aad
mull
push
mov
push
inc
inc
repz
into
cmp
xorl
outsb
clc
je
das
ret
jbe
push
mov
les
mov
call
add
loope
push
cmp
push
mov
xchg
ret
pop
inc
dec
movsb
xchg
or
add
push
inc
push
mov
pop
jge
test
aas
rorb
adc
and
mov
mov
aad
jo
testb
or
mov
in
lock
cmp
cmpsl
mov
pop
int
ret
cmp
lea
inc
push
fwait
mov
adc
xor
xlat
sti
mov
movsl
inc
int3
addr16
push
lds
push
jmp
mov
adc
fists
into
adc
dec
lea
inc
sub
jno
push
dec
xlat
and
push
inc
push
sub
clc
cmp
adc
enter
cmp
call
xlat
lock
ds
shll
inc
mov
mov
lock
in
icebp
imul
scas
ret
das
or
and
js
loopne
and
mov
decb
and
pop
popf
pop
and
insb
dec
kmovw
push
ss
pop
dec
mov
mov
movsl
pushf
mov
xor
jp
lea
negl
or
mov
pop
sub
insl
cmpl
mov
xchg
dec
bnd
inc
out
test
sub
sbb
fisttpll
push
xchg
repnz
lret
decl
cmp
add
mov
push
cmpsb
jbe
in
mov
cmpsl
loopne
mov
dec
jb
push
xchg
and
out
cmp
out
das
mov
loopne
mov
in
sti
inc
imul
jae
fidivrl
repz
jns
repz
out
test
push
push
jmp
int
jne
jb
push
jnp
xor
mov
bound
lds
sbb
dec
popa
cmc
jmp
inc
dec
ss
cmc
fwait
dec
inc
insb
daa
shll
loop
into
pop
xor
jb
inc
mov
mov
mov
xchg
pop
mov
jbe
mov
scas
ret
mov
pop
add
insl
mov
out
in
jae
xor
xor
jle
imul
rol
push
roll
jl
subl
outsl
js
push
stc
pop
cmp
mov
xchg
in
mov
nop
mov
adc
pop
jno
xor
mov
testb
cmpsl
int
mov
mov
test
outsb
inc
lds
outsb
jb
int3
push
add
sbb
imul
shlb
add
cld
arpl
sbb
rorb
or
jnp
and
xor
jnp
inc
xor
lahf
push
ret
fadds
popa
or
push
repnz
popa
inc
addr16
push
mov
xchg
jmp
fdivs
xchg
data16
das
dec
sbb
dec
fwait
fwait
test
xor
rclb
inc
and
and
scas
outsl
fdivrs
sub
insl
push
fdivl
daa
push
inc
mov
jge
xchg
sti
xchg
sbbl
in
xchg
adc
aas
lea
std
mov
add
lcall
pop
cmc
scas
fidivl
int
lods
cmp
ret
notl
loopne
xorl
jns
adc
add
mov
and
das
call
icebp
jnp
and
pusha
push
jmp
les
sbb
push
mov
push
mov
shlb
je
sub
push
gs
add
add
in
sub
cltd
pop
inc
cmp
push
mov
int3
sub
arpl
and
jae
sub
repnz
inc
inc
xchg
enter
inc
cwtl
pop
xchg
mov
icebp
and
fdivrl
sbb
cs
mov
sub
repnz
xchg
cmpsl
mov
push
dec
cmp
mov
fistpll
jge
mov
loope
shl
mov
int3
fdiv
adc
cmp
shll
add
das
push
xchg
in
push
pop
or
add
gs
pop
inc
jnp
jge
or
sti
lods
xor
fmull
mov
pop
loop
mov
hlt
mov
iret
push
fwait
int3
jg
je
push
pusha
add
loop
push
fs
divb
loope
ds
aad
mov
rclb
adc
pop
cmp
add
xchg
subl
out
negb
out
into
daa
mov
and
sub
sbb
sbb
icebp
dec
dec
cli
lods
cmp
popf
dec
add
push
leave
pop
xchg
xchg
je
ljmp
test
push
movsl
mov
sbb
add
aaa
ljmp
push
lock
jne
xchg
mov
lcall
jge
arpl
je
rcr
sbb
call
les
mov
mov
dec
xchg
subl
pop
xchg
adc
and
fisubl
cmp
lock
cmc
out
cmpb
cmpsl
xchg
insb
movw
pop
gs
xor
cmpb
pop
mov
imul
add
add
dec
push
aaa
outsb
ss
xorl
divb
into
leave
cmpsb
xor
icebp
fisttpll
cmp
call
insl
mov
sti
js
in
cmpsb
movl
je
xchg
lock
or
adc
hlt
insb
cmp
fcomip
mov
loop
xchg
movsb
mov
repz
or
add
dec
iret
iret
push
call
ss
lods
lahf
and
fisubrl
dec
leave
jbe
dec
stos
jne
sbb
jbe
dec
inc
dec
sub
adc
fnsave
clc
add
ds
aam
bound
sbb
mov
leave
test
adc
ret
lcall
out
movsb
dec
xchg
xchg
rolb
sub
cmpsb
fnsave
in
jmp
test
shl
pop
and
push
adc
fdivrl
fcomps
int3
xor
sarl
mov
sbb
aaa
mov
ljmp
push
push
scas
icebp
ljmp
cmp
jno
lods
adc
cltd
jmp
aad
add
loopne
inc
subl
xchg
xchg
test
cwtl
lcall
sub
or
and
arpl
out
pusha
cli
push
mov
faddl
push
mov
outsl
xor
push
mov
rcll
rcr
cwtl
mov
add
adc
dec
movsl
repz
pushf
jg
xorb
sub
or
fsubl
ja
dec
or
fwait
ret
movsl
cs
std
sub
testb
xchg
or
es
rcll
inc
xor
popf
sbb
mov
pop
inc
mov
cld
adc
std
insl
sbb
in
inc
pop
lahf
test
in
ljmp
fnsave
shll
idivl
jmp
sarl
sub
xchg
std
xor
jo
mov
sbb
repnz
dec
adc
inc
pop
xchg
ja
adc
sbb
xor
roll
andl
jmp
mov
cmp
inc
iret
loop
cmc
and
out
scas
mov
insl
sysenter
jp
push
ret
pop
divb
push
inc
mov
jne
jl
incl
sbb
jmp
jns
icebp
je
pusha
xor
roll
lods
pop
cmp
outsl
xchg
xchg
jg
cltd
mov
pop
mulb
pusha
sbb
rorb
inc
inc
xor
stos
dec
inc
inc
pop
sti
xchg
scas
cmp
sbb
nop
pop
xor
mov
jl
lods
movsl
mov
jecxz
fiadds
sbb
pop
add
or
or
cwtl
cmp
sbb
out
addr16
xor
idivl
test
das
add
das
rclb
sub
jnp
mov
dec
cmc
sub
and
out
sub
fst
mov
cmp
push
call
imul
mov
cmp
jg
lock
nop
daa
fistpll
mov
push
sbb
leave
sbb
test
adc
gs
mov
loopne
pop
in
mov
mov
inc
inc
jmp
loopne
in
stc
push
sbb
mov
mov
cld
outsl
ja
dec
int
ja
mov
call
push
xor
test
dec
cmp
cmpsl
or
repz
push
ss
mov
out
fists
sub
jne
mov
lock
fs
cmc
jecxz
imul
and
popa
scas
sarb
pop
fidivrl
jbe
jmp
popa
cmp
dec
dec
jae
jo
test
cld
or
insl
xor
movsl
loope
and
sar
mov
subb
sub
mov
sbb
xchg
jno
jg
adc
jg
movsl
in
icebp
and
sub
mov
push
mov
and
aam
push
mov
inc
push
rcll
shlb
mov
or
cmp
fcompl
addl
mov
jmp
push
fs
cmp
pushf
aad
mov
and
push
jecxz
adc
cmp
es
cmp
adc
mov
imul
in
jb
stos
out
xor
mov
jno
loope
loopne
ret
sub
es
push
jne
and
shrl
aad
mov
xchg
sub
divl
int
mov
push
stc
call
adc
jge
lods
cwtl
cmp
pop
jmp
jmp
or
or
xchg
add
test
out
out
dec
in
sbb
enter
or
data16
pop
xchg
fsubrs
bound
aas
lods
or
jmp
rcll
aas
ficompl
add
in
dec
icebp
out
lea
sbb
shl
push
cmp
mov
flds
movsl
jno
hlt
inc
arpl
movsb
in
fstpt
fs
push
inc
dec
lds
jecxz
add
pop
aam
rorb
dec
push
cmp
pushf
cmp
sub
cmp
push
test
fisubrs
or
es
push
dec
lods
jp
lcall
jmp
or
fsubp
cmp
lea
es
out
sbb
xlat
sub
std
inc
xor
insl
xor
pop
cmpsl
fisttpll
lcall
in
inc
dec
je
enter
and
push
pushf
jmp
adc
cltd
daa
jp
outsb
mov
gs
push
arpl
cwtl
aad
fs
fldl
arpl
mov
addl
imul
xchg
push
and
cmp
inc
inc
mov
lret
lcall
adc
jge
and
mov
jno
xor
in
aam
dec
mov
lret
cmp
je
jmp
andb
xchg
testb
outsb
stc
push
fimuls
es
adc
adc
pusha
sub
jae,pn
das
and
cmp
add
add
lcall
aad
and
cmp
xchg
mull
xor
popf
mov
lcall
lea
or
xor
ret
pop
mov
sti
pushf
mov
or
in
jle
in
sahf
cmp
fnstenv
jle
sbb
call
jle
fwait
lock
ret
jne
dec
and
hlt
filds
adc
push
into
sarl
arpl
pop
mov
and
sub
daa
mov
jbe
jb
mov
push
les
jmp
adc
sbb
cwtl
add
xchg
orb
dec
mull
mov
xchg
orb
mov
ret
and
cmpsl
aas
xor
sbb
popf
int
fadds
xchg
cwtl
pop
ss
sbb
mov
rcrl
xchg
pop
fstp
push
fsubrs
mov
dec
imul
int3
ret
sbb
fcmove
sahf
jae
push
jb
addr16
xchg
sti
mov
add
and
std
mov
cmc
mov
cmp
dec
pinsrw
dec
cmp
popa
ss
jg
pop
mov
rorl
pop
cmp
inc
daa
adc
lods
lods
xchg
mov
inc
dec
std
or
and
mov
stos
sub
xchg
mov
stos
repz
cmp
push
cld
jl
ret
cmp
mov
fiaddl
pusha
lods
aaa
pop
fs
ja
in
cmp
mov
jecxz
pop
mov
movsl
inc
push
add
inc
xor
push
mov
dec
leave
aam
cs
pop
push
imul
sub
je
mov
jmp
fcmovb
fmuls
leave
and
movsl
ds
xchg
jbe
dec
xchg
push
jle
rorl
mov
mov
shrb
xor
cmp
data16
sbb
xchg
jle
popl
jle
xchg
aas
sbb
es
movsl
sbbl
aas
or
add
or
lds
dec
fwait
xchg
xchg
adc
and
daa
xchg
mov
dec
pop
mov
push
cmpsl
mov
cltd
lock
sbb
das
mov
xchg
sti
insb
std
dec
sbbb
fcoms
xor
sbb
ret
xor
xchg
loop
ret
mov
fbld
outsb
mov
inc
lret
xchg
xor
inc
push
lret
into
repz
rclb
xchg
cld
cmp
or
scas
lcall
lret
repnz
mov
sarl
adc
ret
clc
mov
adc
outsl
or
cmc
repnz
push
lea
mov
dec
les
mov
out
mov
mov
bound
ret
cwtl
mov
mov
jecxz
repnz
pop
xchg
repz
push
in
negb
mov
std
jge
dec
mov
pop
lcall
push
test
inc
ja
sub
pusha
arpl
mov
test
fidivl
and
idiv
clc
stos
mov
mov
adcl
mov
fcoms
mov
jecxz
dec
dec
inc
sbbl
cmp
in
js
pop
test
cmc
lret
cmp
pop
sub
shrl
cmp
dec
loope
fstps
add
dec
out
cmp
xor
mov
aas
fbld
sbb
mov
imul
xchg
jge
mov
sbb
push
inc
push
lods
xchg
nop
or
cmp
sub
filds
inc
mov
outsb
das
fmulp
pop
mov
pop
pop
ss
repnz
fwait
sub
test
lock
push
xor
pop
add
pop
add
mov
or
lea
xchg
xchg
and
add
in
test
mov
jl
cmp
stos
mulb
lds
out
xchg
or
dec
inc
aad
mov
mov
pop
sbb
cmpsl
bsr
jbe
fwait
test
jecxz
jo
mov
cltd
fnstenv
mov
cmp
aas
sbb
xchg
mov
add
leave
jb
xor
push
jns
xchg
dec
shll
loope
addr16
pop
xor
and
mov
pushf
mov
lea
push
add
or
sbb
loope
call
jmp
fs
xor
lods
jb
into
out
dec
cmp
and
dec
xor
out
mov
repz
insb
add
xchg
loope
jl
stos
xor
jecxz
aaa
lahf
xchg
jl
rorl
nop
leave
inc
mov
fildll
push
mov
xlat
xor
adc
das
jbe
mov
aad
cmp
fdivp
jno
inc
xchg
filds
lcall
enter
movsl
add
icebp
pop
sbb
pop
jne
stos
adc
jl
xor
mov
ds
int3
arpl
movsl
inc
fisubrs
or
or
pushf
xchg
push
clc
pop
mov
mov
stos
or
out
xlat
cmpb
pop
or
xchg
shl
aas
sbb
fcomps
pop
mov
lods
pop
mulb
inc
sbb
lcall
or
pushf
xor
jnp
int3
or
scas
xlat
test
add
adc
mov
repnz
fildll
iret
pop
cmp
jmp
pop
sub
cltd
out
add
xchg
aaa
mov
in
xchg
in
adc
dec
jg
std
jae
sub
add
shlb
sub
int
scas
mov
cmc
jo
pop
sub
push
enter
mov
mov
sub
out
xchg
pop
lret
loope
lahf
mov
testb
pop
cmp
out
lahf
repz
adc
out
sbb
adc
and
inc
scas
decb
iret
cmp
pop
sbbl
js
mov
fcompl
out
mov
test
div
imul
lea
adc
call
mov
dec
cmp
movb
sbb
dec
mov
into
outsb
or
cmp
mov
lds
sbb
test
inc
dec
incb
adc
icebp
movsb
mov
js
repnz
inc
push
out
mov
rcrb
pop
xor
mov
icebp
push
mov
xchg
data16
mov
mov
pushf
fdivrp
add
mov
cmpb
ffreep
add
mov
and
stc
adc
aaa
shrl
and
push
aaa
push
es
in
js
jmp
enter
movsb
xchg
jg
lock
pop
xchg
ja
jl
cmpsb
andl
pusha
inc
xlat
aad
out
push
hlt
in
outsl
adc
jno
inc
fisubs
icebp
lock
or
jbe
shlb
adc
inc
sti
or
cmp
das
sahf
xchg
dec
rol
push
je
mov
cmpsb
inc
mov
mov
in
rol
xor
jecxz
in
insl
jle
mov
negl
or
je
push
mov
fs
jg
std
insb
test
jae
or
fistpll
in
test
push
shrb
insb
mov
jae
push
jo
pop
mov
cmp
dec
cmc
fnstcw
and
hlt
sahf
xor
test
mov
jo
idivl
jp
lret
mov
inc
dec
fcoml
stc
jmp
loopne
xor
dec
es
bound
xor
nop
cmp
xchg
jmp
fidivs
mov
adc
mov
std
in
lock
xor
sub
mov
push
pop
sti
scas
add
jae
mov
mov
adc
int
or
iret
cmp
movsl
jbe
pop
mov
leave
aaa
ret
push
jp
and
fimuls
jle
lret
fldcw
push
pop
xor
xchg
add
or
in
hlt
imul
mov
rcll
push
outsl
inc
cmpl
xor
aas
sub
sahf
xor
xor
push
repz
mov
aaa
jo
and
sub
inc
shll
fs
and
cmc
mov
xor
in
incl
lea
cmp
mov
outsb
mov
mov
xor
outsl
leave
dec
xchg
imul
mov
cmpsl
dec
pop
test
pushf
mov
add
loope
sti
pusha
xchg
dec
xchg
mov
sbb
lea
jg
aad
jno
jmp
lcall
fdivs
xchg
or
ficomps
popa
out
popf
sti
xchg
cld
mov
inc
std
pop
pop
cmp
push
loopne
jmp
shll
out
repnz
cli
and
push
xchg
xor
fistl
int3
inc
ficompl
aas
cltd
sbb
aad
push
push
negl
into
in
pop
push
imul
aad
sbb
cmp
and
lods
adc
xor
int
inc
jo
pop
mov
mov
dec
lret
bound
arpl
jg
mov
sbb
test
cmpsl
sbb
cmp
clc
ss
imulb
inc
inc
dec
jle
dec
jp
dec
sub
sarl
push
lds
mov
mov
into
mov
push
sbb
cmp
dec
outsl
loopne
fsubrl
rcll
cli
stc
popa
fisubrs
scas
xor
sbb
lahf
cmpl
lret
cli
int3
adcl
popa
pop
shll
ss
and
sbb
rcr
adc
pushf
add
std
sub
fdivrs
xchg
cmpsb
and
cmpsl
leave
int3
repnz
dec
mov
inc
add
push
nop
je
mov
hlt
xchg
sahf
xchg
fidivrl
dec
inc
xor
xchg
inc
dec
mov
fisubs
popf
jne
mov
mov
outsl
sti
cmp
pop
pop
xchg
out
jle
push
scas
mov
add
adc
pop
and
add
or
xor
pop
inc
aam
mov
xchg
lret
mov
xor
push
into
loop
cmp
fiaddl
in
scas
inc
stc
push
repnz
test
or
mov
dec
call
xor
push
in
push
fcoms
pop
fwait
cwtl
in
add
cmp
mov
xor
sub
xor
jg
cmpsb
xchg
je
mov
xchg
cli
fstpl
dec
push
sub
aaa
insl
inc
stos
or
adc
mov
call
mov
cmpsl
push
adc
fcomps
sahf
adc
mov
inc
mov
sbb
ret
xchg
cld
ret
cmp
insb
and
inc
iret
xor
push
fwait
movsb
jb
pause
mov
lahf
mov
int
into
dec
xchg
jb
or
mov
xor
insb
ja
ret
mov
sbb
sub
loop
dec
outsb
inc
lret
and
fldl
cli
xor
lret
jmp
lods
repz
popf
adc
push
sub
das
popa
shl
xor
jge
addl
movsl
cmp
push
popf
in
movsb
and
repnz
or
leave
rol
scas
ficoml
nop
fxch
jno
outsb
lret
fcompl
jge
or
mov
jno
es
test
mov
jbe
inc
lret
xchg
pop
lods
add
lret
xchg
loop
inc
sub
cwtl
cmpl
push
imulb
inc
insb
ret
cli
leave
mov
push
mov
sub
and
dec
mov
push
add
les
push
mov
xchg
xchg
stos
insl
push
iret
push
lods
mov
lahf
mov
mov
xchg
shrl
cwtl
mov
xlat
cmp
imul
cmp
pop
sbbb
dec
mov
loope
jae
add
mov
push
add
fistps
loope
lea
jl
out
or
xchg
daa
mov
out
xor
mov
jae
hlt
mov
add
adc
jno
dec
sti
in
outsb
jns
jbe
mov
sbb
int
or
jmp
cmp
andb
iret
pop
xchg
outsl
push
or
push
xlat
pop
or
dec
nop
fistl
sub
lret
or
fadds
aad
jg
into
jecxz
mov
xchg
call
inc
clc
sbb
pop
out
fidivl
scas
leave
mov
popf
popf
add
imul
scas
xorl
popa
inc
in
push
int3
pop
jne
adc
add
rolb
in
adc
xchg
fwait
cmp
imul
jecxz
in
sub
test
std
shlb
lret
cmp
mov
std
sub
pop
loope
icebp
and
push
xchg
sub
sbb
cltd
sbb
iret
cmp
scas
popf
sbb
sbb
fstl
push
and
adc
dec
or
push
sbb
mov
mov
push
jl
push
pop
into
arpl
stos
mov
movsb
inc
out
outsl
movsb
bound
adcb
add
and
sbb
xchg
adc
std
adc
or
pop
xor
mov
mov
push
shll
cmpsl
rolb
inc
jns
or
sbb
rorb
xchg
inc
in
xchg
inc
fcmovnb
jg
test
mov
cld
call
nop
or
lahf
jno
enter
cmp
mov
mov
dec
fidivrs
shrb
stos
jo
or
aaa
imul
fnsave
pop
mov
outsb
outsb
fmuls
jnp
dec
xchg
push
push
xchg
cmp
dec
add
mov
enter
add
xlat
or
jns
xchg
xchg
fwait
adc
adc
xor
imul
outsb
xchg
mov
ficomps
test
aaa
out
push
sbbb
mov
arpl
or
cmpsl
data16
or
pop
xchg
inc
dec
dec
jecxz
mov
or
rcrb
mov
aam
out
mov
xor
pop
in
xor
stos
push
xlat
cs
push
jmp
sbb
or
repnz
lods
or
dec
clc
inc
icebp
xor
fmul
ds
xchg
add
cltd
aad
cmpl
push
add
jo
cmp
mov
out
loop
addr16
inc
les
push
fcmovu
mov
push
pusha
stc
out
and
test
cli
sub
test
out
and
popa
jp
and
pop
or
rorl
iret
stos
lret
cld
sbb
aas
mov
push
mov
jno
jno
adc
push
stos
xchg
adc
sbb
cld
movsl
cmpsb
xchg
ja
popa
sti
cli
sub
mov
mov
ds
inc
inc
jecxz,pn
fidivrs
lods
out
cmp
shl
imul
push
mov
rcrb
movsb
js
jl
in
std
or
sub
push
testb
lea
xor
add
out
test
lds
mov
adc
ss
dec
leave
sahf
push
adc
mov
imul
scas
dec
mov
and
inc
iret
dec
dec
push
push
rorb
lds
mov
add
mov
mov
imul
bound
rol
mov
gs
jp
dec
lods
das
aad
dec
cmpsb
dec
mov
mov
inc
cwtl
adc
and
popa
sarl
stos
push
es
sbb
pop
setl
adc
pop
jp
cmp
mov
fisttpl
mov
adc
jg
mov
pop
test
cli
mov
imul
lock
cs
jle
xchg
mov
call
mov
mov
push
iret
push
adc
daa
sub
stos
leave
movsb
push
xchg
sub
mov
cmp
ljmp
jmp
mov
loope
cmp
in
fcmovbe
inc
cmp
shlb
pop
lret
shlb
add
mov
pop
mov
scas
adc
imul
addr16
mov
or
push
cs
push
icebp
cs
dec
lret
adc
jns
jmp
jge
out
sbb
and
adc
lock
les
inc
rcl
cli
and
pushf
loop
jg
outsl
outsb
repnz
lret
adc
pop
repz
sahf
fimull
lods
in
pop
cs
cmp
pop
adc
mov
xor
cld
push
pop
mov
das
js
in
leavew
flds
dec
xor
daa
dec
add
add
fcomp
stos
cmpsl
aaa
imull
out
lods
jmp
sub
xor
add
jecxz
or
cli
xchg
loopne
push
test
mov
addr16
lods
cmpsb
js
les
and
and
scas
jo
ret
inc
loop
test
sub
lds
imul
inc
adc
mov
shlb
sub
xchg
jo
add
sub
push
sub
insb
mov
or
outsl
mov
fnstenv
jmp
shrb
lds
jg
dec
movsl
shl
fdivs
mov
lock
xor
inc
mov
shrl
inc
leave
lock
pusha
push
inc
in
cmp
dec
test
pop
jge
shr
push
out
ljmp
aam
jmp
push
rcrb
mov
xchg
cltd
push
mov
cmpsb
pop
jno
dec
mov
in
mov
xchg
mov
push
or
jno
fisttpl
mov
lea
in
mov
out
adc
popl
add
popa
test
movsb
sbb
leave
repnz
inc
push
fidivrs
pop
popa
xchg
out
fists
dec
mov
in
sahf
mov
sbb
cmp
mov
mov
jb
xor
repnz
cmpsb
mov
inc
xchg
outsb
inc
xchg
insb
adc
stos
push
sub
sub
push
loope
mov
rorb
es
dec
cmp
xor
in
or
mov
leave
dec
popa
cli
push
in
test
stc
cmpsl
or
out
fsubs
in
mov
pop
shrl
fsubrl
mov
jnp
ss
mov
fs
jnp
push
mov
mov
sub
add
push
in
mov
cmp
js
push
sbb
mov
cmpsb
decb
sub
pop
mov
lcall
scas
push
aas
inc
pop
sbb
popa
sete
mov
ds
loop
or
xchg
stc
and
jmp
adc
cltd
xchg
jne
mov
fwait
test
mov
inc
aaa
inc
leave
aaa
or
in
hlt
lret
push
xor
repnz
lods
lods
dec
rcrl
lock
test
push
call
rolb
jo
aam
ficoml
mov
push
scas
ffreep
es
jle
fists
and
adc
fdivrs
repz
add
xor
hlt
les
insb
das
jge
out
sub
cmp
or
in
out
jo
dec
test
or
mov
mov
sahf
dec
xchg
nop
add
in
cwtl
sarb
xlat
dec
push
loope
cli
sub
inc
sbb
hlt
loope
dec
scas
arpl
in
sarl
mov
es
aaa
ljmp
inc
sahf
xchg
xchg
jbe,pt
ret
fistps
fnclex
jg
xchg
test
cmpl
jle
sbb
add
xchg
fs
shrb
mov
scas
shlb
int3
sub
and
xchg
ficoms
pop
ds
ret
xchg
mov
gs
xchg
sbb
enter
movsl
xchg
fst
push
or
xchg
cmpsb
xor
jge
aad
js
mov
jle
outsb
xor
shl
andb
or
xor
mov
and
jge
or
mov
rclb
sbb
inc
cmp
jne
inc
callw
clc
or
jle
dec
in
jns
shrl
rclb
add
lret
xchg
lahf
iret
and
mov
stos
in
ds
push
mov
xorl
xchg
les
sub
test
mov
adc
repnz
ret
and
mov
push
mov
pop
fabs
inc
and
fnstsw
xchg
add
into
bound
sbb
mov
stc
push
test
iret
cmpl
push
shl
inc
lods
aam
push
dec
gs
aad
jne
mov
fwait
sbb
loop
cmp
sub
xchg
push
fmuls
cmp
shr
sub
pop
jbe
mov
mov
xchg
loope
scas
add
aas
push
mov
mov
or
pop
hlt
jmp
int3
repnz
mov
fsubl
repz
inc
and
sub
sbbb
inc
pop
mov
lahf
ljmp
pop
cmp
mov
inc
pop
mov
sub
xchg
andb
in
sub
xchg
xchg
xchg
int
aaa
je
xchg
adc
loopne
arpl
shrl
mov
mov
aad
fists
int3
into
jmp
pop
adc
pop
dec
stc
fisttps
jbe
sub
cltd
loop
fdivl
insl
dec
adcl
inc
xchg
insb
out
scas
xor
popl
scas
rorl
push
lcall
add
xlat
push
adc
out
popa
xchg
adc
xchg
pop
mov
sub
lods
inc
xchg
add
call
in
add
imul
push
xchg
cmp
shrd
insl
loope
movsl
testl
stos
and
sbb
popa
add
sub
sub
test
add
sub
lods
jge
cmp
push
cmc
mov
cmpsb
mov
push
or
and
mov
jg
or
push
pop
pop
or
dec
fiaddl
jp
or
push
fcoml
xchg
lds
cmpsb
pop
sbb
cmpsb
imul
hlt
push
fsubrs
add
es
push
cmp
in
push
lods
inc
int
inc
push
push
pop
fdivrl
xchg
and
adc
inc
mov
je
sti
push
nop
cwtl
divb
sub
pop
dec
add
cmp
and
mov
rorl
leave
pop
push
cmp
clc
jge
mov
popa
lcall
adc
mov
mov
inc
pop
pop
jmp
popa
inc
mov
cmp
inc
es
sub
push
out
push
std
mov
imul
adcl
dec
or
ljmp
xchg
mov
add
std
pop
pop
mov
xchg
dec
bound
push
rclb
xchg
fnstcw
int
cmp
stos
cmp
mov
sbb
daa
and
mov
dec
icebp
sbb
xlat
mov
xchg
xchg
mov
push
fistl
or
adc
push
inc
jecxz
jecxz
jecxz
jmp
and
cmp
jle
jle
pop
or
out
jnp
inc
in
jge
push
cmpsl
pop
push
stos
cmpsl
pop
sub
lret
and
add
jg
aam
or
mov
mov
mov
xchg
inc
xchg
push
mov
xchg
add
mov
add
mov
push
pusha
pop
lods
dec
jae
int3
dec
add
stos
adc
lret
lret
pop
jg
test
imul
push
ja
add
mov
gs
or
adcl
jae
push
out
mov
xchg
push
andb
push
inc
repz
mov
pushf
cmp
insl
iret
fisubrl
shll
sbb
push
aas
subb
aas
pushf
dec
xor
or
ds
mov
xorl
fisttpll
jecxz
push
mov
xor
lahf
fdiv
adc
fs
cmpsl
pop
cld
repz
lret
js
and
and
iret
sbb
push
insb
or
out
xchg
jbe
aas
xor
outsl
lds
popa
sahf
dec
clc
cmp
lahf
fxch
push
cmpl
jbe
fisubl
push
pop
dec
stos
inc
dec
xor
or
into
dec
pop
adc
fistl
push
fstpl
test
push
fists
or
test
adc
sbb
xchg
pop
cmp
iret
lods
cmp
jns
sub
inc
xorl
mov
cmp
rol
mov
pop
jg
xchg
hlt
xchg
sub
and
sub
add
sbb
stc
mov
xchg
cmp
push
or
push
push
sbb
dec
or
push
in
scas
xchg
mov
sbb
xchg
inc
rcll
cld
scas
jne
js
push
and
dec
mov
mov
fs
sti
shlb
inc
ljmp
dec
aad
jnp
mov
sahf
in
jl
adc
leave
andl
xchg
pop
aam
fisubl
sbb
test
jge
in
inc
jge
xchg
pop
mov
lahf
sub
ljmp
std
aam
cmc
lea
sub
cmp
push
insb
lods
mov
jg
mov
dec
cli
outsl
data16
fwait
scas
xchg
sbb
inc
inc
mov
cli
dec
in
lret
movsb
mov
ret
in
clc
fs
lea
ljmp
scas
push
ret
dec
jg
dec
out
mov
lods
inc
jg
lret
arpl
and
leave
repnz
pop
lret
and
dec
xchg
cmpsl
addr16
sub
jmp
jo
or
sub
push
lret
fstpt
and
jno
jns
xor
jmp
or
loopnew
popf
sti
sbb
jbe
mov
inc
fisttps
add
inc
sbbb
in
add
shll
sbb
in
mov
mov
push
mov
mov
mov
push
ficomps
cmp
jecxz
mov
jg
sbb
out
ja
ret
sbbl
push
stos
cmp
xor
xchg
in
dec
pusha
push
adc
lret
sub
in
stc
xor
push
dec
sub
in
outsb
mov
rolb
mov
add
rcrb
scas
pop
pop
gs
iret
pop
pop
shlb
xchg
lds
movsb
or
jne
cmpsb
xchg
dec
gs
loopne
hlt
addb
or
sbb
cwtl
mov
in
or
jg
shl
rorl
scas
or
push
jecxz
mov
scas
lcall
inc
mov
mov
xchg
aas
jne
sahf
mov
add
sub
xlat
xor
sub
adc
fbld
int
popa
push
inc
inc
xchg
jae
jecxz
sbb
enter
aas
push
lea
and
mov
and
and
int
stc
inc
lock
popf
mov
insb
or
lods
arpl
mull
jmp
mov
dec
insb
mov
js
jb
idiv
fidivs
aad
cmp
fstl
cmp
popf
shlb
loope
push
xchg
in
scas
in
sbb
pop
pop
push
pop
imul
aam
lods
inc
mov
cmp
dec
sahf
push
in
stos
cld
add
loopne
cmpsb
bsf
push
inc
xchg
lods
ja
or
cmp
ds
mov
lods
push
loopne
in
inc
test
xchg
pop
ret
sbb
imul
jmp
rcll
sbb
adc
lahf
push
pop
stos
popa
in
dec
push
pop
inc
shlb
repnz
aad
andl
mov
mov
ds
nop
pop
ds
sahf
jb
push
out
cmc
lea
xchg
test
movsl
or
shrb
hlt
daa
cli
sub
and
imul
shll
and
in
in
push
rcrb
push
adc
ret
jne
cmpsl
and
xor
loop
iret
cmp
cltd
shrb
adc
aad
dec
ficoml
or
xor
cmc
ja
adc
jl
in
sub
popf
mulb
pop
hlt
dec
sbb
out
insb
jg
cld
shrl
out
cld
mov
push
inc
jne
inc
mov
cmpsl
jecxz
lcall
xchg
cwtl
dec
dec
inc
das
in
outsl
icebp
or
jg
push
loopne
adc
push
lcall
cli
popf
sub
pop
clc
pushf
and
mov
xchg
sbb
mov
mov
add
mov
out
aam
or
pop
and
cmp
push
inc
cmp
fbstp
into
aad
js
out
scas
das
iret
push
jl
cmp
mov
cmpl
or
nop
inc
mov
xor
ss
and
repz
xor
mov
ljmp
xchg
inc
jp
push
mov
and
cmp
and
mov
xchg
pop
add
arpl
xchg
and
pop
fisttps
inc
clc
lret
stc
loop
cli
icebp
rorb
adc
lcall
jnp
fnstsw
cli
sub
mov
sarl
xchg
aaa
shl
jmp
repnz
cmp
sbb
add
mov
dec
aam
leave
addr16
je
mov
stos
pop
or
imul
repnz
or
movsb
cltd
adc
xchg
stos
das
and
jne
pushf
mov
daa
ret
fcoms
cmp
sub
jge
xlat
fldcw
aas
std
xor
inc
jl
cmpsb
cmp
and
mov
xchg
out
mov
rcrl
fldl
pushf
les
mull
iret
sti
andb
jge
mov
call
add
out
lcall
movsb
ja
and
lods
add
test
xchg
pop
aas
int
mov
mov
push
loopne
mov
aam
mov
lods
pop
shlb
dec
add
mov
ljmp
fwait
and
iret
xor
pop
mov
in
sbb
int
or
dec
dec
inc
xor
mov
and
push
sbb
sbbl
and
xchg
mov
push
mov
cmc
jg
push
dec
pop
mov
xchg
cld
and
dec
std
mov
xchg
xchg
fnstenv
jo
daa
sub
mov
or
test
test
test
arpl
dec
cmpsb
in
aam
ss
inc
iret
and
insb
lahf
sbb
sbb
dec
jb
out
dec
addr16
loopne
sbb
cmc
outsl
push
xor
mov
mov
jl
dec
lahf
xor
jg
hlt
cmc
jge
add
xor
int3
jnp
cwtl
inc
pop
mov
jno
mov
aad
xchg
sub
lea
in
mov
test
or
fisubs
ret
pop
and
test
pop
adc
xor
js
pushf
in
scas
xchg
xchg
imul
mov
test
hlt
xchg
cmpsl
stos
lock
adc
jo
inc
lea
jl
jp
lcall
popf
sbb
psubb
push
call
scas
sbb
div
sub
mov
sub
cltd
xchg
push
push
aas
subb
ret
xchg
dec
in
rcrb
out
sub
xlat
or
js
sahf
int
iret
and
push
xor
push
stos
pop
test
leave
test
addr16
sub
sbb
cwtl
lret
sub
xchg
or
add
daa
pop
inc
push
dec
push
push
or
clc
fcompl
lea
adc
imull
mov
sar
push
out
mov
lds
rcll
ds
sarb
daa
jo
sbb
enter
inc
and
dec
push
lods
dec
shr
testl
dec
fwait
add
in
cs
repnz
mov
push
fists
cmpsl
sbb
or
inc
dec
imul
mov
push
rcll
cld
subb
push
outsb
daa
js
mov
jb
sar
insl
or
or
cmp
fstl
or
pop
jl
mov
sbb
inc
enter
or
shll
push
xchg
add
or
cltd
pop
js
cmp
push
lods
repnz
pusha
mov
jmp
into
fisubrl
out
pop
ljmp
xor
ret
ss
gs
into
fcmove
pushf
addl
jae
shlb
outsl
pop
cmp
insb
cmp
in
cmpsl
pop
jno
nop
loopne
and
inc
ret
mov
add
mov
pop
ret
or
and
pop
jo
fildll
out
in
bnd
flds
popa
xchg
sub
movsb
sub
mov
mov
or
addr16
fdivrs
mov
hlt
popf
je
fidivrs
lea
push
lds
arpl
icebp
add
pop
int3
add
or
pop
mov
add
mov
cwtl
or
gs
lea
mov
sbb
pop
rclb
jle
mov
pop
adc
jmp
xor
xor
lds
lods
mov
and
rcll
in
daa
add
aas
and
jp
inc
repz
jge
xchg
addb
add
andl
les
mov
in
ds
fwait
dec
js
in
fcmove
int
fistps
mov
ror
add
movsl
and
adc
mov
jbe
mov
out
mov
fldlg2
fsubs
std
inc
add
and
and
cmp
ljmp
xchg
cmp
mov
cmp
inc
xchg
cmc
stos
inc
ret
push
out
dec
xlat
push
pop
insb
insb
pop
std
sub
jb
sub
adc
in
inc
mov
repz
lods
xchg
mov
fcoms
test
test
out
jne
jnp
out
movsb
mov
mov
pop
push
push
and
mov
loope
pushf
xchg
cltd
icebp
cwtl
ljmp
mov
mov
pop
xchg
aas
decl
movsb
push
lahf
add
insl
mov
pushf
testl
xchg
pop
lods
cmc
bound
cmp
xchg
jno
add
stc
lahf
pop
loopne
pop
inc
ja
mov
inc
mov
loop
test
mov
and
pushl
ss
jge
jns
fildll
mov
lcall
xchg
mov
outsl
pop
iret
fprem1
es
cli
lds
pop
mov
fs
sbb
cmc
and
mov
inc
or
insl
mov
dec
test
leave
inc
cmp
test
loop,pn
mov
xorb
and
push
xor
daa
adc
shrl
addr16
inc
mov
loopne
insl
fisubrs
mov
xor
pop
insb
cmp
inc
repz
push
aaa
jo
pop
adc
test
push
pop
lcall
insb
addl
sub
loopne
adc
mov
movsb
lret
ret
push
push
dec
and
jmp
mov
pop
sbb
dec
popf
inc
jb
es
gs
lahf
add
in
pop
inc
scas
and
roll
rorl
mov
xchg
int3
cmp
lods
shlb
push
repnz
pop
adc
jae
bound
out
sbb
mov
dec
outsb
mov
hlt
xchg
mov
mov
ljmp
lret
lea
cmp
mov
lret
inc
or
lds
add
lods
sbb
ja
xchg
or
push
and
or
adc
outsl
pop
in
lcall
pop
es
adc
mov
inc
and
xchg
cmpsl
cmp
push
jg
out
imul
xchg
sarb
pop
jb
pop
lret
frstor
mov
xchg
into
adc
sarb
out
or
dec
scas
or
or
and
sbb
push
push
add
jno
dec
pop
js
xchg
fs
inc
bound
pop
push
push
fidivrl
loopew
dec
in
dec
sarl
imul
push
pop
mov
out
sbb
ja
popa
les
mov
out
out
sbb
rolb
fsubp
mov
adc
push
stos
test
mov
jno,pn
xor
hlt
push
jbe
popf
adc
lods
and
fs
movsb
cmp
xor
stos
pop
push
push
and
jmp
fbld
bound
ret
in
fisubl
int3
pop
out
aam
jle
orl
push
das
hlt
mov
repnz
outsl
jnp
jl
lret
pop
push
int3
aam
pop
jmp
pop
sbb
dec
inc
xor
xchg
cli
dec
repnz
adc
inc
ja
in
xor
jecxz
dec
jmp
hlt
int
les
or
insb
jp
adc
ret
dec
or
lods
dec
pop
adc
sbb
cmp
dec
scas
xor
mov
mov
mov
enter
imul
lret
lods
push
enter
imul
ret
rolb
pop
addr16
sbb
pop
inc
xor
cmpl
test
adc
xchg
in
pop
sbb
jo
subl
push
push
rcll
lcall
sti
lret
bound
movsb
daa
xchg
or
adc
and
mov
push
lock
enter
sub
rcrb
sub
mov
ror
dec
or
lds
outsl
fiadds
push
cmp
xchg
and
mov
adc
xor
insl
or
cmp
add
jne
cld
xchg
inc
nop
je
xchg
stos
adc
hlt
imul
xchg
jmp
aas
fs
xchg
icebp
inc
les
and
in
pop
xchg
faddl
mov
insb
icebp
cli
nop
hlt
xchg
pop
lcall
nop
jno
adc
xor
insl
shlb
jge
jmp
sub
sub
pop
jg
stos
addr16
movsl
stos
mov
addr16
sbb
subb
cs
cmp
pop
mov
inc
mov
je
jmp
iret
mov
dec
loopne
incl
push
out
jecxz
imulb
in
cmp
fiaddl
mov
push
jb
sbb
mov
mov
pop
xor
das
fsts
jl
or
mov
lods
jb
sub
mov
sti
add
sahf
outsb
clc
xchg
push
ds
jne
mov
pop
les
jb
or
dec
jbe
jae
jns
adc
jmp
sbbl
add
mov
fwait
inc
xor
jl
mov
aad
in
imul
jae
xchg
bnd
leave
in
adc
insb
iret
flds
add
jne
mov
lret
mov
scas
mov
sarb
ret
mov
mov
xor
aas
in
icebp
mov
mov
xor
pushf
scas
push
jae
test
int
cli
xchg
mov
scas
push
add
dec
leave
mov
lcall
aas
sub
xor
scas
push
xchg
add
loop
cs
lods
xchg
aad
stc
mov
or
or
xchg
add
cmc
mov
mov
imul
andb
add
dec
fs
xchg
sbb
or
inc
push
sub
lock
dec
xchg
lea
adc
pop
sub
std
pop
mov
jo
into
in
pop
jp
sub
pop
stc
in
or
addb
xlat
fwait
loopne
dec
aad
pop
icebp
enter
add
pop
mov
mov
sbbl
icebp
cld
insl
or
loope
add
inc
dec
out
fwait
pushf
out
mov
std
sbb
add
xchg
adc
je
or
out
lret
xchg
cmpsb
fnsave
jns
std
loopne
insb
stos
inc
xchg
pusha
mov
pop
mov
add
mov
fwait
shl
pop
mov
and
cmp
mov
fdivrl
and
in
or
mov
int3
incb
loop
leave
pushf
push
mov
jmp
push
xchg
ret
pop
scas
jno
ret
movsb
lahf
or
mulb
cmp
dec
pop
sbbl
add
int
loop
sub
in
dec
mov
shrb
cld
cld
cmpsb
repnz
pop
pushf
and
mov
inc
popa
mov
mov
and
and
test
testl
jbe
mov
mov
in
xchg
cmp
add
push
pop
stos
es
fdivs
sub
sti
testl
dec
add
cmp
ljmp
imul
sarb
imul
loope
fadd
push
cmpsb
cmp
lahf
pop
stos
rclb
mov
pusha
xor
cmc
or
push
stos
ret
in
int3
push
aaa
test
cli
mov
adc
aam
fwait
roll
jg
es
repnz
scas
jg
les
mov
adc
jmp
jns
enter
jbe
out
sbb
cmp
lahf
lods
push
mov
sub
sbb
call
lret
int3
xchg
adc
int
push
push
daa
ret
jns
lret
xchg
mov
leave
xor
out
sbb
sub
push
dec
or
xchg
fidivl
icebp
jns
stc
dec
pop
mov
out
nop
pop
repnz
lcall
and
dec
mov
jns
sbb
gs
icebp
movsl
xor
hlt
sahf
mov
mov
aad
pop
sbbb
mov
pop
pop
mov
aam
cmpsb
inc
jl
mov
xlat
or
pushl
pop
xor
movsl
out
lea
cwtl
pop
xorb
jbe
pop
mov
in
adc
dec
adc
adc
jl
xor
pusha
jnp
jo
xchg
jae
mov
pop
add
leave
repz
mov
mov
inc
lahf
xchg
lcall
in
ret
mov
xchg
lahf
out
adc
adc
test
ret
add
mov
mul
adc
aas
push
aaa
loop,pt
sbb
cmpsb
pop
pop
in
jb
push
dec
fwait
out
pop
dec
enter
filds
ror
testl
stos
fadds
jle
shll
cmpsl
sub
mov
cltd
sub
push
mov
add
into
mov
in
xor
mov
aam
or
call
leave
xor
pop
es
cltd
icebp
adc
shl
es
out
push
mov
mov
and
xor
sarb
cmp
mov
mov
jnp
mov
pop
nop
cltd
fistpl
test
jno
cmp
mov
sbb
mov
mov
loope
sub
push
sbb
cmp
mov
or
jmp
mov
fidivl
push
hlt
clc
mov
clc
je
rclb
lds
sub
fmuls
inc
cmpsb
xchg
int
lgs
out
notb
fildll
fidivrs
outsl
mov
pushw
sub
ficoml
pop
rcrb
mov
pop
inc
xlat
pcmpgtw
add
and
mov
repz
xorb
inc
fs
dec
push
aaa
cmp
call
movsb
cmp
rorl
shrb
mov
push
cmp
call
or
jbe
xor
fnstsw
jp
and
inc
mov
cmp
mov
inc
adc
lcall
outsb
mov
inc
push
and
je
stos
mov
push
je
nop
shrb
mov
mov
imul
call
out
outsb
popf
lret
mov
sti
in
dec
mov
sub
mov
es
lret
and
outsl
jle
cmc
add
jp
or
into
mov
sbb
in
pusha
jmp
insb
mov
push
fs
in
adc
xor
push
jae
mov
pop
aaa
mov
dec
or
in
cmp
adc
mov
xchg
mov
popa
aaa
dec
sbb
std
pop
enter
mov
outsl
mov
ljmp
je
subb
and
call
adc
aas
in
movsl
lret
push
pop
cmp
shrl
repnz
fdivs
mov
jge
cmpsb
lret
mov
sub
jbe
shrl
out
ret
dec
sbb
push
inc
jge
cwtl
fistl
xchg
lods
fnsave
pusha
aaa
add
mov
sub
repnz
fucom
int3
mov
mov
xchg
or
popf
aam
mov
push
jl
xchg
mov
fldcw
xchg
lahf
mov
adc
and
or
pop
bound
jle
jmp
stos
add
je
rsm
pop
rclb
loop
inc
sub
shr
fldenv
mov
mov
les
sbb
rep
rclb
mov
out
call
cmp
xor
int
leave
add
lret
mov
push
cmpsb
fs
subl
aam
jnp
in
fdivl
or
nop
aaa
push
loope
push
cmp
fnstcw
pusha
push
lret
fidivrl
int
cmp
jle
mov
mov
nop
sub
sbb
outsl
pushf
push
out
fdivr
aaa
xor
push
pop
test
xor
cld
cltd
lods
dec
int
test
cltd
mov
andb
mov
sub
and
jmp
inc
push
mov
das
pop
mov
cmc
or
orl
lods
cmpsb
imul
adc
jl
adc
inc
push
inc
insl
inc
fbld
add
pop
cwtl
cmp
std
ss
out
dec
sbb
sbb
push
push
push
or
gs
inc
int
dec
and
mov
je
sub
push
mov
bound
mov
icebp
jp
repz
adc
orb
adc
add
pusha
gs
dec
sbb
mov
pop
mov
cmpsb
mov
ljmp
js
push
pop
loopne
pop
pop
sub
test
and
push
out
sbb
cmp
out
dec
fadds
sarl
xchg
fiaddl
pushf
int3
fsts
or
rcrb
jmp
inc
out
iret
xchg
loope
pusha
sbb
pop
and
xor
ret
dec
push
add
lock
mov
push
lahf
shrb
pop
in
ret
popa
in
movsb
mov
sub
adc
dec
pop
ljmp
dec
enter
sbb
jecxz
mov
mov
mov
out
dec
cltd
icebp
mov
filds
imul
jno
insb
push
sub
loopne
jns
jb
stos
in
scas
std
addl
dec
xor
add
ljmp
arpl
mov
xchg
push
jne
mov
pop
mul
jle
std
gs
sub
lret
stos
dec
fistpl
jae
pop
aad
cmpsb
aad
pop
mov
out
outsb
ljmp
jae
iret
divb
aam
sahf
loopne
cmpsl
mov
pop
mov
mov
sub
adc
in
mov
fsts
adc
test
sbb
sub
push
sbb
adc
cmp
ss
rcl
ss
lahf
ljmp
test
inc
orl
or
xchg
mov
std
xchg
std
mov
add
jo
mov
push
sub
das
dec
cmp
ret
jo
std
dec
out
call
and
sub
mov
or
push
in
enter
cmp
divl
sar
push
or
pop
xor
movsl
or
cmp
and
mov
fdivl
adc
stc
fcmovbe
les
lcall
scas
push
sbb
add
xor
les
pop
sbb
mov
ficomps
movsb
xchg
iret
cli
sub
lods
push
jo
dec
loopne
inc
insb
jmp
sub
adc
rorb
pushf
lods
push
inc
stos
stc
out
cmp
cmp
jmp
shlb
mov
push
or
fcomps
int3
or
ficomps
add
mov
jle
jle
negb
and
inc
cmp
adc
call
and
lret
add
ljmp
push
pop
ja
mov
movsb
movsb
lret
out
fxch
jae
cwtl
mov
inc
sub
jne
icebp
roll
cmp
es
data16
aaa
xchg
idivb
fistl
jo
add
xchg
jb
loope
je
shlb
les
mov
ficomps
sub
ljmp
xchg
mov
insb
jmp
jnp
dec
xchg
aas
and
loopne
cmp
shl
outsl
push
rcl
xor
jne
neg
push
pop
add
sub
mov
mov
mov
subl
sbb
mov
roll
push
loop
or
push
lods
in
popl
jo
pop
inc
fiaddl
mov
mov
inc
call
push
jmp
lret
sub
add
rcr
ffreep
or
mov
outsl
adc
hlt
sub
mov
dec
outsb
aam
adc
mov
rorb
rorl
pop
mov
ficoms
arpl
ret
rcr
aaa
pop
rorl
nop
dec
mov
insb
xor
jno
and
push
int
adc
into
mov
in
inc
xchg
ljmp
mov
mov
test
aas
lods
insb
in
jmp
ljmp
pop
jno
out
sti
add
cmpsl
push
dec
mov
and
inc
lahf
enter
ds
lcall
push
cmpsb
jno
gs
mov
mov
mov
aaa
fs
ds
stc
dec
push
lds
incb
jle
inc
or
frstor
mov
cmpsl
pop
imul
push
insl
add
mov
pop
sbb
les
add
je
fucomi
out
ret
roll
jg
enter
pusha
jecxz
push
inc
push
jmp
pop
sbb
mov
cmp
andl
fidivl
aad
test
sti
rcr
xchg
xchg
pop
popl
xchg
cltd
inc
loopne
sbb
cmp
dec
fistps
cwtl
aad
pop
sbb
adc
mov
subb
cmp
inc
pop
inc
mov
movsb
pusha
pusha
loope
mov
outsl
or
push
cld
push
xchg
gs
aaa
fldt
push
shl
jle
mov
dec
cli
in
loop
sbb
cs
test
xchg
cs
pop
dec
pop
or
sbb
or
mov
jg
or
mov
jg
sbb
stos
xor
bound
addr16
inc
mov
hlt
sti
or
jmp
xor
push
in
sbb
jnp
ds
pushf
push
and
cs
mov
insb
testb
jo
in
pop
in
push
fsubrl
dec
arpl
stos
xor
mov
or
rcl
mov
repnz
fwait
ret
js
jo
push
shrl
dec
push
sbb
lret
stos
repz
lcall
dec
mov
cmp
insb
adc
xlat
cli
mov
mov
jno
sti
cs
pop
into
iret
sbb
outsl
stos
pop
add
insb
xor
outsl
je
mov
push
cmp
movsl
push
push
add
cwtl
or
arpl
adc
mov
push
std
mov
mov
jno
ret
push
imul
cmp
scas
sub
popa
jge
push
in
mov
addb
scas
ja
mov
jae
dec
lods
pop
das
or
and
icebp
bound
cmp
loopne
mov
call
pop
pop
mov
pop
sahf
mov
inc
jb
lods
pop
into
mov
shr
jo
adc
sti
push
imul
aam
leave
into
mov
sti
lds
xor
xchg
cs
jge
push
pop
or
outsb
loopne
and
push
cmp
jns
mov
mov
cmp
ja
into
aaa
movsl
cmpsb
movsl
pop
pop
push
or
rcll
nop
arpl
ret
test
push
jl
pop
xchg
aam
inc
add
call
ljmp
cwtl
sarb
adc
arpl
mov
pop
cmc
pop
stos
xchg
ret
add
lods
xchg
iret
dec
jb
shll
je
fidivrl
into
cmp
test
inc
mov
arpl
push
pop
lahf
popaw
loope
xor
outsl
test
mov
sbb
scas
je
xchg
popf
mov
or
mov
aad
js
lret
jge
test
inc
cmp
mov
mov
imul
int
jg
mov
es
popa
mov
push
cmp
dec
pop
ret
xchg
outsb
mov
test
test
jp
mov
cmp
out
loop
aam
sbb
cmp
mov
in
push
stos
sbb
pop
ss
sub
lea
aas
mov
data16
cmp
adc
ss
lahf
rorl
jno
cltd
mov
mov
rcrb
cmpsb
xchg
xor
into
fists
ret
gs
fsts
jb
dec
or
lods
pop
inc
xor
ret
dec
leave
sbb
lock
decb
inc
add
jg
nop
mov
pminsw
jbe
test
fisubrl
popf
std
stos
or
mov
rclb
xchg
les
fstpl
ja
and
call
push
movsl
stos
add
push
mov
aaa
movsb
call
jae
sbb
jnp
mov
pop
insb
out
dec
jmp
inc
xchg
inc
sub
pop
scas
mov
in
pop
lret
mov
adc
cli
addr16
fnstcw
jp
or
negb
arpl
sub
pop
jp
push
cmp
mov
pop
test
mov
in
sarb
adc
daa
int
pushf
and
dec
or
cmp
mov
mov
inc
xor
inc
gs
jle
mov
rorl
imul
jno
test
ljmp
mov
cmpsb
push
sti
cmc
scas
inc
cmp
xor
mov
sarb
es
hlt
das
notl
data16
or
xchg
pop
enter
sar
movq
mov
sub
movl
fs
movl
movsb
or
mov
xchg
imul
mov
xor
mov
and
pop
call
pop
add
dec
adc
mov
push
adc
mov
rolb
dec
hlt
push
inc
shrb
mov
rcrb
dec
cmpsb
cmp
nop
dec
xchg
ds
push
xor
xchg
aaa
lea
xor
xor
dec
mov
aas
les
jnp
out
nop
cltd
mov
mov
and
mov
test
inc
out
sbb
pop
lods
fyl2xp1
divl
stos
pop
jle
mov
cmp
or
cs
cmp
sbb
out
aad
mov
adc
movsl
sub
cmc
int
out
cmc
add
cmp
mov
sbb
lret
iret
xchg
jb
lods
adc
bound
lea
ret
dec
mov
push
test
adc
sub
or
pop
loope
cli
rorb
push
mov
sub
jne
dec
repz
sub
cmp
cmpsl
shl
and
mov
cmpsl
inc
add
push
jl
repz
xor
outsl
xchg
out
pop
push
and
inc
xor
imul
adc
stos
popf
inc
jge
mov
mov
and
add
mov
fiadds
movsl
mov
js
dec
cmp
insl
cmp
xchg
push
mov
cwtl
ss
sub
cmpsb
dec
xor
pop
sub
sub
add
in
pop
nop
nop
ror
push
push
bound
mov
jns
icebp
sbb
mov
add
inc
cli
jmp
out
push
mov
mov
push
test
sub
mov
jo
movsb
jno
jp
js
out
jmp
gs
jae
js
sbbl
xchg
add
mov
ja
ret
add
jle
insb
push
xchg
dec
mov
jecxz
jl
or
shrl
dec
dec
cmp
sub
and
pop
stc
test
aad
mov
sub
and
fcoml
xor
xchg
stc
jmp
inc
push
test
xchg
cmp
fcomps
hlt
pop
pop
adc
jl
es
test
pop
sti
jl
add
push
test
ja
inc
sahf
fstl
jne
out
lea
dec
jne
cmp
add
sub
dec
pop
aam
in
and
cmp
imul
push
test
add
jp
mov
sarl
mov
xor
mov
popa
in
shrl
aaa
jne
mov
cmpsb
sbb
lcall
pushf
push
sub
pushf
pusha
adc
xchg
test
xchg
cmp
sub
xor
push
mov
xlat
cmp
sbb
jge
inc
jns
test
sbb
xchg
outsl
jno
pop
fwait
inc
dec
fidivrl
jl
push
jno
xor
adc
jo
sub
aaa
dec
outsl
mov
lds
inc
js
xor
mov
fstpl
ret
clc
fnstcw
nop
negl
mov
cli
int3
pop
push
mov
enter
push
add
cmc
or
push
mov
inc
jle
dec
aaa
fiadds
lea
cmc
dec
test
aas
mov
arpl
cmp
shll
xchg
jl
int
cmp
fistpll
mov
arpl
or
and
push
incl
pop
ss
mov
mov
sbbl
jle
sub
lret
xchg
fisttps
xchg
enter
test
mov
aad
std
or
pop
adc
sbb
and
out
mov
pop
test
jl
jno
mov
xchg
loop
cmp
adc
push
iret
jne
roll
cwtl
fisubs
sbb
call
and
mov
ds
mov
nop
add
or
subl
push
pop
xchg
movsl
mov
mov
mov
push
mov
xlat
mov
lea
xor
aaa
lods
jne
nop
cld
decl
loopne
push
imul
and
and
mov
and
xor
repz
cmp
add
cmpsl
push
or
ljmp
mov
inc
push
pop
test
mov
sbb
jo
pop
subb
aaa
clc
fidivl
jg
ret
pop
xchg
mov
mov
sahf
push
imul
js
jns
add
int3
xchg
adc
push
mov
scas
mov
popf
sub
push
pop
fisttpl
xor
popa
xchg
arpl
mov
push
xchg
push
ds
adc
dec
nop
loopne
mov
inc
inc
mov
sbb
jmp
fistpll
bound
pop
mov
les
dec
nop
dec
repnz
mov
and
sub
sub
js
cmp
lret
and
jg
in
cmpsb
aad
dec
jnp
jae
xchg
icebp
out
test
out
mov
and
mov
cmp
fsubrl
sbb
xor
mov
fldln2
sub
arpl
shlb
sub
push
aad
push
in
jns
and
dec
pop
cmp
push
fldt
rorb
xchg
addr16
jno
clc
cmp
divl
mov
pop
push
sub
popf
fabs
cwtl
mov
add
ror
mov
mov
repz
ds
js
test
aam
or
jnp
je
lcall
jo
inc
jne
das
xor
ret
ret
and
xchg
or
add
sbb
xchg
loopne
sbb
dec
add
cs
pop
jne
sbb
insl
push
test
ljmp
mov
aas
xor
in
xchg
inc
ds
lea
sbb
in
inc
xchg
mov
mov
test
loopne
sbb
push
sub
lret
and
xchg
inc
into
aad
ds
popa
mov
imul
mulps
test
sbb
std
xchg
es
or
sbb
xchg
insl
and
outsb
ljmp
shll
sti
mov
fsubrl
je
lret
imul
fidivrs
stc
xchg
push
sti
push
movsl
add
mov
imul
jno
fimuls
lcall
pop
mov
lret
in
sbb
and
adc
data16
pop
mov
loope
adc
push
jge
insl
mov
inc
fsub
jae
test
gs
sub
xor
mov
xor
mov
sub
jle
jecxz
jp
mov
add
lret
out
cmp
test
mov
and
push
pop
hlt
or
dec
js
in
push
or
dec
loopne
xor
inc
sti
scas
lret
loopne
in
xlat
pusha
fistps
ret
fxch
cmc
or
pusha
inc
rcl
and
dec
push
jno
das
push
inc
addr16
dec
pop
inc
push
inc
mov
pop
int
sub
push
jmp
inc
pushf
lret
push
cmpxchg
xor
clc
enter
jecxz
dec
lret
pop
sbb
cld
in
test
xlat
pop
icebp
fsubs
dec
mov
cmpl
jno
and
imul
push
hlt
movsb
or
jbe
mov
lret
dec
mov
les
pushl
xchg
xor
and
insl
fs
cwtl
ss
in
and
push
imul
sub
fbstp
lcall
int3
lds
rolb
jb
pop
lods
jmp
pop
cmp
and
xor
stos
mov
lret
sbb
push
xor
push
xchg
ljmp
sbb
je
push
push
clc
pop
inc
jp
inc
out
aad
pop
fildl
cs
outsb
sub
call
out
stos
xchg
je
mov
out
jmp
fcomip
sbb
ljmp
int3
ret
ds
jecxz
jb
and
or
in
das
add
inc
dec
sar
pop
fbld
cmp
adcl
fs
cmpb
pushf
es
push
pandn
lock
xchg
or
pop
sub
lret
shr
push
lcall
ss
test
loop
mov
and
push
sbb
orl
sub
and
push
mov
popa
sub
sbbb
ffree
dec
cmp
hlt
ds
test
lcall
leave
call
dec
sbb
jnp
xlat
test
pop
pop
dec
cs
fxtract
cwtl
or
out
push
cltd
jp
je
test
divl
inc
add
decl
adc
fnstsw
loope
xchg
xchg
sti
cmp
repnz
jbe
ret
fidivs
sarl
out
pop
std
inc
jg
andl
shr
xor
int
movaps
ret
fdivrl
enter
inc
pop
in
mov
icebp
or
add
sbb
adcl
mov
mov
xor
and
fstl
scas
sbb
mov
es
scas
xchg
jmp
and
pop
imul
sub
arpl
mov
mov
push
arpl
ret
fistpll
xchg
ficomps
sahf
mov
inc
shlb
push
jecxz
dec
jne
xchg
bound
xchg
xchg
mov
xchg
jmp
push
repz
cmpl
lcall
jb
bound
and
cltd
jmp
nop
cmpsl
leave
add
sbb
mov
mov
mov
sarl
push
fsubl
inc
mov
add
ret
inc
lock
xchg
mov
jmp
int3
push
outsb
scas
adc
dec
movsb
dec
scas
fsubs
nop
ja
in
cmp
adc
sbb
shll
addr16
jnp
mov
add
jbe
out
xchg
rol
inc
nop
fwait
pop
mov
lahf
sub
push
jne
scas
push
pushf
sub
xchg
outsb
adc
cmp
loopne
fs
push
dec
ja
cmp
in
mov
jmp
sti
lods
incl
push
test
outsl
scas
mov
cmp
xor
cmp
inc
test
int
and
pusha
push
repnz
gs
pop
sbb
scas
mov
jmp
rcll
or
add
mov
pop
iret
jmp
cmp
dec
adc
or
popa
aaa
mov
hlt
pop
add
loopne
gs
mov
push
ffreep
andb
fwait
ds
hlt
jne
js
mov
sbb
repnz
mov
lds
mov
pop
test
mov
in
call
xchg
adcl
inc
orb
int3
loopne
push
movsl
push
lods
std
movsb
jae
sarb
loope
push
ret
insb
aad
rcr
sub
loope
leave
pop
pop
xchg
rcrb
xchg
and
pop
push
fidivl
ficomps
and
push
ljmp
enter
rcr
testl
jne
shlb
arpl
pop
std
insl
inc
hlt
ja
lods
ja
dec
or
outsb
lock
in
fbld
add
popa
or
dec
inc
pop
jb
add
jmp
mov
and
xor
test
add
aaa
movsb
sahf
into
xchg
mov
push
pop
sbb
mov
fiaddl
lock
push
sub
and
sbb
pusha
pop
aaa
mov
sub
test
leave
lahf
mov
sbb
pop
adcb
sub
inc
mov
jae
mov
mov
mov
xchg
xor
cmpsb
push
out
dec
sbbb
rclb
ds
xchg
push
test
push
stos
sub
sub
test
insl
jb
and
fsubrs
dec
jl
rcr
out
mov
lret
daa
mov
jecxz
inc
loopne
mov
fbld
jnp
mov
adc
mov
daa
xchg
xlat
dec
iret
jg
push
mov
cltd
add
das
leave
mov
jle
cmp
cmpsl
mov
addb
je
mov
jg
push
mov
mov
jno
int
into
imul
jb
insl
pop
shl
in
mov
pop
mov
mov
les
imul
sbb
test
adcl
pop
inc
stc
xor
dec
addb
out
adc
lret
test
gs
popa
inc
data16
xchg
icebp
fbld
mov
lret
in
and
push
icebp
pop
jle
popf
aam
call
popa
sarb
dec
mov
and
sub
int3
cs
xor
sbb
mov
clc
and
les
mov
mov
jnp
push
js
fnsave
mov
imul
mov
xchg
adc
pusha
fidivs
and
scas
ljmp
scas
mov
pop
and
jnp
loopne
mov
push
aad
movsb
sub
xchg
clc
mov
roll
and
cli
pusha
push
jp
mov
popa
repz
mov
adc
push
lret
dec
scas
stc
xchg
shr
xchg
mov
lock
clc
inc
cltd
loop
mov
insb
mov
inc
sbb
dec
mov
pop
mov
and
pop
pop
pop
movsl
xchg
push
fistpl
and
and
jbe
bound
nop
inc
jno
dec
and
movb
dec
mov
pop
aad
fdivrl
mov
cmpsl
sbb
fistps
jl
imul
sub
dec
ret
out
inc
xchg
add
pop
shrl
lods
subb
cltd
in
inc
cmp
fwait
cwtl
ss
scas
xchg
xchg
pop
cmp
xchg
add
inc
shlb
pop
mov
mov
lds
in
outsb
lock
ss
xchg
add
fidivs
xchg
rcl
ret
inc
mov
inc
pop
psraw
int3
jbe
ds
loope
mov
insl
push
lret
aam
mov
inc
add
ds
rorb
sbb
cmp
cmp
or
pop
pusha
addl
ds
push
fldt
mov
ds
lcall
mov
out
cmp
mov
idivl
in
sbb
outsb
mov
test
push
repz
stc
push
dec
mov
jl
adc
in
and
jl
insb
push
outsl
jno
xchg
xor
sbb
sbb
in
dec
cmovs
repnz
iret
xchg
sbb
inc
iret
mulb
or
enter
jge
adc
aaa
mov
mov
mov
rol
ret
ficomps
divb
dec
inc
movsb
adc
arpl
loope
popa
rcrb
pushf
cmp
ja
mov
mov
push
dec
inc
rcr
fstl
push
jae
mov
adc
adc
jb
fisttps
sbbb
sbb
test
xchg
jle
lock
lock
ret
mov
xchg
fsubp
leave
mov
jb
jno
cs
xchg
test
sub
mov
in
dec
jno
jp
xchg
orl
ret
xchg
out
movsb
sub
aaa
push
testl
mov
les
stos
outsb
mov
adc
outsl
jle
jbe
ds
sahf
gs
and
mov
nop
out
and
adc
lock
mov
mov
pop
ss
jmp
xchg
jle
gs
inc
inc
push
sti
jae
add
nop
sub
xor
popa
and
sarl
xor
out
xchg
mov
add
and
js
sub
dec
mov
jl
mov
adc
div
and
jb
cmp
adc
cs
mov
pop
jecxz
inc
push
fbld
push
jp
push
outsl
push
sub
pusha
fs
mov
xchg
mov
ds
jge
mov
push
shll
pop
insb
push
pop
or
xorb
jecxz
add
cmp
fstpl
mov
sbb
scas
movsb
rclb
shr
inc
rcl
jno
nop
sub
iret
and
push
sbb
leave
insb
insb
punpcklbw
mulb
movsl
insw
dec
mov
mov
call
jg
xchg
or
jnp
lcall
jmp
xchg
xor
daa
xor
mov
cs
jbe
insl
mov
lcall
pop
std
shlb
push
mov
jnp
cld
subl
lret
popf
pop
insb
lods
jns
loop
shll
mov
mov
fnstcw
nop
xchg
xor
in
push
insl
int
add
xchg
jnp
in
cmp
into
lcall
cli
or
add
inc
lcall
popf
mov
dec
adc
jae
inc
ds
les
mov
imul
ja
mov
pushl
in
xor
ja
stos
pop
pop
cmp
ljmp
jp
pop
notl
add
fldt
mov
sub
leave
cli
jge
jnp
mov
push
int
sbb
inc
mov
add
dec
cmp
pop
cmp
jmp
arpl
xchg
dec
rclb
pop
jmp
sbb
jecxz
pushl
into
mov
aad
rorl
scas
cltd
push
jg
hlt
sti
lea
adc
sub
cmpsb
ljmp
cmp
sbb
add
hlt
inc
mov
add
testb
out
popf
lds
mov
lret
add
adcb
es
xchg
sbb
sahf
jle
scas
fsubs
in
jnp
lock
sbb
xor
pusha
lret
fnstcw
lret
mov
ss
push
clc
orps
out
repnz
imull
push
jne
stos
xchg
movsl
jl
subb
xor
mov
jmp
stc
mov
clc
popf
outsl
mov
or
cmp
mov
and
test
repz
cmp
rolb
mov
stc
es
xchg
inc
push
push
rcll
mov
outsl
sarb
push
sbb
shrb
mov
cmpsb
repz
fcoml
dec
add
js
sbb
lret
rclb
cmp
inc
jae
in
pop
rolb
inc
fiaddl
xor
cwtl
jmp
int3
filds
popa
in
lds
mov
push
andl
jle
xor
mov
arpl
call
sub
dec
stos
xchg
cvttps2pi
dec
rcll
adc
scas
mov
aad
int3
or
push
sub
add
dec
xor
sbb
and
leave
xchg
inc
xorl
scas
int3
inc
sti
jecxz
mov
mov
push
adc
das
lock
mov
loopne
sbb
fmul
xor
fnstsw
xor
in
add
mov
sbb
xor
mov
outsl
loope
ss
xchg
stos
mov
and
rol
dec
aam
push
fisubrs
in
push
cmp
mov
mov
sbb
mov
cmc
jb
ds
sub
cld
add
ja
dec
mov
jno
sarb
fildll
adc
sub
inc
fdivrs
rcl
lods
sub
or
out
fcmovne
mov
inc
ss
out
stc
shlb
sti
les
into
fildl
lea
sub
sub
inc
movsl
test
repz
jmp
jg
mov
pusha
push
add
lds
cmpl
shll
push
fwait
jmp
push
pushf
mov
jp
pushf
sub
pushf
sbb
xchg
test
out
mov
jmp
xchg
mov
pusha
dec
add
cmpsb
jmp
or
adc
add
push
mov
xchg
ljmp
or
cwtl
mov
push
addb
cmpsl
mov
and
mov
lds
inc
and
subps
push
cli
sub
cmp
loope
mov
cmp
fisubl
sub
and
int
std
sbb
adc
pop
or
jbe
sub
stc
call
sbb
int
push
push
xchg
and
fstl
jmp
push
mov
cmpsb
add
int3
xor
movsl
jno
imul
mov
jmp
in
fcmovne
sub
repnz
xchg
mov
std
pop
jbe
nop
mov
or
jecxz
lea
cwtl
addr16
daa
frstor
call
test
mov
pop
popf
pop
lock
cmp
test
cmp
int
je
fwait
into
sub
out
pop
jl
mov
mov
xchg
lods
cmpsb
inc
rcl
idivl
jmp
adc
mov
jnp
lea
mov
out
imul
inc
arpl
cltd
nop
dec
aad
out
es
cs
xchg
cld
adc
xchg
ret
inc
aaa
xlat
and
inc
xlat
sbb
or
ljmp
addr16
sbb
insl
cwtl
in
mov
ficoml
xchg
out
popf
adc
scas
data16
adc
pop
push
and
mov
xchg
mov
jmp
gs
xor
sub
jae
popf
sgdtl
hlt
jnp
xor
or
lret
and
nop
dec
mov
sub
loopne
rolb
pop
mov
mov
jmp
mov
pop
sbb
fs
nop
repnz
movhps
sbb
pusha
xchg
jle
cmp
and
pop
mov
insb
fstpt
out
aad
mov
sbb
jne
lea
push
push
xor
pop
or
inc
xchg
inc
push
adc
sbb
xor
pop
mov
ret
stos
scas
mov
adc
in
jp
mov
hlt
add
jno
mov
pop
lods
inc
pushf
cmc
inc
sbb
jae
add
dec
cwtd
in
push
mov
adc
mov
sub
cs
in
movsl
ljmp
mov
mov
imulb
pop
addr16
sahf
mov
neg
push
push
jb
es
push
push
test
insl
and
lret
push
adc
les
pusha
jae
loopne
andb
add
dec
fisttpll
add
popf
push
xchg
mov
mov
aam
or
cmp
or
test
daa
loop
out
pop
faddl
mov
and
mov
xchg
adc
push
mov
sti
das
ljmp
fdiv
imul
and
arpl
hlt
adc
xor
inc
fisttps
repnz
aad
mov
rolb
dec
imul
out
nop
mov
pushf
dec
sti
cmp
jmp
adc
cltd
dec
into
icebp
lods
sbb
sub
jl
in
push
nop
push
push
sub
sbb
iret
popa
inc
mov
mov
adc
in
popa
cwtl
jle
sar
sub
or
push
dec
add
jp
test
int3
pop
push
push
aas
test
mov
loope
xchg
push
and
and
sarb
dec
sbb
pop
fdivrs
push
adc
dec
pop
mov
mov
clc
shl
pop
xor
sbb
lods
dec
wbinvd
movb
adc
mov
sub
jg
jno
out
flds
call
mov
lcall
daa
and
sub
fs
movsl
filds
sub
mov
test
imulb
xor
pushf
pop
inc
test
fstps
inc
jmp
adc
cmc
cmp
adc
lock
add
sbbb
jg
push
inc
stos
jb
push
adc
xor
sub
and
push
xchg
push
or
mov
jbe
ret
pushl
add
adc
inc
push
movsl
pop
stos
mov
mul
xor
scas
imull
loop
xadd
and
cmp
pop
jno
jo
jl
movsl
add
jae
add
cld
or
es
mov
scas
or
sahf
push
repnz
dec
in
xchg
scas
jnp
stc
xor
push
fstl
inc
inc
xchg
shll
add
pop
decl
push
cmpsl
into
out
nop
das
cmp
push
scas
pop
das
xchg
decb
dec
mov
roll
push
loop
into
add
lcall
icebp
or
adc
add
int
fstps
or
pop
clc
orb
ret
dec
lock
int
or
and
cmp
sbb
mov
mov
or
mov
inc
shrb
aad
into
loopne
das
cmc
mov
gs
shr
data16
fwait
rorb
rcrl
in
clc
daa
fs
pop
lds
push
rol
pusha
in
lea
push
xchg
fldcw
ja
sbb
imul
repz
repz
hlt
push
push
loop
sahf
cmpsl
mov
mov
scas
mov
dec
sub
xlat
sbb
mov
enter
popf
xor
or
mov
or
xor
mov
pop
repnz
adc
cs
call
push
test
mov
or
pusha
mov
cld
jecxz
addr16
push
insl
stc
add
call
aas
push
inc
aas
add
rcrl
mov
in
mov
sbb
xor
cmp
call
add
jmp
pop
loopne
add
pop
mov
lcall
in
stos
js
mov
and
adc
call
stos
js
adc
mov
jnp
call
mov
ja
mov
ja
jg
or
jno
or
pop
dec
popl
in
or
or
or
add
adc
pop
add
jo
adc
cs
dec
sub
loope
push
cli
sub
and
mov
mov
inc
in
outsl
mov
test
test
out
xor
adc
dec
cs
mov
sub
fadds
mov
loope
or
or
std
push
enter
inc
insl
pop
mov
fcomps
sub
sbb
insb
sbb
dec
sbb
lds
dec
sbb
sbb
test
aad
shl
adc
xor
adc
fwait
movsb
notl
movsl
out
mov
adc
shlb
mov
jne
sbb
out
push
fsubrl
int3
mov
push
push
xchg
movsl
daa
pop
or
adc
lahf
ficompl
dec
fcompp
ficoms
or
aad
movsl
mov
cmp
mov
xlat
inc
mov
orb
and
movaps
addr16
mov
in
fnstenv
inc
sti
cmp
mov
loopne
push
inc
pop
fisttpll
decl
and
ficompl
or
scas
cmp
jno,pt
inc
xchg
mov
dec
pop
cmpsl
sub
mov
mov
cmp
inc
xchg
push
mov
loope
into
cmp
jmp
sub
xor
xchg
rcrb
lahf
inc
and
sbb
xchg
xchg
daa
fs
out
testb
stos
pop
pop
cli
lret
out
repz
mov
fmul
nop
push
fcom
push
jl
mov
adc
xor
mov
fsts
int
outsl
orl
pop
in
into
dec
and
dec
jmp
push
in
sarb
out
ficomps
jo
mov
test
out
cmp
inc
loope
sub
cltd
push
sub
and
test
sarl
inc
pop
mov
mov
pusha
jno
std
cmp
add
sub
inc
ror
adc
and
sub
inc
sub
into
sub
mov
nop
pop
adc
gs
outsl
ret
inc
jg
js
mov
push
jno
mov
mov
loopne
je
sbb
addb
out
je
in
pop
push
shlb
test
mov
jo
jp
inc
cmp
ffreep
mov
mov
dec
repz
push
mov
lock
pop
les
bound
sbb
jmp
mov
xchg
push
int
mov
dec
pusha
aam
rorl
sbb
popl
enter
inc
insl
sbb
mov
mov
inc
mov
movsl
push
mov
idivb
in
es
es
mov
xchg
fistl
inc
insl
xor
js
push
push
fnstcw
and
jno
pop
std
adc
filds
cmpsb
mov
loopne
xchg
rcll
call
jnp
rorb
and
stos
bound
jne
dec
movsb
push
pop
out
and
aam
mov
out
add
jns
jp
cs
cltd
xchg
jbe
fcmovbe
add
out
sbb
dec
add
push
mov
scas
add
pop
cmp
pop
and
jns
sub
imul
fisubl
add
iret
dec
and
scas
push
inc
shll
imull
sub
push
jge
outsb
cmp
minps
adc
imul
xor
sbb
pop
mov
add
push
in
aaa
ss
push
test
push
aas
pop
mov
xchg
stc
sti
xor
inc
cmc
ss
inc
mov
sub
mov
or
xor
into
add
ret
dec
pop
jmp
dec
orb
xchg
adc
xchg
sahf
aas
cmpsl
js
gs
les
jge
sub
ficomps
inc
ljmp
fadd
and
stos
gs
sub
loopne
xchg
insb
inc
je
pop
inc
jge
cld
fisubrs
cmp
das
nop
xchg
imul
scas
lock
or
icebp
xor
inc
adc
fsubp
push
and
cmpsl
mov
clc
lds
push
sbb
js
lret
adc
jmp
and
icebp
mov
out
push
in
lret
push
lea
dec
add
shl
das
dec
and
daa
adc
test
mov
loope
xchg
call
iret
mov
lret
and
xchg
xchg
xchg
daa
sbbb
test
dec
xchg
inc
mov
dec
lret
pop
hlt
cmp
cmpl
pop
ret
sub
mov
sbbb
stc
pop
nop
rcpps
sub
fwait
sub
jno
das
test
push
push
sbb
xlat
pop
lcall
xor
pop
sti
mov
add
xchg
dec
out
jle
scas
add
push
cmp
lock
dec
sbb
xchg
imul
push
or
push
icebp
test
sti
lds
aam
mov
imul
imul
lahf
fildl
stos
push
inc
cltd
cli
out
jge
mov
sahf
cmp
lods
jle
ljmp
adc
cmpsl
pop
push
xchg
popf
xchg
xchg
mov
push
ret
lods
push
arpl
push
call
or
sub
enter
stc
pop
push
ljmp
lods
or
lea
dec
lods
mov
inc
shr
adc
les
testb
div
jbe
mov
adc
out
repz
xor
jg
pminsw
daa
clc
ficoms
sbb
sti
add
in
mov
ficomps
lods
mov
mov
xor
jecxz
stc
mov
inc
mov
aaa
testl
lods
push
push
sub
add
xor
mov
popa
and
inc
push
push
adc
lea
pop
xchg
xlat
popa
jo
outsl
divl
mov
xchg
lea
or
sbb
shll
adc
adc
add
cli
fcmovnbe
inc
pushf
jp
xchg
jmp
sub
rcrb
push
jnp
sbb
mov
or
pop
mov
pop
fs
xor
adc
fstl
lret
repnz
sub
jae
xchg
aas
fildl
enter
out
imul
pop
mov
pushf
test
ret
fldcw
ja
push
outsl
pop
sar
mov
xorb
lock
adc
sbb
mov
mov
pop
dec
cli
xchg
mov
mov
scas
nop
cmp
sub
xorl
xchg
push
sti
adc
cld
sub
cmp
cmp
movb
jns
mov
cli
mov
mov
cmovno
push
cmp
cmc
jecxz
or
mov
or
enter
jns
pop
dec
test
stos
dec
loope
scas
mov
data16
insb
bound
xchg
sub
test
in
popa
jno
cmp
jge
dec
repz
iretw
aaa
fwait
in
lds
sbb
sub
xchg
mov
dec
dec
cmp
out
xchg
xchg
mov
lds
mov
jae
data16
push
shr
adc
loop
clc
aaa
push
xchg
inc
pop
adc
stos
mov
pop
insl
hlt
pop
int3
jo
mov
lods
or
xchg
cmp
enter
mov
jns
pandn
pop
xchg
fisubl
loop
cli
sahf
xor
in
pop
rorl
pop
mov
sti
pop
push
jg
popa
mov
test
mov
mov
pop
mov
notb
scas
mov
daa
mov
in
testl
mov
mov
aam
lds
or
fstps
add
sbb
stc
test
js
add
in
inc
sti
push
test
and
mov
out
clc
lcall
dec
mov
repz
shlb
inc
out
push
push
shrl
mov
cs
mov
fadds
mov
int3
in
scas
loopne
stos
je
adc
fdiv
arpl
pop
les
in
and
push
clc
movsl
cltd
push
pusha
xor
into
jo
or
jne
movsl
loope
out
cmp
paddq
imul
adc
movsb
enter
or
push
mov
inc
or
dec
arpl
or
leave
cmc
or
mov
and
push
loopne
in
xor
lret
daa
jl
fldcw
and
mov
cmp
test
inc
adcb
cmp
test
jp
daa
mov
es
cmp
push
js
push
push
xchg
fiadds
sbb
loop
inc
sub
add
shrl
xor
stos
rclb
daa
mov
popa
sub
aam
mov
xlat
testl
test
fdiv
addr16
adc
addr16
and
mov
push
imul
mov
jge
fidivrl
popa
mov
mov
mov
rol
dec
adc
inc
popf
ds
add
test
ja
ret
outsl
and
adc
xorb
nop
fcomps
xor
pop
cltd
push
inc
cli
xlat
xor
imul
pop
sbb
lret
cmpsb
sahf
cltd
repz
push
das
dec
inc
rcll
cmp
das
je
sbb
jge
push
out
aad
sub
or
stos
pop
pop
call
les
inc
lret
in
mov
add
mov
lahf
lret
lods
ret
sbb
pop
mov
sbb
pushf
ds
xchg
test
movsb
jge
shrl
sbb
mov
mov
insb
sub
repz
xor
ja
shlb
sbb
mov
decb
cmp
push
inc
es
ds
insb
loope
inc
test
xor
fwait
cmp
enter
xchg
mov
mov
jns
cltd
push
repnz
pop
cmc
mov
mov
dec
inc
jge
sub
sbb
popf
inc
aas
ja
xchg
add
nop
ret
ror
push
aas
cmc
mov
adc
mov
movsb
icebp
inc
scas
xchg
aaa
or
hlt
jmp
mov
cld
adc
lret
push
xor
cmc
add
fwait
aas
jns
dec
push
and
stc
add
ljmp
int
lahf
iret
aas
cmpsb
sbb
sti
xchg
sbb
popa
negl
mov
nop
inc
and
rorb
push
xchg
mov
xchg
add
mov
lods
pushf
pusha
fnsave
adc
pop
sub
arpl
xorb
insb
pop
jecxz
xor
mov
inc
pusha
inc
mov
jns
xchg
fimull
pop
sbb
and
mov
fwait
sub
stos
lret
and
pop
push
fcoms
jge
pop
les
pop
rcr
or
push
mov
nop
mov
mov
stc
mov
sahf
mov
int
outsb
fdivl
pushf
adc
jp
mov
xchg
xchg
xchg
inc
inc
dec
xor
lods
nop
in
dec
xor
add
xchg
movsl
ret
repnz
loop
test
in
pushf
cmp
jecxz
rolb
xchg
imul
mov
mov
fidivs
push
test
or
ds
mov
fstps
das
lahf
push
pop
popa
leave
aas
pusha
cs
fdivrl
test
sbb
lods
mov
inc
rcrb
imul
lds
outsl
ds
dec
push
sahf
mov
cmp
stos
lds
es
jge
pushf
push
data16
push
cmc
push
or
pusha
dec
mov
mov
in
imul
in
sbb
push
mov
lret
push
push
sbb
in
xchg
loope
sbb
inc
pusha
outsl
or
stos
jmp
jecxz
andl
push
fisttps
mov
repnz
jl
std
repz
dec
sahf
cli
andb
push
in
decl
inc
clc
cmpsl
cmp
lock
imul
dec
sbb
push
pop
adc
adc
rorb
sti
mov
fistpl
ficomps
pushfw
pop
pushf
cs
adc
popa
inc
out
cmpsb
push
insb
pop
repz
adc
xchg
push
jge
lods
filds
mov
xor
es
movb
in
popf
pop
or
xchg
sbb
mov
sti
enter
xchg
pop
sbb
jg
je
mov
mov
fsubl
xchg
push
pop
aaa
mov
dec
mov
sub
pop
pop
push
mov
in
repz
bound
cmc
sub
negb
leave
push
cmc
inc
dec
mov
leave
call
push
jmp
dec
cmp
rcll
mov
mov
xor
cmc
ret
jb
mov
sbb
out
mov
testb
insl
test
mov
cmpsl
push
call
clc
fcoms
xchg
lods
jmp
pop
movsb
mov
jns
mov
push
inc
xor
adc
push
push
and
dec
sub
insb
test
mov
adc
cmp
mov
test
jb
cs
inc
test
xchg
int
pmulhuw
loopne
mov
inc
pop
scas
mov
and
testb
sahf
add
mov
jae
xor
mov
mov
fnstcw
stos
xor
rolb
sub
mov
cmpsl
iret
push
pop
iret
fwait
test
pop
movsb
cld
pop
and
fisubrl
dec
test
out
out
xchg
jae
inc
push
sub
add
fwait
fs
fstps
mov
pop
popf
pop
out
push
lahf
lds
lea
cmpsl
add
push
pushf
jecxz
fldt
fstpl
fstpl
fsubrp
das
sub
cmp
dec
pop
sub
push
test
mov
sub
jmp
aaa
mov
insb
std
cltd
push
add
sar
ja
cmp
hlt
add
xchg
mov
jns
mov
add
filds
sarl
mov
enter
jge
or
add
cltd
push
dec
fucomi
ljmp
js
dec
popa
pop
ss
into
mov
into
ret
adc
daa
mov
ds
mov
ljmp
sarl
insl
dec
dec
adc
fimuls
out
or
roll
mov
fldcw
mov
dec
sbb
outsl
stos
ret
or
insl
push
fcompl
xchg
stos
fs
fldcw
out
lret
cld
cs
xorl
les
jmp
sbb
push
ret
or
bnd
inc
test
addr16
pop
xor
mov
add
mov
xor
sub
call
or
cs
lock
push
sar
xchg
call
mov
mov
ljmp
std
pop
ror
dec
xor
iret
mov
jg
add
in
mov
xchg
jg
out
shll
sti
mov
xchg
xchg
test
out
jb
cmp
inc
loope
shlb
add
mov
cmp
sub
addr16
xor
pop
out
enter
bound
push
outsl
stos
movsl
test
mov
jl
xor
pushf
frstor
daa
sub
cmpsl
rclb
aam
xorl
iret
fdivr
jge
mov
add
call
outsb
pop
daa
pop
lret
mov
into
add
pop
pusha
mov
cmp
in
jecxz
mov
lret
push
sbb
sbb
sbb
in
aad
sub
ficoml
das
mov
sub
lods
adc
lods
mov
cltd
xchg
orb
dec
xchg
cmp
or
aas
outsb
or
jp
test
push
or
or
xlat
fiaddl
inc
fisttps
mov
add
or
ret
dec
popa
mov
mov
mov
mov
jecxz
mov
imul
jmp
loope
sub
jbe,pt
out
movsb
dec
jle
lods
sbb
add
stos
sbb
jecxz
test
jecxz
lds
cmp
nop
insb
xchg
cmpsl
int3
sbb
stos
push
push
fistpll
cld
aam
xlat
shl
adc
sbb
int3
xlat
cli
mov
jb
mov
lret
adc
jbe
insl
push
sbb
mov
dec
test
repnz
stc
test
inc
dec
dec
pusha
out
mov
pop
ja
in
in
sub
lods
mov
out
jae
fmull
inc
push
subb
sbb
testb
mov
fldcw
in
pop
and
ljmp
sub
jb
hlt
movsl
jle
andb
cltd
nop
mov
inc
aam
popa
adc
inc
jne
pop
push
gs
bound
add
popa
push
pop
push
ss
mov
fldl
mov
sub
jb
mov
stos
pop
push
adc
clc
andb
mov
add
imul
fsubs
mov
lret
ret
and
lahf
iret
fimull
sahf
aad
xchg
cmpsl
push
adc
or
les
adc
data16
mov
pop
dec
mov
test
cwtl
dec
iret
dec
push
ret
cwtl
xchg
outsl
call
pop
xlat
and
shll
in
push
mov
out
lds
add
mov
jle
rcrb
in
je
dec
cmpsb
jo
mov
or
fistps
sub
fnstenv
push
sbb
mov
iret
mov
pusha
nop
out
xchg
mov
push
loopne
cmp
cmp
inc
jle
pushw
lret
js
push
rcrb
mov
dec
push
inc
loop
mov
fiaddl
cwtl
add
push
add
fildl
mov
andb
mulb
xchg
mov
out
jbe
out
adc
out
enter
pop
mov
mov
mov
int3
sub
sarl
mov
xor
icebp
sub
in
jg
stos
shlb
outsl
mov
mov
jbe
pop
xchg
mulb
add
data16
and
jge
enter
imul
dec
out
inc
icebp
arpl
xchg
push
lahf
cmpsb
enter
fbld
mov
mov
cmp
lods
adc
mov
mov
aaa
xchg
xor
adc
xchg
popf
inc
mov
inc
lea
push
jp
enter
dec
int3
dec
icebp
xlat
hlt
dec
mov
nop
jbe
lods
dec
push
adc
push
xchg
rclb
xchg
out
lods
mov
sub
mov
ret
push
add
daa
xor
sarb
lahf
add
stos
pop
sbb
int
fwait
repnz
dec
jmp
mov
push
icebp
jo
sbb
shrb
rcll
or
fnstenv
mov
rcll
ljmp
mov
in
in
adc
je
sbb
sub
cld
xor
pusha
js
test
dec
and
cmp
mov
or
sbb
out
cs
data16
scas
fstp
xchg
dec
aam
dec
fisttpl
pop
repnz
popf
jnp
add
push
sahf
sbb
mov
xor
scas
cld
mov
mov
lahf
jno
movntps
xchg
inc
fidivrl
sub
add
in
std
mov
stc
loop
pop
pop
lret
dec
addb
xchg
jge
pop
jne
inc
jg
roll
add
xor
cmpsb
outsb
mov
mov
pop
cmp
iret
out
lods
xchg
pop
ret
test
jns
pop
cli
ficompl
mov
test
aaa
sahf
jno
stos
sub
lret
push
mov
fstl
out
mov
adc
ljmp
adc
hlt
bound
fbstp
mov
jg,pt
pop
movsl
stos
jp
lahf
int3
jmp
lds
push
subl
lea
dec
cltd
cwtl
pop
adc
sbb
pushf
mov
jle
pop
and
jp
add
sbb
mov
jb
cmp
punpckhwd
add
cmc
mov
test
hlt
lock
leave
jno
cmpb
cmp
cmp
push
ja
jnp
jmp
jmp
pop
fbstp
pop
js
sbb
call
lret
hlt
xor
inc
popf
adc
xchg
and
push
in
in
mov
adc
or
fsubl
sub
fisubrl
outsl
cmp
lret
arpl
js
and
or
aam
popa
mov
cmp
inc
test
push
jns
and
cmp
mov
push
sbb
and
cmp
sbb
es
cs
jns
add
in
stos
ficomps
insb
mov
cmp
idivl
stos
jbe
push
pusha
lcall
lock
xlat
rorl
push
mov
cmp
mov
pop
adc
dec
cmp
dec
out
cmc
push
push
popf
sbb
cmpsl
add
or
insl
les
dec
loopne
pushf
lahf
add
enter
sub
and
mov
scas
dec
dec
movsb
cmp
enter
or
lahf
add
std
out
jp
out
jl
test
jmp
loop
sarb
push
jp
pop
pusha
into
add
faddp
adcl
js
gs
iret
pop
add
xchg
mov
push
fbld
jb
fcompl
paddb
rcrb
mov
jp
jns
scas
test
insb
in
fistps
jns
bound
inc
xchg
aam
into
out
test
dec
mov
add
inc
cmp
xor
dec
push
jmp
inc
push
pop
sub
or
loope
fistl
in
dec
cmc
jg
add
dec
cmp
cmpsb
push
push
fldl
xorb
cmp
mov
ss
ja
mov
dec
aas
addr16
insl
in
fs
mov
ljmp
xor
push
cmp
rorl
or
dec
mov
cmp
bound
fdivs
int
int
into
jno
in
pop
mov
in
or
shrb
imul
repz
adc
in
push
je
pop
or
push
call
mov
test
jecxz
movsb
push
aas
push
test
xchg
xchg
dec
xor
sti
cmp
ret
pop
mov
insb
rcl
in
adc
sub
ret
test
out
pop
sbb
popa
xorl
adc
mov
mov
or
fsubrs
push
add
dec
cmp
loopne
repnz
int3
sbbl
sbb
jne
mov
pushf
les
xchg
adcl
inc
push
xor
mov
pop
xchg
pop
dec
xor
mov
imul
lahf
xor
dec
cmp
pop
orl
xchg
das
call
dec
jnp
pop
lret
out
mov
out
or
xor
inc
sbb
movsl
mov
outsb
fisttps
push
cmp
mov
xchg
aam
enter
pop
lcall
pop
leave
add
jp
jg
cwtl
popw
push
push
ret
or
mov
push
inc
sub
jbe
xchg
jo
ret
dec
cld
mov
test
mov
and
xchg
xor
xchg
sahf
xchg
or
mov
or
adc
jle
or
push
andl
add
xchg
cli
xchg
loop
pop
stos
lahf
pusha
test
ret
push
xchg
lods
fldt
out
repz
jl
addr16
sarb
push
xor
jecxz
xchg
test
aaa
orb
lods
pop
mov
mov
ficompl
insb
and
cmp
imul
add
add
nop
push
and
hlt
adc
xchg
add
mov
lcall
fs
add
or
sti
and
into
out
push
test
dec
jp
jp
xchg
cwtl
mov
cmp
nop
lret
cmp
cmp
cmp
or
xchg
aaa
mov
adc
lret
in
push
pusha
jl
aam
fs
mov
inc
mov
sbb
add
push
int3
scas
mov
lcall
xlat
ret
dec
imul
sti
mov
test
bound
bound
pop
add
icebp
dec
aam
add
orl
test
mov
mov
mov
dec
fildll
lock
mov
andb
inc
scas
out
mov
xorb
gs
movsl
xor
xchg
mov
ret
xchg
sbb
push
ds
or
daa
in
inc
inc
into
aam
and
mov
and
or
notl
jp
ja
mov
sub
pop
mov
sbb
add
fs
testb
sub
mov
int3
fwait
or
pop
or
sub
nop
add
push
andl
or
negl
cmp
mov
sub
push
pop
test
lds
sbb
scas
cmpl
pushf
loope
lods
je
pop
xchg
xor
in
and
loop
jg
and
sbb
aaa
insl
jo
aam
mov
push
sbb
mov
adc
and
addl
stos
test
hlt
xchg
xchg
sub
pusha
xchg
stos
adc
inc
test
inc
fdivrs
into
add
in
jmp
xchg
xor
inc
addb
inc
mov
sbb
test
push
add
sub
xlat
int
mov
jns
pop
xchg
adc
adc
inc
pop
popa
scas
push
test
push
jnp
or
iret
cli
add
jp,pt
out
outsl
inc
nop
sti
push
lret
mov
in
adc
push
jmp
dec
movsb
mov
xchg
mov
xchg
mov
sbb
in
icebp
cmpsl
fldenv
test
aad
stc
and
mov
mov
mov
sbb
rolb
ljmp
idiv
dec
test
sub
and
sub
add
pop
pop
jnp
dec
xchg
stos
and
push
adc
adc
in
cmpsl
mov
icebp
mov
sub
pop
and
add
pop
lcall
sbb
jne
call
popf
jmp
mov
in
jo
in
inc
cli
cld
ds
lea
popa
ret
xchg
mull
or
add
std
add
inc
cmpsl
shlb
gs
scas
lahf
pop
sti
mov
in
and
fistl
test
sbb
push
push
pop
jbe
fldt
mov
mov
movsb
sbbb
push
idivb
fisubrl
mov
or
push
in
test
std
fwait
sub
dec
testl
stos
out
jp
sbb
lods
daa
mov
lds
sub
mov
pop
push
stc
shlb
enter
cmp
insl
push
cmpl
push
insl
shlb
inc
mov
out
outsb
call
testl
pop
sub
jo
data16
adc
jl
jno
pop
pop
mov
mov
cmc
push
adcb
pop
sub
repnz
pop
pop
movsb
sub
adc
stos
test
cmp
mov
flds
in
shlb
xor
mov
mov
pop
outsb
andb
arpl
push
fs
xor
hlt
fidivs
in
add
jo
lds
sbb
or
sub
pop
jg
xchg
das
popa
popa
out
adc
pop
adc
adc
scas
mov
push
rcrl
sub
mov
fbstp
jecxz
fbld
dec
mov
lcall
ja
fnstenv
outsb
mov
fwait
shrb
testl
dec
data16
cli
ret
jns
jbe
push
dec
leave
into
sbb
lret
add
mov
aaa
mov
fildl
cmp
js
add
adc
outsl
mov
aam
push
lret
in
sbb
std
dec
dec
addr16
loop
or
scas
mov
lock
dec
dec
mov
movsl
mov
in
loopne
mov
jg
iret
mov
cmp
inc
xchg
loop
movsb
loop
add
jo
xchg
loopne
xor
and
mov
push
ss
out
dec
push
mov
addr16
mov
mov
int3
adc
sbb
and
ss
ret
rcr
pop
pop
js
andl
inc
jge
push
add
push
out
add
mov
cmpsb
loope
pop
rcll
insb
dec
shrl
adc
lds
push
xor
push
and
xchg
jmp
jecxz
jae
stos
sti
pop
lahf
cmc
add
inc
aad
test
js
out
add
sbb
sub
mov
adc
xor
stc
sete
sbb
or
aaa
or
das
adc
out
xchg
inc
xor
pop
inc
push
mov
jae
je
mov
push
mov
loopne
call
lret
lcall
cs
push
ds
lcall
adc
xchg
mov
sbb
push
aam
lcall
or
andb
mov
and
mov
sarl
cmpsb
and
cmp
mov
inc
dec
xchg
ss
cli
pop
ret
stc
pop
inc
mov
mov
push
pop
jns
iret
adc
cs
sbb
cld
mov
pop
push
test
cmp
hlt
adc
cmp
lret
cwtl
push
adc
mov
pop
fwait
mov
int
jmp
inc
mov
cmp
jo
inc
add
pop
iret
mov
ss
and
pop
inc
xlat
jl
cmpsb
jmp
fdivl
sub
subb
pop
cmpsb
jne
xchg
jnp
jp
jb
into
fildl
enter
cmp
or
mov
and
inc
xchg
fldpi
out
in
outsl
cltd
xchg
or
loope
jo
aam
sbb
push
inc
arpl
push
jb
movsb
pop
fldl
mov
mov
pop
jno
pop
sbb
inc
rcrb
pop
in
jge
jge,pt
int
inc
push
scas
mov
outsl
repz
mov
mov
sub
fld
arpl
icebp
in
iret
aad
loopne
mov
pop
jae
push
sbb
fldcw
pop
sahf
jge
in
jge
cmp
inc
divl
mov
imul
rolb
xchg
ss
test
sbb
adc
mov
in
jnp
sub
mov
mov
cli
fnstenv
sbbb
xchg
xor
mov
insl
arpl
mov
xchg
fldcw
xchg
outsl
insb
in
cmp
or
sub
lret
mov
popf
mov
sbb
scas
push
stos
js
or
lods
movsb
mov
mov
cs
jecxz
mov
cmp
sub
movsb
lret
inc
and
xor
xor
adc
xchg
cmp
or
sub
xor
imul
fnstsw
leave
jecxz
jmp
out
cwtl
pop
inc
in
dec
insl
push
adc
loopne
out
add
popl
inc
xchg
imul
mov
mov
shrb
mov
sahf
mov
mov
xchg
and
js
int3
rclb
mov
mov
popa
pop
paddsb
outsb
jae
xor
testl
lret
ret
adc
add
push
xor
mov
jge
inc
xchg
inc
dec
sub
and
fadds
in
in
or
jg
scas
lahf
out
mov
adc
xchg
arpl
cwtl
loop
or
roll
jne
inc
mov
cmp
dec
fisttpll
jb
lock
xor
xor
jb
fwait
or
je
pop
lret
pop
sahf
or
xchg
dec
sarl
adc
testl
call
xor
cs
mov
bound
lods
daa
dec
scas
dec
cld
cld
mov
push
jb
and
icebp
int3
scas
cmp
mov
lds
mov
mov
mov
popa
call
lock
cmp
mov
mov
vmovhps
inc
push
sahf
nop
push
pop
je
rol
add
pusha
mov
add
cmp
mov
mov
or
adc
pop
icebp
dec
add
or
add
mov
mov
test
ret
jnp
push
inc
cmp
cmp
es
inc
sbb
xchg
leave
cmp
fcmovu
in
mov
xchg
push
loopne
gs
xchg
pop
pop
stos
sbb
and
incb
fldt
divl
cmp
mov
push
mov
cmpsb
push
sub
aaa
fsubrl
push
jle
iret
pop
sbb
mov
idivl
mov
cmp
pusha
call
cmpsl
inc
sub
mov
sub
push
and
xchg
shr
inc
dec
jns
ret
adc
adc
pusha
jmp
imulb
ret
cwtl
into
mov
rcr
jnp
cmp
leave
sub
imul
fidivs
dec
enter
leave
push
dec
push
push
xlat
add
out
in
popf
aad
arpl
aas
ret
mov
pop
loop
mov
sbb
pop
jle
mov
fsubrs
std
jno
xchg
lret
dec
dec
and
pop
sbb
call
xchg
or
iret
sub
sbb
sbb
xchg
pop
sarl
insl
pop
and
xchg
popa
push
mov
in
push
sar
inc
rclb
add
push
dec
or
in
and
cs
scas
sub
insb
pop
sbbb
fsubs
add
adc
repnz
loop
add
pop
inc
adc
xchg
iret
test
int
ss
fldenv
push
repnz
jnp,pt
jnp
cmp
mov
jae
stos
adc
lea
test
mov
js
sbbb
and
pop
negb
das
mov
mov
push
cmp
orl
aam
call
xor
lret
pushf
cwtl
sub
ja
mov
int
mov
push
adc
adc
in
cmp
jnp
clc
popa
aad
sub
dec
lds
mov
jp
cltd
in
arpl
jae
xchg
loopne
pop
testb
repz
jmp
repz
sub
mov
mov
cmpsb
sub
mov
sbb
loopne
cwtl
clc
mov
xor
mov
and
xchg
adc
add
jl
stos
lcall
xor
dec
fwait
stos
pop
add
sub
push
roll
or
push
aas
and
pop
lret
inc
ret
pop
xor
sarl
int
or
gs
or
jb
mov
cltd
dec
jbe
test
push
xchg
mov
add
xchg
adc
popf
out
clc
mov
loopne
das
push
cmp
sub
sbb
push
dec
or
sub
add
ret
cmpsb
or
xor
jns
sub
sahf
cld
flds
dec
push
and
mov
mov
in
xchg
fucomi
adc
adc
ret
xor
lds
imul
push
sub
fstl
cmpsl
pop
adc
icebp
jmp
insl
xor
cli
stos
iret
add
loopne
xchg
dec
popf
add
xor
xor
mov
outsl
mov
add
scas
xor
inc
mov
xchg
jg
addr16
int
jb
pop
cmp
jge
fwait
sbb
sbb
push
push
pop
les
xor
mov
es
sbb
adc
out
xchg
mov
ja
add
cmpsb
add
mov
jg
aas
push
pop
adc
in
cld
cmp
imul
mov
loop
or
and
cmp
sbb
or
fsts
xor
inc
dec
das
mov
or
mov
jbe
les
loope
pop
in
push
pop
mov
leave
jecxz
fisttpl
mov
les
mov
lret
add
ret
fnsave
mov
sub
in
adc
jg
mov
dec
sbb
bswap
sbb
mov
or
push
add
push
imul
mov
inc
lret
out
cs
add
imul
add
pop
xchg
pop
mov
push
and
jle
popa
popa
jmp
push
sub
aad
stos
icebp
sti
lea
pop
pop
jp
sahf
dec
es
lds
lahf
adc
mov
mov
pop
inc
mov
fists
inc
inc
sbb
jbe
daa
xor
cmp
mov
jmp
testb
jo
cmp
ljmp
jns
push
lods
cli
dec
sbb
movsb
fistpl
jg,pt
mov
cmc
mov
imul
mov
lcall
mov
push
dec
ret
movsb
xchg
stos
pop
pop
test
pop
cmp
stos
cmp
push
aaa
sbb
call
ss
pushf
mov
sbb
roll
sbb
lods
cwtl
in
push
mov
mov
cmpsb
push
jnp
jb
mov
push
xchg
dec
and
and
mov
js
sbb
add
daa
in
xchg
pushf
mov
loop
cmc
cmp
xchg
clc
push
stos
cltd
jecxz
aam
mov
mov
adc
ret
repz
lret
adc
mov
rcrb
jo
jmp
cmpsb
inc
iret
sbb
testb
sub
fwait
stc
pop
in
pop
sub
sarl
xchg
xchg
out
mov
mov
mov
dec
push
jae
popa
add
and
not
mov
gs
rorl
jbe
sarl
push
subl
push
sbb
call
mov
mov
mov
inc
push
cmp
xchg
dec
fwait
out
mov
gs
xorl
add
xchg
mov
dec
inc
fidivs
lret
rclb
bound
dec
out
jo
int3
cmpsb
cmp
push
adc
xor
dec
fisubrs
add
mov
jmp
mull
adc
dec
mov
loope
push
daa
imul
mov
xor
cld
dec
or
outsl
cmp
insb
ds
and
ljmp
jge
dec
dec
mov
dec
add
push
addb
dec
inc
mov
ds
les
jecxz
push
sub
aam
sbb
cld
sti
icebp
or
insb
ja
out
shrl
mov
mov
je
mov
jno
cmpsb
aam
js
sbb
stos
pop
push
xor
scas
inc
sub
sub
sbb
mov
cmp
pop
scas
imul
test
jl
test
jle
loopne
test
enter
rcll
jb
adc
jb
pop
adc
push
out
mov
call
loope
dec
sbb
les
in
rclb
inc
sub
adc
xchg
mov
xor
push
adcl
mov
add
mov
jmp
cmc
in
add
ret
frstor
cmp
inc
mov
xor
lret
call
sub
outsl
sub
sbb
orb
arpl
dec
mov
add
data16
icebp
pushf
shrl
mov
sub
mov
loope
and
jl
out
loop
lods
scas
repz
sbb
push
js
sbb
fmull
cs
xor
jne
enter
ret
cmp
xacquire
cld
fwait
lds
pop
insb
push
push
mov
or
mov
out
xchg
dec
popa
adc
xchg
pop
xchg
es
mov
mov
or
and
and
outsb
jmp
jb
sub
orb
add
mov
shr
popf
pop
stc
repz
dec
fstpt
or
mov
sub
inc
fdivrl
ja
mov
lahf
fs
add
mov
cmp
stos
jnp
popf
aam
xchg
inc
cli
adc
cltd
mov
in
jp
sub
push
jne
mov
stc
push
sub
xor
cmpb
cmp
sub
pop
cmp
push
addr16
and
sbb
cmpsl
jns
jae
sub
div
inc
jmp
clc
test
sub
jns
xchg
insb
loop
pop
push
jmp
shr
and
inc
xor
movl
ja
in
test
push
mov
jge
cmpsl
fwait
xchg
lcall
dec
xor
and
dec
mov
add
dec
test
imul
dec
lret
pop
insb
adc
clc
sbb
or
clc
cwtl
dec
pop
xchg
dec
xchg
cmp
xor
mov
cmpsl
inc
iret
mov
imulb
sbb
add
pop
mov
adc
jmp
xchg
mov
mov
and
sub
outsb
out
mov
pusha
ds
xchg
in
loope
les
nop
inc
dec
xchg
mov
lods
out
repnz
das
insb
mov
xorb
arpl
jl
mov
decb
in
in
add
leave
mov
lcall
jecxz,pt
adc
add
nop
fstp
cmp
movsb
dec
loope
push
cmovle
pop
test
inc
dec
lods
jg
repz
fnsave
fdiv
mov
les
leave
xor
pusha
pop
ja
push
and
adc
push
nop
addb
test
insl
or
aad
ret
mov
xchg
fnsave
dec
pop
xor
lods
mov
or
cmpsl
out
scas
out
xchg
lock
add
outsb
push
xchg
pushf
dec
repz
pop
fst
aam
cwtl
xchg
jp
sbb
lds
cmp
dec
mov
push
fsubrs
fistpll
mov
loop
cmp
loope
roll
lret
pop
adc
imul
mov
in
loop
cmpsb
pushf
add
add
nop
gs
push
cmpl
js
imulb
xchg
mov
jmp
cmc
push
mov
lods
dec
inc
in
cld
cltd
enter
scas
add
dec
pop
jp
fistl
xor
cs
jl
add
stc
pusha
lea
aaa
cmc
inc
mov
dec
cli
xchg
lock
jb
lods
push
mov
jmp
jb
cmpsl
pop
mov
push
subb
sub
and
xchg
stos
idivl
dec
xchg
insb
mov
xchg
mov
dec
mov
aam
cld
sti
jnp
xchg
por
fiadds
inc
loop
test
in
sahf
fsts
ss
mov
stc
push
nop
xor
addb
enter
xchg
jge
dec
clc
push
movsl
mov
and
sub
stos
xchg
shl
push
cmc
rorb
lea
jp
popa
or
pop
fcom
pusha
ljmp
lods
push
fwait
into
add
dec
insb
mov
push
inc
in
fst
xor
inc
in
ja
in
pop
fdiv
sar
stos
cmp
push
xchg
or
sub
pop
bound
sbb
jp
sub
repnz
inc
inc
rclb
mov
mov
jmp
xchg
push
mov
ret
cmp
lds
push
inc
stos
pop
jle
mov
fldl
out
cli
sub
add
int
adc
add
mov
stc
cmp
lea
rorl
lods
adc
add
jo
jecxz
sbbb
in
movsl
dec
add
push
xchg
sub
xor
movsb
loopne
insb
in
xor
js
xchg
push
pop
scas
lahf
mov
xchg
xchg
push
push
fcomip
pop
push
sbb
call
popa
pop
sbbl
std
ds
jmp
xor
notb
sub
sub
movsl
addb
and
add
sbb
icebp
aas
roll
and
ss
mov
stc
fwait
and
ffree
ljmp
icebp
cmc
xor
neg
or
adc
nop
mov
pop
aas
es
addl
mov
cli
dec
jns
mov
inc
or
lcall
pop
mov
mov
sbb
out
in
mov
or
inc
adc
into
or
dec
fadd
fnstenv
dec
rclb
and
add
push
jge
add
adc
dec
in
insb
data16
fcoml
sub
in
iret
imul
ror
add
bound
add
stos
stos
dec
jns
and
push
iret
lods
xchg
xchg
push
mov
xor
sbb
xlat
movsb
cmp
lahf
sbb
aad
fdivrp
andl
sbb
and
fcomps
jl
mov
xor
and
jae
cwtl
es
out
in
lods
repnz
test
xlat
lahf
add
mov
ja
jnp
lret
mov
xchg
fbstp
jnp
enter
mov
jns
dec
add
xlat
fists
outsl
scas
sahf
push
xchg
cmp
divl
out
popa
xor
loope
lods
jge
hlt
movsb
or
das
mov
loope
push
cli
nop
xchg
out
xor
repnz
cmpsb
lret
insb
sub
pop
adc
pop
into
adc
test
movsb
sbb
in
ret
adcb
mov
inc
jecxz
push
dec
lcall
inc
adc
mov
cmp
add
rcll
fdiv
pop
xor
imul
fwait
sbb
int
pop
pop
mov
pop
loop
push
lea
xchg
nop
into
inc
cli
cmp
mov
xchg
push
push
pop
jmp
and
xlat
dec
push
lret
dec
xor
mov
fisubl
mov
inc
lret
xlat
xchg
in
cmp
in
mov
jns
in
repz
std
jg
fnstcw
or
ret
negb
aaa
neg
xor
pop
out
insl
push
push
imul
push
hlt
cmpsl
adc
in
fnop
mov
fs
repz
jbe
ja
fdivrl
in
jg
scas
sub
dec
mov
out
and
out
xchg
mov
cmpsb
rolb
stc
call
sub
push
or
pop
outsb
sub
stos
sub
jmp
sbb
popf
gs
decl
test
ljmp
and
cs
imul
and
in
lds
sub
ja
mov
jmp
hlt
jo
leave
test
pop
ret
push
push
xchg
fnstsw
add
cmp
adc
push
repnz
push
sbb
icebp
inc
and
aas
fimull
repnz
andb
ja
aad
and
mov
cmpsl
sub
sub
xor
cmp
shll
jnp
out
sub
pop
adc
cltd
jmp
pop
jno
cs
xchg
push
xchg
inc
dec
xchg
lahf
xlat
mov
push
mulb
mov
lea
or
adc
cmpsl
mov
mov
imul
sbb
mov
shrb
pop
cmp
jecxz
mov
rcrb
out
dec
and
inc
stos
les
push
xchg
gs
adc
sub
mov
xchg
lahf
shll
loopne
sarb
pop
aam
sbb
leave
mov
inc
sub
cmp
aad
insb
mov
cmp
xchg
les
mov
add
mov
clc
add
cmp
es
add
sti
push
daa
jb
arpl
arpl
add
xchg
call
cld
repz
cltd
dec
insl
mov
aam
and
inc
sbb
add
inc
scas
dec
movl
sbb
dec
test
imul
enter
into
aas
loopne
dec
and
and
pusha
jmp
dec
lds
outsl
adc
dec
minps
push
and
bound
xor
imul
popa
in
icebp
icebp
ror
or
test
rolb
fidivl
stc
mov
orl
cmp
xor
jnp
jno
push
out
arpl
jle
push
sbb
loope
mov
shll
dec
pop
jcxz
ret
arpl
xchg
cmpb
lea
and
or
je
or
push
pop
out
pop
fdiv
mov
mov
cmc
push
sbb
add
dec
sub
pushf
orb
test
adc
les
xchg
lea
in
jmp
jle
popf
ret
cld
and
jne
out
pop
in
pop
mov
arpl
daa
sahf
add
sub
inc
dec
add
xchg
push
bound
or
mov
and
push
int3
leave
icebp
pop
jb
inc
testl
aam
jbe
fs
es
test
fwait
rorl
adc
jle
loopne
xchg
mov
lock
push
bswap
cld
in
iret
out
or
test
cmp
xchg
nop
popf
leave
push
popf
add
out
add
pop
ljmp
jnp
inc
cmp
ja
fsubrp
push
les
jne
loope
mov
arpl
adc
adc
lods
int3
fimull
aaa
rorl
in
sbbb
fwait
mov
ss
jb
arpl
in
dec
add
enter
xlat
pop
fdivl
cmpb
lods
mov
mov
shll
push
mov
in
add
loope
lods
dec
adc
mov
jl
mov
int3
cmp
rcrb
sub
mov
iret
cmp
scas
jb
std
add
pop
je
fsubrp
je
enter
sbb
jle
jp
testl
sub
cmpsl
popf
in
shlb
jp
adc
mov
mov
insl
pop
imul
add
shll
stos
loope
sbb
bound
xchg
add
adc
jae
notb
push
and
loop
lahf
repz
and
out
loopne
jle
fbstp
lcall
data16
add
inc
imul
inc
popa
sbb
xor
mov
lret
sub
sbb
mov
addr16
inc
in
push
cmp
into
jle
mov
fcmove
ss
rcrb
int3
push
mov
mov
cwtl
je
test
aas
xchg
lea
and
arpl
loope
dec
mov
cmp
and
incb
xchg
cmp
pop
push
and
add
not
cld
sbb
ret
inc
loope
sarb
add
jecxz
test
mov
adc
push
xor
sbb
xor
ficoms
jp
movsb
add
push
xlat
or
sbb
mov
insl
or
mov
scas
add
dec
sub
fs
xchg
xor
mov
aam
outsl
hlt
cmp
xlat
lds
loope
push
call
pop
movsb
cmp
pop
sub
mull
or
ja
incb
mov
frstor
add
or
lcall
stos
popa
mov
ljmp
dec
arpl
or
cmp
dec
lea
fnstenv
push
xchg
mov
mov
cmp
aam
xor
ja
mov
jecxz
dec
mov
outsl
iret
or
add
cmp
adc
jnp
cli
enter
mov
hlt
sahf
mov
sti
or
and
push
sub
cmpsb
std
fcompl
mov
add
xlat
push
adc
orb
mov
shrl
dec
push
and
inc
fmull
in
test
adcb
mov
push
scas
cmovae
stc
lods
test
cld
punpckhwd
jmp
inc
cli
fwait
aas
inc
and
mov
cmpsl
fsubs
out
int3
mov
je
or
mov
add
pop
dec
pop
mov
pop
pop
in
hlt
xchg
outsl
xor
mov
xlat
pop
xor
imul
cmp
pop
push
out
incl
jge
out
sbb
fsubrl
inc
jno
pop
cmp
mov
arpl
jmp
mov
test
mov
pop
add
sub
and
das
jg
popa
fs
push
push
out
pop
push
scas
and
jno
sub
daa
inc
lea
add
sbb
jp
loope
repnz
test
cwtl
shl
xchg
dec
ret
jnp
into
fstpl
dec
aas
test
pop
je
popa
mov
adc
sub
iret
dec
aaa
add
xor
mov
mov
addr16
xchg
or
dec
mov
dec
fisttps
daa
dec
mov
enter
dec
xor
mov
and
and
push
bound
ret
daa
add
dec
xor
pop
fimull
push
dec
loopne
cltd
jbe
flds
dec
or
daa
shl
add
and
pop
lahf
out
push
mov
rorl
addr16
dec
dec
out
cmpb
xchg
orl
nop
in
jnp
pop
dec
and
mulb
es
adc
adc
add
sarl
ret
push
cwtl
enter
adc
lret
aad
or
push
cmpsl
inc
call
loopne
cs
iret
xor
xor
cmp
xchg
popl
mov
stc
fstpt
mov
push
vdivpd
and
outsb
aaa
movsl
mov
push
xor
rolb
cli
jle
loopne
test
sbb
sbb
enter
cmpb
sbbb
dec
mov
inc
jne
mov
arpl
imul
xchg
arpl
xchg
xchg
sbb
xor
lret
push
lds
out
and
xor
mov
add
cmp
fadds
mov
xor
dec
mov
jno
xchg
pop
sub
nop
pop
inc
icebp
pop
lds
adc
fwait
aam
ss
or
fidivrl
and
adc
cld
lahf
imul
xchg
push
stos
imul
and
or
adc
push
mov
and
inc
dec
sbb
jo
jnp,pt
push
mov
repnz
lea
adc
in
fstpl
sub
fnstsw
add
lock
push
dec
stc
fstps
dec
sbb
sbb
adc
push
mov
andb
xchg
adc
int
jae
jns
sbb
push
sub
and
out
sub
int3
nop
dec
out
lock
cli
mov
cmp
xor
iret
sub
iret
mov
push
jp
leave
shlb
pop
xor
das
or
mov
jp
leave
mov
mov
jge
pop
test
test
sbbl
jb
push
adc
adcb
push
orl
jg
out
adc
daa
push
push
mov
xchg
jnp,pt
in
rol
pop
lcall
jns
fmuls
les
fsubrs
mov
inc
roll
enter
imul
ljmp
out
test
add
inc
ret
pop
outsl
mov
mov
add
mov
add
andl
popf
adc
decl
push
cltd
je
inc
out
call
sbb
bound
fiadds
out
stc
cmp
adc
arpl
add
lcall
mov
mov
or
loop
leave
push
aad
ret
iret
sbb
adc
cmc
sub
sbb
sub
lret
jns
mov
xchg
std
aad
pop
cltd
pop
cli
jno
out
or
push
leave
shll
cmp
or
xor
lds
push
aam
cltd
adc
xor
dec
test
inc
adc
jno
mov
loope
cmp
and
add
inc
push
sub
jne
adc
ret
push
enter
adc
out
sbb
pop
push
mov
and
mov
call
out
icebp
push
dec
mov
rolb
pop
ja
pop
idivb
and
je
out
fs
push
test
adc
xchg
cmp
les
mov
sub
nop
or
jmp
gs
cli
pop
adc
dec
push
dec
sub
jecxz
sub
or
adc
and
sahf
les
aam
xchg
jmp
pop
push
push
and
sub
nop
imul
stc
adc
jo
jp
iret
iret
cmp
js
push
dec
insl
xchg
push
lds
hlt
mov
negb
xlat
loop
push
int3
push
rorl
pushf
jae
mov
std
push
out
push
add
push
popf
push
mov
mov
adcb
or
inc
js
push
ljmp
cli
enter
and
aad
jmp
fistps
inc
call
add
push
mov
daa
aad
adc
push
mov
push
xchg
push
mov
mov
inc
xchg
shrl
or
cmp
push
adc
stc
or
inc
dec
jle
mov
dec
pop
mov
xchg
sbb
adc
xchg
aam
or
mov
mov
aam
pusha
inc
pushf
or
pop
call
push
mov
fwait
shll
add
adc
lret
push
jbe
cmp
sahf
test
mov
imul
stos
jl
fs
dec
dec
outsl
sub
push
dec
imul
jno
movsb
mov
mov
fcoms
push
jl
ljmp
es
pop
xchg
lds
pusha
mov
movsl
pop
dec
push
aam
dec
cmpsb
push
pop
andl
and
lds
mov
mov
xor
repz
sbb
and
cmp
add
mov
adcl
hlt
mov
ret
pop
xchg
leave
sub
sahf
movsl
xchg
call
mov
dec
sbb
jmp
mov
test
fmuls
xchg
inc
push
clc
pop
sub
xchg
add
clc
lret
mov
push
shll
cli
stos
subb
gs
ss
jle
push
dec
in
sub
cmp
xchg
mov
dec
push
jl
push
rorb
inc
adc
mov
pop
enter
sbb
mov
daa
test
dec
es
or
and
shrb
xchg
pop
rorl
push
mov
testl
shlb
dec
scas
in
add
xorl
imul
repnz
outsb
add
ja
fnstenv
xchg
sub
data16
xor
int3
adc
dec
adc
fld
mov
es
arpl
inc
or
loopne
cmp
xor
jns
in
ret
lea
adc
in
cli
adc
cld
mov
dec
cwtl
out
mov
push
mov
jne
popl
adc
jl
stos
scas
pop
or
jmp
push
repnz
pop
inc
mov
sbb
jg
pusha
push
repnz
leave
push
dec
movsb
into
sarl
jmp
repnz
push
xor
sbb
int3
mov
lock
or
out
dec
push
cmc
ret
test
mov
inc
fmuls
dec
cwtl
lret
loop
mov
adc
leave
mov
or
pop
inc
and
dec
fstpt
and
mov
or
push
add
or
aaa
rcll
jecxz
pop
mov
es
stos
fimull
cltd
ljmp
inc
pusha
rcrl
cmp
lcall
sub
rcll
add
push
add
daa
fnstenv
sbb
in
pusha
and
fbld
loope
push
jns
fs
sbb
mov
xchg
push
cmp
adc
jge
loope
inc
push
jge
jb
in
loopne
div
jle
test
into
cmp
jnp
test
roll
test
add
lds
stos
jge
arpl
dec
cmp
fcompl
lods
and
push
add
or
xchg
enter
jl
cld
mov
lods
fwait
pop
jbe
lods
insb
out
je
repnz
test
jb
es
test
shr
hlt
aaa
dec
dec
fdiv
je
or
mov
add
aam
jl
daa
and
je
cmp
mov
icebp
scas
pop
ss
in
in
mov
jbe
jbe
repnz
sbb
push
push
les
mov
mov
lods
and
scas
xor
divb
enter
divb
or
inc
fsubrs
mov
sub
mov
scas
inc
outsb
or
cmc
push
rorl
jl
aas
sub
ret
sub
xor
push
and
pop
xor
jg
sarb
std
sarb
cmpsb
cwtl
enter
call
jb
imul
fiadds
aad
jae
imul
frndint
cli
repz
int
push
pop
icebp
mov
jns
adc
xor
jb
pmulhw
pop
addr16
mov
jecxz
sbb
iret
shlb
rcrl
cmp
mov
pop
xchg
shrl
mov
push
push
xor
dec
push
xchg
rorb
shrl
bound
push
jge
lcall
add
push
push
outsb
cmp
insl
repz
in
mov
xor
mov
jp
rorb
push
push
pop
adc
cmpb
orb
add
stos
insb
xchg
mov
pusha
xchg
andl
sbbl
insb
mov
xlat
push
mov
test
scas
jne
mov
sub
pop
xchg
mov
into
loopne
std
jmp
dec
mov
inc
arpl
out
jnp
sbb
xlat
jo
lret
sbbb
xor
add
pushf
mov
test
xchg
je
out
ljmp
xchg
outsb
push
lods
xchg
filds
int3
adcl
jl
cmc
cmp
pop
ljmp
sub
fmuls
sub
cli
incl
cmp
hlt
sbb
mov
pushf
arpl
es
in
add
lret
inc
dec
mov
out
inc
arpl
or
repnz
jl
mov
sbb
mov
add
sbb
sbb
cs
dec
rcrl
or
lds
stc
ss
cltd
mov
add
pop
shlb
adc
sahf
outsl
push
push
stos
int3
orb
fldt
scas
dec
ds
jnp
and
sbb
push
jmp
xchg
and
orl
adc
dec
loopne
push
popf
jg
fdivp
int
jo
inc
cmp
repnz
out
rorl
xchg
bound
pop
js
push
int3
sub
jne
ret
jecxz
stos
cmpsl
rol
mov
lds
cwtl
mov
mov
xlat
and
cmp
js
adc
cmpsb
inc
pop
add
sbb
sbb
shrb
cmp
scas
lret
push
fldl
mov
lds
pop
xchg
das
adc
or
fsin
outsl
adc
mov
rolb
sub
sbb
loope
in
mov
jbe
loopne
or
jo
loopne
sub
cs
xchg
int
lock
mov
pop
bound
mov
mov
sbb
add
mov
pusha
rcrl
lcall
fistps
lods
cld
fdivr
out
mov
xchg
lea
xchg
sbbb
mov
mov
fdivl
xchg
cmp
rcll
add
pop
mov
fwait
or
mov
and
orl
gs
mov
shl
repnz
lret
adc
pusha
imul
xchg
xor
out
das
ja
mov
mov
vlddqu
imul
mov
mov
pop
mov
lods
or
inc
pop
sbb
daa
faddl
add
push
int
lea
push
sub
push
inc
mov
cwtl
out
push
pusha
cmpsl
xchg
and
aad
mov
jno
dec
jno
iret
jl
sub
nop
nop
insb
lcall
add
ds
mov
fs
subl
inc
xchg
jbe
cmc
mov
sbb
ljmp
rclb
das
cmp
and
insb
pop
mov
mov
mov
dec
xchg
into
and
subb
mov
loop
dec
ss
mov
and
cs
shrb
push
sub
cmc
adc
sbb
xor
ret
les
test
fisttps
ljmp
sahf
and
push
dec
push
mov
mov
and
test
xlat
nop
push
cmp
adc
aad
inc
cmp
nop
jae
stc
mov
jne
xor
ret
mov
es
test
push
pop
aaa
les
cmpsl
sub
pop
call
neg
out
out
data16
or
clc
sub
push
mov
add
gs
mov
out
sub
stc
fisttpll
pop
mov
cmp
out
sti
testl
imul
or
xchg
shl
mov
or
dec
dec
xor
push
cwtl
mov
mov
push
dec
aaa
imul
mov
std
jecxz
push
dec
jmp
daa
movsb
mov
push
mov
mov
ljmp
fstps
outsb
and
inc
pop
sar
sbbl
push
into
jno
sahf
shrb
push
loope
cld
push
fisttpl
mov
shrl
lea
ljmp
inc
stos
xchg
pop
inc
iret
mov
push
adc
push
test
je
jo
pop
lret
sub
scas
or
sub
out
xorl
and
dec
xor
mov
ds
fimuls
push
leave
call
mov
and
ds
imul
in
aam
out
pop
ss
rcll
ret
scas
push
data16
push
loop
hlt
mov
adc
lods
jge
gs
or
adc
push
or
mov
jmp
stos
sbbl
enter
repnz
call
push
sbb
xchg
js
les
out
push
cld
rcll
xchg
jae
popf
inc
dec
ja
pop
or
pop
push
pusha
mov
xchg
jae
mov
filds
popa
jg
xchg
xor
in
push
shlb
dec
xor
ret
mov
and
xor
jno
push
jp
adc
fisttpl
adcl
inc
lcall
inc
adc
dec
mov
mov
lea
pushf
mov
pushl
xchg
adc
ret
in
jb
nop
aad
mov
mov
pushf
leave
push
lods
fnsetpm(287
inc
dec
addr16
aas
in
mov
fimuls
insb
ljmp
lret
add
mov
inc
mov
mov
inc
adc
adc
outsb
outsl
repnz
mov
ret
mov
popf
sbb
xor
arpl
inc
ja
stos
and
mov
sbb
xor
mov
andl
andl
or
les
push
mov
dec
xchg
mov
cmc
lods
aad
jo
add
orl
std
mov
pushf
adc
shlb
pusha
insl
mov
pop
cmpb
or
test
aad
fstpt
xchg
mov
fsub
push
mov
xchg
adc
mov
push
pop
push
pop
fmull
jae
push
pop
xor
push
adc
add
repnz
cmc
or
rcr
mov
jecxz
mov
cmpxchg
pop
inc
sahf
roll
pop
push
xchg
dec
dec
dec
repnz
inc
mov
loope
loope
idivb
cmp
mov
mov
mov
cvtps2pd
inc
pop
sub
sbb
ss
mov
add
aas
pusha
jg
stos
sub
ja
cmpsb
mov
leave
or
das
inc
xchg
pop
cld
inc
adc
xor
inc
sub
sbb
pop
fisubl
stc
scas
popf
xchg
pop
bound
adc
pop
add
sub
inc
sub
sub
push
pop
inc
xchg
out
cmc
sbb
add
loope
out
mov
int
fcoms
mov
inc
mov
loop
fidivrl
sets
repz
daa
xor
enter
stos
stos
adc
pop
aad
repz
lods
dec
jns
cmp
mov
push
dec
fstpl
inc
mov
stos
cmpsl
xchg
gs
cmpsl
scas
int3
in
mov
rcl
lcall
pop
jb
test
and
daa
jecxz
arpl
cmp
lods
loope
and
jno
jns
push
repnz
mov
mov
jo
fildll
pop
sbb
lretw
inc
xor
fisubl
ret
xchg
jns
mov
cmp
inc
adc
xor
mov
xlat
dec
iret
and
aaa
xor
pop
lcall
pusha
or
sar
loope
dec
aad
lods
push
sub
les
xor
fisubl
mov
mov
pop
xchg
add
fwait
shrl
iret
adc
mov
push
test
nop
jge
and
lds
stos
xor
icebp
mov
out
add
ret
jae
and
out
daa
data16
pop
iret
pushf
push
bswap
sub
ficomps
or
jnp
mov
push
adc
push
sbb
xchg
aad
push
lret
jp
dec
imul
jns
call
push
popa
and
inc
lret
int3
shlb
fistl
or
xorb
divb
adc
sbb
lcall
stc
inc
xchg
filds
je
push
inc
scas
sub
xchg
jg
adc
data16
cmp
imul
fsubr
mov
dec
insb
cli
call
cli
mov
inc
daa
imul
out
call
inc
fstpl
jg
cmp
sub
add
cmp
repz
repz
mov
add
or
ja
insl
add
cmpsl
test
inc
xchg
jb
or
xor
imulb
or
xchg
xchg
or
cmp
xchg
idivb
sbb
sbb
lret
add
xchg
xchg
fstps
movsb
cmpsl
fwait
and
mov
fsubr
dec
mov
mov
dec
push
xchg
add
imul
jl
iret
xchg
loope
ds
in
loope
fwait
pop
filds
ret
sub
inc
inc
jne
movzwl
outsb
push
and
mov
push
movlps
dec
lret
dec
mov
repnz
push
rcrb
jl
push
xor
jbe
rep
jno
mov
aas
insb
xchg
dec
imul
cwtl
movsl
mov
adcl
testl
lret
push
pop
push
sub
inc
sub
loopne
and
data16
in
add
into
cs
das
stos
jecxz
push
adc
push
outsl
int3
arpl
jp
shlb
jg
mov
jg
xchg
jnp
imul
jns
roll
iret
pop
and
loop
aad
push
insl
mov
shlb
adcb
sbb
aad
xor
insl
pop
push
jle
testb
jmp
lds
sbb
pusha
jb
ljmp
xor
pushf
pushf
mov
subb
xor
push
push
call
sub
icebp
and
mov
push
lret
in
outsl
mov
int3
in
or
add
outsl
int3
xorb
int3
push
mov
xor
mov
adc
and
adc
mov
lea
mov
ja
popaw
outsb
das
mov
movsl
add
fimuls
fisubl
inc
push
lahf
xor
dec
lcall
std
jae
testl
jb
sti
and
fildl
test
fdivs
jns
popa
pop
lds
icebp
int
test
pop
dec
mov
pop
ja
dec
jg
push
xchg
dec
clc
xor
jno
mov
testb
xchg
das
push
fcmovnb
dec
stos
aad
sbb
sbbb
pop
cmp
adc
inc
pusha
mov
stos
cmp
insb
popf
mov
fnsave
push
sbb
pop
bound
rcrb
inc
sbb
fisubrs
lcall
xchg
jnp
cmc
cmp
and
out
dec
dec
loope
lcall
fstpt
inc
cmp
xor
imul
or
and
mov
push
das
sbb
mov
sub
movsl
dec
sbb
pop
sub
lds
in
mov
mov
lcall
movsb
sahf
sbb
cs
stos
das
cmp
cltd
mov
hlt
das
fiaddl
mov
popa
mov
pop
mov
clc
aad
popa
xchg
jge
dec
mov
push
int
xchg
fcomps
stos
push
cmp
add
pop
xchg
pop
addr16
push
jl
xchg
add
loopne
outsb
fnstcw
xor
dec
fwait
add
mov
imul
pushf
cmpsb
mov
aad
and
xchg
inc
jno
fwait
dec
adc
test
sbb
cmpsl
cmp
adc
pop
push
test
mov
jg
inc
lret
and
jecxz
xchg
test
icebp
mov
fsubrs
lret
sbb
or
sbb
and
mov
jno
popf
aas
inc
xor
loopne
mov
cmp
js
mov
test
pushf
sti
stos
inc
or
inc
cmp
jle
inc
dec
test
push
adc
jle
outsb
inc
cmc
sbb
nop
fsubrs
out
and
pop
out
fbstp
test
push
stc
cmpsb
mov
mov
fs
dec
adc
gs
ja
repnz
lahf
repz
xor
data16
cmp
or
mov
push
jmp
les
pop
jnp
cmp
stos
test
jecxz
scas
adc
sub
dec
sub
or
repz
xor
sbb
xchg
in
sub
test
pop
push
or
cmp
xor
lret
cltd
faddl
jo
icebp
sbb
mov
pop
lods
jg
leave
sarl
addb
rorl
sbb
adc
or
cmp
sub
dec
cmpsb
mov
inc
pusha
gs
divl
sbb
shlb
jno
hlt
pop
ret
push
jb
sub
jl
das
seta
or
jno
add
mov
and
and
lods
pushf
repnz
rep
lret
adc
mov
stos
xchg
stc
scas
adc
testl
and
mov
jmp
lret
inc
outsl
push
imul
or
jns
testl
add
cmp
xchg
cltd
outsl
jge
xchg
xchg
stc
repnz
sbb
xor
sub
int
ss
andb
or
adc
out
arpl
and
xchg
sbb
mov
cmp
mov
pop
les
mov
fcmovbe
popa
scas
hlt
test
jb
pop
in
inc
push
cmp
pop
repz
fstpl
or
dec
dec
aaa
rcl
sub
sub
cli
sarb
mov
jge
ret
popf
xchg
sbb
ret
push
scas
inc
ret
xchg
push
sub
scas
in
pop
xor
mov
jno
cltd
jo
lahf
mov
and
pop
mov
adc
cmp
push
xor
iret
loopne
ds
repz
xchg
sbb
jecxz
fcompl
sub
sbb
andl
clc
mov
xor
dec
jo
xlat
cmpsb
jle
loopne
rclb
lahf
test
dec
pop
xor
mov
add
sub
in
jl
call
jle
lea
hlt
add
ss
and
adc
arpl
dec
mov
xor
test
fwait
bound
fwait
repz
xchg
into
icebp
cmp
mov
aam
pushf
negb
popf
aas
sbb
in
test
xor
xchg
or
lods
enter
cmp
rorl
sub
xor
inc
mov
scas
mov
dec
cmp
hlt
pop
and
pusha
std
or
lds
jl
ret
jno
rol
dec
mov
mov
lods
out
icebp
sub
fdivrp
ds
adc
aaa
int
repz
out
andb
xlat
pop
es
push
push
cmc
ja
daa
fcom
das
fwait
dec
and
cmp
popa
cmpsb
add
iret
mov
ljmp
push
cltd
inc
sub
push
fcoml
adc
call
stos
lods
xor
clc
mov
push
aaa
jne
mov
leave
test
out
adc
fldcw
push
out
jnp
dec
xor
adc
sti
nop
cltd
dec
adc
mov
cld
pop
arpl
loop
cmp
out
out
adc
jno
sbb
mov
fs
xchg
in
dec
xchg
jg
repnz
nop
cmpsl
sahf
ljmp
mov
cltd
inc
mov
xchg
ss
mov
dec
sbbb
sbb
xor
orl
int
mov
xlat
aaa
fs
fsubrl
pop
int3
jmp
setns
xchg
loop
jb
dec
xchg
jmp
icebp
push
mov
mov
int
jmp
mov
and
iret
nop
cltd
in
jle
adc
test
cmpsl
push
out
jae
sbb
sti
jle
nop
and
add
pop
hlt
pushf
inc
mov
sbb
shlb
and
mov
sahf
or
or
pushf
jmp
push
outsb
nop
inc
push
ss
lcall
mov
push
insb
js
push
pushf
jne
insl
testl
shl
dec
outsl
bnd
and
stos
pop
xchg
loopne
or
sbb
test
and
lea
pop
ss
clc
mov
mov
xchg
insl
dec
push
push
push
icebp
dec
fstpt
fst
mov
dec
nop
xor
inc
insl
addr16
jl
pusha
or
push
enter
inc
adc
mov
dec
repz
mov
std
jle
mov
pop
pop
or
adc
dec
pop
push
imul
pop
xor
xchg
aaa
inc
fnsave
jns
mov
add
fcomps
pushf
into
js
stos
repz
and
movsb
in
stc
rcrl
ret
sbb
cwtl
push
imul
aas
pop
nop
int
fstpl
sbb
jb
pushf
and
out
sub
stc
xorl
mov
orl
fistpl
mov
fisubl
