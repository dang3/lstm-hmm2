push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
sub
mov
mov
not
mov
add
not
shl
imul
sub
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
push
lea
push
push
mov
add
call
mov
add
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
incl
mov
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
push
add
push
mov
add
push
push
lea
push
mov
call
add
mov
mov
mov
mov
push
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
decl
mov
jne
addl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
lea
sub
push
push
push
lea
push
lea
xor
push
mov
mov
mov
call
pop
pop
test
je
mov
mov
cmp
je
mov
jmp
push
mov
call
push
lea
push
push
mov
push
mov
call
push
push
push
push
mov
call
mov
lea
push
mov
mov
mov
push
sub
push
push
mov
call
push
lea
push
push
mov
mov
call
push
lea
push
push
call
lea
mov
add
lea
push
mov
mov
call
cmp
je
cmpl
jne
mov
call
cmp
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
pushl
mov
pushl
mov
mov
push
pushl
call
jmp
xor
pop
pop
pop
add
leave
ret
push
push
xor
mov
push
mov
call
mov
mov
dec
jne
mov
cmp
jne
push
call
push
pushl
push
pushl
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
push
call
push
mov
call
pop
xor
pop
ret
xor
add
add
add
sbb
add
les
adc
ljmp
fidivl
aam
sbb
cmpsl
lahf
pop
ja
cmpsl
stos
adc
inc
enter
jae
outsl
xor
clc
ja
jle
inc
nop
loopne
or
scas
leave
inc
xchg
push
inc
fisttps
pop
data16
inc
jnp
lcall
push
inc
jecxz
pushf
popf
test
es
call
push
pop
sarl
inc
dec
lret
xchg
loopne
or
xchg
rorl
repz
push
jbe
fcompl
mov
jnp
fcomip
jl
xchg
fstl
jno
sub
popf
lods
pop
out
push
fwait
rol
cli
adc
push
xor
pop
and
mov
les
xchg
in
sub
imull
loopne
daa
dec
je
pop
and
js
jnp
add
dec
xchg
cmp
icebp
sbb
push
adc
mov
adc
mov
insl
addr16
or
cmc
add
and
rcll
inc
jns
mov
xor
daa
clc
cld
or
jae
and
push
paddq
inc
inc
mov
lock
sub
cmpsl
dec
jg
popa
inc
and
inc
lahf
ret
js
add
sub
xor
dec
loop
shlb
cmp
ja
sbb
pop
jl
aad
repz
jg
mov
or
push
ljmp
out
enter
cmp
decb
ljmp
push
aad
and
xor
mov
pushf
mov
popf
out
xor
add
in
and
mov
adc
test
pop
dec
xlat
lret
loop
je
lods
repnz
dec
xchg
ret
jno
int
jnp
cwtl
jge
out
dec
sbb
ja
xor
inc
xchg
and
or
loope
lods
dec
adc
lea
outsb
ja
pop
cmp
adc
sbb
out
in
pop
das
das
repnz
xor
in
aad
pop
pop
push
adc
pop
popa
xlat
leave
and
xchg
divb
cmc
mov
push
xchg
push
push
loop
and
push
clc
and
jp
fdivrp
adc
nop
jg
jl
icebp
push
cmp
int
mov
lock
movsl
ret
or
test
lret
mov
nop
fwait
and
pushf
sbb
push
add
inc
out
and
addr16
mov
xlat
pop
cmp
xor
xchg
fucomp
lret
and
cmp
mov
mov
push
jge
data16
popf
sbb
xor
je
roll
mov
push
test
fcmovbe
ja
in
pop
or
gs
adc
cmc
popa
xchg
jno
loopne
imul
fidivs
sub
fwait
xor
call
sbb
lahf
mov
sub
loope
leave
outsl
or
lea
mov
adc
and
mov
mov
cmp
outsl
shrl
imul
icebp
ret
sub
dec
or
push
ljmp
lock
xor
test
orb
mov
invd
pop
cmpsl
test
dec
lret
rcr
mov
pop
cmp
sbbl
fists
or
xor
mov
inc
xchg
mov
inc
ss
out
mov
xor
xchg
add
ret
fcompl
mov
mov
sbb
aaa
sub
scas
stc
fidivs
jo
stos
or
stos
push
stos
add
icebp
inc
aam
mov
jg
jl
mov
xchg
cmpsb
pop
mov
xor
hlt
push
pop
cmpsl
or
mov
popf
aad
sti
cmp
xchg
subb
push
and
jmp
jns
loop
shlb
fsubr
in
xor
push
mov
dec
pop
xchg
das
xor
insb
enter
inc
xchg
xorb
imul
jp
jns
jp
xchg
lods
inc
pusha
xlat
sbb
push
mov
sub
popf
jmp
dec
incb
jae
iret
xchg
pop
js
or
popf
mov
ficompl
aaa
mov
add
sarb
inc
inc
sbb
xchg
lcall
clc
scas
add
mov
xor
ret
jbe
add
lcall
jecxz
repz
sub
repz
negb
nop
je
xchg
mov
mov
sahf
push
inc
add
pop
mov
das
aaa
pop
rorl
repnz
lods
lods
std
mov
add
cmpsb
jmp
and
dec
enter
sub
lock
push
ret
or
insl
insb
aad
out
dec
clc
cmpsb
mov
and
lcall
and
into
inc
jl
insb
clc
sbb
add
jle
mov
adc
fisubrl
hlt
sub
stos
jbe
mov
insb
int3
and
shrb
fidivrs
ljmp
inc
bound
aad
xor
sub
mov
lret
loope
mov
lea
lret
xor
aam
push
lods
stc
mov
test
and
or
test
out
out
ds
lods
out
lds
or
dec
in
cmc
and
lods
lods
cli
mov
hlt
push
xchg
add
adc
push
adc
push
ja
fisubrs
or
sub
repz
xor
lret
inc
shlb
bound
xchg
test
adc
push
loope
push
std
mov
shr
loope
sbb
sarl
dec
cmp
pop
aaa
js
pop
pop
sti
xor
mov
and
shlb
loop
ljmp
imul
ss
mov
mulb
or
aas
fisubrl
jne
iret
push
mov
push
xlat
mov
outsb
mov
adc
mov
lret
or
popa
aam
inc
fldenv
push
daa
cmp
mov
cld
jae
adc
pop
data16
sahf
std
and
xchg
pop
loope
cmp
into
adc
push
cmp
push
mov
adc
insb
push
jb
mov
jns
ret
push
es
cmp
pop
les
add
xor
xchg
shlb
inc
mov
push
test
xor
or
adc
dec
adc
inc
mov
dec
mov
imul
out
rolb
adc
and
gs
call
in
movsb
cli
lret
jae
xchg
inc
xchg
pop
lds
sbb
ficoml
js
lret
mov
int
lods
push
mov
ficomps
insl
mov
push
ja
pop
push
cli
inc
adc
insl
outsl
sbb
cmpxchg
mov
lret
lret
mov
dec
fidivrl
lret
adc
push
add
sti
out
repnz
and
shrl
dec
and
pusha
mov
push
or
dec
inc
push
les
arpl
insb
adc
inc
mov
dec
lret
icebp
pusha
mov
loop
loop
por
fmuls
addr16
sahf
icebp
test
test
fildl
adc
adc
in
mov
aad
imul
mov
xchg
push
bound
adc
mov
sub
movl
push
fmulp
jb
fisttps
inc
popf
mov
add
rclb
or
inc
negl
int3
adc
test
cmp
imul
mov
sub
shrl
and
mov
aas
mov
ja
jae
cmc
push
mov
lock
cmpsb
adc
ficoms
call
sbb
test
mov
test
mov
inc
sub
je
lock
decb
bswap
lds
add
fcmovnbe
fwait
sub
scas
aas
clc
cmp
mov
sub
jne
clc
cmp
mov
lahf
inc
lods
mov
push
lds
and
mov
pusha
pop
fsub
aam
adc
fidivl
rclb
inc
mov
stos
jle
movsb
aam
jnp
cmp
mov
xor
jne
stos
cmpsb
insl
pop
push
mov
push
add
ja
and
int
cmpsb
popf
pop
sub
pop
sti
mov
out
ja
lea
xor
out
cmpsb
sub
mov
subl
lahf
mov
daa
js
lahf
and
push
mov
mov
add
pop
rcrb
mov
pop
cmc
shrb
jge
lret
push
or
lock
test
xchg
cmp
mov
jle
icebp
push
cld
test
outsl
popa
icebp
inc
adc
scas
mov
in
xchg
fsubrs
sbb
fwait
xlat
dec
mov
negl
add
xchg
sub
insl
loope
cld
out
lods
andl
shlb
jg
adc
out
pusha
xchg
xchg
mov
pusha
repnz
or
jnp
mov
pop
sbb
or
or
dec
mov
in
sub
jl
add
es
in
lds
shlb
fstps
mov
push
idiv
mov
fdivrs
inc
adc
sbb
jbe
cli
data16
out
mov
sarb
dec
cli
loop
lds
in
and
sbb
fsub
cli
fsubrl
lret
mov
pushl
and
mov
adcb
inc
xchg
add
push
rcrl
insb
psllq
sub
fdivp
jns
adc
pushf
push
ss
je
repnz
dec
jne
dec
out
jmp
mov
ja
pop
jo
and
or
sahf
pmulhw
imul
mov
inc
js
fbld
shrl
lcall
mov
aaa
jne
outsl
sar
push
sarl
scas
sbb
arpl
sbb
sbb
mov
ficomps
js
outsl
dec
decb
and
enter
sbb
lock
inc
pop
rorb
lcall
xchg
ret
dec
arpl
pop
je
icebp
xchg
push
xchg
push
inc
mov
xorl
push
in
jne
rolb
mov
xchg
je
mov
xchg
call
mov
add
sbb
fwait
insl
xor
cmp
or
js
mov
aam
mov
jbe
mov
and
xchg
out
and
push
imul
negb
loopne
and
je
into
test
adc
inc
jecxz
mov
sub
inc
pop
lcall
lcall
out
push
aam
leave
imul
pop
in
sub
pusha
xchg
or
mov
fbld
mov
push
add
dec
repnz
jmp
les
insb
mov
cltd
decl
popa
loope
push
das
jmp
add
loopne
or
push
push
imul
adc
push
sbb
sub
ds
cs
popf
sub
dec
mov
shll
sbb
sbbl
or
add
pop
nop
cmp
jb
ljmp
insb
mov
lods
sbb
pop
rcrl
mov
fldt
cld
sbb
inc
cli
pop
pop
inc
fcomi
icebp
xchg
sub
bound
pop
add
pop
je
lcall
jae
jecxz
jnp
inc
inc
xchg
lds
jle
cmpsb
neg
aas
movsl
pop
xchg
fwait
sbb
pop
mov
sbb
loopne
cmp
imul
adc
mov
cli
jo
xlat
xchg
xchg
sub
stos
pop
xchg
ja
dec
cmp
cmpsl
sbb
sbbb
inc
sbb
jmp
icebp
sbb
ds
xchg
sbb
in
in
cmp
pushf
xlat
jmp
jmp
and
push
imul
loop
pop
gs
sahf
push
fwait
ss
fdivs
pop
mov
push
in
inc
inc
lret
inc
into
cli
push
jbe
add
mov
and
cld
mov
pop
inc
leave
ret
jg
dec
sbb
jnp
or
test
jne
sbb
xchg
xchg
push
mov
addr16
test
sti
arpl
clc
lods
outsl
pause
dec
aam
fsubs
fwait
shr
dec
in
ret
daa
mov
add
sub
ret
ja
ljmp
in
fdivrs
jecxz
or
lret
xchg
fnstcw
lret
push
stos
sbb
sbb
dec
mov
or
mov
mov
xor
bound
xor
cmpsb
add
pop
sarl
xchg
daa
mov
adc
push
hlt
lret
stos
lods
add
rcll
dec
outsb
inc
test
add
mov
scas
inc
mov
sub
fcoms
mov
jb
or
xchg
mov
mov
mov
stc
out
inc
jg
or
lret
notb
ret
fwait
mov
cmpb
pop
dec
xorl
das
jno
or
lods
xchg
sbb
lds
mov
fwait
mov
xchg
sbb
xchg
inc
mov
or
movsl
sub
inc
jbe
inc
pop
mov
loope
pop
std
mov
xchg
push
aaa
mov
dec
mov
push
adc
add
cli
mov
jns
lea
shlb
pop
mov
aad
mov
xchg
or
adc
sub
scas
adc
stc
add
fwait
adc
mov
lcall
mov
sbb
jno
insb
jle,pn
push
mul
inc
popa
pop
es
stos
ds
aaa
lcall
das
jnp
es
mov
into
jb
xchg
jmp
bound
xor
cld
jnp
repnz
or
insb
dec
jmp
insb
outsl
and
inc
push
mov
sub
inc
sbb
arpl
ss
andl
add
popf
cmp
dec
sub
jecxz
shll
adc
jl
xchg
or
sahf
aas
inc
imul
mov
vxorps
fadds
and
daa
scas
mov
cwtl
repz
sub
fwait
fwait
cmp
xchg
adc
or
out
lods
call
jg
sbb
ret
stc
loopne
outsb
xor
sbb
xlat
mov
data16
push
dec
inc
xor
and
into
movsb
icebp
in
leave
or
rol
push
sbb
or
imul
jb
popa
inc
popf
pop
xchg
add
js
jmp
xor
and
xchg
dec
ljmp
mov
xchg
mov
inc
out
push
pop
add
push
jmp
sub
lahf
pop
ljmp
mov
xchg
jp
adcl
sarl
mov
xor
xchg
mov
sbb
adc
jne
int3
iret
imul
repnz
add
les
jle
pop
ljmp
jne
push
sub
test
xor
push
gs
add
test
mov
outsb
out
jecxz
lods
or
pop
push
les
xor
adc
inc
repz
aam
out
aad
je
loop
sub
dec
push
and
call
push
push
adc
add
mov
gs
xchg
movsb
add
jecxz
enter
jae
or
and
cmp
in
pop
add
adc
fnstsw
sbb
dec
xchg
std
loop
inc
push
mov
sbb
pop
lods
jnp,pn
out
out
mov
and
repnz
clc
fiaddl
mov
mov
push
jbe
jg
int
mov
dec
mov
paddb
mov
sbb
out
in
add
and
negb
and
jmp
icebp
pop
sub
or
add
lods
in
les
sahf
mov
jmp
fnsave
xorl
movzbl
imul
pop
ds
sbb
and
sub
cmp
mov
stc
xchg
jp
pop
mov
scas
sbb
ret
mov
sub
xchg
cmp
push
or
or
inc
add
ljmp
mov
pop
test
cmc
ja
dec
cmpsb
xor
mov
sti
js
push
cs
fistps
loope
int3
ja
inc
xlat
sbb
xorl
jp
bound
or
jp
push
cmpsl
or
mov
jnp
mov
fbstp
ret
mov
pushf
cmc
pop
je
incb
in
fldl
inc
bound
icebp
pop
ljmp
lahf
inc
push
push
dec
mov
xchg
shll
aas
idivl
push
loopne
pop
dec
aaa
sahf
ret
ja
xchg
push
orl
insb
push
movsl
testl
push
cs
cmp
scas
push
xchg
out
sbb
cmp
inc
lcall
iret
out
lods
shlb
std
pusha
dec
inc
add
nop
and
scas
push
push
sbb
clc
or
xor
dec
push
aam
push
jle
pop
sahf
and
test
pop
shr
daa
fs
jo
add
cwtl
pop
movsb
insl
outsb
lret
arpl
daa
jl
adc
pop
sbb
cmpsb
sarl
fcoms
inc
xor
add
dec
cmp
hlt
sti
loopne
leave
fs
mov
xchg
jp
mov
or
bound
lret
das
add
or
inc
xchg
test
jnp
cmp
dec
movl
in
sub
adc
mov
and
cmc
faddl
mov
into
dec
xorl
mov
ds
pop
and
loop
push
test
mov
rorl
aaa
push
sahf
dec
and
roll
aam
cmpsl
clc
cmp
push
clc
xchg
push
out
jecxz
lock
cmc
and
sbb
pop
gs
pop
stc
jle
adc
xor
xchg
dec
cs
iret
lock
push
jl
mov
jmp
dec
lret
xchg
sar
dec
cmp
pop
jp
aaa
andb
jmp
and
cmpsb
cld
lea
das
push
inc
or
ja
in
ret
and
cmp
in
sub
inc
fdivs
int3
mov
fcomps
add
mov
stc
hlt
fdivrs
xchg
movsl
mov
push
sbb
arpl
shrl
add
sbb
dec
fwait
addr16
scas
call
sbb
adc
iret
out
jg
aam
negl
pop
xchg
jno
das
jmp
dec
push
imul
adc
jle
jecxz
out
pop
push
push
frstor
and
cmp
cld
mov
jmp
mov
jp
mov
adc
push
loopne
lcall
adc
lret
jne
scas
mov
std
insl
ljmp
popa
outsb
lret
xchg
jl
das
mov
sbb
cmp
cmpsb
out
ret
cld
int
call
inc
shll
pop
push
sub
cmp
aad
fcmovbe
stos
cmp
mov
into
mov
jecxz
xchg
aaa
adc
and
push
fcoms
inc
das
mov
sti
mov
lcall
sti
mov
rcll
jne
sbb
stos
mov
add
pop
ja
jbe
cwtl
sbb
stos
pop
or
inc
cli
xchg
xchg
jp
cli
std
xchg
in
hlt
xor
mov
inc
sub
xor
decb
fstl
mov
lea
inc
nop
xor
add
punpckhbw
insl
xor
mov
push
jmp
test
pop
pop
xor
add
cwtl
push
pop
cli
jnp
dec
andl
ds
insb
ss
imul
push
cmp
daa
aaa
sti
push
jb
dec
adc
pop
and
jl
or
adc
mov
sti
inc
decb
loope
pop
filds
iret
pop
pop
rcrl
inc
sub
rorb
adc
sti
leave
jl
mov
aam
call
jl
enter
pop
test
scas
pop
mov
and
cmc
pop
and
or
and
jne
in
fdivl
and
mov
xor
sbb
iret
lods
enter
stc
into
mul
mov
imul
les
bound
inc
subb
mov
adc
push
dec
cmp
fistl
lret
adc
jle
cmpsl
loope
and
or
push
popa
xchg
sub
sbb
mov
adc
insb
scas
push
jnp
mov
xorb
shlb
mov
sub
scas
ljmp
sbb
rcrl
mov
push
iret
mov
popf
fcomps
push
pop
lods
pop
jne
pop
js
rol
jle
pusha
jae
scas
leave
jecxz
dec
aas
lcall
lcall
jge
in
loopne
cmpsl
fidivs
xchg
insl
decl
out
and
and
add
aas
add
dec
sbb
daa
js
dec
lods
add
out
outsb
push
xchg
or
dec
inc
sbb
insl
mov
inc
fs
fidivl
push
mov
pop
pop
xchg
out
das
in
mov
cmp
mov
sbb
repnz
mov
jno
adc
dec
push
cmp
cmp
pop
call
out
push
xchg
pop
lds
fdivrs
adc
dec
mov
scas
cs
mov
loop
xchg
adc
stc
jle
cwtl
popf
rolb
xor
push
int3
jne
add
das
mov
adc
add
sbb
xchg
rorl
cli
mov
adc
ds
iret
jg
es
jmp
sub
mov
out
lret
jae
lret
sub
aaa
cmp
pusha
add
cmpsl
hlt
movsl
jle
pop
sub
pushf
decl
adc
pop
in
push
add
jns
inc
jns
xchg
ffreep
popf
mov
ret
bound
ds
int3
dec
nop
ret
mov
mov
and
inc
push
jns
stc
adc
rcll
jae
cmp
jecxz
push
inc
dec
cli
test
leave
fsubrs
das
xor
mov
cmp
pop
mov
push
add
xor
lods
add
cmp
mov
insl
dec
cmpsb
fwait
movsb
add
loope
mov
adcl
pop
jno
push
rcll
cmpsb
rcl
ret
lea
clc
add
inc
sahf
or
pop
dec
stos
or
sbb
jns
xor
dec
dec
add
into
dec
int3
lret
cmpsl
sbb
jl
cwtl
into
shrb
call
xchg
gs
sarl
mov
ret
movsb
xor
mov
in
ds
idivb
xorb
dec
push
loopne
xor
movsb
std
dec
pusha
aam
mov
inc
mov
aaa
rorl
inc
imul
push
inc
test
add
mov
cmp
mov
popa
out
inc
and
cmpsb
test
pop
mov
pop
push
jo
in
loopne
cmp
mov
sub
mov
push
add
sub
dec
push
out
push
in
pop
mov
add
add
fcmovne
push
mov
fsts
fdivs
insb
jle
fists
cltd
repnz
popa
scas
xchg
test
push
int
seta
jg
push
inc
shrl
add
stos
lret
out
fs
int
pop
jmp
mov
shlb
mov
xchg
test
adc
jecxz
subb
aam
ljmp
data16
jns
out
leave
jmp
pop
jecxz
shl
fisttps
xor
sbb
adc
cmp
or
pushf
inc
push
stc
cltd
pop
mov
sbb
dec
push
ljmp
lret
test
adc
or
lock
imul
inc
jbe
fs
aas
push
push
fwait
lods
repz
mov
push
mov
mov
lea
mov
dec
inc
pop
imul
push
insl
jno
sub
xchg
push
lret
mov
imul
sub
out
scas
push
push
cmc
pusha
lret
neg
bt
out
mov
mov
pusha
add
add
pop
push
mov
daa
add
fs
in
out
inc
adc
out
pop
xor
dec
jb
aas
or
inc
mov
sub
mov
movsl
xchg
icebp
mov
sub
imul
sarl
lds
push
cld
cld
imul
cmp
andl
or
ja
inc
pop
out
sti
cwtl
mov
mov
mov
mov
add
add
