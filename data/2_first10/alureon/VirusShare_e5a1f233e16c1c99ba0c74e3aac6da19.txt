push
mov
push
mov
cmp
jb
xor
add
push
mov
je
push
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
imul
xor
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
push
mov
mov
mov
mov
sub
test
jne
inc
jmp
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
mov
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
mov
push
mov
mov
push
push
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
pushl
push
call
test
jl
mov
mov
push
pushl
push
call
test
jge
andl
jmp
mov
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
mov
mov
imul
push
mov
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
mov
ror
xor
imul
lea
mov
divl
mov
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
sub
test
je
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
inc
decl
jne
mov
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
push
push
call
mov
mov
push
pushl
xor
mov
rep
call
test
je
push
call
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
pushl
call
push
call
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
call
mov
test
je
push
push
mov
lea
push
mov
push
lea
push
call
mov
push
mov
call
add
push
push
lea
push
call
pop
pop
mov
pop
pop
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
mov
call
mov
push
call
cmpb
pop
jne
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
mov
push
mov
sub
push
lea
push
pushl
push
pop
call
test
mov
je
cmpl
jbe
mov
push
push
pushl
mov
pushl
push
call
pushl
push
pushl
push
call
pushl
push
pushl
push
call
mov
cltd
mov
idiv
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
mov
add
push
call
push
push
pushl
push
call
add
push
call
push
push
pushl
push
call
add
push
call
mov
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
pushl
push
pushl
push
call
add
cmpl
jbe
pushl
push
push
pushl
call
pushl
push
call
pop
pop
pop
pop
mov
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
movl
test
je
mov
mov
jmp
push
call
mov
mov
mov
push
push
push
push
xor
push
inc
push
call
mov
mov
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
push
call
mov
push
push
push
push
call
mov
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
jmp
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
add
jb
call
push
icebp
xlat
add
add
out
mov
jmp
add
rcrl
into
mov
jae
adc
lods
rcrl
lret
in
inc
daa
xchg
out
sub
rorb
call
push
aam
xlat
cmc
dec
rcl
roll
out
mov
jmp
add
xchg
rcr
push
out
imul
add
jae
fnstcw
int
fs
sub
ss
push
add
sub
or
jp
pop
pushf
pop
sbb
shlb
loope
mov
push
jp
push
movsb
pop
clc
jne
cmpsl
in
addl
jle
push
mov
inc
outsb
cmp
ljmp
push
insb
lods
pop
sbb
inc
dec
pusha
iret
mov
je
scas
loopne
lods
js
lahf
pusha
imulb
rcrl
or
das
xor
mov
xchg
push
add
fdiv
xchg
add
mov
xchg
es
shrl
xchg
rclb
adc
loop
or
je
pop
je
lds
pop
mov
cmp
mov
sbb
popa
fucomip
imul
repz
sub
imul
push
mov
es
mov
loope
mov
movsb
mov
sbb
pop
ljmp
loop
js
sbb
inc
push
cwtl
bound
fiaddl
lcall
aaa
pushf
xchg
inc
or
sub
mov
xchg
in
sub
sti
das
jne
mov
sbbb
notb
ljmp
or
cmp
icebp
dec
add
mov
repz
jecxz
inc
or
xchg
mov
bound
add
and
dec
cmpsl
jns
cltd
pop
scas
insl
gs
xchg
lahf
test
add
arpl
inc
push
out
sbb
scas
push
inc
cmpsl
xchg
std
jo
sahf
sbb
cmp
push
and
mov
mov
inc
js
ljmp
push
pop
ds
pop
xchg
in
xor
jmp
rcl
sarb
and
mov
mov
ja
lods
inc
or
mov
fdivr
add
mov
xor
insl
lods
lret
add
movsb
sbb
sub
add
push
enter
arpl
xchg
shrl
fsts
xchg
ficompl
cmc
mov
dec
jnp
xchg
xchg
jge
lods
sbb
xchg
mov
xchg
test
xchg
sbb
sahf
mov
pop
push
dec
hlt
push
dec
jo
leave
mov
clc
hlt
mov
pushf
or
shrl
lcall
in
mov
cmpsl
add
dec
or
xor
fildll
jp
dec
sbbb
loop
imul
je
inc
mov
xor
outsb
xchg
lock
push
mov
dec
mov
mov
mov
and
and
outsb
and
pop
mov
mov
rorl
subb
lock
add
adc
add
add
xchg
lods
mov
lret
adc
out
in
lock
jns
jmp
dec
cmc
sub
cli
insb
cmp
leave
sub
pop
mov
cli
cmp
fsubr
xor
jl
push
shrl
sbb
mov
push
add
xor
jge
out
adc
xchg
daa
dec
aam
mov
push
xor
xor
inc
mov
jns
jl
les
imul
scas
pop
push
sbb
lea
inc
mov
and
adc
add
push
loope
and
rorb
leave
inc
cltd
add
adc
add
add
pushf
adc
push
xchg
sbb
jl
bound
fistpll
add
in
push
rclb
dec
fsubs
ja
inc
cmpsb
cmp
jmp
inc
pop
add
shll
pop
hlt
xchg
js
pop
mov
jo
or
mov
ficoms
xchg
xchg
pop
jno
in
xor
insl
addb
xchg
mov
ret
stos
xor
aam
in
push
mov
add
cmpsl
icebp
mov
or
sti
jl
les
lock
push
or
ja
pop
mov
lcall
jg
iret
loopne
cmp
ffreep
xchg
aam
push
pop
stos
push
ja
mov
push
lcall
inc
pop
xchg
sbb
into
lret
js
push
cmp
fistpll
pcmpeqd
mov
lret
cmpsl
dec
mov
movsl
jmp
test
cwtl
mov
pop
pop
addl
add
shrb
jo
popa
clc
imull
pop
das
jne
out
cmpsb
cmp
mov
jecxz
outsl
xor
push
and
jg
sub
push
pop
lcall
push
pop
xchg
sub
arpl
scas
pop
jns
adcb
pop
fiaddl
pop
xlat
xchg
fisubs
add
pop
inc
aas
sbb
dec
test
nop
ret
adc
mov
xor
jb
testb
in
cld
and
int
adc
loopne
push
pop
cld
insb
adc
mov
in
push
or
pop
add
push
or
ljmp
add
mov
dec
cmpsb
les
dec
adc
cmpsl
push
lea
and
insl
out
pop
mov
cmp
jno
fs
mov
jl
and
out
adc
inc
cld
add
loopne
and
add
add
addr16
cmovge
sub
lds
scas
inc
add
xchg
pop
enter
lds
enter
cmp
xor
data16
test
mov
push
adc
scas
jae
repnz
xchg
lcall
cmc
ja
pop
jg
mov
xchg
mov
or
xchg
pop
jo
xchg
inc
xor
xchg
sahf
idivl
add
add
out
mov
sub
xchg
jbe
test
inc
mov
sub
push
adc
pop
fcompl
mov
mov
mov
stos
pop
xchg
adc
cmp
cmpsb
xchg
fmuls
push
mov
je
orb
cld
push
mov
out
jbe
loop
jns
mov
cmc
adc
inc
aas
inc
push
stos
add
mov
add
jbe
mov
mov
out
movsl
jno
pop
fstl
outsb
xchg
jmp
cmp
pop
ret
sbb
movb
add
mov
rorl
pop
or
adc
dec
cld
fs
fs
sub
cwtl
xor
cmovb
fcompl
push
out
adc
fists
lret
shll
gs
adc
mov
cmp
mov
test
jnp
repnz
or
aam
cmp
sbb
jl
pop
ljmp
mov
cmc
lods
mov
sbb
int
popa
call
sbb
sbb
mov
pushf
movsl
gs
jo
jae
jg
enter
jns
inc
jp
adc
divl
push
addr16
add
inc
jp
or
jae
insb
mov
inc
ret
dec
cltd
xor
subb
dec
enter
icebp
sar
int
lahf
inc
push
inc
ret
add
rclb
pop
add
sahf
push
aas
fildll
int
cmpsb
outsl
push
ja
jno
loope
push
fstps
lock
cwtl
daa
sbb
into
add
lcall
adc
int
dec
jno
cmc
sub
mov
xchg
lods
adc
sarl
sub
sahf
mov
outsb
leave
rcrl
xor
add
lcall
sub
pop
popf
mov
xchg
jle
pop
xchg
ljmp
ss
fldt
add
add
orb
out
and
lahf
jmp
je
mov
cmpsl
adc
cmp
out
jb
dec
ret
and
loope
and
int
mov
enter
xchg
xchg
and
loop
jns
mov
mov
std
in
mov
cld
xchg
push
inc
push
inc
add
add
mov
dec
negb
loop
pop
loope
and
sub
ret
inc
std
aam
repnz
mov
pop
rep
test
xchg
adc
lret
test
test
mov
inc
cmp
jbe
cmp
fimull
add
pop
idivl
scas
jecxz
jl
mov
inc
in
lcall
or
imul
test
divb
push
aad
repz
cmc
mov
outsb
repnz
out
sahf
xchg
dec
pusha
mov
pop
clc
sbb
inc
sub
add
add
divb
mov
cli
push
loopne
movb
aaa
icebp
mov
add
gs
js
jns
jl
cwtl
cmp
in
addr16
lock
push
inc
add
call
hlt
or
push
cld
test
icebp
cltd
out
into
out
sub
cmp
add
mov
jmp
and
repnz
add
out
leave
into
jne
ja
jae
outsl
xchg
or
jno
mov
repz
in
flds
push
dec
fs
stos
mov
ja
add
and
cmp
pop
adc
sbb
add
xor
fistl
call
cmp
cli
mov
std
mov
sub
jecxz
clc
cmp
xchg
jmp
notb
mov
jge
xor
jge
xchg
mov
int3
sbb
lret
sti
movsl
mov
mov
pop
push
fiadds
sbbb
push
stc
imul
stos
mov
int3
xor
ljmp
fbld
add
push
hlt
adc
cmp
add
push
cmp
lret
mov
push
popf
pop
cli
popf
inc
adc
sbb
xchg
xor
cs
add
repz
out
test
inc
sub
adc
push
cmpb
lea
xor
cwtl
outsb
es
movsb
mov
call
push
pop
loop
sbb
adc
into
pop
and
push
dec
inc
iret
push
xchg
stos
scas
test
push
mov
dec
add
jl
add
je
int
inc
jl
jge
cmp
mov
sarl
add
movsb
mov
aaa
movsl
cli
stos
add
inc
aas
rcll
dec
arpl
cmc
mov
inc
xchg
add
mov
adc
idivl
xchg
cmp
imul
xor
fstps
or
add
and
mov
loopne
inc
popa
lock
jge
fistps
icebp
cwtl
cmp
xchg
sbb
iret
pushf
lods
xor
push
sbb
mov
lods
int
cli
dec
mov
arpl
inc
aas
imul
sub
push
sti
inc
iret
jl
shlb
imul
scas
inc
xchg
popa
push
mov
mov
addr16
xchg
in
outsb
xor
mov
and
pop
lock
add
jl
loop
xor
add
outsl
pop
jae
hlt
or
add
adc
sbb
int
scas
xor
lea
jbe
pushf
pop
or
das
jecxz
cs
push
in
push
push
sbb
out
pusha
fldenv
cmp
mov
fwait
insl
fisubl
sti
mov
in
sub
xlat
int
sbb
xlat
in
inc
pop
dec
or
inc
dec
or
mov
xor
bound
les
test
repnz
add
add
ud2
mov
inc
fs
inc
test
jge
enter
adc
ja
dec
push
xor
mov
roll
push
xlat
roll
popf
inc
jns
lods
arpl
hlt
pop
aad
push
addr16
int
dec
jne
int3
clc
cs
sub
xor
aas
dec
clc
movb
mov
pop
dec
ficomps
testb
pop
cs
push
ret
mov
mov
and
dec
mov
add
movsb
pop
int
jp
push
das
mov
cmpsb
aas
ja
in
ffreep
gs
popf
xchg
les
mov
mov
leave
adc
mov
mov
clc
ss
cli
scas
push
lret
sbbl
arpl
arpl
mov
stos
mov
cli
pop
add
pop
mov
fnstsw
push
dec
fldcw
ss
and
std
xchg
mov
mov
cmpsb
rorl
lea
cmp
in
or
mov
leave
shlb
add
add
mov
adc
mov
repz
push
int
lods
or
aaa
inc
or
lods
mov
das
mov
adc
sbb
lahf
subl
sbb
outsb
aad
xchg
or
rorl
divb
pop
movsl
or
pop
gs
adc
add
add
xor
mov
fsubp
stos
jle
dec
lcall
adc
xorl
mov
rcll
je
ret
enter
add
cmp
js
lea
loopne
lret
fxch
ljmp
sbbb
sub
ds
push
daa
mov
pop
shlb
lock
jge
jbe
add
cmp
jecxz
mov
sarb
sti
gs
inc
lods
out
sbb
push
lods
push
dec
in
cmpsb
test
cmpsl
pop
lahf
sarb
dec
mov
fbld
and
mov
sbb
je
test
pop
rorl
mov
hlt
jnp
adc
add
xor
popa
loop
cmp
adc
out
jno
adc
scas
add
add
arpl
xchg
test
fs
pop
leave
mov
sbb
push
mov
xchg
sti
xchg
popf
in
cmpsl
inc
js
and
subl
mov
into
sub
scas
add
out
jg
adc
lods
fwait
adc
cwtl
inc
out
iret
sbb
fwait
xchg
push
dec
push
inc
xchg
shll
dec
jmp
add
inc
mov
out
mov
pop
mov
jo
sub
dec
cs
xchg
test
adc
jnp
sub
xor
adcl
jg
popa
ss
rep
cmp
pusha
sbb
mov
jge
add
test
rol
push
sbb
or
dec
jne
mov
cltd
cmp
inc
addr16
ret
icebp
jno
jecxz
add
add
ja
pop
ljmp
fldt
arpl
jbe
adc
addr16
sub
imul
or
ret
inc
fwait
pusha
dec
inc
neg
mov
shrl
push
data16
xchg
mov
inc
cmp
dec
or
pop
and
push
mov
imul
mov
test
repnz
in
mov
pop
mov
pop
sub
dec
cwtl
jg
cld
add
push
inc
cmp
mov
cwtl
jae
sti
jl
push
xchg
in
mov
mov
pop
out
mov
dec
outsb
sbb
push
mov
scas
loopne
adc
aam
jmp
stc
das
sub
jmp
jmp
xlat
sbb
loope
push
testl
xchg
lea
outsl
into
cmp
pop
inc
shrl
scas
ret
cmp
push
pop
cwtl
push
insl
jne
cltd
test
mov
sbb
push
jmp
lcall
lret
cwtl
jae
leave
sub
mov
dec
xlat
int3
pop
xor
and
mov
rolb
fisubs
dec
cmc
cwtl
lods
lds
leave
loope
sbb
inc
das
pop
ret
lcall
cmp
decl
addr16
dec
xor
mov
mov
jne
mov
in
das
cltd
mov
pop
into
mov
mov
les
cmp
shl
ss
in
cmp
movsl
cmpsl
cmp
xchg
outsb
cmp
push
dec
pop
mov
cs
std
imulb
out
in
push
cmp
xchg
jmp
inc
cmp
fsts
and
pop
sub
mov
adc
cli
repz
rol
loope
mov
sbb
add
int3
mov
cmp
dec
jl
xchg
into
scas
fcmovnb
enter
add
cmpsl
adc
cld
repnz
je
loopne
enter
pop
insb
into
leave
pusha
and
inc
loopne
fldt
aaa
in
push
mov
mov
sbb
sub
stos
xor
adc
sbb
out
xchg
fidivs
mov
dec
xchg
das
ret
add
out
adc
adc
fnsave
data16
push
push
fsubrl
lods
adc
inc
add
cmpsb
jns
inc
cmpsb
sub
mov
add
dec
mov
ljmp
pop
out
inc
fisubrs
push
movsb
jo
pop
cmp
dec
sub
inc
enter
sbb
test
std
mov
int
pop
fmuls
shl
stos
mov
cmp
clc
out
jle
repz
push
jns
fsubl
mov
jbe
mov
rclb
add
cmp
push
repz
inc
pop
adc
insb
movsb
lea
jecxz
and
data16
lock
dec
pop
push
out
shll
sub
xlat
and
mov
pop
sub
jg
adc
sbb
dec
push
sbb
jecxz
push
add
and
push
dec
jae
lahf
pop
outsl
fwait
ss
add
pop
xor
jo
mulb
push
cmp
pop
aaa
and
std
andl
movsl
enter
loopne
ret
addb
pop
and
inc
lcall
or
sub
xchg
and
loop
jge
sti
or
repz
jl
sbb
psubd
mov
mov
add
add
cmpsl
outsl
cltd
push
mov
and
pop
sub
xchg
inc
fstpt
test
into
add
clc
adc
popf
int3
std
pop
cmp
lret
rclb
aam
ret
sbb
mov
push
das
lods
popl
pop
sub
xchg
mov
iret
jnp
outsb
or
dec
push
rcll
and
inc
shll
add
cli
sub
pop
cmp
into
add
xchg
test
scas
int3
or
mov
push
scas
add
pushf
popf
mov
xchg
in
shlb
insb
push
cwtl
mov
jmp
jmp
fs
fdivl
daa
pop
cwtl
aad
gs
jl
std
lcall
lock
cmp
insb
in
push
xor
js
mov
in
dec
add
adc
cmp
add
push
aas
rorl
loopne
pop
sbb
pop
cs
add
lds
iret
jmp
and
ss
loope
fwait
push
sub
repz
xchg
add
add
pop
inc
fnsave
jne
nop
hlt
out
movsl
in
adc
ret
out
jns
imul
stos
rclb
xchg
pop
push
loopne
bound
cltd
setnp
jmp
inc
fsub
jg
mov
lock
stos
or
dec
test
dec
pop
fs
sbb
push
jmp
mov
push
mov
xchg
or
xchg
repnz
jno
push
rcrb
test
mov
jnp
add
add
outsl
sbb
aad
jne
mov
or
arpl
aaa
aad
jb
push
inc
cmpsb
xor
mov
dec
inc
insb
lods
nop
lock
and
lret
inc
imul
adc
push
jo
xchg
in
sub
clc
jp
jo
loope
pop
push
imul
mov
bound
cmp
lds
sbbl
push
mov
mov
jg
out
push
lods
pop
mov
dec
stos
roll
add
test
sbb
pop
mov
pop
jle
stos
sub
out
sti
outsb
adc
mov
cmc
mov
data16
adc
jg
mov
pop
cs
add
push
push
pushf
dec
sbb
jmp
aaa
push
stos
xor
xchg
cmpsl
insb
sbb
push
mov
sbb
rorb
lods
xchg
imul
xchg
ljmp
lret
cmp
jb
stc
gs
sub
add
add
rcr
dec
ds
cld
sub
int
dec
imul
fsubrl
xor
cmp
pop
jbe
sarl
fnstcw
outsb
xor
jbe
adc
jb
mov
ret
cmp
xchg
or
cmp
cli
push
lret
push
das
in
xor
mov
jl
popa
or
mov
jmp
stos
jb
popa
enter
dec
jbe
and
arpl
imul
sbb
jne
repz
out
bound
xchg
test
add
fistpl
test
inc
xchg
ja
mov
cltd
loop
dec
in
push
adc
outsb
adc
jg
sbb
jnp
mov
pop
das
scas
movsb
sbb
or
jo
clc
add
and
add
rol
mov
mov
jae
push
cs
into
movsb
dec
cmc
imul
jno
push
lods
adc
out
dec
fcomps
add
add
cmp
stos
xchg
fadds
pop
sub
jmp
dec
ffreep
arpl
sub
imul
mov
mov
mov
mov
inc
stc
popw
in
adc
faddl
and
pop
int3
push
push
xorb
adc
stc
lret
cmp
or
rcrb
xor
push
das
fucom
sbb
sbb
pop
inc
adc
icebp
cli
outsl
in
imul
push
scas
rcrl
and
add
add
hlt
in
fmull
adc
les
icebp
xchg
mov
cmp
or
popa
mov
pop
std
les
pushf
fwait
xor
hlt
lcall
mov
aaa
push
adc
out
out
sbb
pop
repnz
add
shl
mov
test
fidivl
cmc
sub
adc
dec
stc
decl
jg
fldt
icebp
fsub
pop
cmp
pop
dec
rcrb
inc
shl
mov
negl
incl
cmpsl
add
or
xor
push
shl
dec
pop
sub
out
push
aas
cmp
xchg
or
imul
add
out
aas
mov
and
fisubrs
add
ret
push
adc
lea
fwait
in
dec
aam
fists
pop
fisubl
mov
push
not
in
das
fcmovu
push
pushf
ret
pusha
mulb
std
in
sbb
pop
or
xor
push
push
mov
fadds
shl
dec
std
inc
pop
imul
repnz
mull
or
jle
js
xor
mov
push
mov
pop
nop
lds
ret
lahf
mov
xchg
jb
dec
dec
sub
inc
mull
mov
dec
jge
inc
popf
inc
mov
sub
int3
pop
ljmp
ljmp
or
push
or
addb
push
mov
lcall
leave
mov
lds
ds
xchg
mov
popa
sbb
cld
scas
dec
inc
stos
push
dec
dec
jg
sti
inc
mov
imul
fisubl
pop
fcompl
or
loope
add
xchg
mov
das
sahf
push
scas
jne
pop
mov
lds
lds
in
xchg
cmp
push
clc
push
push
sbb
push
das
mov
aaa
mov
pop
rorl
popa
sbb
ret
xchg
aad
adc
sub
test
and
fs
pusha
lret
jp
sub
ret
jmp
adc
add
add
inc
icebp
call
sub
push
data16
push
pop
jno
cld
clc
adc
rol
sbb
rcrl
xor
mov
test
adc
mov
xor
xchg
jns
das
fwait
stc
mov
test
or
fwait
cmp
outsl
add
lahf
popf
call
dec
xor
inc
loop
add
out
mov
pushf
jb
push
push
and
and
adc
xor
add
add
pop
or
inc
pop
dec
ret
mov
push
orl
sbb
xchg
lods
cmpsl
xchg
xchg
nop
mov
out
aad
ja
lods
mov
pop
inc
ljmp
pop
sbb
scas
rorl
xchg
pop
push
dec
xchg
jle
imul
scas
insb
jge
mov
fstl
ljmp
xor
insl
lret
add
dec
or
mov
cmp
loop
out
push
mov
adc
fcoml
or
inc
imul
add
add
ret
pop
push
lcall
or
stos
add
jmp
dec
sub
aas
mov
mov
lods
dec
lods
sbb
push
and
inc
mov
fidivs
insb
mov
lea
iret
sub
loop
sahf
fdivrs
add
jno
cmpsb
sbb
mov
add
stos
das
in
mov
ret
dec
in
or
in
mov
adc
leave
jmp
test
inc
ljmp
add
add
cltd
xchg
inc
mov
lds
adc
xchg
cmpsb
dec
inc
jns
fcom
cmpsb
testl
inc
daa
lcall
cmp
int3
aam
in
sbb
jnp
test
lcall
cmp
dec
cmp
inc
sub
or
push
mov
sub
std
mov
jb
inc
mov
cmpl
add
sbb
pop
xchg
in
out
test
xchg
aas
test
mov
add
js
ja
or
xchg
bound
sbb
push
fmull
cmp
in
push
clc
mov
mov
stos
sub
loopne
xchg
ret
cmp
jo
sub
ret
iret
cmp
cmpsl
xchg
add
mov
lds
and
inc
cli
cmp
hlt
xor
adc
sbb
ds
in
xchg
jae
jl
xchg
add
popa
loope
add
sarb
xchg
xlat
leave
dec
fidivl
mov
add
pop
outsb
add
mov
inc
into
xor
mov
leave
ret
sbb
and
mov
dec
lods
or
and
jns
sub
or
mov
test
movsb
mov
cwtl
pop
mov
mov
mov
fcomip
sti
test
lods
jb
push
pop
je
xchg
add
nop
aad
loope
in
xor
cmp
bnd
aam
jno
fcmovu
push
ret
bound
add
add
iret
fstps
sub
mov
add
subb
xor
scas
add
and
cmp
loop
sub
push
jns
mov
decl
jl
arpl
sub
mov
sbb
test
lds
push
jo
mov
leave
arpl
lds
add
sub
pushl
push
and
xor
adc
sub
sbb
ds
shlb
push
mov
cvtpi2ps
inc
jp
sbb
push
mov
mov
iret
xchg
cmp
pop
mov
jl
cmpsl
jnp
or
sbb
testb
add
jl
pop
add
test
popf
aad
leave
xchg
push
pop
iret
das
cmp
stos
lahf
shll
mov
dec
sub
push
clc
or
sub
insl
or
cmp
add
cmp
lods
adc
out
mov
lea
jns
rcrb
mov
stc
sub
test
out
inc
sub
int
loopne
sbb
fimull
inc
out
outsl
sbb
jge
pop
dec
add
jne
inc
jnp
lock
pop
dec
add
loop
xor
inc
lahf
mov
popf
es
daa
pushf
xor
inc
xchg
data16
aad
dec
imul
dec
push
cmp
adc
pop
out
or
js
js
push
push
xchg
addb
inc
xchg
hlt
pop
mov
mov
fsubl
cmp
pop
popa
xlat
xchg
jae
xchg
repz
icebp
sti
hlt
aas
jnp
dec
popf
mov
xlat
js
lods
lods
sub
fwait
or
repnz
and
add
sarb
xchg
pop
fs
and
mov
orl
jl
mov
pop
cli
xchg
ret
xchg
jo
aas
test
adc
enter
test
fadds
push
or
movsl
pop
stc
xchg
sub
ja
xchg
daa
jp
adc
fisttps
fbstp
xor
mov
movb
mov
push
or
add
sahf
sbb
push
movsb
mov
into
addr16
insl
jne
aam
fldcw
int
push
xchg
push
bound
jp
popf
or
xlat
aam
cltd
xchg
scas
dec
ds
loop
mov
adc
insl
les
cmpsb
xchg
mov
ret
cmp
idivl
repnz
inc
mov
out
xchg
in
push
add
int3
cmp
lods
jecxz
mov
into
xor
and
mov
dec
dec
cmpsb
roll
sub
push
adc
hlt
std
or
add
xchg
stos
cmc
jg
jl
or
rcrb
jp
scas
mov
movsb
mov
add
rorb
aas
in
outsl
mov
xchg
or
sub
ss
cmp
movb
adc
jns
jmp
rolb
sub
xor
jb
dec
fnstcw
lahf
outsb
loop
in
mov
decl
mov
dec
stc
int
cmp
mov
into
add
std
add
push
inc
mov
pop
mov
xchg
insl
jae
sbb
sbb
cld
xor
mov
push
cmp
cmp
add
cli
cmp
fisttpl
call
mov
xor
rolb
cli
aad
or
and
xor
repnz
dec
pop
aaa
lea
in
mov
jg
inc
mov
subb
rcrl
add
test
sbb
stc
popf
push
arpl
stos
mov
mov
or
dec
cmp
cmp
outsb
scas
pop
push
sar
push
fcompl
add
xchg
lock
sbb
in
adc
push
jns
loope
subl
adc
das
test
inc
jl
jp
sbb
sub
jbe
xlat
or
loopne
mov
outsl
addr16
test
mov
add
popf
add
xlat
filds
mul
aad
ds
push
jmp
and
dec
xchg
lods
or
lods
xlat
out
push
dec
cwtl
push
mov
mov
mov
sub
xor
popf
in
outsl
mov
lea
jg
js
xor
pop
adc
cmpsb
push
lods
lds
jo
add
cltd
cmp
adc
mov
push
aaa
ret
jo
dec
mov
outsb
xor
lods
xchg
pop
xchg
mov
add
mov
adc
dec
in
cli
inc
pop
insl
test
aas
sub
or
lods
into
add
xchg
dec
lods
mov
dec
shll
sti
test
insl
fdivrl
sbb
jge
iret
mov
and
cmp
andb
xchg
repnz
ret
dec
inc
add
andl
sub
hlt
mov
shrl
cwtl
jecxz
fldt
imul
cmp
jmp
push
push
mov
pop
aas
fldl
cmp
push
pop
inc
adc
or
pop
enter
add
ds
sbb
loope
mov
and
stc
and
test
sahf
xor
les
xchg
ret
or
add
xor
sub
repnz
das
inc
adc
popa
in
cmpb
fcoml
sti
mov
lret
pop
cmp
lcall
int3
or
or
out
xor
hlt
cmp
or
fists
test
lock
jle
xchg
in
xabort
mov
cmp
dec
adc
xor
jmp
adc
pop
xchg
push
cli
mov
and
test
sub
mov
push
sarl
test
jo,pt
out
add
rorl
push
inc
mov
loopne
bound
sub
mov
fwait
ret
xchg
imul
or
or
test
aaa
addl
fs
push
inc
fwait
lods
cmpsb
iret
out
xchg
stc
add
shrb
filds
lret
sub
mov
mov
cmp
roll
add
lock
gs
add
or
cmc
imul
sub
dec
stos
rclb
jmp
movb
divb
lds
push
test
pop
das
ficoml
cwtl
cltd
cwtl
scas
lods
xlat
gs
sbb
jge
add
fwait
or
out
lret
mov
or
mov
loopne
popf
pushf
sub
sahf
sub
ljmp
rorb
je
jo
icebp
cmp
ljmp
imul
fwait
dec
popf
aas
xor
stos
adc
and
sub
jnp
cltd
xlat
clc
push
xor
dec
sbb
inc
fldenv
fwait
out
cmpsb
mov
rcll
mov
push
lods
insb
adc
fdivl
lds
ss
xorb
pop
cmp
nop
mov
lret
and
ret
mov
add
add
dec
dec
mov
pop
and
movsl
push
and
pop
fwait
shrl
pop
adc
loope
xor
out
addr16
dec
mov
enter
cmp
fsub
mov
sbb
cmp
leave
fstps
lods
or
xor
fisttps
fldz
lret
in
cmp
into
pop
push
int3
in
punpckhdq
scas
add
pop
insb
mov
xchg
es
lcall
ja
cmp
popf
in
dec
in
data16
mov
ja
mov
out
out
sub
xor
inc
dec
xchg
adc
call
test
mov
cld
out
mov
lea
aaa
inc
lods
movsl
cmp
sbb
test
add
aam
pusha
mov
popf
in
das
pop
lock
adc
aaa
enter
lods
insl
cmp
fmull
mov
mov
psubw
imulb
and
cltd
shlb
into
leave
mov
push
mov
xor
dec
and
out
and
andl
jno
scas
or
je
jne
sti
inc
sarl
aad
jbe
rcl
jb
pop
push
inc
fildl
mov
adc
adc
out
mov
xor
add
fxch
mov
and
test
add
mov
sub
xchg
shl
daa
jge
out
sbb
inc
adc
sub
outsl
in
mov
xchg
enter
jp
mov
notl
sub
jno
and
es
xor
adc
push
sbb
cwtl
and
push
and
or
int
aas
sub
push
sti
out
je
pop
jns
lock
dec
loope
je
push
jns
dec
jmp
jmp
push
insb
sbb
clc
xor
jno
add
adc
sub
sub
inc
into
mov
pop
outsb
jl
lea
