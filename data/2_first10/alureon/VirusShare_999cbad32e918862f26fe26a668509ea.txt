sub
dec
pop
in
sub
mov
mov
jp
add
mov
inc
stos
popa
jg
rcrl
inc
cmpsb
pop
mov
test
aam
add
jl
mov
fldcw
push
in
mov
dec
rcr
mov
jge
add
ljmp
cmc
fsubrs
mov
stc
push
loop
fsubrs
call
lret
mov
popa
cmc
pop
je
stc
cmpsb
adc
pop
imul
leave
xchg
movl
in
push
jnp
sbb
sbb
test
sub
dec
add
xchg
sbb
push
inc
fstpl
hlt
xor
loop
ds
xorb
jmp
mov
aaa
enter
hlt
pop
push
adc
stos
pushf
lahf
repz
bound
pop
dec
into
repz
push
adc
cmp
aad
mov
rorl
ljmp
int3
add
mov
pushf
sbb
mov
pop
cmp
popa
pop
mov
int3
cwtl
push
repz
ds
loope
mov
andl
lret
mov
out
dec
pop
idiv
adc
or
les
xchg
dec
xor
push
dec
call
sbb
push
jge
mov
dec
popa
ret
rorl
adc
mov
inc
sub
mov
mov
mov
xchg
jo
pusha
hlt
inc
aaa
and
lret
bound
das
enter
xchg
lods
jge
aas
scas
add
jmp
ljmp
or
movsl
mov
xchg
lods
pop
popa
frstor
mov
sbb
pop
xchg
pop
out
hlt
or
repnz
cmovo
jle
cmc
xchg
push
inc
sub
add
mov
push
jae
mov
cmp
pop
fidivs
push
outsb
movsl
or
xchg
push
es
arpl
aaa
repz
fcompl
fs
jbe
push
int
mov
and
sbb
xchg
in
or
sub
test
filds
jle
sahf
mov
adc
pop
add
std
pop
shrl
in
je
cld
popf
cmc
pop
or
lea
push
out
mov
mov
inc
loopne
lret
cld
loop
xor
cmp
in
mov
and
call
dec
xor
call
lea
push
dec
call
dec
mov
xor
movzwl
sub
mov
call
and
dec
dec
add
mov
and
mov
dec
movswl
mov
mov
lea
dec
call
inc
add
mov
mov
mov
call
mov
movsbl
call
lea
dec
inc
sub
mov
imul
mov
dec
lea
pop
mov
sub
lea
add
dec
pop
dec
inc
pop
dec
lea
dec
mov
pop
dec
inc
inc
inc
xor
movzbl
imul
mov
pop
mov
mov
pop
dec
inc
mov
mov
mov
call
sub
dec
inc
imul
ret
imul
inc
push
lea
inc
push
inc
dec
push
dec
lea
push
dec
sub
push
or
mov
mov
sub
add
push
sub
ret
push
mov
sub
dec
mov
inc
inc
inc
push
sub
sub
inc
call
pop
ret
push
jmp
mov
movzbl
mov
dec
mov
sub
add
mov
movswl
mov
movzbl
imul
add
add
mov
dec
and
mov
mov
movzbl
add
inc
xchg
mov
dec
mov
lea
xor
mov
mov
lea
mov
inc
inc
inc
dec
jne
imul
mov
sub
movzwl
pop
add
sub
pop
imul
imul
pop
imul
movsbl
inc
inc
mov
or
mov
inc
sub
movsbl
inc
add
ret
push
push
mov
mov
push
mov
sub
inc
lea
and
mov
push
dec
mov
mov
dec
push
sub
inc
sub
dec
mov
dec
lea
push
movzbl
mov
imul
push
add
xor
xor
mov
lea
push
inc
dec
push
mov
sub
pushl
inc
call
inc
add
mov
mov
dec
inc
movsbl
mov
movzbl
pop
ret
and
movzbl
or
add
and
add
dec
inc
movzbl
dec
inc
sub
sub
add
add
inc
inc
mov
movswl
mov
xor
lea
sub
lea
inc
sub
cmp
jb
xor
dec
mov
movzbl
imul
mov
imul
inc
inc
dec
inc
lea
add
inc
or
mov
and
movswl
cmp
jb
add
pop
and
mov
movzwl
dec
inc
inc
inc
lea
imul
lea
inc
add
imul
xor
or
inc
xor
and
mov
movzwl
test
jbe
movsbl
movswl
or
add
add
inc
mov
dec
movswl
mov
dec
inc
and
mov
mov
mov
imul
xor
movzbl
lea
and
add
add
imul
and
movzwl
mov
add
mov
mov
dec
add
mov
or
lea
mov
xor
inc
add
dec
movswl
lea
dec
jne
lea
mov
imul
dec
inc
imul
lea
inc
dec
imul
imul
add
mov
inc
and
dec
inc
dec
mov
add
sub
mov
lea
inc
test
jbe
mov
and
imul
sub
lea
inc
dec
inc
add
mov
dec
inc
add
inc
mov
inc
dec
movswl
add
sub
inc
mov
and
sub
inc
mov
inc
inc
movzbl
sub
inc
add
mov
and
and
mov
dec
mov
add
jmp
add
mov
dec
dec
add
mov
lea
imul
dec
xor
mov
dec
movsbl
xor
add
inc
dec
xor
and
inc
sub
add
dec
add
mov
sub
dec
mov
lea
add
lea
sub
imul
xor
dec
inc
inc
mov
add
cmp
je
inc
dec
mov
lea
or
dec
mov
xor
dec
add
mov
lea
imul
inc
mov
sub
dec
dec
mov
sub
mov
lea
mov
xor
lea
mov
mov
inc
sub
lea
mov
mov
add
dec
mov
dec
lea
imul
xor
lea
mov
mov
lea
sub
dec
lea
add
sub
mov
or
mov
imul
inc
movsbl
movsbl
sub
sub
lea
dec
and
inc
inc
mov
mov
movswl
mov
lea
inc
movzwl
mov
lea
add
inc
inc
movsbl
sub
xor
add
mov
ret
dec
add
pop
movzbl
ret
push
dec
mov
sub
mov
dec
push
inc
inc
push
add
push
inc
push
lea
mov
movsbl
inc
or
call
add
push
mov
movsbl
xor
sub
sub
mov
neg
imul
movsbl
add
jmp
dec
dec
imul
mov
mov
mov
mov
movswl
inc
inc
add
lea
dec
je
and
dec
dec
mov
inc
imul
mov
mov
mov
mov
mov
repnz
dec
mov
add
sub
jmp
dec
dec
add
inc
xor
inc
mov
dec
lea
inc
dec
mov
and
inc
mov
add
pop
pop
ret
push
sub
or
dec
inc
inc
sub
dec
dec
or
inc
lea
add
inc
mov
inc
mov
imul
inc
dec
dec
imul
inc
dec
dec
mov
inc
pop
ret
sub
add
mov
mov
inc
mov
lea
inc
mov
mov
dec
mov
dec
mov
xor
add
lea
mov
dec
dec
inc
imul
inc
add
mov
add
add
cmp
jb
imul
push
imul
inc
push
add
sub
push
sub
inc
xor
sub
dec
xor
xor
or
xor
add
add
push
inc
imul
mov
inc
lea
xor
add
add
mov
movzwl
inc
mov
mov
xor
movzbl
mov
jmp
inc
scas
mov
mov
loope
push
sahf
out
push
aad
stc
pop
and
mov
inc
sub
outsb
fldt
mov
mov
jmp
aad
inc
jg
xorb
push
cmp
xor
adc
jo
sbb
les
psubw
xchg
jl
xchg
lret
mov
pop
mov
add
fnsave
dec
clc
mov
xor
mov
jnp
inc
cld
mov
pop
lea
mov
mov
fs
in
insb
mov
shrl
fcmovne
sbb
jns
in
fildll
jae
ss
repnz
in
popa
movsb
xchg
or
sbb
ja
sahf
cwtl
mov
mov
pop
daa
sbb
sbb
push
loope
pop
mov
sbb
jle
shll
cmp
out
push
jbe
lods
test
cmpsl
leave
jl
aad
les
scas
push
sub
add
les
sbb
mov
nop
sbb
dec
jle
fiadds
out
loopne
mov
cwtl
lods
in
testb
adc
daa
xor
icebp
xchg
pushf
testl
mov
mov
shr
add
mov
jno
cli
shrb
jns
inc
repnz
lock
fstl
js
pop
addr16
jae
es
cmp
dec
out
dec
jmp
aas
push
pop
lahf
pop
mov
mov
xchg
loopne
xor
inc
rol
ja
popf
mov
fistpll
push
cmpb
pop
cmp
jmp
jp
filds
negl
jns
out
outsb
mov
outsb
dec
dec
mov
js
pop
pmaddwd
xchg
inc
aad
add
cmpsl
sub
fmuls
ret
fsubs
mov
enter
mov
mov
ss
add
daa
mov
jb
push
iret
lods
push
sbb
std
sbb
sahf
mov
cltd
xorl
in
mov
fs
dec
out
ja
push
jo
scas
mov
sub
andb
call
mov
cmp
mov
mov
sbb
push
mov
cmp
test
shrl
inc
jb
dec
movsl
add
aas
sbb
sar
push
clc
popa
jp
sub
out
popf
jle
sbb
cmp
shr
sbb
ss
push
ds
les
cmpsl
lahf
jno
outsb
iret
or
sub
jbe
dec
jae
int
and
mov
test
xchg
jo
call
shl
roll
mov
lds
add
sub
out
loopne
ja
into
out
scas
loope
jne
or
xlat
mov
adc
and
jne
icebp
repnz
xlat
test
jle
rcrb
jne
jecxz
or
fnsave
cli
pushf
and
std
jmp
add
mov
bswap
and
adcl
out
mov
in
jg
mov
scas
pusha
outsb
jl
or
sbb
popaw
xorb
cmp
xor
inc
adcl
mov
and
mov
addr16
mov
incl
cli
pop
ss
jmp
out
scas
fadds
cs
xor
mov
pop
std
add
loopne
in
jns
cmpsb
or
dec
mov
cs
mov
xor
mov
sub
aad
push
mov
stos
push
popa
lcall
xor
jae
div
or
mov
enter
jo
xor
mov
and
fidivs
rorb
cld
inc
pop
and
dec
adc
pop
mov
xor
test
sar
lcall
xchg
pop
ja
add
xor
adc
xor
fsts
xchg
lods
cmpsl
sbb
pop
les
cmp
js
cmp
jo
inc
enter
cmp
lret
jecxz
jb
mov
stos
int
and
hlt
ret
pop
outsl
enter
out
test
push
leave
sub
mov
xchg
xchg
popf
inc
adc
adc
xlat
adcl
cmpsb
lea
ret
cmc
cmpsb
sub
fadd
jns
and
dec
or
imull
push
mov
loopne
stos
dec
xor
jl
add
inc
outsl
outsb
dec
xor
ja
adc
cmc
mov
sub
in
scas
ret
or
icebp
xor
add
cwtl
in
inc
rorb
mov
sbb
cmp
in
lock
and
inc
mov
push
into
sbb
sub
stc
pop
dec
movsl
jecxz
frstor
xchg
xor
mov
adc
gs
lret
sbb
repz
lcall
mov
lret
adc
pop
add
clc
pop
sti
xchg
int
insl
and
arpl
jo
xor
loope
aas
jp
mov
push
push
cmp
leave
test
push
dec
jmp
fdivrl
adc
cmp
sbbl
or
imull
mov
push
sbb
xor
sahf
sub
pushf
push
and
xor
lods
lahf
repnz
cli
insl
insb
outsb
cli
in
mov
ret
test
pop
jbe
mov
stc
lret
fnstcw
fdivrl
lcall
sbbb
ficompl
clc
jo
mov
lret
fdivs
mov
lret
insl
mov
pop
dec
test
jmp
push
mov
adc
pop
mov
mov
rorl
mov
sub
pop
sbb
popa
stc
push
cmp
push
jl
xor
sarl
mov
out
rorb
adc
cmc
ficoms
icebp
sub
std
mov
aam
inc
dec
xor
leave
inc
mov
ja
shll
xchg
dec
and
in
adc
sub
jp
stc
js
stos
inc
mov
fld
mov
pop
sub
jno
add
cmp
inc
into
xchg
sbb
sub
xor
bound
inc
aad
cmp
pop
push
fcompl
sbb
sub
movsb
int3
cmp
xor
add
xchg
push
jns
add
xchg
sbb
in
or
mov
and
lret
insb
mov
aad
or
ja
nop
add
jb
insb
add
test
gs
push
jnp
rorb
add
inc
into
push
pop
insb
stos
icebp
jne
push
lret
mov
lds
cmpsb
or
sbb
and
lret
ret
push
xchg
pop
movsb
or
xor
add
loope
and
lret
cmp
insb
inc
je
xchg
add
nop
out
pop
mov
outsl
sti
mov
nop
movb
jbe
add
lods
pop
pop
xchg
sbb
adc
push
iret
scas
mov
and
flds
adc
je
cltd
shl
cmp
mov
decl
cli
popf
inc
jecxz
pop
push
in
mov
imul
call
fnstcw
cmp
adc
int
jbe
cmp
stc
pop
push
xchg
push
jbe
adc
ja
jnp
sbb
pop
fisttpl
and
add
pusha
xor
scas
add
dec
push
pop
adc
sub
loopne
push
jo
adc
xor
flds
xor
js
into
call
xor
push
push
xchg
inc
xchg
lds
pop
iret
jns
push
in
rolb
pop
or
jle
js
push
sub
and
ja
inc
fdivrs
mov
sub
cmp
pop
cmpsl
sbb
push
cmpsl
sub
in
ret
into
leave
pop
stos
xchg
or
mov
icebp
rol
sub
mov
cmp
push
stc
cmp
cli
mov
sub
bound
or
jge,pt
and
xchg
lods
jne
out
xor
mov
cmp
fwait
sbb
ret
mov
mov
popf
or
iret
cwtl
mov
mov
ljmp
sbb
scas
jo
pop
ja
in
inc
sub
push
ror
nop
adc
scas
and
adc
shrl
or
leave
stos
rcl
mov
jo
in
and
pop
xor
dec
push
or
shrb
and
imul
sub
and
incb
jp
lods
movsb
inc
xchg
call
dec
adc
and
call
mov
sbb
push
mov
add
jno
inc
push
jmp
movsl
aam
mov
and
loop
cmc
mov
jbe
jmp
mov
in
je
stos
cltd
mov
push
mov
fsubp
pop
ffree
cld
sahf
push
mov
incb
stos
fcmovu
movsl
rcll
pop
fld
push
jmp
inc
mov
xchg
add
stos
dec
in
jle
pop
jbe
xchg
in
lret
inc
lret
cld
ret
adc
bound
nop
lahf
out
sub
int
loop
sbb
mov
mov
push
rorl
out
incb
pop
adc
inc
and
and
fstpt
ja
mov
scas
mov
ljmp
jnp
lds
mov
out
mov
jns
or
bound
mov
mov
mov
add
lret
jl
dec
push
push
and
mov
stos
js
fimull
insl
push
clc
out
in
lea
cli
repz
movsl
ret
adc
sti
rcrb
xchg
imul
dec
cmpsl
fcoml
and
mov
inc
clc
push
push
add
add
inc
js
add
fists
add
subb
fwait
jl
xchg
jno
shrl
or
addb
xchg
sbb
sarb
sbb
icebp
and
inc
push
fs
mov
lods
mov
cmp
call
out
mov
jo
iret
jge
loop
mov
sahf
stos
movsl
loopne
setp
cmp
mov
pop
in
lret
mov
push
jne
repz
lahf
push
dec
icebp
or
dec
or
fmul
jle
ret
idivl
sbb
push
push
shl
jecxz
dec
xchg
adc
ret
mov
divb
mov
pusha
mov
mov
push
push
outsl
inc
mov
pop
add
mov
inc
int3
jmp
or
xchg
test
mov
les
cmp
adc
aad
xlat
test
mov
out
push
les
inc
ljmp
jle
ret
xor
jb
mov
cmp
inc
in
mov
iret
fs
dec
es
or
adc
fsubrp
mov
jg
push
out
sub
nop
dec
adc
inc
adc
popl
adc
push
jbe
push
xchg
and
sbb
inc
push
cld
jge
mov
sahf
ja
insl
dec
ret
mov
xchg
ficomps
ljmp
sbbl
xchg
negb
mov
mov
test
push
xor
stc
push
adc
adc
pop
mov
jne
inc
insl
xor
mov
push
xchg
sub
adc
ljmp
pop
out
enter
arpl
jo
loop
fsub
push
mov
or
inc
cmp
or
mov
rcl
je
or
mov
adc
push
das
or
jb
sbbl
lods
push
and
push
push
loope
ficomps
clc
sub
mov
sbb
inc
mov
add
lea
mov
fdivl
fidivl
out
jno
cltd
push
push
push
mov
pop
out
lock
leave
scas
jb
inc
inc
lahf
inc
mov
and
jecxz
lret
or
imul
inc
mov
pop
std
xchg
nop
mov
mov
lcall
std
push
movsl
xchg
cmp
push
repz
xchg
sub
std
icebp
out
mov
pop
sub
xor
mov
cmovge
mov
or
imul
ja
push
aas
sub
sahf
fldt
xchg
push
jge
xorb
aam
std
loopne
fildl
xchg
daa
inc
jmp
xor
mov
xchg
adc
inc
xchg
jmp
push
int3
inc
dec
cmp
lret
hlt
lret
stc
shl
shll
push
loope
sahf
and
mov
push
lret
jecxz
jae
aam
jle
aad
clc
inc
movsl
jge
cmpb
pop
mov
add
mov
mov
repnz
xor
movl
or
fwait
adc
repz
sub
insb
fisubrs
daa
dec
pop
mov
addr16
push
dec
cltd
lea
dec
push
cmpsl
gs
lahf
mov
hlt
test
push
add
cwtl
dec
jge
mov
xor
mov
xor
and
fidivrs
enter
jae
sahf
out
filds
in
fsts
push
sahf
jp
cmc
lods
lahf
inc
lret
push
jns
sub
cs
or
jecxz
cmovp
or
pop
loope
idivl
push
out
mov
cwtl
mov
jle
outsl
and
cli
xchg
and
pop
pop
test
inc
and
inc
jmp
insl
loop
lea
push
aas
push
push
iret
dec
scas
call
mov
arpl
sbb
fdivrl
inc
shl
mov
arpl
or
adc
fdivl
fnstenv
testl
rolb
inc
cmp
mov
ja
in
xchg
aas
sbb
or
push
push
push
jecxz
cwtl
pop
pop
movsl
pop
pushf
mov
jb
daa
enter
les
repz
lock
jecxz
add
push
aam
test
sub
jnp
popf
fistpl
faddl
mov
aaa
shlb
test
fs
sub
fistpll
cmp
push
mov
push
jp
mov
adc
sbb
or
mov
pusha
popa
inc
xor
xchg
adc
jno
and
pusha
pop
jge
imul
push
xchg
dec
push
push
xchg
xor
cmp
push
mov
lods
cmp
jl
fisttpl
dec
movsb
es
jecxz
mov
pop
lea
pushf
ret
inc
shlb
test
sub
push
or
lods
pop
nop
inc
bound
jnp
in
cmpsl
popf
shr
fwait
pop
pop
loopne
imul
rorb
dec
leave
cmp
sbb
jo
and
jo
mov
ja
sbb
es
mov
adc
in
add
cmp
divl
rcrl
pop
push
test
es
test
pusha
icebp
dec
dec
mov
fldenv
bound
in
push
pushf
dec
pop
mov
xchg
xchg
repnz
xor
mov
add
enter
pop
into
fld
shrl
cs
fs
cli
test
faddl
or
mov
push
sbb
hlt
push
call
pop
push
fiaddl
fimuls
or
push
lock
cwtl
iret
dec
dec
in
add
and
mov
andb
addr16
and
int3
fiaddl
cltd
push
or
xchg
inc
fcompl
les
aam
push
dec
addr16
cmpsl
out
cmp
aad
pop
cmp
pop
imul
cmp
sub
and
call
nop
push
pop
int3
inc
mov
adc
cmp
movsl
pusha
mov
popa
pop
inc
out
or
orb
test
fcomp
xchg
mov
in
orb
pop
shrb
and
inc
lea
je
fstpt
repnz
xchg
pop
pop
xchg
scas
cmp
adc
jnp
xchg
adc
aas
test
jne
mov
pop
out
pop
stos
insl
addb
adc
push
lahf
cmp
jmp
inc
add
movsb
fidivrs
dec
mov
xor
push
jl
test
sbb
loopne
adc
or
les
arpl
loope
lods
or
jp
jl
sti
pop
arpl
add
jl
adcl
push
sbbl
and
pop
mov
adc
sbb
mov
push
mov
xor
cmp
call
popf
mov
adcl
lcall
arpl
jb
add
fldt
out
pop
pop
dec
lock
pop
mov
lock
insl
shrb
popf
inc
or
mov
sub
inc
jnp
xor
sbb
push
mov
popa
out
dec
add
mov
jp
ss
repz
jg
decb
sti
cmp
push
mov
stos
ds
repz
and
stos
pop
jecxz
xlat
xor
cmp
inc
sti
popf
lcall
inc
test
hlt
mov
into
call
mov
cli
cmp
sar
ds
adc
jp
or
rorb
cmpsb
mov
call
xor
pop
mov
mov
xchg
jmp
fwait
push
pop
xor
mov
add
cwtl
mov
mov
insl
xchg
test
dec
push
mov
cs
int
lret
adc
jno
xchg
movsb
rcl
dec
in
pop
inc
mov
iret
xchg
popf
cmp
dec
push
gs
test
jg
jg
adc
imul
push
push
pop
inc
xor
inc
sbb
ret
pop
push
hlt
dec
mov
and
add
push
daa
aam
callw
popa
xchg
test
push
loope
cld
xchg
mov
repz
cmpsb
sub
das
fistpll
or
xchg
imul
sub
sti
cmp
xchg
mov
fbld
jbe
into
jae
inc
mov
sbb
mov
enter
mov
sbb
bound
dec
pop
out
adc
mov
mov
out
xchg
and
dec
add
lret
pop
in
les
mov
je
push
xlat
enter
fdivrs
and
mov
hlt
fnstcw
int3
xchg
mov
cmpsb
adc
xor
out
call
shrb
rclb
xchg
fisubrs
insl
xchg
es
inc
or
hlt
in
outsl
xchg
xor
testl
dec
mov
fwait
mov
mov
pop
push
sbb
sub
rcr
or
inc
xor
jne
enter
push
cmp
sbb
add
aaa
cmc
jnp
push
push
lods
mov
imul
cmc
mov
sbb
sub
js
stc
scas
dec
adc
loopne
in
push
test
or
shl
cmc
sub
cmc
mov
or
pushf
adc
or
fldcw
dec
aaa
cmp
xor
and
jmp
xchg
and
scas
cld
jns
lret
adc
mov
dec
inc
mov
ja
mov
dec
pushf
mov
ja
les
jo
cmp
inc
jle
push
jmp
enter
or
mov
and
sub
adc
dec
inc
adc
daa
insl
daa
mov
pushf
xor
aad
add
dec
imul
pop
aas
or
je
xchg
or
lds
scas
addr16
jns
mov
sbb
push
jae
add
mov
jecxz
es
xchg
sbb
and
stos
push
mov
inc
es
mov
mov
loop
das
pop
fcom
pop
hlt
mov
fdiv
aam
je
and
sub
pop
mov
jnp
dec
mov
mov
mov
dec
or
sub
mov
fidivrl
push
add
pop
or
pop
loope
xchg
hlt
lds
sub
push
gs
add
pop
sub
mov
in
std
jb
add
jno
loopne
cli
fstl
xchg
push
pop
push
jbe
sub
mov
inc
pop
pop
hlt
add
fs
inc
aas
xor
test
inc
pop
and
mov
cmp
inc
sub
push
inc
pop
push
ds
jns
push
pop
daa
inc
push
jl
dec
push
mov
push
pop
add
and
cmp
or
scas
and
les
je
test
rcrb
pop
jo
and
pop
pusha
dec
dec
aad
pop
add
das
fisttpl
leave
popf
stos
sub
cmp
or
sbb
adc
test
cs
bound
push
and
add
lds
cli
andl
rcrl
mov
loop
orl
xchg
scas
dec
inc
or
sti
mov
ret
shrb
dec
jg
cmpsl
hlt
out
shl
daa
lret
and
push
or
adc
push
xor
fstl
xchg
dec
cmp
sub
or
cmp
mov
and
push
lock
ja
fs
adc
negl
or
std
dec
dec
or
jle
jo
xchg
aas
inc
lahf
and
cs
bound
adc
inc
jo
push
adc
lods
sub
xchg
in
xor
les
sbb
call
add
out
fimull
mov
loope
adc
add
pusha
dec
jnp
sub
aas
xchg
lods
push
cmp
mov
ret
and
int3
mov
insl
xchg
sbb
out
mov
xchg
test
leave
xchg
in
mov
jmp
jle
mov
pop
mov
idivl
repz
inc
es
repz
scas
cmc
sbb
mov
sub
test
jmp
out
mov
lods
push
loope
mov
sahf
int3
add
int
mov
adc
icebp
addr16
cli
xchg
add
mov
flds
inc
and
addb
into
jae
cmp
inc
out
pop
sti
inc
xchg
aas
xchg
mov
imul
out
out
dec
and
cmpb
into
out
sbb
push
mov
imull
lock
es
mov
adc
pop
stc
popf
clc
iret
insl
out
in
sbb
movb
int3
mov
or
push
cmp
push
cs
in
inc
add
fidivrs
cmpsl
pusha
loope
mov
ljmp
je
sarb
pusha
push
loop
mov
push
xor
mov
pushf
add
lods
nop
mov
aaa
pop
dec
or
stc
jno
cld
cltd
inc
stos
test
dec
mov
mov
xlat
out
cmp
addr16
and
insb
btc
adc
xchg
insb
inc
sbb
sub
mov
or
icebp
push
mov
mov
loope
lret
jge
mov
jmp
jne
and
mov
lret
sbb
idiv
ja
je
scas
mov
mov
or
push
xor
mov
mov
push
mov
stos
dec
les
fs
add
lahf
nop
and
movsb
insl
imul
dec
sbb
mov
mov
xchg
hlt
loop
loop
mov
stos
inc
adc
rcrb
mov
add
aaa
fimuls
stos
jmp
pushf
fdivrl
fistl
and
fsubs
lea
test
jl
out
sbb
push
les
std
ljmp
and
leave
cmp
insb
cmp
pop
push
sub
test
pop
or
push
or
lods
sahf
dec
add
add
pop
mov
inc
pop
int3
pushf
jae
cmp
in
pop
je
inc
pop
pusha
add
ljmp
lcall
sbb
jmp
mov
jmp
rorl
add
jp
cmp
das
sbb
fcmovb
mov
adc
sarb
push
cld
rolb
add
int3
pop
push
xor
sti
das
jae
pop
sub
xchg
pop
dec
add
cld
or
xchg
pop
add
or
in
push
idivb
push
mov
xorb
mov
fidivl
mov
add
ljmp
push
icebp
or
sbb
jnp
xor
movsb
mov
pushf
ds
push
cmp
inc
sbb
mov
xchg
mov
stos
sbb
dec
in
insl
and
cs
xor
push
lds
xchg
ss
lret
jecxz
mov
negb
cmp
cmp
in
xor
pop
lahf
xor
imul
xchg
xor
insb
lods
fwait
cmp
imul
aam
inc
xor
jns
push
xchg
pop
pop
les
or
xor
loopne
jmp
shlb
adc
int
cli
pop
adc
jne
xchg
fcomps
or
loopne
sbb
lret
dec
inc
out
ds
xchg
mov
push
mov
fistps
scas
pop
pop
jo
pop
sub
mov
dec
xor
jmp
jns
inc
xchg
or
icebp
jecxz
dec
sbb
ret
out
or
mov
pop
inc
cmp
out
cmp
mov
jae
popa
mov
orb
xor
mov
rorb
inc
sahf
mov
cli
xor
push
add
pushf
mov
outsl
adc
mov
in
clc
nop
inc
pop
fldcw
int3
mov
enter
sbb
push
sbb
push
jp
dec
mov
jge
jbe
test
movsb
mov
jb
adcl
jbe
ret
mov
insl
and
inc
ja
or
int
sub
pop
mov
f2xm1
test
bound
std
popa
xchg
sub
sbb
ss
loopne
scas
pop
xor
push
mov
movsl
outsb
push
and
jbe
aam
mov
inc
xor
fstpt
lcall
out
frstor
pop
cmp
ficoms
add
push
adc
fwait
cmp
je
in
cmp
repz
lock
and
out
mov
mov
push
aad
push
mov
jae
iret
sar
clc
jp
and
sub
xchg
dec
aas
nop
add
js
jae
add
adc
fdivrl
xchg
aaa
xor
add
mov
pusha
ljmp
adc
jmp
dec
rcl
dec
js
and
std
xor
fwait
xor
ret
enter
sub
fcomp
test
nop
pop
mov
hlt
int
imul
dec
fwait
sbb
xor
push
jae
jne
mov
loope
mov
mov
js
mov
fcomps
out
mov
mov
add
inc
push
pusha
aas
mov
and
inc
aaa
and
int
cmp
mov
dec
jbe
mov
adc
hlt
xchg
cmp
dec
icebp
or
mov
fcoms
mov
mov
adc
pop
push
movsb
and
xor
ja
adc
mov
add
imul
add
in
pushf
lcall
in
mov
pop
rcrb
gs
and
jno
inc
and
jns
lock
dec
insl
pop
nop
xchg
mov
outsb
imull
mov
push
addl
xor
sbb
stos
test
mov
sbb
cmp
clc
fnsave
aad
xor
nop
mov
or
and
mov
or
mov
push
addr16
fstl
push
aam
mov
mov
xor
cmp
cmp
dec
sbb
pop
int3
fistpll
mov
xor
into
adc
mov
stc
sub
aaa
aam
lock
mov
aam
sbb
jge
out
mov
decb
aad
movsb
in
jg
ret
es
or
cmpsb
inc
cmovns
test
out
std
inc
jp
jb
mov
icebp
jno
call
loopne
xchg
test
pop
lea
insl
pop
int
add
icebp
pop
outsb
sub
and
sar
ffree
dec
pop
cmp
pop
sub
add
insl
or
mov
imul
adc
popf
push
mov
mov
sub
scas
cmpsl
xor
popl
sbb
dec
cmp
adc
sub
or
andl
adc
ss
js
subb
push
adc
out
cmpl
ja
jmp
add
push
sti
fs
jno
and
stc
adc
shrl
push
icebp
sbb
movsl
out
cli
mov
jns
pop
inc
int
mov
mov
aaa
mov
sbb
add
sub
xchg
dec
inc
cmp
mov
or
xchg
mov
push
inc
pop
loope
insl
les
hlt
pushf
pop
test
int
cli
dec
xchg
jge
imul
inc
cmp
add
jo
shrb
sbb
lret
outsb
or
in
notb
pushf
icebp
xor
jp
pop
xor
pop
fs
push
in
lret
js
cmp
enter
adc
aas
fimuls
cwtl
addb
inc
mov
mov
imul
into
push
aad
aaa
xchg
loope
mov
mov
add
jecxz
xchg
das
loope
push
xchg
mov
fadds
mov
cltd
or
mov
sub
and
mov
std
test
cmp
aad
or
and
imul
adc
xor
sbb
sarl
ret
ja
or
adc
pop
icebp
in
leave
pop
jne
aad
popa
dec
xchg
push
aad
cmp
cmp
fistps
pusha
add
adcl
jle
stc
mov
fadds
out
and
arpl
cmp
mov
jp
cmpb
xchg
sbb
mov
cmp
and
add
sub
push
xor
sub
mov
clc
add
or
daa
je
aaa
cmpb
je
cmp
pop
push
test
mov
push
movsl
fimuls
pop
adcb
mov
test
loope
jb
scas
sub
lods
mov
loope
or
inc
and
cmp
stc
fstpl
popa
push
loop
dec
sub
jno
add
pop
xor
xchg
lcall
dec
push
hlt
aaa
push
and
sub
call
add
xor
out
int3
cmpsl
add
sbb
ss
pop
xor
outsl
dec
sub
and
adcl
mov
dec
or
xor
addl
push
std
daa
add
or
sbb
adc
push
push
aaa
xchg
loope
aaa
push
lds
lds
ds
mov
cs
mov
cmpsl
popa
xor
arpl
fdivl
into
cmpsb
cmp
push
inc
loopne
daa
pop
push
cwtl
xchg
xor
ljmp
pop
sbb
add
stos
fisttpl
mov
xchg
pushf
mov
mov
xor
stc
sub
shl
test
inc
flds
sbb
mov
xor
lret
dec
pop
ljmp
int3
inc
mov
jmp
sbbb
out
mov
out
repnz
mov
pop
mov
stos
xor
fyl2xp1
hlt
dec
fdecstp
xor
test
push
out
enter
inc
lret
nop
mov
or
popl
jecxz
adc
flds
pop
push
push
push
mov
push
fistpl
inc
mov
fnstcw
mov
imulb
dec
call
sbbl
jo
jl
mov
sub
inc
lock
add
rolb
subl
dec
loop
jo
inc
sbb
les
shl
dec
insb
xchg
xchg
repnz
out
imul
stos
inc
cmp
std
popf
push
dec
repnz
cmp
aas
add
sahf
mov
imul
pop
loop
cwtl
sbb
loopne
cmpsb
daa
loopne
imul
or
lahf
repz
movsb
cmp
mov
inc
push
aaa
sbb
and
jmp
movb
aam
ds
pop
fs
sbb
in
xchg
arpl
loop
jne
add
int3
repz
scas
pop
jge
pop
and
lods
dec
pop
push
aaa
xlat
sbb
jae
or
xor
fwait
cmpb
fidivs
mov
mov
pop
sub
and
outsb
fidivl
jne
mov
adc
sbb
sub
pop
sub
xchg
enter
jb
push
mov
clc
or
fs
outsb
cmc
sbb
testb
xchg
cli
and
sub
mov
or
shll
test
jge
jmp
in
push
push
mov
je
stos
pop
ret
sbb
arpl
imul
pop
mov
aam
mov
andb
sbb
int3
sbb
mov
fstpl
ficompl
dec
and
sub
shll
jae
cli
push
xchg
in
jge
push
int
jg
xor
pop
jo
cmpsb
dec
test
mov
cmpsb
or
inc
mov
aam
lret
fwait
push
xchg
arpl
sbb
mov
call
leave
cmpsb
sub
push
in
jo
fdivrs
mov
pop
stos
jbe
insl
and
test
jl
lods
addb
shl
xchg
das
mov
iret
mov
ret
imul
mov
sub
orl
jl
inc
pop
adc
lcall
add
sub
pop
aam
inc
movsl
jl
inc
dec
imul
aad
stc
push
or
pop
mov
mov
clc
cmp
rol
adc
sub
dec
and
mov
mov
push
pop
idiv
stc
mov
mov
movsl
jns
clc
xchg
xor
mov
pusha
sbb
pushf
jno
fstps
into
mov
int
rorl
bound
push
inc
ret
xor
sub
dec
jle
mov
mov
aam
mov
test
lahf
dec
or
jo
adc
xchg
lds
out
dec
xor
and
adc
dec
inc
stos
aad
push
ds
push
enter
mov
mov
scas
in
mov
sbb
adc
xchg
cmp
mov
mov
jne
or
sbb
mov
and
popf
icebp
data16
dec
pshufw
cmc
adc
push
xchg
or
and
cmc
jns
sub
out
fcmovnu
pop
mov
and
sub
mov
into
sub
push
es
loope
pop
pop
xchg
popa
cmp
movsl
ja
les
inc
pusha
xchg
ficoml
sti
stos
aam
pusha
out
ds
mov
mov
mov
popa
cltd
add
jbe
inc
add
fdiv
jns
not
mov
lcall
mov
cmpsb
or
lea
movsl
test
add
pusha
cltd
int
sbb
lcall
movsb
xor
sahf
mov
pusha
sbb
mov
dec
pop
loopne
decl
cltd
sub
inc
das
fadd
sub
cmc
les
adc
pop
in
test
imul
dec
les
and
add
ret
mov
mov
mov
pop
shrb
imul
add
int
xchg
aas
mov
test
jl
clc
or
stc
out
sahf
movb
std
adcl
adc
xchg
sbb
pop
xor
int
ret
gs
jbe
div
mov
js
add
ljmp
das
and
leave
ret
push
adc
pop
and
xchg
les
jns
ret
push
pop
xchg
jmp
xor
sbb
sbb
sti
imul
dec
aam
pop
mov
jae
ret
je
jno
pop
dec
xor
frstor
shrb
test
inc
stos
jle
adc
pushf
or
scas
mov
cltd
inc
or
enter
fists
jle
in
cmp
sahf
ret
hlt
outsb
scas
loopne
jg
sub
iret
or
popf
test
mov
or
xor
pop
sbb
out
pusha
mov
add
cmp
and
mov
and
and
dec
xchg
dec
imul
xor
pop
push
fs
sbb
adc
push
pop
pop
mov
fldcw
pop
push
aam
xor
jo
xchg
xchg
scas
push
push
or
push
jl
ret
aam
fs
add
in
jmp
jg
fstpl
pushf
xchg
jnp
dec
out
data16
stos
movsl
inc
mov
jecxz
mov
cmp
notb
pop
jmp
aad
mov
and
es
jnp
iret
adcb
test
lods
dec
pop
adc
aas
add
stos
cs
lret
cld
push
push
aad
testl
adc
mov
add
dec
push
jae
xchg
mov
das
push
jmp
and
mov
je
sbb
adc
in
dec
jae
fptan
or
xorl
sarl
mov
cmp
inc
xor
xchg
cmp
bound
into
push
dec
push
mov
xchg
jnp
out
cmp
jg
sub
cltd
pop
data16
lock
lods
xchg
inc
subb
aad
das
stos
push
mov
pop
pop
or
ds
fisubl
aaa
les
jb
push
inc
fsubrs
xor
jmp
ja
or
cmp
cld
jne
xlat
enter
aaa
dec
out
insb
das
and
mov
shrb
out
in
push
out
dec
push
in
push
inc
bound
data16
jp
dec
outsl
add
in
daa
lods
and
push
stos
xchg
mov
leave
add
mov
jl
mov
addr16
sbb
fs
leave
push
and
push
stc
aaa
cwtl
jl
mov
aam
test
pop
dec
or
inc
push
mov
mov
sbb
pushf
xor
cltd
jns
mov
adc
lods
dec
in
fsts
movsl
ss
pop
pusha
jg
lods
ficoml
mov
and
pop
xchg
and
and
iret
sub
test
pop
lds
test
fucomi
ljmp
insl
push
pop
scas
push
mov
sarb
and
add
or
sub
mov
add
lods
jbe
xacquire
lahf
add
pop
out
in
dec
and
sbb
out
inc
loopne
sbb
fbld
andl
or
pop
clc
mov
daa
push
outsl
fwait
daa
js
nop
aam
dec
sbb
pop
xor
cli
js
leave
cs
jge
add
sbb
je
sbb
rcrb
in
push
cli
test
adc
in
hlt
xchg
xor
testb
lahf
xchg
icebp
pushf
das
testb
js
into
nop
ja
cmp
push
jnp
pop
push
or
push
fstpl
out
pop
cli
cmc
jp
inc
mov
cli
sbb
mov
ss
jmp
int3
sub
fildll
inc
rcll
ficomps
or
or
jne
aad
mov
or
repz
jle
dec
xchg
shr
not
push
mov
dec
test
adc
sahf
inc
xor
adc
out
rclb
movsb
mov
mov
test
sar
sarb
outsl
pop
fs
imul
mov
hlt
cmp
lcall
aaa
ror
das
mov
ret
inc
cwtl
xor
jns
loope
jecxz
in
arpl
sbb
or
hlt
push
scas
mov
xorb
lcall
leave
adc
push
aad
lock
inc
out
add
push
mov
inc
push
loop
cmp
dec
lea
decb
test
or
or
pushf
lret
jmp
je
mov
jno
mov
jp
outsb
mov
pusha
test
mov
dec
or
mov
push
std
notb
dec
mov
xchg
int3
mov
data16
sarl
loopne
mov
inc
pop
inc
push
jae
adc
out
pop
out
sub
add
das
cmp
cltd
enter
stc
sbbb
in
mov
inc
in
adc
loopne
fcmovu
adc
faddl
sbbl
add
mov
adc
mov
or
sbb
in
add
loopne
add
mov
das
or
ss
mov
test
xor
lcall
cmpsb
adc
enter
fcompl
cmp
inc
movsl
pop
mov
mov
inc
pop
push
xchg
push
dec
sbb
xor
cmpb
popa
arpl
or
add
iret
push
js
mov
inc
inc
jo
mov
pop
or
xor
jb
dec
sti
adc
in
xchg
and
pop
or
decb
pusha
jae
lods
outsl
mov
jne
rcll
sti
les
mov
and
and
repz
in
sub
add
mov
pop
sbbb
xor
sbb
xchg
and
pop
pop
jg
loop
cmpsb
pop
jmp
out
mov
pusha
sbb
push
lret
jg
in
sahf
mov
mov
push
lock
mov
pushfw
jmp
push
and
adc
inc
add
cli
out
filds
jno
inc
mov
lahf
test
popa
fidivrl
cmp
jp
cmpsb
test
fldcw
orb
and
mov
dec
lea
xlat
mov
pusha
xchg
adc
cli
setnp
hlt
shll
sti
arpl
mov
aam
pop
push
test
jle
imul
xchg
jae
subb
mov
inc
add
jns
ljmp
enter
adc
mov
cmp
repnz
pusha
rcrl
adc
in
cld
lcall
xor
in
mov
call
sub
aam
xor
in
inc
mov
stos
mov
or
jecxz
inc
divb
or
mov
dec
xor
mov
scas
sub
shlb
add
fs
and
lahf
push
add
jnp
jmp
mov
pop
cmp
shlb
call
cmp
xor
push
add
mov
jo
and
jno
jnp
mov
xchg
lods
dec
mov
dec
scas
ds
push
add
outsl
jns
ja
xor
push
scas
out
cli
fwait
lods
imul
or
mov
aad
sbb
adc
adc
pop
les
in
jp
outsl
call
sbb
jno
nop
std
outsl
imul
daa
cmp
gs
cs
xor
in
sbb
iret
in
ljmp
xchg
mov
add
loop
not
cmpsb
jg
mov
dec
jae
ficompl
dec
jecxz
mov
dec
das
aad
lahf
sarl
push
lea
xchg
repnz
int3
mov
outsl
add
popf
icebp
xor
movsb
pop
jp
pop
loopne
lods
mov
dec
lods
std
dec
je
pop
cli
pavgw
in
jb
outsl
loop
xchg
insl
loope
or
mov
cmp
push
ljmp
cmp
test
xor
insb
xchg
hlt
std
lar
jne
adc
xor
andl
in
add
mov
pushf
enter
dec
rcr
jb
push
fucomip
jne
out
cmpb
fisubrl
fs
mov
mov
movsb
ja
es
les
and
inc
addr16
jns
and
jmp
outsl
mov
outsl
aas
or
adc
cs
popa
jnp
bound
sub
inc
cwtl
xor
insb
lock
mov
mov
std
fidivrs
or
insb
sbb
scas
push
xchg
cltd
cli
rorl
ss
pop
pop
adc
cltd
xchg
testb
inc
push
mov
add
sbb
out
mov
aas
jne
mov
shrl
mov
fidivl
xor
mov
pushl
loopne
mov
pop
mov
jp
pop
mov
sahf
mov
pop
jg
sub
or
adc
push
inc
jecxz
out
dec
or
mov
ljmpw
sub
loopne
pushf
movl
out
movsb
clc
dec
adc
cltd
xchg
cltd
push
lret
jp
fcom
bound
les
jmp
and
hlt
jb
dec
xor
mov
popf
xchg
outsl
xchg
int3
lcall
div
mov
andb
push
adc
mov
movsl
inc
fldl
xchg
je
adc
or
rolb
sub
xchg
adc
fcoms
xor
sub
pop
pusha
shlb
mov
imul
movsb
add
xchg
mov
aam
mov
sub
outsl
rclb
and
mov
mov
push
outsb
xor
cltd
and
cmp
xlat
test
mov
and
sub
lods
mov
add
imul
ljmp
fcoml
pushf
or
ret
cmp
ss
push
ret
out
das
dec
jae
xor
and
fwait
jl
mov
xchg
out
clc
gs
adc
mov
cmp
cmp
mov
mov
jmp
iret
mov
aam
xor
cld
mov
jg
daa
adc
loop
out
adc
cwtl
mov
cmp
push
cmp
clc
cs
push
sbb
xchg
dec
in
lds
push
dec
jge
stos
rol
stos
out
mov
shl
lahf
mov
aaa
add
push
adc
and
push
dec
jnp
popf
push
lds
idiv
and
and
pop
inc
mov
xchg
shrb
pusha
xor
or
lods
icebp
xor
fs
clc
mov
jmp
sub
scas
xor
test
pop
into
inc
xchg
lret
mov
adc
mov
pop
or
lea
cmp
int
sti
loopne
xchg
loop
loop
xorb
mov
insb
cli
mov
add
stc
add
jb
mov
out
rol
rcrl
mov
repz
fimuls
xchg
or
and
out
fists
ja
sahf
int
sub
jo
lcall
and
das
in
push
cmpsb
loope
mov
bndstx
popa
in
gs
addr16
call
lret
arpl
enter
or
fs
inc
daa
mov
push
cs
push
ljmp
iret
aam
mov
fdivrp
adc
pop
jne
sub
mov
pop
sub
daa
mov
stc
testl
push
int
out
push
and
jns
xchg
jne
test
repnz
mov
cmc
mov
sti
cwtl
jl
popa
mov
cltd
leave
aad
push
jbe
cmp
outsb
xor
pop
lods
outsl
mov
out
push
push
mov
pop
je
jae
call
jne
push
int
fsubrl
push
jge
sub
fsubrs
leave
sbb
adc
push
inc
mov
cmp
sbb
pusha
push
sbb
pushl
mov
xchg
jb
stos
int3
scas
sub
add
cs
popa
je
xchg
push
push
sbb
fimull
repz
aas
fwait
ret
pop
daa
ja
scas
add
shrb
pop
leave
sbb
mov
push
cmpsb
sbb
fdivrs
sbb
les
test
imul
call
je
stc
or
xor
test
dec
xchg
mov
inc
mov
mov
xor
repz
mov
movsl
jne
mov
ss
fnstsw
stc
dec
addr16
mov
int
or
std
pop
cmpb
push
push
inc
inc
pop
lea
jp
pop
sbb
mov
sub
adc
inc
call
and
lock
shl
mov
xchg
sub
push
into
scas
pop
jge
mov
stos
fsubrs
pop
push
out
sti
sbb
enter
pop
mov
push
out
mov
mov
out
xchg
dec
stos
push
leave
cmc
rcll
mov
jno
mov
pop
decl
das
adc
sub
lock
aam
xchg
mov
push
addr16
es
jae
or
stos
in
lret
lock
stos
lock
xor
in
test
dec
mov
lret
pusha
inc
lahf
lcall
std
popa
add
pop
fists
mov
fs
fnstenv
mov
and
sbb
adc
subl
sbb
out
decl
jno
push
adc
pop
xchg
testb
pop
inc
fstpt
pop
add
bound
lds
mov
jge
inc
cli
or
jb
xor
jp
das
aam
inc
lea
shl
mov
call
inc
xor
fists
jg
push
in
dec
repnz
and
arpl
rcl
jle
pushf
pcmpeqd
js
dec
call
pop
icebp
ret
inc
adc
test
pop
cmpsb
xlat
mov
sbb
enter
or
lods
loopne
out
cld
cmp
mov
cs
mov
and
paddusw
clc
out
pop
push
or
jo
lea
pushf
imul
inc
xchg
mov
stos
mov
sbb
xchg
ljmp
mov
dec
xchg
arpl
jo
mov
push
fnstenv
push
outsl
nop
pop
fmul
or
loop
and
aaa
jb
popf
push
dec
cs
shrl
outsb
rclb
push
mov
cmp
shll
dec
idivl
inc
cmpsl
nop
push
cmp
sub
jmp
or
jmp
fnstenv
fs
mov
bound
lea
inc
iret
and
adc
xchg
mov
mov
adc
add
pop
push
je
inc
rorl
ret
push
dec
inc
cmpsl
inc
mov
stc
push
pop
jno
inc
gs
sbb
and
sub
stos
stc
loop
rolb
mov
dec
cmp
xchg
push
inc
aam
cmp
and
inc
fs
nop
jl
subb
and
and
add
in
test
mov
xor
cmc
push
inc
shll
sub
rdpmc
pop
push
and
mov
call
cmc
inc
jp,pt
shrl
push
stos
cmc
aam
jns
movsl
xor
mov
lods
push
les
das
dec
mov
cmp
jle
cli
mov
mov
aam
jle
sbb
mov
pop
cmp
xor
fcmovb
mov
repz
into
add
inc
lret
pop
out
mov
push
adc
cltd
ss
sbb
mov
aas
std
xor
std
push
mov
inc
lock
add
les
mov
jae
lahf
enter
push
cmp
pop
pushf
and
into
cltd
dec
jmp
lret
fwait
ljmp
sbb
cld
sub
cmp
xor
xor
xor
mov
pop
mov
lcall
inc
jmp
sub
inc
and
cmp
xor
out
dec
movsl
mov
mov
pop
jae
mov
mov
iret
mov
jns
dec
in
test
aam
xchg
fisubs
addr16
push
addr16
cmp
int3
aam
ret
bound
comiss
daa
das
rclb
pop
stos
rolb
push
sbb
cmpsl
inc
cmovns
cmp
cmp
add
xor
nop
push
adc
in
leave
xor
loopne
jmp
push
inc
out
fiaddl
scas
push
sbb
mov
insl
lods
pushf
mov
sub
mov
repz
pop
jmp
cmp
pop
sarl
mov
std
and
jge
in
das
pushf
pop
shl
cmp
adc
stc
pusha
pop
out
ret
adc
xchg
int3
add
pushf
sbb
repz
sti
cltd
jno
mov
lret
adc
and
mov
push
or
in
loopne
jle
gs
addl
adc
add
push
outsb
das
and
pop
push
fidivrs
sbb
sahf
insb
je
std
sbb
loope
int3
test
sub
leave
stos
out
mov
sbb
sbb
idivl
fucom
dec
test
lret
mov
sarb
iret
dec
push
outsb
iret
in
jle,pn
push
insl
mov
mov
push
mov
add
sbb
xchg
imul
push
insl
cltd
and
mov
pop
imul
dec
xchg
adc
jmp
addr16
mov
add
sub
popf
push
sub
aam
fdivs
mov
xlat
sbb
fcmovu
fsubl
jne
mov
faddl
lret
je
das
adc
jns
loope
cwtl
xchg
addb
outsb
inc
mov
sub
outsl
sbb
lahf
mov
mov
mov
cmp
ret
lret
es
insb
sti
scas
es
repz
ja
jmp
rol
add
or
inc
mov
mov
outsb
and
sahf
dec
aas
mov
cmp
xor
cwtl
out
ret
sbb
es
jmp
insl
jbe
rolb
dec
pop
andnps
imul
adc
cltd
jle
pop
lods
inc
adc
xor
es
rcrb
adc
mov
jbe
test
sub
shll
pop
shlb
jg
cwtl
jl
xchg
cs
ja
dec
jg
orb
nop
cmc
mov
int3
inc
repnz
xor
cli
mov
cld
push
fisubl
mov
lds
jns
mov
sbb
and
pushw
push
mov
popa
or
shll
arpl
push
cs
stc
pop
and
cli
dec
jecxz
and
jecxz
out
fstps
aas
lahf
cmp
dec
jl
fsubrs
repnz
jmp
les
ss
sub
loop
inc
ret
xchg
js
push
dec
xor
mov
insl
add
notb
fcom
xor
fs
adc
mov
out
pop
fnclex
mov
mov
cmp
xchg
mov
xor
out
push
jno
loope
pop
pop
jb
xor
cltd
inc
daa
in
jns
stos
push
xor
enter
andb
fs
jl
sbb
mov
divl
mov
and
sub
stos
lahf
iret
fldcw
int
jbe
fstpt
insb
or
sub
add
mov
cmpsl
out
outsb
aam
mov
mov
xchg
and
shrl
gs
sub
shl
xor
nop
cmp
xor
cmpsl
lret
je
jno
test
enter
sub
lods
pop
outsl
movsb
xchg
pushf
sbb
lcall
dec
jnp
fs
add
bound
cs
int
sti
pop
sahf
sub
mov
imul
jns
sbb
cwtl
ret
fbstp
add
adc
jp
aaa
pusha
in
sub
dec
push
pop
fidivs
jae
sbb
insb
in
lods
jp
cmp
pop
pop
test
pop
and
lcall
sti
adc
mov
or
jb
fmuls
jl
xor
cld
dec
leave
and
movsb
xchg
div
xor
es
call
repz
cld
daa
adc
sub
cmpsb
sti
cmpsl
int
repz
sub
pop
sub
inc
add
mov
sarb
int3
mov
inc
jne
cmpsb
insb
push
repz
decl
push
adc
mov
adc
mov
mov
xor
jmp
test
jmp
xchg
sub
xchg
sub
dec
sbb
addb
aas
stc
fists
adc
fldcw
xor
push
stos
push
push
out
add
or
test
pop
sbb
cwtl
push
adc
es
inc
dec
popa
stos
mov
daa
imul
jo
stos
mov
dec
jnp
cmc
scas
mov
mov
ja
cmp
pop
rcrb
adcl
cmc
popf
loop
pop
jp
inc
cli
add
add
rclb
outsl
jns
incl
lea
or
test
stc
dec
sub
mov
icebp
cli
pop
mov
cmp
insl
mov
sbb
repz
push
pushf
lret
sub
xchg
xlat
dec
sbb
fdiv
jp
popf
sub
pop
jns
fadds
fbstp
test
out
shl
adc
mov
xchg
mov
xchg
insl
popa
or
ljmp
push
inc
mov
inc
outsb
xor
stos
dec
js
lods
or
push
test
jle
sbbl
mov
mov
push
mov
mov
insl
pop
lods
cmp
mov
inc
jmp
scas
mov
jns
and
rdpmc
xchg
mov
sbb
dec
sub
push
fsubrl
popa
mov
adc
out
push
test
call
in
mov
pop
cltd
sbbl
cmp
addb
pop
rolb
mov
lcall
push
lcall
lret
dec
mov
dec
lahf
and
lods
push
pop
xchg
sbb
pusha
pop
adc
mov
scas
inc
popf
imul
call
fwait
xor
adc
xorl
inc
cmp
notb
icebp
pop
pop
mov
mov
xchg
fsubl
fsubs
mov
pop
scas
insb
lods
inc
insl
xchg
sub
insb
push
push
adc
mov
dec
sbb
xchg
ret
or
in
les
add
rol
call
add
xchg
data16
dec
loopne
ljmp
inc
push
pop
cmp
pop
jns
test
hlt
outsl
or
leave
mov
sbb
jmp
add
sbb
mov
adc
jb
mov
sub
int3
in
cli
pop
daa
dec
jp
mov
jmp
jb
testb
scas
mov
lods
push
aam
scas
icebp
je
icebp
out
aas
jg
cwtl
idivb
dec
daa
cmp
je
fisttpl
pop
and
jmp
sub
xchg
insb
pop
ret
pop
xchg
push
fists
pop
mov
mov
or
fmull
or
in
push
daa
aas
sub
call
cmc
mov
cmc
lahf
fcoml
sub
dec
shr
or
in
mov
frndint
das
push
add
scas
mov
inc
icebp
rorb
add
mov
add
in
push
rcll
pop
xor
sbb
sbb
sbbb
adc
loope
das
mov
mov
pop
lds
std
ss
aam
xor
js,pn
es
fidivs
cmpsb
loopne
icebp
adc
lahf
mov
sahf
mov
add
push
psubusw
jno
xchg
stos
fidivl
pop
in
loope
rcl
nop
push
mov
sbb
inc
inc
mov
imulb
mov
repz
addr16
add
ficomps
jmp
cmp
lods
pop
inc
ss
fists
add
stc
test
inc
daa
sbbb
xor
dec
jb
add
sbb
dec
test
test
dec
ja
ljmp
jge
and
mov
pop
fiadds
repz
fcmovnu
iret
or
out
nop
lock
adc
sbb
adc
xor
add
pushf
add
out
jnp
xchg
popf
sarb
outsl
mov
sbb
lea
xor
std
sub
dec
das
test
mov
mov
adc
ja
push
rolb
xchg
xchg
jp
loop
mov
movsb
sbb
pop
sbb
inc
andl
andb
mov
movsb
rsm
rcll
repnz
jnp
mov
jb
in
mov
mov
mov
into
imul
aas
imul
jp
lret
cli
or
lods
sub
mov
movsl
dec
xor
push
mov
xchg
push
push
fstpt
ja
aam
movsb
addr16
adc
leave
inc
mulb
in
in
pusha
mov
addl
or
mov
jno
mov
sbbl
cmp
xchg
mov
mov
cmp
daa
or
sbb
das
ljmp
out
pop
add
sbb
sbb
and
int3
enter
adc
test
push
cltd
cmc
not
jge
mov
jo
stos
ret
xchg
jno
ss
mov
pop
mov
pop
enter
add
js
jo
call
fwait
sub
cmp
mov
cld
lock
sub
rcr
adc
out
movsl
rolb
cmp
lea
mov
cs
pop
jne
pushf
call
mov
cs
fdivrs
out
lret
ret
dec
xor
mov
push
mov
sbb
cmpsl
sahf
push
dec
cmpsb
sbb
cmp
in
or
iret
outsl
in
jae
mov
cmp
add
cmp
mov
stos
push
repnz
pop
dec
sbb
fwait
and
hlt
insb
in
sahf
filds
loope
mov
ret
incb
sbb
add
fimuls
cmp
xor
inc
xor
out
cld
mov
and
inc
dec
fisubs
lea
mov
gs
es
icebp
jno
and
dec
icebp
movsb
or
ja
mov
adc
cmp
lock
sub
in
jne
in
inc
in
cmp
xchg
jecxz
xchg
cli
jp
or
inc
lea
fsts
outsb
ret
jne
mov
dec
add
shlb
clc
imul
insb
enter
repz
cltd
cmp
insb
sbb
stos
jns
jmp
mov
jmp
mov
pop
push
ljmp
sub
or
or
je
das
xchg
cmp
lret
pop
pop
aas
fcom
test
or
push
pop
into
xor
pop
call
push
xchg
rclb
push
cltd
mov
cmp
adc
repnz
cmp
out
imul
push
jae
loopne
xor
push
add
cmc
adc
testl
aas
xor
lods
fcomi
sbb
jo
xchg
sub
repz
xor
inc
loopne
pop
adc
add
icebp
mov
push
or
hlt
mov
out
imul
mov
pop
es
in
dec
shlb
mov
lahf
daa
jno
sub
inc
sbb
mov
jecxz
jo
mov
jmp
jg
cmpsb
test
sbb
jae
mov
cld
xor
mov
ss
dec
mov
sbb
sub
sbb
xchg
mov
adc
lret
push
mov
test
bound
sub
lock
loope
popf
ret
out
out
nop
dec
aam
test
arpl
ret
or
pushf
and
push
cli
fistl
scas
dec
cld
mov
out
andb
jge
fidivrl
add
jb
mov
nop
repnz
pop
int3
xchg
ja
ds
adc
cmpsl
aam
fmul
pop
cmpsl
fwait
cmp
js
dec
add
jne
cwtl
lds
sbb
pop
lret
mov
scas
je
adc
ret
ret
jmp
xchg
jge
sbb
dec
int
mov
cmpb
repnz
xchg
repnz
cmpsb
cwtl
mov
lea
ss
nop
ljmp
subl
jl
hlt
cmp
mov
out
fstp
mov
lahf
stos
fwait
xor
jle
xor
test
in
lret
adc
mov
jecxz
adc
dec
mov
addl
loopne
sub
sbb
out
repz
mov
dec
fcmovnb
arpl
mov
sub
cmp
push
add
pop
dec
mov
not
jb
mov
mov
dec
fdiv
xchg
cltd
test
hlt
pusha
outsb
push
dec
cli
cli
push
mov
pop
jmp
test
out
loop
scas
cwtl
out
fldenv
jns
sub
and
sub
push
adc
jno
out
cmp
adc
cmp
or
xlat
ds
pop
sbb
lock
jae
test
mov
jne
sbb
mov
outsl
mov
mov
out
xor
lds
mov
aam
mov
arpl
add
nop
fiaddl
subl
push
jb
mov
out
or
xchg
inc
sub
insl
orl
mov
pop
jno
push
cld
stos
ficompl
pop
enter
mov
subl
out
aaa
ffreep
fcoml
ret
dec
cmp
and
mov
jbe
jns
inc
sbb
clc
add
loopne
pop
inc
shll
sub
mov
push
inc
xchg
or
adc
aad
outsl
inc
or
pop
mov
outsl
mov
aas
arpl
inc
popf
sub
pop
popf
addr16
cld
loopne,pn
jb
mov
dec
push
xchg
outsl
test
addr16
pop
movsl
cmp
icebp
pop
je
rolb
xchg
cltd
push
dec
sti
xor
loope
pop
iret
xchg
call
insb
ret
xor
push
mov
or
cmp
jo
data16
in
out
pop
test
cmpsb
cmpsb
dec
xlat
mov
inc
ja
jbe
inc
ds
pushf
mov
imulb
pop
dec
out
sbb
mov
lods
xchg
outsb
rcrl
std
in
push
loope
js
ds
jmp
add
add
mov
adc
bswap
dec
jecxz
jb
sub
enter
aaa
jl
cmp
mov
lods
lahf
mov
jl
push
insl
inc
pushf
mov
jne
fnstenv
xchg
push
sarb
xchg
push
shrb
jb
lret
dec
pop
inc
out
sbb
fiaddl
aam
xchg
iret
adc
xor
push
mov
lcall
dec
mov
adc
sub
sbb
int3
jbe
pop
add
lds
xchg
inc
xchg
in
loopw
test
or
push
scas
pop
lods
cmp
stos
daa
pop
xchg
mov
mov
inc
in
unpckhps
add
and
shrl
adc
jl
dec
icebp
repz
cwtl
lods
xlat
loope
dec
push
ret
push
push
dec
inc
inc
jno,pn
in
mov
push
xor
sbb
ret
fnstcw
and
ss
pop
jmp
pop
xchg
icebp
in
mov
inc
dec
and
into
cltd
imul
mov
ffree
mov
sub
jle
lahf
insl
push
sbb
add
shll
sbb
mov
sbb
jmp
stc
aaa
je
jno
js
fcomps
js
in
mov
add
cltd
xchg
fs
js
mov
lcall
dec
rolb
ds
jae
je
ret
das
aaa
lcall
pop
gs
mov
ret
inc
bound
xor
pop
mov
pop
jle
or
aas
pop
enter
and
js
fs
cmp
mov
and
add
or
pop
mov
mov
clc
pop
adc
enter
and
imulb
xchg
lods
sub
add
test
imul
dec
cli
mov
fisttpl
or
push
mov
inc
fldcw
pop
pop
mov
rolb
xchg
dec
or
icebp
aas
add
setb
fiadds
xchg
push
pop
scas
and
dec
pop
mov
fisubrs
pop
orw
cmp
test
jo
dec
icebp
sbb
pop
mov
push
sbb
clc
xchg
mov
insb
icebp
cmp
lock
sbb
jmp
xchg
sbb
lods
test
add
out
mov
push
mov
leave
jg
out
sub
adc
cmp
cmpsl
mov
pop
stc
out
adc
xchg
push
cmp
es
adc
and
jl
dec
into
cs
pop
jns
fwait
stos
xor
sbb
movsb
movsb
ret
fbld
pusha
inc
cmpsl
cmpsb
jbe
lcall
sbb
push
mov
xchg
push
jge
jl
lcall
cmp
lret
pop
addb
addr16
xlat
outsl
xchg
mov
out
cmp
mov
or
imul
jp
mov
pop
orl
xchg
jno
shlb
lahf
mov
pmaxub
add
mov
adc
out
scas
cld
movsb
sbb
cmp
cli
std
or
mov
xchg
jbe
mov
inc
mov
pop
add
pusha
inc
and
jno
aam
shrl
icebp
loopne
mov
push
pushf
xor
add
pop
test
cwtl
pop
or
sbb
iret
mov
dec
xchg
push
dec
or
jo
popa
pop
mov
leave
xchg
xor
mov
mov
lods
js
jae
xchg
xchg
std
mov
insl
rcrl
dec
jp
fs
repz
leave
push
ficomps
sti
rclb
or
cmc
jmp
sbb
insl
lret
shlb
add
cmp
stos
add
daa
cs
sub
and
and
lock
jne
cld
push
insb
mov
mov
xlat
lahf
leave
mov
xor
and
insl
fidivrs
repz
sub
sub
mov
stos
cs
int3
leave
daa
xchg
dec
mov
add
hlt
leave
sbb
mov
aaa
pop
imul
repz
pop
popa
xor
cli
bound
sbb
mov
int3
push
push
sbb
pop
pop
add
repnz
cwtl
fsubrl
ret
mov
inc
pop
and
daa
dec
cmp
xor
mov
outsl
mov
pop
icebp
in
and
imul
xor
out
sti
clc
cmp
ljmp
jg
ret
add
xchg
mov
into
inc
jb
insb
out
mov
lock
mov
sub
inc
dec
ja
fbstp
iret
mov
dec
pop
outsl
test
and
arpl
jns
outsb
cmc
int3
cltd
stos
xor
push
or
test
les
jb
insb
xor
mov
in
cmp
sbb
clc
jp
xchg
aas
adc
dec
out
xor
pop
es
mov
and
cmp
divb
insl
ss
sub
and
int3
xor
mov
popf
adc
jb
xor
mov
adc
ljmp
dec
jecxz
sahf
and
sub
loopne
mov
hlt
int
mov
xchg
jbe
mov
add
stos
imul
fsubrs
cmp
call
xor
loopne
push
mov
pushf
decl
xlat
pop
cli
in
inc
lahf
dec
add
data16
and
xor
fdivrs
mov
sub
mov
enter
daa
les
sbb
xchg
lods
pusha
loop
cmc
push
dec
jle
mov
push
dec
pop
ljmp
decb
cmc
add
xor
in
shrl
idivb
in
cli
inc
cltd
xor
sub
ds
ss
popf
rclb
sub
scas
clc
insb
shrb
ss
mov
ljmp
jl
sub
lods
into
rcll
mov
pop
push
pop
pop
aam
loop
sub
sbb
adc
mov
js
mov
je
mov
jae
pop
xchg
arpl
add
adc
orb
add
nop
or
or
negb
jno
mov
fnstenv
or
pop
push
cli
jae
mov
cmp
mov
sbb
jmp
loopne
push
cwtl
sub
rcll
lods
data16
or
dec
ja
xchg
andl
cwtl
lahf
movsb
sub
imul
jb
mov
stos
in
push
xor
sbb
dec
popf
xchg
pop
stos
cmp
jle
push
pop
and
lock
mov
xor
xchg
fildll
or
or
or
je
jg
cmpsb
or
jae
xchg
lret
mov
sarb
jp
test
fnstsw
push
stos
ss
mov
sbb
loop
add
jg
pusha
mov
loop
adc
test
mov
lcall
je
xchg
nop
mov
into
mov
cmp
add
mov
jnp
repnz
xor
int
push
pop
cmp
pop
xchg
adc
lods
add
outsb
fistpll
sbb
add
je
fmulp
mov
in
sub
popa
inc
inc
shl
xor
push
mov
inc
lock
inc
push
fcompl
dec
mov
or
sbb
into
cmp
xchg
rcl
jbe
cmp
jge
push
out
stos
pop
add
adc
jae
jle
pop
pop
imul
xchg
inc
mov
lret
inc
mov
sarb
mov
dec
mov
insl
or
add
sbb
ja
in
dec
gs
sahf
jno
fisubrl
stos
ljmp
jle
xchg
lret
pop
sbb
aas
pusha
push
push
adc
mov
mov
lods
inc
mov
dec
ds
outsl
pop
dec
cwtl
pop
cmp
pop
aaa
in
or
dec
inc
jno
jmp
add
fldl
xor
xchg
sub
push
cld
xchg
neg
insb
and
in
xor
inc
scas
fstpt
test
fadds
inc
mov
call
push
shl
stc
enter
addr16
xchg
popf
pop
cmp
cli
into
repnz
scas
or
int3
jmp
dec
addl
jmp
xchg
repnz
hlt
inc
test
imul
icebp
jecxz
mov
fwait
push
jg
add
lahf
adc
jp
rcr
adcl
adc
lret
cli
adc
inc
lcall
incb
mov
mov
and
mov
ss
dec
ficoml
push
sahf
imul
cmp
adc
ret
inc
dec
aaa
xchg
lret
loope
xchg
xor
push
dec
ss
ret
das
pushf
mov
pop
dec
and
aaa
fstpl
xor
add
loope
push
mov
dec
jg
push
sub
jne
outsl
lahf
push
push
cs
outsl
pusha
int3
adc
lret
jno
mov
shrl
or
cmc
repz
in
push
mov
pop
add
incl
inc
push
or
pop
mov
xor
push
push
movsb
pop
add
cmp
pop
and
addr16
cmpsl
adc
les
divb
inc
dec
in
loopne
popa
inc
arpl
mov
adc
adc
lock
and
xor
sub
dec
sahf
cmp
pop
imulb
or
js
xlat
in
and
xchg
loop
inc
mov
dec
inc
lock
and
push
mov
fcomip
mov
mov
cmp
jp
sahf
mov
push
mov
dec
int3
sub
sbb
lds
inc
inc
rcrl
stc
mov
xorb
inc
mov
mov
mov
pop
and
add
fcmovu
xor
jl
pop
cmp
aad
scas
jg
sbb
insl
pop
daa
gs
aas
loop
jns
add
inc
gs
dec
insb
pop
jnp
mov
enter
mov
or
movsb
dec
aas
filds
mov
cmc
mov
outsl
sbb
dec
cltd
dec
addl
sub
loopne
fld
leave
arpl
shlb
sbb
mov
adc
push
mov
xchg
push
jne
mov
mov
popf
mov
jge
cli
and
or
dec
jle
lock
call
loop
cmpl
xor
fadds
dec
repz
xchg
addr16
lcall
enter
addl
fdivs
clc
sub
push
stos
jmp
cmp
lea
test
cld
pop
adc
arpl
jnp
ficompl
mov
fstl
dec
mov
ljmp
lods
lahf
hlt
in
cs
or
jl
or
push
cmp
daa
add
push
xorl
call
xor
mov
adc
xor
test
push
xchg
loop
cmpsb
aad
in
das
outsb
cld
push
dec
add
sti
pop
enter
test
stos
inc
cli
mov
sbb
mov
xor
or
push
push
mov
xchg
xchg
cmp
add
xchg
fs
lret
rcrb
sub
lahf
or
aad
ret
dec
pop
and
int
notb
outsb
xchg
in
bound
pop
or
call
pop
or
enter
cmp
lods
mov
and
movsb
xchg
push
sbb
add
cmpsb
addr16
hlt
and
shrl
sub
xchg
cli
repz
cltd
cld
mov
sbb
jns
incl
les
jne
pop
xor
popf
popa
mov
aas
ljmp
push
xchg
pop
cmp
adc
jno
movsl
push
test
fdiv
fwait
mov
jbe
pop
leave
cmp
call
jns
enter
xor
rorb
aam
or
shll
addr16
movsl
adc
les
jl
sub
in
lock
cltd
jle
icebp
orb
lods
cwtl
std
test
push
mov
pushf
pop
out
jg
aad
mov
nop
std
shrl
cmp
lret
mov
aas
rcr
pop
mov
xchg
lods
iret
add
mov
pushf
shl
sub
loope
mov
jle
sahf
out
insl
mov
pop
mov
hlt
and
sbb
leave
cmc
outsl
cli
out
mov
cmp
leave
push
jmp
pop
xchg
test
jae
add
dec
ds
sbb
push
cmpsb
movsb
pop
cmp
mov
cmc
inc
jb
test
push
cmc
cmp
mov
call
xchg
adc
inc
mov
mov
jmp
aam
pop
addb
jnp
adc
cld
mov
or
je
mov
xor
or
jbe
mov
pusha
lret
aam
and
inc
sub
iret
xchg
sub
cltd
mov
push
jecxz
jnp
push
ja
pop
jo
out
push
test
orb
cmp
mov
mov
push
xlat
xor
jp
not
outsl
cwtl
loopne
sahf
lcall
ja
mov
xor
das
sbb
jns
gs
fcmovnb
jae
inc
and
cld
das
cwtl
sbbl
and
es
inc
in
stc
xchg
push
pop
imul
fmuls
mov
jnp
xchg
cs
repnz
nop
inc
and
push
lods
and
in
les
in
mov
jne
gs
sbb
and
cmp
flds
fisubl
or
push
pop
ljmp
dec
push
push
or
xlat
das
aad
mov
popa
ret
cmp
sbb
sbb
sub
sbb
lcall
repz
nop
pop
scas
lock
insb
scas
mov
pop
das
lock
mov
fildll
fidivl
dec
add
adc
call
sbb
pop
dec
dec
push
xor
sti
sub
push
mov
dec
test
out
jp
jno
insl
jns
sub
adcb
or
jne
dec
sub
out
cli
mov
imul
popa
push
loop
dec
pop
scas
stos
int
shr
daa
loop
push
lock
cmc
add
lret
xchg
dec
in
push
hlt
mov
or
pop
cltd
icebp
push
fistl
xor
dec
aas
aam
jp
push
mov
imul
rclb
add
xlat
xchg
cld
enter
repnz
jne
push
lds
xor
bound
jecxz
ljmp
es
mov
xchg
pop
jge
push
adcb
add
lods
inc
dec
outsb
push
xor
mov
negl
lahf
mov
fsubl
out
ja
shll
dec
adc
lret
ret
hlt
fxch
insl
mov
inc
repz
lret
adc
inc
or
adc
pop
add
add
cmp
mov
ret
cld
cltd
mov
pop
lods
mov
cltd
fcoml
mov
lds
pop
mov
in
add
push
add
sbb
sbb
mov
lahf
mov
aam
push
rcr
sub
js
cmp
lar
pusha
jmp
pop
mov
fildl
sahf
cmp
pop
nopl
js
dec
mov
adc
cmp
addr16
fisttpll
mov
sub
in
pushf
sahf
gs
pop
addr16
imul
adc
push
inc
stc
add
jp
imul
lret
inc
pop
xchg
cmp
or
push
scas
in
sahf
ljmp
push
xchg
imul
cld
cmp
lock
mov
add
push
nop
test
int
xchg
jne
mov
imul
movsl
das
xchg
dec
xor
loopne
add
cwtl
xchg
inc
enter
pop
ror
enterw
sbb
or
adc
popf
inc
adc
mov
nop
cltd
push
shrl
movsb
faddp
pop
popa
xchg
adc
jecxz
push
cmp
and
mov
mov
xchg
cmp
adc
aas
in
dec
ja
addb
xchg
adc
mov
mov
gs
out
add
mov
xor
xor
xchg
das
lcall
jo
pushf
xchg
inc
clc
lcall
in
sub
cltd
std
mov
pusha
aam
dec
xchg
outsb
insb
cmp
mov
lea
pop
divl
test
mov
int
out
jno
mov
push
mov
mov
pop
das
ret
jge
aaa
or
sbb
mov
orl
insb
and
fstpt
in
xchg
repz
sub
adc
or
js
fwait
stos
fcom
inc
push
inc
lret
xchg
daa
sbb
inc
aas
jg
lds
arpl
out
fildl
data16
push
out
xor
je
loopne
xchg
jno
iret
out
sbbb
or
adc
xor
scas
shrb
fldl
mov
mov
pop
mov
push
cmpsl
dec
inc
xchg
out
frstor
movsl
mov
mov
cld
mov
and
jb
dec
stc
xchg
and
xlat
sbb
lods
sbb
push
xchg
pop
fldcw
mov
ficompl
cmpl
xchg
xchg
out
inc
out
add
filds
ret
enter
dec
push
pop
test
inc
adc
pop
pop
ds
dec
loop
cld
adc
arpl
pop
jecxz
or
mov
and
push
rorl
mov
es
fldenv
cmp
pusha
movsb
mov
and
and
aam
or
mov
ret
fimull
mov
imul
out
ret
pop
mov
sbb
lcall
stos
rclb
imull
stc
add
adc
xchg
xchg
inc
pop
sahf
xlat
or
push
das
xchg
sbb
shll
adc
ret
xchg
xchg
gs
fxtract
cmpsb
add
jecxz
push
dec
test
lcall
pop
push
lret
lcall
pop
in
std
pop
mov
xor
dec
fxch
add
pushf
pop
fwait
jns
sub
test
or
stc
push
mov
xchg
hlt
add
dec
push
jb
jge
aad
enter
lods
insl
int3
cmp
adc
lret
pop
mov
xor
jnp
in
lods
test
insl
add
push
sub
cld
pop
lea
popf
les
les
movb
gs
mov
push
out
push
mov
in
or
push
cs
inc
imul
add
push
in
test
inc
inc
xlat
sbb
mov
test
sub
sti
fnstenv
cwtl
xor
mov
mov
nop
popa
in
xchg
mov
fwait
out
outsb
test
jg
xor
xchg
ret
inc
sub
xor
or
les
inc
inc
xor
iret
or
push
mov
cmpsl
insb
ljmp
aad
sbb
cmp
das
pop
mulb
cmc
shll
sbb
sbb
mov
pop
mov
dec
inc
mov
call
sub
jno
pop
aam
out
andl
mov
in
and
adc
mov
cmp
xor
pop
cmp
lea
xor
flds
xchg
sarb
rorb
rcrl
add
push
xor
pop
int
mov
loope
jb
cmpsb
and
xor
in
pop
xchg
inc
dec
inc
mov
scas
addr16
cmpl
and
add
lcall
popa
mov
inc
push
std
cwtl
out
pop
jg
lahf
mov
mov
psllq
add
lahf
mov
movsl
jmp
lahf
std
jns
ret
xor
mov
mov
cmpl
sub
inc
outsb
jb
dec
adc
sub
lock
sbb
ljmp
ljmp
icebp
fwait
cltd
and
mov
add
pusha
xchg
cmc
addr16
loope
pop
xchg
mov
dec
int3
pop
pop
pop
testb
xor
loop
data16
fdivs
push
lcall
cli
not
mov
orb
clc
jg
int3
xlat
aad
mov
cld
adc
and
ficoms
leave
data16
cmc
xor
call
or
repz
mov
lret
dec
pop
xchg
enter
enter
rcr
mov
ja
push
out
add
data16
pop
shll
pop
or
rolb
add
iret
test
xchg
ret
lret
mov
sub
loopne
dec
push
lret
cltd
add
mov
push
das
jp
pop
in
push
ss
jne
dec
push
cmp
sbbl
push
lea
lret
js
mov
jae
add
aas
adcl
nop
mov
cwtl
jo
push
stos
lods
inc
mov
ljmp
setns
les
int
xchg
es
push
fs
mov
out
push
add
push
cmpsb
cmp
jo
loop
push
jnp
roll
in
mov
inc
add
scas
mov
cwtl
sbb
cmpsb
fyl2x
mov
rcr
sub
xchg
out
clc
cmc
or
getsec
out
sbbl
push
pmulhuw
fsubrs
xchg
jle
push
inc
repnz
dec
dec
adc
pushf
fmul
shl
inc
lea
into
loop
shll
in
ret
inc
daa
sbb
inc
push
fsubrl
adc
mov
and
push
cmp
pop
insb
mov
and
lret
xchg
mov
fcoml
xlat
lret
lock
int
test
dec
repnz
add
addr16
xor
aaa
cwtl
jl
cmpsb
jno
or
or
fldt
pop
jb
pop
aaa
fwait
insb
scas
jmp
es
sub
inc
push
inc
inc
std
push
jmp
xchg
push
test
push
xchg
loope
ret
xor
rolb
push
xchg
fsubs
cmp
iret
pushf
or
rorl
mov
inc
roll
or
cmc
cs
add
inc
cmp
ss
scas
add
int
cld
sbb
es
in
mov
cmpsl
inc
mov
push
xor
stos
stos
ljmp
xor
adc
ja
in
or
test
movsb
and
out
cmp
push
clc
mov
mov
data16
arpl
xchg
int3
push
outsb
scas
pop
mov
repnz
test
clc
cs
inc
ljmp
jo
fiaddl
bound
push
push
push
dec
lcall
bound
test
cmpb
filds
jns
and
pushf
push
aad
js
sub
pop
and
nop
or
inc
jnp
repnz
loopne
ffree
xor
sti
inc
jecxz
shll
add
push
jns
and
cmpsb
ja
jmp
aad
push
push
sbb
repz
ret
insb
pop
inc
and
stos
push
icebp
cmp
dec
sbb
outsb
mov
adc
ret
mov
and
cmp
insb
jle
aad
cld
iret
mov
adc
imul
jecxz
imul
and
shlb
leave
pop
mov
xorl
pop
loope
mov
sbb
jb
mov
loop
jge
in
cltd
mov
inc
inc
test
dec
sbb
dec
add
aaa
lds
xchg
mov
mov
bound
inc
mov
aaa
mov
xor
xchg
sub
push
insl
stos
mov
jo
pop
lds
pusha
mov
mov
adc
pop
dec
sbb
pushf
mov
movsl
sarl
mov
pop
jl
test
sbb
cmc
imul
lods
sbb
xor
xchg
aam
sbb
xchg
call
jbe
ret
in
dec
aad
add
mov
inc
dec
rorb
testb
pop
xchg
mov
mov
test
mov
rorb
fadds
loop
mov
push
test
mov
sahf
dec
decb
repz
mov
mov
mov
jge
jne,pt
mov
jno
jns
ja
push
sti
dec
test
mov
xchg
adc
stos
and
mov
add
mov
out
push
sbb
sahf
shrl
sahf
jecxz
xchg
cmp
mov
lods
dec
add
bound
fadds
or
lods
mov
dec
fwait
mov
out
adc
mov
mov
xchg
mov
add
mov
cmp
shll
lea
push
lahf
into
cs
jl
lret
mov
jae
int3
lahf
xchg
jnp
fistps
cmp
divb
loopne
cmp
mov
into
aam
cmp
jno
cmpsb
test
mov
loopne
test
sub
jbe
dec
cmpsb
std
jns
lret
jb
and
rcrb
mov
imul
push
push
dec
sbb
inc
jecxz
loopne
test
jecxz
insl
andb
or
push
pop
inc
rclb
test
jne
inc
cmp
xchg
lock
mov
sbb
in
icebp
adc
push
pop
cmp
cmp
add
adc
push
push
jl
scas
cmp
ss
nop
mov
or
mov
ret
jb
and
or
adc
cld
mov
je
add
cmp
pop
push
pop
in
or
pop
or
push
rclb
xchg
jecxz
in
test
imul
cmp
inc
in
push
jp
aad
mov
lret
jge
xchg
sub
mov
cwtl
adcl
xchg
push
sbb
dec
jb
into
add
cmp
out
cmp
xchg
fwait
bound
push
iret
andb
fsts
push
jle
scas
jbe
aam
sbb
cmp
xchg
mov
adc
hlt
sub
pop
movsb
mov
lahf
aas
xchg
mov
mov
dec
inc
loopne
adc
fs
shrb
inc
out
pop
xor
loope
jmp
daa
mov
stos
jb
lea
aam
cmp
sub
test
cwtl
mov
lods
adc
ret
or
lret
xorps
int
push
sbb
movsl
lea
push
and
fcmovbe
aam
cwtl
pop
xchg
adc
jmp
fistpl
xor
xchg
inc
mov
out
jb
sbbb
ret
ds
sub
hlt
repnz
sbb
notl
scas
xlat
out
adc
gs
pop
xchg
add
jb
clc
pop
scas
jb
movsb
in
or
in
xor
sbb
stc
frstor
cmp
mov
ret
test
sbb
sub
and
stos
sub
nop
nop
in
lock
stos
xchg
stc
pop
xchg
pop
outsb
repz
mov
add
jl
daa
int
lds
fldt
add
jbe
lock
pop
mov
inc
orl
sbbb
adc
mov
fsubs
mov
ret
pop
bound
fsub
andl
das
shll
mov
inc
test
xchg
fwait
push
add
jb
xor
sub
jmp
add
das
icebp
jne
adc
shrl
jns
mov
sti
fsubr
xor
jns
inc
shll
data16
les
std
mov
jno
pop
stos
or
pop
mov
imul
je
inc
cmpsl
iret
pop
mov
mov
or
adc
lods
rcl
mov
test
add
lret
cli
repnz
adc
or
sub
mov
push
inc
pusha
mov
addr16
js
int3
aaa
outsl
mov
mov
incl
movsl
cwtl
and
loopne
inc
jne
mov
outsl
fwait
scas
int
neg
hlt
jb
push
adc
mov
ret
and
push
arpl
fldenv
in
push
scas
mov
mov
mov
rcll
fnstcw
or
idivl
aas
jmp
mov
je
xchg
pop
dec
cmovne
or
fbstp
mov
dec
xchg
aad
push
xchg
pop
int
gs
fildl
popa
and
jecxz
mov
push
jecxz
js
and
repz
push
xchg
jp
pop
mov
push
xor
and
je
cmp
das
cmp
xor
xor
cmp
jmp
es
adc
rclb
imul
jge
movsl
iret
jg
pop
cld
mov
outsl
rcrb
sub
lds
push
fmuls
and
inc
push
sbb
mov
add
lock
xor
movsb
mov
jmp
add
xor
inc
jbe
mov
hlt
sub
mov
pop
dec
adc
movsb
leave
loopne
cmp
loopne
call
jns
cld
xchg
push
js
mov
gs
jb
xor
lea
mov
pop
cmp
bound
xchg
adc
icebp
xchg
testb
shrl
push
std
push
imul
call
add
adc
arpl
dec
sub
jl
sub
nop
jnp
mov
and
aas
subb
mov
fmull
mov
ds
enter
je
push
mov
sub
push
lcall
mov
adc
xchg
cwtl
inc
arpl
cmp
ss
push
lds
and
nop
int
out
push
pop
xor
mov
jg
sbb
cwtl
adc
imul
or
into
ja
sbb
adc
push
jp
cmpsl
out
gs
leave
xor
lret
fistpl
sbb
pop
orb
cmp
push
xor
jo
testb
int
lods
decb
cmpsl
fisttpl
ret
inc
sub
loope
dec
cmpsl
xchg
roll
loopne
mov
sbb
mov
lcall
jo
and
fnstsw
mov
test
fcomp
push
repz
xchg
jecxz
mov
shlb
vpcmpeqw
cmp
pcmpeqw
icebp
xor
adc
mov
sub
repnz
xchg
add
movsl
add
or
dec
cs
fmuls
cmp
mov
xchg
ljmp
loope
xor
xchg
js
add
push
add
push
xchg
pop
shrb
in
stos
xorb
mov
mov
nop
movsb
ja
xor
fstpt
dec
and
push
aas
mov
jg
cltd
mov
pop
mov
pop
push
xchg
std
rcr
mov
adc
add
sub
inc
xor
inc
push
out
je
lahf
jns
movsb
sahf
cmp
xchg
cmp
testb
add
rcrb
push
scas
scas
fdivrp
orb
cmp
adc
ja
mov
mov
sub
nop
je
add
push
add
icebp
in
repnz
roll
xor
sbb
or
jmp
aaa
dec
adc
aam
int
lcall
add
jmp
cmp
clc
outsb
testl
adc
push
pop
shll
leave
pop
nop
jae
sbb
repnz
sbb
dec
inc
shrb
jo
in
sbb
fbstp
cmpsb
enter
sahf
push
enter
sarl
mov
xor
pushf
xchg
shlb
cmp
push
mov
cs
cltd
push
cmp
inc
jnp
push
pop
xchg
lds
not
faddl
sub
add
cmp
adc
push
and
dec
sub
imul
arpl
add
ret
roll
movsb
mov
mov
ds
and
xor
jg
ss
dec
bound
mov
mov
je
rcrb
out
cmp
cmp
mov
popa
mov
lahf
xchg
sbb
cmp
push
cmp
adc
jg
or
fmuls
and
cmpsb
push
fdivrl
loopne
lods
cmpsl
inc
sub
sbb
push
mov
cwtd
and
push
mov
inc
rorb
movsb
mov
xchg
adcl
add
iret
stc
adcl
ljmp
push
dec
push
mov
movsb
sahf
and
mov
fcomps
addl
enter
stos
jg
sbb
pop
cli
pop
sbb
in
and
jb
hlt
push
pop
aam
lret
sub
cmp
sub
rcrl
add
push
inc
pop
scas
jno
inc
add
fdivrs
dec
sbb
movsb
pop
out
lea
aas
inc
and
sbb
and
mov
or
je
pop
aam
mov
add
lret
or
xchg
mov
pop
das
xor
bound
daa
and
push
fcmovne
pop
hlt
lret
mov
popf
and
add
in
push
push
inc
sbb
pop
cmc
pop
sbb
lea
enter
das
incb
mov
pop
hlt
data16
stos
mov
or
cltd
daa
clc
push
jp
mov
xchg
or
ja
and
scas
dec
popa
inc
inc
movsb
scas
shll
jp
sub
mov
cmpsb
sti
mov
clc
add
lods
jae
push
inc
enter
and
push
ja
jmp
es
bound
pop
std
sub
fstl
adc
les
jmp
push
inc
xchg
outsb
stos
xorl
sbbl
xor
inc
or
push
bound
adc
daa
xchg
push
je
adc
bound
in
xchg
pop
push
in
aad
push
mov
dec
jmp
dec
pop
xor
and
ss
xor
mov
inc
arpl
pop
mov
stos
or
xchg
mov
pop
out
mov
xchg
cmpsl
cmpsl
ficompl
mov
call
test
mov
fs
daa
idivb
or
and
iret
push
lea
out
cmpsl
push
arpl
cmpsb
inc
xchg
inc
push
adc
test
fldt
out
xor
cwtl
mov
repz
xchg
sbb
popf
and
dec
fisubrl
jecxz,pn
pop
rep
fsub
cmp
push
leave
ret
push
adc
push
xor
mov
and
mov
shrb
or
mov
xchg
arpl
inc
lret
add
xchg
addr16
mov
notb
xor
fs
pop
xchg
push
rclb
enter
iret
and
mov
mov
dec
dec
in
ret
in
mov
mov
aas
pop
jmp
and
scas
mov
imul
xchg
xchg
adc
mov
lea
adc
popa
or
test
push
mov
jb
add
or
cmc
out
aam
bound
loope
dec
fdivs
pop
xchg
push
cli
in
cmpl
pop
and
daa
push
scas
ret
pop
ss
pop
out
sub
cmc
or
xorl
add
fisubs
sub
stc
mov
mov
dec
aaa
xlat
xchg
test
out
addr16
loop
aaa
mov
in
nop
cwtl
aam
mov
or
hlt
and
inc
ss
jg
jp
scas
adc
mov
lahf
out
mov
push
push
test
mov
stos
xchg
add
pop
fisubrs
out
add
jb
ljmp
pop
scas
es
in
stc
pushf
inc
xchg
add
jno
mov
jge
or
add
and
bound
les
jnp
dec
adc
sbb
or
in
mov
add
cltd
out
mov
sub
or
pop
inc
aas
dec
in
and
pop
daa
jg
stc
sbb
lret
rol
xchg
out
pusha
xor
movsl
repz
jae
cmpsl
xchg
sahf
nop
xchg
in
ret
dec
lds
aas
sbb
ljmp
fcoml
cld
inc
dec
stos
dec
loop
sbb
xchg
jp
pop
jne
fdiv
mov
mov
ret
add
add
sub
loopne
or
imul
push
dec
inc
push
mov
inc
std
xor
push
xchg
in
mov
hlt
addl
sbb
out
clc
int3
cmpsb
popa
sbb
mov
xchg
add
jns
mov
out
xor
dec
hlt
loopne
fldt
sbb
xor
cs
and
xchg
sahf
xchg
xchg
xor
dec
adc
shrb
lea
pop
and
inc
push
les
rol
mov
lea
ret
cmp
dec
or
mov
das
inc
or
stos
mov
aas
movl
xchg
scas
inc
cmp
in
loopne
dec
inc
xchg
dec
inc
and
int
pop
cmp
inc
xchg
mov
mov
int
adc
sbb
lock
mov
jo
push
rclb
lret
or
xor
inc
movsb
xchg
adc
jecxz
xchg
clc
insb
jl
jecxz
test
inc
mov
stc
fbld
and
test
cmp
pop
and
adc
shll
bound
out
std
add
test
cs
and
mov
data16
cmpb
daa
jp
adc
test
fisubrs
and
push
xor
dec
xchg
sbb
hlt
call
push
mov
fadd
xor
pop
xlat
frstor
cli
inc
nop
and
mov
push
insl
and
in
jo
pusha
cmc
dec
nop
mov
adc
pop
push
mov
mov
shll
jl
lds
push
xor
cs
test
push
sub
gs
ja
xchg
inc
adc
jp
ret
or
xor
nop
mov
sub
shl
inc
das
and
xchg
inc
ficoms
aas
imul
xchg
xchg
mov
mov
test
les
mov
imul
int3
inc
rcrl
lea
shl
pop
movsl
lcall
pop
xor
into
movsl
test
xchg
adc
and
js
ret
aaa
in
pop
cmp
aas
js
jg
idivl
push
xor
or
add
cmc
add
hlt
das
sub
mov
pop
fwait
addl
mov
repnz
out
adc
push
mov
ja
xchg
js
scas
xchg
push
cld
dec
or
stc
xchg
fisttps
adc
cmp
adc
lahf
cmp
shl
fmull
push
das
jg
push
rcl
clc
fisubl
aam
jnp
dec
mov
idivb
punpcklbw
enter
sti
cmp
mov
js
add
xchg
mov
ds
and
or
xchg
push
xchg
adc
add
jp
mov
ret
adc
scas
adc
addb
adc
sbb
jg
insb
pop
loope
cwtl
xchg
pop
in
lret
and
pusha
leave
mov
fstpt
int
inc
adc
and
sahf
je
ja
fildll
add
loopne
jle
out
imul
clc
pop
mov
hlt
les
push
fsubrl
adc
hlt
xchg
shlb
mov
cmpl
xlat
push
lods
pop
sbb
lret
popa
dec
cmp
mov
sub
ljmp
std
loop
mov
outsb
cld
add
scas
daa
pushf
cmpsb
pop
cmpsb
out
stos
fisubl
push
mov
lods
mov
lea
je
mov
sub
hlt
mov
jle
imul
push
mov
push
jno
lahf
cltd
test
orb
outsw
push
cmp
jl
shll
xor
sub
lahf
mov
sbb
push
out
cmp
fdivrs
push
fs
fsubrl
add
mov
gs
jmp
jp
sub
mov
jmp
ffreep
stc
mov
mov
stos
inc
adc
push
int3
sti
cmp
aam
lcall
call
mov
pop
cmp
out
fwait
or
fcmovnb
adc
shrb
pop
repnz
jle
mov
push
add
outsb
cmp
jp
call
clc
cmp
cmp
jp
sarb
dec
out
and
sahf
loop
mov
data16
mov
and
mov
pop
xorb
int3
in
and
sbb
adc
cmp
or
mov
leave
lods
stc
inc
adc
pop
adc
repnz
in
cmp
call
inc
movsb
aas
mov
call
cmp
test
iret
mov
out
out
lret
mov
push
push
adc
sub
and
adc
mov
out
aad
jp
add
call
xor
aam
enter
scas
adc
sbb
lret
sar
scas
scas
sub
lods
in
rcl
xlat
lret
cwtl
mov
ret
xlat
add
pop
jbe
push
adc
add
cmc
insl
inc
aas
jle
sahf
cmp
and
inc
or
outsb
arpl
movsl
fistpl
ljmp
or
cltd
in
ud1
cmp
and
jmp
jecxz
pop
sbb
and
lret
cwtl
pushf
loopne
xchg
aas
mov
loope
mov
mov
in
aaa
aad
data16
fisubl
rcll
jge
cli
out
jne
mov
divl
addl
sbb
and
lahf
sarl
cli
pop
mov
push
and
mov
adc
test
and
push
and
roll
insb
icebp
or
mov
bound
stos
cli
mov
test
mov
sti
loop
imul
adc
mov
outsl
pop
sub
psubq
sub
pushf
mov
decb
jb
cmp
stc
iret
or
adc
jp
fwait
mov
xchg
mov
xchg
adc
iret
mov
hlt
mov
loope
addr16
enter
loopne
dec
xor
pop
shrb
push
add
test
sub
negb
add
dec
xor
sbb
insb
dec
test
sarb
dec
lcall
das
adc
das
inc
inc
xor
in
xchg
xorl
int
xchg
movsb
js
lock
inc
es
or
test
sub
push
gs
ljmp
inc
cmp
sub
iret
mov
ljmp
push
aaa
decl
orb
jb
adc
je
jle
int3
out
push
repnz
imul
and
sbb
test
imul
pop
or
jne
stos
cmp
loopne
pop
lret
dec
push
inc
stos
leave
test
push
mov
mov
cmc
cmp
sbbb
mov
cmp
and
mov
stos
jmp
aaa
dec
cmpsl
ds
sub
xchg
sub
pop
cmpsl
int
dec
icebp
dec
fsubrl
cwtl
add
jo
mov
inc
dec
and
jne
stos
and
sub
unpcklps
and
cwtl
cltd
insl
xchg
int3
aaa
sub
shll
mov
mov
add
jge
mov
test
cld
fwait
std
aas
pop
inc
dec
imul
lcall
imul
in
aaa
lds
insb
inc
jl
mov
xchg
xor
mov
jb
jbe
cmpl
ja
inc
sbb
dec
jecxz
rorl
pop
dec
mov
mov
fists
addb
lea
push
pop
sbb
inc
cmpsb
sti
jecxz
shll
cmp
pop
mov
mov
andl
lcall
xor
mov
sbb
push
push
repz
pop
cmp
adc
push
movsl
adc
or
dec
push
outsl
mov
sti
mov
push
pushf
fsubrs
xor
shlb
xor
repz
add
mov
loope
out
jle
lret
push
sti
cmpsl
call
push
aad
mov
sbb
xor
inc
pushf
in
orl
orb
push
mov
fmul
dec
imul
cmpl
push
setl
cmp
mov
frstor
sub
pusha
inc
inc
inc
sub
gs
push
xchg
mov
push
jg
lods
dec
sbb
cmp
pop
mov
cmp
fwait
andl
insb
repz
in
push
shll
xchg
scas
jle
pushf
mov
mulb
cmc
mov
pop
xor
jp
jo
sbb
cld
fwait
sub
aam
cs
cmp
xor
push
xchg
push
inc
fcoms
jne
pop
fdivrl
nop
sub
jmp
scas
push
rorl
adcb
ss
int3
xor
adc
rorl
fs
sub
popf
pop
xor
xor
lea
xorl
mov
and
jmp
sbb
dec
fwait
push
aas
mov
pop
cltd
cmpsl
sbb
sbbb
loope
jae
lret
arpl
or
cld
pop
add
outsl
mov
adc
mov
add
mov
in
xchg
xlat
mov
movsb
aam
fdivrl
cmpsb
jle
loope
adc
mov
jmp
jle
out
popa
daa
cmp
push
cmpsb
mov
add
outsb
std
mov
push
mov
into
pop
fst
xor
adc
lds
in
cmpsb
mov
dec
lea
and
jg,pn
int3
jo
aas
mov
sbb
lcall
jmp
adc
rolb
push
xchg
loopne
mov
or
pop
inc
faddl
test
or
push
mov
jg
push
xchg
popf
cmp
orl
sub
iret
lahf
adc
ja
notb
pop
mov
shrl
and
cli
movsl
inc
add
add
pop
jl
sbb
cmc
xchg
xor
and
pusha
out
sub
and
aaa
icebp
add
addl
cmp
and
pop
imul
andl
sti
shll
inc
push
repz
and
jb
or
mov
shrb
in
push
xor
adc
mov
mov
sbb
inc
fs
cmp
cmp
iret
push
xor
int
aam
xor
inc
mov
leave
jg
adc
out
cmp
subl
popa
pop
stos
scas
and
loop
mov
or
cli
sbb
std
incb
adc
adc
and
mov
mov
out
sbb
lret
xchg
xchg
mov
xchg
xor
fnstsw
xchg
mov
outsl
das
and
out
mov
adc
lcall
mov
pushf
pop
push
push
loope
mov
cwtl
sub
adc
stc
mov
mov
add
add
mov
pop
sub
push
inc
xchg
pop
leave
aas
pop
jb
jp,pn
imul
cmp
scas
cs
mov
rcr
xchg
lea
test
out
push
jo
pop
pop
or
pmulhw
fnsave
mov
shll
ret
lds
and
jl
mov
pop
pop
sub
je
loope
or
adc
arpl
xor
dec
push
xor
lcall
adc
jnp
mov
dec
add
loope
sbb
data16
jmp
adc
das
mov
aas
jbe
push
push
xchg
inc
mov
push
into
pop
inc
or
mov
inc
add
test
std
aas
jle
cld
imul
push
push
ret
fisubrl
push
ret
or
ljmp
sbb
xlat
sub
add
mov
sti
mov
mov
add
arpl
add
xchg
popa
push
fldl
stc
push
cmp
mov
mov
cmc
xor
jle
sub
and
sub
or
addb
xor
dec
mov
daa
adc
dec
mov
sbb
int
adcb
pop
xchg
mov
cmp
mov
adc
ficoml
lret
jnp
repnz
and
scas
loope
cmp
sti
mov
or
jmp
mov
mov
js
mov
inc
rorl
in
dec
cmp
inc
jae
mov
dec
add
mov
pop
xchg
in
push
sub
push
add
iret
adc
ss
jno
jle
mov
ja
inc
or
and
stc
sti
jl
rorl
hlt
push
das
xchg
repnz
in
loope
inc
sahf
mov
inc
cli
sbb
xchg
mov
xlat
add
ret
repz
in
stos
inc
push
das
and
pop
and
pop
fs
fcompl
sbb
testb
dec
call
pop
rdtsc
mov
pop
push
loopne
dec
or
cmpsl
nop
push
cmpl
jne
mov
or
sbb
loop
fnstenv
dec
stos
cmp
lahf
xchg
adc
cmp
lcall
dec
and
in
fldcw
jge
xchg
sbb
stos
xlat
xchg
icebp
mov
roll
mov
add
in
push
aaa
bnd
push
jmp
xor
mov
jno
leave
aad
sub
outsl
jns
cmp
fcom
jmp
ja
push
int
push
xor
stos
in
fisubrl
sub
and
lods
lahf
inc
loope
push
popf
loop
pop
scas
les
sbb
adc
and
lret
fadd
ljmp
xchg
fdivrs
rcrl
pop
inc
test
sub
hlt
adc
insb
fmuls
scas
sahf
inc
adc
sbb
fmul
xchg
sub
addr16
loope
inc
cmp
lcall
fwait
mov
jno
dec
add
in
jl
aas
getsec
cltd
test
jmp
mov
xor
push
mov
into
into
jecxz
f2xm1
or
adc
xor
add
xchg
adcb
xor
inc
shlb
pop
pop
add
popf
cs
lds
xor
jg
dec
jnp
dec
addr16
cmpsl
imul
adc
mov
lahf
repnz
and
lea
dec
push
fistpll
addb
hlt
xor
sub
dec
jg
outsl
fbstp
outsb
jne
jns
movsl
loope
push
ficoms
and
or
push
mov
mov
mov
pop
rol
sub
pushf
jbe
fisubl
jecxz
fstps
mov
fcomi
adc
push
fcomi
sbb
test
xchg
repz
jbe
inc
xlat
dec
pusha
jmp
insl
xchg
fs
lea
sahf
pop
mull
daa
loop
push
pop
and
stos
les
pop
pop
out
jge
mov
push
inc
add
xchg
iret
inc
and
notl
lods
hlt
dec
repz
xor
xchg
pop
mov
mov
lea
dec
adc
xchg
mov
inc
mov
jg
icebp
jae
adc
pushf
in
fisttps
ss
add
ret
mov
mov
addr16
adc
insl
iret
scas
mov
sub
pop
jno
int
insl
lds
cwtl
repz
shlb
repz
aas
sbb
notl
cwtl
lods
xchg
inc
out
aad
std
and
inc
test
sub
bound
loop
inc
sti
in
add
sti
dec
outsl
lock
std
pop
int
jo
out
rcll
sbb
sub
jae
out
dec
push
stos
nop
jmp
lods
lods
push
or
push
adc
aaa
inc
add
std
mov
hlt
aad
dec
adc
lahf
cmp
lret
pop
shr
fsubrs
push
mov
xchg
xchg
imul
xor
or
daa
mov
jnp
in
into
dec
lea
add
ret
movsl
test
stos
mov
mov
jbe
sbb
ret
pop
dec
popl
shlb
push
add
mov
xchg
ja
stc
jmp
xor
dec
loopne
or
fmul
lahf
sub
xor
push
orb
cmp
xlat
mov
nop
dec
sbb
lods
push
shrb
mov
push
jecxz
xchg
cmpsb
insl
repnz
out
sahf
push
lods
cmp
sub
cmp
add
dec
cwtl
cmp
arpl
pop
ljmp
popa
sarl
xchg
gs
xor
mov
cs
dec
fistl
popf
shrb
pop
pop
jge
shrd
lret
in
lret
inc
out
and
xchg
aam
rorl
add
and
and
pop
imul
jo
cmc
jae
cmpsb
inc
add
dec
mov
stc
jle
cmp
aad
shlb
stos
loope
aas
lods
mov
and
inc
fwait
stc
push
test
roll
jmp
data16
cmc
dec
inc
nop
xor
jae
pop
fwait
sbbl
jbe
jge
add
mov
scas
xchg
add
aas
cwtl
push
idiv
cmp
cmp
push
cmp
xlat
adc
movsl
add
push
gs
ss
sbb
mov
push
adcl
cltd
inc
sbb
out
sbb
dec
sbb
inc
pop
mov
jno
xchg
and
movsb
sbb
cltd
mov
pop
test
xchg
xor
lods
mov
cmp
aad
push
and
xchg
in
push
add
add
adc
std
es
out
rcll
into
add
pop
loop
pop
insl
dec
aas
dec
test
popa
cmp
or
aaa
in
adc
bound
in
push
and
stos
jno
and
inc
inc
popa
add
pop
js
fsub
mov
or
dec
xlat
popf
inc
mov
mov
dec
push
in
shrl
pop
adc
shlb
cmpsb
push
inc
push
hlt
lcall
rorl
mov
inc
insl
xchg
in
lea
into
cli
adc
fsubrl
loope
subl
xor
cmp
add
xor
fnstsw
roll
les
sub
jg
add
xor
faddp
xor
xchg
xor
insl
and
ja
push
xor
dec
repnz
iret
xchg
jne
inc
in
ret
pop
fdivrl
out
jecxz
mov
xlat
arpl
hlt
add
push
add
stos
mov
idivl
js
lods
insb
sbb
and
lcall
imul
dec
xor
incl
stos
fst
sub
mov
push
mov
scas
cmp
std
mov
mov
mov
xor
test
cmp
mov
mov
adc
inc
push
adc
sub
pop
loope
iret
call
in
dec
pop
aad
add
push
xor
xchg
jae
xchg
cli
sub
je
aad
sub
jb
sbbb
mov
in
push
movsl
and
mov
mov
mov
dec
popf
sub
cmpsl
int3
scas
in
stc
inc
jmp
or
sbb
and
rolb
cmp
jmp
cmp
ja
mov
push
mov
ja
mov
mov
lcall
xchg
pop
cli
xchg
jbe
mov
fistl
std
mov
inc
popa
les
dec
cmp
push
push
adc
lods
mov
add
clc
out
fdivrl
mov
mov
imul
lret
jae
cmp
push
stos
div
pushl
xor
sbb
cli
jle
xorl
adc
xor
daa
adc
shl
mov
flds
sub
cltd
pop
leave
idivb
mov
ljmp
cs
sti
stos
pop
mov
movsb
mov
sti
ret
fldt
mov
repnz
into
leave
add
nop
pop
scas
dec
aas
adc
fdivrp
cmc
inc
or
push
jp
je
add
jg
test
dec
movsl
mov
xchg
lahf
xor
rcrl
push
adc
pop
xor
pop
out
mov
imul
adc
stc
adc
inc
fbld
sbb
or
pop
nop
out
push
add
lcall
mov
pop
fisttpll
inc
loopne
dec
loope
push
mov
jg
cmpsl
rcll
ss
notb
sti
pushl
es
ret
mov
movsb
and
xor
cwtl
iret
in
sbb
fsubs
fsubrp
pop
leave
js
inc
cmp
mov
mov
jne
xchg
adc
cmpsb
cwtl
inc
mov
xor
in
imul
data16
jnp
cmpsb
cmpsl
and
sub
aas
out
mov
sub
add
cmp
dec
es
in
loope
xor
jl
xchg
in
pop
cld
popf
stos
sub
out
jae
popf
adc
enter
mov
cmp
jns
icebp
lret
cmp
cmpsb
inc
dec
scas
pop
shll
fidivs
ja
or
pop
sbb
out
sub
push
mov
hlt
xor
sub
mov
sub
in
and
jbe
mov
xchg
or
ficomps
fimuls
pop
push
aas
in
bound
fistl
or
cld
push
aam
cmp
inc
xchg
cwtl
sarl
xorb
sbb
stos
cli
cmp
inc
outsb
adc
xor
pop
cli
jl
ret
mov
pusha
les
and
mov
xchg
push
cwtl
je
push
rclb
xlat
jo
loop
or
adc
call
adc
mov
ret
cmp
inc
stc
test
jae
mov
cmc
aas
add
sub
cmc
imul
aad
mov
js
sub
jp
mov
pop
shll
test
jae
fsubrl
jns
push
sti
mov
sub
ficoml
pop
mov
popa
pushf
out
add
lods
out
cmp
test
add
mov
jae
push
cmc
shl
out
sub
pop
pop
in
dec
jmp
and
aas
mov
lea
push
std
xchg
dec
ret
mov
pushl
push
jmp
imul
repnz
insb
inc
pop
and
sbb
add
movsb
and
loopne
js
adc
aad
popa
or
repz
daa
and
nop
cwtl
and
in
loope
je
cltd
pop
add
jl
nop
xchg
aam
ja
sbb
les
jg
push
aas
and
int3
shr
mov
sti
nop
movsb
add
inc
cltd
inc
pop
jnp
push
jmp
xor
add
test
xchg
cwtl
jbe
leave
js
mov
sahf
and
inc
xchg
mov
xchg
jle
pop
adc
pop
mov
push
mov
mov
fldcw
dec
vandps
sub
loop
arpl
dec
in
xchg
cmp
imul
and
nop
std
and
imul
iret
dec
mov
mov
and
mov
repnz
pop
push
testb
repz
test
mov
loop
das
popf
scas
xor
das
jnp
sti
xor
mov
std
pop
and
in
sub
sbb
dec
in
outsl
push
dec
shlb
lret
mov
add
inc
ret
cmp
inc
loopne
pop
outsl
fbstp
dec
pop
mov
test
notl
out
stc
aad
push
jmp
jae
mov
inc
jp
xchg
adc
mov
jns
stos
inc
stos
repnz
inc
fistps
outsl
mov
sbb
neg
fdivl
inc
repz
xor
or
sbb
and
pop
data16
loopne
sbb
int3
pop
aaa
ljmp
pop
or
addr16
rclb
and
bound
cmp
movsl
mov
seta
mov
enter
cmc
mov
sbbb
addl
outsb
inc
xchg
rcl
mov
sub
xor
test
pop
jbe
pushf
pop
fdivs
inc
fwait
imulb
js
and
xchg
dec
push
pop
pop
mov
sbb
loopne
jp
sbb
jbe
inc
push
outsb
mov
pop
cld
mov
xchg
sbb
push
iret
sbb
mov
xchg
in
pop
mov
test
push
push
sub
repz
shrb
mov
add
add
pop
push
imul
cltd
push
inc
je
xor
popf
decb
dec
xchg
sbb
jg
cmpsl
sub
mov
inc
in
aam
mov
dec
cld
mov
jo
cltd
dec
cmpsb
inc
les
jmp
dec
std
push
mov
rcrb
cmp
arpl
cmc
ljmp
xchg
movsl
call
xor
jae
push
xchg
lcall
lret
mov
gs
mul
outsl
mov
xor
or
pop
dec
sbb
jae
add
js
mov
and
rcrb
pop
sbb
sbb
push
jae
mov
es
push
cmp
push
pushf
jno
push
rcrb
push
pusha
fbld
orl
aas
pop
fisttpll
push
stos
xor
mov
out
fsts
dec
outsl
xlat
inc
ror
sub
icebp
mov
pop
mov
inc
pusha
adc
insl
mov
aas
daa
lds
clc
mov
inc
cwtl
cmpb
stos
or
cmpsl
jo
mov
loop
adc
out
adc
pop
dec
adc
shrb
lods
lock
daa
xchg
in
inc
sbb
mov
pushf
fcmovnb
enter
sbb
lea
aas
pop
dec
pop
fdecstp
lods
sahf
andb
std
bound
std
mov
or
jmp
inc
movsb
jmp
xlat
cmp
pop
pop
adc
cld
clc
pop
sbb
fchs
sbb
jnp
adc
sub
lret
jb
pop
mov
or
enter
orb
scas
inc
ret
and
inc
fs
loop
push
gs
push
fsubrp
adc
xchg
or
fdivl
fwait
xchg
in
xchg
out
xor
gs
lea
rol
aad
test
mov
cmpsb
pop
and
cmc
loopne
mov
clc
jg
and
daa
fwait
inc
movsl
mov
mov
fcmovb
arpl
fnstenv
pop
in
addr16
sbb
mov
inc
pop
scas
sahf
adc
sahf
adc
add
adc
mov
xor
stos
shrb
js
lcall
xor
ja
cmpsb
xchg
rcrl
lods
je
iret
or
outsb
jg
pop
mov
ljmp
push
cmpsl
fucomi
pop
loopne
daa
and
inc
fs
mov
adc
pop
popl
or
fs
cmp
out
scas
inc
jmp
sbb
mov
jmp
push
rcr
xor
sub
repz
dec
leave
rcl
jnp
stc
fldt
jmp
or
inc
mov
inc
sti
add
adc
xchg
ret
imull
xor
xor
insb
stos
inc
jmp
and
mov
mov
or
les
inc
push
mov
jmp
mov
out
or
jae
inc
ja
add
jmp
mov
lcall
sahf
dec
ror
fidivl
cmp
mov
loopne
mov
cmpsl
add
ret
test
mov
sbb
out
dec
xor
mov
dec
sbb
or
mov
pop
dec
fwait
sbb
imull
out
xchg
inc
mov
and
pop
and
mov
cs
ficompl
loope
loopne
push
push
push
lret
js
fnstsw
pop
xor
outsb
cmp
ret
jae
xchg
push
push
push
pop
mov
mov
push
outsl
cltd
mov
loop
int
test
jo
ds
sub
push
jl
popa
xor
mov
xlat
cmp
adc
add
cmpsl
out
and
loop
scas
lahf
jmp
aam
pop
push
lds
decb
incb
dec
loopne
xchg
sbb
in
cmpsl
in
mov
addb
pop
mov
mov
nop
pop
and
inc
sahf
or
adc
pop
add
fimull
rcrb
add
xchg
ja
rolb
lea
jbe
cmp
pop
push
bound
loopne
repz
icebp
movsl
sbb
jnp
jp
pop
hlt
push
sbbl
out
sub
pop
sub
loop
xor
out
lea
lea
jg
clc
and
sbb
mov
adc
add
addr16
adc
aad
adc
ds
adc
cmp
stc
out
and
test
addl
push
add
das
ljmp
jns
movb
lods
ret
scas
js
testb
dec
xor
inc
push
les
adc
mov
ficoms
or
iret
js
out
xchg
jl
rcrl
imul
lgs
xchg
jg
stc
aas
xchg
aaa
iret
movsl
fs
jge
inc
push
mov
aas
fisubs
and
test
adc
andb
gs
fldt
movsl
dec
sub
jg
cmp
cmp
push
shrl
mov
push
jnp
sub
lret
sub
jge
dec
or
mov
movsl
ffree
jge
mov
pop
aas
mov
push
jae
sbb
inc
add
outsl
mov
xchg
mov
jmp
mov
pop
fstl
loope
adc
pop
ja
sbb
mov
jp
or
sbb
shlb
adc
neg
push
inc
mov
int
int3
mov
frstpm(287
push
popa
sub
sub
outsl
mov
pop
cmp
fstpl
idivl
repnz
out
mov
aam
dec
inc
out
or
pop
sbb
test
cmp
push
mov
outsl
pop
ss
dec
sub
push
mov
and
mov
push
stos
enter
out
decb
repnz
xor
dec
icebp
sahf
push
cmp
movsb
and
fstps
mov
pop
pop
push
aaa
and
cvtps2pi
sarl
shr
mov
cli
test
xor
mov
cmp
fcmovu
orl
aad
popf
inc
ljmp
repz
ds
out
add
and
xor
stos
fildl
inc
xchg
inc
test
and
aaa
add
out
dec
dec
dec
and
jae
jmp
outsl
in
lods
setnp
mov
jmp
push
mov
outsb
or
in
pop
mov
fdivr
push
push
sarb
out
xchg
push
xlat
incb
nop
inc
fisubrl
push
or
dec
les
cmp
das
cld
fmul
ficomps
js
sbb
lahf
jno
test
fisubs
pushf
sub
enter
fcompl
in
jp
push
push
mov
and
or
outsl
pop
xor
and
mov
lods
push
jecxz
fsubr
dec
and
push
xor
outsb
addb
dec
aad
out
jmp
int3
aam
push
xchg
lea
mov
mov
ret
or
inc
mov
sub
inc
aam
fs
pop
mov
fwait
and
out
pop
cmpsl
sub
dec
jb
cltd
aaa
sbb
add
push
insb
mov
and
cmc
sub
das
or
sbb
or
adc
or
out
or
lahf
cmpb
inc
arpl
out
add
xlat
decl
mov
and
add
cwtl
js
mov
fnstcw
imul
aad
pop
mov
sbb
movsb
and
inc
cwtl
aam
out
test
mov
mov
shrb
inc
nop
cmp
movsb
add
pop
out
aad
js
cmp
push
dec
jecxz
jge
jge
in
stos
mov
sbb
mov
rcrb
daa
stc
ffreep
lret
fistps
add
sahf
mov
or
push
gs
mov
adc
mov
ds
pop
mov
and
mov
add
sub
add
push
sbb
ljmp
push
xor
add
inc
sub
lock
mov
out
sarb
mov
mov
arpl
aad
mov
adc
pop
mov
loop
pusha
loope
test
dec
pusha
mov
pop
lea
adc
push
lret
mov
cmp
sti
icebp
xor
ror
imul
das
mov
jle
pushf
adc
inc
mov
aad
enter
inc
sub
pop
lods
sub
sbb
mov
xor
scas
fildl
lock
shll
imul
ljmp
scas
add
jecxz
inc
push
ret
sub
call
sbb
or
mov
mov
stos
mov
stos
jg
aaa
stc
aas
adc
lret
or
xchg
push
push
xorl
insb
sarb
add
cmp
lods
das
pushl
lock
dec
dec
sbb
dec
jo
in
sbb
mov
dec
data16
and
xchg
or
dec
push
inc
jmp
test
mov
es
push
pop
cltd
push
ss
mov
fcompl
test
jmp
int3
leave
xor
jne
fsubrs
cmp
mov
ds
cmp
repz
ja
mov
xor
xor
inc
aam
pop
mov
or
xor
cmp
cmp
xor
outsb
lds
out
mov
jecxz
js
push
insl
stos
cltd
insb
shll
xchg
rcll
fbld
adc
aas
rol
lock
inc
pop
mov
push
dec
sub
mov
shlb
dec
mov
inc
inc
fnstsw
dec
lret
sti
sbb
mov
dec
mov
add
ja
inc
addb
cmc
push
cld
sahf
cwtl
test
jmp
push
jb
popa
in
filds
sub
sbb
xchg
ret
and
in
cmp
jle
jmp
push
scas
ret
mov
arpl
push
insb
pop
adc
ret
call
xorb
test
jae
aad
jae
mov
inc
jb
push
sbbl
xor
xchg
cli
add
dec
push
jne
fsubrl
faddp
repnz
xor
lret
adc
mov
arpl
mov
leave
jae
sti
mov
in
pop
fldenv
aas
ret
ja
jecxz
sar
stos
sbb
mov
mov
xor
push
aam
or
adc
mov
mov
inc
pop
test
nop
sarl
mov
shll
repz
setnp
fdivrl
mov
aad
mov
or
xchg
pop
cmp
pop
mov
sbb
mov
loopne
in
outsb
outsl
in
mov
sbb
xchg
into
jae
inc
lret
das
arpl
aas
and
mov
jmp
scas
jecxz
push
insb
cmp
aas
ret
pop
mov
lret
pop
cli
loope
loope
or
adc
stc
orb
jg
mov
loope
out
inc
sahf
outsb
lcall
cmpsl
fmuls
popf
out
and
mov
sub
daa
lret
pop
jg
sub
js
pop
mov
mov
rclb
xor
lock
pop
test
flds
mov
vcvtps2pd
push
fiadds
jns
inc
xor
push
jb
xchg
nop
das
mov
fcoml
shr
inc
xorb
sub
lcall
mov
xorb
push
in
cmp
pop
movsl
cmp
in
shlb
or
lods
push
xor
pop
cmpb
xchg
and
and
sbb
or
mov
out
dec
inc
sbb
jmp
test
pop
pop
rcrl
in
rolb
ret
cmc
xor
cs
out
out
xlat
xor
fwait
popa
in
jns
xor
or
pusha
pop
jno
xchg
lods
cwtl
imul
insb
mov
jg
repnz
loopne
adc
cmp
fs
insb
adc
mov
ljmp
xor
es
ss
mov
mov
ret
mov
icebp
leave
mov
push
jne
cmpsl
dec
stos
cmc
adc
fists
push
add
sub
call
rol
mov
add
jge
stos
mov
lret
mov
cwtl
cmc
lea
into
xchg
mov
dec
or
orl
int
orb
dec
movsl
dec
push
and
movsl
daa
mov
jno
cmp
and
lea
in
xor
mov
mov
adc
std
sub
jecxz
push
dec
int3
ss
es
push
andl
aam
addl
mov
xchg
mov
dec
bound
dec
cmc
mov
xchg
jno
sahf
mov
inc
xor
push
out
lcall
xchg
fidivl
jns
or
popa
outsb
mov
cltd
icebp
and
xchg
idiv
push
shrb
cmpl
test
jo
fwait
jne
cmc
ret
pop
or
test
sbb
mov
pop
xchg
outsl
cltd
xor
lods
pop
clc
or
sbb
clc
ret
pop
test
mov
and
jne
sbb
aaa
scas
lods
das
add
int
push
fs
pop
fisubrs
das
jnp
out
xor
ret
movl
mov
outsl
and
clc
outsl
add
mov
jb
jmp
xchg
mov
cs
fs
mov
imul
mov
pop
pusha
sbb
dec
pop
outsb
lock
imul
fdivl
movsb
scas
xor
xchg
lret
jne
fstpl
pop
dec
adc
shlb
mov
lods
inc
andb
cli
fstpl
adc
xchg
hlt
sbb
cmc
aaa
mov
aad
sbbb
push
add
pop
cmpsb
push
add
loopne
shlb
mov
inc
jg
out
inc
mov
sub
pop
cmp
idivb
loope
aam
lret
rcll
push
in
js
lods
sub
inc
jbe
xchg
mov
inc
push
or
mov
out
push
pop
out
mov
mov
sbb
test
aad
out
out
rolb
sub
cmp
neg
je
subl
icebp
test
out
fstpl
test
fisubrs
adc
cmp
dec
jmp
push
call
or
xchg
cmp
cmp
pop
xchg
cmp
xchg
outsl
iret
cli
ja
pop
lret
call
outsl
ror
adc
repnz
popf
loopne
sti
cli
mov
jnp
lock
mov
mov
scas
or
adc
lret
pop
dec
mov
in
dec
pop
nop
sbb
add
cmp
shlb
aad
xorb
or
mull
pop
nop
and
shlb
ja
lods
adc
add
loopne
mov
inc
cmp
jae
rolb
call
xchg
fwait
cmpsl
jl
fdivp
stc
ss
mov
sbb
ret
adc
xchg
push
mov
out
dec
rcrb
dec
int3
mov
jl
mov
fprem
fdivrp
ljmp
lock
inc
call
jge
iret
loopne
push
das
pusha
stc
rol
xor
test
ja
out
roll
sub
sbb
ffree
loop
cmp
int
xor
int
cltd
pop
jne
aam
icebp
inc
push
inc
fwait
add
clc
repnz
ficoml
out
mov
lds
cmp
push
subb
push
mov
fwait
mov
jp
movsl
adcb
data16
std
pushf
xchg
out
loop
mov
push
mov
popf
or
fistpl
push
pop
xchg
jecxz
push
cltd
adc
insl
shrb
mov
sub
daa
pop
sahf
cltd
shll
mov
rolb
mov
xchg
jge
fdivr
dec
push
cli
scas
adc
inc
cli
mov
clc
xor
popf
jg
aad
push
inc
inc
or
mov
loop
xchg
lret
les
inc
inc
hlt
pop
pusha
fdivr
mov
addr16
pop
pusha
adc
out
fiadds
push
adc
add
inc
sub
into
lock
lret
adc
loopne
xor
popf
dec
aas
sub
adc
std
adc
push
das
jle
sbb
imull
rcll
nop
mov
add
decb
push
xor
dec
int
push
push
out
addr16
cmp
xor
fsubs
xchg
add
ja
sub
in
mov
lea
inc
repnz
or
fsubrl
push
js
out
lds
gs
in
ds
push
rorb
gs
js
mov
and
inc
cmp
test
mov
sbb
dec
rolb
mov
fbld
sbb
push
sti
xchg
mov
cmpsb
movsl
outsb
push
adc
xchg
inc
sub
test
adc
mov
loopne
xchg
pop
fisubl
xlat
mov
iret
stos
adc
push
pop
inc
push
je
pusha
lods
dec
fs
pop
lods
nop
fcmovnbe
pop
in
sbb
add
cld
in
dec
test
sbb
incb
bound
add
mov
jo
cld
fadd
dec
imul
fadds
cmp
or
xor
hlt
mov
push
dec
popf
jne
pop
inc
mov
rcll
add
shld
cmp
inc
push
nop
pop
jns
and
jle
mov
pop
incl
add
mov
xchg
mov
enter
rclb
inc
xchg
mov
std
mov
mov
adc
adc
inc
xchg
ds
hlt
cmp
gs
xchg
rcrl
dec
push
or
mov
sub
movsb
rcrb
mov
leave
or
xor
fdivrs
mov
lock
jno
in
xchg
inc
or
aas
fsubrl
filds
cld
sarl
pushf
pop
pop
inc
cmpsl
mov
leave
or
rcl
scas
pop
ret
mov
jae
outsb
loop
cmp
orb
or
xchg
clc
lock
lea
add
xchg
ror
pop
out
les
mov
scas
add
and
push
inc
out
sbb
sub
pop
scas
loop
ja
cmp
jmp
xchg
jb
dec
pop
xchg
ret
cmp
pop
push
aaa
dec
dec
ror
xor
inc
mov
nop
mov
aad
loop
and
adc
mov
push
sbb
jge
push
movsb
jnp
cmp
mov
inc
jg
mov
mov
bound
and
dec
leave
aad
mov
xor
lahf
xor
add
mov
les
bound
mov
out
inc
mov
lahf
cli
and
cwtl
add
mov
mov
jp
cmp
cmp
pop
inc
iret
mov
lock
clc
sbb
and
mov
in
test
cmp
ret
icebp
test
xor
jb
movsl
lret
sub
sahf
and
bound
movsb
jbe
sbb
push
add
and
out
mov
outsb
cmp
mov
int3
inc
fimuls
xchg
push
cmc
sbb
repnz
mov
jmp
add
loope
push
fdivrl
mov
mov
in
imul
mov
scas
xor
lret
jbe
add
or
jl
add
jecxz
int3
and
push
aaa
icebp
loopne
lds
fisubs
imul
dec
dec
dec
scas
stos
or
adc
outsl
out
mov
test
xor
data16
mov
cmp
lahf
push
je
sub
rclb
sahf
movsl
js
les
aad
sbb
repnz
mov
and
sbb
and
popf
int
movsb
xchg
data16
mov
xchg
add
pop
pop
mov
inc
lods
cmp
mov
jge
sub
jne
inc
fimuls
rcrl
jae
mov
jns
orb
mov
push
mov
xchg
sub
in
dec
std
jge
je
and
dec
decb
mov
loop
lahf
shl
cli
mov
sahf
add
add
mov
call
pop
mov
cmp
aad
mov
inc
push
int3
and
movsl
jp
hlt
iret
divl
xor
push
xor
mov
inc
fs
iret
test
push
or
mov
les
loope
arpl
dec
jl
mov
aas
fmull
aaa
call
add
mov
sbb
pop
push
sbb
adc
jle
outsl
cmp
ljmp
cmp
pop
mov
subb
rcrb
fadd
fs
in
mov
sub
out
pop
rclb
jp
sub
std
shrl
cmp
jb
lock
or
mov
and
or
pop
loop
ds
dec
ljmp
sbb
jl
cli
fcomip
cmpsb
jle
mov
ss
pop
rolb
stos
inc
sub
loopne
adc
gs
and
fsubrs
pop
shll
fwait
or
dec
jae
and
mov
fisubs
jnp
jb
adc
fstl
lods
outsb
mov
outsb
xchg
pop
push
sbb
outsl
aas
push
jg
aam
lcall
dec
mov
pop
aaa
adc
and
aad
aam
cwtl
mov
dec
out
sub
xor
push
into
xor
xor
ljmp
test
mov
dec
pop
push
fildll
shlb
ror
nop
sub
adc
hlt
and
leave
imul
and
or
subl
clc
dec
test
dec
lods
xchg
stc
or
mov
cmpsl
shrb
mov
xchg
aam
or
and
jne
std
int3
xor
loopne
jmp
push
adc
sub
xor
xchg
push
adc
xorl
jbe
sti
ds
movsl
into
cmp
fdivrs
in
mov
lods
dec
sub
ret
and
push
cs
inc
pusha
sub
cwtl
cmp
outsb
arpl
jg
cs
mov
cwtl
pop
psubq
and
push
push
xchg
imul
mov
loop
pop
je
cmpsb
cmp
fisubs
jo
int
xchg
div
addr16
cwtl
jo
xchg
test
xchg
jp
xchg
pop
adc
fs
cmc
lret
mov
mov
pusha
cmp
lds
subb
inc
stc
in
repz
mov
cmc
mov
sbb
cmp
cmp
mov
outsl
movswl
pop
ficomps
pop
or
jno
ret
push
imul
loope
rolb
mov
scas
push
mov
add
in
cmp
out
orb
daa
lret
in
in
xor
mov
and
lock
mov
incl
push
add
or
cmpsl
push
and
inc
inc
cmp
testb
sbb
shll
movsb
fs
pop
cld
jnp
js
ja
mov
cmpsb
mov
pop
or
xlat
pusha
out
ljmp
mov
gs
imul
sbb
adc
sbb
pop
sarl
cmp
pop
jmp
xchg
jmp
pop
lret
cli
lods
mov
and
dec
add
or
lcall
mov
push
shll
das
dec
push
jbe
cmp
push
mov
loope
call
xchg
xchg
repnz
adc
sbb
add
cli
js
repz
mov
dec
mov
les
inc
fcmovb
cli
sbbb
inc
shl
lds
aaa
call
loop
ljmp
xorb
xor
mov
sarl
addr16
lahf
mov
push
or
add
push
xchg
dec
out
fiadds
mov
inc
sub
stc
daa
jecxz
loop
test
mov
push
sub
mov
int3
andb
lock
rcrb
mov
and
pop
repnz
mov
cld
lods
sub
inc
inc
sbb
fistpll
mov
mov
sub
pop
cmp
sub
cmp
std
dec
xchg
or
shl
cmp
out
pop
mov
xchg
shrl
mov
lock
push
dec
jge
mov
aad
hlt
mov
mov
lock
sbb
sbbb
notl
shl
pop
dec
mov
repnz
adc
icebp
insl
mov
stos
cmp
cld
dec
cmc
and
xchg
test
ds
xlat
cwtl
cltd
jecxz
fidivs
repz
push
popa
lea
jl
insl
push
push
jo
xchg
pushf
mov
insb
sub
pop
mov
push
std
loope
clc
dec
pop
sbb
or
sbb
mov
out
xor
cmp
mov
mov
lret
or
cmp
std
out
push
imul
xchg
sbb
in
add
jb
cwtl
test
loopne
aad
in
orl
arpl
rclb
dec
in
and
cmc
dec
cltd
idivl
xchg
ret
push
xchg
pop
push
inc
mov
xchg
and
outsl
test
push
mov
pop
mov
ret
clc
and
outsl
stc
sbb
pop
sub
fbstp
std
mov
mov
mov
sbb
jnp
ret
pop
aaa
insl
ret
jbe
pushf
dec
cmpsb
xchg
sbb
cwtl
mulb
add
nop
lds
in
cmp
push
popf
jns
jmp
in
or
loop
sbb
mov
lea
xor
repz
xchg
sub
pop
and
mov
nop
jb
xchg
imull
push
pop
outsb
mov
fs
jl
enter
enter
jno
dec
mov
outsb
outsl
stos
or
mov
pop
xor
mov
paddusb
nop
push
and
sub
fidivs
aam
ficoms
xchg
mov
das
inc
pop
pushf
roll
stc
inc
pop
dec
jmp
lahf
call
cmpsl
mov
ja
jp
jno
mov
dec
imul
pop
or
xchg
call
pop
add
adc
push
inc
movsl
sahf
fildll
xor
stc
fmuls
sbb
mov
in
dec
in
lock
jo
lret
lods
mov
push
or
out
mov
fstl
mov
mov
popa
shl
inc
mov
jae
dec
insb
xchg
push
cmp
push
sub
cld
add
outsb
stc
sbb
lock
jmp
mov
push
push
lahf
pop
cmpsb
mov
or
or
cld
sbb
mov
rol
pop
add
jno
ret
mov
sbb
inc
or
sub
mov
pop
cmp
incb
mov
mov
xor
fstpt
jmp
mov
outsb
nop
mov
hlt
pusha
outsl
sahf
lret
adc
and
add
out
idivl
add
das
mov
js
sbb
insl
xchg
clc
ret
cmp
out
shrb
stc
rcrb
cltd
inc
mov
in
cmp
xor
adc
iret
pop
mov
xor
sbb
int3
int3
insb
shll
mov
cmp
mov
ret
add
mov
push
fst
js
test
jmp
sarl
jbe
or
push
pusha
jo
rorl
out
adc
mov
cmpb
adc
mov
sub
or
and
add
jge
jo
mov
sub
inc
popa
pushf
or
mov
fstpt
sar
fisttps
addl
in
bnd
inc
xchg
mov
or
sub
dec
inc
xchg
addl
xor
mov
loope
sub
mov
inc
mov
pop
jbe
mov
aas
mov
rcll
add
sahf
mov
aad
mov
cmp
mov
inc
stos
or
jl
push
mov
adc
mov
les
mul
out
fcmovnb
jae
movsb
jecxz
int3
sbb
xchg
popa
mov
fisttpl
pop
lock
lcall
pop
push
ljmp
insb
push
inc
enter
pusha
daa
jg
and
sbb
lods
in
fs
fwait
into
add
and
add
dec
add
sub
mov
jge
in
jmp
mov
sub
lds
and
fs
ret
add
xor
sbb
pop
enter
inc
mov
dec
je
rcrb
pop
dec
stos
negl
call
push
jno
add
sbb
xchg
testl
xor
jne
inc
out
lahf
ficoml
mov
imull
repz
mov
shll
sbb
cmpsb
pop
sbb
sub
mov
call
jno
js,pn
cmc
jnp
push
xchg
je
xor
mov
sbb
adc
mov
mov
adc
insl
roll
adc
dec
push
cwtl
popf
lods
outsb
adc
xchg
std
nop
iret
ss
push
pop
mov
mov
sub
and
xchg
pop
xorl
cmp
andl
jp
lcall
shll
popa
adc
fcoms
or
test
rol
movsb
xor
push
es
gs
fisubs
push
es
sub
repz
adc
jns
lret
xor
jns
adc
sbb
lahf
inc
inc
push
leave
pushf
sbb
mov
jmp
mov
stc
pop
sub
dec
stos
sti
int
jl
dec
jge
push
jb
fisubs
adc
mov
and
ja
adc
pop
inc
sub
into
ret
aam
repz
popa
xchg
sbbb
cmpl
sub
jecxz
fisttps
inc
subl
cwtl
loope
and
mov
es
jp
shlb
dec
sbb
mov
je
lahf
pop
adc
in
fistpl
or
shll
jmp
ja
sbb
inc
mov
mov
les
or
into
jecxz
mov
shrl
sub
in
std
rcl
xchg
outsb
cmp
push
loopne
sbb
mov
xchg
jbe
iret
orl
aam
xchg
mov
stos
aas
icebp
neg
push
or
or
aas
pop
dec
aas
xchg
int3
es
cmpsb
pop
nop
dec
lcall
mov
cmpsb
iret
out
leave
dec
cmpl
push
and
nop
shll
sub
xchg
sar
push
xor
cmpsb
jnp
or
aad
sbb
sbb
popa
lret
lds
jge
mov
mov
xchg
pop
jbe
xlat
dec
dec
mov
inc
fimuls
lods
test
cmp
adc
lea
out
ret
mov
and
in
iret
lock
add
jl
js
pop
into
push
cmpsl
daa
rcrb
into
aam
xor
adc
lock
es
insb
cld
mov
or
xlat
fists
ret
mov
mov
mov
sub
mov
aas
mov
or
ret
icebp
add
lods
ja
push
loope
fidivs
or
dec
xor
stc
lcall
jp
cli
stos
xchg
inc
xchg
jnp
adc
jecxz
ret
stos
arpl
popa
leave
cmpsb
stos
mov
lock
dec
jne
mov
cltd
enter
gs
icebp
or
jecxz
in
fistpll
fldl
xchg
push
push
ficoml
insl
cwtl
inc
das
aas
insb
lahf
adc
outsb
inc
xchg
leave
andb
negb
addr16
push
hlt
lock
cmp
sbb
repnz
pop
arpl
xor
sbb
scas
lahf
pop
imul
mov
aaa
rcll
shlb
divb
adc
mov
pop
insb
mov
jp
ja
stos
mov
xor
loopne
or
pop
ljmp
jmp
mov
xor
mov
mov
shll
cmpb
xchg
cltd
push
fcoms
and
mov
outsl
orl
les
imul
fstp
mov
add
xchg
mov
dec
fiaddl
insb
mov
dec
push
sti
cmp
pusha
clc
adc
inc
clc
inc
stos
pop
nop
adc
jb
push
push
cmp
int
xor
daa
test
fdivrl
sub
sbb
sbb
cmc
insb
loop
dec
out
test
jmp
ja
add
icebp
dec
sub
sbb
les
sub
test
stos
in
arpl
movsl
sbb
insb
in
stos
hlt
inc
and
scas
xchg
adc
enter
mov
scas
dec
cmc
push
sbb
adc
lock
inc
mov
mov
orl
mov
jne
ss
repz
rclb
les
scas
imul
pusha
mov
daa
jne
int
setl
icebp
mov
int3
adc
mov
pusha
sbb
hlt
add
addb
sbb
pop
mov
dec
ret
ret
adc
inc
mov
and
bnd
enter
xchg
cmp
sbb
jle
lcall
cld
pop
mov
mov
imul
pop
mov
fcmovnu
sbb
fildll
fcmove
insb
xor
jno
dec
dec
pop
adc
adc
icebp
xchg
in
dec
popa
sbb
rcrb
xor
scas
popf
pop
push
das
mov
cmpb
add
pop
xor
loope
shll
jo
shl
roll
cmp
inc
test
or
mov
sbb
sbb
xor
aam
inc
push
pop
pop
adc
or
out
divb
inc
inc
dec
sub
ret
lret
xlat
cmp
nop
inc
clc
nop
lcall
and
jns
fdiv
les
shrb
sbb
div
sub
dec
cmp
in
sbb
scas
sbb
out
out
cltd
std
jp
scas
mov
xchg
xor
aam
shlb
jae
insl
dec
push
dec
aam
sahf
roll
cmpl
jne
lock
mov
or
mov
jecxz
mov
sbb
xlat
dec
sub
int3
das
insb
add
mov
inc
xchg
pusha
daa
mov
insb
mov
scas
jbe
les
dec
cmp
push
mov
jp
and
test
mov
dec
in
jl
aaa
aad
stos
in
mov
push
xchg
les
dec
in
add
data16
jle
sbb
adc
in
mov
push
ja
je
leave
xchg
dec
xor
movsb
xor
cld
sbbl
dec
push
jge
mov
ret
lea
mov
insb
lock
ljmp
testl
cmp
mov
aas
fwait
aaa
mov
mov
sbb
popa
cmp
inc
sub
sti
int
xchg
dec
js
adc
stos
sbb
aam
jb
push
mov
and
inc
lcall
je
add
mov
jno
stos
pop
ret
mov
into
jg
imul
dec
ret
xchg
mov
mov
arpl
xor
xchg
scas
or
mov
mov
aad
mov
jo
int
jl
cs
aaa
insb
xchg
sahf
cmc
mov
and
loop
or
decb
sub
sbb
dec
lret
test
xlat
sub
cmpsl
add
inc
and
or
jnp
arpl
and
xchg
daa
mov
jnp
mov
shr
sub
mov
cmc
gs
mov
mov
inc
and
cmpxchg
leave
dec
adc
std
pop
sbb
fistl
ds
mov
mov
mov
mov
cmpsl
fisttps
jns
dec
mov
push
xadd
or
lretw
adc
mov
aam
mov
mov
and
cmc
xchg
lcall
xchg
out
mov
int3
pop
aad
in
inc
jae
popf
ror
bound
in
jl
sbb
xchg
daa
sub
out
test
testl
dec
and
xor
ret
data16
adc
inc
xchg
fdivr
ret
fiadds
pop
mov
push
aas
ss
push
mov
cmp
sbb
scas
pop
loopne
notl
sub
and
loope
out
imul
pushf
inc
cmc
loop
sub
nop
out
bound
aad
sbb
rorb
sub
mov
pop
in
lret
push
cwtl
xchg
outsl
test
mov
popf
inc
test
leave
ljmp
ficoms
loope
cmp
push
popf
movsb
pushf
xchg
xchg
xchg
inc
ds
push
push
jno
ljmp
rorb
ss
xchg
call
repz
lcall
add
inc
cmp
inc
mov
cmp
sbbl
cmpb
jnp
ljmp
xor
adc
sahf
out
sti
xchg
test
jmp
push
out
adc
inc
adc
inc
mov
sub
add
push
adc
jge
xchg
pop
popf
lahf
stos
jne
push
add
adc
fwait
xor
mov
mov
jmp
mov
pop
xchg
sub
outsb
mov
pop
in
mov
adc
inc
lock
push
incl
or
mov
cmpsb
push
xchg
or
roll
lock
out
mulb
scas
call
cmpsb
fisttpl
push
xchg
mov
jns
inc
fldenv
in
push
mov
mov
xor
cmp
add
xchg
inc
mov
add
in
jmp
shlb
ljmp
inc
jge
sti
test
push
cmp
add
add
and
enter
pop
cwtl
ja
cwtl
jmp
mov
jge
fwait
sub
cmp
stos
outsl
pop
push
aaa
cmp
and
aas
out
lret
cmp
ljmp
lret
ss
mov
mov
adc
sub
repnz
js
jns
cmp
mov
push
fidivl
jb
lcall
mov
divb
sub
add
xchg
popf
aad
add
repnz
and
nop
mov
test
pop
fldl
pop
mov
adc
dec
and
lods
icebp
into
ljmp
dec
bound
sub
xchg
pop
test
inc
jmp
loope
ss
xor
push
cmpsb
sbb
jg
xchg
aas
sub
div
push
adc
dec
jnp
lcall
sti
shll
cwtl
sub
paddq
mov
jbe
cmp
outsb
push
xchg
dec
jecxz
js
aaa
gs
into
in
dec
scas
jge
push
pop
sub
jmp
mov
mov
cmp
cmpsl
jne
cmpsb
daa
xchg
rol
mov
sub
mov
mov
in
pop
or
mov
js
dec
insb
pushf
fidivl
sbb
dec
or
cmc
mov
imul
mov
mov
mov
mov
out
inc
inc
int3
inc
in
test
mov
and
pop
jl
ret
hlt
xchg
xlat
or
jle
inc
xorb
data16
inc
adcl
pop
in
in
int
adc
imul
adc
test
and
cmp
sarb
jb
mov
pusha
cs
stos
aad
mov
adc
hlt
sbb
sub
out
stos
push
sub
jmp
or
xchg
pop
std
or
addr16
sub
adc
pop
js
and
or
or
xor
in
sub
and
daa
xor
hlt
lahf
push
jge
cmp
adc
mov
imul
jge
and
loope
pop
mov
in
xlat
add
mov
lret
test
dec
adc
push
insb
adc
pop
mov
mov
push
xchg
sarb
and
sub
dec
mov
int3
jns
dec
call
jo
push
and
insl
adc
inc
insl
rcr
jge
cmp
mov
lcall
pusha
rol
jmp
js
cli
push
fmull
in
sub
sub
add
lock
jecxz
dec
mov
js
xor
mov
pusha
mov
rolb
mov
pop
mov
add
imul
and
xor
ror
xchg
dec
into
lcall
mov
loope
lret
cmp
xchg
clc
orb
icebp
imul
inc
pop
cmp
int
or
xor
mov
jne
in
testb
jge
mov
aad
test
or
pop
es
mov
loop
mov
fwait
cltd
jmp
adc
lcall
outsl
mov
lods
arpl
mov
out
dec
bound
and
cmpsl
add
mov
jp
mov
mov
test
pop
inc
sub
enter
pop
and
imulb
xchg
iret
movsb
ror
mov
mov
popf
sbb
jns
inc
mov
jns
push
clc
xor
sub
adc
pop
aaa
je
and
mov
lcall
idivl
jno
les
sub
pop
into
hlt
add
push
mov
data16
dec
loop
sub
test
push
adc
pop
outsb
pop
cmpsl
mov
in
add
jp
fsts
pop
scas
xchg
rcrl
aaa
fdivrl
pop
cld
inc
fbstp
and
roll
mov
popf
insb
mov
int3
dec
mov
lcall
cmp
leave
xlat
adc
cmpsl
mov
mov
dec
pop
movsl
or
leave
or
dec
in
loopne
mov
pushf
adc
adc
or
cmpsb
insb
std
inc
mov
je
sub
pop
outsl
lods
fimuls
sarl
outsb
cmpsl
in
repnz
aaa
push
adc
insl
add
imul
jnp
stc
xchg
mov
jne
sub
ja
in
in
inc
xchg
xor
pushf
xchg
jae
cmc
xchg
repz
in
mov
cmp
inc
or
jo
dec
push
sbb
ret
or
xor
sahf
dec
xor
push
mov
jne
jno
adc
pop
insb
and
add
mov
and
mov
int3
mov
jbe
sbb
fldl
xchg
scas
aad
xor
outsl
cwtl
jg
and
jle
scas
sub
xchg
imul
dec
jg
daa
adc
pop
bound
and
mul
repz
loop
cmpsl
cld
test
call
shl
outsb
mov
push
cli
jbe
or
in
sbb
aas
cmp
adc
jo
inc
mov
jmp
icebp
dec
dec
sub
fldl
sbb
rep
gs
sbbl
jo
pop
gs
jae
not
mov
out
ds
add
pop
loope
cltd
fdivrp
xchg
out
bound
imulb
pop
jns
pop
jo
add
mov
shlb
cmpsb
dec
mov
scas
inc
adc
aaa
arpl
jns
bound
or
mov
lods
push
fstps
ds
test
pop
andl
pushf
sbb
mov
mov
mov
or
inc
stos
lods
stc
pop
mov
and
fnstenv
pop
xorb
xchg
int3
in
popa
fcoml
decl
or
push
adc
mov
inc
jp
sti
cmpsl
int
dec
test
adc
sbb
addr16
lahf
mov
dec
int
mov
sub
pop
push
test
mov
adc
mov
je
sub
dec
or
or
cwtl
xchg
pop
sub
lret
aaa
mov
inc
aaa
inc
test
movsl
stos
es
sbb
push
js
sbb
mov
push
fisubrs
mov
loope
or
paddsb
fnstenv
hlt
inc
xlat
lods
mov
popa
ficoml
mov
lods
pop
cwtl
adc
roll
in
add
jg
testl
ja
push
insb
sbb
or
cmp
push
sub
add
in
aam
dec
or
mov
rolb
xchg
pushf
adc
lret
xor
lock
dec
test
icebp
outsl
cmp
rcl
adc
outsb
ret
test
jp
inc
cmp
lods
mov
movsl
push
push
testl
aaa
cmova
jp
pop
add
push
jae
sbb
cmp
xor
stos
cs
orl
pop
or
repz
mov
xor
pop
mov
mov
fildll
and
aas
lock
in
pop
jb
xlat
sarl
jecxz
ja
cs
lea
or
fucom
mov
add
push
in
adc
cmpsl
jns
insb
inc
mov
mov
dec
xchg
sub
and
lds
mov
movsb
mov
inc
mov
lds
into
jge
sarb
mov
rcl
pop
fwait
aam
mov
sub
gs
mov
aaa
test
adc
dec
push
test
daa
dec
dec
and
cmpsl
jl
pushf
xor
shlb
stos
inc
pop
push
es
cmp
xchg
cmpsb
and
xor
add
das
push
add
xchg
dec
xor
ljmp
pop
push
sub
cmpsl
or
sar
sti
nop
xchg
iret
sbb
loop
sahf
adc
xchg
mov
fistpll
insl
mov
push
call
mov
add
arpl
xchg
lahf
or
mov
xor
adc
into
jnp
aas
loop
xor
lods
incb
loope
test
pop
ljmp
inc
loopne
add
rcl
mov
fdivs
push
and
adc
mov
fisubl
cmp
jmp
or
ret
popa
mov
int3
out
sub
mov
fidivl
or
insl
rorl
mov
or
cmc
cmp
mov
das
sahf
mov
sti
fstl
cmp
testl
sahf
enter
or
xlat
ror
cmp
loope
loopne
pop
lds
pop
inc
xor
ret
jno
jge
shlb
mov
call
push
jle
add
cmp
idivb
lret
jo
ds
or
fimuls
pop
je
xor
rcr
dec
xor
push
lods
dec
popa
incb
sub
mov
movsb
cmp
mov
out
xchg
mov
sarb
fildll
mov
jno
mov
mov
and
imul
jno
or
adc
icebp
push
dec
leave
push
or
and
add
mov
push
jnp
jle
stc
push
push
lods
hlt
mov
mov
jg
and
aaa
jo
in
stos
sbb
sbb
iret
loopne
mov
ret
xchg
mov
rep
leave
test
aas
push
imul
cld
sti
inc
notl
pusha
jmp
push
mov
aaa
mov
lods
dec
js
in
xor
test
or
inc
into
sbb
in
fcmovu
mov
push
pop
lds
adc
mov
pop
vpshaq
jo
lret
xor
adc
mov
xchg
sub
sub
xchg
jge
or
and
ja
sub
pop
cli
out
imul
push
ss
inc
jl
pop
gs
fstpt
mov
loopne
int3
inc
mov
out
jmp
cs
inc
movsl
fcomi
repnz
cmc
mov
stos
cwtl
mov
lret
notb
mov
imul
inc
fstpt
and
pop
push
dec
cmp
sarb
mov
test
fidivrs
cmpb
sub
jae
clc
xchg
mov
jp
test
jecxz
aaa
mov
daa
xchg
lds
hlt
out
sarl
inc
jp
jne
add
add
and
adc
sub
mov
push
xorb
int3
xor
rcrl
push
pop
lret
repz
mov
popl
pop
mov
inc
xor
and
imul
mov
jbe
push
mov
je
nop
fstps
push
sbb
pop
shrb
sub
pop
push
mov
pop
into
push
out
xchg
inc
das
pop
inc
ret
xchg
cmp
bnd
push
jmp
outsl
imul
cmp
test
push
icebp
and
imul
hlt
sahf
add
repnz
sbbl
add
hlt
lock
mov
add
or
ror
bnd
dec
into
out
add
in
cmpb
adc
mov
fs
js
and
popa
sub
ret
out
or
mov
cmp
ret
stos
mov
lret
lahf
add
imul
pop
mov
hlt
movsl
aas
cwtl
pop
cmp
js
pop
adc
repnz
lods
push
jnp
mov
mov
sub
cmp
mov
int
add
sub
mov
adcl
mov
adc
sub
cli
in
int3
mov
popf
inc
les
add
mov
fsubrs
inc
mov
inc
jp
jnp
sub
or
shll
xchg
out
in
sbb
or
out
or
mov
cmp
or
addr16
and
cmp
jae
fsubrl
icebp
sub
push
cmpsl
jb
cmpsl
or
push
or
loopne
dec
sti
add
fwait
pop
repnz
and
and
pop
ret
popf
out
dec
push
popa
lcall
add
xor
or
cmp
sub
pop
sub
push
and
sub
dec
mov
adc
adc
xorb
mov
adc
jmp
ret
mov
push
push
inc
roll
adc
mov
ret
shl
subb
dec
fldt
mov
pop
clc
push
ficoms
or
clc
dec
push
jne
cmp
push
adc
adc
iret
in
adc
gs
sub
hlt
jbe
xchg
cwtl
mov
loop
adc
mov
pushf
pop
js
into
pop
jns
sbb
dec
mov
dec
mov
xchg
fwait
nop
mov
stc
jmp
leave
sbb
cmc
and
mov
xor
aas
ss
pop
das
mov
lods
adc
lods
mov
pop
jnp
daa
test
sbb
loope
jnp
out
jb
lcall
add
cmp
leave
sub
push
lcall
std
mov
test
in
push
pop
jecxz
insb
rcrb
pop
push
dec
movsl
sbb
mov
out
scas
adc
out
pop
test
hlt
std
mov
adc
mov
inc
push
mov
fidivl
fisubrs
inc
xor
scas
adc
cld
mov
int3
xchg
mov
and
cs
movsb
sahf
vpmovq2m
dec
je
adc
mov
mov
and
xchg
dec
mov
xor
pushf
lcall
pusha
imul
sbb
push
sbb
lret
adc
faddp
sti
dec
ret
call
popl
xchg
test
negb
push
xchg
es
lds
jle
mov
xorb
dec
loopne
sub
lret
rorb
movsl
jne
adc
mov
rclb
xchg
sahf
arpl
pop
and
lds
je
imul
dec
and
icebp
fwait
ret
jb
add
test
in
lds
jle
test
out
add
push
cmc
adc
cmp
add
and
call
xchg
sahf
pop
ret
in
ret
dec
lret
insb
xchg
test
addr16
push
fadd
adcb
jmp
sahf
iret
test
fsubrs
sbb
std
and
add
inc
call
or
xor
mov
loope
ljmp
xor
iret
inc
pop
test
scas
mov
push
jo
xchg
inc
mov
add
clc
adc
xchg
fsubrs
mov
aad
dec
fldl
xchg
pop
iret
out
push
lcall
xchg
mov
or
or
scas
inc
pop
rsm
mov
xchg
or
cltd
push
inc
sub
dec
sub
push
mov
gs
adc
jp
jae
xchg
xchg
mov
stos
outsb
mov
rcl
cmpsl
ficoml
fimull
cmp
test
adc
movb
mov
xor
jle
mov
pop
or
mov
pop
ret
insb
xor
pop
aam
jae
data16
jns
mov
insb
add
or
jmp
pop
mov
arpl
sub
mov
and
in
shlb
cmp
push
aam
push
in
les
xor
popa
mov
cli
pushf
testl
test
jecxz
lahf
sub
outsb
inc
add
les
and
sub
int
fucom
mov
add
fbstp
jne
add
dec
mov
sub
cmp
and
mov
xor
jnp
dec
movsb
enter
add
add
out
or
mov
lcall
sysenter
call
cli
insl
or
ret
push
fldcw
or
and
cwtl
cmpsl
adc
mov
sti
sub
imul
adc
sti
jecxz
sub
dec
sub
or
clc
cmp
or
fists
pop
add
daa
adc
in
cltd
fldt
mov
mov
repz
adc
out
push
dec
mov
inc
pop
mov
and
xchg
jp
addr16
pop
mov
or
push
push
into
lahf
and
pop
xor
insb
mov
ret
dec
fs
leave
push
add
loope
lods
imul
fiadds
xorl
sbb
out
shlb
mov
jmp
mov
fisttpl
adc
push
lcall
mov
cmp
enter
cld
jo
stc
or
push
testb
jno
mov
sub
inc
fildll
adc
xchg
shlb
cmp
dec
pop
loopne
movsl
stos
cmp
sbb
xlat
faddp
mov
mov
sbb
fistps
scas
push
push
pop
scas
mov
xchg
incl
adc
or
testl
in
lds
xor
cld
xchg
fs
scas
mov
ja
or
int3
xor
shlb
mov
jp
movsb
loop
mov
or
test
insl
push
cmp
jno
xchg
fstpt
test
ds
iret
outsl
jno
fcmove
dec
xchg
push
and
test
fs
cmc
jno
mov
or
xchg
in
js
sbb
scas
pop
cmp
sub
imul
xchg
and
jmp
push
ret
mulb
add
subb
clc
hlt
addr16
movsl
ds
pop
adc
in
mov
push
insb
xchg
enter
mov
mov
and
adc
sub
fidivrl
adc
inc
lcall
dec
in
rcll
fistl
incb
loopne
out
lods
cmp
inc
pushf
out
adc
adc
xchg
mov
out
mov
or
or
imul
adc
jecxz
inc
push
fs
jle
mov
sub
fwait
shrl
cmp
fidivl
and
aad
addl
push
sub
jnp
mov
mov
cmp
or
push
push
scas
ror
jb
iret
sub
aad
hlt
mov
test
mov
les
cltd
aad
mov
or
xchg
enter
jne,pt
adc
jne
repnz
mov
mov
cmpsb
lods
jb
lods
int3
das
jp
cmp
or
xor
sbb
movsl
fs
fsubrs
pop
pop
dec
sub
sbb
arpl
xor
enter
loop
inc
jnp
xchg
sub
in
cmp
xchg
out
pop
and
cmp
aad
outsl
or
je
in
ret
lahf
je
lds
sub
sub
icebp
or
mov
jno
and
jo
push
mov
pop
mov
jno
insl
jns
or
xorb
hlt
mov
cltd
jmp
lds
outsl
or
adc
mov
and
cmp
in
mov
mov
mov
addb
fiaddl
xlat
jnp
inc
jge
adc
inc
mov
test
sub
test
mov
mov
push
ret
std
fmulp
xor
test
fstl
je
cmc
fwait
cld
pop
jb
adc
sbb
out
push
jae
inc
cli
aam
adc
filds
push
popf
add
jp
fwait
loope
sub
bound
adc
cs
or
xor
xor
adc
xchg
push
pusha
xlat
sbb
ret
in
popa
jae
into
adc
mov
insb
clc
ret
movsb
negl
sub
notb
mov
test
mov
jae
ss
cmp
xlat
mov
outsl
jnp
adc
insb
cmpsb
stos
xchg
fld
pop
xor
cmp
out
sar
clc
sub
in
xor
fdivrs
dec
pop
push
or
pop
jge
std
xchg
sbb
addr16
mov
xchg
xor
or
loopne
test
mov
sub
jnp
gs
ljmp
mov
push
inc
call
push
rclb
mov
shrb
inc
xor
jo
inc
aas
or
imul
jp
icebp
aam
xor
push
inc
test
in
jae
xor
or
repnz
xchg
jl
mov
stc
sbb
mov
test
sub
xlat
mov
push
mov
fiaddl
fdiv
xchg
xor
and
inc
xchg
lods
fldenv
push
xchg
inc
loop
shlb
jp
sub
mov
test
inc
stos
jbe
cmp
mov
fwait
sub
sub
ret
in
jecxz
push
cmp
lret
stc
ror
les
roll
or
popf
sub
sbb
push
or
add
out
lcall
inc
insl
jl
dec
stos
nop
pop
stos
jnp
mov
add
push
xchg
adc
out
imul
push
stos
in
mov
js
mov
cmp
xchg
push
sahf
pop
adc
xorb
imul
js
pop
loopne
xchg
rcrl
xchg
cld
cmp
jbe
sub
stos
lret
or
and
lods
cwtl
js
dec
in
ja
es
mov
sbb
shr
xchg
je
cmp
mov
imul
push
movsl
mov
popf
shrb
in
test
xchg
mov
mov
imul
js
xchg
push
xchg
dec
mov
adc
add
mov
or
cmp
or
je
mov
lds
jl
and
xchg
jl
sbb
push
jg
and
out
fnsave
dec
in
fwait
enter
icebp
lret
inc
aad
jb
shlb
insl
mov
fisubl
leave
int
leave
das
adc
sub
cmp
stos
cmp
jb
out
xchg
out
pusha
loope
jns
leave
cmc
xor
addb
fmul
scas
push
adc
sub
adc
cmp
mov
pop
cwtl
fcompl
sub
and
popa
mov
iret
sub
jnp
sarb
or
jecxz
sub
pop
mov
xchg
out
jne
loope
scas
rorb
xor
in
fs
lock
mov
jnp
mov
test
xor
gs
cmp
sbb
or
pop
shrl
movhps
rol
clc
call
sbb
out
repnz
sub
in
ret
int
movups
or
arpl
bound
insl
outsl
lods
out
int3
loop
insb
scas
cmp
fcmovnbe
mov
aaa
xor
xchg
mul
mov
mov
mov
fistpl
xor
daa
mov
xchg
daa
lods
jle
push
xchg
arpl
push
in
pop
adc
add
icebp
mov
dec
rcrb
pusha
mov
sbb
pop
outsl
leave
mov
movsb
push
pop
js
push
mov
in
inc
daa
test
inc
or
es
dec
int
testl
insb
xchg
push
out
lds
add
rcll
and
bound
sub
mov
leave
ror
cli
mov
mov
dec
jg
das
inc
icebp
loop,pn
cld
loop
sub
lret
lds
xchg
fsts
push
mov
hlt
dec
mov
addl
mov
mov
test
loope
lods
sub
cmpb
outsl
insb
dec
cmp
or
cmpsl
ds
xor
iret
je,pt
lods
nop
xlat
jno
xchg
dec
add
cwtl
aad
and
repnz
cwtl
daa
inc
pop
adc
int3
in
xor
pop
aas
mov
lock
pop
pop
push
add
xor
dec
sbb
cmp
jo
jbe
add
add
add
pop
ja
aas
or
jp
in
jecxz
inc
lret
dec
cmpsb
lahf
in
sahf
test
mov
int3
das
add
shl
int
scas
inc
xlat
xor
test
je
adc
je
mov
xchg
leave
pop
imul
adc
in
mov
xor
dec
loop
and
add
add
rclb
add
xchg
cmp
adcb
push
lahf
jne
push
lds
fldpi
jmp
out
mov
mov
jnp
mov
test
in
sbb
sub
popf
jge
out
mov
mov
shl
mov
andb
loop
ss
shrl
push
push
ja
xor
mov
fsub
and
mov
xchg
in
mov
pop
cmp
jne
int3
mov
mov
inc
lock
pop
add
pop
inc
call
pop
cld
leave
xchg
stc
add
fistl
mov
dec
xor
cmp
mov
mov
jns
xchg
push
pop
repz
push
or
mov
adc
lcall
adc
shlb
rcrl
xor
test
dec
add
mov
sub
cmp
jg
pop
dec
arpl
mov
mov
sbb
jp
sub
fistps
dec
push
test
adc
dec
clc
sub
sub
and
cld
jno
xchg
fbld
aas
push
push
add
sbb
js
jecxz
mov
dec
and
ret
xlat
inc
push
mov
sbb
test
outsb
jnp
cltd
dec
xor
dec
out
or
mov
mov
mov
addr16
adc
or
es
xor
mov
ret
in
loop
sbb
push
arpl
scas
add
movsb
push
out
test
ss
outsb
fcmovb
inc
jmp
pop
in
pop
jo
jb
insl
lock
xchg
xorl
pop
add
jge
sbb
or
push
in
sarb
lods
movsl
rcrl
lcall
lods
and
pop
aas
cs
mov
out
mov
iret
repz
jb
insb
cmp
mov
movb
test
jo
jg
inc
lcall
xchg
and
movsb
xchg
wbinvd
mov
out
or
dec
enter
mov
mov
inc
push
dec
lret
ficoms
xchg
popf
test
sbbb
int
dec
pop
movsl
sbb
jb
push
orb
inc
cmp
jae
mov
gs
and
lahf
icebp
mov
sbb
cli
movsl
xchg
sbb
mov
sub
imul
rolb
movsl
add
xor
sbb
insl
not
mov
stos
mov
cli
sarb
imul
xchg
adc
cmpsb
filds
and
inc
je
cltd
sub
inc
shlb
orb
mov
out
imul
je
sbb
xchg
pusha
hlt
fs
add
movsb
pop
lds
aad
add
out
es
xchg
fldcw
or
fistpll
call
sbb
jmp
ror
hlt
or
adc
adc
and
imul
rep
in
add
sbb
jmp
bound
pop
cmp
mov
lcall
or
mov
and
push
arpl
inc
mov
mov
push
enter
lcall
dec
in
stc
or
mov
mov
xchg
pop
stos
out
xchg
push
pusha
mov
test
cmp
sarl
push
sub
in
xor
add
bound
sti
imul
movsl
iret
test
paddd
cld
inc
sti
push
cs
shl
loopne
cld
dec
in
and
outsb
add
das
popf
inc
imul
leave
cmp
outsl
xchg
adcb
pop
mov
mov
lds
aam
lret
fsubs
lds
push
ror
cmpsl
popa
rcll
icebp
push
pop
call
or
nop
xor
rcpps
jmp
xchg
sbb
aaa
mov
mov
out
scas
or
xor
js
or
notl
pushl
iret
ret
or
pop
pop
ret
mov
jle
dec
jmp
sbb
insb
push
jge
cltd
pop
cwtl
lock
cmp
scas
mov
addl
and
jmp
test
xor
cmp
cmpsl
fstps
icebp
mov
sbbb
xor
fwait
mov
scas
xchg
mov
test
dec
pop
icebp
mov
stos
adc
or
les
stc
dec
sbb
push
push
jp
inc
mov
and
sub
jecxz
ret
cmp
inc
popf
cmpb
pop
xchg
sbb
dec
jge
in
add
cmp
daa
ja
mov
test
mov
insl
iret
adc
cltd
mov
or
add
lret
sub
cmp
push
lea
or
jbe
aas
rclb
and
jl
or
adc
jl
cmpsb
mov
out
xor
out
cmp
dec
mov
test
xor
add
ret
imul
out
leave
inc
sub
into
pop
inc
sbb
cmp
push
xchg
mov
rcrl
and
and
mov
xor
scas
clc
je
mov
das
outsb
addb
adc
jecxz
ds
mov
outsb
popa
in
sbbb
lds
ljmp
inc
test
inc
aas
in
dec
mov
cmp
mov
cmp
out
les
in
out
rclb
push
js
mov
sti
into
imul
or
pusha
lods
and
sub
out
cltd
hlt
cs
nop
jp
mov
ja
in
add
add
sub
cmpsb
mov
pop
cmpsl
mov
sbb
insl
dec
push
pop
jg
es
addr16
loop
inc
or
adc
pop
pcmpeqb
pusha
inc
sarb
mov
jg
sbb
mov
dec
jbe
cmpsl
stos
add
repnz
in
sti
adc
xchg
test
cld
ss
dec
sahf
inc
dec
and
scas
sub
cltd
orb
fcoml
mov
fs
hlt
push
cmpsl
mov
out
outsb
roll
aas
or
or
icebp
ja
and
pop
and
lret
or
out
aad
nop
jle
mov
out
mov
and
scas
mov
rcr
pushw
push
dec
dec
cld
mov
movsb
insl
add
ret
add
cmpsl
enter
hlt
je
popa
cs
xor
test
jge
mov
imul
push
outsl
out
test
clc
dec
js
push
jge
jge
gs
cmp
jno
adc
test
mov
mov
icebp
mov
aas
cmp
xor
jae
movsl
push
push
data16
dec
mov
into
add
icebp
or
ds
insl
and
sahf
aam
rorl
sub
loope
mov
lret
adc
mov
test
inc
jo
push
add
stos
andl
ss
cmc
xor
mov
pushf
lcall
scas
mov
ds
enter
inc
pop
mov
cmp
pushf
daa
dec
sbb
cmpb
push
nop
sbb
xchg
hlt
fistl
stos
mov
xchg
pop
xchg
sub
push
jnp
mov
dec
fcomps
push
pusha
add
xor
jo
insb
lcall
or
gs
sub
rorb
push
jge
inc
aas
cmp
push
mov
sbb
mov
stos
mov
repz
pop
pop
xlat
push
mov
in
jl
loope
ja
sar
jge
jp
fmulp
add
mov
mov
je
and
lret
fidivl
fistpl
cmc
xchg
jae
pop
in
push
inc
jmp
js
push
lea
inc
aas
hlt
xor
adc
mov
inc
sub
pop
cmpsb
jmp
in
pop
pop
push
sub
ds
adc
inc
cmp
or
cmp
lcall
dec
adc
lret
mov
data16
mov
add
in
fldenv
add
test
lret
movsl
cmp
jbe
sub
arpl
jecxz
inc
or
and
sub
sub
out
ss
inc
in
stos
xor
mov
or
imul
les
repnz
xchg
mov
lods
adc
icebp
xlat
fstl
or
push
mov
lock
push
enter
push
mov
mov
xchg
jo
push
stos
jg
sub
pop
xchg
xchg
lea
pop
popf
loopne
inc
and
insb
imul
push
add
out
aaa
call
cmp
xor
jle
adc
insb
iret
loopne
ret
jle
stc
rcrb
xor
xchg
js
add
lods
ljmp
xchg
enter
inc
mov
mov
pop
dec
in
push
loopne
bound
aas
dec
fidivl
negb
xchg
pop
dec
movsl
sbb
lock
ljmp
dec
cmpsb
ret
inc
fldcw
dec
mov
idiv
je
dec
add
fs
adc
loopne
dec
add
mov
jge
jb
push
or
pusha
mov
addl
xor
mov
cmp
lock
dec
jns
movsl
in
sub
test
lret
jns
outsb
cmp
pop
xchg
cmpsl
mov
mov
scas
dec
mov
sub
icebp
out
cmpsl
cmc
sbbb
xchg
dec
mov
dec
mov
mov
add
icebp
les
arpl
ds
test
xchg
cmp
iret
cli
outsl
inc
push
rol
cmp
mov
mov
dec
inc
mov
test
add
in
shll
clc
out
or
pop
cs
xor
cmp
cltd
add
stos
mov
lea
inc
test
mov
mov
ficoms
inc
fisttpll
push
daa
ljmp
pop
push
iret
jg
inc
fldcw
xchg
sub
dec
pop
dec
push
out
in
push
sub
mov
jns
cmp
mov
inc
enter
pop
jmp
adc
stos
mov
or
aad
pop
push
cmpsb
mov
mov
jnp
mov
notl
jp
xchg
mov
sti
push
fiadds
divl
mov
or
xchg
dec
out
loop
ds
hlt
add
negb
sub
jg
fwait
mov
dec
push
push
pop
push
shll
jbe
test
mov
ljmp
lret
inc
mov
push
lahf
in
jne
pusha
ret
lahf
jb
lcall
sub
mov
pusha
mov
ljmp
dec
lahf
push
dec
int
push
dec
add
mov
ljmp
xor
adc
xchg
pop
sub
and
xchg
jg
test
lcall
mov
push
addr16
in
sbbl
fildll
adc
in
movsl
xchg
cmp
mov
jmp
xchg
sar
cs
push
fdivs
test
and
outsb
jp
testl
negb
or
sub
cmp
push
lahf
rorl
add
and
adc
test
mov
dec
xor
fneni(8087
ds
mov
add
roll
dec
mov
dec
dec
loope
pusha
out
mov
add
dec
sub
mov
push
cli
inc
inc
lods
cmpsb
push
adc
lcall
jmp
pop
sbb
adcl
stc
pop
orl
dec
dec
shll
adcl
fldl2t
lcall
push
and
test
enter
sti
aaa
dec
adc
dec
adc
popa
xchg
int
test
arpl
call
and
gs
mov
cmc
xor
cmc
sbb
aam
and
movsb
ret
jle
sub
test
das
jle
cmpsl
push
sti
or
mov
sub
sbb
pusha
push
insb
lods
movsl
fdivrs
lock
pop
popl
fimuls
dec
xchg
inc
and
cmp
xchg
add
mov
push
fwait
mov
rcll
and
xchg
into
fcomps
sub
int
iret
xor
sbb
pushf
ss
dec
mov
cmpl
iret
push
pushf
fldt
into
xlat
inc
dec
cli
lods
fidivrs
jge
dec
lock
movsl
loop
ja
test
mov
icebp
lret
jmp
mov
jl
sub
dec
xchg
push
mov
shld
scas
add
cld
test
js
loopne
cmp
sbb
stos
xlat
rcrb
sub
cmp
mov
jb
out
mov
cltd
pop
pop
and
dec
ljmp
imul
jecxz
jo
sbb
push
push
ficomps
fprem
cli
dec
je
lret
pop
fidivrl
push
lea
pusha
inc
mov
les
fsubl
iret
sbb
mov
iret
mov
mov
mov
push
adc
adc
bound
xchg
push
inc
arpl
out
jmp
rcr
add
add
gs
cmp
lret
mulb
push
dec
loopne
fcoml
mov
mov
jle,pt
dec
lcall
sbb
jno
lahf
ja
xchg
out
jb
pop
je
rclb
insl
mov
les
or
mov
add
fdivrp
xor
sti
mov
int3
inc
sub
je
push
mov
xor
mov
imul
inc
imul
push
mov
inc
inc
aas
push
sbb
mov
jg
pop
dec
enter
mov
sahf
lods
jno
jo
xor
arpl
adc
loop
jno
add
not
insb
and
inc
jmp
jnp
mov
inc
stos
je
stc
rorb
jbe
push
mov
or
dec
xchg
cmp
pop
movl
jmp
pop
mov
scas
or
xor
inc
insl
leave
or
mov
mov
call
pop
sub
imul
out
jne
add
pop
add
out
sbbl
insb
fmull
in
adc
pop
pop
lea
hlt
inc
cmpsb
mov
push
aas
test
out
xor
loop
mov
mov
mov
or
dec
loope
and
mov
or
es
scas
shrb
sub
adc
sbb
jbe
mov
cmp
sub
loop
inc
jae
inc
loop
dec
mov
push
leave
xchg
mov
push
out
loope
fidivrl
enter
std
jle
ds
and
or
and
nop
mov
mov
ret
pop
stos
xor
cwtl
test
inc
adcb
push
push
xchg
cmpsb
add
aas
lods
add
xchg
subl
int
sub
in
addl
out
rorb
xchg
test
sub
jge
pushf
sbb
int3
sbb
jno
mov
daa
mov
scas
aas
add
in
mov
sahf
int3
pop
add
add
mov
adc
cmp
rcr
pop
mov
xorl
les
fistpl
cmpsl
mov
push
inc
pop
ljmp
fildll
mov
inc
cli
ja
out
adc
std
int3
cmp
jb
add
mov
imul
in
add
lods
das
cld
insb
add
inc
fwait
ret
repnz
or
gs
mov
ljmp
fcmovnb
mov
jge
xor
ja
cwtl
push
test
cmp
jl
adc
add
inc
jge
push
xchg
mov
push
fdivs
mov
loope
add
sbb
push
mov
xchg
mov
push
mov
sub
and
xchg
mov
and
mov
xchg
into
loop
mov
xor
pop
push
lahf
insl
das
in
push
sbb
jle
xchg
mov
and
cmp
adc
sub
push
lcall
nop
filds
int
outsl
outsb
or
sbb
lret
sbb
pop
jne
rclb
jbe
dec
daa
push
mov
mov
and
stos
jno
testb
push
into
int
pop
stc
test
mov
out
push
inc
mov
pop
movl
mov
jno
outsl
or
xchg
sub
and
movsb
sahf
mov
add
adc
jle
test
roll
fwait
mov
xor
xchg
or
mov
mov
fsts
and
dec
push
popf
dec
ja
mov
rorl
mov
pop
jne
pop
or
mov
mov
cmp
or
fisttpl
inc
jg
and
in
pop
mov
xor
into
xchg
int3
popf
cmp
or
clc
dec
dec
in
repnz
aaa
sahf
dec
inc
inc
mulb
sub
push
adc
rorl
mov
lea
lds
xchg
xor
adc
dec
mov
or
mov
jp
push
push
insl
out
arpl
push
fisubs
mov
cmpsb
inc
and
iret
mov
or
scas
mov
pop
xor
dec
cmp
icebp
push
mov
xor
jno
and
mov
rolb
mov
sub
pop
fidivrs
sub
lea
je
mov
in
test
jno
leave
xor
ja
ss
mov
mov
or
mov
adc
mov
mov
xor
xchg
imul
shrl
insl
rolb
adc
call
in
mov
in
jno
mov
les
sub
mov
or
mov
adc
jmp
and
pop
mov
cmp
sbb
fldenv
xchg
jb
sub
and
dec
repz
mov
sub
xchg
out
pushf
gs
out
popl
imul
shl
in
test
inc
mov
pop
and
imulb
inc
icebp
and
or
lcall
movsl
jnp
lods
mov
jb
xor
insl
jae
in
push
mov
ds
gs
cmp
jmp
shll
lock
pop
push
and
fnstenv
outsl
mov
fs
and
in
sbbl
clc
dec
call
addb
or
pop
mov
sub
loope
popf
cmp
push
push
mov
into
rcl
push
hlt
inc
sub
jne
lods
pop
jbe
mov
dec
les
movsb
mov
mov
inc
into
cmpsl
push
lcallw
add
je
shl
lock
push
pop
sbb
sub
mov
cmp
cmp
enter
aad
daa
sub
fistps
jbe
jbe
hlt
dec
out
and
push
sbb
test
cmc
cmc
pop
pop
fldt
lock
cmpsl
add
sbb
fistpl
jmp
addr16
je
add
cmp
in
mov
sbb
mov
call
out
subl
add
mov
add
cmp
fidivl
cmp
dec
rol
int3
stos
pop
pop
and
fistps
stos
jl
dec
cmpsb
subl
inc
lock
inc
pop
movsb
les
mov
hlt
jle
cmp
es
out
pop
pop
cmp
push
inc
or
push
or
pop
in
xchg
inc
loope
stc
lret
sbb
cmp
lcall
pop
mov
lret
sti
test
adc
mov
je
mov
das
dec
leave
arpl
jg
lock
lds
xchg
pop
insb
imul
adc
mov
add
lcall
orl
xchg
pop
xor
or
ljmp
loopne
push
je
sub
inc
stos
cmp
cld
imul
dec
popf
push
dec
push
lds
aam
adc
je
addb
sbb
cmp
addr16
sbb
mov
jp
pop
dec
jg
ss
pop
fnstenv
dec
andl
jo
xor
leave
jge
cmc
mov
inc
scas
pop
pop
cltd
fldt
imul
mov
mov
lock
mov
jmp
xchg
mov
mov
sahf
lret
aam
sahf
inc
repz
jmp
stos
addl
clc
insl
ret
dec
lret
and
mov
xor
xorb
cwtl
mov
stos
sbb
push
jo
adc
fidivs
mov
dec
add
xor
xor
jo
int
pop
std
test
loope
repnz
in
aaa
pop
dec
pop
movsl
cmpsb
mov
mov
cmp
pop
pop
mov
sub
push
and
ds
sbb
call
xor
fsubrs
loop
mov
shll
sbb
xchg
into
in
mull
into
int3
sbb
scas
add
out
les
add
insl
dec
rcl
getsec
outsl
adc
aaa
xchg
jp
sbb
mov
ficomps
push
in
jno
xchg
ss
push
mov
cltd
pop
in
cltd
leave
and
mov
jo
jae
stos
cmp
fnstsw
pusha
xlat
mov
ja
inc
icebp
icebp
sahf
ret
or
xchg
mov
sbb
or
sub
sahf
cmp
adc
cmp
dec
mov
les
pop
sbb
xchg
xor
fnstcw
das
daa
jg
xchg
xchg
pop
loope
push
fmuls
add
push
in
cmp
repnz
ret
push
dec
and
push
lods
or
clc
ja
inc
sarb
pop
mov
arpl
lret
jp
inc
rorb
and
iret
jb
inc
xor
push
jae
iret
cltd
imul
cld
pop
loopne
ret
lahf
jo
stos
mov
in
out
push
cmp
pushf
pop
ja
mov
test
movsl
sti
out
mov
inc
daa
jl
xchg
sbb
ret
and
imul
pop
dec
stos
mov
scas
lea
and
dec
and
arpl
cmpsb
leave
cmpsb
add
lods
push
mov
shr
xor
adc
jae
data16
jb
mov
dec
mov
sahf
mov
std
inc
add
dec
xor
and
sarl
push
jae
arpl
xchg
jp
add
pop
xchg
mov
lcall
push
push
mov
scas
fstl
mov
fisttps
xor
sbb
bound
lahf
jbe
imul
cmc
dec
pop
or
mov
push
ja
in
cmpsb
imull
and
out
push
je
jle
lods
rol
and
fcom
cmp
loop
sub
rorl
popa
add
fsubl
and
pop
fmul
sti
repnz
subl
mov
in
aam
xchg
mov
stos
in
iret
je
jno
xchg
popa
lock
cmp
push
xchg
fidivs
jno
mov
and
js
test
add
jb
outsb
stos
jg
xchg
jns
push
fdivrs
int3
mov
rcrb
mov
mov
loop
pop
out
das
lret
pop
rorl
ret
xchg
jmp
arpl
mov
stos
pop
mov
test
int
sti
loop
lcall
jo
mov
pop
pop
imul
xchg
popl
jno
lahf
sub
jns
pop
aad
xchg
bound
das
call
jge
sbb
sub
out
mov
out
xor
inc
push
xchg
mov
mov
xor
aaa
loope
stos
mov
fsubrl
mov
movsb
inc
je
imul
sbb
mov
ret
sbb
and
fs
fbld
xor
jp
pusha
xor
aam
pop
mov
mov
mov
xlat
lds
imul
jbe
fmull
jmp
fwait
inc
imul
sub
scas
or
push
mov
push
sbb
xchg
jmp
aas
dec
orl
cmp
arpl
leave
push
mov
xor
insl
out
loope
stc
mov
jo
push
aad
xor
sbb
sbb
and
sub
sbbl
push
push
ja
jmp
pop
cmpsb
imul
add
jno
adc
pop
stos
xorl
ffreep
inc
sti
dec
xchg
cmp
push
lea
daa
lock
cld
push
jp
inc
push
mov
sbb
cmp
cltd
setg
and
rsqrtps
std
sbb
scas
jae
add
adc
or
aaa
jg
mov
rcl
xchg
dec
fstl
add
pop
push
xor
pop
movsl
in
mov
xchg
mov
inc
lea
rorb
jnp
scas
cwtl
adcb
push
sub
sub
mov
jmp
push
insb
xchg
ret
insl
shrl
call
movsb
test
mov
adc
lds
ret
lock
testl
aaa
xchg
in
inc
mov
aaa
adc
filds
test
mov
jg
jb
adc
push
mov
mov
mull
fisubrl
mov
add
clc
and
jmp
data16
cwtl
adc
mov
sub
outsb
push
inc
lods
push
leave
cmp
fstps
clc
repnz
je
ss
mov
xchg
add
pop
mov
data16
pushl
jb
ss
adc
push
mov
push
fidivrl
pop
sub
stos
cmp
rolb
into
int3
enter
outsb
popw
fdivl
or
adc
jecxz
mov
pop
dec
iret
mov
mov
pop
sti
jge
jp
add
mov
mov
xor
adc
dec
bnd
enter
movsb
cmp
ficoml
dec
or
or
mov
cmp
movsb
fcmovne
popa
mov
rorb
dec
stos
inc
aad
std
inc
mov
setne
mov
scas
rolb
adc
and
mov
add
enter
in
jle
jg
adc
ficoml
jae
scas
movsl
lret
shl
mov
adcb
lahf
enter
jmp
shl
das
lock
in
xchg
xor
mov
pop
sbbb
xchg
dec
jge
sti
mov
xor
incl
shrl
inc
add
cmp
rcrb
xchg
push
mov
push
mov
mov
add
jnp
test
jl
addr16
mov
inc
inc
scas
cmp
or
xor
fcoml
xchg
cmpsl
arpl
into
mov
aas
mov
fimuls
xchg
rolb
xor
rcrb
out
xor
adc
lods
lcall
iret
inc
fisttpl
add
arpl
adc
xor
sub
fdivrs
cmp
sub
aas
add
mov
xchg
test
push
je
xchg
arpl
stos
jecxz
aam
or
cmp
cmp
inc
sahf
cmp
xchg
outsb
jo
and
mov
leave
cwtl
or
mov
movsl
xchg
int3
arpl
xchg
sbb
push
das
dec
cld
or
cmp
inc
inc
push
mov
inc
add
ja
or
insl
cmpsl
sbb
movsl
jb
pop
shlb
movsb
in
inc
pop
aaa
lea
fldcw
lahf
aas
push
and
xchg
or
sti
iret
adc
enter
sbb
adc
jg
fadd
adc
mov
sti
subb
pop
outsl
mov
or
and
mov
mov
and
jecxz
jnp
sti
rorb
jg
lahf
scas
sbb
xor
add
lds
lcall
lea
push
cmp
pop
outsl
stc
jno
mov
mov
push
out
lods
rol
out
xchg
xchg
xchg
aad
dec
icebp
lods
push
inc
dec
push
stos
xchg
cmp
push
in
rcr
aas
mov
cmp
sub
push
and
jecxz
mov
enter
lcall
enter
sub
pop
call
xchg
cs
adc
mov
and
jg
jge
dec
mov
test
in
insb
mov
jg
and
and
adc
out
xlat
push
stc
xchg
push
mov
inc
jp
popf
dec
shll
inc
fldl
dec
mov
cld
jecxz
lods
lods
adc
mov
push
fcomps
mov
pop
push
pop
orb
mov
add
push
jae
mull
cmp
cltd
arpl
movsb
inc
push
mov
in
xchg
das
cwtl
jecxz
daa
xchg
add
pop
xor
repz
xor
xor
in
decb
shr
add
aas
sarb
and
test
pop
mov
sub
jnp
jg
mov
ljmp
push
cli
inc
filds
pop
sub
and
divb
add
xor
xor
or
outsl
sub
mov
mov
mov
lret
leave
push
add
loope
xor
dec
sbb
in
mov
fs
popa
out
subb
ret
jecxz
add
and
pop
dec
fcoms
insb
jp
dec
add
xchg
inc
rcr
and
dec
cmp
cmovo
adc
inc
mov
or
adc
inc
or
ss
aas
stos
push
xchg
and
mov
test
xor
shrl
mov
push
mov
cld
fadds
add
xchg
lods
mov
arpl
aas
clc
jmp
xor
lret
ret
js
jl
or
adc
jg
frstor
and
in
push
mov
mov
dec
in
lret
cld
mov
xchg
movsb
rcl
vpmacsww
sarb
push
mov
lds
es
inc
mov
call
push
lods
dec
mov
push
add
cmp
repz
cmp
test
push
mov
sub
lahf
mov
inc
lods
add
fsubrs
fdivl
outsl
loope
testl
ss
and
out
jmp
dec
push
std
add
outsb
add
sbb
repz
jnp
sarl
bound
ljmp
or
scas
out
arpl
ret
arpl
in
inc
xor
add
pusha
lods
adc
mov
inc
scas
and
sbb
or
push
jbe
pop
es
jbe
cmp
cmc
addl
add
inc
lret
inc
mov
daa
dec
sbb
mov
sub
je
jns
sub
adc
loop
insl
not
xchg
jge
shlb
ss
icebp
adc
out
sbb
xchg
push
out
andl
nop
or
xchg
xchg
jo
fwait
and
aad
sbb
add
sub
cld
in
cmp
cwtl
xchg
jnp
inc
or
xchg
shlb
sub
push
fidivrl
mov
pop
loope
in
inc
mov
xchg
sbb
sahf
jb
lret
das
inc
push
push
sub
jmp
enter
mov
and
and
movsl
xor
inc
push
std
outsl
loope
push
pop
outsb
xchg
insl
fdivrs
pop
lahf
xor
mov
enter
inc
test
mull
test
sbb
xor
gs
fidivs
aaa
fcompl
dec
mov
dec
adc
mov
xlat
sub
rclb
push
sbb
insl
fsts
mov
mov
je
and
push
or
sbb
adc
dec
outsl
xor
loop
xor
fdivp
and
mov
jl,pn
out
mov
push
mov
sub
scas
add
test
sbb
pop
sub
outsl
dec
icebp
into
je
xchg
test
jmp
dec
jmp
lds
cld
push
or
call
pop
inc
out
jmp
arpl
fs
shr
std
push
push
inc
mov
rclb
lahf
mov
mov
repnz
ficoms
sbb
movsl
test
cltd
cltd
ja
ret
insb
push
insb
push
sub
mov
je
inc
and
test
in
or
pushf
outsb
mov
lods
or
nop
es
cmp
pop
jge
fiaddl
dec
cld
xorb
pop
jno
loop
movsl
ret
cmp
lahf
fs
cmpsb
cli
xor
pop
icebp
and
and
jo
xor
xchg
xor
or
sbb
pop
mov
mov
jnp
push
lahf
loopne
out
js
clc
insl
lret
push
inc
icebp
lcall
add
cmp
dec
popf
stc
shlb
je
add
js
ljmp
push
inc
lret
jo
cmp
sbb
xchg
jnp
ret
pop
mov
test
adc
lock
cs
aam
mov
imulb
inc
stos
hlt
xchg
lahf
stos
inc
popa
shl
adc
jb
stc
scas
pop
pop
or
push
inc
adc
pop
dec
repnz
inc
push
aaa
stos
insl
fwait
stc
lret
enter
mov
fistps
js
xchg
sbb
cmp
sbb
aam
xchg
mov
ljmp
inc
je
rcrb
sbb
in
shlb
fld
cmp
jp
jno
inc
push
jbe
cs
cmp
les
dec
lret
lea
sbb
clc
mov
sub
sbb
call
mov
dec
pop
sbbb
mov
mov
addl
add
lcall
dec
or
mov
nop
add
loop
dec
sub
cmpl
fbld
es
insb
insb
outsl
mov
xchg
cmp
mov
xor
sbb
scas
je
mov
mov
repz
push
out
xor
jbe
pop
xchg
shlb
mov
leave
arpl
pushf
sbb
mov
mov
mov
fwait
dec
jl
mov
and
test
sbb
xchg
mov
mov
cmp
fiadds
inc
cmp
and
lcall
adc
cwtl
mov
pop
sbbb
ret
rcrl
scas
cmp
adc
push
lcall
mov
add
inc
cvttps2pi
loop
shl
dec
cltd
js
mov
cmp
jmp
xor
mov
jmp
incb
iret
and
decl
cmp
rolb
push
dec
sbb
mov
mov
cmp
sbb
into
popf
and
mov
das
sbb
xor
push
mov
shlb
in
fidivl
fadds
sbb
push
and
lahf
js
mov
adc
fwait
stos
mov
js
inc
gs
cltd
pop
push
in
push
cmpsb
dec
in
sbbl
movsb
pop
fsubr
pop
pop
jecxz
push
mov
jns
xchg
adc
push
pushf
mov
inc
lahf
popw
push
aaa
or
sbb
xor
dec
mov
mov
inc
sti
movb
lea
movsb
les
inc
rclb
add
mov
push
push
packssdw
sbb
fidivrs
bswap
clc
movsl
icebp
js
test
xor
lahf
vshufpd
inc
sub
pop
xchg
cmp
lcall
jmp
sbb
push
adc
popf
pop
add
adc
cmpsb
inc
cld
mov
sub
adc
mov
adc
mov
cmp
clc
fs
add
jae
lea
push
push
inc
mov
mov
test
or
mov
dec
mov
in
sub
adc
push
enter
std
mov
sbb
mov
shll
lret
inc
je
jge
mov
test
daa
ja
das
push
out
push
push
push
sbb
je
add
mov
in
mov
and
or
int3
fdivr
enter
push
je
xchg
ljmp
xor
jnp
clc
cmp
and
lds
frstor
mov
push
push
gs
or
test
dec
outsl
adc
icebp
pop
or
divb
sahf
inc
pusha
mov
in
insb
mov
xor
loopne
xchg
or
sbb
daa
cmp
lods
les
mov
das
xchg
imul
adc
mov
cmp
or
jae
stc
rorl
in
arpl
call
adc
inc
xchg
das
sbb
push
or
lods
stos
or
push
orl
mov
mov
mov
out
or
pop
inc
iret
popa
mov
icebp
lret
inc
es
push
aam
mov
dec
loop
jb
jne
mov
les
rorl
sar
shr
icebp
push
hlt
notb
add
pop
fst
sub
mov
pop
aas
xchg
adc
test
jle
cwtl
push
icebp
int
sbb
movsb
and
lods
dec
mov
cmpsb
and
lret
clc
inc
in
inc
std
jae
into
add
push
shrl
push
or
lret
push
ljmp
cmp
lret
dec
sbb
cld
arpl
xchg
stc
and
pushf
add
push
dec
and
fstpl
les
mov
push
xor
pop
pop
xchg
test
push
imul
loope
jbe
cwtl
xor
sbb
pop
ljmp
mov
das
push
scas
or
mov
ljmp
xchg
js
cld
rorb
cmp
pop
iret
jg
addr16
mov
xchg
jle
mov
lcall
pop
push
mov
lods
pop
test
xchg
mov
xchg
ds
jbe
dec
jns
insl
aaa
fcomps
inc
test
imul
mov
inc
pop
or
movsl
sbb
mov
dec
pop
jae
sbb
push
ja
ds
in
sub
fildl
ret
pushf
mov
xor
adc
les
test
sub
test
frstor
jp
inc
xchg
movsl
imul
or
ss
and
lret
pop
cwtl
add
sub
cmpsl
and
adc
jecxz
mov
sbbl
jecxz
or
ss
add
mov
dec
cmp
pop
jp
sbb
and
cwtl
mov
fs
pop
pop
mov
mov
les
add
ficoms
fs
cmpsb
dec
out
aam
call
mov
mov
jg
push
pop
les
loop
push
movsl
mov
and
pop
inc
shl
xorb
xor
imull
inc
es
pushf
aam
pop
jns
test
mov
mov
fistps
subl
add
out
pusha
out
mov
cmp
inc
xchg
nop
movsl
mov
dec
add
sahf
nop
lods
sub
es
xor
xchg
lcall
lret
rclb
dec
jmp
test
or
mulb
pop
mov
mov
repz
pop
jp
dec
mov
mov
cli
fcmovnbe
into
sahf
dec
mov
cmp
loop
jmp
int3
xor
out
mov
inc
in
mov
pushf
imul
ret
fs
fsubr
bound
xchg
inc
push
xor
push
loopne
jo
pop
or
les
jl
fs
jl
stc
pop
filds
arpl
fimull
lret
pop
xchg
inc
xchg
pop
add
nop
cmp
cmc
jo
outsb
rcrl
cwtl
lods
fidivrs
mov
jp
daa
sahf
cmp
mov
addr16
add
in
stos
insb
cmpsl
out
inc
jnp
xchg
sub
sbb
pop
mov
jp
stos
xor
ja
icebp
cld
push
fmuls
insl
sub
sub
sub
xor
dec
jmp
lods
cmp
cld
add
xor
shrb
mov
jae
pushf
icebp
xor
fisubrl
sbb
mov
aam
dec
xchg
xor
ret
xchg
mov
sbb
lock
dec
leave
nop
and
fisubrl
pop
sub
ror
loopne
scas
adc
xchg
inc
sub
mov
or
pop
in
or
gs
pop
ficoml
mov
jae
xorb
xor
jp
push
lcall
aam
mov
ds
ret
or
icebp
std
lods
mov
inc
fisubrs
scas
punpckldq
ljmp
test
pop
xchg
fbstp
dec
adc
test
jno
jl
rcrb
dec
enter
push
repz
ja
hlt
leave
inc
xchg
call
pop
mov
divl
enter
std
mov
testl
or
xchg
jmp
and
dec
cmpl
pop
xchg
fcoml
js
and
bound
dec
push
dec
daa
push
pop
mov
mov
and
mov
and
mov
sub
mov
fldcw
repz
nop
xlat
pop
call
out
mov
js
ljmp
les
fnstenv
scas
mov
dec
inc
push
and
clc
cmpsb
add
sbb
push
stc
sub
bound
cmp
adc
int
pop
xchg
int3
imulb
add
lds
cmpsl
jnp
lcall
sub
sbb
test
fnstsw
jbe
push
lea
push
adc
xchg
jae
add
data16
add
sub
dec
add
imul
jmp
pushf
pop
and
inc
decl
cmp
cmp
in
outsb
inc
jp
add
sti
outsl
adc
outsb
cmpsl
imul
adc
pop
push
dec
mov
rcll
push
loope
xchg
ljmp
jmp
jecxz
mov
loope
pop
and
imul
addr16
filds
mov
jge
fildl
mov
notb
jo
mov
add
inc
fwait
dec
mov
lcall
int
inc
push
xchg
mov
push
das
repz
xchg
pop
lret
mov
sub
xchg
movsl
jae
jo
xchg
flds
mov
lock
or
ret
xchg
add
mov
daa
in
or
pop
cmp
subb
movsb
xor
xchg
das
or
and
ficoms
scas
cli
and
movsl
leave
inc
stos
sbb
inc
shll
mov
inc
mov
stos
and
dec
pop
mov
mov
mov
loopne
int3
insl
int3
sbb
and
and
inc
dec
pop
in
imul
xor
out
mov
aad
dec
adc
push
lcall
popf
popf
mov
pop
add
negl
and
xchg
scas
in
in
js
push
stos
pop
orl
iret
cwtl
inc
push
dec
jae
inc
jns
add
xor
xor
pushf
cmp
mov
jno
fs
lods
jns
pop
jbe
daa
and
das
call
bound
jmp
xchg
shl
rclb
xor
cmp
mov
xchg
roll
sbb
stc
add
movsb
dec
jo
in
lahf
mov
leave
pop
nop
mov
fs
or
nop
cwtl
jl
repnz
cltd
jg
push
fdivl
das
push
mov
xchg
pop
inc
and
inc
adc
xor
es
adc
cmc
cmpb
int3
ret
rcrb
mov
mov
cld
push
and
xchg
mov
push
push
andb
mov
stc
sub
and
insl
jne
and
jmp
fwait
cmpsl
in
lock
ficomps
mov
aad
int3
sub
or
out
popa
insb
clc
cmpsb
adc
mov
or
inc
jmp
mov
push
cmc
int
cli
sub
xlat
cwtl
popf
lret
cmpsb
cs
sub
dec
fsubl
mov
cmpsb
lods
js
rep
sbb
or
and
mov
add
iret
add
imulb
jmp
in
addr16
add
or
repz
xchg
frstor
sub
or
jmp
pop
out
mov
sub
sub
jmp
lcall
xchg
je
mov
mov
imul
mov
out
popa
out
push
imul
call
and
into
clc
mov
adc
icebp
int
fldl
mov
lds
push
iret
xor
add
sbb
push
pop
xor
xor
push
or
cmp
fstl
out
xchg
cmp
jno
movsb
jo
jbe
or
sub
pop
sbb
cs
addr16
cltd
sti
cltd
repnz
xchg
movsb
adc
in
mov
jo
and
movsb
mov
xor
aaa
loop
popa
lds
test
stos
and
xchg
ss
roll
sub
in
aas
mov
and
gs
xchg
and
jo
fs
and
scas
lock
ja
sbb
mov
cwtl
inc
loope
mov
dec
cs
stc
call
ret
scas
lock
xchg
imul
lock
rolb
mov
cwtl
pop
push
fcoml
lock
popf
or
mov
int3
push
dec
inc
dec
cmpsb
js
xchg
int
dec
call
mov
test
xchg
cmp
sub
push
jecxz
fisubrs
and
add
pop
bound
mov
shll
insb
mov
jmp
xchg
xor
pop
cmp
data16
xchg
sub
cs
push
out
in
pop
fdivl
mov
ficomps
xor
sub
cmp
addl
enter
or
jmp
ret
fisttpl
jle
inc
mov
out
out
dec
fsubp
hlt
dec
outsb
in
cmpsl
enter
sahf
ret
leave
movsb
mulb
loopne
sbb
xor
ret
sahf
xchg
int3
hlt
mov
add
daa
pop
fidivl
aas
fdivrs
out
repnz
push
cld
arpl
xchg
orl
scas
mov
add
mov
mov
hlt
iret
ljmp
sbb
xchg
xor
push
imul
cmc
jo
inc
stos
rcr
cmp
or
xchg
out
add
out
sub
inc
lahf
cwtl
imul
inc
cltd
inc
pop
mov
jmp
aam
push
add
repnz
add
scas
pop
jno
cmpsl
popl
sub
push
mov
mov
and
stc
cmp
sbbl
adc
stc
mov
out
mov
push
je
pop
sbb
jmp
add
adc
cmp
repnz
push
mov
pop
ret
mov
outsl
xchg
popa
dec
leave
mov
mov
jge
test
stos
loope
or
rcl
mov
mov
clc
and
mov
xlat
pop
movb
fimull
jns
insl
push
or
adc
outsl
daa
js
shrl
pop
add
adc
daa
mov
or
pop
nop
cmp
jmp
jge
pop
inc
das
push
cmp
mov
daa
xchg
loope
sbb
and
add
in
outsb
add
pop
fsin
loop
mov
mov
lea
sub
jl
imul
rcrl
orb
ret
movsb
mov
pop
xchg
aam
call
pop
adc
out
sub
add
xchg
mov
jle
mov
cmp
add
or
aas
cmp
push
xor
out
stos
dec
xchg
les
loopne
cli
fdiv
scas
gs
aad
es
push
fldenv
jecxz
inc
dec
mov
adc
add
xchg
mov
test
jmp
push
mov
movsb
dec
pop
push
in
pusha
inc
out
jle
push
add
test
xchg
loop
or
pop
mov
or
or
aas
leave
outsl
mov
dec
and
xchg
mov
cmp
push
jb
imul
movsb
pop
mov
add
sub
add
dec
adc
ficomps
lahf
jle
mov
mov
xchg
clc
sarb
js
or
ljmp
dec
mov
jnp
shll
pushf
loop
pop
add
push
out
xor
jae
movsb
hlt
lahf
mov
and
es
popf
sbb
arpl
cmp
aam
mov
outsl
fisubl
daa
je
insl
cld
stc
sub
xchg
imul
fs
jae
xor
cmpsl
push
rorb
push
jnp
mov
ds
inc
and
xor
cmpsb
rcl
pop
rorb
push
cli
or
mov
sub
stos
push
jl
scas
imul
mov
cli
mov
mov
gs
mov
sbb
iret
popa
inc
jne
jmp
cmp
subl
lahf
jnp
push
ret
xor
stos
xor
cmp
outsl
xor
xchg
cwtl
inc
shrl
movsl
lods
notl
inc
cld
add
aad
enter
lret
sub
inc
jl
inc
mov
inc
cwtl
xchg
lahf
imul
mov
dec
pop
inc
xchg
push
xchg
dec
sbb
orb
pop
js
pop
das
mov
jecxz
xor
and
aaa
movsb
xor
sub
jmp
and
xchg
int3
clc
arpl
xchg
lods
jo
es
notb
push
pop
cld
je
stos
xchg
mov
ret
mov
jnp
lcall
out
mov
pop
cmp
add
lods
xchg
inc
add
mov
push
fsts
or
cmp
xchg
jbe
filds
mov
lds
xor
aad
lahf
aam
hlt
inc
test
cmc
mov
mov
lahf
inc
in
xor
push
mov
in
sbb
cmp
push
pop
inc
xlat
rol
cwtl
cmp
pop
or
dec
test
mov
cmp
xor
sub
mov
jp
aas
imul
test
pop
movl
daa
out
popf
fnsetpm(287
pop
jo
bound
sub
jnp
add
add
ss
jmp
inc
movsl
jnp
dec
scas
repz
rclb
sub
enter
arpl
movsl
jg
cmc
push
push
andb
mov
xchg
movsb
push
pop
sahf
cmp
jp
mull
mov
pop
movsl
pop
mov
jne
in
data16
push
mov
mov
fsts
test
imul
into
dec
pop
hlt
call
jp
add
jmp
add
sub
aam
xchg
rolb
fdivrl
cmp
xlat
pop
add
into
jl
jbe
rol
or
imulb
fidivrs
repnz
add
xor
xchg
icebp
adc
into
fstl
dec
push
shll
cmc
dec
xchg
pop
sbb
cld
mov
cmp
and
pop
loop
jae
sbb
int
xchg
add
jecxz
clc
dec
add
inc
push
fsub
rcll
jmp
das
dec
adc
popf
pop
stos
enter
fisttpl
push
mov
in
adc
cld
add
in
je
jns
mov
sbb
cwtl
sbb
sbb
jle
lds
ja
push
sbb
adc
lods
jb
add
icebp
pop
fistpll
out
int3
cmc
scas
sub
xlat
dec
cmp
cmp
cmp
in
mov
bound
xor
loop
mov
int3
add
adc
mov
mov
sub
inc
and
hlt
out
pop
push
out
lret
ffreep
jns
cwtl
mov
jae
mov
loopne
rcl
dec
lahf
xlat
negl
das
stc
loopne
outsb
aaa
mov
mov
mov
pusha
aaa
sbb
fidivrs
pop
jbe
out
lock
out
cmp
push
adc
jae
xlat
lret
and
push
mov
addl
add
mov
xbegin
xchg
lock
hlt
xchg
mov
mov
push
jnp
dec
nop
jo
dec
push
dec
retw
je
sbb
xchg
call
inc
lcall
repnz
sbb
es
idivl
jne
mov
cmp
mov
cmpsb
clc
mov
mov
add
cmpsb
lods
xlat
aaa
mov
sbb
aad
lods
push
test
jne
sub
mov
out
add
out
fcmovb
imull
shlb
in
shl
enter
in
dec
outsb
pop
into
lods
cld
stos
aaa
lcall
mov
pop
inc
into
mov
and
dec
imul
sub
push
shll
add
mov
shll
aad
dec
sub
jmp
jge
lret
pop
sbbb
sbb
mov
les
xor
or
ds
dec
inc
mov
sub
lret
mov
popf
push
cs
mov
mov
xchg
test
xor
and
dec
mov
dec
lcall
inc
add
int3
iret
mov
in
icebp
sub
std
mov
xchg
mov
mov
cmp
jbe
sbb
imul
outsl
dec
and
scas
repz
bound
fimuls
sbb
sbb
push
pusha
mov
lock
ret
and
jbe
jns
sub
xchg
mov
repnz
adc
push
ret
sti
fsubl
mov
jecxz
push
or
mov
outsw
jnp
lret
pop
jg,pt
testl
das
mov
push
pop
int3
int
pop
cmp
xchg
xchg
push
ja
pop
test
cmp
adc
pop
adc
add
leave
pop
pop
pop
lahf
jmp
pop
call
add
xchg
mov
mov
cwtl
push
inc
xor
lret
mov
mov
jecxz
xchg
mov
sub
pop
lret
inc
push
xchg
mov
int
and
mov
mov
pusha
sub
pop
lds
jne
add
push
rol
in
cmpsb
filds
xchg
cmp
aam
xchg
pop
fldl
popf
in
shrl
repnz
shll
inc
lcall
mov
movsb
cmpsl
jg
scas
gs
mov
mov
pop
scas
xchg
insb
pop
lcall
and
inc
inc
push
pushf
insl
scas
mov
adc
dec
jbe
mov
decl
lret
or
js
mov
inc
xchg
dec
mov
nop
push
fimuls
addb
sbb
push
scas
rorl
xor
xchg
jmp
xlat
jmp
jmp
loope
inc
loope
scas
mov
and
sti
and
cmpsb
imul
je
jle
mov
push
arpl
mov
mov
lret
shlb
test
push
xchg
pop
cwtl
ds
popa
xchg
adc
dec
lret
inc
js
mov
sub
imul
js
test
sbb
inc
inc
pusha
test
pop
sbb
in
addr16
movsl
xchg
xlat
dec
xor
orl
fstl
push
fnstcw
popa
push
mov
mov
fmul
in
and
jo
pop
pop
push
stos
pop
jo
push
insl
andl
test
int3
dec
cli
loopne
fsubrs
mov
pop
sbb
pop
cmp
shlb
arpl
cmp
bound
ss
xor
pop
loop
shll
in
fidivs
pop
insb
add
mov
ret
fbstp
mov
or
adc
ss
mov
xchg
mov
sbb
jo
jns
jb
fxch
push
cmp
jae
mov
or
sub
loope
cmp
dec
dec
fsubrs
inc
filds
out
cltd
mov
push
inc
outsb
and
cmp
sbb
or
fnstenv
xlat
pop
xor
dec
or
loopne
push
sub
sub
inc
mov
out
call
xchg
sbb
jmp
mov
insb
cmp
imul
push
call
or
adc
xchg
cmp
or
push
lret
adc
cmc
xor
push
mov
sub
push
popf
sar
jno
sbb
adc
fidivrl
cmp
sar
addl
push
sbb
adc
into
jp
mov
popa
js
adc
fimuls
std
pushf
pop
push
out
jne
popa
and
add
adc
lods
sti
cmp
nop
outsl
cmpsb
jecxz
leave
inc
mov
mov
inc
popf
maxps
inc
mov
mov
inc
mov
cmp
sti
mov
fbstp
mov
cmp
insb
mov
xor
lea
xchg
lock
dec
cmp
lret
lret
or
mov
out
mov
xor
jb
push
aad
mov
fwait
call
arpl
or
sub
aad
cmc
je
nop
mov
shlb
leave
movl
lcall
add
inc
jmp
pop
xor
sub
push
lret
dec
orl
jbe
in
add
decl
xor
mov
jmp
emms
rcrl
movsb
adcl
out
dec
daa
dec
xor
sti
stc
clc
cmpsb
and
push
out
int3
mov
add
jbe
sbb
xor
mov
shl
lock
dec
aam
push
cmp
sbb
test
rcl
pop
sub
push
push
shll
adc
jo
movsl
pop
sbb
jg
sub
jl
jne
push
add
addb
and
jl
cmp
adc
xchg
stc
or
push
fucomip
cmpsb
sub
mov
aaa
scas
sbb
gs
mov
addl
sbb
xor
por
out
pop
dec
repnz
xchg
subb
mov
dec
lea
test
jg
inc
sub
aam
imul
inc
pusha
mov
imul
mov
sub
outsl
pop
or
js
movsb
imul
subl
xchg
cwtl
loopne
jecxz
or
dec
pop
or
cld
fmuls
addb
push
int
add
mov
inc
push
scas
xor
pop
icebp
mov
sarl
jae
cmp
cltd
mov
push
mov
into
mov
lock
or
sbb
mov
fwait
movsb
sbb
iret
mov
xor
xor
push
jae
jbe
dec
imul
and
pop
leave
jns
sub
loopne
mov
imul
ja
push
mov
imul
cmp
xorl
out
push
push
sub
stos
iret
add
lods
mov
lods
add
xchg
test
gs
out
mov
lahf
and
cmp
and
pop
adc
and
mov
ds
mov
lcall
dec
loope
mov
mov
ss
aas
loopne
pop
clc
out
fidivrs
loopne
enter
mov
enter
das
and
mov
mov
sub
adc
hlt
add
outsl
pop
dec
sub
or
mov
in
xor
mov
add
mov
jo
notb
leave
lock
xchg
adc
mov
cmc
inc
adc
loopne
mov
jl
xlat
xor
mov
and
sbb
cs
inc
or
sub
in
inc
xor
test
or
or
stos
dec
sub
or
divb
pop
hlt
xchg
fiadds
test
sub
sub
imul
fildll
ljmp
lods
add
push
inc
mov
testl
inc
jbe
sbb
pushf
sahf
sbb
popa
into
insb
in
sbb
add
ja
or
ja
dec
jae
ja
aam
inc
mov
cmp
ds
lods
push
cmp
add
and
pop
sbb
rolb
mov
add
cmpsb
gs
cmovp
ficompl
fbstp
outsl
clc
sahf
cmpsb
inc
jae
jne
or
js
inc
int3
xlat
orl
cmpsb
pop
or
mov
fcomps
jge
leave
cmpsl
adc
loopne
or
out
push
pop
or
push
sbb
pop
jae
lea
test
clc
mov
mov
cli
mov
mov
adc
aad
fstpt
lret
inc
mov
and
aas
test
mov
push
into
int
ja
push
ss
iret
jns
sbb
push
xor
xchg
adc
sub
xor
xchg
movsb
cmc
call
mov
xor
mov
add
lcall
outsl
out
xchg
xor
idivb
fsts
fcomi
xor
cld
jmp
mov
lret
jle
jmp
lock
pop
cwtl
in
aad
dec
test
mov
dec
cmp
mov
loope
push
xor
cmp
sub
ss
xor
lea
movsb
call
mov
minps
stos
xor
xor
jg
sub
sbb
mov
push
test
jns
gs
xor
mov
mov
xchg
nop
sbb
std
xchg
mov
popl
sub
cmp
jg
fs
popf
iret
jo
arpl
loop
cltd
fbld
or
push
into
out
leave
mov
mov
insb
cmc
and
cmpsw
fs
scas
sub
mov
dec
or
shrb
dec
sub
mov
js
imul
cmp
lea
fs
movsl
mov
roll
inc
sub
clc
sbb
daa
xor
push
out
movsl
fistpl
sbb
add
stc
cmp
sub
decl
fisubs
iret
arpl
bound
xchg
jne
cwtl
sbb
lret
sub
stos
addr16
add
adc
rorb
pop
leave
gs
rcr
pop
mov
inc
stc
fucomp
mov
push
rorl
dec
mov
cli
jns
ja
in
xchg
cltd
mov
cs
rcr
dec
xchg
or
adc
mov
mov
add
dec
jp
jne
xchg
push
push
outsb
or
inc
fisubl
js
mov
test
outsb
imul
cmp
adc
or
outsl
jl
imul
ja,pn
and
xchg
out
imul
repnz
jns
xchg
mov
or
xchg
shrl
adc
in
add
insl
cmp
or
pop
xchg
hlt
lcall
aaa
xchg
gs
add
sbb
mov
adc
rcr
sbb
jl
or
lea
addr16
mov
mov
out
fldcw
test
roll
add
fidivrs
cli
sbb
or
xchg
dec
add
xchg
inc
add
les
xor
mov
sub
cmpsl
cmp
mov
jo
insb
sbb
push
xchg
pop
jno
push
ljmp
add
cmp
xchg
dec
lods
mov
xchg
xchg
xorl
mov
popf
pop
jle
jg
movsl
in
cmp
int3
dec
jno
test
push
mov
mov
arpl
sbb
scas
jmp
jo
test
shrl
mov
out
pop
scas
push
sbb
dec
sbb
iret
in
push
add
mov
int3
lret
xchg
lods
movsb
jge
sbb
fwait
jp
cltd
mov
mov
sub
js
lahf
xchg
popf
std
pushf
and
push
lcall
aas
push
fwait
pop
mov
xor
inc
mov
cltd
fdivrl
and
push
imul
mov
pushf
sbb
xchg
xor
or
hlt
xor
jge
and
jg
xchg
repnz
dec
addr16
adc
mov
movsl
push
mov
mov
mov
into
shl
or
push
sbb
sub
inc
dec
adcl
clc
xor
pop
adc
pop
jns
insl
aam
fwait
imul
inc
and
aad
sahf
shlb
cmp
enter
dec
mov
inc
pop
js
inc
lock
mov
lret
push
or
add
inc
cmpsb
lods
xchg
sbb
mov
xor
adc
push
ja
cli
cld
stos
jb
aam
push
loopne
xrelease
mov
adc
xlat
pop
gs
dec
mov
loop
enter
aas
dec
mov
sub
das
into
push
adc
and
inc
adc
rolb
dec
or
cmc
or
ret
sbb
push
fnstenv
sub
mov
push
mov
sub
cmpsl
inc
jbe
mov
dec
jnp
imul
or
loopne
mov
popa
rorb
jp
add
in
pop
xchg
insb
push
lds
or
iret
std
xlat
add
bound
frstor
andb
or
mov
jmp
les
xlat
insb
dec
loope
addl
mov
add
scas
mov
movsl
mov
stc
xchg
xor
xchg
mov
bound
xchg
imul
insl
sub
clc
mov
stos
inc
clc
or
jbe
in
subl
add
adc
mov
lcall
int3
adc
lret
push
pop
cmp
mov
insl
or
fmuls
mov
pop
repz
pushf
sti
ljmp
and
fsubrs
arpl
or
les
adcl
orb
jle
ror
jae
mov
stc
xchg
pushl
dec
movsl
mov
fnstcw
cmc
fwait
sub
loope
jno
mov
scas
mov
lret
and
in
aam
sahf
xor
mov
lods
mov
dec
xor
mov
ret
pop
out
mov
or
pop
scas
push
imul
xor
cli
adc
lds
push
insl
mov
cmp
pop
xchg
shll
daa
imul
jg
mov
cmc
neg
cmp
stos
jmp
jb
mov
jne
xchg
fcomip
ljmp
daa
push
loope
cmp
aam
fdivs
aas
push
lahf
fistl
xchg
imul
push
sbb
dec
push
push
mov
lods
pop
jmp
sbb
jmp
icebp
add
pop
imul
fdiv
jmp
and
sbb
loopne
or
jo
mov
adc
and
push
lods
loope
mov
xchg
add
test
push
into
cmp
loopne
push
cmp
lcall
mov
enter
cwtl
cmp
fs
push
arpl
dec
and
stc
push
scas
xor
lret
dec
xor
and
outsl
fisubrs
pop
pop
add
cmp
imul
std
stos
fldt
xor
fldcw
loop
and
cmp
add
lock
lahf
clc
xor
sahf
enter
and
xchg
add
inc
lret
nop
rcll
xchg
jae
imull
repz
jg
inc
xchg
or
inc
lods
inc
xchg
cmp
scas
sub
xchg
ljmp
mov
out
es
lods
rep
inc
xchg
pop
daa
shll
mov
and
add
cmpsl
icebp
nop
call
fdiv
in
mov
mov
subl
fidivrs
xor
ljmp
fsubs
pusha
inc
push
dec
fcoml
aaa
add
insb
movsb
fs
add
mov
push
push
dec
aam
pop
and
roll
stc
bnd
sbb
jle
push
mov
cs
int
and
pop
ret
in
test
repz
ds
mov
xchg
das
jns
xchg
inc
inc
jg
insb
inc
and
pop
add
xor
dec
aaa
leave
cvttps2pi
cmp
mov
test
lret
into
aas
xchg
pop
cmp
xchg
scas
jmp
dec
sub
adc
fstpt
lock
stos
push
inc
mov
cmp
dec
cmpsl
or
cs
xor
mov
repnz
shlb
mov
lds
loopne
pop
push
test
cmp
push
push
xchg
inc
out
dec
jae
mov
jbe
lret
xchg
sbb
enter
cmp
sbb
xor
cmpsb
mov
mov
stos
sbb
cmpsl
aaa
pop
cmp
insl
adc
pop
push
mov
inc
pop
popa
enter
out
sarl
test
scas
adc
xchg
cltd
loop
in
in
les
jb
push
popa
xchg
xor
shrb
mov
xchg
negl
mov
fildll
das
jmp
movl
cmp
xchg
or
es
add
int
push
jo
pop
dec
xchg
push
mov
sub
das
stc
mov
jl
filds
pop
leave
cmovg
ljmp
ficomps
push
js
and
inc
test
stos
ljmp
push
fidivrl
iret
mov
aad
ret
mov
addb
mov
adc
adc
push
lahf
cli
fwait
sti
sbb
push
nop
in
ret
jne
mov
mov
inc
jne
ret
push
pop
arpl
add
clc
jb
adc
cmp
mov
adc
pop
loopne
sub
in
xchg
shl
add
adc
and
das
dec
xlat
bound
add
js
xlat
adc
inc
iret
pop
xor
jge
into
sbbb
jne
xchg
xchg
xchg
insb
cmc
mov
sub
cmpsb
jg
xor
xchg
jmp
daa
push
or
adc
into
cltd
pop
pop
ljmp
sti
mov
test
inc
out
or
jo
hlt
outsb
cwtl
xchg
jnp
int
push
lahf
sbb
mov
sahf
movsb
mov
in
push
cmpsb
imul
push
mov
sub
push
sti
dec
cmp
push
aas
dec
or
pop
push
xchg
mov
shll
out
cwtl
xor
inc
sbb
and
stos
lret
in
or
cmc
testb
and
push
sbb
arpl
cmp
cmpb
inc
lea
jle
jnp
lret
push
add
dec
xor
stos
xor
cmpl
dec
shlb
cs
lcall
shlb
xor
push
std
arpl
fwait
test
jno
cmpsb
outsl
pop
inc
pop
fwait
lock
push
pop
push
cltd
and
mov
or
jp
and
lds
xchg
repnz
daa
cli
int3
repz
sub
test
je
or
push
and
in
sbb
jge
add
sub
xchg
imul
insb
and
adc
pop
fisttpl
test
daa
push
es
mov
inc
cli
jbe
daa
arpl
or
sub
mov
in
aaa
lret
pop
aaa
pushf
mov
decb
movsl
push
ljmp
and
fildl
popa
ffreep
dec
sbb
sbb
test
iret
out
cmpsb
sti
mov
mov
and
lods
lea
cwtl
test
add
cli
dec
sbb
and
dec
lock
jmp
hlt
in
in
pop
orb
shlb
mov
scas
mov
pop
jns
icebp
sub
mov
mov
and
sbbb
shlb
mov
cmp
dec
aas
adc
push
fstpl
adc
xchg
shrl
dec
jg
imul
pop
cmp
and
mov
push
out
aad
pusha
repnz
orb
jge
mov
insb
pop
test
pop
jne
adc
and
mov
sub
sub
enter
outsb
rcrl
pop
and
inc
out
xor
adcl
push
mov
cld
loope
pop
sbb
scas
test
mov
outsl
pop
popf
jb
mov
out
adc
jne
mov
test
push
in
xchg
out
notl
inc
xor
leave
ds
fsubs
pop
cmp
jb
pusha
loope
enter
jl
pop
hlt
mov
xor
bswap
dec
imul
mov
fisttpll
add
mov
outsb
cmp
jg
add
mov
pop
push
jo
mov
loopne
fldt
xchg
in
sti
dec
push
into
adc
loope
inc
insb
add
mov
outsl
out
insl
aas
xchg
inc
xor
xchg
push
dec
out
cs
xchg
mov
mov
mov
movsl
xchg
fs
out
mov
or
and
xor
outsb
mov
gs
shl
push
shlb
push
clc
mov
fistpll
ds
sti
data16
xor
cli
arpl
push
mov
ljmp
fdivs
clc
pop
sub
add
mov
jl
aas
pop
repnz
out
stc
loop
andl
bound
dec
icebp
mov
pop
push
test
add
out
movsb
inc
call
hlt
fidivrs
adc
mov
aaa
stos
or
lcall
inc
iret
sub
cmc
push
aaa
pushf
pop
xchg
push
scas
sub
push
xchg
cmpsb
daa
arpl
pop
jbe
in
mov
in
cmp
mov
dec
jle
jge
and
or
sahf
in
fistpll
lcall
sbb
adc
inc
shlb
ret
xchg
mov
sti
xchg
int3
jns
dec
fistps
push
mov
adc
jns
fildl
pusha
inc
outsl
shrl
filds
out
mov
out
dec
mov
xchg
mov
repnz
arpl
xor
push
mov
sbb
xchg
inc
lods
loop
mov
addb
cmpsl
leave
jge
pop
into
and
int3
mov
jg
or
jmp
sbb
xor
cmp
addr16
mov
aam
cmp
or
xor
dec
jle
mov
inc
mov
fisttpl
xchg
cld
mov
aaa
mov
scas
mov
inc
lods
jns
cmp
push
lods
in
dec
push
pop
mov
and
shrl
xlat
fsts
loopne
pop
adc
mov
dec
jne
add
shl
mov
mov
add
stos
mov
lahf
popf
shlb
gs
negl
outsl
loopne
xchg
idivb
sub
adc
lds
stos
sub
scas
popf
pop
jnp
jns
sbb
mov
pushf
fwait
js
iret
loopne
mov
push
mov
out
jne
pop
sbb
or
sbbb
pusha
mov
cli
mov
cmpsb
and
imul
mov
clc
xor
mov
push
mov
adc
in
lods
ds
sahf
mov
ret
insb
add
mov
std
push
pop
inc
fdivl
mov
mov
inc
jb
and
daa
leave
fildl
mov
scas
fidivs
mov
jp
mov
fcoms
jnp
imul
jecxz
dec
popf
out
lcall
lea
daa
ja
xchg
sahf
mov
arpl
inc
shrb
lcall
sub
pop
pop
mov
jno
in
int
out
push
iret
das
shll
xor
inc
dec
outsb
in
mov
ret
mov
fnstenv
push
je
test
jl
jge
cld
js
jns
out
cmpsl
adc
out
mov
enter
mov
mov
pop
or
sbb
fsubrs
or
mov
xchg
sbb
test
mov
jb
rcrl
mov
addb
fwait
daa
iret
daa
or
inc
xchg
mov
iret
sahf
mov
dec
rcrl
pop
mov
movsb
das
cmp
cmpsl
or
jge
fdivrs
addb
push
mov
insb
mov
xor
call
out
outsb
mov
mov
lea
mov
sub
mov
cmp
fldl
leave
mov
mov
add
xchg
in
int
mov
btc
jecxz
mov
xor
pop
jb
mov
hlt
test
icebp
jne
hlt
fstps
push
and
out
das
loop
iretw
dec
jp
cwtl
scas
pop
and
dec
aad
mov
lcall
popa
or
mov
addr16
pop
inc
pop
xchg
addr16
test
insl
mov
or
repnz
hlt
push
jecxz
cmp
cmp
xchg
icebp
mov
scas
outsl
xchg
test
stos
sbb
fsubrp
lahf
stos
cs
or
mov
or
xchg
mov
cmp
addl
ds
lret
in
insl
aas
cmc
jb
dec
fdivrl
mov
add
in
rcrl
pop
and
ljmp
mov
andl
test
xchg
rol
add
push
xchg
scas
std
lret
or
cs
adc
mov
mov
cs
mov
or
push
mov
sbb
cmp
js
mov
fdivl
mov
aad
out
cmpsb
mov
dec
fs
jnp
pop
xchg
int
inc
aam
movb
das
hlt
jmp
cmp
int
test
pushf
loopne
sbb
jo
dec
pop
sub
ret
ja
int3
sti
inc
fistpl
cmpsb
pushl
push
xlat
sub
jge
mov
sub
fdivr
and
lea
shrb
dec
mov
add
aas
xor
xor
push
xchg
pop
hlt
test
call
mov
mov
repz
mov
mov
iret
or
in
adc
xchg
jae
dec
jge
inc
sbb
ss
scas
in
rclb
in
int3
and
sti
mov
popa
jge
dec
es
sbb
cs
repz
sub
push
pop
cld
sub
push
pushf
cmp
popa
out
lret
mov
test
mov
mov
sub
sti
add
push
ja
pop
lods
xchg
add
mov
in
repz
sbb
pop
sti
outsb
cmpsb
lret
push
es
inc
jno
push
lds
push
lcall
call
pop
int
rorl
test
in
push
mov
inc
dec
sub
fldenv
xor
int3
sti
dec
or
push
loop
out
hlt
cs
in
js
inc
pop
jmp
cld
iret
cli
shll
xchg
div
adc
pop
xchg
sbb
xchg
loope
arpl
inc
adc
dec
and
les
mov
sub
mov
rcrl
cmp
test
adc
ljmp
decl
das
add
dec
iret
call
inc
pop
sub
fidivs
dec
or
jae
loop
xor
sarl
loope
mov
cwtl
xchg
or
pop
fs
loop
testb
out
daa
in
icebp
sub
mov
add
ss
or
orl
jp
jl
dec
into
adc
ja
pop
cmp
ficompl
and
fistpl
repz
xchg
dec
sub
cmp
mov
mov
cmpsb
int
fwait
push
clc
cmc
or
mov
push
das
mov
movsl
push
sbb
iret
sub
mov
xchg
cmp
loop
push
xor
inc
and
push
rol
mov
xchg
mov
rol
xor
mov
mov
sbbb
xchg
ldmxcsr
popf
ss
sbb
pop
outsl
sbb
in
call
cmp
stc
shl
in
popa
add
ret
and
xchg
lret
ss
pusha
divb
mov
push
mov
adc
outsl
test
or
xor
and
clc
dec
pop
jb
outsb
add
adc
cmp
sub
xchg
xor
rcrl
push
mov
stos
lret
mov
js
mov
test
cmc
xchg
movb
jo
pop
or
mov
sti
inc
mov
imul
pop
aaa
mov
xor
negl
or
or
cmpsb
sub
dec
loope
add
mov
stc
mov
push
movb
and
cwtl
add
aaa
scas
aad
insb
es
push
test
shl
imul
jns
sub
das
repnz
icebp
mov
sbb
fistl
movsb
test
sub
int3
cmp
lods
add
fsubrl
ss
stc
sbb
scas
cmp
mov
cmpsl
cmp
lahf
cmpsb
sarl
imul
flds
fsubrl
mov
pushfw
pushaw
test
insb
repz
pushf
fmul
in
aaa
clc
push
daa
mov
call
push
pop
in
adc
fdivrs
lds
test
pop
mov
mov
in
pop
dec
inc
ljmp
test
push
dec
mov
xchg
std
mov
sub
dec
decl
mov
lcall
sti
repz
test
sub
xchg
push
sahf
out
pop
andb
mov
push
enter
and
adc
mov
mov
pop
or
lods
dec
mov
lods
jmp
jb
pop
xor
dec
mov
ljmp
mov
in
and
or
pop
push
in
leave
add
cmc
xlat
enter
add
inc
lods
enter
fmul
pop
outsl
aad
out
sbb
popa
out
pusha
mov
xor
push
add
pop
sub
aas
jb
inc
mov
rcrl
jle
dec
das
xor
repnz
enter
xchg
ja
and
int
inc
push
loopne
cld
fucomp
cltd
xlat
xchg
loop
sub
test
and
inc
xlat
mov
add
dec
jbe
dec
push
in
xchg
nop
push
dec
aam
hlt
dec
and
std
and
pushf
insl
add
test
ret
dec
push
xchg
adc
movsb
loope
in
je
add
mov
xchg
xchg
rorb
pop
arpl
jl
jae
inc
mov
or
lods
and
loop
icebp
pop
cmpsl
add
nop
scas
pop
repz
mov
divl
cli
xlat
in
or
mov
adc
outsl
cmp
inc
adc
adc
sbb
lret
daa
mov
das
mov
mov
pop
jg
push
arpl
mov
stos
sbbb
xchg
lcall
jp
lods
enter
insb
int
je
jae
cmp
fwait
idivb
shll
fs
mov
in
test
sbb
ret
idivl
push
int
xchg
pusha
imul
jge
push
add
push
lds
dec
inc
pop
fbstp
cltd
pop
lahf
jae
xor
and
sub
outsb
movsb
out
jmp
push
push
xchg
sub
and
int3
jbe
mov
and
sti
outsl
push
insl
es
mov
add
and
mov
fisttpl
dec
xchg
cmpsl
or
add
sbb
xchg
xor
and
dec
stos
inc
mov
mov
or
pop
adc
je
ret
add
jns
jb
mov
mov
add
mov
add
pop
and
fdivrs
hlt
in
adc
divl
xor
rorb
arpl
in
dec
fs
push
xchg
mov
es
xchg
es
jo
flds
fwait
mov
sarl
cltd
imul
push
push
mov
icebp
dec
out
je
xchg
int
les
dec
les
xor
scas
or
sbb
loopne
dec
xchg
mov
fwait
ljmp
shl
pop
sbb
push
mov
cmp
int
fldenv
mov
add
pop
lret
lds
pop
jp
pop
dec
pop
ds
lret
jge
jb
xor
mov
pusha
jmp
jne
mov
mov
fidivs
test
mov
xor
adc
imul
jb
aaa
ds
xor
push
sub
mov
fsubrl
sbbl
adc
xchg
ljmp
in
dec
int
in
mov
cmp
les
jb
push
mov
push
xlat
insb
add
fsubp
rcll
and
cmpsb
lcall
lods
cmp
lfs
inc
cmpsb
jecxz
dec
xchg
je
jns
lock
push
mov
jg
gs
fidivrl
add
cmpsb
test
mov
dec
mov
test
leave
in
push
es
xchg
mov
xchg
sub
jnp
and
in
add
cmp
adc
fcmovb
lahf
lods
adc
push
xchg
into
push
and
fiadds
cld
adc
sub
push
or
add
sub
mov
js
mov
cmp
jno
out
ror
repnz
xor
cmc
xchg
xchg
cmp
push
push
or
xchg
int
jne
popa
push
jp
lea
scas
sbb
hlt
mov
pop
popf
pop
fiadds
push
cmp
ds
jl
imul
jle
adcb
add
push
mov
fadds
jbe
mov
fstl
lcall
and
sarb
fdivrs
out
fdivs
movsl
insl
add
ds
mov
mov
jne
enter
sub
mov
test
push
stos
jecxz
icebp
cmc
pushf
outsb
jnp
std
mov
out
es
cld
rcrb
mov
sub
push
ss
push
pop
sbb
push
movsb
lea
iret
push
and
jmp
fdivl
aad
addr16
cmpl
mov
loopne
sub
ror
lea
ja
sub
cmp
fidivl
lea
inc
xchg
mov
add
and
cltd
mov
repnz
jno
aad
add
lret
es
data16
popf
out
or
jle
pop
cmc
adc
and
sahf
mov
mov
or
jge
mov
mov
std
and
jnp
sbb
lcall
in
sbb
insl
xchg
clc
aas
enter
lret
mov
cmp
ffree
pop
mov
and
dec
or
cld
mov
dec
mov
dec
popf
pop
js
xlat
mov
mov
ret
push
jl
xchg
loopne
sbb
push
mov
mov
cltd
inc
mov
mov
movsl
xchg
cmp
loop
adc
pop
adc
out
mov
mov
dec
ja
stc
test
aaa
outsl
push
out
hlt
add
movsb
xchg
mull
rolb
fsubl
or
xchg
js
cmp
mov
mov
push
dec
or
fidivl
test
sub
mov
pusha
cli
pushf
jae
out
gs
rol
lock
jbe
test
sub
movsl
jnp
imul
cmpsb
mov
data16
pusha
dec
add
ds
repnz
cmc
clc
inc
icebp
decb
enter
fdivrl
sbb
fcomi
mov
faddl
cwtl
push
subl
jo
jns
xchg
leave
sub
jecxz
enter
or
mov
push
cli
loop
xor
xchg
push
into
lret
sub
std
rcrl
adc
mov
fldl
rclb
push
cli
sahf
mov
fiaddl
lea
dec
push
adc
shll
shll
lahf
in
push
lret
gs
mov
loope
add
mov
or
mov
cwtl
int
lcall
xor
pop
jle
in
sub
jo
push
jge
in
add
rcrl
xchg
mov
movl
jae
cmp
ret
cmp
push
sbb
mov
xchg
into
and
jne
pop
hlt
fidivrl
mov
mov
lods
cld
pop
jbe
repnz
in
cmp
mov
mov
jmp
icebp
fmulp
cmp
dec
scas
adc
stos
sti
gs
mov
and
sub
fimuls
cmp
mov
std
stos
sub
dec
pop
loopne
mov
insl
mulb
test
jbe
cmpsl
mov
or
and
nop
pop
push
jle
push
popa
mov
les
sbb
push
jne
xchg
test
xlat
aad
ja
pop
jecxz
stc
add
call
je
gs
adc
and
dec
data16
in
mov
lods
test
sub
rclb
ror
add
insb
popf
daa
aam
jl
sbb
mov
sub
mov
int3
pushf
xor
pop
push
xor
cmp
pusha
movsl
jnp
add
jnp
sub
ss
jmp
mov
and
flds
data16
or
lahf
xlat
shlb
mov
sub
dec
pop
fstl
outsl
mov
inc
sbb
es
push
shlb
subl
add
nop
ret
test
in
cld
cmp
mov
shrl
cs
int3
popl
and
stos
jp
rcll
jmp
dec
xlat
xchg
jmp
test
xchg
sbb
outsl
in
dec
out
xlat
mov
stc
pop
push
mov
xor
jmp
xchg
cmp
and
int3
stc
inc
xchg
pop
pop
cmp
ss
push
pop
pusha
cmp
xor
pop
cmc
push
fiadds
arpl
fcomp
add
cmpsl
clts
mov
arpl
gs
or
shlb
enter
aas
into
inc
add
jb
xchg
jecxz
mov
jnp
dec
pop
fbld
jle
xchg
js
sub
dec
jp
sub
out
mov
mov
mov
cmp
pop
and
aas
push
popa
es
aad
pop
les
adc
xchg
cmp
je
test
mov
imul
xchg
adc
das
add
xor
mov
lret
mov
inc
aaa
shll
das
pusha
push
add
add
inc
frstor
out
mov
aad
push
fdivp
pop
ds
or
adc
fsubs
or
fistpl
pop
mov
shr
push
bnd
mov
xchg
and
xor
call
inc
mov
mov
fsubs
and
xchg
pop
jl
pusha
mov
repz
mov
repnz
lods
pop
les
pop
std
negb
jne
jmp
popf
rcll
sbb
jp
aas
cmpxchg
xor
bound
incb
sbb
mov
or
pop
repnz
cmc
and
cmp
add
fwait
outsl
shrb
test
mov
jns
xchg
xchg
sub
sub
xchg
jecxz
dec
mov
out
cmpsb
je
sub
sti
mov
dec
sub
rolb
cmp
gs
sub
repnz
faddp
ret
jns
jle
stc
stos
enter
clc
rclb
and
xor
or
add
push
out
aaa
xchg
iret
jmp
xor
fnsave
and
mov
push
orb
inc
repnz
cmpsl
dec
pop
rolb
sub
cmp
and
cmc
jae
faddp
pop
xchg
iret
scas
cmp
sbb
push
xchg
addr16
cmp
repz
mov
out
popf
inc
dec
movsl
jmp
nop
inc
mov
iret
lds
jbe
cmpl
icebp
cmc
fildll
add
rcrl
sti
ja
fldl
stc
push
addr16
sbb
mov
mov
inc
in
arpl
or
adc
out
xchg
adc
into
fistpll
movsl
mov
cli
mov
and
dec
jno
stos
sub
cmp
sub
paddw
cwtl
inc
jg
mov
ficoml
fidivrs
pop
sub
scas
fcmovb
mov
jo
mov
dec
adc
movsl
daa
movsl
cmp
push
inc
mov
cli
push
int
loopne
lods
pop
int
movsb
loopne
inc
dec
es
aam
jge
xorl
mov
sub
stc
sbb
fcomi
inc
mov
stc
es
cmc
fbstp
insl
std
xchg
push
add
push
faddl
xchg
pop
negb
loop
aam
in
dec
cmpsb
lret
es
dec
nop
es
or
insb
fs
movsl
push
dec
shlb
mov
inc
pop
clc
notl
andl
pushf
sub
mov
ljmp
sahf
adc
insb
setp
mov
pop
insb
dec
icebp
and
rclb
fs
dec
sub
sbb
or
mov
xor
lret
test
nop
lcall
cs
imul
rcr
mov
shlb
out
push
scas
scas
or
push
movsl
jbe
mov
pop
mov
and
lea
dec
imul
ret
pop
in
shrd
xchg
xchg
ja
add
and
pop
leave
add
adc
jb
out
jne
rolb
repnz
mov
sbb
push
mov
sub
inc
mov
inc
inc
mov
or
push
xchg
cld
outsl
fdivs
mov
insb
sarl
xchg
fsubrl
xchg
cmp
mov
sub
jmp
jle
mov
push
int3
add
fistl
icebp
and
ja
jg
pusha
adc
mov
pusha
mov
inc
aaa
test
push
pop
pop
jae
pop
stos
cltd
push
repz
push
test
push
outsb
mov
ss
sbb
iret
mov
push
lret
inc
cmp
dec
or
lock
movsb
shr
push
mov
push
pop
lcall
test
pop
inc
pushf
jecxz
je
mov
mov
jae
pop
outsb
cmp
mov
mov
add
and
jns
xor
pop
lret
mov
popa
repnz
jge
cmp
pop
pop
jbe
ds
incb
enter
sub
in
imul
and
movsl
clc
into
cltd
cmp
sub
or
arpl
aad
sbb
cli
push
inc
push
pop
push
jbe
xchg
xchg
sbb
mov
test
out
xor
sub
adc
and
in
mov
movsb
les
dec
dec
jbe
loope
test
ljmp
adc
frstor
mov
cmpsl
and
mov
or
ficoms
inc
aas
dec
sti
gs
sbb
pop
jge
nop
and
add
scas
pusha
lods
cltd
in
sbb
push
add
scas
or
dec
repnz
jmp
faddp
ja
mov
pushf
pop
mov
dec
mov
iretw
or
shlb
leave
dec
mov
push
push
xchg
jns
je
push
dec
mov
pop
mov
pop
xor
jbe
adc
adc
xchg
movsb
sbb
mov
xchg
add
adc
mov
pop
and
or
xchg
inc
in
mov
and
jmp
pop
ljmp
cltd
mov
xchg
andl
insl
jo
leave
std
or
mov
ret
push
adc
add
mov
adc
hlt
sbb
mov
psllq
and
push
mov
sub
and
dec
inc
dec
enter
fiadds
jns
sarb
dec
nop
dec
hlt
test
shl
add
jns
xor
lret
push
clc
mov
xor
enter
adc
loopne
inc
gs
inc
mov
pop
cwtl
xor
sarb
stos
rcrb
or
shl
and
es
or
loopne
and
enter
mov
gs
cmpsb
call
stc
jmp
inc
ret
mov
iret
in
sti
inc
adc
icebp
mov
adc
push
adc
addr16
sbb
mov
in
rcrb
les
popa
inc
data16
out
js
dec
jle
xor
imul
cli
loop
pop
mov
sub
mov
cltd
jbe
inc
lea
lret
dec
or
cmp
nop
adc
sbb
rorl
jecxz
xorl
out
cmp
sbb
add
sbb
jae
inc
pop
push
xchg
inc
outsb
xor
push
pop
mov
addr16
sub
add
nop
jbe
pop
jo
push
xchg
fisttps
mov
mov
sbb
xor
cli
pop
pop
xor
in
lret
jb
movsl
dec
jne
dec
or
jo
in
and
dec
cmpsl
mov
ret
cltd
repz
jae
dec
imul
fwait
jl
mov
xlat
mov
xchg
push
inc
sub
or
and
ja
mov
or
jg
sbb
hlt
mov
fldcw
inc
xchg
gs
xchg
ret
stc
mov
mov
cmpsb
aaa
scas
out
xchg
jns
out
xchg
test
or
push
clc
pop
inc
or
push
cmp
jo
sbb
popl
dec
lcall
inc
and
push
rorl
mov
inc
mov
xchg
scas
push
ss
arpl
xchg
xchg
aam
mov
mov
subb
repnz
cmp
mov
sub
test
sbb
pop
pop
push
les
decb
bound
out
xchg
out
adc
push
out
and
push
scas
in
sbb
js
aas
movsl
lods
repnz
cmpsb
shll
loope
notb
cmp
sti
in
fninit
mov
repz
bound
xlat
xor
out
inc
cltd
mov
rolb
or
xor
jp
pop
in
mov
inc
push
movsb
add
inc
or
mov
cmp
and
imul
outsl
push
mov
outsl
lea
aad
aad
fmull
cmp
push
pusha
imul
aad
sti
ds
insb
mov
in
mov
mov
cmp
lret
aam
cmp
xchg
insb
jbe
outsl
mov
xor
push
fldt
mov
add
ds
cmp
mov
cwtl
sub
mov
sahf
daa
mov
insl
xchg
add
mov
adcl
xor
sub
inc
pop
test
pusha
mov
test
push
mov
aas
subb
scas
xchg
jno
idivb
sbb
shrb
sbb
cmp
jecxz
or
or
pushf
shll
jmp
pushf
std
ds
xor
lcall
add
pusha
or
arpl
mov
mov
dec
inc
lret
jp
decl
ss
outsb
lods
cmp
scas
sub
inc
mov
add
outsb
xchg
sbb
sub
lods
daa
mov
mov
lcall
inc
cli
scas
push
xchg
sub
outsb
inc
mov
mov
mov
xchg
test
movsb
mov
jno
jnp
mov
sarl
aaa
add
lods
ret
jb
movsb
xchg
mov
jg
inc
push
or
sub
cmp
cmp
scas
loope
mov
adc
xchg
xor
pop
or
add
cmp
jl
cwtl
gs
test
push
pop
mov
cmpsb
jne
lock
pop
imul
loop
iret
je
cmc
pushf
jb
or
jns
fucomi
cmp
add
in
aad
cmpsb
xor
mov
mov
int
adc
addr16
inc
xchg
scas
xchg
out
test
xchg
sub
jb
push
aaa
sbb
adc
imul
mov
or
insl
push
push
loop
dec
push
notb
enter
ds
out
stos
add
not
push
mov
mov
and
lea
cli
outsb
adc
push
inc
push
loopne
pop
mov
adc
aam
sub
add
mov
push
dec
nop
cmp
xchg
addl
xor
dec
jl
fcmovnu
cmpsb
xchg
jns
das
mov
push
sbb
popf
in
dec
pop
jmp
sbb
add
mov
mov
stc
loopne
sub
xchg
jnp
sbb
xlat
ficoms
movsl
push
xor
inc
rcl
lock
adc
ret
adcl
loope
dec
loope
or
sarb
inc
and
movsb
testl
sub
pushf
mov
hlt
fnstenv
testb
insl
mov
jmp
cli
xorl
or
or
sub
push
inc
popf
scas
out
xchg
cmp
std
or
mov
cmp
dec
add
ret
jge
sub
adc
jnp
insb
mov
pop
xor
js
shll
pop
rcll
pop
daa
test
push
pop
xchg
add
movsb
bound
xchg
pop
pop
dec
push
sahf
cltd
cmp
cmpsl
sbb
cmc
add
sub
push
lods
hlt
aad
cmp
push
and
jg
mov
sbb
cmp
divl
pop
mov
push
mov
decb
ficoms
mov
add
jnp
pusha
pop
cmp
and
xchg
add
xor
je
cmovne
pop
and
adc
loope
mov
jp
andb
lea
je
dec
jecxz
iret
mov
cmp
and
sbb
pop
aad
mov
push
push
sub
pop
lcall
push
push
xchg
mov
ret
cwtl
jg
stos
inc
or
cmpsb
dec
sbb
dec
pusha
sti
cmc
adc
and
fcoms
idivl
xor
push
xchg
mov
mov
inc
add
jmp
jmp
in
daa
hlt
xlat
daa
inc
leave
addr16
adc
jbe
cmc
cmp
sub
movsb
or
in
push
and
shr
rolb
lock
jo
subl
cmp
cmp
out
notb
mov
dec
das
cmp
mov
in
xor
test
xor
inc
xor
mov
pop
or
arpl
pusha
filds
lods
pop
mov
xorl
inc
lock
jmp
adc
pop
out
inc
and
out
xor
xor
fs
aaa
mov
mov
mov
mov
std
loop
in
popf
test
mov
push
push
out
jb
fwait
call
les
xor
sbb
hlt
sar
repnz
fisttpl
bound
cmpsb
jmp
jle
stc
inc
pop
sub
lods
cmp
mov
rorl
gs
push
cmpb
adc
fnstcw
mov
adc
jg
aas
aas
daa
pop
jae
push
inc
sti
xor
pop
push
and
push
xchg
fwait
test
repz
dec
xor
lret
adc
xor
ret
dec
pop
in
incl
stos
xorb
or
adcb
push
in
mov
mov
out
pop
shrb
loopne
jecxz
setns
sahf
leave
in
mov
sub
push
sbb
dec
mov
inc
push
stos
out
xor
cmp
mov
rcrl
xor
adc
lods
dec
jge
mov
cli
sub
mov
arpl
aad
pop
push
adc
mov
les
lret
aaa
adcl
int3
negl
pop
test
clc
lret
or
xchg
inc
push
and
hlt
popa
push
arpl
push
fistps
sahf
and
add
mov
pop
fidivl
stos
jecxz
mov
cs
inc
daa
sbb
fcomps
insb
outsl
int
notl
fwait
outsb
les
lds
lods
xchg
cmp
adc
out
fcomi
and
loope
sub
repz
dec
mov
fiadds
mov
sbb
or
mov
pop
cmp
cli
jmp
repz
mov
mov
inc
imul
dec
cmp
or
scas
jbe
scas
fwait
pop
icebp
jmp
sub
xchg
sbb
jle
add
xchg
push
dec
es
pop
divl
arpl
cltd
sbb
iret
jb
ror
call
sub
pop
mov
stos
push
rolb
push
xchg
inc
add
mov
jg
pusha
sbb
shlb
and
aas
adc
dec
pusha
lret
addr16
fimuls
ss
pop
jo
mov
shl
lods
stos
int
repnz
sbb
cmp
cmc
stos
mov
sbb
mov
aaa
cs
inc
hlt
dec
insb
bound
in
fdivl
ljmp
lea
dec
loope
dec
cli
push
xchg
cmp
cmp
daa
pushw
imul
add
pop
push
test
pop
pop
xchg
and
xchg
push
leave
cmp
clc
lcall
mov
jnp
inc
js
sarl
das
sarb
and
sub
or
divl
push
inc
push
mov
mov
mov
sub
mov
mov
add
fwait
call
jae
vmaxps
mov
fsubs
out
das
dec
incb
lahf
daa
push
push
into
xchg
or
sub
sarb
bound
dec
or
add
lea
jp
shlb
dec
xchg
xor
pop
and
push
cs
and
test
jmp
add
int3
add
cmp
sbb
jl
and
fwait
js
xchg
xor
subb
orl
sarl
xchg
add
xor
movsl
mov
add
or
inc
stc
dec
cwtl
mov
push
gs
xchg
fcomps
jge
mov
dec
fcoms
mov
and
push
adc
lcall
sbb
sub
push
push
mov
stos
sub
lods
fiadds
mov
mov
push
push
pop
inc
notb
out
push
mov
mov
repnz
dec
ds
std
aaa
mov
sbb
or
ret
inc
xchg
push
sub
dec
adcl
mov
or
inc
push
aam
pop
mov
pop
pusha
sub
aas
sarl
jo
jg
or
jo
mov
out
inc
adcb
sbb
or
movaps
and
sub
icebp
outsb
shll
jne
rorb
addl
cwtl
adc
add
jo
mov
add
idivb
int3
or
popa
ss
xchg
lods
shll
icebp
pushf
mov
cmp
ds
and
imul
mov
js
clc
pop
fadd
je
mov
cmp
pusha
dec
les
cld
arpl
cmp
adc
sbb
or
add
movsb
arpl
pop
jl
push
jge
je
and
repz
mov
mov
xlat
outsb
push
fisttpll
rcrb
add
daa
push
mov
cmc
sbb
or
push
cmp
push
in
mov
pop
add
inc
call
inc
pop
scas
test
jp
inc
test
popf
jo
les
fcmovnb
cwtl
clc
push
bound
dec
pop
add
pushf
push
dec
pop
in
pop
add
mov
das
mov
cmp
mov
leave
or
dec
mov
daa
shl
pop
jae
cld
push
and
lcall
test
or
aas
xor
ds
xchg
xorl
push
jb
cmp
xor
adc
imul
shll
pushf
shr
mov
mov
push
add
mov
xchg
cwtl
xor
ja
in
and
pop
shl
into
cmp
pop
out
pop
stos
sbb
clc
fldt
xchg
mov
lahf
test
sti
and
test
dec
jne
push
call
push
in
shrb
mov
adc
sbb
and
push
add
add
inc
add
adc
add
inc
add
cmp
inc
add
popa
ret
inc
inc
add
dec
and
inc
jl
xchg
leave
ss
jp
lock
add
icebp
hlt
dec
xchg
sub
scas
xchg
cmp
sbb
pushf
ret
or
movsl
loopne
jle
inc
popf
popa
inc
aad
inc
fstpt
sbb
mov
cwtl
imul
or
or
dec
push
in
jl
fs
xchg
adc
pushf
jl
lcall
mov
pop
int3
cmpsl
mov
cmc
mov
or
sub
fildll
std
xlat
loopne
sti
mov
push
xchg
add
test
sbb
adc
pop
insb
stos
imul
push
cwtl
jo
nopl
movsb
dec
jo
cltd
lds
inc
mov
xorps
mov
fstpt
push
jmp
aad
decb
push
cmp
dec
fidivrs
jge
testb
popa
repz
jge
push
adc
repz
mov
mov
lcall
jp
jbe
addr16
stos
fsubrl
mov
xchg
jg
lcall
test
in
mov
aam
test
sbb
lods
inc
mov
addr16
mov
jnp
sbb
and
push
cltd
leave
dec
pop
shll
les
push
or
sub
adc
loopne
push
xchg
cmp
pop
stos
lds
jnp
push
clc
jbe
add
jge
sub
pop
and
dec
jle
shl
das
mov
xor
rolb
ds
jns
xchg
mov
lods
les
in
movsb
fucom
push
dec
in
mov
cltd
xchg
nop
int
jo
jb
das
jle
fcmovnbe
jmp
das
bound
in
pusha
ret
mov
add
push
inc
push
out
in
jne
mov
sub
and
aad
sbb
mov
decl
lock
ljmp
cmpsb
imul
shlb
movsl
add
xchg
fadd
inc
xlat
add
leave
insb
add
loope
scas
out
sub
add
lds
mov
lods
xor
aaa
mov
ftst
fnstenv
jecxz
mov
es
outsl
pop
push
fbld
pop
in
aaa
jnp
push
push
rcll
je
or
mov
xchg
or
clc
mov
pop
dec
mov
outsb
aam
add
clc
in
adc
fcoml
ret
jo
sti
add
mov
daa
sub
jmp
cltd
icebp
pusha
es
mov
inc
add
testl
loope
xlat
sbb
in
ja
decl
call
jb
push
push
lock
lcall
and
cmpsl
jo
mov
insl
mov
push
inc
or
fmull
pop
add
inc
xchg
sbb
and
or
xchg
xchg
push
cmp
pop
outsb
insl
jg
mov
push
lcall
scas
mov
xor
mov
scas
pop
jg
lock
ret
mov
or
push
out
cmp
loop
adc
cmc
jnp
repnz
cmove
sbb
test
xchg
cmp
icebp
jge
imul
inc
cmp
inc
push
lret
mov
pop
adc
fstpl
and
jbe
mov
shlb
lret
aam
gs
and
std
jbe
repnz
gs
push
mul
cmp
loopne
jb
aaa
leave
cmpsb
lea
pop
sbb
add
pop
push
mov
mov
cmpsl
mov
cmpsl
imul
enter
sbbb
lods
std
and
sbb
xchg
xor
aam
jge
lock
aas
cmp
loope
scas
mov
xor
sbb
test
sub
push
push
lcall
jb
pop
cmpsb
pop
and
daa
loope
pop
shll
adc
mov
in
rdmsr
int3
sub
adc
xor
xlat
rcll
scas
add
adc
jl
adc
nop
xchg
scas
hlt
dec
or
push
push
pop
adc
es
repnz
cwtl
pop
add
push
pop
ficoms
testl
or
jnp
ja
mov
sub
inc
mov
out
inc
adc
mov
sbb
cmp
into
mov
adc
pusha
adc
push
adcb
or
mov
in
mov
out
repnz
scas
push
lret
decb
mov
xchg
cmpl
cwtl
add
imul
add
repz
lods
fsts
add
cmpsl
nop
cltd
js
pusha
adc
pop
rclb
or
dec
adc
jns
mov
mov
jo
cmpsb
and
mov
mov
adc
mov
inc
and
jb
pop
int3
mov
and
repnz
push
shll
xchg
jbe
push
int3
or
ret
jp
roll
pop
jae
ss
fisubs
xchg
and
adcb
popa
add
mov
ljmp
cld
and
cmp
mov
xor
ret
add
ja
jb
cwtl
or
fcomps
shll
xor
push
addr16
dec
sub
xchg
add
in
sarb
sti
mov
ds
sbb
push
pop
cmp
cli
in
or
in
aam
mov
jg
sub
xchg
aaa
inc
cmp
mov
adc
cmp
dec
lea
insb
jmp
sbb
cwtl
int3
mov
loope
mov
in
mov
jbe
inc
mov
mov
mov
cld
add
lcall
fldl
sub
jae
addr16
test
repz
incl
int
filds
nop
pop
jb
out
scas
mov
daa
sub
xchg
xchg
les
xchg
jp
fisttpl
push
mov
addr16
negl
xchg
aad
mov
and
cltd
add
test
ss
scas
push
cmp
sbb
in
lock
fdivrs
pop
adc
addb
add
mov
push
push
xchg
xchg
icebp
inc
in
fsubrl
hlt
or
mov
mov
scas
leave
cmpsl
and
fsubl
cwtl
pusha
hlt
idivb
push
test
dec
leave
frstor
cmp
mov
xor
leave
sbb
daa
leave
arpl
popf
xchg
mov
std
lods
in
mov
repz
stos
mov
cmp
cli
pop
fnsave
fcoml
sbb
jg
fdivp
jo
xchg
in
xchg
or
mov
pusha
adc
pop
dec
enter
in
es
shll
testb
dec
add
repz
cwtl
pop
test
mov
dec
fs
mov
xchg
stos
aad
lods
and
sub
in
popf
add
test
pushf
testb
cmp
pop
rorl
lods
hlt
xor
in
jae
lock
mov
kmovb
push
inc
dec
ljmp
adc
das
mov
mov
jno
divb
fld
ds
sbb
jo
sbb
mov
push
push
lock
repz
jge
lret
add
repz
xchg
mov
cli
in
cmpsb
pop
and
inc
pop
xchg
or
test
fs
subl
xor
mull
inc
test
dec
in
cmp
inc
sub
test
sbb
jns
ljmp
xchg
mov
sub
notb
mov
inc
insl
cmp
sbb
jge
jb
dec
hlt
xchg
adc
inc
mov
jae
notb
xor
xchg
jl
or
leave
loopne
neg
cmpsl
mov
lcall
cmp
cmp
inc
jne
xor
mov
lea
cmpsl
aam
dec
mov
cmp
xchg
lods
or
shll
mov
fsubrs
add
dec
out
cmp
sub
add
mov
iret
push
or
cmp
push
stos
mov
repz
mov
das
das
loope
outsb
popf
sahf
cmpsb
ret
pushf
and
call
push
xor
inc
add
cwtl
mov
test
cli
stc
cmpsl
imul
out
out
mov
mov
xor
sar
mov
mov
sub
cwtl
cmp
aad
test
mov
daa
ret
dec
movsb
xor
in
outsl
aaa
xor
and
mov
adc
mov
lcall
push
mov
scas
jae
sub
fcoml
inc
in
xchg
mov
stc
std
les
xor
dec
mov
sahf
cmp
int
test
pop
xor
nop
fs
cmp
cmp
dec
or
rcll
test
sarl
std
paddusb
imul
push
sbb
sub
xor
mov
dec
adc
xor
add
ja
adc
or
mov
jmp
roll
mov
movsb
orb
xchg
adc
adc
fsubrl
lahf
push
push
setbe
cmpsl
sbb
iret
es
xchg
test
inc
iret
and
and
fdivs
popa
fwait
imul
sbb
aam
out
mov
out
lock
add
sti
sub
and
sub
jl
insl
push
inc
push
cmp
jle
sbbb
xchg
pop
scas
mov
rorb
out
dec
sbb
repnz
inc
or
pop
add
inc
fnstenv
inc
push
fistps
ljmp
mov
stos
push
popa
repnz
mov
dec
sahf
fbstp
test
popa
out
or
xchg
icebp
adc
hlt
and
xlat
adc
pop
insl
or
add
inc
cmp
cmp
cmp
xchg
pop
popa
add
mov
xchg
adc
pop
cmc
add
pop
popf
pop
loope
cmp
lcall
pop
loopne
ret
pop
push
adc
adc
pop
int3
rcrl
cmp
das
adc
test
cmp
jecxz
movsl
push
mov
adcl
sahf
jnp
inc
cltd
rcr
inc
and
sarl
jnp
pop
sbb
rolb
loopne
mov
bnd
mov
test
pop
xlat
xchg
out
ss
sub
or
lcall
stos
mov
test
mov
push
test
out
add
xorl
ret
lods
sbb
and
stos
mov
or
xchg
cmc
pusha
das
leave
push
jmp
gs
test
jge
int
or
fstp
push
aaa
adc
and
imul
jmp
scas
xadd
sbb
mov
cmp
lock
insl
jno
xchg
mov
pop
pop
test
cld
adc
rcll
dec
cs
loop
push
daa
scas
iret
jge
stos
shrl
int
mov
out
les
movsl
mov
lahf
mov
and
mov
add
div
shlb
jecxz
rorl
push
loope
add
stos
add
stos
popf
sub
or
icebp
sub
xor
mov
pushf
cmpsl
or
or
aam
push
subl
enter
out
inc
jmp
rcll
imul
sarb
testl
movsb
sub
mov
mov
aam
cs
into
mov
jp
inc
ret
push
xlat
adc
aaa
into
outsb
cli
and
icebp
test
xor
add
addb
lods
test
sub
je
fistpll
push
cmp
add
pop
scas
nop
loop
inc
jnp
mov
mov
popa
xor
pop
imul
and
cli
cli
jle
loop
std
mov
jbe
aas
inc
ficompl
stos
dec
xchg
gs
adc
jnp
lret
mov
in
fs
pop
jmp
aam
inc
enter
push
push
xchg
push
mov
out
insb
cwtl
ds
cwtl
xchg
shl
pushf
das
or
mov
pop
arpl
jecxz
jne
xor
test
and
push
add
cs
pusha
pop
adc
push
push
pushf
adc
ss
pop
pop
push
ds
mov
sbb
cmp
push
cmp
shll
pop
ja
nop
xor
cmp
in
cmp
jne
out
cmp
jge
xchg
push
or
push
push
xor
cs
testb
xchg
dec
jnp
pop
cmp
mov
sub
cmp
leave
pop
lcall
push
add
push
mov
dec
lret
push
jae
scas
and
out
add
or
stos
jne
stos
jg
sbb
stc
mov
sbb
mov
add
jbe
mov
mov
xlat
adc
fs
iret
movsl
data16
es
jae
mov
das
xchg
rcrb
xchg
jae
rorl
nop
sub
mov
adc
rorl
lods
sbb
jp
icebp
mov
gs
cli
movsl
adc
xchg
mov
jne
insb
dec
sub
lahf
out
iret
outsl
jmp
xor
fstpt
sbb
and
adc
cld
push
stos
inc
lret
test
fwait
daa
xor
iret
cwtl
out
dec
push
dec
mov
mov
fstps
aas
push
add
jo
loope
xor
jge
and
imul
mov
stc
pop
shl
insl
add
aas
jle
pop
insl
notb
jbe
jns
in
xchg
fcmovnbe
mov
inc
ds
mov
lahf
xchg
cmp
shrb
imul
or
les
mov
cmpl
and
shlb
repz
inc
sub
or
loope
aas
mov
aas
mov
leave
ret
ss
test
push
std
mov
aaa
add
loop
mov
inc
pop
lock
pop
dec
notl
fnstenv
mov
aas
ret
push
nop
and
push
inc
add
dec
xor
lods
lret
inc
push
and
pop
push
push
cmpsb
dec
pop
xchg
lods
sbb
mov
in
pop
pop
dec
pusha
in
dec
test
fdivrl
jno
pop
inc
mov
xchg
into
arpl
pop
or
inc
or
pop
repnz
cmp
stc
movsl
lcall
adc
inc
aaa
mov
push
loop
aas
sub
xor
in
shlb
xchg
pop
and
loope
pop
push
clc
xrelease
ret
insl
mov
push
cmpsb
lods
test
hlt
adc
pop
jo
push
in
sub
add
imul
fwait
add
sub
xor
in
incl
sahf
xchg
loopne
stc
test
mov
xchg
movsl
scas
xor
xchg
fstps
in
in
mull
les
pop
jmp
out
push
sarl
and
mov
jae
mov
xlat
sbb
out
dec
and
sub
cmp
dec
cmpb
or
pop
sbb
insl
lods
lret
xor
sub
sbb
sbb
ret
arpl
bound
add
fwait
iret
addr16
scas
jle
in
rorl
sarb
cmp
ret
mov
or
jae
add
push
mov
fcoms
pushf
and
cmp
shll
imul
int
xchg
push
push
and
jnp
add
jae
lahf
mov
xor
mov
or
sbb
dec
mov
inc
adc
sub
loop
imul
scas
dec
in
cmp
jecxz
cmp
mov
jo
or
fnstsw
dec
test
jl
or
adc
hlt
fidivrs
push
inc
aaa
bnd
xchg
cmp
int3
or
sbbl
repnz
adc
or
lret
xor
std
sbb
xor
clc
aad
icebp
lahf
pop
popf
rolb
sahf
mov
dec
sub
ljmp
adc
mov
xchg
jg
mull
cmpsb
push
cmc
mov
cmp
xchg
aas
addr16
inc
xchg
xchg
dec
mov
push
stos
test
mov
xchg
ds
mov
mov
cmp
cmp
ja
mov
sar
inc
outsb
xchg
pop
fstpl
dec
pop
jle
and
das
pop
and
or
nop
fildll
outsb
cmp
int
aam
stc
clc
inc
push
in
sub
mov
or
jecxz
gs
aam
jns
inc
lahf
scas
dec
inc
out
xchg
inc
aad
test
fsubr
sub
xor
pop
push
sbb
add
rorl
in
xor
stos
je
loop
xchg
adc
pop
lods
cmpsb
mov
std
call
roll
sbb
and
mov
sub
push
push
mov
loop
fwait
jmp
pop
jecxz
das
test
jns
sbbl
in
xchg
mov
mov
cltd
lcall
jnp
fwait
inc
jbe
cltd
jnp
mov
mov
xor
pushf
cmpb
push
movsl
lret
negb
inc
notb
push
outsl
pop
jbe
loopnew
pushf
adc
push
std
and
lret
pushf
mov
arpl
lea
rcll
cwtl
sbb
popa
daa
mov
add
jmp
stos
add
out
cwtl
rclb
mov
dec
mov
xor
ret
adc
adc
data16
jg
clc
push
add
es
clc
loop
movsl
mov
push
pop
int
in
aas
jl
adc
cmp
ja
xchg
das
outsl
push
xor
or
scas
jg
push
jmp
test
je
jmp
jnp
das
cmp
push
sahf
or
scas
mov
mov
or
jne
mov
inc
jae
lea
jbe
push
popa
lock
into
mov
mov
inc
inc
sub
push
scas
xchg
xor
sbb
shll
repz
push
fs
arpl
ds
outsl
das
inc
jp
clc
mov
rorb
popf
pop
leave
cwtl
dec
sbb
jne
jp
jp
mov
dec
xor
fimull
push
mov
pop
scas
aad
xor
or
out
cmpsb
mov
cltd
in
xchg
xor
add
mov
inc
vpshufd
into
xchg
pop
aaa
rclb
lods
sub
loopne
xchg
mov
dec
leave
out
fxch
mov
sbb
xor
jns
insb
popf
sub
adc
sahf
fs
fldt
mov
or
orb
mov
mov
call
push
fdivl
add
and
pop
or
or
jo
cltd
mov
imul
pop
cmc
xor
push
xor
add
std
test
loopne
mov
or
fisubl
dec
aam
decb
xor
sbb
sbb
xlat
cmp
out
mov
jle
int3
xchg
aam
iret
arpl
cltd
pop
cmpsl
inc
daa
jno
xchg
mov
test
cmp
repnz
movsl
sbb
push
pop
xor
push
insb
and
push
cmp
and
push
xchg
repnz
aad
les
cmpsb
scas
in
push
stos
adc
fcomps
mov
fildll
cmp
rcrl
push
das
jne
and
mov
ss
inc
add
mov
mov
popa
xor
add
mov
stc
into
inc
dec
fisttpll
in
mov
or
aas
adc
insl
fnstsw
adc
nop
push
dec
cmp
ljmp
cmp
add
jns
out
cld
add
dec
mov
sbb
inc
repnz
cs
test
aad
clc
inc
fstp
or
loope
js
xchg
mov
sub
popf
inc
push
shll
iret
sbb
cmp
cmpsb
sub
idivb
dec
mov
adc
mov
sub
pop
popa
pop
repnz
fstps
mov
lods
or
sbb
jg
mov
add
jmp
xchg
push
mov
dec
and
stos
into
and
mov
mov
idiv
sarl
addr16
or
test
addr16
jg
jmp
push
ss
sarb
cmpsl
mov
insb
push
sbb
push
or
pop
xchg
lods
dec
pop
vpaddsb
jle
sub
push
lods
rorb
ja
clc
mov
jmp
clc
in
cli
sbb
in
mov
pop
mov
popf
hlt
jl
dec
fidivrs
xchg
sub
jl
out
popf
out
mov
cmc
in
xor
jbe
xchg
dec
add
jae
roll
mov
ret
jl
mov
sub
cmpl
mov
xor
jno
xor
sub
mov
sub
imul
ret
rolb
sub
mov
jmp
push
test
dec
cmp
or
test
mov
add
imul
mov
fsubs
cltd
ds
jb
cmp
and
loopne
jecxz
insl
fsubs
mov
mov
sbb
pop
das
lock
cs
and
xchg
icebp
sahf
or
stc
fs
adc
push
mov
adc
add
push
mov
ljmp
dec
rorb
push
mov
push
das
test
stos
test
jge
xchg
pop
das
in
int
sub
xor
xchg
std
xchg
xchg
mov
cmp
pop
push
jne
push
fldt
xor
or
jl
in
jo
sub
lods
jb
cwtl
icebp
push
std
shrl
sahf
popa
lret
dec
jnp
les
out
sahf
pop
movsb
jg
jb
lock
inc
out
or
cltd
sarb
not
lret
ds
sar
iret
mov
xchg
sti
push
shrb
in
loope
sbbl
mov
inc
pop
jmp
xor
mov
jbe
in
and
pop
mov
bound
push
adc
ret
push
pushl
xor
lea
mov
lds
or
push
push
mov
inc
repnz
sub
sahf
outsb
inc
mov
or
cmp
mov
stc
stos
popf
sub
aad
mov
ja
cmpsb
mov
rclb
mov
scas
mov
jmp
jp
dec
sub
sti
adc
fs
pop
sbb
pop
icebp
out
mov
les
mov
xchg
in
cmp
bound
pop
adcl
mov
lods
icebp
push
jecxz
push
cmp
popa
add
ds
aad
cmp
enter
xor
in
mov
rcrl
rolb
aaa
fsts
pop
lret
out
cmp
mov
stos
cmpsl
push
dec
outsl
je
and
js
cltd
sub
cmp
lcall
repnz
xchg
xchg
popf
test
adc
clc
add
inc
jo
dec
aaa
adc
icebp
adc
outsb
shrb
sbb
ljmp
in
loopne
shrb
push
lcall
pop
xor
ss
fldz
jp
xlat
lods
repnz
push
mov
xchg
fnsave
outsl
xor
test
push
sbb
mov
jb
cmp
aas
mov
sub
mov
xchg
and
cmp
aas
jmp
ret
jle
js
notl
loopne
sub
add
hlt
mov
fstps
mov
in
mov
mov
mov
push
pop
stos
jo
outsb
imul
insb
das
je
cld
mov
dec
fidivl
mov
and
fbld
sub
das
lods
pop
adc
mull
pop
arpl
mov
xchg
lret
push
sbb
sub
adc
cld
cmpsl
hlt
sbb
push
pop
pop
idivb
or
jns
cltd
pop
js
lods
hlt
fistpl
cmp
pop
dec
jg
in
xchg
pop
jg
xchg
insb
or
push
outsb
mov
outsb
sub
xchg
push
ss
js
mov
lods
leave
outsl
xor
cmp
push
mov
aad
sub
stc
test
test
cmp
pop
mov
ret
dec
test
ljmp
testb
imul
aaa
push
int
xchg
rolb
daa
popa
in
push
pop
cmpsb
sahf
push
int
add
sub
pop
mov
pop
jg
out
scas
pop
xor
dec
cmpsb
mov
pop
repz
mov
xlat
dec
sub
adc
aaa
arpl
xchg
leave
inc
adc
repz
je
fstpl
mov
popa
sbb
sbbl
mov
cmp
inc
adc
and
rolb
repnz
insb
mov
pop
ss
cwtl
rorb
jns
mov
out
mov
js
cwtl
fisttpl
push
pop
cli
cmp
jne
push
repnz
stos
and
adc
inc
fcompl
or
clc
ret
pop
lods
into
pop
inc
insb
enter
insb
push
fstpt
in
xor
movsb
cmpsl
or
insl
mov
in
mov
mov
insl
test
cltd
outsb
mov
fldcw
add
cmpsl
addr16
dec
scas
sahf
movsb
sbb
sub
clc
xchg
and
push
test
mov
test
xor
orl
negb
insl
dec
test
push
rcrl
jp
cwtl
fisubl
xchg
int3
adc
stos
inc
nop
adc
jp
loopne
cmp
sbb
cmp
daa
ret
imul
and
mov
push
andl
mov
adc
lret
and
push
dec
cmp
sbbb
sbb
rolb
jae
or
outsl
add
shll
cmp
ss
cmp
divl
fildll
lretw
fwait
sub
clc
lret
jp
push
xchg
and
push
pop
test
fisubl
and
loope
cmc
dec
add
mov
fisttpll
mov
sbb
push
iret
push
cmc
inc
push
in
aam
adc
pop
shl
pop
push
repz
shlb
xlat
lods
int3
xor
jmp
mov
mov
mov
mov
push
je
push
cmpb
push
les
mov
inc
and
pop
int3
pusha
inc
lret
mov
js
enter
mov
mov
in
pushf
inc
mov
ds
test
xchg
std
lret
popf
jl
ror
add
jmp
lret
sbb
loop
mov
add
enter
mov
push
aas
pop
out
cmpsb
mov
fnsave
mov
adc
or
sub
fwait
mov
xchg
nop
xchg
ljmp
popa
inc
pop
mov
pop
int3
insb
lahf
shlb
addr16
inc
fstl
out
pop
inc
addl
sbb
cmovge
push
cmp
jl
add
in
dec
stos
icebp
add
mov
adc
push
insl
jne
in
cmp
xchg
loope
mov
jp
mov
hlt
pop
push
insb
add
xchg
sti
mov
push
lea
jne
mov
icebp
cwtl
popl
cmp
lahf
clc
xchg
out
cmc
mov
xchg
outsl
scas
mov
mov
mov
mov
mov
inc
jb
hlt
loopne
lret
arpl
cmc
setno
out
and
icebp
xor
jae
es
jg
lret
pop
push
inc
inc
leave
sub
icebp
adc
xor
add
xchg
ljmp
xchg
outsb
inc
dec
test
dec
dec
dec
and
mov
pop
cli
gs
xchg
pusha
out
imul
dec
push
rorl
ficompl
mov
inc
or
pop
shrb
iret
cmp
shr
pop
fwait
loope
pushl
sbb
mov
jmp
dec
outsb
aam
in
push
add
cmc
cmp
xor
jne
sbb
xorb
cwtl
popf
inc
je
out
fisubl
addb
fimuls
movl
lds
cwtl
push
add
mov
hlt
pop
xor
cmp
jle
jl
scas
loopne
aam
add
pop
and
add
inc
outsb
add
adc
inc
ljmp
mov
in
fsubs
push
push
xlat
lods
pop
loope
jle
mov
ds
pop
mov
incl
ret
mov
hlt
add
es
mov
out
adc
jns
sbb
sbb
push
cltd
mov
ds
sbb
lods
dec
mov
movb
mov
push
insb
xlat
xor
outsb
sub
leave
and
dec
insl
dec
add
xchg
sti
fld
adc
pop
mov
or
repnz
cld
xchg
xchg
mov
xlat
push
mov
movsb
push
add
insb
lods
leave
jne
mov
mov
cmp
push
jecxz
popf
cmp
sbb
sti
je
mov
pop
in
aad
fcomip
inc
gs
jo
scas
adc
mov
outsb
jae
jbe
mov
push
pxor
xor
push
call
inc
insl
mov
add
dec
sahf
ficompl
and
test
dec
and
pop
mov
subb
icebp
mull
jae
pop
mov
dec
leave
int
jp
push
cli
loopne
mov
xor
sbb
in
insb
ret
cmp
inc
aam
add
imul
inc
in
fcoml
inc
jecxz
imul
popf
das
fincstp
push
push
adc
popa
cmp
je
push
int3
rcl
out
mov
lea
data16
push
dec
jg
push
imul
popa
lcall
shrl
cmpsb
out
push
arpl
pop
mov
mov
out
int3
adc
xor
fdivr
mov
inc
dec
test
cmp
and
lea
aam
pop
fwait
mov
push
sbbl
jmp
mov
pop
shl
sub
rolb
insb
and
nop
popa
popa
mov
mov
aad
lcall
add
fistpl
adc
mov
stc
jle
or
out
push
bnd
mov
jnp
movsb
into
xchg
add
cs
jle
lods
andb
icebp
lods
loopne
jl
aaa
cmc
shlb
and
es
es
daa
xchg
or
mov
ds
shll
dec
push
leave
int3
adc
mulb
into
pop
cmpsl
jmp
loope
iret
pop
inc
fnsave
negb
or
push
inc
gs
nop
mov
int
mov
popf
jg
pop
pop
lret
incl
test
and
fwait
in
ucomiss
lea
push
leave
sti
dec
stos
xor
in
aaa
push
lock
insb
lods
fimull
jecxz
sub
add
dec
inc
cmp
dec
jl
pushl
mov
ja
pop
out
into
add
sub
pop
jp
psubq
jmp
inc
notl
push
jmp
movsb
ljmp
adc
xchg
mov
and
iret
cmp
and
sbb
push
push
cmp
out
mov
mov
out
dec
mov
sahf
lock
lcall
adc
cltd
pop
pop
nop
data16
pop
xor
xchg
jg
adc
lods
movsb
movsl
xor
mov
sub
mov
inc
sub
mov
add
lods
xchg
icebp
mov
pusha
lcall
xchg
jmp
mov
xor
ss
mov
inc
clc
ret
add
std
jp
pop
lea
jne
insb
jno
jg
bswap
inc
inc
stc
imul
shll
lcall
data16
lret
sarl
xchg
inc
enter
or
test
lret
mov
sbb
ss
fsubrl
out
pop
shlb
imul
mov
mov
stos
ja
sbb
cmpsl
dec
mov
mov
stos
add
xchg
xor
and
lods
push
fwait
dec
roll
xchg
fimuls
movsl
cli
mov
fadd
fsts
cli
jo
cmp
mov
test
gs
call
mov
sub
lahf
iret
jg
ds
popa
dec
lock
mov
pop
jno
clc
adc
sbb
mov
outsb
lds
dec
fwait
xchg
stos
lea
mov
leave
nop
clc
mov
pop
xor
pop
imul
sub
cmpsl
cmp
js
mov
gs
out
ds
mov
repnz
jns
out
mov
daa
mov
inc
xor
jg
lea
icebp
jo
outsl
xchg
jle
lds
mov
mov
jb
mov
jo
daa
jae
loop
popf
mov
inc
xor
loope
ljmp
pop
pop
jp
or
push
lret
lahf
push
sbb
inc
xor
clc
leave
dec
int3
pusha
sbb
and
push
mov
xchg
mov
xor
sbb
or
xchg
aam
das
jno
and
pop
jp
push
test
or
jl
hlt
xor
dec
push
xor
neg
aam
inc
das
mov
push
je
sbb
mov
mov
push
loopne
add
add
sbb
lret
add
addl
hlt
pop
mov
jmp
out
pop
clc
and
push
or
loop
mov
aas
out
loope
xchg
xor
rolb
jno
mov
shll
push
jno
xchg
or
push
dec
xor
mov
add
repz
shr
xor
pushf
iret
adcl
aaa
sub
insb
outsb
jmp
dec
mov
add
sub
fs
dec
jne
sahf
lea
data16
jmp
dec
push
out
and
lods
dec
lea
enter
rorl
cs
das
scas
xor
sbbl
aam
or
dec
sbb
stos
test
iret
mov
xor
movsl
iret
stos
test
push
sbb
xor
mov
test
pop
in
lds
popa
ret
sub
xchg
add
inc
dec
lods
mov
or
loope
loop
jo
fstpl
ljmp
cmpsb
push
mov
jmp
push
jg
sbb
roll
jge
mov
mov
jno
jp
movsb
sub
outsl
loopne
into
xchg
mov
ljmp
shlb
test
in
xchg
or
lods
arpl
insb
fcoml
fidivs
mov
test
stos
push
dec
lods
mov
push
inc
or
icebp
out
xchg
lea
in
xchg
scas
sbb
arpl
stos
push
loop
mov
out
lock
sbb
in
mov
inc
movsl
filds
nop
push
in
jo
dec
imul
popf
fdivl
pop
outsl
dec
mov
jae
mov
push
das
push
test
dec
aaa
aad
rolb
dec
pop
mov
mov
mov
sbb
jne
leave
push
sub
arpl
call
pushf
xchg
and
xor
dec
aas
jecxz
jnp
je
and
enter
pop
arpl
loopne
aam
adc
push
sub
sub
cmp
popa
jae
mov
and
hlt
shrb
jbe
out
gs
repz
insb
push
push
dec
xor
xor
cmp
out
jcxz
repz
scas
imul
or
loopne
arpl
adcl
ljmp
mov
mov
in
mov
pop
not
adc
mov
jl
adc
or
push
jg
sub
fildll
mov
lret
xor
inc
cli
xor
fs
jp
push
mov
mov
int3
inc
shrl
insl
pop
int3
sub
cmpsb
mov
mov
pop
sbb
into
xor
mov
movsb
shrl
std
sbb
sete
cmpb
jmp
andb
aas
mov
stos
cmpsb
pop
imul
gs
mov
mov
push
imul
movsl
mov
push
jno
stos
ret
dec
out
dec
cmp
imul
jb
mov
xor
inc
shl
frstor
jl
push
out
cmp
shl
jmp
lods
dec
addr16
dec
es
rcl
push
shlb
in
xor
or
sbb
into
ljmp
push
cli
test
cmpsl
pop
lret
sbb
lret
test
xor
roll
call
jne
jge
jae
mov
pop
ror
mov
ret
cld
xchg
imul
jae
mov
mov
or
fistpll
adc
fwait
outsb
xchg
inc
jle
mov
loop
out
jb
lods
int
xchg
daa
out
push
and
insl
jbe
cmp
scas
js
loope
sti
fnstcw
loope
jno
mov
jb
adc
or
xchg
lods
lcall
iret
loopne
leave
pop
aad
mov
push
popf
or
jb
jl
shl
fsubrs
sbbb
mov
dec
ja
mov
inc
mov
adc
and
pusha
sahf
adc
shlb
sbbb
mov
lcall
dec
xor
mov
fwait
and
daa
xorb
dec
sub
dec
iret
scas
xchg
outsb
imul
imul
sub
xchg
jae
fcoml
loopne
and
lret
mov
jl
sbb
adc
icebp
and
sahf
sbb
loop
push
fisttps
xor
mov
hlt
orb
or
or
sbb
cs
mov
sbb
mov
add
sbb
and
mov
popf
lea
out
sbb
sarl
popf
mov
stc
push
dec
js
mov
inc
in
cli
pop
jb
testb
inc
xchg
imul
loope
loope
inc
icebp
je
push
into
fs
movsl
sub
mov
and
or
bound
andl
shlb
jae
das
xor
mov
cwtl
int
outsb
jns
mov
or
pusha
repz
add
xchg
sub
int
dec
jg
adcb
in
or
filds
ret
push
pop
add
sbb
pop
loop
iret
mov
push
mov
addr16
mov
fcoms
shll
gs
mov
cmp
jbe
cmp
test
pop
inc
jge
test
push
cmc
nop
fnstcw
inc
mov
and
jb
and
jnp
stos
xchg
add
sarb
ja
or
dec
sub
test
sbb
aam
shrl
jl
push
testb
shll
nop
sahf
adc
sbb
push
mov
pop
popf
or
mov
mov
das
or
ljmp
xchg
mov
test
mov
call
push
enter
dec
popf
pusha
ss
inc
dec
inc
mov
jp
stos
and
mov
mov
decb
add
dec
repnz
nop
jo
imul
loop
add
pop
mov
pop
add
add
push
test
adc
pop
mov
jle
fisubrs
mov
mov
leave
call
and
xchg
fcompp
xor
je
repz
pop
into
pop
clc
inc
pop
bound
push
jmp
cmp
sbb
jae
xchg
stos
insl
mov
inc
push
and
stos
mov
insl
repnz
inc
mov
jb
lret
push
sbb
xchg
sub
shrl
cmp
cmp
push
loope
sbb
sub
sub
xchg
lret
int
xor
inc
pop
das
push
cmpsb
cmp
insl
stos
mov
jl
movsb
negl
cmpl
jbe
add
push
adc
subb
cmp
movsb
mov
push
cmp
or
add
push
sub
fstpt
les
in
jo
mov
cltd
int3
addl
pop
sbbb
int
add
fbld
pop
sbb
je
fimuls
bound
outsl
stc
and
add
cmp
push
lea
push
xchg
lret
idivb
outsb
out
or
in
pop
test
dec
push
push
inc
nop
adc
mov
dec
cmp
jmp
inc
sbb
sbb
test
mov
test
outsb
popa
out
push
mov
push
dec
mov
sub
pop
inc
sub
adc
push
stc
jp
pop
in
std
arpl
push
inc
pop
push
hlt
movsl
in
xor
xor
fdivrp
jae
outsl
ja
xchg
jbe
and
xchg
pop
sbb
add
pushf
inc
and
scas
ljmp
mov
mov
xlat
mov
or
pop
pusha
sbb
orl
and
out
mov
xchg
mov
xchg
inc
mov
xchg
cltd
fs
mov
idivb
adc
or
sbb
sbb
test
ret
mov
ljmp
loop
popa
cmp
repz
pop
dec
and
add
ficomps
pop
xorb
rol
jecxz
lds
int
mov
adc
pop
into
push
sahf
or
cltd
and
xchg
je
fxam
cs
popf
pop
lret
sbb
loop
adcl
out
scas
add
dec
inc
shlb
cwtl
fldl
xor
mov
cmc
inc
ljmp
std
les
addr16
adc
dec
inc
fdivrp
mov
push
xchg
out
mov
out
sub
nop
inc
dec
lahf
in
adc
pop
repz
mov
lcall
lds
test
or
xlat
pop
in
xchg
sarl
xchg
push
lods
jo
jbe
cmp
ljmp
add
mov
lahf
jp
ljmp
jg
out
inc
xor
stc
out
outsl
push
push
cmp
shrb
arpl
sbb
xorl
shlb
cli
loop
scas
mov
rorb
and
lods
dec
movsb
inc
imul
jl
xlat
les
add
ffree
lret
mov
jge
iret
or
push
cmc
adc
cmp
xor
in
sbb
mov
mov
xchg
sub
imul
outsl
jbe
addr16
push
inc
mov
or
out
ret
mov
inc
jbe
mov
add
jnp
add
mov
cmovle
or
dec
inc
rcll
es
and
mov
jl
jo
and
adc
mov
xchg
test
leave
xchg
sti
xchg
inc
add
sub
sar
sbb
push
xchg
sbb
dec
test
imul
or
cwtl
lret
mov
inc
xorb
push
sub
into
push
cs
scas
movsl
sbb
xchg
sub
mov
shr
fildll
push
mov
shrb
std
inc
movsb
xor
movsl
mov
lds
adc
jmp
and
sub
sub
xor
lea
xchg
sti
cmp
xchg
add
ja
pop
cmp
inc
xor
add
fldl
mov
push
mov
jo
rcrl
ret
mov
outsb
js
xchg
ljmp
lock
pop
push
lcall
jae
and
out
mov
in
xor
test
int
pushf
jb
cld
repnz
adc
xlat
mov
inc
add
mov
fcoml
or
mov
fwait
push
ss
or
jb
mov
notl
cmp
and
scas
jno
dec
aaa
sbb
int
mov
xor
mov
cmp
push
enter
cmp
daa
mov
testb
inc
inc
lret
mov
fdivrp
or
jle
popf
jmp
sbb
sbb
aam
xchg
or
pop
cmc
push
cmpsb
cli
mov
roll
adc
lods
xor
cmp
add
mov
mov
inc
out
mov
push
loopne
icebp
outsl
ja
and
in
jae
test
push
sbb
pop
add
ja
add
sub
push
mov
es
or
push
mov
push
iret
clc
dec
or
pop
fbstp
das
out
add
gs
ljmp
pop
pop
inc
insl
or
xchg
push
pop
xchg
mov
or
xor
mov
lock
into
xor
or
cmovge
in
mov
mov
shlb
mov
addl
shr
test
xchg
mov
sbbl
jns
mov
mov
and
xor
lods
andb
fstps
sub
popa
in
rolb
xor
sti
pop
fbld
lods
push
inc
inc
repz
movsb
mov
in
push
stos
add
sub
das
movsb
sbb
and
ret
shlb
xor
sub
movsb
mov
es
or
and
cmpsb
or
test
inc
dec
or
lea
movsl
pushf
lret
aas
ss
jae
mov
hlt
xchg
lret
xchg
gs
loopne
dec
or
sub
sbb
pop
xor
sub
insb
mov
jmp
pop
add
mov
addr16
das
push
jl
rclb
aas
ficomps
adc
sbb
ja
lock
out
int3
cmp
or
sub
fists
scas
sub
cmpsl
cmp
mov
pop
jge
stos
fdiv
jmp
int3
ljmp
mov
addl
or
mov
or
jg
mov
mov
xchg
aaa
movsb
andl
mov
in
pop
xorb
push
cld
scas
outsb
ds
aaa
sub
int
cli
insb
dec
fimull
jmp
or
jle
rolb
cmc
out
mov
xchg
insb
lret
xchg
and
nop
jb
jg
xor
outsl
sbb
shrl
repz
insb
stc
mov
cmp
cmp
and
je
add
pop
enter
addl
add
inc
dec
lock
idivb
sarb
mov
fst
int3
jns
imul
test
loope
js
lret
pop
push
test
push
dec
rcrl
lret
push
test
fnstsw
pop
movsl
mov
xchg
inc
imulb
dec
fstpt
scas
stos
inc
cli
cli
lods
inc
jno
adc
aas
mov
sub
daa
inc
ds
and
sarb
mov
adc
into
jns
data16
test
in
fwait
push
movsl
jp
xor
sbb
mov
mov
shlb
push
jmp
aas
insl
fisubs
lods
fnsave
test
lods
jecxz
pop
dec
xchg
movsb
clc
stos
bound
testb
xor
mov
iret
ja
call
pop
aad
hlt
and
adc
movl
add
icebp
push
pop
inc
inc
jge
add
repnz
cmp
aas
adc
mov
cmp
mov
jg
fadds
add
insb
lahf
stos
push
inc
add
mov
inc
dec
mov
test
xchg
rolb
pop
mov
sbb
das
fisttpll
rcrb
rclb
je
add
in
push
mov
sub
aas
shll
out
dec
mov
outsb
mov
cmpsb
xor
popf
and
ss
test
mov
push
and
sarb
push
movsl
inc
push
xchg
pop
popf
test
pusha
popf
fisubl
lahf
popa
in
jmp
xchg
out
inc
enter
test
add
jns
aam
sub
rolb
sbb
shl
jnp
add
jae
sub
cmp
jmp
in
add
rcll
push
std
or
jecxz
inc
scas
dec
push
mov
loopne
mov
inc
neg
dec
mov
aam
cmpsb
jecxz
stos
jecxz
loop
mov
aaa
out
sbb
xchg
jmp
lock
add
sub
movb
or
fildl
popf
aad
jnp
call
inc
loopne
sub
bound
pop
or
dec
fiadds
icebp
jp
pop
fsts
and
scas
cmp
xor
adc
dec
pushf
jns
imul
mov
sbb
sub
rorl
mov
push
test
lods
lods
cmp
jge
movsl
push
stos
jmp
inc
jg
xor
mov
xor
daa
aad
js
and
pop
push
aad
mov
or
dec
cmp
jecxz
in
push
cmpsl
xchg
dec
or
and
add
xchg
dec
sub
push
jge
push
jbe
inc
sub
mov
fidivl
xchg
pop
fld
int3
in
or
xchg
imul
bound
inc
rorl
sbb
ret
outsb
adc
cmp
mov
mov
push
imulb
adc
outsl
mov
mov
dec
fs
add
out
jb
cli
ficomps
mov
pop
leave
cs
addb
add
ds
xor
mov
mov
daa
jmp
and
shll
mov
ret
push
jo
inc
sub
jmp
aas
lods
testl
into
sbb
add
lods
sub
sub
fcmovnbe
out
jae
daa
shll
into
cltd
cmp
in
jae
jecxz
jecxz
dec
dec
and
sbb
mov
jecxz
in
lahf
cwtl
mov
xchg
or
xorb
testb
mov
or
jbe
push
pop
adc
int
shl
mov
hlt
mov
jecxz
test
pushf
inc
int3
hlt
jecxz
mov
jg
pop
leave
inc
addr16
sub
pusha
shll
mov
negl
adc
sahf
shlb
jo
ficoms
xlat
mov
arpl
dec
pop
ja
ljmp
xchg
jmp
mov
cmpsb
jo
sub
adc
je
scas
repz
fiaddl
and
push
or
cld
sub
xchg
jo
mov
sahf
xor
and
lret
stos
ret
jb
cmp
cwtl
cwtl
lahf
shll
xchg
xchg
loopne
sti
leave
repnz
repz
mov
in
in
fimull
sub
add
xchg
fdivr
mov
pop
cmp
inc
jle
push
xchg
jmp
mov
cld
insb
xor
push
pop
sub
push
xchg
inc
or
arpl
lods
std
pop
sbb
lods
fisttpl
femms
loop
and
out
les
cld
or
mov
outsl
jne
xor
sahf
add
mov
filds
push
cmpsl
pop
adc
scas
cmp
rolb
lods
gs
push
mov
cmc
nop
jl
pop
fildll
add
and
jl
sbb
aas
inc
mov
adc
cld
add
sbb
add
xchg
xchg
adc
popa
shrl
inc
shlb
sub
je
ds
add
repz
clc
addl
pop
mov
or
adc
inc
je
out
sub
decl
repnz
movsb
jnp
imul
cmp
inc
loope
or
addr16
add
sbb
and
push
push
and
iret
fwait
add
out
jp
sub
xchg
or
scas
push
mov
xchg
mov
lods
sub
and
lret
stc
stos
mov
inc
ret
out
sbb
add
jecxz
pusha
andl
mov
mov
add
mov
xchg
movsl
enter
lock
icebp
sbb
push
push
repnz
das
mov
jo
sbb
fs
xor
movsl
and
popa
fistpl
pusha
data16
mov
pop
daa
pop
inc
fstpt
fwait
sbb
xor
aaa
push
mov
sub
sub
cld
fldenv
add
sbb
bound
fwait
jbe
out
in
js
fsubp
dec
cmp
dec
pop
xchg
sub
adcl
daa
inc
andb
or
fwait
dec
push
ficompl
cltd
cmp
sbbl
pop
lret
clc
lcall
jns
push
inc
jns
jo
sbb
inc
lea
int
pop
ficoms
mov
mov
stos
xor
push
out
add
mov
push
je
inc
inc
or
mov
sub
leave
adc
add
out
pushf
push
and
add
cmp
fcoml
and
mov
inc
push
decb
and
fstpt
insl
sbb
stos
loop
mov
mov
test
movsb
out
rcl
js
out
out
push
mov
sbb
stos
lret
cmp
out
or
jbe
xchg
cltd
sub
mov
daa
add
cmp
pop
push
cmp
dec
rcll
jp
jp
in
insb
enter
mov
dec
pop
adc
add
cmp
cmpsb
dec
fs
inc
mov
iret
out
stc
gs
stos
rol
cmp
jnp
lret
mov
push
or
out
test
mov
mov
pop
cmp
dec
jno
mov
lret
mov
sub
sub
pop
cmc
imul
sub
mov
push
mov
loop
fldl
mov
popf
jno
mov
sbb
mov
mov
pop
add
loope
in
mov
jg
sub
icebp
fsts
test
cli
faddl
pop
int
sbb
mov
sbb
and
ljmp
and
int
das
rolb
test
fbld
fistpll
sub
data16
xor
iret
dec
dec
pop
add
repz
hlt
sbb
add
push
arpl
jmp
pop
mov
movsb
and
xor
scas
add
push
les
test
mov
sbb
shll
push
ljmp
or
inc
and
fldenv
mov
mov
jo
mov
int3
or
mov
cs
clc
addr16
in
loopne
ss
inc
and
ljmp
in
xchg
std
ljmp
sbb
je
mov
mov
cli
cmpsb
add
stos
xlat
sub
xor
loop
inc
push
push
inc
addb
outsl
inc
mov
orb
xchg
mov
std
movsl
inc
jno
pop
out
lcall
inc
sti
jo
stos
dec
jp
add
mov
xlat
cmp
idiv
add
testb
loop
aad
sbb
int3
ret
arpl
fs
scas
xor
stos
jo
insb
mov
pop
mov
addb
arpl
lahf
jecxz
lahf
pop
add
push
addr16
mov
sarb
xchg
xchg
cltd
punpckhdq
scas
cmpsb
stc
dec
pop
hlt
daa
jmp
push
cwtl
dec
ljmp
mov
push
xchg
or
push
xchg
cltd
mov
inc
mov
push
sbb
rcr
xchg
subl
jl
in
sbb
mul
inc
popf
xor
push
ret
ret
movsl
out
enter
sub
sbb
fs
movsb
inc
or
xchg
cmp
mov
test
iret
mov
push
and
sub
movsl
inc
inc
mov
or
ss
stos
jmp
aam
cmp
test
pop
outsl
in
mov
and
inc
lods
lods
add
mov
out
inc
jl
dec
test
dec
imul
into
mov
jle
and
lods
sbb
sub
dec
adc
push
cwtl
mov
sub
je
xchg
cmp
bound
out
xor
sub
mov
and
rclb
icebp
lahf
shr
and
mov
leave
xchg
mov
push
dec
dec
pop
or
lea
push
mov
hlt
fmuls
aad
inc
and
inc
mov
repz
daa
in
popf
add
insl
shl
test
xor
scas
push
xor
fstpl
int
stc
inc
jne
outsl
movsb
test
ja
xlat
sub
lahf
outsb
scas
sbb
imul
push
cmpsb
test
cs
pop
iret
sbbl
push
aaa
pop
fstps
jg
flds
call
jo
mov
mov
test
cmp
mov
inc
cmp
pop
fadds
mov
mov
xor
mov
mov
test
cmpsb
push
arpl
push
fstpl
and
outsb
dec
sbb
testb
xchg
ret
adc
les
pop
mov
pushf
push
sub
pop
mov
clc
out
and
push
add
or
xchg
cmp
sub
scas
push
stos
add
imul
je
aas
test
xor
fcos
jmp
add
sbb
and
xor
insl
xlat
repz
push
lcall
fldenv
loope
sub
fwait
sti
sub
mov
out
pop
repnz
lcall
xchg
mov
cs
jmp
dec
mov
cmpsb
inc
clc
dec
pop
cld
loop
jb
cmc
loopne
push
add
jbe
sbb
aas
cmp
inc
into
bound
test
cmp
hlt
fnstcw
adc
inc
pusha
daa
test
sub
lret
pushf
jmp
cmp
add
aaa
sub
ss
std
aad
mov
fcomps
mov
out
mov
cs
add
add
jle
adc
fidivl
cmp
movsl
testl
iret
rolb
fwait
mov
jb
add
outsl
lahf
sbb
aad
int
push
mov
cltd
test
dec
push
cmp
movsl
idivb
dec
ficompl
or
and
xchg
shl
sbb
add
adc
icebp
xchg
hlt
inc
cmp
mov
mov
cld
and
adc
pop
loop
jnp
out
repz
xchg
dec
idivl
insl
pop
jo
js
fsubrl
push
lods
mov
mov
add
push
pushf
jne
xor
icebp
pop
push
test
pop
or
lock
inc
inc
int
jmp
cmpsl
test
inc
add
cmpsb
stos
fnstcw
into
test
add
aad
xor
lea
mov
fldenv
arpl
cs
ret
pop
in
enter
mov
inc
scas
leave
mov
fiadds
mov
add
xchg
inc
mov
mov
sbb
shll
sbb
cwtl
xchg
pop
xor
jo
popa
inc
testl
test
pusha
fidivrs
and
or
lods
xor
cmpsl
mov
and
mov
notb
mov
push
jae
notb
pop
enter
adc
xchg
movsb
lea
jg
ret
in
movsl
xor
jmp
lahf
sbb
xlat
sbb
call
and
negb
insb
out
jmp
cltd
add
mov
jecxz
das
dec
cmp
xor
inc
packssdw
or
lret
adc
movl
push
cmpb
push
mov
ret
sub
pushf
jle
sbb
out
dec
add
and
addl
pop
add
mov
cmp
lods
ja
push
or
lods
pop
mov
out
mov
mov
inc
jge
pop
sbb
mov
dec
ja
fidivs
fs
or
lods
mulb
sub
ret
scas
xchg
or
movsl
cmp
adc
test
xchg
cmp
fimuls
movsl
cmc
cli
imul
shll
fadds
or
insb
sti
dec
andl
push
pop
out
push
mov
sahf
xlat
scas
mov
pop
fidivs
mov
call
inc
popa
inc
jge
bound
inc
xor
xchg
mov
jecxz
mov
cmp
pop
pop
rorl
or
push
xchg
gs
xchg
adc
imul
or
push
xchg
mov
sahf
popf
es
xor
arpl
jle
into
aaa
xlat
pop
dec
inc
and
cmp
sbb
ds
pusha
add
add
ret
adc
sbb
nop
xchg
pop
add
or
mov
pop
mov
lods
push
imul
jle
pop
push
enter
and
dec
sub
xor
xlat
and
scas
jb
or
mov
mov
in
xchg
cmpsl
je
in
popa
lods
ljmp
movsl
and
flds
out
rcrb
mov
push
dec
lds
lcall
jno
bound
sbb
test
arpl
in
mov
gs
mov
rclb
sbb
call
flds
scas
inc
cmc
fnstcw
test
inc
push
mov
fidivs
aaa
addr16
hlt
fwait
push
pop
cmpsl
sub
test
ja
pop
rcrl
scas
es
test
mov
pop
aam
lods
mov
push
or
push
scas
or
adc
push
cmp
or
inc
lds
sub
dec
pop
or
rcr
stos
ret
clc
lea
dec
mov
pop
mov
adc
mov
lods
dec
mov
sub
lods
mov
ss
nop
sbb
pop
insb
dec
xchg
dec
lock
xchg
cld
cltd
arpl
cmpsl
inc
push
aas
lahf
lcall
mov
scas
xorl
lds
shlb
fisubl
into
and
xchg
add
jno
push
addr16
adc
mov
cli
int3
subl
add
cmpsl
rolb
or
push
imulb
inc
add
sub
jl
mov
sahf
pusha
mov
pop
andb
mov
mov
or
pop
add
dec
jo
adc
dec
dec
jne
or
idivl
lret
mov
in
push
pop
add
add
popf
and
sub
inc
or
dec
mov
xchg
jp
int
add
xor
add
pop
sahf
repz
and
mov
inc
adc
fsubrs
pop
inc
inc
out
pop
lret
dec
in
loopne
sbb
mov
xor
xchg
fldcw
xor
es
jecxz
jae
adc
xchg
jbe
cltd
int
mov
add
enter
je
adc
mov
mov
daa
jne
mov
nop
loope
sbb
enter
call
fsubl
mov
jb
int
xchg
sbb
jle
into
or
push
sbb
add
xor
test
jae
mov
push
rdmsr
testb
outsl
push
cmpsb
add
lods
popl
mov
mov
sub
adcb
sub
das
dec
dec
ret
pop
xor
dec
je
lret
movsb
pop
add
cmp
lods
fs
jp
xchg
imul
test
icebp
mov
xchg
jbe
push
rcl
nop
aaa
cwtl
movsl
push
dec
mov
shrb
sub
sbb
mov
push
hlt
dec
mov
add
dec
push
mov
fcmovne
fucomi
inc
mov
ret
fcoml
mov
fs
inc
mov
xor
out
pushf
aas
jns
dec
adc
aaa
mov
repz
bound
stos
push
stc
out
pusha
mov
out
mov
mov
sbb
cmp
adc
dec
pusha
shlb
inc
sbb
jo
arpl
iret
loop
dec
cmpsl
and
scas
push
js
sbb
out
insl
loop
sub
fdivl
add
jl
and
aad
mov
es
sub
add
push
in
jg
sub
dec
mov
je
pop
jnp
add
sbb
sub
outsl
imul
js
inc
xchg
xchg
rorl
cs
repnz
inc
pushf
fnstenv
xorl
je
cmc
mov
mov
dec
lea
icebp
movsb
xchg
inc
add
or
pop
pushf
in
testb
adc
pop
pop
mov
xchg
pop
xchg
push
xor
jmp
dec
repnz
jecxz
ja
es
add
stos
mov
call
jnp
pop
nop
in
dec
in
inc
mov
xchg
xor
or
jne
pop
xchg
call
pushf
test
inc
xor
jb
push
sbb
aaa
leave
test
cmp
push
fdivrl
rcrl
jnp
repz
adc
mov
je
test
lods
loopne
loop
dec
push
icebp
xor
cmp
icebp
jnp
mov
rorb
mov
fidivs
scas
xchg
sarb
sub
xor
and
sbb
push
movsl
xchg
pop
jecxz
loop
pushf
roll
fcoml
sbb
dec
add
dec
or
jecxz
xchg
or
inc
adc
out
sub
adc
fildl
js
mov
scas
test
bound
xchg
imul
add
cltd
imulb
lret
pop
sbb
mov
lret
xchg
push
sub
nop
test
ja
in
pop
sbb
mov
jbe
cli
enter
jb
out
xchg
nop
xchg
test
movsb
fnsetpm(287
mov
mov
mov
add
inc
je
inc
imul
outsb
out
popa
dec
xor
ljmp
jmp
lret
mov
scas
ret
dec
mov
xchg
roll
push
cs
addr16
push
cmc
push
cmpsb
lret
fnsave
ret
pop
gs
xor
hlt
in
xchg
outsl
jmp
cmp
loop
pop
cs
arpl
sub
ret
cmpl
clc
out
adc
mov
xchg
loope
insl
mov
inc
mov
mov
lahf
mov
stc
jp
imul
loopne
mov
inc
dec
shlb
xchg
fwait
cmpsb
add
sub
test
pop
dec
pop
mov
loop
dec
and
xchg
sbb
loope
rcll
inc
nop
sahf
or
mov
push
pop
lods
mov
in
cmp
jmp
das
add
ret
pop
xlat
xchg
bswap
push
xor
pop
mov
rcll
cmp
rorb
in
leave
cwtl
adc
pop
pop
mov
arpl
push
insl
jnp
add
sbb
xchg
mov
fwait
adc
ljmp
pop
sbb
insl
dec
imul
and
scas
jecxz
add
mov
pop
stc
jg
outsl
xor
mov
push
jbe
gs
fdivs
mov
popa
out
dec
repz
std
subl
es
hlt
xchg
adc
movsl
lea
xchg
filds
in
lahf
cmpsb
push
mov
jae
push
das
or
jge
call
push
ljmp
xchg
lcall
and
ss
cmp
call
dec
bound
rorb
rolb
mov
shl
add
sub
xlat
and
movsl
popa
push
js
test
cmpsl
pop
and
mov
cwtl
popf
mov
or
push
mov
add
add
scas
pop
xor
popf
dec
int3
dec
jbe
movb
mov
and
pop
xchg
xchg
test
fldenv
js
pop
mov
xor
jnp
adc
sub
mov
int
push
jge
fdivrs
mov
movsb
pop
sub
in
enter
jae
or
and
jmp
xchg
push
adc
jo
inc
jo
aas
add
rol
mov
sbb
inc
ret
push
push
inc
xor
mov
cltd
push
xor
lods
out
ffree
or
popf
ror
hlt
push
inc
mov
jb
inc
fwait
xor
pop
cmc
ret
mov
xchg
adc
pop
pop
lret
mov
into
imull
fcmovnbe
jg,pt
sahf
push
lret
jne
scas
fimull
pusha
mov
out
push
or
sbb
cmpps
arpl
dec
sub
loop
cld
lret
fidivs
xchg
fcmovne
ss
xchg
stc
sahf
push
in
sub
iret
mov
mov
rclb
mov
data16
ja
scas
lret
call
in
test
lock
ja
mov
xor
pop
loope
xchg
addl
push
movsl
out
lcall
sbb
xor
add
loopne
loop
xchg
incb
push
push
nop
jbe
lock
mov
xchg
jo
dec
pop
jp
dec
mov
sbb
jmp
and
pop
cmp
push
out
xchg
int
stc
dec
mov
lock
test
jmp
dec
cmpsl
and
inc
bound
rcrl
gs
sbb
sbb
jae
ret
mov
lock
in
lret
jae
ss
js
dec
add
pusha
scas
pop
stc
stc
cmp
jnp
sub
xchg
scas
movsl
xor
push
jne
pop
shl
leave
or
mov
sbb
movsl
stos
test
std
lds
push
jns
movsb
repnz
fsubl
mov
mov
sbb
mov
data16
or
mov
xchg
les
imul
pop
sti
fninit
push
rcll
pop
cli
xchg
jno
inc
mov
adc
arpl
icebp
pop
stos
cmp
daa
in
adc
lods
daa
xlat
imul
push
inc
xor
add
movsl
aaa
inc
inc
push
cmp
movsb
lods
cltd
sub
in
sub
mov
fwait
arpl
mov
dec
and
addl
pop
in
inc
shlb
mov
jnp
dec
scas
ficoml
cmp
and
inc
lcall
outsb
push
xor
xor
add
insb
xor
cli
and
push
push
mov
nop
and
xchg
out
adc
sbb
rol
pushf
ds
pop
mov
xchg
lret
jge
repnz
xchg
mov
je
rorl
cmc
loope
mov
jne
jne
xchg
push
mov
idivl
mov
inc
push
push
or
mov
xchg
in
dec
orl
jmp
xor
sti
mov
lods
sbb
mov
lret
mov
push
test
add
xor
sub
push
xchg
mov
es
inc
sbb
fcmovbe
sbb
or
pop
cmp
jg
fcom
fisubl
popa
lahf
mov
daa
mov
shlb
push
aam
or
cmp
fincstp
in
dec
fbstp
xchg
jmp
mov
sub
jmp
repnz
lret
pop
push
outsb
add
shll
jmp
rclb
shl
popf
repz
and
dec
push
daa
int
cmp
stos
cmp
shlb
pop
jp
lret
ror
mov
xor
enter
push
lcall
test
mov
sti
dec
std
and
adc
adc
cld
daa
sub
addr16
mov
out
test
loop
outsb
pop
subb
xor
lret
mov
nop
xor
or
and
sub
xor
call
dec
add
leave
mov
std
cmp
int3
fwait
push
lcall
test
push
adc
or
jge
pop
scas
out
popa
xlat
xlat
mov
sub
xor
cltd
insb
push
dec
xor
cs
cmc
jmp
inc
dec
xor
xchg
mov
pushf
std
ja
mov
ja
cmp
test
dec
mov
add
sub
dec
push
call
fsubs
xchg
mov
mov
in
dec
push
sbb
in
and
int3
xor
push
pop
pushf
cmp
xor
cwtl
mov
xchg
pop
xor
sbb
xor
xchg
push
in
push
sub
shl
jo
mov
popf
and
bound
jg
dec
or
fcmovbe
and
shll
negl
divl
inc
push
fwait
xchg
push
cs
inc
adc
popf
jo
test
dec
pop
fisttps
xchg
in
pop
mov
pop
jecxz
push
dec
push
in
iret
adc
ds
xor
pusha
sub
mov
adc
cmp
pop
jne
inc
xor
cmpsl
mov
cmp
insb
jge
movsb
es
imul
pop
jae
sarb
testb
push
stos
pop
pop
rcr
mov
pop
pop
pop
test
add
cwtl
pop
add
repz
mov
rolb
call
mov
mov
addb
and
sahf
outsb
fcoml
push
lods
push
pop
cmc
sbb
insb
call
sbb
xor
sub
sub
mov
lret
lahf
in
mov
testb
sub
mov
jne
divb
mov
mull
imul
jnp
push
or
pop
pop
int
mov
notl
mov
lock
xchg
ret
cmp
jb
push
add
mov
push
call
mov
insl
dec
dec
out
clc
mov
rclb
cs
and
mov
adc
notl
sahf
mov
xchg
rcl
mov
stos
les
mov
pop
ror
movaps
hlt
lock
jge
xor
mov
and
js
hlt
dec
jg
scas
fcoms
inc
sbbb
jmp
dec
movsb
sbb
clc
jne
adc
mov
pop
push
mov
ret
pusha
and
sbb
mov
int
inc
testb
leave
dec
mov
sub
cmpsb
fstps
sub
lret
imul
clc
loope
ret
std
cmp
out
cmp
test
dec
fsts
das
mov
xor
sub
jns
mov
adcl
mov
xor
repnz
scas
popf
inc
sbb
mov
sbbb
xchg
test
add
mov
inc
imul
mov
mov
jge
int3
stos
mov
sbb
sbb
sub
das
nop
or
in
or
cmp
leave
pop
popa
loope
sub
mov
mov
loope
in
jnp
js
test
xchg
mov
sbb
xor
data16
push
ror
rorb
stos
incl
fldt
cmpl
popl
mov
jg
cmc
mov
dec
scas
jge
cmp
pop
pop
xor
mov
adc
pop
out
jg
mov
add
xchg
out
aaa
lahf
jb
jae
sub
mov
jns
dec
xchg
push
mov
clc
sub
pop
xor
lcall
in
mov
ds
aaa
ja
rcl
sub
add
loop
push
stc
addl
es
adc
in
pop
in
test
inc
lcall
dec
mov
dec
loope
pop
sub
adc
bound
mov
data16
adc
ret
cmp
mov
sbb
adc
mov
add
stos
jg
cmpsb
pop
or
inc
dec
mov
cmp
or
das
inc
imul
mov
aas
int3
mov
adc
call
add
testl
sub
inc
xorl
add
aam
jno
adc
cs
sbb
xorl
fldt
xchg
xor
mov
in
popa
dec
cld
ss
int
or
mov
movsb
jmp
cli
add
and
and
add
push
pop
sbb
ss
into
cmp
jmp
cld
movsb
dec
push
jo
data16
inc
jns
push
push
outsl
cli
ret
mov
dec
lods
outsb
mov
shll
add
adc
push
popf
arpl
or
in
in
insb
push
pop
xchg
sbb
lods
add
pop
cltd
push
and
cwtl
xchg
cmpsl
inc
mov
aam
insl
mov
mov
cmp
imul
popf
sbb
stos
sbb
push
iret
rcrl
notl
sub
pop
cmpsl
jne
mov
scas
fmulp
movsl
imull
pop
push
sub
push
mov
pop
cmp
jge
aam
xchg
jmp
insl
inc
mov
scas
cs
adc
adc
fadd
sbb
sbb
sbb
lea
push
xchg
mov
sti
fnstenv
add
sub
adc
xlat
lock
cmpb
pop
mov
loop
ja
adc
lahf
xchg
sub
cs
aad
scas
mov
je
adc
cmp
das
or
gs
sbb
sbb
sbb
repz
insb
aam
sahf
hlt
sub
cltd
les
fildll
inc
mov
add
add
lods
add
popa
gs
jae
mov
loopne
cmpsb
pop
mov
adc
jge
iret
js
xchg
int
jge
pop
mov
sbb
out
inc
sbb
mov
jecxz
sti
imul
gs
sahf
jl
insl
xchg
cmp
pushf
mov
mov
xchg
or
pop
call
cli
outsb
push
cltd
fistpll
mov
push
push
push
lods
pop
movsb
xor
xchg
loopne
push
pop
mov
mov
dec
push
cmp
nop
sbb
jb
jns
in
sub
pop
in
inc
mov
mov
mov
mov
test
mov
adc
insl
push
inc
adc
insl
add
dec
mov
sub
orb
adc
xor
stc
mov
ret
xor
mov
loopne
cmp
xor
mov
mov
push
stos
int
pop
push
pop
imul
mov
dec
and
dec
mov
and
and
dec
jae
push
into
notb
sub
loope
js
stc
and
int
aas
push
std
mov
inc
cwtl
or
das
loopne
out
mov
lds
mov
mov
sub
jp
jb
sub
stos
stc
lea
mov
and
adc
mov
popl
xchg
lea
nop
jbe
push
loope
push
shlb
ss
pop
jbe
jmp
and
nop
rol
sbb
cld
pop
test
fnsave
adc
xchg
mov
jns
rep
clc
lcall
dec
inc
mov
mov
mov
insb
mov
dec
test
fcmovne
loope
fidivl
mov
ret
xor
push
fstp
jecxz
inc
push
and
adc
xor
jo
push
mov
scas
sub
push
aad
sahf
fidivs
push
push
jb
aam
jge
sbb
push
das
or
pop
mov
xchg
shl
pop
iret
jns
test
adc
ljmp
rolb
ret
movsb
sub
mov
inc
insl
pop
adc
add
pop
mov
dec
sub
mov
cmpsl
nop
cwtl
jno
test
and
cmpsl
dec
scas
jnp
cmp
lret
in
cmp
push
sub
ret
ja
inc
movsl
jns
sub
cmp
sub
je
mov
or
push
fcmovbe
repz
in
out
mov
sub
dec
and
cmovb
xchg
pop
jmp
mov
movsb
pop
push
cltd
jo
nop
cmp
sub
cmp
inc
mov
clc
mov
adc
push
dec
xor
orb
leave
mov
pushl
dec
lret
jo
es
jp
daa
or
inc
aaa
aaa
cmpsl
sub
shl
jle
mov
and
dec
push
or
outsl
rolb
es
loopne
fsts
divl
mov
jbe
xorb
pop
push
nop
pop
out
mov
adc
nop
icebp
repnz
ficomps
sbb
jns
or
addr16
add
test
in
mov
sbb
dec
pop
sub
loop
mov
jbe
jp
lahf
adcb
lret
mov
inc
rcrb
adc
mov
inc
mov
test
push
cmp
roll
flds
or
ror
dec
scas
xchg
out
sti
jbe
dec
jne
std
gs
and
loope
mov
in
cwtl
xchg
sar
lock
enter
enter
test
pusha
jecxz
push
popf
xor
fisttpll
pop
inc
push
adc
mov
imul
pop
stos
push
cmp
sbb
daa
xchg
scas
mov
pop
adc
decl
lock
rcr
mov
fstl
lds
push
sbb
cmpsl
xorb
fnstenv
loop
xchg
sahf
mov
xchg
test
imul
shrb
mov
xchg
sahf
repz
jmp
pop
adc
lock
repnz
ss
sub
fiadds
jne
sbb
jb
mov
mov
mov
pop
jle
lds
jl
lahf
repnz
clc
ss
mov
push
jmp
decb
call
mov
aam
push
inc
lcall
adc
clc
filds
cmp
mov
adc
loop
sbbb
dec
jmp
in
pop
dec
vucomiss
imul
mov
adc
lahf
mov
xor
jo
in
mov
cs
push
or
sbb
push
ret
int
cmpsb
lea
pop
je
mov
in
and
push
cs
hlt
push
mov
test
add
dec
or
inc
mov
mov
scas
pop
outsb
repnz
sbb
outsl
mov
adc
ret
cli
push
sub
mov
jne
inc
add
mov
fwait
xor
clc
xor
pop
jle
add
or
jb
inc
xchg
add
pop
push
imul
jg
in
and
pop
loope
xchg
dec
aaa
shlb
popf
mov
and
mov
inc
je
mov
or
loop
out
lods
push
in
lods
mov
xchg
aad
es
xor
outsb
stc
jnp
out
gs
lret
cmp
inc
mov
mov
or
or
flds
lods
mov
sbb
xchg
aaa
or
adc
test
xlat
ja
xor
rorb
mov
dec
add
sbb
inc
or
inc
inc
rol
mov
cwtl
dec
sub
pop
fs
xchg
out
rclb
push
xor
arpl
push
push
mov
orb
addl
ficoml
lods
xchg
jecxz
push
paddb
bound
xchg
jmp
out
xor
or
xchg
inc
cld
imul
loope
cmp
test
or
cmp
test
sbb
dec
xor
jp
adc
ret
lret
ljmp
fdivs
cmp
dec
cmpsl
popa
leave
and
sbb
push
pop
test
sar
outsl
pop
repnz
or
cmp
add
insl
popf
sti
hlt
lahf
pushf
ret
aad
inc
bound
sub
inc
push
cmp
shr
bound
stc
iret
sti
icebp
pop
lret
inc
mov
fcmovnu
loope
jno
es
pushf
mov
lods
adc
mov
stos
add
sub
mov
and
cmp
lods
jns
rcrl
fadds
pop
or
or
jp
clc
add
sbb
add
inc
jo
push
mov
lahf
jne
popf
das
outsb
mov
sbb
hlt
lret
ja
or
iret
in
imul
xchg
scas
jp
pop
add
ret
nop
lea
mov
push
es
movsb
sbb
flds
mov
call
cmp
js
jae
push
lds
lods
test
and
adc
add
addl
and
pop
inc
jno
test
movl
push
mov
mov
sbb
mov
jl
jo
lcall
xchg
or
aad
aad
lcall
addr16
mov
mov
cmp
cmp
fwait
sbb
push
fwait
pop
inc
insl
xor
int3
inc
dec
stos
imul
mov
jae
test
jbe
jl
scas
push
add
test
shll
jns
jmp
adc
int3
fistps
xchg
add
mov
xor
mov
int3
cmpb
rol
addr16
movsl
jg
push
dec
xchg
xlat
xor
loopne
shrb
mov
fdivr
xor
add
add
cmp
ret
cmpsb
adc
mov
or
nop
cmpsl
cmp
cwtl
stc
outsl
sti
xchg
ja
mov
sbb
int3
fidivl
lock
xlat
loope
test
rcrb
mov
cltd
mov
and
ss
sbb
ja
loop
push
jmp
test
jae
ds
push
pop
jno
mov
or
pop
sub
imul
js
jmp
cld
sahf
popf
xchg
or
adc
daa
jmp
in
or
fisttps
sub
inc
mov
mov
pusha
loop
sbb
jno
out
mov
ja
or
or
jp
ret
lret
outsl
push
dec
cmp
movsl
mov
fisubrl
fisubs
or
sub
fsubrl
mov
repnz
jmp
and
xchg
jbe
dec
loope
cld
push
or
push
jae
stc
loope
mov
popf
mov
jmp
xlat
faddp
inc
xor
outsl
xor
lods
ret
push
gs
lods
mov
arpl
mov
out
add
mov
fldl
mov
cmp
scas
xchg
xchg
push
xor
cld
xchg
xchg
cmp
stos
cmp
sub
push
jp
xchg
in
jge
push
mov
test
imul
or
mov
test
cmpsb
lea
dec
loope
dec
add
sbb
pushf
mov
jle
cmp
bound
fwait
rcrl
add
xlat
mov
int
push
xchg
sbb
data16
ret
test
adc
push
stos
subb
aam
test
iret
push
mov
jge
scas
mov
into
inc
in
jp
push
or
pop
popf
and
push
pop
std
push
pop
cli
ror
stc
adcl
mov
pusha
pop
repnz
jl
push
arpl
dec
sub
pop
sahf
test
xor
ret
xor
leave
or
add
and
inc
bnd
ficoms
cmp
nop
and
int3
insb
mov
addr16
xchg
div
pop
jecxz
lds
push
and
data16
add
pop
inc
inc
mov
lret
aaa
xor
ja
int
cmc
test
int
mov
or
push
and
fisubrs
insl
stos
loop
xchg
push
fcmovb
rcrl
cmp
sub
repz
sbb
es
xor
mov
fisubrl
repnz
dec
in
mov
jg
xchg
jp
fcmovnb
lret
pop
scas
pop
les
test
jb
sub
jnp
flds
popf
or
pop
scas
std
inc
pusha
xor
loop
and
xor
xor
dec
fwait
insb
inc
scas
sub
inc
in
fiaddl
testl
mov
je
mov
pop
test
push
sub
or
sbb
lods
lods
leave
pop
test
xchg
cltd
lock
cwtl
cltd
mov
call
mov
and
cmc
aam
int
jbe
mov
imul
data16
jb
aad
adc
dec
and
or
lods
repnz
xor
imul
fistpl
jl
xlat
cmp
push
dec
mov
andb
in
outsb
enter
in
iret
hlt
cli
ds
xchg
sbb
add
pushf
or
std
cmp
and
xchg
mov
in
jp
push
xchg
cmp
stc
xlat
mov
dec
dec
in
test
in
pop
push
xchg
cmp
out
ljmp
mov
pop
sub
outsb
xor
dec
out
push
test
mov
pop
negb
cmp
xchg
jl
lds
sbb
or
cmp
mov
cs
mov
out
cmpsl
daa
mov
outsb
gs
add
dec
xchg
dec
mov
aam
movsl
test
mov
mov
sbb
lahf
jno
mov
sub
fdivrl
and
mov
or
stos
xor
inc
adc
je
sub
push
jno
nop
push
loope
mov
xor
xchg
mov
in
jo
jle
push
es
scas
pop
xor
jae
arpl
dec
sbb
lds
mov
mov
and
and
std
sbb
xlat
dec
into
out
add
fistpl
cs
xchg
in
adc
das
push
in
leave
lret
lahf
pop
cmp
cld
add
adc
lea
scas
cmpb
jmp
xlat
das
and
cmp
mov
sbb
add
into
fnstsw
adc
sbb
xor
inc
and
mov
hlt
fwait
lret
fwait
mov
push
and
in
sbb
sub
pop
rorl
mov
pop
fld
push
jb
add
daa
cmp
mov
jnp
loopne
mov
sub
adc
sahf
lods
rcr
out
mov
test
sub
xchg
popf
shll
push
push
dec
aad
xchg
aas
cmp
and
mov
cs
addl
aad
outsl
aas
cwtl
cli
and
fstpt
movsl
dec
jo
mov
push
movsl
shll
out
pop
add
insl
jmp
enter
and
xor
push
sbb
and
fimuls
adc
xor
lret
js
imul
cmp
dec
mov
pusha
mov
jmp
shlb
pop
xchg
inc
je
fsubl
daa
push
and
cwtl
push
cwtl
es
adc
out
aam
cmpsl
std
sub
sbb
mov
dec
adc
jbe
insl
sbb
mov
popl
mov
hlt
mov
pop
xchg
xadd
sub
inc
decb
adc
fimull
int3
mov
jp
dec
fstpl
jle
inc
sub
ja
popf
nop
cmpsl
pop
cmc
test
fadd
or
adc
fisubrs
adc
es
cmp
sub
and
inc
dec
jmp
cltd
mov
cmp
fdivrs
shl
hlt
vpmacswd
in
xchg
sub
dec
sub
das
mov
scas
push
ljmp
aaa
std
sub
fcoms
out
xchg
jecxz
cmp
pop
or
cmpsb
std
repnz
fnsave
adc
call
imul
nop
inc
or
cmp
mov
sbb
mul
outsb
push
movsl
cld
cmp
out
jno
popa
inc
and
fwait
or
add
sbb
lea
lret
mov
adcb
lret
push
xor
dec
cltd
jbe
xor
jp
cli
mov
call
ret
out
jns
jge
mov
add
push
mov
push
mov
jns
push
mov
daa
xchg
mov
cli
or
xor
adc
pop
push
test
nop
stos
mov
jo
add
dec
js
out
pop
xor
push
sbb
fstps
pop
fmuls
and
dec
int
add
fwait
lea
add
mov
pusha
pop
sub
in
add
jle
pop
negb
pop
gs
sbb
adc
or
mov
lock
std
imul
pop
cmp
sbb
xchg
push
popf
adcb
sbb
fnsave
push
dec
xor
adc
mov
enter
push
cmp
xor
sub
xlat
or
jne
sub
std
push
cmc
cmp
mov
lea
aas
out
lret
jle
ljmp
icebp
xchg
pop
inc
ffreep
mov
mul
cmpsb
xor
xor
mov
js
scas
int
int
stc
dec
pop
outsb
pop
test
pop
stos
outsb
movsb
stos
sbb
add
mov
jo
bswap
outsl
ret
fsubr
cltd
jns
roll
jg
cmp
jnp
push
push
mov
xlat
xor
xor
je
fwait
push
mov
xor
addr16
jo
rcrb
and
sahf
inc
mov
pop
sbb
fs
daa
dec
dec
hlt
push
dec
mov
in
into
xor
repz
dec
mov
outsb
push
inc
and
jmp
mov
daa
dec
lods
push
push
lret
imul
fists
popf
adc
add
je
hlt
jg
mov
mov
inc
pop
cli
add
pop
call
imul
in
jp
fldcw
xor
mov
lret
pop
out
push
fstl
inc
lahf
jno
cs
fildll
mov
cmpb
out
mov
es
sub
movsb
into
test
rcll
add
nop
call
pop
jge
mov
mov
fwait
xorl
lret
push
roll
mov
testb
sbb
dec
push
and
sbb
inc
pushf
repnz
xor
and
lcall
cmp
adc
call
lcall
jmp
add
mov
mulb
out
mov
push
out
imul
shrb
test
mov
lea
sub
push
mov
mul
push
xchg
je
jg
outsl
xorb
jae
enter
inc
and
loopne
lods
push
call
push
dec
imul
xchg
xlat
push
push
adc
in
pxor
sub
inc
repnz
jge
mov
movsb
fucom
insl
dec
sbb
jns
cmpb
lock
push
and
dec
xchg
adc
lcall
int3
je
sbb
mov
ret
movsb
sub
xor
inc
mov
icebp
or
mov
add
aas
and
iret
inc
mov
jnp
push
repz
je
push
add
out
xor
nop
mov
cmp
push
sbbb
cmp
sahf
dec
mov
rcrl
enter
ficomps
pop
fisttpl
xchg
xchg
sbb
std
xchg
cmc
push
push
xor
xchg
lcall
mov
cli
mov
and
out
pop
sbb
loope
and
js
push
xor
mov
ja
in
inc
lods
cmp
pop
sbb
lcall
xchg
add
lods
and
push
lods
add
push
lcall
ljmp
push
jmp
out
insw
mov
mov
ret
sbb
xchg
mov
rcl
or
pop
fucomip
and
stc
clc
scas
icebp
ja
out
ret
hlt
and
data16
mov
sti
jb
in
je
in
fildl
mov
cmp
in
je
and
cltd
mov
jns
mov
pop
pusha
xchg
mov
test
push
mov
repz
arpl
adc
adc
jae
sbb
loopne
sbb
jp
jp
in
xchg
pop
jl
mov
mov
repnz
insb
stos
xchg
adc
cwtl
stc
and
fs
inc
cmp
clc
lret
fs
sub
push
add
mov
add
orl
lret
mov
cli
push
icebp
lea
movsl
push
jle
aad
clc
ret
mov
xor
adc
jl
xor
or
mov
mov
stos
bound
inc
xor
aad
dec
and
or
push
sub
sub
cld
xor
pop
xchg
sbb
push
mov
rorb
sbb
lahf
xchg
cld
mov
js
sbb
mov
jns
outsb
js
mov
xchg
fwait
cmp
push
aas
push
adc
ds
push
pop
in
shl
add
xchg
aad
vorpd
cmpsl
sub
xchg
pop
cmc
pop
xchg
mov
mov
cwtl
mov
sub
and
inc
outsb
call
stc
ficoml
bound
push
mov
adc
push
rcr
divb
test
adc
fnstcw
and
cmc
insl
jmp
mov
adcl
test
mov
in
fisubl
and
enter
xchg
aad
dec
mov
clc
das
xchg
mov
int3
insb
fldl
pop
sbb
aas
dec
repz
mov
adc
inc
bound
push
xlat
lret
or
pop
sub
popa
ljmp
sbb
add
jno
fimull
or
inc
mov
pop
aam
enter
sahf
jns
hlt
pop
adcb
xor
adc
sti
pushf
push
pop
add
inc
mov
aas
repnz
xor
lcall
lcall
mov
test
test
jecxz
leave
dec
int3
imul
outsl
in
orb
and
cmp
out
hlt
cmp
inc
daa
sti
pop
jno
or
stc
push
lahf
stos
push
adc
insl
cmp
dec
outsl
icebp
int
dec
push
inc
enter
dec
and
pushf
push
scas
cmp
in
dec
insl
push
les
movsl
inc
std
pop
jge
js
mov
cmpsl
sbb
cmp
das
pusha
add
sarb
hlt
mov
in
fwait
inc
dec
cmova
js
std
es
aam
imul
or
xchg
nop
lock
loope
and
push
jo
xor
pop
cmp
lcall
lock
xchg
mov
push
inc
xchg
fadds
lea
outsb
mov
aam
fdivrl
xchg
mov
je
dec
xorb
cmp
lods
and
xor
ds
jb
dec
shll
mov
push
jae
loop
jp
and
push
dec
pop
push
shlb
dec
loopne
dec
insb
sbb
std
test
and
cmpsb
jmp
xlat
test
cmp
or
test
repnz
js
int
jns
aam
xchg
jbe
adc
nop
inc
imul
mov
xchg
sub
push
test
hlt
dec
fs
lret
pop
push
das
push
test
push
sub
jbe
add
inc
popf
les
cld
movsb
stos
pop
ds
dec
sahf
clc
ret
sbb
iret
inc
mov
sub
lea
mov
push
bound
and
push
jmp
or
and
xor
arpl
sbb
xchg
dec
mov
fwait
call
aaa
jl
inc
les
jp
or
aaa
addr16
fwait
mov
hlt
test
sbb
scas
mov
aaa
push
fwait
push
mov
outsb
int
xchg
push
lea
out
cmp
adcb
jecxz
inc
add
sbb
in
aas
pushf
arpl
test
mov
inc
dec
jg
xorb
or
call
dec
loope
pop
gs
mov
jae
es
sbb
dec
scas
xor
mov
jge
sbb
out
pop
mov
les
xchg
push
mov
jmp
pop
or
jbe
jne
popf
jo
shll
jge
cmp
adc
pop
lahf
pop
mov
add
in
aad
adc
dec
pop
mov
test
or
paddd
sbb
add
or
cmp
fsubrs
dec
sarb
mov
in
loopne
das
mov
fistps
cli
pop
and
mov
test
sarb
aaa
xchg
or
or
fsubl
mov
test
mov
lcallw
stos
or
flds
es
push
xchg
aam
addr16
gs
xor
dec
dec
adc
mov
mov
aaa
ds
cmpsb
push
mov
mov
addr16
stos
lds
mov
jmp
jne
jno
xchg
inc
jp
or
dec
dec
je
negb
jle
addr16
out
arpl
mov
call
mov
popf
clc
gs
sarb
sbb
inc
aam
xor
aaa
hlt
cmc
xchg
shl
data16
or
mov
mov
imul
mov
repnz
pop
cld
mov
add
push
jmp
xor
push
pop
dec
inc
sub
or
loopne
cmp
push
mov
mov
loopne
dec
fisubl
push
mov
arpl
loopne
mov
adc
add
sarb
cmc
outsb
mov
roll
arpl
and
movsb
out
in
mov
enter
ror
jne
ja
sbb
and
mov
std
add
xchg
out
mov
sbbl
test
ljmp
push
out
call
push
lcall
jbe
mov
and
inc
pop
ljmp
push
mov
arpl
add
add
push
add
sbb
inc
push
fwait
stc
cmpsl
lods
in
test
xchg
stos
lock
dec
pop
or
enter
lahf
test
or
jmp
push
out
jg
cmc
aas
or
xor
mov
movsl
mov
add
outsl
xchg
popf
adc
fimull
call
andb
imul
stos
cltd
mov
lcall
pop
mov
popa
test
jg
stos
add
mov
inc
add
insl
stc
mov
fdivr
adc
inc
pop
mov
sub
mov
movsb
xchg
outsb
xor
in
orl
inc
cs
ret
mov
jns
jp
ds
xchg
pop
xor
in
fdivs
mov
sbb
imul
dec
jmp
sbb
sub
xor
fcoml
les
int3
pop
lea
inc
or
add
push
or
sub
stc
daa
roll
fcmovne
and
and
popf
pop
movsb
ret
mov
in
cli
and
idivb
rolb
cmp
mov
mov
mov
fxch
fcoml
and
mov
call
jae
repnz
fbld
dec
mov
add
xchg
out
loopne
push
sti
imull
jbe
push
fidivrl
adc
js
push
inc
sub
dec
fbld
cmpsb
sub
icebp
imul
push
pop
ret
dec
gs
add
notb
popa
int
push
in
aad
push
pop
in
adc
stc
repz
xchg
in
and
pusha
jnp
imull
cmp
sub
mov
or
push
jecxz
repz
or
cmp
repz
sub
es
fisubrl
sahf
aam
xchg
clc
sub
sbb
shrb
ja
and
push
mulb
out
or
sbb
push
mov
enter
das
jmp
in
ficompl
cld
xor
in
sbb
mov
test
mulb
inc
jo
iret
clc
dec
aad
movsw
xchg
vphaddudq
or
ret
rcrb
jle
pop
shrb
pop
or
scas
icebp
push
lret
lahf
inc
outsl
popf
std
idivb
xchg
aam
mov
dec
enter
mov
dec
arpl
xor
dec
adc
insb
jge
sbb
cmpb
dec
mov
aaa
pop
mov
jno
pushw
sbb
adc
jecxz
cmc
out
test
or
cmp
or
call
push
push
add
in
mov
xchg
cmpl
add
gs
fsubs
adc
imul
cmp
test
fimull
pop
add
or
push
leave
lods
or
and
push
sahf
cmp
pop
setp
sbb
xor
idivl
mov
dec
pop
lds
mov
in
je
mov
stos
das
xchg
mov
js
inc
insl
or
cmp
repnz
sub
ds
fisubl
add
cmp
adcl
add
sub
adc
aas
inc
inc
std
stos
dec
adc
ret
jecxz
adc
ds
mov
rcll
mov
negb
test
aas
stos
push
aam
and
jecxz
jno
inc
jmp
sahf
imul
xor
push
and
mov
shrb
inc
xchg
pop
outsb
or
fs
insl
mov
lret
add
scas
scas
inc
pop
cwtl
jnp
cmp
cmp
in
and
icebp
sub
push
push
and
lods
or
imul
cmp
add
or
out
mov
loopne
aad
xchg
lret
daa
inc
mov
popa
out
or
inc
add
mov
in
dec
mov
fwait
inc
push
fcomp
fistpll
adc
pop
hlt
push
inc
int
push
cmc
inc
dec
pop
insl
and
pop
orl
cmp
jmp
dec
movsl
push
pop
loope
push
inc
insb
out
or
out
adc
fcoml
or
push
pop
in
and
sub
sahf
popf
sbb
add
mov
or
mov
scas
notl
mov
inc
insb
test
fcoml
sbb
xchg
mov
rcll
push
lods
sbb
pop
sbb
push
int3
dec
stos
bound
sbb
jg
sub
out
lock
push
adc
aas
and
insl
jl
sarl
mov
daa
push
add
fnstsw
dec
ds
insl
pop
xchg
out
xchg
jmp
stc
rcrl
negb
orl
repnz
xor
fsubrp
andl
in
lods
cli
jns
push
mov
mov
faddl
pop
or
mul
and
shrb
imul
or
dec
and
jns
jno
loope
push
out
aad
xlat
fsub
add
shr
lcall
ds
mov
sti
mov
rcrl
sbb
fldenv
sbb
push
in
lods
or
mov
push
dec
and
movsb
imul
xchg
jp
mov
cs
pop
imul
fs
xchg
ds
std
ja
lcall
dec
lahf
mov
mov
sub
enter
aam
xor
jmp
sub
adc
stos
push
mov
pop
lods
and
adc
shlb
or
push
adc
push
stos
stos
or
aas
mov
pushf
mov
mov
mov
jno
adc
xchg
pop
fisubrs
loope
out
mov
mov
pop
xor
scas
fwait
cld
test
in
mov
xchg
mov
cwtl
add
mov
aaa
dec
mov
fsubrp
sub
pop
lahf
lahf
addb
push
or
jmp
sbb
add
add
loope
adc
pushf
inc
add
mov
test
fwait
aas
add
sbb
and
leave
fst
push
mov
jbe
add
popa
out
mov
scas
arpl
test
imul
das
cmpsl
dec
cltd
push
orb
push
rorl
push
loope
or
ja
sub
push
xlat
fcoml
aas
add
lcall
movb
mov
popa
test
test
xor
jnp
mov
lahf
dec
aam
test
addr16
xorb
sub
dec
xor
pushw
dec
in
rcrl
fsubr
mov
mov
cmpsb
shl
call
adc
inc
cmp
xor
shrb
push
pop
lds
add
ja
pop
push
imul
and
fs
je
out
clc
mov
or
or
adc
mov
and
or
sub
andl
call
add
mov
hlt
rcrl
xor
shrl
pop
test
aad
sbb
dec
mov
push
mov
mov
ret
lahf
outsb
jbe
mov
mov
mov
cmp
sub
and
or
lret
call
dec
pop
jne
xor
insb
fcompl
adc
sar
cmp
add
scas
out
insb
xchg
aaa
cmp
inc
insl
mov
adc
scas
jecxz
mov
cmpsl
scas
and
mov
negl
cs
xchg
push
clc
gs
lcall
insl
jp
and
les
dec
imul
mov
sub
push
push
and
cmp
mov
shlb
adc
fmull
mov
push
popa
outsb
xor
jo
shll
lcall
cmp
cmc
imulb
sbb
cmp
add
pop
and
scas
sahf
fistps
fs
and
jmp
or
cs
outsl
push
imul
out
cmc
shlb
xchg
and
add
lret
fsubrs
pop
sarb
das
js
dec
and
mov
rclb
cltd
xchg
jb
sbb
and
imulb
movsb
push
mov
pusha
fistpl
in
add
push
push
xchg
or
mov
adc
or
inc
dec
xchg
bound
test
jbe
cmp
add
icebp
pop
rcrl
mov
pop
lods
push
es
push
cmp
inc
jl
lret
mov
dec
cli
into
lcall
mov
push
mov
mov
inc
and
dec
push
or
cmp
xlat
enter
cmpsl
jecxz
je
in
inc
cmpsl
mov
mov
int
xor
add
scas
and
out
inc
sbb
pop
and
or
sarb
test
insb
fstpl
pop
inc
lea
cmp
and
mov
mov
mov
cmp
stos
sbb
push
add
mov
jp
sbb
push
lods
lret
aad
popf
pmulhuw
stos
in
sbb
test
ficoms
jae
into
lods
jecxz
jmp
outsb
xchg
aad
je
pop
mov
xor
mov
mov
cwtl
mov
cs
jno
dec
jecxz
cmp
subb
dec
inc
icebp
fdivrl
push
fdivrs
or
cltd
sbb
add
sub
cmp
dec
js
xchg
or
repz
js
stc
cmp
jmp
jle
pop
push
imul
push
loopne
insb
jae
and
push
rcll
sub
jb
dec
test
push
xchg
xor
adc
push
std
lret
sti
je
imulb
jmp
or
jbe
js
jns
rolb
negb
inc
test
rcll
scas
adc
sub
inc
and
jo
ljmp
cmp
cmpsl
sbb
cmp
fstp
push
fwait
mov
jne
dec
lock
test
sar
popf
inc
pop
stc
das
dec
mov
pusha
cmpsl
cli
iret
hlt
xchg
mov
sub
iret
push
adc
mov
mov
xchg
pop
xchg
fildll
jbe
sbb
cmp
mov
jne
in
or
xchg
pusha
int3
push
outsb
sbb
data16
push
loop
jl
subb
mov
cwtl
add
ret
add
cmc
ds
mov
push
xchg
test
std
dec
jmp
icebp
xor
test
xchg
add
push
cltd
xor
inc
test
hlt
sbb
repnz
ja
in
dec
adc
lret
mov
sub
out
mov
stos
aas
nop
inc
loop
pop
sbb
stos
push
mov
imul
pop
cltd
pushf
mov
adc
pop
dec
in
hlt
sub
push
cli
mov
cmp
out
pop
repz
mov
jl
imul
pop
mov
jns
mov
add
dec
scas
pop
js
jge
shl
push
push
fsubrs
mov
inc
cmc
sbb
or
cmpl
repz
or
imul
in
sbb
add
aam
iret
add
jl
das
cltd
mov
add
or
add
fs
xchg
mov
dec
add
ja
ficoml
sub
and
push
pop
idivb
iret
fidivs
sub
clc
enter
mov
push
ffree
sbb
dec
add
mov
fmuls
mov
sbb
mov
inc
hlt
mov
jmp
cli
sti
pusha
sarl
mov
int3
pop
sub
xchg
sbb
imul
mov
push
inc
icebp
aad
dec
rep
out
and
xchg
adc
enter
dec
lea
cmp
sub
cwtl
add
sarl
or
insb
clc
repz
adc
iret
add
xor
mov
mov
aad
int
xor
movl
add
imul
adc
enter
jns
mov
dec
lea
jmp
fnstsw
out
add
shll
test
push
wbinvd
into
clc
jns
push
dec
mov
inc
mov
lock
gs
mov
test
and
sarb
jmp
push
loop
dec
xchg
inc
cmp
push
pop
test
repnz
cmp
dec
jg
mov
push
mov
mov
sbb
sarl
imul
xor
jns
int3
repz
sbb
adc
xchg
inc
arpl
or
adc
divl
lods
sbb
mov
add
insb
sbb
imul
xor
lock
aam
sub
enter
push
push
add
fs
sahf
push
mov
fadds
and
es
push
int3
xchg
dec
lret
in
push
out
push
sub
je
sub
dec
lds
shll
mov
pop
adc
int3
add
lahf
dec
pop
shr
push
inc
into
lret
cwtl
mov
dec
ror
mov
mov
das
cmp
mov
pop
leave
out
mov
mov
hlt
jl
scas
pop
out
push
and
xor
or
loop
xor
xchg
stos
sub
xor
sarb
je
shrl
mov
out
dec
cmp
jns
xor
or
test
push
xchg
sbb
jb
pop
or
aad
jmp
push
rcr
fimuls
push
test
fistps
imul
push
xchg
sti
rcll
dec
loope
in
pop
rolb
pop
adc
stos
mov
mov
in
int3
dec
jmp
bound
cmp
mov
icebp
dec
pop
sub
mov
mov
js
popf
xor
mov
inc
cmp
daa
pop
shrl
sbb
data16
lahf
test
and
test
lods
daa
inc
testl
ss
xor
mov
ud1
dec
pop
xchg
mov
xor
stos
jp
and
loope
push
in
imul
cmp
pop
push
pusha
mov
test
negl
inc
outsl
push
mov
cmp
dec
mov
or
mov
or
rcrl
push
jnp
push
jo
mov
mov
push
into
xchg
jne
fisttpll
and
jo
aad
outsb
imul
fs
popa
dec
or
xchg
pop
cld
push
jno
leave
add
jno
call
aaa
push
sbb
es
shrb
cmpsb
rcrb
movsb
xor
scas
mov
dec
arpl
xchg
lcall
jp
xchg
xor
push
int3
fsubrs
pop
and
xchg
sahf
or
stos
inc
movsl
xchg
xchg
xchg
add
sub
add
mov
popf
xor
xchg
cwtl
fisttps
xchg
imulb
lcall
loope
cmp
inc
testl
jnp
arpl
or
das
dec
bound
cmp
cmpsl
stos
call
cmc
mov
shrb
mov
xor
mov
add
or
xchg
pop
outsl
xor
mov
fists
xchg
out
in
and
es
sub
lahf
out
inc
test
xor
pcmpeqb
adc
or
addr16
ljmp
sub
mov
sbb
or
in
je
stos
or
nop
in
mov
mov
dec
mov
lods
js
pop
mov
mov
mov
xchg
enter
sbb
xchg
xorb
add
mov
xchg
cmc
fwait
xchg
sahf
inc
cmpsl
fsub
lcall
cmpsb
add
out
icebp
cmp
push
loop
andl
jmp
les
xchg
test
fidivs
fsubrs
movsb
jmp
push
pop
jnp
insl
add
push
cmp
es
fmul
or
mov
popf
out
mov
add
call
adc
ret
ret
pop
sti
dec
pop
movsb
sbb
test
imul
rcr
ret
mov
hlt
loop
sbb
flds
ja
dec
push
push
je
push
adc
pop
pushf
in
mov
push
cwtl
js
andl
push
push
xor
cwtl
sbb
arpl
mov
jle
ret
jecxz
in
cmp
inc
clc
mov
sarb
fnstenv
int3
jle
xor
jge
and
and
cwtl
inc
movsl
push
mov
or
xchg
ret
xchg
loop
fidivrs
and
or
sub
shlb
and
jecxz
or
psubsw
dec
xchg
jmp
pop
sbb
rol
mov
outsl
test
push
jle
insl
test
popf
or
sti
add
icebp
sbb
iret
hlt
fidivs
pop
daa
jecxz
xchg
jo
push
test
out
fistpl
inc
cmp
xor
add
mov
andb
and
mov
lods
pop
roll
scas
arpl
gs
mov
cmp
aas
rorb
fst
or
adc
push
pop
fadd
sti
xor
loope
jge
pop
test
fbld
pushf
outsb
out
shll
xchg
push
outsl
and
ret
dec
mov
cld
push
jge
xchg
xchg
sahf
mov
mov
cmp
test
popa
cmp
inc
pop
pop
aas
insl
mov
cmp
std
data16
mov
dec
insl
cmpsl
ss
push
out
out
push
cs
sbb
xor
sti
outsb
lock
les
stos
inc
movsl
and
fnsave
push
xchg
out
test
cmpsb
arpl
fistpll
aam
loope
inc
xor
fsts
mov
pop
pop
jne
xor
cltd
es
repnz
adc
xchg
lahf
pop
push
loopne
mov
pop
mov
adc
cmp
mov
dec
and
or
ret
mov
mov
imul
cwtl
push
in
cltd
jno
jb
adc
and
inc
dec
and
shll
fdivs
add
add
pop
jg
ss
fdivrs
jno
jge
lcall
ja
in
dec
stos
jle
mov
jnp
xor
cmp
mov
cmp
mov
sar
or
add
test
decl
pop
roll
push
in
mov
data16
cmp
mov
repz
ss
fcomi
fdivs
inc
xlat
sahf
loop
xor
inc
push
sahf
add
aaa
mov
iret
jle
outsb
push
iret
add
inc
mov
xor
bound
push
stos
sbb
inc
pop
jnp
xor
jno
sti
xorl
cmp
ss
mov
jmp
jne
aam
das
fidivl
scas
xor
ljmp
leave
cli
mov
mov
xchg
push
in
ret
or
lock
or
inc
lret
ja
fcompl
add
cmc
dec
rclb
addr16
je
inc
jge
mov
out
inc
xchg
testb
mov
cmpsl
aad
arpl
jb
adc
jno
push
scas
test
adc
mov
pop
jg
xor
lock
sbb
add
cld
xor
rcll
mov
jg
adc
xor
fs
inc
mov
xor
js
sbb
ds
loop
ret
les
inc
pop
mov
push
bound
shrb
popw
sub
mov
shl
adc
mov
dec
push
add
add
mov
fsub
shlb
outsb
mov
inc
icebp
ds
pop
mov
fists
adc
add
xor
dec
mov
and
dec
test
dec
insl
jle
sbb
xchg
add
icebp
ret
inc
jnp
in
sub
hlt
mov
aad
xor
xor
jnp
pop
fs
test
push
and
inc
mov
stos
lock
shl
mov
fsubp
mov
mov
push
inc
pop
adc
mov
mov
jne
out
sbb
jo
lcall
fidivs
call
pop
lods
or
and
jecxz
mov
push
xchg
repnz
lds
mov
xchg
or
lret
dec
mov
cmp
roll
arpl
outsb
into
mov
xchg
mov
out
fadds
call
out
jnp
imul
lods
fsubrp
sbb
cli
mov
or
arpl
das
in
sarb
mov
pop
out
subb
xchg
dec
and
sti
cli
lret
outsb
mov
test
popa
scas
das
push
sahf
out
scas
cmpps
cmp
add
add
movzwl
and
sbb
rolb
cld
xor
pop
push
test
lret
outsb
adc
push
js
sub
inc
push
lahf
into
ljmp
sub
push
clc
iret
pop
push
xlat
jmp
pop
out
and
and
or
xor
dec
inc
rcl
dec
sbb
fstps
bound
push
adc
lcall
adc
cmpsb
xchg
stos
push
mov
cmp
push
pop
lret
lcall
divb
mov
clc
in
push
faddp
mov
or
mov
jno
add
mov
je
fmuls
pop
mov
xchg
cmp
in
notb
inc
inc
xlat
ret
and
jecxz
ja
cmpsl
adc
inc
aaa
repz
pusha
ret
bnd
ret
enter
loop
rcrl
stos
push
and
pop
push
xorl
loope
sbb
sbb
hlt
adc
push
andb
mov
outsl
xor
flds
lret
sti
enter
outsl
icebp
and
inc
shll
mov
nop
sub
xor
jl
push
imull
jae
jne
xlat
sub
jg
pop
js
push
repz
ret
sub
pop
addl
and
stos
mov
adc
rcrb
cmpsb
mov
fildll
out
popf
or
lds
gs
into
mov
xor
mov
in
into
arpl
or
mov
jmp
mov
aad
cmpsl
push
sarl
xchg
outsb
gs
lods
xchg
or
adcl
xor
and
ret
gs
xchg
jecxz
lahf
sti
sub
shlb
adc
pusha
inc
cltd
mov
cs
jbe
push
push
icebp
mov
sbb
and
xchg
cwtl
pusha
pop
or
pop
cli
incl
xchg
loopne
and
in
jle
xor
rcll
gs
push
xchg
jns
jns
arpl
dec
icebp
xor
sub
push
movsl
mov
out
cmpsb
fsubs
mov
xor
and
stos
ret
adc
inc
test
mov
add
lea
inc
fimull
jae
push
insl
mov
mov
data16
mov
mov
into
jge
aad
sbb
repz
add
mov
jns
adc
xchg
les
cmp
in
or
jno
push
jno
daa
or
rcll
rorb
mov
sub
jnp
jae
lret
or
or
fdiv
push
and
add
mov
jne
xor
inc
daa
mov
rorl
jecxz
mov
pop
mov
push
pop
inc
out
ss
insl
push
ss
xchg
arpl
lret
adc
sub
pop
or
cmp
les
mov
loope
movsl
and
ret
or
pop
fsubrs
dec
and
push
out
movsl
push
or
ds
lds
sub
daa
scas
loopne
push
icebp
or
mov
adc
cmpsl
cmp
filds
or
or
push
or
or
xchg
xchg
mov
add
enter
xlat
pop
mov
sbb
cmc
mov
inc
subb
cmpsb
mov
outsb
cmp
rorl
cmp
ret
cmp
mov
push
addr16
push
adc
cmpsb
cmpl
imul
xchg
lret
scas
shlb
xor
outsb
push
fidivs
jg
xchg
push
movsl
ficomps
mov
icebp
gs
jmp
adc
adc
and
xlat
cld
mov
jl
aaa
xchg
or
sbb
test
sub
sbb
mov
pop
mov
mov
negb
ror
movsb
rorb
test
into
dec
adc
movsb
test
and
and
cmp
dec
lcall
push
fidivrs
out
jge
mov
rcrl
xor
cmovb
fsubs
test
sub
cmovne
outsb
adc
sub
mov
cs
or
jbe
insb
clc
cmp
or
daa
sahf
push
fld
in
mov
mov
insl
xlat
cmp
ffreep
or
stos
mov
jle
das
je
and
fmull
xchg
xchg
ror
dec
pop
mov
jle
in
hlt
fdivrl
push
and
mov
mov
sbb
or
pop
mov
cltd
nop
iret
inc
push
sub
mov
or
aaa
and
xor
pop
push
movsl
jnp
jecxz
lahf
xchg
mov
hlt
shlb
cmp
lock
outsb
mov
ljmp
push
cmp
xor
inc
aad
mov
aad
ret
add
adc
jae
cltd
icebp
out
mov
cmpsl
pop
pop
adc
dec
fldt
inc
push
sti
and
mov
fistpll
add
loope
jbe
insb
mov
insb
fdivr
out
stc
das
and
out
cmp
push
sahf
dec
jge
in
int
add
int
lea
jl
stos
subb
out
mov
push
aam
sub
iret
dec
call
es
dec
pop
push
jecxz
imulb
std
sahf
add
jmp
aad
in
aad
add
fadd
movsb
or
aaa
mov
shrb
mov
testb
jbe,pn
test
mov
add
outsb
push
mov
xchg
sub
repz
aad
xor
mov
cmc
cli
in
lea
pop
jno
add
dec
scas
data16
out
sub
push
outsl
adc
mov
mov
fwait
je
lods
stc
cmp
push
lahf
pop
add
lret
xchg
outsb
pop
ja
bound
add
cmp
mov
and
xchg
fwait
push
je
mov
mov
push
mov
add
jnp
cmp
mov
imul
adc
mov
fildl
sbb
mov
jl
lods
push
sbb
xor
pop
xchg
jmp
out
cld
mov
pop
in
ljmp
xchg
or
mov
es
cmp
adc
clc
push
sbb
shlb
gs
push
pop
add
inc
jge
aaa
or
subl
inc
imul
lret
xlat
dec
fiadds
arpl
pop
and
mov
cwtl
sub
xchg
or
sbb
inc
xor
push
in
jbe
adc
fsubrs
pusha
rorl
call
mov
pause
xchg
and
imul
das
add
xchg
xchg
stc
aas
loop
xor
jge
repz
push
pop
mov
icebp
mov
pop
popf
push
mov
dec
sub
push
arpl
fs
out
cmpsb
and
mov
pop
pop
inc
mov
xorl
mov
pop
dec
pop
repz
jmp
and
shrb
arpl
push
sbb
jmp
sub
dec
test
sub
sarl
mov
das
sub
mov
jge
icebp
iret
cmp
mov
cmpsb
data16
js
xchg
fadds
sti
je
and
subl
clc
in
inc
cs
push
daa
xchg
fildl
mov
and
dec
xchg
pop
stos
call
inc
jge
pop
ss
or
out
cltd
imull
push
sub
in
mov
mov
shlb
push
xchg
cmp
in
pop
arpl
fisubs
leave
xor
mov
les
cmp
movsb
mov
sub
inc
imul
and
jge
sub
popf
dec
jns
add
inc
lock
mov
push
sbb
loopne
pop
mov
or
fs
aam
int3
mov
and
jns
mov
adc
filds
inc
jne
sbb
or
jge
add
in
push
jo
jnp
adc
lret
lds
pop
in
pop
xor
stos
mov
shl
aam
insb
mov
sahf
cmp
jbe
mov
lcall
push
xor
stos
xchg
pop
and
jg
jnp
lock
scas
sbbl
xor
push
std
push
pop
adc
movsl
repz
das
or
popf
lahf
subb
stos
pop
lods
pop
stos
in
fsubrl
stc
xor
adc
jbe
xor
mull
jmp
xchg
repnz
iret
xlat
cmp
subb
add
sbb
pop
push
mov
and
inc
cli
add
xchg
in
cld
push
jns
sbb
cmp
ss
xor
adc
xor
stos
addr16
jbe
mov
ljmp
xchg
scas
pandn
cmpsb
int
icebp
ja
xchg
mov
add
mov
cmp
pop
bound
mov
ds
mov
xchg
divl
or
xor
bound
mov
mull
imul
roll
setns
in
faddp
mov
sub
mov
cmp
xchg
xor
pusha
xor
add
jecxz
mov
dec
sub
or
andl
pop
out
aad
adc
in
loope
inc
dec
in
test
add
fmull
outsb
jae
mov
fs
push
mov
adcb
leave
addr16
jp
adc
inc
adc
scas
out
mov
outsb
jg
aas
pop
mov
xor
fs
and
pop
push
inc
bnd
add
xchg
mov
cmpsb
loopne
data16
push
jl
sub
repz
cmp
xor
outsb
aam
fld1
mov
mov
mov
xchg
lea
jns
inc
xchg
fistpl
lock
cmp
xchg
inc
adcb
clc
cmpsl
popa
stos
mov
jnp
adcb
rolb
dec
loopne
cmp
mov
pusha
orb
jns
lods
movsl
inc
xchg
inc
ret
shl
cmp
jle
je
adc
inc
mov
stc
sti
insl
popa
test
sub
and
and
sbb
jb
pusha
scas
xor
scas
cmp
dec
add
fwait
dec
daa
mov
mov
or
xor
out
mov
xchg
test
call
iret
cmp
lods
adcb
iret
or
mov
lret
or
cmpl
dec
mov
clc
ja
xchg
mov
and
mov
les
jb
gs
mov
push
fidivl
iret
sti
je
faddl
inc
cmp
jmp
lds
call
out
lock
cmp
ja
and
sub
addl
jge
fidivl
push
nop
dec
scas
and
or
xor
dec
loop
xor
push
sbb
addr16
lds
dec
push
test
lret
jo
xchg
mov
push
mov
leave
push
aas
scas
fbstp
or
push
dec
fs
push
test
out
addr16
sub
ret
mov
lret
aas
mov
mov
and
test
mov
push
repnz
sbb
cltd
xor
negb
cmp
imul
hlt
outsb
lret
push
sub
adc
in
ret
pop
push
lock
aaa
cmpsl
inc
ss
sub
cmpsb
or
jae
xchg
je
add
mov
mov
adc
jne
js
bound
rcrl
cmp
and
push
cltd
adc
and
das
and
sub
push
ret
fnstcw
out
aaa
and
ret
mov
aas
pushf
mov
xor
cmp
inc
lahf
lods
faddl
xchg
sub
and
and
test
push
repnz
mov
inc
and
inc
sub
ret
sbb
fcmove
mov
adc
shrb
mov
mov
movb
push
pop
ljmp
fcoms
cmp
cli
mov
adc
test
outsl
test
std
fs
sub
loop
out
mov
lock
jmp
push
std
bound
xor
and
push
aam
pop
jo
pop
sub
sbb
insb
cmpsl
jge
popa
dec
pop
repz
pushf
testl
das
aad
scas
inc
imul
mov
or
jns
push
loop
in
inc
andb
bound
sbb
push
inc
cmp
out
add
push
push
hlt
pop
loopne
imul
pop
int
sahf
adc
punpcklbw
ja
lret
mov
inc
loopne
mov
mov
and
inc
xchg
scas
in
mov
pop
sbb
pusha
insb
std
push
lret
lock
shr
fldl
sbb
add
or
fcom
push
mov
xor
popa
mov
mov
cld
mov
sahf
lret
pushf
in
jmp
or
and
rcrb
dec
in
mov
push
test
stc
cmp
inc
and
inc
loope
mov
xchg
or
mov
in
pop
jmp
sub
popf
cld
or
push
cmp
shl
je
mov
loop
or
pop
dec
dec
jmp
push
inc
pop
shll
ds
mov
adc
add
lods
pop
and
pop
jmpw
pop
cmp
inc
mov
test
fadds
push
mov
sub
xchg
divb
popf
xchg
add
iret
je
out
push
pop
xchg
pop
idivl
aad
sbb
fcmovbe
jo
pop
test
popf
fstpl
in
pop
loop
or
test
cmp
mulb
stos
mov
outsb
push
xlat
mov
clc
es
xor
dec
jae
push
jns
and
movsl
ret
rolb
pop
enter
adc
cmp
adc
jmp
add
mov
aad
mov
pop
sbb
in
fstl
std
fcoms
xlat
mov
inc
call
jb
adc
rol
and
and
mov
sub
inc
les
mov
rol
mov
es
lcall
lahf
shrb
lds
push
bound
std
sbb
add
fldl
clc
xchg
xchg
testl
push
sub
mov
cmpxchg
mov
lret
adc
dec
mov
dec
push
cld
icebp
mov
icebp
sahf
inc
or
sub
mov
adc
inc
test
jp
pop
and
lahf
inc
xchg
cmp
and
fstl
lea
xchg
aas
mov
xchg
rolb
mov
mov
mov
and
mov
shl
popa
jns
ficomps
add
xchg
xor
adc
adc
mov
out
ds
test
jp
jo
lret
xor
xlat
daa
outsb
sbb
and
sub
stos
repnz
cmp
cmp
sbb
ds
in
scas
jns
mov
add
push
push
push
popf
sbb
sbb
xor
and
pop
cwtl
or
roll
loopne
cmp
ds
add
mov
paddd
ds
gs
shlb
rorb
add
sbb
dec
adc
dec
mov
fsubl
jb
push
dec
mov
ds
jecxz
fwait
mov
mov
adc
xchg
xchg
xchg
gs
jge
in
cli
mov
mov
mov
pop
icebp
insb
xchg
mov
imul
pop
in
les
aad
popf
add
adc
sbb
into
cmp
sti
push
lcall
fisttpll
mov
test
rorb
jle
inc
les
je
and
sub
ret
cmovae
or
add
fdiv
scas
clc
popf
dec
das
add
xchg
jmp
xor
mov
jns
inc
sbb
xchg
fidivrl
mov
push
shll
je
jl
sub
pop
inc
ss
mov
push
out
sbb
or
enter
or
rcrl
cli
jl
adc
xor
mov
ret
cmp
inc
pop
add
sti
bound
arpl
pop
jecxz
xchg
call
lods
mov
or
inc
jle
ljmp
dec
clc
push
rol
push
imul
cmp
pop
adcl
xchg
and
mov
loop
sub
les
mov
lret
mov
movsl
lahf
cli
adc
cmp
nop
lea
inc
cmc
movsl
mov
dec
inc
and
popa
mov
aam
inc
out
mov
cwtl
and
or
mov
daa
daa
into
ret
mov
outsb
cmpsb
rorl
dec
out
fcomps
repz
cltd
push
push
xor
or
jle
fsts
xchg
pop
cwtl
lret
xchg
aaa
push
adc
loope
cmp
mov
mov
scas
adcb
cmp
iret
inc
int3
inc
loope
movsl
push
push
jl
dec
xor
dec
xchg
mov
cmp
mov
js
mov
cmc
ret
imul
jno
push
mov
jnp
rorl
sbb
mov
cmpsb
cmpsb
jge
sub
ss
jo
pop
insb
bound
sub
lea
jbe
sbb
outsb
push
bound
pop
popa
popa
mov
push
cmp
and
or
fnsave
iret
les
flds
xchg
push
pop
and
push
repnz
xor
repnz
inc
mov
pop
mov
cmp
hlt
pop
mov
test
pop
es
or
mov
pop
fmulp
rcrl
cwtl
ljmp
jmp
incb
jl
push
cmpsb
adc
in
repz
rol
push
adc
mov
out
push
pop
mov
add
sbb
scas
or
inc
addb
fisttps
int3
jle
pushf
out
sub
hlt
imul
lret
inc
shl
jle
push
lods
sbb
rol
lods
loope
aaa
pop
addl
subb
sbb
das
add
cs
or
fucomp
cmpsb
jo
ret
dec
fcmovne
sub
mov
mov
mov
addr16
scas
jnp
sub
dec
adcl
xchg
cmp
cli
loopne
adc
mov
jo
inc
pop
pop
gs
lock
lds
cli
cmp
or
fistl
and
pop
addr16
lods
ss
arpl
rorb
cmp
mov
mov
shll
insb
mov
xchg
push
inc
inc
stos
fmull
in
test
jmp
xor
adc
das
jne
int3
mulb
dec
ror
int3
sbb
or
lods
push
aam
shll
shll
int3
jmp
test
cld
xchg
outsb
lock
and
jle
push
outsl
cmp
or
xor
sbb
shl
pop
in
ret
ror
ret
cmpl
arpl
mov
scas
add
and
in
jne
pop
jo
fsubs
js
mov
lods
fucomi
adc
xchg
jbe
jmp
hlt
test
inc
lret
mov
stos
test
xchg
mov
aas
xchg
aam
sar
cltd
sub
mov
or
mov
push
sbb
inc
mov
out
xor
pushf
mulps
mov
cmpl
lods
stc
cli
pop
push
ss
testl
or
add
pusha
and
inc
xchg
incb
inc
cmp
inc
and
mov
leave
or
cmpsl
sbb
xchg
mov
mov
sub
loope
idivl
pop
push
fldcw
sti
add
sub
mov
mov
mov
sub
mov
jle
xor
cld
pop
lcall
dec
add
adc
adc
test
imul
popf
sub
jne
dec
jns
sti
push
add
cltd
leave
sub
movl
xlat
in
xchg
mov
push
je
mov
rclb
adcb
fs
pop
inc
shr
adc
fldt
xchg
daa
pop
adc
idivb
jmp
movsb
stos
mov
ja
cmc
jno
sti
nop
popa
lock
subb
cmp
jmp
cwtl
push
rcr
aam
notb
int
or
mov
sbb
sub
sub
orb
cmpsb
push
adc
push
cld
and
sub
fwait
mov
inc
jecxz
stos
inc
xchg
push
addl
xchg
testl
adc
dec
mov
dec
rorl
pop
pop
ss
jl
test
add
pop
shrb
mov
hlt
es
inc
mov
or
adc
add
adc
mov
sub
sub
hlt
and
call
daa
mov
jle
lods
mov
jb
bound
sub
shl
jbe
mov
les
or
int
cs
pop
jo
movl
and
js
push
inc
mov
push
sbb
testl
sbb
jge
pushf
jecxz
movsb
aaa
lock
push
adc
aas
aaa
sbb
aaa
cs
mov
mov
sbb
adc
jb
or
lahf
push
fiadds
dec
adc
cmp
insb
int3
and
imul
loope
pop
xlat
xchg
pop
pop
aad
mov
mov
mov
ret
sub
lret
inc
sub
sahf
dec
push
repz
lret
nop
or
mov
dec
xchg
icebp
call
icebp
addr16
sbb
mov
imul
mov
and
mov
jp
fstpl
stos
lahf
jge
je
out
adc
and
mov
loopne
fldt
test
aad
shlb
inc
or
push
negb
mov
jae
push
mov
push
adc
adc
lea
jae
aad
mov
lret
aad
orl
scas
add
rcl
in
add
push
lret
pop
sub
out
mov
push
lahf
xchg
jge
mov
mov
jae
call
sub
aad
cmp
mov
arpl
lcall
repnz
in
and
push
xchg
mov
sbb
mov
fisubrs
add
mov
test
mov
inc
jg
xchg
xor
mov
pop
stos
mov
nop
mov
ficoml
sub
and
mov
addb
xchg
or
inc
sub
sahf
push
or
int3
mov
rcrb
popl
or
mov
pop
cwtl
test
jno
xchg
and
andb
add
jge
mov
test
and
jae
mov
insb
sti
mov
push
cmp
jb
test
add
xor
xchg
sbb
pop
les
les
roll
lret
pop
cmp
or
rcr
xchg
mov
push
rclb
adc
add
pop
gs
out
mov
data16
scas
xchg
negb
decl
insl
pusha
clc
sahf
leave
outsl
inc
push
fcoml
inc
sbb
inc
test
lds
push
mov
jge
jg
sub
push
es
and
sahf
lahf
rcl
sbb
cwtl
and
popa
jb
lret
mov
je
xor
adc
push
pop
fs
mov
jne
aad
mov
mov
sbb
ja
mov
fbld
stos
int
and
jmp
jmp
icebp
and
or
jp
and
fistpll
mov
pop
mov
aam
cmp
fcomip
adc
push
pop
pop
or
sub
and
mov
test
js
xchg
mov
jo
aam
mov
mov
std
and
jo
idivl
pop
imul
xlat
mov
in
cmp
stos
fdivrs
lret
jns
mov
sub
xchg
loop
in
test
or
cmpsl
es
jbe
pop
repz
dec
dec
jno
jmp
sbb
ds
in
push
add
aaa
call
orb
movsl
fs
pop
mov
mov
mov
push
inc
es
sub
stc
das
mov
gs
sub
or
cmp
sbb
shll
rcll
dec
out
xorl
mov
pop
sub
enter
xchg
xchg
into
dec
pop
dec
cmp
int
pushf
ds
sbb
jecxz
add
insl
sub
lea
sti
mov
pusha
cmp
imul
adc
mov
idivb
or
mov
push
push
daa
mov
in
push
sub
push
xchg
rcll
icebp
push
dec
xor
mov
into
xchg
icebp
push
jae
outsb
inc
addr16
aam
das
mov
jl
inc
xorl
and
push
lcall
cmp
fsubs
push
or
insl
cmp
push
enter
daa
add
inc
sbb
adc
repz
repz
push
pop
adc
test
jno
mov
xchg
cs
inc
push
push
mov
in
repz
in
test
mov
or
add
lcall
das
in
pop
cmp
bound
arpl
inc
outsl
adc
punpckhdq
mov
mov
or
call
cmpl
ljmp
or
fsubrs
orb
test
out
mov
or
sarb
aad
rolb
pop
gs
jo
das
pop
insl
lods
cld
inc
or
lret
pop
inc
jno
loop
jnp
xchg
test
push
xchg
aaa
fs
rclb
mov
in
jle
cmpsb
dec
mov
mov
lea
arpl
test
cmpsb
pop
cltd
dec
test
andb
js
aaa
inc
pop
jnp
push
ret
adc
dec
ss
ljmp
fmuls
or
mov
and
sbb
movsb
fmul
add
test
fildll
xchg
nop
adc
mov
cld
jmp
pop
pushf
and
hlt
inc
call
aad
cmpl
pop
inc
enter
loopne
lods
rcrl
xor
jae
je
mov
jl
sub
mov
sahf
jo
ja
fiaddl
cli
movsb
push
and
and
mov
out
inc
add
mov
xor
pop
add
xchg
mov
loope
mov
mov
and
xchg
js
push
cmp
mov
or
sbb
push
mov
xchg
jge
add
mov
and
sub
cmp
inc
dec
stos
fldcw
movsl
jbe
mull
roll
push
jl
std
xchg
daa
mov
gs
jmp
xchg
pop
pop
call
mov
lcall
mov
fdivr
sub
repnz
xchg
jge
sbb
adc
sbb
out
shr
stos
adc
xlat
xor
xor
mov
test
sbb
ss
mov
add
adc
cmpsb
test
std
inc
adc
mov
inc
testb
sub
sbb
inc
inc
sbb
jns
icebp
ret
pop
xchg
push
add
pop
pop
cli
mov
lret
lcall
cmpsb
pop
jno
cmp
pusha
dec
inc
xchg
test
inc
daa
and
decb
pushf
xor
les
pop
mov
sbb
cld
loopne
xchg
pop
pop
push
mov
arpl
int3
mov
xchg
pop
push
test
addb
inc
lock
sub
in
xchg
push
out
mov
stos
aam
dec
dec
xchg
and
dec
jmp
std
mov
mov
rep
lods
call
sub
pop
sbb
ret
sub
std
std
xor
jne
cli
jo
and
pop
pop
pop
mov
lods
aam
es
xchg
movsl
clc
repnz
sbb
test
push
jle
dec
mov
push
adc
clc
cmc
fucom
mov
mov
scas
das
test
jl
cltd
dec
xor
push
adc
repnz
mov
push
gs
add
test
and
and
fscale
add
movsb
cmpsb
xor
mov
outsl
ds
stc
cmpsl
mov
das
mov
xor
sub
aas
sbb
movsl
jno
dec
adc
jo
adc
xor
je
iret
outsb
push
xchg
arpl
repz
xchg
nop
sbb
cwtl
ds
jae
clc
arpl
icebp
mov
push
pop
dec
sbb
mov
add
mov
or
mov
cmp
jg
fimuls
ficoms
dec
or
sbb
mov
adc
lahf
pop
mov
cmp
add
sti
xchg
inc
push
and
inc
add
aad
pop
out
pop
fmuls
icebp
ljmp
cmp
pop
pop
outsl
ret
cli
sub
es
hlt
loopne
cmp
imul
mov
push
icebp
and
cmpsl
inc
pop
fimull
xchg
sub
sub
in
or
out
cs
iret
inc
lahf
sub
lret
pop
mov
addr16
inc
scas
mov
xor
push
cmpsb
bnd
jg
mov
fsts
add
pusha
aaa
daa
jmp
mov
mov
sbb
dec
xor
inc
cmpsl
gs
push
test
pop
xchg
mov
adc
cwtl
int
push
stos
mov
adc
cmc
lahf
aad
testb
lods
decb
aam
ss
dec
mov
clc
rol
les
mov
lock
addr16
pop
out
pop
mov
push
xlat
jne
and
mov
daa
xorb
or
mov
fisubrl
mov
inc
sbb
ljmp
fwait
cli
cmp
imul
xchg
mov
jns
xor
jo
cmpsb
mov
stc
pop
pop
jb
adc
push
cwtl
jecxz
inc
sahf
mov
aas
and
rcrb
icebp
in
xor
dec
or
lods
push
xchg
imull
push
loope
or
and
sub
sbb
and
dec
cli
mov
xor
in
iret
in
cli
add
cmp
mov
mov
mov
je
and
orb
neg
adc
add
ffree
mov
stos
rorl
push
iret
loope
jmp
and
ljmp
jno
addb
fbld
or
or
insb
push
cmp
dec
shrl
sub
jecxz
fs
filds
aad
and
pop
sbb
es
mov
sbb
push
dec
cmp
dec
lret
and
imul
mov
lret
xchg
test
fistl
ljmp
lret
popa
pusha
movsl
ja
sub
dec
xchg
mov
out
out
mov
lcall
dec
cwtl
ret
push
lcall
sub
xlat
insl
fstpt
inc
and
mov
and
clc
testb
js
xor
jl
enter
push
mov
pushf
pop
fdiv
imul
push
mov
adc
push
lcall
mov
lods
lods
aam
enter
iret
xor
xchg
push
adc
insl
mov
sbb
daa
dec
jge
adc
mov
push
outsb
push
out
in
lds
rorl
out
sbb
push
lahf
insb
call
lock
sbb
test
enter
in
movsl
ret
pop
sahf
ret
dec
cwtl
popa
fadd
mov
negl
jle
inc
xchg
ror
xchg
mov
lea
rorb
or
sub
dec
mov
loopne
into
pop
outsl
add
scas
mov
inc
mov
insl
fidivl
sbb
sbb
outsl
pop
inc
pop
xor
and
adc
fdivr
push
mov
sub
xor
mov
add
cmp
dec
adc
data16
call
movsb
icebp
pop
lock
cmp
cmp
in
or
xor
lods
xchg
enter
sub
fnstenv
lret
push
cmc
scas
xor
sub
adc
push
cmp
addl
pop
add
mov
sbb
ds
mov
pop
dec
add
into
fsubl
sub
cmp
cmp
or
sbb
ljmp
pop
sub
popl
sbb
testb
or
push
adc
inc
jnp
mov
pop
lcall
js
xor
push
sbb
cs
fildl
in
push
or
popf
aad
sarb
cmpsb
dec
loope
scas
add
test
and
xor
insb
push
mov
pop
adc
ljmp
dec
or
pop
inc
dec
outsb
xchg
rol
inc
fstps
test
and
pop
add
inc
adc
arpl
jb
mov
ss
in
jmp
adc
xchg
sahf
mov
fcmovne
mov
gs
addr16
test
sbb
ja
jg
and
jge
and
loope
mov
fdivr
push
aaa
jbe
icebp
jmp
test
fsubr
or
aam
out
nop
test
sub
mov
adc
cmp
push
int
btc
dec
sbb
cmp
mov
and
cld
cmpsl
add
add
stc
add
push
or
fbstp
push
sbb
push
jb
jecxz
lea
mov
mov
and
mov
pop
leave
push
ret
push
icebp
int3
fcomi
notb
mov
fisubrl
sbb
mov
rcrb
dec
mov
push
mov
sub
dec
in
popa
sbb
outsl
jae
test
jae
and
lahf
fdivrp
adc
adc
jne
cli
sbb
lods
cli
decb
cmp
or
sub
popl
repz
sbb
mov
cmp
mov
inc
inc
add
outsl
icebp
pop
xchg
xchg
push
mov
insb
jo
pop
cld
mov
clc
std
mov
mov
stos
loope
movsb
inc
adc
nop
rcr
incl
sbb
jmp
jle
xchg
pop
push
fidivrl
fsubl
add
rol
dec
cmp
push
scas
or
into
sub
push
fidivrs
in
lret
mov
jnp
imulb
rcr
mov
cmp
xchg
dec
nop
bsr
fmul
adcb
jo
and
mov
jecxz
cmp
jl
inc
pop
pop
sub
popa
mov
mov
cmpsl
mov
in
and
lahf
jbe
movsl
add
xchg
add
jmp
inc
out
inc
dec
sub
jmp
adc
mov
shlb
cmpsl
dec
test
pop
imul
mov
mov
mov
pop
stos
push
jg
loopne
out
outsl
hlt
sub
shl
mov
cltd
mov
sbb
addr16
sarb
cltd
shrb
iret
mov
or
rorl
dec
jae
inc
ss
aas
xchg
ret
lods
mov
add
push
push
sbb
mov
push
call
cmp
add
out
enter
or
inc
adc
sbb
xor
scas
frstor
movsl
sbb
sbb
cmpl
pop
repnz
lahf
cmp
xor
inc
outsb
testb
mov
lea
and
lret
xchg
popf
outsb
push
jnp
in
data16
cld
pusha
dec
out
jns
aaa
sbb
xchg
push
sbb
sub
sub
in
shlb
xchg
lods
add
hlt
sub
addb
movsb
mov
leave
mov
loopne
mov
xchg
subl
aaa
xchg
inc
aas
dec
bound
pushf
mov
add
rcrl
cmp
scas
js
xor
loopne
sub
mov
imul
test
pushf
lret
add
sahf
inc
pop
or
mov
mov
loope
inc
mov
pop
or
sbb
inc
fadds
mov
js
arpl
xchg
stos
mov
inc
lcall
out
add
loop
mov
test
cs
es
cmp
adc
out
jae
pop
in
jle
mov
cs
in
cmpsb
in
lods
outsl
xchg
aas
jb
pop
out
scas
sub
popf
pop
mov
mov
test
rolb
pop
cmpb
adc
fsub
or
pcmpeqd
push
cmp
mov
sub
into
cmp
cltd
dec
xchg
js
or
es
cmp
into
cwtl
pop
push
out
out
stc
add
jle
or
popa
xchg
mov
shrb
dec
int3
out
sbb
inc
fbstp
lea
jnp
cmc
jp
call
shlb
dec
loope
roll
sbb
mov
pop
aaa
pop
push
xchg
xchg
js
idivl
cwtl
inc
cmp
test
sahf
fisubrs
out
push
pop
add
mov
test
test
cltd
test
test
stos
mov
or
orb
stos
addr16
xor
dec
push
jmp
push
dec
sub
mov
xchg
push
jno
lret
ds
leave
mov
ficomps
sar
out
jge
or
loop
mov
movsl
mov
sbb
hlt
lea
cmc
xchg
fists
enter
out
fs
repz
hlt
je
and
cltd
loopne
cmp
cmp
inc
rolb
cmp
jp
fbld
fnsave
fcmovnb
fcmove
sti
stc
shrb
in
adc
test
jb
stos
dec
insb
cmpsl
fs
fdivrs
ja
or
and
into
test
rcrl
mov
out
push
pushf
mov
and
dec
adc
fisubl
popf
aam
cltd
jl
cli
xchg
loopne
rcl
pop
push
and
xchg
testl
mov
cld
cmp
fists
in
mov
adc
roll
dec
insb
fnstcw
pop
cwtl
in
adc
lret
cmp
rcrb
mov
push
cmp
jae
add
test
out
in
xor
cmc
and
fsubs
pop
push
data16
subb
shll
rolb
xchg
imul
mov
push
lock
xchg
mov
sub
jb
mov
dec
imul
std
lret
stc
mov
xorb
mov
lcall
cmc
lahf
daa
mov
test
mov
jecxz
add
outsl
dec
int
mov
lea
dec
xor
mov
filds
push
imull
xchg
gs
pop
mov
scas
add
push
jmp
mov
loope
std
dec
callw
pop
int3
cwtl
imul
insl
lret
popa
hlt
xchg
js
loop
mov
lret
popa
push
inc
mov
imul
adc
xor
sbb
sbbl
mov
inc
dec
icebp
ffreep
icebp
sbb
push
lods
and
shlb
stos
pop
js
test
or
adc
pop
jbe
mov
in
lcall
mov
stos
lret
jne
lret
cmp
imul
cmp
ror
adc
test
call
xor
test
jns
mov
std
add
lcall
ret
inc
xchg
jne
shrl
pop
or
and
xor
ds
or
add
adc
mov
adc
adcl
dec
int
jmp
xor
lods
lret
les
jmp
mov
lahf
aad
adc
popa
jp
mov
fisubrs
push
arpl
insl
mov
sub
fyl2x
mov
in
jmp
adc
cmpb
or
jmp
push
dec
fadd
int
outsl
mov
sbb
xchg
pop
mov
xchg
cmp
and
into
xor
enter
inc
imul
sub
sub
mov
pop
pushf
push
xchg
and
sbbb
cmp
mov
sub
movsl
dec
loop
push
lcall
das
mov
in
gs
out
pusha
ficoms
test
mov
and
arpl
jns
fisttpll
push
clc
lcall
sub
mov
test
movsl
popf
insl
dec
bound
cmp
inc
out
sub
and
aaa
adc
sbb
stc
xor
mov
adc
movsl
and
sbb
gs
mov
dec
decl
cltd
shlb
mov
dec
inc
out
insb
push
loope
push
sub
adcb
jecxz
and
mov
leave
or
xchg
jle
pop
dec
mov
push
ljmp
fistl
insb
cmp
mov
movsb
xchg
loopne
vpaddsb
jg
adc
shr
cmp
addr16
and
or
push
pop
hlt
mov
add
inc
mov
rolb
xor
fwait
das
in
xchg
rol
mov
pxor
jg
rorb
jnp
leave
stc
pusha
xor
sbb
pop
mov
loopne
dec
mov
call
mov
cmp
sarb
repnz
into
inc
inc
arpl
add
mov
test
outsl
mov
or
ret
xchg
in
sahf
ljmp
rcll
mov
testb
mov
jne
push
in
push
pop
cmc
ljmp
jno
adc
inc
and
pusha
rcr
add
fucom
sarl
mov
lock
add
fistpl
and
xor
lds
inc
ret
rcrb
in
jecxz
lcall
add
pop
mov
xchg
cmp
mov
pop
ljmp
loopne
orl
xchg
cmp
cmpsb
jnp
add
icebp
mov
sub
push
ljmp
aaa
mov
pop
lea
push
nop
outsl
jae
push
orl
push
lcall
imul
push
xchg
push
int
jp
stos
jns
insb
sarl
repz
inc
xor
fnstcw
pop
push
and
adc
add
lret
adc
andb
pop
pop
xor
pop
jg
in
je
adc
mov
sahf
push
adc
cld
dec
test
repnz
hlt
pop
adc
push
test
fdivrs
pop
into
movsb
pop
push
testl
sti
fwait
jmp
lea
cli
movsl
inc
inc
lods
sub
in
jne
js
loop
adc
cmpsb
mov
jns
xchg
fs
js
loope
or
jbe
lds
js
xchg
sub
mov
lea
mov
outsb
xor
or
mulb
sub
adcb
cmpsb
inc
jns
sub
add
add
aad
dec
sub
add
mov
js
and
loope
ret
push
mov
sub
jnp
pop
mov
ds
cltd
adc
pop
cmp
xor
push
pop
adcl
mov
xor
jle
cs
push
mov
inc
repnz
xchg
push
outsl
pop
adc
scas
inc
xchg
lods
cli
dec
loopne
insl
hlt
das
push
mov
call
mov
push
xchg
sbb
push
mov
out
mov
popa
ficompl
scas
imul
jne
pop
into
sbb
sbbb
int3
rolb
lret
xlat
push
sub
icebp
fmulp
mov
loope
mov
fs
jle
aad
xor
pusha
adc
push
repz
sub
jno
cli
ljmp
xlat
jnp
insl
mov
outsl
loope
call
pop
push
in
repz
pushf
xor
xor
incl
jle
or
xchg
sub
pop
out
test
adcl
and
xor
arpl
data16
push
call
gs
insl
dec
mov
fdivrp
popf
xor
add
rclb
cli
push
lahf
cli
cmc
lods
imulb
lea
pushf
mov
push
inc
pextrw
adc
fisttps
outsb
sahf
loope
and
adc
cld
scas
add
jg
add
movsl
xchg
xchg
pop
xchg
addb
mov
mov
sub
adc
lret
fdivr
mov
aas
jg
push
iret
shl
xchg
xor
pop
fdivl
mov
ficoms
addb
and
fimull
mov
insb
jle
xchg
push
sti
push
leave
mov
sbb
xchg
cmp
ja
pusha
jns
adc
popa
test
sbb
lret
mov
fcomip
outsb
and
roll
popf
ret
outsl
mov
insb
pushf
mov
jbe
mov
pop
sbb
hlt
mov
pop
popa
jb
mov
movsl
in
pop
cmp
jg
je
lahf
pushf
lcall
jp
js
cmc
or
push
adc
xchg
pusha
adc
jb
mov
or
mov
sub
in
push
mov
jle
jmp
inc
test
mov
dec
jmp
fisttpl
inc
jbe
out
pop
ret
scas
jge
cltd
add
mov
int
out
push
push
mov
xchg
pop
arpl
in
test
pop
adc
pop
leave
in
or
movsl
dec
mov
bound
mov
mov
xchg
jb
sar
outsl
aad
dec
orl
sbb
push
dec
daa
cmp
insl
xor
jo
daa
mov
movsl
shll
pushf
ret
aad
out
and
js
fistpll
sub
or
adc
rcr
out
out
mov
or
sub
cmp
test
cmp
jg
cmp
mov
dec
jp
mov
ja
add
sti
sub
int3
jae
js
pop
jecxz
sub
dec
in
xor
dec
push
xchg
cmovne
xor
cmc
ret
and
jno
jno
addb
adc
xchg
scas
pop
scas
add
xorl
jg
scas
jae
pushf
sbb
mov
out
pop
dec
xchg
push
cmp
je
push
xchg
imul
lcall
out
mov
pusha
bound
push
jne
in
inc
ret
and
cmp
push
hlt
inc
adc
push
push
add
lods
xchg
jle
xchg
ja
cmp
jle
jbe
push
popf
mov
xor
dec
sti
movb
inc
dec
outsb
pop
sub
lea
arpl
pop
cmpsl
stos
cmpsb
add
adc
jmp
insb
adc
aas
push
jae
fstpt
and
or
mov
jmp
enter
je
mov
add
fcompl
xchg
aas
dec
in
mov
inc
fsubrs
xor
ret
mov
das
pop
arpl
ljmp
or
cmc
xorl
pop
add
mov
sbb
fwait
inc
mov
icebp
mov
push
aad
movsl
lea
mov
sbb
dec
fldcw
cmp
pop
pop
in
add
insl
insb
in
lods
fs
inc
ret
mov
pop
mov
adc
test
imul
test
iret
or
adc
out
or
imul
mov
mov
or
mov
dec
jno
sbb
dec
mov
add
push
rcrb
into
inc
mov
jae
jno
stc
sti
add
cmp
mov
jecxz
outsb
cmpsl
inc
neg
popf
rcll
adc
jnp
scas
cli
jge
push
orb
push
xchg
in
dec
sarb
into
cmpsb
xor
hlt
adc
or
mov
xchg
loope
loope
cwtl
call
adc
sbb
sbb
xor
cmp
cmp
aad
leave
cmp
lret
pop
add
sarb
aas
outsl
jo
xchg
xchg
sti
xchg
or
mov
jmp
mov
in
nop
cmp
scas
sti
mov
pop
popf
loop
aaa
xlat
and
cmp
adc
pushf
adc
mov
int3
push
cmp
outsl
daa
psrlw
lock
and
dec
sub
out
popl
jno
inc
and
dec
popf
pushf
jne
movsl
xchg
xchg
clc
inc
fcomps
lock
cmp
ret
jnp
sub
pop
lret
lods
scas
int3
out
adc
push
out
sub
lcall
loope
mov
cmp
and
pushf
mov
mov
jg
and
push
xrelease
out
popf
shr
fcoms
push
icebp
mov
xchg
scas
xor
andb
jne
xor
jmp
mov
aad
adc
sub
or
fildll
mov
dec
add
xor
adc
stos
inc
adc
js
inc
lret
ret
inc
xchg
cwtl
mov
or
mov
out
std
mov
gs
inc
es
divb
pop
sub
inc
lea
pop
xchg
pop
ret
daa
lcall
xor
loope
sbb
sbb
cltd
push
adc
lret
sbb
jg
xchg
fldcw
lods
movsl
popf
loope
xor
mov
jbe
fst
adc
mov
pop
aas
mov
cmpsl
enter
in
pop
arpl
add
jmp
js
jl
rclb
cmp
sub
mov
jecxz
test
out
and
xchg
pop
mov
jle
popa
cli
pop
jp
loop
mov
lds
or
insl
test
rcrl
and
test
dec
cwtl
insb
cmp
push
jmp
mov
rcrl
push
cld
imul
sbb
pop
xor
in
flds
xor
scas
xor
mov
xchg
out
sbb
mov
mov
push
pop
adc
jge
pop
push
clc
dec
xchg
lea
xchg
dec
ss
add
and
or
mov
int
loopne
xlat
aam
add
sbb
test
jle
push
aad
add
ljmp
inc
mov
dec
icebp
sahf
xor
and
dec
ljmp
sbb
mov
push
jle
mov
jb
enter
cmpsb
cmpsb
aas
out
cmp
hlt
mov
push
cs
inc
shlb
daa
nop
or
fbstp
jno
pushf
stc
out
jmp
fs
jae
adc
ffree
sub
sub
add
out
and
add
push
mov
les
push
aam
xchg
test
push
mov
aas
or
lods
jae
jns
fwait
iret
mov
loope
lock
mov
mov
xchg
fistl
pop
mov
hlt
inc
xlat
xor
xor
scas
inc
jmp
outsb
adc
cld
in
sbb
add
int3
inc
sub
je
rcrl
cmp
les
cwtl
xlat
mov
mov
mov
insb
lods
movsb
sbbl
fdivs
or
rcr
push
pop
movl
test
shlb
sbb
sub
dec
shlb
cwtl
fisubrs
out
or
mov
jnp
xchg
aas
clc
idivb
mov
sahf
mov
fs
cmp
repnz
inc
fdivrl
jmp
jnp
or
iret
mov
lock
push
lcall
mov
stc
dec
jno
bnd
loop
or
xor
adc
jns
push
fs
shll
and
nop
mov
leave
add
mov
imul
repnz
and
sbb
jmp
into
cmc
adc
mov
mov
pop
ret
mov
push
fdiv
stos
mov
loope
xchg
bound
pop
fsubrs
inc
fsubrp
rcll
bound
mov
add
inc
pop
call
dec
sub
les
xchg
pop
insb
push
notl
daa
add
push
jecxz
dec
push
inc
xor
test
lea
xchg
je
inc
das
repz
jle
xor
shl
nop
push
xchg
jmp
scas
jg
and
cli
inc
clc
pushf
stos
xchg
and
inc
test
mov
mov
fsubr
xor
fbstp
fwait
aas
add
or
cmc
ficoml
jle
out
pushf
scas
mov
pop
mov
ret
bound
hlt
mov
notl
lock
push
movsb
push
xchg
rclb
test
ljmp
pop
ficomps
xchg
dec
nop
push
or
mov
imul
jecxz
les
sub
loope
test
mov
inc
mov
pop
mov
filds
push
push
test
lds
cld
out
adc
sub
add
cmpsb
cmp
pop
lahf
sbb
loope
dec
inc
xchg
push
xchg
cltd
out
addr16
push
xchg
sub
mov
ror
fldcw
cmp
mov
jp
jae
xchg
add
inc
cmc
push
sub
sbb
adc
faddl
jl
cwtl
and
in
stos
dec
jl
bound
push
dec
nop
mov
stos
rcrl
pushf
mov
mov
ret
and
je
test
insb
add
sub
lea
mov
jns
sarb
mov
pop
push
push
inc
jp
repnz
and
cs
mov
dec
mov
and
pusha
in
js
adc
add
jl
xchg
dec
sbb
inc
push
rcrb
inc
ret
hlt
imul
in
pop
or
lret
xor
pop
jno
outsb
cmc
cs
in
and
mov
pop
lret
aas
loopne
mov
fnstcw
mov
lods
push
or
out
shlb
cld
daa
xor
cmpsl
xchg
in
mov
mov
xchg
cmpsb
fstl
nop
and
dec
mov
and
fnstsw
movnti
sbb
mov
cld
in
jae
bound
sbb
mov
in
inc
pop
decl
jecxz
das
mov
pop
adc
jmp
pop
adc
addr16
or
inc
dec
or
adc
pop
adc
negl
pushl
js
arpl
lods
lret
bound
inc
ret
lcall
aam
and
mov
sub
push
cmp
std
adc
sbbb
xor
jne
adc
sub
mov
sub
mov
xchg
mov
ja
fimuls
cli
popa
bound
imull
movsl
sub
inc
push
pop
inc
pop
fs
test
adc
ds
inc
inc
pop
mov
in
xor
testl
cmp
sbb
insl
jle
or
jg
pop
lahf
dec
mov
xchg
pop
lea
mov
pop
jle
xchg
and
adc
push
adc
adc
jo
sub
enter
dec
movb
fiadds
mov
mov
lock
lock
push
add
call
or
adc
cwtl
adc
xchg
in
out
mov
fstps
mov
jmp
ss
je
sub
jns
and
icebp
shll
sbb
sbb
dec
cmp
jne
mov
mov
add
icebp
lcall
xchg
call
mov
pop
or
xlat
inc
or
aad
sub
xchg
addb
out
lock
pop
push
shr
jecxz
cmc
pop
pop
out
popa
fs
rolb
inc
sub
test
and
cltd
and
xchg
repnz
lock
fsubs
out
xor
int3
xor
sub
dec
inc
push
insl
jp
jnp
inc
imul
outsl
xlat
sbb
and
ja
mov
adc
aas
cmpsb
jno
subl
insb
lods
test
aaa
aas
xchg
aas
cmc
test
subb
pushf
lea
int3
jle
mov
addl
movb
mov
jo
es
repnz
mov
stc
fldenv
pop
test
jp
add
rcll
adc
dec
jecxz
push
test
and
or
in
mov
push
mov
imul
dec
fldl
mov
pop
scas
dec
or
dec
dec
into
inc
pushf
mov
push
mov
dec
xchg
jg
push
xor
icebp
lahf
aad
frstor
cli
jl
dec
lret
orl
push
movsb
lret
add
dec
or
imul
pop
cmpsb
inc
jle
push
mov
scas
lds
shl
mov
sbb
mov
dec
and
jl
dec
incl
xchg
sbb
daa
loope
lods
mov
mov
add
mov
lret
sbb
mov
ret
mov
das
dec
push
or
icebp
hlt
shll
daa
dec
xlat
jecxz
stos
fstl
sub
jecxz
mov
test
add
imul
adcl
or
mov
adc
pusha
ret
jae
xor
test
pop
or
aad
jnp
sbb
push
out
add
int
mov
dec
les
or
jp
add
push
inc
cmp
mov
mov
inc
mov
xlat
cmc
pushl
xchg
cld
nop
adcl
sbb
dec
pop
div
or
cld
in
cmp
stos
xchg
pop
dec
adc
inc
aad
pop
jnp
mov
cmp
add
lock
sbb
lret
xchg
mov
adc
popa
and
pop
test
inc
push
lods
popl
leave
mov
push
push
pop
cwtl
into
cs
pop
sub
mov
mov
push
adc
ret
mov
pusha
cmp
sub
or
aad
mov
push
lret
add
adc
andb
mov
adc
call
outsl
or
jbe
cli
icebp
dec
xchg
jmp
jmp
nop
sub
stos
lea
fisubs
push
cmp
sbb
inc
jnp
in
sub
cli
sbb
push
test
push
test
mov
lock
xor
jb
out
fcomip
scas
add
add
mov
cmpsl
sbb
out
dec
and
mov
lahf
jno
test
add
out
sub
jl
cmp
mov
inc
das
and
cvtdq2ps
mov
insb
mov
movsl
lds
nop
je
rcll
and
negl
icebp
aam
dec
ret
lret
mov
push
sbb
mov
add
cmc
pop
jb
mov
adc
popf
sbb
jbe
lods
xchg
test
sbb
andl
cmp
dec
add
mov
roll
imul
mov
mov
testl
dec
in
cmp
and
mov
repz
push
bound
inc
stc
in
inc
pushf
jle
mov
jecxz
jmp
xchg
out
pop
outsl
lcall
aaa
gs
xor
or
add
ret
xor
test
fwait
xor
popf
pop
mov
out
mov
cmp
adc
mov
push
shrb
repnz
or
pop
cmp
cli
dec
fs
orl
bound
or
out
ds
add
fisubl
and
lret
lock
addr16
cltd
leave
cmp
imul
scas
pop
jg
and
xor
mov
fidivl
push
push
mov
adc
push
lea
push
push
push
cmc
jl
pop
jge
cs
ret
xor
pop
jmp
lock
xlat
xchg
xchg
or
popf
push
sbb
and
in
pop
mov
jg
cmp
inc
fisubs
scas
lahf
dec
lock
inc
out
out
and
loop
or
je
mov
sub
insl
out
pop
xor
aad
mov
mov
inc
outsl
add
shll
xor
dec
aad
cmp
lret
flds
vmovupd
stc
xchg
inc
mov
xchg
dec
adc
mov
inc
outsl
std
mov
push
pop
fisubs
xchg
repnz
shll
call
dec
fsubrs
and
nop
stos
mov
inc
pop
das
daa
lret
rorl
enter
or
ret
inc
neg
es
jb
addr16
mov
js
fists
push
jnp
jle
or
lock
inc
into
and
aam
int
and
sub
inc
fmuls
addb
xor
pop
negb
adc
sbb
jnp
xor
out
movl
sub
inc
insl
js
push
arpl
jp
adc
sbbl
call
cmp
pop
inc
mov
rorb
fistl
sarb
sub
in
js
imul
dec
bswap
aas
xor
and
mov
inc
fisubs
ret
invd
arpl
inc
mov
mov
std
or
and
inc
lahf
mov
data16
imul
mov
sub
xor
insb
or
or
test
push
xor
repz
loope
inc
sbb
ljmp
es
mov
mov
xor
fmul
scas
jno
xor
test
shll
sti
js
jb
jb
adc
sub
and
ja
hlt
out
and
adc
xchg
call
dec
lret
push
cmc
in
push
push
mov
xchg
sti
lret
and
aas
pop
das
and
push
in
sub
repz
in
fwait
push
fwait
iret
imull
mov
mov
adcb
fldcw
in
sbb
jbe
pusha
imul
pusha
mov
insb
fildl
repz
outsb
push
xor
add
ss
aam
fbstp
dec
xor
rorb
jmp
jno
pop
rcrb
loope
fcmovnu
xlat
ret
popa
push
jnp
mov
push
inc
popa
lds
mov
dec
sti
jmp
mov
fdiv
push
and
dec
lcall
je
sub
mov
dec
in
test
int
lea
mov
jns
xchg
pop
outsl
mov
js
jmp
dec
rolb
mov
jae
aas
mov
shll
sbb
push
cmp
adcl
and
inc
mov
fsts
sti
test
rcrl
mov
push
cltd
imul
outsl
xchg
fdivrl
adc
test
push
sub
sbb
fidivrs
loope
add
inc
or
cmp
enter
add
clc
inc
xchg
lods
addr16
test
pop
cld
push
fdivrl
mov
call
push
nop
in
clc
mov
adc
mov
xor
cs
jnp
dec
mov
hlt
fldl
push
int3
mov
push
mov
sbb
or
js
push
in
loope
jno
outsl
add
frstor
jl
fcompl
mov
pop
scas
sbb
sbb
data16
out
jp
cmpl
fnstcw
lea
testb
mov
mov
or
sub
push
xor
push
cmp
cmp
fwait
ret
xchg
mov
sub
add
sub
sub
add
test
roll
fisttps
xchg
pop
clc
pop
lret
push
dec
sbb
scas
add
xlat
mov
ficoms
pop
movsb
mov
mull
and
bound
jg
and
loopne
clc
mov
or
mov
cmp
push
movsl
jmp
xchg
mov
lds
insb
bound
lahf
xchg
mov
push
mov
lret
jno
mov
aaa
sti
pop
jb
lods
into
sub
and
inc
arpl
icebp
aad
inc
in
test
lcall
xchg
outsl
push
imul
and
sar
push
mov
outsb
add
dec
popa
or
nop
pop
ret
call
nop
cmpsl
pop
popa
push
scas
xlat
imul
insl
xor
xorb
lcall
lods
jne
push
stc
cmp
fs
jo
mov
popf
mov
cmp
mov
negb
divl
sub
mov
push
xchg
test
jge
outsl
arpl
imul
xchg
sbb
or
push
ss
insl
ljmp
xorl
lock
adc
sbb
vhsubpd
popf
std
sub
hlt
mov
pop
sbb
popf
inc
xchg
jne
mov
jb
push
and
jo
sarb
sbb
dec
testb
outsl
sub
and
adc
ljmp
ja
inc
andl
mov
nop
mov
sbb
sahf
cmp
ds
jmp
mov
loope
imul
jne
arpl
int
test
outsb
adc
cmp
iret
inc
enter
scas
xchg
xor
dec
mov
ja
pusha
leave
and
mov
sub
mov
cmp
add
call
enter
out
ds
sbb
push
or
leave
inc
jmp
mov
movl
pop
test
push
ljmp
ds
out
cltd
dec
or
repz
xchg
jmp
loop
and
inc
in
mov
adc
xor
jle
or
push
pop
dec
imul
push
pushf
xchg
cli
insb
ret
rorl
mov
dec
icebp
jmp
dec
iret
jl
pop
xchg
leave
fnstcw
mov
scas
lods
cmpsl
xchg
mov
out
cld
mov
adc
aaa
loop
xchg
or
daa
or
loop
inc
xchg
lahf
mov
loope
lds
sbb
in
pop
mov
gs
fs
lea
xchg
imull
out
movsl
dec
push
xchg
lea
dec
addl
cwtl
jnp
sbb
insl
nop
test
pop
adcl
sub
outsb
or
leave
pop
fdivrp
je
push
cmp
jo
dec
fs
jnp
mov
addr16
ret
sti
mov
push
arpl
shrb
pop
xchg
add
fs
sbb
mov
cli
popa
jo
nop
cmp
mov
jbe
inc
dec
add
stc
fidivrs
mov
pop
inc
in
push
cwtl
in
pushf
sahf
inc
sub
jg
xchg
or
pop
mov
cs
push
dec
cmc
sti
sub
xchg
xor
mov
xor
cmpsb
int3
sub
mov
arpl
repz
pop
ljmp
and
shll
mov
lods
push
cmp
jmp
sahf
outsl
cmp
mov
lahf
jmp
push
mov
dec
pop
icebp
rorb
icebp
mov
xor
mov
xchg
xorb
dec
or
or
sahf
cmc
or
stc
scas
outsl
pop
jmp
lret
cmp
xor
sbb
mov
ja
xchg
mov
adc
imul
push
push
jmp
lods
sbbl
je
or
pop
sub
mov
and
lret
xor
lahf
inc
mov
stos
jmp
cmpsb
cld
ljmp
jp
dec
mov
mov
adc
addr16
and
das
mov
imul
pop
cmp
cmp
iret
jecxz
fisubs
mov
pop
lcall
mov
mov
ds
cmp
dec
popf
mov
out
out
shlb
insl
push
push
and
cmpsb
outsb
imul
push
jbe
xlat
xchg
fnstsw
mov
cmp
mov
pop
sub
loop
or
rcrb
adc
jg
bound
pusha
imul
stos
adc
mov
mov
out
or
mov
fldcw
fiadds
pushl
jge
mov
andl
mov
lock
xchg
adc
repz
std
mov
or
arpl
mov
mov
out
adc
push
push
dec
int3
outsl
push
lods
pop
sub
mov
lret
jo
shlb
sahf
sti
mov
sbb
jmp
pushf
ror
cmp
sub
stos
stos
inc
mov
inc
xchg
lahf
jmp
jmp
loope
push
imul
mov
cld
and
or
mov
cmc
add
jnp
cmp
fprem1
and
std
insl
mov
test
fbstp
popa
icebp
xchg
andl
imul
mov
jbe
jmp
sahf
xchg
movsb
sub
test
pop
cmpsl
xor
and
addb
or
mov
repz
and
cmc
fs
cwtl
sahf
dec
inc
flds
push
push
push
int
sub
push
pusha
push
push
sub
pop
loopne
ss
mov
lret
mov
ficomps
xchg
ja
jg
sbb
ficoml
adc
add
push
sbb
out
jbe
fsubl
icebp
shlb
xchg
and
push
or
add
clc
out
fcmovbe
mov
mov
mov
push
pop
dec
or
in
cmp
rcll
cmc
add
mov
or
testl
addb
int3
das
pop
out
ljmp
inc
sub
xor
aaa
push
in
test
je
mov
jae
push
out
add
outsb
mov
cmp
add
loopne
jno
sbb
roll
or
mov
push
mov
pop
out
nop
mov
enter
xchg
popa
xchg
popa
gs
adc
pop
push
test
push
push
test
jp
mov
fistl
xor
adc
lahf
scas
inc
xlat
jno
dec
rcrb
jnp
adc
jge
rorb
xor
sbb
inc
mov
imul
mov
pop
ljmp
adc
ds
jp
ror
pop
mov
stos
or
mov
or
adc
and
inc
psubusb
ret
das
mov
push
test
fistpll
cmp
scas
xor
push
stos
xchg
push
push
pushf
xchg
mov
and
out
pop
ficoms
xchg
andb
xchg
adc
fistps
aaa
xchg
mov
mov
sub
ss
data16
sbb
movl
ficomps
push
xchg
jo
enter
pop
bound
outsb
mov
je
sbb
dec
adc
mov
inc
push
xchg
shlb
stos
cmp
imul
adcl
xchg
mov
ret
scas
mov
mov
mov
push
push
fdivs
arpl
movsl
lock
lea
scas
pop
xor
and
gs
jg
bound
cmp
add
testb
mov
xchg
pop
scas
inc
xchg
push
ret
scas
mov
pop
imul
inc
dec
in
clc
sub
aaa
xchg
sub
in
or
jle
pop
out
jmp
test
leave
fisttps
movsl
or
pop
push
movsb
mov
scas
daa
shl
adc
xchg
mov
push
mov
push
mov
sti
pop
dec
cmp
ja
fwait
cli
ficomps
sub
jl
pop
pushf
mov
cmpb
xchg
jno
lods
mov
loope
subl
sbbl
sub
fsubr
bound
sar
mov
fmull
aaa
stos
ret
jg
push
inc
scas
mov
mov
dec
mov
shll
lock
fstp
es
insl
mov
adc
cmc
dec
jbe,pt
jbe
hlt
push
dec
adc
cmc
xor
mov
lcall
aaa
cltd
insl
mov
push
or
stos
fs
cmpsl
repnz
insb
movsb
pop
dec
dec
in
in
rclb
lcall
pop
sbb
inc
mov
dec
jbe
mulb
xor
std
push
test
cmp
push
lods
stc
fimull
add
fidivl
inc
inc
nop
fldenv
iret
pop
xor
adc
mov
adc
jbe
clc
push
lods
loopne
adc
dec
jecxz
jmp
pop
jge
loope
mov
inc
jp
adc
inc
and
mov
addr16
cli
or
mov
inc
rcll
xchg
enter
ret
test
or
scas
dec
stc
xor
enter
and
xlat
ds
lea
aam
mov
loopne
js
out
pop
lret
jge
xor
mov
fldl
dec
pop
xor
mov
or
movsl
xlat
dec
icebp
outsb
test
icebp
out
cld
mov
ret
xchg
mov
dec
mov
cmc
ret
push
loopne
cld
or
xor
dec
cs
bound
insb
inc
sbb
mov
mov
pop
rclb
dec
or
notb
loop
push
cwtl
rcl
aaa
xchg
or
add
sarb
dec
clc
addr16
cli
mov
add
mov
inc
test
test
and
jno
clc
sub
mov
clc
sub
inc
mov
loop
mov
mov
add
fs
imul
jbe
xor
inc
nop
jo
icebp
stc
sbb
lds
int3
push
xor
lret
xchg
aas
data16
rorb
sub
xor
mov
loope
inc
into
sbb
lahf
dec
xor
aas
outsl
mov
mov
mov
movsl
cwtl
rclb
lods
mov
cmpsl
fistl
sahf
cli
and
ss
imul
lret
les
sbb
cmpb
cmp
aad
les
fbld
dec
jmp
pavgw
lahf
mov
lea
or
jg
lock
jmp
movsl
mov
inc
mov
cmpl
ficomps
cli
out
or
in
xor
fiadds
jl
or
mov
and
and
sub
pop
sub
scas
xor
cmp
mov
mov
jo
add
lahf
popa
into
in
popf
lret
dec
std
xchg
icebp
mov
xchg
test
icebp
sbb
mov
nop
pop
dec
mov
sbb
cmp
inc
aam
jg
ss
mov
aas
fildll
xchg
fildl
or
fs
dec
add
pop
mov
push
ret
xchg
pushf
push
fldcw
adc
mov
imul
xchg
mov
or
icebp
popf
push
pop
jo
mov
into
mov
scas
pop
faddl
xlat
subb
lret
or
bound
or
mov
sbbb
shrb
sub
aam
mov
fidivrl
stc
sbb
mov
cwtl
iret
in
dec
imul
call
dec
dec
test
insb
lcall
aas
ss
into
fcoms
cmpb
or
sbb
sarl
and
mov
mov
lcall
xor
pop
sub
or
vphaddwq
ljmp
in
sub
push
dec
faddl
aad
out
or
mov
test
xor
pop
movb
mov
cmp
stc
out
xor
pop
add
sbb
push
xor
fwait
inc
sub
sahf
xchg
pop
negl
loopne
dec
xchg
sarl
je
bound
or
insl
mov
std
xchg
or
add
mov
cmp
repz
or
sub
and
mov
sbb
ret
gs
fists
ss
inc
lret
cmc
mov
jl
push
mov
les
mov
ljmp
inc
leave
pop
mov
js
sub
xor
int
outsl
xor
pop
sbb
bound
mov
xor
jg
add
stos
ret
sbb
mov
pop
cmp
call
push
mov
loopne
divb
xor
xchg
mov
shll
es
xchg
fs
pop
adc
add
in
lds
popf
pop
lahf
xchg
and
add
or
pop
jge
mov
push
or
enter
outsb
mov
push
jb
xchg
jle
dec
jg
push
popf
sub
fdivrl
call
xchg
or
leave
imul
ret
inc
cmp
add
aad
adc
mov
leave
jecxz
pop
xchg
sbb
xorb
ud2
mov
ds
data16
js
push
les
inc
inc
clc
ds
sbb
loopne
enter
lods
mov
in
pop
fidivs
dec
or
mov
lret
push
leave
sbb
repnz
jno
outsb
cmpsb
push
negl
mov
pop
icebp
push
inc
arpl
jns
out
cltd
jmp
sub
xchg
roll
ja
and
xchg
xlat
lret
inc
std
hlt
cwtl
add
js
jae
add
or
ja
sub
dec
xor
or
xchg
xchg
leave
add
xorl
mov
jo
fdiv
hlt
fcomps
test
aas
shrb
lds
sub
les
in
mov
cwtl
jns
mov
fcomip
pop
push
jg
push
inc
xor
xor
jg
add
cmc
inc
sti
psrlq
jl
cld
and
jae
movsl
adc
sub
int3
les
push
stc
push
fidivrl
mov
and
mov
push
test
inc
out
pop
mov
sub
push
icebp
dec
xchg
sbb
lods
mov
lods
lahf
cmp
add
jo
push
or
add
inc
roll
inc
push
dec
adc
sub
jmp
scas
mov
sti
jns
jge
das
inc
stc
popa
mov
fsubl
ficoms
xchg
mov
in
shrb
pop
mov
imul
sub
mov
fwait
mov
mov
out
mov
xor
sbb
xchg
ja
lock
mov
xor
jo
setae
mov
push
mov
lret
xchg
mov
repnz
in
fnsave
mov
push
sub
mov
cs
into
cmpsb
jle
mov
or
or
push
cltd
aam
mov
sti
scas
iret
lods
jnp
dec
or
out
movsl
xor
lods
sahf
dec
and
scas
sub
kandnb
lock
xor
jno
repnz
lret
stc
cs
loopne
out
fidivs
adc
rolb
fwait
jmp
mov
lcall
xchg
pushf
je
xchg
mov
adc
mov
dec
jne
loopne
dec
sbb
ret
cli
sbb
icebp
out
mov
call
aas
push
or
or
cmp
add
rol
stc
push
shrl
dec
js
repnz
mov
imul
cmp
cmp
ret
mov
subb
add
mov
xor
jmp
jnp
mov
jecxz
test
pop
std
gs
mov
fbld
movsb
mov
cmp
mov
jns
jmp
lds
fmuls
add
cltd
ret
xor
push
adc
add
mov
popf
cmp
mov
jb
push
mov
or
imul
or
cli
pop
and
pop
pushf
xchg
je
cmp
sbb
loop
add
pop
testw
hlt
pop
push
cmpb
das
pop
inc
mov
mov
jge
stc
ds
scas
xchg
out
sub
mull
pop
sub
out
xor
push
loope
mov
cmc
or
ficompl
pop
pop
outsb
mov
inc
movsl
jg
cli
sub
adc
xlat
adc
out
push
mov
jne
ret
loop
test
mov
mov
dec
div
fistpl
inc
and
movsl
scas
xchg
clc
dec
add
add
div
jbe
xor
cltd
ds
xchg
sub
sbb
pop
pop
hlt
js
xchg
aad
test
in
test
adcb
mov
ret
mov
int
mov
xchg
inc
scas
push
fldenv
pop
xor
shlb
sbb
fwait
movsl
jecxz
lahf
or
xchg
mov
insb
shrl
dec
add
repnz
mov
pushf
lahf
or
xchg
in
pusha
lds
shll
fwait
and
push
push
fnsave
addr16
xor
push
mov
shrl
stos
out
jae
ror
mov
mov
cwtl
scas
inc
cmc
movsl
xlat
pop
cmpl
sub
xchg
cs
inc
inc
adc
mov
push
hlt
push
cmp
xor
cli
mov
inc
cmpsl
inc
loop
mov
sbb
rorb
mov
mov
xchg
gs
enter
jmp
adc
test
pop
enter
xor
jecxz
jbe
enter
mov
aad
xor
cmp
jg
clc
scas
xor
inc
sbb
mov
test
inc
popa
xchg
stc
add
into
sbb
fistl
leave
cli
aas
push
jge
push
test
xchg
mov
mov
jmp
and
mov
mov
and
mov
xor
call
lret
inc
push
pop
inc
jg
sar
pop
xchg
jb
mov
jbe
adc
fsubrp
ljmp
hlt
dec
push
jp
mov
mov
fadd
sbbl
add
aad
in
stc
mov
and
stos
mov
pop
dec
mov
ret
push
arpl
lret
push
jb
xor
aaa
or
fwait
mov
sub
jo
ret
xchg
movsb
popf
and
adcl
mov
inc
mov
outsl
push
add
and
fisttpl
int3
xor
jecxz
xchg
popf
inc
jp
push
test
push
dec
xlat
arpl
adc
push
push
mov
sub
sbb
jnp
mov
sub
hlt
adc
cmp
or
cltd
bound
jne
adc
pop
aam
dec
cmp
xchg
fnsave
sbb
lahf
icebp
imul
pop
loop
in
pop
mov
add
call
mov
test
ljmp
lret
std
imul
xchg
insb
loop
sub
stos
cmpsl
push
pop
or
jae
pushf
ljmp
xlat
add
dec
mov
mov
and
test
leave
in
pop
push
mov
jecxz
dec
mov
ja
hlt
mov
repnz
fcoml
fistps
push
jp
cmp
xor
movsl
pop
and
push
xchg
stc
mov
jle
fcompl
adc
add
xor
movsb
push
movsb
sub
push
pop
movsl
repz
lds
test
push
addr16
mov
insb
cs
xor
scas
mov
repz
mov
les
ret
loop
imul
xchg
leave
push
dec
mov
xchg
jg
popl
push
mov
push
mov
fiadds
inc
mov
aam
push
push
lods
imul
je
mov
stos
push
test
notl
cwtl
es
in
je
shlb
mov
dec
sbb
aad
pop
xchg
scas
rcll
jle
test
dec
sbb
add
push
sbb
jne
lds
push
mov
rcl
sbb
repz
sub
mov
test
cmp
in
adc
leave
imul
notb
outsb
and
and
mov
cmpsl
cwtl
xchg
nop
push
cld
sbb
xor
or
les
inc
inc
jno
cmp
int3
adc
lds
stc
ljmp
loop
dec
xchg
into
xor
cmc
insl
add
and
int
neg
inc
dec
or
mov
xlat
adc
push
jge
aam
fucomp
int3
repnz
lock
xchg
sbb
bound
sbb
test
ljmp
jecxz
pop
mov
dec
and
outsl
xchg
fwait
add
mov
sub
cmc
mov
incb
mov
cld
xchg
cld
dec
inc
in
add
dec
pop
insl
sti
cmp
aaa
in
cmp
lock
test
aam
pop
jae
mov
sbb
movsb
cli
cmpsl
or
dec
push
movsl
mov
mov
or
sub
leave
ret
loop
inc
leave
sub
xchg
mov
dec
rorb
bound
lea
jae
lods
js
or
and
sbb
or
cli
daa
mov
jg
scas
test
mov
fwait
aaa
dec
and
xor
inc
bound
idivl
and
dec
cmpl
enter
fbld
xchg
das
push
jne
add
pop
mov
insl
imul
sbb
pop
mov
dec
cld
and
nop
mov
shlb
clc
cmp
jae
pushf
lods
xor
cmp
aaa
enter
nop
mov
jb
jmp
out
roll
xchg
sbb
jmp
xchg
push
scas
packuswb
mov
push
xchg
test
or
mov
test
or
push
rcrb
adc
mov
cmp
hlt
pop
sbb
out
mov
lret
xchg
lods
dec
test
push
xor
and
inc
and
dec
xchg
inc
hlt
mov
mov
pop
mov
xlat
inc
or
roll
in
sbb
std
add
mov
inc
push
cltd
or
pushf
adc
outsb
pop
xchg
ljmp
pop
ss
pop
ret
or
or
es
cmp
inc
popa
dec
mov
das
inc
insb
gs
or
pop
xor
and
lret
loope
dec
mov
das
add
or
data16
mov
sub
pop
and
je
pop
adc
hlt
and
es
jne
lahf
mov
into
frstor
nop
xor
mov
xor
jnp
repnz
dec
nop
fldt
addl
aaa
pop
and
or
in
inc
aad
sbbl
jmp
sti
pop
scas
idiv
mov
add
add
aam
ret
mov
mov
xor
dec
pop
mov
js
adcl
mov
lods
dec
cmp
jp
cs
outsl
fs
jae
daa
mov
hlt
or
imul
rolb
repnz
jmp
arpl
or
mov
sarl
push
xchg
xor
enter
ret
xor
lock
into
adc
xchg
sarb
mov
mov
std
mov
nop
lods
adc
lock
ja
jnp
pop
cmpsb
and
stc
lea
cmp
add
and
and
sub
int3
call
ja
inc
repnz
push
out
inc
fisttpll
sbb
mov
mov
dec
jl
lcall
fcoms
and
adc
inc
cmpl
int
lahf
outsb
lods
cmp
enter
fwait
das
xlat
push
push
mov
clc
push
mov
imul
arpl
mov
pop
jne
pushf
testb
fsub
mov
adc
fwait
cltd
cmpsl
jg
inc
mov
mov
jp
mov
outsl
test
sub
popf
push
jno
mov
stos
lods
jmp
push
jmp
les
repz
rcl
sarb
nop
adc
dec
iret
stos
inc
mov
mov
and
adc
jg
call
mov
fiaddl
addr16
xor
std
push
out
push
push
inc
xor
fildl
notl
cmp
int3
and
mov
or
shl
sti
into
enter
scas
mov
aad
sub
sbb
inc
test
inc
and
cli
inc
mov
enter
pop
lea
adc
fildll
sbb
cmp
jb
cmp
dec
fldl
push
in
imul
xchg
sub
in
fstps
ret
fldl
ja
add
pop
mov
and
scas
adc
jecxz
pop
les
push
shlb
rolb
xlat
xor
mov
mov
xchg
and
movsl
das
inc
adc
aaa
xor
mov
iret
loope
int
add
iret
and
lret
add
sub
es
mov
fidivl
xchg
bound
and
roll
fisubrs
bound
push
mov
add
mov
push
mov
hlt
mov
dec
cmc
or
push
leave
lock
cmpsb
nop
xchg
ret
movsl
imul
jp
loopne
or
mov
stos
adc
outsl
repnz
ret
inc
mov
dec
ss
sub
lods
out
mov
mov
add
in
cmp
and
mov
and
jg
adc
popf
dec
push
xor
fnstenv
jne
nop
aas
pop
dec
ficompl
or
xchg
jae,pt
pop
pop
out
outsb
xchg
adc
inc
cmp
mov
lahf
or
jae
jb
mov
sarb
int
lds
mov
pop
js
idivl
cmpsl
ds
add
adc
out
xchg
lea
cmpsb
xchg
and
aam
sub
xor
pop
add
gs
or
adcb
loop
das
shr
jge
in
test
adc
push
fmul
jns
out
or
mov
out
outsl
loopne
inc
sub
data16
jo
mov
cmpsl
pusha
fldcw
sbbl
dec
aam
das
lret
sbb
lahf
leave
adc
test
sti
lahf
inc
mov
push
loopne
repz
scas
sbb
xchg
mov
adc
adc
and
stos
xchg
jmp
insb
mov
jl
popa
fildll
cmp
sub
icebp
pop
inc
cld
lods
mull
pop
scas
jmp
pop
cmpl
mov
push
dec
xchg
out
rcr
jno
movsb
mov
fcomps
push
gs
push
je
sti
in
jne
push
cmp
aaa
fstl
frstpm(287
arpl
xchg
mov
cwtl
imul
enter
pavgw
mov
dec
imul
jp
dec
sbb
pop
enter
cmp
xor
filds
aad
mov
pop
xor
xchg
aad
shlb
push
inc
jl
sahf
loope
mov
cmp
clc
cli
int
inc
sub
push
in
push
addr16
xor
or
mov
rcr
and
out
ficoms
ja
clc
pushf
stc
scas
jle
pop
dec
adc
fistpl
push
xchg
mov
addr16
arpl
inc
cmc
stos
popa
mov
mov
jo
ss
dec
loop
lock
in
bound
rorb
push
fs
cmp
call
es
aam
xchg
lea
inc
aas
je
dec
xor
sub
mov
mov
sub
dec
add
jge
mov
adc
icebp
repz
cmp
and
out
pop
mov
out
mov
daa
xor
aam
hlt
test
inc
dec
cmc
jno
cmpsl
in
push
push
loope
xlat
push
loop
mov
xor
sub
stos
sahf
cmpsl
push
inc
stos
lcall
sbbl
mov
loope
inc
add
mov
mov
hlt
or
dec
inc
je
xchg
mov
cltd
dec
mov
push
jnp
push
cmp
and
test
data16
in
filds
push
add
test
push
or
or
sar
xorb
icebp
lods
add
xchg
ret
mov
sub
inc
ret
mov
mov
sub
mov
mov
add
mov
int
into
inc
inc
imul
imul
mov
cmp
add
push
jbe
push
shll
or
mov
xchg
push
lcall
arpl
sbb
imul
inc
add
out
shlb
fdiv
xor
mov
dec
inc
adc
lcall
sbbl
into
cmpsl
rorl
and
jmp
pop
mov
mov
xchg
mov
addr16
rcrb
inc
xor
jno
loop
fistpl
and
push
divb
test
mov
pop
out
mov
xor
les
pop
sub
pusha
clc
jle
adc
push
pop
notl
sub
icebp
rol
mov
add
adc
outsl
rol
or
add
mov
gs
push
push
jo
gs
sub
mov
and
push
mov
iret
mov
or
stos
lock
cmp
cli
ss
and
test
mov
fstps
out
cmpsb
popa
xchg
in
sbb
insb
cwtl
hlt
xor
pop
jne
jmp
imul
jns
mov
cld
popf
jl
mov
sub
inc
add
cmp
out
test
std
mov
mov
sahf
pop
movsb
fucomip
sbb
adc
push
int3
addl
inc
out
aas
scas
sahf
xor
scas
sbb
or
pusha
add
adc
mov
hlt
adc
sti
jecxz
jns
gs
mov
xor
adc
lret
jne
mov
les
add
push
cmp
idivl
scas
daa
add
sbb
inc
pop
imul
in
jg
mov
sbb
xor
xchg
pop
and
repz
add
ljmp
and
dec
lods
ljmp
cmp
sub
in
inc
test
dec
add
scas
push
fcomi
inc
shll
iret
jl
mov
jae
xor
filds
imul
ljmp
inc
push
cltd
ret
jb
mov
call
daa
inc
dec
cmp
cs
movsb
daa
xchg
xor
lods
cmc
mov
ds
adc
repnz
mov
dec
out
movsb
jmp
icebp
jbe
js
int
sbb
rcrb
dec
call
mov
cwtl
imulb
out
js
popa
lret
mov
mov
lock
jmp
aaa
fsubrs
cmp
jno
imul
cld
sub
sbb
call
xchg
icebp
mov
ljmp
jae
pop
shlb
movsb
insl
dec
rclb
mov
hlt
jae
mov
pop
inc
outsb
xchg
xchg
ljmp
push
test
fstl
out
rorl
cwtl
faddl
cmp
pop
and
dec
jl
jp
xor
sub
sub
or
adc
adc
mov
mov
loope
and
or
pusha
cmp
dec
jb
mov
iret
jmp
xchg
and
jae
out
xlat
push
call
insl
add
mov
push
dec
mov
mov
outsb
daa
adc
mov
mov
cmp
loope
add
ficompl
jb
add
cmp
aaa
push
push
mov
xor
xchg
mov
enter
jne
shr
lods
testb
pop
xchg
xchg
fisttps
dec
or
idivl
and
test
mov
add
imul
dec
jp
xchg
mov
and
stos
test
fsubrl
push
out
stc
iret
pop
and
cmpsb
cmpsb
jno
iret
sub
xchg
jecxz
fdivr
movsb
out
push
push
mov
loopne
dec
cmpsb
movsl
mov
and
pushf
cwtl
mov
cmc
pop
adc
cli
sahf
dec
mov
bound
aas
pop
scas
sub
lds
sbb
pop
xor
dec
jns
push
ja
sub
stos
dec
or
or
inc
js
pop
mov
insb
push
fwait
test
scas
int3
mov
sub
sarb
xchg
dec
mov
aam
arpl
pop
mov
push
xor
add
scas
cmp
dec
stos
sbb
jb
iret
mov
in
std
cmp
inc
test
mov
lods
loop
inc
push
sahf
push
xchg
jl
adcb
lock
ror
clc
jb
mov
xchg
mov
push
jbe
fildll
sub
cs
sub
jne
jmp
inc
and
mov
lret
in
jle
mov
pop
mov
clc
pop
pop
gs
mov
rcl
cmp
ds
or
cmp
mov
jb
jge
add
mov
xchg
dec
push
ss
scas
mull
sbb
add
popf
es
sub
mov
movsb
cwtl
add
lahf
mov
loop
test
jl
fdivrl
adc
gs
repnz
scas
add
rcl
lds
aam
cmp
bound
lahf
push
in
sarl
dec
dec
dec
loop
cmp
pop
dec
mov
test
adc
xor
or
push
es
int3
or
xor
jp
jbe
mov
inc
xor
iret
jnp
movsl
out
loopne
jb
leave
push
and
sti
xor
sbb
stos
rcrl
sbb
push
inc
jl
mov
repnz
popf
out
dec
rorb
lods
lock
fstps
popa
push
loop
lahf
mov
mov
stc
insb
inc
fldl
push
add
loop
sub
xlat
mov
andb
out
pop
jmp
mov
xlat
inc
jns
lods
inc
xchg
pop
je
rdtsc
lcall
std
cld
inc
shlb
push
add
sahf
jbe
cmpsb
jle
aam
pop
mov
cmpsb
xchg
cmc
nop
mov
pusha
push
jle
repz
idivb
add
ss
bnd
jge
push
call
ljmp
or
or
ljmp
sub
mov
scas
dec
mov
inc
or
daa
lds
faddl
mov
push
xchg
mov
repnz
sbb
push
push
clc
test
jmp
sub
or
repz
jmp
mov
mov
mov
mov
fs
lods
cltd
jg
mov
sub
call
std
sbb
aaa
out
insb
pop
nop
mov
push
inc
pop
xor
push
push
scas
xchg
clc
mov
ja
out
sbb
negb
jecxz
lcall
mov
aaa
out
cmpsb
shll
lcall
jp
addb
push
cmc
lahf
mov
pop
pushf
nop
ficoml
adcb
shlb
xor
ja
icebp
push
xor
stos
addr16
sti
push
sarl
and
cmpsb
cmp
mov
aad
hlt
push
mov
cmpsb
and
xchg
dec
nop
jne
push
dec
lret
insb
sbb
mov
lret
movsb
xchg
sub
dec
sbb
into
iret
in
sbb
mov
cmp
stos
roll
out
pop
mov
daa
pusha
mov
mov
inc
mov
mov
and
mov
add
in
pop
aaa
mov
repnz
test
test
jecxz
mov
pop
mov
push
out
outsl
adc
imul
shlb
data16
mov
aaa
push
aaa
jo
fldcw
or
xor
mov
cmc
dec
out
mov
push
mov
dec
mov
je
test
or
repz
test
in
mov
rcl
ficoms
lock
lea
inc
loopne
and
out
mov
imul
fdivs
ret
outsl
lcall
mov
out
ds
xlat
mov
mov
sub
push
stos
mov
call
int3
xor
aam
sub
mov
loope
out
adc
cltd
sar
in
dec
out
xlat
inc
outsb
sub
add
adc
mov
data16
mov
stc
push
sbb
mov
addl
cmp
or
jle
push
adc
or
test
dec
adc
gs
mov
popa
adc
inc
enter
mov
pusha
push
inc
aad
outsl
sub
mov
mov
aam
dec
lahf
clc
cmpl
and
cli
fwait
dec
aad
mov
jae
adc
mov
push
aaa
lcall
inc
push
pop
insl
add
loope
arpl
mov
pop
bound
xor
js
cmp
xchg
mov
mov
or
loop
std
mov
roll
mov
std
push
add
pusha
hlt
rcr
shlb
dec
pop
in
jo
imul
sbb
test
cs
or
mov
push
ljmp
out
sbbb
insl
fs
mov
mov
add
xchg
ljmp
insb
jns
stos
dec
sbbb
rorl
lret
in
in
ljmp
jno
jl
xor
cmc
sub
std
cmp
loopne
es
pop
les
pop
xor
or
pop
xchg
pushf
dec
mov
bound
push
mov
add
arpl
and
stos
dec
inc
pop
lock
xchg
dec
daa
xor
fcompl
pusha
jbe
cmpsl
mov
jb
pop
daa
xchg
ficomps
out
mov
cmpsb
enter
xchg
add
ja
or
push
pop
les
jmp
sub
mov
mov
lret
mov
mov
mov
xchg
clc
call
fistl
pop
or
icebp
outsw
pop
addr16
push
inc
outsb
lds
lahf
xor
or
push
fadds
jg
in
cmp
add
jp
in
push
xchg
or
ficoml
cmp
lret
mov
cmp
xchg
outsl
rcll
sub
mov
pop
sub
adc
mov
divl
mov
push
xchg
adc
pop
push
fiaddl
xlat
xchg
decb
stc
lods
xor
jmp
pusha
mov
jns
mov
cmp
inc
and
jl
les
push
mov
ss
jb
and
jne
mov
test
int
aam
xchg
aam
clc
pop
or
push
adc
jb
mov
subl
mov
xor
call
adc
mov
push
jg
sbb
adc
push
int3
daa
cmp
in
jp
inc
and
xchg
inc
push
or
mov
mov
fwait
pop
xchg
outsb
pop
sub
push
idivl
jl
pop
cs
loop
push
fstpt
mov
cmp
arpl
pop
adc
mov
iret
mov
cmp
mov
jmp
daa
mov
outsl
add
push
xchg
jecxz
ret
mov
rcll
cmpsb
test
inc
sub
sbb
lahf
mov
fdivs
or
push
pop
lods
push
and
fdivl
gs
mov
bound
cmpsb
sub
and
insl
out
mov
stos
xchg
xor
cltd
fwait
sub
mov
jmp
stc
mov
ret
outsb
push
push
loope
add
stos
push
mov
icebp
inc
push
pusha
stc
mov
mov
mov
in
and
fxch
jecxz
clc
jg
cmc
mov
rolb
into
xlat
pop
test
aaa
jo
cmp
mov
inc
dec
test
mov
popa
xchg
add
sbb
jmp
xor
js
rorb
int3
rolb
push
add
inc
lods
sub
arpl
into
adc
mov
mov
cmp
mov
icebp
data16
cmp
shlb
push
mov
xchg
push
inc
pop
mov
andl
sbb
mov
cmp
jae
out
int3
rclb
push
clc
xchg
pop
mov
pop
lds
insb
mov
inc
nop
pusha
popf
call
push
cmpsl
jae
cli
jl
add
sub
jge
lods
cmc
cld
and
mov
mov
or
sbb
clc
push
xchg
sarl
insb
push
push
mov
inc
in
fxch
mov
rolb
pop
ja
and
add
sbb
push
jo
test
jg
in
mov
or
jge
xlat
aaa
dec
into
cmp
adc
nop
fcompp
rorl
sbb
js
inc
mov
leave
jl
lahf
cmpsb
dec
aam
gs
mov
jo
sub
mov
sti
inc
inc
into
sar
mov
adc
imul
pop
xchg
or
ret
adc
rclb
push
clc
push
pop
leave
xsave
scas
push
inc
adc
fldenv
inc
adc
fnstsw
movsl
dec
pop
fwait
xor
int
mull
cli
ja
shlb
add
xchg
in
fstpl
ret
dec
iret
and
stos
xor
pop
repnz
pop
aas
xchg
add
jbe
push
add
movsl
mov
or
push
int3
cli
nop
and
outsb
push
add
mov
adc
es
or
or
adc
dec
rclb
cld
je
jno
and
xlat
ss
dec
push
mov
add
jl
or
outsl
aam
sub
adc
push
cwtl
mov
or
pushf
leave
das
pop
repz
imul
jne
push
sub
push
adc
in
orb
mov
sub
adc
rcrb
inc
sub
fistpl
xchg
rcl
sub
pop
xor
inc
aas
sbbl
inc
adc
mov
add
enter
aad
repnz
push
adcl
mov
jbe
jecxz
sahf
dec
scas
cmp
pop
mov
add
jge
and
dec
dec
out
cmpb
jg
jns
adc
or
fwait
or
insb
dec
push
je
xor
jae
xchg
ljmp
push
xchg
cmp
pushf
or
and
jecxz
mov
add
push
jge
adc
cwtl
in
std
int3
gs
aad
ss
jo,pn
sub
sub
out
mov
mov
cld
mov
dec
push
loop
imulb
mov
sbb
in
js
xchg
pop
add
sub
int3
repnz
out
add
xchg
push
nop
add
fnstenv
adc
pop
insl
negl
fsqrt
xor
push
jne
movsl
cmp
jg
sbb
dec
out
testl
negb
repz
clc
fldenv
sub
stos
dec
cmp
cmc
fidivs
aas
add
mov
lret
sbb
loope
xchg
lods
push
push
mov
or
sbb
cmp
sbb
dec
jecxz
pusha
xor
js
xchg
jle
pop
mov
dec
inc
jmp
clc
push
fs
fadds
adcb
shll
mov
push
xchg
shrl
jae
imul
cmp
insl
and
dec
pop
test
ja
add
faddl
inc
sub
mov
stos
mov
adc
notl
add
and
mov
sbb
bound
xchg
out
scas
dec
lret
jge
pusha
sti
ja
add
ds
mov
adc
dec
xor
icebp
push
mov
repz
mov
loopne
cs
jbe
pop
dec
jbe
and
mov
sbb
xlat
enter
adc
sbb
leave
cmp
add
repz
inc
adc
jb
push
jl
push
fidivrs
jbe
mov
ffree
xor
cmpsl
fildll
xchg
ljmp
addl
sub
sbb
sub
add
aam
sub
rcrl
mov
add
dec
loop
jnp
ljmp
xchg
mov
and
or
in
mov
pushl
xchg
and
aad
test
jl
jns
mov
loopne
scas
xchg
mov
iret
cs
lods
mov
bound
pusha
hlt
sub
fwait
dec
xor
enter
jo
push
into
dec
stos
scas
inc
jo
dec
je
cmpsb
adc
ret
loop
or
dec
fcmovb
aam
test
call
je
divl
es
addr16
sub
mov
and
lcall
sahf
add
lock
add
scas
adc
sbb
leave
stos
popa
sub
pusha
and
mov
aad
sub
xchg
push
aam
popl
xchg
jle
mov
mov
add
push
shrb
call
rolb
inc
add
insb
mov
or
jle
movl
sahf
cli
xor
pop
xchg
jnp
and
ret
mov
pop
ret
scas
rorb
jmp
adc
rclb
adc
lcall
pop
adc
sub
cltd
loopne
hlt
imul
sarb
dec
add
jge
mov
sahf
pop
inc
std
cwtl
cmp
enter
and
cmpsl
jns
push
das
xchg
sti
iret
sar
adc
pop
aaa
push
imul
fwait
pop
pop
pop
jle
shll
fisubl
test
jl
movsb
sub
mov
sbb
push
pop
nop
sub
fidivs
pop
jo
xor
gs
aas
add
xor
in
addr16
xor
pop
outsb
in
aam
mov
mov
xchg
arpl
dec
int3
cmpsb
cwtl
adc
outsl
andb
jae
lods
jecxz
xchg
std
sbb
or
xor
repz
pusha
jle
add
add
adc
ja
push
imul
rorb
mov
dec
lahf
jae
xor
ret
int
cmp
sbb
std
popf
fcmovnbe
ret
mov
mov
clc
jo
ljmp
jno
add
test
adc
bound
push
fidivrl
mov
lods
cli
mov
jo
inc
sub
adc
lods
les
arpl
mov
pop
fsubl
sahf
jnp
pop
mov
and
and
jecxz
int3
adc
pop
int
jne
shlb
pop
sbb
jle
push
mov
loop
pop
mov
aam
mov
ja
cmpb
jecxz
lods
push
dec
addr16
fisttpll
imul
xchg
pushf
cmc
xchg
pop
in
pushf
fs
inc
push
adc
push
test
and
fcompl
inc
or
sub
lret
daa
ret
cmpsb
add
sub
pop
pushf
call
or
jo
pop
int
pop
notl
shl
sahf
sub
dec
push
jmp
test
mov
inc
aam
stos
xchg
jno
out
int3
popa
mov
xor
rcrl
jg
sbb
push
xlat
imul
jle
dec
call
inc
lds
rorl
cmpsl
dec
outsl
inc
aaa
dec
jne
gs
movsb
ret
jno
jno
jge
xor
in
loope
sbb
mov
dec
fidivrs
pop
cmpsl
ret
hlt
cmp
in
insb
xlat
dec
test
inc
sbb
movsl
cmpsb
loopne
inc
fsubs
add
lods
inc
pusha
or
fiadds
inc
or
movsb
int3
cltd
cmpsl
add
call
loope,pn
lods
jb
adc
xchg
dec
test
or
inc
jl
jg
mov
sbb
int3
push
pop
pop
loopne
rep
push
dec
movsb
push
testb
pop
fsts
and
sbb
xchg
lods
int3
stc
jnp
bndstx
lcall
iret
add
negb
and
add
loop
aad
adc
sbb
xchg
push
mov
push
xchg
sahf
fdivs
ret
iret
call
fldt
xchg
gs
cld
cltd
mov
adc
sbb
lcall
or
mov
bound
lods
jo
jp
sub
sub
or
aaa
pop
int
sahf
jg
and
lods
and
xchg
aam
mov
rcl
in
adc
xor
dec
iret
mov
and
int3
das
dec
sbb
pop
xor
push
mov
jnp
push
ljmp
dec
pop
pop
push
mov
shl
jp
xchg
jmp
push
mov
or
loopne
mov
rcrl
sbb
loope
jp
repz
test
xor
mov
mulb
and
jns,pt
and
ret
divl
sub
mov
cmc
pop
xor
xorl
jae
lcall
dec
or
mov
rcrl
popf
aam
sub
cmp
sahf
cli
adc
inc
cli
scas
xchg
jo
sbb
sub
or
cmp
inc
clc
xchg
fcompl
fiadds
lea
xor
cltd
sti
out
pop
jmp
sarl
and
push
jbe
xchg
xor
notb
push
xor
mov
jmp
push
mov
jns
cmp
filds
xchg
call
std
push
shr
ds
xor
mov
mov
filds
repnz
xchg
jl
inc
jg
sbb
repz
mov
int
xlat
test
aaa
in
mov
mov
rorb
dec
fcoml
imul
enter
jp
fcmovnu
xor
pop
roll
pop
cmp
sbb
cmpsl
repnz
adc
cld
mov
in
pop
inc
sarl
xchg
lret
cmpsb
sahf
nop
xor
loope
dec
or
das
in
mov
sbb
movsb
cld
jb
call
into
mov
fs
mov
cmc
out
sbb
imul
xchg
dec
movsb
rorb
fwait
cwtl
lea
mov
cltd
add
sbb
jle
and
cmc
add
push
fwait
mov
aas
mov
repz
fimuls
lea
pusha
push
lds
pop
shrb
adc
mov
push
add
es
arpl
xchg
lcall
jns
stos
cmp
mov
mov
sub
sarl
bound
jmp
std
shll
aas
push
stos
push
mov
inc
adc
sub
jmp
sqrtps
hlt
mov
imul
push
shr
pop
aaa
movsl
jg
mov
jnp
lock
pop
cmp
das
pop
cs
popa
lret
fisubrl
xor
into
sahf
stos
cmpsb
push
jle
lods
jle
lea
push
xor
je
stos
xchg
aam
aaa
xor
std
scas
pop
jno
dec
data16
push
in
and
fs
jbe
imul
popf
add
mov
mov
or
cmpsl
adc
lock
cld
shrb
clc
popf
push
sbb
mov
pop
inc
jb
xchg
sbb
insb
rcrl
mov
jnp
push
and
xchg
rorb
jl
sub
in
jle
ljmp
mov
and
in
testl
cld
cmc
std
lret
lret
or
pushl
iret
jnp
mov
sub
adc
iret
xchg
lahf
fldenv
stos
scas
cmpsl
cmp
pop
inc
popf
ret
repz
inc
js
xchg
mov
xchg
daa
repz
inc
lock
packssdw
xor
lret
sbb
lods
jae
mov
jle
sub
and
movsb
dec
or
jns
jg
scas
mov
lcall
stos
jecxz
lret
pop
clc
loope
test
cld
sub
mov
rcrb
pop
pop
push
sub
addl
dec
mov
fildll
outsl
pop
popf
stos
mov
pop
addb
fsubl
pushf
pop
cld
ds
lods
test
mov
sbb
jle
vpmadcswd
add
xchg
sbb
movsb
pop
adc
adc
add
cmpb
mov
into
inc
mov
aas
dec
imul
pop
jns
sbb
loop
out
nop
inc
xchg
mov
sub
jle
xchg
push
mov
or
xchg
or
maskmovq
popf
mulb
lock
add
cmp
inc
faddl
pop
rol
mov
hlt
int3
adc
inc
xchg
adc
cwtl
inc
das
scas
push
mov
jg
lret
sub
dec
jge
xor
in
lret
or
xor
mov
jle
mov
add
stos
push
imul
roll
jb
pop
out
stos
mov
dec
nop
out
jp
icebp
mov
cmp
sbb
testl
push
jl
sbb
outsb
inc
and
xchg
push
lahf
mov
sub
sbb
xchg
lods
xchg
adc
fsubrs
push
in
sti
xchg
sub
dec
cld
fdivs
cmp
pop
pop
push
shr
or
dec
repz
cltd
repnz
sbb
rclb
leave
mov
out
test
mull
inc
pusha
sar
popa
ja
xor
push
dec
sbb
sahf
sub
mov
roll
sti
movsl
pop
inc
jle
je
ret
in
jae
push
jae
dec
adc
xchg
dec
loopne
mov
inc
or
rcr
push
or
pop
sub
in
sub
and
xchg
lock
or
fnstcw
pop
mov
stc
lea
mov
mov
test
icebp
adc
push
jge
and
adc
dec
pop
repnz
bound
cmp
shr
add
mov
or
scas
xor
sahf
shlb
popa
nop
dec
push
cmp
bound
out
add
outsl
in
in
outsb
cvtdq2ps
mov
xor
nop
shrb
outsb
adc
mov
test
fsubrs
insb
fsubs
push
pop
stc
mov
mov
cmpsb
in
add
cmp
sub
dec
sub
xchg
mov
movsl
fstps
xor
cmp
arpl
jae
outsb
push
jge
jl
jnp
push
xor
and
jo
rolb
dec
in
pop
pop
loope
subb
jbe
pop
ja
out
add
out
adc
xorl
rorb
jnp
adc
lret
push
je
test
jne
push
pop
mov
sub
jmp
cmp
inc
mov
dec
mov
stc
cs
cmp
push
cmp
xchg
cmpsl
daa
fcomip
push
dec
pushf
shll
dec
pusha
sbb
rclb
jns
cwtl
xchg
hlt
lock
mov
fcoms
das
cmp
fwait
dec
xchg
in
xor
std
roll
cmp
and
lret
or
aam
std
fistl
fists
daa
add
icebp
sub
icebp
decb
stos
jmp
mov
or
lds
lret
divb
xchg
lds
lods
nop
leave
in
sbb
push
fs
test
pop
mov
pop
inc
jno
cmp
daa
lods
ret
or
insb
ficomps
adc
lods
subb
pop
pop
jp
imul
xor
jp
stc
pop
stc
rcrb
lret
mov
test
pop
cmp
das
inc
or
sub
lret
and
iret
dec
adc
lds
adc
jnp
insl
mov
push
dec
mov
sub
mov
sti
sub
les
repz
sub
push
fsts
cmp
pop
mov
cmp
sbb
add
ds
loope
decl
lahf
movzbl
cmp
xchg
jae
and
dec
or
repnz
je
xor
jae
fcomip
pop
fstpt
adc
aam
ret
pop
xchg
test
and
add
loop
pusha
fs
test
pop
shrl
cmpsb
or
sbb
mov
loope
cmp
mov
insb
lcall
stos
push
jmp
inc
fldl
jg
sub
nop
jnp
pop
arpl
frstor
mov
add
cmp
xorl
sbb
fdivp
sbb
jae
adc
outsb
mov
sbb
insl
aas
mov
push
mov
cmp
mov
dec
test
daa
rorl
adc
rol
sbb
and
cmpsl
cwtl
addr16
cmpsl
pushf
inc
imul
ss
sub
xor
jg
sbb
sidtl
dec
call
push
sbb
test
sub
mov
pop
and
jno
fsubrl
pop
les
jae
jno
pop
int
push
cmp
lret
adc
adc
xor
xchg
lods
mov
sub
mov
or
int3
fdivl
clc
adc
ficoml
lea
mov
or
stos
cs
ret
dec
mov
cmpsb
div
inc
pop
aas
mov
cmpsl
movsb
add
cmp
loope
dec
inc
das
ret
lods
cltd
jb
jl
inc
out
jno
insl
nop
addb
mov
iret
or
adc
lods
fsts
cmp
dec
xor
int3
cmp
fstpl
inc
je
or
sbb
jl
inc
mov
xchg
repnz
inc
inc
sub
leave
inc
pushf
jmp
jns
iret
fsubrs
int3
inc
mov
xor
mov
scas
lods
mov
ja
jb
lahf
popf
dec
jne
mov
add
movsl
scas
subb
jns
add
mov
loopne
test
scas
bnd
adc
pushf
jno
push
dec
daa
in
mov
inc
cmp
andb
sbb
jg
and
fidivrs
cmp
cmpsb
test
pop
xchg
inc
and
outsl
dec
fidivrs
int3
dec
xchg
add
mov
and
sbbl
dec
sub
fs
inc
into
xlat
test
mov
lahf
add
jnp
cltd
lds
pop
dec
icebp
xchg
imul
loopne
push
movsl
mov
imul
ss
mov
inc
mov
xor
data16
test
pop
fcompl
mov
les
pop
and
fisubrs
push
jp
lds
std
lock
jg
int3
adc
stos
xor
ret
push
pop
add
push
stos
or
xchg
xor
pop
sbb
stos
sbb
sub
xor
adc
sahf
mov
push
sbb
inc
sub
sbbl
ret
dec
int
dec
adc
xchg
mov
pop
ja
fs
jge
fisttps
mov
xor
rcr
fdivs
inc
add
cmp
out
fstl
subb
out
pop
ljmp
ror
fcoml
jo
int
xchg
call
jb
sub
js
gs
and
xor
dec
ss
lahf
and
and
mov
mov
and
loop
and
negb
in
lret
sbb
xor
push
sub
mov
roll
pop
push
loope
jae
in
and
mov
mov
xchg
push
mov
push
aam
out
psubsb
lret
jl
xchg
std
sub
pushf
and
addl
dec
movsb
cltd
or
xor
sub
xchg
lret
xchg
mov
cmpsl
cmpl
sub
jmp
push
stos
jno
dec
lea
push
movsb
dec
pop
fs
inc
pop
push
daa
or
or
or
mov
rolb
dec
mov
scas
xchg
cmp
hlt
push
faddp
lahf
mov
sub
rcrl
arpl
pushf
fs
fucomi
dec
adcb
jle
lret
xchg
adc
dec
sub
pop
cwtl
mov
push
sub
out
sahf
mov
cwtl
xor
sbb
movsb
push
push
mov
sarb
pop
cmpsl
outsb
add
popf
sahf
mov
cld
nop
xchg
lret
sbbl
cmp
mov
loop
mov
cmp
push
push
ds
push
adc
in
mov
xchg
push
mov
repnz
cmc
inc
insl
cld
fcomi
pop
sub
jno
dec
cwtl
mul
cld
xchg
js
test
lahf
xchg
mov
inc
mov
mov
lds
stc
aas
jecxz
dec
int
inc
add
outsl
mov
sbb
pop
int3
mov
mov
mov
stc
dec
in
dec
rcrb
sarb
inc
adc
xchg
sbb
test
ja
add
push
pop
cmpsl
adc
out
mov
mov
fsubrs
sar
mov
ficoml
or
pusha
int
es
scas
je
insl
inc
add
data16
mov
fwait
cmc
xorb
ret
cmp
inc
inc
stos
mov
push
push
insl
and
das
fdivrl
cld
inc
ds
int
cmp
mov
addr16
add
push
sub
xchg
call
loope
es
lods
xchg
dec
bound
pop
push
mov
das
inc
pop
add
jg
iret
push
nop
frstor
sbb
bound
ret
ficomps
and
or
adc
data16
sub
ret
ja
pushf
mov
pop
add
outsl
mov
mov
sbb
sbb
cmpsl
mov
adc
mov
int3
or
rcll
fcmovnu
dec
sbb
sti
push
imul
lods
fbld
xchg
daa
lret
inc
outsb
pop
lea
pop
movsl
bound
scas
imul
xor
arpl
mov
push
mov
adc
or
fs
xor
sbb
divl
int
mov
sub
jg
push
xchg
cli
cmp
aas
cld
gs
and
repz
xchg
mov
imul
xchg
nop
dec
jecxz
ss
cltd
and
mov
popf
sub
insb
xchg
fsubrs
jecxz
stc
dec
push
xor
inc
hlt
pop
xor
push
add
rolb
out
cld
inc
iret
sbb
mov
xor
push
ljmp
lea
sahf
jge
ret
dec
data16
sti
inc
test
fcompl
jnp
sbb
data16
dec
test
lret
test
and
fcoml
xchg
xor
cmp
scas
xchg
sti
jae
sub
stos
push
pop
mov
dec
mov
mov
xchg
dec
mov
pop
sahf
or
or
xor
lahf
les
testl
mov
fwait
push
add
sbb
push
pop
mov
sub
cmp
cmp
clc
mov
sbb
lods
test
xchg
jmp
mov
fldenv
jnp
daa
imul
movsb
fldl
ds
jae
cs
inc
mov
push
mov
fmuls
jmp
pop
or
sub
sub
test
mov
mov
cs
daa
push
pop
xchg
cmp
push
or
push
repz
push
divl
in
roll
not
inc
cmp
insl
mov
push
mov
cmpsl
pop
sub
dec
cmp
mov
xor
lods
insb
jecxz
push
add
cmpsl
enter
mov
mov
insl
stc
movsb
cld
insl
loopne
adc
and
jnp
pushf
push
pop
nop
inc
jmp
aam
das
cli
je
mov
mov
or
mov
stos
fistpl
jae
js
or
sbb
xchg
push
jg
sahf
pop
movsb
mov
movsl
xor
sbb
adc
xor
add
adc
mov
cmpl
pop
or
cmpsl
xchg
and
out
inc
xchg
cltd
aas
test
stos
pop
xor
add
cwtl
adc
mov
loope
or
pop
cld
movsb
ficomps
nop
sub
fwait
jl
pop
push
jg
push
lea
stos
inc
and
mov
mov
adc
sbb
fldcw
call
loop
mov
push
icebp
int3
push
shl
sub
lret
dec
ficoml
addb
push
lea
loop
daa
bound
adc
inc
sti
subl
dec
movsb
je
inc
fs
mov
rol
xor
loop
imul
repz
adc
repz
out
aaa
push
adc
push
outsl
jge
mov
pop
int
fsubrs
cmp
loope
pushf
lea
dec
adc
div
pop
ret
jle
movsl
xor
dec
fistpll
and
jmp
add
pop
mov
add
inc
mov
cld
inc
mull
popf
js
lea
inc
std
test
mov
pusha
xchg
aad
jb,pt
xchg
mov
cs
and
push
movsl
daa
sbb
pop
leave
adc
mov
dec
and
ds
fs
jne
add
mov
dec
outsl
jp
dec
add
or
pop
test
mov
sbbl
add
out
jl
leave
fiadds
enter
sbb
pop
mov
inc
fistpl
push
pushf
sbb
js
lret
inc
std
in
mov
ss
sar
cmpsb
sub
loope
jg
cli
das
or
aad
cmpsb
dec
add
jne
push
mov
notl
cmpsl
or
mov
dec
iret
aas
leave
mov
cmpsl
out
xchg
jmp
push
mov
mov
loopne
sub
push
call
jne
lods
xchg
or
lcall
xor
sbb
jne
dec
shlb
pop
pusha
nop
sub
lods
iret
cld
sbb
outsb
fistl
rorb
cli
popf
sbb
loopne
jle
sub
lods
push
jmp
loop
in
test
cmovno
andb
je
sbb
icebp
cmp
popl
mov
movhps
dec
popa
in
xor
push
data16
daa
rcrl
aaa
lcall
scas
add
fsubr
shl
sub
cwtl
outsl
out
xor
fimuls
pushf
into
aam
stc
xorl
inc
bound
imul
outsl
jecxz
stc
shrl
dec
add
inc
test
sub
mov
int3
daa
xor
cltd
push
inc
inc
subl
jnp
inc
sub
or
mov
inc
cmpsl
pop
repz
imull
lods
loope
push
ret
sbb
cmp
rcrl
mov
jle
gs
and
xor
popa
into
cmpb
jo
push
dec
jbe
jp
dec
dec
cmp
fidivrs
repz
rolb
mov
jne
js
outsl
pop
pop
sub
sub
fwait
sub
cmc
inc
sbb
push
sti
bnd
push
jmp
mov
or
pop
out
in
xchg
scas
mov
cmpl
push
jb
dec
dec
daa
out
out
cmp
mov
sbb
mov
aad
fstpt
add
push
repnz
outsl
xchg
pop
push
sub
cmp
xchg
and
adc
int
arpl
mov
mov
add
cmpsb
repnz
loope
dec
nop
hlt
ss
mov
ss
pop
imul
cltd
addr16
push
stos
sbbl
pop
fs
in
pop
lahf
or
ljmp
jbe
or
xchg
sub
test
jae
mov
sbb
fisttpl
shlb
jg
jle
jge
outsb
jge
and
into
cwtl
addb
xchg
or
dec
in
mov
pop
mov
or
out
xchg
lret
pop
adc
aad
out
sbb
repz
jns
out
dec
xlat
icebp
mull
xchg
push
cmp
pop
or
sbb
push
and
sub
les
xlat
enter
fs
push
addr16
call
xor
pusha
aam
aad
or
test
jg
sbb
in
and
cmpsb
xor
mov
cli
pop
pusha
pushf
mov
or
fsubrl
repz
enter
add
repnz
mov
jae
insb
outsb
cmp
or
inc
or
cmp
dec
inc
cmp
in
jno
data16
lock
arpl
sbb
xchg
les
push
xchg
lds
or
mov
cmp
insb
mov
aas
mov
icebp
push
and
shll
adc
add
or
jno
xor
mov
adc
outsl
push
lcall
ljmp
fwait
or
push
loopne
jo
jnp
sbb
mov
or
out
scas
popf
xchg
cld
jg
mov
mov
in
outsl
sbb
ss
dec
dec
mov
fstl
imul
orl
les
loope
out
pop
inc
mov
mov
cs
jle
pop
aad
mov
fisubrs
out
inc
jb
fs
cld
rorl
jbe
mov
movsl
xchg
mov
push
xor
enter
or
inc
push
jg
xor
sub
adc
add
push
mov
bound
mov
xor
lret
xor
and
jle
insb
and
jge
aas
enter
xchg
fisubl
adc
loope
stos
push
outsb
stos
mov
xchg
xchg
xor
mov
movsl
sbb
inc
imul
xlat
jmp
cmpsb
inc
mov
cld
or
jecxz
xchg
jb
scas
and
fdiv
and
fisttpll
dec
mov
into
inc
stos
call
sub
fisttpll
mov
loopew
xchg
shll
mov
int3
jno
popa
mov
mov
mov
jnp
sarl
cwtl
fisubs
dec
jmp
xchg
and
pop
lcall
push
fldenv
insl
popf
int
pushf
ficoml
enter
xor
addr16
insb
push
or
cmc
push
xor
pop
mov
lods
ret
or
push
jnp
rcrb
aam
clc
push
sahf
outsl
push
dec
imull
or
add
mov
cwtl
pop
xlat
hlt
jnp
or
fs
loope
push
pop
jne
shrl
bound
cltd
divb
rcll
mov
in
and
cmpxchg
sub
repz
xor
inc
fildll
dec
and
stc
subl
inc
clc
jge
add
dec
sti
sub
out
add
inc
mov
fwait
adcb
outsl
stos
mov
shr
fildll
lret
rdtsc
inc
cmpsl
je
sarb
sub
ds
pop
cli
jb
lods
sub
push
push
in
sahf
mov
sub
rorb
cmp
or
imul
js
out
mov
scas
xchg
test
mov
into
stos
add
loopne
fldl2e
mov
sti
push
xchg
lea
enter
xchg
mov
push
mov
out
and
jmp
adc
cld
mov
jecxz
pop
ss
inc
pop
pop
unpckhps
mov
imul
lahf
dec
xchg
dec
ds
int
lds
bound
xor
xor
xor
mov
gs
pop
movsl
xchg
pushf
xor
sub
imul
test
add
adc
into
dec
cmc
test
add
sbb
in
insl
push
notb
nop
in
das
sbb
clc
imul
cltd
das
repnz
rol
jae
lcall
push
dec
frstor
push
fs
xchg
mov
aas
inc
pusha
push
imul
pop
mov
fstpl
push
push
fidivrl
add
jmp
mov
ror
add
sbb
sahf
xor
insl
mov
cmp
mov
js
mov
cwtl
cltd
jecxz
fwait
iret
xlat
add
hlt
lcall
fdivl
mov
jae
aam
aaa
xchg
and
mov
sbb
jle
stos
je
mov
sarb
xchg
ss
xlat
enter
lcall
and
scas
sahf
repz
dec
adc
mov
ljmp
test
mov
mov
shl
inc
push
pop
and
std
jecxz
push
outsb
divl
jae
cmpsl
out
scas
mov
xchg
jnp
push
mov
out
mov
jge
push
mov
inc
or
fwait
jg
and
das
enter
andb
mov
mov
xorb
mov
int3
and
cmp
mov
fisttpl
cmp
rcrl
sbbb
popf
mov
test
mov
xor
adc
in
arpl
cmp
pusha
and
inc
push
adc
sahf
sahf
ljmp
sub
jo
enter
jle
dec
dec
push
xchg
insl
jno
icebp
mov
xchg
cmp
inc
shll
stos
cmp
jmp
jb
pop
mov
push
fisttpll
leave
add
mov
cmp
and
mov
andb
cmp
xlat
in
or
popa
pop
push
test
pop
jp
std
cs
ss
inc
stos
test
jmp
divl
inc
mov
add
mov
pop
dec
jle
sbb
pop
imul
out
outsl
enter
testb
insb
lret
add
fwait
ljmp
ret
out
mov
ret
roll
or
and
push
xchg
and
repnz
sub
popa
cmpl
int
into
sub
add
jb
dec
aas
dec
and
imul
outsl
mov
lods
loope
outsl
stos
inc
data16
sbb
stos
cmpsb
movsl
inc
mov
mov
pop
xchg
sbb
xlat
or
inc
jge
jne
je
stos
sbb
xor
cmp
fcmovnb
xlat
inc
sub
out
pushf
jmp
stos
ja
mov
scas
and
pushf
mov
aaa
jns
mov
xor
ja
fcomip
mov
sarb
repnz
jle
xor
push
dec
ret
pop
add
mov
pop
iret
ds
jo
out
cld
xor
add
mov
mov
popa
mov
mov
lods
push
xchg
mov
sbb
into
icebp
dec
adc
inc
add
sbbb
mov
outsb
push
push
or
addl
jb
pop
push
movsb
push
leave
sbb
jbe
outsb
mov
mov
out
call
ficompl
pop
dec
lods
xor
andb
stos
and
jns
mov
clc
lcall
dec
inc
ljmp
xor
dec
push
rcrl
mov
xor
jnp
push
push
fildll
jno
gs
jmp
sub
ficompl
lods
out
das
popf
push
or
sub
inc
jnp
mov
iret
inc
mov
or
inc
xchg
imul
and
xor
icebp
and
inc
clc
rclb
fidivrl
dec
int3
fwait
push
out
dec
mov
je
sbb
les
out
xchg
add
mov
mov
icebp
mov
fisttpl
mov
andl
std
ljmp
std
cld
sub
xchg
shrw
mov
popa
std
outsl
mov
push
pop
mov
cmp
xor
jmp
dec
in
ljmp
ljmp
aaa
mov
pop
sbb
sub
out
adc
fdivs
das
mov
xchg
cmp
pop
pop
xor
push
jae
fs
stc
or
mov
xchg
xchg
lahf
std
mov
xchg
xchg
out
adc
cs
nop
div
mov
mov
xor
cmp
lods
mov
daa
sub
iret
out
ficomps
mov
push
push
add
and
dec
cmpsl
inc
rorl
lcall
bnd
fwait
push
icebp
roll
and
imul
adc
mov
rclb
or
push
push
enter
add
repz
inc
cmp
and
mov
mov
nop
sbbl
lods
add
in
fistpll
push
clc
sub
xchg
inc
mov
push
es
js
xchg
mov
loop
push
mov
sub
stos
lahf
pop
out
adc
push
stc
popl
push
push
jle
je
mov
mov
inc
mov
push
mov
jge
ret
mov
jno
push
fnstsw
cmc
das
inc
xchg
out
int3
aas
filds
adc
sub
in
and
repz
and
or
daa
fidivrs
cmp
mov
dec
repz
xor
sbb
fbld
adcl
dec
mov
cwtl
icebp
icebp
pop
imul
add
lahf
out
cmpsb
xor
sbb
test
jg
fnsave
test
inc
jg
sub
std
adc
cltd
pop
lds
dec
loope
sahf
jmp
dec
mov
jae
icebp
fdivrl
push
push
xor
xor
lea
or
ret
or
pop
mov
jno
popa
inc
fwait
in
dec
lods
mov
out
dec
repnz
mov
or
and
mov
lods
int
daa
adcl
stos
dec
add
jg
push
in
mov
movsb
dec
les
ja
cmpsl
xchg
adc
cmp
fldt
mov
add
mov
inc
std
jg
out
call
mov
clc
out
mov
cmc
outsl
rcll
jne
and
or
mov
in
mov
inc
les
out
out
mov
pushf
jno
push
cmp
daa
lret
and
loopne
movsl
dec
add
push
push
outsl
stos
inc
add
lcall
mov
fxam
call
cmp
adc
pop
lods
push
mov
sub
into
mov
mov
mov
xor
nop
adc
cmp
aaa
lahf
or
xor
mov
push
inc
fimuls
cmpsl
clc
cmp
loop
adc
xchg
out
test
outsl
jbe
loop
ds
sub
test
push
cmp
mov
push
fbstp
ja
add
jmp
daa
shl
ljmp
sbb
mov
pop
ret
pop
cmp
scas
jo
push
add
loopne
loope
xor
push
inc
inc
decl
fisttpl
filds
jmp
leave
cmpsl
push
jle
push
lock
sti
aad
xchg
xor
inc
mov
data16
sbb
fstps
mov
xor
call
mov
clc
pop
sbb
mov
xor
inc
ret
ret
mov
lods
xchg
mov
jl
mov
and
sbb
or
hlt
cmpsb
fstps
push
fnsave
add
adc
xchg
sbb
jecxz
mov
das
or
pop
and
test
mov
pushf
jb
adc
jge
arpl
insl
outsb
jbe
outsl
xchg
loopne
mov
and
outsb
ret
push
pushf
mov
and
pop
rolb
dec
sub
shll
jae
lods
pop
aaa
or
mov
sbb
stc
cmp
pop
xchg
add
jl
mov
inc
push
xor
jle
movl
test
fadds
icebp
test
xor
cwtl
cld
pop
dec
sbb
movsb
test
clc
sbb
dec
nop
adc
fwait
addr16
adc
fmull
gs
adc
les
std
cs
jp
cmp
pushf
push
push
mov
in
and
sub
pop
adc
mov
das
out
mov
movsl
sbb
movsl
cs
cli
ret
insb
std
pop
push
jmp
hlt
inc
cmpsl
iret
test
pop
mov
or
mov
or
divl
mov
js
adc
push
lods
hlt
movsb
sub
mov
push
jle,pn
shl
mov
inc
popf
test
cmpsl
dec
jne
repz
je
adc
jno
test
jb
data16
movsl
inc
mov
clc
and
stc
xor
jmp
nop
cmp
mov
xor
jne
adc
es
push
arpl
mov
sbb
fidivrs
fwait
gs
jbe
cmp
jp
mov
cld
hlt
rcr
jmp
xor
push
dec
and
mov
push
dec
loop
add
nop
mov
movsl
shrb
loopne
or
inc
data16
mov
mov
add
sbb
int3
sub
cwtl
fwait
sub
or
xor
fists
scas
adc
jmp
mov
mov
stos
add
dec
pop
sub
stos
mov
test
ljmp
fldl
mov
and
or
divl
pop
arpl
int3
nop
repz
mov
fadd
adc
dec
je
cmp
sub
test
rorl
orl
jno
or
idivb
lock
mov
es
test
fisttps
push
xor
in
cmp
dec
mov
adc
adc
xchg
pop
into
push
add
daa
dec
outsb
fcompl
lret
or
test
push
sub
jne
nop
push
sub
mov
dec
pop
sub
lahf
insl
sub
leave
sbb
jge
fs
imul
lea
jmp
add
sbb
cmp
and
cmpsb
mov
je
lods
sbb
pop
xor
jno
cmpsl
cmpl
jp
in
faddl
add
add
call
std
xor
stc
mov
push
fs
inc
popa
adc
sub
dec
or
and
in
lea
leave
cmp
lock
sbb
xchg
leave
mov
jnp
subb
stos
fadds
or
popl
ficomps
cmpsl
jecxz
lahf
fs
insb
xor
push
push
aad
push
or
and
cmp
xchg
test
and
adc
adc
clc
nop
sub
sub
add
push
pop
fstl
shlb
mov
scas
insl
push
loope
mov
lret
xchg
inc
adc
mov
add
add
mov
xchg
push
aad
test
jnp
das
inc
cmp
lods
inc
bswap
jb
xor
add
push
aad
les
cmp
lcall
jg
mov
mov
gs
cmpsb
or
add
ror
out
jp
cmc
enter
std
test
sub
cmpsl
and
push
sub
push
cmpsb
pushf
mov
add
bound
xor
inc
rorl
movsb
out
adc
cld
call
lea
insl
push
jmp
add
mov
inc
mov
sbb
jnp
mov
cmp
dec
cmc
and
inc
aas
fisubrl
adcb
dec
inc
fcmovnb
sub
fisubs
jb
or
data16
mov
aaa
stc
dec
push
idivb
xor
in
test
mov
pop
mov
pop
aas
lahf
push
pop
ret
inc
mov
fsts
nop
sub
sbb
fwait
test
push
xor
imul
jmp
adc
push
dec
pop
popa
push
insb
jbe
add
push
pop
mov
xor
mov
rcrl
es
test
sub
push
popf
mov
fs
aaa
aaa
shlb
mov
xchg
sbb
dec
mov
jne
xchg
pop
addr16
icebp
pusha
xor
adc
or
mov
push
cltd
adc
mov
adc
push
lods
rcll
das
sahf
ficoml
aad
adc
rcll
std
fcmovnb
lock
repnz
repnz
popf
dec
outsb
outsl
movsl
push
sub
jbe
test
fnsave
mov
imul
sub
rolb
push
outsb
pop
movsl
mov
fbstp
outsb
push
rolb
jae
jne
fwait
xor
inc
loop
daa
dec
stos
clc
ret
sbb
repnz
sub
xor
adc
push
jne
mov
jno
dec
mov
jge
sub
jo
xor
mov
lret
repnz
test
dec
cld
add
gs
or
out
dec
adc
sub
xor
aad
fisubrl
jecxz
fnsave
aaa
test
pop
mov
cmpsl
dec
pushw
ds
in
xor
int3
fidivrl
add
lods
push
inc
dec
rcl
mov
iret
mov
inc
data16
test
stos
lods
mov
add
cmp
mov
std
jl
testl
pop
mov
ror
in
jb
and
push
mov
pop
jno
cs
movsl
in
popf
adc
mov
gs
loopne
mov
or
sti
push
cltd
mov
adc
or
mov
xchg
bound
xor
jg
in
sub
hlt
ljmp
rorb
loope
sarb
pop
popf
mov
pop
add
lahf
mov
lahf
or
xchg
xchg
mov
out
pushf
adcb
xor
in
sbb
add
cmc
ss
sbb
clc
sahf
push
push
imul
into
loop
cmpsl
push
pop
sbb
mov
lock
std
cmp
out
imul
ljmp
jle
test
loope
inc
in
out
pop
inc
push
cmp
imul
xor
sbb
push
jle
mov
mov
adc
bound
inc
movsl
lret
xchg
push
mov
mov
lock
jg
std
clc
lea
mov
and
jns
jno
std
or
movsl
dec
subb
jp
test
scas
mov
xchg
inc
push
ret
sbb
shll
cli
cmp
jl
aaa
int
ret
add
int3
data16
stc
push
pop
lret
fimull
in
das
xor
aaa
xchg
mov
loop
dec
fmuls
loope
aaa
out
xchg
dec
in
stc
mov
ret
and
xor
jne
xor
fnstcw
movsb
cmp
fs
lret
movsb
leave
jmp
push
idivl
push
sbb
mov
adc
pop
sbbl
push
cmpb
cmp
into
dec
cmp
test
jg
push
dec
icebp
out
mov
shr
mov
mull
cs
cmp
fildl
push
frstor
testl
and
xor
mov
jb
mov
clc
inc
mov
scas
xor
je
es
sbb
ds
jge
adc
test
push
or
fisubrs
cmp
les
jg
bound
in
xor
inc
adc
imul
xchg
leave
xchg
loope
call
xchg
je
clc
push
xor
mov
fs
cld
movsl
imul
push
sti
adc
jg
jl
pop
mov
flds
jecxz
sbb
and
cltd
lret
jp
fisubrs
out
repz
dec
sub
xor
sub
jp
push
cmp
adc
cmp
adc
xorb
and
icebp
cmp
fistps
ficoml
adc
mov
call
xchg
pushf
shr
inc
push
push
mov
push
dec
fsubs
mov
lods
shlb
fsubl
add
xchg
push
inc
out
je
dec
cld
enter
mov
dec
das
mov
push
cltd
cmpsl
adc
dec
fstpt
addl
in
push
js
addl
call
std
cltd
or
xor
jp
jp
stos
js
pop
mov
inc
jns
lock
sub
jmp
fdivl
or
xor
movsl
push
in
mov
xor
inc
xor
enter
xchg
imul
sub
jp
cmp
adc
popa
mov
jg
xor
push
test
stc
push
jp
mov
cmpsb
xchg
push
mov
divb
repz
jns
cmp
cwtl
jbe
into
sbb
in
ss
mov
cmpsb
mov
and
imul
xchg
cmp
pop
insb
in
enter
lret
cld
sbb
pop
lret
mov
loope
cwtl
lods
mov
cltd
into
into
xor
inc
addr16
pushf
insb
push
int
popa
rcll
and
or
lahf
sbb
sbb
int3
xor
stos
push
out
mov
xlat
xor
sbb
xor
xchg
cmpsl
mov
xor
sbb
ret
or
out
ja
mulb
lea
or
dec
int3
scas
push
add
and
mov
xchg
fisttpl
or
icebp
in
mov
cli
cltd
xchg
sub
pushf
add
outsb
pusha
aam
mov
pop
mov
cmp
iret
ret
add
sarl
xor
addl
jae
loope
push
lods
mov
push
jp
mov
adc
aam
push
les
xchg
mov
out
arpl
jp
xor
push
fdivrl
addb
xchg
cmpsl
aam
or
loopne
jle
push
mov
enter
vphaddwd
inc
xor
aad
pushf
push
mov
cmp
mov
outsl
movsl
ret
cs
aaa
or
out
hlt
add
add
popf
lock
jg
sub
and
mov
mov
addr16
cmp
shl
sbb
jno
jp
test
or
dec
pop
out
cmp
push
imul
xor
jg
dec
outsl
jg
testl
cmc
icebp
repnz
neg
mov
or
imul
loopne
mov
mov
fisttps
sti
jnp
pop
popf
jae
ljmp
pop
ds
mov
push
mov
sub
dec
iret
or
pop
outsb
loop
inc
add
sarl
mov
xchg
aas
or
xchg
push
push
sbbb
pop
cmp
pusha
fprem1
add
shr
enter
sub
sbb
idivb
xchg
aaa
in
pop
mov
pusha
cs
and
mov
or
leave
lret
jge
pop
movsb
mov
dec
fcoms
pop
pop
push
xchg
cmc
or
cwtl
rorb
loopne
ret
pushf
or
stos
outsb
fs
mov
inc
sub
ljmp
mov
xor
pop
and
mov
inc
inc
add
pop
xor
popf
xor
adc
xchg
mov
flds
xchg
nop
cmp
nop
cmpsl
cmp
and
sbb
and
outsl
or
imul
mov
xlat
fcmove
cs
push
cwtl
inc
push
in
mov
into
popf
sbb
xor
push
xor
popl
insb
cwtl
xor
lea
aaa
adc
jmp
or
in
std
es
xchg
lea
or
inc
and
pop
std
xchg
in
int
out
mov
inc
stc
ja
push
stos
into
dec
cmp
loopne
repz
scas
cmc
mov
adc
lret
mov
clc
pop
out
jns
fistps
lcall
adc
mov
push
push
jmp
jp
adc
std
int
cltd
daa
adc
cmp
clc
adc
test
pop
xchg
daa
test
insl
cwtl
mov
jo
push
mov
pop
add
push
cmc
movsb
orl
fidivrl
loopne
push
into
xchg
xchg
nop
loopne
mov
imul
in
mov
shr
fsubl
jecxz
ds
dec
xor
mov
and
daa
push
push
stos
loope
in
push
jae
popa
mov
push
add
clc
out
dec
div
sub
insb
xchg
jbe
in
into
fdivrp
pop
imul
push
xchg
rcll
pop
aad
xor
xchg
ss
dec
mov
xchg
mov
ljmp
or
imul
and
cmpsl
xchg
ds
mov
fidivl
push
adc
test
fwait
add
ret
mov
shll
std
jg
popf
inc
test
jmp
cmp
pop
loope
push
enter
push
mov
jo
das
fimull
filds
pop
cmpsl
stos
mov
test
in
pop
testl
loope
or
hlt
les
andb
mov
cmpsl
pop
mov
sbb
cmp
popf
dec
je
cmp
xor
mov
jae
pusha
ds
jle
push
and
std
mov
dec
in
push
sbb
or
push
negb
adc
pop
mov
add
pop
jne
xor
mov
outsb
in
je
ljmp
clc
insl
sahf
imul
xchg
pop
xchg
and
inc
or
aam
hlt
cmc
orl
nop
stos
repz
sub
fwait
adc
add
adc
pusha
outsl
rcll
rolb
pop
mov
inc
adc
dec
ljmp
mov
pop
orb
xor
xchg
cs
ljmp
xchg
fldl
lret
fsubp
adc
mov
and
inc
pop
mov
aad
pop
sub
mov
pop
jp
pop
adc
and
push
or
test
and
mov
shll
std
popf
stos
aad
mov
jecxz
xor
daa
xchg
bound
je
leave
data16
adc
ficomps
into
jge
test
aas
dec
filds
iret
es
mov
mov
into
rolb
fcoml
inc
xchg
imul
leave
jbe
or
fdivs
jl
into
leave
and
jno
cmp
adcb
js
gs
das
pop
aaa
aaa
add
dec
shr
and
insl
lret
das
stos
insl
cmp
add
fsubrs
mov
mov
cmp
stos
adc
or
or
xchg
pushl
and
loopne
pusha
or
mov
loope
cmc
add
leave
adc
gs
mov
cmc
xchg
pop
push
push
imul
dec
js
jnp
pushf
lock
cli
jb
stos
jns
xor
scas
das
jge
bound
into
pop
mov
pop
xor
inc
popa
xlat
sbb
push
test
pop
lods
push
xchg
mov
dec
and
movsb
in
xlat
and
test
lods
sub
in
roll
sarb
push
jae
ret
out
daa
xchg
add
aaa
in
pop
cmp
sbb
inc
lds
fs
test
fs
ss
fidivs
fnstsw
imul
sbb
and
andb
jl
xchg
sbb
jb
xchg
pop
inc
xor
or
adc
lods
sbb
mov
jbe
ds
add
pop
adc
push
pop
fs
xchg
les
movsl
adc
icebp
pop
cld
xchg
add
adc
jle
addr16
jmp
cld
pop
cld
jmp
lret
jnp
mov
movsb
or
stos
mov
pop
mov
cwtl
shlb
pop
dec
inc
iret
nop
push
ret
jnp
jae
popf
in
xchg
aad
mov
fcoml
add
inc
mov
in
add
jns
push
sub
mov
lods
loope
fwait
notl
mov
lret
sbb
xchg
fucomi
inc
leave
sbb
ja
and
push
test
mov
lcall
sub
add
mov
sbb
sub
xorb
dec
pop
lret
fcmovne
add
arpl
mov
insb
cli
inc
push
movsl
in
shll
xchg
adc
xchg
punpckhwd
cmp
test
mov
or
and
jge
popa
jecxz
mov
loopne
movsb
lds
aad
iret
jecxz
in
pusha
ljmp
adc
iret
mov
imul
aas
adc
cld
pop
pop
or
jbe
fisttpll
jo
repnz
sub
in
outsb
mov
pop
lcall
sbb
or
add
inc
rorl
add
data16
cmp
in
shrb
xorb
sbb
cli
or
push
add
jo
mov
and
in
push
lahf
das
cltd
mov
mov
jno
je
lock
out
mov
in
push
loop
mov
sbb
movq
adc
bound
mov
adc
and
mov
aaa
dec
mov
out
loope
add
add
out
imull
icebp
or
xor
cmp
movsb
pushf
mov
cmp
movsl
sbb
leave
clc
jo
iret
fldl
lret
jae
or
or
inc
es
push
pop
mov
xchg
jmp
sahf
sti
mov
jne
push
jnp
repnz
add
ficomps
jmp
sbb
add
dec
test
sahf
xor
sti
and
sti
hlt
repnz
test
movsb
xor
repz
jmp
aas
loope
mov
rolb
pop
mov
mov
fs
add
push
das
sbb
stos
jb
fnclex
fldt
inc
jb
mov
push
xchg
and
pop
ja
or
es
dec
xor
push
dec
test
lods
gs
or
xchg
xor
push
push
mov
xchg
dec
cltd
jb
rcr
mull
push
lock
ret
jg
pusha
adc
rorl
cs
cmpsb
mov
scas
inc
cltd
and
inc
cmp
aas
mov
lods
lods
into
rolb
pop
push
xchg
ficoms
stos
mov
jg
mov
dec
cli
ja
inc
inc
bound
jmp
inc
cmp
int3
mov
xor
leave
jg
cmp
mov
add
js
repnz
xor
mov
out
jge
repnz
loope
int3
loop
mov
loopne
mov
jp
and
outsb
les
jp
dec
sbb
jg
xchg
pop
sbb
movsb
pop
jnp
xor
orb
pop
outsl
jecxz
jb
in
out
inc
xchg
pop
lock
subl
mov
or
xor
inc
mov
ljmp
and
aad
or
push
sbb
outsl
mov
mov
push
lahf
jne
lcall
push
insb
xchg
dec
popf
lahf
xor
jne
push
cli
lret
outsb
dec
push
xchg
push
scas
stos
stc
xor
repz
inc
dec
cli
pop
dec
inc
sbb
add
dec
out
push
js
mov
pop
test
xchg
in
jle
ds
and
negb
ljmp
cltd
dec
out
fistps
pop
out
push
mov
mov
and
xor
mov
mov
and
popf
addl
rcrl
aaa
aam
and
rol
fdivl
mov
push
fdivrs
sub
iret
lahf
jmp
sbb
clc
mov
or
or
test
jb
rorl
xchg
sahf
stos
aad
fistpl
mov
jp
mov
sti
mov
mov
out
arpl
mov
adc
mov
or
cmpb
mov
jp
xchg
inc
loope
cmpsl
inc
loop
or
adc
dec
test
jp
dec
fs
jne
lds
sarb
push
loope
or
mov
inc
cld
xchg
shll
cs
jno
fisubrl
test
jne
sbb
ja
jge
cmp
shll
or
lret
sub
xchg
fcmove
inc
mov
in
outsb
popf
test
pop
inc
lods
cmp
mov
mov
out
push
imulb
push
es
andb
add
arpl
leave
pop
sbb
or
int
mov
cs
pop
addr16
loopne
push
xor
fdivl
mov
sbb
fucomp
or
loopne
push
stos
jb
and
xchg
fwait
cltd
mov
push
bound
enter
stos
lahf
pusha
dec
pop
lahf
outsb
leave
pop
loope
mov
mov
fisubrs
inc
push
loope
xor
leave
fdivrl
mov
das
xchg
out
dec
rcl
sbb
mov
xor
or
fidivs
pop
or
int3
sub
inc
cltd
aad
cmc
sti
mov
aad
sub
jns
inc
imul
popa
les
xchg
aad
test
mov
push
and
loop
cwtl
mov
jae
mov
out
jl
shrb
test
arpl
jne
mov
jne
in
in
or
mov
std
push
sahf
push
dec
sub
cmp
push
mov
jbe
test
rcll
hlt
sbb
sbb
add
out
jl
call
in
mov
fisttpl
rcll
aaa
jge
mov
lock
adc
cmpb
mov
mov
or
mov
aaa
pop
daa
lret
scas
mov
sub
call
sbb
pop
fcomps
push
cmp
shlb
std
enter
fs
add
daa
out
stc
lods
push
daa
movsl
ss
int3
dec
test
jge
sbb
loop
mov
enter
xlat
xor
dec
insl
xchg
arpl
mov
int3
ret
push
gs
mov
add
fildl
sti
dec
mov
sub
adcl
push
dec
xchg
lret
push
adc
jo
jg
jo
sbb
inc
lret
clc
enter
nop
mov
lods
scas
loope
ret
sbb
xor
dec
fdivr
mov
rcll
xor
xchg
mov
leave
mov
mov
cmp
mov
arpl
jg
add
and
jns
xor
sub
xchg
mov
and
mov
testb
dec
adcb
lock
in
jbe
xchg
dec
sub
xlat
sub
daa
scas
cmc
test
lods
and
push
movsl
mov
xor
bound
inc
sub
push
xor
inc
jmp
pop
ljmp
add
loope
clc
and
sti
inc
xor
pop
pop
rorb
out
imul
shl
fcomip
dec
out
aam
es
in
mov
enter
dec
push
ljmp
in
popf
cmp
les
fistpll
add
jnp
and
jmp
ljmp
adc
push
or
inc
fistpll
and
mov
and
mov
or
and
dec
lock
pop
pop
and
mov
mov
sbb
mov
mov
adc
push
cmp
dec
mov
cmp
jl
loopne
jae
mov
stos
inc
jo
std
shlb
loop
jmp
hlt
popa
pusha
fwait
bound
xchg
xor
cld
jge
mov
faddl
pop
mov
jmp
jo
jecxz
push
xor
mov
out
movb
xor
in
adc
sbb
mov
movsl
mov
stos
dec
adc
scas
cli
push
enter
add
push
jmp
daa
bound
loopne
jo
inc
pop
sbb
and
sarl
out
rcrb
fcoml
dec
popa
jb
lds
gs
dec
lahf
data16
xchg
mov
xlat
nop
jns
adc
sbb
or
add
movsb
push
rorb
push
sar
test
scas
add
and
aam
test
or
outsl
add
in
mov
rolb
mov
lds
test
mov
cmp
lea
sbbl
data16
fdivrl
mov
fsub
gs
mov
cmp
loope
fisubs
push
pop
adc
dec
pop
ret
aas
mov
sub
mov
or
mov
insb
not
pushf
sar
mov
fidivs
sub
lahf
pop
or
test
movsb
aas
and
push
mov
sbb
dec
xorb
fnstcw
jmp
mov
sbb
cli
leave
idivb
xor
cmp
and
movsb
lcall
jno
mov
xchg
ret
movsl
adc
out
or
add
mov
dec
adc
pop
push
push
out
sbbb
ficoml
mov
iret
fbstp
repnz
or
fmul
in
and
push
addb
and
gs
stos
pop
int3
mov
adc
cmp
pop
and
in
fiaddl
loop
popa
xchg
fstps
sub
mov
xor
lret
daa
jae
punpcklbw
scas
mov
jmp
into
xor
mov
jp
mov
xor
cmp
mov
mov
hlt
pushf
mov
jbe
add
enter
mov
xchg
fstpt
push
pop
sbb
insl
adc
pop
xor
jne
jl
jbe
or
xor
sub
xchg
or
fs
xor
pop
fs
daa
fisttps
in
out
or
std
lods
jge
xchg
pop
into
sbb
insl
cmpsb
repz
fwait
repnz
rcrb
jge
jns
sbb
and
jle
jg
mov
lods
addr16
popf
xor
in
fwait
in
or
dec
cmp
inc
je
out
sbb
subb
jbe
dec
xchg
aaa
inc
or
xor
xor
js
scas
adc
xchg
ret
and
or
sbb
xor
fwait
out
std
pop
or
daa
nop
push
inc
inc
lahf
jbe
adc
into
xchg
mov
out
ret
pop
pop
or
sbb
mov
mov
into
xchg
subb
push
pop
lea
int3
addr16
xor
and
dec
stos
xchg
and
sbb
sbb
mov
mov
addr16
mov
adc
in
xchg
dec
jo
push
inc
jge
sbb
sbb
sbb
gs
data16
or
mov
and
mov
cltd
sarl
xchg
dec
ljmp
or
add
movsl
lods
subb
test
test
out
cmp
outsb
and
fcomp
es
push
out
js
ror
sub
mov
xchg
out
lods
sbb
icebp
outsl
push
add
mov
sbb
das
addr16
dec
jns
or
into
loope
cs
shrl
jmp
sub
push
ret
enter
into
fcompl
mov
pop
mov
inc
pop
pop
or
ficoms
jne
pop
cs
push
test
rcl
sub
adc
lret
pop
shll
enter
gs
repz
inc
lods
loope
inc
nop
or
mov
xchg
xor
mov
shr
cwtl
fwait
jle
loop
xchg
pop
push
mov
or
fcomip
fcmovne
and
xor
mov
mov
sbb
inc
outsb
loopne
cmp
ret
sbb
insb
xor
stos
rcrl
adc
test
jo
mov
push
push
outsb
scas
pop
mov
adc
fisttps
jmp
push
in
outsb
pop
or
jae
dec
fiaddl
in
nop
sub
insb
push
repz
mov
push
push
mov
imul
mov
dec
out
cmpsb
mov
add
adc
xchg
cltd
adc
push
test
jle
arpl
call
push
inc
in
cmc
add
push
jnp
push
movsb
repnz
sub
mul
xchg
push
xchg
nop
les
adc
aaa
test
jnp
test
dec
add
inc
cltd
xor
mov
cltd
or
and
insb
ja
out
inc
add
aad
sbb
cmp
cmp
in
rolb
push
jge
pushf
or
les
mov
push
jmp
mov
mov
clc
popa
jbe
sbb
mov
std
sbb
sti
push
push
mov
dec
mov
push
sub
imul
dec
pop
inc
orl
int3
in
xchg
arpl
hlt
dec
mov
mov
dec
mov
and
add
jbe
in
mov
and
or
mov
shll
lods
ret
fcomps
in
add
inc
sbb
test
mov
or
adc
pop
sbb
int3
pusha
inc
or
das
mov
jb
jp
pushf
mov
and
jle
and
fsubrs
sarb
adc
pop
sub
ja
lods
add
sub
sub
stos
push
sti
pop
fnstsw
jo
mov
decl
rolb
mov
pop
lcall
add
loopne
mov
fwait
mov
cmp
je
mov
xor
or
adc
adc
lahf
sub
mul
sub
out
mov
push
lret
jno
or
arpl
sbb
mov
jg
jae
into
jl
and
pop
mov
out
inc
lahf
repz
pop
lea
ds
imul
push
in
sbb
pop
adc
sub
ret
sub
sahf
lods
in
sbb
inc
mov
bound
jne
push
popa
xchg
inc
je
xchg
mov
sti
xchg
adc
xchg
test
mov
scas
mov
insl
mov
add
vmwrite
inc
or
outsl
push
mov
xor
push
or
stos
stos
push
pop
adc
push
or
cli
imul
sbb
pusha
sub
add
aaa
loope
test
or
pop
data16
sbb
add
adc
fs
xor
jmp
ret
adc
test
popl
fldt
out
xlat
mov
xchg
mov
sub
movsb
nop
mov
les
lods
cmpsl
and
xor
pop
xor
into
lahf
add
ds
pop
push
xlat
xchg
les
jp
js
sbb
cmpsb
and
mov
fisttpll
dec
hlt
gs
push
lret
in
jmp
dec
pusha
mov
stos
push
lret
mov
in
adc
lcall
rorl
negl
jnp
shll
imul
push
mov
sub
mov
mov
mov
push
pop
or
cltd
sbb
imul
inc
jb
shrl
sahf
mov
shrb
sub
sbb
in
sub
insl
scas
pop
sub
pop
gs
ds
lcall
mov
xor
and
aam
cmp
adc
dec
test
mov
mov
push
std
std
mov
out
rorl
xchg
int
aam
or
push
in
sub
int
leave
lea
push
jno
pop
sub
mov
das
sbb
aad
cmp
clc
xchg
push
call
enter
add
lcall
int
xchg
xor
fnstsw
pop
mov
and
or
lahf
das
and
stc
push
gs
stos
test
enter
das
sbb
dec
scas
faddl
push
dec
cltd
or
xchg
mov
cmc
ss
scas
into
cmp
mov
mov
ret
outsl
fsubrl
lret
pop
jns
push
push
dec
cmpsl
jl
fwait
aas
scas
jo
fwait
push
xor
test
sbb
sti
adc
cs
sub
mov
sub
lock
lods
adc
mov
fwait
push
lock
xchg
and
popf
call
pop
jp
bound
mov
stos
push
rol
mov
mov
ja
mov
test
andl
cld
and
push
xchg
mov
xchg
insb
pushl
pop
mov
imul
xor
in
cs
sbb
jmp
fxtract
aas
repz
lret
jl
mov
or
jae
push
test
rcl
in
pusha
inc
pusha
pop
sbb
pop
popf
mov
stos
xor
cmp
test
and
cld
inc
out
cwtl
push
ljmp
repz
movsb
ss
popa
jb
icebp
lods
movsb
hlt
dec
int
in
or
sub
subb
mov
mov
lods
sub
mov
movsb
cmp
js
movsl
mov
js
shl
jmp
xchg
pop
dec
and
test
jbe
add
imul
add
or
insl
mov
imul
push
mov
outsl
test
in
dec
movsl
and
arpl
or
repnz
shrb
jnp
mov
jmp
icebp
filds
inc
gs
mov
jnp
stos
rorb
dec
and
adcb
push
lea
insb
mov
adc
xor
ljmp
rorl
push
lret
or
xor
bsf
push
test
jmp
jp
lock
out
mov
jo
bound
add
mov
mov
les
stos
sti
rcll
jno
pop
lods
sub
jbe
lods
outsl
dec
push
pop
mov
push
or
pop
out
sbb
add
iret
xchg
fcom
mov
aas
sub
push
repnz
scas
cmp
jge
mov
mov
clc
lret
mov
mov
adc
lret
cmp
jo
call
adc
pop
mov
in
int3
lods
stos
xchg
shll
std
sub
mov
fstp
ret
sahf
push
jmp
push
or
mov
inc
shl
pop
test
sbb
das
mov
cltd
xchg
mov
imul
fxch
pop
pop
push
cld
dec
data16
popa
int
sub
sub
jge
inc
sub
not
aad
inc
mov
rclb
lcall
push
test
jmp
leave
call
cmp
outsl
xlat
jl
negl
xor
enter
not
xor
ret
bound
out
sbb
xchg
scas
dec
hlt
xor
das
rclb
add
pop
test
jbe
push
dec
fdivrl
lea
xor
pop
and
add
mov
inc
aas
mov
popa
frstor
leave
into
lods
jnp
cmp
arpl
outsl
adc
call
sbb
imul
inc
addr16
mov
jb
pop
cmp
pop
cmp
loopne
nop
data16
mov
ljmp
out
cwtl
scas
mov
mov
pushf
mov
sarb
imul
cmp
daa
fucomi
dec
pop
jmp
mov
mov
lods
xchg
outsb
xchg
imul
sub
and
outsb
lcall
hlt
jo
sub
xor
js
pop
fisttpll
imul
cmp
jae
pop
mov
cmpsl
pop
repz
push
jl
xchg
sahf
push
dec
mov
push
push
jmp
jnp
push
call
pusha
xchg
sub
inc
je
push
add
arpl
ss
fstpt
nop
mov
and
xchg
jmp
or
pushf
mov
mov
xchg
push
ja
push
jnp
xor
jae
add
rol
movsb
push
jnp
lcall
test
pusha
pop
arpl
aaa
mov
std
jmp
mov
mov
pop
cmp
inc
jle
lods
imul
aad
pop
or
xlat
mov
adc
jle
loopne
jge
pop
dec
mov
cld
jl
pop
sub
pop
adc
std
mov
mov
shll
sti
or
sbb
stos
cmpsb
pushf
aas
mull
test
lret
mov
mov
lret
mov
scas
mov
pop
inc
pop
jp
jmp
xchg
aam
cmp
rcl
es
inc
jp
pop
into
in
inc
mov
mov
inc
mov
imul
cs
stc
lods
fsubrl
daa
imul
not
out
mov
dec
test
mov
cld
push
or
xor
loope
and
in
jp
loop
cmpsl
and
xchg
and
je
jmp
pop
sbb
push
xor
testl
aam
imul
lods
fmuls
and
pop
sbb
mov
sbb
add
shlb
xchg
mov
loop
sub
and
jmp
repz
mov
sub
int3
adc
addl
and
not
lret
dec
js
imulb
pusha
int
test
cmp
subb
outsl
or
nop
push
mov
cmp
xor
dec
push
sbb
insl
add
xor
sub
movsl
mov
jp
call
push
out
sbb
leave
nop
lock
xor
das
sub
pop
movsl
jl
adc
leave
dec
cld
filds
mov
lret
icebp
cltd
mov
sbb
sub
push
push
pop
sub
mov
in
inc
jns
cmp
or
lret
mov
jge
dec
mov
dec
int
je
subb
lea
push
sbb
aas
lds
sub
mov
sub
leave
outsb
xor
jp
xchg
enter
inc
into
lods
fimull
je
jne
and
insb
xor
inc
imul
lea
pop
test
outsl
pop
in
mov
jno
push
add
cmp
test
mov
mov
xchg
push
xchg
imul
and
scas
daa
in
repz
insl
repnz
sub
inc
cwtl
or
pushf
sbb
fucom
add
pushw
mov
jns
pop
mov
sub
add
je
js
push
js
test
pop
sub
cmpsb
cs
sub
decl
aam
push
dec
es
and
inc
pop
xor
js
mov
shlb
enter
popa
xchg
shr
gs
sub
fistps
stc
jne
out
loop
xlat
mov
jne
cmpsl
out
rorl
and
sbb
jle
movsl
mov
ljmp
icebp
ljmp
dec
mov
cmp
jns
jo
rol
in
gs
shrl
scas
scas
pop
sbb
add
shlb
outsl
push
in
dec
or
xchg
jmp
jge
lds
mov
cmp
pop
pushf
outsl
loope
lret
cli
jg
rol
insb
sti
xor
inc
xor
popf
xchg
cmp
int3
cli
mov
jb
mov
adc
out
in
sbb
jecxz
in
iret
push
or
lods
adc
iret
sti
cli
adc
or
stos
call
mov
jecxz
dec
mov
js
mov
lahf
movsl
cltd
add
imul
ret
sub
fcoms
sti
clc
ss
lods
ficoms
ret
sbb
xor
add
or
pushf
mov
jo
xor
cltd
arpl
inc
in
xor
popf
pop
scas
outsb
int3
mov
xchg
adc
enter
loopne
sbbb
je
mov
mov
dec
mov
mov
dec
sbb
add
adc
aaa
mov
sbbb
cwtl
arpl
push
mov
xchg
ftst
pop
test
jno
mov
test
inc
into
fsubrl
sub
test
aam
in
pop
inc
sub
daa
mov
cmp
test
xchg
std
or
shll
add
push
sbb
lahf
mov
mov
std
cmp
lahf
mov
or
movsl
scas
scas
adc
fisubl
sub
fcomps
sub
aam
jecxz
mov
test
or
fadds
inc
repnz
and
inc
rclb
add
out
test
mov
xchg
ja
jg
dec
xor
pop
cmp
lahf
xchg
cli
push
sbb
jge
add
cmp
sub
cs
js
mov
shrb
das
mov
lret
jns
shr
xchg
cwtl
pop
test
xor
imul
ss
das
sub
sub
mov
sbb
inc
sub
fcomi
dec
mov
into
lods
in
xchg
and
jmp
adc
xchg
mov
fbld
mov
mov
xor
test
loop
int
js
mov
xor
mov
jge
imul
dec
inc
cmc
sbb
out
mov
jl
lea
fstl
adc
daa
xchg
and
pop
pop
inc
xchg
or
lahf
data16
popl
mov
fs
mov
call
repnz
pop
fildl
subb
repz
xlat
xchg
mov
clc
pop
adc
mov
cwtl
ljmp
jbe
imulb
sub
jo
push
lahf
pop
inc
call
sbb
in
aad
push
testl
jne
test
push
xchg
scas
or
ds
mov
sahf
cmc
mov
into
outsb
jecxz
push
push
iret
push
jg
sbb
loope
xor
roll
sbb
mov
xor
inc
shl
ficompl
mov
std
jns
ljmp
rol
adc
jne
xorb
adc
rcr
mov
lea
stc
daa
dec
mov
clc
cmp
add
and
and
outsl
dec
mov
sub
andb
int3
test
enter
outsl
jle
shlb
int
sbbb
rcl
mov
add
ds
lea
fs
sub
dec
out
test
and
inc
outsl
push
imul
add
push
mov
mov
std
mov
add
and
and
jbe
add
movl
sbb
loop
push
mov
add
loopne
push
cwtl
jae
and
lret
clc
and
adc
push
cs
dec
sbb
popa
jge
or
add
jno
mov
and
or
sub
push
xchg
jo
adc
lds
mov
repnz
in
bound
js
and
sbb
xor
mov
adc
mov
lock
and
int3
sbb
adc
mov
subb
xlat
call
adc
out
sub
outsl
fwait
dec
xorb
jb,pt
lret
call
jbe
add
cmp
or
cmp
sub
aad
mov
clc
std
push
pop
and
cmp
stc
cwtl
data16
fwait
xor
in
adc
sub
cmp
fadd
int
lret
push
std
mov
sbb
clc
mov
nop
push
ds
leave
jno
push
adc
mov
std
daa
daa
addr16
mov
insl
mov
mov
jnp
aaa
jg
popl
sub
in
and
push
outsl
fs
dec
push
es
xchg
js
ret
inc
fwait
mov
mov
fisttpll
mov
sbb
cmp
int3
xchg
or
pop
cld
das
lahf
stos
outsb
or
and
pop
and
mov
pop
lahf
fsubrl
cmpsb
sub
pop
and
sub
mov
in
call
fnstenv
data16
pop
mov
repz
jno
xor
inc
loopne
xor
lahf
clc
jnp
std
xlat
pop
pop
mov
xorb
aaa
pop
xchg
or
das
pop
xorb
mov
jo
pop
int3
pmovmskb
add
rorb
clc
push
jmp
jno
lods
lods
adc
cmp
jle
xchg
add
jns
xchg
fsubrl
scas
or
lea
and
stos
test
jl
dec
mov
pop
sbb
outsl
jno
dec
xor
and
or
inc
dec
cmovae
loop
jne
add
out
fwait
cmpsl
add
scas
inc
cmp
test
hlt
imul
inc
xchg
outsl
stc
fs
jge
mov
jle
mov
cmpsb
xchg
pop
out
dec
mov
dec
push
xchg
mov
and
push
xchg
out
icebp
out
andl
in
cmp
dec
mov
mov
adcb
jecxz
add
nop
cmp
js
jl
iret
rorb
int3
ss
ds
and
sahf
lcall
lcall
gs
in
sbb
test
icebp
fs
fabs
inc
cmp
pusha
sbb
jno
cmp
aad
xchg
call
xor
jo
mull
mov
test
lods
aaa
cmp
push
fs
xchg
adcl
sub
loope
cmp
roll
lret
aas
pusha
stos
jmp
mov
push
roll
or
mov
loope
std
inc
jge
cmpsb
fiadds
lods
rcrb
out
xlat
lock
hlt
sahf
xor
jo
sbb
pusha
clc
subl
addb
insb
or
xchg
imul
push
ret
adc
xor
js
sahf
lock
mov
xchg
je
fs
movsb
jbe
add
and
cmp
push
test
pop
fnstcw
push
xor
and
repnz
xlat
and
mov
dec
or
mov
xor
das
and
add
fwait
loop
xchg
or
pop
xchg
std
cltd
jecxz
cmp
push
icebp
fildl
push
in
imul
loopne
sbb
sbbb
nop
lret
enter
adc
adc
orb
imul
insl
pop
js
cmp
mov
mov
out
fs
add
ja
ds
pop
test
in
stc
and
notb
test
aam
add
add
addr16
cmp
popl
pop
mov
jno
stc
enter
dec
cmp
sbb
mov
mov
gs
ljmp
stos
xor
or
ljmp
sarb
loop
pusha
push
mov
push
inc
or
cmp
and
out
mul
repnz
call
push
shrb
stos
lcall
movsl
pop
or
andb
xlat
mov
add
mov
lock
fisubs
mov
fdiv
xchg
fimuls
sub
hlt
push
repnz
aaa
dec
aaa
fidivl
jns
fs
sub
aaa
fwait
mov
push
sti
mov
mov
mov
xchg
add
xor
or
into
dec
sub
lods
pushf
xchg
std
inc
or
stos
push
inc
fs
or
adc
add
cmp
mov
adc
outsl
cs
sbb
xchg
pop
or
cwtl
xlat
shll
push
or
mov
push
pop
pushf
mov
scas
test
pop
jnp
dec
jns
cmc
xor
push
stos
iret
das
movsl
cmp
push
data16
mov
mov
push
sub
fstpl
jb
imul
stos
addr16
mov
aaa
popa
rolb
lahf
fnstsw
jae
sub
inc
xchg
dec
sub
in
jmp
cmc
xor
push
mov
lret
add
orb
dec
cvtpi2ps
push
xbegin
xor
mov
dec
adc
aam
test
push
cli
and
inc
add
sub
or
in
inc
push
cmpsb
sbb
fisubs
dec
xchg
cld
cmp
jns
mov
ror
mov
lcall
pushf
or
adc
mov
sub
mov
dec
sub
in
inc
push
cmp
mov
cwtl
pushf
mov
push
jno
outsl
cwtl
icebp
es
cwtl
mov
add
daa
sub
or
pop
adc
lods
mov
xchg
fwait
in
lock
nop
cmp
xchg
mov
out
lret
jbe
cld
lahf
lahf
mov
sub
sbb
cwtl
xor
lcall
push
cltd
xor
push
sti
xchg
push
inc
cltd
dec
cmc
cltd
xor
shr
fs
lret
loop
mov
jecxz
aas
mov
add
push
loop
cli
shr
cmp
pop
out
cmp
jns
and
out
repnz
add
push
add
push
push
and
jle
pop
jne
lret
jbe
out
pop
push
negl
bound
imul
lahf
cmpl
stc
jle
mov
and
push
mov
push
leave
and
inc
pop
scas
pop
cmpsl
lea
push
lods
aas
outsb
pop
sub
add
pop
ret
mov
adc
pop
negl
push
shlb
cs
mov
jbe
pushf
mov
fisubs
dec
stos
je
das
pop
xor
shll
xor
sub
fsubs
loop
movsl
xchg
mov
or
mov
rcrb
fisubrs
inc
sub
cmp
cltd
jmp
out
add
rolb
lahf
data16
adc
enter
mov
mov
lahf
mov
mov
dec
add
icebp
pop
sub
and
in
jle
repz
mov
cmp
rcrb
mov
mov
insb
ljmp
daa
dec
mov
jmp
push
in
lahf
push
in
mov
xor
outsl
and
rorl
push
xchg
loope
pop
loopne
data16
inc
or
mov
jecxz
fdivs
xchg
jg
shll
xchg
or
jne
inc
push
adc
insl
fs
dec
inc
jg
cmp
mov
mul
ficoms
fistps
ffreep
insl
push
cli
orb
or
popa
clc
out
push
xchg
cli
sub
jg
jle
mov
xchg
jno
jl
mov
xchg
and
sub
cmc
push
sahf
dec
xor
lods
in
mov
xlat
jb
cmp
jg
insb
es
push
or
dec
or
xchg
xchg
dec
inc
xorb
aaa
xlat
je
out
mov
or
push
push
xor
adc
ret
jle
or
pusha
out
xor
push
cmp
pop
mov
andl
inc
push
dec
ret
fsubr
mov
shlb
idivb
mov
pop
cmpsb
mov
add
sti
and
roll
push
cmp
push
nop
xchg
xchg
outsb
xchg
movsl
cmp
lret
add
mov
shrb
mov
pop
imul
cmp
les
pop
pop
mov
push
inc
cwtl
psubsw
mov
jmp
scas
ljmp
mov
xor
sub
fnsave
pop
push
loop
xor
jae
cmp
xor
jns
xor
rorb
cmp
and
dec
lock
mov
mov
xorl
lock
pop
jns
cmp
in
aam
addl
mov
daa
clc
mov
pop
fwait
mov
push
jne
add
mov
jbe
fadd
leave
maxps
inc
mov
pop
mov
pop
insl
and
imul
es
loopne
jge
jo
test
jmp
loopew
nop
inc
jg
mov
mov
popa
loopne
jle
sbb
sar
sti
stos
pop
movsl
shlb
mov
cmpsb
xchg
inc
out
cs
mov
in
and
xor
int
dec
inc
ds
add
hlt
push
imul
jns
adc
or
pop
mov
sbb
jle
loopne
cltd
pop
inc
inc
ret
mov
mov
push
push
out
xchg
in
mov
or
add
into
sub
pop
hlt
jle
pop
push
mov
push
fwait
in
insb
js
fisubs
enter
mov
mov
dec
mov
adc
fwait
cmp
decl
cs
cmp
lds
xor
push
pop
xorb
addl
jecxz
push
mov
call
push
loopne
push
mov
jo
cmp
ljmp
mov
subb
mov
ja
pop
aam
xchg
jge
mov
add
scas
add
and
jnp
jg
int3
rcrb
mov
cmp
mov
loopne
shl
out
mov
sub
mov
test
mov
mov
mov
xchg
and
mov
stc
jns
shrl
push
leave
add
jne
push
lahf
movsb
adc
xor
scas
mov
mov
and
or
sub
pop
mov
mov
push
dec
out
and
mov
mov
adcl
ret
mov
sahf
loopne
cwtl
mov
xor
inc
aad
push
ss
repz
xchg
sbb
fiaddl
stos
rorb
cmp
and
mov
push
xchg
cmp
sbb
push
inc
sub
clc
push
mov
cltd
adc
mov
dec
or
lods
cli
insl
clc
neg
test
xor
enter
dec
mov
sub
repnz
out
jmp
fldt
push
test
mov
mov
jbe
bound
cmpsb
in
daa
insb
out
lea
lahf
cli
mov
fcmovnu
xlat
xor
lcall
mov
sbb
sub
push
dec
out
ficoms
adc
pop
push
subb
adc
mov
in
push
mov
sbb
out
movsb
xlat
sbb
dec
ficomps
mov
cmp
or
mov
mov
std
stos
jns
stc
adc
sarb
xchg
outsl
or
stos
and
push
or
sub
outsb
push
ja
push
or
cld
shlb
nop
mov
push
mov
stos
jg
aaa
dec
rep
loop
cmp
and
mov
shll
or
and
inc
subb
mov
mov
arpl
testl
jne
iret
aas
jecxz
daa
imul
jp
adc
gs
inc
es
push
popf
mov
sub
fldenv
mov
test
jbe
jno
js
jmp
pop
dec
xchg
dec
xchg
icebp
and
xchg
push
mov
ret
ret
mov
mov
mov
sahf
in
and
adc
fidivrl
arpl
fdivrl
add
cmc
xor
nop
xor
mov
push
sahf
inc
je
mull
sarb
cmp
idivl
fldcw
scas
cli
fwait
pop
cmp
or
jo
fmulp
std
cmp
leave
mov
dec
inc
inc
sbb
test
push
adc
das
insl
lock
dec
rcll
ljmp
arpl
jb
int
out
pop
add
push
leave
mov
xchg
mov
pop
mov
lods
test
xchg
dec
roll
pop
xor
or
push
jmp
dec
ljmp
jle
scas
sbb
rolb
pop
pop
xlat
mov
inc
cmpsb
shrb
xlat
ja
enter
stos
pop
fmuls
sub
sti
stos
and
cmp
test
mov
jle
movsl
cmpsl
lret
lret
mov
mov
out
jbe
sahf
sarl
enter
pop
ret
mov
mov
mov
pop
jg
hlt
or
xchg
aad
pushf
das
push
mov
jns
jns
xchg
pop
xor
mov
in
mov
push
cli
leave
sbb
cmpsb
cmp
in
stos
jmp
lret
inc
fstpl
mov
jecxz
fldenv
test
ja
dec
imul
pop
das
arpl
pushf
dec
fisttpll
xchg
sbb
cli
or
xor
push
mov
mov
xlat
lret
mov
mov
gs
xchg
enter
jb
xchg
lds
cs
rcrl
stos
jmp
jmp
sti
mov
sbb
xchg
rclb
adc
mov
addl
enter
jne
nop
pop
test
lods
pop
sub
add
cmp
add
rcl
fwait
mov
movsl
sahf
and
dec
dec
test
clc
xor
fmul
outsb
mov
shlb
pop
stos
mov
or
inc
loop
or
cmpsb
test
inc
int
out
jle
adc
mov
test
cli
xchg
sbb
rorl
jbe
push
dec
jmp
fwait
inc
pop
push
int3
push
jb
push
loope
add
inc
negb
sub
mov
es
shll
test
jne
mov
inc
fsubs
jae
insl
mov
mov
adc
stos
cmpsl
popf
orb
add
add
dec
mov
sbb
sarb
sahf
addl
mov
pushf
xchg
inc
xchg
or
jge
xor
push
dec
test
jae
or
inc
les
mov
pop
add
mov
cmp
popl
outsl
pop
sbb
mov
popf
xor
or
sbb
jbe
subl
or
xor
stc
js
xchg
mov
call
sbb
add
arpl
incl
cmp
sahf
popa
sarl
dec
mov
pusha
or
loopne
dec
out
iret
xlat
aas
popa
pop
jbe
sbb
xor
and
dec
inc
cmc
loopne
sar
in
mov
sbb
cmp
xor
xchg
push
jmp
fs
fidivs
pop
in
mov
lds
jecxz
and
jge
int
pushf
pop
jo
xor
leave
jp
jno
inc
test
inc
jmp
inc
movsb
jecxz
rorb
and
movsl
outsb
mov
vmovupd
push
add
ret
shrb
pushf
lods
je
fsts
fwait
sti
lea
add
adc
cld
inc
jl
adcb
imul
lds
lahf
sbb
xchg
testb
js
sbb
pop
jle
mov
cmp
les
xchg
repnz
fcoms
testl
push
aaa
xchg
push
js
cmpsl
adc
lea
lcall
push
in
jne
mov
and
cmp
lret
inc
addl
mov
insb
pop
inc
fldt
sbb
jle
cmp
inc
out
call
push
lcall
push
insl
pusha
push
or
mov
sub
lcall
add
jl
das
add
push
fsts
sbb
adc
push
mov
sub
testb
stos
sub
and
pop
lods
idiv
xchg
mov
outsb
outsl
adc
aam
dec
pop
pop
test
lret
fcompl
and
jle
jbe
clc
push
es
ss
lds
cmp
rcr
dec
dec
push
lods
jb
in
inc
push
aam
mov
xor
mov
xchg
mov
pop
add
and
xor
scas
bswap
or
xchg
pop
lods
mov
xor
cmp
sbb
xor
mov
popf
sbb
jne
mov
rcrb
and
xchg
xor
pop
jns
and
mov
inc
lds
or
jns
adc
out
icebp
fucom
test
push
fbld
add
repz
aam
add
xchg
mov
jne
test
mov
nop
mov
loopne
ds
aaa
imul
shr
iret
add
jae
icebp
dec
push
sbb
mov
sbb
out
call
cltd
in
or
inc
imul
add
hlt
xor
xor
push
inc
cmp
xchg
xchg
sbb
in
dec
xor
fdivp
in
push
test
and
sbb
nop
sub
ret
inc
movsl
sbb
data16
dec
iret
jl
mov
jmp
cmp
ss
mov
sub
insb
loope
push
jo
test
incl
adc
inc
rorl
pusha
mov
repz
in
sub
nop
or
pop
outsb
shll
xor
sti
rcl
mov
dec
lock
cs
lods
cmp
sti
sub
fwait
int
cmpsl
sbb
jle
insl
push
insb
pop
and
push
mull
fildl
xchg
mov
inc
hlt
enter
int3
sub
sbb
sub
enter
xchg
dec
out
enter
adc
or
mov
shrb
fnstcw
and
pop
je
adc
push
or
stos
test
add
cmp
lods
adc
repz
vpaddb
sub
inc
ljmp
aaa
lods
add
mov
fcompl
jecxz
add
or
call
sahf
int
cmp
lock
ret
out
insl
or
pusha
and
cmp
lock
in
outsb
test
jae
xor
cmp
loope
sarb
xchg
out
add
mov
fcomps
push
ficompl
loop
pop
adc
push
add
sub
xlat
push
ja
adc
test
and
out
test
jmp
mov
in
inc
test
pop
and
push
push
or
adc
cmpsb
ret
jo
rcrl
ret
jmp
in
sub
cmp
movsl
sarl
cmp
push
xchg
into
and
ret
pop
and
scas
das
ret
inc
loope
jno
enter
mov
jl
pop
add
pop
stos
xchg
pop
stos
divb
inc
clc
pop
xor
lds
das
mov
mov
mov
fisttps
js
jbe
std
add
xor
inc
or
cmp
outsb
push
xchg
loopne
stos
inc
pop
shlb
sbb
sbb
xchg
xor
es
stc
add
test
sub
gs
mov
roll
push
jbe
cwtl
call
ss
inc
clc
add
shll
jae
mov
fstps
push
xchg
push
dec
and
imul
je
jbe
mov
std
push
daa
loopne
imul
pop
dec
sahf
pop
icebp
mov
clc
clc
int3
sbb
push
enter
int3
cmp
add
popa
mov
mul
rorb
xor
fbld
cmpsl
sbbl
xchg
leave
mov
adc
dec
sbb
nop
aas
and
mov
cmpsl
mov
push
inc
cmp
lahf
mov
mov
pop
mov
out
scas
test
and
out
pop
sarl
lret
mov
mull
psrld
fsubr
fists
scas
jg
aas
or
or
adc
push
sub
add
pop
cmp
push
xlat
das
add
sub
sbb
cmp
add
and
xor
es
sahf
pop
xor
mov
test
jmp
xor
mov
popa
je
push
pop
xchg
popa
dec
out
cld
loop
adc
movsb
outsl
popf
push
loop
test
arpl
scas
insb
mov
adcl
sub
repz
jp
leave
insb
add
aam
jecxz
imul
pushl
adc
dec
in
inc
push
call
test
lock
jmp
cmpsb
fadd
cmpsl
icebp
dec
adc
jae
xchg
inc
xchg
dec
or
nop
cmpsl
fistps
shll
mov
sub
test
sti
add
out
mov
push
addr16
scas
lcall
push
or
xchg
jb
sbb
testb
sti
test
cmp
xor
sbb
pop
cmp
jae
movsl
adc
cs
cwtl
ficompl
loopne
lret
cmc
movl
lds
sbb
add
or
out
test
inc
mov
mov
or
movsb
pop
mov
dec
dec
mov
int
test
jb
sti
jl
dec
lcall
inc
jns
shlb
mov
push
outsl
xchg
jecxz
fidivrl
cmp
add
bound
fidivrl
in
inc
lock
fwait
lods
xor
jmp
dec
notl
stos
int3
pop
repz
sbb
push
push
mov
push
inc
in
lcall
push
pushf
jb
imul
das
das
inc
fdivp
xor
in
add
push
mov
pop
mov
or
icebp
add
xchg
rorb
push
aas
in
mov
pop
mov
push
jle
ret
pop
sbb
sub
sbb
int3
rcrl
gs
aaa
out
dec
sahf
jl
mov
std
enter
nop
or
loopne
insl
push
dec
scas
stc
dec
mov
popa
adcb
mov
daa
stos
cmp
and
lret
pop
jno
jle
loop
psubsw
xor
mov
jo
aas
add
subl
mov
or
push
cltd
ja
roll
push
cmp
pop
adc
push
lock
ficoml
repnz
fnstsw
xor
daa
dec
imul
fimull
notb
mov
cmpsb
nop
push
push
call
xor
sti
mov
mov
inc
jae
hlt
mov
cmc
jl
mov
aad
ja
repnz
lods
push
scas
cmp
push
aam
mov
jge
std
mov
mov
int
jle
xchg
or
push
inc
fnsave
leave
ds
stos
xchg
add
mov
xlat
pop
push
in
repnz
cltd
nop
mov
xchg
fbld
jg
push
mov
inc
mov
sub
xchg
icebp
out
es
cmpsb
fldenv
push
lret
cwtl
adc
adc
shlb
mov
jne
lret
or
mov
test
ja
mov
mov
adc
loop
jo
int
repz
out
push
pusha
jecxz
xchg
sub
test
imull
popf
mov
xchg
or
dec
push
adc
imul
and
sub
push
xchg
lods
sbb
cmpsl
mov
loope
sbbl
inc
pop
sbb
je
mov
les
int3
test
ss
xchg
xchg
and
inc
sti
xor
lods
mov
jg
mov
add
aad
mov
adc
lods
cmp
jmp
jns
in
jle
xchg
lahf
push
ja
mov
aad
cmp
jbe
lods
lods
dec
nop
lea
les
pop
mov
sbb
jmp
cltd
sbb
ret
mov
sub
dec
adc
add
xchg
mov
rcll
ss
js
ds
loopne
sub
adc
gs
mov
inc
sahf
clc
and
cli
jno
or
pop
xor
loope
mov
push
lcall
movsl
fmuls
pop
fsubrp
in
dec
sub
aaa
xchg
clc
sub
xor
push
adc
sub
and
jb
icebp
pop
sbb
sbb
cwtl
fcomps
lods
jg
adc
fwait
jns
push
xlat
xchg
and
fs
ret
lock
mov
sub
xor
sub
test
jge
imul
push
adc
sub
sahf
dec
bound
rcr
xchg
test
cld
xchg
gs
mov
imul
adc
mov
repz
aas
inc
xor
sub
ljmp
adc
add
xchg
jge
or
dec
push
or
sub
in
arpl
clc
and
jp
mov
jns
pushl
mov
xor
mov
jmp
push
gs
sub
cmpsl
aas
jl
loop
cmovge
and
sahf
fsincos
sarb
push
in
out
dec
xor
jmp
pop
inc
fadd
pop
jl
jle
test
mov
rsm
dec
or
or
sbb
mov
scas
hlt
popf
adc
out
orb
jmp
mov
in
cli
int
aas
mov
push
rcll
or
xchg
fistps
mov
fiaddl
inc
mov
adc
xor
jnp
arpl
enter
xor
mov
fldl2e
notb
xchg
sbb
sarb
xor
gs
jno
stc
or
mov
sbb
push
test
sbb
lea
cmp
push
mov
stc
fstpt
push
adc
cltd
fmuls
repz
pop
adc
and
outsl
xchg
lret
xor
cmp
and
dec
fs
dec
iret
imulb
or
cmpsb
loope
jae
mov
jnp
inc
fidivrs
mov
cmp
loop
lcall
popf
push
mov
lds
stos
pop
sbb
or
xchg
ret
cltd
shr
jb
in
mov
adc
mov
mov
mulb
pop
testb
inc
out
popa
daa
sahf
iret
sub
adc
jmp
mov
popa
loop,pt
cmp
insb
dec
fnop
dec
dec
imul
pushf
rclb
jae
and
add
push
inc
push
add
jl,pt
pop
pop
sbb
mov
enter
add
pop
mov
pop
in
jbe
cmp
lcall
fcmove
cmpsb
push
cmpsl
push
andl
mov
jae
data16
mov
add
and
pusha
sub
xchg
in
lret
xor
mov
or
popf
movsb
roll
scas
popf
lock
push
add
in
addr16
stc
or
xchg
mov
push
call
mov
mov
xor
dec
lock
ret
jmp
and
shrl
es
sub
jmp
aas
push
sub
cld
pop
adc
dec
jbe
pushl
aas
push
sub
push
dec
mov
add
daa
dec
or
divl
sti
mov
or
rcr
idivl
push
cwtl
sti
sub
pop
adc
dec
lds
js
add
sahf
push
xlat
mov
adc
jno
fmulp
jg
nop
out
es
ds
rorb
int
or
aaa
sub
push
cs
stos
xlat
pop
clc
ss
mov
pop
mull
inc
jbe
adc
pop
faddl
mov
and
jb
iret
dec
and
add
test
sub
mov
adc
jb
and
mov
scas
lock
push
stos
mov
mov
test
and
xor
mov
xor
popf
push
xor
mov
in
fcoml
jp
mov
push
xchg
or
jge
dec
fdiv
out
mov
out
jb
push
bnd
inc
icebp
lods
daa
or
lret
cmp
sub
dec
jle
in
mov
jns
sahf
add
mov
cs
addr16
or
rolb
cmp
filds
aas
insl
xchg
cmpsl
or
xor
adc
out
mov
push
cmp
or
or
dec
dec
repz
xor
inc
insl
cmpl
jl
out
int3
lahf
gs
xchg
pop
sbb
enter
jmp
pop
shr
insl
stc
nop
sub
cmp
push
jl
lock
aam
dec
mov
lds
push
mov
pop
or
pusha
movsl
or
xchg
stc
scas
jle
jb
cwtl
aam
call
dec
or
jb
pop
push
incb
aaa
gs
jnp
lea
mov
nop
xor
fwait
xlat
dec
repnz
sbb
xor
fadd
and
xor
stc
adc
aas
and
mulb
into
sbb
or
mov
mov
int
cmp
pusha
pop
lods
pusha
cmp
xchg
cltd
pusha
std
out
cmpsb
scas
data16
daa
inc
test
lea
or
jl
daa
xlat
inc
dec
das
ret
popf
popf
sbb
mov
arpl
jns
push
add
pusha
sub
dec
dec
push
cmpl
mov
and
cltd
xchg
sub
xchg
ror
cmpsb
mov
out
adc
ret
ljmp
sub
xchg
inc
iret
std
lcall
fs
sbb
repnz
stos
push
adc
xchg
add
cli
or
lea
filds
subl
or
jmp
mov
jae
repz
repz
test
fldpi
mov
inc
add
cmp
jge
andl
xor
ss
inc
sbb
push
or
jmp
pop
jno
mov
inc
dec
cld
xor
mov
imul
mov
xchg
sbb
jecxz
and
movsl
jmp
and
hlt
sti
gs
test
cmp
fcomi
adc
dec
xor
mov
cli
jl
lahf
test
je
testb
push
repnz
cmpsl
js
mov
movsb
cmp
sub
cltd
lahf
enter
fdivrl
iret
lock
push
movsl
inc
push
mov
into
leave
dec
out
mov
push
mov
adc
xor
shll
aas
add
out
addr16
sbb
mov
ja
daa
mov
fnstsw
jecxz
jecxz
in
ret
loope
push
push
push
sub
inc
aas
adc
daa
fistpll
pop
mov
or
lds
int
lods
mov
mov
pop
lea
std
jae
xchg
aaa
rorl
and
add
mov
jae
scas
sub
jp
jbe
inc
xlat
loope
xchg
sbb
es
push
cli
inc
scas
add
out
fsts
xchg
inc
outsb
lahf
es
push
loop
cmc
pop
dec
sub
testl
pushl
out
aam
aas
mov
cmpsb
xor
and
jp
pop
or
push
push
inc
pop
mov
cmc
xor
cwtl
test
dec
mov
push
pop
jmp
imul
dec
pop
lock
add
xor
js
aaa
mov
pop
mov
adc
sbb
in
popf
or
pop
jl
popf
mov
lcall
inc
xor
dec
fadds
xchg
test
cmp
mov
push
push
mov
je
mov
adc
fnsave
cltd
mov
add
dec
push
js
test
jmp
js
add
or
mov
mov
int
jmp
xchg
add
dec
test
pop
pop
test
dec
insl
pop
or
and
dec
mov
clc
inc
hlt
xchg
testl
xor
and
daa
int
enter
scas
sub
jp
xchg
jbe
xor
call
enter
sbb
lds
sub
lds
pop
sbb
dec
cmp
pop
jge
sbbl
and
xor
icebp
shll
mov
cmp
loopne,pt
inc
inc
jmp
loop
jle
fisubl
cs
cmp
inc
shl
mov
cmp
mov
inc
add
cmc
lret
cld
jae
mov
in
jmp
xchg
or
pop
flds
xchg
daa
sub
mov
notl
mov
sbb
push
aas
dec
adc
inc
insb
fs
adc
xor
dec
movhps
cli
ficoml
cmp
les
aaa
add
jmp
rclb
push
pushf
dec
iret
xchg
lcall
mov
mov
adc
scas
fcmove
rcll
mov
ror
clc
xchg
sub
inc
and
or
push
push
pop
test
popa
add
pusha
nop
add
jge
test
icebp
add
xlat
inc
loop
mov
push
data16
pop
sbb
and
push
sbb
lods
das
incl
js
dec
xchg
sbb
movsl
mov
sti
scas
in
cmp
or
push
aam
adc
lock
std
inc
sub
xor
addl
je
outsb
mov
push
sub
mov
loope
push
xor
daa
push
dec
mov
inc
dec
sub
negl
scas
jge
jle
cli
enter
test
or
scas
sub
sti
mov
inc
push
sub
stos
sahf
push
out
sub
sarb
out
inc
aam
adc
in
test
gs
nop
xchg
mov
pusha
out
mov
mov
roll
cmp
in
mov
inc
andb
push
outsb
jne
les
adc
sbb
imul
jnp
cli
mov
sbb
in
aaa
fs
xor
pop
ljmp
inc
mov
add
lock
lock
cmp
cmp
insl
pop
mov
add
in
pop
sub
inc
shrl
mov
jae
dec
xor
cwtl
mov
pop
push
mov
jmp
out
jnp
adc
loope
lret
dec
mov
stos
mov
push
inc
iret
sub
push
sbb
es
fiaddl
cmpsl
out
into
sub
push
icebp
adc
fisubl
clc
sbb
cmp
je
out
push
jp
jecxz
pop
sub
in
jnp
rcll
xor
sbb
int
sub
es
sub
fisubrs
push
jl
sbb
sub
jne
adc
in
cltd
dec
or
iret
xchg
adc
notb
lods
mov
es
inc
cmp
mov
mov
or
adc
push
sahf
daa
cs
pop
xchg
push
adc
push
enter
fadd
mov
fwait
test
push
cmp
cltd
test
xchg
jge
xchg
xor
xchg
cmpsb
mov
testb
cli
orl
pop
imul
lcall
push
xlat
and
jns
push
inc
lea
repnz
pop
mov
push
push
fwait
xlat
lahf
andl
and
and
cmc
jae
sub
testl
aas
mov
arpl
mov
xchg
jge
ljmp
sahf
fadds
test
jmp
mov
std
rolb
jge
std
xchg
push
icebp
mov
or
jmp
lea
mov
xchg
or
lea
ret
cmp
jnp
jae
or
dec
cmp
call
pusha
mov
mov
sub
data16
shl
and
fwait
in
adc
xchg
lret
ja
jno
sbbb
sub
add
jne
mov
into
scas
inc
pop
mov
gs
adc
lcall
subb
cld
cld
cs
or
xchg
scas
int3
cmp
popf
xchg
ret
out
cmpsl
xchg
inc
out
les
pop
xchg
jb
or
add
mov
jns
outsb
add
gs
insb
pop
jmp
cld
cs
pop
and
sbb
fstpt
cmpsl
and
cwtl
push
fimuls
pop
nop
mov
and
jl
lcallw
repz
jno
shll
xchg
mov
xor
outsl
sub
lods
inc
sub
xchg
jl
hlt
je
data16
data16
dec
mov
push
cmc
jge
and
push
adc
in
mov
cmp
mov
scas
push
out
ret
push
test
inc
jne
mov
movsb
cmp
cs
jb
inc
in
pop
in
sbb
lods
xchg
mov
jb
inc
mov
mov
lcall
cld
daa
mov
pop
repz
roll
lods
out
out
fnsetpm(287
push
push
mov
or
mov
in
testb
cmpsb
cmpsl
add
daa
popf
or
stos
lret
cltd
dec
shrl
fldt
je
popf
mov
add
jmp
insb
adc
dec
pop
sbb
sbb
mov
cmpsb
shlb
dec
loopne
imul
rclb
in
lret
pop
push
sbb
mov
out
xchg
or
sbb
pop
dec
call
cmp
push
fstl
hlt
sti
push
cmc
push
lret
iret
mov
aam
dec
fldenv
mov
and
xchg
adc
jl
sbb
cmp
sbb
sbb
scas
pop
pop
xlat
aaa
fistpll
sub
pop
jmp
inc
out
adc
das
fisubl
mov
mov
push
stc
mov
and
cli
lret
dec
faddl
mov
fstpl
mov
push
ret
mov
or
sub
orb
adc
mov
xchg
pusha
cs
jmp
inc
loop
or
cmp
addr16
or
fcomps
pop
shl
sbb
dec
mov
test
leave
sub
popf
add
and
ret
mov
in
test
std
in
inc
sub
sbb
pop
scas
mov
push
pop
into
and
sub
repnz
mov
arpl
jne
in
pop
mov
cmp
xor
pop
jae
rcll
outsb
jno
aas
jne
roll
push
xchg
jl
push
jo
movsl
mul
dec
shl
jmp
adc
outsl
mov
loope
ret
jb
and
mov
das
and
outsb
leave
sub
inc
mov
jl
pop
insl
daa
mov
lcall
call
das
outsl
bound
dec
sbbl
pop
push
xchg
ss
lds
xchg
js
xor
xor
sub
jmp
outsb
push
and
fs
into
push
loop
testl
enter
xlat
dec
xchg
test
adc
in
cmp
popf
xor
mov
xor
stos
outsl
mov
jmp
mov
aam
xchg
lods
and
popf
jp
cli
sub
les
loop
jb
sarl
mov
test
and
adc
and
mov
xor
fsubl
lahf
idiv
mov
fdivrl
test
push
mov
dec
push
inc
fisttpl
lret
aad
insl
jns
sbb
in
jo
mov
pop
jle
push
push
imul
mov
jl
cmc
cld
fldt
shrl
testl
mov
jb
jge
or
dec
jge
cltd
sub
aaa
cwtl
or
fcoms
jmp
ds
cmc
sub
sbb
pop
add
mov
cmp
add
mov
xor
and
and
mov
inc
sub
aam
jle
arpl
loopne
faddp
push
xor
ret
jo
dec
lods
jae
mov
loope
fsubr
aaa
dec
pop
push
int
movsl
jns
cli
test
jp
scas
mov
pushw
push
cmp
and
fwait
test
add
or
xor
add
or
xor
sarb
ja
pop
in
add
ret
insl
xor
inc
and
or
or
sub
mov
jmp
push
xor
das
and
pop
xchg
xchg
and
ds
push
jp
jnp
mov
nop
sub
adc
mov
pop
xchg
mov
cltd
test
add
jmp
aaa
sbb
nop
push
cmp
sub
sbb
int3
adc
mov
pop
push
push
mov
lods
sub
push
push
mov
insl
and
call
and
fistl
daa
les
sub
aad
std
pop
sbbl
sub
iret
jl
mov
je
sub
insb
test
add
loopne
iret
jns
repz
dec
add
fsubrs
jb
jbe
cmpsb
inc
pop
cltd
fs
adc
push
add
xor
ja
jg
ret
ja
outsb
mov
dec
pop
lret
mov
sub
mov
cmp
orb
push
xlat
ss
sbb
or
jne
cmp
inc
aaa
cwtl
js
repnz
dec
and
mov
or
inc
mov
jmp
sbb
mov
push
loopne
jnp
jg
adc
cld
fimull
cmp
add
add
pop
dec
mov
test
stos
es
push
cmp
subb
aaa
jle
mov
and
pop
jle
nop
aas
shl
inc
jns
mov
cld
pop
inc
imul
adc
xchg
jbe
sti
ss
ret
inc
xor
aaa
aaa
pushl
jmp
jge
pop
test
and
xor
inc
popf
out
into
and
add
and
and
and
sarl
int3
mov
imul
in
xor
dec
sbb
xor
adc
test
pop
std
mov
stos
decl
mov
outsl
push
test
mov
movsb
addb
and
jmp
icebp
cltd
aaa
aad
add
lock
into
loopne
xchg
push
mov
imul
xor
fistpll
into
cmpsb
stc
mov
test
popl
rorb
icebp
fdivp
xchg
aaa
cmp
daa
fbld
das
mov
jnp
push
out
test
pushf
mov
stos
aad
mov
lods
inc
fistpl
hlt
add
mov
xor
jle
sub
outsl
jecxz
pop
jns
std
std
xorb
imul
dec
pop
gs
movsl
xchg
lea
bswap
iret
lods
jle
sub
mov
loop
push
jbe
lcall
xchg
cmc
shll
js
xchg
push
fwait
push
mov
jne
pop
and
pop
mov
ja
mov
fcompl
xorl
or
sbb
arpl
mov
insb
jp
icebp
xor
mov
xorl
loopne
adc
push
sbb
cmp
xchg
gs
loopne
loope
shll
jae
sbb
enter
mov
cmpsl
lret
xchg
jno
or
xchg
xor
bndldx
lods
mov
mov
xor
push
push
sbb
pop
shlb
in
add
push
bnd
pop
lock
loop
insb
xchg
fsubrl
pop
cmpsb
rolb
hlt
sahf
add
jnp
adc
iret
jg
push
jbe
pop
pop
ret
lock
inc
bound
mov
xor
out
jmp
cli
push
dec
les
add
jb
inc
adc
pop
cmp
mov
adc
push
xor
cmp
lcall
add
test
lds
ja
or
inc
test
sbb
xchg
insl
add
jnp
repnz
xlat
outsl
cli
pop
add
fimull
notb
ret
dec
hlt
out
inc
nop
dec
out
adc
shlb
dec
mov
dec
nop
loopne
xchg
scas
adc
mov
mov
cmc
sbb
fwait
jecxz
scas
scas
mov
repz
clc
sbb
insb
mov
mov
in
mov
into
enter
test
shll
cmp
adc
inc
mov
dec
fdiv
xor
out
std
xchg
std
xchg
cmpsb
sbb
cmp
cmp
leave
test
mov
dec
aas
jmp
test
push
and
loopne
xor
jbe
test
sub
fistl
mov
aaa
loop
out
popf
pop
fxch
mov
mov
lock
push
aaa
push
out
mov
mov
fdecstp
imul
adc
cmp
ljmp
mov
sub
imul
imul
pop
repnz
jg
stc
js
inc
aas
arpl
fucomi
cwtl
mov
jns
test
pop
out
mov
cmpl
and
cmp
mov
jl
mov
cmpsl
cmp
pop
xor
loope
cmpsl
out
dec
ljmp
pop
and
mov
js
test
rolb
imul
dec
loop
xchg
inc
hlt
mov
stc
ret
pusha
in
jge
leave
and
mov
je
cmpl
std
into
sbb
sub
scas
jmp
cmpsl
cmp
push
fwait
add
jl
pop
cmp
fdivs
cwtl
orl
mov
cwtl
adc
sbb
jnp
add
lock
aad
outsb
inc
cmp
js
rcll
cmpl
orl
pusha
movsl
xor
jo
stc
scas
cmp
mov
fildl
cmpsl
cmc
sub
dec
adc
mov
rcll
cwtl
adc
dec
cmp
add
ret
gs
pop
insl
fdivs
test
aas
repz
add
pop
mov
jns
dec
rorb
sub
inc
adc
pop
mov
inc
les
mov
shrb
jns
int
pop
add
gs
pop
cwtl
push
dec
mov
inc
mov
dec
mov
test
push
adc
cmpsl
dec
lea
mov
push
or
lds
jns
into
gs
xchg
outsb
ljmp
adc
repnz
mov
fs
cmp
je
mov
loopne
scas
xchg
lods
scas
stos
shrl
xor
mov
inc
jge
ds
cmp
or
push
cmpsl
adc
lcall
sub
mov
push
das
mov
xchg
jbe
or
sbb
inc
icebp
popf
mov
push
dec
sarl
xchg
pop
movsb
int
adc
movsb
jnp
mov
and
dec
sbb
and
mov
mov
sbb
mov
xchg
shr
jle
and
xor
sar
cmpsb
xchg
fsubr
mov
sbb
lods
push
filds
popa
xchg
lock
and
lahf
sbb
shrb
mov
jne
xchg
rorl
insl
adc
into
repnz
cltd
mov
sbbl
sub
mov
push
fdivrs
sub
stos
jg
mov
pop
or
jge
addr16
jge
pop
pop
mov
sahf
mov
or
dec
or
adc
pop
stos
pop
mov
out
pop
add
mov
mov
loopne
cmp
sbb
shlb
pop
and
gs
jo
or
out
mov
shrl
mov
aad
xchg
cmp
sbb
imul
pop
jae
pop
inc
das
lea
ret
incl
lods
xor
mov
add
lret
into
dec
movzwl
fbld
cwtl
xor
inc
mov
dec
add
or
pop
imul
clc
rcrb
pop
scas
pop
sbb
xor
or
push
cmpsb
movsl
xchg
and
in
mov
movsb
pop
mov
and
aad
mov
dec
sub
int3
and
ss
jae
popf
push
or
mov
sbb
add
insl
std
scas
je
cs
push
loop
and
cmp
lock
jne
inc
inc
or
imul
mov
add
xchg
ljmp
inc
push
mov
jne
out
cmp
sub
ret
dec
mov
jecxz
movsb
lods
cmp
int
push
dec
sbb
ja
fimuls
adc
pusha
adc
test
rcrb
sbb
pop
add
mov
mov
sbb
sbb
popf
push
xchg
jp
xchg
adc
inc
mov
dec
jle
jns
sbb
test
dec
rcl
mov
lods
pushf
imul
shrl
mov
sub
xchg
cmp
inc
jle
sub
sahf
pop
sbb
xchg
ja
daa
inc
mov
rcr
push
lahf
jle
fildl
int
test
jnp
sub
xchg
repz
aas
int3
jg
sti
cmp
ficompl
jo
stc
xchg
pop
inc
repz
negb
pop
fists
je
int3
or
mov
das
sub
mov
movsl
xlat
fiaddl
rcrl
mov
adc
or
movsl
mov
enter
imul
push
fsubrp
mov
fsub
bound
or
lahf
xlat
aad
xchg
adc
sbb
xchg
cmp
fiadds
bnd
movsb
cmpsl
and
mov
testb
rolb
aas
imul
push
adc
add
push
and
leave
xchg
xchg
pushf
xor
or
popa
stos
rolb
dec
mov
inc
jno
jg
cltd
testb
popa
cmpsl
push
call
add
push
sub
and
loop
push
flds
lret
or
mov
adc
xchg
out
sbb
movsb
jnp
lcall
mov
cmp
mov
popf
sbb
sbb
xchg
loope
xchg
repz
repnz
mov
inc
and
enter
cmpsb
and
pusha
mov
loopne
sbbl
lret
dec
adc
dec
enter
imul
cmp
outsb
cmp
dec
popa
pop
or
mov
sub
jbe
mov
je
mov
cmp
rol
jecxz
inc
cs
jne
or
dec
arpl
in
jmp
shrl
test
xor
dec
xchg
jno
sub
xlat
int3
inc
mov
mov
lret
cmp
jno
xchg
in
mov
cmp
lock
pop
jle
iret
adc
pop
dec
cmpsl
fucom
xchg
imul
cld
mov
mov
inc
arpl
inc
test
adc
and
push
xor
ret
push
mov
xchg
sub
mov
jnp
push
push
jp
fbld
dec
mov
adc
pusha
inc
add
dec
mov
or
and
sub
mov
loopne
in
imul
ficomps
or
ljmp
dec
scas
clc
dec
mov
xchg
test
pop
outsl
loope
dec
pop
mov
push
jmp
dec
lods
and
insb
mov
push
icebp
fbld
push
mov
xchg
cld
and
jmp
xorl
cmp
xor
ret
lcall
lret
aaa
sahf
push
mov
leave
adc
ret
cs
xchg
sub
and
cmp
rcll
lret
sub
sbb
xlat
sbb
repnz
xchg
push
lret
and
arpl
je
xchg
jbe
mov
sbb
mov
test
pop
push
movsb
fidivrs
neg
stos
cmp
outsl
mov
or
loopne
rcl
sbb
dec
push
mov
push
mov
mov
cld
popa
dec
lds
mov
add
push
dec
ljmp
xor
xchg
mov
imul
xchg
bnd
push
sahf
mov
sub
add
pop
rolb
pop
in
sub
ja
sahf
repz
test
lret
mov
cmp
xchg
out
mov
sub
stos
xor
jmp
loopne
jle
cli
dec
sub
in
jg
inc
pop
cmpsb
outsb
sarb
and
dec
sub
jo
rorb
inc
and
and
adc
and
repz
stos
add
mov
dec
pop
lock
pop
test
out
jbe
push
fstpt
adc
lds
mov
sbb
push
into
flds
hlt
xchg
fisttpll
and
movsl
pop
test
iret
sub
sbb
mov
inc
int3
repz
scas
stc
scas
ret
push
xchg
or
jnp
adc
mov
jbe
ds
stc
inc
mov
jmp
push
fildll
dec
jnp
xlat
dec
jecxz
orl
aad
xchg
movsl
cwtl
inc
les
jp
and
divl
sti
push
inc
mov
jle
jmp
loop
aaa
shrl
xorb
add
cltd
popf
xchg
adc
jbe
add
add
push
imul
andl
add
inc
adc
add
arpl
dec
pusha
add
sbb
jns
je
jne
xchg
jecxz
imul
fsubs
decl
mov
int3
dec
pop
subb
add
adc
pop
cmp
and
dec
xchg
fisubl
sbb
push
mov
pop
andl
cmp
cwtl
fwait
inc
scas
dec
xor
mov
in
inc
and
mov
ss
dec
dec
add
cwtl
int3
pushf
fs
cs
mov
test
ret
repnz
mov
add
rep
xor
lds
push
aaa
es
jae
insl
xor
stos
lods
loopne
cs
adc
add
call
das
mov
lock
push
icebp
daa
loopne
and
dec
mov
iret
jne
pop
std
dec
mov
mov
std
adc
xor
sub
repz
mov
inc
sub
pop
xorb
in
jl
inc
fbstp
push
fcoms
sbb
push
mov
popf
pushl
mov
movsb
lea
movsb
jl
inc
clc
mov
in
mov
mov
scas
cmp
sbb
int
fnstcw
cmp
push
or
sub
jo
sub
movsl
adc
mov
fucomi
aam
xchg
dec
mov
mov
sbb
mov
add
test
popf
insl
push
sub
je
xchg
popf
iret
sti
fcomip
dec
lea
in
enter
jae
nop
xchg
sti
pop
xor
push
test
sbbl
dec
ret
pop
and
push
loop
lret
xchg
pushf
jne
push
push
push
iret
mov
sub
ss
mov
subb
pop
pop
add
push
pop
sub
stos
lret
dec
jns
es
xchg
imul
dec
push
and
add
insb
sahf
or
pop
cld
push
add
std
push
jns
jle
aas
imul
or
dec
add
lods
cltd
scas
add
stos
daa
mov
push
mov
dec
mov
sbb
repnz
int3
mov
repnz
insl
xor
pop
aaa
imul
lods
pop
inc
leave
xchg
pop
dec
sbb
mov
push
cli
pop
inc
mov
scas
pusha
hlt
in
shrl
inc
daa
aaa
inc
lahf
fisttps
gs
jecxz
jne,pn
mov
iret
mov
cmp
insl
mov
shrl
sbb
pop
outsb
cli
imul
iret
pop
mov
divl
ret
push
insl
in
cmp
je
push
ficomps
sub
xor
movsb
iret
mov
xor
xchg
inc
test
add
jmp
scas
sbb
pop
clc
add
inc
push
repz
inc
aam
fcmovnbe
aaa
pop
bound
adcb
out
dec
mov
pop
or
bound
movsl
in
lcall
and
sti
cmp
sub
add
mov
cmp
loope
test
jo
aas
mov
push
adc
and
mov
xor
sbb
and
fst
cs
es
inc
inc
cli
adc
fsubrs
push
and
out
push
and
mov
sub
ret
imul
push
jg
rorl
push
xchg
xchg
sarl
ret
cmpsl
xor
fdivr
pop
and
jmp
push
imul
fiadds
decb
dec
hlt
push
jg
rcrb
gs
imul
frstpm(287
dec
pop
pop
xor
rorb
or
ret
or
cs
sub
insb
sbb
sub
mov
mov
xlat
iret
xchg
in
fldl
mov
das
mov
push
mov
cmpsl
sahf
push
fiadds
jo
lock
aad
adc
push
inc
xchg
ljmp
mov
andl
loope
or
mov
sub
lock
ficompl
sub
cmp
jo
dec
outsl
inc
stos
cmp
cmpsl
pop
jo
push
in
arpl
mov
cmp
push
jmp
xchg
push
pop
push
shrl
xor
test
sbb
mov
outsb
gs
mov
cmp
shl
mov
sub
xchg
popf
call
inc
fs
pop
hlt
lock
into
cmp
cli
dec
int
insl
pop
mov
leave
imul
jns
sub
pusha
movsl
scas
aad
testb
dec
js
adc
inc
sbb
movsl
testl
mov
ja
jnp
jae
pop
aam
mov
add
inc
sbb
std
sbb
jl
adc
popl
xor
frndint
mov
aad
nop
adc
push
sbbl
cmp
sbb
int
sub
jp
fwait
mov
or
bound
ds
jl
mov
int3
jmp
mov
sbb
pop
faddp
sbb
pop
dec
ljmp
ret
lret
sarb
in
in
imul
mov
push
movsl
mov
into
jge
xor
lcall
lods
das
imul
adc
dec
jno
jo
ljmp
in
lea
popf
sbb
xlat
add
mov
subb
ja
fdivrs
data16
les
repnz
fnstenv
jecxz
enter
sub
movswl
std
enter
pop
clc
cmp
mov
outsl
push
stos
cmp
adc
fwait
jns
fs
pop
loop
pop
xchg
sbb
push
add
sub
mov
dec
push
xchg
fisubs
mov
loop
in
idivb
scas
imul
inc
cmp
mov
cmp
xchg
je
or
sbb
cmp
mov
aaa
mov
stc
lahf
push
push
adc
xchg
xchg
mov
mov
orb
dec
jmp
dec
pop
iret
outsl
jmp
xor
sbb
xor
insb
inc
cli
lods
pop
lds
mov
jg
rcll
jmp
push
adc
int3
add
lahf
loope
push
hlt
push
and
dec
test
dec
out
mov
fs
std
inc
iret
cmp
pusha
mov
daa
add
or
imul
mov
push
push
fucompp
push
jecxz
in
in
jecxz
adc
jae
adc
lcall
addr16
push
mov
ror
repz
popa
ret
xor
sub
std
leave
les
scas
xchg
sub
lahf
push
fwait
addr16
fs
int3
inc
cwtl
sub
sti
ret
fistps
cmc
mov
inc
shrb
jo
jne
sti
pop
cmc
and
outsl
add
clc
pushf
push
sub
jo
es
or
sub
scas
dec
xchg
es
push
xchg
xchg
leave
scas
mov
mov
inc
in
dec
pushf
icebp
in
dec
push
std
pop
repnz
inc
mov
in
inc
pop
xor
fistpll
fistpll
sbb
sbb
pop
cmp
sbb
jnp
shl
icebp
popf
fs
jnp
gs
insb
shrb
adc
bound
mov
push
sub
sub
data16
lea
cmovb
sbb
xlat
cltd
xor
std
notl
inc
mov
cltd
cmp
fidivrs
xor
inc
inc
or
idivl
inc
xor
push
add
adc
iret
push
test
sahf
jnp
mov
mov
fsubl
jecxz
call
sub
dec
repnz
cltd
lahf
jmp
mov
js
call
push
jns
insb
lcall
xchg
nop
xchg
jbe
es
xchg
int3
xor
xchg
sub
sub
lods
fs
negb
out
jae
orb
enter
aam
fcmovbe
mov
outsl
jo
jl
dec
mov
loop
cmovns
int
pop
je
xchg
aam
cmp
jl
into
mov
mov
arpl
mov
sbb
sbb
push
fsubr
insb
pop
movzbl
ret
lahf
out
imul
xchg
les
imul
push
rclb
lret
add
add
dec
arpl
int3
cwtl
aas
xor
mov
pop
lret
sub
lods
outsl
mov
lcall
and
xchg
sti
or
push
inc
scas
scas
insl
icebp
push
pop
lods
inc
mov
sti
push
mov
mov
lods
idivl
push
mov
mov
idivb
out
cmpsl
cmp
mov
adc
inc
iret
call
hlt
mov
mov
daa
movsb
sti
lods
mov
frstor
or
fistl
xor
mov
out
cmp
sbb
and
addb
push
leave
dec
lahf
jb
iret
adc
fsubs
int3
enter
jns
lea
sbb
js
cli
in
sbbl
adc
mov
inc
stos
ja
hlt
dec
loopne
pop
xchg
daa
fmul
dec
mov
shlb
xor
push
mov
imul
dec
push
pop
fldcw
xor
pop
ja
pop
andb
daa
pop
add
fs
rclb
dec
and
cld
adc
mov
in
lret
and
pop
mov
xor
sub
cmc
xor
jecxz
dec
mov
pop
fsub
jae
xlat
add
loopne
popa
push
fadds
jp
xor
imul
jb
pop
flds
lea
sarl
insl
add
push
icebp
cmc
add
jge
outsb
fidivrl
jl
sub
sbb
sub
cs
add
daa
push
lock
mov
mov
jns
and
sbb
and
movsl
lcall
jne
repz
cs
fdivrl
mov
fnsave
cmp
and
sbb
es
leave
dec
xor
imul
jb
stc
enter
in
sbb
pop
sbb
push
mov
push
in
xchg
inc
movsl
mov
ss
and
cmpb
pop
in
mov
push
sbb
adc
xlat
add
jne
mov
ret
cmp
xchg
jge
scas
mov
fiadds
fwait
xchg
jmp
and
and
ljmp
sub
and
ja
addr16
daa
add
lret
inc
cmp
mov
push
pop
jmp
mov
push
push
mov
cmp
mov
sbb
cmp
mov
and
icebp
xchg
sub
xor
test
mov
mov
aam
pop
lods
shl
popf
loope
sbb
fdivs
add
cs
popf
cmp
pop
ret
sbb
popa
shlb
xchg
bound
jb
icebp
dec
cmpsl
cli
pop
hlt
xchg
pop
repz
cmp
mov
sub
pop
test
xchg
mov
test
sub
cld
insl
adc
loop
sub
jb
dec
mov
fs
mov
loopne
xlat
sub
movb
xlat
push
xchg
adc
out
pop
insl
xchg
stc
cmp
movsb
fcomp
inc
dec
in
shll
pushf
dec
xor
pop
inc
mov
bound
or
or
adc
ds
daa
mov
adc
ds
lcall
ret
lret
dec
inc
leave
hlt
leave
in
mov
pop
dec
xor
lret
movhps
das
enter
addr16
rcll
test
clc
clc
push
out
shlb
sbb
jl
je
daa
pop
inc
lods
or
add
test
mov
mov
or
stos
jne
mov
xor
into
xchg
mov
jmp
dec
pop
lahf
mov
xor
shrb
test
dec
insl
aad
jle
mov
pop
test
into
dec
fnsave
cmp
pop
sbb
rclb
imul
roll
jl
imul
loopne
or
out
lea
fistl
inc
pop
stc
adc
inc
sbb
repz
sub
gs
das
add
mov
jp
inc
stc
xor
ret
adc
push
cs
divl
push
mov
sahf
lret
jg
cld
push
repnz
push
add
call
testl
push
in
xchg
lds
movsb
mov
data16
lea
push
mov
adc
adc
xchg
jo
xor
sub
rorl
es
aam
xorb
out
fxtract
mov
fnstcw
fsub
xor
xchg
jg
jno
lods
sbbb
push
imul
scas
aad
push
cmpps
mov
xchg
push
arpl
jno
jl
mov
mov
shrl
xchg
es
stos
ds
lods
cmpsb
jne
lods
into
pop
mov
pushf
xlat
ja
outsl
mov
loope
jl
aaa
dec
mov
scas
pop
leave
pushf
push
jbe
sti
gs
jns
pop
mov
out
rcrb
mov
pop
mov
mov
inc
into
jb
or
xchg
jo
hlt
push
xchg
mov
xor
sub
dec
aas
xchg
and
inc
popf
cmp
adc
andl
lds
push
xor
sbb
pop
or
sahf
mov
add
jge
call
push
ljmp
add
test
and
inc
jp
pop
and
mov
mov
jbe
mov
hlt
mov
jnp
fstpl
lea
inc
outsb
repnz
test
outsb
cmpl
shrl
mov
cltd
xchg
jae
jo
aaa
test
adc
pop
or
test
sub
xlat
jns
dec
in
loope
lods
mov
push
inc
push
cwtl
cmp
loop
in
cmp
cmc
pop
xchg
sbbl
cmpsb
mov
mov
popa
and
clc
or
ljmp
pop
test
decb
sbb
imul
lret
loop
andps
js
inc
jb
rorl
inc
shrl
mov
call
cmp
lret
ljmp
lret
mov
xchg
out
mov
test
add
jge
mov
mov
push
test
cmp
dec
fistl
ret
lds
xchg
jl
or
adc
jbe
inc
pop
out
pop
idivb
les
dec
push
pop
ljmp
xor
test
xchg
or
stos
mov
adc
adc
mov
cmpsl
sub
popa
rorl
test
cmp
aaa
cld
ss
aam
adc
test
xchg
mov
adc
and
xor
or
mov
adc
ds
mov
repz
je
loopne
xor
out
sbb
adc
pop
inc
sub
in
das
lcall
lock
inc
leave
aas
and
in
add
dec
int3
inc
sti
pavgb
cs
mov
test
sbb
hlt
call
dec
hlt
add
mov
adc
aas
out
in
or
push
inc
addb
in
or
aad
sub
les
rcrl
xchg
or
inc
scas
into
jp
lds
mov
and
scas
sbb
ret
sbb
mov
lahf
mov
jnp
fcmove
sarl
scas
lea
pusha
add
js
xor
add
mov
jmp
xor
loope
mov
movsl
ret
sub
mov
pop
fwait
loope
xchg
mov
into
push
or
movsb
repz
push
ss
out
nop
adc
in
lock
mov
cwtl
out
in
xchg
inc
pop
push
mov
and
dec
ljmp
jg
sub
and
addb
pusha
lcall
clc
xor
jge
cld
jg
or
mov
imul
mov
pop
or
mov
xor
xor
pop
mov
push
fistl
mov
push
mov
sbb
scas
fisubrs
jne
push
xchg
push
xchg
jecxz
xchg
fwait
mov
jne
in
cmp
pop
fiaddl
fisubs
call
leave
ja
sbb
cmpsb
scas
mov
sbb
xchg
ja
int3
jl
dec
jb
lret
push
insl
sbb
icebp
das
jnp
movsl
pushf
ds
xchg
mov
sahf
sbb
pop
jb
pushf
add
outsb
in
add
adc
mov
dec
movsl
jmp
jmp
mov
and
dec
xchg
jae
push
fdivl
mov
push
pop
fildl
lcall
and
sbbl
mov
ja
or
rcrl
and
jbe
mov
mov
push
lret
addl
shll
inc
bound
lock
insl
and
subb
jg
lcall
imul
insb
pusha
adc
sub
jno
mov
imul
cmpb
push
adc
lcall
imul
cmp
mov
cltd
roll
adc
cmp
sub
std
ljmp
xchg
ja
mov
and
xor
in
xor
movsl
rclb
das
xchg
sub
sub
or
shrl
mov
or
sbb
mov
lods
push
xor
jnp
lock
subb
lahf
les
sahf
pop
pop
push
and
jmp
shrb
pop
movsb
imul
mov
push
mov
out
sub
loop
cmp
imul
jb
test
jmp
jb
pop
add
movsb
loope
inc
cmpsl
out
sbb
sti
xorl
sbb
sub
sbb
sbb
ja
cmc
je
shll
lret
ss
dec
mov
movsb
push
fistpl
test
cmp
xchg
push
sbb
mov
aas
cld
inc
iret
repnz
xchg
jl
cli
and
sub
cmp
lcall
out
or
rolb
fisubs
xor
pop
leave
pushf
pop
hlt
inc
movsl
loopne
pop
hlt
jbe
mov
cmp
inc
lods
xchg
cmpsb
and
shr
pop
ds
lods
lods
into
pop
imul
scas
cmc
add
ja
addr16
add
out
xchg
cvtdq2ps
ljmp
loop
mov
push
xor
add
lods
pop
sub
mov
push
and
mov
outsb
xchg
lods
adc
fucomip
rcrb
sahf
ja
test
adc
mov
test
xchg
xlat
cmp
std
shr
xor
ljmp
jb
mov
inc
pop
pop
pop
icebp
daa
xor
adc
adc
push
xor
sub
loop
push
pop
dec
addr16
ljmp
aam
mov
call
adc
dec
stos
out
dec
nop
jo
and
sub
mov
jecxz
xor
jno
mov
daa
or
jle
or
addb
jl
xor
pop
jge
sub
adc
ljmp
es
jno
sub
inc
out
enter
dec
data16
cli
into
in
mov
lret
push
fstpl
sub
popa
jg
cmpsb
and
cmp
add
addl
xor
or
cmpsb
push
movsb
push
pop
add
xchg
out
dec
and
mov
adc
cmc
leave
xchg
jecxz
cmp
inc
xor
lea
xchg
sbb
mov
mov
cmc
les
mov
gs
jns
hlt
jne
cmc
adc
test
sub
cmpsl
ss
shlb
shrl
xchg
cmpsl
jne
mov
sub
dec
or
aam
in
sar
scas
les
cmp
xchg
or
and
xor
xor
add
out
pusha
mov
popa
lods
xchg
fwait
jecxz
lods
rcll
test
mov
outsb
iret
ljmp
lock
pop
dec
adc
repz
mov
fdivrl
lock
adc
outsl
dec
outsl
addr16
pop
out
ja
movsb
cmp
pusha
aam
sub
les
mov
stos
fs
dec
stos
stos
stos
leave
testb
ljmp
ss
cmp
push
test
or
lret
pop
cmp
js
fisubs
jo
jecxz
fsubr
sub
add
out
cmp
sub
arpl
xchg
insl
out
aaa
sub
mov
hlt
dec
cmp
mov
xor
cwtl
jo
adc
push
cmpsb
inc
repz
movsb
push
sahf
jl
push
arpl
push
cs
inc
xor
lahf
adc
inc
cwtl
aam
and
adc
xor
pop
inc
push
xor
inc
outsb
daa
mov
iret
jo
mov
mov
sub
mov
in
out
iret
outsb
inc
jno
jno
add
stos
push
pop
js
dec
push
adc
mov
or
fdivrl
jae
xchg
rsqrtps
push
dec
fisubl
mov
xchg
add
mov
cli
je
shrl
mov
sub
lret
ljmp
jecxz
imull
xor
cltd
sahf
mov
xor
push
inc
cmpsb
fisubs
push
pop
out
adcl
scas
pop
pop
enter
dec
sub
mov
pop
mov
mov
lds
sbb
cmp
and
or
jl
sti
sbb
and
enter
addb
shl
out
nop
adc
jae
xor
daa
and
cwtl
test
frstor
scas
mov
popa
sbb
sahf
push
jmp
sbb
pop
addr16
out
xor
sub
pop
jb
push
mov
and
pop
mov
cmp
or
jmp
lock
lods
mov
or
xchg
lcall
repz
mov
mov
jecxz
stc
add
mov
mov
aas
adc
mov
jmp
test
lock
je
enter
int
repnz
push
mov
cs
mov
mov
jg
adc
sbb
nop
int
in
jns
dec
stos
cltd
mov
and
add
and
ljmp
dec
lds
nop
roll
mov
and
cmp
dec
addr16
dec
or
movsb
in
movb
in
cmp
pop
push
pop
mov
adc
stos
test
outsb
xchg
cmc
nop
fiaddl
rolb
and
js
lahf
hlt
fucomi
jbe
push
test
jp
ret
lock
int
out
aaa
out
sub
test
unpckhps
xor
movsl
das
fisubl
xor
ret
mov
xchg
and
repnz
mov
fnstcw
ret
add
and
push
clc
mov
xchg
mov
cs
scas
int
mov
xor
sub
std
cmp
imul
in
adc
adc
push
mov
pop
cmp
pop
pop
cmc
mov
adc
out
jo
das
loope
hlt
add
data16
pop
adc
push
sub
jae
rol
mov
dec
movsl
add
aaa
push
subb
dec
addr16
xor
xchg
decl
cmp
pop
sbb
inc
mov
cmpsl
pop
and
mul
rclb
push
push
pop
mov
mov
jmp
xchg
cmpsl
or
sub
js
pop
sub
sub
inc
imul
bnd
jl
sub
mov
xor
arpl
add
cltd
inc
in
lret
shlb
adc
idivl
cmc
call
pop
repnz
push
sbb
adc
cmp
push
mov
iret
xor
call
jg
stc
icebp
mov
jbe
and
sub
and
stos
mov
mov
dec
mov
xor
test
cmpsb
cmp
call
mov
add
add
sub
add
jnp
sti
lea
jae
cmp
push
cld
fidivs
adc
ss
push
iret
xchg
xchg
call
rol
inc
cmpsl
sti
fidivl
add
in
and
addr16
ds
pusha
or
sbb
enter
cmpsb
lock
je
insb
mov
ds
adc
push
push
or
lds
scas
xchg
sar
xor
stc
mov
mov
dec
cmp
jbe
cltd
enter
in
repz
lea
push
add
jnp
sbb
rcr
cmp
sub
lret
adc
inc
imul
cmp
hlt
jmp
ljmp
rorb
pusha
daa
call
ljmp
jmp
ret
inc
and
jmp
inc
lret
xor
add
insb
xchg
cmc
pop
xchg
lds
cld
popa
std
sub
and
in
fdivrl
add
and
inc
xor
push
repnz
push
mov
mov
pushf
cli
inc
int3
mov
notb
push
adc
cld
mov
inc
nop
neg
adc
cmp
loop
mov
sbb
jmp
xchg
into
imul
iret
aam
fidivs
sbb
repnz
int3
js
imul
lret
or
fwait
xchg
les
add
dec
in
popf
repz
fldenv
jbe
notl
pop
lods
sbbb
hlt
or
fs
in
push
setle
fcom
sub
arpl
mov
mov
js
test
cmp
sbb
jmp
or
xor
aad
xchg
in
jecxz
add
inc
les
bound
jns
dec
sti
hlt
js
mov
mov
push
pop
inc
xor
adc
and
pop
push
outsl
aas
mov
cmp
jno
loopne
mov
bound
fcmovbe
inc
xchg
popa
pop
mov
cmp
jnp
arpl
add
ficoml
or
lds
lcall
test
or
adc
or
outsl
outsl
mov
inc
js
sub
mov
dec
clc
xchg
adc
xor
xor
stos
ljmp
xchg
inc
and
cmpunordps
pop
daa
aas
sbb
shr
pop
adc
lret
in
push
inc
popf
fidivrs
pop
cmpl
sub
xchg
movsl
push
jl
push
sti
aam
cmp
fcmovnb
and
inc
mov
mov
lahf
sub
rep
stos
xchg
cld
subl
adc
push
push
test
leave
cmpsb
jge
xchg
aaa
ja
pop
out
lcall
imul
ret
test
subb
xchg
addr16
rcr
inc
ljmp
jmp
add
sub
notb
popf
loope
xchg
and
and
ja
sub
lock
xorl
xor
mov
cmp
into
mov
stos
push
pusha
dec
jle
jno
loopne
sbb
pop
fldenv
mov
aaa
xchg
jmp
adc
pop
out
loopne
jo
push
mov
stos
mov
or
pop
sub
lock
xor
sub
repz
jle
mov
daa
test
jecxz
ficomps
inc
mov
pop
push
xlat
cmp
mov
clc
fildl
ljmp
iret
jne
aad
daa
xor
scas
dec
arpl
scas
adc
aaa
ret
add
jmp
arpl
adc
sub
xchg
and
mov
sub
xor
mov
xlat
test
mov
sbb
jmp
fidivrl
cmp
daa
mov
add
jl
pop
push
adc
aaa
sti
adc
mov
jae
das
ficoml
dec
sbb
push
mov
loope
mov
mov
pop
divl
xchg
sub
shll
stos
lods
mov
dec
fs
cmp
cs
mov
out
out
inc
daa
insl
add
dec
adc
cmp
or
in
repnz
mov
enter
jg
mov
stc
mov
cwtl
cmc
sub
jo
mov
xor
fwait
jns
push
dec
jo
aad
xor
aas
popf
iret
dec
sub
imul
sbb
sub
or
or
inc
or
dec
pop
add
inc
sub
or
cmp
gs
addr16
pusha
adc
imulb
push
aam
dec
stos
pop
int3
mov
ret
lcall
jp
push
xor
loope
cmp
jns
fdivrs
add
adc
and
pop
jl
mov
sbb
sub
jp
dec
ss
xchg
aad
xchg
das
cmp
aaa
jne
cmp
cmc
decb
lods
push
cmp
loope
insl
dec
push
sub
mov
iret
popa
ds
dec
movsb
stos
mov
popf
sbb
mov
and
push
mov
data16
clc
cmp
add
or
inc
or
mov
out
mov
sub
pop
stos
jno
icebp
inc
push
and
insb
call
ja
mov
xchg
cmpb
mov
lret
xchg
jmp
jmp
fildl
mov
aad
mov
mov
jmp
imul
push
mull
jne
daa
repz
mov
lret
lock
lret
sub
cltd
dec
outsb
push
cs
add
mov
inc
insb
sbb
pushf
jo
hlt
lock
dec
lea
dec
dec
push
test
push
mov
jne
out
add
or
mov
aas
add
push
xchg
add
jno
andl
mov
movsl
inc
out
test
int3
mov
cld
push
std
andl
jno
test
xchg
ss
mov
mov
cmpsb
xchg
cmp
mov
xor
lods
lret
nop
subl
mov
push
pop
sbb
in
xchg
mov
sub
es
pop
xor
cs
add
lret
enter
sub
xchg
mov
out
inc
add
mov
popf
jnp
mov
call
mov
scas
inc
mov
pop
xchg
in
jle
sbb
sbb
mov
pop
es
mov
ja
cmp
dec
in
stc
xchg
test
in
add
jmp
test
jae
das
dec
inc
shr
es
xchg
ja
ljmp
sbb
jns
mov
nop
dec
mov
sub
push
movntq
cld
push
movsb
cmp
or
sbb
lret
jle
lea
sbb
pop
and
mov
cld
popf
inc
xor
xor
fimuls
sti
xlat
mov
cmp
add
and
arpl
jecxz
fcompl
jl
jne
es
repz
xor
sbb
lcall
xor
push
mov
xchg
jo
lcall
daa
insl
popa
inc
xchg
popa
jno
jnp
push
jo
xor
xchg
pop
push
cs
clc
pop
jae
lds
rcl
add
fwait
and
and
sti
mov
cld
and
or
lods
pop
adc
mov
stc
mov
xchg
enter
sbb
lods
lahf
std
mov
cmp
movsl
enter
leave
and
call
enter
imul
mov
sbb
cmpsb
inc
ja
loopne
lret
inc
jb
xchg
xchg
or
inc
xor
push
mov
addr16
mov
mov
cmpsl
data16
mov
push
and
enter
out
xor
push
cmpsl
enter
mov
xchg
gs
inc
rorb
mov
je
repnz
mov
test
aam
lock
xchg
xor
jno
lret
pop
dec
xor
mov
pop
inc
jp
mov
xchg
mov
loop
sub
add
fildl
stos
xchg
shll
sub
sub
mov
dec
jnp
xchg
pop
fldt
push
into
out
cwtl
add
mov
push
or
out
lock
add
nop
movsl
adc
test
das
adc
xchg
xchg
push
adc
push
push
jg
jb
xchg
mov
mov
xchg
push
imul
cmp
sbbb
mov
in
jns
rcrb
sbb
inc
rorl
jo
mov
add
iret
scas
adc
cmp
mov
dec
daa
test
int
imul
inc
cmp
and
xchg
cltd
arpl
out
add
es
mov
aaa
pop
pop
xor
push
cmp
je
fdivl
dec
rolb
mov
and
and
pop
xchg
sub
push
stc
sub
dec
int
cmp
repz
stc
push
test
dec
gs
call
mov
aam
push
cmp
fistps
jo
and
and
and
xor
int
cmp
pxor
xchg
pop
or
sub
mov
lods
mov
dec
or
jnp
cmp
pop
mov
mov
xchg
fstl
in
pop
mov
shrb
stc
and
and
cmp
jbe
push
arpl
add
push
imul
cmp
push
sub
dec
gs
test
js
xchg
and
imul
or
clc
pusha
aam
jb
push
mov
lock
inc
jb,pn
push
dec
dec
ss
xor
int
mov
push
es
xlat
jo
pusha
mov
cmp
xchg
cmp
orw
mov
lret
mov
adc
fmulp
mov
adc
sub
ss
out
cmp
inc
xchg
shrl
sahf
cmp
inc
scas
lods
cmp
xchg
jp
mov
bound
addr16
in
and
mov
jo
fsubrs
jnp
addr16
bound
popa
pop
push
inc
mov
popf
cmpsb
adc
in
cld
test
in
push
testb
sub
enter
andb
xor
add
and
adc
pop
ret
pop
test
dec
xor
leave
mov
int3
test
xchg
mov
test
cmp
das
jp
pop
sub
sahf
pop
sub
mov
push
repnz
inc
adc
push
lds
xor
push
xor
xchg
or
pop
mov
cmpsl
push
gs
shlb
xchg
clc
or
outsl
popf
loopne
inc
pop
ret
popa
mov
popf
shlb
mov
imul
je
aaa
jmp
orb
pop
sub
pusha
adc
jg
sub
gs
adc
mov
cwtl
outsb
mov
adc
aas
xlat
cmpl
aaa
repz
mov
call
test
cmpsl
mov
subl
fiaddl
adc
rorb
movsb
push
aas
xlat
test
xchg
jge
notl
aaa
jmp
pushf
mov
addr16
test
out
std
scas
jo
leave
pop
addr16
push
rol
pop
sbb
lock
push
mov
out
cld
mov
xor
mov
or
pop
mov
xchg
sbb
subb
in
loop
add
add
in
sub
mov
pop
ds
jmp
stos
fldcw
xchg
mov
mov
mov
aad
or
sbb
test
pop
test
out
mov
int
add
test
loope
sub
fstpt
les
xchg
dec
or
sbb
pushl
ja
adc
loope
aaa
js
in
movsb
push
divl
fucom
fistpl
or
in
int3
push
rcll
aad
push
js
push
cs
stc
lods
sub
sbb
ss
add
add
loopne
fimull
ret
adcl
jge
cli
xchg
mov
test
dec
fstpt
scas
subb
loopne
mov
clc
imul
movsl
jge
shll
jge
sbb
repz
push
xor
popf
das
shl
push
andb
jo
test
mov
mov
insb
jbe
lcall
push
mov
shll
push
xor
aam
add
gs
inc
scas
ss
icebp
inc
aas
test
mov
mov
lods
outsl
cmpsl
jno
fadd
das
mov
jle
iret
bnd
fmul
adc
and
jmp
mov
std
lcall
sbb
push
mov
or
insb
orl
loop
fwait
scas
or
fnstsw
add
popa
xchg
and
in
rolb
cmp
jbe
cmc
loop
int
push
sahf
fcmovnbe
jno
mov
mov
aam
mov
dec
push
jnp
mov
movsb
xchg
icebp
and
sbb
sbb
jl
dec
cli
add
lret
or
aas
inc
xchg
mov
mov
cmp
mov
retw
aam
scas
inc
icebp
nop
or
xor
inc
xchg
fwait
mov
add
cwtl
sbb
jne
sub
mov
jae
adc
mov
mov
xlat
push
push
scas
pop
push
pop
pop
movsl
dec
or
sti
dec
sub
mov
mov
mov
inc
add
sub
stc
xchg
loope
scas
es
orb
adc
lods
arpl
ss
ljmp
stc
xchg
dec
add
push
jg
cmc
pusha
cmp
js
xor
xor
jecxz
push
hlt
or
cmp
popf
call
das
cmp
loopne
movsl
xchg
inc
push
lea
loope
mov
call
xor
fucomip
cmpsl
add
inc
hlt
push
sbb
or
cmpb
xor
nop
dec
je
je
out
je
inc
sbb
scas
fwait
jb
rclb
mov
enter
scas
or
mov
notl
fdivrp
push
jae
ljmp
cmpsl
cld
vmwrite
fstpl
aaa
out
into
mov
xor
cmp
out
pop
pop
push
lret
bound
loope
push
jg
jbe
lret
push
stc
hlt
sbb
clc
and
jmp
cli
jnp,pn
mov
mov
test
pushf
popa
push
xchg
cltd
outsb
adc
mov
push
int
repnz
roll
xor
ss
dec
pop
jle
cmp
clc
mov
movsb
mov
jle
sub
aam
mov
testb
push
jne
jno
lahf
add
sbb
mov
push
repz
lahf
addl
sarl
ja
lods
lea
push
shlb
push
into
or
fistpll
push
and
push
jae
lea
sub
mov
popa
daa
jae
pop
aam
sbb
pop
stos
adc
bound
mov
push
pushf
push
or
movsb
rolb
insl
je
loop
movsl
fdivs
rcr
jl
cmp
xor
insl
add
repz
movsb
mov
aam
insl
les
jge
nop
sub
je
xchg
pop
fcoms
mov
sahf
ljmp
loop
scas
imull
loopne
mov
adc
popa
pop
gs
dec
ja
mov
add
jnp
mov
lock
inc
add
dec
pusha
mov
and
mov
idivl
ret
push
dec
ror
sub
inc
stos
xchg
test
insl
jno
out
outsb
mov
jae
adc
sub
and
aam
xchg
mov
mov
mov
mov
cmp
rorl
rclb
xchg
sub
movsb
dec
and
lret
or
test
adcl
test
push
cmc
imul
gs
int3
imul
fdivrs
scas
cmp
mov
ja
in
and
les
dec
mov
mov
add
frstor
adc
stos
orl
xchg
loopne
fcomp
int3
hlt
inc
and
inc
pop
push
dec
das
mov
mov
sub
test
out
xor
das
or
repz
mov
push
test
lcall
sub
and
mov
mov
cli
les
jne
ret
inc
jo
sbb
ljmp
cmpb
mov
xchg
jnp
mov
mov
fxch
mov
mov
push
xor
imul
add
arpl
je
cltd
stos
cmpsl
mov
movsb
or
jbe
dec
mov
lods
inc
hlt
adc
dec
jb
sbb
and
jno
jge
mov
lock
push
mov
jp
nop
mov
int3
xor
push
sbb
sti
fadds
sub
jbe
xor
sbb
leave
or
lods
pop
and
sbb
mov
push
dec
sbb
pop
push
cmp
addr16
je
push
in
test
mov
leave
lods
ja
add
mov
cld
fbstp
sub
adcl
stos
sbb
dec
clc
cmp
loop
jns
mov
jbe
pop
test
gs
call
out
decb
xor
cmp
mov
push
mov
xor
sti
ljmp
xor
adc
xor
sub
jge
ss
xchg
insb
inc
push
shlb
insl
in
ljmp
dec
lret
lds
mov
jg
lcall
jbe
mov
adc
xchg
mov
mov
sbb
insb
adc
mov
imul
movsl
xor
shlb
test
push
rcll
ds
das
add
sub
sub
cmpl
repnz
dec
pop
sub
mov
lahf
xchg
rorl
cmpsl
dec
push
add
bound
xlat
pop
mov
addb
pop
mov
lcall
push
pop
pop
xor
mov
mov
and
xor
shlb
mov
movsl
insb
mov
mov
sub
mov
fwait
adc
lret
test
or
insb
insb
pop
ja
ljmp
lcall
test
xchg
stos
cmp
add
test
fcoml
inc
xchg
jge
loop
daa
faddl
ljmp
jp
stc
outsb
xchg
data16
lods
out
popf
aaa
push
or
inc
fwait
or
and
pop
or
cmp
add
ret
xor
xor
push
pushf
xchg
dec
jmp
or
in
fisttpll
popa
and
sub
iret
mov
pop
rorb
jns
cmpsb
pushf
xchg
sarb
test
push
icebp
out
sbb
lods
xor
dec
mov
xchg
and
mov
push
jp
pxor
sub
push
ja
iret
outsl
jae
fimuls
sub
jp
cld
sbb
or
push
sub
inc
and
push
lods
mov
or
and
cs
push
xchg
clc
dec
or
clc
or
sbb
in
jns
out
mov
xor
test
dec
push
mov
mov
xor
orl
mov
clc
out
lret
sbb
xchg
outsl
dec
mov
or
pop
jmp
pop
add
imull
fwait
mov
imul
int3
es
adcb
arpl
or
andl
push
out
sub
jp
rorl
xchg
and
adc
mov
test
test
std
mov
pop
je
dec
ljmp
add
daa
es
nop
dec
xchg
in
lods
movsb
cltd
pop
pop
ds
push
std
insb
loopne
stos
test
inc
idiv
jno
push
inc
shll
test
dec
loope
cmp
inc
test
loope
shlb
repnz
daa
pop
mov
mov
outsb
pop
fistpll
pop
cmp
mov
rcrl
ljmp
hlt
arpl
test
xchg
wbinvd
rcll
jle
mov
jno
sub
pop
mov
sti
xor
aam
add
dec
cmpsb
xchg
xlat
jae
or
rorb
push
fldenv
mov
cmc
cli
jno
movzwl
pop
scas
sbb
pop
fwait
mov
add
jb
mov
popa
inc
sbb
push
pusha
test
cmp
sahf
xchg
fidivrl
add
dec
xchg
add
lret
add
cli
int3
mov
dec
mov
jne
push
mov
shll
clc
mov
repz
cmp
int
or
dec
in
ja
jl
cmp
psubb
in
push
aaa
incl
push
xlat
xor
or
insb
jb
mov
sbb
inc
add
pop
mov
push
add
fsubl
sub
cmpl
cmp
cmp
scas
fs
xchg
ss
insl
inc
es
mov
xor
sahf
rclb
adc
adc
cmp
add
movsl
mov
inc
jp
dec
adc
loopne
xchg
notl
in
cmp
stos
scas
pop
shll
imul
out
inc
mov
loope
test
push
sub
je
arpl
ljmp
mov
mov
adc
mov
bnd
push
popa
out
jecxz
int3
and
vmread
push
jp
xor
in
cltd
jge
in
push
or
in
inc
aas
mov
or
aas
adc
js
sti
push
adc
cli
and
test
mov
xchg
push
insb
addr16
outsb
mov
test
and
sub
outsl
jge
fmul
and
mov
lret
in
mov
add
pop
test
push
lret
in
add
enter
xchg
xchg
cmc
in
xchg
movsl
hlt
mov
jno
xchg
and
and
push
jae
jge
mov
gs
cwtl
mov
pop
cmpb
repnz
inc
int
mov
xchg
pop
dec
add
ret
dec
mov
sahf
adc
mov
mov
rorb
imul
sub
int3
in
cmp
test
in
imul
and
iret
mov
leave
es
stos
xchg
shrl
push
mov
push
push
enter
mov
sbb
in
out
mov
push
sti
xor
pop
pop
sub
stc
xchg
lock
adc
test
stc
ret
push
pusha
insl
ljmp
int
test
lock
subb
aad
jmp
jp
out
add
imul
xor
mov
sbbl
mov
dec
cltd
mov
loop
sub
int3
movsl
addr16
jne
scas
pusha
mov
in
mov
les
pop
std
dec
add
mov
stos
sub
xor
sar
pop
sahf
sbb
mov
xchg
mov
or
scas
sub
mov
fwait
cmp
out
out
lock
outsl
mov
outsl
xlat
dec
pop
lods
nop
cwtl
mov
fs
sbb
sbb
dec
xchg
cltd
stos
shrb
dec
call
cmp
xor
sbb
mov
pop
push
outsl
xor
push
add
xchg
fistps
dec
or
fistl
fdivs
mov
insl
in
or
in
fmuls
mov
cmpsb
push
mov
or
push
dec
pop
in
dec
jp
jl
mov
shll
pop
xor
inc
in
xor
mov
adc
mov
iret
imul
shlb
jmp
pop
fnstcw
pop
pop
addr16
daa
cmpsl
out
in
mov
test
jge
sbb
stc
push
popf
adc
inc
orl
add
cmpsb
push
test
add
sbb
js
cltd
and
ljmp
sub
pop
gs
adcb
mov
dec
ret
jl
sub
adcl
mov
push
pushf
jbe
mov
push
loop
mov
or
sbb
sbb
cmp
jbe
loopne
adc
mov
stc
leave
mov
nop
pop
mov
setne
setno
push
cmpb
mov
sub
sar
jecxz
sbb
mov
outsb
jg
or
loope
jge
es
jp
es
ljmp
sub
push
in
orl
sti
out
sbb
out
loope
push
push
shlb
lds
sub
test
scas
les
mov
in
enter
aad
daa
mov
ss
inc
icebp
pop
pop
enter
xchg
pop
lret
sbb
sbb
popa
jnp
fwait
ret
iret
push
xchg
insb
je
mov
jecxz
push
add
add
pop
enter
and
jp
sti
add
or
xchg
mov
in
or
inc
dec
jl
shrl
test
push
push
je
jnp
jecxz
xchg
mov
push
cmp
stos
adc
out
cmp
mov
cmp
cmp
int
jae
jns
cmp
int
xchg
jecxz
or
sbb
add
enter
daa
push
sbb
add
js
std
lret
loope
push
sub
pop
stos
pop
out
and
in
dec
mov
lret
xchg
jae
mov
js
adc
mov
add
sbb
loope
jecxz
xchg
mov
push
inc
sub
xor
mov
sbb
int
notl
lcall
pop
dec
mov
mov
add
daa
or
and
cltd
das
pop
sar
sub
das
mov
lods
imul
add
add
jecxz
out
xchg
mov
push
rcl
sbb
add
fs
xor
cmp
out
mov
sti
cld
divl
sub
lods
dec
xchg
shl
nop
or
mov
mov
lahf
xor
sbb
mov
or
add
cmp
fmulp
cmp
pop
test
div
sbb
push
jmp
in
jmp
jb
ret
dec
scas
cmpsb
or
cmp
dec
xchg
mov
pop
mov
adc
daa
shrb
jge
test
dec
cmp
stos
js
push
mov
pusha
loopne
fdivl
adc
jno
adc
js
stc
sbb
lods
test
mov
loope
lcall
mov
push
xchg
push
sbb
lds
psllw
push
pop
pop
mov
xor
sbb
xchg
jns
inc
lar
das
ret
fmull
mov
inc
sub
in
cmp
xor
fstl
and
rorl
popa
ja
sbb
mov
idivb
in
mov
cld
jbe
dec
xchg
mov
dec
js
inc
dec
jp
in
push
in
pusha
outsb
dec
cmp
xchg
popa
push
loope
xchg
add
pop
fisubs
repz
fsubrs
sub
mov
stc
fs
mov
lods
shlb
pavgw
or
fs
push
or
add
ret
mov
lods
pusha
sahf
out
test
adc
dec
clc
cmpsl
movsl
jle
ret
or
mov
scas
jne
aam
jge
mov
outsl
incb
pop
loopne
loopne
cmp
mov
imul
dec
push
ljmp
mov
push
mov
xchg
nop
int
cwtl
mov
xor
ss
push
pop
lret
inc
shlb
dec
mov
jo
imulb
cmp
xor
ds
mov
inc
or
inc
sar
and
sub
test
xlat
lods
push
xor
imul
in
push
or
pop
std
add
mov
or
mov
or
and
cmp
fmul
jae
push
dec
ret
pusha
xor
push
pop
pop
insl
lds
push
pop
mov
push
jge
pop
pop
add
sti
lahf
xchg
cmp
push
andb
push
mov
xchg
lods
pushf
popa
stos
aad
xchg
and
nop
je
inc
int
pop
ljmp
sbb
les
xchg
jne
dec
xchg
rorb
clc
aad
mov
movsl
in
pop
or
sub
pop
jnp
rcrl
fisttps
push
jno
xlat
xlat
les
leave
lret
pop
icebp
inc
stos
lea
rcl
movsb
or
addr16
cmp
popa
pushf
aad
ds
xchg
dec
pop
in
cmpb
push
cwtl
xchg
xchg
pusha
xchg
lods
lahf
hlt
or
movsl
lods
xor
mov
pop
in
in
jne
test
test
jne
shl
scas
lods
xchg
cs
dec
cltd
lods
mov
fcomps
in
dec
icebp
xchg
add
lds
shrl
fldt
test
or
xchg
sbb
gs
push
cmpsb
jecxz
cmp
pop
sbb
inc
jg
jle
cmpsl
stos
push
or
scas
pop
pop
loopne
pop
into
cwtl
jbe
and
fxch
std
fwait
mov
divb
in
test
mov
or
push
popf
push
cmp
aaa
fcom
push
lret
jle
xchg
jnp
mov
ret
subl
cwtl
dec
or
lods
pop
or
testl
fs
mov
pusha
popf
add
fcoms
jl
repz
mov
and
mov
sbb
or
jne
cmpsb
in
in
aam
cmp
mov
outsb
xchg
sbb
loop
or
cmp
bound
cmp
sahf
jns
addl
sbb
mov
pop
mov
test
adc
or
add
add
pushf
inc
jmp
add
xor
or
mov
mov
dec
or
dec
pop
mov
adc
jl
rcll
stc
mov
mov
mov
in
jl
inc
dec
cmpsb
stos
les
lods
imul
fdivrs
jmp
jae
lock
data16
push
cltd
inc
add
addr16
stos
xchg
std
repz
into
sti
sbb
jmp
mov
mov
xchg
fnsave
dec
nop
es
or
iret
je
jmp
xchg
pop
cmpl
lods
dec
outsl
pop
mov
sbb
cld
into
mov
jecxz
push
mov
in
stc
ret
sbb
and
rclb
sbbb
jl
sti
fwait
jne
pop
stos
cli
cld
xor
ds
jl
cld
inc
pop
jmp
cmc
test
cmp
stc
ficoml
mov
jns
mov
in
pop
or
cmp
jb
push
test
jo
js
mov
ret
or
aas
dec
sub
mov
xchg
and
push
push
lea
lods
adc
inc
xor
shr
clc
fnstsw
pop
cli
cmp
shrb
jmp
pop
sbb
cmp
xchg
mov
fdivrp
data16
ds
fistl
je
and
cld
out
jbe
cmp
sahf
pop
mov
sbb
filds
sbb
jae
test
inc
lock
movsb
or
push
cmp
sti
push
mov
int3
sub
int3
xchg
and
pusha
sbb
pop
popf
or
push
mov
sbb
sbb
push
insb
ret
movsb
mov
sbb
push
xor
dec
mov
cmp
mov
aam
ds
roll
mov
sub
dec
jmp
sub
mov
lret
cmp
jp
xor
mov
dec
fs
xor
mov
ret
lds
and
das
mov
test
add
popf
and
leave
dec
push
pop
dec
in
pop
int3
pop
ds
fisubl
loope
xor
inc
pop
dec
das
hlt
lds
cmp
mov
lods
push
or
inc
shll
sbb
ds
das
int3
aas
data16
orl
fwait
mov
movaps
dec
sub
push
jmp
xlat
addr16
nop
sub
int
nop
pop
jnp
ljmp
xchg
stos
jle
pop
inc
cmp
scas
rclb
ss
call
inc
gs
cwtl
cmpb
sub
mov
lahf
outsb
adc
cwtl
jg
and
add
mov
lock
push
lds
lods
repnz
mov
cs
scas
js
repnz
imul
aas
ret
shrb
xchg
test
adc
imul
pop
adc
push
jmp
aam
stc
daa
test
dec
jg
and
in
aam
pushf
loop
rcll
stc
cmpl
shll
mov
mov
sub
call
rorl
js
idivl
add
clc
loope
jl
aas
ficoms
popa
outsb
lds
lods
add
test
jp
push
xor
movsb
fcmovne
xorb
mov
dec
mov
lds
lea
mov
pop
inc
xor
in
call
ljmp
xor
aam
mulb
andb
testb
mov
add
jle
xchg
gs
cmp
sub
mov
sbb
jmp
dec
sub
jg
cmp
je
xchg
sub
iret
adc
daa
xor
into
lcall
xorl
lods
fimull
rcl
xchg
adc
lea
pop
inc
sub
inc
mov
mov
popa
or
dec
movsb
mov
adc
sub
rcll
std
insl
ljmp
not
xor
pop
fcomps
cli
rol
int3
mov
jae
aam
sbb
push
int3
ret
adc
sub
scas
dec
or
repz
fcompl
push
cmp
outsl
test
outsl
add
aaa
subb
jb
insb
jns
xor
xlat
hlt
arpl
aam
cltd
shlb
ret
fwait
in
jmp
and
inc
adc
repz
daa
call
and
movsl
or
test
mov
enter
push
stos
xlat
sub
lret
sub
add
fwait
stos
sub
rcll
pop
outsl
sbb
xor
hlt
inc
out
inc
imul
xor
js
lds
pop
in
push
test
stos
mov
cld
jnp
xor
cmp
mov
lods
push
sbb
inc
jge
out
inc
test
ret
jno
sub
sti
roll
sbb
inc
test
shlb
lock
jecxz
loope
cld
add
fstl
xchg
js
jo
pop
sbb
imul
movsl
pop
popa
mov
jle
stc
loop
dec
jno
js
xlat
push
gs
jmp
mov
arpl
sbb
sti
inc
shlb
out
jae
in
repnz
test
mov
stos
ljmp
cmp
push
movsb
mov
loop
or
pop
dec
push
and
fwait
jl
and
mov
mov
add
les
enter
inc
sbb
jno
xor
mov
int
in
outsb
ss
pop
frstor
mov
dec
xlat
cwtl
xor
inc
mov
cltd
les
repz
sbb
add
jg
mov
mov
int
jecxz
pop
mov
mov
repnz
stos
das
les
sbb
mov
rcl
in
sub
iret
je
stos
mov
add
in
inc
mov
xchg
cmp
mov
cmp
or
decb
cmp
popf
imul
jne
out
xchg
jp
and
in
in
stc
data16
xchg
or
add
and
cmpl
jl
mov
inc
adc
and
leave
call
fwait
int3
lods
pop
pop
shll
push
mov
fs
lahf
cmc
xchg
test
pop
xchg
add
stos
test
ret
sbb
mov
repnz
add
mov
sbb
xor
fwait
push
dec
push
mov
imul
adc
push
and
in
sahf
or
mov
sti
loopne
clc
loope
add
jnp
stos
sarl
out
cmc
inc
sub
inc
mov
add
hlt
cmp
neg
sti
sbb
andl
repnz
jge
psadbw
ljmp
xchg
mov
or
cmpxchg
pop
pushf
push
int
or
test
daa
loopne
push
jle
push
mov
sarl
xor
fnstenv
je
cld
cmp
aam
xor
out
inc
lgs
out
mov
stos
mov
test
cmp
jecxz
test
mov
cld
push
xlat
shlb
in
xchg
lcall
pusha
or
xchg
std
inc
pop
xchg
fs
sbb
add
mov
push
jno
lock
mov
test
inc
pop
test
data16
mov
inc
mov
sub
pusha
push
rcll
xchg
and
aaa
xor
inc
aam
inc
dec
call
add
push
xor
int3
jne
enter
mov
adc
push
jecxz
arpl
mov
push
imul
pop
jecxz
sub
stos
popf
mov
cli
in
out
jb
ret
ret
cmp
fsubrs
jo
add
inc
cmpb
movsl
sbb
jo
cmp
les
cs
inc
out
int3
ret
in
and
inc
insb
stos
xchg
jg
jns
or
xchg
mov
mov
and
cmp
arpl
jge
pop
push
jle
imul
sbb
cmpl
jl
push
hlt
xchg
adc
into
sbb
push
out
test
je
mov
pop
popf
cmpl
mov
jne
lret
jnp
icebp
ds
out
mov
lcall
or
mov
shrl
pop
cmpsb
xor
sbb
mov
int
scas
cmp
fstpl
sbb
or
mov
mov
ret
add
das
test
aas
cld
addb
sti
add
pop
loopne
arpl
fwait
add
sti
push
cmp
sub
sbbl
imul
push
frstpm(287
repz
push
sbb
jae
cmpsl
inc
pushf
cmpsl
or
push
mov
gs
mov
stc
test
cmp
xchg
adc
enter
test
push
mov
cltd
test
aas
ljmp
clc
cli
sub
stos
sub
in
cmp
sub
pop
loope
std
jnp
xor
arpl
xor
push
movsl
rorl
sbb
jmp
lods
int
fs
repnz
pop
lds
movsl
fisubrl
jo
cmp
mov
call
out
dec
rcr
adc
mov
cmp
fs
mov
ljmp
push
mov
or
fnstsw
mov
or
mov
xor
sbb
outsb
das
mov
stos
jge
imul
jmp
lods
aas
test
jge
dec
and
mov
jbe
pop
jbe
push
out
std
jns
cmp
xchg
pop
jns,pn
std
dec
push
sbb
dec
xor
pop
inc
jo
add
add
lods
sub
sarl
lds
cld
fwait
jl
dec
push
xchg
inc
aad
jno
cmp
lods
sub
mov
imul
loopne
cmpsb
pop
scas
jecxz
inc
jmp
imul
subl
das
outsl
cmp
mov
jge
orb
sub
lea
andl
fiaddl
add
movsb
cwtl
or
mov
xor
fldt
insb
add
pop
ja
arpl
addr16
add
andl
and
notb
and
lods
test
stos
lcall
xchg
inc
notl
adc
jae
dec
das
xor
sub
aam
mov
and
out
mov
pusha
mov
leave
sbb
jbe
cmp
pop
insl
das
bound
cld
pop
xor
jnp
sbb
jg
call
repnz
inc
xor
scas
or
dec
test
mov
inc
cmp
int3
pop
dec
fsubrs
fisttpll
add
xchg
jp
es
mov
mov
shl
and
mov
dec
hlt
jb
pusha
pushf
lds
mov
aaa
enter
out
xor
movl
push
cli
mov
push
jns
mov
mov
inc
dec
scas
imul
out
inc
clc
insb
adc
std
or
xchg
stos
cmp
jl
xor
adc
add
mov
rcrl
mov
adc
fiaddl
cmp
sti
sub
mov
xorl
shrb
cmc
movsb
cmpsb
mov
cmc
pop
jge
loop
dec
mov
and
out
sbbl
push
lods
lea
lahf
jge
test
loope
xchg
mov
dec
dec
mov
inc
lcall
adc
and
mov
inc
sarb
adc
fnstenv
pushf
cmc
pop
loope
in
jnp
shll
sahf
mov
dec
sub
xchg
sar
jl
push
pop
or
js
cs
push
mov
lret
sbb
loope
sub
out
loop
sbb
loop
sub
mov
cmp
and
sti
and
sahf
outsb
mov
pop
hlt
pusha
insl
xorb
aaa
or
sbb
pop
lods
lods
mov
test
in
test
pop
mov
mov
js
mov
cltd
inc
cmp
adc
dec
test
cwtl
data16
std
cmp
jns
mov
fisttpl
cwtl
mov
int3
push
pop
jge
js
fidivl
mov
mov
xbegin
mov
aam
cmc
dec
pop
and
dec
pushf
enter
addr16
lret
cmp
aad
push
sub
cmp
stos
pusha
xchg
and
xor
push
lretw
add
dec
lods
int3
mov
pop
insb
dec
orl
bound
cmp
inc
nop
mov
std
lods
sub
call
xlat
mov
lods
test
adcb
and
mov
std
aad
mov
test
mov
inc
mov
jnp
mov
xchg
test
dec
xchg
jae
cld
sub
push
xchg
sbb
sbb
add
lea
inc
pusha
fildl
jae
add
xor
insb
inc
push
aas
movsb
cltd
shlb
in
les
and
fnstcw
push
or
adc
stc
sti
inc
outsl
mov
inc
and
jne
mov
jl
pop
pop
not
cmp
mov
or
adc
jns
iret
pop
aam
repz
mov
cmpsb
pop
and
sbb
push
jno
dec
lock
jp
mov
ja
mov
add
rorl
pop
mov
dec
inc
rclb
loopne
mov
cs
rorb
out
or
push
pop
stc
adc
jae
inc
adc
push
sbb
es
rolb
rorb
das
and
mov
and
out
leave
out
jecxz
pusha
push
es
ljmp
pop
mov
xor
pop
push
in
aas
imul
in
xchg
and
fsubrs
shl
lret
mov
int
mov
iret
repz
aam
or
shlb
dec
loop
push
xchg
push
adc
cmovne
pop
cmp
call
nop
ljmp
and
test
sub
or
xchg
cmp
lret
fidivl
and
adc
push
test
jnp
loope
push
jge
mov
les
add
fwait
insb
cmp
jae
mov
rorb
int3
pop
and
insl
mov
roll
add
sub
scas
inc
lea
insl
sub
cmpsb
inc
scas
mov
stos
push
in
in
sbb
mov
int3
int
and
and
mov
in
dec
in
ret
into
sub
cmp
jnp
push
fisttpll
jecxz
cltd
aam
sbbb
in
sbb
imul
dec
popa
test
pop
adc
mov
dec
movsl
xor
out
icebp
stos
dec
dec
and
lods
push
cs
jmp
ljmp
cmp
inc
push
push
gs
push
pop
xor
jb
xor
cli
xchg
push
out
xor
jae
xor
shll
adc
nop
filds
in
scas
pushf
xchg
cmp
in
sahf
adc
fs
into
mov
and
and
es
loope
mov
loopne
fstpl
xchg
jp
lods
cmp
jle
imul
dec
inc
inc
insb
fstpl
loope
jl
jmp
push
sbb
std
std
cmpsb
sbbb
mov
dec
icebp
mov
bnd
clc
fwait
sub
pop
jmp
clc
js
insl
jp
jp,pn
push
jle
cli
mov
sub
adc
fbstp
jno
pop
fists
outsb
lret
insl
icebp
dec
sub
stos
and
addl
rolb
and
mov
cli
and
push
in
sti
outsb
ja
cltd
push
outsb
sbb
jne
in
cli
sub
dec
inc
or
ljmp
jmp
xchg
lcall
or
dec
mov
mov
cmp
mov
cmp
cs
add
add
andl
scas
dec
std
not
cmpsl
stos
hlt
add
lcall
subl
bound
dec
andb
int3
pop
push
movsl
orl
es
mov
mov
sbb
jne
push
dec
xchg
insl
int
xchg
test
loop
mov
jmp
inc
fs
xchg
ret
inc
icebp
lret
cs
mov
mov
rcrl
daa
mov
xor
jmp
stc
mov
add
fld1
leave
dec
test
jecxz
imul
jle
jb
xor
inc
test
pop
scas
pop
out
sarl
inc
mov
cwtl
pop
aam
lods
dec
pop
jmp
popa
in
fiaddl
stos
scas
aad
sub
mov
jbe
sti
push
cwtl
push
shrl
imul
clc
pop
mov
sub
fsubs
sbb
sub
pop
xchg
dec
push
jnp
lods
push
mov
int
imul
in
mov
add
and
lahf
dec
fsts
push
popl
sahf
jl
fisttpl
pop
data16
in
mov
mov
mov
and
cld
stc
iret
dec
mov
in
mov
inc
xchg
stc
cltd
fs
inc
mov
pop
ljmp
pusha
ss
stos
cli
movsb
leave
xchg
imul
sbb
cmp
add
testl
xchg
mov
push
rcrl
std
stos
adcb
fwait
sub
sub
inc
mov
cltd
mov
dec
ret
dec
aad
sbb
adc
rcl
push
ljmp
fs
aas
mov
and
out
fwait
push
push
out
sti
call
mov
lahf
inc
jns
sub
pop
xchg
and
xchg
or
icebp
xor
ljmp
fldl2e
gs
cli
mov
scas
mov
movsb
dec
mov
cwtl
or
cmc
inc
pushf
or
xchg
dec
pop
sbb
fldt
pop
cmp
inc
aam
lahf
pop
fwait
adc
das
sub
pop
out
inc
xchg
iret
xchg
push
nop
or
inc
outsl
movd
push
cld
jmp
stc
mov
repz
loopne
or
hlt
cld
adc
ret
push
ficomps
in
cltd
inc
sub
in
add
sti
int3
xchg
jnp
mov
dec
imul
daa
cmp
push
jnp
dec
mov
jns
test
hlt
push
push
testl
cmp
mov
mov
sub
stos
std
dec
loop
xor
and
fisubl
mov
and
enter
ja
inc
adcl
pop
cmpsl
shl
adc
daa
xchg
pop
xorb
mov
xlat
in
adc
add
or
imul
jnp
add
cltd
lahf
cmpb
dec
adc
repnz
gs
ret
nop
or
enter
rclb
adc
jns
cmp
inc
mov
rcrl
es
ret
pop
mov
sub
imul
shll
mov
cmp
mov
les
pop
rcrl
dec
in
ds
push
inc
sarl
mov
sahf
dec
enter
addl
sahf
and
jbe
fs
adc
cld
jle
daa
and
push
scas
push
das
adc
into
repz
fs
cwtl
lods
cmp
inc
arpl
rcll
test
enter
out
in
cmpsb
mov
xor
pop
jp
gs
or
mov
insl
dec
add
xchg
pop
pop
sub
push
mov
add
push
cmp
cli
shll
idivl
repnz
add
jo
mov
aam
outsb
add
jns
bound
arpl
es
mov
adc
sub
sarb
add
inc
test
xchg
push
jp
ljmp
iret
mov
dec
inc
xchg
mov
xchg
jmp
and
out
dec
ret
addr16
jo
stos
lods
xchg
mov
adc
addr16
push
mov
mov
out
adc
dec
xchg
icebp
and
jo
aaa
popa
push
insb
stos
and
push
repz
rcll
icebp
pushf
push
test
xorl
and
rcrl
sti
jo
or
loop
repz
lock
or
jg
call
push
iret
int3
aam
adc
rclb
sub
inc
test
cltd
mov
repnz
les
add
and
pushf
dec
jle
dec
mov
movsb
je
xor
push
fs
ss
mov
fcomi
or
cli
sub
es
outsb
pop
sbb
cli
mov
clc
lahf
lret
mov
stos
stos
popf
mov
or
inc
shrb
add
xchg
iret
push
add
mov
sub
push
xchg
and
imul
pushf
cmpl
push
rcr
dec
pop
inc
jmp
mov
in
pop
aas
cmp
loope
out
in
popa
add
push
mov
arpl
push
outsl
popf
leave
mov
push
pop
enter
insl
lds
out
cmp
cmpsb
out
cld
and
sub
fs
push
clc
fwait
movsb
clc
fmull
mov
and
sub
and
js
scas
fsubrs
ds
shlb
gs
dec
nop
shrb
ds
mov
jmp
adc
popl
mov
xor
daa
popa
or
jge
movsb
das
xor
sbb
add
inc
fldl
out
dec
mov
imul
and
outsl
mov
jl
ss
mov
inc
mov
pushf
mov
inc
addr16
adc
clc
jns
movsl
adc
push
mov
stc
dec
and
scas
cmp
ds
sti
jne
aam
push
or
sbb
inc
jecxz
pusha
scas
cmpsl
add
sub
fbstp
sbb
sbb
mov
and
push
stos
jg
push
shlb
mov
in
test
ficoml
jle
pushf
xchg
out
movsb
outsb
push
mov
in
xchg
cli
adc
lock
fdivr
mov
push
cmc
inc
inc
test
test
fcoml
jg
mov
ret
pop
outsl
gs
gs
aaa
fstp
insl
cmp
xor
sbb
cmpsl
jmp
lahf
test
stos
dec
lret
xchg
pop
jmp
ss
outsl
jbe
xor
loop
popa
xor
pop
lods
mov
cmp
into
add
cmp
push
mov
lods
sbb
jne
sti
icebp
lahf
push
shr
out
push
nop
call
push
int3
jae
mov
loope
inc
dec
pop
mov
sbb
ret
mov
xchg
xchg
dec
mov
sub
int3
es
cmpsl
sub
mull
in
jl
push
push
push
xchg
mov
cwtl
dec
dec
inc
inc
sahf
push
test
stos
xchg
sahf
cmp
sbb
mov
std
jp
pop
inc
xchg
mov
daa
daa
loopne
ss
loop
sub
or
jns
call
xor
push
rorb
and
inc
lahf
push
xor
or
mov
mov
xor
add
jns
pop
jne
enter
int
jge
add
repz
arpl
jo
lods
pop
jmp
jo
mov
dec
lock
cmc
mov
mov
out
adc
push
jg
mov
imul
xchg
cli
in
pop
lds
shrl
in
pushf
adc
ljmp
dec
rcl
addr16
sarb
nop
mov
cmp
nop
xor
shrb
test
xorb
mov
jp
inc
or
push
call
xchg
dec
mov
sub
or
cmp
mov
jnp
dec
push
int3
cmp
sbb
xchg
adc
nop
cltd
test
daa
pop
and
fisttps
mov
aad
and
pop
popf
mov
pop
ja
shrb
xlat
jns
repnz
mov
cltd
mov
sub
scas
sti
pop
mov
jp
fwait
or
sbb
pop
jl
sub
loope
or
std
push
test
mov
jge
outsl
ss
mov
mov
repz
mov
xor
iret
sub
shll
imul
push
mov
inc
cltd
xor
popa
addr16
mov
pop
div
and
adc
rol
or
sbb
adc
cmpsl
lea
push
fs
pop
cmc
lock
adc
cwtl
hlt
in
or
dec
scas
jae
imul
imul
outsl
pop
add
xor
and
incl
fiadds
mov
test
int3
mov
js
sbb
mov
jl
add
cmp
in
jle
mov
cmp
iret
xchg
pop
cli
mov
sbb
jecxz
cbtw
or
pop
or
mov
lahf
or
xchg
push
enter
and
cmp
shrb
jne
enter
iret
hlt
gs
adc
ss
scas
pop
insb
xchg
jmp
mov
mov
sbb
addr16
jge
stos
js
int3
fldcw
xchg
in
push
jae
ljmp
je
int
popf
movsb
jb
inc
xchg
pushf
lcall
fcoml
xchg
push
ja
push
sbb
stc
jle
fldl
add
or
cmpsl
adc
icebp
or
das
push
imul
stc
mov
call
pop
mov
add
inc
xchg
adc
jl
fsubrl
das
outsb
shrl
mov
gs
lds
mov
enter
outsl
test
cmp
jecxz
mov
daa
test
add
jge
xor
pop
sub
pop
repz
fldl
inc
add
xor
pusha
sbb
cmp
xchg
ficompl
jle
xchg
jb
xor
aas
jb
adc
xchg
sbb
aad
sub
pop
push
leave
adc
leave
dec
pusha
ret
or
and
aas
or
xchg
bound
ja
xor
jno
xchg
add
addr16
lcall
inc
mov
lcall
jle
cltd
xchg
test
iret
jmp
popa
outsl
cmpsb
pusha
dec
nopl
repz
or
rcll
negb
add
and
cmp
stos
xor
out
jno
test
cs
mov
jbe
imul
xor
xchg
mov
icebp
nop
sbb
movsl
test
mov
insl
pushf
test
xchg
not
push
and
int
gs
cmp
outsb
mov
cmpsl
lods
and
imul
push
data16
jge
lahf
xor
out
xor
scas
daa
xchg
pusha
shll
sbb
adc
mov
pop
xor
or
jae
and
dec
nop
or
adc
int
add
or
dec
push
xchg
bndldx
push
fcomp
mov
mov
insb
leave
jnp
inc
ja
dec
sub
fs
mov
aaa
sarl
in
incb
sub
add
mov
loope
push
js
rclb
dec
xor
cmpsb
lds
divb
lret
dec
jmp
aas
inc
push
cld
jge
xchg
sub
fsub
mov
cmp
add
fisubs
inc
mull
mov
mov
sub
pop
in
add
ds
dec
div
adc
xor
pop
out
dec
mov
mov
sub
and
lds
insb
xchg
push
mov
std
dec
pop
add
sbb
inc
or
arpl
in
imul
movsb
ljmp
adc
outsl
repnz
and
sbb
adc
pop
aam
sbb
popa
test
fs
xlat
sahf
out
pop
inc
and
outsl
ret
jg
inc
orb
stos
ljmp
mov
dec
fldt
test
and
adc
test
adc
adc
leave
mov
lcall
jae
mov
mov
mov
addr16
jns
cmp
xchg
sub
test
sub
sub
or
divb
clc
sbb
jg
insl
xor
neg
cmp
cmp
inc
in
pop
xchg
adc
les
js
ss
rcrl
adc
int3
gs
fs
out
shl
inc
popf
jns
xchg
mov
cs
xor
lcall
dec
ljmp
mov
cmp
push
ds
fwait
loop
push
out
sub
push
dec
xlat
fbstp
xor
movsb
mov
call
pop
add
dec
mov
sub
out
jnp
mov
and
pop
pop
testl
popf
roll
insl
bound
sahf
inc
hlt
push
mov
adc
mov
sub
in
pop
mov
mov
icebp
inc
mov
ret
popf
mov
cltd
nop
push
sub
jmp
push
dec
or
test
js
mov
cs
push
or
push
call
cmc
mov
in
dec
insl
sub
pop
pop
arpl
fisubs
fisubs
sbb
xchg
push
icebp
xlat
addl
clc
jo
mov
xor
popa
inc
inc
mov
ja
leave
xchg
xchg
xor
shll
es
xchg
jae
mov
mov
pushfw
mov
jnp
or
and
add
xor
shl
jo
mov
ret
sahf
jae
bound
or
pop
cmp
mov
jns
adc
inc
mov
loope
fstl
pop
idivb
pop
or
cmp
pop
pop
cmpsb
pop
hlt
mov
orb
mov
dec
push
testl
fstp
aam
mov
or
mov
popf
push
lods
mov
pushf
and
adc
divb
mov
pop
jle
add
testb
rep
jmp
fwait
les
sub
clc
icebp
repz
movsb
push
dec
outsl
sbb
xchg
into
lods
cmpsb
hlt
stc
mov
aas
sarl
out
xlat
pop
xchg
push
inc
or
pop
mov
cmp
fldl2t
inc
sub
sub
fdivl
pop
lahf
cmp
mov
test
ljmp
mov
inc
or
lods
push
pop
pop
sub
mov
xchg
sub
dec
mov
cltd
negb
mov
push
sbb
sbb
inc
in
jbe
loopne
outsl
jb
ret
cmp
xor
dec
mov
mov
jno
test
stos
cld
dec
add
lock
mov
pop
jo
pop
fnsave
imul
mov
and
sti
jae
sbb
js
jns
mov
lret
cmp
addr16
cltd
jae
iret
test
lcall
or
or
mov
mov
cld
test
leave
pop
xchg
jmp
mov
mov
ud2
and
xchg
lock
ss
stos
aaa
aas
mov
dec
scas
mov
add
out
ljmp
dec
outsl
ficoml
insb
pop
add
out
cli
test
push
movsl
sub
inc
and
aaa
pop
cld
cmp
sub
popf
or
test
xchg
or
or
or
out
cld
jg
inc
mov
ja
loope
adc
jne
mov
lock
mov
jo
pushf
pop
mov
aam
sbb
ret
cwtl
pop
sbb
pop
jge
mov
xor
lea
pop
fcoms
arpl
aas
xchg
and
dec
jmp
xchg
js
sbb
les
mov
stc
dec
xchg
adc
pusha
aam
icebp
mov
push
mov
adc
sub
xchg
int3
lods
hlt
mov
pop
mov
inc
cs
dec
xlat
and
or
sub
pop
rol
inc
mov
stos
xchg
sbb
into
gs
xchg
push
mov
dec
cmp
insb
xchg
shrl
je
mov
mov
cmp
cmp
repnz
fmuls
pop
dec
push
mov
fisubrl
add
outsl
xor
aas
jne
push
sub
int3
or
mov
xchg
inc
push
cmp
insb
mov
xor
iret
lock
mov
mov
jp
xchg
je
push
mov
mov
pop
lods
out
rcrb
push
int3
out
and
push
jne
stos
cmp
rorl
mov
adc
or
mov
je
jbe
mov
arpl
aam
adc
inc
cltd
outsl
xchg
pop
test
andb
mov
fs
in
xchg
lods
mov
and
insb
outsb
xchg
inc
fisubrs
mov
jae
inc
psubusw
jmp
jo
inc
out
sub
mov
shlb
mov
add
fadds
int3
dec
fisubrs
inc
dec
jge
cmp
mov
rcrb
pusha
mov
lods
jnp
or
jmp
in
rorl
fs
or
fs
dec
roll
fidivs
incl
dec
sbb
test
rcll
mov
sbb
lds
dec
inc
jb
mov
jnp
xor
jge
xor
rol
push
add
push
daa
fmul
jmp
xor
jl
inc
imul
dec
lods
mov
or
adc
xchg
in
addr16
pop
popa
sbb
or
sarl
xchg
or
test
test
inc
lods
mov
mov
mov
js
jne
jne
insb
loope
fcoml
stos
pushf
mov
xchg
sbb
push
sub
cli
js
subb
adc
jp
rcll
test
or
mov
xor
inc
popf
lods
cmp
sub
incl
sub
cld
mov
imul
lock
cli
aam
addr16
sbbl
sub
repnz
cmc
pop
xor
pop
add
adc
repnz
cli
and
cmc
pop
orl
inc
xor
jmp
icebp
outsb
jge
frstor
orl
arpl
lods
dec
mov
pop
mov
pop
adc
xchg
iret
and
imul
sbb
cmpb
mov
in
mov
rcll
insl
shlb
rcrl
cmc
call
fidivrl
mov
and
mov
repnz
sub
sbb
xor
fmull
mov
mov
je
cmpb
mov
ss
sub
jg
outsb
nop
push
mov
xchg
xlat
fidivrs
scas
xor
sub
repz
mov
mov
mov
cmpsl
call
adc
scas
pop
fwait
hlt
xor
gs
cmpsl
lds
fiaddl
mov
mov
ret
pop
and
or
cmovne
sti
es
shl
jb
pop
psubsw
push
mov
xlat
sub
pop
sub
call
into
mov
mov
mov
fsubrl
ret
inc
sbbl
xchg
dec
xchg
pop
xor
movsb
jge
pusha
mov
xchg
cld
insl
outsl
insl
inc
outsb
in
sub
insl
dec
push
test
gs
shrl
mov
cmpsb
int3
xchg
mov
out
lds
mov
scas
pop
inc
xlat
shl
cmpsl
sbb
imul
xchg
loop
add
fsub
xor
ljmp
lods
in
int3
inc
cli
push
int
jp
repnz
and
xchg
xor
jns
insl
jge
add
push
push
mov
jae
in
ljmp
lahf
xchg
inc
push
rorl
pop
fucomip
sbb
mov
push
sbb
xchg
mov
dec
pop
mov
idivb
dec
mov
pop
ds
xchg
mov
imul
repz
out
pop
popf
mov
lds
ret
nop
cmp
mov
out
sbb
adc
mov
inc
test
outsl
rorl
ja
cmp
jmp
sub
xlat
push
mov
inc
xor
add
jge
sub
adc
popa
std
mov
inc
add
repnz
jecxz
lds
and
inc
in
sbb
jge
js
loop
mov
push
sbb
push
js
pop
add
cltd
enter
cwtl
ss
call
dec
dec
out
dec
sub
std
mul
movsl
in
fstpt
outsb
loopne
or
cmp
insl
pop
jp
movsl
xor
adc
push
lret
in
fistps
fs
jb
in
mov
icebp
sub
sub
pop
fs
into
add
jnp
mov
cmpsb
sbb
cmc
sti
outsb
push
aaa
popf
loop
popf
and
or
add
cwtl
cmp
filds
adc
test
stc
shlb
je
fucomi
dec
mov
inc
aam
rcrl
lock
cmp
sub
cmpsb
pop
xlat
xchg
ljmp
iret
sub
adc
out
movsb
cmp
lods
insl
in
cmp
ret
lret
clc
or
out
push
cmpsl
incl
sarl
pushf
xchg
jnp,pt
or
shl
das
jecxz
dec
xor
pop
mov
arpl
add
cmpsl
test
fdivl
out
xor
adc
lahf
pop
js
mov
mov
add
push
mov
stos
xor
outsb
inc
sub
lret
xchg
mov
and
aad
enter
out
mov
call
scas
or
jg
push
or
mov
arpl
add
prefetchnta
pop
sub
not
ss
jl
pop
popa
sti
add
xchg
lea
repz
mov
push
ja
add
add
and
add
enter
jns
aad
xor
fmuls
jnp
adc
enter
rol
xchg
loopne
loop
insl
lds
scas
adc
adc
ss
and
enter
jno
andl
mov
dec
inc
movsl
and
mov
lret
lret
test
lds
pop
mov
mov
pop
push
es
xchg
cwtl
arpl
mov
and
cld
clc
ret
push
jne
cmp
cmp
xchg
scas
pop
out
dec
and
and
xchg
push
sub
loopne
cli
filds
sbb
cmpsb
mov
push
aad
mov
add
ss
add
loope
stos
push
adcl
inc
lcall
fs
and
daa
iret
stos
sub
lahf
mov
push
cmp
fidivl
jmp
shll
inc
clc
pop
dec
cwtl
jle
mov
dec
cli
aad
rorb
xchg
fisubrl
jmp
mov
pop
and
fisubrl
shrb
xchg
mov
hlt
pop
sub
in
scas
test
mov
add
or
jae
cmp
dec
mov
std
aaa
adc
push
ret
popf
jle
inc
in
mov
negl
fildl
test
mov
inc
jg
pop
test
test
scas
adc
pop
push
insl
or
data16
jnp
out
rorl
data16
mov
inc
imul
mov
xchg
repz
or
jnp
xor
test
repnz
std
and
xor
movsl
mov
aad
push
repnz
lahf
lods
pop
pop
push
andb
test
mov
js,pt
xor
jecxz
xchg
cmc
sub
and
lods
ficoms
clc
loopne
aas
out
mov
or
cwtl
xchg
sahf
xchg
sahf
cmpxchg
jl
aam
mov
dec
jnp
push
clc
jae
adc
mov
cld
loope
add
and
fs
lock
scas
pop
push
popa
xchg
and
test
dec
mov
mov
pop
jne
pop
xchg
pop
loopne
enter
jle
stos
icebp
pushf
push
ja
ja
leave
inc
insl
pop
or
stos
pop
xchg
scas
push
imull
ds
jge
lahf
mov
xchg
out
adcb
dec
jmp
dec
test
lods
notb
into
lret
xlat
pop
aam
xlat
aam
out
shlb
insb
lds
sbb
daa
hlt
xchg
in
lahf
xlat
sbb
daa
push
test
xchg
jge
push
dec
xchg
xor
lret
into
xchg
js
and
test
or
adc
lds
lret
btr
or
outsb
jle
bound
mov
loop
call
xor
xchg
in
sbbl
repnz
push
adc
or
dec
pop
sbb
cmp
and
push
jo
and
jns
subl
mov
les
mov
adc
adc
lods
les
dec
pop
mov
fistpl
and
test
hlt
sbb
xchg
inc
add
lahf
mov
inc
mov
dec
stos
subb
rep
lods
pop
jnp
test
nop
pop
inc
loope
sub
push
mov
xchg
mov
adc
adc
pop
mov
and
js
jl
std
sbb
adc
pop
add
and
lret
push
lcall
jg
mov
lea
sbb
lds
sub
testb
adc
mov
rol
in
push
sbb
fisubl
mov
push
or
push
aad
test
incl
mov
lret
xchg
cli
jg
cmp
or
and
jnp
dec
jns
push
jnp
xor
lods
cltd
pusha
dec
pop
je
icebp
and
lea
repnz
inc
xor
int
push
cwtl
mov
lret
push
mov
mov
push
xor
push
xchg
lods
mov
mov
in
pusha
aas
xchg
out
mov
sbb
add
sub
mov
stc
ret
add
cmp
mov
inc
testb
test
sub
in
pop
dec
adc
mov
mov
stc
xchg
xorb
cmp
fs
pusha
daa
lret
or
cmpsb
jp
xchg
jae
daa
adc
int3
ret
sbb
pop
ss
jae
xor
mov
setae
and
shrb
out
xchg
push
jo
sti
loopne
jo
mov
insb
movsl
mov
mov
out
outsb
push
sbb
clc
jg
mov
push
mov
cmp
jl
cmc
cmc
out
xchg
jns
inc
jmp
pop
sbb
addr16
cltd
push
push
jbe
shl
or
cmp
test
mov
jno
movsl
cmp
pop
push
xchg
inc
mov
adc
lds
fwait
aad
pushw
stc
lds
cli
dec
lods
fcmovnbe
push
into
inc
call
int
jp
mov
mov
mov
imul
and
mov
jecxz
hlt
and
or
movb
lock
js
push
mov
dec
adc
call
bound
popa
jecxz
and
fsubl
lds
movb
dec
ss
rorl
inc
and
pop
adc
dec
es
mov
xor
inc
xchg
add
cltd
loopne
pop
jp
xor
rclb
test
mov
sbb
loope
mov
out
adc
sub
lock
shll
mov
ja
mov
and
sarb
and
xor
jmp
push
jae
fwait
add
lods
jns
repnz
cmp
ds
mov
scas
jmp
test
lret
std
jg
push
sbb
lret
rclb
cmp
mov
stc
inc
jle
data16
cld
mov
dec
insl
enter
push
add
adc
sbb
fistpl
and
sbb
mov
inc
mov
xor
cmp
xor
dec
nop
outsl
rcl
nop
movsl
xor
out
mov
pushf
mov
dec
popf
fnstenv
loope
imul
in
out
sub
jg
rcrl
in
popa
mov
cmp
jb
sbb
in
int
pop
push
cld
add
lret
lret
fcomip
and
fcoml
cs
lock
cmp
dec
inc
scas
call
in
push
hlt
movsl
sbb
out
aaa
push
mov
loopne
fstpt
loopne
pop
cld
inc
fstps
addr16
jmp
in
or
add
cmpsb
push
nop
sahf
stc
mov
clc
inc
pop
shl
popa
cmp
sub
inc
shlb
mov
pop
pushf
mov
mov
or
push
lcall
pop
adc
mov
loop
xlat
pop
mov
aaa
dec
sbb
frstor
aaa
jmp
and
adc
jns
jnp
push
pop
inc
mov
xchg
xchg
xor
bound
xlat
pop
je
imul
cmp
jo
pop
pop
std
movsl
mov
rcll
push
repnz
in
lcall
pusha
icebp
push
and
mov
cmp
in
pop
sbb
xchg
lcall
das
shll
dec
stos
fldenv
dec
cmc
repz
insl
out
mov
jne
dec
xchg
lds
jp
or
ja
mov
cmpsl
std
repnz
xlat
xorb
xchg
ret
mov
fptan
xchg
orl
jg
adc
fwait
mov
add
arpl
faddl
mov
push
xchg
add
call
cmp
arpl
push
out
push
push
cmpsb
adc
repz
in
jge
icebp
and
mov
add
sbb
in
sub
sbb
bound
cmp
into
iret
loop
loop
and
pusha
cli
add
ret
and
xchg
push
jmp
dec
loop
xor
stc
and
inc
pop
xchg
adc
es
sub
test
fcomps
fsubrp
roll
adc
dec
data16
add
mov
pop
jne
jmp
jle
ror
xchg
aas
jp
xchg
pop
and
or
xor
popf
inc
mov
and
xor
push
je
jnp
jp
fcomps
dec
bound
imull
jp
xchg
dec
bound
dec
arpl
loope
test
pop
notb
dec
addr16
imul
cmp
adc
sub
in
in
imul
push
push
arpl
jmp
cmp
shll
jle
sbb
mov
mov
int3
sub
addb
add
push
leave
push
xchg
sub
popa
ds
push
jbe
jns
sti
leave
inc
jge
xor
pop
mov
daa
add
dec
xchg
das
mov
cmp
push
sbb
push
nop
mov
or
test
idiv
xor
sbb
and
pushf
jl
dec
dec
pop
pop
dec
pop
lock
outsb
adc
imul
add
stos
fdivrl
shlb
adc
out
fdivrl
xor
push
mov
cmc
dec
adc
cmp
jne
inc
mov
mov
cmp
or
mov
das
add
in
fsubs
out
test
pop
push
pop
in
in
lcall
cld
adc
int3
jecxz
jp
mov
sub
mov
sahf
clc
jl
push
ljmp
cmp
rcr
and
mov
dec
insb
inc
filds
sub
pop
push
adc
mov
sbb
out
fldt
std
dec
addr16
push
pop
add
lahf
jno
mov
mov
outsb
sub
and
sbb
xchg
rcll
rolb
dec
fistps
outsl
fidivrl
hlt
mov
mov
mov
jp
call
mov
repz
jne
ss
mov
xchg
cmp
jmp
mov
xor
xchg
fimull
cmpsb
imul
cwtl
les
orb
gs
mov
jp
xchg
mov
rcrl
imul
dec
scas
jbe
pop
loopne
in
roll
jecxz
cmp
inc
mov
out
jb
push
arpl
pop
push
nopl
jge
xor
jl
mov
je
jnp
dec
das
out
scas
adc
xor
or
shl
cwtl
mov
jno
out
cmp
aad
fiadds
rorb
or
mov
cld
lods
testl
adc
icebp
xlat
mov
mov
and
pop
jnp
jnp
mov
fstpl
dec
subb
fldt
and
mov
out
bswap
aad
test
out
push
or
cmp
ds
pop
and
ret
aaa
xchg
rorl
adc
pop
jmp
rorb
xlat
dec
dec
sbbb
test
sub
ret
cmp
push
ficompl
nop
lock
lahf
push
cmpsl
dec
xchg
cmp
daa
sbb
out
daa
mov
jne
sti
pop
arpl
loop
subb
inc
mov
and
xlat
andb
push
push
xchg
mov
push
pop
mov
cmp
test
push
xchg
jl
lret
icebp
hlt
fisttpll
or
mov
bound
mov
mov
fwait
mov
push
xchg
cmc
cmp
jne
push
xor
xchg
std
inc
mov
movsb
push
pop
and
and
ret
inc
add
cmp
sub
idiv
xor
jne
out
xlat
std
pop
aaa
pop
in
add
hlt
dec
cmp
jle
les
sub
dec
out
lods
push
stos
lcall
ds
lods
dec
outsl
mov
push
dec
and
dec
jmp
xchg
hlt
xchg
jmp
jne
enter
pop
mov
push
inc
pop
xchg
cmp
lret
nop
fwait
or
jbe
aad
inc
fbstp
je
xrelease
push
fsubrl
icebp
and
pop
jecxz
push
flds
inc
mov
jl
sbb
jmp
mov
mov
ss
in
push
push
or
pusha
xlat
mov
xor
mov
psadbw
cli
mov
jg
jb
push
pop
mov
xchg
mov
imul
je
sub
xor
out
mov
lods
leave
ds
fisubrs
inc
dec
fimull
mov
iret
ja
fldenv
jl
mov
jmp
inc
lahf
sbb
ror
pushw
das
ljmp
mov
adc
inc
pop
cs
xlat
out
adcb
sbb
orb
gs
inc
inc
orl
rcrl
push
fistpl
aas
movb
and
mov
aas
arpl
fs
fwait
push
cmp
das
pusha
pop
movsb
in
outsl
std
ret
aas
add
mov
lods
js
or
outsl
xor
inc
pop
and
xchg
shll
ljmp
ret
cltd
pop
fildll
movsl
orl
cs
mov
xorb
jmp
xchg
fisttpll
xor
or
cmc
or
shlb
pop
decl
inc
cmp
mov
roll
xchg
std
sbb
xchg
sub
xor
jnp
jp
cltd
mov
rclb
push
mov
sub
xor
and
enterw
sbb
dec
addr16
fistl
lcall
mov
jp
jmp
test
xchg
jae
push
mov
lahf
aas
and
mov
roll
xchg
xor
pop
jmp
int3
fs
and
outsb
cld
push
ffree
pop
xor
jecxz,pn
adcl
testb
insb
in
mov
fcmovu
mov
inc
adc
sbb
repnz
xchg
js
int3
xor
jecxz
sbb
or
pop
inc
fdivs
out
sub
cli
shll
sti
add
sbb
jb
arpl
imul
mov
cld
adc
mov
cmpsl
jb
and
sub
sahf
loop
in
inc
and
mov
unpcklps
cmp
mov
ljmp
shlb
sub
inc
loop
fs
lret
cmp
popa
inc
shlb
movl
sub
xchg
out
xor
imul
xor
and
adc
fwait
aas
pop
cltd
dec
andb
cltd
orl
pushf
mov
pop
sbb
inc
push
or
sbb
clc
frstor
mov
insb
mov
les
sbb
mov
jmp
fcomp
push
xor
insl
mov
pop
fiaddl
jecxz
push
rorl
add
lret
cmc
add
icebp
cwtl
mov
cmp
test
mov
lret
pand
fnstcw
lods
scas
fdivl
mov
sbb
adc
xchg
dec
lods
dec
out
insl
add
and
data16
cmp
add
pop
cltd
pop
hlt
jmp
cmpsl
add
push
movsb
xchg
fistl
or
dec
or
add
lock
out
iret
inc
cmp
imul
mov
jle
dec
jns
scas
and
add
mov
testb
test
lods
fldenv
mov
lcall
and
shlb
pop
ljmp
and
out
xchg
test
orb
clc
lods
ljmp
ja
xor
pop
sbb
mov
dec
xchg
gs
pushl
add
jl
lret
gs
dec
shlb
jge
mov
jge
pop
out
push
shll
das
out
bound
std
rcrb
mov
pop
js
sub
sub
add
ds
sbb
shll
push
sbb
inc
xchg
dec
in
mov
fistl
pop
int
sub
jecxz
int
mov
pop
adc
fwait
ss
adc
add
popf
mov
fmuls
push
data16
sbb
cmp
clc
jle
lods
or
les
sub
repz
mov
out
rcrb
xchg
cltd
cltd
sub
add
pop
xchg
stos
cmp
mov
stc
inc
sub
adc
loopne
mov
movsb
mov
test
xchg
dec
pop
or
sbbl
outsb
push
ljmp
test
clc
scas
sub
push
push
cmp
mov
jns
fisttpl
jnp
push
pop
xlat
pusha
lods
inc
cmp
lods
jmp
clc
fiaddl
test
mov
push
push
rorl
cltd
dec
ret
lods
out
clc
in
arpl
jbe
aam
lods
pop
jbe
inc
aad
or
jl
rolb
sub
adc
adc
inc
out
mov
outsb
push
mov
xchg
or
testb
stc
push
lock
cmpl
pop
stos
test
jne
out
imul
lods
icebp
push
test
fdivr
push
cmpsl
push
or
adc
inc
in
cli
inc
mov
shll
pop
dec
iret
movsl
mov
add
and
cli
ret
xor
mov
ret
sbb
push
in
push
aas
pop
lea
fwait
dec
shl
adc
hlt
jbe
in
xor
clc
in
les
aas
add
jno
push
lret
andb
dec
dec
ljmp
lds
nop
sbb
jbe
rorb
add
push
cmp
lock
jb
loopne
out
xor
sbb
jp
jbe
jecxz
pop
dec
test
ret
mov
stos
enter
je
dec
mov
nop
sub
inc
gs
repz
pop
cmp
mov
add
ffree
scas
push
cmpsb
pop
push
in
lea
dec
add
push
xchg
aaa
imul
mov
push
outsb
stc
stc
xchg
add
push
into
dec
and
sub
rolb
movsb
xchg
scas
sbb
xlat
mov
ficoml
lock
mov
imulb
mov
stc
jmp
xchg
push
in
cmp
aas
insl
ss
cld
cmpsb
inc
insl
fwait
pop
retw
jg
pop
mov
pusha
mov
sbb
mov
sub
int3
and
mov
aad
cmpsl
sbb
ljmp
shl
int
pop
or
lret
xlat
dec
cmp
popfw
fwait
test
and
sbb
xchg
fisttpl
adc
loopne
mov
mov
sbb
lret
dec
adc
jne
out
pusha
push
adc
xchg
lods
js
mov
enter
movsb
insl
add
fsubrl
mull
mov
fmulp
sub
out
add
inc
into
fwait
or
daa
loope
xchg
or
stc
pop
or
dec
or
xor
mov
rol
mov
jmp
xor
jg
xor
jbe
dec
push
xchg
stos
sub
fistl
subl
in
cld
mov
fs
xchg
call
cld
nop
data16
fnstsw
push
mov
dec
es
push
mov
pop
mov
inc
ret
or
or
and
gs
insl
mov
stos
pushf
pop
idiv
add
jno
aaa
mov
sbb
adc
mov
shl
out
jns
or
sub
orl
aad
xchg
xchg
pop
enter
pop
pop
loope
push
sti
test
jp
xcrypt-cfb
cmpsl
movsb
and
call
push
push
push
repz
stos
dec
lret
into
icebp
out
push
xchg
mov
jmp
mov
mov
mov
daa
cmc
loop
inc
xorl
out
mov
loop
call
xchg
call
das
movsb
xchg
inc
insb
push
sub
xor
jae
jp
mov
loopne
inc
lods
add
test
lods
add
sbb
sbb
sub
hlt
aam
inc
ret
xchg
enter
lcall
dec
cmp
push
into
dec
sbb
loop
iret
clc
fwait
movsb
fs
mov
call
jl
pushf
cltd
adc
lret
adc
in
das
fildl
or
sbb
std
les
movsb
push
push
idiv
pop
sbb
add
mov
xchg
scas
icebp
outsl
testl
jb
push
sbb
push
inc
mov
lret
sub
es
cmp
dec
mov
loope
xorl
fcomps
unpcklps
hlt
stc
fwait
adc
jae
xor
mov
cli
popf
paddb
mov
sub
inc
nop
or
mov
pusha
lods
popf
nop
repnz
or
mov
cld
inc
rclb
inc
fistpll
cmp
jne
loope
cmp
mov
lock
push
les
cmpsl
push
mov
inc
xchg
out
sbb
fnstenv
nop
stc
sbb
idivb
adc
inc
dec
push
ror
jbe
subl
push
lock
in
movsb
ss
jns
stos
shll
dec
add
stos
xchg
loop
mov
fldl
xchg
fdivr
mov
push
mov
dec
rcl
loope
mov
lds
sbbb
xchg
push
lcall
repnz
test
ja
stc
and
cmp
inc
roll
cmp
clc
jo
dec
xlat
outsb
jmp
inc
jb
cmp
jbe
sub
cld
adc
es
inc
push
xor
sbb
rcr
sub
cltd
sbb
xchg
mov
stos
stos
pop
mov
xchg
add
ficomps
lret
and
add
add
nop
aas
push
test
gs
mov
lods
lock
push
fisubrs
and
stos
sbb
mov
inc
mov
jo
adc
adc
dec
mov
or
sub
and
jo
inc
bound
mov
lcall
adc
fnstenv
sarl
jb
std
cld
rcrb
mov
inc
jle
loop,pt
add
icebp
mov
movsl
and
in
rcl
sbb
lds
adcl
pop
sub
xorb
xor
js
cmp
pop
cmp
pop
mov
andb
popf
fwait
imul
lret
adc
sub
enter
push
shll
daa
xchg
mov
icebp
aas
jecxz
push
push
divb
icebp
jnp,pn
insl
roll
and
jne
jo
gs
rcl
and
sbb
xchg
sub
inc
jle
push
shlb
add
in
bnd
adc
inc
mov
repz
pop
cmpsl
hlt
cmp
mov
push
mov
lcall
fistl
imul
jae
dec
jecxz
xchg
aaa
sbb
test
jge
push
cmc
or
push
push
shlb
adc
add
mov
cmp
inc
fisubrl
sahf
xchg
xor
inc
ljmp
daa
repnz
xchg
push
sbbl
push
stos
insl
inc
or
ret
fadd
jns
rorl
push
xchg
stos
jns
xchg
mov
test
frstor
inc
mov
dec
sbbb
icebp
mov
xchg
fiaddl
pop
inc
movsb
les
mov
inc
test
jecxz
jp
add
mov
mov
xor
mov
pop
sub
movsb
and
pushf
mov
add
dec
lret
mov
pop
xchg
fldcw
loope
pop
mov
lcall
adc
sbb
sub
rdtsc
loopne
mov
mov
lods
div
adcl
pop
divb
lret
jp
nop
stc
pop
and
out
enter
pop
jle
cmc
popl
mov
push
cmp
sub
pop
rolb
and
lds
addr16
mov
outsb
and
mov
loop
subb
cmpl
add
jg
push
or
out
xlat
lock
pushf
mov
mov
jp
mov
push
sub
int3
push
mov
stos
negl
data16
and
rcrb
aas
or
ret
mov
dec
ja
push
xchg
add
in
mov
imul
xchg
fwait
jnp
pop
test
cmpsl
mov
jmp
leave
addr16
ret
xlat
int
outsb
nop
ds
repnz
fisubrl
in
push
cltd
push
mov
gs
movsb
mov
loop
pushf
stc
dec
push
mov
shll
xor
hlt
sbb
test
lret
movsl
sub
stos
jae
pop
pop
rcl
xchg
je
and
pop
xchg
bound
cmp
test
outsl
or
pop
mov
push
push
inc
dec
js
inc
pop
sbb
xor
push
pushf
loopne
xchg
xor
mov
sub
enter
mov
ret
push
sub
push
test
xchg
add
jle
fs
and
or
xchg
push
nop
mov
pop
lock
add
pop
pop
cmp
push
cli
cli
fwait
sub
out
jmp
sub
sti
rorl
addr16
imul
mov
mov
mov
test
sub
subl
aam
mov
aaa
aad
loop
dec
xchg
sbb
int
testb
pop
xchg
psubw
repnz
jmp
xchg
ret
mov
fdivl
adc
pop
rcrb
lods
daa
rorb
xor
mov
fisubl
jb
xor
imul
dec
pop
jge
fwait
mov
orb
les
mov
leave
and
aam
lods
stos
add
push
sbb
into
into
in
xchg
out
repnz
mov
ss
jae,pt
mov
fdivrl
mov
les
inc
adc
mov
rol
xchg
ss
inc
pusha
xor
negb
fs
sub
add
jae
mov
xor
xchg
jg
lods
sti
mov
test
cmpsb
das
add
mov
push
jl
loopne
cmp
adc
mov
pop
add
stos
jns
scas
sar
or
or
pushf
and
dec
xchg
enter
cmovno
das
sbb
mov
sub
pop
test
ljmp
sahf
bound
push
test
popf
lahf
push
std
jns
xor
mov
mov
mov
out
cmpsl
andb
jo
out
inc
outsb
jns
cld
push
mov
sub
hlt
add
mov
sbb
cld
ret
push
inc
adc
jg
std
fsubs
mov
sbb
test
and
mov
out
les
lds
sbb
dec
jne
data16
int3
repnz
add
pop
out
lret
adc
add
iret
and
nop
fcmovbe
test
cmp
mov
pusha
sbb
and
int
jp
movsl
fdivl
in
pop
lock
out
cmpb
dec
xchg
sbb
popa
jecxz
cmpsl
ret
xchg
mov
add
rorb
pop
cmp
lcall
cmp
mov
mov
mov
sub
jge
mov
lods
ja
push
js
subl
push
in
sbbl
pushf
xor
and
test
or
mov
insb
xor
mov
lret
loopne
fcmovu
call
out
sub
pop
jb
mov
cmp
stos
xchg
jecxz
mov
imul
notb
hlt
out
adc
repnz
lret
inc
jnp
insl
adc
or
pop
and
mov
jmp
sub
push
jb
jg
jl
pop
gs
mov
fldcw
je
shrb
or
or
xor
call
sub
repnz
push
leave
fisttpll
push
leave
das
shr
push
push
sub
arpl
mov
das
ss
or
and
fucomip
daa
loope
pop
mov
adc
jne
test
out
int
fstpt
xor
jo
enter
fcomi
jb
xor
cmpb
or
imul
in
pop
aad
add
das
jns
js
adc
sbb
rclb
rolb
repz
push
fs
xchg
sbb
pop
sbb
push
inc
xchg
or
and
out
cmp
jecxz
mov
jnp
pop
xchg
in
jg
fst
je
jno
xor
jmp
mov
cmpsb
xlat
fucom
mov
push
pop
xchg
xchg
mov
dec
inc
std
shlb
pop
in
imul
push
sub
mov
add
pop
adc
lock
fldl
push
or
bnd
xchg
lcall
and
jle
mov
and
xchg
jne
pop
mov
fiadds
jg
lret
or
mov
les
jge
jae
adc
xchg
lods
pop
add
fstps
sub
rorb
xchg
orl
mov
fistpl
and
adcl
dec
push
xchg
in
inc
andl
out
fcomip
jo
pusha
imul
insl
lods
fstps
imul
pop
xchg
push
xor
loope
imul
arpl
mov
push
mov
xlat
aas
mov
into
mov
aam
fcmovu
imul
or
mov
add
sub
and
or
call
fimuls
and
jb
jge
mov
lods
cmp
mov
rclb
jmp
jns
pop
insb
mov
xchg
lods
cmp
xchg
fxch
pop
pushf
imul
lods
sbb
scas
and
mov
stc
dec
cmp
js
xor
mov
aad
repz
ja
dec
jae
repz
inc
jl
outsb
leave
mov
shrb
mov
lock
dec
mov
test
push
gs
and
cmp
lahf
pop
adc
test
pop
add
mov
mov
sahf
push
std
dec
in
push
lock
xchg
movsl
pop
arpl
mov
inc
out
movsb
add
in
push
pop
mov
stc
ss
shll
jmp
popf
push
push
add
sahf
adc
fistpll
call
push
mov
movsl
xchg
cld
dec
rcl
gs
inc
adc
pop
adc
cmc
fldt
push
xchg
mov
pop
aas
push
je
mov
lea
dec
outsb
mov
insb
dec
mov
pushf
aam
push
sbb
push
in
mov
imul
or
ret
add
adc
and
xor
jmp
test
repnz
dec
lret
aas
pop
divb
nop
sbb
mov
in
shlb
rorb
adc
dec
sbb
push
lret
xchg
pusha
ja
mov
add
popf
push
xor
push
aas
data16
mov
pop
test
sbb
test
call
dec
outsb
push
mov
sbb
lea
jge
sti
mov
xor
mov
scas
inc
push
aaa
bswap
mov
mov
fcoms
iret
xchg
pop
mov
cli
lcall
dec
push
adc
in
out
sbb
addr16
rcrb
jge
or
cmp
andb
jmp
shll
jmp
and
fcom
xchg
mov
call
movsl
pop
fsubs
out
adc
fimull
test
test
xchg
mov
xor
pop
lods
das
or
push
and
pop
adc
lret
clc
push
cmp
sub
inc
lods
fiaddl
xchg
mov
and
rcr
sbb
mov
mov
jle
fwait
jb
mov
pop
xchg
inc
imul
xchg
sub
mov
mov
lret
int
and
cli
test
fdivp
sbb
gs
pop
jo,pn
jb
xor
inc
test
arpl
push
add
inc
mov
add
aaa
mov
push
or
xchg
stos
sbb
shll
lds
sub
fildll
out
data16
mov
std
mov
pop
sti
xchg
out
test
push
push
mov
sub
hlt
pop
stc
in
push
cmpsl
stos
jb
test
sbb
mov
inc
adcb
pop
sub
push
sti
push
in
mov
rol
call
out
mov
xchg
sbb
mov
rcrl
int
or
mov
sbb
jmp
loop
jbe
push
pop
xchg
sub
push
or
cmp
mov
sbb
jbe
fcoms
fadds
xlat
test
fldcw
cmpsb
sub
pop
inc
or
stc
add
pop
sbb
or
adc
jbe
sahf
cmpsl
in
lock
mov
cmp
mov
fwait
std
stos
into
cs
jp
imul
int3
push
push
sti
pop
xlat
mov
mov
fdiv
stos
pop
pop
jl
jne
adc
in
jp
outsb
lahf
cli
ljmp
scas
sbb
adc
pop
clc
mov
les
cmp
in
loop
xor
and
jb
pop
daa
addl
mov
sbb
repz
pop
cmpsl
sub
cmp
sbb
fdivrs
jmp
adc
sbb
mov
lret
iret
rorl
ljmp
lcall
jp
adc
mov
pop
or
int
pop
add
fildll
push
adc
mov
pusha
aad
rcl
sub
call
shll
lea
mov
mov
xor
adc
jecxz
stos
sub
pop
imul
mov
adc
add
sarb
xor
in
outsl
out
or
push
mov
movzbl
test
testb
cmp
test
xchg
repnz
pusha
cmp
xor
inc
stos
lahf
fs
jb
clc
sub
dec
add
xchg
pushf
jge
dec
pop
xor
jne
xchg
mov
pop
sub
push
test
cwtl
insl
dec
bnd
pop
push
adc
incb
push
and
xor
and
push
jns
sbb
push
cmpsb
jns
fs
inc
push
jne
into
mov
push
insl
inc
add
fldl
ret
pop
jb
or
cltd
pop
sub
std
lods
scas
in
int
xchg
and
cmp
sub
std
cmp
out
adc
pop
leave
add
outsl
pushf
bound
in
loopne
movsb
mov
aaa
lahf
out
aas
jno
push
jecxz
add
inc
cwtl
iret
insb
inc
fwait
ds
pop
and
and
sub
jge
test
push
jp
je
push
jns
mov
js
lret
imul
jb
mov
cmpsb
push
mov
sub
in
insb
dec
ret
mov
xchg
js
mov
mov
in
and
sar
jle
or
adc
push
ficoml
jae
les
outsl
std
bound
or
xor
sbb
jb
mov
sub
ja
add
xor
pop
aas
cs
inc
inc
xchg
jecxz
mov
sti
lret
cmpsl
and
or
ret
das
push
jp
fs
fnsave
stc
stos
or
mov
popf
jne
sar
inc
cmp
or
or
aam
push
mov
hlt
dec
jo
dec
jp
cmpb
mov
sub
iret
dec
sbb
sbb
je
pop
stc
ja
add
dec
addr16
movsb
imul
mov
jb
jmp
jmp
sti
xlat
dec
pop
in
in
xchg
cmpsb
mov
mov
push
xchg
lock
test
je
and
push
cmp
or
cmp
outsb
or
dec
dec
dec
jno
pop
imul
fyl2xp1
negb
or
aas
outsb
sub
jns
inc
push
jp
gs
push
jo
mov
pop
mov
mov
loope
bound
test
clc
mov
cmp
or
mov
mov
add
sbb
mov
xor
sub
xor
sbb
lcall
ret
add
mov
insl
jbe
test
mov
fwait
mov
scas
les
in
and
jmp
adc
or
shll
cmpb
pusha
mov
mov
sbb
push
inc
sbb
pusha
mov
in
outsl
add
add
cmp
xchg
les
lods
cmp
aad
add
bound
push
pop
push
addr16
lock
adc
and
adc
popf
sub
mov
cwtl
push
out
cltd
fistps
pusha
es
sarl
mov
call
mov
add
shll
test
pushf
mov
sub
sub
jbe
mov
das
mov
push
xor
sub
popa
sbb
and
sahf
hlt
shll
sbb
je
jae
repnz
mov
out
arpl
in
push
jle
mov
sbbb
xor
cmp
xchg
jno
pop
mov
out
cmp
cmp
lret
dec
out
sbb
lret
jb
or
sahf
xchg
cmp
out
xor
iret
std
jo
jmp
dec
imull
cltd
push
inc
lahf
sub
fidivs
test
mov
mov
push
push
xchg
xor
movsb
movsb
lahf
outsl
ljmp
and
lcall
xchg
pusha
inc
dec
mov
and
or
mov
mov
mov
outsb
mov
mov
stos
adcb
sub
pop
pop
loope
cmpsb
shlb
adc
jge
mov
dec
cli
ficoms
ss
loopne
cmp
aad
sub
in
mov
decb
jge
popa
imul
stc
jbe
push
push
inc
sarl
mov
ss
push
or
and
adc
and
push
add
orl
push
mov
xor
xchg
or
enter
jbe
test
pop
fwait
adc
addr16
mov
popf
jecxz
mov
lret
xchg
in
leave
dec
enter
out
adc
rcrb
test
inc
push
mov
add
dec
sbb
jmp
out
push
add
and
not
pop
roll
rcl
xchg
adcb
inc
dec
aaa
jp
andl
cmc
or
sbb
leave
and
sub
rclb
mov
loope,pn
ja
imul
mov
xor
jle
fcmovb
xchg
sub
mov
aas
adc
mov
xor
jb
xor
dec
repnz
in
mov
xchg
hlt
add
sbb
mov
ficomps
and
xor
xor
xchg
insl
jae
fs
loop
cwtl
mov
outsb
add
lock
push
test
push
addb
inc
dec
scas
mov
inc
or
xor
sbb
out
xor
xor
pushf
pop
imul
sbb
incb
sub
stos
cmpsb
scas
aaa
push
jp
add
fisubl
test
rclb
cmp
sti
js
stos
fidivs
xchg
xchg
stos
lret
inc
fucom
int3
add
xor
testb
mov
test
mov
leave
mov
outsl
pop
test
repnz
xchg
std
pop
adc
lahf
mov
or
dec
jg
loopne
test
sbb
jmp
or
add
icebp
out
es
popa
fidivl
jg
pop
push
add
inc
mov
dec
xlat
push
ret
lret
xchg
sub
xchg
mov
mov
outsb
inc
add
loopne
adc
pop
ror
scas
pusha
pop
loopne
mov
jne
fucomp
mov
mov
add
mov
mov
fs
xor
js
in
add
mov
add
sub
adc
pop
lret
xor
inc
and
cltd
dec
je
mov
cs
ret
pop
in
xlat
pop
fnstsw
dec
xchg
xchg
adc
popfw
and
push
add
fs
jle
xor
pop
mov
out
inc
or
push
daa
mov
movsb
cmpb
mov
inc
xorl
mov
rolb
imul
jle
jo
and
push
fmull
test
dec
cmpsb
xor
inc
cli
or
xorb
mov
clc
and
fs
xchg
cmc
inc
out
push
cmp
mov
leave
add
adc
xor
mov
in
pop
dec
aad
ja
fsubr
mov
lret
pop
enter
movsl
dec
out
daa
in
mov
out
push
xor
and
jo
loopne
cld
xchg
out
in
cmpl
jle
or
mov
scas
cmp
jecxz
xor
dec
aas
mov
dec
pop
arpl
xlat
mov
or
mov
mov
into
push
pop
mov
inc
cmp
mov
jno
and
mov
popa
and
xchg
cmc
sbb
lea
ljmp
pop
dec
push
popf
addr16
dec
popa
cs
shll
adc
lahf
mov
ret
and
or
arpl
and
setne
test
xor
repnz
sbb
cmp
call
repnz
xchg
cmpsb
xor
sahf
mov
push
dec
loop
adc
pusha
fcomip
int
into
xchg
inc
or
jmp
insb
fisubl
repz
cwtl
pusha
sti
daa
dec
mov
fistps
cwtl
mov
dec
dec
scas
cmp
negl
mov
cwtl
lcall
idivl
sub
pushf
jae
fsub
or
movsb
mov
insb
cmp
les
jle
fcoms
clc
in
dec
pcmpeqw
mov
lcall
push
shrl
and
aam
xchg
sub
sbb
ds
das
sbbl
pushf
push
mov
dec
cli
ds
daa
sbb
and
gs
xchg
lahf
mov
xchg
xor
adc
or
mov
mov
adc
pop
das
push
fsub
rcll
popw
pop
mov
stos
mov
xor
sahf
aaa
or
rcr
jle
scas
jnp
inc
xchg
xchg
xchg
dec
jne
or
pop
mov
push
adc
out
push
mov
cmp
inc
jne
cld
mov
or
out
push
bound
fs
movsb
mov
xchg
fmuls
dec
adc
cwtl
sub
out
push
pop
pushf
inc
loopne
pushf
xchg
rcrb
xorb
mov
pop
std
jbe
rcll
repnz
negb
xchg
sbb
lock
mov
addb
outsb
jp
add
add
es
jecxz
aaa
or
sub
mov
xchg
add
sti
and
aad
xor
lret
jne
mov
enter
pop
aaa
movsl
push
ja
int3
mov
les
push
mov
pop
push
sub
sub
or
adc
incl
loopne
lret
cmp
decb
aad
cmpsl
xor
sub
mov
andl
xor
int
mov
cmpsb
int
ljmp
push
pop
adc
subb
aas
lret
add
and
repz
aas
inc
sbb
add
ja
and
mov
add
cmpsb
out
cld
mov
outsl
test
lea
push
jecxz
xchg
shl
mov
cmp
xor
sbb
add
xor
xchg
mov
bound
aam
sub
in
jge
cmp
xchg
testb
lock
in
pop
popa
adc
push
mov
subl
dec
mov
mov
pop
sub
insl
in
cltd
or
push
dec
mov
movsl
negb
les
inc
mov
into
mov
cmpsb
dec
sarl
xorl
sbb
iret
ljmp
push
pop
push
movsb
cmp
daa
stos
mov
add
out
xor
jp
in
and
lds
mov
jnp
or
mov
outsl
cli
dec
hlt
stos
aaa
and
sbb
fwait
je
fsubl
test
mov
pop
xchg
fmulp
and
jae
xchg
sub
sar
test
ffree
aad
sbb
test
dec
sub
mov
sub
ljmp
xchg
push
mov
test
push
test
and
xor
sbb
jge
or
lret
das
sub
inc
mov
jne
cmc
xor
xchg
push
sub
push
idiv
add
aam
and
mull
inc
ss
sub
stc
enter
push
mov
push
lret
faddl
mov
pop
xlat
mov
idivl
jmp
and
jp
cli
cmovno
fwait
fwait
mov
sub
test
sbb
mov
mov
push
test
jo
mov
das
push
lea
test
sub
and
push
cmp
jbe
add
cmpsl
imul
mov
cmpsl
out
mov
or
loope
mov
add
ret
repz
and
inc
adc
aam
mov
sub
dec
enter
pushf
mov
jmp
xchg
xchg
pop
mov
aam
outsb
sub
jo
xorb
loop
xchg
test
aas
testb
inc
xchg
sbb
dec
mov
adc
pop
daa
cmp
xor
arpl
dec
push
inc
cmp
mov
fldenv
inc
pusha
sbb
rclb
mov
ja
push
xor
cmpl
inc
inc
in
add
mov
insb
inc
test
subb
inc
ja
js
mov
stos
add
mov
les
nop
xor
push
xor
icebp
mov
xlat
repz
ja
sbb
loope
pop
sbb
xor
cmp
je
test
jecxz
insl
inc
or
jp
test
dec
mov
inc
fcmovu
shll
xor
andl
push
icebp
aad
cmpsl
mov
jo
xlat
add
fmull
mov
ret
mov
adc
insb
inc
sar
and
mov
push
dec
xchg
repz
cli
out
ficompl
pop
je
negb
xchg
sti
popa
jp
mov
mov
jae
das
sbb
push
jle
pop
shr
rorl
data16
jbe
loope
aam
jo
arpl
xchg
pop
mov
adc
xorl
ss
loopne
or
nop
shlb
pop
pop
xor
out
mov
inc
mov
sbb
xchg
loop
shll
pop
lods
adc
lret
daa
jnp
or
mov
ficoms
leave
imul
adc
loope
fstpt
aas
cmp
out
fistpl
push
call
push
inc
adc
fcom
lahf
and
ret
fistl
fdivrl
sbb
icebp
jecxz
or
sti
gs
out
loop
adc
gs
mull
out
test
mov
jnp
xchg
scas
call
adc
sbb
mov
lods
out
sbb
adc
fdivrl
icebp
dec
pop
mov
cmpl
sti
les
ss
jmp
mov
jnp
sbb
cmp
das
jg
sub
mov
xchg
dec
and
popf
pop
out
and
movsb
sti
xchg
fmuls
jne
mov
adc
mov
adc
pop
stos
dec
jecxz
lahf
jne
js
rclb
xor
mov
jnp
push
pop
jb
jecxz
jle
dec
and
jne
lock
lods
cwtl
imul
in
pop
xor
cmc
ret
aad
in
out
jecxz
inc
shlb
or
xlat
in
sbb
mov
pop
mov
and
dec
movsb
xor
cli
and
mov
pop
test
pop
mov
data16
xchg
and
adc
ds
push
push
xchg
mov
std
dec
out
into
insl
mov
loope
addl
call
add
jle
mov
sahf
jl
push
inc
test
add
xchg
dec
lods
ja
in
test
cmp
ret
inc
push
push
jb
in
adc
es
inc
lds
scas
pop
jae
dec
fsts
push
jle
ss
lcall
xor
call
mov
scas
arpl
jge
bound
jo
xor
dec
iret
cmp
fistpl
dec
jbe
insb
lods
add
test
popa
and
xchg
jmp
jns
add
fs
or
test
test
mov
scas
sub
fimuls
push
mov
mov
adc
inc
shlb
incl
fidivs
sbb
addps
and
and
imul
test
out
mov
push
adc
and
int
adc
sub
cmp
add
cwtl
in
les
int3
andl
pop
mov
and
test
dec
mov
push
aaa
pop
and
jnp
add
cwtl
movsb
push
ret
ret
push
sti
cmp
mov
adc
mov
aas
stos
stos
dec
test
aam
lods
pop
sahf
pop
insb
out
pop
lea
push
xchg
add
mov
pop
stc
xor
repz
pusha
cmp
pop
fs
mov
xor
push
jp
cmp
mov
push
imul
hlt
hlt
or
fistps
lods
adc
cmpsb
shrl
and
xchg
xchg
das
inc
and
out
add
lods
or
or
or
jge
ja
sbb
stos
ret
cmp
stos
and
mov
or
jae
cmp
cmpsb
pop
mov
and
imul
les
push
dec
in
repz
loop
cmp
jae
sahf
and
and
pop
inc
mov
dec
pop
int3
icebp
inc
out
sub
jo
cmpsl
je
mov
ret
push
sbb
and
inc
xor
lea
push
lods
lret
jns
lret
mov
push
mov
sub
aam
dec
shlb
pop
pop
sub
es
addl
fmulp
pushf
xor
jge
mov
cmp
sub
std
push
and
filds
sbb
sbb
loop
or
fmull
sub
xchg
xchg
sti
xor
out
pop
lock
rorb
sub
rolb
movsb
nop
inc
mov
dec
lcall
ds
mov
test
shrb
shlb
imul
xor
push
pop
jnp
ret
arpl
out
dec
xchg
or
jl
dec
mov
ret
shlb
xchg
insl
jecxz
jge
and
pop
in
pop
push
inc
jp
xlat
es
and
sbb
dec
ja
adc
dec
or
cmpsb
push
inc
into
xchg
outsb
dec
cmp
ffreep
sti
popf
xchg
into
sub
loope
pop
adc
ds
mov
mov
push
pop
add
pop
loop
sub
inc
sub
mov
addl
mov
xlat
cmp
sahf
fwait
push
push
fldl
data16
inc
in
dec
xlat
out
or
sbb
in
adc
das
pop
dec
push
cwtl
mov
cmp
cmp
pop
shrl
inc
xchg
lock
out
sbb
mov
or
pop
xor
jo
and
in
or
fisttps
hlt
mov
test
popf
or
mov
dec
push
lret
cwtl
adc
data16
sub
imul
mov
lret
mov
pop
mov
outsb
data16
xchg
sub
xor
mov
or
mov
mov
xchg
sarb
inc
pushl
dec
shll
xchg
fwait
add
fmuls
jbe
adc
jo
stc
jnp
cmp
jae
sahf
test
int
nop
ss
add
adc
popl
mov
mov
aad
add
test
pusha
cmp
scas
xor
and
js
dec
stos
loopne
xchg
iret
cmp
cmpsl
lahf
dec
fldl
and
and
lock
je
or
cmp
sarb
movsl
or
jne
ja
sbb
test
jle
jp
mov
push
mov
and
mov
ljmp
iret
hlt
sbb
or
push
mov
xchg
push
shl
cmp
or
out
scas
add
xchg
mov
bound
sbb
and
pop
jb
popa
mov
hlt
push
push
xchg
mov
push
mov
or
add
and
and
and
in
cmpsb
mov
mov
cmc
or
fidivs
cmpsb
fwait
push
dec
push
hlt
add
jns
xchg
xchg
xorb
fwait
js
and
mov
enter
jl
mov
dec
sbb
jb
fmull
sub
jne
or
push
dec
fdivrs
insb
adc
daa
mov
xchg
pop
ret
jns
or
sti
cmpsl
mov
inc
jno
repnz
icebp
lea
push
mov
jb
xor
adc
pop
and
fildll
das
lods
fdivr
cmpsl
xor
int
shrl
cmpsl
jecxz
sub
xor
cmp
dec
gs
enter
imul
dec
mov
xor
addr16
ljmp
repnz
dec
into
mov
leave
adc
lods
xor
aam
lahf
sub
clc
dec
and
adc
mov
loop
jp
outsl
adc
mov
dec
andb
push
lock
cmp
push
fmul
lcall
xchg
add
or
in
idivb
call
pop
and
pop
push
in
mov
jge
cmp
mov
outsb
dec
push
sub
push
punpckhbw
js
inc
aas
arpl
and
push
bound
out
cltd
and
stos
fs
inc
adc
insb
xor
out
and
jl
mov
dec
adc
cmp
fwait
out
push
add
shlb
cmc
stos
sbb
imulb
xor
repnz
pop
push
cli
lods
adc
test
jle
movsb
mov
sbb
gs
push
enter
mov
cmp
mov
mov
sahf
ss
adc
ja
mov
xor
pop
push
mov
and
je
mov
mov
jbe
cmc
divl
in
popf
sbb
mov
xchg
jb
int3
lock
mov
loop
mov
push
mov
cmc
mov
push
push
jo
pop
jno
fldl
and
jo
or
xchg
in
push
fsubrl
icebp
sub
test
out
lea
xor
adc
dec
nop
lret
ficompl
clc
sti
subb
mov
xchg
movsb
mov
lods
cltd
push
xor
fisubl
mov
mov
xchg
add
ja
loop
xor
jp
xor
add
lret
xchg
in
mov
ret
lea
test
and
mov
and
xchg
call
and
push
inc
push
sub
xchg
mov
fidivs
out
icebp
cmpsb
insl
ret
mov
pusha
aas
dec
dec
xchg
dec
js
and
cmp
mov
inc
fsubs
sub
pushf
fstpl
mov
stos
xchg
cmp
shll
loope
in
mulb
xchg
xchg
scas
mov
pop
pusha
jne
jmp
aaa
pop
sub
testb
lock
sti
sbb
sub
insl
xor
adc
out
shll
pop
in
in
xor
inc
ds
jg
aaa
lods
inc
jecxz
shlb
pop
stos
stos
out
call
dec
add
pop
pop
popf
jae
daa
jl
outsl
and
dec
rcr
jo
test
sbb
and
mov
fnstsw
cmpsl
loop
orl
das
lahf
mov
dec
push
adc
mov
int
xchg
push
inc
ret
inc
jb
popf
pop
fwait
lret
inc
cwtl
rclb
cmp
clc
ljmp
icebp
pushf
lods
aas
stos
in
cmp
rcl
ret
jle
data16
shlb
jbe
inc
dec
push
add
adc
cmp
mov
data16
and
mov
jb
jnp
fdivr
insl
fists
push
cltd
jnp
or
mov
mov
pop
mov
mov
mov
dec
sti
leave
jecxz
mov
repz
or
lods
in
inc
xor
pop
addr16
das
popf
sub
xchg
das
clc
cmp
cmp
or
fmull
jle
dec
ja
cmpsb
into
shrl
or
out
int3
mov
inc
xchg
fstp
jnp
dec
clc
sarl
pusha
xor
lds
mov
orl
lret
sbbl
sbb
pop
shlb
mulb
clc
stos
jnp
lods
fmull
scas
notl
imul
clc
mov
pop
dec
jle
and
mov
out
sarl
stos
mov
mov
cmp
lret
xor
sbb
push
mov
jle
fnstenv
cmp
loopne
lret
sbb
sbb
adc
data16
hlt
jae
sar
lods
pop
dec
xchg
adc
popf
aaa
sbb
push
jecxz
dec
out
movsl
mov
xor
pop
lea
push
movsl
repnz
out
mov
lret
data16
sub
fsts
push
outsl
fwait
int3
push
mov
scas
ret
scas
and
cmpsl
aaa
lods
inc
jmp
out
dec
addr16
pusha
cmp
lea
sbb
clc
xor
add
cmpsb
in
jl
mov
mov
xor
fbld
in
ds
repnz
xor
cmc
pop
fcomps
push
rorl
inc
jne
aad
fbld
fsubs
fcmove
jl
into
andl
arpl
sbb
adc
lods
fmull
ror
xchg
xchg
shll
push
adc
idivb
ljmp
push
lds
es
arpl
pop
int3
sub
data16
pop
lods
mov
pop
bnd
xor
fists
push
loope
mov
das
mov
clc
popf
add
inc
cmp
ret
rclb
xor
inc
cld
fwait
fs
fwait
cmpsl
js
inc
icebp
and
jp
loope
jecxz
out
lods
pusha
arpl
iret
pop
stos
and
push
mov
cli
aas
or
fst
mov
int3
rorl
xchg
fwait
xchg
fcom
pop
clc
xor
jo
cli
into
mov
add
test
js
sbb
js
lahf
jns
ja,pn
test
push
hlt
test
jle
lds
pop
lcall
and
mov
push
or
jl
ret
movlps
pop
divl
adc
andl
push
jo
mov
int
mov
and
pop
push
mov
mov
into
test
mov
jnp
jmp
sub
fcom
inc
ljmp
ljmp
je
push
aam
xchg
insb
testl
pop
sub
push
dec
add
mov
mov
aaa
or
in
rcr
xor
xor
mov
rclb
pop
mov
mov
mov
or
movsb
pop
jns
sub
movsl
mov
mov
rorb
sbb
xor
adc
sub
aaa
test
dec
pop
xchg
loopne
call
sub
xchg
or
xor
adc
mov
mov
jo
jmp
repnz
int
sub
or
add
add
xchg
loope
scas
mov
insb
jae
sbb
pop
xor
xor
shll
sbb
xor
xchg
push
cs
scas
add
jl
aaa
fnstsw
xor
adc
ja
testl
cmp
xchg
add
xchg
imul
mov
or
mov
ss
test
adc
pop
mov
mov
cmp
push
pushf
insb
xchg
inc
sub
mov
call
adc
push
call
jne
mov
inc
andl
dec
push
dec
cmpl
aas
cmc
mov
mov
jmp
sub
pop
xchg
push
cmc
inc
fs
fnsave
adc
pop
loope
lods
std
push
adc
sarl
mov
imul
adc
mov
push
test
shl
mov
and
ret
cli
push
icebp
and
clc
add
or
and
jp
outsb
mov
insb
jmp
rorb
dec
inc
jg
imul
stos
outsl
mov
rcl
outsl
push
sub
push
pushf
ja
xor
lods
inc
sub
fnstenv
out
aam
cltd
pop
xor
inc
mov
mov
dec
push
nop
lahf
inc
fisttps
fstpl
inc
adc
and
mov
iretw
roll
dec
int
and
inc
pop
xchg
shlb
pop
ret
dec
leave
ss
movsl
in
cmc
push
xchg
fwait
lret
ljmp
insb
mov
movsb
cmc
fdivrl
mov
cmpl
xchg
aad
ret
mov
loop
jmp
inc
push
ds
les
sahf
mov
stos
or
jns
outsb
adc
sbb
pop
pop
adc
mov
sub
mov
push
lret
xchg
inc
ret
sub
pushf
xor
mov
sub
pop
adc
and
xor
iret
adc
and
sbb
jo
popa
xchg
inc
in
dec
xchg
push
out
fidivrl
fidivrs
mov
andl
push
pop
dec
adcb
ljmp
jb
mov
jnp
roll
call
cltd
out
fnsave
lea
ret
fsts
test
cmpsb
dec
cmp
add
dec
mov
cmp
in
sbb
push
lahf
inc
jne
loope
mov
inc
jno
dec
enter
and
sub
inc
or
mov
mov
rcr
out
repz
mov
pop
cld
xor
outsl
xor
out
daa
sbb
out
push
mov
rcl
dec
jno,pn
push
adc
insl
cltd
ret
push
sbb
sti
or
cmpsb
ret
mov
sbb
cmc
xchg
out
loop
loopne
mov
test
jl
adcb
mov
mov
sbbl
test
xorl
adc
cmp
xor
arpl
or
enter
sub
sahf
add
pop
add
inc
sub
call
xchg
inc
insl
mov
and
or
lock
aaa
repnz
inc
int3
dec
mov
fiadds
xor
push
mov
push
mov
mov
bound
add
xchg
pop
hlt
jb
mov
sti
sub
jno
loopne
in
out
icebp
xor
or
mov
lret
insb
fbstp
lret
and
fistl
cmp
mov
jb
clc
cmp
add
jp
repnz
stos
movsb
mov
pushf
cmpsb
sbbb
xchg
setle
adc
push
movsb
or
push
int3
daa
cmp
push
adc
addr16
mov
pop
jne
std
mov
adc
cmpsl
mov
dec
cmp
jmp
sub
ret
mov
dec
dec
xchg
shlb
mov
loopne
cmp
xlat
test
push
lds
sub
outsl
sbb
cmp
arpl
movsb
fisubs
fcomp
cwtl
push
and
xorl
cmp
dec
xor
and
add
sbb
repz
outsl
sbb
add
pop
sbb
loope
leave
xor
mov
mov
scas
lahf
mov
je
pop
xor
pop
push
sub
and
mov
or
jb
jg
movsb
icebp
js
mov
sahf
outsl
fadds
std
push
fisttpl
das
cmp
xchg
push
fucomp
roll
ret
jae
cmp
pop
mov
jecxz
int
dec
imul
ficompl
xor
inc
inc
push
and
lret
inc
arpl
je
xchg
dec
shll
out
push
sub
imull
xor
inc
testb
sti
mov
lods
inc
and
gs
dec
mov
in
and
mov
rcrl
and
mov
cmp
pop
add
mov
add
jns
cmp
ret
out
cmp
nop
ja
insl
jmp
cmpsb
pop
xchg
or
fcmovu
cltd
dec
mov
pop
aas
jns
adc
dec
sar
push
cmp
clc
xchg
lfs
xor
xor
out
psraw
adc
stos
imul
sub
lods
mov
dec
cs
mov
sbb
fcoms
ret
and
ja
insl
xor
xchg
icebp
lahf
jns
push
fs
xor
jge
loopne
jge
rcrl
sbb
and
sbb
jle
mull
mov
or
rol
nop
sbb
imul
pushf
enter
inc
lahf
jo
add
int
popa
stc
dec
xchg
and
int3
cwtl
inc
mov
push
jmp
pop
mov
lods
add
dec
ljmp
and
push
stos
loope
in
sub
add
dec
sub
inc
jb
lock
ss
ret
loopne
out
ret
cmc
popa
mov
cmpsb
les
aaa
ud0
mov
fnstsw
add
inc
add
or
mov
mov
xchg
aad
xrelease
out
cs
fists
arpl
sub
int
adc
xchg
and
aad
push
in
sbb
add
enter
mov
dec
imulb
outsl
in
xchg
xor
add
stc
sbb
xchg
add
pop
nop
enter
pop
in
aam
mov
and
xlat
pushf
sub
sub
aad
push
adc
inc
pop
test
mov
or
ss
or
dec
xor
in
jp
rcll
mov
lods
cmp
xchg
xchg
test
icebp
adc
cs
stos
dec
outsl
mov
inc
stos
and
int3
shl
cmc
in
stos
shll
lahf
mov
pop
pop
and
aas
sbb
jmp
bnd
js
xor
jne
fsubrp
dec
and
in
movsl
and
loope
leave
loope
inc
stos
pop
pop
mov
push
push
clc
imul
js
sub
push
clc
mov
xchg
data16
mov
popa
fldt
jmp
mov
or
fstpl
outsb
jns
call
mov
xor
roll
ficomps
repnz
ds
sahf
mov
or
movl
xor
int3
adcb
cmp
incb
das
lcall
push
mov
daa
or
inc
fsubl
roll
sbbl
and
fimuls
mov
adc
leave
push
sbb
dec
dec
pop
xor
je
mov
test
or
mov
mov
sbb
xchg
aad
sbb
inc
fldt
fidivs
jl
jae
loope
sbb
xor
es
add
xor
push
mov
pop
xchg
cli
jo
jb
mov
jne
sub
lea
scas
xor
and
jae
fwait
pusha
std
push
dec
push
cmp
pop
dec
sbb
aam
jnp
jg
dec
test
or
xor
sbb
sbb
loop
pop
xor
les
filds
adc
xchg
cmpsb
dec
popf
iret
sub
add
shlb
xchg
inc
loope
aam
rcl
ljmp
adc
out
push
data16
xor
jle
cli
cmpsl
jge
mov
fldcw
or
xor
enter
pop
orb
ficoms
lcall
pushf
push
sub
decb
std
fcomi
mov
xchg
mov
dec
cmpsb
pop
test
jl
out
sahf
xchg
cld
lds
sbb
fildll
pusha
pop
clc
stos
scas
mov
mov
dec
test
or
es
fstps
add
adc
fbld
fcmovbe
jp
in
rorl
push
sbb
inc
mov
sub
xor
sub
cwtl
test
add
push
ds
inc
inc
fistps
or
shlb
pop
rorb
aaa
dec
mov
iret
stos
loopne
es
push
stc
test
push
ret
dec
ss
fsubs
scas
or
dec
mov
lock
xchg
pop
sbb
xlat
push
lds
inc
push
push
cmpsb
sahf
fildll
or
hlt
fdivrl
fwait
stos
sbb
addl
popf
and
xchg
lea
cltd
imul
cli
testb
imul
pop
cs
les
cld
ret
aam
stc
cmpsb
repz
jbe
or
dec
adc
inc
and
add
mov
mov
test
cmpsb
pop
stc
lods
arpl
jecxz
mov
inc
movsl
and
push
ret
les
arpl
inc
lea
lret
clc
xchg
imul
xor
pushf
test
xor
add
pop
xchg
dec
xor
popf
sarb
sub
mov
mov
and
push
jns
adc
xchg
cmpsl
dec
pop
jne
cmp
into
mov
mov
hlt
aas
pop
fsubl
sahf
cmp
scas
sbb
cmc
xor
data16
pop
push
pop
int
dec
das
pushf
ds
xchg
es
outsl
dec
jae
pop
mov
push
rcr
push
arpl
pop
mov
mov
sbbl
push
imul
hlt
xor
inc
fucomip
sbb
cld
into
out
out
push
in
data16
je
sbb
sub
out
mov
inc
jo
movsb
pop
dec
jecxz
inc
xor
adc
js
inc
aaa
add
dec
jne
fisubs
adc
sahf
xor
fdivr
mov
or
repz
xor
sbb
jo
out
aam
sub
xor
testb
cmpl
and
add
aas
xchg
dec
stos
fs
hlt
cld
jmp
dec
adc
adc
mov
mov
push
dec
outsl
filds
bnd
adc
dec
aaa
nop
or
lods
mov
pop
cmp
adcb
lret
loop
movb
sub
xchg
inc
add
cld
lahf
pusha
rorb
test
jl
mov
and
loop
jl
push
mov
sbb
push
nop
sub
jg
inc
add
push
loope
adc
xor
repz
fidivrl
lock
setne
push
or
jae
fidivrl
repnz
aas
jbe
dec
add
and
dec
pop
imul
das
mov
inc
push
daa
dec
aad
mov
out
rorl
pop
cmp
gs
mov
inc
outsl
scas
cmp
xchg
jae
add
sbb
mov
adc
jl
inc
rorl
mov
sub
pop
fists
xor
loope
std
pop
mov
aaa
pop
rorb
jns
fiaddl
scas
xchg
push
push
ret
shll
das
push
insl
push
lcall
mov
mov
sbb
mov
shrb
jp
jbe
loop
pop
xor
and
lods
mov
push
xchg
fcoml
outsl
je
mov
push
repz
cmp
lcall
stos
clc
dec
xlat
or
shr
jb
aas
and
imul
add
lds
pop
ljmp
add
pop
and
sbb
cmp
mov
testb
and
mov
dec
cmp
dec
mov
adc
movsb
pop
pop
add
outsl
cmp
mov
push
test
imul
xor
xor
popf
mov
push
or
dec
fimuls
fimuls
xor
push
pusha
push
js
push
adc
fdivrl
gs
mov
mov
addl
push
adc
cmc
push
add
neg
int3
push
shl
shlb
cli
jecxz
bound
outsl
mov
xor
push
pop
shlb
pop
shll
push
adc
divb
fstpl
sti
and
cmpsl
sbb
mov
test
stc
inc
test
inc
jge
ss
fwait
jmp
test
sbb
aad
dec
popa
test
iret
cmp
sbb
nop
mov
out
adc
xor
xchg
cmp
or
sti
sahf
outsb
mov
mov
mov
in
gs
aas
cmp
lods
xor
ret
xchg
mov
xlat
vpaddq
mov
or
into
dec
jg
sbb
cmp
loope
push
cmp
cli
shll
insl
mov
mov
mov
or
push
add
add
push
sub
nop
jns
and
push
mov
push
or
sbb
movsl
push
arpl
and
int
or
push
jnp
jno
sub
ds
cli
adc
fists
cmp
test
jo
das
mov
sub
lret
xor
inc
adc
and
xchg
lret
scas
inc
iret
xchg
pop
jo
fwait
mov
inc
test
mov
dec
mov
push
mov
sub
dec
jae
test
dec
pop
adcl
pop
nop
xchg
scas
cmp
or
inc
fidivrl
add
adc
lods
movsl
push
aam
jns
lea
iret
and
out
fsubrs
mov
pop
mov
in
stos
and
mov
add
sbb
call
sti
cs
jmp
leave
sub
pop
sub
mov
test
aas
popa
push
and
xor
shl
mov
mov
imul
ds
add
adc
and
ds
mov
adc
jo
jmp
shlb
lret
cmpsb
adc
int3
adc
stos
mov
pushf
shl
fmul
xor
pop
test
mov
inc
ficomps
ss
and
push
test
or
cmp
and
jno
add
push
push
or
xchg
mov
jb
sub
mov
sub
lds
mov
cmp
and
arpl
xor
or
jbe
paddd
jns
jl
xchg
mov
cmp
cmpsb
cmp
repnz
cmp
mov
adc
xor
xchg
lods
cmp
or
push
xor
sti
arpl
imull
lods
dec
movsb
not
cltd
jo
adc
dec
adc
jb
rorl
dec
sbb
add
xor
test
push
pop
jp
insw
clc
test
imull
dec
test
pushf
ja
cs
cmp
cmp
clc
inc
rcrb
aad
add
inc
cmp
std
scas
mov
out
xor
loope
les
movsb
andb
pop
out
repz
jmp
cmp
xor
mov
push
test
in
sub
or
ret
push
push
mov
dec
lods
mov
adc
mov
fstl
jmp
and
jmp
mov
inc
cmp
out
cmp
xor
xchg
xor
xchg
out
das
sub
arpl
jp
ja
inc
push
out
mov
daa
dec
push
test
sub
or
and
shrl
jno
sbb
jns
daa
mov
cmp
mov
lods
inc
sti
adc
adc
adc
inc
bts
out
pop
jno
mov
cs
cmpsb
in
add
imul
push
pop
jle
push
xchg
movsb
ljmp
or
movl
add
or
push
mov
jecxz
std
lods
xor
nop
or
jp
les
and
jle
mov
and
aam
mov
xor
cmp
mov
add
jle
loope
into
gs
adc
jns
les
out
test
bound
sti
lods
and
aam
icebp
add
in
adc
cwtl
xor
pop
frstor
dec
push
fists
clc
scas
leave
push
adc
mov
xorps
pushf
mov
pop
mov
jae
fiadds
mov
hlt
adc
imulb
xlat
ja
dec
fildl
je
jge
adc
lcall
imul
les
das
lock
lret
jp
mov
mov
mov
add
dec
add
testb
inc
mov
push
jge
hlt
jne
mov
add
and
cmp
mov
fbstp
daa
lret
sarl
push
dec
and
mov
scas
cmc
and
adc
das
out
test
mov
mov
jge
in
inc
xor
mov
lds
cltd
xor
lcall
mov
inc
movsl
sub
xor
xlat
sub
jecxz
inc
xor
push
int3
jnp
lahf
lea
rcrl
imul
shrl
jge
int3
int
sbb
sub
aas
pop
movsl
inc
mov
mov
in
jl
dec
jbe
inc
mov
add
jbe
push
mov
in
jge
divl
bound
mov
insb
adc
xor
daa
scas
ljmp
xor
movsl
dec
lret
lret
dec
mov
mov
fstl
es
rol
repz
mov
lock
test
jmp
inc
xor
cld
inc
mov
sub
cmpb
jns
adc
addr16
outsb
sbb
sub
int
call
xor
hlt
scas
push
roll
mov
cltd
int3
xor
pop
pop
lds
mov
inc
xchg
xor
and
mov
add
adc
jnp
les
loope
out
sub
int3
or
pop
test
nop
or
xor
jg
addr16
sbb
lds
stc
sub
sarb
jp
call
sub
loope
ja
mov
mov
mov
dec
adc
xchg
loopne
xchg
sub
add
mov
enter
adc
xchg
mov
cmp
or
jge
aaa
pop
mov
or
fmull
push
sub
push
jo
nop
mov
dec
xchg
hlt
mov
in
bsr
and
popf
push
jmp
push
adc
jae
mov
add
pop
repz
out
jge
sub
shrb
xor
stos
push
dec
test
push
lods
insl
jle
icebp
fcompl
je
push
jb
push
cmp
adcl
or
sbb
adc
mov
add
and
mov
pop
or
xchg
in
out
adc
cwtl
mov
ficompl
sti
xor
mov
mov
repz
jns
push
pop
xchg
mov
fimull
mov
mov
jbe
rclb
out
xor
jns
sub
xchg
sub
mov
adc
int
sbb
fdivrs
cs
inc
mov
inc
push
inc
pusha
loopne
mov
lods
repnz
dec
stc
addr16
mov
fiadds
lcall
push
inc
leave
push
scas
popa
mov
lods
pop
inc
push
or
mov
stos
es
les
add
out
mov
rolb
push
js
inc
filds
xchg
or
xchg
in
pop
pop
ret
push
push
xchg
or
cld
daa
pop
andb
outsb
cmp
sub
lds
test
sbb
jmp
shlb
pop
clc
jns
push
mov
sbb
fxch
je
mov
mov
adc
scas
daa
inc
out
movsl
dec
pop
jl
sub
push
inc
inc
in
les
mov
push
in
add
and
fmull
jae
pushl
push
push
iret
push
int3
or
xchg
adc
leave
sbb
pop
cmp
call
pop
setl
nop
hlt
lea
cmp
hlt
adc
pop
outsb
cmp
in
outsb
push
aad
jb
rcrl
sarb
loopne
adc
sub
lods
scas
xor
dec
dec
fsub
icebp
sbb
clc
int3
add
ja
push
xchg
call
sbb
mov
cmp
ret
mov
jns
loope
mov
push
xchg
xor
cmc
xchg
xchg
pusha
jb
jp
or
imul
xchg
cltd
sbb
loope
dec
fstps
dec
or
repz
aam
scas
add
and
xchg
test
stos
jp
and
sub
movsl
xchg
add
jbe
mov
or
push
outsl
pop
jge
pushf
dec
mov
cmp
xchg
or
cmp
adc
sub
push
dec
dec
adc
cmp
je
push
jae
in
adc
jae
sub
fsubl
fwait
mov
cmc
mov
aas
xor
in
dec
adc
incb
sti
int
sub
fisubl
ds
pop
cmc
mov
xchg
xor
xor
push
lret
ficompl
test
test
dec
inc
xchg
stc
faddl
jnp
fisubrl
call
pop
int3
out
pop
aas
movsl
rorl
or
pop
mov
cmpsl
js
aaa
mov
mov
inc
xor
shr
out
iret
out
cmp
sub
imul
test
sti
dec
aaa
xchg
adc
pop
jb
in
jbe
mov
xor
icebp
xor
mov
and
xchg
sub
inc
inc
gs
imul
mov
or
inc
xchg
std
cli
outsb
jmp
shll
out
ss
lea
mov
dec
push
cmp
xchg
fildll
inc
pop
addr16
mov
xchg
pushl
iret
les
adc
xor
adc
ljmp
mov
mov
add
or
data16
aaa
push
popl
xor
xchg
fs
mov
xor
jnp
ret
inc
xor
adc
push
mov
inc
push
cmc
xchg
sbb
push
outsl
mov
rcrl
jbe
xor
ret
leave
mov
rclb
popa
cmc
cmp
lret
cmp
xchg
mov
stc
dec
arpl
push
sub
jbe
xchg
orb
je
lock
das
fisubs
or
push
mov
mov
dec
into
add
xchg
cs
sarl
cmp
rcll
lret
into
loopne
dec
mov
mov
cltd
mov
inc
mov
popa
sti
push
loop
or
leave
shrb
xchg
xchg
mov
cmp
xlat
sbb
mov
imul
movl
adc
stc
rcl
cmp
das
shr
popf
decb
nop
sub
mov
movsb
popa
pushf
sbbl
mov
mov
lods
dec
jns
scas
mov
xchg
cmp
cmp
in
mov
xor
rol
popa
mov
addb
aam
popf
sbb
out
pushf
xor
mov
dec
daa
adc
sub
and
and
andl
aam
scas
inc
stc
push
dec
enter
dec
fwait
cmc
arpl
lret
xchg
ljmp
xchg
fldenv
divb
leave
sub
sub
dec
es
popf
popa
fldcw
push
leave
adc
jle
cmp
ss
mov
test
loopne
cs
icebp
into
je
test
dec
pop
ss
mov
mov
pusha
push
and
and
scas
add
xchg
out
xchg
cmp
mov
stc
jl
fstl
pop
int3
outsb
dec
inc
cmp
ss
xchg
int3
cltd
leave
pop
cmc
test
jle
xchg
xchg
fcomps
sub
inc
lock
pop
outsl
cmp
movsb
mov
mov
stc
xor
sbbl
push
ss
lahf
nop
shrl
lahf
push
fwait
mov
push
push
push
enter
outsl
cld
addr16
sarl
push
cmp
pusha
fdivs
lock
loop
jl
movsb
inc
rcll
pop
fdivrs
ffreep
lret
not
fisubrl
pop
lods
mov
sub
addr16
movsl
push
nop
test
push
xchg
cwtl
shrb
pop
in
fistpll
push
adc
cmp
or
push
mov
mov
or
inc
mov
repz
dec
sbb
sub
pop
test
shrl
dec
test
cmp
imul
sub
cs
jp
and
jae
shlb
stos
pop
push
sub
inc
rorb
adc
mov
sahf
cmp
and
aas
sub
or
push
adc
cmp
div
popa
testb
les
sbb
clc
push
inc
hlt
shrb
mov
mov
xor
add
mov
inc
das
mov
outsb
fwait
les
outsb
lret
stc
shl
mov
xchg
test
add
xchg
lds
mov
sar
shl
sti
push
cmc
inc
jbe
cmp
imul
xchg
in
lahf
pop
inc
push
out
xchg
adc
lods
jne
aad
mov
sub
mov
and
cs
or
rcrb
jb
or
xor
shrb
lea
jae
pop
pop
test
cwtl
hlt
adc
cli
je
xchg
mov
int
std
pop
adc
stc
cwtl
fstl
mov
hlt
dec
addr16
rorl
popf
enter
adc
adc
add
lcall
fisttpll
lds
mov
dec
dec
xchg
mov
push
add
cmc
dec
mov
nop
and
mov
shlb
and
nop
out
pop
lock
shlb
jno
cmp
int3
inc
lock
aas
cmp
popa
iret
mov
push
mov
mov
xchg
and
pop
mov
sbb
or
aas
add
xchg
xchg
sub
aad
mov
decb
movsl
sub
daa
sbb
scas
pop
ret
cmp
jle
cmp
and
pop
ja
jae
jbe
je
daa
pop
adc
or
mov
repnz
mov
xor
gs
dec
push
sbb
xchg
fldcw
decb
aaa
fucomi
clc
ja
cld
es
push
push
or
and
aam
out
data16
push
adc
lret
sub
xchg
jmp
dec
mov
js
push
sbb
out
pushf
sbb
lods
dec
movsb
clc
mov
outsl
les
adc
mov
pop
xchg
pushl
add
test
cltd
imul
mov
xor
cmp
enter
cwtl
and
ss
movsl
out
or
push
mov
xor
lahf
idivb
adc
push
iret
int3
subl
mov
mov
ss
cmovs
pop
xchg
and
cmp
mull
xchg
xor
and
lahf
pop
push
and
pop
sbbb
cmp
les
mov
and
dec
pop
push
fisubs
pushf
cltd
dec
mov
mov
cli
xchg
les
cmp
lcall
fs
in
aas
xchg
dec
mov
dec
cmp
mov
mov
test
cmp
xlat
push
pop
jg
lcall
dec
add
pop
stos
mov
imul
js
adc
push
push
xchg
pushf
stc
xor
push
mov
or
insl
ljmp
fwait
mov
dec
sub
mov
loope
sbb
loope
jg
ss
bound
pop
ja
xchg
addl
xchg
pop
cmp
cmc
jne
push
mov
neg
aam
mov
adc
inc
sbb
pop
aad
or
cmp
pusha
test
aad
push
mov
xchg
cmpsl
sbb
lods
in
push
jl
push
ret
sar
loope
and
xlat
lahf
or
enter
mov
and
xchg
add
sbb
fs
adc
dec
adcb
mov
jg
mov
stc
jo
dec
inc
lcall
adc
das
out
or
in
iret
cmp
pop
enter
inc
pop
mov
push
sub
test
out
mov
fstl
leave
popf
ds
add
xchg
push
fidivs
daa
loope
sbb
outsb
and
les
mov
jbe
fstl
mov
xchg
es
dec
les
shlb
sbb
imul
jge
inc
xchg
les
gs
xchg
popa
aaa
inc
xchg
test
mov
sbb
sbb
mov
pop
sbb
jle
jo
orb
fstl
repnz
repnz
outsl
les
jb
les
sub
mov
loop
dec
lahf
iret
aam
cmp
stc
add
pop
jle
imul
sbb
lea
fucomip
mov
inc
aaa
mov
jno
pushl
push
fisubs
es
pop
imul
mov
bound
out
mov
or
inc
adc
shrb
ror
jae
pop
or
lret
arpl
enter
add
nop
and
int3
lea
jge
or
pop
test
mov
mov
call
pop
insl
popf
lret
lea
pop
addb
cld
notb
jne
jne
mov
les
mov
sub
jns
jb
push
inc
push
push
inc
mov
mov
mov
in
sbb
jne
or
pop
and
sub
insb
xchg
push
les
and
imul
popa
loope
movsl
hlt
xchg
negb
xlat
mov
dec
bound
cmpsb
pusha
iret
icebp
pop
popa
cmp
std
xchg
adc
scas
sbb
pop
fs
xchg
adc
mul
xchg
fwait
lock
sarl
jp
mov
cmpsb
dec
add
lea
xor
push
jmp
test
pushaw
cmp
adc
imul
sbb
or
ss
and
inc
jecxz
push
jbe
jmp
into
vcvttss2si
cmc
loopne
stc
addr16
jns
xchg
call
sub
std
in
repnz
addr16
push
dec
add
push
mov
std
out
mov
cld
xor
pushl
int
scas
mov
xor
and
nop
mov
dec
rcl
fwait
adc
dec
stos
subl
sbb
das
lcall
xchg
jno
mov
lods
pop
jnp
sub
ds
adc
sub
cld
xchg
fcmovnu
das
or
xchg
or
movsb
fucom
mov
sub
addr16
cmp
arpl
xchg
pop
sbb
dec
sbbl
or
imul
sbb
mov
fbstp
leave
call
mov
xchg
dec
jne
mov
nop
pushf
push
pop
xor
cmp
cmpsb
dec
ds
cmp
das
mov
sbb
out
xchg
dec
jns
gs
aad
dec
jne
test
rolb
lds
push
out
mov
in
push
pusha
into
xor
idivb
sbb
insb
loope
hlt
jb
xchg
mov
xchg
mov
jne
xor
nop
adc
cmc
out
inc
jg
mov
pop
mov
push
pop
xchg
pop
pop
sub
sti
add
fisubs
lret
stos
xlat
mov
xchg
mov
movsl
cmp
aam
or
cmp
in
inc
cli
inc
out
popf
mov
call
xchg
mov
push
cmp
xor
xchg
lock
adc
xor
pop
pop
inc
and
xchg
inc
adc
testl
outsb
dec
pop
adc
out
fstl
int3
sub
or
cmp
ja
xchg
fidivl
mov
loope
imul
psllw
mov
mov
cmp
fdivrs
push
cmp
call
stc
insb
loopne
div
adcl
or
xchg
fidivrs
outsl
xor
or
int3
xchg
ja
filds
xchg
out
insl
fnstsw
into
cmp
sbb
mov
and
out
mov
xchg
sarl
sub
sbb
ficomps
fwait
clc
cmp
push
pop
push
cmc
mov
push
popa
ja
push
std
mov
addr16
nop
cmpsl
sub
pop
jge
adc
scas
jecxz
call
xchg
loope
sahf
and
insl
decl
and
fildl
lcall
add
cmp
sbb
cmpsb
call
xchg
dec
push
cli
xchg
call
lahf
std
inc
mov
mov
inc
mov
xor
sbb
xchg
pushf
jnp
xchg
cmp
es
or
fisubs
rclb
rorl
aad
jp
pop
into
mov
stc
mov
adc
dec
notb
sub
stc
int
ret
clc
out
or
cli
mov
mov
rol
leave
loopne
daa
push
pusha
mov
mov
push
scas
mov
dec
hlt
cs
repnz
test
xor
out
mov
add
xchg
xchg
orb
sbb
ficoms
pop
neg
inc
mov
push
test
bound
push
pop
add
mov
and
cmpsb
test
mov
es
arpl
or
and
lods
test
adc
xchg
adc
cmpsl
cmc
xchg
mov
mov
neg
std
mov
je
mov
ret
mov
or
pop
xchg
divl
mov
add
insb
sub
jecxz
ret
sbb
cs
xor
sbb
xchg
jl
shll
imul
lret
jg
testl
xchg
aaa
jge
pusha
or
repz
clc
jnp
add
pop
mul
push
adc
dec
test
pushf
popf
sub
mov
push
in
das
push
inc
mov
movsb
and
loopne
push
rorl
loope
ljmp
orb
push
pop
mov
mov
push
xor
inc
iret
lahf
sub
jae
and
stc
adc
lcall
inc
dec
int3
xchg
aaa
dec
cli
add
rcrb
ret
cmp
cmp
sub
pushf
mov
stos
hlt
test
mov
movsb
adc
cmpsb
push
mov
fwait
mov
push
cli
mov
mov
cli
jl
jle
dec
and
int3
mov
mov
push
ficomps
icebp
dec
push
xchg
pushf
inc
adc
shrb
pop
clc
out
pop
mul
mov
mov
push
nop
cmc
fsts
adcl
mov
int3
sahf
outsl
popf
sar
pop
adc
mov
dec
cmp
call
mov
out
enter
inc
into
out
mov
fwait
cmpsb
hlt
inc
stc
add
cs
inc
out
repz
push
lods
dec
fmull
or
jp
adc
jp
loope
push
jns
lds
into
dec
adc
mov
pop
fdivr
lock
in
out
int
push
mov
add
fnsave
je
out
sarl
imul
les
xchg
daa
iret
push
leave
sub
insb
inc
cmp
mov
call
enter
inc
ljmp
pop
fistl
mov
xor
xlat
push
lret
dec
xchg
cld
push
cmpsl
mov
lret
mov
push
xor
scas
cwtl
sbb
fwait
push
dec
test
inc
jb
dec
adc
dec
jl
mov
iret
inc
add
icebp
jg
mov
add
dec
pop
push
sbb
ss
outsb
jg
bound
adc
inc
lods
mov
mov
and
mov
xchg
mov
push
mov
lret
decb
sub
pop
ret
mov
imul
nop
rcl
cmp
mov
jge
or
add
stos
pop
cmpsb
sbb
shr
xor
hlt
es
pop
roll
push
lds
xchg
xor
xchg
shrb
jo
fstl
sub
jmp
pop
push
stos
dec
push
mov
mov
dec
enter
cmp
aad
je
push
dec
cmp
dec
fsubl
pop
in
xor
push
cmp
cmpsl
fs
mov
mov
inc
push
sub
push
test
aam
cwtl
mov
mov
push
mov
xorl
cmp
std
jb
mov
cs
inc
clc
popf
sub
outsl
cltd
sub
insl
ret
dec
in
dec
imul
gs
or
cld
pop
xor
sbb
ljmp
dec
imul
adc
or
mov
lds
cmpsl
cmp
filds
adc
and
stc
and
adc
ret
pop
xor
or
icebp
jl
in
push
aaa
bound
mov
xchg
iret
cmp
inc
jp
push
sarb
lods
inc
inc
mov
xchg
cmc
sbb
cmc
lahf
mov
pop
filds
inc
test
dec
sahf
pop
outsl
cmpsl
in
sub
or
je
and
pop
push
adc
pop
pusha
xor
daa
inc
lret
fstl
cmpsl
sbb
push
sub
push
inc
insl
add
mov
cmp
sub
rcrl
shll
aad
in
mov
xchg
cmpsb
iret
test
jmp
loop
jl
dec
xor
cmp
enter
mov
repnz
fxch
ror
imul
daa
adc
cmpsl
inc
jno
out
daa
add
dec
sbb
insb
adc
inc
pop
in
pusha
jns
inc
iret
xor
cs
rcll
lret
loopne
jecxz
push
or
push
into
ljmp
scas
arpl
addr16
repz
push
loope
xchg
jb
outsl
lret
sbb
adc
icebp
xorl
clc
xchg
cmp
xor
pusha
push
pusha
outsb
sar
nop
xchg
jns
xchg
push
push
stc
fbstp
fcomps
ljmp
loop
imul
es
bound
iret
pop
es
pop
gs
push
dec
rclb
sbb
add
faddl
test
ret
push
leave
pop
sub
push
js
push
test
xchg
loope
scas
or
test
jge
push
out
das
xchg
mov
int3
movb
sub
lret
scas
ficoml
and
test
xorl
or
cmp
jg
push
dec
and
mov
in
mov
pop
cmp
jl
add
push
mov
cmp
sti
jp
push
not
dec
cmp
mov
add
xchg
xor
imul
mov
sbb
fisubs
imul
popf
lcall
ljmp
or
push
je
mov
mov
sarb
sbb
repnz
sbb
sub
push
sub
cmpsb
adc
push
call
cld
jl
mov
dec
cwtl
mov
inc
sbb
ficomps
shll
mov
pop
jne
sti
mov
enter
add
push
icebp
mov
shlb
jecxz
mov
les
mov
dec
cmpsl
adc
mov
cmpsb
in
insl
and
mov
cmc
sub
out
hlt
adc
ss
pop
jle
mov
pusha
fucompp
xchg
adc
jo
jne
daa
test
aaa
pop
int
cmp
push
test
add
pop
js
xor
int
in
orl
xor
std
or
xor
cmp
scas
sub
daa
popa
lods
adc
mov
rcrl
and
mov
inc
push
inc
lds
test
insb
addr16
arpl
adc
dec
popf
xchg
cmpsl
lods
dec
out
lretw
adc
fwait
sub
and
inc
push
mov
shl
icebp
ljmp
ja
or
insl
repnz
in
mov
adc
bound
cltd
jns
imul
pop
sbb
test
dec
out
popa
mov
in
dec
inc
push
mov
cmp
dec
pop
cmp
lods
movsl
push
test
or
int
rolb
xor
imul
cmp
pop
test
scas
ss
mov
push
push
loope
and
insl
clc
shl
fisubl
lret
fbstp
add
jecxz
insl
xor
and
mov
xchg
movsb
stos
fst
or
je
pop
xchg
mov
sub
cmpsl
movaps
int
mov
lea
mov
push
into
inc
mov
add
cltd
movsl
add
stos
jbe
test
inc
jmp
rorl
pop
mov
mov
orb
dec
adc
scas
xchg
xorl
push
cld
addr16
mov
push
movsb
add
pop
xor
test
dec
arpl
push
inc
cld
pop
xchg
lret
or
push
sub
insb
fisubs
or
mov
ret
imul
data16
pop
pop
gs
fistps
sti
fidivs
and
push
mov
cmp
dec
pop
je
stos
mov
fiaddl
sbb
cwtl
out
ror
daa
cmp
push
test
or
lret
inc
popf
xchg
loop
and
add
insb
mov
lods
adc
and
sub
pop
hlt
dec
psubb
adc
sub
pop
adc
insb
add
ret
pusha
lds
popf
outsb
sub
sarl
pop
je
stos
jne
in
fidivrl
cmp
data16
pop
sbb
pop
dec
ror
jecxz
mov
xor
push
cld
inc
adc
sbb
push
insb
jne
aam
jns
insb
jb
fcomps
cltd
sti
lret
lahf
daa
sbb
clc
stos
fadds
sbb
mov
cmpb
cmp
xchg
hlt
repnz
adc
dec
jl
mov
cmp
pop
pop
push
inc
data16
mov
push
mov
clc
xor
add
icebp
mov
sahf
add
mov
in
mov
mov
leave
popa
ja
insl
shrl
mov
xor
pop
lods
jp
cltd
nop
or
mov
xchg
mov
push
xor
jecxz
loope
sahf
jecxz
jge
data16
lods
lcall
rorl
fsubr
jne
cld
xor
imul
fldenv
in
insb
and
cmc
pop
cmp
pop
out
sarl
push
or
adcl
call
and
adc
xchg
cld
and
mov
ljmp
popa
movups
push
inc
jp
or
shrl
push
jmp
adc
jbe
push
lods
gs
xchg
add
mov
inc
subb
jbe
dec
sub
mov
gs
dec
push
jmp
pop
mov
push
or
xchg
shlb
push
and
outsl
sub
sub
push
mov
push
ds
pop
je
jne
jne
xor
fsub
jb
aas
sub
sbb
insb
stos
push
mov
sbb
test
sub
jnp
push
mov
mov
jmp
push
jg
adc
je
push
pop
mov
or
pop
in
adc
test
xor
mov
aas
hlt
add
and
xchg
mov
data16
sbb
xchg
fwait
in
popa
cs
lds
push
aam
cmp
imul
sub
pop
push
mov
test
fcomi
lea
repnz
ret
pusha
stos
test
imul
mov
cmp
jbe
jb
loop
fcomip
fisttpl
sti
fisttps
mov
test
dec
jo
repnz
mov
dec
mov
and
mov
aaa
mov
loopne
shll
subb
add
jecxz
jle
push
pop
out
cmc
dec
ljmp
sbb
mov
mov
push
dec
xchg
and
xchg
sub
and
xchg
mov
xor
lods
scas
adc
jge
and
add
lea
xchg
xchg
jp
add
cmp
pop
test
scas
insl
insb
adc
jl
add
stos
mov
xchg
orb
jg
cmp
xchg
sbb
cs
xchg
inc
xor
jno
push
and
cmc
sub
movsl
insl
sub
mov
out
cmp
cmpsb
lds
mov
add
jmp
imul
aas
xor
sbbb
pop
ss
adcb
rolb
add
andl
mov
inc
mov
sbb
cmp
pop
out
adc
movsb
mov
pushf
inc
mov
dec
add
push
fsubrs
cltd
test
cmpsb
jmp
sarb
cld
xchg
mov
pop
in
sbb
stos
jnp
adc
xchg
or
pop
fadd
xor
mov
xor
in
dec
mov
mov
push
sub
add
les
addr16
pushf
push
mov
mov
mov
mov
test
sbb
hlt
pushf
fistl
out
sbb
cmp
lret
hlt
mov
mov
add
jno
enter
sub
push
mov
xor
aad
xchg
and
call
int3
mov
shrl
xor
fmuls
cmp
cmp
jae
mov
sahf
imul
cmovne
inc
or
aas
push
push
jnp
fidivrs
adc
add
xor
fs
mov
dec
dec
mov
mov
jecxz
cli
pushf
xlat
inc
xchg
xchg
cmpsb
sbb
xorb
sub
push
ret
shll
jmp
fwait
pop
rolb
ret
leave
xor
mov
std
clc
enter
mov
test
ret
push
sti
mov
orl
outsl
cs
jle
aaa
xchg
inc
hlt
rclb
sbb
xor
cmp
dec
add
pop
sbb
pushf
outsl
iret
inc
xchg
sub
or
or
adc
out
lret
cmp
in
mov
xchg
jecxz
mov
pop
dec
cwtl
pop
mov
sub
or
and
je
imul
sbb
add
mov
mov
ds
dec
sti
movsb
cmpsl
sub
shr
cli
pop
jge
fs
pop
js
or
fwait
mov
orb
loopne
lea
and
ds
mov
shlb
mov
mov
or
ds
add
addr16
or
push
mov
shll
adc
xorw
sbb
in
inc
fcmovnb
jbe
inc
js
fcomi
jecxz
xchg
adc
movsb
daa
mov
mov
in
dec
pop
gs
jne
sbb
cld
jae
xor
push
or
cmovg
and
pop
outsl
mov
lahf
jmp
cli
sub
daa
pusha
adc
xor
add
jae
pop
pop
cld
dec
idivb
aam
movsl
stc
push
dec
or
or
clc
lea
adc
jmp
add
pop
and
imul
mov
jno
movsl
in
cmc
push
adc
fistpll
nop
cmp
cmp
movsl
ds
push
push
lds
sub
xor
and
mov
jge
jns
stos
cmp
addr16
jnp
cmpsb
cmp
push
cmp
jge
jle
cmpsb
push
xor
sarb
decb
inc
cltd
in
and
push
xor
xor
rclb
call
stos
sbb
repz
arpl
cmp
mov
jno
adc
jb
pop
and
pop
and
inc
test
jno
std
push
lods
push
dec
loopne
fcomps
pop
imul
inc
lea
notb
enter
and
sub
insl
stos
jecxz
add
or
ficoms
testl
test
dec
repz
dec
scas
xor
jnp
sti
pop
incl
dec
bound
addl
cmp
sbb
inc
adc
pop
cmp
jne
xor
adc
jle
std
stos
mov
lods
jns
loopne
rcrl
or
mov
mov
je
pusha
jbe
mov
ljmp
add
and
or
lock
outsl
aam
imul
out
sub
sbb
shlb
call
cmp
xor
xchg
mov
lods
jno
int3
data16
lods
mov
push
std
sub
adc
movsl
testb
lods
fst
cmpsl
in
cmpsb
jne
xor
notl
push
mov
mov
mov
add
in
xlat
outsl
fldcw
xchg
in
pushf
lods
jg
sbb
mov
ja
pop
dec
inc
or
fimuls
imul
scas
nop
repz
test
test
adc
scas
inc
lret
pop
repnz
xor
mov
jns
sub
pop
ss
lea
ljmp
mov
mov
clc
jl
adc
pusha
xchg
sbb
popa
mov
mov
mov
jo
cwtl
cld
pop
mov
and
push
pop
std
mov
addr16
cltd
cmp
inc
fcoms
out
mov
cmp
stos
cs
xor
add
dec
mov
add
aam
les
mov
dec
or
mov
or
in
incb
aas
add
jp
sbb
inc
xchg
cmpb
jo
clc
cmp
enterw
mov
sbb
and
cwtl
movups
lods
leave
adc
jae
into
xlat
in
jg
scas
ret
clc
cld
inc
jecxz
test
out
fnstsw
js
cmc
dec
mov
rorl
addr16
cmpsl
jne
sti
pop
ret
insb
icebp
fistps
lods
mov
xchg
jns
lea
out
insl
xchg
inc
popf
pop
inc
out
stos
dec
into
orl
cmp
fdivrl
lahf
push
idiv
lret
lret
repz
push
enter
cmpsl
jne
repz
push
and
in
xor
push
out
lock
pop
add
inc
ret
in
mov
ficoms
add
add
or
dec
out
mov
repnz
fists
loope
inc
outsl
das
fisubrl
pop
lret
lcall
xlat
imul
loop
pop
lods
jg
dec
dec
outsl
pop
insb
dec
jb
dec
iret
and
popf
dec
dec
mov
add
inc
cltd
pop
and
lds
add
jmp
cmp
and
stos
testb
jo
pop
int
repnz
push
divb
cmp
mov
mov
cmp
mov
rcrb
or
adcl
dec
mov
dec
push
xor
jno
imul
lock
repnz
xor
lcall
hlt
cmp
pushf
jl
rol
cld
dec
fstpt
push
push
repnz
and
ja
ja
sub
fsubl
insl
or
push
scas
lret
sbb
inc
lods
xor
fcomps
push
jecxz
mov
jo
daa
cmpl
icebp
sarb
aam
hlt
ja
or
data16
outsb
out
adc
int3
jle
dec
jg
inc
jne
aam
xchg
jp
adc
push
xor
test
xor
shlb
ret
pop
add
push
mov
cltd
nop
xor
push
cmp
pop
xor
jmp
add
int
pop
lahf
std
and
push
fisttpll
sar
xchg
int
in
fucom
cmpsl
mov
lcall
mov
sbbb
ja
stos
cmp
jo
ljmp
sahf
xchg
push
cli
dec
add
leave
inc
xor
jp
mov
push
sbb
pushf
jg
jge
movsl
mov
push
push
jmp
ljmp
cmpl
fdivrs
add
push
push
mov
sbb
and
in
inc
mov
outsl
sbb
or
jb
dec
mov
arpl
je
loop
dec
sub
cld
fs
imul
xchg
ja
icebp
xor
pop
cmpsl
stos
mov
push
jae
fcomip
sbb
std
push
idivb
sbb
lds
mov
outsl
mov
xlat
jge
push
scas
inc
add
sahf
punpckhdq
cs
mov
int3
push
aaa
mov
int3
pop
movsl
lahf
xor
out
idivb
add
mov
jae
rcpps
aaa
push
in
daa
xor
inc
mov
stos
jecxz
mov
xor
fidivl
leave
shlb
rclb
pop
or
add
fmull
jge
icebp
push
add
jbe
pushf
xchg
xorb
mov
out
and
and
jb
test
jmp
into
out
sar
ss
pop
pop
popa
dec
divl
adc
out
scas
pushl
cmp
nop
scas
sbb
sbb
add
push
jnp
and
stos
mov
ficoms
aad
in
mov
push
in
scas
mov
mov
sub
mov
cmp
stc
dec
std
fldt
icebp
incb
adc
movsb
cmpsl
sbb
jns
sbb
inc
mov
scas
loope
hlt
sahf
sbb
adc
ret
loopne
mov
sub
cmpsl
jae
dec
mov
popl
sub
push
pop
sub
jno
inc
aas
or
jnp
inc
test
pushf
pop
stc
push
jo
fcmovbe
push
xchg
xchg
fcmovnb
mov
orb
jb
jmp
fbld
test
adc
and
mov
ds
sahf
mov
repz
dec
mov
mov
stos
and
shlb
adc
mov
adc
inc
lcall
fidivrs
rcrb
cmc
add
imul
repnz
push
pop
xor
fidivrs
out
mov
mov
je
mov
icebp
fistpl
int
dec
mov
pop
and
pop
ret
mov
addr16
ja
xchg
pushf
outsb
push
int3
mov
mov
hlt
popf
adc
and
shlb
jge
pop
jns
cwtl
dec
fwait
inc
mov
mov
lahf
or
jp
jns
or
sbb
and
push
inc
adc
sub
and
mov
int
js
imul
pop
imul
and
jnp
cmp
test
out
xchg
sub
out
test
pusha
xor
jg
cli
shrb
setns
outsb
add
xor
into
pop
add
ret
push
mov
add
inc
insb
mov
bound
insl
idivl
hlt
or
nop
cmpsl
pop
push
and
cld
mov
xor
pop
in
popa
ljmp
mov
or
cmc
cwtl
mov
inc
mov
mov
jno
bound
repz
or
xor
out
test
xchg
jge
mov
mov
jmp
mov
adc
jne
cmp
pop
jge
push
xor
adc
sbb
pusha
sarb
pop
xchg
out
cmpsb
xor
sub
sbb
add
add
shrl
dec
push
sbb
sub
jns
rorl
pop
xchg
in
or
cmp
cmp
or
test
leave
mulb
mov
push
mov
push
pop
sub
and
sarl
cwtl
rorl
dec
shll
mov
mov
inc
xor
ret
push
inc
in
mov
insl
mov
aaa
add
je
stos
orl
mov
or
aad
dec
in
cmp
sub
cld
insl
in
mov
add
lds
sub
pop
popf
jmp
mov
adc
in
jns
dec
jp
xchg
inc
mov
sub
jecxz
inc
imul
inc
std
xor
ja
sub
loop
cs
and
outsb
stos
jp
and
gs
arpl
adcl
arpl
sbb
sub
fwait
in
pop
mov
insb
into
movsb
mov
cmp
in
mov
xor
test
cmp
hlt
pop
sbb
stos
mov
lret
xor
mov
pop
loop
jg
andb
repz
adc
push
and
adc
cli
movsl
dec
mov
or
movsl
jno
push
sarl
jno
jne
xchg
mov
es
imul
dec
push
lahf
pop
scas
xchg
pop
push
and
ja
ficompl
bound
std
adc
cld
pop
inc
fisubl
int3
mov
inc
jbe
mov
xor
ljmp
in
pusha
inc
lea
mov
and
mov
inc
fsubl
lret
xor
daa
fsubl
xchg
aas
and
negl
mov
mov
mov
push
mov
imul
cli
rcl
pop
in
in
cld
stos
sbb
jbe
sub
push
jbe
loope
adc
push
sti
pop
pop
jns
xor
sbb
jbe
dec
jo
lods
mov
notl
push
jb
test
insb
jnp
fdivrp
test
ds
xor
gs
lret
sbb
out
or
ftst
imul
and
jbe
cltd
leave
push
jp
add
xchg
adc
sub
out
jb
cmp
push
fucomi
mov
frstor
mov
in
inc
clc
mov
jne
and
xchg
lock
scas
in
jle
adc
and
mov
jae
mov
jp
mov
out
pop
cmp
repnz
jb
mov
push
jo
arpl
stos
jb
std
aas
clc
mov
xadd
push
daa
dec
scas
sbb
pop
push
pusha
repnz
dec
rcrb
add
imul
cmpsb
cwtl
icebp
fadds
pushf
pop
inc
incb
mov
cmp
push
cmp
mov
faddl
aas
repnz
push
out
aad
fisubs
jmp
add
insl
add
aas
mov
push
insb
sub
jo
cs
inc
icebp
clc
mov
movb
pop
pop
push
inc
imul
sub
and
scas
push
adc
popl
shll
xchg
ss
add
mov
orl
jnp
icebp
sub
push
mov
jno
loope
push
popa
xor
fnstsw
dec
or
mov
add
es
popf
hlt
sub
aad
sbb
scas
test
imul
clc
lea
ljmp
mov
addb
xchg
movsb
push
jnp
ret
sbbl
add
je
push
stos
mov
dec
pop
adc
sbb
push
inc
cmp
mov
jo
or
outsl
xchg
dec
in
outsl
les
inc
inc
adc
test
dec
mov
adc
in
push
insb
in
imul
pop
or
xor
cs
and
dec
in
pop
push
mov
popa
insb
ret
pusha
mov
mov
xor
fdivs
lahf
mov
sbb
test
mov
ds
and
xchg
sub
jmp
sub
cmp
or
rolb
imul
rcll
mov
sub
ficompl
push
jmp
jp
incl
pop
cmp
jae
sub
mov
fdivrl
sub
inc
xchg
cs
and
sbb
adc
cmp
jo
roll
iret
push
subl
icebp
int3
push
inc
xchg
gs
mov
lock
push
mov
sti
cmpsb
pop
inc
jnp
movsl
ret
fcmovbe
cmpb
pop
xor
arpl
add
xchg
dec
mov
push
mov
fmull
jnp
std
sub
sub
mov
fidivl
jae
imul
scas
daa
inc
sbb
xchg
mov
sbb
jne
aad
sbb
dec
push
js
push
cmp
inc
aad
mov
loope
fsubs
mov
iret
or
and
call
scas
xlat
cmp
in
dec
int
inc
add
mov
pop
mov
repz
inc
xchg
ficomps
sub
pop
enter
arpl
xchg
push
xchg
sub
fmuls
mov
std
dec
call
push
xorl
or
mov
add
mov
mov
xchg
adc
loopne
mov
rcrb
aad
sbb
pop
mov
mov
std
sub
mov
and
push
inc
and
dec
pushf
inc
jl
push
sahf
jp
push
jmp
filds
ljmp
adc
aas
dec
testl
xchg
lret
push
mov
sub
push
pop
lret
jl
push
jno
dec
cld
cmpsb
pop
out
incl
push
not
xor
faddl
mov
push
lret
enter
jo
sbb
ja
shll
or
add
imul
mov
addb
push
div
cmp
push
mov
mov
pop
test
lahf
pop
call
int3
mov
cli
sbb
push
out
adc
gs
les
jne
pop
ficoms
cs
pop
mov
sbb
mov
aaa
cmp
jns
lods
push
and
xor
leave
faddl
xchg
and
ret
ss
jmp
inc
xchg
or
xchg
shlb
and
imul
fsubrs
cwtl
sub
pop
xor
jp
sti
insb
stc
dec
subl
and
movsb
imul
cwtl
shll
addr16
add
in
imul
pop
add
xor
clc
adc
hlt
cmc
fdivl
dec
shrb
push
pop
jge
jp
jecxz
mov
xor
inc
jp
jnp
fmul
aad
dec
andl
pop
pop
push
inc
jecxz
int
es
push
cwtl
int
sbb
pop
jmp
lret
xchg
mov
mov
jmp
jg
xor
or
add
lods
lods
les
sub
cwtl
inc
adc
daa
sub
xchg
and
inc
ja
push
inc
jle
insb
ja
ficomps
xchg
pop
les
ret
cld
cmp
aad
jbe
inc
pop
xchg
sti
insb
test
roll
mull
adc
scas
dec
pop
jp
or
jge
cmc
orb
out
std
data16
ss
jp
mov
movsb
sbb
sbb
jmp
sub
push
scas
xchg
loope
enter
sbb
lahf
inc
xchg
push
push
pop
mov
loopne
pop
mov
mov
dec
into
push
push
lcall
or
xor
dec
and
flds
push
cmp
inc
jae
lret
push
ja
xchg
adc
jg
into
adc
movsb
push
rcl
xchg
cmpsb
mov
lock
subl
cwtl
adc
clc
ret
into
lods
test
mov
mov
pop
call
mov
loop
test
xchg
jl
pop
mov
sub
fwait
xor
test
rorb
mov
dec
int3
add
shrb
imul
xor
sub
push
test
adc
loop
iret
push
into
sbb
gs
cmpsl
push
andb
mov
popa
out
clc
xchg
xorb
inc
ret
jns
pusha
xchg
xchg
pop
fisttpll
out
test
fwait
cmp
jne
xrelease
adc
jecxz
aam
push
test
and
adc
fdivrs
je
cmp
and
mov
push
and
in
cmpsl
and
push
iret
mov
push
adc
pop
inc
aas
cmpsb
fstl
and
mov
xchg
adc
xor
push
dec
lods
divb
lods
dec
inc
rol
xor
mov
mov
addr16
daa
test
repz
adc
aad
ja
fucomp
sbb
icebp
mov
loop
and
sbb
movsb
jecxz
cmp
mov
dec
mov
dec
in
test
int
jecxz
cmp
dec
daa
push
dec
aad
ds
test
xchg
test
lock
out
in
bound
mov
ret
pop
xor
lods
dec
add
mov
add
insb
fwait
cmpsl
sub
cmp
xchg
jae
stos
jns
call
pop
sbb
mov
dec
push
sub
in
push
mov
ficoms
lds
gs
cwtl
mov
inc
jmp
and
mov
pop
loope
mov
xor
movntq
aaa
enter
mov
xor
addr16
jmp
jp
push
int3
push
pop
int
call
jg
and
test
xchg
jns
inc
pop
repz
scas
lcall
jbe
fisubrs
or
xor
add
jecxz
cmp
pop
add
fxch
sti
push
lcall
mov
mov
hlt
mov
fidivrs
rol
mov
cld
jl
fsubrp
out
push
int
and
mov
je
cmp
push
or
mov
mov
in
pop
lods
jo
push
push
cmp
ds
icebp
jne
or
pusha
cwtl
push
sahf
jno
jnp
cmp
dec
outsl
sub
add
push
pop
xorl
ss
push
movsl
sbb
mov
testb
push
dec
iret
cmp
jp
cwtl
outsb
rcrl
repz
inc
mov
xchg
and
adc
sbbb
push
jmp
xchg
mov
push
es
mov
int3
sti
push
mov
lods
aad
adc
inc
in
nop
add
ret
sahf
or
pushf
pop
cld
mov
cmp
inc
jg
test
inc
cmp
ud2
repz
out
or
mov
ret
push
xchg
arpl
js
or
stos
xchg
movsb
shlb
int
inc
add
in
push
push
lahf
movsb
mov
lahf
xlat
or
xor
int
lods
mov
push
mov
pop
shlb
or
sbb
arpl
jge
mov
mov
push
cmpl
lods
nop
sub
lods
loope
enter
inc
cltd
push
sbbl
movsb
cmpsb
outsb
add
xor
jae
jne
dec
xchg
leave
clc
das
xchg
jmp
int
das
sub
pop
popf
testb
mov
and
pop
jnp
jns
mov
shrl
fdivs
sub
cltd
cli
push
xchg
inc
push
out
std
bound
ss
and
cmp
negl
xlat
jnp
xchg
mov
pop
addr16
repz
test
cmp
and
push
notl
outsl
movsb
sahf
cli
sub
fs
dec
and
gs
mov
scas
loope
not
mov
andl
fisubs
outsb
movd
inc
sbb
mov
orb
push
fwait
or
mov
aaa
mov
stc
push
xchg
or
mov
loope
adc
aam
pop
inc
inc
mov
mov
jo
andl
movsb
inc
mov
imul
push
jp
xchg
push
loop
movsb
jmp
jge
xchg
mov
test
xchg
dec
and
dec
arpl
cmp
add
scas
xor
daa
stc
nop
aaa
or
cmp
push
pop
test
lret
push
or
lret
inc
mov
dec
mov
inc
and
mov
add
add
insl
mov
aaa
into
sahf
push
mov
jle
fildll
pop
or
cwtl
aas
xor
mov
into
dec
push
adc
xor
ret
cmp
aam
das
aam
popa
mov
fcomps
outsb
pop
outsl
out
aaa
out
pop
adc
jns
xchg
aad
lock
flds
in
leave
shll
or
icebp
negb
push
jo
add
lea
dec
xchg
fisubs
cltd
insb
cmp
cmp
hlt
inc
xchg
mov
push
pop
or
dec
outsl
xor
stc
and
std
sub
es
inc
add
push
sbb
out
jg
jno
in
repnz
fcoms
cmc
in
lods
dec
stc
in
jle
in
cli
movsb
sarb
xor
pop
loope
enter
adcb
xchg
arpl
testb
cmp
bound
fisubs
cmp
imul
jnp
mov
cltd
sbb
and
sbb
mov
push
es
xor
sub
movsb
inc
add
adc
insb
sbb
cmp
frstor
adc
sbb
xor
in
pushf
ja
lret
rorb
aad
out
stc
lock
leave
lcall
int
xchg
fiadds
or
loop
pop
mov
paddusb
add
stos
jl
mov
jne
ret
ja
popf
xorl
fdivrs
mov
mov
xor
xacquire
hlt
mov
inc
cmpsb
pop
hlt
dec
insl
and
mov
fsubs
and
das
pusha
jmp
adc
ret
dec
jl
add
lods
mov
xor
icebp
loope
test
imul
mov
fisttpl
cmp
dec
dec
xchg
jno
mov
stos
dec
loopne,pn
stos
aam
add
adc
lcall
iret
mov
enter
lods
sub
adc
or
lods
movsl
ds
inc
jne
test
sbb
xchg
or
inc
andl
test
add
sbb
xchg
rol
push
sbb
insl
popa
mov
sub
mov
imul
push
mov
std
or
cmp
adc
sbb
pop
shlb
faddp
incb
mov
roll
push
jl
sbb
mov
sub
movsb
dec
lds
and
sub
out
jne
cmpsb
pop
rcrl
and
scas
repnz
sub
movsl
outsb
push
sbb
loope
in
gs
pop
sarb
pop
cmp
mov
mov
push
and
push
les
sti
mov
push
cltd
pop
insl
mov
push
filds
arpl
ljmp
pop
scas
or
div
lahf
add
xchg
jnp
outsb
repz
jo
inc
dec
fildll
es
sbb
call
fistpl
dec
cmp
mov
loope
mov
mov
xchg
lret
movsb
mov
cmc
fcom
sbb
or
fstl
mov
out
jge
in
mov
stos
movsb
outsl
mov
mov
dec
push
and
inc
repz
fucom
mov
hlt
icebp
call
fstl
out
jecxz
adc
xor
or
adc
push
scas
push
je
pop
xchg
add
pop
mov
add
std
repnz
fwait
mov
mov
pop
sbb
nop
mov
rolb
rcrl
mov
pop
add
sti
daa
adc
aam
mov
jno
loope
and
mov
or
cmp
in
add
dec
add
pop
sbb
lret
insl
iret
mov
out
adc
mov
fstp
fwait
scas
add
fildl
in
push
push
aam
imul
inc
cmp
shl
aam
rcll
hlt
mov
bound
jnp
mov
or
enter
sub
loopne
imul
push
add
mov
xor
and
sahf
clc
icebp
mov
adc
xlat
shlb
fs
stos
out
cmpsb
jno
mov
sbb
jo
pusha
aam
icebp
adc
lea
mov
jb
out
mov
into
pop
scas
dec
fsts
xor
push
bound
call
push
xor
andl
push
repnz
inc
or
adc
push
test
into
sahf
out
nop
and
mov
xchg
xchg
xor
aaa
jg
push
add
out
lock
shlb
xor
lods
sbb
and
rolb
addr16
cld
fnsave
mov
lock
jbe
mov
jle
in
add
inc
addr16
mov
ljmp
call
and
sub
dec
test
call
mov
xchg
scas
cltd
mov
fxtract
mov
lea
movsb
jns
cmpsl
sbb
fdivl
movsb
rorb
ss
xchg
outsb
cmp
decb
test
mov
addr16
popa
stos
inc
mov
mov
push
rcr
push
mov
push
mov
push
mov
neg
and
and
mov
and
inc
mov
jo
pop
inc
dec
mov
mov
stc
sub
pop
notl
inc
xchg
popa
xorl
cs
lahf
jp
xchg
scas
jo
add
adc
popaw
lret
sahf
popa
xchg
pop
icebp
ss
mov
cltd
add
push
test
inc
dec
lock
dec
pusha
and
add
mov
stos
cmp
pop
inc
clc
fbld
adc
roll
mov
rcll
push
jb
fs
xor
fs
xor
jbe
sbb
in
sbb
out
bound
ja
cs
cmp
iret
jnp
jmp
pushf
outsb
cmc
mov
xchg
icebp
cltd
bound
test
mov
movsl
cmp
int3
stos
push
lods
out
mov
xor
jnp
jp
adc
movsb
stos
sub
ss
aaa
xor
fisubrl
adc
mov
xchg
adcb
mov
fsts
xor
or
xchg
push
push
cmpsb
jo
pop
xor
xor
xchg
mov
adc
dec
imul
mov
loopne
mov
mov
xchg
and
arpl
inc
scas
mov
jg
dec
sbb
cmc
aaa
xorb
out
rorl
enter
mov
fwait
in
fdivrl
sbb
les
push
jp
xorb
mov
xor
aam
and
into
gs
jo
push
xor
aad
nop
iret
fwait
jbe
sbb
cmpsb
imul
lods
stc
int3
mov
cmp
inc
pop
in
ja
xchg
clc
push
push
adc
loopne
imul
jecxz
sbb
daa
jo
idivb
icebp
mov
vmwrite
mov
sbb
push
out
and
add
lds
add
push
xor
test
cmp
inc
nop
push
sbb
popa
cmc
mov
sub
cmpsl
xchg
mov
mov
or
mov
pop
mov
and
push
fldenv
dec
dec
cld
out
repz
cltd
xchg
scas
call
mov
testb
out
rorb
scas
sbb
mov
or
add
mov
sub
pop
cmp
sub
fmul
cltd
mov
xor
mov
add
sbb
push
xchg
outsl
call
test
cmpsb
stos
imul
mov
sbb
sbb
add
ss
push
sti
dec
fsubrs
test
jmp
std
pop
mov
shlb
aaa
call
push
mov
add
cmp
nop
lret
mov
shl
jns
lds
popf
push
mov
ss
lods
mov
aad
sub
pushf
aaa
pop
push
xchg
cltd
lret
xor
lret
mov
dec
jbe
ds
daa
pusha
call
aad
pop
rorb
jl
cmp
cli
jle
xchg
scas
out
cli
hlt
aad
xchg
outsb
xorl
jbe
push
sub
push
add
inc
dec
push
jnp
js
scas
stos
mov
fdivl
push
stos
aaa
sbb
inc
or
popa
call
sbb
insb
inc
sbb
scas
gs
cmp
ss
pop
sbb
jnp
cwtl
jb
push
mov
jge
and
gs
jo
arpl
mov
adc
jne
cmp
mov
movsl
out
imul
cld
lea
fiadds
or
cli
lock
pop
and
test
enter
ret
xor
adc
xor
add
arpl
push
adc
and
add
fimull
outsb
xchg
mov
pop
or
lret
mul
mov
imul
xor
cmc
pop
mov
mov
xchg
in
jge
cmpl
adc
sbb
mov
clc
gs
fucomi
mov
dec
arpl
ds
test
pop
pop
push
and
xor
pop
pop
xchg
rsm
push
inc
bound
xor
sub
inc
or
cmp
mov
stos
cmc
outsl
jl
add
arpl
scas
mov
movsl
fstps
dec
xor
push
mov
adc
cmpsl
jge
push
repz
mov
xor
rcrl
mov
rclb
hlt
movnti
xchg
popf
rorl
int3
sub
adc
jnp
pop
push
add
nop
or
ret
shrl
adc
dec
jne
dec
push
fisubs
movsl
and
add
insb
cltd
push
mov
push
sub
add
lock
pusha
mov
cmc
in
xor
sbb
xor
ficoms
rcrl
jo
js
aaa
fcomps
stc
test
xlat
fisttpll
cs
add
and
mov
loop
das
fwait
test
push
ds
sahf
loopne
cltd
fwait
movsb
xchg
pop
pusha
or
in
movsb
push
lcall
es
xchg
add
je
and
hlt
shrl
xor
sbb
pop
pop
xor
lret
in
push
add
adc
cmp
sub
in
fmull
or
add
arpl
inc
cmpsl
and
outsb
outsb
jecxz
lock
cmpsb
adc
imul
jl
sub
hlt
mov
iret
adc
cmp
test
xchg
jo
stos
loop
mov
mov
mov
mov
push
sub
icebp
hlt
imul
or
call
sub
popf
cmp
data16
icebp
call
mov
dec
lret
es
fiaddl
jl
and
mov
adc
shl
add
fstps
aaa
rcr
test
enter
enter
add
mov
xchg
sahf
xor
mov
or
fnstenv
inc
les
xchg
aad
ss
or
push
mov
mov
stos
push
push
jns
aaa
aaa
and
out
push
mov
fdivr
ret
mov
push
dec
addr16
adc
scas
push
popa
adc
loopne
iret
add
insl
lret
icebp
addl
out
scas
cli
hlt
cld
or
mov
negl
cmpsl
xlat
addr16
les
adc
js
cmp
push
jmp
repnz
sub
xchg
dec
mov
jle
movsl
pop
push
ljmp
out
hlt
sbb
push
and
mov
shrb
fxch
cmp
jne
mov
dec
dec
iret
ficoms
mov
outsl
push
in
pop
repnz
idivl
dec
popa
je
xchg
sbb
mov
scas
cmp
out
sbb
xchg
in
adc
repz
cmp
jno
ds
fs
mov
mov
push
cli
shrl
jmp
mov
cld
adc
cltd
andb
push
cwtl
outsl
sub
add
movsb
or
loop
xor
out
pop
in
dec
dec
xchg
daa
adc
aas
adc
loop
ss
pop
push
pop
or
and
subb
cmp
sbb
fs
mulb
or
xchg
dec
push
xchg
push
jmp
mov
repnz
sbb
jne
push
lcall
xor
fisttpll
lahf
xchg
jp
pop
cmp
loope
sub
mov
addr16
in
test
dec
mov
push
lcall
jno
xor
andb
xchg
xor
dec
stos
pop
lods
es
cmp
pop
xchg
mulb
mov
rorb
shl
imulb
fnstenv
orl
ret
jbe
fistpll
pop
push
or
lret
push
cmp
rcr
int
dec
jno
jmp
push
adc
pop
fdivl
pop
mov
jae
ljmp
out
int
adc
adc
js
stos
add
test
stos
fidivrs
push
clc
or
sbb
jne
dec
inc
dec
in
dec
insb
testb
pop
dec
lret
insb
into
sarb
data16
std
clc
test
inc
mov
lcall
or
mov
mov
mov
orl
jns
inc
pop
mov
pop
dec
mov
insl
jp
and
mov
cmp
ror
in
bound
add
repz
jae
push
and
mov
xlat
dec
add
mov
xchg
in
insl
js
sar
int3
lock
repz
mov
dec
int3
shl
add
mov
lahf
jns
fisubs
push
lods
lret
jnp
das
mov
jg
inc
mov
out
andb
je
scas
insb
pop
push
sub
ja
sub
lret
ret
pop
or
xchg
cmp
shufps
movl
ret
mov
inc
scas
xchg
xlat
sub
mov
mov
loop
stos
ja
sahf
cmpsb
xor
cmpb
fimull
in
sub
aad
dec
mov
insl
insb
pusha
out
and
scas
test
xor
mov
mov
popa
in
jl
mov
enter
pop
and
push
in
es
mov
xchg
fcoms
out
ja
sbb
sbb
adc
gs
lcall
cli
stos
xchg
ret
lret
jecxz
mov
cmp
push
pop
es
jo
jae
jbe
push
orl
dec
dec
push
movsb
jg
fidivrl
or
incb
jae
aam
mov
jle
in
or
jne
jnp
push
daa
hlt
xchg
xchg
push
fldenv
jns
mov
cmp
movb
jo
adcb
rcr
loope
jge
cli
repz
inc
push
test
dec
jecxz
xchg
cld
jg
pop
or
adc
hlt
fcmovb
sbb
lea
push
test
fdivl
fwait
filds
cs
xlat
ds
js
int
in
jge
or
push
in
sbb
lock
xchg
mull
in
call
mov
cmp
out
dec
or
cmp
mov
pushf
adc
lock
or
rolb
dec
dec
addl
ret
and
push
add
aad
or
add
mov
jle
and
fcmovnu
xchg
jo
and
rolb
xlat
mov
dec
xor
lahf
lahf
mov
imull
insl
loop
mov
cmovl
gs
and
xor
push
sbb
fildl
cmp
pop
sbb
iret
cld
jle
js
sbb
add
lods
loopne
scas
iret
out
rorb
std
jns
mov
jg
into
in
jns
sbb
loop
push
lret
fs
mov
pop
push
movsb
jl
outsb
push
ror
dec
push
daa
pusha
test
in
push
adc
ss
and
push
loope
js
aad
mov
sub
or
repnz
adc
lods
aam
stos
inc
adc
lock
and
push
outsl
scas
js
xor
cs
xor
mov
out
pusha
into
cld
sarl
add
ret
gs
pop
push
addl
pushf
int3
shr
mov
mov
sbb
js
jb
rol
leave
out
int
test
cmp
imul
fnsave
pop
mov
dec
sbb
lods
and
add
aam
aam
and
nop
adc
fldenv
inc
push
fldcw
popl
call
mov
js
lahf
and
push
dec
mov
dec
test
insl
out
xchg
xchg
cmpsl
push
inc
jbe
cmp
xor
xlat
xor
fdivrs
movsb
dec
or
loope
test
imul
pop
mov
data16
dec
punpckhbw
and
lret
outsb
xor
sti
jne
push
popl
jae
out
lock
int3
jmp
adc
jmp
loope
pop
adc
sti
fwait
dec
xchg
add
sub
dec
and
pop
pop
testb
out
loop
fiadds
les
icebp
add
pop
and
test
push
sub
sub
imul
push
bnd
arpl
inc
push
add
fisubl
and
filds
orl
repnz
shlb
xor
and
add
aas
cltd
neg
push
mov
imul
test
cmpsb
or
or
idiv
push
movsb
jb
arpl
lds
add
stos
ljmp
fwait
daa
xchg
stc
popa
rol
jl
dec
inc
jmp
out
jecxz
cmc
inc
jg
iret
adc
xor
int
inc
test
rcl
mov
mov
lahf
ja
or
shll
cs
pop
shlb
stos
mov
imul
or
xor
pop
xlat
outsl
fistpl
jno
push
cmp
jo
mov
push
or
or
mov
cmpsl
mov
adc
mov
dec
mov
js
xchg
mov
hlt
cs
mov
addr16
stos
je
sub
imul
repz
jp
test
push
dec
adc
or
mov
cmp
or
.byte
sub
