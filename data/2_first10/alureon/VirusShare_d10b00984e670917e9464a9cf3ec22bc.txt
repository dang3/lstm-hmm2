test
imul
lea
test
cmp
add
inc
push
cmc
sbb
pop
mov
xchg
jnp
call
sbb
cmpsl
push
add
out
sbb
pop
movsl
jl
mov
xchg
add
insb
sbb
mov
pusha
add
js
jge
mov
jg
mov
push
mov
and
dec
mov
pop
inc
xlat
imul
in
shl
in
jae
ret
sahf
add
sub
mov
inc
addr16
jg
cld
pop
fisubrl
mov
add
scas
orl
aam
cmp
ds
in
mov
daa
fld
rcrl
lahf
dec
sti
loopne
jmp
in
stos
sbb
mov
shrl
pop
mov
pop
aam
sbbl
mov
loopne
daa
in
jg
out
add
sahf
inc
repnz
cmpl
rol
adc
xor
xchg
mov
inc
aam
push
cmc
mov
cld
mov
mov
add
sbb
sub
data16
and
cmpsb
bound
rorl
mov
je
gs
push
inc
daa
dec
test
mov
in
movsl
or
lds
ret
inc
test
mov
lock
sbbb
jmp
push
pop
xorl
and
pushf
xor
rcrb
inc
stos
pushf
xor
insb
and
push
and
xchg
inc
xor
inc
and
jl
adcb
lds
mov
cli
scas
cmp
outsb
in
cmp
mov
pop
sub
mov
jge
cmc
xchg
ret
out
sbb
mov
movsl
and
testl
mov
lods
inc
add
add
cmp
push
pop
sub
sub
stc
sub
adc
scas
xchg
add
repz
js
pop
out
popf
sub
fsubl
dec
out
sub
hlt
cmpsb
cmp
or
jl
cs
and
enter
or
popf
ud2
push
daa
mov
cmpsl
sub
daa
mov
sahf
push
sbb
aad
lock
add
xor
out
jg,pn
sarl
sub
lcall
mov
mov
sub
sbb
sbb
hlt
adcb
jmp
add
jge
inc
in
mov
mov
sub
js
pop
cmc
pop
push
jle
roll
pop
mov
lods
cltd
popa
mov
cld
pusha
sub
sbb
mov
aad
sub
pop
xchg
push
ss
sub
mov
test
cmpsb
int
icebp
paddsb
push
xchg
mov
int
ret
jbe
inc
outsb
lahf
addr16
and
jnp
fsubs
aaa
fstl
cli
mov
inc
repnz
notb
add
call
or
std
mov
sbb
xlat
cmp
fucomip
mov
int3
jle
in
pop
aaa
pusha
mov
add
pushf
cs
mov
jp
pop
call
push
xchg
or
imul
jmp
sbb
cs
inc
inc
jns,pn
dec
hlt
cwtl
loopne
jae
and
test
lds
test
daa
push
pop
ficompl
jp
mov
dec
mov
xor
or
into
xor
dec
mov
xchg
movsl
dec
in
popa
push
pushf
push
mov
mov
in
xchg
incb
lods
pop
int3
jp
pusha
daa
je
mov
jne
add
cmp
negb
push
ss
and
push
sub
test
pop
bound
cmc
add
inc
mov
add
pop
xor
rcr
jg
dec
mov
outsb
xchg
ret
jb
sub
dec
rcll
ds
xor
mov
adc
scas
ja
lock
dec
scas
mov
sahf
sub
addb
dec
popf
mov
imul
pop
xchg
or
pop
int
xchg
cmc
int
and
pop
pop
mov
lds
sbb
int3
pop
lret
xchg
and
ds
popa
xor
data16
aad
or
and
orl
inc
push
xchg
sahf
lahf
push
adc
sarl
inc
inc
arpl
outsb
mov
clc
int
ljmp
loopne
add
add
sbb
fwait
pop
xlat
bound
lods
jno
dec
aas
inc
push
repnz
cmp
xorb
cmpl
mov
dec
adc
pop
loop
pop
inc
roll
lea
in
call
fucomp
fwait
push
leave
jnp
push
jl
mov
pop
mov
jge
std
xchg
mov
mov
out
mov
push
add
lock
lahf
js
lcall
cmp
scas
loope
testl
aas
sub
test
cmp
xchg
ja
inc
dec
sbb
mov
jnp
ljmp
incl
loopne
adcl
adc
and
lret
in
addr16
jg
jmp
dec
sbb
insb
mov
mov
mov
pop
in
daa
pop
repz
outsb
push
fisubrl
and
loop
leave
sbb
sub
and
jg
push
xor
out
push
cmp
scas
or
js
cmpsl
int
jbe
out
jns
fwait
test
push
dec
icebp
mov
pop
mov
lcall
xor
insb
add
ds
sub
push
test
pop
nop
add
push
in
or
sbb
mov
gs
pop
loopne
ljmp
xchg
push
rcrb
adcb
scas
mov
loope
pushf
lcall
mov
lret
les
sbb
and
insl
add
pop
jb
insl
pushf
mov
xor
mov
fnsave
int
mov
dec
jecxz
movl
sub
sub
sub
fs
int3
jnp
fcmovb
ss
mov
mov
mov
inc
insb
pop
inc
mov
xor
pop
adc
scas
xor
xor
cmpsb
mov
test
aas
lahf
daa
and
data16
sub
xchg
fbstp
bound
aaa
das
mov
mov
aaa
test
insb
out
xchg
lods
jle
gs
mov
pop
cld
push
enter
lret
in
or
add
or
xlat
out
xor
jmp
cld
lret
pop
in
jnp
push
jno
lahf
fs
mov
inc
fcomi
inc
push
or
pop
sbb
daa
dec
cmp
lock
pop
mov
xor
xor
shlb
push
sti
mov
sbb
dec
or
xchg
inc
outsl
ret
cmp
inc
adc
popa
add
lds
pop
movsb
mov
cmp
aad
inc
popa
pop
mov
mov
dec
fcom
in
scas
loopne
push
stos
mov
into
bound
push
movsb
repnz
push
roll
pushf
incb
or
xchg
and
sbb
push
int
subl
inc
test
sub
sarl
rorb
jnp
cld
sub
fisubrl
lret
sub
scas
jbe
nop
mov
mov
test
shrb
cmp
push
inc
sub
dec
cmp
sbb
jns
cltd
jp
xor
adc
sub
idivl
rolb
icebp
int
push
in
pusha
frstpm(287
push
jle
xchg
movsb
outsb
pop
clc
lahf
xchg
lea
sbb
orb
test
adc
shll
fcompl
or
pop
sub
jg
call
out
test
adc
test
adc
pop
adc
out
ret
add
jno
ljmp
pushf
sti
xor
aaa
ds
mov
or
arpl
add
into
scas
mov
cmp
mov
dec
mov
pop
sub
scas
push
fisttpll
add
and
lock
int
jmp
outsl
cmc
pop
mov
xor
call
sbb
jl
mov
cmp
repz
repz
hlt
inc
mov
sbb
sbb
je
test
xchg
das
movsb
mov
lret
sub
sbbb
mov
mov
adc
out
mov
dec
push
mov
pop
and
mov
arpl
fwait
into
push
push
mov
jnp
mov
push
pop
loop
jge
aas
or
pop
add
jnp
sar
xchg
mov
mov
dec
scas
cmpb
into
dec
mov
xlat
lods
jecxz
push
inc
or
popa
lret
repnz
filds
cmp
aas
sbb
dec
push
int3
jle
sarb
jle
outsl
cmpsb
rcr
push
ret
pop
stos
xor
jae
and
jp
in
ss
xchg
add
out
mov
or
push
dec
xchg
addr16
push
add
ja
jne
mov
add
mov
pop
out
lahf
in
mov
inc
push
xlat
pop
loopne
xchg
test
cmp
adc
decb
mov
push
cmpsl
and
pop
jnp
pop
push
std
inc
cld
fidivl
aas
push
dec
mov
push
out
hlt
sbb
ret
out
sbb
imul
cmp
aas
outsl
out
das
popa
pop
jle
pushf
pop
pop
setle
mov
ds
insb
mov
stos
movsb
sysexit
xlat
in
xchg
or
call
or
add
movsb
pushf
push
insl
fmul
daa
and
lea
mov
stos
je
mov
fwait
leave
aam
push
in
pop
test
jno
lock
ja
cmpsl
fists
push
lds
pushl
jb
pop
lea
cwtl
js
inc
das
jnp
or
inc
mov
inc
cli
cmp
inc
mov
ljmp
das
mov
jmp
push
or
js
xchg
psraw
pushf
push
test
or
in
lret
divb
ret
scas
stos
repz
dec
sub
call
xchg
mov
movsl
mov
popa
push
mov
out
push
cmpsl
fstl
sbb
lahf
xchg
imul
jnp
dec
hlt
pop
ret
jmp
arpl
xor
mov
jo
mov
imul
cmp
fwait
mov
shlb
mov
incb
roll
push
js
ret
dec
and
and
insl
xlat
ljmp
aad
mov
jne
mov
popa
mov
push
sbb
pop
mov
int
adc
pusha
cmp
xor
add
pop
ret
jp
jmp
scas
pop
mov
pop
subl
pand
dec
fistpl
push
je
add
jae
push
sbb
out
push
inc
mov
and
and
jmp
xchg
hlt
or
sub
into
fsubl
out
add
xchg
cli
mov
popa
jbe
sahf
mov
sbb
xor
ficoml
scas
xorb
out
fbstp
cmp
cmp
dec
inc
push
add
addr16
xor
mov
mov
daa
adc
xchg
add
adc
in
mov
rclb
jae
ficoml
inc
add
ljmp
and
pop
sti
imul
out
inc
int
leave
jmp
mov
test
pop
sub
xor
dec
mov
movsl
xor
xchg
inc
dec
sbb
mov
xor
inc
push
jnp
xchg
pop
dec
sub
ss
mov
out
push
pusha
jmp
fdivl
andb
fists
imul
mov
popf
aad
or
push
pop
adc
adc
mov
push
jge
mov
add
cmp
daa
mov
minps
pop
add
mov
mov
mov
cmc
gs
int
jne
push
dec
loopne
cmp
and
jbe
notl
nop
jo
ja
xchg
test
movsl
movsb
pop
lahf
les
pop
loope
dec
add
rorl
mulb
jb
das
pop
and
out
inc
ds
inc
addr16
mov
in
mov
mov
or
rorl
or
ja
sub
js
dec
int3
cld
fstpl
push
stos
inc
movsb
pushf
ret
cmp
mov
lahf
lea
test
mov
fldl
fldl
shlb
mov
xorl
xchg
mov
movsl
dec
push
xchg
stos
jg
mov
leave
mov
inc
sub
in
pop
pop
xchg
or
lock
ret
ljmp
add
cmp
ret
pop
subb
mov
movsb
iret
pop
pop
xchg
hlt
daa
pop
pop
loopne
push
pop
inc
xchg
sub
or
mov
mov
cmp
mov
loop
dec
mov
gs
fbld
push
aaa
sbb
sub
jae
cmp
add
pop
xchg
jbe
addr16
aad
leave
lret
pop
dec
cmp
sub
hlt
xchg
jmp
mov
stos
cmp
jp
push
out
mov
push
push
fucomip
adc
les
xor
icebp
outsl
loopne
ds
and
sahf
bound
pushf
lods
pcmpgtb
add
lods
jg
hlt
or
aaa
xchg
xor
fnstcw
call
arpl
test
test
or
mov
ds
insb
mov
pop
test
jno
inc
push
mov
or
std
xor
cli
mov
addr16
sbb
icebp
lcall
adc
jle
mov
jl
cmpsl
std
add
jge
sub
jnp
cmp
jbe
pop
in
rorb
jle
aad
in
push
lods
cld
push
outsb
fxch
jbe
push
loopne
fmull
rorl
lret
out
push
xor
xchg
jge
cs
aaa
imul
push
scas
or
pop
adc
sbb
or
lret
push
subl
mov
imul
push
lcall
xor
ds
das
mov
test
jl
clc
ds
jmp
popf
lret
sub
mov
or
ror
daa
pushf
mov
and
mov
test
rcll
test
pop
jae
mov
sub
mov
iret
sub
inc
jae
int3
mov
xlat
popf
xor
push
adc
insl
or
movsl
cli
in
sub
add
fldl
sub
sub
je
jne
cmpb
pop
sub
dec
xchg
mov
in
pop
xor
data16
mov
loop
jl
sbb
add
out
jo
mov
mov
out
lds
sbb
adc
sti
inc
xchg
movsl
dec
mov
in
je
sbb
int3
subb
sahf
loop
mov
pop
cmp
movsb
fcompl
mov
outsb
or
pop
int3
es
inc
lret
insb
xchg
jecxz
lcall
loopne
push
jno
inc
sbb
out
mov
cmp
je
ret
lahf
mov
push
xchg
add
dec
lods
popa
jl
push
mov
inc
mov
loopne
mov
sar
sub
test
out
or
xchg
mov
mov
aad
insl
insb
add
mov
jo
and
or
lock
and
into
aam
in
xor
mov
popa
and
in
pop
mov
int
pop
jg
and
hlt
cmp
movsl
test
add
es
jo
xchg
xorb
dec
inc
out
and
enter
scas
add
pop
sbb
stos
addr16
dec
mov
push
fisubrs
loop
nop
out
insl
add
arpl
in
lahf
sahf
cmc
inc
jecxz
arpl
cmp
xorb
push
hlt
lret
cmp
andb
jns
imul
inc
shrb
jl
dec
dec
adc
ljmp
jnp
push
push
dec
sub
or
jo
mov
sbb
mov
push
stos
fldcw
fldcw
sbb
dec
cmp
jbe
and
pop
sahf
es
stos
andl
scas
jg
pusha
pop
xchg
enter
fucomi
mov
enter
pop
mov
ror
push
inc
add
das
stos
and
sti
pop
inc
int
mov
lea
push
bound
cmp
or
xchg
icebp
mov
push
jno
call
add
int3
xchg
repz
or
dec
push
les
pop
and
mov
and
jo
dec
adc
xchg
jo
ret
addr16
mov
outsb
lea
lock
xor
aad
jmp
ljmp
jle
idiv
jo
ficoms
loopne
cmc
incb
lret
xchg
clc
mov
or
fcmovne
out
rdpmc
lret
mov
pop
dec
xchg
ret
mov
mov
lret
push
pop
push
cmpsl
imul
push
int3
lea
stos
jp
dec
cmpsl
dec
pop
fs
or
xchg
sub
jb
in
adcb
sets
sub
mov
jge
push
lds
cmpsb
pop
out
add
test
or
jge
mov
aam
mov
jg
xchg
inc
test
adc
pop
rol
xchg
xor
add
inc
xor
test
bound
sub
gs
push
fnstcw
repz
outsb
fadds
push
xchg
sbb
pop
das
sbb
or
popa
mov
push
sub
mov
add
aam
mov
mov
lahf
out
adc
ja
cmp
lods
nop
and
cli
add
icebp
adc
mov
xchg
ljmp
pushf
and
in
ja
mov
popa
out
cmp
add
cltd
ds
inc
xchg
mov
rcrl
je
add
insl
fdivrl
sub
pop
iret
out
stos
cmp
mov
call
mov
movsb
imul
lock
jnp
or
ret
adc
into
cmp
cld
dec
ror
repz
mov
push
mov
mov
push
cmp
cmp
pop
dec
imul
jmp
cmp
imulb
pop
sub
xor
dec
add
lds
inc
loopne
mov
mov
xor
mov
mov
push
cli
adc
iret
sub
mov
cs
xor
pop
xchg
lds
pusha
mov
mov
inc
pop
add
jns
cwtl
jl
mov
mov
out
shlb
or
into
or
cs
imul
or
imul
imul
mov
dec
enter
lcall
sbb
in
scas
xchg
push
loop
xor
fwait
out
xchg
in
mov
frstor
xor
mov
fisttps
popf
test
jmp
test
loope
std
or
cmp
sti
xchg
test
cmp
data16
cwtl
aad
jg
leave
xchg
xchg
dec
je
outsb
sub
repz
addr16
vmovsd
cmp
xchg
pop
or
movsl
adc
mov
or
mov
in
jb
sub
div
mov
repnz
arpl
sbb
stc
pusha
mov
xchg
adc
stc
repnz
jnp
pop
jle
sbb
xchg
push
add
xchg
mov
loop
jecxz
mov
push
rorl
out
imul
in
outsb
dec
call
xor
insb
cmp
cmpsl
movsl
push
pop
xchg
aad
in
test
inc
pop
sub
scas
mov
in
mov
cltd
adc
push
jmp
push
bound
mov
pop
sub
lods
adc
out
push
je
mov
adc
enter
call
mov
gs
js
fstps
mov
rorb
icebp
or
and
loopne
sbb
xor
out
popa
xchg
loop
adc
pop
loope
dec
test
jl
rorb
out
adc
popf
xchg
sbb
dec
sub
add
cmp
or
fxch
lea
in
dec
in
test
push
cmpsl
sub
adc
into
xor
push
arpl
mov
pop
cld
mov
mov
fidivs
mov
or
in
mov
sub
sbb
adc
adc
bnd
mov
and
sti
cltd
push
pop
cmp
xor
xchg
mov
test
lcall
les
pusha
mov
int
pop
push
lea
dec
out
clc
insl
or
lds
mov
popa
and
pop
adc
nop
cmc
cli
sbb
negl
inc
sbb
or
cmpsl
imul
xor
mov
test
mov
xchg
movsl
loop
and
lcall
xor
push
mov
cld
sarb
lods
push
ds
jg
out
out
test
mov
mov
fiadds
shrl
sub
test
or
js
ret
push
add
cmp
mov
cs
pop
mov
addr16
push
xchg
xchg
out
push
mov
iret
pop
or
nop
sbb
jo
xchg
dec
adc
cwtl
shll
add
or
mov
push
addr16
pusha
insb
negl
xor
inc
sub
inc
sbb
cld
loopne
enter
inc
rclb
lods
jle
adc
data16
rolb
mov
ret
popa
ja
cmc
adc
and
test
js
imul
xchg
mov
in
out
adc
and
pop
into
in
scas
fcoml
add
xchg
lret
xchg
pxor
cmp
fwait
xchg
mov
mov
cld
popf
pushf
xor
dec
adc
cmc
enter
loope
aaa
push
jl
scas
and
fwait
xor
sbb
cwtl
arpl
mov
pop
mov
leave
mov
lret
or
insl
pop
xor
fisubl
out
xor
pop
out
fucom
mov
cli
push
pop
adc
addr16
push
cmc
or
push
jp
pop
sahf
push
int
pusha
add
in
xlat
xchg
cmp
out
adc
notl
xchg
dec
pop
xor
fwait
inc
int
and
icebp
xor
cmp
rcrl
stos
and
push
out
ljmp
push
xor
adc
outsl
cmp
mov
stos
js
mov
inc
xchg
stc
xor
xchg
decl
cmp
adc
dec
mov
test
mov
loop
into
out
xchg
pop
sub
clc
orb
aas
stos
inc
xor
jnp
mov
xor
andb
fists
lret
aas
repz
std
mov
mov
movsb
mov
roll
xchg
inc
mov
inc
sub
test
sub
negl
sbb
and
lcall
inc
mov
fwait
sub
lods
or
loopne
dec
cmpsb
in
cmp
scas
push
xor
pop
test
fisubrl
jae
jbe
sarb
mov
lea
shrl
pop
nop
ss
mov
sbb
pushf
cmc
xchg
fisttpl
mov
fwait
inc
int
add
imul
pop
scas
outsb
add
cmp
sti
icebp
or
pop
ja
ljmp
xor
bnd
repz
mull
mov
mov
fisttps
mov
rcr
mov
xor
shll
cmpl
mov
mov
test
sub
out
mov
mov
pop
add
popf
xchg
mov
aas
ficomps
jb
adc
cmp
pushf
cmp
ret
jmp
mov
shr
mov
pop
shrb
lds
cmp
int
jo
pusha
jl
neg
js
outsb
and
pop
push
or
icebp
stos
mov
fisubs
movsl
xor
mov
mov
or
sub
pop
lcall
and
add
mov
arpl
popf
nop
dec
out
or
flds
add
ja
mov
sahf
cli
test
addr16
jo
and
and
or
mov
dec
jge
test
lods
push
push
dec
in
push
fstpl
movsl
sub
sti
popa
pusha
rcrl
adc
mov
popa
stos
lea
jo
push
mov
xchg
xor
cwtl
adc
pop
mov
dec
xchg
sub
fildll
pop
jns
xor
repz
popa
cmpl
test
xchg
mov
jge
mov
and
lods
inc
cmp
cmpl
cmp
scas
adc
sub
sub
add
cld
popf
push
insb
pop
daa
filds
cmpsl
pop
popf
mov
icebp
jg
addb
mov
dec
push
repz
cmpsb
dec
aam
daa
or
fimull
mov
xor
mov
mov
push
fisubl
sub
cmc
mov
clc
js
and
xor
mov
mov
xchg
dec
mov
inc
pop
nop
loopne
ret
xchg
xchg
in
push
shr
push
out
xor
dec
push
repnz
ficoms
inc
xchg
ret
mov
jge
cwtl
loope
ret
jno
mov
add
lret
jns
pop
jl
cmp
aaa
jl
mov
inc
into
push
dec
sub
inc
lcall
daa
arpl
mov
cld
in
mov
cmc
daa
dec
jmp
fmull
inc
or
pop
orb
xlat
in
loope
cmp
rcl
xchg
xchg
loope
outsb
sub
leave
rcr
cmc
sub
xchg
jno
mov
jmp
lahf
dec
mov
aaa
pushl
cmp
dec
jg
xor
in
leave
lock
lret
sbb
sub
fsubrp
push
sbb
outsb
add
mov
inc
inc
pop
iret
insb
in
inc
test
je
and
xchg
inc
jae
clc
add
aam
or
in
cltd
imul
ljmp
cmp
xor
pop
dec
loope
cltd
cmp
add
mov
adc
xchg
sahf
push
bound
lret
fsub
mov
sub
fimuls
mov
in
jns
in
cmc
inc
ds
inc
popf
push
jne
jne
inc
cwtl
add
cmp
push
xor
mov
cmp
sub
sbb
popf
sahf
push
ljmp
or
sub
leave
push
push
inc
cmp
test
es
aaa
loop
testb
or
movsb
sbb
or
jae
add
fidivs
lds
or
xor
push
cmp
test
pop
fisttpll
repz
push
out
bound
popf
addr16
mov
out
mov
ret
rclb
lea
or
lods
adc
pop
jle
xor
ja
inc
add
testl
stos
cs
ljmp
mov
mov
jp
lock
sti
inc
cs
testb
xchg
pop
ficoms
add
stc
test
lahf
mov
mov
call
push
xchg
dec
sub
inc
popl
mov
movsb
fs
bound
adc
jl
dec
imulb
loope
jl
sahf
int3
sub
jbe
fs
xor
or
test
sbb
or
stc
lds
imul
cmp
push
pushf
in
push
add
aas
pop
sub
test
sub
js
sbb
mov
sarl
pop
sub
repz
cmp
xor
sarb
movsl
mov
sub
mov
ja
or
outsl
inc
xchg
in
icebp
cmp
dec
idiv
shll
push
addr16
movsb
push
lret
mov
mov
or
jg
pop
sub
cli
cmpsb
dec
jmp
inc
pop
sbb
out
loopne
stos
push
xorl
int3
aas
add
insb
mov
aaa
xchg
fwait
out
cwtl
das
sbb
or
xor
fistps
and
dec
xorb
dec
xor
loop
sub
gs
xor
call
iret
test
fsts
js
out
shrl
aam
imul
sbb
mov
jne
iret
mov
or
hlt
xor
mov
xsavec
push
jecxz
xchg
cs
xchg
add
sub
push
rolb
sub
mov
dec
mov
add
in
cmpsl
lcall
xchg
mov
les
jno
inc
mov
dec
test
pusha
pop
pop
and
jne
or
loop
out
jns
push
rclb
rorl
jno,pt
aam
js
sbb
std
mov
cmp
lcall
arpl
ret
fucomp
cmp
movsl
lods
int
push
xchg
jecxz
fdivrs
cli
stos
hlt
mov
push
faddl
sub
aad
clc
out
fs
arpl
or
imul
int3
enter
rorl
popf
les
idivl
imul
sbb
mov
call
mov
addl
cmp
orl
xor
and
stc
popf
pop
add
sub
inc
out
add
mov
pop
int3
es
mov
fstpt
mov
test
pusha
sub
call
divb
fwait
mov
push
inc
and
lock
push
jg
aaa
mov
shlb
mov
adc
push
jge
jg
jbe
xchg
sbb
jbe
mov
xor
dec
xchg
pop
fcompl
push
gs
data16
arpl
mov
xchg
xor
pop
loop
pop
jg
jbe
pop
loop
sbb
fimuls
lret
jge
ljmp
aas
cli
adc
push
xchg
hlt
mov
loop
jbe
pushl
lcall
sbb
adc
dec
inc
push
xor
add
test
adc
mov
jle
andl
rclb
out
mov
sbb
sbb
aad
cmp
scas
cmp
ja
cld
clc
mov
and
xchg
fcmovb
mov
mov
cli
push
dec
or
mov
js
xor
sbb
sub
jmp
push
xchg
inc
pop
sub
mulb
mov
cmpsl
fisttps
insl
push
pop
xchg
inc
pop
mov
bound
xchg
lods
add
lcall
pusha
cmp
aam
add
pop
sti
adc
cmc
add
jg
sbb
mov
inc
inc
pop
decb
cmp
fbstp
sub
repnz
mov
jle
lret
imul
inc
pushf
xor
stos
ss
adcl
addr16
test
dec
fmuls
out
cltd
js
xchg
adc
incl
mov
jne
mov
add
push
outsl
sti
inc
cmpsl
outsb
in
cltd
sub
test
clc
icebp
mov
push
fcomps
int
mov
in
lods
fisubl
mov
or
stos
fdivp
mov
lret
add
mov
push
jne
xchg
inc
lods
cwtl
sti
dec
xor
sti
loop
add
in
jae
dec
mov
push
or
or
icebp
pop
cs
cs
xchg
or
cmp
lahf
mov
fimuls
push
mov
data16
mov
jno
pusha
sub
push
fidivrs
pushf
xchg
adc
orl
aaa
xor
jle
aad
push
xchg
in
or
mov
je
xor
xchg
das
lcall
into
and
push
xor
sti
inc
or
mov
test
push
testb
add
or
hlt
jmp
sbb
pushf
pop
add
xchg
mov
inc
xchg
repz
mov
sub
or
push
cld
mov
mov
jmp
xor
jge
das
lds
cmc
pop
mov
and
xchg
jge
jle
mov
mov
insl
dec
cmpsb
enter
shlb
mov
mov
xchg
push
popa
outsb
adc
xchg
mov
pop
cmp
rol
std
pop
pop
cs
popf
add
and
jmp
add
push
popf
sub
xlat
sub
push
jns
repz
jge
pop
pop
movsl
cmc
inc
add
movsb
xorb
and
dec
inc
lds
mov
cmpl
inc
aaa
imul
flds
sbb
test
xchg
ret
std
inc
test
push
aam
adc
pop
lret
jnp
and
leave
loope
lcall
gs
pop
arpl
imul
push
mov
xor
fcomip
cmpsb
pop
lret
lret
std
and
repz
out
jp
pop
mov
cli
mov
movsl
jmp
mov
ss
pop
shl
insl
or
roll
cmp
sti
dec
jo
data16
pop
loop
imul
xor
inc
pop
neg
mov
push
cwtl
aam
dec
inc
lock
pop
xor
fisttpll
pmuludq
jp
xchg
mov
mov
gs
jnp
jl
aas
icebp
dec
mov
insl
movsl
dec
jmp
inc
push
ljmp
xchg
hlt
and
jge
outsb
movsb
push
mov
aad
icebp
sbb
in
nop
in
and
and
fiadds
enter
add
scas
dec
stos
outsb
bound
outsb
pop
mov
jae
xchg
push
cmc
imul
mov
mov
ror
pop
jmp
negl
adcl
insb
leave
popf
jl
scas
xchg
ficoms
jnp
inc
mov
push
aaa
fs
adc
push
mov
shlb
aaa
sti
xchg
inc
and
cmpsl
rolb
insb
lcall
mov
imul
pop
popw
mov
cli
fucomp
pop
dec
push
add
mov
mov
int
pop
fcomps
lock
subb
mov
mov
cli
je
mov
xor
jb
ret
adc
and
test
cmp
lods
clc
jmp
cmp
mov
jnp
adc
addr16
xchg
xor
mov
cmp
fcomp
outsl
adc
daa
movsl
push
jmp
pop
cmp
loop
sbbl
mov
push
sub
mov
out
mov
lock
sidtl
ret
and
cmp
js
enter
aaa
jecxz
insb
xorb
cmp
insl
out
test
or
mov
mov
xchg
jg
fidivrl
insl
jo
mov
mov
or
or
lods
rcrb
pushf
push
in
into
jo
shlb
push
jle
loopne
sbb
stc
mov
addr16
jg
push
ret
mov
xchg
adc
pushf
test
stos
dec
test
mov
adc
adc
pop
test
sub
jo
insb
sbb
xchg
mov
inc
jnp
cmpsb
faddl
sahf
sub
adc
not
scas
js
mov
push
xor
stc
mov
jmp
in
or
mov
sub
int3
popa
add
pop
or
sahf
sub
mov
xorl
test
cmc
pop
dec
jnp
or
cmc
and
adc
push
arpl
sbb
adc
in
xor
cli
mov
das
aad
sbb
in
lds
movsb
inc
loope
nop
sub
jecxz
mov
popf
sub
nop
into
and
jno
scas
loope
shlb
add
inc
adc
xchg
into
loope
mov
xlat
loop
in
in
cmp
lock
xchg
inc
sbb
loop
int
test
test
push
movsl
lret
ja
xchg
and
push
push
and
push
adc
outsb
in
inc
inc
aam
cmp
fnstenv
ficoml
faddp
dec
jb
mov
cmp
add
cmp
sub
jge
xchg
movsb
adc
pop
lea
hlt
into
in
pop
int
xchg
imul
xchg
je
cmp
sbb
test
pop
push
and
addr16
sub
popa
push
push
test
out
mov
sub
lcall
adc
leave
and
lret
aam
or
lcall
popa
xorl
sar
mov
and
pushf
xor
mov
push
fistps
sbb
sub
imul
js
addr16
xor
icebp
lret
pop
pop
adc
pop
pop
sbb
push
adc
js
cmp
scas
or
cs
mov
xchg
mov
adc
cmp
xchg
aaa
and
push
or
xchg
iret
sbb
out
jecxz
mov
cld
imul
mov
ljmp
fcomps
rcrl
inc
push
outsl
or
call
cmpsl
push
add
adc
lods
aad
xorb
stos
push
outsl
fwait
bound
enter
js
pushf
mov
movsb
pop
repnz
sub
pop
mov
cmpsb
test
loope
mov
aam
in
in
or
test
jae
cwtl
xor
sbbb
mov
pop
inc
cmp
cmc
and
pop
push
fisttpll
mov
clc
icebp
and
adc
or
push
pusha
adc
mov
call
ret
nop
fstpt
and
out
pop
stos
or
xor
pop
xor
pop
sbb
jge
clc
sbb
jne
sti
notl
fdiv
adc
inc
sbb
test
cmpsb
lret
sbb
and
repnz
xor
push
fidivrs
mov
push
sbb
pop
adc
test
push
and
aaa
jl
sbb
xchg
das
mov
adc
outsb
sbb
mov
adc
xor
mov
xor
inc
or
inc
adc
mov
insb
push
mov
pop
or
push
sahf
jnp
or
push
sbb
ret
push
stos
or
inc
mov
lods
pop
idivb
xor
push
sti
shll
arpl
jp
in
jmp
leave
push
test
imul
outsb
pop
sub
insl
aas
cmpsb
xor
xchg
cmpsb
xchg
add
jnp
call
push
shlb
out
jb
sahf
jp
sbb
sbb
and
pop
mov
mov
inc
xor
inc
push
push
dec
stos
jnp
fistpl
test
xor
in
xchg
je
mov
dec
ficoms
xor
mov
inc
in
xlat
xchg
data16
sbb
dec
call
ret
pop
xchg
pop
add
out
fstps
scas
sub
mov
popf
sbb
adc
cmp
stos
stos
js
mov
mov
and
xchg
push
inc
leave
sbb
aaa
js
mov
jle
adc
sbb
mov
jnp
mov
mov
pop
mov
adc
decb
rcrl
lods
popa
subl
pop
push
ds
cmp
icebp
xchg
test
mov
mov
das
push
dec
pushf
and
dec
pushf
ret
popa
dec
arpl
fucomp
jae
jne
mov
pop
jnp
xchg
bound
gs
xchg
insl
mov
repnz
test
mov
pop
xchg
das
jecxz
cmp
push
xor
repz
idivb
mov
test
jecxz
and
push
mov
push
je
mov
pop
and
pop
pop
xor
fs
mov
pop
mov
add
shll
mov
mov
aaa
test
add
das
jno
andl
adcb
popf
pop
inc
sti
je
jle
xchg
nop
cltd
xchg
add
sbb
pop
xchg
dec
cmp
push
rcll
lds
pxor
outsb
aaa
popf
es
ret
push
dec
pop
pop
jo
adc
shll
mov
stos
mov
aaa
push
data16
mov
sub
cwtl
imul
cwtl
test
sub
pushf
dec
ss
lods
or
dec
scas
xlat
pop
in
pop
adc
fsts
test
cltd
sbb
xchg
mov
push
sub
push
arpl
and
sbb
and
push
ss
pop
dec
ret
or
mov
or
xorl
dec
push
mov
arpl
sti
ret
ret
mov
test
mov
inc
pop
dec
or
iret
pop
int3
fnstenv
mov
and
cld
popa
sub
dec
jo
js
push
sub
and
cmp
mov
and
mov
popa
movb
shl
insl
adc
push
add
push
sahf
push
in
lock
repz
push
mov
and
pop
push
stos
arpl
int
push
fistl
in
subl
jle
jbe
es
inc
and
pop
dec
and
mov
es
clc
push
inc
int3
mov
push
or
mov
das
sbb
mov
mov
xchg
imul
and
adc
mov
loope
rcll
pop
arpl
lods
adc
lret
sbb
sub
adc
inc
xchg
ret
cmpsl
cmc
ret
push
pop
movsl
mov
js
jne
rcr
fldt
fcmove
push
jnp
add
push
fs
imul
mov
lahf
mov
mov
enter
and
mov
sti
fmull
xchg
outsl
repz
shl
mov
dec
leave
xor
in
popf
push
push
aaa
gs
xor
jo
adc
sub
insl
dec
pop
arpl
cli
lcall
xchg
jg
loopne
lcall
xor
cmp
daa
ja
sbb
daa
pop
mov
add
ret
scas
dec
jae
mov
push
sbb
nop
rcr
es
mov
adc
dec
aaa
jne
out
xchg
ds
inc
popa
cmp
mov
or
and
pop
out
or
or
ds
in
cld
aaa
outsl
lret
xor
aas
stos
and
fxch
fwait
shl
iret
rclb
jb
mov
jno
cltd
cmp
cmp
std
sub
xchg
add
jns
mov
lds
add
int
lahf
adc
scas
sahf
sub
dec
push
cwtl
mov
fisubl
xchg
sahf
push
or
mov
or
inc
mov
mov
mov
and
imul
gs
mov
cmpsl
pushf
cmp
xchg
stc
outsb
sbb
repz
aas
test
insl
leave
push
loope
fstl
aam
sbb
divb
fincstp
sub
mov
imul
sub
shr
test
xor
nop
daa
cmpsl
and
or
mov
dec
sub
mov
sbb
test
cltd
add
movsb
mov
dec
daa
mov
dec
movsl
aaa
sub
lea
push
inc
out
iret
cmp
roll
xchg
push
gs
sbb
out
in
adc
fwait
xor
shrl
and
mov
out
cwtl
ss
test
leave
sahf
xor
push
and
popa
mov
cli
es
mov
fdivs
xlat
jmp
add
je
in
stos
sbb
cmp
hlt
aaa
xor
cmp
sbb
stc
add
pop
xor
mov
cmp
arpl
and
jb
ja
and
je
ret
sbb
push
and
pop
stos
xchg
fwait
cmp
sub
dec
std
inc
mov
pusha
out
popf
aad
push
movsl
sbb
ret
daa
lret
xchg
inc
push
movb
xchg
popf
in
mov
sbb
xchg
divb
pop
push
push
test
xor
icebp
jp
bound
jb
xor
jbe
jg
mov
arpl
lods
fs
stos
dec
and
lds
push
out
sub
notl
adcb
ficoms
lcall
sub
or
aad
xlat
mov
daa
test
xor
xchg
push
fldz
hlt
cmpsb
repz
nop
aad
mov
stos
adc
cmpl
cwtl
jp
and
xor
push
sub
pop
mov
pop
mov
addb
movsl
dec
inc
fwait
pop
mov
mov
mov
inc
lods
in
pop
hlt
jecxz
mov
pop
and
add
fcomps
out
repz
inc
mov
addr16
inc
push
loop
enter
and
sarl
int3
into
ficompl
fwait
jmp
lock
push
fmuls
adc
dec
insb
mov
xor
inc
int
add
insb
jmp
or
arpl
sbb
mov
mov
fimull
or
daa
xor
xchg
repz
pop
rorb
fnstenv
test
ret
popf
xchg
dec
xchg
or
push
push
push
push
push
mov
and
lock
mov
sub
das
mov
ljmp
and
push
bound
push
lds
cmp
adc
mov
sbb
aam
push
lcall
fldt
adc
pop
xor
mov
test
adc
jecxz
push
jo
inc
push
int3
cmp
jno
lea
call
mov
lret
imul
xchg
sub
out
mov
cwtl
sbb
mull
loop
loop
ficoml
icebp
xchg
push
jg
jnp
dec
jnp
xchg
mov
lret
cmp
into
shrl
pop
aaa
jne
aad
sbbl
dec
mov
fistps
mov
jp
les
movsb
add
xchg
outsb
outsl
aaa
adc
push
cmpb
andl
popa
pop
pop
int
dec
fwait
add
xchg
pop
movb
pop
aad
rcl
jg
sub
loope
in
pop
push
jle
in
cmpsl
movsb
shrb
das
gs
iret
jns
xor
pop
mov
scas
and
into
or
xchg
sbb
cwtl
mov
sub
push
leave
and
jnp
cmpsl
mov
loope
cli
mov
into
test
xchg
inc
das
pop
inc
jae
add
push
dec
mov
dec
mov
repnz
sub
xchg
movsb
or
push
pop
leave
fstps
out
xchg
xlat
call
stos
icebp
enter
xor
lods
stos
mov
es
and
jg
cld
or
dec
ljmp
loop
push
xchg
jg,pn
xchg
dec
jno
popa
aad
mov
repz
mov
adc
loopne
scas
lret
pop
mov
mov
fcomps
push
nop
inc
dec
jno
sub
ret
add
pop
inc
outsl
mov
inc
jmp
jnp
fs
pop
mov
pop
mov
sub
cli
rcll
scas
outsl
or
jae
mov
pop
hlt
std
inc
popf
pop
cmc
sub
in
jbe
sbb
push
enter
cld
jp
aas
andb
pop
jg
movsb
add
ss
ja
xchg
add
ds
fbstp
jb
jg
pop
fnstenv
push
cmp
lret
iret
mov
lret
cmp
fwait
bound
pop
pop
arpl
js
cmpsl
loope
xchg
aas
mov
int
adc
in
jbe
js
push
jle
and
imul
or
js
leave
inc
outsb
fidivl
cli
mov
adcl
ret
insb
pop
outsl
xor
mov
pop
out
or
pop
mov
das
lret
add
pop
sub
insb
add
ljmp
imul
add
push
paddw
and
jb
test
sbb
addb
insl
jne
fisubrl
repnz
arpl
addr16
sbb
mov
mov
sub
adc
mov
mov
scas
mov
jne
pop
out
mov
xchg
sub
out
mov
incb
mov
cmpsl
push
pushl
cmc
push
andb
hlt
mov
mov
cmp
inc
scas
outsb
sar
push
test
pushf
sbb
imull
scas
pop
mov
repz
clc
push
ret
mov
rcl
je
push
test
hlt
mov
add
repnz
outsl
adc
cwtl
scas
adc
test
sub
sahf
or
lea
ret
leave
adc
fs
mov
jne
mov
jne
decl
inc
mov
lahf
cwtl
sub
insl
fstpt
pop
ret
sub
mov
jae
mov
addr16
jae
xchg
jo
dec
jle
repnz
icebp
dec
sbb
jmp
pop
lahf
mov
stos
call
sti
les
ss
sub
loop
sbb
pop
cmc
xor
ja
sbb
sub
xchg
fsub
fsubrl
inc
aam
xor
lods
ret
jbe
mov
test
mov
lds
fstpl
icebp
mov
mov
ss
ds
lods
aam
lret
rclb
sbb
aas
fnsave
jae
sahf
sub
test
inc
ds
pop
pop
xor
stc
inc
or
mov
aaa
cwtl
jne
arpl
xor
and
lahf
inc
or
lcall
pop
in
repz
xorb
ss
add
sbb
xor
push
jle
lret
push
call
sbbb
jl
lahf
and
gs
xchg
mov
mov
pushf
dec
mov
jle
and
jl
loop
hlt
loopne
push
mov
xor
loop
enter
ret
xor
dec
rcrb
mov
adc
or
xor
mov
fstl
pop
xchg
repnz
push
add
data16
sti
repnz
gs
push
xor
xchg
subl
test
or
sbb
xchg
jecxz
movsb
xchg
inc
fwait
sbb
push
inc
ss
pop
cltd
ds
mov
sbb
orb
dec
adc
cmp
inc
xchg
inc
scas
push
push
adc
mov
jne
and
mov
rorb
xchg
mov
ret
test
pop
mov
sub
sbb
mov
push
push
lods
mov
xor
cmp
movsb
sbb
sbb
jno
shll
enter
iret
dec
aam
dec
movsl
jae
repz
push
xor
mov
fiaddl
xchg
push
cmc
add
mov
jecxz
popa
push
pop
aaa
in
jle
xchg
loope
xchg
fstpl
mov
mov
popa
fcoms
mov
pop
adcb
adc
push
mov
mov
sub
movsl
cwtl
shl
mov
jbe
out
sub
lea
pop
sbb
mov
lods
sub
jge
push
and
xorb
das
mov
jo
pop
mov
push
and
push
cmc
mov
push
or
push
test
and
into
dec
cmpsb
or
aas
nop
pop
sub
xor
mov
loop
mov
clc
mulb
iret
dec
mov
test
inc
out
xorb
lea
fwait
mov
in
je
mov
jecxz
inc
push
gs
aam
adc
repnz
xchg
test
xor
mov
mov
push
add
ljmp
cmp
test
sbb
icebp
xlat
je
xor
loope
jne
jns
inc
scas
fldt
mov
ficompl
mov
add
cmpsb
loope
or
mov
outsb
sahf
subl
lret
push
iret
mov
mov
add
iret
stc
ret
loopne
in
stc
xchg
mov
iret
jbe
popa
jbe
add
and
mov
or
ret
call
jmp
sahf
dec
jg
into
mov
lcall
roll
jo
push
cmp
push
mov
aaa
xor
add
and
shl
lods
and
dec
cmc
int3
adc
nop
pop
ljmp
push
js
jmp
sbb
sbb
mov
je
or
jne
loopne
push
jbe
sbb
jle
sub
popa
mov
adc
test
mov
call
shl
lret
les
xchg
jns
push
mov
mov
shrb
hlt
fadds
lahf
out
xlat
mov
xchg
pop
push
mov
gs
jle
insb
dec
cmp
aaa
ljmp
mov
imul
movsl
push
adc
xor
xlat
movl
shlb
xchg
insb
and
lret
shlb
scas
lods
pop
out
add
cmp
es
pop
lods
addr16
es
pop
xchg
mov
pushf
jne
jl
or
inc
jb
fucomip
leave
sbb
jecxz
movsb
push
pop
pop
das
sub
mov
jle
and
scas
push
cmp
lret
rclb
mov
pop
andl
lret
xor
and
insl
jecxz
xor
call
fwait
stc
scas
in
xor
lods
ljmp
in
dec
jns
sub
add
in
lret
xor
ret
mov
scas
inc
ljmp
scas
loope
or
xchg
xchg
sub
addr16
sub
mov
jl
mov
dec
lret
add
adc
and
push
jnp
pop
inc
cld
mov
test
movsl
xchg
cmpsl
jo
cwtl
or
jmp
rclb
rorl
clc
out
jle
popf
dec
cli
pop
pop
fimull
mov
xchg
mov
jp
or
rclb
mov
xchg
cmpsl
mov
stc
push
xchg
inc
stc
aaa
insb
shll
cmp
xchg
push
aam
mov
pushf
leave
gs
jne
insb
movsl
push
jle
xor
xor
negb
popa
fwait
rcrl
adc
xor
mov
icebp
sbb
sub
mov
jno
pusha
cmp
xchg
or
xchg
mov
pop
fbstp
loopne
pusha
push
cmp
test
xchg
push
jno
jmp
push
or
push
cld
pop
mov
adc
sbb
cmp
cmp
test
insb
shr
in
inc
in
xlat
and
inc
adc
xchg
sub
xlat
lcall
fwait
or
test
sahf
inc
jmp
and
std
insb
lret
and
out
xchg
or
in
lds
or
or
movsl
xchg
and
repnz
aam
dec
sbbb
mov
mov
mov
push
push
js
data16
xchg
sbb
mov
cld
call
and
push
cmp
enter
or
pushf
decb
insl
jmp
push
pusha
or
lock
dec
jp
int3
lods
adc
inc
pop
jp
adc
arpl
loop
sahf
sub
inc
rorb
es
cmc
jns
lahf
outsl
lahf
scas
push
mov
addb
inc
pop
xor
inc
lahf
das
cwtl
in
xor
fst
add
rorl
pop
orb
in
test
loopne
mov
and
aas
ret
sub
outsl
adc
std
mov
notb
test
addb
ds
sbb
ss
ret
in
jo
sahf
gs
lea
les
mov
or
push
xlat
push
scas
sbb
rol
inc
cmpsl
in
pop
test
call
xor
jo
inc
das
cmc
push
pop
cli
rorl
mov
push
sub
and
or
sub
fdivs
movsl
push
rolb
cld
mov
mov
pop
shll
dec
cltd
mov
in
add
jmp
pushf
into
cmp
filds
fistpll
jle
or
repnz
fs
outsb
fidivl
stos
andl
inc
sbb
enter
inc
mov
pusha
or
out
stos
mov
jno
ret
push
mov
pop
lcall
stos
call
pop
lahf
and
add
outsl
sbb
outsb
int3
adc
shl
mov
sbb
fidivl
dec
or
add
pop
jo
idiv
dec
add
insl
jno
lret
iret
sahf
fsubrp
cli
sarb
fwait
pop
nop
loopne
mov
lds
push
sbb
inc
jge
ret
inc
inc
int3
enter
cld
and
cmp
mov
pop
cmc
xor
add
inc
pushf
ficoms
inc
loop
dec
jle
js
stc
imul
pop
xor
out
call
int3
jl
mov
mov
cld
and
pop
sbb
mov
xchg
jae
mov
or
push
jo
mov
orb
cmp
stos
cmpsl
das
shl
dec
clc
in
ss
lret
jmp
addr16
xor
xlat
std
fwait
mov
test
fists
in
inc
push
jecxz
inc
push
push
sbb
aaa
into
xchg
imul
add
lret
arpl
into
pusha
push
cmp
decb
pusha
mov
das
add
pop
call
inc
aad
mov
xor
jbe
push
jp
jo
lret
inc
add
inc
or
cwtl
add
or
xchg
xor
fmulp
cmp
out
mov
jne
cmpsl
push
push
cmpsb
xchg
add
fdivr
mov
std
sbb
lahf
loope
jnp
xor
imul
mov
in
dec
mov
xchg
dec
div
inc
cmp
push
push
sbb
rcr
mov
pusha
in
push
mov
lahf
dec
test
or
jg
jae
push
cmp
jbe
andb
shr
pusha
inc
icebp
pop
hlt
add
das
stos
setg
jp
imul
or
cltd
mov
fidivl
cmp
ss
pop
bnd
fidivrs
jg
bswap
popa
int
int
push
mov
addr16
cmp
das
shl
packssdw
cmpsl
mov
les
je
mov
push
xchg
xchg
or
loopne
test
mov
xchg
dec
rol
or
stos
fmull
ret
fldenv
fildl
or
addr16
ret
adc
inc
clc
add
pop
fstpt
enter
xchg
dec
out
dec
ja
fdivs
into
push
sub
stc
aad
jle
scas
mov
inc
cmp
push
jl
or
lods
outsb
bound
add
iret
lret
nop
and
xor
lret
add
aad
les
pop
jo
jmp
push
mov
fsin
addb
testb
mov
push
add
dec
aas
notl
dec
add
lock
mov
sti
xchg
inc
mov
jb
aas
cmpsb
outsl
xchg
inc
jns
loope
sti
add
or
popa
sbb
mov
lds
inc
mov
cmp
jo
sbb
mov
es
clc
repnz
cmc
insl
cmp
sbb
stos
mov
aaa
les
ret
jb
scas
negl
cld
xor
mov
push
pop
ret
jecxz
imul
cmp
mov
push
push
jecxz
xorl
out
inc
ljmp
push
or
push
mov
mov
aas
cmp
xchg
cmpsb
neg
dec
movsb
daa
aad
push
and
arpl
inc
frndint
addb
aaa
dec
inc
inc
movsb
arpl
add
mov
in
xor
xchg
imul
mov
push
add
aam
mov
jb
mov
out
xchg
bound
scas
pop
push
rcll
fnstenv
sub
stc
into
sbb
std
div
imul
sbb
sub
in
jmp
cmp
fidivs
stc
mov
push
bound
fnstenv
cmp
jno
cmp
inc
jg
pop
pop
or
jp
xlat
adc
es
insl
jl
sub
add
add
jb
ja
dec
vminss
or
xlat
neg
jns
mov
outsl
cmp
mov
inc
xor
cwtl
es
mov
pop
cmp
ret
cld
jnp
filds
aas
mov
sbbb
or
and
in
mov
aaa
cmc
mov
leave
stos
stos
in
dec
or
out
inc
jge
sub
repnz
add
dec
mov
fucomi
fcomps
addr16
jb
and
xchg
roll
adcb
inc
mov
adc
jg
shl
sti
jo
dec
loope
jp
scas
adc
adc
mov
push
lret
add
aas
inc
js
or
add
iret
fwait
add
pop
mov
mov
imul
xchg
fidivs
test
mov
int3
jge
cmpsl
inc
mov
add
cmp
add
xchg
std
lahf
movl
mov
fldcw
stos
in
and
rdmsr
aad
pop
out
pop
imul
fldcw
repnz
fwait
insl
jecxz
cmp
jg
inc
jns
xchg
mov
sbb
rdpmc
sti
test
cmp
dec
sti
xchg
stos
xor
mov
lods
data16
jge
sub
inc
cmpsb
pop
cmp
mov
cmp
xchg
aad
js
enter
repz
es
lcall
lret
xor
sbb
sahf
add
push
mov
mov
repz
shll
xchg
jcxz
inc
adc
jg
fsubs
inc
jne,pn
sarb
les
inc
pop
cmp
jmp
nop
xlat
fcmovu
roll
popa
clc
sub
and
push
and
leave
mov
and
push
mov
cmp
sub
stos
into
clc
adc
insl
mov
scas
jno
fimuls
and
xchg
gs
fidivrl
jle
lods
pop
hlt
out
cmp
push
sbb
xlat
xor
jne
xor
push
dec
fucomp
repz
shll
xchg
nop
inc
pusha
sbb
ds
test
add
jnp
push
leave
sbb
mov
in
pop
leave
in
push
pop
sub
rcl
fs
xor
pop
sarl
fildl
dec
and
cmpsb
xchg
inc
xchg
popf
cmp
mov
jp
shlb
adc
and
add
mov
lcall
adc
idivb
outsl
or
in
scas
loope
in
paddq
in
pop
mov
cmpsb
push
js
roll
shll
cmc
in
pop
inc
out
rcrb
mov
inc
push
test
xlat
outsb
dec
xorl
mov
movsb
jge
or
xor
aad
jg
rcrl
icebp
aad
in
xchg
les
or
leave
psubsb
scas
nop
push
ljmp
lods
pushf
sub
jne
call
mov
std
out
dec
lcall
inc
leave
dec
xchg
cmovnp
mov
mov
push
movsb
lcall
pushf
xor
rol
inc
fisttpl
movsl
out
xchg
lods
fisubs
jle
jno
push
jp
out
sub
test
pop
lret
ja
dec
outsb
divl
lods
dec
popf
stos
mov
fldt
xor
ljmp
in
push
pop
fdivl
cmp
sti
icebp
xchg
test
das
pop
aam
jo
loopne
sub
inc
cmp
fisubs
cmpsb
clc
fsubr
mov
nop
jae
test
cltd
loopne
iret
rcl
stc
xchg
mov
pop
outsb
push
sub
adc
jae
pop
and
cltd
adc
mov
push
xlat
sbb
rorb
out
mov
mov
pop
sahf
mov
dec
stc
xchg
test
or
sarb
repnz
xchg
test
bound
subb
sbb
mov
sbb
mov
insb
mov
int
movsl
test
scas
or
or
xor
push
add
mov
xlat
and
int
push
jmp
scas
sbb
push
hlt
jb
mov
data16
sub
mov
cld
mov
xchg
xchg
adc
sbb
lret
test
xchg
xor
es
fnsave
pusha
notl
add
rcrb
cwtl
cwtl
xor
ss
sub
mov
sub
sbb
jbe
push
js
ljmp
fldl
lds
loopne
pop
jecxz
add
cmpsl
jo
mov
or
adc
mov
push
test
inc
inc
idiv
jecxz
pop
inc
dec
jbe
adc
call
test
mov
jle
and
ljmp
mov
cmp
or
fxch
mov
clc
lea
mov
sahf
or
ja
outsl
iret
leave
pop
in
xchg
sub
mov
add
lahf
cmp
insl
fstps
dec
jnp
sub
xor
test
stc
popa
jge
and
lret
lds
adc
mov
leave
mov
mov
pop
sub
sub
lods
sbb
adc
mov
sub
xor
test
xchg
iret
mov
in
shl
push
push
fs
ucomiss
mov
lods
ja
mov
jo
cmpsb
fstl
adc
ljmp
lcall
add
fwait
inc
cmp
into
lods
adc
add
xchg
inc
out
mov
mov
xorl
gs
ret
iret
shlb
fcomps
aad
iret
mov
movb
aam
or
xor
fs
pop
push
add
mov
jnp
fcomip
inc
insl
ss
mov
xchg
xchg
pop
int
insb
lcall
pop
idiv
add
loopne
decb
leave
mov
push
xchg
mov
imul
scas
cmpsl
cld
sbb
xchg
push
out
mov
call
ret
fistpl
mov
ret
jae
jno
fisttpl
rcrb
aaa
jbe
enter
adc
mov
pop
andl
mov
fdivr
test
addr16
ret
loope
adc
imul
in
test
sub
sub
mov
fyl2x
in
mov
xor
push
add
pop
pushf
xchg
mov
push
adc
xor
hlt
adc
push
outsb
jge
rcll
and
xor
mov
imul
pop
repnz
imul
je
sub
xor
inc
xchg
xlat
stc
jle
shl
inc
loop
mov
jecxz
out
cmp
in
jnp
enter
int
sbb
cmp
xchg
stos
mov
shrl
in
mov
inc
insl
add
mov
pusha
mov
sbb
repz
and
mov
popa
loop
fcompl
out
sub
clc
cmpsb
cmpsl
push
and
add
imul
mov
sub
cltd
and
jg
int3
cwtl
aaa
add
nop
push
lret
arpl
ljmp
sbb
push
sbb
sti
test
pop
leave
mov
xor
jne
push
push
int
push
idivb
ja
mov
nop
pop
arpl
test
cmp
test
inc
adc
pop
adc
das
xchg
je
push
pop
push
adc
add
ds
gs
fildl
movsb
in
dec
jnp
aam
adc
add
mov
push
xchg
sbb
loopne
mov
scas
push
mov
pushf
cmp
mov
jmp
dec
inc
mov
cld
out
ret
insb
push
jl
xchg
in
sbb
scas
mov
loopne
mov
push
enter
icebp
into
add
fldcw
lahf
mov
sbb
dec
pop
dec
insl
adc
scas
and
je
out
out
cmp
mov
sbb
shlb
pop
mov
adc
sub
shrl
jnp
jle
sti
std
loopne
jmp
or
test
aam
lds
add
ja
inc
sub
lds
add
aam
mov
stc
xchg
imul
dec
rclb
mov
adc
mov
test
jno
sbb
gs
or
adc
std
pusha
jg
inc
mov
add
jae
add
pop
pusha
pop
popa
sarl
xor
sub
and
bound
mov
sub
add
push
adc
xor
xchg
dec
insb
jmp
lret
pop
xchg
pop
loop
arpl
or
stos
xchg
aaa
cmc
jb
rcrl
mov
imul
xchg
xor
test
test
subb
out
xlat
addr16
sbb
je
lods
xor
repz
lret
movsl
add
adc
stc
pop
loop
ss
aad
jne
mov
mov
iret
je
in
mov
pop
aaa
lods
daa
adcb
push
mov
out
aas
outsb
jo
jg
push
out
setbe
mov
adc
dec
pop
imul
sbb
push
gs
mov
imul
add
icebp
xchg
sub
and
nop
test
or
loopne
xchg
lcall
outsl
fnstcw
xchg
lret
ss
jle
pop
dec
cmpsb
pop
in
sahf
push
cmp
jge
adc
jge
xchg
jge
cmp
cmove
dec
ficoml
push
sbb
int
and
add
or
cli
sahf
mov
jb
scas
sub
xchg
xor
pusha
adc
insb
scas
mov
lret
fimuls
or
or
push
fwait
pop
pop
aam
xlat
cs
and
jmp
sub
call
scas
nop
xor
adc
mov
mov
lret
inc
fstpl
dec
jecxz
mov
dec
mov
mov
jmp
pop
jae
dec
inc
stc
movsb
cmp
adc
adc
add
gs
mov
xlat
pop
mov
bound
ret
addb
cmp
arpl
loope
aas
pop
lret
sbb
lds
cli
pop
adc
jne
jne
sub
out
xor
pushf
scas
ljmp
dec
aam
pop
adc
adc
mov
and
popa
adc
mov
mov
jmp
cltd
js
sub
stos
cwtl
mov
in
sbb
mov
fnsave
outsl
add
mov
cmp
jno
inc
adc
push
out
mov
and
lret
xchg
pop
or
and
jb
mov
push
xchg
pop
xchg
or
out
mov
inc
pop
xchg
sub
or
cld
cmp
icebp
and
fnstcw
adc
movsb
or
push
and
and
lret
jb
adc
jnp
clc
sbb
adc
ja
shll
aas
jo
add
xchg
shr
mov
sub
sub
pusha
xchg
cmp
sbb
sbb
mov
adc
jle
divl
dec
mov
mov
push
int3
and
mov
jmp
cli
add
xor
cmp
ja
sub
cld
cld
or
and
xchg
movsl
push
mov
in
outsl
add
mov
inc
in
or
cltd
pop
jne
test
test
mov
iret
ret
add
shrl
lods
test
dec
fisttpl
add
ja
pop
dec
sub
stos
imul
mov
pop
loop
aas
and
neg
mov
inc
sbb
push
outsl
ret
out
cmp
lds
orl
lret
hlt
adc
cmp
sub
xchg
push
adc
or
adc
out
add
stc
adc
rcrl
jo
adc
in
js
fmull
orl
and
push
fbstp
sub
push
adc
jnp
in
sarl
pop
orb
inc
jnp
ret
pop
and
xor
push
aad
xchg
add
mov
hlt
fbld
pusha
pusha
inc
lret
mov
sahf
lods
out
sub
imul
in
into
sub
xor
dec
test
ds
inc
js
repz
movb
loop
mov
outsb
rcr
insl
mov
mov
inc
lret
cmpsl
jns
cmpsl
mov
mov
nop
add
aad
adc
fdivl
mov
pop
mov
add
cli
lret
test
mov
adc
push
iret
cmpsl
dec
sbb
dec
fs
das
push
jnp
push
incl
mov
mov
std
leave
fucomip
ja
ret
or
cmpsl
movsl
mov
movsb
fbstp
outsl
mov
jle
xchg
or
ret
or
jl
push
mov
clc
mov
mov
rorl
inc
xchg
psllq
inc
sti
negl
push
ret
mov
lret
lcall
cltd
and
push
shrb
xchg
cltd
stos
mov
jp
adc
cmp
mov
iret
dec
loopne
pop
popa
icebp
xor
mov
ret
das
test
mov
mov
cmpsb
pop
in
cmpsb
mov
sbbb
je
clc
inc
pop
sub
jno
pop
mov
lods
mov
out
push
push
inc
fneni(8087
mov
aaa
pop
sub
roll
out
movsl
test
mov
inc
sahf
pop
sbb
cmc
xor
mov
int3
jp
movntq
dec
sbb
mov
scas
es
or
das
jb
jns
mov
repnz
fistps
jmp
shll
xor
ret
jae
sub
sub
out
push
lods
add
sti
and
cld
sahf
and
sbbb
into
lods
ret
jge
enter
in
add
push
mov
lock
and
in
fcomps
push
adc
mov
imul
or
jo
dec
test
in
mov
xchg
dec
test
adc
das
insl
stos
mov
push
in
jl
add
dec
in
xchg
mov
bound
pop
and
imul
adc
out
dec
in
cmp
sbb
lods
ljmp
cld
js
lcall
sub
andb
mov
cmp
xchg
mov
fs
les
pop
data16
pop
add
div
xor
xchg
jg
mov
add
aad
sub
xchg
and
test
sbb
hlt
cli
adc
mov
jle
dec
xchg
or
lahf
cli
push
pop
nop
pop
aam
addr16
cmp
cmpsl
pusha
jle
push
mov
repz
add
or
inc
xchg
mov
or
xor
adc
repnz
add
lcall
sbb
cld
sub
jno
icebp
cli
inc
push
test
out
fdivrs
in
fptan
daa
and
aas
iret
fsubl
lock
or
clc
jbe
loope
out
mov
roll
xorl
cld
inc
xor
rolb
fldl
inc
mov
sub
inc
cs
cmpsl
jle
sbb
fstl
test
cmp
fs
add
inc
inc
sub
ja
addr16
pop
pop
add
pop
out
insl
push
push
jp
ss
xchg
imul
mov
sbb
and
aad
std
sbb
loop
lahf
in
and
jl
xchg
xchg
cmc
int
ds
xchg
clc
mov
lea
loop
or
scas
cmp
stc
adc
mov
jb
mov
jmp
push
push
inc
faddl
dec
jl
das
data16
xor
xor
sub
sub
jno
and
xchg
mov
daa
scas
mov
cmpsb
test
test
inc
push
jnp
sbb
or
and
inc
jo
pop
leave
mov
es
cs
xchg
aaa
loope
leave
aad
fsub
js
aam
sub
xor
mov
mov
jp
mov
mov
adc
add
andl
es
fistps
mov
jno
mov
call
mov
mov
cmp
fstpl
or
bound
nop
inc
and
dec
mov
mov
in
and
ds
sub
dec
xchg
js
jecxz
sti
push
shl
xor
ja
dec
inc
testl
nop
ljmp
pop
lcall
xchg
or
data16
xchg
jae
push
jno
xchg
into
jbe
in
jns
rorl
frstor
xor
fnstsw
adc
in
mov
notb
into
pop
pushf
pop
cmp
mov
mov
popf
jp
inc
pop
pop
ja
lods
addr16
ret
lret
stos
cmc
cli
jae
lea
rorb
jmp
jg
inc
mov
xchg
xchg
sbb
adc
mov
loop
or
push
push
insb
pop
cmp
outsb
cmp
and
aad
mov
jp
cli
cmpl
dec
fsub
add
aam
stc
pop
sbb
cltd
push
test
inc
repnz
movsl
ret
lods
test
gs
xchg
shlb
sarb
rorb
sub
lahf
dec
fidivrl
pop
inc
lcall
arpl
jle
or
xchg
adc
mov
mov
test
test
faddl
push
adc
add
lret
or
mov
mov
inc
jecxz
cltd
jmp
into
add
inc
push
mov
sub
sbb
cmpsl
add
or
gs
dec
push
push
jmp
and
mov
inc
in
outsl
add
add
sarb
cmp
mov
push
aad
xor
push
subb
xlat
mov
shlb
pop
cmpl
mov
inc
sub
rolb
sbb
ljmp
sahf
push
push
cs
adc
das
and
pop
pop
xchg
adc
sbbl
xchg
fwait
and
ficoms
call
or
xchg
xorl
lcall
ret
sar
or
xchg
mov
cld
out
xor
jns
idivl
es
push
mov
mov
mov
cmp
mov
js
xchg
jl
push
bound
pushf
jne
or
xor
cmp
pop
inc
mov
lret
cmp
inc
mov
and
repz
or
dec
aad
push
xchg
and
insb
rorl
add
lds
lsl
mov
jnp
push
aaa
cmp
scas
adc
call
sub
lcall
mov
je
and
inc
add
mov
loop
mov
cs
jns
in
sub
mov
gs
pop
cltd
xchg
mov
arpl
sbb
popa
imul
mov
xor
cmpsb
mov
jmp
xorb
xlat
adc
pop
mov
and
jne
mov
xor
pop
in
mov
or
mov
fwait
rcll
and
xchg
mov
xchg
out
cmp
sti
push
repz
xchg
int
call
mov
pop
ret
mov
jle
inc
and
cmp
and
test
rclb
inc
pop
fwait
out
out
mov
xchg
inc
fimull
mov
xchg
out
jns
sbb
xchg
lret
inc
push
insl
inc
test
popf
mov
sub
out
inc
mov
mov
xor
and
push
adc
xchg
rclb
mov
cmp
mov
movsb
imul
add
jmp
jge
and
inc
mov
cmp
xor
sahf
insl
inc
int3
out
orb
and
mov
cmp
mov
dec
ds
cmpsb
mov
mov
sbb
cli
cltd
lds
sbb
loope
sub
or
push
cld
adc
sahf
je
inc
ljmp
sbb
lods
fdivs
sbb
std
lods
jne
xchg
cmpsl
fldt
das
in
xor
xchg
mov
dec
push
mov
repnz
aad
mov
pop
ss
mov
loop
jno
dec
cmc
jo
mov
xchg
faddl
adc
dec
dec
and
dec
pop
fnstenv
mov
push
roll
cmp
cmp
jg
push
adc
cld
xor
cmp
loopne
cmp
ss
testl
mov
insl
scas
je
adc
cmp
sbb
sahf
fistpl
stos
push
xchg
push
mov
xchg
fiadds
test
aas
sahf
jnp
sbb
inc
into
xor
insl
pop
mov
test
dec
mov
mov
mov
sub
psubusw
mov
cmpsb
mov
mov
mov
ss
lods
cmp
int
ret
xchg
jnp
sahf
shr
xchg
imulb
mov
pop
pop
arpl
daa
pushf
sbb
xchg
int
jne
lret
iret
sahf
cmp
pop
sbb
fistl
inc
andl
xchg
jecxz
cli
faddp
dec
fbstp
xchg
and
lea
inc
jmp
mov
decl
inc
push
ds
xchg
jne
mov
ljmp
les
int
cli
mov
xchg
ret
xchg
xor
mov
cmp
neg
jge
les
sbbb
repz
dec
lea
sbb
loope,pt
adc
push
outsl
xor
dec
std
push
push
dec
pop
maxps
cmpsb
cmp
xchg
outsb
xor
and
push
jecxz
pop
test
mov
pop
aad
lahf
or
and
xor
pop
aad
sarb
scas
xor
mov
in
mulb
imul
xchg
test
inc
adcl
insl
stos
fsubs
xor
adc
dec
xchg
jl
or
mov
pop
popf
aaa
in
imul
aaa
js
xchg
cmp
dec
in
jb
and
cmp
jo
fs
pushf
xor
xchg
xchg
dec
mov
notb
sub
nop
sbbb
pop
clc
pop
jne
fidivl
inc
mov
roll
cmpsb
xchg
xor
dec
xor
call
xchg
push
stos
out
jecxz
sarb
push
fisubrs
fldcw
push
popf
iret
lods
dec
roll
adcl
mov
sub
mov
jns
mov
and
imul
das
add
int3
mov
loopne
xor
mov
out
es
loope
inc
subb
adc
push
shlb
add
inc
inc
or
push
fsubr
adc
pushf
daa
inc
jno
negb
push
and
mov
clc
or
sub
int
push
in
xchg
out
cwtl
movsl
cmp
jne
fistpll
loopne
dec
sub
cmp
mov
lcall
pop
sarl
push
inc
dec
lret
rolb
ljmp
or
sar
sbb
rorb
cmc
in
cmp
inc
mov
inc
push
loop
repnz
aaa
and
mov
inc
mov
mov
notl
je
mov
pop
xchg
aad
test
into
jp
dec
sar
mov
in
mov
andb
mov
lret
push
xlat
lea
cmp
les
rorb
das
or
jmp
addr16
and
lcall
pop
adc
mov
pop
movsb
inc
call
std
repz
mov
cmpsb
jmp
data16
mov
int
out
mov
test
xor
push
es
push
enter
ficomps
or
or
insl
ret
jecxz
jns
testb
in
cmpsb
rcrl
push
xor
mov
enter
jne
xor
xchg
xlat
loop
fnstsw
stos
nop
aad
clc
cmp
mov
push
add
ss
push
push
xlat
or
xchg
adc
lret
fldl
imul
shlb
lods
insb
inc
bound
mov
fldl
mov
dec
mov
in
or
pop
xchg
jb
push
and
sbb
gs
dec
xlat
mov
imul
sahf
adc
sub
bound
pop
inc
sub
jno
push
xchg
in
mov
cs
divb
dec
pop
ret
and
xchg
outsb
cmp
jbe
stos
adc
inc
or
leave
jmp
xor
push
xchg
mov
popf
jnp
or
inc
es
aad
adc
arpl
cmp
push
incl
jb
inc
lahf
mov
jo
je
movsl
inc
jecxz
lcall
pop
jecxz
mov
mov
outsl
stos
fsubrs
fisubrs
iret
and
mov
movb
pop
or
mov
cmpsl
adc
aas
mov
sbbb
jmp
mov
stos
stos
mov
mov
clc
stos
decb
into
mov
arpl
mov
fsub
xchg
pop
push
xlat
mov
xchg
adc
nop
sub
repz
mov
sub
push
je
lea
sbb
fwait
dec
stos
imul
enter
push
sbb
inc
jbe
cmpb
das
gs
daa
jmp
loop
xor
pop
scas
inc
mov
cwtl
jg
dec
lods
mov
outsb
nop
xchg
xchg
aaa
add
lock
sti
enter
jmp
inc
in
xchg
jb
mov
fildl
pop
mov
rcrl
loop
sub
add
ss
xor
mov
sahf
sub
dec
xlat
inc
es
mov
out
lods
jl
pop
addr16
pop
sub
inc
fimull
xlat
mov
mov
addr16
daa
dec
stos
sub
cltd
les
sub
jne
push
dec
xchg
sti
add
pop
inc
ret
stos
outsb
addb
test
push
lds
cmp
dec
mov
mov
rorb
mov
xorl
pop
push
sbbb
outsl
xor
mov
inc
jmp
out
loope
push
sbb
scas
mov
nop
push
iret
push
jle
mov
aam
sahf
leave
outsb
adc
lods
ja
pop
aam
cmpsl
mov
hlt
out
add
add
adc
clc
hlt
and
das
sbb
jae
fbld
jp
xor
mov
pop
ret
cmp
add
jle
and
aam
xchg
mov
pavgw
addr16
or
fcoms
mov
sbbl
or
jbe
out
mov
add
arpl
lahf
cmp
xor
pop
jns
popa
pop
int3
call
es
dec
xlat
sub
and
pop
sti
and
leave
testb
iret
mov
sbb
mov
mov
sub
pop
ds
or
outsb
punpckhdq
jo
sub
pop
stc
xor
test
add
and
cmp
stc
call
jno
mov
push
iret
jmp
mov
and
addr16
in
xor
sub
add
add
icebp
sarl
sti
pop
arpl
pop
adc
mov
insl
dec
adc
or
ss
das
sbb
sub
insl
cmp
lcall
jo
testb
jb
out
fs
mov
fisttpll
dec
sahf
sti
push
ret
lcall
sub
xchg
scas
push
clc
hlt
jle
dec
test
insl
out
hlt
aam
lods
ss
rcll
je
xor
popf
adc
pop
or
outsb
jmp
push
cmpsb
xor
leave
imul
pop
ret
pusha
dec
cmp
shlb
aad
sar
dec
xor
mov
mov
xor
mov
push
pop
lcall
in
out
mov
notl
mov
inc
push
add
mov
pusha
aam
mov
ljmp
mov
pop
push
push
outsb
jmp
aaa
insb
pop
decb
faddp
mov
pushf
mul
push
movsl
popf
bound
inc
gs
mov
int3
iret
aad
rolb
pop
sti
cs
mov
and
cwtl
add
outsb
int3
ficomps
jo
pop
jnp
or
xor
adc
lahf
adc
js
hlt
enter
and
sti
idivl
loop
cmpsb
add
clc
mov
sbb
lahf
and
in
and
add
xchg
sbb
out
adc
mov
cld
pop
test
rorb
cld
adc
sahf
or
push
and
fwait
lahf
lea
mov
add
loop
sbbb
sbb
sbbb
sbb
mov
ficoms
or
xor
inc
testl
data16
xchg
cmpsb
imul
ljmp
mov
mov
or
mov
mov
push
fs
jle
mov
test
scas
xor
test
sarb
test
push
xor
or
ljmp
add
jp
mov
pusha
sbbb
cmp
out
dec
pop
or
out
test
test
scas
popf
rcr
enter
lahf
insb
shl
xchg
or
ret
jp
xlat
int3
mov
gs
sbb
imul
or
or
mov
loope
inc
int3
nop
jecxz
bound
stc
mov
arpl
loop
ror
cmpl
mov
imul
sarb
inc
ret
cmpsl
bound
mov
sub
jp
rdtsc
mov
push
xor
mov
enter
sahf
push
fisubrl
inc
and
arpl
nop
mov
xor
xchg
add
cmp
cmpsl
stos
cmp
out
mov
leave
idivb
pushf
std
dec
out
xorl
mov
xchg
fistl
mov
push
ds
ljmp
addr16
mov
mov
shlb
push
mov
mov
and
adc
lahf
test
xchg
imul
fnsave
fwait
sbb
aad
add
inc
mov
adc
fildl
cmp
push
into
inc
and
addr16
js
jns
xor
std
lea
sub
xor
in
xor
loopne
aam
dec
adc
jbe
subb
lods
dec
sbb
mov
repnz
lea
outsl
out
fidivrl
sub
test
push
pop
adc
int3
jns
push
and
test
xchg
pop
mov
fidivl
fwait
or
das
and
hlt
mov
push
mull
mov
and
push
cmp
xor
aas
dec
cmpsl
mov
aaa
add
add
mov
rol
dec
je
mov
inc
xchg
cmc
iret
mov
adc
fsubrs
or
hlt
hlt
out
cmp
imul
std
test
js
outsl
aas
out
lcall
cmp
pop
addr16
dec
or
mov
scas
cmp
jne
or
fildl
inc
jge
sti
xchg
shll
inc
fwait
sarl
pop
inc
mov
mov
into
jb
xchg
pop
sub
cltd
ja
sahf
dec
pop
mov
lret
int
and
xchg
jae
sahf
addr16
dec
fwait
icebp
test
xchg
mov
arpl
fcomip
mov
adc
fnstsw
ret
sub
mov
data16
mov
out
adc
hlt
jo
shll
dec
sub
popa
jne
sub
adc
ret
imulb
jmp
push
mov
sti
inc
pmulhuw
ficoms
sbb
shlb
hlt
add
aad
rcrb
lods
fs
mov
xchg
jae
xchg
dec
add
out
fldcw
xlat
or
xlat
nop
cmpsl
push
loope
lcall
sub
lcall
into
mov
jno
lock
jmp
and
lods
dec
aam
fimull
sti
imul
sub
pop
push
and
mov
loop
imul
pop
sub
cmpsl
pop
fwait
lds
pop
inc
push
jecxz
repz
shrb
inc
push
dec
mov
add
jmp
lret
sbb
xchg
or
sub
ret
push
jo
inc
lret
sub
ljmp
mov
fwait
xor
pop
cli
aaa
xchg
fists
push
xor
bound
repz
out
jno
nop
adc
clc
stc
js
cmpl
lds
mov
pop
xchg
inc
or
out
add
popf
sbb
xchg
sub
jge
adc
scas
stc
aam
push
sbbl
push
test
mov
pop
aaa
mov
mov
loop
add
pop
ret
lret
es
popf
ret
cmp
cli
ret
outsl
fidivl
dec
xchg
jp
sti
sub
cmp
push
in
repz
rclb
lret
dec
cltd
adc
daa
inc
add
sub
in
adc
movl
or
test
rcll
scas
imul
negb
sbb
outsl
fisttpll
iret
dec
dec
cltd
jle
pushf
add
jo
jbe
adc
push
mov
add
es
mov
movsb
xchg
jmp
sub
cltd
and
mov
out
or
hlt
sar
inc
or
shl
inc
pop
sbb
aas
mov
out
cmc
push
stc
xchg
push
lds
xor
jne
fisttpl
jbe
cmp
add
jns
xchg
stos
les
pop
cmpsl
and
dec
leave
adc
aad
pop
divl
jp
sti
cmp
or
push
lods
fildll
lock
and
adc
jb
lods
xor
and
pusha
adc
or
sub
cmpsl
cmc
and
push
lret
lcall
shl
pop
je
inc
xchg
dec
xor
sbb
dec
imul
push
dec
push
lods
test
cmp
push
leave
push
push
adc
jg
pop
and
mov
pop
popf
pusha
addl
imul
imul
sub
mov
mov
jnp
insb
popa
push
push
push
ret
adc
cmp
scas
inc
push
jl
pushf
jae
sub
adc
test
or
jl
test
clc
fcmovne
cmpsb
rcrb
or
sub
in
mov
in
push
inc
jl
scas
mov
jb
sahf
aaa
jno
test
daa
xchg
xchg
inc
push
aaa
jae
ret
pop
bound
out
push
in
sub
scas
xchg
jle
xchg
repnz
add
mov
ror
sbb
and
or
push
fisubl
xor
pop
int3
lock
jl
sbb
pop
test
movsl
xchg
loop
cwtl
stc
sub
fwait
xor
mov
sub
or
xor
push
ja
and
push
mov
movsb
lret
pop
pop
outsl
sub
mov
xchg
xor
and
sub
sti
mov
data16
pop
in
jbe
cltd
mov
inc
outsl
adc
sbb
mov
pop
loop
repnz
and
das
arpl
and
mov
popa
lea
out
popf
mov
div
lods
or
push
mov
mov
push
push
pop
ret
xchg
cmpsl
cltd
outsb
mov
and
sub
stc
js
repnz
inc
leave
mov
pop
and
aad
fnstsw
mov
mov
xor
test
pop
imul
pop
adc
idiv
test
hlt
push
lcall
cmp
jge
mov
popa
out
mov
std
mov
fcomps
out
insl
fs
xor
fdivrl
rorl
test
adc
arpl
mov
adc
mov
imul
mov
mov
pop
leave
lret
or
pop
into
cmp
cmp
bound
rorl
xchg
fstpt
push
out
test
ljmp
mov
cwtl
lds
fldl2t
ds
push
jo
cltd
pop
adc
mov
int
shr
mov
aad
lods
test
sbb
fs
out
add
lret
cli
push
fstl
dec
push
imul
push
mov
out
sbb
in
lahf
add
jns
fnstcw
outsb
mov
mov
or
pop
dec
xchg
lret
jo
repz
sbb
mul
sub
lahf
cmpsb
pop
mov
aaa
or
pop
jp
insl
shrl
jo
mov
test
push
fldenv
scas
hlt
js
inc
mov
inc
pop
cmp
mov
mov
mov
pushf
push
sbb
mov
std
pop
stos
sbb
jbe
and
shrl
sbb
sahf
dec
out
xor
clc
test
or
and
adc
jae
aas
inc
dec
or
sti
ss
push
mov
mov
mov
jb
fcoml
cltd
das
lea
dec
cmp
ja
lea
dec
or
cmp
xor
mov
push
fildll
add
pusha
shlb
pop
fadds
and
adc
mov
lock
lods
outsl
mov
and
xchg
cmp
inc
idiv
sub
push
add
lret
dec
jno
inc
divl
popf
hlt
out
sarb
ja
xor
mov
stos
into
iret
adc
and
or
repnz
add
lahf
ret
aad
add
xchg
push
mov
dec
mov
push
fwait
mov
jp
push
jl
xor
xchg
stc
mov
mov
imul
inc
mov
pop
xchg
cltd
lods
mov
mov
ror
pusha
dec
add
or
cs
lea
mov
mov
aas
cmp
pop
outsl
dec
or
sbb
mov
mov
lods
pop
adc
cwtl
jb
push
pushf
inc
sti
dec
and
push
mov
aad
push
lock
xor
push
mov
mov
hlt
mov
cld
ret
popa
pop
mov
push
mov
mov
sbb
inc
add
shll
clc
sbb
ljmp
xchg
das
push
jge
loop
push
or
xchg
push
int
out
stc
cmp
jle
mov
gs
pop
push
mov
cmp
je
aaa
jo
pop
adc
cwtl
pop
mov
rcrl
xchg
test
testl
mov
or
sbb
inc
mov
xor
mov
push
jne
jg
lahf
lcall
es
testb
pushf
imul
and
cmp
aaa
sbb
mov
repz
mov
mov
cmc
lods
add
imul
jl
fwait
xor
cs
and
lock
sub
iret
jns
jns
ljmp
stos
xor
arpl
or
call
push
fs
shll
ja
arpl
mov
mov
lods
fsubrl
lret
shrl
stos
sbbl
and
bound
mov
cmp
fisttps
sarl
push
incb
cs
mov
mov
xlat
add
ficoml
pop
lock
adc
inc
xchg
ja
enter
dec
ljmp
lahf
pop
stc
add
imulb
push
repz
push
jne
mov
cltd
rcrb
inc
cmpb
pop
sub
cmp
adc
gs
jl
sti
cli
inc
jne
xorb
xchg
dec
test
mov
mull
push
and
xchg
push
es
jmp
ds
leave
lock
mov
loop
fcomps
adc
mov
mov
adc
sbb
xchg
hlt
sbb
stos
shrb
sub
test
shrb
shlb
jp
or
add
int3
aas
out
adc
pop
xchg
add
mov
adc
outsb
daa
clc
clc
cmp
lcall
rolb
icebp
pop
test
imul
inc
sbb
mov
inc
mov
pusha
insl
adc
jmp
stos
xchg
lods
lret
aaa
push
push
andl
mov
pop
jb
lcall
jae
dec
cmp
mov
lods
add
push
xchg
call
lret
push
sbb
inc
pop
stos
mov
inc
sub
or
testl
in
mov
or
cmp
xlat
xor
sti
fldl
scas
or
fsubrp
femms
mov
lea
fs
dec
or
xchg
data16
es
sub
hlt
cltd
inc
mov
out
pop
push
cli
shl
adc
arpl
push
and
lahf
cmpsl
andb
or
mov
add
loop
jle
imul
push
lahf
sbb
pop
dec
or
jmp
cmp
inc
mov
fisttps
cmpsl
cwtl
push
add
push
jl
out
and
ljmp
aaa
arpl
aaa
dec
mov
addr16
sub
sbb
sub
push
into
ds
jecxz
and
pop
ljmp
test
out
aas
outsb
push
ret
dec
sbb
pusha
and
enter
cmc
cmpsb
je
mov
adc
stc
fdivr
dec
in
push
out
mov
push
scas
ja
mov
out
aad
xor
sti
push
loope
xor
inc
in
cmc
addr16
xor
jno
xchg
and
mov
or
dec
xchg
xchg
fsubp
data16
pop
push
mov
cld
cmp
js
loope
push
dec
popf
cmpb
xlat
cmp
and
iret
push
sahf
pushf
cmp
sbb
push
jnp
sub
cmp
add
cmp
rcrl
or
mov
pop
into
xor
adc
shll
mov
mov
mov
pop
mov
icebp
cwtl
jmp
jae
push
movsb
fimuls
stos
aad
push
leave
lock
fnsave
xchg
stc
insl
mov
repnz
push
rcrb
lds
stos
sbb
stos
es
in
leave
dec
lret
jp
pop
cmpsb
push
and
imul
or
jae
xchg
imul
jnp
and
fisttps
stos
and
mov
xlat
int3
pop
jg
loope
add
clc
into
and
js
cmpsb
lods
incl
fscale
arpl
jnp
push
nop
push
xchg
push
and
or
dec
int3
xorl
dec
popf
jns
gs
sbb
xchg
add
sub
das
cmp
mov
jne
orl
test
int
int
dec
mov
dec
movsl
lods
rolb
lea
cmc
pop
fists
pop
jno
outsl
push
sbb
les
fsubs
sahf
in
xchg
fdiv
jns
int3
xchg
imul
arpl
gs
shll
out
add
dec
pushf
iret
fnstenv
dec
jns
mov
dec
lcall
mov
iret
cltd
adc
mov
inc
and
mov
insb
dec
xor
fcompl
movsl
inc
data16
adc
scas
mov
cmpsl
enter
mov
push
scas
fmull
push
push
add
sahf
push
xor
pop
repz
inc
jg
mov
aam
daa
mov
pushl
lock
fstpl
xchg
sub
sbb
arpl
mov
popf
push
enter
inc
xchg
push
test
dec
nop
enter
loopne
pop
mov
dec
vpunpcklqdq
imul
cli
dec
xchg
jnp
fxtract
int
mov
push
repz
cld
rcr
js
inc
add
pushf
mov
sub
and
xchg
or
popa
mov
sub
mov
or
outsb
icebp
or
mov
dec
mov
mov
jns
jbe
add
mov
leave
jae
pop
enter
mov
and
dec
mov
mov
xchg
mov
cmpsl
sbb
jmp
and
or
divb
shrb
sub
bound
xchg
test
pop
ljmp
rclb
out
js
sub
jge
sbb
dec
rcrl
adc
or
cmc
dec
inc
xchg
xlat
add
xlat
adc
or
add
sub
lret
xchg
sub
fnstenv
and
push
mov
fsubrl
push
inc
fists
out
leave
pop
es
mov
cltd
jecxz
rorb
subl
insb
aam
lcall
pop
outsb
inc
adc
mov
jmp
outsl
xchg
pop
sbb
shrl
stos
ss
mov
sub
push
test
and
mov
imull
ds
pop
rorl
cli
push
inc
xor
cmp
jmp
xchg
es
fldenv
mov
add
pop
mov
add
test
loopne
push
xchg
inc
loope
inc
call
outsb
cmp
jo
jb
pusha
or
jb
movb
pop
sbbb
ficompl
add
cmp
adc
pop
jl
xlat
mov
mov
std
xor
adc
jne
jns
xor
pushf
ret
dec
lock
rcrb
jmp
rorb
inc
outsl
xchg
in
jl
roll
cltd
lea
test
xlat
gs
xor
jle
dec
xchg
test
or
gs
ja
shlb
jne
sti
mov
xchg
cmp
inc
ds
pop
mov
mov
xchg
pop
jmp
in
xor
call
loopne
jmp
mov
out
mov
sbb
push
subl
push
mov
push
imul
stos
cltd
jecxz
shll
and
pop
cs
inc
mov
insb
aaa
adc
push
sbb
adcb
or
cwtl
leave
shrb
bound
sub
rorl
inc
ss
leave
outsb
cmpsl
test
out
daa
xchg
cmp
mov
cmp
jp
iret
sub
jl
adc
dec
add
daa
iret
in
je
mov
fisttpll
je
adc
aaa
add
inc
pop
add
je
sub
adc
bnd
pop
cwtl
test
dec
jo
scas
dec
mov
adc
addb
inc
push
stos
sbb
sub
in
or
dec
adc
add
bnd
lock
inc
aaa
cmpsb
pop
stc
sarb
stos
jmp
pop
mov
push
push
call
mov
xor
cmp
lods
xchg
adcb
inc
cld
lods
decl
mov
adcb
jne
aad
xchg
push
clc
inc
jge
adc
fs
inc
sahf
call
lret
cmpsb
jg
adc
inc
cmp
sbb
popf
mov
pusha
fistl
ss
or
in
add
push
add
pop
mov
jae
js
mov
inc
xchg
inc
and
mov
mov
ds
ljmp
data16
sub
mov
test
pop
mov
sbb
xor
jno
cld
jge
pop
mov
std
pop
iret
inc
fbstp
repnz
enter
rorl
xchg
outsl
jno
xor
sbb
sub
lret
fsubrs
inc
enter
popf
lods
push
fisttpl
cmpsl
push
rcr
jns
jg
dec
hlt
add
mov
xchg
mov
jne
shrb
add
jge
movsb
dec
es
jecxz
adc
or
pop
mov
mov
in
cwtl
lahf
outsl
fmull
mov
jb
jnp
lahf
popf
repz
jecxz
out
in
mov
pop
addr16
jns
cmpsl
movsl
sbb
arpl
pop
stos
cmp
add
out
andl
lret
ror
out
mov
mov
and
add
sbb
fimuls
rclb
shrl
cmp
ss
in
xchg
test
adc
xchg
cmp
add
push
xchg
mov
test
jb
add
daa
xor
jae
cmp
mov
aad
lahf
lret
test
fbstp
ret
mov
je
cs
popa
test
cli
clc
mov
out
and
inc
out
dec
push
ljmp
xchg
mov
mov
into
jb
nop
xor
dec
cmp
xor
dec
xor
ds
jecxz
jge
xchg
or
dec
adc
pop
cmp
ljmp
pop
sub
cli
repnz
dec
aad
pop
outsl
add
or
dec
cmp
loop
dec
hlt
loope
dec
addl
clc
mov
xchg
xor
push
lret
cltd
cmc
jecxz
xchg
or
and
cmp
mov
mov
lret
rcrl
fdivl
scas
mov
jne
mov
imul
xor
nop
xorl
scas
std
push
insb
int
mov
dec
xchg
and
jmp
dec
lahf
in
sbb
in
loopne
and
mov
fisttps
movsl
imul
sbb
sbb
cmp
xchg
cs
and
cmpsl
push
xor
sbb
xchg
nop
pop
mov
movsl
sub
mov
pop
push
inc
xor
sbb
push
sbb
dec
aas
push
lds
inc
filds
sbb
test
add
sbb
pop
test
mov
imul
int
add
adc
daa
out
sti
add
mov
pop
test
movb
push
call
mov
mov
fdivrl
idivb
fs
mov
es
xlat
dec
push
xchg
sbb
cli
cmpl
sbb
sbb
sbb
push
pop
pop
dec
mov
mov
pop
stos
faddl
add
ss
shll
insl
data16
testl
mov
out
fs
mov
roll
iret
add
sub
movsb
jge
pop
out
add
lret
orb
pop
cmpl
xchg
jno
jge
test
push
cmc
shrl
push
adc
cmc
adc
daa
or
cmpsl
mov
jecxz
idiv
rolb
pop
hlt
add
pop
and
pop
or
jns
add
or
adc
or
xor
daa
rclb
cmc
test
lret
jb
pop
scas
movsb
ja
ljmp
adc
das
out
outsb
scas
jmp
ss
scas
dec
adc
stc
mov
neg
mov
int
out
inc
jmp
out
push
iret
and
mov
das
test
mov
in
sub
push
shrl
in
jmp
int3
mulb
jo
xchg
fsts
xor
es
adc
jp
jb
dec
test
in
jmp
jg
jb
mov
stos
jl
cmp
in
lcall
push
sbb
dec
pop
rorb
add
pop
int
mov
divb
add
and
dec
mov
fsubs
xchg
jge
inc
lds
mov
movsb
scas
jle
notl
mov
test
test
ljmp
fldenv
sahf
pop
adc
push
cmp
mov
js
add
mov
bound
subb
int3
mov
inc
scas
and
lock
xchg
or
and
push
gs
sbb
ss
push
inc
js
pusha
mov
fcmove
push
sbb
or
jbe
stos
shl
jmp
sbb
cmc
inc
fidivrs
add
mov
cltd
mov
lock
xchg
divl
fcmovnu
daa
inc
cmp
cmp
dec
popf
mov
and
arpl
xchg
cmp
xchg
and
xchg
or
cmp
sbb
sub
insl
jne
mov
jg
aaa
cmp
ds
ret
xor
cmp
dec
inc
scas
push
jo
adc
jb
or
push
mov
loope
pop
loop
movsl
add
inc
andl
cld
adc
push
cmp
or
mov
push
add
fisubrl
sti
outsb
pushf
loop
push
hlt
pop
mov
ljmp
and
push
mov
lods
jbe
mov
sahf
enter
xchg
and
inc
jge
and
push
in
jo
or
test
sbbb
pop
sub
pop
mov
cld
pushf
movsl
mov
fwait
insb
scas
gs
mov
lahf
and
loope
dec
xchg
and
test
mov
adc
scas
cmpsl
ss
scas
stos
gs
push
popa
in
add
cs
xchg
or
jne
sbb
cmpl
adc
mov
loop
and
sub
push
shlb
call
js
sarl
xor
cmp
stc
sbb
xor
test
and
or
mov
popa
mov
adc
sti
in
aaa
lret
sbb
mov
sbb
inc
xchg
or
jmp
push
push
jns
xchg
popa
jecxz
mov
jne
movsb
push
mov
pop
clc
cs
adc
mov
lds
inc
add
iret
and
roll
mov
pop
popf
mov
repnz
stos
andl
aas
jnp
lods
test
jb
pop
mov
mov
shl
aam
push
shl
jp
cld
xchg
add
out
mov
iret
out
movsl
push
dec
xchg
sbb
adc
lret
jmp
lahf
ds
cmp
and
inc
das
cmpsl
sbb
mov
fstl
jmp
imul
test
frstor
jg
dec
sbb
repnz
loop
xlat
insb
dec
lods
outsl
mov
cld
mov
push
in
stos
ss
inc
outsl
add
fs
xchg
xor
mov
add
push
pop
in
cmpsb
dec
ss
cmpsl
add
push
sub
dec
xchg
repz
mov
lods
pop
stc
sbb
aaa
iret
jp
clc
cmp
dec
ds
in
das
stc
fsubr
mov
orl
xorl
adc
sti
xchg
adc
mov
arpl
stos
stc
sbb
mov
xchg
icebp
out
mov
dec
leave
jp
jbe
cmpsb
js
out
fs
dec
clc
add
mov
mov
dec
lret
idivb
adc
outsb
sbbl
cwtl
inc
pop
pusha
push
dec
fdecstp
dec
inc
mov
dec
adc
push
filds
jge
inc
lcall
rol
mov
sbb
xchg
lcall
sub
xor
xchg
cli
jo
scas
pusha
cltd
hlt
stos
xor
aam
les
mov
popa
cmc
cmp
pop
pushf
scas
mov
add
sbb
mov
push
dec
xor
jp
cmpsb
push
jl
ret
inc
cmc
inc
gs
lahf
int
fstpl
xor
push
mov
int
mov
mov
pop
sub
leave
and
push
scas
or
xor
xor
pop
movsl
cld
dec
clc
mov
leave
cmpsl
push
pop
inc
call
out
mov
adc
xchg
outsl
loop
lret
xchg
cmp
jp
outsl
fnstsw
pop
in
or
push
jno
add
stos
mov
mov
dec
divb
xchg
call
mov
pop
popl
imul
mov
out
xchg
rol
clc
cmp
add
icebp
dec
mov
mov
push
cli
or
and
sbb
cmpsb
int3
or
xlat
adc
add
sub
and
mov
dec
aas
sarl
inc
push
enter
mov
stc
mov
nop
sbbl
jbe
adc
retw
call
xor
jl
xchg
rorb
and
out
imul
ljmp
and
loop
mov
loopne
dec
pushf
subl
xchg
pop
push
and
or
xchg
inc
mov
test
out
pop
cmp
push
stos
pop
fcompl
aas
test
loopne
dec
jmp
push
pop
sub
cmp
imul
xor
pushl
xchg
xchg
lock
mov
add
mov
mov
movsb
pop
daa
add
jge
jb
popf
or
sub
mov
nop
lea
int3
mov
mov
mov
outsb
test
lahf
jne
repnz
cwtl
testl
aas
add
cli
stc
ja
ljmp
int
jecxz
mov
pushf
push
mov
sahf
repnz
shrb
xchg
add
scas
aas
aaa
sbb
inc
add
jmp
xorl
mov
mov
stc
dec
cld
dec
insl
mov
push
adc
dec
xor
out
popa
push
lea
and
shlb
mov
int3
scas
inc
or
mov
lahf
xchg
push
stos
sti
loop
nop
bound
in
sub
arpl
xchg
test
shl
inc
cmp
ret
mov
pop
add
data16
and
jecxz
insb
push
and
cmpb
xor
and
repz
mov
push
in
sub
or
js
push
loopne
inc
outsl
dec
andb
and
adc
pop
ss
pop
jo
adc
icebp
pop
aaa
dec
ss
jno
sahf
inc
test
push
cmp
das
mov
and
call
and
add
out
imul
pop
add
outsb
repz
or
js
sbb
aad
popf
aas
xchg
cmp
or
negl
sub
aam
popf
leave
aad
ret
call
adcb
andb
mov
cmp
cmp
adc
fnstenv
and
gs
adc
out
ret
mov
sbb
out
loop
in
in
push
rolb
pop
or
mov
scas
stos
push
mov
dec
jnp
push
lret
fdivrp
mov
test
cmp
out
pop
cmp
das
inc
sar
mov
aad
xlat
lea
xchg
and
iret
icebp
lds
cld
rcll
xor
mov
out
jo
push
sub
fld
mov
cli
daa
xchg
test
jle
pushw
nop
or
loop
cli
fldcw
insl
sub
add
sub
jbe
xor
mov
pop
add
cmp
mov
cmpsl
mov
lret
clc
or
inc
adc
inc
xchg
and
rclb
push
xchg
fnstsw
iret
adc
test
dec
movb
lcall
mov
mov
sbb
rol
mov
dec
lcall
shll
movsl
push
fmull
into
pop
mov
jne
int3
mov
test
stos
add
sahf
rorl
lret
popf
and
ds
into
cwtl
out
es
mov
pop
adc
es
movsl
outsb
in
adc
lahf
stc
pop
dec
lods
lds
les
cmp
fisttps
out
lods
pop
sub
paddw
and
inc
push
in
stc
gs
nop
in
mov
mov
scas
fldenv
jns
mov
enter
xchg
mov
rolb
test
loopne
mov
adc
jge
fldt
or
clc
add
sub
lret
jns
fdivr
lret
jge
mov
hlt
jge
sub
add
sbb
adc
testb
and
je
ret
cli
cli
lcall
xchg
daa
add
outsb
inc
jnp
scas
mov
std
loope
shll
pop
daa
hlt
xor
gs
call
faddp
inc
jo
push
fldt
pop
mov
in
push
or
out
dec
cmpsb
test
pop
stc
cld
call
sub
or
sbb
ja
xchg
into
pop
sbb
ss
jno
sbb
enter
mov
jnp
mov
inc
sub
es
jl
xchg
int
and
lock
cmp
pop
fidivrs
push
dec
subl
in
shrl
or
jle
mov
mov
daa
xchg
mov
loope
xchg
fcoms
int
dec
push
fucomi
lret
push
pop
push
test
stos
ret
adcb
out
cmpsb
xor
jo
pusha
cmp
fistpl
mov
mov
jo
or
jmp
sbb
pop
insb
mov
loop
js
mov
clc
xchg
sti
out
dec
outsb
xor
sub
std
lret
psubd
scas
mov
lock
dec
dec
lret
xchg
add
add
aam
sub
ja
lods
mov
dec
stos
int
jbe
fdivs
insb
dec
mov
rolb
adc
mov
into
sub
add
lea
cmp
mov
icebp
sub
or
push
and
xor
sub
aad
je
mulb
je
and
lods
scas
stc
incl
lods
add
sub
stc
in
xor
pop
mov
outsl
mov
test
jno
add
std
mov
xor
inc
pushf
pop
cmc
and
scas
push
sbb
aaa
add
jno
dec
cmp
pop
nop
xor
pop
scas
pop
mov
lea
cmpsb
or
pop
or
mov
sub
js
mov
and
sti
dec
scas
stc
lret
sbb
sub
in
rol
in
mov
outsb
aam
dec
push
addr16
dec
xlat
js
push
dec
inc
rol
ret
jbe
sbb
fneni(8087
mov
jl
cmpsl
jne
call
movsl
and
mulb
xchg
outsl
lods
and
and
outsl
dec
add
xchg
xor
outsb
jecxz
jnp
mov
test
pushf
sbb
mov
imul
sbbl
mov
jno
xchg
bound
out
mov
mov
mov
and
enter
cmp
xchg
and
bound
jmp
add
xor
in
adc
cmp
ss
loop
stos
arpl
cmp
xchg
mov
push
lret
jbe
mov
add
sbb
jb
mov
int3
fisubl
xchg
in
cmpsl
pop
movsl
dec
jl
aas
push
jne
xchg
lock
mov
xchg
sub
add
inc
xlat
adc
mov
lods
jbe
inc
xor
inc
imul
fists
inc
clc
sub
mov
jnp
movsl
nop
fadd
js
or
cmp
lcall
add
add
leave
push
bound
es
jo
mov
out
adc
aas
add
repz
mov
test
push
or
lock
rclb
nop
cltd
jo
aaa
pop
pushf
jecxz
mov
je
decl
fwait
out
lahf
stc
jbe
jmp
sbb
adc
fstp
std
and
mov
dec
iret
mov
jge
lds
xchg
addr16
xchg
dec
cmp
clc
xchg
xchg
mov
jmp
or
mov
jecxz
fcomp
push
mov
inc
xchg
inc
mov
inc
jb
iret
xor
or
mov
mov
je
cs
fidivrs
jecxz
adc
outsl
mov
loope
sarl
pop
pop
std
sti
pop
sub
jle
jmp
push
dec
adc
and
cli
push
xor
flds
cmp
in
insl
enter
jne
jl
push
bnd
adc
les
sub
xor
push
inc
push
lahf
push
fsubr
jl
jnp
inc
out
mov
ds
or
ficompl
mov
jno
pop
cltd
push
xchg
push
push
mov
and
cltd
arpl
rcrl
shll
std
dec
dec
popa
mov
pop
push
cmp
jno
jbe
jnp
rcr
in
loop
xchg
lret
push
sbb
ja
loope
mov
dec
dec
iret
xor
mov
popa
insl
dec
repnz
and
jns
mov
call
push
cli
add
or
sub
out
mov
xor
cmp
ja
loop
sub
mov
and
fdivr
inc
and
mov
mov
jns
data16
ja
pop
push
or
cmpsl
xor
jnp
fcomp
or
dec
mov
push
orl
out
jbe
push
xor
cmp
roll
sub
dec
xchg
pop
lret
mov
test
sbb
mov
cmp
lods
out
cmp
cwtl
aad
pushf
pop
js
outsl
in
in
add
mov
dec
pop
shll
mov
in
data16
jno
mov
push
add
add
mov
xchg
xchg
xchg
lock
cld
add
andl
xchg
cmp
flds
jmp
sub
pop
xchg
adc
dec
je
hlt
cltd
mov
test
dec
push
ds
xor
pop
movsb
loopne
or
sbb
cmp
xchg
mov
xchg
sub
push
sub
loope
adc
cmpsl
in
cltd
mov
mov
pop
loope
loop
push
int
cld
adc
daa
sar
jg
mov
shll
adc
add
cmp
jns
fldenv
shl
les
pusha
pop
divl
sub
cs
int3
inc
jns
aaa
mov
push
scas
imulb
add
adc
dec
mov
ljmp
or
idiv
adc
dec
sbb
sub
and
test
and
mov
cmp
dec
push
cmp
mov
movsb
xchg
pusha
fildll
cwtl
jo
lods
pop
adc
dec
lock
loopne
idivl
ja
inc
sbb
daa
mov
loop
frstor
or
ret
mov
call
xchg
sbb
adc
mov
jmp
xchg
xchg
loopne
push
cmpl
test
sbb
stc
mov
mov
js
push
enter
call
ret
push
xchg
pusha
and
push
mov
hlt
pop
or
sahf
pop
ficoms
push
xor
lret
mov
inc
mov
inc
cmpb
sub
cs
mov
cs
movsb
push
sbb
into
push
ret
xor
push
xchg
adc
or
push
mov
ret
test
push
cmc
stc
fmulp
shll
outsl
dec
mov
add
cmp
and
pop
nop
fs
out
jle
daa
mov
pushw
test
cld
pop
sub
int3
fcmovnb
ds
mov
sahf
pop
fisubrs
add
pop
mov
wrmsr
std
xchg
js
ljmp
cmp
cmpsl
aaa
pop
pushf
std
rorb
add
je
lret
rcr
and
test
pop
adc
fs
jbe
in
lock
push
pushf
mov
div
push
and
imul
jb
outsb
sbb
repz
or
nop
push
out
jge
inc
jg
test
loopne
rcll
pop
inc
test
rclw
cs
push
sbb
clc
pop
sbb
cwtl
xor
sbbl
int3
jbe
sub
or
ljmp
dec
ds
pop
push
cld
xchg
or
jne
cwtl
xor
pop
pushf
jmp
ucomiss
push
inc
xlat
cmp
pop
xchg
insb
mov
fadds
enter
lds
push
popa
push
push
pop
add
xor
xchg
cs
ds
dec
jmp
xor
mull
xor
mov
cld
mov
jns
inc
mov
mov
xchg
mov
cmp
insl
out
sti
cli
fwait
adc
and
test
sbb
cmp
jb
arpl
outsb
sbb
es
repz
pusha
xchg
loop
call
loope
dec
adc
aad
pushf
jae
cli
fdivrs
adc
icebp
repnz
inc
call
or
pop
movsb
cmp
ja
sub
mov
xchg
dec
cmp
aaa
fs
jne
adc
dec
mov
loopne
out
cs
shlb
inc
mov
xchg
push
cmpsb
adc
mov
iret
aad
out
inc
inc
lahf
jnp
imul
mov
rcr
sub
fs
lret
xchg
mov
xchg
xor
outsl
and
dec
xor
andb
cmp
jg
icebp
outsl
jge
daa
sbb
repnz
loopne
jo
hlt
inc
outsb
dec
int
pop
pop
mov
pushf
int
ret
sbb
filds
dec
sahf
jecxz
push
xchg
add
lret
push
loope
ljmp
lods
into
cmp
ds
xchg
xchg
cli
add
adc
mov
das
ss
add
xorl
mov
or
pushf
xchg
xor
xchg
dec
rolb
in
inc
in
sahf
pop
pop
xchg
sub
jns
mov
sbb
ljmp
mov
jnp
mov
imul
pop
xor
ret
xor
xor
dec
mov
and
pop
cld
pop
je
cmpl
mov
psrad
jns
cmp
push
fsub
push
xchg
push
sub
push
inc
add
push
fs
mov
loopne
pop
inc
movl
cld
loop
dec
jnp
ret
jmp
jbe
call
ret
fildl
push
and
mov
std
clc
jno
nop
rcr
js
in
dec
add
xor
mov
xor
inc
into
mov
push
pop
xchg
inc
and
cmp
arpl
xchg
cmpsl
adc
test
xor
sub
push
repz
xchg
cltd
cmpb
add
sbb
icebp
dec
push
xchg
or
ret
sbbl
es
sbb
loop
pop
fdivrp
fdivrs
xchg
push
mov
mov
clc
pop
imul
push
movsl
push
lods
rcll
add
out
add
mov
loope
adc
inc
push
xchg
js
xlat
adc
cmpsb
imul
inc
and
or
xlat
shlb
leave
mov
push
mov
jle
cltd
or
repz
stc
mov
enter
jge
xor
pop
xchg
xor
out
dec
jae
out
roll
repnz
add
insb
push
mov
mov
cld
adc
push
inc
jle
jbe
gs
cmpsl
stc
sub
xchg
in
cld
sub
adc
sbb
inc
cmp
js
jb
out
pop
aad
cmpb
cltd
sbb
leave
daa
jmp
and
mov
call
loop
ret
mov
test
in
mov
test
ljmp
out
pop
inc
sbbl
mov
sbb
rorl
push
sahf
test
lods
or
jae
in
mov
or
adc
fsubrl
add
jp
icebp
imul
mov
out
loope
stc
sub
push
push
repnz
add
xor
xchg
ja
ja
orl
out
add
cmp
test
loope
testl
xchg
push
push
mov
and
cmp
push
dec
sub
push
int3
mov
cltd
in
rorl
imul
dec
or
or
jle
aas
pop
lds
gs
and
mov
int3
push
jl
pop
adc
push
cmp
fsubrs
cmpsl
lods
dec
sbbb
xor
xchg
sbb
adc
adc
dec
vminsd
push
ret
dec
shl
cmpsb
pop
mov
into
add
mov
cmp
fs
inc
sti
or
dec
clc
pop
pop
iret
dec
aas
sub
mov
xchg
es
sbb
ret
xchg
mov
sbb
jge
orb
xchg
aam
test
test
mov
jbe
mov
and
jb
inc
call
popa
pop
test
pop
mov
pop
push
imulb
inc
aad
sbb
mov
adc
imul
imul
jge
and
add
mov
lea
jnp
inc
loopne
scas
adc
in
pop
out
inc
aad
xor
fdivl
in
cmpsl
adc
imul
push
and
inc
push
subl
jbe
out
mov
imul
into
ret
inc
fisubrs
cmp
jge
jge
adc
mov
cwtl
cmp
mov
mov
clc
sbb
adc
sahf
xchg
std
adc
and
idivb
mov
sbb
ret
ja
jle
xchg
jg
mov
mov
hlt
xor
test
or
ds
push
cltd
xchg
pushf
inc
push
dec
popa
loope
cmpsl
pop
and
cli
xor
aaa
cwtl
dec
dec
sti
pushf
rolb
inc
or
sub
fcomps
jb
daa
inc
mov
xor
icebp
mov
fdivl
lret
movsb
jo
hlt
fs
repnz
xchg
int3
dec
pushf
inc
cmp
dec
lret
arpl
fists
mov
dec
shr
sbb
dec
icebp
xchg
js
jae
lret
or
mov
fnstenv
and
dec
call
sub
int3
int
mov
mov
cmp
mov
dec
insl
or
inc
adc
inc
sbb
or
and
es
fmuls
inc
in
push
and
mov
mov
dec
fwait
xor
sbb
out
pop
divl
adc
inc
and
mov
scas
mov
je
inc
cwtl
out
add
jo
ret
inc
xor
and
loopne
mov
inc
adc
cmp
out
cmp
sahf
inc
subb
add
pushf
cmp
lods
ja
ret
shrb
aaa
mov
je
dec
fcmove
mov
lods
mov
pop
add
push
cld
xchg
mov
je
fs
jae
in
jl
pop
or
mov
aad
mov
inc
mov
jae
add
into
pop
sahf
push
or
xchg
xchg
shll
cld
jmp
mov
mov
inc
pop
add
callw
adc
mov
int3
push
in
mov
fwait
aam
cmp
lret
in
and
push
in
and
xchg
js
push
or
or
nop
sub
test
stc
pop
mov
test
push
fstpt
mov
cmpsl
mov
fisubrl
rcll
nop
aaa
xchg
add
movsb
sarb
sbb
fldenv
wbinvd
imul
lods
adc
mov
ss
jecxz
pop
and
fdivr
gs
push
xchg
cmpsb
xchg
daa
scas
push
out
lcall
dec
lea
mov
jge
inc
cmc
call
add
mov
push
das
bound
outsb
push
sbb
adc
inc
mov
sbb
push
mov
mov
cmp
push
js
mov
push
mov
inc
test
sbb
push
insl
aam
shll
loope
xor
mov
mov
mov
inc
push
adcb
push
loop
and
adc
xchg
pop
pop
xor
inc
nop
cmpsb
sub
mov
lods
fdivrp
mov
lods
sub
mov
aad
adc
push
bound
or
mov
mov
out
or
movsl
cmp
mov
test
out
fistps
jmp
inc
shrb
jg
testb
dec
or
out
jl
pop
push
inc
outsl
sub
in
mov
fdivl
test
dec
hlt
mov
mov
ds
ret
jb
cmc
xorl
aam
pop
push
xchg
aas
sub
pop
bound
jne
rcrl
adcl
xchg
push
xor
mov
cmp
or
flds
push
pop
cld
jl
stos
nop
ljmp
je
and
cli
push
dec
fdivrl
and
shl
adc
movntps
enter
dec
sub
cmp
cmp
jle
fs
scas
sub
mov
fdivrl
jmp
movsl
in
push
packsswb
cmpl
push
inc
gs
dec
jle
imul
xchg
ss
add
iret
cmpsb
int3
pusha
jns
das
jns
lahf
aam
cld
mov
mov
xchg
loope
fcmovu
pop
push
pushf
push
or
in
imul
fiaddl
pop
ficompl
aaa
pop
rcll
fstl
push
mov
outsl
pop
xor
cld
pusha
cmp
and
mov
inc
cmp
pop
shll
jne
testb
outsl
inc
cltd
xor
xor
and
lret
push
dec
lcall
xlat
sub
sbb
mov
mov
adc
jno
xchg
push
mov
add
pop
sbb
or
je
stos
clc
aam
leave
jge
test
cmpsb
ljmp
push
mov
xor
outsl
call
shl
xchg
int3
mov
fwait
push
sbb
rclb
xchg
addr16
mov
lret
imul
cld
adc
pop
inc
adc
push
into
test
int3
test
popa
loop
xor
mov
ret
in
xorl
rcr
cmp
sub
sub
mov
sub
pop
jnp
adc
enter
cmp
xor
dec
xchg
push
imul
pop
jmp
push
mov
or
repnz
addr16
ficoms
out
inc
pop
xchg
or
andb
in
push
push
into
and
adcl
ja
ret
jmp
mov
scas
sbb
ljmp
fcmovnb
xor
imul
mov
cmp
aas
xchg
aaa
or
xlat
mov
mov
lea
insb
fdivrl
inc
cwtl
pop
repnz
mov
shlb
push
fldcw
jnp
fwait
xchg
xchg
mov
mov
insb
test
cs
add
loopne
les
push
jecxz
sub
scas
sub
enter
add
or
pop
jle
xlat
out
je
out
clc
iret
ljmp
mov
test
add
jnp
lret
dec
jl
ret
or
data16
cld
sbb
inc
fisttpl
fsubp
std
inc
pop
inc
ret
enter
int3
xchg
stos
xor
dec
rcll
aas
mov
jbe
mov
pop
pop
xor
sub
jb
push
les
inc
push
leave
xchg
test
jge
pop
pop
adc
or
enter
icebp
lret
jecxz
out
push
sbb
pop
ss
mov
push
subb
cs
outsl
test
jne
in
clc
int3
ficomps
push
ret
movsb
lock
ss
shrb
xchg
fwait
adc
sub
icebp
sbb
movsl
dec
call
scas
or
int
shlb
sub
sbb
push
clc
pop
enter
push
adc
out
pop
xor
mov
and
mov
test
clc
pop
fiadds
test
adc
sub
in
fnsave
in
mov
clc
inc
sub
mov
xorl
mov
in
mov
loop
mov
ss
sarb
mov
shlb
adc
and
mov
jle
lcall
and
lods
or
push
lret
notl
mov
jne
xchg
sub
imul
jne
out
sub
pop
adc
push
cltd
rcll
mov
pop
xor
imul
inc
and
arpl
call
repnz
adc
xchg
jecxz
or
into
and
test
adc
inc
add
test
jp
loope
push
aad
roll
push
cmc
adc
mov
incl
mov
addb
mov
mov
je
sbb
pop
pop
ljmp
xor
aam
ds
sbb
inc
shlb
cmp
xor
lahf
repz
xor
js
and
adc
imull
xlat
cs
pushf
cwtl
push
loope
push
in
fistl
jne
xchg
or
mov
jle
sahf
cmc
les
jno
cmpsb
fstpt
jmp
xorb
jp
mov
iret
push
mov
fnstenv
mov
dec
cmp
std
or
shrl
pop
scas
gs
imul
mov
cmp
loope
fdivs
xchg
mov
dec
adc
or
sti
and
cld
add
movsb
aaa
xchg
jl
out
cmpsb
dec
js
cs
add
lods
fcmovnu
push
and
or
and
push
xchg
xchg
mov
mov
xchg
ret
jl
movsl
cltd
rcrl
jbe
or
lcall
pusha
popa
outsl
gs
sarl
stc
lods
mov
mov
sbb
int3
dec
pop
pop
lret
imul
popa
in
and
sbb
mov
int3
add
mov
dec
sahf
xor
incl
repnz
in
mov
cmp
jo
stc
push
fldenv
outsb
pop
rorb
dec
arpl
popa
imul
rcl
in
leave
mov
lret
in
into
or
sub
fucomi
bound
sub
out
rcll
or
in
ficoms
push
add
pop
mov
aaa
sub
mov
loope
xchg
sub
pop
orl
in
nop
cmp
sbb
sub
add
mov
insl
loopne
aam
jbe
scas
lods
ljmp
not
jne
and
xchg
enter
mov
pop
lods
sbb
xor
xchg
int
xchg
xlat
rclb
neg
ljmp
jl
or
rcr
mov
push
arpl
push
int
ficompl
dec
pop
push
dec
lods
push
sbb
pushf
ljmp
lds
add
inc
fidivrl
xchg
push
shrl
mov
inc
xor
jmp
aad
es
mov
std
sub
mov
out
lahf
decl
or
fsubrl
pop
dec
imul
pop
out
ficompl
in
mov
sbb
mov
in
in
rorb
inc
icebp
clc
inc
push
testb
cli
jb
adc
icebp
adc
cli
cmp
test
popa
inc
iret
pop
cmp
cmp
dec
ret
xchg
movsl
repnz
sub
lret
cmp
inc
jno
lcall
cld
mull
inc
jl
jne
cmp
in
imul
aad
mov
sbb
cltd
inc
xor
push
inc
imulb
pop
mov
inc
jmp
jbe
jo
mov
sahf
xchg
int3
stos
pop
xchg
cwtl
xchg
adc
hlt
es
or
lcall
sahf
fcoml
pop
jae
xchg
sbb
pop
scas
lea
add
popa
mov
movsb
int3
scas
mov
and
call
ret
or
out
lea
push
jle
adc
or
mov
add
outsb
push
inc
cmp
jecxz
add
xor
and
push
shll
je
incb
add
xchg
popf
mov
mov
lods
dec
inc
outsl
pop
test
jle
je
hlt
daa
and
lock
jmp
lock
pop
cmp
shll
sbb
ror
xor
xor
scas
sti
xor
push
pop
xchg
daa
lahf
xchg
xchg
dec
dec
fisubrl
push
xchg
out
jae
ret
stc
sbb
fsubr
adc
xchg
bound
mov
sub
mov
sub
adc
and
leave
dec
add
dec
xchg
inc
sub
xchg
mov
ss
std
adc
pop
add
dec
cltd
cmp
lret
jmp
inc
ret
add
and
mov
push
aaa
cli
sbb
repnz
push
cmp
mov
dec
push
cld
mov
aad
push
outsl
adc
clc
xchg
fwait
rcrb
lea
movsl
cld
xchg
dec
je
icebp
mov
mov
xor
add
mov
in
sarl
stos
shll
insb
or
pop
ret
xchg
xchg
push
adc
mov
add
stos
mov
adc
negl
jle
inc
bound
cmp
add
and
mov
sub
out
les
push
cld
mov
xchg
fcoms
push
add
inc
cmp
mov
sbb
mov
ret
dec
lahf
hlt
enter
xor
mov
arpl
xor
push
dec
xor
rorb
pop
sbbl
push
je
popa
sub
dec
mov
data16
jne
in
inc
push
fs
add
xor
movsb
cmp
add
imul
mov
int
neg
push
xchg
cmc
popf
adc
sti
adcl
mov
movsl
xor
dec
mov
pop
in
rcll
mov
shrb
dec
xor
call
and
push
std
jae
inc
jge
push
fstp
add
cmpsb
psubsb
push
fwait
or
cs
daa
out
xchg
mov
sub
mov
lock
pop
xchg
movsl
pusha
mov
test
jl
pushf
cli
jge
stos
ljmp
popa
lret
lcall
push
out
pop
imul
mov
pop
cmc
xchg
adc
sarl
aas
gs
mov
jb
in
imul
push
pop
loop
dec
lahf
pop
movsl
push
or
lods
dec
jae
mov
les
popa
fnsave
xchg
dec
adc
out
jp
mov
jns
fdivrl
and
jmp
ficomps
adc
ljmp
jns
inc
scas
subb
adc
and
mov
test
cs
test
mov
xor
pop
lret
push
push
cmp
lods
cmpsl
pop
aad
mov
and
jbe
pop
aad
cmp
aas
cmpsb
repnz
sti
ljmp
sbb
xor
jmp
cmc
jp
mov
jl
xchg
rclb
sahf
pop
shr
jp
push
jnp
mov
mov
int3
cwtl
adc
sub
xlat
push
cmpsb
scas
sub
sti
mov
cwtl
clc
mov
ljmp
lods
frstpm(287
adc
mov
fwait
mov
test
pop
xlat
negb
jno
jl
cmp
ja
mov
sbb
loope
lock
aam
jge
scas
jp,pt
dec
dec
inc
cmpsb
in
pop
pushf
mov
test
cltd
add
pop
or
andb
jecxz
sbbl
lcall
sub
icebp
outsb
ja
and
push
in
xor
ds
bound
sbb
inc
cmpsl
mov
fs
or
je
cmp
rorl
jae
and
aaa
cwtl
and
insb
movsb
push
or
jo
imul
movsl
cs
scas
enter
pop
or
cmp
test
insl
ds
inc
popa
jmp
lea
js
out
fwait
push
std
andb
push
icebp
mov
pop
inc
inc
pop
adc
mov
mov
sub
xchg
xchg
dec
fldt
and
xchg
jns
movsb
xor
and
mov
out
sbb
xlat
ljmp
jmp
adc
popf
push
pop
ja
mov
mov
jmp
test
pop
hlt
sahf
stos
and
fs
repnz
add
cmpl
mov
sahf
or
push
inc
cmp
push
add
ja
sarb
pop
dec
ror
cmp
je
bound
outsb
xchg
sub
out
lods
outsb
rcll
or
jno
push
les
imul
xchg
inc
dec
loope
lea
inc
cmpsb
lret
pusha
cmp
add
call
push
dec
jne
loopne
pop
mov
outsl
repz
dec
shr
jne
mov
xorb
arpl
adc
leave
es
fisubrl
push
dec
icebp
incb
fwait
lods
fsubrs
stos
inc
nop
jge
pop
and
das
ss
push
dec
adc
lcall
lahf
or
pop
pop
pop
jl
dec
sti
add
cltd
imul
dec
jg
inc
scas
pop
stc
fisubrl
faddl
xor
ret
xor
sub
inc
add
cmpsl
or
cmpsl
bound
xchg
xchg
jno
je
pop
sahf
add
or
adc
xchg
xchg
jecxz
mov
sub
xor
ret
mov
roll
jp
inc
testw
adc
insb
inc
lods
push
mov
mov
std
cwtl
mov
test
or
ss
mov
jmp
pushf
mov
in
lcall
or
les
adc
push
aad
movsl
and
push
outsl
or
test
imul
ret
pop
xlat
ds
aaa
xchg
testl
pop
loop
mov
arpl
out
and
aaa
pop
push
adc
and
hlt
cmp
sbb
cmp
adc
or
lock
jmp
je
fstps
xorl
cmc
xchg
dec
xchg
xorb
out
ret
pusha
mov
jg
popf
cmpsb
lcall
dec
rcll
mov
out
ljmp
aam
jb
into
inc
in
sti
rcll
mov
inc
and
aaa
movsl
movsl
sbbl
loop
dec
or
mov
mov
pop
std
mov
pop
add
imul
and
setbe
adc
inc
les
fcmovnbe
jecxz
sub
sub
cld
arpl
mov
mov
es
cli
movsl
stc
lea
cmc
subb
outsl
insl
in
fwait
and
pop
pop
scas
xchg
pop
add
mov
lret
push
adc
xchg
test
cmp
pop
adc
lds
fcomp
push
dec
jmp
or
jno
inc
push
mov
add
mov
loope
popf
rolb
push
mov
push
cmp
jmp
or
jne
aaa
mov
rcrb
clc
mov
jl
jae
mov
adc
push
add
jp
mov
dec
mov
sbb
lock
pop
aam
in
lret
sub
mov
dec
das
jb
mov
sub
int3
pop
cmp
xor
out
pop
ret
mov
push
mov
push
aaa
push
pop
shl
dec
out
lcall
fldln2
cmp
sbb
loope
fisttpl
push
push
dec
out
fistps
jbe
pop
rcll
jb
rolb
sub
enter
jno
dec
xchg
jns
inc
sub
loop
sbb
fwait
test
imul
popf
xor
inc
jo
int3
mov
inc
in
mov
outsb
jge
hlt
adc
jmp
xchg
dec
popf
and
sets
imul
mov
icebp
or
adc
dec
dec
sbb
push
lock
leave
cmp
or
inc
insl
fimuls
shll
inc
push
dec
push
add
adc
lret
aam
adc
pop
mov
dec
lcall
pop
inc
adc
in
dec
mov
mov
lea
push
cwtl
stos
aam
gs
ficoml
xor
sub
fwait
jnp
mov
fstpt
ffreep
fs
in
fists
loope
inc
ret
hlt
popa
out
push
adc
ret
jmp
bound
pusha
imul
fs
cmp
dec
arpl
adc
sbb
pushl
jp
cmp
push
dec
sbb
xchg
aas
sbb
mov
mov
push
pusha
add
adc
xchg
pop
cmp
xchg
pop
call
mov
pop
jge
outsl
cmp
cld
pop
sub
sub
push
mov
pop
out
in
jmp
mov
mov
data16
jp
in
and
arpl
int
call
push
into
jne
mov
dec
icebp
inc
jne
lret
or
and
dec
out
out
xor
inc
rcll
sbb
ja
jne
inc
xlat
jle
stos
push
jne
popa
loopne
out
loope
mov
scas
xor
fiaddl
jae
jns
jno
and
jmp
jo
fisubs
jl
stos
xchg
inc
fwait
gs
test
xorl
in
lods
jmp
adc
cmp
and
into
mov
inc
fadd
cmc
mov
outsb
dec
cld
sub
fdivrl
icebp
and
and
cmp
test
fcomps
push
add
lds
test
xor
mov
rorb
or
mov
arpl
ljmp
push
push
cld
jle
pop
loop
push
scas
mov
sub
test
lcall
js
add
mov
loope
cwtl
lret
lock
out
push
jo
push
mov
mov
xchg
dec
cmp
fsubl
mov
movsl
test
jcxz
push
add
xchg
daa
inc
loopne
cmp
cwtd
into
fistpl
imull
test
push
push
insb
sub
jne
xor
fcmove
push
iret
gs
andb
mov
ret
pop
push
fs
movsl
sub
aam
mov
xchg
xor
dec
movsl
sub
fistpll
xor
xchg
inc
xchg
imul
mov
inc
lcall
inc
mov
fdivr
sbb
sub
loope
or
sbb
testb
or
cli
cld
pop
in
in
xor
cwtl
push
mov
push
dec
mov
insl
adc
test
mov
sbb
push
mov
lods
xchg
rorl
repnz
daa
mov
pop
ret
push
push
push
cwtl
push
lds
ret
jp
mov
frstor
xchg
rorb
ja
test
cwtl
push
sarl
push
mov
push
ret
iret
and
add
ret
lods
cmpb
and
rolb
xchg
leave
insl
adc
mov
pop
sub
push
shr
scas
fldenv
or
adc
inc
imull
adcb
mov
or
pop
jg
and
mov
sub
sub
les
cmp
out
adc
test
imul
cmc
ja
add
scas
fs
cmp
test
xor
xor
hlt
xchg
shlb
js
subb
imul
jmp
jle
insl
lock
add
xchg
dec
ja
mov
adc
pusha
addr16
jns
pusha
leave
sbb
andb
add
jno
gs
adcl
dec
push
aad
add
xchg
stos
mov
xor
jl
sbb
insb
call
scas
hlt
imul
mov
call
jae
adcb
xchg
jle
push
inc
jle
notb
aaa
pop
cmp
and
aam
jne
xchg
pop
push
lods
nop
and
ljmp
lcall
mov
inc
lods
sub
test
in
pop
mov
mov
jo
mov
sbb
push
mov
add
mov
mov
cmc
repnz
mov
mov
das
mov
aad
pushf
pop
out
loop
pop
dec
sbbb
daa
mov
aaa
push
fistl
fsubs
test
add
lods
repz
addr16
xchg
dec
mov
rol
mov
rorl
inc
inc
lret
push
sbb
daa
es
test
mov
call
in
mov
hlt
in
fildl
cltd
scas
and
add
daa
xchg
adc
and
enter
outsb
hlt
push
test
es
movsb
mov
sbb
faddp
and
and
inc
call
mov
aam
sub
ds
insl
push
add
or
jle
jb
fsts
ss
sub
pop
lods
cli
adcl
std
fildll
jp
dec
fildll
mov
push
add
add
nop
or
cmpsb
adc
sub
inc
popa
mov
mov
mov
stos
jb
inc
int
lahf
pop
test
jne
and
pusha
pop
lret
push
outsb
push
sub
push
and
pop
inc
cli
pop
les
popa
or
mov
outsb
popa
cwtl
sbb
xor
fwait
sbb
or
mov
push
pop
push
es
das
les
cwtl
arpl
popa
xor
gs
aad
mov
cmc
out
mov
dec
pop
xor
pop
dec
cltd
dec
imul
pop
mov
or
pop
push
adc
cmpsb
mov
fildll
mov
out
and
dec
cmp
mov
adcl
xlat
ljmp
jmp
mov
outsb
sahf
add
add
pusha
push
dec
sarl
lods
lea
adc
outsl
jmp
xchg
sti
andl
loope
mov
xchg
sbb
push
add
mov
and
in
in
or
adc
mov
stos
inc
sbb
inc
xor
xor
mov
jae
repnz
inc
pusha
aas
jno
mov
adc
jmp
push
jo
shlb
cmp
pop
data16
mov
add
das
jg
inc
sub
in
sbb
gs
aam
outsb
pop
in
out
mov
inc
rclb
xchg
jnp
mov
je
add
pop
pop
mov
sbb
xchg
cmp
and
mov
lcall
xchg
out
xchg
lret
jbe
mov
pop
cmpsb
sbb
testb
imul
add
lods
adc
adc
and
pushf
jp
ret
mov
mov
mov
inc
pushf
inc
outsl
dec
outsb
mov
dec
or
mov
fsubl
addb
sbb
cmp
mov
or
jle
or
fcoml
pop
or
scas
adc
jg
mov
jae
out
jo
inc
mov
lea
inc
mov
rcll
mov
adc
das
icebp
mov
sarb
mov
lahf
loope
xor
mov
or
add
adc
xchg
inc
mov
aas
and
pusha
mov
dec
idivl
fidivl
pop
pop
les
add
adc
cmpsl
sub
fdivrl
mov
fisubrl
stos
in
in
pop
cmpsb
js
das
mov
mov
and
adc
fcoml
ret
movsl
sbb
sbb
fisttpll
sbb
movsb
cltd
ss
push
cmp
fldenv
or
pop
mov
pop
addr16
sub
inc
xchg
fdivl
mov
mov
add
cli
inc
mov
rclb
in
vcvttss2si
or
mov
stos
loop
dec
sahf
sbb
imul
pop
jno
test
inc
rclb
pop
das
mov
push
pop
repz
pop
fcmovne
mov
fisubl
push
fsubp
loopne
call
arpl
jp
out
pop
push
rorl
lret
js
aas
int3
ljmp
sbb
sahf
mov
push
lea
push
ljmp
mov
outsl
fdivr
ss
sahf
or
outsl
cs
push
xchg
jno
inc
rcll
popf
mov
pop
mov
push
jmp
xchg
insl
jns
call
shlb
xchg
scas
shll
xor
iret
mull
push
in
xchg
dec
dec
cmp
mov
jecxz
movsl
xor
inc
dec
fwait
test
icebp
fstps
ds
jb
push
fnstsw
mov
mov
fsub
ficompl
jl
je
jg
xor
and
sti
add
int
test
push
ror
or
sub
lods
inc
sarl
ss
leave
push
mov
dec
add
adc
adc
mov
inc
mov
push
push
inc
adc
jb
push
and
loop
mov
jp,pt
pop
xchg
inc
cltd
jl
nop
mov
mov
cli
cmp
fwait
cmp
lds
push
inc
pop
jle
sbb
int
out
inc
xchg
adc
jle
ja
push
repnz
pushf
inc
adc
jne
adc
dec
fildll
ja
cmp
mov
jmp
sub
jbe
xchg
or
int3
mov
cmp
loope
or
xor
add
jno
les
or
or
push
mov
fdivs
sbb
dec
push
shr
popf
pop
into
cmp
sbb
loope
fnstcw
pop
mov
sarl
iret
mov
push
loopne
jns
mov
pop
scas
imul
dec
sub
dec
jmp
sbb
jo
jp
imul
xchg
push
pop
push
xchg
mov
out
stos
adcb
push
addr16
shlb
mov
push
sub
mov
ret
or
neg
mov
xchg
jecxz
jg
ret
test
jg
jno
mov
repnz
jmp
test
aam
adc
cmpl
je
cmp
and
and
mov
pushf
adc
pushf
out
in
outsl
cli
idiv
lcall
dec
sbb
mov
push
jmp
jne
insb
sbb
fsts
inc
cmp
icebp
popa
add
lods
dec
mov
cmc
sbb
js
pop
jle
sub
and
push
ljmp
icebp
loop
or
mov
push
loope
jecxz
adc
sbbb
pusha
cmp
mov
outsb
ret
mov
les
cmp
adcl
jp
push
sbb
es
std
or
dec
pushf
jle
scas
ljmp
mov
push
dec
xchg
fwait
dec
aam
jg
fldt
les
mov
fadd
dec
mov
push
sbbb
jno
cmc
jb
dec
adc
arpl
xor
mov
scas
aam
jb
fcompl
fs
push
ret
inc
push
lea
adc
icebp
cmp
pop
negl
dec
lds
cwtl
push
pop
test
fwait
cmp
scas
rcr
gs
jo
inc
sbb
mov
or
out
cmpsb
and
lahf
fs
imul
stos
bound
inc
xchg
add
insb
pop
mov
repz
pusha
push
and
lods
mov
fcomi
movd
and
jg
popf
or
jns
rcrb
data16
lea
and
jmp
adc
add
cmc
mov
xchg
lret
insb
aam
cli
fcoml
outsl
pxor
out
pop
test
jge
rcl
cmpsb
mov
jmp
xchg
push
push
popf
and
loop
push
inc
mov
ror
out
cwtl
shrb
xor
pusha
inc
sarb
mov
dec
sbb
add
push
insb
frstor
xchg
outsb
in
std
cmpsb
aad
adcl
inc
xchg
pop
add
aaa
dec
clc
pusha
shlb
xor
fisubs
pop
ret
out
mov
jl
mov
stos
jmp
push
popa
or
cmp
int3
loop
adc
xchg
icebp
je
xchg
pop
addr16
cld
test
adc
stc
mov
fs
fdivr
and
shlb
test
add
and
cmp
mov
xor
xchg
pop
xchg
mov
and
je
fiadds
loop
das
pop
les
pop
mov
shl
mov
xchg
rcll
adc
and
adc
mov
pop
sub
sub
movsl
sbb
and
push
pop
jb
mov
in
shlb
test
fisubl
outsb
and
xor
mov
pop
add
testl
imul
mov
push
test
pop
cltd
ret
cs
pop
mov
sub
in
popa
mov
sub
addr16
push
cmp
sub
and
neg
pop
daa
inc
xchg
test
orl
inc
pop
push
sbb
or
mov
aas
adc
shlb
popf
jb
pop
stc
or
push
pop
mov
mov
pop
inc
pop
mov
inc
out
js
add
insl
sbb
test
aaa
inc
mov
insl
fcmove
fwait
cmpb
jl
addr16
lret
cmpsb
scas
repnz
insl
adc
arpl
aam
xchg
fnsave
nop
pop
add
fsubr
mov
inc
mov
bound
sti
std
ret
cmp
test
xor
add
mov
pusha
jbe
mov
inc
ss
in
cltd
inc
and
mov
in
fistps
jge
pop
xor
mov
sbb
daa
mov
xor
rclb
add
mov
es
shlb
add
and
dec
inc
stos
sbb
pop
fcomps
hlt
mov
jl
insl
jmp
push
movq
aas
lcall
xchg
push
pop
xchg
cld
push
fbld
lea
idivl
mov
push
mov
rcrl
adc
cld
mov
jmp
pop
jne
jnp
sahf
outsb
jns
sub
out
xor
imul
int
push
or
ds
js
mov
std
push
or
xor
mov
or
xchg
dec
arpl
jle
leave
pop
arpl
mov
iret
arpl
adc
in
rcrb
add
xchg
adc
jle
int
mov
and
addr16
mov
jne
push
jl
lcall
repz
jmp
xchg
into
loopne
iret
pop
int
inc
mov
cmp
fbstp
insl
push
inc
mov
out
push
loop
push
insl
adc
scas
xor
out
jae
and
ds
inc
cmpl
mov
hlt
ss
jmp
sub
loopne
shrl
push
mov
mov
shll
add
jne
cmp
inc
popf
push
sarl
jno
adc
dec
dec
jg
push
mov
pop
xchg
aam
jne
jmp
rcrl
nop
add
inc
ret
adc
faddl
xchg
mov
and
push
lret
mov
int
fs
lea
jns
or
xor
mov
jl
in
push
out
pushf
cmc
int
sarb
adc
daa
pop
sub
rcl
jmp
lds
jo
mov
stos
xor
mov
aam
mov
sbb
fidivl
cmp
sahf
xor
jnp
lods
dec
sub
icebp
notb
iret
pop
outsl
aas
and
data16
cwtl
push
or
ss
imul
xchg
pop
add
cmpsl
add
inc
das
push
shrb
mov
pop
or
stos
mov
cmp
sub
mov
mov
and
adc
push
nop
push
dec
sbb
scas
popa
dec
jne
je
mov
repnz
std
xchg
ss
pop
push
fcompl
add
out
add
outsb
stos
fimull
test
aam
adc
shrb
mov
insb
cmp
aas
mov
shrb
push
call
ljmp
mov
aas
push
cmp
hlt
mov
lret
push
add
inc
in
and
or
not
mov
sub
cmp
hlt
add
mov
cmp
mov
mov
rcrb
pop
mov
fistps
daa
movsl
push
xchg
aam
cmpsl
xor
xchg
pop
cli
cld
xchg
lcall
adc
aam
push
adc
cs
adc
mov
mov
repz
pop
dec
mov
das
cli
dec
out
sub
cmpsl
and
inc
fwait
lea
jae
jbe
mov
and
lret
pop
mov
dec
mov
mov
mov
or
loope
stos
popa
out
mov
aas
sti
popa
push
ja
sbb
std
jae
lock
cmpsb
inc
dec
mov
in
shll
mov
out
pop
gs
pop
push
sbb
mov
xor
fsubrl
repnz
js
jge
mov
in
xchg
sub
mov
stc
sub
test
xor
cld
or
fisttpl
mov
adc
push
js
test
mov
mov
adc
lock
into
repz
add
add
cmp
add
lahf
stos
add
nop
ds
push
mov
cmc
imul
add
xchg
adc
jae
outsl
xchg
aaa
lret
dec
cmp
push
jns
mov
push
mov
bound
sub
clc
adc
int3
insb
push
xchg
aaa
xor
or
popa
jns
adc
mov
sbb
cmp
inc
xchg
cmp
cmp
fdiv
xor
dec
stc
jb
dec
std
mov
lea
mov
inc
loopne
push
out
mov
dec
push
aaa
scas
aaa
dec
push
and
dec
out
inc
and
mov
sbb
lods
pop
mov
fmul
or
pop
daa
xlat
add
imul
mov
push
ss
push
inc
into
lds
ret
test
loop
jg
cmc
and
aad
push
cmp
notb
test
xchg
cltd
adc
scas
roll
mov
and
push
pop
pop
lret
inc
push
shl
mov
int3
dec
in
lods
jmp
push
mov
jle
cwtl
jae
xor
xor
xor
pop
and
hlt
sbb
fisubs
pusha
jns
out
outsl
nop
test
out
and
or
mov
xchg
sarl
cmp
xlat
lcall
and
movsb
sub
arpl
pop
jmp
mov
repz
inc
pop
pusha
sub
add
insb
addr16
lret
rcll
mov
int
daa
push
mov
cs
mov
mov
xchg
sar
xchg
arpl
xchg
and
dec
in
dec
mov
ljmp
and
int
test
mov
loopne
insb
or
ret
jmp
xor
movsl
and
inc
imul
inc
jnp
pushf
fcomi
imul
inc
imul
sub
adc
mov
out
cmp
stc
dec
sub
add
adcl
cmpl
out
cld
jl
pop
enter
scas
sub
lea
mov
cmp
pop
jne
lods
and
and
sub
rcrb
cwtl
lret
cmpsb
int
push
loope
hlt
pushf
ljmp
loope
pop
push
and
mov
bound
inc
jmp
or
cmp
sbb
sub
sub
mov
aam
or
xchg
lods
das
jl
pop
mov
mov
pop
jo
ljmp
imulb
repz
inc
aad
mov
ds
aas
xor
outsb
cmpsb
icebp
sub
in
sbb
inc
mov
mov
or
adc
ljmp
push
fistl
sbb
cmpb
or
lahf
jmp
enter
int
xor
movsb
jno
out
mov
ret
xlat
faddl
mov
xchg
repnz
loope
mov
jnp
pop
jl
xor
xchg
fucomi
inc
xor
scas
pop
xor
jge
cs
jnp
add
cmp
stos
jo
dec
pushl
adc
jo
mov
xchg
icebp
sbb
mov
and
and
mov
push
xor
cltd
enter
mov
jae
adc
xor
daa
pop
cs
out
je
jle
hlt
dec
loopne
fildl
jle
jae
ficoml
mov
xor
ljmp
pop
mov
out
push
ret
push
and
and
fcoml
lret
mov
sub
lret
add
inc
popf
jnp
adc
popf
and
sbb
aas
and
mov
xor
popf
loop
out
and
jge
sbb
or
mov
loopne
adc
nop
inc
xchg
fcoms
mov
mov
pop
int
sahf
sbb
dec
xchg
adc
xchg
sub
mov
mov
add
mov
cmp
pop
jg
sbb
loopne
xlat
inc
aaa
or
movsb
adc
popa
and
ret
and
cmpsl
adc
cltd
jns
mov
fsts
add
rcll
das
mov
fiaddl
adc
in
fsubl
xchg
adcl
rcr
fistl
imul
cmp
aad
add
inc
test
push
sahf
and
xchg
sub
xor
xchg
aas
mov
dec
dec
mov
sub
sub
adc
jecxz
jle
scas
enter
jnp
je
jno
loopne
addr16
jns
xor
sub
cmpsb
idiv
xor
out
push
in
dec
jg
ljmp
jne
ficompl
xchg
notb
mov
add
jp
inc
dec
les
xor
lret
enter
dec
or
pop
jg
mov
imul
ret
mov
movsl
add
aad
in
ja
leave
fdivl
push
dec
lret
out
mov
mov
cmp
out
test
mov
shrl
jo
lret
push
lds
loop
loop
mov
and
xchg
shl
enter
or
and
sub
inc
push
or
ret
push
aas
divb
std
cmpsl
sarl
xchg
es
iret
enter
ja
test
push
pusha
rep
cltd
jo
std
ds
pop
ja
jle
mov
add
push
or
fwait
xchg
mov
push
cli
das
shlb
pop
js
stc
addr16
and
mov
cwtl
add
lods
xchg
xchg
adc
je
xchg
out
mov
dec
inc
pop
nop
aam
xor
pop
xchg
outsb
cmpsb
cwtl
jecxz
lea
jecxz
push
xor
inc
inc
push
inc
repnz
mov
cmpsl
jg
xor
and
cmp
movsb
sahf
cvtpi2ps
cmp
repz
push
leave
pop
fists
dec
lds
jp
fimuls
mov
mov
lahf
sbb
sbb
mov
mov
mov
jnp
or
popa
daa
loop
and
fmull
lahf
push
push
cmp
jl
mov
cwtl
loopne
ds
push
fdiv
cmpsl
sbb
popf
shlb
aad
pop
pop
or
repnz
aas
xor
jl
cmp
jb
mov
dec
inc
pop
daa
gs
std
or
sbb
ret
bound
stc
test
fmul
jge
xchg
sarb
mov
scas
je
outsl
adc
sete
fnstsw
pop
sub
dec
xor
mov
mov
stc
xchg
mov
test
inc
popf
cmpsl
idivb
inc
test
enter
mov
cmp
scas
push
mov
sbb
stos
xor
pop
or
mov
gs
cmp
nop
pop
int
enter
push
push
xor
xchg
test
dec
mov
mov
rorl
inc
lods
nop
sbb
scas
mov
pop
push
lods
jecxz
sub
iret
cmpsb
stc
stc
xchg
inc
mov
jg
sbb
addr16
adc
or
jg
inc
push
mov
decb
ret
aaa
add
lock
orl
mov
xor
cmp
enter
shll
cmp
pop
outsb
std
fsts
add
sub
rcrb
and
xchg
xchg
cltd
sahf
lea
sti
iret
into
xchg
call
test
in
pop
sub
or
rcrl
or
sbb
dec
mov
and
stos
add
cmp
sbb
mov
or
jmp
sub
and
adc
xor
sub
and
shlb
fisubrs
and
lods
xlat
in
mov
mov
shll
sbb
lcall
lock
inc
rol
xor
push
cwtl
or
mov
xor
mov
cmpb
xor
mov
adc
lret
aad
vpermq
in
ja
rorb
xchg
inc
jae
lret
int
insl
add
mov
sub
jecxz
mov
imul
and
jns
stos
mov
cld
arpl
sub
mov
pop
js
mov
jns
ja
mov
clc
add
pop
mov
or
or
pop
sub
pop
cmp
mov
xchg
mov
mov
pop
test
pop
cld
mov
jns
gs
test
add
and
and
adc
in
test
inc
adc
js
mov
or
lea
adc
or
jg
jo
fildl
lds
or
in
pop
repz
sti
push
add
out
xor
dec
ljmp
xor
comiss
je
loopne
out
push
cwtl
insb
fistpll
fsts
int
rorl
orb
push
shrb
mov
jl
daa
inc
cmp
pop
outsb
mov
mov
je
sbb
lcall
lods
lods
in
sbb
repz
ret
pop
bound
adc
pop
mov
push
cmpsb
mov
lret
cmp
and
pop
icebp
or
mov
xchg
sub
ret
pop
test
and
out
ss
pop
pusha
jns
inc
inc
insb
xor
inc
or
xchg
cmc
sub
cmpsb
adc
mov
gs
mov
push
and
sub
shlb
adc
mov
xchg
sbb
adc
adcl
aas
pop
int
dec
mov
mov
orb
imul
adcl
scas
and
add
push
aad
sbb
int3
or
inc
jno
notb
xchg
dec
jb
sub
adc
or
aas
cmp
inc
xor
int
cmp
rcr
jbe
jb
cmpsb
mov
push
xor
lret
mov
xchg
xor
fsubs
int
or
imul
sub
rcl
jbe
jle
fldt
mov
scas
fsts
mov
dec
sub
xlat
mov
pop
add
jnp
js
inc
jne
es
cli
xchg
dec
and
cs
movsl
test
fsubs
xor
cmp
mov
sub
fistps
xchg
in
sbb
les
adc
aad
and
inc
es
sbb
cmp
cmp
mov
xchg
jle
push
cmc
sarl
mov
sbb
dec
fdivs
popf
mov
in
and
dec
insb
ss
into
stos
mov
imul
lods
pop
dec
popf
mov
adc
jmp
scas
xor
push
xlat
insl
cmp
ss
call
lcall
mov
pop
mov
dec
ficomps
repz
cmp
dec
cli
xor
incl
test
test
ss
mov
cs
pusha
fnsave
push
pusha
dec
repz
or
cmp
inc
fninit
jo
jle
inc
inc
test
pushl
inc
push
xor
out
pop
push
mov
popf
std
adc
dec
popa
icebp
jne
fidivs
push
bound
mov
pushf
mov
pop
pop
jo
scas
ror
cmp
in
dec
imul
mov
mov
cmp
aad
jne
popa
ja
xorl
test
outsb
scas
lods
jp
jns
ds
ja
sub
shr
inc
and
xchg
sub
or
jo
jae
dec
sub
cltd
push
js
lock
enter
aas
int3
lods
cmp
push
iret
jp
daa
ss
inc
mov
xchg
jae
jmp
leave
jno
fidivrl
push
inc
add
add
dec
or
add
cs
dec
aad
push
lock
fisubrl
ret
and
jae
loope
or
mov
xchg
lock
push
sbb
and
or
cmovb
push
xor
fsts
sbb
pop
xchg
sbbl
flds
jecxz
mov
adc
push
adc
pop
add
adc
adc
out
popl
jmp
shrb
jl
mov
jg
rorb
xor
add
mov
pop
xor
xor
sbb
mulb
inc
js
cmp
mov
out
xor
loopne
pop
faddl
adc
aas
repz
push
ljmp
ss
or
cmp
push
sub
xor
test
pop
sub
cld
xlat
loope
sbb
or
or
fwait
xor
mov
push
jle
mov
movsl
jmp
and
xchg
sbb
dec
stos
clc
adc
dec
pop
mov
lret
inc
push
add
cltd
dec
sbb
mov
mov
push
jo
idivb
icebp
out
jmp
int3
fstps
add
or
flds
cmp
ds
mov
or
out
mov
ds
out
repz
mov
jge
push
icebp
pop
cmp
lods
repz
xchg
out
mov
inc
mov
inc
xchg
cmpsb
and
lods
cmpsb
and
mov
std
data16
lods
inc
frstor
jg
addr16
mov
rolb
icebp
subps
clc
dec
and
repnz
ret
cmp
xor
ret
sub
cmp
in
jg
adc
and
aas
xchg
notl
divb
or
mov
inc
pop
cmp
loopne
fcoms
rorl
mov
repz
cmp
mov
inc
jno
lret
lcall
out
mov
lock
mov
lahf
movsl
cmp
xchg
mov
hlt
jecxz
dec
pop
dec
pusha
dec
sahf
sbb
dec
das
data16
xor
jl
cmp
nop
sbb
sbb
std
push
addl
je
leave
cld
pop
cwtl
ret
jo
sub
xor
pop
pop
and
fcomip
xor
cmpsb
jl
lcall
mov
loopne
add
ja
scas
sbb
mov
out
sub
enter
addb
mov
shll
icebp
inc
sbb
cmpsl
push
pop
out
pop
pop
inc
enter
in
iret
sbb
in
mov
lods
dec
xchg
mov
ljmp
sbb
dec
setno
jle
jge
mull
ds
je
or
mov
dec
iret
jns
inc
jecxz
sub
in
or
xchg
int3
imul
xchg
sbb
orb
xor
outsb
sahf
jmp
push
sub
push
jg
cltd
dec
pop
arpl
push
mov
clc
or
test
mov
cli
cmc
inc
shll
and
mov
xchg
cmp
cmp
int3
or
cli
sbb
cmpsl
outsl
dec
lret
dec
bound
popf
into
push
in
cmp
mov
mov
or
fidivrs
repnz
call
aas
jge
cld
int3
movsl
or
jo
mov
cwtl
fistl
inc
mov
xchg
or
add
nop
cwtl
and
mov
jmp
sub
insb
outsl
insl
nop
mov
dec
cmpsb
pop
pop
sti
dec
pop
or
adc
and
sbb
loope
mov
lock
andb
mov
cli
or
in
and
push
jg
fwait
das
sbb
xor
jcxz
push
add
mov
mov
aaa
lock
jnp
jl
stc
in
repz
int
gs
push
adc
cld
jno
mov
cmp
inc
out
push
div
push
and
insl
xchg
and
add
sub
sub
lahf
ret
push
insl
pusha
and
int3
insl
cmp
nop
jns
jae
std
nop
jmp
addl
jecxz
loop
or
sahf
pop
loope
shrb
rcll
push
nop
scas
cmp
std
dec
gs
movsb
push
std
std
pusha
or
fldl
loopne
or
or
jne
add
scas
movsb
aad
pusha
daa
mov
jle
cmpxchg
mov
xchg
scas
fidivs
cmp
mov
adc
mov
push
or
mov
in
mulb
mov
fld1
xchg
sbb
adc
notb
xchg
xchg
cwtl
lcall
popa
nop
xlat
mov
outsl
sub
cltd
pop
enter
dec
push
xor
mov
popa
push
pop
sub
pop
outsb
popa
mov
pop
cli
cmpsl
in
sub
jns
lock
fcompl
es
rorb
lods
js
mov
xchg
mov
int3
fsts
int3
cmpsb
cmp
js
rcr
cmp
add
jp
jp
add
add
cli
xor
mov
mov
and
dec
stc
insl
sub
jmp
scas
adc
push
mov
sbb
dec
add
outsb
bound
cs
add
jl
dec
pop
repnz
push
mov
aam
pop
hlt
mov
sbb
lret
loope
or
cli
sub
inc
repz
in
cmc
and
push
pop
push
lahf
lahf
fnstsw
out
adc
or
dec
xchg
int3
cld
mov
mov
aas
cmpsb
ds
push
ljmp
dec
loope
pop
dec
lods
dec
jmp
aad
dec
popf
mov
lret
mov
repnz
sti
arpl
std
cs
mov
shrb
xor
add
pop
mov
mov
mov
xor
push
mov
dec
push
xor
mov
lret
pop
ret
leave
dec
in
ja
call
in
pop
xor
shrb
adc
xchg
and
xor
in
mov
ret
fiaddl
mov
stos
mov
bound
jno
outsl
loope
outsl
ss
loop
cmpsb
pop
push
in
movsl
rcrb
xchg
std
push
mov
pop
popa
cmp
cwtl
and
std
loopne
mov
test
addl
and
jp
fdivrl
push
in
mov
dec
bound
mov
pop
aad
stos
in
in
imul
push
pop
ficomps
pushl
adc
js
or
js
les
sub
jmp
aaa
ss
mov
push
dec
push
incl
mov
stos
mov
mov
adc
jbe
pushf
and
push
into
std
test
mov
mov
test
sti
dec
sbb
mov
add
aam
mov
ljmp
xor
dec
movntq
bound
icebp
adc
stos
mov
rclb
jecxz
repz
in
faddl
clc
idiv
dec
out
xor
pop
xchg
rcrb
mov
cmp
cmp
mov
mov
push
push
nop
or
sti
push
arpl
stc
test
movsl
test
dec
popf
lahf
push
xchg
sbb
push
pop
aaa
inc
adc
pushf
fisttps
push
jecxz
add
add
dec
xor
inc
cld
and
shlb
rcll
aad
flds
frstor
imul
add
mov
push
bound
fistpl
jecxz
push
fwait
pushf
add
out
ljmp
mov
mov
mov
jge
cmp
aam
or
icebp
cli
stos
loope
and
aas
inc
clc
or
push
ljmp
inc
jecxz
pop
loopne
in
sub
sbb
add
and
push
repnz
outsl
xorl
out
and
int3
mov
call
cmp
mov
iret
hlt
ret
jecxz
xlat
add
cmp
lds
ja
adc
sub
ss
xor
leave
icebp
enter
and
sub
or
testl
repnz
fidivl
mov
mov
push
mov
mov
dec
roll
sub
and
enter
cmp
nop
mov
mov
enter
xor
xchg
and
pop
sub
pop
std
sarl
push
push
scas
mov
repz
adc
sti
add
cmp
xchg
mov
adc
loope
xor
push
lret
adc
push
pusha
cmpsb
aas
dec
adc
pop
testb
inc
stos
out
test
dec
inc
push
ja
cld
rcr
es
cmp
inc
movsl
int
cmp
push
imul
in
cwtl
ficoml
mov
lock
sub
jne
mov
lods
das
ret
out
inc
mov
clc
loopne
inc
mov
pop
sbb
xor
pop
pop
clc
push
std
outsb
in
add
iret
or
jne
adc
jge
in
push
sbb
pusha
sahf
jae
mov
clc
push
sub
cmovp
add
adc
les
lock
test
mov
iret
fsub
call
mov
mov
into
mov
in
adc
leave
or
imul
insl
cmp
adc
xchg
jg
js
xor
dec
filds
mov
sub
jmp
sub
mov
push
dec
sub
out
mov
div
push
cwtl
cmp
add
push
jns
xchg
mov
popa
mov
mov
jge
stos
xor
mov
mov
adc
push
fiadds
mov
aad
adc
adc
sbb
mov
cmp
xor
cmc
lret
mov
ja
int
ret
adc
in
adc
mov
and
sub
inc
pushf
icebp
adc
cwtl
out
pop
adc
or
aam
or
xlat
outsb
lret
jno
inc
clc
test
adc
cmpsl
addr16
roll
cmp
or
loopne
stos
xchg
lods
pop
adc
push
sbb
inc
lods
icebp
loop
jg
or
je
ja
lahf
jbe
sti
adc
adc
xor
ret
outsl
mov
mov
subb
jg
movsb
loope
cltd
js
lods
cltd
pop
fisubl
lahf
dec
icebp
cmp
jne
push
jbe
js
fldt
add
lods
stos
xor
out
imul
jno
les
or
add
push
fisubrl
ljmp
cltd
inc
imul
mov
jp
in
jns
popa
push
ret
jmp
mov
dec
dec
sub
cltd
outsl
psubb
das
out
xor
jmp
mov
rcrl
test
inc
push
ret
jo
add
daa
repz
and
mov
add
fadd
loopne
jecxz
stos
cli
jbe
push
test
mull
pop
and
xchg
sbb
mov
and
lds
cmp
icebp
mov
jno
je
push
fstps
mov
pop
aas
jmp
sbb
and
mov
cmp
push
dec
inc
push
ret
lret
xlat
cmp
mov
mov
xchg
shl
popa
fwait
dec
shlb
add
adcl
lods
je
inc
movd
and
jns
cmp
xlat
mov
jmp
add
mov
adc
cli
mov
cmpb
dec
push
out
pop
and
rcl
scas
jge
shr
scas
movsl
rcrl
pusha
sub
insl
or
add
leave
push
daa
pop
pop
push
and
and
sbb
xor
mov
aad
jge
in
lret
lret
add
es
imul
push
decl
xor
into
or
es
popa
movsb
test
push
sbb
addr16
insl
push
sbb
sti
in
clc
ret
pushf
in
push
out
and
push
xchg
in
push
jbe
shll
sbb
leave
adc
inc
fdivrl
cmp
adc
or
add
jae
insb
xchg
xor
lods
fwait
inc
fs
pusha
fsubrs
in
les
xchg
cltd
fisttpl
mov
aad
inc
and
fildll
mov
push
adc
cld
aad
cmp
inc
lahf
cmpsl
je
test
or
push
emms
and
jne
lods
and
aas
pop
jno
or
in
xchg
mov
push
or
loop
fstpt
test
pop
push
xchg
add
push
adc
pop
jno
sbb
in
ret
add
fsubrs
pop
cmp
rcrl
dec
ret
xor
xor
nop
jmp
sub
inc
or
cld
sub
cmpsb
cmp
lods
mov
imul
mov
inc
push
call
gs
pop
test
mov
testb
inc
call
dec
or
mov
inc
push
psubsb
dec
dec
cmp
fnstenv
push
xchg
push
cmpsl
mov
pushf
ficompl
sub
leave
es
and
insb
shrb
repz
pop
xlat
ret
jne
mov
dec
push
xchg
and
xlat
insl
mov
dec
cmp
sub
xor
inc
xor
mov
pop
cld
jnp
push
pop
fidivs
xchg
jb
push
leave
clc
push
jle
fmul
xchg
mov
add
inc
sbbl
mov
xlat
jae
je
adc
pop
nop
xor
stc
adc
jae
and
stos
insl
and
imul
nop
mov
test
mov
enter
inc
cld
rclb
clc
imul
scas
inc
or
mov
call
xchg
mov
fwait
rcrl
out
xor
pop
push
cmp
outsl
lcall
lret
xchg
push
rcll
jo
push
outsl
fs
cmp
or
add
roll
adc
shr
or
pop
mov
and
je
call
or
fldpi
fistps
xchg
loope
jmp
pushf
inc
xchg
pop
xchg
rcr
sbb
fadds
cmp
js
push
mov
cmp
out
ss
mov
add
lret
mov
mov
aam
lods
sub
pop
dec
test
scas
push
fmull
sub
shrb
scas
insb
jl
cld
daa
inc
ret
xor
pop
push
sbb
movsb
dec
and
mov
flds
imul
decb
scas
mov
imul
push
in
mov
scas
push
mov
lods
fs
dec
adc
dec
xchg
fwait
dec
push
lret
stos
hlt
iret
mov
in
pop
or
fsubr
xor
ret
mov
xchg
rol
xchg
mov
lcall
dec
jl
push
in
fcmovbe
cltd
fnstenv
xlat
mov
dec
push
imul
repnz
sub
xchg
sub
popf
sbb
xor
roll
xor
cmp
pop
pop
scas
pop
xchg
imul
std
xor
push
cmp
inc
sbb
pop
sbb
cmp
xchg
push
int3
add
in
test
daa
dec
adc
loope
or
and
fcmovb
xor
pop
inc
cmp
cltd
aad
jecxz
insl
lods
or
mov
xor
repz
push
aas
inc
fsubl
cli
inc
cwtl
cmc
push
adc
adc
aas
cmp
pop
cltd
gs
sbb
xchg
dec
jecxz
pop
cmp
out
adc
push
inc
sbb
sbb
test
les
out
out
adc
mov
movsb
xlat
mov
fisubrs
andl
mov
inc
sub
aam
cwtl
push
fsubrl
mov
js
loopne
bound
rorb
xchg
mov
mov
and
les
sti
push
int
xor
jb
iret
mov
roll
cmp
xor
test
cmpsl
and
jnp
add
test
xor
jp
mov
xchg
rcr
cld
jne
push
in
arpl
xchg
mov
out
insb
sbbl
inc
jno
or
xor
cld
gs
mov
sbb
flds
mov
mov
nop
dec
dec
lods
syscall
mov
fucomp
dec
enter
out
mov
pushf
xor
loope
inc
repz
mov
out
outsl
outsl
pop
call
cmp
and
lds
test
sahf
mov
js
mov
in
daa
pop
inc
xor
inc
cmp
js
incl
aas
test
mov
mov
sub
movsb
in
and
iret
mov
push
cld
sbb
jne
push
mov
int3
call
dec
xlat
push
sti
lret
test
mov
pusha
adc
pop
arpl
popl
aaa
dec
cmc
dec
xor
fucomp
hlt
jo
stos
add
xlat
dec
add
jb
and
stos
repnz
out
add
iret
and
pop
mov
pop
lods
popa
nop/reserved
add
push
xchg
add
inc
push
or
xchg
jno
in
xchg
mov
lret
jne
push
cmp
mov
fnstenv
es
xchg
mov
ret
and
fdivs
sti
ret
loope
cmc
mov
mov
ret
inc
daa
into
sub
xchg
inc
adc
mov
cmp
push
idivb
mov
cltd
mov
lcall
ljmp
push
in
ret
mov
lret
mov
ljmp
rclb
das
xor
stc
sbb
ret
sub
xchg
pusha
push
sub
daa
cmpsl
sbb
mov
rolb
cmpb
imul
aas
mov
mov
sbb
pop
sub
sub
mov
mov
or
clc
cmp
xchg
sahf
xchg
repnz
mov
push
mov
int
movsb
daa
mov
lock
loopne
popf
push
mov
fs
aas
mov
and
and
sub
fnsave
inc
push
out
nop
dec
pop
scas
mov
and
pop
cmpsl
pop
or
mov
rcll
cmp
and
sbb
sub
adc
push
lret
nop
mov
mov
sbb
or
add
out
mov
adcl
repz
addb
mov
xor
sub
xor
shlb
pushf
cmp
mov
scas
sti
fldln2
test
sub
mov
outsb
cmpsl
lds
fisubs
out
les
enter
push
mov
daa
jg
xchg
add
shrl
and
dec
in
xchg
jecxz
mov
orb
mov
int
mov
fwait
jbe
xor
dec
or
mov
push
into
ret
pop
add
xchg
mov
sub
xor
out
xor
enter
icebp
dec
repnz
fdivs
xchg
pushf
mov
ror
and
jne
pop
adc
rcll
add
sbbl
sti
cmc
xchg
pop
adc
push
je
or
xchg
jns
out
icebp
test
cltd
fistps
clc
cmp
cld
dec
push
pop
ja
leave
fisubs
xchg
mov
outsl
add
lahf
in
scas
stc
into
hlt
cmp
mov
cld
idivl
stc
insl
in
or
mov
push
push
mov
and
xchg
daa
mov
push
jb
fs
in
es
mul
pop
dec
mov
dec
sub
pop
push
xor
ss
pusha
cli
or
ret
push
dec
cmpsl
jns
xchg
jmp
sub
iret
aas
xchg
mov
pop
cmpl
mov
movsl
mov
sbb
or
fwait
mov
js
xor
dec
repnz
push
cld
dec
aaa
push
popa
fcompp
fmull
in
jo
in
in
cltd
dec
fwait
mov
push
cmp
rol
mov
in
push
push
cmpsb
cmp
inc
pop
push
and
and
xor
jnp
lret
dec
in
outsb
sbb
push
movsl
cmp
pop
stos
push
sub
cmp
imul
jne
imul
or
sub
jge
xor
mov
adcl
cmc
shlb
iret
aam
aad
dec
jg
fnsave
mov
inc
inc
pop
and
dec
dec
lods
push
in
jle
loope
xor
xlat
aas
aas
or
cmp
aam
mov
lods
add
ret
add
fadds
cmpl
adc
add
cmpsb
in
adc
mov
filds
inc
and
movsl
sbb
mov
add
mov
mov
and
push
dec
fadds
repnz
pusha
mov
aad
dec
int3
call
cli
pop
dec
leave
call
or
into
mov
cmpsb
imul
arpl
dec
pop
pop
push
sarb
mov
out
pop
sub
sub
pop
into
or
pop
repnz
jns
or
mov
jecxz
imul
mov
pop
lods
outsl
std
inc
xor
dec
pop
push
aam
ret
add
sub
fcomip
insb
aaa
cmp
mov
xchg
sbbl
push
push
repnz
push
sub
pop
xor
arpl
jp
cmpsl
hlt
test
jecxz
dec
push
pop
fldl
jecxz
adc
test
pop
popf
cmp
or
inc
or
inc
inc
jp
pop
xchg
pop
or
and
fwait
lret
test
add
nop
cmp
sub
and
hlt
adc
inc
jge
cmc
xchg
push
sub
jo
mov
cmp
adc
jmp
lds
mov
fstp
stos
xor
pop
inc
jae
jg
adc
xchg
push
mov
sub
fdivrs
jne
arpl
sbb
pop
pop
out
fsub
jo
lods
int3
sbb
test
jno
rcrl
add
push
je
dec
dec
inc
faddl
cmpsl
sarb
adc
rcrl
xchg
xchg
pop
insb
fwait
xor
xchg
inc
xchg
shl
mov
movsl
fucomip
ror
sub
std
inc
je
ror
arpl
adc
mov
cld
push
inc
int3
aaa
or
sub
dec
stos
aad
pop
xchg
xchg
and
repz
add
sbb
outsl
repnz
jns
dec
mov
xor
mov
test
xchg
bound
inc
lahf
les
add
notl
xchg
outsl
fcompl
not
sub
push
data16
sbb
pop
mov
mov
mov
and
xchg
out
mov
dec
mov
pop
sahf
dec
lcall
mov
and
out
mov
mov
add
leave
xchg
daa
pushf
jb
into
and
notl
and
ret
nop
mov
in
sar
fisttpl
int3
sbb
xchg
imul
lock
inc
leave
mov
xor
daa
repz
hlt
bound
decb
jo
in
imul
xor
dec
add
pushf
mov
cmp
mov
pop
je
sub
add
jge
adc
sbb
sub
pop
or
loop
lret
cmp
sub
mov
adc
ret
cmpsb
xchg
push
sub
stc
mov
lock
mov
jmp
xor
push
push
rclb
stos
loop
jns
add
inc
scas
jo
mov
lds
lods
es
arpl
imul
jno
fwait
rolb
mov
scas
dec
add
lea
xor
pop
push
mov
and
mov
and
and
jb
jge
int3
cs
popf
cmp
adcl
pusha
push
stos
sub
inc
cltd
jmp
or
repnz
stc
fistpl
fsubrs
dec
sbb
xchg
or
sub
sub
mov
std
jle
lods
test
pop
mov
scas
imul
mov
cmp
or
push
or
or
aas
ljmp
lods
jnp
cmp
xchg
and
add
jle
adc
mov
jmp
sub
jl
adc
stos
push
cmp
imul
push
shlb
lea
add
and
add
adc
in
outsb
and
mov
and
jns
cltd
aaa
aad
or
and
aaa
lods
in
mov
xchg
stc
test
sub
or
fincstp
push
sub
and
sub
push
movsl
jle
sbb
sbb
std
out
jge
adc
rorb
aas
sub
rol
les
addr16
insb
mov
inc
push
popa
repz
imul
inc
and
lods
lret
fwait
jecxz
xchg
arpl
fldcw
mov
in
inc
inc
mov
sub
faddp
jge
in
fsubl
shrb
adc
imul
test
or
mov
icebp
clc
push
dec
push
cmpsb
cmp
push
xchg
mov
xchg
sti
lret
data16
cmp
pop
out
fstl
fmuls
shlb
repz
in
pop
xchg
into
addb
xchg
ljmp
test
and
sbb
and
repnz
sub
inc
lods
lcall
lret
cltd
nop
ss
scas
jg
add
xchg
or
mov
cld
out
shll
push
adc
es
cmp
mov
inc
cltd
jb
leave
jg
enter
pushf
sub
push
fcoml
std
push
out
push
dec
fucomi
cli
pop
xor
add
mov
orb
outsl
jmp
int3
fisttpll
xor
inc
jecxz
push
sbb
js
shll
shll
mov
lock
testl
cmp
xchg
push
jne
cs
adc
dec
jp
and
fiaddl
mov
gs
mov
cmp
stc
sbb
pop
xlat
js
sub
dec
mov
mov
call
adc
xorb
shlb
jns
mov
dec
outsb
pop
shrb
xor
adc
lea
loopne
push
xchg
call
cmpl
mov
adc
je
xor
loope
insl
mov
and
sbb
or
aas
aam
jmp
xchg
arpl
roll
push
add
ds
mov
sahf
lock
insl
and
sbb
lds
add
inc
jp
shlb
pop
sub
pop
or
sbb
int3
cli
ret
scas
repnz
ss
mov
sbbl
movsb
add
xchg
xor
ret
pop
out
andl
sub
fwait
and
fldl
lret
xlat
jnp
push
dec
cwtl
fwait
adcb
push
cmpsb
aaa
ss
lea
pushf
xor
cwtl
inc
int3
push
insb
cli
inc
ret
shrb
inc
add
and
out
push
data16
cltd
dec
xchg
jmp
cmc
mov
cld
jne
into
sub
sete
in
das
and
cmp
xor
adc
adc
sbb
ljmp
pop
push
mov
inc
sbb
inc
xchg
inc
jmp
pop
adcl
or
mov
fsts
lcall
sub
jnp
mov
cmp
decl
sbb
or
mov
aas
ss
sbb
push
add
mov
enter
scas
arpl
nop
push
and
mov
push
mov
outsl
pop
dec
rcll
inc
add
ja
lahf
icebp
or
aad
mov
data16
mov
inc
xor
sbb
call
cli
push
loope
imul
pop
sbb
insl
repnz
test
mov
ljmp
adc
jnp
mov
jp
xchg
roll
xor
std
sub
icebp
cld
xor
pop
push
inc
dec
or
in
arpl
adc
rorb
movsb
xchg
cmp
popf
xlat
xorl
std
cmp
cmp
add
push
mov
in
dec
cs
push
mov
mov
and
subb
adc
inc
ret
push
pop
out
aas
pushf
xchg
lock
test
jns
inc
ds
sbb
sbb
ljmp
lods
pushf
mov
inc
leave
cltd
fimuls
rolb
les
sub
dec
push
out
mov
in
mov
insb
push
xchg
jbe
movsb
push
nop
test
test
jb
aas
pop
push
mov
shll
mov
add
leave
adc
sbb
adc
in
out
sbb
mov
jp
popa
cwtl
xchg
pusha
sbb
add
js
adc
fstpt
inc
pop
notb
mov
mov
int
cmpsb
aaa
jbe
fs
inc
mov
lock
push
inc
in
lret
movsl
pop
and
mov
pop
push
or
pushf
jecxz
stos
push
mov
pop
fdivrl
pop
dec
pop
jmp
out
xchg
inc
jnp
sbb
imul
ds
stos
mov
scas
popf
dec
adc
popa
or
push
xchg
sub
test
or
aas
lcall
gs
push
lahf
cmp
push
xchg
xor
cwtl
scas
iret
and
xor
into
and
out
cwtl
xor
adc
mov
push
shlb
pop
in
cmc
arpl
jg
add
sahf
push
icebp
and
insb
pop
in
sbb
arpl
gs
xchg
sbb
cmp
push
push
fisubrs
or
dec
mov
xchg
jmp
stos
push
dec
and
std
fld
aam
mov
inc
adc
into
movsb
or
dec
adc
mov
stos
xlat
xchg
jmp
ljmp
ds
out
test
int
mov
loop
mov
fisubs
xchg
sbb
jbe
fmul
fsubl
or
movsb
mov
pop
push
add
jl
in
mov
jnp
push
and
jecxz
jb
lahf
mov
push
fcmovne
mov
push
jnp
in
ljmp
push
cmp
sbb
mov
pop
pop
mov
xchg
cmp
cmp
loopne
xor
inc
int3
xor
data16
jl
mov
mov
shr
jp
inc
add
fidivs
in
push
sbb
add
cmc
push
popa
xchg
negl
mov
cmpsb
mov
or
pusha
mov
repnz
pop
leave
cmp
shrl
test
stos
sbb
pushf
adc
adc
pusha
jno
jecxz
or
mov
jbe
mov
push
mov
sub
test
push
inc
out
cli
cmpsl
dec
inc
pop
decb
mov
icebp
cmp
fistpll
stos
popf
shll
rorb
adc
stos
iret
xor
int3
ss
out
jge
push
aam
jle
push
test
stos
fists
mov
mov
outsb
pop
inc
sbb
push
outsl
push
and
lds
lahf
sbb
xor
iret
movsb
call
mov
gs
jle
imul
push
or
dec
fdivrs
out
outsb
mov
outsl
cmpsb
daa
jle
js,pn
pop
aam
pop
mov
xor
jg
aam
dec
mov
xor
out
push
ss
lea
add
adc
push
rorb
movsb
jb
lds
iret
repnz
les
or
pop
push
hlt
cmc
push
cs
loopne
cmpb
xor
mov
mov
push
sahf
mov
cld
imul
cmc
mov
fcmovbe
rolb
add
lock
out
mov
lds
popl
jle
and
dec
dec
push
mov
sbb
fwait
xchg
or
push
xchg
sahf
adc
sub
sub
js
cmpsb
icebp
cmp
and
push
lcall
shlb
sbb
mov
adc
arpl
jo
jecxz
leave
pop
cmp
cltd
jno
jne
loopne
in
cmp
push
dec
xchg
inc
inc
fbstp
icebp
or
pop
fsubl
pop
mov
cwtl
mov
inc
ret
add
rcrb
sbb
mov
fs
outsl
pusha
imul
jmp
cmp
mov
fidivrl
or
push
and
xor
int3
xor
mov
scas
loop
or
call
or
add
mov
push
pushf
add
sbb
test
jae
inc
xor
xchg
mov
cmp
rcll
sub
or
aam
mov
push
pop
in
jl
xchg
fldl
aas
sbb
nop
pop
sub
out
fwait
roll
lods
sbb
cmpl
push
mov
fnsave
and
mov
or
adc
inc
inc
std
jnp
xor
imul
adc
push
fdivrs
imul
push
inc
xorb
xchg
push
xchg
add
jae
into
ja
add
test
or
mov
pop
fstpl
scas
mov
mov
ret
mov
adc
fistpll
out
and
divps
dec
cmp
and
xor
xchg
inc
or
dec
pop
fiadds
push
lret
adc
mov
out
fidivrl
inc
mov
and
cwtl
cltd
adcl
test
mov
dec
je
cmp
xor
mov
lock
mov
nop
add
push
loop
iret
pushf
dec
stos
sbb
sub
jbe
fistpl
fprem
add
scas
mov
int
test
mov
push
insb
jl
dec
xchg
mov
shrb
es
bound
add
stos
std
out
jno
ret
mov
cmp
fldenv
fmul
dec
mov
cmpsl
xor
adcl
push
mov
cli
adc
and
shll
cmp
add
cltd
out
sbb
dec
adc
sti
mov
scas
cwtl
cli
fdivs
in
jnp
fnstenv
cmp
jns
ss
and
cli
cmpsl
lods
scas
xor
jge
aad
imul
pop
push
fisubrs
test
filds
and
mov
mov
cmpsb
sahf
cmp
cli
lcall
cmp
and
dec
jmp
lods
std
data16
jns
and
dec
inc
jbe
imul
and
xchg
jecxz
scas
testl
xor
aaa
lods
cmpsl
mov
sbb
fnstenv
cmpb
aad
jp
aas
lds
push
xchg
cltd
shrl
fsubrl
cmp
scas
pop
pop
daa
int
add
xchg
popl
xor
cltd
out
cmc
fdivrl
cli
push
pop
lahf
pusha
mov
roll
and
adc
mov
shlb
ja
mov
mov
sub
pop
or
add
stos
sub
pop
roll
pop
shll
push
push
sbbb
jae
add
cwtl
or
dec
les
or
pop
popa
negl
mov
cmp
push
fidivl
sbbb
jl
aam
push
dec
int
push
mov
subl
in
adcl
lea
je
mov
cmp
and
popf
pop
inc
mov
mov
das
int
in
in
in
cmpsb
mov
repnz
mov
lods
sub
and
xchg
sbb
sub
mov
data16
add
mov
pop
fwait
negl
mov
xlat
es
dec
xchg
xchg
push
test
out
or
xchg
shlb
test
xchg
cmp
daa
cmp
add
push
addr16
or
gs
jecxz
repnz
cltd
inc
mulb
sbb
lcall
mov
cmp
fs
or
call
ljmp
sti
pushf
mov
out
dec
xchg
lsl
pop
or
dec
out
fstps
dec
ss
inc
and
shrl
scas
mov
add
ret
add
add
fucom
movsl
sar
xchg
clc
or
and
fucomp
packssdw
sub
and
test
fists
push
int3
pushf
jb
adc
and
cmpsb
adc
mov
xor
mov
jno
cmp
sbb
inc
xlat
dec
inc
push
fsub
arpl
xchg
lret
or
mov
pop
clc
das
xchg
lahf
mov
mov
rcl
lds
xor
or
add
rcr
mov
add
gs
jmp
je
fistl
icebp
fcomps
xchg
xchg
testb
mov
pop
ds
rorl
pop
push
sub
das
mov
cwtl
ss
mov
mov
lock
cld
out
jecxz
jge
pushf
cmpsb
insb
lret
adc
mov
mov
push
fistpll
or
inc
jne
jl
mov
sub
lods
hlt
pop
xor
push
shr
sub
and
loope
jae
scas
jecxz
in
xchg
rolb
in
lea
xor
adc
jbe
lods
nop
loope
imul
and
jns
adc
addr16
lods
hlt
pop
loop
insb
sti
and
subb
jl,pn
pop
nop
push
jnp
loope
push
scas
sub
fildl
sub
loope
paddw
sub
pop
pop
mov
xchg
out
xchg
idivb
xor
sub
mov
inc
mov
out
and
iret
adc
lea
jmp
cmpsb
jle
xchg
icebp
sub
ljmp
mulb
ja
ljmp
sti
shlb
movsl
xor
mov
mov
fnstcw
or
adc
mov
notb
jns
push
mov
jmp
insb
dec
dec
pop
and
cmp
mov
mov
popa
dec
xchg
dec
sbb
dec
jle
push
cltd
jg
sbb
ja
jmp
push
sub
ficomps
adc
adc
pop
pop
aam
mov
lahf
imul
and
inc
rorl
ljmp
add
add
es
icebp
jb
test
in
sbb
scas
xchg
mov
lcall
sbb
jns
lahf
xorl
xlat
insb
lret
adc
cmc
dec
sbb
jns
into
aam
jb
xchg
xor
sbb
out
rclb
andl
js
fsubp
sbb
aaa
xchg
repz
iret
mov
out
hlt
test
lcall
fidivrs
lcall
xchg
or
imul
sarl
push
and
std
iret
popa
xchg
mov
shlb
lock
jl
test
lods
clc
fcmovu
mov
aaa
shl
sti
imul
jmp
pop
mov
mov
push
mov
mov
sub
test
sti
add
outsb
outsl
movsb
sub
adc
dec
lods
or
fldenv
and
or
aad
xchg
mov
loope
stc
mov
push
xor
inc
cld
xchg
imul
clc
add
outsb
cmp
push
pop
nop
xchg
inc
or
xor
pop
stos
lahf
iret
imull
xlat
mov
cltd
xor
adcb
lret
mov
push
jmp
imul
int
sbb
imul
xor
pop
int3
mov
mov
adc
jno
xchg
mov
into
std
sbb
es
call
aas
sbbb
cmp
rcrb
dec
loope
repnz
inc
push
jo
inc
stos
call
push
es
push
outsl
movsb
pop
or
xor
cmc
inc
mov
push
jb
cld
mov
pusha
xchg
fbstp
loope
mov
ja
int3
call
xchg
xchg
lds
lahf
lea
enter
mov
mov
aad
cmp
fmuls
jmp
out
nop
inc
cmpsl
mov
cmp
movsl
lea
adc
push
push
setle
mov
pop
divl
lock
ret
gs
and
push
divl
insb
incb
scas
sbb
push
pusha
das
outsl
shl
pop
push
enter
push
adc
lret
cld
loope
push
daa
mov
pop
icebp
std
in
inc
xor
stc
mov
mov
leave
push
cmp
and
imul
cmpsb
or
sbb
and
test
in
mov
rorl
lcall
pop
repnz
mov
aaa
push
inc
fidivrs
sub
dec
shll
cmc
add
push
loope
cmc
js
enter
in
inc
out
mov
ret
and
fcoml
bound
push
push
push
adc
js
leave
ds
xchg
frstor
mov
pop
adc
pop
ret
testl
sub
sub
mov
aam
mov
repz
addb
out
xor
dec
js
jbe
mov
inc
insb
push
sbb
sub
mov
and
clc
dec
fadd
adc
sbb
data16
loopne
adc
arpl
test
xor
cmpsb
jecxz
cld
loop
inc
int
ds
add
xchg
pop
nop
insl
movsb
rclb
xorl
and
shl
sti
cmpsb
or
es
or
mov
je
iret
push
sub
cmc
jge
xor
out
jg
and
sub
call
repnz
cmpl
mov
rcll
fidivrs
pop
pop
lods
lds
call
enter
popa
popf
adc
inc
mov
in
mov
fwait
push
jo
scas
pop
lods
jno
or
js
pop
xchg
into
enter
sbb
ja
pop
fistpll
loopne
popf
inc
push
cmp
lret
addr16
cmp
mov
jg
mov
push
iret
rolb
loop
add
xor
mov
mov
mov
scas
inc
test
outsb
mov
pop
daa
sbb
mov
fisttpll
jo
js
xchg
nop
adcb
dec
lods
push
fdivs
std
sahf
gs
out
jecxz
push
cmp
push
movsl
sbb
cld
sbb
mov
ror
imul
aad
xor
test
js
sahf
sub
mov
shll
add
ss
out
aaa
xchg
aam
movsl
cltd
pop
push
popf
imul
ja
in
add
cltd
imul
sarb
mov
mov
mov
out
sub
sbb
pop
mov
or
sub
push
fisttpll
mov
pop
or
outsl
adcl
and
sahf
pop
sub
ljmp
push
mov
outsb
test
mov
aaa
mov
dec
and
xor
in
mov
int
ljmp
xor
mov
and
popl
push
inc
rorb
sub
repz
mov
outsl
inc
pop
lods
pop
cmc
mov
inc
jg
lds
rclb
mov
lods
jo
cmp
mov
push
movsb
add
dec
cs
out
xor
mov
out
sahf
shl
or
js
dec
xor
gs
mov
mov
dec
push
pop
movsb
inc
scas
xchg
testb
lret
les
xor
xor
xor
adc
mov
xchg
loope
cs
movsb
mov
ljmp
iret
cmp
ljmp
push
or
inc
xchg
test
xor
pop
aas
push
push
addb
in
mov
dec
mov
mov
push
jmp
adc
jle
xorb
test
hlt
sbb
jbe
pop
or
test
out
sbb
jp
sub
into
jge
out
push
dec
mov
jge
ja
lods
mov
add
lret
push
and
popa
lret
inc
xor
loop
loope
or
sub
mov
insb
clc
dec
dec
cmp
in
jno
cmc
or
or
or
aad
mov
cli
addb
push
ljmp
dec
fnsave
cmp
add
jae
adc
mov
addl
mov
adc
bound
adc
mov
push
and
jns
or
aam
scas
loopne
push
pop
dec
enter
lcall
xor
mov
rcrb
roll
jmp
mov
and
repz
pop
dec
popa
lcall
aaa
incl
out
pop
cmp
adcb
sub
mov
add
mov
in
loope
call
insl
mov
loope
js
sub
jnp
push
icebp
xlat
sti
cmpsb
xor
xchg
jmp
dec
out
nop
addb
mov
data16
push
aaa
out
xor
cld
inc
and
cli
imul
in
lds
mov
out
inc
mov
adc
adc
call
mull
jb
and
ret
test
jge
inc
icebp
pop
and
dec
pop
pop
mov
mov
inc
inc
loopne
xor
dec
adc
inc
sbb
jns
pop
out
adc
or
scas
insb
adcb
call
xchg
repz
push
stos
lods
test
xor
mov
cmp
lcall
push
xchg
mov
lret
push
scas
faddl
and
mov
xlat
in
jp
lock
xor
rcrb
add
lcall
cli
iret
or
push
scas
jmp
icebp
movsl
push
add
mov
adc
jb
inc
dec
test
mov
arpl
enter
push
xchg
inc
clc
mov
jle
sub
subl
sbb
test
push
clc
pop
push
std
fildll
or
pushf
scas
out
pop
insl
ljmp
addl
push
rdmsr
adc
loop
mov
enter
stos
in
adc
fldl
mov
and
pop
sti
stos
jp
jl
dec
sbb
jae
adc
cmpl
loop
js
sti
sub
rcr
insb
out
inc
push
xchg
mov
cwtl
std
adc
and
outsl
pop
and
sbbb
movsb
idivl
out
fimull
fwait
lahf
xor
push
dec
dec
cltd
xor
fs
and
inc
out
sub
ret
iret
sub
scas
test
xor
fcomp
mov
push
out
dec
dec
inc
movsb
pop
xchg
aas
mov
cwtl
adc
lods
jno
jnp
mov
mov
mov
pop
sub
sbb
push
sub
sbb
repz
sahf
inc
adc
and
lods
mov
and
xchg
cmp
dec
inc
add
fldt
jl
cmpsb
adc
ja
xor
sub
xor
cmp
lock
aam
imul
pop
xor
mov
adc
mov
lds
xchg
pop
pop
roll
lcall
push
dec
shrl
xchg
dec
mov
ds
negl
push
loopne
insl
or
aam
jns
fdivp
and
lret
jae
cmp
jb
mov
in
test
clc
aad
lret
adc
xchg
aam
push
pop
or
cld
jl
out
fcoml
pop
xchg
mov
mov
daa
shl
and
mov
outsl
minps
outsl
shrb
pop
jb
mov
xchg
cltd
pop
pop
mov
mov
out
popf
es
push
sbb
lock
and
xor
cmp
dec
popa
or
sbb
scas
shlb
mov
jecxz
sbbb
mov
jns
fistpl
std
pushf
les
stos
into
outsl
and
add
jg
adc
sub
lods
stos
ljmp
cmpsl
jnp
insb
inc
jns
nop
es
iret
push
jne
dec
scas
out
mov
icebp
popl
dec
sub
loope
fldenv
push
ljmp
mov
inc
mov
push
scas
add
adc
loop
sbb
dec
lret
xchg
pop
fabs
loopne
sbb
cmp
pop
mov
test
cmpl
sbb
es
cmp
add
rolb
popf
rcrb
xor
xchg
cmp
or
mov
jno
gs
nop
cmp
or
push
rcrb
out
cltd
hlt
fildl
cli
sub
xchg
jbe
fwait
and
or
testb
jecxz
or
ficoml
xchg
and
dec
push
cli
cmp
jle
movsl
jmp
xchg
push
ret
mov
daa
cmp
cmp
jmp
js
xchg
std
push
pop
pushl
mov
aaa
stos
cmp
imul
icebp
div
or
xchg
imul
sub
fsubrs
arpl
mov
sbb
lret
sbb
mov
hlt
or
stc
fsts
xor
daa
mov
mov
push
push
xor
mov
ret
fs
dec
dec
adc
ficompl
nopl
mov
sbb
jmp
xchg
int3
adc
icebp
sub
xchg
mov
push
adc
xor
jp
jp
fildl
jge
sbb
xchg
cmp
pop
push
test
jbe
imull
cmp
dec
inc
in
or
ret
xor
xor
sarl
lock
enter
mov
lahf
js
sub
mov
mov
clc
jle
repnz
std
repnz
mov
add
nop
and
jl
mov
test
test
xchg
pushf
adc
dec
sbb
push
repz
nop
ss
lret
adcl
outsb
addr16
adc
shll
movsl
dec
es
test
stos
xlat
roll
xor
gs
cwtl
mov
push
sbbb
or
ss
pop
or
insb
sub
xchg
xchg
jns
mov
out
jmp
pop
lds
dec
jg
xchg
or
sub
pop
xchg
pushl
jmp
dec
or
xchg
mov
ret
push
push
push
add
push
test
add
mov
out
inc
cli
fimull
mov
xorb
fistpl
cld
xchg
and
ss
jns
pop
cmp
inc
lahf
cmp
inc
adc
in
push
or
fnsave
jmp
inc
fistl
ja
xor
jae
mov
xchg
out
mov
pop
scas
add
or
jns
loopne
push
mov
xchg
add
pop
mov
iret
ljmp
adc
invd
push
gs
xchg
in
pop
cs
mov
in
arpl
jae
out
jne
insb
cs
int
sub
jge
rcrl
test
lret
scas
je
mov
sub
out
inc
cmp
inc
mov
dec
mov
xor
add
sahf
push
xchg
push
mov
pop
xchg
les
pop
testb
and
lret
lret
in
jns
rolb
stos
addr16
roll
int
dec
out
mov
jae
xchg
aaa
lock
push
xor
add
push
into
pop
xor
jg
movsb
jle
popa
pop
mov
out
push
cmpsl
dec
xchg
mov
andb
jp
rsqrtps
sbbl
or
adc
and
mov
lret
out
jmp
es
cmp
push
or
dec
inc
push
mov
push
shll
cmp
mov
sbb
ret
mov
sbb
mov
mov
cli
add
outsb
leave
or
sub
mov
xchg
add
loop
lods
int
dec
inc
dec
push
adc
cltd
adc
lea
pushf
push
mov
push
mov
and
mov
pop
insb
mov
cli
sbb
cwtl
rcl
and
adc
insb
fldpi
cwtl
aaa
xchg
xchg
xchg
mov
sub
lret
fdivrl
sbb
pop
add
mov
sbb
inc
dec
jne
mov
sbb
call
dec
adcb
aaa
sbb
ret
fwait
inc
js
loopne
dec
lcall
pop
fsubl
sarl
jp
push
xchg
in
jae
mov
pushf
jb
mov
stos
cmp
xchg
inc
sub
in
leave
xchg
xchg
les
mov
sub
stos
shll
push
dec
pop
pop
mov
stc
mov
in
mov
adc
mov
cwtl
ffree
repz
mov
sbb
arpl
push
pop
pop
rcrb
shlb
mov
and
and
sub
out
fcmovb
sti
loopne
mov
rcrb
jl
sti
add
les
add
mov
inc
lea
mov
pop
dec
mov
pop
ja
int
or
cmpsl
mov
scas
notl
pop
pop
je
push
test
call
in
into
fsub
enter
pushf
jb
dec
xchg
mov
jbe
je
insb
mov
mov
fcomp
shrl
sub
aas
testl
inc
insb
les
fdivrs
push
pop
shrl
lcall
adc
scas
loopne
add
mov
clc
jl
sbb
or
repnz
int3
inc
dec
shl
pop
inc
lea
cltd
das
and
mov
push
cwtl
push
out
mov
cmc
jmp
jmp
xchg
push
movsl
pushf
fildl
cltd
das
sbb
hlt
cmp
sub
pop
cmpsl
mov
scas
add
add
dec
cmp
or
sbb
stos
xchg
mov
sarl
imul
pusha
xchg
push
jne
lret
sbb
cwtl
outsl
hlt
pop
cmp
inc
add
and
aam
cmpb
enter
stc
cmp
in
ret
test
adc
adc
rcll
divb
repnz
cltd
nop
dec
leave
fisttpl
data16
add
movsl
stos
mov
aam
mov
xor
sub
mov
jmp
cmp
lcall
rcl
aaa
cmpsb
sti
cli
iret
add
or
xchg
scas
lock
lahf
lret
sbbb
mov
fcoms
jno
les
xlat
out
fistl
cwtl
int3
or
pop
scas
xchg
ss
leave
lock
and
sub
icebp
mov
loope
lahf
mov
gs
mov
cmp
jecxz
pop
roll
test
mov
mov
or
xor
neg
mov
cmp
adc
cwtl
dec
stos
inc
xor
cs
mov
or
pop
std
lds
outsl
test
mov
mov
fisttpl
or
cmp
out
lods
mov
xor
push
test
xchg
icebp
dec
adc
mov
enter
xchg
pop
ljmp
movsl
lods
adc
ret
cwtl
loope
mov
lods
cwtl
xor
stos
add
mov
cwtl
xlat
call
fwait
mov
jmp
hlt
inc
lods
push
out
sbb
xchg
ret
jecxz
aas
jmp
dec
jmp
leave
mov
mov
lods
and
mov
pop
push
test
push
mov
push
adc
test
pop
jbe
cmp
mov
jle
cmp
pop
decl
arpl
xchg
rcrb
daa
mov
jecxz
adc
into
out
add
sbb
and
sarl
mov
and
fmull
arpl
adc
out
stos
add
insl
cltd
jmp
sahf
add
fistl
insb
mov
imul
fnsave
jecxz
je
push
push
dec
sbb
xchg
adc
push
sbb
insl
or
push
add
add
inc
daa
mov
addr16
sbb
push
aad
mov
mov
fidivrl
fwait
leave
fs
sub
jle
push
adcb
fs
adc
or
pop
aam
push
push
sbb
sub
sbb
sarb
mov
addl
jb
and
mov
push
add
lea
imul
push
mov
jmp
sar
das
shrb
std
rcll
js
and
jb
cmc
mov
sti
pop
ds
mov
repnz
jns
test
and
cmp
jmp
aas
adc
cmpsb
and
mov
testl
repz
imul
in
push
mov
jne
in
mov
xchg
ss
jg
gs
sub
jle
xchg
std
jbe
shlb
ret
pop
mov
lods
out
js
push
jb
rcr
push
xor
inc
iret
scas
loope
add
aaa
xor
mov
ret
xchg
jmp
sub
mov
icebp
xchg
push
sub
mov
clc
cmc
test
fimull
push
bound
pop
sbb
jecxz
or
sub
enter
and
lds
cld
pop
imul
add
mov
mov
rol
jo
mov
mov
add
inc
punpckhdq
xchg
sub
bound
ds
xchg
repz
inc
aad
mov
ljmp
xchg
sbb
sub
dec
negb
stc
dec
push
pop
dec
orb
dec
mov
xorw
insl
pop
fnstenv
cmp
imul
outsb
dec
in
repnz
sbb
cwtl
push
hlt
mov
das
loopne
pop
jo
fs
call
jmp
pop
cmp
lcallw
mov
repnz
push
das
push
cmpb
mov
sub
ret
gs
dec
cmp
add
xchg
fwait
and
mov
xchg
hlt
push
dec
pop
push
adc
mov
dec
out
and
lcall
imul
lar
cmc
cli
jnp
aad
repnz
lret
xchg
cmp
lods
mov
add
jmp
push
cs
stc
notl
pop
adcl
adc
into
adc
jl
lahf
repnz
nop
out
fistpl
stos
and
push
sbb
pop
fcoms
mov
mul
xor
pop
inc
dec
aad
insb
nop
mov
out
ret
push
je
pop
pop
insl
cmpsl
and
mov
mov
sub
out
into
fs
or
cwtl
movsb
jle
mov
iret
mov
pop
cmp
adc
xlat
pop
xchg
stc
push
bound
je
mov
cmp
or
sub
cmpsl
inc
stos
idivl
sbb
mov
jmp
aad
or
popf
sub
sbb
xchg
push
nop
scas
icebp
xchg
sub
mov
cmpsl
std
loopne
cltd
ret
enter
push
sub
outsl
sti
jl
test
push
insb
mov
repnz
sub
aaa
sbb
fcoms
jg
out
xor
lcall
fcmovnbe
xchg
mov
jecxz
jecxz
push
stc
jb
cmp
dec
popa
pop
loope
or
mov
lods
or
gs
sbb
jg
repz
int3
in
xchg
outsb
ja
sub
mov
bound
arpl
push
iret
push
mov
flds
daa
xchg
pop
mov
xchg
mov
dec
sbb
xchg
dec
popf
sub
lret
sub
push
and
inc
test
jecxz
push
aas
inc
jae
cmp
sbb
test
jle
pushl
sub
xor
iret
xor
push
das
nop
andb
cmp
xchg
sub
aad
dec
fwait
aas
rcrl
push
pop
mov
dec
fisubrs
push
cltd
mov
daa
test
lahf
add
adc
lret
js
sahf
xchg
out
mov
xchg
mov
push
pop
sub
cltd
xor
pop
outsl
scas
clc
inc
xor
pusha
inc
rorb
repz
xor
data16
jb
jo
mov
ds
jo
mov
jo
fucom
inc
sub
repz
ljmp
lret
hlt
mov
insl
js
in
lret
jo
imul
sbb
or
xor
sub
sbbb
adc
push
sub
sbb
push
push
mov
pop
scas
cmp
bswap
and
push
sbb
push
ds
cmp
adc
aas
sbb
push
out
xor
dec
inc
jle
test
xlat
cld
jge
in
jl
add
jmp
outsl
add
into
fs
push
cmp
sbb
sbbb
clc
pop
lods
push
xchg
mov
je
inc
icebp
std
cmp
test
faddp
or
mov
mov
inc
pop
xor
imul
cmc
xor
ljmp
adc
cmp
xchg
movsb
ret
mov
jne
lock
mov
jns
jns
mov
mov
jl
test
insl
lock
jl
arpl
out
mov
jnp
loope
push
movsb
in
cmp
sbb
pop
lds
pop
or
subl
cmp
insl
hlt
mov
and
push
jg
mov
ja
in
lret
push
inc
or
push
imul
std
incl
xor
aam
clc
jecxz
jbe
cmp
cltd
cmp
subb
in
js
pop
inc
jge
pop
pop
adc
out
lcall
push
mov
fwait
push
lea
mov
pusha
xor
dec
cmp
aam
add
dec
dec
adc
std
rclb
imul
lods
inc
mov
push
arpl
mov
fs
pop
out
xor
cmpl
xchg
pop
inc
mov
in
mov
sub
popa
and
adc
clc
sbb
jmp
add
imul
int
shrl
adc
in
stos
les
les
in
cltd
rcll
push
sbb
aaa
pushf
mov
pop
outsb
lock
fbstp
aad
frstor
mov
mov
add
inc
jb
push
fs
shl
lea
push
fstpl
xor
popf
inc
push
push
cmp
sti
pminub
mov
add
xchg
jne
inc
test
repz
push
inc
cmp
or
lock
sub
or
inc
cmp
inc
sti
out
mov
cmpl
ret
pop
cmpl
mov
or
and
jg
xchg
lea
pop
mov
fs
int
mov
jmp
popa
and
mov
push
push
pop
mov
push
xchg
lea
jb
fwait
sub
mov
jne
xchg
xchg
adc
test
call
sub
cmp
andb
daa
fistpll
mov
movsl
jns
test
push
sti
in
imul
xchg
add
push
dec
ret
mov
adc
pop
mov
nop
cmpsb
adc
pop
mov
insl
setl
mul
push
scas
out
mov
hlt
add
js
dec
sub
pop
mov
in
push
lret
out
push
fucom
dec
jle
fstpl
xchg
jp
lret
addr16
ljmp
loopne
mov
add
adc
sahf
xchg
xlat
gs
pop
adc
mov
lock
add
cli
or
lret
jbe
repnz
cmp
das
popf
pop
sub
push
repnz
adc
inc
mov
pop
fcmovu
pusha
clc
int
iret
or
cmp
in
dec
sbb
in
subb
and
push
and
fisttpll
loope
fidivrs
and
icebp
in
mov
jmp
es
sbb
push
shll
mov
imul
adc
mov
mov
push
ret
mov
ret
mov
add
cld
dec
mov
jle
push
lcall
int3
pop
pop
aad
jnp
xchg
inc
jl
mov
outsl
sub
jge
ljmp
sbb
sub
xchg
xor
inc
into
dec
addl
push
pop
sub
int3
mov
add
push
inc
xchg
adc
and
aam
mov
sahf
lahf
mov
cmp
inc
notb
lret
lcall
push
in
add
cld
jmp
es
jmp
lea
mov
sbb
int3
xchg
cmc
jg
sti
test
cmp
aas
dec
adc
mov
jg
pusha
inc
lock
push
xchg
dec
push
arpl
or
cmp
out
out
xchg
sbb
add
cltd
out
push
notl
add
add
mov
in
inc
sub
inc
and
lret
arpl
test
lods
mov
shld
pop
repnz
ret
or
dec
in
sub
fstl
xor
push
ret
xor
repnz
scas
movsl
add
cs
dec
jle
cmp
out
loope
push
xchg
xchg
and
and
fstpt
ficompl
mov
lods
lcall
or
pop
dec
adc
fwait
sahf
dec
out
adc
lock
xor
add
lods
and
xchg
fcmove
dec
ss
add
in
xchg
pop
test
add
cmp
dec
xchg
fildll
insl
add
fistpll
jne
push
call
mov
dec
xchg
test
cmp
push
mov
sbb
lods
hlt
cs
popa
pop
popa
xchg
xor
icebp
mov
and
cmc
jne
and
and
in
or
int
jmp
cmpsb
adc
daa
sbb
xor
pop
cmp
push
hlt
mov
loop
imul
mov
cmpsb
pop
jne
or
adc
fwait
jbe
mov
addr16
sbb
popf
jge
rclb
add
sub
mov
fstpt
add
es
mov
sar
inc
insl
shufps
jp
push
int
lcall
xchg
xor
in
fs
pop
jns
lret
in
mov
xchg
cmp
ljmp
test
add
jp
cmp
push
lds
sub
fnsave
je
incl
sti
xchg
and
mov
mov
and
xor
rorb
cmp
pop
repnz
push
push
je
and
test
sbb
mov
mov
ss
push
pop
int
mov
mov
jge
cmpb
aaa
test
mov
push
push
cmpsl
xor
push
repz
xlat
in
sbb
xchg
lret
and
or
test
mov
mov
mov
icebp
mov
sub
jo
mov
or
mov
in
jne
or
xor
inc
mov
shlb
sub
inc
divb
jns
mov
aas
loop
mov
and
and
fsubs
jnp
test
jnp
or
mov
fmul
in
xor
mov
movb
loopne
cs
cmp
and
push
bound
notl
in
popa
and
jmp
mov
mov
inc
gs
xchg
rcrl
repz
cwtl
fdivl
mov
jmp
das
cmpsl
fstp
in
mov
mov
cmp
sub
mov
mov
adc
sbb
jno
test
sbbb
jl
xchg
lods
ffreep
fwait
ja
mov
ljmp
jg
xor
hlt
in
inc
mov
mov
addr16
sbb
sarb
pop
std
test
sarl
outsl
data16
mov
mov
je
jle
mov
outsb
clc
and
movsl
fsubrl
cmp
push
mov
mov
imul
dec
sub
loope
pop
xchg
int
out
daa
jge
cmc
inc
out
outsb
push
xor
pop
xchg
out
scas
sbb
jnp
add
xchg
lods
and
adc
iret
adc
in
pop
sub
jne
cltd
inc
cmpb
mov
inc
and
xorb
mov
aad
jb
enter
out
notl
aam
inc
lret
mov
fucompp
add
dec
mov
test
std
push
out
xchg
mov
pusha
inc
mov
cmp
mov
sarb
mov
or
call
lahf
push
jecxz
out
xchg
jae
test
lret
mov
insb
sub
lods
and
lods
mov
aaa
or
push
gs
dec
dec
or
je
lock
sub
mov
add
mov
inc
into
mov
js
or
mov
lock
xchg
mov
test
inc
mov
out
cmp
mov
or
aam
inc
cmp
xchg
stos
and
inc
mov
fimull
mov
pushf
cmp
pusha
dec
test
stc
aam
pop
testl
enter
inc
jae
mov
add
icebp
lods
xchg
sub
mov
lods
jns
stos
fcmovnu
repnz
je
mov
inc
dec
mov
iret
inc
data16
xor
pop
jmp
pushf
pop
stos
enter
ret
cmpsb
and
pop
cltd
andb
or
xor
push
lret
or
inc
loop
push
jmp
dec
pop
jnp
push
leave
push
lds
pop
xchg
iret
fildll
mov
or
shrl
inc
outsl
xor
xchg
adc
aad
jo
mov
sub
cmpsl
inc
dec
xor
dec
push
push
stc
in
jnp
or
pop
pop
mov
fistps
mov
jae
or
stos
lahf
push
lea
into
ficomps
ret
in
mov
lods
test
add
inc
les
xchg
lret
mov
dec
lds
sub
aaa
jge
adc
ljmp
jecxz
pop
fidivrs
push
fdiv
out
fbstp
mov
inc
mov
shll
popf
fcomp
cmpsl
mov
dec
push
jmp
pop
call
sub
mov
daa
xor
rorl
xchg
jmp
sub
inc
xchg
add
inc
test
mov
push
sbb
push
loopne
pop
xchg
in
mov
lcall
sbb
adc
mov
fimuls
addr16
xchg
mov
pop
fadds
add
and
adc
and
mov
in
int3
insb
mov
mov
cmp
stc
sub
sbb
cmp
add
mov
mov
movsb
cltd
add
fsubrs
mov
loop
jb
imul
jl
dec
cmp
out
cmpsb
loopne
add
aam
xchg
add
or
ret
enter
mov
test
sbb
xchg
hlt
adcb
or
lret
imul
lahf
and
pop
mov
loop
sbb
icebp
ss
mov
dec
popa
mov
mov
fdivrs
stc
sub
aad
adc
cmp
dec
fwait
in
add
mov
scas
jbe
in
cld
pop
xor
imul
les
pop
push
push
in
dec
cmpsl
mov
rcr
sbb
push
clc
jae
adc
aad
mull
push
lahf
shll
push
xor
xor
ss
mov
or
mov
inc
mov
ja
dec
or
pop
out
xor
lcall
or
adc
fiadds
icebp
cmc
dec
cmpsb
aam
das
push
shlb
test
aas
mov
sbb
cmp
call
int
jge
jns
in
das
xchg
mov
mov
outsl
loope
sub
mov
and
push
insl
imulb
ficoms
aas
xor
daa
stc
mov
hlt
sub
insb
cmpsl
sarb
add
inc
xor
scas
mov
push
stc
and
xor
mov
mov
pop
xlat
sbbl
cmp
aas
sbb
fidivrs
push
subl
sbb
dec
sbb
pop
addr16
jb
lods
push
add
push
jl
dec
and
hlt
and
sub
ret
mov
insl
std
push
xchg
arpl
dec
or
repnz
in
mov
outsb
lods
aad
aad
ja
mov
mov
aam
push
xchg
xchg
call
mov
push
pusha
and
dec
cmp
pop
imul
loop
sarl
fwait
sub
mov
add
js
loope
cmp
cmp
jl
loopne
inc
push
scas
sbb
cmp
addr16
arpl
and
hlt
and
arpl
or
mov
pop
push
iret
inc
loopne
enter
cmc
mov
mov
in
out
and
int
les
cmc
pop
ja
sbb
jb
or
push
lods
sbb
addr16
icebp
fs
sbb
xor
xor
xor
loop
and
add
filds
push
dec
ja
sbb
or
outsb
jecxz
xchg
or
adc
mov
pop
dec
sbb
xor
and
pop
fstpl
pushf
jo
xor
scas
mov
bound
test
test
je
clc
lock
sbb
sub
das
jle
fdivrl
outsl
ret
dec
inc
shll
xor
pop
adc
xor
cwtl
fmuls
andb
jge
xchg
mov
add
cmp
and
cmp
into
or
jecxz
ja
jl
mov
ret
jae
cmp
pop
ret
scas
sbb
cmpsl
inc
sti
ljmp
cmp
inc
adc
shll
adc
mov
imul
jecxz
push
pop
sbb
jp
cmp
hlt
cs
adc
cmc
aad
cmp
jecxz
push
sub
cli
stc
mov
mov
cmp
fidivrl
sub
inc
daa
pop
addr16
pop
mov
cmc
xor
push
pop
stc
fdivs
cs
add
cmp
pop
pop
jne
movsb
add
in
lret
dec
ret
xor
xchg
xchg
js
inc
push
adc
pop
jno
adc
push
push
and
inc
cmp
xor
push
imul
jecxz
inc
xchg
lret
sub
mov
outsb
cmp
fsubrp
xchg
sub
rcll
jle
inc
test
pop
add
pop
daa
mov
lods
in
cltd
push
into
jns
push
adc
enter
push
push
and
or
int
in
dec
lret
mov
xorl
cmp
shlb
pushl
jne
fsubrs
and
mov
pop
addb
and
add
nop
pop
pop
addr16
pop
shrb
pop
movsb
xchg
jecxz
xor
ret
out
es
int
into
pop
outsb
add
inc
addr16
cmpsl
addr16
aam
dec
pusha
jge
inc
pop
stos
daa
cmc
xchg
lods
inc
stos
movsb
lahf
aam
pop
gs
add
cmpsb
lret
push
mov
sub
aaa
jbe
outsb
xchg
mov
mov
sub
stos
jo
pop
dec
mov
sahf
xor
idivw
fwait
push
shrb
stc
lahf
lea
cld
or
rorl
mov
stos
pop
aad
dec
clc
xchg
insb
repz
jecxz
mov
or
add
mov
mov
sbb
pop
xchg
dec
push
leave
call
scas
out
daa
scas
mov
es
xor
push
push
mov
adc
cmp
mov
rclb
xor
adc
clc
fistpll
cli
cmp
cs
xlat
mov
les
xchg
bound
in
aam
jmp
loope
sarl
in
int3
dec
out
mov
test
jmp
scas
pop
mov
mov
sub
insb
imul
add
in
adc
daa
out
lret
fbld
pop
mov
mov
pop
push
mov
add
xor
leave
push
in
sub
les
cmovp
push
cmp
mov
shll
in
aad
mov
push
jmp
ret
scas
inc
mov
out
out
js
js
in
dec
cld
aad
add
and
xor
fdivrl
loopne
or
xor
jno
mov
ds
cmp
ret
mov
inc
mov
sub
mov
je
push
and
mov
xor
rolb
jmp
std
xchg
mov
jae
lcall
sbb
add
loope
sub
test
les
jle
adc
inc
mov
pop
xchg
jae
sub
xor
ss
jne
mov
sahf
dec
gs
lods
mov
imul
test
fistps
push
inc
jo
in
xchg
push
xor
inc
inc
pop
xor
das
or
insb
or
gs
jmp
in
test
mov
stos
testl
cmp
pop
push
lods
fnsave
cmp
sbb
imul
lds
cmp
pop
fwait
test
sbb
xchg
push
cmc
ret
daa
and
adc
popa
dec
leave
jbe
jns
or
mov
loopne
cltd
sub
push
sbb
cmp
arpl
pop
lcall
fdivrl
mov
jp
nop
xchg
jg
sub
inc
and
clc
adc
push
shl
xchg
cld
fcmovnbe
adc
shrb
pop
fdivp
out
xor
imul
into
cmp
addb
sti
decb
sbb
sub
xlat
adcb
les
sti
xchg
clc
out
je
sub
lret
gs
in
enter
push
push
nop
cli
dec
in
test
xlat
xchg
sub
movsl
stos
scas
ficoms
cwtl
ljmp
cld
outsl
dec
pop
add
mov
jo
mov
stos
lahf
fistl
pop
repz
cmpl
dec
test
mov
adc
mov
sub
lock
mov
push
leave
test
stos
cmp
scas
rorb
aad
xchg
cwtl
cli
dec
pop
loopne
xor
adc
add
fildl
into
jnp
mov
dec
fcoml
ljmp
loop
dec
push
mov
mov
xchg
inc
bound
test
inc
scas
or
cltd
lret
jns
ljmp
mov
mov
mov
loopne
jo
sbb
mov
clc
arpl
in
push
sub
or
loope
lods
out
mov
into
add
pop
addl
add
rcrb
sbb
cmpl
adc
js
cltd
xchg
in
pop
xor
fisttps
aaa
jnp
stos
addr16
sbb
ret
xchg
dec
fsubs
cmpsl
push
out
cli
out
sub
inc
push
movsl
fwait
in
aam
stos
pop
fadds
sarb
jb
cmpsb
jl
dec
in
jae
aam
jg
rol
dec
lcall
loop
adc
xchg
xchg
les
fisubrl
sub
and
mov
test
adc
test
dec
sub
inc
pop
mov
xor
push
push
cmpsl
and
xor
jmp
std
xor
jns
scas
xchg
push
push
xor
xchg
mov
movsb
out
jmp
mov
lods
shlb
mov
jb
mov
in
in
cs
mov
push
jp
fs
sub
pop
repz
leave
mov
sub
outsb
lret
lods
mov
xchg
stc
inc
sbb
and
repz
xchg
pop
outsl
push
adc
aad
shl
test
and
xchg
testb
jp
cwtl
repnz
popf
cmp
sub
dec
mov
mov
daa
ljmp
adc
test
push
or
add
add
jno
enter
dec
mov
xorl
daa
shrb
mov
push
xchg
inc
cmp
icebp
and
cwtl
enter
xor
push
jle
sub
jb
mov
ds
es
jl
jo
divl
add
jo
push
adc
out
call
mov
in
andb
sahf
cs
add
cmp
sbbb
dec
mov
outsl
daa
aaa
int
xchg
or
cli
pop
dec
cmc
ljmp
mov
in
outsb
cmp
in
sti
ret
xchg
pop
aad
mov
jne
sbb
fbld
xchg
push
aad
rcll
ss
xchg
xchg
sti
imul
xchg
mov
testl
adc
fwait
and
aam
mov
push
pusha
out
int3
or
cli
mov
repnz
mov
adcl
add
les
mov
repz
lret
push
stos
cmpsb
faddl
mov
loop
push
sbb
scas
rcll
lea
arpl
push
jnp
xor
fidivl
scas
imul
imul
shrb
cmp
and
inc
fdiv
cwtl
fldpi
and
movsb
out
or
stos
inc
and
psubusw
pop
out
cltd
es
lock
loopne
loope
outsl
xchg
sbb
cmp
xor
inc
push
rorb
inc
inc
push
fucomi
mov
inc
ret
hlt
pop
bound
jae
test
enter
mov
outsb
movsb
pusha
pop
js
pop
cltd
sbb
mov
mov
movsb
cmp
xchg
lock
jg
mov
loope
mov
sbb
mov
xchg
mov
xchg
jb
pcmpeqb
cmp
pop
in
sub
aad
lret
adc
shrb
in
adc
mov
addr16
xchg
mov
insb
int
lock
xchg
iret
cmp
addr16
icebp
mov
xchg
mov
jge
mov
mov
ficompl
test
popa
sub
paddw
mov
and
cltd
cmpsl
xor
subb
pop
loope
add
add
int3
sbb
fisubrl
add
mov
inc
orl
repnz
lahf
sbb
mov
inc
pop
mov
sbb
jle
test
dec
lret
push
fwait
ds
adc
sahf
movsb
lds
test
jae
mov
rcrb
adcb
lcall
and
sub
cmp
push
pop
imul
lods
cmp
or
sahf
fs
xchg
pop
subb
sbb
js
mov
loope
cs
les
xbegin
add
or
cltd
ljmp
jg
dec
adc
rclb
adc
sbb
divl
mov
in
int
mov
dec
xchg
in
pop
mov
mov
sbb
loope
rcl
jno
cltd
les
pop
mov
add
insl
push
mov
push
ret
mov
nop
mov
jp
outsl
or
lret
sub
dec
loope
cmpsl
iret
add
jmp
fs
ss
stos
pop
jno
sub
or
mov
mov
cld
mov
pop
push
dec
mov
fwait
mov
sub
mov
int3
ror
xchg
mov
bound
adc
lods
pushl
clc
sub
push
aaa
ret
push
jbe
push
testl
xchg
and
and
cld
inc
cwtl
cs
fdivrl
mov
push
cmp
icebp
ret
xor
dec
pop
js
pushl
mov
push
cmp
out
loope
cmp
lds
repnz
add
pop
fildll
ja
inc
sub
stos
mov
jmp
shl
aad
sbb
mov
xchg
cwtl
inc
ds
fnstcw
push
daa
in
mov
inc
push
dec
out
mov
dec
pop
ret
xchg
lock
rorl
fs
lock
out
push
jl
je
roll
leave
lcall
xor
sub
lock
adc
push
mov
pop
mov
fistps
insb
fcmovbe
xlat
fsts
out
stos
dec
aad
fwait
rclb
sub
notb
aam
pop
in
out
dec
jmp
mov
mov
lds
aas
pop
in
adc
int
pop
sub
pop
xorl
aaa
sbb
mov
cmp
mov
xchg
cmp
inc
data16
outsl
cwtl
stc
inc
jo
cli
frstor
mov
movl
jle
popf
push
xor
rorb
xlat
fwait
shl
jae
insl
orl
mov
jle
aas
push
push
adc
or
xchg
mov
add
and
test
add
add
pop
ljmp
roll
faddp
push
into
push
lret
mov
sub
xchg
cmp
mov
and
mov
shrb
xlat
shrl
fwait
popf
sbb
inc
push
dec
mov
sbbl
popa
push
movsl
push
popa
inc
push
jb
lods
mov
and
insl
lods
xor
dec
mov
xor
push
ds
arpl
inc
cld
loope
inc
pusha
mov
pop
je
jge
xor
lock
xchg
call
sar
mov
or
loope
inc
aad
mov
xchg
jg
ja
mulb
fwait
test
roll
jg
xor
cmpsl
lret
adc
mov
imulb
test
and
add
filds
mov
push
das
pop
fsubp
mov
dec
jmp
xchg
ret
push
add
mov
inc
pop
xor
hlt
inc
insb
mov
outsb
cmp
sub
loopne
and
into
out
fstl
cmpsb
fwait
subl
push
xor
ror
sarb
mov
addr16
mov
sub
ja
mov
adc
jo
xor
icebp
or
fwait
or
iret
pop
jmp
or
cmpsl
adc
leave
add
lods
loop
imul
mov
sbb
mov
pop
mov
sub
jae
jae
divb
movsl
iret
in
mov
addb
mov
xchg
jae
stos
dec
mov
inc
push
test
xchg
insb
aaa
xor
xchg
pop
ja
daa
out
inc
loopne
ss
mov
cmpsl
scas
pop
push
or
cmp
int3
push
push
outsb
stc
mov
mov
pop
cltd
or
aam
pop
pop
dec
hlt
or
dec
sub
inc
mov
das
fs
les
pop
pop
ljmp
mov
mov
xor
es
jbe
cmc
dec
xchg
mov
and
das
add
addps
notl
stc
pop
inc
int
es
push
repz
sub
jle
popf
mul
out
pop
xor
loopne
jge
insl
into
andb
lea
out
mov
andb
inc
xchg
decb
test
clc
push
mov
or
or
jg
inc
pop
pop
mov
xor
xor
jbe
jb
cs
les
dec
lods
mov
lock
cmc
ljmp
nop
xor
and
arpl
jno
cwtl
sub
cs
out
mov
inc
cmp
fimull
jb
xchg
sub
pop
andl
lahf
or
out
rcrl
mov
mov
addr16
cmc
test
addr16
std
pop
andb
mov
push
jmp
push
adc
mov
add
sarl
std
pop
jle
sub
mov
push
pop
dec
lods
and
adc
or
shrb
and
sub
sbb
mov
or
jg
loope
sub
mov
or
scas
mov
xchg
mov
lds
xchg
aaa
mov
mov
mov
call
jbe
test
inc
cmp
mov
in
and
cmp
outsl
mov
cmp
dec
shl
sub
std
shr
bnd
sub
sbb
mov
jp
lods
popa
jle
mov
add
icebp
dec
lcall
ret
lret
dec
add
push
mov
lcall
add
xchg
dec
loop
repnz
inc
cwtl
sub
adc
cmp
neg
cwtl
xor
mov
or
shr
dec
add
jbe
enter
pop
jge
jecxz
int3
jmp
adc
loope
mov
pop
add
pop
cli
push
out
dec
testl
in
lea
add
in
mov
popf
lahf
cli
push
ljmp
arpl
push
int
fwait
jle
mov
mov
movw
inc
sbbl
add
dec
outsl
shr
push
pop
ret
hlt
lds
pusha
xor
inc
push
pop
mov
cltd
mov
lcall
mov
sub
fisttpl
fiadds
jb
xchg
add
gs
jno
push
ja
and
enter
pop
dec
pop
ja,pn
mov
out
mov
loop
dec
xchg
xchg
push
jb
shr
hlt
mov
andl
mov
sbbl
add
testb
sub
xor
popa
mov
or
xchg
mov
jns
ss
cmp
inc
in
or
sbbl
inc
push
lods
jp
icebp
sub
mov
loop
cmc
xchg
stc
or
data16
rorb
lds
andb
pop
ss
mov
inc
jbe
jns
into
add
or
add
jle
add
int
pop
call
xchg
outsb
mov
jne
sub
mov
xchg
ret
mov
cmp
clc
pop
xor
jg
daa
lcall
adc
adc
outsl
cmp
inc
aas
in
gs
mov
daa
jg
pop
xchg
stos
test
jmp
push
dec
mov
sbb
out
arpl
mov
jge
repz
sub
jns
adc
push
push
jae
ret
sbb
mov
leave
adc
inc
outsl
push
out
int
mov
icebp
jmp
push
cmpsb
hlt
xor
pop
cmpsb
aad
aam
out
xchg
inc
pop
pop
pop
sub
test
mov
fistpll
push
nop
test
leave
sbb
inc
fwait
imul
shlb
add
mov
lock
out
mov
push
mov
dec
ret
inc
sbb
std
or
dec
ss
or
mov
sub
dec
out
jae
daa
aaa
jmp
loopne
and
mov
jge
jle
sub
loopne
imul
shll
sahf
into
test
sbb
cmp
push
insl
sub
testl
call
popf
test
push
push
sub
mov
je
push
pop
xchg
js
test
cmpb
rclb
mov
loop
adc
lea
inc
mov
sarb
xchg
mov
jno
std
lock
js
add
sahf
repnz
loope
in
mov
dec
data16
pop
movsb
jno
jo
ljmp
jge
jecxz
cmpsb
stos
lcall
rol
sub
inc
mov
inc
pop
sub
mov
and
push
mov
mull
iret
cmp
bound
arpl
and
into
sbb
push
mov
pusha
push
adc
faddl
and
test
push
xlat
mov
pop
int3
popa
call
sbb
adc
stos
push
mov
lcall
in
fnstcw
or
jae
cmp
and
xchg
outsl
std
pushf
mov
cs
push
not
ret
and
xor
jge
push
insb
mov
inc
lds
mov
xor
inc
dec
loopne
inc
and
rclb
xor
rcrl
movsl
shrl
mov
ja
mov
jmp
sub
xchg
add
gs
or
xor
icebp
popl
xchg
cmp
push
popf
stc
adc
pop
or
cld
add
push
pop
and
mov
shl
cmpb
mov
and
ja
addr16
jno
inc
pop
ja
dec
negb
sub
insl
aas
lahf
pop
incb
xor
mov
jg
outsl
push
in
vucomisd
inc
js
jl
lcall
outsl
insb
pop
jo
icebp
lret
int3
iret
push
fstpl
shll
cmc
jmp
out
jecxz
inc
lahf
push
and
fldcw
mov
rolb
ljmp
out
inc
xchg
add
xchg
push
add
jg
jmp
js
mov
push
mov
popf
imul
pop
add
push
sarb
call
into
js
add
xor
inc
les
sarl
mov
jg
stos
inc
pop
cmp
xchg
xchg
loop
in
and
push
or
jo
push
xchg
sti
xchg
ljmp
dec
and
jge
mov
mov
jbe
insb
stos
scas
in
fnstcw
jp
movsb
push
inc
ret
cmpsb
xor
pop
xchg
dec
pusha
pop
js
or
inc
les
and
mov
dec
aaa
cmp
sti
aad
jge
lcall
sbb
jecxz
adc
xchg
adc
xor
push
pop
aam
lahf
sub
es
mov
jmp
cmp
add
push
ss
pusha
cmp
xchg
xchg
test
loope
xchg
or
and
adc
pop
ret
dec
aaa
fwait
xchg
add
rorb
movsb
divb
into
and
aad
in
jl
daa
into
jbe
push
inc
lds
mov
inc
pop
hlt
fiaddl
xchg
cmp
inc
mov
jl
lods
mov
or
adc
add
push
fwait
imul
push
and
pop
push
nop
cld
in
sub
xchg
fmuls
or
fucom
sbb
jo
adcb
mov
imul
sbb
ret
xor
das
push
adc
test
lods
sub
leave
jecxz
add
fdivrl
jb
shrb
gs
or
cltd
jle
cmpsl
and
mov
cmp
je
stc
pop
mov
fidivl
push
popa
dec
jg,pt
loopne
hlt
test
sahf
test
push
inc
movsl
sub
pop
test
xor
sbb
shlb
push
scas
arpl
ds
movsl
fwait
movsl
loope
xlat
repnz
in
jp
mov
adc
xchg
shrl
lcall
leave
mulb
fxch
insl
rcrl
repz
lods
cmp
into
push
pop
movsb
xchg
cmp
push
sarl
mov
jmp
dec
cwtl
aad
mov
adc
adc
push
or
cltd
inc
repnz
push
cmp
int3
es
xor
xchg
mov
sbb
in
in
sbb
cld
lcall
pop
mov
and
xor
sbb
mov
jp
cli
inc
movsb
push
leavew
out
push
inc
inc
das
test
inc
mov
in
testb
mov
add
mov
daa
pop
sub
and
test
push
xlat
cltd
data16
push
es
or
cmp
lcall
cwtl
stos
into
inc
lock
or
jecxz
inc
sbb
cmpsb
sbbb
bound
cltd
gs
out
in
pop
loop
cmp
and
das
js
add
mov
sub
sbb
sbb
imul
jecxz
xchg
es
and
mov
or
push
sar
iret
rorl
xchg
mov
mov
popa
mov
stos
sub
sub
dec
js
xor
jle
cmp
or
movsb
int
hlt
push
int3
push
jp
and
jb
add
sub
dec
inc
add
or
push
ljmp
xor
shrl
pop
insl
and
mov
mov
push
jne
jns
les
mov
add
jne
stos
jle
stos
cmp
add
pop
push
mov
pusha
mov
mov
push
and
sbb
outsl
xchg
xor
test
filds
mov
xor
in
xchg
push
jb
cmp
movsl
lret
or
push
out
push
and
mov
ffreep
stos
cmpsl
dec
push
add
sbb
jle
sti
aaa
shlb
mov
testl
in
lods
lods
inc
xchg
sti
addr16
and
ja
decb
xor
sbb
imul
and
popf
les
icebp
out
adc
jo
xchg
aaa
jmp
mov
mov
inc
cmc
ja
jmp
sub
xlat
mov
ja
int
imulb
adc
mov
aas
fstps
pop
iret
data16
addl
and
pop
cmpsb
xchg
popa
push
add
insb
push
lock
xchg
ja
adc
mov
mov
jecxz
add
cmpsl
in
enter
mov
adc
push
cmc
sbb
inc
into
pushf
mov
push
mov
push
pop
ja
inc
push
sub
dec
aaa
roll
push
daa
pop
sahf
pop
inc
xchg
xchg
arpl
fcoms
fisubs
mov
fwait
dec
rol
leave
int3
cmpsl
lret
jb
int
cmp
aaa
movsb
sar
mov
sub
lods
and
cmpsl
mov
subl
or
rcll
jnp
cmp
imul
mov
push
inc
jns
fcompp
lret
std
cmpsl
loope
insl
lock
mov
cmpsb
daa
enter
fcmove
push
push
jbe
jecxz
and
out
mov
dec
or
xor
rorl
popf
cmp
push
adc
in
rolb
test
push
scas
out
pusha
jp
std
jae
dec
mov
rcl
cltd
sbbl
jnp
inc
pop
cmp
sbb
inc
dec
sub
mov
and
enter
loopne
lret
jp
ljmp
movsb
orb
in
out
fstps
repz
push
xlat
int
adc
lock
xor
popa
enter
std
rcl
and
rcl
dec
icebp
push
jg
jae
movb
aaa
mov
mov
test
inc
xor
std
adc
cmpsb
mov
mov
int3
push
fstpt
sub
aam
push
sarb
lret
loope
push
decl
flds
adc
les
inc
scas
adc
bound
xor
fcoml
jle
add
testl
add
mov
mov
jae
rcl
jb
dec
mov
inc
scas
popf
fcomps
nop
loop
push
cld
inc
xor
nop
stos
negl
and
jl
pushf
aaa
adc
shr
sbb
ror
out
pushf
xor
lea
sub
push
loop
js
mov
lret
lods
push
jne
mov
push
leave
sub
cwtl
mov
add
and
jmp
mov
cld
mov
insb
inc
in
daa
cmp
add
dec
cwtl
test
mov
popf
jge
fstp
decb
cwtl
adc
dec
and
repz
fcompp
jp
mov
sub
pop
popa
inc
es
push
clc
insb
push
aad
notl
in
adc
add
sub
sahf
cwtl
sahf
xchg
test
xchg
les
mov
lds
fcomps
repnz
test
sbb
push
pop
jl
lret
mov
inc
or
ret
lret
adc
or
mov
js
imul
imul
jle
jae
lods
or
addr16
cmpsl
fidivs
fnsave
push
mov
mov
dec
out
test
clc
adcb
fidivrs
and
fisttpl
dec
add
fsubl
add
push
and
lret
jnp
out
cwtl
lods
mov
sub
sbb
cltd
sahf
in
mov
sti
loop
aas
shrl
shrb
xchg
xchg
pop
or
cs
bound
xchg
or
roll
stos
subb
pop
int3
lahf
jns
push
loopne
call
pop
pushf
loopew
orb
ljmp
xorl
shlb
push
or
rorl
test
outsl
faddl
cmp
xor
mov
shll
insl
gs
cmp
and
sub
test
sti
cmp
ret
jle
add
dec
sahf
fnstsw
stos
pop
dec
dec
mov
fcoms
popf
sub
fstps
repnz
popf
add
mov
ljmp
clc
imull
jecxz
es
les
bnd
in
mov
sub
xchg
sub
mov
loop
mov
cmpsb
dec
pop
mov
sbb
sub
jg
out
popf
cmpb
mov
mov
and
std
push
fisubs
push
pop
mov
fsubrp
push
lret
sub
jge
test
cmpsl
mov
jne
cltd
inc
repnz
out
inc
daa
insl
pop
pusha
xor
mov
or
dec
jmp
data16
or
cmp
jo
or
sub
jbe
adc
push
xor
std
imul
cltd
fstl
add
adc
ss
std
fildll
in
inc
sub
addr16
data16
or
sbb
or
adc
cmc
xor
inc
pushf
pushf
pop
or
pushf
push
aam
popa
pop
bound
inc
mov
push
sahf
add
loop
mov
mov
add
sbb
dec
xor
mov
lret
mov
xor
notl
movsl
pop
mov
hlt
cs
jge
mov
fadd
cmpsb
inc
and
outsb
pop
jg
leave
mov
leave
fldt
lods
sbb
push
push
jb
orl
stos
pop
mov
sub
es
js
push
sbb
into
subl
aam
sbb
xor
add
jmp
stos
mov
sahf
add
xchg
and
push
and
xchg
jae
mov
xor
gs
lods
mov
dec
subl
mov
push
push
mov
out
jns
dec
mov
loopne
leave
gs
jno
push
and
dec
ds
sahf
lods
sub
add
loopne
mul
mov
inc
arpl
popf
add
adcl
data16
js
jb
repnz
in
cltd
add
sahf
loopne
fistpl
cmpsl
lret
mov
arpl
insl
mov
lahf
and
or
lods
in
repz
mov
test
test
xor
jb
mov
fldenv
jg
sub
mov
call
xchg
out
inc
push
pop
cs
inc
in
mov
sub
adc
aad
push
mov
mov
jle
dec
mov
add
mov
pop
divl
inc
push
jle
sbb
and
xchg
pop
clc
inc
xchg
test
cld
mov
out
inc
lea
inc
int3
enter
sti
fcoml
ficompl
jmp
loope
mov
push
push
inc
adc
sahf
pop
or
inc
repnz
int
loopne
xor
pushf
mov
sub
and
inc
movsl
sti
push
push
lock
inc
pop
mov
add
stc
roll
fisttpl
add
xor
mov
inc
jl
adc
push
hlt
addb
pop
jecxz
pop
push
ja
subl
cli
mov
mov
test
xor
mov
sahf
hlt
add
add
outsb
sbb
cld
xchg
mov
in
pop
clc
pop
jmp
mov
mov
into
fwait
adc
sbb
ds
sbb
jbe
fisubrs
sbb
push
jae
out
popl
into
aam
or
lods
jbe
rcll
or
fs
adc
adc
push
in
cltd
rcll
outsb
ss
sub
clc
add
sub
insl
out
rorb
sub
or
jle
push
or
aas
data16
es
sub
shll
ja
das
rclb
dec
mov
repnz
adc
les
push
dec
movsl
incl
xor
dec
sbb
jle
sbb
lea
ret
pop
lea
or
mov
loop
push
ret
call
push
insl
mov
pop
imul
or
int3
dec
pusha
fwait
ds
dec
out
push
test
fwait
or
hlt
sbb
jmp
dec
rol
or
jnp
jns
sti
mov
fs
mov
stc
cld
push
jb
aaa
aam
sarl
dec
fadd
outsl
xchg
js
xchg
mov
int
movsb
stc
mov
xor
inc
repnz
ret
lea
mov
call
xchg
mov
sub
sub
jl
out
jecxz
repz
push
lds
push
lods
imul
test
mov
lock
dec
jmp
cmc
insl
adc
in
cli
jg
dec
in
mov
out
das
aaa
cmp
fucomip
jecxz
inc
inc
or
xor
sti
outsl
js
and
scas
xchg
sub
adc
dec
sahf
loope
pop
push
pop
mov
and
dec
test
mov
ret
mov
jbe
out
push
je
or
mov
dec
pop
orl
sti
push
pusha
pop
cmpsl
push
out
jge
leave
add
adc
mov
jb
pop
jns
cs
lea
mov
sbb
mov
xchg
icebp
dec
mov
mov
mov
xor
repnz
fcompl
add
xchg
scas
insl
gs
push
sbbb
jb
call
arpl
jb
add
test
fsubrl
xchg
fimuls
enter
pop
mov
stos
scas
mov
stos
andb
sbb
ljmp
add
dec
cli
inc
nop
lret
add
push
adc
and
mov
into
mov
mov
xorl
and
outsl
mov
inc
shll
push
adc
sti
arpl
adc
mov
push
adc
add
pusha
xor
push
loopne
out
xlat
cli
sbbl
pop
xchg
call
and
push
add
xchg
imul
popa
push
aam
mov
lea
sbb
pop
mov
jecxz
das
std
add
lds
int
sbb
push
in
in
cmp
mov
pop
pop
shr
fisubrs
cld
insl
sub
sub
xchg
mov
lds
xor
fistpll
loopne
adcl
dec
xchg
adc
pusha
sub
jo
pop
pop
cmp
imul
pop
pop
je
add
jns
add
test
mov
popa
lcall
sub
xchg
jl
add
dec
push
jmp
inc
and
push
adc
sub
dec
test
push
pop
adc
fnsave
jp
jb
nopl
scas
test
ret
lods
jnp
dec
aad
or
dec
aas
lea
inc
mov
fldcw
cmp
push
cmpsb
out
sarl
xchg
inc
lods
scas
jmp
shlb
movsb
rclb
or
aad
adc
mov
mov
or
and
xchg
push
hlt
jle
out
add
nop
inc
xlat
flds
int
push
insl
mov
inc
xor
sbb
jmp
sub
cmp
loop
push
jbe
fwait
leave
pushf
mov
in
or
sbb
dec
inc
imul
pop
cmp
sbb
xchg
jecxz
mov
pavgw
sbb
hlt
out
mov
jo
cld
jle
sub
sahf
nop
cli
xor
fdivrl
stc
shll
dec
sbb
pop
mov
loopne
andl
lock
push
jae
stc
sahf
cltd
dec
inc
mov
push
push
mov
fwait
cmp
or
stos
sbb
lahf
adc
xor
in
incb
std
cwtl
in
pop
lods
push
in
and
flds
pop
inc
add
enter
mov
jecxz
popf
jbe
xor
cmpsl
cmp
or
push
enter
ljmp
in
sub
xor
call
popf
sub
xor
add
roll
jmp
mov
adc
std
test
in
jmp
sub
out
mov
rcrl
mov
dec
jno
mov
cmpsb
inc
mov
and
pop
jmp
mov
sub
fdivl
pop
out
movsl
mov
cli
popa
movsb
scas
cltd
mov
xor
inc
imul
cmp
or
lea
outsl
call
push
mov
mov
xchg
push
inc
ja
push
mov
repnz
aas
test
mov
xchg
cmp
daa
push
js
and
pop
inc
pop
pop
ret
pop
sub
mov
xchg
insb
cmp
sub
sti
int
in
shlb
jge
std
inc
inc
lret
pop
aad
les
push
or
mov
or
xchg
inc
jb
outsb
xor
or
lretw
ss
push
lock
cmp
and
loope
pop
ja
cmpsl
pop
popf
add
sbb
testb
negl
cmp
push
insb
add
arpl
pop
jns
or
jp
pop
push
clc
aaa
in
faddp
cmp
dec
jo
lods
movsb
js
int
das
push
dec
mov
call
cmp
jmp
stc
sbb
cwtl
and
hlt
push
xchg
std
sbb
pslld
call
fdivl
jmp
dec
hlt
mov
jb
inc
sbb
jle
in
movsb
mov
adc
sub
cltd
jo
fcoml
sbb
pop
dec
jno
shrl
call
fldcw
popa
pop
testb
xchg
mov
sti
sti
ret
push
pop
shlb
inc
adc
enter
inc
pop
sub
out
aaa
movsl
call
jne
adc
push
fidivrs
mov
movsb
cmp
aad
roll
mov
sub
into
add
hlt
jl
and
cmp
pop
out
sbb
ret
in
adc
sub
mov
stos
jo
mov
adc
sbb
mov
call
mov
leave
mov
xor
or
fimull
mov
sbb
mov
sub
call
fisttpll
rcl
add
je
xchg
aam
xchg
arpl
pop
jmp
jo
mov
dec
push
mov
adc
nop
push
mov
jne
xchg
mov
jg
inc
push
insb
inc
cmp
lcall
daa
xchg
stos
in
pop
test
mov
out
rol
add
xchg
repz
cltd
mov
dec
ja
jp
loopne
jmp
fistpl
clc
mov
popf
jmp
movb
or
cmp
popf
int3
jle,pt
sub
sub
mov
stc
lock
lret
addr16
mov
clc
fcomps
pop
push
in
out
dec
scas
dec
imul
jnp
push
push
rcrb
insl
ds
xor
fnstenv
add
jb
mov
inc
imul
mov
cwtl
add
ss
cmp
lods
aaa
iret
cmpsb
int3
and
xchg
movsb
inc
xlat
call
lahf
xchg
hlt
test
fs
mov
sbbl
jg
jp
inc
add
rcl
mov
int3
pop
add
call
lret
ss
or
fwait
dec
mov
ja
fisubrl
fcomps
int
add
adc
add
inc
bound
inc
daa
and
mov
push
pop
cltd
out
orl
pop
sahf
or
push
in
mov
jae
mov
stos
inc
pusha
mov
insb
iret
mov
aam
sub
xchg
jecxz
inc
push
mov
inc
pop
clc
ret
iret
shlb
js
add
dec
cmc
pop
mov
nop
adc
dec
mov
test
pusha
inc
cltd
or
xor
cmp
xchg
in
ffree
jb
xor
clc
outsb
fnstsw
mov
int
mov
sbb
lods
mov
sub
rol
lret
movsb
or
mov
shrb
push
in
lret
dec
mov
popa
das
mov
bound
or
push
and
push
hlt
mov
test
mov
inc
mov
out
std
std
mov
mov
fimuls
cld
scas
inc
pop
add
mov
and
pop
js
cld
fwait
add
insb
inc
icebp
push
cltd
xchg
sub
mov
sbb
movsb
ja
sub
sbb
cmpb
rcll
jl
imul
push
pop
or
je
or
or
pop
mov
out
sub
pop
inc
movsl
cmp
adcl
xchg
aam
push
jne
into
push
inc
gs
cmp
movb
vandpd
add
sbb
int3
out
jg
stos
dec
pop
je
sbb
adc
fs
mov
icebp
addr16
test
orb
insl
xchg
sub
icebp
pop
stos
out
adc
sub
xchg
arpl
pop
jb
or
arpl
sbb
dec
test
ret
js
aad
mov
mov
jle
sub
adc
ja
out
sbb
mov
sbb
cmp
cmpb
xchg
fldcw
sbb
cmp
pop
xchg
jl
mov
xchg
xchg
push
into
xor
stos
xchg
mov
call
out
mov
sub
xchg
rol
add
add
mov
sub
aaa
jmp
pop
scas
push
add
jo
std
lcall
stos
cmp
loop
mov
mov
cwtl
add
jb
mov
movsl
inc
push
stc
scas
adcb
add
or
fwait
push
pop
xchg
rcl
sbb
callw
arpl
idiv
into
aas
das
lret
inc
negl
xor
shrl
sti
push
inc
movsl
pop
stos
repnz
data16
or
xchg
repz
push
inc
or
pop
cmp
pop
test
jbe
ficomps
shl
sbb
and
mov
sbb
sbb
hlt
and
dec
int3
fs
scas
mov
in
push
stos
sbb
and
fmul
xchg
outsb
rorb
inc
mov
or
test
inc
jo
jae
cs
pop
stos
jecxz
xchg
ljmp
xor
push
aaa
xchg
emms
inc
lock
fcomp
inc
push
pop
xlat
fadd
addr16
loop
mov
jno
xor
leave
cmpsb
xchg
mov
lods
adc
add
cmp
cmp
sub
mov
xchg
pop
cmp
aam
cs
push
inc
lods
leave
jns
sub
and
imul
pop
fcoml
sbbb
fists
dec
faddl
ret
je
into
sub
inc
mov
out
jecxz
andb
fadd
jb
ret
sarb
sbb
shll
in
repz
hlt
sbb
pop
pop
and
adc
stc
lds
into
jmp
cmp
mov
addr16
popa
xchg
ja
in
and
fstpt
in
and
dec
sbb
mov
jno,pt
mov
cmp
and
ret
and
out
fwait
inc
xchg
push
sbb
pushf
pop
gs
outsl
adc
pushf
outsl
pop
sahf
cltd
dec
or
mov
pop
mov
cld
inc
push
lds
movsl
orl
lcall
sahf
jp
cmp
out
insb
mov
mov
pop
pop
fisubrs
adc
xor
out
dec
das
es
imul
fcmovne
lods
mov
insb
mov
popa
sbb
adc
pop
stos
das
pop
movsl
cmc
sub
arpl
mov
in
mov
pop
jg
jge
pop
lods
dec
lea
mov
push
mov
lret
mov
cmp
fstps
xchg
loop
js
imul
mov
pop
mov
imul
cltd
push
jne
rcrl
cs
jmp
xchg
adc
adc
adc
dec
addr16
leave
jo
enter
adc
pop
sub
rcl
adc
and
mov
in
je
mov
shl
dec
jne
faddl
jne
xchg
cwtl
fwait
int3
sti
inc
pop
mov
aaa
adc
es
stos
or
sub
test
arpl
mov
sti
shl
fdivs
js
push
sbb
lahf
ret
jb
orl
sub
pop
popf
cmpl
sbbl
pop
push
adc
repz
sub
incl
pop
or
lock
mov
aad
jge
cmp
sub
mov
loop
adc
sbbb
nop
addr16
mov
test
insb
ljmp
or
push
inc
sub
je
addr16
cmp
fdivrs
xor
in
mov
mov
rorb
shr
sahf
adc
cmp
pushaw
stc
imul
sbb
sahf
jle
ret
incb
out
mov
lods
add
fdivrs
and
cmpl
and
dec
lock
mov
pop
or
fistl
and
insb
and
fnsave
and
or
repz
loopne
popf
cltd
xor
pop
sub
shll
sbb
push
mov
mov
xchg
iret
xor
xor
lods
out
in
sarb
xor
or
fdivs
ds
jg
push
jp
mov
sub
mov
bound
mov
out
sub
ja
loope
dec
pop
test
into
inc
pushf
sbb
das
sbb
fildl
popa
in
mov
dec
in
cmp
add
and
int3
or
jg
imul
sbb
cs
dec
mov
mov
push
jge
and
cmc
push
je
mov
adc
outsb
xchg
jo
shrb
mov
xor
mov
scas
popa
lcall
repz
mov
imull
cwtl
mov
icebp
push
lock
out
and
lods
js
cmp
lcall
aad
and
hlt
xchg
dec
push
pop
cli
ja
mov
and
shll
imul
ds
lretw
pop
lods
pop
pusha
jg
inc
push
jno
insl
inc
xlat
loopne
add
push
mov
mov
scas
push
dec
stos
or
roll
fwait
pop
or
scas
sbb
pusha
pop
add
stos
sahf
notl
out
stos
je
cmpsl
cmp
js
fsub
in
mov
cmpsl
pop
push
inc
add
and
fiadds
adc
aad
loope
out
add
stos
add
push
je
enter
lock
jmp
mov
or
xchg
inc
lea
jle
adc
and
jbe
into
cmpb
sub
and
ds
mov
clc
pop
xor
fs
arpl
ret
xor
lahf
sahf
xor
cmc
fstpl
outsb
lret
mov
mov
mov
ss
inc
les
jb
cmp
sahf
fdivr
fs
pop
incl
inc
jp
and
out
test
jg
or
icebp
sbb
push
jnp
in
sbb
push
xchg
insl
sti
scas
imul
cmp
pop
sbb
mov
adc
sbb
imul
lret
sahf
adc
mov
and
sub
cmp
mov
inc
outsl
push
sub
inc
inc
mov
fwait
sub
mov
or
cld
sbb
jge
mov
fwait
mov
inc
test
ljmp
stc
pop
lcall
enter
sub
je
fwait
cmp
cmp
xchg
fsubr
sub
ret
dec
test
imul
fidivrs
add
cs
add
push
std
xchg
jbe
push
xor
sbb
sub
mov
testl
cmc
push
mov
cltd
addr16
lret
sbb
xor
inc
inc
cmp
mov
in
in
jo
popf
jge
mov
push
pop
add
rorb
push
inc
lock
xchg
mov
or
jb
std
cs
add
ljmp
lods
xchg
dec
and
je
mov
or
push
addb
sbb
out
push
push
pop
dec
hlt
insl
mov
pop
mov
mov
shll
aaa
ljmp
test
mov
das
psadbw
rclb
inc
js
mov
jnp
mov
add
mov
jb
jbe
outsl
lahf
add
push
sbb
mov
idiv
rorl
arpl
repnz
testl
sbb
mov
insl
shll
imul
imull
fisttpl
jae
xchg
sub
or
sti
push
push
inc
mov
push
lock
jmp
push
jbe
pop
xchg
pop
lcall
cmpsl
dec
mov
addr16
lods
jg
sub
mov
jl
cld
setnp
xchg
je
xchg
fidivl
imul
not
jge
sub
fnstenv
push
pushf
sbb
shl
mov
into
adc
xchg
les
adc
cmp
jl
xor
cltd
pushf
jbe
shll
ficompl
jbe
mov
jmp
icebp
ljmp
insb
dec
loopne
movsb
sbbl
sub
ds
push
fisubl
je
mov
jns
mov
out
xchg
subl
fmul
lods
inc
test
pop
lret
jmp
cmp
pop
lods
iret
xor
ret
inc
bound
and
das
mov
dec
daa
push
sbb
aas
add
or
dec
push
sbb
push
sub
adc
and
mov
mov
mov
add
movsl
jl
dec
insl
or
push
xchg
xor
aad
and
push
jne
adc
ss
dec
iret
in
or
frstor
mov
xor
and
jmp
pop
scas
mov
sub
dec
mov
cltd
jae
scas
sbb
and
mov
inc
xor
ret
mov
cld
or
push
xchg
xchg
into
or
dec
pop
dec
xor
in
mov
pusha
pop
lret
cmpsb
adc
popa
push
xor
lods
fidivs
pop
out
jle
add
test
xor
push
and
push
push
mov
out
arpl
adcl
fildll
dec
jmp
dec
mov
push
push
inc
pop
lock
xchg
or
and
lret
je
leave
cmp
and
mov
push
mov
cmp
inc
nop
mov
cltd
fbld
jecxz
xchg
dec
mov
mov
mov
sbb
sbb
sub
lods
push
adc
int3
jp
imulb
cmp
add
jl
adc
das
call
out
dec
insl
jbe
cmpl
xor
xchg
mov
push
and
mov
inc
scas
aam
inc
mov
pop
sbb
into
xchg
jmp
fldenv
add
lahf
dec
fdivrl
cmp
dec
sub
movsl
lea
inc
mov
adc
mov
or
push
pushf
xor
or
sbb
loop
xor
xchg
cwtl
mov
sub
hlt
jg
sub
xor
movsl
xor
sub
sub
dec
push
jbe
sahf
fdivl
and
xchg
aaa
adc
je
and
mov
push
cwtl
leave
ss
outsb
sub
rclb
loope
lret
pop
sub
sbb
popa
mov
aas
jbe
xor
sbb
pushf
sarl
dec
push
or
xchg
loop
data16
cmp
lahf
adc
loope
fdivl
sahf
lea
bound
and
scas
mov
adc
outsl
roll
xchg
push
bound
aad
xchg
dec
lcall
ret
cmp
mov
inc
es
xchg
jnp
loopne
or
or
mov
jmp
xchg
dec
mov
jne
mov
cmp
test
into
pusha
js
dec
push
xchg
cmc
jae
out
lahf
rcrl
movsb
out
or
inc
and
push
lods
movsl
push
sbb
cmp
ljmp
mov
lea
cltd
inc
xchg
insl
nop
mov
rclb
int
in
daa
loope
cmp
ljmp
and
repz
pop
xor
add
cwtl
jo
mov
sbbl
enter
cmp
push
test
sub
sub
shll
sarb
jmp
test
popa
and
adc
fistps
jg
mov
push
xchg
and
pushl
orb
dec
mov
scas
lock
xchg
lock
inc
iret
test
lea
and
enter
xor
mov
scas
and
iret
or
pop
mov
cmpsb
and
fs
addl
mov
push
mov
push
fstl
sub
loop
cmpsl
sti
in
fwait
jl
lcall
fidivrs
sub
cli
sub
sbb
xchg
pop
repz
or
enter
hlt
hlt
clc
mov
and
loopne
repz
loopne
push
push
leave
adc
or
ja
bound
pop
cld
shlb
loope
je
test
add
cmp
out
jno
pop
fcompl
scas
pop
lds
test
xor
push
sbb
jmp
icebp
aam
mov
gs
or
sbb
jnp
cmpsb
gs
aas
shll
pop
repnz
in
push
pop
pop
pop
inc
aam
pop
shrb
xor
addr16
dec
and
mov
jmp
inc
cld
cmp
lods
std
and
cli
sub
push
cmp
inc
test
ret
cmc
aas
nop
inc
outsl
loop
jo
rorl
imul
negb
xor
mov
stos
and
mov
cmp
push
mov
popa
clc
inc
or
sub
sbb
mov
mov
repnz
mov
xor
das
test
sbb
xchg
cmp
cmpsb
popa
jge
cmp
sub
out
mov
repz
data16
pop
mov
lret
mov
cmp
div
inc
adc
mov
aas
xor
das
rorl
cld
xchg
inc
mov
cmp
lock
into
dec
mov
fs
cmp
fnstenv
shll
inc
ret
lret
mov
sbb
sub
inc
jns
mov
icebp
movsb
xor
nop
daa
dec
shll
outsb
cmpsb
out
mov
push
outsb
mov
jbe
fimuls
repz
add
add
insl
and
out
mov
nopl
scas
lea
dec
mov
inc
les
mov
inc
mov
sub
mov
mov
xchg
mov
cmpsb
aaa
and
cmp
dec
mov
sbb
rcll
imul
pushf
movsl
stos
or
fs
fisubs
and
or
cmp
and
dec
push
mov
jne
sti
imul
sub
imul
xorb
out
sbb
or
cltd
jnp
shlb
xor
ja
popf
mov
call
pop
sbb
pop
jnp
inc
in
enter
enter
jns
mov
xchg
inc
sub
into
inc
jb
loopne
dec
orb
adc
cwtl
mov
mov
pop
pop
cmp
and
outsl
popf
aas
pushf
pop
mov
xchg
xchg
adc
adc
call
push
ja
adcl
rorb
stc
add
lret
and
mov
lea
int3
test
inc
mov
xor
aam
jecxz
fstl
loope
push
shl
fcomi
dec
or
xor
jecxz
xor
push
xor
push
aam
mov
test
repnz
mov
push
test
stos
les
icebp
mov
or
cltd
ljmp
jb
inc
lret
adc
nop
dec
jae
xchg
out
xchg
mov
dec
cmp
fsts
jmp
mov
ss
imul
sub
int3
nop
mov
jbe
add
mov
in
xlat
jnp
inc
loope
outsl
or
push
std
imul
push
mov
fdivr
aad
sub
or
sti
shlb
fxtract
pop
pop
sbb
movsl
sub
movsl
jae
add
pushf
mov
repnz
nop
mov
jo
bound
xor
iret
add
cmp
xorb
pop
push
out
mov
mov
mov
mov
sti
fcomip
jle
xor
in
mov
cli
cmpsb
pushf
mov
xor
push
lahf
pop
add
fs
fidivs
xor
lahf
addl
jecxz
push
mov
adc
mov
pop
aas
sahf
pop
cmc
lahf
xlat
xor
cmp
mov
jg
or
push
jns
mov
lods
ja
leave
pop
shlb
outsb
popa
inc
xchg
xor
sub
xor
decb
sbb
sbbb
pop
pop
jge
cmp
jns
xchg
jge
jns
testl
rcrl
add
test
loopne
pop
cmp
cmp
sbb
inc
jno
ljmp
aas
fistl
cmp
mov
sahf
mov
scas
ds
cmp
popf
pop
dec
push
iret
mov
mov
outsb
iret
loop
jo
or
push
xor
aaa
pop
nop
jb
mov
dec
xor
cmp
aas
mov
add
mov
sub
repnz
cli
test
and
insb
les
mov
imul
cmp
xor
add
xor
pop
insl
shlb
pop
mov
push
pop
pop
or
mov
dec
pop
scas
lea
je
mov
xchg
cwtl
lea
andb
mov
jbe
aaa
in
jbe
and
push
sub
and
push
xchg
negb
lret
mov
cli
enter
adc
or
loop
daa
loope
mov
sti
xor
mov
jmp
mov
or
or
fildl
or
pop
xchg
addr16
loopne
mov
adcb
sbb
sub
cmpsb
jg
sub
xchg
push
ret
nop
cltd
lea
dec
pusha
push
in
dec
cmp
aad
push
aas
push
js
movb
jp
jmp
jl
lods
pushf
lret
pop
mov
int
pop
jle
inc
outsl
inc
jmp
pusha
mov
dec
xchg
cmpsl
and
fldt
aaa
mov
mov
inc
jne
hlt
xchg
cmp
sti
xchg
jl
add
sub
in
or
jmp
shr
mov
xchg
mov
inc
aas
xchg
aam
repz
leave
popa
or
aam
or
test
out
jbe
rcll
sub
lret
insl
cmp
aaa
shrl
imulb
push
lds
pop
fdivrl
xchg
add
sub
popf
pusha
xchg
je
lahf
imul
xor
mov
xchg
cmp
imul
lds
or
outsl
inc
mov
mov
popf
cmp
mov
xchg
movsl
mov
mov
mov
test
nop
sbb
rorl
add
xlat
xchg
ret
sbb
pmullw
mov
into
ja
aas
cmc
test
push
push
pop
push
inc
xchg
inc
repnz
shrb
sahf
testb
leave
or
out
jae
popf
jne
or
sub
mov
sub
sub
ret
sti
rol
sub
add
out
popl
add
sbb
jmp
mov
inc
xchg
fnstsw
or
push
jae
adc
mov
nop
jne
push
lahf
mov
arpl
add
insb
mov
jmp
lahf
fs
sub
cmc
repz
cmp
jecxz
mov
xchg
add
ds
push
or
jno
sarb
xor
push
sbb
adc
lret
ljmp
jns
push
repz
popa
adc
mov
mov
out
push
cmp
mov
mov
imulb
test
lds
mov
lock
sbbb
mov
es
add
pushf
popa
cmp
sub
mov
mov
hlt
aaa
addr16
or
fmuls
pop
call
out
mov
adc
sub
push
pmullw
mov
mov
inc
mov
cmpsl
in
jmp
mov
dec
cvtpi2ps
test
sbb
out
lds
pop
clc
adc
jne
jae
movsl
cmpsl
loopne
fsub
cmp
cmp
xor
popa
xchg
add
test
mov
ja
and
nop
outsl
mov
push
popl
aaa
push
pop
fldenv
bound
xchg
out
pop
pop
sbb
loopne
popf
out
or
push
jae
inc
scas
insb
jle
mov
push
fisubrl
push
outsb
xchg
mov
push
cmp
adc
push
int
into
fisubrl
push
aas
adc
loop
sub
and
ret
push
mov
add
xor
inc
ret
imul
cwtl
repz
dec
testb
adc
lret
es
sub
jle
aad
in
and
lret
add
popa
fldcw
js
xchg
cmp
loopne
sarb
data16
cmc
xor
pop
into
fsubrl
mov
push
rorb
lods
inc
shrb
pop
cmp
push
mov
aad
divb
pop
into
out
mov
jecxz
add
gs
mov
dec
stc
fcmovnu
jecxz
hlt
loopne
dec
iret
xor
movsl
arpl
or
lock
outsb
mov
fcoml
and
and
sti
inc
xor
clc
imull
and
mov
and
sbb
lea
xor
or
jnp
sbb
lcall
lds
sub
aaa
push
cld
scas
jge
fcmovnu
jge
add
movsb
pop
iret
inc
push
xchg
and
or
arpl
pop
dec
fisubrs
pop
sbb
cmp
repnz
out
xchg
mov
xchg
inc
inc
xorps
add
insl
xchg
addr16
pop
std
fcmovnb
xchg
xchg
xorl
rorb
sbbb
fbld
push
fstp
outsb
addl
lahf
sub
lock
jle
sahf
push
inc
lds
pop
ljmp
pop
das
ja
test
and
dec
hlt
sub
call
push
fisttpl
adc
ss
lahf
mov
stc
das
add
test
pop
push
cli
xor
xchg
mov
mov
pop
int
ret
mov
xchg
push
jne
ror
sbb
push
mov
cltd
sub
xor
mov
sub
xchg
inc
jns
pop
jecxz
push
lret
cmp
mov
cmc
sbb
aad
mov
nop
mov
and
std
jp
mov
std
nop
mov
loopne
dec
push
test
cmpsl
mov
adc
mov
mov
jne
imul
jl
xor
test
push
flds
mov
push
push
shlb
jmp
xor
pushf
pop
pop
gs
pop
sbb
sub
mov
xor
jle
add
mov
mov
push
lock
pop
pop
jl
cwtl
mov
mov
sbb
stos
andb
inc
test
incl
dec
in
jecxz
dec
andb
xchg
or
pushf
xchg
mov
sub
mov
test
mov
jmp
out
inc
sub
nop
out
add
sbb
inc
int3
test
jge
adc
xchg
lret
xor
and
ret
inc
or
aam
mov
lret
cli
push
or
call
or
inc
or
cltd
daa
cli
xchg
and
outsl
fisttps
and
movhps
and
jp
into
or
cmp
fldt
pop
mov
scas
and
movhlps
and
fdivrl
sbb
and
pop
roll
arpl
dec
lock
jbe
push
xchg
adc
xchg
fwait
adc
xor
stos
jns
jbe
push
inc
xor
jecxz
loopne
iret
adc
in
push
into
cmp
decl
pop
pop
mov
js
xor
xor
leave
out
pop
push
bound
push
ja
mov
cmp
lods
test
dec
pop
movsl
mov
xchg
xor
std
orl
push
and
mov
xor
jg
jo
out
adc
push
insb
mov
push
cwtl
mov
push
int
fsts
mov
inc
inc
notb
cwtl
aas
insb
or
in
sub
mov
sti
test
hlt
add
pop
lret
jb
popf
imul
cmp
pop
outsl
dec
or
js
mov
jnp
sbbb
loopne
lods
xor
cli
repnz
adc
imul
fs
fcmovne
psadbw
pop
fs
int3
lret
and
cmpsb
out
inc
aam
dec
je
mov
push
push
push
sbb
xchg
jo
sbb
out
ljmp
lods
and
lret
pop
aad
addb
dec
mov
xchg
imul
mov
faddl
xor
repnz
test
cmp
rorl
movsb
lds
add
push
adcl
jbe
rolb
xchg
or
or
out
nop
shll
xor
or
lret
mov
int
mov
cmp
leave
ficoml
lahf
in
dec
loop
or
data16
jl
mov
ss
add
idivl
data16
pop
add
sbb
je
jns
or
ds
fidivrl
sub
rcr
es
or
hlt
sahf
call
jnp
push
adc
or
rclb
dec
and
call
je
dec
mov
xchg
clc
lret
sub
movsl
xor
push
insl
pop
dec
lods
jge
mov
add
jb
push
loope
xchg
movsl
lcall
push
jecxz
test
test
movsb
or
xor
je
xor
adc
xchg
sbb
outsb
insl
leave
inc
mov
jo
sub
iret
icebp
mov
outsb
or
pop
test
inc
ds
popa
lods
dec
push
jne
or
cmp
mov
pop
cmp
xchg
das
ds
xchg
xorl
cmp
fiadds
mov
pop
nop
hlt
adc
inc
jecxz
mov
sub
movsl
cmp
adc
mov
or
mov
aad
fisttps
sub
lock
cld
push
sbb
rcr
xchg
mul
rclb
lret
cmp
scas
leave
lods
adc
add
out
mov
push
arpl
pusha
adc
sbb
pop
sub
push
je
pop
jbe
push
xor
pop
cmpb
rcrb
lods
cs
jmp
jge
pop
stos
aaa
dec
ret
jne
xor
pop
iret
lock
shlb
push
xchg
inc
xor
jne
add
call
cmp
into
jp
data16
xchg
imul
xchg
scas
ret
fcmovnu
out
into
mov
je
repnz
gs
rclb
pop
and
cwtl
inc
cwtl
cmp
cltd
xor
add
in
push
in
sbb
and
test
in
not
pushf
movsl
pop
add
loope
lret
mov
mov
hlt
adc
and
cmp
pushf
pop
push
lea
mov
sub
push
enter
xchg
lret
sub
pop
rcrl
lea
pushf
push
and
shrb
mov
cmp
fcmove
inc
call
pop
jl
mov
pop
xlat
pop
adc
mov
lret
push
inc
mov
sbb
nopl
jp
movsl
push
cld
sti
int3
adc
sbbl
mov
sbb
sbb
test
mov
pop
cld
out
push
jb
push
stc
daa
fcmovb
mov
xor
in
ss
inc
xor
mov
scas
sbb
sub
push
xor
jmp
cmpl
mov
es
mov
pushf
pop
addr16
scas
mov
xchg
movsl
pop
out
rcl
xchg
inc
mov
mov
js
iret
dec
cmc
jno
cs
inc
dec
pop
popf
jnp
mov
xor
pop
push
outsb
mov
xchg
sub
adc
mov
cmpsb
sarb
xchg
idivl
mov
push
and
dec
mov
jo
insl
pop
xor
push
push
cmp
xchg
cli
or
in
mov
mov
xorl
xchg
xchg
push
or
lret
sbb
inc
pop
pop
pushf
fs
mov
aas
ds
ret
pop
xor
shll
shr
dec
cmp
xchg
insb
fucomip
sti
push
fldenv
jns
push
add
iret
into
les
mov
insl
and
mov
dec
decb
flds
sub
pushf
mov
and
push
ds
inc
fisttpll
test
leave
adc
xor
xlat
test
mov
mov
or
in
pop
mov
les
jmp
cmc
out
bound
outsl
rclb
rcl
and
lcall
add
popf
pop
fistpl
xlat
xor
adc
out
fdivp
cmp
xlat
sbb
rcl
pop
pop
mov
and
cmp
adc
sahf
mov
fwait
mov
xchg
push
push
dec
fnsave
pusha
mov
or
jo
mov
cmp
sub
cmpsl
push
jo
mov
xchg
inc
repz
scas
lea
push
lock
or
inc
aas
mov
in
stos
loop
cmp
mov
inc
xchg
sub
push
out
scas
movsb
adc
mov
faddl
ss
std
mov
fiaddl
out
mov
and
lret
aam
add
push
mov
orl
repz
mov
out
aaa
adc
clc
addl
les
adcl
fistl
xchg
mov
dec
lcall
xchg
ljmp
sub
mov
xchg
xchg
jl
enter
pop
sbb
lcall
sub
or
jge
movsb
jno
lea
fmuls
mov
cmp
xchg
jmp
xchg
dec
cld
jge
fisubrs
ret
cmc
iret
mov
icebp
sbbb
mov
pop
mov
int
mov
dec
out
negb
leave
add
push
lea
notl
fdivl
jl
jl
cmc
fstl
mov
xor
jns
out
mov
mov
lret
andl
subb
mov
lret
std
push
mov
sbbl
adc
ja
hlt
xchg
test
aas
add
and
lahf
rcl
test
fiaddl
push
out
or
ja
xchg
jmp
ret
and
movsl
dec
push
fs
mov
push
lods
add
push
int3
imul
dec
popf
push
push
fwait
xchg
xchg
sbb
das
or
and
call
and
dec
andl
pop
mov
dec
roll
add
dec
push
inc
pop
and
adc
xchg
mov
mov
addr16
sbb
out
xlat
aaa
xchg
aam
xchg
flds
cs
imulb
das
out
xorl
add
and
lret
aad
jg
fcomps
inc
pop
mov
dec
sarl
mov
cltd
jae
fsts
mov
aam
lods
test
js
arpl
mov
mov
jns
inc
inc
testl
sarb
mov
sbb
and
loop
adc
movsb
cld
push
stos
mov
int3
sbb
push
sbb
in
pop
icebp
movsl
les
cld
addr16
aas
dec
adc
jb
mov
lahf
sub
sbb
stc
movsb
or
out
repnz
push
popf
xchg
xchg
jle
sbb
mov
inc
fisubs
ss
mov
xlat
push
cmpsl
pop
sub
lds
scas
sbb
mov
inc
jne
flds
jp
or
sub
mov
subps
ror
jge
pop
mov
and
ds
inc
repnz
pop
adc
add
add
jb
mov
int3
pushf
idivb
bound
aaa
lret
mov
or
in
push
mov
sub
push
sbbb
mov
xor
in
push
dec
mov
dec
sahf
lds
shl
fldcw
mov
js
fisubrs
sbb
jg
mov
push
outsb
cmc
xchg
push
adc
out
push
mov
pop
es
or
and
jle
in
fwait
icebp
mov
dec
push
mov
inc
lods
pop
in
cmp
mov
popfw
mov
xchg
fiaddl
jmp
movsb
iret
cltd
sti
xor
push
adc
insl
mov
adc
sub
push
adc
jge
jne
jmp
sbb
push
pop
ret
cmp
call
ret
out
insb
mov
xor
call
xchg
mov
mov
testl
push
fsqrt
adc
xlat
popa
imul
mov
pop
fistpl
out
jge
js
cmp
mov
roll
jge
sti
arpl
iret
jmp
lds
push
inc
push
mov
bound
das
mov
decl
mov
cwtl
outsl
pop
mov
jl
mov
or
push
bound
add
cmpsb
pop
icebp
stc
jle
fucomp
and
adc
data16
pushf
orl
hlt
ffreep
mov
aam
lock
scas
add
inc
lods
dec
adc
mov
and
or
sub
xchg
out
add
cld
pop
das
lret
loope
inc
cmp
ret
mov
subl
or
pop
popl
and
arpl
dec
sahf
add
mov
push
mov
jo
cmpsl
pop
sti
mov
pop
pop
mov
dec
mov
xchg
sub
cmp
cli
jne
or
cmp
or
pushf
ret
bound
push
inc
inc
push
pop
imul
fwait
fs
push
xorl
ljmp
or
dec
call
loopne
fisubrl
lahf
and
daa
bnd
out
mov
adc
push
push
das
pop
mov
mov
repz
and
push
add
push
sahf
xor
cmp
add
stos
xchg
pop
stc
and
sub
pop
and
sbb
jp
jb
fsubrl
clc
adc
add
push
popa
test
test
adc
dec
xor
inc
stc
cld
sbb
inc
aad
push
lods
add
or
pop
cltd
test
aam
mov
mov
lret
sub
or
mov
dec
fnsave
sub
mov
test
daa
adc
testw
cwtl
mov
stc
inc
pop
xor
inc
stc
lea
mov
pop
jle
lcall
cmp
dec
mov
push
in
icebp
xchg
test
jle
cmpsb
mov
sbb
xor
dec
xchg
jg
push
dec
jecxz
pop
mov
bnd
dec
cmp
dec
xchg
or
add
cmp
mov
jne
ror
sbb
dec
cmp
adcl
inc
or
and
pop
dec
or
xor
adc
adc
push
and
sub
fs
mov
nop
aas
fs
xchg
cmc
adc
xchg
xchg
sub
dec
pop
and
call
mov
push
inc
mov
push
daa
repnz
sub
not
jle
arpl
loopne
add
out
mov
sahf
pushf
mov
movsl
mov
pop
gs
push
mov
sahf
movb
lret
decl
push
mov
sbb
mov
jae
in
dec
repz
shr
xchg
or
or
into
outsb
or
jecxz
jle
mov
dec
dec
pop
pop
cmp
cli
inc
mov
adc
adc
outsl
out
and
notl
aas
add
imul
stos
divl
cwtl
pop
punpckhdq
adc
iret
jnp
lock
push
stos
xor
inc
out
out
add
sub
nop
sbb
pop
mov
nop
scas
jnp
xchg
in
push
gs
lods
and
ror
push
adc
clc
xlat
push
jge
inc
mov
push
stos
into
loopne
sbb
xchg
sbb
dec
lock
add
in
mov
dec
push
mov
or
sub
cmpsl
cmp
jbe
xchg
movsl
pop
jbe
nop
idivb
test
pop
ret
fistpll
out
jmp
stos
lret
daa
mov
push
sub
adcb
gs
iret
jae
jecxz
dec
mov
cmpsl
movsl
mov
test
insl
push
xor
xor
mov
and
test
lods
and
addr16
push
xchg
movsl
pushf
dec
dec
dec
loopne
sbb
fbld
rcl
pop
jmp
fadds
fwait
jne
jmp
push
je
add
insl
rorb
aas
jo
fmul
cmp
add
or
or
test
adc
nop
out
push
out
mov
dec
mov
or
lahf
xor
sbb
inc
adc
pop
mov
add
pop
pushf
cli
mov
cli
lret
dec
lds
bound
xor
ret
sahf
pop
add
hlt
adc
out
dec
jl
imul
ss
fdiv
pop
adc
sarb
scas
ss
loopew
orw
fldl
dec
push
dec
fstpt
imul
or
shll
xchg
sbb
push
xor
outsb
sub
icebp
leave
mov
outsb
pusha
push
insb
aas
adc
xchg
divl
bound
loope
add
push
test
jge
out
or
lahf
out
mov
stos
test
mov
fmuls
add
and
jmp
jns
add
xchg
cmp
xor
test
shll
xchg
inc
sbb
lahf
shlb
push
shrl
xchg
fistpll
popf
cmp
push
hlt
pop
adc
incl
pop
or
or
dec
rorb
sti
fbstp
ret
or
push
pop
sbb
jecxz
mov
xlat
or
lods
sbb
ret
fsubrs
dec
ds
sub
rclb
xchg
cs
je
sub
lea
ret
aad
sbb
cmp
pop
jg
ds
iret
pop
into
mov
dec
sarb
add
clc
mov
inc
gs
cmpl
xorb
and
scas
in
inc
push
jb
add
dec
inc
pop
dec
mov
cmp
jecxz
movsl
xlat
rclb
sarb
mov
in
out
push
fcmovb
in
sbb
ror
xchg
mov
xchg
test
imul
jle
mov
outsb
jmp
pusha
filds
inc
mov
shrb
rol
jle
or
outsb
outsl
cmpsb
aam
xchg
xlat
jmp
fisubrl
bound
jbe
js
jno
stos
repz
inc
dec
nop
dec
adc
xchg
dec
adc
push
lcall
iret
and
test
add
testb
add
cmpsl
fs
sarb
lods
aas
arpl
adc
adc
mov
sub
lock
push
or
cmpb
lret
xchg
xlat
repnz
out
fsubl
sbb
lahf
dec
and
xchg
fs
aam
mov
lock
xor
or
daa
mov
adcb
lcall
add
cmp
setns
jge
jge
in
fdivrs
mov
sub
pop
jge
cmp
jae
adc
pop
je
loope
sub
cwtl
xorl
test
push
dec
or
sub
in
pop
gs
cld
test
mov
adc
fbld
mov
imul
loopne
ret
dec
mov
cmp
ds
pop
sbb
es
sub
pop
lock
lcall
lcall
orb
or
add
mov
je
push
sbb
inc
mov
js
bound
sarl
push
daa
movsb
xchg
push
add
out
shlb
adc
int
fisttpll
xor
mov
nop
push
mov
repz
adc
loope
push
insl
sub
repz
xchg
pop
sbb
cwtl
daa
lea
sbb
pushf
mov
cmp
ja
hlt
and
addr16
js
add
fcomp
mov
sbb
cld
jecxz
outsb
or
aas
or
movsbl
fimuls
cmp
xor
sbb
icebp
test
sub
movsb
fcoms
ja
or
lcall
loope
xchg
dec
fucomip
jmp
aad
adc
insl
lret
pop
dec
repnz
mov
fsubp
lods
aad
cmp
pop
mov
repnz
mov
sub
int
mov
in
push
ljmp
fcoml
test
dec
das
rol
arpl
std
loope
fstpt
add
imul
xor
push
or
cmp
mov
shl
cmp
xor
pop
pop
dec
sbb
ja
hlt
movsl
je
push
outsb
aas
inc
loopne
js
in
mov
mov
push
repz
mov
stc
lcall
lcall
aam
out
xor
andw
dec
push
adc
ficompl
cmpsb
cmp
jb
ja
aam
jb
imul
sarb
mov
imul
pop
lret
jecxz
ret
push
mov
iret
push
jg
cmp
fnstsw
adc
pusha
jge
xchg
jp
sub
fstl
int3
fwait
shll
js
pop
push
pop
in
mov
data16
fiadds
out
shlb
std
fdivr
cmpsb
gs
cmp
nop
ret
jbe
xchg
mov
movsl
pop
mov
pushl
push
scas
outsl
fnstenv
sub
cli
and
add
sub
call
arpl
test
inc
adc
loope
jo
xor
adc
xlat
pop
xchg
popa
push
push
adc
sahf
out
sub
xlat
in
jge
or
inc
nop
push
xchg
mov
and
xor
dec
add
sbb
daa
push
icebp
cmp
andb
lock
adc
adc
fidivrs
addb
mov
inc
inc
cmp
fs
in
shll
sbbb
pop
sub
out
xor
adcb
pop
dec
bound
pop
inc
push
mov
sub
inc
outsb
xor
stos
int3
xorb
jl
into
ja
mov
cmp
mov
pop
rcrl
jmp
pusha
jno
push
int3
jle
outsb
jnp
lcall
cmp
fwait
inc
pop
sbb
in
hlt
mov
mov
add
or
dec
xor
fwait
hlt
push
insl
dec
lock
sbb
sbb
or
jno
push
xchg
lret
insl
jp
adc
test
and
mov
xchg
arpl
test
push
mov
outsl
mov
cs
push
ss
mov
cld
dec
mov
sub
jno
out
sbb
xchg
aad
lds
cli
movsb
jge
aam
pop
stos
outsb
jne
loop
lret
stos
push
and
popa
icebp
cs
mov
dec
mov
and
mov
adc
xchg
incb
das
or
out
and
popf
mov
and
es
mov
mov
aaa
add
mov
pop
xchg
stc
cmp
add
fisubs
xchg
and
popa
ret
js
mov
fdivrl
pop
popf
mov
scas
dec
pop
xlat
inc
mov
push
xchg
negl
inc
repnz
lahf
inc
mov
cmp
push
test
bnd
dec
ds
mov
push
adcl
cs
mov
lcall
jge
sahf
sbb
movsb
int3
pop
fnsave
adc
dec
ret
rcrb
add
scas
fld1
stos
add
cwtl
popf
scas
fwait
dec
cli
jl
pop
repz
xor
adc
cmp
mov
shl
jge
jnp
js
cld
xor
lods
adcl
sub
scas
xchg
out
ds
lea
jmp
push
or
call
pop
into
sub
shlb
mov
repnz
mov
aad
mov
mov
aas
xchg
jmp
pop
mov
inc
mov
sbb
mov
or
cli
lret
inc
jne
cmp
mov
adc
jmp
adcl
xchg
int
add
xchg
dec
mov
sub
mov
mov
xchg
aam
mov
jnp
divl
sub
popa
jns
lret
in
add
or
ss
leave
and
xor
aad
popa
xchg
js
test
mov
mov
lea
mov
sbbb
push
push
int3
jne
adc
xor
xor
pop
cmp
cs
fucomp
adcl
iret
dec
sub
mov
into
dec
stos
fdivr
int
rolb
test
xchg
aad
in
lods
ficompl
cwtl
mov
mov
icebp
push
jecxz
movsb
xor
in
out
pop
lods
call
sbb
or
inc
insb
lock
shll
add
inc
push
or
or
sar
adc
loopne
jb
cwtl
sub
popf
fldl
and
arpl
movsl
cmpsb
rcr
cmp
adc
cwtl
pop
inc
jg
inc
pop
sahf
sub
pop
ret
mov
sbb
rcll
je
es
xchg
add
sub
negl
adc
orl
cmpsl
and
push
pop
cmpsl
or
dec
mov
dec
pusha
enter
inc
mov
mov
mov
ret
std
inc
mov
inc
and
cmp
push
or
test
adc
nop
lret
dec
in
mov
dec
push
dec
repz
mov
xchg
je
inc
sbb
mull
inc
mov
movsl
stos
imul
insb
pop
aas
inc
cmp
sub
xor
scas
sub
lea
or
jae
sub
icebp
cmp
fstl
popf
jo
ficomps
push
out
push
inc
loop
xchg
mov
cmp
dec
mov
or
xor
dec
inc
jmp
bound
jns
lds
mov
int
adc
mov
mov
push
fwait
or
dec
outsb
test
or
stos
loope
repnz
aaa
cwtl
add
pop
std
repnz
rcll
jecxz
mov
and
mov
testl
dec
add
and
aam
fucom
cmp
and
sub
xor
test
jnp
andb
fsub
add
cmc
fstpt
sbb
or
imul
or
test
inc
out
dec
inc
cmp
in
jbe
iret
inc
mov
and
push
pusha
jo
mov
lahf
stos
jo
hlt
daa
mov
scas
ret
ret
and
adc
sub
shl
mov
ffree
es
mov
xor
sub
lret
xchg
jle
mov
cmpsl
and
mov
xchg
mov
xor
stc
jb
fcmovnb
jp
cli
cmc
adc
dec
push
jo
rcrb
sub
or
ret
addr16
dec
sub
leave
fstps
movsb
jns
xchg
mov
insb
xor
sarb
xchg
jno
mov
imul
or
xlat
sbb
jbe
and
lcall
ret
repz
jne
insl
mov
arpl
loope
data16
int
push
mov
lret
lods
inc
jge
mov
or
pop
push
pop
xchg
mov
loope
cmpsb
and
jl
sbb
xchg
js
lea
mov
and
fsubrl
leave
cwtl
pop
mov
shrl
iret
pop
jle
xchg
clc
fsubp
jl
out
cmp
xor
ret
lcall
mov
jns
xchg
movsb
dec
mov
scas
and
stc
out
sahf
fidivl
jl
push
push
insb
das
out
mov
nop
pop
test
fcompl
xchg
mov
and
cwtl
pop
movsb
push
clc
or
out
cs
aas
fptan
add
cltd
movsl
xchg
cmp
stos
js
fwait
cmp
outsb
cmc
fsubrl
mov
test
ds
nop
inc
clc
insb
into
scas
aad
outsl
fistpl
cli
jge
movsb
xchg
mov
test
pop
mov
scas
out
and
pop
xchg
xchg
lods
push
lods
popf
dec
push
loop
add
aam
or
lods
jg
js
push
cld
sahf
inc
inc
inc
add
gs
lock
inc
mov
sub
or
pop
je
jl
push
mov
adc
sbb
scas
pop
inc
sbb
bound
nop
push
mov
mov
movsl
int3
ljmp
out
call
in
xlat
mov
shr
outsb
lds
mov
scas
push
lods
jo
dec
sahf
xchg
call
sbb
lahf
andb
ja
movsb
scas
jmp
sub
gs
mov
ja
inc
out
bound
mov
cmc
pop
pusha
jo
fsubr
jbe
or
push
jl
xchg
aaa
pushf
pop
adc
sbb
push
lret
inc
out
pop
lahf
push
inc
pop
mov
mov
int
lods
sti
loop
mov
sub
std
rcll
out
pop
addr16
fnstcw
in
bound
and
aaa
sub
adc
and
jp
lcall
mov
ss
push
rcll
lods
jbe
cmp
lock
xchg
fildl
jnp
stc
jb
shll
mov
and
insl
inc
sub
jl
adc
lcall
jp,pn
cmp
lret
cmpsb
sub
cmp
cmp
sahf
inc
xchg
rorb
call
mov
ret
push
mov
pusha
stos
mov
daa
hlt
xor
xchg
mov
pop
sbb
imul
mov
test
aaa
test
push
test
and
inc
cs
push
and
arpl
cld
arpl
int
adc
jne
mov
inc
cmc
nop
xchg
and
aaa
sbbl
sub
into
xchg
arpl
mov
push
scas
movsb
ja
icebp
and
enter
push
insl
fwait
cltd
mov
push
and
cli
or
bound
pop
clc
push
rolb
pop
jo
xor
mov
sub
stc
lods
mov
xorb
push
pop
idivl
repz
add
lea
fbld
add
andb
lods
jns
or
imulb
insb
test
out
lcall
pop
mov
jl
jecxz
jb
rorb
int
lret
or
jle
push
fidivrs
mov
fisubl
leave
lret
jnp
fwait
push
orb
sbb
ljmp
inc
out
mov
cwtl
xor
or
cmp
addr16
and
cwtl
or
iret
fucomip
or
fidivrs
out
lods
test
or
push
dec
movsl
jl
push
lods
imul
popf
in
xchg
divb
in
dec
ret
push
jbe
add
dec
inc
mov
pop
ret
inc
sbb
outsl
xchg
pop
xor
pop
sub
xor
jle
push
sbb
xchg
sbb
inc
sbb
push
jns
adc
scas
repz
mov
stos
sar
mov
push
cwtl
dec
out
lret
push
jnp
jbe
push
jle
adc
mov
adc
jecxz
jb
dec
mov
dec
sub
cmp
dec
addr16
and
mov
or
lcall
sub
int
cmp
cmp
xor
or
test
shll
in
fstps
scas
into
xchg
out
push
aad
arpl
push
dec
sub
mov
push
lock
in
pusha
iret
icebp
pop
je
mov
stc
adc
xorb
mov
xchg
ret
xchg
add
ficoml
rolb
in
outsb
mov
fistpl
add
pusha
hlt
loopne
pop
inc
sbb
fwait
sub
lods
dec
and
lods
and
inc
sub
dec
test
lea
sahf
cwtl
stos
pop
push
in
in
and
rorb
jns
rcr
jb
fcmovb
enter
cmpsl
arpl
js
push
int
push
sub
pushf
outsl
ja
mov
popa
mull
scas
repnz
pop
faddl
sarb
shll
sbb
jbe
sbbl
mov
sbb
add
fs
nop
bound
loopne
xchg
inc
lods
mov
rolb
mov
fldcw
inc
dec
les
jmp
mov
push
into
aaa
xor
mov
sar
sub
test
scas
or
testl
imul
je
push
sarb
push
jnp
mov
pop
add
inc
push
sahf
adc
ret
gs
push
mov
sub
push
xchg
xor
popf
inc
jmp
mov
inc
jbe
cmp
jb
stos
cs
les
cs
cld
pop
sub
cmp
mov
sbb
jmp
cmc
jmp
dec
adc
out
cmp
cmp
jo
jp
mull
push
das
inc
cli
add
test
xorl
push
cmp
adc
lret
push
xchg
nop
xor
cld
cltd
jecxz
and
push
lret
pop
enter
inc
out
paddw
mov
sub
jl
inc
loop
sub
int3
loope
insl
sbb
add
call
push
add
movsb
arpl
push
sti
idiv
ret
push
mov
mov
pushf
imul
stos
pop
mov
rcrl
mov
popa
stc
push
das
pop
popf
sub
lds
sbb
aam
int
jns
lcall
ds
mov
and
ficompl
cltd
in
popa
in
test
xor
inc
rolb
ss
pop
xor
ljmp
in
add
jecxz
inc
ss
or
push
sarl
dec
loopne
sub
mov
popf
sbb
aaa
dec
cmp
stos
push
fcom
inc
mov
mov
test
sbb
shll
dec
nop
arpl
ret
outsb
imul
mov
inc
lret
mov
shll
ja
push
mov
mov
in
sbb
cli
mov
das
inc
mov
cli
mov
and
std
cmc
sbb
out
pop
mov
inc
lods
xor
insl
push
fs
pop
adc
repnz
or
das
xor
stos
gs
sahf
mov
andl
dec
or
divb
into
mov
adc
pop
push
out
pop
jge
push
dec
jg
adc
push
xchg
xor
jae
push
jle
outsl
xor
int
aas
xor
xchg
insl
cld
pop
push
inc
in
or
shrl
add
sti
daa
xor
dec
ljmp
sbb
mov
pop
xchg
enter
icebp
sub
aad
lds
cwtl
lea
movsl
lods
fs
loopne
outsb
mov
jae
dec
xlat
inc
jno
test
sbbb
pop
mov
ja
dec
daa
pop
inc
out
and
sub
testb
dec
mov
add
call
mov
mov
stos
xchg
in
inc
jge
loope
xchg
jl
jns
in
pop
mov
xchg
xchg
sbb
mov
sbb
js
ror
mov
xor
lret
jo
jp
testl
cmp
lret
insl
incl
hlt
je
jecxz
aas
or
push
je
ret
clc
inc
out
call
add
clc
push
imul
fsubrl
sub
pop
jmp
fcom
and
dec
cwtl
mov
mull
adc
in
mov
sbb
enter
push
push
lahf
mov
push
push
dec
push
std
in
inc
inc
pop
mov
js
pop
sub
mov
aas
movsl
cmc
into
pop
int
sub
int3
lock
sbb
ds
scas
push
hlt
jle
psubw
aaa
fwait
cmp
jge
incb
or
inc
aad
and
jnp
out
xchg
arpl
dec
push
inc
fdivr
xchg
pop
fwait
es
jo
ret
scas
cmp
ret
mov
xor
pop
in
fdiv
push
aaa
jb
or
in
pop
inc
js
insb
js
clc
data16
subb
sub
push
hlt
gs
dec
sbb
xchg
pop
jae
dec
pusha
sub
insb
jmp
paddw
pop
ja
test
aam
jl
lret
sub
scas
inc
cli
pop
fs
out
aaa
movsl
sub
addl
cwtl
rcl
mov
cld
in
jecxz
push
xchg
cmpsl
rcll
rcrb
rcrb
or
mov
test
jae
or
and
mov
sub
or
xchg
sub
lds
es
sub
lret
mov
lock
outsl
jo
adc
adc
cld
dec
sub
and
add
mov
jns
nop
add
adc
scas
lcall
loopne
xor
pop
loop
ljmp
push
call
lods
add
addl
fisttpl
subl
pop
scas
sbb
repnz
sbb
mov
mov
pop
jno
pop
dec
push
call
lret
jecxz
xchg
inc
mov
lahf
outsb
loop
loop
aaa
sub
pop
scas
dec
arpl
or
pop
mov
data16
cmpl
dec
sbb
inc
stos
dec
xor
aad
fdivrs
sbb
jmp
xorb
xor
xor
cltd
push
fdivl
cmpsl
ss
xor
negb
or
fsubp
push
sarb
cmp
scas
mov
and
pushfw
jno
adc
cmp
leave
jl
call
outsl
aaa
mov
cli
add
cmp
and
cmp
push
xchg
inc
mov
imulb
jp
mov
pop
or
out
xorl
sarl
lcall
or
jg
insl
popf
push
cmp
loope
stc
push
loopne
xchg
enter
enter
jmp
mov
push
jge
add
push
js
inc
or
adc
sub
mov
or
sbb
dec
cwtl
std
xchg
ljmp
xchg
or
loop
andl
es
sbbl
xchg
ljmp
test
test
xor
rcll
mov
leave
push
mov
inc
pop
xor
inc
sub
shrb
mov
inc
sbb
or
jno
sub
dec
addb
jno
cmp
jecxz
shl
jbe
xchg
popa
mov
out
pop
dec
punpckhbw
cmp
inc
push
divb
mov
scas
or
popa
aad
dec
fldt
adc
ljmp
jnp
pop
lds
loope
jl
testb
push
sub
add
je
sbb
xor
fmull
fstps
and
jge
les
adc
or
mov
rcrl
cmc
or
inc
mov
cmp
sti
add
sub
dec
ret
add
push
jno
mov
sti
ds
xor
and
loope
mov
pop
sub
xor
mov
push
mov
adc
loope
cmpsb
mov
addr16
sbb
test
and
mov
and
mov
jecxz
popa
hlt
out
push
int
xlat
jns
outsl
lock
mov
lock
stos
icebp
in
inc
sbb
cmp
inc
sbb
dec
push
arpl
iret
or
push
and
lcall
dec
push
cld
clc
clc
push
jbe
pop
lea
dec
mov
mov
pop
or
nop
adc
xchg
test
mov
and
idivb
adc
pop
jl
mov
stc
arpl
cmpsb
aaa
adc
int3
imul
jg
mov
push
cmp
fisubs
scas
nop
pop
lret
add
stc
cmc
sbb
mov
mov
cmpsb
scas
outsl
cmp
jle
mov
test
mov
pop
scas
in
enter
jecxz
xlat
mov
and
fildl
xchg
mov
inc
mov
add
jge
pop
lret
add
push
add
mov
cmp
add
js
fcompl
mov
test
mov
ja
pushf
stc
andl
fsts
dec
sub
ret
enter
mov
push
cmp
push
xchg
jecxz
in
fildl
mov
movsl
stos
xor
inc
add
cmpsl
ss
inc
cmc
loop
test
add
std
jns
popf
scas
das
sbb
idiv
mov
popl
pop
dec
rcrl
dec
mov
fmuls
dec
push
pushf
scas
inc
pop
fwait
cmp
inc
mov
mov
inc
movsb
xor
sar
sti
xor
and
lahf
xor
bound
stc
inc
mov
sarb
cs
pop
xchg
addl
in
test
and
mov
sub
das
jle
mov
mov
sub
jmp
cli
xor
imul
or
xchg
dec
insl
inc
jge
into
clc
cmpsl
fimuls
out
jge
hlt
clc
add
sub
pop
fdivs
push
insl
sub
sub
push
mov
xor
push
sbb
push
in
dec
cmc
xor
std
cmp
cld
cli
adc
jp
stos
mov
xor
jle
xlat
fldcw
jbe
cmc
lock
mov
xchg
daa
ret
lret
and
arpl
and
stos
fcmovb
lret
inc
inc
push
cwtl
je
enter
mov
or
ret
scas
xchg
ljmp
inc
dec
out
sub
daa
aas
and
fisubs
andl
lret
int3
dec
stc
movsb
dec
aam
testl
ficompl
sub
repnz
jmp
ret
dec
imul
lods
fisttpll
ja
add
or
and
xchg
je
stos
mov
test
call
dec
stc
cmpsl
jp
dec
shrl
xlat
loope
lods
sbb
imul
ss
jae
sbb
loop
popa
xor
sbb
gs
push
pop
sub
push
jecxz
jp
mov
xor
and
les
sbb
xchg
mov
push
clc
cmp
fisubrl
lods
out
ficoms
mov
iret
clc
lds
aas
gs
adc
cmp
mov
push
test
sahf
loopne
loopne
das
test
mov
in
mov
cmp
adc
or
fwait
cli
ds
int
pop
in
iret
or
dec
pop
movsl
jns
jecxz
mov
jp
js
out
cmp
fstl
int
pop
push
cmpsl
pop
fwait
repz
and
xlat
jecxz
cmp
pop
sub
cmp
push
faddl
in
nop
mov
xchg
sbb
out
fidivrl
lea
repnz
add
aaa
clc
push
out
test
push
insl
pop
or
and
dec
add
jnp
sub
jmp
fcomp
scas
inc
cmp
loope
mov
je
push
fldl
inc
loope
dec
and
or
das
dec
cmc
pop
mov
test
push
inc
push
jnp
sub
popf
cwtl
andl
sbb
sbb
divl
pusha
pop
push
and
test
gs
push
push
lret
mov
mov
adc
mov
xor
xchg
ss
or
pop
mov
test
mov
or
mov
insb
adc
push
jbe
pop
pop
or
push
lds
aam
xor
add
jl
cmp
push
mov
hlt
xchg
test
lock
ljmp
adc
mov
xorb
scas
mov
ret
inc
cld
mov
jno
lcall
sarb
test
mov
dec
dec
and
test
jle
sub
ret
mov
xor
inc
nop
xchg
loop
int
hlt
insb
cmp
daa
in
outsb
jl,pn
lcall
in
add
int
mov
cmp
xchg
mov
pop
xchg
fidivl
hlt
push
jo
sub
hlt
std
jne
lahf
jmp
daa
movsb
lds
lock
mov
mov
aas
mov
inc
addr16
cltd
pop
or
filds
out
and
fs
scas
fnsave
fldcw
out
jg
fidivl
out
nop
icebp
sbb
lods
test
add
shll
ffreep
outsl
push
fmuls
js
ljmp
test
sahf
jns
sub
js
popf
mov
or
cmpsl
mov
out
pop
and
mov
mov
dec
mov
jnp,pt
jbe
push
int3
je
daa
insl
xor
inc
push
sub
pop
clc
scas
loopne
call
test
jmp
movsb
sti
add
lret
and
out
pop
popf
adc
xchg
sub
or
xor
mov
xchg
add
inc
cmp
ret
movsl
and
lret
cmp
into
or
fsubrl
int
sbbl
lods
ret
clc
ljmp
int3
scas
stc
popf
rcl
lock
and
sbb
add
push
add
inc
adc
jle
mov
imul
mov
jecxz
or
xlat
outsl
movsl
gs
mov
out
nop
out
insb
outsl
lods
imul
xlat
shrb
adc
xor
decb
cmp
rcr
xchg
dec
iret
xor
sub
sbb
js
les
scas
scas
ss
scas
adc
daa
les
or
outsl
lahf
xchg
xor
stos
inc
and
pop
cmp
lcall
in
in
mov
leave
cmp
std
stos
adc
loop
and
xor
cmp
dec
bound
mov
xlat
popf
std
out
inc
call
rorl
fs
add
cld
cmc
jne
mov
adcb
jp
fisubl
stc
and
lret
dec
adc
hlt
lock
popa
fisubrl
and
test
aad
mov
fadds
lods
test
dec
leave
and
cwtl
jmp
lret
and
push
jp
mov
dec
call
jae
imul
in
sub
jnp
push
xor
test
sbb
loope
or
cli
cmpsb
fstpt
lock
bound
mov
cmpsl
cwtl
xchg
outsl
dec
jb
lcall
dec
sahf
push
xchg
lahf
fsubr
inc
imul
lods
adc
pop
fcmovb
and
fistps
addl
gs
je
fimull
les
shr
fisubl
pop
push
and
inc
lds
orl
loopne
arpl
xchg
shll
fsubl
lds
dec
pop
fwait
push
adc
and
cmp
test
test
pusha
fbld
rcrl
ds
inc
cmc
stos
adcb
sub
subb
dec
pop
pop
sarl
and
cmpl
loope
cmp
mov
lea
push
push
ret
push
xchg
inc
test
inc
dec
adc
movsb
aam
icebp
jge
add
sub
sahf
imul
cmp
incl
pop
and
jmp
stc
jg
cltd
movsl
push
jb
push
inc
loop
negb
into
in
xor
cld
ret
jnp
mov
fnstcw
push
xchg
out
outsl
int3
cmp
push
cwtl
and
out
cli
cli
sti
inc
fsubrl
cmp
adc
repz
add
cmp
pop
mov
jg
and
xchg
sub
and
jb
jae
ljmp
pop
rclb
xchg
out
cwtl
cmpsl
pop
add
mov
xchg
gs
movsb
pop
loopne
push
push
sbb
jno
add
sarb
xor
inc
fdivs
sub
mov
cmp
insl
xor
jmp
js
xor
push
xor
mov
pop
xor
or
dec
dec
fnstcw
aad
fsts
test
xlat
sub
push
sti
out
or
incl
sarl
xchg
or
jnp
pop
loop,pn
xchg
dec
xchg
cli
push
cmp
inc
pop
nop
push
gs
or
xor
jp
scas
and
out
xchg
jge
xchg
add
cld
cmc
and
out
repz
das
or
add
add
fcomp
arpl
xlat
jnp
dec
clc
notb
pushf
mov
mov
outsb
pop
stos
cmp
pop
jns
xor
imul
imul
scas
mov
outsl
lods
or
mov
je
fmull
lds
mov
xor
cmc
push
mov
pop
les
xor
stc
or
divl
in
lcall
scas
and
imul
add
cwtl
hlt
mov
push
in
pop
stc
loope
js
xor
push
jg
mov
jb
ja
xchg
pop
sbb
imul
imul
xchg
mov
mulb
push
into
cld
shll
push
mov
and
cmp
pop
sub
cmp
xchg
sub
mov
inc
mov
push
inc
cmpsl
sahf
mov
add
in
into
xchg
add
adcb
jge
iret
inc
pop
call
mov
loopne
pop
test
test
jae
pop
mov
sbb
xchg
push
cmc
enter
add
js
push
ror
insl
scas
lods
and
shrl
jno
or
xor
xchg
lock
int
or
pop
daa
repz
pop
loopne
imul
jae
scas
cmp
add
hlt
or
leave
xchg
clc
push
sbb
sub
xchg
hlt
fidivrl
test
test
sbbl
int
or
aam
test
aad
mov
push
fildl
lds
faddl
das
lret
mov
das
cmp
cmp
arpl
sti
xor
xchg
dec
jle
or
push
test
dec
mov
xchg
cltd
dec
or
sti
push
adc
ss
ret
fstl
sub
bound
sub
daa
cmc
mov
popa
or
jns
or
testb
sub
mul
sbb
insl
stos
adc
mov
mov
das
clc
test
dec
or
sbb
adc
jo
adc
push
mov
mov
mov
push
sub
stos
dec
or
pusha
add
out
xchg
lahf
cmpsl
mov
push
leave
shll
pop
fdivr
lcall
loopew
loope
cmp
cltd
je
popf
lea
pushf
xchg
add
lcall
popa
call
add
push
cmpsb
push
mov
ret
popf
sbb
data16
aaa
lret
xchg
pop
and
mov
daa
cli
and
dec
or
jae
lret
jnp
jo
sahf
inc
inc
push
popf
jns
les
xchg
lods
movsb
out
ret
push
mov
lods
push
fdivrl
cmp
out
xchg
lret
jmp
inc
cld
sub
xchg
push
mov
call
pop
push
sbb
cwtl
out
aas
shll
jns
outsl
push
mov
xor
jge
pop
xchg
mov
mov
insb
call
sub
ret
xchg
stc
inc
out
jmp
mov
repnz
inc
or
loope
dec
sbb
and
push
pusha
in
mov
mov
ja
jnp
outsl
mov
int3
cmp
fisttpll
pusha
test
aam
ret
nop
inc
mov
dec
inc
pushf
test
pop
lcall
cmp
adc
aam
cmp
sub
adc
xor
data16
cmp
data16
jae
cwtl
cli
ljmp
pop
movsb
or
adc
mov
sub
push
pop
testl
cmp
out
stos
into
push
xchg
cld
mov
gs
cli
mov
aad
lahf
pop
gs
jo
xor
fistps
int
inc
repnz
and
ss
repz
test
in
sub
xor
jae
mov
add
mov
cmp
shll
test
jge
test
imul
mov
testb
sbbl
sub
and
insl
nop
pop
stos
je
ds
in
sbbl
mov
cmp
hlt
fnstenv
cmpsl
pop
clc
xchg
inc
outsb
pop
jmp
xchg
inc
shr
out
jmp
sbb
aad
adc
mov
add
dec
enter
jmp
sub
lock
or
ds
dec
and
jno
push
jecxz
popa
stos
or
adc
ss
ret
and
jno
adc
and
int
push
jo
sub
xchg
iret
daa
shlb
push
out
jb
mov
mov
lock
jmp
in
mov
or
inc
jecxz
pusha
popf
sbb
pop
mov
push
adc
cmp
dec
in
aas
and
cmc
xor
xor
fbld
lods
fwait
sub
inc
pop
pop
insl
mov
notl
xor
or
lcall
out
call
in
xor
add
sbb
in
push
mov
mov
jg
mov
cltd
into
pusha
popa
or
bound
insl
loop
sub
inc
mov
daa
sub
inc
xchg
or
std
push
mov
mov
movsb
jge
lcall
stc
repnz
faddl
jne
mov
add
ss
or
in
sti
add
pop
inc
clc
xchg
les
or
adc
andb
jle
or
das
ss
mov
jl
xor
in
movsl
jp
inc
xor
shll
jnp
inc
xchg
adc
xor
adc
loop
cmp
pop
in
dec
jg
imulb
adcl
sbb
scas
jle
call
and
xchg
dec
cltd
pop
inc
jae
imul
cmpsb
or
mov
inc
pop
push
out
mov
pop
inc
subl
mov
adcl
jbe
dec
repz
sbb
jmp
jno
insb
add
pop
mov
jge
push
adc
pop
fdivrl
pushf
stos
jge
in
adc
inc
pop
push
sub
fnstcw
mov
mov
push
inc
nop
gs
test
call
enter
adc
and
xchg
pop
or
leave
faddl
out
insl
mov
push
xchg
mov
push
lds
stc
lods
push
icebp
add
lods
mov
insb
cld
or
xchg
mov
push
jmp
adc
add
sbb
and
add
int3
jb
notb
and
and
lock
or
xchg
sbb
ja
ja
cmp
add
or
mov
or
lcall
or
imulb
test
cmp
stc
jge
jno
pop
fimull
add
fnstenv
adc
call
mov
sbb
inc
jp
mov
neg
out
sbb
cmc
xchg
es
dec
pop
xlat
inc
sub
std
jbe
rorl
mov
fstps
pop
mov
jle
jno
xchg
push
push
cwtl
imulb
out
jbe
sub
cmpsb
or
popa
out
jge
ss
cwtl
xchg
and
iret
outsb
mov
jmp
cmpsb
add
insb
movsb
xor
mov
mov
test
daa
sub
outsb
cs
add
or
inc
sub
repz
outsb
pusha
sub
in
cltd
lock
jl
lahf
xchg
inc
fs
sti
test
cli
jo
jle
jns
and
sbb
call
jmp
jnp
push
pushf
rcrb
adc
sbbl
iret
stos
sti
mov
mov
loope
dec
mov
and
scas
push
push
adc
or
movsb
mov
aam
int
xchg
add
loop
mov
add
dec
lock
out
push
ret
sti
cmp
cmp
dec
pop
mov
fisttpl
cmc
add
shl
xchg
dec
cwtl
shrb
pop
push
inc
push
and
ljmp
inc
in
fdivrs
mov
xchg
cmc
fdivrl
mov
cmp
insb
mov
cli
jecxz
jae
sbb
imul
hlt
xor
incb
mov
cmp
xor
test
aad
imul
dec
out
out
xor
inc
pop
jno
clc
jmp
lret
mov
movsb
out
aam
stos
push
mov
mov
mov
cmp
outsb
hlt
xchg
or
sub
rcr
or
popa
sbb
xchg
dec
mov
push
pop
scas
mov
test
push
mov
into
aam
cmp
stc
iret
adc
pop
loop
dec
lods
and
xor
xor
adc
sbb
dec
xchg
xorb
cmp
push
stc
pop
xor
xchg
lcall
jns
inc
adc
add
ds
pop
adc
rcrl
movl
pop
xor
pop
jb
dec
pushf
jnp
lret
sbb
push
leave
push
xchg
fs
xor
shll
adc
and
in
mov
pop
lods
xor
ret
daa
fnsave
dec
pop
jl
das
xchg
push
xor
mov
mov
mov
push
sub
popf
and
shll
int3
mov
scas
pop
jnp
fwait
or
movsl
jae
stc
sahf
dec
mov
lcall
je
jecxz
jne
mov
imul
pop
lcall
and
add
cmpsl
push
in
add
insb
sbb
inc
cmpsb
xchg
mov
shl
adc
xor
daa
or
pop
cmp
fisubrl
push
ret
jl
mov
cs
cmpsb
fstpt
mov
and
pop
hlt
push
fidivs
inc
sub
cmc
and
pop
xchg
adc
jns
xlat
cmp
stos
dec
adc
cmp
hlt
jae
pop
mov
les
rcll
outsb
idivl
dec
push
jmp
jo
lea
in
ss
int3
push
jle
add
cmp
aas
popa
aad
mov
or
ds
out
nop
leave
add
movl
or
shrb
jbe
sub
ljmp
mov
test
fwait
mov
lods
je
bound
stos
lds
arpl
insl
out
jne
daa
les
adc
xchg
fdivl
dec
pop
inc
jl
cmp
or
and
sub
dec
xor
ret
add
jl
xchg
adc
and
nop
sub
test
adc
jns
je
loope
xor
mov
cli
push
adc
das
test
test
cmpsl
imul
push
test
pushf
push
inc
jae
cs
in
int3
pop
xor
cmc
into
stos
mov
dec
popa
addl
rcrb
xchg
push
incb
inc
sub
inc
jbe
cmpsb
push
test
mov
icebp
out
mov
andl
ja
stos
in
ljmp
jne
sbb
punpckhwd
dec
bound
mov
sbb
mov
out
dec
or
sarb
pop
or
pop
jecxz
mov
in
sub
pop
hlt
xchg
popf
inc
push
ficoml
not
or
dec
xchg
or
mov
int3
andl
cmp
sub
push
pushf
mov
sqrtps
pop
mov
push
lea
adc
pusha
jbe
push
jmp
or
push
mov
mov
or
cld
inc
ds
mov
stc
insb
add
add
sbb
scas
fldcw
inc
and
sbb
jg
lcall
inc
pop
jp
fidivrl
je
and
jne
jle
add
shll
xor
or
add
sbb
adc
rorl
cli
xchg
gs
sub
shl
lea
mov
shrl
stc
sbb
jb
jbe
jecxz
out
or
jne
repnz
sub
push
stos
xchg
cmpsb
adc
xor
jmp
daa
pop
sub
mov
xchg
jmp
repnz
sub
scas
mov
adc
movsl
pushf
xor
es
pop
xchg
mov
mov
xlat
mov
pop
mov
in
adc
mov
enter
cmp
xchg
jno
xchg
cmp
jne
pop
dec
mov
mov
mov
out
mov
xlat
rcl
insb
shlb
adc
cmc
add
jecxz
into
lods
dec
push
mul
add
add
inc
mov
cmp
mov
stc
jmp
pop
sbb
fcoml
loope
xlat
lods
mov
js
roll
les
fs
fwait
sub
rcll
dec
sti
jne
push
and
jns
addb
push
sbbb
dec
push
lods
xchg
pop
cmpsb
inc
dec
testb
mov
std
int3
xor
daa
fidivrs
sub
test
and
adc
cmp
in
pop
std
pop
cmc
fwait
add
mov
ja
dec
mov
xorb
push
sbbb
std
hlt
not
add
cli
fucomp
sbbl
xchg
or
enter
sbb
dec
jg
adc
xchg
fcom
pop
jg
daa
adc
dec
sarl
ljmp
nop
test
xorl
pop
push
dec
aam
adc
xor
rolb
scas
movsl
andb
adc
sbb
faddl
lods
or
sti
mov
add
jge
cmp
mov
ret
lret
ret
cmp
lods
inc
lahf
pop
inc
mov
sub
xor
andl
ffreep
add
xor
leave
mov
xor
push
adc
lcall
cmp
div
mov
movsbl
xor
das
xorl
into
cmp
aas
out
xchg
or
pop
dec
xchg
dec
dec
sahf
les
push
andl
dec
rcrb
outsl
lods
clc
jp
cmp
mov
icebp
mov
test
adc
cmpb
inc
std
in
lret
mov
xchg
nop
push
sbb
mov
adc
dec
fs
cmpsb
std
in
push
or
sbb
pop
lcall
fwait
loope
sahf
cmc
loop
in
sub
imulb
xlat
mov
mov
pop
ret
ret
pushf
pop
push
cmpl
repnz
push
pop
fimuls
jne
pop
fwait
sub
adc
pop
pop
dec
pop
adc
mov
lret
mov
add
fucomip
fnstenv
add
mov
mov
push
cmc
jnp
into
mov
pop
aam
lret
aas
lret
jp
push
or
push
or
and
mov
iret
dec
xchg
dec
subb
arpl
add
pop
fsubrs
leave
leave
ret
ss
insl
popf
psllq
in
pop
adc
inc
xor
jbe
movsb
mov
gs
pop
addr16
pop
push
sbb
push
adc
mov
adc
dec
mov
lock
in
jbe
test
push
add
jge
aaa
fildl
sub
sahf
fwait
push
mov
je
pop
hlt
arpl
sbb
jge
insl
add
into
outsl
addr16
inc
movsl
imul
xlat
mov
add
iret
in
lods
and
cmp
inc
rorb
xchg
arpl
faddp
mov
push
popa
clc
dec
xor
cmc
dec
in
sbb
push
test
sti
push
or
add
jo
shl
jg
adcl
lret
jle
push
xchg
fsubp
and
enter
xchg
gs
and
cmp
aad
inc
mov
inc
das
add
mov
test
les
nop
icebp
les
mov
sub
mov
mov
in
or
pop
sbb
lahf
jl
stc
mov
shll
xchg
cltd
sbb
mov
mov
aam
cmp
adc
dec
dec
or
test
pop
pop
xchg
dec
inc
mov
cmp
daa
vmwrite
fyl2x
repz
in
idivb
push
faddl
movsb
mov
int
sub
push
addb
enter
and
cmp
frstor
imul
fsubl
dec
insb
sbb
int
inc
xlat
push
insl
lock
adc
in
pusha
int3
test
add
fcoms
nop
rclb
sahf
mov
sbb
cmp
cmovle
and
adc
stos
jne
and
mov
les
in
mov
decl
test
loopne
mov
cmpsb
push
jno
pop
mov
pop
xlat
sub
inc
scas
inc
sub
aam
rcr
insb
jo
inc
xor
jg
les
xor
sbb
mov
nop
xchg
test
mov
mov
fnstsw
and
comiss
loopne
or
mov
sti
mov
rcll
clc
subb
sahf
xchg
stos
cld
jo
cmc
dec
xchg
int3
lods
jae
test
fxtract
lods
sub
jno
and
jbe
mov
aam
cltd
and
fstpl
mov
dec
add
cmp
adc
dec
lret
out
mov
adc
cmpb
ljmp
push
xchg
sub
incl
jns
cmpb
push
push
push
test
mov
add
xchg
loopne
sub
cwtl
and
mov
outsb
cmp
cmp
sti
mov
fisttpll
mov
cmp
cmp
xchg
inc
cmpsb
sti
andl
xchg
das
mov
xor
add
mov
test
icebp
idivl
aas
notb
dec
fildl
push
pop
jl
inc
loope
push
into
adc
xchg
test
rclb
sarl
aad
cmp
packssdw
insl
adc
jno
mov
mov
lahf
adc
std
pop
scas
adc
xchg
dec
arpl
cs
je
push
ret
in
jmp
adc
fcmovnu
aaa
scas
sbb
sub
jg
fs
jo
or
mov
sub
xchg
inc
push
movsl
jb
push
out
inc
shlb
inc
xchg
or
or
pop
scas
rdtsc
mov
mov
inc
dec
mov
mov
into
mov
andb
pop
push
and
jl
mov
xor
jecxz
inc
sbb
movsl
pop
and
out
mov
rcll
or
add
jne
scas
ja
sub
mov
lcall
sub
pop
in
roll
fmuls
adc
xchg
add
pop
test
imulb
mov
lods
xchg
sti
aas
xchg
or
sbbb
lahf
cltd
stc
mov
mov
lods
xchg
mov
inc
in
sub
xchg
ja
sub
rclb
pop
fsubrs
test
ret
outsl
xor
in
pop
pop
movsbl
mov
insb
stos
xor
or
inc
mov
in
sub
fistpl
mov
movsl
adc
stos
and
fbstp
in
xchg
aas
jl
out
daa
data16
inc
xchg
data16
sbb
cmc
enter
out
dec
hlt
sub
dec
pop
lods
mov
and
xchg
inc
xor
out
push
sahf
jbe
mov
xchg
add
pop
stc
jge
jge
or
mov
push
jmp
cmpsl
cli
loop
inc
mov
jo
lds
jp
cld
out
jge
je
inc
xor
xchg
jl
sbb
stc
mov
loop
adc
pusha
pop
and
test
lahf
xor
cmp
jo
repz
inc
imul
xchg
mov
imul
insl
stos
mov
mov
xchg
into
adc
pop
add
imul
adc
sbb
pusha
or
mov
sbb
jbe
inc
jg
imul
adc
shl
cmc
daa
aaa
sub
add
fwait
in
inc
subl
stos
rcrb
mov
add
movl
ret
xchg
jmp
dec
je
or
cltd
ret
inc
iret
and
mov
mov
ds
inc
js
cs
imul
sahf
call
sbb
aaa
sbb
icebp
push
ficompl
enter
jle
cs
rorb
std
pop
push
mov
in
mov
enter
ficoms
and
sti
jecxz
daa
sti
push
jl
push
xchg
sub
test
pushf
mov
xchg
movsb
push
sub
xor
mov
mov
push
inc
dec
dec
jmp
es
and
sbb
mov
nop
xor
sub
fnstenv
inc
insb
inc
sub
xchg
push
in
push
lock
maxps
aam
mov
test
popf
clc
out
cmpsl
mov
jg
imul
mov
cld
popf
fistpl
aad
pusha
ja
test
fsubrl
lock
mulb
xor
mov
and
das
or
clc
mov
in
out
push
pop
jecxz
movsl
mov
cmp
adc
cmp
push
fwait
dec
daa
add
popa
mov
fs
mov
dec
xchg
into
ljmp
cmp
das
or
iret
xchg
mov
out
je
sbb
es
mov
sbb
pop
mov
popf
iret
adcl
xchg
jae
clc
push
mov
push
movsb
jo
sub
mov
or
mov
fnstcw
mov
mov
out
and
repz
sub
mov
add
pop
loop
pop
fdivl
jmp
dec
mov
sub
inc
sub
sarl
repnz
test
out
lods
push
shlb
mov
add
and
add
cli
lcall
inc
ret
clc
out
push
xor
testb
adc
jmp
mov
sub
or
imul
imul
xor
in
mov
testl
inc
les
xor
bnd
fs
cmp
clc
shl
test
or
or
je
stos
ja
xchg
pop
nop
xchg
xchg
pop
add
cwtl
test
cmp
xor
sbb
or
jge
popf
sub
xor
jne
sbb
xor
leave
repz
fidivrs
pop
inc
adc
mov
dec
ret
jnp
push
adc
inc
ljmp
adc
pusha
pop
dec
int
ds
inc
inc
cld
mov
bound
scas
test
push
cmpsl
arpl
rol
dec
dec
dec
ss
jb
pushf
push
insl
mov
sub
movsb
xchg
pop
lret
push
xchg
pop
das
outsb
lods
enter
inc
or
pop
adc
mov
aam
out
mov
imul
mov
gs
jns
pushf
pop
mov
sti
cld
sarl
in
sbb
jb
push
gs
dec
cmpsl
mov
mov
lods
sbb
ret
dec
pusha
insb
and
add
cmp
cltd
mov
stc
subb
sbb
inc
pop
loop
sub
adc
rcr
adc
lcall
jge
or
xlat
pop
leave
popa
and
pushf
leave
mov
cmp
hlt
mov
dec
ret
je
bound
or
bnd
outsl
push
sbb
xchg
movsb
sti
mov
mov
or
aam
cmpsb
mov
std
in
sub
jp
in
gs
mov
clc
mov
xchg
sbb
scas
scas
ja
cltd
push
mov
es
mov
xor
popa
fidivrs
rclb
cld
xchg
mov
xor
insl
jle
mov
ja
lcall
test
ss
mov
sbb
push
shrl
jp
loop
sub
pop
repz
dec
xor
xor
cld
ljmp
adc
push
inc
pop
add
sbb
or
sbb
lea
clc
in
sbb
pusha
dec
xlat
pop
cmp
pop
add
mov
sbb
aam
fmul
jno
push
and
mov
xchg
push
dec
imul
mov
xchg
jp
sbb
and
sbb
mov
shrb
mov
fnstcw
jne
test
jnp
xchg
xor
daa
and
push
add
cmpsb
adcl
add
mov
adc
adc
shll
lea
popa
popf
jl
cli
push
push
jge
stc
xchg
xor
pop
jg
xlat
inc
scas
mov
aad
mov
sahf
mov
add
insb
cmp
aad
mov
sbb
push
cmp
outsb
push
sti
leave
xchg
push
movb
and
fidivrs
dec
test
sub
pop
add
dec
mov
lock
xlat
jl
lods
mov
inc
jmp
pushf
xchg
das
jge
mov
jecxz
cmovns
cmp
sub
fnstenv
negb
cmp
rep
sbb
roll
cmpsl
adc
sub
add
fldenv
ljmp
inc
mov
push
mov
cwtl
add
inc
pop
sbb
test
xchg
jmp
inc
push
insl
sub
loope
add
inc
pop
test
lock
push
pop
dec
rorl
mov
jp
or
hlt
adc
mov
test
xchg
pop
xchg
clc
pop
sbb
ds
icebp
lcall
mov
fnstenv
loop
ret
adc
xchg
sub
cli
dec
xchg
jno
das
int3
test
insl
sbb
scas
subb
cmp
ret
jle
xor
cwtl
lods
adc
push
push
mov
dec
sub
ret
dec
pop
daa
pop
adc
sub
jne
aas
jl
xchg
test
jecxz
clc
pop
repz
push
or
lea
cs
dec
les
cli
dec
out
out
push
and
daa
jne
pop
rorl
mov
scas
cmp
jnp
cwtl
out
popf
cmc
pop
dec
xchg
pop
sbb
lret
dec
nop
push
sbb
pop
dec
xchg
icebp
int3
cmp
jge
fistpl
rcrb
pushf
jge
dec
enter
movsl
loopne
cld
dec
fimuls
mov
popa
nop
sti
sbbb
jmp
cmp
adc
mov
jne
fldl
mov
movsl
lods
cmp
jmp
rcrb
sub
mov
add
cmp
iret
test
je
sbb
iret
mov
mov
addr16
stos
jp
pop
out
jp
mov
sti
sub
add
stos
pop
rolb
icebp
push
cwtl
xlat
pop
sub
mov
out
test
mov
mov
mov
movsb
mov
jle
repz
xor
stos
out
popf
insb
add
xchg
js
in
scas
sub
add
idivb
adc
test
add
enter
insb
mov
lods
xchg
inc
jo
add
jnp
jnp
xor
hlt
xlat
jo
mov
sbb
dec
mov
rorb
pop
repnz
repz
and
loope
mov
jb
inc
mov
clc
xchg
sbb
mov
gs
pop
repnz
xchg
jo
popa
clc
cmp
mov
shr
fs
sbb
cmp
add
xchg
jmp
push
pop
pop
cmc
xor
and
subl
xchg
aas
dec
mov
enter
mov
push
cmpsl
mulb
jp
mov
push
and
adc
rcrl
xchg
nop
insb
out
push
mov
push
aaa
mov
push
lock
jp
xchg
and
mov
xchg
aaa
add
sub
mov
popf
sahf
mov
xor
mov
jns
lock
pop
sahf
test
pop
ss
pusha
push
lcall
push
add
iret
outsb
jge
js
jge
add
aaa
lds
push
cltd
xchg
and
cltd
icebp
xchg
pushf
jnp
adc
int
inc
pop
hlt
fmull
in
add
and
stos
mov
js
sahf
push
in
lcall
jbe
lds
inc
fnsave
xor
sbb
inc
cmpsl
inc
repnz
sub
mov
movsb
inc
cmp
movsb
shrb
push
mov
push
cmp
rcrl
cmp
dec
dec
test
pusha
jl
inc
lds
bound
jge
pop
mov
jecxz
repnz
or
ljmp
inc
jge
std
push
mov
mov
xor
inc
into
mov
xchg
sub
int3
call
clc
stos
dec
divl
sbb
loop
sbb
mov
iret
add
lods
rorb
shlb
je
pop
repz
inc
or
pop
fbstp
inc
fmull
jb
inc
sbb
sti
mov
test
into
push
pushf
adcl
mov
sbb
std
push
mov
xchg
iret
mov
fimull
aaa
or
inc
adc
jle
push
inc
push
nop
jmp
cld
sub
and
les
dec
mov
sbb
daa
and
mov
aam
ds
cmpsb
out
add
es
mov
mov
aad
cmpsl
add
js
in
fistpl
cmpsl
dec
push
ja
aaa
or
rcl
cltd
js
popa
pop
in
mov
push
repz
in
das
clc
mov
in
fldt
mov
les
es
loop
js
ja
divb
fstpl
pusha
push
add
inc
mov
in
loopne
xchg
xchg
mov
lea
popa
sbbl
test
push
lret
ss
cmp
pusha
lahf
shlb
push
mov
dec
scas
dec
hlt
ss
mov
sbb
dec
out
inc
or
paddusw
stos
and
jmp
mov
push
into
adc
xchg
jmp
jl
stc
adc
push
movsb
or
mov
ficomps
or
ror
clc
js
pushf
dec
insb
pop
out
int
test
push
gs
aam
cld
sub
inc
pushl
shlb
mov
inc
dec
in
out
mov
cmpsl
pop
xchg
cmpsb
bswap
lret
xor
aam
sub
rorl
dec
push
cld
es
ja
push
cmp
std
or
rorb
push
mov
jp
out
ja
aaa
pop
inc
dec
xlat
sbb
sbb
adc
mov
add
sti
loopne
mov
sub
fdivs
and
push
leavew
dec
dec
jle
adc
jne
dec
pop
scas
pop
fldenv
jle
aam
mov
into
mov
repz
scas
push
and
xlat
push
mov
das
mov
mov
push
loopne
cs
xlat
or
mov
xor
mov
add
push
les
mov
aaa
pushf
fstpl
int3
mov
cwtl
adc
dec
cmpsb
clc
push
imul
mov
sbb
sti
repz
add
mov
mov
mov
lds
insb
stos
fisubs
sub
mov
aaa
jne
loop
or
popa
ret
or
add
xor
pop
sbb
popf
lods
and
pop
stos
lea
xchg
pop
into
cli
sbb
in
stc
or
lahf
repz
cli
aad
pop
insl
in
imul
repnz
cmp
mov
mov
mov
das
sbb
jg
jmp
bound
insl
mov
ds
mov
and
or
in
pop
jmp
movsl
mov
ljmp
mov
adc
jmp
repnz
outsl
nop
and
or
dec
mov
jne
aas
mov
mov
pusha
sbb
dec
lahf
or
shlb
mov
push
cld
gs
cmp
add
pop
cmc
xchg
fildll
test
scas
jns
jne
dec
jo
cmpsb
ja
lea
rorb
push
aad
daa
icebp
fcmovnbe
adc
xor
movsb
push
jmp
outsb
bound
outsl
xchg
test
cwtl
ficoml
stos
jecxz
pop
jae
cmpsl
jbe
mov
and
arpl
loope
xchg
cs
je
test
lds
insb
dec
leave
ret
mov
sub
outsb
or
aad
mov
movsb
testb
pop
adc
mov
xchg
lock
and
xor
jbe
jno
adc
push
mov
not
test
mov
cmpsl
jg
in
push
aaa
add
sti
jl
icebp
xchg
sbb
jns
fisubs
cmpsb
ljmp
mov
mov
into
xchg
fdivs
mov
call
jl
rcrl
and
loop
test
imul
movl
ds
imul
jge
ss
add
or
add
add
mov
mov
testl
adc
pop
int3
jb
mov
loope
aaa
std
inc
sahf
ds
cltd
xor
jbe
push
lcall
push
scas
outsb
ret
hlt
fcomps
pushf
xor
test
and
imul
jb
pop
ret
mov
jp
jnp
xor
pop
out
mov
or
mov
xchg
das
inc
inc
frstor
mov
pushf
inc
xchg
ljmp
in
sub
adc
js
mov
addr16
pop
lea
repnz
jnp
test
mov
mov
jg
ret
ds
repnz
lret
sbb
and
xchg
inc
xor
int3
mov
sub
pop
in
icebp
je
dec
lret
mull
sub
fnsave
fisubl
enter
outsl
sbb
in
sbb
ja
mov
cmp
pop
xor
imul
dec
lods
or
pop
in
ja
dec
adc
scas
imul
cmp
push
incb
insb
cwtl
mov
jne
xorl
je
loopne
push
mov
or
mov
in
sbb
sub
xlat
and
jl
mov
push
fldt
push
inc
mov
outsb
enter
icebp
add
mov
mov
insb
sarb
cltd
into
mov
outsb
lahf
loope
dec
or
cmp
adc
dec
cmpsb
mov
je
shll
popa
mov
dec
dec
push
jo
inc
xchg
xor
lds
call
incl
jno
frstor
mov
sahf
or
jmp
xor
xchg
imul
inc
inc
shll
inc
inc
repz
les
je
fistl
jno
mov
rcrl
out
push
jmp
or
mov
rcrl
mov
test
add
and
out
cwtl
mov
outsb
mov
pusha
data16
adc
sbb
mov
add
adc
mov
cmp
lcall
or
push
xchg
test
pop
sahf
idiv
addb
cs
jle
int
mov
or
in
mov
insb
dec
lahf
je
jle
insb
movsb
add
test
and
dec
fcmovnbe
call
outsl
cmp
cs
xchg
mov
push
dec
xchg
sub
jmp
inc
cmp
scas
adc
fcompl
je
xor
xchg
stc
or
mov
es
divl
pushf
cmp
inc
jnp
xor
lock
jae
adc
dec
mov
loopne
pop
lret
push
pop
gs
lret
jnp
pop
xchg
iret
xor
movsb
cli
push
add
inc
sbb
pop
adc
sub
hlt
hlt
outsl
pop
push
mov
mov
gs
call
pop
sub
inc
xor
or
pop
jbe
repz
and
into
jp
dec
mov
xor
sbb
cmpsb
mov
ds
pop
sbbb
dec
daa
xor
and
shl
push
dec
cmp
pop
xchg
xchg
jae
imull
cmp
jmp
into
push
shlb
test
and
mov
stos
test
scas
lret
in
je
ret
sahf
stos
xchg
cmp
sub
leave
je
aam
xor
rcll
out
mov
addr16
mov
stc
cmp
mov
out
sti
insb
or
cmp
outsb
xchg
nop
xchg
cmp
mov
jb
adc
imul
mov
xlat
repnz
pop
fs
imul
jne
cmc
pop
push
mov
xchg
adc
icebp
ljmp
imul
ljmp
imul
add
insb
xchg
xor
loopne
stos
add
mov
mov
xchg
jecxz
cmp
repz
mov
leave
adc
enter
popf
jp
rcrl
dec
flds
push
xchg
and
push
ds
sarb
outsl
fwait
dec
ljmp
dec
scas
mov
and
js
outsb
lock
xor
cmp
add
sbb
push
xor
jge
xchg
popl
cmpsl
xchg
rorb
push
sub
mov
mov
or
mov
mov
fcomps
and
js
lock
lds
dec
mov
mov
test
push
outsb
dec
mov
fisubl
or
xchg
outsl
jns
add
mov
test
leave
ja
inc
repnz
call
sar
pop
jno
mov
mulb
xchg
dec
jns
test
test
ljmp
mov
lret
pusha
xorl
cwtl
add
ds
outsb
xchg
push
jp
ss
mov
andl
das
nop
jnp
aaa
mov
mov
xor
dec
pop
or
lods
pop
jl
sbb
xchg
dec
push
fmull
jae
scas
inc
ljmp
xchg
fisubs
dec
das
ficomps
jmp
jle
les
fcmovbe
sahf
and
and
sahf
or
ljmp
mov
xchg
in
sub
fstpl
lahf
fmul
push
out
hlt
xor
mov
lods
jns
sbb
aaa
imul
loop
repnz
mov
jne
hlt
and
test
jp
add
mov
pop
mov
jne
fisttpl
cmp
push
mov
shrl
lds
mov
mov
pop
xchg
push
xchg
stos
xchg
inc
pop
arpl
jne
jo
jns
hlt
dec
adc
dec
add
jge
inc
sbb
cmp
cmpl
mov
enter
xchg
lds
pop
or
rol
std
loopne
sbb
lret
in
lret
daa
mov
daa
mov
test
stos
stos
or
lahf
data16
and
std
ret
sbb
mov
ljmp
add
lods
push
pop
adc
insb
fiaddl
mov
sub
addr16
sbb
and
lcall
adc
mov
lock
jae
enter
out
in
lock
dec
add
push
inc
lret
stos
inc
popf
and
mov
sub
pop
jle
mov
mov
sbb
xor
in
or
push
dec
sub
pop
pop
adc
mov
mov
scas
orl
mov
out
push
cli
ss
shrb
xor
and
push
in
decb
xor
repz
daa
and
jne
ret
fists
addr16
and
push
int
add
mov
jne
pop
out
dec
outsl
dec
adcl
das
sbb
pop
xor
iret
test
and
scas
or
jb
in
or
xchg
dec
lods
ljmp
sbb
jmp
xchg
adc
add
sbb
enter
sbb
mov
hlt
test
lods
int3
test
pop
or
sarl
inc
push
pop
xchg
xor
dec
aad
ljmp
test
stos
add
dec
jne
adc
jno
adc
pop
scas
sub
stos
sub
xchg
push
inc
jecxz
movsl
jecxz
dec
rcll
inc
sbb
jb
xor
or
xor
xchg
xor
sbb
mov
rcll
out
insl
adc
je
dec
jle
jecxz,pn
sbb
and
out
aaa
out
inc
mov
lods
orl
mov
xchg
sub
add
xor
and
ficoml
pop
arpl
jae
mov
sub
push
call
cli
jmp
das
bound
mov
inc
xchg
addr16
jns
cmp
adc
mov
inc
divl
mov
lret
repnz
int
or
ficompl
jecxz
popf
and
cmp
and
loope
and
int
pop
imul
push
clc
and
sahf
stc
xchg
cmp
dec
mov
std
lahf
mov
mov
sub
jmp
fldl
push
xchg
cmpsb
cli
add
mov
clc
frstor
je
or
dec
sub
aas
push
mov
fwait
mov
dec
mov
imul
sbb
aam
mov
jbe
pop
xchg
bswap
pop
jge
fisubl
xor
cmpl
pop
jb
or
repz
adc
and
loopne
fildll
xor
aaa
arpl
sub
sbb
jo
xlat
shll
imul
inc
out
bndstx
dec
sysret
int
cmp
adc
jp
movsb
mov
pop
cmp
adc
test
jp
out
cmp
cmc
or
in
stos
push
shll
pop
mov
mov
push
mov
ret
lods
mov
pop
xor
and
fcoms
lahf
mov
mov
pop
test
pop
hlt
jge
aad
fsubs
and
shll
adc
cltd
sahf
sbb
mov
jne
sbb
jnp
cmp
pop
sbb
dec
cld
sbb
sub
int3
sub
mov
mov
jge
jne
inc
aad
mov
mov
das
lahf
std
pop
mov
pushf
push
decl
cli
sahf
outsl
or
jno
mov
fsts
rcl
sbb
call
mov
ds
push
mov
jne
or
test
push
outsl
push
adc
push
das
jns
dec
cmpsl
mov
lds
hlt
lds
adc
jecxz
cs
jns,pt
pop
js
call
adc
and
hlt
jb
sub
sub
adc
in
insb
insl
xchg
and
or
int3
shll
push
idivl
repnz
cs
mov
fs
mov
bound
push
push
test
dec
jl
or
xchg
jnp
sbb
nop
push
pop
push
xor
repz
dec
outsl
push
pop
pushf
test
fiaddl
aaa
cmpsl
out
add
xor
xchg
xor
sbb
jl
repnz
in
pushf
dec
push
aam
jg
jecxz
scas
lods
mov
cld
push
fld
xor
repz
test
mov
test
je
mov
sbb
fldl
and
adc
jg
add
xchg
scas
jecxz
cmc
std
subl
xor
push
in
sbb
loope
mov
xor
push
movsl
adc
xchg
outsb
adc
mov
fst
xchg
insl
mov
popa
push
sbb
mov
and
das
mov
outsb
jp
lods
cld
popf
repnz
mov
mov
lret
push
mov
test
lret
mov
sarb
pop
stos
xor
xchg
mov
cld
call
push
stc
jl
dec
dec
std
or
jnp
xlat
dec
fstpt
lods
jns
cmc
loope
fcmovbe
cld
xorl
or
mov
out
das
mov
add
jae
inc
sbb
scas
stos
inc
push
loope
in
shrl
pop
mov
mov
mov
and
sub
mov
lret
inc
mov
ds
jae
adcb
xor
mov
fwait
gs
xor
out
mov
movsl
adc
fsubrp
adc
cwtl
dec
push
das
daa
call
pusha
pushf
out
shr
mov
pop
xor
call
jp
push
stc
inc
and
dec
fucomip
adc
jae
test
xchg
loop
jno
scas
daa
or
adc
cli
xchg
xlat
push
xor
mov
daa
mov
push
ficoml
cmp
rcll
mov
fnstcw
push
fcoms
dec
pop
popaw
mov
cmp
mov
test
rcll
xchg
shrl
dec
xchg
out
dec
in
push
in
fistps
fdivrl
out
jecxz
cmpsb
addr16
cmp
add
sbb
and
xchg
and
push
lcall
or
push
dec
lcall
cmpsl
fimull
popl
push
inc
cli
shlb
push
pop
ret
add
cmp
pop
cwtl
int3
jle
cmp
push
mov
fisttpl
cmc
test
lds
push
mov
mov
out
sbb
cltd
jge
call
push
jb
scas
sub
mov
sbb
and
lahf
push
and
cwtl
popf
in
sub
or
test
or
cmpsl
cmp
xchg
xor
clc
mov
and
shl
std
mov
or
xor
pop
pop
xchg
imul
int
scas
push
cmova
lret
aam
mov
movsl
fsts
or
push
bound
mov
and
jmp
iret
fwait
sub
loopne
repnz
sbb
mov
je
fsubl
sub
clc
or
jbe
dec
mov
push
rcll
scas
jne
pushf
push
pop
ret
or
inc
adc
lret
std
cltd
mov
dec
imul
sbb
aas
adc
jecxz
pushf
fldt
mov
mov
cwtl
cmp
dec
mov
jmp
cltd
loope
mov
mov
dec
inc
adc
ret
iret
mov
outsb
xor
sbb
fwait
cmp
sbb
out
loopne
idivl
push
orl
insl
add
in
sbb
test
test
or
pop
sbbb
jl
xchg
cli
xor
pop
cmp
or
mov
jbe
orb
hlt
stos
push
addr16
mov
cmpsl
xchg
pop
dec
mov
faddl
shrb
jecxz
loope
popf
lret
pop
inc
mov
add
leave
push
testl
push
pop
orps
out
or
movsb
pop
mov
sbb
adc
ss
shll
sbb
sbb
sbb
push
clc
int3
fldcw
inc
pop
xchg
loopne
mov
test
and
jge
mov
xchg
mov
ja
xchg
pusha
sub
sti
fldcw
mov
nop
fistpl
std
or
es
enter
pop
add
pop
add
ljmp
out
push
sti
dec
xor
push
inc
mov
mov
inc
ror
mov
test
and
mov
pop
xchg
ja
lea
adc
push
fs
int3
gs
cltd
mov
jg
fninit
or
out
adc
inc
ljmp
arpl
popf
cmp
pop
shl
loope
xchg
lods
inc
cmp
mov
sbb
leave
roll
mov
jle
loope
sub
filds
imul
xchg
or
mov
imul
fldcw
xchg
imul
mov
mov
das
mov
jge,pt
mov
sahf
mov
insl
int
mov
mov
inc
in
cmp
dec
addr16
pusha
insb
push
mov
mov
imul
inc
mov
pushf
xchg
cld
cld
scas
push
fdivrl
sbb
and
ljmp
int
icebp
hlt
or
test
push
addb
jp
cmc
mov
in
iret
stc
mov
jo
cmp
push
jb
mov
mov
push
daa
cmp
popf
mov
mov
pop
movsb
and
xchg
mov
cmp
jp
cmpsb
push
mov
fisttpl
lcall
mov
mov
inc
je
sbb
adc
mov
push
add
int
jmp
loop
mov
jmp
cmp
lret
pop
jle
popa
insl
mov
loope
jecxz
xchg
ret
jnp
push
sub
cmp
and
daa
rcrl
sbb
inc
outsb
loope
sub
inc
mov
jg
cmpsb
xchg
mov
aad
xchg
pop
pop
add
rorb
sbb
inc
jmp
ljmp
cs
repnz
dec
mov
lret
cmpb
push
xor
out
movsl
dec
out
aaa
sbb
es
adc
xchg
andb
push
pop
adc
sub
pop
mov
inc
enter
dec
imul
mov
dec
push
mov
dec
pop
stc
pusha
or
jo
loope
sub
push
sbb
and
mov
jmp
pop
call
add
bound
les
mov
mov
ds
sbb
pushf
jb
inc
aam
and
jp
push
jp
xchg
lds
mov
pop
push
mul
lcall
xchg
adc
rol
imul
or
mov
cmp
add
jle
popf
mov
pop
js
in
mov
pandn
cmpsb
in
mov
es
sbbb
or
jne
ret
xor
lret
and
xchg
cld
lcall
cmp
push
in
insb
mov
hlt
clc
icebp
int
shll
push
es
and
and
fnop
and
int3
jmp
lea
inc
ret
or
xor
pop
mov
xchg
jl
je
mov
xor
or
icebp
sbb
bound
lds
mov
ja,pt
lods
pop
jns
iret
shll
sub
sbb
adc
imul
outsb
in
push
cmp
mov
jecxz
rcrb
jl
rcl
pop
push
bound
into
lock
dec
sbb
js
je
push
jb
data16
mov
adc
jbe
aas
and
adc
dec
sub
sub
mov
mov
and
fwait
aaa
repz
filds
and
adc
frndint
pop
sbb
sub
jg
es
cli
mov
icebp
or
call
mov
scas
jmp
shl
iret
icebp
xchg
test
push
mov
mov
push
or
fcmovbe
addr16
jmp
rcl
jo
popf
ret
cmpsl
pop
enter
push
dec
xchg
pop
int
mov
sti
ds
cmp
popa
imul
test
inc
mov
pop
ja
inc
popa
dec
fistpll
aas
add
push
adc
mov
not
push
mov
mov
add
cwtl
and
popa
adc
add
push
call
jb
icebp
cmp
mov
mov
dec
inc
int
scas
nop
mov
mov
or
loopne
mov
shlb
and
mov
arpl
outsb
cs
mov
jg
add
mov
divb
fcomps
out
jle
iret
mov
repnz
test
out
insl
mov
lahf
stos
popf
cmpsb
ja
leave
sub
aaa
adc
scas
lods
xor
xchg
icebp
sbb
popf
in
pop
push
aad
or
inc
cmp
pop
mov
push
cmovnp
sbb
or
fwait
mov
syscall
cmp
and
cmp
fdivs
jb
mov
mov
test
sub
xor
sbb
pusha
sub
push
lret
xlat
lahf
lret
arpl
xchg
xor
adc
out
or
jmp
cld
rclb
cmp
cmpsb
xchg
jne
fistps
cmp
xchg
dec
inc
xchg
jg
imul
sahf
sti
sti
fnstsw
in
imul
movsl
arpl
scas
lahf
les
lea
mov
mov
insl
pop
test
xchg
imul
es
adc
jmp
or
lods
imul
mov
sti
xor
repnz
mov
cmp
sbb
dec
sub
push
into
jp
enter
test
adc
loope
pop
mov
cmp
push
xlat
lea
push
into
sbb
shrl
stos
rclb
xchg
out
lods
or
scas
xor
add
leave
push
notb
in
push
int
mov
push
lods
cmp
push
xchg
gs
jo
dec
inc
mov
std
pop
lret
mov
subl
iret
stos
mov
sub
lock
push
adc
pop
mov
shr
and
test
inc
mov
popf
push
dec
mov
adc
inc
out
negb
enter
jge
pop
or
cmp
xor
dec
es
push
sbbl
scas
cltd
sub
ss
mov
push
addr16
cmp
fmull
ja
push
cs
sub
cmpsl
or
pop
scas
scas
inc
mov
mov
les
cli
test
clc
mov
xor
scas
fistps
mov
jg
xchg
sub
lahf
jecxz
xchg
push
std
hlt
pusha
aad
jno
cmp
pop
sub
rcrb
mov
mov
xor
xor
ja
add
in
adc
sbb
xchg
or
mov
pop
leave
mov
inc
jp
test
mov
sar
mov
xchg
insb
jecxz
jecxz
mov
out
xchg
sub
addb
adc
push
add
pop
push
inc
outsb
sub
mov
bound
insl
bound
addl
pop
bnd
and
rcll
ret
cld
pop
inc
mov
inc
dec
dec
pop
or
mov
and
xor
ljmp
les
push
jne
cmp
adc
dec
dec
pop
adc
sub
adcb
push
mov
mov
sub
fnstenv
outsl
inc
int3
mov
addl
sbb
loop
pop
addr16
push
inc
xchg
jmp
xchg
js
inc
and
sarl
or
sbb
dec
fbstp
lods
into
jmp
adc
or
sub
lcall
xchg
rcr
adc
dec
or
sub
adc
cmp
or
aas
inc
dec
push
push
ficoms
dec
rorb
jge
in
lret
xor
js
cmp
adc
loop
mov
sub
test
inc
fimull
cld
sbb
add
cmp
sbb
imul
xchg
add
test
sub
rcrb
mov
mov
ja
bnd
cmp
jae
jmp
sub
jmp
div
mov
fwait
lcall
imul
call
imul
rcll
xchg
inc
call
jle
lds
movsb
les
mov
rol
inc
mov
in
mov
push
ss
jae
fidivrl
mov
movsb
roll
je
out
int
push
faddl
inc
push
cmpsl
cmp
out
rolb
int
out
enter
mov
inc
mov
inc
movl
inc
das
push
movsb
iret
sbb
sbb
cmc
movsl
push
shll
sbb
dec
push
and
mov
outsb
sub
jb
inc
mov
mov
mov
cli
cmp
data16
or
xor
fiadds
mov
enter
fimull
dec
sbb
lock
xchg
cmp
mov
lods
xor
call
aaa
popf
lods
fwait
xor
dec
cmp
cld
jmp
das
dec
stc
dec
lods
ja
sbb
push
pop
outsb
shll
cmp
pushf
cmc
mov
ljmp
test
xchg
and
fwait
and
mov
dec
adc
addr16
das
and
inc
aad
adc
clc
into
and
rol
sbb
stc
push
into
shll
movb
adc
leave
jbe
inc
pop
test
loopne
movsb
sbb
sub
mov
cmp
or
cmp
out
jle
sbb
xor
insl
lcall
test
push
or
mov
xor
fs
dec
sub
es
adc
repz
inc
mov
lret
pushf
dec
jl
loope
in
daa
xor
jb
and
addl
sbb
movsb
cmp
cmp
or
call
jg
cli
roll
std
xchg
bound
add
sub
movsl
adc
ja
mov
or
ffreep
into
lcall
inc
daa
xchg
cmp
mov
stc
dec
cli
outsb
orl
mov
xor
pushf
mov
mov
xlat
push
inc
sbb
cmp
popf
or
dec
xchg
sbb
and
mov
mov
mov
nop
sbb
mov
popf
loopne
xchg
fsub
mov
push
sahf
cmp
std
imul
pop
shl
jl
not
xchg
jp
bound
mov
arpl
cmp
dec
mov
xor
push
sub
mul
push
jp
dec
imul
lret
jnp
mov
or
add
ffree
lret
rcr
adc
in
add
stc
cltd
push
fnsave
cwtl
sub
dec
rorb
notl
jno
lret
inc
pop
pop
popa
mov
loope
mov
xor
pushf
in
push
aad
aaa
mov
mov
cmpsl
dec
xor
push
and
decb
jge
lds
and
mov
incb
push
mov
push
adcb
pop
sub
outsl
mov
sbb
ret
xor
adc
outsl
push
or
mov
jne
sub
mov
insl
out
pop
out
mov
xchg
mov
lahf
movb
cli
shll
dec
mov
inc
sbb
outsl
dec
je
xchg
mov
movsb
int
add
std
xchg
js
push
scas
faddl
lcall
mov
addl
imul
and
push
mov
jns
jo
pushf
loop
ss
subl
repnz
aaa
lods
popf
movsl
push
roll
xchg
adc
out
mov
pop
mov
mov
add
sub
mov
insl
int
add
rcrl
iret
fnstsw
inc
mov
adc
js
sti
ds
imul
aas
and
jns
push
dec
stos
cld
repnz
loop
test
mov
jl
int3
mov
xchg
daa
dec
or
test
dec
nop
jbe
pop
pop
and
push
adc
shll
loope
std
inc
push
leave
cmp
or
int
and
out
push
addb
push
jp
cmp
push
nop
cmp
lret
or
sub
xchg
pop
mov
jle
adc
mov
es
or
scas
scas
jl
sub
outsl
jae
pop
mov
ss
pop
imul
sbb
push
sbb
push
add
xor
xor
mov
mov
mov
inc
iret
jl
xor
dec
mov
push
stos
jmp
testl
dec
lods
loopne
test
push
aas
mov
lret
in
cmp
xor
test
loopne
mov
fsts
fsubs
mov
adc
jle
into
jge
lock
fmul
lcall
add
clc
mov
mov
pop
imul
sub
xchg
jge
fcomps
dec
xor
lock
stos
lea
mov
ja
jge
test
jl
pusha
push
dec
xchg
and
mov
sub
mov
mov
lods
mov
mov
popa
cmpsb
dec
or
leave
stos
popa
mov
bound
push
xlat
lret
or
imul
cwtl
stos
sub
iret
mov
fdiv
inc
jae
scas
lahf
jb
repz
and
sbbb
into
enter
push
ret
mov
pop
or
adc
xor
das
mov
or
clc
scas
xchg
inc
inc
xchg
pusha
outsl
rclb
push
cltd
pop
pop
scas
pop
cmp
call
aaa
es
mov
pop
xlat
sbb
xchg
loop
add
add
movzbl
and
mov
xchg
mov
and
add
inc
xor
sub
mov
inc
mov
inc
mov
lea
dec
jne
dec
mov
mov
mov
pop
imul
dec
pop
sub
dec
pop
imul
mov
dec
lea
mov
or
xor
mov
imul
inc
dec
add
ret
push
push
dec
imul
push
add
dec
inc
lea
and
dec
push
inc
add
sub
lea
push
add
add
mov
add
add
inc
lea
push
inc
mov
add
push
lea
add
xor
inc
dec
push
add
imul
push
dec
lea
pushl
dec
call
and
add
mov
add
inc
movswl
inc
inc
inc
pop
ret
mov
inc
mov
cmp
jb
imul
xor
mov
mov
inc
add
mov
add
and
inc
or
dec
dec
mov
movswl
xor
mov
cmp
jb
inc
pop
mov
movzwl
sub
inc
dec
add
lea
add
and
add
dec
inc
dec
xor
add
imul
xor
lea
mov
lea
mov
test
jbe
mov
imul
mov
inc
mov
inc
lea
inc
lea
add
mov
and
movzbl
dec
mov
xor
add
movzbl
mov
imul
add
sub
movzbl
and
mov
inc
mov
dec
mov
mov
imul
mov
inc
dec
mov
movzwl
sub
or
and
or
dec
jne
inc
mov
lea
dec
sub
mov
inc
or
and
inc
inc
mov
mov
mov
mov
add
dec
mov
mov
mov
mov
dec
mov
test
jbe
mov
mov
movzwl
sub
mov
lea
sub
movzbl
inc
dec
dec
dec
dec
sub
add
inc
mov
imul
sub
imul
mov
add
and
add
inc
mov
mov
mov
movzbl
movzbl
mov
add
xor
add
and
or
dec
mov
dec
mov
movzbl
mov
dec
mov
movsbl
dec
mov
inc
add
movzbl
xor
dec
add
inc
jmp
push
sub
dec
sub
dec
dec
imul
xor
lea
dec
inc
dec
dec
dec
movswl
inc
dec
mov
add
dec
add
mov
mov
mov
mov
mov
add
dec
add
add
mov
lea
inc
mov
inc
inc
inc
mov
mov
mov
cmp
je
dec
and
imul
push
mov
call
call
inc
sub
call
call
or
dec
inc
add
lea
xor
movzwl
ret
imul
mov
pop
imul
ret
push
add
inc
imul
add
inc
push
inc
dec
push
add
push
dec
push
mov
mov
dec
imul
or
call
mov
push
imul
dec
xor
sub
sub
or
neg
xor
mov
xor
lea
inc
dec
mov
inc
mov
mov
movsbl
add
inc
dec
imul
dec
je
dec
and
dec
mov
mov
imul
mov
add
inc
inc
dec
repnz
mov
add
add
mov
jmp
inc
lea
movzwl
dec
mov
mov
dec
inc
sub
dec
lea
lea
mov
xor
jmp
fwait
fs
shrl
cmp
xor
jmp
jmp
mov
or
sub
sub
dec
pop
ds
fsubs
add
ret
push
mov
inc
lret
addr16
push
cld
rol
je
and
fdiv
add
je
scas
mov
fs
or
xchg
js
pop
sbb
push
sub
cmpsb
inc
movsl
clc
mov
cmc
inc
pop
imul
push
push
cld
call
jl
sbbb
push
scas
cmpl
mov
inc
ret
mov
push
mov
ds
ret
mov
xchg
cmp
cmp
ja
inc
add
out
adc
loop
and
out
push
xchg
adc
push
fs
out
xchg
bound
fsubrs
js
lret
xchg
sbb
push
cli
outsb
into
mov
cli
sub
fiadds
rclb
shlb
js
mov
cmp
cmpsb
ljmp
jmp
cmc
ret
ficoml
and
orb
cmp
dec
ds
fs
mov
ja
cs
addr16
popf
cmp
roll
pop
aad
loop
inc
xchg
lods
fdivrl
pusha
adcb
mov
xchg
sbb
adc
pop
pushf
and
jns
jo
dec
icebp
or
push
lret
rolb
loop
adc
hlt
mov
nop
mov
mov
pop
ret
sahf
jg
js
xor
loope
pop
adc
sti
dec
sub
sub
inc
add
push
cmpb
iret
mov
jecxz
stos
movsb
mov
and
and
push
mov
insb
xor
call
xor
daa
cmp
dec
adc
xchg
xor
or
addr16
sbbb
cltd
in
es
cmp
pop
frstor
call
in
inc
out
mov
fs
sbb
mov
movsb
stc
pop
fadds
mov
in
int
cmp
inc
jg
lods
sarl
sbb
xchg
adc
repnz
mov
jecxz
sbb
mov
jecxz
adc
ficoms
iret
jo
dec
lds
in
popa
cli
and
es
xor
sbb
and
std
int3
stos
mov
jge
int3
mov
fdivp
dec
jns
pop
adc
push
insl
mov
movsb
and
mov
cmp
xchg
mov
std
testl
push
inc
dec
std
clc
outsb
add
dec
push
cld
mov
in
test
mov
repz
jmp
outsl
xor
movsb
lock
in
inc
xchg
jo
in
mov
out
pop
and
sbb
pushf
and
and
lcall
cmp
pusha
arpl
and
xchg
pop
pop
and
popf
pop
and
lock
fisubrs
or
pushf
in
xor
ret
and
lds
das
xchg
push
xchg
dec
sbb
lret
jecxz
inc
sub
mov
adc
rol
add
mov
loope
loope
mov
sub
mov
into
in
bound
das
out
imul
lds
pop
mov
ljmp
test
lahf
adc
xchg
or
dec
out
pop
call
enter
dec
mov
xchg
mov
add
xor
inc
out
xor
movsb
sti
mull
repnz
adc
adc
ss
mov
rorb
dec
push
inc
xchg
add
int3
xor
mov
aad
scas
cltd
rcl
sbb
shlb
lods
aaa
mov
mov
push
push
push
xor
push
mov
test
add
xor
sbb
mov
mov
loope
sub
incb
call
lds
andb
scas
gs
adc
xor
les
or
sar
pop
xchg
fmuls
dec
lahf
xchg
fisttps
mov
ret
xor
mov
mov
mov
shl
inc
imul
jne
and
in
sbb
fstps
sub
inc
push
jae
cmp
inc
jne
rcrb
inc
shl
or
rcrb
mov
mov
sbb
add
popa
das
add
mov
aam
ret
cmc
lcall
push
out
ja
sub
xor
mov
loope
xor
rcrb
sahf
arpl
je
gs
lods
das
imul
lret
sub
pop
push
xlat
fwait
cmp
push
fs
jmp
dec
rol
repnz
daa
jl
loop
insl
arpl
sbb
lcall
das
inc
mov
push
movsb
add
lock
xchg
std
daa
aad
insb
add
jb
mov
jl
shlb
dec
testb
popf
fimull
je
push
pop
add
add
sbb
push
iret
not
scas
dec
mov
test
insl
fisttpll
sbb
iret
sub
cmpb
lahf
nop
scas
inc
cmpsb
cwtl
mov
inc
cmp
adc
xchg
pop
and
fwait
push
mov
fnstenv
jno
cli
add
paddd
jae
into
push
idivb
xor
imul
test
cs
gs
mov
adc
dec
pop
cli
in
out
mov
in
dec
sub
pop
pop
lods
nop
pop
dec
cmpsl
cwtl
push
in
xlat
shlb
jno
dec
icebp
mov
or
ret
outsl
mov
cli
pop
sbb
xchg
mov
cmp
jecxz
jge
movsb
jno
stc
cmc
bound
dec
ss
ljmp
xlat
mov
add
fmuls
mov
adc
sbb
in
jne
js
pop
xchg
rorb
mov
and
mov
sub
pop
fiaddl
fs
fbld
rorl
and
or
rolb
push
add
and
mov
mov
dec
cmpsb
lret
and
imul
popa
or
stc
and
pushl
inc
lret
pop
jb,pt
fldcw
je
fnstsw
cwtl
jmp
loop
pop
or
sbb
lea
mov
pop
or
dec
imul
test
dec
push
cmc
out
push
lret
inc
fs
inc
arpl
stos
add
sub
adc
aam
rcrb
fcmovbe
sbb
in
fmull
xchg
mov
cmpsl
xor
ja
fidivrs
push
ds
xor
cmpsl
jl
dec
jne
xchg
mov
jle
jmp
int
cs
xor
subb
and
ss
sub
aas
or
shr
inc
lret
int
faddp
add
repz
xchg
xor
cltd
cmc
std
sbbl
int
into
mov
leave
cmpsb
jmp
pop
pop
test
repz
fs
sbb
jns
adc
jo
mov
mov
mov
out
jmp
stos
pop
mov
ret
inc
sub
jge
mov
inc
fstpt
mov
jecxz
or
dec
ds
rcll
sbb
lea
add
mov
mov
call
fidivrl
pop
stos
add
jle
lods
mov
dec
cmp
mov
cmp
test
jg
hlt
clc
sbb
jge
sub
fwait
outsb
dec
push
fistpl
inc
movsl
aas
aam
jnp
cld
inc
addb
dec
popf
ds
mov
loopne
es
inc
clc
dec
sbb
fs
mov
clc
mov
pop
jp
xchg
mov
jne
xchg
dec
sahf
jg
dec
shrl
aam
cwtl
jb
adc
inc
xor
mov
pop
iret
inc
int3
mov
inc
xchg
test
or
mov
nop
cmpsb
stc
cmp
adc
adc
cmp
or
in
sarl
fists
and
aad
inc
push
xor
mov
push
push
and
popf
imul
jge
leave
inc
jbe
or
xor
pop
sub
rcrb
or
mov
mov
leave
inc
mov
out
mov
adc
push
or
sbb
add
mov
lret
xorb
adc
add
pop
adc
jmp
cmp
sub
lods
and
inc
mov
inc
int3
and
push
aad
outsl
aaa
jns
aaa
mov
mov
rorb
fwait
int3
fistpl
ljmp
sub
frstor
xor
or
adc
and
cmp
adc
insl
push
mov
ss
and
mov
loope
jnp
pusha
cli
push
ret
sbb
cmc
in
in
mov
push
xchg
mov
test
xchg
ficomps
push
mov
push
inc
inc
dec
inc
sbbb
inc
lock
mov
mov
ret
push
inc
loop
mov
inc
loope
mov
add
test
mov
sbb
push
mov
lock
imul
scas
fdivs
ficomps
out
je
jp
daa
in
mov
aaa
sbb
js
je
mov
cmp
call
fadd
jns
or
cmpsl
push
movsl
addr16
push
sahf
jb
loopne
lret
movsb
pop
loop
daa
dec
pop
mov
jno
movsl
jno
ror
jo
add
data16
pop
lock
pop
aam
jge
push
nop
icebp
jp
jle
xchg
push
mov
js
or
push
mov
rcrl
add
lcall
jns
mov
clc
hlt
ret
mov
hlt
lods
sub
scas
stos
mov
sub
xor
or
pop
in
jp
cmp
sub
das
movsb
add
les
scas
lock
jecxz
dec
sbb
cmp
ficoml
jne
mov
outsl
or
dec
and
pop
xchg
stos
xor
movsb
les
arpl
ss
inc
jnp
mov
jle
lret
or
imul
push
sbb
lds
scas
aad
jbe
and
flds
pop
sub
insl
ss
dec
outsb
mov
enter
mov
sub
nop
lds
jecxz
ds
movsl
xchg
out
and
popa
mov
scas
sbb
mov
adc
push
ljmp
inc
stc
repnz
push
outsb
jno
mov
sarb
or
dec
mov
xor
sahf
or
push
pop
xchg
jbe
xchg
lea
xchg
and
adc
pop
fstpl
cmpsl
dec
jmp
sbb
addr16
pop
out
or
imul
xor
jb
sarb
pop
fldt
push
add
arpl
cmpsl
dec
lock
mov
cmc
mov
pop
mov
mov
cmp
insl
dec
xchg
shl
xor
mov
testb
xor
stos
aaa
mov
lods
mov
mov
les
test
rcr
inc
stos
xchg
mov
pop
sbb
inc
mov
sahf
dec
vpsllq
or
daa
add
fs
push
cmp
das
aas
mov
push
das
pop
inc
aaa
push
daa
jbe
xchg
divb
sub
adc
sub
mulb
sub
cmp
and
push
imul
sbb
aad
imul
cld
iret
sarb
shlb
cs
xacquire
bnd
mov
push
lds
jne
ret
test
lods
cwtl
cli
nop
cld
out
aaa
lea
xchg
out
repnz
mov
mov
outsl
mov
lock
pop
xor
sahf
cltd
jb
mov
gs
push
sbbl
test
scas
stc
pop
int
insb
and
das
xor
in
inc
add
jno
scas
xchg
and
pop
push
in
add
xchg
pop
xchg
outsl
jo
idivl
aam
xor
dec
lea
dec
iret
add
push
movsl
inc
pusha
or
adc
test
into
in
sub
mov
or
clc
sbb
jbe
cmp
aas
push
xchg
outsb
pop
cmp
add
mov
pushf
sbb
movsl
daa
push
mov
mov
std
cmp
xchg
gs
inc
idiv
shlb
imul
xchg
mov
push
bnd
jmp
int3
mov
aaa
xchg
or
push
addr16
xlat
push
add
loopne
in
lcall
add
imul
cmp
mov
rcll
pop
int3
mov
jecxz
xchg
pop
push
dec
add
or
ljmp
xor
mov
arpl
lds
jle
popf
mov
out
push
or
or
mov
pop
icebp
mov
pop
lret
outsb
pop
sti
out
out
sbb
mov
pop
sub
pop
jmp
mov
xor
add
lods
jecxz
cmp
sub
push
add
mov
dec
inc
mov
std
dec
mov
stos
adc
sub
test
call
cld
neg
nop
xor
and
xlat
and
je
xchg
repnz
sbb
movsb
xchg
pop
adc
adc
aad
mov
push
mov
cmp
insl
dec
xlat
sub
jbe
sbb
lds
adc
xor
mov
call
lods
imul
ja
pop
and
push
into
push
nop
daa
push
andb
rolb
ss
dec
jl
mov
pop
mov
jnp
mov
out
or
out
push
gs
push
stos
ss
das
xchg
std
mov
pop
inc
fistl
sbb
ret
mov
pop
insb
and
mov
mov
xor
mov
popa
xchg
push
and
or
push
inc
push
scas
and
pop
cmpsl
in
add
lcall
setb
rcll
xor
notb
outsl
lret
add
xor
jecxz
mov
mov
je
lods
adc
stos
js
pop
idivb
sbb
rol
cmpsb
daa
lcall
hlt
bound
scas
mov
shrb
loope
or
jbe
std
loop
inc
mov
cmpsl
test
rcrb
hlt
movsl
fs
test
mov
std
fdiv
icebp
lcall
jnp
popa
sti
outsl
jmp
xchg
into
out
ljmp
stos
repz
xchg
leave
mov
pmulhuw
outsb
and
ds
or
mov
popf
mov
pusha
fs
xchg
out
stos
test
mov
push
mov
mov
dec
call
xor
or
call
dec
push
mov
call
or
mov
dec
inc
lea
add
call
inc
movsbl
lea
dec
lea
dec
sub
inc
sub
inc
lea
inc
imul
lea
call
dec
add
lea
add
mov
call
dec
inc
call
sub
movzwl
inc
inc
inc
dec
lea
add
pop
lea
dec
add
add
mov
pop
mov
sub
pop
mov
sub
mov
add
pop
imul
add
dec
mov
inc
mov
lea
sub
pop
dec
dec
pop
dec
add
mov
mov
dec
call
mov
add
inc
add
ret
inc
add
push
lea
dec
push
inc
dec
push
lea
imul
push
inc
dec
push
mov
mov
mov
mov
push
dec
ret
push
sub
push
dec
and
lea
lea
push
dec
lea
add
call
pop
ret
jmp
movswl
movsbl
pop
pop
ret
push
sub
lea
inc
mov
lea
mov
inc
inc
lea
mov
xor
dec
add
sub
imul
inc
lea
and
sub
mov
mov
imul
add
mov
sub
dec
add
dec
pop
ret
sub
mov
mov
add
add
mov
lea
dec
mov
movsbl
inc
mov
mov
dec
xor
xor
mov
mov
imul
mov
inc
and
inc
lea
add
dec
dec
cmp
jb
add
push
dec
mov
push
dec
mov
push
dec
inc
xor
inc
mov
xor
lea
or
xor
mov
mov
push
or
mov
push
lea
imul
pop
mov
dec
dec
sub
and
mov
sub
inc
inc
xor
dec
sub
mov
mov
mov
mov
movzbl
mov
xor
sub
lea
add
xor
or
add
xor
and
movzbl
xor
inc
mov
mov
inc
imul
or
inc
dec
dec
mov
mov
mov
jmp
add
inc
add
push
add
sbb
inc
add
adc
add
cs
add
add
xchg
pop
inc
add
add
add
inc
add
pop
add
and
lods
ret
fidivrl
adc
testb
pop
push
bound
sbb
mov
test
and
out
or
out
pop
inc
rorb
movsb
fsubs
mov
cmp
les
inc
cmp
mov
mov
call
ss
in
push
or
jnp
out
jg
push
cmpsl
imul
cs
jb
cmpb
sub
enter
xor
mov
inc
mov
rorb
test
mov
mov
and
adc
test
pusha
sub
cmp
dec
jne
xchg
sbb
data16
add
packssdw
rclb
add
xchg
insb
push
xor
mov
push
cli
inc
in
push
push
jno
xchg
jecxz
mov
or
dec
test
xor
mov
int
dec
push
cs
pop
jb
movsl
mov
fs
and
sbb
dec
movsb
mov
dec
mov
xchg
imul
mov
sub
sti
out
mov
mov
in
jno
xor
lods
dec
gs
sub
mov
jnp
movl
xchg
negl
sbb
add
test
ficomps
add
add
pop
mov
pop
imul
mov
scas
imul
sbb
pop
xchg
ds
lret
sub
stos
rolb
call
test
inc
pop
sub
dec
fidivl
xlat
push
adc
sub
adc
push
inc
push
jmp
xchg
imulb
mov
test
movsb
xor
int3
add
mov
mov
fdivr
subb
or
mov
cli
stc
and
std
cli
sub
nop
leave
ret
or
mov
pop
ror
loope
mulb
push
mov
push
sahf
cmp
mov
insl
mov
cltd
pop
popf
push
daa
loope
es
sbb
lahf
cmpsb
xchg
dec
adc
adc
insb
daa
jge
mov
xchg
test
popa
pop
add
pop
jp
test
cmpsb
stos
addr16
bound
test
sub
pop
or
scas
adc
push
pop
xor
lods
les
cmpsb
dec
push
mov
mov
mov
fdivrs
mov
aaa
adc
push
inc
add
lds
cmp
inc
int
xchg
pusha
pop
movsb
dec
add
ret
loope
dec
push
ds
rorl
cmp
cmc
iret
jecxz
sub
xchg
lds
iret
lcall
or
lods
cmpl
es
imul
sbb
push
mov
adc
lods
inc
mov
dec
icebp
std
movsb
push
xchg
iret
mov
xchg
lret
pop
in
jl
stos
xlat
push
lods
mov
mov
mov
push
orb
sub
xorb
and
faddl
fucom
negl
xchg
imul
mov
sbbb
lahf
sub
xor
stc
mov
sbb
xlat
or
mov
pushf
sbb
pop
cmpsl
cmp
stos
cltd
ficoml
repnz
dec
iret
outsb
ret
mov
movsl
adc
fwait
cmpsb
sahf
pop
test
xor
int
sub
mov
movsl
leave
loop
push
mov
push
push
les
das
inc
outsl
mov
dec
mov
jmp
pop
mov
pop
pop
fists
loope
jne
scas
fs
test
bound
xor
jmp
mov
xchg
aad
test
call
lods
jp
jne
xchg
mov
insb
jne
andl
out
cmp
cltd
mov
add
or
pop
aas
sbb
es
add
pop
jns
jae
add
jmp
sub
xor
mov
scas
in
idivb
cmp
sti
or
int3
jp
inc
leave
adc
adc
jb
out
es
add
cmpsb
mov
mov
pop
cmpsb
add
outsl
in
roll
push
jae
add
dec
out
pop
pusha
sub
and
dec
push
push
cmp
outsl
shll
mov
pop
sub
xlat
nop
sbb
pop
cwtl
mov
aaa
aaa
push
push
fildl
adc
scas
in
or
repnz
fwait
fs
cmp
ret
push
sbb
sbb
sbb
loop
push
gs
insl
mov
paddusw
scas
cs
icebp
and
les
sub
lret
mov
imull
sub
jp
scas
push
inc
leave
cmc
cltd
in
lea
int3
sbb
ljmp
jnp
sahf
or
mov
test
sbb
pop
lods
or
fisttps
cmp
pop
cmp
std
sti
cmp
mov
pop
adc
dec
repnz
sub
push
inc
fdivrs
dec
movsb
scas
movsl
xchg
cli
aad
inc
mov
out
in
adc
xor
ss
inc
xchg
jle
imul
ds
repnz
xchg
mov
push
mov
sti
mov
rol
sbbb
hlt
adc
mov
stos
dec
add
int3
js
ds
loopne
jo
lea
xchg
and
jbe
mov
je
movsb
xchg
xchg
lock
xor
scas
fsubl
loopne
aam
inc
lea
push
fdivr
add
jne
sbb
xor
push
cwtl
inc
mov
sbb
jp
adc
and
xor
int
outsb
dec
insb
push
and
mov
arpl
sub
cmc
les
leave
imul
jo
mov
iret
push
sub
lock
loope
sbb
inc
mov
add
xchg
in
repz
rcr
lahf
dec
mov
test
and
cld
repnz
sub
jle
dec
sti
push
lds
jecxz
lea
mov
rcrl
jecxz
fcomps
xor
push
mov
jp
jno
xchg
iret
movsb
xor
icebp
incb
pop
fnstsw
sti
xor
xorb
lods
cmp
clc
pop
inc
sub
lahf
cmp
mov
lret
test
xor
pop
mov
inc
shr
jae
cmp
dec
xchg
popf
and
sub
adc
mov
pusha
fldt
dec
rcrl
push
mov
int3
add
ficoml
stos
sahf
mov
lret
inc
es
or
fcmovne
mov
lods
jl,pt
in
imul
add
cld
ljmp
add
iret
lahf
push
push
add
pop
std
xchg
in
test
dec
roll
inc
xchg
xchg
cmp
push
out
sbb
daa
mov
adcb
pusha
push
xchg
data16
lods
mov
cmp
sbb
mov
das
push
and
mov
movsb
add
lea
mov
pop
cmp
shrb
dec
popa
add
inc
dec
inc
pop
push
or
sbb
loopne
ds
cs
outsb
jo
cltd
mov
jmp
hlt
xchg
insl
cmpsb
mov
fisttpl
push
arpl
mov
rolb
iret
cmp
cli
mov
lea
iret
cmp
sbb
icebp
std
mov
imul
es
lcall
dec
mov
inc
icebp
iret
das
xchg
jle
rcll
jo
dec
fsubs
cltd
sbb
sub
mov
pop
mov
mov
or
mov
call
loope
lcall
incb
and
imull
test
cmp
push
in
sbbl
xchg
outsl
xchg
and
adc
adc
xchg
and
push
inc
mov
mov
lea
hlt
dec
int3
shl
rorb
add
add
xchg
dec
add
test
pop
cmpsb
or
and
cwtl
mov
push
out
push
push
sub
mov
mov
sti
push
out
sbb
push
mov
lret
lea
aaa
nop
clc
xorl
mov
sub
mov
and
adc
mov
xchg
mov
cld
imul
and
add
aas
push
dec
adc
and
jbe
out
push
in
mov
orl
or
xchg
pushf
xor
xchg
movsl
sub
call
fwait
in
inc
add
sti
jp
cld
fsubrl
jbe
fdivs
jl
je
mov
adc
cltd
adc
cmp
ja
adc
aad
xor
and
ret
push
repnz
sub
popa
in
out
mov
jno
xchg
fadd
and
dec
std
add
xchg
nop
insl
sbb
andb
cmp
std
pop
inc
cmp
les
jg
sbb
jnp
shrb
cli
cld
xchg
xor
data16
cmp
pushf
out
pop
aam
aam
jnp
push
xlat
and
xchg
lods
in
mov
in
jg
jno
cltd
add
test
and
push
scas
or
xor
outsb
sbb
aaa
mov
dec
cmc
aam
xchg
sub
mov
push
xchg
push
nop
neg
push
inc
mov
jb
cs
mov
test
test
adc
inc
inc
mov
lar
movsb
in
inc
lock
cmp
aam
scas
mov
jnp
insb
loope
fsubrl
cmp
flds
xor
insb
xchg
rolb
adc
dec
dec
sub
jmp
push
mov
push
imul
int
cli
mov
arpl
arpl
pushf
sub
mov
cwtl
mov
aam
dec
dec
insb
bound
fcoml
push
pushf
jle
mov
repnz
outsl
dec
insl
xchg
pop
sbb
das
add
pop
dec
popf
ljmp
lods
sub
xlat
push
xchg
mov
adc
or
jecxz
idiv
fwait
bound
or
xor
movsl
cwtl
cmp
cmp
fsubrl
mov
or
push
xor
sbb
iret
xchg
and
push
sub
iret
sub
jbe
mov
loope
or
popf
inc
push
sbb
and
push
into
sub
inc
pop
jmp
dec
sub
push
cmpb
loope
xor
cmp
hlt
mov
mov
pop
mov
lahf
and
and
inc
and
xor
pop
xchg
mov
jg
xlat
jns
xchg
adc
push
pop
xlat
mov
ffreep
punpckhdq
es
push
leave
dec
pusha
xlat
jo
xchg
leave
adc
jle
dec
sti
xor
cmp
repnz
xchg
loope
pop
and
adc
inc
jb
stos
jnp
imul
dec
movsb
adcl
dec
jo
call
lods
lea
into
imul
sbb
test
mov
gs
or
or
movsb
and
int3
pusha
popa
mov
aad
ds
jge
roll
jae
lea
lahf
push
stos
decl
or
shll
jl
jo
jecxz
jle
dec
sbb
fbld
outsb
in
mov
insl
jmp
daa
es
stos
or
sbb
outsl
shlb
fs
jle
outsl
repnz
and
outsl
cmpsl
cli
out
jno
dec
incb
fsubl
jecxz
js
fidivrs
clc
jp
dec
rcrl
push
outsl
int3
dec
sub
in
cmp
push
cwtl
arpl
ljmp
sbb
jge
mov
cli
dec
add
mov
jg
mov
sub
insl
cltd
cmpsl
push
test
out
jb
leave
ret
xor
popa
cmp
notb
fldenv
hlt
jmp
scas
popl
loope
dec
aam
loop
mov
jg
mov
push
push
push
int3
repz
arpl
loop
nop
test
mov
mov
xchg
fistpl
int3
and
cmpsl
push
in
add
push
mov
sub
les
jl
sub
fs
jecxz
das
je
cmp
mov
inc
mov
cmp
adc
ficompl
or
adc
dec
sbbl
cld
nop
lods
jbe
mov
cmp
or
dec
fstl
lcall
mov
nop
inc
and
addr16
popf
loopne
popf
std
lock
mulps
jmp
mov
imul
shl
and
mov
lods
loop
push
or
xlat
mov
dec
ret
xor
pop
mov
add
and
or
scas
loopne
sub
or
shll
add
mov
stos
inc
sbb
inc
jle
push
xor
insb
push
mov
std
test
or
ret
movsb
add
popa
shll
loop
add
mov
xor
mov
ss
aaa
sub
pop
jmp
les
push
popf
add
xor
mov
insl
jle
push
in
in
out
mov
jg
jb
sahf
mov
stc
mov
cmc
popa
add
push
push
mov
xor
and
or
pop
fs
add
sbb
cwtl
add
aad
fsubl
ja
sub
lcall
nop
out
jnp
hlt
xchg
xchg
jle
cltd
jecxz
je
imul
push
xchg
insl
push
add
iret
xchg
inc
stos
adc
mov
xchg
outsb
lds
stos
pop
mov
shll
rcrb
bound
scas
mov
mov
lods
push
orb
andl
notl
pop
sbb
sbb
dec
ficoms
push
mov
sbb
test
inc
pop
push
rcrl
xchg
mov
push
jb
cmc
ret
sbb
insl
sahf
jecxz
js
xor
dec
leave
mov
mov
or
and
ljmp
loope
push
loop
andb
cwtl
out
lock
or
das
loop
jecxz
scas
jecxz
or
idivl
ffree
sbb
adc
psrld
lret
notl
notb
cmp
sbb
dec
daa
add
cmc
xor
push
test
rcll
xchg
movsb
push
into
lret
rcl
sar
shlb
aas
dec
pushf
fbstp
fcompl
xchg
pop
push
add
aam
lahf
loope
je
popf
sub
mov
dec
orb
push
das
sbb
pop
jnp
mov
push
mov
scas
mov
int3
ljmp
enter
fisubrs
and
test
xchg
das
cmp
lods
fisttpl
mov
loopne
pop
mov
inc
lahf
xor
rcrb
sbb
loop
hlt
jge
andb
push
dec
cmpsl
rcll
push
pop
lock
lahf
push
sbb
lret
mov
in
cmpsl
lret
notb
pop
pop
stos
lcall
or
shlb
pusha
adc
push
outsl
imull
xchg
pop
push
mov
lods
cwtl
mov
xor
out
daa
add
sahf
push
js
ret
pop
mov
in
ret
xlat
in
inc
jb
mov
or
inc
push
in
repz
je
popa
pop
outsb
test
daa
sub
cmp
mov
sbb
mov
mov
imul
in
dec
data16
jmp
push
dec
mov
mov
sbb
cmc
shlb
sahf
add
inc
fnstenv
xor
js
mov
loop
jo
push
cli
dec
arpl
ret
xchg
les
outsb
jmp
cmp
add
test
ja
and
cmpsl
outsl
or
jp
or
cmp
cmc
xor
jnp
in
jae
bound
jbe
add
ljmp
mov
loopne
push
push
xchg
int3
pusha
xchg
pop
je
jl
divl
test
enter
adc
or
inc
dec
pop
xor
inc
mov
dec
scas
mov
lret
lods
push
mov
add
push
push
lods
ret
outsl
mov
cmp
cwtl
xchg
inc
int
std
cmp
stc
xchg
mov
inc
mov
mov
inc
dec
lcall
cmp
test
cltd
push
je
pop
out
repnz
and
test
mov
dec
and
dec
clc
or
daa
sahf
das
add
inc
rclb
push
in
inc
call
mov
mov
imul
mov
and
jge
das
inc
sbb
mov
jg
xchg
popl
lds
pop
push
fs
xchg
ds
xchg
mov
aas
mov
add
ja
fwait
xor
cltd
loope
out
mov
inc
mov
push
add
dec
jno
sub
lea
add
mov
inc
loopne
stc
mov
and
cs
mov
jecxz
mov
mov
mov
andl
ss
mov
in
push
or
inc
sbb
adc
add
jl
je
mov
ljmp
dec
stc
sbb
sub
in
out
adc
icebp
test
pop
pop
shrl
lods
int3
jecxz
or
xor
cmp
lods
mov
cmp
or
mov
inc
neg
or
std
int
pop
or
scas
add
pop
testl
push
popa
fwait
hlt
mov
hlt
fsubs
out
pop
in
dec
or
stos
push
mov
xor
sahf
cmc
mov
cmp
jecxz
xor
aad
mov
lret
sub
frstor
xor
imul
adc
rorl
imul
jbe
push
mov
in
mov
pushl
inc
outsl
dec
xor
mov
push
dec
xchg
dec
int3
push
mov
mov
add
lea
or
aam
inc
sbb
shrb
popf
push
inc
mov
dec
mov
mov
xor
pop
jnp
data16
xchg
notl
call
popa
push
inc
aas
sub
fdiv
outsl
subb
sub
xor
daa
and
or
in
jno
xchg
adc
jns
cli
pop
repnz
jg
jo
pushf
push
bound
mov
js
dec
mov
jle
cld
out
add
fidivrs
inc
jmp
mov
pop
and
mov
push
pop
mov
mov
shrd
jp,pt
mov
push
cmp
fsub
jb
sar
xchg
test
fcoml
and
mov
stos
cmpsl
push
leave
dec
add
cmp
jg
push
push
iret
out
scas
cld
pop
gs
leave
mov
shll
xchg
add
std
push
push
aas
push
xchg
push
inc
xchg
data16
test
in
in
arpl
jp
inc
inc
fdivs
lods
pop
adc
lahf
iret
jbe
arpl
cmpsb
mov
test
cltd
mov
jge
jge
test
fsubs
shl
add
cmp
fildl
int3
insl
scas
call
xchg
push
xchg
iret
push
inc
loopne
push
das
out
mov
incl
xchg
pop
sbb
xchg
aas
sub
stos
xor
adc
mov
inc
fldl
insl
stos
cmc
dec
je
ret
in
push
test
adc
fwait
in
xchg
fsubrp
dec
loop
sub
inc
mov
movsl
fiaddl
mov
std
ds
ds
jmp
sbb
cmpxchg
jmp
in
lods
es
in
inc
and
orb
or
and
jmp
or
pop
prefetch
in
std
xchg
imul
and
push
lds
scas
ss
push
data16
mov
mov
cmp
int3
popa
clc
pushf
jno
sub
mov
aam
insb
add
sub
sbb
cs
in
pop
stos
movsl
jo
and
fisubrs
inc
add
scas
test
xor
adc
cwtl
xchg
lcall
fwait
mov
dec
push
sub
pop
push
add
test
and
jp
ja
fstpt
aam
and
xor
fcom
inc
mov
cs
xchg
xchg
pop
test
xchg
das
cmc
out
adc
push
fldl
out
sbb
jae
push
repz
sub
aam
pop
xchg
jnp
das
in
fisubrs
fistps
ljmp
out
xchg
add
and
frstor
cmp
cmp
xchg
loopne
bound
add
test
or
lods
shrl
lods
aam
mov
push
adc
ficomps
mov
xchg
mov
mov
xor
adcb
in
and
jg
add
pop
or
mov
jne
mov
or
mov
cli
push
insb
or
push
movsl
pop
sbb
out
imul
movsb
cmp
rorb
aaa
mov
cmc
mov
test
sti
test
cwtl
inc
push
push
lods
adc
dec
call
inc
pop
scas
xchg
dec
in
sbb
cmp
adc
lds
out
rcr
test
insb
js
scas
pop
leave
xchg
inc
or
cmpsb
jae
shlb
xchg
push
mov
aam
sub
push
adc
imull
mov
and
mov
cs
push
push
jp
and
push
nop
pop
dec
fsubrl
xlat
and
sub
jae
loop
or
sti
push
add
cmpsl
mov
jge,pn
adc
mov
loop
fcmovnbe
icebp
jge
lret
dec
pop
mov
ror
pop
outsl
in
sub
loop
sub
xor
icebp
es
lods
cmp
pop
xor
and
push
inc
sbbl
adc
mov
lret
scas
pop
xor
call
sbb
iret
sbb
push
cmp
sbb
or
ds
add
mov
rcll
scas
pop
xchg
scas
and
and
push
xchg
insl
lods
in
arpl
lock
add
adc
add
fildl
fwait
lds
lea
cmpb
rcll
push
lds
or
pop
and
cmp
aas
enter
xor
push
ds
push
iret
stc
push
jbe
repz
mov
cmpsb
jo
cmp
pop
enter
ja
decb
ljmp
enter
std
shll
rcr
or
fisttpl
cld
sbb
mov
xor
rcpps
xchg
lods
out
out
and
pop
test
pop
add
add
repnz
xchg
aad
push
je
repnz
jl
fnstenv
xor
ret
cmc
xchg
pop
lea
popa
dec
test
std
test
sarb
jp
cmp
lods
push
jl
in
jecxz
mov
lret
aad
sbb
and
fbld
ret
sbb
out
loopne
stos
jne
loop
out
xchg
pop
outsb
in
or
ljmp
add
sahf
dec
jl
nop
sbb
adc
shrl
add
insb
shlb
les
in
sub
or
orb
xchg
jo
pop
pop
fiadds
testl
sbb
out
xor
icebp
pop
mov
lds
test
push
inc
inc
subl
lret
jno
or
dec
rcl
scas
pop
movsb
sbb
or
andb
pushl
pop
inc
roll
dec
add
pop
icebp
xor
xchg
dec
cmpsl
dec
std
mov
pop
in
jno
mov
orb
sbb
and
insl
clc
fsubr
cs
nop
inc
inc
jl
cli
or
xchg
inc
xor
mov
pop
mov
imul
into
inc
jne
add
mov
pushl
pusha
sbb
xchg
fistl
fadd
push
scas
cltd
push
ret
adc
push
push
and
xchg
mov
scas
push
rcrl
aad
add
mov
pop
iret
into
fsts
jo
clc
pusha
leave
test
mov
sub
dec
lcall
lods
inc
pop
fnstsw
repz
sub
test
or
or
rcrb
xchg
adc
pushf
fmul
loop
into
push
xorb
sti
xlat
inc
bound
aas
gs
das
vmovaps
and
cmp
je
jmp
shlb
fwait
push
adc
inc
aad
mov
hlt
fsts
dec
push
bnd
fnstsw
mov
mov
jg
out
gs
cltd
push
adc
pop
dec
jle
bound
push
xchg
mov
test
xchg
cmp
mov
pop
mov
mov
jae
push
gs
lcall
fwait
jo
jb
clc
mov
fwait
js
xor
mov
sti
out
pop
iret
mov
in
ficoml
in
mov
inc
sub
scas
popf
mov
dec
inc
pusha
cmp
cmpl
mov
xchg
pop
xchg
mov
jnp
mov
gs
xchg
push
or
iret
add
call
push
sahf
lahf
test
dec
lcall
mov
dec
sub
imul
mov
je
lock
push
xchg
mov
push
mov
fs
fstps
sahf
and
sahf
lods
lods
fistl
bts
mov
xorl
test
mov
mov
imul
cltd
into
jnp
cld
inc
sub
mov
add
in
mov
cmp
scas
xchg
hlt
popf
xor
scas
cmp
stc
pop
add
iret
out
sbb
xchg
xor
lahf
jmp
mov
cmp
mov
and
inc
jl
mov
mov
mov
mov
rcll
out
fistl
daa
in
fbstp
or
xor
jnp
imul
stos
adc
push
mov
mov
imul
jns
jge
push
mov
mov
xor
es
ja
push
adc
add
into
popf
jp
and
and
or
shll
scas
push
or
insb
cmp
jle
fwait
push
xchg
jp
out
jnp
or
mov
popf
jl
push
add
sbb
xor
push
mov
cli
cmp
xchg
stc
leave
and
inc
cmp
aas
int
mov
mov
sbbl
xorb
adc
dec
stc
jns
cltd
lret
ljmp
int
mov
or
mov
xchg
test
out
mov
add
mov
pop
cwtl
or
or
lea
pop
and
sti
cltd
fwait
push
mov
scas
lret
xchg
cmp
jle
cmpsb
push
int3
mov
shr
fstl
mov
js
mov
push
cmc
movsb
push
inc
hlt
jmp
jo
fdivs
xor
cmpsb
inc
negb
movsb
mov
pop
cmp
xor
divl
inc
jne
nop
mov
xchg
push
and
xlat
pop
jns
dec
ljmp
jmp
pop
xchg
orl
into
pop
sbb
hlt
push
sbb
shrl
mov
sub
xlat
rorl
adc
xchg
mov
mov
test
sbb
fcomip
fs
sub
js
sbb
cmp
aam
out
mulb
jae
cltd
and
imul
add
jecxz
cmp
shll
fisubrs
dec
jge
gs
jae
xor
popa
andb
xor
shlb
mov
loope
mov
adc
cmpsl
sbb
sbb
sub
ja
xor
popf
adc
andl
test
add
or
out
shl
fucomi
push
gs
dec
cmp
jns
in
push
imulb
pushf
andb
test
or
shrb
or
xor
dec
insb
scas
mov
adc
or
mov
xor
xor
out
scas
dec
pop
clc
add
push
sbb
sarl
aad
in
xchg
sub
flds
jne
mov
repnz
push
leave
dec
fsubrs
movsl
sbb
bound
in
dec
inc
ret
repz
mov
imul
std
fidivs
dec
cmpsb
push
out
dec
adcb
mov
imul
mov
jo
mov
fmuls
mov
aad
sbb
add
lret
cmp
sub
push
dec
int
shl
jge
add
adc
add
dec
movsl
cmp
dec
outsl
mov
aam
movsw
mov
jns
jns
pop
push
push
cmp
rcl
adc
mov
in
iret
xor
enter
mov
pop
je
shrl
arpl
arpl
mov
loop
xchg
enter
or
add
js
cmpsb
sub
adc
pop
jae
cmc
adc
mov
int
xor
insl
mov
clc
push
es
mov
in
pop
mov
aad
xor
xchg
xchg
sub
ret
fldenv
rclb
in
sarl
int3
and
aaa
loop
ret
or
jne
pop
cmp
push
scas
into
mov
aam
adc
inc
xchg
mov
into
push
cwtl
call
cmp
data16
mov
mov
mov
lea
dec
and
add
xchg
loope
mov
lods
call
or
stos
dec
add
jg
imul
mov
das
arpl
outsl
std
aaa
pop
loope
add
fisttpl
xlat
mov
mov
pop
ja
jnp
cld
mov
jno
or
aas
fisttpll
ret
call
scas
add
xchg
add
das
jge
outsb
das
xchg
rorb
in
outsb
jb
add
ret
xorb
nop
mov
xor
xchg
sub
mov
inc
negb
into
les
mov
inc
outsb
xchg
test
clc
mov
xchg
or
pop
mov
mov
daa
loop
les
dec
jge
insb
std
dec
in
outsb
out
mov
jmp
orl
xchg
mov
sub
push
mov
fldl
inc
sbb
mov
sbb
jae
orb
pop
mov
mov
dec
mov
sub
cmp
mov
jecxz
stc
xchg
ret
out
sbb
lret
xchg
pop
inc
dec
push
rcrb
ret
sub
mov
push
add
out
mov
test
pop
repz
mov
ja
scas
subl
stos
mov
push
or
stos
mov
jns
xor
sub
rclb
aas
xor
adc
jle
cmp
mov
mov
imul
enter
adc
mov
cltd
insl
pop
loop
push
add
outsb
ds
mov
cmc
fcmovb
loopne
jno
push
divl
and
inc
adc
test
lods
fstpl
add
mov
pop
aam
mov
movsb
out
and
cmc
std
xor
mov
xchg
sub
aas
es
pop
lods
fsts
mov
mov
pop
add
js
mov
icebp
cmp
mov
push
lret
loope
stos
fbstp
flds
lret
gs
fwait
sti
sbb
out
loope
dec
cmp
inc
xor
fdivrl
es
icebp
iret
sti
xchg
pusha
nop
xchg
ret
mov
movsl
sbb
and
ret
xchg
idivb
inc
ficoml
mov
hlt
in
fsts
cmp
jo
test
or
pop
xchg
lods
mov
dec
hlt
inc
xchg
stos
rcll
mov
xchg
mov
lret
xor
cmp
cmpsl
je
ret
dec
pop
insl
call
into
add
mov
sbb
cli
nop
and
dec
dec
pusha
test
sbb
mov
push
jle
in
dec
jne
scas
push
stos
cmp
insl
sbb
daa
rorb
jp
in
sbb
push
jp
push
repz
cs
jb
and
sbb
fs
fcomps
pop
or
xchg
scas
fwait
lret
and
repnz
imul
cld
addr16
inc
addr16
xor
jne
imul
fucom
push
in
inc
lret
cmc
ljmp
cli
mov
lds
imul
dec
cmp
out
sub
iret
mov
xchg
lret
mov
sub
scas
lods
or
mov
in
mov
lcall
pop
test
pop
insb
fbstp
out
ljmp
xor
das
je
adc
cmp
adc
jae
adc
pushf
negb
das
leave
xor
inc
and
leave
xchg
sub
jbe
mov
das
xor
pop
dec
sub
xchg
pop
iret
lock
loop
stc
pop
negb
jne
int3
sbbb
or
cwtl
mov
das
xchg
add
xor
adc
ss
sub
fucomp
lret
adc
inc
push
sub
in
push
mov
adc
faddl
scas
pop
inc
repnz
inc
sub
out
cmc
cmp
sbb
and
mov
ret
cs
mov
adc
jp
sub
lods
ficoms
mov
jnp
sub
mov
dec
mov
lret
scas
mov
fsubrl
push
test
test
jb
call
xchg
into
dec
mov
pop
mov
loop
pop
stos
pop
cmp
xchg
outsl
aaa
fcompl
sbb
mov
add
cmpl
stos
adc
jmp
stos
mov
mov
adc
adc
mov
scas
nop
lretw
lea
mov
cmp
pop
mov
jle
mov
pop
inc
mov
and
sahf
movb
int
ret
push
flds
xor
mov
mov
ret
fcomps
dec
test
out
outsl
in
cltd
fs
inc
les
inc
fstl
mov
pop
jo
xor
jge
pop
insb
xchg
idivb
into
lahf
stos
jmp
cmp
mov
jne
scas
xchg
inc
enter
jo
lods
xchg
xor
mov
movsl
push
sti
xor
scas
mov
sub
mov
sub
push
inc
or
inc
jbe
and
mov
int
out
clc
dec
pop
and
fdivp
js
pop
cwtl
sub
lds
mov
jo
add
inc
nop
lods
hlt
test
shll
or
rolb
sub
outsb
scas
adc
dec
or
sbb
out
out
or
jmp
sub
add
fcomps
xchg
pop
fs
jae
lea
outsb
jge
sub
lods
out
pop
test
loop
arpl
mov
ret
repnz
loop
ljmp
scas
inc
and
scas
addr16
add
xlat
push
or
cmp
movsl
adc
into
xchg
and
insl
out
les
sbb
cmpsb
pop
mov
pop
sbb
mov
in
pop
mov
mov
inc
pop
sti
push
inc
inc
and
inc
outsl
nop
cmpsb
cmp
sbb
mov
dec
fnstenv
adc
iret
test
scas
pop
in
lahf
iret
jbe
mov
fs
sub
xor
lods
push
cmp
faddl
in
ret
and
pop
popa
lods
mov
je
aam
ror
mov
out
xor
sbb
add
cmc
ds
loope
xlat
adc
jp
sbb
ficoms
xchg
mov
cmpsb
sti
cs
jmp
cmp
ret
adc
push
sbbl
adc
add
or
cli
cmpsb
pop
mov
test
sub
shlb
lret
hlt
hlt
cmpb
jg
add
dec
call
jbe
bnd
lock
fcoms
jno
insb
inc
aas
aam
jle
xchg
jp
inc
imul
pop
lds
decb
xchg
outsb
stos
sbb
lcall
pop
xor
pop
int3
testb
xor
or
mov
adc
and
mov
lods
addl
rcr
jo
inc
aas
cwtl
and
imul
pop
mov
outsb
fisttpl
adc
lret
cmp
cwtl
push
addr16
xor
push
mov
dec
inc
sbb
mov
cmpsl
insl
xchg
test
arpl
daa
mov
into
lds
insl
sub
loopne
nop
bound
xlat
sbb
jl
inc
in
popf
inc
or
adc
or
mov
pop
mov
adc
inc
in
imul
pop
cmpsl
and
push
sub
arpl
pop
int
test
xchg
in
repz
cmpb
cmp
loopne
popf
dec
mov
xchg
dec
and
dec
push
push
xor
mov
add
or
movb
and
xchg
jg
and
jb
dec
dec
jge
push
adc
pop
cmp
mov
dec
es
adc
pop
jl
push
out
cmpb
pop
jle
xchg
js
ret
jno
cli
cwtl
into
lcall
mov
ret
jp
xchg
sub
inc
insb
lcall
mov
int3
insb
sbb
xlat
sub
jns
aaa
cmp
inc
push
movsb
dec
roll
test
pop
int
jno
aam
mov
cltd
dec
jecxz
push
mov
sbb
jae
fsubl
mov
lea
lret
fdivrl
or
mov
mov
lock
ret
lods
pop
int
cwtl
lret
orb
call
sbb
aad
mov
jmp
movsb
mov
push
out
mov
pop
insl
inc
ljmp
je
push
xchg
and
mov
test
or
mov
mov
xor
adc
incl
or
mov
cmpsb
cwtl
jle
gs
jno
cwtl
mov
xchg
scas
fcompl
mov
and
lret
lock
insl
es
cmpsl
fisubl
mov
mov
and
lret
movsb
pop
push
test
jmp
jp
push
xchg
sbb
leave
fwait
jns
xchg
or
xchg
icebp
adc
cmp
push
fcomip
or
sbb
imul
sbb
ljmp
sub
scas
cmp
jg
push
jno
lods
jo
test
pop
pop
bound
inc
push
fadd
and
fs
mov
jecxz
inc
test
pushf
leave
ficomps
cwtl
lret
outsb
jmp
pop
and
fdiv
inc
jp
inc
jbe
popf
loopne
repz
insl
popl
xchg
dec
icebp
int3
jns
dec
dec
xchg
sti
testl
xor
imul
ljmp
sub
lahf
repz
mov
lahf
pop
xchg
test
lock
loope
stc
and
xorl
fstps
jae
jle
xchg
pop
dec
ljmp
mov
jge
out
pop
aas
dec
fcomps
sbb
mov
sbb
sbb
push
or
hlt
js
inc
sub
aas
negb
fstpl
subb
sbb
mov
jnp
and
imul
jmp
ja
adc
jmp
fidivrs
xchg
and
ss
xchg
adc
adc
cltd
add
incl
mov
repz
jne
gs
push
jo
push
scas
mov
pop
scas
outsb
mov
lret
jo
mov
in
scas
lret
cltd
arpl
int
push
nop
aad
push
mov
cmpsl
dec
mov
adc
mov
jl
cmp
xor
fbstp
inc
xchg
add
sbb
popf
mov
add
fdivr
xor
cmp
push
cmp
test
insb
test
bound
lods
shrb
xchg
pusha
mov
lea
inc
xchg
inc
dec
pop
gs
and
cli
aaa
push
xchg
lods
mov
xchg
insb
sub
js
js
pop
and
lret
jecxz
ret
mov
enter
bswap
mov
inc
test
pop
or
adc
leave
cmpl
scas
or
out
mov
mov
sbb
pusha
jecxz
pop
jle
movsb
popa
jno
arpl
sti
inc
stos
xor
jns
pop
and
mov
pusha
mov
repz
inc
xchg
push
dec
or
pop
clc
int
cmp
les
adc
roll
mov
xor
in
inc
xlat
mov
gs
cmp
and
jne
mov
rorb
dec
mov
rol
adc
movsb
pop
cmp
inc
popa
stos
xor
test
adc
mov
mov
mov
mov
std
push
js
jge
pushf
jle
out
add
out
xor
or
fucomip
cltd
push
push
and
mov
lcall
add
dec
testb
or
mov
sbb
loope
xchg
pop
test
and
jmp
popf
push
xchg
lcall
jmp
dec
sub
xchg
movsb
roll
popf
hlt
daa
lret
popf
xchg
clc
jnp
dec
jo
mov
push
outsb
inc
test
sbb
push
jge
xor
add
pop
sbb
loope
sbb
push
cmp
add
xlat
and
add
hlt
pop
fdivs
pop
add
cwtl
sub
xchg
mov
pop
cld
in
mov
cwtl
in
cmpsb
out
inc
adc
addr16
mov
daa
mov
sub
mov
repnz
push
mov
aam
adc
add
int
iret
lahf
jnp
ret
lea
push
repnz
popf
cmpsb
cmpsb
xchg
in
lds
add
insl
push
loop
pop
js
push
cmp
sub
push
aas
mov
mov
inc
xchg
mov
rorb
adc
shr
dec
outsl
push
fistl
xchg
fbld
pop
es
jg
inc
imul
xchg
cld
aaa
leave
sub
inc
add
addr16
in
jae
mov
pop
fmull
bound
pop
in
pop
push
push
mov
push
repnz
push
cmc
mov
fwait
idivl
add
jne
sub
sahf
addl
adc
add
xor
fdivs
xchg
mov
rcrl
xor
mov
adc
cmp
jb
xchg
jae
inc
rorb
out
test
aad
fstps
and
bound
push
rcl
inc
mov
push
pushf
adc
mov
pop
inc
mov
and
mov
sbb
xchg
xor
cwtl
testb
adc
mov
sub
je
sbb
out
or
xchg
outsb
sub
sbb
test
xchg
sbb
xchg
test
scas
pop
sahf
ret
pop
adc
lds
dec
push
adc
test
das
lea
idivl
or
mov
sbb
xchg
scas
cmp
movsl
sub
aas
cld
pop
fsts
lret
gs
ret
jecxz
sub
cmp
je
out
adc
stos
popf
adc
cmp
xchg
mov
scas
adc
cmp
scas
jecxz
push
mov
inc
inc
movsl
addl
mov
jecxz
push
adc
in
es
iret
icebp
stc
sarl
fildl
and
imul
cmpsl
mov
scas
rcrb
jnp
push
roll
repz
arpl
es
lods
or
outsl
push
cwtl
loope
jge
js
js
leave
dec
rolb
call
pop
jmp
sahf
out
fldenv
ja
negb
jnp
fimuls
int
cld
mov
mov
roll
and
fs
sbb
sbb
testb
sbb
cmp
scas
pop
je
testb
popa
or
aad
sub
adc
xchg
mull
mov
sbb
push
outsb
push
mov
push
mov
xchg
cmp
out
adc
and
notb
jle
ret
cmp
or
mov
xor
mov
sbb
popa
int
inc
inc
xchg
insl
adc
push
xchg
cs
icebp
pop
and
icebp
mov
add
lret
lods
push
add
shll
leave
out
sbb
daa
adc
mov
add
in
adc
enter
es
add
aaa
jle
in
mov
mov
jo
or
scas
out
inc
inc
ret
aaa
jb
test
stos
mov
sbb
ja
jae
cmp
ljmp
add
mov
pop
in
stos
push
push
stos
pushf
es
xchg
xor
ret
push
iret
xor
mull
mov
ja
adc
rorb
or
push
insl
and
mov
mov
pop
cs
lock
xor
sbb
out
fcoms
scas
mov
out
adc
jbe
xor
pop
repnz
jp
in
bound
loope
sahf
add
sub
sarl
out
mov
lock
iret
mov
jp
mov
or
jg
addr16
nop
mov
cmpsl
pop
inc
fldl
jae
lcall
sub
fwait
cld
pop
pop
fucom
pop
inc
test
ret
sbb
dec
pop
cmove
decl
adc
mov
sbb
mov
sbbb
mov
sbb
or
inc
fbld
sbb
mov
bound
or
out
cltd
fcomi
push
sbb
push
dec
push
in
mov
cmpsb
cld
mov
xorb
sub
rclb
add
mov
or
pop
mov
pop
rcl
div
sub
out
jbe
jmp
pop
jns
cmp
push
negb
xor
popf
clc
jp
sub
loope
ret
add
adc
push
lds
jg
sarb
xor
inc
gs
in
sahf
sarl
stos
dec
fs
or
jg
movsl
or
or
inc
pop
xor
mov
inc
jnp
negl
jg
mov
popa
cmp
ds
cmpsb
push
out
stos
dec
jbe
mov
movsb
lcall
in
push
insl
cltd
gs
jne
add
cwtl
aaa
stos
xlat
sub
mov
mov
test
and
shrl
mov
lods
fldl
sbb
mov
repnz
jb
jle
dec
mov
mov
xchg
add
bound
xor
test
sarl
orb
sub
xor
outsl
xchg
mov
pop
arpl
mov
fimull
xchg
mov
lods
scas
movsl
ja
scas
aas
lret
cmp
push
dec
pop
call
sbb
xchg
cli
or
mov
pop
cmp
dec
or
in
gs
pop
dec
push
or
add
sahf
push
std
lret
sarb
dec
icebp
sbb
jl
loopne
and
or
test
sbb
and
dec
subl
fsubl
lret
xchg
std
shrl
test
adc
and
mov
loopew
popf
ja
pop
push
xchg
icebp
ror
pop
sub
add
cmpl
fstpt
inc
test
es
sub
std
xor
gs
mov
push
and
ror
dec
inc
pop
dec
js
or
adc
out
sahf
test
push
in
xchg
stc
pop
xchg
xchg
dec
test
xor
jle
les
stos
mov
js
add
cmpsb
insl
adc
and
adc
adc
iret
mov
xor
lea
enter
xor
adc
cld
fwait
mov
loopne
dec
mov
addr16
jle
lret
andb
mov
rolb
outsb
push
lcall
jg
inc
mov
mov
mov
aad
in
pop
int3
adc
pop
xchg
jno
or
pop
dec
mov
pop
shlb
aas
and
xchg
mov
dec
xor
icebp
test
sbbl
mov
arpl
out
push
cmpb
lods
fidivrl
sbb
mov
gs
add
push
pop
ds
mov
add
pop
xchg
pop
insb
cmpl
xchg
xlat
jo
push
fisttpll
xchg
cmpb
sbb
pop
mov
imul
outsb
mov
push
or
mov
aad
sbb
mull
pusha
or
lahf
or
xor
pop
scas
je
adc
fisttps
ds
sub
jle
scas
push
push
js
icebp
sbb
pop
pop
mov
xlat
jmp
sbb
or
jp
sub
incl
andb
popa
and
fwait
movsl
jmp
cmp
into
jae
and
mov
jns
test
mov
mov
xor
jno
call
loop
bound
sbb
std
dec
lock
sbb
je
andb
insl
mov
push
ficompl
cmp
arpl
je
outsb
out
fs
lods
adc
adc
fwait
inc
xchg
ljmp
lods
rorl
or
add
je
ljmp
outsb
test
cmp
sarb
lcall
xchg
in
mov
jle
lcall
dec
ret
neg
mov
or
pusha
push
and
lea
shrb
ret
stos
iret
cmpsb
push
loope
fsub
sbb
add
push
mov
mov
addl
or
xchg
dec
stc
into
stc
stos
out
pop
jle
fnstenv
cld
jge
pop
mov
cld
add
sub
cmpsl
mov
pop
jbe
js
sub
sub
ds
out
ds
enter
add
cwtl
lds
pop
mov
push
ljmp
rcrl
sbb
call
xchg
stos
lods
pop
or
dec
xchg
jo
adc
xor
inc
sbb
sbbl
lcall
bound
cs
mov
push
mov
and
fdivrs
xorl
pusha
mov
push
out
mov
sti
push
xor
jns
and
ret
shlb
scas
lcall
push
scas
je
push
push
sbb
mov
jge
mov
call
jbe
push
cmp
or
mov
movsb
sub
push
cmpsl
jp
fwait
jns
xor
pop
int
sbb
or
fwait
fs
mov
icebp
mul
mov
mov
lods
pop
push
nop
iret
inc
in
push
ret
sub
pop
rcll
sub
repnz
cmpsb
cmc
sbb
or
pop
loope
push
lock
into
stos
fsubrl
sti
or
rclb
imul
adc
pusha
jge
stos
fs
lds
inc
and
lahf
scas
pushf
xlat
jb
inc
mov
jb
lret
add
and
call
insb
xchg
mov
cwtl
fnstenv
stos
pop
xchg
sti
pop
mov
inc
nop
xor
xor
dec
mov
mov
int
les
and
or
jne
enter
sbb
loope
fdivrp
fnstenv
inc
rcrb
insl
sbb
fsubrl
ret
inc
popf
or
in
pop
incl
int
mov
pop
enter
test
out
jnp
popa
repz
mov
pop
dec
loop
scas
push
in
jae
stc
jg
adc
popf
and
mov
adc
test
jo
mov
incb
in
mov
scas
popf
sub
ds
adc
enter
fs
pop
and
in
test
xchg
jle
xchg
mov
testb
or
arpl
xlat
test
mov
into
loope
fs
pop
inc
sbb
outsb
rcrl
jg
mov
xor
cmp
dec
cltd
in
xor
scas
int
popa
jno
adc
imul
jae
daa
cmp
in
adc
repnz
in
js
pop
mov
sub
ljmp
fcomip
movsl
jae
or
pop
or
xchg
loope
std
test
aam
mov
mov
pop
jae
push
sub
jne
mov
xor
stos
call
or
gs
and
cmp
pop
sahf
sub
hlt
inc
jbe
fsubr
je
xor
pop
pusha
lret
mov
in
mov
test
call
outsl
xchg
adc
cmp
add
aam
into
and
scas
sbb
cmp
sbb
jmp
push
xor
or
push
xlat
xchg
out
xor
sbb
sbb
int
or
push
push
sbb
loop
sahf
pop
and
aas
push
cmpl
xor
loop
fsubr
pop
pop
inc
cld
sub
dec
push
push
mov
scas
add
mov
adc
mov
mov
cltd
or
dec
daa
outsb
fmuls
add
insb
cli
and
push
inc
jae
call
into
or
jbe,pn
cmpsb
fisttpl
cmovb
sbb
pushf
ss
out
add
stc
mov
xchg
and
sub
aad
adc
ds
fisttpll
int
cmc
or
jle
adc
cwtl
add
psllq
adc
lea
mov
push
mov
xor
mov
xchg
movsb
out
inc
fnstsw
and
inc
xchg
gs
and
pop
insl
cmp
mov
dec
mov
mov
popf
push
je
jo
add
xchg
jp
dec
mov
inc
dec
mov
sub
add
mov
lret
mov
cwtl
cld
jnp
mov
out
repz
int3
jp
adc
adc
mov
jl
iret
push
cmp
paddw
mov
lea
xchg
inc
test
inc
les
stos
or
push
dec
or
or
rclb
roll
std
push
push
imul
not
mov
mov
fnstsw
xorb
push
lods
add
inc
ss
enter
adc
pop
push
lahf
xor
adc
inc
int3
mov
loopne
sub
std
cli
pop
inc
je
int3
aaa
fcompl
jp
cmpsl
cmpxchg
sarl
popa
mov
dec
in
adc
stos
sbbb
inc
pop
outsl
pop
cmp
cmp
push
inc
inc
lret
add
ljmp
dec
cmp
push
sahf
sbb
stos
pop
add
repnz
mov
imul
add
xor
cltd
sbb
fwait
test
or
int3
dec
push
adc
inc
fstpt
vmread
dec
scas
or
mov
orl
test
or
test
test
xchg
inc
testb
movb
aas
lcall
inc
aad
xchg
dec
fldenv
push
fildl
aaa
inc
mov
movsb
pusha
xchg
pop
mov
jno
jge
xlat
mov
aaa
mov
push
sub
test
mov
sbb
shrb
fsub
push
stos
addb
add
add
xchg
mov
adc
lahf
lcall
fnstcw
mov
sarb
or
jb
scas
push
pop
dec
fidivs
sub
pop
testl
push
out
pop
xchg
adc
push
mov
dec
dec
xchg
xchg
cltd
dec
xchg
bound
dec
loop
stos
inc
clc
dec
mov
xor
pop
push
ljmp
pop
les
out
rcrb
out
jle
inc
mov
adc
mov
leave
call
test
repnz
loop
jecxz
xor
call
sbb
in
mov
or
imul
mov
outsl
lcall
cmpsb
jl
scas
xchg
lock
xchg
in
sbb
inc
inc
pusha
mov
and
mov
daa
lcall
lods
pop
adc
mov
and
arpl
gs
jge
loopne
ret
test
int
push
cmp
lcall
test
add
in
mov
out
xor
rcrl
fptan
and
cli
mov
fidivs
or
fcompl
stos
jo
mov
andl
pop
mov
pop
sub
cli
jl
mov
pop
out
sbb
stc
mov
andl
or
fisttps
jnp
sarb
es
mov
out
sbb
inc
dec
in
and
out
and
jae
mov
movsb
and
jmp
xlat
dec
push
sbb
pop
cld
test
imul
in
add
repz
mov
or
and
repnz
lret
push
ljmp
aam
mov
icebp
mov
in
fsubrs
push
fwait
add
shrl
hlt
popf
sbbb
jae
xchg
cltd
and
jp
pusha
movsb
inc
in
xor
out
xchg
addr16
pop
mov
jmp
adc
cmp
inc
gs
imul
jbe
idivb
idiv
into
xchg
mov
cmp
push
sbb
orb
pusha
sar
xchg
xor
int3
in
hlt
dec
dec
cli
shl
ret
mov
jg
lcall
xchg
jg
out
lret
in
or
xchg
jbe
xchg
sbb
sub
es
into
sub
mov
jge
call
push
fstp
cmp
xor
ret
stc
lea
jmp
scas
adc
sbbl
xchg
inc
je
pop
inc
mov
je
stos
or
loopne
cmpsl
inc
pop
cmp
cmpsl
or
inc
xchg
sbb
sub
ret
adcb
xchg
add
imul
cwtl
cmp
es
or
mov
cmpl
ret
sbb
mov
aam
inc
add
xor
cmpsl
sub
movsb
or
out
adc
or
mov
lret
das
adcb
into
pop
inc
ljmp
jl
repnz
fsts
xchg
fisubrl
push
aas
call
mov
nop
adc
mov
and
jno
ds
add
iret
add
enter
fistps
lods
xorb
push
call
out
adc
lock
push
test
pop
or
fnstsw
sbb
xchg
lcall
je
mov
sarl
ret
in
fnstenv
out
dec
xor
and
push
incl
jbe
in
sahf
push
and
adc
push
into
inc
sub
pop
cwtl
sbb
fisubrl
leave
loope
or
or
sub
sti
fisttpll
push
mov
mov
repz
mov
xor
lock
sub
jns
cmp
iret
das
push
push
jmp
jbe
int
push
repz
call
xlat
jle
loope
cmp
inc
notb
dec
inc
out
add
push
and
pop
and
and
push
cs
outsl
inc
fstpl
sbb
and
movsb
sbb
cmp
cmp
pop
xchg
jmp
and
push
inc
sarb
repz
xchg
sbb
push
or
loope
sahf
in
leave
lcall
mov
jp
sub
adc
dec
xchg
push
das
rolb
cli
daa
pop
jo
xor
push
pop
jae
sbb
dec
push
adc
cmp
test
mov
add
ret
cmp
aam
add
cmpsl
mov
adc
sbb
xor
jnp
inc
mov
rclb
push
popf
dec
jb
hlt
or
gs
xchg
inc
adc
mov
fs
add
pop
test
xchg
mov
jnp
mov
or
or
popf
mov
pushf
adc
cmp
inc
mov
sub
mov
popf
scas
lds
gs
sti
stos
push
dec
js
dec
into
lods
mov
iret
mov
xor
dec
sub
cmpsl
mov
jbe
movsb
lds
ss
push
je
repnz
in
xchg
popw
inc
sahf
push
xor
les
ljmp
popa
imull
mov
popa
data16
test
cmp
or
or
ljmp
fnstcw
cltd
bound
hlt
shll
add
mov
and
sub
pop
or
das
or
scas
inc
mov
sbb
fsubl
test
sub
mov
movsl
add
pop
lods
pop
adc
adc
loop
pop
dec
jg
push
repnz
mov
pop
das
dec
loopne
add
mov
mov
pop
cwtl
adc
push
sub
je
inc
adc
dec
in
cli
lahf
xor
xor
inc
mov
sti
int3
aaa
gs
mov
sub
and
xchg
push
add
inc
push
loop
daa
out
fs
in
sub
cmpsl
mov
mov
sbb
fbld
aas
and
rolb
call
jnp
adc
jp
add
ror
push
scas
or
lea
adc
push
mov
in
cmpsb
dec
pusha
jo
gs
push
push
xor
out
repz
xor
shll
inc
loopne
scas
adc
xlat
out
popa
push
xchg
xchg
ss
sbb
cmpsb
shr
xlat
andl
xchg
or
cs
lds
push
ret
int3
adc
jl
lret
and
int
arpl
cmp
shlb
bound
lahf
enter
loopne
sarl
mov
xor
imul
fisubs
jo
mulb
cmpxchg
unpckhps
ljmp
movsb
loop
and
stos
popa
sbb
js
iret
or
es
mov
adc
sbb
popa
jp
lods
insb
push
lock
mov
push
cmp
jo
mov
mov
cltd
mov
arpl
jae
xchg
xchg
mov
iret
xor
mov
imul
jae
push
mov
push
data16
jmp
out
scas
add
das
jae
fcomps
and
loopne
loopne
ror
mov
leave
out
fwait
cmp
sahf
stos
push
add
cmp
fs
mov
inc
xchg
mov
inc
gs
mulb
addr16
cld
mov
popf
dec
mov
dec
loopne
in
lahf
or
cs
clc
add
iret
js
mov
sub
ret
xchg
ljmp
ss
jg
loopne
enter
jg
pop
jle
in
pop
ja
dec
in
in
into
xlat
xor
pop
sub
js
and
aad
icebp
xchg
cmpsl
cmp
and
inc
iret
inc
les
hlt
push
popf
xor
out
xchg
orl
add
insb
cmpsl
mov
mov
sbb
mov
ds
fmuls
mov
into
jle
xor
adc
pushf
lods
lahf
push
mov
pop
mov
inc
sbb
mov
inc
adc
mov
rclb
out
lock
or
cmpb
sbb
cmp
jno
dec
cwtl
push
xchg
ret
rcrb
jge
dec
xchg
les
gs
mov
rorl
mov
inc
mov
xchg
pop
push
and
pop
shr
inc
frstor
pop
lods
pusha
mov
aad
iret
lea
das
sbb
out
push
popa
mulb
ficoml
aaa
dec
cmp
xchg
ss
stos
outsl
sar
fsubs
mov
scas
dec
test
fists
xchg
mov
jne
cmp
mov
pop
xchg
mov
pop
fdivrs
pop
sbb
cmp
lahf
sub
cmp
jle
pop
xor
mov
push
jnp
stc
daa
sbb
fmull
xor
pop
ds
mov
std
stc
sub
ds
cmpsl
das
mov
add
jecxz
and
and
fcompl
mov
sbb
stos
in
lret
movsl
mov
mov
sub
orb
shlb
jns
into
adc
outsl
sbb
adc
and
adc
in
push
mov
icebp
daa
sbb
les
dec
lahf
sbb
int3
push
pop
jg
cmp
pop
out
mov
sbb
push
iret
js
rcll
xor
test
daa
lods
lds
and
insb
test
push
mov
and
in
or
jae
jne
cmpb
scas
inc
dec
adc
lock
dec
fcompl
shrl
sbb
xor
cmp
loop
addr16
rolb
jecxz
call
outsl
dec
jl
mov
and
sahf
pusha
mov
inc
pop
xchg
adc
scas
shrl
add
inc
in
sub
shrb
stc
jmp
les
xchg
mov
cmpsb
mov
into
mov
push
lcall
in
and
sub
push
ficompl
into
mull
movsl
lock
call
pusha
or
push
jne
cmp
in
and
push
repnz
lock
addr16
and
scas
insl
xchg
mov
rcpps
ljmp
imull
add
mov
sbb
jecxz
in
mov
sbb
stc
call
lods
dec
mov
sbb
cwtl
loop
and
imul
insl
int
movsl
es
dec
mov
add
inc
mov
xchg
or
test
xchg
das
lcall
cmpsl
pop
out
xchg
mov
dec
inc
sbb
js
cli
mov
xor
sahf
scas
pop
stos
cmp
scas
xchg
pushf
xchg
test
mov
xchg
sub
cmc
divl
or
mov
push
xor
test
pop
xchg
xor
mov
mov
or
loop
push
jbe
jns
in
scas
mov
test
xchg
fildll
pop
sbb
cmp
xchg
mov
and
inc
ja
rclb
jg
xchg
cld
mov
jno
mov
mov
out
cmpl
inc
sub
sub
les
xchg
test
mov
fidivrs
inc
cmp
or
in
dec
into
lahf
mov
adc
jnp
lret
pop
stos
sub
fsubrs
js
andw
test
idivb
or
jg
jne
pop
pushf
imul
cltd
bound
xchg
pop
les
dec
test
scas
ds
das
dec
in
mov
sbb
mov
mov
inc
jge
scas
jg
inc
dec
pop
aas
mov
or
in
mov
sbb
cmpsb
aas
aam
push
mov
cs
fcomps
mov
mov
rorb
addr16
mov
push
iret
mov
in
addr16
dec
push
xor
in
popa
inc
inc
dec
outsl
fidivrl
das
lods
mov
rcrl
mov
and
adcl
jb
xor
jge
repz
xor
shll
in
cs
pop
clc
in
out
cmc
sub
test
mov
test
pop
sub
jl
es
ds
das
xor
dec
jae,pt
cltd
add
mov
pop
add
cmp
inc
inc
dec
jmp
push
and
or
push
pop
aaa
jmp
in
cwtl
shlb
mov
or
faddp
test
xchg
xor
shr
mov
xlat
daa
mov
out
into
xor
divl
add
xchg
loop
mov
xor
xchg
mov
push
xlat
mov
add
movsb
dec
out
push
sbb
adc
add
or
mov
pop
jecxz
test
jb
in
pop
mov
mov
sbb
leave
sub
bound
xlat
sbb
out
mov
int3
outsl
adc
xchg
push
pop
pop
fcmovnbe
mov
sarb
push
adc
mov
adc
add
mov
mov
arpl
loope
mov
jb
mov
inc
stos
stc
or
sarl
ja
popa
xlat
sub
mov
aaa
inc
fistl
adc
pop
fsubs
and
jl
fcoms
xor
shll
sti
stos
out
dec
cmc
sbb
cmp
jl
clc
pop
outsl
aam
pop
repz
dec
nop
mov
inc
inc
inc
cmp
faddl
in
jp
or
lods
jae
mov
cmp
xchg
test
inc
int
xchg
fs
test
ds
in
fldt
xor
rcrb
lret
add
fwait
js
push
push
jmp
cmp
fcompl
loope
xor
inc
lods
aad
cmp
out
jg
ftst
jecxz
sub
adc
xchg
in
mov
int3
insl
in
xor
fs
push
inc
std
or
aas
cmpsb
loopne
cwtl
or
inc
cld
pop
add
cmp
leave
out
scas
insl
xchg
jecxz
xor
enter
push
cmp
pusha
lret
pop
insb
pop
inc
lahf
cwtl
adc
dec
test
sub
punpcklbw
andb
movsl
push
orl
lods
shl
std
xor
loopne
leave
imul
imul
xlat
mov
addb
stos
bound
fsubrl
les
ds
mov
movsb
mov
mov
add
sahf
jg
or
mov
lret
xor
sbb
arpl
dec
mov
shrb
mov
cmp
mov
leave
add
and
daa
inc
jbe
call
fs
cwtl
sbb
add
jle
scas
fadd
outsl
push
sbb
mov
pop
stos
mov
out
arpl
sub
call
shlb
adc
mov
sub
ja
ljmp
xchg
fcmovb
jle
movb
ret
and
lret
notb
sbb
test
test
andb
stos
inc
lds
js
lcall
cmp
and
iret
int
cmp
test
aaa
inc
scas
add
xchg
adc
movsb
pop
push
add
and
sub
js
cwtl
jmp
cmpl
mov
sbb
in
or
mov
andl
or
cmp
shl
in
pandn
and
je
xor
dec
addr16
mov
or
jg
in
repnz
push
outsl
loopne
push
xchg
adc
fnsave
in
inc
cwtl
insb
ja
addr16
orb
pop
lahf
frstor
and
scas
mov
into
adc
shlb
lahf
stc
inc
push
mov
sbb
inc
adc
jo
test
imul
cs
sub
push
pushf
arpl
and
mov
pop
push
add
sub
sub
jae
sbb
inc
sub
rolb
xchg
and
sbb
xchg
cld
movsb
je
xchg
out
mov
mov
das
or
outsb
jle
sub
pushf
jae
jmp
xorb
jg
pop
pop
bnd
loop
shll
push
shlb
je
push
xchg
shlb
and
add
jae
out
notl
pop
mov
sub
sbb
imul
ret
add
push
inc
dec
xchg
rcl
lret
cmpsl
xchg
into
out
loope
scas
je
dec
adc
stos
fadds
add
xchg
in
add
notb
dec
cmpsl
in
lea
or
dec
push
push
jns
in
inc
add
cmpsb
or
mull
cltd
gs
dec
ret
sahf
je
mov
inc
not
mov
sbb
popf
or
lods
inc
int3
gs
push
add
sub
nop
out
bound
pop
shlb
rcl
je
mov
dec
mov
add
jnp
gs
sbb
jbe
hlt
pop
xor
cs
dec
jmp
movsl
roll
orl
sti
xchg
dec
jmp
sub
jnp
cmp
pop
insb
jmp
mov
mov
sub
iret
ret
pop
mov
inc
rcll
cld
mov
sbb
or
ret
daa
mov
xorl
or
repz
aam
inc
out
lock
ds
mov
push
cmpsl
shll
xorl
frstor
aam
loopne,pt
test
cmp
test
fdivrs
outsb
push
icebp
cmpsb
mov
mov
sbb
inc
lret
mov
aaa
mov
iret
sbb
lods
push
shr
aas
add
popl
lods
mov
shlb
ror
mov
mov
fldl
pop
repz
int
and
jp
jnp
jecxz
pop
cmp
push
add
jb
push
ds
adc
lret
cmp
and
stos
cmpsb
pop
pop
gs
fidivrs
and
push
mov
stos
out
mov
idivl
ljmp
add
mov
push
pop
cmp
lds
jbe
cli
sti
xor
popl
insb
sahf
imul
insl
fcomip
cmp
mov
add
int
call
mov
or
js
pushf
dec
int
xchg
adc
sub
mov
adc
dec
dec
and
xchg
mov
jmp
pop
push
mov
movl
roll
lahf
in
scas
ret
and
rclb
pusha
ret
adc
test
inc
add
pop
pop
jl
sbb
in
sbb
mov
leave
mov
sti
lahf
das
inc
fcoml
and
aaa
jb
cmc
mov
mov
ss
or
dec
adc
push
jo
imul
insb
jne
mov
dec
test
push
fsubs
ja
fsts
clc
neg
loop
dec
fidivl
aas
mov
movsl
inc
in
sub
xchg
xor
outsb
sahf
in
lret
add
dec
cli
pop
inc
and
and
icebp
test
jp
mov
out
pop
lds
lods
pushf
loopne
push
cmp
xor
cmp
pop
jae
test
sti
mov
dec
aad
aas
pop
push
addr16
daa
lcall
mov
jmp
outsb
jg
jbe
lods
and
cmp
mov
dec
fcomp
sub
lret
adc
lods
mov
xor
loop
ffreep
mov
imul
jno
cmp
ret
sub
movsl
mov
adc
jmp
mov
pop
dec
dec
rcrb
bound
jl
sub
js
leave
mov
jo
dec
sahf
test
push
lret
lods
mull
mov
push
xchg
or
xchg
aad
inc
fwait
jb
out
cli
sbb
ud0
aas
rcrl
mov
inc
out
cmpl
xor
scas
shll
incb
lods
dec
push
mov
dec
inc
call
mulb
fwait
sbb
mov
cmpl
mov
add
arpl
fsubl
shr
mov
out
sbb
xchg
js
pop
xor
enter
out
inc
cmp
pop
mov
push
stc
cli
xor
and
adc
jl
and
xor
add
aam
sbb
ret
mov
cmp
test
inc
mov
cltd
mov
jecxz
and
push
pop
lods
addr16
mov
into
fidivrl
inc
orb
in
pusha
out
xchg
xchg
stos
or
jns
inc
mov
and
sbb
test
inc
jg
xchg
dec
inc
jno
test
or
sbb
pop
dec
rorb
scas
stos
add
out
lret
dec
push
mov
mov
jle
inc
inc
mov
insl
in
insb
jbe
call
lds
lods
sti
out
lea
sub
in
and
inc
out
test
xchg
xor
outsl
mov
sub
mov
cltd
and
cmp
mov
pop
cmp
jp
es
repz
mov
cmpsl
or
mov
ds
inc
test
cli
stos
or
and
xor
lret
pop
cwtl
cmp
pop
xor
or
loopne
push
or
lods
bound
sbb
shll
pop
out
dec
test
sub
pop
ljmp
cmpb
dec
push
dec
divb
test
das
int3
ret
loopne
sub
test
movsb
sbb
sbb
aam
lea
aaa
pusha
popa
or
jae
jno
xor
scas
adc
pop
and
scas
mov
subl
outsl
dec
fstp
mov
dec
inc
jecxz
pop
jnp
sub
mov
xchg
ja
jp
psllq
stc
pusha
add
icebp
cmpsl
or
fildll
pop
push
sbbb
ljmp
fbstp
mov
dec
lods
leave
jnp
and
fcompl
inc
mov
sub
lret
push
lcall
mov
sbb
jns
dec
nop
push
stc
pop
or
roll
xchg
movsb
adc
xor
mov
fidivl
jecxz
test
loop
mov
mov
xchg
xchg
jb
rcll
aas
or
sar
pushf
test
inc
lret
mull
scas
push
pop
das
test
movsl
xlat
inc
xchg
pushf
or
fidivl
pop
xor
es
mov
pop
addl
outsl
mov
dec
roll
sub
inc
pop
js
pop
incb
mov
inc
dec
inc
or
ss
cmc
dec
mov
push
repz
dec
jb
lods
and
fstl
pusha
add
pop
push
add
daa
repnz
pop
aad
scas
shlb
push
shrl
outsl
push
jg
insl
push
stos
add
mov
dec
stc
or
rcrl
cmp
fstpl
lods
sub
adc
scas
nop
cmpl
cmc
push
cli
add
pop
or
mov
fstps
xchg
outsl
sahf
cmp
mov
or
ja
leave
sub
ret
add
dec
addr16
cmpsl
xor
mov
jmp
arpl
aam
cmpsb
sbb
cmp
out
stos
lods
loopne
data16
mov
loop
notb
xor
int3
jns
leave
rcrb
inc
inc
add
dec
sub
pop
lahf
or
sub
adc
enter
cmp
cmp
inc
and
or
mov
sub
mov
fadd
pop
cmp
insb
dec
mov
jb
push
nop
sub
xchg
push
inc
dec
fsubp
adc
mov
push
push
jae
xchg
mov
cli
mov
cmp
jo
imul
jbe
mov
out
xor
mov
aad
div
loop
jbe
mov
aam
adc
mov
adc
andb
out
shlb
cmpsb
sub
test
popf
jnp
cltd
sbbb
or
lds
pop
negl
cmp
push
ficomps
sub
dec
adc
push
movsl
popa
sub
icebp
or
mov
push
aam
test
pop
cmp
push
in
push
mov
lock
jnp
adc
push
cmp
je
shr
sbb
jo
xchg
push
push
pushf
iret
adc
scas
pushf
call
cmp
pop
ljmp
cld
cwtl
repnz
daa
sbb
inc
outsl
sub
lcall
sub
loopne
in
mov
inc
pushf
xor
fs
shrl
mov
ja
scas
and
icebp
mov
mov
pop
jbe
leave
dec
xor
xor
sbb
adc
push
push
xchg
inc
cmpsb
xchg
stos
jge
test
mov
pop
jle
push
inc
mov
push
or
push
jb
adc
dec
push
mov
xchg
aad
mov
aad
push
and
lea
pop
mov
inc
mov
xchg
adc
imul
mov
xor
nop
cld
ret
fldt
mov
xchg
leave
push
fiaddl
and
or
std
fstpl
fwait
pop
mov
inc
ret
and
fisubrl
xor
mov
sub
cmp
inc
sub
mov
movl
and
cltd
adc
mov
aaa
jae
bound
mov
sub
psllw
fs
addr16
cmp
jp
push
mov
sbb
pop
sub
mov
cmpb
loopne
or
push
dec
lahf
xchg
bound
push
jae
loopne
shl
aam
data16
shrl
imul
mov
mov
or
inc
scas
ljmp
cmp
push
out
cmpsb
xchg
fs
ret
cmp
and
insb
in
aas
das
pop
mov
ja
lret
xor
insl
cwtl
fwait
cmpsl
cli
fcmovbe
scas
dec
add
mov
and
fwait
jo
inc
cmpl
and
fcompl
push
lahf
xor
pop
xchg
out
stc
ja
mov
cltd
pop
hlt
out
pop
lret
scas
push
xchg
inc
mov
fdivs
and
xor
fildl
in
or
je
inc
jp
popa
pushf
scas
stc
sbb
std
das
or
inc
cmp
les
loope
lea
and
dec
xchg
rcrb
cmp
mov
insb
aad
and
sar
std
sub
pop
arpl
fnstenv
jle
fisttpll
lret
and
cs
xor
jnp
out
pop
push
mov
cmp
cmp
and
fs
imul
mov
loop
xor
add
mov
lods
insl
xor
popa
dec
test
xchg
scas
outsb
xchg
cmc
shll
imul
pop
adc
mov
roll
call
sti
push
mov
xor
xchg
mov
mov
or
imul
inc
inc
adc
xchg
push
das
xchg
adc
mov
pushf
je
loope
sbb
insb
mov
jb
xchg
vsubpd
pushf
jecxz
mov
fidivl
icebp
and
fisttps
cld
icebp
mov
out
ljmp
sbb
mov
js
jl
push
movsl
cmc
dec
inc
push
cmp
pop
push
hlt
fldcw
xchg
adc
ror
ret
mov
push
loop
and
out
sbb
imul
popa
imul
pop
sub
repz
push
add
jg
mov
mov
mov
ljmp
jmp
push
push
inc
and
pop
dec
rcr
xchg
movsl
xor
or
jle
pop
mov
push
jb
repz
loop
mov
xchg
repnz
je
dec
hlt
pop
and
aad
cli
lds
lods
mov
mov
stos
push
push
cmp
jecxz
jns
adcb
scas
cmp
dec
xor
and
popl
sti
popf
subb
push
mov
mov
mov
pcmpeqb
pop
jmp
sub
mov
add
add
pop
dec
sbb
xor
mov
adc
mov
lds
iret
sub
gs
test
mov
jge
int
or
int3
adc
ret
inc
add
outsl
pusha
shlb
adc
rorb
ficomps
push
lods
js
cmpsl
dec
out
gs
mov
cmp
push
int3
add
adc
cld
xchg
rclb
dec
add
jns
cltd
or
pop
out
ds
xor
into
stos
xor
pop
pop
pop
pop
jne
shlb
dec
ret
stos
cmp
lods
mov
mov
das
adc
mov
ja
mov
gs
testl
ss
push
sti
add
dec
imul
sti
outsb
and
xlat
rcr
push
and
or
mov
inc
cmpsl
mov
pop
dec
dec
pop
call
cld
jbe
pop
cli
fbstp
adc
mov
movsb
mov
dec
xchg
or
hlt
mov
push
fs
mov
test
iret
sub
push
fsubrl
or
add
cmp
push
mov
hlt
cmp
lret
push
pushf
push
test
jo
add
push
aad
mov
xor
sbb
xor
adc
sbb
pop
fisubrs
mov
ficomps
mulb
out
cs
rcr
xor
repnz
dec
imul
insb
adc
iret
pop
sbb
dec
cmp
inc
fwait
mov
xchg
xor
gs
adc
dec
cli
push
add
test
stos
push
loop
lcall
fbstp
iret
push
fdivs
sub
outsl
pop
sbbl
addr16
das
loopne
lret
add
lret
je
fisubs
fadd
jb
sbb
sub
xor
dec
insb
xchg
lods
xor
fstpl
adc
sub
mov
je
mov
bound
jb
ja
pop
add
dec
mov
clc
lret
ds
mov
dec
jmp
cmc
adc
daa
aam
aas
mov
jmp
adc
mov
call
pop
clc
mov
inc
pop
dec
pop
inc
sub
mov
mov
mov
loope
test
enter
outsb
into
out
jb
into
popa
push
adc
icebp
xchg
bound
loope
and
push
mov
js
iret
mov
test
icebp
inc
int3
mov
mov
arpl
push
xchg
popa
mov
dec
jo
cmp
xchg
call
mov
mov
cld
inc
ret
fs
ja
jnp
inc
ljmp
dec
mov
or
in
fs
inc
aam
dec
xchg
dec
inc
stos
cmp
ja
loop
bound
in
dec
jb
int
xchg
insl
xor
imul
adc
ja
movsb
xlat
dec
jg
sub
and
repz
pop
mov
jp
movsl
sti
push
imul
mov
notb
mov
pusha
xchg
cmpsl
lods
mov
mov
ret
popa
aaa
jae
mov
push
sbb
ret
decl
pop
test
jne
xor
add
mov
mov
push
xchg
xchg
sub
bound
inc
mov
sbb
jmp
movsl
sub
es
add
mov
shlb
mov
xor
xchg
sti
mov
mov
sbb
xchg
js
clc
jns
js
ljmp
push
lahf
pop
mov
or
aas
push
adc
adc
jl
stc
cmc
rorb
push
mov
outsb
or
cmp
and
lds
sarl
sub
mov
mov
pop
mov
pop
xchg
arpl
jb
inc
arpl
sub
test
lods
mov
add
mov
xchg
sub
lret
stc
adc
adc
mov
and
push
sahf
push
push
cwtl
lock
arpl
mov
dec
jbe
btl
dec
pop
sti
jne
lods
out
or
stos
inc
cmp
xchg
dec
iret
push
in
mov
cmp
sub
les
clc
daa
fiadds
lret
mov
lods
mul
dec
inc
sbb
sub
adc
imul
and
sahf
aaa
add
inc
pop
jle
dec
aaa
fmulp
pop
jp
push
insb
rclb
fstpt
aaa
cltd
sbb
out
scas
inc
jns
movsl
cwtl
arpl
jno
mov
add
fists
nop
cmpsb
dec
pop
jns
push
cwtl
jecxz
add
arpl
sti
movl
push
inc
lea
addr16
aaa
sbb
fisubrl
jbe
ss
inc
out
fs
xchg
xor
sbb
xchg
adc
push
xor
inc
and
cwtl
pop
scas
idivl
or
cltd
insb
lret
adc
jno
jne
out
subl
test
jnp
jp
sub
das
and
mov
jg
inc
or
pop
dec
out
mov
push
adc
xor
stos
or
mov
out
mov
lea
xor
jmp
pop
pusha
les
dec
fildl
lahf
pop
inc
mov
or
int
cmp
jns
std
lcall
add
out
adc
add
inc
ljmp
fldt
push
cmc
and
sbb
jp
aam
stc
bound
mov
mov
lret
mov
add
bnd
mov
xchg
jnp
xchg
adc
ds
sub
ret
push
pop
jo
cmp
in
addr16
testb
push
jecxz
icebp
push
lahf
test
imul
mov
fld1
sbb
pusha
cmpsb
test
lds
push
sbb
js
adc
shlb
lods
ds
mov
and
push
dec
sti
push
daa
fs
pushf
push
mov
ljmp
in
out
enter
hlt
out
push
aaa
lahf
pop
je
fsubp
ret
jl
sbb
test
jne
aam
aad
xor
jno
loopne
xor
jmp
and
mov
sahf
dec
mov
fistps
int
mov
sbb
xchg
test
mov
jb
rcrb
mov
lea
push
sbb
stos
push
pop
aas
fnstenv
dec
mov
mov
das
fbld
fistpll
mov
popa
rcrb
xchg
aaa
lret
and
lds
or
or
lret
sbb
in
inc
xor
test
jmp
int3
in
test
sbb
les
sub
les
mov
mov
jg
mov
cmp
and
and
sbb
fldcw
rorl
je
mov
fcomps
cld
movb
rclb
sbb
sbb
cmp
inc
sbb
pusha
test
cmp
ret
out
imull
aas
aas
mov
xchg
dec
or
cmp
int3
and
in
int
mov
sub
sub
mov
les
adc
jp
jp
aaa
dec
add
mov
jmp
push
xchg
daa
cli
cmp
jecxz
cmc
xchg
sub
xor
scas
xchg
imul
mov
pop
divb
xorl
cs
push
xor
scas
jae
or
loope
cmp
int
aas
bnd
sbb
shl
mov
in
adc
out
add
out
sbb
hlt
push
int3
jecxz
xchg
mov
notb
ljmp
int3
push
push
fwait
xchg
insb
mov
jae
mov
mov
rclb
fcoml
addb
xchg
sub
pop
sbb
shrb
jmp
lds
je
cmp
xor
cltd
pop
popf
mov
pop
ret
aad
ds
repnz
outsb
mov
std
adc
in
insb
push
testb
lock
loopne
xchg
lahf
and
jecxz
cltd
sahf
gs
pop
dec
sub
add
nop
pusha
xor
or
mov
jo
out
shrl
mov
aam
shll
mov
dec
mov
shl
test
in
xchg
adc
mov
scas
jne
in
fwait
pop
ja
test
popf
inc
dec
push
imul
stos
cmp
xlat
sahf
push
aas
mov
mov
loopne
aad
dec
incl
test
frstor
sbb
and
inc
popf
cwtl
fistpll
rcrl
xor
push
or
icebp
stos
pop
sub
gs
push
jp
xor
in
sub
outsl
pop
lcall
inc
sub
insb
mov
pop
call
pop
and
cmp
movsl
or
jo
mov
push
or
and
cld
fidivrs
repnz
adc
add
dec
les
mov
inc
mov
out
iret
addb
loop
xor
pop
inc
push
aam
or
add
cmp
mull
imul
shl
sub
add
addl
dec
fdivs
bound
fcomps
mov
les
outsb
int3
mov
aaa
test
addl
add
int3
or
mov
pop
std
mov
mov
jbe
out
inc
sbb
arpl
loop
mov
pop
shrb
sti
push
sub
pop
or
aaa
cmp
xchg
test
or
push
mov
jle
jle
aad
lds
enter
xor
cmp
adc
imull
adc
and
mov
out
int3
sbb
das
mov
dec
inc
xchg
lret
xchg
xor
pushf
adc
push
fists
and
stc
sub
pop
push
lds
aas
pop
jge
xchg
add
and
and
jo
jl
xor
sbb
and
pop
pop
negb
push
xchg
jnp
ret
sub
in
out
mov
pop
lds
mov
pop
xchg
mov
cwtl
xchg
cmp
imulb
sub
mov
insl
imul
lock
push
movsl
insl
je
jae
adc
mov
aaa
rorl
xchg
je
xor
scas
and
mov
decl
lret
add
je
loop
std
cmp
or
cld
insb
add
adc
faddl
mov
add
enter
sarb
lods
xchg
loopne
mov
jae
adc
adc
jecxz
push
movsl
add
sbb
mov
jo
dec
mov
lahf
lods
inc
cwtl
cmpsl
adc
in
push
aam
mov
mov
mov
aas
ss
stc
negl
push
repnz
rcl
orb
fs
sbb
hlt
cs
push
dec
push
push
mov
pushf
mull
cwtl
repz
hlt
jno,pn
fadds
in
mov
bswap
lahf
lcall
xor
out
cmp
mov
dec
popa
push
inc
das
cmp
cld
test
fwait
scas
add
adc
pusha
in
pop
das
or
sbb
or
testb
mov
xor
sbb
adc
push
push
xor
push
jmp
cmp
jmp
das
sbbl
cwtl
clc
mov
cmpsb
sub
icebp
and
sub
aad
movsl
les
mov
dec
sbb
ret
cmp
push
daa
mov
jno
push
mov
push
mov
adc
xchg
test
push
leave
fcompp
jo
mov
inc
xchg
leave
inc
xor
mov
rolb
lds
daa
sub
jp
inc
xlat
dec
pop
push
inc
icebp
loope
insl
sbb
gs
mov
loop
push
rorl
pusha
aam
in
cmc
fsubr
stc
mov
cmp
jecxz
pop
sbb
vpminub
mov
inc
lahf
inc
mov
add
xchg
jecxz
sahf
ss
flds
mov
lods
nop
jae
lcall
inc
in
push
out
loope
mov
cmc
stos
xchg
pop
xor
stos
xor
mov
or
xchg
das
fldt
mov
sbb
popf
mov
or
mov
add
test
jne
pop
add
sub
hlt
fcmovnu
mov
inc
nop
xchg
push
mov
jbe
imul
xchg
sub
ret
mov
xor
push
in
and
addr16
inc
push
lret
sbb
xor
inc
inc
adc
outsb
scas
xor
mov
or
iret
aas
inc
sub
lret
repnz
insl
inc
divl
dec
inc
fisubs
out
std
mov
clc
add
xor
loop
cmpl
call
fistpll
mov
popf
roll
insb
shll
adc
into
push
sub
scas
mull
movsb
xor
xor
dec
mov
aaa
mov
mov
jl
movsl
adc
push
testl
mov
fimull
pushf
imul
outsb
dec
add
pushf
sbb
push
jae
sarb
int3
jno
pop
lods
cmpsb
imul
popa
test
stos
or
adc
shll
adc
pop
adc
cli
pusha
fs
sti
push
gs
cmp
pop
jae
icebp
jns
xor
mov
sub
jb
fcmove
adc
sti
out
push
nop
add
in
sub
cmp
cmp
add
cmp
push
mov
xchg
scas
dec
add
cmp
pusha
jae
sub
cs
mov
push
dec
loopne
add
aaa
pop
loopne
pop
jnp
mov
enter
xor
mov
hlt
popa
aaa
xor
ret
adc
pop
scas
ret
mov
sub
inc
fldl
jle
sbb
dec
push
pop
dec
mov
push
or
mov
das
push
and
pop
mov
sbb
mov
out
mov
mov
mov
xor
xlat
lcall
hlt
pop
data16
xchg
sub
nop
outsb
mov
sbb
or
je
ja
sub
fidivl
add
stc
sub
mov
fsubrl
and
insb
das
ljmp
imul
iret
dec
jl
or
imul
sub
movsl
push
dec
in
dec
je
fbstp
push
mov
rorb
clc
or
xor
or
in
stos
push
pop
jne
jecxz
leave
push
roll
pusha
scas
mov
xchg
cmp
stos
dec
sbb
or
rcll
call
stos
scas
add
icebp
xor
mov
xchg
sbb
lahf
test
push
dec
mov
and
jle
pop
xor
fcomps
add
add
outsl
mov
in
xchg
jnp
sbb
lods
push
repz
cmp
lds
jle
mov
out
in
add
cmc
clc
sbb
and
pushf
adc
nop
push
mov
cmp
fwait
mov
ret
fidivrl
add
rorb
cmp
mov
popf
mov
or
test
stos
fimuls
loop
push
pop
lahf
fmuls
sti
je,pn
adcl
add
pop
sbb
push
dec
pop
add
out
xor
orl
pushf
cmpsl
or
or
mov
jne
inc
sahf
xorb
int
out
or
or
es
fcmovne
notb
outsb
fldt
add
iret
cli
sbb
mov
push
js
push
lods
rorl
mov
je
jecxz
outsb
stc
fisttpll
and
sbb
mov
adcl
and
or
lds
and
ret
inc
stos
sbb
cmpsb
out
pop
add
add
lods
inc
inc
clc
fistpl
popa
shrl
popa
xchg
leave
ffree
in
cwtl
cmp
shrl
int3
repz
adc
popa
mov
testb
pop
and
sbb
sbb
sub
mov
push
daa
push
push
out
ret
popf
mov
roll
arpl
pusha
sub
fildl
outsl
mov
add
xlat
lock
decl
sahf
xlat
aad
jne
cmpsb
clc
rcll
mov
mov
loop
jnp
or
sub
mov
hlt
int3
pop
inc
xchg
mov
xor
pop
addr16
popf
repnz
stc
mov
and
in
inc
into
lea
gs
push
fmuls
out
ret
adc
int3
mov
test
std
adc
pop
icebp
into
pop
push
jne
xchg
mov
jge
add
repnz
xchg
shll
xor
jo
out
xor
test
xorl
xlat
adc
fstpl
inc
and
ss
int3
in
jge
loopne
jns
cmpb
mov
test
stc
inc
rclb
mov
pop
push
jg
fbstp
daa
and
sbb
ljmp
mov
or
mov
stc
stos
inc
mov
ja
sub
xlat
mov
xchg
mov
add
stc
xor
ds
scas
mov
sub
inc
scas
sbb
mov
inc
fnstcw
dec
jo
movb
mov
adc
and
pushf
and
cmp
mov
insl
lret
lods
fmull
sbb
mov
sbb
adc
fdivrs
xor
icebp
pop
test
pop
pusha
std
mov
shl
fsubl
inc
push
sub
xchg
xor
cmpsl
mov
pop
mov
and
fimull
jb
aaa
jns
push
into
popf
outsb
dec
push
out
push
repnz
std
pop
mov
stos
inc
les
or
or
int
aas
rcr
in
push
adc
jmp
mov
sub
push
in
xor
xchg
outsb
flds
insl
xor
inc
lods
iret
shll
and
data16
push
sbb
movsl
pop
cmpxchg
insl
movsb
nop
dec
pusha
push
jns
mov
shll
pushaw
pop
movsb
rcr
lds
mov
add
sbb
rolb
push
out
iret
mov
into
or
cmp
sbb
xchg
ret
or
loopne
data16
es
mov
scas
push
movsl
mov
xchg
add
jo
ret
std
lahf
push
stos
into
add
inc
ds
xor
mov
cmp
inc
dec
rcrb
push
mov
lds
repnz
mov
inc
scas
imul
pop
hlt
cs
aas
clc
jp
sub
dec
cmp
sub
les
mov
adc
push
dec
xor
sbb
adc
mov
dec
addb
mov
jg
pop
testb
outsb
or
mov
pop
adc
lds
dec
clc
hlt
fimull
pop
mov
test
cli
lods
and
sbb
pop
cli
and
out
es
sub
in
mov
iret
pop
and
out
arpl
outsl
push
jns
cmp
adc
fstl
mov
out
lods
lods
mov
cltd
sub
cmc
fstps
lock
adc
xchg
xor
pop
fmuls
pop
inc
xor
xor
xchg
mov
call
mov
clc
imul
test
add
add
xor
cmp
or
pop
dec
jecxz
stos
insl
jg
rolb
xor
aam
adc
in
sbb
in
out
test
sarl
dec
push
add
cmp
cmp
lahf
inc
shll
daa
sbb
mov
inc
mov
lcall
daa
or
int3
push
das
adcl
sub
mov
rep
mov
push
sbb
popa
mov
xchg
mov
push
test
mov
mov
imul
lods
jo
sub
psrld
mov
imul
inc
jle
mov
push
pop
int3
enter
pushf
sub
mov
or
push
jmp
or
jecxz
and
int3
add
pop
outsl
or
pop
jp
enter
aaa
arpl
push
out
push
mov
ds
lea
dec
fwait
add
lods
dec
cmpsb
mov
pmaxsw
test
lahf
into
rcll
scas
sub
imul
cmp
out
ficoms
push
pop
pop
dec
jecxz
sbb
pop
xchg
movsl
xor
mov
mov
jle
cmp
xchg
sbb
or
insb
imul
shlb
push
sbb
decb
xlat
adc
imul
mov
or
mov
jb
aam
cmp
mov
mov
mov
es
lea
movsb
arpl
pop
dec
mov
adc
daa
icebp
in
jg
stc
dec
cltd
lds
clc
gs
mov
aaa
mov
icebp
push
loop
and
inc
dec
jae
addl
xchg
cs
xlat
inc
mov
dec
push
xor
scas
mov
int
ds
insb
sbb
inc
int3
jbe
mov
xlat
cmpsl
inc
pop
xchg
jge
dec
int
fs
jbe
lret
cli
test
mov
dec
mov
leave
jl
sub
cmp
stos
or
mov
fsubp
dec
dec
shr
lock
xchg
int
or
cmc
mov
in
dec
jl
xchg
mov
fsubs
inc
jne
lcall
inc
in
testb
mov
repnz
les
sbb
test
pusha
jnp
repnz
and
mov
pop
push
sub
testl
mov
push
xchg
pop
push
lds
dec
push
or
jecxz
iret
and
jl
lret
push
dec
xchg
sbb
adc
add
in
jns
cmp
inc
lods
inc
jb
cmp
push
mov
std
jns
out
xor
roll
jp
rcl
imul
inc
jmp
add
jno
aam
xchg
inc
arpl
mov
mov
pop
repz
jno
pusha
xchg
lock
cs
jecxz
jbe
movsb
mov
sbb
and
cmp
test
cmp
enter
jp
es
loope
mov
pop
xor
repnz
fisubl
sarl
push
dec
jne
mov
data16
fidivrl
jmp
out
enter
or
push
test
dec
lret
lret
inc
divl
in
add
mov
scas
jge
mov
test
jnp
dec
fwait
jecxz
stc
fstpt
sub
xorl
scas
fwait
sbb
je
ljmp
cs
or
in
cmpsb
mov
test
scas
mov
movsl
imull
mov
jmp
xor
add
dec
cwtl
xchg
in
pushf
dec
sub
stos
pop
lods
add
rol
mov
ja
sbb
pop
repnz
adc
leave
pop
dec
mov
ficompl
mov
addl
std
out
hlt
and
mov
dec
rolb
iret
mov
les
ret
mov
pop
xlat
dec
dec
ljmp
dec
sub
fsub
cmpsb
ss
push
subb
mov
in
push
lahf
stos
test
sbb
scas
idiv
cmpsb
adc
fwait
cwtl
dec
pop
fiadds
mov
fsub
or
cmp
cli
jo
sbb
inc
test
sub
xchg
dec
inc
cmc
mov
aam
mov
addr16
cmp
add
xchg
pop
lret
jmp
sub
imul
loopne
neg
imul
out
mov
xor
lea
mov
sahf
fwait
outsb
xchg
std
xchg
scas
aam
adc
out
xchg
xor
gs
stc
je
push
std
pushf
sbb
int
cmp
test
cli
int3
jp
push
sub
call
lods
lret
push
or
mov
add
in
scas
lret
repz
out
stc
pop
into
dec
inc
cmp
imul
mov
pop
test
out
out
fstps
fldenv
jmp
dec
addr16
cmpsb
cmp
je
sti
push
push
leave
mov
pop
repnz
fst
sub
pop
mov
pusha
mov
pop
xchg
fstpt
popf
ss
jp
push
ret
mov
sub
xchg
aaa
popa
call
xor
push
std
mov
neg
stos
inc
enter
das
add
and
inc
fbstp
mov
add
aam
pushf
adc
es
mov
inc
sbbb
sub
testb
add
adc
dec
and
sub
lods
dec
push
mov
xchg
stos
test
gs
add
mov
dec
rcr
test
mov
xchg
jle
inc
mov
push
or
fwait
xchg
ficoms
mov
in
fisubrl
scas
push
dec
jl
cmp
ret
sahf
xor
loopne
dec
pop
ljmp
pop
sbb
pop
fdivs
fldt
popa
rcrl
dec
cmp
push
in
add
dec
faddl
hlt
in
mov
roll
clc
in
dec
sub
sub
fstl
and
cs
push
add
mov
lea
or
pop
lods
mov
rclb
jg
jae
ret
mov
add
into
or
and
insb
inc
or
mov
fwait
sub
enter
popa
jp
enter
subb
sbb
xchg
xchg
adc
cltd
sbb
ds
push
inc
fildll
rolb
adc
in
add
mov
dec
loopne
xchg
jno
testb
int
mov
loopne
dec
and
add
sub
adcl
jp
sahf
test
adc
cmp
aad
pop
outsb
inc
mov
mov
xor
shlb
movsl
fdivrl
aad
mov
dec
mov
add
add
or
and
push
jl
cld
pop
push
push
sahf
jle
ljmp
ss
test
cmp
rorl
mov
pop
jp
cmpsb
jbe
or
aad
and
xlat
data16
aas
adc
lods
xlat
jo
xor
sbb
inc
mov
out
sub
xorb
fcmove
fwait
cwtl
jecxz
pop
cwtl
push
bound
sbb
push
mov
mov
sub
divb
fimull
push
jg
push
push
test
imul
add
fcmovnu
div
fld
ret
xchg
jmp
adc
or
mov
fwait
adc
out
mov
sbb
lds
mov
inc
data16
jno
push
icebp
outsb
shll
xchg
xlat
adc
xchg
flds
mov
dec
jno
insl
xor
sbb
mov
pop
popa
and
idivb
cmp
inc
jmp
shl
push
jge
fsubl
mov
sub
mov
fcomps
test
xchg
xchg
fnstsw
xchg
popa
insl
ficompl
sub
xor
sarl
and
int3
sub
loope
pop
sbb
jo
notl
shl
fstpt
xor
push
into
dec
xchg
loope
mov
stos
pop
enter
push
shrb
jnp
dec
dec
pop
jns
ss
add
or
ja
int
cmovnp
lcall
and
sbb
test
ret
xchg
gs
xchg
std
push
fcmovnbe
mov
jecxz
cmp
sub
cld
pop
dec
repz
jne
mulb
outsb
and
repz
out
sub
test
and
aas
out
mov
mov
mov
inc
iret
xorl
repz
orb
notb
into
mov
push
jbe
mov
inc
lea
sbb
xor
lcall
incl
add
and
push
jmp
iret
and
pop
fcmovne
pop
lahf
cmp
addr16
daa
dec
add
nop
imul
or
xchg
push
xchg
cmp
cmp
push
das
sub
in
push
xor
add
xlat
std
in
leave
mov
xchg
add
sbb
push
push
inc
xchg
pop
pop
add
cs
icebp
outsl
es
int3
mov
lret
inc
adc
fistps
gs
mov
mov
movsl
push
mov
xchg
add
xor
cmp
jns
jp
sbb
dec
add
dec
mov
int3
sub
xchg
clc
push
in
or
pop
inc
pop
and
add
nop
mov
sbb
jle
or
js
mov
adc
mov
and
mov
jg
loope
mov
out
mov
mov
mov
pop
bound
std
mov
adc
xor
in
imul
sub
push
jecxz
xchg
stos
dec
repz
jnp
es
mov
jno
mov
cmp
test
sbb
jo
enter
js
aaa
xor
pusha
push
mov
sbb
jecxz
jge
enter
xor
xor
jbe
ret
and
mov
aas
in
dec
xchg
xor
outsl
inc
int3
cmpb
in
push
and
cltd
jae
shll
inc
mov
ljmp
pop
insb
inc
cmc
filds
addr16
xor
cmc
shll
push
sbb
popf
in
ljmp
jnp
xor
jmp
lods
xor
and
ljmp
int
jecxz
jae
lds
call
mov
jl
pop
iret
pushf
add
sbb
fdivl
imul
or
cmp
fs
xor
enter
and
adc
or
jb
add
pop
iret
nop
push
xchg
rcrb
lret
loop
push
insl
int3
cmp
std
call
mov
loop
arpl
push
jecxz
mov
xchg
test
rcrl
mov
mov
add
mov
ret
push
or
inc
jecxz
dec
dec
adc
xor
push
mov
fcomi
push
xor
push
ret
add
int
xchg
dec
pop
ja
and
nop
outsl
push
into
cmp
negl
cmp
cmp
lret
adcl
jmp
mov
popa
mov
inc
jae
xor
data16
and
cwtl
xor
cmp
jo
pop
xchg
xor
mov
jl
pop
sub
stc
sbb
jl
sub
dec
and
mov
repnz
inc
pop
lea
clc
add
inc
lods
pop
movsb
or
fucomip
out
scas
leave
sub
adc
into
sub
xchg
jl
pop
xlat
adc
stc
test
out
pop
clc
or
fdivp
xchg
xchg
mov
ljmp
loope
push
or
push
and
rcrl
rcrb
pop
pushl
sbb
jne
inc
cmpsb
mov
sub
jbe
dec
jmp
dec
hlt
cmp
ret
gs
fnsave
push
fnstsw
rep
shl
and
jge
cmc
mov
lahf
mov
jne
int
push
loopne
outsl
xor
push
add
xorb
hlt
js
mov
sub
scas
xor
addr16
adc
je
test
or
xor
mov
xchg
ds
pop
sub
xor
mov
aaa
mov
jo
daa
arpl
pop
sbb
out
xchg
mov
addr16
repnz
push
out
fsubs
sbb
int3
aas
fwait
arpl
xor
cmp
inc
mov
and
inc
movsl
push
jp
jb
cmp
pop
cltd
arpl
fwait
add
cmp
jbe
mov
andb
mov
inc
mov
ret
out
rcll
fstl
mov
outsb
mov
in
fldz
mov
push
push
call
jl
xchg
adc
pop
cmp
sar
std
in
or
fstpt
jecxz
xor
aas
push
rclb
arpl
push
cmp
shrb
push
sbb
int
jno
int3
ds
in
std
xchg
pop
rcr
lret
push
sbb
mov
lcall
gs
adc
xor
ss
lret
cmp
ficompl
sbbl
out
lcall
dec
neg
cmpsb
dec
imul
push
test
iret
clc
or
pop
std
inc
sub
xlat
aas
repnz
dec
xor
enter
adc
and
fistps
xor
imul
cmpsb
lods
adc
or
sub
sub
inc
out
xchg
daa
or
mov
adc
daa
sub
rolb
and
movsb
adc
mov
jbe
jmp
stc
bound
add
fcoml
arpl
dec
xchg
iret
mov
in
test
mov
xorb
xchg
testl
fnsave
and
cld
loop
cmpsl
aad
jg
adc
fneni(8087
mov
fnstcw
mov
xchg
popa
sub
cs
jecxz
out
jl
insb
cmp
repz
rol
push
sbb
sahf
xchg
lcall
mov
xor
ret
add
test
hlt
push
pop
out
fstpl
xor
das
pusha
mov
stos
and
xor
cmpsb
call
push
xchg
int3
cmp
xchg
in
or
mov
dec
repnz
or
scas
js
or
dec
iret
das
out
fsubrs
mov
fistpll
mov
rcrl
daa
cmp
xchg
loope
fwait
mov
mov
or
loope
mov
leave
and
pop
push
nop
mov
outsl
test
push
and
ret
fldenv
mov
stos
fwait
dec
fiaddl
addb
push
ret
jle
int3
mov
sub
ret
pop
call
fdivrl
das
gs
mov
fnstenv
in
cmp
mov
mov
sbb
cmc
shll
in
pop
js
and
mov
shlb
mov
jno
int3
jecxz
das
push
std
into
xchg
sub
inc
or
dec
jecxz
lret
mov
add
inc
xorb
or
cmp
inc
push
ja
pop
iret
mov
pop
pop
scas
inc
push
or
jno
repnz
sub
mov
add
or
dec
and
xchg
aad
sub
sar
xor
pushf
mov
nop
scas
add
jns,pn
ret
push
filds
lods
cmc
into
in
jo
sbb
ja
push
jmp
xor
add
sub
sbb
or
js
out
or
sahf
xor
cmp
popf
jb
xchg
imul
ficompl
xlat
pop
adc
fcompl
test
cmpsb
jae
sbb
shrl
adc
pop
xor
scas
test
push
mul
in
mov
adc
xor
dec
dec
push
cltd
sbb
hlt
xchg
cwtl
loopne
cmp
mov
and
stos
call
cld
ljmp
push
jecxz
pop
lahf
xor
out
gs
inc
aad
stc
in
psadbw
pop
out
stc
jbe
in
rcll
push
loop
fdiv
lahf
mov
mov
lods
mov
push
or
xor
push
lret
dec
icebp
xor
mov
inc
movsb
fsts
ret
push
push
adc
movsb
iret
mov
in
sbb
rcrl
popf
in
cmpsl
shl
mov
lock
inc
sarb
mov
cs
sub
repz
stos
ds
xor
add
mov
dec
add
pop
inc
ret
in
push
idivb
scas
pop
sub
les
aas
push
popf
sbb
cwtl
cmp
jl
mov
mov
adc
push
es
sbb
movsb
sub
cmp
push
in
pop
loope
imul
push
loopne
outsl
push
pop
xlat
mov
mov
mov
std
and
mov
ljmp
push
mov
cmp
push
jmp
mov
enter
push
int3
jl
xor
sub
sbb
push
or
mov
mov
fwait
movsl
xor
int
jmp
mov
jle
mov
hlt
jecxz
and
xchg
mov
jl
push
inc
lahf
lret
jl
lret
ljmp
xor
std
outsb
pop
mov
pop
inc
jae
in
shrl
inc
sbb
push
push
cwtl
int
xchg
enter
jl
aaa
andl
ds
cmp
hlt
repz
push
mov
fs
imul
ja
mov
push
rcrl
dec
data16
mov
push
int
sbb
xchg
mov
loopne
ret
test
in
adc
mov
inc
ret
in
das
and
out
or
fistl
push
sbb
xlat
lods
or
loop
divb
jb
push
mov
xor
lods
daa
cmpl
xchg
popa
xchg
jns
jecxz
cmp
jne
lea
fbstp
xchg
inc
and
ret
das
or
add
pop
test
test
or
dec
divb
into
repz
clc
adc
mov
out
inc
dec
inc
jbe
add
inc
lret
fnstenv
insb
dec
mov
push
adc
dec
outsb
jne
sbb
pop
bound
xchg
gs
xor
xchg
jcxz
xor
bound
and
popa
jno
loope
cli
jl
mov
stos
int
mov
dec
and
movsl
add
xor
fstpt
movsb
mov
insl
sub
fidivrl
mov
loop
mov
out
mov
mov
fimuls
cmp
pop
outsb
mov
jns
mov
js
bound
jbe
dec
push
dec
shll
ret
mov
stos
push
addr16
inc
xor
mov
out
jne
mov
sbb
and
or
mov
or
into
or
adc
hlt
ds
sub
call
jle
dec
inc
ja
scas
or
out
jne
imul
cmpsb
into
mov
std
loopne
stc
pop
adc
mov
sarb
aam
les
pop
arpl
test
xlat
sti
xchg
xchg
cmp
sub
gs
lret
fcom
mov
int
xchg
stc
xor
js
lods
sti
mov
xor
xor
imul
cmp
sbb
imull
push
test
fsts
add
mov
mov
xlat
sub
xchg
and
cli
xor
test
dec
mov
fdivl
cli
test
or
enter
xchg
pop
or
aas
cmpsb
movsb
stc
jnp
pop
stos
pushf
and
fwait
stos
push
mov
mov
in
pop
lods
or
popa
sbb
sub
dec
mov
cli
outsl
movsb
dec
inc
sub
stos
lods
inc
or
loope
data16
leave
and
js
dec
or
mov
lcall
cmp
dec
add
pop
iret
mov
and
ljmp
cmp
repz
cmp
cltd
enter
adc
cld
das
dec
push
mov
jmp
dec
movb
jl
lret
dec
imul
jl
loop
clc
xchg
sub
aam
mov
aas
loop
clc
cmpsl
icebp
jb
add
inc
shrb
loop
addr16
inc
stc
inc
dec
fistps
or
std
lods
jne
gs
inc
in
push
or
xor
and
int3
sub
scas
mov
and
stos
mov
dec
fisubl
sub
pcmpeqb
fs
add
mov
mov
lahf
shll
sub
cmp
cmpsb
ljmp
sbb
mov
cmp
or
repz
mov
cmpl
ret
dec
add
lret
inc
lahf
dec
test
inc
dec
fdiv
popf
call
adc
cwtl
inc
dec
mov
pop
mov
imul
sar
stos
repnz
add
cmc
xlat
lods
jg
and
dec
and
dec
or
and
push
js
ss
shll
mov
or
pushfw
sbb
inc
hlt
repnz
scas
dec
iret
xor
hlt
scas
inc
cmp
xor
test
scas
mov
iret
fldl
fsub
or
mov
mov
shrl
js
jae
push
subb
add
fldenv
sub
or
adc
xchg
pop
adc
loop
jp
test
cmp
icebp
jno
mov
test
cmc
jge
mov
xor
mov
push
sti
pop
gs
mov
jns
xchg
hlt
xor
fsub
aad
inc
jnp
outsb
call
addps
nop
pop
pop
rolb
lret
or
sbb
daa
xchg
pop
pop
inc
sahf
mov
daa
fadds
xor
mov
pushf
jg
xchg
call
dec
mov
fwait
push
and
ss
sbb
andl
add
mov
jle
aad
jecxz
leave
xchg
in
or
enter
lret
aas
call
mov
push
sbb
push
jmp
mov
mov
and
in
dec
pop
xchg
pop
loop
lret
jne
mov
stc
nop
dec
fisttps
or
repz
cmp
jo
icebp
mov
dec
xor
cmp
xor
mov
in
in
jle
test
adc
xor
adc
adc
pop
lods
sbb
and
xchg
adc
cmp
push
orb
shll
mov
xor
cmp
testb
xor
call
mov
hlt
add
push
inc
push
negl
inc
sub
int3
rorb
dec
insb
aaa
lahf
inc
lods
sub
sbb
mov
lods
jl
ss
sbb
or
and
cs
outsb
pusha
loopne
dec
fimull
and
sub
push
mov
xor
fwait
mov
xlat
xor
js
int
repz
repz
aaa
cmc
cld
das
mov
int
pop
push
xor
pop
xchg
and
mov
sbb
sub
or
out
push
outsb
movsl
and
sbb
jo
aas
or
enter
jae
hlt
sbb
mov
stc
arpl
and
cmc
sahf
mov
jecxz
cmp
xchg
pushw
std
xchg
mov
add
aaa
rorb
and
push
out
xor
xchg
pop
lretw
push
cmp
fs
cmpsb
aas
jle
mov
mov
lock
test
faddl
shll
lds
jns
std
sbb
mov
mov
jmp
shll
dec
and
lds
jo
flds
pop
pop
xor
packuswb
cmp
cs
xchg
gs
cmpsb
pop
hlt
hlt
cmp
sub
in
out
add
test
cmpsl
nop
inc
pop
fs
adc
inc
in
pusha
sub
jno
push
mov
jge
hlt
pushf
daa
fdivrs
push
add
inc
cmp
or
sbb
dec
jo
push
cmp
jecxz
pop
push
insb
test
xchg
push
dec
or
int3
js
adc
inc
divl
fdiv
adc
fcomi
mov
fisubl
rol
sbb
cli
xor
aaa
je
push
mov
in
insl
add
push
mov
adc
xchg
sub
inc
pop
adc
int
add
sub
call
dec
test
xchg
clc
jge
mov
cmp
fdivrl
cmpsb
xchg
hlt
in
dec
call
ret
pop
hlt
cmp
shr
pop
std
ds
mov
mov
xchg
and
pop
xchg
sahf
fisttpl
mov
jne
xchg
js
lds
xor
xchg
and
shrl
dec
mov
dec
inc
ret
sbb
ret
jmp
pop
cmp
int3
mov
add
xor
lcall
or
or
movsb
pop
xbegin
sahf
sub
iret
cmpsb
sub
inc
aad
jg
lret
ljmp
cmp
popa
or
add
xchg
int3
mov
shr
fldcw
cmpsl
rorl
inc
mov
mov
pop
pop
push
adc
js
movsb
mov
mov
fcmovnbe
pop
xchg
aas
mov
addr16
fcos
roll
add
or
dec
mov
arpl
andl
sahf
aam
xorl
js
cmp
add
push
out
inc
loopne
ja
call
adc
dec
jmp
gs
popl
add
iret
dec
mov
or
cmpsl
rcl
cs
in
sar
in
xor
mov
gs
inc
cmpsb
pop
data16
and
mov
jb
push
leave
or
xchg
xor
inc
add
lods
push
fcmovnbe
shll
or
aas
adc
jae
or
mov
pop
dec
je
shll
leave
adc
scas
je
pop
ja
leave
sbb
test
iret
shrb
gs
jge
movsl
call
cmpsb
movsl
fmull
mov
pop
xchg
xor
rorb
or
fisubrs
lea
sub
shll
sub
mov
bound
sbb
xchg
flds
hlt
mov
lods
mov
fdivr
xor
mov
pop
cli
mov
imul
mov
sub
int
out
xor
loop
inc
nop
xchg
mov
sub
imul
out
icebp
out
xor
mov
xchg
sbb
movsl
adc
dec
and
push
pop
push
mov
shlb
aad
jp
jecxz
xchg
xchg
popa
stc
out
repz
scas
in
loop
adc
sub
mov
dec
addl
std
in
fwait
jne
jg
insl
dec
es
pop
bnd
mov
test
cwtl
stos
lods
out
dec
sti
lods
pushf
lea
pop
pop
xor
mov
mov
xchg
xchg
sti
add
inc
in
pop
push
pop
xchg
hlt
test
sbb
jmp
mov
movsl
lahf
scas
xor
jl
in
cld
pop
lods
lret
or
mov
loope
xor
adc
mov
xor
out
mov
and
repnz
lds
add
hlt
in
add
mov
xlat
sbb
jns
adc
mov
out
frstor
pop
mov
lcall
mov
popf
jmp
lods
push
stc
mov
or
insl
xor
shrl
hlt
and
adcl
daa
inc
pop
cwtl
sti
push
subb
ret
xor
divl
mov
inc
fisubrs
cmc
xchg
cli
int
xchg
sbb
ja
in
cwtl
xchg
mov
mov
jne
pop
push
nop
fildl
aad
in
add
xchg
stos
pop
incl
inc
mov
or
sbb
inc
popa
std
mov
ljmp
fcompl
pop
inc
mov
bound
fadd
je
sbb
push
loop
jp
and
mov
lret
dec
mov
mov
test
xor
out
ret
inc
jnp
push
fwait
mov
or
sbb
push
ret
cmpsl
cmc
cmp
or
dec
fwait
mov
xchg
mov
jb
out
je
xchg
addb
sbb
leave
cwtl
inc
scas
mov
pop
mov
outsl
lcall
xchg
pop
dec
xchg
out
and
jle
test
ds
ficompl
sub
mov
lahf
xlat
adc
and
pop
popf
aam
push
inc
sbb
movsb
cltd
out
mov
scas
or
mov
sub
push
push
adc
imul
add
mov
movsb
lret
bnd
loopne
nop
fcompl
xchg
hlt
in
in
pop
mov
test
mov
test
or
xlat
adc
and
aam
add
rcl
orl
pop
push
dec
in
push
arpl
aas
clc
inc
jge
ja
repz
mulb
lods
mov
jb
addr16
mull
hlt
adc
loopne
lret
in
dec
arpl
cltd
adc
std
jmp
inc
mov
pop
xorb
in
jl
shlb
xchg
or
ret
add
sub
imul
and
call
and
cltd
daa
or
cmpl
sub
cmp
fists
mov
mov
addb
loop
sbb
push
ja
cltd
cmp
jg
xchg
jns
gs
mov
stc
jmp
aad
and
add
add
mov
lods
popa
in
adc
dec
ret
mov
fnstenv
adc
cld
stos
mov
mov
mov
xor
adc
popa
and
push
mov
js
add
xchg
sahf
or
jecxz
fwait
test
out
adc
ds
xchg
sbb
mov
xor
xchg
sub
or
loope
pop
pop
sahf
mov
xchg
cli
rol
mov
jle
bound
imul
roll
and
pop
mov
mov
das
jp
fldz
xor
out
fwait
mov
gs
loopne
mov
pop
push
or
loope
push
mov
icebp
jbe
addr16
sub
sbb
ror
push
pusha
xor
cmpsl
fst
mov
or
cmpsl
and
pop
leave
mov
idiv
pop
and
les
cli
aaa
fiaddl
pop
dec
into
mov
push
lahf
or
fnstsw
in
mov
xor
enter
pusha
lea
jecxz
or
idivb
mov
push
in
imul
orl
pop
pop
aad
out
pop
or
xchg
mov
xchg
shlb
xor
inc
sarb
lcall
lret
or
mov
cmp
repz
test
and
add
out
push
xchg
jne
aaa
push
xchg
cwtl
icebp
fcomps
incl
das
inc
std
call
push
jb
adc
repnz
mov
xor
or
push
fistl
adc
dec
cmp
pop
mov
bound
arpl
stc
sahf
int3
cmc
cmovl
sub
xor
lcall
in
or
andl
mov
sub
add
pop
pop
ljmp
mov
add
clc
pop
lcall
and
jbe
test
jbe
mov
sbb
lods
lock
or
jecxz
jne
cld
in
sub
cmp
jnp
cmp
add
pop
and
xor
inc
mov
mov
xchg
fwait
and
xchg
lea
inc
ss
popa
fisubrs
push
fstpl
nop
nop
notl
out
jmp
enter
inc
fsubr
dec
insb
into
ret
cld
sbb
sbb
jge
repz
pop
sbb
sbb
pop
mov
pushf
sti
and
mov
popf
je
popf
adc
cltd
mov
repnz
push
pop
arpl
jp
mov
aam
jp
in
ljmp
adc
insb
cmp
outsl
fimuls
jb
icebp
fwait
push
subb
jg
enter
mov
mov
stc
fbstp
cli
jns
inc
outsl
mov
call
mov
add
aaa
xchg
cmovb
push
xchg
aas
pop
dec
and
fistl
inc
jne
jae
sbb
mov
xchg
sbb
rolb
pop
fisubrs
pop
add
pushf
mov
ret
insl
mov
xchg
rorl
push
xchg
push
xchg
mov
jno
movsl
mov
loope
and
fwait
cmp
sub
shll
xor
and
push
inc
push
leave
mov
sub
sub
sub
mov
mov
pop
jnp
shrl
pop
mov
mov
xchg
mov
inc
cmp
scas
pop
out
std
cmp
push
or
pop
mov
add
inc
cmp
inc
mov
test
rclb
jbe
pop
test
or
mov
mov
movsl
movsl
push
pop
faddl
leave
xchg
push
sub
je
mov
call
add
fcmove
mov
gs
mov
sbb
xor
cltd
cs
cmpsb
push
jae
cmpsb
cmp
fwait
jbe
xor
popa
sti
push
mov
pop
mov
andl
mov
sub
rcrl
repz
push
cmovae
aam
call
mov
test
aam
movsl
jecxz
js
cmp
sarb
dec
adc
inc
mov
add
jmp
mov
hlt
lods
jae
pop
sub
test
std
out
adc
pop
jg
cltd
mov
nop
mov
pushl
jae
jecxz
out
xchg
test
dec
test
sub
test
fwait
mov
fnstenv
mov
sbb
pop
inc
xchg
dec
insb
test
dec
jp
pop
cs
mov
mov
mov
out
mov
ret
iret
xlat
xchg
pop
orb
cwtl
int3
xchg
lea
sub
jmp
leave
xchg
or
es
nop
nop
cwtl
bound
fidivl
mov
add
ljmp
mov
loop
faddl
ds
andb
jae
pop
mov
cld
or
loopne
cs
jbe
push
aam
and
jmp
xlat
ret
jge
aas
jb
mov
repnz
jne
pop
push
inc
in
cmp
and
jge
in
mov
pop
xor
jp
mov
shll
call
cli
out
clc
in
out
sbb
pop
sbb
jmp
jmp
cmp
push
fdecstp
sub
dec
mov
fists
pop
aad
dec
jmp
jecxz
sub
ja
fmuls
in
add
or
push
cmpl
xor
lcall
aad
out
pop
test
and
lods
xchg
adcl
stc
sar
data16
imul
lahf
loop
icebp
int
lret
fcmovbe
fisttps
arpl
call
push
sub
rol
test
inc
jne
push
adc
mov
push
rcrl
and
dec
gs
jge
movsb
jg
sub
jns
lea
mov
adc
aas
xor
les
jo
scas
and
jns
mov
mov
cmp
stc
cmpsb
shll
adc
test
xor
inc
push
sarl
testb
lock
jge
shlb
or
fdivp
pop
inc
add
outsl
push
je
mov
jne
sub
les
aad
mov
filds
push
jle
mov
cmp
lret
shrl
xor
jno
jmp
inc
nop
pop
inc
and
ret
lahf
mov
sbb
mov
shrl
dec
hlt
pop
inc
push
inc
xor
sub
push
orl
aaa
sbb
lret
push
scas
shlb
cli
ljmp
stos
notb
mov
mov
sahf
inc
fstpl
mov
inc
push
lcall
mov
outsb
jp
outsl
outsl
cmp
xchg
mov
enter
push
out
outsl
jns
fdivl
iret
out
lods
cmpsl
mov
test
pop
sbb
sahf
lods
inc
aas
int3
roll
xchg
cld
sti
inc
adc
dec
push
arpl
xchg
mov
sbb
pop
repnz
push
mov
loopne
mov
xchg
push
cli
call
adc
add
jno
jo
push
andl
aaa
xor
arpl
or
iret
dec
inc
nop
jl
jo
push
pop
lods
add
fsub
inc
fs
push
outsb
fcmovbe
inc
std
mov
push
jne
int3
out
sub
hlt
and
mov
mov
jp
mov
jbe
mov
mov
idivl
lret
andb
add
jo
jnp
jb
in
xchg
dec
pop
sbb
xchg
shll
sub
mov
cmpsb
mov
pop
xchg
mov
std
pop
add
dec
xchg
mov
adc
dec
push
arpl
pop
mov
mov
lret
mov
insb
fildll
out
pop
mov
add
lret
ficompl
stc
loope
subb
inc
hlt
ret
dec
adc
inc
xchg
stos
test
mov
clc
scas
dec
stc
popf
fldcw
subl
fwait
ljmp
in
mov
mov
and
ss
jp
scas
add
lcall
pop
in
jno
nop
jle
inc
ret
insl
xor
mov
inc
ljmp
mov
xor
leave
cmp
jae
insl
imul
pop
aam
dec
jae
movsb
leave
jp
popa
mov
or
xor
dec
test
aas
loope
push
insb
cli
dec
ja
pop
push
xchg
lds
mov
pop
ljmp
cld
mov
outsl
jp
mov
dec
lods
aam
jae
or
ja
sub
sbb
sahf
punpcklwd
arpl
dec
xor
mov
pop
outsb
push
aam
inc
push
mov
aam
cwtl
test
aas
dec
sbb
push
jnp
push
adc
loop
xor
sub
pop
add
mov
inc
jmp
sbb
adc
mov
xchg
xor
fidivrs
test
fistl
test
roll
hlt
adc
clc
dec
pop
and
leave
push
pop
call
inc
sarb
test
aas
and
cmp
dec
push
imul
sbbl
xor
pop
and
shll
dec
cmc
sti
inc
hlt
dec
sub
jg
pop
push
fisubrs
xor
das
xchg
mov
push
fmul
mov
inc
repz
cli
sub
int
mov
xchg
in
xor
push
mov
xorl
stos
stc
or
fisttpl
push
xchg
xchg
int
les
dec
stos
imul
inc
fcomps
mov
cmp
std
sbb
pushf
jg
add
sbb
ret
int3
push
xor
nop
inc
popa
cld
gs
lret
dec
push
imul
push
ficoms
xchg
in
mov
dec
ficoms
lods
mov
popl
jns
rcrb
jg
cmpsb
in
add
adc
shl
inc
xchg
inc
dec
inc
loope
stc
push
cmp
data16
test
iret
lods
cmp
dec
mov
hlt
mov
outsb
adc
call
test
pop
aad
sub
dec
or
cwtl
xchg
outsb
mov
sbb
cmp
mov
jns
andb
inc
test
cmpsl
mov
pushf
sub
maxps
cld
or
push
lods
js
lret
ret
xor
sub
inc
aaa
lds
xor
lret
repz
shrb
mov
and
rol
cwtl
and
mov
repz
incl
sub
xor
push
jbe
mov
add
ds
ds
xchg
stos
pop
and
add
shll
cmp
xchg
ror
arpl
mov
nop
gs
movsb
push
and
insb
and
enter
adc
ds
cmpsl
lock
lock
and
sbb
add
in
lock
sbb
stos
add
cmp
add
adc
inc
mov
and
cld
out
movsl
arpl
ja
sbb
or
adc
ja
fcmovbe
cmp
arpl
es
mov
pop
mov
jge
cwtl
or
outsb
dec
shrb
pop
in
fmull
jo
in
push
and
orl
mov
xchg
mov
data16
in
mov
jns
mov
je
cmp
xchg
or
rep
lods
fstpl
push
push
jo
adc
cmc
pop
add
std
cmp
out
aaa
hlt
in
mov
add
lcall
mov
sbb
out
lods
and
fdivrs
mov
xchg
mov
mov
lret
and
orb
fstpl
jp
add
scas
push
push
clc
cmp
inc
es
jnp
or
inc
lds
cmpsw
fstps
jle
stc
inc
sar
jecxz
pop
test
das
scas
mov
xchg
push
dec
jmp
or
addr16
loope
lcall
pop
cltd
mov
pop
out
dec
dec
test
rorl
loop
in
xchg
mov
inc
lods
cmpsl
arpl
jne
and
sub
pop
mov
pop
fsts
pop
pop
orb
int
mov
jg
and
adc
stos
cli
pop
xor
sbb
xor
cmp
sbb
mov
insb
add
inc
adc
jne
filds
enter
fsubl
jae
sbb
sub
jnp
mov
mov
xor
jg,pt
push
mov
mov
lds
nop
mov
or
sub
push
fisubrs
add
mov
xor
arpl
daa
push
sbb
mov
jne
push
jle
jge
fwait
push
jle
ret
pushl
lret
mov
mov
mov
test
bound
xchg
push
pop
push
test
stos
outsb
inc
push
pop
inc
add
and
xchg
call
insb
cmp
or
add
es
loopne
lods
mov
xchg
jbe
pop
xchg
and
inc
jo
jmp
sti
add
or
in
push
ja
dec
lret
inc
ljmp
or
push
fs
ljmp
test
insl
xchg
lret
in
frstor
add
aam
out
cmp
and
cmp
dec
inc
or
test
sbb
inc
ret
dec
lods
repz
push
jno
push
fs
lods
and
daa
mov
leave
aam
mov
loopne
scas
test
sub
xlat
popf
mov
shlb
sbb
and
mov
in
mov
dec
xchg
lock
jmp
std
shlb
dec
xchg
test
push
pusha
ficoml
cmp
or
xor
test
scas
ret
sub
mov
nop
xorl
arpl
fstpl
std
sbb
xchg
sub
lds
push
jle
fs
sub
add
adc
mov
cmp
push
dec
in
cwtl
inc
xor
and
xor
push
mov
jbe
aad
adc
dec
enter
mov
pop
test
or
insb
add
mov
nop
and
mov
call
hlt
lods
push
and
lods
mov
xor
cmp
subb
pop
mov
std
and
push
aam
popf
inc
int
movsl
mov
movb
xchg
ret
mov
dec
shl
mov
jp
mov
add
pushf
shlb
or
fisttpl
stos
and
adc
jmp
aaa
aam
and
dec
lret
cmpb
push
gs
mov
out
insb
sbb
stos
cmp
xor
or
nop
sub
repz
sbb
pop
xchg
sub
gs
pusha
push
mov
and
cltd
hlt
cwtl
inc
mov
aaa
popf
sbb
lods
scas
idivb
and
mov
ja
dec
jno,pn
mov
jns
inc
mov
shrb
nop
shll
fnstsw
aas
outsb
icebp
aas
sarb
sub
cmpsw
sbb
or
dec
and
xchg
and
cmp
add
inc
enter
test
pop
push
or
and
mov
pushf
mov
sbb
dec
sub
mov
cmc
lds
sarb
scas
inc
jno
inc
int3
push
or
or
in
shr
int
imull
or
lret
dec
mov
xlat
iret
lods
cltd
pushf
pushl
insl
inc
jmp
loopne
aaa
pop
clc
test
and
sub
cmc
int
dec
mov
pop
lea
pop
cld
mov
cmp
pusha
xchg
sti
sar
orl
jnp
pop
scas
push
cltd
xor
add
pop
fiadds
mov
dec
mov
std
mov
mov
stc
cwtl
scas
jge
sbb
aas
pop
cmpsb
outsl
cmp
jp
ja
inc
dec
or
lods
push
cmpsb
popa
push
jl
movsl
rclb
pop
mov
nop
add
xor
jp
xor
fs
and
pop
xchg
push
add
std
cltd
cmp
and
insb
leave
adc
xor
inc
leave
lcall
test
jmp
icebp
pop
and
jae
pop
push
jne
test
mov
fistl
inc
sbbl
jae
adc
clc
ret
ljmp
mov
test
pop
xorl
xchg
add
shll
dec
pop
imul
sahf
mov
std
mov
in
mov
jo
pop
inc
fdivp
lret
jmp
push
mov
aam
stc
in
adc
daa
cwtl
push
push
sti
push
sbb
cmp
leave
lods
dec
in
xchg
push
push
dec
push
mov
add
arpl
bound
loopne
repnz
jbe
mov
add
scas
push
push
jecxz
jmp
pop
mov
xor
pop
jbe
stc
cmpsb
inc
imul
enter
insb
ss
sarl
dec
dec
mov
repnz
out
push
movsl
jle
push
inc
mov
mov
je
into
sub
add
insb
stos
clc
outsl
jp
mov
mov
mov
imul
pop
out
in
loopne
jmp
dec
ja
cli
pop
je
mov
out
sub
cmp
cmpsl
xor
pop
movswl
fs
mov
cs
clc
sbb
push
cmp
leave
add
das
adc
popa
pop
clc
xor
shr
in
mov
fmull
cmp
sahf
jbe
out
fs
dec
lcall
cmp
lahf
shr
push
shlb
push
cmc
sbb
sar
push
jns
fucomp
sbb
out
insl
mov
add
je
dec
cltd
xchg
push
xor
push
rorb
cmpsl
mov
fldl2t
push
mov
pop
mov
sbb
test
into
mov
mov
subb
sub
pop
mull
movsb
sub
xor
lret
push
or
push
or
inc
movl
rcrb
cmp
out
cmpsl
popa
and
jae
lods
ficoml
call
lea
sub
inc
dec
jmp
dec
mov
jne
fs
insb
mov
pusha
lea
push
jl
mov
stos
scas
das
mov
in
mov
cmp
mov
fstpl
cmp
stos
cmpl
cmpsb
mov
cmp
iret
adc
scas
fildl
xlat
dec
mov
push
xchg
xor
aas
int3
xchg
in
push
xor
push
add
xchg
fdivrs
push
call
mov
pop
fadds
nop
mov
sub
xor
pop
ljmp
insb
lahf
push
lods
test
lcall
xchg
xchg
xchg
or
cmp
push
xchg
xor
movsl
sarb
insl
jge
push
add
mov
in
lea
push
xlat
xchg
pop
jnp
and
in
lret
cltd
fadd
xor
arpl
xchg
push
shrb
popf
inc
inc
inc
int3
mov
lea
cmp
adc
sub
mov
mov
mov
sbb
push
xor
xor
mov
jnp
in
notb
in
es
insb
xchg
out
push
stc
mov
repnz
push
jno
xchg
repz
dec
add
mov
bound
pop
dec
pusha
lahf
jae
imul
xchg
adc
add
aas
loopne
or
push
loop
mov
jne
or
mov
adc
lea
movsb
lods
or
test
jl
negl
mov
mov
sti
das
adcb
pushl
mov
mov
lahf
cmp
xor
inc
xchg
scas
adc
jge
aaa
inc
sub
movsl
jnp
jo
cmc
popa
fcmovnu
fucomi
jmp
mov
mov
lock
sti
out
out
cmp
outsb
or
jno
dec
daa
sbb
js
xor
repnz
scas
das
ret
xor
add
in
pop
jns
xor
mov
xchg
ret
adcb
mov
xlat
loop
mov
loopne
and
cmp
push
mov
int3
ret
dec
lea
fsubrs
pop
clc
addr16
xchg
addr16
adc
xor
mov
inc
lret
pop
js
jle
jb
and
inc
imul
mov
add
push
add
xor
mov
xlat
xchg
adc
loop
jae
rcrl
mov
mov
mov
pop
push
add
xchg
hlt
sbb
jb
and
cmp
pop
and
popf
loop
int
lret
pop
mov
jmp
and
pop
xor
push
or
mov
sbb
mov
sbb
pop
sub
outsl
jle
ds
idivl
ret
outsb
inc
jns
push
gs
sbb
and
divb
add
sub
loop
dec
add
push
xchg
imul
notb
or
jnp
dec
ss
pop
enter
outsb
test
inc
cmp
cli
jg
test
or
mov
sbb
sub
loop
inc
pop
or
scas
cld
leave
inc
dec
jnp
repz
jecxz
test
lods
out
in
xchg
mov
clc
fs
jl
sbb
je
dec
enter
xchg
arpl
or
xchg
cmp
leave
jecxz
cli
arpl
pop
mov
in
movl
ja
mov
addr16
daa
cs
inc
sub
jbe
push
movsl
dec
jmp
lea
enter
push
push
mov
xchg
insb
jl
fidivs
cltd
adc
cmc
jmp
popa
incb
andl
xchg
add
sarb
cmp
jp
cmpsb
jle
outsl
fstps
repz
insl
sbb
decl
gs
or
adc
adc
and
fisttps
cld
dec
in
cmp
adc
sub
ja
sub
sub
xor
xchg
mov
sub
jle
cbtw
mov
cmpsb
fwait
cld
fcompp
pop
inc
jle
push
dec
xchg
adc
out
ss
mov
loop
rclb
and
push
cwtl
iret
sub
sub
shr
inc
push
pop
sub
mov
xor
scas
cmp
aaa
stos
sbb
push
in
push
insl
cmp
iret
pop
cmp
insb
sub
int
lods
and
pop
cmp
cld
stc
fisttps
cmpb
rcl
push
adc
pop
stos
iret
outsb
dec
inc
cltd
fs
sbb
mov
cmpsb
push
and
lock
sahf
add
scas
stc
mov
pop
nop
ljmp
repnz
repnz
xor
in
add
xchg
js
rolb
sti
cmp
add
out
sub
fdivrl
stc
sub
sbb
aam
rcl
xor
sarb
mov
mov
outsl
mov
std
dec
gs
int3
mov
test
jnp
mov
cltd
call
add
shr
inc
sbb
aam
inc
jae
lock
cltd
mov
jmp
push
addr16
mov
fwait
aam
cwtl
jle
and
shl
jecxz
mov
pop
cmpsb
jnp
dec
fwait
push
fistpl
mov
xor
xor
pushf
mov
ret
cmp
jnp
dec
and
mov
ficomps
dec
repnz
xor
popa
lods
xor
cmpsl
pop
fisubrl
movsb
std
or
filds
mov
and
in
das
mov
adc
push
or
or
into
xchg
dec
repz
jg
push
adc
xchg
stos
stos
pushf
add
and
xchg
cs
lock
sbbl
in
dec
jbe
and
mov
sti
or
cmpsb
or
sahf
inc
mov
adc
leave
push
mov
xorb
sub
lret
fxtract
inc
mov
ja
fnstsw
jbe
cmp
imulb
outsl
imul
xor
cltd
cmp
push
out
outsl
pop
jo
fldt
jbe
ds
mov
add
fsubrs
lahf
mov
pop
inc
push
test
mov
mov
aaa
and
mov
lods
push
aam
addr16
pusha
cwtl
mov
cmp
dec
std
lods
es
cli
push
inc
and
mov
xor
mov
mov
loop
mull
std
into
push
add
sbb
jg
xor
pop
add
xor
sub
fbstp
jnp
addr16
dec
ja
cli
mov
icebp
es
add
movsb
ds
daa
mov
shrb
psrlq
lea
paddq
cmp
dec
dec
cs
cmp
sti
or
fcoml
sbb
add
or
scas
stos
mov
insb
shrl
popf
ljmp
int3
jns
jmp
mov
mov
and
push
mov
adc
pop
fs
sbb
push
stos
movsb
jno
mov
sub
dec
dec
nop
cli
sti
push
outsb
xor
add
insb
jnp
mov
xor
mov
fildl
in
es
jg
lret
xchg
pushl
cli
add
mov
rdpmc
xorl
ret
aad
or
jb
pop
sbb
out
aas
loopne
insl
or
or
push
xor
loop
jp
outsl
test
or
jae
nop
cmp
mov
xorl
out
mov
cmpsl
addb
adc
mov
rorl
aas
mov
outsl
dec
push
pusha
bnd
out
mov
dec
ss
push
mov
and
adcb
shll
jnp
sti
leave
ds
jbe
mov
psubw
aad
std
xor
xchg
jne
inc
mov
push
out
nop
push
mov
roll
aam
ja
xchg
outsb
iret
rorb
fwait
jge
jle
fnsave
jmp
aaa
sub
aad
or
push
mov
inc
mov
mov
sub
sbb
dec
xor
in
cmp
adc
ljmp
mov
push
inc
xor
aad
xor
push
mov
jecxz
adc
lret
inc
and
inc
inc
cmpsl
sbb
test
xchg
jge
imul
adcb
mov
mov
idivb
mov
pop
inc
lret
cld
mov
and
lcall
fs
mov
pop
jge
loopne
mov
fimuls
mov
jle
jecxz
jp
adc
sub
ror
in
cmpsb
loope
dec
ljmp
fists
ja
les
roll
and
cli
sub
and
sub
mov
and
gs
daa
testb
mov
cmpsb
out
loopne
bound
insb
ja
jne
push
addr16
mov
lock
stc
loopne
jl
inc
mov
or
insl
xchg
adc
dec
imul
pop
incb
data16
repz
xor
push
dec
xor
aaa
mov
add
ljmp
sti
shlb
push
call
pushf
add
inc
pop
mov
sti
inc
jmp
test
sub
aas
insb
and
aas
jbe
adc
sub
jns
fcoml
or
fcmovne
adc
pop
jae
push
push
xchg
push
jp
sub
pusha
lret
popa
pusha
pushf
xor
jns
cli
lahf
push
mov
scas
scas
pop
jmp
stc
ret
lret
mov
dec
mov
daa
int
popf
sbb
or
fmulp
or
repz
sub
out
inc
dec
lock
jb
dec
and
outsl
cmp
add
cltd
fsubr
inc
sbb
gs
inc
jmp
mov
arpl
jl
inc
jecxz
push
jg
xor
ror
sub
push
aad
cmp
aam
xor
stos
jl
push
jae
addr16
rcrb
push
or
mov
gs
or
jbe
jnp
sbb
aam
ret
push
fucomip
jo
aam
xchg
xor
pusha
lods
sahf
sbb
mov
xchg
cmp
sub
pop
jne
xchg
adc
sti
repnz
sub
pop
iret
pop
in
scas
mov
xlat
mov
adc
pop
adc
add
call
aam
sbb
test
xchg
dec
push
inc
add
pop
inc
mov
dec
repz
add
mov
mov
out
mov
jg
push
aad
pusha
fistpll
add
push
outsb
xchg
adc
jmp
ss
cmpsb
in
add
pop
jle
add
cmp
mov
xor
ret
insl
pop
jo
ret
jg
mov
jl
mov
jecxz
in
push
leave
aas
mov
mov
pop
jnp
inc
dec
les
dec
orl
insl
aaa
pop
xchg
xchg
mov
xor
mov
pop
cmpsb
pop
stos
add
cmpl
push
movsl
rorb
lds
fbstp
sub
imul
or
data16
sbb
shll
jbe
rcrb
mov
xchg
or
aas
mov
push
in
andb
test
sub
enter
int3
mov
sub
scas
loope
adc
mov
fisubrs
roll
ret
pop
dec
cmp
ljmp
mov
and
aam
fpatan
imul
icebp
sub
frstor
mov
lods
mov
and
arpl
mov
xchg
pusha
jl
cmp
cmp
cmpl
stc
stc
pop
imul
pop
xlat
lret
dec
bound
push
cmp
cltd
or
xlat
cmp
iret
test
popf
subb
pushf
aaa
dec
dec
sub
call
add
xor
xchg
shll
aas
adc
int
shrl
icebp
stos
test
mov
enter
sub
shrb
inc
jbe
xchg
cli
xor
repnz
fsub
xchg
jl
imul
dec
fs
mov
lods
lds
mov
pop
lahf
dec
sbb
or
cmp
mov
and
fstpt
es
jo
pop
mov
test
lret
or
pop
ja
into
pop
cmp
into
cltd
test
cwtl
es
data16
dec
mov
jns
mov
loopne
cli
pop
pop
sbb
add
sti
or
cmp
movsl
aas
jge
pop
mov
movsl
inc
or
jb
push
jle
xchg
inc
cmc
xor
dec
sub
mov
mov
repz
push
inc
pop
push
ljmp
je
in
sub
xor
cmp
pop
outsl
in
xchg
jno
repnz
push
and
sbb
daa
xor
mov
add
insb
cmp
xor
lock
fistpl
cmc
pop
test
push
repnz
xor
fistpll
sub
xor
adc
add
mov
hlt
flds
fistpl
inc
jg
aam
addr16
je
xorb
pushf
xchg
scas
adc
cmp
test
adc
insl
sbb
push
xchg
in
inc
scas
xchg
or
cmc
cmp
in
sbb
adc
scas
or
je
mov
nop
add
ds
cld
mov
enter
out
pop
shrb
xor
sbb
mov
lret
or
rorb
mov
push
movsl
sbb
adc
cmp
xchg
add
les
pop
mov
fistpll
fdiv
negb
xchg
fisubs
in
inc
jns
dec
rcr
pop
mov
push
shrl
push
and
and
bound
sbb
jbe
enter
jecxz
cmc
xor
adc
mov
ficompl
imul
mov
loop
jp,pn
pushl
adc
pop
imulb
adc
mov
cli
cli
cld
fs
xor
dec
fldcw
lcall
ds
xlat
das
in
pop
in
or
test
orl
sub
push
dec
imul
iret
testb
loope
ror
or
mov
xor
inc
push
inc
push
or
push
leave
movsb
rorl
in
call
sti
add
mov
mov
cs
mov
adc
pusha
rcr
jnp
mov
fsts
pop
movsb
cmp
cmp
mov
lods
pop
cmp
or
movsl
popa
lock
pop
fwait
into
imul
hlt
icebp
push
mov
push
imul
aas
lret
lods
andb
dec
xchg
push
jge
sub
or
jae
xchg
es
orl
xlat
mov
aaa
insl
and
jno
push
inc
icebp
jns
ret
push
rorl
call
js
ss
loop
mov
mov
iret
testb
sti
das
stos
xor
nop
out
push
or
notl
lret
jns
insb
ljmp
jmp
sbb
jae
jmp
jnp
push
xor
xchg
hlt
lcall
adc
add
and
inc
sbb
stos
push
shll
nop
icebp
cs
pop
or
push
dec
jle
mov
sub
push
aas
pop
int3
cmp
jo
dec
pop
mov
push
add
mov
jge
std
fists
add
and
in
xor
in
loop
jle
aad
and
test
mov
pop
xchg
setle
jns
xor
mov
jg
inc
sbb
adc
sar
sub
movsl
aaa
push
in
inc
clc
imul
jle
hlt
xchg
push
sub
leave
das
jae
and
xor
loopne
xchg
test
repnz
inc
sbb
aas
add
pop
jmp
shll
das
cmpsb
popa
xchg
jno
sub
sub
add
incl
cmpsb
lahf
mov
mov
loopne
add
add
mov
enter
cmpsl
add
pop
mov
push
and
cmp
fldt
sbb
push
or
mov
popf
jbe
mov
imul
loopne
dec
scas
fwait
mov
pop
mov
sbb
lret
ja
pushf
sub
insl
jne
push
jmp
shll
movsb
fwait
cmp
fs
sbb
mov
adc
mov
fwait
mov
test
push
popf
ja
sbb
mov
scas
and
adc
lods
adc
cld
pop
sub
jle
pop
push
faddp
ljmp
je
bound
add
xchg
mov
lock
push
in
and
cmpl
mov
pop
js
or
sti
jb
inc
push
inc
cli
fs
mov
out
cmpsb
mov
and
xchg
lea
add
mov
pop
push
loope
push
dec
adc
dec
fcoms
cmp
jnp
dec
lahf
adc
xor
pop
xor
sbb
lea
hlt
and
adc
jb
test
subl
dec
mov
adc
repz
push
adc
loopne
aas
sub
arpl
cmpsb
out
int3
and
mov
mov
sbbb
rorl
mov
fidivs
dec
sub
jnp
xchg
test
arpl
imul
pusha
or
xchg
fcmovbe
xlat
divl
addl
leave
lret
add
rol
inc
lret
mov
push
and
jge
xchg
sbb
push
sub
sbb
pop
js
ficoms
sahf
fidivl
test
das
sub
jmp
push
and
cmp
pop
mov
fadds
sbb
fbstp
sbb
xchg
ja
mov
cmp
test
lret
pushf
push
or
xchg
addr16
and
push
cmp
mov
jp
sbb
sti
mov
push
push
xor
pusha
int
jns
add
cmpsb
xchg
ret
push
in
stc
mov
dec
add
xlat
mov
mov
mov
fidivrs
push
bound
and
sbb
dec
push
sahf
cmp
stc
mov
jbe
dec
push
iretw
lods
xchg
sub
mov
in
out
fs
pop
mov
in
leave
sbb
or
xchg
dec
loopne
or
sti
inc
and
mov
nop
lock
xor
clc
add
lock
xchg
and
mov
dec
jb
inc
push
sahf
mov
insb
sarb
pop
call
mov
stos
dec
roll
inc
test
sti
jno
mov
jne
fdivs
xor
mov
push
sub
in
lea
mov
imull
or
lret
jnp
insl
jbe
sbb
in
mov
add
movsb
cs
or
mov
mov
xlat
dec
dec
add
clc
xor
imul
ficompl
sub
mov
cmpsl
dec
mov
fidivs
aas
scas
mov
sub
test
lea
icebp
daa
jp
pop
xor
push
pop
gs
mov
popf
nop
inc
sahf
sbb
sahf
rcrb
or
or
mov
ds
pop
mov
enter
test
pop
dec
outsl
lret
add
cmp
adc
mov
inc
push
loop
xchg
insl
ljmp
inc
sbb
int3
mov
add
xchg
mov
inc
sbb
sbb
rorl
inc
add
mov
sbb
sarl
repz
jg
xchg
pop
movsl
sub
daa
jb
mov
mov
pop
les
mov
pop
fs
mov
repz
std
fisttps
cmp
adc
jecxz
cmp
std
pop
bound
xor
or
sbb
aaa
mov
add
add
and
adc
or
leave
xor
sarb
pop
sti
pop
movsl
int
arpl
les
iret
jle
push
hlt
pop
addb
mov
cmp
push
addr16
cmp
or
leave
rcl
in
dec
cwtl
leave
mov
mov
loope
add
fistpl
xchg
sarl
movsl
aas
jmp
cli
int
out
and
idivl
cmp
rol
sub
inc
adc
sbb
pop
jmp
xorb
mov
inc
test
mov
scas
pop
leave
and
push
je
mov
test
push
push
push
fimuls
lahf
sbb
lret
mov
jle
mov
cmp
pop
xchg
or
or
lods
mov
mov
push
xchg
lea
add
icebp
outsb
addr16
or
jp
or
out
rcrl
add
cmp
dec
cwtl
sub
mov
push
xor
push
dec
std
in
inc
sbb
jo
sub
test
inc
fistpll
dec
fnstsw
sub
stc
cmc
mov
or
jmp
mov
fs
cmpsb
in
sbb
sahf
mov
sbb
mov
inc
pop
dec
out
push
fstl
cltd
jmp
push
lcall
rorb
pop
fcomp
notb
dec
popa
out
lret
fstp
icebp
in
rorl
scas
pmaxsw
add
cwtl
lret
sbb
or
cmp
sub
daa
dec
mov
xchg
ss
imul
cli
movb
sbb
aas
add
sbb
fsubrl
faddp
stos
fcompl
push
jle
gs
sarl
pop
popf
jo
sbb
mov
imul
mov
mov
mov
or
lcall
lea
mov
outsb
cltd
and
jge
es
outsb
sub
sbb
cmp
in
mov
lret
imul
cmc
xor
addl
sarl
rclb
add
mov
cltd
imul
adc
sbb
cmp
into
insl
jb
mov
mov
mov
inc
test
cwtl
fisubl
and
roll
mov
add
dec
pusha
jo
sub
shll
ret
push
cmp
xor
aas
iret
scas
mov
xchg
test
dec
js
out
add
scas
subb
ret
push
int
mov
push
hlt
fstpt
int
test
pop
sub
enter
test
adc
movsb
fcos
mov
inc
cmc
and
mov
inc
rcll
pop
xchg
fwait
xchg
mov
outsb
int
mov
jo
mov
mov
cmp
gs
les
inc
cld
imul
push
pop
cld
in
sbb
jno
adc
arpl
sarb
addl
sub
add
inc
stos
pop
xor
cmp
loopne
mov
mov
jnp
sarb
das
insb
adc
das
mov
jmp
xchg
xchg
push
andl
xor
ds
stos
and
repz
lods
or
stos
and
les
movsl
inc
push
inc
and
dec
inc
mov
inc
sub
iret
sbb
dec
data16
ret
push
mov
cmp
sub
clc
cli
lods
sbb
mov
xchg
dec
sbb
xchg
dec
adcl
mov
pop
or
ret
leave
addr16
test
bound
mov
loope
cmpsl
inc
loop
inc
scas
jnp
inc
mov
test
or
pop
fwait
add
decb
adc
sub
int
sbb
test
pop
jge
mov
pop
dec
repnz
std
mov
inc
lds
xorl
popa
dec
aam
nop
xor
fldcw
cmp
sbb
mov
aad
scas
mov
in
icebp
rorl
push
mov
out
lods
xchg
and
ljmp
xorl
je
mov
inc
sub
mov
in
loope
aad
sub
xlat
xlat
sub
in
test
dec
mov
mov
cmp
call
imul
sar
or
rcrl
ljmp
jl
xchg
movsb
or
xor
pop
push
faddl
iret
sbb
mov
add
mov
loopne
xchg
popa
neg
addr16
btr
adc
push
dec
pop
mov
mov
lea
std
out
push
lret
jnp
in
dec
icebp
mov
fidivs
add
outsb
repnz
cwtl
inc
jmp
pop
push
dec
jo
pop
out
into
fmulp
cld
jbe
cmp
adc
loopne
and
sub
jns
insl
movsb
leave
fistl
jge
sti
iret
jbe
mov
mov
xor
out
ffreep
adc
push
je
orb
clc
mov
nop/reserved
leave
adc
popf
lahf
mov
daa
dec
cmpsl
imul
cmp
outsl
and
ljmp
lods
mov
int3
cmp
fidivl
xor
aaa
incl
jp
cmp
mov
inc
dec
jne
outsl
inc
insl
sbb
add
cmp
dec
add
mov
cs
lds
les
pop
pop
mov
cwtl
inc
xchg
sub
pushf
xor
pushf
pop
add
test
cmpl
sbb
mov
ds
push
aas
xchg
mov
xor
and
jb
or
ja
and
dec
mov
orl
add
lds
test
hlt
jae
mov
push
mov
push
cmp
push
and
adc
mov
aas
cmp
fwait
icebp
popa
mov
dec
dec
or
xchg
mov
inc
imul
mov
jns
icebp
dec
and
mov
cwtl
or
pusha
fldl
fdivrp
push
ja
loop
aaa
xor
and
add
movsl
test
or
xchg
cmp
push
push
movsb
xchg
inc
lock
pop
in
jecxz
out
push
inc
stc
pop
pop
and
cmp
mov
in
inc
inc
mov
into
rcl
mov
xchg
mov
aad
fwait
shrb
loopne
xor
movsb
std
sbb
xchg
sub
xlat
out
xchg
mov
leave
push
xchg
jg
lea
sbb
sbb
mov
pushl
mov
ss
inc
loopne
cmp
dec
mov
js
jle
push
pop
lret
mov
shlb
icebp
out
dec
add
cld
lds
jb
cld
jecxz
stos
sti
adc
mov
mov
jge
mov
cwtl
and
sbb
mov
int3
out
dec
jno
imul
dec
inc
pop
xchg
push
test
add
test
lcall
movsl
cmpb
sbb
adc
in
clc
aas
cmp
test
xchg
orb
jns
cmp
or
cmc
or
aad
ljmp
jns
pop
xor
pop
jae
fildl
cmpsb
mov
jge
inc
sub
in
mov
jne
inc
mov
popa
and
xor
cmp
out
test
mov
mov
push
xchg
push
pushf
test
mov
jecxz
iret
mov
or
xchg
lods
pop
pop
mov
mov
int
xor
dec
mov
in
mov
and
pop
movsb
or
jb
popf
popa
pop
mov
repz
arpl
lcall
inc
imul
add
mov
mov
inc
test
sbb
loope
stc
movsl
cmpsl
jmp
lahf
outsl
stos
fidivs
andb
loop
ret
mov
loope
push
dec
popa
jmp
out
popfw
pop
add
push
in
rolb
scas
push
test
adc
fsts
mov
test
sbb
movsb
mov
out
mov
bound
xchg
push
cmp
icebp
xchg
push
dec
out
insl
je
or
lock
sbb
pop
lahf
es
shlb
rcll
lahf
xor
or
jnp
add
orl
add
and
xchg
out
fcmovne
int3
cmpsb
jns
sub
pop
dec
imul
sub
stos
xchg
shlb
andb
rolb
out
lcall
fidivrl
cmp
pop
pop
mov
aas
mov
clc
mov
sbb
xor
pop
repnz
mov
shlb
nop
hlt
subb
imul
je
mov
imul
lret
mov
ljmp
sbb
sbbl
fsubr
jecxz
test
loopne
push
mov
pop
sub
cli
pop
shrl
test
adc
in
aaa
push
mov
loope
add
mov
push
lods
sti
xor
loopne
ret
std
movsb
add
pop
aaa
imul
cmc
aad
test
sahf
and
add
divl
inc
mov
pushf
adc
arpl
xor
lret
out
jge
xor
sub
rolb
xchg
inc
mov
xorl
or
cmp
mov
cmp
jo
lods
dec
gs
mov
mov
test
fcoml
pop
ret
push
add
and
xor
sahf
cmpsb
popf
push
jmp
push
mov
dec
xchg
insb
lock
std
adc
push
loopew
lock
ffreep
xchg
out
adc
loop
jmp
repz
mov
fidivrl
fsubl
movsl
std
enter
push
dec
addl
xlat
je
pusha
jmp
pop
jl
inc
push
pop
repz
and
sbb
jl
add
add
cmp
fs
pop
sub
sub
jnp
int
add
sub
pop
sti
sbb
insb
dec
loopne
xor
push
jne
push
lds
jg
fwait
cltd
jne
or
repz
std
jmp
or
ret
pusha
sahf
pop
dec
insb
gs
mov
lahf
cmp
and
mov
stos
pop
fwait
idivb
mov
in
pop
jns
leave
mov
dec
es
xor
lods
rol
cld
push
sub
repz
push
or
insb
sub
ffreep
pop
and
inc
gs
lods
push
cmp
sub
and
imul
nop
xor
mov
hlt
push
mov
cmp
rolb
jl
es
ror
popa
xor
aas
jb
imul
sub
daa
daa
cli
xchg
inc
or
popf
xor
add
mov
inc
outsl
leave
daa
in
inc
test
jno
pop
xor
lock
and
lods
inc
push
repnz
jo
adc
sahf
in
loopne
push
hlt
addr16
mov
mov
test
cltd
push
xchg
adc
pop
push
inc
or
js
jecxz
bsf
push
subb
das
fstl
es
push
mov
cmp
jecxz
xchg
sub
arpl
jne
and
inc
pushf
or
mov
out
mov
jne
sub
ret
aaa
fisubrl
push
xlat
jnp
mov
lret
xchg
mull
push
push
lods
shr
cmc
test
aaa
sbbl
cld
mov
cs
inc
imul
cmp
addr16
mov
bound
cmp
stos
pushf
push
ds
inc
lods
xchg
aaa
add
xchg
sub
out
jns
pop
lds
iret
push
pop
and
popf
push
inc
nop
inc
bound
mov
movsl
jae
push
or
mov
mov
mov
in
stc
jp
mov
adc
aam
fildl
xor
in
lods
adc
cmp
ss
xchg
push
jge
jecxz
nop
out
enter
xlat
mov
and
mov
stc
call
sbb
aas
inc
sbb
xor
mov
jg
fyl2x
cmp
mov
aas
mov
insl
cmp
mov
lahf
push
push
and
in
jmp
addb
scas
fsub
sbb
sbb
sub
mov
jmp
popf
sbb
lock
dec
inc
inc
int3
sub
or
mov
cmp
mov
in
lock
mov
xor
push
mov
pop
decb
rorb
cmp
test
ljmp
sti
loop
mov
lahf
cmp
idiv
and
sub
cmpsl
jae
outsl
jecxz
pop
sub
jp
jecxz
or
out
cmp
pusha
cmpsb
add
sbbl
fbstp
sub
das
cmp
cmp
ljmp
mov
dec
add
insl
outsl
daa
add
into
push
xchg
push
xchg
stos
das
sbb
lret
or
sbb
sub
inc
test
push
in
or
rcll
lock
adc
inc
dec
sahf
cmp
aam
adc
call
dec
xor
negb
sbb
int
mov
pop
jno
sti
daa
add
lea
mov
into
pop
mov
jnp
inc
add
lods
repnz
push
jg
bound
jns
fisttpll
loop
xchg
sti
and
fidivs
repz
cmc
aam
pop
lcall
jp
jbe
hlt
mov
sar
data16
sub
loopne
std
fs
mov
xor
std
nop
sub
xlat
clc
xor
aaa
pop
aad
shll
or
stos
or
or
pop
call
ret
repz
sbb
cmp
sub
test
aad
inc
roll
cli
std
pop
jle
in
movsl
fdivrs
add
adc
insl
dec
add
dec
enter
mov
repz
mov
hlt
pop
in
jb
sub
addr16
sbb
popa
jmp
cmp
out
iret
lea
mov
sti
shl
into
xchg
divl
push
repnz
jg
leave
fnsave
mov
cmp
jp
scas
enter
aas
ss
pop
adc
xorb
add
gs
mov
jnp
push
arpl
into
mov
add
mov
add
mov
out
xchg
loope
into
jno
jl
mov
xor
jb
or
cmp
jle
mov
xchg
push
push
sbb
fxch
add
shrb
popa
mov
and
fistl
lahf
cwtl
fdivp
mov
inc
leave
insl
fistps
jb
inc
roll
jnp
and
and
repz
ror
int
gs
sub
es
fdivrl
push
xor
rorl
push
mov
enter
sti
sbb
in
or
das
adc
push
xchg
mov
cmp
xlat
imul
fiaddl
mov
push
mov
insb
push
mov
les
adc
jo
pusha
pop
mov
push
mov
or
sbbb
fxch
push
int
add
das
jmp
loope
stos
xchg
cmp
sbb
stos
pusha
in
not
push
out
xchg
nop
xor
pop
loope
cli
mov
fwait
sub
in
stos
cmp
cli
clc
lods
loopne
mov
loope
scas
jno
int3
dec
jle
test
push
fisubl
cmpsl
lcall
mov
xor
mov
lret
jae
test
dec
inc
cmpsl
rclb
xlat
fnsave
out
repz
sub
xchg
xchg
sbb
lea
out
mov
cs
fimuls
mov
add
fmuls
int
gs
fisubl
pop
arpl
inc
aam
insl
pop
popa
mov
dec
stos
sti
clc
stc
sbb
xor
lea
repz
add
aaa
mov
stos
mov
into
mov
xchg
inc
sahf
cmc
adc
loop
xchg
or
orl
repz
sbb
push
pop
push
or
mov
sbb
pop
add
cli
push
cmp
add
push
mov
push
xchg
fistps
call
dec
mov
jne
xchg
cmpsb
das
mov
jp
popf
fdivs
leave
or
jns
aas
mov
rcl
call
pop
xor
fucom
out
xchg
push
xchg
imul
pop
sti
rorb
pop
add
into
fisttpl
cmc
fmuls
addr16
mov
cmpl
mov
mov
fs
cmp
adc
lret
or
cmc
sub
mov
mov
out
pop
pushf
repz
fcompp
pop
and
hlt
movsb
les
add
lcall
daa
loopne
aam
insb
addl
adc
pop
xchg
subb
or
cmp
push
popa
lahf
pop
dec
cltd
cmp
push
cmp
fisttpll
xorl
lahf
rcrb
je
push
xchg
or
test
test
mov
cmpsb
insb
sar
jno
cmp
scas
leave
dec
cmpsb
ret
push
push
mov
cmpsb
xchg
mov
push
and
push
dec
in
sub
int3
aas
add
mov
xchg
outsb
cli
ffreep
push
fwait
mov
sti
vmwrite
or
outsl
movsb
lcall
daa
mov
enter
out
pop
cmp
lcall
lds
adc
orb
sub
mov
mov
mov
movsb
ss
jmp
ss
jmp
cmp
cmp
inc
sarl
imul
lock
jmp
hlt
fwait
jnp
pop
dec
pop
mov
test
inc
sti
push
mov
and
shlb
cmc
sbb
cwtl
push
adc
pushf
test
mov
xor
push
mov
in
jno
outsl
vmovq
into
lods
add
fisubrs
gs
inc
mov
outsb
rcrb
adc
mov
adc
add
mov
push
or
pushf
sbb
fwait
sub
sbb
enter
aad
out
push
mov
add
fidivrs
and
movsl
sub
sarb
es
pop
mov
and
popa
cmp
popf
adc
aam
dec
popa
push
std
insb
jae
aam
cmp
rcll
stos
mov
aaa
jno
sbb
sbb
sub
fs
push
mov
orb
stos
cs
and
pop
push
lods
in
int3
add
nop
addb
add
jno
aaa
stc
add
fs
insb
popf
fimuls
sbb
mov
sbb
ret
mov
sub
pop
shl
test
jl
jbe
mov
daa
sbb
xor
push
xlat
cmp
add
mov
aaa
test
inc
sbb
clc
pop
cmp
adc
cld
push
out
cs
stc
cmp
mov
sbb
xchg
push
dec
fisttpl
adc
xchg
jae
or
push
std
loop
shlb
js
sbb
aaa
clc
push
jns
xchg
aad
inc
in
addr16
xchg
lret
stc
iret
bnd
ja
fmull
leave
pushf
movsb
mov
push
movsl
jp
jle
lock
pushf
cmc
lods
iret
xchg
les
dec
loope
jo
mov
sbb
push
mov
mov
jo
dec
sub
sti
cmpsb
and
adc
mov
test
scas
je
lods
dec
fistpl
add
sbb
adc
mov
add
or
jbe
mov
sub
sahf
aam
add
dec
fcomp
pushl
ss
into
jp
fucomip
dec
pop
insl
add
lock
bound
fidivrs
dec
mov
xchg
dec
loopne
mov
add
inc
lds
sbb
pop
jl
sbb
mov
xchg
mov
jg
mov
test
rcrb
insl
cmp
add
mov
scas
ljmp
sbb
pop
add
andb
mov
lahf
out
mov
or
sub
sub
jns
test
out
mov
mov
in
ljmp
orl
add
lret
test
repnz
mov
repnz
push
stos
inc
dec
mov
clc
dec
sbb
cmpsl
push
jo
mov
mov
test
lods
les
dec
sahf
jl
or
popf
addr16
iret
jno
test
cmc
pop
cmp
or
fadds
popa
popa
je
add
sbb
fsub
pop
adc
shufps
cli
or
sub
dec
outsb
pop
pop
insb
fdivs
bound
mov
pop
cmc
push
push
ljmp
into
xchg
add
mov
xor
and
adc
sub
and
in
popf
jns
pop
ret
popf
mov
push
pushf
add
insl
xchg
lds
jle
sahf
lds
push
loope
xor
xor
ret
push
jae
jp
aas
jb
insl
rorb
jae
jne
xbegin
pop
hlt
sbb
dec
lds
pop
loop
rcrl
mov
mov
xchg
xchg
or
cltd
xor
outsl
outsb
cltd
pop
sbb
repz
mov
aaa
fsubrs
out
jecxz
pop
adc
cmp
bound
push
inc
dec
xchg
push
dec
mov
or
push
sub
cld
jmp
inc
and
or
es
mov
sub
mov
push
xchg
and
insl
out
cmp
mov
push
jge
cmpsl
mov
adc
adc
neg
out
shlb
lds
sbb
add
xor
cli
cmc
sbb
shlb
push
push
or
ja
lods
inc
mov
test
repz
inc
xlat
sub
adc
iret
add
loope
push
lods
movsb
add
fs
dec
icebp
lahf
ret
xchg
sub
xor
sbb
ljmp
xchg
ss
dec
add
jmp
xlat
je
xor
inc
movsl
add
outsl
jb
cltd
cmpsl
lods
divl
pop
out
lcall
pop
dec
xchg
dec
push
cli
imul
push
out
sub
pop
dec
rorl
mov
cmp
dec
xor
jns
pushl
in
rorl
jge
jne
mov
popf
daa
in
mov
test
pop
xchg
xchg
mov
pop
sbb
add
lock
negl
pop
mov
cmp
or
sbb
jecxz
sub
out
in
insl
cwtl
imul
and
xor
aaa
lea
push
out
mov
add
dec
dec
jmp
stos
mov
pop
loope
sar
jae
and
cmp
repnz
aam
mov
pop
mov
pop
repz
inc
stos
adc
sti
or
pop
in
dec
imul
outsb
test
cmp
aad
jl
loop
pop
cld
mov
imul
movsl
sub
test
sahf
sbb
imul
xchg
nop
jns
ret
add
or
mov
rcrb
fcmovu
outsl
loope
xor
das
es
push
jo
add
dec
cpuid
pop
and
or
add
mov
mov
cld
xchg
sahf
lods
and
jecxz
sbb
mov
sbb
push
out
mov
lods
je
test
sbb
mov
adc
pop
push
ss
outsl
rcrb
mulb
cmp
adc
inc
addr16
dec
jns
push
dec
stos
js
jo
js
stos
xchg
sbb
pcmpeqb
sbb
push
rcl
dec
mov
addb
divl
and
jno
cwtl
jmp
addr16
push
pushf
aad
push
ret
xor
decl
or
jle
and
and
fcoms
lahf
daa
daa
ret
addl
outsl
add
dec
push
lcall
mov
test
hlt
test
stos
ja
xor
leave
pop
repz
mov
push
pushw
sbb
jb
dec
lret
shll
lcall
mov
push
addr16
lcall
lods
sbb
sti
insl
or
sub
push
sbb
orb
jnp
sbb
and
jbe
lock
inc
scas
add
mov
adc
rcrb
daa
cltd
dec
je
mov
ret
pop
sbb
xor
and
mov
addr16
outsl
shll
cmp
daa
mov
add
lods
aaa
call
xchg
xchg
pop
sbb
and
pop
push
andb
loope
insb
xchg
fadds
outsl
pop
mov
add
fldl
cmpsl
mov
mov
sbb
jae
xor
sahf
push
dec
mov
lahf
xchg
leave
jmp
or
and
jbe
shrb
call
jge
xor
jnp
push
int
push
lods
push
in
cmp
pop
nop
lods
aad
icebp
push
cltd
lcall
pop
lret
es
mov
popa
jbe
jae
popf
dec
mov
rol
push
pop
fbstp
and
xchg
inc
add
sbb
stos
sbb
jg
push
push
mov
imul
fs
dec
arpl
sbb
xor
out
aas
sbb
mov
fwait
pop
arpl
push
and
push
dec
xor
int
inc
sbb
aas
inc
inc
outsl
lret
cmc
orb
dec
jg
mov
mov
adc
cmp
or
enter
mov
loope
push
or
fwait
mov
add
xchg
das
lods
push
push
dec
jne
into
or
mov
add
sti
call
out
lock
out
lock
jecxz
pop
jne
or
or
test
mov
mov
sub
jo
sub
mov
inc
pop
xchg
dec
rorl
lcall
cmpl
cmp
aaa
cli
sbb
sub
loope
jo
test
xchg
dec
aad
and
xor
inc
mov
out
das
jl
push
mov
add
xchg
clc
fstp
jl
test
addr16
shufps
adc
out
push
pop
outsl
mov
out
popf
les
pusha
inc
cmp
jge
ss
mov
mov
push
leave
xchg
add
xor
arpl
xlat
push
ret
adcl
fwait
push
aas
lock
or
push
dec
es
out
mov
xchg
stc
mov
fnstenv
cmp
push
pop
aaa
jg
cmc
cld
loope
arpl
js
lods
in
xor
cmpsb
in
idivl
int
sub
clc
push
loope
loop
dec
sbb
in
aaa
mov
notl
loop
push
sub
jbe
xor
mov
stos
fistps
les
xor
cli
xor
leave
mov
mov
sub
dec
jg
mov
cmp
inc
sub
bound
call
mov
mov
push
test
jns
loopne
lock
lret
mov
es
cld
jne
mov
jne
into
gs
push
movsb
notl
cs
in
stc
push
or
jg
sbb
fwait
mov
inc
pop
cmpsl
bsr
sbb
jnp
cld
cmp
dec
xchg
add
or
cmc
repnz
lahf
jge
mov
out
pop
int3
les
or
lds
sub
jnp
xchg
jmp
inc
and
sub
mov
jb
mov
jnp
pop
jnp
pop
dec
out
or
mov
in
out
or
and
mov
pop
das
sub
jge
ss
and
aaa
pop
iret
xchg
sbb
or
rcll
pop
inc
xor
ljmp
lcall
outsl
repz
mov
test
dec
clc
add
rcrb
push
jo
sbb
call
rcl
add
test
outsb
cs
push
fimull
aad
push
pushw
xchg
das
sub
enter
icebp
imul
hlt
add
cs
pop
inc
xlat
and
psrad
sbb
js
test
in
and
js
xlat
call
sbb
fdiv
icebp
jmp
aas
insb
imul
add
ds
pop
sub
xchg
jp
push
test
fwait
int
lcall
mov
sub
mov
jl
leave
jbe
pop
xchg
aaa
out
leave
ja
leave
outsl
jne
stos
push
cwtl
cs
test
call
in
mov
scas
arpl
mov
pop
mov
leave
ss
and
inc
data16
leave
rorb
subl
push
repz
sbb
in
divl
push
and
add
jne
dec
imul
data16
scas
ja
in
jbe
xchg
sbb
adc
jle
out
dec
test
and
stc
out
jmp
in
cs
cmpsl
mov
jl
mov
adc
clc
into
adc
push
pusha
jae
add
adc
or
arpl
inc
outsl
sub
test
xchg
jne
mov
and
fidivl
es
cmp
or
es
testb
xchg
jp
pushf
repz
fildl
mov
pusha
in
pusha
adc
xor
sbb
add
jnp
adc
pop
jne
sub
int
push
adc
call
lock
je
mov
in
cmp
dec
mov
add
sbb
push
pop
popf
xor
push
std
push
in
andl
cmp
in
mov
ljmp
sahf
and
xor
push
pop
lahf
test
xchg
iret
cmp
mov
jne
mov
sbb
pop
movsl
int3
jl
shll
jno
ljmp
cmp
cli
and
sub
cwtl
jp
jmp
or
das
scas
out
nop
xchg
movsb
dec
divb
sbb
adc
dec
int
enter
pop
repnz
les
cmpsb
jmp
jne
int3
dec
adc
mov
in
cmp
iret
or
add
adc
push
sub
inc
rcrb
rcll
push
xchg
std
xchg
fisttps
sti
push
xchg
sub
xchg
cmp
cmpl
push
sub
pop
push
mov
es
subl
dec
inc
scas
aam
test
push
stc
mov
add
pushf
shl
push
mov
inc
jb
dec
jmp
roll
sbb
fwait
mov
fistpll
dec
add
fists
or
loope
or
jo
fimull
jbe
push
repz
mov
int3
push
mov
insl
cmp
imul
and
cs
cwtl
xchg
fsubr
push
or
fsubp
pop
inc
jae
arpl
int
sbb
push
jge
and
mov
inc
mov
adc
xor
faddl
inc
movsl
mov
add
sub
jmp
sub
or
and
hlt
imul
fistps
fs
add
push
lea
lcall
mov
mov
aaa
xchg
jo
xor
mov
and
out
pop
pop
inc
sti
pushf
aaa
mov
scas
decl
add
stos
xlat
addl
lock
inc
cmp
mov
mov
sbb
sbb
loopne
inc
cmp
push
les
insb
jae
subl
adc
push
pop
fdivrp
cmp
into
sbb
cltd
sbb
in
mov
and
jmp
sbb
cli
lods
mov
xchg
sub
lret
push
frstor
cmpsl
shlb
or
fwait
out
dec
xchg
jne
cmc
sub
adc
out
stc
sub
sub
mov
pop
xor
dec
bound
sub
mov
inc
notb
nop
or
rcrl
mov
jno
cmp
pop
scas
ret
lds
xchg
jl
imul
adc
popf
jbe
adc
loop
aas
fcompl
adc
cmp
push
aaa
xchg
jb
adc
pop
push
sbb
adc
and
fsubr
pop
sbb
cmp
xor
arpl
movsb
add
int3
dec
nop
or
jae
mov
mov
shrb
cmp
out
lahf
lret
fbstp
sub
addr16
sar
mov
mov
call
push
add
and
jno
inc
iret
xlat
and
and
nop
mov
pusha
cmp
xchg
inc
cwtl
lret
repnz
into
repnz
loope
outsb
sbb
mov
dec
imul
bound
or
les
cmp
sbb
xor
inc
unpckhps
cmpsb
fcompl
in
jno
cmpl
int
es
mov
push
cmp
int3
arpl
es
dec
aad
sahf
loop
out
jl
loope
loop
sbb
nop
loop
inc
ljmp
push
xchg
pop
test
rdmsr
inc
push
loope
scas
out
mov
dec
push
ficoml
test
outsb
and
testb
adc
mov
xor
call
sub
xchg
loope
push
enter
mov
outsb
imul
cli
rcll
cmpps
mov
adc
inc
jle
incb
cmp
sbb
cld
js
dec
sub
dec
enter
sub
xchg
sbb
iret
xor
cmpsb
js
stc
add
push
das
mov
dec
addr16
rolb
and
inc
dec
cmp
icebp
pop
sbbl
je
ds
fs
mov
push
insb
inc
jecxz
cs
inc
in
ffree
fisubrl
lods
out
sub
jns
push
cmpsl
sbb
xchg
nop
pusha
inc
mov
das
std
imul
jmp
loope
mov
lea
mov
leave
adc
mov
pop
insl
mov
ret
mov
test
pop
sahf
leave
in
dec
xor
into
or
es
inc
cli
sbb
xchg
add
cmp
ljmp
inc
test
push
push
adc
inc
pop
mov
jae
xor
xor
in
push
arpl
mov
dec
fbld
loop
mov
cld
cmp
push
adc
push
cmc
jg,pt
lcall
andl
jb
fiaddl
outsb
lret
es
in
insl
jae
or
cmp
fdivr
xchg
movsb
mov
xor
mov
sbb
jb
xor
fs
mov
xor
and
adc
sbb
stos
sbb
mov
cmp
xor
sub
loopne
enter
cmp
mov
inc
push
test
lods
or
mov
xchg
xchg
jo
or
jnp
ds
sub
push
jmp
movsl
movsb
mov
flds
add
std
outsl
jmp
cmc
jb
in
push
xchg
adc
sbb
rolb
add
cwtl
imul
nop
push
mov
repnz
into
mov
or
testb
xchg
cmpsl
dec
data16
cmpsb
in
loopne
popa
or
rcl
clc
jp
jmp
jge
fmul
pop
test
and
pushf
sbb
pop
cmpb
call
or
fistpl
andl
inc
call
sbbl
or
sahf
or
in
dec
mov
mov
sti
movsl
add
int
js
cmp
mov
aaa
mov
cmp
jl
push
movsl
pushf
xchg
add
lock
int3
sbb
push
aad
sub
mov
dec
icebp
jnp
sub
jb
sub
jle
pop
mov
fdivs
popa
jp
jl
rcrb
xchg
sbb
sbb
or
cmc
mov
cmp
int3
stc
sub
stc
js
push
pop
jmp
mov
js
jle
push
adc
enter
std
jle
outsl
sub
mov
add
fldcw
or
adc
mov
lret
ljmp
and
out
mov
call
pusha
mov
sub
and
das
test
pop
xchg
dec
jae
lahf
call
jge
repz
pusha
outsl
pushw
sbb
jne
lods
shrl
pop
adc
adc
pop
aas
push
or
int3
sti
or
adc
lods
lea
jmp
mov
addr16
xor
scas
cmp
pop
cmp
push
lcall
out
ret
mov
arpl
or
ret
sub
repz
icebp
jle
sti
aaa
js
lods
jbe
ret
ftst
jae
shr
sub
or
inc
or
dec
cmp
or
push
push
out
cld
pop
or
pushf
dec
daa
mov
xchg
mov
jb
adc
clc
data16
fcoml
xchg
mov
dec
dec
fld
ret
or
adc
mov
sub
arpl
repz
push
add
pop
dec
push
lods
pop
aaa
lods
adc
sub
test
inc
cli
cmpl
ret
adc
lods
inc
shlb
dec
out
xchg
push
push
lock
push
into
xor
daa
ja
notb
sub
xor
mov
pop
outsl
cmpsb
test
mov
mov
sub
cmp
or
mov
sahf
xchg
je
adc
nop
xchg
leave
inc
pop
arpl
fld
or
sti
in
mov
fs
pop
mov
mov
jns
jg
sub
xchg
mov
inc
push
scas
repnz
xchg
es
xor
test
stos
inc
sarb
test
bound
and
inc
pop
movsb
mov
jb
outsb
jmp
inc
ret
dec
js
fldcw
jmp
daa
les
dec
mov
or
xchg
mov
fs
test
inc
call
and
fadds
adc
popa
sti
xchg
hlt
sahf
in
enter
cmp
adc
rclb
vsubps
pusha
adc
and
add
lret
mov
cmp
inc
ja
add
fs
rolb
or
push
insl
lahf
lods
sub
addr16
rorb
or
jecxz
jbe
insl
push
mov
sub
jne
sahf
or
adcl
xchg
mov
jb
push
cmp
pop
pop
daa
cmp
movsb
sar
inc
jle
cmpsb
jbe
adc
popa
test
pop
pop
sub
clc
stc
mov
repz
push
fwait
push
outsl
outsl
xchg
jge
lods
rclb
test
ret
arpl
xor
jae
es
lcall
lods
cmpsb
lods
xchg
push
int
arpl
mov
jbe
rcr
sbb
sete
cld
push
pop
imul
pusha
fsubl
sbb
call
xchg
pop
push
pushf
fimull
popf
fcmovnb
rcl
stos
in
outsb
pop
arpl
out
inc
prefetchw
int3
push
mov
or
mov
fcoml
or
loopne
push
inc
mov
mov
daa
sub
fdivrp
pop
jp,pt
xor
pop
xchg
pop
inc
andl
mov
xchg
jp
push
mov
imul
add
bound
loopne
dec
jne
arpl
pushf
in
jno
add
mov
mov
xchg
xchg
test
jl
movsl
test
push
cmc
js
fstpl
xor
loope
lea
push
ficomps
movsl
xchg
test
add
lret
arpl
push
fdivr
pop
sarl
pop
out
lret
xchg
aam
sub
addr16
test
cmpsl
into
iret
test
xor
xchg
xchg
push
into
mov
mov
int3
ljmp
mov
in
ret
test
lahf
mov
mov
lcall
arpl
and
mov
les
or
loope
loopne
mull
scas
sbb
inc
mov
jo
sbb
sub
and
mov
outsb
inc
inc
icebp
xor
clc
rol
xchg
ret
mov
stos
daa
ret
data16
jle
push
cli
dec
xchg
int3
sbb
xor
test
fs
cmc
pop
push
mov
mov
jb
aaa
loope
loop
stos
adc
inc
ret
mov
aas
daa
ficompl
pop
es
adc
sbb
insl
cltd
scas
sbb
cmp
dec
fwait
lcall
ret
or
xchg
inc
lods
rorl
das
pushf
inc
fs
dec
mov
mov
cmp
push
pop
ss
dec
pop
cmp
mov
mov
inc
jns
stos
jmp
sub
aad
push
cli
jb
outsb
cltd
aas
or
sub
imul
movsb
mov
inc
push
xchg
ss
enter
mov
shlb
int
mov
mov
loopne
mov
dec
int3
ljmp
ficoms
rorb
int
stos
push
pop
pusha
add
repnz
push
sbb
jg
and
rcrl
in
push
mov
and
adc
fs
push
xchg
xchg
movsb
or
pushf
xchg
jmp
or
jno
ds
jne
fsubl
jb
cmp
ret
jnp
cmpsl
jle
fmuls
clc
popf
decl
sub
sbb
cmpb
xchg
jmp
and
movsb
mov
ss
adc
inc
mov
xchg
xchg
sbb
out
xchg
divl
mov
sbb
les
jns
mov
fwait
mov
fs
stos
mov
sti
loope
adc
cld
cmp
and
xchg
pop
dec
movsl
cltd
lcall
mov
jge
lahf
adc
lcall
dec
gs
in
aaa
js
out
aas
std
fsubl
mov
int3
test
cld
insl
push
mov
adc
repnz
jge
mov
push
cmp
add
enter
pushf
aam
scas
leave
mov
jnp
cmc
dec
movntq
xor
pop
mov
shll
inc
xchg
mov
shl
fwait
pop
lds
push
psadbw
cmp
repnz
push
pop
and
out
cmc
in
jg
mov
adcb
stos
mov
pop
imul
testl
sti
mov
mov
cmp
pop
mov
cltd
scas
ss
icebp
imul
and
lds
adc
rclb
mull
or
sub
mov
add
mov
sbb
cmc
pop
addb
adc
xchg
jno
shll
iret
dec
push
fcoms
inc
pop
test
rcl
icebp
data16
xor
cli
cmpsl
or
sbb
int
and
fwait
in
es
clc
faddp
stos
xchg
int3
sbb
out
lds
add
lods
mov
mov
xchg
out
xchg
adc
mov
cmpsb
jle
sbb
push
push
shl
rcll
xchg
les
xchg
std
xchg
sub
fwait
outsb
add
orb
cmpsl
add
mov
ljmp
add
jno
cmp
outsb
adc
movsb
imul
jbe
ficompl
lds
jbe
jmp
cmc
inc
xor
mov
dec
insl
arpl
rcrb
out
cmp
pop
pop
or
mov
icebp
fimuls
pop
push
lahf
adc
cmp
pop
xchg
adc
xchg
and
int
push
push
xchg
xlat
dec
lret
dec
xlat
mov
repz
pop
ja
xor
xchg
pop
adc
mov
cmp
and
rorb
jno
dec
int
dec
nop
push
insb
jecxz
outsl
adc
xchg
movsb
int3
dec
lea
shlb
inc
clc
xchg
shl
jb
out
inc
pop
or
call
cli
inc
out
or
mov
call
jo
fisubl
mov
in
stos
in
aad
aaa
pop
cwtl
jecxz
and
lahf
xor
jb
ror
sbb
mov
fxch
xor
inc
mov
cmc
mov
sarl
stos
xchg
cltd
pop
adc
in
scas
lret
and
js
or
les
ja
scas
rcrb
leave
out
or
dec
and
inc
xorb
outsb
in
in
fstpl
ja
loope
sub
stos
pop
and
inc
fnstenv
ret
test
cs
sub
dec
mov
stos
aas
mov
daa
nop
rcll
push
mov
mov
lods
jp
xchg
lret
dec
sbb
fs
lods
aad
xchg
fisttpl
sbb
lods
cmc
call
mov
push
push
lret
pop
push
aaa
pop
inc
xor
inc
mov
out
add
and
mov
into
sti
mov
filds
push
cmp
test
add
mov
pop
adc
loopne
pushf
xor
sahf
insl
push
add
mov
push
js
pushf
pop
ljmp
push
lret
sbb
fisttpl
jno
and
push
xchg
sub
mov
cli
cmp
in
idivb
push
inc
push
adc
stc
sbb
push
repz
scas
sbb
fsubl
daa
cltd
std
xor
sbb
xor
xchg
sbb
xor
das
aas
scas
xor
jae
mov
xchg
in
shrb
and
cli
mov
mov
push
imul
insl
insb
push
test
out
in
in
lret
add
inc
daa
lds
nop
pop
sbb
jmp
imul
fidivs
repnz
repz
mov
test
repnz
arpl
jge
shr
in
pop
cmpsl
fcmovnb
cli
nop
movsb
or
jmp
push
pop
add
pop
jbe
jae
imul
mov
lcall
cs
and
push
rcrl
add
push
push
out
adc
pop
mov
and
xor
and
add
sahf
mov
into
in
and
insl
sbbb
adc
inc
nop
mov
in
adcl
sti
loop
cmp
int3
push
scas
test
pusha
fsubrl
hlt
sub
loopne
or
xor
in
outsb
shr
sub
lahf
lahf
mov
xchg
jg
add
inc
inc
jle
adcl
out
cltd
push
jg
adc
cmp
lret
sub
push
lods
sbb
pop
xchg
neg
mov
pop
or
imul
sti
cmc
out
stc
data16
cltd
push
sbb
cmp
flds
mov
push
inc
das
xor
mov
int3
test
sahf
mov
lret
cmp
in
dec
xor
push
xor
push
inc
xchg
push
mov
mov
adc
pop
cmp
jl
cmp
xlat
or
pusha
sub
fistps
sti
add
repnz
and
pop
pop
sbb
mov
ud2
shlb
in
clc
fsubrp
mov
data16
fninit
jl
mov
shll
enter
int
out
xchg
divb
xlat
jne
orb
mov
lret
and
fwait
inc
pop
dec
pop
and
push
inc
movsb
xchg
mov
rorl
loope
pop
dec
in
and
sbb
xor
imul
adc
sbb
mov
cmc
ret
mov
fsubrl
repz
je
lahf
repnz
cmp
mov
das
inc
pop
in
outsb
mov
adc
lahf
sub
in
xchg
shl
mov
or
ss
xchg
testl
and
sub
push
or
dec
push
lcall
gs
movsl
icebp
icebp
lcall
adcl
add
negb
dec
lea
jae
or
add
push
xchg
jno
mov
js
fwait
lret
cli
dec
cmpsb
out
add
xor
xchg
scas
ja
sub
insl
cwtl
pop
add
cmp
icebp
sbb
sub
xlat
and
lds
xchg
cmc
pop
jl
xor
push
popa
jmp
movq
nop
outsl
xor
inc
imul
jecxz
xor
cmp
aad
inc
movsb
cmpsb
and
xor
xchg
ss
testb
adc
mov
test
lock
or
mov
sbb
push
scas
mov
insb
arpl
mov
in
and
xchg
scas
int3
lods
xchg
nop
ja
pusha
cmp
cli
lock
subb
iret
cmp
or
fstpl
les
jl
loop
ret
shlb
fs
pushf
jl
into
test
xor
imul
sub
jle
adc
mov
fcmovu
mov
or
mov
repz
mov
adc
rolb
fwait
push
xor
rcr
les
pop
push
stos
into
and
sarl
mov
and
cmp
in
mov
inc
xchg
xor
fnstenv
pop
ss
jb
jmp
aad
mov
xor
test
sbb
clc
sub
js
test
jo
dec
cmc
lds
push
xchg
es
std
dec
mov
in
xor
push
jl
ffreep
mov
hlt
shll
mov
mov
addr16
mov
pop
loop
fmull
hlt
ret
push
push
xchg
cmp
adc
pop
fidivl
mov
mov
jnp
lahf
xchg
xlat
add
xchg
rcrb
push
jbe
ja
or
sbb
and
and
push
out
fucom
clc
and
pop
ret
dec
mov
in
and
mov
pop
sarb
test
or
jno
mov
xlat
fstpt
je
mov
push
cmp
outsl
or
mov
xchg
lret
inc
and
xchg
and
xlat
dec
test
xor
push
add
mov
in
jns
cmp
rorb
mov
fwait
push
xor
push
scas
clc
sub
fsqrt
jb
daa
daa
sti
push
out
jecxz
bound
mov
xor
in
mov
jp
fidivl
add
pop
pushf
cli
sub
mov
mov
leave
pop
ffree
pop
jg
inc
push
aad
xchg
in
inc
shll
scas
pop
jne
stos
out
arpl
in
push
scas
jle
push
icebp
xchg
push
mov
sbb
mov
sbb
in
mov
jg
cmpsb
hlt
sbb
arpl
mov
ret
add
sti
push
lods
mov
and
dec
sbb
out
xor
arpl
pop
int
lods
pop
adc
arpl
xchg
call
lret
jmp
xchg
dec
jmp
nop
dec
and
cmp
sub
inc
mov
insl
cwtl
jne
cmp
inc
mov
movsb
push
movsb
pop
in
push
mov
cmp
into
inc
jne
paddw
pop
sar
test
mov
xchg
push
and
dec
adc
addb
pop
mov
mov
cmp
rcrl
jge
cmp
pushf
mov
xchg
cmp
movsl
cmp
adc
add
mov
sbb
popa
or
and
out
ficompl
cld
inc
andb
sbb
add
mov
test
pop
sub
mov
adc
aam
ljmp
rol
mov
in
jp
cmp
mov
into
fisubl
jge
or
mov
roll
fs
pmullw
inc
int3
jo
push
imul
fcmovu
ds
popf
fimull
lds
pop
cmp
inc
negl
imul
sbb
or
outsl
fmull
scas
jle
mull
cmp
push
cmp
call
sub
sti
pop
ss
movsl
sub
mov
pop
cli
ljmp
push
call
push
add
call
push
movsb
std
or
and
jmp
dec
cmp
repz
int
xor
push
jae
xlat
xchg
push
sbb
xchg
mov
and
mov
dec
sbb
sub
mov
in
or
dec
jmp
pop
cmp
push
movsb
mov
aam
mov
inc
mov
cltd
add
in
dec
mov
leave
icebp
cld
dec
xor
sub
push
mov
push
ds
lds
popf
aad
mov
arpl
ret
jle
fdivs
in
push
aam
mov
add
cmp
ds
add
jecxz
xchg
push
sub
fistpll
ss
or
ja
clc
popf
icebp
push
ja
pusha
pop
cmp
loope
lret
popf
jmp
outsl
mov
dec
mov
push
lret
out
jnp
leave
stc
mov
imul
cmp
in
ret
imul
pop
in
inc
mov
xor
jmp
jmp
out
ljmp
xor
cmp
stos
mov
jl
ror
fists
repz
aad
aaa
addl
dec
pop
int
call
lcall
jle
pop
maxps
xchg
jmp
and
sub
idivl
pop
in
fwait
sub
movsb
add
sub
and
cld
push
imul
mov
call
aaa
and
inc
movsl
xchg
lret
pop
cmp
shl
sub
cmp
fnstsw
lcall
cmp
lret
cmp
inc
in
cmp
fsub
loopne
mov
fstpt
mov
incb
push
adc
movsb
andb
stos
mov
fcoml
sbb
lods
pop
push
xchg
insb
mov
push
rcrl
push
and
cmp
stc
not
lret
rolb
push
xor
mov
lahf
lds
loopne
out
push
pop
inc
lds
test
ret
in
gs
fcmovne
or
mov
pushf
jmp
push
jne
dec
ret
fnstenv
or
jl
cmp
xor
nop
jo
test
adc
xor
sub
pop
and
sbb
cmp
call
xchg
pop
mov
scas
add
and
jae
mov
push
imul
adc
call
push
insb
daa
mov
inc
xchg
jbe
hlt
ja
xor
mov
push
gs
or
sub
je
stos
je
pop
jns
sbb
fdivs
fs
mov
push
insb
scas
mul
jl
adc
xchg
push
sbb
mov
cmp
or
fucomp
fiaddl
lret
les
icebp
add
test
testl
sub
adc
dec
inc
mov
icebp
imul
icebp
rorl
in
cmpsb
in
inc
push
inc
or
mov
popa
jns
movsb
xchg
sub
add
lcall
mov
hlt
push
hlt
dec
and
and
mov
dec
push
xchg
mov
xor
jbe
add
pop
pop
movsb
cltd
negl
ljmp
ror
adc
xor
out
push
scas
jecxz
mov
ja
loop
loope
mov
loope
dec
outsb
js
mov
das
push
push
int3
out
xchg
jp
aaa
jecxz
daa
mov
pusha
inc
fstpt
cmpsl
cmp
loope
mov
add
pusha
push
in
mov
fiadds
fs
pop
divb
mov
pop
add
push
jns
sub
cmc
and
xchg
fisttpll
call
cmp
lret
aaa
adc
cmp
lock
pop
in
in
jmp
jl
mov
or
stos
movsl
lret
movsb
das
stos
rclb
das
dec
sbb
dec
sub
lods
sbb
mov
jmp
filds
sbb
rcl
pop
pop
fimull
push
and
jne
sbb
shrb
cmpsl
adc
push
add
pop
in
xorl
loopne
and
mov
mov
nop
push
jns
mov
mov
jnp
std
arpl
mov
pop
cld
ds
rcll
or
inc
jg
adc
add
cli
int
sahf
or
dec
jbe
mov
add
inc
cltd
pop
pusha
push
jge
sub
aas
in
or
pop
mov
into
out
mov
push
xchg
inc
sbb
mov
and
dec
pop
enter
xor
cmc
or
sbb
sbb
jb
testl
mov
pop
mov
shlb
push
shll
adc
es
popf
sub
out
inc
loop
jg
sti
adc
fwait
xchg
pop
mov
call
sub
mov
and
fdivs
push
mov
push
ds
repz
xchg
jp
sub
dec
in
jae
push
inc
sbb
mov
into
lods
adcl
or
aam
pusha
adc
cmc
pop
jl
add
jb
mov
xor
rep
cmp
inc
fistpll
xchg
int3
adc
out
test
out
mov
arpl
shll
mov
push
xor
leave
pop
mov
dec
xchg
test
adc
lods
leave
out
mov
jne
xchg
sub
push
decl
sbb
mov
or
jns
psllw
cs
test
outsl
lret
rcrb
leave
mov
jbe
aam
int3
push
pop
ja
adc
aas
lret
out
inc
jns
add
mov
xor
pushf
scas
adc
jbe
inc
add
jae
mov
out
mov
push
jmp
iret
sbb
jo
add
out
jle
call
push
pushf
add
test
push
out
mov
in
xchg
fstps
enter
rcrb
leave
mov
jns
add
lcall
pop
lods
mov
push
push
sbb
pop
mov
sti
mov
rcrb
add
unpcklps
pop
imul
ja
sbb
mov
fldl
pusha
inc
xchg
mov
dec
or
hlt
mull
lods
ret
popa
push
inc
sub
push
repz
fcoml
xor
sbb
cmp
aas
adc
das
fsubs
rolb
mov
cmp
inc
xchg
inc
or
scas
or
call
out
mov
mov
cmpsb
inc
ds
lret
scas
in
dec
imul
mov
mov
jge
cmp
mov
and
lahf
push
out
cli
sbb
stos
jmp
inc
das
stc
and
sub
pop
mov
sbb
stos
sub
ret
hlt
fs
movsb
cli
scas
cmpb
mov
mov
sub
xor
rolb
mov
repz
mov
jne
mov
leave
and
dec
cs
mov
cwtl
sub
int
ret
add
and
pushf
shlb
int3
fimull
mov
clc
jo
cmpsl
jo
jbe
lcall
mov
in
xchg
pushf
js
fcomip
stc
mov
mov
rolb
xor
xchg
sti
ss
in
pusha
jle
xchg
push
addl
imul
cmpsb
jecxz
or
insl
jge
aad
popa
mulb
xor
sahf
xor
or
xchg
es
add
loopne
data16
repnz
fisubs
jl
jno
xor
sbb
data16
or
mov
test
or
inc
pusha
mov
movsb
or
into
sbb
frstor
js
jbe
jl
pushf
mov
sbb
fwait
dec
push
or
repz
inc
dec
xchg
enter
enter
lret
icebp
enter
fimull
in
mov
add
sbb
pusha
jne
or
shlb
lcall
loop
out
arpl
cmp
mov
cmp
popa
dec
or
cltd
xchg
dec
sbb
dec
and
aas
push
lret
notb
cmp
shll
out
lods
jl
je
enter
aam
push
mov
push
test
rcll
sub
push
int
pop
mov
lods
inc
shll
cmp
rolb
int
mov
cmp
jns
sti
imul
je
add
hlt
jmp
ss
gs
enter
sbb
inc
sub
add
into
orl
sti
or
cmp
test
sub
pop
ret
dec
hlt
fidivrs
dec
xor
mov
popa
jecxz
mov
je
insb
sbb
cmp
cs
orb
mov
fdivs
mov
xchg
adc
shrl
repz
jno
jl
lods
sub
ja
push
pop
lahf
daa
mov
outsl
in
jne
or
or
or
movsl
jns
movsb
jns
sub
jp
ds
add
pushf
sub
scas
sbb
jg
sub
imul
leave
mov
jae
incb
mov
lods
sub
daa
mov
testl
sub
mov
rcrb
jg
sbbb
sti
jo
sub
int
cwtl
popf
mov
pusha
pop
or
cwtl
loope
or
ror
shrb
test
mov
fwait
lret
and
popa
cmp
imul
push
out
stos
jg
filds
fstl
cld
push
inc
mov
add
pusha
pushf
rcrb
testl
add
hlt
cmp
dec
pusha
mov
cmp
inc
and
jb
add
in
xorl
pushf
jnp
lods
push
cmp
movsb
jg
testb
leave
mov
mov
pop
and
mov
test
in
rcll
int3
jbe
add
ret
test
lock
xchg
lea
pop
in
lret
or
inc
xchg
jns
aas
lahf
mov
or
xlat
incb
dec
fs
call
std
stos
sahf
sub
and
mov
jp
fcomps
lcall
or
push
fildl
adc
dec
sub
mov
inc
cmpsl
pop
cmp
cmp
push
push
pop
xchg
xor
adc
mov
xchg
mov
in
mov
xchg
int
call
sub
test
movsb
adc
cwtl
inc
loopne
inc
ds
jl
jmp
orb
mov
pop
lahf
shlb
lds
adc
fists
adc
fiaddl
cmpsb
xor
sub
in
repnz
push
xchg
cmc
cmp
mov
sub
jnp
pop
mov
dec
dec
sbb
shlb
push
xor
call
cmp
push
mov
popa
jnp
adc
sub
dec
pop
cmp
mov
call
xchg
fmuls
pop
call
lcall
sbb
jno
fcoml
in
outsb
lea
mov
sbb
jg
cmp
jnp
xor
aaa
cmp
loopne
addr16
jae
jns
jge
xchg
lcall
sarb
mov
into
push
divl
sbb
xor
xchg
cmp
out
rolb
mov
dec
xor
popa
push
loopne
outsl
ljmp
adc
rcr
lret
jle
and
mov
leave
add
jp
sub
xchg
sbb
inc
in
sbb
push
xchg
dec
cwtl
xor
setbe
dec
jl
wbinvd
push
jle
xchg
mov
add
or
gs
push
cmpsb
mov
push
xchg
cmp
xor
mov
xchg
scas
fisttps
lea
mov
and
xchg
in
rcrl
in
loop
cltd
jae
fstl
add
pop
movsl
pop
gs
add
rorl
aas
movsl
cmp
mov
jns
pop
cld
mov
hlt
mov
or
adc
inc
imulb
mov
push
scas
cli
popf
pop
inc
lret
xchg
sbb
aam
xor
xchg
es
push
push
int
adc
xchg
daa
dec
clc
cli
stos
insb
add
fnstcw
ljmp
cmp
fs
mov
clc
test
adc
sub
sbb
cmp
jo
mov
inc
mov
jno
push
bound
push
adc
sub
pushf
shll
orl
sbb
xor
test
dec
dec
xchg
jg
int3
pop
sub
shr
cmp
xor
mov
or
mov
cli
divl
push
mov
in
data16
in
lods
cmp
xchg
aad
js
mov
cmp
popa
mov
imul
push
idiv
scas
bound
and
lods
leave
inc
int3
inc
sub
inc
aad
pop
test
sbb
jns
ljmp
int3
and
bound
adc
lcall
and
or
orl
lods
mov
cs
cmp
mov
mov
adc
or
rorl
clc
in
cmp
cmp
outsb
ret
pusha
data16
out
and
loope
jle
scas
fistpll
mov
ds
clc
insl
dec
popa
cmp
ja
stos
xchg
mov
pop
and
add
push
sahf
aam
cmpsl
and
sti
into
addr16
fbstp
out
sbb
je
mov
push
test
dec
jo
mov
fcomps
jbe
loopne
jae
mov
jge
mov
and
xchg
jbe
cmp
sbb
push
or
cmp
in
lcall
pop
nop
mov
mov
lods
jne
xchg
aad
and
add
xor
pop
jmp
lock
sub
shrl
leave
sbb
ret
sub
mov
inc
hlt
xchg
pop
and
pop
ret
test
mov
cli
in
cmp
xorb
ret
sbb
sbb
or
stc
mov
mov
push
jg
int
sbb
xor
pop
pop
aas
mov
lret
test
shrl
arpl
hlt
add
test
loop
into
xor
idivb
jno
out
les
xor
rol
cs
dec
into
or
stc
adc
mov
icebp
or
iret
xor
cmpsl
mov
loope
mov
in
jno
push
std
or
pop
or
movsb
xor
mov
iret
fcomps
adc
sahf
xor
jne
lea
mov
fidivl
add
icebp
mov
jge
sbb
aas
orb
add
xchg
push
addl
push
enter
clc
sahf
mov
mov
jae
orl
jnp
jecxz
lock
les
test
sub
dec
je
loopne
jecxz
in
dec
cmp
mov
imul
test
mov
stos
imull
aaa
cmp
push
hlt
sub
pop
mov
adc
jb
adc
pop
cmp
mov
pop
mov
test
cs
rolb
pop
xchg
lret
std
xchg
scas
sub
shrd
add
xchg
xchg
mov
push
jns,pt
adc
fcmovnb
dec
add
jne
xchg
imull
adc
jnp
in
rol
or
or
cwtl
xor
jb
jnp
adc
add
bound
sub
dec
decb
dec
mov
test
mov
dec
in
les
das
rcll
mov
roll
pop
sub
dec
mov
cwtl
loope
dec
int3
fs
je
adc
sbb
adc
outsl
and
fs
lds
mov
cmpsb
jle
cmp
and
mov
les
push
stc
xchg
pop
cmp
call
cmc
jo
mov
xchg
mov
jbe
neg
bound
mov
xlat
pop
jge
imul
cld
cmp
sub
testb
xchg
mov
jp
pop
and
xchg
rclb
mov
loop
cmpsl
xor
xchg
stos
xlat
inc
hlt
mov
mov
daa
in
enter
lods
sbb
test
imulb
pop
ljmp
es
mov
sbb
jbe
xchg
fsubl
jmp
xor
scas
dec
int
imul
jle
loope
in
lods
sbb
fs
and
push
scas
or
loop
pop
mov
arpl
xchg
fcoms
insl
xlat
xchg
mov
mov
jae
add
mov
sub
sbb
mov
cmp
imul
pop
rcl
into
pop
push
xor
fcomip
test
sbb
fsubr
cmp
mov
hlt
xorb
cmc
out
sarl
std
arpl
push
or
out
pop
sub
cld
mov
sbb
bound
push
xor
mov
popa
shlb
ret
jae
jl
pop
cmp
lock
out
mov
push
aas
popf
push
dec
testl
dec
push
fimuls
mov
ret
movsl
ret
jg
mov
push
jb
test
test
out
popa
mov
loope
or
out
jns
ss
or
cld
pop
fs
xor
loopne
cmp
cli
jle
sbbl
lock
loopne
jb
push
pop
incl
lret
cmp
mov
cmp
sub
cmp
sahf
mov
inc
sub
shll
test
fstps
mov
shlb
xchg
mov
enter
xor
cmpsb
inc
mov
in
xchg
xchg
push
scas
lods
sub
push
dec
inc
xor
shl
aam
push
xor
test
push
mov
dec
sbb
cmp
popf
call
adc
dec
and
xchg
pushf
movsb
mov
lea
fisubrs
in
jp
addr16
testl
aam
and
inc
mov
jnp
mov
sahf
imul
sbb
add
push
adc
outsb
lods
xor
adc
repnz
jl
mov
add
sub
mov
cltd
scas
inc
jmp
or
popf
cltd
mov
add
mov
inc
adc
insb
lock
inc
mov
test
out
sub
je
std
repz
push
adc
inc
jmp
outsl
ds
lret
enter
push
lcall
pop
je
sti
ret
mov
xor
aam
shlb
sahf
mov
mov
cmp
fistl
sahf
cmp
pop
movsl
push
mov
add
int
lods
xor
xor
bswap
dec
and
lods
hlt
imul
cltd
adc
sub
movsl
mov
push
jbe
jb
jns
insb
mov
sub
test
add
mov
and
pop
inc
es
arpl
pushf
pusha
add
sub
push
sldt
push
dec
jbe
xchg
mov
daa
and
sahf
sbb
pop
int3
adc
mov
xchg
stos
xchg
push
xchg
jo
pop
jp
aaa
stc
scas
or
jb
mov
packsswb
mov
into
outsb
add
mov
inc
mov
lock
or
out
jo
sub
xchg
pop
cmpsl
xchg
and
aaa
mov
sarl
mov
or
adc
cli
dec
adc
mov
mov
lret
mov
mov
xchg
dec
xchg
adc
sub
push
dec
mov
xchg
decb
mov
pusha
xchg
into
mov
out
aad
mov
and
cltd
cmp
test
cmp
insl
mov
imul
cwtl
in
pushf
and
push
in
andb
adc
mov
adc
xchg
xchg
aad
in
cmp
icebp
nop
and
loopne
or
mov
cmpsl
lock
mov
xor
outsl
addr16
imul
sub
push
inc
sub
hlt
add
mov
bound
sbb
popa
mov
in
add
mov
and
outsb
rorl
shr
lahf
rcrb
lds
xor
cmp
enter
mov
es
in
out
leave
jl
daa
pop
dec
mov
roll
loop
dec
cmp
mov
mov
adc
add
sub
dec
ss
movsb
mov
mov
popa
lods
ret
xchg
jge
mov
enter
add
loopne
test
xor
lahf
insl
loop
xchg
cmc
icebp
push
dec
ja
pushf
xchg
aad
inc
ljmp
lock
scas
xchg
popf
shlb
mov
adc
fnstcw
pop
pop
jmp
push
in
push
cmc
dec
testl
sub
std
xor
adc
and
sbb
mov
inc
add
push
js
ficoms
adc
add
mov
inc
xor
loop
lock
stc
int
push
adc
rcl
dec
or
push
sub
pop
fcom
add
mov
arpl
sbbl
int
inc
sbb
scas
jge
outsl
cmp
mov
dec
pop
pop
mov
pop
mov
fisubs
out
push
test
call
mov
pop
mov
sub
fwait
popa
test
insl
sbb
jnp
mov
mov
pushf
xchg
dec
cltd
pop
push
mov
and
test
cli
scas
lcall
add
dec
out
pushf
test
dec
cs
enter
repnz
stos
jo
vunpckhps
enter
xor
int
imul
imul
push
sub
es
out
ss
cmp
mov
mov
jo
pop
jl
dec
xor
test
mov
add
jbe,pt
fstl
adc
mov
test
cmc
xor
push
mov
ficoms
test
push
jp
push
push
ja
cmpsb
jp
sub
leave
dec
fwait
cs
push
iret
in
xor
jnp
mov
push
xlat
xchg
in
inc
shr
or
lcall
jge
cmpsb
sti
pop
dec
jecxz
div
xor
dec
inc
sbb
out
fdivp
push
shrb
jge
test
nop
pop
test
std
xorl
fisttpll
cmp
mov
jne
mov
push
rorl
mov
dec
mov
pop
xorl
sub
jg
jle
aam
andl
repnz
out
pop
mov
or
pop
mov
lods
cmp
dec
incb
cmp
mov
jbe
cmp
cmpsb
cmp
fnsave
add
outsl
or
cmp
sbb
push
xchg
sub
cmpb
rolb
rolb
aaa
inc
dec
adc
cmp
imul
push
jmp
or
lds
lahf
inc
cmc
mov
xor
lds
pop
iret
in
sbb
and
push
mov
cmp
frstor
imul
cmp
hlt
roll
and
pop
test
add
cli
jae
jo
stos
iret
pop
fbstp
pop
cmpsl
pop
cli
jecxz
shlb
into
xchg
aaa
dec
cwtl
or
movsl
lds
mov
mov
cmp
xchg
xorb
fs
in
mov
inc
jg
xor
xchg
call
dec
rorl
jns
sub
stos
cld
movsl
lods
rcl
lret
mov
add
mov
aam
jg
daa
subb
fs
rorl
ficoms
xchg
cs
xchg
push
daa
leave
mov
aam
adc
add
pusha
jmp
sub
cmovns
xchg
test
push
mov
add
add
stos
pop
xor
push
cli
das
ret
cmp
jmp
add
mov
test
dec
orl
mov
in
lahf
popf
jp
add
xchg
sub
je
leave
pusha
mov
gs
aam
xor
gs
stc
sub
pop
pop
lea
xlat
xchg
fs
pop
mov
pop
mov
pop
mov
or
sbb
mov
loope
cmp
jg
pop
leave
in
iret
jmp
mov
jne
xor
jo
mov
push
sub
sahf
jns
mov
filds
adc
mov
pop
outsl
ficompl
push
cwtl
pop
int3
jp
mov
mov
scas
jnp
hlt
fstpt
mov
pop
icebp
add
mov
mov
push
push
mov
sub
and
mov
fildl
or
pop
inc
xor
xchg
fadds
mov
insl
xlat
sub
gs
rcll
loopne
mov
or
jb
fistps
inc
les
ds
aaa
rolb
sbb
mov
arpl
insl
cmp
cmp
push
xorl
xchg
push
fsubl
and
arpl
add
daa
mov
lods
lods
popa
cmp
mov
test
pop
fs
cmp
clc
das
lahf
pop
push
adc
in
push
cmp
pushf
in
xchg
adc
xchg
cwtl
gs
xor
test
out
jbe
and
loopne
nop
iret
cltd
outsb
lods
cld
inc
pop
aam
and
scas
push
iret
scas
cmp
outsl
sub
cmpsb
add
cld
or
flds
ja
and
call
sbb
pop
loop
hlt
out
jno
and
or
xchg
jb
ja
and
nop
es
sub
push
rcl
mov
push
mov
rcl
iret
and
fldcw
in
stos
push
push
jb
adc
shll
out
add
pop
mov
js
imul
std
mov
mov
shll
dec
fs
inc
push
xor
fdivr
pop
xchg
dec
or
pop
cwtl
push
call
imul
cmc
lods
gs
jns
fcmove
sub
leave
push
int3
lahf
ret
mov
jmp
xchg
aaa
rolb
loop
or
sub
mov
in
stc
lcall
inc
daa
mov
dec
sub
cmpb
divb
inc
in
cld
cmpsb
scas
sub
cmp
mov
imul
out
shll
mov
das
addl
jne
cs
pop
add
xor
dec
out
push
lcall
mov
cmp
mov
enter
je
pop
dec
insb
bound
shl
sbb
inc
test
hlt
lret
pop
addb
inc
jp
adc
mov
xor
loope
or
imul
cmp
inc
arpl
mov
mov
mov
stos
mov
add
cwtl
mov
bound
xor
dec
cmp
mov
inc
stos
stos
inc
cmpl
pop
xchg
mov
ret
sbb
and
and
push
int3
das
and
mov
sarb
pop
mov
push
das
stos
cmp
inc
jno
sub
mov
fimull
fs
lods
int3
xchg
cltd
invd
push
push
sub
mov
mov
inc
into
xor
mov
add
and
inc
mov
or
cmpb
lcall
insb
or
push
pop
sub
out
xrelease
mov
xchg
pushf
dec
sbb
push
insb
jge,pt
push
sub
cmpsb
aam
or
notl
jae
enter
addr16
inc
pop
pop
cmc
cmp
fdivrs
sbb
ret
mov
sub
dec
sbb
arpl
ficoml
ja
xchg
insb
push
insl
popl
test
xchg
adc
fnstcw
popa
ds
pop
mov
loop
xor
movsb
lods
mov
add
cmp
dec
cmp
push
fwait
mov
lea
add
xor
pop
pop
lds
out
or
cmpsl
lret
fisubrs
and
mov
adc
jmp
sub
sub
pop
push
pop
or
outsl
test
cmp
in
imul
nop
aam
sbb
sbbb
lds
je
hlt
pop
dec
es
mov
add
lods
pop
ret
add
mov
aad
popf
and
pushl
and
ficoms
xchg
in
shl
ja
mov
aam
mov
imul
or
xchg
mov
sbb
pop
stc
mov
and
pop
nop
dec
mov
imul
scas
or
js
ljmp
cld
enter
sti
jmp
ret
fwait
sbb
jg
pop
lea
shl
hlt
aas
sbb
aam
cmp
sub
es
adc
repnz
cmp
mov
adc
add
sub
xor
int3
andps
mov
add
fsubrl
xchg
jo
je
jae
stos
inc
xchg
ss
outsl
and
lcall
jae
push
incb
scas
pop
loop
cmp
pop
dec
xor
pop
xchg
ret
out
flds
dec
outsb
mov
out
lcall
sbb
orb
push
out
dec
jecxz
repz
fucomp
adc
nop
cmpsb
aad
lds
outsb
cwtl
fldenv
daa
push
rcl
jp
data16
dec
and
xchg
push
inc
mov
and
push
in
outsl
and
or
cmp
ud2
ja
mov
or
scas
cmp
inc
jg
push
inc
mov
fsubs
jp
xchg
xor
or
push
test
or
cmp
testb
aam
ret
adc
jmp
les
loope
mov
fsubrl
or
popl
pop
pop
or
mov
cmp
fldt
dec
xchg
cmpsl
push
push
aas
adc
or
push
xor
popa
stc
push
lds
out
cmpsb
adc
fwait
push
imul
sbb
and
in
push
es
cltd
cmpb
insb
call
push
leave
inc
sbb
inc
sti
dec
pop
add
imul
jb
mov
mov
es
daa
or
mov
cmp
and
bound
jno
lods
xchg
jle
icebp
in
adc
aam
mov
rcr
or
sub
or
lret
arpl
mov
mov
pop
and
call
fsubrl
lcall
adc
call
jbe
sub
or
in
sbb
adc
or
addr16
xor
je
int
hlt
out
jnp
inc
popl
jbe
cs
scas
inc
stos
ds
dec
lret
xchg
pop
adc
or
pop
and
and
negl
repz
and
sub
pop
inc
dec
call
loope
add
adc
pop
xchg
xchg
jp
jg
sbb
and
not
ljmp
movsb
test
mov
jne
std
out
xor
loop
xchg
dec
imulb
and
inc
insl
cmpsl
pop
pushf
leave
icebp
add
jp
cmp
mov
jae
outsl
xchg
int3
mov
cmc
bound
roll
shrb
dec
mov
out
push
aam
jo
jnp
aas
adc
test
xchg
push
pxor
in
push
mov
orb
shl
into
sbbl
cli
xor
pop
imul
shlb
xchg
xchg
sahf
repnz
push
decl
in
pop
fwait
in
and
aaa
add
push
out
jae
jo
out
aad
inc
jno
stos
or
les
loop
adc
fs
jmp
leave
rcrb
outsl
popa
push
pop
mov
push
outsb
and
mov
push
inc
pop
xor
cld
int3
jl
lahf
into
add
fnsave
lods
sub
add
inc
cmp
add
aad
call
push
adc
sahf
or
shlb
std
and
insl
cmc
cmpb
mov
nop
jp
mov
sbb
jle
inc
jbe
mov
stos
paddsw
shlb
popa
sbb
or
mov
popf
jecxz
push
mov
add
pop
inc
outsb
cmc
xor
or
mov
sti
jne
cs
aaa
pop
insb
push
sarb
sub
inc
pop
imul
es
aaa
xchg
xor
insl
pop
mov
fistl
mov
int
dec
jae
push
sub
pop
jne
inc
scas
dec
inc
add
in
sub
arpl
das
cmpsl
mov
pop
mov
dec
mov
lret
xchg
or
mov
pusha
sub
push
insl
outsl
push
cld
mov
mov
push
jl
mov
das
and
sbbl
imul
pop
sbb
insl
data16
cmp
call
and
fistpll
call
clc
and
add
in
daa
stos
mov
push
out
jns
lods
std
sbb
cmc
je
push
or
or
jl
inc
repnz
shr
testl
adc
add
mov
arpl
push
mov
mov
ret
clc
or
and
push
or
xchg
mov
sub
lea
dec
aam
cmp
jns
adc
mov
or
das
lds
sbbl
inc
aam
cli
popf
push
add
pop
inc
lods
xchg
sbb
mov
loop
pop
adc
scas
cmp
pop
int
xchg
xchg
mov
pop
adc
add
cmpsl
or
mov
in
jno
insl
jae
pop
mov
cld
or
test
fldcw
aam
aad
mov
add
xor
je
adc
cmpsl
int
das
or
repnz
mov
nop
dec
xchg
std
cli
cli
lret
out
jne
or
push
sahf
popf
xlat
ret
xor
cmp
lds
loopne
sub
int
das
xor
mov
imull
jno
mulb
aam
adc
mov
or
pop
pop
sbb
cs
popa
push
mov
fistl
add
mov
aas
int
mov
imul
xor
push
loop
push
lds
das
jle
xchg
xchg
test
or
push
shlb
lret
push
popf
lds
enter
mov
lods
xor
lds
mov
stos
shr
je
xor
jbe
dec
scas
stos
jno
aas
arpl
es
jmp
je
fisubrl
pusha
test
ljmp
and
push
lds
dec
jbe
test
sbb
jae
mov
push
adc
pushf
loop
ret
fnstenv
push
js
xchg
lea
inc
mov
or
iret
mov
xchg
stos
pop
lret
xlat
add
sbb
loopne
push
rorl
xor
mov
test
cltd
mov
testl
fmul
push
xchg
mov
imul
addb
daa
pop
ret
data16
imul
cli
jo
ret
insl
adc
sbb
push
sbb
mov
mov
xchg
inc
jo
cmpsl
enter
lods
insl
mov
stos
sti
into
adc
sub
sub
adc
aam
inc
shl
push
mov
arpl
scas
fistpl
cwtl
inc
mov
lahf
or
mov
mov
fdivrs
jp
cmpsb
out
mov
sbb
pushl
arpl
fwait
cmp
jae
sbb
and
sub
call
sub
inc
testl
mov
adc
xchg
sub
cmp
cs
lret
nop
testl
fwait
sbb
jl
out
push
adc
in
pop
movsb
ret
shl
dec
dec
push
xchg
mov
jmp
or
sub
iret
mov
js
std
fisttps
aad
mov
and
shlb
add
mov
testl
cmp
fcmovnb
push
xchg
les
mov
xor
jno
out
push
cmp
xchg
push
adc
mov
lock
mov
xor
xchg
ret
sti
ja
shlb
mov
loop
cs
rolb
stos
mov
pop
xchg
std
sub
sahf
movsl
inc
pushl
add
fiaddl
jle
mov
add
push
pushw
or
out
arpl
in
sub
ret
sub
pop
cmp
and
jae
xor
fld
mov
imul
movsb
mov
xor
iret
add
jo
adc
rcr
aaa
inc
dec
int3
adc
fbstp
jge
and
jae
ret
out
hlt
push
jns
sub
push
call
out
dec
orb
lods
dec
cli
ret
les
in
mov
stc
cli
in
add
sub
jne
add
mov
jne
nop
mov
rorl
cld
lock
pop
clc
cmp
dec
jl
fiadds
pop
inc
adc
mov
xchg
loopne
fwait
out
add
pop
cmc
push
lret
movsl
ljmp
insl
subb
xor
jb
xchg
add
inc
mov
mov
cmpsb
insb
cltd
fistpll
push
jecxz
pushf
add
and
bt
jge
adc
outsl
lds
orb
sti
out
test
mov
mov
fcmovb
pop
jle
xchg
loop
pop
repz
xor
nop
testb
xor
sbb
fcoml
repnz
mov
add
fmull
push
mov
mov
int3
pop
popl
stos
xlat
sbb
mov
push
pop
jno
push
cmpb
xor
dec
aas
pop
cmp
sti
shll
jns
xor
xchg
rol
dec
mov
aad
jmp
ds
jb
pop
cmp
mov
incb
pushf
not
pushf
cmpb
lds
int
movl
addr16
pushl
push
aad
insb
rclb
and
pop
mov
cli
lods
scas
jb
jmp
test
ss
test
fsubl
sarb
jbe
aam
xor
mov
andb
out
cli
fisttpl
arpl
fcmovnb
mov
jmp
mov
mov
fbld
in
xor
ret
shll
imul
inc
jb
stos
aaa
sub
leave
adc
mov
and
pushl
int3
mov
sub
add
xchg
cmp
add
stos
or
lods
cmc
add
popf
clc
imul
lods
pop
je
push
sub
in
dec
lods
mov
aaa
scas
mov
add
mov
stc
jb
enter
push
cmpb
insb
ror
add
push
fnstenv
andl
xchg
fldcw
xor
js
push
negl
mov
cmp
out
lcall
dec
imul
lods
dec
and
sub
fwait
movsb
jae
cmp
and
xlat
jns
test
sub
shll
mov
add
xabort
or
aad
xor
out
mov
adc
jno
std
push
cs
jae
in
dec
dec
adc
pop
frstor
aad
cmp
popf
lea
or
push
aad
jge
mov
lret
add
xchg
clc
test
imul
pop
adc
mov
adc
cltd
pop
xchg
insl
xchg
ror
push
outsl
aam
jbe
mov
cli
mov
mov
sbb
jge
dec
test
daa
jg
mov
mov
push
dec
cli
jne
imul
lcall
jne
pop
dec
test
xor
and
xchg
or
sbb
addr16
add
mov
lods
sub
add
pop
insl
aad
mov
movsb
mov
pop
inc
inc
push
xor
xor
jg
push
sbb
imul
inc
das
fcmovne
xor
ja
dec
imul
pusha
cmp
adc
sahf
mov
inc
sbb
jmp
jns
out
sbb
adc
add
adc
cmp
sub
or
xchg
or
jbe
scas
insl
inc
xor
push
xchg
cmc
lahf
data16
mov
inc
arpl
push
xchg
adc
popa
mov
loopne
ljmp
les
push
or
push
out
mov
adc
enter
sahf
lds
shlb
rcr
pop
sub
dec
fwait
add
in
mov
mov
mov
xor
test
mov
loop
mov
inc
mov
mov
ret
xchg
mov
jbe
pusha
lds
xor
enter
mov
scas
repnz
adc
rclb
cmp
mov
nop
fidivrl
jnp
mov
repnz
fisttpll
push
scas
mov
lock
fmull
pushf
lahf
cmpxchg
test
or
jle
sahf
aam
fistl
xor
dec
push
sub
xchg
in
xchg
nop
inc
jmp
cmpsb
sbb
pop
in
les
sarb
mov
clc
sbb
mov
hlt
fwait
push
push
or
jb
insl
fisubs
aas
inc
inc
lret
repz
mov
jecxz
imul
lock
xchg
int
cltd
jl
jp
gs
mov
mov
jnp
mov
sub
jp
clc
push
sub
lea
bndldx
mov
pop
add
jno
jne
jg
and
and
leave
pop
jne
loop
dec
aas
jae
sbb
adc
popf
adcl
into
fs
mov
adc
cmpsl
cli
sub
dec
xorl
jnp
inc
dec
ret
scas
fst
imul
fisttpll
fmuls
pop
mov
aas
lods
adc
xor
cmpsb
xchg
or
mov
push
stos
add
jmp
pop
repnz
test
push
push
xor
push
sahf
dec
jmp
and
inc
popa
jns
pop
leave
cmpb
mov
jecxz
icebp
cmp
jnp
push
sbb
pop
jecxz
out
mov
adc
test
ds
ss
mov
adc
mov
xchg
shll
cmp
negl
mov
or
xchg
gs
mov
repnz
sti
outsl
stos
sbbb
xchg
mov
cld
push
mov
movsl
adc
dec
aaa
sub
jbe
lock
aas
mov
xchg
jmp
shl
add
jl
add
cli
sub
sub
push
dec
push
xchg
or
xchg
or
cmp
ljmp
sti
incl
sbb
movsb
mov
ss
dec
jae
dec
mov
mov
roll
adc
and
mov
in
pop
inc
arpl
divb
and
std
pop
add
dec
mov
pop
dec
pop
sbb
repz
dec
jle
call
in
fstps
mov
push
movsl
ret
fwait
mov
mov
lret
push
scas
out
dec
flds
imul
clc
mov
mov
cmp
add
scas
es
orb
lods
mov
adc
adc
insl
xor
jl
jno
stc
rolb
cmc
andl
mul
xor
xchg
stc
jno
loopne
test
mov
sub
jmp
inc
pop
xchg
xor
cmpsb
ret
push
mov
xchg
pushf
arpl
push
scas
xor
ret
and
jl
mov
xchg
inc
stc
mov
aas
push
stc
push
arpl
es
popf
int
test
inc
mov
push
fdivr
mov
test
inc
xchg
bound
or
inc
sbbb
popa
fucomi
jmp
sub
pop
jb
inc
lahf
or
pop
mov
push
les
mov
in
and
jg
dec
sarb
sub
and
fidivs
in
add
clc
adc
xor
fcompl
mov
xor
incb
mov
cmp
pop
pop
push
sub
ret
mov
cld
xchg
jne
jae
imul
cmp
dec
imul
in
fs
lret
cmp
and
iret
clc
pusha
pusha
mov
mov
ja
ljmp
cmp
sbb
fsts
push
sti
inc
sub
push
popa
xchg
bswap
cmp
mov
xor
pop
insb
lahf
mov
add
sbb
pop
dec
mov
or
push
leave
int3
aam
ljmp
mov
enter
and
movsl
jg
lret
lods
or
sub
and
sub
lock
and
xlat
cwtl
dec
cmp
mov
cmp
scas
sbb
and
push
ljmp
fstl
ja
sbb
fildll
movq
icebp
and
pop
jae
je
fs
mov
jne
jne
adc
xor
mov
push
pusha
pop
leave
cmp
call
mov
dec
testl
out
pushf
xlat
loopne
or
ret
add
inc
xchg
pop
jae
fnstcw
jmp
gs
cmp
xchg
scas
inc
pop
leave
orb
xchg
pop
cmp
pushf
fimuls
outsl
outsb
sbb
aas
mov
pushf
xchg
dec
out
iret
dec
and
lahf
xchg
adc
ret
ds
and
sub
add
sarb
pushf
mov
push
xchg
fcoms
movsb
movlps
push
je
add
mov
fidivrs
ljmp
jne
mov
test
push
add
addr16
sbb
dec
pop
push
ds
pop
rorb
push
test
or
int
sub
jne
jl
xchg
xor
ret
out
lock
mov
rcrb
sahf
out
ss
sbb
jb
ds
dec
mov
sub
das
xor
xchg
imul
cmpb
mov
stos
xchg
enter
push
pop
or
or
nop
arpl
hlt
mov
pop
pusha
sti
cmp
mov
mov
or
cmp
ljmp
cli
inc
jne
xor
jae
insb
fnstcw
cmp
inc
sub
sbb
enter
cmp
lcall
icebp
out
test
das
jbe
mov
fucomp
aam
imul
out
push
loop
jl
hlt
fiaddl
sbb
xchg
loope
lods
mov
rorb
out
fisttps
nop
jge
and
mov
xchg
pop
sbb
es
xchg
mov
inc
repz
jae
push
cmp
das
push
jns
push
push
or
repz
insb
int
shl
sub
or
mov
mov
fmuls
push
add
imul
lea
fsubrl
clc
cmc
je
cmp
xchg
ret
nop
push
and
cmp
jae
lcall
popl
les
inc
cld
sbb
xchg
outsl
fidivs
jb
repz
sub
adc
subl
cs
mov
ljmp
adc
mov
jg
inc
dec
dec
imul
lods
pop
je
ret
int
jae
orb
push
inc
mov
lock
or
lods
jle
jle
sub
jnp
pop
fsubrp
mov
clc
in
pushf
mov
out
add
fchs
pushf
jae
call
sbb
stos
rclb
inc
ja
aas
push
pop
inc
or
xchg
inc
jae
mov
aas
sbb
arpl
pushf
cmp
sahf
in
mov
xor
pop
cwtl
lods
xor
sub
mov
lods
push
faddp
loop
pop
mov
sbb
aam
pop
js
xchg
jp
push
and
mov
sbbb
fiadds
xor
adc
js
xchg
sub
jge
mov
mov
adc
push
sbb
daa
int
dec
out
jno
cmp
add
xor
pushf
jns
or
cmc
mov
scas
add
adc
xor
out
jge
cltd
cmp
cltd
pop
bound
aam
inc
push
mov
jae
cld
push
mov
orl
xor
gs
add
js
rcrl
pop
inc
jl
mov
insb
les
jne
or
sbb
or
ljmp
jl
call
pop
lds
fucom
jmp
xchg
cmp
xchg
xchg
jne
jg
cltd
pop
xor
push
fidivl
sbb
dec
inc
or
pop
stos
je
into
jg
adc
jo
cs
mov
in
dec
jge
xchg
mov
dec
lret
xchg
and
mov
das
cmp
adc
cmp
sbb
cmp
xchg
and
cld
pusha
push
mov
mov
push
pop
ja
add
jnp
mov
out
clc
push
or
dec
push
gs
stc
sarl
fsubs
pop
int
jne
xchg
ljmp
pop
mov
cmpsb
fcmovu
out
out
push
sub
push
sti
xchg
int
rolb
cmpsl
lds
das
in
xchg
test
fisubs
sbb
mov
in
mov
dec
sub
push
andl
into
fldl
adc
and
adc
into
sti
and
into
adc
sbb
aas
in
sub
cld
or
adc
lds
or
mov
xchg
pop
test
inc
sub
insb
ret
pusha
fisttpll
lods
shlb
aas
push
out
fdivs
add
sub
cmp
lahf
pop
or
sub
fisttpl
or
mov
add
push
sub
sbb
fcoml
fsts
pushl
inc
mov
push
js
ret
notb
push
inc
aas
ljmp
adc
sti
pushf
lods
dec
jp
pusha
push
cmpsl
add
mov
inc
and
sarb
mov
in
or
ds
pop
jne
icebp
mov
lods
add
xor
xlat
dec
add
xchg
hlt
fidivrl
mov
rcr
xchg
outsb
shrb
movsl
xor
add
push
fwait
popa
inc
ja
loopne
sbb
xchg
add
mov
mov
fucom
mov
aaa
push
lahf
hlt
notb
shrb
add
lcallw
stc
and
push
ficomps
fcmovne
xchg
lods
push
sbb
push
repnz
xchg
test
lock
jmp
ljmp
int
push
cld
xchg
pop
sub
mov
sahf
test
gs
addr16
or
jl
imul
jo
and
fists
mov
mov
sbb
inc
cld
movb
into
inc
testb
je
push
xchg
imul
dec
sub
test
es
lret
insb
mov
and
sub
shlb
xlat
add
add
imul
mov
xor
inc
addb
loop
leave
xlat
jbe
cltd
repz
dec
movsl
pop
push
in
sub
inc
les
xlat
btsl
in
push
imul
and
jbe
js
test
bound
sub
cld
test
repz
cmp
idiv
push
cmp
xchg
mov
inc
lods
jne
push
push
lds
fwait
cld
adc
push
mov
jp
mov
fwait
jl
inc
cmpsl
cli
pop
fwait
stos
out
lds
fidivl
decl
dec
adc
outsb
jns
lcall
out
sbb
into
subl
add
bound
andl
xchg
icebp
pop
pop
lds
mov
les
mov
push
cmp
cmp
jle
pop
or
call
imul
popa
jno
std
loopne
lcall
int
addr16
fidivs
mov
lahf
dec
subb
test
adc
pop
mov
ljmp
incl
daa
inc
fisubl
bound
movsb
aaa
mov
sub
jmp
or
and
or
stos
sub
adc
jl
testl
xchg
icebp
lret
sbb
leave
decb
int3
adc
les
xchg
gs
jmp
mov
lods
adc
rorb
mov
mov
aas
mov
mov
leave
jg
xchg
inc
push
lock
jnp
repz
inc
and
xchg
fs
sbb
std
out
loope
fs
mov
ja
lret
fdivrl
sub
jecxz
xchg
cltd
adcb
daa
sahf
xchg
iret
or
push
test
add
and
arpl
xchg
arpl
loope
clc
jne
xor
xacquire
pop
sbb
cmp
jle
into
add
outsb
and
inc
je
scas
jecxz
js
cli
jmp
pop
fs
mov
outsb
cli
and
sahf
fsubrs
dec
lcall
pop
inc
arpl
ljmp
jno
roll
and
lret
cmpsb
jecxz
xor
loope
in
insl
fwait
push
int
xor
imul
imull
mov
or
xor
sub
jno
popa
in
adc
sbb
pop
sub
jae
sarb
aas
mov
jmp
nop
divb
adc
fcompl
in
rcrb
cmp
in
ljmp
hlt
xchg
jbe
jecxz
stos
imul
adc
jle
mov
or
push
sub
cld
aam
ss
xchg
pop
mov
pop
out
mov
or
int
fcom
push
sahf
test
mov
add
and
mov
in
mov
inc
adc
icebp
or
push
popa
in
fwait
mov
adc
sub
fs
adc
inc
dec
push
mov
out
xor
xchg
mov
mov
push
fsubs
pop
nop
outsb
call
shl
mov
cld
loope
mov
pop
pop
jmp
mov
into
jns
xchg
adc
xor
enter
pop
out
loope
aaa
aaa
add
push
ret
jo
arpl
xor
pop
adc
pop
fistpll
subb
lret
test
mov
adc
nop
nop
lahf
cli
pop
mov
bound
lods
fimull
xchg
pushf
dec
xchg
or
jb
pop
dec
and
xor
mov
jecxz
lret
xchg
inc
test
mov
sub
rcr
aad
dec
jp
bound
sub
adc
cld
xchg
push
shll
xchg
mov
lahf
out
ljmp
jge
rorl
dec
and
std
rclb
test
and
push
push
inc
xchg
push
lcall
aaa
dec
addl
pop
dec
add
repz
ljmp
scas
lock
sbb
push
adc
fdivrl
mov
xlat
repz
dec
popf
not
and
and
mov
mov
pop
repnz
js
sub
mov
int3
mov
arpl
xchg
outsb
das
xor
add
dec
js
mov
ljmp
pop
add
out
stc
cli
and
ds
test
adc
pop
mov
aam
faddl
mov
icebp
ja
jnp
out
pushf
mov
cmp
test
jbe
mov
jae
and
add
adc
insb
jbe
daa
mov
mov
mov
mov
in
in
jg
pushl
inc
xchg
mov
lock
rorl
mov
movsb
xchg
enter
sub
push
sbb
cmp
ja
dec
adc
sbb
fistpl
repz
cli
xor
loopne
leave
test
aam
pusha
cli
push
rcrb
sub
rorl
dec
jb
imul
jns
mov
fcompl
adc
inc
cmp
gs
add
or
lds
add
inc
pop
push
fstpl
sbb
mov
ja
add
repz
mov
or
sbb
aam
nop
daa
and
in
cmp
test
mov
decb
rol
or
fildl
fisubs
popa
pop
rclb
ficoms
xchg
lcall
mov
mov
or
jns
frndint
mov
cmp
rcrl
gs
mov
std
das
inc
or
cwtl
sbb
push
mov
xor
shl
test
outsl
fildll
shrl
add
adc
xor
inc
jp
jg
mov
movsb
mov
rcrb
cmpsb
jp
push
and
imul
cmpsb
xor
daa
sti
mov
insb
fsubp
icebp
inc
push
popf
jns
add
push
push
adc
push
cmp
fistpll
int
ja
lock
jb
pop
add
pop
aam
std
push
xchg
mov
test
leave
sarl
popa
sti
addr16
sbb
pop
call
rcl
es
popl
mov
sti
in
mulb
xchg
sub
mov
adc
in
fistpl
das
or
lcall
add
fnstsw
xchg
and
and
mov
shll
jo
stos
dec
lea
fstl
xchg
loop
stc
enter
jp
aam
insl
ja
dec
je
push
bound
mov
les
and
clc
inc
adc
jnp
nop
les
xor
adc
les
push
xor
inc
lods
cwtl
mov
out
scas
outsl
inc
jae
cmc
xchg
andb
scas
addr16
rol
xor
fcomps
sbb
sbb
dec
xor
add
ror
cld
cmp
sar
mov
push
das
push
ss
popf
frstpm(287
mov
xchg
js
in
adc
pop
cmp
cmc
add
xor
or
stos
bound
pop
das
imul
inc
sbb
repnz
test
sub
shlb
fdiv
jmp
std
xchg
xor
out
inc
inc
push
fisubs
into
adc
filds
repnz
out
test
stos
iret
push
and
jg
outsl
add
out
mov
mov
shrb
js
pop
shll
cld
mov
repz
xlat
pop
in
add
lds
loop
inc
and
mov
mov
xchg
stos
or
push
fists
aad
int3
stos
add
ret
adc
add
jne
add
dec
rcll
jp
cmpsb
xchg
mov
shll
out
jae
insl
mov
ret
jp
loopne
adc
pop
daa
push
lret
in
or
jns
orl
inc
dec
cltd
mov
int3
out
adc
push
std
add
jmp
ret
andb
xor
rorl
shll
cmpsl
insb
push
adc
cmp
cld
shl
popaw
push
js
mov
lods
sbb
call
insb
sbb
push
sti
cs
fidivs
cld
das
push
mov
ds
insb
pop
ds
sbb
repz
test
ja
mov
inc
cmp
mov
and
imul
add
cmp
add
jmp
stos
mov
rcr
out
sub
mov
xor
adc
lods
pusha
ljmp
push
loopne
push
xchg
push
in
sub
mov
jl
mov
out
xlat
sahf
fildl
and
adc
push
adc
call
les
xchg
xchg
push
test
loope
jo
pusha
shll
push
lea
jle
lods
test
int3
mov
xchg
fidivrs
fwait
rcrl
xchg
cld
mov
lret
sbb
ss
movsb
js
inc
cwtl
adc
cltd
stos
mov
sbb
push
jge
out
dec
pop
mov
mov
test
movsb
push
jnp
stos
inc
push
inc
shrl
jecxz
in
cmp
mov
jo
arpl
jmp
sbb
insb
fcoml
mov
jno
add
aam
fs
xor
jns
imul
out
push
cs
adc
imul
insl
imul
mov
daa
jno
jb
adc
jnp
lds
aam
cmpsb
cmpsl
mov
cwtl
sub
mov
cli
insb
out
inc
loop
enter
push
mov
scas
rcrb
or
and
lods
jns
enter
dec
mov
push
push
aam
mov
xchg
pop
xor
pop
insl
sbb
mov
outsb
cli
sbbb
or
test
or
cmp
pop
sub
pusha
js
adc
pop
cld
sub
notl
in
cld
cwtl
inc
testl
or
lcall
lods
jg
mov
in
sub
push
daa
cmp
aam
loop
dec
sub
daa
pop
mov
repz
add
lods
sub
push
or
xor
sahf
fiaddl
daa
insb
out
clc
data16
fcmovne
pop
jnp
das
idivb
xchg
cmpsl
cmpsl
jnp
rorl
addl
sahf
adc
xchg
popf
in
repnz
cmp
cmp
stc
rolb
popf
rorl
icebp
scas
rcrb
sti
test
xchg
lret
in
lock
jl
in
adc
lock
xor
dec
push
rcll
jae
test
test
push
sub
or
mov
cmpsl
das
aad
in
jle
out
mov
pop
out
mov
mov
jnp
jo
pop
adc
cmc
andl
ror
push
bound
ja
inc
mov
repnz
or
or
cmpsb
ret
jle
rolb
add
hlt
jns
lock
enter
push
addl
xchg
aaa
mov
aaa
je
dec
aam
cld
int
jno,pt
xchg
mov
dec
divl
enter
push
repnz
cli
call
jmp
or
push
mov
adc
pop
pop
xchg
fsubs
test
aad
orl
jbe
inc
pop
pop
gs
out
aas
xchg
and
out
jbe
or
push
dec
xor
and
call
mov
or
aad
pop
add
sbb
nop
test
dec
adc
test
cs
mov
test
mov
sbb
bound
xor
jg
adc
fwait
jp
repnz
cmp
mov
stos
sub
les
pop
pop
repz
push
add
sahf
mov
movsl
sbbl
loope
iret
sub
sub
stos
add
cmp
cmp
into
addl
push
sub
add
test
scas
xchg
cmp
xchg
adc
or
scas
nop
rorb
xchg
outsb
mov
mov
jmp
arpl
push
outsb
pop
and
adcb
jno
lock
cltd
mov
fildll
add
mov
xor
sub
cmpsb
adc
inc
mov
call
sbb
mov
adc
movsb
and
jne
iret
lds
pop
and
jp
shl
xor
add
bound
fistps
sub
cmp
mov
call
repz
lock
mov
adc
fldenv
push
xor
aaa
xchg
or
dec
test
jmp
and
outsb
inc
xchg
fidivs
push
add
mov
mov
jecxz
mov
and
adc
push
push
pop
inc
sarl
sarb
xchg
int3
mov
jmp
cmp
dec
test
fs
in
notl
lahf
lahf
jl
arpl
loopne
xchg
sbb
mov
jp
or
or
lds
fidivrl
xor
ss
sbb
fwait
xchg
data16
mov
nop
mov
daa
cmp
aaa
add
into
adc
pop
in
stos
dec
js
sbb
imul
or
inc
xchg
xchg
and
cli
lea
jo
mov
push
ja
mov
and
sarb
fwait
mov
dec
mov
cmp
stos
inc
imul
mov
out
xor
insb
adc
in
cmp
test
jmp
out
loop
adc
data16
loop
mov
movsb
rcll
mov
and
ljmp
andb
in
xchg
pop
sahf
call
pop
jb
aam
xchg
mov
inc
add
sbb
mov
sarb
mov
and
dec
ljmp
or
call
xchg
cmpsl
mov
xor
pushl
dec
test
pop
sbb
andl
je
sub
lock
inc
sarl
xchg
pop
mov
lahf
das
stos
imul
outsl
jbe
aas
loopne
and
push
dec
shrb
sbb
xchg
movsl
adc
push
mov
jge
dec
shlb
mov
ret
xchg
jl
fidivs
jmp
lret
fldl
and
lret
push
xchg
out
out
and
cmp
aas
mov
nop
jp
pop
mov
jmp
rcll
fwait
loopne
cltd
shll
inc
loop
push
outsl
or
fsubrs
mov
push
ret
std
dec
mov
dec
adc
and
int3
shll
test
movsb
repnz
xchg
mov
test
mov
inc
cwtl
and
subb
roll
popf
cmpl
adc
xor
inc
mov
add
adc
outsb
sbb
jmp
jge
mov
add
js
jge
mov
mov
cmp
mov
je
leave
out
lcall
scas
cli
add
pushf
mov
mov
iret
arpl
xchg
fnstcw
and
sbb
and
cli
push
push
jl
into
sbb
imul
popf
inc
mov
jmp
xchg
xor
push
mov
push
lods
test
jge
jb
imul
xor
sub
or
shlb
les
push
xchg
cltd
out
popa
pop
test
push
jno
scas
aaa
frstor
jmp
jo
mov
insl
xor
push
push
add
lret
filds
mov
repz
aad
jle
adc
or
ljmp
scas
roll
jbe
xor
pop
jg
sub
in
lret
mov
jmp
sbb
repnz
add
test
lahf
jne
shrl
and
mov
inc
jmp
mov
js
mov
in
mov
cmp
xchg
add
cmp
adc
sub
addr16
dec
out
xchg
daa
fistps
sub
jno,pt
imul
in
xor
aas
out
push
test
je
mov
mov
int3
mov
scas
sbb
in
mov
pop
cmpsb
cli
add
lods
icebp
pop
leave
jl
dec
hlt
pushf
repz
xor
je
dec
xchg
orb
psubd
iret
push
loop
je
stos
loop
out
add
jbe
inc
lret
jne
sub
andb
adc
sbb
cmp
xchg
mov
insb
adc
les
cmpb
popf
mov
mov
out
cltd
jecxz
jle
test
mov
xor
insb
adc
mov
and
or
fs
or
das
pop
or
in
sti
out
sbb
ss
push
dec
in
out
jnp
imul
test
xchg
imul
ljmp
pop
mov
pop
nop
jmp
add
lea
dec
sub
enter
orb
mov
add
mull
outsl
xor
jno
sub
cltd
cmpsb
cs
scas
ret
dec
iret
sbbb
loopne
jno
mov
sbb
ret
stos
adc
or
dec
and
xlat
adc
adc
fistl
adc
sub
int
outsb
mov
in
cltd
lods
pushf
cmpsl
or
mov
sarl
sub
dec
dec
push
rcrb
jno
loope
push
cltd
or
lret
or
jb
sub
test
mov
dec
fsts
lea
push
mov
addr16
popf
mov
pop
nop
lcall
push
mov
jo
imul
jb
imul
jb
imul
xchg
mov
movsl
dec
and
jg
into
pop
fwait
push
pop
mov
aas
cmp
stos
pop
push
rep
mov
test
out
jae
and
ja
or
mov
jmp
sub
in
ss
fs
iret
cmp
inc
loop
jnp
std
dec
inc
sub
mov
shlb
sbb
jbe
movsl
mov
imul
sar
push
insb
add
test
and
int3
insl
push
mov
nop
sub
cmp
sti
mov
loope
cmp
lods
movsb
push
mov
shlb
out
lods
xchg
loop
xchg
mov
std
push
popa
aam
dec
mov
push
cmpsl
mov
fidivl
stc
pop
ljmp
xchg
outsl
test
daa
jmp
dec
push
orl
std
inc
and
xchg
aam
inc
xor
arpl
movsb
je
sti
adc
jl
cs
outsb
into
test
shlb
mov
stc
icebp
jae
mov
out
add
les
outsb
mov
cmpsl
mov
or
mov
mov
sbb
fwait
cld
xchg
dec
jle
mov
lock
fisubs
sbb
dec
sbb
pushf
mov
jecxz
lret
movsb
xchg
sahf
mov
enter
arpl
push
jbe
mov
insb
mov
imul
jnp
mov
xor
lods
aad
sbb
repz
ja
lahf
nop
mov
outsb
push
inc
push
addr16
jno
adc
add
test
adc
and
sbb
mov
lea
sub
enter
and
pop
fbld
inc
push
cs
sub
jecxz
negl
adc
and
jb
sbb
and
jnp
loopnew
scas
pop
fdiv
mov
inc
mov
or
aaa
clc
call
adc
push
jae
or
mov
aaa
mov
scas
mov
cwtl
adc
or
cmpsl
test
out
and
stos
push
jno
mov
mov
jl
jp
std
arpl
in
icebp
rolb
iret
inc
loopne
mov
inc
or
les
xor
clc
sub
in
sub
inc
push
xor
aas
in
sub
divb
cmp
mov
mov
bound
jp
insb
mov
xchg
jle
shl
cmpsb
ss
xchg
sbb
insb
das
xchg
cld
dec
mov
outsb
call
popa
mov
ficoms
xchg
pop
add
cs
sub
jae
ja
inc
lret
imul
fistpl
inc
daa
mov
add
push
popa
mov
orl
jl
xor
inc
cmpsl
jle
xor
out
or
or
push
arpl
out
cs
mov
loop
sub
pcmpgtw
pop
jmp
pushf
out
jmp
loopne
stc
inc
call
jb
and
int
dec
pop
fmull
xlat
dec
scas
lods
adc
push
pop
fisubrs
mov
dec
divl
dec
xchg
popa
mov
test
inc
cltd
inc
gs
mov
shll
in
adc
jb
into
sbb
xor
fdivr
sbb
insl
nop
sbb
mov
lcall
in
push
sahf
pop
pop
xchg
flds
daa
sbb
push
out
xchg
insl
mov
roll
pushf
ss
xchg
push
mov
cs
xor
jp
jns
xor
push
sbb
loop
xchg
rclb
dec
out
jecxz
sub
cmpsb
stos
jns
mov
enter
das
mov
xchg
and
pushf
sbb
mov
pusha
mov
insl
push
inc
add
add
cmp
lcall
outsb
pop
mov
dec
addr16
mov
cmp
xchg
mov
jb
imul
lods
rorl
cmpsb
aam
cmp
xor
pop
mov
into
fisttpl
push
mov
mov
fisubrl
mov
fisubs
mov
es
outsl
cmpsl
pop
in
and
scas
daa
es
cmp
movsl
sub
in
es
lret
jecxz
add
frstor
add
out
push
pop
or
pusha
bswap
add
cmc
cmpsb
cmp
icebp
mov
popf
dec
push
je
test
sbb
mov
jmp
lcall
jle
es
xchg
push
or
loop
adcl
in
cld
test
dec
mov
pusha
nop
inc
jbe
ja
insb
add
jb
in
inc
ljmp
sub
xor
xchg
cltd
idivb
push
aas
push
test
or
cmp
mov
sahf
mov
xchg
jmp
add
mov
addr16
orl
xor
rcrl
jle
add
ret
pop
sbbl
dec
or
sti
sbb
stos
xor
stc
imul
sahf
out
xchg
push
jnp
and
in
and
ret
notb
sub
repz
pop
in
or
xor
fistl
inc
push
int
inc
stc
js
sbb
cmp
lea
cmc
push
or
mov
xchg
ret
mov
push
and
add
jge
cmp
jg
push
inc
mov
jb
fstpt
add
pop
repz
mov
bound
test
aad
mov
loopne
mov
and
push
adc
stos
aad
imul
inc
and
ss
sbb
push
adc
ljmp
pop
sub
popf
aaa
mov
push
xorl
repz
and
in
mov
push
cmp
or
fistpll
and
lods
mov
and
insl
frstor
out
cmp
in
xor
ret
adc
xchg
loope
mov
pop
pop
das
mov
test
fldenv
sub
push
mov
mov
data16
mov
dec
or
enter
adc
ds
mov
push
adc
add
or
shlb
mov
or
pop
mov
in
or
mov
mov
aas
or
mov
pop
and
ret
std
mov
pusha
call
iret
sbb
or
mov
loope
popa
jo
add
dec
adc
mov
xor
jne
and
add
inc
sbb
pop
inc
xchg
jbe
cmpl
mov
add
add
xchg
jle
sbb
pop
les
jns
xchg
in
insl
stc
insl
daa
int3
mov
sub
icebp
movsb
pop
mov
xchg
subb
movsb
sbb
test
pop
es
xchg
mov
shll
int3
into
inc
add
lods
jo
shll
repnz
xor
pop
out
dec
imul
daa
imul
shrl
and
pop
jp
inc
cmc
add
data16
mov
and
fisttpl
movl
imul
dec
insb
and
in
cmpsl
scas
xor
mov
cmp
xor
lret
das
scas
rorb
lahf
inc
add
out
shll
cmpsb
adc
dec
daa
mov
mov
les
push
js
rclb
rcr
and
jno
sarb
popa
jg
jg
cld
xchg
inc
lcall
ds
mov
cwtl
xchg
lods
add
sti
sti
pop
fsubs
pop
add
cmp
push
shlb
add
sub
push
ret
aaa
mov
mov
push
enter
xchg
inc
arpl
mov
imulb
adc
mov
pop
add
mov
xor
ja
mov
mov
mov
cmovp
fistps
cmp
clc
out
add
aad
decl
lret
stc
cmp
cld
pop
or
jge
dec
xor
aaa
addr16
add
int3
insl
xchg
pop
test
mov
adc
inc
out
jle
xor
cmpsl
cmpb
rcl
negl
pop
ret
push
pop
sub
leave
sub
jbe
out
jmp
lds
mov
sub
data16
sub
aaa
xor
loop
cmpsl
mov
adc
sub
sbb
pushf
ret
aam
mov
scas
es
jp
pop
pushf
dec
popa
jge
push
adc
movsb
mov
loop
and
xor
ja
mov
cmp
pop
js
pop
into
jp
insl
pop
cld
or
loop
movsl
push
add
xchg
mov
ret
aas
dec
test
in
xchg
insl
sbb
pop
sti
insl
add
aad
rcr
pop
psubq
jge
inc
adc
mov
xor
cmpb
sbbl
test
inc
mov
int3
data16
lea
xor
aas
push
xor
add
xchg
inc
adc
dec
sbb
xor
cwtl
mov
fildl
and
das
adc
inc
and
outsb
push
pop
cmp
and
sub
cmp
xor
fwait
int
lret
mov
jle
mov
adc
and
repnz
jno
stos
sub
add
repnz
mov
mov
loop
stos
stc
dec
clc
lret
cmp
daa
sbb
xchg
xchg
sbb
mov
adc
push
clc
adc
sub
repnz
shl
mov
push
mov
iret
xchg
out
or
lahf
push
and
sbb
cmp
sub
mov
xchg
adc
out
ficoms
shll
dec
and
and
sar
test
fldt
mov
out
aas
jge
inc
adc
sar
mov
push
mov
lcall
data16
push
sbb
int
xor
adc
cmc
cmpsl
in
mov
inc
sub
adc
mov
or
lods
mov
adc
into
cmp
insb
enter
test
insl
push
mov
xchg
ljmp
adc
adc
aas
add
cmp
add
sbb
fistpl
dec
sub
test
mov
in
ds
stos
mov
push
je
push
shrb
xchg
inc
out
cmpsb
or
wrmsr
stos
pop
add
pop
mull
add
xchg
inc
mov
mov
add
dec
out
xchg
lods
xchg
aas
xchg
sahf
out
cmp
xchg
dec
pop
sahf
ss
adc
mov
mov
jo
mov
jmp
sub
sub
adc
sub
push
push
inc
jg
aaa
add
sub
je
cmp
cli
and
mov
pop
cmc
in
rolb
divb
andl
add
xor
xor
xchg
pushf
cltd
jecxz
xor
test
mov
or
jb
pop
aaa
pop
std
mov
mov
or
pop
dec
jge
inc
inc
out
cmp
imul
pop
lret
pusha
lea
mov
getsec
shlb
add
dec
cmpsl
add
push
sbb
pop
mov
addl
and
pop
xlat
push
in
xlat
xor
push
std
es
lods
in
lret
lahf
addr16
inc
imul
jle
pop
int
mov
stos
call
fldl
mov
xlat
int3
xor
sbb
jb
xor
ljmp
fnstenv
adc
add
inc
mov
je
and
jo
stos
ss
and
pop
daa
pop
loopne
or
das
jb
xor
and
push
push
push
xchg
jge
loopne
pop
xor
ja
into
xchg
ror
pop
pop
lods
insb
out
sub
sbb
repz
xlat
insl
or
jp
fidivrs
mov
out
cli
movsb
mov
pop
ret
xchg
add
mov
repnz
pop
xchg
inc
jo
cvtps2pi
testl
iret
in
js
mov
dec
cmp
sti
sbbb
mov
andb
cmp
dec
mov
mov
mov
xchg
push
ja
jg
lods
jge
repnz
sbb
or
int
hlt
pop
call
popa
inc
enter
inc
inc
or
fsubs
jmp
ss
fucomip
rcr
cmp
cmpsl
pop
dec
sbb
xchg
adc
xlat
and
sbb
inc
in
sahf
lock
insb
dec
movsb
cmpsb
dec
sub
xor
pop
xchg
adc
aas
hlt
repz
xor
sbb
aad
cmp
mov
nop
fisttps
out
mov
rcrl
add
es
mov
add
in
repz
or
pop
sbb
xchg
enter
fwait
ja
add
jmp
or
dec
out
inc
dec
in
xchg
int3
int
lock
pop
cmpsb
or
push
inc
or
outsl
cmp
pop
daa
add
jnp
mov
into
sub
xchg
idivb
insb
mov
jl
dec
sbb
popf
rorb
lods
loope
lock
ror
xor
daa
mov
shll
push
jb
lahf
sub
adc
jl
cmc
aam
sub
pusha
int
sbb
and
inc
push
and
stos
push
pop
dec
pop
inc
out
xor
dec
sti
pop
mov
mov
xchg
fsts
ja
or
mov
repnz
push
sbbb
push
pop
imul
mov
loope
xor
xor
sub
or
sub
es
or
and
push
xchg
aaa
jmp
in
cmp
xor
add
adc
xchg
popf
aad
inc
and
add
inc
ds
fwait
push
ja
loop
jmp
pusha
inc
push
inc
cs
dec
test
les
mov
arpl
scas
adc
mov
ds
mov
sbbb
aas
pop
fwait
pop
scas
dec
dec
mov
adc
cwtl
adc
pop
fmul
lahf
pop
mov
mov
test
mov
hlt
pop
add
mov
push
inc
lret
xchg
and
and
mov
push
inc
xor
lcall
jne
sub
je
inc
pop
or
dec
std
inc
sbb
jp
mov
sub
inc
icebp
and
dec
shrb
dec
ss
inc
sub
jae
orl
ret
rcrb
in
cmp
pop
mov
js
imul
xchg
std
sbb
cli
push
cmpsl
scas
dec
add
cmpsb
sub
push
cltd
inc
movsl
call
push
xchg
into
stc
in
xchg
inc
sar
sbb
push
testb
push
jl
jnp
inc
push
dec
xchg
pop
pop
das
lock
test
adc
nopl
mov
adc
out
iret
out
cmp
cmp
clc
cmpsb
push
xchg
arpl
mov
jg
inc
or
pop
and
xor
bound
cwtl
out
cmp
mov
loope
lahf
rclb
fildll
fisttps
lret
mov
in
in
ret
test
xlat
pop
sbb
js
push
test
lret
hlt
xor
dec
and
aas
xchg
es
adc
bound
jmp
cmp
or
ja
dec
xor
in
adc
int3
push
lcall
sti
rcrl
daa
pushf
cmpsb
sti
jecxz
push
sub
outsb
sub
enter
mov
xchg
test
cmp
lahf
cmp
and
sarl
pop
adc
adc
loope
and
sahf
subl
out
in
cmp
cmpsl
loopne
setle
ret
cltd
dec
adc
xchg
pop
jmp
ja
cmp
sbb
sub
stos
xchg
mov
jb
push
in
mov
sahf
aam
sti
push
fcmovbe
jge
ljmp
lahf
pop
sbb
cmovns
insb
sti
adc
mov
add
jle
cmpsb
scas
jmp
lret
aam
push
icebp
scas
insb
xchg
sar
dec
frstor
movsb
aaa
mov
into
cmp
cmp
push
movsb
imul
pop
cmp
scas
dec
loope
imul
cmc
pop
notl
add
movsl
jl
mov
outsl
sub
mov
outsb
mov
out
cli
or
xchg
xor
dec
push
cli
sub
xchg
leave
push
mov
repnz
repnz
xchg
ds
jg
mov
test
cld
sti
xor
push
sarb
arpl
push
and
xchg
push
cmp
shrb
in
jge
fsubrl
ret
mov
pop
mov
mov
sub
adc
jg
ret
cwtl
lods
mov
dec
lret
cmp
ficoms
adc
jb
jle
add
adc
xchg
inc
mov
xchg
jnp
pushf
pop
movsb
fsubs
popa
push
loop
xor
and
mov
mov
ret
xor
mov
fwait
aad
xor
and
out
sbb
std
sarl
mov
inc
cmpsb
es
bound
adc
out
test
repz
insb
in
fmulp
sbb
inc
mov
scas
pop
pusha
mov
add
push
or
xchg
xchg
pop
aam
enter
xor
es
out
loop
flds
mov
push
dec
jmp
ja
sbbl
lret
jl
or
or
cmp
rol
dec
mov
in
cwtl
adc
into
or
pop
dec
sti
in
xchg
outsl
xlat
inc
pop
push
inc
sbb
repnz
jge
inc
ret
pop
icebp
cld
dec
rcll
sbb
lods
imul
scas
pop
bnd
out
or
jg
inc
mov
xchg
mov
movsl
mov
mov
cmpsl
movsb
mov
loopne
sbb
mov
ss
std
loopne
popf
xchg
pop
insb
sbb
fistl
insb
sub
ljmp
jecxz
in
dec
and
sub
shrb
popa
fadds
je
mov
mov
stos
sti
phaddsw
cmp
mov
jp
and
popa
and
repz
push
push
popa
pop
pop
sub
sub
xor
jl
out
sbb
pusha
insl
ffree
pop
mov
sub
fdivrs
push
mov
aaa
std
in
inc
mov
aas
add
sbb
sbb
or
iret
push
or
out
cmp
andl
jne
movsb
call
jae
lret
mov
inc
inc
xor
jp
pop
sbb
scas
cmp
mov
popf
dec
pop
xchg
mov
jbe
jb
out
repz
add
jecxz
jo
movsl
push
push
aas
mov
pop
sub
jg
xchg
add
mov
mov
fdivr
in
push
testb
and
data16
cwtl
inc
movsb
es
push
lret
fstl
fisttps
mov
mov
sar
enter
loopne
sbb
xchg
pop
jge
stos
fdiv
mov
push
cld
loope
push
lods
iret
add
push
popf
popf
inc
jne
enter
les
jg
sbbb
jmp
dec
xor
mov
arpl
sbb
movsl
push
mov
mov
xchg
outsl
pusha
lds
ss
jp
jns
jo
hlt
test
push
test
not
pop
mov
stos
ljmp
inc
fimull
fldcw
mov
cmp
push
push
outsb
addr16
movsl
mov
fidivrl
pmullw
rcrl
sarl
sbb
adc
inc
outsl
sbb
das
in
sahf
or
scas
test
pop
sub
inc
dec
ljmp
ja
adc
cmp
pop
cld
dec
xor
popf
rolb
cli
jp
push
mov
leave
jne
dec
or
or
xchg
cmpsl
insb
xchg
sub
sbb
pushl
pop
aad
xor
dec
sbb
fsubrl
es
sub
push
sahf
push
push
not
into
mov
cmp
xchg
and
dec
ss
or
xchg
push
out
imul
lods
outsl
cltd
mov
push
or
dec
jae
scas
sbb
sub
cmp
pop
mov
sahf
pushf
cmc
call
xor
cs
loop
sti
test
in
popf
repnz
lahf
mov
mov
inc
mov
lea
fnclex
clc
ljmp
test
dec
sbb
aas
aad
sub
repnz
rolb
mov
adc
mov
sahf
out
lds
sbb
int
mov
lods
mov
sahf
xchg
aaa
jp
inc
cltd
cmpsb
pop
jb
aam
cmp
stos
jp
xlat
cmc
ja
jle
shr
cmp
xchg
cli
or
xor
outsl
cmp
push
nop
ficomps
call
push
mov
cmp
sti
xor
mov
cmp
out
push
sbb
jns
shrl
ss
sub
cmp
xor
pushf
mov
push
jno
dec
fidivrs
mov
stc
jns
mov
out
mov
lcall
add
mov
outsl
out
jno
jp
imul
dec
lcall
in
add
jge
cmp
dec
pop
cltd
push
mov
std
add
adc
rolb
in
pushf
xor
xchg
xchg
loop
and
xor
mov
jge
inc
push
or
lock
cmc
stos
gs
das
push
push
hlt
dec
dec
xor
jecxz
inc
xchg
xchg
lods
lods
in
mov
sub
mov
xorb
sbb
lea
mov
mov
mov
xchg
outsl
add
inc
push
adc
and
mov
scas
ds
adc
mov
enter
cmp
shll
pop
notl
sbb
adc
clc
negl
outsl
int3
jmp
cmc
cmp
push
sbb
xchg
and
jns
addr16
pop
inc
dec
pop
mov
xchg
shrb
jge
push
bound
enter
lahf
sbb
adc
ss
push
adc
jne
dec
jno
jnp
shlb
out
fstp
push
add
cmp
or
test
leave
adc
xor
xchg
movsb
arpl
lahf
pushf
inc
cltd
shll
movsb
aam
gs
clc
mov
sub
testl
icebp
into
inc
or
push
xchg
cs
fildll
mov
sbb
bound
jo
sbb
data16
add
inc
jbe
aad
jbe
sbb
xor
dec
pop
nop
add
or
and
adc
les
arpl
xchg
ljmp
xlat
jmp
cmp
add
pop
rol
jecxz
sbb
xchg
aas
push
mov
pop
xchg
loopne
arpl
pop
mov
std
xor
insb
dec
xchg
sbb
jl
dec
cwtl
scas
aaa
subl
push
mov
cmp
scas
cmp
jae
pop
sbb
fmuls
mov
xor
sbb
jne
cs
aam
inc
fcomps
ret
aas
fistpl
pushf
test
ret
js
push
fwait
popa
loopne
push
adc
push
jp
int
or
sbb
repnz
add
cmp
pop
in
clc
mov
fcomps
mov
rol
inc
or
popa
loopne
lds
jae
mov
pusha
mov
or
testb
hlt
mov
loope
sub
mov
insl
add
xchg
lock
jbe
pop
inc
clc
es
stc
cmpsl
xchg
scas
aaa
out
sub
mov
sub
int3
mov
mov
jno
fmulp
inc
cmpsl
inc
sub
test
rcll
test
jge
mov
push
sbb
popf
cwtl
in
mov
and
cmp
fs
add
andl
jno
dec
mov
cmp
jne
sbb
inc
int
insb
and
sbb
fisubs
mov
mov
sti
stos
inc
mov
pop
xor
xor
dec
push
out
jecxz
adc
and
xor
push
std
std
enter
pop
push
jl
sub
out
fstl
inc
jecxz
arpl
jne
add
mov
sub
rorl
dec
movsb
scas
xor
mov
sarb
adc
sarl
xlat
cmp
test
sbb
and
lock
pop
nop
repnz
xchg
cli
jbe
enter
filds
test
sbb
imul
das
xchg
push
adc
into
stos
pop
loope
mov
fisttpll
jecxz
add
or
xchg
sbb
jne
mov
cmp
lock
int3
xchg
mov
sbbb
inc
xchg
fld
ds
mov
sub
aaa
jbe
stos
in
js
mov
xchg
adc
push
and
mov
imul
fstps
or
negb
ss
outsb
pop
sub
mov
std
push
faddl
lds
scas
fidivrs
aaa
adc
xor
mov
lock
cmp
dec
test
int3
jbe
push
add
inc
jle
insb
mov
inc
xchg
test
dec
push
add
cmp
addr16
mov
cwtl
push
mov
push
xchg
or
in
add
pop
dec
out
jle
rorb
sub
sti
adc
movsb
pop
mov
ljmp
jns
shlb
out
aaa
push
jns
xor
test
pop
outsl
std
iret
sbb
aas
jae
shr
push
les
mov
pop
push
les
xor
or
rcr
jno
cmp
daa
inc
pushf
jle
mov
lret
rorb
inc
loope
adc
xlat
stos
not
out
lds
andl
add
dec
enter
or
or
push
push
lods
mov
movsb
or
mov
stos
inc
push
push
mov
push
subb
push
lds
imulb
fimull
insb
aas
jno
push
lods
cs
jnp
mov
sub
shrd
test
pop
or
into
shrl
insb
lods
leave
pop
sub
lea
xor
push
pop
pop
mov
jae
adc
int3
xchg
push
lock
jns
xchg
jne
mov
inc
out
popa
xor
sub
das
lock
xor
stc
fmulp
inc
fildl
popa
adc
scas
cmp
mov
scas
cmp
leave
sub
and
xchg
pop
out
shrb
scas
in
mov
or
cli
mov
clc
jno
add
fnsave
rclb
cmpsl
or
push
into
inc
mov
cmp
and
mov
mov
movsl
adc
jno
adc
xor
xor
adc
ficompl
cmp
jle
mov
sub
mov
js
xchg
int3
push
jno
push
lods
repnz
dec
dec
push
lcall
mov
xchg
pop
jmp
adc
testl
fisubs
test
mov
sub
pop
dec
push
rorb
mov
jg
repnz
inc
push
scas
adc
loope
add
outsl
test
pop
inc
cmp
inc
fcomps
lret
add
sbb
push
stos
sbb
add
cmp
daa
or
in
sbb
pushf
inc
push
into
fsts
inc
pop
inc
fsubr
jns
mov
mov
mov
pop
rcl
dec
sbb
and
lods
add
jo
mov
daa
jle
pop
addb
mov
pop
and
fisubs
jnp
sub
ret
pop
icebp
in
stos
add
inc
insl
mov
pop
subl
adc
fsts
mov
and
mov
jns
push
xlat
sbb
and
pop
je
adc
das
std
jb
adc
xchg
jp
cwtl
jmp
add
and
bound
inc
sysret
push
loope
nop
sti
and
add
int3
int3
jl
xlat
pop
int3
push
dec
jbe
test
insb
sar
aas
loope
xchg
in
sbb
jmp
mov
hlt
pushf
inc
or
mov
adc
push
mov
ja
loop
lret
sarb
jecxz
hlt
loopne
sbb
sbb
mov
push
orl
stc
sub
loope
xchg
add
notb
loop
push
cmp
movsl
jmp
arpl
jno
mov
in
insb
mov
or
dec
adc
fldenv
fwait
test
std
cmp
or
movsl
dec
shr
test
pusha
data16
xchg
test
stos
sub
fdivl
loopne
rorl
add
movsb
loop
xor
movsl
adc
pop
mov
sub
add
cmp
push
cmp
push
push
cltd
les
mov
mull
fbstp
daa
call
sbb
jg
into
ret
pop
push
cwtl
sbb
pushf
pop
in
or
sub
jmp
into
mov
aam
pop
std
push
or
or
incl
js
pop
mov
xchg
mov
adc
insb
stc
adc
or
cltd
bound
sbb
inc
cwtl
pushf
ja
sbb
cmp
mov
addr16
add
xchg
pushf
or
or
pop
shl
sbb
mov
insl
or
mov
mov
adc
dec
fwait
dec
jns
data16
dec
sub
scas
inc
test
add
repnz
jbe
in
fisubl
adc
adc
sbb
inc
pop
popa
push
mov
icebp
loopne
xchg
inc
and
mov
and
jae
mov
sahf
lods
or
xchg
mov
add
imul
dec
roll
jo
push
loope
lahf
push
or
xor
lret
sbb
xchg
fs
mov
add
cmp
pop
and
xor
cmp
mov
in
xor
out
sbb
mov
shl
incb
addr16
in
mov
pop
push
jle
mov
and
xchg
mov
pop
adc
out
leave
aaa
int
xor
pop
mov
insl
pop
cmp
popf
js
add
sarl
jle
sbb
fs
dec
cmp
fdivrs
addr16
xchg
lret
adc
adc
pushf
mov
in
cmp
lods
aad
ffreep
dec
imul
cmp
cmpsl
out
xchg
add
cmpsl
shrb
add
mov
rclb
push
into
inc
jge
pop
imul
aam
adc
enter
cmpsl
mov
fildll
rol
insb
sarb
out
leave
inc
arpl
fimuls
outsl
insl
jbe
fs
outsl
mov
je
les
fisttps
pop
ret
xchg
subl
adc
fiadds
mov
jns
mov
jno
flds
mov
mov
sti
aam
loope
inc
pop
cmp
fwait
xor
lret
cmpsb
clc
fcompl
xchg
adc
ljmp
xor
fwait
ret
lock
mov
ja
xor
cli
mov
loope
mov
sbb
ljmp
inc
mov
rcr
push
nop
xchg
outsb
mov
sti
mov
test
jae
mov
rcll
sbb
push
je
movsb
or
scas
jno
movsl
inc
movsb
notl
push
ficoml
aam
fnstenv
lods
pop
pop
dec
cmp
mov
pop
inc
push
cld
in
shld
jmp
jo
sbb
cmc
or
lcall
jg
loope
dec
add
xchg
pop
push
cmc
lcall
pop
jge
fistpl
subb
cmp
fidivs
mov
repnz
dec
push
int3
mov
dec
in
add
arpl
das
cmpsb
loopne
stos
incl
and
stc
out
test
adc
xchg
ret
push
pushf
push
mov
xchg
addl
cltd
in
lcall
push
cs
out
call
out
adc
dec
fildll
repnz
aas
jb
and
dec
pop
daa
repnz
ds
sbb
je
jo
push
xor
xor
addr16
xchg
ss
jo
and
dec
in
stos
popa
mov
push
mov
add
lret
jnp
push
sbb
in
icebp
ds
and
movsb
xor
call
jnp
mov
pop
or
dec
dec
mov
push
stos
data16
or
xor
and
push
es
cmp
aas
mov
imul
or
out
lock
lods
inc
cmp
sbb
sub
mov
addr16
popa
inc
xchg
js
xor
addl
fwait
js
push
xorb
inc
rorb
out
jbe
incb
add
sub
add
lret
mov
and
lods
dec
cmp
fwait
ror
xor
or
jmp
sbb
fs
mov
and
adc
das
jo
mov
pop
out
pusha
lea
fwait
aaa
insb
adc
xchg
mov
jns
sub
out
lds
pop
sar
jo
inc
cld
xor
lahf
test
call
jle
push
push
pop
test
inc
in
push
nop
dec
jecxz
xchg
xor
sbb
cmp
xchg
jmp
inc
cmp
xor
mov
aad
movl
jns
cmpsl
dec
jle
out
mov
aad
pop
data16
test
xor
aas
out
popf
push
mov
push
je
push
es
loope
mov
adcb
in
stos
rolb
mov
pop
pushf
or
adc
nop
cwtl
push
xor
sub
test
lea
jmp
mov
testl
push
fs
push
imul
inc
sub
not
adc
dec
sub
push
pop
mov
sti
inc
outsb
inc
and
mov
inc
insb
xchg
and
and
xchg
lcall
mov
mov
clc
cmpsl
dec
addb
dec
test
das
xchg
in
inc
push
popf
mov
insb
bound
pop
js
and
add
mov
jns
or
jnp
aad
cmp
or
inc
ja
dec
popf
push
jle
mov
iret
stos
dec
mov
test
cmp
imul
pop
clc
lret
xor
pusha
mov
aam
je
bound
sbbb
lods
stc
leave
mov
push
xor
fcomip
add
fs
mov
imul
jge
xor
mov
cmp
cmovnp
and
fnstcw
jg
cmp
inc
daa
bound
insl
xor
je
inc
sbb
call
cltd
sbb
push
and
xchg
sub
pop
fwait
xor
sahf
lods
push
shrl
iret
jne
es
bound
fmul
push
inc
mov
repz
cwtl
imul
xor
dec
pop
mov
cs
mov
mov
rcl
loopne
and
movsb
xchg
repnz
andl
pop
mov
mov
jb
fxch
scas
xor
mov
xor
out
lret
pop
pop
fldenv
cmpsb
and
rcl
cmpsl
icebp
adc
aaa
aas
cmp
push
jl
lret
sti
mov
cld
pusha
xchg
push
mov
xacquire
inc
out
push
add
lcall
pop
push
cmp
jge
mov
sub
insl
movsb
jno
jns
ja
fbld
fmuls
jl,pt
mov
fsubrs
jo
xchg
hlt
or
sbb
cltd
insb
push
xchg
fisubs
adcb
mov
sarl
paddsw
jecxz
ljmp
ds
insl
je
jno
scas
insb
in
adc
mov
je
addr16
jno
loope
clc
stos
icebp
int3
gs
mov
pushf
or
and
sub
and
xchg
push
push
sbb
inc
pop
lods
aas
insb
mov
aad
push
in
enter
dec
pop
push
add
cmpb
ja
test
mov
jle
call
cmpsl
popf
pop
iret
sbbb
hlt
add
clc
mov
iret
jp
repz
inc
cmpsb
aas
ret
aam
mov
arpl
jmp
sar
push
push
xchg
imul
xor
mov
out
cli
outsb
push
xchg
xor
cwtl
stc
mov
adc
pushaw
xor
pop
je
pop
lahf
je
out
lcall
jb
and
adc
jb
aas
mov
cmp
add
pop
push
shl
jb
cs
inc
loopne
sub
popa
or
mov
rorl
adc
cmc
xor
cmp
lahf
je
lret
shrb
xchg
pop
mov
test
ror
adc
int
inc
pop
ror
add
jbe
shld
loopne
js
call
mov
mov
rol
lock
push
dec
stos
lret
mov
push
call
mov
or
andl
scas
sub
dec
jmp
out
or
into
movups
sbb
nop
and
in
dec
adc
test
inc
gs
adc
pop
out
mov
sub
out
aas
cwtl
xchg
fnstcw
xchg
bound
inc
inc
push
shlb
jns
push
push
add
pop
iret
or
adc
mov
or
jge
loope
sub
lcall
jns
out
jmp
cmpsb
loope
cmpsb
mov
imul
dec
movsb
pop
out
add
push
loopne
cltd
push
inc
cmp
and
mov
imul
push
xchg
repnz
loop
mov
rol
imul
mov
push
and
mov
pushf
insb
or
iret
repnz
iret
gs
in
ds
icebp
lret
repnz
fwait
mov
cld
leave
mov
mov
adc
clc
jg
inc
nop
push
cli
lds
addr16
iret
inc
xchg
adc
dec
mull
ljmp
mov
inc
std
push
and
adc
mov
xchg
lds
cmp
pop
inc
loope
shl
pop
gs
cltd
shll
or
push
stos
jecxz
push
cwtl
add
lds
cmc
in
mov
int
fidivrl
jno
std
dec
bound
inc
mov
inc
daa
add
and
mov
jb
cs
add
add
push
ja
lahf
notl
mov
add
stos
mov
jo
mov
mov
int3
add
fwait
push
jg
dec
iret
mov
and
outsb
pop
in
add
ret
mov
mov
cld
movsb
outsb
or
mov
sahf
dec
or
in
loope
lcall
aad
repz
dec
fildll
mov
and
ja
pop
mov
adc
stos
inc
push
in
add
xchg
push
cmpsl
bound
push
sub
js
mov
mov
call
cmp
xchg
sub
push
jg
mov
out
stos
sbb
pop
and
or
jnp
push
mov
mov
mov
sahf
xchg
loope
lcall
sar
mov
xchg
repnz
adc
cmp
mov
test
imulb
iret
imul
stc
pop
shl
sub
mov
aam
dec
sub
jmp
push
mov
dec
pop
add
imul
xor
inc
divl
gs
sub
add
mov
jle
inc
iret
and
imul
push
mov
out
mov
mov
and
xor
mov
lcall
xchg
xchg
clc
jge
and
sub
bound
adc
imul
jo
sbb
xchg
mov
dec
inc
inc
inc
pop
mov
mov
cmpsb
jmp
jnp
outsb
addr16
lods
std
or
inc
cmp
push
aam
xchg
les
jge
pop
lahf
fmulp
jp
cmc
push
and
sar
icebp
jno
popf
je
ss
lret
push
mov
fs
lea
jecxz
movl
sbb
enter
mov
fsubrp
in
lea
insl
out
sbb
inc
push
fcmove
add
cld
sub
repz
sbbb
pop
mov
push
aam
scas
add
pop
cltd
enter
pusha
cs
push
lret
sbb
pop
lcallw
shrb
pusha
push
sbb
adc
pop
and
or
lods
and
or
pop
lods
xor
adc
pop
push
imul
pop
push
and
jl
mov
jp
or
dec
jg
mov
mov
mov
mov
or
jl
ret
fwait
clc
jge
fld
pop
pop
iret
mov
xchg
mov
and
xorl
insb
call
mov
mov
or
test
or
jo
xchg
arpl
xor
mov
mov
call
dec
pop
dec
or
mov
pop
setne
pop
xchg
add
adc
mov
xchg
gs
cmp
or
out
clc
std
sub
ljmp
enter
je
push
loop
fstps
pop
xchg
rolb
adc
lock
sti
ret
jbe
sahf
sub
xchg
jb
jmp
mov
lods
ret
sbb
adc
sysret
jmp
fildll
mov
addl
loope
fldcw
movsl
mov
pop
xchg
xor
fneni(8087
rcrl
cmp
outsb
adc
loopne
pop
negb
push
lods
xor
in
sub
data16
rolb
inc
jbe
ljmp
xchg
or
push
jmp
jae
fdivl
mov
or
stos
push
mov
pop
fwait
dec
lods
mov
mov
sbb
push
imul
int
push
popa
ljmp
pop
push
cmc
sbb
xchg
jl
mov
test
mov
mov
cltd
pop
sub
cmpsl
daa
pop
mov
fwait
dec
jl
mov
push
push
lahf
xlat
dec
loope
push
jns
xchg
or
xlat
outsb
loop
mov
xchg
sbb
adc
inc
arpl
mov
daa
xor
push
dec
out
inc
pop
scas
inc
dec
je
idivb
sbb
lea
mov
repz
pop
lods
and
push
fnsave
xlat
sbb
inc
or
xchg
ret
push
jle
mov
rcrl
aaa
mov
enter
jmp
or
jge
mov
fbstp
loop
in
inc
call
ficoms
sti
lods
dec
ret
push
mov
ja
cmp
mov
add
lret
pcmpgtb
popf
jl
push
add
testl
bnd
and
test
incl
dec
mov
mov
lods
inc
mov
xor
pusha
icebp
or
scas
sub
sub
adc
xchg
fidivrs
push
les
insl
in
imul
pop
lret
adc
sbb
and
fwait
jns
bndldx
fwait
xlat
sub
fidivl
mov
lcall
push
or
adc
mov
lods
and
inc
nop
sub
mov
mov
ja
mov
in
xlat
inc
pop
sub
add
mov
fnstsw
repz
fmulp
fcmovnb
stc
pop
aaa
sub
lahf
xor
xchg
cmp
jecxz
pop
cmp
fimuls
es
dec
or
push
or
and
push
xor
push
enter
test
xchg
fs
in
lcall
mov
fwait
lret
inc
cmp
and
lods
pop
into
stos
loopw
jp
fisttpll
sub
sub
xlat
cmp
adc
in
xor
lds
fmull
inc
dec
stos
loopne
rcrb
mov
rolb
xor
loope
mov
mov
jl
push
sbb
or
cltd
adc
cs
test
sbb
imul
lret
dec
inc
out
nop
ja
insb
sti
push
jl
iret
pop
scas
lret
popa
dec
adcl
cmpsb
sbb
andb
push
repnz
in
pusha
cmpsb
xchg
fistl
push
and
ja
xchg
mov
sub
adc
xor
mov
add
fidivl
jnp
sub
jnp
jl
xor
es
repz
imul
pop
pop
sbb
push
inc
outsl
in
pop
xorl
je
xorb
out
mov
xchg
sarb
inc
dec
mov
cmp
cmpsb
adc
lds
sub
rcrb
mov
or
loop
dec
or
cltd
jb
xchg
clc
push
xchg
mov
jecxz
sub
pop
sbb
fs
pushf
mov
out
xor
movsl
xchg
popf
xor
in
push
fiadds
jbe
push
or
das
adc
fs
lret
add
ljmp
aaa
addr16
cmpl
push
outsl
xor
mov
sub
dec
mov
fidivrs
push
mov
out
pop
cld
stc
cmpsl
fdivr
gs
mov
or
mov
dec
fwait
je
repnz
or
data16
or
pushf
fdivs
pavgw
pusha
jmp
mov
xor
mov
scas
pop
mov
adc
dec
add
stos
das
xor
nop
sahf
xlat
cmp
lock
in
jmp
mov
fdivrp
pop
cld
movsb
arpl
addr16
and
outsb
bound
repz
pop
filds
stc
xor
mov
sahf
lds
mov
and
push
lods
pop
xor
icebp
test
aad
cld
mov
or
sbb
xor
push
mov
add
int3
lret
mov
jns
adc
adc
scas
add
inc
int3
scas
and
call
jae
sub
pop
xchg
imul
pop
mov
xchg
movsb
adc
test
mov
inc
mov
jno
cmc
mov
push
mov
jnp
xor
leave
jl
sar
es
mov
or
jb
jne
test
lret
dec
aam
xchg
inc
sub
inc
inc
or
das
mov
or
mov
loopne
sarl
dec
jmp
rcrl
cmpsl
mov
movsl
mov
test
incl
mov
mov
push
sub
add
aam
mov
icebp
insl
pop
pop
fldcw
lcall
int3
lock
data16
xor
call
sub
imul
mov
movsb
cmc
and
pop
mov
jnp
xchg
adcl
js
enter
aas
movsl
mov
outsb
jecxz
jo
adcl
out
stc
sbbb
xchg
setl
jmp
sti
and
les
sub
fcompl
cli
leave
or
negb
mull
mov
mov
xchg
lea
ljmp
cmp
pop
nop
stos
ss
mov
push
and
pop
or
mov
ja
mov
mov
imull
and
mulb
mov
sub
ret
cmp
lea
outsb
pop
jae
xchg
ds
xchg
and
aaa
mov
xchg
xchg
insb
inc
sbb
faddl
fmulp
mov
scas
push
push
mov
sti
int3
cltd
sub
and
add
add
xor
inc
jb
sbb
cmpsl
mov
push
mov
popf
push
out
in
insl
mov
jbe
les
stos
int3
or
dec
lcall
addl
adc
xor
lea
mov
rcrl
jne
or
popf
pop
pop
jnp
movsb
mov
rcrl
ja
inc
jne
mov
movsl
xor
mov
sbb
pop
fdivl
mov
xor
push
ja
sbb
jnp
lea
jg
psadbw
inc
and
dec
inc
nop
pop
clc
push
jmp
mov
lock
and
pop
stos
sahf
test
xchg
dec
mov
push
push
mov
add
xor
cmpsl
nop
adc
nop
add
xchg
movl
fs
mov
mov
loopne
sti
inc
push
es
or
mov
cmp
loop
pop
ja
dec
pop
jo
or
clc
sti
fs
add
pop
arpl
cmp
xchg
mov
addr16
cmp
lods
ror
aad
sbb
pop
sbb
sbb
lcall
es
pop
ss
and
and
and
or
sbb
cmc
cli
dec
data16
xchg
mov
out
out
scas
mov
rorb
or
cs
mov
sub
add
jns
xchg
cmp
xchg
mov
mov
call
xchg
std
gs
ficoms
rclb
ret
mov
or
addr16
and
sahf
xchg
fimuls
jne
sbb
sti
jl
push
adc
and
adc
mov
out
pushf
jmp
aas
jno
jo
jge
ret
pop
scas
xchg
pop
shll
bndldx
data16
sbb
call
cld
outsb
dec
fistpll
or
push
push
es
add
fsubp
daa
mov
enter
xor
sti
orb
jne
data16
adc
call
mov
pop
mov
test
dec
mov
xchg
lods
jnp
xor
and
nop
divb
in
fidivs
mov
loop
nop
mov
mov
in
add
loop
data16
mov
out
sbb
mov
inc
inc
push
fbstp
mov
gs
aad
loope
cmp
lcall
ja
aad
add
cmp
mov
dec
xchg
out
xor
inc
insb
and
ljmp
lret
ficoms
stos
push
std
shlb
sbb
cmp
sub
rcll
xchg
loope
and
out
frstor
jo
cltd
popa
sbb
xchg
sub
pop
aad
popa
xchg
xchg
sar
jnp
mov
scas
jne
cwtl
pusha
mov
imull
push
add
js
jno
mov
popl
adc
inc
loopne
jecxz
mov
jmp
dec
rcll
nop
loop
jne
fists
sti
xor
or
xorb
adc
adc
push
jle
jmp
nop
test
cltd
push
push
ja
clc
xchg
outsl
int3
out
daa
jnp
adc
push
sahf
mov
sahf
inc
push
pop
or
es
adc
add
int3
popf
dec
data16
lahf
cmp
popf
cmc
leave
fisubrl
sbb
pop
ret
push
iret
jmp
rcl
test
arpl
add
cmp
out
xchg
lret
and
mov
imul
add
call
outsb
out
hlt
out
shrl
in
jmp
cli
jbe
sub
sbb
leave
lret
jecxz
sub
outsb
ficompl
push
mov
test
movsl
adc
fs
ljmp
cmp
popf
jge
push
in
xchg
daa
in
mov
lods
or
push
rclb
xchg
sbb
jae
enter
out
lods
mov
dec
roll
fiaddl
add
mov
push
rcrl
out
lcall
fcoml
fs
cmp
std
lret
dec
jo
sub
jns
add
rolb
pop
jo
mov
add
test
clc
daa
leave
sti
push
out
add
fiaddl
or
out
mov
popf
int
fistl
pop
sbbb
lds
fdivp
jbe
test
daa
repnz
jno
mov
pop
mov
int
add
inc
test
aam
mov
cmp
xchg
cmc
or
adc
cmpsb
xor
adc
repnz
push
into
and
push
sub
push
lds
fdivs
jl
ljmp
sbb
dec
test
out
adc
data16
test
xchg
imul
mov
push
bound
push
es
cmp
stos
movsl
xchg
xchg
imul
xor
cmp
hlt
scas
jecxz
in
xor
mov
gs
adc
mov
pop
xchg
push
clc
mov
enter
popf
adc
xchg
xlat
pop
sahf
cld
enter
enter
push
dec
aad
cmp
mov
repnz
xor
ficomps
je
mov
push
es
dec
dec
insb
xor
insb
fldcw
push
repnz
mov
nop
les
cmp
sbb
sub
aaa
mov
and
ret
out
movsb
push
repnz
out
jo
gs
and
pop
lahf
shrl
cmp
inc
sti
int
xlat
pop
or
mov
mov
outsb
dec
test
inc
data16
add
and
lcall
and
setge
adc
andl
xor
cwtl
sub
int
jo
ds
add
jb
es
ss
xchg
pop
lock
inc
enter
stos
lods
lretw
stc
adc
lock
hlt
xchg
xchg
les
mov
or
jge
movsb
mov
loope
push
mov
shll
rolb
cmpsb
shlb
jnp
andl
mov
mov
fcmovne
mov
ss
cmp
dec
jo
jecxz
stos
inc
movsl
repnz
ljmp
cwtl
and
std
loope
sbb
loopne
xchg
shll
mov
lods
aad
mov
xor
inc
in
filds
movsl
pop
xchg
pop
out
call
out
enter
or
jns
imul
push
sub
pcmpeqw
mov
lock
push
jmp
pop
jb
imul
sub
jne
dec
pop
test
popf
stos
fistpll
test
xor
ja
pop
js
lea
lea
add
out
popf
lock
xlat
in
aad
clc
lldt
xchg
call
adcb
jo
mov
inc
adc
stc
mov
in
jno
inc
mov
inc
xlat
loope
inc
push
cmpb
xlat
je
cmp
inc
jns
popa
int3
stc
sub
mov
pop
pop
add
cwtl
sbb
cmp
push
mov
cwtl
cmp
push
scas
jae
icebp
test
scas
shl
hlt
xchg
test
add
ss
in
xor
filds
jle
lods
jno
xchg
sbb
je
sarl
fwait
jo
push
das
mov
test
repnz
mov
adc
addr16
dec
cld
xorb
push
mov
inc
fstpt
xor
gs
shlb
clc
aas
dec
lods
leave
xchg
xchg
sub
and
out
push
and
fs
and
fsubs
in
sbb
sbb
sbb
shll
sbbb
addr16
stos
repz
fldln2
repz
mov
adc
push
push
pop
inc
cmc
and
add
cmp
add
mov
mov
and
mov
aam
mov
and
adc
or
xlat
mov
adc
scas
cld
fdivrs
mov
jl
fnsave
jp
iret
dec
sbbb
mov
jnp
adc
in
cmpsb
sbb
mov
ja
cwtl
pushf
leave
mov
test
aaa
movsb
fimuls
xchg
es
jle
rol
xchg
mov
rclb
scas
pushf
xchg
lcall
repnz
xlat
lods
mov
sub
cmp
into
jns
shll
pop
sbb
push
loop
dec
and
out
pop
mov
xchg
xor
imul
xchg
in
mov
push
nop
sar
xchg
lods
mov
out
mov
or
mov
add
ficompl
and
fucomip
jl
stos
inc
fnstsw
shll
loope
test
mov
or
mov
test
cmc
sub
mov
lods
call
or
outsb
cltd
xchg
outsl
inc
int3
test
sbb
mov
inc
or
js
js
ffreep
bound
in
cmp
imul
or
das
sbb
inc
mov
and
jge
es
lods
mov
lods
addb
sti
push
pop
fldenv
fs
mov
hlt
sub
lods
push
fmuls
pop
pop
les
imul
aam
mov
mov
cmp
mov
pop
dec
mov
rclb
fcomi
jg
add
lods
and
lret
test
aam
int3
and
jbe
outsl
xchg
mov
inc
ja
loope
cmpsl
or
mov
shl
movsb
ficomps
insb
vmovapd
cmp
mov
push
mov
or
dec
test
jno
add
dec
mov
fisttpll
fs
jg
iret
xor
adcl
jmp
adcb
js
dec
or
rorl
sub
push
sbb
or
aas
jp
mov
cmp
and
test
loopne
cmp
movsl
je
out
sbb
orl
mov
pop
adc
shrb
jno
push
lahf
pop
adc
andl
xlat
cwtl
push
or
mov
cmp
pushf
aad
hlt
inc
push
xchg
mov
push
sahf
rolb
xor
lods
jge
inc
mov
lret
sbb
sub
or
test
orb
mov
cmpsb
fimuls
fidivl
dec
loop
out
and
stos
inc
ds
jne
cli
cli
mov
ret
xchg
push
test
or
cli
mov
insb
dec
bound
aaa
ret
subl
incl
ss
inc
pop
bound
in
shr
or
or
shll
cmc
jecxz
out
lea
stc
std
leave
fwait
out
fs
ret
fs
and
cltd
add
roll
outsl
notl
in
out
lret
push
push
jge
lock
popf
jbe
fidivrl
stos
and
pop
and
cmpsl
aad
cmp
jmp
xor
setnp
adc
fcoms
test
xchg
mov
adc
mov
and
dec
jmp
add
jecxz
lea
add
jae
and
clc
subb
dec
aas
lret
out
test
sub
movb
mov
icebp
push
cmp
lcall
sarl
jbe
push
gs
cmpb
clc
fldt
mov
fsubrs
lds
rcrb
int
int3
mull
pop
mov
xchg
es
cmpsl
std
mov
xor
cltd
adc
imul
push
or
sbb
adc
les
mov
movsl
xchg
nop
aam
cmp
imulb
sub
scas
add
jecxz
inc
ret
xorb
push
mov
jge
add
insl
fistl
inc
adc
cs
adc
push
rep
popa
and
call
pushl
lahf
and
in
cmp
pop
mov
cwtl
aaa
rorl
jg
movsl
inc
mov
push
xchg
jno
popl
lcall
mov
cmp
xor
pop
fs
data16
sbbb
mov
cmc
loopne
insl
stc
call
pop
cmp
lds
fwait
int
scas
cmp
ljmp
mov
in
fwait
push
mov
popa
adc
je
inc
xchg
rcrl
mov
mov
rcr
fisubs
daa
mov
aaa
jl
mov
sub
push
dec
xchg
je
push
fnstsw
inc
sbb
sub
sub
call
insb
sub
ds
jmp
sub
imul
and
pop
mov
jl
mov
repz
xchg
jl
adcl
stos
pop
and
pop
test
and
push
sub
pop
dec
and
sti
sbb
scas
ret
dec
push
dec
add
mov
sbb
cmp
or
push
repnz
sahf
xor
xor
push
rcrb
xchg
mov
movsl
pop
mov
adc
mov
aam
add
movsb
xchg
jge
dec
es
xchg
add
push
fidivrl
mov
fbstp
ja
fldenv
sbb
and
mov
imul
test
cli
adc
je
loop
inc
enter
fcoml
cmc
popf
jno
repnz
test
sarb
pop
jae
dec
leave
std
adc
inc
repz
cmpsb
jle
aam
popa
out
xchg
xchg
adc
adc
cmc
lret
cwtl
out
dec
xchg
dec
adc
pushf
xchg
cmp
sbb
adc
ret
dec
pushf
fldl2e
lahf
mov
hlt
ljmp
addl
gs
dec
adc
lret
shll
push
or
inc
adc
shll
xchg
adc
std
jne
fsubrs
jnp
mov
gs
aaa
aaa
jo
pusha
jge
ds
sub
cmp
mov
roll
ja
lds
popw
lds
bound
xlat
fldenv
sub
and
cltd
pop
xchg
out
sbb
stc
les
fwait
cmpsl
xor
out
call
add
xchg
iret
cmp
push
ret
xchg
fisttps
xchg
cmp
inc
repnz
push
stos
sub
sub
sub
jmp
pop
inc
or
lock
out
mov
incl
mov
pop
jle
xor
je
dec
aad
jge
ja
and
adc
subb
repnz
add
mov
test
lret
jno
push
cmp
mov
or
cli
cmpsb
cmp
pop
xor
xor
pop
pop
sbb
sub
loop
ss
mov
notb
cmpsl
mov
sti
jmp
dec
fbstp
stos
cmpsl
in
test
iret
mov
xchg
mov
cmpsl
stc
lret
cwtl
aaa
test
mov
xchg
push
and
test
addl
mov
stos
mov
xchg
cwtl
xchg
sbbb
cmpsb
hlt
cli
inc
xor
push
sbb
cli
lods
dec
mov
mov
mov
movsl
or
adc
dec
push
adc
inc
stos
es
mov
in
push
ds
sbb
hlt
jbe
jecxz
sub
sub
sbb
lds
xchg
push
mov
mov
and
dec
mov
lds
movsl
cmp
mov
xlat
popa
jbe,pn
jecxz
jae
pop
nop
xchg
popf
scas
cmp
ja
ret
shrb
mov
pusha
cmpsb
mov
mov
add
mov
mov
jle
jl
in
mov
in
outsl
aad
fmulp
and
dec
gs
mov
insl
and
push
add
sub
dec
cmc
jp
sbbb
jmp
stos
rorb
or
shl
xchg
pop
jmp
outsl
or
and
insb
enter
sbbb
lahf
arpl
daa
or
data16
xlat
sbb
adc
and
lods
leave
and
or
rorl
les
mov
shl
sub
fisubrl
push
notl
xchg
mov
insb
jb
les
xor
push
sbb
add
xchg
cmp
lret
cmp
mov
into
aaa
jecxz
adc
movsb
cs
pop
rcll
es
sbb
jae
or
insb
ret
in
mov
fldcw
arpl
xchg
sarl
mov
jbe
xchg
bnd
cs
xchg
push
mov
mov
add
or
mov
sti
xchg
notl
xchg
or
or
fists
pushf
mov
or
mov
or
shlb
cmp
std
sub
sbb
push
lods
mov
mov
mov
sbb
sbb
sub
outsb
cmpsl
jnp
psubb
iret
mov
cmp
leave
je
cwtl
pop
add
sarl
orb
adc
addb
mov
push
or
loopne
xlat
or
lock
push
xor
pushl
fucom
insl
sbb
sub
je
test
xchg
push
pop
sbb
pop
push
mov
cli
dec
and
lods
inc
imul
dec
mov
fstl
shl
mov
mov
and
sahf
push
and
fsubrs
ret
out
stos
lea
ret
mov
and
push
movsl
test
or
outsb
cmp
mov
push
cmpsl
int
sbb
xlat
cmpsb
into
addr16
dec
or
mov
and
hlt
inc
push
push
jae
iret
pop
dec
mov
adc
incl
inc
mov
pop
xor
faddl
adc
push
aam
pop
or
pop
stc
mov
jl
imul
int3
adc
cwtl
nop
add
jge
mov
aas
mov
je
jbe
lock
rclb
jbe
and
leave
movsl
insl
out
mov
movsb
int
cld
int3
lret
imul
lods
popa
xchg
cmpsb
inc
jbe
ret
cwtl
sub
xor
push
jae
mov
cmpsb
add
sbb
push
hlt
les
loop
repnz
mov
or
adc
aas
int
cmpsl
dec
sbb
aaa
lahf
xchg
cs
xchg
imul
sub
iret
pop
mov
call
pop
jl
scas
jns
cmpsl
nop
movsb
int
mov
jmp
jmp
add
jo
push
or
insl
adc
lahf
fwait
jne
pop
repnz
mov
xchg
out
mov
cmp
inc
push
js
lret
xor
sbb
mov
push
shll
les
xchg
stc
std
adc
push
in
adc
add
pop
shrl
jl
cmp
das
loopne
add
imul
test
call
jle
push
mov
dec
inc
push
loope
loope
xlat
mov
lea
daa
push
mov
orb
fdiv
pop
out
or
repz
inc
arpl
inc
cltd
or
lahf
push
daa
dec
lods
and
push
ror
incb
cmp
sub
loope
cli
test
lret
pop
push
pop
push
cmpsl
iret
add
inc
in
lret
push
jmp
loope
cmc
test
mov
pop
lahf
jmp
stos
test
or
hlt
test
lret
mov
mov
jl
rclb
jp
push
cmp
adc
adc
and
fistpl
inc
inc
loopne
cmc
repnz
push
dec
test
leave
dec
loopne
mov
jg
pop
xlat
outsb
add
shrl
pop
rorl
lds
fidivrs
shrb
filds
cltd
push
fisubs
fcmovu
cmp
or
cmp
fistpll
sbb
ret
iret
imul
andl
xlat
jle
movsb
mull
and
out
mov
jo
inc
imul
xor
pop
mov
scas
add
call
jne
push
stc
dec
ljmp
mov
imulb
cs
mov
dec
fisttpll
cmp
arpl
pop
stos
clc
push
lahf
inc
icebp
cmc
xchg
shll
inc
ret
stos
pushf
fistps
leave
mov
add
ja
adc
mov
pop
add
cmp
scas
cs
push
xor
dec
sahf
fcmovnb
xchg
fs
and
cwtl
fistpll
dec
sbb
add
in
dec
cmp
aaa
mov
call
or
ret
push
lds
fwait
sahf
push
out
lea
out
add
lret
xchg
push
mov
xchg
fs
mov
negb
mov
mov
push
fsubrs
xchg
fisubrs
cli
push
push
mov
repz
inc
popf
ja
rcrb
movsl
xchg
push
ret
mov
stos
rorl
add
adc
data16
sub
jmp
adc
in
idivb
sbb
sahf
out
pop
clc
out
dec
repz
pop
stc
mov
xchg
pop
and
or
or
lahf
mov
jb
lret
sbb
popf
jle
iret
enter
das
leave
ljmp
rorl
sbb
or
dec
enter
dec
push
cld
packsswb
add
test
push
jp
dec
jl
into
in
test
push
in
and
jg
push
aam
mov
jbe
adcb
aas
clc
xchg
mov
mov
and
pop
ret
fxch
fld
pop
out
or
cmpsl
imul
sub
mov
mov
test
jle
loop
shrl
arpl
dec
inc
sbb
lods
pop
jno
inc
sahf
pop
jmp
idiv
mov
sub
into
mov
test
repnz
out
jns
repz
ret
out
scas
xor
cmp
repnz
divl
into
push
lock
mov
mov
lcall
jp
lea
test
iret
xor
test
push
into
xor
hlt
loopne
scas
icebp
push
and
and
jg
mov
cmpsl
loopne
shrb
testb
sbb
rcl
lret
dec
dec
mov
push
sbb
push
and
mov
jo
es
repnz
mov
nop
pop
cld
mov
rcrb
push
fdivp
repz
xchg
loope
mov
addr16
sbb
xor
cld
mov
sbb
push
lret
fldt
push
es
dec
mov
xchg
cmp
cmp
scas
insb
cwtl
pusha
ss
nop
jnp
dec
push
cmc
or
scas
decl
rcrb
sub
data16
inc
add
and
lock
insb
test
inc
movsb
insl
xor
mov
add
inc
gs
dec
sbb
shrb
push
push
or
or
inc
jmp
sub
inc
je
xorl
ds
inc
xchg
or
rorb
mov
jl
out
shll
jnp
mov
aaa
mov
dec
cld
cmp
cmpsb
fwait
pop
xchg
adc
out
cli
and
dec
mov
pop
sarl
lods
xor
push
arpl
test
in
jae
shrb
mov
push
outsb
jmp
lods
push
and
adc
jne
jnp,pn
xchg
lahf
repz
leave
dec
xchg
sbb
cs
pushf
dec
cmpsb
cmpsb
arpl
scas
dec
sub
xor
sub
xchg
imul
pop
lods
call
cmpb
popf
fcmovnb
loopne
pop
lea
cs
mov
pop
insl
sti
daa
adc
pop
cmpsl
sbb
push
lea
mov
mov
insb
inc
ret
ds
in
sub
push
loopne
mov
pop
or
xor
data16
stos
les
jge
mov
and
add
mov
cmp
sbb
in
addr16
jl
fsts
mov
add
setg
adc
pop
cmpsl
mov
dec
mov
push
and
cmp
ret
nop
popa
rcrl
std
pop
and
push
xchg
sti
sub
clc
push
sarb
sarl
push
mov
add
mov
daa
or
push
sub
cld
or
xor
in
insl
mov
jnp
int
cmc
ljmp
adc
cs
mov
sbb
ficoml
ret
mov
pop
mov
test
lret
inc
dec
fidivl
mov
call
sbb
arpl
testl
sbbb
push
cmp
mov
lock
aas
std
nop
daa
inc
sub
jbe
test
push
push
es
mov
adc
push
aam
dec
xor
das
popa
ss
push
leave
push
imul
add
xor
ficoms
jge
ret
test
aam
imul
mov
jns
sbb
dec
int
fsubrs
sbb
das
mov
dec
xchg
cmova
xchg
mov
lods
jns
mov
mov
lods
sub
movsl
cwtl
pop
ret
daa
or
cmpsb
arpl
mov
push
push
std
pushf
cmpsb
push
and
lock
popf
pop
cmpsb
sbb
in
xor
push
pop
jmp
inc
push
movsb
push
and
sbb
push
xor
mov
scas
fwait
sbb
push
fistpll
or
sbb
lret
cmp
js
jne
iret
add
hlt
or
cmp
xor
shll
and
xchg
mov
mov
std
mov
xor
movsb
jmp
push
sbb
fnsave
mov
in
sub
jg
fcompl
dec
pop
add
shlb
cmp
add
jp
mov
push
dec
push
cmpl
enter
pop
adcb
sub
pusha
rorl
and
popa
popa
std
pop
mov
rorl
ret
or
add
sti
dec
and
clc
aas
cmc
pop
stc
mov
test
gs
enter
jno
or
and
daa
inc
ss
xor
xor
jne
jmp
test
scas
mov
shlb
dec
push
push
xchg
jo
sahf
fdivs
out
mov
aas
leave
mov
stc
int
in
xchg
aaa
movsb
sbb
into
int
xchg
lods
push
pop
out
adc
jo
jmp
lods
mov
push
imul
sub
and
arpl
in
cmp
cmpb
or
jecxz
mov
lahf
cmp
stos
sahf
test
add
incb
jp
pushf
fldenv
test
shll
les
jl
push
js
xor
dec
stos
jle
gs
leave
std
fwait
movsl
iret
pop
mov
leave
xlat
cmpsb
pop
orl
je
ds
ret
inc
pop
cwtl
or
leave
mov
fimull
std
xchg
mov
fnsave
in
inc
test
or
sarl
pop
fs
jne
call
jmp
out
jg
cltd
inc
jge
xchg
sbbl
mov
adc
xor
cli
outsb
sbb
jecxz
jmp
test
notl
add
out
mov
aad
jmp
insb
lods
into
test
add
adc
sbbb
lea
cmp
mov
or
lock
inc
jae
mov
int3
repz
adc
jbe
loope
in
out
sub
push
and
sahf
scas
fs
jbe
stc
ds
jl
inc
push
ret
xorb
pop
push
cmp
adc
add
push
inc
addr16
jbe,pn
cltd
in
pop
test
les
or
dec
fsubrl
jecxz
das
adc
mov
cmp
dec
scas
test
pop
mov
sbb
or
adcl
popa
in
inc
sub
pop
push
xor
loopne
data16
xor
inc
imul
call
aaa
jecxz
loopne
push
mov
push
mov
or
scas
lret
lret
mov
sub
push
and
cmp
xchg
insl
shlb
mov
dec
aad
or
in
aas
xchg
fsub
add
adc
inc
pop
out
js
insb
jae
jbe
aad
jb
inc
jg
xor
movsb
cmp
jbe
shl
push
fs
stc
push
sbbb
imul
sub
push
mov
mov
movsl
push
push
int
mov
adc
mov
popf
cmp
adc
ss
arpl
lahf
sub
mov
loope
mov
mov
inc
jno
test
daa
cmp
add
ficoml
loop
inc
movsl
pop
out
jge
dec
sbb
adc
xor
arpl
add
push
cmp
ret
cmp
lcall
sbb
cmp
xorl
cld
jnp
in
fucomp
xchg
adc
rcll
or
out
cmp
pop
inc
inc
lahf
jle
bound
dec
inc
dec
out
adc
in
xor
cmp
jo
cmp
sub
fstps
imul
sbb
aad
ds
cmp
js
pop
inc
in
push
sti
testl
add
xlat
xchg
outsl
dec
das
add
daa
xchg
add
pop
add
or
arpl
lret
movsl
dec
pop
insb
mov
mov
sub
mov
mov
mov
adc
jmp
push
xor
in
idivb
xor
daa
xlat
test
cld
inc
das
mov
pop
dec
jmp
bound
fstpl
mov
push
push
sbb
repnz
iret
pop
mov
ret
mov
decl
vsqrtss
jne
repnz
jecxz
sbb
mov
loope
mov
mov
sub
xchg
dec
cmp
les
mov
lock
in
mov
fcmovb
xchg
push
cmp
enter
push
cld
mov
call
scas
lods
lret
cmpb
cmp
cmp
test
xchg
call
or
xor
sbb
add
pop
pop
or
adc
negb
push
mov
ja
pop
out
data16
push
test
sbb
popf
lods
cmp
mov
sbb
add
jno
dec
daa
jle
xorb
inc
aas
daa
adc
pop
cs
cmc
fiadds
lock
lock
in
pop
shlb
maxps
add
sbb
aas
cmp
loopne
call
mov
mov
rclb
jb
sbb
mov
cli
or
mov
pop
dec
pop
out
bound
fistpl
xlat
iret
pusha
dec
mov
stos
xor
add
lea
stos
sub
scas
add
inc
call
insl
out
insl
sub
dec
pop
xor
xchg
push
or
stc
lods
cld
mov
cmp
jo
clc
sbb
cwtl
pop
ja
rol
addr16
push
mov
or
out
sbb
mov
test
movl
loope
xchg
test
stos
cmpsl
adc
ret
in
nop
inc
not
sarl
dec
daa
arpl
push
ss
in
cmp
inc
stos
jecxz
loop
or
lea
std
push
xchg
add
xchg
lahf
dec
scas
jbe
jl
cwtl
fsubs
imul
xchg
jo
cmp
daa
rcll
inc
scas
aam
clc
xchg
bound
dec
dec
fmull
sbb
outsl
pop
inc
enter
les
cld
xchg
mov
jo
or
lods
aam
cmp
insl
pop
call
mov
dec
in
fdivrl
repnz
jnp
pop
inc
jno
mov
lds
xor
sbb
iret
or
jg
imul
cmp
je
test
jns
and
or
add
inc
sub
lahf
sub
cmp
pop
imul
xor
jo
dec
jmp
xor
and
sbb
xlat
js
stc
cmp
adc
sbbl
mov
cmp
mov
ss
stos
sbb
sub
dec
pop
loopne
jge
mov
xor
mov
rolb
test
add
or
fsub
cwtl
jp
std
push
shll
mov
loope
mull
jmp
push
jecxz
mov
cmp
pop
iret
enter
lahf
divb
jo
icebp
cmpsl
jbe
sub
cmc
pop
ret
and
in
cmp
sub
ja
ja
into
jmp
inc
add
or
adc
jno
and
aaa
test
sub
add
sahf
orb
xor
sub
or
idivl
scas
xchg
shr
fwait
pusha
das
aaa
arpl
dec
mov
push
jl
push
push
lds
mov
bound
dec
pop
aaa
aam
js
inc
lcall
ja
lret
or
popa
fisubs
pop
xlat
push
lahf
ljmp
js
fnstenv
push
push
filds
pop
pushf
pop
sbb
imul
xor
xorb
and
aas
mov
dec
dec
and
mov
cli
into
adc
or
cwtl
xor
jl
cwtl
and
add
sub
jo
loop
adcl
xor
xor
sbb
lahf
adc
mov
cmp
insl
iret
cmp
fdiv
xor
js
xchg
cli
out
and
outsl
les
sar
out
or
inc
imul
dec
and
int3
add
and
iret
les
adc
xor
das
jg
mov
adc
pop
aad
cmpsl
dec
jbe
pushf
mov
lods
xor
sahf
mov
testl
in
add
push
lret
lea
add
imul
loope
xchg
adc
movsb
jne
ficompl
add
inc
dec
xchg
jge
jl
insl
or
or
pop
sbb
inc
andb
mov
aam
mov
dec
jmp
fidivrs
sbb
pusha
ret
push
lock
xor
aaa
movsb
pushf
inc
std
push
dec
lock
loope
pop
ss
push
jo
pusha
pop
rorl
xchg
inc
cmp
xchg
out
mov
adc
inc
sub
jb
dec
inc
jmp
mov
inc
std
push
inc
cmpsb
or
add
dec
hlt
popf
jp
dec
inc
ds
aaa
push
andl
mov
out
adc
xrelease
iret
push
fcmove
imul
dec
cmp
or
jns
inc
mov
xchg
fisttpll
dec
hlt
and
sbb
or
daa
add
out
outsl
mov
in
punpckhbw
jmp
aam
stos
or
mov
cmpsl
sub
cmp
add
movsb
jbe
xor
xlat
cld
or
pop
pop
out
jo
out
mov
xor
sub
shll
cld
sbb
inc
jne
mov
and
push
push
test
jmp
or
xchg
mov
mov
imul
cs
jb
loope
in
pop
add
nop
cmpsl
jns
jnp
dec
push
inc
adc
push
or
push
fcmovnb
out
pop
scas
mov
leave
dec
pop
and
shl
mov
xchg
popa
add
pminub
mov
mov
dec
dec
inc
jnp
and
int3
pop
call
stos
out
push
push
add
les
jmp
int3
dec
sbb
jno
push
and
cmpsl
flds
nop
pop
sbb
fbstp
push
aam
shrb
cmp
sbb
or
mov
lcall
and
xchg
out
jle
xchg
push
jns
add
loope
leave
lret
aaa
push
cmp
scas
fldcw
mov
aas
lahf
out
js
testb
dec
pop
aam
inc
jmp
adc
aas
cmp
inc
fsts
lret
lahf
or
mov
pop
mov
stc
pop
mov
test
or
mov
call
fsubr
add
fidivl
mov
popa
shrb
xchg
or
lcall
mov
xor
addr16
xchg
or
aaa
push
jno
inc
xchg
push
jbe
std
xor
jne
and
or
loopne
push
xor
pushl
mov
ror
jecxz
xor
das
inc
add
rcrb
mov
fwait
dec
ret
push
jl
pop
mov
je
pop
mov
mov
adc
mov
sbb
xorb
inc
adc
stos
push
or
or
mov
mov
out
jns
mov
or
icebp
es
push
push
addr16
std
std
addr16
in
cmp
xlat
je
jmp
jo
addb
insl
mov
call
jg
repz
cmpb
ret
lahf
lea
mov
xchg
fs
push
jns
xchg
in
movsb
mov
dec
xor
pusha
popf
das
push
inc
xchg
mov
push
cmp
pop
mov
int3
mov
xor
and
rorl
push
imul
aad
mov
xor
push
roll
jae
std
xor
int3
lods
insl
xchg
sub
xor
mov
xlat
dec
outsb
imul
add
mull
es
ja
push
adc
divl
notl
pop
push
pop
xor
cmp
ljmp
popa
mov
mov
mov
arpl
adc
jno,pn
adc
adc
popa
test
bound
jo
frstor
scas
orb
iret
ja
js
popa
enter
fptan
aam
xor
inc
adc
or
loop
mov
mov
xor
xchg
inc
mov
aas
dec
pop
mov
out
cli
push
mov
loopne
dec
adc
push
rolb
cmpsb
fdivl
mov
movb
inc
inc
xorb
imul
push
xchg
jbe
into
mov
xchg
pusha
sub
movsb
into
jg
cli
ds
push
fs
loopne
das
pop
in
popa
jae
xor
fldcw
mov
adc
cli
shlb
js
push
adc
mov
push
mov
pop
dec
or
pusha
loop
sub
inc
call
je
lret
jnp
inc
pop
nop
test
sub
sbb
icebp
ret
lods
clc
mov
in
xor
bound
addr16
sub
rclb
mov
jae
lret
test
aas
adc
test
jmp
stos
push
sub
mov
push
cmp
sbb
sub
and
and
int3
or
hlt
cmp
popf
popa
fstps
daa
ja
push
iret
call
testb
mov
add
into
in
popf
jp
mov
adc
sbb
jae
push
in
shr
fisubs
sbb
jg
repz
jae
xor
dec
add
cmpsb
mov
jnp
xchg
xchg
mov
jmp
mov
in
int
in
mov
enter
push
mov
pop
pop
pop
mov
xchg
int3
outsb
jecxz
idivl
sti
mov
xor
popa
fisttpl
jmp
fwait
dec
mov
xchg
cmp
scas
xchg
mov
mov
repnz
sub
adc
add
dec
xchg
fwait
dec
dec
cmc
cmp
lret
inc
in
cmpsl
lret
add
and
dec
xor
mov
mov
push
mov
lds
mov
adc
jns
stos
pop
js
popl
add
imul
jmp
lcall
imulb
loopne
inc
sbb
subl
and
xor
cmp
dec
mov
sub
or
mov
xchg
inc
pop
xor
ss
sahf
dec
pop
popf
out
push
lret
pop
or
sub
pop
xor
jecxz
jl
pushf
roll
repnz
cld
aas
inc
push
aad
lock
dec
mov
leave
mov
push
outsb
pop
dec
jno
repnz
stos
pop
jecxz
imul
loope
mov
mov
mov
ds
dec
sbb
loop
out
sbb
cmp
jnp
enter
mov
push
sbb
mov
mov
imul
add
mov
lds
xor
xor
push
hlt
int
ret
ds
imul
adc
mov
sbb
mov
cld
popf
push
adc
aam
pop
vorpd
lret
mov
add
mov
inc
hlt
cld
pop
std
insl
fidivrl
sub
or
fcmovb
outsl
insl
icebp
popf
mov
sbb
mov
lock
or
dec
bound
jae
gs
fadd
fcomip
sub
pop
cmp
aaa
lods
imul
cmp
mov
add
pop
roll
out
adc
mov
or
je
sbb
jae
pop
in
lods
and
inc
pop
mov
xchg
sub
push
add
pop
cmp
and
pop
xor
jmp
cld
mov
cmp
dec
into
sub
rcll
push
dec
loop
xor
pop
push
adc
ljmp
mov
aaa
fisubs
pusha
scas
fpatan
jecxz
in
sti
mov
adc
mov
pop
cmp
mov
add
jmp
jno
push
or
push
js
jns
in
mov
fst
test
call
int3
adc
in
mov
adc
inc
or
sbb
push
insl
fstpl
idivb
cld
int
outsl
pusha
cmp
jg
movsl
popf
pop
lahf
jl
adc
mov
add
daa
ret
cmc
mov
inc
fisttps
into
mov
inc
ljmp
mov
sbb
rclb
test
xchg
mov
mov
xor
stos
lds
pop
test
push
mov
sub
jg
jg
bound
insl
cmp
fsubp
xchg
sub
in
dec
ret
int3
sub
mov
dec
inc
repz
or
xlat
add
lods
xchg
out
add
add
test
mov
pop
cmp
sub
jg
sub
adc
jle
dec
pop
adc
cmp
adc
into
and
xor
scas
icebp
aas
mov
into
pop
mov
aad
add
inc
and
dec
push
inc
imul
xor
cli
ficomps
sub
sahf
xor
test
mov
paddusw
and
test
dec
rolb
cmp
aad
jae
inc
outsb
jnp
pop
pop
mov
insb
adc
sub
bound
or
and
pop
xchg
xchg
fisubrs
orl
stos
add
stos
aam
lcall
std
mulps
loopne
cmpsl
clc
pop
mov
mov
cli
xor
mov
scas
xchg
daa
dec
add
pusha
cmp
mov
pop
iret
cs
sub
pop
stos
xor
xor
adcb
mov
mov
aaa
cli
test
fcom
and
mov
pop
sbb
mov
push
mov
pop
mov
push
cwtl
arpl
std
xor
mov
std
pop
jnp
mov
popf
xor
sarb
fcomps
jne
xlat
push
aas
mov
lcall
int3
icebp
rcll
std
cmp
stc
and
pop
push
les
pop
sub
inc
subl
fmul
outsb
pmulhuw
mov
or
pop
and
jge
mov
enter
repnz
scas
adc
cmpsl
addr16
mov
cmp
mov
xlat
and
mov
sahf
dec
add
call
arpl
out
dec
sub
ret
mov
inc
inc
loope
shlb
cwtl
aas
pop
pop
cld
jns
or
pop
aam
lret
imul
adc
mov
out
bndldx
cmp
mov
push
ds
loope
push
insl
add
mov
xor
repz
cmp
push
loope
fsubs
rol
adc
popa
xchg
lret
dec
inc
out
pusha
or
xor
test
addb
xor
sahf
dec
sbb
nop
pop
movsl
movl
insb
push
cmp
in
sbb
aad
call
lds
and
outsb
xchg
cmp
addb
in
sbb
out
ja
add
jnp
sub
std
pop
aaa
jg
aam
add
int
push
cmpsb
push
xor
xchg
xchg
pushaw
jmp
and
fcmovu
icebp
insb
in
xchg
aas
lcall
sti
lret
push
aas
int
adc
cmc
out
addr16
xor
insl
in
jbe
cmp
in
mov
mov
sbb
movsl
xor
pop
sub
loope
push
stos
aaa
jp
jle
jl
adc
movsl
lock
mov
mov
dec
stos
shrl
int
xchg
sub
hlt
jne
xor
mov
outsb
aas
lods
std
jns
mov
es
mov
jge
mov
push
mov
xchg
out
mov
repz
sbb
out
jl
jp
mov
bsf
xchg
and
into
fcomps
jle
inc
jmp
mov
cmp
adcb
rep
jns,pn
shlb
mov
mov
out
xorps
adc
jecxz
sbb
inc
cmp
xchg
xchg
iret
dec
and
arpl
mov
add
out
xor
sbb
mov
pop
add
mov
icebp
jg
add
icebp
inc
inc
aam
mov
xor
mov
hlt
sub
adc
into
dec
and
push
cld
int3
add
scas
loope
jno
daa
mov
jns
pusha
add
hlt
bswap
dec
mov
popf
clc
xchg
fdivs
mov
adcl
mov
pop
stos
dec
adc
and
in
xchg
movb
sarb
push
adc
mov
in
pop
aam
shll
cmc
fidivl
scas
jbe
pusha
popa
je
aad
inc
sarb
cmp
iret
out
sub
dec
fdivl
xor
adc
mov
sub
push
fdivl
cmp
push
rolb
sbb
decl
les
pop
mov
movsb
dec
and
xchg
and
iret
fidivrs
std
into
bound
xor
cmc
or
cmpsl
sbb
ret
jns
cmp
xor
mov
add
movsb
bound
lcall
lds
arpl
adc
add
das
push
xlat
subl
adc
cwtl
push
xchg
pop
inc
or
sub
lret
jmp
jle
outsb
cmc
inc
out
out
iret
cmpsl
stos
inc
rcl
daa
xor
add
or
sub
fstpt
adc
test
adc
ret
push
lahf
pop
dec
insl
movsb
pusha
dec
mov
or
ljmp
mov
xor
repnz
dec
nop
shll
hlt
cs
mov
inc
dec
das
les
mov
in
movsb
xchg
lods
pop
cmc
lods
test
notl
movsl
xchg
mov
cwtl
or
push
adc
shll
sbbl
je
jb
jmp
in
lods
xor
cmp
inc
add
mov
and
imul
movsl
dec
xchg
push
xor
adc
or
push
mov
lds
mov
jg
and
xchg
push
or
out
pop
or
and
enter
mov
ja
jmp
sbb
clc
test
in
mov
inc
scas
scas
pusha
xlat
out
out
in
jbe
sub
mov
scas
mov
dec
loop
aam
cmc
jno
add
out
mov
shl
repz
les
xchg
ret
dec
iret
cli
push
mov
iret
aaa
mov
cli
lret
lods
imul
movsl
sub
xorb
jle
scas
mov
mov
add
add
movsb
mov
jmp
xchg
ret
in
pop
or
movl
add
lods
pop
mov
stos
pop
sti
push
ja
addr16
rol
sarb
and
das
jno
lahf
test
fsubs
mov
ljmp
mov
mov
scas
inc
xor
mov
mov
sub
pop
aad
sub
mov
popa
pop
lods
mov
mov
outsb
dec
test
pop
loope
dec
mov
out
xchg
inc
jl
jl
cmpsl
stos
ljmp
push
outsb
or
add
add
jge
movsb
lret
jmp
xor
mov
xlat
sub
or
gs
add
sub
lock
incb
mov
inc
sbb
fildll
ss
mov
jp
mov
mov
movsb
mov
add
sub
leave
rcll
xor
stos
jmp
aad
cmp
xchg
add
mov
mov
mull
mov
lahf
adc
hlt
inc
pop
cmp
and
cwtl
sbb
add
cmp
test
outsl
xor
leave
data16
pop
cwtl
test
push
jo
fdivr
dec
jns
adc
test
dec
adc
mov
aaa
mov
ds
cmp
je
gs
adc
pushf
inc
loopne
repnz
mov
xor
lcall
fs
es
xchg
popa
imul
roll
fs
fmull
fldl
and
push
add
lahf
roll
cmp
cmp
cltd
jp
pop
push
jg
jg
aad
lods
pop
lret
mov
out
cmp
sbbl
mov
movsl
gs
loop
mov
mov
lahf
aas
mov
jb
lahf
mov
xor
cwtl
xchg
out
leave
scas
leave
insb
adcb
iret
cmp
jecxz
out
ret
mov
fbstp
je
test
out
nop
fsubs
test
idivl
sub
jl
addb
loope
lock
aam
jns
xor
jmp
int3
icebp
shlb
fnstsw
arpl
and
jmp
mov
cmp
mov
loop
nop
rol
jbe
jp
dec
jmp
mov
jbe
jne
dec
xor
ljmp
pop
add
jnp
loope
xchg
xchg
mov
adc
cmp
lret
inc
xchg
mov
mov
testb
dec
pop
dec
jo
pop
push
cwtl
scas
adc
pop
xchg
and
sub
aas
imul
shl
jb
les
hlt
push
aam
outsb
pushl
push
mov
daa
xchg
ss
push
and
sbb
insb
mov
or
insb
dec
loopne
sub
ret
mov
andl
xor
push
xor
popa
hlt
out
xchg
aas
inc
mov
cli
xor
jp
adc
adc
movsb
mov
mov
dec
mov
sub
fiadds
imull
lret
popa
int
or
aam
cmpsl
and
inc
inc
dec
aad
xor
or
roll
push
rolb
out
sbb
dec
mov
ss
xor
and
and
stos
ret
mov
filds
inc
fnstsw
fidivs
jmp
loope
jo
xchg
mov
mov
xorb
popf
loop
les
les
dec
pextrw
scas
mov
cltd
and
xlat
cmc
cli
lahf
adc
push
xor
sub
cmp
subb
push
lock
les
mov
movsl
rorb
sub
out
mov
ror
out
ja
ja
mov
push
add
fisubrs
imul
mov
push
in
mov
insb
lea
insb
fimuls
lds
out
sbb
inc
push
add
dec
ret
loop
mov
xor
and
pop
aas
mov
pop
inc
pushf
sar
inc
mov
sbb
lret
pushf
xchg
or
and
pusha
stos
or
jg
xor
das
test
push
and
into
sbb
mov
lock
jmp
div
mov
lcall
dec
sub
out
lods
stc
stc
negl
cmpsl
loopne
lds
std
add
sub
xchg
lods
xchg
loope
movups
mov
add
insl
repnz
fwait
mov
repz
rcrb
or
idivw
sahf
mov
lods
xchg
xchg
cmp
in
fdivl
push
push
fimuls
aad
cltd
shll
sbb
dec
in
andb
into
lret
mov
and
sbb
lcall
sti
test
andb
loope
repz
fsubrs
xor
test
jp
movzwl
and
js
enter
test
sbb
mov
dec
cmp
std
nop
push
pop
push
sub
mov
test
sbb
repz
lret
sbb
loopne
or
cmp
ret
push
rep
xor
cmp
push
and
and
mov
insb
and
mov
push
jno
push
leave
xlat
mov
inc
cmpsl
mov
add
ss
cwtl
insl
fisttpll
adc
push
js
push
scas
sti
dec
shl
pop
inc
sub
test
les
pop
roll
xchg
mov
pop
xchg
mov
or
lods
test
mov
lods
mov
in
adc
xor
mov
pop
push
cmp
mov
pop
mov
mov
fdivl
jne
push
jnp
dec
push
cltd
mov
shrb
cmp
adc
xor
mov
pop
iret
pop
xor
out
in
fldl
sub
imul
inc
fdiv
popa
cmc
negl
jns
popf
pop
scas
ja
cmc
mov
lods
int
mov
mov
push
xor
stos
pushf
in
sub
aaa
pop
lret
mov
addr16
adc
ljmp
shrb
xor
subb
rcrl
outsb
iret
and
push
dec
pop
ss
mov
fwait
out
es
push
xchg
test
mov
clc
xor
xchg
adc
imul
xor
add
xchg
or
pop
and
pop
mov
out
sahf
loopne
sub
jl
imul
sub
sarb
stos
mov
cmpsb
orb
cli
aas
je
ss
repz
sbb
movsb
call
lock
mov
popf
mov
lahf
mov
dec
loope
imul
clc
jb
arpl
ret
sub
sub
sbb
mov
cs
lock
ficoms
jg
add
pop
and
stos
fmul
add
aad
adc
pusha
popf
mov
pop
and
int
xchg
nop
adc
in
inc
movsl
lcall
jo
adc
ja
inc
sub
hlt
inc
jno
add
int
mov
push
push
std
mov
xor
pop
dec
stos
xchg
clc
dec
call
jne
or
arpl
dec
stos
adc
lea
lcall
mov
les
pop
xchg
rclb
pop
pop
cwtl
or
scas
jg
ret
rolb
cmpsl
pusha
adc
and
repnz
scas
push
sbb
ficoml
lea
stos
bound
in
and
push
add
xchg
repz
jl
cs
mov
mov
xor
aad
push
imul
adc
inc
jle
sub
imul
lcall
inc
lcall
loope
cld
xchg
or
jb
pop
xchg
dec
faddl
bound
mov
jmp
pop
out
daa
loopne
jle
loopne
data16
in
lahf
inc
lea
fidivrs
sbb
cmpsb
push
les
sti
and
xchg
cli
jmp
ds
xchg
sub
les
mov
mov
mov
jecxz
mov
out
dec
notb
inc
add
addr16
cmp
mov
in
push
bound
pop
rsm
dec
or
jno
jb
mov
fdiv
mov
or
add
aam
jo
push
dec
aam
or
push
outsl
bound
call
cmp
mov
cvtps2pi
dec
insl
adc
int
ret
lods
jle
xchg
inc
lret
dec
cmp
dec
mov
js
div
dec
mov
mov
pop
mov
dec
jle
mov
inc
stos
xchg
shr
test
push
inc
xor
mov
xor
mov
or
push
push
je
scas
mov
out
mov
iret
lahf
insl
arpl
xchg
cs
xchg
insb
sub
and
iret
dec
jno
or
push
lods
mov
imul
popf
cmp
ja
pop
xchg
xor
jge
mov
mov
addr16
jns
cmpsb
ss
sbb
int3
cwtl
mov
sbb
dec
xchg
mov
xchg
inc
faddl
fmul
incb
lahf
mov
lcall
inc
cmpsb
shr
sub
dec
sar
adc
push
idivb
adc
lahf
sti
faddl
inc
cltd
pop
repnz
and
jmp
daa
cmp
cmpsb
fadd
ja
iret
sbb
enter
fistps
mov
scas
xor
xor
jg
fimull
xor
sbb
jg
or
cmp
push
push
cmp
loopne
mov
test
icebp
and
sarb
fisubs
push
das
lods
cmp
mov
cmp
ficomps
or
out
fisubs
cltd
or
lahf
xchg
xor
ja
mov
ljmp
pusha
pop
push
js
subb
or
sub
nop
jge
push
les
xor
rclb
clc
push
push
pop
inc
xor
ficompl
or
mov
adc
inc
inc
int
cmpsl
cmpsb
sub
jg
add
insb
lret
lods
cmp
mov
shlb
movsb
push
push
pushf
sti
jb,pn
aaa
out
aas
lret
and
cmp
sub
xchg
popa
pop
cmc
dec
xor
jmp
subb
xchg
fldcw
sbb
dec
addr16
sbb
push
lds
adc
pop
inc
pusha
aas
sub
adc
lock
movsl
int3
enter
dec
dec
mov
dec
xchg
data16
out
mov
lods
sbb
jnp
js
sar
cmpsb
or
cmc
je
stos
cmc
mov
jnp
pushf
pop
aad
mov
imul
push
addl
scas
aad
jl
xor
nop
jecxz
dec
fs
bound
jg
dec
fdiv
add
stos
sub
pop
sbb
cmp
insb
sub
xchg
adc
pop
arpl
lret
shrl
jae
adc
jg
jle
mov
stos
repnz
mov
push
lahf
clc
mov
jge
loope
mov
daa
call
push
inc
in
mov
outsb
add
jnp
and
add
push
psadbw
dec
out
mov
mov
add
int
push
xor
inc
flds
inc
mov
adc
jns
call
sub
lret
push
std
sbb
inc
pop
cmpsb
add
cmp
xchg
jmp
cs
pop
xchg
imul
fidivs
jp
pop
sar
and
pusha
enter
popa
sarl
iret
insb
dec
jns
cmpsl
dec
inc
stos
inc
cwtl
jb
shlb
stos
xlat
inc
and
mov
ljmp
jecxz
adc
into
dec
pop
cli
xor
push
lods
or
and
cmp
inc
mov
imul
push
bound
hlt
stos
subb
cmp
xchg
aam
and
in
adc
mov
pop
in
push
dec
sbb
bound
jge
nop
stos
ret
xchg
or
dec
pop
dec
push
sbb
dec
cmp
or
scas
push
adc
fnsave
add
in
push
paddsb
in
cli
sahf
lock
arpl
repz
pop
jnp
sets
adcb
push
shrb
sub
pop
aas
jae
call
out
dec
and
incb
fsubl
jo
mov
inc
and
mov
into
mulb
or
loopne
pop
cmp
or
push
mov
test
jecxz
lock
insb
push
shlb
stos
jno
pop
loope
mov
xchg
push
out
mov
or
out
xchg
in
jg
and
cltd
dec
adc
call
mov
add
xchg
add
inc
adc
pop
mov
pop
fidivrs
mov
add
xlat
pop
lock
and
adc
scas
push
inc
popa
shlb
lret
and
cmpsl
ss
in
or
int3
and
es
mov
andl
mov
je
xchg
daa
popa
mov
ljmp
pushf
xchg
sub
mov
iret
mov
insl
fcmovbe
xchg
mov
hlt
xchg
bound
xchg
outsb
pop
dec
dec
out
xchg
mov
xchg
lods
pushf
popa
mov
fwait
cli
pop
pop
fmulp
pop
adc
adc
out
incl
inc
leave
mov
xlat
call
sbb
pusha
mov
push
xchg
dec
add
jne
dec
add
sbb
pop
mov
xchg
leave
sbb
movsb
ret
out
in
mov
sub
out
push
xchg
adc
cmp
lods
shll
mov
ret
ficoml
sbb
xlat
xor
movsb
xchg
addl
pushf
mov
sahf
cld
cmc
or
popf
in
es
hlt
cmp
subb
adc
mov
test
push
pop
mov
jns
icebp
scas
cmovns
or
lret
dec
push
stos
fstpt
movsl
lock
cld
cs
adc
aaa
add
shll
jb
add
or
mov
jae
sbb
or
or
xor
cmpsl
shrb
cmp
and
bound
mov
pusha
mov
pusha
cs
daa
xchg
xor
jb
xchg
sbb
lds
call
mov
rcrb
jae
xor
mov
dec
push
stos
test
out
xorb
mov
ds
pusha
clc
push
loopne
pop
ja
stos
push
xor
repz
push
pop
cbtw
ds
fwait
cmpsb
xchg
aad
mov
xlat
inc
adc
jle
ljmp
jae
xchg
sti
jmp
push
mov
pushf
add
pop
jp
inc
shlb
pop
outsb
fists
and
xchg
push
lods
xchg
ret
sbb
out
fistpll
push
push
or
dec
ja
cld
mov
cltd
jle
ds
jmp
insb
addb
aad
mov
add
dec
dec
sub
jecxz
lret
inc
xor
test
inc
xor
sub
dec
aaa
lods
gs
jns
jl
adc
sub
jnp
add
ret
fisubs
xor
mov
cld
movsb
mov
jg
push
shl
cmc
push
xchg
jecxz
xchg
sub
add
ljmp
cmp
popf
xor
repz
in
stc
jno
jl
push
out
lock
pop
inc
add
xchg
mov
out
movsb
and
push
gs
imul
xor
or
mov
aas
xlat
jo
mov
mov
rcrb
outsl
inc
std
iret
inc
sbb
stos
inc
dec
dec
and
jno
mov
fdiv
xchg
xchg
hlt
inc
outsb
das
push
scas
in
scas
fistl
movsb
or
push
mov
ds
outsl
stos
mov
inc
jnp
je
inc
sub
bound
mov
iret
enter
or
mov
unpcklps
stos
fstps
fcmovu
in
pop
xlat
or
fimull
sbbl
mov
pop
adc
jp
loop
xchg
call
jg
push
jb
lret
pop
adc
jl
mov
popf
cltd
push
adcb
or
das
push
xor
in
popa
xor
jno
pop
out
cmp
cmc
or
mov
mov
flds
sub
push
call
fmull
fstpl
in
gs
push
je
lret
addl
popa
push
adc
pushf
movb
add
sbb
repnz
popa
xchg
mov
iret
insb
push
das
int3
xlat
cmp
pop
xchg
push
inc
or
lret
aam
lcall
adc
ja
mov
pushf
aad
cmpsb
mov
popf
ret
pushf
xor
adc
rclb
dec
mov
mov
xor
imul
push
mov
jg
push
ja
bound
jle
loop
hlt
inc
add
rcrl
xchg
pop
enter
ds
mov
mov
jg
scas
mov
repz
stos
cmpsb
stos
call
fistpll
mov
xor
jg
fstps
and
aas
testb
incb
cld
cmovno
or
sbb
cli
data16
push
lock
mov
jmp
jg
xchg
cmp
cmp
jno
mov
jno
cli
xor
push
inc
mov
xor
mov
pop
add
cmp
xor
pusha
cmp
and
ror
scas
pop
cmpl
sub
mov
mov
repz
lahf
cmp
test
adc
dec
sahf
pinsrw
mov
add
sub
addr16
cmp
inc
movsl
lods
or
sub
and
jns
mov
stos
int3
add
xor
dec
pusha
jo
jg
mov
xchg
mov
loope
xchg
test
dec
jmp
fimull
test
pop
mov
adc
jbe
mov
aas
mov
sub
mov
push
sbb
inc
jp
xlat
jae
mov
inc
jae
mov
lcall
mov
aad
or
push
sub
jns
popf
stos
jl
mov
cld
pop
xor
add
cmpsb
sub
mov
inc
jge
lock
and
xchg
pop
sbb
movsl
and
xchg
int
and
lcall
fmull
mov
stos
mov
repz
out
push
pop
out
mov
mov
pushf
adc
mov
cmp
std
xchg
mov
out
jb
sti
lods
lahf
jae
or
push
inc
sbb
add
jecxz
call
inc
adc
sub
int
js
mov
inc
xchg
ret
jg
enter
xor
stos
pop
icebp
sar
loope
addr16
sbb
shlb
add
mov
sbb
mov
icebp
fwait
mov
sti
int
std
sbb
js
arpl
aas
ds
cs
cmp
xlat
mov
dec
inc
cli
push
xchg
imul
adc
fwait
arpl
mov
lock
cs
and
dec
sbb
js
test
imul
inc
pushf
rcl
or
dec
movsl
cmpsl
mov
add
jmp
or
sub
lcall
sub
into
push
or
aaa
mov
inc
shrl
arpl
movb
pushf
jo
jecxz
clc
mov
add
ds
shl
and
dec
dec
sbb
clc
push
jae
fstpl
add
ficoms
je
mov
popf
iret
aaa
sbb
les
cmp
adc
pusha
push
xchg
or
icebp
cwtl
out
test
in
cmp
and
aad
cmpsb
fidivs
addr16
out
cmp
and
imul
cwtl
mov
outsl
push
mov
dec
mov
sbb
dec
cmp
or
push
sbb
inc
mov
arpl
jl
stos
mov
xlat
lock
pop
hlt
int
push
mov
or
add
push
push
push
mov
testl
std
clc
pop
enter
jp
rcll
mov
dec
test
test
fisubrs
fchs
pusha
jo
ret
jmp
dec
mov
mov
daa
and
ljmp
or
jl
sub
or
stos
push
or
jno
pop
cmc
mov
inc
mov
fdivr
scas
test
fwait
rcl
ds
mov
arpl
mov
das
mov
out
or
shll
push
jnp
sub
imul
adc
in
aaa
cmp
inc
enter
sar
outsl
insb
jno
hlt
add
inc
shll
push
adc
sub
scas
inc
mov
push
outsl
fs
add
mov
les
sub
pop
stos
cli
mov
ss
pop
fidivl
insb
ds
iret
inc
xor
xchg
or
and
push
stos
scas
loop
mov
mov
outsl
xchg
or
cld
scas
mov
jae
xor
mov
mov
or
loope
jmp
push
call
adc
inc
cli
mov
sti
shll
es
lods
fidivl
sti
test
push
xchg
sub
lcall
scas
int3
in
mov
inc
sub
adc
xchg
mov
mov
add
fidivrs
add
ljmp
sub
je
loopne
daa
mov
or
mov
orb
daa
mov
jmp
aaa
mov
mov
jno
sbb
push
xchg
rcl
imul
movsl
sbb
jmp
ds
mov
xchg
lods
stos
xor
pop
add
xor
leave
mov
hlt
jnp
push
stc
adc
jp
in
add
pusha
mov
ret
fadd
jmp
xor
or
mov
and
jge
xchg
imull
jg
mov
out
ds
sbb
cmpsb
pop
or
or
or
lea
cmc
ss
push
sbb
shlb
or
pushf
jne
inc
xchg
pop
fdivs
cmp
mov
push
xchg
leave
mov
mov
insb
xchg
jb
inc
cmp
adc
jne
and
shll
inc
jne
xchg
pop
int
inc
sub
pop
or
xor
cld
pop
sbb
ret
jae
push
mov
movsb
daa
movsl
lret
popa
cmp
jnp
les
test
jmp
cmpsb
mov
xchg
cmp
loopne
push
mov
call
pop
data16
or
bound
das
inc
shll
mov
mov
mov
mov
or
cmp
aaa
push
icebp
mov
push
hlt
aas
add
push
inc
div
xchg
pop
mov
shrb
sub
addr16
inc
push
lds
daa
xchg
test
mov
pop
test
xchg
xor
das
dec
call
inc
jl
rcrl
mov
dec
packssdw
adc
and
pushf
cs
push
jns
or
jne
in
imul
push
lret
dec
sub
and
mov
in
mov
dec
insb
push
push
pop
fwait
lds
js
aad
sub
lret
mov
adc
push
in
sub
add
adc
insl
test
clc
in
enter
nop
inc
sub
jge
adcl
cmp
call
mov
adc
ret
int
and
xchg
mov
push
sahf
fists
loop
push
pop
aad
fwait
mov
mov
test
enter
imul
pop
sarb
dec
cmp
cmpsb
rorb
out
sbb
push
mov
lret
xchg
fcmovnu
xor
push
hlt
popa
push
decl
scas
divb
xchg
adc
test
sbb
fildl
lahf
add
fcmovbe
jg
xor
add
int3
xor
dec
arpl
rcrl
mov
out
mov
icebp
cmp
cwtl
dec
inc
in
push
loopne
xchg
inc
sub
aam
cld
addb
xor
roll
daa
mov
pop
test
mov
inc
jecxz
sbb
fcomps
xchg
cmp
jno
sti
jae
mov
popf
call
lret
xchg
inc
int
rclb
xor
pushf
xorl
mov
cli
shll
adc
pop
fildl
hlt
or
push
in
sbbl
xchg
cmpsl
dec
inc
xchg
inc
jb
xlat
jecxz
adc
pusha
adc
scas
clc
sub
mov
mov
adc
push
je
fstpl
or
mov
adc
push
inc
push
daa
pushf
inc
outsb
addr16
js
push
iret
into
sarl
rcrl
xor
pop
sar
gs
mov
cmc
dec
dec
in
xor
sti
sbb
cmpsb
dec
dec
faddl
xchg
les
mov
xchg
push
dec
lcall
jge
xchg
loopne
cmp
inc
and
iret
in
mov
push
sbb
out
sarl
mov
fbld
fidivs
outsl
xlat
repz
dec
push
dec
je
or
cltd
test
cmpsb
out
cmp
sbb
xchg
es
push
inc
pop
inc
js
pop
push
not
int
fcmovnb
ljmp
pop
inc
fs
enter
mov
push
dec
xchg
cmpl
lds
repnz
sbb
dec
popf
sbbl
in
insl
mov
mov
in
adc
cwtl
out
mov
mov
xor
push
das
add
imul
jecxz
dec
inc
adc
cmp
dec
dec
push
cmc
daa
out
fsubrl
clc
mov
stos
mov
popf
jmp
imul
cmpsl
dec
imul
pop
sahf
mov
pop
jmp
movsb
mov
adc
int
bswap
adc
add
xchg
push
push
fldt
outsl
fwait
pop
fdivr
int3
sbb
pop
pop
mov
fucomip
lcall
movsl
adc
pop
fs
sub
inc
lahf
push
jbe
movsb
cmp
mov
insb
jns
mov
or
orb
fdivrl
jne
stc
lock
lods
shl
int
cmpsl
inc
xchg
push
fcmovnb
push
pop
lds
inc
jae
cmpsb
into
jle
into
roll
in
jno
test
subb
dec
adc
dec
xchg
movsl
mov
scas
loop
push
fs
jbe
push
mov
shlb
jnp
movsl
jle
cltd
sub
aam
loopne
cmp
insb
add
outsb
in
repnz
xchg
out
push
cmp
pop
mov
rorb
lods
clc
cmp
inc
shll
clts
adc
mov
add
cwtl
into
insl
lahf
sbb
xchg
mov
jne
sub
popf
xchg
pop
das
scas
and
and
idiv
mov
jb
test
aas
xor
jne
xchg
adc
in
das
bnd
inc
fcomps
test
jmp
mov
dec
mov
lcall
mov
jae
test
stc
lods
pop
fidivs
fdivs
and
movsl
push
or
xor
push
mov
fldcw
leave
cmp
popf
mov
jno
mov
daa
push
ss
in
mov
pop
mov
inc
scas
decl
jmp
imul
jae
data16
jl
inc
daa
aas
outsb
out
xchg
fs
inc
push
in
js
fwait
pop
jnp
inc
cmp
lret
adc
je,pt
lahf
adc
out
jl,pn
cmp
es
jmp
in
ret
ret
aam
outsl
xchg
arpl
mov
mov
mov
pusha
add
int3
repnz
stos
andl
js
mov
imul
pop
mov
dec
dec
loopne
fidivrs
jae
adc
jns
inc
inc
or
cmp
enter
jecxz
xchg
push
mov
push
mov
sar
mov
inc
push
pop
push
pop
mov
sub
ss
lahf
inc
sti
dec
xor
jo
call
loope
mov
mov
or
dec
fsubrs
rcrl
sub
inc
in
pushf
mov
fsubr
sub
cmp
inc
fdivrl
pop
mov
lahf
cmp
jns
push
jo
retw
sbb
mov
push
es
shl
and
push
scas
scas
push
sbb
sub
push
sbb
or
or
add
lds
dec
sbbl
inc
push
xchg
pop
mov
popf
in
lret
fstl
pop
decb
cli
cmpsl
leave
cwtl
push
lret
adc
sbb
subl
jnp
pop
ret
data16
adc
out
repnz
mov
pop
std
sbb
mov
lock
pop
xchg
out
cmpl
and
cmpsl
or
das
xchg
mov
shrl
enter
jg
cld
cmp
loope
and
pop
lret
cmp
add
je
push
repnz
das
jnp
movsb
insl
nop
pop
pop
loopne
aad
xchg
stos
pop
rcr
xor
cmp
data16
pop
push
push
jmp
nop
lret
mov
push
stc
out
mov
xor
rcrb
mov
jle
sbb
movsb
mov
jg
add
push
popf
dec
add
ljmp
enter
pushf
pop
pop
pop
add
pop
push
imul
xor
jo
rorb
cmove
xchg
adc
xor
mov
pop
test
shl
mov
daa
icebp
repz
and
mov
loope
sbb
cli
pop
inc
mov
cmc
push
in
into
pushf
push
adc
test
inc
outsl
pop
push
cmp
imul
sbb
rcl
and
fdivrl
jae
stc
sbb
jb
test
test
out
ja
push
inc
loop
pop
jno
mov
lret
and
cwtl
insl
std
and
vmread
js
adc
or
daa
clc
movsl
in
add
rcll
mov
rorb
sub
int3
add
mov
jl
das
stc
movsb
popf
addb
rclb
mov
adc
sbb
mov
sbb
cmp
test
jge
jp
out
std
pop
lea
sahf
sub
mov
jbe
dec
in
movsb
cmpl
and
mov
inc
sub
dec
insl
jge
sub
int3
fisubl
push
jne
dec
adc
mov
fwait
push
fdivs
in
mov
clc
dec
or
int3
repnz
and
sbb
ret
sbb
mov
mov
mov
and
push
in
aad
xchg
jmp
pop
pusha
in
into
scas
les
lock
testb
sbb
call
insb
xchg
in
sbb
mov
bound
lret
movsb
in
jne
orb
xor
fs
dec
adc
xchg
cltd
int
or
xor
sub
and
lret
jo
adc
bound
or
jns
sbb
dec
pop
dec
scas
ret
rorb
ret
sar
sbb
mov
bsf
lds
xor
into
adc
iret
ret
test
sub
fdivr
lods
xorl
cmpsb
imul
outsb
sbb
dec
jae
add
jg
jnp
push
hlt
mov
push
push
rcrb
lret
dec
adc
inc
mov
pop
ds
test
out
pushf
je
push
mov
mov
fdiv
inc
jne
inc
sub
xchg
xor
mov
movsl
ss
push
out
fs
call
jmp
int
inc
xor
push
cmc
xchg
dec
rcr
lods
mov
mov
fwait
sahf
lahf
je
aas
aad
neg
test
loope
shll
mov
imul
dec
sahf
mov
cmpsl
fisubrs
push
or
out
cmpsl
clc
loope
mov
add
inc
mov
mov
sub
jnp
inc
sbb
daa
add
pop
mov
rcrb
ds
cld
das
xchg
hlt
mov
leave
sbb
mov
into
test
jmp
inc
ret
inc
push
xchg
add
mov
push
ret
mov
aad
lret
enter
jo
mov
insb
cwtl
loop,pn
xchg
push
jb
push
xchg
inc
inc
repnz
adc
dec
pop
pop
and
fdivl
icebp
cmp
push
mov
add
mov
mov
lcall
push
add
mov
jge
push
pop
gs
push
cwtl
enter
xchg
adc
arpl
lock
pop
leave
fcmovne
mov
test
outsl
fwait
jge
inc
gs
pop
cmpsb
fdivr
and
out
mov
pop
dec
mov
pop
xchg
and
mov
push
adc
xlat
push
mov
xor
jo
fnstsw
rcl
pop
cmpb
addb
mov
cmp
mov
pop
or
inc
push
sbb
or
cmpsb
jecxz
mov
nop
popa
dec
cmc
pop
jae
in
aas
sub
push
inc
out
mov
mov
jae
mov
dec
out
scas
inc
and
nop
jb
fildll
jo
xchg
daa
mov
inc
js
enter
push
cmp
pusha
addr16
ja
dec
xchg
jl
mov
push
jmp
push
mov
mov
loope
mov
adc
inc
fdivl
adc
xor
push
cli
popf
outsb
sub
idivb
inc
xor
pop
hlt
pop
xchg
mov
cli
stos
jecxz
adc
repnz
cwtl
movsb
dec
and
jns
inc
stos
loopne
sub
pop
enter
lcall
out
popf
or
int
jns
push
cmp
xlat
jbe
fbld
mov
lret
mov
cmc
dec
mov
jecxz
mov
mov
push
xchg
decl
add
mov
fnstsw
inc
mov
cmp
stc
or
mov
inc
and
dec
fs
aas
stos
add
mov
data16
sub
data16
xor
lcall
outsb
adc
mov
mov
popf
testb
sbb
xchg
mov
add
repnz
cmp
xbegin
aad
lds
add
aaa
andl
cmpsb
addr16
pop
and
rclb
pushf
loope
adc
bound
jns
pop
push
or
fildll
sub
cwtl
lcall
fdivs
dec
add
jp
adc
aaa
lret
xchg
iret
out
jae
stos
stos
stos
jno,pt
ret
scas
dec
scas
cmp
xchg
adc
mov
pushf
mov
xor
sub
push
sub
icebp
push
xor
and
fs
dec
xor
fstl
inc
mov
js
or
pop
ficomps
push
xor
xor
sub
shll
sub
mov
inc
outsl
dec
or
and
jmp
mov
stos
int3
and
push
pusha
mov
fisttps
pop
pop
out
loop
cli
or
stos
out
idivl
sub
lds
add
push
in
pop
in
xchg
xlat
leave
test
daa
std
push
mov
sub
call
repz
xchg
ja
jp
fwait
or
xlat
je
std
repnz
mov
je
shll
and
mov
push
and
mov
loopne
mov
mov
mov
sub
scas
dec
je
mov
arpl
pop
mov
cmp
ja
xchg
jb
std
jno
sub
push
push
nop
mov
mov
in
aas
jo
push
loope
lcall
xor
jno
ljmp
mov
outsl
push
popa
pop
lret
movb
mov
push
lcall
mov
es
ret
inc
mov
sub
mov
lcall
sub
sub
out
and
stos
cmp
add
in
mov
movsl
and
jge
jp
xchg
int3
stc
mov
shrl
cld
xchg
cltd
sbb
push
and
sarl
cld
xchg
arpl
test
xor
data16
xlat
es
hlt
sbb
mov
test
stos
loop,pn
add
sbb
repnz
pop
add
mov
xor
pop
mov
fsubr
add
cmpsb
cmpsl
imul
loope
sbb
lock
sahf
sarl
aad
divl
std
movsb
pop
or
loop
fstpt
inc
push
invd
jbe
mov
loopne
mov
push
lcall
push
addr16
cld
sbb
xor
rol
pop
stos
mull
mov
sbb
sbb
outsl
sbb
test
jbe
repnz
inc
cmpsb
add
sub
push
mov
inc
push
sub
iret
outsb
mov
cmp
sub
test
adc
adc
add
mov
mov
daa
mov
loope
jns
in
mov
xlat
mov
ljmp
icebp
jecxz
push
or
scas
push
int
scas
mov
and
or
and
mov
cmpsl
test
mov
in
popf
jb
mov
sub
mov
rorl
xchg
int
cmc
or
loopne
pop
cmpsl
in
int
pop
push
inc
sub
and
incl
sub
sbb
xor
or
mov
out
cmp
jecxz
xchg
shll
mov
jp
and
pusha
daa
push
fimull
repnz
jno
in
push
stc
popf
mov
pop
add
cmpsl
cltd
or
push
adc
cmp
lds
xchg
pop
mov
fdivrs
add
sbb
fiadds
ljmp
lret
cli
mov
jmp
jmp
xchg
fsubl
and
mov
in
jnp
sub
and
xor
lret
aas
mov
lds
movsb
mov
cmpsb
mov
mov
out
rclb
add
in
movsl
push
sbb
push
jno
jle
push
jb
add
jnp
sbb
mov
orb
fistpl
sbb
aad
pop
stc
and
mov
mov
mov
roll
je
mov
add
int3
push
rol
in
mov
in
or
sbb
jno
dec
add
stos
aas
mov
and
test
sti
fdiv
mov
mov
pop
icebp
andl
mov
pop
and
stc
mov
xchg
mov
mov
ret
cltd
cwtl
ljmp
sbb
nop
out
pop
andl
sbb
sahf
jbe
xor
push
and
sub
insl
in
in
aas
lahf
push
fwait
jb
inc
pop
push
sahf
idivb
hlt
cmpsb
lea
lcall
rcll
icebp
shlb
add
jne
leave
mov
jle
sub
in
sbb
loope
push
jnp
push
xor
or
adc
inc
mov
les
jae
or
sub
insl
pop
pushl
push
call
test
and
mov
notb
mov
xchg
pusha
mov
mov
xor
push
dec
pusha
pushl
cmpsl
and
decb
in
add
pop
aas
xchg
into
scas
mov
jle
jo
nop
xor
sti
push
sub
jmp
mov
test
popa
rclb
cmp
js
mov
aad
iret
es
into
hlt
ret
xchg
jecxz
push
in
repnz
sbb
pop
xor
rol
enter
mov
xchg
pop
lds
push
lock
mov
xor
and
push
pop
fdivs
testl
fcoms
lcall
movsl
nop
andl
xchg
sub
in
imul
rcrl
movsl
mov
xor
push
and
pop
dec
cmp
xor
lret
int3
lret
outsl
inc
or
frstor
pop
lea
imul
in
jecxz
pop
pop
into
pop
mov
cmp
adc
mov
stos
ror
pop
mov
add
jg
ret
je
jl
inc
sbb
dec
add
push
adc
outsl
pop
imul
jne
es
or
jno
cmp
mov
xor
rclb
cwtl
pop
test
test
push
dec
dec
cmpsb
push
lcall
cmp
xor
pop
pop
add
push
pop
sahf
push
mov
add
adc
jbe
or
lods
decb
std
les
imul
inc
orb
adc
imul
fcoms
sbb
lods
add
inc
imul
mov
sub
xchg
movsb
fidivrl
adc
jne
imulb
aaa
jae
aam
daa
loope
fnstcw
ret
scas
mov
dec
or
aaa
pop
lret
jmp
lods
cmpsb
mov
mov
fstpl
push
push
xchg
in
sbb
jg
in
imul
mov
test
xchg
jns
clc
ss
pop
push
mov
notl
test
pop
and
mov
dec
add
loop
movsl
lds
scas
mov
test
sub
mov
outsb
pop
push
jb
jbe
add
fstpt
outsl
inc
xor
mov
loop
and
jne
hlt
sbb
push
jge
mov
fstpt
in
int
pop
dec
mov
ds
and
btr
mov
mov
rcrl
adc
adc
arpl
pop
push
adc
shlb
movsb
cld
shrl
lret
call
mov
imul
push
xchg
iret
mov
and
out
cmp
sbb
loopne
movl
inc
pop
loop
cmp
pop
jae
gs
cmp
dec
repnz
mov
xor
mov
loope
push
jl
cmp
push
ds
or
rorb
loope
mov
popf
cmp
dec
adc
sbb
xchg
ficomps
mov
lods
test
jl
lock
lret
dec
sbb
dec
ljmp
jb
das
test
lcall
mov
int
aad
push
ficoml
rorl
or
fdivrs
add
push
mov
add
ljmp
mov
addb
jmp
xchg
jae
aam
sbb
adcb
sub
mov
popf
jl
out
mov
jbe
dec
ror
push
pop
push
inc
fwait
jmp
popf
cmpsb
inc
push
loopne
adc
xchg
cmp
mov
jae
adc
arpl
je
dec
push
lret
jne
add
sub
adc
dec
and
add
adc
es
loopne
cmpl
sub
adc
imul
repz
push
or
movsl
scas
push
inc
ja
xor
icebp
pop
mov
xor
dec
pop
xchg
sub
mov
pop
sub
insl
and
mov
mov
cmp
insb
adc
ljmp
pop
insb
insb
adc
mov
in
add
popl
repnz
scas
mov
jg
xchg
arpl
fisubrs
cmp
out
push
or
fisttpll
mov
xchg
fs
xor
push
sub
push
add
xor
mov
imul
add
pushf
push
xchg
mov
jae
int
push
ja
sbb
loop
or
mov
push
sub
out
pop
icebp
lock
test
dec
jg
push
mov
dec
xor
sub
inc
lea
mov
inc
dec
leave
sbb
in
adc
mov
lret
pxor
cmp
pop
xchg
insb
pop
rcl
cltd
jno
xchg
or
sub
fsubr
ret
fisttpll
sbb
enter
out
ret
out
inc
pop
jns
loope
add
outsl
insl
loope
xchg
daa
stos
insb
mov
cmp
insl
fldcw
popa
enter
aas
mov
or
pop
outsb
push
lret
sub
lcall
or
pop
xchg
and
jg
lods
leave
jmp
pop
loope
fcoms
sbb
idivb
cmp
fdivs
insl
push
in
dec
xchg
cld
xor
mov
imul
jnp
cmp
scas
sbb
mov
lock
int3
andb
loope
and
mov
stos
sbb
out
jmp
stos
andl
imul
subl
daa
adc
in
mov
sub
mov
add
pop
fsubs
pop
xchg
lret
lahf
jecxz
fucomi
out
xorb
mov
inc
iret
push
incl
push
mov
push
mov
cmp
testl
push
test
mov
mov
test
add
push
test
cmp
pop
mov
lock
cli
cmp
in
xchg
std
lods
xchg
push
dec
and
mov
cmp
stos
hlt
pop
dec
lret
fisubl
jns
pop
fs
outsl
adc
sub
inc
pop
jno
in
into
leave
popf
xlat
pop
inc
lret
push
clc
pop
out
inc
enter
cmp
xlat
js
fisubs
pcmpgtw
dec
add
push
arpl
fs
mov
pop
mov
repz
dec
ret
xlat
enter
mov
inc
xor
adc
std
and
das
mov
inc
lcall
pop
es
add
sarb
jns
cwtl
xor
aam
jle
lret
xor
fmuls
fmull
daa
mov
mov
insl
add
push
jmp
cmp
sub
inc
push
mov
addb
or
movsb
fcomp
ljmp
int
int
and
jae
je
ss
push
bound
push
mulb
or
aam
mov
stc
push
aad
loopne
mov
popf
lcall
cmpsb
jne
jbe
cmp
xor
fcmovnbe
or
sahf
orb
or
xchg
pop
and
jg
bound
aaa
scas
adc
jmp
lods
add
mov
es
or
xor
loop
addr16
pop
cmp
or
std
dec
push
sub
hlt
pop
push
adc
mov
cmpsl
ret
daa
outsb
mov
stos
or
xor
in
sbb
outsb
pop
mov
sbb
imul
movl
out
pop
mov
adc
pop
dec
inc
cld
test
mov
dec
xchg
movsl
add
dec
arpl
xchg
xchg
xor
sbb
in
andl
mov
test
push
and
mov
inc
or
outsb
aas
ss
cli
jp
add
mov
data16
push
push
data16
xlat
fdivl
mov
aam
mov
push
aad
pusha
insb
faddp
movsl
lock
adc
int
std
enter
cmpsl
mov
mov
or
out
lods
test
and
mov
in
ret
testl
int
or
mov
dec
repz
ss
adcb
xchg
shll
test
push
and
outsb
sar
mov
pop
add
iret
cmp
out
push
mov
add
hlt
and
cmpsl
test
pushf
roll
push
sbbl
scas
and
and
push
or
push
push
dec
out
dec
sbb
or
mov
xchg
inc
jge
mov
in
add
inc
push
fstp
mov
cmp
and
jbe
adc
loopne
mov
sub
cmp
roll
cmc
fstl
std
in
leave
adc
fsubrs
test
nop
imul
adc
add
outsb
scas
xchg
cltd
mov
repz
es
in
mov
shll
mov
sub
mov
test
ja
xor
stc
cmp
xchg
xchg
mov
cmp
mov
add
and
or
cmp
mov
divb
mov
leave
decl
cmp
mov
jp
adc
push
adc
inc
add
testb
bound
or
sbb
insl
sub
stos
mov
repnz
enter
xchg
fadds
xor
stc
push
mov
fisttpl
adc
cltd
jmp
nop
stc
pop
dec
cltd
daa
std
je
add
repz
cmp
into
jp
adc
out
rcrl
aas
and
movsb
push
jmp
out
xchg
adc
fistl
cwtl
dec
pop
mov
jno
xchg
repz
mov
insb
lahf
fwait
cmc
lcall
jp
xchg
and
shlb
or
mov
out
mov
insl
jb
xor
and
js
shrb
xor
add
js
lods
fisubl
inc
rcl
adc
cs
insb
and
into
dec
mov
lcall
icebp
jg
orl
stos
rolb
bound
jae
cmp
push
in
pop
out
xchg
ret
jbe
push
mov
sbb
std
test
sti
mov
out
pop
mov
push
rcrb
pushl
mov
inc
jecxz
adc
mul
ret
jp
sbb
push
or
inc
leave
dec
push
nop
adc
int3
adc
dec
mov
ret
scas
add
out
adc
arpl
enter
scas
jb
out
leave
sub
inc
out
xchg
rcr
jae
in
ret
jl
imul
mov
sti
gs
jg
jbe
inc
sub
push
icebp
push
mov
inc
mov
insl
sub
inc
jnp
cmc
out
aas
lock
fmull
mov
roll
outsl
fs
lock
sbb
and
fdiv
sarb
sti
pop
sbb
pop
add
daa
stc
cmp
add
fstps
sti
and
mov
dec
out
lods
pop
mov
ja
in
ret
rcrb
lcall
mov
sub
enter
sub
in
mov
sbb
mov
mov
jbe
ret
idiv
or
sbb
cwtl
jae
dec
pop
lods
rcrl
jmp
out
movsl
push
scas
sahf
push
int
mov
push
mov
jp
inc
test
push
xchg
das
sahf
sbb
data16
cltd
cmp
icebp
fs
jb
cltd
dec
push
das
out
pop
outsl
jmp
fstl
sbb
lea
add
lcall
xorb
cli
hlt
repz
es
mov
push
dec
cmp
lret
popf
mov
bnd
mov
inc
stos
sbb
lahf
enter
mov
cmp
movsl
rorl
jns
inc
cmpsl
iret
test
add
sub
add
mov
mov
add
pop
sub
flds
bound
std
scas
jge
sti
das
enter
movb
push
sbb
out
enter
inc
cmp
sbb
pcmpeqd
fmulp
loopne
mov
pop
jae
lds
cmpb
loope
xchg
sbb
hlt
cmp
cmp
dec
pop
pop
mov
push
rcll
dec
pop
mov
fsubrl
lahf
sbb
stos
or
imul
cmp
scas
sti
inc
repz
fucomp
jnp
cmp
enter
and
push
call
pop
mov
inc
or
lock
in
es
notb
sub
mov
cld
in
shll
lret
lret
movsl
addr16
cmp
jae
xchg
or
fidivrs
out
cwtl
jo
shrb
dec
test
xlat
xor
sti
pop
dec
int3
stos
xor
and
adc
adc
aad
outsb
js
push
shr
and
push
cmp
aad
mov
lods
pop
and
pusha
push
jae
in
mov
mov
pusha
jecxz
pop
subb
faddl
push
jl
jbe
push
pop
std
addr16
pop
dec
rol
inc
dec
pop
sub
push
movsl
icebp
addr16
and
nop
push
mov
fst
ljmp
sbb
mov
or
pop
stc
pop
loopne
fsubl
push
out
sti
xchg
bnd
stos
mov
fnstenv
mov
dec
pop
movsb
in
ss
cmp
lcall
jae
ret
mov
push
cltd
sbb
add
out
daa
pop
cli
or
cs
mov
xchg
pop
out
lods
fnsave
iret
add
insl
xchg
sbb
mov
cmp
fisubrs
jge
dec
mov
and
scas
loop
xchg
mov
xchg
mov
cmp
cli
pop
loop
sbb
or
nop
mov
es
mov
push
jmp
xor
scas
pop
fildl
and
bound
cmp
and
push
fld
cwtl
ss
inc
cltd
push
jmp
in
jnp
test
sub
mov
adc
in
xor
inc
lret
lods
into
xor
fsubs
and
mov
stos
ficomps
rcrl
fwait
mov
jb
cmp
cld
ja
daa
dec
imul
pop
adcb
dec
inc
mov
push
mov
xchg
and
pop
mov
fisubs
pop
adc
shll
adcl
add
movsl
int
popf
enter
mov
cli
icebp
lcall
mov
lock
mov
mov
int3
cmpsl
mov
push
sub
xlat
xor
popf
adc
aam
into
data16
push
add
jno
cltd
inc
cmpsl
fwait
ret
pop
loopne
mov
scas
or
or
mov
in
adc
and
out
stos
lods
jno
ljmp
add
test
hlt
pop
fucomp
jmp
mov
popf
sbb
dec
dec
insl
fidivl
ds
lcall
dec
aam
je
fstpl
mov
or
movsl
lods
sbb
add
lret
add
int3
mov
lret
jno
push
or
dec
cld
jl
xchg
dec
repz
pusha
bound
inc
fs
jl
daa
arpl
fldl
mov
lea
lret
out
adc
xor
fisubs
pop
call
or
fwait
inc
sbb
sub
cmp
testb
pop
gs
fdiv
mov
aaa
or
push
pop
clc
insl
stos
xchg
cmp
arpl
jg
pop
ret
hlt
inc
xor
mov
sub
popf
mov
dec
fwait
push
xor
daa
pop
jbe
mov
popa
lret
sub
pop
cmp
test
or
mov
and
in
int3
xor
aam
lahf
sub
lds
lds
or
call
pop
neg
or
ss
mov
or
jp
outsb
xchg
aad
jbe
jo
scas
imul
dec
adc
mov
sahf
and
and
jg
ja
adc
into
push
jecxz
jle
and
fcos
mov
xor
pop
jns
sub
ss
mov
and
inc
into
shll
xchg
dec
sbbl
pop
fwait
or
leave
icebp
sti
mov
add
jmp
mov
stos
xchg
clc
push
mov
ret
stos
push
pop
xchg
or
movsb
inc
nop
dec
outsb
push
pop
and
cmp
addl
rep
sbb
fsts
imul
xor
xchg
mov
bound
je
dec
imul
sti
add
scas
xchg
and
stos
push
cmp
test
das
lds
pusha
pop
inc
push
dec
cmp
enter
cmp
pop
and
adc
adc
xchg
inc
adcb
jecxz
and
ret
movsb
dec
loopne
xor
cmp
and
in
fildl
int
or
inc
out
bound
pop
aaa
mov
fists
jo
and
mov
in
jb
sar
fs
pop
shrb
cmpsb
cmp
imul
adc
mov
mov
dec
jmp
mov
xchg
xor
xchg
or
add
lret
fists
rorb
jmp
in
out
cli
add
cmpsl
enter
jns
push
dec
popf
stos
rcrl
mov
sub
inc
xor
push
aam
ljmp
gs
sbb
sub
lret
pop
stos
scas
push
push
fdiv
out
into
sarb
sub
add
xor
sub
mov
pop
pop
sub
or
cs
sbb
xor
xor
mov
std
rcr
or
stos
rcll
scas
sbb
outsl
shlb
std
mov
adc
cmpsl
push
cli
aas
sbb
inc
push
xor
add
sub
lret
outsb
adc
dec
in
pop
mov
lods
mov
mov
aad
inc
fsubrl
cmp
cmpsl
data16
xor
cmp
inc
outsb
mov
sbb
leave
xchg
jns
gs
aaa
jno
add
fsubrp
push
adc
test
mov
fs
sbb
or
fucomi
dec
imul
adc
jb
test
lea
cmpsl
out
jns
adc
adc
cmp
jne
adc
push
nop
out
addb
icebp
mov
insb
insb
ret
pop
xor
cmp
inc
dec
in
repz
sub
mov
das
nop
jmp
insb
push
dec
pop
adc
fadds
in
inc
fdiv
cmp
mov
mov
cwtl
rolb
aam
das
lcall
sti
mov
lods
and
hlt
sub
ror
mov
add
cmp
mov
add
es
mov
push
out
sbbb
ds
out
ss
inc
je
fwait
imul
idiv
test
dec
sub
xchg
or
shrb
jno
into
mov
cli
jmp
add
mov
pop
bound
push
adc
lods
mov
ljmp
inc
ja
or
xchg
add
imul
stos
cltd
inc
pop
imulb
pop
dec
or
xchg
push
mov
sub
ljmp
ror
mov
leave
fwait
cmp
mov
cmpsl
mov
jp
jge
pop
adc
push
and
popl
sub
push
add
mov
clc
push
pop
push
sbb
jmp
loope
stc
jo
loop
add
inc
mov
mov
mov
jne
lods
movl
sbb
imul
jl
sbb
mov
push
shl
lods
push
into
jbe
mov
xorb
dec
or
outsb
mov
jae
mov
xchg
mov
inc
movsl
insb
dec
or
les
dec
mov
movsl
add
mov
rcr
sub
xchg
xchg
mov
pop
int
push
mov
loope
xor
cld
sub
popf
lret
xor
js
lahf
subb
xchg
pushf
insl
lods
mov
mov
jb
dec
xchg
mov
mov
add
sbb
bound
scas
or
cmpsb
imul
cmp
mov
shlb
jne
cltd
pop
xorb
gs
pop
push
fadds
xchg
pop
sarl
jecxz
adc
movsl
rolb
jle
jo
movsb
shrb
lcall
ror
lea
rcrl
fs
sbb
loope
gs
jp
push
out
fdivrs
sub
mov
ss
and
ljmp
es
out
jae
hlt
cmp
fildll
xchg
mov
insb
int
jle
push
xor
add
cltd
mov
dec
ja
sarb
push
unpckhps
add
jo
imul
call
push
or
cmp
call
sbb
add
sub
xchg
cmp
adc
add
add
icebp
xorb
mov
pop
pop
clc
xchg
add
arpl
inc
int3
add
scas
lea
loop
push
sbb
xlat
jns
or
fistps
mov
mov
lret
mov
and
xor
and
or
enter
es
leave
pop
lods
xchg
pop
xchg
adc
sbb
in
cli
daa
cmp
int
mov
or
and
fstps
push
sbb
cmp
mov
and
pop
mov
in
adc
ficoms
xor
mov
std
push
test
sub
andl
xorb
jle
xor
mov
sti
orl
push
hlt
pop
adc
lret
add
pop
xchg
shl
bound
push
push
fcoms
imul
addr16
sub
lcall
in
fstpt
rclb
xchg
jb
leave
add
jge
or
adcl
push
push
sahf
out
ficomps
ds
dec
cwtl
jmp
outsl
addr16
mov
inc
fsts
dec
les
add
mov
mov
popa
sbb
and
pusha
inc
dec
inc
ret
lcall
movsl
xchg
push
and
mov
in
lods
fidivl
and
movsb
jns
pop
stos
sbb
rcrb
stos
pop
sub
mov
sbb
add
sti
out
pop
jecxz
lcall
inc
test
icebp
mov
loop
add
test
aad
jno
pop
pop
cmp
pusha
mov
sahf
fisubrl
mov
fimuls
xor
pop
ficoms
insb
mov
je
es
sarb
imul
je
shrb
push
sub
int3
in
dec
xchg
xchg
inc
pop
adc
mov
push
stc
cli
fs
add
inc
or
dec
aam
pop
lret
add
stos
rolb
pop
test
scas
push
test
andb
push
roll
mov
mov
sbbl
outsl
aad
ret
pusha
js
test
push
inc
xor
jns
movhps
into
arpl
shll
icebp
lret
scas
lods
and
aas
dec
cmpsb
jae
sti
xchg
addl
xchg
xchg
scas
push
jl
push
test
dec
mov
sahf
and
les
popf
dec
adc
addr16
scas
jle
inc
inc
cmp
mov
adc
jbe
data16
in
dec
ret
movsl
sbb
aad
idivb
xor
fwait
mov
aaa
jg
int
xchg
pop
mov
push
pop
popf
dec
mov
xchg
aas
dec
inc
aaa
jg
sbbb
xchg
push
lahf
cmp
idivl
mov
pop
pusha
sbb
mov
data16
xchg
fdivrl
jle
test
cmp
cmp
repz
jmp
pop
sub
pop
mov
adc
and
xchg
mov
das
bound
mov
cltd
xchg
in
sarl
adc
in
add
mov
push
in
add
sub
cmp
push
and
sub
cmp
mov
xor
call
cmp
cmp
sti
jle
xchg
pop
pop
cli
mov
fidivs
push
divl
fs
pop
xor
pop
mov
jl
mov
aad
testl
rolb
add
xor
gs
lock
mov
or
test
imul
negb
dec
mov
shr
push
mov
test
in
das
dec
sub
cwtd
insb
mov
jns
mov
aas
xchg
pop
dec
stos
or
mov
inc
das
sub
aam
lods
loope
inc
mov
cs
or
inc
dec
add
test
jns
sbb
add
push
xchg
inc
stos
push
jno
and
stos
sbb
movsb
jle
mov
or
inc
cmp
loope
mov
in
mov
lea
sbb
add
sub
test
cs
jmp
mov
fiaddl
mov
popa
mov
sub
mov
jmp
xor
xchg
js
js
lahf
jne
sbb
movsb
pop
push
stc
or
xor
and
dec
pop
mov
lcall
cmp
sub
mov
sbb
stc
cld
xchg
into
cmpsl
and
inc
popa
cmp
pop
cwtl
cmp
add
dec
pop
clc
jg
jne
xor
negl
inc
lahf
push
jge
subb
mov
dec
mov
add
test
daa
xor
testb
cmpsl
loope
fmul
xlat
pop
mov
and
and
push
aaa
xchg
je
in
andb
mov
add
sub
lods
jle
loop
push
loop
enter
ja
in
xchg
mov
xor
roll
stos
pusha
mov
aaa
jmp
jle
mov
mov
xchg
divb
mov
and
jg
mov
pop
mov
lds
jno
call
adc
push
push
outsb
inc
adc
xchg
pop
loope
loope
andb
add
mov
pop
jge
sahf
mov
pop
dec
sbb
xchg
mov
mov
lea
push
test
fwait
sahf
sti
and
mov
test
jnp
cmp
stos
roll
dec
sti
add
xchg
mov
xor
dec
xchg
loope
dec
inc
out
enter
push
sarb
inc
fstps
fildl
adc
inc
cld
xchg
xchg
flds
push
sbb
aad
sbb
icebp
lea
out
inc
dec
test
xor
insl
loope
mov
or
mov
std
pop
jg
jae
stos
int3
sar
cmc
sub
insb
test
js
cwtl
xor
mov
js
cmpsb
jno
aad
mov
insb
flds
call
add
mov
xchg
popa
mov
stos
adc
movsl
mov
adc
fnsave
sti
in
add
inc
pop
das
test
hlt
pushf
xor
inc
pop
and
in
cmp
loopne
or
shrb
js
or
test
mov
fwait
lcall
icebp
enter
js
or
lock
stos
push
stc
insl
repnz
enter
push
int
add
jp
das
int
lret
adc
lock
xor
push
inc
xchg
outsl
mov
push
mov
popf
jae
data16
or
mov
int
daa
mov
jmp
fsubs
jg
das
dec
jb
ret
fcompl
aas
fs
loopne
mov
cltd
cmp
jo
dec
outsb
push
push
imul
sub
pop
sbb
inc
lds
jmp
rcll
enter
push
pop
test
or
bound
xchg
decb
mov
push
lret
jge
les
fmull
sbb
push
fadd
rolb
bound
ror
jge
pop
mov
and
scas
sbb
nop
fwait
or
rcl
push
imul
sub
mov
jp
dec
aas
push
mov
pop
bound
dec
xchg
xor
rol
adc
pusha
pop
test
fdivs
and
lcall
dec
std
hlt
imul
mov
gs
push
lds
inc
or
pop
popf
jl
out
je
cmp
mov
aad
lret
mov
sbb
and
fcoml
pop
and
or
or
cmp
jge
imul
sahf
xchg
mov
icebp
jns
add
mov
leave
mov
dec
stc
and
dec
inc
or
push
lahf
ja
mov
jno
mov
pop
cmpsl
movsl
cmpsb
addr16
cmp
loope
dec
stc
std
fisttpl
mov
inc
cltd
les
lock
aas
dec
gs
xor
pop
sub
cmp
fs
push
and
out
pop
dec
dec
jp
lods
aaa
mov
mov
das
inc
cmovo
loopne
ljmp
mov
mov
in
jbe
jae
or
mov
mov
andb
pop
pop
push
mov
lahf
jo
xlat
faddl
mov
push
push
mov
ror
out
add
push
daa
push
dec
in
jl
jbe
xor
scas
adc
mov
lods
shrl
fs
sbb
out
xchg
fs
cs
add
mov
scas
and
dec
or
xor
cmp
shr
fcoml
mov
pop
jae
into
and
jge
xor
xchg
fstps
ret
and
mov
inc
push
jne
mov
inc
pop
sbb
iret
adc
xor
push
cwtl
in
aas
push
inc
aad
pop
cmp
adc
test
sarl
test
push
cwtl
ror
add
jmp
jb
arpl
lock
dec
sbb
nop
movsb
test
inc
outsb
ficomps
add
jno
mov
add
cmp
mov
inc
test
outsb
sarl
std
xchg
rclb
mov
cld
mov
mull
ret
sub
mov
xchg
icebp
loopne
ret
inc
pop
sti
out
jg
xor
mov
outsb
insb
sub
addl
out
test
or
pushf
sbb
dec
jae
call
enter
mov
push
ret
adc
sbb
cmp
fsubrl
mov
rcl
out
pop
aaa
and
into
inc
jle
addb
insl
jmp
out
insb
push
int
push
jb
mov
push
lret
loopne
sar
fcmovnu
pop
add
inc
pusha
fcomp
int
pop
sub
sbb
or
adc
jne
outsl
jg
jle
push
push
xchg
sbb
adc
popa
lret
adc
mov
cmp
jne
mov
push
cwtl
lret
cmpsb
aad
and
test
inc
inc
ret
xor
add
clc
faddp
adc
outsb
and
inc
push
repz
sbb
jne
daa
popa
xchg
cmpsb
sbb
mov
mov
push
or
sub
enter
test
add
into
push
mov
and
cltd
adc
int
mov
lret
out
or
int3
push
mov
add
push
jno
in
mov
mov
add
add
cwtl
ss
sbb
mov
inc
jne
lds
arpl
lcall
lea
adc
icebp
js
pushf
mov
mov
cli
cs
jbe
rcrl
inc
aaa
shlb
add
cmp
movsb
rol
dec
in
rorb
xchg
aaa
xchg
cld
jns
xor
incl
cmpsl
rorl
in
pop
lret
hlt
out
push
dec
shll
dec
sbb
addr16
cmpsl
jg
xbegin
jmp
pop
test
in
sbb
ficoml
add
sbb
pop
fs
sub
subb
fsubs
mov
cmp
into
lods
lea
push
fcmovbe
xor
cmp
cmp
mov
scas
dec
jne
cmpsl
adc
orl
cld
jmp
and
bswap
cmpsl
sbb
xchg
sbb
jg
xchg
repnz
push
inc
sbb
cmc
xor
bnd
bound
sbb
aad
mov
push
mov
add
inc
pop
insb
jg
icebp
into
inc
mov
mov
aad
fiaddl
xor
insb
pop
inc
push
jae
lret
das
jb
push
int
inc
mov
scas
sub
lods
push
mov
inc
movsb
in
cmpb
mov
cmp
pop
ljmp
decl
mov
shlb
movsb
cmp
mov
movsb
aad
in
lods
mov
cmp
jb
ss
les
gs
sub
mov
les
int
jne
mov
jecxz
xchg
mov
in
orl
lods
and
cli
cmpb
cmp
mov
and
add
lds
cmpl
cs
fnsave
jns
icebp
pusha
dec
push
std
and
mov
lds
test
inc
aaa
int3
dec
popf
lret
sbb
out
es
inc
clc
sbb
sbb
push
nop
bound
insl
ja
ret
movsl
mov
insl
fidivs
fisttps
subb
and
rorl
fs
cs
mov
and
pop
sbb
in
pop
dec
mov
xchg
fcompp
sub
pop
cmpsb
push
push
sbb
or
xor
adc
lret
inc
cmp
cmp
out
es
adc
scas
lahf
cmp
mov
ret
lea
pop
rclb
and
adc
push
and
push
iret
add
mov
das
leave
and
or
test
sub
imul
cmp
lods
js
xchg
loope
scas
les
lcall
jnp
and
insl
and
and
data16
or
add
inc
or
mov
push
mov
push
adc
pusha
adc
les
and
scas
adcb
jg
mov
sbb
popa
lret
sahf
add
push
push
vmwrite
xor
orb
pushf
mov
loop
fisubrl
add
jne
cmp
mov
movsl
test
mov
xchg
scas
int
mov
push
popa
push
arpl
iret
cwtl
inc
flds
movsb
nop
js
test
loope
dec
ja
test
sbb
loop
dec
mov
push
dec
cmpsb
test
mov
xorl
push
xor
xchg
loop
xor
push
mov
movsl
adc
push
outsl
stc
adc
cwtl
loopne
stc
ds
add
imul
mov
xchg
loopne
mov
insl
filds
scas
jns
and
or
iret
or
clc
add
adc
loopne
mov
cmp
or
cmp
xchg
fs
mov
gs
repz
lret
repz
pop
fbld
and
jmp
mov
jae
incb
add
xchg
xchg
sbb
mov
push
rcr
imul
sahf
xchg
cmp
add
das
cmp
fmul
push
xchg
and
ljmp
jnp
inc
adc
pop
cmp
cli
xor
movsl
je
xor
ljmp
lods
cwtl
xlat
arpl
jge
inc
or
ss
pop
mov
cli
and
test
and
pop
int3
mov
testb
xchg
pop
lret
push
jae
and
xlat
aam
ret
mov
jecxz
sub
push
es
mov
jmp
cmp
xlat
out
fnsave
push
repnz
outsb
adc
test
cmp
xchg
sub
and
cmpsl
and
ss
fldenv
xchg
lret
add
nop
mov
push
sub
mov
and
enter
push
repnz
data16
lods
adc
push
inc
pusha
push
loop
adc
aad
cmp
xchg
inc
in
sub
xchg
xor
cmp
dec
pop
and
cltd
int3
hlt
or
popa
mov
xchg
xchg
inc
and
out
push
movsb
hlt
popf
jmp
cli
add
lods
testb
mov
lahf
nop
insl
sub
das
push
ljmp
add
push
pop
pop
fucom
xchg
and
roll
xor
lods
pop
pop
lahf
xor
mov
cmp
shlb
adc
out
add
xchg
lahf
pop
mov
mov
fisubrs
daa
xchg
jbe
bound
xor
aad
hlt
sbb
cltd
adc
imul
mov
cli
xor
scas
fidivl
in
lahf
out
or
mov
sbb
push
xchg
stos
rcr
xor
push
lcall
inc
push
dec
pusha
je
lahf
mov
xorl
jbe
out
and
addl
sbb
test
inc
pop
aas
fsubs
scas
fldl
or
dec
sub
orl
shl
inc
push
rorl
nop
fwait
or
inc
mov
add
scas
mov
idivb
jge
rcll
rcrb
mov
loop
mov
dec
dec
jbe
subb
les
jnp
scas
adc
sub
fs
leave
enter
jno
pop
rclb
add
mov
int
repnz
out
adc
sbb
mov
mov
loope
pop
enter
ja
push
mov
cmc
fnstsw
out
out
mov
sbb
outsb
jle
cltd
pop
popl
shr
jne
arpl
xor
inc
dec
push
xchg
ret
add
push
jmp
sbb
in
addr16
xchg
dec
js
pushf
dec
jb
inc
push
push
leave
subl
loopne
xor
xor
cmp
sbb
lock
insb
push
sub
push
pop
and
pop
push
cmpb
push
or
mov
lock
push
dec
mov
stos
push
sbb
mov
das
popa
shlb
pop
mov
pop
jle
or
fsub
pop
orb
repz
mov
data16
pop
cmp
dec
call
repz
addr16
and
push
pop
gs
je
dec
ror
xchg
and
icebp
xor
rol
les
fucomip
stos
rorb
pop
cmpsb
dec
flds
jo
lods
sub
test
jb
adc
inc
fldenv
push
adc
outsl
inc
dec
xchg
cmpsl
jne
mov
les
dec
sub
scas
mov
jp
call
cwtl
dec
mov
daa
xlat
cmp
mov
push
mov
ljmp
lds
dec
rcll
cmp
pop
jle
lea
mov
push
jp
add
dec
es
cmpsb
lods
mov
loopne
sbb
stc
pop
lret
xchg
insl
mov
cmpsl
push
fistpl
in
cmpsl
aad
mov
je
addb
mov
cmp
mov
sbb
jo
mov
stos
xchg
sub
pusha
dec
mov
mov
xor
sarb
out
jb
andl
gs
add
mov
mov
mov
mov
xor
adc
dec
sub
je
cltd
adc
insb
sub
ja
sub
fidivl
pop
and
sub
or
adc
cs
ss
out
push
add
loop
sbb
pop
sub
jo
fsubs
hlt
xchg
sub
fadd
in
mov
les
in
add
xchg
dec
push
push
insl
subb
mov
xor
adc
mov
cli
cmp
in
mov
aas
loope
test
inc
sti
sub
add
out
insl
insb
cmp
push
pop
lods
movsl
in
cmp
enter
cld
pop
mov
repnz
lret
xchg
outsb
push
cmp
inc
jae
mov
fsubrp
loop
ja
dec
mov
push
pushf
aad
fxch
outsb
stc
outsl
and
mov
rcr
adc
jmp
lock
xchg
in
add
cwtl
jnp
enter
ss
insl
inc
pusha
mov
cmc
mov
mov
add
scas
rolb
loop
shll
or
jge
ret
pop
and
sarb
in
mov
js
pop
mov
stos
pop
test
mov
xchg
push
ss
xchg
fstps
sub
fmul
pushf
or
stos
out
jecxz
dec
jp
in
dec
and
xor
sub
in
sub
stos
jno
cld
outsl
sub
cmp
out
test
cmp
dec
mov
sub
adc
mov
decl
dec
cmpb
jg
pop
andb
jle
mov
fsin
or
loope
mov
mov
outsb
ss
adc
jno
push
test
sbb
sti
std
test
or
punpcklwd
cmp
jbe
repz
push
xchg
sti
mov
lret
int3
lahf
out
pusha
cmpsl
ds
inc
test
and
jge
sub
sarb
std
xchg
mov
adc
mov
mov
mov
adc
ds
jp
test
jl
nop
push
repz
outsb
push
mov
shrb
fadds
mov
sub
jne
das
imul
out
roll
cwtl
add
mov
ss
add
mov
pop
and
jmp
repz
push
jle
add
in
lds
out
daa
pop
es
js
push
stc
lcall
and
xchg
and
xchg
mov
pop
cli
std
loope
jg
lret
or
sbb
iret
int
xchg
gs
xchg
ret
pop
mov
movsb
jecxz
jecxz
testb
stc
adc
sti
es
mov
aas
aam
sub
or
dec
subl
pop
fistps
xor
mov
dec
lds
mov
fsubr
jg
fdivl
stos
mov
pop
or
xor
stos
add
ret
jae
sbb
sahf
dec
adc
inc
pusha
jle
cmpsb
mov
jl
mov
std
cmp
mov
xor
mov
imul
cmp
mov
js
arpl
cmp
jns
mov
imull
int
jp
stos
xchg
js
inc
test
pop
jl
mov
push
cmc
inc
stc
pop
stos
mov
lahf
shll
mov
in
iret
in
sub
add
popa
push
popf
ja
addr16
aaa
sub
dec
lea
sub
push
or
xchg
mov
scas
mov
out
jge
ror
dec
test
mov
popf
cmp
inc
lahf
pushf
lods
lret
loopne
cmp
es
loop
movsb
mov
jp
rcrl
push
and
add
cmc
jmp
jmp
mov
popf
icebp
adc
dec
int3
mov
ret
fs
sarb
rorb
push
bound
jae
push
mov
out
jge
adc
xchg
push
cmp
cli
aam
pop
fcmovnbe
mov
lcall
movsl
rol
push
cli
push
push
fildll
jg
das
data16
cwtl
call
in
mov
cmp
jb
pop
adcl
mov
jg
jnp
xor
in
sti
arpl
ficompl
jle
fwait
idivl
and
mov
mov
jle
or
mov
in
pop
dec
in
enter
xlat
int3
cmpsl
sub
cltd
mov
movsl
jnp
adc
daa
jmp
mov
lret
dec
sub
dec
push
nop
mov
push
nop
pop
pop
in
les
xchg
add
fists
inc
cmp
add
mov
popa
cmc
cmp
or
test
out
mov
test
fcom
push
add
inc
lock
daa
lock
int
cmp
loope
sbb
jmp
mov
pop
push
leave
jle
cld
jns
and
or
aad
clc
test
das
jne
aas
pop
mov
rclb
pop
mov
adc
ret
jb
ljmp
sbb
test
scas
pop
cltd
adc
pop
jnp
and
lods
mov
lock
lock
enter
dec
fldcw
cld
jo
mov
ss
test
inc
in
jge
mov
inc
jecxz
fs
or
cmp
fstp
push
insb
fcomp
je
repz
push
rcrl
insl
ss
inc
push
fisubrl
xchg
cmp
sbb
jl
or
inc
lret
dec
test
imul
mov
mov
mov
js
cmc
test
test
xchg
push
jl
dec
dec
test
jmp
adcb
sti
and
inc
dec
mov
ficompl
push
and
sbb
popa
pop
mov
mov
jb
and
cmp
and
neg
push
sbb
lods
js
cmp
mov
or
push
imul
inc
sahf
and
sbb
xchg
xor
ficoms
xchg
push
lcall
nop
mov
jp
mov
push
adc
call
fwait
test
lods
sub
repz
shrb
popf
pop
add
add
inc
add
bound
mov
or
aaa
pop
hlt
dec
pop
xchg
xor
imul
adc
xor
sti
scas
inc
arpl
pop
adc
cmpsl
xlat
adc
push
cmp
mov
sub
lea
xchg
mov
jo
push
push
fstps
cmpb
mov
gs
xchg
jb
inc
jnp
fmuls
and
daa
push
mov
push
jo
push
cmp
xchg
int
and
jle
andb
ss
sbb
xchg
xchg
sub
xchg
mov
pop
jle
jbe
xchg
iret
aas
ret
cltd
shll
or
pop
mov
lret
cmpsb
pushf
pop
inc
jg
and
repnz
inc
cmpsb
pop
loope
inc
and
mov
iret
fistpll
inc
mov
popl
aad
mov
add
pop
outsl
adc
adc
pop
cltd
aad
xchg
pusha
pop
lret
bnd
xor
lahf
ret
jl
jg
xchg
lahf
or
jo
fldenv
sarl
bound
pop
pushf
cmp
lret
in
adc
mov
ja
dec
ja
test
inc
loopne
dec
inc
push
lret
sub
jbe
pop
mov
jo
sbbb
mov
je
loope
push
sbb
dec
sbb
mov
fs
daa
pop
mov
dec
mov
or
push
pop
sub
push
xchg
das
aas
rol
cs
add
rcrl
mov
cmp
lret
arpl
sar
shrl
test
mov
jle
cmp
call
lret
aaa
test
sub
mov
cmp
das
mov
add
push
enter
dec
add
imul
decb
stc
lret
stos
xor
or
faddl
in
pop
aad
pop
sbb
adc
mov
sahf
arpl
adc
adc
add
testl
mov
cmpl
lods
iret
mov
jo
adc
out
lcall
das
mov
in
cmp
xchg
cmp
jp
xchg
sbb
mov
xchg
inc
mov
xchg
in
jae
and
inc
inc
mov
les
dec
ret
mov
test
jno
pop
popf
xchg
dec
in
aam
and
not
or
bound
mov
jecxz
inc
call
daa
jp
push
mov
aaa
pop
fs
shr
ljmp
dec
into
jl
hlt
ds
mov
mulb
aaa
jnp
ret
mov
mov
sub
inc
add
inc
mov
push
subb
jmp
imul
pop
pusha
fwait
mov
inc
push
out
xchg
inc
xor
sub
sahf
test
pop
lret
fst
xlat
test
stos
lahf
test
ficoms
inc
enter
clc
xor
push
mov
cltd
cmp
and
ret
mov
std
and
pop
inc
fldcw
insl
push
fstpt
jmp
dec
xchg
mov
add
push
push
lock
sub
and
mov
inc
push
xchg
call
xchg
arpl
pop
fidivrs
xchg
leave
fnstcw
add
fs
cli
aad
mov
test
roll
jae
lds
pop
pusha
stos
fwait
xor
fbld
mov
inc
jnp
xchg
and
lea
or
loop
lcall
rclb
inc
xor
fisttpl
xchg
mov
aaa
scas
out
into
sbb
push
shrb
jnp
cmp
jns
sub
in
lahf
lret
stos
push
or
inc
into
clc
shl
das
jl
jno
and
notb
mov
pop
adc
jg
xor
mov
adc
icebp
fbld
out
dec
lret
add
adc
add
in
cmp
loop
sti
into
mov
cmp
leave
mov
cmp
sub
and
xchg
cltd
jnp
xchg
shrl
dec
cmpsl
xchg
jno
mov
push
in
nop
out
imul
adc
jp
jns
pop
adc
or
shl
pop
cmp
movsb
push
scas
bound
subb
push
je
les
mov
mov
bound
push
push
test
pop
pushf
addr16
mov
adc
jmp
in
cmp
mov
dec
mov
inc
push
inc
add
test
aaa
icebp
fwait
xor
mov
icebp
stos
call
mov
sub
push
in
xchg
out
adc
call
mov
cld
pop
xchg
inc
mov
and
jmp
cli
inc
insb
mov
mov
gs
inc
dec
adc
push
cmp
gs
pop
or
push
inc
rcll
enter
fcomp
pusha
imull
test
xor
inc
and
outsb
cwtl
subl
mov
mov
and
loopne
jl
inc
sub
repz
sub
adc
dec
xchg
add
loopne
sub
and
leave
and
pop
or
push
jmp
pop
in
and
das
add
jl
pop
pop
xor
or
sub
icebp
mov
xchg
repz
mov
out
and
popf
jp
movl
shr
mov
mov
cwtl
and
and
add
sbb
cmpb
jle
shr
jno
fidivrl
dec
dec
icebp
test
add
dec
mov
cmc
cltd
xchg
popa
mov
popa
or
int
out
iret
dec
outsb
push
mov
jge
inc
bound
ficoms
call
push
mov
loopne
jp
and
bound
adc
jnp
xlat
sub
xchg
push
jne
icebp
cli
inc
mov
sub
xor
std
aas
aas
fs
add
fisubl
ljmp
push
out
ja
test
xchg
pop
lcall
push
or
mov
pop
add
popa
dec
std
dec
sub
notl
fidivl
movsb
call
mov
imul
dec
inc
add
lret
daa
ret
out
mov
mov
sti
test
mov
repnz
mov
cmc
lcall
outsl
jmp
mov
sbb
adc
lods
or
and
sub
jo
je
lea
into
lock
push
adc
outsb
mov
outsb
mov
and
sub
fmuls
jae
push
inc
les
or
popf
pop
cli
imul
out
cmp
stc
cld
mov
outsb
xor
mov
outsb
fstpl
shlb
xchg
dec
jmp
xor
popf
loopne
or
cmp
lahf
mov
xchg
js
or
jmp
xor
call
push
rcrb
ficoms
mov
mov
es
adc
data16
mov
clc
sahf
jb
push
insb
sub
clc
dec
push
and
jp
filds
mov
aas
cmp
push
xchg
add
push
jge
xchg
push
push
xchg
out
inc
aas
inc
out
add
test
xor
ljmp
sbb
push
test
xchg
jmp
xchg
fistpll
lock
mov
mov
sub
mov
stc
scas
xchg
push
popa
cmp
dec
out
cwtl
sbb
pop
out
shlb
pop
loopne
jp
lds
out
inc
jp
inc
bound
shll
mov
mov
mov
iret
sbb
std
inc
cmp
clc
into
adc
insb
sti
sar
rcr
mov
test
aaa
push
inc
lret
ficomps
lcall
dec
cmpsb
pop
outsl
clc
sub
dec
and
inc
and
lds
sbb
in
cltd
xchg
sahf
lcall
xchg
or
push
rcrl
mov
std
movsl
int
jg
mov
mov
sub
jne
push
scas
sbbb
call
bound
movsl
mov
mov
or
jmp
cmp
movsl
cmpsl
mov
repnz
and
pop
iret
dec
pop
mov
push
fmuls
xchg
xchg
adc
imul
jg
xor
shrl
decl
cwtl
sar
test
xchg
popa
in
in
flds
sub
mov
mov
loope
loope
fs
icebp
push
idivl
into
movb
mov
mov
adc
cli
mov
add
sbb
cmp
je
aad
iret
xor
shlb
imul
fildll
hlt
pop
mov
xor
roll
out
push
aaa
fidivrs
push
inc
pop
aaa
inc
lret
adc
paddq
push
push
in
testb
shlb
add
in
sbb
call
fisubs
xchg
in
sbbl
cld
outsl
xor
xor
loop
fsubrs
shlb
sbb
mov
mov
pop
loopne
adc
cmpsb
sub
insl
cmp
scas
fldenv
adc
xchg
jp
lahf
aas
cmp
mov
test
pop
xor
fcomip
js
mov
fcompl
and
sub
repz
mov
pop
sbb
mov
nop
mov
xor
mov
sub
cwtl
cmp
jo
xor
int3
push
push
std
push
mov
push
rorb
add
ja
movsb
cmpsl
mov
inc
sub
sub
or
sub
outsl
mov
xorb
sbb
stos
xchg
iret
out
jmp
cmp
xor
shlb
es
nop
into
daa
inc
outsl
lret
lahf
mov
pop
stos
jns
sbb
push
lret
dec
cmp
sub
ret
fwait
xchg
pop
ud0
sbb
lcall
daa
into
pop
and
mov
gs
out
iret
mov
mov
add
je
fsubrp
push
or
fmul
mov
les
pop
mov
jmp
pop
pop
add
mov
push
pop
mov
repz
jo
loope
dec
xchg
inc
mull
push
outsb
dec
adc
sub
mull
dec
lcall
sbb
or
pusha
push
popa
pop
adc
sbb
dec
movsl
mov
inc
or
addl
sub
add
divl
ret
cmp
out
lret
push
outsb
cmp
pop
and
jmp
fldt
ret
lds
jns
das
test
lahf
cmp
outsl
xchg
mov
imul
cltd
arpl
imul
pop
mov
lahf
je
mov
jmp
ror
inc
in
aaa
ljmp
pusha
xor
testl
cwtl
dec
adc
movsl
mov
jae
xchg
fmuls
pause
jmp
add
mov
mov
stos
cwtl
add
adc
jp
xchg
outsl
pop
lds
insl
mov
jl
dec
in
mov
mov
loop
jno
pop
lahf
mov
lods
lcall
add
adc
inc
push
sti
or
mov
repz
sub
cmp
sbb
xchg
js
sbb
pop
jecxz
in
sub
cmp
adcl
xchg
cli
repnz
push
daa
jae,pt
inc
jae
test
push
jne
fs
xchg
sub
pop
rcrl
push
dec
jmp
cmp
enter
xchg
insl
ret
aaa
cmpsb
xchg
cmp
pop
sub
or
push
popa
sub
pop
hlt
mov
mov
mov
mov
inc
out
jle
or
xchg
roll
sub
imul
aam
aas
sahf
push
into
mov
adc
inc
bound
into
in
lods
bound
lret
pop
mov
shrb
test
sbb
lea
subb
out
shll
add
orb
shlb
fbstp
cmp
mov
jp
or
push
out
pop
lahf
out
jo
jmp
ficompl
addr16
xor
jge
cltd
outsl
mov
mov
mov
and
stos
std
fadd
lds
cmc
insb
lods
adc
sub
push
mov
xchg
sbb
mov
dec
in
mov
test
scas
movsl
pop
mov
icebp
in
push
jge
mov
xor
pop
push
int
stos
push
notl
enter
push
jns
fmuls
scas
sub
dec
pop
xchg
or
cmp
rol
xchg
push
jge
pop
rorl
leave
enter
push
sub
mov
pop
jb
adc
jnp
and
sub
imul
addb
push
add
ret
pop
mov
inc
xor
mov
adc
aas
movsb
in
jo
lods
mov
bound
xlat
pop
mov
ljmp
pop
out
das
add
dec
andb
push
cmc
scas
pushf
rorb
adc
inc
mov
mov
subl
fnstenv
and
push
mov
aam
in
mov
imul
mov
test
sbb
jp
xlat
shlb
cld
xlat
xor
inc
loope
popa
sbb
dec
stc
cmp
adc
outsb
les
mov
jl
mov
int3
mov
clc
iret
int3
xor
stc
cmc
or
jae
sub
sbb
bound
lea
pop
sub
add
mov
sub
pop
cmp
mov
cmc
ljmp
stos
testl
add
inc
dec
mov
pop
sbb
cvtps2pi
or
scas
add
xchg
ds
dec
mov
test
pop
cmp
mov
pop
adc
aaa
dec
aas
gs
scas
das
loope
jecxz
jo
call
nop
fs
in
mov
jb
xlat
jo
jo
imul
cltd
lods
data16
jae
lea
jg
fisubs
pop
cmp
lret
jl
ret
stos
add
xchg
dec
mov
data16
jge
cwtl
adc
jmp
dec
pusha
or
insb
nop
jl
stos
ja
mov
addl
mov
mov
lea
insl
popf
inc
es
mov
pop
inc
stos
inc
shll
cmp
rcrl
in
sub
in
addr16
dec
fiaddl
inc
mov
ret
pop
cmp
lock
dec
rorl
pop
fs
bndstx
jecxz
dec
lret
lods
pop
jne
mov
push
pushf
adc
xchg
or
aas
inc
hlt
test
dec
movsb
and
mov
std
in
mov
std
xlat
sbb
sub
adc
fcmovnu
jge
cmp
notl
jge
out
mov
adc
adc
pop
lock
fs
fsubr
cmc
jg
sub
xlat
shlb
stos
pop
decl
adc
sub
inc
jb
scas
clc
shlb
cmpl
outsb
jbe
inc
and
adc
inc
clc
aas
adc
insb
in
lds
das
and
sbb
xor
jbe
aas
push
and
push
dec
mov
in
jns
and
in
loop
or
and
ja
adcl
in
jnp
add
push
pop
push
or
ljmp
or
sub
mov
cs
bound
sbb
pop
popf
xor
fistpll
aad
lcall
rorl
and
mov
test
sub
cs
fneni(8087
gs
aad
or
pop
dec
ds
and
mov
jo
je
loope
inc
andb
mov
xchg
ja
fadd
adc
push
neg
dec
xchg
fisttpll
nop
outsl
out
add
mov
fcmovnb
sbb
das
pop
jle
aaa
vpcmpgtw
adc
pop
adc
xchg
cmp
xor
jns
js
xchg
sub
inc
dec
lret
adc
icebp
or
sbb
cmc
jne
inc
mov
popa
dec
and
stc
inc
mov
jg
outsl
push
les
mov
add
pop
sub
int
popf
and
pop
adc
dec
cmp
mov
pop
shll
imul
movsb
ds
lock
jb
sub
jg
out
testl
cmp
sahf
push
fs
jno
data16
jl
push
addr16
xchg
cmp
frstor
addr16
inc
mov
ja
push
adc
cli
cwtl
pop
fmull
aas
out
icebp
cld
sub
inc
mov
mov
xor
fnstsw
gs
cmc
sbb
push
test
mov
imul
test
sub
inc
dec
ret
ret
clc
xchg
xor
cmp
scas
sub
mov
out
scas
sub
sbb
mov
push
in
test
inc
aas
mov
pop
cmp
mov
or
or
outsl
dec
lret
fdivrl
enter
and
aaa
inc
xchg
daa
lahf
scas
addl
mov
push
movsl
negl
cltd
mov
mov
xor
shrb
add
inc
xchg
fwait
arpl
mov
dec
pop
adc
inc
subb
daa
ficomps
push
scas
nop
sub
xchg
and
jb
push
mov
ja
mov
jo
in
pop
fnstcw
jae
sub
mov
aad
ss
add
jno
inc
pop
outsl
in
mov
jae
testl
push
mov
cmp
or
mov
pop
stc
mov
ds
testl
fwait
addr16
mov
andw
ss
mov
pusha
pop
jbe
pop
ljmp
mov
jno
mov
mov
in
dec
push
dec
mov
inc
mov
rol
sub
into
scas
hlt
das
mov
dec
fldln2
push
inc
inc
mov
dec
xchg
push
sarb
aaa
pop
pop
aad
mov
outsl
jp
cs
dec
fldt
add
sbb
xchg
xchg
sbb
cmp
outsb
sub
dec
push
movsb
outsb
push
js
add
adc
add
orl
xor
mov
leave
cmc
les
fldenvs
fidivrl
fisubs
add
jno
addr16
and
cmpsl
hlt
int3
pushf
rorb
mov
sbbb
jecxz
mov
into
mov
scas
inc
adc
aam
mov
mov
pop
xchg
inc
fadds
les
mov
jo
pop
jae
pushf
xchg
push
fwait
xchg
add
clc
into
inc
jne
pop
ficomps
or
fsubrl
fadds
adc
cmp
outsl
xchg
adcl
fadds
mov
xor
push
mov
repnz
cs
adcb
adc
mov
popf
sbb
es
mov
shlb
push
cmp
pop
outsb
adc
xlat
adc
pop
push
out
push
or
cmpsb
push
scas
lods
adc
notl
pusha
outsb
scas
dec
and
sub
or
out
jo
es
xor
je
popf
and
test
out
imul
pop
cmp
shll
ret
pop
sub
rorl
and
loope
cmc
in
in
sub
push
sub
sbb
mov
call
lods
ss
rcrb
pop
insb
push
mov
cmp
mov
outsb
lret
fistl
popf
and
mov
in
insl
sti
xlat
and
aas
push
push
xchg
in
xchg
jge
pop
or
lods
mov
and
jns
shrb
in
out
fsubs
push
leave
mov
mov
and
inc
add
or
stos
hlt
xchg
push
adc
cmpsb
in
mov
xor
loop
jle
push
push
lock
out
mov
in
push
out
ret
out
dec
loope
xor
mov
cmp
mov
push
cmp
sub
add
js
mov
xchg
xchg
or
mov
mov
inc
inc
aaa
dec
jo
cmp
int3
or
xor
ret
and
push
cwtl
jne
push
inc
dec
iret
adc
cmp
ljmp
mov
mov
mov
mov
out
lods
mov
test
cmc
push
fimull
loopne
push
inc
inc
adc
lods
adc
xchg
sbb
cld
shlb
cmpsl
inc
xchg
aas
jae
sbb
out
mov
jecxz
fcmovu
aaa
or
imul
rclb
or
jp
inc
test
in
int
bound
push
inc
in
popa
cmp
mov
mov
mov
ljmp
daa
jle
xchg
push
adc
mov
and
scas
data16
jbe
scas
sbb
stc
imul
and
sbb
fimuls
push
jnp
es
push
xchg
mov
out
add
lret
jae
mov
jp
push
push
mov
sarb
cvtps2pd
scas
push
sbb
jp
aam
lret
xchg
lea
adc
rolb
add
shl
in
jb
mov
mov
cmp
jae
lret
xchg
fisttpll
out
xor
adc
pop
jnp
lods
pop
out
push
dec
clc
popa
xchg
fidivs
sbb
nop
dec
je
pop
ds
mov
adc
orl
sub
mov
out
push
test
push
incl
pop
inc
jmp
xor
push
dec
aaa
jmp
jmp
frstor
cmp
stos
add
pop
aam
cwtl
dec
pop
nop
cmp
pop
fcomip
cmp
mov
cmc
pop
clc
adc
sahf
mov
dec
andb
repz
pop
xchg
xor
jbe
pop
shlb
cld
es
bound
js
mov
xlat
mov
repz
and
or
push
std
cmp
sub
xchg
push
js
gs
cli
pop
mov
sub
push
xor
jecxz
test
cmp
imul
fwait
lahf
add
dec
add
stc
popa
dec
sbb
mov
das
cs
addr16
pop
mov
mov
adc
cmp
mov
pop
mov
lock
insb
cltd
and
mov
ljmp
es
gs
sbb
imul
pushf
mov
xor
mov
out
or
adc
xchg
inc
lods
icebp
test
cltd
mov
or
push
cld
testl
js
and
dec
fimull
fwait
xor
mov
aaa
xchg
sahf
and
imul
xchg
push
pop
ljmp
leave
in
sub
xchg
lds
push
fimuls
push
add
imul
repnz
repnz
mov
sbb
arpl
fisttps
mov
mov
or
scas
adc
xchg
jl
les
mov
mov
push
cmp
pop
fsubp
sub
adc
cmp
dec
add
mov
int3
scas
adc
and
outsl
mov
jg
and
push
shll
mov
loope
sbb
out
js
xchg
sbb
ds
pop
pushf
cld
mov
push
inc
mov
inc
cltd
xor
into
push
and
mov
dec
arpl
popa
sub
and
roll
fs
adcb
xor
insb
loop
jns
dec
mov
daa
popf
in
clc
scas
mov
sahf
jb
pusha
out
mov
notb
cmpb
mov
xchg
add
xor
daa
mov
jg
fildl
in
adc
rcr
fcomps
pop
adc
dec
in
sub
add
ja
push
cld
fdivr
fwait
sub
fsubp
push
xchg
jecxz
pop
pop
sbbl
jb
nop
dec
xchg
pop
push
pop
loop
jmp
stos
sbb
jbe
sbb
add
adc
jbe
add
push
adc
aam
xchg
push
mov
mov
mov
xchg
lock
imul
divl
inc
xchg
fstps
aaa
jo
dec
push
jns
mov
dec
or
and
aas
lods
stos
xchg
lahf
in
dec
int3
xchg
popa
loopne
inc
cmp
test
stos
cmc
stos
shl
out
into
test
jl
dec
stos
mov
nop
mov
jecxz
xchg
data16
imul
fcomi
mov
hlt
jb
popf
mov
dec
jns
test
testb
lock
adc
call
xor
icebp
cmpsb
and
test
dec
sbb
adc
sti
bound
ds
leave
inc
rcl
aam
mov
xchg
ret
insb
adc
test
popf
cltd
jns
xor
pop
add
sbb
push
push
or
mov
jle
sub
xor
dec
add
scas
adc
xlat
lret
mov
jnp
cmp
sub
pop
clc
daa
out
addr16
xchg
xlat
lea
and
inc
adc
jle
dec
ret
cmp
add
xchg
xor
push
xchg
in
and
adc
pop
and
icebp
mov
push
adc
iret
sbb
dec
push
enter
movsb
iret
rcll
ret
nop
pop
and
pop
in
mov
lods
dec
lahf
test
inc
mov
and
or
mov
or
xor
fisttps
push
adc
fcompl
inc
or
arpl
or
fnstenv
and
sub
data16
mov
ljmp
add
cmp
outsl
lds
scas
adc
stc
insb
out
lock
scas
jbe
adc
pop
test
fdivrs
addr16
shr
xor
cltd
aad
jl
cmp
and
pop
inc
movsb
ret
cmp
mov
lret
mull
pusha
and
inc
push
xchg
cmpsb
xchg
push
pop
ds
jge
pop
jecxz
dec
jmp
pushl
lret
movsl
jno
jo
or
pop
mov
out
or
mov
rolb
in
mov
cltd
mov
ljmp
pop
jmp
movsb
mov
cmp
bound
xor
mov
inc
mov
fadd
dec
daa
cld
add
insb
dec
jae
addr16
ret
lock
xchg
jecxz
mov
jns
test
and
pop
push
popf
movsl
pop
mov
outsb
aas
test
xchg
mov
xor
xor
cmp
sub
and
xor
jecxz
mov
clc
mov
adc
jg
aad
fisttpl
outsb
or
in
cmp
fcmove
jmp
add
inc
adc
sub
jl
rclb
loope
mov
incl
in
and
or
mov
stos
xorl
fsubs
and
rcrb
ret
pop
lods
xchg
inc
mov
fcmovbe
or
inc
add
add
cmp
stos
inc
inc
movsb
xchg
lods
and
sbb
test
out
je
and
adc
mov
bound
add
add
mov
pushf
ds
mov
popf
fisttpll
mov
xchg
or
inc
mov
faddl
jb
pop
mov
push
xor
and
icebp
gs
inc
xchg
jmp
adc
jns
mov
ds
jb
sub
stc
lods
xor
inc
pop
popf
mov
push
adc
movsl
adc
xor
ficomps
sub
dec
jle
pop
xor
mov
xchg
cmp
mov
leave
jns
mov
repnz
mov
clc
cmp
mov
pop
test
jg
es
fisubl
aas
ffreep
ds
pusha
es
rolb
stc
sbb
sub
lods
add
add
push
add
testl
movsbl
sub
sub
out
mov
hlt
mov
cmp
outsl
adc
fnstenv
sub
decb
fdivl
mov
jg
and
sbb
xlat
insl
shll
stc
iret
inc
dec
jb
mov
push
and
lea
dec
mov
xor
jmp
push
test
idivb
shll
cltd
cltd
outsb
das
fnstenv
xchg
fucom
pop
arpl
mov
jle
das
out
jmp
cmp
push
into
push
mov
sbb
enter
fdivrs
std
in
mov
sbb
or
shll
movsb
jnp
dec
sbb
or
hlt
repnz
iret
pop
pushaw
push
cmpsl
mov
dec
dec
inc
push
and
mov
pushf
pop
inc
xor
out
xor
xchg
insl
mov
adc
pop
addl
iret
sbb
sub
pop
fisubrs
mov
out
pop
inc
mov
or
or
in
xchg
shl
xchg
popf
mov
mov
mov
leave
cli
mov
sub
xchg
xchg
cmpsb
and
inc
rol
push
js
std
int
rcl
jns
lock
push
hlt
aam
push
and
data16
mov
repz
dec
shll
and
subl
mov
or
dec
mov
cmp
lret
rol
pop
loopw
imul
cmpsb
sub
mov
inc
pop
cmp
push
in
sbb
adc
loopne,pn
adcl
and
add
das
rcll
movsb
mov
cltd
jge
mov
and
adc
and
mov
sti
push
sahf
lahf
movsl
sub
jl
lods
mov
mov
ret
stos
repnz
pop
sbbb
jns
cmpsl
cmc
sub
jmp
jl
divb
mov
loop
test
xchg
mov
xchg
pushf
fnstsw
enter
adc
jle
fdivl
jmp
jmp
inc
in
sub
mov
add
sub
push
stos
cld
fcoml
sarl
inc
inc
lock
jl
xchg
xchg
xlat
es
inc
sbb
ljmp
pop
xor
xlat
ret
push
mov
add
jecxz
xchg
jnp
and
bnd
jg
pusha
xchg
repnz
mov
dec
call
mov
jle
or
ljmp
mov
out
sti
insl
xchg
adc
jns
ret
jo
es
push
push
loopne
xchg
push
addr16
sti
ret
push
outsl
jns
dec
sub
xchg
sbbb
push
repnz
mov
shr
aam
mov
cmp
xchg
xchg
and
test
or
pop
and
out
mov
push
cli
xchg
fs
ja
mov
add
fs
and
scas
adc
into
mov
xor
cmpl
cld
adc
jbe
fistpll
adc
push
push
inc
mov
cmp
xchg
inc
dec
inc
push
xchg
mov
cwtl
js
jg
and
mov
pushl
xchg
inc
dec
lods
dec
pop
sub
jno
aam
inc
out
daa
int3
lahf
mov
add
add
fdivrs
xchg
int3
sub
adc
lret
into
add
fisttps
add
in
arpl
pop
rol
scas
fists
push
call
out
shll
push
sbb
ja
push
add
lret
incb
jge
lahf
test
jle
jmp
sub
or
inc
mov
es
push
xchg
push
inc
push
and
pushf
jmp
notl
mov
sbb
ja
dec
insl
dec
in
sub
cmp
add
idiv
add
and
pop
mov
sarb
paddsw
fisubrl
movsb
mov
dec
jns
mov
mov
sub
inc
jno
or
popa
and
push
xchg
add
adc
cmp
xchg
lods
inc
and
push
pop
aas
mov
add
mov
fisubs
cwtl
pop
sarl
rclb
cmp
adc
jno
nop
jecxz
xchg
inc
inc
push
or
lods
xchg
nop
push
xor
pop
arpl
cltd
out
xchg
dec
test
cmpsl
and
icebp
sbb
stos
movsb
es
ds
mov
xor
lcall
adc
cmp
loopne
imul
popl
fdivrl
inc
fisubl
pop
ljmp
imul
leave
push
mov
les
clc
ljmp
jo
xchg
push
shl
sub
inc
int
jg
cmc
mov
and
bound
cmp
in
xor
imul
mov
mov
mov
fs
mov
punpcklwd
dec
jnp
xor
fisttps
inc
cmp
hlt
in
sub
mov
xchg
lock
pop
lret
xorl
pop
sar
ds
in
lcall
jne
vmread
push
push
push
xor
pop
inc
cld
lock
adc
pop
or
fmuls
pop
sub
insb
mov
in
les
and
cmp
inc
dec
cmp
cltd
push
mov
xchg
mov
cmp
add
mov
mov
sub
inc
push
inc
jl
jae
adc
xchg
xor
sub
mov
and
int
mov
sbb
mov
add
jns,pt
pop
adc
in
xor
cmp
or
jne
add
jae
inc
dec
jl
dec
sti
arpl
mov
mov
lret
ret
stc
xchg
cmp
or
sub
stos
aaa
jno
adc
ds
lods
lds
pop
js
and
out
lret
scas
lods
xor
and
push
mov
push
cmp
jl
fisttps
pop
jg
sbb
ds
pushf
ret
cmpsl
push
fists
sub
ja
loop
outsb
adc
push
push
outsw
aas
aas
stc
jle
decl
int
fwait
dec
cmp
rol
push
mov
jge
insl
icebp
lret
and
xchg
sarb
stc
adc
out
iret
and
pop
sub
loop
jae
in
mov
mov
insl
rorl
jb
push
jle
arpl
push
push
fisubrs
ljmp
mov
and
mov
jg
je
sub
cmp
clc
mov
ljmp
aam
sbb
lcall
xchg
shlb
lret
mov
xchg
xchg
cmp
cmovo
sub
push
push
sub
ret
aam
sub
push
in
pop
dec
ret
adc
aam
push
filds
dec
incl
sub
popf
ret
dec
adc
sub
out
into
mov
insb
dec
fisubs
mov
popa
sbb
jmp
add
imul
fildll
jno
inc
stos
pop
loop
jbe
sbb
sub
push
jl
xchg
push
xchg
dec
jmp
push
cs
mov
jp
push
insb
mov
lahf
pushf
pop
pop
push
popf
out
inc
jecxz
jbe
and
cmp
leave
gs
loopne
outsl
or
fs
sub
mov
jo
cwtl
lods
nop
fstps
adc
lds
scas
icebp
cmp
in
push
rorb
and
xchg
jg
dec
cli
xsaves
cld
outsl
testl
jl
jl
stos
push
mov
mov
xchg
jae
aaa
dec
shll
fs
repz
mov
sbb
push
mov
sti
mov
pop
push
adc
lods
pop
out
aaa
inc
cmp
pusha
jnp
mov
xchg
mov
aaa
leave
fimull
mov
cmp
sub
test
and
stos
mov
add
sub
jae
inc
adc
sub
jge
sarl
dec
test
mov
pop
jbe
pop
lcall
in
jmp
data16
testl
ret
inc
aad
inc
jno
out
test
shlb
sub
lcall
out
inc
add
addr16
hlt
stos
sub
mov
or
sbb
loopne
and
jg
xor
add
fnsave
call
mov
icebp
pop
pusha
sbb
inc
xlat
pop
lret
sbb
out
sub
in
pop
testb
mov
cmc
mov
in
in
ljmp
jnp,pn
inc
or
push
sbb
mov
mov
mov
and
outsl
jecxz
sbb
cmp
in
ret
imull
jns,pn
aas
mov
popa
outsb
sbb
cmp
pushf
sub
xor
add
xchg
push
cmp
lock
add
mov
jae
cmp
sbbb
jb
push
outsl
ljmp
xchg
sbb
add
add
xor
mov
add
push
mov
jecxz
cli
cmp
mov
in
bound
mov
pop
call
rol
push
mov
cmc
mov
mov
xchg
loop
inc
pop
lds
nop
push
cld
rorl
jle
push
shll
or
mov
daa
push
iret
pop
test
push
mov
lods
das
pop
inc
loopne
xchg
mov
and
cmp
cmp
pop
jae
mov
and
or
cmpsb
or
jno
fcmovb
push
shll
in
loope
jp
and
out
imul
lea
mov
mov
mov
inc
mov
scas
or
mov
ljmp
pusha
xchg
mov
cltd
test
fildll
cmp
push
xchg
or
mov
or
cmp
jnp
out
bound
dec
ficoml
clc
addr16
or
mov
jno
sub
stos
mov
push
sub
mov
shr
xchg
add
mov
inc
mov
xchg
inc
fs
cmpl
cmp
addr16
outsl
push
in
jecxz
pop
xchg
jg
xor
out
movsb
mov
mov
pop
stos
lea
pop
and
pop
movsb
out
or
outsl
pusha
pop
mov
or
out
out
push
xor
addr16
pop
fsubr
leave
cmp
pop
pop
lods
sub
dec
insl
jnp
add
push
insl
mov
fidivrs
ret
pop
inc
xchg
fadds
mov
xor
inc
cmp
jbe
and
sub
mov
addl
mov
lock
cmc
imul
adc
mov
sub
and
add
xor
cmpsl
adc
push
sub
mov
lods
scas
dec
cmc
fisttpll
ret
add
shlb
mov
jbe
inc
jo
jnp
ret
push
pop
jmp
loopne
lahf
filds
imul
outsl
movsb
xchg
mov
xchg
pop
jae
stos
mov
loopne
inc
out
fdivrl
outsb
mov
int
sbb
js
ss
dec
jge
mov
push
shlb
xchg
push
test
iret
idivl
mov
cmc
std
sbb
fcmovne
stc
rcrb
lret
popa
mov
mov
test
arpl
hlt
mov
inc
arpl
xor
push
daa
and
jle
sbb
cltd
mov
aas
sahf
xchg
sbb
mov
mov
js
cwtl
incb
sahf
pop
fcomps
loop
xchg
adc
repz
outsb
push
mov
hlt
push
lods
addr16
cmp
clc
xchg
cmp
sub
outsb
pop
ja
mov
xchg
adc
mov
lods
shlb
cmp
mov
adcb
mov
sbb
sbbl
adc
adc
adcb
outsl
mov
out
ret
lea
or
cwtl
jl
stc
int3
call
cmc
pop
inc
mov
jno
fisubrl
aas
adc
iret
repz
std
sbb
xor
mov
and
fsubl
pop
les
sub
fwait
mov
ret
out
sbb
lcall
xor
dec
sub
add
push
inc
inc
xor
cli
pop
int
cmp
popf
popf
jl
push
lods
out
nop
mov
mov
arpl
fdivl
sbb
xchg
test
jnp
insb
adc
out
mov
dec
shl
push
mov
call
jmp
sub
mov
mov
push
xor
add
shll
jp
lcall
punpcklbw
call
xchg
incb
inc
adc
and
mov
xor
test
add
pop
lods
mov
adc
in
scas
push
and
mov
sbb
setne
jo
fwait
mov
andl
pop
ficoml
push
dec
fdivp
dec
shrl
or
sbb
xchg
fstp
mov
mov
mov
das
xchg
movl
mov
sub
cmp
jo
shll
dec
arpl
cli
sub
call
sub
fidivrs
ret
imul
pop
dec
fcomi
add
rorl
pop
lret
pop
stos
je
pop
mov
test
iretw
pushf
lds
mov
shlb
imulb
shl
mov
sbb
xchg
jle
clc
xor
inc
cmp
xchg
dec
mov
fiadds
rcl
and
cmp
popf
ffreep
push
insl
insl
jbe
cmc
mov
lods
jb
adc
jnp
cmpsb
or
jae
sub
inc
cmpsl
sub
push
inc
mov
or
xor
roll
inc
cmp
add
int3
hlt
pop
adc
mov
cmp
xchg
std
jg
mov
xlat
idivl
xchg
mov
int3
leave
cltd
ss
cwtl
das
and
outsl
and
mov
xor
pop
js
jnp
add
sbb
jg
xchg
movsl
cmp
repnz
scas
sub
xchg
sbb
iret
jb
pop
sub
scas
xchg
or
jns
shl
hlt
xchg
leave
dec
jbe
pop
fldt
stc
pop
adc
jp
out
stos
cmp
cmc
sbb
test
push
or
cmpsb
je
pusha
and
cwtl
lds
lock
stc
pop
add
sub
insb
cmp
xchg
dec
mov
pop
pop
jo
adc
cmp
pushf
or
inc
jae
pop
inc
mov
push
cmp
inc
pop
mov
mov
repnz
sbb
daa
test
xor
pop
movsb
les
xchg
jl
out
push
out
push
jns
fidivrs
daa
mov
add
icebp
movsl
pop
mov
fwait
dec
sub
xor
ljmp
cmpsb
loope
nop
mov
sub
or
data16
mov
adc
xor
xchg
cwtl
lods
andl
fbstp
cmp
cmc
scas
sbbl
stc
loope
fists
nop
dec
scas
inc
test
ret
cwtl
dec
cmp
sbb
inc
jg
pop
xlat
pop
inc
jns
test
mov
sahf
aam
sarb
sbb
mov
mov
xchg
incl
cld
pop
test
lods
ret
in
mov
mov
shrl
js
dec
and
jns
or
push
inc
xchg
sub
add
jp
sbbl
aas
lahf
sbb
mov
cmp
out
xchg
orb
xor
and
vmulpd
push
imul
pop
add
mov
les
aas
push
arpl
clc
arpl
pop
out
inc
jne
add
push
js
add
cli
add
sbb
int
addl
dec
mov
jne
rcrb
xchg
cltd
pop
loopne
lds
cmp
push
xor
ja
cmpl
jge
std
cmp
fwait
pusha
rcrl
enter
and
pop
mov
pusha
fwait
shlb
jg
gs
mov
mov
inc
imul
jo
push
fnstcw
int
aam
or
or
jp
cmp
insb
xchg
gs
sub
sub
movsb
arpl
fwait
and
int3
xor
out
and
dec
cld
jmp
data16
sbb
and
xchg
cmc
xchg
cmp
xor
pop
lods
xchg
push
jbe
push
jbe
sti
inc
jne
rcll
sbb
sbb
out
mov
popf
adc
xchg
mov
mov
aam
stos
fisubs
insl
daa
xchg
inc
cmp
insb
push
scas
jo
jnp
dec
add
scas
imul
sub
pmaxub
pop
jp
sub
sub
out
cmp
dec
adc
notb
sub
mov
dec
push
cltd
fadd
mov
test
orl
pop
and
sub
ficompl
cmpsl
out
or
ret
or
sbb
jl
mov
sti
jmp
xchg
adc
pop
inc
test
ss
xchg
push
call
adc
pushf
add
into
lods
mov
shlb
jbe
mov
test
mull
ljmp
out
fucomip
rolb
jecxz
ljmp
je
or
int
lahf
fisubs
fisubs
jp
push
out
inc
dec
int
sahf
mov
in
push
jecxz
push
mov
mov
fistps
imul
mov
jle
in
idivb
or
clc
dec
test
xchg
mov
adc
fmul
mov
fldt
mov
mov
popl
and
fldl
aaa
in
xor
xchg
call
insb
push
inc
and
push
jne
hlt
les
xor
dec
xchg
data16
cli
sbb
push
outsb
cltd
aas
sti
ds
pop
out
into
jno
dec
xchg
dec
adc
mov
adc
rcr
mov
out
ss
pop
stos
rorl
fwait
pop
cwtl
add
mov
popa
add
mov
cmpsb
das
push
pop
aaa
sub
sub
int3
xor
sub
add
test
cs
mov
xor
repz
inc
insb
pop
jmp
and
sbb
inc
pop
push
aaa
xchg
mov
mov
xchg
pop
jmp
add
jp,pn
mov
fbld
inc
pop
cltd
aam
or
fs
cltd
xchg
scas
loope
xor
jae
add
sub
dec
daa
push
ja
add
mov
xchg
or
inc
ljmp
mov
testb
dec
lds
mov
je
cmp
cmpsb
pushf
loopne
dec
leave
lret
or
data16
lods
jl
jl
and
mov
dec
ja
loope
push
loope
push
arpl
ljmp
jl
xchg
mov
test
sub
repz
mov
xlat
stc
fisttpl
cltd
testb
mov
sub
call
stos
pop
aam
lret
fisubrl
adc
shl
repnz
mov
sub
mov
daa
sbb
mov
cmpsl
pop
and
jnp
mov
pop
mov
cmpsl
jns
aad
cmp
stc
in
insb
push
adcl
adc
adc
inc
push
add
icebp
pusha
lock
mov
popa
cmc
adc
gs
cmp
xorb
aas
push
scas
imul
jmp
stc
mov
filds
out
stos
mov
cmc
cmpl
and
outsl
mov
ljmp
cmove
mov
add
aas
and
xchg
aaa
mov
mov
mov
call
sub
ret
fst
sub
popf
fdivl
aas
in
cmp
and
leave
dec
test
pop
xchg
pushf
and
stos
insl
xchg
jae
out
lods
mov
mov
mov
and
movsl
hlt
xor
xchg
dec
add
and
jb
js
mov
sbbb
pop
lahf
stos
cltd
aas
jns
mov
pop
sub
sbb
insl
mov
fnstcw
sub
jb
ljmp
or
cwtl
fscale
jge
inc
sbb
add
pushf
xchg
mov
outsl
and
pop
cmp
js
pop
sahf
sarl
jne
sbb
inc
movsb
repz
lret
mov
pop
inc
xchg
adc
inc
sub
mov
loope
cwtl
sahf
mov
pop
or
pop
xchg
lahf
mov
out
nop
ljmp
add
pop
lock
in
pop
add
call
push
std
neg
fdivrs
rol
movsl
aad
mov
inc
test
jns
lret
nop
aaa
mov
jl
xchg
out
lahf
out
test
jecxz
scas
cmp
fistl
jp
xor
or
fisubrs
inc
cmp
sub
mov
dec
stc
fwait
push
mov
iret
or
add
cmpsl
push
or
dec
cwtl
movsl
lret
jne
push
aam
aaa
flds
pop
test
push
jg
shrb
ja
push
and
lret
sti
lret
popaw
jae
ficoml
imul
add
and
das
jle
and
aad
adc
inc
fldenv
sub
ret
neg
loopne
rcr
stc
rcl
pop
jl
les
cmp
inc
inc
add
jne
jbe
adc
jnp
jno
mov
pushf
push
jp
cmpsl
lahf
in
push
in
push
mov
or
sbb
testl
nop
cwtl
xchg
sub
loop
in
sbb
jmp
js
test
shll
out
jnp
add
add
into
test
sub
std
mov
sub
sub
or
cltd
cmp
rcrb
adc
cmp
and
fildll
push
xor
mov
test
sbb
jnp
mov
add
out
cmc
mov
addl
push
setb
add
insl
mov
imul
mov
push
addr16
cli
xor
jno
insl
pushf
iret
insl
pop
stos
aam
aad
mov
sbb
mov
pop
mov
rcll
arpl
setbe
add
pop
add
mov
mov
out
fs
push
out
mov
loopne
xor
mov
add
inc
rcll
ja
sub
and
sbb
xchg
sub
mov
mov
jo
int3
mov
dec
addr16
xor
jmp
popf
cwtl
pop
les
cltd
jmp
jbe
inc
leave
jne
arpl
xchg
in
movsb
or
mov
fstpl
data16
jl
xchg
fwait
pop
sub
clc
rorl
arpl
add
mov
daa
push
dec
inc
adc
insb
jmp
lret
bound
enter
xor
adc
and
xchg
test
pop
lds
lods
icebp
shll
call
mov
iret
out
ret
sub
sti
push
aam
push
shl
insl
stos
pop
jnp
in
gs
sbb
mov
adc
addb
mov
pop
ja
movsb
scas
adc
inc
jo
gs
je
sub
xchg
jg
xchg
jle
sbb
in
orb
mov
aas
jb
in
es
mov
imul
stc
sbbb
inc
aaa
fwait
jbe
xor
sbb
adc
pushf
mov
lret
add
inc
inc
daa
repz
jns
fiaddl
mov
pop
dec
sysenter
data16
xor
cmp
push
fadd
sub
iret
ret
in
in
mov
mov
addl
mov
outsl
das
shlb
mov
in
xor
sub
aas
push
roll
jno
popf
xor
lea
mov
loope
adcb
stc
dec
mov
fidivrl
fcoml
pop
xor
push
pop
insl
fbld
xchg
lret
cmp
jle
sahf
bnd
and
inc
inc
xor
orl
ret
lock
pop
imul
rcrl
xchg
push
test
pop
prefetch
imul
lret
inc
inc
pop
testb
adc
push
scas
mov
and
sub
sbb
dec
inc
xor
fnsave
cmp
or
ret
mov
int3
add
mov
mov
dec
mov
or
shlb
dec
xchg
xchg
sub
call
stc
add
sub
push
outsb
arpl
push
cmp
pop
shrb
mov
add
xchg
mov
div
mov
pop
mov
inc
add
shll
push
add
cwtl
dec
test
mov
cli
push
in
adc
fisttps
lahf
mov
and
mov
lret
leave
or
fldt
stos
cmp
pop
sub
ss
xchg
sub
push
dec
jae
roll
cmp
mov
inc
xchg
mov
xchg
sub
push
xor
sbb
mov
cli
adc
push
or
je
dec
sarl
dec
jno
das
imul
aaa
jb
mov
inc
mov
inc
pop
fnstsw
popa
sbb
mov
hlt
gs
shll
lahf
fistpll
aam
or
es
fcoml
cld
lods
shl
mov
js
mov
nop
push
shl
sbb
hlt
cmp
lahf
test
jecxz
jno
xchg
inc
xor
adc
xor
inc
dec
imul
cmp
mov
leave
dec
pushf
mov
pop
push
xchg
sarl
push
into
enter
js
in
shrl
cltd
add
fistps
mov
lret
cmp
xchg
mov
int3
lcall
sub
adc
out
jle
shlb
fwait
cmpsl
pop
pop
rol
pop
sti
notb
nop
cltd
mov
jno
jb
pop
sbb
loopne
sub
dec
sbb
ds
loop
lock
fiadds
pop
or
int3
cmc
mov
call
sub
dec
jmp
es
jmp
mov
push
dec
addr16
repz
enter
lcall
jne
mov
add
xchg
pop
push
or
dec
cld
push
lds
enter
push
outsl
adcb
pop
or
dec
add
subl
push
rclb
push
scas
mov
sahf
jne
ret
into
xchg
mov
and
lahf
push
and
inc
mov
or
push
xor
sbb
gs
out
orl
and
scas
sbb
lcall
clc
push
mov
rcll
mov
imul
test
mov
and
pop
test
and
sahf
in
or
pop
jbe
sub
fidivl
mov
cmp
and
adc
push
test
sbb
iret
or
shrl
xchg
mov
popa
inc
jo
mov
call
dec
inc
add
lret
mov
iret
lahf
mov
fwait
mov
addr16
dec
pop
aam
aas
leave
cmc
and
fimuls
xchg
adc
clc
jns
add
lods
xlat
and
jns
xchg
lock
int
test
mov
fwait
push
cltd
add
mov
adc
mov
cmp
js
or
and
add
movsb
add
sarl
fcom
jmp
adc
ds
scas
mov
cmp
movsl
jg
pop
daa
insl
jne
cmp
fidivrl
inc
push
jmp
sub
rcl
jns
in
lcall
int
or
shll
xchg
add
outsb
bound
lods
dec
or
lea
pop
mov
pop
bound
out
sti
xchg
lret
pop
sbb
aad
dec
divb
push
push
out
out
cltd
xlat
sti
adcb
ret
outsb
and
xor
xor
push
dec
inc
lock
sbb
jg
add
sahf
mov
sbb
pop
loope
and
outsb
or
mov
cmp
aaa
push
mov
movsl
dec
push
daa
push
les
dec
in
movsb
or
cltd
mov
push
fnstcw
xchg
inc
jge
or
xchg
xchg
xor
lret
inc
xchg
ljmp
sub
mov
loopne
sahf
push
pop
cmp
test
mov
inc
fdivrs
cli
inc
xchg
nop
stos
mov
adc
or
iret
mov
call
cmp
out
mov
fcomps
movsl
and
xor
mov
pop
jp,pn
mov
mov
adc
pop
jmp
lods
ret
ss
lcall
ja
xchg
loope
sub
mov
xlat
std
ficomps
inc
gs
cwtl
dec
jmp
jne
jne
add
jo
clc
adc
push
sub
xchg
in
loope
ret
push
dec
rcll
xchg
test
mov
outsb
fwait
push
enter
pushf
aam
sbb
movsl
fidivrl
sahf
add
adc
push
cs
into
rep
bound
repnz
scas
test
adc
add
inc
inc
popf
xor
pop
add
inc
dec
and
es
out
shll
add
mov
push
clc
outsl
mov
inc
xorl
sub
xlat
daa
pop
mov
sub
div
pop
inc
mov
inc
dec
cmp
rorl
jecxz
mov
push
mov
ret
mov
das
int
lea
or
and
mov
adc
lcall
xchg
pop
push
adc
pop
fdivrl
and
repz
pop
in
sub
lods
fdivr
jbe
test
adc
pusha
add
xchg
jge
sbb
imulb
xor
orl
ret
ret
pop
inc
lahf
mov
inc
fldt
sub
push
cli
pop
cmp
lea
fistps
outsl
xchg
cmp
es
pop
mov
int3
popa
mov
add
mov
es
xor
push
add
or
dec
ljmp
mov
mov
enter
loopne
cmp
in
stos
cmp
jg
and
lods
dec
xchg
or
in
ljmp
outsb
rcrl
stos
and
cmp
xchg
xor
ss
aas
mov
dec
sub
dec
or
mov
mov
xchg
stc
je
lea
jo
addb
sub
dec
stc
sbb
push
shlb
sbb
sub
xor
xchg
mov
dec
xor
cmp
lcall
mov
negl
cmc
xchg
pop
fnstcw
pop
int
lods
jmp
les
jp
mov
jp
mov
dec
push
scas
xchg
clc
and
iret
xor
inc
aad
cltd
movsl
ret
in
mov
jno
mov
mov
notrack
push
inc
adc
pop
mov
xchg
popf
or
pop
daa
mov
push
jmp
push
cmpsl
pop
jmp
inc
arpl
xchg
xor
adc
jb
push
ret
popa
mov
pop
out
xor
aaa
inc
in
movsl
xor
mov
test
scas
xor
fldt
push
push
push
cmp
lahf
lret
adc
add
test
mov
and
popf
or
test
jle
cld
outsb
fwait
cmp
add
jecxz
sti
dec
movsb
incl
leave
in
pop
fstpl
loopne
shll
jmp
pop
xor
filds
inc
adc
nop
shl
lods
xor
in
popf
mov
shl
pop
fisttpll
iret
fwait
nop
inc
ja
jp
xor
mov
idivb
in
mov
adc
add
push
pop
add
mov
pushf
sbb
insl
xchg
sub
inc
and
mov
js
out
movsl
adcl
jbe
cmp
repz
cwtl
ljmp
add
jmp
inc
inc
rcr
push
cltd
lret
icebp
data16
inc
jnp
sbb
in
cs
dec
in
arpl
pop
cmp
sarl
jmp
dec
add
cs
stos
arpl
aaa
add
leave
push
ss
loope
hlt
jne
jle
add
pop
fwait
inc
mov
cltd
cs
xor
dec
xor
xchg
insb
les
dec
push
repnz
pop
and
jno
and
or
push
ljmp
cltd
out
out
and
shrb
inc
shl
shll
dec
xchg
push
or
mov
cmp
sub
ds
push
xchg
daa
mov
jecxz
jg
popf
xchg
sti
cmpl
inc
sub
jno
pop
out
cmpsl
and
not
cld
lret
in
dec
mov
fbld
fildll
and
loopne
mov
pop
xchg
arpl
mulb
mov
push
aam
int
subl
shlb
jmp
xor
pop
xchg
jg
fidivs
andl
mov
sbb
lds
dec
stc
inc
push
addb
inc
cmp
hlt
add
sub
dec
push
pop
das
or
mov
adc
adc
or
mov
mov
test
loope
aaa
push
clc
mov
lea
mov
dec
adc
xor
pop
or
test
rcrb
insl
sub
jbe
jmp
sbbl
pop
and
mov
cmpsl
mov
inc
mov
fcoml
imul
jge
mov
aad
lcall
cltd
dec
cli
adc
dec
sub
xorb
jmp
pop
jge
dec
out
test
popf
mov
les
push
cmpl
scas
inc
jge
jl
push
push
fmul
pushf
and
popf
fisubrl
mov
fidivl
imul
pushf
add
xor
mov
dec
sbb
insb
addb
stos
lods
iret
mov
jp
mov
mov
in
xor
leave
sub
sbb
mov
mov
adc
adc
dec
or
in
or
outsl
add
pop
mov
jge
ficoml
mov
mov
out
lret
fisubs
dec
add
fmulp
mov
mov
xor
arpl
mov
popa
inc
push
stc
adc
xchg
mov
rorb
cwtl
inc
pop
mov
lret
xchg
es
mov
js
xchg
lock
daa
test
jne
xor
mov
dec
jae
gs
jg
into
pop
inc
ss
sti
sbb
sahf
rcrb
jl
pop
and
test
lods
fsubp
lock
ret
add
dec
rol
jmp
and
inc
in
les
and
mov
insl
cmp
loope
xchg
es
data16
adc
pop
sub
lea
pop
popf
lods
cli
loopne
and
ret
pusha
mov
add
xchg
sbb
sbb
cmc
pop
testl
mov
out
mov
xor
sbb
shrl
sub
sbb
fidivrl
ret
stos
cltd
mov
dec
pop
dec
mov
aad
sahf
xchg
and
mov
fidivs
jns
out
xor
aas
pop
push
xchg
call
jle
mov
sbb
fcompl
clc
mov
xlat
nop
mov
cmpsb
cmp
pushf
sbb
jns
jns
pusha
pushf
rcrb
stc
shll
mov
inc
ljmp
fbstp
sahf
mov
mov
and
les
cmpsl
nop
xchg
push
subb
jge
pop
lret
inc
inc
cmc
push
in
mov
mov
fwait
outsl
repnz
stc
loope
mov
sub
out
jb
pop
shr
stc
cmp
adc
lock
and
xchg
scas
mov
movsb
stc
addb
add
lock
int3
idivl
or
sahf
leave
jno
xchg
idiv
mov
and
xchg
mov
and
stc
inc
push
adc
mov
stos
fs
mov
sbb
into
xchg
inc
jnp
cmc
scas
jmp
xchg
adcl
xchg
mov
push
out
jge
pop
xor
pop
jecxz
aam
mov
inc
je
inc
mov
adc
aas
push
push
test
mov
in
pop
push
mov
adc
test
lret
add
adc
adc
test
hlt
ja
sub
mov
outsl
getsec
pop
ja
push
imul
push
pop
or
cli
cs
js
xchg
xchg
add
outsb
adc
movsl
pop
pop
lret
pop
test
scas
aaa
loopne
das
in
push
ja
int
jge
loop
insl
fnstenv
add
mov
icebp
push
push
xor
sbb
push
lea
add
int3
cld
test
pop
mov
out
jb
push
and
adc
cmc
jo
xchg
in
xor
push
nop
sbb
cmp
adc
mov
and
fiaddl
mov
roll
push
cmp
push
lods
scas
dec
loop
subb
in
mov
movsl
mov
inc
mov
lret
rol
addr16
sbb
push
int
pop
aad
cmpsb
cmp
adc
mov
stos
fstps
in
pop
in
fiaddl
cmpsl
pop
mov
or
cmp
lret
mov
outsb
dec
mov
movl
sar
fldcw
adc
movl
fdivr
sarl
mov
fsubrs
mov
lods
rcl
in
shll
cli
repnz
cmp
pop
pop
lret
into
orb
ss
jecxz
insb
stos
adc
or
mov
push
popa
sbb
add
and
stc
into
jmp
das
jle
xchg
ret
or
rorl
gs
mov
push
jecxz
lahf
clc
hlt
ja
mov
mov
add
std
shrd
inc
sbb
adc
jo
inc
push
and
mov
out
jp
or
pop
jge
mov
and
repz
jmp
in
adcb
in
ds
stos
and
xor
cmpsb
mov
test
sub
pop
adc
ret
mov
stos
aaa
xchg
xchg
pop
push
ss
push
mov
cmp
xchg
jg
jmp
or
fisubrs
nop
popa
fldl2t
pop
cmp
lds
loope
push
sbb
cwtl
push
mov
xchg
sbb
popf
leave
movlhps
dec
jo
cmp
push
or
fs
xchg
scas
dec
std
mov
es
pop
pop
scas
pop
stc
lock
inc
inc
repz
cltd
cli
clc
aaa
and
pop
insl
pushf
push
pop
test
dec
lods
dec
ja
and
or
xchg
jmp
ljmp
fstl
sbb
or
mov
scas
mov
mov
mov
cld
pop
xchg
jb
lret
and
ds
insb
cmp
inc
pop
sub
shlb
cmp
inc
cmp
popa
push
and
dec
mov
aaa
ss
xor
xlat
mov
sbb
int
test
cli
xchg
push
pop
xchg
aam
je
jns
imul
push
js
je
int
sbbl
jg
xor
mov
xchg
in
call
std
sbb
push
xchg
lds
ret
inc
scas
ja
and
jp
mov
call
adc
jo
cmpsb
popf
sbb
iret
jle
xor
and
in
xchg
mov
jno
lods
adc
jge
sbb
cs
iret
adc
push
and
lahf
into
mov
pusha
push
aad
cmpsb
popf
mov
fcoms
inc
dec
gs
dec
rorb
gs
jmp
or
repnz
fcompl
leave
outsl
and
aaa
inc
inc
fs
or
cwtl
lahf
mov
mov
and
xor
movb
popa
popa
mov
nop
jg
sarb
js
jbe
lock
xor
int
dec
push
mov
cmp
jmp
push
jae
gs
xchg
sbbl
xchg
xlat
inc
adc
sarl
dec
loope
pop
in
lds
mov
push
push
fsubr
push
mov
jp,pn
pop
jle
rolb
jnp
xor
dec
out
or
nop
inc
xchg
jb
xchg
lock
cmp
pop
push
jmp
xchg
pop
inc
sahf
push
mov
jns
push
roll
bound
jo
mov
mov
pushf
jns
loop
mov
stos
mov
jmp
and
mov
ret
mov
aad
xor
icebp
mov
cmp
les
xor
testl
insl
adc
dec
inc
sbb
fwait
out
notl
xchg
and
pop
je
jnp
outsb
jecxz
jge
lea
fcmovne
jmp
test
scas
sub
pop
pop
xlat
leave
mov
cwtl
jge
xor
in
sub
inc
cli
nop
call
fwait
aad
dec
pop
clc
and
dec
xchg
inc
and
jl
test
imul
inc
ds
xchg
or
dec
gs
inc
clc
dec
fcomip
xor
adc
inc
test
sbb
adc
dec
arpl
das
hlt
cmpsl
adc
rcrl
sub
pop
enter
jbe
add
movl
jg
cmp
add
addl
adc
fsubs
lret
pop
sbb
inc
cs
or
lcall
jmp
ret
lds
fucomip
outsb
iret
or
movsl
jmp
sbb
mov
daa
push
mov
fwait
mov
xchg
mov
stos
or
clc
dec
adc
jmp
sbb
hlt
repnz
jb
out
outsb
add
jb
and
imul
jae
popf
jb
into
cmp
pop
add
frstor
mov
fwait
push
inc
jae
inc
fisttpl
cli
mov
push
int
push
pop
inc
inc
adcl
add
stos
mov
jl
fsubrl
popf
and
pop
data16
and
push
js
cli
lret
mov
cmp
inc
in
lcall
mov
mov
mov
popa
push
loopne
andnps
ss
adc
lret
scas
ds
roll
inc
jle
push
shlb
push
stos
in
popa
outsb
pop
movsb
push
xchg
lahf
or
dec
stos
push
mov
jge
in
cmp
push
inc
cmp
adc
or
icebp
push
mov
fildll
xchg
fwait
in
std
int
pop
pop
aam
or
xor
inc
add
stos
or
ljmp
int3
mov
addl
mov
cmpb
and
rclb
dec
fiadds
lret
pushf
popa
in
lcall
sbb
mov
imul
cmp
enter
jmp
jge
cltd
xor
aam
les
pushl
outsb
mov
dec
idivb
mov
lea
xor
loope
or
or
fldl
stos
jecxz
imul
xchg
shr
testl
aaa
or
or
nop
cmpsl
add
push
popa
xchg
stos
jnp
sbb
inc
in
inc
sub
xchg
movsb
pop
fcoml
pop
cmc
mov
sub
xchg
fists
fs
push
mov
enter
mov
xor
arpl
test
adc
scas
cld
xchg
mov
imul
daa
test
inc
mov
or
enter
sub
xlat
bound
ja
fwait
pop
inc
aam
dec
test
jle
sub
xchg
into
add
pop
lret
add
pop
lcall
adc
jecxz
stc
sbb
scas
lods
sbb
dec
inc
je
sbb
idiv
and
mov
or
insl
into
ret
leave
pushf
cmp
fsubp
pop
stc
dec
pop
out
lcall
mov
add
into
sbb
pop
ds
xchg
aad
adc
dec
push
es
mov
sbb
inc
mov
pop
sub
ficoms
push
push
push
imul
sub
stos
push
hlt
push
lds
mov
xlat
mov
sub
mov
outsl
ror
cld
dec
popf
inc
adc
push
cmp
test
jb
jne
int
jbe
or
in
xchg
call
pusha
mov
jno
in
ss
pop
and
lea
dec
jb
mov
outsb
pop
daa
fstl
es
cli
imul
and
orb
pop
stc
adc
mov
push
data16
lock
push
xor
repnz
subl
popa
sti
aad
pop
out
adc
jge
dec
outsb
jecxz
mov
cmp
jne
cmp
adc
insb
pop
not
and
jno
xchg
or
dec
out
imul
xchg
out
jnp
lahf
mov
jp
push
rcr
jbe
jne
in
cli
xor
xor
push
mov
and
mov
repz
hlt
and
ljmp
lahf
xor
mov
mov
add
mov
add
inc
mov
cmpsl
inc
cmp
mov
fs
mov
movsb
xlat
js
xchg
pop
mov
xchg
insb
and
mov
cltd
xchg
inc
popa
stc
pop
test
test
mov
in
mov
in
push
pushf
xchg
xlat
mov
in
faddl
leave
pushf
into
push
sub
aas
push
xchg
jp
rcl
xor
add
inc
inc
rep
fmul
movsb
push
lret
popa
bound
icebp
sub
add
mov
sub
je
lret
push
mov
das
insb
out
jno
lcall
pop
cwtl
sub
aaa
jae
and
dec
inc
xor
sbb
pop
sbb
lock
push
xchg
imulb
les
gs
out
jnp
je
sar
dec
shll
add
dec
and
fimuls
lcall
pop
insl
pop
fsubrs
sbb
cli
clc
pop
std
test
dec
jp
pop
xchg
fisubl
lods
fstps
pop
xor
in
test
xchg
pop
pop
xor
mov
mov
sarw
inc
lea
imul
inc
mov
jbe
dec
aad
ss
jnp
les
stos
lret
jl
and
adc
decl
ljmp
jecxz
fiaddl
ja
fldl
data16
xor
call
sahf
dec
loop
add
out
addr16
outsb
sub
sub
mov
imul
xchg
clc
or
cmp
scas
mov
gs
fnsave
mov
or
and
dec
int
fs
sahf
aam
lods
out
adc
sbb
xor
fst
pop
sbb
adc
xchg
mov
jae
cmp
and
stos
jge
test
mov
in
jle
push
scas
mov
aam
sbb
fs
cmp
jmp
dec
inc
mov
imul
loope
les
cld
shrb
and
cli
sub
leave
lds
dec
lcall
nop
xchg
jne
add
fprem
ffree
pop
or
cmp
add
xorb
daa
push
add
ret
jne
mov
lret
lret
jmp
cli
in
gs
push
insb
and
js
fwait
pop
add
dec
mov
dec
mov
gs
sbb
push
mov
sub
sbb
dec
test
inc
les
inc
decl
xchg
mov
lret
insb
mov
mov
sbb
out
inc
js
xchg
sbb
inc
mov
insl
mov
test
dec
pop
and
popa
leave
lods
xor
push
push
sub
adc
mov
rcll
loope
loopne
shrl
push
out
test
push
lods
scas
pop
mov
imul
push
or
or
sub
mov
gs
mov
adc
shlb
fsubp
ldmxcsr
mov
loope
dec
xchg
pop
xor
cld
dec
in
cmc
scas
dec
out
out
cmpsl
push
and
add
and
mov
punpckldq
fsubrs
cmpsb
in
dec
pop
jae
xchg
in
sbb
dec
cmp
ljmp
pop
movsl
sub
icebp
xor
push
mov
inc
pop
dec
das
loope
pop
imulb
nop
es
testb
xor
dec
lret
xchg
out
fisttpll
fldcw
push
loopne
cmp
jl
inc
sub
push
scas
fistl
gs
mov
shl
lods
test
outsb
mov
push
xor
adc
mov
adc
push
sub
cmp
sub
cmovbe
xchg
dec
pop
cmp
test
pop
aam
fimuls
jg
outsl
push
iret
into
jl
or
add
add
xor
xchg
fsubrs
pop
test
orl
push
sub
ret
xor
mov
cld
vphaddbq
pop
inc
sbb
jb
mov
out
cmc
ret
mov
jo
out
mov
inc
sbb
or
mov
sub
into
mov
mov
test
out
loope
jge
pop
pop
adc
icebp
frstor
aaa
add
cmp
out
enter
pushf
adcl
xor
stos
popf
mov
jns
fwait
cmp
scas
out
push
mov
jecxz
fmull
mov
sahf
popf
pop
into
imul
ret
sub
inc
adc
inc
xchg
cmp
mov
jl
lock
mov
pusha
adc
xchg
nop
xlat
fmuls
cltd
mov
push
sub
lcall
addl
frstor
jne
cmp
cmpsl
or
out
lret
leave
pusha
mov
inc
lret
das
jbe
rcrb
mov
repnz
mov
insl
in
push
sub
pop
decb
jg
aad
dec
mov
jnp
pop
push
adcl
jns
lahf
push
cmp
dec
jecxz
mov
push
lea
push
movsl
imul
scas
jb
test
or
pusha
and
int3
inc
mov
inc
xor
adc
push
andb
cmp
mov
pop
fdivrl
cltd
lea
dec
notb
xor
std
xchg
cmp
push
jle
les
out
mov
mov
inc
jnp
test
sub
addl
pop
mov
pusha
inc
movsb
xor
scas
adc
pop
hlt
arpl
jns
push
enter
cmp
inc
int
pusha
icebp
mov
mov
sbb
minps
sahf
push
js
cmp
push
and
cltd
xchg
lahf
pop
sub
and
outsl
jno
xor
lds
jb
loop
mov
cs
stos
movsb
jbe
cli
stos
jne
pop
jle
sbb
sti
inc
sbb
dec
insb
sub
in
fs
sub
jns
outsb
test
mov
sbb
and
sub
pushf
test
mov
hlt
fnsave
outsb
gs
push
or
pop
lods
jb
rol
jo
push
enter
rorb
or
lahf
iret
and
stos
shll
xor
jae
xchg
test
cmp
icebp
mov
xor
xor
cld
repnz
stos
out
mov
movsl
push
inc
in
jecxz
ffreep
xor
lea
xchg
icebp
daa
rol
loope
call
loope
lods
fcmovb
fiadds
mov
mov
and
cwtl
test
fmul
sbb
sahf
dec
sub
leave
dec
add
test
jne,pn
in
test
cmp
jo
dec
mov
jecxz
roll
mov
shrl
shll
iret
xchg
test
notl
cmpl
adc
cwtl
lods
add
cmp
pop
cmp
add
mov
iret
sbb
adcl
mov
int
in
orb
repnz
arpl
cmp
and
jno
nop
stc
dec
xor
and
xchg
mov
lods
mov
js
pop
and
inc
mov
int3
das
outsb
add
inc
cltd
pop
jge
jmp
xchg
jb
xchg
and
xchg
mov
or
push
les
and
cmp
and
mov
ss
xor
mov
gs
mov
fisubl
push
or
mov
cmp
out
dec
push
mov
dec
mov
xor
mov
in
fists
cmp
pop
cli
jae
movsl
dec
jae
xchg
adc
loopne
cmp
sahf
je
pop
popf
aam
sub
cmp
push
lods
cmp
and
out
rcll
sarb
add
data16
roll
adc
negl
mov
stos
imul
ds
sub
leave
jp
mov
sbb
xchg
push
inc
ljmp
mov
sub
pop
xchg
inc
repz
mov
jno
xchg
nop
mov
les
aad
or
test
push
add
in
sub
pop
mov
daa
mov
mov
and
out
lret
or
addr16
sahf
or
bound
cmp
adc
pop
sarb
sub
popf
mov
aaa
add
mov
cmp
mov
lret
inc
cmc
xlat
xchg
cmp
lods
pusha
adc
jne
scas
pop
in
adcb
cltd
dec
iret
cmp
adc
je
repnz
cmpb
sarb
sahf
data16
sub
bound
repz
mov
dec
fisubl
cwtl
rcl
loopne
popa
movsb
adc
test
mov
sbb
cwtl
add
mov
xor
mov
pop
xchg
dec
push
pop
and
dec
and
arpl
divl
cmpsl
pop
ret
sub
aas
fnstsw
mov
pop
and
inc
popf
shrl
int3
stos
push
and
push
int
xor
push
sub
fdivrl
pop
arpl
test
dec
sahf
sbb
fwait
xchg
scas
addb
pusha
mov
int3
cld
or
add
sub
in
lds
daa
inc
add
cmp
sbb
adc
jge
mov
mov
movsb
cld
mov
sets
gs
in
rcll
das
or
dec
and
lock
test
pop
xchg
rep
stos
or
negl
pop
in
mov
es
add
out
insb
mov
jmp
add
lar
rclb
xchg
clc
aas
or
mov
movsl
es
pop
xor
je
and
pop
jb
insl
jle
stos
dec
mov
fildl
mov
xor
add
mov
mov
mov
sbb
sbb
lcall
ret
or
and
xchg
dec
outsb
and
popf
lret
inc
mov
cmp
insl
bound
lods
sub
dec
loopne
push
iret
das
dec
push
push
int
push
jmp
push
scas
test
and
sahf
outsb
fs
lods
xchg
outsl
sub
decl
test
dec
sbb
in
adc
mov
dec
jo
lods
ret
enter
mov
ds
push
pop
dec
pop
push
out
aas
or
stc
mov
inc
sub
fiaddl
fs
insl
fwait
add
out
cmpsb
pushf
or
dec
insl
fs
mov
and
loop
je
aam
fdivrl
ss
cwtl
test
idivl
dec
lret
lret
icebp
adc
inc
test
xor
pusha
mov
mov
fistpll
sub
mov
lods
jbe
scas
add
push
pop
sbb
mov
dec
adc
sti
inc
das
enter
xchg
sub
and
cmp
sbb
or
xchg
ficomps
or
btc
test
insb
or
clc
in
jmp
movb
enter
and
jb
loopne
cmpsl
pop
mov
jg
popl
push
out
loope
adc
mov
adc
xor
jne
or
mov
les
cltd
int3
sub
movsb
lea
lods
lahf
daa
imul
sbb
jecxz
mov
popa
scas
lret
xlat
nop
cs
lock
test
mov
sti
lods
inc
xor
cmp
cmp
sarb
push
sub
iret
ret
mov
mov
xchg
pushl
fldcw
cltd
lret
push
cmp
rol
outsl
inc
sub
lock
jbe
pusha
adc
push
popa
dec
sbb
mov
clc
scas
hlt
and
nop
call
push
mov
aaa
dec
lods
das
out
pop
repnz
xchg
movsl
mov
push
sarl
jecxz
push
lea
and
or
xor
sbb
mov
mov
lods
shlb
mov
imul
adc
inc
scas
jbe
xchg
jecxz
gs
call
sub
jo
cmp
pop
ffreep
cmp
xchg
push
add
sbb
out
lods
or
lods
test
sub
daa
jo
or
popf
pop
dec
mov
and
les
push
mov
cmp
jnp
arpl
xlat
test
jmp
mov
xor
inc
imul
mov
inc
stc
sub
xor
jmp
inc
jmp
ja
push
sarb
test
jl
les
pushf
inc
mov
outsl
les
fs
fwait
xchg
pop
push
call
push
data16
inc
hlt
movsl
ja
or
ret
mov
jbe
adc
roll
hlt
inc
das
test
and
push
pushf
pop
popf
ret
adc
scas
dec
or
pop
cltd
ret
and
daa
push
ret
pop
test
cwtl
xchg
test
in
ret
adc
sbb
sbb
sarl
imul
sub
dec
or
sbb
test
js
mov
cmp
and
repnz
cmp
xchg
int3
and
push
add
xchg
or
lret
test
lock
add
xor
adc
fnstsw
aaa
imul
pushf
sub
les
fwait
pop
nop
add
pop
jmp
inc
jmp
mov
sbb
add
orl
xor
mov
xchg
test
sarb
cmpsl
test
cmp
sbb
jmp
addr16
mov
pop
and
mov
mov
and
rcr
lods
scas
sbb
iret
inc
call
xchg
pop
insb
stos
pop
mov
or
pushf
or
mov
xchg
popf
or
mov
inc
shrb
cmp
mov
cld
lret
xor
xchg
je
jb
mov
in
push
not
mov
test
repnz
add
icebp
test
mov
mov
xlat
stc
pop
mov
pop
orb
push
cmp
test
jmp
lret
std
into
sahf
mov
mov
xor
or
insl
rolb
les
addr16
jo
adcl
dec
sub
jns
push
cmc
xchg
mov
imul
int3
jne
xchg
pop
rorb
jmp
fmull
pop
cmp
cli
adc
call
imul
sub
pop
pushf
push
fdivrs
mov
xor
push
sub
fadds
fldt
sar
add
cmpsl
push
mov
cmp
pop
repz
xchg
xor
cmp
adc
sub
icebp
jg
cmp
push
or
test
mov
mov
stos
xchg
in
dec
xchg
inc
and
lds
mov
icebp
lods
mov
or
jmp
aam
cmp
out
mov
ficomps
mov
in
ret
mov
sti
adc
call
mov
mov
pop
outsb
dec
add
lock
adc
imul
mov
push
jecxz
mov
shrl
pop
sub
aaa
mov
or
std
jecxz
inc
aaa
push
test
inc
mov
push
movb
mov
mov
and
dec
and
repz
cmp
out
and
int3
daa
cs
sub
es
or
lret
and
je
out
in
inc
lea
lods
lock
ljmp
stc
push
popf
scas
pop
dec
push
ja
rcrb
jo
dec
adc
xor
sbb
nop
sbb
jno
imul
out
add
xchg
test
mov
mov
call
imul
test
xchg
jle
imul
or
rcll
or
add
and
fdivr
pop
sti
jne
aam
inc
out
cwtl
rorl
loope
mov
sbb
pop
push
into
mov
lds
jle
hlt
test
pop
cltd
jns
jb
rcll
jp
aam
jno
rcl
jnp
sbb
pop
fldl
in
lea
mov
enter
in
imul
or
mov
xlat
adc
and
inc
dec
loope
sub
test
iret
rcl
dec
mov
shlb
stc
add
mov
pop
stos
pop
cs
jo
xchg
jb
popf
fmul
cmc
xchg
xor
adc
mov
cmp
nop
movsb
pop
jns
ret
pop
lods
jg
inc
inc
addr16
rorl
imul
fisubl
or
ret
dec
dec
jb
mov
xchg
cmp
jno
pushf
fimuls
in
pop
xchg
mov
mov
outsl
jne
cs
sub
loop
cwtl
rcrl
dec
inc
rcll
sbb
pop
bswap
pop
loope
fstpt
lods
inc
imul
bound
xorl
jg
aas
loope
ja
mov
lds
stos
push
dec
repz
jle
stos
inc
cmc
or
sub
xor
out
dec
out
xchg
xchg
xchg
inc
int
sub
inc
mov
push
add
hlt
push
ljmp
push
aaa
fmulp
out
add
cmp
shll
or
dec
or
xchg
adc
sbb
popa
ss
loop
fadd
repz
mov
mov
lea
cmc
or
jb
scas
sbb
xor
xor
sub
jae
pop
push
pop
mov
scas
cltd
sub
sub
cmpsb
xchg
loopne
inc
in
pop
add
push
sbb
lods
sub
aas
push
ss
int3
nop
andb
out
xchg
and
cmc
test
mov
add
movsl
lock
pop
jbe
xor
add
mov
push
adc
mov
ret
lcall
inc
adc
cmp
jb
ss
out
adc
je
xor
push
out
loope
dec
push
adc
dec
xor
loopne
xor
loope
xchg
sub
sbb
or
int3
pop
xchg
jmp
sbb
fsubrs
pop
in
aam
mov
add
push
mov
mov
ja
jo
xchg
xchg
jge
ret
mov
scas
int3
or
or
aas
sub
test
imul
xchg
in
xor
jbe
mov
shlb
mov
lods
adc
shl
dec
movsb
push
int
lds
xchg
mov
jp
mov
mov
adc
lcall
push
sti
leave
lods
xchg
div
add
cmc
pop
scas
push
shlb
orb
or
sub
aam
mov
push
dec
out
inc
stc
jl
inc
push
add
push
sbb
sub
sbb
stos
sub
push
xchg
mov
out
ror
or
mov
add
mov
cmp
xor
sbb
pop
sbb
jnp
frstor
cmp
sbb
cli
sarb
hlt
rol
insb
pop
adc
pusha
loope
test
outsb
rolb
aaa
adc
hlt
jns
cs
cli
dec
mov
xor
mov
lods
and
fdivs
fidivl
or
lcall
jb
sbb
lcall
loop
stos
arpl
popf
or
fnstsw
sbb
adc
sub
jmp
mov
stos
push
addb
icebp
sub
add
inc
jp
pop
divb
test
loopne
lea
cmp
daa
sbb
mov
jns
in
rorl
addr16
lcall
jnp
test
sahf
shll
adc
jb
lea
and
adc
lcall
ret
rorb
mov
in
and
xchg
or
mov
or
dec
test
aam
cmpsl
lret
pop
mov
jae
ljmpw
and
push
push
daa
scas
clc
loope
mov
xchg
mov
int
lcall
stc
mulb
sbb
loope
xchg
daa
inc
adc
daa
out
pop
adc
cli
leave
xchg
mov
ljmp
adc
adc
ficomps
adc
lfs
xchg
adc
push
jle
std
lret
mov
out
xchg
mov
jp
pop
fsubl
cmpsb
cmp
gs
xor
xchg
pop
dec
shr
fnstenv
inc
test
push
jl
ja
std
inc
dec
shlb
repz
in
mov
rcrl
loopne
orl
loope
imul
mov
iret
adc
or
cmp
adc
sub
sti
aam
fcomp
jmp
sub
mov
mov
aas
cmp
aaa
lahf
mul
scas
sub
je
sbb
push
call
and
lret
daa
push
inc
pop
push
aas
popa
call
in
ljmp
pop
mov
xor
out
lret
iret
leave
mov
icebp
dec
movsb
xchg
pushf
in
popa
cwtl
sbb
jae
add
into
loop
pop
push
rorl
nop
dec
popf
adc
andl
pop
add
arpl
pushf
xchg
fnsave
mov
mov
sbb
xchg
ja
testb
mov
cli
cmp
sub
fidivrl
pop
iret
lods
and
test
jo
mov
and
stos
cmp
pop
in
mov
sbb
test
xchg
sti
sbb
inc
adc
addl
pop
jae
pushf
xor
int
inc
clc
push
push
pop
aam
lret
inc
mov
mov
popf
or
insb
fcoms
cli
cmp
mov
pop
mov
test
data16
ja
lcall
and
or
and
popa
sub
dec
xor
add
adc
xor
enter
pushf
dec
mov
fiadds
cmpb
fiadds
push
stos
mov
outsb
sub
or
mov
inc
mov
cmpsb
add
xchg
jp
and
pop
int3
mov
loop
sub
lahf
adc
xor
mov
cld
sub
pop
call
js
pop
subl
arpl
add
int
xchg
sub
stos
add
adc
iret
xor
xchg
sub
outsl
fisubrs
lahf
out
aaa
lods
dec
loop
inc
dec
xchg
mov
inc
mov
jns
add
and
jmp
sti
fst
arpl
cltd
repz
push
or
popa
sbb
es
sub
rclb
mov
lret
pop
call
push
jecxz
xchg
sbb
mov
shl
cmpsb
imul
loope
fsubr
orl
fdivs
std
pop
lret
nop
es
test
cmp
aaa
and
leave
pushl
xor
ljmp
mov
test
imul
test
cwtl
gs
and
unpckhps
fnstenv
pop
xor
xor
pop
sub
xchg
shrb
out
stos
push
lret
lahf
test
dec
pop
enter
xor
outsl
out
add
jle
and
dec
push
mov
rcll
push
cmp
orl
in
pusha
cmp
iret
push
lds
jb,pt
cmpsl
daa
pop
dec
xchg
pop
addb
inc
mov
mov
jl
and
pop
add
xchg
jbe
es
cmpl
fwait
adc
mov
addb
lods
push
hlt
xchg
or
lret
repnz
clc
lds
mov
popa
ss
sti
mov
adc
enter
mov
xchg
es
mov
fdiv
adcl
mov
sub
dec
push
adc
mov
mov
aas
loope
push
stc
xchg
fs
pop
dec
lret
repnz
jo
cmpsl
lret
jp
pop
inc
negl
inc
push
add
mov
or
fnstcw
pop
jmp
lock
shlb
mov
inc
mov
fwait
fs
setg
andl
jl
sbb
mov
mov
ret
inc
es
sub
add
push
in
or
iret
int
fisttpl
jbe
int
xor
sub
mov
pop
shr
mov
loope
sub
test
fldenv
dec
into
push
scas
sbb
jge
jae
push
inc
inc
or
xchg
mov
addb
jge
test
pop
daa
test
imul
leavew
cwtl
xor
stc
cld
lret
test
push
int
cmc
jb
je
ja
sbb
dec
cmp
lcall
addb
xchg
test
pop
mov
dec
hlt
pushf
incl
into
pop
cs
push
imul
les
add
cld
mov
push
orl
mov
jns
ljmp
xchg
sbb
ss
adc
mov
mov
push
lods
pushf
cmp
mov
push
loope
and
push
aad
add
xor
lcall
adc
jne
inc
lea
sbb
jge
std
popa
ja
dec
adc
mov
dec
sti
cmc
lods
mov
push
out
pop
cltd
sbb
jl
dec
mov
xor
pop
lcall
ljmp
int3
adcl
xlat
js
sbb
js
jmp
int
popf
fsubr
enter
jmp
and
lods
mov
lods
hlt
int3
out
mov
int
sub
sbb
test
mov
cmp
jle
popf
jo
inc
gs
roll
insl
jg
out
xchg
fwait
mov
jb
adc
xor
sarl
and
insb
in
pusha
mov
add
mov
lock
adc
mov
arpl
fwait
or
jl
dec
cs
sub
lods
pop
jo
into
or
dec
add
test
fisubl
push
xor
aas
xchg
ret
mov
sti
or
or
jl
dec
pusha
mov
pushf
aam
xorl
jle
dec
pop
mov
mov
arpl
sbb
add
sub
xor
mov
rcll
push
rcr
daa
add
dec
dec
lock
lea
scas
push
adc
test
repz
cmp
and
dec
hlt
arpl
xor
jmp
aad
outsl
cld
mov
mov
mov
fs
iret
adc
mov
jbe
jp
mov
lahf
sti
pop
inc
xor
pop
xor
scas
pop
xor
inc
iret
cmpsl
divb
jb
insb
mov
pusha
out
dec
test
and
dec
mov
jecxz
jns
hlt
cmp
adc
jmp
test
xchg
cltd
lock
xchg
pop
imul
dec
fstpl
adc
mov
popf
adc
mov
in
cltd
subl
mov
adc
adc
in
dec
nop
sti
lahf
adc
jnp
mov
cmc
fs
fsub
rcr
xor
scas
stos
leave
ljmp
insl
cli
lods
xchg
xor
ja
xchg
mov
xchg
mov
inc
in
mov
stos
sahf
push
cltd
test
dec
das
prefetch
pop
cmp
mov
sbb
icebp
leave
dec
jb
cli
std
data16
test
out
je
in
xchg
inc
popf
cmpsl
fninit
adc
mov
insb
mov
scas
push
mov
data16
hlt
mov
lods
repnz
sbb
adcb
stos
mov
cs
adc
mov
add
pop
punpckhwd
lods
addr16
icebp
into
inc
adc
std
xchg
and
mov
stos
mov
sub
mov
fstl
xchg
pop
lcall
xchg
mov
pop
mov
lds
push
push
cmp
pop
inc
arpl
clc
aad
vpunpckhdq
addl
lock
jp
std
iret
out
fstpl
cmp
lret
int
shll
cmp
jbe
lock
cmp
fs
psubsw
shl
insl
pop
repz
or
es
push
insl
cmp
jl
into
sbb
data16
ds
and
test
xor
xor
or
mov
insl
insl
leave
mov
test
mov
xor
mov
push
lods
outsl
icebp
inc
pop
shrb
int3
and
into
ficoms
pusha
push
sbb
pusha
xchg
xchg
leave
outsb
pop
pop
daa
inc
out
mov
and
fcoms
cmp
fistl
ja
mov
pop
mov
push
dec
xor
sbb
divb
icebp
adc
cmc
mov
jb
adc
xchg
hlt
pushf
pop
lods
pop
cld
push
lcall
jnp
inc
sub
lret
dec
sub
mov
icebp
imulb
out
stc
mov
in
push
adc
sbb
mov
xor
leave
ds
or
push
pop
daa
xor
stos
idiv
dec
cltd
roll
sbb
in
jp
ss
popa
mov
lods
jae
xchg
mov
add
sub
mov
xchg
cmp
mov
sahf
jns
mov
xchg
mov
rolb
bswap
lret
cmpsl
push
add
loope
xor
xchg
repz
pop
mov
jns
inc
fcomps
loop
loop
inc
cmpsl
jne
clc
stos
xor
test
loop
pop
ficoms
jmp
inc
and
xchg
adc
and
mov
int
rorl
add
lahf
cmp
gs
out
repnz
mov
xchg
mov
ja
adc
loope
test
popa
adc
popa
outsl
lock
xchg
cs
lods
dec
xor
jle
pop
push
daa
leave
into
cmp
add
lret
inc
mov
jb
in
or
les
mov
ret
fstps
push
jae
lret
nop
pusha
fs
mov
popf
inc
js
ds
les
lea
inc
mov
sub
xlat
cli
adc
shl
inc
jne
adc
into
repnz
inc
pop
aam
jbe
imul
js
cmc
cmpsl
mov
sbb
push
dec
dec
stos
lret
ret
push
add
hlt
inc
xchg
ss
pop
and
pop
rcrl
ljmp
fmul
scas
push
and
lds
in
addr16
xchg
or
hlt
int3
mov
js
mov
lods
cmp
pop
shl
and
xchg
cs
dec
and
hlt
movsl
pop
dec
mov
shll
pop
xor
ljmp
jbe
lret
es
add
push
xor
cmc
mov
or
mov
ljmp
ljmp
cld
int3
mov
sub
aas
add
mov
inc
pop
fildl
mov
ror
aaa
aam
push
xchg
add
jl
xchg
and
push
push
sbb
test
or
out
or
and
xchg
movsb
fdivrs
sbb
rcl
loop
adc
xlat
xchg
leave
jp
jbe
repnz
data16
xchg
clc
cmpsl
xor
fstpl
gs
into
lret
leave
xor
cld
fwait
inc
ss
pop
mov
cli
inc
in
imul
mov
arpl
lods
in
int
cmp
mov
inc
or
insb
rcll
fsubl
dec
into
xchg
mov
fistl
in
pushl
rol
insl
lret
dec
xchg
decb
stos
xor
test
jae
and
outsl
xchg
cmp
fwait
pushf
and
lods
and
outsl
push
shrb
scas
cmp
cmpl
fwait
mov
pop
cmp
jb
mov
mov
push
pop
xchg
inc
cld
and
ss
push
imull
or
add
jo
sbb
mov
cmp
add
mov
or
push
adc
mov
subb
xor
mov
aam
outsb
std
jmp
push
mov
sub
xor
and
rorb
push
push
and
test
cld
insb
mov
addb
fsubl
adc
repz
ss
clc
bound
xor
repz
add
int
mov
pop
adc
das
es
fwait
add
rorl
jb
test
test
mov
sub
out
loopne
mov
sbb
cmp
cmp
ljmp
mov
pop
addr16
dec
test
into
stc
sbb
add
fcomps
pop
pop
mov
xor
fdivrs
fiaddl
jl
test
pop
imul
xchg
fidivs
jnp
andl
jne
xor
mov
aaa
xchg
rorl
mov
repz
mov
test
sbb
or
int
xor
push
neg
fdivs
push
gs
popa
vorps
outsb
xchg
jp
jmp
leave
xchg
push
jb
popf
add
insb
mov
xor
push
test
mov
cmp
dec
shrb
and
sub
fldcw
push
xchg
into
push
iret
mov
cmpsb
and
outsl
push
imul
dec
push
xor
inc
cmc
icebp
push
scas
sub
in
std
mov
dec
aam
cmp
pushf
loope
cmp
pop
stos
pop
mov
dec
filds
sbb
insl
filds
mov
xchg
or
ds
mov
and
mov
pop
fwait
sbb
xchg
call
push
xor
xor
out
sub
pushf
shl
mov
adc
mov
adc
jnp
fildll
add
inc
lea
lock
jbe
test
mov
repnz
push
insl
stos
push
sbb
cltd
inc
fidivl
jbe
sbb
stos
push
mov
pop
cltd
lret
mov
aad
ss
in
lods
movsb
push
add
js
enter
mov
cmp
test
das
int
lret
es
inc
das
mov
shrb
sbb
mov
clc
cmp
rorb
pop
push
push
popa
jg
fs
adc
lock
push
je
call
divb
pusha
cmp
ret
js
enter
mov
adc
les
dec
stc
dec
or
push
imul
out
stos
out
dec
mov
jmp
xchg
outsb
pop
popa
mov
lret
out
dec
jp
lods
imul
scas
arpl
jg
aaa
lret
sub
loopne
pop
mov
jp
jl
les
adc
and
outsb
cwtl
and
ds
add
push
test
pop
test
hlt
pop
sbb
enter
rcll
test
out
jecxz
mov
sub
push
std
dec
ficoml
data16
cmp
sbb
mov
sbb
xchg
xchg
lods
pop
stos
push
lods
testb
push
mov
fs
adc
push
repnz
xor
dec
dec
xchg
push
rcl
pop
xor
pop
jbe
dec
and
pop
sub
jecxz
mov
xlat
cli
fcoml
mov
cmpl
outsl
xchg
ds
mov
sub
repz
pop
mov
sbb
xchg
cli
adc
out
out
jbe
clc
in
add
stos
lock
dec
lldt
sarb
data16
rclb
pushf
sub
gs
movsb
gs
jne
insb
mov
test
inc
or
stc
push
mov
test
adc
mov
or
rcrl
push
shl
dec
inc
cmc
or
loope
stc
add
insl
sub
pop
lock
mov
mov
cmpsb
in
cmp
in
or
cs
add
mov
push
push
movsb
repz
mov
mov
mov
dec
pop
push
int
out
cmpsb
mov
adcb
ret
je
mov
sub
pop
push
and
push
ud1
sbb
dec
xor
leave
gs
and
push
dec
test
inc
adc
shl
stos
xorl
inc
fidivrs
inc
sarb
movsb
nop
popf
xchg
push
push
adc
popf
or
mov
fs
aas
jmp
jae
push
adc
bnd
xchg
in
xchg
sbb
mov
cs
mov
stos
testb
jecxz
in
loop
xor
js
shrl
in
cltd
xor
das
xchg
in
aad
dec
js
cs
inc
stos
fadd
hlt
shlb
push
jns
inc
inc
les
cmp
push
das
rcr
lds
pop
pop
les
adc
jne
push
cmp
dec
pop
mov
sbb
daa
mov
les
pop
ficoms
mov
fs
adc
pop
add
pop
out
or
adc
sub
jle
jo
lcall
dec
in
mov
notb
xchg
adc
aaa
stos
cld
lahf
jae
das
jge
pop
pop
cmp
sbb
adc
dec
xchg
stc
adc
dec
mov
sbb
push
rcl
into
push
dec
pop
lcall
icebp
mov
data16
mov
pop
dec
clc
aad
pusha
mov
scas
xor
fwait
lret
mov
lcall
push
dec
mov
call
jns
int3
cmp
pop
lret
xchg
add
push
xor
inc
or
pushf
mov
cli
mov
cwtl
dec
rolb
jb
push
stos
out
jp
stc
sbb
sti
or
ret
cmp
push
dec
fwait
out
lock
adc
jne
and
in
ja
andb
cmc
outsl
lock
cmp
mov
inc
scas
sub
adc
insb
jmp
push
cmp
xor
lock
jecxz
xlat
test
fsts
mov
aad
ds
sbb
and
dec
jecxz
jle
movsl
sbbb
sti
add
jmp
sub
stos
lods
pop
fbld
and
test
popf
pop
das
mov
xchg
cld
imul
push
sub
adc
cltd
adc
jbe
rcrb
lds
in
cli
int
mov
lret
mov
adc
push
and
popf
mov
inc
cmp
sbb
push
jb
stos
sub
xchg
sbb
sub
xchg
mov
imul
mov
aad
push
push
ss
or
in
and
aaa
add
pop
fsubrs
decl
mov
out
cli
inc
cmovbe
mov
pusha
daa
cs
push
ret
pop
pop
jae
test
pop
imul
and
mov
sub
sbb
inc
mov
sub
dec
mov
adc
mov
rcrl
add
jmp
sub
dec
push
ret
xlat
jge
outsl
xchg
aad
add
imul
sub
aas
jl
fstl
daa
mov
mov
out
lahf
add
das
call
ss
xchg
addr16
cmpsl
mov
mov
sti
cmp
mov
sbb
push
pushf
xchg
pop
or
ret
push
into
repz
jle
inc
mov
and
insb
dec
insb
mov
push
jp
jle
mov
adc
rorl
push
cli
xchg
dec
add
push
jle
xchg
arpl
jb
jns
mov
daa
loopne
shll
gs
pop
mov
fdivs
lea
fadds
dec
xor
sub
test
mov
push
movsl
xorb
and
hlt
and
jl
jae
fwait
pop
cmpsl
daa
sub
les
hlt
dec
adcl
in
inc
aam
int3
add
in
add
pushw
pop
push
mov
jnp
jb
cmp
pop
jmp
fsubrl
das
adc
hlt
addr16
sbb
and
iret
filds
mov
sbb
inc
xchg
and
xchg
addr16
arpl
inc
jge
jnp
dec
daa
stos
addl
jns
imul
xchg
dec
add
mov
lret
dec
pop
or
inc
jo
xor
mov
mov
imul
pop
je
aam
loope
shrl
pusha
nop
push
fcmovb
sub
cmp
push
mov
xchg
xor
sub
roll
std
sub
mov
jle
cmpsb
push
ret
clc
cmpsb
sub
mov
sbb
pop
bound
pop
adc
flds
mov
add
push
xchg
fsubp
xchg
loopne
lret
cmp
outsl
movsb
negb
fiadds
aas
xor
mov
mov
and
add
xor
mov
dec
stos
cmpb
jns
fchs
or
ffree
xlat
clc
pusha
out
cmp
fists
mov
daa
or
xor
addl
imul
cmp
add
sbb
lock
stos
test
enter
cmp
movsl
inc
jecxz
orl
dec
xchg
mov
pop
jo
mov
stc
out
mov
popf
jae
test
mov
mov
or
add
rclb
ret
add
clc
mov
imul
addr16
xchg
add
cld
mov
js
sbbl
inc
jne
cmp
pusha
jge
not
adc
stos
mov
jnp
xrelease
xor
je
ds
jo
ja
fistl
cmp
aad
cwtl
mov
add
pop
fwait
jnp
push
mov
and
ds
dec
call
cmp
outsb
enter
xlat
cwtl
dec
fcoms
inc
mov
cmp
cmp
fucomip
xchg
dec
and
clc
scas
hlt
stos
call
cmpl
sbb
rcrb
lock
push
cmp
rcrl
jns
loop
xor
jecxz
stos
push
popf
jae
std
mov
mov
stos
js
dec
dec
jmp
in
sarl
mov
inc
sbb
jnp
pop
ret
xor
xor
cmp
or
cmp
and
xor
jle
xchg
lea
sub
mov
arpl
cs
movsb
pop
push
andb
lods
xchg
sbb
xor
add
sub
ja
xchg
outsl
cmp
mov
sarl
dec
mov
inc
jns
mov
jmp
adc
cmpsb
push
out
pop
push
dec
pop
pop
mov
adc
cwtl
enter
mov
hlt
or
cmp
rcrb
push
icebp
xchg
sub
pop
jne
stc
xchg
xor
test
sub
pop
adc
pop
dec
fadds
add
dec
gs
clc
lods
mov
adc
lret
jns
mov
sub
mov
mov
add
scas
enter
in
out
xor
pusha
fists
aaa
loopne
jl
xorl
mov
mov
cmpsb
ds
sub
add
stos
sbb
jecxz
popf
dec
push
sbb
pop
outsl
shl
in
test
mov
add
cmp
sarl
pop
loop
out
adc
add
sbb
mov
dec
stos
push
xor
sbb
popf
lods
cld
stc
xorb
icebp
jb
pop
orl
or
push
and
push
shll
jno
mov
jg
mov
dec
mov
stos
lret
mov
or
in
push
mov
std
in
dec
aaa
outsb
loopne,pt
fstl
shr
in
jge
stos
outsl
xlat
repnz
push
jg
push
sbb
inc
xchg
addl
dec
pop
sahf
popa
mov
inc
call
jl
stos
aam
fdivp
push
lea
in
dec
mov
cmp
and
inc
mov
ret
incb
mov
jge
jae
dec
mov
out
je
push
fists
ljmp
popa
adc
rcl
lock
into
ja
inc
xor
sarb
std
lods
mov
mov
ds
push
iret
cmp
divl
aas
inc
addb
addb
cmp
push
imul
lods
xchg
inc
mov
mov
stos
stos
repnz
xlat
frstor
sub
shrl
or
inc
popf
pop
scas
repnz
mov
mov
fbstp
and
adc
and
sub
adc
stc
and
je
movl
xor
adcb
or
sub
jnp
mov
fsubr
out
xchg
sub
pushl
jp
jnp
sub
fbstp
sbb
test
in
iret
out
xor
sti
pushf
addr16
cld
sahf
or
cmp
inc
jae
dec
into
aam
nop
pop
xchg
xchg
sub
mov
add
xor
lea
mov
outsb
lret
mov
pop
shlb
cmc
sub
inc
inc
orb
sub
test
pop
push
mov
loopne
mov
cmc
inc
jmp
xchg
fadds
jne
adc
lahf
imul
lods
rorb
sub
xchg
xor
popf
xlat
movsb
jae
mov
ja
xor
pop
dec
scas
cmp
daa
fs
clc
sbb
cmp
adc
loop
loope
adc
std
into
test
sahf
je
adcl
repz
cmp
sbb
push
out
fcoms
jg
out
test
sub
xchg
addr16
dec
push
mov
and
aaa
mov
mov
sbb
add
and
clc
test
insl
inc
mov
mov
or
out
aam
fidivrl
lds
dec
jmp
test
and
add
incl
mov
xchg
pop
cmpsb
push
push
dec
lods
ss
std
lea
loope
out
mov
lods
lret
mov
jg
inc
fiadds
in
mov
pop
sub
or
cmpsb
in
insl
arpl
fistpll
pop
imull
lret
pusha
xchg
mov
dec
push
cwtl
xchg
call
add
outsb
dec
pop
sbbb
movsb
scas
xchg
scas
daa
jmp
dec
test
push
push
addr16
rorl
xchg
iret
sbbb
bound
ljmp
into
daa
sub
fsubrl
ret
inc
mov
dec
sbb
imul
or
fisubl
sub
inc
mov
push
pop
cmp
and
jg
cmp
or
mov
jnp
cmp
inc
jb
imul
xor
or
inc
mov
repnz
repnz
jb
pop
pop
sbb
je
sub
cmpsl
xchg
icebp
jle
pushl
shrl
sbb
enter
cmp
push
cmp
pop
sbb
aaa
cld
push
jle
adc
pop
lods
pop
testl
jg
jge
jle
fcmovbe
int3
mov
dec
inc
fidivl
roll
sub
jb
push
and
pop
loopne
adc
cli
pop
ror
xchg
inc
or
cmp
and
inc
sub
xchg
jb
faddl
enter
mov
push
dec
jmp
xchg
stos
xchg
aad
mov
hlt
lea
mov
add
xchg
or
bound
mov
push
mov
iret
sbb
rolb
mov
mov
inc
shl
push
jle
notl
and
jmpw
mov
in
xor
stc
outsb
outsb
push
push
or
jg
int
mov
dec
sub
mov
aad
push
dec
das
mov
mov
testl
pop
mov
cmpb
test
pop
cmp
out
bnd
ds
sub
push
dec
outsl
cmp
add
mov
pop
pop
pop
iret
out
push
xor
shlb
fnstsw
mov
test
aad
outsl
pushf
push
xor
push
mov
in
in
xchg
jo
xchg
movsl
pusha
xlat
ja
cs
and
in
pop
imul
mov
rorb
xlat
lds
sbbl
lods
mov
loop
dec
or
or
mov
mov
cld
push
sub
mov
inc
mov
sub
xchg
lret
jg
xor
daa
pop
or
fadd
pop
fcoml
add
enter
mov
push
push
adc
and
pushf
mov
xor
enter
mov
adc
cmc
xchg
xchg
add
pop
cli
pop
insl
int
adc
imul
push
js
loope
pusha
sbb
popf
jne
int3
stos
xlat
xchg
sub
lods
mov
inc
lret
in
addr16
dec
adc
fistpl
sub
add
push
jnp
clc
and
jg
idiv
jbe
xor
movsl
scas
dec
push
or
ds
dec
and
aad
mov
or
fistl
adc
add
jae
call
in
and
and
xchg
lret
stos
jmp
sbb
insl
ret
es
cmp
and
cmpsl
ljmp
leave
and
mov
or
jo
cwtl
push
pushf
or
inc
jb
pop
bound
clc
push
pop
adc
ret
adc
sbb
push
jmp
cmp
cld
push
jbe
lds
imul
and
mov
inc
and
ficompl
inc
xchg
shll
add
popa
outsb
lret
and
and
adc
fldl
scas
bound
mov
loope
push
fnstsw
test
shlb
test
adc
jmp
cmp
aad
out
and
mov
je
fldl
pop
sub
pop
scas
pop
sub
icebp
mov
dec
imull
xchg
mulb
outsl
mov
jle
push
insb
cmpl
enter
orb
mov
shll
out
ret
push
loop
mov
dec
data16
xchg
push
pop
pop
push
xchg
adc
pop
lods
int3
fistps
imul
pop
adc
lea
push
jmp
push
mov
sbb
rsm
aaa
out
rol
leave
dec
cld
cmc
push
add
sub
lret
add
mov
insb
and
xor
adc
mov
imul
movsb
ss
jae
scas
lock
jmp
add
and
clc
xchg
adc
mov
push
mov
pop
inc
pushf
inc
bnd
pop
sub
loopne
and
shlb
call
mov
cmp
lods
dec
repnz
arpl
mov
mov
cwtl
outsl
dec
std
pop
or
cmp
jnp
mov
adc
jnp
cli
je
mov
pop
lods
inc
and
int
and
bnd
push
xchg
push
sahf
outsb
mov
mov
in
jl
pop
mov
dec
dec
jno
xchg
in
push
fldt
pop
adc
je
pop
cmpsl
in
sub
and
testl
add
in
sbb
push
mov
jecxz
stos
xor
xor
aaa
xor
popa
add
dec
data16
lea
in
xor
andb
ss
push
mov
dec
mov
test
dec
dec
out
gs
movl
repz
add
xchg
dec
push
stos
xlat
xchg
fwait
stos
aam
or
loopne
cmpb
push
cmp
mov
inc
push
call
iret
mov
mov
push
stos
loope
iret
or
outsb
mov
lret
sbb
xchg
mov
pushf
lods
test
lock
mov
jne
dec
leave
mov
jae
or
or
push
movsb
pop
xor
dec
outsl
cmp
fidivl
xchg
lahf
popf
push
test
in
push
out
repz
xchg
mov
dec
jb
xchg
sbb
cwtl
xchg
cmp
cmp
roll
lret
cmp
pop
dec
call
mov
adc
pusha
out
cs
pusha
rclb
mov
bound
mov
inc
cld
std
mov
jns
leave
push
push
and
test
mov
dec
ret
in
xor
loope
mov
inc
and
movsl
adc
sub
stos
adc
sti
gs
sub
pop
adc
data16
popf
and
push
dec
decl
and
iret
mov
movsb
sub
sarl
cs
inc
pop
nop
ljmp
in
ljmp
jb
sti
fxch
das
mov
sahf
sbb
fimuls
dec
or
and
xchg
push
jns
std
mov
jns
sbb
fidivl
cmp
enter
adc
lret
movsl
jo
xchg
jmp
popa
jae
jae
dec
mov
pop
xchg
cwtl
jo
fisttpll
leave
mov
mov
jmp
push
pop
daa
mov
pop
into
inc
sub
and
out
orb
lret
and
bound
insl
mov
aaa
pop
push
jmp
xlat
stos
movsl
lret
jo
inc
outsb
cmp
xor
mov
push
nop
shlb
call
pop
pop
loopne
and
xor
push
arpl
jge
sti
std
and
jmpw
jne
lock
call
in
in
cmp
mov
pop
mov
arpl
jne
cmp
cmp
int
jbe
pop
jno
in
sahf
mov
jg
mov
mull
sti
rorl
mov
mov
jge
arpl
jns
lds
dec
stc
sbb
gs
pop
dec
es
arpl
mov
jbe
or
xor
xor
popa
fcoms
stos
pushf
xor
icebp
adc
inc
mov
pop
movsl
dec
dec
dec
sub
iret
leave
lea
xchg
fldenv
mov
xchg
sbb
cmc
int3
scas
or
out
jecxz
fidivs
pop
cmp
ret
and
aad
jnp
jns
mov
int
xchg
test
pop
pop
testb
mov
xchg
mov
movsb
dec
imul
inc
mov
push
imul
dec
or
cld
lret
mov
pop
fstl
call
jle
cmp
dec
cli
les
outsb
loope
ja
add
push
xor
or
es
jbe
ss
popf
or
fldt
push
jno
xchg
sbb
clc
sbb
fcoms
add
aaa
lds
jno
outsb
fidivrs
std
divb
push
mov
xchg
pop
add
add
lret
push
jb
inc
adc
and
dec
jnp
movsb
add
int
xchg
icebp
cmpsl
xchg
cmc
mov
fildll
mov
cltd
leave
sub
adcb
dec
mov
insl
movb
push
xchg
inc
xor
stc
mov
jg
in
test
outsb
xchg
dec
leave
cmp
loope
sub
inc
dec
add
add
jns
mov
cmp
mov
dec
add
cli
xchg
outsl
sbb
add
cmc
inc
jge
xchg
stos
push
add
push
add
and
data16
das
or
add
dec
sbb
mov
test
or
push
das
xchg
lret
xchg
repnz
mov
push
and
jle
inc
out
jg
jo
mov
fs
int
idivl
and
and
mov
outsl
mov
scas
jp
lock
mov
add
arpl
pop
mov
push
icebp
and
adc
and
push
jmp
mov
loopne
in
sub
push
sbb
jnp
fst
sub
out
jno
sbb
dec
jmp
jb
cmp
pop
hlt
mov
jbe
sub
jg
push
out
aaa
add
jnp
rorb
push
loopne
pop
pop
pop
or
lret
dec
sub
sub
xor
in
insl
dec
cmp
cmp
push
dec
scas
mov
in
les
jnp
inc
mov
dec
mov
sahf
mov
movsl
jecxz
push
xor
pop
sub
popa
dec
sub
out
int
pusha
in
aad
mov
cmp
fsubrp
test
ror
fscale
jp
test
push
or
sub
push
sub
fiaddl
repz
repz
mov
hlt
imul
ljmp
dec
rorb
xchg
hlt
nop
int
dec
out
jecxz
or
fistpll
xchg
loope
sbb
inc
inc
xlat
mov
ds
pop
ror
lcall
call
dec
lods
mov
cs
sub
sbb
cmc
insb
jns
in
inc
fimuls
test
jno
pop
and
loope
mov
sub
push
dec
sbb
outsl
lret
mov
stos
cmpsl
or
adc
push
cmp
sub
jmp
cmp
flds
icebp
cwtl
inc
test
push
jg
jb
push
push
in
mov
pop
inc
and
push
mov
jmp
xor
or
mov
cltd
xchg
sub
jmp
and
pop
jb
mov
sub
pop
in
scas
jg
notb
int3
push
imul
loop
jp
jb
rcll
inc
jae
std
lret
inc
lret
mov
push
aam
movsl
jno
xchg
les
pop
or
pop
jno
fwait
xchg
cld
pop
mov
in
and
jle
je
xlat
repnz
pop
out
sbb
xchg
pushf
inc
push
fwait
lret
mov
or
or
mov
inc
scas
push
arpl
lret
and
push
lret
nop
ret
out
adc
dec
cmp
clc
test
iret
dec
out
mov
cmc
arpl
arpl
pusha
xlat
xor
add
fistl
movsl
jo
xchg
fs
outsl
add
push
and
xchg
ja
leave
xchg
bound
test
and
mov
sahf
inc
rcr
xlat
sub
je
dec
or
jne
push
sbb
ss
mov
sbb
test
lahf
push
jbe
sub
lret
test
fsubs
sub
mull
test
cs
aaa
std
in
adc
nop
out
call
cmp
inc
jle
or
addr16
int
jg
cmp
sub
sarb
xchg
mov
mov
mov
push
jp
ja
cltd
clc
inc
fmuls
loope
add
hlt
mov
inc
inc
orb
fimull
add
lret
mov
lcall
ja
fcmovnb
cmc
jnp
mov
fstpt
cmp
push
test
aad
int3
or
push
mov
push
jns
mov
mov
or
dec
xor
xchg
test
and
movsb
pop
cwtl
movsl
cmp
int3
cmpsl
push
cmp
shl
dec
cmc
sbb
xchg
and
mov
add
adc
repnz
lahf
mov
je
roll
lock
inc
std
add
add
mov
xor
in
out
out
cld
pop
dec
fidivs
and
or
cmc
mov
in
sub
orb
mov
dec
into
out
push
mov
mov
rolb
test
push
mov
mov
adc
fildl
sahf
xchg
dec
mov
enter
sub
inc
inc
in
pop
xchg
sbb
hlt
xchg
lods
and
mov
jp
pop
jne
fwait
xor
dec
test
nop
and
and
inc
mov
subb
jno
lret
loop
fnstcw
push
fucomp
mov
sub
clc
sahf
jb
xchg
dec
sub
lahf
fptan
iret
bound
adc
mov
dec
mov
mov
decb
push
sahf
loope
mov
pop
adc
hlt
and
xchg
add
call
decb
mov
ljmp
aaa
orl
flds
jns
and
and
dec
adc
mov
push
or
jp
adc
incb
mov
mov
jp
jecxz
sbb
stc
pop
sbb
dec
jge
add
sbb
and
out
loope
addl
xor
mov
cmp
mov
push
lret
mov
inc
sbb
cli
or
push
inc
cmp
jp
mov
push
out
xor
xor
aam
mov
dec
mov
ja
imul
or
shlb
rcrb
ja
aam
in
setne
cmp
jnp
scas
xchg
je
xor
mov
push
fcomip
jo
pushf
cli
test
and
in
push
fldenv
mov
sub
or
mov
push
sbbl
fwait
adc
sub
mov
aas
pop
xchg
pusha
xchg
mov
adc
and
push
incl
movsl
inc
xor
add
jbe
mov
cs
popa
test
sub
mov
push
and
xchg
sahf
mov
mov
fs
addr16
mov
ss
sbb
xor
bound
aas
addr16
cmp
and
int3
aas
outsl
outsb
or
xorl
in
aam
call
cmp
addr16
xor
scas
test
pushf
and
mov
int3
dec
jae
arpl
sbb
mov
ret
es
mov
sbb
popf
and
mov
xchg
mov
daa
adc
je
push
out
je
popf
and
cltd
push
imul
std
xor
xlat
add
or
pop
fs
xorb
sub
push
mov
fs
popf
pop
rcl
pop
gs
xchg
arpl
pop
insl
mov
push
out
hlt
ss
inc
jae
dec
out
jl
pop
pop
or
jne
inc
out
enterw
std
push
mov
push
pop
in
pop
cmpsb
lcall
or
pop
mov
mov
cld
scas
jo
mov
mov
pop
mov
divb
int
scas
adc
enter
dec
xor
dec
jp
stos
rcll
int
rol
and
sarb
mov
je
lcall
adc
cmpb
int
jecxz
mov
lods
jecxz
push
adc
mov
mov
push
dec
xor
and
cld
clc
sahf
sub
pop
idiv
jns
pop
int3
xchg
test
ret
lds
lods
pop
xchg
clc
pusha
pop
fcomps
loopne
jns
xchg
fistps
xor
daa
insb
aaa
shlb
pop
inc
imul
sbb
ret
popa
inc
xchg
ja
lock
loope
repnz
xor
sbb
lret
sub
test
shlb
dec
add
xchg
mov
popf
sbb
aam
xchg
call
scas
mov
rorb
xchg
das
inc
cwtl
mov
loop
pop
cmp
fnstcw
adc
xor
dec
leave
addb
fistpl
leave
imul
or
sub
mov
in
test
bound
sub
sahf
jl
push
inc
pop
mov
jo
lahf
cs
dec
mov
dec
mov
daa
enter
or
adc
es
cltd
ss
xchg
push
shrb
or
dec
lods
push
data16
cmp
aad
or
daa
sbb
repz
test
cs
imul
sar
and
inc
push
enter
and
jne
aad
push
insl
jne
sbbb
dec
icebp
call
jle
scas
repz
stos
les
adc
jmp
push
xor
rcrl
clc
sbb
jmp
xor
and
out
pop
iret
and
nop
fwait
int3
movsbl
popa
out
sti
loope
or
loope
sub
shrb
in
push
lret
and
dec
push
out
psubsw
idivb
mov
imul
out
repnz
or
inc
push
cmp
push
lcall
fwait
mov
nop/reserved
inc
les
add
popf
cmpsb
xchg
sahf
andb
es
ret
sbb
lcall
dec
ret
xchg
push
dec
sbb
addr16
or
cmc
ficoml
scas
fistl
in
pop
or
mov
push
inc
mov
xor
adc
pop
jb
gs
daa
loop
mov
cmp
cli
mov
xor
and
sbb
lcall
adc
insb
lret
subl
out
pop
sahf
repnz
xor
sub
lret
cmpsl
call
jbe
cmp
es
pushf
les
icebp
push
pop
inc
lcall
mov
mov
adc
or
movsb
mov
pop
xor
adc
sbb
cmp
adc
icebp
aas
mov
jo
mov
jb
jle
mov
stos
shll
fstpl
pop
jmp
dec
sbb
addr16
addr16
jg
ret
mov
sub
push
or
dec
mov
loopne
scas
jno
fiadds
into
jns
mov
sub
into
sub
mov
pushf
mov
lret
inc
or
jl
nop
daa
push
push
xchg
lret
loopne
aaa
hlt
cmp
mov
push
fyl2x
frstor
inc
stc
mov
mov
dec
test
add
xchg
int3
dec
jle
lea
jge
pop
into
sbb
lret
push
in
xchg
std
mov
les
adc
jb
pop
xor
in
jp
cwtl
dec
add
lret
bound
gs
mov
shr
lldt
mov
je
jbe
jbe
lock
std
lock
fwait
jp
push
ljmp
cwtl
test
test
or
fimull
das
dec
sub
or
and
pop
jmp
sub
xor
adc
das
lahf
cmp
add
and
loop
bound
jnp
xchg
and
xor
lcall
aaa
inc
fs
lds
jge
in
repz
repz
sahf
frstor
jmp
iret
popa
ljmp
inc
shll
movsb
loopne
ja
pop
jnp
mov
icebp
cli
pop
add
mov
mov
stos
loop
jmp
lds
inc
in
sbb
lods
adc
xor
enter
movsb
xor
mov
mov
mov
stc
in
mov
inc
int3
jb
xor
sahf
fcomps
ret
in
mov
aas
in
std
sub
sub
andl
inc
scas
xchg
xchg
int3
sahf
les
daa
pop
stc
arpl
pop
and
daa
cli
xchg
sti
lds
push
mov
dec
outsb
fwait
rol
test
outsb
mov
xchg
mov
dec
inc
pop
stc
lods
fstps
or
mov
fnstsw
adc
fistps
sbb
fs
xchg
fimull
dec
pop
jge
lea
test
clc
xchg
dec
pop
iret
fisttps
out
xchg
jg
push
xchg
pop
int3
mov
xchg
sarb
or
add
cmc
push
mov
jg
repnz
lds
stc
mov
iret
fcmovnb
repnz
sbb
sbb
pop
and
mov
sbb
aaa
data16
fdivs
mov
lods
fisubl
ret
outsb
xlat
int3
and
mull
fldcw
scas
sbb
inc
cmp
sub
frstor
inc
ds
push
notb
sub
mov
mov
jnp
xchg
xor
or
scas
daa
dec
push
inc
pop
adc
sub
stc
icebp
jae
scas
loop
loop
push
adc
out
xchg
xchg
jnp
loope
adc
xor
inc
xchg
das
add
mov
hlt
adc
leave
es
inc
mov
push
mov
loop
movsl
subb
dec
mov
jg
cmp
cld
sbb
dec
clc
or
add
sub
pop
or
xchg
xchg
jnp
mov
or
push
stos
or
mov
test
int
daa
cmp
rclb
fidivrl
insl
fidivl
and
in
cmp
or
adcl
jg
jp
inc
xor
xchg
push
aas
mov
loop
push
pop
les
sbb
push
sub
lahf
test
pushf
sbb
addr16
dec
xchg
cmp
dec
jnp
cmpsl
cmp
bound
xchg
in
testl
imul
add
mov
adc
push
sbb
mov
mov
fcmovnbe
das
xor
dec
xchg
bsf
xor
stos
pusha
or
test
scas
sbb
pop
mov
call
rcr
and
test
or
mov
cmp
sub
repnz
into
sbb
mov
dec
and
in
daa
inc
jo
lock
sti
outsl
mov
xchg
negb
out
pop
aam
and
mov
adcb
movsb
fldcw
mov
clc
shrb
aas
dec
mov
cmp
inc
pop
icebp
jb
add
sub
push
into
mov
inc
pusha
add
xchg
daa
rolb
scas
or
inc
mov
iret
rcrl
ljmp
inc
inc
insl
fildl
call
imul
inc
sub
push
pop
xor
add
in
sbb
leave
sbb
jmp
push
test
add
ss
pop
xchg
arpl
jo
or
mov
push
pop
sbb
cld
outsb
mov
lods
stc
dec
cmovae
in
loopne
mov
xchg
mov
mov
test
add
jbe
adc
adc
mov
inc
pop
inc
aaa
sbb
dec
cld
and
dec
repnz
mov
jge
sbb
inc
fmul
adc
popa
hlt
lret
xor
data16
shlb
int3
sbb
inc
mov
xlat
lea
std
subl
jb
mov
mov
out
and
in
or
das
ss
jnp
adc
rolb
movups
shrb
or
int3
inc
jecxz
add
sarb
cld
fstpt
in
negl
imul
arpl
push
cli
jg
fmull
sbb
jge
push
movsb
cltd
inc
sti
mov
lea
cmp
and
sub
pushf
lods
fmul
adc
outsb
cmpsb
push
cmp
cltd
cmp
and
adc
cmp
xchg
push
inc
mov
push
pop
movsl
cmp
xor
sub
push
xchg
xor
pop
push
lea
test
hlt
ja
jo
sete
dec
push
mov
xor
adc
mov
pop
shll
addl
mov
and
lahf
cli
sub
stos
and
xor
xchg
cwtl
insb
popf
xchg
or
cld
adc
fwait
inc
lock
movl
in
xor
aad
test
lock
push
add
divb
adc
movsb
ja
ret
jnp
ret
in
mov
sahf
fs
das
mov
mov
push
aam
adc
cwtl
js
xchg
sub
rclb
mov
adc
push
push
vmovapd
xlat
aam
cmp
jns
leave
mov
or
sbb
mov
mov
gs
cwtl
add
adc
icebp
adc
stos
rol
jb
and
scas
stc
loop
inc
cmpsl
dec
into
movsb
fdivrl
nop
inc
cli
dec
ret
add
xchg
fsubp
mov
pusha
xchg
sub
cltd
xchg
int3
sti
cmc
lahf
xchg
and
fnstsw
out
lods
outsl
or
mov
pop
mov
in
dec
sbb
and
hlt
test
addl
push
scas
mov
stos
push
cli
nop
or
sub
xor
pop
add
movsb
sbb
xchg
push
pushl
lret
out
hlt
loopne
test
rcrb
outsl
mov
sti
addl
lret
add
or
cmpsb
les
jmp
jmp
mov
leave
adc
push
adc
sub
fcomp
xor
push
add
push
cmp
pop
mov
push
pop
es
outsb
lahf
push
inc
add
and
push
xchg
daa
add
pop
cmpsl
pop
push
dec
fists
repz
adc
gs
fwait
jmp
clc
rorb
pop
mov
cmpsl
cmp
repz
mov
lcall
ret
jo
sub
jo
pop
sub
test
dec
pop
mov
imul
rclb
mov
out
mov
test
xchg
aam
sbb
inc
call
cwtl
jg
je
push
xor
pop
xchg
popa
test
test
insb
stc
rol
nop
jb
pop
lea
jo
pop
push
xorl
xchg
leave
mov
xlat
test
mov
mov
scas
int3
mov
stc
sar
sbb
subb
cmp
sub
and
sub
dec
ret
jns
lea
sub
adc
jmp
jns
add
dec
jmp
test
xchg
inc
mov
push
cmp
cltd
daa
cmp
jb
aas
pop
cwtl
adc
rcrb
mov
pop
pop
xchg
mov
lahf
pop
cmpsb
sbb
repnz
lods
xbegin
daa
outsl
repnz
inc
je
sbb
or
push
push
and
xchg
hlt
sub
cli
bound
cmpsb
pop
xchg
clc
jle
loopne
push
xchg
mov
insl
add
insb
pop
cmp
push
xchg
mov
fnsave
loop
mov
sbb
aaa
ret
jecxz
mov
les
jecxz
ljmp
sarb
pop
dec
negl
xchg
inc
add
fisttpl
arpl
inc
xchg
xor
repnz
cwtl
sub
test
cmp
mov
sub
xchg
inc
lcall
int3
adc
add
jns
lds
sub
push
adc
and
mov
xchg
fcoms
loopne
jbe
daa
mov
loop
movsl
pop
lds
sarl
xor
loop
xchg
add
cli
jnp
mov
and
jp
push
out
pusha
outsl
addl
sbb
fs
lcall
lret
adc
push
pusha
pushf
inc
fnstcw
pop
jnp
lods
cmp
jg
loop
fs
popf
or
and
xchg
push
sub
sti
scas
cmp
add
sbb
dec
or
pushf
push
movsb
add
getsec
test
add
jo
jnp
jg
pusha
xchg
add
xchg
jo
pushf
mov
pop
sahf
cmp
rolb
test
cmpsb
lahf
in
or
loope
sub
imul
ret
pusha
ret
mov
and
iret
call
push
lock
ds
push
mov
xchg
inc
sbb
mov
js
mov
leave
push
dec
orb
and
jcxz
cmp
iret
testb
xor
cmp
lock
fstpl
jno
ret
fdivrs
std
loop
repz
mov
orb
pop
les
cs
int
and
ror
gs
sbb
ficoml
and
shll
ss
xchg
xchg
pop
imul
xchg
push
neg
leave
pop
lret
pop
ss
cmp
mov
jno
mov
nop
jp
out
cmp
sub
or
jp
pop
cmp
dec
aam
addr16
imul
fs
daa
leave
jp
aam
jnp
sbb
repnz
xor
roll
xchg
rorb
dec
mov
pusha
sbb
fwait
or
pop
push
xchg
rep
int
mov
dec
mov
out
mov
imul
icebp
jae
out
loopne
hlt
cmpsl
jmp
js
roll
in
cmp
push
test
fldt
leave
mov
jno
bound
sbbb
int
add
out
inc
aaa
sbb
sarb
icebp
sub
dec
sub
rclb
cmp
call
cld
jmp
mov
into
arpl
sbb
and
in
fiadds
pop
adc
jno
jae
insl
mov
fcompl
push
arpl
nop
fbstp
jb
out
ret
xchg
push
or
jmp
push
xchg
xor
inc
pop
add
gs
leave
outsl
jo
adc
pop
sbb
mov
cli
popf
inc
cltd
idivb
arpl
sti
sbb
lods
js
iret
cld
dec
mov
frstor
daa
popf
jae
sbb
cmp
cmpsb
mov
test
bound
pusha
das
sub
arpl
add
icebp
mov
bound
out
inc
jno
sub
in
and
mov
pop
ss
jle,pn
fchs
cmc
dec
les
cli
insb
jne
jbe
fwait
lods
xor
sub
sbb
aaa
js
add
mov
fwait
pop
adc
shrl
popf
enter
xchg
mov
sahf
out
adc
or
mov
mov
add
jle
dec
ret
inc
ja
aas
pushl
sub
sarb
ja
js
sub
idivb
xchg
imul
sbbb
cmp
ret
or
jnp
rcr
xlat
fstl
or
add
lcall
sbb
popa
jnp
xchg
ljmp
loope
scas
les
stos
mov
add
mov
dec
fs
fimull
dec
in
into
mov
aas
out
cmp
cltd
xchg
lret
and
sbb
jno
mov
xchg
out
fxam
mov
es
inc
cltd
inc
xor
icebp
or
femms
push
mov
jg
adc
shll
repnz
ret
rcrb
in
push
cmp
test
inc
jnp
mov
scas
sub
and
xchg
push
inc
push
and
mov
ret
and
into
dec
jg
xor
test
inc
pusha
std
inc
daa
mov
scas
dec
ret
arpl
in
sub
cmp
lcall
shll
and
loopne
leave
enter
popa
pop
jno
sti
rolb
mov
mov
sub
push
fsubrs
mov
sub
mov
repz
mov
mov
push
mov
outsb
sub
or
dec
mov
jg
lea
push
xor
xchg
iret
pop
pop
in
or
pop
aaa
cs
cmpb
adc
lret
movsb
add
outsl
stc
cmc
in
enter
pop
push
imul
xchg
xor
into
cmp
in
imull
lahf
lea
imul
out
cld
pop
repnz
test
xor
jbe
and
inc
dec
out
mov
arpl
or
dec
popf
movsl
dec
lcall
out
mov
pushl
xchg
jae
push
nop
jns
mov
dec
mov
mov
xor
mov
mov
mov
pop
test
cmp
pop
cltd
sub
or
mov
faddl
add
idivb
fdivs
out
stos
pop
lock
mov
jb
ret
sub
pop
mov
push
sti
pop
push
inc
inc
imul
lcall
test
scas
lret
inc
xchg
mov
mov
sarb
sub
jle
sbb
jnp
outsl
scas
ror
stos
sarl
or
popa
push
gs
jae
or
call
aad
stc
xor
dec
cli
pusha
push
sbb
dec
sbb
iret
xchg
lcall
test
incb
xchg
enter
mov
loop
into
and
mov
repnz
xchg
pop
arpl
add
js
sbb
jo
int3
xor
or
cld
push
mov
cld
jmp
icebp
lret
pushf
out
test
andb
jae
push
fnsave
inc
fmuls
ficompl
push
pop
jp
and
pop
into
out
rorl
pop
jg
loope
adc
cmpsb
jo
push
aaa
adc
adc
dec
loope
pusha
cmc
inc
int
icebp
lcall
add
mov
sbb
or
xor
mov
pop
data16
sbb
sahf
adc
into
push
mov
sub
nop
mov
mov
mov
sbb
jno
dec
cmp
cmp
cs
out
fiaddl
sbb
mov
lcall
mov
and
in
outsl
out
sbb
movsl
push
adc
jns
xchg
scas
cmp
ja
mov
je
pop
js
dec
xchg
jae
jno
and
dec
gs
pusha
lahf
lock
or
xchg
sti
add
cmp
xchg
or
call
sbb
inc
xchg
cmp
inc
jp
mov
dec
aad
rcl
cld
xlat
ljmp
adc
pop
fidivl
dec
ds
sbb
push
add
mov
out
ds
ret
notb
jne
sbb
aam
mov
pop
sub
fwait
cld
gs
inc
mov
ljmp
in
fwait
and
xor
insl
in
dec
cmc
sbb
lea
xor
cmp
cmpsb
andb
stos
fdivrl
pop
xchg
mov
dec
aas
mov
cmp
dec
ret
bound
and
sarl
mov
add
adc
iret
adcb
adc
mov
out
adc
insl
jo
adc
das
adc
and
int
lods
jae,pt
add
pop
inc
xor
ljmp
add
lcall
and
sbb
jmp
ljmp
ds
insl
mov
daa
call
aas
popf
mov
ljmp
in
jne
fstpt
xor
jle
xor
ret
xor
adcl
dec
pushf
pop
and
cmpsb
stos
cli
jl
and
jne
xor
stos
sarl
outsl
jg
inc
loop
sar
dec
cltd
mov
mov
add
jl
call
pop
cpuid
xor
inc
pop
sbb
xchg
ja
cmp
fmull
daa
outsb
iret
enter
and
mov
jge
ret
xchg
scas
cmp
cld
cld
lret
sub
enter
and
mov
mov
xor
out
mov
jno
mov
xchg
test
pop
cmp
stc
sub
inc
jns
jae
sbb
mov
push
inc
clc
aam
mov
jns
fwait
xor
xchg
data16
pop
inc
mov
cmc
loope
popa
icebp
mov
or
dec
push
lret
xchg
pop
cwtl
lahf
cltd
loop
nop
movd
dec
shll
push
mov
mov
and
mov
jno
nop
sub
pop
shlb
cmp
xchg
addr16
push
push
popf
movsb
jmp
sub
lock
lahf
pop
int
xor
les
sbb
les
cld
cmp
dec
sbb
jp
or
lds
cmp
jmp
adc
jo
xlat
jecxz
inc
pop
adc
fstps
push
mov
fists
and
push
test
fs
and
add
andb
out
cld
mov
mov
add
and
sub
fsincos
fists
inc
jp
repnz
rorb
inc
int
icebp
cmp
cmp
sub
lahf
into
mov
and
bound
cmp
fldpi
and
insb
fidivrs
fucomip
and
or
aad
mov
cmp
mov
push
gs
cmpb
pop
xchg
sbb
pop
sub
mov
push
or
push
mov
pop
imul
inc
repnz
pop
js
jo
gs
scas
and
push
roll
stos
push
or
aas
rcrl
xor
pop
repz
scas
sbb
popf
add
jge
imul
ljmp
mov
push
pop
insl
adc
mull
icebp
push
inc
xchg
arpl
popf
xlat
adc
ret
jb
mov
pop
lods
jo
rorl
pushf
shll
and
lods
dec
sti
jle
jge
sbb
enter
dec
add
sti
dec
sbb
dec
mov
fildll
xchg
popa
rcl
add
leave
lret
lods
lcall
out
ja
cmp
cld
in
add
push
xchg
mov
xchg
sbb
rcrb
shll
orb
dec
neg
cli
aas
jg
inc
into
add
pop
out
dec
in
daa
test
and
outsl
pusha
or
push
pop
inc
xchg
scas
adc
ja
jl
mov
mov
cwtl
mov
loop
mov
sub
lahf
mov
test
dec
push
push
fmul
cld
adc
gs
das
inc
jns
lock
xor
lcall
cs
stos
popf
push
rcr
dec
jge
stos
out
jb
ret
mov
test
stos
pcmpeqd
mov
outsb
jae
and
orl
outsl
pop
lret
ljmp
jp,pt
int3
jge
es
cwtl
ljmp
mov
sub
push
clc
icebp
xchg
hlt
add
mov
into
jmp
into
mov
or
add
ss
outsl
ret
pop
cmpsb
xor
mov
jmp
push
mov
adc
fwait
or
test
movsb
push
icebp
or
pop
popf
inc
pusha
mov
in
sbb
add
and
out
int
andb
sahf
out
loope
and
ds
jae
jae
pop
xor
push
stc
mov
movsl
xchg
stc
xor
sub
data16
int
mov
test
sbbl
jge
mov
mov
test
push
test
xchg
xor
add
pop
rolb
mov
xchg
adc
adc
in
dec
xor
or
adc
js
push
dec
lods
xchg
mov
mov
or
cmp
js
sbb
or
mov
mov
loope
daa
lods
and
les
xor
fdivrl
xchg
loopne
mov
scas
das
test
push
cmp
ret
stos
aam
outsb
sbb
insl
fs
fwait
jnp
push
cltd
in
call
es
stos
je
xor
arpl
aas
push
adc
addr16
pusha
mov
xchg
clc
xchg
cltd
and
inc
cmpsl
xchg
pop
shrb
pop
int3
adc
pop
and
les
cmp
repz
xchg
pop
ljmp
outsl
scas
ret
bound
insl
lret
jb
gs
or
mov
insl
je
push
cli
andl
and
or
push
gs
lods
stos
xchg
iret
cli
sbb
bound
sub
push
in
in
das
adcb
sahf
pushf
xor
jo
dec
rcl
incb
lcall
xchg
jno
decl
xchg
imul
lea
and
repz
cmpsb
adc
and
es
repnz
and
repnz
movsl
or
inc
or
add
pop
test
addr16
dec
repnz
adc
test
sub
push
pcmpgtw
imul
call
jle
fiaddl
or
pop
cmp
ljmp
cs
mov
and
adcb
adc
addr16
popf
leave
xchg
scas
jp
mov
addr16
adc
dec
ficomps
ret
sti
scas
push
daa
pop
mov
push
inc
popa
addr16
int
lcall
adc
arpl
popa
adc
add
dec
cld
fmuls
ds
rcrb
lods
push
std
jne
aam
orl
arpl
xor
ficoml
fldl
aaa
cmc
icebp
ret
and
mov
rorl
ss
jnp
notb
daa
loopne
mov
jnp
mov
and
pushf
mov
mov
data16
push
xchg
sbb
pop
nop
std
dec
out
jne
rolb
jecxz
or
pusha
inc
rorl
adc
imul
dec
loopne
fisttpl
aam
pop
pop
and
pop
repnz
aam
sub
cmp
add
push
aas
and
pop
jmp
int3
sub
aam
dec
cmp
or
push
loope
mov
out
push
lds
xchg
cmpsl
pop
aam
xorl
sub
in
and
xchg
mov
leave
push
mov
xchg
je
ret
cmp
fisubs
and
test
fmuls
fdivr
pusha
call
es
lods
or
out
xchg
dec
ud0
inc
mov
mov
cwtl
dec
enter
xchg
gs
inc
dec
push
inc
lea
xor
xchg
xor
into
push
or
popa
xlat
cmp
ret
mov
sti
cmp
xchg
fstpt
mov
pop
lret
fisubrl
mov
arpl
or
sbb
js
jo
mov
or
pop
xchg
xchg
cmc
xchg
daa
mov
rcrb
inc
daa
xor
mov
cmc
xor
call
shr
aaa
lds
std
mov
xchg
jae
outsb
inc
jnp
call
cmpsb
cs
mov
inc
push
mov
or
fdivrs
bnd
decl
adc
adc
dec
cli
mov
outsl
or
mov
mov
test
jbe
mov
sahf
xor
inc
adc
jecxz
mov
xchg
test
stos
in
sti
mov
push
aas
push
loop
cmp
repnz
jnp
xchg
or
cmpsl
pushf
enter
mov
mov
out
adc
mov
addr16
sbb
push
test
enter
in
cli
mov
push
mov
fwait
int
or
sbb
out
imull
add
xchg
mov
mov
ds
nop
js
sub
ds
add
daa
decb
shrb
push
in
pop
and
dec
leave
pop
dec
fldenv
roll
enter
cmp
push
out
test
xchg
and
push
dec
test
cmc
push
lds
or
lcall
xchg
cmp
inc
insl
aas
push
xor
add
mov
ss
dec
imul
pop
mov
outsb
iret
sbbb
and
fcomi
or
rorb
pop
adc
decl
pop
rolb
sarb
push
fsub
out
loope
test
iret
cmp
push
addr16
cli
repnz
addr16
adc
orb
cs
orl
lea
arpl
mov
mov
cld
mov
outsb
xchg
stos
pop
shll
push
pop
mov
jae
sub
sub
adcb
sub
add
mov
push
mov
mov
call
or
ja
jle
xor
jl
lods
or
sub
mov
subl
sbb
jle
sub
jg
mov
popa
or
jne
pop
cmp
hlt
insl
jmp
push
pop
dec
adc
sar
jb
ljmp
inc
aam
in
movl
roll
jnp
repz
nop
sbb
xchg
cmp
shlb
mov
fwait
gs
mov
jmp
sbb
in
cmp
sarb
mov
sub
pop
mov
mov
scas
jecxz
dec
sbb
push
mov
cmp
xchg
add
mov
jo
bound
testb
insl
icebp
and
mov
lss
out
push
cwtl
dec
test
dec
fidivs
mov
sbb
pop
out
enter
push
sbb
mov
fdivrs
aas
in
mov
jnp
xchg
dec
fdivs
mov
sub
xchg
xor
lahf
lret
sub
push
pop
rorl
and
jae
es
movsb
push
shrb
in
repz
out
or
pop
and
das
data16
daa
mov
rcrl
jmp
push
or
xchg
dec
mov
fisttpl
cmp
jne
inc
imul
jo
mov
sbb
sahf
rcrl
cwtl
inc
pop
xchg
cwtl
dec
cmp
lcall
jb
lret
sahf
mov
outsb
xor
mov
jne
stc
mov
pop
incb
sahf
and
ljmp
sub
sub
sahf
je
out
imulb
out
xchg
and
add
adc
sbb
test
adc
push
out
mov
xchg
mov
aaa
fucomi
mov
jb
fsubl
stc
jmp
into
inc
lds
aaa
shlb
ljmp
aad
cmp
mov
lds
loop
movsb
pushf
inc
mov
shll
ret
push
sahf
idivb
es
push
scas
pop
mov
sub
rclb
out
les
sbb
jge
add
test
push
mull
xchg
add
mov
sub
stc
js
mov
in
int
call
daa
in
out
scas
mov
add
enter
mov
in
std
lret
roll
jge
nop
sub
xor
je
leave
jmp
sahf
push
fbld
lods
movsb
cmp
lahf
cwtl
out
fimull
pop
loop
subl
xchg
jo
loop
movl
int3
scas
sub
repz
loop
inc
mov
movb
ja
inc
xchg
push
jmp
adc
mov
cmp
adc
inc
cmp
jbe
lock
inc
xchg
fstpt
int3
mov
dec
push
iret
aaa
movsb
jmp
fdivs
mov
push
jg
enter
insl
push
pushf
popf
adc
cltd
add
lcall
push
rcll
adc
add
pop
jl
add
iret
movsl
cmc
outsb
cltd
mov
push
cmp
lods
addr16
push
shr
pop
and
jge
cmc
push
mov
and
mov
lahf
lahf
nop
arpl
not
cmpl
jae
or
leave
sbb
and
jmp
xchg
enter
cltd
loope
sbb
pop
adc
jp
int3
lcall
ja
dec
lock
popa
cwtl
test
push
adc
pop
vmovdqu
adc
xchg
jl
out
push
xlat
pop
loopne,pt
popa
call
popf
sub
fldenv
inc
stos
lret
push
orb
jl
into
mov
rcrl
mov
mov
and
into
shll
repz
mul
mov
or
je
ja
and
mov
popa
mov
out
inc
inc
out
jge
add
test
dec
ljmp
sbb
dec
in
xchg
cmp
push
iret
dec
pop
jecxz
adc
adc
add
add
jg
and
adc
negl
jb
ret
adcl
dec
adc
or
push
xchg
dec
es
pop
testb
xor
mov
in
orb
shld
or
xchg
xchg
sarb
clc
cmp
aad
out
adc
test
pop
in
sub
int
outsl
stos
lds
sub
or
pop
mov
dec
stos
and
sbb
mov
xchg
add
loop
jl
movsb
test
pop
sub
fldcw
mov
jecxz
jbe
repnz
cmp
dec
scas
mov
fsubl
sbb
lret
pop
and
dec
sbb
es
cmp
mov
mov
and
cmp
popa
mov
jns
pop
cld
outsl
fnstcw
and
jg
aam
insb
jmp
jl
mov
popf
lock
imulb
dec
lcall
jg
mov
rcrl
test
enter
add
sub
add
jle
push
lret
popf
mov
loope
testb
mov
daa
ja
cmp
inc
jne
mov
adc
ret
inc
jecxz
jge
ja
fmull
ljmp
mov
out
cmp
push
nop
adc
fnsave
inc
xchg
sbb
jb
jl
or
addr16
int
jnp
xchg
and
push
rcl
jae
jae
ds
sbb
lret
jecxz
cmp
sarb
or
or
in
mov
jne
icebp
mov
xchg
dec
lds
gs
popf
test
lock
aas
mov
shr
lret
pop
or
jne
fsub
movsb
data16
fwait
pusha
xlat
dec
mov
fsubrs
xchg
jge
pop
lods
mov
aad
dec
mov
aas
mov
jno
enter
jo
sti
es
cld
mov
roll
mov
fldl
fisttpl
push
jno
mov
into
xchg
inc
inc
fcoml
cmp
fidivrl
popf
or
mov
sahf
cmp
dec
cwtl
push
mov
bound
add
shl
rcll
stos
sti
adc
sub
adc
fsts
movsl
loop
sbb
push
push
add
out
test
cmp
pop
mov
lds
lock
inc
jle
xor
insb
movsl
sub
mov
push
mov
cwtl
flds
shl
add
movsb
xlat
je
sub
int3
mov
stos
inc
push
jae
les
js
cltd
loope
std
inc
xor
subb
mov
sbb
sti
inc
mov
pop
push
mov
in
jno
add
cmpsl
fidivs
jo
pop
lret
or
aad
fnstsw
test
pop
arpl
pushf
movsb
sbb
lods
and
icebp
aad
call
rcrb
test
cmpsl
loope
call
das
mov
sbb
lock
lahf
cmp
inc
pop
add
adc
cmp
lods
pop
addr16
lret
shr
inc
in
fidivs
mov
or
jo
subb
pop
out
addr16
stos
pop
popa
xchg
mov
arpl
out
adc
call
pop
xchg
cmp
repz
iret
mov
shlb
inc
aaa
jmp
mov
or
mov
imul
adc
nopl
inc
pop
cltd
pop
adc
stos
xchg
into
sub
pop
dec
gs
add
dec
mov
xchg
sub
std
xor
mov
and
mov
pop
out
and
cmp
cmpsb
jb
mov
jb
dec
sbb
arpl
ror
hlt
data16
insl
adc
mov
cmp
sahf
pop
jp
loopne
stos
movsb
addr16
pushf
stos
adc
inc
ja
ds
sbb
mov
jb
mov
push
lret
cmpsb
lahf
movb
lds
fadds
pop
jnp
sub
aad
dec
adc
insb
lock
in
xchg
mov
add
dec
mov
add
iret
inc
jp
es
sbb
mov
cmp
cltd
mov
and
and
or
ret
xchg
lods
cmp
jo
mov
sub
das
xor
fwait
into
mov
and
sbb
xchg
push
lea
xor
leave
unpckhps
scas
push
add
idiv
push
in
adc
mov
add
dec
int3
xchg
jmp
fcmovnbe
or
mov
sbb
dec
insl
out
fwait
movb
push
in
fdivl
add
pop
jge
dec
scas
rcl
sbb
jle
in
test
popf
sbb
pop
mov
lea
dec
sub
stos
mov
icebp
dec
sbb
and
out
xchg
jg
ja
fistpl
jnp
sub
mov
shlb
jns
in
sub
mov
test
das
sbbl
sti
xorb
sbbl
mov
scas
adc
rclb
xor
xchg
xchg
mov
pop
xchg
xchg
jnp
mov
dec
das
dec
xor
pusha
or
sbb
out
dec
orb
add
and
pushf
sbb
and
enter
int
cs
sub
hlt
jae
jo
dec
pop
sbb
inc
xchg
pop
mov
or
dec
cld
xchg
jne
leave
push
dec
stc
push
xorb
lods
and
jns
push
rclb
adc
or
rcll
nop
mov
les
daa
sub
xchg
lock
or
xchg
ret
sub
mov
mov
cmp
cmpsl
mov
push
xchg
das
repz
cli
pop
mov
in
jge
or
fs
and
and
loopne
push
das
add
gs
js
mov
mov
adc
xor
mov
lcall
loope
xchg
adc
imul
test
pop
sbb
imul
mov
mov
adc
movsl
mov
movsl
or
and
inc
cmp
xor
addr16
push
lods
mov
sub
dec
jb
push
or
cmp
mov
in
xor
xchg
pop
push
push
inc
pop
jl
jg
shrl
data16
cmpsl
inc
hlt
push
mov
push
mov
sub
dec
sarl
mov
lret
sbb
leave
mov
lods
push
test
cmp
scas
movsb
imul
push
mov
aaa
andb
ds
inc
addr16
jmp
xchg
inc
js
adc
sbb
or
add
lock
roll
loopw
hlt
or
clc
cmpsl
sub
adc
pop
repnz
mov
stc
jp
stos
in
adc
and
enter
jbe
jmp
dec
in
stos
mov
stos
fstl
lods
pop
insl
cmp
dec
out
inc
push
popf
data16
add
jl
out
adc
out
push
xchg
cmp
or
into
add
pusha
fmulp
in
inc
add
insl
fsubs
dec
stc
mov
xorb
ror
inc
dec
cmp
sarb
daa
imul
xchg
loopne
into
mov
and
jge
mov
int
push
pop
aam
movsb
jo
cltd
sub
or
in
pusha
call
clc
xchg
jb
pop
popa
pop
repz
repz
pop
add
fimull
pushf
test
int3
scas
and
aaa
sahf
and
pop
sub
mov
test
outsl
hlt
or
nop
scas
scas
add
ret
gs
jbe
or
push
cmp
loop
mov
sbb
mov
stos
lods
push
dec
sti
pop
jns
jno
std
add
and
xor
pop
mov
pop
or
incb
aas
call
sbb
outsb
mov
fdivs
xor
lret
lds
mov
ds
jbe
xor
mov
fidivs
dec
ljmp
test
mov
sti
cli
dec
inc
ljmp
mov
lock
pushl
lea
jns
lahf
dec
loopne
adc
push
jle
adc
int
mov
test
dec
in
cmp
sarb
push
ss
fildl
xchg
lret
xor
xlat
cld
fs
mov
add
mov
pop
jne
out
pop
sbb
fwait
push
and
lds
push
inc
lods
test
add
inc
adc
mov
and
jne
xor
mov
and
popa
mov
dec
lret
imul
adc
xchg
mov
enter
mov
mov
cli
cltd
xchg
mov
orb
xchg
pop
stos
push
push
cli
into
jnp
push
pushf
bound
adc
mov
jb
adcl
xchg
cmp
divl
stos
jecxz
test
cmp
cmc
cmc
ficompl
sahf
mov
popa
xchg
pop
mov
mov
or
fstpt
mov
push
stc
mov
out
pop
lods
jmp
pop
sub
leave
mov
iret
push
pop
mov
fcomi
leave
test
testb
es
jmp
xor
sbb
insl
je
cli
iret
out
call
testb
jnp
inc
xor
dec
arpl
leave
insl
loope
cmp
fstps
pop
xchg
cmc
scas
adc
and
xchg
pusha
lods
ss
adc
fistpll
xchg
mov
push
mulb
mov
xlat
xor
popa
sti
xlat
call
inc
xor
fs
movl
outsb
popf
es
and
push
xchg
iret
imul
adc
repz
aam
pop
andb
cld
scas
jmp
lret
adcb
mov
xlat
rolb
faddp
mov
cli
repnz
mov
scas
push
imul
lea
sub
leave
pushl
mov
push
dec
fdivs
pusha
outsl
clc
inc
add
add
cld
ja
adc
xor
test
cmp
mov
cwtl
mov
cmpsb
frstor
xchg
inc
lods
dec
incb
mov
xchg
inc
dec
das
mov
add
addr16
xlat
cmp
or
aad
enter
cmpsl
fadds
xor
cwtl
in
add
aaa
sub
sbb
add
sub
test
loopne
pop
mov
cmp
icebp
push
mov
cmp
adc
ss
xchg
mov
lahf
clc
xchg
fcoms
sbb
out
mov
loop
dec
xchg
int3
loopne
scas
lcall
xchg
rcrl
inc
mov
scas
add
push
or
jns
je
sub
xchg
push
dec
arpl
cmp
jns
ss
int
push
out
insl
pushf
sbb
dec
adc
lock
pop
and
sub
idivb
fsubrs
add
std
push
mov
out
sti
mov
xor
sbb
sti
inc
cli
sti
jg
mov
cs
pop
movsb
cmp
imul
cmp
cmp
std
and
inc
es
into
scas
mov
dec
jecxz
inc
out
sub
jae
repnz
cmp
fcoms
xor
jae
in
lock
popf
pop
je
and
xor
sbb
jl
jl
ret
cmp
lods
xor
xor
pop
cmp
loope
dec
fdivrp
pop
outsl
mov
sub
shlb
out
or
pop
mov
push
lret
xor
mov
movsl
test
repnz
test
add
hlt
les
add
shll
sub
sub
divl
mov
pop
xchg
mov
int3
repz
sub
int
and
push
adc
xchg
xchg
pop
xor
aas
sub
cmp
mov
in
jmp
push
gs
sub
add
out
push
push
and
enter
inc
pop
ds
pusha
cld
cld
push
inc
gs
and
push
ja
shrb
jle
adc
mov
shlb
and
add
fs
jmp
mov
xlat
mull
aam
or
sahf
loope
mov
jne
inc
loop
repnz
fildll
or
test
pop
pusha
sub
mov
sub
lret
repnz
push
xor
roll
sti
in
stos
xor
jo
dec
sub
loopne
push
aaa
mov
mov
pop
les
sub
cmp
pop
sbb
std
mov
sbb
test
imul
mov
addr16
test
clc
nop
xor
or
push
fsubrp
mov
fnstsw
aam
in
fistl
scas
sti
jp
sarb
push
and
stos
jno
gs
dec
ret
iret
clc
mov
in
into
sub
gs
sbb
je
jecxz
sub
sub
enter
arpl
rorb
push
pop
gs
shlb
out
fiadds
add
stos
pusha
pop
sbb
out
testl
outsb
push
nop
mov
xchg
gs
fidivrl
pop
fisubl
jbe
xorb
push
xor
das
mov
xchg
ds
bound
push
mov
ja
inc
outsb
sahf
push
xchg
aad
mov
sub
pop
adc
mov
es
repnz
ret
mov
lcall
mov
fcoms
repz
and
mov
cmpsl
arpl
rcrb
ds
xorl
pop
rcrb
out
pop
adc
pop
aad
pop
out
jmp
or
loop
dec
mov
jge
pop
clc
mov
inc
xor
and
jl
scas
popf
loopne
push
xchg
sar
push
repnz
in
push
mov
ja
mov
push
nop
dec
jne
les
stc
inc
jo
sub
or
xchg
adc
sbb
inc
mov
xchg
jae
mov
mov
loope
or
adc
jle
mov
sub
pop
fnstcw
rcl
xchg
fmull
mov
cmp
mov
ds
mov
repz
jnp
pop
adcb
daa
push
sbb
cltd
cs
jmp
inc
push
add
pop
shrl
shll
mov
notb
shlb
das
or
lcall
dec
aam
xchg
out
mov
addr16
ds
push
mov
cmp
jnp
dec
fisubrs
sti
icebp
push
mov
repz
rorl
aad
dec
idiv
in
push
sbb
outsl
pop
sbb
rcrl
lahf
daa
into
movsb
adc
push
jae
testb
inc
jmp
or
sub
fsubrl
popa
arpl
or
inc
mov
push
js
jnp
nop
push
dec
adc
or
mov
or
js
and
add
and
jns
and
fdivrs
push
jmp
ja
adc
mov
mov
sbb
xchg
push
lods
roll
jge
js
mov
inc
movsb
shlb
xchg
ret
sbb
gs
push
cmp
into
push
jne
pop
ljmp
dec
ror
pop
push
push
adc
addb
xor
dec
cld
or
out
ret
mov
hlt
add
pop
je
pop
fistpll
dec
lret
xor
enter
ja
xchg
push
lcall
fsubrs
lahf
popa
popa
dec
cltd
or
lods
mov
and
jo
sbb
sub
call
bound
js
lock
mov
jge
inc
cltd
and
gs
sbbb
es
popf
jae
int3
daa
dec
nop
stos
cld
mov
subb
xchg
arpl
or
clc
sahf
add
nop
mov
inc
sub
push
jae
inc
mov
xor
xchg
xor
inc
lahf
fcoml
mov
sub
das
iret
jnp
xchg
sbb
popf
cmpsb
sbbl
mov
mov
ret
in
mov
rorl
fstps
jo
fs
xor
setb
add
in
cltd
bound
ret
sbb
or
fs
into
les
cmpsb
adc
sbb
and
adc
inc
sbb
push
pop
sbb
lods
in
inc
add
inc
insb
fildll
imul
fwait
ja
mov
push
inc
mov
jo
lcall
in
loop
into
lret
outsb
andl
mov
mull
mov
sahf
out
rorl
push
or
or
jle
xchg
lea
or
and
xchg
adc
jbe
jb
push
lock
clc
push
add
push
mov
jmp
lret
cmpsb
dec
icebp
shll
jae
lahf
dec
and
lods
testb
shlb
or
push
push
sti
data16
add
stos
sbb
mov
xchg
rolb
sub
inc
movsb
negl
sarl
es
xor
decl
gs
and
daa
popf
sbb
js
xchg
movsl
out
test
test
jmp
rcr
and
sub
out
push
in
sarl
enter
cmp
mov
test
push
aam
jle
mov
xchg
mov
out
fimull
jo
addr16
inc
mov
leave
xlat
push
mov
push
or
outsl
push
int
cmp
mov
mov
out
dec
cli
adc
in
or
push
jo
test
mov
flds
loop
or
lds
and
and
insl
sbb
mov
cmp
dec
mov
or
lods
jns
push
add
xor
ret
push
sub
mov
jmp
mov
shl
stos
ret
out
mov
decl
add
js
repnz
cltd
mov
call
jp
ds
cmp
mov
push
ret
fdecstp
or
jp
lods
std
xchg
pushf
fs
jae
xor
pop
sub
inc
mov
push
scas
inc
fsubl
inc
std
shrl
jl
das
mov
test
jg
xor
add
cld
movsl
rcr
sbb
or
add
or
mov
dec
xchg
xchg
fcomi
pop
hlt
test
jge
jmp
fnstsw
loopne
pop
loope
or
lods
inc
les
popf
adc
sahf
insb
orb
in
stos
ja
xor
adc
shlb
dec
mov
push
add
gs
cmp
iret
mov
sub
sub
jge
push
repz
jnp
cld
jecxz
daa
hlt
push
ds
pop
lock
into
mov
stc
stos
mov
adc
shrl
dec
cmpsl
add
jmp
mov
adc
sarl
xlat
out
mov
and
shlb
repz
xchg
push
cltd
repz
movntq
sbb
push
call
addb
add
and
jl
push
mov
sub
mov
or
fwait
sbb
lods
inc
add
and
ljmp
push
mov
js
push
test
enter
icebp
xchg
inc
inc
jnp
pop
xchg
sub
bound
outsb
mov
mov
nop
movsl
cmpsb
shll
ja
cli
push
pop
jo
scas
or
pushf
xchg
popf
pop
or
jp
push
jg
lret
sarb
sbb
cltd
fcoms
lret
out
test
or
loope
ja
bound
ja
add
ret
test
xor
popf
movsb
adcl
jo
dec
adc
into
mov
mov
ljmp
test
add
inc
and
push
cmp
push
mov
sahf
mov
repz
int
push
mov
xor
mov
mov
sub
and
cld
xorl
js
push
andl
xchg
inc
pusha
jp
cmpsl
popa
adc
mov
stos
nop
sahf
push
xchg
out
and
mov
fstpl
push
xchg
sbb
mov
jmp
insb
push
mov
fst
xchg
arpl
ret
cmpsb
add
in
xchg
dec
sbb
sub
xchg
cmp
sub
iret
pop
in
enter
pop
pop
dec
jae
bound
lods
movsb
mov
cwtl
test
mov
out
sbb
xor
fucomp
xor
dec
push
popa
sub
dec
repz
in
cmp
popa
mov
repz
pop
ss
cli
xor
pop
and
mov
stos
mov
cmp
lret
insl
sbb
add
std
inc
dec
pop
aaa
filds
pop
insb
fwait
push
test
loopne
pusha
sub
xchg
ror
xor
mov
leave
das
sbb
dec
mov
and
fs
pop
dec
push
pop
test
push
push
pop
push
call
lock
in
lret
jo
arpl
rclb
mov
sarb
movb
sub
push
loop
cmp
adc
cmpsl
mov
push
lret
mov
mov
dec
jl
xor
aaa
lahf
xchg
xor
sahf
xchg
mov
fdivrl
into
push
sub
cmp
aam
stos
fld
inc
mov
mov
test
fisttps
inc
stos
adc
xor
lods
jbe
and
jno
xlat
inc
sbb
adc
and
ret
andb
popf
fs
xor
int3
mov
push
pop
push
dec
and
sbb
nop
mov
lcall
push
mov
cli
and
decl
adc
xchg
lahf
pop
stos
jg
mov
fisubs
adc
cmc
ljmp
lret
les
inc
in
sbb
cmp
lahf
pushf
mov
cmp
mov
lret
adc
sub
movsb
rolb
xchg
out
jge
shlb
add
cltd
clc
test
and
insb
pop
ret
or
add
push
clc
lret
mov
cmpsb
mov
xchg
dec
dec
sahf
push
data16
int
jle
sub
cmp
dec
into
add
cmp
andl
or
lahf
sub
cmp
push
cmp
mov
adc
fcmovu
or
fsubs
mov
and
rorb
xor
or
or
lret
mov
inc
or
pop
iret
dec
pop
mov
and
jne
sti
out
ds
call
in
out
push
sub
xor
sub
jno
add
jno
and
stos
mov
data16
das
or
cmp
dec
out
lods
setbe
lret
mov
pop
mov
cmp
pop
cmpb
icebp
jae
mov
push
sub
es
sbb
or
inc
enter
into
add
mov
adc
aas
dec
mov
pop
sbb
lahf
mov
out
pop
or
or
gs
sarb
lahf
outsl
aaa
mov
push
sbb
mov
cmp
sbb
xor
rorl
mov
mov
add
int3
jo
cmpsl
pop
ds
lret
and
sbb
adc
std
popf
mov
and
push
mov
pop
adc
mov
jo
mov
icebp
mov
inc
sbb
sub
in
pop
loop
dec
pop
xchg
arpl
add
mov
arpl
add
stos
jmp
daa
lret
jno
add
jb
int3
adc
call
sub
lret
pop
xor
inc
mov
or
cmc
adc
push
lds
xor
test
aaa
in
fidivrl
lret
and
cmp
sub
fdivrl
adc
andb
hlt
sub
push
cwtl
iret
imul
jmp
mov
dec
or
pop
sahf
jne
xchg
les
mov
and
and
adc
aas
and
xchg
int3
pop
aas
sbb
xchg
stos
sub
inc
sub
xchg
das
push
jb
cmp
xchg
in
push
mov
cmp
pop
iret
adc
cmp
cld
cli
ds
xrstors
lock
mov
cwtl
mov
rorl
cmp
movsb
fs
xor
clc
pop
into
or
outsb
mov
stos
xor
in
andb
daa
or
test
fstpl
pusha
mov
cmp
sbb
mov
adc
roll
cmp
dec
arpl
adc
jle
cmp
xchg
mov
ljmp
ljmp
mov
insl
pusha
stos
adc
mov
mov
cmc
repnz
out
stc
or
mov
ja
adc
mov
or
inc
dec
addl
in
mov
loopne
pop
pop
scas
das
pop
push
jae
cmp
lock
scas
sub
xchg
mov
jne
daa
movsl
daa
mov
inc
mov
lock
pop
inc
fs
sbb
sti
lea
lds
jle
loope
xchg
repnz
mov
pop
and
jns
mov
ret
sarb
xlat
outsb
dec
loop
dec
into
imul
xchg
lret
fwait
mov
push
out
loope
cmc
ror
arpl
sbb
dec
test
dec
es
int
inc
mov
icebp
xor
movsl
loop
arpl
leave
and
or
test
aad
faddl
mov
xorb
out
inc
repnz
daa
add
push
fdivrs
dec
ss
rcr
xchg
adc
pop
in
adc
shrl
inc
mov
adcl
pop
mov
sbb
insb
aas
repnz
push
sub
xor
shl
sarl
scas
jno
add
add
pop
xor
push
push
repnz
push
mov
jmp
jno
mov
lret
imul
movsl
std
hlt
jp
dec
ds
push
add
out
cwtl
hlt
jno
jl
aas
jbe
sbbl
fildl
or
aas
add
xor
mov
sbb
xchg
outsl
cli
ss
inc
sbbl
push
pop
enter
push
pusha
pop
cld
xor
outsb
inc
mov
mov
and
xchg
fmul
adc
pop
lods
xchg
jo
add
neg
loopne
cmp
xorl
jae
jle
movsb
xchg
xlat
aaa
daa
lret
aas
mov
cmc
cmp
js
push
push
in
out
call
outsb
incl
jnp
sbb
inc
cs
lods
pop
push
mov
jp
fistps
testl
dec
aam
or
repz
loope
cmp
dec
inc
mov
insb
mov
xor
movsb
jl
jae
mov
adc
or
xor
cmpl
fwait
jmp
push
mov
mov
mov
push
testl
adc
scas
mov
icebp
daa
xchg
mov
insl
outsb
adc
test
jmp
jae
in
add
arpl
push
repz
repnz
jmp
push
and
mov
xchg
and
jl
stc
push
mov
mov
sub
lea
mov
pushf
sbb
enter
mov
jge
pushf
and
and
insl
push
scas
jg
cli
cwtl
add
fwait
outsb
aad
pop
lods
fmuls
andb
and
leave
rorb
mov
xor
jne
fdivl
cli
in
sub
psrad
icebp
dec
adc
ja
or
push
scas
and
int
jb
cmp
lods
pop
jg
add
sahf
xchg
in
fisubs
jo
jb
dec
into
cld
dec
xchg
lret
xor
int3
jp
push
aad
andb
jp
add
call
push
inc
scas
inc
gs
mov
pop
clc
sub
xor
push
insl
dec
and
jo
and
pop
idivb
rorb
loopne
fistps
push
in
and
mov
in
imul
outsl
ret
add
jb
dec
xchg
jle
loop
jle
xchg
push
adc
movsb
cmp
xchg
or
jne
lds
cmpsb
loopne
sbb
cmc
scas
add
dec
cs
xchg
lea
cmpsl
jne
lret
dec
sbb
divb
jge
mov
push
mov
ja
xor
leave
jae
aad
loope
cmp
in
dec
dec
sub
fcmove
dec
lds
dec
pop
jmp
xchg
roll
int3
xchg
adcl
sahf
mov
cmpsl
sbb
das
pmaxsw
mov
ficoml
mov
dec
mov
adc
add
jnp
pushf
inc
xchg
dec
or
inc
xchg
fwait
lahf
nop
call
lock
out
js
inc
clc
or
jl
in
loop
sub
aad
addl
ds
add
popf
jecxz
inc
or
dec
adc
icebp
negb
mov
in
lods
test
test
cmp
ret
dec
jmp
addr16
std
sub
xchg
repz
je
mov
pushf
aas
sbb
lahf
mov
dec
inc
dec
push
xor
hlt
add
xor
and
frstor
addl
or
gs
sti
pop
loopne
in
dec
iret
or
ja
in
xchg
dec
icebp
cltd
pop
jns
dec
divl
mov
add
jnp
mov
sbb
in
leave
mov
pop
push
sub
pop
data16
lea
sarb
cli
add
or
je
fisubrs
mov
sbb
out
lret
jmp
or
int
push
inc
push
jge
stos
mov
mov
mov
or
mov
dec
mov
mov
and
lea
mov
ljmp
test
mov
xchg
jle
fists
int3
sahf
xor
stos
sub
out
test
xor
rcrb
sub
mov
push
test
pop
dec
sbb
jecxz
outsl
dec
xchg
mov
xchg
or
scas
xor
jp
ljmp
jo
insb
popf
adc
out
test
xchg
mov
pop
gs
mov
pop
int
addr16
pop
cmpsb
push
inc
jp
cmp
rolb
cmp
pop
cmpsl
and
in
push
jb
pop
test
add
mov
sub
repz
jecxz
addr16
enter
popa
scas
movsl
fsubp
sbb
inc
mov
lea
movsl
lods
fiadds
cmp
fsubl
xor
push
decl
sub
push
xchg
add
bound
lds
jns
xor
push
movl
push
mov
test
shrb
out
movsb
pop
imul
repnz
jno
mov
out
movsb
sbb
push
sbb
outsl
adc
push
xorb
push
sbb
pop
push
push
push
es
outsb
ja
loopne
push
daa
pop
or
sahf
stc
mov
mov
inc
mov
sarb
adc
push
xor
ds
shlb
mov
int3
inc
sub
dec
into
cli
jb
or
and
inc
inc
xlat
sbb
xor
lock
es
inc
adc
mov
sti
int3
loop
cmc
push
bound
loopne
nop
and
mov
lods
pop
int
vmulpd
ud0
pop
inc
cmpsb
stos
push
push
xchg
dec
sub
and
gs
sbb
sub
sahf
push
cli
cmp
out
icebp
push
jecxz
jl
pusha
dec
lock
loope
or
xor
dec
pop
cmp
in
dec
clc
jne
inc
jne
call
xchg
dec
jp
out
das
ret
sbb
xchg
lods
iret
popf
jp
add
xlat
and
js
mov
lea
pusha
imul
inc
lahf
pop
xor
inc
out
iret
rclb
push
fwait
push
mov
std
jae
inc
lahf
and
pop
dec
es
sub
repnz
out
mov
push
repz
in
xlat
ds
outsl
fdivrs
loope
add
sbb
or
call
sbb
mov
jns
mov
push
imul
fmull
dec
test
cmp
imul
movsb
add
mov
cmp
aaa
adcl
loop
xorb
pushf
movl
push
test
daa
lea
mov
mov
aam
test
dec
cmp
add
mov
inc
testl
stc
dec
pop
dec
xchg
adc
js
push
stos
sub
punpcklbw
loop
mov
pop
dec
sub
loopne
popf
cmp
std
add
mov
insb
loope
leave
subb
fwait
mov
sub
xor
shrb
jmp
lret
cmp
popa
push
iret
repz
ljmp
jbe
xorb
jmp
imul
xchg
sub
sbb
mov
add
movsl
cmc
xor
cs
push
sahf
cltd
test
es
sbb
sub
and
int3
bound
dec
jecxz
inc
addb
mov
shl
pop
aam
stos
mov
jno
rcll
insb
dec
imul
add
adc
cwtl
mov
clc
mov
ret
popa
xchg
repnz
cmpsl
in
adc
sar
bound
and
adc
rcrl
daa
imul
in
movsb
icebp
inc
ja
adc
sub
fsubr
mov
stc
add
push
test
mov
cmpsb
jo
cmp
sub
and
jnp
aad
xchg
lahf
dec
mov
xchg
lret
jne
xorb
push
pop
sub
dec
jb,pt
or
lods
mov
leave
mov
das
add
push
lret
jp
cmpsb
repnz
dec
sarb
and
jb
xchg
in
out
cld
xchg
arpl
test
or
jne
push
sub
and
cwtl
push
jo
sbb
scas
push
sbb
and
cmp
into
xor
cmp
sti
mov
inc
idivl
pushf
fnstcw
lock
test
leave
mov
jge
and
push
pop
inc
jecxz
aad
mov
insb
xchg
ljmp
ds
loope
adc
mov
inc
pop
sbb
adc
movsb
sub
dec
mov
jb
nop
cmp
mov
or
shrl
pushf
push
jmp
xchg
mov
or
cld
mov
test
cmp
pushf
lods
jo
out
cwtl
xor
cmc
fcompl
push
mov
xor
dec
out
fdiv
add
js
push
mov
pusha
cmpsb
fisttps
imul
out
lret
or
fidivl
adc
pop
jne
jae
adc
xchg
mov
leave
movsb
mov
pop
pusha
lahf
sbb
mov
cmp
pop
mov
adc
cmp
add
xor
stos
addb
das
int3
xchg
cmp
test
loopne
stos
frstor
movsb
sub
mov
xorb
xor
fsubrl
stos
mov
outsl
pop
in
mov
jge
adc
fildll
iret
ret
inc
mov
jl
mov
sbb
or
xor
add
add
fwait
lret
xchg
xchg
scas
sarb
mov
lret
test
jl
push
push
inc
pop
subb
add
repz
lods
and
mov
mov
adc
roll
dec
jp
xor
fimuls
pusha
int3
andl
gs
shlb
mov
mov
out
lds
lea
aas
loop
xchg
sub
mov
mov
fmull
xor
inc
popf
adc
cmp
loop
aam
add
mov
repz
sub
incl
aaa
arpl
fsubp
or
popa
add
outsb
or
push
into
int3
fdivs
cli
std
ret
dec
add
mov
clc
adc
jmp
dec
mov
push
sbb
add
iret
pop
mov
push
push
jb
iret
sbb
dec
pusha
aaa
dec
adc
jl
xchg
and
mov
addl
int3
inc
push
ret
mov
movsb
test
jmp
std
inc
xchg
push
xor
fdiv
jp
lods
mov
jno
dec
mov
out
lcall
call
cld
clc
push
lahf
sbb
mov
cmp
mov
and
sti
inc
ss
adc
fdivp
jo
or
into
push
icebp
add
add
mov
fmul
xchg
out
push
or
pushf
out
je
test
xchg
and
cmp
int3
into
xchg
loop
leave
imul
jbe
flds
mov
loopne
in
cmp
scas
mov
jns
fdivl
mov
mov
push
test
stc
mov
shlb
jmp
fnstenv
jle
mov
ret
insl
out
push
mull
andl
lea
and
add
scas
adc
inc
mov
adc
hlt
push
sub
imul
dec
sbb
jmp
sti
fs
mov
imul
loope
sbb
inc
or
push
pop
cmp
inc
push
daa
jmp
scas
sbb
test
lds
lcall
and
dec
xor
mov
jb
dec
out
jb
imul
sub
and
cmp
sub
mov
pop
adc
mov
xlat
ret
jle
inc
cmpb
lretw
jg
subb
test
outsb
stc
jmp
pop
call
push
or
mov
cli
push
mov
imul
mov
mov
lahf
ret
cld
mov
push
inc
jne
pop
imul
mov
push
cmpsb
dec
and
int
sub
sti
ret
daa
jnp
jecxz
out
mov
xor
pop
enter
loop
loopne
dec
pop
fsts
fldcw
or
xchg
mov
call
pushf
mov
add
mov
inc
mov
cmp
mov
push
jecxz
addl
jns
out
pop
outsb
loopne
or
loope
icebp
cltd
aam
scas
scas
int3
adc
fistpll
and
and
jle
in
mov
dec
test
out
lea
insl
mov
sub
int3
fdivr
cmp
sub
mov
sub
es
cmp
mov
push
inc
scas
dec
mov
insl
arpl
pop
pop
jo
pop
pop
insb
or
xchg
adc
xchg
stos
jge
loopne
dec
int3
jp
imul
jne
and
jl
fs
or
pop
in
lods
movsl
xchg
add
mov
dec
lret
call
hlt
add
and
out
xchg
cmp
ss
pop
out
cmc
push
ja
push
subb
idivl
mov
sub
stos
xchg
inc
xchg
sub
add
xorl
dec
inc
and
das
cmp
xchg
out
incb
movsl
dec
sub
jl
pop
mov
insb
test
inc
push
adc
xchg
mov
ss
mov
stos
push
jb
sbb
loop
notb
and
into
cmp
xchg
imul
pusha
cmc
pop
daa
out
aas
xchg
rorb
aas
or
popa
sub
bnd
push
push
aad
or
ja
or
mov
xchg
call
icebp
outsb
dec
jae
jmp
sbb
out
icebp
mov
inc
imul
xchg
adcb
mov
lret
movsb
nop
jecxz
or
adc
enter
popa
ljmp
or
dec
or
inc
fbld
cwtl
dec
idivb
out
mov
push
pushf
jge
or
or
jo
pop
sbb
nop
dec
insb
push
jnp
repnz
jo
hlt
movsl
loope
xor
sbb
into
dec
cmp
mov
push
xchg
lods
addb
in
daa
push
adc
rorb
daa
fs
jno
je
imul
fnsave
pushf
xchg
ljmp
and
out
arpl
mov
dec
adc
pop
inc
fisubl
in
pop
push
sub
ret
push
push
jno
aam
add
xor
mov
dec
imul
fldt
xchg
insl
in
and
inc
je
push
lea
repz
lods
cmc
adc
test
push
xlat
push
and
test
dec
adc
imul
adc
add
insb
mov
sbb
loop
test
mov
addl
or
movsl
inc
stos
orl
mov
lods
ret
rcll
add
in
dec
pusha
jecxz
mov
ficoms
lahf
mov
mov
mov
inc
mov
and
pop
dec
xchg
cmp
mov
inc
mov
dec
addr16
ja
xor
push
hlt
cltd
mov
sbb
stos
movsl
mov
or
jp
jnp
mov
cltd
mov
mov
dec
leave
inc
fbld
add
mov
fsubs
inc
insl
sahf
sbb
lret
mov
jl
add
out
pop
pusha
cltd
mov
ret
cmp
xchg
in
mov
pop
in
pop
aam
and
in
test
push
outsb
loope
sbb
dec
test
adc
cmp
xchg
mov
adc
outsl
jns
cmp
and
cmp
cmp
fcompl
push
cmpsl
mov
xor
testl
mov
xchg
xor
in
ds
stos
jp
mov
repz
cmp
rcrb
pushf
loopne
sahf
cmp
inc
in
adc
sub
cmp
mov
mov
mov
sbb
int3
and
jge
mov
jle
stc
test
clc
out
call
loope
or
pop
lock
xor
div
sarb
xchg
test
scas
lea
push
xlat
dec
stos
or
outsl
pop
jno
mov
jae
jne
cmc
or
add
fucomp
test
cmp
test
push
mov
push
xor
push
pop
push
movsb
arpl
imul
in
icebp
mov
xor
pop
cwtl
mov
out
into
jbe
and
hlt
leave
sub
jle
pop
cmp
mov
stos
mov
sti
mov
sbb
jns
out
xorl
ficompl
ret
in
lods
or
jns
stos
dec
fstps
pop
dec
in
out
xchg
xchg
cmp
pop
lds
in
or
insl
mov
sbb
inc
jno
add
negl
xor
push
jmp
lret
aaa
inc
sbb
push
pop
cmp
fidivl
mov
jge
divl
lahf
shll
mov
xor
jo
repnz
mov
scas
jns
xlat
mov
cltd
neg
pop
and
fwait
into
or
sti
xchg
ret
xchg
test
add
or
mov
stc
repz
cwtl
popf
inc
ljmp
mov
int
fistpll
push
dec
call
in
xchg
lret
jge
int
push
dec
leave
cld
in
jp
push
mov
adc
adc
sub
cmp
xlat
push
dec
xorl
xchg
xlat
mov
cmpb
lcall
into
fldenv
mov
stos
sbb
push
scas
push
fstps
movsl
jmp
jno
jne
fstps
cmp
and
dec
loope
imul
stos
mov
jg
loope
nop
data16
pop
repz
hlt
pop
out
iret
lods
test
mov
imul
jo
jb
int3
pop
addr16
sbb
pop
mov
mulb
pop
sbb
xchg
shl
fadd
sahf
dec
pop
add
mov
sub
xchg
cld
pop
mov
iret
inc
or
sub
es
push
es
fcompl
push
repz
enter
mov
sahf
dec
cmp
xchg
cs
jecxz
jmp
mov
sbb
jb
or
fisttpl
repz
pop
in
and
mov
cmpsl
imul
dec
mov
loope
fs
mov
or
cmp
mov
mov
and
pop
jno
addb
mov
popf
test
int
adc
inc
mov
jg
sbb
pop
sub
jbe
movsb
jb
sbbb
jle
xchg
and
fildl
mov
shlb
cmp
fstp
mov
in
xor
cld
cmp
pop
pop
pop
push
mov
loope
clc
mov
cmp
leave
or
lods
rcll
add
inc
aam
push
mov
iret
push
xlat
loopnew
adc
cld
sub
fstpt
ret
daa
mov
scas
dec
out
mov
xor
cs
jns
into
js
into
cmc
movsb
sbb
ljmp
mov
iret
sub
dec
xlat
xor
mov
and
test
mov
lods
int
movsb
push
je
push
adc
pop
add
fcoml
push
inc
movsb
fwait
inc
lahf
mov
aad
fildll
movsl
fcoml
popa
xchg
lret
pop
lea
push
jno
mov
in
cmpsb
or
mov
pop
push
stc
popf
push
and
mov
in
xor
out
shlb
das
arpl
in
mov
shll
enter
fidivs
push
testb
repnz
cmp
mov
jnp
cmp
mov
cld
mov
mov
jge
fstl
shlb
pop
dec
and
mov
adc
fcmovnbe
push
add
sbb
jl
aam
sysenter
test
loop
rcrb
lds
movsb
dec
xor
add
dec
dec
daa
mov
out
insb
out
xor
mov
push
sbb
out
push
xor
inc
xchg
add
fimull
xor
js
jmp
pop
cmp
add
sub
xor
add
rorb
in
xchg
ret
xchg
out
ljmp
cmp
fildl
adc
test
inc
fildl
jb
cmpb
ja
push
pusha
mov
aas
int
mov
cli
cld
pop
xchg
sbb
lock
mov
pusha
das
jb
mov
mov
out
push
sbb
dec
jo
or
shr
ljmp
cmpsb
subb
int
pop
adc
test
arpl
mov
adc
jg
cld
movsb
dec
pop
push
mov
jecxz
jnp
into
aam
inc
mov
jle
add
add
fadds
dec
iret
mov
out
test
or
push
mov
adc
push
adc
in
add
inc
pop
pop
xor
rorb
or
pop
xchg
cltd
mov
sahf
fnstsw
fcmove
subb
jbe
int3
adc
outsl
add
enter
iret
adc
inc
data16
mov
inc
jb
sbb
pop
repz
cld
add
orb
mov
lcall
jae
repz
or
scas
mov
cli
js
adc
pop
or
cmp
mov
adc
inc
push
push
mov
push
xchg
into
or
bound
mov
popf
mov
test
or
dec
cmp
clc
inc
mov
dec
xor
push
push
xor
xchg
ds
jg
fcompl
inc
out
pop
divl
xchg
mov
push
test
shl
xor
movsb
hlt
pushw
mov
popa
inc
cmp
and
shl
cmpsl
les
mov
jae
pop
hlt
push
fwait
adc
std
push
mov
movsb
xor
pop
cmp
je
pusha
lds
xlat
jecxz
mov
adc
data16
dec
aad
cmpsb
pop
mov
mov
jge
sbb
xchg
das
ficoml
mov
out
das
push
loop
gs
std
sbb
mov
xchg
shl
cmp
outsl
pmulhuw
mov
jle
test
mov
pop
or
adc
mov
cld
or
test
pop
outsl
outsb
mov
xchg
out
aaa
inc
inc
inc
jbe
shll
out
orl
in
xor
pop
int
mov
sarb
or
mov
data16
or
es
stc
push
push
fwait
or
cmpsl
sbb
out
dec
movsl
aad
into
xchg
or
pop
shl
inc
and
xchg
jns
lea
psllq
xchg
add
add
stos
rorb
xchg
sahf
and
dec
call
jo
and
mov
xchg
mov
enter
inc
nop
or
popa
adc
cwtl
fdivl
mov
sbb
or
add
jge
cmp
dec
cltd
xchg
sbb
adc
mov
mov
pop
nop
divl
push
fstpt
push
popf
or
xlat
add
dec
lods
pop
xchg
push
adc
cmc
lret
fistpll
mov
xor
cli
lret
stos
pop
xchg
jae
pop
push
push
or
adc
jns
repnz
aaa
stos
mov
repz
push
dec
je
xchg
pop
inc
xor
xor
test
pushf
out
cmp
add
and
xchg
or
sub
ds
nop
or
sahf
push
movsb
add
icebp
hlt
outsb
and
divl
mov
loope
xchg
std
pop
adc
add
xor
adcb
inc
popa
mov
push
push
repz
sub
imul
je
int
test
mov
mov
out
dec
jecxz
inc
dec
rorl
in
jl
testb
add
adc
pop
outsb
adc
jo
pop
outsb
call
fbstp
cli
repz
divb
adc
daa
cmpsb
lret
push
fbstp
dec
pop
sbb
mov
xlat
dec
jl
addl
jnp
testl
inc
jno
and
into
mov
sbb
in
ret
mov
sub
jnp
push
cmp
std
cmp
fldl
ja
inc
outsl
mov
xor
adc
xor
out
cmc
sbbb
push
pop
pop
sub
pop
xlat
dec
comiss
aas
movsl
mov
mov
in
and
lods
inc
jo
xor
mov
xchg
mov
xor
push
push
notl
gs
lock
jmp
in
cmp
mov
pop
scas
jge
pop
insb
mov
push
xor
mov
aad
pop
test
xchg
out
mov
bound
mov
icebp
dec
pop
in
dec
dec
sub
pop
call
in
xchg
dec
inc
mov
push
mov
sub
cmp
xor
adc
lcall
dec
jae
cmp
sub
in
add
sarl
lods
sbb
dec
pusha
push
aad
movsl
imul
jbe
call
xchg
je
aad
jle
clc
ds
loope
and
sub
sbb
inc
out
aad
push
push
jecxz
inc
mov
imul
mov
mov
rol
mov
cmp
push
adc
dec
repz
aam
ss
lcall
mov
mov
adc
dec
ret
aas
inc
dec
negl
cmp
call
stos
xchg
je
mov
mov
sub
lret
push
mov
xor
es
std
sub
add
out
insl
mov
ss
aas
lcall
clc
insl
inc
push
mov
mov
cmp
mov
cmc
clc
dec
cmp
jne
xchg
add
inc
sbb
insl
inc
sbb
sub
je
inc
adc
xchg
loop
mov
les
add
sbb
and
sbb
dec
inc
leave
decl
mov
ds
add
adc
mov
pusha
cmpsb
jo
stos
adc
xchg
dec
fdivrp
int3
cmp
shr
and
inc
cld
push
repnz
mov
neg
mov
lret
jo
push
daa
cld
cmpsb
test
mov
fs
xchg
cwtl
out
pop
or
jae
out
adc
inc
jle
jg
aaa
push
adc
mov
popf
dec
adc
and
jno
ret
xchg
sub
jmp
jp
push
imul
fstpl
push
fistpll
repnz
cmp
pop
add
sbb
shl
fidivrl
stos
lea
cld
inc
sarl
sti
adc
lcall
inc
movsb
xor
cmp
shlb
lods
sub
pop
lods
dec
cli
mov
scas
mov
scas
shlb
pop
mov
cmp
imul
jae
jecxz
pop
xchg
xor
push
sbb
dec
push
neg
adc
das
testb
out
inc
jo
adc
fisubrl
shll
sarb
std
xor
jl
shl
movswl
or
outsl
cmpl
cwtl
into
mov
add
outsl
pop
mov
jo
push
dec
sub
mov
jno
imul
mov
fbstp
scas
pop
outsb
cmp
xchg
enter
pusha
inc
addr16
rcrb
ss
fdivrl
xor
mov
mov
test
sub
int3
stos
cwtl
stos
add
pop
push
pop
nop
sbb
repz
dec
inc
fistpll
sarb
das
std
iret
pop
push
adc
add
int
add
mov
mov
jmp
repz
sbb
mov
arpl
mov
sub
mov
mov
test
aad
mov
cli
adc
cmpsb
out
lods
popf
and
arpl
das
mov
mov
mov
inc
stos
mov
sub
addb
enter
and
inc
jno
jo
pop
les
or
xchg
ljmp
in
movsb
cmp
pop
adc
aad
dec
push
jns
push
sbb
or
iret
push
jno
mov
pop
inc
shlb
out
fwait
add
push
jo
sub
jnp
out
cmpsl
popa
bound
or
fwait
add
insb
sub
lret
lock
mov
xor
lahf
inc
out
jne
test
std
mov
movsb
lods
mov
cmpl
dec
lods
out
sub
not
sti
xor
icebp
mov
ja
test
mov
leave
xchg
stc
xor
push
cmp
aad
cmp
jle,pt
mov
imul
sbb
sarb
or
ret
push
inc
lret
push
or
outsb
stos
or
stc
xlat
pop
xchg
inc
add
adc
leave
in
xor
jp
fsts
mov
pop
mov
mov
sbbb
mov
pop
mov
aam
pop
hlt
mov
rclb
popf
nop
imul
sbb
adc
lds
adc
mov
mov
scas
jge
push
jne
ds
or
dec
and
in
mov
loope
mov
cmpl
fnstsw
ljmp
add
inc
xor
out
jl
inc
inc
icebp
lods
fsts
movb
pop
add
test
xor
cwtl
xchg
in
cwtl
shlb
sahf
ljmp
rcll
xchg
jbe
fistpll
cmpsb
jnp
mov
test
sahf
add
sbb
xor
add
sub
cmp
mov
cltd
jmp
and
xchg
xchg
mov
cmpsl
sub
dec
mov
repz
int
flds
test
imul
adc
js
out
ja
mov
push
jne
cmpsb
dec
jl
fidivs
jge
and
aaa
ror
enter
ficoms
mov
push
out
cs
push
inc
mov
imulb
lds
stos
xchg
pop
dec
pop
or
mulb
pop
pop
cwtl
popa
movsl
add
cld
cmp
ret
sbb
lea
lret
sub
outsl
out
lahf
mov
stc
mov
shlb
add
jns
movsb
rorb
xlat
in
xchg
xchg
pop
shl
int3
pop
mulb
add
xor
pop
add
mov
adc
add
xchg
out
dec
movsb
rclb
sbb
xchg
or
inc
movsl
insl
ss
adc
mov
pop
loope
inc
movsl
test
clc
lods
sub
mov
aas
cmp
push
fsts
push
adcb
out
out
rcll
xchg
jns
sbb
ja
popf
dec
xor
jp
loopne
fcoms
jo
sbb
ja
iret
xchg
xchg
movsl
mov
add
adc
mov
aam
repz
rclb
and
xchg
inc
sbb
ja
sti
mov
ja
jns
xchg
or
cmp
test
data16
iret
jbe
fmuls
mov
xchg
out
mov
xchg
mov
dec
cmp
push
scas
cli
popf
and
pop
dec
or
outsb
fs
popf
ret
mov
adc
mov
jl
add
xor
out
outsl
push
add
aas
shlb
fsubr
insl
lods
push
adc
fsubp
push
fsubs
cli
and
add
ljmp
jecxz
sahf
jmp
inc
lea
fisttpl
insl
adc
xchg
fcmovne
sub
mov
flds
fcompl
cld
sbb
arpl
js
xor
int3
sarl
or
adc
outsl
popa
fdiv
sbb
ja
jge
xchg
mov
les
xchg
lock
test
mov
xor
mov
insb
push
adc
filds
xchg
add
lret
push
rcl
test
iret
mov
push
js
lahf
je
rorb
fistpl
cmc
test
loopne
loop
in
mov
jb
xor
scas
and
mov
out
inc
fdivs
xorl
imul
xor
cli
mov
xchg
sbb
add
movsl
sub
inc
dec
das
mov
ret
sub
daa
xor
xchg
int3
push
jmp
and
loopne
xor
push
adc
xchg
cld
dec
push
jle
lret
das
push
or
test
mov
push
sub
sub
int
arpl
pushf
sbb
push
lcall
push
push
fxam
dec
mov
mov
mov
leave
add
popf
push
sti
lret
sub
sbb
mov
in
repz
pop
in
mov
cli
inc
add
inc
inc
dec
jmp
fwait
scas
imul
pop
dec
dec
pop
and
lcall
cmp
jp
inc
mov
push
arpl
lea
sbb
addr16
lods
insb
out
mov
test
and
mov
out
fldcw
fstl
mov
cmc
jo
mov
and
cmc
and
push
rolb
jge
sub
xor
jb
xchg
jnp
testb
xor
and
mov
fstpt
pop
inc
js
out
in
cmpsl
sbb
and
sbb
sbbb
jns
xchg
and
jmp
sub
sbb
cld
sub
pop
cmpsb
ret
mov
stos
pop
sub
xchg
in
jl
jo
jne
add
std
adc
adc
pop
ja
filds
ror
notl
ret
push
inc
jecxz
imul
inc
test
cmp
test
stc
xor
sub
push
stos
jg
mov
aaa
jl
and
cmp
sbb
inc
mov
mov
mov
test
jp
add
pop
adc
pop
nop
orb
push
adc
add
sbb
pop
adc
pop
das
test
std
xchg
mov
push
daa
mov
data16
lock
repz
adc
sub
scas
dec
sub
mov
das
mov
fsts
push
add
jl
loop
mov
cld
xchg
movsl
xor
mov
insl
stc
and
adc
cmpsl
js
aad
outsl
in
fs
lea
imul
mov
sub
mov
sbb
inc
mov
pop
add
fdivs
mov
imul
lds
dec
les
dec
inc
lods
sub
aaa
xor
jae
lahf
add
mov
xchg
mov
pop
xchg
or
push
pop
pop
ds
fisttpll
fidivl
jae
inc
lret
mov
jg
or
add
sub
stos
shll
add
sub
cmc
xorl
iret
inc
imul
and
jno
adc
scas
pop
stos
dec
lcall
dec
xor
pop
lock
outsl
leave
sti
mov
cmpb
or
mov
in
in
adc
out
jecxz
pop
adc
xchg
stos
iret
imul
scas
mov
jns
aad
pop
jae
sub
je
pusha
xchg
xchg
mov
sbb
pop
les
cmp
mov
cwtl
dec
repnz
sub
sub
mov
jo
cltd
call
mov
mulb
sub
icebp
repz
inc
and
test
shlb
cwtl
popf
mov
fcmovnbe
cwtl
mov
repnz
js
pop
bound
cmpsl
dec
and
es
adc
xchg
repz
adc
and
ljmp
pop
inc
insl
or
arpl
cltd
xor
iret
dec
leave
jae
sub
pop
imulb
outsl
jp
dec
insb
cs
inc
and
sti
jg
lods
and
sub
xor
je
jle
mov
sub
lods
fsubl
rcrb
mov
and
in
leave
addr16
inc
mov
mov
xchg
mov
or
or
cmp
xorb
inc
add
mov
dec
sbb
fwait
sub
shl
loope
lahf
jmp
pushf
jbe
addr16
jg
cmp
push
cmp
pop
push
push
adc
xchg
mov
je
dec
pop
pop
add
mov
add
inc
imul
in
cld
out
cmp
xchg
iret
aas
xchg
cmp
add
xor
fwait
xchg
sub
pminsw
jmp
ds
jbe
fildll
mov
adc
jo
or
repz
addr16
jbe
fistps
lret
cmp
push
push
andl
test
shrb
mov
int
test
push
std
push
mov
lcall
mov
adc
fnstsw
pop
bound
inc
lcall
pop
data16
stc
testb
popa
outsl
fadd
push
shll
call
xchg
mov
pop
cwtl
jge
cmp
sti
scas
push
mov
ds
sub
lods
push
je
icebp
stc
cmp
push
ficoms
cmp
xchg
pop
enter
fnstenv
fcoms
mov
ficoms
or
xchg
and
out
fmull
cmp
mov
mov
fstps
sahf
mov
or
cld
jae
and
es
js
ja
mov
test
in
inc
add
jo
xlat
shlb
xchg
or
jmp
inc
ss
imul
filds
xchg
push
pop
movzbl
adc
out
mov
stc
bound
mov
repnz
shr
cmpb
dec
call
and
inc
and
sub
mov
mov
jmp
xchg
lea
imul
out
shlb
repz
sbb
into
loope
inc
cwtl
pop
cltd
pop
mov
dec
mov
xor
sub
imul
es
inc
in
mov
imul
push
test
pop
lds
enter
mull
fiadds
cmp
sub
mov
jbe
movsl
fldt
jns
iret
dec
out
loopne
fildl
fsubs
pop
cmp
xor
push
cmc
outsb
cltd
aas
push
orb
fsubr
pop
cmp
lret
xor
imul
sub
testl
push
inc
cld
adc
push
cmpsl
lock
mov
loopne
mov
movsb
idivl
dec
cmp
dec
scas
lahf
pop
xchg
pop
in
cmpb
inc
pop
jl
enter
adc
and
dec
cli
cwtl
cli
pushf
push
ret
test
mov
pop
fimuls
loope
gs
sub
cld
out
mov
push
mov
inc
ret
dec
cltd
sub
sub
scas
jno
imul
in
jp
adc
dec
pop
mov
in
pop
push
movsl
and
hlt
je
iret
xlat
fbstp
das
in
sarl
nop
push
or
cli
mov
adc
jae
fsts
fimull
pop
mov
push
lods
xor
popa
cld
dec
les
rclb
bound
mov
xchg
in
and
add
stos
repnz
dec
stos
add
mov
scas
faddl
inc
insb
out
mov
out
add
push
imul
fadds
or
or
jle
adc
add
adc
jnp
stos
aad
xchg
jg
idivl
inc
cwtl
jp
jp
ja
or
xor
stc
clc
sub
aaa
rcl
lahf
mov
sbb
mov
fwait
pop
xchg
push
mov
add
scas
add
xor
adc
sarl
push
loop
xchg
xlat
and
mov
inc
testb
out
stos
addl
cld
fcomi
sub
inc
pop
ds
pop
xor
dec
adc
xchg
outsl
sub
dec
mov
fs
test
inc
push
in
jmp
jge
setbe
sub
test
pushf
mov
pushf
rorl
aaa
dec
sbb
sahf
jne
inc
xor
sar
and
sti
mov
icebp
les
out
cmp
or
pop
mov
jle
mov
jbe
mov
mov
push
scas
fisubl
mov
mov
in
shrb
mov
pushf
pop
pusha
mov
icebp
sub
daa
inc
int3
stos
iret
or
jno
sbb
iret
dec
mov
pop
jb
sbb
jg
iret
loop
xor
inc
loope
pop
pop
icebp
add
cmpsl
int
fisttpl
jl
cmp
bound
shll
lcall
inc
jo
je
ds
xchg
dec
pop
dec
inc
pop
inc
shll
insb
call
fldcw
ror
je
je
out
jb
stos
data16
sarl
dec
pop
xor
push
js
push
mov
nop
cmp
fisubl
fbstp
mov
xchg
stc
push
repz
fbstp
ljmp
mov
das
mov
adc
adc
stos
cmp
add
pop
mov
and
int
dec
jmp
pusha
mov
xchg
mov
jp
jns
test
in
addr16
mov
rclb
cmp
loopne
cmc
andb
xor
aad
dec
or
xor
orb
int3
arpl
xchg
adc
mov
jnp
cs
pop
in
inc
test
xor
addr16
pop
cmp
das
mov
jno
push
push
out
jg
and
adc
inc
mov
cmp
mov
mov
jg
idiv
sti
cmp
inc
jnp
mov
cmpsb
dec
adc
sbb
cmpsb
lcall
repnz
jns
xor
and
imul
pop
int3
jb
adc
push
push
push
mov
sarl
fnsave
push
push
jg
popf
jnp
mov
hlt
adc
jg
in
jg
ret
mov
mov
dec
ss
rolb
add
test
into
dec
fcmovne
cwtl
int
scas
mov
mov
idiv
repz
pushf
mov
loope
xlat
mov
xchg
cmp
jns
fldenv
std
icebp
pop
mov
movsb
addr16
in
in
aad
les
shr
mov
mov
add
or
xor
lds
or
mov
mov
push
ret
mov
mov
lahf
sbb
mov
sbb
cs
jae
test
movsb
push
aam
xchg
push
sahf
jbe
sahf
leave
lret
push
data16
scas
fdivrs
test
inc
dec
xchg
xchg
mov
mov
or
mov
mov
fadds
ror
icebp
push
xchg
sub
push
push
insb
jle
xchg
inc
out
mov
cltd
arpl
cmpb
sbb
insb
cmc
cmp
popl
pop
and
dec
or
mov
std
daa
ljmp
pop
pop
mov
mov
sbb
cmp
sti
repnz
mov
out
cmpsb
mov
cmc
das
mov
cmc
xchg
shlb
shl
jb
cld
lds
pop
cmp
les
cmp
cs
sti
or
scas
cli
test
fisttps
cmpb
mov
inc
add
mov
icebp
lods
repnz
jp
push
and
cmpsb
dec
rcll
pop
std
jecxz
call
scas
and
push
and
std
inc
push
add
mov
fdivrp
fwait
xchg
jno
stos
std
pop
leave
jmp
lods
stos
inc
mov
sub
lds
jo
jns
jnp
mov
scas
xorl
xor
dec
add
int3
aad
mov
jp
push
jb
pop
scas
xor
sub
mov
jnp
imul
or
or
mov
xor
and
cmp
stc
xchg
addr16
sahf
push
mov
mov
adc
std
mov
aad
rorl
pop
cmpl
cmp
xlat
dec
inc
pop
lcall
shrl
pop
jmp
jmp
mov
setb
pop
cmp
popa
repz
stos
push
fsts
and
jecxz
cmp
mov
movsl
enter
sub
and
inc
loopne
jp
scas
into
js
add
loope
and
sub
popa
mov
ds
pop
xchg
nop
cmp
push
push
movb
cmpsl
jne
pop
cmp
lods
ret
imul
mov
stos
xchg
xchg
xchg
aad
cmp
aaa
mov
test
jno
outsl
test
gs
pop
pop
push
push
mull
mov
adc
jl
je
or
sbb
insb
je
or
fdivrl
and
aad
das
jns
cltd
jp
sub
fisttpll
outsb
ret
insl
fiaddl
sti
fwait
mov
jmp
add
and
out
push
mov
adcl
xor
mov
mov
js
fxch
and
jmp
xchg
mov
or
scas
pop
sub
adc
fimull
mov
imul
mov
xchg
fxch
jno
or
lods
jg
inc
push
aas
xor
mov
je
adc
adcb
mov
out
cmpl
jnp
xor
fwait
or
leave
jp
cmp
cmc
ss
insb
push
cmp
adc
inc
mov
and
xchg
aaa
mov
les
jns
aas
jnp
and
in
inc
popa
mov
push
ljmp
sub
mov
push
insl
lods
je
dec
out
and
mull
xchg
sbbb
das
leave
pop
dec
outsl
inc
sbb
mov
or
sbb
es
mov
out
add
or
inc
xor
jo
lods
jmp
mov
fidivrl
mov
enter
push
xor
fsubs
cmp
int3
mov
mov
mov
enter
aas
cmp
cmc
js
and
in
shrb
fnsetpm(287
mov
adc
jg
data16
popf
lcall
cmpsl
repz
jb
and
pop
and
cmpsl
sbb
call
mov
fstl
movsb
mov
inc
xchg
xor
jle
adc
mov
aam
mov
dec
scas
les
movsl
jp
push
and
add
in
shlb
inc
cmp
pop
xchg
add
xor
jg
fisubrs
mov
cmc
mov
out
daa
xchg
in
dec
xchg
addr16
jmp
add
pop
mov
xchg
and
sub
push
test
push
cmpsl
out
orl
in
mov
int
pop
iret
cmpsl
lock
jns
mov
mov
aaa
ror
dec
push
cmpsl
xor
dec
ds
loope
pusha
in
push
add
mov
inc
mov
ret
popf
xchg
push
jns
fsts
dec
lret
add
ret
sbb
xor
fisttpl
mov
ja
sub
in
lea
arpl
mov
xor
xchg
mov
ss
add
fisttps
pop
cli
mov
sbb
inc
ret
add
jl
nop
fisubl
mov
push
je
sbb
arpl
cwtl
das
inc
call
push
pushf
sub
outsb
cmpsl
lret
cmpb
fldenv
xchg
sti
or
cmp
movsl
dec
sahf
popf
and
xor
pop
fdiv
es
and
int3
out
mov
out
mov
in
or
mov
cmp
scas
mov
sbb
cmpsb
movsl
push
pop
jne
jmp
popf
xor
push
jb
jb
adc
inc
mov
mov
fsubrl
mov
addl
loop
xor
sbb
xchg
std
sub
mov
movl
ljmp
test
pop
or
outsb
mov
mov
cmp
cmp
ror
out
push
jle
xor
scas
popa
bnd
js
jmp
jg
bnd
leave
xchg
dec
push
scas
mov
cmpsl
ljmp
cmc
jg
cwtl
cwtl
fistps
push
xor
sub
sbb
inc
fcomi
pop
xchg
lods
imul
jae
addb
jl
pop
mov
into
and
sbb
adc
popf
repz
push
stos
into
lret
fs
les
xchg
mov
adc
push
loopne
negl
inc
push
mov
outsb
jnp
popf
mov
ficomps
int3
pop
jns
or
mov
sahf
imul
inc
add
imul
int
loop
test
shrb
pop
fistl
jno
push
out
jb
faddl
xchg
mov
mov
lock
in
lahf
iret
jle
push
adc
fnsave
mov
adc
and
mov
arpl
lahf
xor
shr
call
dec
add
fs
bound
mov
pop
shll
gs
loop
les
inc
jl
loopne
clc
leave
into
int
and
xor
xchg
cmp
es
rolb
testb
push
or
std
into
loopne
push
inc
stos
ja
xchg
push
mov
jb
mov
mov
mov
idivb
lcall
cwtl
nop
push
add
ljmp
insb
pop
xor
mov
xor
or
mov
jl
xor
mov
push
push
into
jne
adc
pop
mov
mov
stos
add
cmpsb
mov
mov
add
add
rolb
sbb
jg
mov
or
addr16
lea
push
shl
imul
mov
insl
maskmovq
scas
jo
loopne
cmpb
jbe
mov
push
add
xor
in
aas
outsl
mov
xor
lret
xor
sbb
shll
mov
jl
add
and
sbb
test
aas
push
sub
mov
add
fwait
cmp
add
cmp
mov
xchg
shr
or
jae
pop
push
pop
inc
movsb
xchg
fildl
in
mov
add
sub
shr
cmp
into
mov
jle
pop
hlt
in
and
xchg
repz
xorb
or
out
adc
fs
pusha
les
std
xchg
loop
movl
inc
aas
sar
push
aas
add
dec
push
mov
test
or
sub
loopne
jge
and
and
rcrb
sbb
sbb
stc
ljmp
not
and
loope
scas
cmpb
movsl
loopne
push
dec
add
push
sbb
fwait
add
leave
cmc
push
sbb
cmpsl
fs
inc
cs
jb
cmp
adc
les
sarb
outsb
bound
into
fisubs
mov
push
inc
push
shlb
sbb
and
or
adc
rcrl
mov
jmp
ja
outsl
into
enter
xchg
inc
push
aam
add
rcrb
push
xchg
repnz
mov
shrl
cwtl
dec
ret
int
ret
fmulp
and
mov
push
notb
fcom
in
fstl
in
into
jbe
push
sub
pop
loope
gs
stos
inc
sub
mov
or
add
pop
push
outsb
popf
mov
mov
insl
jnp
inc
gs
testb
std
push
leave
pop
out
jo
dec
stos
adc
push
jg
mov
dec
inc
cmpsb
cmpsl
dec
aad
movsb
or
leave
fsubl
sahf
inc
xor
or
lds
and
or
cmp
push
mov
push
arpl
pop
rorl
fwait
pop
nop
push
ss
fiaddl
andb
jno
jl
loope
xchg
add
into
mov
push
daa
pop
stos
add
sub
es
pushf
lock
mov
inc
cmp
aas
addr16
call
aad
or
sbbb
inc
insl
rcrb
inc
xchg
mov
mov
aaa
rol
xchg
in
and
cwtl
jl
repnz
pop
mov
sarl
nop
inc
sbb
mov
cmc
cmp
les
mov
mov
shll
cli
cwtl
cmp
ja
pop
dec
je
adc
sahf
xchg
xchg
pop
sbb
fcmovu
fisubs
mov
cmpsl
add
hlt
xlat
fisubrl
cmpsl
and
mov
in
movsb
xchg
mov
pop
push
sub
sub
nop
adc
xchg
pop
aaa
mov
sub
mov
mov
mov
sub
cwtl
jecxz
cltd
daa
loop
movsl
sti
cmc
cmc
pop
sbb
mulb
into
jmp
mov
jle
push
dec
repnz
xor
subl
je
lea
stos
daa
and
xchg
test
inc
push
mov
jge
push
cmpsl
ret
inc
pop
or
pop
cmc
lods
inc
subl
loop
callw
jmp
dec
aaa
inc
dec
out
into
test
sub
jae
xor
adc
imul
mov
xor
xchg
add
xchg
in
mov
movsb
loope
push
mov
call
push
pushf
out
push
imul
jg
and
ret
mov
sbb
imul
addb
cmpsl
jle
movsl
mov
shl
sti
lock
mov
xor
xor
mov
pusha
into
mov
cmpsl
add
in
cmpsb
xchg
jnp
fisubl
lret
cli
sub
mov
loop
bound
cld
sahf
inc
mov
xchg
adc
dec
sbb
jg
lret
test
jae
pop
adc
fs
scas
sahf
cmp
jge
pop
push
stos
mov
push
out
movsl
xchg
xor
xor
repz
outsl
aas
inc
daa
sbb
pop
mov
push
pop
push
in
inc
pop
add
jbe
nop
and
test
icebp
nop
fsub
movb
lret
lret
popf
mov
test
lock
mov
dec
add
cmc
scas
xchg
and
cmpsb
dec
popl
jbe
divb
stos
pop
out
sbbb
test
xchg
inc
in
cltd
daa
dec
outsb
add
xchg
push
repz
add
sbb
and
das
push
mov
fisubs
popf
mov
test
lods
int
add
pop
pop
or
jno
inc
dec
and
add
pop
mov
mov
and
fcoms
lret
xor
ja
arpl
mov
sub
pop
lret
stc
ljmp
scas
ja
ss
mov
stc
inc
ficomps
andb
lahf
and
xchg
xchg
push
xchg
adc
mov
mov
xor
dec
jno,pt
xor
inc
rcr
mov
aam
stos
pop
in
daa
inc
mov
push
dec
mov
lret
inc
jle
pop
cmc
xchg
xor
ja
jle
or
cmpsb
xchg
sub
cltd
or
sbb
push
out
in
in
aas
shrl
mov
add
fdivl
cmpsb
mov
xchg
inc
fwait
sbb
stos
das
mov
sbb
xchg
jecxz
test
push
clc
imull
pop
sub
mov
mov
cmpsl
jg
rcll
scas
or
addb
xchg
std
dec
xor
jno
outsl
and
movnti
inc
fisubs
jne
imul
jl
jae
stos
insl
mov
cmc
mov
add
cs
lcall
popf
hlt
iret
inc
sahf
pop
lcall
mov
jp
pop
jnp
adc
inc
std
mov
stos
xchg
push
cmp
mov
mov
jo
mov
dec
and
cmp
pushf
stc
push
arpl
mov
idiv
out
sbb
ljmp
data16
movsb
pop
cmc
jecxz
add
sbb
cltd
xor
js
lock
lods
loope
xorl
cwtl
cmp
into
or
imul
aaa
xor
jb
shrb
fidivrs
movsb
xchg
in
cmp
sbbl
mov
movsb
cli
adc
sub
sub
sahf
cmp
loope
jle
cmc
pop
pop
cmpl
dec
rep
ss
es
in
ljmp
pop
cli
insl
int
mov
and
pop
jne
jae
testl
sub
mov
push
xor
mov
add
mov
das
roll
xor
push
repnz
popa
push
pop
and
aaa
jne
pop
pop
popf
adc
daa
in
sbb
pop
lods
inc
push
inc
xchg
jb
xor
inc
push
movsl
pop
xchg
cmp
mov
andb
iret
dec
push
cmc
mov
mov
fnstenv
dec
scas
xor
push
divl
and
xchg
xor
sarb
push
adc
xor
cmp
dec
jle
pop
sbb
cmp
jge
fidivrs
push
mov
stos
and
in
psubq
test
jo
xor
xchg
cmp
jmp
ret
sbb
dec
aaa
pop
ljmp
loop
inc
mov
cmp
sbb
in
dec
push
outsb
xchg
mov
xchg
or
xor
fstps
inc
test
movsb
xchg
pop
movsl
and
pop
xor
adc
aaa
pop
or
les
mov
mov
xchg
or
and
mov
into
inc
jb
insb
add
aam
inc
jae
jl
out
dec
sbb
sub
mov
jmp
insb
xor
aad
icebp
cmp
dec
cld
fs
js
call
push
pusha
jmp
ret
call
pop
mov
je
cmpsb
sub
add
hlt
mov
jge
mov
in
mov
sbb
push
daa
push
push
rcr
gs
or
hlt
push
or
icebp
jmp
sub
xor
dec
inc
xor
sti
scas
ds
ret
shlb
aaa
cmp
lods
pop
or
pusha
xor
hlt
fimull
or
lea
ja
jns
lahf
mov
ss
addl
pushf
mov
jp
orb
pop
out
test
inc
mov
mov
mov
cmp
push
loopne
mov
es
and
dec
or
mov
aam
adc
fldenv
pop
out
add
shll
addb
inc
neg
popa
mov
aaa
loopne
or
int3
sbb
mov
insl
and
loope
jno
push
inc
mov
iret
or
xor
jnp
sbb
lods
and
adc
pop
xchg
mov
es
pusha
push
aas
repnz
mov
mov
mov
scas
jnp
divl
push
inc
pop
dec
repnz
in
ffreep
out
idivl
daa
cmp
scas
out
sub
movsb
ret
adc
pop
mov
icebp
jae
jns
idivl
cmpsl
xchg
push
pop
pop
add
dec
rol
cltd
inc
pop
outsl
mov
xchg
je
cmp
pop
stos
sti
jecxz
sbb
inc
push
scas
xchg
push
or
mov
test
jp
jns
lods
xchg
xchg
inc
push
xor
cmpl
std
out
movsl
inc
orb
out
out
scas
jge
call
sahf
sub
fstpt
sbb
fbstp
inc
ss
lock
fldl
pop
mov
mov
lret
xor
in
insl
movsb
inc
mov
aas
cmpb
and
mov
fstpl
fsub
sub
add
xchg
mov
add
mov
outsb
mov
jp
pop
pushf
jmp
ret
pop
imul
insb
arpl
xor
popa
pushf
mov
mov
pusha
xchg
mov
mov
cmpsw
xchg
addr16
inc
push
inc
filds
mov
cwtl
inc
add
out
and
scas
inc
pop
push
or
insl
fcomp
sbb
popa
insb
mov
pop
dec
xchg
aam
testb
cmp
in
cmp
add
movsb
shlb
xchg
out
xchg
lahf
mov
movsl
cmc
push
mov
pop
mov
sub
mov
mov
out
push
out
repz
gs
shrl
xor
push
int
int3
and
loopne
jmp
aaa
icebp
or
repz
mov
pop
xchg
aad
mov
loop
cmp
int3
decb
lahf
ret
adc
cli
bound
cmp
mov
scas
dec
mov
ljmp
repnz
cmp
mov
hlt
sub
mov
je
push
fcomps
dec
sti
push
sub
inc
lea
sbb
pushf
mov
mov
dec
test
jl
mov
lahf
dec
lods
in
sub
sahf
aad
sub
inc
movsb
ret
out
scas
in
daa
dec
inc
aaa
inc
xor
jae
push
push
mov
fwait
mov
divl
inc
sbb
adc
jmp
pushf
mov
lods
shll
mov
mov
cmp
push
jbe
and
cmp
xchg
cld
sarb
add
repz
imull
xchg
inc
fcomp
iret
imul
addr16
adc
cmp
test
aas
