push
sub
sub
into
add
xor
add
push
xchg
pop
mov
add
push
xchg
pop
lea
add
push
xchg
pop
xor
add
push
xchg
pop
pop
inc
dec
dec
nop
inc
sub
inc
dec
dec
nop
inc
or
jmp
inc
jmp
push
inc
dec
dec
nop
inc
pop
inc
dec
dec
nop
inc
and
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
xor
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
add
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
jmp
add
jmp
push
inc
dec
dec
nop
inc
decl
inc
dec
dec
nop
inc
inc
inc
dec
dec
nop
inc
inc
inc
dec
dec
nop
inc
add
inc
dec
dec
nop
inc
xor
inc
dec
dec
nop
inc
push
jmp
push
jmp
inc
jmp
mov
jmp
mov
inc
dec
dec
nop
inc
xor
inc
dec
dec
nop
inc
mov
inc
dec
dec
nop
inc
mov
inc
dec
dec
nop
inc
pushw
inc
dec
dec
nop
inc
pop
inc
dec
dec
nop
inc
mov
inc
dec
dec
nop
inc
ss
inc
dec
dec
nop
inc
add
jmp
pop
jmp
sub
inc
dec
dec
nop
inc
lea
inc
dec
dec
nop
inc
lea
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
neg
inc
dec
dec
nop
inc
push
jmp
call
jmp
xor
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
inc
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
mov
inc
dec
dec
nop
inc
add
inc
dec
dec
nop
inc
decb
inc
dec
dec
nop
inc
inc
jmp
lea
jmp
push
inc
dec
dec
nop
inc
mov
inc
dec
dec
nop
inc
add
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
lea
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
pop
inc
dec
dec
nop
inc
inc
inc
dec
dec
nop
inc
mov
jmp
je
jmp
call
inc
dec
dec
nop
inc
add
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
call
jmp
xor
jmp
lea
jmp
pushw
inc
dec
dec
nop
inc
pop
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
call
inc
dec
dec
nop
inc
mov
inc
dec
dec
nop
inc
mov
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
subl
jmp
xor
jmp
push
jmp
pop
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
push
inc
dec
dec
nop
inc
pushl
inc
dec
dec
nop
inc
pushl
jmp
inc
jmp
lea
jmp
lea
inc
dec
dec
nop
inc
call
inc
dec
dec
nop
inc
add
inc
dec
dec
nop
inc
mov
inc
dec
dec
nop
inc
add
jmp
movl
jmp
pop
push
lea
pop
pop
push
lea
pop
pop
jmp
push
jmp
lea
push
lea
pop
inc
push
lea
pop
mov
push
lea
pop
xor
push
lea
pop
mov
push
lea
pop
mov
push
lea
pop
sub
push
lea
pop
mov
push
lea
pop
mov
jmp
xor
jmp
cmpb
push
lea
pop
je
push
lea
pop
mov
push
lea
pop
call
push
lea
pop
add
push
lea
pop
ret
push
lea
pop
lea
push
lea
pop
call
jmp
lea
jmp
call
jmp
int3
jmp
inc
jmp
lea
jmp
lea
push
lea
pop
inc
push
lea
pop
sub
jmp
lea
jmp
push
push
lea
pop
xor
jmp
add
jmp
stos
jmp
push
jmp
cmp
push
lea
pop
jb
push
lea
pop
pop
jmp
lea
jmp
push
push
lea
pop
push
jmp
pop
jmp
lea
jmp
mov
push
lea
pop
xor
push
lea
pop
lea
push
lea
pop
xor
push
lea
pop
push
push
lea
pop
movzbl
push
lea
pop
mov
push
lea
pop
movzbl
push
lea
pop
mov
jmp
jne
jmp
add
push
lea
pop
cs
push
lea
pop
inc
push
lea
pop
mov
push
lea
pop
cmp
push
lea
pop
jb
jmp
mov
jmp
mov
push
lea
pop
mov
jmp
movl
jmp
lea
push
lea
pop
sub
push
lea
pop
mov
push
lea
pop
mov
push
lea
pop
lea
push
lea
pop
dec
jmp
add
jmp
jne
push
lea
pop
xor
jmp
pop
jmp
pop
push
lea
pop
mov
push
lea
pop
mov
push
lea
pop
mov
push
lea
pop
test
push
lea
pop
jbe
push
lea
pop
inc
push
lea
pop
sub
push
lea
pop
mov
jmp
call
jmp
mov
push
lea
pop
add
push
lea
pop
xor
push
lea
pop
lea
push
lea
pop
mov
push
lea
pop
mov
push
lea
pop
push
push
lea
pop
lea
push
lea
pop
mov
jmp
lea
jmp
movzbl
push
lea
pop
add
push
lea
pop
add
push
lea
pop
mov
push
lea
pop
shl
jmp
push
jmp
xor
push
lea
pop
inc
push
lea
pop
dec
jmp
jb
jmp
pop
push
lea
pop
pop
push
lea
pop
pop
push
lea
pop
add
push
lea
pop
pop
jmp
xchg
jmp
push
push
lea
pop
mov
push
lea
pop
ret
jmp
pop
jmp
mov
push
lea
pop
pop
push
lea
pop
ret
push
lea
pop
mov
push
lea
pop
pushl
push
lea
pop
push
push
lea
pop
push
push
lea
pop
pop
jmp
push
jmp
lea
jmp
mov
push
lea
pop
add
push
lea
pop
cmp
jmp
push
jmp
inc
push
lea
pop
sub
push
lea
pop
jmp
push
lea
pop
lea
push
lea
pop
xor
jmp
add
jmp
inc
push
lea
pop
lea
push
lea
pop
inc
push
lea
pop
mov
push
lea
pop
add
push
lea
pop
inc
push
lea
pop
add
push
lea
pop
mov
push
lea
pop
mov
jmp
call
jmp
add
push
lea
pop
mov
push
lea
pop
add
push
lea
pop
ret
add
jb
data16
mov
mov
xor
sbb
into
add
cmp
pushf
dec
cmp
xor
jl
mov
xchg
std
mov
xor
xor
dec
faddl
mov
out
fldenv
aam
shl
data16
xlat
inc
xchg
in
mov
pusha
and
and
cmp
cmp
daa
scas
arpl
and
or
dec
cmpsl
mov
fnstsw
mov
push
aam
lahf
fsubrs
cltd
or
out
mov
xor
dec
jnp
sbb
sub
xchg
les
push
adc
mov
lds
xor
addr16
jmp
lods
addr16
nop
add
mov
cwtl
cmc
adc
adc
pop
std
or
pop
push
push
and
js
sub
addr16
call
xchg
in
xchg
jo
out
xchg
fmuls
lea
les
shll
pop
out
and
push
inc
sub
adc
add
push
hlt
leave
out
aas
jno
sub
xchg
push
mov
int
add
pop
mov
lahf
adc
add
mov
lret
mov
and
mov
aam
sub
les
pop
fsubp
les
mov
out
in
sub
pop
mov
cwtl
jmp
test
mov
stc
loope
enter
push
repz
inc
shl
das
sbb
rorl
ror
fdivrl
fwait
pushf
or
cmpl
push
jbe,pn
adc
sahf
mov
sti
aam
shll
sbb
test
pop
mov
mov
ret
jg
enter
ljmp
stc
daa
fwait
fs
movsb
shrl
test
out
aad
mov
cmp
and
ror
xchg
imulb
loop
int3
jnp
std
out
stos
sub
xlat
adc
cmp
sahf
test
insl
xlat
jmp
xchg
mov
aad
xchg
sbb
xchg
mov
shrl
xchg
cmp
add
sub
test
jl
cs
scas
ljmp
call
aas
shll
in
xor
mov
mov
ljmp
test
add
movsl
mov
incb
add
testl
mov
leave
or
dec
cld
and
add
call
fidivrs
mov
push
mov
rol
pop
push
inc
xchg
xor
icebp
inc
test
leave
adc
pushf
in
jmp
pop
jl
fucomip
push
xor
ret
daa
rclb
int3
xor
repnz
lock
loop
stos
cwtl
lcall
movsb
jg
and
lods
cmp
push
mov
cmpsl
sub
iret
test
sbb
cmp
adc
mov
or
xchg
sub
jp
in
add
movsb
hlt
jge
pop
push
sub
es
cs
jne
xchg
out
int3
testb
lods
cltd
push
jge
lcall
mov
movsb
fmuls
je
sub
cmp
mov
daa
push
push
dec
push
arpl
movsl
xor
sahf
lods
enter
loop
xchg
iret
xor
fisubrs
gs
adc
imul
ret
add
xchg
and
je
push
sub
adc
fwait
mov
pop
mov
push
fwait
adcb
sbb
sub
stos
inc
or
repnz
jno
loope
fisttpll
inc
cmpsb
aad
bound
pusha
loopne
mov
outsb
ret
sbb
int
cmc
dec
mov
or
sbb
and
mov
mov
outsl
mov
dec
xchg
dec
insl
rcr
adc
sub
dec
std
jmp
into
out
aaa
out
push
jno
jl
mov
ret
xor
xor
test
push
in
xchg
aaa
mov
jns
inc
stos
pusha
or
xchg
mov
xchg
xchg
cmc
push
cmpsb
outsb
push
jae
mov
cmp
jge
inc
jnp
sub
es
ret
cmp
xor
mov
jmp
mov
pop
mov
push
jl
cmc
into
cwtl
pusha
subl
push
jle
sbb
or
addb
xchg
lret
imul
jg
add
fists
insl
mov
pop
and
dec
jecxz
popa
mov
daa
ds
mov
pop
insl
leave
popa
jno
jp
mov
adc
dec
das
pusha
jle
cld
imul
or
add
cmpsb
or
pushf
sub
enter
xchg
dec
cmp
testb
fadds
xchg
test
loope
cld
das
sub
pop
cmc
daa
repz
pop
insb
add
cwtl
into
in
out
aaa
hlt
mov
insl
repnz
sub
xchg
cmc
aam
pop
std
test
sbb
lcall
xchg
mov
inc
and
repnz
xchg
xchg
dec
pop
cs
jb
ficoml
lret
mov
xchg
les
loop
push
outsb
push
and
and
jl
mov
popf
es
hlt
push
pusha
in
fdivrp
loopne
fisubl
dec
cltd
add
aad
xchg
lods
ds
jo
ret
mov
push
sbb
stc
cmpps
xor
arpl
jbe
lret
mov
out
in
cltd
cmp
xor
xchg
jbe
inc
test
in
fs
fsubl
lret
lcall
or
jne
xchg
arpl
pop
lea
stc
sbb
mov
cmp
sub
jae
mov
push
rclb
mov
stc
xchg
pop
sbb
loope
pop
mov
fld
in
inc
add
xor
and
fcoms
push
cli
lea
jae
add
mov
sub
lcall
xor
or
jae
pop
mov
int3
ds
jp
out
mov
adc
shrb
xchg
dec
das
xor
lret
xor
mov
sub
fbstp
cmp
adcb
cmp
xchg
ja
pusha
lock
cltd
inc
mov
dec
xor
sbb
jl
insb
add
rcr
addb
mov
shlb
in
mov
pop
sbb
rcr
idiv
mov
mov
lds
fs
sbb
ljmp
cwtl
jg
cmp
cld
sub
jb
sbb
aam
dec
cmp
lea
ss
sahf
leave
adc
fs
xchg
movsb
lock
lods
sub
jecxz
inc
add
inc
mov
stc
jb
ljmp
push
and
add
mov
push
adc
dec
pop
aaa
leave
imul
insw
sub
adcb
xor
les
ja
pop
jl
add
sub
and
push
pusha
adc
xchg
mov
pop
jp
ret
lds
out
leave
mov
aad
lods
call
push
cmp
mov
fcoms
push
data16
ja
mov
xchg
enter
mov
inc
lea
add
outsb
xor
out
lcall
cmp
dec
ljmp
ret
jno
and
lahf
pop
inc
mov
int3
jl
xor
fwait
pop
or
in
mov
mov
clc
loop
xchg
pop
mov
mov
in
fisubrs
dec
popf
xor
mov
movsb
cltd
test
sbb
push
sub
loop
cld
cmp
scas
sti
repz
sub
sysret
out
xchg
addb
fimuls
xor
adc
dec
sub
pop
sub
or
test
cmp
iret
rcrl
mov
pop
scas
test
xchg
aad
or
jnp
push
out
xor
outsb
and
push
add
cmpsl
add
or
mov
jae
adc
ret
mov
push
jge
fldl
daa
ja
icebp
add
aad
mov
aaa
adcb
xor
dec
adc
lods
mov
pop
dec
xchg
enter
in
sub
jecxz
or
inc
mov
xchg
pop
cmp
mov
and
fmull
pop
cmp
pop
and
push
imul
cltd
xchg
xchg
add
lcall
xchg
mov
in
or
mov
or
sub
xor
int3
jno
cmc
push
imul
fs
dec
ret
shrb
outsb
push
aas
idivb
pop
je
in
cld
xchg
fsubp
stos
shrd
fbld
pushf
xchg
dec
faddl
inc
mov
and
je
popa
xchg
gs
xlat
xchg
movsl
popf
testl
fbstp
into
mov
ds
andl
dec
les
cmp
adc
cmp
pop
stc
nop
cmc
cmp
and
mov
sahf
adc
adc
sahf
cmp
mov
cmpsl
mov
xchg
or
stc
pop
adc
push
mov
shrb
ljmp
push
lahf
loopne
cmp
and
stc
mov
jo
push
mov
out
arpl
mov
movsb
ja
mov
scas
push
stc
or
inc
jge
and
pop
lods
sti
pop
cmpsb
lret
rcll
mov
dec
xor
push
cs
mov
in
push
fxch
nop
loope
daa
lahf
mov
mov
xchg
mov
cmp
pop
outsb
cmp
sub
stos
sahf
scas
xchg
in
fldl
test
lret
xor
addb
stos
mov
stos
add
mov
xchg
mov
and
push
cmc
idiv
mov
shr
mov
insl
insb
lea
mov
cmp
je
movsl
add
cmpl
gs
call
cmpsb
std
adc
push
fdivrs
enter
outsl
stc
xchg
push
mov
or
xchg
lahf
sub
das
sahf
xor
cmp
lods
or
loope
fcmovb
js
mov
push
jae
pop
push
sbb
fucom
hlt
add
daa
mov
nop
push
fsubrs
dec
dec
xchg
dec
cmc
xor
push
pop
sub
rolb
rcrb
subb
xor
insl
push
push
aaa
cmc
sahf
sub
mov
stos
mov
xor
lea
test
std
in
add
push
out
xchg
xor
out
adc
sarl
fucom
out
cmpl
mov
je
lret
dec
dec
push
and
push
ret
adc
mov
lret
xor
push
adc
out
push
ds
mov
mov
imull
std
data16
and
adc
leave
mov
inc
jae
arpl
jmp
pop
lahf
jl
cmpsl
imul
push
imul
add
std
ja
dec
push
push
inc
aam
or
imulb
cmp
inc
dec
jbe
shlb
mov
nop
ljmp
cmpsb
mov
push
inc
cmp
xchg
xor
fwait
dec
ss
jecxz
movsl
out
mov
fdivrl
ja
daa
pop
mov
loopne
int
dec
mov
xor
test
aam
movsb
cli
mov
pop
sarl
lea
xchg
or
jbe
xchg
jle
ja
je
sarl
aad
int3
sahf
ljmp
repz
xor
and
lret
testl
inc
nopl
test
adc
into
xor
pushf
or
shlb
xchg
hlt
js
xorl
notl
mov
iret
xchg
lea
dec
dec
pushf
pusha
push
add
cmp
lock
in
imul
test
ss
mov
push
js
divb
loope
mov
cmp
xor
dec
mov
mov
aas
adc
es
pmulhuw
jecxz
mov
jge
xlat
sbb
pop
into
sar
mov
cmp
inc
popf
mov
jne
pop
mov
out
enter
call
inc
lret
fisubrs
or
repnz
push
and
mov
loope
push
mov
jecxz
or
pusha
xchg
dec
mov
add
das
outsl
pop
ret
push
or
mov
je
mov
add
push
fs
cs
cmp
ds
lods
jmp
jl
xchg
sahf
sub
dec
mov
sbbl
xor
xchg
inc
cmp
cs
xchg
jl
loope
dec
jnp
stos
cli
je
test
dec
cmpsl
jl
hlt
sub
push
pop
je
nop
notl
ret
ljmp
add
adc
repz
sub
aad
add
dec
shrl
jae
cwtl
adc
mov
bound
push
out
dec
movsl
xchg
cmp
test
inc
pop
add
imul
sub
sub
test
pop
adc
into
out
pop
std
sub
dec
jae
jbe
and
in
mov
and
dec
jmp
pop
mov
jl
decb
jb
repz
or
sub
pop
enter
div
out
push
imul
fadd
mov
cli
jge
rolb
inc
clc
xchg
int
xchg
test
lods
push
adc
ljmp
dec
cmp
int3
fstps
adc
sub
dec
pop
aaa
fincstp
ret
lock
out
je
mov
xlat
in
test
push
dec
dec
adc
push
jnp
mov
dec
aad
mov
ret
stos
mov
jnp
mov
jnp
or
xor
xchg
jle
push
xchg
pop
shll
in
int
scas
pop
or
xlat
cld
call
idivl
aad
add
aas
xchg
pushf
and
inc
loop
adc
adc
adcb
sub
adc
dec
dec
pop
mov
scas
in
pushf
stos
iret
ret
lcall
lods
loopne
xrelease
fdiv
mov
push
stos
roll
lea
bnd
rcrb
ss
adc
inc
inc
pop
inc
or
pop
ret
pop
mov
and
cmp
or
adc
mov
lods
loop
dec
sti
into
mov
pop
pop
cmp
cmc
or
dec
ljmp
loope
arpl
pop
icebp
aaa
adc
enter
inc
or
mov
sub
sub
movsl
and
test
cwtl
sbb
push
pop
cwtl
xchg
sbb
outsb
mov
pop
out
xor
jmp
pop
mov
mov
jmp
mov
add
stos
pop
hlt
fwait
mov
gs
pop
sbb
jo
lock
pop
movsb
lods
pop
inc
mov
in
icebp
push
pop
aas
stos
sub
xchg
mov
mov
jbe
jmp
repnz
add
or
cmp
xchg
rcrb
push
mov
out
pusha
movsb
sahf
out
ret
cmpsl
jnp
cmp
mov
cmp
pusha
cmpsb
test
jmp
mov
iret
outsb
in
out
or
shrb
jle
adc
xchg
pop
and
pop
xor
stos
aam
adc
push
cmp
mov
out
pop
fisubs
rcrl
and
jns
notl
fmul
loop
xor
or
or
and
dec
gs
test
repz
inc
xor
add
add
js
jnp
aam
decb
out
loopne
cmp
hlt
rorl
testl
arpl
inc
jae
sub
cmpb
cmp
stos
or
in
mov
sbb
repnz
inc
loopne
clc
ja
dec
sarl
cmp
out
sub
xchg
fwait
xchg
insl
bound
push
push
data16
add
jne
xor
mov
pop
gs
gs
or
or
pusha
mov
stc
subl
mov
mov
or
push
inc
xchg
xor
add
cmpsl
in
bound
cmp
add
movsl
data16
outsb
mov
aas
sbb
ret
mov
pop
or
shl
scas
mov
addl
call
push
and
pop
cmp
and
cmp
or
filds
jl
repnz
xchg
shll
pushw
lahf
sub
data16
cs
adc
adc
out
push
sbb
stc
xchg
xchg
mov
pop
ret
loopne
test
lahf
mov
adc
cmp
dec
pushf
pop
sub
mov
cli
xchg
xor
mov
rcll
inc
movsb
sbb
aam
repnz
fcmovne
in
xchg
das
lcall
push
xor
inc
call
or
in
movsl
inc
cmp
pop
xchg
cwtl
mov
mov
mov
inc
insl
lret
push
cmc
pusha
data16
push
cli
outsl
cmp
xchg
lahf
and
scas
mov
xor
cwtl
xor
daa
mov
fwait
wrmsr
inc
sub
test
inc
jb
cmp
inc
es
mov
vsubps
jmp
push
cld
cmp
push
leave
mov
and
ret
icebp
out
inc
fldlg2
pop
xchg
cmp
mov
add
and
pop
hlt
jle
flds
fsubrl
int3
sub
and
dec
out
mov
xchg
xor
jbe
mov
mov
mov
sbb
nop
mov
jnp
out
xchg
ljmp
mov
aas
popa
call
in
in
test
or
xchg
sbb
adc
sbb
mov
bound
fnstcw
inc
out
dec
lea
aaa
pusha
rcll
dec
push
adc
test
aad
xlat
pop
sub
mov
pop
ss
test
jo
out
dec
popa
pop
jl
mov
adc
adc
inc
and
lcall
mov
mov
push
roll
ja
popa
subb
fdivr
sbb
daa
jl
arpl
sub
fisttps
mov
pop
inc
bnd
inc
mov
aas
iret
adc
push
inc
cli
mov
push
xchg
aaa
xchg
mov
jns
filds
mov
movsb
mov
les
adc
mov
mov
and
sub
mov
push
cmpsl
mov
sub
inc
addl
jno
dec
iret
push
lret
hlt
repz
iret
push
test
shlb
push
push
in
or
xchg
inc
in
cmp
push
shrl
jge
dec
push
xor
jg
pop
popa
cmp
cld
mov
lret
push
test
pushf
add
mov
xchg
mov
lcall
inc
orl
cmc
pushf
lea
repnz
mov
fsubp
lahf
data16
fidivrl
add
sahf
inc
in
xchg
sub
inc
cmp
dec
xchg
clc
fdivp
insl
lea
popa
jecxz
dec
push
cmp
cmpsl
in
and
stos
jnp
push
lahf
repnz
add
sub
adc
mov
sbb
or
push
add
dec
jp
mov
pop
fiaddl
pop
and
ret
cmp
xchg
dec
dec
shlb
jmp
dec
aaa
mov
add
jle
mov
push
mov
sbb
popa
or
xchg
jbe
ds
sbb
outsl
xchg
mov
lret
stos
mov
cwtl
ss
dec
shll
mov
in
lock
cmp
sbb
ds
pushf
out
dec
adc
pushf
or
sti
inc
jns
jg
in
fcomps
rcrl
aas
pop
cmc
jge
sbb
adc
cld
rcrl
jp
aam
adc
push
sub
je
data16
add
jecxz
jle
cltd
ret
jmp
jae
out
dec
cmc
push
lea
mov
out
cli
cmp
lahf
mov
push
jne
sub
inc
je
popa
icebp
adc
cmp
push
dec
into
push
icebp
jno
cmp
pop
incb
fwait
clc
stc
iret
fwait
add
aad
imul
or
iret
mov
lahf
push
xchg
push
or
ljmp
push
adc
arpl
sub
cmp
imul
jg
push
or
push
and
out
mov
inc
out
push
mov
pop
xchg
clc
stos
jno
xor
stos
pop
pop
push
mov
xchg
cs
cmpl
movsb
and
cld
push
cmp
stos
cli
les
pop
stos
sbbb
in
movb
cmp
lods
cli
jnp
push
lods
add
jl
fistpl
cmp
inc
adc
xchg
push
xchg
test
shll
sub
arpl
lcall
sarb
nop
mov
pop
sbb
pop
or
ds
lods
mov
cmp
sbb
sub
cmp
adc
mov
push
xor
adc
dec
cmc
and
lock
adc
xchg
stc
mov
in
clc
mov
or
stos
sub
and
push
push
adc
mov
xor
cmp
push
lcall
repz
nop
xchg
or
jns
mov
dec
mov
mov
mov
dec
jg
sbb
sbb
mov
rcrb
mov
push
imul
adc
inc
lods
mov
cmp
aas
adcb
mull
dec
or
iret
mov
inc
movsl
pop
shll
fmul
pusha
sub
lcall
fimuls
mov
push
cmp
lock
lock
add
ficomps
rcr
push
push
aas
data16
xchg
jno
pop
push
push
dec
mov
adc
xor
jp
dec
in
les
xor
jecxz
push
leave
hlt
lcall
mov
je
xor
jbe
jno
addl
mov
push
adc
pop
inc
lea
shll
xchg
jo
in
xor
adc
pop
lret
mov
clc
mov
and
xchg
bound
jecxz
inc
and
lret
sbb
loope
subb
stc
sbbl
mov
enter
ret
cmpsl
lods
add
gs
jns
pop
push
lcall
or
sub
insl
popa
aam
inc
dec
cmp
jo
les
pop
xor
test
js
jecxz
mov
mov
adc
cmpsb
xor
out
push
inc
mov
lea
cld
pop
lods
imul
adc
push
push
jo
loope
movsb
xor
pop
shr
shlb
push
test
jbe
jp
or
pop
jp
loop
pop
lea
pop
jmp
pop
dec
cli
jne,pt
mov
mov
mov
fidivrs
sub
pushf
xor
adc
imul
ret
stos
dec
sub
mulb
adc
mov
aam
movsb
insb
mov
lea
xchg
fs
je
addr16
shrl
insb
test
cmp
mov
aaa
ret
and
adc
xchg
aaa
add
xor
xchg
sub
repz
ja
lock
inc
ret
pop
fwait
mov
scas
ds
pop
inc
iret
lahf
fmull
and
xchg
mov
ss
fmull
in
or
xor
cmpsb
push
sbb
fiadds
or
xor
adc
pop
push
in
jge
sbb
add
mov
iret
jecxz
add
cmp
mov
stc
fnstsw
sahf
sahf
movsb
cmc
mov
lret
in
mov
xchg
movsl
jmp
in
dec
jp
jnp
mov
jp,pn
xor
mov
push
fmulp
cwtl
xor
clc
into
pop
cwtl
cmpsb
daa
roll
mov
scas
or
add
jecxz
aam
repnz
cmp
dec
add
sbb
pop
cmpsl
es
xchg
jne
mov
add
rolb
cmp
mov
jno
push
mov
notb
cli
push
std
test
xor
jne
xor
dec
xchg
xor
idivl
xchg
mov
dec
pop
adc
inc
ss
inc
pop
dec
sarb
cmpsl
mov
mov
mov
pop
pushf
mov
add
cmpsl
jns
pusha
add
imul
mov
pop
inc
push
ja
add
lret
cmp
cltd
lret
fs
inc
push
roll
push
pop
jo
sbb
adc
jo
push
rolb
imul
mov
pushf
jno
faddl
gs
xor
int
add
rorb
inc
pusha
jge
repz
inc
cmpsb
push
pop
pop
lret
xchg
idivb
xor
push
jecxz
jg
push
mov
jns
negb
cmp
sarl
mov
mov
out
or
test
inc
mov
xorb
mov
cmp
call
inc
and
lock
and
xchg
pop
shlb
ret
mov
mov
mov
sbb
pop
inc
xor
mov
push
ret
mov
pop
sbb
mov
lods
mov
lret
aam
add
arpl
clc
ss
ljmp
adc
fcmove
add
jg
arpl
addb
push
popa
push
test
jmp
fidivrs
in
sbb
rolb
push
popa
add
mov
sar
insb
cld
inc
sbb
outsl
js
stc
cmc
mov
mov
shrl
test
insl
int3
inc
call
pop
jo
test
add
aaa
inc
or
in
add
outsl
dec
xchg
xchg
mov
mov
repz
dec
or
imul
out
mov
mov
mov
lret
push
cltd
aaa
shlb
lock
mov
xor
and
push
push
push
ret
xor
inc
push
repz
pusha
push
gs
bnd
pop
dec
xchg
stos
lret
push
mov
lret
or
jmp
jle
cmp
add
pop
flds
stc
inc
xor
pop
mov
aas
mov
iret
sub
notb
xor
aad
imul
dec
gs
setae
popa
and
lods
mov
push
testb
xor
push
or
rcrl
mov
das
pop
cmp
call
imul
sub
add
push
fsts
mov
push
ljmp
xlat
and
mov
mov
push
jmp
pushf
xor
test
or
std
insl
leave
in
out
mov
cmpsl
je
call
add
sub
fdiv
jb
outsb
ret
orl
imul
mov
fwait
push
xchg
mov
inc
clc
rorb
jno
or
in
sbb
in
js
xor
jmp
into
mov
push
fwait
cld
lock
ss
mov
sub
cmp
mov
cmp
mov
pop
cwtl
mov
sbb
test
shlb
mov
push
push
cmc
ss
cmpsl
aad
add
out
mov
aas
sbb
leave
ss
aad
pop
lret
repz
jbe
movsl
push
xlat
aas
sbb
add
repnz
add
fst
pop
mov
fldt
repnz
inc
dec
in
cld
xchg
add
sbb
dec
mov
push
pop
xchg
cld
pop
mov
cltd
cmp
pop
add
or
ret
sub
pop
ja
add
subl
mov
or
daa
mov
jmp
xor
adc
ret
cmp
imul
pop
mov
inc
mov
sbb
bound
cmp
mov
xor
sub
fucom
inc
xor
into
jmp
movsb
in
mov
dec
jmp
dec
mov
ret
imul
adc
push
adc
mov
mov
xor
cmp
lcall
add
sbb
adcb
aam
fsub
stos
or
jecxz
dec
inc
fwait
outsb
mov
je
mov
sub
push
and
adc
cmp
fisubs
dec
jns
mov
sub
out
hlt
jo
sbb
sbb
mov
mov
inc
sbb
or
imull
or
xchg
in
xlat
es
jb
shll
in
int3
pusha
sbb
jns
push
clc
mov
push
mov
dec
mov
jnp
or
xchg
mov
sbb
and
fprem
mov
sub
mov
test
mov
lods
aad
push
and
add
and
aaa
sub
ljmp
nop
cmp
inc
mov
fldenv
sub
pop
adc
jecxz
out
add
dec
cmpl
xchg
mov
mov
lds
adc
sbb
mov
int3
stc
ret
test
or
jl
pop
data16
and
xor
lret
out
insb
int3
scas
adc
loopne
lods
jle
sub
ret
pop
pop
add
jno
inc
clc
test
and
dec
mov
jle
test
jmp
adc
shrb
inc
push
xor
xchg
xchg
mov
fstp
fdivrl
sub
inc
xchg
cmovg
xchg
cwtl
and
push
mov
out
lret
repnz
add
stos
mov
into
mov
sub
mov
jno
pop
cltd
or
mov
jo
sti
or
nop
aam
xchg
xchg
ror
into
popa
test
jge
push
es
repz
leave
mov
test
mov
mov
dec
aam
xchg
lret
mov
xor
cmpsl
in
fsubs
sahf
adcl
das
insl
add
js
inc
add
subb
push
repnz
sahf
pop
out
pop
cmp
jmp
xchg
cmpsb
sub
insl
sub
aam
push
jo
cmpsl
pusha
jecxz
jp
xlat
xor
lret
movb
div
push
mov
ffreep
inc
pop
lret
notl
mov
icebp
pop
scas
or
stos
xlat
adc
mov
jmp
cltd
add
ja
inc
push
int
xor
test
sub
jge
sbb
dec
mov
mov
mov
gs
push
cmpsb
mov
jne
movsb
mov
fidivl
lds
mov
jg
cld
mov
xor
sub
out
ss
divl
ret
or
adc
add
gs
int
sub
nop
xchg
mov
and
jae
jno
negb
fs
aad
roll
scas
subb
mov
pop
lods
mull
movsb
rcrb
pop
repz
mov
ds
test
loope
xor
in
scas
pusha
adcb
in
sbb
inc
xor
pop
hlt
jge
mov
arpl
pushf
pop
lret
mov
stos
cld
mov
push
mov
mov
movq
outsl
lret
incb
pop
jp
outsb
or
lds
in
jnp
testl
mov
xchg
out
pop
push
cwtl
pop
add
sbb
les
call
mov
xlat
cs
popa
pushf
std
cmpsb
mov
outsl
add
rcrl
mov
inc
dec
and
xchg
push
daa
xchg
sti
js
adc
dec
or
mov
jp
and
xor
icebp
push
outsb
sub
int
cltd
std
cmp
jno
sbb
lcall
xor
rolb
jbe
pop
mov
inc
aas
clc
add
mov
dec
into
or
decb
stc
stc
push
gs
outsb
cmp
scas
shlb
fdivrl
push
popf
pop
sub
push
xlat
aas
adc
add
mov
jb
xor
out
arpl
daa
pop
sbb
cmpsb
adc
roll
or
fisubrs
or
aad
addr16
dec
test
and
add
push
ret
setle
inc
mov
xchg
dec
cwtl
enter
mov
xor
mov
enter
mov
jle
in
iret
out
push
scas
mov
sub
fmul
sbb
movsb
add
jbe
xor
mov
orl
sub
cltd
inc
jo
pushf
sbb
inc
inc
cmc
fsubs
insb
lret
push
fists
xchg
scas
mov
jae
xchg
outsb
fiaddl
cmp
xchg
arpl
rcrb
push
imul
ret
in
movsl
andl
testb
mov
cmp
cmpsl
dec
sti
xchg
and
mov
push
sbb
in
jnp
adc
mov
cli
aam
cli
jno
repnz
in
xor
repz
out
sbb
rcr
pop
inc
ss
je
rorb
dec
xchg
shll
aam
daa
adc
lods
lods
test
loop
imul
jae
pop
in
fldenv
mov
divb
sbb
ffreep
test
dec
mov
mov
mov
jnp
fstpl
ret
jl
and
enter
jg
jle
dec
mov
mov
pop
sub
dec
loope
rcrl
sbb
data16
lahf
in
outsl
shlb
pop
mov
aaa
pushf
pop
mov
mov
pop
ficoms
mov
pushw
pop
shlb
shl
lds
jns
mov
add
test
rcrl
cltd
mov
adc
xlat
pushf
xor
es
leave
xchg
sbb
repnz
xor
sti
int3
aas
push
lret
xchg
jne
lret
dec
ja
mov
mov
test
fsub
js
push
test
cwtl
adc
or
adc
dec
in
hlt
pusha
mov
jae
push
xorl
cmp
xor
mov
imul
cmp
ret
sti
stos
inc
aam
scas
sbb
inc
mov
inc
mov
fstl
lcall
clc
shlb
jge
lods
adc
jb
dec
mov
lea
mov
add
push
test
dec
xor
notl
loopne
ja
clc
dec
and
lret
lea
lea
inc
gs
lea
pop
mov
mov
fisubs
jns,pt
add
or
mov
bound
cmp
add
das
sbb
sub
jge
clc
ljmp
mov
and
add
cmp
loopne
or
fwait
in
push
xor
movsl
repz
jmp
inc
sbb
cmpb
mov
mov
sbb
imulb
es
mov
jge
ds
xchg
inc
bound
pop
push
inc
test
pop
jl
sub
cmp
out
notl
add
mov
xor
xor
pop
mov
mull
mov
aam
fdivrs
adc
mov
xor
shlb
dec
push
cmovle
repnz
lods
repz
iret
aam
mov
pop
pop
mov
jns
cmp
jp
inc
sahf
notl
imul
jecxz
test
pushf
scas
pop
insb
cltd
cmp
