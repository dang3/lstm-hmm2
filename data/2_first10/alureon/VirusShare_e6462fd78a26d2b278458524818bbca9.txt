aaa
adc
ss
fidivl
push
sbb
leave
mov
mov
dec
enter
push
iret
add
insl
mov
mov
nop
sub
xchg
add
arpl
mov
pop
pop
add
dec
sbb
out
in
mov
sub
cmp
dec
xchg
and
push
movsb
push
inc
cmpsb
outsl
test
fwait
clc
cli
fs
jno
add
in
xchg
arpl
lods
scas
lret
xchg
dec
popl
and
lods
aas
jbe
and
jno
jo
out
mov
jb
and
cli
sbb
int
bound
add
aad
imul
xchg
xchg
prefetchnta
enter
xor
dec
jmp
cld
aam
mov
sbb
inc
xor
jno
xchg
mov
pop
xchg
bnd
mov
xchg
je
rclb
mov
ja
stos
popa
es
lds
jmp
pop
inc
pop
repz
sbb
outsl
inc
push
pop
mov
adcl
inc
in
aam
repnz
pop
add
fnsave
decl
jns
xlat
lret
popf
enter
pop
popa
jg
fsubrs
aaa
data16
jecxz
ds
fstp
aad
dec
and
mov
scas
mov
mov
pop
xchg
mov
push
fsincos
mov
adcb
pop
test
dec
sub
jl
jno
mov
test
inc
sub
mov
cmp
and
dec
fwait
push
clc
mov
mov
test
xchg
mov
lods
inc
fisttps
scas
dec
mov
cmp
and
stc
inc
xchg
test
inc
mov
and
shrb
cld
data16
sbb
aaa
sahf
pop
cmpsl
std
xchg
dec
mov
rcll
adc
xchg
rorl
jmp
ja
add
jb
or
sbb
ds
adc
and
outsb
pusha
adc
lock
or
pop
sbb
inc
mov
mov
dec
sbb
rclb
pop
outsl
roll
ljmp
repz
push
push
xchg
stc
ja
pop
lods
push
xlat
addr16
jns
aad
insb
push
divb
and
sbb
dec
dec
cmpsl
fiadds
divl
out
es
sub
cs
imul
leave
daa
pop
mov
popa
adc
inc
mov
in
ficomps
cld
hlt
inc
mov
sbb
insl
loopne
xchg
lods
negl
inc
mov
or
pop
add
and
movsb
or
jnp
out
fimull
or
sub
mov
mov
in
loopne
aad
out
xchg
lock
mov
jo
insb
jns
pop
add
cmpsl
xor
ret
dec
mov
jbe
or
mov
repnz
sbb
mov
lret
cmpsl
pop
mov
cmp
add
js
push
call
jge
rclb
and
xchg
lods
fldt
pop
mov
xor
mov
in
xor
push
push
ds
mov
jno
popa
xchg
aaa
dec
mov
xor
jae
xor
push
xor
or
lcall
movsl
cmc
adc
lea
sub
xor
sub
jo
daa
pop
jecxz
pop
aas
push
jae
mov
mov
sti
xchg
fldt
inc
add
imul
xchg
ja
pop
xor
iret
aad
sub
cli
out
mov
inc
add
fcomi
cmp
sub
cmp
lods
mov
stos
cmp
mov
scas
pop
fidivrl
cld
loopne
lods
xchg
mov
xchg
push
imul
pop
and
cmpsb
or
add
ret
mov
adc
xor
lahf
addr16
ret
and
mov
sub
jno
popf
jmp
fsts
sub
cmpsb
sahf
pop
test
inc
lock
shll
jb
adc
adc
fdiv
inc
ja
mov
movsb
shrl
cwtl
ljmp
divb
pop
cmpsl
jne
fnstenv
cmp
mov
fs
mov
idivb
add
mov
daa
dec
and
pop
flds
imul
sti
arpl
stc
cmp
add
ret
jecxz
clc
clc
sub
mov
adc
dec
push
out
jl
aam
jg
stos
cmp
sub
add
pusha
xor
das
adc
inc
and
std
cmp
mov
leave
pusha
ret
and
addl
out
add
mov
mov
xchg
bound
in
and
cltd
xorb
xor
rcrl
mov
xorb
xchg
imul
mov
in
sbb
ja
loop
enter
push
xchg
decb
push
in
or
aam
mov
sti
mov
into
xlat
pop
lret
pusha
int3
mov
ficompl
leave
mov
and
je
bound
sbb
push
inc
jmp
dec
adc
jle
mov
xchg
nop
sbb
scas
aam
test
out
repz
fwait
mov
out
pushf
lcall
fs
pop
bound
pushf
mov
mov
jb
jo
fbld
popf
fisubrl
in
roll
dec
adc
in
imul
cmp
out
add
xorl
jg
cmp
and
out
pop
bound
sub
mov
nop
jne
and
pop
mov
jle
xchg
fnstcw
aam
aam
inc
cmp
jle
outsb
sub
test
mov
rorb
mov
adc
pop
cmp
push
and
add
jb
ret
mov
roll
es
mov
sbb
mov
lret
out
dec
adc
int
jecxz
cld
xor
jecxz
lret
jbe
jecxz
aas
xchg
insb
cmp
rorl
sar
aam
sti
jb
ret
push
test
movsl
push
add
add
pushl
clc
pop
test
jp
adc
pop
imul
xor
cli
test
mov
and
lahf
aam
ds
jle
aam
iret
scas
out
xor
xor
scas
push
stc
xchg
ljmp
inc
mov
xor
jmp
mov
xor
or
push
add
aaa
rcl
int
jbe
es
mov
lcall
and
lods
pushf
into
flds
push
test
cs
sbb
fadds
push
fidivl
sub
jae
pop
dec
push
aam
pop
shll
mov
mov
pop
repz
orl
push
imul
fsubr
pop
pop
jp
sarl
mov
loope
ret
xor
jnp
pop
pusha
dec
or
add
xor
push
xchg
lods
rclb
xor
jmp
lret
pop
push
shr
inc
inc
outsl
xor
daa
mov
fstpt
jo
inc
push
push
cmp
fdivr
data16
push
ljmp
incl
iret
dec
fildll
push
or
xchg
or
lods
pusha
and
and
xchg
mov
clc
adc
sub
js
dec
jmp
and
mov
shlb
pop
lock
add
inc
enter
jne
mov
fdiv
jne
cmp
push
ret
and
sbb
dec
das
adc
dec
fisubl
fmuls
fwait
test
cltd
sbb
insl
inc
cmpsl
pop
into
outsb
test
leave
out
ds
jbe
es
insb
xor
mov
in
mov
fwait
push
test
out
dec
xor
hlt
cmpsb
lock
or
pop
andb
inc
pushf
sbb
data16
jbe
jae
xchg
popl
es
cmp
jge
inc
mov
cmc
pop
imul
roll
mov
in
pop
cmp
lods
in
test
jp
loopne
shrl
out
jbe
lret
cld
or
sbb
cmp
xlat
stc
sbb
dec
fsubl
fs
xchg
sub
iret
mov
or
imul
loope
inc
dec
or
ficoms
stos
testl
mov
pop
xor
inc
jecxz
loop
pop
in
mov
add
jne
pop
int
fs
sub
lret
loopne
xlat
leave
out
dec
sbb
scas
xor
pop
repnz
pop
sbb
mov
push
mov
ds
cmp
imul
ljmp
xchg
or
dec
repz
orb
inc
scas
scas
xchg
aad
or
jge
dec
jecxz
xchg
push
fldenv
jbe
adc
cmc
sub
inc
aaa
shll
cmp
push
stc
push
push
sub
mov
sbb
pop
push
add
add
out
mov
cmp
les
rol
inc
lea
sub
stos
in
xchg
hlt
dec
sub
xchg
jl
dec
mov
iret
arpl
stos
aam
sbb
orl
dec
dec
sti
pop
addl
xlat
mov
out
and
mov
enter
sbb
inc
sti
fisubrl
dec
mov
mov
js
cs
mov
scas
sub
sbb
push
pop
and
adc
stc
cmp
xor
and
inc
dec
cli
outsb
mov
xor
cmpl
adc
cwtl
shr
cmc
rorl
addr16
add
arpl
hlt
jmp
mov
lahf
and
popa
int3
outsb
cmp
mov
pusha
in
out
cmc
ja
jb
cmp
cld
inc
je
mov
dec
adcb
inc
stos
inc
sub
bound
push
imul
aad
xchg
ret
shll
sbb
dec
xchg
cmp
faddl
fildll
insl
jecxz
mov
sub
mov
mov
xor
inc
add
inc
stc
out
fwait
xchg
xor
out
pop
jns
sub
mov
mov
test
pop
ret
sarl
push
scas
jmp
in
cmp
outsb
mov
ljmp
xchg
arpl
mov
gs
and
pop
out
paddw
outsb
rcrb
push
int3
jp
ja
movsb
inc
test
inc
in
sbb
scas
inc
out
sbb
scas
sub
ja
repz
dec
xchg
xchg
xchg
jae
mov
ss
or
and
inc
std
sbb
jbe
insl
push
fiaddl
sub
or
jno
pop
xchg
sub
push
dec
push
je
sbbb
mov
push
rcrb
shlb
nop
not
fcoms
or
fidivrl
nop
arpl
cmpsb
out
mov
push
xchg
movsl
testb
jbe
aam
js
or
test
xor
aaa
add
mov
inc
fstpt
push
mov
js
pop
scas
mul
mov
sti
inc
adc
aam
add
addb
xchg
out
xchg
pop
fsubrs
push
and
adc
shr
arpl
popf
aad
push
dec
xor
jbe
jns
insb
pop
or
mov
sbb
jne
pop
fwait
cmc
pop
clc
sbb
lods
std
dec
sbb
mov
push
or
addl
pushf
inc
testl
mov
xor
rorb
add
jb
loop
pop
or
jne
gs
and
fistpl
mov
mov
mov
jmp
mull
nop
pop
jg
add
push
dec
or
fildll
xor
xor
sbb
mov
push
clc
adc
repz
add
aas
ret
adc
scas
fs
popa
sbb
pop
adc
enter
sti
lods
andl
xor
push
les
fiadds
adc
std
lahf
jl
aas
mov
andb
pop
jle
inc
inc
lret
jl
repz
imul
ret
sub
popf
orl
mov
cmp
push
ret
ret
xor
jmp
and
xlat
pop
repnz
push
push
or
cs
or
mov
xchg
test
imul
jae
fcoml
jb
ljmp
in
xor
enter
ss
pop
fdivs
mov
repz
jo
and
or
addr16
dec
cmp
jbe
das
pop
scas
mov
cmpsl
cmp
jno
stos
icebp
sub
testb
movsb
sahf
jns
pop
rorb
out
ljmp
mov
loop
dec
sub
mov
push
xchg
idivl
test
inc
push
in
ret
xchg
test
dec
les
push
sub
into
in
mov
es
lret
call
dec
inc
and
jmp
inc
inc
ds
outsb
mov
fwait
hlt
addl
jne
jecxz
lods
or
dec
xchg
adc
push
jnp
sub
adc
or
push
cld
js
addb
cli
cli
push
insl
push
xor
sbb
test
jnp
loopne
jl
stc
aas
xchg
dec
mov
lret
mov
cmpsl
in
in
xchg
movsb
cmpsb
dec
mov
scas
ds
jg
cmpsb
lret
shlb
mov
adc
push
and
sbb
xor
sti
movsl
add
aam
mov
xchg
fnstenv
or
adc
mov
xchg
mov
outsl
imul
fadds
and
lahf
out
cmp
xlat
push
pushf
and
sub
add
out
test
mov
int3
arpl
xchg
sbb
jle
pop
lret
fs
pop
ds
xchg
jb
push
pop
out
int
mov
xor
jae
pop
push
add
cltd
jne
push
les
or
jae
inc
push
dec
adc
ret
cli
ret
outsl
call
add
xchg
lret
jecxz
cmp
add
sbb
sub
adc
cwtl
mov
pop
xchg
arpl
and
fwait
negb
fiaddl
outsl
mov
jbe
cmp
mov
aam
insl
inc
aam
xchg
xchg
imull
xor
and
ljmp
lcall
nop
push
push
fldcw
dec
lcall
cmpsl
ljmp
lods
cmc
jp
mov
js
jno
jmp
lret
aaa
roll
rol
or
xor
cmpsl
sub
adc
mov
in
fidivs
dec
out
xchg
mov
mov
sub
cltd
or
iret
dec
xor
cmp
mov
test
dec
repnz
ja
adc
call
xchg
arpl
ret
mov
inc
inc
pusha
nop
xchg
sti
ljmp
inc
add
orl
adc
fs
add
xchg
fisubrs
lahf
xor
pop
dec
test
incl
push
push
push
lret
cmp
jecxz
and
popf
imul
mov
mov
imul
xchg
sti
fcoml
roll
fisttpll
or
sbb
jge
sub
inc
hlt
mov
data16
jno
scas
sub
xchg
inc
ds
cld
movsl
bound
insl
cld
fwait
je
add
cltd
and
iret
lock
stos
push
jmp
xchg
and
mov
pop
xor
jb
loopne
mov
push
cmp
mov
cli
cli
int3
in
gs
repnz
sarb
fldl
push
pop
fs
xor
mov
xlat
orb
shll
sbb
cmp
in
dec
xor
xor
loop
outsb
call
xor
pop
mov
ret
mov
ljmp
mov
ja
mov
out
mov
xor
imul
sub
mov
sti
adcl
dec
stos
dec
sti
mov
lods
insb
jne
jb
pop
lods
mov
sbb
and
and
leave
out
leave
gs
sbb
sbb
or
insl
leave
sbb
inc
push
inc
adc
add
lahf
mov
fisttpll
mov
shlb
test
push
aas
jp
jne
pop
in
pop
push
sbb
mov
ret
jmp
push
mov
and
pop
fcmovu
sahf
push
mov
aaa
call
mov
leave
popa
arpl
in
divb
jnp
pop
add
sub
into
and
xor
lods
lock
vmread
pop
mov
aad
bnd
mov
out
lret
and
lods
test
inc
lea
dec
or
cmp
push
test
push
loopne
jge
fnstenv
outsb
jnp
addl
xchg
mov
add
mov
mov
outsl
std
dec
addr16
cmp
xor
pop
int
jno
fistpll
and
jnp
insb
mov
les
out
cmp
push
pop
imul
adc
jecxz
pop
clc
fidivs
inc
insb
arpl
sarl
cli
push
aaa
test
out
sbb
sahf
iret
pop
lods
mov
adc
ss
in
mov
dec
lahf
cmp
push
inc
mov
cs
xchg
fisttpl
jp
hlt
xor
or
sarb
push
cmp
xor
sbb
mov
in
push
xchg
jo
xchg
xchg
ret
jecxz
popa
inc
xchg
ret
xor
ds
cmpsb
int
fadd
mov
pop
clc
dec
adc
xor
aad
or
loop
sahf
shl
pop
iret
push
jo
daa
leave
movsl
iret
gs
xchg
cmp
ss
and
mov
sbb
rolb
clc
cmp
rcl
push
or
notb
cmp
outsl
pop
repz
dec
ljmp
or
pop
inc
loopne
pop
dec
xchg
lock
jbe
in
sub
addr16
push
push
mov
mov
outsl
stos
inc
cmp
sbb
rcrl
and
ret
fldl
sbb
clc
jno
sbb
ds
pop
adc
in
or
and
outsb
cld
test
lds
inc
stc
pusha
ret
xchg
jbe
push
repnz
pop
push
push
test
test
pop
insl
and
out
xlat
fcompl
mov
jb
test
xchg
clc
daa
lahf
cmpsl
xor
icebp
xchg
xor
jae
pop
test
imul
rolb
fadds
dec
jle
js
pop
xchg
add
xor
fcomps
test
push
cmp
into
rcr
cmpsb
fwait
out
shlb
les
fcom
sub
push
cmp
nop
aam
jnp
aam
in
fldenv
stos
loop
inc
lcall
lret
aad
push
dec
pop
leave
scas
data16
cltd
sbb
sub
pop
xchg
rcll
in
enter
out
inc
push
scas
and
pop
fs
iret
add
pop
xor
adc
inc
sbb
cld
push
movsl
cmpsb
shlb
scas
pop
push
dec
in
pop
mov
pushf
pop
pop
dec
imul
in
xlat
out
mov
jne
lahf
sbb
push
push
dec
mov
push
outsb
mov
add
or
test
inc
xchg
rcrl
cmpsb
loop
mov
aam
inc
cmp
js
pop
and
nop
inc
ret
add
je
jle
jg
jecxz
xchg
mov
ds
sbb
decl
ljmp
test
mov
xchg
loop
loopne
inc
sub
push
int3
mov
addr16
lods
jno
arpl
jecxz
mov
movsl
shl
mov
loop
jae
ret
adc
out
popf
out
test
mov
sub
mov
dec
add
push
mov
cmovs
cmp
or
add
pop
adc
mov
jl
fmull
sbb
out
xor
fdivs
push
fisttpl
cmp
dec
scas
and
mov
mov
sub
sbb
jle
aad
push
out
mov
xchg
adc
in
sub
sahf
push
arpl
xchg
call
int3
jecxz
addr16
dec
mov
push
pop
cs
out
fldenv
clc
sbb
ss
push
adcl
xor
mov
cmc
sbb
and
inc
cmpsb
add
lods
dec
jg
pop
mov
xor
aas
inc
das
cmc
insl
push
out
pop
and
loopne
sbb
repnz
popa
ds
push
push
pop
fldenv
vandnps
enter
std
js
pushf
rcrl
xchg
push
fucom
pop
jge
or
mov
pop
imul
mov
cmc
stos
es
out
xchg
sbb
add
ja
cmp
mov
push
cmp
icebp
dec
sbb
ret
mov
add
xchg
iret
bound
jg
imul
outsl
outsb
ret
dec
pop
rolb
mov
push
cmp
or
push
xchg
xchg
or
jg
inc
dec
cld
push
lcall
pop
mov
pop
cmp
lcall
ret
mov
flds
lret
adc
mov
dec
mov
push
fucomi
loop
dec
push
loop
dec
dec
je
lock
out
loope
divl
clc
insl
es
xor
mov
sbb
push
inc
mull
imul
pop
adc
in
jmp
out
sub
ds
dec
vsubps
push
xchg
cmp
mov
rcr
cmc
sbb
out
adc
leave
adc
ss
jl
jecxz
cmpb
sbb
adc
push
sbb
clc
mov
and
mov
outsl
inc
inc
cmp
repnz
mov
addr16
call
sub
in
shl
inc
inc
pop
aad
aad
pop
cmc
fldpi
jg
mov
inc
push
adcb
inc
cmp
sbbb
shlb
dec
inc
repnz
repz
jb
pop
test
push
adc
mov
repz
inc
test
cmpsb
push
fcmovbe
jp
push
mov
test
hlt
dec
stos
js
mov
sub
push
push
into
cld
adc
push
rcrl
cltd
js
ret
adc
inc
mov
mov
aam
mov
lcall
into
ret
ret
iret
fistpll
sbb
mov
cmc
sub
out
pop
sahf
cmp
xor
xor
inc
jmp
or
popf
push
inc
and
or
repz
dec
js
or
sub
cmp
push
notl
imul
bound
test
mov
push
das
adc
jb
adc
lods
in
dec
add
sbb
cmp
mull
dec
stc
push
pop
imul
jl
pop
rclb
or
imul
pop
xchg
pop
adc
mov
aad
out
aam
cmpsl
shrl
aam
cmp
rorl
push
pop
mov
cmp
je
and
jecxz
or
adc
add
push
cmp
xchg
scas
adc
adc
pop
and
sbb
pushf
or
popa
and
push
fsts
mov
ret
jo
mov
sub
in
push
js
andl
push
cmpl
fmulp
jle
clc
dec
andl
imul
imul
mov
pop
clc
sub
inc
inc
inc
sarl
mov
out
jbe
in
inc
hlt
iret
enter
dec
aas
out
adc
push
mov
jnp
out
or
mov
cs
or
push
je
int
xchg
das
ljmp
mov
out
mov
fadds
and
rol
pop
cmpsl
frstor
std
stc
aas
push
mov
pushf
cmc
stos
mov
ds
aam
fwait
je
pop
je
adc
jl
es
vhsubps
push
jno
sub
aas
push
xchg
mov
mov
dec
int3
nop
jne
mov
mov
ja
scas
or
push
into
pop
xor
in
aam
push
in
jbe
testl
mov
jno
push
add
lcall
jbe
repnz
inc
pop
lea
jl
outsb
popf
scas
dec
fsubr
sub
fs
jno
lds
das
push
insb
adc
arpl
adc
jo
gs
loope
or
dec
out
xchg
jb
aaa
aas
fistpl
lahf
clc
add
lahf
mov
rolb
aaa
lods
out
jbe
push
dec
inc
cmp
sbb
or
mov
push
or
adc
stos
ret
mov
mov
pop
aam
nop
in
pop
scas
int3
push
and
iret
mov
leave
sbb
cmp
loopne
xchg
mov
pop
lcall
cs
cmova
push
jnp
adc
rorb
sbb
mov
inc
mov
leave
or
lahf
std
push
movsl
mov
ret
push
pusha
fdiv
fs
sbb
inc
adc
xor
fisttps
and
dec
mov
adc
add
addb
jb
lds
push
push
add
std
ds
addr16
inc
xchg
xchg
xor
adc
sub
in
sbb
add
jl
pop
mov
inc
inc
popf
sub
bound
lds
pop
cmp
dec
fistpl
fildll
pop
movsb
jno
xchg
pushf
js
popa
int
sub
repz
roll
inc
xchg
jno
xorl
cmp
and
inc
mov
sub
fisubl
adc
sbb
sub
out
popa
int3
dec
jge
pop
enter
xchg
int
push
mov
cltd
dec
push
or
lahf
mov
out
jecxz
dec
mov
and
out
rcl
test
sub
aas
mov
mov
dec
xchg
insl
xor
push
inc
jmp
call
jne
rorb
push
and
lods
mov
jl
mov
mov
lock
shll
lret
outsb
dec
xchg
mov
xchg
insl
mov
into
in
jno
xor
xchg
sub
in
les
cmp
xor
pop
cmp
mov
add
adc
insb
mov
sbb
popa
or
xchg
push
push
mov
loopne
outsl
lds
sbb
insl
pop
aas
stos
cmpb
mov
hlt
mov
gs
js
addr16
or
lods
out
inc
mov
popf
arpl
test
add
and
int3
repz
cmc
dec
in
ljmp
lea
outsl
pop
lahf
jge
add
mull
mov
xchg
int
dec
xor
cmpsl
push
jne
adc
cmp
push
mov
jmp
bound
cli
xor
push
cmp
xor
clc
pop
out
dec
sbbb
fadds
lcall
ja
faddl
jnp
rorb
out
imul
fnstenv
xchg
inc
int
es
jmp
adc
dec
inc
in
mov
add
lock
int
push
lret
jl
out
shll
test
xor
push
sbb
inc
rcl
push
pushf
mov
xor
pop
xor
lahf
aam
nop
cmp
int3
cli
push
adc
mov
mov
in
shl
or
or
mov
jmp
scas
xor
in
aam
add
mov
sub
jg
pop
mov
inc
arpl
dec
inc
jns
icebp
js
cmpsb
pop
jbe
jl
push
test
mov
inc
and
add
test
or
test
cmc
call
dec
xchg
push
cmc
pop
pusha
jp
push
add
dec
mov
sahf
and
jnp
mov
gs
add
ret
mov
lods
lods
in
push
pop
or
js
pop
jmp
lock
xchg
fxch
mov
dec
popf
arpl
jmp
test
xchg
sbb
push
dec
push
mov
fisttpl
cwtl
lods
or
inc
jno
and
mov
addb
cmp
and
xor
test
nop
fucomi
ret
sbb
and
jb
aad
mov
sbb
add
dec
das
jmp
xchg
inc
mov
orb
cmp
cmpl
jge
jge
add
cmp
add
pop
push
pop
and
xlat
nop
push
popf
inc
inc
aaa
pop
jg
insl
subl
push
push
lods
je
xchg
pushf
jae
adc
fistl
inc
sub
push
cmp
xchg
rcrl
dec
mov
shrl
cmp
push
inc
in
add
pop
mov
adc
xlat
xchg
inc
enterw
mov
or
inc
and
fldl
daa
sub
aas
sub
loop
mov
mov
enter
std
fs
add
xchg
icebp
dec
mov
dec
mov
jae
repz
mov
cs
pop
into
enter
cmpsl
adc
push
rol
int3
xchg
das
push
dec
push
cmc
xor
push
xchg
adc
lret
es
xor
xchg
or
xor
loopne
inc
adc
shlb
popf
in
cs
sahf
xchg
lds
jb
cmpb
out
mov
mov
popl
cmp
mov
rolb
pop
adc
sub
or
call
testl
mov
pop
sbb
pop
add
lret
or
mov
dec
stc
add
inc
cwtl
dec
movsb
push
fadds
mov
inc
inc
xor
pop
out
enter
pop
stos
clc
testb
or
xchg
sub
jp
lcall
add
mov
es
lret
mov
aad
lods
aad
jp
cmp
lods
push
inc
arpl
mov
mov
rclb
sti
mov
cwtl
pop
sub
mov
add
mov
cmp
pop
sbb
jne
fadds
push
imul
subl
pop
or
stos
pop
mov
jb
add
xchg
nop
mov
sbb
push
add
out
pop
nop
and
sbb
mov
jns
mov
inc
pop
xor
fidivrl
loope
inc
sbb
and
mov
fsubs
lea
repnz
cmp
jle
je
adc
mov
inc
int3
cmp
mov
cmp
xchg
loopne
mov
test
cmp
rorl
arpl
gs
sbb
ja
jns
and
add
fs
es
loop
fs
lds
dec
sub
lds
and
cmp
mov
sub
cmc
mov
pop
inc
pushf
adc
pop
and
fldcw
mov
xor
jle
adc
sti
ret
add
sub
cs
cli
pushf
xor
or
testl
gs
push
testb
fsubr
sub
stc
ret
and
and
jecxz
dec
gs
and
sbb
pop
outsl
dec
test
leave
sbb
dec
jbe
data16
inc
pop
int
cmpb
cmp
xlat
cmpsb
mov
mov
loopne
xor
enter
add
xchg
sahf
mov
loope
stos
insb
or
inc
sbb
sbb
pop
mov
cwtl
mov
sahf
out
mov
stos
push
pop
stc
add
mov
lret
sti
cmp
aam
dec
aam
push
sub
sub
sti
xor
mov
sub
daa
leave
add
test
mov
cli
sub
mov
sahf
movsb
imul
xchg
enter
js
xchg
xorl
inc
push
xchg
adc
loope
mov
jbe
xchg
mov
mov
adc
outsl
fimuls
call
js
dec
mov
add
sbb
iret
add
cltd
fisubs
mov
aam
fwait
add
ret
ja
out
jmp
dec
scas
and
clc
sub
inc
int3
in
into
andb
fiadds
pop
lret
or
fisubl
xchg
mov
int3
xor
add
int
subb
xchg
sti
xchg
sub
filds
aam
lock
repz
sbbb
xor
movsb
sub
inc
inc
jns
inc
ja
jg
stos
lods
test
mov
or
sbb
xchg
mov
pop
shll
dec
lahf
and
sbb
jp
jle
out
adc
inc
and
insb
inc
mov
ficomps
lea
sub
push
ja
inc
mov
in
add
xchg
xchg
mov
mov
movsb
popa
popa
sub
outsl
mov
incb
mov
icebp
inc
xchg
push
push
bound
add
test
inc
dec
xchg
inc
scas
lret
mov
push
xchg
notl
sub
dec
or
xadd
jge
js
push
sbb
nop
gs
xchg
data16
test
pop
out
adc
xchg
jne
fildll
dec
adcl
jl
out
sub
loopne
push
pop
or
aam
ds
push
cmp
jns
movb
xchg
mov
jge
mov
in
je
shrl
mov
bound
in
mov
cli
cs
jmp
dec
cmp
rcll
mov
mov
dec
or
sub
adc
test
and
inc
jb
cmp
xlat
fisttps
imul
jge
dec
arpl
test
mov
idivl
fisubs
cld
fptan
mov
dec
testb
outsl
jmp
or
xchg
leave
call
dec
inc
lcall
pop
dec
ror
inc
loopne
add
cs
mov
js
aas
mov
out
xchg
xchg
mov
push
pusha
ret
xchg
dec
inc
inc
es
sarb
mov
add
push
and
jb
shr
cli
push
jge
hlt
jmp
imul
adc
fstl
cld
incl
dec
jmp
loopne
lods
cmc
daa
mov
jbe
sbb
lea
xor
and
outsb
scas
mov
dec
mov
cmpsb
mov
shlb
jns
cmp
sub
nop
mov
test
mov
add
iret
mov
add
add
in
jl
jne
hlt
jae
mov
scas
fs
xchg
loop
les
bnd
subb
push
pop
in
jp
in
imul
jb
das
inc
inc
cmp
and
insl
ret
cmc
lods
xor
inc
mov
jle
lods
xor
push
lret
xlat
or
fstpl
out
xchg
xor
lds
cmp
js
xchg
ret
xchg
cmp
pop
ret
cwtl
inc
sarl
scas
or
int3
lea
sbb
inc
cmp
lret
push
push
add
stc
lret
push
pop
repz
fcomi
lock
mov
or
xor
xchg
aaa
jp
xor
es
cmp
fcom
sub
and
jbe
adc
movsb
xor
in
testb
sbb
test
lahf
xor
mov
or
fdivl
sub
mov
pop
lds
popa
xor
imul
in
bound
mov
sarl
or
jge
enter
nop
daa
inc
mov
jo
pushf
adc
int3
lret
pushf
aas
repz
ss
in
aaa
std
jb
adc
inc
mov
fisubs
mov
fsubs
sbb
pop
std
call
push
test
cmp
int3
ficompl
mov
popa
jecxz
xchg
adcl
push
sub
push
push
xor
jecxz
leave
mov
xchg
pop
pop
adc
lret
loop
das
ljmp
dec
aas
ret
or
push
pop
xchg
pop
adc
stos
ljmp
out
sahf
sti
gs
stos
fdivs
push
mov
std
out
jns
ja
or
push
push
adc
decl
dec
push
push
inc
fnsave
jnp
jb
jo
addb
inc
stc
rorl
lods
xchg
jge
cs
or
pop
sub
cmp
dec
rorl
mov
pushl
pop
mov
mull
flds
js
and
or
mov
inc
push
cld
sub
imul
and
xor
cmp
sub
movsb
lahf
movsb
lret
inc
int
mov
cmp
daa
or
data16
sti
outsl
stc
xor
xchg
pop
dec
jnp
push
mov
cmc
mov
mov
imul
fistpll
das
scas
mov
ljmp
mov
cltd
sub
add
pop
mov
sbb
loope,pt
fistpll
xor
dec
sbb
bnd
pop
ds
and
arpl
xchg
cwtl
hlt
js
lcall
xor
lock
inc
sub
add
sub
fs
imul
mov
and
jge
dec
test
push
cwtl
inc
imul
dec
mov
lret
cmc
xor
jno
std
mov
outsl
test
mov
mov
fs
adc
pop
mov
rcr
pushf
repnz
inc
pop
leave
pop
mov
stc
stos
rcrl
cld
clc
cmp
jb
pushf
stos
negl
jnp
rcll
push
inc
xor
jnp
stc
bound
out
dec
pop
mov
pop
sti
add
clc
xor
mov
dec
mov
inc
and
stos
jns
hlt
in
adc
inc
ljmp
shlb
roll
jl
jb
push
pop
popf
fstpl
pop
stos
xor
mov
shrb
scas
mov
repnz
ss
cmp
xor
mov
jno
add
int
sbb
mov
mulb
push
xor
add
ljmp
xchg
idiv
test
sub
repz
test
push
jne
scas
push
ss
cmp
stos
mov
ror
stos
fimuls
loopne
sub
or
lods
xchg
ja
fldenv
lods
daa
inc
mov
push
addb
cli
cmp
cmp
int3
int
xchg
mov
add
sub
addr16
out
insb
add
and
mov
cmp
cli
call
or
mov
mov
push
jle
subl
xchg
lret
lcall
cvtdq2ps
mov
jbe
out
or
lods
jge
push
shll
frstor
ret
popa
cmp
test
xchg
in
mov
call
cli
xorb
jns
or
test
pop
popa
stos
cmpsl
mov
mov
xchg
test
jne
xchg
adc
adc
sbb
cmp
std
xor
jae
inc
and
movl
mov
ss
sub
in
dec
cmp
xchg
mov
inc
mov
add
test
nop
testl
aad
arpl
jno
mov
shr
fwait
sti
pushf
iret
push
dec
jmp
jle
outsb
test
jmp
cmp
stos
rcll
sub
add
mov
sbbb
out
or
mov
movl
in
sub
sub
push
pushf
lcall
pop
sahf
and
rcl
popf
or
ljmp
dec
jns
xchg
lock
je
out
fmulp
mov
imulb
inc
subb
sub
mov
lods
xor
or
shrb
hlt
mov
hlt
dec
pop
neg
dec
dec
stc
loop
cmp
push
adc
xor
xor
mov
push
ja
mov
lcall
pop
adc
stc
movsl
add
popa
test
xchg
cwtl
inc
icebp
dec
les
add
mov
fisubrl
in
or
out
cmp
xchg
add
mov
hlt
movl
add
aas
pop
adc
outsl
call
mov
mov
jp
sahf
or
push
sarb
ss
das
sub
cli
mov
repnz
incl
cmp
inc
inc
jbe
loop
cltd
out
cmc
iret
mov
mov
push
adc
repnz
ss
jae
push
insb
mov
mov
mov
in
arpl
bound
mov
roll
push
xchg
mov
inc
cmpsl
hlt
push
mov
mov
scas
gs
sti
push
inc
test
call
cmpl
mov
jle
shr
push
ret
lds
jmp
rcrl
pop
imul
and
sarl
addl
inc
xchg
dec
stos
sbb
or
sub
mov
mov
sbb
xchg
sub
sub
push
and
cmp
cmp
lock
push
mov
and
add
lret
pop
cmpsl
push
sub
mov
xchg
icebp
add
push
cmp
bound
adc
inc
pop
cs
in
mov
sbb
push
popa
cmp
sahf
imul
pop
inc
inc
xor
or
mull
mov
add
xchg
push
xor
jge
jl
out
sbb
xchg
fimuls
bound
xchg
out
sbb
jle
dec
sbb
sbb
sbb
sub
cld
movsb
dec
fs
pop
in
jne
jnp
shrl
test
mov
adc
sub
and
imul
mov
sub
mov
inc
and
push
xor
ljmp
mov
push
jnp
push
sti
insl
out
shll
mov
pop
and
jae
cmp
xor
fcoml
sub
push
mov
das
dec
push
jl
ljmp
aam
add
xchg
adc
rclb
int
push
or
mov
mov
cmpsb
or
add
je
dec
mov
mov
sti
dec
aad
imul
ret
mov
adc
xor
iret
sbb
adc
testb
cmp
push
cmc
adc
idivl
jnp
insb
mov
mov
adc
pop
into
ljmp
shll
dec
jne
dec
pop
fldt
stos
and
cmp
sbb
out
das
out
dec
jns
fstps
or
jns
daa
scas
mov
call
dec
push
push
xchg
sub
in
xchg
arpl
inc
mov
call
and
mov
movsb
popa
push
aas
test
rclb
stc
mov
mov
inc
push
push
mov
xchg
outsl
cmp
icebp
shlb
or
in
sarl
sub
cmp
ror
xor
jns
push
inc
test
cmpl
testl
pop
loop
scas
mov
rcl
imul
hlt
mov
or
or
mov
ficoms
stos
sarl
add
and
push
push
cli
das
ljmp
jne
sub
jle
jp
lret
movb
mov
cmp
fnstenv
or
lds
inc
lds
fdivrl
jge
cmp
mov
stos
mov
jne
scas
cld
cmp
cmp
add
icebp
pusha
and
or
pop
adc
or
jbe
push
addr16
loop
inc
stos
stc
out
and
mov
mov
cmp
mov
or
ds
mov
sbb
mov
xchg
in
adc
xchg
mov
hlt
push
inc
scas
cmpsb
outsb
cmp
iret
jo
and
rorb
xchg
repz
cmp
jmp
pop
adc
setg
jmp
popf
int3
mov
inc
push
test
xor
out
xor
add
jbe
mov
cwtl
jo
test
rcrb
push
lea
and
push
mov
dec
test
jno
aas
cmpsb
outsl
data16
fisubl
or
rclb
aad
movsb
sahf
loopne
adc
pop
movsb
pushf
mov
out
in
testb
push
shlb
push
das
jl
cmpsb
cli
stos
fadds
sbb
ss
sub
jecxz
pop
mov
xchg
fs
xchg
fimull
arpl
sarb
mull
je
jmp
add
and
jmp
push
pop
hlt
gs
mov
test
or
pop
fstpl
cmp
cmp
pusha
and
aas
mov
jne
push
cmpsl
lahf
mov
sub
pop
and
push
les
mov
push
pushf
in
gs
and
and
je
xor
add
lret
or
adc
sbb
mov
pop
and
aad
int3
mov
cmpsb
push
sbb
xchg
data16
sub
std
xor
loope
jg
out
mov
in
mov
sbb
int
pop
xlat
sahf
mov
test
sub
sbb
mov
mov
mov
mov
add
popa
inc
jnp
clc
jno
mov
adcl
insb
jns
imul
add
stos
popf
decb
mov
or
cli
sbb
jae
sbb
mov
xchg
cmp
pop
push
pop
jns
or
and
dec
dec
jecxz
ret
imul
in
fs
or
ret
daa
ss
xor
fldt
mov
dec
movsb
lcall
xchg
insl
iret
es
pop
outsb
mov
cmp
mov
mov
jb
or
xchg
lret
es
push
xchg
ljmp
js
iret
lea
pusha
and
ja
mov
sahf
mov
fisubs
mov
mov
dec
lds
arpl
iret
or
xorl
dec
mov
dec
cwtl
jnp
ret
sub
shrb
push
mov
in
mov
pop
cmp
sub
aaa
test
loope
sarb
es
push
pop
iret
add
inc
xchg
cmc
cwtl
inc
sub
stos
or
push
jp
movsb
test
lcall
xor
nop
js
scas
aaa
cwtl
mov
push
ss
pop
xchg
fucom
mov
push
rcll
jb
sub
bnd
adcl
push
lea
sbb
mov
fsubs
xchg
aas
push
mov
or
insb
add
mov
leave
sub
lcall
gs
in
mov
mov
cmpsb
jg
out
push
dec
pop
scas
xor
mov
in
mov
adc
push
xchg
add
or
aam
sub
frstor
loop
jecxz
push
fisubrs
insl
sub
pop
fsts
lods
in
les
out
push
cmpsl
enter
pop
pop
mov
pop
pop
aam
jbe
sarb
or
or
push
insb
jnp
mov
fsts
push
and
xchg
loope
or
jle
pop
popl
not
or
xchg
jo
inc
test
ret
sub
mov
xorl
xchg
enter
imul
push
in
sarl
mov
out
push
xor
dec
mov
xor
xlat
les
cwtl
and
push
clc
aad
popa
inc
push
shrb
cmc
xchg
addl
les
add
lds
xchg
ds
xchg
fs
sbb
xchg
loop
push
push
jne
inc
les
push
in
in
fnstsw
leave
jmp
fmull
insb
add
lret
inc
pusha
vmovsd
repz
xchg
mov
fcom
rolb
ficoms
mov
lahf
dec
fimuls
push
outsl
or
adc
xchg
pop
fs
mov
xchg
andb
sahf
test
mov
jnp
decb
jmp
data16
xchg
fdivr
rcll
or
into
aam
stos
fstl
lea
js
inc
repz
xchg
test
jp
xchg
rorb
pop
scas
aad
gs
call
push
fwait
ljmp
mov
xchg
or
addb
aaa
xchg
popa
cmp
mov
lods
out
cmp
cmp
not
jns
add
fsts
adc
add
mov
movsl
cmp
dec
mov
fs
leave
pop
icebp
jb
popf
sbb
lret
sbb
and
xor
and
dec
mov
ljmp
xchg
cmovno
cmp
mov
jae
stc
stos
and
daa
cmp
add
inc
cmp
sbb
cs
jo
insb
lahf
cmp
lds
sbb
cltd
movsl
std
cmp
cmp
push
cmp
push
add
shrb
mov
fsubrs
pop
mov
pop
cmp
push
dec
and
lds
out
adc
out
into
nop
push
push
je
push
je
inc
inc
xlat
push
or
cmp
dec
xlat
mov
xchg
inc
imul
call
mov
sub
push
out
jae
lret
mov
mov
shlb
nop
stc
lret
cmc
push
test
pop
mov
aas
xor
mov
adc
mov
mov
push
mov
pop
fsts
xchg
mov
je
push
cld
ljmp
subl
cmp
mov
pop
ficompl
aas
inc
ss
xchg
lcall
pushf
jle
repnz
dec
mov
jle
mov
sub
insb
insb
lret
or
std
cltd
adc
ret
cmp
adc
mov
push
mov
dec
outsl
pop
sub
ljmp
sahf
push
push
scas
ret
push
and
arpl
mov
mov
in
dec
call
adc
aad
faddp
push
arpl
loop
push
xor
xchg
mov
sbb
imulb
daa
xchg
cli
cmc
ja
pushf
mov
repz
seto
stos
dec
addl
fistl
and
gs
pop
jae
shlb
inc
push
jg
jo
in
hlt
xor
and
in
inc
xchg
scas
test
popf
or
aam
lods
insb
xor
rclb
lds
lock
lahf
data16
jbe
jge
and
je
arpl
and
xor
fs
jmp
cmp
mov
aaa
aam
add
lcall
pop
stc
ja
cmp
imul
sbb
pop
aas
pop
dec
stos
imul
mov
or
and
movsl
mov
popf
cwtl
dec
mov
adc
inc
fistpll
movsl
mov
inc
fidivrs
arpl
fidivrs
inc
mov
scas
fisttpl
fstpt
cli
jmp
test
mov
cwtl
xchg
mov
or
int3
je
or
dec
sbb
pop
xor
cmp
sbb
test
lods
xchg
daa
jmp
sti
ret
jl
sub
imul
js
ss
inc
out
mov
cmp
xchg
lcall
scas
clc
std
lock
add
add
sub
enter
loop
mov
testl
js
cmp
pop
sbb
pop
imul
icebp
aam
inc
loope
pop
rorl
bound
nop
out
xor
sbb
inc
mov
icebp
jb
mov
pop
ret
repz
sbb
pop
pop
gs
cmp
pop
push
adc
insl
test
shlb
test
insb
jp
push
pop
xchg
out
dec
xor
adc
mov
pop
pop
ror
and
ljmp
insb
ljmp
bound
ror
mov
out
xor
cwtl
push
lea
cs
xchg
fisttpl
and
sbb
sbb
pusha
adc
mov
shlb
lret
mov
icebp
pushf
xchg
in
rclb
pop
mov
jge
scas
in
mov
imul
sbb
mov
icebp
push
stos
addr16
hlt
arpl
lods
jo
test
imul
imul
mov
push
inc
dec
loopne
es
enter
add
push
cmpsl
push
cmp
jb
push
xor
xlat
dec
push
mov
mov
xchg
mov
imul
adc
ret
xchg
push
js
xchg
pusha
fldl
in
dec
mov
sbb
pop
mov
mov
or
cmp
aam
sarb
jno
popa
or
dec
jg
in
out
inc
xchg
mov
push
rol
push
fdivrl
fmull
outsl
jp
pop
sub
scas
pop
pop
jo
pop
movl
imul
push
insl
jge
or
outsl
sbb
mov
movsb
sub
push
and
stos
addl
scas
xchg
jns
xchg
mov
push
in
mov
fwait
sbbl
jno
stos
cmp
flds
push
push
jge
mov
xor
xchg
xchg
popf
loopne
sbb
jmp
cltd
mov
push
adc
imul
loopne
jge
es
andl
sbb
jecxz
push
or
mov
jge
push
pop
or
pop
test
orps
enter
xor
les
insb
test
xchg
push
cmp
jnp
icebp
rep
push
or
xor
mov
mov
cmpb
inc
mov
frstor
mov
sub
mov
xor
dec
and
or
nop
jecxz
mov
xor
gs
addb
mov
das
int
inc
inc
andb
bound
ds
or
mov
ss
loop
stos
cmpsl
inc
insb
ljmp
and
pop
iret
ret
push
sbb
sbb
sbb
rcrb
add
fsubp
pop
or
pop
cmp
cmp
repnz
xchg
sub
lock
mov
cmpsl
inc
fucomi
ja
adc
stos
dec
arpl
mov
sub
jno
and
mov
pop
sub
inc
loop
data16
ja
das
and
jne
je
xchg
leave
loopne
and
xor
push
cltd
sbb
popf
sub
mov
aad
mov
mov
jne
negl
xchg
and
push
test
jno
mov
mov
call
cmpsl
cmp
pusha
repnz
pop
dec
and
push
test
cmp
mov
jmp
les
push
push
loope
inc
cmp
and
cmp
insl
rcll
popf
insb
inc
jle
js
cwtl
xchg
add
pop
adcl
enter
mov
mov
mov
xlat
jns
cwtl
adc
mov
in
data16
add
scas
mov
xchg
lmsw
mov
xchg
in
sbb
mov
adc
xor
stos
adc
jecxz
add
inc
mov
cmp
dec
sub
cmovne
cmp
push
icebp
shl
jl
outsl
cli
pop
sub
sbb
lds
daa
call
mov
push
sahf
xor
repnz
xor
sti
sbb
xor
incb
addl
dec
lods
shl
pop
es
lahf
aad
or
mov
stc
int
fldl
aas
push
les
test
adc
je
adcl
popa
lcall
gs
gs
cmpsl
test
sbb
stos
lods
stos
mov
out
repz
scas
jo
jmp
bound
lea
faddl
inc
repnz
xchg
mov
std
repnz
int
fs
int
lods
ss
fistps
test
cli
repz
inc
xchg
popf
mov
inc
jnp
in
push
fs
adc
cmc
cmpsb
xchg
test
fstpl
js
sub
mov
or
fadds
jno
mov
pop
in
lret
icebp
call
xor
fs
scas
in
cmpsl
pop
mov
aaa
cmp
mov
push
je
cmp
gs
and
outsl
mov
sbb
and
mov
movsl
add
rol
rcll
gs
cmc
clc
fsubs
mov
scas
mov
or
cmpsb
sub
mov
leave
inc
aas
dec
sahf
rcll
adc
cmp
or
mov
sub
out
cmpsb
xor
jl
aam
ret
loop
sub
mov
mov
pop
xlat
dec
or
daa
fldt
aaa
lods
jns
mov
fmul
aam
mov
dec
jg
lcall
jge
sbb
rcl
push
in
add
mov
jp
mov
cwtl
mov
repnz
shlb
or
dec
mov
mov
into
cmpb
ds
mov
mov
jae
fdiv
dec
inc
xchg
mov
xchg
inc
xor
adc
lods
push
push
jno
jns
sahf
jecxz
push
ret
out
ja
pop
xchg
fcompl
insl
rclb
cltd
insl
daa
mov
mov
int
xor
in
iret
psllw
scas
icebp
mov
pop
jge
mov
subl
cmp
repnz
call
mov
das
cld
int3
mov
jmp
push
je
adc
lock
xlat
fwait
xchg
xchg
fistps
cmp
inc
ret
pop
xchg
mov
pop
mov
pop
mov
pushf
ljmp
adc
aad
inc
je
mov
sbb
clc
divb
push
push
and
push
std
pop
fsubr
ret
mov
mov
and
shl
or
repz
push
movsb
add
mov
cmpsb
pop
idivb
adc
jne
das
mov
cld
inc
xchg
inc
lcall
cmp
ds
cmp
mov
sti
popl
sub
xorl
stc
xor
inc
scas
dec
loope
add
cmp
dec
repnz
lods
sahf
mov
and
into
pop
or
mov
jge
mov
imul
push
xchg
psrlq
push
cs
les
aad
mov
loope
outsl
ds
leave
fs
mov
mov
repnz
jbe
aam
sbb
mov
fwait
cld
xchg
sbb
xchg
sub
negl
jg
xlat
leave
outsl
or
sbb
lods
xchg
hlt
sub
and
pusha
inc
and
or
mov
xor
and
cmpsb
or
cmp
jbe
dec
sub
ficomps
mov
icebp
orb
adc
ja
mulb
inc
cli
sub
scas
imull
xor
test
stos
xor
in
add
inc
push
stc
test
sub
cmp
popa
cmpsb
mull
push
adc
xchg
xor
sub
mul
movsb
add
mov
movaps
in
pushf
jge
aam
inc
adc
pop
push
fildll
cld
jmp
jae
inc
push
fsubr
iret
js
jae
je
iret
inc
data16
inc
int
aad
lahf
or
clc
mov
cmpsb
lea
xchg
scas
aaa
cmc
mov
pop
imul
es
mov
xchg
repnz
mov
push
lods
aaa
lock
outsb
jno
jns
ret
inc
pop
aam
mov
xchg
jo
out
xor
add
push
outsb
xor
roll
insl
stos
cmp
aam
ret
fiadds
mov
mov
sbb
repz
and
cmp
outsb
aaa
int3
hlt
notb
andb
dec
mov
cmp
jae
ss
scas
sub
pop
dec
fwait
or
stos
mov
lds
lods
scas
lea
pushl
stos
lahf
push
sub
insb
and
pop
push
adc
mov
sbb
mov
sbb
lret
sub
gs
cmpl
aad
out
mov
lcall
xchg
sbb
int3
jmp
mov
xchg
or
mov
pop
mov
push
dec
xor
out
adcl
fstpt
xchg
adc
repz
lds
out
or
fcmovu
ds
inc
sti
jae
inc
inc
dec
adc
or
pop
cmp
mov
push
sub
xchg
mov
mov
dec
or
aas
cmp
stos
and
cmp
mov
or
decb
mov
push
lods
repz
out
shlb
sbb
pop
xchg
and
not
in
dec
or
ficoms
cld
cmpsb
int
sub
sbbl
pop
lock
cli
and
js
xchg
icebp
mov
jbe
push
lods
jnp
adc
pop
int
jno
lret
loop
inc
fsubp
insl
es
jmp
divb
mov
xchg
cwtl
push
lods
sub
and
popa
ret
push
xor
pop
cmp
orb
ljmp
test
scas
mov
pop
and
push
sub
icebp
push
pop
ds
mov
das
mov
lret
popa
cltd
lods
jno
inc
push
shll
les
lcall
in
imul
out
mov
lock
ljmp
test
das
xchg
add
inc
push
jecxz
mul
and
cli
inc
adc
sbb
push
dec
sbb
pop
arpl
in
sahf
sahf
cmpsl
mov
push
inc
in
dec
sub
cmp
cmp
mov
sbb
sbb
daa
nop
and
out
push
inc
add
incl
aam
mov
movsl
dec
mov
sbb
mov
aaa
fadds
push
pop
gs
fcomps
lcall
push
inc
sbb
and
testb
aaa
dec
jecxz
ret
test
sti
cli
incb
movsl
enter
mov
lods
cmc
or
arpl
not
scas
ficoml
add
dec
iret
call
mov
xchg
xor
mov
scas
sti
add
outsl
cmp
xchg
cwtl
fbld
xchg
iret
in
lock
imul
sub
xor
jmp
test
std
jns
gs
jmp
cwtl
outsb
sbb
sar
in
xor
xlat
add
lret
xchg
and
push
push
dec
sub
cmc
mov
sbb
leave
in
xorl
jb
adc
ret
lea
jbe,pn
jns
jle
mov
pop
das
test
mov
add
ret
pop
sahf
push
pushf
sahf
mov
in
and
out
xchg
jnp
or
mov
rol
test
adc
inc
inc
pop
mov
lahf
test
cwtl
push
shrl
push
and
mov
insl
int
lcall
imul
add
push
or
fldcw
mov
push
or
adc
adc
popf
mov
sti
ret
inc
icebp
mov
xchg
push
rcll
jmp
enter
and
das
orb
movsl
outsb
or
testb
xchg
pusha
jae
scas
cmp
dec
add
stos
sbb
lahf
xchg
lret
mov
mov
icebp
add
frstor
pop
in
clc
loope
ja
push
sub
fcmovnbe
sbb
mov
dec
out
mov
fucomip
push
fnstcw
inc
dec
add
pop
roll
dec
loope
enter
adc
ret
jb
mov
clc
aaa
xor
pop
mov
js
movsb
adcl
fists
jle
and
push
insb
or
xor
mov
pop
cmp
js
outsl
popa
sbb
out
ss
and
sarl
enter
xchg
pop
cmp
je
cmpsb
addr16
aad
fcompl
repnz
mov
ret
je
loopne
scas
mov
adc
xchg
lahf
mov
popa
xor
movsb
add
dec
es
lcall
movsl
sbb
xlat
dec
ljmp
popa
sbb
sbb
mov
inc
jmp
mov
test
dec
rcrb
jnp
dec
in
cs
xlat
in
xrelease
xchg
std
jae
jo
ljmp
jb
pop
fidivrl
jecxz
in
mov
stc
stc
adcb
iret
add
adc
or
xchg
cmp
icebp
and
fisubrl
push
dec
mov
dec
aam
out
cmp
test
add
out
and
mov
jae
xchg
fwait
hlt
movlps
adc
insl
push
popa
insb
adc
jbe
adc
pop
jle
stc
out
int3
mov
sbb
lods
rorl
xchg
push
cmp
mov
cmp
add
adc
dec
inc
lcall
push
xchg
daa
outsb
jl
fdivs
loopne
adc
mov
das
xchg
jmp
sub
into
inc
push
cmp
lea
in
test
int3
fmul
inc
lods
arpl
cmp
aaa
data16
in
cmpb
and
ret
inc
dec
mov
daa
mov
dec
test
mov
push
inc
jno
int3
out
insl
jle
int
cmp
adc
push
xchg
fcompl
jmp
pop
icebp
outsb
xchg
push
filds
leave
jl
lea
inc
add
jbe
dec
xchg
pop
or
jns
cmp
xlat
inc
add
pop
and
push
outsl
inc
mov
mov
ljmp
push
mov
in
jecxz
push
test
xchg
iret
add
and
jge
adc
repnz
lock
fisubl
dec
xor
mov
ficomps
jp
incl
in
cmp
in
fimuls
xor
inc
mov
push
ror
call
mov
add
fcoml
xlat
inc
mov
xor
or
mov
xchg
fisttpl
or
int
cltd
incl
hlt
xchg
inc
std
add
jp
jge
add
cmp
jge
jne
dec
aad
xchg
loopne
inc
mov
out
jmp
xor
jno
jge
lock
mov
iret
mov
pop
in
mov
and
mov
insl
faddl
lret
mov
adc
pusha
lods
imul
aas
leave
push
movsb
fcomps
jle
insb
ffreep
loopne
inc
in
inc
push
push
push
imul
cmp
jbe
rorl
ret
push
repnz
aad
cmpl
and
je,pt
pop
dec
cmp
sub
mov
sti
jns
cmp
repz
dec
mov
and
cmpsb
aas
popf
pop
lret
mov
inc
inc
in
pop
inc
xor
aaa
or
sbb
aaa
add
mov
xor
mov
mov
jne
adc
mov
cwtl
std
mov
cmp
mov
lock
xor
push
lock
jb
js
xchg
push
pop
test
mov
adc
test
jns
xlat
sub
in
dec
scas
rcr
push
sbb
inc
fdivr
dec
dec
ret
mov
into
cmp
mov
mov
outsl
jl
imul
xchg
inc
lock
fs
push
sub
push
dec
outsl
push
in
sub
repz
mov
adc
ds
mov
sub
ja
ds
popa
enter
int
add
std
xchg
dec
jle
pushf
out
enter
mov
les
loop
popf
movsl
inc
into
and
sahf
test
adc
mov
hlt
repz
bound
lods
imul
movsl
dec
jmp
in
sub
mov
xor
cmpsl
outsb
ljmp
sbb
push
adc
js
xchg
cwtl
xchg
cmp
fwait
insb
orl
xchg
gs
xchg
stc
int3
and
out
movsbw
int
aam
xchg
mov
movsb
xchg
jge
adc
scas
repz
sub
adcl
push
out
ljmp
out
les
cmpsl
or
mov
fwait
std
mov
mov
repz
add
gs
mov
sub
adc
inc
push
mov
ret
out
pop
repz
mov
lcall
sbb
dec
lcall
std
cmp
repz
cltd
push
mov
test
jae
ljmp
dec
xchg
push
movsb
nop
sti
bound
mov
jb
test
cs
repz
repnz
sbb
inc
and
xchg
insb
lret
out
xor
loopne
data16
lea
sbb
cmp
sub
xchg
insb
fnstenv
sbb
insb
xor
pop
jl
mov
icebp
clc
leave
push
call
lret
xchg
mov
insl
fildll
bound
dec
cmpsb
lcall
negb
outsb
in
mov
xor
mov
rcll
jg
or
push
roll
inc
push
cli
jne
mov
je
iret
repz
adc
lcall
push
pop
test
pop
inc
cmp
movsb
out
into
into
in
leave
mov
mov
cmpsb
jnp
inc
aam
adc
and
jo
stos
jno
mov
xlat
jno
addr16
pop
or
cmpsl
inc
dec
imul
sbb
adc
rclb
test
dec
push
into
pop
and
inc
popa
leave
clc
jne
jns,pt
mov
sub
xchg
xor
orb
pop
inc
jp
pop
les
bound
fiaddl
sbb
jae
sbb
rcr
fisubs
jns
and
pop
lea
mov
mov
cltd
inc
or
and
js
sbb
inc
lds
push
lods
jb
jae
jb
push
dec
add
loopne
pop
rorl
jecxz
push
mov
push
or
in
imul
fwait
icebp
dec
test
idivb
mov
inc
loopne
mov
outsl
fs
icebp
imul
cmp
mov
movsl
add
cmpsb
push
outsl
jmp
sbb
lret
push
add
cmp
or
shlb
movsb
add
fnstcw
arpl
clc
hlt
dec
add
push
sarb
int3
cltd
mov
rol
cmpsl
ficomps
jl
push
push
jbe
into
or
inc
negl
arpl
push
inc
xor
jmp
xchg
jns
or
fsubs
in
sahf
mov
dec
bound
movsl
pusha
push
out
xchg
cli
fistpll
test
pop
xor
jl
sahf
test
adc
xor
aas
dec
test
adc
in
aam
xor
mov
or
xor
xchg
imul
mov
jmp
movsl
pop
sbb
jbe
lods
filds
mov
mov
and
and
arpl
pusha
adc
ja
xchg
ja
xchg
sbb
push
mov
push
fsts
and
scas
call
cmp
hlt
fsubrl
shlb
xchg
rcll
test
mov
fistps
sub
sub
aam
lahf
mov
pop
and
aas
sbbb
ljmp
cmp
notl
mov
test
and
scas
or
movsb
ljmp
push
adc
mov
iret
mov
mov
xor
movsb
cmp
pop
xchg
inc
les
mov
lods
loop
cmp
jge
inc
or
fistpll
cmc
sbb
aam
push
iret
stc
insb
cmc
jecxz
stos
xor
cmp
iret
cmpsl
movsl
cli
adc
inc
jp
mov
sub
enter
insl
lods
or
xchg
mov
inc
and
push
sbb
sbb
jge
lds
mov
inc
dec
loope
bound
push
leave
addb
sti
push
out
jp
inc
dec
mov
adc
ss
into
movl
add
xor
xor
into
sub
pop
sub
pop
mov
pop
push
jne
dec
add
es
adc
scas
iret
lods
ficoml
mov
iret
outsl
shl
sahf
fwait
jle
gs
push
std
fcmovnu
repnz
imul
js
rcll
aas
push
or
sub
and
mov
or
and
add
lret
adc
loop
pop
sub
cmpsb
mov
jae
jno
imul
cltd
mov
sub
sub
and
cmp
jmp
setge
cltd
ds
xchg
xor
sbb
flds
rclb
ja
xor
pop
stos
jmp
push
lret
test
add
pop
int3
jb
js
fildll
movsb
dec
pop
shlb
scas
js
nop
mov
movsl
xor
mov
in
aam
push
out
shlb
mov
daa
add
add
iret
pop
daa
push
or
popa
sub
stos
lods
ret
lahf
aaa
sbb
pop
sub
fwait
imulb
lods
cltd
int
jns
sub
fmulp
jb
mov
test
pshufw
inc
dec
and
push
fmull
lock
xchg
cmp
jns
xor
test
dec
jp
push
and
or
subl
sbb
das
push
imul
push
popf
aas
dec
in
jo
lret
mov
or
fnsave
stos
cmp
mov
test
push
int
into
adc
loopne
jb
test
pop
icebp
roll
xchg
test
pushf
mov
repz
adc
and
cmp
push
stc
pop
in
mov
push
pop
xor
pusha
stc
xor
sub
xlat
stos
out
lret
jmp
and
push
pop
mov
mov
mov
cld
jo
repnz
xor
cmpsl
mov
mov
int
dec
mov
pushf
in
sub
inc
jge
mov
cwtl
cmp
sub
cmpsb
adc
cmpsb
jnp
movl
lods
jg
and
loope
mov
cmp
sub
fcmovu
inc
call
in
xor
push
cmp
leave
mov
ja
push
ds
in
xchg
inc
jecxz
dec
jo
stos
adc
inc
in
test
mov
lods
std
pop
test
enter
add
or
fmul
aam
repz
cmp
pop
dec
pop
in
popf
fmuls
test
sbb
inc
loope
mov
loop
in
testb
cmp
ds
adc
xor
js
add
in
sbb
in
pop
rcrl
pop
insl
lods
mov
pop
mov
test
xchg
pop
roll
fs
ret
out
mov
sub
orl
xchg
testl
mov
fwait
inc
pop
cltd
pop
xor
and
ljmp
daa
int3
ret
xlat
push
clc
or
pop
cmc
int3
pop
mov
pop
mov
pushl
add
insb
push
fmuls
pop
shl
or
mov
mov
xchg
push
fimull
push
fbld
sbb
and
add
pop
mov
in
dec
pusha
daa
mov
gs
xlat
mov
xor
jne
pop
jbe
scas
push
and
into
pop
imul
js
in
out
enter
nop
int3
adc
sub
dec
mov
sub
and
test
add
cmpsb
xchg
mov
cmc
pop
dec
xor
mov
or
inc
subl
fidivs
ds
xor
outsb
int
les
addr16
sbb
and
insl
int3
frstor
add
popa
int3
xchg
jg
stos
cld
outsl
lds
mov
rorl
or
cmp
repnz
inc
addl
outsl
xor
fildll
cmpsb
cmpl
adc
maskmovq
testl
stc
movsb
loopne
xchg
fbstp
out
inc
sbb
xchg
and
mov
push
jecxz
outsl
andb
jns
dec
subl
je
xor
fadds
sub
xchg
jae
adc
add
dec
mov
lds
jle
pop
cli
mov
push
xor
pop
jns
or
jnp
jle
cmp
test
les
jnp
xor
jecxz
out
js
stos
sbb
push
je
mov
xorl
adc
xchg
sbb
push
xor
fidivrl
cmp
push
push
and
negb
imul
pushf
daa
shlb
js
sbb
test
xlat
insl
mov
xchg
mov
shrl
mov
in
mov
in
mov
nop
lret
scas
mov
orl
fsubrl
xor
push
dec
push
jmp
pop
pusha
jecxz
inc
inc
mov
out
lock
mov
dec
stos
and
pop
xor
add
mov
fadd
pop
lahf
mov
jne
pop
xor
push
dec
in
dec
andb
add
lods
cmp
ds
std
nop
rorb
mov
push
out
or
jbe
xchg
in
stos
push
aad
adc
pop
jno
fmul
pop
popf
popa
pop
aam
fsubp
cmp
mov
inc
sbb
push
inc
pop
sub
mov
je
fs
lods
lret
dec
add
push
outsl
or
inc
movsl
fs
jle
lods
cmp
scas
cld
daa
and
push
mov
dec
out
adc
data16
sub
jo
xor
leave
sub
mov
and
inc
pop
push
aad
xlat
xchg
or
stc
xchg
push
das
inc
addb
shrb
and
in
nop
mov
mov
test
or
outsl
adc
notb
dec
stc
mov
cmp
negb
jecxz
loope
push
mov
mov
mov
or
pusha
cmp
mov
data16
xchg
insl
or
xchg
push
xchg
fbstp
lea
arpl
stos
pop
imul
pop
or
dec
in
sbb
push
in
stos
lds
cld
inc
and
testl
push
cmc
fsubr
jno
sti
xchg
js
inc
xor
adc
inc
in
and
callw
and
insb
mov
xchg
xor
mov
sbb
fimull
mov
mov
cmp
adc
insb
hlt
imul
jo
clc
cltd
data16
sti
adc
shll
inc
cmc
xchg
ja
xchg
jle
pop
lahf
sahf
jnp
stc
mov
mov
aam
adc
sub
mov
and
mov
sub
xchg
mov
aad
sahf
insb
cmp
xchg
ss
sbb
sub
mov
stc
inc
and
and
aam
shll
jl
fstl
jno
mov
lds
jne
dec
add
push
dec
inc
cmp
loopne
frstor
push
jmp
add
iret
lret
clc
pop
or
out
pop
pop
dec
inc
push
mov
inc
adc
hlt
leave
xchg
test
push
es
es
movsb
or
xor
jns
das
je
jbe
into
push
mov
push
aam
sub
push
or
hlt
inc
call
adc
mov
xor
and
jg
sbb
mov
jle
dec
inc
fistpll
push
rorb
xchg
lret
lds
in
xor
lahf
add
and
sbb
adc
xchg
incb
add
sbb
insb
xor
stos
sbb
cmp
scas
mov
iret
push
mov
jb
bound
outsb
addr16
cmc
pop
mov
mov
and
or
cs
clc
xchg
cmp
je
enter
test
out
adcb
xor
imul
sub
mov
cmp
sbb
jbe
adc
inc
fldl
add
jge
xlat
rolb
or
jl
mov
dec
fisubs
push
dec
int3
fs
rcll
fs
or
mov
or
outsl
aas
lret
push
dec
jecxz
mov
pop
jne
or
inc
cld
outsb
adc
fidivrl
adc
aas
fstl
addl
mov
inc
jo
mov
mov
insb
cmp
data16
sbb
mov
mov
mov
andb
mov
pop
flds
xchg
and
lahf
ja
sub
ds
adc
xchg
xchg
dec
mov
inc
mov
push
jl
scas
scas
popa
dec
ja
in
xor
sub
and
out
cwtl
mov
jge
dec
shlb
mov
or
faddp
mov
push
dec
pop
gs
inc
ret
scas
aam
into
int3
jecxz
add
lods
insb
push
pop
sub
push
jbe
push
icebp
and
mov
nop
shl
mov
pop
loope
inc
les
xchg
mov
iret
sbb
mov
or
adcl
lahf
inc
xor
or
mov
xchg
push
xchg
push
push
cwtl
mov
jae
lods
sar
xchg
imul
out
cmpl
lret
out
dec
push
push
mov
dec
int3
push
mov
and
cmp
mov
into
cmpsb
andl
dec
jno
aas
xchg
ss
cmp
jo
xchg
out
inc
xor
dec
lret
inc
sti
pop
pop
lahf
fimuls
adc
and
jno
dec
sbb
jmp
push
cmpsl
dec
jl
fstpl
sub
scas
lahf
rclb
outsb
push
mov
sbb
push
jmp
xchg
daa
or
sub
push
mov
test
cmp
jb
push
mov
sbbb
ds
dec
sub
adc
jl
into
pop
xor
rorb
hlt
gs
iret
rcll
fiadds
adc
mov
jne
and
cli
mov
inc
add
sbb
jp
pop
or
out
mov
inc
je
dec
mov
out
jmp
hlt
adc
in
mov
insl
push
ret
arpl
jb
scas
mov
pop
lea
sub
jo
bndldx
inc
mov
fs
push
adc
pushf
in
subb
mov
cli
jns
add
out
or
xchg
pushf
dec
mov
cmp
add
push
mov
jbe
push
inc
xlat
mov
enter
ja
push
nop
pop
je
push
lea
or
fdivl
leave
mov
in
js
push
xor
enter
daa
lret
stc
jp
out
test
pusha
fimuls
or
xchg
in
push
lret
inc
cld
pop
mov
mov
pop
test
scas
mov
data16
xlat
xchg
and
xor
and
ja
push
cwtl
repz
xor
push
mov
sti
fsubrs
orb
daa
rcll
inc
inc
inc
shll
sahf
xchg
pop
adc
xchg
mov
sub
fsub
les
adc
shlb
mov
call
lcall
mov
data16
jmp
add
daa
icebp
test
notb
imul
ss
pop
addr16
std
mov
lcall
push
pop
js
out
jae
push
xchg
jo
icebp
sbb
std
pop
js
sub
xchg
cli
outsl
and
int
pushf
out
mov
jae
mov
ret
pop
daa
xchg
in
sub
cmpl
lods
mov
dec
xor
dec
pop
out
sti
adc
lods
dec
das
jbe
mov
mov
in
and
mul
adc
pop
enter
aaa
jg
in
mov
pop
inc
hlt
cmp
call
inc
mov
std
fmull
jl
push
dec
insb
sbb
outsb
sbb
stos
rcr
dec
jbe
lahf
in
pop
cmp
sub
adc
and
addl
mov
in
movsl
pop
imul
leave
jmp
fistpll
dec
lods
ret
outsb
adc
jecxz
andb
mov
sub
mov
mov
fidivs
mov
pushf
and
lds
lods
lret
sahf
dec
mov
in
cmp
push
call
mov
popa
movsb
pop
push
or
xchg
mov
mov
sub
decb
rcl
imul
inc
adc
test
test
and
ja
mov
xchg
orb
fistpll
mov
mov
fsqrt
sbb
jmp
sub
ds
test
into
sarl
pop
mov
push
call
fstps
fistps
and
sub
repz
jnp
jg
out
push
cltd
and
xor
jnp
pop
mov
xor
push
int3
inc
or
addr16
cwtl
daa
sbb
aam
or
xchg
pop
mov
int3
jo
iret
mov
inc
scas
and
lods
mov
es
cmp
out
xchg
bound
adc
stos
lahf
jo
xchg
add
arpl
outsb
pop
xlat
mov
sahf
loop
mov
rcrl
xlat
adc
sarb
jne
sar
stc
call
sub
and
in
repz
inc
jmp
dec
jecxz
pop
scas
out
sahf
adc
cld
in
inc
loopne
loop
mov
mov
dec
rorb
dec
pushf
push
pop
cmp
lea
negl
xor
scas
dec
fldt
sub
adc
mov
gs
jg
addr16
push
aaa
lods
xor
ss
inc
lret
mov
dec
cld
xchg
inc
test
test
in
scas
pop
sub
mov
jne
jns
arpl
mov
xor
or
test
lock
pop
mov
cmp
cmp
lods
testb
inc
arpl
imul
mov
pop
out
aam
xor
push
cli
mov
lds
pop
fs
or
andb
mov
cmp
sarb
imul
and
sbbl
popl
or
sub
xchg
add
dec
push
xchg
cwtl
repz
sub
inc
xchg
inc
call
or
inc
sbb
add
push
idivl
test
insl
push
cmovns
mov
sub
sbb
jnp
add
jge
cmp
stos
dec
and
repnz
out
fnstcw
fistl
and
xor
xchg
cmpl
hlt
repz
in
xchg
adc
mov
mov
mov
jo
sub
or
mov
xchg
mov
insl
shr
push
mov
add
pop
dec
add
mov
lret
call
add
fs
pop
adc
fwait
in
rcrb
jb
xchg
lods
rolb
int
cltd
or
insb
jmp
std
sarl
ljmp
inc
insb
sbb
mov
and
punpckhwd
iret
sbb
mov
imul
iret
mov
xchg
hlt
mov
ja
xor
push
push
aaa
in
lds
es
mov
es
out
mov
jle
loopne
jge
add
icebp
xor
cmc
sbb
adc
xlat
ljmp
sahf
test
insl
call
mov
mov
cmc
mov
mov
stos
mov
push
mov
daa
xor
dec
mov
xchg
js
xchg
adc
js
in
shr
pop
lret
cmc
and
iret
pop
mov
mov
and
add
pusha
divb
ficomps
mov
push
xor
jnp
jne
sbb
aam
or
mov
jnp
aaa
cmpsb
cmp
test
insl
in
clc
dec
inc
loope
jns
sbb
mov
pop
jno
pop
lret
out
fbld
insb
mov
bound
pop
and
push
dec
in
push
in
mov
inc
out
add
repnz
addr16
fldenv
ds
sbb
iret
fdivrs
pop
stos
test
pop
push
pop
ss
xchg
fwait
and
stc
mov
xchg
in
jo
loope
jmp
into
adc
cmpsl
scas
add
mov
div
popa
int3
add
xor
sahf
push
sbb
pop
mov
adc
adc
cld
movsb
cmpsb
negb
pusha
aam
dec
sbb
fcomip
rclb
sub
sbb
add
rcrb
scas
add
test
push
cld
push
push
inc
mov
popa
rorb
cli
decb
mov
mov
pushf
fwait
mov
dec
dec
mov
sub
mov
fwait
ja
add
jmp
stos
les
pop
bound
lea
push
adcl
popa
pop
mov
imul
jns
push
sub
in
ret
sbb
mov
pushf
iret
mov
and
xchg
xlat
and
add
nop
jae
pusha
test
notb
inc
dec
dec
cmp
notb
push
xchg
out
iret
mov
sahf
pusha
js
dec
jnp
loopne
mov
les
adcb
pop
and
or
out
cmp
xchg
sub
in
jno
lds
mov
mov
adc
mul
adc
shrb
xchg
mov
inc
seta
mov
jge
insl
sub
adc
xor
jno
pop
push
sub
pop
mov
or
jle
shlb
stc
js
pop
subb
and
icebp
sti
cwtl
jb
jnp
iret
push
setne
pop
adc
mov
mov
or
jle
dec
push
je
pop
outsb
sub
fistps
loopne
add
sar
test
loop
mov
arpl
icebp
adc
dec
daa
xor
xor
pop
cmp
sahf
into
push
xchg
mov
decb
loop
stos
loopne
repnz
push
ss
ds
xchg
aaa
test
scas
sbb
stos
es
jne
fstpt
adc
ret
hlt
mov
ds
cmpb
aas
sub
into
and
into
movsb
pop
add
add
add
sub
mov
or
pop
sbb
in
sub
push
xor
mov
sbb
cltd
sahf
mov
int3
cmpb
and
sbb
cltd
sbb
std
cmc
dec
pop
inc
cmp
push
dec
lahf
in
adc
rcll
and
or
mov
lret
dec
xchg
dec
inc
sbb
and
adc
mov
fcomps
rcrb
mov
cmc
lea
ljmp
popa
iret
inc
dec
aad
repz
movsb
pop
ja
mov
clc
js
push
ret
rorb
jnp
cmp
jb
push
lock
icebp
jge
sbb
movsb
and
or
ret
in
lcall
test
and
push
pop
outsb
lret
stos
sbb
jmp
outsl
loopne
lahf
lea
sbb
lahf
sbb
shl
insb
test
mov
jecxz
stc
cmp
inc
inc
mov
jmp
pop
jbe
es
fsubr
je
cmp
rclb
push
xchg
std
sbb
or
sbb
repnz
push
jp
mov
cmpsb
inc
mov
stc
push
dec
fld1
ja
andl
shl
inc
push
data16
push
insb
mov
notb
insl
jne
sarb
xor
sahf
jb
jo
cltd
mov
ror
cmp
mov
sub
clc
dec
pop
pop
xchg
shlb
mov
push
sub
xchg
movsb
jge
fsubr
jmp
xchg
inc
js
mov
xchg
mov
mov
pop
and
mov
insl
mov
ret
jno
out
les
bound
cmp
sub
aad
jo
sub
lods
push
cmp
insb
enter
cmpsl
in
pop
mov
xor
adc
lret
xchg
dec
aam
pop
or
leave
enter
add
out
std
xchg
lods
mov
xor
test
popf
iret
push
dec
push
rcll
shlb
testb
sub
xlat
pop
sti
jge
sbb
mov
xchg
fstp
out
pusha
aaa
sbbb
jp
mov
and
ja
rclb
sub
rcr
bsr
cmpsl
xchg
push
add
adc
out
ja
dec
shlb
dec
or
repnz
fcompl
stos
les
sbb
ds
movsl
inc
aad
imul
jmp
movsl
lods
stc
cli
sub
lea
push
popa
mov
shrl
sub
lods
mov
loopne
rcrb
pop
xor
cmp
mov
adc
xchg
mov
jbe
push
shlb
xor
jnp
frstor
js
fwait
xor
insb
sub
adc
pop
push
jb
repz
in
jmp
mov
jg
and
pop
jmp
adc
inc
push
push
cmpsb
mov
into
nop
pusha
fwait
push
xchg
mov
xor
fdiv
cmp
les
popa
xor
push
ds
popf
dec
shll
push
lods
push
xor
test
mov
jne
daa
mov
repnz
mov
daa
dec
or
in
fimull
cmp
sbb
cmp
inc
mov
inc
xchg
push
out
mov
xlat
inc
add
jno
out
sub
test
inc
hlt
mov
inc
xor
cmp
sub
xor
pushf
les
les
xor
jecxz
add
stos
insb
or
js
xor
pop
push
or
into
pop
cld
mov
dec
pop
fcompl
sub
repnz
xchg
pop
xchg
fcomi
mov
dec
lret
sub
inc
jecxz
xlat
sahf
enter
pop
jle
jge
in
aaa
mov
in
adc
xor
ss
inc
loope
pusha
mov
xchg
jnp
inc
dec
sti
pop
andl
in
mov
jle
dec
mov
push
mov
or
orl
push
mov
jmp
movsl
push
arpl
lock
xchg
fmuls
pop
pop
sub
movsb
nop
pop
imul
stos
xor
dec
add
and
js
movsl
sahf
outsb
add
fiaddl
enter
fbld
xorl
pushf
movsl
fdiv
sub
in
mov
int
mov
mov
cwtl
mull
loop
dec
or
pop
xchg
adc
adc
clc
jne
pop
nop
cmc
dec
rcl
inc
mov
add
dec
fs
int3
mov
xchg
cmp
cmp
adc
or
popa
push
out
inc
out
dec
inc
pop
sub
cmp
insb
vminps
mov
out
pop
adc
mov
in
xchg
cli
adc
neg
fidivs
cmpsb
lea
mov
jg
pop
ficoml
and
cli
xor
add
stc
fimull
jns
inc
es
sbb
ja
js
cmp
adc
imul
or
daa
sbb
popf
jbe
dec
iret
xchg
jo
jmp
cmp
daa
repz
into
or
or
inc
jnp
out
inc
push
frndint
outsb
pop
xor
xchg
lahf
leave
xchg
es
and
stos
int
inc
and
or
mov
push
mov
das
jp
mov
nop
scas
jmp
in
pusha
cmpsl
cmp
sub
inc
ss
out
xchg
test
mov
xor
sbb
mov
pop
cmpsb
jmp
int3
push
repnz
cmpsb
scas
inc
fs
jns
aas
pop
fimull
outsl
ljmp
push
mov
test
cmpsb
mov
or
adc
mov
dec
icebp
cmpsl
fsub
arpl
or
inc
ljmp
inc
js
adc
daa
push
mov
pop
jmp
sbbb
cmpsb
xor
mov
jmp
inc
pop
mov
int3
imul
dec
popa
rcrl
mov
pop
pusha
lahf
cmpsl
push
push
dec
mov
sbb
mov
pop
jle
lock
cmpsb
mov
jo,pt
pusha
es
push
cmp
pminub
ret
jno
mov
jle
adc
pop
push
ds
cmp
or
aaa
aam
sub
in
jbe
lds
lods
pop
dec
mov
lret
add
or
inc
jns
aam
movsl
test
movsb
dec
mov
pop
movsl
mov
adc
out
sbb
push
or
addr16
iret
inc
ficoms
incb
outsb
push
cmpsb
out
test
mov
push
xor
inc
loop
cwtl
jle
lods
das
inc
mov
negb
push
subb
and
shrb
mov
std
cmp
leave
xchg
jns,pn
fidivs
enter
ret
test
xor
fidivl
xlat
push
leave
jle
ljmp
imul
push
mov
adc
jo
mov
les
mov
dec
push
scas
lock
mov
ds
aam
dec
pop
pop
das
xchg
fmuls
scas
xchg
dec
mov
sbb
lcall
mov
loopne
arpl
cltd
or
lods
adc
and
mov
jl
sub
xchg
xor
pop
repnz
push
ss
adc
dec
add
int
dec
ds
out
push
jbe
jl
iret
rcrl
ds
mov
fisubl
cmpsl
push
add
and
and
jecxz
pop
rolb
imul
push
xor
adc
hlt
jbe
dec
fisttpll
xchg
add
mov
mov
mov
and
ret
in
les
push
adc
dec
test
shll
insl
adc
test
idivb
mov
adc
inc
or
sar
cmpsl
cwtl
cmpsb
mov
addl
xor
stos
arpl
inc
cmc
rorb
out
mov
fsubr
push
test
icebp
adc
sub
mov
inc
jle
scas
das
icebp
ja
and
push
stos
push
xor
mov
int
jle
sub
in
inc
jg
insl
add
sub
cs
add
shlb
or
ret
test
roll
dec
mov
fucomp
adc
cli
sbb
pop
and
insb
pushf
jno
sbb
pusha
inc
push
out
das
out
std
mov
xchg
repnz
cmpsb
sbb
aad
jge
pop
test
inc
sarb
mov
aad
add
mov
adc
dec
pop
lahf
loopne
adc
int
adc
flds
adc
movsl
lcall
mov
cmc
push
xchg
sbb
out
cwtl
int
cli
and
mov
mov
aas
leave
int
mov
pop
ret
in
add
adc
jbe
mov
imul
mov
hlt
xchg
imul
out
out
sar
xchg
jb
jg
push
sub
jno
push
sbb
mov
les
and
push
sarb
incb
fs
sahf
in
and
in
rolb
push
jae
dec
out
bswap
mov
iret
adc
loope
arpl
outsl
sub
xchg
ret
pop
sbb
cli
inc
inc
nop
push
insl
or
sub
fcmovnbe
roll
repz
and
and
loope
xor
lods
inc
cmpsb
enter
das
setg
into
mov
adc
enter
sbb
mov
sbb
jmp
xchg
push
mov
inc
inc
mov
lods
rolb
push
insb
dec
and
scas
les
cltd
sub
pop
sub
fdivp
aad
jg
pop
test
cmp
sbb
sbb
mov
pop
push
rcrb
or
jno
xor
mov
sub
jle
imul
insb
in
add
lea
mov
rcrl
sub
clc
xchg
or
mov
dec
movmskps
add
add
test
jg
add
mov
clc
or
and
xchg
add
jle
mov
and
xchg
mov
xor
popa
test
pusha
das
adc
pop
sbb
loopne
test
imul
test
jb
and
cs
jo
xor
cli
mov
icebp
imul
add
shlb
inc
fdivrs
call
aam
lods
pop
out
xchg
shll
repnz
push
cli
xchg
arpl
jmp
jne
lcall
and
lds
vmread
dec
cmp
xchg
outsb
add
out
or
cmp
sbb
nop
nop
jne
jno
ror
xor
loopne
lds
fs
or
adc
fistps
sub
xor
add
ss
or
and
lea
jle
jge
jp
mov
xlat
inc
aam
push
sahf
js
and
imul
cli
rorb
push
mov
adc
iret
inc
incl
cwtl
call
pop
cmp
and
ljmp
inc
std
jnp
pushf
cmpl
jno
out
or
ljmp
jle
adc
hlt
inc
stos
jb
xlat
loope
mov
dec
fcmovnbe
mov
mov
jae
loope
nop
jge
and
rcrb
xchg
adc
sub
iret
mov
adc
jge
je
jecxz
push
out
jne
and
xchg
frstor
test
cmp
or
inc
jmp
xchg
pushf
cli
sub
push
mov
mov
cmp
cmp
mov
xlat
jge
pop
dec
inc
ficoms
stos
mov
lods
pusha
mov
pop
ss
sub
lods
jbe
jns
fwait
mov
cmp
out
add
pushf
inc
mov
xor
jbe
imul
sub
lcall
ficompl
push
jo
rolb
mov
add
inc
cmpsl
ret
add
lock
mov
xchg
cwtl
mov
cmpsl
or
les
pop
mov
push
data16
sbb
add
lods
add
dec
jge
js
leave
mov
aas
sbb
pop
push
dec
mov
ss
inc
add
pop
leave
pop
rcrl
test
popa
dec
add
xchg
xchg
mov
mov
ss
mov
pop
in
pushf
mov
fstps
cld
fs
jbe
rcl
mov
stos
pop
mov
bound
pushf
jns
dec
and
inc
push
cwtl
jo
in
and
dec
jb
push
dec
popa
sbb
in
inc
pop
out
push
jmp
mov
xlat
lcall
popf
cmp
mov
cmpsl
std
push
pop
xor
fcompl
sub
fadds
cmc
out
pop
mov
push
mov
mov
arpl
mov
scas
lock
sbb
cmp
jle
push
icebp
fwait
bound
dec
dec
mov
arpl
movsl
inc
imul
jp
les
hlt
or
and
sar
es
cs
out
lret
xchg
and
mov
stos
cmpb
call
or
ret
mov
bound
or
dec
push
rol
xchg
fcmovne
cmp
or
faddl
dec
pop
or
out
loope
cmp
mov
and
push
jnp
aaa
pop
mov
mov
out
idivb
rorl
push
push
adc
push
inc
test
loop
xor
stos
icebp
push
sbb
mov
arpl
nop
mov
jbe
and
push
imul
inc
sbb
lods
shlb
popa
push
repnz
mov
data16
mov
mov
and
faddl
dec
cmp
push
mov
aam
dec
vucomiss
repz
mov
sbb
popa
push
scas
hlt
out
add
aaa
pop
fcmovnbe
movsb
and
push
xchg
push
iret
idiv
shrb
rcr
lcall
stos
dec
int3
inc
cli
aam
fnstenv
push
loopne
cmpsb
mov
nop
push
inc
lcall
stos
cs
fidivs
aaa
hlt
adc
sarb
scas
xchg
jecxz
inc
mov
fwait
nop
mov
test
nop
sub
adc
jecxz
sub
add
adc
bound
mov
mov
or
fidivl
inc
dec
lea
jns
mov
or
xorb
push
and
dec
rcr
pop
or
sub
push
and
imul
addr16
fcoml
addl
xchg
jecxz
pop
daa
sbb
cmpsb
push
cmp
rorb
jl
cltd
inc
nop
cmp
xor
inc
adc
sub
test
or
mov
mov
outsb
mov
int
adc
cltd
sbbl
sbbb
into
pop
add
addr16
add
test
mov
loop
int
push
jb
mov
jg
inc
aaa
leave
das
repnz
mov
sub
clc
aas
mov
mov
push
cwtl
push
loopne
mov
and
scas
pushf
sbb
cs
dec
pop
sbb
popa
sbb
pusha
js
insb
mov
test
jmp
jne
jmp
add
test
push
cmpsl
sti
jns
dec
clc
cmp
mov
push
jbe
mov
add
cltd
xchg
imulb
jle
push
mull
lahf
cs
gs
mov
mov
fcmovu
mov
test
add
cmp
jo
jae
filds
push
movsl
push
and
clc
mov
mov
int
jnp
ljmp
sub
sub
lds
push
imul
icebp
ret
jo
push
bsf
lods
popf
lret
add
mov
pop
or
mov
imul
ret
nop
jl
xchg
add
jae
outsb
lret
jl
lcall
inc
out
mov
das
dec
out
push
out
into
pusha
cmp
je
add
das
dec
call
addb
int3
or
movsl
inc
mov
or
shl
sbbl
aad
call
fwait
insb
adc
xchg
xor
incl
mov
test
and
and
dec
mov
lods
aaa
bswap
sbbl
int
negb
mov
mov
out
push
es
shlb
lcall
les
stc
jg
xchg
mov
pop
pop
adc
test
mov
scas
sbb
int
icebp
mov
mov
lcall
int3
jno
mov
stc
fiadds
jnp
out
pop
mov
cmp
addr16
lock
push
lds
jns
sbb
mov
out
push
dec
jb
or
ret
pop
lods
mov
mov
lret
add
adc
sbb
mov
pop
or
movsl
mov
cmp
stos
mov
inc
dec
fisubrs
fwait
loop
fs
mov
xchg
inc
adc
jmp
fisubl
add
jg
dec
mov
cmp
jne
test
inc
in
lret
push
xor
ss
xor
mov
mov
or
xor
stos
imul
stc
or
mov
and
rol
mov
aam
cmp
test
jmp
jge
adc
inc
cmpsl
and
push
arpl
sti
loope
or
popl
imul
insb
cmp
repnz
mov
adc
es
scas
xchg
push
leave
jo
xor
push
pop
or
popa
nop
call
inc
mov
inc
pusha
dec
add
aam
stos
fsub
lahf
or
cmp
and
dec
sub
aam
js
andl
fsts
shll
dec
popa
lds
rol
ss
inc
mov
imul
rolb
sub
sub
adc
sbb
aam
cmpsb
das
mov
inc
ja
fdivs
mov
bound
jl
fdivs
es
pop
mov
mov
aas
jo
out
jbe
inc
out
daa
insb
ja
cwtl
sti
in
mov
fnstsw
push
xchg
stc
and
arpl
sbbl
mov
dec
mov
daa
mov
push
sub
or
icebp
das
xchg
sbb
cld
jge
mov
scas
jo
daa
stc
arpl
ret
dec
sbb
sbb
bound
adc
pop
test
mov
xlat
xchg
dec
lock
sub
or
stos
mov
mov
je
jnp
jae
in
scas
inc
jno
movsl
arpl
loop
mov
adc
inc
inc
inc
push
mov
mov
setle
lcall
out
mov
pop
inc
ss
lahf
mov
sbb
test
ljmp
daa
inc
mov
iret
jge
mov
mov
das
imul
push
mov
ret
sub
pop
scas
mov
shll
push
jmp
addr16
mov
push
lods
ficomps
shl
mov
or
sbb
sbb
cmp
dec
xor
out
pop
jle
add
test
lret
push
mov
inc
dec
push
cmpsl
mov
and
adc
push
jo
sub
andb
add
cmp
stos
pop
stos
cmp
ret
sub
push
lahf
cwtl
enter
rcrb
test
loop
mov
mov
inc
xor
push
rcrl
pop
xor
mov
imul
sbb
addb
push
or
arpl
das
repz
addb
addr16
push
pop
mov
xchg
outsl
adc
mov
sub
gs
test
jo
int3
es
lods
adc
stc
and
push
int
fisttpll
mov
shrb
loopne
adc
or
push
cmpsl
xchg
mov
fisubs
cli
push
xchg
imul
inc
scas
in
mov
adc
ja
sub
in
inc
ret
mov
push
push
push
rcll
inc
lea
and
pop
lods
inc
xor
test
aad
mov
sbb
pop
mov
out
mov
cmp
fistl
fs
inc
xor
mov
mov
push
cmpl
xor
jl
call
sbbl
push
int3
cmpsl
jp
inc
subb
cmp
mov
inc
push
dec
pop
jno
add
ljmp
outsl
scas
movsl
outsb
xchg
xlat
gs
cmp
adc
fstpl
iret
jge
sub
mov
stos
int
out
cmp
lahf
mov
xchg
fcmovnu
add
fs
dec
xchg
es
dec
xchg
test
inc
jecxz
dec
sub
push
repnz
popf
mov
in
or
out
lods
in
das
sub
mov
and
sarb
add
aad
movsl
es
mov
jg
in
iret
xchg
mov
gs
inc
pop
addr16
bound
mov
or
aas
jg
push
adc
pop
push
xchg
mov
push
fs
iret
push
pminub
mov
test
mov
loop
test
sti
cmpsl
loope
mov
jl
int
adcl
push
cmpsb
outsb
shll
ljmp
jle
pop
sub
fidivrl
mov
scas
hlt
pop
or
adc
loop
sbb
jbe
iret
in
mov
pop
aad
cmp
adc
sub
insb
cmpsb
out
xor
add
in
pop
movsb
jne
inc
push
xor
aas
lock
enter
test
mov
jns
std
test
xor
sahf
idivb
loopne
dec
loope
inc
and
inc
inc
push
inc
xchg
loopne
leave
xor
scas
cmp
gs
mov
dec
cmp
dec
or
xchg
xor
mov
into
lret
dec
xor
or
pop
movsl
cmp
daa
cmp
add
aaa
stc
test
add
lahf
stc
or
mov
test
push
lods
fisubl
dec
scas
mov
aad
insb
jp
nop
pusha
testl
dec
inc
xchg
adc
and
jmp
mov
dec
jb
inc
mov
push
mov
pushf
pop
or
adc
add
test
lret
push
test
pop
adc
mov
clc
dec
pop
inc
test
loop
outsb
add
lahf
daa
dec
fimull
in
add
xchg
popa
push
arpl
inc
mov
mov
sub
cmp
inc
mov
sbb
pop
mov
add
repnz
mov
dec
cltd
popl
scas
add
loopne
addl
cmc
loopne
fcmovnb
repz
and
push
mov
and
cmp
cmp
int
ja
add
sahf
fwait
cmpsb
sbb
mov
cmp
mov
mov
and
pop
cmpsl
shrl
push
xchg
adc
adcl
pop
movsl
inc
inc
mov
jne
lods
imul
fidivl
xchg
mov
in
jne
sahf
xchg
sbb
push
mov
stc
mov
sub
lcall
fs
sub
cmp
dec
cmp
cwtl
cmp
stos
int
xor
insb
sub
adc
jmp
out
aad
movsl
dec
sti
xchg
stos
mov
call
lcall
dec
lock
out
sub
mov
ljmp
mov
movsl
pop
mov
jae
xor
std
cld
mov
pop
push
rcpps
daa
or
repnz
adc
mov
shrl
stos
shll
adc
in
jne
jo
mov
loope
cmp
in
sbb
add
pop
in
jge
jl
jno
fcmovu
xchg
mov
mov
mov
test
dec
and
stos
loop
sub
xchg
fstpl
pop
pop
push
inc
mov
mov
decb
sub
mov
sbb
sub
xchg
test
lock
aas
nop
or
dec
push
enter
into
push
je
or
pop
iret
xor
add
xchg
jmp
lahf
lret
test
mull
adc
sbb
pop
pushf
cmp
and
es
fldl
mov
push
inc
push
dec
fsubr
mov
imul
es
int
mov
mov
inc
dec
test
jmp
test
adc
andb
inc
cmp
dec
xchg
push
sub
out
inc
sbb
sub
mov
xchg
andb
imul
mov
je
mov
popa
add
neg
mov
xchg
mov
mov
push
xor
mov
push
jns
lods
dec
pop
repz
mov
into
cld
mov
cmp
and
inc
pop
adc
xchg
dec
jns
enter
push
gs
fistl
sub
or
add
andb
xchg
xor
sbb
or
mov
xchg
ret
scas
sub
mov
fsubp
cmpsl
mov
mov
cmp
addr16
and
cmp
mov
into
push
cmp
or
aas
pushf
imul
icebp
jge
scas
pop
cmpsl
orl
addr16
xorl
in
dec
xchg
adc
rcrl
pop
mov
adc
sub
dec
arpl
xchg
repz
out
mov
mov
outsl
xor
outsb
into
and
sub
lds
adc
mov
inc
bound
aad
loope
je
jl
dec
xchg
fmul
sbb
in
jno
out
cmpl
or
xor
das
push
xor
and
rcl
pop
std
and
jmp
adc
jge
or
gs
or
sarb
pop
gs
es
out
pushf
sti
mov
adc
lret
xor
cltd
sub
or
adc
aas
sub
loope
or
fidivs
push
or
mov
ret
add
and
and
cmpsb
lods
add
dec
add
mov
std
mov
jae
lret
loopne
fadd
popa
shrb
rcll
jle
daa
sarb
or
stos
pop
mov
stos
scas
repz
cmp
inc
sbb
adc
and
js
sbb
cmc
push
gs
in
dec
dec
mov
dec
jne
xchg
cmp
scas
ds
lock
inc
out
lret
fwait
jne
pop
xchg
call
pop
mov
arpl
insb
roll
shrl
in
mov
push
rcl
clc
jle
mov
cwtl
je
lret
xchg
icebp
and
js
testl
mov
repz
pop
popl
sub
xchg
cwtl
mov
push
jle
jle
cmc
push
fldenv
in
daa
ret
mov
stos
xor
in
mov
xchg
mov
inc
cmp
sub
jne
shrb
add
in
mov
adc
mov
orl
ds
sub
fldl
push
daa
cmp
orl
xlat
shll
adc
inc
outsl
xor
insb
cmp
and
pop
and
or
imul
xlat
loop
faddl
ds
xchg
pop
data16
icebp
mov
mov
add
push
negl
jne
dec
ss
popf
mov
jmp
push
add
fsubrl
pop
outsl
mov
jae
cmp
mov
xchg
cmpsb
or
mov
aaa
jnp
mov
xchg
cmp
dec
jnp
insl
in
aas
jmp
scas
mov
and
lods
int3
sub
insl
sub
push
jnp
push
pop
repz
sbb
sub
out
mov
iret
rcrb
sti
scas
out
andb
insb
out
xchg
jb
mov
ror
cltd
mov
adc
dec
ja
ljmp
cwtl
mov
fldenv
push
inc
frstor
cli
popf
fdivrs
mov
icebp
ja
pop
sub
xor
sbb
sahf
mov
xchg
adc
ja
loope
jo
in
jecxz
ret
test
scas
shr
push
lahf
loope
mov
adcb
enter
and
sbb
jmp
push
push
xor
jecxz
insb
std
or
aad
mov
and
test
nop
inc
loop
sub
push
xor
pop
sbb
add
mov
cli
cmp
jge
bound
daa
jmp
pop
fmulp
push
jne
sub
dec
scas
sub
andl
pop
push
cli
into
sahf
cli
mov
xor
cltd
and
dec
icebp
fisubrs
std
stc
adc
sub
scas
adc
fdivs
dec
cmp
jmp
aam
in
lcall
mov
mov
jmp
ret
mov
lea
cmp
xlat
push
xchg
stc
push
in
inc
lods
icebp
jns
cmp
jns
pop
adc
pop
sahf
pop
mov
je
aam
stos
push
and
push
fs
jle
push
xorl
mov
push
mov
add
repz
rcrl
mov
push
std
fldl
pop
iret
cmpsb
mov
add
sbb
or
jnp
jbe
fs
mov
fstpl
fisttps
loope
out
outsl
inc
jl
insl
out
cwtl
mov
aaa
sbb
out
xchg
stos
pop
inc
push
repz
lahf
jbe
lods
movsl
xchg
fistpl
cltd
jl
test
lret
or
adc
push
into
and
sub
cld
scas
mov
cmp
shll
jmp
adc
pop
and
clc
jecxz
lahf
imul
fildll
inc
mov
adc
fisubs
rolb
sbb
pushf
movsl
mov
call
cmc
mov
fildl
testb
pop
or
in
cmp
call
mov
cmp
pop
ds
stos
popf
and
subb
out
push
or
daa
fst
out
scas
popa
xchg
data16
out
push
cmp
push
fadd
mov
jno
invd
test
jbe
shlb
stc
add
in
sbb
pop
addb
push
in
movsl
dec
mov
inc
repnz
inc
es
dec
andl
mov
fidivrl
push
mov
and
fldt
mov
push
xchg
int
pop
aaa
iret
insb
movsl
imul
fisttps
or
mov
xor
pop
into
and
mov
xchg
jo
lret
bound
ja
mov
mov
ljmp
add
rcrl
inc
fucomi
loopne
xchg
mov
jo
test
push
add
dec
xchg
mov
dec
dec
je
cs
test
pop
cld
lea
jne
dec
push
jbe
fisubl
sti
dec
and
imul
lcall
jns
jnp
js
icebp
fs
das
enter
mov
cwtl
icebp
lahf
rcr
add
outsb
cmpsb
jb
mov
cmp
or
js
push
and
mov
arpl
imul
sub
and
rclb
jp
std
sub
pop
push
jge
out
fcoms
fsubs
sbb
add
popf
jmp
and
out
idivl
pusha
jne
stos
daa
popa
iret
insb
and
dec
movsb
sub
jno
xor
mov
in
mov
ss
mov
inc
shr
mov
jno
mov
insl
sbb
rclb
mov
mov
cmp
add
imul
and
xlat
fidivl
jnp
das
xchg
sarb
cmp
pop
jecxz
dec
shr
sbb
aam
fcomi
add
jns
int
or
subb
incb
xor
cmp
or
or
jo
xor
imul
inc
add
scas
push
or
sub
cmp
int
pushf
mov
dec
popf
xchg
mov
push
and
pop
dec
mov
loop
mov
cmp
or
mov
icebp
loop
in
iret
mov
int
insb
sub
dec
test
lods
lods
push
and
sbb
mov
dec
jbe
mov
mov
sub
sbb
lock
sbb
xchg
jns
add
xchg
lea
mov
loopne
call
in
and
mov
adc
aaa
movups
cmp
mov
inc
ficoml
lret
ja
pop
push
repnz
mov
inc
cmp
out
test
fsubr
cmp
mov
dec
pop
xchg
scas
bswap
pop
outsl
dec
sub
adc
cmp
into
jge
or
in
lcall
cwtl
pop
inc
fsubrs
or
cltd
loope
lret
pop
mov
rcl
dec
sahf
out
test
dec
pop
in
dec
xlat
mov
mov
aam
inc
cmpb
push
inc
jmp
and
pop
xchg
sub
hlt
sarl
daa
cmp
adc
xor
or
fs
stc
add
dec
das
mov
cmpsb
mov
scas
jle
pop
mov
or
sahf
push
stos
inc
test
xchg
sub
and
adc
mov
push
push
fidivl
iret
sub
mov
sbbl
mov
cmpsb
inc
jno
xchg
clc
cmpb
mull
scas
mov
mov
mov
mov
jo
mov
sarl
ret
imul
in
push
jb
inc
scas
and
mov
mov
mov
cmpsl
scas
adc
mov
xor
inc
cmc
out
fsubp
adc
popa
inc
mov
data16
out
jae
fdivl
jnp
adc
sub
sbb
in
add
dec
push
fistpll
and
jge
push
or
mov
jl
cmp
data16
xor
xchg
shlb
imul
in
adc
pop
stos
lds
in
and
adc
or
xor
dec
sub
dec
mov
push
scas
lret
loop
mov
or
ret
roll
xchg
or
hlt
lods
testl
lods
movsl
hlt
test
push
lea
scas
jbe
adcb
cmpsl
sbb
cld
push
or
xchg
or
push
out
insb
lret
inc
dec
ret
ja
push
aam
sti
sbb
fsubrl
nop
insb
out
test
ss
pop
sbb
sbb
movsl
hlt
stos
inc
popa
cwtl
or
mov
fsubr
stos
insl
mov
ffreep
push
jecxz
cwtl
mov
lahf
push
push
stc
adc
pop
out
loopne
outsb
dec
call
inc
mov
lea
hlt
xor
xchg
subb
xor
sbb
ret
xchg
jo
pop
jne
mov
mov
mov
xor
out
pop
cmp
sbb
idivl
add
scas
pop
xor
dec
cltd
pop
out
cmpsl
imul
out
mov
shlb
sbb
adc
into
mov
repnz
loope
push
mov
pushf
imul
cwtl
cmpsl
mov
je
lock
inc
and
mov
testb
sbb
push
hlt
pop
inc
fs
mov
push
in
insl
idivb
pop
jl
push
and
pusha
xor
mov
lret
test
fldl
mov
xor
push
mov
adc
je
and
mov
xor
clc
aam
cmp
rcrb
pop
cli
fbstp
push
add
lcall
test
cmp
in
and
lea
push
outsl
sarl
outsb
pop
dec
or
pop
movsb
arpl
mov
je
jle
jnp
push
xchg
and
das
mov
pop
fnsave
adc
pop
inc
adc
jno
xchg
mov
aad
adc
xchg
push
lret
shlb
fs
push
in
mov
pop
shl
mov
sbb
cmp
test
lahf
call
push
cmp
fld
mov
sub
xor
popa
scas
inc
dec
fisubrl
mov
ret
jno
insb
xorb
cs
or
in
repz
jmp
adc
jl
fiaddl
fsubrs
ret
push
outsl
in
mov
add
mov
insb
sub
pop
jne
and
sub
or
loop
mov
mov
push
mov
mov
push
inc
insl
mov
popf
and
push
push
sti
mov
and
nop
fld
sbb
shrb
cwtl
fwait
push
out
adc
mov
repz
and
add
sub
adc
jmp
sbb
push
lea
pop
mov
icebp
sbb
adc
test
test
and
fcoms
imul
jno
nop
mov
add
adc
mov
loop
int3
adc
rorb
push
xor
stc
faddl
jbe
jmp
clc
inc
or
ljmp
cltd
fisttps
stc
mov
loop
adc
jbe
sub
mov
push
cli
adcl
mov
xchg
bound
cwtl
push
push
mov
mov
out
jle
inc
int3
js
inc
js
bnd
add
sub
dec
xor
lret
lods
pop
xor
mov
fistl
cmpsl
inc
cmp
iret
scas
in
in
in
adc
ss
in
dec
dec
xchg
or
lock
ficomps
pop
and
xchg
mov
lds
dec
xor
rcrb
cli
aaa
cmp
cmp
aad
and
mov
cs
rol
cltd
mov
cltd
imul
adc
cmp
aad
jne
push
sbb
js
cmp
mull
sbb
arpl
or
dec
mov
pop
addb
inc
shll
pop
fmuls
and
inc
jne
mov
lods
xchg
mov
negb
pusha
test
test
imul
insl
scas
fcomps
rorl
mov
pop
pop
dec
push
pushf
pop
rorb
mov
mov
movsl
mov
loop
iret
sar
xor
ret
pop
fst
lds
inc
dec
mov
repnz
jnp
pop
push
lret
jecxz
and
stc
rolb
lds
mov
lods
out
out
outsl
bound
mov
jge
jecxz
dec
imul
cmpsb
jo
test
sahf
mov
cmc
sahf
add
aad
pushf
js
jo
cmp
mov
cli
imul
pop
fnstcw
adc
adc
mov
xlat
test
mov
loop
icebp
loope
cli
or
sbb
xchg
insb
add
or
pushf
mov
jne
inc
fnstenv
aad
push
mov
jp
adc
mov
call
lahf
cmp
jae
int3
mov
jle
mov
cltd
lea
jp
sub
xor
mov
jmp
and
stc
mov
push
out
push
loopne
pop
xor
fcmovnu
or
movsl
xchg
out
jge
inc
adc
shl
rcll
andl
or
out
add
fucomp
jo
mov
repz
lcall
mov
pusha
pop
daa
add
adc
xor
mov
adc
xchg
sbb
or
aaa
sahf
xchg
xchg
xchg
jno
dec
jle
sub
push
inc
cs
arpl
add
call
dec
jg
add
idivl
in
aad
addr16
dec
jmp
scas
lock
stos
jecxz
loope
jge
lret
rcrb
stos
xchg
roll
jns
shr
jmp
daa
shll
jle
mov
aam
fstps
addr16
je
mov
mov
stos
push
loop
popa
imul
dec
pop
xor
aaa
insb
cld
bnd
push
jnp
stos
ljmp
fidivs
testb
xor
sbb
mov
dec
stos
adc
xchg
xor
cmp
jg
das
icebp
jae
add
into
and
ja
mov
ja
test
or
ds
jg
and
mov
or
inc
stos
or
cwtl
inc
xchg
xchg
fildll
mov
je
mov
inc
mov
fildl
lcall
addl
pop
dec
hlt
inc
sahf
fidivrl
ljmp
fwait
shlb
nop
mov
xor
pop
fwait
dec
outsb
or
sub
pushf
ja
inc
ret
lret
lahf
jecxz
aad
mov
loopne
jno
push
hlt
arpl
sub
aad
ja
clc
adc
or
cltd
xor
ret
hlt
inc
or
push
and
xchg
pusha
hlt
movsb
jle
dec
mov
mov
cli
in
sub
aam
add
int
jmp
mov
adc
loope
fistpl
arpl
test
into
add
mov
pop
add
adc
sti
sub
push
push
sbbb
or
pushf
loop
ds
jne
jo
icebp
shl
sub
dec
repz
mov
cmp
scas
xor
je
dec
mov
push
lahf
pop
lods
sub
adc
imul
outsb
movsb
lods
sub
jecxz
fsubrl
jne
ret
pop
push
jle
lret
mov
dec
cmpsl
dec
loope
popl
adc
addr16
sbbb
xor
sbb
insb
addb
jmp
adc
ds
xor
outsl
subl
mov
mov
push
adc
lea
insb
inc
out
or
movsb
sti
inc
cmp
sub
outsl
lea
mov
push
dec
mov
xor
pop
iret
adc
lcall
xor
inc
fdivrp
stos
xchg
sub
nop
mov
into
das
sbb
push
and
push
xchg
pop
jecxz
ja
cli
jmp
pop
loop
fcomi
or
imul
cmp
sahf
xchg
sub
or
hlt
fsub
cmp
in
lods
in
sbb
filds
sub
test
dec
dec
pop
xlat
sbb
mov
jo
mov
or
hlt
cmp
outsb
jne
sub
or
xchg
lea
xchg
push
or
jp
lahf
jl
sbb
mov
pop
pop
add
or
enter
pop
sbb
mov
sbb
cmovo
xlat
mov
cmpsb
imul
adc
sub
popf
insl
cmp
pusha
and
jae
xor
pop
add
push
push
mov
mov
test
ret
mov
jo
cvtpi2ps
pusha
cmc
jp
mov
mov
ret
sbb
lahf
push
dec
into
shll
mov
add
iret
push
mov
fsubr
mov
loopne
pop
lret
or
sahf
loope
add
fsubrs
mov
push
fs
mov
jae
pop
insl
int3
jle
ss
in
cltd
push
adc
in
push
jns
cmp
or
sub
mov
pop
jne
sbb
jno
sub
test
mov
repz
mov
dec
mov
jle
inc
in
outsl
inc
jno
mov
mov
sub
icebp
pop
subb
dec
pushf
into
out
aad
imul
lcall
xchg
inc
xor
mov
mov
mov
loope
cmp
cs
das
fs
out
pop
xchg
fstpt
shll
inc
add
aaa
pop
mov
repz
fiadds
push
clc
sbb
xor
int3
sub
adc
xchg
jp
test
jge
cld
push
mov
push
cmp
out
and
repz
lock
xchg
shlb
and
fdivr
pop
stos
sub
icebp
jno
enter
cli
test
call
stc
dec
enter
or
data16
xor
loopne
fldenv
call
sbb
or
imul
jecxz
lahf
push
dec
add
addr16
or
add
divl
adc
pushf
or
aad
inc
jae
dec
add
xchg
movsl
add
push
mov
out
and
and
sbb
out
push
insl
nop
dec
negl
in
lahf
ljmp
lret
pop
mov
popa
and
jb
out
xor
and
jns
mov
xchg
jnp
add
pop
leave
jne
mov
add
jmp
sar
or
add
mov
fiadds
out
loopne
mov
add
mov
mov
aaa
repnz
andb
loopne
adc
stc
xor
popa
cld
add
push
jmp
inc
sahf
push
jnp
jno
jb
xor
inc
out
cmp
push
cmp
loopne
dec
cmp
repz
subl
lcall
push
cmp
sub
xchg
xchg
sbb
mov
or
jecxz
ret
cmp
aam
and
jl
mov
inc
or
cmp
in
push
lea
cmp
jl
out
sbb
in
leave
bound
gs
mov
jle
xlat
int
int3
dec
popa
hlt
rcr
cmp
sbb
push
pop
pop
lea
dec
xchg
pusha
sub
push
stos
xchg
pop
lcall
adc
fsubp
popa
dec
cmp
cmp
inc
add
enter
push
lahf
jne
dec
icebp
stos
add
push
cmpsb
popf
mov
arpl
adc
mov
dec
lds
sahf
and
xlat
sub
outsb
xchg
or
sub
sbb
rcr
test
jae
xor
lret
sub
nop
mov
ja
icebp
mov
jmp
mov
andb
jmp
xchg
ret
test
jge
repz
popa
out
jecxz
sub
push
out
lds
into
clc
push
jmp
xlat
or
scas
mov
stc
jne
jno
xor
outsw
dec
movsl
push
popf
shlb
loopne
pushf
bound
fmull
clc
pushf
imul
dec
adc
cmpsb
outsl
inc
test
or
cmp
sbb
aas
jns
outsl
push
scas
fldz
add
loope
push
sarl
cmp
dec
xchg
sub
mov
rcl
cmc
mov
sub
lods
arpl
mov
xchg
jnp
mov
loop
cmp
movw
inc
pop
push
dec
mov
add
adcl
cmp
mov
popf
dec
jge
fisttpl
sbb
cmp
add
and
jmp
in
xchg
lss
cld
leave
xchg
pop
and
xor
shlb
js
ret
xor
and
push
sub
cltd
jmp
hlt
cmp
fs
jbe
mov
add
pop
push
jb
adc
in
sbbb
pop
addr16
xchg
lret
in
cmp
es
and
lahf
fs
leave
mov
cmpsb
sbb
dec
out
fistps
sub
dec
sub
aam
push
fsts
mov
cltd
push
cmp
jno
dec
inc
xor
jge
xor
pop
fisttpll
cmp
mov
push
mov
xchg
push
jecxz
out
or
pusha
push
mov
cmc
popa
fs
scas
notb
push
js
jmp
mov
xorl
push
xchg
sub
out
filds
pop
lea
push
jnp
and
lcall
lea
popf
fldt
sub
cli
fldcw
mov
lods
lcall
fstps
addl
and
dec
mov
dec
mov
cs
adc
shl
or
add
sbb
mov
repz
dec
pop
cmp
push
shlb
rclb
xor
sbb
cltd
les
sub
in
and
sbb
into
mov
sub
icebp
lahf
in
lods
mov
add
jp
xor
pop
bound
push
dec
and
or
adc
mov
gs
sbb
jnp
call
inc
mov
mov
pop
fisttpl
cli
inc
jmp
arpl
and
loope
pop
mov
clc
inc
adc
add
mov
shll
dec
sbb
outsb
sti
xchg
jge
jmp
jno
or
test
out
inc
mov
xlat
xchg
sbb
cs
inc
jg
out
ret
xchg
dec
sti
stc
mov
cwtl
movl
pop
pop
dec
lea
xchg
add
mov
push
call
rcl
mov
xchg
cmc
pop
cmpsb
int
mov
outsl
notl
push
pop
mov
orl
mov
inc
cmp
ret
xchg
inc
lea
out
push
in
push
xchg
add
jb
int
mov
test
fcmovnb
jb
aad
out
sbb
int
fsubs
data16
cmpb
mov
rorl
call
leave
popf
lret
cmp
es
jge
lcall
jo
mov
push
push
mov
jge
dec
stos
fcompl
insb
sub
hlt
cld
icebp
adc
cmp
cmp
and
aad
mov
and
push
mov
xchg
push
inc
sti
cld
mov
mov
pop
xor
rorl
push
aas
add
pmaxsw
pop
cmp
mov
pop
loop
mov
add
les
jns
mov
mov
or
dec
sub
xor
adc
add
jns
outsl
les
xor
lret
fisubl
sub
test
jo
cwtl
mov
fs
mov
out
pop
scas
aaa
mov
imul
xchg
rorl
out
std
arpl
mov
sub
mov
xorb
decb
xor
xor
dec
xchg
dec
jnp
in
push
push
add
mov
into
icebp
or
data16
mov
movsl
push
sahf
dec
xchg
in
pusha
push
and
adc
dec
imul
in
out
pushf
mov
into
sbb
push
lea
shrb
inc
pop
xchg
and
xchg
mov
test
jbe
mov
jnp
nop
push
and
imul
or
jbe
pusha
mov
inc
vdivsd
pop
lret
and
mov
fnstcw
jnp
test
mov
xchg
xchg
xor
roll
adc
push
fcmovbe
jge
outsb
fldl2e
loope
into
movsb
inc
and
xor
shr
xchg
jne
dec
sarl
push
adc
cmp
xchg
les
xchg
jmp
sub
jmp
jl
aam
inc
inc
das
xor
in
mov
fs
data16
xor
fcoms
jp
and
mov
mov
mov
xchg
mov
push
andb
iret
mov
je
or
stos
add
rolb
mov
adc
xchg
pop
and
jns,pn
cmc
frstor
out
cmpsl
mov
pusha
lcall
dec
outsb
bound
loop
mov
xchg
sub
mov
loope
xchg
imul
dec
mov
ds
jg
xor
stos
cmp
insl
pushl
fidivs
push
mov
cwtl
mov
movsb
cld
movsl
out
loope
std
and
xchg
je
popa
xchg
or
out
aam
xchg
int
jl
sub
pop
mov
into
mov
sbb
xor
sbb
push
loop
inc
subb
sbb
jo
mov
or
inc
popa
data16
aaa
imul
movsb
mov
mov
jae
push
fsubr
push
and
cmp
jmp
jp
fimuls
mov
pop
pop
ss
pop
push
in
imul
scas
loopne
cwtl
imull
pop
or
sub
cmp
stc
cmp
cmp
test
inc
xor
mov
mov
xor
sbb
ja
cld
popw
jne
dec
or
ljmp
sbb
loop
or
push
cmp
xor
nop
daa
frstor
shrb
mov
call
mov
pushf
pop
mov
cli
movsb
mov
ja
mov
aam
jae
inc
sbb
dec
and
sbb
insl
icebp
jb
mov
add
dec
cli
repz
rorl
movsl
repz
stc
insl
leave
jo
jnp
jge
movsb
icebp
pop
xor
xchg
add
sbb
aaa
xchg
aaa
in
lods
orl
scas
es
cmp
repnz
mov
pusha
inc
add
int3
orb
cmc
push
pop
dec
cld
sub
leave
ficompl
push
aaa
pop
inc
aaa
or
cltd
add
sub
cmpsl
test
dec
ds
leave
fisubrl
xchg
mov
jg
xor
fistpl
jae
dec
insl
push
filds
cli
repnz
call
add
int
lods
fldl
test
leave
mov
sub
pop
fsubs
icebp
cs
imul
cltd
jbe,pn
mov
add
nop
or
dec
pushf
push
imul
and
pop
adc
out
xchg
adc
pushf
adc
dec
pop
dec
cld
lods
mov
cltd
mov
jle
inc
sub
ret
cmp
inc
int
in
ja
fdivrl
ret
inc
das
mov
xor
xchg
dec
sbb
inc
mov
jmp
fdivr
mov
adc
sub
inc
loop
mov
push
addb
fdivs
xor
aam
jmp
pop
data16
push
in
arpl
dec
data16
jno
sbb
rorb
cli
sub
loope
int
icebp
jo
cmpsb
mov
dec
push
mov
push
lods
sbb
mov
jl
mov
lea
mov
and
test
sub
test
es
enter
dec
jne
and
hlt
arpl
ljmp
xchg
dec
test
and
pop
test
popf
xchg
sbb
and
push
push
lahf
loop
jo
push
stos
jbe
bound
test
sbb
divl
dec
push
out
pop
mov
movsb
mov
jne
mov
inc
arpl
push
ret
rolb
jbe
sbb
mov
jmp
repz
and
or
ss
sbb
cmp
add
and
das
xchg
add
scas
pop
std
shlb
adc
pop
add
push
les
sahf
daa
daa
cmpsb
lret
add
mov
lock
lds
lds
in
inc
jl
lods
repz
jns
shl
dec
mov
test
mov
cmp
fs
cld
int3
insl
insl
push
sbb
adc
std
rol
cli
or
popf
or
outsl
insl
push
imul
stos
filds
sbb
adcl
mov
inc
xor
lds
rclb
cmpsb
and
mov
fwait
test
xor
popf
cmp
inc
lods
jp
and
inc
xchg
repnz
push
clc
push
das
pop
mov
jno
xorl
fcmovnbe
cmpsl
sbb
mov
add
js
sbb
stc
scas
aam
loope
out
bound
fs
test
jbe
jl
nop
outsl
cs
fisttps
iret
pusha
mov
hlt
fdivrs
cmp
or
jmp
scas
or
or
and
add
es
test
adc
pop
mov
out
dec
in
lcall
dec
sub
sbb
orb
jbe
pop
pushf
repnz
xor
xor
mov
push
push
ret
stc
in
and
mov
test
mov
jl
ret
add
lods
jo
sbb
mov
cmpsb
or
stos
xrelease
jo
push
pusha
pop
sub
mov
sub
lahf
sub
inc
iret
or
pushf
cmc
pop
xchg
adc
jne
insb
fs
repnz
fwait
into
xchg
sbb
stos
cmp
mov
scas
mov
stc
cmp
mov
lahf
mov
sbb
xchg
sub
roll
std
imul
hlt
add
sti
adc
dec
ja
data16
mov
pop
aaa
sti
adc
add
sub
fcmovu
cmp
jge
inc
test
sub
push
cmpsl
push
fmuls
mov
loope
cmp
inc
rorl
pop
lds
or
mov
jmp
mov
and
int3
sbb
xchg
add
test
mov
adc
or
and
stc
lock
mov
insb
dec
aas
repnz
int3
cmp
sub
mov
insl
insl
xor
ds
icebp
mov
adc
sub
lods
test
jle
movsl
popa
dec
jp
xchg
mov
lahf
vaddpd
cmp
pop
push
xchg
jae
mov
xchg
orb
lea
dec
mov
mov
pop
xor
or
pop
fs
jne,pn
mov
push
aam
enter
data16
insl
sbb
mov
push
sub
insl
jnp
push
xchg
leave
jg
adc
adc
ja
in
and
mov
rorb
addr16
ljmp
pop
add
ja
push
js
cli
cwtl
push
jbe
mov
add
sbb
mov
std
scas
mov
mov
stos
imull
sbb
push
mov
and
add
pop
jmp
fucomip
jp
shld
cmp
adc
inc
fiaddl
psrad
sub
or
push
and
xor
loope
pushf
gs
icebp
sbb
mov
or
cwtl
sbb
ret
mov
sbb
imul
mov
aad
js
jnp
test
test
mov
rorl
test
mov
xchg
popf
cmc
and
je
stos
xor
inc
rorl
pop
daa
mov
cmp
dec
jle
push
mov
dec
loope
mov
or
pop
aas
mov
addr16
jae
popf
jae
mov
mov
mov
add
insl
jno
mov
mov
nop
mov
push
insl
dec
adc
test
mov
fdivl
xor
test
mov
inc
test
adc
popf
or
lret
dec
lods
loop
push
dec
addr16
rorb
sub
loopne
adc
aas
xlat
daa
ja,pt
scas
lcall
cmpxchg
or
nopl
pop
ret
out
ret
cltd
mov
idivb
daa
pop
mov
inc
pop
aas
ret
xchg
ljmp
inc
push
lret
sub
push
lea
xor
mov
cli
adc
sub
and
sub
in
adc
hlt
aaa
push
adc
jne
out
xchg
fwait
push
or
mov
mov
in
xchg
into
jg
or
xor
mov
out
fwait
cs
sbb
dec
repz
pop
stc
and
push
daa
pop
push
mov
push
ss
loope
in
js
or
mov
mov
sub
xor
and
and
xor
jmp
adc
je
cmpl
js
dec
arpl
jle
push
addr16
fisttpl
cmp
inc
mov
enter
pop
dec
call
xor
in
les
cmpsl
bound
dec
mov
leave
mov
mov
cmp
ficoml
adc
dec
into
mov
or
xorb
push
jge
cwtl
jle
rolb
pop
fs
lea
int3
cld
xor
inc
mov
es
jge,pn
push
push
cmpsb
jne
imul
dec
inc
mov
jmp
jne
repz
fwait
das
enter
mov
jno
sub
shl
sub
cmp
aam
and
lret
imulb
je
scas
jnp
lret
lea
and
ss
movsl
cli
inc
fs
xlat
mov
loope
test
push
mov
cmpsl
es
inc
pop
adc
movsl
jl
add
in
push
sbb
cs
inc
pop
shl
pusha
sub
fldt
lock
push
psrlw
mov
jge
pop
jb
add
pop
cmc
popa
call
push
inc
or
mov
ja
fistps
cmp
lds
push
fiaddl
mov
movsl
jmp
add
push
jbe
das
or
cmpb
jge
int3
ficompl
xchg
xchg
rorb
inc
inc
pop
pop
xchg
pop
cs
call
test
ljmp
adc
add
stos
add
popf
mov
hlt
clc
push
pushf
mov
in
and
cwtl
or
jl
sub
test
mov
sbb
lahf
or
add
loopne
mov
pop
insl
cltd
into
imul
ret
mov
in
push
xor
sbb
mov
les
cmpsl
sbb
mov
mov
int
lcall
and
xchg
std
xor
loop
cmp
jnp
pop
xor
shrb
lret
mov
inc
in
test
repnz
push
mov
cmc
adc
inc
mov
pop
add
cmp
mov
xchg
scas
pop
pop
imul
aas
push
and
mov
fidivs
out
test
inc
ret
inc
xor
xor
cli
fistpl
pop
lahf
fdivs
outsb
mov
not
xchg
testl
cmp
or
loopne
sahf
cmpsl
sub
mov
sub
dec
inc
xchg
fldcw
or
cmc
int
adc
cwtl
dec
mov
popa
xor
mov
sbb
inc
adc
jmp
mov
xor
add
sahf
lahf
mov
iret
push
dec
in
jns
xor
mov
xchg
inc
stos
mov
loopne
xor
mov
jbe
stc
or
loop
adc
loopne
jno
and
popa
adc
mov
fstl
pusha
and
adc
sti
cmp
jge
or
stos
rolb
mov
hlt
das
add
jp
mov
add
mov
mov
and
popa
add
mov
out
dec
mov
jp
xor
test
mov
inc
fwait
push
mov
fistps
imul
cmp
mov
or
aam
jbe
rcrl
push
xor
scas
rorb
lea
inc
xchg
and
lea
test
adc
add
jge
cmpsl
in
dec
adc
ja
rcrl
imul
mov
mov
sti
jl
insb
outsl
icebp
addr16
adc
insl
inc
jne
xchg
ss
in
xchg
insl
cmpsb
rolb
jmp
sub
adc
mov
sti
xchg
and
test
in
mov
push
movsb
mov
hlt
inc
add
xor
push
popf
sbb
adc
adc
or
mov
or
addb
sub
mov
mov
add
jmp
mov
stc
fcomi
add
xchg
and
call
stc
dec
aas
mov
insb
call
pop
mov
daa
call
and
pop
aad
sub
add
sbb
inc
aaa
mov
xlat
fdivrs
ja
mov
jbe
jb
arpl
mov
mov
loopne
ss
xor
call
daa
nop
mov
insl
mov
inc
sbb
into
leave
mov
fsubrs
push
test
sbb
push
rol
push
inc
mov
jecxz
rclb
lea
lds
cs
xchg
sbb
cmp
lret
aam
ds
scas
in
les
test
ss
xor
fadds
push
fdivr
sub
adc
mov
xchg
sbb
push
dec
lock
jle
add
jmp
inc
movsl
push
daa
insb
sahf
je
cmp
mov
int3
mov
pusha
mov
sar
sar
jnp
pop
imul
shll
cli
gs
lea
push
sbb
or
mov
and
jo
cmp
jmp
or
mov
pop
mov
inc
adc
pop
mov
mov
push
sahf
arpl
sahf
mov
jle
inc
mov
jl
mov
icebp
test
mov
jnp
lods
shlb
inc
dec
cmp
pop
pop
push
mov
dec
arpl
pop
test
sbb
push
xchg
and
lods
movsb
push
mov
add
mov
out
mov
cmp
jmp
call
inc
jae
shlb
xor
stos
rcll
mov
in
in
in
xor
repnz
int3
inc
cmc
jp
repz
xchg
adc
mov
sbb
push
sbb
ss
push
dec
xlat
inc
cmp
ljmp
stos
cmpsl
das
out
or
add
pusha
push
stos
fisubrl
stos
cmp
mov
ret
xchg
dec
push
push
dec
enter
or
mov
sbb
imulb
int
test
and
dec
insb
inc
jnp
mov
pusha
xchg
lret
sbb
jp
mov
scas
stos
push
sahf
subl
xchg
cltd
lods
mov
and
mov
out
adc
adc
mov
inc
mov
imul
dec
neg
cmc
pop
rcll
cmc
sub
ss
mov
lds
repz
lds
arpl
outsb
bound
and
test
ret
ja
mov
out
mov
or
jle
and
hlt
or
add
loop
ja
icebp
jle
bound
cs
push
mov
addl
push
mov
and
fcmovb
andb
into
jmp
xor
scas
data16
cmpsb
nop
and
fidivs
pusha
adc
adc
arpl
cmp
popf
add
push
add
fcomps
popa
inc
mov
out
imul
xchg
inc
cli
popw
lahf
jae
sbb
jnp
jge
pop
lock
add
pushl
std
or
cmp
fwait
xchg
mov
and
push
mov
xchg
sbb
add
sbb
out
xor
push
sbb
inc
fcmovne
or
movsb
nop
divl
push
out
cmpsb
data16
lea
push
inc
lcall
cwtl
lock
mov
ret
adc
call
jne
das
outsb
push
ret
sahf
ficomps
xchg
adc
int3
jno
mov
mov
mov
cs
movsb
mov
cmc
pop
sbb
jg
insb
das
hlt
cmp
stc
pop
fwait
rorl
shlb
sbb
lods
cmc
cmp
and
jae
mov
in
adc
into
inc
sub
lea
push
ret
into
mov
adc
out
inc
aaa
aas
jb
fwait
in
ret
js
add
icebp
mov
mov
xor
xor
mov
push
cmpl
bswap
mov
jp
and
xchg
pop
popa
clc
sar
leave
int
push
daa
les
sbb
addl
mov
js
push
sbb
pop
mov
cwtl
decl
mov
jo
sub
mov
xchg
xor
sbb
and
sub
xchg
jae
sbb
mov
mov
in
loope
sarl
adc
aad
mov
jne
jl
inc
pop
lahf
cmpsb
dec
sti
mov
lret
jge
or
and
cld
aam
push
test
push
xchg
ja
fmul
push
je
adc
sub
push
and
jns
push
push
push
dec
fcmovnb
les
and
ret
es
idivl
sub
xchg
mov
jne
out
adc
push
imul
decb
imul
iret
imul
mov
stc
xor
adc
sub
sarb
dec
add
xchg
call
xor
outsl
mov
mov
add
loopne
push
mov
cwtl
jns
dec
xor
ja
mov
jmp
jle
lds
inc
insb
pop
cmp
mov
ret
xchg
mov
mov
xchg
cmp
and
add
inc
add
xchg
bound
test
std
push
xchg
add
or
add
inc
inc
lcall
fwait
shrl
jnp
arpl
nop
and
xchg
lods
sub
lahf
addb
loope
shrl
aas
mov
bound
leave
mov
idivl
ds
or
and
scas
lock
and
xor
addr16
xor
push
imul
pushf
and
mov
cmc
and
outsb
lahf
mov
test
jge
sub
or
adc
inc
push
shll
scas
pop
movsb
std
dec
or
shl
mov
xchg
cs
push
adc
inc
hlt
out
cmp
xor
pop
pop
pop
daa
leave
test
push
movsb
lods
and
push
mov
fsubp
jne
and
sub
xor
xchg
imul
mov
bound
or
lds
add
cmpsl
dec
popf
js
or
sahf
jb
loope
mov
dec
aad
mov
xchg
test
pop
pop
rcrl
cmp
sbb
mov
xchg
shl
or
push
push
jns
pop
mov
outsb
inc
sbb
scas
int
insb
or
xchg
sbb
mov
cwtl
out
in
gs
jge
out
xor
mov
test
cmpsl
in
mov
or
xchg
pop
mov
stos
mov
andl
add
pop
push
out
nop
xor
loopne
rolb
add
or
lds
push
lods
cmp
and
lahf
rorl
loopne
test
xchg
inc
call
cwtl
mov
lods
sbb
adc
jmp
rcrl
dec
dec
jg
push
or
gs
xor
aam
pop
test
movsl
inc
xlat
shl
in
fistl
jecxz
fiadds
or
jns
mov
loopne
mov
inc
push
mov
jae
out
jecxz
sub
mov
sbb
sub
mov
sbb
push
fmull
aaa
fldcw
mov
ret
cwtl
test
and
lds
ss
fwait
shl
in
sti
inc
mov
mov
iret
pop
xlat
pcmpeqd
test
mov
popf
mov
and
and
push
and
shlb
mov
xor
sbbb
or
cli
pop
jno
mov
ret
outsb
out
imul
sub
xor
sub
negb
adc
ret
fstp
enter
push
dec
rolb
repnz
xor
xor
cmp
sub
sub
jo
xlat
lods
cmp
dec
bound
push
dec
mov
jge
insb
fadds
test
ljmp
cli
insl
lea
dec
in
xor
movsb
ds
flds
cmp
add
js
pushf
dec
ret
xchg
aad
pop
add
cmpsb
lret
je
enter
add
imul
loop
loopne
cltd
sbb
jecxz
aaa
jbe
or
mov
pop
xor
ss
shl
icebp
mov
cmc
jle
paddusw
das
loop
daa
loopne
pop
popa
xor
inc
outsb
fimuls
sub
or
popf
xchg
inc
stos
mov
add
insl
pop
xor
add
shlb
mov
or
bound
inc
mov
rorl
mov
cli
lret
mov
sub
add
xchg
fs
mov
inc
aaa
mov
ds
pop
test
xchg
enter
ss
mov
rcrb
inc
jle
pop
mov
in
push
popf
jl
daa
or
sub
scas
repz
cmp
pop
imul
in
insl
sub
data16
data16
dec
add
outsb
adc
mov
sti
rcrl
aaa
iret
or
out
xor
cli
xor
clc
ffreep
insl
xor
rorl
data16
push
push
ss
daa
aad
pusha
movsl
sbb
repnz
aas
aaa
jmp
shl
pop
in
aam
nop
insl
stos
sar
ret
outsb
cmp
or
sbbb
imul
stos
push
scas
add
lods
ds
int3
ss
shld
add
xchg
push
or
add
cmp
mov
mov
xchg
stc
inc
das
std
cmp
mov
ficoml
pop
arpl
and
int
and
ret
pop
mov
pop
movsl
pop
or
or
fnstenv
jbe
repz
aam
sub
repnz
mov
pop
loope
sbb
add
popf
push
aad
sub
in
repz
rcrl
into
dec
mov
repnz
xchg
out
pop
mov
arpl
and
inc
jnp
mov
jns
push
xchg
popa
mov
push
imul
cld
out
popf
add
out
mov
cld
shlb
and
jp
leave
mov
push
pop
sti
jae
pop
xchg
xchg
divl
roll
outsl
sub
cli
pop
xor
mov
add
push
jge
jl
subb
mov
adc
fcmovu
cmp
lret
loopne
add
push
enter
pop
mov
xchg
daa
push
xchg
sti
xor
out
mov
xor
or
jne
sbb
jae
push
mov
push
cmp
popf
mov
inc
fdivl
pusha
test
mov
fs
mov
add
pushf
sahf
push
push
int
jno
andb
pushf
lcall
je
push
lcall
mov
mov
and
push
fmuls
lret
jo
cs
stc
out
or
idivb
repz
sbb
dec
inc
in
dec
xchg
dec
xchg
jno,pt
xchg
jmp
jl
cmp
jg
mov
and
div
imul
cli
adc
mov
sbb
push
xlat
push
mov
mov
data16
rorb
mov
dec
push
popa
cs
call
pop
sub
loope
ja
clc
dec
je
mov
mov
adc
add
imul
push
or
stc
inc
shl
loope
lock
ss
lea
lahf
xchg
repnz
repnz
js
sub
pop
nop
pop
xor
mov
dec
das
leave
push
sarl
ror
cmp
sub
popf
mov
push
pusha
xchg
sti
sub
call
mov
sti
into
jmp
jg
movsb
jb
adc
fsubrs
inc
jnp
add
filds
cmpsb
into
or
xor
xor
push
movsb
mov
stc
clc
xor
sti
shlb
daa
rclb
out
jge
mov
or
test
or
mov
jg
test
jge
or
xchg
sbb
mov
xchg
and
gs
inc
jbe
dec
imul
push
test
ret
pop
cmp
mov
fsubr
cli
pushf
inc
xor
jge
adc
loopne
xchg
clc
xchg
or
or
stos
rcrb
add
xchg
int
mov
loop
mov
dec
jg
in
imul
pop
and
loopne
pop
xchg
pop
push
adc
xchg
das
xor
stos
out
dec
jae
jmp
sbb
hlt
icebp
sahf
es
push
or
es
dec
or
pop
cmp
dec
rorb
add
sti
mov
jecxz
mov
push
adc
mov
aam
or
test
mov
cmp
sub
icebp
outsl
test
push
jecxz
sub
xor
cmpsl
lea
inc
jmp
aaa
mov
jg
cmp
pop
pop
outsl
loop
fmuls
rcr
sub
push
xor
mov
int
sbb
pop
dec
fstpl
dec
loop
sub
jae
adc
ss
outsb
sti
shlb
adc
imul
out
fdivl
imul
xchg
test
sbb
clc
xchg
das
data16
popf
or
int
daa
je
dec
adc
mov
sub
cwtl
out
dec
pop
aam
popf
jno
cmp
call
ret
sub
ret
aad
loope
add
cwtl
cmp
and
scas
jg
fldcw
testb
frstor
mov
push
les
in
stc
cmp
dec
popa
mov
in
add
sbb
popa
in
jae
add
pop
aas
add
repnz
xchg
scas
lret
or
push
mov
mov
dec
cmp
stos
push
aad
xor
adc
pop
jne
cmpsl
mov
pop
pop
int
or
in
and
sub
loope
sbb
cmp
fsubs
xor
inc
mov
scas
addr16
flds
lahf
cmpsb
mov
in
xor
xchg
xchg
rclb
popf
pop
nop
cmp
mov
fldl
inc
ja
mov
cmp
ffreep
aad
add
push
dec
cmp
xchg
and
push
leave
push
adc
xor
hlt
es
dec
push
aam
addb
dec
loop
out
fdivs
lahf
cmp
nop
cs
mov
repz
fisubrs
lods
mov
xchg
repz
xchg
adc
mov
ljmp
cmpsl
pop
jecxz
mov
sbbb
add
and
insb
add
fnstcw
xor
inc
or
int3
cld
cwtl
jb
adc
jecxz
jo
aaa
popf
rolb
fiaddl
gs
ret
add
xchg
pop
sbb
sub
icebp
mov
pop
fdiv
push
out
bound
js
loop
fstps
add
stc
shll
sub
jle
das
sub
jae
push
xlat
and
stos
lods
scas
fdivrl
decl
mov
and
adc
call
and
pop
mov
sbb
mov
xor
or
fiadds
push
in
jnp
nop
sbb
out
iret
fcompl
sbb
sbb
call
cli
mov
aas
xchg
jbe
es
cld
push
loope
imul
addr16
sbb
pop
fdivl
xor
inc
addb
movsb
sub
mov
sub
daa
fcompl
pop
ja
mov
xor
dec
jo
mov
xchg
pop
outsl
mov
or
fsubl
ret
inc
outsb
sub
fs
test
xchg
sbb
add
jae
pop
stos
pop
cmp
je
sbb
loopne
mov
movsl
mov
fstl
inc
ror
push
cmp
cmp
jo
out
adc
test
imul
divps
sub
sub
ret
mov
aaa
aaa
js
cmpb
mov
frstor
and
or
cmp
std
xchg
mov
and
inc
pop
jl
push
push
addr16
mov
jmp
movb
pop
sahf
sub
mov
push
xchg
out
cld
pop
loopne
gs
test
and
add
cld
cmp
lret
xor
sub
xor
jmp
pop
push
incl
push
push
je
lock
push
sbbb
mov
mov
xor
jns
rcll
call
mov
je
mov
mull
or
les
lcall
test
sar
fiadds
das
add
xchg
mov
xchg
cmp
add
imul
sar
push
mov
mov
and
cmc
pop
leave
mov
lret
jle
adc
mov
mov
or
aaa
add
dec
add
cmc
pusha
in
cmp
push
adc
xchg
ret
xor
popa
push
pop
and
push
mov
loop
jecxz
test
orb
and
movsl
or
jno
lock
sub
jg
cwtl
scas
jmp
xchg
mov
xor
jp
add
jae
dec
inc
cmp
es
rorl
addr16
mov
leave
jl
repz
pop
divl
mov
mov
dec
or
add
cmpsl
dec
test
cwtl
js
jmpw
xchg
and
test
push
mov
das
cmpsl
sbbb
sub
add
aam
jbe
call
aaa
mov
mov
sub
inc
pop
cmc
fldenv
push
cltd
outsb
outsb
lcall
inc
pop
dec
fmuls
aam
mov
mov
lds
lock
mov
and
or
add
daa
adc
in
mov
xchg
mov
inc
mov
aas
scas
shll
mov
xor
adc
mov
inc
and
pop
xchg
repz
cmpsl
iret
dec
sahf
cmp
outsl
js
ret
aas
loop
adc
daa
leave
dec
push
pop
fdivrl
out
xor
jnp
xor
dec
mov
loop
xchg
mov
jbe
jo
test
push
arpl
mov
dec
lahf
dec
es
ljmp
sbb
jmp
inc
mov
or
les
jae
xor
scas
pusha
scas
mov
cmpsb
cmp
jle
jecxz
add
push
sbb
mov
inc
push
push
jmp
fildll
pop
mov
std
adc
repnz
mov
push
mov
int3
bound
dec
cmp
jmp
sub
out
sti
mov
aaa
ss
jae
dec
xchg
xchg
xchg
mov
add
and
dec
inc
fdivl
rclb
add
insb
cmp
adc
lds
data16
mov
push
das
mov
mov
push
cmp
fildl
test
xor
rorl
repnz
aas
adc
insb
mov
push
outsb
xchg
aam
mov
shl
movsl
xchg
or
icebp
shll
stos
movsl
and
mov
aam
adc
jmp
mov
cmp
ja
lcall
jecxz
daa
insb
cli
ret
dec
mov
lods
pop
pop
sbb
cmp
xor
jmp
fdivl
jmp
out
xchg
call
add
mov
pop
adc
popf
xchg
mov
mov
push
imul
dec
imul
push
ret
ljmp
xchg
or
es
cltd
popfw
xchg
mov
ds
ss
fwait
adc
ret
mov
inc
and
sub
fwait
jle
add
dec
xchg
rcll
stos
mov
fcomi
dec
jne
rorb
or
ds
dec
jb
lods
dec
mov
adc
cmp
aaa
jbe
jmp
or
into
dec
xor
or
add
cwtl
ret
pop
dec
jb
stc
in
icebp
sub
pop
and
adc
jno
jmp
pop
adc
dec
daa
in
hlt
adc
xor
arpl
lods
dec
repnz
mov
hlt
test
lret
bound
faddl
mov
push
lahf
cmc
or
in
pop
mov
and
fucomi
dec
mov
test
sbb
xchg
jns
fimuls
inc
pmaddwd
loope
xchg
sbb
add
das
ljmp
std
add
test
cltd
dec
push
mov
jns
pop
xchg
fcoms
leave
sbb
jnp
mov
jb
sbb
rcrl
imul
cmp
fcoml
int3
cmpsl
stos
frstpm(287
mov
jle
add
xor
add
sbb
dec
mov
sub
xchg
jns
insb
push
scas
push
xor
repz
sub
xchg
mov
ljmp
fs
inc
cmp
mov
inc
rolb
mov
or
ficompl
add
dec
adc
and
jns
mov
lods
je
mov
jg
sbbb
lret
add
cltd
push
mov
or
jo
mov
jo
loope
mov
xchg
pop
push
idivb
xchg
add
ds
repnz
jge
aas
stos
sub
out
adc
jb
mov
sahf
sbb
or
enter
fmuls
mov
mov
fcomi
and
sub
cmc
sbb
sbb
mov
push
mov
out
pop
outsb
out
mov
test
divb
movsb
adc
popa
mov
push
test
inc
sbbb
outsb
xor
add
jae
sbb
ret
xchg
pcmpeqw
adcl
push
mov
pop
mov
repnz
ds
testl
movsb
test
mov
push
dec
aas
xlat
icebp
and
popf
mov
fcoml
cmc
push
cmc
dec
es
jnp
jmp
adc
daa
xor
xor
mov
jmp
hlt
loopne
movsb
sahf
test
inc
je
cmp
js
lock
xor
sbb
test
xlat
lods
mov
divb
or
ljmp
pop
mov
lret
mov
lock
sub
xor
sub
mov
mov
sbb
test
sahf
push
mov
fisubrl
into
into
mov
iret
jmp
push
shrl
adc
outsb
mov
inc
push
stc
cmp
push
mov
out
imul
mov
pushf
mov
or
inc
mov
das
mov
dec
adc
iret
cmp
add
push
jle
sub
xchg
pop
mov
xchg
sbb
iret
cs
push
fiaddl
cmp
aam
lahf
mov
push
mov
pop
clc
ss
stc
or
and
repz
cmp
mov
xchg
adc
incb
lret
ljmp
dec
fiaddl
ds
pushf
fidivrl
push
in
and
dec
and
aad
je
lods
movsb
mov
mov
dec
push
xlat
push
sub
mov
aaa
cmp
mov
lds
int
movups
jp
and
jo
jg
mov
pop
psubd
ss
addr16
lock
sub
mov
test
jecxz
xchg
fldl
xchg
mov
ds
xchg
pop
and
xor
jg
push
adc
test
jg
fldl
dec
sub
aad
mov
or
js
adc
push
xchg
scas
aad
loopne
in
rcll
dec
push
les
pop
mov
aas
sub
or
jg
data16
in
test
jns
lods
ret
sbb
test
addl
in
and
ja
pop
je
adc
ret
in
les
pop
shll
ret
mov
or
jmp
in
pop
inc
and
out
push
cmp
xchg
and
in
ret
sub
xor
popa
sub
and
pop
in
push
xchg
cwtl
mov
mov
out
jmp
dec
mov
jge
cmp
push
xor
jnp
mov
out
cld
cmp
sbb
pop
or
or
push
or
adc
movsb
mov
add
and
xchg
inc
ljmp
mov
loopne
xor
lret
aam
dec
mov
test
xor
mov
push
in
jge
icebp
mov
cmpb
xchg
push
push
out
and
sbb
inc
jno
js
pusha
or
adc
push
dec
imul
mov
xchg
loope
sbb
cmp
cli
adc
pop
mov
xchg
cld
or
loope
cmp
dec
cwtl
push
mov
or
mov
mov
push
and
inc
sbb
mov
pop
enter
js
jno
lock
mov
lcall
cs
push
daa
loope
movsb
in
xchg
out
xor
inc
call
mov
xchg
dec
gs
dec
icebp
clc
pop
cli
out
xchg
out
xchg
gs
imul
mov
inc
popf
js
xchg
add
sub
sub
mov
dec
or
stos
push
inc
aas
leave
repnz
bound
sub
xchg
pop
out
sub
pop
jge
and
inc
pop
jg
push
repz
mov
sbb
or
add
int3
inc
jns
stos
shlb
lods
fimull
fimuls
jle
icebp
sbb
pcmpgtb
int3
enter
fsubrs
inc
pop
add
shll
das
loope
pop
out
push
hlt
sbb
sub
je
pop
stos
cmc
outsb
loopne
xlat
xor
bound
xchg
xor
pop
fs
insb
push
push
repz
xchg
rorb
outsb
xchg
sahf
cmp
sub
ret
outsl
or
aad
sbb
mov
test
inc
pop
test
push
pop
cld
mov
push
test
xor
pop
sbb
push
scas
test
or
aad
adcb
push
popl
rcll
or
xlat
jb
xchg
pop
pop
and
inc
jne
pop
mov
movsb
mov
push
sahf
sbb
or
ja
push
add
sarb
scas
dec
mov
js
jle
mov
lock
mov
cmp
stos
fimull
lds
aaa
and
insb
int3
xchg
jle
in
mov
xor
push
ss
mov
mov
in
xorb
hlt
sbb
hlt
js
mov
sahf
jg
adc
mov
add
xchg
jl
inc
mov
push
fs
rorb
fidivs
movsl
pop
push
xchg
movsl
cmp
loope
jbe
lret
imul
cwtl
pushf
imul
mov
out
jnp
and
outsl
add
or
push
cmp
lahf
lds
loopne
adc
push
in
arpl
test
addr16
scas
shlb
int3
dec
outsb
cmovle
push
jle
adc
mov
les
pop
jg
or
enter
or
out
stos
add
das
xlat
ss
in
ret
outsb
dec
jne
les
sub
outsb
clc
jge
push
inc
repnz
mov
call
xchg
in
add
sbb
add
ja
jae
repz
aas
xchg
xor
testl
popf
jnp
bound
xchg
xchg
cmpsl
xor
or
add
sbbl
or
ja
pop
scas
dec
mov
dec
clc
pop
fcoml
into
fwait
mov
sarl
inc
mov
pop
xor
cli
sahf
divb
les
adc
mov
or
cmp
loope
cmpsl
stc
js
dec
inc
cmp
ljmp
push
xor
pop
jbe
imul
sahf
sar
repz
dec
movsl
or
cmp
fnstsw
icebp
nop
push
cmovge
cmpsb
dec
shlb
shl
xor
pop
pop
in
mov
xor
stos
test
maxps
ret
movsb
scas
std
xlat
or
and
fidivs
mov
or
mov
mov
lods
nop
pop
or
mov
enter
cmp
sahf
cld
mov
lods
loopne
out
lods
arpl
sti
add
push
imull
mov
xrelease
mov
inc
sub
in
xchg
mov
scas
loop
mov
mov
out
xchg
pop
test
shl
cltd
mul
sbb
jg
xchg
loop
add
cmp
mov
or
mov
and
cmp
jg
jmp
xlat
mov
and
sub
test
push
test
dec
es
mov
icebp
jecxz
daa
push
mov
sbb
inc
dec
scas
shlb
and
pop
xchg
xor
je
mov
scas
scas
dec
sbbl
fcoms
test
add
sbb
xor
dec
and
cltd
test
imul
push
fs
movsl
cmp
ljmp
cld
movsb
jle
dec
aaa
mov
push
fildll
mov
xchg
fstps
ret
jb
mov
mov
inc
stos
pusha
ja
mov
orl
in
adc
dec
rclb
jl
cmp
out
in
adcb
and
and
shll
sub
add
mov
mov
js
imul
pusha
dec
cmp
jge
push
cld
imul
push
inc
ror
jb
push
arpl
js
fiaddl
sbb
and
pop
fsubl
das
test
movl
mov
jne
adc
fiaddl
mov
add
fisttpll
jge
adc
xchg
jae
cmp
pop
jae
sub
and
test
pop
sbb
imul
sub
and
int3
inc
lock
push
enter
insb
mov
cmc
sbb
out
jmp
lcall
enter
leave
mov
test
lret
lods
stos
push
roll
jbe
mov
mov
push
sbb
call
fcompl
in
mov
and
out
xchg
or
push
push
jb
mov
icebp
and
mov
jmp
test
add
out
out
mov
daa
lret
scas
loopne
repz
xlat
pop
mov
stos
leave
adc
notb
pop
cmc
jnp
lea
lahf
mov
mov
add
lods
loope
cwtl
cltd
jnp
mov
insl
mov
sbb
call
in
sbbl
out
loope
inc
lret
gs
shll
and
pop
gs
cmpsb
je
pop
mov
mov
or
sbb
in
andl
repz
mov
mov
xor
fsubrl
punpckhbw
mov
adc
ret
mov
or
insb
add
xchg
fcomip
and
push
pop
push
pop
cwtl
mov
das
lahf
or
pop
fsubrs
xchg
movl
sub
je
mov
sub
sub
lds
jno
pop
mov
in
sub
lcall
insl
stos
lds
dec
repz
dec
mul
cmc
mov
fwait
sbb
push
js
push
shrb
inc
cwtl
clc
int3
popa
sbb
sub
adc
jb
mov
fmull
mov
fcoml
call
xor
pop
sub
in
push
and
fdivr
andb
push
mov
mov
jno
fcmovnu
mov
push
xor
es
pop
rolb
mov
xor
les
arpl
xor
mov
mov
inc
dec
jnp
test
dec
mov
dec
imul
das
ret
add
xchg
test
mov
push
or
mov
xor
rorl
sub
push
jno
inc
popl
lea
fs
dec
cmpsl
inc
push
sub
mov
mov
jnp
xchg
arpl
sarb
push
add
imul
aas
xchg
iret
lds
jle
mov
cltd
sahf
dec
jne
ss
adc
mov
xchg
js
leave
mov
stc
xor
pusha
scas
add
fwait
int3
insl
sub
mov
push
cmc
fists
divl
sahf
test
rorl
pop
test
leave
repz
sahf
sbb
cli
xchg
scas
leave
out
call
push
sub
push
test
mov
jbe
mov
mov
pushf
neg
adc
and
lea
popa
or
nop
cmp
jne
pop
xchg
mov
pop
repnz
gs
mov
or
sti
in
out
xor
jae
xchg
mov
mov
sub
lods
cltd
shl
mov
movsl
jl
and
pop
iret
or
lret
cmc
repz
dec
push
loopne
fcmovb
in
test
sbb
insl
clc
pushw
fldt
in
int3
outsb
js
fdivs
aam
fs
int
add
pop
sub
cmpsb
divb
cmpsl
rcrl
test
mov
cwtl
mov
cmp
jp
xor
jne
addr16
shll
imul
rcrb
dec
ds
leave
pop
or
arpl
icebp
test
dec
xchg
icebp
add
fsub
or
xorl
repnz
push
jl
scas
shlb
mov
arpl
lods
imul
mov
mov
jne
loopne
sar
lock
cmp
sub
rclb
clc
dec
push
cmpsb
xchg
dec
adc
ret
mov
or
dec
mov
nop
mov
xor
push
jmp
push
add
mov
scas
jmp
inc
cmpsb
pop
pxor
jmp
inc
jmp
adc
fstp
repnz
mov
imull
and
push
cmpsl
push
pop
xor
mov
js
add
dec
xor
mov
sbb
and
rorb
sbb
lods
or
call
in
add
sbb
movsl
test
mov
pop
sub
mov
mov
ja
daa
in
aad
pop
ss
cli
lret
jne
push
add
fucomi
in
pop
andb
push
push
cmpsl
adc
scas
pop
iret
loopne
cmpsl
xchg
shrl
jle
sbb
or
xor
aad
lahf
mov
filds
adc
fs
sbb
sub
add
imul
dec
jne
shl
jmp
pop
mov
shrb
inc
rclb
jno
inc
nop
mov
xchg
mov
cmp
push
outsl
pop
jl
gs
jo
data16
inc
int3
ficoms
movsw
out
jmp
int
dec
mov
sub
xchg
sub
lea
cmc
mov
decb
lret
addr16
sub
or
dec
xchg
scas
je
sub
lcall
push
loope
sub
mov
mov
jnp
push
mov
xor
in
xchg
sub
inc
bound
ss
cmp
insl
insb
lahf
icebp
add
adc
stos
adc
test
sbb
je
popa
sbb
jecxz
lcall
jp
aas
cmc
add
pop
aad
pop
aad
jmp
inc
push
mov
sbb
mov
mov
shl
mov
mov
arpl
sub
repz
sub
sbbl
mov
xchg
stos
cmpb
repz
rolb
aas
jecxz
movb
add
push
push
jbe
pop
adc
cmp
ja
jl
jg
gs
xor
popa
mov
xchg
jl
js
pop
mov
rol
movsl
call
das
clc
fstl
test
push
insl
add
icebp
pop
jmp
push
or
mov
pop
and
jno
pushf
jg
push
add
push
fs
fidivrs
int
popf
stc
int
mov
sub
test
hlt
int
outsl
xor
lret
sbb
or
mov
cmc
and
in
dec
sub
dec
jns
jecxz
addr16
push
xor
and
sub
adcb
sub
inc
xchg
lret
bound
jge
push
xor
cld
mov
icebp
cmc
int
pop
outsb
sub
aas
in
sub
je
in
nop
xchg
lods
aas
gs
push
add
xchg
xor
mov
push
mov
les
dec
jns
dec
mov
and
outsb
push
test
push
and
cmpsb
inc
mov
out
mov
add
push
and
adc
xchg
add
mull
inc
sbb
cmp
gs
push
add
mov
ljmp
stos
adc
and
pop
jno
aas
outsb
adc
xchg
scas
mov
push
jnp
lahf
cmp
les
xor
test
in
dec
or
gs
leave
lock
and
add
mov
mov
orl
adc
aaa
sbbl
and
pushl
dec
push
scas
int3
mov
sbb
hlt
fdivl
sub
test
xor
pop
xchg
mov
push
cmp
dec
mov
jne
rclb
lret
jno
pop
mov
cmp
add
jo
push
clc
icebp
ret
jns
cmp
xchg
jb
data16
lods
cld
hlt
loope
pop
inc
inc
in
pop
mov
mov
mov
and
enter
sbb
out
and
scas
xchg
fwait
fwait
xlat
sub
push
ss
jge
mov
push
xor
fldcw
cltd
add
sub
sub
into
cmp
or
pop
xchg
push
sub
xchg
pop
mov
push
out
sbb
sub
test
and
jle
enter
aas
cmc
inc
sub
mov
insl
subb
loope
or
cmpsb
ret
inc
pop
adc
es
in
sbb
popf
push
mov
das
mov
add
mov
idivl
ss
notb
outsb
ret
imul
sbb
lret
int
xchg
or
cmp
add
inc
inc
mov
in
xchg
xor
sbb
gs
and
fwait
sbb
imul
imul
aaa
and
pop
mov
pushf
in
mov
divl
popa
or
push
fprem1
pop
inc
xor
push
sub
adc
stc
cwtl
xchg
fisttpl
xorl
loopne
loop
fisttpll
dec
cmp
and
fisubrl
dec
add
mov
into
xor
shll
pushl
and
stos
cwtl
or
push
insl
pop
sbb
jnp
push
xorl
shll
xor
pop
jno
cmp
test
iret
inc
xor
and
insl
mov
cmp
shrl
fcmove
sub
xchg
or
sub
daa
or
iret
and
xchg
xor
into
xchg
das
negl
arpl
add
or
out
xchg
out
xchg
je
add
add
xchg
mov
ss
jge
jmp
and
pop
pusha
mov
out
xchg
pop
jne
cmp
mov
or
fs
xchg
mov
fsub
lret
and
mov
call
popf
cli
and
sbb
sahf
sti
mov
cmp
inc
cmc
mov
cmp
xchg
mov
shll
out
out
test
test
clc
mov
je
mov
jne
dec
cs
lret
test
movl
mov
xchg
sbb
rorb
dec
add
ret
xchg
scas
mov
scas
jne
pop
in
adc
bnd
cmp
or
add
jae
cmpsl
stos
into
dec
jp
push
outsb
enter
bound
push
add
add
int3
fiadds
jp
mov
jo
ljmp
xchg
push
out
adc
xor
sbb
push
movsb
dec
inc
mull
repz
adcl
jl
inc
mov
jecxz
or
ret
xor
dec
add
daa
pop
movsb
les
push
pusha
xchg
xchg
adc
jge
and
or
mov
mov
pop
jb
sub
and
out
push
mov
loop
mov
sub
inc
mov
jl
push
mov
in
inc
sub
adc
inc
xor
push
push
scas
outsb
inc
js
push
stos
neg
xchg
xor
fdivs
fnstcw
lahf
mov
imul
xchg
popf
mov
mov
adc
ja
cs
or
les
mov
jo
dec
inc
jbe
jle
add
fidivrs
and
jns
inc
and
xchg
jmp
sbb
jl
push
xor
int3
push
lcall
xor
mov
xlat
fimull
insb
sbb
and
mov
fwait
jns
aas
fwait
mov
mov
addr16
test
rcrl
mov
inc
ret
mov
and
rclb
cmp
add
hlt
mov
jl
jmp
es
call
mov
repnz
arpl
xchg
dec
cmp
push
int3
icebp
mov
mov
pushf
popf
sarl
lods
inc
repnz
cmpl
sbb
das
push
cwtl
fs
mov
hlt
xchg
cli
jae
aad
insb
insb
mov
xor
xchg
lea
cmp
dec
pop
shrl
ljmp
test
mov
mov
sub
pop
xchg
mov
popa
jg
push
jne
inc
and
std
daa
mov
loopne
jne
sti
lds
xchg
xchg
dec
js
mov
gs
push
mov
cmp
call
mov
movsb
jecxz
mov
mov
test
addr16
cmp
mov
and
lahf
mov
sbbb
ds
lret
jae
cltd
dec
adcb
shlb
pop
push
cmp
push
sbb
and
jle
inc
mov
insb
test
pop
sti
jo
daa
dec
movsb
jmp
jae
and
xlat
push
and
int3
pop
icebp
in
sbb
out
xor
inc
cmpsl
insb
add
sub
dec
into
fwait
into
test
sub
xchg
iret
les
push
xchg
lret
cmc
xor
inc
mov
and
out
or
iret
xor
mov
jo
dec
clc
push
call
push
xchg
fwait
cmpsb
xor
and
les
and
mov
xor
push
outsb
xor
sub
shlb
in
jno
stc
xchg
addl
cmp
out
stos
mov
mov
jo
xchg
mov
test
movsl
loop
rcrb
inc
inc
add
dec
pushf
lds
xor
push
bound
in
xchg
mov
push
add
cmp
mov
xchg
and
mov
xchg
and
repnz
dec
push
in
imul
je
popa
mov
adc
mov
psubb
pop
fistpl
das
fsubr
pop
lahf
imul
sub
push
adc
sub
movl
xor
or
mov
aaa
xchg
mov
std
subb
add
popa
ret
xchg
cmp
mov
mov
mov
imul
sub
mov
xchg
lret
stos
dec
mov
bound
fistl
pop
mov
loop
pop
jo
sub
inc
mov
jne
fnsave
and
repz
add
outsl
jge
dec
adc
test
xor
xor
and
out
outsl
mov
outsl
sub
push
mov
or
mov
int3
adc
pushf
push
ret
add
push
adc
jne
int
dec
fs
inc
or
add
xchg
mov
mov
or
mov
cmp
es
adc
leave
push
xor
clc
pop
xor
xor
cltd
adc
push
mov
push
and
mov
adc
sbb
cld
sbb
scas
in
sbb
add
in
pop
push
add
and
push
add
or
clc
call
in
and
sbb
popf
dec
test
cmp
fisubrl
movsb
push
xchg
jmp
rcl
pop
jno
movsl
or
jno
mov
clc
push
in
mov
dec
mov
xor
or
sbb
movb
leave
jns
mov
adc
aaa
sub
add
fdiv
stos
sti
out
push
push
int3
inc
push
jecxz
or
dec
imul
dec
arpl
jnp
std
shl
mov
loope
push
inc
cmp
dec
or
mov
adc
cmp
insl
mov
addr16
add
movsb
inc
lret
iret
pop
popa
mov
xchg
dec
jne
sti
nop
pop
adc
lds
test
movb
xchg
push
jecxz
cmpsb
xchg
loope
cmpsl
out
xor
cld
and
inc
imul
sbb
push
in
imul
pop
dec
out
adc
cmpsb
adc
shrl
outsl
sub
mov
js
jb
cmp
test
pop
and
mov
cmp
pushf
std
push
dec
push
fnstenv
or
mov
mov
imul
das
jg
jnp
rcll
xorb
mov
lcall
gs
xlat
jo
add
lock
lahf
sbb
bound
add
cmp
jnp
xlat
xor
scas
pushl
inc
jp
jae
xchg
adc
push
pusha
movsl
testl
dec
pop
clc
insb
loope
xor
xchg
push
mov
jbe
add
data16
cmp
xlat
jns
jecxz
lods
cmp
mov
mov
stos
repnz
movsb
lret
bnd
gs
dec
pop
jns
cmc
popf
xcrypt-cbc
cmpsl
adc
cli
sub
shrl
mov
sub
jecxz
fbstp
sti
and
adc
lods
stos
lods
orb
inc
insl
inc
or
or
lcall
inc
ret
xchg
pop
inc
lods
xor
xlat
stc
into
pop
loope
addr16
cmp
fisubs
test
ret
sub
mov
movsl
xor
sub
dec
fs
repz
xchg
insb
lret
dec
xchg
sbb
inc
fs
mov
or
out
mov
or
add
add
cmp
sub
ds
mov
dec
push
jbe
xchg
inc
dec
mov
sbb
fidivs
testb
xchg
mov
gs
in
mov
push
nop
cmp
testb
sahf
lret
jge
dec
mov
mov
xchg
imulb
arpl
xor
popa
mov
jne
out
inc
push
adc
js
movsl
lds
and
imul
std
and
adc
hlt
fnop
mov
movsb
sbb
movsb
adc
rorb
mov
jb
arpl
or
in
xchg
xchg
add
fcmovb
jbe
into
pushf
pop
es
outsb
sbb
test
repnz
js
dec
push
dec
testb
fidivs
xchg
outsb
cmp
mov
adc
and
xchg
xlat
cmp
lcall
mov
repnz
mov
mov
negl
divb
and
pop
test
or
pop
mov
mov
push
shll
popf
mov
push
adc
dec
xor
jmp
mov
divb
stos
jecxz
jne
mov
subb
je
jb
sbb
iret
mov
loope
pop
cmp
mov
dec
and
mov
inc
nop
mov
dec
jnp
sahf
sbb
jbe
jnp
mov
mul
aas
test
xlat
or
cli
pop
test
test
mov
adc
bound
adc
lret
sub
mov
inc
enter
loope
jg
push
push
push
mov
insb
aaa
jno
inc
call
sub
jp
mov
iret
pop
push
cmp
cmp
mov
popf
lock
inc
jecxz
inc
mov
adc
and
cld
push
mov
pop
xchg
inc
enter
dec
fildll
mov
inc
lds
or
adc
lahf
inc
loope
mov
rorl
dec
jb
out
dec
pop
pop
pop
gs
lock
cmpsl
jne
adc
push
mov
dec
push
sarb
in
jnp
push
decb
cmc
arpl
test
cmp
push
jle
iret
sub
ror
mov
call
loop
xchg
jle
mov
les
adc
cmpsl
fmull
add
mov
xor
or
rclb
loope
or
xchg
and
add
sbbl
jp
enter
mul
popf
pop
jo
loopne
call
cmpsl
ret
out
cmp
pusha
out
mov
gs
xor
xor
aad
movsl
faddl
adc
mov
icebp
adc
cmp
popa
inc
or
jnp
imul
shll
xchg
mov
cmp
out
add
insb
sub
int
out
sbb
dec
fisttps
mov
push
stc
push
scas
pop
test
aaa
mov
inc
not
push
repnz
jmp
rolb
pop
insb
data16
outsl
lahf
fwait
mov
jp
jne
cmp
mov
inc
push
add
loop
int3
call
jg
stos
sbb
js
fidivl
jae
mov
inc
xor
test
fdivrl
xor
mov
mov
jne
ret
sbb
sub
cwtl
les
push
lcall
mov
xchg
imul
sti
mov
mov
hlt
pop
add
ljmp
loope
fadds
aas
inc
or
add
sbb
inc
dec
xchg
pop
sbb
ret
xor
cld
mov
cmpsl
mov
les
xor
inc
push
jb
mov
jmp
push
stos
pop
mov
adc
fmull
aaa
xchg
test
and
test
mov
lret
pop
insl
mov
std
pop
jae
fnstsw
inc
movsl
outsl
push
gs
cmp
sbb
shlb
cmp
xor
pop
das
fmul
and
xor
xor
mov
mov
or
cltd
xchg
mov
push
mov
repz
adcl
aaa
xchg
sub
jecxz
cmc
outsb
jmp
nop
movsb
add
cmc
fisttpl
adc
add
insb
mov
movsl
test
xchg
sbb
and
dec
data16
pop
mull
into
jmp
and
fs
cmp
aaa
or
adc
inc
push
xor
adc
sbb
std
lahf
insl
imul
mov
push
lock
pop
jecxz
xchg
or
lahf
pop
cs
mov
sub
in
insb
jecxz
jo
js
loope
inc
int3
dec
roll
ret
arpl
xor
dec
inc
fsubp
add
mov
sub
inc
xchg
sarl
andl
sub
xchg
lret
test
cwtl
mov
dec
les
clc
xor
imul
mov
mov
and
mov
shr
push
add
or
repnz
decb
jp
leave
clc
icebp
push
je
inc
xchg
fcmovb
dec
xchg
inc
out
mov
sahf
push
cli
das
popa
adc
out
loop
bound
lods
nop
xor
lds
dec
arpl
ret
sub
jl
add
mov
out
adc
inc
jo
outsb
jge
cmp
icebp
fsubl
dec
cmpsb
stos
lahf
mov
cltd
xchg
je
or
mov
dec
bound
pop
jo
shrb
inc
sbbl
repz
push
shll
sbb
out
daa
sub
hlt
out
xor
xchg
mov
jmp
sub
dec
inc
in
rorl
bound
in
fsubrs
mov
mov
push
sbb
ds
add
push
out
push
fdiv
mov
out
dec
shll
pop
xchg
mov
mov
inc
cwtl
add
mov
push
loopne
and
out
adc
mov
sahf
jle
mov
adc
sub
int
jge
cmpsl
mov
outsl
cmp
cmp
loope
lods
cmp
or
cltd
std
roll
cmp
sahf
or
mov
dec
rolb
in
fsubrs
mov
pop
pusha
das
xchg
and
pop
ds
and
movsb
jmp
jne
sbb
mov
push
mov
mov
or
sbb
ljmp
xor
mov
jp
insl
cwtl
pusha
inc
cmp
add
inc
fdivs
adcl
cmpb
lahf
or
mov
ficompl
pop
nop
push
xchg
cmp
bound
jl
xchg
mov
fadd
xchg
call
lods
leave
xchg
jo
cmp
xchg
sbb
enter
sub
cwtl
in
add
lcall
sarl
mov
out
lahf
scas
test
fs
cmp
leave
push
xchg
lods
lahf
clc
jg
ret
nop
xchg
rcll
imul
jae
sahf
push
mov
or
aad
inc
mov
rcrl
js
ss
pushf
pop
into
and
push
xchg
add
cmp
loope
mov
xchg
cmp
or
mov
xor
push
mov
mov
and
pop
in
jge
sarl
or
xchg
std
jecxz
arpl
call
imul
or
push
lods
xchg
jmp
outsl
sahf
mov
inc
jl
mov
add
shlb
add
cltd
data16
mov
decb
dec
cli
inc
sti
imul
hlt
cmp
jl
pop
and
lods
mov
mov
outsb
jge
jecxz
mov
popf
pop
sbb
in
aas
mov
adc
jp
add
mov
js,pt
cld
bound
aam
xor
pop
or
cmpsb
xchg
stos
roll
mov
out
jp
and
dec
js
inc
push
in
adc
pop
rorb
xchg
negb
mov
jg
shr
mov
js
lods
sub
loop
push
push
cmpsb
aad
stos
sub
enter
popf
mov
in
lcall
inc
out
mov
cmp
enter
push
scas
mov
in
xchg
ret
push
notl
cs
jnp
test
stc
jb
movsb
loope
mov
cmp
mov
ss
sarb
xchg
push
js
out
jae
and
fs
add
sbb
jb
aad
int3
adc
pop
pop
sbb
cmpsl
sarl
cmc
push
aaa
je
push
mov
inc
data16
xchg
in
xor
fimuls
cmp
aas
lea
repnz
ljmp
addr16
testl
push
pusha
inc
push
pop
out
cmpsl
xchg
xor
and
bound
loopne
pop
inc
push
and
cmc
sbb
addr16
outsb
fcompl
push
ss
in
cmpsb
mov
es
dec
fwait
in
or
aam
sbb
mov
ds
pop
nop
jno
leave
or
adc
stc
sar
dec
xchg
aad
aad
les
mov
aad
inc
jae
iret
add
stos
mov
fwait
pop
ret
sub
testl
mov
ss
inc
fidivl
aam
gs
aaa
pop
std
and
movsl
jne
fsubr
dec
das
sub
pop
xor
gs
adc
inc
and
les
ss
fsubrl
fsubrl
loopne
push
or
mov
push
test
cs
push
int3
fists
cmp
sbb
sbb
push
sub
or
cmp
xor
rorb
add
push
out
dec
push
movb
sub
aas
xchg
and
jge
mov
mov
pop
imul
test
mov
xorl
jno
outsb
xor
mov
add
repz
jle
mov
fwait
aas
mov
jmp
inc
push
mov
mov
pusha
jne
out
inc
dec
or
sub
jge
add
mov
in
mov
jecxz
mov
sub
xorb
rcrl
and
cltd
lcall
int3
testb
iret
mov
mov
movsb
cmpb
das
or
sbb
fsts
adc
rol
and
js
in
fsts
data16
pop
in
in
sub
adc
xchg
imul
cmpsl
add
adc
out
out
scas
popf
sub
or
push
inc
out
pop
adc
sbbl
and
call
mov
fisubrs
addr16
or
adc
sub
icebp
push
xor
testb
subl
add
pushf
jp
movsb
or
xchg
jnp
adc
jne
mov
pushf
in
sub
icebp
xchg
mov
out
inc
jns
cmpsl
repnz
xchg
fmuls
mov
xchg
push
mov
dec
or
mov
fistps
inc
xchg
push
sti
popa
movsl
adc
mov
imul
loope
test
shll
repz
addb
or
xchg
dec
ds
inc
jmp
mov
rcl
lcall
fisttps
adc
leave
xor
xchg
xchg
mov
clc
jmp
inc
out
xchg
dec
test
hlt
pop
mov
push
sub
jle
ja
cltd
inc
insl
or
nop
adc
pop
mov
inc
loopne
addr16
addr16
add
pop
xlat
mov
cwtl
push
push
xor
cmp
sbb
jmp
add
mov
sub
add
cld
push
mov
push
ja
gs
jnp
clc
aaa
mov
in
sti
mov
xchg
pop
cltd
bound
sbbl
inc
imul
xor
lds
mov
std
mov
adc
and
imul
mov
inc
in
inc
repnz
sahf
aad
fistpll
dec
int
pop
sub
test
inc
push
and
or
dec
fstl
cmp
scas
movsb
jb
mov
sub
or
mov
mov
gs
dec
notb
cmp
daa
lret
mov
sbb
rorb
sbb
mov
jae
pusha
sti
mov
jb
pushf
sbb
mov
lock
xor
lds
cld
fistl
shll
push
loopne
bound
add
adc
mov
and
lret
xchg
and
daa
sbb
out
mov
fwait
daa
mov
pop
and
fldenv
int3
int3
iret
cmp
data16
aas
inc
and
aad
lods
mov
out
fldcw
sarb
jo
xor
push
decb
in
sarb
inc
clc
cmp
stos
int3
outsl
es
mov
hlt
inc
mov
pop
clc
or
or
mov
mov
mov
sbb
adcl
std
sbb
jne
sub
out
in
daa
test
ja
xchg
xor
bound
in
idiv
add
scas
out
cmovs
and
in
add
andl
inc
pusha
cmpsl
cmp
jmp
inc
es
cmp
dec
add
loope
sub
xchg
or
cmp
jl
call
sub
xchg
fst
icebp
pop
and
test
xlat
sbb
dec
push
mov
pop
imulb
je
popa
popa
inc
mov
bnd
sbb
xor
cmpsb
ficomps
add
lods
push
jl
pop
cmp
sbb
scas
sahf
cmc
mov
fwait
lock
popf
or
sbb
xor
ret
jl
enter
les
xchg
ljmp
xchg
sub
push
out
outsl
outsb
aam
popa
sub
sbb
mov
sbb
inc
inc
and
or
imul
ja
fisttpll
fwait
push
inc
mov
mov
or
and
into
pop
scas
push
cmp
push
pop
cmp
xchg
mov
mov
push
jnp
cmpsb
fldt
addr16
xorl
out
jbe
mov
into
outsl
mov
aad
cmpsb
ss
insl
sub
push
xor
fmuls
add
sbb
out
inc
scas
or
in
pop
jns
jnp
and
mov
das
fcompl
sub
sarl
mov
outsl
mov
mov
jne
jge
inc
sbb
cwtl
adc
cmp
push
dec
scas
push
movsb
inc
push
xchg
in
inc
xchg
jmp
and
aaa
mov
inc
arpl
xchg
fstps
insl
es
sbb
lock
cmp
jmp
pop
push
adc
and
test
push
sbb
aas
or
stc
adc
lock
pop
adc
cs
test
pop
mov
xor
pop
cli
jae
cmp
push
fs
pusha
mov
sub
scas
xchg
or
mov
movsb
ds
push
arpl
pop
mov
popa
xor
push
cli
js
scas
stc
pop
fbld
adc
iret
shll
sbbb
mov
cmp
cmp
dec
jmp
sarb
aad
and
addr16
sub
sti
push
mov
fwait
jecxz
mov
xor
je
and
addr16
icebp
ret
inc
jns
jbe
test
stos
addb
test
shrl
out
movsb
pop
lods
and
mov
lahf
mov
xchg
jge,pt
lahf
or
mov
cmp
ret
sub
rorb
aaa
sbb
sbb
inc
push
movsb
mov
aam
andl
pushw
out
sbb
dec
pop
out
pop
mov
fnstenv
mov
mov
mov
out
add
mov
icebp
jae
adcb
divb
test
mov
ficoms
xchg
xor
repnz
lea
mov
pop
not
add
sbb
fildl
sbb
xor
ficoms
or
std
fldcw
loopne
aas
mov
outsl
jge
stos
outsl
rol
pop
mov
dec
sti
clc
mov
es
vpor
loopne
mov
push
cmp
xchg
mov
xchg
dec
sbb
jecxz
pop
lret
stos
fwait
add
pop
mov
jle
lret
adc
fwait
mov
xchg
ss
std
test
mov
stc
jne
addb
mov
sub
mov
pop
sub
fstpl
sub
loope
jmp
jno
xor
push
scas
stos
jne
jno
rcrl
add
add
push
aam
dec
outsl
jecxz
jb
lret
out
and
and
cs
stos
jg
sbb
fadds
xor
scas
xchg
int
je
stos
in
outsl
ret
ror
jno
adc
pop
sbb
push
sub
dec
aam
inc
int3
lahf
cmp
ljmp
aaa
fisubrl
lret
adc
mov
std
fsts
notb
stos
sbb
imul
daa
jnp
mov
pop
mov
xchg
out
jae
mov
dec
out
lahf
cmp
add
mov
cmp
inc
in
scas
int3
into
sub
xchg
aad
pop
inc
xor
in
pop
sbb
scas
icebp
repz
dec
jl
adc
js
lea
mov
test
dec
sbb
scas
adc
and
xor
pop
dec
push
inc
mov
or
xchg
mov
das
jnp
or
mov
bound
dec
push
mov
jp
ds
sbb
jmp
dec
ret
sbb
notl
lret
push
mov
stc
in
push
sub
mov
jns
mov
jmp
repnz
xor
and
mov
scas
sub
test
adc
test
mov
mov
jae
mov
cmp
add
push
pop
out
push
out
pop
adc
xchg
test
add
aad
push
jl
outsl
sbb
cmp
push
cli
adc
fisubrl
dec
sub
rcll
fcmovb
push
hlt
lahf
mov
pusha
xchg
lea
mov
jno
jmp
ret
das
push
lret
ja
mov
or
cwtl
and
mov
inc
fcomps
sub
xchg
icebp
fadd
cld
lret
cmp
mov
mov
adc
dec
and
insb
ss
pop
insb
xchg
xchg
imul
xchg
cmp
push
xchg
and
xor
and
sbb
and
add
xchg
mov
mov
nop
xor
fmull
bound
cwtl
pop
or
xchg
mov
mov
aam
lock
mov
data16
dec
movsb
test
jmp
stos
cmp
or
fs
lock
adc
sbb
and
gs
pushf
push
or
outsb
cwtl
adc
pusha
mov
push
pop
xchg
mov
js
inc
movsl
adc
and
push
stc
and
inc
push
test
popl
sbb
push
jmp
mov
in
xor
inc
fisttpl
mov
or
mov
push
ret
and
nop
out
mov
mov
fs
xor
jle
in
inc
jns
jnp
inc
push
inc
cmp
sub
lcall
lea
mov
js
aam
dec
dec
add
inc
mov
xor
test
ret
arpl
mov
mov
mov
mov
xchg
jno
push
mov
ds
mov
in
out
sub
push
repnz
enter
mov
imul
sub
out
imull
cmp
lret
mov
dec
jno
mov
outsl
ss
std
dec
scas
adc
cld
push
aaa
jne
pushf
sub
or
pop
std
adc
pop
sbb
xchg
popf
fidivrs
in
inc
jg
decb
ret
push
cwtl
out
ljmp
rolb
sub
jno
iret
ret
pop
scas
repnz
insl
adc
cmpsl
pop
loope
sbb
shl
jge
add
scas
rcl
ss
inc
das
pop
cwtl
iret
sub
push
outsl
call
inc
loopne
bound
idivl
es
mov
test
push
loop
adc
out
cld
add
pop
in
stc
add
negb
in
dec
xor
or
enter
iret
fiaddl
shrl
data16
mov
popf
push
cmp
out
adc
xor
push
loop
pop
inc
dec
and
iret
sub
hlt
jp
mov
lea
pusha
fmull
and
aas
jp
mov
mov
lcall
inc
hlt
or
pop
dec
outsb
dec
ret
mov
ret
std
push
adc
je
jo
push
cltd
ljmp
mov
jo
pop
add
stc
stc
pushf
ljmp
out
cwtl
sbb
fcompl
sbb
call
nop
rcrb
adc
loope
pop
jg
xchg
je
jmp
pslld
fisubrs
and
push
movsb
adc
cwtl
mov
or
stos
cmp
mov
mov
outsl
and
mov
test
test
ss
adc
adc
and
or
testb
xchg
adc
and
mov
xchg
mov
imull
hlt
push
push
add
xchg
loop
adc
lcall
popf
iret
mov
pop
jge
ljmp
mov
mov
sub
bound
and
mov
adc
inc
jmp
idivl
hlt
jp
inc
sarl
inc
loop
and
decl
inc
pop
sub
and
sub
cmp
adc
hlt
sbb
aaa
inc
cli
mov
ds
test
arpl
sub
andl
sub
pop
loope
imul
mov
and
push
mov
inc
sbb
mov
repz
ja
scas
mov
mov
ss
push
inc
sahf
scas
jg
jmp
dec
cmp
xor
pushf
adc
sub
inc
mov
negl
repz
pop
xor
ss
sbb
xchg
add
aaa
jmp
inc
pushf
leave
adcb
mov
xchg
mov
push
rolb
xchg
push
arpl
test
mov
jbe
shll
pop
das
aad
pop
out
fwait
imull
pushf
into
pop
sahf
jl
std
add
rclb
mov
shrl
dec
mov
xchg
push
pop
jmp
dec
lods
adc
sbb
dec
ss
adc
loope
push
dec
and
lock
cmpsl
nop
mov
add
dec
fwait
daa
cmp
cltd
xchg
xlat
xchg
cmc
daa
sub
xchg
movsb
mov
push
mov
adc
inc
pop
inc
dec
cmp
mov
adc
arpl
push
pop
test
xchg
lods
push
add
popa
iret
icebp
jge
test
mov
add
scas
mov
pop
or
ljmp
adc
push
les
roll
test
cmp
push
jnp
push
test
out
test
xor
dec
shrl
adc
imul
jecxz
jecxz
xor
testb
pop
icebp
data16
lret
mov
xor
cwtl
leave
xchg
inc
inc
lahf
bound
sub
ljmp
add
ljmp
icebp
loope
and
call
popa
into
push
insl
cltd
mov
lret
mov
mov
add
fcoml
int3
mov
or
push
clc
mov
fs
pop
test
sub
jmp
inc
add
popa
ret
jo
mov
mov
sarl
das
push
lcall
stos
imul
cld
jle
mov
gs
sub
sub
add
fbld
mov
mov
call
into
fldl
insl
jg
jp
lds
lret
pusha
fwait
add
or
dec
std
nop
insl
cmpsb
cmpsb
or
and
xor
sub
loope
inc
js
xchg
jae
cmp
lock
iret
aaa
daa
in
rcrb
int3
dec
cld
mov
push
dec
fldcw
insb
hlt
cmp
sti
imul
fistpll
shrl
or
sub
add
sahf
lret
fwait
sar
sub
jnp
jmp
pushw
aam
sahf
xchg
ja
push
pushf
into
mov
and
cmp
or
lret
mov
addr16
inc
idivb
lret
outsb
out
and
loope
outsl
mov
sbb
lret
lar
push
inc
int3
mov
dec
ds
and
xchg
xor
pushf
imul
fnstenv
sub
aam
stc
mov
adc
mov
das
outsl
bnd
sbb
push
adcb
pushf
xchg
pop
lods
sbb
adc
icebp
fisttps
xchg
sbb
cmpsl
pop
ss
push
jae
andb
and
std
mov
insl
jae
mov
cli
idivb
jecxz
dec
pop
mov
push
ljmp
stc
outsb
fwait
push
adc
pop
aas
test
sti
mov
sbb
add
add
jg
in
sarb
cmp
or
lret
cmp
aam
cmp
mov
push
punpckldq
int3
sti
sub
add
loope
jp
addl
inc
shrl
jns
mov
or
filds
and
add
cwtl
ret
sbb
es
clc
dec
int
test
jbe
push
loope
push
mov
cmp
lods
or
jmp
xor
out
inc
and
or
xor
add
jnp
nop
jno
mov
jecxz
xchg
into
adc
stos
je,pn
sub
pop
cwtl
nop
aas
imull
das
idivb
insl
imul
fists
pop
repz
and
jo
std
sub
scas
xlat
aaa
mov
cmp
pop
int
fucomi
movsb
sbb
dec
xor
mov
mov
xchg
pop
mov
add
xchg
gs
subb
pop
daa
mov
movsl
dec
push
sub
or
cmp
insl
xchg
rclb
mov
pop
hlt
imul
dec
movsl
aad
sbb
mov
mov
es
sbb
mov
mov
insl
push
scas
jne
inc
adc
arpl
les
data16
loopne
push
roll
cld
outsl
or
dec
mov
adc
lea
sbb
mov
outsb
sar
out
add
clc
add
pop
add
adc
push
jno
sub
xor
mov
imul
ret
jl
addr16
pop
jg
push
xchg
test
xor
pop
add
daa
es
fldcw
out
push
outsb
sbb
pop
pop
lahf
push
xor
cmp
outsb
rclb
xor
int
dec
scas
movsb
adcl
pop
stos
xor
mov
lret
cmpsb
push
xchg
out
jl
fscale
in
mov
imul
adc
sbb
mov
add
clc
xchg
mov
add
test
dec
clc
xor
sub
int
leave
out
xchg
xor
mov
mov
add
xchg
push
xlat
cs
and
pushf
sbb
in
inc
hlt
sub
pop
or
shrl
pop
adc
xchg
roll
call
sub
xchg
xlat
cmp
loop
leave
clc
xor
sbb
add
cmp
cmpsb
jns
int3
pop
inc
bound
mov
sbb
std
mov
dec
into
fxch
shll
jne
fwait
popf
setne
push
cmpsb
lods
scas
data16
dec
call
jae
fcompl
sbb
roll
fdivl
lahf
aam
inc
push
gs
mov
sub
dec
stos
mov
arpl
push
bound
xchg
mov
push
mov
outsb
push
orps
adc
aaa
das
adc
imul
loop
sti
mov
loope
inc
ja
ret
stc
arpl
mov
pop
jo
sbb
bound
fstps
rcll
pop
jl
ss
sbb
dec
data16
gs
insb
pop
mov
cmp
xlat
pop
dec
outsb
aas
jbe
fwait
leave
ja
inc
push
cs
mov
push
repz
inc
pushf
sbb
pop
fwait
stc
push
aam
test
sbb
adc
push
mov
sbb
aas
xchg
shl
loope
jns
mov
ret
addr16
mov
cmp
mov
add
roll
mov
jno
adc
in
push
ja
sbb
pop
popf
enter
pop
imul
mov
or
test
stc
jns
add
pop
pop
cltd
mov
shll
push
mov
lods
sbb
mov
jo
or
xchg
push
cmp
aad
shl
jae
inc
jns
mov
imul
movsl
aam
scas
stos
mov
sbb
inc
jg
addl
nop
mov
lret
addl
out
jg
fiadds
lds
inc
sub
ljmp
das
data16
cmp
stos
ret
test
mov
cmpsb
lret
icebp
or
dec
leave
cmp
into
jle
xchg
out
jbe
add
pop
adc
push
push
clc
hlt
and
or
or
sbb
aaa
sahf
adc
insl
fstl
xor
pop
aam
ret
arpl
lods
push
test
lock
and
jecxz
leave
loope
mov
cwtl
addl
bound
int3
push
ficoms
outsb
in
push
inc
cmp
sbb
in
scas
jo
sub
mov
imul
xchg
sti
sarb
and
push
cmp
cs
frstor
xor
and
loop
mov
lcall
fsubl
dec
mov
out
cli
jns
cmp
dec
pop
mov
mov
xchg
xchg
imul
pop
dec
cli
into
testl
inc
test
cmp
adc
cmp
mov
lret
mov
mov
xchg
xlat
pop
ja
xchg
inc
aad
and
fwait
mov
movsb
and
cs
xchg
jg
shr
inc
aad
cmp
push
arpl
jmp
jbe
push
sbb
mov
orb
xor
cmp
stc
movsl
dec
dec
repz
jo
adc
les
jecxz
jne
push
fsubs
mov
dec
sub
lock
or
inc
adc
xchg
or
test
js
out
mov
jmp
lods
ljmp
loope
rol
movb
sub
xor
fucomip
call
in
jb
mov
jp
jmp
sbb
mov
sahf
lods
adc
push
cmpsb
aaa
outsb
clc
pop
outsb
mov
jo
push
jbe
jo
push
test
add
cld
jge
xchg
notl
xor
sub
or
inc
lock
xchg
ret
sbb
pop
rolb
or
jecxz
adc
jmp
dec
and
push
add
loopne
xchg
mov
xchg
sub
popf
inc
sbb
aad
xchg
cmp
pop
fisubl
in
cli
jmp
popf
stos
inc
decl
push
call
std
aas
pop
and
mov
add
adc
pop
sub
es
xchg
ror
push
aad
and
mov
lcall
xor
push
leave
lret
adc
or
ret
in
int
mov
jp
sarl
lock
and
xor
mov
and
ret
adc
pop
ja
sbb
test
imul
stc
sbb
mov
mov
fsubrp
stc
pop
pop
jb
out
dec
mov
mov
jmp
jge
xor
mov
mov
test
mov
add
mov
mov
cwtl
xchg
add
cmp
inc
mov
bound
dec
mov
test
popa
es
subl
adc
addr16
sbb
cs
arpl
pop
push
cs
push
xchg
loope
push
js
mov
xchg
imul
addr16
and
xchg
mov
add
sbb
into
ret
lds
repz
push
push
pop
or
adc
sti
push
popa
pop
push
cmpsl
out
pop
inc
stos
and
jl
push
pop
xchg
lahf
jno
rol
imul
sbb
cld
mov
in
call
push
push
xchg
mul
mov
popa
call
xchg
test
sbb
pop
lods
addl
or
sti
mov
pop
popa
mov
dec
ljmp
jae
call
adc
push
mov
divb
scas
cmc
outsb
stos
mov
jmp
shrb
pop
pop
adc
mov
in
cwtl
daa
out
test
mov
in
fadd
call
adc
cmp
rdtsc
jnp
and
negb
es
lahf
lret
or
dec
aam
lahf
xlat
repnz
aad
jl
cmp
ret
dec
cmpl
adc
adcb
xchg
mov
ljmp
ds
popa
jge
js
cmp
shll
cmpl
into
outsl
insb
adc
loope
xor
lock
cmpsb
mov
or
mov
arpl
xor
mov
insb
jge
fsubr
movsl
mov
adc
cmpsl
push
push
popf
and
aaa
sbb
mov
xchg
mov
imul
or
cli
ficoms
mov
lods
add
shl
ret
jl
inc
sbb
jl
aaa
jecxz
shl
popf
imul
push
adc
xor
call
in
push
ret
fimull
xor
cmp
out
test
cmpsb
mov
int3
data16
pop
cmp
jae
or
adc
cld
mov
lret
fisttpl
push
or
test
insb
cmp
test
mov
or
cmovnp
arpl
pusha
xchg
cmp
mov
lds
out
cli
cld
test
enter
lods
dec
cmp
out
xchg
xor
fprem
ret
pop
std
sti
push
push
notb
xor
sub
movsb
fcomps
sub
stos
push
das
pop
in
pop
jns
jae
mov
inc
or
lret
shrb
dec
repz
sub
outsb
test
outsl
pop
pop
aam
sub
push
repz
pushf
lods
push
sahf
int
arpl
push
dec
inc
popf
shlb
xlat
loop
test
imull
push
cmc
adc
mov
add
and
mov
pop
mov
out
out
fcoml
xchg
rcl
sub
cmc
or
icebp
xchg
dec
imull
insb
dec
ret
nopl
pop
mov
pop
fiaddl
outsb
inc
popa
mov
push
xor
fcompl
and
or
clc
and
jne
mov
repz
mov
fiaddl
scas
clc
pop
shll
pop
push
inc
testl
es
push
and
roll
bound
mov
and
pusha
or
stos
enter
mov
adcb
cmpsl
cmp
insb
enter
pop
push
mov
fstps
sub
movb
xor
mov
xchg
lea
ret
rorb
out
daa
cld
out
push
popa
or
or
pop
mov
and
lea
adc
scas
lea
ss
movsb
in
inc
in
and
xlat
movsl
lods
fiadds
xlat
in
cltd
push
adc
push
addr16
mov
sub
inc
or
dec
jg
fldl2e
dec
movsl
imul
loop
int
pop
and
pop
ja
pop
push
mov
cwtl
sarl
insb
mov
mov
hlt
xchg
adc
scas
inc
jne
outsl
test
pusha
cs
jbe
fadds
add
add
out
mov
xor
imul
pushf
pop
aad
and
xorb
pop
add
call
out
shl
into
mov
mov
sub
push
int
icebp
lret
sbb
lea
mov
jno
jl
loope
repz
orb
mov
lcall
fidivs
outsl
mov
das
aad
xchg
lcall
cli
sbb
sub
cld
int3
in
mov
mov
les
cmpsl
bswap
outsb
mov
aaa
mov
lahf
adc
and
xchg
jno
push
jnp
clc
inc
popa
pop
rcll
xchg
sub
mov
push
sbb
lds
enter
jb
add
sbb
je
sbb
flds
add
sub
cmp
jge
jno
pop
pusha
mov
call
or
and
jno
add
jbe
in
inc
jle
test
cmc
fbstp
and
cmp
test
push
jecxz
es
jns
andb
rcll
inc
ds
sbb
jo
push
push
sbb
fdivs
jo
pop
imul
or
xor
popa
adc
icebp
cmp
xchg
and
outsb
enter
xlat
mov
pop
mov
jo
lahf
jnp
imul
inc
cltd
insl
les
sub
xchg
test
js
sub
pop
dec
stos
fisubl
xor
and
xor
fldl
mov
adc
movsl
xor
mov
xchg
inc
dec
inc
in
lahf
adc
das
rorb
dec
jge
lock
rcl
sbb
xor
pushf
dec
ficoms
mov
push
fisubrl
xor
jl
pop
xchg
xchg
mov
ljmp
out
jg
fisubs
inc
subb
cmp
mov
pop
inc
add
jno
ret
int
xor
add
push
in
sub
sbb
sub
mov
pop
int3
and
jle
mov
sbb
cmp
mov
je
shll
jns
insl
mov
inc
inc
imul
cmc
int
xchg
mov
gs
unpckhps
and
cmp
push
add
add
cmp
xor
xor
mov
sbb
and
mov
enter
out
test
jo
faddl
mov
xchg
or
mov
cmp
ret
mov
jge
idivb
mov
mov
xchg
mov
sbb
pop
mov
mov
jge
sbb
enter
sub
jbe
movsb
subl
bound
outsb
nop
fstl
loope
cmp
push
lahf
xchg
mov
sbb
xchg
in
and
mov
add
pusha
in
cltd
cmc
and
jb
mov
data16
xchg
nop
mov
xchg
test
add
xchg
mov
enter
adc
imul
gs
das
adc
inc
and
pushf
repz
insl
jae
sbb
test
bound
bound
pop
jl
and
mov
or
mov
xchg
xor
xor
cli
jnp
aad
xor
mov
jnp
push
das
pop
rcrb
std
mov
fildll
sbb
mov
jb
mov
aam
fwait
pusha
stos
and
and
imul
push
shlb
xor
fwait
inc
out
jno
ret
mov
fucomi
fistps
rcl
mov
neg
jno
imul
in
dec
pop
and
iret
adc
aaa
int3
pop
pop
int
pop
mov
stc
xchg
mov
mov
cmp
sub
cwtl
pop
es
inc
mov
pop
pop
call
pusha
in
call
aas
or
repz
push
push
pop
insb
mov
lea
xor
push
stos
cltd
fsts
mov
mov
loopne
rorl
je
test
clc
das
ret
inc
testl
push
out
jnp
fwait
jae
ja
jecxz
dec
lret
push
jb
jmp
cltd
or
xor
mov
hlt
mov
mov
lea
movb
mov
pop
into
pop
mov
enter
shr
pusha
add
inc
inc
xchg
mov
outsb
movsb
sbb
lds
mov
push
mov
arpl
enter
push
fwait
ret
andl
pop
jg
sbb
mov
mov
mov
jbe
adc
pop
lods
in
jp
hlt
stos
lods
loopne
lcall
sub
jbe
add
dec
xchg
rolb
out
loope
mov
iret
fptan
movsl
sti
int3
repnz
xor
loope
jge
sub
fdivs
sub
cld
xchg
aam
movsl
movsl
nop
xor
mov
xor
and
pandn
lds
mov
fstps
and
leave
jmp
inc
pusha
push
pop
mov
sub
lds
pop
lods
in
add
and
inc
adc
mov
push
int
adc
push
cmp
mov
push
pop
loope
fnstcw
scas
xor
and
mov
xor
sub
punpckhbw
jl
lahf
test
out
pop
mov
sub
sbb
adc
rcl
push
addl
jbe,pn
cmp
pushf
push
shlb
xchg
mov
js
dec
out
or
lods
cld
pop
outsl
push
lret
pop
cld
add
out
jno
lds
js
repz
leave
repnz
xchg
mov
sub
ja
sub
aaa
sti
out
lods
popf
int
jmp
int
mov
repnz
add
cwtl
das
repnz
mov
push
mov
std
dec
sub
stos
popf
and
pop
fdiv
sub
dec
inc
test
iret
push
test
pop
in
loopne
orl
inc
pop
shll
mov
sar
repz
ret
subb
push
and
mov
adc
mov
pop
sahf
push
pop
in
testb
fmull
push
xchg
or
jl
or
or
pop
xchg
decl
mov
fs
sub
imul
ss
mov
pop
inc
and
or
std
inc
jg
adc
outsb
cmp
divb
sahf
dec
sub
idivl
unpcklps
sub
jne
pop
pusha
xchg
mov
cmpsl
cli
push
xchg
jl
aad
repnz
and
pop
sahf
push
in
nop
std
jge
jmp
inc
sub
aad
mov
mov
sbbb
mov
sti
aas
sbb
pop
dec
push
aad
push
repz
scas
xchg
sbb
mov
mov
popa
insb
lcall
add
sbbl
inc
sub
nop
mov
ja
dec
mov
lcall
mov
jp
add
rclb
insb
jno
test
jnp
stos
pusha
bound
mov
mov
inc
dec
sub
ss
subb
jne
push
mov
and
xchg
and
leave
jg
cmp
sub
pop
pusha
jge
push
popf
sbb
adc
pushf
pop
push
insb
jne
push
sbb
and
notl
adc
push
pop
inc
outsb
xchg
jle
xor
sub
jl
jge
leave
xor
sub
mov
nop
xchg
outsl
loopne
jp
sub
movsl
ljmp
mov
sub
mov
mov
outsl
loope
push
aaa
movsl
jle
dec
push
jns
sbb
fisttps
subb
cwtl
xlat
aam
lea
idiv
jns
rcl
daa
mov
mov
and
pop
cmp
xor
xchg
int3
outsb
jnp
clc
xor
test
mov
mov
cltd
in
ret
dec
movsb
into
jle
jo
push
cmp
ljmp
lds
mov
ljmp
sbb
mov
loope
call
add
pop
fldt
fwait
gs
call
cmp
dec
loope
cmc
bound
jne
loope
mov
mov
mov
pop
xchg
stos
not
cmpsl
mov
push
fwait
adc
aad
into
arpl
dec
dec
jl
icebp
jge
sti
add
mov
imul
sub
js
data16
push
sbb
outsl
pop
bound
mov
pop
jp
xchg
and
int
xchg
shrb
popl
and
jmp
test
and
sub
cmpsl
xor
je
sub
incb
push
or
clc
icebp
cmp
ja
iret
fcoms
mov
mov
cmp
dec
mov
jle
add
push
adc
pop
add
sub
in
add
adc
add
mov
mov
das
push
pop
roll
out
push
push
gs
xorl
sbb
aam
mov
jg
enter
dec
cmpsb
xchg
mov
mov
dec
out
aas
popf
loope
arpl
sub
mov
inc
push
outsl
popf
dec
sbb
in
fiaddl
pop
ret
bound
lock
push
in
lahf
and
sbbb
cltd
push
xchg
inc
xchg
aaa
sub
add
xchg
in
and
mov
fiadds
stos
cmpsl
xor
loope
fidivl
push
outsl
ja
imul
dec
and
pop
push
sub
rcll
aaa
adc
adc
pushf
rorl
mov
sub
nop
or
sbb
cmc
lds
les
inc
mov
jnp
bndldx
push
testb
mov
push
xchg
iret
aam
mov
std
leave
aad
pop
fcoml
or
pop
adc
adc
jnp
push
mov
arpl
and
dec
mov
cmpsb
into
inc
lahf
xor
mov
daa
out
fimuls
mov
arpl
mov
clc
mov
pop
fucomi
sub
call
in
imul
mov
inc
dec
sub
out
xor
or
xchg
and
sub
jns
dec
aam
rorl
mov
in
je
fldl
pop
clc
outsl
aas
insb
out
test
push
lea
mov
pop
arpl
aaa
les
add
mov
int3
aaa
or
mov
inc
push
sahf
lret
xchg
push
in
lahf
fwait
icebp
pusha
sbb
movsl
xor
cmp
ja,pn
rcll
inc
rorl
dec
sbb
push
popf
outsl
jecxz
xchg
cld
movsl
pop
ficoml
out
push
sbb
sbb
cmp
mov
dec
mov
jle
test
add
xchg
and
arpl
dec
stc
out
dec
sbb
fsubrl
out
inc
sub
lahf
inc
pop
cltd
mov
adc
inc
inc
jg
lods
xor
and
stos
mov
cld
aad
mov
stos
lds
cmp
repnz
adc
adc
lock
cmpl
mov
dec
out
xchg
addl
mov
cmc
lcall
add
jae
ret
fldt
je
cwtl
xor
mov
or
lods
repnz
inc
ja
sub
out
xor
push
push
lods
add
pop
add
dec
fwait
sbb
xor
loope
popf
pop
push
pop
sub
jno
adc
xchg
hlt
cmp
cmp
dec
sub
cmp
xchg
jo
sub
dec
aaa
jmp
or
mov
mov
and
add
movsb
out
jbe
iret
out
cwtl
sbb
sti
pop
sub
mov
iret
sbb
lods
xor
xchg
dec
ret
sbb
xchg
out
push
notl
dec
push
add
jl
fldenv
dec
jne
push
inc
rcrl
push
fwait
adc
and
pop
jmp
imul
out
xchg
push
stos
stos
cli
rcrl
and
lock
mov
inc
inc
out
adc
and
psrld
loopne
pop
pop
mov
xchg
push
pusha
xchg
xchg
lret
shrl
loope
repz
mov
lcall
dec
cmp
jnp
arpl
in
sbb
jne
inc
push
jge
adc
movsb
mov
jbe
push
push
xchg
lahf
pop
in
sbb
test
sub
xorb
push
sbb
xchg
or
mov
int3
jecxz
cltd
fisttpll
pusha
data16
lds
or
fucomi
popl
in
paddq
mov
jnp
jbe
pushf
adc
je
xor
xchg
out
inc
and
sti
xchg
fimull
add
inc
xor
iret
sub
out
inc
mov
pop
hlt
or
inc
jae
add
je
decb
fwait
mov
int
ret
stc
ds
sub
add
jae
mov
cmpl
fwait
lods
xchg
or
cmpb
push
push
jae
push
hlt
lods
test
outsb
jbe
test
xor
push
cmpb
movsb
faddl
mov
loop
aam
test
lods
in
mov
ljmp
inc
push
in
mov
mov
mov
fnstenv
scas
lret
or
sub
adcb
adc
fistpl
add
sbb
mov
dec
pusha
dec
mov
jmp
lock
push
stc
out
xor
stos
stc
inc
and
add
loop
cmc
adcl
sbb
ret
sbb
jl
into
inc
and
adc
insb
popa
int3
or
dec
pop
xor
dec
mov
xchg
out
sarl
mov
mov
loopne
aaa
xor
loop
int3
in
or
pusha
pushf
sbbb
inc
es
or
xchg
cld
mov
inc
jle
movb
xchg
xchg
lcall
int
dec
insb
arpl
mov
bound
mov
iret
aam
lods
cmp
dec
jno
sub
xor
ljmp
push
sbb
mov
imul
adc
pop
mov
mov
mov
int
out
inc
outsb
sbb
mov
lods
pushf
mov
push
cmpl
adc
test
inc
add
lret
cmp
or
push
int3
add
aaa
mov
pop
test
push
std
jle
shrb
int
xchg
push
push
cwtl
mov
pop
xchg
leave
jns
jno
xchg
mov
sbb
cmp
jecxz
sbb
pop
pop
imull
mov
aam
mov
fstpl
jmp
xchg
test
mov
ficoms
scas
mov
jp
sub
cmp
jecxz
hlt
sbb
push
mov
push
out
pop
lods
or
push
cmp
cld
jnp
cmpsl
icebp
inc
dec
cmp
add
insl
pop
sbb
mov
jnp
mov
loopne
cli
jg
or
mov
stc
lods
inc
and
repnz
cltd
add
sub
dec
jbe
loop
imul
mov
out
sub
pusha
pop
cmp
cmp
mov
stos
arpl
test
out
dec
jg
imul
push
outsb
jl
mov
or
sub
leave
xchg
shr
push
jo
in
and
sub
pop
xlat
ljmp
jne
mov
pop
dec
enter
mov
cmp
jnp
mov
mov
stc
shl
xor
jle
sbb
sub
fdivrs
in
insb
out
pop
rol
fildll
out
aad
xor
push
test
inc
or
mov
loop
mov
dec
cmp
push
nop
xchg
cwtl
mov
imul
inc
fs
sub
fcompp
adc
mov
jg
xor
mov
data16
or
fs
push
mov
sbb
ror
insb
repz
pusha
sti
subb
mov
mov
mov
mov
inc
xchg
out
mov
fldt
xor
vpsubw
lods
and
pop
jmp
les
adc
and
outsl
stos
pop
add
lea
scas
arpl
int3
sbb
mov
mov
cmpsl
fisubl
xchg
jp
lcall
xor
xor
jae
sbb
bound
mov
and
dec
mov
mov
ret
xchg
in
pushw
push
pop
dec
stos
cmpsl
sarl
cmp
orl
pop
dec
out
or
insl
daa
shll
adcb
jl
dec
cmpsb
xor
in
xor
lds
mov
sub
fldcw
daa
out
imull
rclb
mov
shlb
jg
pushf
jo
or
call
sbb
pop
pop
loope
lret
addr16
sbb
mov
rcrb
cmp
pop
xchg
psubusw
xor
andb
ret
adc
sub
into
cmc
sub
nop/reserved
mov
movsb
cmp
sub
fadd
test
pop
cmp
pop
iret
xchg
xchg
cmp
xor
adc
mov
inc
into
push
mov
shll
in
fisubl
mov
fadds
loope
aad
cmp
stc
or
pop
mov
out
loope
adc
jne
repz
xchg
or
or
sub
mov
push
lds
and
ljmp
shll
sahf
and
sbb
out
xchg
mov
mov
in
xchg
adc
cld
pop
add
icebp
xor
pop
jmp
repnz
fisubrl
bound
pop
xchg
pop
daa
xor
jge
add
pop
xchg
cltd
add
imul
adc
decb
sbb
and
adc
mov
dec
ret
push
sti
leave
jnp
mov
inc
aad
xchg
mov
jmp
mov
mov
dec
pop
push
mov
repz
mov
pop
or
xor
jae
lahf
repnz
in
push
pop
cmp
push
loope
sub
dec
stc
shrb
adc
dec
mov
add
mov
inc
jle
aaa
movb
jmp
insb
mov
pop
fstl
hlt
mov
lret
adc
mov
jae
push
ret
push
mov
mov
cmpsb
jb
iret
and
pop
fwait
cld
and
fldenv
ja
inc
pop
fisubrs
mov
ja
xor
shrb
lea
inc
xchg
dec
inc
xchg
ds
pop
pop
cmp
or
xchg
xchg
xlat
xchg
mov
mov
mov
leave
popl
popf
orl
into
out
push
cmp
adc
popf
lret
pop
ficoms
aas
push
mov
push
pop
sbb
inc
cld
cld
mov
sbb
mov
xor
pop
mov
lods
mov
cmp
push
fists
mov
into
mov
add
and
xor
inc
adc
repnz
scas
or
ja
xchg
xor
into
mov
shrb
divl
pop
popf
mov
mov
out
imul
stc
jns
outsl
sbb
je
loop
cmp
dec
or
xchg
mov
xor
cmp
jl
in
pop
add
jmp
ljmp
fisubrs
dec
mov
xor
in
je
cmp
ret
or
leave
push
dec
scas
cmp
cmpsl
ret
and
and
sub
into
inc
inc
inc
lcall
aas
cltd
ljmp
xchg
jmp
outsl
repz
lods
sub
dec
js
sub
or
js
stos
imul
and
push
jb
imulb
sbbb
sub
inc
test
adc
pusha
je
lods
fcmovnbe
into
cmp
pop
stc
sbb
dec
pop
dec
nop
test
insl
imul
popa
dec
jp
notl
xchg
idiv
ficompl
cmp
cs
inc
xlat
jne
fnsave
movsb
push
test
inc
iret
jmp
sbb
ret
jmp
movsl
out
jmp
les
test
xor
lahf
mov
dec
stc
inc
notb
test
or
cmp
mov
loope
in
leave
insl
cmc
notl
or
mov
jge
lcall
mov
jbe
mov
mov
stos
xchg
lcall
jae
or
icebp
call
add
and
inc
fcomi
inc
and
fstpl
jmp
test
out
push
sbb
push
cmp
jno
test
dec
cmp
xchg
cmp
int
inc
pop
pop
mov
or
fidivrl
fidivrl
xchg
pop
and
call
rcr
and
fcmovne
movsl
mov
popf
cmc
dec
fistps
js
orb
out
xchg
and
xchg
sbb
and
xchg
sbb
lds
jecxz
leave
ja
in
add
dec
dec
repz
cld
cli
rcll
cmpsl
xchg
mov
cmp
mov
repz
sub
jo
jo
sbb
adc
shlb
jle
sub
pop
and
in
jge
data16
jge
xchg
ret
lods
xor
and
cli
fwait
add
shl
ret
dec
push
cwtl
pop
icebp
mov
scas
repz
push
pop
stos
loopne
popa
xchg
xchg
mov
xor
jae
add
jae
push
test
iret
and
sahf
pusha
pop
dec
push
adc
mov
fs
pop
rcl
mov
jo
dec
out
imul
repnz
aam
sub
dec
inc
outsb
add
dec
push
jns
xchg
pushf
rcll
inc
leave
daa
jno
pop
imul
pop
fidivrl
in
adc
or
cmp
and
divb
jg
dec
mov
les
mov
out
stc
hlt
mov
mov
mov
inc
orb
push
lods
xchg
sti
xor
insl
sub
cld
fadds
inc
add
cmp
adc
in
dec
addl
or
cmp
xlat
shrb
insl
lods
sub
xlat
fnsave
add
cmp
pop
inc
mov
mov
int3
jmp
js
loop
test
mov
bound
mov
fstps
test
call
add
es
inc
stos
cmp
xor
sub
pop
bound
pop
cld
sbb
sahf
ret
push
jp
stc
sbb
jbe
or
dec
mov
sbb
jnp
sbb
fwait
lods
and
insl
and
jmp
lahf
dec
adc
sub
jmp
jecxz
test
and
int
shlb
xlat
jo
daa
sub
ds
mov
mov
out
mov
inc
mov
mov
sbb
pop
and
int
sub
call
stos
pusha
pop
and
and
mov
push
pop
xchg
or
and
push
add
jp
lds
sbb
iret
mov
and
mov
hlt
mov
lds
adc
mov
dec
cmp
mov
sub
xor
fimull
in
pop
push
sub
add
xor
adcl
lods
leave
in
negb
mov
out
mov
imul
xchg
imul
leave
jae
pushf
imull
push
push
mov
add
jle
aaa
jecxz
inc
fadd
lock
adc
and
lret
pusha
and
outsl
in
and
xor
and
out
hlt
scas
adc
subl
subl
outsb
or
popf
push
jmp
icebp
fndisi(8087
cwtl
push
mov
xor
or
xchg
xchg
das
adc
fistpll
push
mov
outsl
mov
repz
je
pop
and
aas
dec
pop
std
cwtl
sbb
cli
jecxz
scas
dec
stc
lds
decb
push
pop
adc
icebp
je
call
fidivs
in
push
dec
cld
add
sbb
out
arpl
cmpsl
scas
jl
mov
adc
in
xchg
jne
lods
add
pop
pcmpgtw
pop
test
xor
mov
rcll
lods
sbb
xchg
cmp
mov
inc
sahf
inc
gs
or
in
mov
jge
loop
sbb
neg
dec
sbb
pop
fdivs
cmpsl
sub
lea
add
dec
test
dec
inc
aaa
xor
xchg
ret
scas
in
mov
or
test
jnp
mov
jge
cmpsl
pop
cmp
es
mov
cli
mov
mov
fildl
cmp
add
mov
mov
mov
mov
into
sti
imul
and
mov
dec
das
push
pusha
lods
push
aaa
cmp
push
cld
push
jnp
mov
push
and
pop
loopne
aaa
jp
mov
test
push
out
or
movsb
xchg
psllw
pop
mov
ds
cmp
sub
xchg
fsts
aam
xor
movsl
sbb
imul
insb
sbb
jno
add
dec
pop
xor
out
pop
jg
stos
jecxz
aad
decb
mov
arpl
mov
dec
inc
rolb
fdivs
jp
bound
pop
outsl
inc
nop
push
xchg
mov
pop
dec
or
xor
jno
adc
bound
pushf
sub
push
test
xchg
cmp
adc
cmp
insb
add
cmp
mov
dec
lahf
jns
xchg
rorl
and
xor
nop
mov
inc
stc
add
out
stc
enter
in
out
popa
mov
cmp
pop
dec
xor
rcrb
popf
in
pop
shlb
xor
fistl
je
enter
shlb
cmp
inc
or
adc
inc
mov
imul
sub
xchg
je
dec
or
sbb
dec
jno
pop
mov
rorb
pusha
pop
or
daa
pusha
mov
inc
pop
push
neg
repnz
xchg
mov
push
mov
mov
add
sarb
adc
xor
mov
aad
pop
or
jp
mov
in
adc
pop
sbb
xchg
outsb
sub
rcll
pop
push
testl
fisubl
push
cltd
stc
stc
inc
out
mov
sub
iret
fstpt
xor
pusha
pusha
addl
lahf
insb
jp
cld
or
xchg
out
add
mov
repnz
push
push
add
push
loop
fwait
sbb
mov
insb
arpl
es
or
popf
jl
rcrb
ret
dec
sub
push
xor
push
leave
or
imul
xchg
sbb
into
push
mov
mov
push
cwtl
out
mov
mov
or
xchg
loope
dec
xchg
outsl
push
cmp
fnsave
in
pop
sbb
pop
adc
mov
xor
insb
push
jle
aad
adc
add
sub
data16
mov
stos
iret
enter
ds
sbb
imul
mov
es
jae
ror
insb
jmp
mov
pusha
repnz
addb
rcr
and
bound
mov
adc
pop
xor
loopne
stc
jbe
pop
mov
and
orl
lock
jo
xchg
xchg
or
cwtl
hlt
roll
lods
mulb
mov
add
sub
pusha
xchg
push
scas
adc
rorb
adc
xchg
in
sbb
lock
rclb
inc
pop
fidivl
adc
adc
sahf
fs
js
xrelease
mov
lds
cmpsb
xor
loope
sbb
scas
add
and
scas
or
push
out
clc
push
jo
test
jne
mov
in
add
fdivrp
sahf
pop
push
pusha
andl
or
adc
adc
xor
nop
imul
ret
cmp
push
test
test
out
xor
loop
lahf
dec
add
pop
cli
outsl
and
lret
ss
pop
ds
xorb
cmpsl
and
push
inc
mov
pop
mov
mov
xchg
adc
jmp
test
push
int3
or
mov
call
cmp
loopne
out
xor
test
movsb
sbb
jae
push
dec
inc
cmp
adc
mov
or
push
enter
stos
mov
aam
rcrb
push
imul
in
jge
sbb
icebp
xor
mov
push
mov
mov
shrb
loope
dec
and
cmp
sub
test
sbb
aaa
inc
call
cmp
lahf
in
fsubrs
push
push
jns
cli
and
push
dec
rcr
stos
push
pop
cmp
test
pop
js
or
clc
rcrb
xchg
clc
aam
cmp
jne
mov
cmp
or
out
mov
movsb
cmp
std
fldcw
pop
cmp
push
mov
std
dec
fldt
addr16
xchg
and
mov
sub
jl
mov
into
testb
mov
mov
mov
outsl
mov
and
fnsave
sahf
out
dec
lea
xchg
aas
fsub
jae
clc
daa
adc
inc
push
loopne
pop
test
movsl
ret
in
mov
fcoms
adc
arpl
lds
arpl
fbld
sbb
xor
mov
xor
mulb
aam
pop
inc
testl
pop
out
sub
stos
xchg
int3
out
push
dec
cmp
adc
hlt
pop
aas
jmp
iret
adc
xchg
mov
mov
neg
or
mov
cmpsb
cmpsl
push
jle
imul
outsl
xchg
or
fstpt
adc
push
pop
mul
cmpsb
adc
in
jl
dec
mov
mov
icebp
fiadds
test
out
inc
push
push
cli
jle
loope
sbbl
lret
lods
flds
fnsave
lods
sub
fcomip
add
fucomi
test
lods
enter
inc
testb
je
push
fiaddl
test
test
mov
xchg
sub
insb
stc
pop
mov
xlat
sub
loop
xchg
add
ficoms
in
adc
inc
sub
pop
in
in
mov
cvttps2pi
aam
sub
loop
js
sbb
xchg
xchg
jbe
sar
test
pop
in
sbb
jge
lods
dec
xor
xor
shl
outsb
jp
cld
jno
inc
scas
ja
sbb
enter
xor
je
pop
daa
out
adc
pusha
sub
mov
test
dec
cmp
in
lock
cmp
daa
ss
call
test
jg
sub
and
mov
in
adc
data16
aaa
mov
dec
cmp
sbb
arpl
push
add
add
fwait
mov
jmp
popa
ret
xor
cmpsb
int3
pusha
xchg
pop
sub
sbb
int3
pusha
jle
decb
stos
sub
int
dec
rcrb
mov
adc
and
cmp
push
jmp
dec
sbb
insl
cli
xorl
pop
mov
mov
jg,pt
push
mov
push
call
cmp
icebp
xchg
jmp
rcll
loope
pop
or
sahf
mov
sub
in
je
js
cmp
arpl
inc
adc
inc
pop
inc
jnp
incl
or
aam
jmp
cmp
je
pop
mov
or
xor
cmp
xor
mov
test
popf
mov
and
jae
adc
pop
sti
cmp
xchg
cld
sti
fwait
iret
jbe
lret
or
pop
cwtl
ror
repnz
das
cmp
inc
jmp
inc
mov
mov
test
mov
jbe
aas
mov
imul
loope
aas
or
push
push
lds
adc
aam
mov
popf
icebp
out
mull
push
aaa
add
sar
test
add
mov
pusha
sub
aad
add
ret
add
xlat
push
sbb
shl
xor
jecxz
jnp
xor
pavgb
push
sub
enter
insl
out
and
icebp
sub
sar
in
xlat
mov
push
das
sub
or
mov
mov
out
push
dec
dec
push
es
cmpsb
xlat
dec
dec
aam
or
repz
or
xchg
dec
icebp
stc
lock
push
aaa
in
shlb
pop
xor
test
popa
xor
pusha
sub
frstor
aad
jecxz
xor
push
sub
push
mov
xchg
pop
jg
std
les
fnstsw
fistpll
gs
dec
xor
or
lock
sti
scas
icebp
push
ds
divb
inc
add
push
and
test
xchg
jl
lret
and
xchg
push
cmpl
loope
sub
jnp
imul
lock
mov
mov
push
mulb
ljmp
scas
clc
sub
mov
out
mov
push
xchg
mov
stos
sub
dec
lock
xor
aaa
lret
pop
insb
xchg
push
addr16
pop
push
and
ret
int
cmp
out
mov
add
pop
stc
ljmp
pop
negb
mov
aad
mov
push
jae
adc
out
outsb
sar
testb
pop
dec
popf
test
test
cmp
cmp
add
fistpll
rorl
xor
ret
movsb
or
add
insl
pop
fisubs
sub
mov
inc
jl
or
adcl
icebp
fcomi
mov
lock
filds
les
loope
jmp
je
jb
mov
aaa
shll
ffree
xchg
push
outsb
ret
jle
cli
clc
jb
lock
sbb
sub
lcall
aad
mov
mov
inc
mov
dec
cmpsb
xlat
xchg
addr16
xchg
add
popw
imul
in
sahf
push
sbbl
or
adc
pop
prefetch
pusha
lcall
inc
mov
insb
push
mov
mov
movsb
leave
cmc
mov
int
mov
pop
adcl
das
cltd
jp
cs
mov
xchg
loop
push
push
lret
inc
sbb
aam
mov
jle
cmp
fstpt
scas
dec
pop
out
clc
sbbl
jb
sarb
mov
andl
ljmp
pop
sbbl
cwtl
movsl
pop
pusha
mov
shl
cmp
push
ljmp
sbb
mov
inc
push
sub
rorb
fadds
xchg
sbb
push
cwtl
fsubr
mov
inc
mov
das
xor
imul
ret
ret
push
xor
sub
add
andb
mov
roll
add
jmp
fisubs
mov
int
xchg
subl
and
insb
mov
xchg
xchg
push
inc
cmpsl
adc
dec
and
jle
mov
xchg
jecxz
daa
adc
daa
notb
push
aam
and
gs
mov
sbb
sbb
int3
mov
mov
data16
sub
es
mov
inc
movsl
iret
xchg
dec
aas
add
and
sbb
fistl
cmp
das
aas
inc
jl
mov
loopne
andb
rcr
cmpl
fs
ljmp
loop
or
movsb
ja
cmp
pop
and
ret
or
ljmp
iret
mov
inc
cmc
cmp
push
xorl
mov
sub
mov
adc
daa
pop
les
das
xorl
andl
cmp
add
dec
pop
fistl
es
repz
sub
add
adc
ds
jg
mov
movsb
lds
push
into
xchg
leave
mov
xchg
adc
inc
subb
xchg
cmpsl
xor
sub
pusha
add
jbe
lods
and
push
lret
xchg
arpl
bound
cmp
sub
cmpsb
lret
test
xchg
mov
pop
cmpsl
in
lds
hlt
int
pop
mov
dec
shrd
cmp
cmpsl
movb
fwait
nop
mov
aaa
loope
adc
ret
clc
int
xchg
fisubs
and
out
les
xor
mov
or
fwait
inc
pop
ja
inc
call
cmc
dec
outsl
pop
fcmove
leave
jmp
mov
nop
sbb
jecxz
cmp
loopne
adc
cltd
mov
xlat
mov
inc
in
sarb
jae
xchg
cli
sub
adc
test
or
cmp
add
je
aam
cmp
mov
or
dec
repz
adc
jge
roll
ret
je
icebp
xor
out
out
push
popf
divb
in
insb
jno
lds
mov
dec
sub
inc
ja
jns
sub
add
ret
inc
inc
loopne
sbb
stc
inc
jg,pn
imull
and
sbb
in
adc
or
sub
pop
movsb
adc
add
jb
dec
stc
mov
sbb
mov
scas
add
push
out
and
pop
movsl
push
push
and
mov
cmp
add
pushf
push
lcall
cld
ret
xor
leave
xchg
call
repnz
ret
xor
lods
cli
sbb
sub
rcrb
jno
cmpsl
lock
outsl
out
mull
popa
sbb
add
jns
imul
mov
xorb
in
das
pop
sbbb
addl
jle
jne
cmpsb
cld
cwtl
mov
xor
sub
stos
lock
cli
xchg
and
inc
movsl
imul
aam
pop
jno
arpl
out
orb
jb
call
sbb
int3
add
lea
scas
pop
into
mov
cmpsb
inc
mov
jge
sub
loop
loop
test
pop
mov
mov
mov
mov
cmp
fmul
pop
dec
mov
sub
ret
mov
sbb
xchg
lcall
dec
push
adc
jb
sbb
cltd
repnz
cwtl
int3
jo
sub
cld
dec
mov
lods
xchg
in
rcr
jns
push
mov
add
jnp
lret
sarl
ror
inc
pop
stos
xchg
adc
dec
adcl
outsl
xor
js
clc
xchg
lock
bound
xor
loope
inc
push
jbe
insb
stc
or
mov
xchg
std
leave
shrb
xor
xor
lods
movsl
jae
jnp
das
pusha
outsb
shlb
dec
push
clc
inc
out
xor
andb
push
test
mov
in
inc
aas
push
ret
daa
pop
int
adc
repnz
lea
sub
mov
aad
push
sub
lahf
adc
jo
es
fsubrl
aas
jb
cmp
fldt
cmc
int
mov
int3
bound
and
stos
mov
adc
mov
bound
adc
push
sub
insb
arpl
sbb
outsl
or
pushf
sbb
push
cmp
das
push
popa
mov
jecxz
stos
imul
das
rclb
or
pop
ljmp
lret
in
icebp
jmp
inc
dec
push
outsb
mov
jp
dec
jae
xorb
dec
cwtl
sti
insl
add
outsb
stos
adc
test
xchg
lds
enter
loopne
cmp
in
fwait
lahf
jae
ret
ja
jg
out
dec
sub
insb
cmpsb
sbb
enter
cli
xchg
scas
pop
jno
jmp
mov
mov
add
xor
xchg
movb
jmp
repnz
inc
add
cmp
sub
out
inc
mov
inc
cmpsl
pop
fimuls
addb
cmp
sbb
add
push
mov
psraw
cs
jle
in
mov
mov
mov
fstpt
inc
imul
xchg
ja
sbb
inc
dec
scas
jp
cwtl
mov
sbb
pop
mov
stc
pop
jmp
adc
outsb
mov
xchg
mov
sub
fisubrs
lahf
mov
fidivrs
and
ret
out
push
mov
push
stc
lods
adc
push
cmp
movsb
adc
mov
in
dec
dec
mov
xor
repz
ljmp
xchg
ds
push
cld
jno
push
jecxz
xorl
ret
adcb
mov
icebp
xchg
jl
outsb
shlb
dec
cmc
inc
pop
mov
cltd
and
adc
dec
xchg
insb
cltd
sbb
popf
loope
clc
ja
or
mov
js
inc
inc
push
cmpsl
outsl
push
sbb
push
lods
movsb
int
dec
cs
push
bound
out
xchg
popf
nop
loope
mov
mov
mov
pop
and
dec
cmpl
lret
repnz
jp
addr16
and
xchg
pop
push
push
pushf
shl
aam
aaa
adc
bound
iret
pushw
repnz
xchg
push
inc
and
xchg
in
out
mov
xchg
sbbl
or
int
outsl
xchg
clc
test
es
jge
mov
adc
sbb
mov
int3
nop
in
pop
cmp
mov
mov
popf
xor
pop
aad
out
dec
js
mov
loop
ret
sub
adc
pop
cmp
xor
test
pop
cwtl
or
xchg
push
adc
mov
mov
adc
jnp
sbb
push
dec
or
lret
cmp
addr16
in
push
dec
in
scas
je
data16
mov
sti
lods
loope
leave
in
cmp
adc
xor
push
rorb
adc
jge
sub
jecxz
lret
cwtl
push
psrlq
push
mov
insl
add
push
mov
fsub
mov
mov
mov
dec
stos
out
cld
push
insb
stos
adc
scas
fsubl
jg
in
das
cmpsl
push
and
jbe
ret
sub
adc
mov
add
xchg
aam
mov
pop
jecxz
out
and
inc
add
mov
daa
dec
adcb
cld
pop
outsl
inc
movl
dec
nop
dec
out
out
fists
dec
dec
jg
and
insb
aas
pop
cmc
cmp
mov
adc
push
jo
nop
push
push
ret
jmp
or
sub
mov
icebp
and
xlat
mov
add
mov
push
les
stos
push
pop
or
pop
sub
push
jecxz
add
cld
sbb
sub
arpl
and
fnstsw
fcompl
mov
add
cmc
in
out
sub
cmpsb
sub
imul
fwait
in
jl
jns
cmp
pop
sub
fistpll
ror
lea
sbb
jp
mov
xchg
mov
jg
cli
in
or
dec
xchg
or
daa
xchg
rolb
sbb
data16
push
js
shlb
push
mov
pop
sub
imul
das
adc
cli
sub
lcall
adc
aas
aam
adc
repz
push
mov
loope
and
mov
imul
cmp
sbb
negl
negb
das
hlt
cli
push
gs
mov
adc
cmp
push
idivb
or
pop
leave
pop
out
jle
stos
xchg
dec
shl
push
int
push
lea
mov
jge
or
push
and
ds
pop
xchg
or
pop
xchg
push
adc
leave
out
ljmp
push
test
negb
jb
fcomi
cmp
add
cmpsl
inc
xlat
inc
shll
or
out
push
cmp
aas
pop
popa
xchg
xchg
outsb
test
xchg
shrl
lock
rcll
push
call
loope
ret
push
mov
dec
bound
dec
mov
cmpsb
stos
pop
adc
inc
outsb
pop
fiadds
pop
mov
adc
call
sbb
and
fadd
sub
scas
sar
pushf
mov
fstps
pop
sub
mov
xor
push
lods
mov
mov
test
insl
ss
rol
dec
mov
clc
push
mov
shrb
jle
les
stos
jle
cmp
jmp
xor
lret
cmc
push
out
repnz
ja
sub
popf
mov
jmp
mov
arpl
cs
cmp
ret
or
mov
cld
lahf
cmpsl
sarb
add
inc
fnstcw
ficomps
mov
daa
dec
sbb
sbb
loope
sub
or
lds
lods
add
testb
xchg
mov
mov
dec
mov
adc
mov
out
cmp
loopne
repnz
xchg
cmp
xchg
notl
jbe
xor
xorl
jecxz
idivb
rcll
test
push
inc
inc
in
cmp
push
cmc
ss
push
and
ljmp
das
stos
call
sbb
mov
or
xor
add
jae
movsb
int3
ljmp
andl
in
mov
scas
or
cmc
jp
movsl
fwait
loop
dec
xor
pop
add
cmp
xchg
andb
sti
ljmp
fdivrp
stos
outsl
cmp
sub
fisttps
sti
inc
jnp
dec
jnp
mov
lahf
sub
int3
adc
pop
test
cmp
push
int
sbb
mov
mov
mov
mov
fistpll
stc
and
mov
enter
or
aad
xchg
push
push
dec
ss
sbb
pop
loope
cmp
xor
jle,pt
daa
xorb
cwtl
cli
fisttpl
aad
ljmp
pop
mov
mov
into
cmp
les
ljmp
add
frstor
lret
mov
bound
push
mov
add
in
loope
pop
dec
test
add
mov
insb
fisubs
push
movsl
mov
test
xchg
in
sub
cmp
sbb
jle
cmp
push
les
sbb
movsb
lods
adc
repz
nop
lds
mov
adcb
mov
sbb
rclb
test
push
dec
lret
jb
sti
and
or
scas
or
stos
cmp
sbb
aad
lahf
adc
mov
cwtl
cmc
mov
fbld
popf
adc
stos
imul
pop
cs
repz
pop
lods
or
into
adc
pop
xor
test
int3
mov
lcall
push
jns
adc
aaa
outsl
lret
loope
js
fimull
out
push
cltd
sub
stos
rcrb
sbb
dec
and
dec
cs
push
pop
jge
fwait
xor
popa
xorl
jge
daa
fwait
mov
or
mov
inc
or
insb
pusha
fxch
cmp
outsb
inc
push
leave
jae
adc
sub
jb
push
sub
xor
loop
out
loope
mov
add
loopne,pt
mov
fwait
adc
xor
loop
loope
and
and
js
cmovge
out
xchg
das
sub
jae
sub
push
popf
mov
push
sub
and
pop
std
sbb
dec
cmp
jo
imul
loop
les
mov
and
aad
jno
or
xchg
mov
mov
push
inc
fidivrl
jmp
sti
stos
mov
and
pop
jecxz
test
or
mov
mov
les
arpl
mov
xchg
dec
call
jbe
or
push
push
pop
ftst
push
fidivrl
out
xchg
cmp
je
and
and
cmc
mov
lcall
xlat
mov
repz
xchg
push
bound
ss
and
or
or
or
pop
pop
or
iret
sbbl
stos
test
call
xor
jg
insb
mov
cld
pop
or
cmp
in
push
rcll
out
mov
pop
xor
js
cmpsb
and
mov
enter
cld
in
mov
mov
mov
xchg
imul
xchg
mov
inc
dec
push
push
mov
xor
ljmp
add
mov
in
shll
insb
push
hlt
xor
ret
inc
mov
call
daa
cmpsl
pusha
cmp
inc
aas
in
push
sbb
and
stos
cli
out
cmp
adc
mov
aas
out
push
push
stc
inc
sarb
dec
xor
aas
js
push
jae
int3
push
or
int
push
test
jp
sbb
lret
cmp
fisttpll
and
ja
lcall
stos
fadds
push
loop
and
mov
inc
or
fucom
shlb
mov
mov
mov
shl
inc
mov
outsl
outsl
fildll
mov
fisubrl
add
fimuls
add
mov
cmp
and
test
push
addr16
dec
mov
lods
scas
in
pop
jl
test
mov
sbb
iret
lock
or
fidivl
adc
sub
add
push
addr16
dec
inc
into
push
mov
popa
push
cmp
inc
push
mov
call
insb
jno
test
pop
dec
aad
cwtl
scas
mov
pop
sarl
jge
repz
jg
dec
jle
test
inc
lods
loope
mov
pop
push
xor
or
pop
inc
flds
fs
outsb
test
jno
rcrb
cmp
sbb
sub
leave
add
mov
push
sbb
add
dec
sbbb
rolb
jge
sbb
sbb
push
jmp
jo
xchg
sub
rcr
xor
pop
jmp
clc
les
xor
cmc
ret
stc
jmp
out
bound
xchg
and
dec
ret
pop
xchg
std
push
xor
mov
sub
int3
jbe
or
out
pop
or
mov
clc
loopne
test
push
enter
nop
pop
push
loop
cmp
int
push
ficoms
mov
push
push
rorb
xchg
and
mov
cld
ret
test
cmp
imul
cmp
lds
shlb
push
loopne
movsb
push
dec
loopne
or
mov
loope
imul
add
out
insb
sar
mov
dec
scas
lcall
jb
notl
mov
xlat
push
xor
adc
fcoms
inc
jge
je
jl
lea
sub
fnstenv
stc
outsl
mov
int
scas
aaa
sbb
cli
clc
fsubr
stc
cmp
jbe
rcrb
rorl
hlt
test
lcall
add
push
enter
dec
ljmp
stc
push
adc
das
jne
out
xor
cmp
push
adc
call
leave
cwtl
mov
xchg
mov
cmp
xchg
insl
daa
mov
filds
cmp
push
jo
adc
push
shll
inc
fisubs
inc
ret
fiadds
inc
cmp
mov
jmp
std
push
loop
sbb
mov
mov
leave
inc
into
imul
push
mov
mov
bound
aas
add
insl
xor
inc
or
mov
dec
adc
mov
popf
aad
mov
dec
fcmovnu
mov
pop
cltd
inc
or
imul
add
sub
cmpsb
push
push
in
movsb
add
test
insb
sub
ss
add
cmp
sub
in
cmp
or
aas
cld
xor
bound
inc
pop
dec
in
sub
test
outsl
call
lcall
and
rcrb
adc
push
cmp
jno
andl
mov
loopne
ja
test
xchg
int3
pop
jb
and
mov
sub
cmovnp
push
sub
sbb
inc
loopne
or
repz
push
pop
loop
xchg
push
nop
insb
insl
daa
loop
adc
and
aaa
sysexit
inc
rolb
xchg
cmpl
scas
and
dec
and
sarb
daa
pop
pop
in
cmc
push
inc
sbb
push
sub
and
jge
pop
flds
cmp
and
lock
add
cwtl
pop
xor
hlt
imul
test
cmpsl
inc
outsb
jb
jle
nop
repnz
inc
ds
xchg
sti
cmp
dec
pop
push
aaa
pop
or
xor
mov
lea
aaa
fmuls
sub
out
cld
push
insl
jecxz
das
dec
loopne
cmpb
xchg
pop
aaa
adcb
aas
rcrb
pushf
and
inc
leave
push
dec
mov
sub
mov
sbb
sbb
insl
mov
jae
fucomp
das
sar
jp
xor
inc
insl
sbb
pop
aad
push
movnti
sub
outsb
lret
pop
mov
icebp
adcl
ror
mov
lock
push
push
cmpsb
cmp
lods
jmp
xchg
lahf
lret
mov
sub
mov
divps
mov
stos
outsl
insb
imul
pop
ret
xchg
mov
mov
cli
fucomi
xchg
add
popf
dec
push
sbb
or
add
movsl
add
jno
in
xor
add
imul
xor
xchg
cltd
fistpl
ret
push
mov
dec
xchg
push
mov
ljmp
fucomp
in
jmp
sbb
cmp
adc
jecxz
xchg
pop
push
push
inc
mov
out
mov
sub
xchg
adc
out
xchg
sbb
fstpl
and
in
mov
jl
mov
jge
push
dec
outsb
lret
pushf
scas
xchg
inc
or
fdivr
xchg
push
cmp
repnz
js
add
pushf
add
sarb
mov
sbbb
cmpsb
hlt
mov
mov
cwtl
pop
xlat
aas
jns
pop
push
xchg
outsb
hlt
cli
push
ds
aad
stos
sti
fsubrs
jne
sub
push
fwait
inc
xor
test
neg
scas
sub
adc
pop
fstl
pop
pop
sub
gs
cld
push
dec
shl
ret
lcall
mov
scas
mov
iret
push
jge
dec
je
rorl
xor
pop
repz
ja
jp
ret
or
xor
dec
sbb
add
cmp
test
mov
add
insb
enter
insl
xor
push
leave
mov
pop
xor
imul
dec
mov
xor
jg
lods
pop
sub
xchg
mov
scas
dec
scas
arpl
push
jmp
daa
dec
mov
ss
scas
push
fmul
lret
imul
sub
push
imul
mov
and
mov
cwtl
push
enter
xchg
xlat
sub
sti
jo
mov
or
cltd
xor
push
js
incl
pop
shr
loope
addr16
hlt
test
hlt
xor
dec
mov
das
scas
jae
xchg
xor
int
and
push
sub
sub
ja
aas
sbb
pop
lock
outsb
mov
das
pop
dec
dec
stc
jmp
inc
in
push
jae
ds
dec
cmp
sbb
fidivrs
mov
sub
mov
mov
iret
cmp
pop
xor
push
mov
call
rorb
mov
mov
add
lea
inc
shll
mov
push
ds
popf
lock
push
mov
cld
jo
adc
mov
and
bts
in
lret
movsl
loop
into
mov
sbb
push
mov
sub
loope
int3
lahf
or
sub
iret
pop
lret
scas
push
or
shrb
xor
stos
movsb
cmpsl
lret
cmp
mov
nop
xchg
dec
xchg
arpl
pushf
mov
enter
sub
dec
adc
fldenv
loop
push
cmp
sbb
dec
pop
push
push
clc
jb
mov
lods
popf
outsb
aam
arpl
cmp
dec
roll
mov
mov
adc
call
or
lcall
push
mov
cli
push
les
mov
xor
push
test
inc
dec
daa
sbb
cld
aad
out
dec
mov
mov
xor
cltd
addl
popf
fcompl
mov
xchg
shrb
lcall
jne
lods
mov
lock
cld
jno
dec
test
jecxz
inc
jmp
stos
es
rorb
or
pop
mov
dec
pop
xchg
popa
sub
loope
push
inc
scas
jne
mov
movsl
fldcw
mov
xchg
sub
fidivl
jle
subb
pusha
shr
cmp
pop
cs
inc
fdiv
sub
or
out
push
int
dec
or
fnstsw
je
mov
loopne
aad
subl
mov
imul
or
dec
das
pop
cltd
mov
imul
push
gs
sub
jbe
pop
sub
out
pushf
lods
std
pop
sub
mov
adcb
inc
inc
push
cmp
lods
jmp
mov
pushf
in
lcall
in
filds
push
scas
add
mov
or
pusha
dec
sbb
movsb
jno
idivb
push
pop
xlat
out
jmp
xor
jl
jno
xchg
aaa
jl
sub
mulb
mov
cmovne
xorb
xor
lcall
aas
adc
fisttpll
push
pop
je
out
fistpl
rcrb
jo
pop
jo
mov
add
lret
ficoms
inc
xor
sub
gs
and
xor
or
repnz
sbb
pop
or
adc
xor
sub
scas
ret
in
mov
aas
lock
scas
lods
mov
xchg
fisttpl
cmc
cwtl
mov
adc
mov
cld
movsw
sbb
sbb
mov
out
rorb
idivl
test
ret
movsl
lock
sbb
je
ds
dec
jb
in
mov
push
push
xchg
andb
mov
call
jg
daa
pop
and
outsl
je
pandn
inc
mov
pop
push
jp
sti
daa
inc
cmp
xchg
inc
or
push
fsub
loopne
call
sbb
test
into
and
bnd
jecxz
sbb
push
in
pop
mov
hlt
out
jecxz
icebp
push
pop
jl
jnp
movsb
or
fs
imul
and
nop
ret
cmpl
aam
xchg
out
xor
mov
imul
aas
sub
ret
push
cli
lods
in
xchg
cld
cmp
cmpsb
aam
in
jne
xlat
fs
out
jecxz
sbb
cmpsl
cmc
cmp
in
lods
dec
das
arpl
jae
xlat
inc
in
pop
fwait
jge
in
cmpsl
dec
filds
fnstsw
mov
cli
aad
les
sbb
loop
fld
sbbb
adc
inc
ljmp
sub
inc
int
xorb
insb
inc
mov
mov
ja
xchg
mov
loopne
cmp
pop
mov
adc
dec
pushf
lcall
sub
or
adc
mov
rcr
dec
inc
add
push
shrl
shlb
div
outsl
stos
push
leave
aas
pusha
lock
hlt
movsb
or
adc
pop
outsl
fldl
fisttpll
push
mov
jecxz
push
dec
vpcomd
mov
push
mov
mov
lret
aas
mov
dec
popa
inc
dec
cmpsb
call
scas
test
adc
jecxz
insl
scas
shll
repnz
mov
xorl
jecxz
sub
sbb
lock
inc
test
ror
xor
daa
mov
or
xchg
or
jb
cmp
add
xchg
jae
or
cmp
leave
ud2
dec
mov
adc
mov
ja
int3
sub
pop
xor
loope
lret
mov
lods
jns
add
cmpsb
mov
sbb
xchg
dec
pop
add
insb
addl
add
adc
mov
pop
mov
popl
xchg
stos
mov
jne
xor
pop
cmp
stc
inc
push
or
fstp
repz
enter
jmp
mov
jmp
insl
push
hlt
mov
bound
neg
mov
jbe
xchg
adc
push
sub
sub
fmull
aam
jb
je
scas
mov
push
repnz
add
mov
dec
sub
das
ss
cmc
push
ret
repnz
add
daa
imul
xchg
pop
ret
sub
popf
outsb
outsb
call
cli
xchg
das
cmp
lahf
jmp
movsl
inc
xor
stc
jle
scas
outsb
push
ret
mov
or
xchg
sti
outsl
push
out
mov
lods
testb
or
pop
xor
pop
out
jnp
push
aas
loopne
mov
arpl
push
movsb
inc
sub
es
or
jge
sub
ja
cmp
pop
out
pusha
add
push
sbb
fcompl
pop
outsl
shll
add
lret
or
push
ret
jl
mov
ds
jns
cmpsl
int
fildl
or
mov
sub
mov
add
daa
sub
int3
lret
push
inc
mov
push
cmc
out
adc
btcl
iret
mov
cmp
addb
push
movsl
out
jle
xchg
sti
daa
ret
jbe
stos
dec
shll
idivl
cmpsb
mov
push
mov
leave
cmp
or
in
jno
dec
ja
out
mov
aaa
fldcw
lret
rcrb
repnz
pop
addr16
pop
out
push
mov
loope
inc
and
push
jmp
and
and
jbe
xor
ljmp
movsl
pop
fldenv
in
mov
mov
sub
hlt
rol
cmpsb
pushf
idivl
pop
jnp
loope
sub
cmp
lds
pop
in
pop
and
jno
nop
sub
popf
cs
decb
lock
cmp
lds
daa
xchg
adc
pusha
xchg
cmp
mov
out
mov
andl
aas
mov
pop
pushf
xor
sbb
pop
xchg
mov
push
loopne
xor
xchg
mov
xchg
push
loop
push
int3
pop
test
sub
push
jle
nop
jmp
les
aas
int
mov
jp
xchg
xchg
idivb
cmc
out
mov
jle
data16
aad
aas
lds
dec
aas
adc
out
xchg
adc
push
aas
int
mov
leave
push
lcall
shlb
xchg
jge
loopne
push
mov
pop
xchg
sarl
lcall
adc
rcll
je
mov
out
pop
cmpsb
jns
jl
rolb
dec
inc
lods
test
mov
push
rcrw
ss
or
je
xor
stos
in
imul
sbb
mov
nop
dec
add
js
inc
mov
xor
add
xor
data16
fcmovb
push
pop
mov
jmp
jl
jne
xchg
sbb
enter
push
fsubrp
inc
jle
adc
xor
leave
imul
aas
mov
out
cli
imul
movsl
fnstenv
pop
or
mov
xor
bound
fimull
xchg
xchg
int3
cmp
das
adc
adcl
pop
shl
mov
imul
rcl
adc
int3
push
arpl
sub
xchg
add
ficoml
jge
ljmp
fildl
sub
cmpsl
loope
dec
neg
pop
js
stos
mov
push
pop
repnz
imul
sahf
adc
inc
lock
inc
mov
cwtl
lret
in
daa
mov
pusha
mov
xor
dec
sbb
test
scas
aas
clc
fidivl
movsl
jne
lret
adc
in
scas
mov
inc
jl
mov
test
sahf
push
mov
mov
add
aam
iret
rcll
sub
cmc
sbbl
pop
lcall
jle
sub
std
jne
push
fs
bound
cmpsl
or
xchg
and
and
aaa
in
cli
inc
sub
iret
out
jns
gs
rorl
jmp
pop
leave
rcl
gs
jbe
ljmp
add
testb
mov
fistpl
popf
cmp
orl
sti
fs
mov
mov
nop
xlat
jns
nop
add
mov
divl
jb
aad
mov
loope
xchg
aad
add
movsb
jp
cmp
pop
and
decl
xchg
push
test
iret
inc
test
inc
sub
jle
jl
dec
cs
mov
f2xm1
jecxz
or
sbb
lock
pusha
push
iret
add
adc
mov
xchg
leave
arpl
cmp
ss
fadds
mov
dec
addl
sbb
repnz
xor
punpckhdq
inc
sbb
and
mov
adc
sub
mov
push
or
jb
cmp
test
dec
pop
mov
jp
adc
int
sub
push
in
insb
in
mov
inc
aad
mov
xchg
xor
push
pop
bound
cwtl
enter
or
loopne
sbbl
pop
push
fdivl
arpl
jl
xchg
rclb
movnti
push
enter
aam
dec
cwtl
jp
mov
add
fcomps
mov
xor
popa
pop
arpl
cltd
inc
or
xchg
add
icebp
cli
xlat
cld
std
jno
int3
insb
or
movsb
pop
and
bound
sbb
pop
and
daa
jns
movsb
jae
adc
inc
push
inc
xlat
cmc
dec
stos
inc
aas
sbb
pop
inc
cwtl
fcomp
les
pushf
and
xor
xor
sbb
dec
je
sti
and
nop
cmp
arpl
shrb
jo
test
enter
aad
shlb
in
xchg
or
jmp
rorb
and
push
pop
xor
xor
pop
cmp
cmp
fistl
push
test
test
and
mov
jle
pop
xor
daa
out
mov
xchg
sbb
xlat
mov
or
mov
xor
dec
repnz
add
stc
arpl
adc
rcrb
mov
imul
and
push
rcr
xchg
gs
push
in
sbb
inc
adcl
sbb
mov
rcrb
push
or
cmp
mul
dec
cmpsl
in
iret
push
and
daa
pushf
dec
adc
shl
arpl
and
push
js
es
cmp
es
sbb
dec
mov
fsubs
mov
rcll
mov
cmp
mov
inc
sbb
mov
pop
or
mov
es
stc
mov
pop
shrl
dec
mov
frstor
stc
ds
sbb
incl
ret
add
movsb
mov
loope
mov
imulb
jno
daa
pushf
mov
add
push
xchg
inc
jae
adc
sub
adc
jg
hlt
push
leave
or
popa
and
sbb
push
inc
cld
adcl
enter
jbe
or
ficomps
fmuls
and
mov
cmc
sbb
and
cmp
inc
ja
icebp
fiadds
sub
cli
xor
add
in
jl
and
xor
sbb
popf
sub
in
mov
aad
fldcw
xlat
mov
inc
shll
sahf
ja
jns
cmp
adc
pop
das
xchg
ljmp
xchg
push
lea
mov
mov
mov
lss
inc
and
jle
mov
inc
rorb
cltd
sub
pusha
jae
mov
push
ljmp
fsubrs
mov
loope
xchg
pmaddwd
push
neg
mov
or
jno
daa
je
xlat
xchg
outsb
test
sub
push
cmp
decl
xor
in
xor
adcb
lock
outsb
inc
cli
aam
loop
and
mov
jle
jnp
mov
jb
xor
sub
rorl
pop
mov
sbb
mov
jl
add
clc
cmpb
lea
or
mov
push
pushf
xor
scas
or
jecxz
mov
cltd
mov
std
andl
mov
or
popa
test
dec
xor
pop
adc
xorb
xchg
cmp
arpl
rorb
rdpmc
icebp
jp
mov
pop
and
sub
mov
pop
mov
cld
pop
xchg
aaa
pop
leave
sbb
jbe
movsb
mov
cli
pop
scas
adc
inc
inc
mov
fnstcw
shrb
cld
mov
iret
xchg
hlt
loop
cmc
stos
les
adc
popf
daa
cmpsl
jns
sub
inc
lret
mov
inc
sub
sti
gs
push
movsb
jecxz
dec
lahf
and
dec
mov
leave
jp
fwait
cmp
sub
addr16
inc
aad
mov
jno
jmp
rcl
data16
pusha
push
cmpsl
or
or
insl
int3
pusha
icebp
mul
inc
mov
push
aam
shrb
cwtl
xchg
inc
pop
pop
xchg
sub
dec
cmp
cld
subb
test
mov
and
stc
mov
shl
rcll
ret
out
and
imul
ficompl
js
and
les
jg
stos
outsl
push
inc
xchg
push
aas
sub
clc
mov
lret
adc
aaa
xor
cmp
daa
push
xor
adc
sbb
or
or
ds
mov
insb
sti
xchg
pop
loop
fxch
xchg
int
je
lock
fsts
sub
into
adc
and
mov
popa
push
xchg
in
add
pop
cli
xchg
adc
shlb
xor
xor
mul
sbb
cmp
in
ljmp
es
dec
stos
xchg
dec
xor
push
imul
ret
rcll
test
xchg
sti
hlt
arpl
shll
cmp
push
adc
sti
loopne
jmp
nop
mov
daa
and
mov
jns
xchg
clc
or
xchg
std
shlb
pushf
pop
and
inc
mov
sbb
or
addb
jp
daa
cltd
jl
mov
fists
fcoms
cwtl
xchg
loopne
outsb
scas
out
out
in
movsl
ljmp
cmpl
mov
ds
pop
popa
push
fwait
shrb
xchg
into
aas
mov
pop
xchg
pop
hlt
mov
orl
lahf
popa
popf
insb
nop
mov
lret
pop
lahf
xor
cmp
mov
lahf
outsb
pop
ss
sbb
aam
mov
and
lret
mov
mov
pop
rol
arpl
or
cmp
jbe
fdivrs
jp
ja
xor
lods
jmp
jmp
or
xor
jae
and
pop
fiaddl
aaa
push
jmp
pop
leave
cwtl
frstor
mov
scas
ret
push
out
sbb
fisubs
lret
dec
mov
and
xor
pop
pop
pop
pop
arpl
mov
pop
in
add
ret
testb
pusha
ret
push
push
cmp
push
lds
and
mov
xchg
mov
lret
and
outsb
mov
cmovae
cmp
dec
in
out
sahf
pop
jmp
or
xchg
adc
mov
loop
pop
lock
dec
push
imul
test
mov
cmpxchg
sub
or
or
jg
je
shl
push
push
shlb
mov
mov
ja
mov
cld
cmpsb
inc
jae
push
in
add
imulb
aaa
inc
xchg
testl
xor
adc
mov
add
ss
push
dec
push
insb
adc
cmpsb
mov
jne
out
pushw
and
sahf
leave
dec
add
gs
sbb
gs
lock
in
mov
lcall
adc
insb
out
inc
mov
xlat
ret
mov
mov
cli
fnstsw
push
push
xor
xor
lcall
push
loopne
clc
les
mov
lea
mov
rcll
push
push
out
daa
pop
pop
jge
pop
aam
loope
mov
or
jbe
popf
cmpsb
mov
imul
jmp
sbb
ss
or
dec
fstl
lock
sbb
imul
pusha
jge
jecxz
outsb
jne
mov
mov
mov
cmp
mov
cmp
pop
sub
nop
add
mov
cmp
mov
xlat
mov
sub
mov
insb
arpl
rorl
pop
cmpsl
mov
cmp
mov
pop
imul
xchg
fnstcw
loope
dec
sbb
ror
pop
push
push
cmc
pop
and
push
movsb
mov
imul
cmp
loope
jns,pt
insb
icebp
sub
sbb
mov
jge
xchg
or
cmp
cmp
insb
pushf
or
pop
repnz
mov
mov
or
pushf
pop
mov
push
popa
push
xor
imul
and
jno
lahf
or
sub
or
test
dec
sub
icebp
dec
dec
mov
sbb
cmp
mov
cs
pop
testl
pusha
xchg
push
xor
push
adc
leave
pop
pushf
fisttps
xor
inc
mov
jp
jmp
sub
and
mov
add
sti
cmpsb
push
mov
xchg
test
mov
mov
lret
daa
cs
and
add
and
or
or
push
insb
arpl
dec
out
ret
cltd
rcr
int
dec
jne
adc
or
jge
adc
bound
js
or
sbbl
orl
inc
out
mov
ficoml
fsubrs
mov
pop
fnstsw
adc
pop
xchg
jecxz
push
outsb
xchg
push
dec
mov
add
into
xor
jne
and
mov
push
jae
xchg
inc
pop
xorl
mov
insl
movb
mov
repnz
jnp
repnz
sbb
pop
mov
das
je
iret
fsubrl
dec
int
and
icebp
inc
test
repz
adc
ret
lea
lods
mov
movsl
xchg
mov
mov
lock
xchg
fistpl
in
or
pop
lret
inc
out
imul
push
stos
jb
xor
mov
sbb
push
or
repz
out
leave
pop
pop
push
add
hlt
test
mov
aam
mov
repz
fdivrl
cli
mov
insl
jp
stc
xor
cmp
cli
push
bound
insl
inc
lcall
push
movsb
aaa
lods
xchg
dec
inc
pushf
in
fsts
mov
dec
pop
into
cli
xchg
jnp
int
xchg
dec
je
notb
enter
popw
addr16
add
cmp
mov
push
addr16
les
xchg
mov
push
xchg
mov
dec
out
cmp
and
cs
jecxz
jne
xor
loope
push
pop
out
adc
aam
std
mov
scas
dec
in
jb
loope
or
sub
sbb
mov
sbb
lods
and
xchg
scas
mov
or
rdrand
in
sarl
pop
xchg
imul
pop
and
test
xchg
data16
xor
fstl
inc
adc
jl
clc
pop
jne
jnp
flds
repnz
sub
add
mov
lods
mov
testl
jns
add
pop
dec
vmwrite
cmpsl
cs
sbb
xor
lret
pop
sub
add
add
cmp
into
ss
fs
mov
in
dec
cmp
adc
xchg
cmp
sub
xorl
test
xor
and
gs
xor
and
fidivs
xchg
out
repz
mov
out
insl
cli
ret
leave
ja
je
lods
jg
pop
cli
mov
in
sub
rorb
in
mov
lods
sbb
mov
fwait
and
sahf
adc
test
insb
popa
loop
repnz
call
in
ljmp
pop
xor
jp
dec
cmpsb
xor
xchg
subl
and
mov
xor
dec
and
dec
mov
enter
ds
adc
andl
inc
out
iret
movsb
mov
outsb
xchg
pusha
arpl
clc
sub
mov
aad
fiaddl
push
xor
pop
adc
cli
sbb
adc
pop
mov
adc
xchg
pop
adc
sub
mov
test
lock
cmpsb
adc
outsl
xor
je
call
sbb
mov
or
cmp
js
in
sub
xchg
xchg
ja
mov
test
pushf
imul
adcl
stos
jmp
pop
jle
cld
xchg
inc
outsl
loope
aas
leave
or
sbb
in
popf
mov
pusha
or
xor
jns
mov
pushf
jns
push
adc
iret
out
or
or
add
xchg
pop
pop
dec
dec
movsl
or
hlt
jecxz
hlt
mov
into
cmp
jmp
sub
fstps
test
dec
pop
rcll
pop
sarb
mov
call
out
movsb
cmp
sub
lahf
lret
ret
push
aaa
movsb
push
jp
adc
mov
mov
and
mov
xor
pop
testl
or
pop
mov
xchg
imul
push
sub
lret
mov
sbb
ss
jne
lea
cmpsb
fucomi
std
movsb
fwait
add
sbb
mov
adc
in
push
sahf
pop
lret
sbb
cmp
add
pop
xchg
and
mov
sub
sub
cld
roll
call
jns
adc
and
or
lcall
icebp
pop
subb
fcmovnbe
fdivrs
nop
pop
mov
lock
sbb
jnp
in
mov
in
push
dec
fisttps
mov
test
imul
mov
stos
add
mov
xchg
les
push
pop
add
fstps
inc
mov
xorb
mov
jb
xchg
in
jle
hlt
xchg
lea
imul
jnp
mov
dec
dec
sbb
push
mov
int3
xchg
mov
xlat
adc
loop
hlt
test
mov
in
into
test
adc
xor
loope
pop
mov
cs
pop
lcall
pop
xchg
aas
adc
inc
scas
sub
inc
dec
xor
fistpll
mov
xchg
mov
lock
jno
in
icebp
lcall
lds
xor
or
ja
lea
and
jb
popf
pop
and
or
iret
mov
subl
cltd
inc
add
ja
fmul
inc
push
inc
inc
pop
inc
inc
clc
out
fwait
jp
add
or
and
mov
ljmp
or
insl
jb
enter
push
jo
xchg
das
js
rcll
mov
int
xchg
sahf
mov
int
mov
xchg
xchg
icebp
and
rcl
loopne
sub
test
xchg
out
call
stc
xor
movsl
popa
std
rcll
jno
daa
gs
push
cmp
loopne
shrb
push
adc
mov
rcr
or
std
inc
pop
rcll
fnstsw
sbb
lret
testl
scas
fsubl
ror
iret
xlat
out
sahf
fldenv
test
lcall
loop
xchg
and
xchg
leave
insb
scas
repnz
xor
movsb
mov
xchg
and
mov
test
lret
add
xor
add
sub
flds
popa
sarb
icebp
aaa
nop
nop
cmp
push
ljmp
inc
lahf
xor
adc
stos
out
cmp
cmp
jo
pop
dec
mov
pop
add
es
jecxz
outsb
pop
push
arpl
xchg
test
popf
repnz
sub
roll
jge
repnz
add
pop
fdivr
mov
xor
inc
pop
add
jns
xor
cs
outsl
sahf
adc
es
dec
inc
mov
loop
jg
mov
orb
push
jnp
mov
inc
push
fildll
sub
addr16
sbb
or
fnstcw
mov
lds
hlt
mov
out
enter
lea
aam
adc
es
aad
arpl
outsb
scas
sbb
int3
ret
call
cli
int3
sbb
int3
sbb
push
xchg
xchg
jge
mov
outsb
push
or
xor
out
js
mov
iret
shll
jae
cmc
loop
insl
mov
lea
or
rorb
imul
or
in
sti
pop
test
adc
jp
lcall
mov
and
dec
xchg
pop
xor
filds
repz
lret
pop
push
jne
lret
and
add
imul
ret
jae
mov
leave
xor
pop
in
mov
test
inc
loop
mov
pminsw
sti
daa
sbb
mov
lahf
icebp
jecxz
mov
xchg
cmc
jl
push
or
ret
js
outsb
aas
stos
pop
xlat
lock
dec
adc
sbb
lock
mov
inc
ja
inc
mov
add
mov
dec
add
adc
add
inc
and
sub
sub
and
pop
pushl
cs
add
cmpsl
mov
jg
test
dec
pop
mull
mov
inc
jge
jecxz
cmc
lret
add
lahf
jg
xor
jmp
mov
pop
dec
sarb
rorl
jb
das
loope
and
mov
lds
hlt
and
pop
add
aad
cli
mov
inc
stc
dec
testb
push
mov
lea
jo
sub
orl
cpuid
int3
jecxz
sub
mov
loope
cmpsb
add
cmpsl
fiaddl
testl
dec
xor
rolb
xchg
nop
sbb
jnp
xor
mov
out
xchg
test
jb
in
jo
and
pop
mov
stos
dec
and
or
mov
adc
xor
adc
push
push
rcl
dec
mov
movsb
dec
das
sbb
gs
movsl
jge
in
dec
add
movsb
out
fwait
inc
popf
jmp
or
movsb
jae
sbb
lcall
sub
lcall
sub
sub
dec
shrl
mov
push
loopne
outsb
gs
int3
mov
and
mov
dec
movsb
cmc
or
mov
mulb
sub
out
cmpsl
mov
ja
dec
push
jmp
add
pop
mov
or
mov
sub
mov
movsb
repz
lcall
out
in
aas
stos
enter
or
mov
cld
in
sbb
add
outsb
mov
lea
mov
and
mov
mov
inc
std
push
cltd
hlt
jg
mov
or
stc
fnsave
cmp
daa
lret
cmp
lahf
ret
imul
sub
sbb
nop
fisttpll
cmp
fsub
inc
sub
sbb
nop
pop
jge
jno
mov
pop
xchg
push
xor
lods
stc
jle
ds
xchg
cmp
shlb
push
cmp
inc
bound
loop
aas
mov
sub
dec
or
xor
jmp
or
jg
mov
xchg
das
xlat
leave
fistps
test
mov
xor
movsl
pop
gs
sub
lock
mov
dec
push
mov
inc
mov
fwait
rcl
or
gs
dec
mov
dec
push
xchg
xchg
xchg
sbb
sbb
pop
popa
fidivl
test
jb,pt
jmp
jbe
in
je
out
shlb
pop
xchg
std
jo
mov
ss
inc
push
cs
xor
imul
add
cmp
jae
jmp
fisubl
pusha
jno
inc
into
pop
lahf
rcrl
fcomps
push
add
out
inc
add
sahf
or
mov
rcl
test
stc
xchg
and
ds
xor
call
imul
shll
aas
push
hlt
xor
sahf
out
and
sub
dec
cmpsl
in
ljmp
test
push
and
pop
das
sub
imul
or
repnz
push
xchg
push
mov
mov
movsl
mov
pop
lods
inc
mov
repnz
mov
push
lds
jo
add
imul
mov
mov
push
sti
arpl
mov
dec
iret
sbb
cmp
subl
fnsave
aam
test
sub
sub
mov
sarl
adc
mov
pop
adc
sbb
cmpsl
mov
sub
xor
daa
pop
dec
movsl
xchg
cmp
mov
insb
iret
sub
loope
pop
test
sbb
xchg
cmp
push
jl
jle
js
mov
sarl
pushf
cmpsb
fisttpll
mov
cmp
sub
lahf
or
das
push
lock
cli
ss
ret
inc
pop
inc
mov
xor
xchg
mov
neg
or
sub
mov
inc
add
jl
pop
push
and
xor
ret
cltd
rcrb
shll
jmp
push
shrb
rcl
fcompl
repnz
jle
mov
jmp
add
mov
and
dec
push
mov
into
out
jl
cs
loopne
cmp
push
cmc
jae
mov
or
inc
add
insb
lret
neg
cmpsb
push
adc
push
pop
push
jge
pop
adc
sete
aas
movsl
sub
popf
dec
rorb
cbtw
mov
cs
lret
adc
or
xlat
and
cmp
mov
add
es
jb
movsb
push
mov
dec
adc
test
divb
mov
xor
mov
inc
xor
jmp
push
xchg
sub
rcrl
add
nop
mov
add
xorb
pop
push
dec
js
cwtl
jg
push
and
orb
imull
std
stos
mov
and
mov
xchg
xchg
jmp
test
pop
jmp
add
pop
mov
mov
push
sbb
enter
ja
jmp
push
push
adc
or
stos
das
adc
imul
jns
cmp
inc
stc
addr16
aas
je
ret
pop
and
mov
lret
xlat
mov
lock
shl
aam
loopne
flds
mov
mov
mov
cltd
out
flds
and
mov
ljmp
or
sbb
sbb
test
pop
and
mov
add
and
hlt
fldcw
dec
movl
pop
inc
inc
xchg
lret
mov
sub
rolb
test
insl
push
xor
outsl
push
mov
inc
dec
fsubs
mov
pop
dec
sub
lret
sub
mov
jge
add
pop
lcall
inc
shll
lret
dec
xchg
outsl
adc
out
dec
pop
xchg
or
jecxz
out
leave
orl
out
jae
cmp
xchg
enter
into
icebp
movsb
xor
and
jl
int3
pop
pop
movsl
sub
jp
dec
imul
dec
data16
push
inc
mov
out
sbb
add
test
jnp
out
sahf
hlt
sbb
popf
push
add
xchg
mov
aad
aaa
xchg
push
aad
mov
popf
lret
jg
add
daa
or
dec
mov
aas
mov
adc
addr16
push
jmp
inc
pop
dec
sub
dec
and
inc
scas
sub
sub
aam
cmpsl
adc
out
mov
imul
in
lret
in
mov
inc
sub
xchg
lds
jmp
js
roll
push
xchg
add
xchg
mov
push
push
adc
mov
nop
stos
loope
rol
movsb
decl
cmc
jae
and
into
fidivrl
bound
cmpsl
or
inc
sbb
in
jns
aad
stc
mov
sbb
in
jg
push
lcall
lea
jg
mov
add
sub
mov
push
jp
fists
pop
aam
and
xchg
dec
mov
jg
cltd
pop
movsb
xlat
shll
in
data16
pop
adc
jecxz
pop
cli
je
mov
in
ds
push
sbb
jle
flds
out
add
xor
add
cltd
in
leave
cwtl
cltd
or
sub
cmpsb
icebp
jg
pop
or
jb
aaa
stos
jne
in
bound
js
nop
js
push
mov
sub
lret
sub
mov
push
sub
sub
jp
loope
mov
gs
rcrl
ss
cmp
ljmp
sbb
jns
xor
out
sti
out
sbb
andb
dec
lds
dec
mov
mov
popf
or
shll
cmpb
cmc
ss
or
dec
mov
mov
adc
jnp
ret
pop
incb
outsb
sub
push
sahf
inc
jno
das
jbe
outsl
out
bound
sbb
cwtl
pop
xor
sub
dec
test
mov
ja
sub
pop
xorl
adc
xchg
xchg
lds
xchg
cmp
fisubl
xlat
mov
cs
pop
rolb
movsl
xchg
and
sbb
adc
in
push
adc
mov
inc
push
jge
mov
mov
mov
mov
nop
pushf
insl
add
leave
imul
xchg
sub
adc
jge
jg
stc
and
sub
push
pushf
movsl
pop
add
mov
jle
test
add
inc
iret
inc
lea
pop
aam
inc
xchg
mov
les
sub
call
rcll
sub
mov
lcall
push
gs
les
into
ja
loope
push
dec
aad
adc
ficomps
push
pop
sbb
testl
ror
or
mov
sub
lret
fidivrl
clc
xchg
sbb
dec
mov
ret
loopne
push
xchg
movsb
and
test
mov
cmp
gs
sub
mov
mov
push
jns
xor
popa
repz
mov
adc
adc
push
sub
mov
xchg
cmpsb
enter
dec
aas
sarb
mov
xor
mov
jb
jbe
cmp
stos
repz
or
and
or
or
xchg
outsl
cs
ret
push
jne
cmp
scas
xchg
xor
cmp
add
mov
dec
push
jbe
ja
mov
fnsave
es
push
and
lret
rolb
mov
xchg
pop
loop
popf
sbb
xchg
xchg
ja
jns
jb
mov
testb
push
push
add
jmp
jno
or
inc
xor
inc
fnstenv
pop
lods
mov
cmpsb
inc
addr16
hlt
and
push
adc
hlt
dec
cli
sbb
lret
insl
jmp
int
jmp
inc
in
not
and
cmc
mov
mov
sahf
aas
inc
pop
cmp
mov
lret
pop
out
mov
mov
scas
xchg
cmpsl
adc
sub
rolb
sub
sbb
loope
add
out
or
and
sub
mov
lahf
int3
popa
test
mov
mov
jecxz
ret
push
inc
inc
push
cmp
jae
and
mov
aas
push
popf
flds
ljmp
push
jl
rclb
repz
mov
cmp
fiadds
xchg
add
stc
mov
inc
sbb
jno
es
iret
mov
movsl
popa
jne
out
dec
add
push
dec
cmp
imul
add
stc
dec
movsb
sahf
pop
sbb
aam
inc
arpl
push
and
jl
and
pop
mov
dec
cmp
pop
dec
jg
cmp
jmp
pop
stos
out
xor
sbb
xor
aad
movsb
cmpb
cmp
sti
jno
pushf
push
repnz
pop
loope
dec
ret
cwtl
rclb
xor
in
cmc
mov
or
mov
push
cwtl
or
test
cmp
pop
pusha
ja
lds
idiv
negw
xchg
pop
mov
mov
push
ds
mov
mov
stos
lods
sub
mov
je
notl
cmp
out
xchg
jnp
cmp
jmp
mov
rcll
scas
cmpsb
mov
inc
xor
sub
mov
xchg
add
nop
mov
mov
jo
sbb
insl
inc
sub
sub
push
les
sub
fildl
add
cmpsl
cmp
mov
mov
testl
das
cmp
in
push
mov
outsl
xchg
test
inc
inc
es
xor
hlt
test
ret
mov
popa
cmp
jnp
out
jmp
mov
lods
mov
push
push
loop
jg
xor
lock
es
loopne
jbe
lahf
js
fldl
xchg
xchg
xor
inc
subb
cmp
fimuls
in
outsl
ds
loopne
add
gs
sti
push
dec
or
ja
xchg
pop
mov
shr
in
aad
xchg
adcl
stos
add
popa
fwait
test
outsl
bound
maskmovq
divl
arpl
cld
stos
lds
lds
dec
cltd
xchg
cmpsb
cmpsb
sbb
pop
mov
cwtl
fistps
pop
add
cmp
clc
lods
adc
mov
cmpsl
test
pop
jno
xor
fimuls
jb
lret
inc
das
shl
or
push
hlt
shll
test
repz
stos
push
mov
xchg
dec
inc
jb
iret
rcl
and
cwtl
scas
mov
pushf
add
and
fsubrl
inc
mov
adcl
sbb
imul
adcb
rcrl
leave
jo
repz
adc
ljmp
mov
push
or
mov
sub
xorb
rcll
scas
pop
aaa
dec
into
testb
gs
dec
cwtl
outsl
dec
or
cmpsb
push
enter
and
dec
inc
add
and
dec
push
mov
cmpsb
dec
push
inc
shlb
sarl
shll
sahf
mov
xchg
jb
and
enter
mov
pop
xor
sbb
jns
testb
mov
in
or
lea
ja
rclb
pop
cmp
inc
jecxz
xchg
mov
push
cli
jne
mov
call
mov
repnz
hlt
mov
ficoms
popa
adc
sti
jns
pushf
pop
jo
stos
shr
into
jnp
and
repz
hlt
and
push
xchg
pop
jge
mov
xchg
cwtl
cs
mov
adc
add
xor
mov
cmc
cmp
js
pop
repz
cmp
xchg
cltd
and
jns
xor
dec
cltd
leave
pop
pusha
lahf
repz
fwait
clc
and
enter
jno
arpl
mov
push
out
cmp
push
or
dec
andl
mov
stc
mov
push
mov
ret
in
ss
cltd
fs
sub
test
cwtl
movsl
mov
das
add
sub
iret
xchg
in
repnz
cmp
add
movsl
ja
fdivrs
sbb
loopne
mov
aad
clc
add
hlt
mov
cwtl
mov
scas
stc
jg
sbb
inc
sub
outsb
scas
loope
or
sbb
push
mov
lret
jbe
lock
xor
mov
mov
loopne
ss
mov
into
and
std
mov
divl
push
dec
ret
mov
adc
ficompl
mov
inc
adcl
dec
sub
mov
int3
ljmp
jbe
dec
pop
inc
jg
aam
fcomps
pop
cmp
dec
test
imul
xlat
pop
mov
lock
rcrb
jne
test
aad
push
jle
sub
mov
leave
cmpb
insl
add
pop
mov
roll
pop
lds
lds
jb
cltd
xor
mov
sbb
mov
iret
pop
or
in
ret
stc
scas
xchg
iret
jae
mov
mov
lds
cmc
test
and
xlat
mov
jmp
aad
add
out
in
dec
movsb
sbb
cmpsb
fnstsw
xchg
sti
cmp
rolb
test
adc
testl
jle
stos
cltd
push
int
jo
nop
or
or
push
cwtl
mov
push
aam
jmp
add
pop
repz
je
pop
sbb
nop
pop
adcl
ds
dec
sub
data16
inc
fnstsw
and
mov
xor
and
insl
es
in
outsb
sub
gs
cmp
lret
mov
lds
andl
add
jge
cmc
mov
jl
inc
test
out
test
movsl
outsl
mov
insb
cwtl
lock
add
cli
adc
jnp
pop
imul
aas
lea
rorb
xchg
sti
pushf
mov
std
lahf
ror
insb
add
cmc
inc
jg
xor
scas
mov
pop
jmp
dec
addr16
inc
push
sub
mov
adc
fadds
aam
dec
imul
push
stos
xor
imul
jno
call
stos
or
fadd
sub
add
sbb
push
or
inc
sub
xchg
jle
lods
test
fs
push
xchg
add
js
xor
mov
mov
pop
imul
push
call
jle
mov
jle
mov
cmp
pop
outsb
jns
xor
ss
daa
cmpb
cmp
inc
jne
or
lret
shl
and
mov
dec
dec
jnp
cmp
orb
rorb
repz
jb
pushf
dec
xchg
ja
cwtl
test
pop
and
dec
jmp
lret
mov
add
cmpsl
int3
pop
in
ds
push
push
cmpw
or
sti
pop
lahf
ds
imul
push
xchg
push
enter
dec
cmp
jnp
dec
retw
insl
lea
mov
aaa
push
addr16
fistpll
cmp
dec
push
mov
inc
jbe
jmp
fimuls
cwtl
jge
pop
mov
sarb
add
stc
jbe
lret
or
mov
sbb
mov
push
mov
jno
push
data16
jae
inc
adc
mov
sbb
xchg
ss
adc
fwait
jecxz
test
ljmp
ss
arpl
inc
lock
pop
mov
shrl
imul
shl
inc
outsl
pop
mov
mov
or
sbb
bound
push
sub
std
mov
xchg
pop
pop
inc
and
insl
cld
add
out
leave
adc
in
loope
shrb
inc
push
inc
inc
loope
cmp
jae
stos
push
shll
shl
lock
mov
data16
shr
dec
dec
and
sub
mov
xchg
dec
jae
dec
movsb
sub
test
cmp
pop
push
adc
out
sbb
fiadds
pop
or
mov
adc
mov
pop
pop
imul
or
not
push
jg
cmp
fwait
outsb
shr
mov
mov
movsb
and
inc
popw
rcr
mov
leave
scas
xchg
cmp
mov
rcr
mov
aad
sub
inc
pusha
add
xchg
test
cmp
inc
pusha
pushf
ret
pop
add
mov
xor
add
iret
lret
fildl
icebp
int3
pop
movsb
fs
js
lcall
std
cli
out
pop
fadds
sub
and
xchg
fsts
movsb
fbld
pop
ljmp
repz
jle
xchg
mov
popa
fcoml
movl
enter
and
push
adc
and
inc
shl
icebp
jne
scas
push
imul
mov
inc
pop
xor
xor
out
outsl
mov
subl
in
pop
loope
outsb
js
jge
lret
pop
rcrl
push
out
fs
jno
hlt
daa
fs
sti
jno
jecxz
or
insl
pop
rcrb
hlt
pushf
stc
ret
pop
add
test
sbb
sub
or
loop
lock
mov
pop
cmp
xor
inc
mov
out
fdivr
lods
call
enter
std
jg
mov
repz
push
js
xor
in
inc
mov
mov
pop
adc
aad
jno
orb
add
cltd
lret
and
es
sti
or
out
mov
xor
mov
push
ss
mov
lods
push
push
inc
xchg
mov
scas
mov
mov
ret
xlat
es
pop
pop
add
sub
dec
lcall
dec
pushf
mov
dec
jl
inc
inc
jecxz
adc
mov
jle
adc
pop
jmp
add
repnz
pop
add
mov
roll
imul
jmp
ret
and
popf
jmp
dec
push
imul
psubq
repnz
dec
cmp
xorb
push
movsb
push
call
std
sub
enter
int3
and
mov
xchg
jb
ss
lock
jle
mov
jo
xor
jle
dec
out
fstpl
cmpb
push
xorb
mov
pop
adc
into
out
cmp
stc
in
int
fwait
stos
push
and
inc
xchg
jnp
cmp
xchg
jle
fadds
lods
fisttpl
sub
add
sub
stc
jnp
fsubl
add
loope
cmp
adc
daa
push
xchg
test
ljmp
scas
pop
daa
and
and
inc
lret
mov
aas
jge
xor
jns
xor
dec
mov
das
mov
mov
imul
push
and
jmp
add
sti
mov
sub
cmc
or
mov
adc
jno
das
sbb
xchg
ljmp
out
daa
fs
ror
adc
cltd
adc
push
pop
xor
int3
pusha
pop
lods
fwait
xchg
xor
push
pop
adc
repz
pusha
cli
jbe
or
mov
cmc
lds
push
cs
in
testb
iret
insb
mov
push
mov
add
xlat
sbb
loopne
or
xor
sti
or
repnz
ja
data16
rorb
rcrb
outsb
adc
fcompl
add
mov
fwait
push
js
enter
lret
arpl
adc
mov
push
sbb
mov
int3
or
xor
testb
pop
loop
popa
dec
adc
cli
lea
test
and
shll
push
adc
and
mov
shrb
int
xor
in
add
adc
sub
xchg
or
in
movsl
inc
call
or
mov
into
stos
sti
pop
mov
test
lea
lods
pop
jne
jo
push
notl
dec
sbb
ss
das
xchg
loopne
std
and
pushf
sub
mov
xchg
rcr
arpl
fdivrl
sar
aaa
mov
mov
aaa
lds
xor
xchg
aas
push
test
lock
xor
cmpsl
cmp
jns
push
ret
sbb
jno
fmuls
add
loopne
out
xchg
insb
fstpl
mov
pop
jge
sbb
mov
in
rcll
stc
inc
push
repz
scas
loope
cltd
mov
sub
mov
fstpl
sbb
imul
fistpll
mov
xchg
flds
stos
cmp
inc
stc
repz
stos
and
inc
adc
icebp
sub
or
xor
notl
loope
insl
xchg
dec
mov
out
fs
add
es
mov
mov
or
push
push
add
sbb
sbbb
or
jne
adc
leave
inc
in
fcmove
ret
sub
mov
and
mov
pop
xor
addl
les
xor
jmp
adc
mov
ja
jp
and
cli
and
xlat
jge
pop
stos
das
lcall
pop
sbb
pop
fisttpll
dec
icebp
rorl
stos
inc
inc
ja
sub
cs
pop
lahf
fnstcw
mov
pop
adc
pop
lcall
and
mov
fwait
incb
stos
add
imul
jb
and
sti
xchg
icebp
jmp
mov
dec
ja
aam
int
jae
cs
sub
cld
div
xorb
imulb
dec
cmp
jb
rclb
adc
push
sahf
xchg
ljmp
jle
mov
sahf
es
cmp
scas
les
mov
inc
cmp
mov
push
mov
aas
lds
or
clts
push
inc
out
inc
jmp
pop
dec
sbb
pop
ljmp
jmp
subl
lods
daa
jge
lds
xor
popa
lahf
enter
lds
inc
and
out
dec
adc
test
scas
in
rolb
cmpsl
xchg
fwait
mov
mov
jmp
cmp
xchg
cmp
mov
mov
and
lahf
push
or
xchg
xor
ja
and
inc
popl
arpl
das
hlt
xchg
movsb
xchg
rcrb
insb
into
jl
sbb
daa
push
mov
cld
popf
fnsave
add
bound
xlat
test
call
js
and
cwtl
mov
jno
addr16
lret
arpl
into
out
scas
out
adc
loopne
pop
mov
outsl
sbb
or
filds
stos
aam
lea
dec
add
mov
jb
xor
ljmp
jbe
add
scas
push
repnz
aaa
mov
xchg
dec
mov
fildl
adc
xchg
pop
sahf
es
xchg
or
mov
es
dec
mov
cli
add
mov
xchg
fcomp
scas
adc
jecxz
cmp
repnz
push
sub
jae
andl
xchg
lea
dec
and
and
push
in
xor
adc
shll
xorb
jmp
fs
mov
imul
mov
pop
sub
insl
dec
or
lds
scas
adc
lret
es
jno
test
cmp
sbb
cli
aas
into
add
add
jg
jae
jno
sahf
adc
sub
sbb
lret
arpl
cmp
cltd
pop
mov
test
jg
enter
jbe
outsl
decb
and
dec
xchg
or
jle
xor
add
shlb
sbb
sahf
inc
lea
push
out
popf
lea
roll
xor
or
lcall
jp
repz
enter
sub
mov
stos
xchg
xor
add
jmp
sub
xchg
add
pop
cmp
inc
mov
inc
xchg
sarl
das
popl
loope
outsl
into
push
ljmp
sbb
repnz
insl
outsb
mov
mov
adc
jns
repnz
pop
test
imul
or
fisubrl
cltd
sub
ja
adc
add
mov
xchg
sti
mov
shll
jmp
in
xchg
das
aad
in
mov
xor
mov
int
daa
sub
lcall
xchg
xchg
lret
adc
mov
mov
cwtl
js
cltd
js
fs
mov
xchg
xor
and
andl
movl
mov
mov
lahf
sub
mov
ret
pop
mov
xchg
enter
imul
shlb
cmp
jne
ljmp
add
cli
xlat
mov
jg
and
xor
cmp
icebp
out
dec
cmp
mov
dec
mov
shll
cmp
mov
movsb
sbb
jns
and
fidivs
rorl
out
negl
imul
xor
mov
lret
pop
push
cmpb
and
xor
stc
xchg
inc
xchg
outsl
mov
jg
xchg
jae
sub
call
jno
daa
shlb
mov
sub
ds
mov
lcall
sahf
add
xchg
mov
sahf
stos
mov
push
clc
cmc
adc
mov
jl
xchg
leave
dec
mulb
push
gs
outsl
and
jp
xor
cmp
cmpsl
fistps
jmp
or
push
mov
shrl
mov
xchg
xchg
jb
icebp
lods
aad
inc
mov
jo
jle
les
pop
repz
inc
jbe
in
adc
gs
or
dec
cld
test
test
pushf
sub
sub
aad
pop
sub
pop
fisubl
jae
jle
xchg
fnstsw
das
sub
fnstenv
pop
dec
loopne
and
cli
rorb
rclb
pop
movzwl
push
mov
cmp
adc
push
std
in
mov
les
sbb
scas
jl
push
icebp
lock
stos
jno
mov
add
push
or
fsubs
stc
add
shl
mov
mov
cld
icebp
mov
pop
jmp
roll
outsl
aad
testl
loop
int3
sbbb
lea
aaa
mov
lock
adc
rol
mov
mov
pop
ja
or
nop
andb
arpl
adcb
pop
xor
add
pusha
sarl
push
aad
dec
xorb
xchg
aam
repnz
add
push
mov
xchg
and
and
mov
movsl
inc
add
movsb
add
popa
fidivl
lahf
jmp
push
ficompl
or
clc
pop
movsl
xchg
test
jg
insl
js
mov
iret
and
outsl
ss
sub
pop
loope
jnp
int3
push
lods
ds
es
mov
mov
mov
negl
cld
aad
jge
mov
rolb
mov
and
mov
sub
add
int
pop
sub
stc
xchg
test
clc
stos
fisttpll
dec
xor
jg
nop
scas
push
loopne
mov
loop
hlt
mov
push
jle
add
inc
lcall
in
repnz
ja
loope
sbb
loopne
push
jnp
cs
jle
xor
fwait
movsl
mov
imul
ss
or
add
pop
push
shlb
cmpl
outsb
cmpsl
sub
push
mov
fwait
jno
jmp
add
xor
sbb
cwtl
jmp
lcall
add
mov
scas
popa
jl
jge
jo
inc
add
dec
daa
mov
test
and
sbb
out
ret
mov
jne
jo
test
pop
fiaddl
imul
adc
lock
outsb
cmpsl
je
sub
sbb
pop
add
jl
push
jnp
inc
addr16
sub
sub
push
mov
mov
cmp
rolb
mov
fcomps
lods
dec
imull
aas
adc
loope
xchg
pop
cmp
rcrb
clc
dec
xor
inc
push
or
mov
and
pop
mov
pop
insl
xchg
mov
icebp
rol
mov
sbb
pop
pop
mov
rcll
addr16
sub
pop
add
outsl
jg
icebp
movsb
gs
in
push
cmp
xchg
and
pop
mov
out
mov
mov
jne
xchg
lock
jmp
fisubs
or
mov
test
add
lea
mov
cmp
mov
nop
push
adc
push
cmp
fucomp
inc
test
dec
add
dec
cltd
popa
inc
pop
mov
gs
add
cmpsb
jge
xor
fwait
out
mov
pop
mov
rorl
or
xchg
mov
ss
or
pusha
add
mov
and
mov
push
setg
sbb
lds
mov
mov
movlhps
sub
int3
jge
jp
or
fdivl
aad
in
push
add
xchg
ljmp
ja
dec
mov
push
inc
inc
adc
neg
cmp
push
pop
leave
add
xor
pusha
cmpsb
into
sub
cmp
jmp
sbb
mov
leave
mov
push
xchg
xlat
movsb
icebp
xor
add
aas
loope
dec
or
mov
mov
lea
call
lea
outsb
cmp
inc
xchg
ret
gs
imul
push
hlt
add
sub
popf
cli
adc
mov
ja
mov
iret
lret
inc
mov
dec
arpl
mov
adc
sub
jecxz
movsl
add
mov
adc
mov
lea
add
mov
popa
cmpsb
stos
fildl
enter
xchg
repz
test
mov
dec
out
mov
inc
rcr
xchg
pop
popa
cmp
popf
jo
pop
out
dec
adc
inc
mov
sbbb
dec
inc
sbb
imul
ret
ret
and
je
std
xor
mov
int3
sub
enter
fwait
sub
nop
jno
xlat
gs
mov
pop
mov
rcll
ret
add
cmpl
mov
popf
cld
pop
or
mov
cmp
adc
js
jecxz
inc
mov
loopne
cmp
mov
fiadds
daa
data16
mov
addr16
into
add
xchg
out
jbe
loope
cmpsl
adc
mov
test
sbb
lods
jg
cmpsl
xor
fdivrl
popf
add
inc
outsb
xchg
testl
int
sub
xchg
or
arpl
outsb
xchg
mov
lds
cmp
push
andl
and
xchg
mov
add
push
cmp
add
xchg
aad
add
rcll
rolb
mov
xchg
jno
aad
add
clc
sub
and
push
mov
ja
pop
xor
mov
xchg
lds
std
fwait
in
idivl
fisubs
adc
in
and
pop
sti
jecxz
fcmovnu
addr16
xor
sbbl
sbb
out
push
js
pop
or
jecxz
fsubl
xor
test
sti
sub
cld
and
fdivrs
mov
or
jno
stos
xchg
mov
cmp
icebp
dec
sahf
clc
loope
lea
fsts
dec
fwait
cmp
das
jge
addr16
fldenv
stos
push
add
sub
sbb
sbbb
movsb
in
lahf
outsb
mov
out
das
test
jmp
cltd
lret
adc
or
scas
lret
stos
push
mov
or
mov
pop
cmp
aaa
mov
jle
ret
pop
or
cmpsb
mov
xor
mov
fidivl
inc
jge
adc
adc
mov
sarl
add
and
lcall
sti
xchg
jecxz
cmpsb
loop
rcll
test
stos
fmuls
es
jg
or
bound
insb
jg
cmp
mov
push
iret
imul
les
mov
lahf
sbb
or
js
mov
int
inc
jge
ret
pop
jno
inc
ret
inc
mov
imul
xchg
xchg
jmp
xchg
pop
sub
mov
and
ret
rol
mov
psllq
inc
call
pop
push
xchg
andb
sub
adc
push
dec
xchg
sti
push
xchg
xchg
adc
andb
aaa
pop
xchg
push
repnz
int
cli
xchg
mov
push
inc
push
cmpsl
pop
ret
test
xchg
testb
into
fidivl
stc
rcll
cmp
clc
ret
ror
and
lods
and
dec
sbb
dec
daa
enter
testl
or
jb
rcrl
pop
shll
add
rcrl
dec
jp
xchg
jnp
jne
xchg
cs
sbb
push
pop
outsb
xchg
enter
mov
xor
mull
pusha
insl
dec
sub
shrl
out
cmpsb
lock
cmp
lret
dec
and
mov
fldl
aad
pop
addr16
mov
mov
inc
cltd
add
fs
std
fmuls
sbb
jmp
jo
pushf
call
lahf
in
adc
add
into
and
test
call
mov
rcl
les
ss
push
pop
mov
aam
mov
xchg
mov
scas
xchg
imul
jle
jle
sub
dec
cmpsb
pop
dec
cmp
push
fwait
inc
jp
imul
fadds
sub
fsts
ljmp
dec
mov
dec
mov
das
pop
mov
jmp
sub
xor
add
dec
jle
mov
aas
jmp
mov
fucom
aam
mov
call
pushf
xor
xchg
subb
sbb
fisttpll
inc
or
push
jns
and
aaa
mov
add
pop
cli
aaa
or
jne
stos
xchg
mov
push
lret
repnz
and
inc
dec
fdivrp
hlt
push
test
inc
pusha
cmp
jnp
test
aad
cs
adc
mov
push
es
sub
push
pop
adc
and
adc
mov
push
leave
adc
dec
jne
xchg
stos
or
dec
mov
std
loop
jne
mov
xchg
sti
in
mov
outsb
cmpsb
push
pop
je
stos
mov
fnstcw
mov
dec
dec
pop
test
imul
xchg
dec
pop
lods
popf
push
fistps
dec
pop
lock
mov
icebp
nop
mov
jo
mov
mov
fwait
jnp
push
shlb
pushf
mov
jle
out
sbb
add
lods
xchg
jbe
mov
aaa
lahf
xchg
add
adc
dec
jp
xchg
rcr
out
dec
popa
in
outsb
fadd
ds
push
push
cltd
xor
ret
adc
repnz
inc
or
xchg
xor
outsl
mov
mov
push
or
sub
hlt
bound
dec
fs
pop
pop
jb
imul
and
cli
sub
test
push
stos
in
mov
out
and
mov
jne
sub
cli
jge
or
loop
test
ss
or
pusha
inc
adc
jg
std
test
sbb
add
inc
test
lret
leave
mov
jae
lcall
sbb
cmc
ss
push
mov
xchg
xor
cwtl
push
ds
jl
sbb
mov
adc
dec
shrb
jmp
fsts
dec
inc
fistpll
in
addr16
add
aaa
mov
cmpl
cmpsl
or
in
cmp
or
int3
pusha
push
cwtl
iret
add
pop
lret
sub
inc
call
jne
ljmp
dec
xchg
cmp
cld
pop
jo
test
pop
push
movsl
xor
push
addr16
mov
inc
push
imul
fidivrl
enter
stos
sbb
adc
cwtl
and
fdivs
rorl
adcb
or
inc
push
fdivl
scas
insl
mov
je
outsb
mov
jb
sub
jecxz
in
adc
inc
mov
gs
adc
adc
into
imul
xor
rol
inc
and
xchg
inc
mov
push
xor
and
aam
cmpsl
mov
or
jg
jnp
mov
int
adc
fiadds
adc
cld
mov
mov
std
test
add
jle
jno
inc
adcl
std
cmp
inc
sbb
mov
sbb
lds
test
mov
les
popf
fs
mov
lahf
in
imul
cmp
mov
aam
mov
mov
sbb
mov
shll
add
xor
imul
cmpsb
aam
aad
jbe
mov
sbb
mov
mov
lahf
mov
movsl
push
mov
adc
in
les
out
mov
sub
dec
das
pop
ss
fcoms
insl
shll
rol
sbb
dec
movl
add
xchg
mov
ret
add
cmp
xlat
push
ljmp
popa
inc
push
sbb
fnsave
out
pop
gs
adc
test
gs
pop
out
adc
lods
loop
add
divb
jl
in
xchg
dec
das
leave
cmpl
or
push
clc
xchg
cmpsb
add
mov
es
cmp
cltd
ja
mov
xor
pushf
sbb
mov
fildl
scas
push
cmp
sbb
movsb
in
mov
xchg
mov
pop
jmp
and
ds
ror
mul
pop
mov
js
push
pop
out
scas
fs
lea
es
jge
push
jmp
inc
ret
xlat
or
push
aaa
sub
jecxz
fdivs
add
sub
out
mov
sub
movsl
test
addl
xor
jmp
xchg
add
lcall
cmpsb
ss
dec
xchg
popa
int
mov
pop
fistpll
idivl
sbb
fnsave
ds
sub
jbe
xchg
lahf
cmp
push
mov
inc
pop
cmpsl
lret
or
add
mov
out
arpl
testl
insl
cmp
testb
or
mov
sbb
pusha
xchg
sbb
and
jmp
in
xor
je
in
orl
and
shrl
mov
movsb
ljmp
decb
cwtl
out
fmull
push
sub
xchg
daa
nop
push
cld
test
sub
sub
or
stos
dec
sbb
push
xchg
arpl
cld
or
hlt
xor
add
incb
push
leave
fwait
orl
pushf
pop
repnz
orb
inc
or
sbb
xor
pop
xchg
mov
mov
cwtl
je
inc
aad
mov
cmp
leave
fistps
cmp
or
push
in
dec
adc
sub
sub
js
xor
jnp
jne
jecxz
xor
sub
inc
cmp
sub
leave
xor
mov
xor
faddl
add
adc
sahf
loope
pusha
clc
pusha
rol
pop
inc
or
stos
fsubrs
loope
inc
repnz
xchg
dec
jp
or
mov
xchg
sub
xor
mov
inc
xchg
mov
cmp
fwait
jne
std
sub
sbb
adc
mov
push
or
adc
cmc
push
mov
in
jns
cwtl
ror
orl
cmp
imul
mov
addr16
decb
fnstcw
dec
ds
jecxz
sub
fcoml
rolb
mov
stc
or
cltd
mov
push
inc
loope
jne
lds
in
movsl
pop
les
jb
ss
arpl
sbb
movsb
fmuls
fucomip
mov
fdivrl
int
ficoml
lods
mov
leave
fimull
fisubl
push
movsl
lock
test
xor
inc
mov
outsb
xor
jne
fbld
data16
cld
aad
mov
and
mov
fdivrs
jnp
jbe
out
dec
aad
adc
jno
adc
add
repnz
jbe
pusha
leave
pop
cmp
sahf
cmp
push
outsl
pop
js
pop
fadds
adc
loop
mov
xor
out
xor
data16
xlat
or
mov
into
pop
into
lea
jmp
aaa
icebp
adc
cltd
jo
jae
addr16
ss
insl
and
scas
cmc
gs
jo
inc
sub
pop
mov
cmpsb
jo
inc
dec
xchg
dec
and
mov
xchg
inc
xchg
mov
sar
sub
movsl
pop
lods
jle
mov
xchg
loope
sbb
and
sbb
std
push
xor
mov
xchg
ficoml
loopne
jg
xchg
das
sahf
cmpsb
pop
aam
inc
mov
negb
stc
jno
arpl
pop
dec
lds
into
mov
out
push
jne
lea
sbb
loope
mov
bswap
jp
fsts
pop
es
xchg
xchg
test
into
test
leave
subb
adc
sub
mov
and
nop
add
mov
mov
mov
xlat
fimuls
lods
cs
cli
sarb
rol
js
fistpll
lret
jne
call
es
lds
aam
mov
cltd
rcr
jl
sbb
mov
ljmp
jb
xchg
cmpsb
sub
fdivrs
ret
jl
dec
mov
mov
in
pop
pop
dec
dec
push
mov
insb
dec
jmp
adc
xor
inc
mov
and
leave
add
xchg
ds
push
or
push
xchg
daa
popa
sbb
sbb
cwtl
jae
and
movsb
push
and
sub
xchg
gs
cmpsl
dec
jb
jb
incb
cmp
adc
lea
mov
jecxz
lea
cmp
pop
sbb
dec
lods
dec
scas
roll
outsb
lret
push
or
and
lret
bswap
mov
arpl
mov
mov
addr16
test
mov
add
lock
insl
xor
stos
out
pop
and
push
jle
adc
test
sbb
roll
jnp
lea
je
movsl
push
test
mov
mov
hlt
mov
ret
fs
adc
inc
ds
jmp
push
pop
mov
jmp
jecxz
sbb
mov
pushf
out
dec
aaa
scas
mov
mov
iret
test
bound
mov
aaa
lret
jmp
outsb
loope
cmp
lret
inc
or
and
mov
jmp
jg
sbb
mov
mov
dec
into
mov
xor
in
or
mov
lcall
inc
cmp
inc
scas
xchg
sar
mov
lcall
and
js
cmp
aaa
add
or
rcll
add
insl
fldcw
or
jb
inc
hlt
dec
enter
mov
sub
inc
icebp
and
xor
das
push
movsl
inc
cltd
jae
push
aaa
add
gs
pop
das
pop
ficoms
cmp
popf
fnsave
adc
cmp
es
into
jnp
mov
rcr
insl
insb
mov
xor
adc
push
aad
xchg
push
sub
js
push
insb
dec
les
lods
pop
hlt
int3
aam
repnz
and
sbb
neg
mov
mov
inc
lods
loopne
and
or
add
pop
push
lret
sub
sub
mov
pop
test
iret
xorb
mov
sbb
and
mov
mov
cmpsl
repz
mov
xchg
add
fstpl
dec
shl
stos
push
inc
push
xchg
cwtl
adc
test
jbe
movsb
shll
or
mov
jp
mov
push
lods
daa
nop
pop
aam
les
cmp
mov
outsl
xor
sbb
js
add
cwtl
mov
divl
outsl
jnp
into
icebp
cmp
shrb
sti
je
mov
adc
cmp
adc
push
lret
sub
and
push
pop
and
adc
daa
pop
cwtl
lods
mov
scas
pop
fsub
lods
popa
aaa
mov
adc
clc
dec
xor
pop
out
push
pop
outsl
insl
add
jns
icebp
xchg
fdecstp
xor
int3
add
pop
loope
xchg
rcll
test
mov
lret
inc
decb
or
inc
push
pop
inc
jo
add
adc
push
dec
mov
scas
mov
les
enter
sbb
push
pop
mov
je
in
lret
dec
fs
or
stc
mov
lds
pushf
push
cld
and
cmp
xchg
cmp
inc
into
mov
sbb
jae
les
xchg
test
lock
bnd
jg
cmpl
fsts
iret
or
lahf
mov
mov
xor
pop
xlat
loope
sbb
imul
jne
ret
inc
movsb
xchg
hlt
and
nop
data16
or
xchg
cwtl
mov
mov
dec
ret
in
push
push
jmp
imul
jbe
lret
jge
test
sbb
sub
cmp
lcall
test
inc
mov
pop
add
popa
iret
lock
out
shr
xchg
mov
adc
sbb
fbstp
adc
xchg
mov
mov
xor
dec
mov
dec
std
loopne
xchg
repz
mov
mov
add
cli
mov
push
adc
clc
inc
dec
push
sub
scas
aad
push
std
das
jnp
and
mov
sbb
and
push
push
inc
adc
int3
inc
pop
inc
sbb
adc
inc
lods
cmp
orb
out
arpl
mov
repnz
imul
ret
out
and
insb
mov
and
mov
xor
mov
outsb
xchg
sub
push
popa
mov
xor
jle
ss
scas
into
outsl
xor
shrb
imul
outsl
aaa
stos
cmpsb
into
ds
aam
mov
dec
push
addb
sbb
pop
mov
cltd
sub
enter
loop
imul
inc
cmpsb
or
sbb
and
pushl
jecxz
jl
in
sbb
fsubr
xchg
sbb
ljmp
out
jne
push
mov
cmpsb
ja
mov
arpl
push
push
xchg
mov
inc
outsb
pop
movsb
jnp
ret
xchg
cwtl
add
push
movsl
sahf
jle
les
popf
or
cmp
rcrb
and
jle
sbb
or
push
jge
cmc
xchg
push
xchg
jecxz
daa
lret
sbb
jne
jae
int
push
js
inc
daa
daa
mov
add
jb
mov
insl
ret
and
sbb
and
cmp
mov
xchg
dec
mov
mov
stos
sbb
sbb
dec
xor
push
and
xorl
je
adc
mov
jmp
lret
pop
cli
lea
daa
lds
test
loop
jae
push
scas
jne
adc
cwtl
mov
cmp
adc
push
stos
es
sahf
ja
imull
pusha
jg
dec
mov
bound
xor
lock
and
cs
adc
or
cli
cmp
in
xchg
xor
push
mov
gs
in
pop
daa
or
test
sub
movsb
mov
out
out
stos
xchg
inc
or
fistpll
dec
adc
xchg
add
xor
cmpsl
imul
push
pop
jmp
ja
imul
scas
mov
jnp
testl
xlat
inc
sarl
and
sahf
dec
bound
outsl
dec
xor
shr
mov
insb
adc
push
test
xchg
popa
push
dec
outsb
mov
lods
jne
out
mov
js
push
dec
not
loop
mov
cmp
repz
or
push
and
sub
dec
mov
cltd
mov
dec
xorb
out
jecxz
mov
les
int3
arpl
xor
int3
xchg
ret
jns
testl
fistl
or
in
popf
jg
xchg
nop
pop
test
insb
cmp
jbe
mov
mov
mov
lock
int
add
test
dec
xor
outsb
in
mov
pop
cmpsb
inc
fimull
pushf
lds
jecxz
lods
divl
cmp
jae
jp
jp
stc
test
sbb
dec
mov
mov
mov
daa
mov
mov
popa
pushf
cwtl
lahf
scas
pop
jl
or
test
or
cwtl
cltd
das
push
icebp
jo
int3
sbb
in
rorl
mov
xchg
pop
push
sub
cltd
cvtps2pd
sbbb
xchg
lahf
adc
jae
aas
push
icebp
sub
lea
mov
mov
mov
cmp
jb
scas
test
sarb
pop
std
xor
cwtl
jmp
repz
inc
cltd
add
rolb
push
shrl
inc
or
lds
jne
jmp
shrl
pop
dec
push
jge
mov
cli
hlt
lock
pusha
adc
or
inc
sbb
popa
sub
aam
sub
outsb
fistps
addr16
jae
add
aam
cmc
and
mov
sahf
fdivrp
xchg
mov
or
pop
lea
mov
cmp
and
cld
push
sbb
xor
daa
repnz
scas
mov
insb
mov
in
mov
jbe
rcrl
mov
cwtl
inc
jecxz
xchg
aad
xchg
sbb
jmp
sti
adc
mov
pushf
or
lods
ror
cmpsl
out
ss
je
cmc
scas
push
xor
sub
mov
adcb
test
popa
pop
arpl
movsb
test
and
imul
stos
fcomi
int3
int3
insl
shlb
inc
and
mov
sub
ds
add
adc
inc
push
sub
mov
cli
stos
subb
xchg
sub
or
and
psrlw
mov
push
js
repz
rol
aaa
popf
mov
mov
test
popa
sbb
mov
test
popf
stos
fsubrs
cmp
cwtl
jle
hlt
mov
mov
orb
aaa
xchg
push
lods
xchg
xor
xchg
pop
sub
jns
insb
mov
sarb
jmp
and
dec
mov
or
and
popf
jae
popf
jmp
loop
and
out
xor
sbb
pop
sub
inc
add
loopew
mov
ret
in
lds
add
scas
std
or
scas
leave
fdivrs
daa
shll
pop
dec
scas
ss
sbb
mov
imul
mov
push
imul
dec
in
mov
sbb
lock
adc
fistpll
mov
inc
mov
mov
cwtl
stos
mov
mov
daa
imul
fidivs
or
fs
mov
ja
mov
jg
sub
call
cmp
mov
jno
popa
xorb
ret
push
loope
inc
outsb
insl
aas
or
aad
cmp
push
shlb
cltd
lcall
lock
in
ljmp
sbb
cmp
xchg
int
pop
cmp
sbb
xchg
push
aad
lds
daa
inc
ss
push
push
and
sub
dec
movzbl
inc
mov
xchg
sub
lea
dec
add
xor
dec
sub
lea
sub
inc
mov
add
dec
jne
dec
mov
mov
lea
pop
lea
mov
pop
lea
dec
pop
inc
mov
mov
inc
and
add
or
lea
inc
imul
add
add
ret
push
push
mov
or
push
lea
imul
and
dec
dec
dec
push
sub
or
inc
mov
push
dec
dec
movzwl
lea
imul
mov
dec
push
and
mov
mov
push
mov
dec
xor
inc
inc
push
dec
add
push
mov
dec
pushl
lea
call
add
add
mov
mov
add
or
inc
add
movzwl
pop
ret
or
cmp
jb
movzbl
xor
lea
dec
mov
lea
lea
mov
dec
mov
inc
xor
dec
or
mov
inc
mov
movzbl
cmp
jb
pop
inc
dec
inc
dec
dec
and
sub
dec
sub
imul
xor
add
sub
xor
inc
imul
xor
lea
inc
mov
inc
dec
test
jbe
inc
mov
sub
lea
inc
inc
movsbl
inc
inc
movsbl
imul
xor
and
inc
mov
mov
imul
add
movzbl
mov
lea
add
movswl
or
and
dec
mov
mov
mov
inc
mov
inc
sub
mov
add
mov
sub
or
dec
imul
dec
dec
jne
sub
mov
add
add
dec
mov
imul
lea
movzwl
lea
mov
mov
mov
add
mov
dec
lea
lea
add
dec
mov
or
dec
test
jbe
lea
sub
lea
inc
movzbl
xor
inc
dec
xor
inc
lea
movzwl
mov
inc
dec
inc
dec
add
lea
add
xor
add
and
dec
imul
mov
mov
movsbl
movzbl
add
and
add
imul
inc
and
sub
dec
mov
mov
dec
movzbl
sub
dec
mov
add
imul
mov
movzwl
mov
movzbl
sub
mov
add
mov
jmp
push
sub
inc
dec
movswl
mov
add
mov
add
mov
sub
dec
lea
dec
mov
add
lea
mov
dec
add
mov
movsbl
dec
lea
lea
inc
mov
add
dec
imul
inc
imul
inc
inc
inc
inc
sub
xor
mov
mov
cmp
je
imul
mov
mov
push
movsbl
call
call
dec
imul
call
call
xor
lea
lea
dec
lea
mov
add
ret
dec
inc
pop
dec
ret
push
imul
mov
dec
add
xor
push
mov
dec
push
movzwl
push
sub
push
or
mov
dec
imul
inc
call
mov
push
mov
dec
xor
mov
sub
inc
neg
mov
inc
add
add
lea
sub
mov
dec
dec
mov
mov
dec
inc
dec
sub
dec
je
dec
inc
inc
mov
mov
or
mov
sub
movswl
mov
mov
repnz
mov
sub
add
add
jmp
inc
dec
lea
mov
mov
mov
imul
lea
mov
lea
dec
dec
mov
mov
jmp
fwait
in
add
xor
popf
sub
movsl
iret
sti
inc
and
hlt
sub
popa
fsts
sahf
movsb
push
gs
mov
xchg
add
push
les
adc
xor
outsl
mov
pop
sbb
push
adc
enter
fadd
loopne
pop
pusha
lcall
xor
dec
dec
sbb
lcall
and
pushf
or
xchg
pop
push
sub
gs
xchg
pop
adc
cmp
inc
lods
xchg
jbe
lods
sub
mov
iret
add
lock
js
mov
pop
cmp
movsl
mov
inc
cli
fcom
aam
mov
dec
fstpt
cli
fcompl
pushf
cmp
or
aam
test
bound
cmp
pop
movsl
rclb
jecxz
mov
repz
rorb
subl
adc
icebp
lods
or
cwtl
int
bound
xor
or
addb
in
mov
int3
push
cli
divl
sub
xchg
jne
sahf
ds
mov
add
addl
mov
hlt
clc
mov
ja
mov
xlat
cmc
push
pop
cs
mov
sub
out
in
out
std
cltd
sbb
mov
mov
ja
cltd
popl
in
sar
jne
ret
inc
into
in
popl
in
push
fldt
adc
mov
mov
dec
and
repnz
pop
add
add
fcmovnbe
push
cmp
mov
add
hlt
sbb
data16
ror
enter
jb
nop
into
sbb
or
adc
mov
xor
out
xor
out
addr16
aaa
push
pop
jns
add
adc
pop
fidivs
movb
cmpl
imul
mov
loop
out
xchg
jo
enter
and
fcoms
rcrb
das
jp
mov
loop
pop
sbb
or
incb
inc
push
xor
adc
inc
sbb
out
jbe
mov
cmp
arpl
xor
bound
popa
jp
and
add
adc
cmc
and
dec
pop
mov
js
shll
aam
inc
or
pop
ret
and
pop
dec
fcomps
and
sub
je
mov
fs
jnp
or
mov
enter
insl
ljmp
mov
inc
repz
stos
push
in
mov
and
vphaddudq
add
dec
dec
adc
add
mov
cwtl
xchg
in
lcall
fsub
jmp
rcll
pop
ljmp
push
aaa
mov
cli
call
es
in
out
jno
mov
out
pop
ja
movsb
and
fwait
lock
xchg
inc
pop
xlat
pop
out
pop
pop
jecxz
mov
in
adc
and
repnz
inc
xor
mov
cmp
ss
push
xor
mov
add
inc
fwait
daa
sbb
fisubrl
mov
sub
fadds
jns
add
int
dec
scas
cmc
das
add
pop
sahf
mov
sbb
lahf
andl
jge
jg
and
out
sti
jo
adc
add
inc
push
andl
fisubrs
test
cltd
mov
clc
and
js
out
sbb
fistl
jmp
mov
mov
pop
adc
jecxz
insb
cmp
add
fcomps
mov
sbb
loopne
pushf
and
xchg
jbe
sub
rcll
mov
mov
push
mov
mov
jl
aaa
aaa
scas
addb
imul
test
mov
imul
sub
stos
inc
lods
out
sub
ja
sbb
mov
xor
or
and
sub
xorl
xchg
in
mov
sbb
adc
shlb
addb
sbb
cmpsb
rcrl
add
cmp
xor
xlat
orb
imul
inc
jnp
loope
xor
lock
imul
pop
jns
iret
insb
leave
jle
jb
mov
dec
push
scas
push
push
sub
mov
cld
sbb
mov
sahf
pop
mov
or
push
das
aaa
cmp
ss
push
out
adc
outsb
adc
mov
add
loopne
jo
in
rcr
stos
fldcw
out
add
leave
notb
push
push
xor
flds
jno
xchg
shrl
mov
and
mov
inc
test
ds
imul
mov
push
push
inc
arpl
pop
fidivrs
insb
and
lea
dec
mov
sti
mov
xchg
push
dec
xlat
mulb
mov
mov
addr16
xchg
fcoms
and
push
mov
aam
pop
aas
int
movsl
lock
xchg
adc
mov
jbe
test
bound
xlat
mov
pop
inc
push
out
imul
pop
popf
mov
inc
mov
pop
jl
rcll
xor
sbb
cmp
mov
jg
mov
movsl
push
rcll
pop
inc
loope
test
outsb
into
mov
cmpsb
mov
daa
cs
sub
add
lds
push
pop
jae
cmc
adc
add
clc
xchg
pop
inc
mov
call
jle
mov
jmp
clc
pusha
and
cli
mov
xor
pop
pop
hlt
mov
into
faddl
fistps
es
adc
mov
cmp
mov
dec
sti
inc
mov
push
out
mov
fwait
and
jae
aas
mov
jl
xchg
in
push
pop
dec
mov
fildll
pop
push
stc
addb
jb
add
or
add
xchg
cwtl
or
xor
rclb
cld
pop
repnz
jmp
loop
sti
cltd
dec
dec
cwtl
call
in
loopne
mov
inc
insb
jb
dec
outsb
sub
cmp
sbb
mov
inc
pop
scas
inc
jmp
dec
jb
xor
lock
jbe
and
lahf
nop
daa
out
ret
jb
arpl
xor
pop
add
ljmp
or
add
data16
shl
pushf
leave
repnz
pop
and
mov
rorb
xor
pushf
popf
icebp
call
lret
lcall
loopne
dec
pop
out
inc
cmpl
jmp
lods
sub
xor
shlb
daa
loope
mov
cmp
jb
and
mov
inc
iret
pusha
sahf
adc
or
push
pop
push
lea
gs
mov
sbbb
in
add
fwait
rclb
mov
mov
fwait
cmp
test
dec
push
xchg
cmc
cwtl
dec
add
push
pop
or
insl
cld
shlb
pop
rclb
iret
rorb
fcomps
outsb
push
test
ds
xchg
fldt
and
subb
push
add
pop
dec
imul
das
movsb
stos
mov
adc
dec
and
pusha
and
icebp
aaa
push
das
shrb
adc
dec
sbb
pop
movsb
lods
js,pn
dec
pushf
cli
sahf
cwtl
xor
jmp
and
lahf
dec
push
cld
sahf
mov
lods
jl
jnp
xlat
inc
inc
movsb
sub
lahf
repnz
jo
cs
sub
jae
sahf
xor
loope
cmp
pop
add
mov
mov
outsl
mov
mov
ss
sbb
repz
stos
xchg
negb
cmp
lret
xchg
sbb
inc
dec
movsl
out
xchg
test
mov
test
fstps
cmp
lods
js
xor
xchg
dec
add
mov
and
pusha
add
push
or
nop
shll
pusha
add
pop
dec
cli
test
or
jne
aaa
mov
pop
add
lahf
idivb
jbe
fistps
lahf
jge
ror
mov
ficompl
sub
nop
gs
or
inc
inc
pop
and
ret
mov
sbb
orb
jo
hlt
xchg
aaa
adc
js
ds
ss
sbb
js
mov
sbb
dec
test
pop
aas
sbb
xchg
pop
cmp
mov
movsb
jno
push
mov
inc
mov
mov
push
pop
add
and
mov
jp
xchg
aam
mov
nop
es
hlt
insl
cmp
jns
push
fldt
mov
cmpsl
jl
hlt
xchg
lret
incb
xchg
sub
enter
movsb
ret
or
les
int
xor
inc
lret
inc
mov
dec
cs
push
jmp
push
lret
push
mov
mov
jb
ret
sbb
vcmpss
push
mov
movsb
add
add
loopne
inc
mov
nop
cmp
sbb
fildll
imull
xchg
and
pop
jge
adc
movsb
outsl
test
mov
adc
repnz
ds
imull
test
adc
sub
mov
fnstcw
lea
je
pusha
sahf
lret
cmp
sub
mov
mov
xchg
ss
lahf
daa
cli
jbe
repnz
xor
and
cld
xor
movsl
aaa
pusha
dec
rcrl
icebp
aam
pusha
mov
inc
push
leave
dec
dec
inc
mov
stc
jecxz
and
xchg
aas
cmp
adc
repnz
dec
inc
sub
rcr
jbe
aad
test
pusha
data16
pusha
outsl
push
or
orb
sbb
add
gs
pushf
inc
add
dec
pop
dec
pop
and
ljmp
cmp
ljmp
cmc
add
in
cmc
xchg
pushl
jns
add
fadd
lock
and
inc
mov
add
inc
jne
and
stc
dec
fnstcw
xchg
or
dec
arpl
data16
sbb
push
aas
push
push
cmp
jp
std
mov
outsb
in
jge
cs
pop
cwtl
out
loopne
ja
jmp
fcompl
cmp
mov
popa
fwait
add
dec
mov
push
xchg
fisubl
cmc
cmpsl
fcoms
leave
push
xor
cli
mov
addb
and
les
sbb
dec
push
add
scas
pop
lret
and
xchg
push
sahf
jge
addb
nop
lock
ds
jbe
sbb
fidivrs
test
mull
or
mov
out
mov
fiadds
out
xchg
xor
jmp
and
adc
jmp
push
sbb
dec
mov
pop
hlt
dec
adc
cmp
cli
push
or
mov
push
repnz
dec
add
int3
sub
in
jnp
mov
jb
and
cld
mov
es
add
pop
scas
pop
push
adc
or
pop
das
scas
stos
jg
lock
in
jge
and
repz
test
das
mov
dec
push
mov
xlat
mov
push
mov
sbb
scas
xchg
sub
mov
pop
into
out
lea
rep
push
mov
or
cmp
fildl
xchg
sbb
and
stos
pop
cmp
sbb
mov
push
fmuls
dec
mov
sub
lcall
push
cmpsb
add
movsl
lahf
daa
sbb
call
fwait
movsl
int
push
cmp
test
ret
test
cmp
out
mov
push
rorb
iret
cmp
in
insb
roll
mov
popa
sti
mov
jge
inc
fmuls
xchg
add
mov
sub
cmpsl
into
leave
xchg
and
inc
test
jmp
jnp
jns
cs
lret
xchg
je
adc
int3
icebp
ret
and
xor
lahf
xchg
or
push
imul
test
fs
into
jecxz
mov
insl
lret
repz
jl
into
adc
pop
iret
pop
aam
idivl
and
pop
aad
adc
es
mov
push
int
push
dec
lods
xchg
js
outsl
mov
cmc
repnz
imul
sub
sub
pop
xor
lret
dec
sahf
xchg
xchg
test
push
repnz
xor
sub
add
adc
and
mov
ficompl
pushf
ret
imul
add
and
mov
cs
sub
add
mov
xchg
sub
lds
jae
cwtl
sub
push
pushl
sti
mov
int
hlt
int
movsl
lahf
lahf
fbstp
cmp
adc
test
dec
dec
mov
stc
inc
adc
mov
arpl
inc
jecxz
jecxz
loope
hlt
aam
mov
xor
icebp
pop
in
mov
movsl
sub
push
pop
lahf
sbb
cmp
out
mov
mov
out
mov
int3
push
push
xlat
sub
popf
ljmp
das
js
aas
or
les
push
movsb
lock
sti
xor
stc
mov
loopne
jno
xor
push
in
push
lret
outsl
sbb
and
cmp
inc
in
push
std
xchg
inc
loopne
cwtl
leave
mov
xor
dec
popf
or
pop
cmp
add
sbb
sbb
push
out
xlat
cmpsl
mov
mov
pop
mov
jl
mov
adc
cltd
xor
xor
mov
mov
ds
xchg
jo
fsub
outsl
hlt
adc
jbe
sti
push
mov
bound
fadd
popf
repnz
or
lods
add
in
jne
or
sahf
pusha
push
out
int
cmpsl
out
mov
insb
xor
stos
les
jae
cmp
icebp
mov
jae
inc
adc
jno
aam
outsl
cmp
outsl
test
push
int
inc
adc
sbb
lea
loopne
shll
push
mov
push
pusha
aad
addr16
push
fcomip
adc
mov
and
sbb
leave
fcmovnb
addl
mov
test
mov
sub
jecxz
fcompl
arpl
sbb
inc
mov
fadd
jl
ja
jno
out
rcll
xor
out
push
and
lcall
sbb
fistpll
loopne
add
mov
cmp
push
fists
ficoms
xor
subb
mov
and
pop
push
jl
mov
cmp
stos
jno
inc
adc
ds
mov
mov
into
cmp
aam
ljmp
inc
push
mov
push
mov
lea
dec
call
mov
add
call
add
push
lea
call
dec
dec
mov
dec
imul
inc
call
add
inc
dec
lea
add
add
xor
inc
mov
add
lea
lea
movzwl
call
imul
add
movswl
mov
and
call
inc
inc
call
dec
lea
mov
lea
sub
dec
mov
add
xor
pop
dec
dec
mov
add
mov
pop
movzbl
dec
pop
inc
or
lea
add
pop
mov
inc
dec
dec
dec
add
mov
add
pop
mov
and
pop
mov
mov
mov
inc
add
call
mov
add
sub
mov
ret
add
movzwl
push
mov
mov
push
mov
imul
push
add
mov
push
sub
add
push
lea
sub
mov
and
xor
push
mov
ret
push
dec
push
or
xor
add
add
push
or
mov
dec
call
pop
ret
jmp
mov
sub
pop
pop
ret
push
lea
movzbl
dec
xor
mov
lea
dec
movzbl
inc
dec
lea
add
inc
dec
lea
sub
lea
add
inc
add
lea
add
sub
dec
inc
lea
sub
pop
ret
sub
mov
mov
dec
xor
mov
sub
mov
mov
mov
sub
mov
dec
add
xor
dec
xor
mov
add
imul
inc
mov
dec
dec
mov
imul
movsbl
cmp
jb
movsbl
push
add
dec
push
movzbl
lea
push
add
inc
xor
mov
imul
xor
imul
mov
xor
add
inc
push
add
movswl
push
inc
dec
pop
add
movzbl
lea
and
imul
imul
xor
imul
and
add
xor
dec
lea
mov
inc
and
mov
add
inc
movzbl
movswl
lea
imul
add
sub
inc
add
sub
add
movzbl
add
and
and
inc
or
dec
add
inc
inc
or
mov
lea
imul
inc
jmp
add
inc
add
or
add
mov
add
add
add
nop
add
jp
inc
add
enter
fwait
inc
add
mov
add
or
lea
pop
inc
mov
cmp
sbb
jno
aam
jmp
outsl
jns
sub
sbb
jo
scas
sub
adc
add
sub
ss
mov
je
das
fdivs
pop
scas
sub
mov
inc
push
int3
mov
inc
push
int3
nop
add
push
sbb
jae
add
call
mov
mov
lds
imul
daa
dec
jg
push
jo
and
pop
xchg
stc
cwtl
movsb
cmp
sub
push
xchg
test
mov
dec
sti
dec
add
sar
jnp
mov
cmp
adc
and
hlt
adc
std
es
and
xor
pop
lock
int
pop
mov
inc
fsub
xchg
add
add
int3
xlat
sbb
push
jl
pop
mov
fwait
adc
negl
xchg
mov
or
or
pop
adc
add
sbb
aas
lds
lock
lret
and
sbb
adc
nop
pop
pop
ja
xchg
xchg
in
aad
xchg
inc
rorl
sub
sub
insl
mov
mov
sbb
inc
fldl
and
push
dec
mov
adc
mov
push
jle
test
icebp
and
out
pop
adc
jp
mov
or
pop
ja
sub
lea
dec
hlt
out
call
or
imul
push
fcmovnb
xchg
test
mov
xor
aaa
pop
mov
dec
ror
shll
jnp
xchg
cmp
lcall
cmp
psrld
or
idivl
ja
dec
icebp
and
pop
pop
test
lods
mov
inc
lock
js
pop
mov
lcall
out
mov
sahf
mov
inc
xchg
and
nop
sbb
mov
icebp
das
adc
incb
xor
movlps
lods
out
stos
iret
jmp
lret
shll
sub
frstor
jne
movsb
leave
jl
loopne
pop
shlb
cs
or
push
pop
imul
fsubrl
int3
cwtl
dec
fmull
and
into
icebp
mov
dec
and
pop
mov
icebp
ret
mul
add
push
inc
jne
adc
stc
push
nop
cs
and
xchg
outsb
daa
jmp
movsl
outsb
and
push
pshufw
out
sub
in
cmpsl
mov
jno
sub
out
pop
or
shlb
scas
pop
int3
fisttpl
xor
pop
sbb
xor
and
in
pop
add
sub
push
movsl
dec
cs
cli
pusha
adc
aam
in
xchg
int
pop
hlt
ret
cmc
mov
xchg
mov
insb
sub
mov
xlat
aaa
lcall
push
dec
testl
aaa
push
jnp
lret
push
sbb
push
leave
loope
mov
sbb
cmp
out
stc
cs
xchg
jnp
or
leave
inc
lods
jns
push
xchg
int
dec
rcrl
fs
stos
addr16
xchg
lcall
xor
fsubr
cmp
fcomp
cmp
cli
in
push
pop
sbb
insl
in
push
add
mov
lret
mov
mov
ds
pop
cltd
popa
clc
adc
mov
cmp
fstp
les
or
add
jno
jae
fwait
sahf
adc
out
inc
jne
xor
inc
fiadds
pop
pop
vphaddwq
pusha
sub
lcall
jbe
dec
sbb
cwtl
and
stc
mov
sti
movsl
cltd
dec
sbb
inc
lcall
push
jns
or
ret
shll
mov
mov
mov
das
pusha
test
and
test
add
dec
sbb
mov
cmc
mov
icebp
mull
jmp
in
sub
pop
xor
mov
shrd
int
aaa
fsub
shrb
jno
loopne
insl
aaa
push
nop
sbb
out
inc
int3
sti
loop
test
sbb
xchg
movsb
scas
cmp
lds
mov
test
jno
add
stc
fmul
out
fiadds
and
or
popf
aad
insl
aaa
fdiv
add
xlat
loope
xlat
xor
jbe
fs
int
pop
inc
loope
js
and
mov
sbb
dec
pop
xchg
push
xchg
jnp
lea
add
shll
nop
or
dec
loopne
and
popf
ficomps
and
inc
jo
repz
leave
cmc
xor
out
push
movsl
fimuls
mov
and
in
jp
adc
or
sti
add
out
shll
arpl
or
xor
and
out
mov
movl
ret
pop
lret
jmp
and
imul
or
mov
repz
es
push
pushf
cmp
mov
mov
dec
int
mov
add
sub
js
jl
in
into
insl
dec
jnp
arpl
insb
lcall
aas
or
jl
mov
shrl
aad
outsl
ror
add
cmovne
fs
cmpsb
mov
jbe
test
dec
clc
or
dec
xor
ret
cmp
enter
jbe
or
inc
lea
inc
mov
jecxz
jns
inc
pop
push
aam
in
push
push
adc
sti
adc
arpl
mov
lcall
jp,pn
movsl
sub
cld
jge
inc
mov
jmp
xchg
bnd
mov
jnp
in
and
or
mov
push
mov
sbb
xchg
popa
imul
push
push
mov
dec
sbb
push
shll
sbb
sarb
push
iret
mov
pop
mov
std
push
cmp
cmp
xor
sarl
cmp
or
adc
adc
lods
fimuls
popa
fisttps
dec
adc
mov
int
or
adc
insb
push
movsl
pop
out
call
or
mov
jns
jae
pop
mov
push
pop
push
or
mov
push
add
testb
pop
mov
pop
jp
popa
add
push
jns
mov
lds
jl
jge
jnp
in
mov
inc
cwtl
cli
xor
xor
jae
cli
aad
mov
mov
and
xor
scas
shrl
out
aad
push
inc
rcrl
movsl
cmpsb
popf
stc
fsubp
jmp
mov
clc
mov
ljmp
incb
ljmp
dec
out
shrl
xchg
pusha
out
adc
mov
or
lock
pop
aam
mov
mov
repnz
push
leave
repz
dec
pop
and
inc
ret
xchg
loop
xchg
push
mov
fidivrl
rcr
xchg
je
ud0
js
sub
cmp
push
mov
shl
lock
dec
pop
sbb
aad
cmp
inc
imul
inc
mov
inc
sbb
ror
test
call
pop
lcall
xorl
es
sub
cmc
sbb
fdivrl
aas
xor
adc
andl
or
dec
sbb
pop
pop
sub
std
or
sub
sti
mov
imul
arpl
jge
dec
add
xchg
pop
test
mull
mov
bswap
addr16
iret
gs
push
push
xor
pop
insl
aad
movsl
cs
adc
pushf
mov
sub
jge
xchg
aad
push
loope
xor
add
cmpsb
add
clc
ror
xchg
outsb
fs
sub
or
jmp
clc
incl
popw
cmp
mov
and
mov
adc
addl
popf
fwait
jp
jmp
pop
out
jl
cmp
iret
movsb
repz
add
add
add
inc
icebp
jo
fmull
mov
pop
mov
mov
movsl
cwtl
mov
fcompl
or
jmp
mov
or
lret
in
pop
push
jno
add
test
ja
sub
jb
xor
add
xchg
inc
loope
dec
fstpt
sbb
aad
lods
jbe
into
cmpsb
pop
dec
mov
xchg
pop
mov
mov
jmp
xor
sbb
xchg
shr
popa
jg
dec
push
rclb
leave
jo
sub
test
movsl
and
test
repz
in
dec
es
sub
scas
push
andb
jmp
test
rcrb
clc
push
movsl
pusha
xchg
add
mov
aam
adc
push
mov
cwtl
fmull
xchg
out
out
inc
daa
sahf
fidivl
xchg
jg
out
ret
fstpt
pushf
cmc
jae
cmpsb
adc
sub
xchg
test
cli
bnd
mov
sub
fisttpl
in
aas
jnp
fidivs
inc
and
push
aaa
stos
or
out
or
daa
pop
arpl
lds
push
dec
mov
xor
xchg
cs
fwait
mov
jp
and
out
xchg
aad
mov
addr16
addr16
int
and
and
sbb
dec
js
shll
dec
jp
and
cmp
inc
stc
icebp
mov
push
pop
cld
rcr
pop
in
stos
sbb
xor
test
push
push
jns
les
lahf
xchg
or
jne
in
sub
ds
jmp
ret
insb
inc
pop
or
mov
or
shl
sbb
ret
xlat
jns
fs
mov
insb
ljmp
mov
adc
ret
push
in
xchg
or
jb
jmp
mov
repnz
push
aas
xor
push
fwait
test
push
lret
out
aas
clc
sub
out
jecxz
clc
dec
insb
dec
and
lods
sbb
push
push
or
mov
push
lods
outsb
lret
mov
fwait
iret
jp
mov
jg
nop
cmp
add
ret
lods
test
push
fsubrs
inc
mov
pop
mov
cmp
pop
xchg
mov
cli
imul
into
mov
sarb
add
stos
cmpsl
xchg
js
push
pushf
pop
dec
test
rcll
adc
aam
ja
fwait
xor
add
inc
mov
out
xchg
std
adc
outsb
repz
cmp
je
lock
xor
popa
adc
das
inc
and
or
insb
sahf
es
push
neg
and
outsl
inc
cmc
mov
in
les
adc
cmc
sti
repz
scas
test
cmp
jl
xchg
sub
into
mov
es
or
faddl
fs
mov
loop
mov
cmp
cltd
mov
cmp
sbb
mov
pusha
inc
fisubrs
cmp
sub
xor
fsts
sbb
pop
dec
or
fwait
movsl
mov
xchg
es
and
cmp
into
fiaddl
adc
jecxz
cmp
inc
testb
dec
adc
stos
imul
sbb
mov
fdivl
out
pop
xchg
fsubs
fistl
jns
pop
lods
call
sub
and
jp
test
sub
sub
sti
insl
loope
and
sub
sbb
cmp
sub
sbb
adc
cmpsb
mov
sub
popf
loope
and
cmp
cwtl
pop
inc
mov
dec
insl
lea
lahf
or
cmp
mov
mov
xchg
stc
dec
sub
pop
rolb
jp
fcoms
add
push
push
push
cld
sar
cli
adc
xchg
jp
push
jmp
lcall
addr16
pop
iret
out
push
enter
dec
jnp
xchg
jae
dec
xor
cmpsl
aam
push
bound
mov
test
outsl
xchg
in
cmp
dec
cmc
mov
imul
dec
insb
sub
mov
jno
andl
push
sub
ret
inc
mov
packuswb
cltd
cmp
lret
repz
jae
mov
push
xor
add
push
xor
mov
dec
fidivrl
mov
push
hlt
fimuls
repz
imul
ds
imul
and
xchg
dec
mov
ljmp
mov
mov
dec
xor
rorl
jle
sbb
cmpsb
outsb
and
sbb
or
or
aad
xchg
repz
enter
negl
pop
int
pushl
pop
popf
mov
rorb
sub
adc
adc
jl
and
dec
mov
ljmp
sub
jo
mov
mov
insl
stc
js
insl
cmp
in
shrb
rorb
push
xchg
rcll
xchg
mov
stos
insl
cmp
pop
mov
lock
int3
mov
push
sub
inc
loopne
jne
ret
bound
scas
adc
xor
xchg
jbe
jmp
movsl
sub
mov
aad
jb
jno
pop
inc
add
mov
jne
in
xor
xchg
adc
iret
sbb
xor
sbb
push
scas
and
shl
das
repz
sti
int
jmp
dec
mov
or
out
call
jge
arpl
jg
mov
out
scas
rcrl
jge
mov
bound
or
outsb
hlt
int3
mov
repz
out
or
lret
fnsave
and
jl
jne
inc
std
test
lea
xchg
arpl
push
outsb
add
outsl
xchg
popf
popa
add
pop
pop
or
push
iret
incl
iret
mov
ja
dec
sub
test
clc
sti
add
insl
add
cs
push
ljmp
jno
sbbl
sbb
fs
lock
ss
and
sub
sbb
test
xor
inc
jg
add
cmp
stc
fstpl
ja
jmp
imul
rorl
jne
popf
pop
daa
outsb
jge
push
jge
xor
or
dec
ja
repnz
das
out
or
fstpl
xchg
int
inc
pop
shl
pop
lds
loop
icebp
jnp
fcompp
push
mov
push
ja
push
gs
xor
inc
in
addb
adc
clc
xchg
push
dec
out
rcl
lcall
aam
adc
cmpb
jns
cwtl
js
dec
or
clc
arpl
xchg
cmpsl
nop
aam
mov
aas
dec
inc
fmuls
pusha
cmp
imul
fs
aad
cmp
mov
pop
rcrl
out
and
push
ss
cmc
jle
lea
xchg
fldcw
inc
xchg
adc
test
xchg
or
sbb
jg
shll
mov
lcall
mov
pop
lret
jae
push
in
aas
sub
or
dec
sub
cmp
pop
sahf
cli
pop
je
dec
cmp
inc
aam
push
bound
or
repnz
iretw
lods
loop
sbbl
mov
iret
cmpsb
mov
jecxz
mov
pop
push
lret
lret
shrl
outsl
lds
jmp
mov
stos
mov
dec
outsb
add
test
ret
imulb
sub
or
push
xchg
jmp
jo
jecxz
cmp
fsub
stos
adc
cmc
fs
mov
nop
fcoml
and
xor
jo
dec
nop
rorl
inc
pop
xchg
push
sub
gs
push
int
out
scas
fidivrl
popl
cld
leave
es
dec
push
cmpsb
and
dec
test
fsts
push
lahf
aad
mov
or
sbb
push
xor
pusha
cmp
mov
dec
pop
int
pop
pop
sarb
lcall
out
cmp
push
mov
xor
push
rclb
inc
hlt
out
hlt
in
dec
adc
lcall
add
loope
pop
loopne
push
ss
sti
xchg
xchg
adc
in
jl
adcb
mov
push
in
xchg
popf
insl
in
or
or
insb
iret
jne
insl
mov
test
pop
popf
mov
dec
mov
cmpsl
sbb
js
adc
fidivs
js
iret
dec
mov
adc
add
push
mov
mov
push
repz
icebp
mov
cmp
inc
in
push
xlat
or
dec
lea
jne
addl
dec
dec
pusha
ja
push
inc
mov
sahf
or
dec
jnp
mov
icebp
cmpl
adc
das
enter
je
test
imul
cmp
loopne
rcll
xchg
add
xchg
addr16
and
nop
repz
inc
pop
bound
jno
sub
mov
mov
fs
lea
sub
jmp
mov
pop
pushf
std
int
sbb
stc
pop
jb
flds
or
test
xorl
leave
xchg
dec
cmp
and
jecxz
clc
mov
rcl
mov
xor
mov
cmp
out
xor
xchg
ret
fnstsw
xor
sbb
fsubp
subb
xor
xor
add
rorl
push
imul
cmp
cmp
pop
stos
or
negl
xor
mov
in
in
les
sbb
repnz
int
iret
mov
test
and
ret
rclb
dec
stc
xchg
cwtl
into
ljmp
add
mov
add
repz
mov
push
aas
fcoml
mov
pop
cmp
push
popa
aaa
aad
cmp
xchg
mov
mov
lea
inc
dec
out
cmpsl
xchg
ret
call
jmp
shlb
jmp
cwtl
inc
add
cmpb
push
fnstcw
sti
adc
dec
cmp
lret
out
jno
push
ficomps
out
adc
xchg
sbb
andl
push
insb
sub
hlt
jne
pop
push
push
sbb
rol
xor
add
dec
jl
ret
lods
insl
out
loopne
pop
pop
push
shlb
fistps
inc
call
cmp
xchg
pop
sbb
xchg
xchg
push
or
xchg
mov
dec
mov
add
and
and
je
addl
addl
cwtl
ljmp
xchg
lret
loope
jl
push
xchg
imul
mov
xlat
pop
jge
pop
jbe
or
rcl
pop
dec
enter
push
mov
sti
adc
xchg
sbb
xchg
fdiv
pushf
int
push
int3
sbb
rcll
sbb
bound
mov
xchg
add
cld
fs
mov
dec
roll
fwait
out
out
outsl
lock
hlt
pop
or
sbb
adc
scas
cmp
add
xchg
imul
mov
lea
push
sbb
sbb
adc
and
lret
sub
fdivrl
mov
adc
jno
aam
fnstsw
outsl
cmc
jns
xchg
stos
fists
int
mov
imul
add
xchg
testb
js
xchg
mov
dec
pop
sbb
push
xchg
and
cwtl
mov
push
pop
in
frstor
mov
out
jns
ja
sbbb
daa
dec
shll
sub
mov
inc
ret
sbb
test
sub
push
dec
jo
js
dec
cltd
add
dec
pop
outsb
call
mov
faddl
pop
push
adc
cs
push
cwtl
pusha
adc
gs
jge
dec
mov
mov
call
sbb
pushf
dec
das
adc
adc
outsb
scas
cmp
sub
inc
imulb
mov
movsb
out
aad
lods
push
test
rolb
les
sbb
stc
or
lods
sbb
push
sub
mov
lods
inc
adc
add
mov
inc
and
pop
mov
ds
sbb
cmp
lahf
xchg
lock
ss
pop
mov
mov
popf
inc
testb
push
ss
movsl
scas
mov
test
loopne
jo
adc
in
sbb
psubw
mov
xor
cmp
lcall
and
pop
mov
lods
push
fstl
sub
push
mov
andl
push
pop
adcb
pop
sbb
jb
cmc
clc
inc
clc
jbe
push
dec
incb
test
scas
cwtl
jp
dec
lods
in
xchg
sbb
shll
or
jne
jnp
xchg
filds
add
cltd
inc
imul
mov
test
shll
push
ljmp
fld
lcall
mov
mov
sbb
xor
push
inc
mov
imull
fmul
loop
mov
cmp
xchg
fdivr
jg
insl
fadds
fwait
fwait
pop
lret
xor
pop
cmp
sub
mov
test
pop
push
inc
bound
lret
pusha
xor
pop
pop
addr16
iret
cmc
fidivl
push
jle
inc
arpl
in
incl
sub
scas
inc
inc
xor
outsl
jnp
inc
mov
and
psrad
push
out
fisttps
ljmp
repnz
dec
mov
mov
lcall
push
sub
rorl
icebp
in
stos
xchg
fldenv
dec
xor
mov
mov
cmp
nop
push
iret
sbb
ljmp
cs
sub
leave
jg
stos
xchg
cli
lcall
testb
icebp
out
push
lock
add
mov
lock
das
jae
shrb
pop
add
push
add
add
and
jecxz
adc
mov
outsl
mov
sub
aam
in
mov
pushf
dec
test
in
cwtl
push
mov
lret
push
mov
xchg
cwtl
inc
daa
dec
negl
addr16
add
std
icebp
cwtl
pop
cmp
mov
or
dec
in
xor
add
sbb
pop
inc
stos
iret
or
stos
fnstcw
jmp
adc
mov
int3
insl
ljmp
imul
add
add
sbb
cmp
mov
dec
lcall
sub
or
mov
aad
dec
pop
pop
sahf
dec
je
js
rorb
xchg
add
subb
cmpsb
lds
sahf
test
or
mov
arpl
fs
andb
fst
inc
dec
cli
sbb
mov
aas
mov
rcrb
decb
out
add
mov
xchg
xchg
popf
enter
addr16
aaa
stos
jo
jg
pop
adc
icebp
lcall
inc
das
lret
popf
push
add
push
lods
xchg
addr16
pop
jbe
sbb
push
jmp
jl
sbb
in
sub
lds
pop
pop
pop
fisttps
cld
cmp
mov
pusha
xchg
outsb
mov
mov
add
loopne
xchg
stos
inc
das
inc
jno
outsl
jnp
sub
les
pop
xchg
mov
out
in
sub
repz
inc
pop
mov
inc
enter
inc
xlat
xlat
mov
pop
stos
imul
sub
cwtl
mov
mov
in
xchg
loope
pushf
es
mov
mov
cld
dec
sub
ds
add
xchg
sbb
call
jp
shrl
fs
xchg
nop
out
lea
cld
aam
fildl
mov
pop
and
mov
inc
push
mov
jb
adc
mov
pop
push
jae
ljmp
gs
ret
or
jne
push
add
stc
outsb
icebp
dec
jb
outsb
cmp
sub
cld
mov
jns
fidivl
xchg
decb
cld
stc
test
adc
test
leave
mov
mov
mov
icebp
or
mov
gs
pusha
popf
addb
mov
jecxz
jae
inc
xor
jg
mov
insl
cmp
jno
push
stos
icebp
addr16
sbb
addr16
mov
push
mov
xor
adc
cld
jo
adc
ds
jp
sbb
pop
mov
aad
xor
or
ljmp
pop
cld
push
int3
mov
lock
cld
inc
adc
jle
jmp
inc
mov
mov
xchg
xor
mov
repnz
ljmp
lcall
xchg
pop
jmp
or
push
and
dec
pop
rcll
cmc
insb
xorb
lods
jl
push
enter
jmp
dec
test
outsl
xchg
repz
mov
scas
mov
mov
mov
pop
inc
pop
out
imul
xor
mov
mov
das
xchg
fdivrl
test
aas
xor
pop
push
mov
dec
cmpsb
or
out
movb
es
pusha
pusha
dec
test
push
mov
mov
mov
into
dec
jb
fists
in
inc
xchg
lock
mov
bound
xor
push
cmpsl
mov
cli
cmp
dec
jge
nop
sub
inc
add
je
dec
or
cmpsb
fwait
mov
insl
push
pop
and
sahf
shl
lcall
mov
mov
mov
inc
test
xchg
add
out
xchg
jbe
adc
mov
rcrb
fadd
repz
pop
aas
jge
dec
xchg
leave
mov
inc
mov
aaa
addb
test
xchg
ret
data16
mov
shlb
imul
test
arpl
not
in
addb
andb
mov
mov
inc
scas
adc
adc
jae
xchg
pop
lret
lahf
cmp
pop
jae
xor
negl
repz
das
mov
es
fadd
sbb
push
cmc
push
iret
xchg
xor
xchg
mov
lret
or
pop
push
imul
or
std
fsub
mov
bnd
xchg
pop
or
sub
repz
lahf
jne
pop
jmp
xor
add
ss
jbe
mov
mov
mov
test
xchg
imul
push
mov
dec
push
dec
add
or
xchg
enter
enter
mov
je
add
loope
in
sbb
lods
test
sbb
sub
mov
dec
ds
mov
retw
sbb
cltd
out
push
cmpb
imul
xchg
xchg
dec
loope
lcall
cmpsb
mov
pop
iret
fbld
mov
ja
sti
mov
pop
clc
xchg
insl
outsl
loopne
repnz
int
aas
sub
repz
and
ja
xchg
movl
cmp
mov
das
lods
fimuls
add
pop
imul
aad
scas
xchg
out
repnz
mov
mov
jl
test
pushl
ljmp
xchg
adc
in
icebp
aaa
xchg
cmp
mov
pop
in
imul
push
test
add
adc
leave
mov
cmp
adc
iret
pop
sti
or
das
xchg
popa
or
repnz
sbb
sub
jl
dec
leave
ds
stc
sub
fnstsw
in
lds
inc
stos
fcomps
js
jmp
or
jmp
stos
xchg
out
sub
pop
add
inc
adc
cmp
push
mov
fs
adc
inc
out
mov
and
test
fldcw
shlb
pop
lds
insb
test
jbe
inc
test
lea
inc
aam
lcall
xchg
jg
fmuls
test
adc
pop
cmp
or
mov
lds
sbb
jne
and
adc
into
es
sti
jne
inc
dec
cmpsl
push
js
repz
push
int3
cmp
jo
imul
mov
push
loopne
cmp
punpckhbw
hlt
test
jmp
pop
add
mov
test
mov
cmpsb
mov
loopne
mov
pop
adc
cmpsb
add
ljmp
sahf
jbe
jnp
sub
aaa
pop
rcrb
mov
flds
stos
data16
xor
stc
orl
cmp
xchg
repz
add
lock
cwtl
jg
inc
imull
mov
sbb
rcll
shrl
inc
xchg
lods
sbb
insb
push
ds
jbe
sbbl
ds
jmp
dec
xchg
or
dec
sti
jns
push
sub
mov
adc
push
adc
jb
push
pusha
pop
aad
push
scas
adc
push
dec
test
int
mov
enter
xchg
dec
aaa
fs
mov
inc
addb
xchg
fadd
into
sahf
xchg
out
outsb
jl
scas
pop
repz
sahf
pop
pop
je
lods
ss
lret
int3
mov
ficoml
shl
int
push
and
add
jg
insb
cs
pusha
mov
adc
mov
out
pushf
jns
inc
cwtl
sub
or
imul
fs
ficomps
dec
dec
test
xor
negb
roll
push
sub
bnd
dec
je
inc
push
cld
arpl
negb
adc
add
inc
nop
sub
popa
mov
inc
in
test
mov
or
ljmp
push
je
fwait
mov
shll
or
imul
sub
jecxz
push
pushf
jg
mov
jbe
cmp
xor
leave
sahf
xor
jo
das
xchg
xor
fists
sar
add
loope
lcall
lods
rcll
je
push
adc
push
push
push
pop
iret
in
imul
dec
push
dec
and
inc
outsb
insl
inc
pop
and
inc
sbb
jecxz
repnz
orl
cmp
xchg
push
push
das
and
test
sbbb
cmc
jnp
mov
cltd
outsl
xchg
enter
push
aad
pop
inc
jmp
negb
movsb
xchg
stos
insb
lods
scas
cmpsb
aaa
xlat
cmp
mov
add
add
xchg
xchg
fcmove
bound
icebp
xchg
jae
xor
das
sarl
push
xor
int3
sub
sbb
in
inc
fnstenv
add
xor
sbb
adc
sbb
mov
xchg
inc
xchg
adc
fs
in
lret
xchg
dec
mov
xchg
movsl
shl
jae
stc
mov
or
cli
pusha
mov
jmp
add
fwait
les
inc
mov
jl
into
dec
push
inc
dec
and
inc
in
push
push
loop
in
and
xchg
dec
sbb
and
push
and
xchg
hlt
ret
out
fsub
lods
xor
scas
stos
cmp
pop
in
cli
cltd
lds
mov
cwtl
call
pusha
inc
or
or
stos
sbb
imul
pop
pop
dec
repnz
inc
shll
cmp
or
pop
clc
ret
mov
push
and
sub
arpl
loop,pt
ret
or
inc
imul
pop
dec
cltd
cmp
cld
or
push
sub
outsl
push
jecxz
jmp
ljmp
cmp
and
loop
jb
push
cmpsb
fbstp
inc
xchg
xchg
fidivs
dec
mov
shrb
mov
jmp
rcll
and
pop
xlat
mov
xlat
sbb
pop
out
cmp
cmp
mov
xchg
or
sub
or
jb
cmp
jno
stc
push
lods
movsb
dec
adc
inc
xchg
daa
mov
mov
mov
cmpb
and
mov
dec
les
sbb
sub
popw
jb
pop
sbb
loope
xchg
dec
sbb
mov
lds
mov
ret
mov
jbe
leave
jp
out
out
sbb
aam
out
es
xchg
xor
jmp
push
popa
test
pop
test
sbb
jno
fcoms
push
xchg
rcpps
outsl
mov
scas
scas
imull
adc
dec
cmpsl
mov
mov
xchg
fnstenv
out
loope
jle
xor
sar
inc
in
or
aad
jnp
xchg
je
insl
call
enter
xchg
push
icebp
mov
loope
cli
leave
pop
rorb
and
pop
push
into
inc
sbb
xchg
iret
sahf
and
cmp
imul
in
pushf
mov
pop
push
hlt
xchg
in
lds
xchg
daa
lea
pusha
lret
dec
mov
mov
ret
ljmp
sti
mov
jle
ret
cmp
decb
mov
xor
je
pushf
leave
dec
mov
call
jae
imul
imul
mov
ret
iret
loop
and
loopne
je
jmp
or
cmc
jns
test
outsl
mov
orl
negl
pop
lods
ljmp
mov
pushf
test
mov
adc
xchg
es
sbb
pop
popf
ror
lret
mov
ss
xor
cli
in
xchg
jecxz
lods
insl
adc
mov
jno
imul
jne
mov
cmc
xchg
cltd
fisttpl
mov
std
cs
loope
adc
mov
adcb
jnp
sub
rcr
lods
nop
punpcklwd
mov
add
mov
in
cwtl
scas
xchg
dec
jle
jecxz
push
add
scas
and
ss
ret
pop
js
aaa
push
stos
in
inc
cwtl
sub
push
scas
cmc
add
sbb
fs
sub
inc
or
and
mov
in
gs
add
cs
inc
shlb
pop
insb
push
test
mov
popa
std
fsub
xchg
xchg
fs
mov
sub
pop
scas
out
sti
jae
jns
sub
loop
cmp
dec
dec
jno
sbb
jbe
sarb
pop
pop
test
fadd
sub
fiaddl
lret
dec
imul
sub
lret
outsb
mov
mov
mov
leave
jmp
fwait
jle
add
pop
les
aam
and
xor
notl
push
lods
jmp
jbe
fwait
push
push
movsb
pop
lock
fwait
dec
mov
xor
mov
push
hlt
adc
loope
pop
pop
lods
imul
jecxz
andl
out
pusha
lret
sub
or
mov
adc
push
dec
loope
arpl
insb
mov
jne
or
into
lds
int3
ret
inc
push
sub
dec
lret
sub
lods
adc
xchg
shll
lock
push
pop
push
imul
int
incb
pop
leave
ja
movsl
mov
mov
mov
icebp
push
in
pop
stos
addr16
xor
xchg
and
mov
lods
call
orl
xor
jne
gs
or
testb
sbb
loopne
inc
push
or
jmp
stos
xchg
xor
mov
mov
xor
inc
iret
or
les
lock
in
fxch
mov
shrb
xlat
bound
add
mov
scas
jp
stc
into
mov
xor
dec
xor
adc
test
push
or
mov
sub
cli
mov
aas
add
sub
das
push
ret
and
add
sbb
lret
dec
out
aam
repz
push
loope
out
mov
clc
sub
or
sbb
into
arpl
mov
fildl
or
add
in
std
cmpsl
mov
cli
add
loop
inc
shll
push
adc
ret
inc
mov
and
adc
sub
icebp
popa
in
pushf
pop
shrb
push
insb
sarb
inc
cmp
cld
test
xchg
loop
sti
or
push
add
lock
xchg
mov
aad
fnstenv
ret
cmp
insb
xchg
dec
xchg
cmpsl
mov
add
mov
jl
sbb
mov
mov
enter
fstl
dec
adcl
pop
shll
mov
pushf
cs
adc
jnp
xchg
in
xchg
inc
gs
sbb
push
outsl
aam
mov
add
ret
sti
mov
in
int3
lods
mov
test
xorl
in
cli
mov
movsb
dec
push
push
jbe
jg
ret
lds
xor
and
into
or
xchg
je
push
enter
or
cmp
xlat
std
std
icebp
inc
adc
leave
jnp
stos
test
fstps
xor
pop
lahf
pop
cli
xor
jge
ret
jae
cld
xlat
add
pop
and
movb
inc
insb
cmp
push
cmpsb
push
shlb
insl
adcl
push
add
inc
push
dec
repnz
pop
out
jne
iret
test
cmpsl
stos
mov
mov
rcll
jnp
in
mov
outsl
xor
ror
or
mov
push
mov
pop
sub
or
pop
out
incb
add
add
dec
jl
cmp
sbb
shrb
movsl
xor
cltd
shl
dec
sbb
jne
loopne
push
push
or
xchg
xor
fs
and
adc
enter
popf
and
sub
push
ret
out
jg
pusha
imul
into
aas
or
gs
lods
dec
je
ret
repnz
jne
add
mov
adc
fnstenv
hlt
or
push
fnstenv
lea
movsb
testl
jno
jl
pop
test
fidivl
sbb
xchg
dec
mov
hlt
fbld
adc
test
adc
cmc
rcrl
les
fnstcw
rcrb
lret
cmp
xchg
pop
push
fnstcw
adc
adc
test
das
cmp
aam
sbb
xchg
sbb
and
dec
push
xorb
add
stos
sub
sar
lods
jne
cmp
loopne
push
push
shll
inc
mov
in
divl
cwtl
push
add
jno
jge
mov
push
std
and
pop
clc
push
xor
es
or
add
mov
sar
int
xchg
mov
into
jmp
mov
lret
mov
lods
cs
xlat
cmp
xchg
xor
jl
outsl
pop
sbb
out
add
sub
loopne
popa
and
sbb
test
add
fsubrs
xchg
cwtl
mov
stc
fwait
enter
repnz
repnz
and
xor
and
lahf
icebp
add
mov
stos
cli
xchg
add
adc
out
loop
out
xchg
movsb
aam
mov
or
sbb
push
pop
ret
mov
pop
jg
mov
sub
daa
sti
and
inc
pop
in
out
adc
js
into
xchg
sti
pop
push
pop
add
fistpll
cmp
fs
lock
stc
push
lods
fldl
ja
add
ss
into
push
rol
inc
jge
mov
and
or
mov
add
mov
ds
lock
add
ljmp
mov
arpl
es
aaa
addl
pcmpeqb
adc
dec
into
shll
movsb
stos
pop
in
fs
jo,pn
call
push
inc
dec
aaa
push
or
aam
inc
je
fstp
mov
movsl
aaa
mov
mov
orb
popf
xor
and
push
jle
mov
inc
sbb
adc
testl
sbb
push
jno
leave
sbb
cwtl
aas
int
xchg
mov
leave
xchg
pop
dec
or
lahf
cmpsb
into
sbb
outsl
or
mov
or
jle
mov
cld
mov
cwtl
or
sub
stos
adc
xor
scas
sub
bound
scas
adc
push
inc
and
js
sub
in
ret
and
jbe
xor
pop
rorl
dec
pop
stos
push
cmc
inc
fwait
out
add
mov
scas
push
fiaddl
inc
sbb
jp
push
lahf
in
cmp
jecxz
lret
daa
negb
imulb
push
push
adc
outsl
outsb
insb
pop
fstps
mov
inc
dec
xor
cmp
push
push
xchg
add
adc
jns
rcrb
push
mov
ret
xchg
mov
dec
jbe
movsb
dec
out
mov
mov
jne
lea
mov
cli
add
out
pushf
enter
addr16
sbb
cld
lret
repz
cmpsl
es
dec
ds
lret
xlat
push
push
leave
cmpsl
sahf
addr16
jp
sub
jl
lahf
sub
mov
sar
pop
mov
mov
add
stc
mov
dec
insl
lock
inc
push
dec
fdivs
sbb
mov
stos
push
sub
shlb
movsb
stc
adc
dec
mov
out
jmp
fs
aam
xor
push
pushf
popa
fisubrs
clc
repz
arpl
testl
call
sbb
jne
mov
push
mov
xchg
popf
xchg
push
aad
sub
pusha
sub
jno
adc
cmp
enter
inc
stos
mov
repz
xorl
fwait
out
cmp
inc
mov
sbb
lret
cmp
cmp
cmp
rcrl
ljmp
cld
adc
ds
rorl
mov
fidivs
mov
fadds
jg
addr16
rorl
enter
pop
sub
dec
pop
xchg
jg
pop
sbb
call
arpl
sub
inc
int
xchg
lret
popa
pop
sub
xchg
xor
pop
rcl
popf
out
fwait
cmpsb
xchg
icebp
stos
xor
or
sbb
lock
jno
adc
pop
mov
cmp
sahf
sub
inc
add
fldenv
shrb
jbe
dec
mov
mov
enter
mov
ss
pop
push
cmpsb
dec
add
sub
mov
xor
je
int3
subl
inc
xchg
sbb
inc
jmp
pop
fistpll
jg
into
xor
pusha
jno
sti
adc
nop
and
inc
push
ljmp
jnp
mov
sar
outsb
lret
push
jl
rorb
xor
xor
leave
out
fsubrp
psadbw
les
test
leave
cmp
into
lock
popa
xor
or
mov
test
ret
add
mov
add
sbb
mov
add
adc
push
mov
cs
stc
ficoms
ss
fadd
stc
loopne
sbb
movsl
lcall
mov
dec
cmp
ret
adc
stc
cmp
int3
push
out
pusha
stos
stc
inc
dec
push
daa
cmpsl
jb
sub
jns
or
mov
cmp
out
push
mov
push
xchg
out
ror
jb
inc
movsl
lds
fsubrp
out
xchg
fs
xchg
stos
dec
cmp
outsl
rcrb
sarb
loope
ror
cmp
ja
push
mov
in
daa
cmp
dec
cmpsb
repz
jno
es
fwait
cld
clc
push
rorb
popa
inc
daa
sub
mov
test
sub
xchg
mov
imul
pop
inc
mov
jno
jae
mov
push
cmovs
repz
call
adc
jne
dec
adc
pop
xor
mov
add
mov
sbb
frstor
xor
into
cmp
in
xorb
sub
mov
add
pop
lea
stos
dec
sub
adc
adc
fildll
xor
adc
xchg
dec
icebp
fwait
jle
cld
fcoms
sti
daa
mov
lret
adc
mov
hlt
pop
push
cwtl
add
push
pop
jno
pop
jl
and
adc
mov
adc
fsts
pop
sbb
dec
xchg
stc
movsl
mov
push
stos
int
dec
xor
fmul
stc
xor
pop
aam
fisubrl
sub
mov
out
sbb
add
mov
or
push
push
out
xchg
xchg
sub
pushf
into
rorl
push
adc
pushl
lods
push
lods
inc
mov
ss
shrb
pusha
imul
push
mov
jg
push
fwait
dec
es
add
testb
push
sbb
mov
rclb
ret
xor
sbb
xchg
lcall
mull
sub
add
ljmp
es
adc
dec
mov
jmp
lcall
add
gs
cli
sbb
or
add
push
movsb
adc
sbb
jae
mov
test
xchg
in
jmp
js
jae
leave
pushf
cmp
cmp
xchg
mov
nop
adc
mov
mov
negl
je
mov
loope
sar
adc
aas
icebp
in
testl
mov
jno
inc
cmpsb
fistpl
imulb
sub
fucomip
mov
das
pop
cmp
rclb
in
fsts
notl
movsb
int3
call
cmpsb
repz
outsb
lahf
mov
pop
mov
mov
mov
movsb
inc
das
and
mov
test
fwait
stc
sti
pop
xchg
add
jecxz
sbb
mov
aad
frstor
add
es
adc
mov
sbb
test
dec
movsl
push
pop
cmp
jge,pt
or
jl
std
pop
jns
fnstcw
mov
cmpsb
push
dec
jne
jmp
je
mov
or
test
add
inc
aam
mov
xor
int3
xlat
cld
bound
mov
push
sub
bound
and
lret
pushl
or
sbb
insl
and
dec
or
call
fcompl
mov
call
xchg
pop
xchg
push
jecxz
cld
call
mov
sbb
jp
cs
or
jmp
xchg
and
add
or
fldcw
xor
adc
ja
stos
aad
mov
push
dec
mov
mov
fcomps
sbb
dec
and
pop
test
lahf
jmp
pop
jae
outsb
adc
addl
mov
in
out
inc
popf
imull
push
gs
adc
arpl
outsl
repz
xchg
shrl
jae,pt
mov
dec
loop
clc
xor
fldenv
xor
shlb
insl
push
adc
lcall
les
xchg
add
add
fbstp
mov
fucomp
inc
lods
popa
shrb
mov
xor
and
scas
dec
sub
mov
loopne
leave
subb
cmp
rcrb
rcll
cmp
mov
inc
push
subb
add
sub
or
inc
adc
sar
fcoml
imul
inc
stos
lock
mov
sbb
fisubrl
sub
inc
bound
test
add
outsb
dec
fdivs
movsb
xchg
stos
xor
pop
jae
jecxz
fcmovnbe
or
shr
ljmp
sub
mov
pop
jmp
pop
out
hlt
sub
xchg
das
push
pop
jp
mov
mov
or
pop
fisubrs
sbb
add
loop
inc
dec
dec
les
in
int
in
sub
jne
or
sbbl
inc
fisubrl
insl
fnstenv
push
cs
sub
je
fsts
xor
and
cmp
sbb
incb
adc
sbb
mov
jg
jnp
pop
push
mov
push
inc
pop
ljmp
xchg
mov
add
insl
ret
xchg
rclb
addr16
out
pop
push
sub
mov
shlb
stos
adc
inc
mov
movsl
xchg
push
popa
and
mov
pop
or
fiadds
mov
test
out
dec
ret
push
subb
aaa
push
add
inc
sub
jmp
scas
lret
mov
les
dec
mov
repz
xorl
mov
xor
adc
adcb
cld
imul
aas
pushf
jle
mov
adc
adc
push
gs
inc
pop
xchg
outsb
rolb
pop
mov
fldlg2
test
icebp
gs
out
fnstenv
inc
add
sbbl
arpl
mov
adc
sbb
cmp
push
int3
xchg
loope
lock
bound
mov
sbb
xchg
leave
pop
and
sti
outsb
imull
testb
data16
xchg
nop
lock
mov
dec
dec
xchg
mov
movsl
inc
clc
orl
aaa
popf
cltd
ss
adc
xor
xor
testl
out
fwait
loop
sbb
dec
mov
xchg
int3
mov
inc
or
push
push
insl
ffree
adcl
jnp
jns
pusha
fxch
jecxz
sub
cmp
or
inc
mov
dec
push
xlat
cli
inc
mov
push
aam
out
out
daa
dec
fsubrp
into
dec
loopne
sbb
push
jp
in
jge
add
iret
test
or
rorb
frstor
push
test
jmp
mov
rolb
lcall
dec
adc
mov
mov
sti
sbb
push
xchg
mov
pop
cmp
ret
jmp
adc
lret
sahf
daa
xchg
fisubl
mov
xchg
unpckhps
adc
test
jbe
fbstp
jb
cmp
sbb
push
pop
mov
and
loop
movsl
push
sub
dec
ja
xor
out
out
int3
and
in
stos
arpl
aad
lock
icebp
stos
lea
push
es
sub
iret
stos
movsb
xor
inc
mov
pop
xor
adcl
imul
xor
sti
inc
in
mov
jl
xor
loope
and
rorl
or
orb
aam
xchg
stc
jnp
dec
aas
jns
mulb
scas
in
cli
lcall
sbb
push
dec
mov
les
mov
out
sub
jae
sbb
lods
addr16
mov
pop
sub
lds
shll
inc
cmp
push
jl
shrb
fldenv
xor
stos
sub
inc
push
push
les
aas
test
nop
icebp
pop
jle
sar
push
cld
loop
cmp
and
mov
jge
pop
or
fldt
jle
mov
sbb
sub
mov
int3
dec
int3
orb
xorb
ds
jbe
push
imul
add
enter
int
sub
popf
mov
push
xor
cmpsb
push
out
mov
push
ja
mov
clc
mov
hlt
add
and
pop
push
mov
mov
sub
lcall
mov
sbb
cmp
add
add
icebp
out
inc
pushf
cmpsb
sbb
mov
add
pop
jmp
mov
jg
inc
enter
je
dec
jp
push
in
in
pushf
push
jl
mov
out
pop
fstl
mov
std
mov
xchg
jp
arpl
mov
lcall
cmpsl
nop
iret
mov
sub
xchg
inc
lret
sub
arpl
mov
aad
xor
push
test
outsb
xor
lcall
lret
mov
sarl
xor
test
lock
mov
pusha
out
decb
jb
enter
orl
xor
xor
cmp
adc
xor
jmp
roll
dec
lret
jp
xor
xchg
dec
push
jne
push
cmp
or
jne
mov
xchg
inc
clc
adc
inc
mov
outsb
mov
adc
fbstp
stos
pop
xor
movsb
ret
inc
pop
ljmp
aas
inc
mov
ljmp
fistpl
mov
lcall
aad
ljmp
pop
bswap
repz
test
int3
into
rorb
cmc
xlat
lret
lods
xchg
mov
sbb
in
int
sub
daa
sub
sbb
inc
std
push
dec
sahf
fisubrs
mov
ror
sti
or
add
mov
push
adc
popf
jae
insb
cli
leave
or
mov
xor
andb
push
xchg
mov
fwait
lods
shl
out
icebp
push
in
add
das
mov
into
in
stos
mov
cmpsb
pop
scas
cli
sbb
add
fisubrl
jbe
xor
pop
cmpsl
push
jp
mov
pop
sbb
sub
push
clc
jae
jp
cs
pop
adc
jae
mov
jle
mov
push
dec
pop
and
mov
sbb
sbb
mov
adc
xchg
cmpsl
imul
sub
bnd
mov
xor
and
xchg
push
sbb
or
lahf
or
addr16
mov
mov
adc
pop
cmp
in
int3
and
div
mov
mov
std
rolb
sbb
enter
ljmp
jecxz
cmp
leave
xor
ret
dec
out
daa
addr16
mov
scas
and
jne
inc
ja
iret
and
inc
repz
sti
sub
insb
decl
fsubr
bound
daa
inc
push
add
mov
in
mov
or
rclb
aad
sahf
adc
sbb
dec
out
dec
lret
scas
lods
fmull
sahf
cwtl
or
aam
movsb
sub
and
daa
sbb
jmp
dec
fsubl
jnp
sbb
cs
fcoml
mov
mov
mov
cmp
push
xchg
sarl
mov
pop
push
pop
pop
inc
mov
mov
jge
cmpsl
cmp
scas
fwait
mov
sub
xor
push
fstpt
or
je
fimull
or
js
sbb
inc
cli
mov
sbb
cmp
ret
cld
sarb
inc
cmp
clc
test
and
test
stc
push
shll
sti
sbb
hlt
xor
push
xor
add
scas
stc
testb
mov
sarl
outsl
push
xchg
xchg
dec
js
or
mov
xor
insl
repz
dec
sbb
arpl
push
int
jl
fsubl
pop
mov
dec
into
jne
jg
lods
and
mov
mov
aaa
int3
jnp,pt
divl
cmp
dec
outsb
sarl
sbb
lcall
nop
popa
or
xchg
fadds
bound
mov
insl
or
or
push
popa
adc
movsb
stc
rorl
and
sbb
dec
test
adc
or
cmpb
std
jg
cmpsb
xor
aam
xchg
aam
rclb
cmp
jns
rol
pop
jb
jp
or
cmp
xchg
mov
xchg
and
sbb
and
ljmp
hlt
mov
pop
std
mov
scas
xor
xor
fwait
add
add
xor
loopne
mov
orl
xchg
int3
out
xchg
jmp
push
cmp
push
pop
pop
loope
lcall
cmp
jne
or
mov
jp
mov
cwtl
data16
loop
pop
mov
push
sub
dec
inc
sbb
xor
cmp
pop
pop
dec
sub
es
das
add
mov
xor
clc
leave
iret
imul
mov
orl
pop
aam
ret
les
test
xchg
and
movsl
mov
mov
cmp
scas
mov
shlb
stos
in
lds
cmc
aam
out
jbe
inc
mov
pop
cmp
mov
lds
sub
gs
xchg
xchg
and
es
mov
adc
xchg
popa
sbb
xchg
or
out
and
push
nop
inc
mov
call
lcall
clc
push
xchg
pop
das
fsub
out
jecxz
mov
and
pop
loop
lea
sub
ret
mov
pop
xchg
pusha
dec
inc
cmp
popf
outsb
das
cs
aaa
pusha
cld
mov
xor
test
lahf
dec
add
sub
daa
jae
jl
jmp
scas
movsl
pop
mov
pop
divl
and
mov
push
xor
mov
xchg
lds
popf
mov
mov
cmp
sub
adc
ljmp
jmp
aad
sbb
insb
and
cld
jp
xchg
adc
dec
mov
inc
cmp
ficoms
push
movsl
std
mov
xchg
xchg
or
jnp
iret
test
or
call
mov
fwait
mov
xchg
sahf
inc
mov
xchg
test
inc
shll
xor
bound
lock
comiss
fimuls
or
push
imul
jecxz
in
xchg
push
scas
stos
jne
and
insb
or
mov
pop
pop
stos
push
jne
fmull
popf
sbb
jge
push
jg
jge
push
and
das
sub
pusha
loope
loope
push
cmpsb
pop
and
stos
pop
ret
and
inc
xor
push
cmp
pop
fisttpl
pop
movsl
xchg
enter
in
sub
test
in
mov
dec
push
xchg
popa
dec
jl
jno
shll
out
xor
push
mov
xlat
pop
pop
inc
js
sbb
xchg
and
mov
stc
mov
fld
lret
jb
xor
add
inc
push
and
das
mov
sti
mov
notl
in
movsb
je
scas
push
pop
das
adc
push
inc
mov
les
loope
ds
push
mov
sub
cmpsb
lock
imul
push
xchg
inc
into
adc
jae
jge
or
add
cmc
sbb
iret
sub
es
mov
dec
test
jg
or
js
lods
push
lds
push
push
pop
pop
aaa
idivb
or
int
sbb
std
push
out
or
adc
inc
lea
movsl
je
rorl
dec
shll
fidivrl
icebp
dec
stc
mov
sbb
mov
inc
mov
ffreep
into
and
ss
shll
stos
push
push
out
pop
sbb
or
xchg
mov
xor
push
out
mov
jno
jl
rol
adc
sbb
rol
mov
hlt
xor
stos
cli
loopne
push
out
enter
push
test
xchg
dec
add
pop
stos
lahf
mov
bound
or
jno
sahf
inc
test
pop
pop
cmp
cltd
fisubrl
cmp
mov
int
jno
cmpsl
xchg
test
lret
fisttps
clc
mull
mov
jp
repnz
jecxz
push
std
push
insl
daa
dec
cli
or
imul
and
mov
outsl
pop
mov
int3
sahf
mov
loope
std
in
push
mov
pop
pop
mov
idivl
cli
fcoms
xchg
imul
lock
dec
sti
mov
popf
std
and
pop
leave
and
in
or
jnp
std
stos
decb
pushf
gs
testl
pop
std
cmpsb
andb
mov
cld
sarb
and
stc
jne
push
test
mov
aam
loopne
jns
push
push
loopne
rdtsc
sbb
enter
lods
xchg
add
imul
enter
subl
adc
and
ret
jl
out
add
fstpl
lahf
js
icebp
jp,pn
imul
lds
aaa
sbb
aam
and
mov
mov
push
out
into
pop
out
push
scas
adc
and
sahf
xchg
cvtpi2ps
mov
jo
movsl
pop
lods
xor
pop
out
sbb
divb
es
add
mov
cmp
mov
filds
inc
cmp
int
inc
loop
mov
xor
test
mov
jmp
add
cli
sbb
cmp
lods
sbb
clc
cld
imul
pushf
outsb
sti
inc
cmp
jmp
dec
lea
add
cli
push
push
inc
jge
mov
enter
lahf
ret
mov
add
mov
jge
jmp
jbe
add
adc
sub
cmp
mov
imul
xor
inc
add
shrb
popf
add
fildll
or
inc
inc
xor
scas
enter
sub
into
dec
xchg
mov
test
lret
inc
out
mov
insb
fcompl
pushw
loopne
into
adc
pushf
dec
and
sbb
pop
mov
popa
mov
jmp
sub
int
mov
sbbl
mov
sbb
dec
sub
mov
enter
push
pusha
adc
mov
push
add
jl
mov
in
ljmp
bound
test
test
jns
mov
push
xchg
pop
lret
pop
testl
xor
pop
dec
add
cmp
ror
adc
sub
adc
ret
and
and
in
fimuls
stos
xor
xlat
cmp
lock
testb
inc
loopne
cmp
cs
stos
sub
cmpsb
mov
sbb
inc
lret
jg
xchg
cmp
idiv
lcall
sbbl
sbb
jb
cmc
imul
xchg
test
mov
shrl
movsb
in
iret
movsl
jne
adc
push
mov
inc
daa
clts
or
push
jo
push
in
and
lahf
xchg
lock
push
fs
lock
jl
cld
xchg
scas
cld
xchg
fbstp
add
xchg
faddl
mov
cmp
mov
cmc
mov
mov
mov
cmc
sbb
jo
outsb
add
or
xchg
mov
mov
xor
es
jmp
xor
insb
lret
out
mov
mov
push
mov
xor
out
pop
lock
pop
pop
pushf
rcr
sub
je
in
inc
dec
rorb
inc
cmp
scas
jne
xor
and
xorl
xor
and
loope
sahf
or
out
push
inc
mov
loop
xor
xchg
dec
xor
insl
and
push
jne
arpl
jle
aas
sahf
repnz
daa
loopne
or
lret
push
in
inc
adc
mov
push
push
mov
inc
push
sub
icebp
push
addl
dec
lods
xchg
cmp
add
xchg
jbe,pt
adc
jno
es
icebp
push
push
or
inc
and
add
les
and
push
mov
clc
jne
out
adc
add
adc
sbb
sub
aas
fs
push
pop
push
js
xor
and
mov
in
lret
jbe
mov
shrb
and
movsb
mov
je
mov
push
rorl
shrl
xchg
xchg
cli
sub
add
aas
and
andl
jae
inc
push
popa
push
jecxz
subl
jbe
mov
inc
push
stos
xor
adc
std
movsl
and
jns
arpl
cli
mov
pop
movl
cmpsb
adc
stc
mov
cmpsl
dec
or
fstpt
shlb
xor
mov
sub
jbe
mov
or
inc
inc
add
pop
lds
movsl
adcb
sbb
aam
jecxz
pop
stos
lcall
leave
sub
inc
imull
in
sub
cs
xor
xchg
adc
in
jmp
push
xchg
push
mov
cmpsl
hlt
xchg
inc
xor
mov
xor
mov
fadds
adc
lret
xor
add
push
clc
dec
dec
rdmsr
cmp
std
ds
jg
insb
repnz
call
mov
sub
xchg
add
push
movsl
addb
push
sbb
mov
repnz
inc
add
call
mov
aad
stc
into
inc
or
push
mov
xor
push
std
lock
icebp
fstpt
rorl
ss
push
mov
stos
aas
sbb
call
push
mov
dec
lds
push
lret
aam
int3
cld
test
dec
ret
sub
mov
mov
sub
test
loope
out
jecxz
stc
mov
sbbl
sub
cmp
mov
sbb
lock
add
pop
ret
mov
sbb
nop
pop
je
test
ret
ficompl
mov
xor
test
leave
push
push
xlat
je
cmpsl
sbb
jns
shlb
imull
inc
stos
or
les
ficompl
xchg
or
mov
jae
add
adc
mov
xchg
leave
pusha
jg
sub
icebp
hlt
jbe
fldenv
ss
adc
shl
sub
movsb
or
push
ds
je
adc
aas
mov
adc
xchg
rcrb
pop
out
mov
vmwrite
cwtl
push
insb
in
dec
jbe
cli
sub
push
pop
push
inc
enter
jg
xor
cwtl
in
stos
xchg
lock
test
roll
push
iret
lret
inc
imul
rolb
and
in
in
pop
scas
mov
pop
sahf
icebp
mov
adc
or
andb
lahf
nop
fcoms
dec
fmul
mov
imull
mov
xor
mov
pop
mov
xchg
push
or
addr16
xchg
dec
fsin
adc
sub
sub
or
adc
std
out
jnp
out
sbb
mulb
shll
sarl
pop
add
sbb
fnstsw
add
push
and
bnd
jno
test
push
xor
mov
fmull
sbb
inc
cld
imul
es
daa
mov
scas
pop
repnz
inc
imul
insl
es
pop
in
push
adc
das
adc
mov
cmp
sbb
lcall
mov
adc
jo
mov
jp
fdivp
fs
pop
xchg
stc
push
into
push
jnp
in
xor
scas
and
mov
mov
icebp
push
icebp
in
shll
mov
or
sub
dec
dec
addr16
int3
xor
sbb
mov
in
push
sti
test
int3
js
shlb
addb
jge
mov
iret
or
in
cmp
push
fcomps
enter
aaa
mov
dec
xor
sbb
xor
pusha
cltd
mov
shrl
addr16
mov
cmpsl
sub
gs
gs
faddl
icebp
cmp
std
xchg
test
loopne
repz
mov
xor
push
scas
and
es
xlat
aam
or
mov
sbb
in
fsubs
xlat
xchg
and
mov
rorb
out
and
fcomip
jno
mov
hlt
or
jns
xor
dec
movsl
scas
enter
hlt
jbe
arpl
jl
pushw
xchg
adc
or
ret
sub
dec
das
imul
adc
dec
cmp
xor
xchg
or
jecxz
xor
inc
push
or
push
testl
stc
jl
xchg
in
mov
loop
xor
mov
and
mov
mov
sbb
arpl
int
mov
aaa
sbb
mov
dec
push
jp
lock
dec
lods
and
dec
xchg
lret
fcomp
xor
sub
sub
out
loop
icebp
mov
or
pop
jge
pop
lcall
add
xchg
pushf
inc
sbb
js
enter
ljmp
out
rclb
out
xchg
stos
stos
jmp
aas
cmc
pop
es
scas
dec
aam
clc
hlt
pop
int
and
scas
xchg
cmp
mov
out
and
xchg
xlat
mov
or
movsb
adc
mov
cmp
int3
push
lock
sub
push
push
inc
adc
cld
inc
sub
jbe
mov
xchg
sub
cmpsb
jg
pushf
jecxz
fwait
mov
sub
jle
ret
cmp
fbld
bound
or
jo
dec
push
lods
push
ficomps
ret
cmp
push
mov
cmp
pop
rcl
mov
mov
lahf
xor
xlat
sbb
ja
push
out
xor
test
movsl
jae
ficoml
mov
je
test
jo
xor
jle
lret
push
lcall
sbb
icebp
xlat
lea
pop
cli
mov
leave
push
xchg
bswap
lret
dec
pushf
aam
popa
scas
lret
popa
aam
addr16
nop
mov
adc
jge
pop
push
lahf
xor
sub
test
cmc
ss
fucomi
cltd
subb
les
sbb
mov
cli
lea
loope
in
fists
mov
cmpsb
xchg
mov
xor
incb
pop
adc
popf
pop
mov
in
inc
xorb
movsb
int3
andb
jp
xor
mov
nop
imul
sbb
dec
jb
and
pop
sbb
jmp
test
clc
xchg
xor
inc
jb
jns
dec
cmp
clc
pop
cmpsb
dec
in
mov
xorb
cmp
push
jae
divb
inc
or
mov
cmp
pop
mov
push
inc
pusha
jl
rorb
xor
call
jbe
inc
or
scas
inc
jnp
std
xor
nop
inc
sub
inc
mov
lcall
fdivp
xor
imul
mov
daa
xor
xchg
jne
add
popf
loope
mov
aaa
insl
loop
lret
out
jno
sub
adcl
xchg
mov
ret
mov
outsb
mov
pop
add
jae
orb
int
pushf
mov
cmp
sarl
sbb
mov
decb
movsl
xlat
fildll
push
jbe
inc
xchg
mov
cmp
mov
push
fstl
ljmp
out
pop
mov
repnz
jecxz
mov
nop
ss
ljmp
lret
cmpsb
jb
jno
imul
imull
pop
outsl
pop
pop
fld1
xlat
movsl
dec
xor
jp
inc
fidivrs
outsb
out
cs
lds
sahf
clc
inc
std
adc
pop
inc
mov
or
or
mov
push
and
idivl
aam
or
jmp
sub
testb
imul
loopne
sbb
lds
jo
fs
mov
lret
push
pop
add
sbb
and
dec
jb
inc
repnz
add
insl
das
mov
mov
jle
sti
enter
scas
ss
insb
pop
daa
data16
or
jg
ss
out
xchg
fdivs
in
xor
add
add
sub
pop
lods
inc
ja
stos
cmp
mov
cld
sbb
jmp
arpl
add
pop
rcrb
sub
xor
cmp
xor
subl
gs
xchg
ja
inc
inc
fwait
daa
xlat
out
out
push
jmp
aam
leave
icebp
jp
push
mov
subb
mov
ret
inc
mov
xor
test
mov
adc
jmp
mov
ss
add
addr16
pusha
pop
xchg
hlt
xor
push
cmpl
pusha
testl
or
mov
mov
adc
fwait
dec
data16
mov
pop
sub
sbb
jecxz
test
jae
dec
and
jo
fsubrl
push
xor
lds
rcl
pop
jo
loopne
inc
sbb
xorl
ds
pop
orl
repnz
test
push
insb
mov
and
sbb
sub
jecxz
mov
mov
pushf
mov
xchg
push
push
xchg
stc
jo
xchg
jb
insb
dec
jge
jbe
mov
adc
inc
mov
mov
rcr
xor
mov
xlat
dec
jp
je
ss
add
leave
in
mov
flds
mov
adc
dec
scas
cmp
out
out
dec
repnz
mov
shl
inc
xlat
nop
insb
and
out
ja
repnz
mov
and
xor
lret
and
std
mov
xchg
push
testl
jno
iret
and
adc
rcl
sbb
leave
sub
mov
insb
push
push
inc
stc
fisubrl
xchg
mov
jbe
dec
fildl
loope
pop
xchg
std
mov
inc
lea
out
iret
mov
inc
push
shll
jno
sarl
mov
dec
add
jo
mov
adc
mov
push
jb
and
lret
jno
testb
scas
sub
in
loopw
movsl
addr16
sahf
cli
fwait
sbb
sarl
js
fs
or
addr16
lods
pop
sbb
xchg
lret
rcl
jmp
fcomps
mov
xchg
pop
pop
xchg
and
pop
pop
inc
aas
mov
mov
iret
repz
ss
cmpsb
xor
jb
inc
mov
dec
lea
dec
sub
ljmp
mov
aad
outsb
aam
popf
pushf
shll
jecxz
stos
cmpb
push
inc
fldenv
adc
mov
and
xchg
dec
enter
fwait
aaa
sahf
jecxz
push
insl
in
pop
stos
mov
adc
xchg
andb
into
loop
cltd
dec
test
mov
sbb
cmpsb
stos
cld
out
adc
aam
call
mov
lds
sahf
pushf
adc
mov
adc
paddsb
push
ret
sbb
iret
sti
inc
push
mov
jne
aas
mov
outsl
mov
sub
push
iret
mov
pop
push
and
push
inc
and
add
pop
mov
or
int3
icebp
mov
nop
gs
or
mov
loope
mov
fldenv
int3
stc
sub
fadds
leave
dec
and
popf
dec
sub
add
and
aam
dec
jae
sbb
or
jno
cli
ss
mov
decb
jle
lods
or
sbb
and
xor
test
pop
dec
jl
stos
xchg
gs
fs
push
dec
lret
inc
pop
adc
in
outsl
aad
mov
jle
lods
rcl
dec
ss
outsb
bound
pop
adc
sbb
jbe
movsl
sbb
aas
cmp
mov
inc
movsl
mov
or
push
adc
sbb
mov
xchg
enter
pusha
cmpb
or
push
clc
push
adc
std
stos
xchg
mull
cmp
sub
inc
mov
xchg
and
outsl
ja
push
mov
xchg
adcb
xchg
push
xchg
jo
test
divb
dec
cmp
push
push
mov
xor
das
nop
xchg
mov
aas
or
jecxz
add
mov
add
mov
cmpl
test
inc
add
xchg
cli
nop
push
cs
jge
loop
icebp
out
pop
sarb
mov
ret
fs
arpl
mov
pop
enter
mov
sbb
ret
mov
fsts
pop
outsb
iret
jecxz
or
fsts
mov
jo
push
add
out
aad
xchg
add
pop
xchg
sub
es
mov
push
addr16
notb
je
dec
fnstcw
mov
pop
pop
mov
sub
add
xchg
cwtl
jg
pop
into
into
sbb
icebp
repnz
lock
outsb
inc
jl
mov
xchg
cmp
xchg
aam
pop
mov
dec
inc
sub
stos
xchg
pop
daa
cmpl
adc
movsb
xor
ljmp
cld
xchg
lcall
stos
test
pusha
lahf
jb
aas
adc
lret
incl
and
or
cmpsl
iret
addb
fcom
rclb
pop
jo
pop
ret
mov
sub
add
nop
movsl
out
jb
xchg
mov
das
fisubrs
scas
dec
sbb
inc
out
xchg
cmp
inc
adc
dec
xor
divb
jmp
repnz
mov
cld
sbb
xchg
pusha
cmp
inc
shlb
inc
jnp
cwtl
mov
cld
mov
mov
mov
out
sbb
cmp
jge
inc
adc
in
stos
xchg
inc
aas
and
popa
popf
xchg
movsl
push
mov
lods
push
fmuls
inc
dec
mov
lahf
xchg
inc
dec
and
jmp
mov
xor
cltd
push
sub
in
push
fsubl
mov
add
xchg
inc
mov
xchg
ja
inc
lds
add
lods
and
in
mov
mov
and
cmc
aaa
int
mov
jp
mov
movsb
andl
pop
or
sub
sbbb
insl
sub
mov
arpl
rorl
or
ja
repz
out
mov
jno
mov
mov
lret
mul
or
clc
lea
dec
push
jmp
fwait
jle
pop
jo
mov
inc
scas
repnz
mov
dec
sbb
ret
adc
shrl
mov
shrb
sti
movsl
dec
scas
and
xor
cwtl
push
mov
outsb
rolb
cmp
pop
in
sbb
movsb
mov
and
sub
adc
test
pushf
sub
sbb
das
mov
sub
xlat
repz
mov
pop
and
xchg
andl
pushl
or
mov
outsb
dec
xchg
dec
and
push
mov
mov
inc
dec
out
sbb
repz
scas
mov
and
mov
ja
inc
mov
sub
addr16
hlt
pop
nop
mov
or
adc
stos
jns
cmp
inc
movsb
mov
fstpt
test
dec
sub
adc
into
pop
pop
push
outsb
mov
outsl
xchg
xchg
cwtl
push
std
sub
loope
jecxz
push
cli
lea
xor
xor
push
ret
pop
loopne
mov
jle
adc
mov
adc
call
sbb
aaa
ljmp
inc
mov
aad
loope
das
test
imulb
fwait
pop
push
xlat
outsl
pop
sub
rorb
xchg
dec
mov
lds
and
sbb
jb
cwtl
pop
popa
mov
dec
pop
jmp
mov
sub
test
nop
frstor
jg
dec
xchg
lock
clc
test
and
into
adc
mov
lret
sub
negb
lds
and
mov
in
inc
pop
fiadds
hlt
dec
gs
ljmp
dec
mov
xor
pop
mov
inc
push
mov
mov
xchg
cmp
cld
xor
ljmp
xlat
shll
stc
mov
nop
sub
lds
nop
cmp
sbb
inc
stos
rcr
popf
cwtl
push
pop
cmp
out
movsl
repnz
push
in
sub
ss
sub
stc
xchg
ficoml
sahf
repz
jns
scas
add
cmpsl
fistl
inc
pop
daa
stc
orl
and
ret
insl
inc
inc
movsl
jmp
push
sub
or
out
mov
sub
mov
lods
fiadds
imul
and
cmp
mov
pop
mov
dec
jecxz
mov
dec
out
push
stos
dec
fiaddl
imul
or
sbb
aad
xchg
jo
mov
ss
movsl
or
cmc
add
xchg
sub
mov
add
add
shll
lret
out
push
fdivrs
movsb
push
push
add
or
inc
test
data16
push
js
popl
push
jg
mov
jmp
xchg
dec
das
scas
mov
in
xchg
dec
mov
jle
inc
xlat
inc
sbb
mov
out
in
fadd
rclb
push
not
sbb
sbb
sbb
pop
mov
adc
jecxz
cmpb
jae
mov
je
jnp
leave
pop
jmp
ficoml
clc
push
inc
xchg
mov
pop
push
mov
pop
push
xlat
mov
pushf
inc
ja
push
cltd
test
pusha
add
repz
mov
inc
mov
mov
test
insb
sub
mov
lret
nop
in
push
push
movsb
loope
sti
out
xor
jb
test
jp
sub
pop
pushf
aaa
popa
xor
sub
jmp
test
clc
jp
lods
lahf
pop
jle
shlb
xor
sti
mov
and
ja
pop
lods
mov
xor
xchg
sub
jnp
jp
fimull
mov
sbb
inc
pop
push
jae
addr16
lahf
and
sub
jg
push
hlt
inc
dec
repz
fwait
ret
pusha
cwtl
out
cmpsl
jno
dec
mov
push
mov
mov
dec
and
xchg
xchg
cmp
in
nop
jb
xchg
cld
xor
mov
xchg
pop
jae
xlat
out
pop
scas
les
into
jo
neg
push
test
cmp
cmp
or
pop
enter
movb
push
cmc
repnz
sbb
jo
pop
pop
movsb
aam
add
mov
out
mov
iret
xchg
and
add
rcrb
out
fwait
jmp
mov
pop
out
fimull
dec
inc
in
push
xlat
dec
or
rolb
dec
jle
test
les
addl
pop
xor
js
testb
in
leave
push
adc
fbld
inc
test
kmovb
add
dec
mov
xor
movsb
loope
repnz
mov
ljmp
js
sub
imul
sbb
push
jae
sub
cmp
dec
clc
mov
sahf
dec
arpl
xchg
and
mov
mov
mov
scas
mov
jmp
or
nop
out
dec
xchg
ds
push
jne
cld
in
test
pop
lcall
gs
fwait
sub
pop
mov
inc
pushf
sub
jo
push
ja
adc
and
jg
arpl
push
dec
repnz
outsl
movsl
mov
leave
cvtpi2ps
xchg
fidivs
test
rdpmc
jecxz
add
sbb
pop
adc
cmp
pop
stc
push
jne
js
xchg
arpl
fnstenv
xchg
fisttpll
xor
cmp
stc
inc
stc
xor
iret
xchg
int3
sbb
pop
ret
jns
xchg
pop
cld
sbb
das
sub
jp
test
xchg
test
add
mov
mov
cmc
decl
inc
aam
jae
cbtw
jg
ja
and
std
pop
dec
stc
insb
push
sbb
mov
sub
push
push
outsl
and
cltd
aaa
jg
ss
jo
inc
es
pusha
cwtl
mov
jle
stos
test
addr16
lahf
out
mull
mov
mov
cmp
xorb
icebp
push
xchg
push
dec
mov
jl
clc
xor
mov
mov
sub
mov
xor
add
int3
cmpsl
xchg
sahf
orb
cmp
push
je
add
ss
sahf
cwtl
insl
dec
loop
sbb
pop
lods
inc
stos
jnp
in
xchg
jmp
sub
mov
fdivs
movsl
and
cmp
loope
sbbb
dec
add
sub
out
and
jb
jge
cli
shrb
push
mov
push
out
jno
sub
adc
or
pusha
mov
es
pusha
push
inc
bound
pop
shlb
jp
mov
push
sbb
ficompl
pushf
mov
into
adc
dec
mov
les
out
pop
xor
imul
cltd
mov
pop
shll
pop
sbb
pushl
and
lods
xchg
scas
into
fdivs
dec
or
sahf
loope
dec
lods
push
sarl
xor
mov
push
clc
stos
arpl
pusha
int3
pop
cmp
inc
push
inc
jge
add
stc
cmpsl
xor
push
cmp
push
xchg
pushf
mov
jl
and
mov
jne
mov
lea
js
sarb
out
cmp
push
mov
push
pop
push
mov
scas
mov
fildl
movsb
dec
dec
dec
xchg
inc
mov
in
aaa
push
or
pushf
outsl
popf
push
bound
outsl
stc
add
ror
sbb
testb
lcall
mov
movsl
outsl
adc
out
call
inc
jecxz
and
xlat
fbstp
sbb
jp
xchg
inc
mov
lods
xlat
mov
push
ljmp
ljmp
stos
fwait
xlat
aaa
xor
ret
aad
pop
sti
xor
xchg
insb
stos
inc
push
lcall
inc
push
sub
fildll
aaa
pop
sub
rorb
outsl
lahf
sbb
xor
mov
cmp
cltd
or
mov
into
iret
xlat
dec
jl
xor
push
adc
cs
cmp
pop
aad
stos
mov
jecxz
and
imul
clc
aad
pusha
outsl
and
inc
outsl
push
sti
lock
xor
push
jb
cmp
mov
les
lcall
xchg
cmp
out
stos
aad
pop
test
cmp
push
sbb
dec
and
cmp
sub
and
rcrl
or
xchg
sti
stc
and
sti
mov
rclb
inc
test
mov
push
pop
in
arpl
dec
jae
out
out
rorb
cmp
pop
movsl
adc
ss
clc
mov
ja
inc
push
or
jne
leave
nop
mov
in
mov
in
mov
scas
lock
mov
fnstcw
std
cmpsb
inc
ret
or
mov
mov
int3
test
mov
push
pushf
or
cltd
push
jns
shl
into
insl
ljmp
pop
inc
cmp
sbb
das
xor
lock
sahf
jno
fcomps
stos
and
pushf
mov
or
cmp
stos
outsb
pusha
push
pusha
lds
and
mov
and
cmpsb
ret
clc
cmp
jp
push
gs
rcrl
jo
cmp
push
sub
and
mov
jno
add
bound
stos
inc
mov
scas
add
and
sub
int
shlb
das
cs
sbb
push
add
imul
or
into
xchg
push
mov
and
cmp
clc
add
jbe
dec
adc
lcall
sub
jne
sbb
push
cmpb
cltd
out
fcmovu
fimull
les
imul
adc
or
adc
idivl
inc
pop
cmp
fdivr
cmpsb
outsl
aad
xor
repnz
fists
test
loope
dec
cmp
movsl
push
into
lods
fs
stos
push
dec
sbb
js,pt
jne
test
or
inc
inc
sub
push
outsl
pop
adc
hlt
scas
shlb
push
mov
fbstp
das
or
dec
pop
mov
fwait
movl
add
mov
mov
lea
ds
sbb
xchg
sbb
movsb
lock
insb
or
test
rcr
movsb
lock
push
xchg
pop
scas
inc
dec
xor
leave
adc
xor
cltd
xchg
xor
mov
mov
dec
adc
push
aas
pop
frstor
pop
fwait
lds
sub
insl
cwtl
outsl
mov
je
push
jg
jno
cli
fisubl
rcll
xorl
adc
mov
pop
das
sbb
mov
pusha
iret
xor
sub
ficoml
xchg
jbe
insb
movq
add
mov
in
shrl
xchg
sti
orl
movsb
dec
aam
pop
ror
shll
imulb
cli
mov
push
js
inc
loop
sbb
bsf
adc
test
dec
or
sub
std
xchg
scas
clc
leave
ret
repnz
pop
lock
push
stos
jl
pop
movb
jne
dec
inc
mov
test
addl
fimuls
std
cmpsl
andl
in
cmp
lea
mov
pop
aad
mov
fcomps
mov
dec
add
inc
cs
mov
push
fstp
adc
xor
paddq
or
js
insl
aam
sub
cli
out
or
jns
iret
call
out
add
fmulp
lods
cmp
push
xor
cmp
andl
sub
dec
pushf
push
repz
icebp
movsb
lods
lea
mov
jb
pop
jnp
jb
sub
les
ljmp
ret
insl
addr16
jb
jl
mov
ss
push
lahf
add
pushf
ljmp
push
es
repnz
dec
lahf
fistpll
sbb
addr16
xchg
sbb
cli
adc
push
int3
sub
repnz
inc
jge
lods
adc
cld
mov
or
inc
stc
jae
cs
addr16
shrl
push
pop
pop
push
daa
jae
pop
mov
cli
cld
mov
xsave
sbb
and
lahf
pop
mov
add
popf
cld
push
sbb
stc
bnd
rolb
mov
addr16
inc
mulb
into
outsb
or
mov
pop
adc
movsl
insl
xchg
inc
les
push
lret
push
lods
push
inc
repnz
loopne
fcoml
lds
imul
jnp
cmp
inc
jmp
cltd
inc
mov
ljmp
pop
mov
jo
cmpsb
jge
add
mov
test
std
and
popf
jecxz
pop
test
or
mov
sbb
cmp
int
sbb
stos
push
cwtl
mov
xchg
shll
mov
scas
js
add
sub
aam
stc
cmp
test
outsb
and
xor
fdivl
pop
or
das
in
mov
xorl
mov
push
fs
loopne
push
int3
call
push
push
out
or
mov
sahf
push
or
mov
mov
fwait
dec
loop
push
in
jp
sbb
shlb
add
das
test
or
movsl
loopne
sub
sub
fnstcw
lock
sub
pop
ret
inc
pop
orb
ljmp
das
xchg
lods
test
clc
scas
js
lds
add
xchg
sahf
mov
dec
sbb
jo
push
lds
fistpll
add
cli
jno
adc
imul
std
jl
ljmp
push
cltd
or
adc
daa
test
sub
out
xor
or
dec
mov
cmp
mov
repz
and
dec
push
xchg
and
in
add
adc
aas
cmpb
mov
insl
sbb
xchg
fisttps
pop
xchg
push
loope
inc
sbb
repnz
lock
or
push
pop
pusha
das
cmp
jb
jmp
jne
ja
imul
stos
aad
mov
js
lds
aam
pop
imul
jo
push
mov
shrb
ret
mov
psrlq
or
int
cmp
cmp
mov
push
inc
jno
lret
mov
xor
lock
fsubr
jo
mov
gs
or
add
sti
mov
pop
adc
inc
inc
xor
js
sub
lds
cltd
sub
add
push
pop
or
out
in
fsubrl
scas
mov
das
aas
jecxz
jl
and
mov
test
pusha
pop
and
or
mov
mov
test
imul
sub
fsubl
pop
sub
ret
push
movsl
das
lahf
mov
adc
push
sbb
pavgb
clc
test
roll
shll
cs
mov
cmpsl
cmp
xor
pop
pop
xchg
out
dec
pop
sbb
dec
xor
ss
ret
fwait
jmp
mov
call
jl
inc
mov
sti
xchg
sar
lock
mov
push
sbb
add
lds
loop
push
sbb
sub
jne
rolb
arpl
outsb
inc
or
or
or
pop
in
call
mov
or
addr16
seto
sub
or
push
aaa
and
cli
sbb
orb
inc
sub
cwtl
stos
mov
push
pop
fisttpl
cwtl
dec
outsl
movsb
out
jae
mov
adc
ret
cmpsl
push
iret
inc
stos
xchg
fsubrs
andl
insl
xchg
lds
pushf
jns
sbb
or
repnz
xorb
jl
push
sbb
push
jb
in
mov
add
mov
adc
sahf
mov
rolb
ss
insb
jmp
jo
dec
insl
ret
push
iret
lcall
cmp
and
ss
sbb
adc
ret
pusha
popa
inc
pop
dec
add
imul
xor
fsubl
aam
sub
mov
das
xor
push
jae
sahf
imulb
cld
push
jl
xchg
cld
push
packssdw
adc
adc
nop
je
pop
pop
cmp
mov
adc
and
lret
add
and
bound
stos
dec
movsl
arpl
sbb
xchg
nop
sbb
gs
leave
mov
push
jbe
jecxz
push
ljmp
sub
or
cltd
cltd
sbb
add
sbb
loopne
aaa
mov
sbb
xchg
jnp
call
addb
pop
push
push
add
pop
pop
int
or
jne
pusha
hlt
decl
loop
scas
and
and
sbb
decb
fcmovne
add
pop
nop
mov
jecxz
jmp
mov
ss
leave
icebp
jo
lea
movsl
mov
or
aad
mov
and
dec
jo
xchg
mov
xchg
jbe
daa
dec
push
push
jge
lock
xchg
insb
pop
cmp
jnp
jnp
icebp
pop
lret
inc
adc
aas
imul
xor
cwtl
push
and
data16
pop
std
sub
aas
icebp
repnz
xor
add
xor
mov
sub
scas
adc
or
lahf
inc
bound
js
lcall
and
ss
in
outsl
add
pop
pusha
popf
roll
mov
mov
mov
mov
stos
outsl
je
jecxz
push
clc
push
int3
test
aaa
roll
xor
in
push
popf
aas
xchg
mov
adc
mov
scas
inc
fisttps
xchg
cwtl
adc
shll
mov
rcrb
mov
adc
out
mov
idiv
cmpsl
scas
int3
add
fcmove
outsb
dec
lods
int3
icebp
or
int3
sub
popf
sub
or
test
aad
imul
sub
test
js
cmp
pop
and
push
mov
or
loope
xchg
fs
push
xorb
scas
repnz
mov
inc
sub
push
lock
fcomps
mov
xor
out
push
adc
mov
cltd
mov
mov
jg
xchg
push
test
adc
rclb
or
mov
mov
scas
pusha
sub
adc
inc
xchg
in
out
es
into
icebp
insl
mov
mov
push
cmp
dec
mov
sbb
mov
shlb
mov
mov
cmp
jmp
fcom
xor
decl
mov
fwait
shrb
jb
mov
pop
sbb
pop
imul
filds
and
mov
icebp
jo
xchg
test
aas
jl
dec
dec
jns
aad
sarb
stc
mov
dec
xchg
iret
adc
int3
sub
ja
jl
mov
ds
call
add
mov
repnz
xor
ja
mov
daa
mov
in
int
daa
aad
dec
mov
test
jbe
enter
arpl
out
sub
outsl
mov
lds
mov
xchg
mov
mov
js
ja
mov
sbb
mov
jnp
cld
xor
movl
add
xlat
das
scas
popf
aad
bound
je
insb
call
leave
cwtl
mov
sbbl
push
leave
andl
out
adc
push
push
lret
add
in
mov
lock
sarb
nop
pop
mov
sahf
clc
mov
add
jg
dec
pop
mov
insb
cmp
cmpw
leave
in
sbb
mov
cli
stc
lods
scas
movsl
push
inc
int
sbb
mov
pop
sbb
movsl
repnz
lds
adc
mov
imul
or
leave
iret
jmp
test
rcr
adc
xchg
cmp
jae
mulb
test
pop
mov
sbb
add
pmaddwd
cmp
lret
movsl
add
xor
mov
mov
jns
fisttpll
divb
jae
into
and
adc
enter
cmp
cwtl
lcall
add
jns
sub
dec
rclb
sub
jecxz
pop
pop
pop
add
sbb
sub
scas
mov
push
add
adc
in
dec
lods
cwtl
mov
arpl
pop
xor
hlt
jp
call
aam
lods
mov
cmp
xchg
cmpsl
dec
shll
cmc
insl
and
popf
cmpsb
jg
stos
cs
cld
mov
xchg
insl
cmpsb
push
and
mov
pop
movsl
aaa
jmp
sub
adc
arpl
lods
adc
out
mov
call
mov
push
out
iret
mov
sbb
sub
mov
sahf
jle
push
in
and
loopne
mov
add
inc
mull
jno
fisubs
cli
inc
pop
gs
pop
rol
cwtl
xchg
xor
pusha
mov
aaa
xchg
sbb
mov
inc
in
jnp
inc
mov
adc
leave
jb
nop
inc
inc
gs
lods
adc
push
stc
pop
sub
mov
filds
mov
bound
xlat
pop
scas
pop
repz
jp
les
enter
fiadds
pop
jp
iret
jl
dec
or
pushf
out
sti
addr16
pop
std
fcom
jmp
mov
pop
adc
and
fidivs
test
sub
rolb
jge
loop
inc
call
add
sub
sbb
jno
ja
dec
sti
sahf
inc
sub
sbb
pop
repz
fadds
dec
inc
xor
cltd
test
inc
or
lods
add
sbb
adc
cmp
cmp
adc
dec
sub
daa
pop
movsl
inc
mov
mov
lret
push
jl
lds
ja
add
icebp
in
repz
fnstsw
adc
outsb
sarb
mov
arpl
xchg
xchg
push
cmp
inc
mov
rep
add
adc
push
inc
sti
xchg
add
adc
nop
inc
sub
xor
cmp
inc
or
pop
jmp
in
in
push
shl
insb
inc
mov
aad
xchg
or
sub
and
push
ret
ljmp
into
fisubrs
mov
jecxz
int
fs
jl
push
xor
adc
lahf
push
xchg
dec
xchg
push
mov
mov
popf
add
in
jmp
sahf
leave
or
mov
or
mov
pop
dec
es
or
jmp
vfmsubss
push
bound
xchg
xchg
adc
int3
lcall
mov
lods
fdivrs
popf
dec
fldl
into
jmp
and
pop
je
repz
pushf
sti
sbb
andb
jo
divl
cmp
mov
fwait
mulps
cli
fmuls
mov
bound
leave
add
dec
xor
xchg
out
daa
popa
pushf
cmp
repnz
popa
xor
pop
inc
cld
dec
in
push
sub
adc
scas
ja
jne
loop
and
mov
sarb
dec
imul
xchg
push
les
mov
dec
stos
pusha
bound
fists
mov
lret
push
fistl
push
out
js
or
cwtl
pop
add
std
and
clc
xchg
pop
jl
shrb
out
lock
lock
mov
cmp
fldt
adc
je
test
and
lds
and
call
xor
es
jae
movaps
push
adc
or
rol
adcl
jmp
jl
or
mov
push
sbb
aam
rcll
fdivrs
mov
hlt
jg
mov
add
push
xchg
and
xacquire
insl
xchg
xor
pop
xchg
jmp
call
adc
push
stc
movsl
mov
add
push
pushf
call
rolb
jg
fldl
loopne
data16
loope
mov
push
sbbl
clc
lcall
sarl
divl
jbe
or
sub
aas
pop
push
fucomip
bound
dec
jmp
cld
pop
out
or
and
or
ficoml
pop
ss
jno
cmp
lods
dec
popf
jge
add
sub
dec
push
loopne
xchg
mov
add
xor
mov
lret
jb
cli
pop
out
mov
dec
jno
adc
arpl
test
xchg
and
enter
adc
in
mov
mov
mov
mov
sahf
mov
inc
sbb
xchg
push
sub
cld
add
add
ret
dec
test
and
das
sub
loope
adc
test
mov
ljmp
xor
pop
jg
aam
jle
mov
and
dec
dec
xchg
inc
in
inc
sub
outsl
jne
fadds
push
cmc
rclb
adc
mov
dec
cmp
sub
or
jmp
into
pop
mov
sar
sarl
int3
cs
fcompl
or
xchg
pop
push
stos
sbb
ljmp
stos
out
dec
mov
jl
mov
out
ret
into
je
mov
sti
jecxz
mov
call
mov
shl
clc
out
std
rorb
dec
mov
xchg
lret
sub
push
pop
cmp
dec
jae
in
or
xchg
cli
sahf
inc
out
sub
test
shll
lds
les
lret
lret
or
filds
pop
subl
mov
fcmovnb
sti
cmc
cmpsl
in
arpl
inc
in
lods
sub
xchg
adc
dec
cmpsb
sbb
adc
jbe
add
and
sbb
bound
jb
mov
pop
xchg
in
bound
add
xchg
and
cmp
mov
or
and
lcall
int
sti
jo
out
add
dec
and
jae
es
or
add
dec
cmp
fidivs
cmpsl
push
dec
icebp
or
pusha
je
mov
mov
jp
mov
inc
cmp
lds
and
dec
jl
fsubrl
xor
stos
xchg
sti
jnp
adc
das
mov
stos
popf
cltd
xor
out
scas
fwait
movsl
dec
shl
mov
xlat
test
and
in
pop
call
add
mov
es
scas
cmp
lret
mov
pushf
inc
and
sub
or
pop
fstpl
test
les
test
lahf
cli
inc
ljmp
std
outsb
dec
insb
cmp
xchg
in
popa
rcll
sar
jp
jbe
mov
inc
repz
pop
mov
and
cmpsb
popf
lret
mov
int3
cs
cmpl
fs
test
jae
push
push
ret
dec
push
fildl
cmc
dec
aad
add
sbb
mov
mov
pop
mov
xor
cs
pop
das
jle
cmc
les
out
lcall
mov
push
fcmovnu
mov
mov
dec
in
fildl
jmp
aas
out
xchg
rcll
jl
mov
js
mov
sbb
push
addb
pusha
insb
and
lcall
adc
shrd
push
xorb
cmp
scas
call
add
pop
out
sbb
subb
or
inc
pop
mov
out
scas
mov
paddd
out
cmp
jg
add
jbe
sub
jl
aad
pop
fdivrs
pop
xor
mov
loope
xor
arpl
mov
nop
cmp
ljmp
push
and
cld
arpl
shlb
mov
xor
addr16
or
lahf
outsl
cld
cmp
cltd
loop
stos
mov
jge
cli
pop
sbb
dec
outsl
pop
addb
nop
jl
movsl
ss
adc
inc
add
mov
enter
popf
push
es
push
sahf
fistpl
mov
push
ja
mov
test
inc
add
mov
cmc
lods
xchg
jp
sti
cs
in
daa
push
or
mov
adc
insb
jns
test
push
movsb
fwait
lret
fcoml
mov
pushf
mov
es
lock
out
xchg
mov
popa
pushf
and
jb
ss
shll
shll
mov
inc
call
scas
dec
mov
shl
imul
cmpl
push
dec
scas
adc
sarl
sub
sbb
jbe
enter
out
sub
lret
jno
xchg
xor
popf
adc
mov
xchg
test
adc
xchg
cli
cs
jmp
adc
imul
cltd
push
lods
and
std
fistpll
mov
jmp
outsl
cmp
cmpsb
xchg
cmp
ss
inc
push
mov
jno
aaa
adc
ret
adc
test
push
pop
mov
push
rolb
arpl
cmpsl
jmp
cmpsl
add
daa
inc
jle
jmp
je
fldcw
scas
imul
cs
xor
sarl
and
mov
call
test
and
or
pop
sti
sti
inc
insb
xchg
fisubrl
in
push
int
insb
adc
dec
sub
mov
cmc
xor
jnp
xor
sub
decb
push
sbb
mov
sub
jno
lods
mov
cmp
mov
sti
es
xor
mov
fs
mov
popa
mov
ljmp
mov
lock
push
roll
arpl
sbb
insl
scas
loop
repz
inc
nop
ljmp
fs
lods
ficompl
pop
cltd
sbb
pop
jmp
out
xlat
fs
std
jg
std
push
arpl
dec
mov
dec
loopne
mov
cmp
push
or
fisubs
xor
xlat
shlb
xlat
jnp
jns
call
lea
pop
add
mov
jo
mov
lea
jg
sub
add
pop
pushf
insl
lods
pop
orl
clc
jg
jne
ret
adc
frstor
mov
mov
cmp
cwtl
test
mov
push
jae
xchg
out
jl
fsubrl
cwtl
mov
xchg
add
add
jp
enter
lods
xor
jmp
jae
aaa
sbb
pop
std
fwait
je
ss
pop
mov
ret
and
popf
test
lret
in
cmp
jg
out
loope
inc
nop
push
cmp
fwait
push
pop
imul
and
jo
sbb
js
sub
enter
or
xor
adc
sbb
sbb
inc
push
xor
mov
inc
or
popa
mov
xorb
jmp
stos
lret
jecxz
ret
fcompl
mov
mov
roll
ret
in
and
das
fisubl
icebp
ja
jns
mov
imul
inc
or
jmp
inc
mov
mov
repnz
inc
in
rolb
idivl
js
inc
inc
fadd
inc
outsl
sbbb
sub
or
xchg
sbb
dec
insl
xchg
loop
in
stos
xor
adc
das
cmp
bound
jg
cmp
push
pop
nop
or
sbb
mov
adc
or
cld
nop
mov
xchg
jg,pn
not
xchg
inc
lcall
and
push
into
lahf
xor
fisttpll
sbb
add
cld
pop
lahf
push
jle
movaps
divl
rorl
lock
pop
lahf
int
sub
cmp
popl
mov
pop
pusha
test
add
push
pushf
and
cwtl
sbb
cmp
stos
fwait
les
mov
cmp
pusha
and
in
add
mov
xor
fidivs
shlb
xchg
insl
ss
xor
fsts
test
cmp
cld
dec
add
push
sbb
push
cmp
mov
ret
sar
mov
dec
dec
inc
repnz
or
xchg
push
pop
ficoms
mov
sbb
out
adc
push
les
xchg
sbb
mov
sarb
iret
cltd
popf
ret
and
icebp
andl
popa
and
ja
add
and
add
mov
xchg
pusha
jg
cwtl
stc
jmp
and
xchg
je
ror
testl
or
outsl
push
lea
mov
lahf
cmpb
push
lahf
popa
mov
stos
das
repz
pop
loope
xchg
dec
mov
lods
sbb
out
in
and
test
fisttpl
cwtl
inc
lock
cmpsb
sahf
adc
xchg
daa
pop
mov
sti
pop
cwtl
lcall
push
xchg
stos
push
cmp
sbb
pusha
mov
test
inc
in
lock
jg
int3
call
pop
in
int3
js
mov
jecxz
push
mov
xor
lods
jae
shrb
push
mov
mov
adc
and
add
imul
sar
adc
lret
mov
movsl
inc
add
fstpl
mov
hlt
rclb
cld
dec
mov
xchg
and
jmp
call
loope
aaa
inc
in
ret
and
mov
push
insl
sbb
mov
dec
cs
pop
lcall
shll
sub
xchg
jb
test
call
cmp
push
dec
mov
rorl
fdivr
push
pop
in
addb
sbb
push
mov
push
sub
and
or
xchg
xchg
popf
pop
lods
push
xchg
into
cmp
test
mov
movsl
mov
sbb
imul
push
cmpsl
or
pusha
inc
aas
cwtl
loop
dec
sti
loop
push
add
pop
push
and
scas
jae
mov
jmp
xchg
push
jne
adc
jne
dec
rcrl
cli
js
jge
fcmovbe
fstp
outsl
leave
inc
out
int
stos
mov
xorl
fstpt
inc
xor
sub
rcr
sbbb
or
pop
inc
and
dec
cmpsb
loopne
cltd
fmuls
jmp
repnz
jecxz
jae
and
dec
gs
adc
add
testl
aad
and
mov
or
push
fst
les
adcl
subb
popa
pop
int3
push
inc
xlat
mov
jb
pop
fwait
push
cld
dec
mul
and
and
sbb
push
inc
add
xchg
daa
shlb
push
lds
hlt
adc
fwait
push
jo
leave
jo
lea
ret
in
test
cmp
repz
xor
push
cmp
fwait
clc
rorl
pop
push
lcall
movsl
sar
es
addr16
inc
add
outsl
jbe
pop
jns
pop
fistpl
shr
or
je
dec
adc
sbb
mov
push
movsb
jge
sub
insb
or
jo
bound
mov
shll
mov
jns
enter
aas
aas
enter
push
nop
ss
mov
not
and
shl
out
xchg
ljmp
mov
int3
jnp
xchg
cmp
icebp
jl
mov
mov
pop
mov
ret
jp
mov
jnp
pop
mov
fstl
dec
jne
fwait
daa
push
or
icebp
popa
lret
andl
mov
push
inc
pop
dec
xchg
jmp
cltd
arpl
xchg
enter
pusha
icebp
xchg
nop
add
pop
push
pushf
stos
movsb
push
into
cltd
adc
popa
sarl
jbe
cmp
xchg
push
mov
mov
faddp
pop
or
in
dec
mov
ja
xor
inc
ljmp
sub
lods
push
inc
call
pop
sbb
sub
aad
add
aaa
cmp
adc
inc
xor
jo
test
dec
jle
lea
fldcw
mov
add
popf
and
aas
je
mov
push
insb
fmul
push
dec
pusha
into
mov
mov
push
and
repz
loope
xor
jecxz
in
es
imul
cmp
in
mov
mov
pop
pushf
push
subl
jp
jne
jmp
add
fisttps
pop
pop
roll
mov
insb
mov
sbb
hlt
push
or
push
clc
jns
sti
and
pop
add
adc
pop
mov
orb
adc
adc
xchg
mov
xchg
or
jae
pop
fimull
fisubrl
pop
std
out
roll
jb
xchg
xchg
jb
shlb
out
inc
jae
in
mov
sub
loop
cmp
mov
sbb
jge
or
test
xlat
mov
out
push
je
mov
fsubr
jle
out
das
mov
shrb
push
fnsave
push
adc
xor
push
mov
sbb
jae
fs
or
xchg
jns
stos
xchg
insb
out
lret
adc
das
pop
repz
adc
xchg
adc
call
pop
das
jae
push
dec
fstps
xor
bound
gs
sti
xchg
mov
and
sbbb
xchg
pop
stos
ja
mov
loope
xor
push
cmpsl
lock
out
lret
add
pushf
les
sar
add
mov
dec
popa
int
push
xlat
movsl
ret
js
dec
xor
inc
xlat
add
out
add
neg
push
jno
inc
mov
scas
push
cmpsb
hlt
out
stos
pusha
mov
jg
sub
sbb
test
mov
and
dec
ja
ja
lds
dec
hlt
add
loope
ficoms
mov
outsb
pop
add
in
adc
lret
inc
std
movsb
jecxz
int
aad
cmpsl
shlb
dec
push
xchg
outsb
data16
xor
pop
push
in
js
imull
sbb
outsb
sub
dec
add
sub
cmpl
push
adc
jnp
test
scas
movl
loop
mov
ja
xor
xor
jle
or
test
add
push
lock
mov
scas
aaa
sbb
fisubrs
adc
lock
fwait
leave
jge
mov
pop
mov
xor
aam
and
sbb
dec
fmuls
fdivrl
pop
sub
sbb
push
push
add
jmp
pop
jae
sub
outsl
aam
fsubs
pop
lea
out
cmp
cld
lods
push
daa
mov
push
xchg
push
lahf
or
lds
inc
fwait
imull
dec
mov
push
and
or
leave
shlb
test
xchg
sub
popl
adc
pop
rolb
test
out
subb
sbb
cli
jnp
fnclex
lods
aam
fldt
jbe
pop
fwait
sbb
cltd
push
mov
mov
push
mov
dec
icebp
and
push
mov
cmp
fnsave
cltd
mov
sub
lea
mov
sbb
iret
xchg
mov
lcall
jns
loop
mov
es
add
pushf
push
cwtl
ljmp
lcall
imulb
testl
push
pop
and
imul
jl
jmp
js
aaa
aad
pop
inc
jecxz
jae
ja
cmp
push
inc
push
lods
mov
jne
test
xor
into
cltd
hlt
ret
cmp
into
cmpsb
lret
lods
xlat
adc
lret
pop
stc
adc
and
and
into
adc
add
incb
cli
push
jge
repnz
jnp
pop
push
icebp
addr16
jnp
lret
out
sub
cs
aaa
cmpb
dec
out
lret
out
in
fcoms
adc
icebp
jo
jns
hlt
jge
mov
xor
sti
aas
sbbl
mov
ret
fstl
shlb
sub
divb
into
xchg
into
out
cmp
xchg
hlt
jb
fstpt
mov
lods
bound
inc
out
repnz
inc
lea
pop
ja
ficoms
mov
sbb
pop
ror
and
testb
aad
lret
lods
jns
and
add
sbb
jge
sub
xchg
mov
imul
out
adc
rol
test
fildll
sub
loopne
xor
xchg
push
xlat
xchg
push
jmp
add
cmp
xchg
fmuls
jne
scas
lahf
inc
inc
in
push
push
ds
mov
fsubl
subl
inc
test
lret
pop
sahf
cli
or
mov
punpcklwd
pusha
shl
stc
outsl
jns
iret
sub
push
jae
xor
enter
dec
dec
fwait
popf
add
or
outsb
sbb
cmp
pop
mov
xchg
add
lock
dec
jo
mov
xor
and
sub
repnz
test
stc
sub
enter
in
dec
push
jnp
add
pop
outsb
in
and
push
sub
push
jns
cmpsb
inc
mov
or
mov
ret
js
jmp
jno
rcrb
shll
mov
shll
imul
pop
cwtl
cmpsb
dec
lcall
or
ss
sbb
mov
add
fildll
cmp
push
test
jle
mov
out
pop
and
jecxz
push
mov
mov
inc
jmp
movsl
aaa
sbb
fdivs
out
mov
sub
jbe
aas
subb
cltd
mov
lods
xor
int3
adc
lds
inc
push
stc
or
pop
lods
xor
xchg
in
or
sbbl
push
and
es
fwait
stc
daa
push
fldl
jp
mov
push
push
xchg
ret
in
and
dec
mov
sarb
inc
pop
stos
push
call
loop
mov
ss
and
int3
cld
adcl
clc
mov
push
out
or
jle
jbe
xchg
pop
and
mov
mov
xchg
or
and
in
inc
jecxz
out
sub
jne
sbb
das
jl
sub
sub
hlt
xchg
sbb
dec
fistl
xor
shll
vmovups
mov
dec
sub
add
test
xchg
dec
js
sbbl
aaa
arpl
andl
mov
or
out
into
or
xchg
xchg
movsl
cwtl
sbb
mov
add
adc
fcmovu
cmp
nop
fdivs
or
pop
fcmovnu
stos
add
out
clc
std
dec
scas
cmp
test
out
movsb
add
sub
pushf
cmp
sub
icebp
js
rorb
sub
mov
popa
leave
ret
cmp
sbb
outsb
jecxz
xor
sub
aaa
adc
xchg
inc
jb
dec
cmp
icebp
pop
xchg
hlt
addr16
cmp
orb
inc
popa
inc
std
xchg
jecxz
imul
test
fsqrt
cmp
inc
jbe
mov
xor
lods
dec
enter
and
mov
jle
clc
scas
lods
inc
loope
sti
lods
sbb
addl
std
arpl
in
lret
dec
pop
mov
sti
imul
or
inc
jae
in
or
lock
adc
outsl
hlt
repnz
stc
lahf
mov
out
jl
pushf
scas
hlt
xor
clc
inc
pause
iret
aad
gs
sahf
add
mov
iret
inc
push
lods
cmp
scas
ljmp
mov
lret
sbb
pop
mov
out
push
jmp
test
xor
mov
nop
cld
cmpsb
jge
out
outsb
arpl
pop
testb
setg
daa
or
lcall
arpl
mov
sbb
call
xor
xchg
ret
push
jp
adc
repz
and
aas
push
sub
xchg
or
mov
push
hlt
insb
ja
xor
aas
hlt
cli
hlt
scas
repnz
insb
iret
sbbb
cmp
xlat
mov
js
jae
dec
std
bound
outsl
imul
test
add
and
inc
push
xor
mov
xor
cmp
mov
mov
xchg
jns
sub
cmp
xor
das
rol
xor
sub
test
inc
sub
mov
jne
push
sub
dec
cs
movl
insl
imul
inc
sbb
aaa
push
call
push
adc
adc
xor
lock
cmpsb
xchg
stc
and
movsl
int
inc
in
lock
fbstp
les
push
hlt
dec
jns
mov
subb
lret
lea
fldl
lcall
inc
in
push
mov
aam
mov
pop
inc
mov
jae
iret
cmp
repnz
scas
or
faddp
in
add
dec
pop
mov
stc
orb
xchg
or
ret
aaa
pop
daa
bswap
mov
adc
mov
xchg
cltd
repz
xchg
mov
es
outsl
mov
inc
fildll
jns
pop
shrl
shll
test
jmp
mov
push
imul
cmp
popf
jl
inc
lcall
adc
xor
cwtl
leave
mov
push
ljmp
dec
mov
sahf
stos
and
sbb
pop
or
gs
test
and
jg
movups
bound
mov
jmp
pop
mov
clc
xchg
add
lods
or
mov
xchg
filds
into
outsb
sub
jo
xchg
mov
jge
sbb
inc
inc
rorb
mov
push
inc
or
xor
cmc
adc
xor
iret
add
dec
mov
jmp
dec
sbb
cmpsb
incb
jecxz
test
xchg
es
mov
fldenv
sbb
outsb
pop
dec
and
test
pushf
mov
jbe
lret
cmpl
aaa
ret
lcall
ds
les
dec
pop
and
sar
xchg
mov
int
shll
dec
leave
jnp
add
loope
imul
sub
scas
mov
pop
mulb
mov
xchg
and
je
push
fwait
mov
push
arpl
dec
add
js
imul
and
xlat
inc
cli
adc
mov
mov
jo
xchg
daa
dec
dec
outsb
add
test
ja
mov
jbe
je
sub
rolb
shl
mov
ret
inc
pop
adc
dec
xchg
sbb
pop
and
jno
mov
mov
xor
and
sbb
pop
popf
rcrl
mov
outsl
repnz
imul
fsubs
jno
xchg
outsl
jae
push
mov
test
fimull
test
cmp
daa
push
or
lods
imul
push
pop
push
sbb
jg
xor
arpl
xchg
test
fsubrs
lea
jb
add
sbb
cmpsb
icebp
dec
mov
popf
lods
dec
pop
push
jg
loopne
sub
add
enter
jo
dec
ljmp
xor
xor
ret
repz
push
pop
cmovs
fdivrl
into
ret
jns
outsl
fcoml
or
movsl
mov
sub
insb
mov
adc
stc
sbb
push
adc
bound
iret
in
cmpsb
xor
aaa
je
mull
in
dec
adc
fbld
sub
mov
lods
xchg
in
aas
icebp
lods
and
into
gs
aaa
shll
test
push
mov
popa
aas
or
pop
sbb
sbb
or
mov
xor
sbb
popf
fmul
mov
lds
ret
inc
mov
mov
mov
mov
mov
aas
mov
sbb
cmpsl
add
add
pop
mov
and
data16
insb
enter
cmpl
scas
adc
or
push
push
aad
sarb
rorb
aaa
shll
mov
jo,pt
sub
je
out
sahf
adc
gs
add
pop
lea
xchg
rcr
adc
les
fs
and
mov
mov
out
nop
xor
lds
jg
aaa
dec
push
sub
dec
adc
inc
adc
fcoms
mov
fnstsw
cmc
jge
add
jle
jnp
fistl
adc
lret
hlt
insb
jl
cmpsb
sbb
gs
ret
and
cmp
outsb
insl
in
movsl
and
sub
es
rclb
incl
jmp
jns
pusha
pop
scas
or
jns
nop
add
sub
int3
jecxz
scas
sbb
push
out
fcomps
outsb
xor
add
xchg
mov
mov
testl
and
cmpsl
les
jmp
mov
fisubs
jge
and
mov
adc
test
mov
sarb
aad
jb
pop
das
push
push
mov
aad
xchg
mov
iret
cmpsl
rolb
adc
push
xchg
lds
or
push
rcrb
pushf
xchg
sbb
popa
pop
mov
sub
cld
or
jnp
jne
add
and
mov
in
jno
push
shrb
out
ja
jl
xor
xchg
out
arpl
xchg
cli
movsb
mulb
mov
imull
and
pusha
lods
cmc
fwait
adc
jle
in
mov
adc
and
inc
or
scas
pop
mov
cld
call
pop
jae
mov
icebp
xor
jecxz
push
leave
cwtl
and
aas
roll
adc
insl
mov
add
add
jb,pt
cwtl
or
jmp
add
xchg
push
popa
rdtsc
icebp
mov
and
inc
xor
fisubrs
std
imul
mov
sbb
test
cmp
jge
xchg
xchg
pusha
andb
fstl
sub
clc
inc
fstp
rolb
pop
mov
into
std
jle
in
fs
pop
jae
call
std
jmpw
cmp
xchg
push
cmpsl
sarl
jo
or
insb
sub
mov
dec
dec
jno
sbb
inc
lods
dec
dec
cmc
push
cmp
jae
stc
cli
inc
lret
nop
or
into
xlat
scas
lcall
or
in
and
lret
adc
fucom
popa
jo
jge
loope
or
xchg
addb
out
punpcklwd
gs
rorb
je
sub
mov
pop
sbb
inc
mov
pop
test
outsb
jmp
push
shr
cltd
das
xchg
addb
xchg
sbb
dec
and
xchg
jne
adc
in
cmc
add
enter
addr16
xchg
shl
ja
adc
shr
push
movb
out
pop
jg
decb
pop
push
mov
adc
lcall
dec
mov
sub
fnstenv
push
stos
jl
and
lock
cmp
arpl
aam
and
jmp
xchg
sub
mov
or
xor
add
or
add
lret
push
cltd
adc
push
push
mov
inc
bound
out
push
sbb
inc
jge
mov
sahf
test
mov
cmp
xchg
push
lds
ret
int
dec
or
adc
movl
push
in
out
je
xchg
loop
addl
push
add
jg
adc
sub
pop
clc
push
insb
xlat
mov
dec
aas
sub
lods
add
add
cmp
pop
adc
cmp
pop
std
cmp
cmp
mov
xor
call
addl
sarb
mov
mov
inc
cmp
lahf
mov
add
test
aas
and
rol
les
incl
fmul
rcrb
movsl
mov
lods
into
jge
xchg
hlt
xchg
pop
inc
jae
xchg
xchg
adc
xchg
push
and
xor
lock
jae
stos
mov
add
lea
and
ficompl
inc
xorps
in
lea
inc
add
into
mov
sub
out
pushf
in
iret
out
data16
pop
xor
adc
lahf
outsb
lods
xor
jle
mov
mov
filds
sub
and
sub
pop
lods
iret
mov
ss
mov
test
xor
addr16
imul
jns
mov
clc
add
sbb
push
mov
test
xor
pop
daa
ror
repnz
in
out
shll
or
test
inc
stos
push
xchg
mov
push
pushf
mov
in
imul
push
pop
cwtl
pop
fwait
inc
sub
imul
mov
jae
lea
aas
lret
daa
lock
mov
xchg
or
mov
shlb
lret
loopne
inc
dec
mov
mov
pop
mov
bound
iret
push
decl
jge
es
loope
mov
mov
cmpsb
ljmp
addb
cli
fwait
shll
popf
test
xchg
loopne
test
fnstenv
and
xchg
ds
orb
jns
jb
add
fstpt
dec
imul
cwtl
js
std
mov
jo
cld
call
test
push
mov
push
sub
xchg
xchg
std
cmp
mov
pop
icebp
gs
test
cmp
mov
jb
das
movsl
push
les
stc
fs
fbstp
adcl
mov
mov
lret
imul
in
test
pop
sub
rcll
int
push
jnp
das
push
mov
pop
out
popa
js
mov
shrb
inc
outsb
movsl
xor
mov
aam
loopne
aad
or
idivl
cltd
sbb
enter
sub
jbe
inc
hlt
jle
jmp
ljmpw
mov
xor
lods
adcl
sub
sbb
jg
pusha
dec
out
pop
mov
sahf
test
aam
sbb
dec
lods
mov
clc
xchg
push
push
test
aam
jo
dec
mov
mov
xchg
xchg
ret
xchg
shlb
hlt
pop
mov
push
mov
lods
sub
cwtl
cmp
pmuludq
xor
lock
insb
jb
xor
repnz
test
leave
or
loopne
pop
jecxz
jns
lods
xor
jecxz
jae
jg
or
insl
repnz
scas
lock
in
mov
push
fwait
or
inc
inc
mov
mov
lret
outsl
shlb
mov
adc
mov
iret
sub
or
fstp
jns
jb
mov
sub
lahf
jno
and
call
push
or
cmp
xlat
mov
sbbl
xchg
jmp
test
xlat
or
sub
loopne
out
das
icebp
dec
sbb
lock
pop
mov
mov
fistpll
lea
jg
mov
jecxz
notb
ljmp
scas
adc
std
jge
mov
jbe
xor
mov
xchg
pop
cmp
pop
mov
scas
push
cmp
dec
je
repz
sti
loop
mov
inc
sbb
xchg
and
dec
fstps
sbb
in
jl
add
in
lods
mov
jle
mov
mov
push
cmp
lret
add
and
xchg
mov
int
pop
cmp
inc
jns
repz
cmp
mov
or
popf
add
fs
dec
add
sbbl
sbb
xor
iret
rorb
push
mov
ja
jno
into
or
jle
cltd
loop
jno
dec
lods
inc
cmp
mov
mov
or
jp
imul
inc
hlt
in
sub
cmp
jbe
mov
mov
sarl
xchg
popf
push
outsb
sbb
mov
sahf
xor
clc
popa
adc
jne
idivl
out
mov
das
pop
jo
int3
xchg
sub
imul
and
stos
rcrb
cs
mov
sbb
cmp
loop
cmpsl
mov
in
fmul
and
out
jmp
dec
scas
cmp
xor
inc
lcall
sbb
mov
mov
inc
xchg
xchg
sbb
js
cli
fiadds
mov
popa
aam
test
imul
addr16
xor
xlat
push
decl
lods
jl
adc
int
sub
push
xor
cmp
imul
imul
stos
idiv
cmp
sub
cwtl
lahf
movsl
push
jecxz
scas
lret
push
jg
test
sub
inc
fs
xor
mov
fwait
push
out
xlat
rol
pop
sar
pop
rep
add
sbb
in
nop
test
xor
sub
dec
lcall
jbe
loope
out
iret
push
inc
push
daa
lds
xor
ficoml
lret
inc
enter
and
xchg
stos
rclb
inc
rclb
inc
jno
mov
xor
and
mov
cmp
xchg
cltd
imul
sub
stos
fldenv
mov
or
and
or
stos
mov
insb
mov
out
fidivrl
mov
push
jno
std
cmp
mov
fisubrl
test
xor
push
data16
xor
xorl
mov
or
movsb
jl
adc
xchg
adc
les
mov
dec
dec
and
xlat
xor
add
leave
adc
xchg
aad
sub
shll
sbb
push
or
stos
out
int3
xchg
xor
addr16
ljmp
mov
ror
push
push
nop
in
loope
out
fwait
mov
and
add
xchg
jg
push
cmp
xchg
adc
and
push
daa
scas
pop
adc
loope
jecxz
sub
aas
sub
lea
test
and
adcl
dec
pop
adc
jg
int3
push
push
andb
icebp
push
imul
jmp
sub
mov
pop
xchg
mov
movsl
and
fdiv
das
pop
dec
in
dec
gs
sub
rorl
push
sarb
jmp
lds
xor
xchg
idiv
aam
mov
mov
aam
add
hlt
mov
in
stos
jl
sbb
push
cmc
sub
imul
dec
cmpsl
rcrl
sbb
adc
pop
leave
clc
imul
test
xor
lds
xchg
lods
and
xchg
mov
push
push
test
inc
repnz
add
fwait
insb
hlt
pop
outsl
orb
fstl
sbb
mov
out
push
aam
fimuls
shlb
mov
out
or
cltd
cltd
cmpsl
mov
and
call
adc
and
inc
daa
inc
add
into
jge
mov
test
jg
jg
pop
mov
jne
push
and
sub
mov
dec
xor
sbb
mov
test
jecxz
popa
inc
mov
or
jge
rorb
lret
out
and
pop
mov
repz
ret
jge
mov
repnz
addr16
xchg
ja
mov
ret
dec
jmp
add
jo
jmp
aaa
push
sbb
aaa
fsubs
fcompl
inc
testl
lret
pop
lret
push
mov
pusha
xchg
push
mov
push
xchg
lahf
lahf
mov
stos
sub
scas
xor
inc
jae
xor
scas
adc
mov
xchg
das
lahf
in
das
lret
sub
mov
jne
out
push
mov
and
mov
je
sahf
pop
mov
sbb
mov
test
cmp
ljmp
cmpsl
mov
fmull
mov
popf
mov
nop
mov
cld
sbb
je
test
les
cmp
dec
mov
mov
sub
fsts
call
and
loope
jo
mov
xchg
repz
pop
ret
stc
mov
icebp
inc
xchg
aaa
inc
imulb
push
icebp
push
inc
test
pop
xor
jbe
adc
addr16
out
push
push
pusha
mov
push
lahf
cmp
in
insl
stos
sub
adcl
dec
mov
out
push
xor
push
pop
lock
lods
dec
mov
rolb
addr16
pop
xor
xchg
rclb
and
ffreep
imul
mov
fstps
inc
xchg
cli
xlat
ret
movsl
adc
push
or
sbb
lds
lods
outsb
in
dec
cmp
push
in
sbb
leave
sub
insl
sub
push
popf
pop
add
mov
push
sub
imul
adc
xchg
lret
lods
ljmp
sbb
xchg
push
jg
add
dec
mov
sub
add
rcl
or
lret
stos
xchg
into
mov
push
pop
and
and
flds
and
or
pushf
xchg
icebp
and
and
cmp
dec
xor
mov
ljmp
ss
insb
mov
xor
sub
jmp
inc
mov
mov
add
ret
add
hlt
imul
pop
jmp
jmp
rcrl
in
add
adc
imul
xor
and
mov
xchg
out
int
iret
pop
in
push
int3
jmp
int
sti
icebp
shlb
add
hlt
jb
mov
jb
lea
int
aad
ss
int3
fidivl
cmpb
xor
jne
pop
cmpsb
daa
shl
xchg
adc
and
sbbb
jmp
push
ja
gs
aad
adcb
jecxz
popa
lcall
andl
aam
inc
ja
jns
std
xor
mov
cmp
sbb
dec
xor
sub
cmp
add
leave
mov
fwait
bound
cwtl
sub
mov
pop
mov
xor
mov
jp
jecxz
sti
enter
outsb
sub
ss
shll
or
stc
jmp
fldcw
adc
out
aam
sbb
pop
outsl
pop
adc
xor
push
cltd
test
xchg
outsl
sub
push
jmp
nop
pop
add
int
xchg
cmpsb
repz
das
jmp
xchg
bound
ljmp
dec
mov
sub
and
fnstsw
push
lods
jle
divb
sbb
mov
outsb
movsl
nop
sub
int
fmulp
jmp
mov
mov
outsl
dec
out
inc
inc
mov
out
sti
lret
std
inc
jl
cmpsl
movsb
testb
sub
stc
add
je
mov
pop
les
lea
pop
xor
and
stos
cmpsb
in
mov
out
lcall
movsl
cli
mov
hlt
dec
add
mov
pop
cmp
jnp
sbb
es
sti
inc
mov
movsl
inc
sti
popf
call
fsts
sbb
and
mov
pop
pop
dec
imul
sti
fdivl
int
popa
inc
push
lods
add
inc
dec
enter
cmp
or
jns
inc
lret
stos
les
outsb
insb
add
jmp
xchg
pop
or
pushl
pop
mov
mov
mov
sarb
ret
mov
jbe
or
sub
jb
leave
or
push
pop
out
insl
aam
or
jae
in
fistps
sbb
mov
push
out
add
xor
jg
orb
adc
jbe
in
lock
into
mov
xchg
mov
push
les
or
popl
dec
push
insl
stos
jno
add
mov
ret
mov
aad
mov
cmp
and
jle
mov
ret
pop
add
sahf
mov
lods
mov
out
je
dec
sti
mov
jne
push
in
shrl
adc
fstl
aaa
mov
cld
shlb
adc
xchg
int
enter
inc
sbb
add
xor
adc
and
out
or
jle
mov
sub
into
mov
sub
mov
jge
jge
jle
jmp
ds
and
xor
cmp
bound
xor
orb
cld
add
decl
push
sahf
jo
inc
jmp
adc
add
shlb
mov
mov
xchg
pop
imulb
mov
xor
lret
inc
scas
cltd
lods
xor
mov
dec
dec
loope
push
push
push
lock
sti
xchg
shrl
fwait
cld
shrl
pop
cmc
inc
mov
xor
cmp
inc
add
loope
popf
ficomps
xorl
cld
fcmove
iret
xchg
inc
add
mov
pop
sbb
jno
popa
add
jecxz
shll
jg
movl
iret
sub
loopne
xchg
cmpsl
pop
int
sub
xor
pop
shr
dec
xchg
negb
adc
sbb
enter
mov
inc
or
stc
sub
lock
out
movsb
jb
les
js
mov
mov
mov
lahf
adc
push
add
pop
mov
loop
jne
sub
add
fcompl
pop
cwtl
cmp
jecxz
clc
int3
sub
fiadds
mov
mov
mov
jg
push
ds
in
push
sub
mov
test
test
out
fistpll
test
enter
push
mov
sbb
xchg
sbb
loope
das
outsb
fimuls
mov
jnp
or
lds
lock
sub
dec
std
sub
mov
sub
cmp
arpl
aad
leave
fwait
dec
or
or
push
daa
xchg
shlb
mov
and
dec
int3
loope,pt
xchg
dec
mov
inc
pop
mov
imul
xchg
jecxz
lret
pop
pop
add
into
insb
insl
pop
mov
test
mov
sbb
push
sbb
inc
xor
jae
dec
add
jbe
lret
pop
into
xor
es
call
lea
dec
mov
dec
jle
jmp
or
mov
jo
jns
icebp
les
dec
stc
and
fld
stos
in
into
xchg
adc
cmp
or
pop
test
inc
push
outsl
std
bound
lds
ds
push
ret
xchg
inc
out
cmp
fnstsw
inc
std
jp
sub
subl
movsl
push
and
nop
jg
stos
loop
ret
popa
or
lret
jbe
fisubs
jmp
ss
sbb
push
mov
sbb
xchg
inc
add
test
in
xor
dec
out
xchg
xor
lahf
fwait
sbb
mov
pop
out
and
push
sbb
rclb
push
mov
outsl
ljmp
nop
inc
cmp
shlb
and
inc
push
pop
push
inc
call
dec
inc
rcll
mov
int
test
and
fs
rcrb
pop
decl
bound
and
int
pop
sarl
cmp
lcall
into
or
icebp
cmp
push
and
fsubl
jle
pushw
popa
iret
or
jne
js
lahf
mov
xchg
bound
les
aad
arpl
jb
mov
add
inc
push
aam
pop
cwtl
push
fwait
xor
xchg
int
cmpsl
scas
or
and
cmc
xor
pop
stos
fimuls
push
mov
jns
dec
sub
leave
jae
xor
popa
jmp
call
fsubrs
lock
sub
sahf
rcl
inc
jp
mov
mov
cmp
nop
or
mov
add
in
repnz
int
jnp
mov
jns
xchg
daa
lock
or
pop
cmp
pop
cld
and
xlat
in
and
out
imulb
mul
dec
and
mov
cmp
movsb
jecxz
test
pop
popa
das
outsl
imul
in
lret
arpl
sti
fisubs
push
cmpsl
imul
mov
or
negb
inc
das
stc
movsb
ret
shlb
data16
mov
in
outsb
pop
repz
in
mov
sbb
cmp
cmp
rcrl
out
rcrl
loopne
jne
push
mov
inc
scas
sti
int3
cmp
jae
cs
cmp
hlt
pop
popa
adc
int3
leave
lahf
mov
fistl
stos
in
mov
dec
and
lret
hlt
mov
mov
out
fistl
pop
in
sti
mov
cmp
aas
outsl
and
mov
push
shll
lock
ss
cltd
add
cld
movsb
push
mov
stos
scas
push
and
scas
aaa
push
push
in
gs
mov
enter
bound
xor
es
xor
mov
mov
pop
mov
test
cmc
cld
jmp
sahf
pusha
push
dec
xor
int3
xlat
pushf
pop
int3
or
xchg
rcrl
cmpsb
pop
inc
test
xchg
adc
cli
xchg
push
into
sahf
repnz
cmp
add
mov
or
shrb
mov
mov
outsl
popf
jmp
fwait
inc
inc
dec
jmp
pop
setns
lds
pop
sti
adc
dec
repnz
xor
pop
out
repnz
inc
sahf
shlb
lock
cli
repnz
enter
cli
das
fmull
ret
jo
psraw
cltd
stos
and
pop
dec
cld
aam
ds
mov
outsl
dec
adc
loop
jae
lock
leave
sbb
push
cmp
jmp
mov
lahf
mov
test
pop
call
cwtl
sub
das
xlat
mov
out
push
sub
test
cld
hlt
push
pop
mov
arpl
addr16
pop
aas
fisubs
icebp
jno
xor
push
pusha
add
shlb
je
pop
or
sub
aam
add
adc
jns
sahf
rorb
movsb
cld
pop
jp
sahf
mov
in
adc
mov
in
mov
mov
outsl
sti
add
lock
xchg
das
and
out
dec
jb
sub
stc
sub
or
mov
mov
xlat
sahf
or
out
dec
lea
mov
inc
jecxz
or
cmp
pop
iret
inc
lods
mov
push
cmp
outsl
hlt
fs
jle
xchg
mov
or
inc
ljmp
repnz
push
push
test
jecxz
sbb
imul
and
add
push
rolb
or
jp
sub
xor
xchg
sbb
loopne
push
ss
in
mov
cwtl
xor
or
imul
xchg
inc
loope
adcb
dec
jae
xchg
sub
mov
dec
or
popf
repnz
pop
jl
out
adc
repnz
mov
dec
jecxz
pop
cld
int
jp
jnp
xor
shrb
xchg
lea
xor
xor
insl
add
fisttpl
es
ds
sub
ds
cs
repnz
cmp
ja
sti
pop
out
xor
pop
add
fstps
fwait
insl
jle
pusha
lds
lods
push
xor
adc
push
in
mov
fimuls
mov
lahf
pop
arpl
and
dec
testb
aad
or
adc
inc
pop
mov
int
adc
push
pop
add
dec
dec
and
lret
cmp
popf
ror
mov
mov
xor
stos
jns
jb
jle
popa
addr16
mov
mov
fdivp
push
jmp
int3
dec
mov
mov
outsl
mov
lcall
xchg
inc
push
jnp
gs
push
subb
jle
cmp
xor
inc
mov
sbbl
adc
mov
jb
cmc
dec
popf
imul
push
adc
xchg
mov
dec
pop
ror
add
inc
scas
inc
or
nop
sub
adc
add
lds
clc
mov
sub
mov
xor
in
jp
rcll
aaa
imul
and
fwait
lods
sub
loop
lods
mov
mov
mov
xchg
lcall
cmpsl
mov
je
addr16
sub
call
inc
xlat
leave
jo
pop
mov
mov
std
add
sbb
insl
hlt
leave
cmpsl
pop
pushf
data16
es
iret
xchg
je
dec
dec
scas
pop
dec
mov
shrb
ror
in
push
call
or
dec
push
icebp
les
scas
sub
xorb
mov
psrlw
push
jbe
mov
lods
in
mov
sysenter
loope
cmp
jno
mov
popf
pop
mov
push
repz
add
popa
out
rolb
pop
aas
jg
les
cmpsl
jge
mov
push
sbb
icebp
inc
dec
fcmovu
lret
inc
out
sbb
xchg
adc
dec
mov
stc
push
test
mov
test
insb
jg
repnz
adc
gs
mov
popf
xchg
lret
adc
out
pushf
or
add
cmp
cmp
xchg
shll
aas
lea
lea
and
shrl
and
test
lret
or
leave
sbb
dec
fs
repnz
adc
fs
inc
sti
js
and
pop
xchg
idivb
mov
aad
aaa
fs
mov
adc
sbb
pusha
mov
rorb
or
jns
imul
ljmp
add
mov
test
shrl
fdecstp
inc
cmpb
jecxz
add
rcl
pop
inc
mov
scas
arpl
dec
jle
jle
ret
cwtl
inc
out
jl
jle
sbbl
sub
inc
out
movsl
scas
push
push
cmc
mov
jo
clc
inc
cmpsb
mov
sbb
imul
and
or
stos
xor
es
loop
mov
cmp
cmp
add
sti
popa
dec
iret
fwait
push
setae
ret
mov
scas
leave
add
test
sub
fsub
dec
arpl
push
es
push
mov
fs
xor
test
xchg
cmpsb
je
fdivp
andl
leave
jno
daa
loopne
and
lea
mov
lcall
aaa
dec
inc
cs
scas
dec
clc
imul
mov
call
mov
enter
aam
push
mov
sbb
push
dec
arpl
test
or
adc
test
xor
out
and
dec
ror
aad
push
int
jl
and
repz
aaa
jmp
dec
out
in
rorl
fidivs
mov
mov
fdivrs
cltd
push
or
in
fdivrl
cmp
dec
mov
ret
push
addb
bound
fstpt
push
adc
mov
fsts
push
add
add
lods
dec
dec
cmp
add
xor
mov
mov
add
fstps
xchg
xorl
lds
cmpsl
or
mov
data16
test
lahf
repnz
stc
jp
push
and
scas
lock
lods
fistpll
movsb
test
in
inc
mov
push
xchg
bound
dec
push
cmpsl
sbb
out
adc
bound
xor
fmuls
das
jecxz
es
pop
pop
popf
or
dec
xchg
jae
ljmp
out
cmp
mov
and
bound
int
cltd
and
jae
pop
and
push
mov
loopne
mov
ljmp
stc
or
std
pop
cmpsb
cmpsl
enter
popa
cmp
mov
cmc
sahf
in
mov
sbbl
jbe
pop
icebp
cmp
pushf
outsb
shlb
push
push
in
mov
shrl
pop
loopne
bound
xchg
adc
data16
data16
pop
push
and
shlb
sub
mov
add
or
inc
mov
mov
fstpl
fbld
adc
lods
mov
xor
enter
push
mov
js
test
les
test
addr16
cld
mov
pop
dec
scas
push
xchg
jns
rclb
inc
and
fildll
jae
fcompp
pop
jg
mov
cmp
xchg
mov
push
outsb
sbb
test
test
sbb
jl
cli
shlb
jne
mov
jae
pushf
mov
cmp
rolb
dec
inc
and
shl
pop
es
mov
insb
lods
addr16
scas
outsb
pop
pop
insl
mov
or
je
repz
jae
mov
xchg
fsubrs
xlat
dec
sti
repz
cmp
mov
cld
ljmp
inc
je
cld
sub
pop
mov
movb
outsb
pop
pop
jne
leave
mov
xchg
xor
cmpsl
popf
sbb
cmp
scas
or
imul
jl
mov
mov
lds
add
int3
into
pusha
adc
sub
lea
mov
sbb
jl
test
lea
xchg
xorb
daa
adc
xor
or
or
leave
sub
add
cld
sbb
jae
xchg
pop
scas
mov
movsb
sub
addl
xchg
adc
cs
nop
scas
bound
shll
pop
mov
xchg
mov
lods
pop
insb
pop
mov
lds
test
add
xor
sub
enter
lret
or
xchg
lods
pop
dec
in
call
sub
mov
dec
mov
bound
dec
jmp
orb
pop
push
mov
cmp
sbb
xchg
xor
insb
push
jbe
lahf
push
mov
and
ret
std
int
jg
jle
sbbl
mov
push
jl
push
enter
arpl
lcall
xchg
out
cs
repz
mov
sbb
aad
cli
lret
inc
and
xor
dec
inc
sahf
jb
mov
push
mov
stc
jp
add
das
adc
push
cmp
pop
into
lds
loopne
jl
repz
jg
rorl
pop
lock
inc
dec
into
push
xchg
stc
inc
ja
aad
aam
pop
aaa
addl
xor
inc
add
scas
test
or
repz
out
jbe
fbstp
pop
sub
insb
pop
xchg
pop
sbb
ret
xchg
in
test
pop
pop
add
mov
jae
lret
mov
push
test
xor
sbb
test
gs
sub
mov
imul
mov
push
nop
shrl
loopne
sub
pushf
arpl
mov
jl
ficomps
push
lahf
jo
xor
xlat
rorl
dec
pop
js
sbb
push
rolb
inc
rcr
sarb
mov
int
push
mov
rcrl
ds
repnz
and
std
xor
test
sbb
xchg
dec
cmovo
jle
fcmovne
mov
imull
mov
mov
mov
push
pop
xchg
daa
pop
or
push
xor
inc
pop
pop
clc
sbb
jns
xchg
inc
mov
mov
test
xor
pop
sbb
lods
jmp
jb
jno
pusha
repz
ljmp
and
mov
aas
in
outsl
sti
int
pop
jmp
jb
loopne
xchg
cmpl
push
incl
push
or
cmp
insl
cs
adc
jp
fsts
mov
out
test
and
imul
mov
inc
cmpsl
es
imul
imul
pop
imul
xor
mov
jns
mov
xchg
sub
fbstp
in
repz
int
or
mov
add
cmp
adc
sbb
push
gs
stos
mov
imul
scas
out
divb
add
ret
jecxz
and
jl
fwait
outsb
fcomip
inc
aas
enter
rol
test
sti
add
cld
mov
fdecstp
lret
pop
stos
and
aad
pop
jo
xchg
andl
les
inc
xorb
lret
xor
lods
adc
push
and
aas
stc
stos
lods
or
mov
fldenv
xor
sbb
fsubrs
dec
cmc
mov
and
iret
xchg
pop
jno
xor
rorb
adc
stos
jge
pop
mov
scas
cmp
xor
cld
std
jno
cld
sahf
jmp
adc
es
popa
repnz
cmpsl
stos
add
test
inc
push
imul
or
stos
pop
fsubrl
jno
mov
stc
xor
jmp
imulb
lcall
cltd
pop
lds
daa
call
mov
in
dec
lods
dec
or
push
xchg
fistpl
cmp
mov
rclb
cwtl
push
jmp
add
test
dec
cltd
dec
and
dec
loope
add
adc
cmp
aaa
test
sbb
push
clc
push
sti
imul
sub
stc
scas
fwait
add
or
push
push
int
adc
icebp
or
ret
es
xor
mov
xchg
inc
jecxz
sbb
in
xor
imul
into
nop
dec
movsl
ljmp
mov
testl
notl
clc
cmp
fcmovnbe
pop
fistpl
addl
add
pop
pop
test
push
push
adc
fs
bound
sbbl
fsubs
stc
and
fists
mov
pop
jge
pop
cmp
xor
or
pop
pop
mov
shrb
arpl
cmp
xor
cmpsb
loope
and
mov
imul
and
imul
sbb
outsb
aam
add
mov
push
push
imul
mov
sub
in
addr16
dec
outsl
scas
mov
fmull
pop
xor
dec
or
test
fs
lret
mov
mov
mov
aam
xchg
or
mov
out
iret
mov
stos
test
adc
adc
pop
jmp
dec
in
xor
cmp
inc
mov
int3
fwait
aas
push
mov
jne
popa
xor
loop
mov
pop
inc
popf
psllw
stc
and
add
ja
push
cmpsl
gs
movsb
mov
int3
stos
sbb
addb
cld
jmp
scas
pop
pushl
push
ficoml
mov
fldcw
lahf
push
popa
fistps
rcll
fdivs
xor
fwait
adc
inc
ja
or
sub
imul
pop
ret
push
dec
nop
sub
jl
mov
xor
repnz
push
movsl
shlb
dec
mov
push
jb
in
xor
jns
pop
add
cli
paddusw
jae
sub
mov
inc
push
inc
push
dec
pushf
cmp
test
sub
dec
fwait
lcall
mov
sub
sub
enter
lahf
test
lahf
and
fldl
stc
push
lahf
sbb
test
js
cmpsb
loopne
push
rolb
inc
and
push
jmp
mov
bnd
push
in
std
shlb
out
int3
mov
sbb
sub
pop
aad
je
adc
or
mov
cltd
jecxz
jb
sbb
ljmp
sti
cmp
push
mov
push
ja
cmp
mov
int3
adc
pop
aam
and
adcl
mov
nop
pop
sub
insb
xor
and
fcoml
dec
aad
pop
pop
sbb
sbb
mov
jmp
bound
mov
push
rolb
sub
in
and
cmp
mov
push
lcall
fistl
ja
aas
sub
ret
stc
mov
loop
mov
add
and
fcmovnbe
mov
jo
dec
jne
add
sbb
dec
add
mov
jnp
mov
push
push
cmp
in
xchg
push
pushf
cli
inc
xchg
and
rcrl
shl
ja
sti
adc
out
lds
mov
test
inc
and
pop
mov
push
and
ds
dec
cmpsb
sti
adc
dec
in
jbe
push
push
addr16
jge
or
leave
fsubl
pusha
jp
out
stos
popf
fdivrl
mov
push
pop
mov
out
testb
ljmp
cmp
xchg
gs
fwait
jle
aam
adc
ficoml
mov
addb
jmp
int3
push
sahf
or
push
lret
sub
cmp
bound
xchg
sbb
jb
es
mov
jo
mov
push
inc
inc
xchg
int3
mov
xor
xor
jg
scas
fistl
push
jp
mov
leave
mov
push
pushl
inc
sbb
sbb
push
adc
mov
repz
xor
mov
mov
fmuls
cmp
mov
stos
push
adc
pop
sbb
and
or
outsl
inc
in
pop
cwtl
jge
out
mov
pop
out
test
jbe
dec
dec
pop
lods
push
inc
dec
outsb
lret
movsb
inc
test
lahf
jae
push
stos
in
xor
jno
add
lea
xchg
arpl
aam
cld
mov
xor
lret
cs
cld
ja
xchg
mov
ss
adc
jne
cmp
fisttps
insb
inc
cli
mov
sbbb
push
jbe
push
mov
mov
mov
ret
pushf
lret
cli
xchg
stos
and
push
adcl
mov
xor
push
fsqrt
dec
mov
leave
imul
ss
jl
or
xchg
and
in
fildl
loop
jl
adc
pop
aas
out
xchg
and
mov
les
mov
movsb
jp
cli
mov
mov
jg
sbb
in
les
jp
cmp
aad
xchg
mov
lods
cs
sbb
int
xchg
add
jecxz
jmp
test
notb
loopne
sub
sbb
js
clc
adc
pop
lods
ret
sahf
inc
push
jmp
add
xchg
loopne
iret
push
mov
adc
jle
dec
dec
fidivs
daa
leave
scas
jle
or
cli
push
xor
ror
sarb
gs
pusha
sbb
scas
mov
add
push
insb
pop
and
iret
sub
sbb
daa
or
imul
insl
clc
sbb
xchg
ja
push
dec
and
outsl
adc
or
shrb
push
in
xchg
leave
xchg
push
dec
push
mov
mov
push
dec
xor
and
pop
addr16
jbe
add
and
test
dec
idivl
loopne
jp
call
ret
shl
ret
jbe
inc
adc
push
push
xchg
add
mov
dec
mov
test
pop
rcrl
lret
inc
mov
push
jae
out
ljmp
outsb
aad
push
sub
outsl
lret
xor
mov
lods
xchg
or
mov
shll
roll
push
rcrl
les
dec
inc
punpckhdq
scas
jp
sub
adc
pop
fisubrs
inc
dec
out
cli
adc
movsl
sar
lahf
loop
add
dec
mov
sbb
inc
cmpsb
mov
push
shrb
sbb
lock
mov
mov
in
es
fimull
mov
loop
hlt
lock
mov
cltd
xchg
cmc
add
dec
out
je
lcall
jns
pushf
mov
add
and
mov
mov
shrl
pop
arpl
aam
mov
fnstenv
decb
dec
or
fwait
rclb
and
xchg
gs
add
lds
in
std
popf
fdivp
jl
sub
or
fstpt
and
mov
and
gs
or
insl
mov
adc
and
mov
adc
fstl
movsb
xchg
imul
hlt
popf
shl
mov
je
jne
shrl
imul
fwait
pop
aaa
test
cs
pop
push
popl
cmpsb
sbb
pop
lahf
ret
les
inc
idivl
xchg
mov
mov
icebp
aam
aam
out
mov
mov
popf
and
sub
fsubl
faddp
dec
js
int3
cmp
xchg
sti
push
mov
dec
loop
nop
cmpsl
mov
dec
jae
mov
popf
jp
adc
xchg
test
add
sub
inc
orl
fdivr
and
push
cmp
xlat
mov
mov
jnp
das
push
aam
pushf
dec
jae
dec
insl
push
mov
jmp
push
mov
add
pop
mov
cwtl
adc
cmpsl
mov
aaa
mov
ds
fnstsw
addr16
idiv
adc
push
cwtl
movsl
sbb
lods
int3
bswap
sbb
lock
adc
cmp
xor
pop
cmpsl
sub
lret
fs
cmp
int3
push
divl
stos
and
lahf
push
jo
sar
loop
inc
sub
ljmp
lea
or
or
inc
cld
mov
aad
adc
and
sub
and
out
cmp
loopne
out
ret
sub
fisttps
div
sbb
dec
pop
cmp
fcmovnb
mov
mov
or
nop
pusha
mov
mov
add
mov
fwait
movsl
jnp
jecxz
test
inc
sbb
out
mov
xchg
call
je
movsl
mov
jl
add
imul
gs
imul
in
adc
sbb
pushf
cs
insb
data16
outsb
stos
je
pop
mov
inc
dec
imul
adc
push
cli
pop
les
jg
pop
mov
mov
pop
lret
jmp
frstor
adc
inc
dec
inc
test
filds
mov
or
mov
lods
pop
ss
les
or
cmpl
sub
push
mov
sbb
fldt
aad
ds
inc
clc
fildl
fadds
cltd
pop
mov
call
aaa
push
dec
in
pop
insb
sbb
icebp
inc
enter
int3
add
jl
fstl
xor
cmp
subb
inc
add
xchg
push
fbstp
cmc
jl
or
pop
jae
out
mov
xor
mov
das
iret
cmpsb
xchg
add
jmp
push
imul
rclb
mov
push
add
shrl
push
out
jle
movsb
rcrl
insl
and
mov
insl
cmpsl
in
jmp
jae
pushf
jg
push
repz
jg
jmp
movsl
sbb
lds
inc
lahf
or
sbb
add
dec
jno
mov
or
inc
test
pop
add
add
add
into
das
popf
stos
add
jne
fisttpll
arpl
add
sbb
jno
mov
push
lods
add
out
out
test
push
int3
jl
scas
inc
in
jmp
and
stos
xchg
fwait
xor
fstl
scas
inc
cmpsl
sbb
sbb
jbe
dec
ret
outsl
dec
add
insb
xor
ljmp
fcoms
je
push
xor
out
jle
mov
das
pop
xlat
xchg
jo
mov
cwtl
xor
jbe
cmp
add
fisttpl
lods
and
push
in
mov
pusha
jae
jo
je
sub
xchg
mov
mov
cmc
mov
and
ja
jae
jo
push
bound
push
mov
out
dec
mov
pop
repnz
xchg
stc
ficomps
jecxz
je
dec
inc
cmp
push
call
fwait
dec
repz
and
xchg
adc
xor
aad
out
les
sbb
mov
pop
pushf
jmp
mov
pusha
arpl
xchg
cs
fisubrs
mov
loopne
add
cmpsb
and
arpl
push
lods
jae
mov
or
fistps
shrb
xor
mov
rol
and
jle
lahf
or
or
xchg
pop
mov
inc
fwait
ret
int
sub
mov
dec
jno
dec
xchg
out
inc
arpl
hlt
xchg
xchg
imull
xchg
inc
mov
sub
add
push
test
pop
into
inc
ds
idiv
adc
hlt
sarl
add
push
shll
scas
jb
lret
mov
js
jno
mov
pop
loope
dec
xchg
or
scas
push
add
and
mov
int
cmp
jle
fisttpll
push
jno
imul
mov
dec
jle
pop
neg
mov
pushf
mov
xchg
inc
xchg
stos
dec
push
or
cmpl
imul
fdivrl
iret
or
int
insl
sbb
cmp
or
dec
push
shll
leave
in
setae
mov
pushf
mov
cmp
or
lods
ss
dec
rorb
mov
or
lret
das
mov
or
or
mov
repz
dec
mov
push
leave
daa
pop
inc
jae
adc
into
xchg
outsb
sbb
xchg
inc
inc
scas
repz
push
cs
cmpsl
rcll
divl
or
cmp
pop
mov
cmpsl
sub
flds
enter
push
cld
int
cmp
popa
icebp
inc
and
arpl
or
lds
jg
jbe
mov
ret
mov
ds
mov
inc
icebp
adc
pextrw
scas
xchg
popf
test
xchg
xchg
inc
gs
mov
push
stc
mov
pop
push
arpl
enter
mov
and
in
xor
je
insb
cmpsb
in
aam
std
fdivl
and
jno
lahf
leave
inc
in
aas
mov
int
add
xchg
arpl
jb
fnsave
pop
sbb
jo
rorb
add
jge
mov
in
cmp
dec
pop
sub
testb
icebp
pop
rcrl
sar
inc
fildll
mov
sbb
imul
pop
test
mov
jle
xor
pop
cltd
xchg
xchg
ret
test
outsb
inc
bound
sub
jp
add
dec
stos
mov
adc
lock
lea
xor
jae
cli
sub
fwait
mov
or
mov
cmpsl
inc
sub
aaa
std
adc
add
dec
ret
sahf
or
dec
lds
aas
lret
push
insl
or
nop
lcall
lods
push
mov
lea
cmpsb
popf
and
xchg
dec
mov
xorl
enter
mov
jb
int3
testb
sub
cmp
xchg
repz
fbstp
sbb
aas
lds
push
ljmp
leave
sub
adc
and
pop
inc
es
ja
pop
testl
fsubp
xor
out
ds
rorb
mov
inc
mov
add
jg,pn
xchg
and
lock
fs
dec
iret
xor
hlt
xor
push
jl
push
pop
pop
sti
fistl
mov
das
inc
adc
imulb
shll
orl
vpaddsw
mov
gs
xchg
rclb
sub
mov
mov
pop
pop
pop
lock
jnp
ss
xorb
stos
jae
mov
mov
mov
dec
sub
adc
inc
xor
in
pop
fcoml
dec
jp
or
mov
fsubl
stos
sub
daa
lcall
adc
and
adc
movsb
pusha
jg
pop
xlat
scas
jmp
mov
mov
cmpsl
imul
adc
xorb
mov
mov
ret
or
pop
mov
fsubr
xor
mov
and
pushf
fadds
mov
rolb
cmp
lock
movsl
shlb
push
mov
mov
push
lods
lret
jbe
aad
add
in
fidivrl
shl
scas
loope
test
enter
push
lock
push
fisttpll
lea
inc
out
cmp
fidivs
ljmp
int
lods
mov
add
ss
insb
dec
imul
mov
fstcw
jns
cmp
out
push
add
gs
xchg
mov
decb
fs
test
popa
jl
sub
rcrl
inc
sbb
xor
inc
in
sbbb
lret
cld
or
ficomps
jl
movsl
shl
cmp
add
xchg
mov
sbb
and
daa
xor
mov
cwtl
jg
jno
into
sbb
add
add
cwtl
dec
xchg
stc
push
mov
and
pusha
or
shr
nop
push
bound
js
or
sub
jmp
push
jge
data16
mov
popl
enter
decl
leave
ss
sahf
cmp
test
clc
inc
jg
fisubrl
mov
clc
std
sub
xchg
sbb
cmp
js
add
insb
insb
lret
add
pop
sarb
call
xor
mov
fcmovne
adc
cmp
aaa
dec
pop
jne
cmp
outsb
mov
pusha
test
cmpsl
inc
fists
sub
cmp
das
cmp
adc
inc
pop
lods
mov
daa
test
sub
push
jne
xlat
xor
mov
adc
sub
loop
popf
in
sub
dec
xchg
mov
test
in
cmc
fildll
add
cmc
das
icebp
ljmp
shlb
stos
es
sub
xor
shll
es
ret
sub
add
sub
mov
or
and
leave
dec
movsl
push
jbe
outsb
push
jne
mov
mov
xor
sub
jns
or
inc
xchg
mov
or
or
jg
test
or
pop
pop
lods
out
lds
stos
movsl
mov
popa
mov
mov
push
mov
sub
pop
inc
js
sbbl
push
mov
sub
xor
jno
lea
mov
sub
pusha
adc
out
ret
cli
mov
pop
cmp
scas
gs
and
test
xor
inc
mov
lock
xor
mov
ret
fisttpll
push
or
arpl
mov
fwait
or
adc
jl
popf
push
mov
cs
je
icebp
cmc
iret
fistps
mov
dec
push
mov
insl
addr16
pop
punpcklwd
jecxz
and
call
jg
jge
ljmp
arpl
shr
out
mov
mov
sub
insl
lret
xchg
xor
xchg
xchg
clc
sub
pop
sbb
int3
dec
push
cltd
push
mov
pop
bound
orl
pushf
xor
pop
cli
cmp
movl
inc
enter
testb
fidivrs
mov
rclb
mov
pop
mov
movsb
nop
pop
ja
insb
sahf
aaa
add
add
inc
inc
mov
cld
iret
pop
sub
shlb
pop
nop
jg
loop
jp
out
or
sbb
push
icebp
les
push
ror
cmpsb
jbe
addl
adc
in
movsb
jno
sar
xchg
cmp
lret
push
jb
jo
pop
push
ja
push
out
sbb
ljmp
stos
push
aaa
imul
mulb
fwait
cmp
fidivl
xor
pop
xchg
add
inc
ds
gs
mov
cmpsb
outsb
and
imul
mov
int3
sbb
adc
push
push
out
push
idivl
pop
fdiv
sbb
loope
rcll
adc
jecxz
js
push
cmp
inc
rcrb
mov
gs
fisubrs
into
inc
cmp
pop
js
adc
inc
and
cwtl
sub
push
mov
clc
js
inc
ljmp
shrb
sub
inc
cli
outsb
outsl
or
add
and
mov
mov
insb
push
mov
cmpsb
xor
xchg
xor
adc
adc
popa
ljmp
fisubs
andl
jmp
test
movsb
pop
sub
ja
sarl
inc
push
jmp
jns
mov
push
and
icebp
into
mov
cmpsl
push
pop
outsb
jg
icebp
insl
pop
mov
mov
sbb
enter
inc
in
mov
xchg
int
dec
cmp
mov
flds
mov
orl
hlt
test
repnz
lods
adc
ds
nop
mov
and
mov
mov
adc
cmp
jo
fldln2
dec
sub
inc
or
fisubrl
dec
jecxz
mov
addr16
popf
bound
mov
mov
popa
cmp
bound
js
enter
push
orl
sti
or
xchg
comiss
pushf
push
push
ret
mov
and
cmc
pop
stos
push
ret
mul
dec
lods
lcall
xor
nop
adc
xchg
jnp
xchg
and
jmp
mov
xor
jl
lock
add
inc
add
sbb
inc
dec
push
push
pop
cvtdq2ps
xchg
mov
data16
aam
mov
js
mov
gs
shlb
inc
ret
shlb
or
pop
mov
mov
shrb
xor
enter
aas
pop
stos
ja
xchg
bswap
push
pop
sbb
cmp
sbb
test
and
mov
insl
mov
add
mov
pushf
lods
sbb
dec
lcall
ds
add
lcall
jl
jecxz
inc
dec
iret
jl
aaa
xchg
cmp
scas
lcall
es
xchg
arpl
mov
mov
roll
fiadds
push
fcmovnb
ret
cwtl
jg
fsubrl
cmpsb
sub
adc
mov
sti
comiss
std
pusha
pop
outsl
iret
out
test
mov
xlat
mov
sub
shrl
stos
lcall
stos
int
cmp
pop
mov
out
push
jle
pop
jae
sbb
leave
mov
inc
add
jne
ljmp
or
mov
xchg
mov
std
dec
aaa
jne
cld
hlt
adc
mov
cmpsb
out
fsub
cs
sbb
arpl
dec
and
inc
xor
xor
and
int
and
inc
filds
test
lods
cltd
rorl
loope
iret
cli
dec
out
xor
jbe
push
pusha
js
lret
inc
ljmp
ja
lret
jle
push
push
mov
cmp
and
add
mov
mov
and
and
cmp
pop
mov
je
aas
push
pop
outsl
ljmp
push
dec
pop
mov
jge
push
out
in
ds
pop
pop
lahf
sbb
orb
stos
dec
sbb
inc
out
mov
mov
xor
scas
lret
jbe
jne
dec
add
clc
or
pusha
fwait
ss
jle
push
adc
jb
inc
xchg
jno
inc
out
in
push
mov
and
lock
ret
xor
xchg
addb
jg
shlw
stos
dec
stos
shlb
out
mov
mov
xor
cmc
xor
push
xchg
inc
jae
inc
adc
fidivs
and
cli
fcmove
aam
xor
incb
jb
cs
jae
movl
push
ret
out
andb
inc
out
dec
cmc
aad
xor
push
outsb
loopne
dec
xchg
sub
iret
dec
xchg
sbb
hlt
dec
pop
decb
inc
and
stos
push
std
adc
imul
in
call
or
int3
jmp
roll
cld
negl
or
sub
outsl
lahf
aaa
pusha
shrb
mov
cmp
xor
imul
sti
add
push
rcr
cmp
mov
es
fninit
xchg
cmc
mov
or
cmpsl
adc
mov
movb
mov
jns
je
xchg
mov
repnz
mov
jecxz
dec
push
xor
adc
xchg
int3
aam
into
aas
and
cmpsb
xor
adc
lcall
xor
jb
mov
daa
xchg
adc
nop
push
mov
dec
pop
rorl
lret
mov
sub
adc
cwtl
into
mov
es
pop
xchg
aad
sbb
pop
arpl
xor
lods
mov
cmp
cltd
ja
cmpb
cmc
lret
mov
mov
ret
loope
push
xor
dec
jo
adc
dec
adc
sahf
adc
or
rorl
sbbl
sbbb
out
cld
jl
push
movsl
push
sub
mov
orl
mov
ss
into
cmpsb
mov
popf
or
rolb
lods
out
xchg
dec
repnz
enter
dec
lcall
idivl
dec
push
es
dec
js
clc
and
xor
jae
fnsave
adc
mov
scas
aad
aaa
lds
sub
or
out
inc
in
mull
dec
fists
xchg
and
add
out
popf
mov
mov
es
lea
cld
orl
fidivs
sbb
addb
stos
adc
add
loopne
rcl
and
daa
adc
outsb
in
mov
not
cwtl
push
mov
scas
idivl
mov
lods
lea
mov
or
test
test
and
xchg
add
lahf
pop
jnp
xor
cs
flds
pop
ret
fwait
pop
movsl
and
orb
imull
mov
or
pop
mov
pop
aam
add
outsb
test
sbb
cld
add
dec
push
das
fldl
popa
inc
jbe
inc
mov
mov
dec
test
test
js
negb
fdivrl
in
jge
sbb
cmp
jo
daa
iret
leave
mov
rcll
loope
adc
inc
cmp
shlb
add
repnz
mov
adc
outsb
jge
xchg
mov
sub
push
gs
shl
xor
dec
sub
inc
push
into
stos
addr16
insb
outsl
adc
jbe
dec
jnp
or
fisubrs
mov
call
ljmp
mov
aad
ds
pushf
pop
pop
pop
add
filds
out
mov
jp
shrb
xlat
inc
ljmp
mov
pop
cwtl
lods
add
cmp
xchg
inc
call
pop
mov
es
data16
aas
adc
cmp
mov
out
adc
enter
cs
lds
in
pusha
jno
mov
aam
out
leave
aaa
lcall
inc
cli
jecxz
push
and
mov
pop
jo
jmp
mov
imul
dec
outsb
fidivl
lods
out
jo
inc
pop
fisttpll
pop
pusha
in
or
stos
loop
aaa
repz
mov
sub
jl
sub
push
and
nop
mov
and
loope
cmpsl
xchg
std
cmp
mov
pop
dec
adc
or
decl
xchg
push
dec
int3
fistpl
sub
or
xchg
test
sti
add
add
mov
and
out
outsb
scas
aas
pusha
loop
jp
les
mov
push
cmpsl
mov
mov
xchg
push
into
jae
adcb
mov
xchg
dec
repnz
pop
rcrb
cmp
cli
jnp
xor
mov
add
adc
push
fcmovnbe
daa
clc
cmc
jl
lahf
int3
cmpsb
mov
sub
jl
mov
and
sub
std
orl
xchg
and
cmp
inc
sub
xchg
push
pop
inc
cld
cmp
mov
lret
jmp
jb
pop
loop
inc
dec
lret
enter
scas
test
mov
fisubs
repz
sbb
add
shll
pop
or
add
or
dec
jmp
ror
cmp
xchg
add
lahf
jno
mov
or
cmp
leave
ja
adc
lods
dec
jmp
mov
xor
ficoms
cmp
cmp
and
loopne
sti
fs
sub
enter
pop
clc
pop
jp
sub
mov
scas
push
dec
xchg
xchg
cmp
ret
mov
push
sbb
outsl
dec
dec
dec
sbb
pusha
fcom
cmpsl
sub
call
or
stc
push
cmp
jl
dec
iret
sub
test
push
mov
mov
dec
js
ja
mov
push
loop
mov
out
jne
xor
stos
in
jo
movsl
add
hlt
neg
enter
xor
aad
push
ret
or
xor
gs
or
int
pop
fwait
xor
mov
xchg
aas
je
loop
mov
das
movsl
adc
sbb
push
mov
pop
fs
or
mov
lds
pop
push
movsb
rol
ss
notl
xor
push
lahf
push
cli
push
cs
push
push
xchg
and
faddl
xchg
test
test
mov
rol
insb
mov
xchg
gs
mov
mov
cmp
cmp
add
bound
xor
mov
pop
pop
add
xor
leave
mov
mov
inc
mov
push
lret
xchg
dec
sti
shll
dec
adc
cld
mov
stc
xor
push
fisubl
mov
dec
xor
xlat
jp
mov
and
bound
out
add
push
pusha
les
jp
sahf
mov
dec
popf
ds
push
arpl
lods
dec
mov
sahf
adc
imul
sub
xchg
push
dec
pop
stc
xadd
je
pop
mov
insb
sahf
xchg
aam
sahf
push
pop
mov
push
subl
pop
or
out
xchg
jl
into
pop
mov
sbb
int
lret
add
xchg
rcr
mov
outsl
pushf
push
imul
pop
into
repz
clc
inc
nop
sbb
push
xchg
pop
jbe
daa
movsb
inc
aam
dec
pop
jns
jbe
movsl
aad
roll
mov
jmp
adc
outsb
mov
cli
ljmp
cmp
ja
jg
adc
add
pop
sub
nop
jge
pop
imul
mov
xor
stos
loopne
jge
inc
enter
ja
rclb
push
aad
ljmp
gs
mov
pop
repnz
hlt
int3
pop
mov
pop
shll
sti
pop
jne
jle
mov
add
movsb
movsb
or
adc
push
push
and
arpl
inc
jl
or
mov
iret
jnp
add
int
clc
and
fidivrl
aad
dec
and
jne
mov
popf
cmp
or
stos
popa
cli
stos
xor
scas
aad
test
or
movsb
mov
jnp
lea
jg
loopne
jne
add
dec
insb
push
or
fcmovne
ds
jp
loop
cltd
jle
enter
fcoml
push
mov
ret
in
pushf
out
das
lret
inc
inc
mov
das
inc
mov
js
iret
js
fimull
adc
and
or
shl
inc
jno
paddsb
mov
out
btl
mov
mov
fcmovnbe
orl
inc
fmul
mov
mov
pop
pop
ret
pop
fimull
cwtl
mov
mov
mov
outsl
and
in
xchg
jmp
cs
cmpsb
xor
sub
out
stc
mov
jno
mov
dec
inc
in
aaa
sub
lds
add
jo
mov
out
mov
or
fidivrl
out
or
lods
jb
pop
insb
cmp
inc
jae
arpl
push
jge
loope
add
sbb
mov
stos
mov
test
dec
sub
out
sub
inc
call
lcall
xchg
ja
jae
or
sti
sbb
cmpsl
fwait
or
shld
divl
leave
fst
or
sub
movsl
pop
out
mov
outsb
sysexit
add
lret
cmp
xor
loopne
xor
adc
ret
imull
adc
mov
sub
sbb
test
push
push
pop
inc
fwait
scas
xchg
in
sbb
cli
repz
push
lock
aas
push
and
cli
add
inc
test
bound
inc
repz
sub
push
nop
mov
dec
lods
hlt
stos
pop
xchg
fildl
cwtl
iret
mov
xor
cmp
pop
xchg
imul
sbb
cld
and
inc
adc
data16
ds
xor
mov
inc
pop
fmuls
shll
ret
sysexit
bswap
cmp
dec
fs
inc
mov
adcb
jg
pop
fistl
cmp
ljmp
jle
cmp
loop
out
lock
imul
inc
dec
bound
pop
jns
stc
stc
xor
dec
lods
xor
std
test
stos
test
lret
sbb
or
icebp
dec
ja
ret
mov
jp
jl
mov
mov
mov
and
xor
inc
scas
sub
jmp
adcl
push
test
pop
sahf
adcb
push
addr16
rclb
scas
out
push
pop
scas
loop
and
lods
mov
ds
xchg
fsubrl
and
inc
sub
xchg
test
cmp
negl
enter
cmp
or
fsub
call
inc
dec
jp
xor
mov
mov
aaa
adc
inc
and
cmp
ret
rcr
outsb
in
push
mov
mov
fs
mov
stos
jecxz
insl
xlat
pop
stos
mov
int3
in
xor
or
mov
insl
stos
imulb
popf
add
adc
mov
daa
mov
inc
mov
push
andl
sub
popf
push
stos
roll
dec
hlt
push
mov
lds
lods
call
insl
mov
adc
test
jmp
rcrl
sarl
add
sbb
daa
dec
xor
mov
adc
test
shlb
cmp
sbb
scas
pop
sarb
cli
out
clc
push
jmp
lret
lock
pop
xchg
mov
mov
popf
dec
sbb
imul
cwtl
push
push
movsl
testl
dec
rcl
popf
lock
in
scas
add
mov
repnz
call
push
pop
sbb
in
popa
fcompl
mov
push
xchg
shll
add
sbb
mov
popl
or
shrl
mov
dec
xchg
lods
and
clc
andb
lods
filds
or
cmp
xchg
roll
ss
sub
fincstp
pop
out
jbe
outsb
jge
hlt
xchg
push
std
jb
insb
insb
dec
mov
sub
out
adc
jle
scas
cmp
mov
dec
jb
adc
mov
xor
je
test
dec
ljmp
push
pop
jecxz
jg
xchg
out
pushf
pop
cmp
push
cmp
pop
dec
jge
movsl
insb
jns
enter
jbe
ret
jns
pop
xorb
mov
xor
jno
pop
xchg
pop
cmc
rcll
xor
xchg
pop
ficomps
fisttps
shll
test
add
xchg
xchg
or
fstps
sbbb
cmp
sub
cwtl
in
mov
outsb
cltd
dec
add
arpl
push
in
xor
insb
sbb
sub
dec
mov
insb
std
test
push
scas
insb
leave
mov
rcr
inc
enter
jnp
mov
imul
orl
lret
jmp
cmpsb
push
xor
out
outsl
jo
sbbb
daa
daa
insl
pop
lret
xchg
pop
xlat
mov
in
sbb
mov
mov
xor
jl
icebp
sub
bound
xor
xchg
test
push
push
test
dec
add
stos
xchg
cmpsl
into
or
and
sti
and
mov
bound
arpl
jbe
mov
push
mov
xor
cs
jl
lock
adc
mov
cmp
dec
jae
pop
std
cli
xor
mov
rorb
xchg
sub
out
push
fcmovb
xchg
movsb
and
in
pop
jbe
and
jmp
cmp
xor
jmp
pop
negl
sbb
xor
pop
into
inc
xorb
rorb
xchg
lcall
ret
out
mov
jns
cmpsb
inc
stos
icebp
add
dec
xchg
mov
fwait
push
daa
mov
fadds
je
sub
aad
push
insb
mov
fimuls
shll
or
stos
pop
cltd
xor
inc
cmpsb
pop
lea
xchg
and
into
or
sbb
fisubs
sub
cltd
test
imul
pop
mov
shrd
gs
sbb
ja
cld
pop
or
andl
cmp
dec
popa
xor
sbb
cmp
sbb
mov
enter
into
adc
sub
xor
cmp
subb
dec
push
stos
mov
scas
push
aas
mov
loop
xchg
or
scas
sub
add
add
movsl
pushl
mov
adc
sbb
arpl
lods
xchg
adc
lods
push
push
mov
push
daa
test
insl
out
leave
add
jmp
push
out
jl
mov
cmp
jae
nop
outsb
sub
adc
jno
test
mov
lods
sbb
add
push
imul
loop
setbe
xchg
cmpb
popf
sbb
mov
addr16
pop
push
sub
or
add
jo
push
sbb
mov
std
daa
add
test
mov
call
push
int3
sahf
and
pcmpgtd
push
insb
movb
sbb
cmp
cltd
lods
scas
pusha
das
outsl
loop
dec
adc
in
mov
rcll
mov
lock
lret
add
mov
cwtl
aam
mov
repz
xor
cmp
and
cmc
jle
test
push
fcomip
add
popa
out
arpl
pop
lret
icebp
jns
pop
aad
fwait
cmp
inc
shrb
jae
push
mov
dec
jecxz
and
jl
pop
mov
iret
aas
mov
mov
enter
je
and
stos
and
mov
cmpsl
mov
lret
xor
fadd
inc
xor
call
mov
test
cli
jmp
in
lods
pop
scas
and
xor
dec
push
fcoml
adc
roll
clc
dec
lods
jbe
add
sbb
loope
add
and
pop
shlb
sub
movsb
sub
stos
in
jmp
insl
mov
sbb
mov
xchg
dec
sbb
les
je
dec
int3
lods
lret
jmp
mov
mov
dec
std
adc
orb
sub
mov
pop
xchg
pop
incb
leave
push
push
dec
xchg
jbe
cli
cmp
mov
dec
dec
or
sbb
sub
daa
jl
cmpsl
xchg
mov
addr16
mov
filds
add
pusha
pop
mov
aam
xlat
cmpl
callw
lret
pushf
hlt
popa
jl
adc
out
push
in
jo
stos
adc
pop
push
adc
lret
in
adc
stos
inc
mov
ljmp
cmp
sub
and
xchg
je
cs
pop
mov
jge
clc
dec
sbb
decl
cli
push
xchg
test
push
lock
shlb
ret
sar
jp
push
orb
inc
inc
shlb
mov
stos
or
mov
aad
jbe
sti
sahf
jo
fwait
das
push
movb
out
inc
jne
mov
and
push
jnp
inc
outsl
mov
mov
push
xchg
dec
out
test
mov
mov
sbb
mov
jnp
fs
jbe
or
jg
pop
bound
enter
push
je
jno
ficoms
ja
mov
push
fidivs
add
add
and
rcll
xchg
cmp
vpmovsqw
lret
fcmovbe
mov
in
aad
into
call
js
and
xchg
arpl
frstor
rol
std
test
icebp
loope
mov
cs
je
dec
insb
mulb
ret
push
jecxz
mov
cmc
into
and
sahf
jae
inc
mov
mov
xlat
sbb
sbb
subl
gs
cmp
data16
jecxz
sbb
sub
movsb
add
jl
jne
imul
xchg
mov
jo
jb
rcll
adc
aam
jbe
or
adc
mov
in
xor
nop
in
xchg
mov
xrelease
push
nop
arpl
ja
mov
sub
adc
mov
or
mov
xchg
pop
fbstp
pop
ljmp
cmp
pcmpgtw
adc
jle
xchg
fistpll
stc
dec
mov
rcl
daa
pop
adc
xor
ljmp
cli
sarb
lods
adc
sbb
fnstsw
adc
dec
or
mov
adc
mov
hlt
aam
ltr
inc
mov
icebp
xlat
jo
mov
fmul
mov
adc
adc
jmp
out
enter
xor
in
lcall
push
dec
adc
push
jne
add
idiv
dec
push
adc
rcl
insb
mov
xchg
enter
mov
hlt
mov
dec
shll
sahf
and
and
in
and
outsb
cwtl
repnz
test
test
pushf
mov
xor
inc
add
repnz
cwtl
fst
int3
pop
int
in
adc
popf
push
ja
and
daa
lret
dec
cmpl
xor
pop
sbb
push
mov
test
cmpsb
negl
out
sahf
xor
gs
and
inc
and
xlat
cmp
mov
out
add
dec
ret
dec
stc
xchg
mov
in
ret
sub
imul
mov
mov
insl
cmpsl
mov
outsb
or
dec
inc
and
fldt
insb
dec
adc
aam
shrl
pusha
out
jle
mov
out
lret
movhps
and
pop
and
pop
xor
jb
pop
shrb
lds
js
test
popf
aam
jns
outsl
mov
sbb
lds
inc
iret
aaa
cmp
mov
pusha
sarl
je
daa
xor
push
mov
mov
stc
lds
in
sub
ljmp
jnp
gs
fcmovu
dec
cmp
js
adc
in
or
xchg
fimull
es
test
sub
lods
mov
aas
popa
pusha
pushf
mov
iret
mov
lcall
sub
pushf
iret
sti
xor
pop
aam
sbb
pop
pusha
lods
or
mov
xchg
jge
sub
frstor
push
xchg
sub
scas
add
xlat
mov
jp
mov
adc
or
stc
hlt
nop
dec
sub
daa
aas
push
pop
pop
sbb
in
jb,pn
lds
and
hlt
mov
pop
and
xor
andl
xchg
fldenv
pusha
pop
mov
sbbb
out
aam
xchg
dec
imul
cltd
mov
cmp
jle
xchg
adc
arpl
out
ficoms
rcl
sbb
dec
inc
lods
fstl
aas
jge
xorl
push
mov
jge
js
loopne
imull
nop
dec
inc
add
xchg
sbb
outsb
out
jmp
insl
inc
and
mov
aad
ret
sbbl
aas
test
jae,pt
mov
mov
push
in
mov
das
scas
mov
daa
xor
cltd
imul
add
mov
loopne
xor
loop
cmpsb
lods
push
lea
push
sti
push
sub
jmp
mov
dec
or
add
cmp
lock
cs
cmp
cmp
fcmovnu
inc
or
jmp
lret
aam
sub
movsl
mov
sbb
xor
pop
jo
stos
xor
dec
popa
call
ja
cmp
iret
add
cmp
fildl
into
mov
out
movsl
addr16
pop
arpl
xchg
inc
lcall
cmpsl
lods
mov
adc
shlb
push
pop
and
push
jb
xchg
jp
fnstsw
sahf
lahf
fstps
daa
fs
aaa
movsl
dec
xchg
mov
out
or
xchg
cld
adc
cmp
ja
mov
lods
data16
shlb
ret
popa
sbb
add
ror
test
movsb
add
cmp
jne
pop
push
int
cmp
mov
push
imul
xor
cmp
cmp
mov
ja
pop
aas
xor
in
or
cltd
dec
rclb
popa
icebp
fsubs
adc
inc
push
mov
push
xor
dec
ja
dec
test
sbb
ret
xor
iret
xor
repz
mov
mov
xor
movsl
push
xor
push
mov
fdivp
and
pop
xor
inc
inc
cli
outsb
mov
popf
and
cld
push
test
test
test
imul
add
stos
sub
in
or
push
insb
xchg
mov
das
movsb
push
outsb
push
rcll
push
jne
inc
adc
mov
xor
mov
or
cli
or
sbb
mov
popa
addr16
adc
inc
jge
cmc
in
mov
inc
add
hlt
sub
mov
xchg
xor
cmovno
pop
test
push
shll
push
push
test
cmpl
stos
push
test
mov
mov
cwtl
dec
jp
push
pop
cmp
pop
add
hlt
lock
sarb
add
push
dec
pop
jne
repz
mov
enter
pop
icebp
in
push
cmp
popa
repz
ds
mov
enter
mov
mov
sub
jae
or
dec
or
lock
pop
jl
gs
test
stc
lcall
inc
push
movl
mov
mov
pop
ret
cwtl
mov
pop
pushf
push
stos
mov
sarb
inc
jns
loopne
lahf
mov
lods
mov
fsts
sub
andw
outsb
push
and
add
iret
inc
stos
mov
fsts
jae
mov
rorb
mov
inc
rcrb
xchg
out
ret
nop
xchg
pop
les
add
adc
add
movb
cmp
rcr
push
icebp
sbb
push
andl
mov
mov
iret
insl
pop
ljmp
mov
jb
cmp
mov
pop
jmp
repnz
adc
gs
pop
and
cmovo
mov
xchg
into
test
mov
mov
pop
or
xchg
sarb
icebp
cmovle
movl
cmp
push
xor
test
xchg
mov
xchg
loop
cmpsl
sub
pop
mov
fcoml
inc
mov
cmc
inc
and
decb
loopne
sbb
ds
rclb
lods
mov
adc
aad
cmp
out
and
fidivs
cli
adc
mov
clc
pop
mov
push
into
jl
dec
outsl
fisubrl
pop
ja
mov
adc
and
or
pop
test
movsl
into
sub
lds
jbe
and
jne
xchg
and
out
mov
pop
cmp
shlb
call
cmp
mov
fldl
lock
sub
lahf
mov
sbb
sbb
push
subb
mov
push
cmp
in
adc
sub
outsb
shll
pop
add
scas
popa
mov
mov
out
pusha
clc
add
lret
icebp
lods
lods
enter
test
cwtl
test
dec
mov
or
sbb
outsb
aas
out
xlat
mov
adc
add
pop
daa
das
lret
fcompl
mov
in
ret
jp
mov
in
sbb
into
inc
pusha
outsl
repz
int
sti
inc
jge
push
pushf
push
and
mov
divb
pop
dec
mov
repz
pop
out
xor
fwait
push
mov
push
and
sbb
in
outsb
test
data16
dec
iret
mov
mov
in
push
repnz
int
shrb
dec
push
mov
lods
add
dec
aas
cmp
mov
adc
mov
push
mov
jb
xor
add
test
insl
cmp
aam
mull
jo
inc
in
clc
out
adc
xchg
add
lahf
sbb
in
add
inc
mov
test
dec
icebp
adc
mov
fdivs
mov
ss
int3
mov
fsubs
nop
jecxz
adc
out
mov
shl
adc
and
shlb
mov
icebp
jmp
pop
dec
sbb
movsl
add
add
inc
jp
in
cmp
imul
mov
push
inc
xchg
in
lock
lock
mov
outsl
bound
or
mov
fbstp
idiv
jmp
cmp
cmp
test
jl
mov
fstpl
jge
xchg
mov
popa
loope
sbb
jns
jmp
sbb
rcrb
repz
hlt
je
mov
imul
imul
daa
out
cltd
es
push
divb
sub
and
add
out
mov
or
js
mov
sarb
test
mov
fbld
sbb
mov
aad
rclb
inc
shrl
shrl
mov
movsl
sub
adc
jecxz
inc
mov
jmp
sbb
insl
ss
ret
or
js
bound
dec
sbb
arpl
xchg
mov
lock
adc
js
fwait
mov
dec
and
insb
popa
notb
dec
mov
jmp
iret
in
shr
lea
and
jne
cmpsl
test
jmp
test
inc
lock
shrl
ss
sarb
rorl
add
in
enter
and
xchg
popf
adc
sub
push
cld
fdivrs
push
mov
aas
pop
popf
lds
out
decl
insl
cli
lea
pop
fsubl
mov
ret
das
fisubrl
ljmp
in
imul
repz
cmp
cltd
mov
imul
imul
lea
dec
sub
repz
shll
rcrb
aad
jns
in
lock
ss
scas
lods
jecxz
out
pop
hlt
xchg
jl
push
ja
cltd
into
movsl
rcll
fstps
cltd
loop
js
push
shlb
or
popf
pop
cmp
fcmovne
es
es
jmp
lret
sbb
notl
jae
jno
aad
into
test
insl
adcl
mov
add
mov
push
sbb
ja
iret
mov
push
sbb
xor
mov
fwait
pusha
test
push
pushf
jle
inc
andb
lock
bound
loope
adc
mov
inc
sbb
stos
clc
jnp
push
inc
scas
rcr
test
jno
pop
aas
and
push
push
pushf
push
fwait
fucomip
out
fs
ljmp
pop
out
inc
pushf
jge
inc
inc
inc
xlat
xchg
mov
mov
lock
cmp
or
scas
xor
js
mov
lret
mov
sbb
pop
aas
jl
enter
add
test
push
xchg
push
add
sbb
dec
cmp
andl
jp
sbb
push
pusha
push
sub
lret
pop
or
std
das
push
inc
imul
mov
xchg
push
xor
adc
push
lods
popf
int3
add
inc
in
or
mov
in
lahf
pop
in
das
mov
ja
fwait
push
mov
lret
jp
inc
and
movsb
and
mov
iret
test
sbb
in
cld
addr16
sub
outsl
in
sub
and
psrlq
fildl
popf
fwait
sub
mov
and
xchg
xchg
mov
shrb
lcall
in
push
lahf
mov
lcall
mov
and
and
cmpsl
arpl
jo
movsb
loopne
pop
idiv
aam
push
stc
int
out
cmp
addr16
fistl
lret
cltd
push
sbb
aam
inc
xor
xchg
push
leave
jbe
inc
xor
or
in
cld
in
scas
ficompl
dec
sub
inc
lret
fstl
add
rorb
pop
scas
roll
ljmp
sbb
jmp
dec
mov
cs
xor
sarl
scas
ds
cmp
pop
mov
je
std
xchg
mov
sub
xor
cli
dec
sbb
mov
jo
dec
dec
xchg
xor
mov
pop
sarl
mov
sbb
jle
mov
pusha
fsts
or
mov
xor
outsl
jbe
fwait
push
jne
add
sbb
sub
mov
inc
xchg
daa
and
div
mov
ds
dec
aam
std
xor
mov
mov
sub
and
dec
fnstcw
gs
lods
in
into
xor
in
pop
mov
jne
pop
xorb
les
and
mov
mov
cmp
mov
int3
xchg
xor
fcomps
dec
cmp
divb
scas
jl
cmp
jg
std
or
dec
decb
mov
jmp
sbb
lods
pxor
fistps
rolb
cmpsl
cwtl
lcall
fidivs
pop
cld
stos
shll
xchg
leave
jge
loope
pop
sub
push
adc
cmc
xor
sbb
test
xchg
into
dec
sub
je
cs
mov
pop
or
fst
xchg
add
stc
lret
into
mov
fs
lret
lea
mov
xor
ds
and
notb
aaa
jae
inc
push
add
or
aad
movsl
cwtl
sbb
popf
xor
in
mov
daa
and
push
pop
xor
mov
and
push
into
xor
mov
loop
xchg
cs
hlt
lock
cltd
rorb
mov
and
and
push
push
hlt
dec
dec
fistpl
dec
test
push
das
mov
sbb
in
jmp
dec
sahf
movsl
and
loopne
addr16
xorl
sub
repz
cmp
add
das
cmp
pop
push
cmp
xchg
shll
in
xchg
mov
push
call
test
push
je
enter
push
pop
ljmp
adc
test
repnz
mov
pusha
std
icebp
out
push
jge
not
sub
arpl
xlat
mov
add
pop
or
cltd
adc
mov
xchg
mov
out
push
mov
mov
aam
lea
xor
sub
sti
inc
sub
mov
int
mov
cmp
popa
cld
xchg
push
adc
push
inc
jecxz
jmp
xor
or
push
push
leave
pushf
add
jb
in
mov
pop
lret
inc
sbb
sti
sub
push
scas
pushf
lahf
ja
sbb
cmp
inc
out
pop
iret
sub
dec
xchg
lret
or
sbb
insl
jmp
dec
fiadds
daa
jp
adc
sbb
lds
out
call
cmc
mov
jp
add
jns
jmp
xchg
sub
popf
sub
dec
aam
or
pop
push
jmp
out
leave
adc
inc
rcrb
xchg
loop
mov
xchg
call
int3
dec
cmpb
mov
mov
add
out
push
fwait
insl
sub
jg
pop
fcompl
mov
cmc
push
repz
dec
stc
mov
adc
out
into
cmpsb
rorb
cwtl
dec
mov
test
dec
enter
push
add
pop
add
clc
jno
mov
sub
xlat
fnstcw
sub
push
or
and
in
and
cmp
cmp
or
jne
xchg
movl
xchg
adc
jl
xchg
mov
pop
icebp
sbb
mov
pop
mov
adc
xor
or
and
push
fsubrp
pop
lock
add
shll
lds
xchg
in
pusha
ret
dec
pop
xchg
xor
loop
js
aaa
ja
jne
addr16
pop
add
cwtl
scas
sub
cld
pop
or
movq
popa
loope
fbld
aam
notl
out
sbb
mov
in
scas
js
aad
sub
mov
push
xchg
dec
movsl
jg
clc
dec
lcall
pusha
cli
inc
ja
mov
insb
clc
inc
iret
insl
shrl
es
mov
and
popa
jo
lods
push
xchg
mov
fidivs
cmp
push
mov
cmp
out
mov
vfrczsd
dec
movsb
mov
rcrb
jmp
fisubl
mov
test
cwtl
sub
arpl
mov
xchg
imul
daa
sti
add
mov
mov
or
test
fldl
inc
add
arpl
mov
cmpsl
lods
jge
imul
inc
jl
gs
lods
or
shlb
js
js
andl
sub
push
les
xlat
cltd
adc
mov
fcomps
lcall
sahf
stos
out
adc
sti
ds
adc
pop
stos
lea
and
lcall
pop
mov
cmp
or
sbb
shlb
daa
in
es
mov
adc
int3
pop
shrl
adc
not
pop
repnz
jbe,pt
push
push
iret
dec
mov
adc
mov
insb
sub
xor
cmp
dec
and
or
lret
cmpsl
je
add
mov
stos
xor
orb
xor
pop
jp
lds
xchg
dec
jno
push
bound
loop
out
pop
mov
push
lods
fnsave
cmp
cmpb
mov
pop
and
loope
xlat
adc
sub
mov
arpl
adc
push
shlb
insl
loop
ret
rcll
iret
dec
mov
and
sub
out
push
mov
pop
inc
daa
mov
mov
xor
outsb
jp
out
call
gs
js
ret
push
dec
push
lcall
out
jecxz
dec
dec
sbb
jecxz
mov
aaa
fcoml
fs
lea
xchg
call
jp
push
push
out
les
sahf
gs
fdivrl
arpl
or
shll
mov
mov
xorl
mov
mov
inc
jnp
filds
adc
xchg
lods
xchg
mov
and
insl
popa
pop
int3
mov
inc
bound
inc
ror
fs
int
sbb
push
or
sub
or
lahf
adcl
xlat
aad
cmpsb
mov
push
outsl
scas
xchg
and
mov
mov
xor
dec
adc
aas
push
sbb
loop
mov
mov
insb
add
mov
sbb
hlt
fcmovne
push
add
cmp
cli
pop
add
imul
pusha
cwtl
popf
jno
pushf
je
dec
xchg
xchg
pop
test
dec
sbb
sarb
mov
push
xchg
sbb
je
popa
les
push
ret
icebp
sahf
mov
scas
xchg
and
inc
nop
mov
jns
and
push
sub
mov
xchg
mov
push
dec
mov
xchg
aaa
imul
repnz
shrl
pushf
ljmp
and
push
push
pushl
arpl
int3
les
xorl
out
iret
xchg
rcrl
inc
sbb
push
add
adc
fadds
pusha
imull
shlb
cmp
mov
pushl
or
xchg
dec
push
xchg
idivb
test
mov
je
push
and
push
pop
inc
ficoml
pop
outsl
cli
cmp
out
movsb
xor
cmp
in
or
movl
test
or
loop
sbb
mov
cmp
add
fbstp
inc
or
push
test
mov
jne
repnz
jns
mov
in
push
push
push
js
lods
sti
pop
jbe
cmp
pop
das
sub
pop
je
inc
cltd
mov
repnz
pop
pop
push
sbbl
push
pop
inc
cli
mov
pop
pop
and
lcall
jmp
sbb
push
and
xlat
repnz
mov
fmull
in
sarl
scas
dec
in
jge
adc
push
repnz
mov
mov
sub
xchg
lock
mov
mov
scas
cmpsl
mov
mov
jnp
xorb
shlb
inc
mov
inc
daa
fbstp
in
or
ja
cwtl
push
ss
sbb
add
nop
xchg
adcb
test
mov
mov
ds
pushf
roll
stos
lea
scas
dec
repnz
mov
add
jbe
iret
jmp
test
mov
xchg
pop
or
mov
xor
push
or
out
adc
dec
jne
lcall
pop
mov
or
std
xchg
fmull
out
aaa
cltd
mov
and
pusha
jbe
xchg
stos
rcr
push
cmpsb
adc
dec
fwait
pop
lcall
mov
push
ljmp
cmp
call
fmuls
sbb
xor
sbb
fimull
sbb
hlt
xchg
mov
mov
sti
mov
cmpb
scas
cli
inc
push
repnz
outsb
cltd
and
movsb
mov
aad
push
mov
add
into
push
cmp
mov
jno
mov
adc
rolb
xlat
fsubrp
jae
das
shll
cmpsb
xorb
lock
sbb
pop
in
je
dec
dec
sub
adc
inc
test
sub
jge
add
xchg
outsb
fnsave
cmp
or
push
xor
jl
xlat
dec
mov
xor
push
lock
insl
sar
mov
cmp
subl
test
ret
mov
cmp
push
dec
orl
mov
cs
fisubrl
inc
out
add
mov
bound
inc
imul
dec
insb
mov
and
and
sub
sbb
pop
das
cmpsl
cmpl
xor
lods
orl
mov
ljmp
iret
pop
lods
mov
and
ret
mov
mov
and
cs
jno
ret
lcall
outsl
and
and
mov
lret
ss
xchg
xor
cmpsb
cli
push
mov
cmp
pop
mov
push
sbb
mov
mov
mov
pop
mov
pop
mov
xlat
inc
add
pop
scas
dec
out
xor
jmp
shlb
stos
dec
stc
mov
push
lahf
mov
inc
adc
flds
mov
loope
sub
sbb
lcall
xchg
mov
aas
test
dec
gs
dec
push
xchg
jnp
mov
dec
sarb
xor
inc
into
jno
mov
mov
sub
jne
loop
cmpsl
xchg
mov
mov
adc
mov
out
push
jae
fists
sub
test
sub
int3
out
jecxz
mov
xor
or
cltd
test
xchg
inc
enter
out
fimull
lahf
mov
xchg
fwait
pop
lret
pop
enter
imul
fdivr
inc
mov
cmp
jmp
mov
mov
js
inc
push
popa
stc
push
sti
rcr
xor
jl
push
adc
mov
fmuls
stc
pop
and
mov
or
dec
out
pop
imul
iret
hlt
mov
loope
pop
jo
inc
ret
inc
jae
fadd
jne
jl
int
lret
popl
xor
rolb
sub
cmpxchg
mov
mov
or
and
cmp
sub
mov
mov
cmpb
jl
sbb
ds
rclb
jno
or
bound
ss
stos
dec
inc
or
cmp
inc
xchg
or
cld
dec
cmpb
add
cmpsb
sarl
jo
loopne
sub
push
in
push
loope
push
mov
insl
and
sub
scas
mov
inc
aad
mov
popa
fisubrs
cmp
cld
testl
dec
lcall
xor
jecxz
test
or
add
push
xor
shrl
inc
inc
cmpsl
mov
mov
sbb
nop
jno
js
pop
cld
push
jns
movsl
sub
lods
mov
mov
and
push
push
test
and
xchg
add
jge
aas
inc
xchg
dec
lahf
sub
sbb
shrb
lock
mov
push
imul
or
repz
push
jge
pop
cmp
enter
push
test
in
into
cmp
xor
push
test
add
lret
cmp
add
lock
inc
and
dec
pop
imul
add
mov
mov
loopne
sbb
nop
adc
mov
dec
mov
jne
or
inc
les
movsb
mov
xchg
sbb
std
test
xchg
lds
fnsave
jbe
jle
mov
gs
adc
cmp
test
add
in
jl
popf
pop
sbb
fisubrl
out
push
push
push
sbb
lcall
imul
repnz
inc
xchg
adc
pop
popl
push
mov
pop
test
mov
xor
pop
push
add
xchg
push
pop
sahf
mov
mov
jp
pop
sbb
flds
fnsave
add
and
hlt
das
movb
dec
mov
jo
xor
pop
insb
ficompl
cmp
jo
ficoms
rcrb
cmp
jle
dec
push
mov
mov
jae
in
mov
mov
push
jns
fstpl
or
inc
nop
and
in
cld
and
dec
iret
lcall
arpl
aas
shll
outsl
call
push
mov
xor
lds
repz
int
addr16
pop
jo
pop
push
mov
neg
jbe
lock
and
aam
push
enter
cmpsl
idiv
movsl
divb
lahf
cld
pop
jle
push
jle
fstl
cmp
bound
dec
add
sbb
xchg
xchg
push
repz
fadds
sbb
and
lahf
ja
pop
shr
mov
cli
loope
iret
xlat
jp
out
ja
sub
frstor
test
loope
cmpsl
mov
inc
data16
mov
sbb
mov
sbb
into
fsts
sbb
das
jb
cmp
insb
flds
xor
inc
adc
pop
mov
in
xor
or
cwtl
dec
pop
rol
xchg
xchg
mov
pop
aas
mov
ficomps
add
sbb
pop
cmp
and
mov
adc
repz
push
xchg
fiaddl
inc
push
dec
jp
lea
pop
imul
and
jno
mov
ss
jmp
rcl
mov
icebp
dec
out
mov
xlat
xlat
repz
pop
mov
fnstsw
push
insb
xchg
jb
vshufpd
sub
and
xor
fwait
sbb
fidivs
cs
cmpsl
rcll
inc
outsb
loope
jmp
jbe
push
pop
enter
gs
outsb
cli
dec
lods
adc
jmp
stos
idiv
in
push
fbstp
hlt
ljmp
add
jae
out
jge
stos
cmpsb
push
sub
push
lret
into
inc
iret
hlt
es
cld
sti
outsl
push
repnz
push
push
shll
lods
mov
iret
xor
adc
mov
dec
mov
fstps
mov
rorb
es
push
xchg
shl
int
test
leave
cmp
call
sub
cmp
aam
gs
xor
cmp
push
fcoml
ljmp
push
xchg
and
jbe
mov
push
cs
sbb
daa
mov
fisubrs
sahf
imul
adc
add
mov
mov
sub
xchg
mov
xchg
add
dec
add
lods
pop
and
lods
push
xor
sbb
out
dec
cltd
insb
pop
lock
add
mov
sub
in
dec
stos
loop
loopne
xchg
cmp
mov
jmp
sub
lods
cld
pop
mov
nop
cld
cltd
mov
and
dec
xor
sub
aas
sbbb
jno
adcb
dec
sbb
push
or
mov
pusha
push
push
xor
push
int
pushf
sub
mov
popl
enter
mov
pop
data16
xor
lods
fsubrp
lea
out
push
pop
cltd
sbbl
pop
rcr
mov
in
std
inc
mov
sti
pop
lock
adc
jns
sahf
inc
inc
mov
xor
cwtl
dec
mov
xor
and
sub
jae
mov
push
fildl
imul
fidivrs
push
or
mov
test
clc
sbb
in
sahf
test
sti
jbe
data16
loopne
xchg
push
arpl
add
repz
outsl
in
ja
pop
pushf
test
and
push
rcrb
push
xchg
lcall
mov
loopne
mov
daa
mov
cmc
inc
std
add
fcomip
pop
cld
xchg
inc
movsl
stos
testl
mov
insl
pop
test
or
dec
pop
popf
cltd
js
outsb
je
push
lods
pop
xlat
loop
push
cmpsb
xchg
lret
sti
sub
into
in
pop
pusha
lods
mov
sbb
loopne
jp
adc
fnstsw
mov
push
xor
jo
std
enter
arpl
loope
pushf
ret
cmp
and
cmp
jns
mov
mov
lahf
adc
stos
ss
mov
adc
leave
test
push
pop
push
add
jb
nop
xchg
jl
ret
cmp
or
xor
in
mov
ljmp
dec
sub
rorb
test
xor
test
and
add
jbe
pop
adc
fcmovnbe
push
or
int3
adc
xchg
push
push
bound
sbbl
xchg
std
mov
push
jne
xor
mov
clc
lret
or
mov
pushf
scas
xchg
dec
loopne
cmp
pop
mov
push
sub
jns
or
sti
mov
pop
jo
push
add
cmpb
inc
pushf
adc
mov
lock
mov
clc
and
jl
xor
aas
cmc
fidivl
push
std
jno
popf
popf
lret
divb
fcmovne
and
mov
mov
ror
pop
and
add
cmp
and
push
mov
and
movsl
ds
ss
push
stos
lret
jmp
int
cmp
add
inc
mov
cwtl
insl
inc
sbb
aad
mov
pop
jb
pop
pop
mov
cmp
pop
xchg
xchg
mov
fstpl
dec
pushf
aad
in
jg
pop
cltd
scas
shl
daa
sub
mov
test
jne
adc
rcr
dec
arpl
test
jmp
jns
pop
testl
vmwrite
push
dec
ljmp
lea
out
clc
mov
add
jno
in
or
jo
fwait
insl
and
push
bound
sub
int3
add
inc
pop
cmp
push
add
call
notb
rol
cmpsb
and
in
cmp
lods
pushf
fldt
leave
cmp
mov
dec
add
jp
sahf
and
outsl
out
mov
call
popa
push
aad
cmp
inc
mov
test
outsl
loop
sub
inc
aaa
sbb
addr16
js
mov
gs
jns
adc
data16
insb
inc
pop
and
xor
hlt
fs
sbb
ret
jo
int
fxch
add
push
cmpsb
je
leave
movsb
inc
dec
mov
sub
jae
rolb
push
push
popf
mov
std
xor
pop
or
imul
pop
nop
out
pop
call
xor
aad
fnstenv
lock
std
push
jge
dec
xor
mov
jbe
mov
insb
dec
mov
movsb
rorl
pop
dec
call
or
adc
addb
lea
enter
ret
addr16
inc
lcall
mov
push
push
arpl
imul
imul
loopne
filds
imul
movsl
ja
dec
add
rcrb
xchg
jbe
dec
pop
cmp
dec
test
lds
cwtl
insl
into
aaa
sub
and
add
jne
pop
stc
mov
pop
lcall
dec
xchg
inc
inc
pop
jecxz
fwait
pushf
xor
mov
mov
jb
es
das
fsubl
decl
fidivl
mov
out
jno
rcl
mov
inc
mov
adc
mov
push
in
and
sub
fistl
test
iret
cmp
cwtl
aad
loop
subb
outsl
mov
nop
mov
test
movsl
ret
and
adc
adc
fyl2xp1
xchg
hlt
cmp
dec
pop
insl
lea
vpcmpeqw
imul
mov
shlb
xor
sahf
adc
mov
mov
cs
push
add
xor
pop
ret
pop
mov
push
dec
jecxz
mov
lahf
imul
pop
outsb
mov
push
inc
jecxz
lret
push
jmp
cs
jge
mov
xchg
push
std
and
dec
push
xlat
sub
adc
loopne
movsb
invd
xchg
mov
icebp
or
add
inc
adcl
leave
lods
xchg
sarb
ss
rcr
sub
jns
loopne
out
loope
mov
enter
dec
roll
xchg
out
pop
test
arpl
inc
sbb
leave
inc
ss
aad
cmpsl
mov
arpl
and
push
push
fmull
out
xor
or
dec
fwait
shll
jnp
pop
or
sub
lock
daa
and
jbe
jno
lret
mov
das
mov
int3
rcrb
sub
inc
test
nop
movsb
push
stos
sub
push
popf
bound
lock
inc
xchg
imul
pop
sub
sti
sub
or
in
fsubr
jb
insl
repnz
adc
add
divl
sti
nop
xlat
add
jnp
ret
push
dec
and
xchg
in
test
cmpb
in
fists
loope
loopne
aaa
or
and
add
push
movsb
icebp
cmp
xchg
push
inc
push
insb
fnstenv
fmuls
sahf
mov
aad
movb
inc
in
sti
jns
add
cwtl
std
push
and
add
psadbw
scas
xchg
bound
ss
pop
cld
or
adc
jns
inc
les
mov
add
inc
fadds
or
jle
sbb
clts
scas
test
mov
add
rolb
repnz
fmull
adc
pop
mov
cwtl
jp
ja
adcl
loope
roll
add
xor
mov
mov
movsl
xchg
push
bound
iret
and
lret
loope
jmp
shrb
loopne
adc
inc
repz
rolb
adc
outsl
movsb
scas
sub
xchg
pushf
outsb
hlt
enter
mov
gs
xchg
xchg
adc
jbe
sbb
pop
test
pop
shl
push
movsb
ficompl
fadds
dec
dec
hlt
addr16
pop
inc
ljmp
int3
out
imul
nop
roll
dec
into
inc
dec
cmp
mov
mov
stc
bound
push
dec
sub
sbb
pushf
xor
mov
xchg
sbb
testb
pop
stos
aad
aaa
mov
outsb
cmp
xchg
sbb
push
xchg
sbb
and
cs
push
iret
fsubrl
mov
stos
ja
jno
les
repz
scas
clc
mov
xlat
pop
push
loope
andb
ja
daa
ret
insl
ja
out
jb
add
shll
xchg
daa
arpl
dec
fnstsw
adc
lea
lock
rclb
adc
cmp
jbe
sub
out
stos
aaa
jmp
inc
repz
rcrb
aas
fbld
mov
scas
es
mov
arpl
mov
jmp
xchg
lock
rcr
insl
inc
adc
cmpsb
adc
imul
pop
mov
les
icebp
sub
out
mov
ret
sbb
orl
loope
cmp
add
rcrb
mov
jl
iret
push
jbe
push
enter
mov
fimuls
mov
cli
loope
jbe
stc
push
cmp
push
inc
shrb
xor
fs
lahf
sbb
cwtl
sub
mov
cmpsl
ss
push
enter
mov
dec
push
adc
xchg
rorw
push
sahf
mov
aad
add
pop
imul
ret
arpl
clc
hlt
jp
inc
jge
xchg
arpl
sbb
mov
xchg
repnz
mov
xchg
adc
adc
clc
gs
push
cltd
sub
lock
push
in
mov
repz
inc
mov
out
movsb
les
jnp
cmp
push
cmp
jecxz
jle
or
fsubs
out
jbe
inc
or
cli
mov
aad
pushf
rcl
jno
loopne
loop
inc
out
xchg
mov
lahf
mov
sub
les
add
xor
mov
pop
mov
xor
mov
ss
cmp
popf
sbb
adc
mov
xchg
jge
cmp
adc
mov
sbb
push
mov
mov
mov
inc
mov
leave
in
cmp
add
dec
sbb
insb
mov
sub
data16
fimuls
cltd
aas
xor
ret
push
xchg
dec
sub
xchg
jp
cmp
lds
mov
adc
mov
add
fisttpl
cmp
adc
mov
jno
dec
fdivs
imul
xor
mov
inc
icebp
jle
xchg
cmp
or
cmpsl
add
fs
cmp
in
or
cltd
push
std
mov
lods
js
aas
aaa
inc
dec
shl
shl
stc
xchg
adc
xor
notl
mov
in
hlt
idivl
cwtl
pop
pushf
xchg
sub
and
nop
insl
hlt
shrl
xchg
xor
mov
into
adc
call
adc
push
je
dec
repnz
xchg
push
dec
add
pop
leave
cltd
cmpsl
in
cmp
jnp
lods
outsb
movsl
lock
jl
mov
in
sbb
rcl
ret
and
cltd
sbb
test
daa
mov
scas
sbb
jecxz
outsl
jno
imul
dec
popf
fstpl
movsb
mov
cmc
movsl
mov
sub
and
push
mov
dec
push
mov
add
movntq
pop
jp
or
jae
mov
scas
and
inc
ss
pop
jmp
mov
andl
cmp
loopne
clc
popa
fucom
jnp
icebp
adc
mov
cs
fcoms
outsl
mov
dec
iret
xor
and
gs
and
test
mov
adc
into
jl
jnp
lcall
aam
movsl
xor
cmp
adc
push
pop
xchg
mov
ljmp
test
xlat
notb
add
or
and
push
repnz
lock
cld
inc
pop
sub
fadd
add
mov
inc
iret
and
jp
adc
or
or
inc
in
enter
lcall
dec
ret
push
out
fwait
inc
xchg
and
jg
mov
cmp
pop
mov
mov
mov
pop
pusha
dec
mov
es
in
mov
ljmp
jl
out
lcall
adc
mov
scas
loop
repnz
xor
fisubl
jge
test
mov
xchg
cs
das
test
les
push
mov
adc
mov
mov
js
mov
shrb
test
out
es
mov
stos
jns
hlt
test
mov
in
and
xchg
pushf
mov
into
rol
and
subl
cmp
inc
andl
pop
into
insl
fld1
xchg
aaa
loopne
enter
test
inc
mov
loop
xor
push
popa
loop
ss
xchg
adc
cltd
or
mov
pusha
or
orl
rolb
mov
mov
adc
mov
push
in
sbb
jl
movb
scas
sbb
mov
aad
inc
sub
pop
movsl
movsb
leave
pop
andb
mov
jp
cs
out
push
mov
cli
mov
push
and
pop
fcoml
paddb
add
pop
xor
mov
jnp
sbb
and
dec
clc
push
inc
ds
mov
adc
inc
insb
shlb
leave
xor
jnp
out
or
adc
xor
cltd
repnz
int3
sub
in
imul
mov
lret
dec
out
hlt
fwait
sbb
ficoml
pop
push
pop
std
test
inc
cmp
int3
cld
adc
pushf
add
cli
divb
outsl
mov
mov
pop
mov
mov
jmp
in
inc
mov
add
pop
cmp
data16
fimull
lret
or
ficomps
fwait
repz
rcll
call
mov
scas
pop
cs
mov
or
popf
es
xor
cmpsl
gs
cs
jb
xchg
stc
int
xchg
dec
push
stos
rorb
mov
dec
or
sub
test
subb
add
shll
lock
stos
fdivrp
and
dec
adc
xchg
and
sti
mul
or
loopne
mov
iret
dec
in
pushl
dec
enter
stc
hlt
jmp
aad
repz
jecxz
nop
test
pop
xlat
stos
dec
addr16
sahf
sti
push
loope
jae
add
mov
push
sbb
outsl
cmp
xor
and
test
push
ja,pt
pop
cmpsl
loope
enter
daa
imul
enter
test
mov
mov
arpl
or
xor
pop
stos
sub
icebp
iret
add
adc
jnp
das
jns
fisttps
mov
lds
decb
xchg
aas
mov
jmp
add
scas
or
in
test
es
fdivl
dec
lahf
xor
jge
repz
stc
data16
shrl
or
push
pop
jb
xchg
std
add
push
in
adc
outsl
pop
arpl
scas
lods
adc
nop
shrl
mov
cwtl
fucomi
imul
sub
jo
cmp
pop
inc
insb
pop
dec
jl
pop
lea
andb
arpl
lcall
nop
aad
icebp
arpl
ja
sbb
enter
icebp
scas
sbb
and
in
pop
xchg
out
ds
pop
lret
ds
pushl
or
loopne
sbb
mov
into
pop
iret
cmp
xchg
xorb
std
insb
pop
adc
push
jecxz
in
lret
cmp
or
adc
push
push
and
adc
sub
out
pop
fstpl
cmpsb
imul
mov
mov
sbbl
mov
cli
out
clc
xchg
jae
or
mov
repnz
push
jae
pop
shll
pop
push
js
sub
sub
jo
cmp
xchg
or
mov
mov
sbb
jl
jle,pn
cmp
movsl
in
enter
push
aad
and
adc
dec
jne
cmpsb
andb
outsb
lahf
mov
into
xchg
mov
pop
cli
xchg
stos
jl
cmp
fdivrl
adcb
mov
mov
push
sub
cmp
dec
fistps
popf
lea
loopne
nop
scas
repz
in
inc
stos
popf
ret
std
and
test
mov
xchg
mov
push
push
imul
int
lods
jnp
xchg
push
pop
push
sub
add
pop
mov
imul
sar
mov
repz
sahf
xor
lret
xlat
mov
sbb
repnz
movsl
jne
popa
adc
pop
sub
or
xchg
lods
push
ds
sub
mov
mov
outsl
and
cmp
add
fs
rorb
sub
mov
sub
mov
dec
insb
xchg
je
cmp
lods
jno
jno
push
push
adc
push
sbb
popf
xchg
bound
fisttps
inc
mov
mov
into
int3
jge
mov
cmp
in
xchg
xchg
pop
outsl
mov
fs
insl
mov
ja
cmpb
out
gs
cmpl
inc
ret
test
sti
cwtl
out
jb
out
pop
aaa
and
into
mov
mov
into
dec
das
add
cs
test
push
mov
xor
mov
outsl
cmp
mov
imul
mov
pop
or
mov
sbb
or
push
fwait
lock
mov
push
jnp
xchg
jae
jae
mov
cmp
repnz
mov
pop
imul
jmp
mov
adc
pop
mov
and
dec
stos
sbb
jo
jg
scas
test
divl
jl
popf
inc
adc
sarb
outsb
inc
sbb
inc
ljmp
and
test
subl
push
sbb
jmp
inc
and
outsl
call
pop
and
cmp
pop
ss
fldenv
mov
mov
mov
lret
jg
int
test
daa
cmp
mov
inc
or
pop
jb
mov
imul
xchg
lcall
ds
pop
jge
jecxz
or
movsb
cli
mov
cmp
or
repnz
push
push
stos
mov
cmp
in
sbb
sbb
mov
mov
push
lea
jbe
add
and
pushf
out
int3
cmpsl
mov
or
add
inc
loopne
mov
sub
mov
aaa
pop
inc
out
xchg
pop
or
fdivrl
jnp
sub
sti
pop
sahf
add
or
xor
and
cld
js
xchg
rol
xor
mov
in
dec
jp
out
out
idiv
jnp
pop
jl
inc
mov
inc
fs
subl
cltd
mov
mov
ja
xchg
adc
test
sub
ret
mov
outsb
aas
mov
cmc
je
insl
in
mov
mov
fucom
fistps
push
setno
add
xlat
movsl
jg
fiadds
dec
xchg
adc
push
inc
xchg
shll
call
leave
cmpsb
sbb
inc
movsl
lahf
xorb
daa
data16
iret
sub
add
push
mov
push
dec
push
aas
sbbl
push
std
lret
push
jmp
adc
pop
cmp
add
pop
pop
mov
cmp
push
adc
in
icebp
dec
popa
popf
add
cld
jne
add
lret
jnp
js
jp
cmp
sbb
mov
inc
adc
mov
sbb
xor
int
lahf
ds
xchg
mov
in
adc
scas
adc
mov
int
and
rorl
cwtl
push
adc
test
mov
inc
rcrb
and
push
and
imul
es
fldenv
in
cli
pop
xchg
hlt
adc
ret
pop
aaa
mov
xchg
stos
stos
lcall
xor
mov
jge
pop
imul
popl
mov
sbb
cwtl
lods
mov
pop
in
das
sbb
push
inc
xlat
xchg
addl
mov
push
in
test
lahf
xchg
jle
lea
xchg
fmull
jg
push
les
mov
in
pushf
mov
jp
add
sbb
clc
test
daa
ret
inc
test
int3
scas
adc
jmp
lods
fcomps
sub
mov
sbb
fmull
rcr
jmp
jns
fldl
xor
inc
cmp
dec
daa
stos
push
sti
xchg
xor
pop
cmpsb
cmc
lds
pop
xor
jae
jecxz
dec
mov
out
sbb
mov
add
mov
mov
loop
out
out
imul
sub
sub
adc
jge
push
pop
jo
popa
mov
mov
rcrl
ss
lds
das
shll
xchg
mov
xchg
lret
fwait
dec
bound
pop
inc
insb
mov
fbld
nop
and
or
mov
sbb
lahf
pop
add
xchg
mov
popf
insl
sub
aam
popa
sub
gs
or
cmc
fisubrs
bound
and
aam
adc
xchg
dec
stc
out
add
xchg
fsubrs
pushf
shll
dec
cmpsb
cli
out
jecxz
cs
hlt
mov
mov
push
leave
idivl
cmp
pop
out
add
bound
sbb
inc
test
add
pop
pusha
jb
and
xor
lods
xor
fldpi
xchg
lcall
or
cs
cld
je
sub
adc
imul
xor
xlat
daa
xchg
cmpsb
push
add
jmp
xchg
dec
fs
aam
mov
inc
nop
xchg
pop
test
loop
push
dec
jne
fcmovbe
mov
cmp
ljmp
sbb
add
pop
test
cwtl
push
inc
sub
inc
pop
mov
xlat
adc
xchg
mov
fisubs
xor
xor
lret
jl
mov
fimuls
pop
inc
repnz
hlt
cmpsl
xor
jecxz
mov
inc
into
adc
mov
out
adc
mov
div
ljmp
mov
sahf
les
xchg
jne
push
jmp
es
xchg
fs
dec
jb
push
xchg
rcrb
aaa
jne
popf
sbb
fcmovb
xor
into
jns
dec
ss
cmpsb
mov
add
bound
lds
cmp
mov
sbb
arpl
dec
xchg
out
sub
pop
in
loopne
sbb
pop
add
dec
xor
ret
das
aad
or
xchg
inc
mov
pop
pop
jg
sub
rol
mov
lea
pop
xchg
jp
ja
je
sti
repnz
fcomps
add
out
add
xlat
xchg
or
imul
call
and
add
lret
lret
loopne
pop
adc
pop
mov
popa
mov
pop
call
push
movl
push
fs
loop
inc
fnstenv
jne
fwait
das
xor
jns
sub
add
or
mov
mov
jmp
pop
dec
cmc
jmp
imul
jne
jne
push
ret
mov
es
je
jnp
push
mov
xor
xchg
outsl
jo
push
inc
es
andb
jb
and
xor
or
insb
lock
cmp
rcll
stos
jno
dec
jge
mov
pushf
jbe
andl
test
jge
iret
pop
aas
les
mov
fstpl
mov
add
addr16
adc
incb
js
scas
out
imul
pop
adc
cmp
xchg
mov
push
cltd
sub
and
lods
stc
lret
outsb
xorps
xchg
and
lea
sub
xlat
push
ds
mov
xlat
xor
cmp
sub
out
fsubrl
shlb
ret
shlb
fstpt
hlt
pop
fs
call
or
mov
in
retw
daa
cli
insb
add
jae
fnstsw
clc
and
jbe
push
rcrb
xor
mov
call
add
cmp
or
mov
popa
pop
sar
roll
loope
and
test
mov
xlat
or
nop
add
cmpsl
inc
mov
jns
cwtl
add
std
test
subl
push
pop
cs
jbe
mov
xchg
leave
js
test
rorb
negl
into
pop
inc
cmpsl
jle
inc
arpl
shrl
sbb
pop
shrb
loop
mov
sub
sub
mov
cmp
mov
into
pop
add
test
dec
popa
xor
mov
or
xchg
ret
dec
insl
xchg
sbb
xor
fiadds
sahf
sub
ljmp
mov
sbb
mov
iret
mov
repnz
push
cltd
pop
repz
lret
pop
mov
mov
xchg
inc
lcall
pop
mov
rcll
in
cld
sbb
int
cwtl
jle
ljmp
xor
pusha
jecxz
imul
add
xchg
int3
pop
fsubs
fdivs
pop
cmp
jg
stc
gs
mov
test
rcll
int3
jmp
in
leave
jmp
fldln2
pusha
and
iret
dec
mov
jge
dec
cld
jmp
push
mov
add
stos
xchg
mov
add
sahf
aaa
xchg
and
sub
jmp
iret
iret
ljmp
dec
push
push
jb
lea
out
gs
mov
ljmp
rorl
test
sbb
cmp
inc
mov
jns
jecxz
sbb
cld
inc
pop
xchg
jle
ljmp
xchg
mov
and
notl
and
jbe
xchg
adc
imul
or
adc
arpl
es
out
pop
fwait
mov
sahf
test
push
popf
adc
mov
xchg
xchg
jg
js
hlt
pop
insb
jmp
ds
sahf
pop
mov
mov
sub
out
adc
fadds
lcall
inc
lock
hlt
add
aaa
and
add
lret
push
xchg
pushl
mov
cmp
xor
gs
jl
repnz
pop
xchg
ja
dec
arpl
gs
push
push
lcall
jge
rclb
loope
popa
jmp
hlt
push
mov
aas
imul
fimuls
inc
mov
dec
inc
inc
rolb
leave
and
cltd
mov
das
stc
or
mov
jp
sub
pop
pop
sti
jle
cmp
or
mov
mov
xor
jno
test
dec
rcll
mov
mov
jl
lock
out
xchg
shrb
repnz
jecxz
pop
in
ljmp
or
loopne
jl
imul
dec
sub
stos
jp
cmp
inc
addb
inc
jp
test
sub
mov
pop
add
and
jecxz
jecxz
cwtl
scas
jge
pop
inc
cmp
push
jae
xchg
mov
sub
mov
push
jg
dec
insl
xor
in
jge
cld
daa
addb
lret
lcall
fwait
loopne
jno
ret
push
stos
pushf
xor
jp
dec
sbb
mov
and
mov
ret
leave
cmpsl
loop
sar
fcoms
loop
mov
lock
or
cmp
adc
add
out
arpl
fdivs
cmpsb
pop
out
in
mov
sti
cmp
adc
not
or
out
push
sub
popf
xor
cmp
faddl
dec
daa
xor
loope
mov
cmpsb
cmp
mov
mov
cmpsl
repnz
lret
add
mov
sbb
dec
jmp
lret
int
dec
call
jecxz
xchg
das
gs
pop
push
iret
mov
outsl
data16
cmp
mov
dec
mov
popf
xor
hlt
mov
je
lcall
jmp
ficoms
test
imul
jecxz
sarl
mov
cmp
cmp
adcb
je
mov
aam
std
jge
xor
into
fistl
push
cmp
push
fcmovbe
jge
or
in
mov
lret
hlt
mov
in
iret
das
das
push
addb
leave
popa
cmp
adc
lcall
jmp
scas
shlb
jo
jge
mov
jle
cmp
test
and
das
mov
cltd
inc
inc
mov
fimuls
sub
je
notl
push
mov
lcall
loope
pop
int3
pop
pushf
cmp
andb
loopne
mov
adc
lods
pop
adc
jle,pn
int3
or
and
fcoml
iret
jns
lret
add
xchg
mov
sahf
lock
pop
lods
dec
out
mov
push
imul
addr16
in
pop
ss
addr16
xor
fucomi
add
out
xor
sub
in
je
stc
xchg
aas
mov
ret
scas
cs
mov
out
mov
testb
stc
dec
rorl
cld
ret
test
or
xor
xchg
pop
jmp
cmpsl
daa
jle
jl
xchg
push
xchg
lret
add
shrl
nop
dec
stos
pop
jg
int3
sub
xchg
mov
sti
stc
jl
pop
lods
cmp
jns
cltd
pop
sbb
pop
test
or
lret
pusha
negl
lock
test
test
call
sarl
cmpsb
ss
imul
mov
fimull
mov
int3
push
inc
hlt
mov
xor
test
dec
rcll
sbb
test
cmp
int3
mov
ljmp
mov
repz
push
mov
outsl
in
jmp
pop
ret
popf
hlt
push
xchg
scas
xor
aaa
adc
xchg
sub
sub
addb
sbb
int3
fbstp
lretw
lock
jb
aas
inc
add
mov
test
mov
adc
pushf
or
or
xchg
push
ret
adc
stos
sub
mov
and
ds
das
mov
mov
jg
sbb
inc
or
pop
leave
sub
out
inc
in
adc
cmp
sbb
fildl
lods
int3
jp
inc
shlb
sahf
dec
inc
mov
lcall
aaa
hlt
fidivl
loope
lret
lea
sbb
les
sub
adc
jb
cmp
lahf
addl
dec
jns
insl
sub
push
add
nop
nop
pop
xchg
addr16
dec
fisubrs
inc
jae
into
aas
outsl
lret
dec
shll
mov
inc
jecxz
cmpsb
aam
iret
test
fs
les
inc
push
lock
mov
insl
call
and
xchg
lcall
sub
movsb
in
dec
cmc
push
andb
stos
or
test
mov
add
and
in
hlt
cmp
push
shll
mov
and
mov
movb
test
shl
jecxz
rcrl
in
rcr
or
mov
int3
xchg
or
shrb
and
sti
loopne
add
mov
jns
loopne
jns
inc
dec
repnz
jns
scas
out
adc
test
jnp
lds
repz
arpl
scas
or
je
dec
mov
jl
out
and
je
int3
xlat
mov
jg
sub
xchg
std
rolb
xchg
movsl
pushf
mov
xchg
mov
gs
dec
cmp
out
jno
mov
leave
leave
jo
or
and
rcll
pop
or
mov
nop
mov
sbb
and
push
mov
loope
les
add
psllq
mov
push
mov
and
ss
pop
aam
ret
adc
mov
cmp
cmp
andl
in
loope
mov
adcb
mov
xor
mov
adc
dec
add
sti
dec
xor
sub
and
gs
push
xchg
pop
and
cmpb
xchg
popa
stos
int
test
fcoml
ret
xor
mov
aas
sbb
mov
mov
ljmp
cmp
repz
fldenv
dec
in
cmc
dec
fisubs
pop
pop
stos
xor
push
scas
jl
popa
mov
jecxz
adc
add
lea
shlb
xor
decb
xor
roll
loope
lret
aaa
jbe
repnz
sub
pop
add
stc
insb
or
mov
insb
out
mov
fldpi
xlat
leave
lret
in
and
pop
lcall
jae
push
pop
popf
loop
fists
gs
mov
adc
fisttpl
bound
pop
fisttpl
clc
and
pop
subb
pop
mov
bound
dec
test
xchg
addr16
cmp
cmp
icebp
add
sbb
cmpsl
pop
test
push
adc
cmp
mov
xchg
dec
fisubrl
shlb
pop
sub
insl
ljmp
arpl
jg
test
je
in
stc
mov
lock
sub
shrb
popf
xor
jbe
int
imul
sub
fsubl
scas
xor
mov
inc
add
push
sbb
mov
loopne
xchg
mov
cmp
lret
sahf
testb
cmp
xchg
enter
clc
pop
dec
or
fists
mov
out
insb
add
push
lcall
sub
inc
mov
sub
in
xor
sbb
sub
lods
add
jmp
divb
inc
inc
aam
xchg
xor
inc
in
dec
lods
jb
xchg
bnd
mov
xchg
adc
stos
inc
xchg
sbb
xchg
popf
jg
fst
imul
subl
xor
and
pop
xchg
test
sbb
add
adc
sub
rorb
adc
jae
jae
rorl
adc
je
mov
adc
mov
push
adc
push
xchg
clc
pusha
call
sahf
ljmp
lods
mov
or
pop
outsb
pop
xor
jae
cmp
into
in
xor
stc
adc
adc
out
jge
jecxz
mov
aad
imul
xlat
iret
mov
dec
cmp
lcall
cmp
push
pop
add
pop
bound
loop
sbb
cmp
add
call
add
clc
adc
ja
leave
gs
adc
out
cmc
or
test
loop
stc
xchg
mov
inc
mov
fadds
inc
xor
rolb
xchg
pop
cmp
inc
or
pop
pop
sub
cmc
push
or
call
push
pushf
lods
jo
ds
xchg
jbe
mov
xor
cld
xchg
sub
push
fninit
daa
and
sbb
movsb
int3
int
out
sub
loopne
outsl
add
dec
mov
jl
idivl
mov
movsb
jle
repnz
fsubrs
lcall
int3
xchg
cmc
les
nop
adc
push
jbe
out
xchg
stos
fmull
xor
sub
clc
fisubrs
imull
add
shl
mov
fdivrl
cmpsb
and
sti
pop
jge
mov
xchg
lahf
lds
xor
fst
ret
push
push
xor
cli
xchg
mov
jae
dec
ja
add
push
push
push
popa
mov
dec
push
mov
fmul
sub
ror
fnstenv
add
fmul
test
sub
mov
or
adc
or
push
jl
dec
out
inc
js
jo
inc
or
fldcw
or
mov
adc
pop
jmp
mov
popf
mov
sub
jecxz
data16
ror
cmp
jae
mov
cmovp
sbb
cmc
arpl
push
js
jns
xor
ja
ja
jg
fisubrs
cmpsl
lret
dec
push
popa
pop
outsl
mov
sub
fisubrl
mov
mov
in
inc
inc
push
js
int
adc
sub
adc
subb
xlat
lds
sbb
int
imul
cs
mov
jmp
pop
mov
fimuls
sub
push
sub
cltd
add
lret
pop
mov
mov
jb
das
mov
out
push
repnz
mov
shlb
or
sbb
mov
add
add
adc
out
insl
ficoml
cs
mov
or
cmp
push
popf
fwait
push
pop
pop
das
add
add
out
cmova
sbb
lds
aaa
xchg
adc
xor
pop
int3
out
pop
jb
fistpll
in
into
xchg
adc
adc
insl
enter
movl
add
pop
xabort
cmp
mov
orl
insb
in
pop
outsb
pop
imul
inc
lcall
daa
shr
aaa
mov
mov
icebp
pop
or
push
arpl
jge
jl
aam
jecxz
push
mov
les
mov
or
lcall
in
add
pusha
pop
sbb
sbb
loop
jns
jmp
pop
jg
int3
adc
xor
xor
adc
push
pop
mov
test
xor
fdivs
mov
mov
sub
sahf
jbe
pop
sbb
adc
nop
pop
outsb
jl
test
aaa
mov
orl
or
int3
add
inc
adcl
xchg
out
cmp
iret
pusha
mov
iret
das
jecxz
and
dec
cmpsl
xor
xor
cmpsl
cld
mov
mov
mov
fucom
mov
outsb
xlat
jns
loope
out
ror
dec
lods
inc
stos
sbb
pop
lahf
or
movsb
cmp
pop
leave
hlt
bnd
dec
add
ljmp
dec
mov
bound
cmpsl
out
add
lds
mov
xor
push
push
call
and
pop
ficomps
push
iret
mov
arpl
mov
add
call
pop
push
sub
xchg
mov
sub
xor
jg
sub
cmp
lahf
adc
popa
popf
push
cmp
outsl
scas
xchg
inc
fs
mov
arpl
inc
jecxz
inc
rcrb
jp
movsb
lret
call
ret
testl
or
xchg
pop
push
es
shl
xchg
push
xlat
gs
mov
sub
sahf
xor
mov
mov
out
cmp
pop
xchg
inc
fs
push
addl
imul
loope
les
lods
fisttpll
mov
mov
add
adc
pmaxsw
inc
pop
test
xchg
outsb
sub
push
lock
sub
pop
rorl
adc
sub
dec
popa
mov
mov
jl
inc
sub
and
fs
cwtl
jecxz
mov
test
mov
cmpl
mov
bnd
cwtl
pop
and
pop
test
add
pop
xchg
test
mov
inc
pop
xor
add
xor
movsl
cmpsb
xchg
or
mov
jae
ljmp
push
lods
popf
ja
jbe
inc
aas
scas
bound
fbstp
push
sub
clc
sahf
test
je
push
mov
push
sub
iret
and
sub
repz
ja
dec
push
in
jle
mov
jns
roll
insl
das
cwtl
sbb
outsb
lds
pop
xchg
insb
push
lret
imul
jne
pop
push
fisttps
fimull
add
gs
fs
and
cwtl
and
pop
mov
ds
aaa
fstpl
idivb
pusha
jo
sbb
fidivl
fstl
and
sarl
xchg
addb
push
sbb
jns
jle
pop
add
cld
mov
aaa
xor
scas
cmp
test
push
and
lods
mov
mov
std
mov
les
push
jmp
stc
add
cltd
cltd
in
mov
cmp
push
in
out
arpl
adc
mov
and
jbe
inc
mov
push
cmc
movsb
or
cld
ja
dec
fs
les
bound
test
xor
cs
xchg
mov
cmp
imul
in
jg
sbb
mov
cmp
js
addb
je
pop
addl
xchg
pop
sub
loope
xchg
jns
cld
mov
pop
mov
iret
mov
adc
out
sahf
dec
mov
jb
cmp
loopne
push
jp
lods
and
jmp
bound
addr16
stos
out
push
pop
jle
dec
and
mov
mov
sub
xor
fisubrs
jl
das
arpl
sub
pop
outsb
jne
adc
pusha
pop
popf
clc
sahf
sarl
mov
mov
and
ret
out
sarb
xor
std
xchg
and
ss
jmp
push
movsb
repnz
push
cli
cmp
or
daa
xor
add
sahf
sub
mov
xor
cmp
fdivrs
aad
sub
jo
jge
sbb
mov
lods
push
lods
in
sub
or
push
imul
push
mov
test
xchg
fdiv
pusha
add
insb
insl
jmp
fcompl
call
inc
leave
in
dec
xchg
fsubrl
adc
push
and
inc
movsl
mov
loopne
sub
test
shufps
sbb
jge
mov
fdiv
pop
lahf
inc
aas
dec
jl
test
insb
fistl
cmpsb
dec
jne
mov
jecxz
fwait
in
push
mov
push
mov
sub
stos
jnp
lret
inc
scas
jno
pop
mov
repz
aam
sub
pop
jle
add
adc
vmwrite
mov
or
xor
adc
in
xor
mov
push
jp
push
xlat
xchg
clc
inc
frstor
jge
inc
test
icebp
cmp
fbstp
dec
push
ds
mov
xor
popa
sbb
movsb
and
jl
ljmp
cld
inc
mov
mov
in
decl
stc
data16
sub
fstpt
mov
std
pop
cld
push
or
sub
or
notb
imul
andb
call
mov
xchg
and
cld
pop
sbb
mov
mov
dec
adc
mov
cmc
rcll
insl
daa
adc
or
icebp
mov
sti
data16
rcl
adc
xchg
mov
adc
push
xlat
bound
sbb
gs
xor
sub
dec
test
les
insl
pop
stc
clc
xchg
mov
mov
mov
mov
or
nop
in
sbb
mov
test
sti
or
add
cli
adc
fidivrl
lock
sbb
scas
int3
adc
and
mov
xchg
add
leave
pop
dec
sbb
imul
sbb
push
or
ret
out
add
push
and
and
out
int3
pop
testl
andb
mov
rolb
xor
bound
jg
sbb
inc
das
sarl
mov
cmp
mov
push
adc
mov
in
mov
mov
mov
or
scas
int
xchg
repnz
inc
iret
outsl
out
mov
fwait
pop
jle
mov
arpl
mov
scas
test
push
lea
cmpsl
cli
push
sbb
shl
fisubrl
dec
push
enter
mov
and
imul
pop
inc
data16
dec
push
in
sub
or
arpl
push
jb
jge
mov
mov
xor
inc
sti
call
andb
test
dec
mov
jp
scas
inc
lods
call
xor
popa
data16
scas
insb
test
mov
dec
bound
adc
sbbl
mov
out
xor
fdivl
sbb
pop
and
das
leave
icebp
movsb
adc
fistpll
fstps
xor
and
push
repz
cltd
cmp
inc
scas
push
jae
xchg
testl
pop
or
dec
adc
xchg
cmpsb
xchg
shlb
jp
pop
std
mov
insl
nop
xor
je
pop
call
mov
js
sbb
addb
adc
sub
outsl
xchg
sbb
mov
ret
fldt
push
adc
or
ds
sahf
test
aas
xchg
sub
adc
lahf
int3
dec
pop
add
ret
arpl
pop
movsb
inc
bound
cmc
je,pt
repz
sub
add
divb
test
or
pusha
add
mov
lock
ja
adc
mov
sti
cmp
fsubrs
xchg
inc
cmp
das
out
jp
jne
jno
imul
pop
subb
mov
xchg
jg
mov
adc
shrl
in
std
cmp
add
sub
scas
xchg
std
sub
pusha
adcb
sub
in
cmpsb
xchg
popa
jb
clc
hlt
cmpsb
adc
andb
push
jmp
stc
and
loopne
ds
xchg
loope
push
ss
xor
inc
cmpsb
jp
xchg
and
lock
ss
es
hlt
aas
outsb
push
outsb
fbld
ret
int
mov
xchg
es
rcr
into
fwait
cmp
scas
loopne
dec
dec
and
out
loopne
mov
mov
pusha
lahf
js
add
lret
and
notb
push
xor
ss
inc
xor
dec
fsubr
stos
mov
mov
cli
sar
js
inc
sarl
mov
jbe
aaa
pop
and
adc
or
int
cmp
xlat
in
lahf
dec
mov
jo
fxch
scas
jae
mov
adc
and
ljmp
in
aaa
adc
xchg
subl
or
lds
outsl
jno
sub
and
push
iret
inc
sbb
push
dec
cmp
pop
xor
fsubrl
pop
in
enter
std
lods
je
loop
mov
stc
or
inc
insl
fimull
xor
sub
scas
test
and
popf
mov
mov
bound
shr
arpl
mov
sub
iret
addb
mov
fcmove
movq
xchg
jmp
shlb
mov
mov
mov
xchg
cmc
mov
out
std
mov
mov
imul
mov
outsl
adc
push
xor
scas
xchg
lods
daa
adcb
cmp
mov
stos
sar
pop
imul
fldenv
pop
test
call
cmp
mov
addr16
mov
aam
inc
fidivrs
mov
shll
icebp
mov
pusha
pushf
xor
mov
int
mov
xchg
adc
push
sbb
out
add
lods
push
test
xor
mov
jmp
add
and
rcrb
push
rorb
aaa
mov
mov
inc
xor
lds
movb
movsb
mov
aaa
mov
sub
jle
mov
clc
and
pushf
sbb
adc
movsl
add
dec
or
movsl
pop
out
pushl
jo
add
mov
xchg
adc
int3
xchg
jns
mov
in
nop
mov
in
mov
push
adc
push
js
mov
mov
orb
cli
aad
lret
and
movsl
adcb
xor
lret
popf
addb
iret
sub
std
inc
add
leave
or
xor
lea
pop
outsl
sub
push
test
pop
xchg
out
in
popa
jg
ficomps
leave
mov
pop
inc
test
sbb
mov
roll
push
mov
aad
cmpsl
mov
std
and
push
sbb
stos
mov
das
out
xchg
in
ss
scas
or
cmp
ffreep
xor
inc
xor
xor
mov
xor
insl
inc
add
adc
rcrl
pop
dec
fldcw
push
call
xchg
xchg
mov
mov
ja
ljmp
mov
hlt
mov
pop
pop
adc
mov
and
or
pop
xchg
pop
popa
in
sti
push
mov
xor
push
and
add
push
mov
inc
push
loopne
hlt
inc
xchg
sbb
addr16
lea
xor
sbb
sbb
cmc
or
dec
or
out
subb
pop
jecxz
add
push
jp
sbb
insl
subb
jno
pop
push
sti
gs
dec
out
and
sbb
ja
cmp
lcall
insb
pop
out
in
lods
mov
in
in
xlat
cmp
xchg
push
inc
stos
sbb
mov
arpl
out
mov
sahf
inc
pop
mov
jecxz
and
mov
scas
mov
subb
je
mov
mov
push
sbb
orl
pop
xlat
popf
fimull
pop
fdivl
sbb
stos
dec
cmc
js
insb
jecxz
mull
inc
or
push
mov
shll
push
dec
loop
mov
jb
mov
sahf
popa
pushf
push
mov
outsl
dec
or
dec
lcall
loop
inc
sub
dec
fsub
mov
lret
and
enterw
shrb
ja
mov
je
dec
jl
sbb
fstps
mov
scas
push
out
aas
sbb
popf
dec
ja
mov
mov
out
add
adc
outsb
pop
loope
cmp
pop
pop
ss
in
jl
mov
sbb
mov
iret
mov
sarl
xchg
mov
dec
push
push
pop
andl
fdivrl
lods
add
sbb
sbb
js
inc
daa
xorl
adc
and
je
andb
mov
push
mov
pop
jle
cmc
loop
fwait
cmpsb
pop
or
dec
jb
aaa
lea
decb
test
and
push
mov
data16
fcompl
jl
jg
sub
outsl
inc
ss
push
dec
mov
inc
dec
and
ret
outsl
jge
mov
pop
repz
mov
mov
xor
andb
and
cmpb
fnstenv
ret
add
lret
pop
xchg
or
pop
inc
add
cwtl
push
push
out
and
fisubrs
mov
fbstp
rorl
push
jo
lret
pusha
inc
pop
sbb
inc
cmp
mov
lock
popf
adc
cmp
repnz
sbb
mov
pop
push
in
pop
sbbl
mov
das
or
adc
jno
call
or
into
cmp
clc
pop
cld
sub
lods
or
or
or
sbb
lods
cltd
push
add
in
mov
pop
adc
out
cld
adc
pop
mov
stos
jl
ss
orb
or
test
scas
insl
lods
push
jge
jae
jne
pop
xor
add
jp
rorl
scas
stos
mov
repnz
mov
lds
dec
jnp
mov
insb
jp
push
jns
es
mov
cmpsl
lcall
adc
add
fisubs
filds
enter
or
sub
cmp
nop
xchg
push
xchg
xor
fisttps
fdivr
fisttpll
fsubl
inc
mov
or
push
jo
pop
xchg
jp
dec
stos
pop
lea
outsl
mov
xchg
aad
inc
adc
jecxz
stc
mov
add
insl
ljmp
int3
add
push
test
jle
in
adc
adc
arpl
stos
scas
fwait
adc
mov
fcompl
adc
push
int3
push
adc
fbld
roll
addb
into
add
shrb
andl
xor
xchg
stos
mov
repnz
pop
add
mov
addr16
ret
outsl
xchg
mov
flds
sbbb
cmp
jne
and
inc
stos
bound
cmp
idiv
mov
mov
push
pop
or
mov
lds
cmp
loopne
rol
and
and
or
inc
adc
dec
test
stc
adc
push
mov
std
sbb
add
shl
fs
loopne
ss
pop
or
int
test
cmp
loop
pop
notb
and
sahf
fsubrl
mov
add
test
shrb
sbb
repz
jae
jp
pop
scas
notl
imul
jl
mov
fs
negb
arpl
sub
insl
mov
xchg
mov
cmp
out
pushf
inc
je
cld
test
shl
pop
xchg
push
and
mov
outsl
call
cwtl
jl
jnp
idivb
movsl
sbb
or
mov
push
mov
aas
pop
scas
push
enter
jge
add
fsubr
clc
inc
out
mov
xor
mov
out
jp
out
cld
jecxz
sub
xchg
call
push
push
cmp
mov
fsubrs
and
sbb
lods
mov
dec
fwait
mov
sti
push
cmp
loop
in
ds
jnp
out
lods
mov
xor
mov
mov
int3
stos
out
lds
sub
cmpsl
jle
call
pop
aam
jno
in
int
lods
or
sub
dec
sarb
mov
xchg
dec
lock
ret
popf
clc
imul
dec
add
outsl
sub
mov
mov
dec
cmc
adc
scas
js
lods
mov
das
or
mov
in
xor
mov
rorb
movsb
and
mov
in
cli
ret
sbb
lret
xor
cmp
cmp
mov
fldenv
mov
mov
out
std
lret
lods
inc
and
mov
cmp
es
vmovaps
loop
data16
pushl
jg
adc
push
mov
mov
test
je
pop
fistpl
xor
stos
scas
mov
dec
test
inc
sbb
mov
jl
inc
jmp
pop
clc
cmpsl
lret
loope
sbb
cmpsb
xchg
mov
bound
ljmp
adc
inc
adc
push
mov
cmp
test
int3
sub
mov
enter
sbb
movsb
test
rcr
and
mov
fwait
add
test
je
out
push
inc
xor
mov
ret
or
jg
out
xlat
bound
dec
sbb
or
gs
jne
push
stc
inc
movsl
inc
lods
xchg
xchg
rol
shlb
xor
test
sahf
in
inc
xor
cmp
mov
jecxz
mov
cs
lea
roll
daa
xchg
sbb
dec
xchg
sub
nop
dec
and
fwait
scas
adc
mov
jb
ror
test
and
movl
jle
dec
mov
xchg
dec
pop
xlat
dec
jae
sub
mov
mov
xchg
cmp
and
xchg
fsubr
test
jb
pop
sbb
call
int3
and
pop
ss
out
rorl
xchg
dec
icebp
repz
popa
scas
adc
mov
stc
adc
xchg
or
rolb
fnstenv
mov
cmp
pop
pushf
jb
roll
lahf
hlt
lret
aad
enter
adc
adc
lahf
jb
lods
mov
fimull
dec
pop
stc
push
test
push
dec
mov
sub
inc
push
xor
mov
dec
xchg
imul
xchg
mov
out
add
out
cld
inc
ljmp
jb
gs
jae
cwtl
cmc
imul
lods
xor
popa
repnz
dec
sbb
imul
dec
sbb
jne
add
es
inc
test
xor
sbb
or
call
scas
cwtl
dec
pop
in
adc
push
mov
insb
loop
pop
lret
xor
xor
dec
in
inc
sti
test
pop
mov
dec
addr16
fidivl
lcall
xor
outsb
int
jecxz
loop
push
mov
mov
push
int
fstl
push
rorl
cmp
out
mov
inc
ret
aad
aad
filds
jmp
imul
jnp
jle
or
fcomps
daa
xchg
aaa
cmp
imul
fcmovbe
inc
cmc
pop
ss
call
into
dec
mov
enter
pop
popf
daa
dec
xchg
mov
sti
aam
rolb
xchg
leave
sbb
mov
into
or
and
out
pop
xor
shrl
xchg
fiaddl
int
inc
mov
loope
dec
push
sub
inc
inc
mov
daa
inc
rorb
scas
loop
outsl
sub
add
xor
lock
adc
or
aaa
scas
xchg
leave
mov
pop
mov
stos
jne
aad
pop
pop
popa
and
cltd
and
int3
shr
rclb
dec
test
mov
rorl
mov
xor
dec
cmp
mov
adc
push
aad
add
shlb
inc
out
sbb
fsubrl
lahf
jno
push
mov
mov
popf
fildl
repnz
add
pop
add
in
add
add
pop
xchg
shrl
adc
es
sarb
pushf
mov
pop
je
loop
cli
jne
les
xor
lret
in
mov
jmp
popf
mov
loop
ds
sub
and
ror
pusha
enter
mov
ficoml
mov
jae
imul
adcl
dec
aad
and
aam
es
pop
cmc
pop
movb
dec
cld
or
ss
adc
fimuls
mov
mov
push
negl
loopne
lods
lahf
and
mov
dec
adc
loopne
inc
mov
ret
daa
popa
push
pop
imul
sub
xor
fldl
cmpb
stos
sbb
lds
out
lds
inc
pop
test
and
cs
cmp
dec
jl
test
cld
dec
inc
cltd
cld
jae
cwtl
sbbl
mov
scas
adc
nop
mov
adc
mov
xchg
pop
jo
push
push
les
lds
push
xchg
stc
mov
sbb
mov
shrl
enter
push
gs
int3
mov
jg
rorl
insb
nop
mov
divb
xchg
aas
sahf
scas
popa
ffree
dec
scas
inc
mov
mov
pop
or
in
mov
or
stos
ds
icebp
cmp
lods
lods
subl
gs
mov
ss
and
insl
adc
push
or
pop
push
xchg
imul
sbb
fisubrl
sbbl
cwtl
adc
add
sbb
sti
mov
movsl
cmc
sahf
mov
push
pusha
pop
push
fdivrs
adc
mov
das
fwait
mov
sbb
sbb
ss
ss
push
add
add
lods
cmp
sub
mov
dec
jnp
fidivs
cmp
xchg
cmpsb
lds
dec
pushf
daa
cmpsb
sub
dec
cmpsl
js
dec
sub
bound
data16
jle
and
out
sub
leave
push
add
leave
int3
or
test
xchg
xchg
lock
idiv
enter
pop
add
ss
xor
push
btc
jo
inc
pushf
out
jne
mov
xchg
inc
and
dec
hlt
lcall
lock
xor
sbb
sub
jno
ja
dec
jnp
jge
scas
gs
scas
push
out
cmp
jl
push
sub
arpl
sbb
sub
lret
outsl
aas
push
add
xor
aam
jecxz
scas
jno
out
lds
in
cmpsb
cmc
inc
xchg
and
mov
cmc
hlt
xchg
dec
cli
ror
cld
lock
cmp
sbb
out
inc
xrstor
call
pop
cmp
call
jl
jno
mov
pop
push
test
out
in
sub
hlt
rorb
and
sbb
in
sbb
shl
jp
filds
imul
int
jl
inc
sub
jbe
out
movsl
inc
bound
nop
and
dec
fsubr
lahf
out
cmp
pushf
movsb
arpl
in
xchg
xchg
leave
mov
adc
pop
fmuls
sub
mov
std
je
jg
bound
or
jp
xchg
fcomip
push
mov
outsl
dec
jns
mov
sbbb
fistps
push
jbe
lret
mov
dec
pop
xor
xchg
sbb
sbb
inc
lods
lcall
outsb
cmp
jno
mov
dec
or
icebp
jge
pop
mov
loop
mov
stc
cmp
sub
into
aam
fbld
jae
mov
and
nop
bound
adc
cmc
imul
bswap
mov
int
pop
mov
cld
fdivp
lret
sarl
test
test
scas
out
push
pop
push
in
test
add
mov
mov
mov
cltd
mov
rol
sub
jge
and
hlt
or
int
popl
sub
cltd
stos
mov
outsl
lods
add
inc
loopne
shrb
add
ret
rcl
push
xor
or
es
xchg
jecxz,pt
imul
xlat
mov
lods
addr16
mov
adc
mov
mov
push
stos
hlt
jnp
leave
sbb
xor
adc
cmp
fildll
pop
divl
mov
xchg
sub
addr16
add
loopne
xchg
arpl
inc
int
pop
push
sub
mov
dec
addr16
rcr
bnd
and
add
xor
xchg
and
dec
popa
inc
mov
arpl
or
repnz
jns
adc
jmp
mov
cmpsl
inc
mov
push
roll
shrb
sbb
lea
lret
push
in
adc
scas
lods
sub
fists
imul
loop
incb
or
insl
sbb
push
cwtl
fcompl
je
divl
adc
mov
lods
cmp
ffree
mov
inc
xchg
mov
or
insb
ficoml
dec
rcrl
or
jmp
mov
adc
pop
cmp
push
add
mov
popf
outsl
mov
dec
mov
mov
push
pop
pop
cmpsl
das
xor
sti
xor
scas
ja
pop
mov
frstor
ja
je
dec
fiaddl
mov
xorl
in
jnp
popf
test
jae
stc
xchg
bound
xchg
jnp
add
loope
movsl
int3
cmp
out
fwait
in
sub
xor
push
cli
xchg
sub
jae
pop
sub
inc
pop
movsb
cmp
pop
mov
out
xchg
mov
call
std
cmpsl
sbb
xor
test
cld
and
mov
insb
movsl
cmp
sbb
aad
add
inc
sbb
mov
movaps
jbe
or
mov
popa
jmp
pop
outsl
addl
movsb
mov
repz
xchg
pop
lcall
sahf
cli
add
sub
sbb
and
ret
xchg
cld
dec
jae
push
gs
xor
mov
cwtl
jg
popa
daa
xor
bound
mov
lret
ret
cwtl
test
fcmovnbe
mov
pop
int3
cltd
mov
jb
cmp
imul
inc
repnz
jecxz
dec
adc
es
cltd
sbb
jg
mov
sub
repnz
imul
hlt
lret
add
fildl
icebp
shrb
stos
in
insl
sbb
mov
add
loopne
fwait
adc
ds
xchg
pushf
adc
dec
and
mov
mov
sub
lret
icebp
jp
xchg
int
sti
stos
and
shll
xchg
adc
mov
jle
xchg
xchg
int
js
xchg
jecxz,pn
mov
push
add
mov
xchg
leave
insl
jnp
push
push
xchg
scas
jb,pn
sbb
inc
imull
xchg
ret
out
mov
pop
xchg
out
int3
repnz
adc
aaa
mov
dec
jg
mov
call
sbb
repz
mov
insb
in
mov
jo
fs
inc
or
subb
incl
in
xchg
mov
mov
mov
std
adc
mov
mov
arpl
mov
hlt
les
dec
pop
jge
add
dec
stos
xchg
stc
jg
repz
aam
add
mov
cmp
and
sbb
mov
pop
fwait
sbb
cmp
mov
and
adc
hlt
pop
mov
insl
loopne
inc
cmp
and
jbe
cmp
loope
pop
test
in
cltd
push
mov
bnd
ffreep
call
fstpt
add
adc
pop
jns
out
gs
or
mov
push
into
inc
jbe
mov
insl
push
jl
push
cmpsl
dec
jbe
fisubl
movsb
sub
jge
push
pop
shrb
jg
jge
or
loop
mov
add
or
ds
adc
sbb
mov
adc
mov
pop
js
aas
xchg
loope
movsl
dec
out
push
mov
hlt
sbb
lock
rcr
mov
adc
add
sbb
jmp
mov
insl
pop
int
outsl
das
dec
shlb
mov
aad
and
mov
xchg
cmp
mov
repnz
fdivrs
sbb
out
aam
lods
mov
jne
aas
inc
lcall
xchg
pop
mov
imul
inc
cs
roll
test
adc
pop
cld
add
test
and
aam
lret
in
ja
dec
jecxz
aam
xor
mov
in
fxtract
mov
popf
add
mov
arpl
popa
sbb
cwtl
aad
jno
add
ret
out
ret
xchg
adc
ficoms
mov
pushf
pop
add
add
rcll
xor
or
xor
inc
movsl
lahf
jge
cmp
adcl
and
scas
add
shrb
ljmp
dec
out
ds
mov
or
fsubs
outsl
jmp
cmp
mov
pop
sub
push
fidivs
jbe
xor
pop
das
mov
cmpsb
jg
jecxz
add
cmp
idivl
jb
mov
rolb
dec
test
xchg
lods
pop
lahf
push
push
mov
pop
aam
push
xor
mov
rorl
push
cmp
ret
insl
xor
mov
ftst
mov
lds
test
xchg
push
iret
popa
ret
sub
inc
push
pop
and
cmp
and
lcall
cmpsb
popa
xor
icebp
movsb
das
xchg
dec
adc
and
ds
es
jl
sbb
fidivl
lods
call
mov
test
out
or
sbb
push
daa
aam
movsl
xchg
push
shll
push
pop
jns
jb
xor
sbb
sub
insl
in
mov
jl
and
push
sub
femms
test
ficomps
sub
shll
add
mov
js
pop
inc
mov
imul
xor
sub
cmp
hlt
out
adc
sub
cs
sub
sbb
js
sub
pop
cmp
enter
cmp
dec
sub
sbb
and
popf
add
inc
leave
dec
pop
lcall
repnz
add
or
arpl
push
aam
addr16
and
or
shlb
xchg
fidivrs
lods
add
iret
jg
shlb
loope
xchg
push
pop
sahf
leave
in
ljmp
jbe
mov
jp
mov
rolb
hlt
scas
rcrl
lock
cmp
adc
inc
lods
jp
in
push
leave
xor
loop
fstps
inc
adc
push
xor
push
adc
push
cltd
sub
sbb
mov
push
xchg
aam
dec
mov
shll
xor
jnp
imul
fcomps
jg
mov
movsl
add
push
fwait
mov
les
lds
popl
das
push
xchg
mov
mov
sbb
and
inc
js
in
lahf
addr16
std
cmp
inc
add
xor
popa
in
dec
sub
repnz
add
pop
jno
adc
fcoms
inc
jnp
mov
mov
xchg
cwtl
mov
movsl
sbb
or
and
jp
div
pop
jbe
sub
inc
jl
inc
xchg
and
dec
add
or
pop
or
nop
sbb
jbe
jecxz
mov
sub
cmc
mov
sub
pop
push
cli
dec
inc
shrb
jg
add
cli
insl
add
clc
xchg
xlat
mov
xor
mov
je
cwtl
jl
fisubl
mov
and
add
rcrb
repnz
repnz
ljmp
and
pop
pop
movsb
filds
xlat
lods
stos
rcr
or
push
clc
rcr
sti
mov
pop
shr
in
cmp
hlt
xor
loope
fldt
or
and
jnp
add
leave
in
ds
sbb
fsubl
in
adc
lret
jb
aad
cmp
dec
dec
mov
mov
adc
clc
lock
testl
sub
xchg
jle
xchg
arpl
rorb
push
sbb
jns
cs
inc
add
mov
adc
xor
lcall
mov
xor
es
in
jae
add
ror
xchg
es
jnp
lret
leave
jne
mov
and
enter
or
ror
aas
cltd
out
popa
test
mov
cmp
xchg
lea
or
inc
ficoml
and
pop
lret
dec
imul
push
stos
rolb
gs
xchg
mov
adc
fmuls
ljmp
popf
lods
sbb
dec
repnz
inc
mov
mov
xchg
shll
aam
xchg
je
or
addr16
cmp
mov
mov
and
cld
call
sti
mov
fnstsw
rep
lods
adc
jp
mov
push
stc
and
add
mul
mov
or
test
mov
stc
into
scas
sbb
xchg
addl
shl
ss
mov
add
mov
mov
sbb
fwait
jb
fisubl
addl
add
nop
in
pop
lea
addr16
ret
addr16
popf
sti
jmp
outsb
nop
mov
and
cmc
mov
add
ja
pop
add
and
pop
mov
sub
xchg
or
xchg
and
mov
popf
mov
les
shl
adc
inc
mov
jmp
fbstp
add
mov
sti
movb
mov
pop
pop
jne
stc
push
and
xchg
sub
inc
test
fstpt
test
or
cmpsb
jae
sub
pop
mov
adc
lods
movsb
cmp
orl
and
mov
movsb
mov
int3
mov
jnp
shlb
push
pop
push
ffree
ja
add
inc
or
testl
cmp
mov
add
out
add
mov
in
xchg
sub
xchg
sub
ja
sbb
test
leave
and
jmp
cli
cwtl
stos
or
data16
push
fidivs
stos
lea
cld
and
xlat
mov
cmc
xor
test
insb
xchg
mov
inc
pop
xor
ret
pop
orb
jg
and
jge
fcompl
add
ret
cli
out
addr16
mov
xchg
add
or
add
inc
sub
fwait
out
rclb
pop
push
mov
push
or
out
popl
adc
sub
lock
nop
xchg
cmpxchg
inc
fs
lods
roll
stc
imul
incb
fdiv
xor
in
lock
cltd
enter
cwtl
push
int3
out
adc
insl
lock
xor
jb
xor
fwait
push
dec
stc
cli
mov
mov
and
mov
sarb
adc
je
adc
test
stos
pop
adc
pop
pop
push
call
inc
jle
cmp
cmp
popf
lds
stos
scas
or
fcomi
cmp
pop
pop
in
stc
adc
dec
jne
stos
jnp
cli
xlat
inc
or
xchg
sub
pop
inc
adc
std
mov
clc
jne
mov
jmp
out
mov
insb
push
lret
jb
inc
cmpsb
imul
push
hlt
xor
inc
cs
jl
pop
add
movsb
mov
mov
daa
xor
cmp
fists
js
lret
inc
jg
hlt
add
orl
cltd
lret
jo
aas
fsubrl
mov
push
push
and
inc
out
sub
test
and
pop
fisttpl
mov
pushf
in
jp
push
lcall
cmp
stos
add
aaa
popf
movsb
push
adc
cld
notl
xchg
jge
mov
lahf
adc
push
mov
lods
mov
fnstsw
dec
dec
icebp
add
mov
in
inc
adc
dec
or
in
inc
stos
les
jmp
xchg
dec
mov
inc
and
and
push
pushf
out
gs
dec
cli
or
cwtl
fidivl
cmp
or
inc
push
cmp
outsl
movb
adc
sub
xlat
sahf
repnz
push
jne
out
leave
xchg
mov
shr
push
dec
stos
lods
sbb
adc
test
mov
and
aam
sub
call
cmpsl
outsl
xchg
sbb
mov
arpl
dec
stos
cmp
and
or
addb
fisttpl
add
lea
xor
int
enter
rorl
sub
add
insl
sub
mov
cmpsl
jmp
lahf
cmp
push
mov
mov
cmp
fbld
and
push
mov
in
imul
imul
mov
mov
mov
rorb
push
mov
inc
sbb
pushf
inc
sub
dec
lock
enter
fsubr
jnp
cmp
cmpsb
ja
mov
nop
adc
sub
push
out
std
into
aam
xor
sbb
jecxz
or
push
cli
or
mov
rolb
mov
sbb
imul
mov
fimull
pop
orb
xlat
xchg
xchg
jo
cmpsl
imul
int
fisubrl
mov
xchg
add
ljmp
mov
insb
clc
lods
in
push
stos
rcll
lock
adc
push
mov
mov
mov
adcb
ret
push
add
addb
loop
xchg
push
xchg
cmp
xor
mov
addr16
cmp
test
jge
jae
push
dec
inc
call
add
leave
pop
into
cmpsl
dec
sub
sub
jnp
xchg
mov
and
loopne
mov
mov
outsb
inc
and
sbb
mov
xchg
test
mov
dec
jae
popf
pop
aaa
dec
ja
mov
pop
push
enter
sti
sbb
and
sub
adc
test
jge
lock
inc
js
cmpsl
ja
dec
mov
movsl
out
and
jmp
aad
jg
xor
mov
pop
jle
pop
pop
cld
dec
adc
mov
daa
mov
mull
mov
sub
cmp
inc
xchg
cmpsl
rolb
scas
pop
ret
dec
mov
xchg
test
bnd
push
xor
dec
out
sub
aad
int3
dec
jp
push
xchg
scas
xchg
mov
mov
pop
js
mov
sub
ds
repnz
mov
and
hlt
scas
repnz
push
das
setle
lock
pop
pop
adc
jae
iret
xor
xchg
mov
or
shrb
push
push
repnz
iret
cmp
adc
out
sbb
pushf
push
std
lods
sub
push
xchg
fcomp
mov
and
xor
and
pusha
mov
cmpsb
jge
popf
repz
sbb
jns
adc
fldl
jbe
inc
sub
jge
and
pop
fwait
lods
and
ret
mov
mov
sub
mov
push
mov
xor
out
sahf
repnz
xor
insb
push
lahf
adc
pop
std
ja
rcrl
sbb
shll
fadd
mov
and
imul
xor
jbe
in
cs
jl
leave
das
mov
pop
pop
outsl
add
in
and
out
xchg
sub
jecxz
xor
pusha
scas
decb
ja
xor
fwait
push
mov
jae
bound
pop
cmp
scas
shrb
das
fiadds
adc
cmp
and
loope
fbstp
pop
addr16
mov
int
fistpl
aaa
cli
daa
daa
ja
xor
mov
xor
data16
nop
roll
pusha
cwtl
mull
dec
loopne
cltd
fsubp
inc
dec
lods
inc
pop
push
repnz
ret
xor
xor
stos
xor
adc
movsl
mov
lret
andl
mov
aaa
jnp
add
lret
sub
rolb
pushf
leave
xor
int
xchg
push
mov
dec
inc
add
mov
cmpsb
int
jg
stos
mov
adc
jnp
xchg
push
int
or
lahf
inc
adc
nop
adc
cmpsb
insb
mov
push
test
jg
mov
mov
jb
into
cli
ss
push
dec
imul
sbbl
gs
lret
dec
in
xchg
adc
mov
movsl
mov
fsubr
and
dec
fwait
movsl
imul
gs
loop
cwtl
inc
mov
push
mov
adc
or
mov
out
shl
jnp
pop
fcompl
mov
mov
pop
insb
aaa
pop
dec
or
mov
push
scas
mov
and
push
mov
xlat
sbb
lea
add
xchg
mov
xor
pusha
sbb
mov
cld
in
pop
cli
std
pop
movsb
xchg
rcll
jno
mov
test
shl
xor
sub
loope
popf
insl
jno
push
and
sahf
test
psrlw
in
fists
xchg
out
pop
adc
mov
mov
inc
or
ljmp
lods
loopne
ror
push
pusha
sbb
mov
lds
mov
jp
xor
rcrl
test
and
testl
ja
add
stos
mov
xor
mov
sbb
loope
nopl
aad
dec
fld
or
jne
xchg
icebp
rcr
shlb
mov
cmp
mov
jge
add
mov
or
add
or
mov
std
push
xchg
insl
mov
cmc
pop
pop
fs
out
imul
inc
adc
jle
cmp
mov
lahf
mov
ret
pop
adc
push
xor
xor
sub
mov
outsb
xor
les
ss
fistl
pusha
jns
cli
out
fmul
aam
pusha
sti
and
mov
add
and
mov
jecxz
rcl
add
pusha
out
int
in
jmp
mov
test
xor
insb
pop
and
xor
stc
ljmp
cmc
incb
out
and
adc
mov
fisttpll
shll
or
push
fisubl
lret
cmp
addr16
lods
lea
mov
rorl
xchg
push
xor
sbb
test
push
and
jae
xchg
je
into
or
es
push
mov
cmp
and
xchg
lock
xchg
pop
push
push
or
inc
mov
js
jl
xchg
fsubs
xchg
mov
pop
push
push
push
insb
cmpsl
rclb
stos
and
negb
stos
cld
mov
push
jbe
andl
push
adc
jmp
or
std
insl
movsl
xor
int3
stc
or
adc
mov
repz
int3
lock
sub
add
push
xchg
xor
fmuls
std
rcrb
mov
stos
add
ds
stos
xchg
int
mov
jb
and
xchg
cmp
mov
push
push
pushf
cmp
ret
adc
mov
stos
divb
adc
imul
pushf
add
outsl
bound
jbe
mov
cmpsb
stos
xorps
xchg
inc
sbb
aas
or
dec
adc
mov
imul
pusha
or
iret
adc
neg
mov
rorl
repnz
fwait
inc
xor
or
ret
cmp
cmp
loopne
icebp
jae
icebp
lods
push
and
lret
and
mov
xchg
xor
adc
jmp
inc
add
or
ja
lret
jo
mov
test
mov
cmp
popf
and
cmpsb
int3
adc
mov
cmp
push
cli
lods
inc
dec
adc
xchg
mov
adc
xor
adc
test
lods
loopne
adc
out
cmpb
lahf
push
xchg
add
mov
aas
dec
cwtl
andl
mov
loope
jne
pop
mov
sub
dec
sar
loopne
adc
out
xchg
lods
jg
pop
or
aas
mov
mov
xchg
in
push
scas
ljmp
mov
movsb
mov
shlb
clc
cmp
mov
mov
dec
jge
mov
aam
dec
mov
jp
sub
or
or
shrb
dec
lcall
shlb
ror
aam
mov
testl
in
lea
sbb
xor
or
and
sbb
dec
push
insb
and
rolb
push
cmp
rclb
mov
test
cmpsb
or
mov
loop
pop
ret
fldl
inc
mov
ds
push
dec
mov
addb
ja
cltd
mov
push
xor
jle
sbb
clc
add
cmpsb
dec
xchg
test
cmp
mov
je
xchg
sahf
movb
sub
jl
cmpsb
push
loopne
and
push
inc
xor
pop
push
sbb
das
mov
sbb
lods
stos
fs
mov
mov
add
test
pop
cmp
in
mov
mov
jg
mov
mov
mov
mov
and
or
lcall
xchg
ss
jns
push
arpl
imul
xor
out
dec
xchg
jns
pop
adc
inc
jp
aaa
popa
push
xor
inc
insl
mov
cs
sub
sub
mov
call
fcmovnbe
rorl
push
mov
push
cli
push
adc
mov
pop
lock
pusha
xchg
sbb
mov
mov
leave
push
gs
pop
jmp
inc
jb
ret
jno
out
test
inc
xchg
dec
loopne
cmp
mov
mov
push
popf
test
cmpsb
mov
aas
add
pop
pop
xor
test
rcrl
fstp
adc
adc
push
outsl
sub
mov
xor
icebp
mov
aam
es
lret
rolb
mov
test
into
push
call
loopne
out
in
xchg
sub
mov
rep
sbb
push
mov
cmpl
jo
cmp
and
icebp
lret
push
xor
iret
stos
arpl
cmc
sti
mov
test
jb
jg
adc
jle
lds
fnstcw
adc
lds
lods
push
cmp
jnp
jecxz
adc
into
mov
ret
ss
xlat
push
sbb
ret
add
and
dec
mov
mov
xchg
movsb
pop
lds
ds
cmpl
ds
std
jbe
sbb
aas
fucomip
vfrczps
pop
push
push
sub
jmp
jnp
xchg
popa
sub
aam
imul
fnstenv
in
das
es
dec
or
repz
xchg
add
jae
xor
out
cld
fnsave
dec
cld
mov
ss
and
cltd
xor
cli
xchg
shrb
pop
daa
sub
andl
jnp
test
unpcklps
es
cmpsb
mov
repz
push
nop
cld
lods
mov
cmpsb
js
fdiv
push
flds
mov
leave
add
inc
pop
repnz
jo
mov
adcb
je
ss
sub
imul
and
mul
or
iret
sub
filds
dec
cmpsb
inc
fcoml
repnz
aaa
pop
ja
mov
jno
cs
in
test
outsb
or
sbb
das
cld
mov
into
dec
mul
out
push
sti
imul
icebp
lret
dec
lahf
fs
mov
xorb
fdivrl
xchg
insb
iret
ficompl
out
jp
add
loopne
inc
movsb
cmp
ret
push
sahf
xchg
ljmp
sbb
jle
in
jg
pushl
pusha
fnstcw
sarl
mov
icebp
inc
xor
jg
arpl
jl
enter
addr16
js
mov
cltd
pop
out
aas
mov
jp
adc
xchg
and
cmp
shlb
mov
adc
sarl
out
dec
es
push
ljmp
dec
test
sub
in
jg
xor
pushl
movsl
cmpps
cld
out
cwtl
fiaddl
dec
inc
cmp
test
or
cmc
dec
fwait
aas
cwtl
push
sbb
or
cmp
fadd
xor
pop
sbb
cmp
sub
in
sbb
in
inc
ds
fdiv
push
ret
je
cmp
ret
test
pop
lret
xor
pop
and
fadds
sub
inc
das
mov
sub
and
pop
mov
add
out
cmp
popa
push
mov
push
or
adc
popa
pop
add
fdivrs
lret
mov
std
mov
xor
inc
mov
adc
and
es
shr
ss
faddl
aam
inc
cmc
add
sti
or
xchg
stos
jg
jb
lahf
lret
adc
aad
stos
jg
daa
sbb
cmp
pushf
pop
dec
loop
lock
adc
pop
mov
push
mov
insb
lahf
cmp
icebp
mov
sti
mov
pop
sbb
push
cmp
popw
adc
lods
js
roll
cmpsb
dec
ss
mov
jnp
leave
and
mov
pop
sub
cld
or
mov
xor
mov
in
push
cmpsl
sbb
dec
pushf
test
movsb
addr16
mov
ja
fwait
mov
cmp
repnz
mov
lcall
std
cmpb
cmp
sti
jnp
adc
test
mov
mov
inc
popa
sti
jnp
out
aad
cwtl
arpl
mov
fwait
jg
sub
push
jne
push
lds
mov
out
dec
aad
jb
push
iret
cmc
inc
lret
inc
jae
mov
les
scas
adc
xchg
mov
cwtl
dec
lea
sub
jmp
jbe
adc
jl
imul
loop
aaa
dec
mov
ljmp
jne
push
pop
cmp
push
jmp
frstor
and
cmpsb
int
call
fistl
sar
xor
mov
subl
test
hlt
dec
xor
dec
pushf
imul
cmp
or
sub
lds
sub
xchg
mov
pop
bound
pop
push
lods
loope
popf
in
dec
xor
adc
dec
add
enter
xor
dec
mov
dec
int
fwait
mov
call
int
or
xchg
mov
es
in
sub
outsb
aad
js
jbe
fstpl
lock
imul
std
loopne
or
hlt
xchg
jg
iret
adc
popf
movsl
jmp
inc
adc
fisubl
sub
jno
cmpsb
fyl2x
xchg
int3
das
adc
adcl
pop
shll
cli
dec
mov
jcxz
jp
jnp
cmpsl
cwtl
mov
outsl
in
or
cmp
clc
shl
test
push
cmpsb
inc
mov
or
push
push
out
lock
cli
sub
outsb
pop
lahf
xlat
xor
in
push
sbb
cmp
mov
enter
push
xchg
notb
mov
out
cmpsb
int
jg
shll
xor
pop
sti
push
loop
and
xchg
adc
jge
or
cmp
and
xchg
nop
fdivrl
imul
push
out
and
xor
add
lods
xor
lods
outsl
hlt
jg
push
dec
ja
nop
push
cmp
les
cmp
add
push
int
stos
xor
fiaddl
lds
into
push
js
les
not
mov
or
repnz
jl
xchg
test
mov
lret
cmp
xchg
dec
sbb
aam
insl
seto
mov
jb
aaa
cmp
out
stos
sub
js
into
aam
daa
push
arpl
push
call
lahf
lcall
xchg
stc
xorl
int3
mov
pop
xor
inc
and
or
js
cmp
scas
in
mov
or
pusha
jns
mov
sbb
rcl
and
pusha
inc
loopne
icebp
or
std
testb
fcoml
outsb
rcrl
int3
or
fiaddl
arpl
out
add
loope
xor
repnz
and
pop
je
aaa
mov
jbe
dec
mov
dec
call
adc
inc
inc
and
leave
je
je
mov
adc
sbb
or
popa
pop
arpl
or
adc
loopne
xchg
mov
fs
enter
stc
adc
push
jecxz
aas
ret
sahf
andl
shlb
push
mov
cs
test
push
push
adc
rcrb
push
cwtl
add
pop
xchg
push
out
out
mov
xchg
mov
cmp
mov
insl
pop
int
test
dec
xchg
cwtl
or
stos
mov
and
pushf
xchg
test
pop
cwtl
enter
ja
jp
js
fiaddl
xorl
inc
in
and
xor
loope
data16
aaa
jns
jae
sbb
pop
sub
es
insl
mov
pushf
js
adc
cli
cmp
dec
inc
inc
dec
mov
movsl
repz
xlat
xor
test
add
inc
xor
adc
daa
jno
dec
adc
std
dec
scas
outsb
movsb
imulb
adc
mov
rcll
and
addr16
mov
cmc
aam
pusha
and
mov
xchg
data16
xchg
cmove
xor
push
test
push
das
out
inc
repnz
mov
pop
push
fcoml
sti
push
add
inc
cmp
adc
mov
les
push
push
call
push
rcl
in
adc
popf
cli
sub
add
test
fistps
inc
or
add
in
mov
aaa
jno
fs
arpl
in
dec
imul
dec
or
mov
mov
stos
stc
sub
xchg
gs
push
imulb
addr16
mov
adc
scas
inc
mov
repnz
cmp
jae
adc
lock
divl
inc
cmc
test
xor
outsl
aad
fs
ffree
jns
inc
ss
mov
cltd
pop
sti
push
mov
ja
les
jne
jecxz
jl
cmp
andl
mov
mov
mov
jns
inc
push
cltd
inc
ds
mov
inc
repz
movsl
out
movsl
movsb
test
jmp
mov
arpl
jo
popf
pop
lcall
xchg
sbb
ds
mov
dec
xchg
push
pop
mov
sbb
scas
jle
dec
je
dec
lret
push
mov
push
lahf
outsl
int
pushf
lods
pop
ss
gs
out
cld
cmp
movsb
daa
movsb
test
jae
dec
into
dec
test
aad
fistpll
popf
inc
and
fs
ror
sahf
add
into
ljmp
jno
pop
sub
sbb
ret
cmp
inc
and
and
add
add
lcall
and
popa
loop
lahf
je
arpl
inc
imull
add
in
mov
inc
idivb
push
mov
inc
das
leave
int3
adc
mov
adc
inc
pop
and
xchg
cmp
dec
lods
mov
push
mov
es
sbb
push
xorl
divb
mov
pop
negb
push
inc
pusha
sbb
dec
xchg
pop
out
enter
jecxz
add
lcall
xor
adc
add
xchg
inc
sub
movsb
lahf
xor
mov
or
jb
dec
xchg
int
and
sub
cmp
sbb
pop
sbb
repnz
loop
sbb
jne
test
xor
pop
cmpb
loope
pop
and
enter
xor
mov
test
data16
leave
add
repz
daa
scas
push
mov
fwait
jp
xchg
xlat
scas
push
out
sbb
mov
xchg
fnsave
cmpsb
sbb
mov
aaa
cmp
rcl
shlb
testb
scas
pop
inc
int3
ficomps
cmp
mov
jge
jmp
ja
cmp
mov
js
and
scas
inc
rcll
push
das
xchg
jmp
inc
xchg
dec
mov
inc
and
cmpsl
mov
sti
aam
or
cmp
push
test
nop
xchg
dec
popf
or
shlb
out
fistpll
clc
scas
in
jno
mov
andl
filds
cmp
cli
inc
test
pop
jp
add
mov
mov
int
cmpsb
xlat
nop
or
outsl
jno
sub
jno
adc
pop
pop
xor
xchg
adc
mov
cwtl
push
xchg
or
xchg
ja
addl
mov
sub
and
sarl
stos
or
push
mov
repnz
xchg
arpl
gs
into
fmull
out
test
cmp
sub
push
inc
fsubs
push
mov
ret
fsubr
ja
push
sub
push
inc
jb
cmp
xor
add
xchg
pushf
sbb
fstl
adc
mov
jno
inc
out
cmp
lea
push
push
mov
xchg
into
addl
lahf
pop
cwtl
fbld
mov
add
mov
push
sub
in
inc
add
lods
xchg
push
int3
ret
in
dec
aaa
jae
mov
rorl
push
mov
jmp
mov
xor
mov
mov
xchg
cltd
mov
data16
imul
sti
dec
cs
je
test
mov
repz
xchg
aam
fwait
jge
std
xchg
push
mov
push
mov
add
mov
lret
dec
sub
mov
pop
mov
movl
pop
xchg
fsts
aam
andl
shll
popf
out
es
mov
roll
out
mov
or
xchg
inc
cli
sbb
xor
fwait
adc
sbb
xlat
dec
sub
mov
cltd
sbb
xchg
mov
scas
jle
mov
dec
xchg
push
dec
push
fsubs
data16
das
push
sub
scas
loopne
jb
sbb
data16
call
lock
cmp
testl
andl
and
pop
mov
shl
jg
and
addr16
lahf
cld
imul
fwait
imul
add
loope
sbb
rcll
sub
cltd
lahf
push
add
jbe
iret
ja
xchg
jnp
loopne
cmp
sbb
js
test
push
shr
test
mov
and
mov
shlb
and
movl
fildl
gs
jo
jle
lods
cmp
fdivl
out
mov
imulb
push
paddb
stos
test
sbb
jb
and
out
ja
fdivl
mov
inc
test
rcll
pop
jae
adc
mov
inc
cli
cs
into
gs
test
jb
insl
push
imul
cmp
out
sbb
cld
cs
xor
pop
xlat
xor
mov
adc
or
addl
cmpl
out
out
push
out
dec
fisttpl
or
dec
cmp
push
pop
inc
jecxz
out
test
dec
mov
xchg
loopne
les
popl
es
xchg
imul
in
rorl
xor
adc
xor
cs
add
push
dec
cmp
jne
orb
les
inc
data16
cs
or
cmc
ds
inc
push
sub
push
sub
mov
je
outsl
or
sub
fidivrl
inc
fsubrs
xor
out
mov
daa
iret
fbld
vpcomuw
and
mov
xchg
and
jb
push
xor
in
daa
jg
in
or
adc
push
jno
pop
ljmp
jge
cmpsb
xor
xor
je
daa
fsubrs
push
mov
pop
loop,pn
pop
push
dec
dec
loop
scas
jecxz
cmpsb
lods
out
cmp
adc
imul
jge
fs
jnp
push
repnz
std
dec
pusha
add
dec
adc
loopne
insl
jns
or
cwtl
pop
pop
cmp
stc
inc
test
jecxz
test
mov
sbb
mov
imulb
ja
xchg
sbb
out
cmp
aaa
enter
js
cmp
lret
add
out
lret
arpl
pushf
outsl
inc
or
loop
stos
data16
push
shlb
arpl
in
add
loopne
mov
outsl
outsb
negb
je
pusha
loopne
xor
roll
add
fbld
testb
adc
ror
mov
dec
or
inc
jne
adcb
fimuls
mov
dec
pop
out
loopne
test
imul
mov
ret
xor
dec
mov
scas
jecxz
mov
jle
enter
adcl
jmp
cmc
fwait
gs
dec
inc
aas
shll
ljmp
divl
pushf
xor
mov
or
dec
loope
sub
mov
and
xor
and
mov
jns
jnp
dec
js
or
jns
jne
adc
pushf
or
or
or
push
lods
imul
pop
jns
push
sub
pop
scas
int
jns
pop
jp
out
pop
repz
or
ja
hlt
loopne
mov
dec
mov
mov
jne
xchg
cmp
push
add
jecxz
aaa
sub
sbb
out
les
lret
mov
into
sti
xchg
addr16
pusha
cmpsb
fmuls
test
push
and
stos
add
je
mov
or
into
xchg
stc
test
aaa
test
jmp
das
andl
jns
ljmp
adc
dec
adc
std
push
mov
test
test
fst
xchg
cmpxchg
cmpsb
push
and
add
mov
cs
push
testb
fcomip
or
cmp
inc
jp
or
insb
mov
cmpsb
add
or
dec
in
test
xlat
sbb
pop
lcall
push
mov
iret
test
iret
adc
rclb
sti
divb
lods
imul
aad
adc
sbb
in
fwait
xchg
xchg
sbb
loopne
in
test
loopne
jne
mov
mov
sahf
sbb
and
and
fstpl
add
mov
scas
out
pop
ss
dec
mov
xchg
mov
lcall
notl
ja
mov
shlb
pushf
insl
clc
jns
mov
lock
dec
ficoml
dec
jmp
mov
push
out
ljmp
in
jne
adc
into
insl
in
xor
xchg
aaa
movsb
cwtl
scas
in
mov
mov
in
cmp
mov
add
inc
insl
aam
mov
arpl
push
rolb
mov
pushf
push
jl
popa
pop
adc
enter
xlat
stc
popf
pop
mov
jecxz
inc
fwait
loopne
pop
mov
ss
lock
ss
inc
and
popf
in
or
int
push
in
mov
test
popf
enter
loop
jg
jo
lods
cs
pop
iret
dec
fisttps
insb
xor
lods
push
inc
push
icebp
dec
out
and
jecxz
iret
jo
push
rcl
dec
pop
fidivrs
inc
cmp
add
push
push
mov
insb
adc
fs
test
sub
inc
jmp
mov
mov
subl
xor
jmp
sub
mov
push
insl
jno
ud0
out
xor
xor
fadds
mov
jge
cmp
inc
pop
mov
adc
xchg
icebp
mov
pop
xchg
test
pushf
lods
xchg
test
mov
not
clc
push
test
jge
das
fisubl
jl
jp
push
ret
sbb
test
sti
jle
xchg
stos
xchg
inc
shlb
sbb
imul
xchg
roll
imul
dec
out
clc
nop
daa
shl
in
pop
mov
fiadds
lock
and
xor
jmp
dec
imulb
sbbb
mov
adc
insl
add
mov
icebp
int
les
addr16
aaa
xchg
sub
arpl
mov
mov
gs
sub
in
mov
shll
inc
int3
scas
mov
daa
xchg
orl
cmpb
mov
mov
push
mov
push
push
in
lea
dec
push
sahf
das
inc
pushf
mov
xchg
lahf
mov
pop
outsb
sub
xchg
xchg
pop
sbb
inc
lock
push
test
jo
and
push
jge
mov
mov
jbe
dec
add
xchg
pop
popa
movsl
ljmp
mov
test
data16
xchg
into
pushf
stos
push
aas
push
adc
lcall
mov
xchg
pop
aad
mov
gs
push
pop
shlb
and
fsub
stos
mov
xor
xchg
push
jle
lcall
adc
or
dec
cmp
pop
push
test
jmp
ret
daa
xlat
icebp
adc
push
push
jecxz
push
loop
xor
mov
icebp
jmp
fsubrs
lock
cli
and
imul
mov
fistpl
dec
pushf
cs
fsubp
push
xchg
dec
stos
int
push
shr
clc
push
iret
pop
imul
cmp
and
imul
mov
jmp
outsl
mov
jecxz
ficoml
or
subl
cmpb
xlat
xchg
jns
sub
adc
dec
ret
adc
out
jge
dec
mov
jle
sub
repz
out
repnz
mov
mov
add
push
aas
subl
and
adc
push
ss
cmp
fstl
xor
adc
call
loopne
xchg
sti
push
aas
or
or
cmp
popf
loope
cmp
stos
ss
cmp
aas
adc
mov
outsl
cmp
pop
cmpsb
inc
test
stos
cmp
push
sub
es
dec
fldt
insb
out
fwait
dec
jmp
mov
loop
xor
push
jl
mov
and
adc
xchg
ret
int
pusha
cmp
out
and
fmuls
lahf
push
ror
pop
addr16
sub
mov
adc
fsub
fsub
push
test
mov
pop
push
xchg
lods
loope
inc
add
jmp
ss
rcrb
xchg
add
shll
add
xchg
in
cs
ret
clc
daa
mov
xchg
addr16
sbb
cwtl
ljmp
and
pop
ret
xchg
stos
mov
dec
adc
pushf
mov
mov
ja
sbb
cwtl
movl
ret
cltd
cwtl
aas
push
jbe
bound
repz
cli
in
scas
cmovbe
add
cmp
cmpsb
aaa
cli
add
xchg
cli
mov
jl
les
fisubs
dec
xor
fldcw
or
and
mov
sahf
xor
into
adc
pop
je
jmp
push
js
std
and
test
jb
mov
add
push
testb
arpl
or
mov
scas
inc
cmp
or
push
add
push
outsb
cmp
loope
xchg
adc
jle
sub
dec
addr16
lahf
cmpsl
add
out
adc
pop
add
cmpsl
xlat
push
mov
pop
pop
stc
or
push
cmc
in
mov
outsb
fstps
push
mov
mov
movsl
pop
sub
or
shlb
or
orb
push
inc
pop
daa
adc
pop
adc
cld
int
mov
lock
mov
fldl
dec
sti
or
push
clc
cmp
scas
inc
and
out
fldl
sub
sahf
mov
mov
lock
ret
xor
pop
dec
stos
mov
lahf
xor
pop
pushf
add
xor
push
fisubs
ror
jbe
cmc
repz
pop
mov
lret
divb
jp
sbb
popf
stos
int3
and
aad
icebp
in
jb
adc
cwtl
push
mov
shl
xchg
xor
jmp
repz
fbstp
or
mov
and
repnz
jg
pop
xor
mov
sub
and
fs
jmp
andb
add
mov
sbb
mov
or
in
nop
movsb
inc
jg
mov
movsl
jnp
out
mov
dec
adc
stc
popf
repnz
add
add
push
xchg
fadd
add
and
icebp
flds
jne
shr
dec
ret
dec
adc
mov
push
and
jmp
sub
or
mov
or
mov
sub
mov
movsb
scas
lods
cld
pushf
xchg
ljmp
xchg
test
loopne
lahf
sub
aas
aas
push
pop
xor
js
adc
call
shrb
push
pop
inc
shr
test
mov
xchg
mov
icebp
repnz
jl
xchg
cmp
mov
pop
rcll
mov
push
in
cwtl
mov
cld
mov
cmc
xlat
mov
fwait
jnp
fidivs
repnz
xchg
push
mov
iret
xchg
popf
aas
cmp
sub
ret
nop
andl
sbb
fstl
xchg
cmp
jl
cmp
pop
fldcw
fimull
cmpsb
cmc
jmp
inc
ficomps
cmp
cwtl
xor
out
flds
sbb
jecxz
rclb
adc
mov
push
mulb
dec
sub
and
sar
out
add
mov
inc
out
mov
daa
mov
cmp
js
rol
cmpsb
mov
push
mov
dec
lahf
aad
sbbl
das
shll
and
pop
adc
inc
imul
in
dec
mull
pop
pop
fsub
or
inc
adc
imul
jb
lods
pop
push
jl
xchg
jno
lea
nop
sub
movswl
mov
test
fcoml
into
jp
inc
push
arpl
jns
aaa
and
lds
sarb
stos
xorl
jne
fiaddl
push
stos
movsl
nop
mov
ficoms
test
iret
fucom
out
push
je
subl
dec
or
repnz
pushf
mov
push
inc
or
mov
icebp
add
in
ret
xchg
jno
jmp
or
push
shlb
shr
sti
dec
fcmovbe
mov
adc
ret
stos
jp
lret
icebp
xor
cli
or
sbb
or
mov
test
pusha
push
jae
inc
mov
movsb
mov
imul
jns
cmp
in
sub
sbb
pop
xor
or
pop
mov
mov
sub
push
cmp
les
outsb
xchg
jmp
mov
mov
popf
sub
outsb
aas
leave
and
pop
dec
lret
cmpsb
mov
out
xchg
dec
xchg
dec
jmp
jno
mov
sbb
add
lods
add
scas
into
and
pop
and
je
pop
fmulp
out
shl
mov
js
das
xchg
clc
inc
xchg
and
daa
and
imul
push
arpl
ficompl
xchg
sbb
push
in
and
mov
xor
or
mov
outsl
cmp
js
sub
xrelease
movsb
in
js
pushf
pop
clc
lea
cmp
push
lret
and
mov
fwait
cmp
add
call
xchg
mov
sbb
xchg
int3
and
decl
cli
mov
xlat
das
pop
popa
fs
loop
addb
aas
dec
orb
rorl
aaa
jno
stos
lea
pushf
lcall
test
fldt
adc
testb
je
imul
xchg
jnp
xchg
loopne
add
cmp
lods
cmpsb
rclb
ljmp
dec
outsb
cwtl
test
jp
les
out
push
add
das
or
fsubs
lcall
or
arpl
or
add
inc
or
xchg
sub
mov
sbb
inc
movsl
or
and
dec
dec
loop
adc
outsl
insl
pop
xor
add
dec
aad
add
loope
mov
push
out
js
mov
cltd
dec
fistl
or
bound
js
dec
mov
inc
in
call
dec
lods
faddl
subb
mov
push
lahf
add
popa
add
fcmove
push
imul
cmpsl
pop
andl
mov
fcompl
lahf
stc
repz
sub
or
xchg
inc
dec
test
add
xor
mov
inc
xor
jg
cwtl
enter
mov
enter
jmp
xlat
and
xchg
mov
dec
mov
dec
sbb
enter
outsl
ret
jo
pop
xor
test
lods
jg
add
lret
negl
lea
push
popa
fidivs
sbb
sub
out
imul
cs
jb
inc
notl
mov
xor
inc
int
cwtl
jmp
scas
jmp
cmpsb
and
roll
jnp
jle
rcll
mov
jp
push
xchg
sbb
mov
shr
jb
mov
jb
push
mov
out
sub
dec
xor
xchg
cmp
iret
mov
push
jns
das
xor
push
xor
imul
push
icebp
outsl
or
movsl
mov
test
rorb
inc
lods
xchg
and
jle
lcall
add
jecxz
cli
loopne
rclb
pop
cwtl
cs
add
mov
push
test
mov
jg
xor
and
jle
mov
pop
xlat
loope
pop
pop
mov
jge
ds
fiadds
sub
jecxz
sbb
jmp
repz
dec
jmp
add
xchg
nop
call
stc
xchg
add
cmp
jno
aaa
ljmp
sti
andb
fisubrs
and
adc
repnz
fsubrs
or
pushf
bound
movsb
js
cmp
fsubs
test
mov
les
add
xchg
or
or
enter
mov
das
cmp
das
flds
aas
loopne
push
cmpsb
xorl
sub
sub
arpl
pop
movsl
pop
xchg
push
mov
sbb
jge
jle
je
xor
adc
stos
in
fsubrl
dec
jnp
incb
stc
pop
cmp
adc
repz
lretw
mov
mov
imul
test
ss
mov
and
xorb
xchg
jg
and
cs
xor
cmp
in
dec
in
hlt
sbb
adc
repnz
test
xchg
out
test
out
mov
lods
cli
or
and
arpl
push
adc
xlat
test
jns
lock
mov
sar
lods
mov
rcrl
cltd
test
pop
or
fstp
out
imul
inc
push
and
mov
inc
int3
mov
cli
leave
cmpsl
xchg
mov
scas
mov
adc
enter
adc
pop
inc
repz
cmpsl
and
aas
mov
movsl
js
bound
xor
push
negl
cmpsl
enter
movsl
cmp
pop
mov
sub
mov
pop
sbb
scas
aam
and
fimuls
in
testl
js
addb
outsl
dec
ficompl
mov
mov
push
add
test
inc
push
stos
stos
dec
jp
lds
add
addr16
push
sbb
and
push
xor
pop
insl
mov
nop
mov
or
pushf
sbb
rclb
cltd
sub
sbb
mov
fsubrs
aad
sbb
mov
imul
xor
leave
daa
sbb
jg
pop
adc
cmp
test
jecxz
scas
aam
ss
in
aas
mov
sti
xor
test
cmp
int3
or
test
sub
mov
mov
ljmp
mov
jbe
pop
test
int3
adc
test
mov
mov
or
adc
stos
fidivs
shrl
clc
mov
adc
mov
xor
aaa
push
fstl
jl
ja
stc
and
add
int3
sub
movsb
cmp
div
dec
ret
out
mov
fs
into
pushf
add
xchg
call
cs
repz
pop
sti
pushf
push
inc
inc
test
mov
test
mov
in
aam
rcrb
ficomps
cmp
push
loopne
mov
mov
sahf
inc
inc
fwait
or
sub
sbb
pop
push
clc
inc
sbb
or
shlb
leave
div
ss
jecxz
mov
push
adc
cltd
decl
or
dec
popa
fiaddl
clc
aaa
sti
push
mov
test
jp
dec
inc
inc
mov
sti
out
lcall
jmp
aam
sbb
sub
es
mov
push
hlt
mov
xor
mov
cli
incl
cmp
dec
in
lods
sub
push
mov
out
rcrb
les
mov
adc
push
test
jnp
xor
lret
push
jl
scas
push
in
test
movsl
jo
xchg
fadd
sbbl
mov
mov
xor
xor
push
subl
adc
and
mov
lahf
xchg
xor
test
mov
loopne
rcl
add
push
cs
fidivl
xchg
lea
fstl
rcll
xor
sub
addr16
lock
test
xor
and
sub
dec
xchg
test
test
das
insl
call
inc
movsl
pop
and
sbb
out
test
das
jecxz
sti
dec
cmp
jecxz
jnp
daa
scas
xlat
pop
test
pop
mov
mov
mov
inc
fsubrl
call
test
add
in
movsl
leave
repz
int3
mov
mov
lahf
pop
in
sub
add
testb
sbb
xlat
loopne
pop
add
jno
cltd
orl
mov
fwait
or
inc
cmp
ljmp
popa
js
mov
in
stc
outsl
or
in
cmp
push
pusha
aas
lahf
fnop
dec
and
ljmp
out
stc
mov
lret
or
push
imull
push
sbb
dec
lods
fldenv
push
mov
push
inc
and
inc
ret
pop
gs
aaa
jnp
enter
cwtl
leave
fdivrp
add
cmp
sahf
cwtl
and
push
iret
ficoml
pusha
mov
sub
call
xor
lcall
lods
and
add
out
or
and
mov
cwtl
addr16
and
ret
shl
cld
jge
repz
adc
int
sub
jno
push
out
outsb
test
les
ret
fdivp
les
mov
lea
cmp
mov
push
sbbb
rcrb
inc
sbb
push
adc
push
outsb
insl
mov
ficoml
pop
jb
jg
mov
lahf
sub
sub
xchg
pop
iret
mov
imul
sbb
int
aaa
mov
inc
xor
iret
mov
and
mov
je
xor
push
jo
adc
aas
push
test
and
aad
int
aas
sti
pop
sbb
dec
je
or
into
iret
mov
sarb
adc
imul
push
sbb
scas
pop
dec
mov
cld
lods
stos
addl
test
ljmp
mov
push
cmp
mov
add
adcl
jg
jne
popl
imul
inc
std
das
pop
fildll
test
call
sub
in
mov
dec
mov
leave
mov
out
popf
adc
push
movsl
mov
pop
aad
lock
iret
ds
jae
jecxz
add
or
lea
push
sbb
pop
gs
imul
dec
cmc
stos
adc
sbb
xchg
scas
dec
enter
ret
adcl
ret
xor
out
mov
adc
push
and
and
bound
fstpl
mov
lahf
lahf
call
mov
aaa
lret
inc
jb
iret
xchg
stos
out
push
mov
repz
fs
jae
daa
mov
xchg
lods
sub
inc
test
shlb
fidivs
mov
jl
pop
aam
or
nop
inc
shlb
pop
push
loope
adc
lock
lret
out
jo
cs
jbe
pop
stos
daa
sub
in
cwtl
je
sti
pop
xchg
popa
int
inc
mov
jo
dec
les
clc
jecxz
push
xchg
cs
mov
jmp
mov
ljmp
gs
stos
dec
out
mov
and
les
ljmp
pop
push
pop
int3
lods
sub
or
sbb
xchg
aas
insb
loopne
rclb
mov
fs
roll
mov
insl
xchg
xchg
jns
outsb
mov
xlat
mov
cs
jmp
xlat
adc
loopne
xor
sbb
xchg
and
inc
aaa
sbb
fbstp
aas
ret
ja
jge
xchg
scas
jl
outsl
xchg
pop
lods
jg
pushf
jp
inc
sbb
hlt
mov
jmp
push
or
mov
or
hlt
and
jne
test
hlt
rcrl
es
js
lret
cli
xor
rorl
mov
inc
mov
mov
sub
push
inc
popa
cmpsl
xlat
cld
fs
add
jge
fwait
mov
mov
lahf
cwtl
sbb
repz
push
jnp
sbb
sub
inc
xor
push
mov
and
lock
mov
adc
add
dec
stos
jb
dec
nop
dec
repz
pop
out
push
stc
popf
xchg
fisttpl
leave
dec
sub
inc
adcl
xchg
int3
movsl
inc
js
imul
xlat
add
add
ret
pop
lcall
shrl
dec
aam
repz
xchg
xchg
in
xchg
sbbb
sbbl
add
or
int
dec
test
push
push
getsec
mov
xchg
push
ds
out
je
lods
popa
mov
cld
ja
xor
add
xchg
cld
xchg
cmp
shrb
fcompl
lods
in
ja
outsl
imul
sbb
xchg
xchg
popf
pop
aad
mov
in
mov
sbb
stos
push
dec
frstor
insl
cmp
dec
mov
inc
hlt
xchg
ds
jp
jno
adc
sub
mov
orb
inc
dec
pusha
test
inc
inc
in
and
leave
dec
pusha
lock
lock
ds
sbb
pop
mov
test
mov
adcl
mov
mov
arpl
sub
test
jg
ficompl
mov
std
jns
icebp
dec
mov
or
dec
jne
lea
out
and
mul
mov
mov
pop
pop
cmp
iret
mov
cltd
testb
add
pop
mov
dec
mov
pushf
fisubl
insb
inc
pop
test
xlat
add
sbb
in
xor
pusha
sub
inc
xchg
test
jne
pop
std
and
inc
fsts
pop
or
push
movsb
xor
sbb
and
js
xchg
gs
inc
mov
push
pop
repnz
adc
jae
sbb
inc
mov
imul
call
das
fsubrl
daa
insl
add
iret
fucomip
stc
hlt
scas
mov
jo
inc
pop
cmp
push
loopne
mov
aad
les
pop
int
scas
out
sbbl
and
ja
add
cmp
adc
rcll
jo
lret
fnstcw
add
mov
xchg
dec
push
insl
sub
jb
add
iret
ficoml
shrb
lods
sbb
xlat
mov
out
sahf
or
and
stc
aam
mov
mov
mov
jne
or
scas
cmp
cltd
jmp
inc
push
and
add
pop
add
xchg
pop
insl
xor
jle
sbb
jmp
jae
lret
out
stc
xlat
loop
in
insl
lcall
test
ljmp
jns
pusha
add
loop
pop
lcall
mov
rorl
push
cmp
push
into
adc
sub
test
lods
fs
int
cmp
repnz
lret
mov
lret
mov
nop
adc
inc
les
cmp
int
xchg
mov
jecxz
or
aaa
arpl
jb
movsl
push
testl
inc
or
jecxz
stc
loope
push
inc
cmp
rorb
cmp
ljmp
inc
lds
jne
int3
sbb
sub
sahf
mov
je
mov
inc
lods
push
xchg
repz
lock
sbb
out
dec
jecxz
fstps
sahf
fistpll
enter
lods
cmp
test
cltd
xor
mov
int
pop
push
aam
clc
and
sub
adcl
daa
xor
mov
call
xchg
pop
sar
mov
stc
push
shl
and
mov
adc
subb
pop
xchg
dec
cmp
leave
call
ds
ret
xor
adc
dec
add
mov
add
ss
in
mov
mov
sti
mov
or
pop
repnz
lret
out
jo
jbe
push
sahf
rcl
iret
lea
aas
std
rcrl
mov
pop
idivl
negb
dec
sub
outsl
fldt
pop
ror
sub
push
pop
sub
mov
cmp
push
ret
mov
pop
cmp
fmull
add
mov
std
xchg
and
out
fnsave
out
push
mov
cmp
mov
leave
mov
jl
stos
xor
das
fwait
scas
sub
sbb
and
mov
add
jecxz
pop
js
test
xor
mov
aas
int3
outsb
leave
lahf
adc
dec
aaa
out
push
cmpb
insl
pop
xchg
mov
xchg
bound
mov
cli
sbb
xchg
addl
push
fcomip
pop
data16
add
rolb
arpl
mov
cmp
popf
fstl
js
lea
jae
inc
outsl
pusha
jb
push
xchg
xlat
push
jg
cwtl
pop
inc
lds
shll
sub
inc
out
adc
fwait
push
stc
out
leave
xlat
dec
and
push
pusha
mov
cmp
lods
cmp
je
and
jmp
pusha
scas
jle
jb
jecxz
push
out
mov
cmp
and
xor
sbb
mov
jge
popf
sub
lods
push
fmul
inc
int3
out
les
das
adc
fwait
insl
and
xchg
xor
jns
sarb
cmova
lcall
inc
xchg
cmp
or
mov
ja
rclb
push
push
fwait
test
pushf
pusha
cmp
addr16
cmpsl
xchg
sti
pusha
mov
outsl
mov
insl
jo
in
cltd
inc
xor
or
pop
xchg
cmpl
mov
movsb
mov
xor
add
xchg
loope
out
outsl
mov
outsl
and
mov
cwtl
pop
movsl
and
arpl
xor
mov
sub
xchg
addr16
mov
out
pop
enter
pop
inc
cld
cmp
or
inc
std
sub
ret
fidivl
mov
dec
insl
pop
dec
out
cmc
cli
dec
inc
out
imul
push
and
dec
les
mov
jo
outsb
in
push
sbb
mov
xor
stos
in
jl
data16
xchg
sub
push
xor
stos
das
dec
mov
sarb
sub
push
daa
xchg
sbb
fidivrs
popf
xor
mov
mov
pop
sbb
jle
mov
cli
adc
sub
ret
stos
xchg
mov
push
cmp
or
sbb
outsl
xor
lcall
in
pusha
lret
xlat
lea
adc
xchg
xor
lods
add
mov
cld
in
faddl
jg
sub
xorb
jno
cmp
sbbb
test
push
cld
das
rclb
iret
lods
jp
fsubs
fmuls
mov
lea
ss
pop
gs
or
jp
adc
out
inc
ja
aas
inc
test
lock
rclb
sbb
xor
ljmp
jle
addl
and
into
and
ret
push
shr
cmpsb
adc
into
jbe
sbb
fldl
stos
dec
popl
ja
lds
mov
fsts
xor
pop
and
cmp
rcr
jecxz
aam
mov
inc
clc
outsb
testb
sub
inc
mov
aas
jp
push
cmpsl
pop
adc
sub
sahf
pop
in
jg
inc
lods
push
std
outsl
in
cli
loopne
adc
popf
test
mov
pushf
xor
aaa
sbb
mov
dec
pop
mov
ret
mov
shlb
inc
loopne
cmp
shlb
sub
sub
ljmp
pop
add
sub
popf
cmp
mov
mov
addr16
mov
subl
inc
jae
clc
cmp
enter
and
mov
pop
jae
pop
sbb
push
sub
xor
insb
fldl
lahf
mov
fcmovb
lret
cmc
push
xchg
mov
mov
dec
mov
sbb
xor
pop
insl
scas
testl
sbb
or
pop
lahf
pop
xchg
test
pop
pop
inc
out
sub
fsubs
imul
fstps
mov
jmp
cmp
sbb
div
ret
stc
pop
or
sub
stos
push
push
mov
sbb
and
adc
ss
lods
inc
lods
or
outsb
fucom
imul
dec
cmp
lock
js
pop
aad
or
loope
pop
fdivrl
mov
pop
mov
jo
leave
leave
mov
mov
jns
cltd
push
inc
xchg
hlt
mov
dec
pusha
stos
das
call
xchg
cmc
xchg
xchg
sub
pop
jae
xchg
ja
stos
pop
add
mov
or
fidivrs
add
mov
imul
fidivrs
out
gs
pushl
push
xchg
aaa
mov
bound
mov
xchg
sub
xchg
outsb
cmp
mov
in
data16
and
sbb
les
jno
xchg
fsubrp
in
lods
outsb
int
inc
imul
data16
rorb
or
imul
and
jne
add
xor
enter
popf
insb
push
sbb
jge
pop
lds
clc
sub
ljmp
push
ds
pop
pop
and
lock
incb
and
xor
ret
ja
out
bound
flds
scas
cltd
cltd
cmp
sub
push
adc
mov
pop
mov
mov
sub
js
pop
test
cmp
push
cmpb
dec
or
inc
xor
int
mov
xor
dec
mov
scas
fidivrs
xor
adc
push
xor
cmp
mov
in
shll
or
jns
push
imul
cmp
xor
and
jge
mov
sbb
dec
xchg
cltd
sub
loope
inc
cs
adc
ds
mov
fsubl
push
xchg
sbb
or
push
adc
push
mov
and
mov
cli
inc
lea
movl
pop
imul
sub
push
push
stc
test
push
xor
shlb
mov
mov
shrl
out
sub
cli
pop
imul
push
clc
rol
or
cmpsl
out
icebp
ja
dec
fimuls
mov
xchg
push
xchg
test
push
sbb
pop
or
dec
push
lret
sub
mov
xor
daa
sbb
push
jle
cmp
cmp
scas
push
bound
xchg
test
sub
mov
lds
or
aad
int3
jo
int3
fdivrl
push
mov
sub
add
fdivl
aas
insb
xor
jnp
lcall
xor
pusha
rcrl
sub
push
std
adc
dec
in
mov
add
xchg
ret
cmp
adc
jne
aam
push
sti
in
mov
jb
loop
lahf
outsl
subl
les
mov
jg
push
push
or
cmpsb
dec
lret
ljmp
lds
xchg
cmp
mov
lock
fdivr
fisubrl
mov
loopne
pop
mov
rclw
cmp
adc
dec
lahf
je
jecxz
mov
enter
imul
adc
jl
xchg
test
xchg
lret
push
rolb
gs
lods
stos
daa
fwait
inc
mov
push
cmp
jle
or
fwait
dec
mov
jnp
pop
sbb
out
and
jno
push
sub
mov
xorl
js
cld
mov
outsl
jg
mov
mov
ja
mov
jle
shll
add
jae
into
adc
add
sti
cmpsb
pop
leave
xchg
outsl
cli
push
daa
or
and
adcl
lahf
mov
mov
test
sbb
fidivl
xlat
adc
cld
ss
notl
jbe
call
jge
repnz
pop
pop
pop
mov
cmp
pusha
shlb
stc
dec
sbb
xor
sbb
in
pushf
std
xor
xor
repz
pop
dec
cmp
fs
std
pusha
test
and
lods
mov
cmpsl
repz
xchg
cli
cmp
mov
inc
dec
repz
fdivl
push
or
call
aas
fisttps
ret
dec
popf
enter
xchg
xchg
xor
ljmp
add
lds
out
stos
add
inc
fwait
lds
and
test
lock
sahf
adc
cmc
test
les
stc
je
pop
aaa
scas
and
mov
adc
or
dec
dec
dec
push
mov
xor
subb
out
lea
jnp
mov
inc
and
std
jbe
je
xor
inc
fs
hlt
xchg
add
fisubrs
popa
pop
or
hlt
lods
pop
inc
mov
sub
jge
add
test
jl
sub
inc
sbb
xor
mov
outsl
divb
jbe
mov
mov
and
or
sub
popf
loop
insb
cmpsl
hlt
aaa
or
jb
jmp
inc
inc
scas
popa
xorl
js
adc
inc
fsubs
js
mov
mov
sub
sub
jae
repnz
cwtl
mov
aad
sbb
push
movsl
dec
test
sahf
lret
push
push
std
out
jns
fnsave
xor
ss
iret
cmpsl
adc
and
fwait
addl
addl
add
ja
ret
fxam
jo
or
shlb
push
imull
cwtl
xor
push
sbb
mov
lcall
or
jl
jg
loope
and
les
popa
aas
dec
jb
mov
push
push
inc
dec
test
mov
bound
mov
jo
or
xchg
shrb
mov
xchg
or
mov
inc
test
loop
inc
pop
aam
xor
sub
icebp
lea
mov
dec
test
test
addr16
mov
out
cmc
mov
dec
addr16
cmp
mov
dec
rcll
psubusw
std
sub
add
mov
mov
ret
jns
repz
lds
mov
cwtl
loopne
dec
outsb
pop
shlb
jno
int
xchg
push
loop
out
inc
test
jmp
jl
jbe
push
outsl
aaa
dec
leavew
hlt
loopne
mov
loope
data16
pop
aaa
jbe
out
or
inc
xor
repz
jecxz
pop
xchg
popa
std
pop
mov
rcrb
jmp
pop
call
imul
inc
mov
aas
jno
imul
mov
mov
inc
ljmp
hlt
mov
out
hlt
mov
mov
out
pop
pushf
lahf
aaa
cmp
and
inc
imul
push
cmpsb
sahf
pop
cmp
mov
test
out
dec
pop
out
incl
test
loopne
lret
in
test
push
xchg
insb
imul
dec
aas
add
dec
sub
cli
jmp
aaa
xlat
cmc
mov
sbb
xlat
iret
inc
jnp
push
add
add
mov
insb
adc
fmuls
push
rclb
loopne
inc
insb
mov
mov
pop
iret
lock
cltd
clc
sti
sbb
mov
xor
aam
into
jmp
pop
sbb
jne
or
xchg
out
bound
fdivl
dec
movsb
push
hlt
int3
cltd
sbb
ret
fisttpl
mov
dec
nop
add
mov
fcmovnb
ret
aaa
je
pop
xchg
stos
sub
ret
in
cmc
fdiv
movsb
pop
dec
push
sbbl
leave
push
mov
push
pop
push
std
mov
ja
jl
stos
jecxz
xchg
mov
push
jb
out
sbb
cmpsb
push
mov
dec
popa
push
xchg
jl
push
pusha
push
es
mov
js
cmp
xchg
and
imul
add
and
ljmp
dec
repz
push
enter
shl
outsl
and
dec
fwait
inc
lret
mov
push
fldl
fwait
int
jle
mov
jmp
lock
sub
fsubl
mov
push
mov
test
fs
mov
pop
mov
mov
and
out
arpl
in
inc
mov
ljmp
out
fistps
subb
pushf
xlat
add
xor
mov
pop
les
jae
push
dec
sub
push
in
xor
push
sarl
fimull
pop
pop
jle
jno
jbe
pop
cmp
cwtl
jp
adc
mov
jb
mov
pop
sub
scas
stc
xlat
sbb
pop
push
inc
test
pushf
inc
out
movsb
sub
push
jp
jg
in
cmpsl
scas
xchg
jge
mov
adc
cmpsl
mov
popa
outsl
jg
adc
dec
aas
les
push
sarl
lret
out
jne
mov
cmpb
andl
adc
mov
pop
int3
scas
pop
push
imul
xchg
cmp
add
pop
notb
jne
test
popf
stos
or
mov
ds
cmp
sub
pushf
jp
inc
push
icebp
aas
sub
add
cmovge
fldt
push
push
fiadds
inc
lods
jbe
fldt
mov
push
insl
mov
sub
sbbb
int3
inc
jns
cmpxchg
adc
daa
mov
mov
ds
aad
inc
mov
and
sti
lods
shll
shl
mov
jge
adc
rol
sub
mov
mov
push
jmp
and
aas
sbb
ss
or
and
ret
mov
ds
add
loopne
pop
loope
xchg
imul
jg,pn
flds
cmc
xor
adc
lds
xor
or
arpl
jmp
dec
and
js
js
andb
fdivrp
lods
push
jne
add
scas
out
xchg
xchg
rcll
cmpsb
jb
loopne
hlt
fwait
mov
adc
nop
xor
add
jmp
push
or
loop
rcrb
insb
and
hlt
xchg
lret
xchg
in
inc
loopne
sub
jne
xor
or
pop
xor
leave
sub
jecxz
sbb
lret
mov
xchg
in
sbb
sbb
divl
or
inc
cwtl
lock
ja
push
imul
push
cmpl
or
mov
imull
jg
sub
add
jmp
jns
daa
adc
push
dec
push
mov
add
rcl
xchg
shll
inc
mov
les
aam
adc
fildll
loope
inc
jnp
pop
test
xor
adc
push
test
bound
mov
xor
push
loop
pop
addr16
in
add
sbb
mov
out
std
aaa
sub
add
nop
cmpl
sub
test
or
dec
ljmp
jge
insb
aad
clc
or
xchg
adc
sbb
xchg
testl
dec
add
mul
push
outsb
push
pop
jns
mov
dec
jbe
jmp
adc
pop
jne
roll
mov
hlt
cmpsl
adc
jl
das
bound
fldl
mov
repz
sbb
clc
adc
mov
jnp
jno
jl
jne
sti
jo
sbb
test
mov
inc
push
add
loop
push
stos
and
imul
mov
push
sub
push
xor
pop
out
lds
dec
adc
mov
les
add
insl
and
adc
dec
hlt
mov
dec
fwait
cli
push
dec
out
lds
or
cmp
cmp
leave
ret
pop
ss
cmp
pop
xchg
imul
pop
mov
inc
out
jno
dec
imul
fwait
in
xor
push
int
pushf
pushf
push
lock
fistpl
and
iret
mov
sbb
and
jns
js
xor
lret
fsubr
addl
nop
xor
call
xchg
lds
popa
lea
aam
sbb
ficoms
xchg
mov
out
loop
jne
popa
mov
or
scas
lods
shld
jg
inc
adc
insl
pop
rol
and
pop
mov
sbb
push
decl
shrl
sti
ds
movsl
les
aam
ret
push
icebp
aam
push
dec
in
in
mov
fildl
rcr
test
inc
push
mov
dec
pop
jb
jo
xor
pop
out
sbb
inc
out
add
mov
push
ljmp
out
mov
aad
jo
in
dec
in
js
cs
sahf
jp
jne
jo
repnz
xchg
ljmp
mov
mov
fwait
dec
push
inc
loop
sbb
stc
mov
ret
xor
jbe
test
jne
lcall
fdivl
or
test
mov
scas
test
lcall
test
inc
in
daa
call
jl
push
dec
push
or
sbb
or
cltd
push
aaa
in
inc
test
hlt
cld
mov
aas
test
mov
xchg
pop
sti
dec
sarb
mov
das
mov
cmpsb
or
jmp
pop
and
xor
subb
and
mov
sbb
gs
jnp
bound
lret
loope
sbb
push
cmpsb
push
push
push
lcall
xlat
inc
mov
xor
inc
cltd
inc
in
jne
xlat
scas
jnp
dec
fiaddl
cmp
dec
sub
popa
adc
in
leave
pop
add
push
mov
dec
es
imul
loope
add
mov
inc
dec
repnz
addr16
jo
adc
test
fwait
sbb
popf
in
mov
in
mov
hlt
mov
loopne
loopne
and
into
sbb
push
repnz
jp
setns
xor
into
push
rcl
lea
ret
or
cli
enter
movsb
and
fsts
loope
inc
loopne
pop
dec
lcall
cli
aas
pop
es
sub
xor
or
pop
enter
outsb
test
lcall
out
push
cmp
add
jae
notl
adc
nop
lret
daa
or
sbbb
dec
ret
dec
lcall
add
or
mov
shl
leave
test
pop
jl
push
pmulhuw
cmpsl
dec
loope
push
scas
inc
pop
lods
mov
sbb
jns
xchg
insb
loope
inc
mov
mov
daa
fwait
not
inc
out
cmp
call
push
das
dec
cmp
ds
pop
jle
mov
cwtl
mov
mov
xchg
or
push
fadds
movsb
imul
adc
aas
and
add
mov
in
xchg
scas
rep
jo
push
add
pushf
sub
ss
popf
xchg
addl
pop
enter
hlt
les
repz
xchg
mov
pop
aaa
dec
jmp
repz
or
movsl
scas
add
clc
dec
imul
mov
cmpsb
and
rcrb
stc
cmp
lcall
stos
mov
ljmp
cmp
lret
add
cmp
out
inc
icebp
add
insl
shlb
fucom
popa
pusha
mov
sub
mov
fildl
stos
int3
sub
push
jecxz
xor
pop
out
jp
repz
enter
lret
sbb
xchg
insb
lds
pop
push
xchg
xchg
mov
add
xchg
loope
mov
mov
pop
sub
or
sti
adc
and
pop
rolb
cmp
jnp
mov
arpl
test
xchg
xor
iret
test
sub
scas
xchg
cmp
fnsave
outsl
push
pop
or
int
xor
jge
mov
fimuls
icebp
loope
pop
mov
pop
in
cs
cmp
or
mov
mov
add
xchg
jbe
push
insl
loope
loopne
sub
repnz
fimull
roll
test
addr16
imul
sbb
cmpsb
sbb
popf
xlat
subl
xor
xchg
push
daa
jecxz
out
dec
pop
int
rol
fdiv
ss
scas
data16
add
cmp
jb
sahf
test
in
shrb
mov
inc
pop
testb
rolb
cmp
xchg
dec
pop
outsl
nop
arpl
into
les
lods
lahf
fld
dec
adc
or
lods
cmpb
sti
and
stos
subl
jae
jns
dec
inc
dec
in
mov
xor
inc
vphaddubd
lahf
inc
inc
xchg
and
jmp
rcll
inc
jb
movsb
data16
xchg
sti
mov
cltd
jmp
cli
cmp
inc
fldt
or
push
ja
mov
les
pop
mov
adc
lods
pop
nop
sar
adc
and
or
sub
in
repz
dec
push
cmp
add
cmpsb
sbb
ror
les
inc
loope
int
sbb
loop
xor
mov
and
xchg
loope
or
pushf
mov
sub
jbe
inc
mov
popa
sarl
aam
mov
icebp
or
fmuls
xchg
sbb
lods
pop
enter
xchg
call
in
and
sub
fisttps
adc
sub
cmp
das
push
sarb
js,pt
sub
insl
push
movsb
push
enter
xlat
test
cmpl
mov
and
insl
bound
cmp
add
push
outsl
push
dec
cmpsb
rcll
daa
nop
jl
movsl
jg
jbe
pop
aad
push
xchg
sub
mov
dec
dec
loop
fwait
dec
jnp
xchg
jbe
push
jno
fistps
jae
jns
adcl
mov
insl
mov
and
xchg
shlb
inc
mov
mov
and
mov
xchg
push
mov
lret
out
push
dec
gs
and
lret
orl
xor
mov
divl
icebp
mov
fistpl
shll
xchg
jecxz
andb
stos
mov
and
xchg
cmp
or
mov
mov
add
pop
sub
inc
imul
jmp
push
imul
inc
repz
push
lcall
lods
sbb
adcl
cmp
sbbl
jmp
adc
jl
mov
adc
mov
fwait
adcl
mov
pop
dec
pushf
arpl
sub
adc
xchg
mov
mov
adc
xchg
or
iret
lahf
daa
inc
aaa
je
orb
imul
jmp
ja
shll
out
push
std
jp
sbb
mov
ss
into
push
mov
xor
cwtl
repz
imul
addl
fnstcw
mull
pop
mov
notb
add
scas
notb
out
pop
test
fistps
mov
test
fimull
push
in
inc
in
cltd
cld
pop
push
jge
lcall
call
into
xchg
out
daa
sti
iret
gs
js,pn
mov
ficompl
sahf
mov
sbb
add
xchg
jle
aaa
dec
sub
sti
aaa
clc
cmp
testl
mov
cmp
cmp
inc
mov
gs
pop
xchg
push
inc
sub
sbb
test
popa
jl
es
ss
push
mov
out
sarl
fwait
out
adc
insb
inc
push
pop
mull
jg
adc
les
subb
nop
inc
shll
mov
mov
or
or
mov
pop
bound
andl
xor
and
enter
mov
and
sbb
cld
in
fdivrs
push
mov
cmpsb
or
mov
js
loop
out
cwtl
sarb
idiv
out
mov
jmp
and
and
or
mov
pop
mov
mov
addl
into
jo
lods
in
pop
sbb
xor
inc
inc
or
fs
mov
pop
cld
jmp
sti
leave
mov
lods
add
dec
xchg
xchg
orb
nop
insl
fldenv
inc
dec
int
mov
mov
jb
dec
push
cmp
cmc
testl
jl
mov
movsl
hlt
imul
push
sbb
insl
pop
dec
sbb
popa
mov
push
pop
out
incb
subl
push
jge
xor
testl
xor
je
jp
cmp
stc
add
outsb
pop
xchg
pop
push
cwtl
stos
cpuid
fimull
fiaddl
jne
dec
adc
sbb
cmpsb
add
sub
aaa
and
test
add
lods
xchg
mov
data16
jae
pop
sbb
push
movsb
sbb
jg
cli
sub
push
hlt
pop
ljmp
fdivrl
mov
data16
xchg
lock
insl
shlb
cmp
popa
xchg
xor
inc
lahf
and
cwtl
in
xchg
lods
mov
and
sub
add
lea
or
sub
xor
cmp
lods
repz
sub
scas
mov
fsubr
dec
inc
dec
adc
mov
outsb
sub
cwtl
jo
pusha
leave
push
mov
adc
pushl
pop
cltd
add
pop
add
arpl
pop
pop
push
mov
push
lods
inc
imul
test
or
fsubl
jecxz
cmp
out
movsl
jmp
ljmp
sub
xchg
mov
adcb
repnz
hlt
pushl
out
enter
arpl
add
jl
push
das
movsl
sub
icebp
rcrl
jno
mov
push
movsb
jmp
sub
js
xor
lahf
pop
ret
cmp
movsl
int3
pushf
icebp
enter
dec
push
testl
in
shrl
pop
push
jp
imul
sub
lods
je
mov
test
stos
sub
and
xor
out
packsswb
dec
pushf
push
push
push
push
int
mulb
fiaddl
xchg
jbe
pop
jmp
clc
int3
fucomip
inc
xor
adc
sub
es
js
fbld
shrl
pop
jns
lock
mov
inc
xor
lds
in
insl
mov
cmp
pop
rclb
pop
pop
adc
ja
pushf
xchg
mov
dec
xchg
test
xor
test
cs
or
pop
sbb
lret
les
mov
fs
jecxz
out
imul
shlb
mov
fsubrl
and
dec
mov
aas
pusha
aad
aad
aam
push
adc
fs
fisttpll
sbb
inc
cmp
mov
int
sbb
lcall
lds
sbb
lods
dec
xor
jbe
jp
push
enter
lret
insb
dec
xorb
fwait
xchg
outsl
jnp
and
stos
loope
sbb
ja
adc
pop
dec
mov
mov
mov
popf
insb
sahf
cmc
add
pusha
jbe
or
loopne
mov
and
movsl
loopne
rcl
inc
mov
mov
sar
inc
in
mov
xchg
add
xchg
aas
jp
nop
mov
push
arpl
jnp
inc
es
aad
xchg
push
and
mov
and
mov
inc
mov
sub
dec
adc
jb
lock
ficoml
inc
pop
popa
cli
pushf
xor
mov
ds
aam
fstpt
mov
mov
movsl
lret
or
xor
or
xchg
mov
cmp
testl
and
and
andb
mov
leave
xor
pushf
aas
dec
dec
sarb
lahf
push
divb
outsb
lods
dec
inc
mov
jb
pop
mov
loopne
movsl
mov
loopne
clc
lret
xor
iret
push
cli
sub
lds
insl
in
cmpsl
mov
jno
stc
and
shlb
int
scas
mov
fistpll
cld
mov
xor
mov
aad
data16
or
push
cmc
orb
leave
xchg
xlat
adc
mov
fs
jb
es
xor
push
xchg
bound
xchg
jb
fnsave
mov
push
jns
pop
lea
shrb
insl
cld
cmp
sbb
das
test
xchg
stc
repnz
add
imul
inc
fimull
push
gs
sbb
jle
sbb
imul
gs
stos
icebp
sbb
neg
popa
push
in
jo
sbb
movsb
loope
jno
and
stos
or
adc
push
push
pushf
sub
pop
xchg
sbb
addr16
mov
stc
fcmove
jp
mov
xor
or
ret
ljmp
mov
dec
mov
test
rcrl
addl
adc
cmp
push
cli
xlat
movsb
mov
add
cmp
test
nop
sbb
into
adc
xchg
arpl
int3
adc
dec
fwait
inc
sub
push
dec
xor
pop
pop
aaa
cmp
cli
cwtl
mov
mov
ds
xchg
push
push
outsb
push
mov
je
jl
fs
lret
xlat
jae
sbb
cli
es
xor
scas
sbb
daa
jne
adc
jae
inc
xchg
xchg
xor
push
jb
insl
adc
adc
push
mov
push
add
rcrl
sti
inc
and
pop
cmp
and
mov
sbb
mov
jnp
mov
or
mov
lahf
cmp
loopne
pop
jmp
fnstsw
mov
xchg
mov
jmp
aad
mov
mov
scas
jb
inc
ss
inc
xchg
pop
mov
push
aam
inc
mov
mov
ret
cmp
jmp
fnstcw
jb
mov
dec
or
lahf
adc
ljmp
insb
repz
addr16
mov
jne
xchg
aam
mov
nop
pop
mov
test
xor
aas
popa
inc
es
lret
pop
rcr
dec
out
xchg
add
cmc
stos
xchg
jnp
out
push
xchg
decl
dec
js
dec
pop
imul
out
cmp
aad
aaa
inc
int3
dec
cmc
mov
sbb
push
js
sbb
cmp
fsubs
aad
or
sbb
xchg
imul
bound
in
jp
cs
or
cmpb
rcr
mov
nop
je
sub
mov
aaa
xchg
sbb
pop
das
jmp
psubsw
shrl
cmc
in
arpl
adc
inc
dec
xor
nop
or
mov
mov
xor
or
jecxz
lods
xor
daa
les
mov
jns
fiaddl
jmp
jecxz
jmp
aaa
xchg
push
cmpsl
imul
cmp
fs
push
hlt
dec
mov
fnstcw
pusha
cltd
xchg
or
test
pop
mov
xchg
cs
mov
sbb
pop
cld
or
andl
stc
lods
pop
pop
mov
cmp
push
cmp
dec
test
xlat
mov
dec
push
xchg
pop
mov
sti
xor
mov
adc
les
mov
add
push
cmp
nop
sub
jae
mov
mov
lahf
mov
xor
push
ljmp
adc
sbbb
jp
xchg
inc
bound
pop
sbb
mov
push
xchg
cmpsl
ret
jb
sbb
sti
or
cmp
shl
pop
sub
xchg
enter
test
mov
in
orl
lds
adc
lods
and
dec
and
xor
and
inc
in
bound
sub
jecxz
jmp
imul
sub
add
ret
sarl
cmp
leave
or
mov
inc
fwait
imul
enter
xchg
addr16
iret
mov
xor
rclb
mov
xlat
or
fdivrs
icebp
add
lahf
mov
ljmp
mov
and
inc
jp
dec
pop
mov
lds
ror
addl
leave
cmc
mov
dec
add
push
fisttpll
insb
js
es
xchg
mov
lods
mov
push
add
jecxz
pop
jb
mov
pushf
imul
out
pop
cmc
xlat
sahf
dec
lahf
and
lret
push
dec
lcall
push
rcrl
mov
mov
inc
lret
aam
sbb
fs
in
jp
ror
cmp
push
mov
sbb
out
jns
dec
xchg
idivb
sahf
cmp
inc
movsb
cmp
or
test
adc
jp
scas
add
cmp
fistpl
loop
cli
aas
fst
xchg
loope
mov
enter
js
sbb
fwait
sbb
jecxz
and
mov
inc
mov
jmp
sub
cmpsl
lods
das
or
ret
mov
lret
cld
xchg
mov
add
push
inc
mov
adc
cmpsl
jge
aaa
mov
les
outsl
mov
mov
dec
ss
scas
das
in
mov
cmpsb
call
out
fsts
jmp
and
out
adc
push
lea
test
out
mov
aaa
jbe
repnz
call
xor
subl
fcoml
cmp
push
and
mov
test
scas
negb
adc
mov
dec
in
movsl
inc
xor
inc
call
popa
mov
sbb
xchg
cli
insl
dec
jmp
adc
dec
aam
fwait
test
mov
test
xor
or
xchg
sbb
bound
mov
out
insl
push
andl
out
pop
push
in
xchg
gs
les
pop
dec
mov
pop
mov
out
fidivs
pop
outsb
jmp
jmp
mov
iret
sbbl
rclb
cwtl
xor
or
sub
aam
icebp
mov
rclb
mov
or
cmp
data16
jno
adc
cmp
data16
dec
in
jl
push
mov
sbb
mov
xchg
pop
ret
aaa
nop
mov
sti
pop
out
sub
mov
jle
ljmp
xchg
pop
repz
mov
mov
jle
pop
shll
sub
sub
adc
mov
pop
outsl
pop
mov
mov
dec
insb
inc
loope
inc
std
mov
add
lahf
daa
mov
in
ja
sbb
sbb
add
or
mov
and
mov
dec
mov
jmp
push
sarb
into
dec
push
inc
jb
sbb
sub
or
dec
sbb
inc
ss
inc
mov
mov
cwtl
sub
shlb
into
dec
adc
inc
push
clc
push
cltd
push
jl
aas
ret
mov
cltd
out
outsl
shll
lret
mov
bound
cmp
xor
out
dec
je
add
hlt
sub
inc
cmp
jo
mov
jge
sbb
dec
cwtl
push
adc
les
and
push
adc
or
fucom
jno
and
es
xorb
gs
xchg
mov
adc
std
or
sub
pop
mov
mov
pop
cmp
add
dec
push
add
push
ret
xchg
adc
fs
scas
sbb
faddp
rol
cmpsl
orl
and
jecxz
jmp
mov
insb
test
sahf
loope
lock
push
cmp
and
int3
outsb
imul
cmp
cmp
or
push
and
cmp
mov
insb
cltd
hlt
enter
mov
xor
arpl
push
xor
pop
mov
adc
nop
add
sbb
popf
cmp
dec
test
jbe
mov
jge
jb
scas
mov
pmaddwd
xchg
cli
adc
xor
xlat
push
mov
add
sbb
repz
cmp
cld
dec
and
mov
out
rolb
add
jne
and
nop
lahf
push
mov
ret
mov
push
js
lock
and
addr16
xor
fwait
jne
dec
jae
jnp
fisttps
outsl
sbb
pop
aam
adc
jmp
loope
dec
add
jle
sti
rcrb
inc
push
or
xlat
sarl
cmp
fcomp
fwait
lahf
inc
fstpl
call
jecxz
pop
cmp
js
adc
mov
cmp
mov
std
mov
pushf
mov
mov
mov
inc
shl
pop
mov
xchg
loopne
pop
jo
jne
and
adc
pushl
out
sub
addr16
int3
pop
push
sub
pop
dec
jmp
loopne
cmpsl
cmpsb
mov
push
add
inc
cmp
cmpsb
adc
mov
int3
pushf
cltd
pop
and
rcll
inc
movsb
hlt
jo
mov
in
hlt
push
push
push
in
sbb
iret
lods
test
lea
mov
mov
imul
or
iret
jno
dec
pop
mov
xchg
add
jns
lret
out
aam
negb
mov
mov
inc
mov
arpl
sub
movsb
xor
cmpsl
loopne
repz
addr16
sub
aas
or
mov
mov
loope
add
jae
loop
in
les
cmc
adc
xchg
pop
inc
mov
int
cmpsl
xor
pop
mov
lret
push
cwtl
add
imul
pushf
pusha
stos
call
mov
std
ljmp
lcall
dec
mov
xchg
mov
rorl
xchg
shll
lock
pop
xchg
mov
lret
push
sahf
movsl
xchg
or
mov
mov
fwait
pop
xchg
ja
ds
xchg
pop
adc
fwait
xchg
mov
out
adc
popa
divl
cmp
hlt
mov
les
and
dec
sbb
dec
rorl
iret
inc
dec
pop
stos
fisubrs
unpckhps
int
ljmp
adc
push
push
or
pushf
mov
mov
stos
pop
sub
in
ljmp
inc
push
imul
aas
stos
pop
push
adc
inc
in
loope
xchg
and
push
test
push
mov
sbb
xor
mov
lock
and
pop
adc
sarb
sbb
arpl
das
int3
xchg
add
push
in
jae
jge
mov
aad
push
sbb
jnp
inc
ret
mov
repz
jb
addb
cltd
call
mov
push
icebp
in
dec
insb
xchg
jo
lock
sub
test
outsb
jg
xlat
xchg
cmp
adc
aad
mov
jecxz
rcll
in
clc
mov
xchg
loope
adc
rcrl
lods
ret
pop
insb
ss
and
mov
and
mov
jns
fistl
imul
in
mov
xor
aas
out
into
jno
pop
dec
mov
imul
fwait
add
pop
movsb
jl
mov
sahf
push
pusha
gs
es
fcom
cwtl
cmp
push
mov
xchg
enter
in
adc
push
xchg
movsb
loopne
loop
push
inc
dec
xchg
lcall
lods
mov
scas
outsb
push
subb
cmp
lods
rcrl
jb
jecxz
mov
out
push
test
popf
adc
icebp
xchg
cltd
add
mov
std
fisubs
jmp
add
sub
xor
push
xchg
iret
mov
cmp
sbb
test
cli
pop
popf
sti
js
cs
inc
outsb
xchg
arpl
mov
pop
insb
lea
mov
hlt
cmp
inc
pop
push
cmpsl
pop
lret
sbb
lret
dec
sbb
int3
imul
add
xchg
in
dec
or
push
xor
adc
adc
addb
pop
addr16
push
and
shlb
loop
insl
cltd
mov
pop
test
cmp
xchg
out
sub
mov
push
add
sbb
lock
pop
jae,pn
mov
jp
leave
adc
or
mov
push
xor
jb
outsl
xor
cmc
arpl
add
aad
xlat
pop
pop
mov
stos
adc
jecxz
dec
lret
imul
jle
aas
push
sbb
cmpsb
ljmp
aad
sbb
es
leave
out
rcrb
sub
mov
mov
rorb
lods
jle
test
mov
pusha
xlat
pop
pop
cmp
push
ja
nop
out
jl
insl
jg
clc
mov
fidivrs
clc
sti
stc
sub
adc
loopne
jno
insb
cmp
add
mov
mov
insl
push
xchg
push
popf
inc
jge
in
pop
mov
dec
test
daa
test
mov
and
add
cli
out
mulb
lock
add
xor
aaa
sub
jne
adc
xchg
dec
and
test
mov
cmp
call
xchg
xchg
clc
sub
popf
sbb
into
rclb
adc
and
arpl
mov
clc
mov
test
add
in
xor
pop
enter
rclb
mov
call
daa
and
pop
push
xchg
icebp
dec
into
push
and
clc
pop
mov
and
dec
sub
loop
sahf
repnz
cmpsl
mov
je
add
shrl
push
ljmp
fldenv
in
adc
dec
sub
stos
cmpsl
ja
xor
bound
jne
mov
insl
mov
and
sbb
push
jp
rol
mov
cmpsl
push
mov
xor
dec
arpl
jecxz
fwait
cmp
cmc
adc
stos
stos
pop
sti
ret
push
cmp
mov
int3
std
pop
push
cmp
jge
add
xlat
scas
xorl
aad
js
popf
mov
daa
ret
sub
push
ds
gs
scas
clc
mov
mov
push
adc
xorl
outsl
out
inc
and
inc
sti
and
jne
jge
mov
jns
hlt
out
sub
rcrl
es
pop
jl
dec
aaa
push
mov
or
dec
pushf
mov
enter
mov
mov
es
inc
in
ficoms
cmp
push
sbb
push
xchg
mov
mov
inc
mov
cmc
inc
sub
and
pusha
dec
dec
mov
pop
ds
pop
mov
std
inc
mov
mov
jnp
arpl
mov
mov
pop
in
inc
ret
add
loopne
add
aad
shll
cmp
pop
xchg
shrl
xchg
in
push
mov
mov
out
and
dec
xchg
pusha
and
daa
push
andb
pushf
xor
lahf
add
push
loope
dec
shlb
inc
das
or
pop
push
or
inc
inc
mov
push
adc
or
mov
rol
push
test
and
jmp
imul
or
xlat
mov
sbb
adc
mov
in
ficoml
mov
mov
mov
and
cmp
les
loopne
pop
scas
add
sbb
fldcw
mov
test
push
mov
cmpsl
xor
cmp
sbb
cmp
enter
lock
or
mov
addr16
out
pop
js
mov
sbbl
push
scas
jmp
insl
aam
gs
xchg
push
outsb
jg
push
and
bound
push
loopne
fcmovnb
movsb
dec
ljmp
mov
dec
xchg
lret
shl
fdivrl
std
into
mov
in
or
add
rcll
jle
add
jl
test
push
push
and
xchg
mov
pop
adc
and
jecxz
xor
cmpsl
jbe
pop
xchg
push
or
rorl
push
dec
stos
mov
cmpsb
icebp
js
fs
out
cli
jo
enter
push
mov
lods
fdivl
or
xchg
subl
lret
sub
mov
ret
pop
cltd
rorl
out
pop
fiaddl
mov
rcrl
pop
push
cmp
adc
push
push
pop
mov
mov
inc
into
sarb
inc
out
nop
add
mov
insl
imul
and
sub
repz
dec
movsl
xor
ds
in
cmp
mov
je
mov
cmc
fcmovne
icebp
in
inc
cmpsb
int
outsb
pushf
das
pop
dec
fsubl
push
fwait
rcll
addr16
inc
inc
test
adc
mov
icebp
cltd
sbb
lods
imul
pop
xlat
xchg
jns
mov
dec
fadds
push
xchg
or
nop
xchg
fisubrs
add
aam
loopne
divb
arpl
xchg
mov
dec
shlb
fcomip
fistpl
and
push
lret
lock
jp
cli
mov
cmp
inc
and
movsb
stos
orb
mov
ficompl
iret
leave
fnstcw
sbb
js
jnp
pop
loopne
das
jbe
test
pusha
pop
jne
cmpsl
les
mov
repnz
dec
or
pop
fs
xor
xlat
std
daa
in
dec
push
rolb
dec
inc
xorb
fstps
popl
push
push
shr
scas
inc
jle
pop
repnz
pop
bound
bound
cmp
arpl
mov
test
sub
aaa
pop
adc
sahf
mov
std
adc
shr
aad
stos
ror
sub
mov
push
cmp
jnp
cwtl
shrb
push
jmp
ret
pushf
add
mov
pop
fldt
les
push
pop
cmp
add
fs
sub
popa
sub
sub
pushf
mov
jle
fisubs
sub
mov
dec
mov
and
and
roll
rcrb
mov
cmp
add
inc
and
cmp
xchg
add
and
ljmp
insl
jl
dec
mov
mov
stos
rcrl
add
mov
ljmp
mov
emms
sahf
cmpsb
xlat
fstl
inc
mov
sub
dec
into
inc
cmp
pop
inc
mov
mov
mov
inc
mov
cmpl
dec
jecxz
shll
mov
into
jo
dec
int3
adc
mov
inc
mov
stos
scas
sqrtps
out
clc
pop
jle
aam
insl
dec
repnz
test
and
sbb
lret
push
push
and
leave
ret
inc
idivl
pop
jnp
jmp
movsb
lock
xor
imul
pop
pop
inc
pop
in
inc
mov
pop
ret
add
fsubrl
ljmp
dec
push
sahf
fs
and
push
jae
push
aas
insb
test
popa
cld
mov
popf
stos
sub
aaa
shrb
stos
int
out
inc
mov
xchg
cmc
stos
pusha
jb
iret
xorl
imul
add
inc
mov
inc
std
loop
dec
in
shrl
loop
fs
fucomp
aas
out
loope
out
cmp
pushf
push
into
repnz
je
add
sbb
pop
cmp
cli
insb
mov
in
sbb
ret
mov
and
adc
jno
push
xor
rolb
sbb
ja
inc
mov
cs
mov
aas
push
xor
or
out
push
mov
test
repz
fwait
loopne
lcall
aad
paddq
ja
enter
sbb
cmp
mov
inc
loop
inc
ret
stos
add
mov
adc
lea
sub
idiv
insb
mov
mov
mov
xchg
sbb
mov
arpl
pop
xor
and
pop
test
xchg
adc
out
movl
lahf
lcall
jecxz
xor
imul
xchg
mov
push
ss
mov
xor
xchg
adc
or
and
mov
mov
ret
xchg
inc
sub
add
mov
cmp
pop
add
mov
mov
push
or
aaa
jnp
dec
nop
aaa
cld
add
or
push
xorb
cmp
or
fcoml
cmp
adc
ret
or
mov
test
sbb
iret
jae
push
dec
jb
gs
rcrl
inc
icebp
mov
dec
std
cmp
stos
aad
jne
cmp
scas
sbb
mov
pop
addr16
jle
rcll
out
pop
imul
shlb
pop
mov
push
pop
mov
push
outsl
loope
repz
cmp
pop
mov
fnstenv
shll
sub
xor
ret
pusha
xor
pop
sbb
sbb
clc
mov
mov
add
out
sbb
cmp
fwait
add
add
xchg
xlat
les
sbbl
xchg
ret
xchg
sti
jns
jo
jbe
jecxz
daa
stos
xchg
rclb
inc
insb
mov
xor
jl
mov
aas
fdivrp
mov
mov
push
xor
mov
inc
stos
bound
cs
std
push
aas
rcrl
adc
inc
fistpll
cmpsb
sysenter
jecxz
cmc
mov
loopne
mov
mov
faddl
sub
xchg
es
jno
and
mov
sub
adc
or
cmp
cwtl
repz
mov
add
pop
lahf
outsl
inc
jmp
movq
lock
xor
clc
aad
cld
adc
push
lea
loope
and
rcrb
add
sbb
inc
xor
mov
dec
fcoml
lea
jae
mov
loop
push
adc
jnp
or
fstl
cmc
lret
das
dec
mov
roll
lea
jno
lea
ljmp
cmc
mov
fiadds
xlat
bound
mov
leave
imul
pop
mov
mov
insb
pop
mov
cwtl
inc
adc
mov
in
mov
push
ljmp
ss
clc
jo
stos
pop
xchg
adc
into
flds
pusha
pcmpeqd
xchg
movsb
lods
stc
mov
idiv
jp
and
inc
mov
inc
mov
mov
dec
fisttpl
pop
fs
pop
and
mov
cmp
push
rcrl
call
pop
nopl
dec
fnstcw
test
in
mov
push
mov
int
outsb
in
std
enter
lods
fisttpl
repz
pop
pop
in
inc
stc
aas
lods
mov
xor
xor
jo
mov
pushf
lods
iret
jmp
js
in
arpl
adcb
subb
mov
aam
cld
add
in
jle
in
xchg
jecxz
popa
mov
jl
sbb
fwait
rorb
jb
out
sub
push
test
mov
mov
les
push
and
mov
xchg
loop
out
sbb
cmp
sarl
xchg
cli
add
cmpsb
pop
jp
bound
ficomps
add
fwait
xchg
pop
dec
sarl
push
mov
jp
lret
xchg
cltd
rcrl
ljmp
lods
sbb
mov
sub
jns
mov
pop
leave
adc
jns
ds
pop
xor
xchg
dec
and
movsl
xchg
adc
daa
loop
xchg
imul
pop
hlt
jo
dec
xlat
test
jle
ljmp
cs
gs
mov
aaa
outsb
mov
out
push
in
loope
stc
bound
xchg
enter
jnp
leave
mov
enter
insb
and
repnz
and
sub
lret
inc
sbb
fcompl
jmp
loopne
add
dec
nop
or
hlt
insl
or
sbb
push
test
mov
or
les
les
dec
loope
ja
mov
aas
call
mov
pop
scas
popf
inc
cmp
cld
and
adc
cmp
and
cmp
sbb
loop
and
mov
adc
negb
mov
jp
mov
ret
sbb
leave
int
lds
mov
mov
insb
push
fs
paddsw
mov
popa
push
sub
loopne
inc
negb
pop
mov
mov
sub
fwait
and
and
sub
xlat
imul
xchg
stos
jno
sub
out
fsts
push
dec
aas
mov
aad
or
and
cmc
dec
sbbb
sti
mov
cmpsb
adc
mov
add
pop
and
pop
xorl
push
shrl
mov
ss
xchg
sub
addl
mov
xor
aaa
mov
inc
es
adc
xor
dec
adc
sbb
mov
push
xchg
icebp
movsb
add
test
xchg
cmp
mov
xchg
pop
lcall
sbb
call
repz
jb
pop
jns
outsl
push
sbb
xor
adc
pop
mov
jle
mov
mov
ffreep
pop
fcmovb
in
adc
adc
setne
insb
inc
inc
fsub
mov
cmpsl
iret
popa
xchg
inc
dec
ret
movsb
jne
inc
inc
xor
adc
mov
cmp
sub
xor
pop
mov
xchg
mov
add
or
faddl
out
aad
fisubs
lds
dec
imul
mov
hlt
gs
push
test
imul
inc
or
outsl
cmp
pop
mov
nop
xor
das
out
dec
mov
fstl
jge
and
jmp
jmp
inc
cmp
push
movsl
fisttpll
xchg
ljmp
orb
fstpl
push
xor
out
mov
xor
jge
pusha
clc
sbb
jmp
dec
lea
test
nop
and
cmp
lahf
js
cmp
cmc
jg
lods
add
jne
sbb
addr16
repz
into
testl
imul
cmpsl
testb
inc
ret
es
cltd
into
ds
or
push
fldenv
jge
inc
mov
lret
mov
dec
xchg
lea
andl
in
inc
mov
sti
roll
pop
sub
push
shll
cmp
in
aas
jno
xchg
mov
into
add
mov
lods
sbb
stos
lcall
mov
xchg
and
jnp
push
sub
ds
gs
test
cmp
mov
push
adc
pop
ljmp
lret
je
jmp
out
fistps
fldt
repnz
sbb
jmp
jg
cmp
mov
lods
stos
xor
xor
mov
adc
repnz
ljmp
movsb
push
add
mov
push
fwait
enter
out
out
les
mov
dec
mov
mov
ret
enter
pop
jnp
mov
lcall
inc
xchg
out
rclb
xchg
add
cwtl
movsb
xchg
xchg
pop
mov
loop
pop
repz
dec
test
sub
fnstsw
mov
into
pop
add
xchg
lods
not
popa
gs
enter
xchg
outsl
shr
sbb
ss
cmp
cmp
jbe
test
repz
cmp
lahf
nop
mov
shlb
fwait
hlt
push
outsb
mov
inc
and
ds
pop
sub
in
sbb
dec
xor
call
sbb
inc
cmpsb
inc
mov
xchg
xchg
lret
mov
push
or
movsb
add
inc
orb
xor
daa
xchg
inc
cld
xor
and
xor
or
popa
mov
icebp
stc
mov
popf
adc
out
xchg
dec
cmp
sub
lcall
or
rorb
fsub
test
sti
xchg
push
adc
dec
mov
pop
dec
add
jae
mov
cmp
icebp
and
das
leave
sbbl
loop
popa
inc
mov
nop
gs
mov
ffreep
mov
pushf
std
fisttps
pop
mov
xorb
jecxz
xchg
jnp
sbb
loopne
jb
mov
pushf
inc
std
inc
call
mov
push
sbb
dec
out
daa
adc
daa
pushf
pushf
adc
popl
rclb
cmp
repz
repnz
adc
pop
dec
adc
fwait
and
in
adcb
adc
xor
xchg
mov
add
mov
push
inc
push
imul
lret
ds
incb
pop
xlat
sarl
mov
xchg
mov
sub
xchg
pop
imul
loopne
cltd
leave
aad
inc
fcomps
hlt
pushf
xor
inc
insb
cmp
push
cld
stos
fidivrl
xlat
sti
cmpsl
pop
xchg
xor
popa
ret
cmp
nop
jne
sbb
mov
fstpl
jo
dec
stos
outsl
lods
ret
xlat
out
push
push
stc
pop
push
clc
fstl
lret
xchg
xor
fwait
lock
cmp
es
fldl
fwait
mov
roll
inc
clc
dec
imul
mov
iret
xchg
ja
sub
mov
mov
cmpsb
movb
mov
imul
mov
push
ljmp
cld
mov
xor
rorb
enter
and
inc
jne
bswap
notb
mov
into
test
out
and
test
lds
mov
xchg
shrl
pop
and
fists
add
outsl
dec
imul
mov
and
cmpsl
ja
les
stos
lock
test
stos
dec
sub
adc
ja
js
pusha
mov
and
cmpsl
fcoml
add
xlat
roll
jo
dec
jmp
cltd
lret
dec
mov
jl
gs
mov
out
sbb
leave
clc
xchg
jecxz
push
dec
sbb
mov
gs
loope
mov
jns
add
dec
push
mov
jns
outsl
daa
mov
insl
push
pop
imull
imul
loop
adc
cltd
pop
or
inc
pop
pop
cmp
pop
push
cwtl
lods
and
scas
jnp
xchg
sbb
ljmp
xchg
es
and
push
cmp
rol
test
and
add
inc
sub
mov
popa
mov
shl
jo
cwtl
in
pop
pop
mov
arpl
jp
outsb
push
sub
cmc
sti
xchg
fiadds
xor
clc
hlt
mov
cli
lcall
js
cmp
je
addr16
pop
aaa
pop
je
push
sti
dec
pop
aam
subl
inc
fcoms
push
sbb
fistpl
nop
mov
stos
sbb
cmpsb
jbe
frstor
rcr
rcrl
clc
dec
test
leave
frstor
pop
and
out
sub
fidivs
pop
subl
lods
inc
mov
lcall
sbb
pop
std
adcb
lods
call
andl
xchg
dec
xchg
jne
shr
and
jp
push
adcb
out
push
ret
and
lcall
es
xor
sub
add
jb
inc
xor
in
and
xor
adc
shlb
sbb
inc
jmp
cmp
xchg
fbstp
pop
rclb
mov
or
je
fldt
sub
repnz
test
jne
and
ror
insl
test
vpsllq
pushl
jbe
mov
sbb
sbb
shlb
and
je
push
decl
mov
and
rcll
sbb
movsl
inc
cli
hlt
jp
test
cmp
cld
fsts
shrb
jmp
adc
sbbb
xchg
add
enter
push
into
in
sahf
stc
subb
into
lds
dec
pop
dec
fnstsw
mov
sbb
sub
xchg
fcmovnb
push
mov
mov
orl
pushf
data16
cmp
test
push
jbe
les
pop
fists
push
movntq
lea
or
push
xchg
cmpb
loope
and
inc
in
xchg
cmp
xchg
fwait
sbb
int
inc
xor
lds
addr16
insb
call
imul
adcb
pop
add
xchg
sahf
push
sbb
cs
xchg
mov
cmpsl
movsb
xchg
ret
jg
jnp
mov
inc
xchg
mov
and
es
sub
popl
fs
push
test
outsb
loopne
push
xchg
and
icebp
shrl
lcall
out
sbb
aaa
push
adc
inc
test
jae
int3
test
in
sub
mov
xchg
fcompl
dec
inc
gs
mov
mov
repz
pop
js
mov
in
imul
repnz
adc
inc
pop
pop
in
push
mov
outsb
jecxz
push
inc
loopne
je
imul
rcll
stos
pop
dec
jl
sub
jae
stos
cmp
cmp
or
xchg
sbbl
jno
dec
pop
cmp
movsb
ljmp
ds
and
movsl
add
andb
stos
mov
mov
sahf
jo
adc
push
popf
push
jnp
jge
dec
ret
repz
push
dec
pop
sub
je
movsb
adc
cmp
xchg
iret
cmp
ret
in
insb
xor
aaa
aas
cmpsl
sti
sbb
or
xlat
lahf
push
jp
das
lahf
stos
adc
cs
aad
ss
fimull
roll
and
xchg
sbb
in
mov
sbb
dec
jbe
mov
incl
mov
and
stos
inc
scas
cltd
adc
mov
cld
adcb
xor
jmp
mov
jmp
scas
mov
push
call
push
sbb
xchg
or
jecxz
inc
push
out
mov
cmp
loopne
out
sbb
mov
flds
mov
dec
jle
cld
icebp
pusha
dec
sub
push
jmp
jb
cltd
ljmp
nop
cwtl
dec
or
and
sub
icebp
and
jb
mov
data16
jmp
push
adc
scas
fsts
push
dec
ss
adc
out
xchg
es
hlt
mov
xor
push
mov
sub
inc
and
pop
and
mov
iret
pop
jne
lahf
dec
jno
jbe
pusha
xchg
dec
test
aam
sarb
cmp
xchg
add
or
lret
call
adc
gs
lret
inc
cmp
and
mov
rcrl
loop
jns
pop
das
movsb
ds
jmp
sti
and
vpand
jg
xor
push
addr16
push
xchg
lods
lea
repz
cltd
fld
push
cmp
lret
ret
shrl
jno
add
aam
rcr
mov
cltd
gs
movsb
out
push
pop
out
mov
pop
mov
push
fnstsw
cmp
out
sbb
sbb
hlt
add
imul
jge
scas
int
ljmp
ret
pop
xor
inc
inc
add
pop
push
sub
mov
das
jnp
clc
mov
aad
push
add
out
cli
mov
or
ret
jmp
push
xor
inc
jle
mov
mov
mov
ljmp
xor
add
mov
xor
mov
imul
dec
sub
dec
mov
ds
lahf
test
ret
mov
sahf
xchg
lea
or
sub
xlat
or
adc
sti
out
lahf
rcrb
and
aam
cmpsl
orb
mov
pop
pusha
inc
fnstsw
hlt
and
nop
xor
mov
sub
shll
les
int3
sub
jnp
pop
cltd
pop
lock
jge
out
lahf
cmpsb
push
add
mov
dec
mov
push
shlb
pop
cmp
js
fisubs
roll
icebp
jae
or
mov
mov
lret
fcom
sub
imulb
iret
cwtl
in
add
in
rorl
cld
into
nop
loopne
nop
mov
fisttpll
pusha
fidivrs
dec
dec
ret
sub
mov
out
bound
icebp
inc
xor
aas
push
sbb
fldt
adc
aad
clc
pop
aad
mov
mov
insb
gs
movsb
jno
loope
int3
stc
mov
test
scas
call
push
mov
js
mov
push
ret
mov
add
in
sbb
or
iret
imul
or
mov
mov
mulb
mov
and
stos
out
mov
push
sub
lods
addr16
xor
or
js
cmp
add
pop
push
jl
fwait
std
mov
cmp
mov
sbb
push
adc
mov
scas
ds
clc
cli
sahf
jbe
mov
xchg
mov
push
in
dec
sub
dec
pop
dec
xchg
push
xchg
adc
int3
jmp
pop
inc
push
and
pop
cltd
fisttpl
cmp
mov
nop
jecxz
aad
dec
mov
pop
sahf
enter
lds
cwtl
fldl
cmpsb
mov
mov
lods
std
inc
xchg
push
loope
mov
into
mov
jmp
and
add
sub
mov
jne
mov
mov
adc
adc
and
jnp
mov
mov
ret
mov
decl
inc
and
push
inc
daa
jb
dec
push
xchg
sbb
test
nop
das
sub
cltd
lods
bound
sbbb
jno
sbb
bound
mov
push
inc
push
inc
mov
inc
dec
mov
scas
xor
lret
mov
aaa
dec
xlat
push
test
xchg
inc
sbb
icebp
mov
push
in
dec
mov
xor
xor
imul
adc
or
hlt
cmp
jmp
or
dec
mov
jmp
rdmsr
inc
es
inc
mov
stos
insb
xor
cmp
and
adc
out
push
xor
pushf
xor
xchg
test
and
scas
jo
mov
jo
jg
outsb
add
test
int3
repnz
cli
xchg
test
inc
cmpsb
pop
pusha
es
lret
mov
clc
pop
pop
pusha
add
inc
divb
mov
ja
dec
mov
call
aas
shr
mull
out
mov
ficoms
insb
scas
cmp
push
mov
jae
sbb
or
ljmp
stc
mov
aas
stc
ja
cmp
xchg
js
mov
mov
xchg
pushf
cwtl
test
mov
test
pop
in
xchg
jne
cmp
hlt
lock
movl
sbb
jo
xchg
jmp
jb
push
dec
cltd
and
jmp
movsl
ljmp
mov
xchg
in
cld
or
or
faddp
or
clc
int3
push
adc
dec
addr16
xchg
mov
test
pushl
bound
and
cmp
jl
ret
loop
mov
notl
lods
hlt
ret
lock
jmp
cltd
xor
lods
xor
xchg
dec
push
int3
pop
daa
popa
inc
cli
push
xor
enter
sub
sub
push
mov
mov
pop
xor
sti
mov
and
stos
xchg
xor
sbb
jle
xorl
fldenv
add
dec
movsb
cmp
xchg
push
arpl
adc
pop
jo
sbb
push
lret
or
jecxz
jnp
push
out
jg
jo
movsl
mov
fstps
ja
sti
mov
stos
out
int
fldcw
outsl
imul
push
sub
pop
cmp
xor
and
out
lcall
repz
adc
jmp
and
ret
test
movsl
ds
clc
sbb
dec
in
js
cmp
rolb
mov
dec
out
cmp
cld
push
inc
lret
fmuls
add
mov
jge
xor
leave
movsb
outsb
sub
aad
ja
dec
stos
outsl
mov
rcrl
pushf
repz
inc
arpl
dec
dec
std
inc
lea
dec
insb
xchg
stc
cmc
out
movsl
xchg
mov
cmp
lret
and
push
call
mov
test
pusha
enter
adc
sub
dec
xchg
mov
cwtl
popf
test
lods
sbb
push
aas
jae
mov
inc
inc
popf
push
call
aam
jg
add
cwtl
scas
mov
in
sbb
and
enter
add
lahf
movsl
pop
sub
es
iret
mov
cmpsb
idivb
lahf
in
mov
imul
imul
xlat
xor
movsb
inc
xor
arpl
jo
pop
mov
mov
fwait
int3
push
leave
mov
aaa
add
dec
xchg
mov
pop
add
adc
cmp
cmp
jns
mov
pop
int
iret
inc
subl
adc
mov
mov
add
les
and
add
rorl
movsb
insb
inc
popa
adc
hlt
or
pop
cmp
je
adc
xlat
mov
loope
sahf
in
in
sbb
inc
push
icebp
push
lea
imul
dec
inc
mov
les
push
ljmp
shll
daa
xchg
adc
jmp
sub
mov
lcall
push
or
xor
mov
stc
jge
sub
xor
adc
inc
adcb
leave
mov
stos
push
leave
mov
daa
pushf
or
imul
xor
imul
in
dec
and
mov
cmp
outsb
mov
mov
xor
and
mov
jg
shrb
scas
ljmp
movsl
ror
cmpb
ficompl
fldl
push
out
fmulp
mov
ds
add
dec
pushf
inc
cmp
ret
adcl
bound
bound
xor
xchg
in
sbbb
daa
inc
stos
mov
repz
push
std
dec
imul
inc
mov
movl
insl
sbb
rolb
or
pop
pop
mov
pusha
sti
cmpsb
ret
cmpsb
pop
popf
ja
pop
pop
mov
sub
das
test
fmuls
and
sbb
insl
add
cmovae
inc
pushf
push
push
fnstsw
gs
push
add
jae
push
cwtl
dec
loope
jne
sbb
ficoml
adc
scas
and
jae
cmpsl
sbb
and
adcl
aam
push
mov
loop
adc
ror
in
mov
sbb
xor
add
push
das
and
pop
adc
xchg
arpl
sbb
ds
out
pop
and
xor
out
add
and
shll
mov
aas
mov
jno
in
jb
das
mov
in
test
add
mov
lcall
rcrb
dec
sub
mov
lret
mov
dec
xchg
cmp
pop
push
fnstsw
cltd
scas
data16
sbb
arpl
repz
pop
mov
popf
and
jmp
sbb
sbb
sbb
divb
and
mov
cmpsb
dec
cmp
test
loope
xchg
jp
or
xor
sahf
ss
add
ss
rorl
add
add
mov
push
cmpsl
cmp
mov
pop
inc
xchg
adc
sbb
inc
hlt
adc
sbb
xor
and
cmp
lea
arpl
push
cmp
and
mov
test
or
test
data16
mov
xor
jp
mov
jl
sbb
adc
std
xor
ds
cli
neg
aaa
popa
leave
push
mov
inc
out
xchg
add
jecxz
sub
fildll
mov
pop
in
icebp
mov
xchg
stos
and
adc
cli
testl
adc
xchg
mov
pop
into
jecxz
lret
adc
aas
gs
cmpsw
jbe
xor
vpacksswb
testl
ficoml
test
and
sub
push
mov
inc
pushf
in
inc
cmp
pusha
data16
or
mov
add
mov
mov
cmp
fcompl
inc
or
sub
stos
pop
cld
and
mov
jo
jae
xor
cld
mov
mov
lea
call
shrl
mov
aas
sbb
sub
adc
pop
mov
push
add
pop
insl
add
xchg
gs
adc
loope
push
outsb
das
insw
enter
dec
and
cli
pop
inc
mov
pop
int3
sahf
jecxz
xchg
hlt
aam
dec
rcll
out
add
stos
sbb
mov
int3
shrl
popl
scas
inc
test
mov
jg
inc
ss
pop
call
add
maskmovq
shll
mov
bound
fmull
mov
mov
cmpsb
or
inc
push
inc
nop
aaa
push
adc
mov
fcompl
jno
mov
filds
pop
jge
xchg
roll
pop
repz
nop
mov
sub
leave
jns
pushf
loope
daa
ljmp
add
and
les
call
pop
xchg
es
dec
and
and
stc
icebp
test
repnz
inc
shrl
xlat
out
rolb
dec
sub
push
mov
insb
out
adc
out
rorl
and
scas
xlat
jno
xor
leave
shl
outsl
sahf
and
and
pop
cmpl
fnstsw
sub
cld
push
aaa
adc
xor
sbb
fistpll
push
add
inc
mov
ret
out
jns
and
xchg
enter
mov
out
adc
add
mov
cld
cmp
mov
dec
xor
push
stos
mov
cmp
lea
dec
xchg
ss
lcall
cmp
mov
lods
stos
and
jge
inc
xor
stc
rcrl
pop
xchg
pop
push
sbb
cmpsl
or
ret
mov
fs
push
mov
in
std
pop
faddl
add
push
sbb
xchg
push
addb
fisubl
in
sbb
nop
inc
push
mov
das
stc
pop
cmp
cmc
insl
popf
mov
stc
mov
cmp
xchg
sti
xchg
out
cld
int3
mov
inc
cmpsl
mov
movb
mov
push
mov
mov
movsl
loope
dec
test
xor
push
jp
jp
aad
and
out
or
push
in
lcall
imul
mov
jbe
mov
and
mov
lock
sbb
jg
rcll
iret
sbb
or
xchg
pushf
sahf
ds
push
mov
mov
sbb
ret
jg
mov
clc
add
ret
out
pop
lock
iret
xor
in
sahf
mov
fmul
popf
mov
mov
jge
aad
cmp
cmp
xor
inc
mov
fisubrs
mov
repz
in
repz
and
aas
or
jmp
loop
jno
leave
shll
cmpsb
cld
jp
ret
cmp
pop
leave
pop
jns
out
fldt
dec
inc
dec
push
jne
xlat
or
pop
jnp
sbb
xchg
adc
inc
dec
cmp
xor
inc
clc
call
gs
ret
out
push
lods
test
or
pop
stos
adc
insb
test
ja
lcall
icebp
movsl
xchg
divl
lock
sbb
fs
jae
subl
inc
and
add
cwtl
and
repz
sbb
in
out
enter
inc
mov
mov
mov
mov
pushf
mov
jge
mov
sti
popf
jnp
pop
fistpl
push
cmc
xor
adc
cmp
adcl
lods
dec
push
repz
in
sub
popf
push
xchg
insb
sbb
mov
aas
xor
mov
push
mov
stos
sbb
jnp
lea
xchg
xor
insb
inc
sub
int3
aam
and
outsl
lods
stos
jns
data16
imul
add
ret
lea
lahf
mov
lea
and
jno
mov
pop
pop
shlb
mov
out
jge
mov
inc
dec
cmc
pop
xchg
ret
and
popa
or
gs
jns
das
add
arpl
sub
cmc
js
jle
jmp
test
lods
in
in
and
sbb
jb
aas
inc
mov
push
loopne
add
fiadds
out
xchg
stos
sbb
jnp
mov
and
sti
call
jge
sub
repnz
and
stos
pop
jno
sub
sub
xchg
or
mov
enter
icebp
or
faddl
push
inc
mov
das
push
std
cltd
in
mov
cltd
mov
xor
test
jnp
mov
arpl
clc
clc
jp
leave
out
mov
sub
test
pop
ss
cmp
into
jg
push
pop
mov
rcpps
add
pop
test
and
into
sbb
imul
scas
or
stos
and
insb
xlat
enter
add
aad
or
test
push
jecxz
divl
pop
in
jne
mov
lock
clc
xchg
lahf
fidivrs
mov
dec
stos
and
adc
mov
mov
sbb
jmp
inc
in
orb
popf
sahf
insl
mov
test
aad
or
jns
mov
inc
or
addr16
fnstenv
pushl
mov
cmp
imul
and
xchg
clc
xor
xchg
push
lea
xor
xchg
jp
push
stos
sub
icebp
shl
xchg
pop
sbb
aas
ljmp
sbb
sbb
cld
mov
das
and
ds
ss
push
shrl
gs
lret
mov
fidivrs
sbb
fwait
and
xchg
jns
pushf
mov
and
jp
xchg
loope
sbb
sbb
mov
call
loope
pop
push
cmp
or
xchg
not
fmul
xchg
push
mov
and
push
mov
ficompl
ljmp
scas
mov
aad
iret
cmp
mov
sub
fcomps
pop
sub
xchg
movsb
dec
adc
or
push
cli
add
lahf
pop
sahf
adc
cmp
in
mov
dec
jns,pt
lods
cmp
or
push
daa
fdivrs
roll
sub
xor
push
dec
movsl
push
std
les
aam
sahf
std
imul
add
outsb
test
push
shlb
insb
mov
or
frstor
daa
in
or
fcoml
adc
push
sub
out
pop
sub
bound
daa
pop
aas
mov
push
clc
lahf
sbb
mov
jmp
mov
icebp
push
jg
add
lds
in
movb
dec
and
dec
repz
int3
mov
testl
ljmp
mov
xchg
mov
jae
dec
in
shlb
cmpsb
lods
xchg
cmp
inc
in
push
or
inc
pop
sbb
divb
and
cmp
sbb
xor
xchg
pop
inc
repnz
pop
push
pusha
push
push
cmp
cmp
fdivrp
cli
loope
cmpsl
cmp
xchg
add
mov
xchg
icebp
jae
mov
movb
je
repz
sbbb
fs
cmp
xor
jo
fcmovnu
mov
inc
mov
inc
inc
adc
jle
jbe
out
stos
aam
mov
push
jne
mov
jbe
stos
in
mov
mov
mull
jb
in
lret
testb
outsb
ljmp
bound
sbb
icebp
cmpsl
mov
popf
or
pop
mov
jmp
mov
cmc
das
xchg
inc
pop
mov
dec
jg
fisubl
or
push
dec
rorl
mov
mov
clc
push
mov
sbb
jb
dec
pop
pushf
cmp
jbe
cld
jmp
inc
pushw
mov
jne
or
insl
mov
add
in
mov
adc
push
test
and
and
aaa
fistps
in
or
dec
and
pop
fldcw
mov
sbb
jo
inc
in
mov
dec
cmp
inc
es
rolb
mov
lods
aam
xor
pop
ljmp
faddl
jne
mov
loope
cmpsb
xlat
hlt
and
insb
mov
push
mov
add
xchg
mov
fnsave
cwtl
xor
insl
mov
push
dec
sbb
dec
rclb
jno
lret
xchg
jecxz
or
dec
sbb
jge
add
adc
mov
incl
sub
jmp
dec
or
inc
inc
es
call
xchg
push
sahf
repz
adc
dec
es
sahf
push
frstor
sbbb
leave
sbb
lret
les
push
cmp
jp
jmp
hlt
ret
jp
xchg
clc
cmp
movsl
jle
or
mov
lret
nop
pop
xchg
inc
mov
push
mov
mov
addb
into
xchg
test
dec
lret
lahf
or
jne
xchg
dec
xchg
outsb
xchg
lret
push
ret
fbstp
and
fcmovne
jp
mov
sbb
mov
dec
mov
sahf
inc
and
or
flds
jmp
dec
popf
out
mov
add
mov
lods
mov
rcrl
sub
xlat
xor
popl
xchg
lret
sub
dec
and
adc
scas
test
pop
orb
mov
push
xor
hlt
mov
divl
lahf
les
xchg
push
and
push
mov
in
adc
mov
adc
lcall
inc
es
stos
and
sub
mov
xchg
adc
xchg
aam
mov
jle
icebp
mov
sub
jecxz
xchg
mov
or
push
inc
cmpsb
pushf
pop
jb
cmpsb
sbb
std
stos
jo
or
jae
shr
movsb
lret
adc
xchg
negl
out
mov
dec
pop
lcall
xchg
stos
mov
adc
push
js
cmpsl
notb
pop
inc
ss
or
out
add
mov
pop
fisubrs
xchg
pusha
ret
push
cwtl
adc
pusha
push
loope
dec
insb
in
and
daa
data16
inc
int
and
mov
lret
mov
clc
or
mov
dec
test
es
nop
rolb
shll
mov
sbb
push
pop
mov
adc
aaa
pop
rorb
inc
xchg
xchg
sarb
inc
or
stos
dec
out
sbb
jns
mov
or
cmpsb
enter
out
call
adc
popf
test
test
mov
mov
ret
mov
and
push
out
insb
fwait
insb
jb
mov
xchg
fucom
sbb
push
sbb
arpl
inc
sub
lret
jmp
mov
es
loop
decl
iret
repnz
jb
xchg
jl
call
into
lods
cmp
repz
popa
rolb
loop
mov
ret
int3
decl
sub
popf
imulb
push
and
jmp
aam
xchg
cmpsb
jmp
fmull
lret
icebp
adc
push
sub
sub
stos
mov
mov
cmp
mov
inc
icebp
xchg
aaa
mov
fidivrs
mov
mov
jle
ffreep
and
jmp
sbb
xchg
fsts
mov
push
and
inc
addr16
push
call
cs
stc
adc
mov
stos
ret
mov
lea
fistl
or
xor
cmpsb
mov
xor
dec
imul
sbb
aad
mov
jle
test
add
mov
lcall
xchg
sbb
mov
jae
push
jl
mov
inc
cld
xchg
cmp
xchg
andl
mov
pusha
mov
setb
test
inc
cld
or
adc
pop
dec
add
pop
lahf
rol
aad
xor
lea
and
add
or
mov
push
dec
xchg
mov
mov
jp
pop
dec
icebp
data16
sub
adc
lock
fdivrs
add
scas
aas
pop
addr16
aam
rcr
push
arpl
xchg
adc
daa
pop
lock
dec
sarl
push
mov
sub
loope
and
xchg
sbb
loope
mov
adc
jp
inc
in
mov
push
xor
in
aas
daa
adc
jno
push
fldl2t
jb,pn
xor
aam
push
fsubs
mov
fs
dec
insl
lea
pushl
in
xchg
push
das
xchg
nop
mov
sub
mov
in
scas
xorb
and
hlt
fisubrs
aaa
mov
sub
sbb
jne
subl
sub
test
es
adc
or
mov
mov
hlt
add
je
xlat
mov
and
dec
sarl
fisttpll
sub
outsb
int3
test
lret
es
aad
ds
cmp
inc
mov
xchg
insl
mov
or
test
sub
push
inc
ss
test
hlt
daa
cltd
dec
movsl
adc
scas
test
scas
push
jbe
cmpsl
adc
mov
mov
or
push
add
and
add
into
outsb
jg
lods
mov
fsubrs
cmp
mov
int
inc
add
aas
or
in
mov
dec
clc
fwait
inc
stos
push
mov
insl
and
aam
sub
cwtl
pushl
jecxz
dec
orl
xchg
inc
jnp
mov
pop
les
add
adc
dec
ja
dec
jmp
mov
pop
arpl
cmp
mov
subl
fistl
shll
mov
jns
jbe
seta
jno
rcr
xchg
adc
shrb
jnp
mov
xor
or
sub
push
lods
cmp
movsb
push
icebp
sub
mov
push
aaa
adc
pop
jle
movsb
mov
or
mov
sbb
cmp
sbb
enter
or
test
or
movsb
ja
inc
inc
and
loope
fistps
and
dec
fwait
jno
xchg
ds
mov
sub
dec
outsl
jae
das
sub
imul
dec
push
and
imul
mov
test
cmp
ret
add
push
sbb
rcl
adc
dec
inc
insb
jne
pop
fnsave
fucom
mov
hlt
fisubrl
icebp
adc
jge
mov
cltd
cmpl
sub
lods
pop
xchg
ljmp
daa
add
out
shl
sub
inc
lcall
stos
mov
cmp
sub
add
sbb
mov
dec
mov
sar
adc
mov
jns
xchg
mov
mov
sbb
decb
or
ss
push
sub
or
stos
jb
pop
adc
jne
dec
in
popa
pop
inc
add
ret
mov
cli
mov
mov
lret
pop
push
mov
push
push
fwait
mov
jecxz
ja
mov
and
loopne
wbinvd
enter
fsts
cmpsb
and
jo
jno
and
jl
scas
lods
loop
mov
jnp
sub
arpl
sub
pop
sub
mov
int
sub
add
xchg
or
xchg
int3
ret
clc
inc
insb
xchg
das
ret
icebp
xor
out
mov
mov
cli
jl
mov
hlt
in
ret
sbb
shlb
xchg
addr16
adcl
lcall
lahf
mov
out
cmp
cmpsb
pusha
cmp
fwait
dec
je
add
jae
aad
adc
sti
jo
push
add
jae
cwtl
and
adc
iret
mov
leave
and
mov
adc
pop
clc
test
stos
out
hlt
xor
mov
out
mov
push
mov
aam
mov
inc
repnz
jnp
and
push
xchg
mov
ss
in
lret
inc
xchg
cmpsb
push
xchg
in
sbb
sahf
dec
sub
ss
sbb
ud1
push
fcoml
icebp
les
jle
ljmp
movsb
push
sub
lret
jbe
adc
jecxz
push
rcrl
scas
clc
in
rclb
xor
fs
out
lahf
inc
ror
cltd
xchg
sub
loopne
daa
cmp
xchg
in
adc
test
and
push
sub
xor
cmc
and
std
xor
out
inc
ret
inc
out
or
inc
jle
aad
adc
xor
pop
cmp
lods
fiadds
add
pop
aaa
fmul
xchg
xchg
lds
push
pop
mov
ret
xor
pop
lret
loopne
sbb
xchg
ds
mov
mov
sti
into
cmp
push
adc
xlat
cld
arpl
bound
aas
cmp
cli
ret
fsubl
pop
popf
mov
pop
xchg
sub
lds
sahf
loopne
push
cli
inc
stos
mov
or
adc
add
mov
fsubr
mov
push
lcall
xchg
xor
cmc
out
dec
add
push
jnp
lods
adc
cld
adc
in
xchg
push
jle
lea
in
aam
add
pushf
jnp
jecxz
gs
call
cwtl
xchg
jmp
sbb
xor
lock
sbb
inc
cmp
or
es
imul
jg
push
cmp
jge
push
idivb
or
scas
push
mov
dec
iret
jg
and
fcmovnbe
lret
ficompl
cmp
rcll
xchg
mov
fs
pop
mov
dec
mov
and
xor
movsl
dec
sub
xor
fwait
out
sub
add
and
push
insb
adc
insl
lea
adc
movsb
pusha
sbb
pop
jne
dec
iret
pop
movsb
ss
rcr
pop
xor
dec
sahf
cmp
in
and
sahf
test
outsb
call
push
rcrb
cli
push
dec
dec
cmp
notl
out
lea
loope
js
pop
cmp
scas
add
int
dec
cmp
pushf
jmp
or
inc
sbbl
rol
xchg
das
call
mov
inc
jno
dec
fnstcw
add
stc
sbb
shr
mov
mov
adc
clc
fstps
dec
fdivl
call
push
dec
cs
cmp
mov
adc
dec
jb
or
mov
mov
sti
dec
fistps
lcall
sbb
push
mov
push
adc
rorb
mov
and
and
aas
in
pop
cmpsl
add
mov
out
sub
push
into
and
test
or
pop
push
adc
cltd
int
jmp
lds
sbb
mov
aam
cmp
fisttpll
sti
xorl
stos
fcmovnbe
out
cs
jb
pushf
hlt
in
ds
xchg
sahf
outsl
jg
insl
and
pop
sub
notl
repz
cmp
dec
out
dec
stos
pop
fidivl
out
lret
lods
cmpsl
lret
leave
les
das
sbb
repnz
ss
sbb
stos
add
clc
mov
in
imul
mov
xchg
mov
cwtl
test
lds
aad
adc
scas
push
test
enter
addr16
jmp
or
movsl
loope
addr16
jg
jecxz
jb
lods
addb
les
jg
fimull
mov
push
stc
mov
sub
shlb
mov
clc
cwtl
lods
sti
lcall
xor
pusha
push
ficoml
scas
cmp
or
adc
nop
ja
and
cmp
fcmovnbe
or
lret
loope
out
jb
shlb
push
cmc
inc
fidivrs
push
mov
jge
sub
and
cmpsb
jl
dec
cmp
cmp
cs
dec
lods
push
mov
jb
xor
or
sbb
lods
stc
mov
loope
and
jae
adc
popa
enter
test
mov
mov
cmp
xor
xor
dec
mov
fsubs
push
xchg
mov
lds
stos
cs
daa
gs
add
pop
pop
pop
push
fwait
adc
imul
fnsave
nop
movsl
push
sub
int3
lcall
jge
es
roll
das
push
pop
and
scas
fwait
loop
pop
cli
mov
arpl
dec
cmp
sti
imul
lds
pop
lcall
cwtl
ficomps
int3
push
push
push
les
ret
adc
mov
sbb
ljmp
pop
mov
imulb
addr16
push
jno
js
cld
ret
enter
jae
orl
dec
stos
push
dec
push
popa
cmp
js
and
in
mov
test
pop
or
dec
push
out
dec
mov
xchg
xchg
stc
pop
dec
rcll
inc
sbb
cmp
movsb
sbb
dec
mov
mov
add
inc
mov
push
mov
sbb
mov
jno
fnstcw
dec
cwtl
mov
push
add
repnz
pushf
mov
ret
hlt
cmpsl
jns
pop
std
ret
in
jl
sub
int
enter
xor
and
xchg
xlat
xor
aam
mov
loop
outsb
xchg
sub
sbb
dec
pop
mov
and
pop
je
jg
jo
inc
and
mov
inc
lret
adc
cwtl
mov
mov
pop
xor
movsb
loope
fs
pop
jmp
aas
cmpsb
push
sub
xchg
aaa
xchg
jns
add
and
mov
pop
mov
and
shll
inc
add
and
sub
pop
das
adc
iret
test
popf
shl
fidivl
sub
mov
and
repz
lret
imul
jo
mov
insl
mov
scas
jns
insb
inc
cmpsl
sbbb
inc
outsb
inc
adc
fstl
lea
scas
add
mov
outsb
xchg
push
arpl
orl
add
sbb
jnp
popa
icebp
mov
repz
push
in
xchg
add
fsubs
stos
add
fld
sbb
cwtl
lds
cmp
pop
pop
adc
inc
ljmp
xor
andl
sbb
iret
lock
xchg
inc
xchg
jg
jg
mov
or
aam
sub
sti
addr16
inc
mov
aas
lcall
std
int
pop
adc
xor
loopne
cmpsb
push
jae
int3
xor
rorl
xchg
leave
mov
mov
sub
add
fcoms
xchg
mov
push
fists
jne
shll
je
sti
sbb
mov
fwait
gs
adc
cmp
xor
xchg
cwtl
fnop
js
and
popf
aaa
jns
push
mov
cmp
fistps
std
jne
cmc
xor
int3
and
lods
pop
jns
mov
leave
insl
adc
cmpsl
mov
jge
sub
movsb
dec
rcr
adc
fwait
iret
int3
rol
pop
add
aas
adc
and
inc
fldcw
roll
in
sub
sahf
or
test
test
into
xchg
xlat
lods
sbb
mov
xchg
in
push
nop
mov
add
ljmp
shlb
push
push
inc
push
fchs
xlat
lret
cmp
xlat
xchg
leave
add
push
pop
imul
sbb
lret
test
push
mov
jmp
jbe
jne
push
sbb
xchg
ss
pop
and
testb
cltd
add
int3
inc
cmpsl
lret
pop
rcll
add
mov
fidivl
mulb
add
sarb
sub
xlat
mov
cs
int3
push
ljmp
or
insl
jecxz
pusha
jae
sbb
stos
jb
mov
xor
inc
jg
sub
mov
xorl
out
pop
je
sbb
into
hlt
mov
mov
filds
fcom
cli
das
rcrl
jle
mov
rcrl
push
add
faddp
fdivr
int
adc
das
and
xchg
test
insl
mov
adc
push
lock
iret
adc
andb
or
rcll
popf
sbb
es
dec
in
iret
imul
push
pop
aam
mov
setno
xchg
jns
aam
lret
dec
add
xchg
pusha
mov
jp
test
ljmp
push
lcall
lret
pop
addr16
out
arpl
jle
sahf
mov
ret
add
fisubl
in
adc
cs
fcomi
mov
jns
xor
add
lods
bound
pop
mov
sub
jmp
or
adc
jbe
cmpsb
push
adc
mov
push
dec
xor
stos
mov
imul
loope
xor
cmc
sub
push
data16
mov
or
jg
orb
loop
ret
sub
dec
xorl
adc
lds
pop
pop
add
sahf
scas
push
dec
xchg
adc
repnz
aam
or
aas
mov
mov
mov
mov
mov
adc
cmpsb
popf
and
sarl
xor
outsb
enter
mov
test
mov
insl
xor
dec
jl
push
and
in
jle
shrl
pop
dec
mov
outsb
adc
shlb
lea
sbb
and
dec
fidivl
lods
ds
lea
inc
sbb
insl
sub
mov
push
test
daa
and
add
sahf
or
movsb
mov
mov
mov
aaa
aad
dec
add
das
mov
add
sub
out
and
sbb
loopne
rcrb
jle
push
nop
sub
imul
inc
sbb
icebp
mov
aam
pop
mov
push
mov
outsb
inc
xor
daa
xlat
inc
cmpsl
mov
pop
push
iret
jns
sbb
lret
cmpsb
and
test
jl
and
xor
cmpsb
pop
sub
adc
rcl
pop
and
shlb
push
cld
bound
fidivrl
and
mov
insl
push
call
pop
jecxz
xchg
mov
addr16
inc
xchg
sub
inc
sahf
leave
push
xor
xchg
add
xchg
mov
inc
sub
pop
ja
jge
xchg
lods
inc
fs
push
cltd
loopne
mov
loopne
js
pop
ja
fs
dec
or
aad
fwait
cmp
sub
mov
loop
mov
cmp
int
insl
pusha
fxtract
in
stos
jno
ja
xchg
lock
sub
lods
cld
pushf
imul
sub
cmp
les
ret
adc
into
loop
fs
sbb
std
jmp
jo
rcrl
pop
fdivl
cwtl
jg
and
and
push
add
mov
mov
or
mov
xor
bound
sbb
cltd
and
out
stc
sub
push
adc
xchg
mov
rorb
lret
jno
sbb
and
or
pop
xchg
push
mov
cs
insl
fwait
shlb
and
ret
stc
stos
adc
sbb
ss
push
and
xchg
cmpsb
ds
cmpsl
lahf
clc
arpl
mov
jp
xchg
into
xor
inc
lea
xor
cmp
cltd
fwait
xorb
mov
xor
in
cmp
roll
lret
mov
shll
adc
cli
inc
scas
mov
mov
adc
fiaddl
cmpsb
lret
cmp
lahf
jmp
shrb
lock
lret
js
test
cmp
js
mov
mov
jb
xchg
mov
ss
inc
dec
xor
daa
out
xor
loop
push
pop
sub
jmp
iret
mov
mov
movsb
test
cmp
dec
cmp
pushf
push
inc
out
xchg
mov
jge
xchg
aad
nop
loop
jno
std
lcall
test
jecxz
sarb
outsb
adc
fwait
cld
mov
jg
adc
ljmp
js
cmp
mov
dec
addr16
insl
mov
mov
outsl
imulb
lea
sub
mov
cmp
shrb
pop
lahf
clc
xchg
or
popf
pop
adc
outsl
mov
or
sahf
jg
mov
cmpl
lahf
xor
jg
cmpsl
mov
test
mov
paddsw
sahf
std
stc
pushf
add
lret
cli
adc
sub
pop
loop
add
adc
inc
ljmp
inc
cmc
jno
add
add
out
pop
inc
inc
bound
pusha
outsb
dec
hlt
lea
jne
sbb
outsl
jp
pop
rorb
cmpsl
outsb
cmp
rcrb
xlat
pushfw
inc
mov
cs
enter
push
or
pop
mov
and
sbb
add
lock
and
add
push
rclb
sub
fbld
rcll
xor
cmp
jge
int3
mov
sbb
hlt
push
xchg
or
fmul
out
rcll
sbbb
test
test
pop
cltd
adcl
jmp
push
add
mov
mov
scas
dec
xor
pop
push
mov
loope
ret
nop
pop
aaa
jle
add
shll
mov
cwtl
fsubr
insl
je
xchg
sub
sub
pop
mov
lods
pop
jmp
pushf
pop
lret
push
pop
subb
outsb
push
dec
cmpl
mov
jg
stos
push
push
gs
adc
mov
push
loope
push
inc
and
fnsave
push
cmc
add
pushf
lds
sbb
aaa
push
mov
or
cmpsl
iret
pop
mov
xchg
mov
mov
popa
fdivrl
subl
mov
push
pop
pushf
jbe
sub
in
xorb
fmull
scas
clc
jg
dec
dec
or
sti
push
movsl
sub
inc
pop
insl
or
inc
push
cltd
lret
cmp
sub
pop
out
dec
jae
pop
aaa
push
xchg
shrl
fstps
xchg
mulb
jae
pop
fwait
sbb
out
mov
ret
andb
or
sub
ljmp
mov
pop
or
jp
sbbl
cmp
sub
sub
add
and
inc
fcmovb
stc
sub
pop
clc
push
imul
add
dec
outsb
or
mov
adc
addr16
jg
int3
orl
mov
mov
ret
je
ret
xchg
repz
and
sti
jno
sub
shrb
xor
xchg
push
xchg
inc
jl
fmul
jl
push
mov
pop
xorb
pop
enter
push
mov
rcrl
repz
mov
iret
or
mov
mov
pop
lahf
jp
mov
iret
fisubs
pop
mov
xchg
gs
jnp
test
test
fwait
adc
loop
cmp
sub
iret
fbstp
aas
stc
cmpsb
addr16
bound
jo
add
imul
ret
push
pop
and
mov
lds
mov
add
ds
in
pop
cmpl
test
ljmp
sbb
addb
jbe
mov
out
lds
and
fistpl
in
cld
xchg
and
jo
xchg
xor
int3
cmp
mov
in
sti
sbb
imul
outsl
push
jl
out
idivl
pop
enter
pop
shll
lea
adc
push
lods
jge
and
ljmp
cmpsl
mov
roll
mov
inc
sbbb
pop
mov
cmp
out
or
filds
in
outsl
mov
movb
lret
ljmp
insb
mov
xchg
mov
fs
jae
mov
inc
inc
dec
movsl
fs
daa
cld
orl
insl
and
mov
adc
roll
sbb
or
out
mov
mov
push
dec
test
stos
mov
pusha
fcoms
or
mov
push
and
orb
in
in
sahf
ljmp
mov
nop
jmp
sub
add
push
mov
dec
mov
mov
xor
ret
sbb
fwait
jecxz
inc
and
mov
dec
mov
dec
jae
xchg
mov
mov
push
pop
outsb
int
in
ljmp
sti
addr16
jmp
iret
pop
popa
cmp
test
in
frstor
push
cmp
fcomi
cmp
std
pusha
mov
or
jle
cmp
xchg
fdivrs
inc
cmp
lcall
cmp
jnp
in
int
insl
jno
and
pop
sbb
jae
jne
cli
dec
push
test
mov
push
mov
lods
cltd
movsl
sbb
jb
lock
movsb
in
cmp
ret
push
lods
insb
push
cmpsl
loop
pop
pop
gs
dec
lret
cmp
push
xchg
popa
add
inc
mov
shll
addr16
cmp
cmc
adc
dec
cmp
mov
shl
movsl
sub
insl
mov
push
mov
mov
aas
imulb
mov
sub
fs
dec
mov
je
out
fmul
das
and
cltd
shr
sub
subb
mov
jo
imul
pop
mov
mov
pop
repnz
push
adc
lds
push
sub
test
mov
call
sti
movsb
or
jp
imul
pop
das
mov
xorb
cmpsl
sub
mov
xchg
push
pop
cmp
cmp
mov
inc
dec
imull
fs
into
cld
xchg
notb
adc
jbe
daa
mov
mov
sub
int
pop
mov
fstps
add
pop
imul
or
fadds
pop
mov
xor
cltd
and
test
cltd
pop
bound
or
loope
inc
dec
test
cmp
and
mov
push
push
inc
jb
sub
mov
push
jmp
mov
test
mov
xchg
cwtl
xor
sbb
insb
push
repnz
mov
lods
out
mov
es
loope
mov
addr16
push
stc
add
jmp
jbe
aas
pushf
movl
pop
sbb
adc
insl
mov
out
and
adc
jl
sub
rorl
cltd
loope
cmp
in
ss
xchg
jno
filds
mov
sbb
mov
push
in
push
mov
xchg
adcl
ds
lahf
inc
mov
pop
dec
cmp
mov
ss
dec
xor
cmp
mov
pop
mov
adcl
xor
sahf
pop
cmp
add
cmp
jae
sbb
cli
movsb
cmp
push
mov
aad
fisubl
aad
pop
push
ljmp
push
std
test
leave
aam
and
leave
mov
leave
les
push
xchg
fs
movsl
cmpsl
xor
sub
fistpll
sub
sbb
test
ds
daa
mov
push
sub
stc
adc
inc
inc
mov
mov
mov
cmp
mov
ds
jmp
ja
jns
out
adc
loop
test
imul
push
jecxz
push
notl
cmp
scas
adc
and
mov
mov
inc
shll
arpl
push
push
jno
dec
pop
jp
dec
mov
push
sbb
les
xchg
adc
in
es
push
mov
xchg
imul
sahf
adc
aam
inc
mov
mov
jb
rep
xor
lods
push
mov
les
rcr
cmp
pop
jb
dec
push
push
test
imul
pop
rorl
mov
sub
in
dec
dec
cmp
push
or
hlt
fmul
mov
ret
push
divl
mov
bound
outsl
xor
cmpsl
xor
xor
out
lret
and
aam
ret
int3
lcall
cmc
mov
pop
inc
jnp
pop
mov
dec
cmpsb
lret
ja
dec
inc
xlat
xlat
outsl
js
pop
or
lret
cmpsl
mov
aaa
popa
push
popf
pop
mov
xor
std
adc
and
fbstp
dec
cmp
mov
lahf
aad
ljmp
mov
adc
xor
pop
shll
inc
jnp
inc
outsb
rcrb
in
xchg
jmp
divb
xchg
mov
inc
xor
lcall
mov
push
adc
std
dec
xlat
mov
test
negb
test
sub
add
mov
mov
ret
mov
pushf
add
stos
rclb
cmp
mov
js
test
pop
shl
mov
mov
inc
mov
dec
addr16
or
int
lcall
inc
adc
les
fmul
jbe
mov
pop
mov
bound
sti
sub
xchg
mov
mov
fisubs
push
imul
cmpsb
inc
testl
aad
cmp
push
loopne
sarl
cmp
test
adc
dec
sbb
into
jbe
sbb
jle
mov
repz
mov
stos
adc
dec
fisubl
data16
cmp
les
xchg
insb
pop
sbb
dec
shlb
cmc
aaa
shrl
int3
push
out
sub
inc
cmp
adc
ret
mov
movsl
dec
mov
cwtl
lret
das
mov
mov
outsl
inc
pop
es
inc
inc
push
add
push
mov
jne
jnp
addr16
ficoml
mov
push
fidivl
outsl
stc
sub
aad
jbe
in
into
mov
shll
jmp
adc
inc
adc
out
sub
and
or
das
fwait
adc
jmp
insl
mov
adc
lret
pop
sub
sti
jnp
negb
repnz
jb
push
sbb
inc
add
mov
mov
shll
sahf
mov
test
inc
cltd
bound
fisttpll
pop
fadd
in
pop
mov
inc
xor
out
and
fidivs
pop
ljmp
bound
outsb
push
push
gs
pop
in
add
xor
rorb
inc
test
sub
jnp
inc
dec
adc
push
mov
cmp
jl
cmp
mov
in
mov
xor
sbb
inc
imul
cmp
cli
dec
bound
mov
xchg
sub
pop
fldenv
mov
mov
push
mov
in
insl
adc
cli
pushf
mov
mov
cmp
push
mov
jne
movsb
arpl
and
xchg
sub
cs
test
mov
sub
dec
dec
scas
nop
cltd
fdivrl
enter
inc
xor
sbb
popf
sub
cmp
push
inc
leave
dec
inc
inc
mov
repz
mov
pop
add
mov
sbb
add
inc
cmpsb
mov
scas
insl
ror
stos
fadds
int3
test
divb
push
push
fldenv
xlat
sbb
dec
and
pop
pop
mov
pop
xlat
mov
cmpsb
xchg
nop
jno
mov
mov
leave
mov
nop
dec
pop
mov
rolb
aad
test
fisubrs
mov
aam
mov
push
push
inc
mov
loopne
inc
jb
jecxz
mov
adc
jmp
enter
push
dec
adc
aad
sahf
pop
push
sbb
stc
mov
icebp
mov
fprem1
aas
lcall
push
jnp
pop
xor
scas
mov
sbb
xchg
sbb
mov
mov
sub
jno
mov
xor
sub
hlt
es
in
sbb
cmp
leave
xchg
jecxz
push
lcall
in
ja
dec
cmp
je
push
add
inc
and
and
stc
imul
xor
mov
or
test
pop
ret
or
lret
mov
ljmp
jmp
popa
flds
aam
test
fs
mov
xlat
nop
adc
lret
cs
loopne
pop
sar
mov
cs
jl
scas
pop
sbb
fcomp
fs
insb
fldcw
fwait
or
or
lock
pop
mov
mov
call
addr16
push
nop
ljmp
loope
mov
bound
enter
xchg
leave
add
popf
test
call
sub
popf
daa
fwait
push
idivb
add
and
adc
jnp
dec
xchg
cmpsb
loopne
push
test
leave
jg
and
or
cmp
mov
fcompl
and
push
bswap
lahf
int
dec
cs
pop
jbe
iret
movsl
inc
call
cmp
jnp
fldenv
or
ljmp
push
pop
sbb
bound
mov
xor
std
jecxz
pop
sub
out
mov
jecxz
inc
incl
sbb
jb
pop
mov
orb
daa
or
inc
inc
hlt
mov
sbb
pusha
push
jne
sahf
out
insl
in
pop
sti
sbb
stc
add
jge
mov
es
jl
or
loop
push
xlat
cli
das
iret
lock
cmp
movsl
je
int3
pop
fwait
cli
push
cltd
mov
std
into
jecxz
mov
ljmp
out
and
lahf
popf
jmp
daa
loopne
into
iret
leave
test
fcmovu
repnz
mov
push
mov
mov
pusha
enter
icebp
cmp
popa
mov
mov
mov
jmp
xchg
xor
hlt
sbb
paddw
sti
cmpb
jmp
or
and
fbstp
je
xor
gs
inc
out
cmpsl
nop
int3
jae
sub
and
jo
stos
loope,pt
and
push
mov
lods
fmul
xchg
xor
pop
ficomps
inc
push
pop
inc
cs
lahf
sbbl
pushf
arpl
or
xor
mov
sbb
loopne
xchg
dec
jb
add
divl
sahf
mov
call
cmp
add
sbb
mov
cmc
scas
shr
stc
xor
idivb
ds
and
cltd
xor
xor
fwait
or
inc
mov
dec
mov
aad
ja
clc
and
imull
sub
xchg
lods
add
pop
mov
xor
outsb
cmp
or
jmp
sbb
cmp
ljmp
les
testl
mov
scas
cli
mov
sub
or
lods
stos
int
sar
fcomps
xchg
push
push
or
dec
xor
popa
sub
sub
in
ffreep
add
sbb
ss
icebp
sbb
mov
push
test
push
outsl
xchg
jae
repnz
sub
movhps
shrl
push
pop
inc
popf
or
cmp
cli
inc
es
push
jg
adc
cmp
cmp
cwtl
mov
lds
pop
pop
sbb
icebp
out
add
mov
and
push
outsb
ljmp
mov
xchg
pop
fildll
scas
imul
cmp
iret
int
pop
push
aaa
loopne
orb
push
jle
into
hlt
adc
mov
xor
cs
dec
mov
pop
lods
inc
inc
sub
inc
fwait
and
idiv
jnp
fs
mov
dec
dec
data16
mov
test
mov
jns
push
cmp
fsts
rol
lcall
adc
jnp
sub
xor
movsb
mov
in
in
xchg
jp
lahf
mov
in
mov
lds
aaa
dec
adc
movsb
test
and
repz
add
outsb
std
pop
jnp
or
jle
arpl
cmp
test
jmp
and
aad
sub
enter
clc
push
aad
mov
ds
out
lret
decb
shrl
mov
test
sub
push
lcall
fadds
pop
jb
out
or
add
movsb
dec
xchg
aas
xchg
mov
cmpsl
push
cmp
loope
jae
mov
xchg
mov
out
fistpl
and
loopne
aaa
int
lods
ss
mov
aam
mov
jb
lea
movsb
loop
dec
scas
sub
mov
fcoml
data16
lock
sbb
aas
mov
decb
cmpsb
push
mov
push
mov
mov
xchg
xchg
xchg
xchg
mov
test
cmp
pop
dec
jmp
stos
popf
cmp
in
sub
adc
sub
js
jno
sbb
xor
add
dec
test
out
rcll
dec
sub
fyl2x
pop
add
aas
and
mov
fsub
test
push
clc
mov
mov
adc
rcll
push
add
mov
sub
jno
imul
mov
pop
imul
xchg
not
imul
xor
mov
aaa
flds
cltd
jb
and
shlb
stos
cs
lahf
in
xchg
xchg
fildl
dec
shlb
mov
loop
shll
shr
mov
jecxz
pop
jbe
add
shr
push
ds
shlb
andb
jg
loop
sub
ljmp
stos
ret
xchg
loop
into
adcl
insb
jg
sbb
add
popa
cmp
dec
push
push
jno
sub
iret
fisttps
lret
xchg
sbb
hlt
out
movsb
pop
add
inc
aas
dec
test
mov
cltd
mov
cmpsl
out
sbb
cmpsb
call
xchg
lahf
popa
mov
sahf
mov
mov
into
xchg
push
loopne
sub
in
push
stos
push
rcrl
out
add
push
add
es
pop
nop
inc
clc
or
shr
or
scas
das
sbbl
pop
sbb
shrb
mov
out
enter
mov
push
jbe
addl
cmc
sub
jnp
ret
mov
outsl
fsubp
mov
insl
mov
movsl
cmpsl
stos
lahf
xchg
adc
pop
popf
cmp
sarb
sub
iret
adc
lret
xor
sub
ds
test
cld
lds
inc
adc
xchg
ds
push
push
stos
arpl
xchg
adc
push
fmull
adc
ja,pt
mov
cmpsb
dec
shr
xchg
dec
enter
test
incl
imul
add
jo
jo
sub
inc
lret
dec
lea
xchg
sub
or
add
pop
pop
and
dec
test
cs
mov
clc
xchg
push
subb
add
dec
mov
pop
pusha
sub
fcmovb
sub
jmp
sub
push
fcmovu
fcmovnbe
mov
lods
rol
xchg
mov
insl
adc
ficomps
data16
rclb
mov
hlt
xchg
pop
outsb
inc
sub
push
mov
sub
push
and
inc
xor
push
sub
jp
inc
loope
push
data16
lea
xor
adc
lret
sbbl
lahf
push
shlb
cmovno
dec
inc
inc
stos
enter
mov
mov
ds
lcall
roll
leave
mov
cmp
daa
mov
pop
pushf
pop
out
dec
icebp
or
fisubrl
mov
fwait
das
adc
cmp
jns
push
fs
mov
sub
pop
mov
cmp
inc
sub
jp
dec
repz
bound
push
mov
fsts
mov
sarl
or
pop
jle
sub
movsb
lcall
sub
in
mov
std
fs
adc
jge
mov
std
daa
fistps
mov
xor
jle
mov
inc
sbb
xchg
lcall
push
nopl
jmp
inc
popa
push
ljmp
imul
stos
movsb
cmp
test
cmpsl
mov
pushf
movsb
stc
hlt
xor
dec
jne
jbe
mov
sub
adc
stos
mov
jb
and
test
xchg
into
in
pop
je
jns
int
aaa
sbb
dec
mov
stc
decl
xchg
or
jns
aaa
out
push
rorl
mov
test
fwait
lods
xchg
sar
cmp
adc
or
push
icebp
shr
sub
push
cmp
shrb
ret
daa
outsl
andl
inc
std
and
dec
imul
xchg
mov
add
jb
loopne
sbb
mov
mov
scas
add
xchg
fisttpll
clc
xlat
insb
mov
push
hlt
pop
pop
xorb
ljmp
test
mov
lcall
sbb
fldenv
jo
sahf
les
andb
mov
xor
ss
dec
xchg
inc
jl
xchg
dec
mov
push
and
push
pop
mov
outsl
into
adcl
adc
add
sahf
mov
in
iret
pop
adc
mov
pusha
dec
dec
pop
jmp
bound
stos
dec
pop
mov
test
mov
scas
jnp
mov
out
into
pop
xor
xor
arpl
dec
repnz
loopne
cli
in
jb
test
out
or
aas
das
scas
xorb
jmp
scas
imul
pusha
xchg
jae
in
pusha
js
dec
mov
out
scas
out
or
xchg
push
jo
inc
fstpt
pop
jo
out
pop
imul
idiv
jbe
ret
in
pop
dec
jg
popa
imul
addr16
or
mov
mov
fdivl
cmp
sbb
jns
mov
dec
aad
stos
cs
mov
iret
mov
dec
repz
syscall
flds
je
mov
lret
inc
jmp
fcmovnu
or
jp
test
jmp
fsts
lea
and
add
faddl
dec
xor
out
pop
push
loope
push
movsl
orl
and
cmpsb
inc
inc
cs
add
mov
rolb
adc
dec
lea
sub
fs
rclb
repnz
into
sub
in
popf
or
ret
sub
out
stos
or
lret
aaa
mov
or
mov
xchg
xor
movsl
std
sbb
lcall
lcall
inc
mov
lea
lret
andb
dec
punpckldq
pop
mov
aaa
in
fmuls
pop
arpl
test
mov
scas
or
popa
lret
lahf
andnps
mov
add
xchg
dec
movsb
call
cld
dec
sub
insb
push
add
jne
mov
push
ljmp
lods
mov
push
cmpsb
je
mov
pop
jae
xchg
lahf
cmp
hlt
cmp
pop
mov
jg
xchg
xchg
cltd
test
lods
int3
clc
sbb
shl
dec
xor
orb
addr16
inc
in
data16
push
insb
sti
pop
movsb
sbb
sbb
jmp
mov
xor
push
cmp
adc
imul
jge
jne
add
lret
rorl
dec
mov
movl
push
cli
repz
ret
mov
push
dec
sub
test
je
push
mov
in
in
mov
xchg
ljmp
sub
mov
fisubrs
jmp
cmpsl
out
shr
push
test
ret
mov
pop
popf
mov
mov
mov
push
pop
push
nop
imul
xor
mov
mov
daa
jb
mov
bound
sub
cmp
jge
xor
or
jb
adc
mov
jae
xor
enter
scas
pop
cmpsl
fistps
mov
rcrb
cmpsb
cli
mov
xchg
testb
mov
and
rclb
adc
cwtl
mov
ret
call
cltd
incb
xchg
ret
cmp
or
fiadds
bound
mov
mov
mov
push
cmp
lock
int
dec
xlat
inc
ljmp
inc
aad
pushf
jle
adc
sub
jmp
xor
push
leave
pop
movl
or
fwait
inc
shlb
aaa
mov
pop
xchg
dec
sar
stos
loop
test
addr16
push
xchg
nop
push
mov
stos
add
outsl
cmp
ret
sub
or
aam
enter
mov
cltd
push
lcall
daa
repz
sahf
xchg
popa
xor
pop
cmp
xchg
sbb
mov
clc
ljmp
in
lahf
fisubrs
lcall
push
dec
ja
cmp
mov
aam
inc
repnz
jp
fisubrl
clc
push
sbb
jecxz
jmp
sbb
pop
pusha
jmp
push
pop
stc
push
mov
sbb
mov
push
rolb
jae
mov
into
lea
pop
stc
mov
inc
clc
push
xchg
xchg
xchg
pop
adc
adc
stos
imul
mov
sbb
push
xor
shr
jle
lods
call
xchg
popf
int
test
inc
mov
inc
pusha
sub
pop
movsb
rclb
mov
imul
sub
repnz
xor
push
je
int
mov
sarl
lret
xor
pusha
sbb
rorb
xor
push
shrl
cmp
ret
xchg
in
fsubl
jecxz
mov
cli
pop
movsl
aam
ljmp
shl
imul
cwtl
mov
cmp
pop
xchg
or
jb
mov
xor
daa
hlt
add
popa
and
jge
xlat
test
or
xor
dec
adc
roll
jl
sahf
sub
pop
nop
mov
and
jno
inc
adc
fdiv
les
loope
mov
aad
pop
inc
outsb
lods
arpl
cmpsl
ja
jo
scas
and
xchg
insl
xor
addr16
push
jnp
push
orl
cli
cmp
push
cmp
rcl
xchg
dec
xchg
loope
cmpsb
sub
pop
mov
fsubs
repnz
cmp
repnz
push
shl
pushf
repz
cli
test
les
sub
rolb
scas
fwait
adc
push
jns
stos
mov
adc
mov
int
mov
xlat
clc
add
jg
xchg
jecxz
or
daa
out
sti
sub
pusha
mov
les
aaa
pop
fldenv
mov
xorl
enter
jmp
stos
imul
es
mov
mov
into
xchg
xor
pop
lods
inc
aaa
ficoml
fwait
jg
push
jmp
dec
xor
mov
fsubrs
pop
push
sti
pop
ja
cmp
insl
arpl
sbb
xor
mov
fnstcw
cmp
in
jno
scas
fmull
mov
mov
jecxz
and
inc
push
push
fwait
and
dec
cld
popa
adc
outsb
inc
sub
mov
sbb
iret
scas
mov
mov
lock
movsb
pop
xchg
add
loope
or
dec
fsubrl
loopne
lds
fisttpl
or
mov
cli
and
inc
adc
adc
adc
sub
xor
push
mov
fisttpll
imul
fisubs
push
repz
jns
xor
mov
or
pop
pushf
repnz
dec
push
fstp
pop
xchg
add
mov
aas
sub
and
push
jg
dec
sarb
cmp
sub
pop
push
pop
in
or
or
push
push
ljmp
lret
loop
push
cmp
mov
jmp
lcall
xchg
testb
cltd
inc
sub
loope
pop
adc
mov
insl
or
fdivrp
cld
sub
pop
sbb
scas
or
jo
lret
out
mov
dec
sub
push
iret
sahf
stos
sub
cmc
or
xor
pop
sbb
cmc
ffreep
push
ss
std
push
das
mov
xchg
pop
sbb
mov
dec
nop
mov
stos
cmp
mov
xchg
dec
sar
cmp
mov
ficoms
arpl
sub
fadds
lods
and
lahf
inc
cmc
popa
push
push
aas
js
out
pop
cmc
repnz
cmpb
mov
sahf
int
lea
xchg
ret
hlt
dec
test
sub
or
mov
mov
inc
je
mul
es
pop
lods
push
pushf
jne
mov
cmc
jno
mov
daa
sahf
dec
lret
sbb
push
in
jmp
or
enter
mov
ret
xchg
and
mov
aad
loope
cld
sbb
mov
mov
loop
js
mov
sbb
adc
out
mov
outsl
rcrb
xor
pop
dec
adc
call
pop
or
in
lods
push
testb
movsl
mov
push
out
add
pop
add
popf
jmp
out
xor
push
imul
cld
xor
ret
jecxz
or
sub
lds
cltd
orb
loope
or
inc
adc
xor
cltd
nop
hlt
xor
ds
daa
pusha
mov
inc
outsb
add
pusha
sub
and
cmp
mov
jns
jecxz
mov
pop
jge
mov
in
xor
xor
cwtl
xor
mov
call
mov
scas
loop
mov
cltd
mov
dec
mov
cmp
mov
popa
push
ret
jnp
je
outsb
mov
bound
lods
mov
mov
sbb
dec
mov
in
lret
or
dec
in
call
pop
sti
outsl
or
cmp
into
cmpsb
jb
ja
push
add
push
test
add
sar
add
insl
test
cld
xchg
cmpsl
mov
xchg
lret
fcompl
rorl
call
adc
xor
pop
mulb
movsl
push
jecxz
xchg
mov
das
lret
iret
out
lahf
inc
pop
adcb
es
sub
pop
pop
jge
pop
loop
fwait
mov
shlb
testb
pop
loope
mov
in
adc
test
jb
popa
jg
js
or
push
sub
aas
sbb
xchg
xor
shlb
pop
push
dec
cld
adc
int
out
cmpsb
adcb
divb
repnz
ret
mov
in
cmp
jecxz
push
pushf
stc
enter
stos
test
pushf
push
adc
popf
pop
lret
nop
icebp
jae
sti
push
mov
cmpsl
mov
inc
ficoms
sti
pop
sbb
add
adc
mov
out
sti
outsl
test
adc
push
mov
sub
ret
dec
cmp
cltd
stos
sub
pusha
inc
shlb
xchg
fnstenv
fildl
xor
pop
gs
push
roll
nop
repz
jbe
stc
jne
pushf
cld
dec
out
xor
dec
sbb
mov
inc
lcall
in
xchg
xor
imul
dec
fwait
and
pushf
sub
into
lahf
out
out
ljmp
sbb
lahf
insb
pop
shll
dec
mov
lock
jmp
test
inc
pop
jb
pop
sub
outsl
loop
orl
xchg
pop
mov
pop
inc
add
and
inc
outsb
lret
jmp
out
les
jg
repnz
inc
in
mov
adc
sub
mov
mov
sub
cmp
pop
cmp
pusha
mov
call
rdpmc
sbb
pushf
lods
pusha
sub
jg
jl
inc
sbb
ret
sub
push
dec
outsb
inc
pop
cmp
jo
xlat
stos
mov
ds
stos
lods
push
push
jo
ficoms
pushf
jne
and
pop
sarb
dec
xchg
inc
ret
or
test
pushf
js
jns
nop
andl
push
arpl
cmp
mov
fiadds
fstl
or
inc
or
and
push
mov
ljmp
mov
std
fisubrl
push
mov
cmp
lret
or
or
rorl
push
inc
cmp
push
push
leave
pop
cmpsb
pop
jne
pop
xchg
pop
lret
cmpsb
sub
dec
fs
bound
xchg
or
mov
mov
cmp
out
jbe
fildl
fisttpl
fsts
lds
xor
movl
test
outsl
shll
or
sti
and
push
aas
iret
sub
lcall
test
insb
outsl
and
insl
and
das
xchg
mov
push
pop
ljmp
ret
jae
xchg
push
popf
mov
call
js
std
cld
outsl
add
fiadds
push
mov
pop
xchg
addr16
js
cli
mov
pop
dec
jno
xor
test
sub
scas
push
loopne
orb
push
xor
nop
sbb
bound
jge
jnp
xor
and
pop
movsl
inc
jae
add
mov
pushl
sahf
mov
inc
inc
js
xchg
aaa
icebp
hlt
inc
xor
mov
pop
scas
out
push
add
mov
mov
sbb
out
push
cmpsl
hlt
inc
lock
clc
or
outsl
aam
push
dec
or
lods
es
cmpsl
fsubrs
mov
jns
repnz
push
sahf
in
hlt
pop
pop
fsubrl
inc
sub
or
pop
lods
pop
insl
or
push
fidivl
imul
pop
int
or
pop
xor
xchg
es
adc
sub
in
rcrl
fwait
hlt
inc
xchg
lcall
rcr
test
or
and
outsl
loopne
xchg
push
xor
imul
cmpsl
movsb
sti
sub
xor
sahf
outsl
mov
mov
add
mov
and
cmp
into
cld
push
push
rcrb
icebp
add
pop
pop
xchg
dec
js
xchg
xor
push
dec
add
sahf
xor
xchg
fdivs
movups
mov
xor
sahf
xor
and
jbe
divb
inc
or
mov
mov
popa
cmp
or
mov
pusha
jb
cmp
test
dec
loope
push
xchg
cld
pop
xchg
xchg
push
popf
aad
dec
or
jecxz
inc
lret
inc
jae
push
xchg
mov
into
or
test
insl
popa
lret
jo
sti
cmp
cmp
mov
repz
mov
mov
xchg
jge
dec
pop
jo
mov
cli
xor
lea
cmp
cmc
inc
or
pop
pusha
imul
mov
xor
mov
push
xor
inc
lcall
dec
push
push
les
mov
xor
inc
push
js
cmp
jno
pusha
das
mov
sti
scas
push
sbb
ljmp
pop
lea
sub
jno
dec
cwtl
iret
pop
lahf
loopne
sub
movsb
hlt
sbb
cmp
mov
inc
leave
mov
lods
jne
in
mov
imul
sub
and
mov
test
ret
sub
and
jmp
rorl
mov
outsb
xor
insb
pop
stc
cwtl
jnp
pop
roll
jecxz
movsb
xchg
xor
dec
jo
and
stc
ficompl
sti
or
movsl
cmc
dec
xor
shrb
repz
imul
push
xor
adc
mov
adc
std
dec
jbe
dec
sbb
inc
pop
aas
jnp
cmp
jle
inc
and
xor
push
cmovp
out
fiadds
sub
nop
fisubs
cmpsl
xchg
stos
xor
repz
mov
sbb
loopne
lock
add
cmp
mov
sub
mov
dec
mov
inc
fsubp
xlat
add
xor
in
into
cmc
leave
xchg
daa
addr16
jecxz
outsb
dec
jl
lahf
out
das
xor
dec
adc
lods
cltd
lock
or
mov
js
jae
push
dec
pop
inc
push
add
jle
or
mov
pop
dec
filds
dec
jge
cmp
rcrb
stos
rol
shrb
mov
sub
sub
je
insb
pop
std
cmp
loope
xor
mov
leave
jp
jg
inc
rclb
push
jle
push
out
pusha
jmp
or
xchg
inc
or
pusha
lods
mov
inc
adc
cmp
jb
icebp
sub
dec
push
xor
pop
jne
sbb
jns
inc
call
mov
rcll
adc
daa
mulb
add
aaa
icebp
mov
lahf
subb
mov
or
movsb
fildll
leave
fld
cli
jge
negl
outsb
push
cli
bound
adc
cmp
out
dec
sub
outsl
clc
sbb
xchg
mov
fcom
insl
pop
sahf
movsb
in
mov
jmp
cmp
xor
out
jmp
inc
push
jp
fs
cwtl
fistpl
repz
xor
repnz
mov
out
js
sub
adc
aaa
mov
rorl
out
pop
cmp
jo
in
lds
cmp
dec
sub
es
fnsave
js
lea
je
cld
das
jp
cld
push
mov
loope
mov
test
test
repz
pop
lcall
sbb
popf
jo
mov
shrl
mov
jb
or
mov
inc
inc
add
mov
jge
stos
fidivrl
sub
rorb
push
fsubrs
xchg
daa
adc
and
divl
ficoml
cmp
lods
sub
imul
addr16
popa
adc
mov
cmpsb
sti
fistpl
aas
mov
cmc
fwait
push
or
jno
pop
mov
mov
fmuls
shrl
mov
inc
movsl
addr16
icebp
lea
cli
fneni(8087
mov
mov
daa
jbe
mov
lcall
out
mov
test
xchg
inc
jae
outsl
lret
sahf
xor
push
lods
and
pop
test
cli
xchg
shr
push
lods
stos
push
jmp
cld
sub
add
lret
in
gs
jnp
insl
pop
frstor
push
js
xchg
jg
mov
mov
adc
cmp
cmp
cmpsb
dec
stos
dec
lret
mov
je
sbb
or
dec
bnd
pop
mov
jge
ja
out
mov
out
pop
pushf
test
xor
ss
sahf
lcall
fs
popa
mov
repnz
scas
ror
aaa
jns
xlat
xchg
mov
std
inc
lods
es
sbb
sub
mov
pop
test
sarl
shld
pop
ret
or
cwtl
sbb
pushf
repz
sub
adc
push
push
adc
sbb
mov
insb
pop
and
xlat
stos
mov
aaa
mov
leave
pop
fwait
adc
pop
popf
and
push
sbb
addr16
inc
add
adcl
out
ja
xchg
shll
pop
cmp
iret
pop
imul
mov
out
push
call
inc
jb
lock
xchg
std
insb
cmpsl
int
aaa
lock
sbb
stos
lds
adc
push
mov
xchg
cmpsb
dec
pop
cmp
dec
jge
das
je
and
jmp
xchg
or
pushf
fdivrs
mov
nop
cmp
int3
push
cmp
xor
push
xchg
int
xor
icebp
in
scas
inc
bound
sbb
xchg
jbe
fbstp
jge
push
mov
ss
pop
aad
iret
pop
xor
or
jecxz
push
cmp
mov
cmp
icebp
push
inc
xor
call
call
cld
dec
inc
popf
je
lds
dec
cmpsb
cmp
pop
test
and
push
dec
mov
outsb
dec
rcrb
dec
insb
in
in
xchg
mov
mov
outsb
add
pop
and
add
push
ds
mov
push
sbb
aam
push
sti
scas
inc
pop
pushl
cli
mov
or
sahf
dec
movsb
jo
push
jl
aam
xchg
mov
cltd
push
das
clc
jmp
push
cwtl
cmp
adc
add
mov
insb
add
jne
cmp
pop
ss
cli
pop
xchg
std
push
xor
push
or
adc
pusha
test
add
sbb
test
pop
clc
xor
sub
inc
lret
aaa
aas
pop
mov
adc
pop
mov
les
enter
push
and
repnz
sahf
pop
sahf
mov
dec
cltd
cltd
mov
cmpsb
push
sarl
sbb
adc
stc
adc
mov
dec
cmpsl
insl
data16
fwait
test
loopne
mov
imul
sbb
shr
xlat
test
xor
cmpsl
or
inc
pop
test
mov
pop
daa
stc
jo
rcll
add
scas
ja
jns
popa
outsb
lret
ret
cli
test
test
lcall
push
add
push
mov
je
and
lds
fdivrl
outsb
std
loopne
insl
xor
idiv
arpl
fildll
cmp
xchg
les
stos
cmp
xchg
xchg
mov
nop
dec
jae
andb
or
and
imulb
cmpsl
cwtl
sbb
mov
jp
xor
xchg
cmp
mov
mov
out
xlat
std
push
jns
xor
lea
jne
loope
fcmovbe
testb
nop
lcall
sbb
js
test
lods
jle
jl
imul
mov
mov
xchg
lods
and
pop
push
lock
popf
mov
mov
imul
pop
mov
hlt
shl
mov
loope
dec
sbb
add
sub
iret
dec
fdivrl
jmp
push
add
cmpsl
out
jecxz
mov
or
xchg
dec
inc
and
insb
lods
cmp
dec
scas
repnz
test
cld
mov
pusha
test
pop
mov
sbb
pop
in
cmp
or
inc
rorw
cmp
cld
cltd
incl
cmp
in
popa
icebp
sub
push
dec
popf
sub
ror
cltd
loop
in
addr16
ja
das
add
shlb
mul
pushf
out
pop
negl
aam
mov
jle
xlat
cmp
or
mov
dec
lock
xor
xor
insb
outsb
jbe
nop
jge
clc
shrb
repnz
popa
cwtl
ljmp
testb
cmpl
repnz
sub
jns
and
fs
leave
aam
in
outsb
jmp
popa
addb
dec
js
in
push
aaa
ficoms
push
xorl
out
out
and
push
aam
mov
shl
scas
leave
lock
push
fisubrl
lock
cmc
in
xchg
rorb
lods
jecxz
pop
pop
pop
and
or
add
dec
mov
inc
sbb
dec
arpl
sub
lea
adc
in
mov
rorl
inc
sub
xor
ja
ja
gs
xor
ret
test
xor
mov
push
add
ret
shlb
push
push
call
mov
fwait
lods
pusha
push
lea
in
rorb
out
jl
imul
idiv
stos
hlt
inc
push
hlt
dec
test
xchg
loopne
loope
inc
push
xor
xor
mov
jl
cmp
mull
xlat
xor
das
fs
test
test
mov
mov
cmp
or
jecxz
add
into
lods
fstps
mov
jmp
dec
xchg
jb
gs
xchg
sarb
fadds
cmc
testl
gs
je
loop
stc
scas
mov
push
out
hlt
arpl
loope
repz
lret
mov
sti
ss
push
in
es
mov
cmp
das
clc
cli
adc
jbe
push
loopne
push
or
cmp
movsl
imul
or
mov
and
mov
pop
sbb
sub
cli
loope
sbb
and
pop
cwtl
insl
dec
cld
push
loopne
out
mov
add
dec
mov
enter
jae
inc
jg
sub
xor
jnp
push
stos
idivb
dec
fwait
imul
lcall
js
mov
repz
test
or
ja
leave
test
pusha
push
jne
adcb
popf
imul
dec
mov
xchg
adc
stos
mov
pop
insb
shll
add
inc
test
repz
dec
fwait
xchg
jp
stos
vpmacswd
or
add
fidivrs
mov
pushf
or
clc
lcall
mov
sub
cmpsb
sti
pop
fs
xorl
aaa
inc
add
push
mov
test
sbb
lcall
cld
insb
pusha
data16
int
shll
push
add
dec
xchg
mov
xchg
aam
xor
cmpsb
cmpsb
test
sbb
lcall
jle
std
scas
add
scas
adc
add
xchg
mov
fisttps
les
mov
leave
sbb
and
iret
inc
sbb
xor
rcr
loopne
orb
sub
sbb
and
sub
lcall
pop
push
add
iret
mov
cmp
xlat
into
sbb
outsb
stos
xor
jae
mov
jne
stos
lods
jo
jecxz
dec
add
push
mov
mov
sbb
sbb
push
lock
hlt
jg
mov
adc
xor
mov
inc
xchg
fldcw
xchg
das
inc
ja
lret
popl
or
sbb
sarb
jge
add
mov
xorl
popa
enter
inc
xchg
das
lock
cmp
mov
sbb
in
jb
cwtl
mov
ret
xchg
dec
jle
aas
es
push
gs
adc
test
adc
ss
sbb
and
neg
lds
js
or
dec
push
hlt
popa
call
cmp
popa
orb
dec
push
cmpsb
xchg
out
nop
mul
add
sahf
mov
test
mov
mov
ret
jge
std
stos
and
popf
lods
in
xor
lahf
sbb
lea
inc
daa
mov
add
add
lds
mov
into
xor
adc
out
pop
daa
lock
add
into
fadds
stos
cmp
xchg
aad
sahf
mov
imul
movsl
mov
mov
jbe
clc
mov
lret
ror
dec
mov
sub
mov
jns
or
xlat
lds
and
cmp
push
sbb
mov
and
out
inc
sbb
mov
adc
mov
lds
mov
or
jg
loopne
pop
jbe
mov
xchg
aas
or
sbb
dec
mov
outsb
pop
shlb
xlat
push
lcall
inc
stos
mov
dec
cmp
and
ds
add
fnsave
inc
lea
movsb
fbld
and
mov
lcall
sar
movd
push
shlb
shrb
dec
in
in
in
inc
sub
sbb
xchg
test
push
push
lods
dec
jns
pop
in
sbb
into
daa
bound
out
fnsave
popa
mov
xor
mov
mov
or
je
dec
add
sub
mov
inc
sub
push
pop
jmp
cmp
xchg
mov
shll
daa
or
push
ret
ss
fildl
push
sarb
mov
sar
push
fcomp
sub
or
wrmsr
mov
dec
or
pop
adc
mov
mov
mov
xchg
je
mov
jg
jg
jmp
push
into
dec
test
ret
adc
xchg
sahf
adc
cld
leave
lcall
vcvtss2si
aas
and
push
call
lahf
cmp
mov
xor
adc
inc
inc
hlt
pop
fstpt
jno
sbb
loopne
mov
int
stos
mov
mov
xlat
insl
and
cltd
cmp
jle
dec
push
outsb
pop
inc
mov
xlat
dec
lock
push
iret
and
push
lds
out
fwait
pop
lock
inc
aas
mov
and
push
pusha
punpckhbw
in
mov
imul
cmc
scas
mov
push
add
pop
andb
and
xor
nop
mov
xchg
cmp
out
arpl
repz
aad
shrb
daa
imull
sti
adc
icebp
or
lret
sbb
sub
push
mov
inc
ficoms
imul
imul
mov
sub
lods
enter
xor
sub
inc
jnp
mov
cld
icebp
adc
inc
add
sbb
xlat
int3
iret
rcrb
sahf
subl
popf
call
cmp
in
xchg
stos
xor
dec
aaa
push
mov
int
loop
in
aam
xor
pop
and
iret
or
jo
push
push
xor
std
out
jle
jbe
push
mov
fists
jp
ror
adc
inc
bound
ds
subb
pusha
shld
or
fldt
in
testl
fs
test
cs
xor
dec
jb
sub
aaa
lds
or
pop
xchg
out
popf
ftst
ficoml
cmp
rcl
sub
mov
add
lret
or
inc
fdivrs
shlb
nop
mov
call
aaa
jle
sub
push
jmp
stc
pop
push
sbb
repnz
lods
rcl
xchg
mov
or
inc
or
cmpsb
fs
rcrb
pusha
push
sub
dec
mov
int
push
mov
mov
sub
mov
mov
pop
ljmp
idiv
sub
ljmp
sti
repnz
xchg
in
sahf
mov
addr16
leave
std
sbb
rorl
sbb
popa
repz
fadds
dec
icebp
lock
xlat
xchg
push
negb
pushf
add
ljmp
jecxz
inc
push
je
enter
mov
fsubs
jle
movsl
in
add
cmpsb
and
es
jl
int3
mov
lock
sbb
inc
add
push
std
push
mov
add
je
insl
aas
test
xchg
flds
jmp
shll
mov
js
test
mov
ss
cmpsb
or
ja
cmp
cmpsl
xlat
pop
mov
pop
stc
adc
sbb
xlat
jo
cltd
repz
scas
jmp
inc
dec
inc
sbb
jmp
and
and
test
insb
jo
pop
loop
aaa
sahf
adc
add
xor
mov
mov
ret
cs
sbb
cwtl
fwait
outsb
adc
pop
jge
in
jmp
xor
or
in
add
mov
mov
enter
add
dec
fsubrs
aad
movsl
hlt
out
inc
pop
cli
mov
jmp
add
imul
cmp
push
daa
mov
push
mov
mov
fwait
insb
cmpsb
in
sbb
int3
adc
xor
scas
dec
sbb
imul
jbe
inc
shrb
lock
imul
xor
jmp
and
xor
rorl
cmp
in
fsubs
mov
sub
adcl
sbb
notl
js
inc
gs
cs
arpl
lahf
loopne
adcb
pop
in
cmp
addl
ret
sbb
sub
jne
out
cmp
mov
xchg
fwait
aaa
jp
pop
popf
add
push
pop
dec
ficomps
dec
roll
insl
call
jl
call
xchg
data16
mov
jo
fisttpll
inc
stos
fs
add
adc
xor
loopne
jae
mov
or
push
sbb
xchg
add
test
xor
add
repnz
sbb
xor
daa
cwtl
arpl
mov
adc
sbb
incb
adc
daa
cmp
outsb
dec
dec
inc
bnd
cmp
sub
pop
cmovl
ficomps
scas
loop
or
aaa
pop
add
push
xchg
aaa
int3
fcmovnu
leave
push
cmp
repnz
repz
dec
add
inc
outsb
flds
or
inc
sbb
jp
outsb
hlt
gs
pop
mov
push
inc
sbb
in
iret
jecxz
sbb
mov
jb
push
rcrb
pusha
jl
pop
int
std
lret
pop
popa
pusha
xor
jb
fdivrl
jbe
xor
je
push
ret
adc
jmp
jge
rcrl
push
cmpsb
jp
xor
xchg
lret
inc
nop
push
ret
lahf
ds
xor
je
shrl
int
test
subb
sbb
lea
and
mov
fcompl
mov
lret
out
in
out
xor
inc
aas
je
mov
and
mov
stos
jp
scas
sahf
mov
movsb
fisubl
push
xchg
test
lock
es
fstp
jle
jnp
lods
or
call
sub
and
sbb
xor
out
iret
sbbb
pop
jns
jns
je
les
cwtl
gs
or
popa
add
fsubrp
xor
cmp
add
jecxz
lea
cmp
cwtl
fldlg2
jmp
inc
cli
lahf
stc
push
insb
and
jge
push
popl
or
cmp
dec
out
loope
sbb
ja
push
mov
bound
add
sbb
divl
adc
in
cmp
jnp
and
pop
mov
mov
jmp
lods
dec
call
lahf
enter
mov
add
xchg
arpl
push
ja
or
sbb
jp
jge
ljmp
sub
lret
in
aaa
lcall
imul
dec
fisttps
inc
into
mov
mov
or
cltd
sahf
aam
adc
aas
les
dec
cmp
data16
rclb
mov
push
rorl
mov
pusha
ficoml
jb
adc
pand
inc
dec
sub
add
pop
push
push
adc
mov
inc
rorb
mov
outsl
mov
icebp
std
and
and
push
aad
lods
pop
int3
and
arpl
mov
cltd
mov
test
push
or
clc
mov
fists
and
mov
jb
mov
shlb
pop
daa
jo
int
cwtd
pop
mov
mov
sar
cltd
negb
adc
orl
adc
inc
repz
jecxz
xor
adc
mov
add
cmpsb
mov
cld
dec
loopne
jg
dec
jge
repnz
jae
mov
rclb
xchg
pop
pop
cwtl
dec
les
ret
sbb
inc
dec
dec
stos
mov
inc
lcall
and
xchg
inc
aam
sbbb
add
add
push
cmp
jne
out
mov
adc
push
inc
mov
or
mov
lds
push
mov
ficoms
loop
mov
jle
sbb
jge
pop
out
xchg
test
xor
hlt
out
xchg
jnp
or
inc
inc
push
dec
arpl
daa
and
incl
pop
in
sbb
jecxz
lods
xchg
mov
push
test
jge
mov
ret
and
xchg
aas
mov
xor
test
xchg
es
gs
lods
mov
dec
jle
mov
cmp
aad
mov
jmp
xchg
shrl
mov
add
lcall
xor
lods
sub
mov
rclb
outsl
sbb
daa
or
xchg
or
xor
push
add
xorb
nop
inc
imul
mov
out
adc
loop
into
lcall
popf
test
xlat
test
ds
lea
sbb
inc
sbbl
add
xor
je
adc
and
xor
mov
in
imul
sbb
jno
stos
nop
leave
add
pop
ljmp
aas
sub
and
cmp
cmp
pop
sbb
movl
mov
popa
mov
and
sahf
push
mov
pop
xchg
push
inc
into
lods
arpl
scas
add
test
inc
add
pop
and
pop
sub
pop
fstps
jge
pushf
xchg
icebp
or
mov
or
xor
mov
inc
incl
push
out
daa
xor
gs
sahf
mov
into
js
leave
cmpsl
int3
addl
popf
out
push
mov
stos
or
or
aaa
std
xor
sub
pop
ret
dec
jne
sbb
imul
pop
test
outsl
shlb
pop
dec
aam
movsb
or
ds
add
aas
inc
mov
or
pusha
loope
xchg
hlt
jle
push
insb
ja
pop
scas
inc
mov
dec
xor
xlat
or
ljmp
sti
into
dec
daa
jp
sarb
push
sub
adc
add
cmp
push
or
inc
jle
fninit
bound
dec
and
leave
xor
movsl
in
into
sub
cmp
aad
ljmp
je
lds
mov
sub
pop
mov
push
jo
addr16
inc
push
or
lods
pusha
cmpsb
jnp
and
testl
or
fisttpl
test
fimull
push
ret
repz
and
cli
mov
rorb
pop
icebp
mov
fisubrl
notl
lods
sti
subl
mov
pop
test
jnp
scas
ja
stc
ds
inc
and
movsl
push
ss
sub
aad
dec
imul
dec
notb
xor
xor
pop
push
sub
and
xchg
jl
push
out
insb
push
mov
cmp
cwtl
jns
leave
push
or
adc
scas
cmpsb
mov
decb
inc
lea
mov
stos
daa
pop
movsb
push
or
int3
lods
sub
popf
adc
push
jle
enter
outsb
dec
pop
sbb
rorb
xor
movsl
mov
push
mov
nop
xlat
lahf
inc
lahf
inc
insb
sbb
push
out
loopne
imull
xchg
out
and
sbb
pop
stc
adc
dec
pop
test
xchg
sub
and
push
pushf
es
lock
or
inc
mov
push
mov
cwtl
lahf
das
dec
pop
test
dec
das
add
data16
je
and
mov
mov
cmp
fsubs
cmp
add
divl
inc
xchg
cmp
cltd
xor
dec
adc
lret
push
mov
add
cs
cmp
lcall
jge
mov
sub
jno
inc
mov
xor
stos
cmp
popa
jle
mov
gs
test
clc
test
mov
rcl
lea
sbb
in
jbe
inc
inc
in
xchg
mov
mov
pop
pop
cmp
cwtl
adc
loope
sti
nop
scas
pushf
sub
fwait
cld
loopne
or
mov
pop
lods
cmp
out
js
mov
pop
int
out
fbstp
mov
xchg
or
scas
loope
jl
aaa
xchg
adc
test
es
lods
out
rcll
cmpsl
popa
insb
scas
sti
jmp
add
cs
jge
pop
dec
fadds
jnp
cwtl
test
ret
ss
pop
cld
sub
cmpsb
incb
outsb
or
push
lods
sbbb
inc
cmc
out
sbb
jecxz
mov
jecxz
cmpb
jmp
xchg
in
sub
cltd
repnz
in
xchg
pusha
ficoms
mov
in
out
mov
mov
push
aam
lcall
sub
fildl
incb
outsl
pushf
inc
jmp
test
nop
sub
das
test
add
mov
dec
aam
je
pop
mov
mov
insb
stos
jmp
push
sub
int3
mov
xor
inc
push
mov
add
rorb
mov
sub
out
test
fbld
xchg
scas
xor
xchg
ss
add
sub
fdivrl
in
pop
gs
and
cmp
or
nop
xchg
jp
xchg
add
idivl
jmp
adc
mov
je
subl
ss
test
xchg
adc
inc
imulb
jns
jmp
stos
aad
xchg
inc
push
and
dec
lret
fcmovnu
mov
adc
xorb
int3
insb
sbb
lea
jb
adc
xchg
inc
jne
imul
mov
or
repnz
push
out
lods
out
subb
iret
divb
in
insl
jae
sbb
test
cwtl
stos
sub
pop
movsb
cmp
pop
dec
mov
out
ror
nop
push
cmp
nop
jo
mov
cmpsb
jb
xor
cmp
adc
cmp
inc
dec
or
dec
sub
gs
dec
popf
testb
out
ss
out
pop
iret
andl
mov
mov
inc
rcrl
out
jne
xor
sbb
es
inc
xchg
adc
inc
int3
pop
xchg
mov
out
dec
cmp
jmp
jge
adc
in
stos
in
loope
cmp
add
mov
add
xchg
mov
xorl
or
adc
mov
ja
icebp
movsb
or
pop
xchg
add
cmp
sub
imul
jge
jnp
xor
fcmove
rcrl
sarl
adc
xchg
push
jbe,pn
test
cld
ss
push
nop
fnsave
and
dec
xchg
in
dec
imul
mov
or
pop
push
pminub
sbb
jge
adc
fisttpll
cmp
mov
mov
mov
js
ljmp
fcoms
xchg
fldcw
fldt
push
mov
pop
inc
movsb
jmp
fiadds
push
int
inc
sub
movsl
cmp
cwtl
fldt
ret
dec
add
shlb
jge
fistl
adc
mov
xor
jne
sub
ret
repz
sub
xchg
pop
xchg
inc
jb
mov
outsl
xor
and
rol
lahf
popf
mov
imul
push
adc
mov
and
lret
cmp
sti
fnstsw
push
int3
test
ljmp
mov
test
sbb
or
jle
dec
mov
pop
and
and
pusha
out
and
sbb
xchg
push
pop
mov
jno
clc
aas
cmp
xchg
gs
sbb
xor
std
cmpsl
mov
test
push
fwait
and
scas
mov
push
int3
stc
mov
lods
fwait
mov
and
jl
sbb
clc
cli
ficomps
arpl
cwtl
jnp
jnp
out
mov
xor
out
and
pop
aas
jae
mov
cmc
sub
dec
or
xchg
sbb
mov
shrd
adc
int
jg
cmp
inc
inc
push
popa
add
add
insl
sub
sbb
jecxz
add
sub
or
stos
adc
pushf
test
fwait
sahf
aad
or
shrl
mov
popa
and
add
inc
mov
jg
sub
add
dec
ja
sti
add
or
dec
shr
mov
aam
mov
add
enter
es
push
test
repz
lods
sub
lods
fsubl
and
sub
inc
xor
test
cwtl
enter
fadds
jmp
cmp
test
cs
dec
aad
ret
mov
test
xlat
push
dec
hlt
rclb
js
cld
mov
repz
xor
mov
adc
dec
sub
or
cmp
cmp
imul
add
idiv
adc
or
cwtl
push
cmp
add
rclb
xchg
pop
out
sub
arpl
std
push
arpl
fsubl
xlat
xchg
ret
movsl
lret
dec
cmp
shrb
shlb
lds
fiaddl
push
mov
rcll
xchg
mov
jge
add
inc
cmp
cmpsl
or
loope
mov
xchg
rclb
fimuls
mov
mov
ret
lock
loop
sub
iret
jg
cmp
or
pop
lcall
jns
jo
jb
repnz
fld
fistl
in
mov
repz
jmp
xchg
les
fadd
mov
adc
and
stc
xchg
ds
pushf
mov
aas
mov
dec
fcom
mov
outsl
inc
dec
and
pop
leave
pusha
cs
jg
stc
mov
ja
sbb
int3
xor
mov
repnz
nop
pop
pop
jb
cmp
mov
rorb
jge
in
lods
mov
mov
aam
ret
jne
sbb
mov
and
xchg
rcll
jnp
cmp
cwtl
or
or
ds
and
cmp
js
or
xsha256
cmpsb
adc
cs
inc
mov
xchg
fdiv
mov
xchg
in
add
sbbb
sbb
test
lock
add
fmuls
or
test
jp
pop
sahf
imul
jbe
inc
data16
mov
rcrl
cmpl
push
inc
cmp
mov
outsl
dec
cs
pop
xor
shrb
push
cmp
xchg
xchg
cmp
cmp
and
sbb
sbbl
movsl
in
or
repnz
mov
arpl
lcall
adc
lock
testb
xor
mov
pop
fcmovnbe
mov
adc
not
dec
rcr
out
test
inc
cmp
mov
jne
loope
push
fsincos
test
pop
add
ja
flds
lods
popa
xchg
jge
push
sbb
lea
fnstcw
fcom
xchg
jo
xor
xchg
add
cmpsb
adc
mov
push
lahf
sbb
or
rcl
sub
fwait
punpcklbw
popf
mov
repnz
stc
enter
sub
adc
mov
fcoml
arpl
loop
jb
outsb
les
rcr
aaa
jecxz
insb
add
add
pop
mov
fidivs
cltd
and
test
movsl
andl
imul
push
lea
mov
jle
or
cmp
jno
add
inc
push
cmpsl
xorb
sub
ss
or
sarb
sbb
sbb
mov
jns
popa
into
jb
jne
cwtl
mov
and
xchg
decb
loopne
cmp
push
sub
addb
in
cmc
ret
and
mov
jns
mov
dec
mov
xor
pop
fistpl
adc
mov
ret
leave
or
cmp
push
xchg
jmp
mov
pop
aad
mov
fsts
xor
test
jbe
or
sbb
xchg
push
dec
stos
cmpsb
xor
daa
dec
and
in
stos
pop
icebp
pop
and
mov
jle
jae
fstpl
or
push
pop
dec
sbb
fisttpl
or
inc
sub
mov
pop
out
cmc
pop
xor
pushf
outsb
push
aaa
xorl
je
imul
lods
popf
cmpsb
adc
std
dec
mov
repz
mov
pop
xor
mov
dec
or
sub
enter
in
inc
gs
les
outsb
mov
push
bound
and
mov
and
movq
lea
push
addl
ret
inc
gs
xor
or
testb
cli
adc
sub
cli
mov
pop
dec
cld
mov
fwait
out
or
push
jne
xchg
test
dec
pop
add
test
imul
sbb
push
shrl
add
xor
mov
das
pop
mov
push
add
dec
xlat
or
scas
sub
sbb
sbb
push
inc
std
jle
cmpsb
mov
addr16
push
push
push
dec
sub
in
mov
inc
aaa
adc
fs
xchg
xchg
js
jg
sbb
leave
cmp
popf
push
push
or
aad
push
test
repz
push
pop
out
pop
mov
cs
adc
or
push
adc
jl
aas
push
aas
shll
jno
push
mov
sub
bound
or
mov
and
int3
fidivrl
movsl
test
out
in
xchg
mov
mov
add
loope
sbb
xchg
mov
pop
shlb
addr16
xor
push
shlb
scas
mov
ss
sub
stc
movl
cltd
fisubs
pop
aaa
test
leave
popa
test
add
xor
cli
gs
pusha
xchg
adc
sub
or
jb
sbb
sub
xlat
es
dec
add
mov
sbb
es
xchg
pushf
arpl
fs
adc
add
push
and
imul
jns
adc
imul
or
inc
or
pop
outsb
push
outsb
daa
test
or
repz
outsl
test
shlb
popf
fs
and
xchg
addr16
lea
and
dec
and
pop
fcomp
ds
jecxz
pop
icebp
cmpsl
repz
cmp
and
push
sti
add
mov
cmp
arpl
xor
test
inc
xor
call
adcl
fimull
sbb
dec
shlb
add
leave
mov
ret
inc
dec
xchg
or
adc
xor
cmp
stos
rcr
cmp
jno
insb
cmc
call
cmpsb
pop
jg
fsubrs
xlat
loopne
out
ret
or
aad
aas
fcmovb
pusha
cld
lea
xorb
js
rorl
das
cld
movsb
fs
xor
push
xchg
mov
arpl
fucomi
lock
outsb
mov
xchg
scas
add
adc
dec
cli
test
popf
adc
lods
adc
lods
ljmp
cmpsb
lret
xchg
insl
mov
inc
out
jmp
icebp
js
insb
push
pop
stc
jmp
out
cmc
dec
jecxz
mov
js
loop
cmp
rcrb
gs
pop
sub
dec
sbb
cmpsl
and
ds
aad
xor
shll
dec
iret
cmp
or
mov
imul
movb
add
popf
mov
push
push
ds
lods
inc
scas
dec
mov
popa
pop
lock
lods
adc
andl
mov
xor
pop
orb
add
lea
mov
aas
inc
pop
mov
out
mov
loop
imulb
push
pop
fidivrl
int
xchg
jno
jns
pop
add
insl
fdivs
les
xchg
dec
inc
lock
hlt
arpl
or
cs
jns
xchg
insl
shl
leave
cmc
cmpsb
std
sbb
dec
imull
fs
inc
test
imul
push
mov
push
imul
and
loopne
jp
mov
cmovge
add
mov
jne
sub
or
gs
data16
mov
mov
mov
rorl
dec
mov
pop
jg
rcl
inc
push
xchg
sti
mov
stc
insb
jno
in
ja
popa
cltd
outsl
lea
rcrl
push
or
int3
pop
inc
scas
lret
xor
sub
ds
iret
cmp
inc
call
adc
jmp
clc
xchg
out
lock
push
cmc
std
jmp
adc
enter
add
arpl
mov
jmp
cmpsb
or
jl
aaa
dec
inc
lock
jl
jns,pn
adc
pop
shr
fidivrs
mov
out
mov
inc
push
xor
push
popf
add
adc
mov
fnstcw
mov
daa
push
sbb
outsb
mull
adc
lahf
xor
leave
pusha
sbb
lock
ds
clc
xchg
xchg
cs
loop
dec
ljmp
mov
inc
or
jo
push
lea
cli
mov
insl
and
mov
add
adc
stos
push
jl
add
xchg
mov
rorb
outsb
push
fsubs
xchg
sahf
xor
sbb
jmp
adc
push
pusha
push
pop
or
lret
jl
rcrl
push
lcall
les
mov
test
push
xorb
out
pop
mov
push
mov
cld
jno
xchg
cmp
mov
mov
and
mov
sub
xchg
lods
and
test
test
sub
cmp
xchg
and
or
jnp
add
lea
and
stos
adc
ds
xchg
stos
in
insl
sbb
pushf
imul
fcoml
adc
inc
mov
fsubs
test
adc
dec
add
das
and
push
es
pop
stc
mov
pop
dec
mov
sbb
ss
jb
das
das
movsl
jge
sbb
pop
nop
loop
sbbb
mov
mov
cmp
mov
mov
adc
sub
jbe
daa
push
test
dec
lods
push
adcb
sub
aaa
jp
cmc
test
push
push
pop
push
adc
mov
daa
aad
lods
or
ficoms
pushf
jns
push
push
icebp
mov
arpl
fwait
imul
dec
push
dec
pop
jle
pop
adc
fsub
imulb
lock
test
into
sti
outsl
pop
arpl
dec
das
data16
jnp
ljmp
mov
fildll
add
leave
and
insb
into
addb
push
outsb
jmp
add
adcl
out
cmp
sub
sbb
dec
ljmp
and
xchg
adc
jecxz
and
xor
mov
pop
jo
stc
mov
cli
ja
icebp
xchg
mov
xchg
jecxz
aaa
jns
fadds
enter
dec
xchg
jno
push
xchg
lcall
fnstenv
stos
inc
sbb
push
lcall
sti
add
nop
pushf
jmp
push
adc
xchg
insb
addr16
push
cmp
mov
dec
insb
xor
mov
jno
xlat
and
sbb
das
jne
push
push
nop
or
pop
sub
cmpsl
pop
push
stos
sub
loopne
and
pop
jecxz
int
cld
into
daa
or
inc
call
fs
mov
or
dec
xor
sub
adc
sbb
sbb
xchg
jecxz
and
push
les
scas
je
scas
repnz
pop
xor
cmp
jp
xorb
call
and
mov
cmc
divl
sub
pop
cmpsl
fstl
jmp
mov
out
jnp
loope
inc
in
mov
cmp
sub
dec
gs
push
inc
dec
and
ret
mov
xchg
jno
xlat
mov
sub
jp,pt
push
inc
nop
pop
imul
add
push
arpl
jno
pushw
nop
pop
adc
lret
lods
stos
xorl
dec
ret
push
fildll
mov
xor
xor
cmp
stos
sbbb
cmp
adc
sub
cmp
mov
sahf
shrb
xor
sahf
xchg
ffree
jecxz
rcll
sub
cs
ret
lcall
adc
pop
inc
fsubs
das
xchg
sub
pop
jecxz
out
sbb
mov
mov
stos
inc
jne
add
push
and
bound
jns
cmpsl
iret
jecxz
outsb
stos
scas
mov
mov
rorl
loope
lcall
adc
jno
mov
arpl
mov
jnp
push
adc
jge
jnp
jp
xor
mov
sbb
jbe
mov
outsb
scas
cmpsl
push
stos
cmp
and
inc
test
int3
mov
jl
pop
aad
ljmp
cmp
cmc
xchg
sub
std
in
mov
outsl
cwtl
in
mov
inc
lock
mov
jecxz
ds
xlat
xchg
data16
jne
das
in
fisubrl
mov
xchg
and
mov
out
lret
or
ret
inc
jae
outsb
cmp
mov
popf
jnp
cmpsb
lahf
test
sub
jo
add
push
loope
cmp
icebp
je
sub
test
pop
mov
shl
dec
sbb
outsb
jo
mov
xchg
dec
xlat
mov
and
push
out
stc
xor
sub
je
xchg
fwait
ret
xor
int3
inc
cltd
sti
data16
test
push
inc
sbb
mov
jno
movl
or
lds
mov
xchg
pop
testb
push
daa
jbe
fdivp
daa
adc
lea
stos
sbb
xchg
mov
data16
push
mov
testl
mov
mov
clc
stos
orb
ret
pusha
sub
mov
xchg
cli
or
lea
es
leave
and
cmp
sub
mov
sub
daa
cltd
pusha
mov
imul
fadds
pop
inc
sbb
inc
cmp
data16
lcall
inc
pop
pushf
addr16
dec
add
inc
inc
insb
mov
xor
into
jnp
adc
cmp
push
mov
adc
pop
inc
add
mov
mov
repz
shll
adc
lods
lock
lcall
test
jl
sub
xor
pop
pop
pop
mov
xchg
lcall
jnp
enter
mov
clc
int
cmp
pop
insb
push
and
test
xor
das
not
jmp
pop
mov
int3
xchg
xchg
out
imul
and
loopne
outsl
dec
loopne
push
sbb
cmp
sub
scas
addr16
gs
or
mov
imul
ljmp
fdivs
mov
add
xchg
popf
in
cmpsl
in
adc
or
jle
fcomip
pop
repnz
jno
xchg
aaa
jge
aad
scas
shll
pop
push
sbb
inc
push
xor
rcrl
shll
jle
pop
insb
jge
divb
jns
mov
mov
shrl
dec
sbb
call
dec
sbb
loop
push
cwtl
mov
push
mov
shr
add
pop
add
mov
adc
mov
insb
mov
clc
stos
mov
mov
pop
add
xor
unpcklps
jecxz
lcall
ret
or
mov
subb
inc
cmpl
jnp
loop
sbb
mov
addr16
pusha
push
push
inc
fwait
push
xchg
lock
mov
js
mov
clc
lods
fwait
addr16
jb
dec
lahf
scas
popf
out
jecxz
or
pop
push
dec
lcall
scas
aad
mov
scas
lea
jae
data16
jb
dec
mov
lock
outsl
sub
pop
loope
push
jnp
mov
push
nop
jl
push
ret
cmc
mov
or
push
cli
push
xlat
mov
or
mov
hlt
pop
cmp
gs
icebp
dec
leave
test
cli
sti
loope
jae
and
jecxz
cltd
cmpsb
rol
mov
xor
mov
or
leave
lods
jae
stc
imul
neg
push
jne
jmp
inc
in
xor
inc
mov
arpl
or
bound
cmp
adc
ficomps
fiaddl
out
push
shr
lret
or
mov
mov
orl
repz
pop
push
imul
mov
cmp
mov
aam
push
sub
adc
bound
inc
test
xchg
mov
jmp
aam
aad
jns
rcrb
xchg
jne
popf
sbb
dec
fisubs
loop
fwait
push
and
adcl
push
mov
out
imul
mov
or
cmp
jl
dec
pop
and
movb
sbb
fsubs
repnz
dec
mov
xor
or
jno
mov
cltd
in
imul
cmp
cmp
xor
out
xchg
cltd
and
push
xor
std
add
pop
dec
xchg
shrb
pop
adc
hlt
popf
rcr
dec
out
xor
jg
sti
iret
ret
pop
filds
pop
jbe
inc
xor
stc
aas
inc
or
adcb
cmpsl
mov
icebp
ds
pop
test
aas
sub
das
mov
popf
mov
lret
pop
daa
inc
pop
loope
add
sub
inc
rclb
mov
sub
loopne
pop
jg
dec
pop
push
xor
fldt
jb
sub
dec
and
dec
into
mov
aam
iret
incl
xlat
negb
scas
push
or
or
adc
fidivrl
imul
insb
gs
cmp
dec
sub
call
ret
pusha
xor
xor
movsw
inc
clc
jbe
fnstsw
xor
popa
sahf
xchg
mov
lea
cmc
jp
popf
cmp
idivb
rcr
push
es
arpl
aaa
dec
loop
xor
and
cwtl
mov
sub
repz
inc
ljmp
adc
pop
adc
jp
mov
stos
stos
loope
cli
inc
xor
negl
repz
mov
jecxz
arpl
mov
push
xchg
push
xor
js
sub
loope
and
shrb
icebp
push
jns
jl
iret
mov
xchg
jns
cwtl
mov
repnz
push
xlat
mov
jnp
sub
sarb
push
mov
sbb
sub
fimull
in
ret
outsb
xor
add
fldcw
pop
repz
lcall
xchg
and
cmpl
pop
rorl
sbb
imul
cmc
aaa
mov
aad
ds
xorl
sbb
push
ret
xor
jae
test
mov
in
pop
mov
or
cmp
xchg
fs
arpl
cmp
loop
mov
mov
add
lds
lret
fsubrs
push
inc
sbb
lret
or
fldt
in
push
dec
xchg
pushf
sahf
fs
int
sub
cmp
mov
js
xchg
in
xor
int
mov
jbe
mov
lods
movsb
std
xchg
pop
mov
js
jae
mov
fwait
sbbb
nop
sub
in
sbb
sbb
inc
imul
sbb
lock
inc
inc
icebp
sbb
mov
call
dec
in
cwtl
push
jno
mov
and
cld
sub
sub
lahf
or
inc
adc
add
loopne
adc
xor
movsb
lret
push
dec
sbb
push
mov
sbb
hlt
das
mov
mov
dec
cmp
or
jl
lds
pushf
aam
jp
mov
inc
sbb
or
push
and
addr16
lods
outsl
in
mov
mov
test
dec
rclb
bound
pop
movsb
mov
enter
add
cmpsb
or
nop
and
int3
lock
imul
lret
es
jp
shrl
push
xchg
mov
xchg
xchg
mov
pushf
pop
loopne
xchg
inc
daa
pop
sub
mov
mov
xchg
lret
mov
incl
test
cmpsb
lods
aas
jne
jge
ja
mov
and
pop
adc
pop
push
test
xchg
mov
fwait
fs
xchg
cwtl
test
outsl
push
sbb
dec
inc
inc
incl
pop
push
and
ret
jae
rcrl
cmp
frstor
cltd
scas
push
lret
pop
xlat
mov
fsubs
sub
xor
into
movb
outsl
ror
cmp
fldt
sbb
or
aad
dec
stc
jmp
shl
mov
push
test
lret
pushl
push
jg
xor
mov
rol
cld
cmpsl
ljmp
into
pop
jecxz
rcrb
jge
out
shl
nop
pushf
xchg
cmp
lock
aam
cmp
push
add
adc
fstps
pop
adc
or
mov
pushf
in
shrl
sub
bound
lret
das
in
jmp
dec
rep
enter
mov
jl
fdivrp
xchg
push
mulb
pop
pop
adc
cmpsl
push
pop
sub
sub
jecxz
add
mov
aas
and
xor
mov
xchg
lods
movsb
mov
repnz
cmc
dec
push
loopne
test
int3
insb
add
inc
mov
push
loopne
out
pop
js
sbb
inc
add
pop
movsl
cli
je
popa
pop
into
ret
adc
sbb
dec
stos
push
xor
xor
pop
dec
sti
jns
push
jbe
lods
pop
fists
sbb
sbbl
ror
xchg
in
orb
fdivrs
inc
ret
jne
xor
mov
pop
jo
dec
test
notl
xor
fsubr
ficomps
aad
call
mov
in
fstpt
jp
push
inc
test
andl
adc
adcl
fnstenv
sub
adc
leave
xchg
cld
or
mov
cld
lea
scas
ret
adc
cltd
xorl
loopne
addr16
fstpt
stos
mov
outsb
aas
mov
rorb
mov
ret
inc
ds
es
mov
inc
pop
mov
test
flds
out
sarl
lret
xor
shrl
out
leave
push
test
das
mov
jge
movsl
xor
imul
push
sbb
sub
mov
dec
cltd
pop
sub
xchg
stos
dec
adc
fmuls
cmpsl
std
jae
test
lock
inc
outsb
inc
pop
pusha
sub
xchg
pop
mov
and
fs
jne
jg
or
ficomps
sub
sbb
push
popa
mov
cld
lods
stc
inc
fwait
mov
push
ret
int3
out
and
push
popa
xor
sub
sbb
inc
shrl
vphsubdq
push
add
mov
add
xlat
pop
insb
cmpsb
movsl
shll
cmp
addl
sti
mov
popf
test
mov
xchg
lret
cltd
fimull
shll
cmp
cmp
ljmp
pop
dec
sub
adc
or
xlat
testb
xchg
xchg
rorl
fcoms
stc
enter
inc
popf
cs
sbb
adc
movb
lock
add
stc
cli
xchg
adc
mov
inc
adc
fcoms
push
xchg
sub
add
mov
pushf
pop
mov
movsl
cmp
xor
xor
push
mov
mov
js
pop
dec
ret
jne
push
push
out
fnstsw
or
aas
lea
out
mov
jl
iret
add
scas
mov
insb
ret
decb
push
movsl
inc
ror
in
inc
imul
js
jbe
test
push
xor
jns
stc
xchg
jmp
leave
xor
bound
lods
mov
dec
sub
jbe
repnz
mov
lock
jbe
cltd
mov
push
cs
jl
cmp
add
mov
addb
or
gs
nop
cmp
xchg
imul
incl
mov
aad
xchg
lods
mov
push
xchg
adc
pop
pop
iret
sub
and
or
xor
jge
andb
jo
pushf
ja
stos
mov
loopne
or
dec
out
lcall
pop
bound
int
lret
scas
mov
jmp
xchg
lcall
sub
in
movb
mov
cltd
or
push
test
jge
mov
in
xor
out
dec
fistl
mov
or
dec
test
or
add
pop
jno
pop
xchg
sarl
dec
mov
jmp
cld
fisubrs
ja
push
cmp
das
mov
xchg
mov
mov
fmuls
aam
cs
jle
jp
mov
mov
xor
std
xchg
daa
push
ds
dec
stos
test
out
les
jne
adc
jbe
stos
inc
push
or
add
call
cwtl
test
xchg
dec
push
jb
push
rclb
or
pop
lea
pop
pop
nop
dec
outsl
mov
cld
pushf
aaa
gs
cs
insb
shlb
lahf
shrl
pop
inc
sub
or
jg
mov
lret
inc
cmp
cmpsl
inc
xor
sub
popa
movsl
xchg
mov
xor
xchg
adc
cmp
sbb
les
jno
int3
inc
add
and
mov
test
dec
mov
dec
cs
push
push
lea
pop
jae
fidivrl
mov
lret
sub
add
aam
cmp
imul
mov
jmp
sub
rorb
negl
cmpsl
lds
popa
pop
cld
ljmp
out
pop
insl
mov
imul
or
xor
mov
or
pop
inc
insl
popf
aad
pop
inc
cltd
adc
pop
into
stos
jp
lods
and
adc
std
cli
mov
fwait
and
add
mov
scas
xchg
push
imul
pop
fcoms
frstor
xchg
call
ret
mov
je
popa
jecxz
ss
aad
push
out
sbb
mov
addr16
fsubp
movnti
add
pushl
push
dec
pusha
cmp
repz
lods
inc
aaa
and
and
pop
out
mov
xor
dec
add
sbb
xchg
adc
sub
aad
dec
pop
push
and
out
pop
fimull
je
mov
rcrl
add
dec
scas
movsb
mov
sub
lods
jl
rorb
inc
mov
xchg
inc
bound
lcall
or
sarl
mov
into
fnstcw
arpl
ja
cmpsb
adc
add
jo
dec
out
inc
stc
mov
sbb
xchg
inc
into
pop
push
popf
mov
push
dec
scas
mov
pusha
add
icebp
xor
test
lcall
jbe
jno
outsl
sub
stos
shrb
pop
push
int3
das
aam
lds
daa
mov
pop
pop
jne
dec
imul
fsts
icebp
dec
fldt
adc
push
pop
out
movsb
lds
or
push
sbb
jb
mov
lds
pop
xlat
push
jge
jg
sahf
fisubrs
ds
adc
push
std
test
sub
push
push
pushf
dec
lahf
xchg
iret
sub
insb
jecxz
pop
inc
jmp
jg
jmp
stos
adc
mov
xchg
add
xchg
dec
rcrb
popa
dec
pop
inc
in
push
stos
out
jp
cmp
xchg
push
mov
fnstenv
in
fsubl
xchg
cmp
xchg
cmpsl
sub
fdivp
jge
les
out
sbb
out
mov
jo
lea
out
ret
push
imul
fbstp
sub
leave
cld
fcomp
xorb
dec
cmpsl
in
sarl
nop
fisttpl
xchg
cmp
inc
cmp
xchg
cmpsb
jecxz
jecxz
xchg
aas
fcompl
or
sbb
sti
push
xchg
test
add
nop
les
divb
xchg
pop
iret
cwtl
pop
mov
sbb
call
mov
enter
pop
es
cmc
sub
movsl
lods
test
xchg
add
cmc
mov
jo
sub
insl
pop
out
lcall
std
push
mov
dec
jg
mov
ja
insl
dec
popf
clc
or
jle
scas
les
pop
gs
push
ljmp
xchg
jno
pop
js
and
push
and
push
jns
inc
mov
jg
xchg
sub
mov
push
push
pop
push
popa
sub
sarl
and
clc
jno
pop
or
andb
sbb
sar
rcll
pop
incl
movsl
and
dec
cmp
sbb
popa
dec
ds
aaa
sub
insl
les
mov
mov
test
ret
in
repz
cld
test
testl
addb
add
call
add
xor
xchg
int3
clc
lock
or
ljmp
xchg
xor
outsb
movsb
shll
xchg
int
jno
imul
std
adc
imul
mov
and
cmp
add
enter
insl
push
je
and
movsl
fndisi(8087
data16
and
push
and
mov
push
mov
jg
and
sub
lods
cmp
dec
out
mov
jns
cmpsl
popa
push
mov
xchg
and
mov
jnp
xchg
adc
test
sub
aaa
stc
jne
xor
cmp
in
movsb
xor
and
sub
cs
xor
push
addr16
lods
adc
mov
lods
insb
jmp
in
pop
inc
fs
or
or
fldenv
adc
out
xor
sbb
push
pop
xchg
xchg
popa
mov
fs
mov
clc
stos
mov
cmpsl
adc
xor
insb
fwait
mov
arpl
mov
mov
sub
xorl
dec
adc
mov
adc
ds
sub
lahf
lock
cld
test
enter
test
or
xchg
dec
mov
aas
push
dec
or
mov
lahf
cmp
mov
xchg
ret
ficompl
push
sub
xor
repz
fmuls
clc
mov
pushf
and
addl
sbb
inc
cmpsl
test
sub
xchg
add
ret
sub
push
xchg
lods
jg
fisubl
mov
xor
dec
jno
mov
outsb
mov
mov
inc
cmpsl
push
or
or
repnz
cmp
sti
cmp
sbb
pushf
push
loopne
pusha
into
stos
pop
xchg
aaa
pop
mov
cli
xor
xchg
ja
scas
movups
mov
adc
test
cld
mov
lahf
pop
xchg
int
lods
addr16
icebp
and
push
mov
cltd
mov
dec
pop
inc
bound
cmp
xchg
sub
mov
cmp
xchg
insl
daa
fiadds
xchg
mov
push
cmc
jmp
lods
pushf
arpl
inc
and
lea
cmpsb
movsl
fcmovne
std
xchg
pop
rorb
int
cli
gs
cmp
rorl
dec
and
bound
adc
cs
lea
cmp
adc
pop
push
outsl
andb
int3
pusha
sbb
repz
sbb
adc
loope
sub
cmp
pop
jno
or
mov
out
xchg
sbbl
loope
mov
pushf
jb
sub
add
dec
add
jl
xor
ljmp
xchg
fldt
ret
iret
dec
push
loopne
fbstp
nop
lds
in
add
sub
cmp
sbb
push
mov
inc
adc
pusha
js
xor
mov
mov
mov
xor
push
decb
call
pop
sbb
push
repz
cmc
lods
hlt
cmc
jmp
inc
cmp
subb
jo
sub
and
inc
pop
push
mov
jo
lods
jne
pop
pop
lds
dec
out
add
ret
mov
sub
jae
xchg
cltd
mov
xchg
lea
and
popa
mov
xorl
movsb
repz
popa
pusha
aaa
in
int
add
mov
push
pop
adc
scas
cmp
mov
mov
shlb
mov
jmp
xchg
jb
pushl
push
test
sahf
rclb
lcall
push
in
inc
and
sbb
out
or
lds
push
push
dec
call
jle
mov
jmp
mov
add
filds
jge
shrb
rcll
mov
add
daa
iret
movsl
dec
pause
test
rorb
mov
fs
inc
cli
sbb
pop
mov
xchg
pop
fisubs
sarl
sbb
out
es
in
scas
loopne
xor
daa
out
enter
pop
daa
add
xlat
lods
std
xchg
mov
in
cmp
rcrl
or
sti
jmp
mov
cs
sbb
sbb
sti
cmp
sbb
shrl
cmp
push
dec
mov
aas
adc
cmp
ficoml
mov
lret
mov
fldcw
sub
dec
push
out
andb
and
addb
mov
xchg
scas
cmpsl
andl
or
dec
lret
jae
loopne
pop
add
push
and
outsb
or
and
jg
push
and
lock
lahf
push
lea
in
mov
inc
add
popa
jno
jge
jno
out
pop
fldl
rcll
lods
popf
icebp
jno
call
add
aam
cmpsl
lods
pop
mov
pop
test
jle
aam
jbe
aad
push
cmpl
icebp
xor
sbb
imul
mov
sarl
jo
orb
sub
jns
ficoms
xchg
jbe
pop
add
and
mov
sbb
shlb
and
adcb
cmp
sbb
jbe
out
jns
push
movsl
fldl2e
testb
push
sahf
cltd
in
xlat
mov
in
inc
mov
pusha
rolb
jmp
cltd
movsb
jmp
hlt
mov
cli
jne
sbb
fs
mov
and
add
xchg
fnstcw
mov
cmp
cmp
sbb
std
xchg
repz
insb
pop
addb
pop
in
jge
dec
sti
test
das
dec
push
mov
or
mov
test
lea
dec
int
dec
imul
push
aad
test
mov
daa
mov
xor
lahf
into
jnp
out
push
arpl
out
lock
sub
xor
and
mov
in
xchg
sarl
dec
push
ret
mov
or
gs
mov
sbb
jle
stos
ret
movsb
ret
xor
mov
and
pop
imul
pop
or
sub
hlt
stos
adc
adc
sub
sub
lret
pop
mov
dec
push
dec
dec
imul
inc
lcall
cmp
hlt
mov
ret
test
popf
mov
adc
fcmovbe
inc
jp
mov
repz
dec
or
ljmp
and
and
or
pop
rcrb
pushf
lea
mov
mov
xchg
mov
popl
sub
sub
lcall
mov
pop
sub
mov
lds
mov
mov
push
pop
cmpsb
test
mov
loopne
shlb
and
add
ss
jp
call
add
push
divl
adc
in
in
mov
arpl
cld
js
dec
jns
add
jl
out
lock
sbb
xor
fwait
mov
or
pop
mov
outsl
cmp
rolb
movsb
int
std
jns
jecxz
mov
jp
mov
sub
outsb
add
movsb
dec
inc
push
mov
stos
imul
cmpsl
test
out
mov
out
cltd
add
dec
sahf
imul
add
mov
scas
add
fdiv
mov
jno
and
pop
enter
jg
add
inc
and
mov
inc
pop
mov
mov
pusha
pop
inc
and
inc
inc
sti
push
fistps
pusha
ret
cld
je
test
int
mov
or
jecxz
or
add
ss
loopne
notl
in
xor
adc
into
test
insl
mov
inc
pop
xchg
or
fdivl
stos
adc
xchg
dec
xchg
frstor
icebp
cs
ds
ja
popa
inc
adc
dec
sahf
pop
pop
inc
nop
lds
and
repz
test
stos
pushf
jg
rclb
out
cli
cmp
mov
jecxz
jl
xor
push
rcrl
lds
int3
ficoml
jmp
out
daa
mov
lock
inc
or
mov
dec
pop
incb
dec
xchg
cltd
xor
xchg
sbb
sti
sarl
in
pushf
out
shr
nop
inc
xchg
mov
imul
mov
mov
mov
leave
aad
and
adc
mov
into
fildll
fstps
pop
inc
add
cmp
imul
cmp
adcl
rcr
cmp
add
inc
scas
push
ffreep
sbb
mov
sbb
lahf
lock
jnp
push
addr16
frstor
cmp
mull
mov
jg
fsubrp
pop
and
push
lret
testb
pushf
movsl
jo
in
mov
es
push
pop
mov
mov
pop
lret
and
adc
mov
xchg
mov
mov
jmp
das
xor
imul
rcrl
xchg
adc
aad
sbb
negb
inc
movsb
mov
dec
movsl
fld
lcall
icebp
fsubrl
roll
int3
dec
and
into
xchg
xchg
cmc
imul
sbb
daa
nop
daa
pushl
scas
cld
and
pop
stc
jo
in
in
rclb
push
xchg
loop
clc
cmpl
mov
dec
shll
into
inc
jecxz
push
jne
out
fucomip
jns
add
lds
cmp
cmc
cmpsb
or
push
sbb
imul
je
inc
stc
mov
aaa
sub
fmul
and
pop
sub
push
addl
mov
cs
lahf
or
add
xchg
xor
adc
movsb
test
fldl
imul
ss
dec
mov
fisttpll
sub
and
incl
jb
movsb
pop
inc
repnz
cmp
and
sti
inc
lahf
and
into
or
sub
push
out
ljmp
mov
jbe
push
mov
lds
bound
cmp
imul
xor
int3
enter
out
inc
mov
in
fmull
inc
or
or
mov
jae
inc
cwtl
jg
mov
hlt
inc
loope
push
push
popf
pop
das
lret
gs
frstor
lea
in
mov
or
sbb
and
push
test
add
adc
pop
lods
fisttpl
aad
fnsave
pop
jnp
mov
inc
mov
into
inc
in
or
movsb
pop
or
test
pop
dec
popf
loop
sti
pop
flds
lock
jno
cli
jnp
movsl
popf
xchg
xor
xchg
add
push
lahf
jmp
xchg
add
ret
inc
shlb
lea
test
or
mov
mov
push
test
jg
aaa
dec
aam
and
ret
clc
cbtw
sbb
jnp
fwait
adc
sub
push
enter
xchg
mov
andl
enter
into
mov
shr
in
shl
adc
mov
pushf
pop
adc
adc
cmpsb
mov
jno
int
add
mov
ds
xchg
or
fnsave
aas
aaa
inc
pushf
inc
xchg
push
testb
or
pop
scas
es
fisubrs
roll
mov
faddp
popa
inc
xchg
pop
push
dec
cs
cli
xchg
xor
push
and
sbb
mov
push
inc
test
sub
insb
push
pop
stc
addr16
xchg
negb
lret
jbe
ljmp
jmp
js
xchg
mov
sub
xchg
sbb
add
lods
and
sahf
ret
lcall
int3
mov
mov
dec
shr
xchg
ja
push
or
jmp
cmpsl
xchg
mov
mov
lds
jno
jle
inc
pop
push
cmp
xor
mov
mov
and
in
mov
cltd
jb
adc
es
popa
inc
push
lret
ljmp
jle
mov
daa
ret
js
outsb
es
sub
das
scas
test
and
lret
push
mov
call
loope
test
jle
int3
cmp
mov
push
push
push
lret
fwait
lods
mov
or
loopne
fldt
xchg
mov
sbb
data16
push
pushf
fs
or
fimuls
pop
cmc
into
push
int3
in
inc
insl
outsb
sbb
aaa
xor
dec
mov
mov
cli
mov
and
popf
pop
jl
popf
into
mov
push
das
xchg
mov
test
mov
loope
cmc
aaa
mov
mov
adc
add
add
icebp
xor
rclb
push
xchg
jnp
movsb
add
fwait
add
mov
dec
lock
cld
dec
lcall
rcrb
arpl
mov
xchg
ljmp
xor
lret
adc
insl
or
pusha
mov
push
sbb
push
decb
pop
out
leave
je
or
divb
scas
xchg
dec
cmp
jge
jp
push
jb
cli
sbb
xchg
pop
xchg
mov
inc
imul
jno
sbb
rcrb
daa
shrb
iret
rol
jge
adc
push
inc
gs
pop
rorl
sub
data16
dec
cltd
std
mov
lea
pop
repz
iret
dec
push
mov
push
xor
xor
dec
inc
lods
inc
movsb
lret
out
or
pop
jns
outsl
inc
jb
lea
stos
dec
xlat
jnp
push
pop
ss
dec
sarb
in
adc
mov
xchg
xor
inc
sub
push
out
daa
push
adc
jno
xor
cwtl
in
xor
add
stc
dec
sub
rcrb
insb
dec
out
adc
ljmp
dec
dec
dec
dec
and
ret
int3
cmpl
xor
shlb
xchg
add
push
push
or
jns
roll
int
dec
and
xchg
pop
mov
out
jne
in
sub
push
daa
das
inc
fdivrl
stos
data16
pop
jle
add
hlt
ret
mov
cltd
aad
idivb
loope
repnz
sar
int
repnz
jl
mov
dec
inc
or
mov
dec
fldenv
ficoml
adc
aas
pop
add
cwtl
jae
popa
test
gs
stos
xor
push
dec
int
fstpt
fldcw
inc
icebp
cwtl
or
adc
and
std
adc
test
and
jne
add
sahf
aas
fdivrp
aaa
or
jne
and
das
jb
pop
inc
add
and
shrl
cmp
or
xor
sbb
rcrl
pop
scas
mov
loope
sbb
push
mov
or
lret
add
jl
or
cs
cmc
mov
fimuls
cmp
inc
imul
imul
and
lret
cmp
jge
sbb
call
out
clc
jb
pop
inc
push
or
repnz
pop
and
push
adc
push
stos
pop
mov
add
imul
inc
scas
lret
jnp
dec
fbstp
sar
hlt
mov
lret
sub
and
inc
or
mov
gs
jg
cmc
adc
push
std
aaa
xchg
dec
push
jbe
inc
fcoms
scas
adc
mov
push
pop
inc
cmp
push
inc
inc
or
inc
sub
cld
dec
fstpl
pop
sahf
sub
jl
fwait
out
rcll
xor
mov
jb
test
push
dec
jb
xchg
adc
push
addr16
aaa
mov
xchg
and
xor
in
mulb
push
or
or
callw
push
or
mov
sbb
test
inc
mul
xchg
data16
inc
lds
loopne
jo
cld
mov
arpl
cmc
pop
roll
sbb
sbb
fldt
outsl
xor
adc
ffree
xchg
mov
xorl
mov
lods
cmc
inc
int
ljmp
adc
mov
cmp
add
jmp
out
push
adc
ret
std
imul
int3
push
arpl
into
push
and
aam
aad
das
jp
mov
push
andb
mov
loopne
or
pusha
shl
out
popf
ud2
ret
mov
sbb
pop
rcl
in
dec
inc
icebp
je
sbb
sub
stos
mov
divl
jne
dec
pop
push
cltd
jo
sub
out
push
xor
jle
callw
cmp
aam
mov
inc
adc
cmp
outsb
mov
sahf
inc
mov
insl
and
pushf
loop
jg
lock
idiv
push
outsl
pop
pop
stc
mov
inc
aam
push
das
out
icebp
mov
dec
and
inc
push
adc
mov
jge
frstor
mov
add
inc
lods
xchg
inc
mov
aas
imul
xor
mov
adc
lods
inc
fcmovnb
aas
arpl
sbb
pop
mov
jge
mov
int3
jns
pop
or
fiadds
xchg
mov
ret
movsl
dec
adc
lahf
xchg
ss
addr16
test
pop
ret
jno
push
jle
in
add
shr
pop
xor
nop
sbb
push
ss
and
xchg
push
mov
notrack
dec
add
les
popa
push
imul
xchg
movsb
test
sbb
add
cmp
mov
add
mov
push
or
std
adc
out
mov
mov
daa
lret
hlt
cmc
inc
bound
in
xor
hlt
jp
inc
stos
dec
lods
xchg
das
ffree
push
mov
mov
push
xchg
adc
push
dec
and
aad
imul
or
aam
sbb
lahf
lock
cmp
jns
add
divb
sbb
xchg
sti
fdivrs
stc
lea
xor
call
mov
fsubl
mov
dec
cs
sub
sbb
test
sahf
repz
pop
dec
dec
or
negl
pop
popa
div
add
insl
pop
inc
filds
loopne
mov
xor
sub
ljmp
xchg
add
mov
ret
xor
push
or
mov
test
lds
pop
outsl
push
daa
jg
xchg
or
sar
mov
lea
ficoml
mov
add
add
mov
add
jnp
mov
loopne
jb
imul
xchg
into
into
inc
mov
sbb
inc
cmp
sub
jnp
insb
sbb
fsub
shrb
mov
adc
dec
test
mov
xor
lds
imul
fwait
ja
cmp
ret
repnz
in
shrb
repnz
add
ret
push
cmp
or
sbb
cmp
loop
mov
mov
xchg
cmovb
mov
clc
cmp
test
imul
in
pop
inc
adc
pusha
int3
incb
xor
addb
mov
pop
js
call
cmp
jmp
out
jp
es
out
or
mov
cmp
mov
test
dec
loopne
rolb
stos
dec
jb,pn
icebp
stos
lahf
mov
push
jp
lods
jne
sbb
xchg
ljmp
jecxz
scas
jnp
imul
sbb
or
cwtl
mov
fcmovb
push
cmpl
pop
daa
pop
cwtl
and
test
pop
xor
les
leave
addr16
xchg
mulb
inc
imul
nop
in
js
subb
cmpsb
or
leave
mov
xchg
and
inc
jae
cmp
cmp
outsl
andb
pusha
adc
dec
push
shrb
fisubl
lods
hlt
cmc
cs
pusha
add
or
jl
sbb
lds
repnz
xchg
mov
nop
xchg
das
mov
popa
leave
or
mov
insl
ret
nop
inc
stos
loope
mov
add
test
mov
jb
mov
into
mov
push
enter
add
dec
dec
or
mov
and
or
xor
incb
mov
cmpsb
aam
push
sbb
jo
add
fmull
jns
mov
fisubl
mov
mov
gs
dec
pop
fwait
push
pop
and
mov
imul
imul
jmp
dec
lock
dec
pop
xchg
adc
cmpsb
sbbl
ss
or
or
xor
or
xor
rolb
cs
push
cmp
les
cmp
lock
pop
repnz
lea
in
test
push
repz
pop
pop
iret
pop
cli
push
ds
jnp
pop
jl
pop
add
xor
js
cmp
jmp
push
or
xchg
and
inc
inc
jle
mov
fsubl
cmp
jmp
insl
xlat
push
pop
xorb
lds
lret
iret
adc
lahf
mov
iret
pushl
fs
or
ss
stc
mov
jne
adc
lods
addr16
hlt
mov
aam
rcrl
cmpsb
push
mov
xor
stc
insl
lea
cmp
addr16
movsl
or
adcl
push
fadds
sub
out
outsb
in
mov
cmc
mov
frstor
imul
out
fwait
loopne
jle
out
mov
in
and
jl
mov
cmp
hlt
out
adc
and
push
jae
je
int
mov
movsl
enter
add
or
int3
inc
and
mov
adc
sahf
jb
in
push
cltd
xchg
ficomps
dec
lods
push
xchg
pop
push
lret
in
lret
into
sbb
fistpl
xor
cmp
jge
and
adc
xchg
jmp
jg
andl
jns
fildl
and
adc
mov
jecxz
cmp
inc
jno
and
mov
pop
loopne
dec
call
addr16
les
jmp
stos
jnp
cmp
in
push
xchg
mov
mov
orl
adcl
lea
dec
lcall
lods
int
sbb
mull
lret
jnp
push
rclb
jae
jns
pop
mov
movsl
sbb
insb
xorl
rclb
pop
push
inc
fwait
das
negl
ja
xor
mov
scas
and
lcallw
pop
cmp
cld
push
xchg
pop
dec
lea
les
lods
mov
sahf
dec
or
lahf
test
mov
testl
push
sub
stc
inc
jge
sahf
add
fs
lods
xor
int3
pusha
movsl
mov
inc
ja
stos
or
sub
leave
xchg
add
movsw
cmp
and
xchg
and
pop
and
dec
xor
mov
jg
ss
mov
jl
movntq
dec
stos
lea
jg
enter
dec
pop
adc
ret
jg
sbb
mov
pop
or
scas
and
sti
scas
and
daa
cmp
loope
mov
rorl
scas
cld
jecxz
inc
js
fcom
xor
push
les
andb
and
nop
xor
xchg
icebp
scas
js
inc
js
frstor
addr16
jp
mov
dec
and
je
into
jecxz
mov
jl
adc
mov
inc
mov
leave
jae
std
adc
adc
lods
into
scas
xchg
mov
es
or
push
dec
imul
sbb
or
popa
jns
fs
pop
int
add
sub
jne
or
movb
jge
xor
fisttpll
adc
inc
imul
dec
adc
aaa
dec
cld
pop
inc
jmp
xchg
or
dec
xchg
lret
daa
test
sub
leave
fsubs
dec
sbb
iret
bound
ljmp
cmp
rcr
xchg
dec
cltd
cmpsl
faddl
jle
out
nop
popf
mov
pop
xlat
jg
fisubrl
fwait
push
xor
push
loop
push
adc
addr16
xor
ljmp
push
cmp
sub
aas
mov
or
lock
mov
and
mov
jg
stos
and
insb
sti
jne
pop
mov
add
add
sub
repz
ss
call
out
cli
pop
in
in
loop
into
mov
rol
loop
test
mov
lods
jae
out
movsb
loope
stos
wrmsr
push
or
mov
mov
aad
push
loop
cmp
and
sbb
push
outsb
fs
popa
clc
sub
shlb
cli
outsl
daa
add
ret
jl
movsb
lret
loop
cltd
aas
idivl
stos
jge
inc
popf
shlb
sbb
imul
pop
xchg
xchg
lea
subb
sub
iret
aaa
sti
fwait
adc
cmp
addr16
loope
in
out
lahf
bound
popf
pop
push
idivl
xchg
mov
fstpt
sub
js
imul
xor
cmp
ret
mov
nop
cmp
insb
add
inc
dec
mov
xchg
dec
lcall
sti
loope
pop
sub
cs
inc
ja
rorb
xorl
stos
push
lods
popa
enter
xor
call
xchg
mov
xor
mov
mov
xchg
sahf
pushf
xchg
out
in
pop
sarb
xchg
and
loop
cld
ffreep
jmp
lock
movsb
test
inc
jb
ljmp
add
add
push
dec
fmul
inc
mov
aad
xchg
or
xchg
push
es
xchg
insl
jo
es
hlt
stc
jge
fdivrs
jmp
fwait
inc
mov
pop
lcall
push
fisubrs
call
dec
mov
pop
xor
pop
insb
mov
jge
sbb
iret
mov
dec
lea
inc
pop
and
repz
and
mov
sub
mov
hlt
sbb
jecxz
cwtl
ss
xor
sub
push
pop
push
inc
pusha
mov
daa
lock
and
inc
sbb
dec
in
cltd
pop
inc
xchg
push
xor
xor
cmp
into
mov
xor
cmp
clc
fildl
or
inc
dec
call
dec
mov
mov
jae
mov
xchg
mov
ja
enter
out
filds
cmpsb
cmp
and
outsb
push
cmp
dec
and
loopne
in
and
fcmovnu
mov
mov
inc
mov
add
jbe
add
adc
and
and
fs
mov
sarl
lods
push
push
arpl
jns
cmp
mov
dec
push
lret
mov
xor
sub
push
jo
ret
js
addr16
pop
cmc
sbb
sbb
movsb
imul
int3
add
pop
mov
mov
pop
xchg
nop
rcr
rcrl
xchg
or
mov
jmp
stc
arpl
or
aam
jno
add
popf
mov
mov
sbb
pop
pusha
sub
sbb
lds
push
fcoms
imul
mov
pop
and
mov
mov
dec
xlat
xor
inc
int
js
inc
fcoms
das
movsb
cmp
ficoml
pop
dec
pop
mov
cmp
aaa
pusha
jnp
pop
mov
jge
mov
adc
mov
fwait
imul
dec
shlb
in
out
out
jmp
jg
jp
filds
push
cmpsl
cmpb
mov
mov
sbb
lcall
jns
push
push
stc
jo
lock
mov
xchg
test
stc
cmp
cld
xor
jnp
cld
cmp
in
or
incb
dec
sti
xor
cmp
in
aaa
push
sbb
test
xchg
xor
mov
lock
int
xchg
divl
test
repnz
sbb
pop
dec
xor
lret
dec
js
jb
es
sbb
and
aaa
xor
sbb
ret
daa
add
and
out
out
lret
jne
test
sub
adc
or
sbb
add
cmp
enter
inc
and
add
push
sub
scas
mov
push
fwait
or
pop
fidivs
leave
mov
push
push
mov
dec
adc
in
cs
xchg
aam
mov
mov
ret
jmp
pusha
enter
xchg
push
stc
push
sub
out
xchg
sbb
testb
testb
jl
dec
ret
aam
jecxz
in
inc
jnp
js
pop
lds
dec
push
in
adc
adc
sbb
inc
roll
pop
mov
cld
fiadds
sbb
clc
cli
sbb
and
push
xor
xchg
imul
xchg
cmc
or
stos
test
mov
movsb
mov
xor
shl
lret
test
jg
les
mov
fldt
xor
fs
add
pusha
cmpl
popf
fbld
push
push
sbb
mov
stos
daa
sub
mov
mov
jns
dec
dec
mov
push
loop
dec
xchg
push
ss
xchg
aas
lahf
or
adc
and
pushf
loope
add
mov
popf
call
leave
sbb
imul
adc
popf
xchg
pop
fdivl
jne
out
push
insl
push
pop
pop
fstl
add
sub
cmp
mov
mov
lock
cmp
mov
mov
jbe
sbb
cmpsl
jb
pop
leave
mov
dec
push
fisubl
jae
repnz
lock
shl
loope
inc
push
std
loope
push
or
push
mov
jecxz
sarb
addr16
xor
dec
jge
push
imul
dec
roll
out
repnz
leave
lods
mov
dec
dec
jnp
dec
adc
xchg
movsb
xchg
mov
out
cmpb
add
inc
adc
xchg
push
test
or
mov
int3
fs
out
insb
add
add
lcall
add
dec
sbb
mov
jns
jle
mov
jne
inc
sbb
loope
mov
jo
push
sub
dec
arpl
int3
cmpl
mov
xlat
popa
mov
inc
pminsw
inc
test
arpl
int3
xchg
adc
cli
push
dec
xlat
in
cmp
ret
xorl
int
inc
cmp
iret
sub
xchg
ret
shl
mov
jle
lahf
js
push
jg
clc
cld
xchg
adc
aaa
int
cmpsb
lods
xor
push
cmp
loope
dec
fidivs
ja
pop
jo
xchg
mov
lods
cld
insb
mov
lahf
adc
sub
cmp
cmp
adc
xor
and
jle
dec
cld
call
decb
inc
lea
mov
enter
jecxz
push
scas
fidivl
lcall
aad
jnp
fldl
mov
inc
mov
dec
imul
rcrl
inc
decl
hlt
mov
push
push
out
gs
icebp
mov
sub
pop
or
jle
push
and
mov
or
hlt
rorb
ret
or
icebp
pop
push
dec
sub
xchg
js
push
sahf
inc
rolb
mov
test
addr16
mov
in
xchg
xchg
sbb
sub
mov
in
jns
mov
mov
lea
es
popa
mov
jae
dec
mov
cmp
iret
adc
or
push
xor
mov
push
pop
fdivrs
inc
xor
sbb
pop
jle
mov
cli
dec
xchg
sbb
cmpsb
adc
fcoml
xchg
push
mov
inc
repz
add
sbb
out
xchg
xchg
jno
add
ret
jp
sbb
lods
mov
sub
jne
insb
mov
shrl
cld
dec
push
mov
arpl
cmp
xchg
sub
pop
push
mov
imul
rdmsr
mov
test
pop
imul
out
or
mov
std
rcrl
xor
in
loope
movsb
inc
in
sarl
stc
mov
cmp
lahf
jbe
ret
in
sub
or
or
fwait
out
lahf
call
clc
jno
imul
sbb
or
pushf
pop
adc
jns
repz
insl
mov
push
outsl
nop
sub
xor
sbb
pushf
lods
repz
inc
sbb
cmp
push
adc
enter
inc
dec
cmp
mov
jbe
pop
jge
lods
sbb
out
dec
iret
aaa
cmp
adc
xchg
jo
ss
push
and
int
jne
push
fs
xor
sbb
leave
add
out
lahf
lahf
test
sbb
jecxz
pop
std
and
mov
cwtd
clc
mov
add
outsb
xor
out
sbb
pop
add
sbb
xor
fstpt
mov
stc
inc
int
sbb
popa
pop
push
fistpll
iret
mov
jecxz
sbb
push
and
xchg
push
sbb
xchg
subb
scas
xchg
dec
adc
imul
movsl
bound
mov
fs
xor
es
cwtl
call
into
js
jle
cli
push
in
rclb
lahf
cmpsb
test
xlat
jle
in
ja
mov
jmp
pop
cmpsl
stos
jno
jnp
loop
mov
sbb
iret
pusha
mov
jl
inc
mov
movsl
mov
jg
mov
iret
sbb
push
popa
pushf
sub
and
cmp
out
xchg
aaa
mov
aas
and
or
stc
nop
add
push
xchg
cld
cwtl
sub
mulb
stos
fildl
in
xchg
fldl
lret
loope
mov
inc
or
int3
xrelease
push
loope
adc
cmpb
add
fisubrs
out
push
sbb
lcall
gs
fldenv
dec
out
aam
mov
sub
add
push
vminss
mov
dec
cmp
popf
cli
cld
in
mov
int
adc
push
push
add
in
inc
into
rol
push
or
add
jae
cmpsl
sub
sbb
insl
fsubs
inc
ror
jbe
andb
stos
mov
in
gs
fwait
adc
js
stos
xor
jecxz
pop
pop
pop
aam
lock
mov
xchg
aas
jle
jge
std
xor
pop
or
jbe
mov
sbb
and
xor
ja
dec
sub
cmp
stos
rcrb
push
cmp
dec
add
inc
and
xchg
addr16
pop
cmpsl
pop
outsl
int
pop
sub
repnz
loope
mov
lds
fnsave
rcrl
adc
sbbb
jno
jmp
cwtl
loop
out
out
stos
xchg
jp
cmpsb
push
pop
aam
xchg
leave
mov
outsl
jbe
int
dec
xchg
clc
and
mov
jle
cmpsb
pop
xor
sarb
push
repnz
into
push
mov
daa
mov
mov
sahf
adc
adc
pop
aam
dec
sbb
lock
fcmovbe
mov
dec
aad
sub
fisubl
jmp
push
out
jne
jmp
daa
push
push
push
xor
sub
xchg
adc
leave
add
imul
mov
adc
data16
loope
mov
add
jge
cmp
xor
xor
addb
aad
sti
push
fstps
into
aad
std
loop
mov
arpl
fs
push
push
js
fmul
dec
lcall
lret
cwtl
and
cltd
push
call
loopne
xor
mov
pop
mov
inc
or
push
xor
cld
and
xchg
into
idivb
ret
stos
xchg
popa
pop
outsl
dec
pop
js
xchg
push
in
add
lods
cmc
rorl
aaa
dec
mov
dec
and
mov
push
mov
mov
addr16
push
subl
mov
hlt
fwait
pop
and
fisubrl
loope
and
fsubrs
or
push
mov
pop
pavgb
mov
call
js
in
and
arpl
push
addr16
or
addb
cli
ds
push
lcall
cld
cmp
inc
jp
dec
mov
sbbl
stc
pop
jl
movl
sbb
mov
mov
sti
lret
xchg
das
push
jg
or
xlat
push
sub
dec
pop
mov
sti
xor
sahf
outsb
sbb
sbb
xchg
fisubrs
sbb
push
dec
in
jmp
sti
sub
xchg
pop
es
es
scas
cmp
test
jo
jnp
imul
sub
lret
pop
out
arpl
jmp
jbe
scas
fsts
pop
inc
mov
xor
fisubrl
push
fbld
mov
out
maskmovq
negl
mov
cld
sahf
sbb
and
mov
jne
in
mov
loope
push
fs
insl
stos
enter
fisubrs
std
mov
and
sub
sahf
mov
leave
add
aad
repnz
out
lret
popf
ret
or
jo
inc
movsb
fsubs
push
xchg
jge
in
mov
popf
cmp
icebp
test
ret
das
jae
pop
loopne
mov
hlt
inc
shrb
sti
xchg
addr16
movsl
gs
sbb
scas
pop
pop
pop
jecxz
inc
repz
cmp
sub
or
pop
arpl
orb
sub
jmp
cltd
stos
xchg
pushf
mov
xor
push
sub
add
add
or
inc
pop
popf
dec
pusha
aam
mov
mov
mov
lret
and
jnp
mov
adcl
pop
aaa
mov
ja
std
mov
fidivs
xchg
jno
ljmp
jmp
mov
dec
sub
hlt
movsl
sub
dec
test
repnz
xor
es
call
xor
and
mov
adcb
mov
cmpl
dec
jecxz
insb
icebp
sbb
aad
ficompl
es
test
cmovp
lcall
add
push
addr16
push
stos
fnstsw
mov
dec
push
sahf
mov
xchg
sbb
shrb
push
lret
push
fldt
loopne
inc
daa
mov
sbb
and
add
mov
cmp
or
ja
cs
mov
pop
arpl
mov
lds
xor
mov
or
xchg
shrl
outsl
in
mov
ljmp
jmp
adc
jbe
loop
scas
dec
test
xchg
cld
mov
nop
cli
add
cmp
int3
pop
mov
mov
add
testl
dec
pushl
lret
sub
mov
imul
push
mov
rol
aaa
mov
stos
pop
mov
fcoms
push
pmaxsw
dec
xchg
and
lcall
cvtps2pd
rolb
or
mov
pop
insl
stos
sub
xor
xor
jp
test
or
and
sbb
scas
aaa
or
loopew
arpl
xchg
sub
pop
push
xchg
push
push
sahf
push
push
sbb
pop
jl
test
jge
daa
das
jp
jb
fwait
or
push
cmpsl
or
or
int3
dec
fmuls
push
dec
mov
jg
mov
test
loope
test
mov
clc
scas
mov
pop
stos
out
jbe
ss
pop
stos
mov
push
cmpsb
insl
rclb
mov
shl
xchg
imul
inc
sbb
or
and
mov
loopne
adc
add
loop
fsubrl
bound
xchg
mov
in
fisttpl
xor
add
or
ret
fstp
cmp
push
mov
gs
inc
pmaddwd
mov
fidivrs
cmp
es
push
shl
adc
notl
jecxz
mov
and
fwait
sarl
out
sbb
loop
shll
adc
jmp
pop
out
xchg
cmp
sub
jmp
or
push
xchg
loopne
pop
int3
imul
negb
sti
dec
jb
push
cmc
add
xchg
and
mov
push
push
roll
pop
xor
fldt
mov
es
lcall
test
or
clc
pop
test
neg
and
mov
int
fwait
mov
or
movsl
rcrl
or
mov
sub
repz
cs
ljmp
pop
mov
ret
js
adc
xchg
xlat
int3
mov
pop
push
call
push
inc
outsb
and
sbb
scas
xlat
xlat
fidivs
push
in
inc
mov
push
sbb
cmpsb
jg
in
xor
mov
jg
lods
jecxz
push
mov
xchg
outsb
xchg
daa
sarb
or
imul
fs
adc
pop
jb
push
add
push
dec
icebp
dec
cmc
jl
mov
add
mov
adc
xor
push
outsl
xlat
cmpsb
cmp
inc
js
aad
mov
push
fcomi
das
cld
lock
xchg
filds
sbb
inc
int
imul
push
lds
mov
mov
cltd
inc
mov
cmpsb
in
fsubr
lea
enter
das
sysret
iret
adc
fwait
pop
and
add
jbe
lods
pop
dec
test
rolb
and
push
js
rclb
inc
pop
cli
popf
xor
mov
push
push
cmp
sub
nopl
pop
fstpl
sub
fs
and
sub
mov
lock
push
adc
dec
inc
cmpsl
hlt
xor
ja
loopne
lret
sbb
inc
sbb
call
pop
mov
sub
out
inc
pop
das
push
ss
out
outsb
outsl
mov
test
jno
sub
andl
mov
xlat
dec
push
and
mov
loope
rol
sbb
popa
pusha
jmp
xchg
push
mul
pop
movb
jb
fldl
ja
addr16
mov
aad
push
fwait
dec
pushf
push
dec
ja
push
stos
adc
push
push
pop
arpl
rcrl
popa
fistpl
dec
pop
shlb
push
sub
and
mov
adc
lcall
lods
arpl
inc
mov
mov
in
push
imul
push
popl
lret
xchg
push
gs
js
test
dec
pop
cmp
shll
shll
lods
rolb
push
inc
push
sbb
jle
xchg
jns
push
xchg
xor
sbb
imul
xor
pop
mov
lret
xchg
jbe
pusha
fisubrl
jp
test
cli
push
and
shrb
sahf
popa
cmpsl
push
test
pop
lahf
test
bound
cli
mov
mov
call
lahf
push
in
daa
call
add
jecxz
ret
aas
xlat
mov
bound
sbb
add
xchg
mov
dec
aad
push
and
pop
rcrb
cld
mov
in
int3
jge
xchg
enter
mov
mov
movsb
sub
in
out
std
add
mov
cs
neg
mov
adc
aad
outsb
movsl
subl
popf
push
repz
cmpsl
pop
xorb
cmpsb
adc
movsb
lea
xchg
mov
test
aad
sti
cmpsb
fwait
rep
invd
test
jae
inc
lds
cmp
mov
mov
cltd
ror
cvtps2pi
es
sub
fsts
adc
insb
testb
pop
cmp
push
aad
mov
push
outsl
aas
pusha
and
aaa
mov
sarl
jne
sbb
pavgb
ljmp
fs
adc
adc
jecxz
pop
adc
push
jb
aad
pop
nop
outsl
pop
jle
sbbl
pop
in
add
sbb
inc
mov
stos
dec
lods
stos
cmc
push
inc
das
and
sahf
mov
sbb
mov
pop
pop
mov
in
pop
icebp
dec
sbb
push
xchg
xlat
xchg
je
out
dec
inc
popa
lret
cmp
ucomiss
inc
in
outsl
lods
inc
xchg
pusha
mov
push
push
insl
or
xor
cmpsl
outsl
mov
mov
and
adc
mov
xchg
sbb
push
pop
cmovnp
inc
and
jnp
enter
adc
mov
lahf
fistps
push
cmp
dec
mov
arpl
fisubs
enter
out
popa
sub
xchg
dec
sub
mov
xchg
cld
loope
inc
fisttpl
adc
mov
fldt
test
cmp
sub
loop
sub
lcall
mov
and
int3
or
or
push
out
stc
daa
mov
xchg
movsl
imul
mov
mov
jp
xchg
pop
mov
lcall
stos
sub
leave
xor
jbe
mov
test
repnz
xchg
lcall
dec
je
inc
repnz
cmc
and
rolb
sbb
out
mov
mov
push
xchg
pop
sub
into
ret
repnz
sbb
arpl
push
jnp
movsl
fistpl
into
sarl
and
stc
cmpsb
push
xchg
ljmp
dec
insb
ja
add
mov
or
jmp
cmp
insl
xor
jae
adc
hlt
mov
xlat
sub
mov
aad
fldl
mov
adc
divl
add
shrl
sbb
mov
inc
pop
movsl
jo
mov
cld
mov
bound
push
or
or
pop
sahf
jnp
stos
pushf
ljmp
inc
and
js
and
or
cltd
jns
or
jne
repnz
data16
call
fs
jl
or
push
jb
out
pop
mov
mov
sub
int
xor
ljmp
cli
xchg
divl
movb
fmuls
push
pop
loop
fiadds
xchg
cmp
scas
jp
pop
imul
fcmovu
pop
pop
cmpsb
mov
pop
sbb
into
dec
jne
cld
push
cmp
pushf
mov
and
insb
cwtl
jmp
fwait
mov
push
aad
lods
mov
pcmpgtw
mov
subb
push
push
dec
sub
insb
push
int3
mov
fisttps
jge
mov
mov
outsb
lea
cmpsb
ja
adcl
pop
addr16
in
or
aas
fwait
xor
test
mov
in
cmpsb
inc
mov
xor
insl
xchg
cmp
dec
sbb
fstpt
subb
push
movl
jo
push
aad
xor
mov
adc
lret
inc
pop
rolb
push
ljmp
xchg
xchg
rorl
jb
fnsave
imull
sub
cmpl
push
loop
add
icebp
mov
rcll
outsb
into
js,pt
lods
repz
inc
push
jmp
out
pop
dec
mov
push
xor
inc
xlat
or
fbld
xor
push
ljmp
call
in
and
adc
jns
outsb
cwtl
adc
loope
ficoms
xor
sbb
cmc
stos
pop
pop
jecxz
and
lods
mov
push
pop
in
loope
mov
subl
je
les
mov
push
dec
sahf
outsl
jnp
out
xor
xor
sub
test
xlat
dec
jmp
push
int
ss
lahf
outsb
and
push
dec
aam
pop
loop
mov
sbb
push
push
shl
push
inc
xor
ficomps
rorb
rolb
shlb
mov
in
add
xchg
jne
lret
lods
jmp
push
sbb
mov
mov
aas
adc
pop
pop
xor
movsl
cmp
out
push
cwtl
xchg
or
imul
data16
sub
xlat
mov
xor
xor
jnp
pop
dec
lret
bound
int3
test
pop
sub
outsb
cmp
stc
aam
sbb
sbb
adc
adc
test
cmc
loopne
in
inc
dec
sub
ljmp
fs
shlb
jbe
xchg
sub
insl
call
and
pop
mov
int3
lret
or
adc
cmp
rep
out
push
daa
sahf
rclb
ja
stos
inc
negb
pop
js
cmp
inc
rorl
cltd
cmc
loopne
ds
push
lock
push
cmp
test
dec
jnp,pt
pop
orl
xor
xor
jbe
pop
dec
inc
enter
enter
sbbb
pushf
rcrl
jmp
mov
popf
adc
jl
xor
jns
jno
mov
pop
cmp
leave
adc
xchg
cmp
inc
mov
and
nop
pop
mov
push
fucomp
or
dec
popa
or
add
xlat
sarl
and
sahf
ret
or
pop
mov
jp
dec
sbb
cmp
inc
andb
fwait
mov
pop
pop
pushf
data16
xlat
inc
mov
repz
xchg
pop
fistps
into
pop
adc
lret
inc
test
ss
into
mov
xor
mov
out
icebp
stos
int
dec
mov
adc
mov
xchg
xchg
push
mov
sub
test
push
sub
push
inc
jmp
ret
mov
xor
addb
aad
in
or
mov
test
cmc
lods
clc
cmc
xsha256
cmpsb
push
add
mov
insl
jge
mov
xor
mov
mov
dec
es
lock
sti
dec
push
mov
mov
dec
mov
std
mov
nop
addb
das
mov
mov
cs
pop
insb
repz
cwtl
adc
mov
into
mov
mov
and
mov
mov
jg
xchg
cmpsb
icebp
or
push
jns
pop
pop
insb
xor
fwait
pushf
inc
insl
xor
test
or
xchg
or
push
mov
jge
or
sahf
inc
xor
mov
ja
push
data16
data16
xchg
test
lods
or
out
in
pop
push
sub
xor
movnti
out
dec
decb
test
xor
cmp
js
cmpsb
lods
adc
mov
add
dec
push
and
ja
mov
mov
pop
incl
cmc
dec
xchg
ja
pop
pop
ficompl
ljmp
scas
push
psubsb
loope
lods
sub
pop
sahf
pop
sahf
xchg
fisttpll
and
xor
lds
sbb
fcmovne
pop
std
add
inc
repnz
pop
dec
call
mov
mov
and
jl
jae
cld
or
inc
dec
shll
aas
push
jle
rcll
sbb
mov
jmp
movsl
lods
mov
push
mov
sub
add
test
arpl
cld
addb
xchg
jns
enter
sbb
sbb
out
xor
xchg
push
mov
loop
ja
pop
and
sbb
pop
jns
xor
add
clc
mov
movsb
push
fimull
shl
sub
dec
cmc
js
inc
pop
pop
jae
push
sub
mov
mov
ret
xor
lcall
mov
ret
pusha
popf
mov
mov
adc
jae
lods
mov
les
pop
stos
push
das
popa
pop
xor
sti
jmp
popf
jmp
pop
subb
cmp
or
inc
cmp
pop
loopne
adc
shll
cmp
test
jno
cld
pop
mov
mov
ds
fistl
fisttpl
call
repnz
mov
and
xchg
fwait
popf
jo
imul
xchg
mov
or
outsl
push
or
add
xor
sbb
cmp
shlb
jb
in
test
outsl
xchg
ja
adc
push
add
fnstcw
ret
enter
mov
lret
xor
mulb
jbe
insl
ret
dec
pushf
fiadds
sar
lea
inc
cld
jl
mov
ds
xlat
scas
mov
mov
push
and
imul
in
pop
lahf
mov
or
and
call
test
int3
mov
imul
mov
mov
das
sbb
rcrl
or
movsb
and
aaa
adcl
cmp
xlat
push
adc
push
cmp
sub
scas
leave
xchg
cmpsl
push
mov
push
pushf
daa
pop
in
inc
in
cmp
aad
ret
mov
stc
xor
push
lods
adc
aas
loopne
pop
stos
loope
clc
dec
mov
int3
and
and
in
ja
nop
jae
pop
out
push
icebp
movsl
or
mov
lock
iret
iret
adc
push
add
push
fidivrl
std
mov
cld
icebp
or
es
call
aaa
mov
mull
das
pop
aad
test
mov
dec
icebp
fistps
push
out
bound
das
sarb
mov
mov
inc
jmp
inc
adc
fcomps
leave
jbe
movsl
push
mov
scas
test
push
sub
rclb
cltd
nop
cmp
test
push
mov
mov
mov
adc
add
pop
fstl
dec
add
ss
mov
pushf
ss
mov
inc
xor
jb
mov
es
sbb
jmp
loop
ljmp
mov
mov
or
adc
push
mov
dec
mov
jno
mov
je
lods
rcll
mov
enter
sub
cmp
jno
fdivrs
les
inc
push
sub
or
push
int3
mov
jno
stos
and
out
cmc
sbb
pop
enter
xchg
add
loope
jg
cltd
xchg
ficomps
jbe
gs
dec
and
sbb
ljmp
lahf
jl
xlat
insb
jl
mov
arpl
xchg
xor
or
jge
sbb
pop
xchg
jbe
lock
fstl
adc
lret
xor
sub
mov
out
push
cmp
jnp
sbb
add
into
or
push
inc
loopne
jae
pop
test
sbb
pop
jns
add
ret
imulb
push
out
cmp
push
mov
data16
inc
in
enter
cmp
ljmp
xchg
mov
push
lods
aaa
mov
sub
cld
push
and
mov
jno
ss
jne
ret
mov
push
pop
sbb
outsl
and
ret
rolb
add
aad
pop
mov
pop
xchg
sbb
pop
push
aaa
pop
or
ds
dec
test
dec
in
jg
aam
inc
hlt
incl
pop
pop
mov
imul
cmpl
xchg
push
mov
mov
lods
lea
lcall
call
pop
push
cmp
pusha
mov
inc
dec
cmpsl
adc
movsl
ret
mov
or
ds
lahf
jne
or
adc
cwtl
cmc
cmp
pushf
hlt
cmp
adc
cmp
add
rcrl
sbb
insb
das
xor
dec
cmp
xlat
daa
xor
fst
pop
stc
xchg
fisubs
sbb
int3
pop
mov
jl
cmp
add
aaa
mov
lcall
call
lock
andl
jnp
mov
mov
jge
popa
pop
nop
mov
lahf
call
jo
jb
fisttpll
jmp
mov
mov
lcall
in
xor
inc
inc
lcall
adc
test
or
xor
sbb
push
adc
inc
jae
inc
add
fisttpl
push
movsb
jle
jle
ljmp
xor
out
mov
push
movsb
hlt
lods
ljmp
aam
leave
mov
dec
cld
movsb
mov
in
dec
bound
pop
cli
inc
cmp
stc
icebp
jl
jns
xor
fsubrp
out
adc
cmp
mov
fiaddl
clc
mov
movsb
jns
cmpsl
cmp
in
fimull
js
in
push
negb
mov
inc
in
sub
mov
adc
or
cmpsl
inc
fcmovnb
ret
inc
movsb
and
pop
stc
iret
mov
aaa
cmp
movl
ret
and
js
enter
and
cmp
out
lea
inc
fs
loopne
imul
je
or
shr
push
iret
jge
out
pop
scas
mov
pushl
push
leave
inc
out
push
jle
stos
cmc
mov
test
mov
clc
pop
mov
or
sub
xor
mov
aaa
int
adc
aad
cltd
fbstp
adc
js
imul
lret
fisubrs
lods
mov
dec
imul
out
and
mov
inc
aam
jb
adc
into
pusha
mov
faddl
fs
out
loopne
loop
mov
and
push
push
stc
xorl
and
mov
mov
fwait
or
imul
enter
enter
imul
pop
ljmp
cmpxchg
mov
mov
mov
sahf
aad
sbbl
popw
rcrl
addr16
mov
ss
icebp
arpl
sbbl
fldenv
jmp
or
mov
mov
in
lret
and
jmp
enter
cli
push
iret
sub
sar
aaa
and
add
popf
ljmp
movsb
jns
cmpsl
push
jbe
push
cmp
dec
jg
cltd
js
aad
mov
je
lods
out
popf
inc
popf
push
aam
and
test
dec
ret
sub
add
fdivrl
sub
lea
add
mov
in
sbb
popa
or
call
jne
fs
out
or
mov
or
sbb
loope
push
lods
xchg
stos
je
and
cmpb
xor
pop
fs
and
or
push
cmpsb
je
xchg
adc
into
aad
icebp
jmp
dec
jge
jmp
jne
pushf
inc
and
inc
and
pushf
enter
jp
add
arpl
push
cmp
adc
lahf
incb
xchg
mov
mov
test
cmp
add
cmpb
mov
adc
into
movd
mov
andb
mov
fwait
xchg
mov
stos
push
cld
mov
mov
mov
ljmp
sub
dec
clc
mov
rorb
cmp
dec
add
popa
aas
cli
sbb
leave
mov
pusha
das
fcmovbe
add
inc
xchg
movsl
std
sub
mov
and
inc
fstpl
pop
jbe
cmp
push
loop
add
repz
loop
das
mov
cwtl
cltd
dec
cmpb
js
sbb
clc
lea
adc
in
pop
dec
adc
lret
inc
rolb
inc
lea
or
scas
xchg
and
out
jmp
pushf
cmpsl
lret
or
enter
jmp
rol
xchg
pop
sub
mov
jecxz
mov
test
mov
punpckhdq
jge
inc
movsb
mov
mov
mov
pop
xor
rcr
or
jp
cmp
lret
lret
xchg
notb
call
or
ds
cmpsl
js
pop
dec
arpl
notl
cmc
mov
and
shll
insl
loop
jl
nop
out
jo
insb
dec
mov
or
mov
ljmp
lods
fisubl
or
adc
lahf
adc
adc
arpl
jle
xlat
das
push
daa
inc
dec
repnz
adc
shrb
rorl
lods
inc
daa
pop
sub
mov
dec
shl
cmpsl
push
loope
sbb
lds
mov
pop
xor
insb
mov
pop
dec
xchg
je
push
movl
pushf
push
or
ss
xchg
out
es
in
pop
sbb
mov
in
ljmp
push
sarl
and
pushl
pusha
roll
or
and
int3
lea
imul
rorb
mov
lahf
inc
aas
jne
fisttps
nop
push
imul
popf
ret
jnp
int3
add
cmp
cwtl
icebp
lret
mov
mov
pop
jge
jnp
std
xor
call
mov
das
and
ret
push
xor
outsb
pop
pop
pop
stc
fdiv
outsl
mov
out
rcrl
mov
mov
mov
loop
es
sbb
mov
es
stc
fdivs
xchg
sub
sahf
mov
cmp
and
lret
jae
js
xor
cwtl
je
icebp
and
test
xchg
mov
loope
push
mov
rcr
push
mov
mov
js
int3
adc
mov
and
xor
and
xchg
and
jno
xchg
or
fcoml
adc
mov
xor
das
mov
es
inc
xor
push
jmp
loope
inc
insb
scas
stc
adc
imul
insl
call
jmp
dec
lods
mov
push
loop
loopne
cmp
les
mov
popa
mov
sbb
lock
and
or
jno
cmc
outsb
aas
add
loope
mulb
inc
mov
add
aad
dec
mov
adc
xlat
in
push
push
add
mov
out
pop
inc
pop
pop
and
sarl
shl
imul
aas
fwait
mov
subb
mov
and
and
lods
or
and
push
dec
cltd
jl
ret
and
ljmp
std
jno
cs
lds
scas
sete
icebp
jmp
aaa
mov
bound
loopne
popa
ficoms
out
sub
sub
stos
add
mov
popa
pop
sub
fdivl
jo
and
push
xchg
push
pop
adc
in
in
inc
sub
push
into
lret
lahf
cs
fcoms
arpl
iret
sub
dec
outsl
scas
cld
push
push
push
sbbl
cmc
nop
jo
push
inc
jg
arpl
mov
cmpsb
clc
mov
gs
add
testb
fs
add
push
jmp
repnz
add
loope
cmpsl
mov
adc
in
push
fstpl
lods
cmpsb
dec
pop
outsb
push
sub
out
movsl
sahf
mov
into
add
jae
inc
sbb
jp
xchg
fdivs
pop
add
xorb
fcoml
cli
aam
cmpsb
or
dec
ret
push
test
mov
push
fs
jae
ret
push
movsb
or
mov
sub
mov
lret
adc
mov
cmp
popf
sub
mov
or
xor
cs
repnz
dec
sbbb
pop
mov
shr
in
xchg
out
nop
push
jbe
iret
jno
inc
shll
xchg
in
jo
add
push
xor
js
push
cmpsb
lock
sub
adc
push
jp
fwait
xchg
adc
push
cli
mov
inc
add
dec
movsl
cmp
mov
repnz
or
adc
inc
lret
and
lret
add
daa
mov
addl
and
cwtl
leave
je
iret
xchg
or
jnp
push
push
call
adc
lahf
cmp
addr16
xor
xchg
jno
add
jmp
jle
push
xchg
sbbb
loope
cmp
xor
imull
test
enter
mov
fwait
out
sub
hlt
or
push
lret
je
aaa
and
lea
fistpl
mov
out
adc
into
xor
rcr
mov
cmp
lcall
shll
jb
cltd
icebp
xchg
or
jmp
sar
dec
fnstenv
outsb
test
gs
cld
xor
adc
bound
lcall
cmp
and
adc
movsl
mov
xchg
in
into
test
push
pusha
push
lahf
daa
cmp
jg
in
xchg
enter
sahf
lods
mov
xchg
cmp
fisttpll
pop
lock
and
push
mov
cmp
add
out
mov
scas
lcall
repz
cmp
push
dec
mov
in
pop
push
inc
sti
pop
dec
mov
inc
bound
add
test
or
mov
imull
xchg
cmp
jmp
sbb
jle
cltd
mov
jne
sbb
lcall
push
mov
lahf
cli
or
bound
mov
adc
mov
dec
test
and
inc
pop
add
mov
inc
pushf
fstpt
lret
cmp
and
dec
leave
pop
fmuls
mov
stos
adc
test
inc
mov
sub
out
lods
adc
mov
stc
movsb
icebp
inc
les
ret
xor
jo
fwait
adc
dec
pop
push
sti
push
and
adc
sbb
inc
test
adc
jp
push
ds
pop
int3
shr
icebp
fistl
push
xor
jecxz
std
daa
sti
aaa
cmp
pushf
data16
gs
faddl
xchg
test
mov
sbb
mov
ja
push
pop
mov
adcb
lret
mov
pop
push
sbb
fwait
and
push
insl
xchg
test
sbb
xorb
mov
mov
mov
dec
mov
mov
sbb
sahf
mov
cmp
fisttpll
inc
add
adcb
dec
lcall
or
cmp
mov
cmp
imull
cmp
inc
sti
mov
in
mov
test
cmp
out
aas
cli
iret
iret
and
push
mov
dec
repz
daa
stos
or
cwtl
lret
push
out
mov
std
cmp
mov
icebp
out
dec
shrb
sbb
into
mov
jg
inc
jmp
popf
enter
sub
das
mov
xchg
jae
stos
jo
repnz
into
mov
and
mov
adc
push
mov
jbe
xchg
jns
inc
or
and
je
lret
lret
xchg
cmpsb
dec
mov
mov
rorb
mov
pop
xchg
mov
movsl
pop
scas
fimull
ja
sub
imul
add
arpl
jns
push
pop
fiaddl
sub
flds
stc
inc
xchg
clc
sahf
xchg
xor
lea
xor
cmc
fistpll
into
out
nop
xchg
add
push
and
repz
pop
mov
fcmovu
cltd
loope
push
xchg
sub
lahf
cmpsl
mov
xchg
jae
or
leave
jb
daa
cmpsb
imul
aad
xchg
xlat
jl
in
outsl
ds
adc
pop
dec
std
repz
movsb
aad
pop
dec
sub
xor
iret
leave
add
xor
adc
sbb
mov
in
psubusw
mul
cmpsl
dec
aaa
mov
into
mov
add
or
adc
mov
insl
pop
push
out
lock
in
aad
mov
sub
jne
dec
insl
in
jmp
push
pop
mov
lock
sti
mov
mov
test
frstor
in
repz
decl
lcall
jae
mov
cmp
adc
sbb
add
int3
repz
jno
push
leave
outsl
jnp
jne
push
mov
dec
or
adcl
shlb
and
addl
mov
lahf
inc
ret
gs
aam
aad
mov
xchg
cmp
inc
and
les
adc
push
or
lods
mov
dec
mov
das
or
fcoml
jl
frstpm(287
sbb
jg
std
mov
iret
inc
sti
or
js
mov
daa
subl
cmpb
out
dec
sub
or
sbb
out
test
dec
dec
insb
test
adc
or
xor
into
std
call
inc
cs
push
jecxz
mov
jg
jp
dec
push
leave
add
dec
jb
mov
sbb
cmp
scas
mov
push
xor
sub
xchg
xor
sub
lds
jg
nop
xor
or
jb
test
fisttpl
into
lods
jns
adc
data16
cmpsb
loopne
ret
inc
fwait
push
add
pop
inc
sub
pop
sub
lds
jl
cmp
lret
adc
sbb
cmpsb
stc
jb
push
sbb
stos
int
and
ds
into
mov
stc
aaa
mov
add
cld
xchg
stc
test
pop
movsl
sarb
xor
dec
push
cmpsb
lds
arpl
push
cmp
jne
xlat
xchg
fwait
sahf
jns
jge
lahf
cmp
sbb
inc
aaa
mov
xchg
sub
jnp
enter
sbb
mov
cli
cltd
pop
and
pop
testl
rolb
out
xchg
push
in
lret
mov
sti
xchg
int
stos
sub
and
ljmp
pop
popa
cld
sbb
lcall
andb
adc
icebp
mov
sbb
jnp
sub
adc
cmp
xchg
mov
int3
inc
out
mov
adc
je
icebp
out
repz
pop
aad
repnz
test
or
push
in
sub
sub
jns
flds
adc
rol
jmp
lret
sub
push
rclb
scas
js
arpl
sbb
callw
jb
jmp
cld
scas
int3
insb
sub
push
sbb
sub
push
xor
insl
loopne
imul
sbb
out
dec
sahf
hlt
add
out
addl
or
lods
ds
mov
xor
ret
sbb
mov
dec
leave
add
xchg
insb
pop
fdivrl
ja
cmp
test
inc
sbb
popa
mov
sub
insl
int3
push
or
data16
xor
jae
push
orb
cmpsb
ja
xchg
std
lcall
inc
rcrb
push
test
orl
xchg
rorl
out
inc
and
jbe
jl
aad
mov
pop
lahf
cmp
jg
or
and
scas
out
repnz
xor
rclb
pop
popa
imul
push
sbb
daa
adc
jecxz
xchg
ret
stc
xor
mov
pop
scas
xchg
cmp
or
imul
scas
lds
aas
adc
xchg
jg
sahf
movsb
pop
jmp
addb
or
pop
lret
fwait
or
xorb
test
jo
stos
mov
jno
cwtl
add
hlt
filds
dec
fcoml
lret
shrb
adc
test
mov
sub
sbb
addb
test
int
dec
gs
xchg
fcmove
jmp
xchg
adc
stos
push
cli
fisubs
test
add
dec
aaa
and
mov
sbb
cmp
cmpsb
mov
add
add
in
cmp
push
scas
nop
push
pusha
mov
lret
movsb
sti
mov
cmpsl
mov
sahf
xor
fwait
fwait
dec
sub
cmp
jecxz
mov
hlt
sbb
push
jg
cmp
sub
sub
arpl
xchg
shlb
ljmp
andl
and
xchg
sub
pop
clc
out
jmp
or
lock
or
arpl
inc
daa
cwtl
mov
bound
jnp
mov
scas
push
gs
es
mov
sub
mov
cwtl
aad
leave
xor
stos
lret
cs
test
mov
jo
jo
fcmovne
push
cltd
push
cmp
fs
pop
fs
std
arpl
and
or
pop
mov
xor
pop
dec
mov
jmp
sbb
shlb
loope
out
test
mov
es
out
leave
sub
jb
cmp
jg
xchg
nop
xchg
outsb
sub
mov
fs
mov
jp
cld
es
dec
loope
sub
sub
mov
xor
jo
movb
xchg
adc
sub
and
ds
or
mov
lret
mov
aaa
add
imul
dec
jbe
mov
adc
sti
lret
add
add
lods
pop
xchg
filds
sti
or
in
xor
into
popf
xchg
push
pop
mov
mov
aad
std
arpl
xchg
pop
sahf
inc
or
dec
add
dec
push
and
cmp
daa
dec
lea
out
scas
fsubrs
ljmp
adc
add
sbb
xchg
cmp
sub
stos
add
jmp
dec
ljmp
xchg
sbb
fimuls
jl
es
pop
inc
std
cmp
xor
mov
mov
shl
aad
xchg
mov
jae
out
cmp
xchg
push
push
xchg
and
inc
pop
or
xabort
cli
nop
add
test
call
fisttpll
add
in
popf
cmpsl
push
sub
fdivs
lahf
scas
xchg
mov
mov
in
or
pop
fucom
sub
pop
cld
pop
repnz
cltd
push
and
cmp
sbb
cmp
jmp
int3
mov
mov
jne
mov
xchg
das
pop
dec
push
out
in
scas
je
inc
push
adc
jg
sbb
in
repz
les
sti
add
outsl
push
stos
or
cmp
xchg
fbstp
fs
add
sub
jmp
rcll
sub
in
cmpsb
push
mov
pop
in
xor
xlat
enter
pop
in
scas
sti
mov
xchg
cmc
dec
adc
sub
push
xor
andl
dec
repnz
into
mov
ss
aaa
fimull
xchg
inc
pop
in
cmp
cld
push
jnp
fnstcw
cmp
icebp
movsb
xor
or
loope
ja
cmc
dec
inc
rolb
jbe
cmc
push
mov
pop
movsb
shl
fwait
sub
mov
jp
cmp
xchg
adc
or
inc
rol
in
mov
cmp
aad
pop
iret
mov
cmp
cmp
xchg
inc
stos
les
outsl
call
addr16
aam
lret
mov
je
add
mov
xchg
inc
movsb
aas
test
push
mov
test
adc
or
rcrl
ret
shll
lea
mov
push
rcrl
mov
cmp
and
sbb
mov
push
stos
xlat
sub
loope
mov
aam
mov
test
js
cltd
gs
xor
sbb
dec
inc
out
test
adc
std
jnp
les
pop
out
dec
adc
ret
es
mov
cmp
jno
mov
movsb
cmp
lahf
addr16
dec
dec
and
in
mov
and
sbb
mov
ficoml
lret
mov
or
xor
lods
lahf
inc
pusha
icebp
push
test
inc
push
fstpl
cmp
rcrb
shrb
shl
xor
adc
jne
out
jle
js
cmp
mov
mov
push
daa
cmpsb
sbb
andl
adc
nop
jno
pop
mov
push
test
test
xchg
jne
or
fisttps
popa
sbb
sub
sbb
xchg
pop
jg
lret
mov
mov
sbb
xchg
arpl
xchg
ret
cld
fdivl
sbb
in
ljmp
inc
cltd
sbb
jecxz
mov
pop
sbb
sub
scas
push
dec
cmp
jae
test
or
outsb
and
xchg
imul
stc
sarl
push
or
ss
sti
ror
ja
lea
jo
ds
jo
sbb
imulb
mov
xor
xor
and
xor
add
add
jno
fcompl
mov
mov
mov
gs
loop
cmpsb
insb
xchg
pop
add
pop
loope
sbb
xor
inc
xchg
jno
incb
add
test
imul
imul
mov
loope
or
sbbl
int
aad
cmp
clc
and
cmc
cmp
cmc
cmp
jnp
mov
jp
aad
ljmp
mov
addr16
push
rclb
in
or
inc
adc
mov
mov
jge
pop
jle
or
popa
leave
or
imul
clc
pusha
fstps
pop
fisubs
adc
imul
xchg
enter
sbb
rcrl
scas
pushf
in
jg
add
add
outsl
push
int3
jmp
in
imul
popf
fsubrp
inc
push
in
xor
call
test
jmp
mov
ss
sub
push
in
rorl
stos
data16
sahf
rorl
mov
imul
in
outsb
test
fs
ffreep
jns
push
mov
pusha
xor
mov
push
jle
dec
inc
mov
je
outsl
jae
stc
xchg
sbb
jbe
and
adc
addl
enter
cmp
repz
arpl
lock
in
sahf
imul
mov
ret
xor
les
fs
rcrl
or
das
mov
add
std
xor
push
push
pop
insb
and
lds
sbb
or
fwait
push
sbb
pop
sti
pop
insl
mov
mov
repnz
ret
adc
pop
add
jp
inc
je
mov
mov
jnp
sbb
fcmovne
pop
cld
cmp
mov
jbe
aad
and
mov
sbb
popa
add
dec
enter
iret
adc
inc
cmpsl
or
dec
pushf
lcall
ret
pop
lret
out
movsb
loopne
ficomps
add
sti
fldl
inc
insb
daa
sub
add
cli
aam
push
lahf
gs
cmp
sbb
push
mov
fsubp
out
mov
out
or
mov
aam
mov
mov
pop
push
pop
out
push
inc
aam
push
in
cltd
test
push
aas
lret
pop
fxch
dec
jae
xchg
add
iret
mov
push
aaa
lock
mov
iret
imul
dec
add
aaa
mov
pop
jnp
jbe
mov
les
fiaddl
and
jae
pop
mov
out
jmp
add
aaa
cmp
sbb
or
inc
mov
mov
lea
xchg
clc
xchg
pop
mov
mov
jnp
jno
jmp
sbb
rolb
shrl
fs
cmp
dec
lods
dec
ljmp
sbb
push
xlat
mov
or
js
loope
or
cmp
scas
sbb
add
adc
loopne
xor
cmp
lret
dec
add
mov
push
sbb
ret
cmp
mov
adc
div
mov
sub
lahf
xchg
imul
xchg
outsl
sahf
out
mov
sbb
or
mov
fdiv
push
movsb
and
in
fidivrs
pop
add
outsl
and
outsl
pop
dec
push
or
test
pop
andb
cs
lret
pop
cmc
jg
and
int3
inc
sbb
push
mov
xchg
mov
xchg
add
push
fisubl
in
sbb
cwtl
jecxz
xchg
movsl
cmc
out
mov
fldenv
sbb
cld
pop
fst
mov
sub
ljmp
repz
sub
and
sbb
pop
test
lock
lods
ret
and
push
add
dec
add
sbb
jne
lock
xor
decl
dec
mov
sub
jmp
xchg
inc
cmp
lods
jmp
arpl
iret
mov
leave
mov
shrb
adc
jno
icebp
pusha
rolb
mov
cld
xor
or
jae
hlt
push
js
push
inc
or
mov
cmp
jg
cmp
test
adc
and
into
pusha
es
jb
pop
add
push
push
outsl
jnp
add
pop
arpl
iret
movsl
fisubs
xchg
or
xor
clc
out
add
push
xor
xor
mov
pop
mov
movsl
pop
or
ja
add
dec
add
cmc
sub
mov
push
ffreep
jnp
clc
mov
jne
cwtl
ss
mov
std
jne
imul
call
test
mov
mov
push
push
bound
loope
enter
jg
sub
add
and
adc
imull
dec
fs
cmp
or
outsb
sarl
pop
test
pop
pushf
sbb
fstpt
rclb
fstp
jmp
cmp
in
fwait
push
out
dec
test
cwtl
mov
cld
jmp
or
sub
imul
dec
jecxz
mov
cli
jle
lea
xchg
loope
mov
jle
dec
add
aad
or
mov
mov
test
inc
lds
mov
xor
mov
sbb
in
or
repnz
inc
rclb
jbe
xchg
flds
jle
adc
dec
xchg
mov
dec
sbb
cmp
adc
pop
mov
jnp
cmpsb
dec
sub
jns
testb
xor
or
mov
jno
add
test
jl
jnp
push
sub
xchg
jg
push
rdmsr
popf
push
scas
into
lcall
xor
mov
lods
xchg
sbb
gs
xor
dec
in
add
addr16
movsl
mov
sbb
stos
xchg
adc
jne
adc
xchg
scas
cmp
pop
sbb
jbe
lds
add
cld
mov
mov
test
dec
out
xor
dec
mov
enter
les
sub
gs
dec
lret
enter
xchg
push
or
sub
dec
jmp
fisttpll
shrb
adc
movsb
leave
rorl
push
sub
dec
leave
test
outsb
inc
jecxz
pushf
cmp
mov
cmp
and
xchg
inc
adc
fs
lcall
shl
mov
sub
sub
mov
in
pop
rcrb
pop
pop
push
pop
lods
das
inc
xor
iret
mov
out
mov
pusha
ss
lods
lods
mov
fisubrl
cld
pop
pop
test
fldl
pushf
int3
arpl
sub
mov
mov
jb
mov
push
push
fisttps
fnstenv
xor
mov
hlt
or
dec
or
scas
js,pt
loope
adc
sub
mov
mov
aam
mov
je
enter
mov
and
jle
in
xchg
jp
outsb
jns
sti
or
add
sbb
paddusb
dec
xchg
call
sub
negl
mov
out
pushf
orl
sub
xlat
xchg
mov
lods
pop
push
test
inc
inc
mov
sahf
push
rclb
stc
mov
dec
cmp
adc
sbb
loope
xor
sub
pop
lock
fiadds
and
mov
and
fwait
aam
xor
sbb
out
movsb
ss
fistps
add
nop
mov
aam
xor
rcl
shrl
mov
or
movl
stos
xchg
mov
sub
in
mov
jge
scas
xchg
adc
daa
sbb
jns
push
jmp
sbb
xchg
leave
add
sbb
insb
and
mov
and
fcoml
ret
jg
mov
dec
pushf
and
cmc
or
test
cld
add
addr16
or
xor
aad
fiadds
pushf
fiaddl
or
sahf
sub
jne
xor
mov
daa
inc
sbb
test
sbb
int3
or
lret
cmp
lds
in
sub
adc
dec
and
int3
inc
fsubrs
hlt
pop
in
sbb
jne
sub
push
xchg
je
movsb
pop
lret
inc
jb
sti
lods
inc
cmpsl
pusha
xchg
enter
lods
adc
into
shll
mov
outsl
das
das
hlt
mov
dec
push
add
add
add
sti
int
and
adc
xchg
jge
sub
and
add
mov
xor
sub
nop
mov
lahf
call
jge
sub
les
push
int3
ret
jne
or
and
loopne
mov
adc
pop
gs
mov
mov
int
or
xor
sbbb
lret
jecxz
repnz
push
xchg
cmp
and
adc
adc
ja
dec
leave
jmp
cwtl
testl
adc
cmp
fwait
push
in
dec
inc
lret
in
scas
pop
cmp
negb
push
mov
mov
scas
cld
pop
adc
popf
jno
in
imul
pop
xor
lret
fwait
dec
mov
push
call
add
mov
rorb
dec
idivb
scas
ret
xchg
xor
repz
imul
addr16
xchg
and
push
jae
aaa
bound
push
fs
pop
pop
sahf
roll
cltd
jle
xchg
cmpsl
push
xor
les
pop
push
jmp
add
fcomi
lods
inc
outsl
stos
push
xchg
fs
js
adc
call
out
and
enter
adcb
dec
ljmp
iret
jg
or
leave
sub
pusha
dec
mov
adc
outsb
mov
mov
jp
or
outsb
pop
xchg
iret
loop
push
sbb
cmpsl
cltd
cmovle
nop
add
es
mov
in
and
lret
xor
sbb
sbb
dec
mov
pop
jae
out
insb
in
clc
decl
icebp
enter
jg
out
xchg
mov
sub
outsl
jb
add
add
out
pusha
cli
inc
insl
and
xor
ljmp
iret
mov
aam
pop
xor
ret
popf
lret
mov
mov
inc
xor
mov
insl
push
push
cmpsb
and
mov
out
repnz
inc
push
xchg
ss
inc
xchg
stc
jmp
adc
mov
push
lock
cmpsl
mov
out
mov
push
jno
inc
pop
push
loopne
int3
or
pop
enter
sub
aas
popf
jne
daa
or
repnz
mov
mov
fs
sarb
in
enter
ret
cs
jge
icebp
pop
push
test
sti
outsl
inc
loope
jnp
jae
sbb
pushf
pop
popa
jae
movsb
aas
inc
jecxz
test
insb
in
outsb
idivb
add
pop
mov
jl
and
fcomps
sbb
stos
lcall
xchg
leave
notl
cmp
into
pop
scas
icebp
ror
sbb
je
out
repz
xchg
icebp
mov
pop
stos
push
mov
lods
sub
jae
sbb
cmpl
insb
mov
inc
sbb
sbb
xchg
cmpsl
inc
sahf
inc
or
arpl
sbb
inc
inc
arpl
sbb
repnz
jmp
cmpsb
fs
cs
jae
sub
mov
mov
add
cmp
xchg
outsb
mov
iret
imul
pop
lret
xchg
add
aas
mov
popf
xchg
sbb
call
mov
mov
arpl
sbb
in
fwait
inc
xor
xchg
inc
popf
sub
mov
xchg
or
inc
lcall
in
rcr
pusha
ja
loope
inc
sub
popa
pop
jb
mull
shlb
in
sub
xor
dec
cmp
mov
pop
or
jae
xchg
and
pushf
sub
ret
xchg
leave
cmpb
adc
sub
out
sub
dec
pop
pop
test
pop
jns
fcoms
pop
sahf
stos
inc
test
rcr
xlat
mov
push
imulb
jnp
or
fwait
mov
push
adc
sbb
mov
les
cmpsl
xlat
shl
mov
std
wrmsr
shlb
fldcw
xor
mov
insb
pop
inc
lcall
dec
sahf
fildll
movl
cmpsb
xchg
and
lods
or
and
in
jno
into
push
mov
and
mov
bnd
fnstcw
jmp
rolb
cmp
popa
js
in
daa
pop
add
out
sub
out
mov
aam
jnp
mov
icebp
std
jo
movq
daa
mov
adc
or
jecxz
push
fwait
xchg
mov
outsb
divl
xor
push
adc
cmp
and
or
lret
insb
jbe
lods
sbb
sbb
jno
cmpsb
dec
jle
xchg
je
and
push
lea
ljmp
stos
jae
cmc
xor
fnstsw
mov
js
sbb
cmpsl
pop
pushf
ret
push
imul
fwait
mov
lock
or
mov
xor
cmp
shll
ss
sub
test
loop
dec
jb
sub
or
pop
pop
out
lret
out
arpl
fdivrl
repnz
adc
adc
cmp
adc
nop
xchg
inc
cld
popa
and
daa
or
pusha
repz
cmc
mov
cmp
adc
cmp
jb
xor
in
testl
or
pusha
add
mov
fiaddl
lds
loop
sbb
cmp
in
bnd
mov
inc
pop
mov
mov
imul
xchg
sbb
pop
push
std
inc
jp
stos
shll
dec
adc
jae
leave
jle
mov
add
mov
cmp
test
jne
pop
jbe
cmp
enter
sbb
dec
bnd
das
pop
cmpsl
xchg
cmp
mov
cmp
daa
ljmp
repnz
add
cmp
mov
movsb
push
inc
xor
fdivrs
fildll
xchg
repnz
inc
jge
fildll
jae
lock
and
dec
or
stc
out
mov
or
xor
mov
inc
jo
pushf
inc
in
js
pop
lcall
or
mov
dec
pop
sub
in
mov
cmp
popa
ret
add
outsb
push
mov
les
mov
jo
xrelease
loopne
hlt
mov
cmp
adc
inc
cmp
sbb
aaa
cmp
cmp
xchg
jbe
lret
sub
inc
push
cmpsb
mov
stc
fsubrs
cmpsl
pop
out
inc
add
mov
fsubl
mov
dec
iret
outsb
dec
mov
mov
and
xchg
adcb
cmpsl
xchg
popa
mov
rcrl
jo
iret
dec
loopne
mov
or
pop
add
jne
cmp
testl
jmp
add
mov
shlb
nop
out
lret
ljmp
jl
adc
out
or
bound
pop
aad
mov
arpl
mov
or
hlt
test
aas
jecxz
or
fnstsw
ljmp
in
inc
leave
sub
mov
ret
loopne
push
sub
outsl
in
cmp
add
and
and
push
ret
fidivrl
icebp
mov
mov
filds
in
lock
add
cwtl
iret
push
sbb
aam
dec
mov
cmpsb
pop
filds
mov
icebp
and
mov
jo
repnz
push
gs
rolb
addl
sub
or
cmp
mov
fwait
insl
push
jecxz
test
mov
stos
in
and
arpl
outsb
dec
mov
sbbl
adc
hlt
aad
add
xor
ss
mov
push
inc
adc
movsb
ds
inc
adc
fs
pop
int3
sarb
stc
sbb
jns
cmp
lock
pop
stos
jp
xorb
mov
popf
jns
xor
jge
sbb
fldcw
mov
dec
ss
insb
mulb
gs
fimuls
movsl
push
scas
xlat
jno
icebp
bound
and
imul
mov
aaa
sti
mov
add
xlat
pushl
rcrb
xor
cmp
cmp
decl
jecxz,pt
fcoms
sbb
mov
xor
pop
dec
cs
push
lock
jb
push
mov
cmc
int
mov
add
insl
fidivl
fldl
lea
dec
push
pushf
pop
push
test
cmc
pop
in
push
test
jl
cmp
jmp
rclb
imul
jp
aas
cmp
xchg
push
ficoms
xchg
and
loope
inc
push
lods
dec
dec
inc
and
lret
pop
inc
sub
push
lea
mov
adc
sbb
mov
mov
xchg
sub
pop
pop
js
sub
xchg
aas
push
in
fisubl
jl
sub
sahf
imul
pop
sbbb
rorl
vpunpckhdq
or
xchg
sbb
shlb
scas
gs
fwait
cld
push
in
sub
js
mov
inc
xchg
sbb
insb
pop
and
loopne
aad
ret
out
push
sbb
push
mov
mov
leave
aas
movsb
add
xor
jmp
shll
push
adc
in
scas
dec
and
into
jno
or
mov
mov
jmp
ret
add
push
mov
cmpsl
data16
xchg
mov
cmc
xor
mov
add
pop
jmp
push
or
testb
repnz
out
xor
lock
push
push
leave
pop
daa
sub
icebp
or
xor
add
mov
lea
es
cld
jge
mov
add
call
or
xchg
adc
inc
stc
mov
imul
and
push
mov
lea
xchg
mov
inc
mov
ja
sub
pop
inc
dec
mov
dec
std
out
jnp
repnz
shlb
sbb
cwtl
icebp
mov
push
inc
push
add
mov
cmp
icebp
lret
cmp
jbe,pn
push
cmp
sarb
movsb
jp
or
ret
sub
sub
sbbb
dec
test
fists
jo
jno
xor
cmp
jg
xor
iret
jp
repz
cmp
dec
pop
in
jle
shlb
or
aam
and
sbb
xchg
dec
insb
dec
bound
sbb
lahf
pop
das
mov
in
stos
test
xor
repnz
jns
inc
push
out
imul
push
xor
jae
popa
jbe
sub
outsl
das
popl
out
sahf
leave
sti
mov
mov
div
in
inc
arpl
lret
xchg
call
data16
cwtl
adc
in
loopne
lcall
popl
jge
stos
into
jae
aaa
cmp
jmp
fdivl
lds
push
es
pop
punpckhbw
pop
testb
fistpl
xchg
adc
sbb
and
adc
scas
mov
stc
and
xlat
adc
stos
insl
test
mov
adc
sub
adc
xchg
test
fildl
mov
mov
cmp
or
cmp
test
inc
ds
out
dec
add
jp
push
push
arpl
and
aad
dec
enter
adc
push
xor
fmull
mov
cmpsl
aam
mov
jno
icebp
push
inc
fdivrl
mov
xor
jnp
xchg
xchg
decb
negl
mov
rcrb
cltd
addr16
push
int3
and
pop
inc
sbb
cmpsl
scas
add
lock
and
sbb
adc
in
inc
mov
imul
inc
in
orb
ficoms
int3
dec
jmp
cs
push
push
add
scas
and
out
xor
inc
in
mov
push
xchg
sub
pop
jbe
dec
mov
fnsetpm(287
and
popf
dec
inc
cmp
and
loopne
sbb
ds
sub
daa
mov
in
in
mov
lods
js
lret
jle
pusha
cmpsb
jne
fstpl
pop
fisttpll
xchg
sbb
stos
rorl
imul
int
inc
sbb
push
and
push
das
jnp
test
clc
xchg
mov
outsb
in
jmp
cmc
fldt
stos
mov
mov
out
xchg
loop
xchg
adc
aad
xchg
jmp
outsb
jne
sbb
mov
push
pop
dec
mov
loop
loop
pop
je
inc
mov
jbe
mov
clc
sbb
jle
or
push
push
aaa
or
cmc
inc
sbb
push
daa
mov
mov
add
ret
dec
ljmp
rcll
aad
out
rclb
fldenv
mov
sub
pop
xchg
fnstcw
mov
ja
inc
ret
push
or
and
cmp
out
bound
mov
cmp
or
std
xchg
pop
insb
sub
std
push
and
shlb
jmp
mov
fwait
mov
xchg
and
mov
xlat
pop
jmp
lods
and
xchg
in
pop
jnp
rol
js
adc
mov
jg
xchg
cmp
jae
mov
mov
and
int3
lret
dec
jecxz
mov
pushf
fsubs
xor
inc
mov
dec
dec
lret
mov
cmp
pop
jp
dec
jecxz
inc
fnsave
pop
mov
jmp
sbb
idivl
stos
xchg
jmp
data16
cwtl
rolb
imul
cli
dec
dec
out
insl
das
insb
es
xlat
fistl
pop
xor
inc
std
dec
jns
aad
inc
lock
pop
and
adc
adc
movsb
push
fwait
je
es
loop
sub
mov
xor
pusha
push
sti
rorl
adc
mov
scas
and
aam
mov
sub
push
add
add
add
cmp
dec
hlt
cmp
into
and
pop
mov
xor
dec
xlat
cmp
and
js
push
aas
inc
ret
pop
arpl
inc
scas
ljmp
insl
inc
gs
fs
cs
inc
add
cmc
andb
mov
jbe
or
fisttpll
andb
imul
fdiv
add
xchg
lock
stos
mov
std
or
push
idivb
pop
fisttpll
push
in
repnz
lcall
add
xchg
jbe
push
sub
cmovnp
add
push
and
orb
mov
dec
mov
sub
fsubrl
js
std
aaa
incb
push
daa
movb
sub
pop
or
or
aas
cmpsl
cmp
sub
add
sti
add
mov
xchg
cmpsb
ss
repnz
lea
mov
fs
out
mov
imul
fisubl
out
outsl
jle
inc
xchg
xchg
or
add
out
jno
push
inc
test
jge
dec
insb
sbb
stc
decb
scas
test
js
sub
aad
imul
nop
pop
call
imul
cltd
lds
out
lea
add
rcrb
mov
lock
fldenv
xchg
xor
and
mov
insb
shll
lret
ret
fs
repnz
push
subb
scas
mov
cmp
cmp
lods
fwait
bound
lret
xor
xchg
jb
fbstp
pusha
cmp
push
nop
add
pop
fidivrl
popf
dec
mov
sub
cmpb
adc
adc
xor
jns
lahf
mov
xchg
sbb
sub
pusha
leave
fwait
inc
sti
outsb
mov
mov
adc
push
aaa
xor
mov
push
mov
sub
xor
pop
in
bound
pusha
cmpsb
fcomps
mov
xor
xor
pop
movsl
pop
mov
or
movsb
cmpsb
push
xlat
xor
sbb
sbb
pop
insl
mov
xor
das
jmp
sub
lods
and
cmpsl
mov
push
insl
push
dec
xor
js
mov
push
mov
inc
xor
into
pop
push
push
cvtpi2ps
pop
cmp
js
sub
pop
jo
jge
cwtl
and
mov
decb
mov
add
roll
enter
fldcw
outsl
sarb
sub
xchg
fs
addb
imul
push
sub
les
jno
mov
mov
or
push
push
dec
pop
movb
inc
stos
pop
mov
sub
and
add
mov
dec
xchg
lcall
bound
movsb
add
gs
sti
ja
or
je
inc
lods
loope
jl
or
mov
add
lret
push
and
stos
cltd
jbe
in
aad
out
rcl
jge
insb
adc
mov
ror
jg
mov
stos
adc
inc
icebp
dec
fsub
clc
fmuls
pop
scas
mov
cmpsl
add
cmp
jae
jg
daa
or
shlb
dec
pop
aas
pop
ret
divb
mov
aaa
xchg
cmp
pushf
je
pop
jmp
lods
pop
decb
sbb
shlb
and
lods
test
das
mov
jecxz
in
inc
cmp
jmp
fists
test
aam
cmpsb
das
xchg
stos
dec
hlt
xchg
test
cmc
cmp
push
lcall
push
jge
rcll
aad
fcmovnu
repnz
dec
xor
xlat
mov
xchg
dec
jg
push
pushf
push
jp
mov
push
xor
pop
mov
xor
lcall
icebp
nop
outsb
aam
scas
subb
xchg
add
neg
loopne
push
and
mov
mov
dec
repnz
and
xor
pop
or
sbb
mov
lea
rclb
sub
stos
jecxz
push
enter
call
dec
inc
or
xchg
fldl
adcb
cmp
rolb
fwait
shl
push
lret
pop
cmp
jnp
mov
xor
and
xchg
iret
pusha
mov
cmp
mov
push
jge
outsl
cld
xchg
shl
sbb
repnz
mov
test
xchg
in
repz
cmp
xor
call
xchg
ja
or
in
push
popf
xchg
or
daa
jmp
adc
dec
es
dec
call
mov
and
mov
pusha
test
rorb
fs
dec
pop
fiadds
push
cwtl
fwait
xchg
std
pop
out
xor
aad
sti
push
add
mov
sarl
xchg
loop
add
cmp
jg
in
mov
je
es
xchg
sub
addr16
cmpb
out
pop
sahf
out
mov
inc
cmc
xchg
loope
add
push
mov
cmp
popf
test
xlat
insb
pop
jae
fsubrl
fidivl
fwait
xor
lret
dec
sub
jns
or
imul
repz
adc
popf
and
adc
repz
xchg
repz
add
adc
push
daa
movsl
aas
mov
and
push
jbe
jg
push
cmpl
arpl
mov
inc
sub
inc
sti
cmp
fwait
pop
pop
fnsave
rcrb
in
testl
js
movsl
nop
xor
int3
shll
fmuls
lret
dec
pop
inc
cmp
aam
lds
push
mov
test
jmp
pusha
jns
xlat
mov
mov
mov
rol
or
std
mov
jne
subb
outsl
push
mov
in
js
and
xor
xchg
in
xor
pop
jmp
enter
ja
push
dec
stos
jb
push
scas
dec
dec
int3
push
push
mov
je
in
cmp
xor
aaa
sbb
shl
cmpsl
ja
mov
sub
cs
mov
mov
sub
and
nop
xlat
inc
imul
test
in
push
pop
popa
out
test
rcrb
shll
pop
insb
cmp
jo,pt
mov
xlat
xchg
repnz
add
lret
mov
popf
insl
inc
and
xor
test
insl
cmp
pop
inc
cwtl
add
andb
roll
and
pushf
dec
je
pusha
je
xchg
mov
lods
xchg
inc
mov
jb
mov
je
fmuls
das
cli
enter
cmp
inc
popf
bound
sbb
mov
push
jnp
cs
dec
pop
jl
fistl
xor
mov
mov
mov
addb
sbb
mov
inc
lcall
outsl
xchg
pop
scas
cmp
push
andl
jbe
push
push
cmpsb
rclb
mov
fmulp
pop
inc
out
and
mov
sbbb
lret
test
xorb
or
fs
adc
mov
adcb
push
movsl
test
frndint
mov
mov
pusha
cmpsl
pop
cmp
int3
pusha
cmp
add
sub
xchg
ds
sbb
xlat
insb
out
stos
cmc
addr16
and
jns
shrb
cmp
sbb
jb
cmp
mov
js
push
stc
push
push
sub
mov
xchg
movsl
jbe
sti
aaa
pop
or
jnp
cmp
js
and
fsubrl
out
adc
cli
mov
ja
int
inc
lcall
mov
insb
mov
xchg
mov
js
adc
push
mov
adc
or
std
lods
sbb
rorb
mov
or
enter
pop
fcomp
or
data16
mov
lret
icebp
xchg
sbb
jae
fists
out
cmpsl
pushl
pop
xchg
hlt
aad
or
icebp
int
sub
mov
mov
push
dec
push
mov
sbb
adc
sbb
sub
cmpsb
mov
add
xchg
mov
xor
push
mov
and
xor
fs
fsubr
push
adc
ror
hlt
and
push
pop
push
test
jle
and
push
push
mov
aam
dec
js
cmc
xor
jp
and
jns
jne
hlt
pusha
lds
dec
bound
outsb
loope
pop
pop
stos
insb
xchg
jg
pop
addl
mulb
insl
xor
test
inc
pop
push
scas
stc
adc
ret
adc
xor
repz
mov
nop
int
movsb
mov
negl
xor
lods
xchg
sub
out
cmp
bound
jo
lahf
mov
cmpsl
xor
jo
js
inc
add
mov
mov
out
aas
pusha
mov
es
push
mov
insl
xchg
mov
pusha
mov
and
aad
lret
cmp
mov
pop
loopne
repnz
inc
rorb
lret
jle
outsl
aaa
test
enter
or
dec
cmp
mov
sub
xchg
and
mov
lods
fsubr
mov
pop
and
or
xchg
inc
pop
mov
aad
test
out
jno
rorl
jle
ljmp
push
fs
mov
fld
ljmp
jge
test
popf
mov
stos
das
test
mov
pop
add
sub
cmp
mov
push
or
cltd
add
leave
xor
push
push
mov
filds
ss
mov
leave
cmp
js
pop
call
push
xchg
xor
ret
stos
out
aam
subb
loope
sahf
ljmp
xor
jge
scas
inc
jge
mov
stos
pop
cld
ds
fcmovnbe
cmpsb
aas
xchg
sub
int
cmp
stc
cmpsb
mul
add
out
lret
mov
mov
push
inc
int3
dec
pop
popf
lret
mov
fisttpll
sbb
je
in
add
jne
dec
scas
lea
xor
incb
cmpsb
mov
lock
xor
adc
push
xor
push
movsb
iret
mov
mov
loop
push
jmp
add
mov
int3
fs
rcl
outsl
xor
mov
pop
add
sub
xchg
xchg
adc
xorl
dec
pop
outsb
negb
sub
mov
in
push
push
stos
dec
sbb
push
dec
scas
aam
sub
push
aam
xchg
sbb
sub
data16
dec
call
in
sbb
insl
push
pop
xchg
and
adc
pop
aaa
sub
jb
sbb
adc
mov
xchg
cmp
cld
xchg
das
pop
repz
mov
or
loope
mov
das
pop
adc
sbb
push
cwtl
scas
pop
jo
push
jp
gs
fdiv
mov
push
cmpsl
sbb
sub
jo
add
pop
and
cmpsl
and
mov
shrb
icebp
mov
mov
adc
mov
add
mov
jae,pt
add
imul
mov
cwtl
dec
mov
negb
repnz
pop
xor
inc
sub
mov
xchg
sarl
mov
das
scas
fsqrt
lcall
mov
and
adc
cwtl
fstp
nop
lea
hlt
bound
xchg
dec
into
es
pusha
stos
push
sub
xchg
xor
lcall
cmp
mov
sub
iret
inc
lret
and
int3
adc
les
pop
icebp
push
test
mov
stc
sti
fwait
mov
inc
std
aad
daa
in
mov
hlt
repnz
xor
in
jmp
mov
jae
out
add
icebp
ss
jb
pop
add
push
pop
in
and
mov
jecxz
aas
sbb
out
pushl
push
aaa
jnp
lock
jg
pop
fs
movsl
and
and
ds
cld
add
js
ret
sub
mov
jne
mov
jnp
inc
cld
loopne
mov
sub
jp
sub
in
aas
mov
cli
or
mov
lds
jl,pn
lret
sbb
es
xchg
sbb
xchg
aad
mov
mov
push
mov
lret
add
test
addr16
ret
in
jmp
xor
rcrl
shrl
inc
xchg
or
sbb
sbb
and
test
inc
sub
ss
mov
lods
mov
jmp
lods
dec
dec
inc
mov
cmpsb
sbb
mov
aaa
clc
fwait
add
dec
stos
ds
sahf
ds
mov
ret
mov
iret
inc
popa
sbb
movsl
pop
xor
push
xchg
jae
jp
mov
fsubl
call
cli
cld
push
les
inc
jg
cmp
jno
add
pusha
bound
inc
jl
and
loop
fisttpll
je
repz
mov
xor
loope
jle
push
mov
je
xchg
adc
negb
push
push
xlat
testb
add
jg
movsb
inc
orb
dec
psllq
rorl
push
cmp
xchg
xchg
loopne
and
arpl
mov
pop
or
imul
mov
push
ret
mov
sub
inc
imul
cs
mov
jg
mov
xor
sub
lret
push
cmp
mov
loopne
cld
fiaddl
inc
xchg
scas
push
jmp
popf
pop
jo
mov
sbb
adc
mov
pusha
bound
sub
dec
imul
jb
pop
sbb
outsl
aas
xchg
stos
or
ret
neg
and
jbe
mov
cmovne
xor
push
jmp
inc
jg
jno
jl
fistpll
push
pop
push
xchg
jnp
outsb
popa
movsb
out
jno
pop
jmp
das
enter
ss
std
je
bound
repz
dec
lahf
and
test
out
hlt
push
xchg
mov
rcrb
fwait
pushf
jge
sub
mov
or
gs
or
and
lods
xor
sar
add
inc
push
bound
daa
sbb
je
cltd
or
mov
addl
sbb
xchg
aas
jl
push
ret
sbb
adc
in
inc
jne
pop
ret
les
inc
xlat
je
loope
fcoms
lcall
mov
or
or
dec
stc
inc
mov
mov
sbb
jb
test
adc
sbb
inc
mov
int
dec
pushf
les
sarb
cmp
pop
jge
mov
xor
fldcw
mov
mov
mov
dec
dec
xor
fbld
xchg
sub
jb
and
xor
mov
aam
adc
jae
ret
inc
dec
fists
addr16
lahf
sub
cmp
insb
je
cmp
enter
gs
xchg
and
hlt
in
ret
mov
push
pop
iret
cmpsl
inc
ss
jo
pusha
pop
sbb
cmp
stos
dec
jne
xlat
sub
push
test
xchg
ja
cwtl
dec
out
cmp
cld
dec
cld
call
push
pop
mov
inc
push
in
test
mov
mov
jge
lds
mov
and
push
mov
xor
inc
loope
xor
xor
push
mov
lods
shll
loope
loopne
scas
stc
pop
cmpsb
jge
aad
mov
jnp
nop
push
clc
dec
xchg
divb
sub
or
and
addl
lahf
aad
push
jg
mov
push
je
inc
xchg
aad
dec
or
pop
cli
jbe
adc
push
or
or
jb
add
cmp
enter
mov
mov
lcall
popa
jnp
repz
ret
inc
add
lods
inc
dec
pushf
sbb
pop
lods
out
cs
fisubrl
cmp
repz
movsb
mov
xor
sti
xlat
add
lret
jecxz
mov
out
sti
cmp
sbb
lds
stos
xor
jnp
push
sbb
fistpl
daa
insb
mov
mov
xchg
aad
or
jo
jecxz
jb
in
jl
push
push
mov
xlat
sbb
inc
mov
pop
in
cltd
int3
sub
shrb
mov
inc
mov
cmc
or
lods
enter
shr
adc
xchg
or
pop
out
sub
bound
or
shl
outsb
mov
in
push
mov
ret
xchg
jmp
jbe
out
dec
int3
js
out
dec
loop
pop
add
add
sbb
push
or
aaa
test
sbb
ret
test
ficomps
sbb
test
jo
sub
mov
scas
adc
jne
shrl
adc
inc
cltd
dec
mov
ljmp
ret
dec
fistl
xor
mov
add
jg
pop
or
mov
add
and
test
popf
aad
cmpsl
aaa
imul
mov
push
orb
les
xlat
dec
add
sbb
insb
in
lret
xor
into
adc
add
jg
rolb
cld
das
mov
or
pop
pop
aam
lods
push
inc
mov
jecxz
ja
mov
je
mov
dec
cmp
movsb
and
push
lahf
jns
scas
divl
out
jae
mov
ljmp
cli
sbb
aas
cmp
ja
aas
cwtl
dec
inc
mov
inc
dec
fildl
scas
sub
ja
or
scas
push
lods
in
xchg
movsl
cmp
and
nop
test
jp
aaa
lods
fisubrs
pop
cmp
push
mov
inc
push
mov
xchg
test
test
cmp
mov
in
xchg
pop
lea
pushl
push
loope
inc
lock
incb
sti
lea
outsb
loopne
xchg
sub
loop
ret
push
lcall
add
jl
xor
inc
fmull
outsb
dec
and
dec
lods
ret
jmp
jmp
xchg
push
cmp
rol
shll
jbe
test
das
outsl
fdivp
cltd
lret
push
mov
stc
mov
sub
mov
sahf
xor
andb
stos
fsubs
xor
adc
stos
xchg
shlb
in
or
mov
mov
jnp
and
xchg
adc
push
test
inc
sbb
addr16
testl
fwait
jno
insb
xor
push
mov
pop
push
cmp
pop
pusha
sbb
cld
fsubrl
xchg
movsl
dec
mov
jl
mov
testb
jecxz
sub
lret
mov
repz
xchg
fidivrs
mov
dec
fst
notl
ja
push
mov
lods
xor
pop
inc
sub
sub
sbb
mov
pop
push
in
mov
pusha
adc
jo
push
pop
and
mov
push
std
mov
fnstsw
mov
xor
push
jae
fistps
xchg
sti
loope
mov
jp
sbb
insl
movsl
add
lahf
pop
mov
in
inc
xchg
outsl
ret
popa
mov
push
xor
inc
data16
mov
je
adc
mov
imul
bswap
push
mov
mov
mov
mov
pop
cld
mov
in
ljmp
mov
ss
loop
call
shrl
add
out
lds
aam
ja
clc
mov
mov
or
mov
jb
mov
sarl
mov
test
sbb
imulb
mov
fucom
xchg
inc
lret
out
mov
lret
cltd
jge
mov
in
inc
push
imul
and
and
out
sub
adc
add
js
xor
sub
subb
xchg
rcll
sub
jecxz
fbstp
mov
mov
mov
jbe
adc
aam
imul
daa
dec
add
xchg
sub
outsb
aam
xchg
movsb
jb
xor
or
pusha
inc
add
mov
push
notl
lods
xor
jo
aam
imul
ljmp
sub
xchg
inc
sub
lahf
or
icebp
jl
mov
sarb
lahf
cld
mov
add
sub
mov
repz
fcmovu
mov
inc
adc
sbb
in
aaa
mull
pop
xchg
mul
sub
dec
jae
or
xor
and
jge
mov
fcompl
je
pop
mov
out
or
jo
fsubl
add
cmp
pop
xchg
std
xor
mov
cmp
mov
push
sbb
xor
cmp
stos
cmc
push
ja
insb
pop
out
pop
inc
mov
test
fstpl
pushl
adc
sbb
push
mov
insl
cli
je
pop
mov
pop
shll
add
in
or
mov
xchg
dec
mov
dec
daa
test
push
jno
sub
fstpt
mov
pop
stc
jns
jb
pop
int
cmpsl
imul
jne
test
sarb
in
mov
lahf
std
bnd
fs
jmp
shlb
mov
cli
es
sahf
cmp
dec
or
sub
mov
push
lods
pop
push
icebp
inc
push
and
or
nop
cld
imul
inc
mov
jns
inc
dec
mov
cli
or
xchg
inc
loopne
arpl
adc
repz
sub
push
cmp
jb
dec
cmpb
sub
adc
cmpsb
mov
data16
call
ficoml
insl
and
in
and
jle
pop
ficoms
loop
mov
lahf
shll
mov
cli
and
sub
mov
popa
addr16
jl
andb
aaa
popl
shlb
aaa
sub
scas
push
jbe
xchg
inc
jmp
jge
pop
adc
mov
scas
inc
xchg
mov
pushl
outsl
lds
imul
fcoml
pushf
mov
pop
enter
hlt
imul
mov
gs
mov
rolb
movsl
sbb
fidivs
dec
dec
mov
sub
std
jmp
cmpsl
cmc
repnz
mov
filds
sub
cmp
jno
ja
lods
inc
pushf
cld
lahf
add
repz
dec
fsubrl
pop
fsubr
inc
lea
jno
jbe
rclb
iret
cmpsb
jnp
pop
jp
xor
call
or
pop
scas
mov
cwtl
pop
popf
and
jae
fstpl
movsb
ret
sub
int3
shlb
jl,pt
add
jno
push
dec
nop
mov
pop
sub
ds
sub
scas
popa
mull
push
jo
in
mov
test
sahf
bound
out
mov
sub
xchg
loope
and
cmpsb
push
inc
aam
cmpsl
inc
aaa
jns
lock
imul
or
push
push
les
pop
sub
cltd
stos
push
ret
iret
pushl
sub
xchg
add
notl
sub
addr16
jnp
mov
sar
mov
cmp
daa
xchg
cmp
daa
sbb
daa
call
movsb
push
and
xor
add
cwtl
pop
add
loop
fsub
xor
insl
mov
in
call
jecxz
pop
test
or
call
add
xor
dec
mov
mov
push
test
or
sbb
or
push
ja
dec
mulb
mov
push
or
cmc
mov
ficomps
lds
sub
aaa
mov
in
push
outsb
mov
sub
cmpsb
int3
mov
test
fcoml
cmp
je
out
xor
les
nop
inc
and
imul
cmp
ja
test
rcl
xor
push
cmc
xchg
sub
rolb
sar
arpl
mulb
xchg
pop
push
sub
std
std
push
and
cli
xor
fcmovu
push
and
into
mov
sbb
jnp
sbbb
subb
add
loop
stc
xchg
cld
mov
mov
stc
xlat
and
sub
fs
test
cmc
mov
pop
mov
subb
or
dec
dec
stc
pop
lcall
xchg
gs
arpl
jno
add
cmpsl
fs
inc
sub
and
push
cltd
call
test
push
or
jge
mov
shll
pop
jb
jo
mov
jno
aas
scas
jns
lcall
fidivs
dec
pop
jge
outsb
inc
pop
scas
pminub
add
mov
cmp
aaa
loopne
das
adc
xchg
enter
sbb
lcall
cmp
mov
into
cmp
divb
les
and
pop
push
sbbl
add
and
into
adc
sub
into
fwait
xchg
out
inc
push
bound
ret
lcall
fisubrl
outsb
repz
enter
mov
stc
pushf
sahf
jnp
insl
int3
loopne
adc
add
adcl
je
pop
pop
push
loop
pop
jo
dec
push
pop
cmp
lods
fisubs
mov
leavew
xlat
aaa
xlat
std
pop
inc
test
push
mov
dec
mov
mov
adcl
add
out
jb
fwait
call
push
pop
fsubr
decl
mov
add
pop
fidivrs
lock
sbb
icebp
sbb
adc
lock
pop
fstpl
scas
or
fdivl
add
cmc
fwait
pop
pop
mov
add
loop
cmpsb
xchg
mov
push
dec
icebp
mov
in
mov
rcll
xor
cmp
jle
or
jmp
and
out
cs
les
test
mov
test
or
xor
movsb
int3
xor
xlat
push
adc
push
xchg
inc
jo
cmpsb
or
test
xchg
lock
or
pop
and
pop
mov
clc
cmpsl
addl
cmpsb
mov
stos
shl
aaa
pop
pop
aam
pop
or
sub
cltd
and
mov
mov
xlat
push
xor
loopne
jno
addr16
mov
sub
inc
jle
shrb
dec
fidivrl
xor
xchg
add
imul
cmp
es
pop
js
int3
sbb
outsl
mov
popf
outsb
cmc
movsl
add
pushl
sub
out
jecxz
add
in
adc
sti
sbb
test
sarl
notl
or
add
dec
add
sbb
cmp
in
addl
das
jp
pop
rcrb
jb
cmp
test
cld
xchg
adc
cmc
mov
jle
add
and
inc
mov
add
shrl
cltd
inc
jne
in
jle
cld
add
add
int3
loopne
sbb
ja
aad
add
orl
mov
pop
dec
ret
fnstcw
repnz
not
stc
imull
cmpsl
and
push
test
inc
nop
sub
dec
movsl
mov
adc
mov
pop
and
jne
xor
dec
outsl
cmp
pop
mov
ds
ljmp
das
mov
xchg
lcall
inc
and
addps
into
jno
lds
xor
jp
jle
pushf
jg
cltd
popf
mov
and
inc
xchg
into
dec
add
inc
popa
and
in
icebp
pop
mov
cmp
clc
jne
add
out
sti
push
clc
xchg
add
pop
daa
bound
gs
lock
ret
cmp
mov
inc
cmp
push
dec
fwait
je
test
push
out
add
cmpl
add
pop
xlat
inc
test
xchg
inc
sbb
sbb
leave
jp
aad
or
sbb
cmp
int
cmpsb
pop
xlat
xchg
iret
add
lods
mov
push
stc
jle
xor
cmp
push
add
lret
cmc
dec
jo
shr
push
jge
les
sub
xorl
jo
jle
xchg
push
pop
pop
stos
jo
cmp
and
xchg
push
xchg
cltd
add
dec
scas
sbb
push
xor
xchg
mulb
adc
mov
in
jns
call
add
out
insl
inc
mov
pushf
sbb
lods
jmp
outsb
xor
imul
in
lcall
out
sbb
xchg
dec
cwtl
std
adc
rorb
sbb
mov
aas
movsl
repz
sbb
repnz
sub
pop
xchg
mov
movsl
shll
lods
mov
push
push
dec
out
cmp
jno
call
subl
les
addl
enter
stos
adc
sahf
mov
std
fdivrs
addb
inc
shrl
bound
bound
les
movups
push
ja
inc
jno
int3
xor
das
push
in
rcll
pop
mov
mov
mov
sub
bound
xor
in
sub
lods
sub
adc
loop
lahf
mov
imul
ret
divl
stos
add
xor
cwtl
inc
iret
fisubrs
or
aaa
mov
dec
pop
imul
pop
fmull
bound
sub
jno
jbe
add
jne
dec
and
sub
das
jo
jl
cwtl
push
adc
jne
iret
subb
loope
mov
stos
and
scas
jle
in
je
or
mov
xlat
inc
xchg
test
es
ljmp
mov
test
test
mov
cmpsb
test
xorl
ljmp
mov
jbe
rcll
loope
icebp
stos
xor
xor
pushf
push
xchg
or
call
adc
movsl
fistps
call
sub
gs
pop
enter
call
add
pop
loopne
and
or
dec
jns
jbe
adc
xchg
inc
jbe
sbb
add
cmp
push
cmc
jb
xlat
pop
pop
push
cltd
mov
inc
lea
fnstenv
sti
cmpsb
or
sbb
push
jg
pop
xor
arpl
cmp
aam
lret
icebp
leave
in
jmp
data16
dec
jae
pop
add
icebp
cmp
sub
movsb
xchg
mov
cmp
or
sub
fwait
inc
mov
sub
add
xchg
sbb
sbb
pop
sub
xchg
icebp
jg
push
inc
or
sahf
dec
cld
mov
xor
inc
or
mov
xchg
addr16
imul
cltd
stc
pop
mov
mov
addr16
ja
pop
and
fistpll
xor
inc
cmp
test
js
or
movsl
subl
push
mov
pop
shlb
js,pn
bound
stos
repnz
xor
sub
push
sahf
ja
bound
mov
mov
clc
icebp
gs
in
mov
push
aad
inc
or
mov
jnp
icebp
xchg
out
inc
dec
add
jnp
stc
sub
jnp
push
subl
mov
mov
enter
add
or
pushl
mov
push
scas
xor
and
dec
sbb
ljmp
in
divb
repz
xchg
data16
in
xchg
adc
sub
paddq
orb
xor
mov
js
pushf
mov
outsl
xchg
out
pop
fsubrs
incw
mov
and
sub
dec
icebp
clc
xchg
jns
into
ss
pop
cmp
repz
push
cmp
and
cmc
test
shl
push
push
mov
fs
shl
xor
lcall
cltd
push
push
and
clc
push
pop
out
push
pop
adcb
cli
bound
mov
mov
adc
sub
stc
dec
jo
sbbb
stc
dec
icebp
xor
std
cmp
inc
ljmp
xlat
nop
sahf
cmp
xchg
push
dec
subl
xor
gs
sbb
inc
or
mov
fcmovbe
mov
jbe
and
stos
loopne
fists
jmp
shll
scas
fwait
insb
jns
xor
jns
shlb
imul
pop
out
sbb
lret
xor
cmp
add
pop
sub
jmp
divl
cwtl
mull
mov
xchg
and
and
je
or
add
mov
xchg
sbb
outsl
ja
cmp
testb
pop
cmpsb
fucomip
and
mov
lods
mov
mov
ret
mov
mov
pop
inc
sub
jecxz
push
sbb
outsb
paddusb
inc
mov
test
ror
lods
adc
jo
cmp
jo
mov
add
sbbb
and
dec
movsl
roll
scas
repnz
xchg
mov
shl
mov
imul
add
fwait
ret
lahf
fmuls
mov
lock
mov
inc
fmull
cmc
push
xchg
out
shl
mov
adc
inc
jle
pop
add
cmpsl
mov
mov
shlb
push
jle
push
cmpsl
int3
add
scas
jo
fxch
hlt
jae
addr16
sub
movsb
add
pop
fwait
cs
mov
and
xor
movsb
lods
lahf
sbb
sbb
loop
pop
pusha
jne
pop
sbb
outsb
loop
fcmovnu
add
loop
xchg
pop
push
mov
add
jo
cmp
push
lods
mov
inc
inc
loopne
in
rorl
repnz
inc
out
addr16
xor
sahf
xor
int3
and
pop
frstor
ud2
adc
dec
mov
jo
stos
cmp
xlat
std
jge
mov
outsl
in
aam
std
push
inc
pop
mov
ljmp
sti
ficomps
hlt
xchg
mov
pop
ljmp
inc
jno
jge
mov
ja
sub
popa
and
inc
adc
mov
mov
out
jmp
fs
sub
xor
insl
push
mov
lods
cmp
shrb
arpl
mov
insl
repz
mull
mov
mov
repnz
sahf
xor
or
lret
jg
jp
inc
mov
sbb
loopne
and
xchg
imul
loopne
adc
leave
push
cmp
loop
test
das
inc
mov
cltd
mov
cmp
push
in
call
adc
jge
fwait
fs
ds
fdivrp
daa
divl
pop
negl
xor
mov
push
ss
xchg
mov
xlat
inc
ret
rcrl
ds
je
ds
adc
add
dec
push
sarl
jne
mov
ret
lods
xchg
pop
inc
xchg
mov
or
push
ds
lock
mov
mov
xor
fisttpll
dec
jg
push
mov
pop
stc
or
cmp
cmpsb
mov
add
movsb
jmp
add
dec
and
dec
out
mov
cli
sti
jo
dec
jns
mov
cmc
movsl
mov
testb
mov
xchg
sbb
push
mov
push
jbe
les
std
mov
xor
int
lds
fcomp
gs
lea
dec
loop
jnp
push
cmp
adc
fdivl
mov
rclb
imul
or
and
lea
xchg
fsubrl
push
test
sbb
ds
ret
xor
jno
mov
inc
imul
mov
add
mov
in
leave
icebp
out
jo
cld
pop
jp
lods
pop
stc
cmpsb
jp
push
push
xor
xor
push
repnz
and
and
rcr
call
adc
cmp
mov
movsb
dec
nop
inc
stc
push
inc
mov
insb
scas
divl
cs
movsb
sbb
push
add
mov
push
pop
in
cmpsb
popa
mov
add
imul
stos
shl
inc
stos
ss
pop
adc
cmp
add
in
aaa
jmp
adcl
cli
jmp
and
cld
idivl
jns
jle
adc
xchg
inc
cmp
cmc
jno
pop
popf
je
loopne
sub
mov
sub
lret
pop
jb
dec
test
mov
pop
push
jmp
test
stc
shll
adc
xchg
in
outsl
orl
cmpsl
add
iret
iret
jge
and
xor
repnz
into
repnz
push
pop
popa
cltd
inc
cmp
pop
imul
jmp
daa
into
jbe
add
adc
mov
mov
cmpsb
mov
out
mov
cmpsb
cmpsb
cli
icebp
ret
ljmp
inc
aam
aam
adc
insl
dec
mov
push
scas
adc
xchg
sbb
pushw
adc
scas
lret
idivb
pop
mov
imul
adc
or
mov
les
lret
push
jl
cmp
jmp
insl
movl
in
mov
popa
fmull
jl
in
sbb
cli
and
call
je
pushf
lock
cmp
fsubl
rolb
stos
jl
adc
push
leave
hlt
mov
xchg
out
inc
imul
adc
dec
pop
xchg
mov
mov
jmp
fiadds
ja
ret
sub
out
mov
in
arpl
ljmp
test
fadds
xchg
or
lret
sub
mov
mov
loope
insl
insl
iret
neg
push
loop
mov
testb
or
sbb
in
jmp
mul
push
daa
push
sbb
xlat
mov
gs
xor
aam
push
fwait
arpl
push
fildl
inc
es
ds
jge
sub
fadd
ret
sarl
cli
repz
es
orl
mov
inc
add
ret
mov
lock
insl
lods
or
mov
mov
add
out
xor
and
xor
fstps
test
icebp
sub
dec
test
icebp
out
jb
cmc
inc
fldl2e
out
add
mov
jle
test
add
shll
mov
aam
cld
mov
adc
sbb
sbb
shrl
inc
mov
and
decl
outsb
jae
in
push
mov
mov
fdivl
or
push
jl
js
jbe
sub
les
test
icebp
notl
es
adc
sbb
enter
cmp
aad
pushl
jo
and
mov
jge
xlat
adc
addb
jg
data16
mov
mov
sub
mov
mov
xchg
xorb
lret
mov
pop
mov
mov
inc
push
xchg
push
incl
loopne
xchg
pop
in
or
xor
pop
sub
popf
daa
addl
xor
stos
xchg
push
cltd
loope
and
and
push
mov
mov
or
out
cmp
test
mov
jns
jl
and
and
mov
test
pop
insb
fnstsw
adc
pop
js
inc
into
and
mov
faddl
fwait
inc
push
add
out
imul
jp
mov
push
xchg
xchg
pushf
pop
pop
hlt
loop
scas
dec
dec
jns
xchg
and
iret
loope
dec
jno
fldenv
shr
mov
dec
addr16
jmp
xor
int3
iret
xor
rolb
es
lea
ljmp
out
and
in
dec
lea
xorb
jp
jns
mov
dec
sti
fsubr
ror
adc
pop
dec
imul
mov
xlat
mov
arpl
popl
ja
inc
cmpsl
push
dec
pop
xor
push
mov
incl
inc
inc
add
insl
and
insl
pop
repz
stc
pop
lret
push
and
push
test
test
in
dec
popa
sahf
fmul
cmc
adc
movsb
ret
push
adc
fldl
push
or
movsb
inc
pop
cmp
rcll
xchg
cmp
cmp
out
jg
mov
inc
shll
dec
inc
xor
sahf
cmp
push
adc
jg
into
cmp
mov
mov
and
ljmp
outsb
add
and
test
mov
cmp
lods
fidivrl
cs
pop
and
int
popl
ret
rclb
adc
aam
dec
push
js
jg
mov
in
mov
cmp
pusha
aad
sbbb
out
mov
gs
push
test
loopne
imul
mov
js
out
dec
fscale
outsb
pushf
mov
sub
in
pusha
jb
test
pop
inc
lret
mov
pop
dec
mov
mov
ljmp
idivb
in
xor
or
xchg
pop
cmpsb
in
cmp
adc
add
push
push
inc
shrl
orl
pop
xchg
std
push
dec
xor
ja
mov
or
add
popa
aad
pushf
inc
and
xor
repz
jp
inc
xchg
js
idivb
rorl
lods
cli
insl
inc
xchg
roll
pop
push
movsb
rcl
xlat
jnp
inc
push
sbb
jae
les
add
inc
dec
call
loope
ret
xchg
idivl
xor
push
mov
jmp
or
out
divl
lods
pushf
sbb
cmpsl
mov
testl
popf
out
inc
out
xchg
movsb
sub
xchg
jecxz
popf
arpl
jae
cmp
cmp
andl
cmpl
imul
aas
xor
push
xor
inc
sub
es
sub
shlb
mov
xchg
nop
xchg
test
xchg
pop
mov
inc
pop
xlat
bnd
gs
xchg
jmp
lock
scas
cmp
xchg
cli
sub
inc
inc
jae
and
push
sbb
cmp
mov
dec
ss
jp
mov
lret
sub
jae
in
stos
jo
jnp
inc
sti
mov
fwait
jecxz
bound
mov
js,pt
addr16
cmp
icebp
sub
cmpsl
sbbb
push
push
cli
mov
hlt
push
enter
test
xchg
gs
push
lret
ret
or
fucom
test
pop
gs
dec
stos
ret
cli
fptan
sub
or
mov
loopne
in
mov
xchg
xchg
jo
into
idiv
in
cmp
jp
sub
cmp
mov
mov
mov
dec
sbb
out
sub
xor
add
mov
push
imul
es
and
adc
lds
mov
push
inc
loopne
pushw
mov
rcr
cmp
sbb
loope
test
ret
shlb
push
jae
pop
push
push
add
jge
mov
int3
out
aaa
sbb
pop
mov
dec
and
add
pop
ja
sti
and
dec
and
inc
aaa
scas
dec
jp
negb
sub
pop
adc
shll
pop
mov
jp
push
mov
jge
je
loop
enter
adcl
cmp
sub
pop
cmp
fwait
into
shlb
popa
int3
mov
jbe
sub
mov
pusha
pop
pop
sahf
movsl
inc
data16
je
add
xor
jns
push
pop
jp
cmp
test
inc
icebp
pop
add
pop
in
leave
sbb
mov
add
in
cmp
push
sahf
popf
inc
dec
gs
and
inc
sti
out
outsb
mov
jle
xchg
pop
test
pop
loope
cmp
xchg
and
shlb
or
loopne
pop
add
jns
into
cmp
out
jle
dec
dec
adc
mov
jl
xchg
sbb
pop
ret
lea
fs
rcl
jno
xor
icebp
and
lods
xlat
xchg
or
clc
adcl
daa
mov
lcall
es
mov
pop
jo
or
dec
and
ret
push
push
outsl
lahf
cmp
insb
loop
adc
add
xor
xchg
fs
push
xchg
jge
ret
movsl
iret
mov
dec
aam
sub
repnz
es
lret
sub
lock
pop
mov
clc
xor
cmp
push
pop
jns
fisttpl
inc
loope
dec
jecxz
data16
orl
and
call
loopne
stc
aad
hlt
ja
test
inc
dec
xchg
inc
sbb
jp
cli
mov
pop
leave
int3
dec
iret
lea
insl
sub
and
lcall
push
insb
sub
add
or
xchg
mov
jp
orl
inc
cmc
jmp
andb
sbb
push
cmpsb
shl
inc
icebp
out
fsubl
sbb
inc
shr
xor
insb
enter
popa
xchg
ja
arpl
xchg
mov
clc
iret
stc
call
insl
popf
jo
xor
and
cwtl
xchg
push
jge
fisubs
dec
or
in
and
and
push
lahf
xchg
push
add
pop
mov
es
push
daa
mov
shrb
bound
pop
mov
push
push
out
rclb
pop
xchg
add
add
cmp
xor
ljmp
test
cmc
mov
int
icebp
push
push
jmp
divb
adc
or
mov
xor
or
pop
xchg
pusha
lret
mov
lahf
mov
fmull
daa
mov
scas
sbbb
add
fcoml
inc
jp
in
jge
mov
push
test
add
cmp
sbb
jle
mov
fldt
or
ss
add
cltd
mov
or
icebp
repnz
ds
xchg
push
std
mov
es
fisttpll
scas
xchg
dec
cld
int
cli
cwtl
addr16
lock
stos
cld
or
cli
loope
cli
push
lret
mov
test
mov
ss
addr16
xor
stc
mov
outsb
lahf
fsubl
hlt
push
pop
push
fists
leave
mov
jne
pop
pop
or
pop
lods
daa
jb
mov
jge
or
jnp
push
sub
and
cld
insl
in
cmp
pop
mov
rcrb
push
dec
fcomps
popf
mov
cmpsl
mov
je
and
adc
push
in
or
mov
cltd
fdiv
adcb
testl
jnp
imul
cli
dec
push
mov
shl
mov
jle
pop
push
pop
mov
push
add
inc
sbb
pop
in
ljmp
inc
sub
cmpsl
or
roll
add
cmp
pop
inc
mov
shll
dec
push
pop
dec
add
test
movsb
aaa
sub
jmp
or
add
mov
scas
mov
push
push
inc
out
mov
in
mov
testl
xor
push
insl
movsl
adc
sarb
jle
or
insl
sub
inc
pusha
aad
cmp
inc
push
cmp
push
ret
lahf
ret
out
fsub
xchg
xor
mov
lret
pop
lret
pop
xchg
mov
push
call
pop
les
jbe
loopne
ja
xchg
loop
aas
das
mov
pop
mov
pop
ja
lds
pop
lret
mov
fisubrs
sub
insb
aad
cltd
xchg
cmp
sbb
mov
cmpb
outsb
add
push
and
jns
or
xor
fnstcw
xchg
inc
fcomp
loop
push
pop
fbld
mov
adc
fdivrl
bound
pusha
or
lret
pop
cmp
cmc
lahf
ljmp
and
outsl
loope
mov
cli
repnz
xor
sti
push
push
xchg
das
or
fcmovu
and
stc
push
shl
ds
xor
pop
lret
push
sub
dec
loopne
push
mov
mov
xchg
dec
test
daa
rcl
cs
adc
adc
popa
mov
fwait
push
sbb
adc
fmuls
mov
pop
ja
mov
rcr
sub
dec
pop
fbld
repnz
pop
insl
mov
mov
movsb
pavgb
push
sahf
data16
pop
loopne
test
cwtl
add
fnstcw
fstpt
lret
cs
jae
cmpsl
pop
sub
mov
xlat
dec
scas
test
cmc
pop
mov
adc
loopne
or
sbbl
dec
std
jl
insl
sti
call
movsl
dec
jge
add
adc
repz
xlat
rcrl
lds
imul
mov
push
sub
mov
mov
fwait
into
and
into
mov
pop
arpl
inc
repz
mov
adc
cwtl
jno
iret
push
jae
fnsave
mov
gs
dec
test
dec
add
inc
fcomi
jb
ficompl
mov
push
imul
mov
in
push
mov
xchg
dec
pop
xlat
cmp
mov
loopne
xchg
and
push
mov
shll
lahf
inc
mov
clc
and
test
fstpl
loopne
sti
leave
jecxz
lahf
pop
xor
lret
and
int
popa
test
xor
sarb
xchg
mov
popa
and
jbe
or
mov
mull
lock
xchg
les
and
mov
lret
cwtl
lea
shlb
mulb
xchg
push
js
xchg
mov
mov
and
xchg
jbe
push
xor
or
mov
test
sbb
popa
inc
fstl
std
xchg
sub
dec
int3
sarl
ja
jmp
rcrl
ljmp
add
cwtl
arpl
test
xor
pop
mov
xchg
inc
call
inc
test
push
adc
jp
outsb
repnz
mov
lret
sbb
cld
push
pop
movsb
cs
jg
icebp
push
xor
insl
push
mov
mov
adc
stos
ficomps
push
cmp
dec
cmp
lods
lret
stos
and
aad
xor
ss
xor
popf
scas
jo
dec
pop
cmp
inc
jno
loope
iret
nop
add
gs
pop
test
imul
cmpsb
dec
mov
dec
jo
adc
lcall
xor
mov
fs
lcall
sbb
mov
xor
add
adc
pop
lret
daa
jne
xor
clc
sti
ficompl
jnp
loop
jno
mov
sarb
icebp
loop
or
cmp
loop
sbb
cmpsb
mov
das
fstl
icebp
nop
es
adc
dec
lods
or
arpl
push
arpl
cmp
mov
outsb
mov
sbb
divb
js
jno
sub
dec
mov
and
insl
aad
mulps
loope
sahf
dec
fldlg2
jo
pop
insl
insl
loope
pop
cmp
shlb
movb
std
cmpsl
aas
test
rolb
ffreep
or
xchg
mov
push
rcll
lods
bound
in
mov
mov
icebp
imul
jb
pop
jl
shrl
mov
jbe
shr
add
mov
aaa
xor
jg,pt
adc
notb
xlat
loopne
lret
mov
xlat
mov
mov
cmp
add
lock
enter
mov
stc
xor
in
ljmp
into
test
xchg
dec
push
mov
add
mov
sub
mov
push
adc
js
push
int
aas
les
mov
test
mov
xor
rclb
jl
rcll
in
stc
mov
sbb
jmp
xor
cmp
test
dec
sub
push
iret
imul
lods
sub
pop
mov
sbb
fs
ljmp
fsubs
ret
or
or
cwtl
sbb
or
jnp
lahf
jne
jb
xchg
popa
movsl
cmpl
mov
aas
imul
sbb
mov
or
aas
and
sbb
sbb
adc
jae
movsl
jl
add
sbb
cmpsl
sbb
div
or
jge
xor
and
xchg
dec
fmuls
adc
fbstp
test
fidivrs
aaa
popa
into
stc
jb
sub
dec
inc
inc
push
arpl
xchg
fcompl
aam
gs
ret
cwtl
pop
inc
mov
mov
popa
push
inc
data16
pop
loop,pn
sub
jl
or
jp
sub
ljmp
les
nop
fldenv
xchg
leave
pop
cmp
and
in
scas
pop
scas
inc
loopne
sub
pop
pop
rclb
adc
jns
scas
arpl
xorl
iret
lock
dec
cld
jle
jl
or
ss
mov
push
jmp
inc
pushf
shl
pop
sub
mov
xchg
aad
mov
cmp
xchg
xchg
sub
cli
test
aas
mov
sub
xlat
pushf
mov
les
das
lock
lods
aas
inc
popf
push
int3
jmp
aam
push
sti
jle
pop
dec
aad
fdivl
mov
push
cld
aas
mov
insb
mov
cmp
pushl
dec
jo
into
jo
jmp
repnz
hlt
mov
mov
lock
jnp
mov
add
aad
rclb
inc
mov
pop
jno
sbb
sbb
pop
fs
rcrl
int
dec
imul
cmp
ds
xor
std
fsts
add
popa
xlat
inc
cmp
cmp
xchg
rcrl
or
hlt
xchg
rorb
xor
imul
popa
outsl
push
cmp
add
nop
xchg
adc
xchg
push
out
inc
dec
mov
push
test
pop
fxch
sub
out
adc
mov
mov
push
cmp
pop
arpl
inc
test
xorb
xchg
aas
in
ljmp
cmp
lahf
mov
gs
aas
mov
jge
les
fstl
sbb
xchg
sub
cmp
inc
rorb
dec
lret
pop
jne
jno
int3
outsb
add
js
pop
mov
dec
or
imull
pop
lahf
or
scas
out
push
sbb
clc
pusha
leave
adc
adc
int3
mov
sub
sahf
push
xchg
pop
mov
decb
push
in
inc
lret
aad
mov
jbe
notb
fcmovnb
stos
jle
cmp
in
mov
pushf
cmpsb
outsb
dec
dec
ret
inc
mov
xor
aad
out
xchg
and
mov
test
cmpsb
in
sub
inc
jne
or
push
test
inc
stos
pop
push
sbb
insl
jl
sub
sbb
test
push
dec
inc
cmc
add
push
addr16
fldt
xor
mov
add
sbb
outsb
in
mov
mov
mov
jecxz
pop
and
es
or
mov
or
loop
aam
scas
shrl
mov
add
mov
xchg
popa
popa
insl
pop
push
js
dec
jb
aam
clc
sub
jnp
push
popa
mov
push
sub
out
imul
inc
cmp
test
popf
mov
fildll
mov
xor
rcll
shll
ljmp
pop
adc
xlat
sub
jb
hlt
dec
andb
insl
movsb
add
mov
leave
shlb
dec
mov
stc
cs
incl
or
repnz
jo
cmp
scas
lret
fdivrs
push
repnz
cltd
sbb
cs
pop
in
mov
gs
push
stos
in
jnp
mov
push
in
hlt
in
in
cld
cmp
jg
ja
jne
dec
das
stos
cld
or
mov
mov
dec
add
cwtl
dec
nop
icebp
xchg
add
insb
dec
mov
push
xchg
dec
jae
xor
jno
in
hlt
lock
mov
mov
jl
bound
icebp
push
leave
dec
sub
cltd
int
stc
scas
xchg
xor
and
js
cmp
xchg
sbb
mov
out
ja
mov
popa
addr16
pop
hlt
xor
xor
push
pop
movsl
xchg
je
xchg
into
in
xchg
xchg
inc
cmp
xor
clc
push
cmc
xchg
mov
cwtl
stc
lret
ja
daa
pop
into
pushl
pop
add
cwtl
popf
popa
int
sub
pop
dec
in
and
pop
adc
in
jmp
sub
scas
sti
mov
sbb
mov
mov
dec
jg
gs
jns
inc
je
lods
dec
rolb
lahf
jne
fisttpll
stos
cmp
lods
shll
cmp
jne
mov
sub
hlt
jecxz
sub
popf
sub
lret
rorb
push
iret
out
subb
cwtl
imul
adc
inc
inc
mov
pop
jp
pop
dec
dec
or
push
packssdw
xchg
shlb
jge
popf
test
cs
ds
arpl
add
insl
inc
int
lock
je
fldln2
lret
in
cli
cwtl
xchg
and
xor
ja
shlb
pop
cmp
fisttps
hlt
xor
push
bound
adc
imul
sub
into
leavew
xchg
hlt
dec
decb
sbb
arpl
daa
shr
sub
sbb
mov
add
push
stc
aad
adc
je
sub
roll
pusha
push
leave
push
mov
and
xchg
push
rcl
and
push
cmp
lds
push
popa
pusha
jno
dec
fsubl
xchg
rol
in
mov
add
dec
movsl
inc
fdivrl
or
mov
mov
enter
outsb
xor
aam
adc
add
dec
outsl
and
out
adc
pop
test
insb
xor
cmp
mov
ds
xchg
pop
int
nop
sub
adcb
mov
jbe
leave
ja
cmp
inc
sub
jnp
in
enter
xor
testl
int
add
insb
mov
ja
or
addr16
pusha
sbb
fucomp
push
mov
ret
int3
adc
out
adc
pop
cwtl
out
pop
dec
scas
dec
outsb
inc
mov
cld
jecxz
sbb
dec
sbb
or
fdivrp
inc
add
push
mov
fwait
dec
fisubl
mov
cltd
fdivr
jmp
gs
sub
or
push
fldenv
push
push
inc
add
dec
xchg
push
pop
mov
xor
and
mov
sub
std
scas
jnp
cmp
pop
push
dec
dec
sarl
inc
std
enter
mov
out
or
and
mov
mov
push
jbe
je
pusha
ljmp
mov
aam
sub
movsl
add
xchg
push
sbb
cmp
and
pop
add
bound
mov
pop
jle
cmpsb
ficoml
jmp
adc
shl
shlb
popa
rorb
test
sub
insl
push
enter
and
and
out
iret
pop
inc
inc
repnz
sbb
sub
push
xchg
mov
sarl
aad
js
xor
push
scas
jb
pop
hlt
ds
popf
add
fstpt
or
std
pop
adc
pop
cmpsb
sub
shr
scas
in
movsl
popa
lahf
fsubr
xchg
loope
jp
ds
lahf
xor
pop
mov
das
mov
push
dec
sub
popf
dec
ret
and
sub
push
in
pushw
sahf
mov
pop
sarb
cld
adc
stc
inc
aas
fs
pop
jecxz
js
out
xchg
push
out
ffree
jg
fs
inc
inc
test
fistpl
pop
fbstp
push
clc
int
mov
add
inc
jne
in
dec
xor
adc
mov
arpl
cmpsl
xchg
repnz
aad
lock
add
xchg
es
add
jmp
xchg
es
jmp
clc
cmp
popl
mov
jl
mov
jno
mov
mov
cmpsb
mov
cmp
aad
gs
hlt
fiadds
mov
xchg
mov
into
ret
into
jg
scas
inc
ret
insl
popa
adc
icebp
mov
push
popf
sub
test
int3
fisttpll
dec
pop
adc
or
add
xor
mov
ret
int3
out
xor
sti
loopne
and
je
push
div
cs
push
sub
push
adc
push
ud1
push
cltd
aas
mov
cmpsb
xor
packuswb
jbe
inc
jge
dec
loop
testb
int3
cmpsb
pop
in
sub
popa
xchg
stos
gs
mov
sti
or
pusha
fidivrl
ja
ljmpw
inc
cs
mov
sbb
jmp
test
push
xor
pop
push
iret
mov
int3
sbb
rorl
es
fstl
and
mov
pop
fwait
cmp
pop
fdiv
mov
xchg
mov
push
lock
xchg
mov
and
pop
jmp
loop
push
outsb
cwtl
aaa
pop
dec
jmp
scas
cmp
mov
jge
paddusb
or
cltd
sbb
sbb
in
mov
sbb
les
bswap
fists
in
mov
push
data16
add
sbb
cli
test
mov
lahf
xor
lahf
js
push
out
xor
lock
push
insl
ja
ljmp
xchg
jns
cltd
addb
add
stos
pxor
std
call
mov
cmc
sub
dec
xchg
addr16
popa
aaa
movb
mov
movsb
into
decb
jo
dec
mov
mov
inc
or
cwtl
js
xor
pop
sub
and
and
and
stos
gs
xor
ss
pop
sub
out
sti
mov
shl
cmp
movsb
push
and
rcr
out
jmp
movsbl
scas
icebp
add
sbb
sti
inc
jg
sbb
jmp
xor
xor
xchg
jge
imul
pop
xor
push
mov
inc
mov
lods
ror
outsb
add
pop
push
mov
mov
imul
or
arpl
les
adc
out
rolb
inc
cmp
mov
outsl
lcall
addr16
mov
stc
scas
jns
test
xor
push
xchg
mov
out
pop
xchg
incb
and
lds
cs
in
repz
mov
in
sbb
idiv
fiaddl
add
or
mov
cmp
sbb
sarl
fucomi
dec
or
mov
mov
test
jmp
push
insb
push
xor
incb
xchg
sti
shrb
cs
test
stos
sarl
adc
mov
pop
pop
test
popf
add
fs
sub
addr16
and
faddl
fwait
int
repz
mov
and
and
add
mov
xchg
xchg
mov
and
mov
int3
mov
lods
mov
or
les
pusha
mov
mov
inc
leave
mov
pop
das
popf
xor
lea
pop
mov
cmp
sub
add
in
adc
mov
push
or
xor
lods
int3
xchg
dec
xlat
jbe
mov
lahf
lock
mov
jecxz
ret
stos
xor
mov
jae
jne
xchg
call
lret
or
sbb
cmp
add
lods
mov
dec
cmp
and
add
mov
insb
cmp
faddl
repz
pop
adc
adcb
xchg
fcmovnb
callw
negl
mov
hlt
js
xchg
test
sbb
outsl
ret
push
xchg
pusha
adc
jl
push
jl
das
mov
popa
testb
pop
rcl
into
pop
lret
add
mov
outsl
mov
push
mov
push
in
push
pop
adc
pusha
adc
mov
or
call
cmp
inc
mov
repz
gs
js
jne
jmp
cmp
xchg
or
xor
push
mov
dec
inc
mov
mov
insb
pop
dec
fwait
or
and
stc
xchg
shrb
add
and
cmp
xchg
push
scas
sub
lret
aam
enter
mov
sbb
aad
mov
sbb
leave
cmp
scas
cmpsl
lahf
push
out
or
outsl
outsl
sbb
daa
loope
sbb
cmpsb
sbb
idivb
mov
jl
adc
jecxz
sub
fs
dec
testl
iret
pop
pop
jle
fnstcw
inc
push
sbb
mov
dec
xor
push
mov
pop
push
pop
dec
out
cmp
push
aad
mov
inc
scas
mov
loopne
pop
test
lods
aad
jmp
adcl
jg
and
lods
fsubs
pop
sbb
lahf
stos
sti
mov
movsl
xor
lds
into
cmc
jnp
aas
sti
repz
xor
les
int3
cmp
gs
xchg
je
daa
icebp
dec
das
or
add
mov
incl
in
jp
lcall
pop
out
jg
jns
mov
outsl
int3
mov
push
lock
sub
iret
sbb
jle
xor
lcall
bound
add
int3
ss
xor
andb
xchg
pop
es
adc
cld
mov
push
mov
sub
xchg
dec
and
mov
lret
mov
pusha
cmp
aaa
in
lret
push
or
testl
push
gs
iret
pop
int3
sbb
aad
ja
addr16
fidivs
add
cmpsb
jmp
aaa
sub
shlb
rcrl
push
mov
idivb
inc
jae
or
or
fimuls
jne
into
xor
dec
test
jo
cmp
fs
adc
push
dec
push
stc
push
movsb
inc
mov
cld
push
lds
xchg
jne
cmp
mov
aaa
cmpsl
push
ljmp
movsb
pop
shlb
or
xor
xor
insb
scas
xchg
xor
mov
mov
mov
das
out
or
cmp
lcall
call
cli
mov
mov
lods
xchg
push
subl
sub
in
fisttps
inc
mov
leave
sub
jno
sbb
pop
adc
shr
je
outsb
cmp
mov
mov
push
ret
cmc
push
pop
jo
xlat
mov
pop
mov
and
fisttps
cwtl
inc
and
jle
sub
mov
lea
sub
mov
mov
xor
inc
int3
inc
mov
movsl
dec
loope
inc
leave
stos
xchg
ds
dec
push
push
lahf
test
sti
stc
rol
push
rorb
adc
dec
arpl
mov
sarl
mov
in
push
in
inc
mov
arpl
xchg
scas
test
loopne
in
adc
in
repz
test
add
mov
inc
sbb
test
add
dec
fsubp
mov
adc
ss
mov
jno
xchg
cltd
mov
jno
and
shll
fdivrl
aaa
add
fistl
pop
pop
mov
sbb
jbe
popf
ret
xchg
fstl
jmp
push
in
mul
sub
mov
stc
iret
xchg
mov
pop
pop
sbb
iret
movsl
jge
add
jecxz
push
cmp
jo
adc
add
mov
xor
xchg
or
popf
int3
push
sbb
enter
mov
out
stos
movsb
pop
mov
daa
dec
cmpl
or
test
xorl
mov
mov
xchg
imul
in
xlat
movsb
hlt
out
fsubl
jae
cmpsl
ds
add
aad
scas
pop
mov
cmp
jg
pop
sbb
adc
inc
stc
ret
sub
mov
xor
popa
jne
jecxz
std
aam
std
ss
loopne
inc
out
fiadds
fnsave
or
mov
hlt
adc
fs
pop
xchg
lret
int3
rorl
ret
and
icebp
iret
mov
shll
lods
cmp
pop
adc
ds
test
ret
push
adc
pushf
or
dec
andb
iret
bound
loope
out
or
leave
dec
push
xchg
pop
popf
loopne
sbb
sbb
jae
adc
adc
sub
pop
sub
or
dec
addl
inc
scas
cld
push
xor
popf
mov
nop
pop
das
insb
jge
in
std
stos
pop
jnp
push
push
mov
jne
les
bound
int
inc
lcall
jb
xor
aad
sub
fisubrs
cmp
sub
sbb
pop
jo
adc
mov
loope
ficoms
aam
xorl
adc
or
out
xor
enter
xchg
xor
bound
shll
ss
pop
loopne
fsubl
mov
cmp
pop
push
push
inc
lret
les
or
mov
icebp
in
mov
cmc
repz
mov
adc
pop
adc
fcomps
xor
cmpsl
push
fisubl
push
add
push
mov
rcr
inc
inc
inc
shll
stos
sbb
pop
push
icebp
jmp
popa
mov
dec
mov
jecxz
lcall
sti
gs
jo
dec
into
pop
push
or
ja
xchg
cmpsb
jecxz
test
push
inc
loope
push
add
jmp
dec
icebp
xchg
inc
sub
testb
loopne
sub
xchg
pop
addr16
push
mov
dec
imul
mov
mov
mov
mov
push
cld
xor
sbb
mov
adc
mov
push
mov
hlt
xor
pop
outsl
iret
das
shlb
or
pop
fdivs
dec
or
mov
pop
cli
in
xlat
test
frstor
jb
or
out
dec
scas
push
adc
cli
mov
fimuls
mov
jmp
xlat
ja
lret
push
adc
data16
sub
aas
out
lods
adc
sbbl
insb
pop
xchg
mov
mov
out
aam
mov
pop
mov
xchg
cmp
adc
adc
movsl
xchg
dec
xchg
scas
inc
dec
and
andb
int3
and
popl
testl
popf
repnz
stos
cmp
xchg
sbb
cmp
inc
mov
or
sub
cwtl
inc
es
pop
jb
push
movsb
in
out
mov
pop
ret
loopne
add
mov
mov
addr16
das
pop
movsb
hlt
xor
in
or
jle
sub
fdivrs
out
adc
test
mov
out
dec
adc
xchg
into
mov
sub
or
dec
sub
and
sti
pop
push
addr16
jg
test
jmp
xchg
push
imul
ss
adc
insb
sahf
push
push
insl
int
fdiv
lret
mov
pop
dec
jecxz
fnstsw
insb
test
adc
call
mov
push
jbe
rorl
stc
and
das
dec
enter
sar
pushf
decl
pop
repnz
jecxz
xchg
jno
lret
jecxz
xchg
xchg
xor
lret
repnz
mov
sahf
cmpsl
cmp
pmaxsw
cmp
fs
fisubrs
pop
popa
repz
xor
add
push
add
repz
insb
sbb
sub
aam
jle
mov
mov
dec
push
fcomps
sbb
xor
pop
inc
sarb
addr16
mov
into
sbb
mov
jmp
cmovbe
lds
repnz
xor
sbb
inc
sub
sahf
imul
rorl
push
sub
or
je
pop
push
rcrl
jmp
out
in
xchg
stos
in
and
imul
mov
inc
mov
mov
dec
sti
sbb
dec
and
gs
fwait
stc
push
shr
jnp
mov
in
cmc
mov
cmp
sahf
xor
ljmp
pushf
cmp
xor
sub
and
inc
pushf
loopne
loopne
aas
mov
aas
dec
cs
mov
adc
pmullw
movsb
and
xchg
test
pop
imul
int3
pop
jns
shlb
mov
pusha
stos
inc
imul
pop
pop
push
lods
adc
push
cwtl
ret
lret
lret
adc
xchg
sub
inc
xor
into
mov
and
je
gs
jle
sbb
cld
jb
aad
adc
mov
dec
inc
in
push
aad
jge
popa
dec
pushf
jp
insl
lods
sub
pop
fwait
jmp
add
xchg
xchg
jno
in
aad
pusha
xlat
cmpsb
jno
cmp
sbb
mov
das
testb
aam
ret
std
and
and
mov
fiaddl
and
add
sub
aaa
sbbl
arpl
imul
shlb
xor
and
scas
jg
xor
sti
sub
repnz
popf
movsb
dec
mov
push
aaa
pop
imul
xlat
push
push
into
dec
ficoml
pop
sarl
movsb
outsb
inc
imul
mov
pop
xchg
jnp
std
mov
and
movsb
push
or
sub
mov
dec
or
incb
adc
dec
cwtl
pop
rcrl
nop
xchg
fs
ror
inc
inc
sbb
xchg
lcall
nop
jecxz
nopl
fistps
mov
test
je
pop
jp
popa
ret
jb
push
dec
add
mov
scas
imul
cmp
xor
or
scas
or
test
cli
sti
cld
pop
in
sbb
sub
cmp
jp
andl
repnz
or
and
mov
stos
mov
adc
sbb
push
sub
sbb
lcall
xor
jbe
push
cmp
or
and
jmp
int3
sub
xor
daa
js
push
mov
push
mov
jae
xor
lahf
pop
icebp
mov
in
push
jne
jmp
or
ljmp
adc
paddsw
cmc
aam
pusha
andb
test
xchg
rclb
or
imulb
dec
pop
mov
adc
or
pop
xchg
enter
stc
movsb
pop
xchg
push
sub
cmpsl
pushf
mov
pop
push
loop
repnz
sub
nop
xchg
and
sbb
int
aam
and
jge
insb
dec
lods
adc
add
stos
test
push
jns
cli
push
mov
mov
ljmp
add
xchg
sub
mov
push
cmp
cli
xchg
mov
in
sti
adc
sbb
xchg
xchg
mov
popa
popf
mov
pushf
cmpsl
mov
jp
push
stos
sbb
xchg
and
sbb
aad
jae
jmp
add
or
into
cld
nop
jge
out
xchg
clc
push
inc
adc
lods
std
pop
push
cmpsl
push
mov
divl
cs
fadds
pop
mov
addl
or
insb
pop
inc
xor
mov
dec
push
rorl
xchg
mov
pop
testb
jno
fsubrs
cli
pop
push
bound
out
push
ja
outsb
pop
inc
inc
mov
jg
movsb
fistps
or
dec
insb
fsub
adc
leave
mov
push
test
shll
adc
je
jl
mov
inc
ss
mov
xor
dec
scas
mov
dec
imul
pop
sub
sbb
cwtl
cmp
push
push
sub
mov
jg
mov
std
lcall
push
fs
test
ret
out
and
inc
cmp
cmpsb
push
pop
repnz
int3
test
dec
inc
aam
push
stos
cmp
hlt
ds
mov
sbb
shrb
pop
add
xchg
lods
loopne
insl
and
imul
or
xor
cmovl
fdivrl
js
push
and
mov
dec
jg
sub
rcrb
lods
cld
lcall
and
shlb
sbb
inc
xchg
in
shr
fcoml
adc
test
jmp
lcall
lret
nop
add
pop
or
roll
mov
insb
pop
call
cmp
xchg
adc
mov
cmpsl
push
xchg
aas
add
fsubrs
xor
enter
shl
pop
sub
or
into
dec
cmpb
mov
addr16
sbb
xor
sub
call
sbbb
xchg
lcall
and
rcl
aam
or
mov
xor
xchg
pop
into
inc
loope
lret
mov
and
jecxz
xchg
pop
inc
dec
mov
xchg
adc
dec
cmc
cmpsb
shlb
adc
out
pop
xchg
dec
jp
pop
ret
popf
xchg
aaa
aaa
test
in
inc
jmp
out
fistpl
pop
cmp
ret
jb
ret
icebp
shr
movsb
int
addb
jle
adc
mov
es
imul
inc
rorb
cmp
leave
mov
xchg
movsb
push
adc
or
es
xor
sarb
jp
mov
or
push
xchg
clc
pop
stc
sub
outsb
fcoms
add
mov
and
mov
lock
ja
and
pop
dec
mov
std
sbb
aaa
jns
aaa
ljmp
dec
add
dec
jl
inc
mov
xor
pop
mov
out
inc
loop
imul
xor
inc
loope
ljmp
cmp
mov
ror
fwait
dec
jno
xorb
and
test
inc
idivl
std
push
std
fdivrl
cmpl
call
adc
mov
push
cmp
xchg
push
xor
daa
mov
addr16
jmp
lods
xor
idivl
xchg
js
mov
sbb
mov
jl
ret
add
cld
movb
or
out
cmpl
pop
mov
lods
ljmp
ret
jl
sbb
aad
push
leave
jg
mov
lds
lcall
jp
pop
hlt
les
test
aad
mov
in
lods
xlat
sub
adc
loopne
pop
jg
xchg
roll
lret
jg
ss
je
dec
sub
inc
lea
jbe
out
popa
movsl
cmpsb
imul
iret
inc
sahf
pop
adc
cmp
xchg
jno
test
in
test
or
pushf
xchg
mov
and
xor
pop
rcrl
sti
cwtl
xor
inc
mov
stc
mov
add
fld1
fsubs
lds
jmp
cltd
jbe
cmpsb
insl
sub
out
call
sub
mov
inc
aam
add
lcall
clc
pushf
mov
pop
fs
aam
es
ret
pop
shr
mull
daa
and
cmp
cmp
dec
insl
test
push
lods
pusha
pop
gs
xchg
sbb
test
adc
xchg
adc
dec
call
lcall
aad
jnp
sbb
cmp
arpl
jg
or
pusha
xchg
cmpsb
loop
ds
ljmp
mov
push
xchg
or
push
jge
scas
pop
sub
shrl
enter
dec
lret
xchg
and
fs
push
loop
enter
adc
xchg
repz
in
mov
pop
lret
in
fisubs
cwtl
mov
xor
jns
dec
xchg
sarl
mov
dec
xchg
cmpsb
sbb
cmp
add
out
std
xchg
dec
inc
in
inc
in
jae
add
jmp
dec
hlt
std
mov
repnz
cmpsb
call
xchg
out
lods
repz
pop
int3
fdivrl
mov
sub
add
test
adc
divb
notb
movsb
lods
int
sub
dec
dec
ret
pushf
add
aas
and
jb
imul
adc
dec
mov
pop
lea
cmp
adc
mov
ja
testl
cld
dec
sahf
xor
sub
sub
cltd
xor
or
ret
jbe
push
xor
jp
inc
or
push
aad
pop
pop
stos
es
add
nop
sub
mov
jne
push
in
push
jle
jge
add
jecxz
lret
push
movl
stos
adc
lods
fnsave
push
push
es
adc
fldt
shr
test
test
or
mov
and
mov
jge
sbb
lret
into
xlat
mov
cli
stos
icebp
cmpl
inc
mov
mov
lods
movsb
stos
adc
xchg
cmp
out
and
sbb
ret
cmpl
push
jo,pt
add
jl
jns
pusha
and
inc
addl
cmpsb
inc
mov
call
cmp
xor
pop
stc
xchg
enter
ficompl
fst
jb
cmpsl
outsb
adc
add
mov
gs
jmp
lods
je
cli
pop
xor
in
adc
clc
inc
les
jl
out
push
xor
test
pop
std
jg
pop
cld
sti
loope
add
mov
cltd
inc
stos
pop
paddd
repnz
xorb
push
scas
inc
or
add
mov
mov
nop
mov
sub
add
jo
and
cmp
jb
aas
mov
rclb
test
xor
stos
sub
xor
test
js
aam
inc
lret
inc
pop
push
dec
add
outsl
jns
mov
jno
mov
mov
sub
xor
xchg
or
int3
mov
jecxz
shl
std
jmp
mov
in
xchg
divb
arpl
sti
cmpsb
adc
pusha
outsb
mov
enter
mov
je
test
push
aam
dec
fnop
mov
mov
or
push
mov
loopne
or
jp
jnp
test
push
adcb
stos
int3
fimuls
push
or
out
and
jnp
lret
pop
imulb
jl
mov
add
sub
dec
mov
add
or
mov
pop
fmulp
movsb
dec
and
addl
dec
lcall
mov
pop
ds
cs
cmpsl
popa
int3
and
rcll
fdivl
xchg
xchg
cmp
pop
mov
rolb
adc
mov
push
fdivrs
mov
sub
popa
push
ficomps
jnp
cmp
out
bt
inc
cmpsb
scas
pop
xchg
sub
call
adcb
sti
aas
xor
enter
jmp
add
add
mov
mov
movsl
iret
fcoms
adc
dec
or
add
nop
in
mov
pop
movsl
xchg
xchg
out
cltd
pop
sbbl
inc
push
add
fstl
xchg
call
pushf
jg
cmp
shr
adc
dec
sbb
out
inc
jbe
jnp
and
jle
jns
mulb
jnp
adc
js
add
sbb
ret
mov
scas
fiaddl
aaa
inc
mov
mov
movsl
mov
fistps
int3
mov
or
sbb
jne
jle
repz
inc
not
sbb
add
lods
mov
jbe
mov
scas
mov
xchg
fnstsw
add
dec
mov
add
sti
cmpsb
xor
mov
and
jle
push
dec
lods
or
lret
cltd
mov
inc
push
add
cmp
xchg
negl
cpuid
nop
hlt
cmp
data16
jmp
call
inc
adc
movsl
mov
das
or
jns
pushf
pop
xor
dec
fisubrl
push
icebp
int
stos
mov
cmp
aaa
sub
dec
push
xor
mov
fwait
mov
loop
repz
fsubs
lea
adc
arpl
xchg
out
mov
test
lock
clc
pop
scas
jns
mov
nop
outsb
xor
out
cli
push
fistl
push
push
inc
jp
pop
insb
jbe
mov
imul
and
jecxz
mov
sub
mov
cmp
out
push
adc
xlat
mov
shlb
push
add
mov
leave
inc
bnd
sarl
es
lret
adc
push
mov
dec
push
mov
popf
lods
add
push
dec
sbbl
es
imul
dec
hlt
sub
daa
mul
fisubrs
mul
jl
dec
mov
sbb
loopne
jae
or
dec
lods
dec
lcall
add
jno
in
lahf
or
pop
push
ror
inc
das
out
sub
scas
fcmovnbe
cvtdq2ps
out
inc
js
aas
je
call
dec
push
stc
push
mov
add
mov
imul
fisubrl
xchg
lret
mov
and
and
adc
in
xor
add
and
fiadds
enter
loopne
sub
mov
add
daa
mov
shll
cmp
push
xchg
ficoml
je
xchg
and
sbb
adc
adc
and
iret
loopne
dec
aaa
xchg
and
xor
sub
mov
sbb
daa
ret
fs
popa
cmpsl
push
hlt
aaa
inc
cmpsl
push
xor
data16
or
call
add
scas
xchg
pop
xchg
push
mov
adc
jb
adc
sbb
out
sahf
icebp
adc
cli
pushf
inc
in
dec
push
popa
pop
lds
jecxz
aam
jae
dec
and
fpatan
and
jge
notb
loope
pusha
xchg
shlb
cmc
jae
push
imul
leave
lock
sub
pusha
dec
xor
js
sahf
shll
or
mov
in
lods
sar
imul
pop
adcb
cmp
inc
out
js
mov
cmp
pushf
mov
repz
icebp
test
stc
nop
xlat
cmp
jge
dec
push
and
jg
add
in
lods
cmp
add
movsb
xor
rcrl
hlt
jg
das
and
and
inc
into
xlat
push
cltd
popf
sbb
pusha
inc
clc
daa
sbb
mov
and
lret
aad
jbe
xor
aam
push
shld
bound
jns
pop
push
mov
int3
inc
sti
inc
test
adc
es
pop
lret
popa
inc
sbb
cmp
iret
fimuls
and
push
and
stos
or
sub
ja
jmp
sbb
mov
cmp
jge
imul
pop
sub
jg
or
sub
mov
add
mov
aaa
inc
cltd
test
repz
mov
aaa
dec
ret
andb
mov
sbbb
cmpb
js
xor
add
mov
or
jge
idivl
cmc
add
insb
jle
xchg
popa
cmpb
js
or
lcall
outsb
push
dec
aam
mov
test
jl
popa
sbb
hlt
xchg
movsl
adc
cs
repz
push
adc
cltd
loop
outsb
jae
inc
mov
pop
adc
lahf
cmp
decl
and
sti
faddl
pop
add
push
clc
insb
aam
mov
add
gs
aaa
faddp
cmp
cld
lock
movsb
jbe
or
mov
lahf
ret
enter
lret
fdiv
dec
scas
lret
jp
inc
aas
pushf
fs
mov
stos
pop
sub
cmpsb
adc
inc
add
mov
pop
fiadds
mov
xchg
outsl
push
and
idivb
and
out
bound
push
in
pop
dec
mov
mov
push
jns
pop
jnp
fcoms
adc
jns
and
inc
shll
lret
cltd
jno
sub
out
jo
add
or
int
inc
pop
mov
fcmovu
sub
out
mov
shlb
pop
adcl
aaa
int3
in
scas
mov
mov
repz
xor
and
outsb
push
and
pop
test
xchg
sub
and
scas
daa
or
ja
or
mov
insl
into
mov
mov
pop
jne
xchg
loopw
popl
sahf
loop
mov
add
movsl
inc
push
dec
jmp
inc
movsb
dec
push
cltd
adc
xchg
repnz
push
cli
inc
push
je
mov
sbb
pop
subl
sti
pop
pusha
mov
xchg
cmp
mov
cwtl
insl
arpl
cmp
and
mov
cltd
pop
shll
push
jb
mov
or
pushf
inc
inc
cmp
popa
test
dec
hlt
xor
mov
fcomi
adc
mov
push
lcall
pop
xlat
pop
jnp
rolb
add
iret
mov
fs
jmp
mov
pusha
inc
inc
je
sub
cmp
and
adc
bnd
mov
outsb
jle
jnp
jo
or
outsb
jnp
push
push
nop
lods
jb
or
scas
test
inc
mov
in
push
sti
fmul
cmp
mov
scas
dec
dec
push
scas
dec
push
add
inc
cs
sti
adc
repnz
adc
jmp
dec
sti
fstpl
pmaxub
repnz
fdivp
mov
mov
jecxz
sbbb
dec
xor
out
lods
js
xor
aad
fisttpll
push
fdivl
sub
dec
xor
negl
xor
fwait
ds
in
dec
pop
bound
sbb
movsb
mul
fwait
push
arpl
gs
rol
inc
ds
push
outsl
dec
cmp
pop
adc
dec
andb
mov
or
push
aad
ljmp
sbb
fildll
xor
push
mov
xor
cmp
cld
cmp
jne
cmp
fcompl
mov
jb
push
test
dec
mov
into
outsb
adc
sbb
xor
outsl
push
mov
xor
pop
scas
mov
inc
jnp
cwtl
ffree
push
jecxz
pop
test
into
daa
shll
xor
fs
loop
lds
enter
xchg
push
sub
je
jnp
lock
push
js
ss
cwtl
pop
cmp
add
mov
dec
dec
and
lret
push
push
mov
loope
insb
std
pop
arpl
or
fsubr
mov
jno
mov
adc
nop
sub
rclb
jmp
pop
cmp
pop
mov
sbb
shlb
iret
push
mov
pop
mov
gs
cmpsl
lret
jp
xor
adc
rclb
add
outsb
or
mov
mov
xor
jnp
jle
icebp
jmp
mov
mov
ret
out
test
or
setbe
das
enter
rcll
les
xor
stos
minps
insl
gs
sub
inc
ss
xor
je
mov
inc
outsb
sbb
push
and
dec
pop
fs
rcl
pop
loopne
sbb
leave
pop
jns
sbb
ret
cld
push
inc
push
imull
push
push
movsl
xchg
mov
cwtl
lcall
and
hlt
das
repz
popf
xchg
sub
nop
mov
lret
in
fwait
aam
push
out
outsl
jecxz
dec
shlb
pop
push
flds
ret
adc
pop
mov
es
hlt
push
filds
cmp
lds
pop
lods
mov
or
testl
inc
dec
adc
cmc
jb
xor
jl
xor
subb
das
aad
jecxz
mov
cmpb
imul
repnz
stos
pushf
push
mov
cmp
jge
lcall
jbe
mov
pushl
into
test
xlat
scas
xchg
popf
decb
adc
sbb
dec
push
sti
mov
dec
sbb
mov
push
mov
in
mov
in
mov
add
pop
sarb
repnz
xchg
scas
sub
std
call
cmp
dec
ror
cld
push
sbb
or
pop
sbb
inc
cmpl
jmp
mov
cld
mov
imul
sub
adc
mov
push
in
or
jbe
lret
cli
jo
out
dec
jns
jle
test
adc
inc
push
movl
nop
adc
dec
xchg
sub
sahf
pop
in
inc
jnp
addb
and
popa
and
adc
pop
movsl
sbb
add
push
sarl
jp
rcrl
inc
test
jmp
jl
orl
adc
xor
leave
loope
add
dec
ret
xor
test
mov
jmp
cmp
pusha
sarl
xor
add
in
dec
mov
divl
add
xchg
lods
and
fisubrs
add
js
xchg
add
mov
in
loopne
sti
mov
sbb
xor
cmp
lret
lahf
pop
push
cmp
std
pop
aas
ret
sarl
test
jno
adc
dec
lret
fbstp
xchg
cmpsb
xor
xchg
shr
jae
pop
je
bnd
mov
mov
xorb
in
inc
lods
or
dec
or
into
lock
enter
mov
cwtl
jb
js
jb
popa
fmull
lret
and
fldenv
icebp
inc
push
and
cmp
sbb
inc
fildl
js
ret
loop
jne
sub
loopne
nop
test
xor
sbb
loopne
jp
push
add
cld
inc
pop
stos
dec
fldcw
add
push
not
xor
loopne
lret
aam
or
adc
mov
jmp
cltd
popa
pusha
dec
jmp
add
sti
lock
fisubrs
adc
jnp
scas
std
test
pop
imul
pop
into
dec
insl
push
sub
pop
cwtl
xchg
push
iret
pop
lock
movsl
dec
push
mov
cs
fs
repz
and
cld
call
addb
jno
dec
mov
in
jnp
sub
or
fwait
fstps
cld
sub
jae
std
push
or
ljmp
push
sbbb
lcall
adc
stos
aaa
mov
insb
gs
and
fnstenv
or
push
stos
xchg
inc
clc
xchg
nop
shrb
movb
mov
es
dec
clc
sbbl
dec
push
sub
testb
mov
std
scas
insb
push
arpl
or
lock
sti
push
cwtl
lock
mov
adc
gs
cmp
out
cwtl
enter
decl
gs
jge
mov
xor
lea
nop
and
add
xor
inc
jno
int
int
xor
rcl
mov
shll
shll
aam
aaa
and
xlat
lcall
xchg
iret
add
mov
jle
test
xlat
in
jecxz
sti
push
cwtl
dec
popa
adc
or
mov
cmpsl
mov
loopne
into
ror
dec
xchg
out
fsubl
repz
lods
jp
inc
imul
xchg
das
dec
dec
icebp
imul
xor
push
movsl
iret
push
jo
cmp
test
outsl
fs
cwtl
mov
mov
pop
pop
jno
mov
aaa
jns
call
sbb
xchg
in
cmp
jl
fdivs
xor
repnz
out
mov
fcomp
jge
add
jb
inc
das
or
mov
or
inc
scas
test
sub
hlt
inc
add
xorl
mov
inc
lods
bswap
and
mov
icebp
mov
cmp
div
shl
hlt
mov
out
cmpsl
sbb
jnp
xchg
jge
icebp
xor
mov
fsubr
jmp
dec
add
ret
dec
jp
lcall
xlat
les
lahf
std
mov
lret
xchg
xor
test
jae
mov
mov
sti
sti
int3
stc
jp
ret
std
push
adc
push
aad
fstl
xor
out
and
cmp
dec
or
cli
pop
push
pop
jle
jmp
lea
jo
or
js
test
cmp
mov
lock
lock
jnp
push
pop
scas
xchg
cmp
lret
les
fnsave
push
ljmp
cmp
xlat
pop
subb
xchg
mov
pusha
sti
mov
sti
std
sbb
pushf
in
pop
dec
mov
clc
les
cmp
aas
out
incl
pop
fdiv
mov
jnp
cmc
pop
into
call
es
mov
out
xor
repz
test
into
push
add
push
aas
pop
mov
cwtl
sub
das
mov
pop
mov
sub
aad
jp
fnsave
inc
setle
xlat
add
mov
inc
andl
mov
inc
or
out
subl
orb
dec
jmp
lods
jge
add
imul
movsl
push
mov
inc
aas
out
dec
sub
leave
pop
sti
xchg
in
insl
ss
das
push
sbb
jne
ficomps
inc
rcll
xor
push
and
mov
mov
adc
jbe
sarl
or
sbb
ss
and
int
repz
jp
insb
cmc
dec
jnp
pop
loopne
mov
pop
jge
sub
jecxz
clc
jns
adc
dec
fs
xor
push
pop
aam
mov
mov
stos
mov
insl
mov
les
aaa
sbb
xchg
cld
push
cmpsl
movsl
nop
and
movsb
mov
mov
mov
mov
xchg
xchg
je
test
pusha
pop
push
xchg
pushf
repnz
test
shlb
int3
aaa
pop
out
insb
dec
inc
pop
mov
out
out
add
xchg
cmp
mov
rclb
jmp
push
sub
out
xor
push
mov
cltd
lret
xchg
cmp
fs
cmp
stos
dec
mov
mov
loope
jae
sbb
push
orl
decb
mov
sbb
cld
in
jecxz
push
or
ret
mov
out
negb
fchs
aaa
flds
cmpl
lock
push
xor
mov
xchg
mov
lcall
aad
gs
mov
jle
das
mov
adc
enter
test
adc
cmc
mov
in
fstps
cmpsb
lods
mov
fcompl
xor
cs
and
fldenv
jmp
push
xchg
mov
jle
inc
cmp
jnp
sbb
push
pop
sub
and
sahf
stos
aad
popf
pop
mov
cli
sti
mov
stos
fnstcw
sbb
fstpl
or
sarl
push
in
adc
rorb
mov
mov
cwtl
gs
addr16
fwait
push
jnp
sti
push
pop
adc
mov
xlat
mov
push
jge
fimuls
mov
mov
das
fildll
adc
adc
shl
movsb
and
and
lahf
in
dec
imul
bound
arpl
or
out
mov
inc
int3
ljmp
dec
lret
repnz
jmp
cwtl
jno
mov
idivl
xchg
cmpl
mov
fiadds
mov
js
mov
inc
call
mov
xchg
sub
cmp
fidivs
or
lret
mov
xchg
aad
mov
jl
pop
lcall
xchg
in
xchg
mov
mov
in
or
and
ds
and
mov
inc
loope
sub
mov
mov
mov
popf
pop
fcompl
aam
call
ja
adc
inc
psubw
jl
cwtl
cmp
js
dec
or
jecxz
dec
push
fs
scas
adc
mov
je
das
es
ja
out
sub
mov
pop
dec
push
outsl
arpl
int3
js
je
lret
cs
pop
repnz
push
int3
mov
mov
cmp
in
test
adc
shlb
dec
and
insb
inc
outsl
inc
sbb
in
hlt
fimull
bswap
adc
sub
sbb
mov
push
imul
cwtl
cmpsl
cltd
jb
rorb
cs
xor
idivl
mov
lea
add
fs
in
popa
jge
daa
sbb
pusha
sub
int
mov
sub
xchg
jecxz
add
xchg
push
mov
pop
or
rorl
test
test
add
adc
mov
mov
sub
negb
fsubrs
sbb
inc
xchg
push
fwait
lock
outsb
sub
adc
inc
add
js
adc
adc
sbb
add
pop
sub
push
test
aam
push
add
imul
sahf
testl
push
mov
fisubrs
arpl
arpl
cmpsl
xchg
adc
mov
xorb
dec
ljmp
mov
add
lahf
dec
push
jmp
adc
push
inc
orb
xchg
andl
xor
jmp
mov
lock
or
jle
cmc
mov
adc
sub
movsb
les
or
xchg
mov
mov
jnp
inc
aas
sbb
inc
sbb
cmpsb
adc
out
inc
loopne
ret
xchg
adc
xchg
out
fimuls
mov
xchg
push
dec
and
mov
mov
xor
sahf
cmp
pop
test
lods
or
loope
inc
mov
in
jg
xchg
mov
push
lds
popa
sbb
ljmp
out
mov
sbb
ffree
les
dec
jp
and
testl
sbb
jle
mov
sub
cmpsb
lahf
cltd
call
xchg
and
mov
ljmp
loop
sbb
mov
push
sarl
push
push
xlat
lds
popa
dec
cmp
mov
aaa
js
xchg
mov
xchg
dec
int
add
scas
pop
jns
movsb
jmp
jbe
cmp
fs
stc
fldt
shrl
push
and
ror
popf
lock
push
pop
mov
pop
fdivl
sarb
cmp
jmp
and
mov
popa
fsub
adcb
pop
sub
push
and
add
popa
push
daa
adc
jae
fsts
cmpsb
rcl
adc
push
ret
add
pop
jno
and
stc
aam
mov
fldenv
shr
jp
les
loopne
sbb
add
jg
int
loop
dec
shll
inc
rsqrtps
sbbl
cltd
adc
in
jmp
sbb
add
sub
mov
js
es
xchg
dec
inc
add
pop
xor
les
pop
mov
cwtl
aam
pop
sti
out
das
ret
outsb
push
mov
fmull
rolb
xchg
fbstp
popf
jge
out
mov
sbb
mov
inc
into
mov
in
jne
mov
sbb
pop
icebp
stos
push
adc
ss
mov
adc
mov
std
lods
mov
call
push
xchg
shlb
das
repnz
xchg
xchg
outsb
sub
sti
mov
jg
sbb
ficompl
adc
push
or
mov
mov
mov
imul
mov
dec
mov
aad
adc
sub
dec
pop
push
or
sub
loope
or
push
add
or
aas
xchg
mov
add
inc
jb
leave
jns
jle
pop
out
sbb
jecxz
leave
pop
sti
dec
or
push
sub
sub
cmp
cmp
rcr
adc
cmp
or
mov
pop
imul
loop
movsb
out
mov
fsub
incl
repz
repz
xor
in
jp
aad
pop
das
sub
repz
fisttpll
leave
imul
icebp
and
add
repnz
xchg
lock
call
jmp
fwait
sbb
push
push
mov
test
loope
push
adcl
push
mov
cli
int
aaa
push
dec
dec
loope
scas
mov
add
adc
stos
cmp
stc
mov
mov
sarl
xchg
or
inc
push
daa
jle
and
pop
add
cli
xchg
xchg
mov
mov
je
add
xchg
lcall
xchg
and
dec
mov
das
lret
push
pop
icebp
mov
andb
mov
lret
leave
push
repnz
outsl
ror
mov
into
or
or
cmp
mov
insb
cmc
mov
xor
mov
mov
jp
addl
jns
lcall
data16
es
addr16
mov
inc
das
mov
push
xchg
push
jl
mov
push
push
xchg
xchg
lock
cmp
add
insl
cmp
mov
notb
ja
jg
dec
mov
sti
mov
fcoml
mov
rcl
inc
inc
cli
jmp
xchg
sub
add
push
dec
cmp
fstps
add
in
adc
sub
orb
jmp
hlt
and
in
sub
pop
sti
xchg
adc
imul
adc
or
jns
sub
movsl
mov
loope
adc
push
push
testb
aaa
xor
fistl
pop
jbe
pop
sub
and
fwait
and
rcll
push
cltd
push
call
shll
sbb
ljmp
int
test
or
mov
loopne
xor
xor
push
shl
je
pop
fsubrs
xor
push
ffree
xchg
in
fsts
aaa
inc
cltd
sbb
jns
mov
adc
arpl
jmp
subl
jg
stos
xor
adc
cmp
mov
subb
lock
cmpsl
es
xchg
xchg
stos
stos
js
test
roll
push
inc
xchg
shrl
mov
jle,pt
and
ds
fwait
lock
mov
test
mov
in
sahf
xchg
fldcw
addr16
daa
insb
das
or
sub
lods
imul
cmpsl
and
addr16
jns
and
xor
jge
inc
mov
jmp
cmp
inc
pop
push
jo
xchg
jno
jmp
das
jp
je
dec
pop
popl
arpl
out
pop
stc
icebp
lods
inc
dec
and
add
in
adc
mov
cmovge
bound
outsb
ret
enter
sbb
mov
push
hlt
cmc
in
mov
insl
dec
mov
lret
lcall
add
mov
lret
repnz
xchg
mov
mov
shr
dec
shl
jecxz
cmp
mov
mov
push
popa
out
push
sbb
sub
adc
pop
sti
dec
pop
addr16
shlb
data16
ds
nop
sub
in
jmp
repz
pop
dec
xchg
stos
pop
int
push
push
or
out
pushf
cmp
push
inc
sub
aad
inc
pop
push
xlat
cmp
push
fidivl
repz
clc
lcall
outsl
and
dec
push
inc
add
loope
lods
mov
inc
push
and
cmp
or
mov
push
adc
dec
or
mov
movsb
push
add
jno
lods
push
lret
jbe
js
xchg
ds
in
pop
js
mov
add
int
mov
rcll
or
aas
sub
mov
lea
aaa
popf
frstor
out
add
arpl
and
in
sub
mov
test
sti
adc
xorb
out
mov
or
nop
or
pop
mov
or
jae
lock
clc
mov
pop
lea
mov
mov
rcrl
and
mov
pop
jne
pushw
in
lea
inc
out
add
repnz
jp
dec
mov
mov
outsb
pop
sub
push
test
pop
in
hlt
push
mov
das
andb
push
add
xor
xor
sub
je
daa
cmpsb
adc
ret
jg
dec
gs
mov
xor
ficoms
in
cmp
imul
leave
push
jns
ja
xchg
setg
rorb
ja
insl
xchg
test
pop
arpl
add
or
fiadds
lahf
jl
adc
inc
sub
ljmp
dec
xchg
push
mov
sbb
lea
cmp
icebp
sbbl
mov
push
sbb
push
cmp
and
fnstenv
dec
rolb
sbb
lds
rorb
push
xchg
ds
ret
cmpsl
add
rcrb
andl
mov
inc
or
mov
mov
in
dec
out
or
xchg
xchg
pop
dec
and
jbe
and
in
inc
decl
int
add
and
xchg
dec
call
and
inc
inc
add
andl
mov
das
jnp
inc
hlt
push
outsb
xchg
dec
mov
jecxz
es
mov
push
repz
pop
popa
dec
sbb
scas
daa
inc
xchg
cs
loopne
xchg
test
jg
xchg
fiadds
push
test
and
imul
dec
cli
sahf
mov
lods
sarb
xor
in
add
hlt
imul
xor
mov
popa
arpl
test
cmc
dec
xor
xchg
notb
adc
movq
arpl
in
lea
repz
jmp
pop
int3
xchg
add
es
inc
jp
dec
jbe
std
xor
in
xorb
and
or
lock
cmpsb
jg
enter
in
pop
sub
cmp
jns
mov
fldenv
mov
test
roll
xchg
gs
scas
mov
dec
in
mov
mov
mov
rorb
cmp
push
xchg
add
xor
xchg
mov
cwtl
mov
test
aam
out
fidivl
loopew
ljmp
xchg
loopne
pop
push
and
jae
outsl
aas
mov
mov
xchg
jmp
dec
aad
xor
icebp
jp
push
sub
push
mov
fwait
inc
fimuls
xchg
xor
mov
testb
push
mov
insb
push
js
inc
dec
loopne
mov
loope
and
mov
std
jo
andl
out
xor
gs
jl
in
mov
push
cmp
xchg
xchg
or
pop
inc
in
push
imul
jle
xchg
mov
lahf
into
lods
lds
stos
arpl
push
sbb
ret
dec
cmp
leave
sti
sub
dec
ret
dec
or
mov
cmpl
sarl
inc
jns
inc
rcrl
push
ds
cmp
popf
daa
adc
and
call
out
xor
cs
and
cld
sub
xor
ja
xchg
add
sbb
pop
mov
mov
jae
push
fistpl
sub
seta
lods
sahf
inc
push
idiv
or
push
jbe
mov
inc
das
lret
inc
arpl
pusha
lds
xchg
push
mov
daa
mov
icebp
insb
clc
popa
and
pop
and
add
and
je
cld
ja
aaa
popf
jp
int3
push
jb
push
mov
xchg
shll
mov
in
add
into
xlat
jns
sub
mov
sub
movsl
jae
cmp
cmp
dec
and
cmp
sbb
xlat
mov
mov
lahf
hlt
fcom
iret
cmpl
pop
repz
sub
cmpsb
mov
outsb
mov
mov
lods
dec
push
sti
inc
aaa
cmp
addr16
dec
cmp
test
sti
inc
dec
mov
inc
lods
xacquire
push
cmpb
cmp
pop
in
pop
cmp
test
lahf
decb
or
add
pusha
fists
push
sahf
repnz
sub
lods
out
pop
stos
inc
jl
cmp
popl
cmp
cwtl
cld
shll
cmpsb
or
orb
js
imul
mov
add
or
cltd
into
movsb
xchg
ja
xchg
fsubl
movsl
pop
outsl
subb
popl
sub
mov
jne
insb
icebp
mov
int
mov
fisubl
popa
cmp
js
mov
dec
mov
and
add
pop
ret
leave
dec
push
dec
and
pop
movd
negb
push
jl
in
dec
movb
pop
cmp
adc
cmp
push
and
jo
popf
popf
rcrl
sub
mov
pushf
popf
xchg
fwait
leave
sub
add
imul
pop
sub
mov
adc
loop
and
inc
pop
mov
inc
mov
mov
lret
adc
mov
lods
adc
cmc
pushl
fs
adc
or
sub
or
out
scas
shrl
sub
mov
negb
push
into
out
inc
add
movsb
pop
xor
incb
cmp
test
xchg
lahf
push
mov
mov
mov
cmp
fwait
scas
stos
icebp
pusha
aas
add
mov
jg
add
jmp
out
lcall
jmp
ret
or
mov
iret
mov
outsb
clc
push
pcmpgtw
push
mov
movsb
mov
and
mov
leave
jmp
add
mov
pop
mov
cli
sbb
jp
iret
inc
jmp
sub
add
inc
pop
xor
test
stos
dec
push
mov
sub
sub
scas
loope
or
push
jbe
or
mul
and
cmpsb
daa
adc
inc
pop
stos
xchg
and
test
dec
scas
cmp
pop
or
ret
mov
and
adc
sub
push
or
popf
dec
jno
lret
jge
in
mov
and
outsb
xor
adc
fs
dec
inc
sub
movsb
xchg
sbb
popf
xchg
and
imul
mov
push
addr16
pop
je
mov
fstpl
cwtl
leave
or
cmp
ret
dec
sbb
dec
sub
dec
jmp
imul
xchg
jge
add
in
xchg
jmp
push
hlt
mov
inc
add
fwait
jns
mov
rcl
mov
imul
ds
and
rclb
mov
ss
inc
pop
hlt
adc
xor
pop
pop
jle
sahf
jge,pn
aas
repnz
jnp
dec
insl
out
cmp
pop
and
int3
inc
sbb
imul
mov
mov
sbb
sbb
idivl
push
daa
fs
lcall
jge
sbb
stos
and
jb
pop
xor
repnz
inc
add
addr16
xchg
xchg
int
mov
mov
or
in
push
fsubrs
push
in
sub
sub
lret
sbb
insb
clc
cmp
test
dec
and
add
shll
or
out
lea
mov
and
push
jae
dec
pusha
xor
lret
jo
fwait
add
fcomp
sub
mov
pop
mov
xcrypt-ctr
cmpsl
pop
loopne
push
aas
icebp
and
hlt
int
push
aaa
jmp
ret
insl
push
outsl
mov
ljmp
imul
inc
sbb
lea
shlb
enter
and
dec
es
push
xor
jns
arpl
int3
lcall
sub
dec
inc
mov
push
in
pop
fadds
push
and
out
stos
xor
sub
push
mov
mov
popf
sbb
pop
xor
icebp
push
jle
mov
mov
mov
xchg
inc
hlt
sub
dec
push
sub
xchg
dec
cmp
sub
push
xor
xlat
leave
fwait
jb
mov
sbb
fwait
jb
sar
jl
into
xor
or
movsb
mov
out
les
cmpsb
popf
lcall
sbbl
data16
jmp
rcrb
std
cmp
xchg
test
push
sbb
mov
xchg
adc
jo
sbb
mov
pop
xchg
push
cld
mov
or
dec
mov
mov
and
fsubrs
cld
or
add
cld
pop
out
jae
push
or
pop
imul
scas
outsb
sub
loope
mov
adc
mov
adc
addr16
loop
mov
inc
pop
and
xor
mov
shl
loopne
or
mov
iret
xor
xchg
mov
adcl
sub
hlt
jmp
mov
fiadds
addb
shrl
mov
es
lods
add
cmp
sub
inc
sbb
in
push
sti
ret
sti
test
leave
lea
ljmp
lahf
dec
pop
and
sbb
lret
out
dec
or
sarl
or
es
outsb
jmp
lea
mov
shlb
dec
shrb
and
pusha
data16
repnz
xor
mov
mov
cmpsb
mov
aam
insb
xchg
xor
or
xchg
addr16
adc
shrl
mov
pop
lods
jmp
add
fists
jl
cli
xchg
lcall
mov
push
aam
and
add
jnp
lret
hlt
ret
jne
aad
cmpsb
movl
adc
insb
push
inc
inc
add
arpl
mov
je
ss
incl
outsb
aam
dec
push
jmp
xchg
into
insb
push
sub
xchg
inc
cmpsl
mov
sti
lea
cmpsb
mov
lods
jle
xchg
push
fs
adc
js
inc
inc
sub
imul
cli
push
mov
fisubrl
xchg
pop
inc
xor
pusha
mov
lods
popf
popf
mov
push
or
pop
pop
mov
sti
pop
stos
mov
std
rcrl
sbb
pop
mov
add
scas
pop
lds
and
enter
es
inc
pop
xor
ss
xchg
jae
pop
jns
mulb
out
fmul
data16
push
aad
dec
int3
shll
jp
cmp
mov
push
sub
dec
pushf
adc
roll
fidivs
dec
movb
mov
xchg
cld
inc
test
inc
push
aas
adc
shll
mov
fwait
jg
jmp
lret
xchg
ss
insb
dec
mov
ds
push
sbb
push
outsb
xor
adc
daa
inc
pushl
fadd
adc
mov
sbb
icebp
xchg
adc
jle
xchg
rol
in
or
decl
mov
nop
adc
or
or
xchg
imul
sti
mov
or
in
cmc
repz
inc
nop
je
out
push
push
test
pop
jae
cmpsb
jo
ret
jnp
add
xor
or
sub
sbbb
fwait
add
fnstcw
aam
push
xor
mov
mov
ljmp
push
xchg
xor
cmp
dec
xor
dec
hlt
push
push
lcall
xchg
push
xor
ds
pusha
gs
inc
adc
cmp
sarb
cmc
mov
pop
mov
lret
imul
push
sub
inc
out
mov
sbb
sbb
nop
mov
add
fnstenv
out
push
out
imul
xor
mov
js
aad
xchg
cmpsb
jnp
jb
out
jg
and
or
xor
out
mov
mov
add
lcallw
in
jecxz
cld
stos
mov
es
inc
mov
bnd
stos
sbb
insl
xorb
in
ficoms
cmp
jo
fldl
xchg
into
inc
call
mov
and
sub
xor
stc
and
out
shll
imull
sub
sbb
pop
clc
adcb
imul
or
pop
out
push
xor
sbb
inc
mov
nop
sarb
xor
rclb
jp
or
mov
mov
popf
mov
loop
pop
mov
out
sbb
dec
je
idivl
in
push
shl
mov
mov
iret
repz
lock
adc
xchg
mov
adc
in
mov
out
cli
insl
data16
lret
mov
mov
movsb
repz
mov
cmp
popf
mov
das
and
sub
or
cltd
loopne
inc
mov
test
das
dec
pop
sbb
aas
or
mov
cmc
notl
in
push
pop
out
lret
xchg
add
outsl
shll
pop
mov
dec
mov
xor
xlat
jno
in
cmp
mov
es
clc
out
mov
int
jl
or
ds
mov
pop
add
jne
arpl
jb
push
mov
mov
pop
mov
loopne
cmpsl
add
cmp
inc
pop
cmpsb
xchg
pusha
sbb
sbb
fwait
inc
inc
jp
orb
data16
jg
ds
xlat
sbb
sub
popa
sub
push
dec
lahf
popw
mov
or
scas
test
int
into
daa
jo
rcrb
and
xchg
stos
call
cli
xchg
lods
mov
mov
ucomiss
out
es
pop
mov
inc
xlat
repz
into
test
in
lock
mov
dec
inc
lret
jbe
mov
push
int3
cmp
icebp
fsubs
inc
pop
and
adc
jne
push
pushf
push
cmc
in
xchg
sub
mov
data16
sbb
xchg
aam
mov
call
mov
sarb
inc
fnstenv
outsl
out
cmp
xor
push
leave
and
add
adc
inc
rclb
mov
insb
in
aas
test
inc
lods
mov
or
jns
shrl
push
dec
adc
sub
in
lahf
rcrb
or
ss
xchg
xchg
cmp
mov
lahf
mov
mov
sarl
ret
xchg
cmpsb
repnz
cltd
inc
aad
xchg
xchg
mov
faddp
mov
push
aas
and
jno
scas
sub
pop
xor
pop
sbb
outsl
jne
in
push
mov
inc
mov
mov
arpl
in
test
jl
inc
dec
inc
lock
pop
xlat
adc
nop
adc
xor
jl
in
mov
and
inc
test
mov
pusha
mov
mov
fwait
popl
loope
popf
xchg
mov
das
movsl
das
jle
mov
pop
lea
push
lods
jne
in
push
ret
js
jns
mov
outsb
pusha
xchg
add
jae
aad
mov
xor
in
adc
cld
xchg
dec
fdivr
pop
xor
mov
and
jno
or
leave
lret
lock
sub
insb
mov
dec
addb
movsl
arpl
jmp
imull
jns
sbb
rolb
in
dec
xor
mov
ds
aad
push
jp
pop
jmp
inc
into
cmp
into
mov
insl
adc
dec
mov
jp
jp
