push
mov
push
push
mov
mov
mov
mov
push
mov
push
add
push
lea
lea
pop
call
push
push
lea
push
call
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
add
and
add
mov
mov
movl
mov
mov
lea
call
mov
mov
add
xor
add
decl
jne
addl
pop
pop
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
inc
dec
jne
pop
mov
ret
xor
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
sub
push
push
push
push
xor
lea
push
push
mov
call
add
xor
movzbl
push
mov
call
inc
pop
cmp
jb
lea
push
mov
mov
movb
mov
movb
mov
call
mov
lea
push
call
add
pop
pop
cmp
je
xor
inc
jmp
push
mov
call
push
push
push
push
push
push
push
push
mov
call
mov
cmp
je
cmp
jne
testl
je
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
je
push
push
push
push
call
push
mov
call
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
mov
pop
push
rdtsc
mov
mov
test
jne
movl
jmp
mov
not
xor
ror
not
mov
movzbl
lea
cmpb
jne
push
push
pushl
movb
call
mov
push
call
push
push
pushl
mov
call
mov
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
inc
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
mov
xor
mov
stos
mov
sub
sub
rorl
sub
dec
mov
jne
pop
pop
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
mov
jmp
lea
mov
mov
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
push
mov
movb
movb
call
mov
xor
mov
cmp
je
mov
jmp
push
mov
call
lea
push
mov
push
mov
call
push
mov
call
cmp
je
cmpl
jne
call
cmp
jne
lea
push
mov
call
mov
mov
mov
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
mov
mov
push
lea
call
push
call
push
push
push
push
call
add
mov
test
je
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
cmp
cmc
cmp
outsb
add
add
add
adc
add
and
jb
pop
cli
xchg
dec
jns
mov
and
mov
inc
sub
hlt
or
dec
je
push
xor
mov
cmp
or
jl
lret
jecxz
data16
mov
fisttps
aam
cmp
in
xchg
mov
enter
cmpl
rorb
mov
or
push
lock
imul
or
jbe
mov
out
test
ljmp
and
dec
mov
pop
outsb
cwtl
rcrl
push
in
inc
insl
xchg
push
leave
test
inc
loop
sub
sbb
cmp
mov
test
arpl
popf
jae
stos
push
add
fisubs
pop
arpl
fwait
andb
jmp
push
xor
aad
add
test
pop
fwait
sbb
jecxz
in
or
cmpsb
mov
adc
sar
pop
test
fdivl
adc
sub
imul
push
xor
jmp
sub
std
test
jbe
add
and
lret
ja
sbb
add
testb
test
pusha
xchg
pop
sub
and
mov
sbb
rorb
int
xchg
fsubs
pusha
cmp
out
jno
sti
fcompl
mul
popf
sahf
mov
or
cmpsb
fildl
mov
idivl
hlt
mov
lahf
sbb
add
inc
mov
ficompl
cwtl
rol
out
ljmp
push
lret
sub
shl
mov
fidivl
fincstp
ret
and
xor
pop
lea
mov
inc
jbe
fs
pop
mov
idivb
xor
sub
pop
lods
adc
out
inc
cmp
cmpsl
xor
in
or
cmc
int
cmp
lahf
lret
addb
xchg
scas
adc
hlt
iret
mov
xor
adc
dec
subl
icebp
xchg
sbb
or
stos
xor
jno
incb
xchg
ret
incl
lcall
nop
arpl
sub
js
pop
jns
mov
mov
out
xor
or
add
and
dec
push
pushf
js
add
xor
xchg
rolb
lods
push
pop
bound
aaa
les
dec
add
jp
out
bound
lcall
pop
icebp
repnz
arpl
xchg
js
pop
movsb
icebp
or
shrb
mov
pop
mov
cmp
ret
cmp
mov
insb
sub
repz
adc
fstpt
sub
in
aas
rcl
lock
lret
mov
dec
scas
or
cmc
cmc
xor
xchg
push
dec
or
test
push
jecxz
push
sbb
fwait
push
mov
int
sbb
pusha
test
sahf
xor
in
call
aad
sbb
repz
neg
push
ret
pusha
sub
adc
out
or
mov
mov
add
inc
cs
aaa
shrl
aaa
jl
adc
and
xchg
xchg
xor
clc
add
aas
jb
pop
lds
jno
cmpsl
std
xor
das
sbb
cwtl
mov
sbb
push
jp
add
popl
test
cs
mov
ljmp
sahf
pop
pushf
pop
fistps
xor
nop
mov
push
nop
nop
call
sub
lods
mov
sbb
mov
sbb
mov
mov
enter
daa
jl
inc
in
xchg
add
push
in
adc
aas
pop
pop
xor
jmp
fdivs
dec
daa
je
inc
in
pop
mov
xor
les
jno
dec
xchg
xchg
lods
mov
call
in
scas
clc
cmp
cmpsl
pop
inc
pop
jg
out
xor
sbb
addr16
ljmp
gs
rcrl
fstps
mov
xor
mov
popa
rclb
jns
test
mov
mov
stos
sbb
fdivrs
and
adc
notl
xor
rolb
xlat
sub
mov
ljmp
xchg
dec
lret
dec
imul
ja
cld
adc
pop
and
lret
and
in
arpl
mov
lods
inc
and
stos
dec
fucom
sahf
xchg
jno
mov
out
inc
jle
lret
mov
stos
dec
sahf
mov
jg
or
outsl
cmc
push
insl
fimuls
cmc
jae
bound
fsubs
xorl
cmc
ss
dec
addr16
mov
cmp
xchg
dec
jo
add
mov
enter
test
xor
and
mov
xchg
or
push
outsb
push
std
mov
pop
sub
xor
dec
sbbb
push
inc
mov
into
fsub
or
add
int3
mov
dec
insl
je
pop
mov
cld
movsl
xchg
mov
loope
adc
mov
lahf
or
into
iret
les
inc
ret
shl
mov
hlt
test
or
push
mov
xor
out
fstpt
imul
out
insb
jne
add
push
sti
or
ret
imul
mov
scas
inc
xor
cmp
call
fwait
mov
cmp
cltd
mov
xor
popa
insl
arpl
das
iret
and
pop
icebp
mov
jne
jp
xchg
cmc
inc
leave
pop
mov
int3
rorl
sub
popaw
clc
add
jo
mov
pop
hlt
add
mov
popa
jle
fstpl
test
xchg
pop
test
mov
push
mov
mov
test
out
cmpl
mov
ja
pop
mov
push
pop
inc
mov
dec
inc
inc
scas
fidivs
mov
inc
packsswb
and
jp
fsubrl
add
call
cmpsb
xchg
pusha
cmp
sub
xor
out
add
test
out
mov
or
and
inc
in
or
jmp
xchg
movsl
add
rcrb
inc
aas
rclb
jns
xor
test
insb
fimuls
in
lahf
inc
xor
jmp
pop
fnsave
sub
fstl
cmp
inc
jne
rcrl
push
call
mov
cwtl
push
mov
inc
sbb
test
lods
pop
loop
ljmp
cltd
repnz
mov
mov
repz
dec
push
cmp
pop
out
negb
sbb
sub
imul
add
jl
shlb
sahf
mov
jnp
sbb
decl
push
dec
scas
xchg
out
sbb
stos
nop
cmpsl
xchg
mov
or
sahf
adc
lcall
jbe
mov
aaa
fwait
sub
xor
test
sti
stos
pop
pop
sbb
mov
sbb
bound
xor
jl
stos
clc
mov
lea
leave
cli
popa
xor
jecxz
mov
lods
xor
push
stos
add
lea
push
sbb
mov
mov
push
cmp
sbb
pop
notl
inc
sbb
push
fnstcw
insl
and
dec
lret
ds
push
sub
dec
test
xchg
lret
mov
call
shrl
stos
cmp
sub
jmp
add
in
sub
jne
aam
rcl
push
in
mov
adc
and
popa
pusha
inc
pop
add
mov
in
jae
jecxz
xorl
inc
jno
lea
jg
dec
aam
push
pop
pop
call
divl
ret
mov
ret
push
dec
push
loope
push
sbb
mov
shl
js
es
ret
push
xor
jns
inc
cmp
or
in
mov
outsb
xor
dec
fsts
pop
mov
xor
mov
rorb
repz
mov
btr
push
mov
movsb
xchg
dec
lock
mov
xchg
cmc
call
add
add
mov
sbb
sbb
mov
shlb
mov
bound
push
arpl
mov
test
mov
std
inc
stos
xchg
out
and
movsb
lcall
xor
pop
jg
ret
lcall
mov
clc
jl
push
inc
leave
push
mov
sahf
xchg
adc
aad
ja
mov
add
mov
add
add
mov
out
add
sbb
into
in
loopne
imul
outsl
or
imul
cli
add
or
or
bound
sub
fistps
dec
mov
lcall
and
mov
jmp
cmp
push
dec
cmp
cmpb
inc
jns
sub
arpl
and
icebp
push
sbb
push
adc
movsl
xchg
scas
xorb
ljmp
sub
or
jo
add
shl
psrlw
or
lods
call
push
jne
iret
inc
or
lret
mov
pushl
bound
pop
mov
fisttps
sbb
outsl
pop
cmp
pop
loopne
out
xchg
push
fwait
and
cmp
inc
lds
jp
pop
and
push
push
in
addl
cli
jecxz
sub
and
lahf
push
in
das
push
loopne
bound
adc
aam
stos
iret
fistpl
lock
add
sub
add
js
inc
mov
aam
fwait
mov
mov
test
push
lret
adc
int3
testb
mov
jmp
cmp
jnp
ljmp
jle
push
or
sbb
test
scas
pop
nop
cmpsb
inc
mov
dec
mov
cwtl
sbb
push
jbe
fistps
out
adcb
in
xor
or
fcmovne
mov
xor
in
mov
out
mov
push
xchg
out
mov
mov
in
insl
movsl
xlat
lret
inc
cld
sbb
jle
add
fmulp
push
push
xchg
ja
bound
or
jae
cmp
jns
xchg
scas
je
test
mov
test
ret
pop
xor
or
mov
fs
pusha
loopne
int
cbtw
jno
dec
mov
push
stos
aaa
aas
movsb
mov
loopne
mov
in
inc
or
push
pop
inc
or
or
sahf
pop
addr16
mov
roll
fmull
hlt
nop
lea
mov
xchg
icebp
jne
mov
and
mov
fldl
adc
pusha
adc
loope
in
mov
push
jge
adc
fisttpll
jmp
or
das
stos
shr
cltd
adc
lret
mov
or
xor
push
or
mov
scas
shlb
hlt
or
mov
out
imul
sar
dec
push
pop
inc
mov
decl
jmp
cltd
cltd
mov
stos
iret
xor
sub
movsl
push
push
imul
adc
push
sub
or
xor
das
jno
cmp
loop
sbb
push
dec
aam
rolb
insl
lcall
fdivs
xchg
jle
aad
mov
loopne
cmc
pop
lock
ljmp
test
daa
test
cld
jecxz
popa
sbb
and
cmpsb
inc
cmp
lds
adc
jmp
pop
adc
decb
sub
xchg
ret
push
jo
decb
jmp
xor
out
jg
pop
cld
stos
fucomi
scas
in
cltd
ret
inc
cmp
loop
mov
inc
mov
and
std
push
aaa
pop
pop
xchg
dec
ss
imul
bound
and
mov
sbb
xchg
out
cmp
sub
dec
mov
lea
jno
rcrb
loope
popf
mov
jl
push
dec
jae
outsb
icebp
and
dec
mov
sub
out
outsl
rclb
subl
je
dec
jle
lcall
cld
jne
sbb
xorb
popf
dec
js
mov
fisttpl
fildll
or
push
mov
jbe
fiadds
sbb
mov
sub
push
cmp
sti
xor
jbe
fs
nop
stos
rol
sbb
push
fucomip
xchg
push
pop
mov
divl
inc
jne
sahf
jbe
repz
lcall
adc
cltd
adc
movsb
fiaddl
jp
pop
jge
aaa
repnz
mov
stos
add
mov
sarl
inc
lea
push
jno
xchg
pop
aas
push
arpl
push
xchg
popa
aam
and
test
mov
das
shll
shll
cli
xor
rcrb
dec
les
std
add
out
sti
jns
xor
lds
outsb
jmp
add
inc
mov
bound
out
inc
int
jle
inc
dec
push
dec
adc
fists
and
push
std
sahf
jbe
or
mov
mov
sub
data16
mov
cmp
stos
dec
hlt
mov
push
es
inc
std
inc
outsb
outsl
movsb
lds
shlb
add
dec
push
mov
std
rcr
jg
cmp
sbb
and
or
pop
push
test
nop
jg
and
into
jp
fiadds
test
sbb
mov
or
ljmp
sub
mov
or
inc
popa
and
push
and
or
push
or
rolb
sbb
pop
loop
jecxz
push
lock
lret
cld
cmp
or
test
popf
mov
pop
xchg
mov
inc
sti
ret
pop
or
inc
shlb
cmp
adc
xor
pop
repnz
addl
lcall
xor
mov
stc
nop
dec
inc
decl
cmp
icebp
xor
pop
sub
ret
sub
outsl
sub
xchg
sub
mov
es
sub
ret
lea
mov
or
adc
dec
jnp
inc
mov
jae
rclb
adc
dec
cwtl
pop
and
sarl
pop
repnz
fcoml
pushf
push
inc
cmp
xchg
loope
cmpsl
shr
push
lret
lret
stc
xchg
ror
das
push
stc
testl
out
mov
adc
xorl
fistpl
rcrl
sub
sub
jne
hlt
lds
popa
imulb
test
sbbl
or
aaa
adc
ret
ljmp
idivb
push
roll
push
stos
add
jmp
mov
adc
xor
inc
mov
imul
jecxz
mov
mov
lods
cmp
int3
fsubs
adc
test
push
add
mov
out
dec
add
jge
mov
cmp
test
and
popf
sbb
or
mov
pop
mov
scas
dec
cmp
jge
sahf
insl
jmp
inc
push
cmp
and
shrl
movsl
in
jg
pusha
sbb
pop
icebp
adc
push
inc
ss
fs
ret
adc
inc
cmpsl
or
lods
mov
aam
sbb
cmp
push
or
jns
adc
adc
mov
sti
xor
test
inc
and
push
xor
shlb
arpl
nop
mov
nop
sub
sub
loope
shll
ret
lea
push
pop
jmp
rol
push
test
arpl
negb
cmp
push
xchg
xchg
mov
ds
std
lcall
cmp
push
mov
sbb
loope
mov
js
aam
inc
sbb
pop
dec
dec
sbb
sub
push
jb
pop
pusha
in
jnp
mov
pusha
rorb
int
push
push
sub
mov
lods
add
pusha
pop
arpl
fabs
fnstenv
mov
movapd
roll
sub
mov
push
iret
roll
add
cmc
out
into
xor
or
stc
aad
fldenv
xor
lahf
push
xor
outsl
testb
mov
js
repz
and
and
push
xor
pop
sub
or
test
icebp
scas
das
mulb
rcrb
xchg
adc
sbb
add
cmp
or
ret
enter
stos
lcall
pop
sub
push
jl
stos
xor
ficoms
shrb
mov
mov
pop
repnz
aas
jmp
fs
mov
call
push
mov
insl
cmpsb
jg
std
sub
xor
mov
inc
iret
mov
fs
lds
lret
ja
pop
mov
aaa
mov
dec
ljmp
xchg
or
ds
stc
sbbb
sbb
imul
sbb
pop
repz
jno
adcl
xor
fnsave
mov
or
setae
xchg
and
popf
sbb
ret
imul
lock
sub
cmp
add
mov
mov
pushf
sbbl
and
inc
fdivs
cmp
scas
pop
enter
orl
imul
js
addr16
xor
dec
sahf
dec
aas
arpl
mov
and
in
dec
mov
jbe
aad
stc
into
out
adc
test
jns
adc
insl
ljmp
sti
push
and
push
and
cmpsb
cmp
xchg
inc
lret
sbb
xchg
push
add
add
scas
cmc
jg
jg
mov
ja
add
stos
out
push
xchg
cwtl
lret
into
stc
mov
jle
sbb
inc
jge
mov
and
sbb
ret
and
out
push
outsl
fsubs
push
mov
push
cmp
push
mov
mov
movsb
in
out
inc
mov
stos
das
add
mov
add
fildll
aam
in
inc
cmp
sbbb
cltd
push
push
sub
stos
out
lea
jae
rorb
and
pusha
dec
add
je
movsl
xor
nop
mov
cmpsl
push
gs
imul
rcrl
andb
ret
mov
xchg
lahf
cli
outsl
bound
push
mov
popf
lds
arpl
jecxz
pop
dec
sbb
addr16
enter
push
popa
dec
call
repz
gs
jbe
test
add
aas
lock
jp
mov
mov
stc
sbb
push
repz
mov
aad
in
sub
into
ficoms
sub
les
pop
mov
mov
cld
pop
lock
push
inc
arpl
push
out
gs
ss
dec
test
bound
mulb
daa
push
or
fsubrs
lock
xchg
sti
jg
gs
out
pop
jmp
jne
cmp
popa
xlat
sub
and
imul
and
in
inc
cs
aam
into
stc
pop
jbe
jb
jae
mov
stos
movb
and
xchg
sbb
mov
popa
test
rcr
mov
bound
sub
je
inc
insl
sti
xor
pop
mov
ja
cmp
dec
mov
sub
loop
sbb
adc
push
mov
lcall
sti
sti
and
ret
setnp
loope
fimull
arpl
les
jecxz
or
lea
cmp
fisubs
fdivl
dec
fildll
out
xchg
jae
mov
cmp
out
add
pop
rclb
xchg
jo
mov
push
xor
inc
inc
jb
push
dec
mov
mov
jge
xor
inc
int
hlt
sub
xchg
insl
fwait
pop
mov
inc
sub
inc
adc
lea
imul
orl
in
js
adc
xor
cwtl
adc
inc
mov
ja
mov
jle
dec
xor
xchg
mov
jl
lods
push
mov
xorb
push
ljmp
cwtl
xor
mov
xchg
push
add
fwait
dec
in
mov
add
pop
mov
mov
xor
xor
movsb
push
aam
arpl
cmp
insl
les
dec
outsb
push
test
pop
inc
mov
jp
push
daa
ret
outsb
cmp
ja
inc
or
and
inc
adc
movsl
and
adc
aam
mov
out
int
xchg
jl
and
hlt
cmc
in
mov
cmpsl
nop
fs
daa
xchg
loop
dec
xchg
fstl
js
mov
outsb
adc
scas
lret
fnsave
add
xchg
cltd
enter
cmp
inc
and
aad
xor
add
pop
adc
pusha
and
in
dec
adc
mov
mov
dec
mov
stc
xor
and
repz
push
loopne
push
es
arpl
aam
arpl
jne
popa
sbb
neg
imul
jne
js
mov
sub
je
inc
movsb
negl
mov
mov
stos
xchg
and
pushf
mov
dec
imul
push
lods
sub
cmp
adc
popa
jo
mov
jno
mov
insb
or
push
roll
mov
in
xor
aad
push
jo
jl
pop
lahf
push
scas
lds
inc
mov
clc
enter
cmp
dec
add
jb
pop
std
mov
int3
outsb
and
jo
sub
and
fsubrl
es
mov
or
jle
mov
sbb
pushf
mov
adcl
xchg
cmpl
loop
test
ljmp
pop
arpl
lods
push
scas
sbb
inc
pop
test
aas
pop
jne
sbb
and
out
mov
and
shll
pop
rorl
js
mov
insl
jb
cs
aad
dec
sbb
and
sub
mov
in
fsubrl
adc
jge
adc
in
jmp
jg
enter
add
xor
pop
mov
push
adc
or
xchg
inc
imull
inc
mov
jle
inc
adc
xchg
jo
ss
lret
mov
jle
push
mov
jge
xlat
rorb
inc
ja
cmp
lods
jo
push
sahf
mov
jb
mov
addr16
mov
and
mov
push
leave
stc
div
in
jmp
dec
jae
and
mov
mov
dec
fnstsw
pop
cmc
dec
lret
ficompl
nop
inc
fisubrl
stos
or
cmc
jbe
imul
mov
dec
pusha
mov
add
cwtl
xor
movsb
jne
xchg
xor
inc
jns
insb
orb
ret
mov
cli
sti
mov
mov
sti
cmp
aaa
hlt
xlat
pop
mov
xor
dec
xchg
popl
mov
fadd
dec
lods
in
mov
ret
push
sub
push
sub
mov
jg
sub
cwtl
mov
mov
lds
sarl
dec
push
mov
xor
dec
sub
mov
pop
xchg
inc
les
sub
mov
xor
mov
aam
enter
jno
push
inc
inc
and
ss
sbb
ficoml
mov
mov
xor
push
cmp
mov
mov
and
dec
push
xchg
adc
jl,pt
jmp
adc
add
out
cmpsb
repz
cli
cwtl
inc
sub
push
stc
xor
pop
test
imul
cmp
call
or
inc
call
cwtl
ret
or
imul
ficompl
das
and
sbb
je
ret
arpl
incb
lcall
mov
sbb
add
sbb
xor
pushf
fcmovb
aas
insl
mov
stos
or
clc
xchg
mov
push
xchg
mov
dec
mov
lcall
push
mov
lds
ds
es
mov
imul
aaa
xrelease
imul
mov
jp
xorb
ret
xchg
mov
adc
aam
scas
sti
mov
pop
pop
cmc
test
pusha
cmp
out
jmp
pop
in
xlat
fldcw
or
or
mov
jne
ds
scas
jecxz
mov
push
adcl
mov
test
add
lods
mov
or
gs
out
outsb
cmp
pop
cmp
xor
dec
add
mov
hlt
andb
ljmp
or
lea
repnz
repz
je
mov
sub
sub
add
sahf
insl
jecxz
cmpb
int3
push
roll
inc
sahf
shll
jne
cmp
mov
sbb
push
pushf
dec
pusha
sub
lret
out
test
stc
jmp
fs
nop
lcall
addb
lds
xorl
xchg
cmpsl
adc
test
or
cwtl
xchg
push
lds
dec
inc
aas
sub
movsb
shr
pop
sub
dec
pop
jg
xor
incb
push
stos
jecxz
aaa
out
mov
jb
lods
rol
sub
push
cmpsl
aam
sub
mov
jne
mov
daa
stos
iret
mov
and
je
dec
scas
enter
nop
xor
mov
xchg
mov
pop
adc
icebp
jl
adc
xchg
bound
jb
mov
and
pop
out
outsl
push
dec
dec
xorb
addr16
mov
xor
add
aad
adc
sahf
xorb
gs
jae
pop
sub
je
mov
es
imulb
cmp
sub
hlt
or
mov
xchg
repnz
push
cs
andl
mov
sub
add
mov
and
inc
mov
sarl
push
push
xor
lea
xchg
xchg
call
sub
dec
inc
fwait
aaa
sub
lods
test
loop
imul
mov
lods
icebp
nop
inc
sub
or
jno
xchg
dec
mov
jnp
bound
mov
ficomps
push
pop
stc
cmp
out
mov
sbb
lods
daa
pop
jae
xor
jg
cs
mov
xchg
jne
pop
rcrl
xor
mov
or
lea
inc
inc
lret
jl
push
add
call
pop
add
pop
lock
call
xor
cli
sbb
mov
mov
add
les
aas
and
mov
jno
mov
insl
push
loopne
aas
ja
and
aas
add
test
arpl
dec
stos
mov
iret
xchg
and
pop
in
jns
lock
xchg
stc
fwait
hlt
mov
stc
push
insb
aaa
das
xor
insl
jle
lock
sub
add
movsl
inc
lea
jbe
inc
lock
mov
loopne
lret
xor
in
jge
mov
shlb
ret
mov
xchg
inc
outsb
mov
dec
and
repnz
pusha
cmp
dec
lock
popl
add
sbbl
pop
mov
push
xor
cmp
xchg
and
mov
xor
cmp
scas
enter
into
sti
cmp
jp
mov
push
lret
xor
inc
loopne
mov
sub
enter
testb
lret
data16
ret
ds
sbb
test
sbb
pop
les
and
jmp
xchg
jg
rcrb
int3
vmread
pop
aaa
stc
rcll
shr
adc
add
sbb
cli
pop
imul
lcall
pop
ret
ret
add
clc
lock
and
gs
pop
hlt
addr16
out
lds
aam
insb
outsb
cmp
test
icebp
iret
movl
fsubs
ljmp
add
add
add
enter
and
leave
sahf
xchg
outsb
lret
pop
fisubrs
sub
mov
add
stos
nop
mov
push
jno
jp
inc
addr16
mov
push
bound
into
and
and
in
mov
scas
and
add
sbb
jmp
xor
cmp
imul
lea
cli
mov
lcall
cmpsl
xor
sub
sbb
cld
nop
jl
cmpsb
jbe
xor
outsl
jne
mov
lret
xchg
sarb
rcl
mov
sbb
gs
div
andl
insl
sub
sahf
stos
dec
adc
and
push
jge
add
fdivrl
add
sbb
sub
cmp
mov
sbb
sti
out
mov
sub
push
push
and
pop
sbb
push
cs
imul
jne
and
mov
aaa
repz
and
push
jae
cmp
mov
mov
push
and
out
and
lds
lret
jbe
es
add
xorl
lods
jb
inc
dec
popa
inc
mov
fs
iret
pop
fcom
xor
ljmp
push
xor
cltd
dec
xor
movsb
adc
shlb
add
push
shrb
fwait
mov
add
orb
jmp
mov
inc
js
jbe
mov
stc
jo
in
iret
aad
daa
jmp
jno
lods
mov
mov
dec
cmc
or
jns
ljmp
pop
adc
addr16
lds
sub
inc
cld
jmp
mov
sub
adc
ss
jecxz
ss
fcmovnu
cmp
dec
in
inc
and
mull
mov
pushf
lea
push
out
mov
cli
int
enter
xchg
mov
in
aas
jo
punpckhbw
insl
fwait
repnz
repz
cld
add
push
scas
ljmp
jecxz
mov
mov
xlat
ss
inc
rcrl
jne
js
fst
push
sarl
ja
xor
jmp
inc
orb
inc
push
popf
sbb
pusha
or
pop
mov
stos
ljmp
cmp
dec
inc
lcall
dec
sub
jb
adc
scas
or
mov
sub
test
enter
push
stos
mov
sbbb
xchg
imul
mov
lahf
pop
push
out
stc
pop
nop
aam
mov
loope
pop
scas
sbbb
sbb
cmp
and
testb
into
mov
nop
je
inc
push
cli
popa
insl
xor
pop
pop
jecxz
jge
add
fcoml
pop
jb
add
fs
cmp
and
movsb
adc
sbb
call
test
jl
xor
mov
mov
sti
lahf
loope
test
mov
dec
jb
dec
mov
aad
aad
and
jne
jns
mov
cmp
push
jl
inc
pushf
pop
fcoml
sbb
mov
mov
push
sbb
or
subl
fucomi
fcompl
icebp
ljmp
ret
mov
shll
xchg
push
test
subb
sbb
imull
jg
sbb
icebp
inc
std
push
fstps
loopne
jno
dec
sub
push
jecxz
cld
inc
and
mov
into
mov
cs
jmp
and
push
test
ja
loop
cmp
xlat
mov
mov
pop
mov
inc
mov
dec
pop
xlat
call
or
jne
stos
xor
adc
clc
je
dec
mull
push
lret
adc
cwtl
push
int
outsl
pop
cld
movsl
ss
orb
movsl
pop
bsf
out
or
out
jo
mov
push
repnz
sbb
inc
xlat
cmpsb
stos
movsl
js
mul
xor
jno
rclb
mov
pusha
into
mov
in
and
aad
rcrl
test
test
mov
and
cmp
cmpsl
xchg
mov
mov
or
sahf
jnp
mov
movsb
mov
xchg
adc
shrb
es
xchg
sahf
pop
cmp
jge
inc
gs
test
nop
clc
pop
and
ds
fsubrl
pop
dec
idivb
sahf
push
popa
xchg
leave
dec
push
xor
cmp
adc
movsb
loopnew
dec
xchg
bound
adc
sbb
dec
fdivs
pop
imul
mov
lret
arpl
cmp
insb
xor
and
in
mov
rcrb
lahf
xchg
shl
sarl
pop
aad
nop
lea
dec
xor
imul
clc
push
loop
enter
nop
loop
xor
push
outsl
movsb
jnp
mov
out
inc
or
je
xor
jb
insl
pushl
push
ja
push
test
outsb
clc
push
mov
dec
sbb
lods
pop
test
cmp
ret
imul
fwait
cli
or
push
mov
sahf
mov
jg
lret
jecxz
sti
jb
xor
stos
ss
cs
or
inc
mov
xchg
lcall
sahf
jae
fadds
lock
cmc
push
cli
xchg
adc
mov
mov
dec
scas
cli
call
rcrb
pusha
pop
scas
xchg
mov
xor
pop
div
add
and
aas
cmpsl
xchg
cmp
filds
sub
and
test
mov
ss
lods
inc
inc
pop
pop
out
call
jns
inc
pop
xchg
stos
xchg
fisttpll
lahf
mov
rolb
out
pop
or
xchg
push
cmc
xchg
aas
les
leave
push
aaa
das
imul
aas
rcll
repnz
add
mov
xor
push
dec
sbb
jmp
push
xchg
ja
pop
aam
ljmp
test
dec
fdivs
icebp
push
insb
mov
insb
sbb
rcrl
or
add
or
push
leave
sub
out
sbb
lods
aas
push
mov
pop
hlt
pop
and
sbb
or
int3
sub
lods
loope
sar
adc
scas
out
jl
adc
add
dec
out
ljmp
adcl
iret
push
push
mov
lea
popf
push
fdivrs
cmp
xchg
xorb
mov
iret
es
cld
out
dec
fwait
and
jns
and
or
pop
push
mov
leave
int
cwtl
mov
imull
cli
pop
les
std
adc
bound
ljmp
sub
addr16
lret
pop
xlat
ds
ret
clc
leave
sub
jb
arpl
cwtl
adcl
dec
mov
ret
mov
mov
andb
icebp
lods
pusha
mov
push
aas
int
lods
into
rcrl
fsts
pop
pop
and
xor
shlb
or
pop
xlat
arpl
lea
daa
xor
xlat
clc
jo
rcrl
sub
pop
add
push
or
push
loopne
flds
pop
push
nop
out
mov
dec
mov
add
mov
push
pop
sbb
cwtl
popa
lcall
fidivrl
bnd
xchg
ss
xor
mov
testl
pop
mov
gs
mov
test
sbb
inc
xchg
lods
fwait
push
dec
rcrb
aas
ss
xchg
fidivl
inc
cwtl
cmp
in
push
sub
inc
pop
std
iret
dec
sub
imull
jo
fs
jge
jmp
lods
sbb
fucomip
imul
xchg
adc
addr16
lret
scas
movsl
pop
mov
in
pop
dec
sbb
clc
int
push
mov
inc
jl
sbb
jmp
addr16
hlt
mov
in
pop
popf
inc
pop
nop
mov
push
fwait
pop
cmp
xor
rolb
movl
adc
pop
adc
cmp
mov
mov
addb
push
loopne
outsb
cmp
clc
nop
out
xor
inc
add
scas
mov
pop
sahf
fists
adc
pop
sti
or
cli
mov
dec
add
or
cli
xor
push
mov
test
rolb
data16
imul
int
lock
aas
cli
mov
push
push
add
icebp
stos
addl
sub
mov
add
mov
xlat
push
ftst
mov
addl
push
pop
dec
xlat
sbb
cmp
xchg
cltd
mov
sub
pop
mov
arpl
lods
aas
inc
or
nop
ret
xchg
outsl
dec
cs
cmp
pop
pushf
mov
shrl
mov
or
sub
pop
ficoml
mov
xchg
lahf
insl
mov
inc
out
sbb
ss
mov
lods
gs
jnp
lcall
sbb
add
int3
stc
lret
sbbb
cmpsb
fnsetpm(287
dec
lock
mov
arpl
mov
and
out
add
push
call
orb
inc
div
cmp
in
add
lock
add
or
ficoms
sti
scas
or
push
arpl
pop
popf
mov
enter
lock
pop
cld
add
inc
jns
fisttpl
popf
ja
repnz
dec
xchg
je
push
sub
sbb
xchg
out
mov
mov
cmp
mov
sub
imul
and
cwtl
and
inc
mov
xor
adc
jo
mov
inc
adc
push
subb
pop
mov
into
shrl
inc
jo
ficomps
out
push
lea
roll
lods
add
push
push
adc
jmp
pop
dec
mov
int3
cmpl
push
leave
repnz
in
sbb
sub
daa
jmp
mov
jmp
fwait
push
dec
xchg
or
push
lods
movsl
sub
jne
push
out
mov
jae
popa
push
cmp
loope
sbb
lret
dec
jge
je
push
xchg
add
xor
fistpl
push
test
push
imul
test
xchg
sub
jle
popa
loopne
test
popa
ret
mov
xor
inc
scas
push
inc
in
xor
push
xor
movl
sub
cwtl
mov
stos
jne
stos
orb
incl
xchg
dec
pop
insb
es
add
filds
mov
dec
sbb
imull
int3
jmp
add
repnz
xchg
dec
cltd
aas
popf
pop
out
add
and
mov
push
shl
mov
stc
pop
loope
xchg
sbb
ja
in
es
cmp
lcall
adc
inc
test
xorl
nop
out
or
int
sbb
sbb
repz
mov
xchg
repnz
fs
pop
pop
int
inc
dec
sahf
mov
cs
aam
xchg
outsl
repnz
pop
xor
outsb
sahf
mov
mov
cmp
add
and
sarb
test
fnsave
cmpsl
repnz
sub
cmpsb
xchg
lret
push
xor
push
ficoms
aaa
pop
adc
jo
repz
inc
fwait
or
andl
mov
mov
stc
pop
xor
je
orl
loopne
das
add
xchg
movsb
icebp
notb
loope
loop
mov
pushf
jo
push
loop
imul
inc
sub
push
jg
mov
fsubrl
xchg
add
pop
sahf
pop
stos
pop
std
das
xor
adc
pop
pop
jbe
jno
hlt
add
outsl
lods
fldt
les
adcl
jo
jg
sub
mov
mov
fs
sub
inc
add
cmp
mov
shrl
arpl
fs
dec
rcr
inc
mov
out
adc
xor
outsb
cmp
arpl
cmpsl
fistpll
add
imull
xchg
loope
mov
mov
out
xchg
cs
mov
aas
inc
cmp
insl
mov
push
cmp
fwait
xchg
clc
inc
push
mov
fsubrs
and
lods
popa
lahf
jbe
pop
jmp
addr16
push
cmc
mov
scas
mov
dec
push
mov
clc
into
in
in
sbb
push
ss
mov
out
hlt
outsb
movsb
hlt
dec
cmpsl
pop
push
cmp
cld
ror
cmp
dec
pop
mov
in
popf
mov
cmp
sbb
cmpsb
xor
test
sbb
pop
inc
mov
push
shlb
push
jg
or
cwtl
inc
mov
imull
jae
movsl
pop
clc
jb
lret
push
inc
and
stc
sti
loope,pn
xor
test
les
or
fildll
mov
movsb
iret
das
sbb
add
add
aaa
stc
push
int
or
icebp
xchg
pop
inc
sbb
loop
jecxz
orb
in
scas
std
inc
adc
mov
leave
push
xchg
adc
cmc
xchg
and
ficompl
xchg
cmp
cmp
cmp
and
jl,pn
int3
xchg
orb
inc
arpl
cmpsb
test
in
fisubrs
out
scas
aad
movsb
pop
andl
imul
fnstsw
xlat
mov
and
mov
push
pop
jae
rclb
push
and
lret
mov
inc
fcmove
mov
cmp
fstpl
push
test
orb
xor
mov
adc
aas
ja
dec
jns
imul
mov
outsl
or
mov
mov
insb
es
aas
mov
dec
neg
jbe
jge
or
add
dec
push
mov
sarb
scas
mov
or
push
mov
stos
adc
cmp
lea
jge
mov
xor
adc
pop
clc
adc
inc
test
jb
dec
jb
mov
mov
mov
arpl
or
pop
mov
mov
out
cmp
imulb
or
sbb
xchg
jnp
cmp
pop
test
jo
mov
sbb
push
jecxz
xor
out
inc
pop
or
mov
xor
xor
sbb
mov
rorl
sbb
push
cwtl
add
in
mov
dec
stos
jo
adc
call
cwtl
jns
sub
pop
xchg
or
or
jle
mov
jno
stc
mov
popf
test
dec
push
fsub
fstpl
test
add
lahf
dec
loope
or
dec
mov
pop
stc
and
pop
roll
pop
sub
out
clc
dec
xor
mov
outsb
xor
stos
mov
int
inc
sub
inc
mov
jns
jo
stos
call
add
push
jns
aad
lock
sbb
pop
cmp
inc
pop
mov
push
pop
sub
or
fdivl
outsl
cmp
or
lss
push
imul
faddp
add
shrl
subl
in
iret
rcll
icebp
xchg
es
fimull
mov
sub
xchg
and
nop
dec
or
push
xor
fdivs
int
push
int
inc
leave
mov
push
inc
pop
inc
in
adc
mov
lea
lret
mov
pop
xlat
sub
or
iret
nop
jge
xchg
cmpsl
cwtl
cmp
incl
cmp
fadds
adc
and
cltd
repz
adc
imul
mov
jle
mov
insl
addr16
js
outsl
add
ja
jecxz
dec
pusha
lods
cmp
mov
enter
ret
pop
aam
add
jge
push
cmp
outsl
jo
push
add
push
insb
pop
addr16
popa
test
out
mov
push
loopne
xchg
cmp
dec
movl
stos
dec
mov
xchg
jge
xor
dec
mov
xchg
jno
test
mov
fmulp
pop
aam
repz
loop
add
or
std
push
jl
dec
add
jg
push
push
sbb
sub
divb
jge
inc
or
sbb
fidivrl
sbb
or
dec
xchg
shr
mov
pop
cmp
lcall
sub
aaa
mov
mov
mov
stos
movl
xchg
xchg
lods
sbb
inc
lea
cli
jo
jl
shr
ret
sub
test
or
cmp
shrl
aaa
bound
push
movsl
sub
adc
shl
je
jne
popf
jmp
mov
das
lods
imul
jbe
daa
push
dec
mov
nop
call
push
inc
or
jle
js
stos
push
inc
mov
cltd
cs
ja
pushl
cmp
mov
or
pop
jle
and
sahf
mov
out
cmp
dec
and
cmp
inc
sbb
sub
lods
xchg
jp
cmp
jbe
jp
jno
or
xlat
push
mov
push
sbb
sub
xchg
aam
push
push
or
jae
mov
inc
dec
fcomi
iret
ja
and
adc
imul
xchg
outsl
sbb
lret
pop
push
fcmovne
push
out
xchg
jne
lods
mov
cmpb
or
ds
mov
jbe
or
xchg
and
sbb
fucomip
call
in
stos
mov
xchg
imul
pusha
cmpsl
stc
shr
adc
sbb
jl
mov
aad
icebp
mov
mov
jl
inc
cmpsb
jnp
adc
cli
mov
push
retw
daa
inc
sahf
cmp
pop
and
push
pop
cld
sub
iret
xor
je
and
add
mov
mov
cmp
scas
mov
int3
leave
cli
pop
mov
push
push
daa
pop
dec
lret
ret
test
jns
movsb
adc
sub
movsb
mov
push
jno,pt
jecxz
and
data16
insl
fcomp
sub
pusha
hlt
dec
mov
dec
std
pop
movsl
mov
test
jp
mov
out
adc
push
jmp
aas
and
imul
sarl
in
gs
dec
and
out
dec
or
xor
push
dec
mov
inc
sti
jbe
mov
inc
dec
fiaddl
fcomi
test
cmp
hlt
outsb
xchg
push
xor
dec
aaa
dec
add
ljmp
adc
pusha
aas
aaa
sbb
xor
mov
pop
hlt
scas
sbb
sbb
xor
or
std
mov
hlt
dec
mov
aaa
or
push
xorb
jo
push
js,pn
adc
movsb
pop
test
rorb
sub
inc
mov
push
or
fwait
loop
push
xchg
xlat
mov
outsb
sbb
dec
mov
ds
inc
inc
sahf
and
cli
je
movsl
jbe
lcall
mov
inc
pop
in
jae
mov
inc
nop
push
xor
mov
jle
aam
cmp
push
push
jecxz
adc
ljmp
add
xor
adc
shll
cli
lock
es
shrb
mov
push
xchg
adc
movsl
xor
addr16
jle,pt
fsts
stc
push
sbb
insl
cwtl
jbe
lock
enter
enter
cmp
mov
sub
sbb
outsb
push
push
and
andl
clc
call
adc
add
cmc
lods
dec
xor
jge
std
jne
fs
pop
sub
xchg
js
cwtl
cwtl
cmpl
cmp
mov
sub
mov
pop
cwtl
dec
mov
push
lahf
out
das
insb
pop
or
in
lods
jmp
inc
and
roll
xchg
jmp
movsl
pop
and
stos
jo
aam
popf
cmp
in
cmc
pop
sbb
jg
std
jnp
loope
jmp
mov
cmp
loopne
inc
mov
pusha
shlb
jmp
jp
cld
pop
test
loop
repz
scas
jecxz
mov
mov
jle
insb
cmp
sub
cmp
mov
jmp
mov
jmp
add
xor
jnp
mov
xchg
add
out
movsl
cld
das
neg
mov
jg
pop
addr16
xor
cmc
dec
lcall
cli
repz
fcoms
movsb
xor
scas
xlat
loopne
dec
inc
and
call
sub
movsbl
fwait
mov
out
pusha
inc
mov
fimull
pop
pop
and
sbb
js
or
shrb
inc
rcrb
inc
xor
jge
hlt
pop
mov
jnp
jns
cmp
mov
mov
sbb
mov
shll
hlt
test
jge
mov
fstl
mov
stc
mov
jnp
lret
imul
mov
mov
pop
movsl
inc
icebp
push
aaa
or
and
and
enter
aaa
fnsave
in
pop
decl
ret
add
jnp
or
jl
sub
sbb
dec
dec
xchg
mov
push
xor
loope
mov
xor
sbbl
sub
jbe
pop
add
dec
repz
std
lret
stc
adc
xor
xorb
cwtl
inc
cs
push
std
mov
hlt
iret
stc
mov
insb
mov
ret
insl
imul
lret
sub
pop
lea
cmp
test
js
xor
sarb
outsb
fdivl
leave
push
lds
mov
negb
pop
in
cmp
addb
orl
test
adc
lods
arpl
int3
or
fwait
inc
jg
je
sahf
fwait
cmp
or
in
mov
mov
testb
sub
jbe
decb
fisubrs
arpl
lret
sbb
fistl
mov
sbb
add
dec
repz
xor
xchg
gs
xor
jo
jmp
aad
cmp
add
bound
xchg
xchg
add
or
aaa
repnz
dec
jecxz
ret
xor
sub
and
or
add
add
call
mov
mov
add
andl
sbb
aad
es
cmp
das
mov
cltd
sbbb
sbb
dec
cmp
adc
xchg
xor
mov
out
dec
jb
pop
cmp
fists
imul
test
out
je
lea
dec
cmp
mov
or
adc
cmc
inc
xor
rorb
push
xor
into
xor
data16
arpl
jle
nop
repnz
mov
pop
decb
test
loope
or
ret
inc
sub
add
daa
andb
or
sar
fiadds
shr
dec
push
sub
xor
imul
lahf
push
test
adc
andb
das
pop
mov
in
pop
in
fs
pusha
push
repz
pop
and
inc
jmp
jl
repnz
scas
or
scas
xor
in
sub
pop
sub
popf
push
dec
sbb
push
push
push
fdivl
popl
mov
lds
mov
cld
sub
jmp
xor
or
dec
cli
xor
fdivl
and
into
mov
mov
adc
daa
and
lock
fwait
popa
add
cs
dec
mov
stos
movsb
scas
mov
ret
in
cmp
jge
pop
bound
pop
lods
xchg
mov
mov
scas
inc
push
scas
mov
cwtl
lcall
xchg
adc
dec
cld
mov
jne
cmc
les
add
jp
cmp
std
int
dec
pop
mov
jge
push
xchg
test
aaa
add
add
fsts
fcompl
and
pop
or
rcll
mov
adc
sub
jae
or
xor
testb
jnp
dec
fs
lahf
jne
pop
sub
mov
fldt
ret
adc
ljmp
cwtl
xchg
and
in
call
dec
xchg
nop
subl
push
loop
cmp
sub
rolb
ret
jns
mov
cmp
pop
pop
and
addl
sbb
jo
and
ds
push
xchg
mov
adc
in
xor
outsb
sbb
mov
hlt
loope
push
subb
xor
mov
inc
stos
mov
movsb
xor
push
push
rorb
imul
push
fnstsw
xor
xchg
popa
int
imul
mov
outsl
jb
push
dec
dec
pushf
arpl
loopne
and
cmc
hlt
sahf
nop
push
cmp
mov
hlt
int
scas
fwait
jmp
cmc
out
cmp
jns
jb
imull
and
pop
loop
stos
cmp
dec
into
push
aas
movsb
testb
push
lret
push
push
pop
xlat
pop
cmp
icebp
inc
daa
dec
lods
test
leave
xchg
pop
frstor
into
cld
dec
jne
and
jne
fidivs
xor
mov
loop
cmp
jb
jle
fimuls
imul
cmp
mov
and
repz
scas
mov
ljmp
lcall
xchg
fnstsw
in
jo
out
mov
data16
cmp
sarl
dec
xchg
fxch
mov
inc
out
mov
push
add
jo
into
cwtl
adcl
xor
mov
mov
jo
ds
fstp
call
mov
push
insb
repnz
imul
cmp
jg
aam
inc
mov
or
mov
sub
xor
cwtl
aas
cwtl
stos
scas
aad
rcrl
leave
incl
mov
sbb
in
nop
and
cmp
sub
stc
jl
mov
xlat
jne
data16
dec
dec
pop
mov
inc
es
scas
mov
lahf
rorl
cs
xor
cmpl
ljmp
ret
push
call
or
scas
rol
ret
pop
push
into
lret
hlt
out
jg
sub
je
pop
dec
pushf
cmp
lcall
mov
adc
xor
popf
movsb
in
add
pop
sub
pushf
mov
mov
leave
int3
mov
movsl
fsubrl
je
in
cmpsb
ja
bound
xchg
movsb
pop
jle
pop
mov
addr16
mov
inc
jbe
mov
mov
jne
mov
scas
or
orl
mov
cmp
mov
dec
push
fldl
cwtl
jp
sub
fistps
movsl
fdivl
mov
dec
sub
jnp
sbb
stos
sti
push
or
cmc
int
or
mov
movsl
cmp
rol
xor
sub
subb
inc
clc
mov
fs
pop
xor
loop
mov
int3
mov
and
int
and
pop
jae
pusha
fstpl
test
jns
lret
icebp
pushf
sub
cmc
or
testl
and
std
cs
shrl
daa
or
xor
imul
push
lea
out
xchg
dec
xor
xchg
loope
cmp
icebp
dec
arpl
fistl
inc
clc
out
xchg
loope
mov
outsl
add
push
xchg
push
mov
sub
ss
cmp
cld
sub
aam
dec
test
sub
enter
int3
mov
pop
cmp
inc
add
aas
dec
mov
push
aam
lock
jbe
cmpsl
test
fidivrl
pop
leave
and
xor
mov
popf
out
jl
ret
inc
pop
dec
dec
cli
mov
movsb
lds
jo
dec
adc
adc
shrb
xchg
dec
enter
cmc
inc
push
push
inc
lods
nop
push
filds
sbb
cmpsl
shrb
aaa
dec
xchg
dec
in
rorl
lods
data16
data16
jmp
mov
xchg
xchg
mov
adc
in
cmc
fmuls
jbe
loop
pusha
push
xchg
jle
jg
sbb
xchg
push
cltd
dec
sbb
scas
dec
or
cmp
in
mov
push
inc
cmp
test
lret
cmpsb
add
lock
nop
jmp
stos
daa
cld
cmp
cmc
lods
divb
bound
add
arpl
mov
xor
jecxz
ss
out
pop
sbb
add
mov
pop
cs
sub
scas
jle
stc
stc
inc
pop
jg
mov
pop
add
push
sbb
subb
push
clc
xor
mov
inc
pop
mov
inc
jg
dec
hlt
cwtl
aaa
fbstp
loopne
into
push
enter
jno
sbb
mov
cmp
in
push
daa
daa
mov
xor
lock
lock
mov
jne
mov
cmp
adc
cltd
xchg
testb
cmp
lock
ret
in
es
cwtl
mov
mov
mov
mov
in
out
pop
mov
loopne
and
dec
aas
cltd
pop
mov
call
inc
ds
les
ss
int
xchg
xor
int3
lock
mov
adcb
lcall
xor
imul
mov
outsb
mov
gs
test
ror
lcall
xor
movsb
push
mov
sbb
int3
push
divl
sarl
add
je
add
push
enter
pop
fimull
and
adc
mov
inc
xchg
stos
add
lret
mov
xor
xchg
cmp
jle
mov
mov
aaa
iret
cmpsb
mov
mov
mull
xchg
pop
lret
pushf
fidivrl
loope
in
pop
stos
and
inc
xor
jmp
mov
ret
mov
and
std
mov
testb
ds
sub
sub
jl
cmpsl
ljmp
inc
sbb
std
test
es
fcompl
and
int3
sbbl
rcl
nop
in
cmp
sub
ja
subl
cmp
scas
push
xchg
mov
inc
mov
pop
fdivrl
xor
and
mov
nop
out
sub
or
mov
mov
jno
mov
shll
pop
in
add
mov
adc
xchg
fs
mov
cmpsb
mov
inc
and
cmpsb
cmp
jo
out
stc
sahf
ret
shlb
js
fdivs
pop
pop
and
pushf
out
in
pop
inc
mov
cmpsb
ljmp
addr16
push
push
dec
sub
test
sti
mov
xchg
cmpsl
lret
mov
adc
mov
add
adc
lock
in
xor
popf
dec
loopne
mov
roll
sahf
adc
jns
ret
adc
test
andl
cmpsl
movsb
xor
call
push
daa
mov
sub
mov
dec
and
add
ret
pop
pop
sahf
jl
sub
mov
pop
xorb
mov
inc
and
cmp
cmc
or
ret
dec
adc
rorl
inc
adc
jle
xlat
cmp
xchg
xlat
dec
mov
daa
inc
xor
or
xor
fs
jae
cmp
or
cmp
aas
jl,pt
stos
adc
sbb
es
add
sub
inc
jo
and
inc
fadd
xchg
and
xlat
mov
roll
add
jae
dec
es
insb
sub
in
dec
cmpsl
jb
cmpb
vunpckhps
mov
repz
fiaddl
mov
loope
push
je
mov
mov
jecxz
push
or
enter
lcall
push
test
jg
sbb
inc
or
std
cmp
adc
xchg
cmp
faddl
in
jle
test
fildll
push
icebp
or
jo
daa
dec
push
shl
fistps
mov
sbb
enter
push
call
jmp
sarb
xor
and
or
ficompl
jp
jns
xchg
add
in
outsl
daa
jb
inc
xlat
out
pop
aas
push
fs
mov
hlt
sub
pop
mov
fucomi
in
xchg
call
test
xor
mov
das
lahf
and
jecxz
push
sub
movsl
bound
je
jmp
shll
in
int
dec
fs
adc
loop
adc
lret
inc
cmp
mov
jmp
out
in
rolb
iret
and
pop
addr16
sbb
jg
insb
dec
add
cs
stc
or
xor
inc
rorb
cli
fnstenv
pop
into
xchg
adc
sbb
adc
stos
iret
in
jne
aaa
nop
fcmovbe
rorb
cmpsb
jg
mov
dec
cmp
jp
fisubrs
and
inc
hlt
adc
aas
sub
adc
xchg
and
xchg
call
clc
test
xor
mov
pop
dec
leave
repnz
testb
leave
jmp
pop
mov
lcall
lret
jbe
add
pop
call
mov
xchg
cmp
jno
xchg
push
repz
dec
lret
lret
jae
nop
xchg
es
or
pop
loop
inc
stos
cmp
add
out
lods
inc
js
mov
sbb
adc
cmp
lcall
mov
das
ss
js
outsl
xchg
cmp
push
in
and
insb
jp
cmp
out
movl
jecxz
rorb
sub
inc
clc
mov
out
adc
mov
jae
push
inc
mov
enter
cmp
std
cmp
pushf
test
pop
fimull
in
push
jo
inc
jns
loopne
imul
pop
les
loopne
pop
clc
xor
sub
inc
sub
xchg
enter
ficompl
aad
sti
or
fistpll
lock
lcall
movsb
push
je
pop
out
adc
and
imul
lds
jae
adc
mov
sbb
lds
sbb
lods
jp
mov
faddp
and
inc
jo
jmp
stos
outsl
les
out
sbb
xchg
mov
rclb
mov
pop
lods
cmp
in
mov
xchg
stc
hlt
pusha
shlb
jmp
int3
loop
shrb
and
popf
nop
andb
or
mov
call
addl
fld
mov
in
pop
popa
xchg
mov
sbb
cmpl
sub
mov
mov
jg
inc
add
loop
and
pop
loopne
inc
lea
adc
pop
and
out
arpl
push
pusha
dec
push
and
mov
mov
lret
push
xor
lret
adc
dec
shlb
cwtl
fistpl
mov
lds
push
cmp
cmpsl
je
adc
dec
sub
lret
lahf
testl
inc
inc
xor
loope
dec
loop
in
jb
and
cltd
daa
addb
pushf
pop
and
pop
dec
iret
into
ret
jecxz,pt
mov
dec
in
mov
mov
fwait
adc
dec
push
jbe
lds
leave
adc
pushf
dec
int3
dec
or
outsb
mov
fucomip
inc
inc
addr16
fbld
cmc
lea
xor
loop
es
push
cs
dec
mov
cmp
sub
scas
inc
inc
mov
enter
std
mov
xchg
movsb
inc
pusha
outsb
push
stc
insl
mov
add
push
or
dec
xor
jno
xchg
inc
popa
mov
adc
dec
mov
loope
mov
sarl
das
inc
adc
fmuls
sbb
cli
sbb
int
nop
jle
je
fistpll
daa
push
aad
add
mov
xorl
out
cmp
push
nop
bound
xchg
cli
jo
mov
mov
push
aas
nop
mov
or
jl
and
mov
push
or
ret
ja
and
mov
mov
jns
jmp
test
pop
out
cld
stc
push
pop
push
outsl
xor
mov
sub
in
cli
adc
out
dec
push
arpl
mov
jne
add
add
mov
test
aad
pop
push
cmp
mov
mov
add
adc
adc
inc
fistl
inc
pop
nop
push
in
dec
subl
into
jmp
dec
les
fwait
cwtl
sub
inc
ret
or
addb
cmp
mov
cwtl
daa
jns
cli
insb
cltd
rcrb
push
ret
cmp
dec
enter
je
outsl
addr16
jmp
imul
adc
add
popf
decl
add
jae
mov
stos
outsb
or
sti
sahf
lds
je
dec
data16
fidivrs
clc
or
scas
push
loopne
test
adc
mov
js
inc
and
repz
mov
or
dec
sbb
mov
mov
fwait
jbe
test
adc
xchg
cwtl
fsubrs
adc
rcr
inc
jmp
stc
inc
sti
xchg
jbe
push
lahf
mov
mov
sub
fisttps
jb
test
xchg
lds
scas
push
loop
xor
inc
push
inc
fistpll
les
cmc
pusha
mov
stos
imull
xlat
xchg
cmp
lret
decl
cmc
sub
out
popa
bound
sbb
pop
inc
mov
and
push
aaa
mov
sub
mov
dec
insb
mov
hlt
dec
lret
lret
lret
pop
pop
jg
fldcw
or
push
mov
sarb
xlat
add
lea
cmc
rorl
movsb
push
scas
and
jge
call
mov
idiv
jl
test
inc
sahf
mov
ljmp
outsl
add
hlt
les
mov
es
fcmovnu
xchg
fs
outsl
mov
popf
adc
push
fistl
rcrl
mov
and
sahf
mov
je
pushf
jle
push
cltd
imul
push
add
insb
mov
cmp
std
popf
mov
xchg
fmull
lret
add
es
fistpl
sbb
int
sbb
inc
repnz
xchg
dec
sub
or
mov
arpl
sbb
sti
rcrl
cmpsb
test
push
dec
lods
imul
mov
ficompl
sahf
mov
dec
gs
cmp
mulb
lock
inc
divl
out
cli
cmp
jmp
pop
jo
pusha
inc
aaa
or
sub
inc
xor
clc
negl
jb
cmpsl
imul
mov
sub
les
pop
xchg
mov
dec
pushf
and
xlat
sub
movsl
mov
inc
xor
xor
js
enter
in
ror
inc
mov
cmpsl
sub
into
or
dec
aad
mov
sub
inc
xor
je
or
fistpll
scas
push
lahf
loopne
fs
cli
mov
inc
push
jo
mov
xchg
js
loopne
and
in
mov
js
cmpsb
fwait
ljmp
pop
leave
loop
xchg
aam
sub
andb
jb
mov
dec
aaa
shrb
stos
sarl
fmulp
cmp
hlt
rolb
cltd
cmp
cmp
inc
jmp
jno
sbb
pop
in
inc
out
sub
xor
jg
jno
movsb
lds
xchg
cwtl
js
pop
mov
mov
pushf
das
rclb
mov
movhps
outsb
adc
mov
sub
jbe
test
ret
push
sbb
push
outsl
ljmp
push
add
dec
ljmp
push
int3
data16
and
adc
dec
jnp
mov
dec
sbb
imul
pop
cmp
or
sub
adc
cmpl
insl
frndint
and
lret
icebp
push
je
shlb
stc
fwait
inc
hlt
es
std
mov
fisttpl
mov
inc
orb
fcoms
push
pop
cld
inc
loope
jmp
lods
pop
xor
pop
cltd
pop
xchg
stos
addr16
icebp
inc
js
nop
mov
dec
andl
es
shll
ret
inc
bound
jns
divl
push
fisttpl
aaa
mov
adc
ret
iret
fidivs
mov
pushl
repz
cwtl
rcrl
ds
xlat
or
jmp
push
sub
aaa
inc
pop
popa
fists
pop
xchg
mov
adc
add
js
and
or
push
imul
inc
mov
sub
xchg
and
adc
push
pop
mov
xchg
cmp
cmp
pop
lods
xor
dec
mov
xor
lock
mov
fnsave
push
jmp
into
sbb
xchg
push
icebp
add
xor
pcmpgtd
and
jp
pop
dec
int3
loope
stos
inc
fcompl
imul
dec
inc
and
mov
xlat
push
mov
fld
xor
pop
test
adc
push
sar
clc
aaa
sub
popf
jno
mov
cmp
or
nop
mov
dec
dec
in
outsl
ljmp
mov
push
fwait
jmp
push
jecxz
jge
leave
add
pop
xor
cwtl
adc
jmp
inc
fsubrs
mov
hlt
sub
jmp
and
idivb
dec
pop
add
push
pop
jno
jo
mov
fwait
fs
inc
outsl
dec
inc
fsub
js
pop
push
int3
aam
subl
aam
push
lret
cld
push
mov
jp
pushf
mov
sbb
mov
testb
shll
pop
rclb
adc
andb
loope
adc
or
xor
pop
insl
sbb
lods
mov
or
fmull
xchg
cmpsl
in
iret
insb
sbb
aas
mov
test
jg
mov
loopne
mov
mov
xor
repz
adc
aaa
dec
dec
rcr
xor
rcr
cmp
lret
testl
andb
jge
pop
or
les
out
push
sub
out
pop
aam
daa
cmp
jecxz
je
pop
xchg
leave
loopne
cs
mul
outsb
jns
sbb
imul
mov
js
mov
dec
hlt
jl
fiadds
in
jl
in
cmpl
imulb
sbb
mov
mov
sbb
les
in
inc
fsubr
je
movsb
mov
pop
ret
into
aas
ja
fwait
xchg
lcall
dec
cmp
mov
sub
xor
jl
ss
mov
mov
daa
popf
es
imul
incl
std
les
ja
rclb
int
push
pop
in
test
leave
lea
aam
xchg
cli
or
pop
out
push
mov
movsl
and
or
sub
xchg
popf
inc
jno
in
lret
jno
loopne
push
inc
sbb
pop
pop
push
xor
fimuls
call
out
es
loopne
call
xor
pop
test
inc
pop
or
xchg
inc
lock
testb
mov
in
push
pop
xor
stos
cmc
daa
sub
fsubrs
ljmp
cmp
cld
repz
inc
fdiv
cmp
or
mov
jnp
mov
add
push
lret
lds
adc
mov
xchg
sbb
cmp
inc
icebp
pop
cmp
adc
cs
fnstcw
push
icebp
es
mov
and
adc
imul
xor
or
loope
cmp
cmp
pusha
mov
cmpsl
insb
push
insl
adc
jmp
dec
ja
mov
sbbb
lret
js
pushf
inc
mov
nop
lock
cltd
cli
sbb
aam
insb
push
xor
dec
xchg
mov
jbe
lods
dec
and
push
sahf
xor
mull
repnz
xor
out
cmp
cmpb
inc
movsb
sub
xor
nop
lahf
or
jg
aam
fucom
xor
mov
mov
add
inc
stos
loop
incb
insl
je
mov
xor
out
notl
clc
mov
dec
fistl
cltd
xchg
mov
push
mov
arpl
mov
xchg
out
mov
les
lret
out
ss
pushf
cmp
mov
leave
dec
scas
imul
out
push
add
jbe
pop
fdivs
pop
and
rorb
jg
mov
jb
inc
gs
in
fisubs
xlat
dec
int
cmpsl
shlb
mov
imul
add
xchg
fdivl
or
inc
negb
lahf
repz
test
jecxz
in
push
mov
push
in
adc
lahf
btr
lods
dec
inc
mov
pop
push
pusha
repnz
fwait
inc
arpl
movsl
imul
cmp
push
std
push
fld1
sahf
mov
iret
js
jns
dec
lock
xlat
or
mov
mov
ja
int3
cmp
mov
inc
add
and
push
stc
xchg
add
leave
xchg
sarb
cmc
or
neg
or
push
inc
adc
pushw
and
lods
push
xor
or
inc
pop
icebp
stos
in
pushf
fadds
push
jne
ret
fnstcw
sbb
push
jecxz
inc
test
jbe
pusha
mov
mov
xor
mov
sub
pop
out
fbld
clc
cltd
and
xchg
jp
cs
shr
inc
aad
or
fisttpll
sub
adc
sub
cs
dec
dec
test
scas
or
faddl
bound
fimull
dec
push
mov
push
xor
lret
stc
mov
add
jne
xor
fs
imul
pop
cmp
movsl
xorl
setnp
inc
sbb
fwait
outsl
push
cmp
divl
cmp
inc
mov
leave
xor
aam
sub
repz
lcall
popf
in
in
jbe
pushf
dec
inc
repz
jno
in
sub
test
lock
jl
rcl
and
out
xlat
rol
add
mov
fstl
stos
xor
aas
jmp
rorb
cmp
mov
sub
enter
dec
es
sub
stc
mov
rclb
jb
cmp
in
movsb
add
jns
and
dec
jmp
stos
xlat
dec
push
cmp
sub
fdivrs
jne
fsubl
cmp
mov
jae,pn
jmp
sub
inc
outsb
add
subl
pushf
pop
inc
jb
lret
jg
mov
mov
or
fcmovb
int
jno
mov
push
cmp
pop
push
movsl
cli
pmulhw
mov
dec
lock
into
mov
inc
dec
aas
negb
or
adc
add
out
cmp
ja
push
and
push
inc
adc
outsb
gs
jmp
fwait
mov
cli
inc
or
mov
shrl
pushf
pop
fiadds
mov
outsb
nop
mov
cmp
aaa
add
xchg
lods
cmpsb
ja
stos
cmp
add
cmp
loopne
rclb
add
cwtl
mov
enter
sub
repnz
pop
test
or
mov
leave
dec
mov
cmpsb
fs
mov
fwait
cmp
fcoms
insb
mov
and
pop
loop
jbe
sbb
rclb
mov
jg
and
dec
dec
das
lods
dec
scas
push
fiaddl
popl
test
mov
mov
aad
orl
inc
adc
frstor
int3
sbb
sbb
jl,pn
cmpsl
xchg
je
testb
push
popf
movsl
push
loopne
gs
jo
jmp
out
add
or
add
fs
mov
jo
or
dec
or
psadbw
daa
push
xor
inc
add
fists
and
std
aad
jg
test
pop
fldenv
cmp
pop
and
fst
or
lods
or
sarb
test
jae
loopne
add
in
jae
dec
gs
mov
jp
sub
xor
test
fstpt
sti
je
aas
mov
cld
fstpl
inc
test
in
add
insb
test
pop
in
lea
xchg
nop
mov
xchg
leave
rcl
mov
push
imul
dec
mov
ficoml
pop
mov
jle
filds
notl
sbb
les
xchg
aad
cmc
negl
hlt
mov
xlat
das
inc
mov
sbb
jge
rorl
dec
out
add
push
ficoms
pop
out
cmp
imul
lret
in
nop
aas
mov
imul
mov
mov
mov
add
leave
aam
dec
data16
or
lahf
add
pop
sbb
jmp
xor
test
aaa
add
or
fidivs
imull
cmp
cmp
inc
push
lret
or
fnstenv
push
pushf
icebp
ljmp
dec
pop
movb
and
subl
or
xchg
out
sub
outsl
inc
jns
lret
mov
xchg
divb
jle
ret
mov
sbb
jmp
add
xorl
xor
push
inc
popa
mov
daa
pop
in
bound
push
push
and
cmp
loop
dec
mov
stos
imul
xchg
cs
imul
adc
push
pop
dec
add
je
mov
pop
add
shlb
xchg
rcl
pusha
test
pop
sub
in
insl
pop
out
inc
xor
adc
or
inc
sub
testb
inc
mov
cmp
mov
sbb
pop
jne
lret
jmp
mov
xchg
jge
lea
push
popf
dec
mov
cmp
pop
clc
pop
test
sub
mov
or
xchg
pop
sbb
jge
repz
jne
push
aaa
inc
movsl
shrl
jp
jns
ficoms
xor
dec
push
addr16
rclb
xlat
aaa
data16
loope
add
pop
xchg
xlat
inc
cwtl
cmp
sahf
stc
jp
sbb
mov
rcrb
js
and
dec
ja
das
testl
add
push
xchg
adc
inc
es
scas
sub
push
push
dec
add
in
sub
mov
mov
and
mov
jns
xchg
stos
adc
scas
dec
push
aaa
call
or
lret
icebp
mov
sbb
cli
loope
cmpsl
mov
fsubl
jns
int3
movsl
out
jne
mov
add
add
mov
mov
pop
ljmp
adc
pushf
ss
mov
sub
pop
adc
dec
inc
adc
addr16
xlat
and
in
insl
lea
imul
push
push
push
push
js
jle
fisubl
cwtl
pop
js
or
test
ljmp
sti
add
xchg
sbb
aas
sarl
sub
es
jno
mov
je
std
aas
jmp
push
inc
push
gs
mov
xor
jae
fimull
pop
mov
out
stos
mov
dec
test
cmc
je
popl
mov
or
jp
cli
lcall
inc
inc
jb
daa
and
ja
xchg
xchg
inc
dec
xchg
jl
jle
push
mov
fnstsw
test
call
lods
movsb
hlt
aas
gs
push
jecxz
push
push
divl
jecxz
sbb
in
cmc
enter
mov
push
in
sbb
push
shl
inc
pop
sbb
rdtsc
loope
mov
lods
cmp
int
xor
mov
inc
jo
fwait
inc
fcomp
shrl
push
clc
mov
jns
cwtl
xor
pop
cmp
xchg
xor
sub
int
rcrl
cwtl
xchg
out
call
popf
xchg
or
lret
stos
stos
fldln2
mov
inc
adc
and
adcb
mov
cwtl
adc
dec
add
sub
cmpsl
mov
incb
dec
pushf
jne
pop
repnz
cld
inc
push
mov
stos
push
mov
fildll
cld
sbb
xor
gs
inc
jle
mov
fcmove
and
xchg
mov
push
ljmp
movsb
psubsb
subb
and
pop
arpl
push
faddp
arpl
loopne
mov
push
cmp
jge
sub
mov
hlt
clc
mov
ficoml
or
sahf
xchg
ds
jns
or
in
jecxz
adc
and
adc
aas
out
fidivs
push
shlb
scas
push
sbb
xchg
rolb
push
test
sbb
inc
scas
loop
xor
stos
jb
insb
imul
subl
in
lea
push
lret
push
cmp
dec
and
add
scas
lcall
xchg
in
dec
mov
jp
std
jmp
sarb
mov
and
cmp
sub
push
adc
inc
stc
andl
test
mov
shll
xor
test
fs
mov
pop
popf
mov
inc
xlat
jle
push
mov
lea
dec
stos
loope
bound
or
xchg
int3
xor
mov
dec
cmp
sahf
iret
incb
pop
inc
fimuls
mov
mov
pop
push
mov
vpsllw
clc
jge
push
bound
ja
in
adc
dec
in
jecxz
scas
jno
jnp
push
sbb
cmp
mov
pushl
mov
dec
loope
mov
movsl
pop
shrl
jge
cmp
ffree
xlat
inc
push
adc
jmp
add
int
sbb
dec
das
jl
lcall
test
test
xchg
mov
std
push
and
mov
icebp
js
mov
inc
xchg
push
mov
fs
adc
jbe
lcall
maskmovq
testl
bound
jmp
jne
push
push
jp
inc
mov
jge
xchg
fistps
jo
jns
frstor
and
mov
mov
pop
movsl
push
cmp
jg
push
cltd
out
jne
loopne
int
cmpsl
test
aad
aam
mov
lret
loope
aas
xor
push
stc
push
push
sbb
in
xor
out
sub
mov
mov
pop
sub
xor
add
cld
jno
data16
pop
and
dec
and
std
pop
jns
lahf
rorb
and
outsb
fucomi
pop
xor
sub
pop
mov
enter
rdmsr
push
xlat
sub
int3
mov
insb
pop
ret
jae
sbb
sub
jnp
fisttps
cmc
insl
dec
and
cmpsl
stc
and
xchg
pushf
mov
ljmp
pop
dec
sbb
and
xlat
push
xchg
aas
gs
call
sbb
sbb
lds
dec
bound
pop
imul
lret
pop
cmp
ljmp
gs
lahf
repz
aaa
test
fiadds
pop
xor
inc
jno
je
out
mov
rolb
decb
pusha
icebp
in
mov
lds
push
je
rorl
push
xchg
push
push
repz
inc
jge
xor
dec
imul
es
orb
cmp
aaa
inc
pop
cld
push
push
nop
testb
sbb
sbb
xchg
in
jmp
mov
shlb
outsl
pop
leave
loope
and
js
movmskps
xchg
stc
or
icebp
fs
mov
dec
cmpsb
in
jo
push
mov
lret
add
rol
movsb
outsb
js
pop
and
cld
test
and
sbb
and
and
push
mov
cwtl
cmp
pop
sub
adc
mov
cltd
dec
mov
cmp
jne
dec
inc
int
sahf
xor
sbb
push
pop
sarb
je
int
aaa
out
xor
lods
jne
dec
stos
xchg
insb
xchg
dec
adc
xchg
sub
lcall
adc
in
mov
lods
sbb
adc
adc
mov
lods
icebp
xor
ret
stc
mov
lock
inc
int
sub
push
outsb
andb
mov
rclb
or
das
pop
mov
push
jns
mov
ljmp
iret
inc
jl
jns
out
and
cmpsl
xchg
rolb
addr16
lods
bswap
mov
out
aas
xor
jb
mov
mov
nop
pop
enter
lea
push
jmp
loope
mov
sub
movsb
out
jmp
repz
lock
movsb
test
inc
xchg
inc
xchg
in
mov
mov
mov
and
int
inc
imul
dec
jb
ret
call
mov
dec
xor
pop
jns
pop
mov
mov
inc
dec
xchg
test
icebp
cli
aas
lahf
inc
fcmovbe
rcr
icebp
sub
cmpsl
cld
xchg
pop
inc
ss
mov
xchg
and
jge
push
adc
insb
jnp
mov
jnp
movsl
cs
lods
je
dec
call
xchg
xchg
mov
jp
rorb
adc
dec
aas
mov
daa
mov
out
mov
mov
mov
dec
stc
push
mov
int
pop
push
test
aad
lods
add
mov
insb
adc
outsl
fisttps
push
call
outsb
ret
fstps
jmp
xchg
push
pop
inc
bound
lods
sar
adc
ret
jg
inc
mov
and
popa
pop
cltd
rolb
inc
rclb
jbe
mov
xor
les
lahf
jnp
sbb
stc
xchg
mov
mov
lods
mov
adc
sub
sbb
mov
movsb
mov
pop
imul
outsl
in
daa
xchg
clc
xor
push
movsb
xchg
hlt
ret
add
mov
js
inc
enter
cmc
ds
lock
push
loopne
arpl
iret
sbb
hlt
popa
subb
sti
mov
fdivp
sbb
aas
dec
clc
pop
dec
out
pusha
in
in
sub
movsl
jns
nop
aam
sahf
push
inc
sbb
out
sub
cld
mov
push
int3
cmp
and
mov
mov
test
rcr
sbb
outsl
inc
aaa
mov
icebp
xor
cli
cmp
xor
add
mov
inc
mov
scas
pop
jae
mov
xchg
xchg
push
and
imul
inc
pop
adc
mov
leave
cmp
xor
push
scas
cmp
mov
ljmp
loop
adc
lcall
jne
imul
in
je
jno
subb
and
xor
xchg
sbb
cmpsl
xor
int3
jne
ss
movsb
das
scas
mov
inc
cwtl
call
mov
jmp
das
das
inc
pushf
push
dec
jae
std
divb
ljmp
inc
cmp
popf
daa
mov
push
outsb
popa
mov
iret
adc
xchg
mov
mov
cmp
cmp
dec
call
sbb
aad
dec
dec
pop
hlt
js
mov
lret
lret
fstpt
rcll
out
data16
pop
aaa
stc
sti
mov
add
mov
std
jmp
xchg
add
das
push
addb
pop
test
ss
and
and
cmpsb
imul
or
or
mov
pop
mov
leave
pop
jae
pop
loope
mov
daa
ret
mov
push
imull
les
inc
inc
sbb
xchg
and
enter
cwtl
add
mov
mov
gs
lahf
or
sbb
xor
sbb
sbb
cwtl
add
mov
pop
fisubrs
incb
movsb
ljmp
cmp
xor
mov
mov
xchg
cs
nop
fidivrl
mov
and
jnp
xchg
sarb
adc
or
pop
push
sub
pop
push
cmp
lahf
lret
pop
push
ret
push
push
daa
in
cwtl
inc
lods
pop
stc
bnd
inc
popa
dec
imul
dec
pop
lcall
fisubl
inc
dec
imul
inc
add
sti
in
jns
nop
sub
push
jge
push
jbe
xchg
cmp
icebp
lods
dec
jns
cli
mov
dec
push
pop
jl
mov
xor
cmpsl
icebp
inc
iret
or
into
and
test
mov
sbb
xchg
fisttpll
xor
jge
in
and
inc
lret
dec
pop
je
dec
mov
inc
jnp
rcll
inc
out
out
pop
nop
movsb
add
xor
adc
repnz
lret
jecxz
dec
cmc
xor
gs
test
mov
fsub
movsb
insb
mov
movl
cmpsb
dec
pop
add
xchg
push
imul
mov
mov
mov
sbb
cmp
ja
pop
push
repz
sbb
xchg
sbb
ret
fs
sbb
jne
inc
push
dec
in
out
push
sbb
pop
or
nop
insl
mov
xor
test
push
jnp
bound
cs
scas
and
xchg
stos
adc
and
out
in
mov
sbb
push
cmp
fdivrl
popl
jb
fstpt
es
popa
lahf
aaa
cltd
sbb
add
push
ljmp
je
jns
cltd
sub
mov
xor
mov
fbld
dec
enter
xchg
je
sub
movsl
cld
cmp
adc
sub
test
es
aam
push
xchg
jle
cli
push
jne
and
jb
cs
pop
pop
test
jle
mov
lea
mov
fsubrp
sbb
das
cmp
int3
jo
iret
xor
inc
jb
pop
imul
mov
adc
sub
push
add
sbb
push
int
fwait
ret
in
orb
xchg
imul
pop
out
mov
or
callw
dec
mov
and
push
mov
push
cli
out
ficompl
or
in
dec
mov
sub
jp
mov
enter
mov
xor
mov
stos
das
mov
xor
inc
dec
push
stos
xor
scas
pusha
mov
add
fstpl
adc
loopne
cltd
arpl
nop
inc
inc
cmpsb
imul
xchg
mov
pop
jg
xchg
jns
test
mov
ljmp
mov
adc
lods
mov
inc
xchg
inc
aaa
or
xor
fcmove
dec
pop
push
leave
or
and
sub
imul
cs
cmp
lret
clc
in
jne
jns
sahf
jno
lret
sub
loope
and
mov
mov
sahf
pop
dec
mov
cmp
int
movl
in
jno
outsb
in
loop
fs
cld
mov
int3
sbb
sbb
inc
repnz
mov
jne
push
adc
mov
popf
sbb
add
arpl
imul
cmc
jnp
ret
cmc
add
or
jp
cld
push
shlb
test
xchg
mov
xor
lcall
jmp
and
push
jecxz
mov
ror
sti
mov
mov
push
jo
enter
out
sti
sbb
iret
stos
mov
xor
mov
xor
xchg
mov
jmp
cmp
les
adc
stos
add
shrl
lea
mov
repnz
je
int
adc
les
pop
xor
into
leave
addr16
mov
negl
popa
ret
jge
idivl
xor
in
push
sbb
movsl
xor
into
es
insl
mov
in
jp
je
repnz
outsl
jg
and
ret
xor
mov
mov
lret
pop
pop
pop
movsl
mov
xor
push
loop
mov
rcll
movsl
gs
ja
push
int
popa
cmc
into
loop
push
cmp
mov
sub
push
pop
aas
add
aas
push
iret
mov
xchg
cmp
in
ffree
ret
outsb
add
in
adc
fsubr
leave
sti
mov
mov
incl
sub
std
in
and
pop
or
xor
aad
sahf
in
stc
lahf
inc
xchg
gs
dec
stos
mov
imul
call
mov
pop
lock
or
ret
xchg
jo
lcall
mov
aaa
test
nop
lahf
ljmp
xchg
popl
mov
clc
sub
shll
sub
cmpb
lret
fdivs
jge
xchg
mov
push
in
mov
dec
fcomip
and
cmpsl
jmp
lods
sub
mov
fs
movsb
push
outsl
jmp
adc
sub
out
adc
out
adc
mov
outsb
enter
cmp
dec
stc
dec
cmp
cmp
movsb
xchg
xor
inc
dec
jns
push
or
xchg
cmp
sbb
decb
jbe
dec
push
mov
in
add
iret
jo
pushf
inc
adc
mov
xor
repz
mov
aas
popf
or
or
jl
and
push
roll
lcall
ror
push
shll
jae
mov
and
inc
popf
dec
cmp
inc
pushf
cs
loopne
jle
pop
out
or
add
pushl
loope
pusha
sub
inc
into
aaa
lods
sub
sbb
xor
out
jg
mov
sbb
mov
mov
xlat
cwtl
int3
pop
stc
mov
lret
pop
sbb
imul
roll
sbb
rcl
sub
mov
cmp
jb
sub
fidivl
dec
jne
test
roll
in
call
xchg
sub
shll
adc
cmp
mov
int
mul
xchg
inc
jg
adc
cmp
jg
cmpsl
inc
mov
popa
test
mov
insl
loopne
sbb
dec
dec
sbb
cld
xor
movsb
push
pop
push
imul
mov
stos
push
std
outsl
ja
push
xchg
nop
sbb
sbb
je
mov
xchg
mov
rcrb
clc
pop
cmp
or
imul
add
mov
push
pop
loope
lea
subl
jno
testb
dec
push
mov
dec
mov
out
mov
jae
loope
mov
xchg
jno
push
mov
add
dec
xchg
call
add
loope
es
in
sti
pop
daa
pop
pop
push
jne
jnp
cwtl
stos
lods
mov
adc
mov
test
pop
or
mov
shll
and
add
cmp
dec
imul
pop
jae
add
popl
and
cs
add
jne
push
sbb
jno
scas
cwtl
lods
xchg
jle
ja
insl
inc
and
pusha
jl
pop
inc
lea
jne
shr
imul
pushl
int
jno
sub
push
adc
cmp
jns
push
sub
bound
in
dec
faddp
out
idivb
mov
mov
mov
cld
je
je
cmpsb
xchg
outsl
iret
shll
xchg
lahf
cmpsb
enter
fists
push
push
xor
pop
adc
jmp
cli
jb
aam
les
sub
push
lods
cli
add
cmpsb
mov
flds
mov
sub
repnz
roll
mov
jmp
lds
call
cmpl
xor
cmp
mov
popa
in
js
push
loope
xchg
mov
and
decl
xchg
push
cmp
stos
aas
sbb
or
scas
mov
cmp
and
sarl
add
adc
inc
into
push
mov
xchg
dec
mov
fadds
repnz
mov
cs
popf
or
ja
or
or
fs
mov
sahf
jne
xorb
xor
push
lea
mov
and
imul
inc
mov
js
pop
addr16
les
ret
aam
cmovne
mov
pop
imul
pushf
in
in
fdivrp
mov
add
xchg
or
sbb
jl
loope
pop
mov
xchg
rcrl
sbb
sbb
repz
sbb
sbb
sub
jge
aas
stos
fld
jno
add
push
push
mov
daa
push
mov
into
cwtl
mov
mov
lret
add
sub
aad
je
pop
add
loope
pop
inc
jecxz
add
pusha
in
popa
lahf
pop
std
pop
inc
push
lret
movsb
imul
xor
fcompl
or
xchg
sub
test
dec
imul
sub
ficoms
xor
stos
add
xchg
out
in
mov
rcll
mov
push
dec
into
es
xchg
jg
inc
fildl
in
scas
push
adc
jns
test
cltd
xchg
jns
loop
pop
push
inc
js
shrl
sbb
push
pop
addr16
int
test
inc
rolb
addl
xchg
cld
jmp
xor
xchg
jp
out
pop
sub
adc
xor
mov
add
popa
add
push
push
ret
in
negl
das
in
push
lcall
adc
daa
lret
sbb
push
out
and
adc
lea
mov
mov
push
stos
popf
or
cld
mov
testb
fistpl
xlat
mov
pop
xchg
rcr
adc
lcall
mov
cmc
push
inc
inc
mov
sbb
shlb
daa
xorl
sub
or
or
mov
cli
out
mov
push
dec
in
add
sarb
ror
pop
inc
sahf
add
fistpll
jnp
hlt
test
ljmp
add
stos
mov
scas
jl
sub
dec
mov
ds
jbe
xchg
and
pop
mov
in
test
ret
scas
das
call
in
mov
add
cmp
mov
cmp
aas
inc
std
imul
mov
mov
pop
adc
dec
dec
pop
mov
pand
pop
jmp
aad
ja
es
test
and
in
iret
mov
jp
mov
and
imul
in
xor
stc
or
scas
pop
adc
scas
pop
or
rcrb
outsl
push
aas
int3
test
push
mov
fbld
xchg
outsl
sub
sub
mov
int3
dec
sub
fildll
cmp
pop
cld
mov
stos
ret
dec
sbb
push
sbb
ret
xor
in
dec
loope
sub
add
mov
cmp
xor
mov
pop
inc
jge
and
add
decb
mov
nop
mov
cmc
scas
mov
push
fsubl
mov
dec
fistpll
cmc
incl
and
mov
or
popf
leave
jno
ret
ror
push
xchg
movsb
xchg
mov
test
push
sub
or
out
mov
repz
mov
push
jbe
les
xor
mov
ds
or
pop
dec
inc
into
inc
in
into
lcall
leave
mov
shll
aad
movsl
jbe
or
jg
lret
push
gs
es
ja
mov
fldl
pop
and
jmp
imul
aad
and
dec
xor
inc
xchg
cmp
das
inc
into
idivl
mov
fwait
xor
out
cmp
repnz
xchg
add
pop
sbb
xor
iret
xor
adc
mov
pop
xchg
cs
