push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
push
mov
mov
mov
mov
push
push
mov
add
push
lea
push
lea
push
mov
call
add
push
push
push
call
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
pushl
lea
push
push
mov
call
add
mov
xor
add
add
decl
jne
addl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
mov
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
mov
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
push
push
push
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
xor
mov
push
mov
call
mov
push
mov
call
push
call
mov
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
call
push
mov
call
push
mov
call
push
call
push
mov
call
push
call
pop
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
push
pop
push
pop
push
push
xor
push
mov
movb
movb
call
mov
mov
cmp
je
mov
jmp
push
mov
call
push
lea
push
push
mov
push
mov
call
push
lea
push
push
mov
mov
call
add
push
lea
push
push
call
add
xor
mov
push
lea
push
mov
push
mov
call
lea
push
lea
push
mov
call
pop
pop
cmp
je
cmpl
jne
mov
call
cmp
jne
call
lea
push
mov
mov
mov
push
sub
push
push
mov
call
push
push
push
push
mov
call
lea
mov
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
lea
push
lea
push
xor
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
add
lea
push
mov
call
push
lea
push
push
mov
call
add
mov
push
mov
call
push
push
lea
push
push
mov
mov
call
mov
cmp
jne
push
call
push
pushl
push
pushl
call
push
push
lea
push
push
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
lea
push
push
call
push
push
push
push
call
push
mov
call
pop
pop
xor
pop
mov
pop
ret
push
test
add
add
add
or
add
call
aaa
loop
xor
sub
cmc
cmpsb
scas
cli
movsb
dec
rolb
int
ret
mov
call
cmp
popa
cmpsl
mov
and
add
daa
mov
mov
and
call
pop
aaa
stos
fidivrs
call
in
jp
jl
je
push
push
pushf
je
sbb
adc
rcr
out
je
bound
cltd
pop
out
or
cmp
fwait
gs
pop
addr16
add
xchg
popf
mov
test
scas
jle
xchg
test
push
inc
inc
hlt
mov
adc
daa
sub
pop
in
xchg
jecxz
adc
push
fnstenv
jns
aas
xchg
jae
in
movq
mov
sbb
mov
pop
inc
pop
pop
jmp
xor
in
ret
sub
cmp
push
ret
mov
int
xchg
mov
insl
dec
pushf
out
pop
adc
sub
incl
mov
dec
pusha
repnz
and
ret
ds
xchg
cmp
outsl
and
pop
lahf
mov
mov
ret
mov
divl
mov
jb
testb
into
cli
xor
fwait
sub
xchg
dec
add
movsl
movsl
aad
sub
sbb
xor
mov
gs
xor
imul
int3
add
mov
stc
mov
sbb
or
and
sbb
jo
repnz
mov
mov
xchg
jg
je
shlb
aam
fsubr
pop
test
and
and
mov
cs
filds
push
mov
fsubs
out
mov
rorl
cltd
mov
scas
addr16
mov
push
push
inc
fdivrl
fistps
sub
call
subb
inc
fs
ret
fwait
outsb
xor
xlat
pop
js
adc
leave
mov
cmp
cltd
jno
mov
xchg
in
scas
pop
mov
mov
mov
xchg
test
xlat
sub
push
or
es
xchg
dec
pop
lds
adc
lahf
repnz
jns
in
push
roll
push
mov
cmp
dec
xchg
shll
jg
mov
add
sub
inc
cmpsb
and
adc
and
int
ja
std
add
mov
pop
loopne
xchg
xor
push
enter
ss
rcll
mov
aam
repnz
pop
test
out
cmp
mov
das
pushf
pop
or
and
fdiv
aas
sbb
pop
or
jg
outsb
mov
in
sub
lods
cwtl
inc
loopne
fbstp
push
lcall
dec
push
mov
scas
xor
sub
fdivrl
sti
js
mov
push
jl
pop
popf
imul
js
push
jge
jbe
loopne
stos
mov
push
adc
mov
xor
mov
push
shrb
rolb
push
sub
pop
hlt
cld
lcall
fucomp
imul
stos
cmp
cmpsb
push
inc
les
or
push
mov
xor
rclb
push
inc
gs
xchg
in
adc
xor
cld
inc
xchg
movsl
sub
aam
xchg
faddl
stos
mov
into
test
mov
pop
add
repz
cli
in
lock
mov
sbb
ljmp
test
aaa
imul
leave
aam
in
pop
pushf
jecxz
in
imul
in
ret
dec
pop
sarl
dec
ja
jge
in
inc
sub
pop
jl
or
cli
lahf
sub
dec
mov
call
rcrb
sarl
or
test
fildll
pop
rcl
push
mov
push
call
mov
xor
mov
xor
ds
fdivrl
dec
dec
sbb
hlt
mov
dec
in
push
scas
lcall
mov
ffreep
xor
shll
in
pop
pop
movsb
xor
test
or
popa
add
imul
pop
ljmp
les
mov
inc
in
enter
xchg
es
call
xchg
sbb
daa
mov
mov
aam
popf
xrelease
mov
adc
call
push
dec
or
arpl
and
mov
mov
mov
sbb
cwtl
add
sub
loope
enter
push
cmp
xor
pushf
mov
jo
in
cmpsb
add
jne
push
sbb
cld
scas
pop
pop
mov
outsb
dec
inc
hlt
icebp
xorl
fwait
orb
xor
stos
xchg
jg
xchg
js
popa
std
lcall
mov
leave
fildll
pop
aad
je
mov
scas
mov
xchg
pop
int3
ret
loop
xor
sahf
lahf
xor
inc
push
mov
rorl
cltd
mov
stos
aam
in
jp
or
testb
jo
pusha
sti
mov
dec
pop
rcr
and
or
jge
push
test
cmc
hlt
xchg
int
dec
jp
cmpsl
xchg
or
imul
push
pusha
lahf
add
and
xchg
and
addb
push
adc
cmpsb
ret
outsl
testl
and
or
lret
imul
bound
mov
bnd
xchg
es
xor
es
jp
mulb
les
mov
shll
pop
mov
mov
mov
aam
dec
mov
and
push
jae
ds
jae
xchg
adc
xor
dec
popa
js
roll
loop
nop
jno
push
cmpsl
inc
cmp
leave
movb
cs
push
data16
cvttps2pi
push
or
js
jno
mov
imul
sbb
in
adc
test
dec
filds
mov
cli
fsubl
in
daa
push
xchg
jg
mov
sar
cld
cmp
movsl
stc
add
xchg
mov
enter
inc
lds
inc
cli
inc
mov
push
aas
es
cmp
out
movsb
xchg
xchg
lcall
inc
loope
test
or
xor
fs
fucom
mov
insb
dec
outsl
dec
divb
xchg
dec
adcb
arpl
inc
jmp
push
stos
push
es
pop
mov
inc
lcall
test
mov
ret
mov
adc
dec
insl
xchg
lods
dec
sbb
cmp
add
aaa
sbb
imul
xor
fldenv
in
mov
scas
mov
pop
loopne
push
add
or
aad
xor
push
cmp
roll
sub
add
cwtl
mov
adc
jns
js
mov
cmc
mov
push
test
out
out
dec
in
stc
inc
movsl
sub
cmp
movsl
mov
pusha
lret
add
fldln2
into
in
cwtl
jge
out
xor
pop
clc
aaa
dec
mov
lret
dec
das
testb
dec
push
mov
lods
orb
and
mov
jno
test
add
mov
mov
xchg
inc
jle
push
neg
dec
addr16
fsts
fwait
les
inc
ljmp
stos
out
xchg
xor
inc
push
adc
cmp
cmc
stc
call
out
je
cmpsb
mov
lret
clc
repz
outsb
push
sub
stos
test
ret
sbb
adc
arpl
insb
jle
fnstcw
mov
or
xor
adc
pop
mov
loop
ss
fadd
cli
jmp
loopne
inc
shlb
pop
test
cmp
sbb
cmp
cmp
scas
xor
in
into
movsl
mov
dec
push
jle
jp
sbb
mov
inc
ljmp
dec
push
and
out
fnsave
lea
in
jle
int
nop
xor
add
jg
icebp
ljmp
sbb
xchg
dec
mov
data16
ljmp
insl
fxch
jmp
adc
bound
cwtl
add
sub
cwtl
jmp
dec
adc
lret
push
rcl
rcl
rclb
mov
push
xor
sub
and
stos
sahf
test
pop
add
cli
cmpsl
stos
lahf
xorl
shrl
push
mov
add
mov
movsb
xor
frstor
cmp
jp
pop
std
mov
int
mov
mov
xchg
dec
xchg
movsl
jecxz
in
adc
push
or
cmp
xchg
call
les
test
and
push
call
lea
inc
in
cmc
mov
jne
push
stos
test
cld
fimull
sub
jne
jp
add
xor
xchg
je
ljmp
xor
shlb
inc
test
gs
mov
test
fisttpl
inc
dec
sbb
xchg
ljmp
data16
sub
pop
shrl
push
mov
daa
loop
popa
pop
add
testb
sbb
xor
mov
jb
sarl
lds
jg
test
cld
sbbb
jg
pop
xchg
fldt
jmp
cmp
adc
xor
push
ret
mov
mov
stc
and
mov
push
cmpsb
xor
lea
mov
rcll
fmull
out
fsubr
cwtl
sub
sub
test
dec
ss
cs
mov
bound
pop
xchg
rorl
inc
pop
jne
xlat
xlat
jge
or
rcll
scas
push
sbb
pusha
xchg
gs
dec
mov
gs
mov
dec
repnz
sub
push
gs
ss
ret
mov
pushf
dec
push
pop
nop
mov
mov
xchg
popa
sub
dec
pop
lret
test
js
xchg
lods
cmp
inc
in
pusha
cwtl
andb
jmp
gs
in
stos
cld
mov
int3
hlt
and
dec
and
shr
mov
hlt
and
xor
sbb
aaa
dec
mov
imul
mov
add
jns
cwtl
inc
arpl
mov
mov
mov
pop
xchg
movsl
mov
sub
ljmp
push
stos
mov
sub
xor
or
jne
cmc
scas
mov
inc
pushl
mov
pop
pop
or
sub
enter
or
insl
mov
push
adc
sbb
imul
jb
test
jge
cmp
in
mov
test
movb
cltd
xchg
dec
pop
rorl
adc
aam
in
inc
sti
sub
les
test
cmpsl
jne
add
dec
xchg
mov
fprem1
and
out
mov
xlat
sbb
sub
pop
pop
jns
jo
lret
pop
push
adc
pop
xchg
andl
add
fistpll
and
sbb
sub
clc
test
and
fbstp
add
dec
inc
stc
xlat
iret
aaa
xor
xchg
cmp
cli
adc
jo
inc
fbld
pop
in
insb
in
iret
cmp
loopne
sarb
push
leave
in
stc
ret
inc
dec
subb
push
mov
arpl
bound
mov
jg
mov
adc
jne
jmp
mov
inc
pop
rolb
movsb
cmpsb
xor
adc
dec
loope
inc
repz
sahf
fs
out
inc
xor
adc
xor
jns
lock
jbe
ja
mov
add
ret
cld
jbe
sub
sbb
mov
out
out
jo
sub
xchg
mov
scas
andl
shrl
or
int
mov
push
stc
in
nop
fisttpl
js
cmp
xor
add
inc
or
mov
cmc
je
sbb
aam
cmp
in
lods
push
sbb
push
sbb
lcall
inc
jbe
lock
shll
mov
xchg
out
or
sbb
push
xchg
mov
cmpsb
sahf
fyl2xp1
mov
movsb
dec
xor
xchg
shlb
nop
add
sahf
sub
int
mov
pusha
lock
popa
jecxz
push
decl
cli
popl
push
mov
or
jp
lods
movsl
fdivs
jl
loopne
pop
mov
rorl
sbb
mov
add
stc
outsb
fisubrs
jae
adc
xchg
pop
scas
and
hlt
jp
and
pop
ljmp
rol
jo
mov
push
dec
xchg
je
and
mov
cltd
fildll
push
adc
pop
hlt
out
aaa
or
sti
orb
jle
enter
inc
mov
xorb
cmp
pop
cmpsl
into
ds
inc
in
mov
lock
inc
pop
mov
inc
xor
push
dec
addr16
ret
xchg
enter
cltd
aas
mov
in
and
dec
orb
and
adc
pop
pop
lret
test
loopne
xchg
mov
iret
push
sbb
aam
cmp
cli
add
mov
sahf
jnp
data16
movsl
and
push
test
add
inc
gs
mov
adc
xchg
or
les
in
cld
js
pop
or
add
pop
and
dec
icebp
sbb
lret
lock
aas
mov
mov
movsl
das
in
or
jno
dec
xchg
hlt
outsl
insb
xchg
stos
jp
insl
mov
jl
xor
fildll
movsl
scas
lea
mov
sub
jbe
mov
sbb
fldcw
pop
jb
inc
mov
out
repz
sbb
aaa
rcll
push
movsb
adcb
shll
pop
addl
jne
xor
jb
cmp
pop
test
mov
dec
pop
mov
lods
imul
mov
outsb
cmp
sub
call
fwait
inc
and
fldcw
inc
mov
test
mov
push
push
movsl
fs
xchg
add
loop
and
mov
xor
dec
pop
xchg
dec
test
int3
in
shl
jmp
cs
cmpsb
cmc
xchg
xchg
in
lcall
pop
fadds
aas
mov
sub
pop
cmpsb
out
push
jne
pushf
negb
into
fsubl
dec
mov
and
sub
xchg
lock
jno
notb
inc
aas
shrl
pushf
and
lds
cmpsb
lcall
mov
popa
sbb
sbb
fidivl
out
mov
cmpsl
cli
jp
jb
and
lea
mov
sbb
hlt
push
push
lret
mov
add
jp
cltd
xchg
in
push
cld
ja
pusha
sarl
loope
jp
hlt
ss
std
pop
in
or
push
adc
or
iret
daa
cwtl
dec
loopne
rorb
adc
aaa
push
sbb
sub
js
push
xor
or
repz
out
xchg
lods
pop
cmp
and
xchg
adc
imul
rol
push
add
jge
sti
pop
lret
aaa
and
les
movl
mov
xchg
push
out
scas
mov
and
aas
jecxz
out
pop
fstpl
std
nop
fildl
mov
out
aas
lret
cmp
or
xor
xchg
jp
outsb
repz
add
pushf
loope
mov
dec
jecxz
mov
scas
sbb
jl
call
cmpsl
push
adc
pop
mov
rcll
push
xorb
lods
cmp
mov
xchg
jle
cmp
sbb
mov
fwait
fwait
dec
hlt
jo
pop
das
lcall
divl
lds
mov
leave
mov
mov
ljmp
add
sub
popa
call
add
cmp
sbb
jecxz
mov
int
je
enter
stos
xchg
and
movsl
shrl
cmpsb
repz
inc
scas
adc
outsb
enter
js
push
into
icebp
inc
sub
daa
adc
ffreep
cmp
scas
push
addl
insl
mov
gs
out
test
aaa
test
test
sbb
sbb
in
pop
sti
shll
cmp
loopne
ror
stc
add
mov
lret
aas
jo
cld
inc
add
pop
xchg
cwtl
and
or
inc
push
add
mov
clc
in
pop
mov
pop
pop
push
sbb
push
mov
push
sahf
and
leave
dec
dec
jbe
orb
cmc
cld
add
imul
test
xchg
repnz
fwait
mov
or
rolb
pop
das
dec
xor
subb
stc
push
clc
adc
les
xchg
add
push
mov
mov
aam
sahf
xchg
sbb
xchg
pushf
mov
cld
cwtl
mov
xor
lcall
leave
rcrb
mov
sub
stos
sub
pop
mov
sub
fiadds
or
or
xchg
lret
and
mov
mov
inc
in
filds
or
add
nop
push
imul
mov
lcall
sub
sub
or
data16
xor
dec
rcll
test
pop
sarl
mov
aaa
xchg
aas
pop
mov
dec
push
pusha
iret
cmp
ret
mov
rcrl
push
xchg
xchg
xchg
jno
imulb
adc
mov
xorl
imul
jg
cmp
add
jge
sar
jns
pop
pop
mov
inc
jge
push
inc
push
std
adc
shr
mov
dec
jecxz
push
mov
pop
push
out
adc
movsl
jmp
stos
jne
mov
cmpsl
push
adc
je
pop
or
inc
aaa
mov
mov
adc
arpl
insb
fcomi
inc
mov
es
push
jl
int3
rdpmc
addr16
stc
or
cmp
imul
jae
sub
xchg
mov
cltd
shrb
ret
es
rol
mov
lahf
mov
aaa
lcall
fidivrs
xlat
ret
es
ss
cmp
aas
xchg
iret
dec
dec
aam
daa
andb
pop
pop
xlat
add
push
mov
repz
in
movsl
sarb
add
pop
sahf
mov
lods
cmp
je
xchg
jno
sahf
add
std
mov
or
mov
inc
and
stos
data16
addr16
das
outsl
rorb
xor
cmc
js
dec
or
jae
inc
add
add
repz
movsl
repz
roll
pop
sbb
imul
pop
cmp
scas
inc
jl
imul
hlt
pop
mov
movsb
pop
jo
divl
dec
popf
and
mov
sahf
pop
push
dec
cltd
das
pop
pop
out
addr16
jbe
pop
dec
clc
pop
cmpsl
aam
mov
sbb
xchg
pop
sbb
ljmp
jnp
adc
dec
fstp
js
and
sub
roll
mov
loop
lret
data16
test
orb
mov
sbb
push
mov
jmp
filds
test
push
mov
aaa
test
mov
mov
cmpsb
dec
jno
stos
call
std
fnstsw
clc
out
inc
xchg
or
sbb
cmpsb
aaa
fstl
stos
fstpt
fwait
jno
adc
pop
inc
loop
les
data16
js
ds
xlat
stos
sahf
mov
fwait
scas
ss
jae
xor
dec
or
push
push
push
cmp
negb
arpl
jns
fdivl
or
data16
lock
mov
adc
push
xchg
dec
sub
lret
adc
fwait
cmp
adc
out
cld
mov
fldcw
push
movsl
jp
popa
jp
add
fisubrl
jbe
int
sub
add
inc
push
dec
mov
mov
or
loopne
mov
pop
cmp
or
icebp
mov
daa
and
int3
or
pextrw
daa
and
mov
lods
movsb
mov
jnp
and
push
push
scas
push
xchg
jb,pt
or
pop
ret
jmp
and
jne
sti
sub
shrb
loope
cmc
mov
rcrb
push
imul
mov
stc
jl
aaa
mov
or
stos
pop
clc
hlt
push
daa
ss
rclb
jb
mov
into
enter
inc
clc
bound
push
wrmsr
pushf
es
pop
xchg
test
pop
test
pop
outsl
push
jbe
cs
xchg
push
jge
imul
add
xchg
gs
sbb
arpl
xor
add
sbb
movl
mov
pusha
shlb
scas
push
xchg
push
ret
sbbl
push
fistpl
mov
data16
leave
jns
cli
loopne
test
push
xorl
pop
or
ljmp
fisubrs
es
call
lcallw
clc
mov
mov
test
hlt
add
mov
roll
enter
inc
lcall
jnp
adc
dec
inc
les
popf
aad
cmp
shrl
and
jnp
dec
frstor
ja
add
cli
hlt
sub
pop
pop
sub
xlat
xor
xor
or
fst
dec
adc
mov
hlt
mov
mov
cs
push
push
popf
loopne
add
icebp
clc
iret
in
push
jno
fcoms
mov
xchg
leave
xchg
dec
ljmp
mov
jnp
xor
je
add
fisttps
int
sarl
push
mov
mov
dec
xor
repz
xlat
and
inc
in
es
jle
pop
sbb
shll
cmc
cltd
fstl
cmpsb
mov
mov
add
mov
adc
dec
cmp
dec
jmp
mov
jmp
les
ja
rorb
jle
xor
nop
outsb
roll
scas
daa
push
out
adc
mov
lods
push
or
imul
out
sar
insl
add
loopne
repnz
xchg
jno
lret
fisubrl
ja
pop
call
les
mov
sbb
test
in
lahf
ret
lock
test
sub
mov
push
adc
jge
sub
mov
adc
nop
xchg
mov
add
loopne
mov
shll
dec
push
lods
jmp
test
sub
shrl
mov
inc
mov
pop
mov
xchg
das
cmp
dec
sub
cmp
push
clc
and
push
xchg
lock
aas
cmc
stos
add
lods
mov
fmull
test
pop
inc
fcomi
jg
inc
cmp
lods
nop
fs
pop
out
bswap
sbb
mov
or
dec
lds
call
pop
ljmp
jb
ja
in
mov
cli
inc
clc
adc
addb
dec
inc
loop
mov
or
mov
cmp
decl
cmp
xor
rclb
inc
adc
cmc
xor
in
push
stos
stos
int3
sub
sbb
les
sarl
pop
test
daa
dec
lcall
lods
xor
nop
or
cld
sub
push
cmp
or
subl
rorl
dec
adc
daa
ds
aaa
mov
sub
xlat
data16
mov
push
cs
pop
mov
lcall
dec
inc
add
cmp
arpl
adc
lods
jmp
add
pop
and
faddl
ljmp
jle
push
mov
jae
cmp
push
lods
cmp
iret
repnz
inc
lods
pop
js
jle
cmp
shll
pop
loop
push
repnz
orl
xchg
loopne
mov
shl
cmc
push
jns
enter
movsb
cmpsl
xor
ja
mov
stc
jl
jecxz
aam
xor
sahf
int3
jl
mov
int
je
jmp
bound
mov
outsb
dec
daa
icebp
push
loopne
dec
mov
jno
mov
push
es
lahf
test
lds
lock
dec
hlt
push
adc
das
div
js
adc
fdivl
jae
adc
imul
adc
or
adc
bnd
push
rorb
add
imul
cld
xchg
sarl
jl
dec
pop
rolb
xchg
or
mov
gs
push
stos
sbb
push
push
lods
ss
call
and
pop
and
