and
add
aaa
and
add
add
arpl
add
jbe
add
test
add
nop
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
jbe
add
xchg
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
and
add
and
add
and
add
and
add
and
add
incl
add
add
and
add
and
add
add
incl
add
add
and
add
add
incl
add
add
and
add
add
add
add
add
add
add
add
add
add
and
add
and
add
ja
add
inc
add
adc
add
aaa
inc
add
add
xchg
addb
pop
add
add
add
add
add
pushf
js
mov
shll
imul
inc
leave
insl
mov
or
jns
mov
inc
pop
pop
pushf
pop
inc
mov
mov
pop
sub
outsb
push
in
add
lds
mov
into
jns
dec
lret
pop
inc
int3
sar
cltd
rclb
mov
cmpsb
fs
dec
mov
adc
in
lcall
lock
js
nop
pop
ljmp
sahf
xor
cmp
xchg
jle
movsl
push
push
icebp
mov
mov
cmc
lea
pop
push
fwait
xchg
jg
add
faddp
pop
xor
xchg
lahf
daa
mov
sbb
xor
js
pusha
rcl
inc
add
fdivrs
push
pop
xor
iret
add
test
mov
and
fstpt
inc
dec
mov
fs
pop
mov
and
cli
pushf
sbb
sbb
ljmp
cmpsb
adc
dec
pop
xor
popf
sub
cmp
aaa
stos
mov
jge
fcoml
mov
insb
stos
lds
jle
hlt
push
lret
or
sub
and
out
lods
xor
xchg
pop
xchg
sarb
shl
popf
outsb
jns
sarl
inc
dec
xchg
pop
jnp
sbb
adc
cmp
jle
imul
insb
lods
push
mov
idivl
inc
mov
cltd
jle
dec
stos
xor
pop
lds
cmp
idivl
pop
jg
stc
aam
pop
je
mov
mov
jae
call
lcall
mov
adc
or
les
pop
mov
leave
pop
pop
stos
xchg
paddsw
push
sub
ret
ja
mov
aad
dec
lock
roll
out
jbe
dec
and
mov
shr
jecxz
cwtl
add
cmp
outsl
push
lret
sbb
add
aas
push
ret
push
jmp
xor
pop
adc
iret
mov
or
in
pop
push
add
mov
repnz
mov
jmp
or
push
fisubrs
in
adc
cld
xchg
or
mov
ss
adc
js,pt
push
mov
int
cmp
in
dec
cli
jbe
lods
iret
jnp
adc
pop
sbb
cld
or
popf
shl
test
fldenv
jb
stos
pop
mov
sbb
xchg
test
cmpsl
mov
sub
das
jae
loopne
inc
push
or
pop
orl
movsl
sahf
mov
pop
ljmp
clc
mov
stos
mov
shrb
popf
mov
mov
push
popf
push
cmpsl
adc
hlt
dec
shr
lahf
pop
lods
add
pop
mov
call
mov
in
jle
rcrl
faddp
fs
test
adc
mov
popl
stc
xchg
adc
xchg
push
cltd
mov
stos
inc
nop
inc
scas
popf
cltd
bound
pop
push
test
test
std
lods
sub
push
out
orb
pop
xrelease
xchg
scas
in
xor
es
mov
push
cmp
mov
and
xor
fdivrs
and
mov
pop
outsb
arpl
and
ret
dec
fidivl
cltd
inc
mov
or
orb
aam
lcall
jo
fstpt
mov
test
fs
or
movsl
std
push
jne
cmp
jnp
icebp
insb
outsl
out
mov
insb
mov
mov
rol
lods
ret
inc
mov
and
out
sub
pushf
cmpsb
cmp
test
into
jne
push
sbb
outsb
jle
stos
icebp
popa
prefetch
or
jg
mov
inc
fstl
outsb
and
add
push
mov
jno
push
xchg
cmp
push
insl
das
dec
lahf
sub
out
sbb
xor
sbb
mov
lret
cmp
rcrb
dec
pop
jp
mov
mov
dec
call
pop
pop
std
aam
mov
test
mov
js
sahf
push
icebp
inc
sbb
cmp
jnp
loope
pop
sbb
stos
add
dec
or
jp
dec
lahf
sub
imul
pop
sahf
inc
mov
xchg
mov
decb
mulb
ret
dec
push
mov
iret
mov
inc
push
icebp
out
addr16
hlt
or
mov
data16
jle
repnz
les
or
insl
inc
mov
inc
xchg
mov
fwait
mov
jbe
clc
out
aad
pop
sub
and
idivb
pusha
pushf
stos
or
sub
out
jne
sub
adc
andb
push
adc
ret
rcrl
push
mov
mov
vpavgb
jo
xchg
push
rcr
insl
insl
mull
dec
rcll
in
in
stos
sub
movl
add
mov
lods
inc
mov
out
push
cmp
hlt
fs
les
scas
mov
mov
add
aad
repz
sub
adc
ret
mov
xchg
adc
gs
push
sub
sub
inc
jp
inc
clc
test
movsl
cld
cltd
cmp
adc
push
xlat
repz
repnz
xchg
mov
shl
mov
stos
nop
inc
in
adc
pop
cmpb
ret
ja
clc
mov
in
jns
ret
and
lcall
dec
dec
xchg
call
add
pop
fnstcw
xor
and
sahf
sbb
jo
lds
aam
ret
rcl
sub
jb
dec
enter
test
mov
adc
out
in
and
xor
sbb
push
scas
pop
mov
cmp
and
stos
push
loope
test
xchg
mov
faddl
test
enter
movb
rcrl
mov
jo
ljmp
and
and
adc
lea
mov
rcrl
cmp
dec
out
aam
fwait
repz
fcmovnbe
shr
jle
lods
and
imul
in
push
dec
ret
test
xor
lahf
xchg
pop
in
mov
gs
add
pop
ret
ss
scas
jle
push
jmp
daa
add
push
aad
push
push
xor
testb
adc
in
decb
cmpl
cmp
adc
aaa
push
test
loopne
and
and
fwait
jb
dec
out
notb
ljmp
mov
and
pop
movsl
lahf
and
clc
lret
dec
pop
jg
or
jns
fwait
and
movsl
test
mov
push
mov
ret
cmp
adc
movsb
sub
outsb
cltd
das
adc
inc
mov
mov
cltd
mov
ret
test
in
jmp
neg
divb
push
mov
fiadds
hlt
dec
inc
mov
sub
out
push
in
xor
mov
sbb
in
jmp
lods
pusha
ret
mov
inc
clc
leave
mov
rcll
int
out
inc
cmp
outsl
outsb
adc
lods
add
sub
mov
jl
cmp
adc
inc
inc
dec
xor
mulb
mov
cmp
aam
xor
push
jnp
mov
pop
mov
es
cli
inc
shrb
repnz
and
inc
dec
cmp
jns
fldenv
lods
mov
lods
lcall
cmp
xor
or
push
adc
adc
dec
xchg
xchg
lds
or
dec
rolb
out
xchg
in
divb
adcb
call
outsl
leave
sub
mov
sbb
shrb
jne
cli
dec
adc
xor
std
xchg
xchg
or
mov
xchg
dec
and
cmpsb
mov
data16
pop
rolb
sar
adc
jg
mov
lds
inc
add
pop
mov
mov
test
imul
fsubrs
and
push
dec
jge
mov
out
mov
pop
adc
push
cs
movsl
sti
aam
ds
sbb
ljmp
cvtpi2ps
cmp
xchg
mov
or
pop
bound
add
addr16
shrl
sub
test
sti
int
mov
test
fs
cmp
and
sti
add
push
in
or
fucomip
xchg
dec
mov
outsb
rcrl
push
mov
adc
jbe
jmp
cmc
and
scas
mov
test
dec
clc
les
lea
pop
mov
dec
jmp
jp
or
cmp
fwait
xchg
pop
in
loopne
xchg
iret
sahf
setae
inc
and
in
rol
mov
ss
mov
xchg
pop
int3
sub
popa
mov
or
or
les
mov
xor
aam
cmp
pop
cmp
xchg
add
sarw
cmp
mov
fbstp
xchg
adc
inc
data16
adc
sub
dec
int
mov
pusha
daa
dec
lods
int3
insb
cld
stos
ljmp
imul
mov
cmp
xorl
ror
sub
lret
dec
lahf
ljmp
xor
mov
inc
push
push
test
test
imulb
or
add
mov
jmp
aas
lods
repz
push
or
stos
iret
mov
xor
jns
in
loope
push
movsb
ss
cli
jge
fisttpll
inc
or
cwtl
sbb
loopne
and
repz
lea
mov
xor
sub
movsb
cmp
xchg
scas
dec
adc
push
sbb
shrl
clc
dec
out
mov
xchg
lds
inc
sbb
xchg
rcrl
ljmp
xchg
sbb
outsl
dec
imul
push
iret
test
or
mov
jmp
cmp
cltd
ss
cmp
sti
jmp
jae
and
dec
jp
mov
pop
mov
movsb
xchg
cmovnp
or
push
js
das
push
mov
imul
dec
dec
ret
mov
test
and
add
add
hlt
inc
lret
rclb
xchg
jle
lods
sub
or
aaa
jmp
add
lds
cltd
mov
mov
mov
push
adc
sub
or
mov
enter
mov
mov
mov
jb
jne
pop
jnp
shlb
pop
aad
popa
cmp
shll
xchg
jno
jnp
jb
idivb
in
pop
cmp
xor
fsubs
mov
add
lock
test
or
or
fisttps
mov
mov
push
xlat
jne
push
xchg
pop
ja
lahf
xchg
inc
in
jb
stc
sbb
sub
fwait
and
pushf
jns
inc
pop
test
int
xchg
inc
imul
stc
adc
inc
in
sub
sub
inc
mov
dec
daa
out
pop
repnz
cwtl
cli
aaa
mull
mov
iret
cli
adc
orl
sbb
cmp
stos
std
test
mov
test
inc
mov
test
arpl
sub
xor
adc
shll
inc
adc
cld
or
cld
adc
lret
pop
in
xor
imul
push
jecxz
jns
adc
jbe
cmpsb
sbb
mov
andl
mov
jl
xchg
aam
in
fiaddl
sub
arpl
xchg
inc
mov
daa
or
call
sub
inc
popa
inc
shll
in
sub
in
cld
pushf
out
jmp
fisubs
push
push
orb
fsubp
stos
dec
sub
push
add
mov
lret
push
jp
idivw
cmpsl
push
cmp
mov
jns
mov
sbb
pop
pop
movsb
cmc
push
loop
inc
jne
sbb
fsubl
les
lods
ret
test
mov
jmp
test
lcall
or
dec
out
popa
clc
mov
pusha
pop
adc
fdivrs
hlt
add
mov
xor
pop
fisubl
jne
add
into
inc
xchg
adc
das
icebp
sub
ss
pop
cs
pop
mov
divb
sbb
arpl
aad
pop
or
jmp
lea
in
sbb
mov
sbb
repnz
dec
jp
add
mov
xor
mov
call
cmp
test
adc
inc
mov
pop
dec
mov
sub
je
xchg
dec
cmp
ljmp
outsb
xor
xor
or
mov
add
pop
mov
dec
jge
in
jl
fst
xchg
sub
mov
fiadds
push
shrl
xor
mov
pop
inc
and
movsl
mov
push
shll
mov
into
mov
adc
and
inc
int
sub
dec
jbe
sub
dec
addr16
in
test
add
test
jmp
inc
out
jmp
lods
and
or
push
xor
add
ja
hlt
insl
xchg
inc
pop
lock
dec
dec
mov
das
outsl
pop
dec
jns
ss
nop
loope
mov
mov
mov
cmp
inc
popa
jbe
xchg
ret
adc
cmp
adc
jns
fwait
lret
dec
loop
mov
stc
push
pop
int
fs
movsl
outsb
adc
lods
pop
jb
push
fs
cld
push
js
out
vmread
mov
shll
cld
popa
ss
dec
cmp
mov
add
stc
inc
sarl
pop
xor
push
mov
pop
lcall
fs
mov
mov
and
inc
add
pusha
adc
xchg
cmp
insb
loope
xor
das
sahf
ljmp
mov
dec
mov
pop
aas
jp
dec
pop
lea
shrb
mov
xchg
push
insb
jne
jnp
aas
inc
popa
mov
add
mov
sbb
and
lret
aaa
add
dec
inc
sub
jmp
adcl
cmp
jae
or
jno
push
int
popf
jns
sbb
dec
xchg
mov
cmp
ficompl
fildl
test
xor
fimull
mov
adc
dec
and
xor
lea
mov
inc
add
add
inc
sub
or
lea
mov
inc
inc
sub
dec
jne
dec
mov
add
lea
pop
mov
inc
pop
sub
add
pop
sub
and
lea
mov
inc
add
dec
inc
or
lea
mov
add
ret
push
inc
inc
dec
inc
xor
lea
imul
add
push
push
push
push
dec
add
dec
push
add
lea
mov
inc
sub
inc
inc
xor
lea
mov
mov
push
add
dec
xor
inc
add
push
xor
lea
push
imul
inc
pushl
dec
call
sub
add
add
xor
lea
mov
dec
dec
inc
pop
ret
lea
mov
dec
inc
inc
add
dec
and
lea
imul
mov
add
dec
cmp
jb
inc
mov
dec
or
xor
lea
mov
xor
inc
add
pop
inc
inc
test
jbe
sub
lea
movzbl
inc
dec
dec
dec
sub
lea
movzbl
dec
sub
sub
inc
and
lea
inc
sub
inc
dec
dec
add
lea
and
mov
inc
mov
dec
inc
movzbl
add
xor
add
lea
movsbl
and
sub
sub
mov
add
dec
mov
and
lea
mov
mov
inc
mov
add
dec
dec
add
lea
mov
dec
jne
add
mov
inc
inc
dec
add
lea
imul
add
add
dec
inc
mov
xor
lea
mov
dec
inc
inc
inc
and
mov
lea
movzwl
test
jbe
dec
dec
dec
dec
xor
lea
mov
inc
inc
inc
add
and
lea
mov
dec
inc
dec
dec
dec
or
lea
movzbl
and
sub
inc
mov
dec
dec
movzbl
sub
lea
add
mov
add
and
inc
sub
mov
sub
and
movzbl
lea
mov
mov
dec
inc
mov
add
dec
movzbl
or
lea
add
mov
dec
and
inc
jmp
push
sub
sub
xor
or
lea
inc
mov
dec
xor
dec
dec
pushl
inc
or
pop
lea
imul
rol
inc
dec
inc
dec
pushl
or
lea
mov
dec
sub
inc
dec
xor
lea
mov
inc
add
inc
dec
add
lea
pop
mov
dec
inc
inc
cmp
je
call
call
inc
pop
add
ret
push
lea
push
imul
dec
push
dec
push
dec
push
dec
or
lea
mov
inc
inc
dec
dec
xor
call
lea
push
movzbl
inc
xor
sub
sub
inc
or
lea
push
mov
pop
dec
inc
mov
sub
add
mov
add
lea
test
je
mov
lea
inc
inc
mov
dec
inc
sub
lea
mov
inc
dec
inc
dec
xor
repnz
lea
mov
dec
inc
add
inc
jmp
add
and
lea
mov
inc
inc
inc
dec
add
lea
jmp
push
push
mov
mov
dec
dec
dec
dec
and
lea
mov
inc
inc
dec
pop
add
add
xchg
lea
call
mov
inc
inc
inc
dec
xor
lea
mov
dec
add
dec
dec
call
or
lea
call
movsbl
inc
inc
add
add
add
call
lea
call
inc
sub
sub
push
inc
call
xor
lea
mov
add
call
sub
dec
inc
pop
add
lea
movsbl
add
dec
pop
inc
add
pop
dec
and
lea
mov
pop
dec
inc
dec
dec
or
lea
mov
dec
pop
inc
inc
pop
inc
add
mov
lea
movswl
call
inc
inc
inc
add
ret
xor
lea
push
mov
sub
push
inc
inc
push
dec
or
push
lea
imul
push
dec
dec
mov
inc
dec
push
sub
ret
push
lea
push
mov
add
push
sub
add
add
xor
lea
imul
push
inc
inc
dec
call
pop
ret
jmp
movswl
add
dec
add
sub
add
lea
mov
pop
pop
ret
push
add
push
dec
sub
push
add
add
lea
mov
inc
add
push
inc
dec
and
call
pop
ret
sub
lea
mov
mov
inc
mov
inc
add
mov
add
sub
mov
lea
mov
xor
inc
add
mov
add
sub
inc
or
lea
mov
inc
dec
inc
cmp
jb
dec
push
and
lea
push
movzwl
inc
push
inc
dec
mov
inc
xor
xor
lea
mov
xor
inc
dec
xor
add
add
push
sub
lea
xor
mov
dec
mov
inc
inc
mov
inc
and
movzbl
lea
imul
dec
inc
add
inc
inc
add
or
lea
movzbl
dec
inc
dec
sub
and
lea
imul
inc
add
inc
mov
inc
add
add
lea
mov
inc
cmp
jb
inc
xor
dec
add
mov
sub
jmp
mov
dec
shll
jp
movsb
sti
lahf
orl
std
test
dec
les
xor
pushf
xor
aam
pop
pop
mov
lahf
arpl
ljmp
pop
xor
mov
imul
call
dec
ljmp
insl
pop
pop
int3
mov
subl
add
pop
inc
mov
pop
cmc
test
mov
pop
xlat
mov
xor
sub
test
adc
sbb
lahf
lcall
push
pop
daa
aam
das
and
and
push
test
js
xchg
and
pop
or
loope
push
mov
into
ja
pop
cli
sbb
adc
rcrb
cwtl
sbb
test
punpckhwd
addr16
jnp
push
pop
mov
sub
inc
stc
scas
dec
dec
jp
fadds
call
push
outsl
insl
mov
imul
data16
xor
inc
popa
test
stc
pop
in
pop
push
lods
psubq
sub
insl
fldl
sub
sub
jo
pushf
stc
mov
aas
test
imul
xchg
int
pop
inc
pop
adc
jbe
push
int
adc
out
lahf
mov
mov
xchg
dec
inc
bound
inc
inc
shl
movsl
scas
or
sub
xor
in
cld
or
pop
mov
ljmp
push
inc
ds
xor
out
inc
pop
inc
sub
xor
mov
jo
lahf
cmp
sub
add
adc
mov
std
fwait
test
pop
loope
cltd
mov
idiv
lahf
pop
mov
and
mov
sub
addb
negl
push
push
mov
dec
test
cmc
in
iret
std
or
mov
push
iret
pushf
xchg
pop
repnz
pop
lret
adc
xchg
mov
stos
cltd
mov
pop
cmp
jle
loopne
incl
jp
dec
sub
jmp
insl
ja
int3
and
add
call
dec
dec
cmp
sub
mov
jo
or
push
xor
call
icebp
into
cli
out
dec
sti
xchg
push
inc
push
mov
mov
das
test
popa
rcrl
fdivs
push
loopne
sbb
aaa
or
or
les
mov
sti
pop
xor
sti
or
pop
ret
mov
sbb
xor
imul
fistps
pop
ds
scas
pop
mov
push
daa
xor
aad
jno
sar
jmp
test
pusha
adc
dec
inc
enter
xor
mov
das
or
movsb
icebp
inc
mov
inc
mov
cmpsl
hlt
mov
mov
iret
je
adc
cmp
cli
movsl
adc
mov
dec
js
mov
sbb
adc
push
into
cli
into
jae
fildll
pushl
jg
jge
mov
movsb
lock
lcall
xor
xor
or
loopne
adc
add
mov
add
loope
sbb
sbb
je
mov
dec
fld
inc
mov
dec
pushf
movsb
sahf
push
fistps
cmp
fcoms
clc
cmc
les
and
arpl
sbb
clc
movsb
pushf
pop
sub
fistpl
xor
mov
int3
loop
adc
cmpsl
mov
mov
dec
fsts
cld
pop
sti
pop
sub
jl
push
sub
sti
sbb
push
sarl
dec
jp
inc
insb
cmpl
aad
xor
mov
inc
push
xchg
pop
imull
mov
fisttps
bound
push
and
xchg
std
xchg
stos
and
jne
ror
or
sub
int3
or
jle
jl
xor
cmp
mov
dec
cmp
test
and
aad
dec
add
cmc
cli
out
je
data16
scas
fcmovb
cs
xor
jb
cmp
mov
fcoms
je
scas
mov
jo
testl
mov
xorl
cmp
addl
push
test
mov
xchg
ss
and
out
push
movl
ds
rclb
rcrb
orl
adc
shl
pop
push
lret
pop
push
shrb
loopne
imul
lcall
out
orb
jb
or
xchg
cmp
dec
add
add
xor
push
jmp
push
jge
rcl
push
filds
test
xchg
mov
loopne
imul
sbb
mov
inc
add
insl
inc
jecxz
push
push
test
pusha
inc
dec
ret
or
cld
add
pushl
mov
or
fwait
dec
mov
std
sbb
cwtl
jge
faddl
lods
nop
into
cmpsb
mov
inc
mov
xchg
enter
cli
inc
and
in
sbb
adcb
jge
push
sarb
out
xchg
cmpsl
dec
sti
cwtl
nop
jl
mov
jo
fwait
cmp
nop
jae
sbb
mov
mov
fwait
push
pop
loopne
lret
jne
push
cmpsb
cmp
les
icebp
sub
mov
shll
mov
cmpsl
xor
pop
sbb
push
mov
daa
je
stos
lret
fcom
add
test
jg
in
jo
out
sahf
add
xor
push
sub
testb
adc
rclb
cltd
cltd
pusha
adc
push
hlt
pop
andb
ret
xor
popf
add
push
stos
hlt
dec
or
test
dec
adc
movsb
add
mov
scas
mov
mov
add
pop
ljmp
lds
mov
sub
dec
sbb
movl
gs
and
int3
mov
push
fwait
inc
and
subb
divb
add
test
mov
ljmp
mov
push
xor
xor
lock
repnz
loope
push
dec
clc
xor
andl
add
dec
cs
xor
movsb
mov
test
lcall
xchg
popf
dec
js
mov
les
cmp
dec
sbb
push
into
push
ret
call
pop
add
fwait
popf
add
xor
int3
fiaddl
xchg
add
cli
xor
imul
cmpsl
stc
ss
ret
xchg
psubsb
xchg
add
rcrb
dec
lret
pushw
sub
loope
fdivl
sub
addr16
cmc
cwtl
test
inc
icebp
sub
mov
jp
dec
push
mov
adc
fistpl
shll
pushf
addr16
and
xchg
add
js
sbb
aas
jae
dec
dec
test
and
mov
push
insb
imul
cltd
mov
pop
push
pop
aaa
xor
bswap
and
scas
and
fisttpll
sahf
pop
fmull
sbb
decl
aaa
mov
jmp
stos
mov
sbb
pop
ja
lret
aad
push
mov
xlat
pop
push
orl
fdivrs
int3
add
mov
sarb
adcb
cld
push
fmull
xor
mov
xor
stos
int3
push
add
sbb
outsl
mov
lahf
add
in
lock
fsubp
mov
testb
les
sub
ljmp
jl
dec
sub
fstpt
daa
movsb
call
pop
cs
les
bound
je
gs
cli
sbb
mov
adc
add
testb
cltd
lcall
lock
or
mov
lcall
push
not
loope
sub
cwtl
aaa
adc
aaa
or
push
jno
push
hlt
fstps
movups
jns
cmp
cli
push
bnd
jne
or
cwtl
mov
mov
and
xor
in
sbb
adc
jecxz
ljmp
fcomp
pop
out
sbb
cmp
push
dec
lods
mov
or
adc
adc
test
xchg
idivb
in
arpl
jo
mov
out
jg
inc
ficompl
cmp
ss
sbb
mov
sbb
popa
mov
mov
call
movsl
stos
jbe
stos
cmc
and
enter
clc
orl
adc
and
push
out
pop
inc
push
into
cmp
or
cmpsl
mov
mov
and
test
ficoms
dec
in
push
mov
xor
and
xchg
fisttpll
push
into
shll
sub
je
jge
pusha
sub
fucomp
rcrb
lods
arpl
dec
and
lods
jno
dec
popa
daa
out
idivb
stos
in
mov
pop
leave
insl
cmp
mov
push
lcall
jbe
sub
shl
insl
test
add
test
sahf
lods
cmpsb
cltd
stc
ljmp
sbb
lea
lods
xor
push
jp
call
movsb
or
mov
pop
in
dec
into
cmp
dec
push
mov
cmp
or
hlt
cmp
add
push
dec
mov
pop
fistpl
dec
xor
and
cld
aad
dec
xchg
and
mov
push
lret
mov
ret
cmpsl
in
sub
adc
push
fldcw
lds
cmp
loop
scas
jp
sub
xor
enter
data16
cmp
mov
jae
xchg
inc
mov
xor
cmp
sahf
jle
fidivs
adc
push
add
mov
mov
enter
inc
popa
inc
cmp
mov
add
aas
in
jne
dec
dec
cli
out
enter
lahf
inc
out
movsb
cld
pop
ret
insb
test
popa
dec
dec
xor
pop
sti
rclb
jbe
cmp
cmpsb
mov
subb
imul
jp
xor
sub
xor
jbe
mull
outsl
mov
jmp
sbb
add
cli
and
aas
fistl
inc
ficoms
jge
mov
orb
cmp
cmp
push
addl
scas
inc
or
enter
jmp
je
aaa
das
roll
mov
bound
iret
stc
in
pusha
cmpsl
gs
enter
das
movsl
dec
test
test
and
push
pop
mov
sub
jg
jo
imul
ret
lahf
mov
mov
pop
loope
and
test
push
sarl
dec
imul
push
or
cld
hlt
lret
jb
xor
cmp
pop
add
mov
cmc
int
xchg
iret
push
jnp
jnp
lods
pop
dec
and
daa
sahf
sti
dec
and
cltd
jne
decb
add
testl
or
fldcw
xlat
mov
push
outsl
cmpl
xchg
inc
mov
xchg
and
loopne
lahf
imul
xchg
loopne
add
fcmovnu
push
or
jecxz
sbb
xor
xchg
out
add
insb
dec
fisttpll
lcall
fcoml
iret
xchg
mov
in
jns
jo
fstp
rcll
rolb
nop
push
out
in
mov
xchg
or
fcmovnbe
movsl
jecxz
jmp
dec
sub
in
jmp
sbb
aaa
push
inc
dec
jns
inc
or
xchg
outsw
pusha
jo
lret
dec
add
mov
add
jns
stos
cmp
add
dec
cs
and
and
fsubr
ljmp
or
add
xor
and
aaa
insb
jns
pop
movsl
xor
pop
xor
leave
sbb
pop
cmp
in
test
cmp
or
out
push
push
dec
mov
mov
or
loope
cmp
mov
into
mov
push
ljmp
pop
push
mov
loope
rep
fmuls
int
mov
fiaddl
addr16
fisubs
add
jl
fcmovnu
add
mov
sub
test
jecxz
xor
push
jne
pusha
add
push
jnp
scas
add
cltd
sbb
xorl
push
bnd
xchg
sub
dec
pop
add
stc
jbe
cltd
mulb
repnz
cmp
mov
sahf
sub
das
sbb
ja
jbe
scas
jmp
leave
sub
icebp
inc
or
daa
imul
push
adc
fneni(8087
fstps
lock
int
and
les
inc
and
stos
int3
cwtl
push
sub
sahf
shll
mov
fdiv
out
pushf
icebp
sbb
daa
jp
xchg
push
dec
stos
jl
out
jb
push
mov
jo
mov
or
lock
or
in
in
pop
adc
scas
in
in
xor
inc
mov
and
divb
cs
push
inc
js
ret
adc
inc
pop
mov
aaa
xor
sbb
sbb
loope
jo
js
dec
cwtl
dec
and
sub
push
xchg
mov
pushf
movsb
enter
int3
sahf
mov
enter
jmp
fwait
and
sub
jecxz
jmp
sbb
or
mov
stc
inc
stc
jne
push
aas
pop
and
std
mov
ret
push
xor
test
rcrl
inc
mov
dec
fidivl
add
fdivl
aam
mov
lret
insl
rorl
push
mov
pop
shl
dec
lret
int3
jns
jmp
mov
mov
mov
insl
gs
lods
je
jmp
popa
stos
push
xchg
dec
imul
mov
xchg
cmpsl
in
pushf
mov
mov
pop
cmp
data16
notrack
scas
test
shrb
pop
mov
aad
or
mov
outsb
adc
stc
dec
inc
mov
adc
and
xchg
mov
dec
pushf
mov
jo
je
clc
rcrl
push
jae
jns
add
cmp
sbbl
xor
xlat
gs
adc
movsl
sarb
jle
mov
inc
inc
pop
loope
mov
fs
cmc
sbb
call
sbb
push
stos
cmp
stos
fisttps
adc
push
data16
fistpll
jne
test
xor
scas
pop
ret
mov
push
jl
cmc
dec
and
push
and
xor
imul
cmp
inc
divb
or
cli
or
inc
xor
filds
pop
popa
jnp
std
pop
lods
stc
xlat
inc
int
jle
xor
sti
int3
xchg
cmpl
mov
shlb
or
pop
fs
divl
mov
xchg
dec
inc
adc
mov
in
bsf
and
or
add
nop
popf
pop
push
adc
ret
mov
imul
push
sbb
ds
int3
sbb
mov
and
and
fstl
outsb
add
pop
sbb
es
pop
mov
sub
scas
inc
xchg
std
in
stc
push
sarb
test
mov
mov
call
cmp
pop
add
shr
adc
lds
xor
mov
inc
add
rolb
dec
xchg
inc
pop
xor
adc
jecxz
mov
xchg
or
scas
jae
dec
stos
in
stos
sbb
cmp
ljmp
jae
in
mov
movsb
add
in
xchg
dec
aaa
outsb
lods
xchg
clc
mov
xor
lcall
sarl
int
stc
and
mov
add
xlat
jo
scas
cld
jnp
and
out
add
bound
rorl
inc
je
in
jns
loope
cmc
lahf
push
pop
aad
sbb
lock
movsl
ret
add
aam
or
outsl
jp
arpl
jae
or
add
icebp
pusha
or
lds
jns
push
push
xor
int3
push
jo
and
jecxz,pn
sbb
cld
or
xchg
stos
fadds
and
int
icebp
pop
mov
je
sbb
xor
jns
pushf
call
xlat
pop
cmp
test
mov
rorb
mov
arpl
imul
add
fstpt
mov
jns
pushf
loop
dec
cmpsl
adc
xchg
mov
fdivl
sbb
and
lods
fwait
xchg
mov
pop
mull
icebp
jne
pop
mov
xor
dec
ret
jl
pop
adc
pushf
outsl
sub
es
push
xor
xor
inc
dec
cltd
xchg
mov
bound
cltd
push
pushf
stos
test
int3
mov
call
xchg
fs
pop
test
int3
icebp
movsb
inc
adcb
js
test
incb
ret
jo
out
cmp
scas
jle
jle
loopne
mov
cwtl
xchg
mov
add
jnp
outsb
xor
sub
adc
add
push
push
les
pop
or
test
cmp
lahf
incb
pop
ret
shll
in
adc
xchg
fidivrl
push
sbb
loop
filds
and
or
cld
jg
imull
adc
pop
ja
fsubs
push
repz
inc
and
cmpsb
sahf
sub
xor
xor
sub
loope
int3
push
lret
xor
xor
pop
gs
scas
jl
or
pop
lret
jmp
jle
les
cs
or
or
xor
mov
inc
popa
clc
bswap
jb,pn
mov
cmp
add
adc
call
jns
xor
inc
and
scas
fwait
push
add
mov
add
stc
jg
leave
popf
jo
and
das
clc
push
sub
pop
xlat
inc
adc
jbe
adc
test
xor
decb
mov
add
out
sbb
loope
inc
stos
and
mov
ret
pop
pushf
jl
sbb
das
add
test
jbe
aaa
hlt
inc
mov
mov
aam
sbb
sbb
cmp
xor
lcall
lcall
gs
mov
mov
add
outsb
out
insl
cltd
sub
js
add
and
stos
sbbl
mov
sbb
pop
mov
adc
adc
xchg
xchg
in
xchg
and
xchg
xlat
or
outsl
aam
fdivl
push
arpl
mov
adc
orl
cltd
mov
add
sbb
and
fidivrl
push
mov
add
or
and
or
dec
out
cmp
pop
ret
push
inc
leave
test
lahf
into
adc
hlt
mov
mov
mov
mov
push
add
push
dec
cld
fcoml
ljmp
fidivs
divl
inc
add
mov
loop
jo
adc
cmp
scas
mov
jnp
push
dec
inc
jmp
jecxz
jecxz
leave
push
sbb
sub
test
inc
cwtl
test
xchg
lods
jg
push
rolb
mov
push
loop
adc
jg
loop
mov
xor
sub
in
out
dec
outsb
push
jae
sbb
sbb
adc
pop
dec
ja
int3
adc
aad
repz
mov
fstpl
jns
sbb
pop
xor
fimuls
mov
push
sub
push
daa
xchg
arpl
stc
xchg
push
pop
aas
orl
add
cli
out
imul
or
add
adcl
mov
pusha
repnz
cmpsb
clc
push
sbb
mov
mov
xchg
out
mov
pop
lret
test
push
fnsave
sbb
add
mov
out
mov
popa
mov
testl
outsb
add
xchg
jno
push
call
sub
jo
jne
lock
jno
add
les
sub
sbb
rorl
jne
sub
sbb
mov
sub
mov
add
mov
inc
aas
mov
sub
add
mov
cltd
xchg
out
iret
mov
fcomps
jne
adc
ret
inc
ljmp
mov
hlt
aaa
scas
and
add
mov
loopne
xor
in
clc
cltd
mov
mov
les
inc
ss
aas
sbb
add
mov
sahf
out
repnz
sub
cmpsl
dec
scas
and
imul
inc
jl
sbb
and
add
stos
arpl
mov
fistl
in
mov
mov
in
inc
sbbl
add
mov
mov
or
xchg
repz
imul
in
ja
rcrb
mov
dec
arpl
jg
mov
jo
stc
ret
lret
imul
dec
dec
or
fs
push
mov
xor
in
or
mov
push
dec
imul
cmc
push
inc
jne
cwtl
shl
push
pop
xor
ret
popf
push
dec
mov
fcomps
mov
in
mov
arpl
or
mov
mov
int3
clc
je
xchg
push
jl
push
push
int3
dec
xchg
aas
cmp
shrb
loope
jnp
inc
adc
daa
mov
pop
dec
or
fisttpll
repnz
push
xchg
push
push
jae
lret
es
icebp
and
jae
dec
push
icebp
pop
mov
sub
or
iret
cmpsb
inc
stc
sub
push
mov
outsb
das
popa
mov
sbb
adc
test
mov
sub
shlb
cld
fwait
xlat
mov
and
mov
aaa
mov
das
test
sahf
cmp
jb
out
mov
jnp
push
add
mov
add
sbb
push
sub
cltd
adc
jmp
roll
xchg
arpl
in
cltd
adc
lret
push
mov
pop
jp
jmp
jnp
add
stos
pop
fwait
enter
xor
inc
mov
icebp
xchg
cmp
jl
push
jg
fisubrs
adc
jnp
push
jo
rcl
mov
sahf
fcmovnu
lods
addr16
dec
lods
jle
sbb
test
outsl
mov
mov
sti
mov
cmpsb
inc
sahf
cmp
dec
inc
mov
xor
ja
in
push
jns
stos
cmc
sub
movsb
ljmp
icebp
mov
xor
enter
adc
xchg
ficoml
imull
and
xchg
xchg
jne
and
or
out
cs
das
andb
add
pop
popa
out
movsb
sub
pop
ss
repnz
repnz
ljmp
aad
stc
insl
fbld
jae
cld
xchg
pavgw
jb
dec
dec
adc
outsb
cmpsl
fidivs
cwtl
scas
test
rol
jnp
push
jmp
repnz
xchg
and
test
andb
fdivrp
push
mov
mov
jmp
cltd
xchg
sub
sub
add
jmp
int3
js
xor
fs
push
subl
fisttps
push
push
jnp
jge
add
xchg
cmp
fsubrp
loopne
sbb
call
or
pop
out
push
or
inc
adc
scas
pushf
pop
add
adc
dec
dec
stos
lret
std
bound
sti
mov
xor
mov
or
mov
mov
push
xchg
mov
inc
fbld
inc
fucomi
hlt
push
sbb
sub
in
lock
sub
aad
clc
pminsw
rorl
dec
outsl
mov
adc
lcallw
aam
dec
std
push
and
pop
fsubs
adc
movsb
pop
scas
aas
sbb
mov
lcall
jle
add
popf
bound
push
mov
pop
stc
mov
push
xor
out
sbb
cli
mulb
pop
dec
mov
adc
jmp
in
mov
xchg
mov
adc
cld
aaa
xchg
mov
aad
jns
es
dec
les
fsubrs
repz
fnstcw
rorl
subl
cmpsb
out
aam
ret
out
mov
outsb
lods
out
cmp
out
xchg
pop
sarl
cmc
in
inc
mov
jle
mov
lock
movsl
xor
dec
ret
jmp
je
hlt
addr16
pop
fsubs
pushf
dec
ja
fmul
mov
xlat
lahf
popf
xchg
or
pop
mov
sub
fsubrl
jp
lods
push
inc
add
mov
aad
jae
dec
call
daa
sbb
subl
sahf
jge
or
clc
es
aad
bound
cmc
mov
mov
mov
add
pop
xor
sub
fists
loope
push
mov
es
dec
inc
arpl
loop
mov
pop
add
sbb
repz
dec
cmp
fsubp
adc
add
jmp
cmp
inc
in
pop
nop
cmp
arpl
das
dec
ret
pop
cmp
add
outsl
or
jb
push
mov
insb
in
ret
lcall
dec
inc
mov
jbe
sahf
loope
jb
push
test
mov
ds
test
cmp
sub
popf
jae
sti
stc
pop
cmp
lcall
cltd
ret
xlat
fs
das
sub
mov
mov
push
out
sbb
stc
or
xchg
adc
and
mov
loope
xchg
dec
lods
mov
cmp
inc
or
out
mov
cmp
xchg
sbb
sbbl
pop
or
enter
lret
mov
push
or
jae
jns
pusha
decl
je
pop
mov
mov
in
sbb
xchg
push
out
xchg
mov
add
repz
lds
jge
test
jbe
mov
mov
ja
mov
outsb
mov
push
mov
dec
and
outsb
shr
jo
fimull
mov
fs
into
jbe
mov
mov
test
xchg
xor
insb
adc
pop
cwtl
mov
arpl
out
cmp
cmpsl
mov
push
lods
jecxz
sbb
ret
cmp
add
cli
inc
imul
lret
fnstcw
les
hlt
or
adc
dec
imul
jae
hlt
lock
and
icebp
enter
iret
dec
mov
lret
and
jl
mov
lea
xlat
mov
pop
lods
push
test
xor
leave
fbstp
sbb
xchg
sbb
fiadds
fildl
loopne
scas
xlat
leave
cmp
jno
rcrb
aaa
pusha
out
ja
fistpll
sbb
or
cpuid
lods
pop
imul
icebp
sbb
or
lds
sti
add
sbb
out
mov
ds
lods
pmulhuw
gs
sub
out
sbb
scas
mov
les
xchg
jp
xchg
inc
xor
sub
dec
push
dec
or
aaa
jae
jecxz
and
jae
push
push
sub
je
adcl
out
loope
aad
pop
mov
in
mov
fldl
loopne
inc
sbb
mov
test
mov
mov
dec
push
in
mov
popf
cwtl
push
pusha
sub
dec
nop
jg
nop
jo
sbb
jne
mov
and
xchg
loope
cltd
popa
stc
outsl
fmull
sub
pushf
cmp
jecxz
mov
jno
jne
in
xchg
push
scas
out
dec
adc
jge
fadd
xchg
dec
lahf
pusha
fs
xchg
in
fildl
hlt
nop
test
mov
dec
cmp
inc
gs
dec
mov
xor
mov
mov
mov
xchg
jbe
orb
stos
inc
fucomp
xor
mov
add
je
test
iret
das
hlt
in
jg
sub
jns
pop
lds
movsb
cs
loope
mov
and
stos
mov
xchg
jp
cmp
cmp
sbb
xor
popf
add
faddl
adc
in
ret
leave
adc
cmpsb
fnstcw
jge
push
cmp
leave
in
rcrl
push
xchg
sub
add
outsl
push
cmpsl
aam
xlat
fnstsw
push
pop
inc
aas
cltd
bnd
dec
mov
adc
mov
les
jp
add
jmp
ret
xor
sbb
sub
pop
cmpsl
loop
mov
test
adc
arpl
mov
add
clc
sbb
adc
pop
add
mov
cmp
push
xor
aad
xchg
mov
fnstsw
jp
nop
jmp
mov
jecxz
mov
nop
enter
jne
xor
add
mov
jp
dec
gs
inc
out
sub
ret
dec
clc
pop
rcr
stc
loope
fcompl
fidivl
xchg
sub
add
xchg
add
enter
inc
xor
pop
push
ret
int
inc
aaa
cs
cltd
dec
push
or
pop
jle
cmp
mov
inc
jns
out
rcrl
lods
in
pop
andb
sub
dec
imul
rolb
testl
inc
dec
sub
or
rcrb
add
push
movsb
dec
mov
jno
xchg
inc
cmp
xor
add
leave
lahf
adc
and
pop
ds
push
cld
jne
pop
lcall
sub
mov
push
pop
xchg
mov
mov
inc
call
in
hlt
cmp
cmpb
int
movsb
fidivs
enter
sbb
and
mov
mov
bnd
repnz
stos
push
test
pop
repz
lock
aam
lret
stos
push
hlt
cmp
movl
inc
jge
xchg
mov
inc
and
adc
jecxz
jno
repz
or
repnz
minps
mov
clc
imul
mov
mov
cmp
pusha
je
pop
push
mov
push
adc
or
jbe
adc
inc
fbld
pop
add
test
test
gs
icebp
cmp
test
xor
call
jno
mov
pusha
push
jo
sahf
pop
ja
mov
xchg
push
fnstcw
dec
loop
sbb
cmp
fxch
jg
lock
cli
xor
mov
push
cmpsb
cmp
mov
mov
cmpsl
call
pop
cmp
shrb
jecxz
inc
jge
and
fwait
testb
xchg
mov
shll
frstor
mov
jno
hlt
pop
daa
faddl
add
lar
jb
pop
xchg
lcall
sbb
lahf
xor
stos
jo
jmp
idivb
sahf
push
aas
mov
daa
les
cmp
mov
aas
bound
xor
test
jg,pt
adc
les
jl
cld
push
das
push
arpl
push
popa
cmp
sarl
cmp
cmc
jb
stos
jnp
arpl
ret
cmp
out
xchg
lock
add
movsb
mov
xchg
cmp
scas
in
mov
mov
cmp
xchg
rolb
fcompl
mov
test
mov
repz
je
out
push
adc
dec
dec
pop
mov
cli
sub
in
outsl
lea
sarl
lea
sbb
divb
into
adc
mov
or
sbb
cmpsl
jne
daa
xor
lock
cmp
in
in
sub
jns
imul
pop
int3
ret
sbb
adc
sub
and
scas
cmpsb
stos
divl
cmpsb
adc
or
jecxz,pt
addr16
sub
test
mov
mov
imul
mov
out
shlb
sti
ljmp
aam
out
fisttpll
or
repz
and
in
out
mov
fs
sbb
scas
sbb
mov
stos
or
int3
inc
add
in
mov
xchg
jnp
test
or
fs
sbb
pop
arpl
xchg
aam
push
mov
xor
jb
fcomp
mov
jle
insb
inc
inc
jne
inc
mov
bound
addr16
int
dec
xchg
testl
repnz
lcall
enter
xchg
sti
mov
scas
mov
sub
sub
cmc
out
xchg
test
shrl
cld
or
or
push
mov
rolb
adc
loopne
mov
pop
insb
cmpsb
das
aas
shlb
jns
xor
mov
repnz
mov
inc
inc
or
sub
fucomp
inc
sub
fwait
xrelease
push
insl
inc
mov
mov
cmp
fucomp
adc
in
adc
sub
shlb
sbb
sub
inc
mov
sahf
or
mov
pop
add
out
sbb
imul
cs
mov
pop
or
out
push
movsl
stos
popf
pusha
jns
hlt
and
sub
mov
aaa
mov
pop
adc
pop
adc
or
loop
add
mov
scas
sbb
mov
sub
ljmp
outsl
mov
pop
popa
push
jmp
dec
fsubs
lsl
stos
pop
adc
xor
pop
xchg
test
pop
nop
mov
mov
jl
adc
adc
mov
xor
int
cmp
mov
lcall
stc
into
outsl
jo
push
mov
sbb
shl
add
jb
sbb
fst
sub
adc
jb
xor
iret
shlb
js
ret
push
cmp
xor
bswap
out
test
inc
xlat
push
xor
or
rcll
decw
stos
mov
push
jg
or
shrl
outsl
xchg
hlt
jg
lret
sbb
rcll
aad
std
clc
pusha
mov
push
mov
jmp
in
lcall
mov
jne
adc
inc
xchg
pop
mov
std
and
aam
xchg
cmp
push
icebp
call
leave
out
lods
jmp
pop
jp
mov
or
mov
inc
movsb
lea
sbb
mov
outsl
push
adc
xchg
sub
and
pop
and
sbb
mov
leave
ljmp
pop
dec
fdivp
dec
test
add
imul
rclb
lret
in
and
and
dec
imul
roll
lret
cmp
popa
jns
or
sti
jno
icebp
or
cld
lret
add
stc
out
cld
dec
sbb
scas
cmp
xchg
and
idivl
push
lds
leave
push
sbb
jnp
jmp
or
pop
addr16
fsubp
in
xor
int
xor
fwait
dec
xor
cmp
sub
shrb
mov
repz
rcrl
shlb
jecxz
movsb
or
aaa
mov
fists
or
out
mov
push
jno
roll
push
popf
bnd
or
push
jge
jg
sub
mov
sub
mov
xchg
je
divl
adc
xor
mov
dec
leave
subl
cli
cli
fistl
popf
pop
aas
loopne
stos
repz
add
pop
push
test
add
xor
cmp
cwtl
lock
in
and
mov
clc
pushf
insl
jl
fsts
jbe
xchg
dec
dec
mov
test
jno
sbbl
popl
mov
adc
ret
dec
sbb
outsb
popf
mov
jae
ficompl
pop
or
fdivr
fnstcw
cmp
fdivs
testl
lods
mov
hlt
aas
fnstcw
xchg
dec
clc
loope
jg
pop
shrb
cmpsl
jmp
add
cli
pusha
cld
out
loop
cmp
pop
adc
xor
xchg
clc
sub
ja
sub
adc
cmp
pop
mov
andl
jne
pusha
dec
test
sbb
or
inc
jnp
hlt
xor
sub
out
xorb
out
rolb
rorb
xor
push
push
cmc
ja
arpl
nop
cmp
xor
cwtl
or
mov
cmc
inc
jne
arpl
jae
jge
test
add
sti
fistl
insl
xor
les
nop
add
stc
test
les
xor
call
or
jb
add
adc
shlb
movsl
movsl
mov
addr16
push
sbb
push
jle
mov
jp
insl
cmp
xchg
or
add
test
push
or
outsl
mov
add
aam
jmp
loope
inc
mov
sbb
mov
jno
xchg
or
push
mov
cmpsb
xchg
mov
push
je
pop
jg
insb
shll
mov
cmpl
mov
pop
mov
mov
adc
mov
mov
iret
xchg
into
nop
add
lcall
push
mov
fadd
in
gs
sub
mov
movsl
mov
int
and
sub
inc
addr16
or
xlat
fisubrs
dec
sti
insl
ror
xorb
mov
jb
and
or
jp
dec
add
es
in
pop
sub
pop
inc
stc
sub
and
lods
insb
mov
pop
movsb
dec
inc
fcmovu
fwait
mov
mov
xchg
gs
les
aas
jmp
int3
xor
cltd
or
std
hlt
pop
and
out
jb
sub
mov
test
sbb
mov
mov
lock
mov
mov
dec
leave
xor
ljmp
jnp
mov
aam
psrlq
push
lods
dec
out
jo
outsl
pop
sbb
test
jno
lds
mov
shl
rorl
das
jae
jle
stos
dec
int
aas
insl
mov
sbb
fidivs
jge
xor
sub
cmp
sbb
cmpb
ret
insb
lret
adcl
sbb
push
stos
pop
jne
cmp
jns
aas
lock
pop
xlat
sub
mov
popf
dec
mov
ret
xor
stos
into
inc
push
div
ja
mov
imul
gs
out
add
das
cmc
dec
rorb
or
mov
and
xlat
push
scas
repz
xor
push
mov
xor
insb
mov
sbb
mov
jno
js
cmc
fimuls
bound
and
cs
mov
sbb
popf
xor
out
fildl
push
fnsave
mov
dec
outsl
test
push
movsl
cmp
lret
xchg
lret
lods
push
adc
mov
cld
push
movsb
inc
sti
insl
xor
lret
int
inc
inc
pushf
push
lret
xchg
imul
mov
icebp
mov
inc
addb
repz
jg
repnz
xor
add
xchg
pop
and
push
add
insb
popf
out
cmp
incl
mov
stos
cmpsb
dec
das
fadds
mov
push
cmpsb
jecxz
sbb
dec
shll
loop
pusha
push
js
xchg
pop
dec
and
hlt
movsl
shll
cmp
adc
xor
shl
mov
mov
cmp
fildll
in
test
adc
pop
lahf
pushf
mov
or
jmp
push
in
ret
sbb
sbb
adc
dec
nop
call
cmp
lret
das
daa
push
les
dec
pop
cmpl
mov
roll
test
add
xlat
mov
and
adc
mov
popa
xchg
or
pop
popa
lcall
jmp
in
add
fldt
jecxz
inc
push
and
cmp
push
or
xchg
fcoml
pop
inc
cmp
jnp
jmp
fistl
cmc
sbb
mov
add
cmpsb
into
push
out
pushf
call
or
fs
pop
add
xchg
pop
push
mov
mov
gs
arpl
dec
enter
jno
pop
in
mov
outsl
inc
pop
popa
mov
imul
nop
pusha
out
or
pop
arpl
scas
std
add
mov
sub
or
pop
add
cmp
ror
push
adc
decb
fs
xchg
xchg
fistpll
and
loopne
sbb
sub
fmuls
mov
mov
stos
insb
mov
cmp
lods
pop
lea
aas
loope
push
lds
dec
push
fcoml
mov
mov
fildl
lds
xor
popa
loop
jg
mov
mov
arpl
movsb
cld
iret
inc
scas
imul
sub
xor
jns
sar
xchg
mov
dec
xor
daa
scas
push
insl
push
sub
clc
or
dec
mov
das
push
lds
addl
mov
sbb
mov
adc
and
movsl
mov
shlb
aas
xchg
notl
aam
add
clc
das
aad
sahf
push
ret
cmp
ss
xlat
rolb
in
and
test
push
mov
in
xor
sbb
lods
dec
ficomps
rcll
mov
ret
in
pop
je
xchg
inc
mov
or
xchg
fbld
sbb
push
fidivrs
ficompl
xor
adc
xor
mov
push
repnz
add
nop
push
cmpl
dec
outsl
mov
ljmp
fnstsw
sub
pop
jno
adc
in
push
js
pop
mov
xlat
imul
pushf
xor
pop
push
ret
add
inc
cmp
arpl
cmpsb
push
jae
and
sbb
aaa
or
sti
fldenv
test
sbb
xlat
xlat
loopne
popf
data16
sahf
mov
xor
in
add
mov
push
adc
out
or
sbb
sub
sahf
lods
adcl
mov
push
push
repz
mov
mov
pop
sub
fincstp
dec
mov
push
imul
mov
push
fwait
mov
std
inc
mov
sub
cwtl
fidivrl
in
adc
mov
enter
loopne
std
jle
and
jle
mov
popa
cmp
faddp
push
js
xor
dec
push
mov
xor
sbb
shr
jge
sub
adc
mov
mov
int
xchg
lret
and
pop
loope
nop
imul
xchg
scas
mov
out
shl
dec
jle
xchg
or
fnstsw
cmp
jg
test
inc
repnz
scas
push
mov
add
mov
in
dec
stos
mov
cwtl
inc
inc
xor
xor
cmp
add
out
cs
stc
stos
and
xor
push
cmp
in
mov
in
test
inc
shlb
xchg
nop
or
dec
ficompl
pop
hlt
sub
mov
mov
and
cmp
popa
mov
mov
fstl
pop
popf
ret
dec
push
mov
aas
add
xor
dec
and
mov
xor
mov
fucomp
mov
negl
dec
mov
out
mov
or
add
sbb
jnp
jle
jp
xchg
loopne
mov
loopne
dec
sub
or
iret
jo
iret
ret
dec
cmp
sbb
add
push
cld
push
xor
outsl
in
jecxz
iret
jbe
and
scas
push
sub
pop
mov
jmp
adc
hlt
lahf
jge
xor
jle
mov
insb
pop
lahf
cmp
and
icebp
jns
les
ret
mov
dec
xor
test
mov
pop
lods
pusha
mov
xor
imul
jne,pt
sub
cli
push
ret
rclb
fsubrl
fimuls
xchg
or
pop
gs
outsb
xor
lock
inc
lock
repz
or
push
fistpl
add
imul
mov
mov
aas
sbb
jno
cmp
jl
sbb
pop
aaa
das
insb
and
gs
popf
add
inc
inc
fwait
les
push
scas
and
mov
cmp
push
jo
lret
pop
and
outsl
pop
in
dec
sbbl
and
outsb
inc
int3
fcmovb
dec
lods
and
std
je
loop
xor
in
gs
lahf
loop
add
fmulp
loopw
push
outsl
ljmp
mov
mov
enter
sub
adc
mov
mov
sti
mov
sub
fs
mov
jp
loop
mov
jnp
mov
fdivrs
outsb
mov
popa
dec
stc
dec
mov
or
push
or
xchg
cwtl
dec
fldz
mov
push
inc
jp
or
sbb
xor
cmp
out
in
fdivrl
add
cld
in
adc
adc
jae
sub
jno
scas
inc
push
mov
cli
push
lods
out
push
inc
dec
ss
xchg
ljmp
or
inc
add
stos
out
push
or
out
mov
xchg
xchg
int3
pop
or
bound
sub
dec
adc
cmp
testb
sub
repnz
into
pop
xor
cli
stos
cld
sbb
sub
movsl
sbb
mov
dec
jecxz
iret
add
out
fwait
lds
and
jp
jno,pn
js
xchg
lds
stos
xor
lret
mov
std
inc
lods
popa
in
out
ds
fildll
push
inc
cmp
xchg
ljmp
insl
push
std
arpl
arpl
xchg
sbb
popf
sahf
lret
lods
dec
push
jns
es
sub
inc
ja
add
jnp
push
stos
cld
sub
ss
pop
fs
dec
mov
push
pop
sbbb
push
addl
out
movb
into
adc
cmpsl
pop
pop
and
mov
mov
cmpsl
lock
cmp
icebp
pushf
out
pop
mov
and
imul
fs
test
jae
imul
les
xor
lret
rclb
sbb
jno
inc
jbe
or
shl
push
inc
add
cmc
sarl
xor
subl
dec
xchg
inc
inc
aam
sbb
add
xchg
mov
stos
dec
jmp
cmc
mov
jb
into
xorb
shll
mov
adc
pop
or
rorb
or
orl
jnp
or
pop
in
or
mov
mov
in
cli
dec
add
testl
data16
inc
insl
mov
inc
cmp
mov
xor
jp
daa
and
or
mov
mov
mov
mov
dec
xor
mov
nop
test
icebp
sti
loop
inc
add
repnz
sbb
hlt
in
sbb
ss
lock
sarb
cltd
dec
push
dec
sbb
dec
and
js
iret
dec
or
bnd
insl
pushf
pop
dec
cltd
fsubl
mov
pusha
jmp
cmp
sbb
into
fisubl
cmpsl
mov
push
mov
or
and
stos
ss
ja
add
stos
test
jmp
mov
inc
and
popf
ljmp
inc
push
mov
cwtl
pop
fistpl
push
inc
arpl
hlt
pop
or
repz
enter
jecxz
xchg
lret
mov
sbb
or
or
or
add
adc
pop
mov
fisttpl
xlat
pop
cmpsb
cli
jecxz
push
ficomps
inc
jg
add
movsl
test
sti
hlt
lcall
or
jb
in
jmp
out
test
pop
lds
mov
out
in
shl
int3
jb,pn
fidivl
imul
jge
std
cmp
gs
add
pop
jmp
lods
sub
imulb
ss
xor
mov
dec
cmpsb
mov
adc
add
jecxz
test
jmp
pop
into
mov
aam
dec
jne
push
cmp
dec
pusha
or
es
jmp
movsb
sub
rcrl
mov
enter
dec
xor
push
jge
mov
dec
jns
cwtl
lret
mov
in
lret
add
fisubs
clc
push
xchg
out
sbb
icebp
daa
roll
jmp
in
add
outsb
stos
stos
sbbl
dec
mov
adc
imull
xchg
shlb
cmc
adc
xor
ret
mov
mov
ret
ds
fs
scas
mov
xchg
mov
lahf
dec
cmp
into
lret
sub
std
jecxz
shlb
push
xor
mov
adc
jnp
cs
pop
or
loopne
sbb
cmp
shrb
enter
add
int
mov
push
int
dec
outsl
imulb
jmp
mov
lds
mov
das
and
aaa
push
pop
int
jp
gs
jmp
cmp
dec
shlb
pop
ffreep
xlat
adc
inc
fldcw
out
mov
les
repz
sbb
push
lock
sub
or
std
es
lret
mov
outsb
push
lods
mov
sbb
subl
or
add
add
pop
adc
loope
into
jp
stos
add
orl
arpl
popf
ret
push
mov
jl
xor
adc
mov
mov
mov
shrb
mov
popf
jno
inc
mov
jle
or
cmp
dec
mov
ret
nop
ror
cmp
repnz
pop
and
inc
iret
test
testl
xor
andl
outsb
jmp
add
jnp
mov
hlt
ljmp
ficoml
mov
sub
sbb
jo
mov
out
and
xor
ja
mov
subb
lock
pop
cltd
imul
mov
and
dec
xor
push
adc
in
call
mov
jl
jp
pop
outsl
xchg
fsubs
mov
add
bound
enter
xchg
mov
jecxz
add
daa
cmp
push
pop
xor
cld
mov
scas
les
mov
xchg
aas
data16
loop
push
jne
out
jmp
cmp
mov
dec
push
push
in
xor
xor
jne
aam
mov
pop
push
lea
roll
pop
push
data16
fimull
andl
lods
push
dec
sahf
jl
stos
aam
outsl
stos
dec
jl
jne
notb
push
stc
popf
xor
in
push
fxch
jle
mov
mov
xchg
les
and
push
mov
popf
out
sar
imul
subl
cs
mov
xor
cmc
outsb
xor
sub
mov
inc
cmp
lret
lret
push
inc
cmp
bound
inc
pushf
mov
insl
sbb
jbe
pop
xor
fldcw
in
mov
jle
gs
leave
bound
lods
push
aad
mov
lret
mov
fildl
xchg
lods
pop
mov
mov
and
dec
jae
lret
mov
mov
lcall
cwtl
leave
cmp
mov
mov
adc
pop
pop
das
loop
in
sbb
pusha
sbb
cs
pop
leave
jae
dec
fucomip
out
cmpsb
fldenv
cmp
or
movsl
shlb
dec
das
push
cmp
in
aaa
push
xchg
movsl
in
pcmpeqw
jbe
mov
cmpsb
cs
mov
mov
insl
test
cli
xchg
loop
cmpsb
ja
stos
in
sbb
add
lcall
icebp
lret
dec
inc
cmp
movsb
test
rcrb
lock
cli
pusha
mov
das
int
jecxz
xor
roll
or
dec
or
or
out
pop
pop
lret
or
stos
ret
cmp
xorl
inc
add
loopne
cmpsb
and
das
jecxz
mov
sbb
rorb
aaa
xor
shl
jne
jmp
das
jne
je
pop
pop
mov
inc
mov
xchg
push
xor
dec
cmp
addr16
add
sub
shrl
outsb
test
mov
or
push
xchg
int3
imul
outsb
push
in
add
push
sbb
push
testb
fmull
ja
mov
inc
adc
and
pop
andb
sbb
callw
shll
addr16
arpl
ja
in
jecxz
test
sbb
test
lcall
sub
adc
mov
je
sbb
jl
rcl
mov
sub
mov
dec
pop
and
into
js
stc
xchg
cmpsl
jns
in
int
fcompl
push
lods
fdivrl
shlb
xor
loopne,pt
test
in
push
ljmp
add
inc
pop
mov
ficomps
jno,pt
in
jbe
mov
ret
mov
inc
loopne
cmp
sti
mov
push
loopne
clc
ja
inc
cmpsl
mov
in
mov
clc
dec
jle
adc
ljmp
pop
scas
notb
repz
into
sti
mov
fmuls
pusha
mov
outsb
loop
lret
inc
jge
aas
dec
sahf
lret
test
sub
xor
jge,pn
sub
sbb
sbb
sub
mov
ret
xchg
test
inc
mov
fsubrl
jb
add
mov
lahf
jbe
jns
fsub
adc
cli
mov
daa
loop
adc
push
cld
push
cmpsb
cmp
adc
sbb
cmpsl
mov
inc
fcoml
pop
inc
adc
and
arpl
cs
arpl
fisubl
or
incb
mov
mov
jno
xlat
sub
sub
ds
jb
inc
lea
mov
mov
fs
sub
scas
testl
inc
mov
pushf
push
leave
rep
test
cmp
dec
hlt
cli
jp
or
and
jmp
frstor
sbb
mov
je
and
cmp
push
add
aaa
fcompl
outsb
and
clc
jb
inc
mov
jle
add
inc
fcomip
cltd
sub
xchg
bound
and
mov
mov
inc
sbb
test
dec
and
rcr
add
insl
into
jbe
xor
mov
sbb
pop
xchg
adc
call
insl
sub
stos
inc
sbb
in
into
stc
mov
mov
jo
dec
into
xchg
cli
stc
mov
clc
add
xor
xor
adc
int
adc
fsts
adc
scas
cmp
sarl
int
cmp
mov
mov
xor
insl
dec
adc
sub
call
bound
inc
imul
cs
inc
push
sub
xchg
cmpb
jecxz
inc
shll
jno
or
lods
pop
mov
pop
int3
cmpsl
and
in
shrb
lahf
mov
pop
jne
mov
xchg
mov
sub
push
popf
loop
dec
sub
add
aad
add
cld
in
or
cmpb
and
mov
nop
mov
jmp
sti
sbb
mov
xchg
xlat
cmp
sbb
jns
loopne
mov
xorl
or
in
lret
mov
dec
mov
insb
int
pop
push
les
in
sub
push
push
popf
and
les
test
mov
aaa
inc
into
ja
test
cmp
mov
xor
adc
mov
out
icebp
mov
push
dec
push
js
mov
aam
pop
leave
or
push
mov
add
or
rcll
lds
dec
lret
ds
fldl
addr16
mov
cmpxchg
cmp
mov
adc
mov
shl
sub
int3
jo
dec
sub
cmpsl
add
pop
mov
fildll
and
loop
adc
mov
scas
xchg
jae
mov
adc
push
dec
mov
bound
aad
jl
sub
mov
mov
mov
cwtl
sub
insl
adc
xor
cmp
je
insl
cs
pop
pop
cld
in
shlb
cmp
xor
cmpsb
in
dec
std
sbb
pop
cmp
push
fstl
adc
shrb
xchg
stc
ret
or
push
xchg
pop
mov
pop
xor
adc
push
fneni(8087
cmp
push
data16
lahf
jp
jmp
std
daa
pushw
cmp
adc
mov
test
add
push
cltd
loop
daa
xchg
lcall
jb
push
xchg
adc
jns
mov
in
pop
lods
push
fstpt
or
cmp
mov
roll
cmp
mov
lds
call
in
dec
mov
inc
push
scas
adc
xchg
inc
pop
popf
and
inc
in
inc
outsb
add
jbe
pusha
add
xchg
inc
mov
push
dec
xchg
pop
lret
sarl
out
sbb
jl
pushf
orl
fmuls
adc
hlt
clc
movsl
mov
lret
xchg
mulb
popf
shr
sbb
imulb
addl
jp
aaa
or
adc
out
xchg
icebp
and
mov
rcl
popa
push
jb
lret
idivl
stos
and
mov
push
mov
pop
and
adc
jns
jne
push
sub
pop
fldt
repnz
mov
test
popf
jmp
xchg
int
mov
lcall
ljmp
xchg
aad
cmp
fcomps
mov
jl
cli
inc
cmp
int
je
adc
daa
cmc
mov
ja
mov
movsl
pop
push
mov
lods
push
pop
and
sbb
das
sub
popa
cmp
cmp
imul
in
xlat
inc
cs
imul
xchg
fsubl
enter
out
loopne
lahf
sub
imull
ss
push
jbe
xor
add
fldt
mov
inc
jle
mov
imulb
fsts
cwtl
push
push
dec
xor
pop
or
push
incl
sbb
and
das
cmpb
jecxz
push
pop
cltd
mov
fstpl
xchg
push
mov
xor
inc
and
xor
test
add
cmpsb
or
jnp
cmp
pop
ja
int
loope
cmp
xchg
out
mov
pop
lret
jbe
cbtw
xchg
mov
popa
add
clc
aad
add
fsubr
adc
nop
dec
sub
scas
xchg
jmp
scas
mov
clc
and
push
lret
call
out
sahf
mov
sub
sbb
sub
dec
xchg
into
movsl
movsl
mov
xchg
xchg
lods
add
ret
shr
and
cld
inc
dec
fbstp
jl
iret
sbb
jmp
mov
push
dec
or
negl
mov
jbe
aad
sbb
fimull
and
cmpsl
cltd
pop
or
add
pop
je
test
lds
xor
fwait
int3
sbb
stos
push
push
cld
orb
les
push
adc
push
sub
pop
loope
sbb
or
xchg
movsb
ret
push
pop
scas
imul
ficoms
adc
std
shlb
add
shrb
addl
test
cmpsl
and
mov
cli
push
ret
icebp
cmc
jecxz
dec
cld
test
in
inc
mov
adc
adc
scas
dec
mov
je
pop
das
sbb
add
es
xlat
mov
shll
outsl
xor
xlat
xor
dec
data16
mov
nop
out
push
cmp
push
jg
xchg
cmp
adc
aad
sti
xchg
dec
xor
lds
xchg
leave
mov
mov
sbb
call
dec
pop
loop
mov
jg
fisubl
xor
dec
dec
mov
pop
shlb
pop
inc
cmp
mov
xchg
pop
cmp
leave
jb
aaa
pushf
and
inc
iret
lds
mov
and
pop
and
nop
mov
or
xchg
mov
jno
out
nop
xor
mov
std
out
movsb
dec
xchg
cmpsb
inc
sub
fidivl
sub
lcall
roll
xchg
inc
int
dec
jecxz
out
mov
push
out
dec
and
nop
sbbb
adc
imul
jb
jg
ljmp
es
mov
mov
mov
icebp
mov
mov
xchg
lods
movsb
push
cmc
xchg
and
ja
jmp
jmp
mov
mov
dec
push
andps
aad
pop
push
inc
fcmovnbe
mov
add
mov
stos
test
and
cmp
jbe
imul
movsb
call
mov
or
out
lcall
scas
insl
add
jmp
fldt
cmp
jecxz
jb
dec
inc
std
or
jae
push
ds
mov
repnz
dec
mov
dec
ret
jge
cs
jnp
ret
cmpsb
mov
xchg
or
mov
loopne
fs
int
cmp
pop
aam
imul
jns
jmp
or
mov
les
mov
repz
dec
stos
pop
dec
testl
adc
mov
test
jmp
int
sahf
pop
dec
out
push
arpl
and
sbbl
in
or
cmc
sets
or
negb
in
xchg
outsl
inc
lahf
sub
lds
ss
xlat
loop
leave
das
or
pop
jl
push
outsb
or
pushf
in
jge
arpl
mov
jae
sub
out
or
scas
jbe
fcoml
sbb
fs
call
mov
or
xchg
in
jg
jmp
inc
adc
jmp
pop
or
fstpl
mov
shrl
adc
mov
mov
and
cltd
sbb
fsubl
nop
inc
cmp
sbb
add
in
insl
int3
xor
inc
inc
cmp
pop
xchg
out
jecxz
inc
stc
jmp
pop
inc
test
repnz
iret
mov
imul
jbe
jne
test
dec
push
pop
leave
mov
and
or
fidivrl
mov
sti
push
jmp
sbb
pop
xor
mov
sub
sarl
incl
sbb
adc
fldt
out
mov
ret
jno
orl
or
xchg
adc
xor
adc
fidivl
insb
xchg
add
mov
push
ss
sub
add
adc
mov
je
jb
fdivs
xor
and
jge
or
sbb
push
mov
icebp
sbb
push
int
or
aaa
xor
jmp
sbbb
dec
lret
pop
adcb
lea
stos
je
cmc
add
cld
push
push
mov
pop
cld
out
test
jle
wbinvd
jns
pusha
cmpsl
cmpsb
pop
shl
pushf
sub
jb
xchg
daa
inc
shr
inc
cmp
and
adc
adc
repz
lcall
fsubrs
scas
add
lods
in
cmp
scas
test
test
lret
aad
fs
mov
shlb
adcb
out
loopne
or
xchg
mov
sub
xor
xchg
repnz
les
dec
dec
adc
mov
arpl
insl
test
fsubrl
push
fisttps
fisttps
lcall
pusha
mov
popa
sbb
ljmp
sub
sbb
je
lock
sub
gs
adc
testb
shlb
movsb
dec
insb
ljmp
das
cmc
int
popa
pushf
push
outsb
leave
cmp
mov
and
hlt
in
push
pusha
rcl
mov
insl
pop
and
sub
out
leave
daa
jnp
repz
xor
adc
pop
xor
out
mov
test
sub
xchg
dec
or
inc
adc
xor
xchg
lds
xchg
int
in
xor
out
adc
testl
dec
or
inc
pop
orb
mov
pop
mov
push
mov
push
adc
hlt
clc
lret
gs
or
mov
repz
cmpsb
fdivp
adc
call
ja
mov
cmc
test
in
pop
pop
lods
add
add
dec
fsts
sub
ljmp
xchg
js
imul
adcl
test
xchg
xchg
jns
cli
xchg
xor
mov
dec
cmp
imul
insl
jnp
es
les
aad
ret
sub
int3
lahf
adc
fistpl
nop
mov
sub
pushf
jnp
jno
mov
outsb
xchg
ja
ds
jo
push
mov
loope
or
aaa
test
adc
mull
mov
cmp
imul
and
jmp
sbb
pop
xor
les
leave
ljmp
or
dec
mov
stos
shrl
jne
add
out
pop
sub
fcmovb
scas
sahf
das
hlt
pop
clc
insb
jecxz
push
mov
insl
and
repz
cs
mov
push
std
inc
add
xchg
mov
dec
sub
dec
scas
aam
bound
mov
and
ss
sbb
cmp
sbbb
adc
mov
push
ret
mov
repz
add
mov
test
jecxz
cmp
or
fdivrl
add
or
pop
dec
push
jp
inc
push
outsl
jle
mov
push
jnp
xchg
out
out
lods
stc
xchg
arpl
mov
add
push
or
es
int3
stc
adc
xchg
int
lret
sarb
jo
sbb
mov
cmp
or
loope
cmc
push
shrl
fs
jb
and
push
and
data16
outsl
leave
sbb
mov
jle
and
je
pusha
mov
lock
cltd
jp
add
xchg
jecxz
adc
das
test
pop
pop
outsb
nop
dec
fiadds
clc
jge
mov
sbb
cmc
or
xchg
jae
inc
or
mov
lods
cmp
repz
sub
in
sbb
rcrl
movsl
pop
iret
out
or
in
mov
and
andb
push
hlt
or
mov
sbb
push
insl
mov
cmp
les
mov
stos
sbb
jp
testb
scas
xchg
cmc
pop
push
sbb
jae
sbb
jl
movsl
lods
cld
push
test
stos
or
loope
xchg
mov
outsb
sub
into
into
mov
push
push
mov
shlb
ja
out
jle
mov
pop
ljmp
sub
or
aam
and
jp
jmp
pop
mov
pop
dec
ja
fnstcw
sub
shll
add
jno
test
xchg
movsb
jae
xor
sub
adc
ret
adc
sarl
jbe
lret
int3
pop
xchg
inc
inc
and
cmc
pop
mov
and
mov
adc
sbb
pop
sti
mov
jbe
inc
sub
lret
aad
and
or
movsl
sbb
cmp
ficompl
lea
stc
sti
dec
shll
and
call
mov
arpl
sarb
xchg
adc
xor
and
push
mov
xor
les
sahf
sbb
je
lret
or
stc
gs
pop
xlat
call
or
xchg
pop
icebp
iret
rcr
xor
cmpsl
mov
sbb
cmp
repnz
stos
xor
fistpll
pop
lcall
add
push
sbb
lods
icebp
sub
mov
sub
push
adc
loopne
cmc
jp
jle
dec
push
pop
mov
mov
nop
clc
sarl
sarb
repnz
ss
enter
fs
mov
int3
cli
dec
xor
mov
cld
pushf
cs
fcoml
mov
aas
mov
inc
xlat
dec
stos
mov
xor
mov
cmpsl
xchg
roll
mov
aam
in
jnp
dec
inc
and
push
xchg
mov
xor
fwait
clc
xor
sub
pop
push
and
cs
cmc
mov
push
pop
push
xchg
imul
or
cltd
gs
out
incl
jle
les
jne
push
pop
xchg
adcb
push
push
rorl
test
jle
and
push
push
jmp
cwtl
mov
pushf
das
imul
xchg
ss
push
push
xchg
or
fimuls
jmp
mull
aas
push
lahf
mov
test
add
mov
xor
add
icebp
ret
js
rorb
mov
aad
adc
cmp
out
adc
mov
outsb
sub
cld
pop
cmp
or
or
xchg
int3
fisubl
ret
xor
or
stos
out
mov
lcall
jle
xchg
dec
aad
lods
cli
mov
mov
mov
ja
mov
xchg
jle
shr
jp
mov
add
mov
shlb
fwait
jl
hlt
out
pop
insl
scas
xchg
or
pop
push
xor
mov
inc
inc
movsb
push
fadds
ret
sub
pop
xchg
xchg
add
mov
push
dec
push
xchg
sbb
rcrb
inc
cmp
aam
mov
sbb
inc
jle
xchg
mov
addr16
mov
inc
jg
cld
int3
xchg
aas
aas
bound
scas
inc
xchg
pop
inc
jno
mov
adc
inc
aam
mov
mov
iret
xchg
loope
repnz
pop
fsubr
hlt
dec
test
insl
xchg
add
xchg
divl
movsb
xchg
mov
pop
push
xor
cmp
sbb
and
aam
mov
push
dec
jae
or
mov
dec
gs
dec
or
add
enter
stc
sub
jmp
pop
jge
sbb
xchg
pop
aam
clc
sbb
lret
inc
mov
sbb
enter
sub
dec
mov
fs
adc
sti
fcoms
out
sub
xor
xchg
mov
mov
lcall
jb
jno
dec
adc
repnz
ds
stc
push
xor
and
mov
div
shlb
test
or
lahf
xorl
push
xorb
jo
add
xchg
fldt
int
in
mov
fmull
clc
pop
test
andl
imul
lods
and
mov
test
fldl
push
fiadds
popf
loop
int
and
lret
mov
xchg
add
test
pop
mov
lock
icebp
adc
or
fwait
jmp
jp
pop
xchg
jno
daa
mov
shlb
jge
jns
jg
fisttpll
pop
fists
lods
xchg
je
daa
hlt
jo
lret
add
shrb
add
mov
das
gs
fcompl
push
fwait
sub
dec
fmull
inc
mov
lahf
mov
arpl
or
push
mov
sub
enter
and
in
xchg
inc
in
xor
aas
shr
ljmp
xor
das
sbb
fstps
pop
in
scas
adc
not
push
cmp
mov
pop
sbb
hlt
call
insb
xchg
xor
movsb
or
pop
xor
push
ja
sbb
repnz
cmp
fyl2xp1
jecxz
lcall
push
mov
or
push
xor
jo
mov
jg
xor
inc
stos
in
cli
dec
push
xchg
hlt
ret
in
fadd
lds
push
stc
imul
mov
and
jl
add
mulb
mov
mov
and
or
fstl
movsb
adc
leave
push
cli
inc
into
jp
push
aas
sub
or
inc
adc
xchg
adc
dec
dec
inc
les
icebp
or
or
les
int
andl
inc
test
and
jmp
and
jo,pn
pop
fcmovb
xor
lods
movsl
sbb
and
out
stc
and
push
jmp
adc
lods
and
push
inc
ja
mov
leave
insb
imul
ljmp
icebp
roll
push
punpckhdq
add
out
in
xor
xor
repz
push
int
jmp
aaa
pop
xchg
cmp
fidivl
pop
and
loopne
imul
mov
mov
cmpsl
mov
imul
jbe
cli
adc
iret
pop
or
adc
scas
push
das
popf
pop
mov
popa
mov
sti
jle
imul
jle
cs
cmc
dec
cmp
jae
push
lret
inc
out
inc
scas
enter
fwait
aaa
cmp
mov
loope
lods
mov
pop
and
lea
inc
adc
divb
and
inc
inc
fsubs
sbb
adc
pop
push
in
es
sub
mov
enter
popa
xor
add
jmp
loop
push
jbe
orl
mov
cmp
leave
fsubrl
lds
cli
fiadds
int
jb
loope
sahf
jb
clc
add
js
and
adc
inc
enter
sbb
dec
cli
sti
cmpsb
pop
adc
das
test
inc
sahf
fstpt
xchg
cwtl
test
pop
sub
mov
pop
mov
sub
and
inc
popf
ja
aad
mov
inc
outsl
mov
lcall
dec
aaa
push
imul
in
out
fisttpll
inc
xchg
lahf
lcall
aad
dec
daa
rcrb
hlt
mov
cld
ss
in
int3
pop
sub
jg
enter
in
mov
add
les
mov
mov
gs
mov
xlat
mov
add
rcrb
imul
fbstp
sahf
push
sub
ficompl
pop
or
pop
daa
mov
loope
add
shll
insb
loop
sti
xor
fistpll
repnz
xor
jmp
xlat
aam
cs
adc
jp
adc
shlb
iret
scas
and
iret
and
mov
in
sbb
sbb
popf
jg
std
add
daa
int
jbe
pop
rcll
sahf
adc
mov
jb
iret
jg
push
jg
inc
loop
lret
ret
xor
inc
test
mov
daa
xor
ficoml
stos
xchg
leave
loope
pop
shrl
ffree
push
repz
cli
out
xor
lea
aaa
stos
pop
xchg
insl
sub
das
mov
jmp
jge
add
dec
push
mov
fists
mov
and
jns
adc
jp
xor
in
ljmpw
pop
negl
pop
std
and
jnp
push
mov
rcl
sbb
add
sub
int3
sub
scas
lock
push
mov
imul
sbb
sub
cld
pop
jle
push
xchg
popa
scas
mov
popa
leave
jp
sub
adc
loope
les
inc
addr16
cmpl
jnp
jp
lea
push
or
fwait
inc
daa
std
cs
pushf
cmp
adc
push
jbe
ds
xorb
and
mov
cld
cmc
lock
xchg
out
mov
roll
je
mov
sbb
inc
jbe
enter
pusha
mov
addr16
xchg
jo
xor
xor
fnsave
stc
mov
add
mov
ja
cmp
mov
imul
xor
sahf
inc
adc
pop
jb
add
jecxz
sub
fidivl
xchg
jmp
push
sub
jnp
cmc
rolb
xor
pop
aad
stos
rcrb
add
rcrb
imul
jnp
adc
xchg
push
mov
pop
imul
jno
push
cs
and
jae
mov
push
shrl
stos
movsb
and
push
data16
fs
out
std
orb
aaa
in
jnp
mov
outsb
clc
cli
mov
in
push
mov
orl
sbb
pop
xchg
mov
jle
stc
scas
cmpsb
xor
gs
push
shrl
push
mov
sub
inc
fistl
loope
aas
jbe
call
repz
hlt
call
mov
pop
fstps
mov
dec
fstpt
lock
jmp
in
lret
andb
lds
inc
es
pop
pop
push
mov
orl
mov
rol
cmpsl
jns
ret
in
jae
jbe
shrl
lret
test
sub
add
xchg
xchg
add
cmp
repz
dec
pop
push
and
orl
test
aam
mov
nop
pushf
jno
lret
rorb
push
pop
push
or
cmp
icebp
add
mov
lods
jg
pop
jecxz
clc
pushl
int
mov
adc
call
orl
xor
in
cwtl
xchg
push
mov
lods
in
xchg
push
dec
push
mov
popa
cmp
xchg
xchg
or
mov
xor
push
hlt
fldenv
incb
in
stc
sbb
jecxz
lock
and
push
fs
clc
test
mov
xor
cmp
add
cmp
or
sub
mov
xchg
jecxz
push
aaa
gs
adc
inc
shll
mov
ljmp
mov
sbb
sub
lahf
lret
xchg
xor
jb
push
jmp
inc
pop
push
sbb
nop
push
pop
insl
xchg
adc
jmp
aas
test
xchg
inc
mov
mov
fidivl
mov
jnp
mov
nop
loope
inc
xor
sahf
xor
lea
shl
sbb
sub
pop
dec
push
andl
push
or
add
xor
inc
mov
lock
jge
push
mov
movsl
mov
jae
xor
dec
test
clc
xchg
cmp
cmp
outsl
pop
push
insl
sub
iret
add
sbb
mov
test
negl
js
push
sbb
notl
mov
ljmp
nop
out
pop
out
inc
pop
lret
pop
inc
mov
mov
pop
rcll
gs
fwait
jns
cmp
pop
or
enter
xchg
pop
iret
cmp
icebp
insl
mov
cmc
jle
mov
rolb
pusha
iret
mov
jb
pusha
and
cwtl
sub
mov
rcrb
mov
sbb
cmp
insb
add
push
ficoms
mov
push
cs
jp
jmp
fbstp
jle
dec
fistl
mov
sub
add
xor
xchg
fidivs
shlb
out
sbb
xlat
jns
out
adc
filds
in
insb
sbb
imul
stos
lea
std
out
pop
into
dec
mov
xchg
xchg
xor
jno
xlat
push
dec
out
xor
or
fiadds
popf
mov
sub
into
pushf
sbb
dec
sub
pop
dec
pop
pusha
aaa
push
mov
imul
jnp
adc
arpl
add
jg
sbb
pop
scas
pop
push
push
or
ljmp
out
stos
mov
test
cmc
adc
mov
daa
jle
shll
subb
repnz
insb
cld
xorl
mov
dec
mov
sub
jecxz
outsl
repnz
xchg
outsl
loop
mov
jg
xchg
mov
out
fcmovu
inc
outsb
push
mov
les
cmp
sbb
jae
aam
add
and
orb
adcl
mov
adc
fidivs
mov
loop
in
push
stos
pop
xor
adc
and
int
fisubrl
push
sarb
jne
sbb
adc
jbe
ds
push
std
les
fiaddl
out
xorb
jo
out
cmp
mov
push
jge
cmp
adcb
and
push
test
into
popf
ds
cs
add
jns
jmp
ret
mov
fcoms
push
xchg
xor
frstor
roll
jbe
lea
cmp
pushf
mov
in
pop
add
pop
scas
bound
out
sbb
scas
data16
dec
test
push
std
ljmp
xchg
out
shl
adc
xor
and
sub
jp
pop
jbe
stc
push
cmp
add
xor
jns
loope
jae
mov
into
out
add
sbb
imul
out
mov
mov
dec
jecxz
int
mov
xchg
and
dec
lods
rorl
dec
popf
fadds
aas
jecxz
and
xchg
pushf
sbb
cmpsl
jnp
insl
fisttps
jae
sub
cmc
sbb
lds
push
movsb
dec
test
xor
mov
mov
and
fiadds
mov
pop
pop
mov
and
jecxz
aam
dec
ja
int
aaa
sub
outsl
cmc
adc
andl
push
fcomps
icebp
in
push
jno
dec
inc
add
jp
popf
mov
cmp
xor
xor
loope
fisubs
rorl
mov
pop
mov
or
jg
out
pop
mov
push
jb
pop
mov
movsb
call
nop
je
add
ljmp
inc
cld
dec
mov
mov
vpackssdw
and
iret
lods
mov
jl
pop
dec
mov
cmc
shrb
in
out
pop
shlb
sub
sbb
push
mov
inc
in
pop
je
or
mov
stos
out
push
nop
pop
pop
insb
fisttpl
ficomps
and
in
fiaddl
dec
aam
inc
push
and
scas
mov
sbb
cmpsb
inc
mov
add
lret
xor
into
ja
jmp
mov
and
fsts
cmpsl
aaa
loopne
lret
or
adc
sbb
pop
push
fcomps
or
push
pop
xor
lods
insl
xlat
pop
enter
fsubl
mov
popf
ss
dec
cmp
or
cwtl
push
int
push
push
cltd
pop
and
pop
leave
cmp
jl
mov
xchg
adc
aas
mov
or
mov
push
insl
inc
mov
and
cmpsl
icebp
mov
pop
pop
jb
jmp
push
push
add
test
inc
and
lock
pushf
jl
out
push
push
enter
dec
inc
rcll
push
jg
jl
test
in
jne
inc
daa
mov
xchg
sub
sub
adc
xor
jp
sub
or
scas
xchg
cmp
sub
cmpl
cltd
xchg
jae
or
lret
sub
fidivrs
push
and
testb
aad
cmpsl
lea
cmp
xor
mov
std
mov
jne
je
aad
xor
cmp
xchg
lods
dec
jnp
out
ret
mov
fidivl
fdivr
hlt
imul
add
fdivrl
cmp
dec
fdivl
fs
mov
xor
iret
sahf
cmpsl
push
mov
pusha
pop
pop
daa
pop
mov
out
repnz
cli
pop
cmp
sbb
add
xchg
imul
fidivrs
cmp
add
sbb
xor
push
pop
push
scas
divl
scas
and
sub
push
xchg
ret
pop
ja
or
jo
adc
xchg
lret
pop
mov
inc
popf
mov
sbb
xchg
ja
mov
xlat
adc
xchg
in
cmc
or
jg
imul
outsb
ret
jnp
mov
movsl
cmc
fnstcw
fisubs
int
std
push
push
mov
cld
push
cmp
sbb
cli
jecxz
dec
pop
jns
sti
sbb
rorl
xor
jle
gs
ss
out
jns
pop
xchg
cmpsl
inc
and
je,pt
mov
ss
fwait
or
cmpsl
testb
mov
incb
pop
push
in
and
push
pop
cmpsb
loop
mov
cmp
xlat
fdivp
mov
mov
cmc
vpsrad
mov
or
daa
hlt
dec
test
xchg
dec
sub
sub
jl
sub
idivb
xor
cmp
je
push
sbb
out
lcall
scas
in
inc
in
jmp
fisttpl
pop
adc
nop
out
ja
test
cmp
add
lcall
or
lock
xchg
jg
cmp
push
lock
jo
inc
stos
mov
lsl
aaa
lcall
enter
xchg
jmp
into
adc
stos
and
movsb
rcrb
inc
and
test
sbb
mov
cmpsb
movsl
adc
sarb
lret
cmpsb
push
movsl
adc
je
shrb
jnp
add
iret
incl
in
ja
sbb
xchg
loopne
loopne
mov
roll
cmp
cmp
in
sti
je
add
pushf
xchg
cs
mov
bound
cmc
mov
cmpsb
sub
jge
inc
adc
xchg
pop
inc
dec
fisubrl
lret
jp
adc
or
in
cli
out
pop
adc
aam
js
sbb
js
pusha
push
mov
push
roll
daa
jl
out
out
push
test
or
cmpsl
jbe
aad
jmp
cmp
inc
cmp
mov
movsb
xor
dec
mov
enter
or
cwtl
push
adc
adcb
mov
fistpl
dec
push
imulb
and
addr16
jnp
aaa
sbb
cmp
test
inc
jbe
jg
push
sti
arpl
push
leave
popl
adc
movzbl
fildl
jnp
in
in
mov
imul
xor
ret
lods
xor
pop
add
movb
leave
jg
aad
xor
repnz
jg
cmp
pop
mov
adc
int3
add
outsb
mov
or
xchg
comiss
shll
sub
pmuludq
aas
cmpsb
fwait
push
cld
push
push
sub
or
dec
repz
xorl
rclb
cmp
bound
jg
adcb
clc
sub
fwait
or
rcr
fs
or
sub
add
lcall
out
pop
xorb
xor
mov
dec
loope
mov
push
jne
pop
sub
cs
mov
leave
cwtl
xchg
pop
inc
mov
movb
mov
ret
pop
fstpt
inc
sarl
xchg
sbb
scas
fimuls
lock
inc
inc
in
sahf
jge
or
cmpsl
mov
mov
add
jns
incb
xchg
adcb
add
push
cmp
jg
stc
cltd
fwait
cmc
es
mov
push
stos
push
lds
repnz
inc
shrb
cltd
adc
mov
cmp
pop
adc
stos
xor
and
add
bound
xchg
sub
lea
out
mov
jo
pop
addr16
sub
rclb
or
cmp
sub
inc
and
lock
pushf
leave
mov
mov
fists
cmp
mov
lds
mov
jnp
loopne
pusha
ret
jmp
lods
inc
test
jns
mov
ret
push
lds
mov
xchg
out
mov
adc
jnp
adc
mov
inc
insl
sub
mov
pop
test
dec
fwait
jae
jnp
xchg
leave
leave
ljmp
mov
push
pusha
fcoml
and
punpckhdq
pop
sahf
mov
add
push
call
push
mov
xchg
adc
add
sahf
jb
or
adc
fidivrs
mov
or
and
jge
lea
pushf
dec
dec
ss
mov
clc
into
add
pop
push
lea
dec
inc
sbb
adc
insl
jle
pop
into
loop
lods
lret
mov
data16
mov
fdivrs
psllq
sahf
sbb
out
mov
xor
dec
sqrtps
enter
rorb
jg
das
xor
pop
and
xchg
fs
sbb
push
xor
scas
das
rorl
in
cwtl
xchg
and
popf
or
subl
sar
arpl
push
cli
pop
adc
gs
push
test
sub
int3
dec
call
add
sbb
sbb
adc
nop
dec
cmp
cmpb
cmpsl
and
sbb
jecxz
add
dec
movsb
mov
jne
lods
popf
jne
out
outsb
test
ds
xlat
adc
or
cld
sub
jg
lret
jp
repz
iret
dec
sahf
fisttpll
adc
adc
jg
mov
jp
pop
aam
pop
xor
and
push
push
or
sbb
shll
aam
fwait
in
subb
jb
pop
sar
in
arpl
pop
lock
or
push
push
jp
add
jb
and
xor
and
mov
adc
inc
ss
movsb
or
inc
cmpsb
call
push
mov
ljmp
icebp
fdivs
daa
and
add
das
sub
pop
mov
jns
outsb
mov
mov
inc
jno
xor
lods
sti
cmp
shrl
int
xchg
loope
inc
sbb
fiaddl
pop
mov
fsubs
aas
add
lret
lahf
push
xchg
add
cltd
jo
faddl
cmpsl
rcrb
out
mov
xchg
fistps
jge
jno
sub
sbb
cmpsb
nop
rcrl
xor
daa
in
aaa
les
xchg
hlt
jo
cwtl
pop
cmp
lahf
cmp
jmp
out
adc
and
push
mov
xchg
dec
shl
std
xor
add
movsb
xlat
cmp
xchg
pop
xchg
add
aaa
roll
rclb
lods
int3
pop
cmp
dec
inc
mov
pop
xchg
xchg
mov
xor
pop
das
inc
mov
iret
rol
lock
lods
clc
loopne
inc
inc
pop
dec
int3
mov
cld
xchg
and
jno
pop
in
lods
jg
sbb
bound
imul
sar
or
mov
fcmovne
imul
outsb
cmp
int
dec
aas
dec
pop
mov
sbb
sub
mov
fnstcw
sbb
mov
in
pop
add
and
cmc
add
cmpsl
or
sbb
cmp
sub
and
inc
cmp
push
push
xorl
add
dec
xor
mov
xchg
js
and
or
cs
jnp
popf
xchg
xor
jle
repnz
imul
mov
dec
cmp
ret
adc
xchg
jno
ljmp
pop
cld
jecxz
dec
shrl
popa
jbe
movsl
aad
jmp
jp
lods
into
rcrl
dec
cmc
mov
or
gs
sbb
xor
stos
jecxz
stos
mov
mov
scas
sub
inc
mov
pop
mov
sub
test
mov
or
xor
inc
and
inc
dec
je
dec
in
lcall
and
imul
jp
imul
xchg
jb
ds
pop
mov
aas
dec
dec
inc
repz
jmp
ficoml
jne
inc
push
dec
leave
mov
cmp
dec
inc
das
call
ret
out
das
fbstp
push
repnz
jle
xchg
xchg
cli
testl
test
sub
cltd
lret
andb
aaa
icebp
xchg
pop
mov
loop
and
mov
cvtps2pi
xchg
dec
add
hlt
dec
stos
loopne
push
outsl
jg
sbb
aas
push
xchg
outsl
sbb
sbb
push
push
lret
ja
fnsave
mov
cmc
clc
lret
test
sub
adc
cltd
mov
dec
xlat
mov
push
jb
and
mov
mov
xchg
hlt
pop
cmp
frstor
inc
add
lds
push
pop
jl
pushf
je
xor
mov
in
xlat
sbbl
int3
inc
je
cmp
arpl
aam
and
enter
test
faddl
jl
pop
sbb
jmp
fildll
and
stos
inc
mov
or
xorl
pop
pop
iret
and
aas
sbb
jecxz
mov
lods
movsl
and
jbe
and
je
and
adc
pop
arpl
pop
shlb
xlat
mov
test
cmp
adc
sahf
pop
cmp
into
lcall
sahf
ja
mov
pop
rorl
pop
mov
xorb
movsb
subb
mov
cmp
outsb
cld
int
andb
imul
inc
cmpsb
inc
dec
es
push
adc
decl
test
pop
xchg
pop
pop
fwait
mov
ror
sbb
mov
push
push
inc
xchg
mov
sub
fmull
xor
dec
enter
jno
bound
insl
ljmp
xor
pushf
pop
into
adc
stos
gs
rcl
stos
sub
mov
fs
repz
inc
mov
imul
cwtl
pop
fwait
arpl
iret
ds
mov
aad
nop
cltd
popa
pop
xlat
jbe
or
loope
push
xor
fcmove
xchg
add
rclb
iret
dec
sub
ljmp
jns
dec
out
dec
mov
sbb
dec
sar
scas
lods
mov
inc
xchg
inc
xor
int3
ret
loopne
into
xchg
fisttpl
or
leave
mov
sub
idiv
pusha
int
jle
jecxz
cltd
jecxz
fists
ljmp
add
mov
mov
movsb
add
add
adc
or
adc
fwait
pushf
jle
pusha
inc
je
pop
mov
sub
cwtl
hlt
and
add
jne
sub
xlat
cmp
lds
mov
cmp
es
decl
pop
add
jne
xor
aas
xchg
std
sub
stos
jb
mul
fdivrs
test
in
enter
and
outsb
int3
fmull
mov
psubsb
inc
std
pushf
push
xor
aaa
ret
pmaxsw
or
fucomi
push
lcall
idivl
sahf
popf
xchg
mov
sbb
add
shrb
sub
mov
or
iret
push
or
lret
mov
inc
cmpsl
cmp
sarl
imul
jl
imul
sahf
lahf
bound
cmp
sub
std
and
gs
es
cmp
insl
jge
imul
lods
pop
sbb
inc
mov
cmp
mov
leave
in
xchg
xorb
iret
loopne
lcall
pop
fstps
pop
ja
je
leave
ja
mov
or
jl
lds
in
jg
dec
sub
popf
push
sub
jb
cmp
out
movsl
ljmp
xchg
fwait
stos
pop
mov
popw
push
inc
and
cmp
pop
and
ret
adc
xchg
ljmp
es
mov
fnsave
pop
test
in
sub
out
jmp
lret
stos
xchg
cli
insl
sbb
cmpsl
push
adc
add
inc
add
push
mov
jle
mov
into
add
or
aam
jnp
xchg
fists
lret
sub
out
pop
jno
mov
pop
js
aam
push
push
ret
jmp
pop
jo
and
push
push
xchg
ror
stos
dec
jg
sub
ficoml
cmp
xchg
stc
stos
pop
or
fwait
dec
mov
jo
roll
lret
mov
pop
dec
mov
sub
push
hlt
std
in
cmp
test
aas
xchg
xchg
sbb
adc
nop
or
adc
mov
jecxz
enter
xlat
sbb
mov
sub
dec
adc
adc
js
inc
icebp
lret
lcall
sub
shrl
repnz
lods
cmp
sub
cmpsl
jl
lds
push
sub
jmp
dec
adc
mov
in
inc
inc
jns
punpcklbw
scas
sub
daa
cld
push
push
fsubrl
leave
push
cltd
cmp
jmp
lret
mov
dec
and
jg
push
sub
int
fs
popf
lods
mov
cmp
and
movsb
aad
ljmp
inc
xchg
out
insl
lcall
repz
jb
sub
add
or
sbb
jecxz
push
or
imul
or
add
rcl
mov
cmpsl
jmp
rol
cs
outsb
mov
and
fisttps
outsb
mov
pop
cmp
aad
popa
decl
sbb
jmp
shlb
fwait
in
xchg
jno
add
xor
in
xchg
jp
jns
fisubrs
pop
movsl
cmp
mov
test
call
sub
mov
ret
push
mov
lret
stos
in
push
or
cmp
mov
mov
add
loop
jmp
mov
adc
outsb
std
hlt
lock
insl
ss
dec
stos
cld
push
in
sub
fistpl
jmp
lock
out
dec
inc
pop
mov
or
mov
nop
lret
stos
mov
jno
or
jmp
movsb
in
fcmovnbe
pop
xor
in
nop
sbb
les
pop
adc
sbb
mov
xor
mov
ror
cltd
xchg
sahf
clc
mov
inc
pop
mov
lea
test
sub
stos
in
push
ljmp
lods
xchg
popf
sbb
out
jbe
in
leave
call
andb
iret
push
xchg
mov
push
push
cmp
std
dec
sar
jle
jmp
cmp
dec
mov
imul
out
insl
in
cmpsl
mov
data16
mov
out
xchg
in
xlat
lock
push
mov
sub
popf
xchg
fucomi
add
sub
std
lret
pop
movsb
or
test
adc
mov
mov
jle
cld
rol
xchg
sub
xchg
out
int
add
cmpsb
sbb
inc
insl
fimuls
pop
cmpsb
sti
pop
pop
mov
jecxz
gs
aad
or
scas
sbb
test
jl
icebp
cmpsb
mov
or
in
fs
addr16
cs
out
dec
push
jo
pushf
or
xchg
adc
stos
push
hlt
dec
add
or
dec
pop
cmp
pop
jmp
cmp
push
cmc
sbb
jbe
test
mov
mov
lock
cmp
lock
ret
inc
xor
nop
pop
daa
pop
cwtl
add
loopne
add
hlt
and
out
mov
jb
jle
push
inc
xchg
mov
and
sub
outsb
enter
lret
jg
loope
icebp
ds
lcall
sbb
cmp
pop
das
and
cld
xchg
lods
cli
repz
mov
or
xor
fwait
mov
movsl
lds
sub
lret
pop
add
popa
loop
out
jne
popa
mov
and
fidivrs
inc
mov
fistpll
mov
js
xlat
sbb
cli
paddusb
ljmp
pop
ret
jbe
mov
mov
cmpsb
cmp
xchg
addr16
mov
popf
push
sbb
lcall
sbb
jbe
xchg
fs
test
loop
add
push
xor
jbe
shll
loope
xchg
les
and
inc
fs
loopne
cmp
imul
in
dec
imul
jl
push
clc
aam
shlb
pop
rorb
xchg
pop
pop
mov
repnz
roll
int
popa
sub
call
cld
js
push
jb
inc
or
sti
lods
cwtl
mov
and
xor
lock
divl
push
cmp
pusha
js
cwtl
je
jp
rclb
jo
ja
xor
mov
mov
xchg
adc
mov
lret
xchg
and
leave
mov
inc
mov
cs
jb
pop
shll
int
lea
sub
pop
iret
test
push
adc
shlb
pop
mov
sub
cmp
inc
xchg
cltd
or
and
stc
add
or
cmpl
jp
loop
ret
fstps
jae,pt
mov
jbe
lahf
dec
pop
mov
call
leave
test
pop
inc
push
icebp
cltd
sub
sbb
fisubrl
jp
push
roll
or
sub
popf
addl
and
sub
fcomp
push
push
mov
int
sti
mov
mov
xor
inc
mov
das
aad
or
sbbb
sub
test
pop
ds
fildl
dec
and
adc
icebp
shll
movsl
jp
cmc
aam
dec
xchg
lahf
call
pushf
sub
add
xor
ror
or
push
stc
mov
add
repz
pushf
push
fistps
rcll
mov
mov
pop
mov
inc
mov
in
xor
rcrb
push
lods
push
sti
std
xlat
shll
enter
jne
mov
or
rclb
and
push
mov
ss
add
pop
out
xor
pop
mov
jecxz
je
ja
movsl
and
sub
sub
lcall
pushf
movl
add
sbb
or
pop
clc
cld
add
push
pop
fimuls
shrl
and
repz
add
or
repnz
popa
mov
cld
cmp
int
daa
sbb
rolb
in
xchg
pop
int3
xor
cli
cld
inc
mov
test
cmp
and
and
sub
es
dec
dec
cli
inc
inc
push
jbe
mov
adc
jbe
cmp
xor
out
das
lret
sub
add
ficomps
lret
add
push
inc
add
xor
and
pushf
ds
inc
or
adc
adc
push
mov
push
dec
fnsave
push
add
std
sbb
insl
xchg
inc
aad
cmp
sahf
aam
movsl
cmp
insb
xchg
test
xor
push
add
fisubs
lds
out
bound
fisubl
mov
adc
adcl
mov
outsl
mov
mov
sbb
hlt
jmp
add
cmc
dec
sbbl
movsb
mov
jp
hlt
fwait
xor
pop
ljmp
pop
xchg
adc
aam
out
mov
mov
outsb
and
fimuls
cmp
imul
inc
cmpsb
test
pop
imul
add
push
xor
test
sub
mov
xchg
cmp
xor
mov
std
push
dec
or
ja
out
in
pop
test
bound
ret
out
int
jae
xchg
cld
clc
stos
jbe
ja
in
sub
iret
data16
stos
dec
bound
out
xchg
leave
sub
pop
shll
mov
lods
imul
inc
out
add
xor
and
mov
push
xchg
or
fisubrs
mov
das
pop
mov
arpl
sbb
xor
jecxz
aaa
arpl
xchg
jno
test
cs
ffreep
jp
mov
dec
sub
adc
ja
leave
xor
mov
mov
xchg
jbe
roll
xchg
fst
jle
cmp
movsl
mov
repnz
jg
push
pop
mov
aaa
inc
rcrb
int3
push
lds
shl
je
xchg
or
and
cmpsb
mov
mov
adc
and
lods
lods
lcall
xlat
pop
pop
stc
lea
cltd
sbb
cmp
test
add
and
push
scas
imul
in
add
jns
push
jno
mov
shr
jmp
fldenv
out
and
clc
jl
sbb
call
add
subl
push
mov
insl
inc
aad
enter
pop
jo
push
dec
xor
mov
inc
sbb
push
shlb
pusha
pushf
bnd
jle
mov
push
subb
stc
out
in
lock
xchg
mov
sbb
ljmp
mov
shlb
xor
jno
out
call
sbb
mov
fwait
inc
cmp
mov
hlt
rorl
rolb
pusha
aam
inc
add
popf
dec
cld
fidivs
fs
jl
cmp
fwait
mov
scas
in
cmp
adc
into
add
jns
inc
outsb
mov
xlat
outsl
pop
test
mov
mov
xlat
test
nop
mov
and
xchg
test
dec
or
mov
mov
lret
in
pop
xor
mov
lcall
les
and
les
mov
cmp
dec
xchg
iret
aam
sbb
mov
xchg
or
push
push
mov
stos
loopne
sbb
test
pop
das
scas
jo
sahf
xchg
mov
mov
in
inc
js
lcall
pushf
jg
das
pushf
out
ret
int
mov
jle
dec
add
sbb
shl
sub
sub
cmp
lcall
popa
jp
scas
mov
cmp
bound
pop
sti
negl
add
cmp
push
and
push
int
or
adcb
daa
push
scas
push
sbb
je
xchg
aam
ljmp
and
sub
pushf
sbb
popa
movsb
cmpsb
or
push
sub
sub
sub
int3
xor
inc
gs
enter
jnp
fnstcw
sbb
lock
pop
mov
fnsave
jns
adc
push
sub
insl
mov
mov
lahf
pushf
inc
push
dec
dec
sbb
adcl
fldcw
inc
xor
mov
scas
lock
sub
jecxz
pop
loop
mov
add
mov
popf
data16
add
and
sbb
push
mov
sbb
mov
test
inc
xor
pop
xor
and
scas
cwtl
imul
vmaxpd
sub
shrl
push
dec
push
mov
pusha
loop
test
imul
pop
cmpl
pop
add
xchg
mov
sbb
inc
in
pop
xchg
cli
xchg
xor
mov
inc
xchg
add
out
shr
das
ret
js
fidivl
jns
inc
clc
mov
dec
push
fwait
cmp
outsl
fcomp
xor
loopne
je
mov
dec
arpl
dec
mov
sti
ds
sub
xor
jecxz
adc
dec
sbb
jne
inc
cmp
testl
xchg
inc
movsl
ljmp
cmp
adc
xchg
or
push
sub
pop
cmp
mov
push
jbe
xchg
cmp
sahf
jge
repz
jb
add
loope
mov
imul
mov
or
sbb
mov
push
adc
dec
outsb
mov
fxtract
mov
sub
mov
inc
ljmp
addr16
pop
rcrb
out
in
arpl
fildll
adc
push
jnp
and
int
test
aam
inc
pop
rorb
inc
aas
push
gs
inc
insl
xor
push
cmp
fists
gs
inc
sbb
jmp
xchg
push
pop
loop
sbb
jbe
sahf
xor
and
repz
pop
cltd
xchg
inc
fwait
pop
imul
jb
and
orl
leave
addr16
jae
out
push
fs
mov
cltd
enter
push
mov
out
sbbl
iret
mov
fs
ficompl
dec
adcb
ret
sbb
xchg
jle
lahf
pop
adc
andb
mov
mov
push
mov
inc
ror
cmpsb
rclb
add
imul
cltd
stc
cmp
repz
dec
stos
ret
add
inc
shlb
enter
lods
push
mov
loopne
inc
lahf
or
mov
jecxz
es
imul
gs
mov
lods
sub
mov
notb
jmp
scas
rorl
cmpsl
push
inc
jb
js
out
ja
mov
xor
insl
pop
xchg
stos
repnz
jns
daa
dec
jge
and
call
push
adc
xlat
int
cmpl
mov
iret
fisubrs
pop
jle
rol
inc
mov
icebp
je
mov
filds
lds
jb
pusha
scas
cltd
sti
mov
xchg
movsl
xor
rcll
xor
mov
js
or
subb
cmp
sbb
aas
into
jle
sbb
sub
xchg
stos
aam
inc
in
or
into
out
sbb
ds
and
mov
repz
cmc
sbb
clc
and
repnz
pop
xor
outsb
cmp
enter
ret
add
stos
xchg
out
pop
cmp
das
out
ss
rcr
mov
es
ljmp
mov
int3
loop
xchg
push
pop
jno
outsl
push
sub
lds
movsb
jns
out
mov
icebp
ret
sbb
push
ss
std
push
add
cwtl
mov
aaa
inc
sahf
ss
adc
outsb
icebp
ds
jecxz
jns
xchg
adc
mov
mov
lods
dec
in
adc
lea
insl
push
cmc
rcrl
in
arpl
push
or
adc
push
insb
push
test
dec
arpl
sub
stc
dec
sbb
sbb
xchg
cmp
jle
or
int3
jnp
push
shlb
scas
out
aad
mov
subl
or
push
popf
movsl
and
movsb
dec
dec
and
mov
shlb
and
sub
adc
imul
jne
inc
in
adc
fwait
leave
inc
jno
adc
enter
test
and
fucompp
insb
fcmovnu
hlt
xor
sar
add
in
inc
xchg
mov
inc
int3
pop
jae
call
lahf
pop
fisubrl
push
ja
test
aaa
add
pop
and
ss
loopne
xor
jne
insb
add
aaa
aad
push
inc
inc
addl
and
adc
sbb
aam
movsl
inc
cmp
lret
mov
push
jnp
jo
test
clc
mov
or
arpl
ret
push
mov
or
mov
add
cli
or
adc
stos
mov
xlat
sub
jmp
jbe
adc
adc
jbe
cmc
mov
in
shll
or
cli
imul
ret
jmp
int3
lret
dec
bnd
lods
lret
sub
mov
popa
or
mov
divl
outsl
adc
cld
pop
dec
add
lahf
int3
pop
gs
cmpsl
scas
fildl
inc
ss
xlat
push
aas
inc
inc
xchg
mov
test
xchg
xchg
in
xor
sbb
dec
ficoml
loope
nop
imul
cmp
mov
inc
pop
mov
stos
mov
pop
cmp
enter
popa
ja
mull
push
rcr
loope
push
ficompl
cwtl
and
push
es
dec
sti
push
ja
daa
mov
mov
call
dec
bound
into
lea
ret
sub
fstpl
pop
or
lea
sbb
out
xorb
or
fcoms
and
fisttpll
into
icebp
cs
pop
mov
aam
sahf
push
adc
sbb
mov
cld
adc
inc
jle
das
xor
push
mov
sub
jp
xchg
inc
outsb
mov
ret
mov
mov
dec
pop
mov
mov
mov
sbb
dec
xchg
adc
xor
rcll
and
gs
mov
or
sub
lods
or
out
aad
loop
jecxz
cmp
jno
xchg
test
xchg
and
pushf
call
pop
pop
addr16
pop
push
mov
ja
stos
jbe
scas
sbb
xor
or
or
xchg
cmc
test
jae
stc
das
jne
data16
sub
xor
adc
scas
call
rclb
nop
add
stos
push
lcall
push
mov
dec
jne
xchg
and
test
mov
add
adc
pusha
lcall
adc
lds
aam
pop
dec
cmpsb
outsl
pop
sbb
int
mov
cmc
sub
pushf
movsb
push
jl
push
xor
dec
jp
dec
repz
pop
dec
stos
int3
shrl
adc
mulb
stc
xor
jmp
les
add
xchg
repnz
fisttpll
mov
and
mov
or
jae
in
es
ret
dec
mov
push
add
scas
fisubl
leave
mov
adc
xor
jnp
pop
xor
cmp
cld
jne
mov
sbb
into
mov
out
push
hlt
cmp
xchg
test
out
fisubl
pop
cmp
jmp
push
jb
popa
lods
push
mov
ja
cs
aaa
xlat
push
jne
and
lods
xchg
mov
hlt
scas
jmp
and
sub
push
pop
cmpsb
movsb
negl
cmc
dec
xor
sarb
mov
adc
cmpsl
lods
outsl
sbb
jle
cld
movsl
mov
and
cmc
jecxz
pop
mov
imulb
into
inc
inc
outsb
jl
shl
mov
popa
std
sub
adcl
sbb
or
cltd
add
pushf
mov
pop
sub
sub
ds
aas
xor
push
cwtl
pop
mov
xor
cwtl
adc
cld
arpl
repz
les
pop
jl
push
cmpsb
rolb
sti
popf
adcb
mulb
push
int
push
sahf
lea
pushf
inc
ret
popf
int3
out
jl
test
xchg
jle
dec
fistps
test
add
and
popa
inc
inc
mov
cmp
pop
xchg
mov
dec
ss
int
xchg
cli
add
enter
popa
sub
jbe
gs
cmpb
adc
add
pop
lea
dec
mov
lods
loopne
adc
bswap
lods
test
enter
insb
ljmp
jbe
cwtl
pop
cld
cmp
fadds
ficoms
mov
mov
das
sti
cmp
outsb
outsb
dec
add
xchg
inc
mov
inc
aas
imul
mov
lret
dec
jno
data16
pop
mov
xchg
add
cs
adc
push
loop
sub
or
xchg
mov
sub
fwait
or
and
mov
inc
out
sbbl
mov
imul
movb
or
sbbl
ss
jnp
jo
enter
icebp
xchg
jne
out
lods
push
pop
add
fs
mov
test
jnp
mov
movsb
jg
cmp
jg
jp
mov
cmp
in
out
adc
fisttpl
xchg
loopne
adc
call
cmpl
ret
adc
push
sub
cmp
mov
mov
inc
loopne
mov
add
into
or
xchg
push
mov
and
mov
sub
pop
jno
in
mov
sbb
push
mov
add
pop
mov
aam
cs
loope
leave
ficoml
adc
pusha
or
nop
xchg
push
ja
xor
lods
out
xor
mov
lret
shr
fwait
mov
pop
movsl
cltd
movsb
sahf
sub
lock
jl
insb
sbb
aad
jg
mov
xor
arpl
xchg
cmp
pop
mov
xchg
scas
adc
mov
add
popf
fsubl
pusha
pop
xchg
out
jo
dec
push
test
sti
adc
or
jae
testb
movsl
add
xchg
pusha
or
mov
in
or
leave
fcmovnbe
rclw
test
fwait
dec
xchg
xchg
or
stc
xchg
push
jb
jp
addb
ret
ret
xchg
sub
cli
outsl
imul
mov
xlat
addl
and
int3
repz
mov
icebp
inc
movsl
test
pop
adc
call
inc
xchg
jl
pop
jae
imul
dec
xchg
sahf
stos
add
or
xchg
lret
test
jge
dec
aaa
lea
adc
lds
je
xchg
mov
cwtl
push
add
inc
lret
cwtl
dec
and
pop
faddl
inc
ss
pop
dec
or
or
out
sarl
add
mov
inc
dec
sbb
je
sbb
jmp
inc
outsl
insb
mov
and
mov
lods
xchg
pusha
adc
in
add
sbb
xlat
mov
sbb
popa
adc
or
cld
xchg
mov
pop
jmp
rcrl
adc
loopne
and
pushf
aaa
imul
cmpsl
mov
fs
outsb
out
xor
gs
adc
sahf
mov
push
sar
cltd
fwait
aas
fdivs
icebp
cltd
pop
das
cmp
hlt
bound
lret
add
out
into
clc
addl
mov
test
inc
cvtdq2ps
sarl
daa
inc
sub
xchg
enter
jnp
pop
lea
cmp
pop
xor
pop
add
push
sbb
ror
jae
jne
int
push
and
mov
lds
loopne
fcmovbe
xor
cmp
test
imul
pop
push
xchg
jl
stc
or
ret
mov
or
jg
and
clc
xchg
rcrl
mov
jg
push
cld
adc
test
popf
test
lcall
mov
dec
fimuls
ss
maskmovq
fstpl
shll
outsb
or
test
jb
fs
or
lds
repz
mov
mov
mov
ret
sub
lds
inc
pop
popa
cli
jno
fisubrl
xchg
mov
push
dec
ss
jne
push
in
pavgw
loopne
lods
leave
jb
addr16
decb
mov
in
pop
mov
xor
mov
mov
dec
arpl
stc
rcll
xor
mov
fwait
jne
ds
sbb
sbb
test
scas
cli
jae
xor
movsl
or
sahf
mov
inc
dec
adc
jno
and
sbb
cmp
mov
repz
jae
inc
in
cwtl
push
stos
cs
icebp
dec
jp
xchg
xchg
sbb
repnz
lods
or
scas
pop
icebp
movb
mov
jg
xchg
push
clc
sbb
test
xchg
je
lods
addr16
cmc
dec
and
shrl
pop
aam
scas
xchg
sti
or
push
dec
mov
jae
push
fldl
adc
xchg
add
insb
popf
xor
jl
mov
mov
add
ret
mov
shll
out
or
scas
xlat
jns
leave
pop
sbb
mov
adc
add
xchg
inc
ret
in
loope
adc
sub
hlt
testl
shrl
cmc
das
mov
jo
and
xchg
mov
mov
hlt
xor
les
ret
lds
mov
mov
push
and
in
stc
insb
lcall
mov
pop
es
cld
cmpsb
add
push
test
mov
mov
inc
lods
xchg
mov
fcomps
outsl
xor
and
add
loop
sbb
add
leave
push
jo
jmp
int3
sbb
fwait
shlb
dec
lret
push
sti
cmp
bnd
out
mov
sub
push
int3
xchg
xchg
cmp
pop
mov
xor
shl
fstp
nop
add
popf
int3
and
aas
jecxz
mov
inc
dec
cmp
add
add
jge
jne
xor
popf
xor
imul
pop
mov
and
lret
mov
mov
mov
das
xor
outsl
cmp
mov
xchg
jp
pop
push
scas
dec
call
pop
clc
jg
jmp
enter
adc
loopne
jmp
xor
pop
mov
mov
jne
mov
testb
js
push
push
xor
push
add
push
push
jbe
out
test
out
and
sbb
out
mov
inc
pop
push
push
adc
sbb
jg
dec
ja
out
mov
test
into
and
int3
add
xchg
xchg
pop
push
fmul
cld
test
ljmp
inc
int3
cmp
push
mov
rolb
icebp
xor
jge
and
adc
xor
sub
or
loope
add
lods
or
test
out
sub
ljmp
push
pushl
popf
dec
sbb
sub
hlt
cmp
call
cmp
sub
sbb
sub
jns
pop
cmp
sbb
mov
adc
mov
test
pop
pop
shr
data16
rcr
and
cmpb
add
in
lds
shll
sbb
jbe
sbbb
xchg
xchg
sub
xchg
or
push
inc
dec
push
scas
add
pop
sub
pop
cmpsb
ja
or
mov
fistps
js
movsb
jb
push
mov
fsubrl
mov
aas
add
stos
sbb
lahf
mov
mov
push
mov
lahf
adc
pop
add
aas
imul
xchg
jo
lock
dec
cli
push
out
dec
ss
cmp
jno
push
dec
das
out
fldt
pop
jb
imul
and
testl
and
lret
xchg
add
shl
xor
adc
mov
mov
inc
in
and
andl
mov
and
xchg
pop
mov
push
clc
enter
iret
inc
cwtl
mov
xor
inc
ljmp
out
fcomps
ds
push
mov
dec
cmp
mov
vaddsd
fs
lcall
inc
mov
pop
or
dec
pushf
pop
pop
sub
jns
xor
lods
into
xor
lds
and
dec
pop
les
in
cli
jmp
sbb
adc
inc
inc
shr
test
sub
add
jnp
testb
aam
xchg
or
fbstp
sbb
shll
push
pop
adc
sbb
jae
outsl
cli
and
aad
sbb
adc
mov
pop
and
outsb
in
scas
or
shl
push
jecxz
dec
push
sbb
mov
rolb
sub
sbb
out
stos
mov
and
pop
push
imul
push
ret
pop
fstpl
jo
mov
xor
push
and
xchg
fsubrl
jo
cli
inc
jmp
cmp
cmpsl
pop
or
faddl
sub
sbb
jb
add
dec
es
jmp
repnz
pop
mov
shr
dec
sub
push
call
or
pop
push
xchg
dec
mov
sarb
sub
lock
sbb
lret
in
nop
sub
sub
push
and
jo
dec
cmc
or
iret
xchg
pushf
subl
std
mov
inc
sti
xor
lret
sbb
int3
rcrl
sbb
dec
imul
mov
lds
outsl
mov
push
dec
dec
sub
lret
mov
insb
xchg
lret
lret
dec
lock
xchg
push
push
pop
cs
pushf
dec
pop
jmp
roll
xchg
sarb
and
pop
out
in
mov
xor
xlat
inc
out
xor
add
iret
stos
mov
scas
cli
jmp
dec
add
and
insb
inc
bound
dec
mov
arpl
dec
lcall
mov
pop
jmp
add
inc
and
clc
mov
push
in
mov
shll
into
fcmovne
add
xor
and
std
decb
push
jnp
cmp
insb
popf
int
or
dec
mov
popf
cmpsb
loopne
xor
or
cmp
pop
hlt
in
pop
mov
jno
les
pop
push
into
pop
mov
mov
and
int3
inc
cmp
xor
cmp
lcall
mull
sub
aas
cmpsl
jge
jmp
jl
push
imul
sub
insl
lahf
fisubrl
jl
add
xchg
sbb
xor
cmp
xor
jno
out
mul
mov
or
and
pushf
popa
xchg
lret
xor
test
enter
pop
xor
fsts
sub
push
xchg
fmull
sub
and
mov
in
xchg
cltd
icebp
int
hlt
mov
fbld
sahf
imul
inc
jecxz
pop
adc
mov
jne
fs
mov
or
mov
in
mov
out
xchg
dec
loop
mov
out
mov
xor
jecxz
rcll
bound
add
mov
stc
lcall
sbb
push
cwtl
xor
push
sub
cmpl
andb
ja
cmpsl
out
fisubrs
jge
xlat
fwait
test
sarb
stos
mov
sahf
push
push
popa
test
int
ret
scas
inc
mov
mov
cmc
xor
test
test
cmp
lahf
mov
pop
mov
adc
inc
pop
pop
sti
inc
rcll
push
mov
sub
jmp
stos
call
pop
xchg
lock
sbb
and
xchg
test
shl
stos
xor
cmp
in
test
and
outsl
cmp
adc
repnz
icebp
sbb
and
pop
and
lods
mov
pop
pop
pop
shlb
aad
scas
mov
mov
insb
sub
sbb
mov
out
mov
sbb
outsl
das
pop
stc
jb
add
into
jo
jo
gs
cld
and
xor
push
and
xor
add
and
mov
rcl
and
inc
fdiv
sub
lods
pop
test
arpl
xor
add
xchg
mov
xchg
adc
sub
cltd
mov
sub
sbb
xchg
call
aas
sbbl
into
xchg
cld
mov
push
inc
inc
enter
dec
pop
enter
adc
sub
arpl
movsl
xchg
dec
pop
aas
jb
sbb
and
mov
cs
adc
jl
aam
imul
test
pop
fildll
and
mov
and
sbb
sti
test
and
pop
negl
jbe
sub
or
push
enter
push
cmp
jno
jb
repnz
add
adc
out
fcmovnb
xor
in
jb
push
sbb
sub
inc
sub
mov
xchg
jbe
xor
push
mov
enter
aam
mov
sub
fstp
dec
sub
pop
fsts
cmp
dec
nop
hlt
mov
mov
lret
xor
ss
and
jmp
jecxz
jl
and
insb
sub
or
data16
push
loop
sbb
pop
daa
xchg
jecxz
fwait
sub
mov
sub
mov
sbb
sbb
sbb
cmp
jb
push
fs
xchg
add
cli
add
lahf
popfw
add
inc
and
inc
xlat
gs
adc
sub
ja
cmp
fcompl
pushf
jl
and
mov
pop
sbb
cmp
adc
cmp
sbb
xchg
das
mov
xchg
sub
insb
xchg
out
xor
mov
mov
arpl
push
lret
xor
sub
pop
lea
pop
lcall
fistpll
aad
add
stos
and
pop
adc
or
fmul
xor
add
pushl
jle
or
pop
sbbl
dec
add
sub
fwait
clc
fnstenv
push
or
je
jbe
pusha
aaa
or
jne
xchg
mov
inc
imul
pop
ret
add
mov
je
fsubl
mov
shrl
pop
inc
mov
out
dec
add
inc
outsl
movl
popa
loop
mov
push
mov
out
push
lock
and
arpl
outsl
stos
jno
movsl
out
xchg
popf
das
sbb
adc
int
mov
pop
pushf
jl
in
les
hlt
push
in
or
mov
lret
pop
xor
mov
adc
or
jb
xor
xchg
xchg
aad
stos
out
movsb
std
lcall
mov
xor
jge
or
jge
imul
sub
add
lahf
les
adc
addl
lds
icebp
xchg
or
dec
and
push
sbb
out
int3
add
dec
stos
xchg
mov
cmovb
add
mov
mov
sbb
adc
hlt
cmp
sbb
fwait
ret
rolb
mov
int3
arpl
gs
push
jo
cs
outsb
mov
add
xchg
adc
rorl
inc
xor
pop
sbb
gs
or
cmp
sbb
movsb
mov
inc
rcll
dec
enter
dec
loope
int
popf
sub
fsubp
iret
jl
loope
popf
andb
in
or
inc
lods
arpl
or
mov
mov
fwait
sbb
repnz
push
in
xor
mov
add
shlb
xchg
cmova
mov
xchg
fidivrl
jecxz
pop
sbb
push
pop
mov
jge
fdiv
mov
adc
or
bound
cmp
pushf
es
rol
imul
or
aas
adc
xor
subb
mov
xchg
push
lds
dec
bound
mov
pushf
in
flds
mov
push
fstpt
push
pop
rol
ss
jecxz
lds
fistps
jno
enter
sbb
push
jno
pop
inc
adc
cltd
lahf
push
push
xorl
popa
inc
sub
fadds
xorl
pop
cmp
jge
loop
fstp
mov
sub
add
mov
xor
pushf
lea
scas
leave
enter
in
lods
jmp
nop
mov
stos
dec
push
pop
pop
rorb
jp
insb
jmp
sti
out
jmp
jge
pop
lds
and
movl
and
pop
jnp
lret
cld
test
adc
es
inc
jmp
mov
ret
outsl
out
mov
xchg
or
hlt
into
mov
loopne
addr16
loop
sbbl
lods
dec
in
pusha
vmulps
and
inc
lds
adc
jne
jmp
out
insb
mulb
push
ret
inc
imul
pop
dec
imul
sbb
ljmp
inc
and
out
movsb
pop
leave
cmpsl
lods
and
mov
push
cli
cmp
push
xchg
adc
ss
mov
mov
in
xor
adc
in
insl
clc
orl
cld
dec
adc
xchg
xchg
fists
out
lahf
ror
and
in
les
xchg
mov
nop
dec
dec
ret
lcall
xchg
mov
jnp
jge
call
sub
rcrl
out
push
and
xchg
icebp
push
iret
stc
or
pop
outsb
dec
pop
in
pushl
push
imul
lds
inc
mov
mov
pop
jl
fptan
insb
stos
into
adcl
sub
and
add
loopne
sar
iret
adcl
and
mov
ljmp
dec
jmp
mov
aaa
lret
cltd
jns
pushf
fistl
sub
mov
ss
or
in
cmc
in
es
add
andb
push
loope
lock
pop
pusha
and
dec
or
dec
jecxz,pt
ror
mov
pop
popa
mov
in
std
xchg
bound
unpcklps
mov
sbb
sbb
jp
dec
xchg
dec
cli
push
imul
cmp
and
stos
cwtl
fldt
orb
in
mov
push
mov
jbe
iret
sti
sarb
fcoml
mov
mov
bound
inc
mov
adc
ja
jmp
test
jl
xchg
ds
jne
out
aaa
cli
out
aaa
iret
inc
or
pop
sarl
mov
outsb
mov
jle
mov
jl
fisubl
dec
inc
adc
clc
dec
mov
push
movsb
fwait
hlt
push
add
or
xor
dec
add
xchg
mov
pop
popf
pop
clc
cmp
aas
in
leave
divb
jo
push
stos
add
fwait
clc
push
or
xor
das
int
jnp
pop
rorb
and
ljmp
int
mov
jmp
cmp
sbb
movsl
imulb
jge
cmpsl
sub
imul
mov
mov
mov
loopne
cli
imul
inc
xchg
lods
xchg
inc
jns
ffreep
or
int
mov
mov
ljmp
mov
outsb
leave
std
cmp
push
data16
cmp
das
iret
sbb
cwtl
shlb
sbb
ss
mov
fidivl
arpl
dec
mov
pusha
mov
push
add
test
mov
popf
mov
push
mov
mov
leave
ficompl
adc
sbb
add
nop
lods
mov
dec
cwtl
arpl
mov
dec
xchg
inc
sub
dec
adc
incb
adc
cld
and
pop
mov
adc
sub
mov
xchg
and
fs
add
fadds
inc
lds
pushf
xchg
in
jae
xchg
fisttps
lcall
jae
fwait
xchg
adc
insl
outsb
pop
fbld
xor
fs
insl
lret
xchg
das
pop
dec
gs
movsl
addr16
pop
pop
repz
dec
sub
lock
imul
data16
rolb
adc
xchg
mov
movsb
clc
sti
test
xchg
add
dec
cmpsb
ss
test
jl
mov
adc
xor
aam
mov
and
addr16
nop
imul
add
add
xchg
cmp
xchg
xor
fsubl
cmp
jge
insl
sub
push
cmp
mov
sub
ret
xorl
mov
andl
test
mov
mov
call
and
call
sar
lret
xorl
std
push
and
xchg
addr16
cli
adc
rcr
in
and
mov
fisttpl
pop
xor
sbb
xor
cwtl
inc
into
aad
or
sub
movsl
ficompl
adc
jg
xchg
inc
push
mov
pop
dec
out
mov
lds
ret
das
popf
hlt
mov
push
aaa
cmp
stos
test
mov
je
push
xor
adc
or
repnz
cmp
fwait
xchg
cmpsb
mov
push
flds
mov
fisubs
aas
or
sub
jno
pop
inc
cmc
dec
dec
mov
shlb
mov
dec
mov
or
cmp
aas
dec
mov
je
and
add
mov
jecxz
ret
adc
out
cwtl
pop
je
bound
jg
daa
pushf
outsl
inc
rcl
enter
or
xor
mov
push
mov
dec
fxch
dec
cmp
fdivrl
in
and
xlat
jmp
iret
add
cmp
xchg
dec
or
push
or
in
popf
test
out
push
and
mov
jnp
in
cld
pop
stos
movsl
mov
lret
xor
push
dec
push
mov
outsl
in
cld
sub
xchg
out
sti
mov
and
xor
shr
dec
and
xchg
cltd
cmp
pop
imul
xor
ror
cld
lret
mov
int
add
sti
fdivs
or
push
ss
jnp
stc
ja
out
outsl
ljmp
or
lods
and
dec
pop
and
mov
xchg
pop
testb
and
bound
lcall
jno
pop
xchg
pop
popa
mov
or
roll
cmp
add
mov
xor
cmp
sahf
out
fcomip
addb
inc
aad
mov
fwait
xor
cmp
rcl
std
push
or
imul
add
pop
jp
or
cmp
adc
stc
sahf
mov
icebp
ror
popa
movb
adc
enter
xlat
mov
lea
insl
in
dec
add
shr
push
dec
insb
mov
testl
cmp
mov
icebp
or
sbb
shr
loop
mov
sahf
add
xor
aad
leavew
shrb
aaa
aad
lret
xor
sbb
sub
incb
jne
out
add
out
sbb
xchg
pop
insb
xor
pop
push
fiadds
mov
inc
fs
mov
into
leave
ret
stos
dec
psrlw
out
ffreep
test
pop
sub
scas
imul
out
jno
adc
test
mov
cmp
and
rolb
lods
fldl
dec
cmp
sbb
outsb
inc
pop
jb
push
leave
shlb
out
jnp
mov
andl
shrb
imulb
sub
jnp
push
jbe
out
mov
inc
xchg
pop
jmp
cld
mov
jo
or
lods
test
jae
shll
bound
and
jbe
dec
add
jl
clc
ficoms
jno
icebp
lods
push
pop
mov
cwtl
sub
xchg
repz
sub
or
lods
sub
xchg
jae
cli
cmp
rcr
nop
sub
es
shrl
inc
pop
lods
arpl
push
in
adc
aaa
inc
add
cmp
in
pushf
test
sub
hlt
adc
pop
jp
out
jns
adc
mov
in
adc
ja
fmull
mov
icebp
jmp
daa
les
mov
pop
sub
xlat
jne
push
pop
xchg
push
loop
lds
jo
clc
je
lds
xor
fs
push
test
gs
repz
sbb
jecxz
mov
sub
cmpsl
add
xor
add
sbb
out
mov
insl
and
push
lahf
and
xchg
mov
cmp
adc
lret
ja
in
or
inc
out
adc
subb
inc
into
xchg
mov
inc
in
dec
jns
adc
sub
in
xchg
mov
push
mov
xor
cli
dec
mov
das
push
aas
scas
mov
out
jmp
and
cmp
mov
xchg
loop
sbb
imul
push
aad
js
dec
xchg
lahf
clc
mov
or
call
mov
mov
cmp
push
mov
xchg
iret
mov
rolb
mov
pusha
push
xchg
lcall
or
repz
push
imul
adc
scas
and
push
sub
jae
outsl
xchg
in
xor
fnstenv
test
in
sbb
movsb
outsl
outsl
dec
rep
movsl
cmp
int3
push
add
sub
dec
arpl
je
mov
adc
sub
push
loope
inc
mov
fmul
jnp
push
call
jbe
lret
and
adc
out
lcall
mov
pop
and
addr16
or
push
in
jecxz
out
sub
lcall
stc
or
lods
mov
loop
cwtl
dec
or
leave
dec
jle,pt
loope
mov
mov
dec
jo
mov
jns
or
test
xlat
cmpsb
inc
and
cmp
sbb
bound
mov
int
nop
jb
andb
aam
and
dec
jecxz
lahf
jmp
jo
out
adc
push
fistps
ss
mov
mov
cltd
pop
adc
xchg
cltd
lret
aad
les
ret
rolb
xchg
inc
test
std
and
iret
mov
test
lea
mov
adc
mov
add
dec
jp
sub
test
call
pop
inc
inc
movsl
mov
xor
sub
cmp
emms
jo
jmp
mov
dec
in
sbb
sar
sub
and
push
flds
xor
insl
pop
out
mov
xorb
jp
mov
aam
jno
js
xor
inc
in
mov
dec
std
jnp
lock
rcrl
cmp
jge
xchg
outsl
or
leave
jp
xor
mov
testb
movsl
stc
or
dec
mov
pop
inc
xlat
das
ss
movsl
sub
xchg
lods
inc
jnp
mov
mov
add
movsl
call
and
mov
sbb
mov
adc
push
cmp
pop
roll
insl
push
addr16
sbb
and
push
daa
inc
push
dec
jmp
cli
out
popfw
bound
jecxz
mov
push
test
add
jle
in
xor
cmpsl
and
lcall
dec
ret
and
push
mov
jno
dec
in
aad
pop
jmp
sbb
negl
mov
repnz
and
add
xchg
dec
loop
xor
cmp
and
and
xchg
adc
mov
in
test
xchg
ja
jno
add
fsts
pop
les
ret
fstpl
outsb
jns
addr16
dec
in
push
mov
push
xchg
scas
dec
loop
stos
xchg
movsl
jne
int
lret
sbb
adcl
jp
fnstsw
xor
dec
cmp
push
dec
das
pop
add
dec
adc
sbbb
inc
pop
jns
stc
add
fisubrs
mov
js
filds
sbb
mov
push
outsb
pop
inc
mov
movb
mov
hlt
xor
test
mov
insl
or
out
cmp
lds
mov
mov
adc
fisubl
test
loop
cmpsl
or
xor
or
jmp
shrb
xchg
jge
adcl
jmp
out
xlat
loopne
insb
push
enter
lahf
pop
cmpsb
mov
notb
adc
in
adc
sahf
jge
mov
fbld
inc
ret
andnps
in
xchg
mov
pushf
testl
jl
pop
gs
mov
mov
insl
arpl
adcb
mov
dec
adc
inc
mov
xor
mov
adc
mov
clc
sbb
jbe
mov
ja
cmpsl
pop
push
pop
rorb
adc
test
mov
cmp
pop
xchg
jl
mov
inc
pop
pop
xchg
cmpsl
ret
subb
pop
test
pop
mov
popl
xlat
mov
mov
adc
mov
mov
insl
cmpsb
test
test
je
pop
loope
push
shrb
cmpb
xor
pop
or
add
test
aam
fnstsw
in
sub
inc
dec
xchg
je
cmp
sbb
fcom
mov
mov
scas
push
ret
jns
outsl
stos
and
movsb
punpcklbw
inc
vandnps
push
lea
sbb
cmp
xchg
arpl
xlat
aad
pusha
dec
fwait
out
fs
mov
std
enter
aad
ret
and
movsb
xor
in
jecxz
ficompl
sbb
and
mov
int3
mov
cmp
dec
dec
dec
icebp
add
xchg
clc
pop
inc
xor
test
jno
dec
mov
push
cmp
sub
ss
pop
nop
mov
mov
lods
jge
scas
mov
push
das
dec
or
rcrl
rcll
jp
imul
pop
mov
lea
mov
push
wbinvd
insb
push
repz
cmp
adc
ljmp
scas
int3
mov
push
mov
inc
jno
jecxz
fstl
repnz
mov
sti
fsubrs
push
and
sbb
mov
notb
sahf
movl
jge
fdivrs
sub
loopne
adc
pop
xchg
mov
iret
or
and
stc
test
pop
pop
sub
adc
inc
jno
cmpsl
add
push
or
mov
fcmovnb
shrb
sub
or
or
bound
repz
ds
inc
mov
rolb
add
std
pop
mov
add
push
repz
jp
jno
jl
push
push
loope
lods
data16
push
js
fwait
or
ret
or
mov
repz
jp
stos
jne
xor
inc
jmp
adc
or
adc
int3
adc
dec
add
sub
pop
and
push
aas
or
jno
insb
sbb
add
xchg
mov
notb
jno
inc
add
daa
pop
mov
sub
push
clc
ret
aaa
loopne
loope
xchg
xlat
std
loope
cltd
inc
or
rcl
mov
and
mov
push
push
mov
jbe
pusha
pop
dec
xchg
pushf
pusha
dec
mov
lods
cmc
dec
push
mov
sbb
dec
stc
scas
jb
ror
fsubs
inc
mov
ficoml
xor
rorl
in
adc
stc
clc
popa
into
sbb
push
and
shlb
cli
js
mov
cmpsb
gs
outsb
divl
or
out
stos
call
je
jp
adc
pop
shll
gs
push
iret
insl
xor
or
int3
mov
out
out
sahf
inc
mov
pop
add
arpl
pop
mov
int
ss
xchg
and
xchg
jp
les
sbb
stos
and
gs
push
stos
push
xchg
rcll
shl
xchg
cmpsb
mov
xor
pop
std
dec
in
dec
xor
shll
add
dec
fs
inc
insb
dec
jb
out
push
aas
and
gs
insb
add
ret
dec
and
add
xor
push
lcall
xchg
xor
pop
inc
pop
add
mov
ja
inc
adc
pop
mov
insl
jl
xchg
out
mov
or
push
ret
xor
dec
insb
imul
addr16
cmp
ret
out
dec
dec
xor
addl
dec
dec
clc
outsb
mov
lock
aam
shrb
stc
fsubrl
mov
scas
mov
in
lcall
xchg
xor
xor
dec
or
loop
fs
aad
js
bound
shr
movsb
push
sbb
pop
jge
cmpsl
ja
leave
sub
in
pushf
cli
data16
push
dec
popf
inc
hlt
repnz
push
cmpsb
imul
xchg
sub
sub
mov
mov
mov
jmp
inc
pop
test
in
and
or
lret
xor
js
adcl
mov
fcomip
sti
inc
cmp
pop
sarb
jg
cmp
in
insl
adc
push
out
pop
nop
sti
insl
imul
lds
fimull
out
jp
sub
inc
push
clc
sbb
xor
jo
int3
cmc
jecxz
xchg
inc
sbb
xchg
and
xor
idivl
and
dec
rcrl
ja
jns
xchg
stos
std
inc
gs
es
jnp
dec
fwait
xlat
out
xchg
bound
dec
lods
ret
sub
and
orl
aas
btc
pop
or
adc
add
orl
or
cmp
mov
aam
sub
xor
xchg
mov
sarl
push
or
out
pusha
cmc
cwtl
jge
push
lcall
xchg
push
movsb
mov
mov
mov
or
xchg
popa
aam
sbb
jns
bound
jp
pop
jle
mov
dec
push
lahf
xchg
lcall
jge
dec
iret
inc
adc
cld
sahf
mov
xchg
pop
jbe
inc
mov
adc
mov
adc
jne
push
jecxz
stc
mov
lea
js
and
push
xchg
add
