lea
shl
pop
lea
rol
cmp
je
neg
jmp
mov
mov
xor
rol
not
rcr
cmp
je
add
adc
lea
xor
not
jmp
xor
mov
and
xor
mov
call
lea
jmp
xchg
mov
adc
xor
mov
mov
neg
not
neg
xor
not
adc
xor
neg
mov
jmp
mov
adc
mov
xor
mov
xor
mov
xchg
not
ror
mov
neg
xchg
neg
jmp
xor
and
neg
neg
add
jmp
xor
xor
adc
mov
mov
push
call
mov
xor
mov
rcr
xor
jmp
add
not
neg
mov
rcr
lea
jmp
shrl
add
lea
mov
add
xor
and
mov
xor
neg
xor
push
jmp
mov
ror
xor
xor
mov
xor
ret
lea
mov
not
mov
and
shr
not
add
jmp
xor
neg
mov
shr
lea
adc
mov
add
mov
mov
mov
adc
lea
neg
mov
jmp
and
and
add
rol
add
call
push
rcl
xchg
and
push
call
push
mov
mov
jmp
rcl
not
mov
mov
add
rol
xchg
adc
popl
jmp
add
not
movl
rol
mov
mov
jmp
neg
mov
decl
jne
mov
shr
mov
shr
neg
lea
xor
xchg
jmp
not
mov
not
mov
not
add
lea
mov
mov
and
ror
xchg
jmp
and
mov
not
xor
xor
lea
shl
mov
xchg
mov
jmp
xor
add
adc
lea
mov
ror
lea
rcr
neg
mov
mov
xor
lea
mov
jmp
movl
not
mov
mov
xchg
adc
xor
ror
mov
add
jmp
push
mov
sub
push
push
push
xor
mov
adc
shr
lea
push
jmp
xor
xor
mov
shl
xor
call
adc
add
lea
mov
add
ror
xor
mov
rol
mov
jmp
lea
mov
xor
mov
xchg
neg
mov
jmp
mov
mov
xchg
lea
xor
jmp
push
push
pushl
pushl
call
xor
rcr
lea
and
mov
shl
neg
rol
xor
jmp
mov
xor
not
mov
shr
jmp
cmp
dec
sbb
mov
sbb
push
mov
push
inc
pop
push
sub
dec
cmpsb
ficoms
mov
inc
in
dec
mov
dec
adc
and
push
orl
scas
mov
mov
sahf
adc
fbstp
icebp
pop
push
out
pop
mov
addr16
and
add
stos
push
xor
xchg
mov
notl
cmpsl
test
int3
sub
jnp
inc
adc
dec
jae
adc
ljmp
sbbl
xchg
add
pushf
xlat
bound
fsubr
adc
sub
mov
mov
push
test
or
xor
pusha
pop
test
mov
jg
jb
daa
and
lds
push
imul
xchg
movsb
test
xchg
push
aas
cwtl
loop
jp
mov
inc
or
loop
jp
pop
mov
xchg
loope
xor
dec
xchg
push
addr16
imul
fildll
jp
adc
push
dec
loopne
mov
and
scas
inc
xor
lret
adc
push
jecxz
and
loop
xchg
xchg
out
lea
pushf
xchg
cmp
sub
js
stos
xchg
jns
lds
out
jge
pop
ret
sbb
rolb
cmc
xor
cwtl
loop
rcrb
out
daa
sbb
ljmp
xchg
loopne
in
push
mov
in
js
stos
push
popf
out
add
mov
sbb
js
stos
aam
sbb
fcoml
jmp
push
pop
add
test
ficomps
ljmp
js
stos
push
in
jns
lds
push
push
in
mov
addr16
xlat
jns
push
push
inc
mov
fwait
or
push
push
and
test
test
pop
scas
in
dec
cld
jp
sbb
int3
mov
ficomps
mov
popf
jp
test
jo
stos
mov
mov
lahf
adc
repnz
fists
fcomp
adc
aam
push
sahf
loope
push
pop
mov
push
and
shll
loop
ljmp
fucomp
xor
jg
sub
pushf
lock
ret
sbb
adc
jo
mov
adc
mov
lret
push
push
lods
and
mov
jae
rcl
push
popa
mov
sub
lods
cmp
cmc
stos
fsubrs
out
scas
fcoml
xchg
jb
out
movsl
cmp
stos
mov
jae
mov
daa
shll
pop
idivb
xchg
leave
sub
pusha
sbb
or
mov
insl
mov
push
gs
mov
adc
pop
cmp
shll
ljmp
sbb
cmp
and
shrb
inc
dec
xlat
imul
icebp
sub
adc
nop
les
inc
aas
xor
pusha
mov
daa
pop
xchg
mov
pop
push
nop
fcompl
sahf
rcl
push
xchg
jp
mov
mov
mov
lods
jecxz
adc
jno
fcomp
data16
push
std
out
fcomp
adc
cmc
push
ficoms
shl
pusha
xor
faddp
enter
fcomp
pushf
je
std
rclb
pop
jne
mov
mov
fisubrs
fsubrs
data16
es
ficompl
cmpsb
mov
push
loop
sub
pop
lods
fistpl
ja
pop
push
pop
ss
dec
lret
pop
std
push
daa
and
sub
pushf
enter
jge
adc
jo
mov
adc
xor
fistl
sbb
mov
repnz
ret
sahf
adc
mov
fstpl
cmp
mov
and
mov
xchg
sbb
ss
daa
and
rcrl
stc
and
lret
sub
push
hlt
fsubs
cmc
cmp
or
fsubs
cmpsb
ffreep
sahf
adc
dec
daa
in
fcmovnb
sahf
adc
mov
and
ficomps
mov
ljmp
pop
ds
ficomps
adc
and
pop
lods
or
fcom
nop
mov
ss
dec
daa
and
aaa
scas
push
mov
pop
push
mov
ficomps
aas
lcall
div
mov
inc
mov
xchg
sub
push
pushf
add
push
lahf
add
xchg
sub
std
in
adc
lds
icebp
jp
enter
daa
and
movsl
sahf
shrl
std
mov
push
out
in
mov
int3
push
popa
stos
rorb
lret
pop
mov
fistl
loop
sti
push
aam
aad
jae
pop
movsb
push
mov
push
shrl
ljmp
pusha
inc
mov
or
mov
and
mov
mov
adc
aas
stos
rcrb
inc
lods
mov
rcl
jge
mov
and
dec
rcrl
pusha
mov
sbb
std
sub
push
outsb
movsb
push
in
push
inc
lods
fcompl
mov
mov
mov
fstp
push
mov
mov
std
xor
pop
push
mov
out
in
inc
subb
mov
xchg
xchg
ficoms
aas
lods
push
pop
js
adc
leave
rclb
mov
aaa
sbb
sbb
mov
rcl
ljmp
cmp
aas
popf
push
aaa
js
adc
mov
fisubrs
inc
stos
adc
aas
sbb
adc
pop
sbb
adc
aas
xchg
fidivrl
mov
mov
jge
lods
bound
cmp
ljmp
push
in
sbb
jno
hlt
ficoms
jae
ficoms
aas
imul
mov
frstor
push
test
mov
rcrl
popa
movsb
fistpl
jg
daa
stos
sbb
pop
mov
ficomps
mov
sub
shrb
lods
lods
sub
mov
test
je
jmp
xlat
mov
mov
fcoml
add
dec
daa
xchg
sub
rcr
ficompl
dec
fists
int
fnstsw
and
mov
mov
push
pop
loopne
mov
xchg
scas
fstpt
fstps
push
fcmovb
xchg
popa
push
mov
orl
fstpt
xor
pushf
push
adc
lods
mov
pop
mov
lds
repz
popf
pop
mov
popa
notl
pushl
mov
cltd
loopne
mov
xchg
mov
int3
sbb
mov
fistps
nop
rcl
add
mov
repz
xchg
pop
mov
ljmp
dec
rcrl
xlat
rcll
cmp
adc
pop
cmp
mov
shrl
test
mov
je
lock
mov
mov
cmp
adc
ds
mov
lock
aad
int
adc
sub
cld
arpl
fcoms
sbb
loopne
movb
lds
mov
xchg
xchg
jg
rcr
aam
jo
popa
mov
clc
pop
lods
pop
xor
xchg
cmpsb
xchg
stos
sti
cmp
pusha
out
cmc
pop
daa
add
aaa
adc
jb
aam
popa
xchg
push
xchg
sbb
fldenv
fs
cmp
xor
ss
cltd
cli
fbld
das
push
fdiv
mov
in
mov
stos
xchg
xchg
shll
nop
je
rclb
fisubs
dec
jecxz
lcallw
adc
xor
xor
push
mov
ret
pusha
mov
lods
push
inc
fcmovne
addr16
fwait
jmp
add
popf
jmp
test
jbe
sbb
or
idiv
inc
mov
fwait
jl
sub
mov
adc
les
pusha
mov
cwtl
fisubs
dec
lods
fwait
or
mov
mov
mov
ds
fnstenv
nop
nop
fsubrs
jb
ret
push
movsl
mov
and
jae
mov
mov
popf
sahf
cmpsb
and
into
addr16
in
mov
and
std
add
jl
mov
pop
rolb
lods
xlat
sbb
sbb
adc
jmp
jp
sahf
xchg
loop
pusha
jecxz
mov
jge
xchg
pop
sbb
xchg
lea
notb
lods
aad
cwtl
xor
push
and
sbb
out
cmp
sahf
sbb
pop
lods
loopne
push
push
in
mov
cltd
sub
pop
out
mov
mov
xchg
icebp
fdivr
add
pop
outsb
adc
mov
and
cmp
pusha
out
loopne
rolb
leave
and
or
and
gs
or
cs
lret
sub
mov
sub
jo
adc
pop
add
inc
mov
inc
aaa
cld
ljmp
pushl
push
lods
gs
xor
cwtl
int3
lahf
movsb
cwtl
pop
mov
mov
xlat
popa
mov
sbbl
arpl
sub
pop
stos
mov
in
daa
popa
cltd
inc
jge
jnp
push
pushf
bound
loopne
pop
nop
lret
mov
mov
adc
int
sbb
mov
pop
arpl
xchg
push
aas
jmp
sub
adcl
stc
in
add
outsl
mov
je
test
lods
bound
add
mov
cmpsb
xchg
dec
jecxz
popa
cwtl
jo
jle,pn
or
stos
in
dec
rcll
push
jl
push
insb
js
out
in
dec
std
fisttpll
inc
inc
loop
mov
cmp
sbbl
imul
jmp
pop
pop
sub
nop
xchg
sbb
fdivl
mov
lods
dec
dec
mov
xchg
repz
push
inc
pop
lds
push
pop
xor
lea
mov
pop
dec
sub
and
mov
aaa
fdivl
faddl
in
xchg
add
rolb
in
lret
pop
enter
jmp
push
rcrb
xlat
adc
fsubrl
ja
les
mov
pop
or
push
cmp
pop
sbb
adc
pop
aaa
inc
pop
sbb
dec
loope
push
mov
shrb
stos
mov
pop
xor
roll
jne
ljmp
xchg
xor
mov
cwtl
fdivrl
cmp
xor
adc
in
xchg
mov
rcr
in
push
mov
sub
ljmp
mov
nop
stos
sbb
fistpl
sub
daa
inc
mov
and
push
lock
cmp
adc
lret
and
fprem
sbb
aaa
movsb
inc
and
pop
inc
jmp
lods
in
adc
and
repz
mov
enter
mov
clc
repnz
xchg
push
pop
int3
rol
mov
aad
mov
and
pop
cltd
jge
add
jl
fdivrl
cmpsl
and
out
sahf
shlb
push
test
adc
jle
and
ja
enter
ret
jge
test
aas
mov
cmp
sar
insl
mov
js
lahf
mov
notb
sub
xor
jne
mov
jl
rcr
iret
or
add
xor
loop
inc
or
rclb
xchg
push
mov
shlb
rcrl
mov
das
fimull
and
fidivl
sbb
mov
sbb
ror
in
mov
or
xchg
insb
pop
nop
cmp
stc
sbb
xchg
jo
xor
xchg
dec
dec
cwtl
movsl
sbb
mov
cwtl
pop
inc
mov
enter
cltd
pushf
or
cmp
cmp
stos
mov
xor
in
cwtl
es
jp
call
mov
jle
sbb
cs
xchg
stc
mov
stos
scas
iret
aam
aam
js
test
push
pushf
mov
sub
push
jle
.byte
.byte
push
