or
popa
das
jge
pop
xchg
or
mov
fdiv
pop
enter
dec
adc
mov
xor
dec
jge
pop
in
cmc
repz
or
sarl
sub
xchg
or
loopne
inc
pop
mov
or
mov
cmpsb
movsb
add
and
sar
loope
lret
movsb
aas
outsb
xchg
xor
sahf
sub
mov
aam
out
aaa
lds
mov
inc
in
pop
and
dec
mov
or
mov
xchg
rorl
pop
sti
xor
out
out
inc
les
push
or
jmp
xlat
hlt
add
mov
lea
cli
cmc
cs
xchg
dec
out
scas
test
xor
xor
repz
push
jne
push
lret
inc
lods
sbb
mov
mov
adc
dec
jg
pop
in
sti
daa
push
mov
cs
jmp
das
mov
sub
xchg
lcall
mov
jno
jecxz
xor
stc
fmulp
negl
in
xchg
jle
test
pop
mov
loop
pop
or
push
test
clc
pusha
and
je
imul
and
sbb
mov
ss
test
xlat
or
imul
and
push
mov
pushf
fs
mov
cmp
popf
dec
popf
jecxz
lcall
mov
icebp
add
dec
jno
xor
dec
sub
xor
xchg
xchg
icebp
mov
push
hlt
jbe
dec
ffree
push
sbb
push
jmp
imul
xor
add
scas
inc
aaa
repnz
imul
cli
mov
cmc
pop
pop
fcmovbe
std
sub
or
repz
jp
dec
adc
pop
arpl
jnp
xchg
aad
out
and
mov
jb
out
inc
push
cmp
inc
pop
aaa
pop
sti
inc
jb
cwtl
and
lret
lret
mov
ret
cmp
adc
pop
pop
in
int3
cli
outsb
fdivrs
sub
push
push
outsb
cmp
sahf
imul
add
es
pop
test
jge
call
fisubl
out
iret
rep
jg
add
sti
or
jns
mov
mov
lea
loop
in
mov
sub
push
out
incb
lea
lcall
pusha
js
and
js
mov
stos
out
push
fs
dec
scas
dec
xor
xchg
popf
dec
test
or
pusha
push
faddl
sbbb
cmp
adcl
stc
dec
fildll
pop
cmpsb
jge
aam
hlt
cmp
je
repz
ljmpw
mov
cli
cmp
jp
add
or
pop
dec
cld
outsl
sub
mov
or
xchg
sub
pop
add
mov
enter
xchg
popf
fs
in
insl
add
sub
inc
cwtl
push
test
ja
outsb
clc
or
mov
in
into
adc
idivl
xor
mov
aaa
or
lret
jno
subl
dec
jnp
xchg
loope
lret
fistpll
push
cwtl
xchg
mov
mov
test
or
jae
in
add
call
scas
orl
pop
shlb
loop
push
rclb
in
pop
sahf
fadds
shrb
rcll
mov
or
mov
sti
jge
pop
mov
gs
and
loope
xchg
ret
push
and
or
sbb
fsubrs
add
push
leave
int3
inc
adcb
cmpsb
stos
ret
push
dec
inc
dec
pop
daa
gs
loopne
gs
mov
pop
mov
outsb
out
rcl
fistpl
or
ret
and
or
inc
dec
lods
ficoml
xor
push
push
push
rorb
mov
stos
pop
jno
dec
addb
adc
gs
subb
pop
fwait
inc
jl
pop
push
test
jl
int
mov
cli
fbld
lds
bound
cmp
cmpsl
lahf
jge
inc
notl
mov
out
mov
ja
mov
mov
cmp
or
out
pop
xor
push
js
int
or
fisttpll
mov
lcall
dec
cmpsl
lret
adc
cwtl
stc
dec
cmp
mov
push
imul
xor
pop
xor
sarl
xchg
stos
xchg
mov
pusha
xchg
xor
xor
mov
pop
pop
push
movsb
and
sbb
mov
ror
push
dec
add
push
les
xchg
dec
imul
mov
rorl
and
xchg
mov
scas
push
mov
push
repnz
js
aas
out
or
sub
cli
cmp
xlat
sbb
xchg
mov
mov
leave
insl
push
pop
subb
and
ds
bswap
cwtl
cmc
mov
rcrb
je
add
cld
aas
aad
rorb
fsubrs
aad
cmp
push
scas
sti
cli
pushf
call
add
sbb
mov
cwtl
mov
push
test
pop
xchg
or
and
fdivrs
cmc
push
out
or
inc
test
push
mov
rclb
clc
enter
add
push
roll
loope
aas
push
lods
repz
or
push
testb
and
stc
fstpt
xchg
mov
xor
or
and
shl
cmc
ret
cmpsb
rolb
xor
push
inc
cmp
ja
loopnew
mov
ja
gs
test
add
pop
into
lret
gs
xor
in
lret
in
jl
ljmp
pusha
bound
xchg
mov
repz
lods
pop
scas
sub
scas
adc
xchg
mov
inc
and
ret
sahf
xchg
or
out
lods
sbb
fwait
pop
adc
xor
push
inc
or
xchg
xchg
mov
arpl
lock
xchg
sbb
jb
mov
mov
inc
mov
mov
fiaddl
mov
icebp
jae
add
cmp
mov
or
xchg
fmull
sbb
sub
xchg
test
mov
pop
decl
fldl
jmp
push
cld
fdivl
rcrb
or
jl
lock
dec
rcll
lahf
push
mov
in
mov
sub
inc
push
imul
js
jo
or
jo
jno
rclb
jmp
ljmp
or
adc
mov
push
cmovno
adc
push
mov
testl
clc
push
dec
xor
jbe
mov
push
sarl
imul
mov
mov
or
mov
xorb
aaa
subb
and
loopne
imul
mov
and
push
xchg
pop
inc
int3
aas
pushf
cltd
jle
or
pop
clc
pop
mov
scas
pop
lahf
mul
add
mov
jg
pop
xor
add
mov
out
mov
sbb
idiv
pop
jge
jbe
pop
inc
or
mov
std
dec
je
push
movsl
jge
rol
scas
inc
xchg
mov
je
outsb
xor
inc
add
adc
and
push
or
scas
xchg
outsl
leave
and
cmp
sbb
and
add
cmc
mov
sub
orb
adc
xchg
inc
and
adc
fnstcw
sahf
add
or
nop
pushf
dec
push
jecxz
popa
jbe
fildll
cltd
and
pusha
mov
loope
push
xor
xor
sub
add
fidivl
imul
dec
add
int3
call
cmp
pop
adc
inc
or
lods
inc
mov
int
icebp
sti
rorb
out
push
mov
xor
cs
sahf
ss
pop
xchg
les
pop
loop
adc
cmp
add
add
movsb
mov
ret
ja
mov
inc
xchg
daa
xlat
sbb
xor
test
lret
xchg
cmp
adc
lock
xor
jg
lahf
movsb
lea
or
push
jns
scas
loope
lret
add
cltd
pop
jnp
sahf
movsl
dec
adc
mov
lea
xor
jmp
es
pop
add
sarb
xor
xlat
xchg
fs
into
xlat
xchg
test
jb
push
stos
cmpsb
push
daa
add
sbb
ret
pushf
ret
int
repz
adc
sub
dec
push
insl
pop
jle
pop
ss
mov
fisubl
xor
xor
add
imul
clc
lret
pop
cmp
jo
call
xchg
push
push
cld
xchg
lret
push
push
aas
popl
jnp
sub
mov
inc
xchg
lret
std
ja
es
clc
int
ret
or
or
les
andb
pop
ljmp
in
or
insb
ljmp
cmpb
push
je
adc
mov
cmc
push
ja
sbb
aaa
mov
mov
jp
rclb
mov
movsl
sbb
loop
fcomps
loop
leave
sub
or
pop
lods
inc
jg
pop
inc
scas
inc
cmpsb
sbb
or
call
repnz
mov
jb
push
fisubl
out
fcmovne
out
data16
sbb
shrb
arpl
ret
insb
push
pusha
mov
addr16
sbbl
insb
lock
imull
pop
mov
dec
xchg
insb
scas
cmp
mov
push
insl
sub
jnp
ds
push
xor
call
cmp
adc
fcmovnbe
lds
loope
jecxz
sbb
xor
push
push
mov
mov
mov
push
sub
mov
add
pop
sub
pop
aad
jl
xor
pop
nop
hlt
dec
scas
sub
mov
adc
mov
js
in
push
std
pop
mov
mov
out
fcomps
xor
jge
flds
je
xchg
sub
push
pop
sbb
add
test
cwtl
sti
add
das
adc
xor
sub
dec
icebp
inc
in
adc
adcl
mov
push
jns,pt
ljmp
fistpll
pop
xor
pop
dec
sbb
or
xchg
jb
test
push
sbb
fwait
mov
sub
lock
sbb
fistpl
xchg
fidivl
idivb
push
inc
les
xchg
dec
xchg
or
pop
push
icebp
test
pop
popa
mov
lds
mov
cmp
sbb
fstpt
xchg
lds
and
test
sub
fs
and
testb
mov
push
add
icebp
jne
pop
add
jo
and
cli
stos
cmpsb
stos
test
daa
xor
pop
leave
dec
les
xor
aam
dec
push
ljmp
or
pop
orl
xchg
in
jne
cwtl
pop
fistl
fsubrl
aam
dec
or
sbb
pop
cmp
push
add
and
mov
out
add
dec
insb
out
push
mov
cmpsb
pop
push
push
fmul
adcb
stos
cmpsl
jne
test
jns
sbb
jge
test
ficoms
jo
sbb
loopne
fcomps
pushf
test
daa
dec
sbb
and
pusha
dec
pop
mov
in
push
out
fistpl
ss
out
repz
fwait
mov
mov
nop
xor
mov
repnz
xor
push
inc
mov
jnp
fnsave
xor
cmp
push
add
stos
iret
and
adc
scas
mov
adc
cwtl
add
and
ja
adc
xchg
cmp
mov
scas
mov
shlb
ds
xor
adc
fsts
nop
arpl
push
hlt
loopne
jnp
pop
xchg
cld
dec
add
push
addr16
popf
aad
lahf
mov
push
adc
lods
push
xor
mov
fbld
insb
pop
add
sub
roll
sub
push
or
insb
cmp
cs
incl
cmc
pop
subl
pushf
sahf
cld
dec
pop
mov
out
xor
pop
scas
cmpsl
pop
into
add
and
cwtl
cwtl
into
xchg
fs
adc
push
dec
int3
mov
xchg
pop
arpl
sub
int3
inc
push
pop
xor
dec
push
pop
loop
sbb
jle
sti
push
nop
psrlw
jbe
mov
mov
subl
sarb
pop
push
daa
imulb
icebp
in
push
lret
jnp
jae
rolb
pop
cmc
call
mov
dec
bound
repnz
xchg
mov
mov
push
dec
or
adc
es
test
cmpsb
adc
lahf
xorb
ds
cmp
popf
xor
xchg
adc
clc
stos
fldt
mov
pusha
pop
mov
dec
and
pop
dec
int3
inc
mov
mov
pop
mov
daa
stos
push
xchg
jb
cmpsb
mov
bound
test
pop
stos
pop
mov
dec
and
cmp
and
sti
mov
cld
addl
mov
inc
pop
enter
cwtl
dec
in
rcrl
pop
ret
imul
jne
insl
jp
jae
call
pop
and
insl
sarl
inc
aad
xlat
jecxz
repz
inc
cmp
aas
fs
cmpl
bound
pop
bound
mov
push
dec
mov
dec
sub
insb
xchg
call
jns
inc
xchg
cmp
test
pop
jno
fldenv
int3
mov
mov
in
mov
mov
popf
stos
lcall
subl
inc
iret
insb
add
jbe
cmpsb
pushf
sub
out
lret
mov
mov
les
test
add
rolb
jb
cltd
fdivr
sub
fdivl
in
push
or
subl
add
icebp
hlt
cmp
in
jg
out
push
fxch
xchg
test
mov
orl
sahf
insb
mov
addl
xchg
movsl
repnz
aas
jnp
xchg
lret
loope
sti
les
fdivs
sbb
das
inc
sub
sbb
js
mov
mov
push
and
xchg
dec
jecxz
pop
bound
les
add
inc
dec
lds
inc
add
orb
mov
pop
ss
stos
stos
icebp
mov
movsl
mov
repz
push
aam
fldl
xor
mov
aam
jle
jb
cmp
xchg
pop
data16
xchg
lahf
lods
dec
sub
jecxz
sbb
out
ds
add
dec
imul
scas
jmp
xchg
or
sahf
stc
clc
and
testl
sbb
or
or
orb
into
inc
inc
stos
cmc
rcrb
stos
rclb
js
adc
jle
sbb
mov
clc
jno
outsl
out
mov
or
dec
lock
in
dec
xor
js
stos
icebp
hlt
mov
in
stos
push
and
enter
sub
int
xor
pop
xor
adcl
and
sbb
xchg
or
aas
pop
movb
sub
xor
iret
lods
popa
inc
stos
loope
icebp
lret
fnstenv
cs
rcll
xor
lods
outsb
test
inc
jl
leave
sub
jnp
mov
in
xchg
fs
inc
aam
add
ret
mov
bound
test
pop
push
out
pop
mov
push
mov
mov
divl
and
fprem
jmp
cmpsb
in
add
push
rcrl
push
xchg
int
pop
leave
or
movsl
inc
dec
jp
inc
lahf
push
es
loopne
fdivrs
inc
sbb
mov
dec
pop
sahf
fwait
data16
and
fcoml
rorb
out
pop
arpl
inc
jmp
and
push
cmc
pop
fisttpl
fdivrl
mov
imul
mov
in
inc
dec
aad
jge
icebp
test
fcmove
mov
adc
dec
xor
rcrb
mov
daa
movsl
hlt
in
add
push
fisttpl
jb
mov
dec
in
mov
dec
cs
mov
addr16
push
jb
dec
cmpsb
fisubrs
shll
in
lea
sbb
shll
xchg
adc
pushf
incb
movsl
sub
sbb
aas
orb
adc
data16
push
xorb
aas
cvtps2pd
xchg
jne
inc
jo
cmp
pop
jo
stc
int3
out
cmp
jne
or
fstpl
or
icebp
push
and
mov
jno
inc
xor
lcall
lds
inc
repz
loop
jmp
iret
xchg
popf
add
sbb
mov
adc
xchg
lcall
add
inc
add
cmp
mov
loope
outsb
xchg
in
in
jl
stos
mov
aas
outsl
add
cwtl
xchg
pop
rcrb
and
mov
out
hlt
ret
or
inc
push
out
push
adc
push
cs
orb
cli
int
mov
and
jle
pop
fisubs
sub
cmp
pop
inc
das
aaa
adc
cmpsl
les
das
and
mov
jnp
in
mov
lods
pushf
sub
sbb
fildll
and
pop
jno
mov
mov
mov
data16
jbe
lcall
test
inc
jmp
dec
mov
inc
ja
mov
stos
cmp
push
sahf
loope
jbe
or
inc
mov
aas
adc
daa
shrl
es
and
pusha
add
mov
mov
xlat
xchg
cmc
cmpsb
jo
icebp
in
lea
mov
cmpl
ret
push
cltd
test
and
loopne
sbb
jp
pusha
imul
mov
movb
fadds
stc
add
adcl
sub
and
add
inc
outsb
out
fisubs
xchg
lret
iret
shl
repnz
dec
pop
xor
pop
mov
and
xchg
sub
adc
pop
and
mov
inc
int3
fisubl
add
stos
mov
fs
push
adc
lods
fs
lret
jmp
cmp
mov
mov
mov
mov
out
fisubrl
pop
jae
lock
das
repz
and
aam
pop
scas
clc
cs
mov
sahf
gs
rolb
int
mov
adc
out
mov
inc
pop
adc
xor
testl
repnz
fidivrl
decb
leave
hlt
and
inc
lcall
adc
ds
sub
push
scas
mov
cld
add
sbb
sbb
adc
push
pop
aas
dec
dec
lret
js
pop
dec
movsb
push
in
cmc
out
rcrb
cmp
mov
ds
out
enter
call
les
test
sbb
decb
dec
sbb
and
push
pop
xor
cs
sbb
shr
add
sub
pop
add
sub
push
inc
dec
jmp
push
divb
adc
int3
fmuls
sbb
add
stos
adcl
dec
inc
mov
jmp
out
pop
addr16
aam
shl
inc
outsl
pop
out
mov
xor
call
add
add
inc
hlt
lcall
xorl
bound
lcall
stos
in
shll
mov
stc
inc
out
push
rorl
mov
pop
sub
xorb
dec
ja
adc
push
in
ds
loopne
lret
push
cs
mov
outsl
movsb
int3
adcb
jae
test
ja
lret
cmp
sub
iret
sub
pop
test
pushf
pushf
cwtl
aam
push
cwtl
test
mov
je
dec
and
mov
jbe
add
sbb
scas
data16
pushw
aas
or
fldl
insb
push
test
cmpsb
cmc
das
jno
cmp
ret
les
sub
hlt
push
nop
clc
pop
cmp
ljmp
mov
cwtl
add
sub
cmc
jno
inc
adcb
lret
out
ljmp
xor
mov
addr16
jle
mov
clc
inc
and
out
pop
inc
sti
xlat
cmp
inc
jl
ja
loop
dec
add
sub
cmp
aad
push
outsb
dec
shll
jb
fnsave
mov
pop
adcl
repnz
inc
js
mov
xchg
push
sar
scas
sub
leave
pop
aas
repnz
lahf
dec
sahf
cwtl
jnp
lds
mov
lods
mov
cmp
lret
lods
or
fsubs
jge
mov
pop
mov
sub
addl
jg
sti
pop
fstpt
jp
push
xchg
jmp
arpl
leave
mov
pop
mov
arpl
mov
mov
cwtl
pop
lods
jb
jne
mov
enter
cmp
les
jg
mov
les
jae
inc
adc
loopne
popf
call
icebp
aad
xor
or
fsubr
lods
shl
dec
jb
mov
les
xchg
mov
std
mov
lods
cmpsb
test
clc
aas
jle
scas
sti
in
push
mov
mov
pop
pop
out
sbb
jb
mov
psubusb
hlt
call
nop
les
xor
sbb
ret
arpl
push
andb
mov
enter
add
ret
and
add
mov
dec
fwait
mov
lea
push
mov
xor
imul
ficomps
adc
xor
cmp
ja
popa
xchg
cmp
xchg
push
fdivrp
iret
loop
ds
dec
in
dec
lds
pop
push
test
loop
outsl
inc
test
cmpsl
sub
pop
in
jmp
cmp
sub
in
ss
mov
test
into
dec
lcall
cs
jbe
dec
out
jnp
je
pop
popf
into
jbe
dec
push
sbb
lds
xor
fnsave
shrl
xor
fwait
xor
adc
mov
sarl
jle
inc
add
pop
jb
mov
adc
lods
lcall
scas
lock
lahf
stc
mov
faddl
lahf
sbb
mov
je
cli
pop
adc
scas
sbb
fsts
loope
pop
inc
push
out
ja
adc
lods
aaa
jne
sbb
lea
inc
arpl
push
in
jl
dec
inc
ds
pop
cmp
lret
mov
mov
fdivrl
sub
and
sub
movsl
cli
loope
inc
cmp
sbb
lret
xchg
fadd
test
in
jo
or
repz
mov
test
xchg
dec
nop
aas
cli
arpl
dec
inc
lds
mov
xchg
test
adc
lret
pop
lahf
lret
sbb
push
imul
sbb
cmpsb
push
dec
xor
rolb
gs
lahf
cmpsb
adc
pop
fidivrs
xchg
mov
or
mov
loope
enter
mov
leave
leave
lods
add
in
ljmp
push
add
add
sti
bound
out
xor
insl
dec
mov
mov
dec
lahf
jle
outsl
lods
xchg
fucom
add
jmp
xor
xor
add
inc
or
push
ret
clc
sub
test
daa
push
mov
loope
sub
xor
push
cli
clc
fsubs
int
ss
cmp
mov
subl
fcmovne
arpl
or
dec
sbb
shrb
add
sbb
les
or
adc
repnz
mov
mov
jge
sbbb
repnz
shrl
test
inc
outsl
mov
mov
mov
std
mov
test
push
dec
xchg
les
into
or
bound
xor
daa
nop
hlt
stc
jg
mov
jne
and
add
shrl
sub
daa
pop
mov
cwtl
pop
push
out
lods
xchg
stos
xchg
adc
enter
push
sahf
dec
inc
test
jns
lret
mov
out
or
ret
out
or
push
dec
or
dec
sarl
inc
or
movsl
je
add
jmp
push
in
popf
sbb
xchg
fisubrl
in
fmuls
sbb
mov
mov
insb
xchg
fwait
mul
sub
push
lods
pop
sbb
aam
xor
pop
lods
dec
jmp
mov
mov
mov
cmp
xchg
mov
add
insb
cmpl
push
lret
mov
fimuls
insl
mov
mov
pushf
xchg
lahf
dec
push
outsl
mov
out
scas
mov
sub
daa
mov
adc
dec
in
push
xor
xchg
jns
and
pop
lock
cmp
popa
mov
je
out
cmp
mov
add
mov
dec
scas
in
mov
ds
mov
mov
test
mov
popa
xlat
add
fwait
imul
std
movsl
fisubs
cmovs
rol
mov
cltd
sub
add
outsb
mov
fmull
jns
pop
push
and
out
popa
enter
add
adcl
in
stc
das
xchg
cmp
aas
lret
adc
jb
sub
and
cmp
in
rorl
add
ljmp
ja
loope
xchg
dec
adc
js
iret
lock
test
push
fwait
bound
cmc
cmp
jae
xlat
mov
outsl
sub
add
mov
sbb
divl
sub
enter
stos
pop
mov
aas
lcall
xchg
movb
das
sbb
add
pusha
and
fwait
sbb
inc
mov
enter
jecxz
in
mov
xchg
loopne
jle
js
jbe
and
cld
daa
out
fs
jecxz
ds
sbb
insl
fcomi
sub
aaa
xlat
adc
dec
es
pop
or
xchg
xchg
ja
xor
movsb
shl
leave
pop
shll
aam
rcll
popa
sub
lcall
mov
lea
ja
add
imul
mov
mov
hlt
cmp
mov
testl
ja
sbb
loopne
mov
and
adc
cmp
test
add
cwtl
arpl
fadds
inc
cltd
add
in
pusha
pusha
mov
mov
cmpsl
add
push
cmpsl
inc
fnsave
xor
cmpb
lock
inc
ja
jnp
movsb
pop
jnp
mov
lret
mov
adc
shr
mov
fwait
push
or
imul
pop
inc
stos
mov
adc
mov
out
mov
jg
adc
mov
loopne
lods
shll
xlat
icebp
sub
inc
cmpsl
fidivl
sub
imul
fdivrl
add
fbld
fdivs
pop
cmp
sub
and
roll
dec
jmp
add
jmp
mov
test
lods
dec
shlb
shl
dec
aaa
push
cmc
or
movsb
pop
cmc
jns
aas
or
dec
cmp
mov
fisttps
adc
jl
mov
loopne
or
lea
xchg
xor
orb
out
pop
adc
or
imul
jns
lret
pusha
sbb
push
adc
pop
cltd
jo
mov
cli
imul
mov
and
test
repnz
lsl
out
icebp
insl
loopne
in
pop
push
dec
scas
pop
pusha
xchg
add
cmp
mov
mulb
bound
lea
imul
mov
add
iret
mov
push
cmp
ss
fsubp
fisttpl
mov
xchg
in
adc
xchg
mov
in
in
sbb
dec
or
jmp
shll
sbb
insl
xchg
lods
and
insb
les
lahf
pop
test
adc
lret
xchg
iret
cltd
lcall
idiv
icebp
or
popa
cmp
sbb
and
xlat
dec
sub
andb
xchg
mov
inc
idivb
cmp
cmpsl
outsb
cmp
fnstcw
pop
out
xchg
mov
rorl
daa
add
mov
pop
jb
push
xchg
adcb
xor
inc
dec
icebp
add
dec
mov
fsubp
pop
es
mov
mov
push
cmp
repz
and
jg
dec
and
push
mov
inc
cmp
pop
push
sbb
mov
out
es
lds
ss
loopne
dec
inc
icebp
test
cltd
nop
sbb
lods
addl
je
xchg
cmp
or
or
sti
das
pushf
add
xchg
jg
sti
sub
xadd
mov
insb
pop
mov
ljmp
pop
mov
dec
xchg
or
cli
aam
pusha
lods
cmp
pop
icebp
jbe
or
jl
push
testl
insb
pop
jbe
dec
cmpsb
dec
pop
add
cmp
mov
sbb
out
stc
aad
sub
nop
jnp
pop
jae
mov
pop
mov
add
and
jbe
int3
ljmp
fcomip
jae
rcr
jbe
sub
int3
into
mov
sub
inc
push
or
popf
pop
jnp
cmp
ret
in
bound
bound
sbb
bound
ljmp
mov
bound
lcall
daa
xor
sub
dec
cld
jno
imul
outsl
cmp
cs
shlb
popa
jbe
inc
or
ss
push
out
mov
imul
enter
movsl
mov
pop
jge
sub
inc
cld
jmp
xor
sub
scas
test
pop
les
dec
call
fcomps
scas
mov
js
jae
jbe
shrl
hlt
mov
repz
bound
test
cltd
mov
xchg
rorb
jnp
imul
push
mov
push
imul
jne
mov
and
mov
adc
push
add
dec
fdivrl
rolb
inc
fistl
ds
lods
and
sbb
mov
bound
ja
ret
jno
add
pop
or
in
lds
mov
jp
ficompl
xchg
sub
push
sbb
mov
mov
test
pop
cmpl
subl
inc
xor
jne
mov
fwait
ds
pop
arpl
and
and
test
push
cmp
andb
add
jb
mov
jmp
daa
xorb
mov
fnsave
and
xchg
les
xchg
xchg
jbe
xor
out
xchg
lahf
sub
mov
cmpsl
xor
stos
test
xchg
andb
ficomps
sbb
jns
mov
mov
pop
jge
xor
mov
es
inc
jbe
dec
int
imul
xchg
sbb
sub
add
ja
popf
jae
inc
dec
stc
xchg
test
mov
je
aam
adc
cmp
dec
test
and
cs
xor
sub
imul
fiadds
cmp
ljmp
hlt
mov
into
add
je
movsb
fcompl
push
xchg
xor
pusha
arpl
cmp
and
xchg
push
shl
inc
test
cmpsl
test
in
or
test
cld
push
mov
data16
ret
leave
loopne
bound
fiaddl
cmp
in
pop
add
push
pop
ss
sbb
xchg
mov
hlt
cmp
ret
jbe
mov
dec
mov
icebp
jl
and
mov
leave
jnp
xchg
stos
push
push
rcrb
pop
push
inc
std
inc
mov
inc
iret
xchg
and
in
imul
push
ret
shrb
dec
adc
arpl
scas
rorl
addr16
mov
xlat
jne
pop
add
out
mov
lods
or
mov
fmuls
hlt
cmpsb
dec
dec
add
ud2
sub
push
inc
in
outsl
mov
ss
cmp
lret
cmp
int
bound
pushf
pop
cmpsb
cmp
loopne
add
clc
lahf
movsb
stos
into
cmp
mov
adc
adc
jp
mov
out
enter
add
iret
pop
jae
sbb
mov
push
arpl
sub
aam
mull
inc
fs
stc
jne
shl
mov
addl
insl
mov
and
sub
ror
jp
dec
cltd
cmp
int3
es
insl
js
lea
xchg
pushl
ja
les
aas
fcompl
in
mov
adc
xchg
pop
cmp
sarl
in
ror
lret
mov
inc
sbb
shll
sbb
ret
sbb
rcll
loope
mov
movsb
push
mov
cmp
in
mov
sbb
into
dec
mov
push
data16
loopne
aam
dec
pop
lret
mov
or
cld
sbb
in
enter
gs
jmp
iret
sarl
mov
lcall
sub
fistpll
mov
cmp
js
dec
mov
out
sub
ljmp
xor
cmp
mov
jne
xchg
out
dec
xchg
or
cmp
nop
aas
imul
loopne
jns
in
gs
adc
ja
mov
sahf
test
loopne
and
rclb
mov
lea
cmp
add
push
sub
loope
xchg
pusha
adc
stos
push
aam
fmuls
idivb
jae
loopne
jne
pusha
push
hlt
mov
inc
jp
cmp
mulb
push
enter
lret
imul
loopne
and
jg
insb
shll
stc
mov
jp
ja
into
nop
mov
test
lds
dec
sbb
xor
push
xchg
ds
xchg
adc
psllw
lcall
jmp
or
loopne
out
mov
push
daa
push
cmc
psubd
jl
jnp
imul
push
insl
push
fucomi
loope
gs
jae
jae
xor
frstor
mov
jne
pop
dec
in
scas
push
xor
pushf
fstps
and
loopne
loope
lds
pop
mov
sub
jno
rcrl
imul
add
and
cli
cmp
lds
cwtl
xor
inc
int3
mov
or
jmp
adcl
cmp
inc
push
shlb
ficomps
es
mov
das
pop
sbb
ja
int
cs
stos
pop
sbb
adc
sub
push
adc
ss
test
dec
and
insl
jl
fistps
push
xchg
icebp
aam
mov
sti
ret
or
mov
adc
loop
loop
popa
add
mov
int
rolb
mov
bnd
sub
fnsave
repnz
jmp
sbb
mov
faddl
cwtl
push
psrlw
iret
inc
xchg
or
lret
popf
jge
enter
jns
scas
mov
mov
push
xchg
push
mov
mov
mov
push
pop
pop
mov
into
mov
scas
lods
jb
lahf
sets
ret
xchg
imul
mull
in
das
jno
sarb
cmp
add
xchg
xchg
cmpl
jecxz
imul
outsb
dec
call
add
out
mov
push
mov
aas
mov
jp
arpl
scas
cmp
or
jne
lods
lods
jecxz
jns
pop
ds
or
std
mov
and
adc
sbb
sub
or
mov
int
cmp
xchg
cld
push
out
popf
push
cmp
aam
jmp
push
mov
jl
shll
xor
xchg
cmp
xchg
fistpl
sbb
xor
popf
sti
mov
xor
lds
add
push
xchg
inc
adc
stc
dec
xor
inc
jb
push
rcl
pop
lock
mov
xor
adc
arpl
repnz
xchg
mov
mov
lret
mov
adc
mov
cmp
mov
pop
adc
mov
and
jno
xor
jne
pusha
fdivrl
jmp
ret
scas
dec
push
dec
or
das
ss
aam
sub
outsl
je
or
push
adcl
lcall
mov
jb
cmpsb
mov
inc
or
cltd
dec
push
in
fiadds
daa
mov
in
sbb
call
pop
sub
dec
lods
daa
inc
iretw
dec
jmp
jae
inc
aas
adc
mov
imul
les
xor
add
sub
push
das
scas
push
rorl
jo
dec
add
push
xchg
dec
ficoms
lret
jne
pop
fdivr
cs
cmp
push
push
mov
fiaddl
adcl
xchg
lret
dec
push
jne
jp
icebp
pop
cmp
push
repnz
inc
shl
adc
sub
es
mov
mov
mov
sub
mov
cs
sub
pop
sub
push
xchg
and
push
cwtl
push
shll
punpckldq
scas
mov
rol
mov
loopne
sub
add
xchg
sbb
insl
xchg
int3
push
es
push
sub
mov
ret
imul
lock
and
imul
push
sub
cmp
orl
frstor
fidivl
add
inc
lret
push
cmp
mov
push
dec
jle
add
fldt
sub
into
stos
ret
cli
test
in
fcomps
dec
cli
xchg
pop
mov
aad
or
mov
dec
mov
cmc
dec
xchg
jae
sub
nop
push
roll
aaa
mov
subb
rolb
mov
dec
and
clc
push
mov
cmp
mov
jns,pn
dec
mov
dec
add
dec
jmp
and
into
cs
xchg
leave
pop
adc
enter
cmp
xor
iret
nop
int3
cmp
shll
push
dec
sti
icebp
fcoms
and
out
add
andb
arpl
push
movsb
xchg
inc
sbb
mov
mov
icebp
lods
gs
ss
repnz
in
inc
shlb
mov
xchg
inc
sub
sbb
fwait
dec
pop
push
das
mov
push
add
sti
adc
ret
addr16
dec
or
rcl
pop
insb
js
jmp
loope
idivl
adc
cmpsb
stc
adc
pusha
int
scas
scas
xorl
inc
mov
mov
scas
jecxz
adc
out
out
and
inc
mov
mov
stos
cs
adc
xchg
nop
rclb
and
aaa
cmc
nop
test
adc
jmp
jmp
mov
bound
cmp
sbb
sarb
push
or
outsl
movsb
add
cmpsl
dec
sbb
xor
xchg
add
cmpsl
nop
sub
xor
lret
jnp
lock
push
sarb
cmp
in
je
shl
fisttpll
cs
les
cmp
add
hlt
mov
xor
mov
pop
xor
xor
jnp
addr16
or
cli
xchg
push
mov
flds
mov
addr16
mov
lea
subl
std
push
jnp
xor
testl
repz
pop
mov
mov
shll
pop
pop
pop
lea
xor
das
mov
mov
ja
movsb
xchg
fwait
pop
adc
push
icebp
lock
arpl
and
adc
jo
orl
notl
add
push
push
sub
adc
mov
xchg
pop
cmc
cmc
dec
push
loop
inc
mov
mov
mov
xor
dec
adc
neg
xchg
push
push
pop
lcall
jmp
mov
pop
jle
outsl
pushf
fidivs
pop
mov
jns
dec
sub
jge
fimull
sbb
mov
daa
test
jecxz
hlt
pop
sti
sbb
test
xor
or
movb
ljmp
push
cmp
add
and
and
ss
leave
sub
sub
inc
pop
inc
outsb
mov
ficompl
xchg
das
jns
jb
jne
call
push
sbb
loopne,pn
ja
push
inc
and
pop
xor
test
jmp
shll
stos
jno
pop
cmpsl
pop
mov
lcall
dec
cmc
xchg
jo
loope
out
shlb
hlt
pop
mov
cmp
pop
sbb
in
jg
dec
jmp
cmp
mov
lret
dec
xchg
cwtl
shll
jg
xchg
hlt
loop
xchg
js
test
mov
aas
clc
push
sbb
dec
pop
add
pop
rorb
push
je
movsl
sarb
xor
mov
aaa
push
add
ds
mov
mov
xlat
sub
add
bound
shll
jns
jge
inc
in
cli
xchg
pop
and
and
lret
fwait
mov
stos
mov
add
dec
adc
inc
test
aas
cltd
lods
inc
xchg
pop
push
mov
iret
adc
loopne
out
cmp
inc
fs
inc
sbb
js
xchg
sti
xor
cmovb
ret
sbb
stos
xchg
lock
rorb
mov
adc
stc
pop
adc
mov
in
lds
rorb
pusha
loope
cltd
ficoml
push
mov
xor
xchg
out
adc
add
and
cs
lcall
out
or
mov
push
add
sti
cmp
inc
addr16
loope
sub
je
mov
test
lds
push
pop
cli
xor
loop
add
add
dec
xor
jo
mov
inc
xchg
xchg
gs
xor
inc
outsb
mov
ja
mov
push
pop
cmp
ja
sub
dec
xchg
add
in
sti
test
push
jnp
xchg
jne
push
xor
sub
daa
sbb
cwtl
push
test
xchg
sbb
stos
rcrb
mov
cmp
cmp
jnp
dec
dec
lret
adc
xchg
lods
imul
jge
mov
inc
cmpsl
push
cmc
repnz
js
mov
xor
inc
xor
and
xor
pop
inc
xchg
leave
pop
dec
xor
idivb
pop
sti
adc
fmul
sbb
negb
lcall
sub
hlt
stos
fmull
xchg
or
movsb
cmpb
aam
in
or
mov
mov
fs
pop
xchg
mov
cmp
mov
push
int3
clc
dec
les
insl
jne
push
jge
inc
cmpsb
das
addb
push
sbb
popl
xor
mov
ljmp
pop
jae
and
fdiv
adc
cs
xchg
push
xchg
hlt
out
sub
sti
fcoms
or
cmp
cld
fimuls
es
lahf
scas
xor
gs
xchg
add
sbb
xchg
add
inc
or
or
jns
mov
adc
imul
jmp
cmpsl
or
pop
push
das
fidivrl
pop
and
xchg
adc
ret
into
lods
mov
aaa
inc
iret
add
js
cld
adc
push
dec
inc
xor
pushf
addr16
adc
lret
scas
adc
std
lret
nop
or
inc
shrl
cmp
loop
stos
push
mov
outsb
xchg
hlt
xchg
scas
mov
pusha
push
pusha
enter
jmp
push
out
push
mov
stc
inc
ret
mov
mov
push
cmp
push
lock
inc
jbe
arpl
mov
out
nop
pop
pop
lcall
dec
adc
pop
inc
sub
xchg
xorl
imul
push
inc
inc
pop
shr
cmp
xor
fidivrl
add
sub
jg,pn
bound
cs
pop
ret
pop
fld
xchg
xchg
sbbl
imull
loop
das
or
test
cmpsl
aad
mov
sti
cmp
jl
mov
fldl
daa
jle
pop
xlat
adc
js
testb
inc
cltd
popa
insb
mov
test
lret
mov
xor
mov
and
inc
dec
jmp
inc
push
mov
pop
mov
dec
inc
mov
mov
cmpsl
or
les
sbb
dec
and
and
out
xor
or
mov
jmp
out
enter
mov
jg
cwtl
xchg
orb
and
cld
fcom
addr16
loopne
daa
mov
dec
adc
dec
push
mov
aad
out
test
xchg
mov
xor
jmp
fiaddl
jne
pop
ss
push
push
into
sub
pop
jae
out
pop
or
or
imul
xor
subl
xor
or
test
outsb
mov
popa
jp
or
add
popa
idivl
xchg
mov
xor
adc
loope
adc
inc
jae
inc
mov
cmp
pop
mov
insl
xchg
loopne
or
mov
adc
fs
push
out
inc
mov
mov
push
push
shl
aam
mov
clc
loop
adc
fnsetpm(287
in
iret
and
jno
or
mov
xchg
repz
cs
jp
sub
sub
pop
lds
decl
mov
test
std
test
cmp
movsl
mov
or
mov
dec
mov
cltd
in
pop
inc
ret
aad
lods
lret
js
testb
fiaddl
sbb
or
rcrb
mov
outsb
cltd
mov
lods
ret
cmpsl
shr
nop
sbb
outsl
bound
sti
inc
and
cmp
sbb
arpl
iret
enter
mov
mov
int3
addr16
out
addr16
inc
pop
dec
in
leave
test
mov
popa
mov
rcrl
fnstenv
movsl
into
push
or
jle
xor
jae
cmpsb
imul
mov
mov
xchg
jae
and
stos
ret
mov
into
arpl
sti
xchg
add
popa
inc
jg
and
sub
std
push
das
or
dec
test
xchg
js,pt
int3
adcl
add
cmp
sub
repnz
adc
mov
xchg
orl
lcall
addr16
push
add
jb
adc
mov
jmp
lods
inc
pop
jb
repnz
add
xchg
cmpb
inc
push
bound
pop
test
sarl
or
popf
inc
dec
loope
add
adc
and
sbb
xchg
aam
bnd
out
js
cs
les
in
dec
sub
xor
sti
xor
push
into
xchg
int3
dec
add
mov
xchg
popf
dec
xchg
outsl
aad
stc
inc
adc
xor
add
dec
push
and
lods
dec
add
jmp
sub
ljmp
inc
adc
imul
mov
mov
xchg
out
lret
fcoml
adc
in
sub
popf
xor
cli
jg
mov
rcrl
xchg
out
xor
mov
and
pop
mov
mov
mov
sub
pop
mov
repz
mov
scas
sub
aaa
iret
cltd
adc
bound
pop
dec
mov
mov
or
pop
fcomps
push
in
js
mov
fwait
loopne
das
jecxz
ljmp
sbbl
fsubs
insb
push
les
push
faddp
call
divb
push
jo
out
lahf
fnsave
push
clc
out
cwtl
pusha
loope
mov
cmp
xchg
and
mov
divb
fcomip
push
adc
leave
xchg
mov
mov
push
and
fs
adc
jge
and
adc
cmp
ud0
adc
loope
das
lods
sbb
mov
fucom
out
dec
bound
mov
dec
dec
mov
xor
out
test
inc
cltd
decl
pop
loopne
hlt
cs
xchg
in
sub
ret
mov
push
out
inc
mov
pop
xlat
popf
xchg
leave
xchg
add
out
js
mov
popa
pusha
test
out
or
mov
ret
loope
cld
lods
mov
or
cmp
pop
push
movsl
pusha
mov
aam
enter
or
test
adc
pusha
mov
or
lea
pop
adc
mov
loope
xor
dec
or
outsb
mov
jns
cmp
sub
test
jle
sbb
pop
stos
flds
pop
loop
jnp
test
cmp
test
ds
bound
popf
scas
fwait
dec
jo
and
idiv
xchg
or
pop
dec
sub
out
out
push
cmc
and
jbe
int3
inc
jo
adc
sub
and
xchg
mov
mov
rcrl
fistpl
test
mov
push
fnstsw
mov
xchg
xchg
in
addr16
pop
ret
daa
clc
push
inc
add
shrb
mov
push
xchg
iret
mov
xchg
test
mov
xchg
mov
jno
int
lret
repnz
and
adc
mov
sub
push
sub
add
sar
xchg
rcrb
test
daa
mov
addr16
test
push
pusha
or
test
xchg
jne
addb
cli
sbb
aad
ds
pop
aaa
push
iret
jmp
and
jg
adc
lea
push
shrl
in
jle
insl
leave
es
pop
gs
adc
and
push
jo
imul
jmp
lds
or
subb
and
fsub
adc
lret
adc
add
pushf
es
cli
and
scas
outsb
ret
adc
cld
fisttpl
mov
jns
add
and
add
inc
xchg
in
jnp
pushf
movsb
pushf
cmp
scas
sub
xor
std
add
mul
cs
fnstsw
fists
imul
pop
repz
push
pop
xor
cmpsl
aaa
sti
xchg
jge
aad
adc
and
lds
out
aad
leave
test
aad
or
jae
pop
stos
mov
dec
inc
sbb
in
or
in
cmpsl
in
push
lds
mov
test
jne
imul
sbb
addl
mov
sbb
xor
jecxz
call
push
aas
pop
out
or
fiadds
push
mov
ds
cmp
aam
mov
rcrl
cmp
daa
movsl
xor
call
sub
hlt
jg
dec
pop
decb
inc
call
out
jno
push
test
push
hlt
xor
mov
outsb
movsb
or
xchg
adc
lret
test
fcmove
dec
xchg
jo
jns
adc
stc
jl
pop
push
test
roll
movsb
adc
push
push
or
in
loopne
dec
jmp
sub
lret
push
fwait
mov
mov
xor
add
loope
lds
lret
ret
sub
cmpsb
pop
ss
popa
clc
mov
add
int3
jno
push
cmp
loop
push
mov
jl
mov
leave
inc
mov
fstl
jb
xchg
popl
das
mov
mov
jne
pop
mov
sbb
inc
inc
jb
mov
fs
cmc
cmp
adc
shl
stos
lock
shll
inc
cmp
inc
jbe
sub
leave
test
mov
xor
fcmovnb
xchg
adc
sbb
adc
int3
mov
out
pop
cmp
jnp
xor
mov
sbb
dec
push
push
nop
sbb
jecxz
dec
push
inc
and
jmp
xor
rolb
cmp
mov
stos
insl
cmp
sub
push
dec
push
mov
icebp
lds
shrb
ret
mov
and
jmp
popf
fidivrl
sbb
mov
daa
push
rep
mov
aaa
movsl
adc
adc
cli
dec
out
jne
push
push
cwtl
xchg
jbe
pop
sub
inc
add
and
popa
sarl
pop
shlb
insl
rcrb
cmpl
sub
adc
mov
and
push
adc
push
jnp
sbb
dec
daa
iret
mov
int3
mov
xor
mov
cmpsb
icebp
cmpl
inc
dec
sbb
jnp
stos
dec
inc
xlat
push
test
push
mov
mov
shrb
incl
inc
out
xchg
push
adcl
imul
adc
mov
shll
pop
pushf
pop
int
pop
mov
xchg
mov
cmp
sub
ret
dec
pop
cmpsl
out
dec
mov
push
lret
call
mov
in
mov
gs
test
pushf
stos
pop
loope
push
hlt
pop
jo
int3
scas
sahf
addr16
push
dec
incl
pop
outsb
pop
xchg
add
mov
push
jg
cmpsb
dec
je
or
sbb
jo
jge
iret
jno
mov
imul
mov
xchg
movsb
das
pop
cwtl
addb
add
push
int3
push
gs
out
push
inc
cmp
out
inc
cli
add
sub
xor
addl
cltd
dec
mov
std
lret
shlb
rcr
imul
fsub
aam
inc
jns,pn
addl
sub
pop
jnp
xor
xor
mov
scas
js
ja
xorl
mov
add
mov
mov
in
add
loopne
scas
pushf
mov
fstps
add
pop
lods
jnp
mov
pop
push
jg
cmp
fstps
pushf
push
addr16
loope
hlt
lea
push
in
pop
loop
loope
das
insl
adc
fs
lods
in
xchg
cmp
push
sbb
shrb
sti
push
pop
popa
pop
aas
adc
inc
divl
dec
inc
add
testb
lea
add
out
jno
jecxz
out
je
push
out
decl
xor
rdtsc
aas
lock
mov
mov
sbb
jns
sarb
inc
xor
xchg
sub
jmp
lcall
mov
xlat
inc
pop
fldl
jbe
mov
filds
pop
xlat
rorl
jnp
adc
jecxz
bound
stos
mov
ficompl
pop
dec
jae
cs
div
add
jmp
outsl
gs
xor
jo
cmp
mov
pop
int3
shlb
xchg
leave
movsb
test
dec
pop
out
rorb
cmc
and
inc
in
dec
imul
sarb
lea
adc
popa
push
mov
enter
enter
cmp
js
push
sbb
rolb
adc
sub
sahf
and
sub
jb
cmp
add
fsubl
ljmp
stos
push
pop
or
data16
push
or
out
mov
jl
out
in
sti
sub
lahf
pop
test
cmpsb
rcll
das
push
fs
repz
jmp
dec
dec
or
mov
cli
in
mov
jg
popf
sbb
xchg
iret
jo
rcrl
sbb
dec
push
fnsetpm(287
out
jo
sti
jmp
sbb
mov
mov
je
arpl
push
add
dec
arpl
aad
lret
ret
stos
mov
or
dec
cmp
push
stos
xchg
ret
push
jno
cmp
mov
mov
or
in
daa
std
xchg
addr16
or
shr
push
add
adc
shrl
jmp
int3
cmp
mov
sub
call
dec
ja
cmp
xor
insl
xchg
bound
cmp
sar
push
mov
jno
mov
mov
inc
jb
sbb
sub
out
incb
jbe
mov
movsl
das
sub
mov
jmp
out
pop
aam
pop
bnd
in
sbb
push
push
inc
ficoml
cs
imul
test
cmpsb
pop
cmp
addr16
sbb
outsb
xor
cli
dec
adc
int3
inc
jg
xchg
int3
push
inc
inc
mov
repnz
cmp
adc
hlt
sub
pop
aaa
incb
inc
insb
xchg
pop
loop
jb
lcall
xor
jge
jb
insl
aas
inc
mov
out
shrb
adc
lcall
js
inc
loopne
mov
mov
sub
mov
roll
mov
mov
dec
mov
nop
xor
push
inc
sbb
clc
into
andl
jbe
dec
cwtl
mov
mov
insl
xor
scas
fwait
test
xchg
and
pop
inc
add
xchg
pop
lods
ret
fnstsw
mov
cmc
pushf
push
and
or
xor
adc
adc
xor
xor
inc
mov
outsb
cmp
jecxz
sahf
adc
dec
mov
pop
dec
and
bound
hlt
add
ret
std
push
ljmp
mov
add
xor
loope,pt
sbb
inc
cmpsl
addr16
adc
push
es
mov
xchg
movsb
into
or
mov
sti
or
insb
cwtl
push
xchg
scas
or
out
push
push
ficoml
repnz
push
xor
inc
mov
cltd
out
xchg
movsb
add
mov
inc
jg
mov
mov
sbb
xor
jmp
cmp
gs
repz
mov
lods
scas
xchg
fldcw
sbb
dec
and
pop
cmp
stos
xchg
idiv
in
adc
adc
jmp
fidivs
mov
out
outsl
outsb
scas
fldcw
icebp
cmp
movsl
xchg
imull
cmpsb
lahf
xor
lea
or
lea
jbe
int3
cmp
sbbl
jae
or
cltd
and
xor
je
in
addr16
or
add
mov
arpl
xchg
ror
hlt
cmp
mov
mov
cli
rorl
shrb
and
adc
dec
pusha
xchg
xor
mov
je
xor
xchg
call
add
aad
adc
xchg
out
out
add
arpl
ficoml
inc
push
push
popa
push
neg
or
xchg
dec
enter
cltd
dec
rorb
in
imul
inc
inc
adc
and
and
xchg
adc
xorps
sbb
outsb
ljmp
inc
outsl
js
loopne
in
and
stos
mov
jle
mov
dec
sub
mov
ret
inc
add
decl
jno
mov
mov
popf
in
or
cmp
dec
daa
lods
jae
loopne
fs
adcb
lcall
push
cmp
adc
sbb
outsb
adc
adc
neg
gs
sbb
cmp
cwtl
and
jnp
dec
outsl
outsl
xchg
xor
mov
sahf
in
aaa
sbb
add
int3
pop
leave
subl
fs
add
xor
cmp
aad
pop
loope
scas
or
mov
lea
loop
bound
mov
stc
mul
inc
mov
push
mov
adc
insb
loop
out
mov
cmp
aaa
mov
xor
lea
inc
clc
lds
push
bound
mov
fdivrs
jae
adc
xchg
int
mov
jmp
scas
jo
iret
push
int
cwtl
insb
sub
out
lock
dec
sub
out
xlat
lcall
clc
push
movsl
inc
popa
cld
call
popf
sbb
sub
lret
aaa
rclb
pop
inc
scas
shll
or
sub
sahf
mov
sbb
and
xor
jb
ja
dec
loop
push
fwait
xchg
sub
push
call
and
aad
mov
and
jg
xchg
pusha
pusha
int3
ja
sbb
adc
and
mov
fs
dec
movsb
sbb
mov
add
and
jo
mov
xlat
mov
js
out
shll
sbb
fisttpl
out
dec
test
filds
inc
adc
dec
push
jns
loope
leave
sbb
pop
sub
pop
pusha
mov
and
xchg
mov
loope
inc
ret
dec
adcl
shlb
mov
xor
cs
fs
cmp
sbb
lods
scas
pop
cmc
ljmp
or
scas
mov
jno
std
lods
leave
mov
mov
pop
jne
incl
jae
fwait
cmpsl
shl
enter
test
popa
mov
insb
and
das
xchg
mov
mov
mov
cwtl
inc
and
mov
js
cmp
jmp
mov
pop
pop
sbb
cwtl
cmc
or
push
test
js
movq
xchg
rcl
dec
cmpsl
xchg
cwtl
pop
mov
add
dec
hlt
pusha
lcall
ja
clc
adc
mov
sbb
sahf
push
repnz
mov
in
jae
or
push
xor
and
lods
fisttpl
push
ret
xchg
jg
lds
cltd
fwait
int3
jbe
sbb
rcr
inc
add
roll
je
jae
mov
dec
fisubs
divb
jbe
cmp
and
jne
mov
inc
xor
cmc
movsl
xlat
pop
mov
nop
and
dec
inc
xchg
ds
sub
cmp
icebp
ret
mov
jle
dec
les
outsl
lret
stc
jmp
clc
push
out
push
loop
mov
mov
sub
mov
fistpl
mov
loope
lret
pop
mov
std
out
or
jg
fidivs
sub
sub
in
dec
outsb
xchg
repnz
mov
int
jecxz
and
pop
clc
roll
sub
cmpsl
xchg
mov
sbb
sar
rcrb
mov
push
into
scas
fwait
pushf
and
orl
outsl
es
aad
push
js
mov
xchg
adc
mov
lret
or
addr16
sub
popf
jns
loope
push
sub
add
aaa
dec
aam
test
sub
aam
out
sti
int3
je
insb
jno
sbb
fdivrl
repz
in
pop
push
ret
imul
scas
mov
lds
mov
pop
out
lret
mov
adc
dec
mul
cli
leave
jb
sahf
mov
xor
pop
repz
fcmove
js
mov
lods
jnp
cmp
lods
adc
orb
mov
outsb
jb
cmpsb
sysenter
lock
cmp
dec
in
test
in
pop
xor
mov
shl
out
and
stos
lock
stc
push
js
insl
das
daa
insb
aam
cmp
jmp
imul
sbb
js
inc
and
inc
in
cltd
ror
mov
adc
mov
push
xor
jne
cmp
inc
adc
xchg
and
xlat
shlw
add
cli
mov
mov
xchg
sti
and
mov
sbb
clc
mov
inc
popf
or
xchg
cmc
mov
jnp
mov
fdivl
add
std
mov
adc
mov
cmp
jl
int3
or
jb
push
in
sub
lock
pop
or
int3
in
outsb
enter
stos
lods
call
fadd
mov
sbb
adcl
mov
xchg
pop
lods
push
mov
test
xchg
cmp
mov
imul
ljmp
fwait
lret
lcall
sbb
or
push
das
ss
les
inc
xor
xchg
jp
data16
sti
in
jb
mov
jecxz
loop
outsl
out
jle
xchg
sub
mov
mov
out
fbstp
rcrl
les
jnp
dec
fistpl
adc
mov
ret
cli
por
mov
inc
xor
pushf
and
sub
repz
pop
push
ja
cmpsl
xchg
aas
push
or
mov
mov
mov
test
add
aaa
pushf
add
fs
mov
outsb
rolb
and
fcom
push
jg
dec
pop
jae
lock
shlb
sahf
sub
pop
iret
aad
out
lea
test
std
cmpsb
icebp
sbb
out
inc
clc
inc
mov
test
and
outsl
push
call
fdiv
stc
es
or
dec
jp
add
xchg
xor
es
mov
pop
xor
jae
dec
add
jnp
arpl
cld
ja
mov
pop
mov
mov
and
leave
cwtl
call
jne
mov
outsl
jns
jo
stos
iret
inc
data16
movsb
adc
es
fstl
mov
sbb
inc
xchg
in
sar
imul
and
adc
adc
aaa
aad
or
sbb
jmp
es
rcr
xchg
or
pop
inc
jp
push
fldt
push
sub
push
icebp
mov
jl
out
or
fidivrs
fistps
imul
ret
sbb
lods
js
jb
jge
fs
mov
dec
nop
cli
pop
ret
scas
fisttps
push
xchg
orl
pop
dec
enter
adc
leave
mov
pop
jns
out
xchg
add
mov
pop
cmp
in
jns
mull
sbb
jmp
test
mov
outsb
mov
ja
push
dec
shl
ret
xlat
and
enter
pop
dec
jle
loop
push
mov
inc
fdivrp
stos
mov
push
adc
scas
inc
sbb
insb
cmp
push
jbe
shll
xchg
shll
xchg
fs
test
je
mov
cmpsl
shll
lcall
adc
and
call
dec
mov
dec
xchg
mov
mov
pusha
jne
xor
jge
mov
mov
clc
push
inc
fwait
mov
repnz
cli
popa
es
adc
lret
mov
fwait
dec
into
mov
push
and
rcrb
gs
mov
add
out
and
jle
cmp
mov
mov
cmpsl
cld
in
jge
test
push
push
xlat
mov
addl
adc
xlat
adc
adc
push
les
decb
addr16
out
jno
test
push
cmp
mov
sub
popa
popf
dec
mov
repnz
inc
pushf
inc
out
aas
jmp
rcl
push
ret
xor
or
dec
stc
sarl
or
xor
lahf
sbb
mov
ss
jmp
adc
sub
pop
dec
sbb
add
rol
mov
jmp
adc
rclb
stos
add
or
cmp
fldt
out
jne
into
out
imul
lea
push
sub
aad
and
repnz
mov
jno
ja
mov
cs
ss
dec
clc
mov
lret
jae
push
pop
rcrb
call
inc
add
lods
les
xchg
stos
ss
sub
and
xchg
jo
repnz
shll
sbb
adc
add
loop
xor
test
mov
adc
in
stc
rorb
pusha
mov
data16
aaa
xor
jns
pop
lock
fstpt
adc
inc
jmp
sarb
add
jo
adc
sbb
inc
cmc
pop
fisubl
es
fsubrs
inc
inc
sahf
fisttps
jg
stos
jmp
stc
into
xor
push
jp
push
std
loope
das
cmpb
mov
mov
pop
jmp
pop
sub
pop
cpuid
fists
adc
jecxz
data16
mov
ds
inc
sbb
cmpsl
adcl
inc
mov
int3
and
mov
push
xor
xchg
into
or
inc
and
les
pop
mov
div
jns
jns
pop
jno
cmc
dec
or
pop
mov
mov
adc
pop
pop
fimuls
mov
or
inc
jae
pop
repnz
ret
jle
ds
fldenv
inc
fldt
fistl
cmp
fisttpl
mov
push
loopne
lea
hlt
mov
lea
add
push
ss
fldl
mov
or
inc
out
mov
andl
rorb
shl
int
mov
fwait
testb
or
pop
cmp
es
xchg
jo
popa
push
mov
test
fdivrl
push
imull
daa
daa
cltd
dec
repnz
mov
and
mov
mov
sbb
mov
sbb
lret
mov
sbb
lods
add
icebp
cld
shr
cmp
test
pusha
ja
sub
mov
push
pop
test
subb
cltd
jae
aad
mov
lock
pushf
mov
jmp
sahf
roll
cmp
cmp
push
cmpsl
inc
sub
sahf
loope
mov
daa
js
jp
cli
inc
ljmp
push
mov
or
push
addr16
xor
dec
adc
mov
cltd
sub
and
xor
daa
andl
ret
andb
add
jo
in
jno
data16
jg
in
adc
mov
dec
jp
fstp
push
xor
bound
leave
orl
mov
mov
dec
scas
adc
repz
lods
rcrl
or
ficomps
dec
loope
adc
mov
arpl
lods
mov
inc
lock
bound
cld
sahf
pop
sbb
or
loop
jp
jmp
mov
scas
ss
add
push
push
cmpl
incb
cmp
lods
mov
jb
mov
push
mov
inc
loop
repnz
cs
in
pop
mov
or
add
je
das
add
lret
out
cld
push
dec
std
ret
popa
xchg
dec
dec
cmc
hlt
lahf
mov
mov
push
mov
mov
adc
mov
pop
loope
lds
stos
or
cwtl
inc
and
fidivl
fcmove
das
push
subl
add
dec
lcall
adc
push
jbe
add
pop
xor
subb
notb
cmp
out
mov
test
jl
inc
jl
cmpsl
push
dec
leave
ret
adc
push
addr16
and
push
mov
mov
jne
sbb
dec
enter
jle
or
stos
pop
aas
jmp
inc
dec
out
jnp
add
inc
enter
jns
stos
dec
sub
sub
push
lret
loope
cld
add
stc
flds
stos
shl
test
mov
dec
jb
sub
or
pop
push
xlat
ljmp
jne
sub
sub
mov
fucom
jl
mov
sti
test
shlb
xor
bound
imull
push
ja
loop
addr16
adc
sbb
mov
and
rcrb
cli
or
push
xor
push
adc
dec
or
scas
int
stos
aam
mov
insl
push
in
ds
sbb
sub
lcall
fwait
or
push
dec
mov
ljmp
jmp
lds
dec
into
pushf
scas
xchg
mov
shll
jle
mov
mov
mov
shll
fmulp
pop
les
pop
std
out
popf
frstor
add
sub
and
data16
iret
mov
mov
inc
rorb
daa
popf
adc
outsb
into
pusha
roll
xchg
mov
cmpl
es
add
adc
mov
push
dec
test
dec
movsb
push
sub
xor
add
lahf
aad
loopne
gs
sub
adc
pop
cmp
sbb
ds
loope
popf
lods
bound
jecxz
mov
or
inc
sub
xchg
jecxz
int3
mov
push
mov
xor
cmp
pop
ret
addr16
push
push
and
std
pop
in
testl
negb
xor
xchg
xor
push
in
out
lock
and
xchg
out
mov
cmp
mov
lret
aad
sub
mov
out
dec
int3
cmc
jae
dec
cmp
jge
popf
sub
xchg
push
xchg
pop
into
add
scas
xchg
or
cmpsl
scas
enter
xchg
ds
loope
push
scas
aas
in
daa
dec
sbb
and
adc
add
or
popa
adcl
sbb
not
lods
ds
xor
sub
pop
fwait
push
das
lock
xchg
mov
jo
divl
cmpsb
incb
shll
push
or
xchg
mov
sub
xor
or
ss
pop
call
cli
ds
jne
cmpsb
ss
adc
cmp
pop
or
shrl
sbb
push
pop
dec
pop
cmpsl
sub
lea
xorl
mov
enter
cmp
mov
jmp
cltd
sbb
cli
pop
jno
imul
mov
test
adc
jo
cmpsb
ljmp
push
add
dec
jno
test
xchg
jecxz
dec
leave
cltd
inc
popa
sub
and
loope
sbb
jb
xor
rcll
loopne,pn
mov
lock
inc
mov
insl
xorl
js
jmp
imulb
pop
icebp
cld
cld
in
out
daa
das
lahf
repz
xchg
inc
and
cld
daa
jle
lds
or
lcall
in
loop
mov
mov
flds
lea
mov
sbb
mov
mov
mov
arpl
jecxz
sub
cmpsl
inc
push
xlat
pop
sub
mov
ss
or
lcall
pop
xchg
and
outsl
in
dec
rolb
or
out
jns
fst
jle
mov
fisttpll
shlb
lcall
xchg
adc
rcrl
push
xorl
ret
jae
jo
inc
nop
popf
test
scas
jo
push
in
jg
xchg
adc
mov
xchg
das
lahf
sarb
daa
pop
xor
adc
mov
arpl
test
test
test
mov
les
add
fiadds
cltd
cld
mov
pop
mov
mov
cltd
imull
add
dec
popl
popf
push
mov
inc
push
inc
mov
push
loop
arpl
add
mov
das
xchg
mov
test
scas
test
daa
lock
test
pop
ret
inc
push
add
fs
divb
jge
jg
outsl
leave
lret
icebp
mov
cmp
rclb
or
push
mov
sbb
rorl
cs
arpl
cmp
or
dec
icebp
out
repz
mov
mov
inc
les
xchg
adc
jle
dec
sub
dec
or
out
sub
dec
scas
divb
in
rcr
lea
stos
cmp
add
fwait
jle
dec
xor
popl
enter
nop
push
add
inc
outsl
fldt
lret
jl
or
push
or
mov
and
xchg
cmpsb
into
pusha
jbe
test
in
imul
push
adc
pop
sbb
xchg
sbb
rcr
mov
xchg
dec
js
add
and
data16
push
mov
and
xchg
and
inc
andb
xorb
call
add
xor
jl
xchg
imul
xor
sub
dec
cmp
nop
pop
pushf
add
inc
mov
jmp
in
out
add
cmc
test
jo,pn
cld
pushf
fcomp
test
ja
out
pop
or
rolb
pushf
or
and
sbb
push
mov
sbb
in
push
ja
push
sbb
fmull
rcll
stc
jno
xor
push
xchg
nop
scas
cs
mov
stos
inc
xchg
add
mov
sbb
push
popa
aas
test
lcall
xor
cmpsb
sub
js
mov
push
cs
shr
cmp
ss
test
loop
adc
int
adc
iret
xor
jp
push
fsubrs
bound
jmp
jae
enter
pop
push
popf
xorl
arpl
call
in
xlat
push
push
fchs
sub
push
mov
insb
jg
mov
push
dec
adc
loopne
iret
out
mov
stos
pop
xor
sub
lcall
daa
mov
fcompl
push
and
mov
cmp
mov
push
pop
nop
cli
push
push
mov
adc
lcall
pop
out
mov
mov
stos
out
xor
push
push
dec
sub
lods
loope
xchg
fsubrs
in
adc
pop
pop
lret
sarl
imul
std
cmp
int3
jg
and
rolb
jg
cmpsl
fwait
jae
mov
movsl
iret
pop
push
sbb
out
push
xor
sbb
xchg
xor
or
lahf
pusha
outsb
fs
jnp
jb
pushf
ja
adc
dec
fwait
lret
pop
insl
je
jns
mov
mov
mov
insb
mov
cwtl
stos
pushf
sbb
push
mov
mov
xchg
pop
int
lcall
and
leave
in
sub
mov
or
inc
inc
push
mov
gs
test
cmp
push
idiv
pop
scas
fimuls
ret
repz
dec
xor
cltd
push
push
add
daa
cs
shll
ds
leave
adcb
cwtl
cmp
lock
repnz
subl
shlb
repz
test
jne
daa
in
subb
push
into
fisubs
aas
ds
adc
push
pop
xchg
arpl
xor
fwait
call
add
jl
jne
inc
imul
or
xchg
add
popa
push
rcrl
add
jl
out
pop
pop
outsb
jle
cmpsl
shl
or
pop
stos
popw
repnz
pop
sbb
movsl
xchg
scas
cmpsb
or
arpl
mov
cmp
mov
dec
fsubs
dec
test
or
dec
les
dec
jge
mov
and
pop
orb
fsubs
lock
dec
lahf
mov
cltd
stc
pop
mov
mov
cmpsl
pop
js,pt
fstl
mov
sub
mov
xchg
and
clc
ds
fldcw
jb
hlt
cmp
cmp
cmpl
ss
dec
sbb
cli
adc
sbb
mov
mov
jecxz
sub
sbb
cmp
test
das
mov
sti
mov
sti
std
std
call
hlt
jle
push
filds
or
pop
sbb
jmp
mov
jmp
enter
fwait
ljmp
clc
cmp
popa
fcomps
enter
in
xchg
cmc
shll
lds
inc
in
filds
jbe
addr16
into
add
xchg
nop
loope
out
cmpb
adc
sub
popf
or
fcomps
sti
std
jno
add
mov
push
sti
adc
in
sbb
out
xor
pop
pop
jbe
mov
rcrl
in
jmp
sub
jp
rcr
xchg
test
icebp
insb
or
sub
imul
arpl
jmp
jmp
repz
and
loopne
ljmp
inc
push
xchg
sub
jb
int3
xor
gs
adc
or
pop
jg
sbb
fincstp
xchg
test
adc
and
xchg
adc
and
inc
xchg
icebp
jb
ret
jle
dec
stc
xlat
and
movsb
dec
loope
xchg
cwtl
ret
cli
or
xor
xchg
icebp
dec
pop
fists
cmp
adc
inc
std
cmp
ret
iret
mov
mov
scas
fcoms
and
mov
adc
sub
lock
pop
dec
jo
cmp
jg
pop
lea
xor
mov
jne
leave
sbb
pop
out
sbb
loopne
out
idivb
scas
push
test
test
jl
adc
mov
lahf
pop
jbe
sub
loop
cs
inc
adc
cmp
rclb
and
arpl
or
popa
xor
inc
fdivl
out
xchg
insb
mov
push
xor
divl
call
xor
add
fdivs
jle
test
insb
loope
jg
enter
pop
adc
lods
loop
iret
mov
popa
sti
inc
out
cld
insb
inc
mov
flds
stos
and
in
cmp
pop
les
hlt
leave
xlat
lret
sarb
inc
xor
pop
movsl
xor
mov
mov
ret
xor
push
add
aam
std
scas
in
or
push
mov
outsb
jbe
adc
in
ja
pop
or
jl
xor
jbe
jecxz
cld
ret
mov
aad
cld
adc
jge
xchg
cltd
sub
rclb
ds
js
pop
nop
cmp
ljmp
mov
cltd
test
and
push
fwait
and
cmc
cltd
add
dec
aaa
pop
pop
mov
adc
push
sbb
lcall
cmpsb
mov
pop
shll
andl
dec
addb
lods
sti
leave
into
movsb
adc
cmp
jnp
lock
xchg
lcall
in
into
mov
popf
adc
mov
jno
loop
mov
arpl
add
mov
je
sub
ret
stc
adc
and
mov
push
fwait
je
shll
cltd
inc
mov
mov
mov
mov
imul
cmp
in
mov
xor
in
inc
or
adc
scas
inc
icebp
loop
pop
int3
scas
imul
fisubl
cmc
repnz
icebp
jge
inc
sbb
mov
xor
mov
mov
repnz
out
cmp
hlt
add
jge
dec
xor
lcall
push
push
sub
inc
jge
hlt
fstl
jno
mov
call
lock
sbbb
hlt
aaa
inc
aaa
mov
iret
inc
mov
or
test
cmpsb
mov
out
in
mov
jecxz
sub
dec
aam
and
pop
insb
test
out
mov
mov
jns
popa
pop
jne
jne
clc
mov
push
add
mov
es
push
sbb
sub
int
fdivrl
hlt
in
push
sub
mov
jb
pusha
pop
neg
push
es
pop
scas
push
orl
add
mov
mov
fidivrs
pushf
cmp
xchg
mov
dec
sbb
and
xchg
pop
cmp
scas
lods
pop
xor
jo
gs
test
call
push
xor
daa
xor
lahf
bswap
ficoml
add
jo
push
rclb
inc
jo
stc
push
add
rcll
in
jg
mov
stos
in
cmpsl
mov
int3
push
in
imul
mov
or
popf
push
insb
cwtl
push
or
jns
jbe
mov
dec
xchg
xor
andb
in
shl
out
lds
sti
add
das
int3
add
addr16
out
or
inc
xchg
sbb
adc
cld
inc
pusha
dec
jns
pop
xor
adc
mov
push
inc
xor
inc
mov
lea
aam
add
xchg
fldenv
hlt
mov
repz
dec
and
gs
test
das
incl
xchg
pop
mov
dec
mov
out
hlt
xlat
scas
lds
sarl
into
loopne
in
lcall
leave
sbb
jge
push
sub
pop
pop
fmull
and
jp
mov
rol
mov
nop
pop
dec
xor
cmc
xchg
ljmp
add
jl
mov
addb
pop
xchg
mov
dec
pop
jmp
mov
xor
rolb
sarl
ljmp
or
push
lock
jnp
sbb
or
bound
jns
repnz
inc
rcll
cs
mov
testl
mov
shl
je
fwait
adc
or
push
jns
push
test
rolb
test
or
rcrl
or
cld
push
std
sti
lods
jl
ja
xor
sbb
out
jmp
pop
je
and
pop
xchg
sti
push
lds
adc
ja
mov
jnp
ret
sbb
addr16
sti
mov
in
jno
lcall
mov
dec
xor
addr16
adc
mov
mov
fwait
pop
lock
adc
pop
out
inc
pop
sub
fwait
or
hlt
cli
cmp
imul
mov
sub
lea
push
pop
jns
xor
sbb
mov
jne
cmpsl
xor
dec
mov
icebp
pop
jecxz
pop
sti
inc
repz
or
int3
dec
aam
add
fs
mov
push
dec
or
xchg
test
loopne
cmpsl
pop
cmp
xor
add
in
insl
jl
sahf
jl
and
push
jmp
xlat
or
test
pop
loopne
pop
sbbb
pusha
xchg
call
and
out
pop
mov
jl
iret
sahf
and
cmp
scas
pop
adc
cmp
xchg
cmpsb
add
shll
sarb
xor
xlat
mov
jae
push
shr
out
into
sub
icebp
push
push
or
mov
jns
mov
pop
lahf
out
ljmp
insl
lahf
fldl
rorb
into
lds
sti
mov
jge
fsubs
sbb
cmp
and
dec
jns
push
ja
add
dec
jno
test
data16
push
test
inc
push
or
test
jnp
inc
cmpl
sub
pop
fstpl
ret
dec
mov
es
mov
mov
ud0
mov
add
push
xchg
push
fs
dec
clc
aad
mov
adc
leave
gs
repz
enter
mov
int
and
dec
add
add
add
sbb
jmp
fs
outsb
inc
and
out
pop
mov
inc
lods
not
and
aaa
xchg
push
into
xchg
inc
lret
sti
or
rclb
jnp
or
stos
jmp
mov
adc
jae
imul
lods
int
cs
outsl
fldcw
adc
dec
in
xor
and
and
iret
jmp
pop
popf
xchg
and
mov
loope
mov
lret
jl,pn
dec
loope
sbb
ljmp
xor
lret
cld
lods
orl
out
sarb
or
jns
or
mov
imul
imul
jp
mov
xchg
es
movsl
sahf
mov
add
jmp
xlat
insl
sbb
mov
out
stos
repz
mov
movsl
clc
cmp
jno
mov
sub
push
sarl
sbb
iret
xor
icebp
push
pop
dec
sti
in
mov
push
int
out
imul
push
test
sub
jmp
push
ljmp
cltd
sub
add
adc
push
movb
insb
das
xchg
fwait
sub
and
pop
xor
mov
scas
sarl
aas
in
inc
xor
push
loope
jbe
je
sti
test
fidivl
test
lahf
cmp
xchg
cltd
mov
push
mov
ret
call
fbstp
jle
lcall
leave
movsb
call
les
pusha
mov
pop
data16
push
data16
cmpsb
mov
loop
mov
xchg
stos
and
into
insb
pop
push
jmp
xchg
repz
push
adc
and
nop
popa
popf
icebp
movsl
push
insl
or
jmp
mov
push
clc
push
mov
or
ds
push
inc
xchg
push
cs
test
mov
test
sub
fisubs
divb
and
inc
cmpsl
dec
mov
jns
jge
add
test
and
shlb
stc
mov
ljmp
jno
cs
push
loopne
jno
inc
xorps
sti
sbb
mov
push
mov
lret
subl
loope
push
push
xor
arpl
sub
add
dec
xchg
jno
loopne
push
loop
push
data16
mov
cmp
stos
and
sub
inc
adc
cmp
jecxz
enter
xor
aad
sbb
inc
mov
addr16
ffreep
mov
loop
call
push
shrl
pop
pop
pop
je
int3
mov
inc
and
imul
inc
aad
mov
sbb
cli
mov
pop
mov
movsl
test
jnp
aas
jge
aaa
dec
les
aad
test
cmp
test
popa
fidivrl
mov
iret
adc
pop
xor
xorl
fcmovbe
out
movsl
out
add
cs
jge
sbb
mov
cmp
inc
ljmp
pop
jge
sub
pop
ljmp
out
addr16
test
mov
push
lea
pop
lahf
out
push
and
or
dec
stc
cmp
mov
pusha
movb
sub
xchg
mov
pop
sub
mov
inc
add
stos
push
js
mov
rcr
push
xchg
dec
imul
xchg
gs
outsb
andl
sbbl
jns
and
aad
subb
lret
mov
push
xor
insl
dec
fisttpl
jb
ret
aad
movsl
imul
pop
push
shll
push
lret
iret
inc
push
xorl
add
push
lock
aas
mov
or
test
mov
xchg
and
sub
xchg
mov
cs
lods
aam
fisubrl
jns
shlb
mov
xor
into
mov
ret
loop
dec
push
add
lcall
movsl
push
cmp
imul
jge
nopl
jle
jmp
rolb
or
xchg
insl
test
xor
aad
push
stc
pop
incl
sahf
sbb
movsl
roll
sahf
dec
and
ljmp
aad
sub
fiaddl
adc
inc
xor
mov
dec
shl
dec
popa
mov
ljmp
fsubr
es
xlat
fisttps
pop
bound
sbb
lock
mov
and
mov
in
andl
outsl
xor
xchg
cltd
mov
nop
std
sbb
cli
sub
rcll
sahf
dec
sub
mov
and
pop
mov
outsl
inc
or
mov
mov
and
arpl
sub
out
push
sbb
in
fbld
dec
rclb
cmpsl
scas
jl
aaa
mov
cli
xor
mov
shlb
and
sti
jbe
inc
fstps
jnp
rclb
daa
pop
mov
lock
or
inc
arpl
stos
cld
cwtl
in
test
mov
dec
jmp
jmp
dec
jp
add
add
movsl
nop
pop
mov
sub
andl
mov
aaa
pop
lock
mov
xor
jbe
push
mov
jge
jno
dec
test
gs
pop
jno
rol
rcl
sub
mov
mov
test
shl
std
mov
xor
xchg
rcrb
sarb
iret
out
cmp
outsl
sub
push
push
popa
jmp
cmp
cmc
stos
push
inc
jne
cltd
fst
cmp
add
mov
int
dec
jns,pt
inc
enter
xchg
lds
imul
sbb
flds
xchg
test
daa
jmp
jp
std
aam
inc
mov
imul
jns
pop
xor
jp
scas
inc
lods
jmp
aas
pop
mov
adc
mov
push
fldpi
xorb
cmp
imul
shlb
xor
neg
mov
xchg
lods
cmp
push
sub
in
pop
lea
out
xor
int
inc
mov
imul
or
js
or
dec
xor
xor
dec
sub
mov
xchg
mov
aas
shlb
mov
sub
and
xchg
imul
xchg
sbb
pop
in
test
push
lcall
dec
arpl
push
jae
jle
sbb
xchg
insl
add
ds
insl
sahf
mov
mov
call
faddl
ror
sti
mov
cs
mov
push
loopne
mov
jnp
ror
aaa
dec
dec
nop
mov
enter
pop
adc
ret
rclb
mov
sbb
cmpsl
mov
cwtl
daa
or
std
loopne
inc
pushf
xor
jp
add
lea
mov
mov
add
mov
hlt
subb
xchg
jle
imul
jp
shlb
sub
in
fnstenv
jl
arpl
adc
loope
inc
pusha
sti
cltd
cmp
add
jp
xchg
mov
jge
mov
xlat
insb
loop
clc
inc
pop
call
jle
fsubrs
mov
lock
cmpxchg
ja
and
fst
dec
aad
arpl
xchg
sub
jmp
add
jno
jns
mov
xchg
mov
int3
and
jns
stos
dec
int3
test
jl
rorb
icebp
insb
loope
and
cmp
and
outsl
paddusw
stos
cmp
dec
and
rorl
xchg
ja
cli
aad
lret
mov
sbb
and
push
pop
sub
xchg
imul
popa
pop
dec
mov
add
fmull
mov
and
mov
mov
fiadds
jo
xcrypt-ofb
cmpsl
lods
sbb
and
sarb
fisttps
btrl
dec
repz
scas
sub
push
push
test
jmp
ss
lcall
xor
stc
sbb
sahf
xchg
xor
std
adc
adc
adc
inc
repnz
xchg
cmp
jge
lahf
jecxz
ret
aam
dec
and
sbb
and
inc
xor
pop
cmp
mov
stos
or
lods
xor
int
lods
cmpsl
insl
jecxz
inc
jg
cmpsb
sub
xchg
jbe
aad
xor
int
mov
sbb
or
pusha
pop
dec
jge
adc
fwait
adc
xchg
push
setnp
mov
xor
and
sti
out
inc
or
mov
adc
cmp
mov
push
jp
adc
xchg
popf
mov
rcrb
dec
in
dec
repnz
cmp
test
jg
in
cmp
dec
out
xchg
adcl
push
mov
js
sub
mov
or
imull
clc
mov
or
cltd
mov
gs
and
add
pop
div
xlat
loopne
sub
pop
sarb
add
lock
jp
jb
xor
ret
xchg
mov
and
add
fmul
mov
xchg
leave
subl
out
outsl
in
mov
gs
xor
push
adc
jo
into
xchg
xor
nop
jnp
mov
add
inc
sub
mov
test
or
shrl
shrl
and
push
inc
jns
outsl
inc
sub
fwait
sub
daa
lcall
popa
adc
mov
sub
xchg
fsub
push
rorl
jno
push
push
fadds
fidivl
lods
sbb
ret
push
les
mov
jle
mov
jne
pop
insl
push
scas
das
ret
js
lods
push
and
outsl
jmp
mov
enter
jmp
jo
mov
xchg
mov
aad
adc
jne
dec
popf
les
cmpsb
dec
sub
std
and
xchg
ret
gs
test
lock
adc
popf
fidivrl
imul
mov
cmp
sub
pusha
mov
add
sbb
or
lock
call
imul
out
fidivrs
xchg
popf
dec
mov
and
fildll
mov
stos
mov
inc
sbb
sbb
fadd
cmpb
pop
lods
sub
daa
std
mov
mov
mov
movsl
lds
mov
cmpl
mov
or
loop
cmp
jo
pusha
mov
test
cmpsb
dec
add
out
out
push
jae
es
cmp
push
bound
fwait
fs
popf
jg
pusha
sarb
ficompl
pusha
dec
jmp
mov
dec
pop
cmp
fmull
xor
int
in
push
rcrb
les
hlt
pusha
shrl
dec
sub
mov
mov
lods
js
jl
push
jecxz
dec
int3
pop
jns
leave
shrl
jp
ret
or
sbb
sahf
and
ja
lret
xchg
xor
add
pop
mov
cmc
shrd
mov
fs
daa
mov
xchg
ret
lods
sub
out
testl
inc
inc
fcmovu
sti
in
data16
pop
fstpl
bnd
jecxz
js
mov
repz
js
pop
pop
loopne
and
popf
push
or
mov
test
cmc
dec
sub
push
xchg
es
xor
enter
xchg
addr16
adc
push
pop
fldenv
pop
jo
nop
dec
fwait
daa
inc
mov
cmp
mov
lock
mov
pop
in
push
mov
adc
stos
mov
pop
in
aaa
pop
add
sub
xor
cltd
mov
mov
or
scas
js
jno
xor
mov
loope
mov
pop
inc
xor
arpl
inc
outsb
push
xchg
enter
imul
mov
test
xor
mov
je
jae
lcall
insb
pop
nop
xchg
fmul
xor
sbb
shrb
and
insb
pop
sub
mov
data16
xchg
add
gs
ljmp
add
xor
cmp
in
add
mov
ret
aaa
pop
imul
into
test
dec
pusha
fwait
add
pop
mov
mov
fwait
pop
sti
sbb
int3
stos
rcrb
cmp
inc
xchg
xchg
mov
mov
leave
xor
jmp
mov
dec
cltd
sbb
fprem1
enter
or
mov
and
xor
cld
rorl
mov
movsl
mov
add
fstpt
cmc
xchg
movsb
stos
das
nop
out
mov
xor
adc
je
test
push
jo
sub
clc
out
push
filds
scas
or
or
stos
add
pop
popa
fcom
xchg
ror
pmaddwd
or
popf
pop
mov
mov
and
gs
jle
in
push
out
daa
fldcw
sahf
stos
mov
xchg
xchg
jb
dec
popa
lret
loopne
dec
jmp
inc
mov
add
insb
add
add
mov
es
sub
test
mov
pop
inc
sti
pop
fwait
dec
iret
xor
xchg
dec
addr16
sbb
out
and
mov
movsb
lret
nop
lods
fwait
jae
push
cmp
inc
sbb
cli
mov
mov
mov
mov
stc
shlb
cmp
jbe
repz
mov
inc
fs
ret
lea
cmp
pop
cmpsb
dec
jns
and
xchg
je
or
push
jg
add
aad
test
push
cmp
sub
and
int
add
dec
xchg
jl
ds
and
mov
push
movsl
fsubrp
ret
popa
fsubl
stos
arpl
push
jbe
dec
cmp
or
out
xchg
inc
or
sub
mov
shll
cwtl
jge
push
push
in
cmpsb
adc
sub
inc
scas
lcall
and
mov
repz
movb
cmp
fsub
cmpb
mov
push
test
mov
cmpsl
pop
inc
mov
xor
pop
divl
sbb
add
in
divb
ja
bound
push
test
cmp
js
adc
fstps
imul
dec
aaa
or
aam
fdivs
adc
dec
or
xor
cmp
faddl
pop
pop
int3
nop
cli
xorl
cmp
or
sub
mov
outsl
pop
fmulp
mov
in
xor
outsl
add
dec
mov
adc
jl
shl
outsb
jo
nop
adc
aad
in
cmp
dec
pop
lret
adc
lret
insb
sub
cmp
jmp
out
je
pop
push
loope
add
adc
jecxz
push
xor
rorl
ja
stos
pusha
dec
lods
sbbb
jbe
lcall
push
cmc
cli
jno
imul
insl
mov
int3
cs
jns
rcll
clc
rclb
mov
cmc
jo
sbb
loope
call
and
pop
out
dec
xchg
shlb
mov
pop
fisttps
je
shlb
or
aas
cwtl
xchg
push
mov
outsb
cmp
and
pop
aam
pop
jno
pusha
in
pop
adc
mov
sub
mov
icebp
pop
push
jecxz
jge
shll
movsl
ja
dec
ljmp
jns
cltd
or
sub
mov
or
and
mov
and
push
cmp
adc
and
sbb
mov
in
loop
add
push
imul
out
dec
xchg
mov
ret
cmp
or
or
fdiv
aam
cmp
cmc
aas
psrlq
adc
cltd
es
popf
push
cmp
push
or
insb
es
inc
lods
dec
lds
pop
pop
and
add
dec
mov
inc
lods
movsb
scas
iret
push
ljmp
mov
ds
push
call
stos
mov
xor
out
jo
pop
pop
out
xorb
xor
mov
out
ljmp
push
or
or
das
or
push
in
jecxz
sbb
jo
je
aam
ljmp
dec
out
fs
js
cs
and
mov
test
scas
and
mov
dec
fdivl
dec
pop
sbb
push
push
mov
je
or
fstps
fs
sub
xrelease
lcall
popa
add
mov
test
clc
leave
cmpsl
mov
jecxz
sbb
sti
int3
subl
mov
mov
sbb
int
ljmp
js,pt
cltd
push
outsb
xchg
xchg
insl
mov
pop
cmp
pusha
test
divl
xchg
push
in
sbb
mov
je
test
jb
push
inc
mov
ljmp
inc
ret
add
jl
add
adc
add
jb
lahf
notl
lock
fstl
dec
icebp
shlb
test
mov
lret
xor
mov
inc
push
mov
clc
stos
adcl
rcl
mov
jp
addr16
mov
cmp
fsubl
inc
adc
notb
xor
adc
xor
inc
aad
xchg
pop
dec
xchg
mov
cmp
xlat
add
sub
data16
int
sbb
adc
cs
bnd
cli
pop
inc
cwtl
andl
xchg
pop
mov
stos
outsb
cmp
cmp
leave
and
mov
lds
add
ss
mov
inc
repnz
fsubrl
mov
dec
ljmp
or
shl
ret
cmp
xchg
or
rcll
mov
rcr
js,pt
cmp
in
pop
push
lcall
fisttpl
mov
lea
stc
xor
mov
mov
std
arpl
inc
jmp
outsl
or
pusha
enter
xchg
and
int
fildl
cmc
data16
add
or
loop
mov
aad
aas
sub
gs
adc
jno
dec
insl
ret
mov
icebp
popf
movzbl
mov
inc
xor
jmp
popf
sbb
out
jp
mov
jle
aaa
aas
ret
in
pop
rdtsc
ret
sbb
call
ret
testl
popf
mov
ss
std
mov
mov
pop
adc
xorl
dec
test
adc
lea
xchg
adc
cmp
jae
or
adc
mov
scas
jg
sti
jo
test
cwtl
sub
out
andl
cmp
push
je
fldt
dec
mov
sbb
out
leave
jmp
test
jns
mov
cmp
cmc
jmp
fs
lea
sub
movsb
sub
popa
popf
mov
sbb
clc
stc
or
lods
jecxz
pop
xchg
push
scas
rolb
pop
sub
sub
in
cmp
push
push
repz
mov
lret
pop
inc
mov
push
shll
push
mov
les
insl
aaa
push
sarb
pop
rcrb
jnp
lock
sub
lds
popa
inc
cmp
adc
repnz
pop
out
jbe
scas
adc
cmp
inc
clc
push
cmp
sar
fmull
mov
pop
insb
mov
sahf
decl
adc
xchg
lods
adc
or
push
aad
icebp
pop
xchg
or
outsb
div
and
ds
stos
mov
into
in
mov
mov
add
mov
xlat
pop
xor
sarb
outsb
mov
xor
xchg
div
lahf
hlt
jbe
pop
add
dec
inc
shlb
stos
ret
push
cld
movsb
jle
adc
pop
lret
ljmp
lahf
pop
push
dec
push
repz
add
out
idivb
mov
stos
faddl
mov
mov
in
sub
mov
mov
pop
rcl
fscale
or
mov
pop
and
lcallw
movsl
rcl
inc
sarb
jns
lret
lds
inc
adc
bound
add
sub
inc
imul
fs
sbb
jno
push
pop
push
inc
pop
and
and
mov
lcall
push
je
push
popf
out
out
loope
rcl
lea
pop
push
fistpl
fcomps
jecxz
xor
dec
cltd
dec
stos
sbb
or
inc
loopne
paddsb
xor
stos
add
cmp
scas
lret
out
jmp
dec
das
inc
xchg
js
scas
add
dec
lea
mov
push
sub
or
xor
mov
cmc
push
adc
pop
mov
sarb
mov
cmp
je
leave
pop
mov
cwtl
mov
pop
dec
sbb
jge
and
and
call
imul
adc
pop
pop
jnp
dec
incl
push
rol
lcall
sub
mov
and
add
mov
loop
test
stc
in
popl
mov
test
out
push
mov
lcall
sarl
add
cmp
test
and
out
mov
rol
out
test
or
mov
jge
xchg
push
fistpll
nop
push
adc
cwtl
stos
stc
or
cmc
out
cmp
imul
call
in
mov
mov
mov
sub
ds
mov
and
jnp
imul
mov
shll
xor
mov
jmp
jno
movsl
and
push
cmc
mov
jecxz
and
lock
xchg
add
mov
out
or
ds
dec
mov
cmpsl
dec
std
add
insl
in
pop
mov
inc
xchg
rcl
imul
pop
add
cmp
adc
xchg
inc
test
stos
push
fisttpll
std
iret
push
fidivrl
and
loop
enter
ja
xor
sub
das
push
hlt
aas
in
and
or
mov
test
xor
ds
cltd
jecxz
je
mov
outsb
adc
es
xlat
sub
mov
shll
jle
fstpt
in
fbld
loope
fsts
and
bts
out
jmp
gs
popf
lea
or
adc
cmpsb
test
fstpt
sub
rolb
and
shrb
in
cmc
and
sub
lock
pop
jo
or
mov
pop
js
mov
out
xor
es
dec
mov
cli
addr16
mov
push
lret
scas
int3
and
movb
sub
mov
xchg
pop
mov
addl
imul
jmp
xor
insb
inc
xor
dec
mov
xchg
or
movsb
cmp
or
or
cs
add
fwait
sub
dec
mov
je
out
cmp
into
xchg
into
mov
add
xlat
or
cmp
or
cltd
insb
loope
or
and
shrb
mov
hlt
add
popf
out
xor
mov
ds
adcb
mov
and
push
fisttps
dec
loop
cmp
in
push
stos
shll
testb
cmp
rorl
cli
add
pop
mov
gs
push
rcrb
add
rcll
inc
insb
add
sti
mov
dec
sub
add
push
mov
adc
sub
adcl
loop
fldenv
rolb
mov
andl
cmp
scas
pop
sbb
inc
jo
push
out
dec
xor
sarb
int
jne
sbb
icebp
xor
push
pop
pop
push
iret
lods
repnz
das
fsubp
cltd
jmp
push
add
mov
stc
leave
in
ret
sub
pop
push
leave
arpl
cmpsl
inc
sub
inc
pop
lock
mov
outsl
cli
and
lods
aad
add
xor
cmp
out
sub
pop
int3
pop
push
mov
and
outsb
ss
pop
stc
push
inc
cld
shl
mov
jecxz
jnp
jo
enter
leave
in
dec
inc
sti
pop
push
jb
std
ss
mov
adc
pop
dec
in
jae
jns
push
xchg
mov
je
jne
jne
sbb
mov
or
push
outsw
rcl
mov
xchg
jbe
push
test
loop
jge
jae
mov
xchg
daa
mov
ljmp
jl
lea
jg
mov
push
jmp
or
lods
movsb
cmp
lods
outsl
sbb
lret
push
aas
dec
movsl
sbb
enter
rolb
sub
roll
testl
push
sarl
inc
call
imul
add
mov
jle
pusha
addl
iret
cmp
or
and
sub
pop
xchg
and
adc
xchg
jmp
inc
jmp
xor
xchg
je
dec
in
fisubrs
or
cmc
or
cltd
push
push
cmp
and
rcrl
sbb
adc
addr16
sbb
lret
ret
push
popf
pop
mov
cld
xor
pop
sarb
jle
test
inc
int
mov
mov
fidivrs
sub
or
sbb
sbb
mov
push
mov
mov
scas
mov
stos
ljmp
test
push
mov
or
lret
ret
ja
xchg
imul
pop
jne
pop
sbb
jle
fmull
test
rorl
sbb
iret
test
imul
jns
xor
orl
inc
fidivs
xchg
jns
in
mov
fldl
push
int
cmp
into
inc
cmp
push
xlat
xchg
inc
je
fdivs
aam
orl
std
rcrl
loop
ds
imul
cmp
inc
push
mov
dec
rclb
mov
mov
popf
sub
inc
jnp
cmp
mov
push
fisttpl
fxch
aas
orl
ss
ljmp
in
out
jecxz
jns
push
js
cli
push
sbb
sbb
mov
int3
mov
push
hlt
inc
inc
pop
push
sbb
push
push
aam
nop
xor
rcr
lret
cmp
int
aaa
repnz
loop
or
pop
enter
adc
popf
xchg
xchg
inc
loop
or
cli
xlat
ret
sub
aad
cmp
or
popf
adc
fs
sub
nop
xor
cltd
fbld
in
jo
push
ret
div
mov
push
shll
add
cmp
loopne
mov
aam
push
popa
dec
mov
andl
js
xchg
jo
out
and
cmc
dec
sahf
xchg
cltd
mov
pop
mov
mov
hlt
mov
push
add
xchg
dec
mov
in
lds
hlt
adc
mov
sbb
out
push
sub
adc
ljmp
cmp
mov
cmp
cmp
cld
js
sahf
ja
data16
repz
stos
dec
push
movsl
sbbb
shrb
pop
or
incb
movsb
mov
or
push
imul
test
testl
xchg
mov
rclb
cmp
out
incb
inc
mov
jg
subb
xlat
decb
in
and
insl
inc
testb
adc
aas
xchg
xchg
outsl
in
sub
imul
out
mov
cwtl
sub
xor
add
mov
push
stc
cltd
in
mov
pop
xor
cwtl
int
push
jmp
dec
cli
sub
push
xchg
gs
sub
xor
ja
inc
sub
cmp
pushf
or
dec
jno
insb
aaa
lods
sub
cmp
bnd
cmp
adc
lods
leave
sub
into
sub
icebp
pop
and
push
add
pop
or
das
jno
ljmp
popf
fdiv
aas
or
cmp
lods
mov
pop
xchg
or
mov
sbbl
inc
fstp
cld
dec
es
imul
stc
dec
push
data16
in
and
sub
inc
push
repz
in
loop
ljmp
mov
test
das
inc
outsb
ret
loop
popf
mov
pusha
mov
xorb
jmp
inc
mov
test
xorb
and
xchg
jne
dec
adc
jge
aam
es
cwtl
cmc
movsb
clc
lcall
xor
mov
jno
inc
test
or
arpl
or
cmc
jo
stos
ret
mov
lret
mov
sbb
jl
rcl
xchg
sub
popf
incb
test
pusha
jmp
dec
fdivr
sbb
sbb
shll
shll
cmp
icebp
inc
inc
pop
pop
insl
cmp
inc
dec
xlat
push
imul
mov
icebp
sarb
jnp
push
cltd
cmpsb
in
int3
or
insl
rcrb
icebp
hlt
leave
sub
mov
pop
inc
adc
out
sub
insl
pop
mov
nop
stos
frstor
stos
jl
cwtl
mov
ret
addr16
and
pop
dec
jmp
pop
std
mov
or
insb
js
adc
jnp
movsl
cltd
xor
dec
or
inc
and
scas
jp
out
add
mov
es
out
mov
push
xor
jno
movsb
jecxz
pop
push
pop
adc
cltd
jno
loope
cltd
arpl
int3
popf
jp
fs
cmpsb
adcl
sub
in
std
loop
mov
mov
ret
ja
push
das
jae
rcr
aaa
mov
imulb
jecxz
shll
add
jno
loop
in
std
xbegin
ljmp
loope
and
cmp
jmp
iret
scas
rorl
dec
pop
cmpl
sub
bound
push
mov
into
push
sbb
inc
xlat
pusha
adc
pop
mov
lahf
mov
lahf
push
mov
sub
repz
xchg
lds
jp
movsl
pop
xor
cmpsb
mov
lods
aad
mov
or
out
int3
mov
jne
out
push
rcr
sub
pop
fdivs
js
xlat
dec
push
outsl
cmp
dec
xchg
lret
mov
adc
add
dec
data16
add
or
lea
divl
in
jl
cmpsb
into
ljmp
sbb
push
in
jecxz
xlat
jo
pop
aaa
sub
cmp
fnstenv
nop
imul
cmp
mov
dec
and
and
and
popa
loopne
cli
mov
xor
test
out
leave
or
iret
scas
pop
mov
cmpsl
xchg
outsb
xlat
inc
cmp
mov
lret
outsb
sub
sti
xlat
xchg
sub
test
sub
outsb
adc
inc
mov
push
mov
jno
inc
ret
mov
in
and
cwtl
jle
and
lock
pushf
push
adc
mov
pop
clc
mov
xchg
adc
and
xchg
adc
cli
jg
adc
outsb
inc
xchg
inc
xchg
int3
dec
jns
lds
xchg
cmp
sub
imul
adc
mov
cli
sarb
pop
lods
mov
inc
push
cwtl
mov
cltd
divb
insb
inc
pop
jb
sbb
sub
mov
mov
ss
rorb
enter
lock
nop
cs
and
add
aam
pop
stos
sti
xchg
cld
nop
or
inc
into
and
xchg
add
push
cs
sub
lock
or
addl
cmp
addr16
mov
adc
vpsubsb
push
outsb
xlat
ja
jp
add
xor
cmp
addr16
faddl
nop
xchg
pop
cwtl
sbb
adc
ret
sbb
ret
cmc
push
jae
mov
pop
jnp
mov
mov
fisttpl
inc
lods
bound
push
repz
xchg
mov
fstpl
sbb
fldl
jno
jl
xchg
cltd
loop
and
enter
adc
lcall
xor
push
cli
cld
mov
xchg
dec
mov
test
push
nop
dec
add
add
and
push
movsb
sti
jp
inc
mov
push
jg
movsb
faddl
mov
out
mov
and
jns
stos
clc
in
insb
out
mov
inc
add
in
lcall
repnz
sub
mov
sub
in
push
test
movsb
lahf
or
and
insb
paddusw
icebp
mov
sbb
mov
or
mov
in
xchg
out
int3
neg
xor
test
mov
fucom
inc
sbb
adc
test
lret
test
pop
data16
cmp
mov
mov
pop
and
and
outsb
or
jle
lds
ja
ljmp
mov
dec
mov
ljmp
mov
or
xor
gs
loope
jb
outsl
sbb
pop
dec
and
mov
mov
mov
cli
lock
add
rcll
sbb
or
add
inc
icebp
cmp
mov
test
push
in
mov
xchg
repnz
jb
sbb
ror
jecxz
sub
lods
or
or
aas
cmp
cmpsb
mov
aas
pusha
or
ja
xchg
mov
jb
loope
hlt
xor
adc
aaa
pop
ficompl
mov
mov
sbb
int
dec
mov
mov
pop
addr16
aam
jmp
sahf
std
add
sahf
aaa
pusha
scas
fisttps
lds
or
push
push
xor
pop
in
ret
shlb
pop
cmpsl
mov
push
popf
adc
test
dec
adc
imul
icebp
push
jg
pop
adc
or
sbb
sbb
dec
inc
loop
xchg
pusha
sbb
out
mov
lods
jno
shll
mov
gs
inc
outsl
aad
mov
jnp
mov
out
lock
jo
iret
mov
mov
or
push
clc
jmp
mov
push
gs
in
call
lds
loopne
int
jl
sbbb
add
sbb
ljmp
leave
or
mov
jl
sbb
test
sbb
dec
push
sti
imul
adc
loopne
push
push
in
mov
mov
arpl
xlat
inc
and
popa
out
push
iret
es
inc
pop
arpl
stos
mov
bound
aaa
mov
adc
mov
into
lret
lret
jne
dec
rorb
and
jg
add
jae
cmpsb
mov
cmp
sbb
inc
jno
icebp
fisttps
mov
pop
pushf
inc
out
push
mov
dec
out
dec
stc
lret
cld
icebp
imul
jecxz
outsb
mov
cmp
ja
pop
bound
cltd
push
daa
fisubrl
or
mov
xor
sub
cli
mov
shrb
xor
arpl
lcall
fistps
mov
sbb
testl
jg
dec
dec
out
push
inc
pop
loop
jle
xor
cmp
jns
cmp
mov
xor
inc
int
mov
call
fwait
xlat
lock
pop
sub
subb
or
adc
cmp
lds
sub
mov
xchg
dec
xchg
xor
push
inc
push
cmp
pop
mov
nop
lods
inc
push
rcl
out
mov
or
mov
hlt
lret
xchg
in
mov
rolb
insl
xor
lahf
jb
and
ds
adc
cmpsl
ds
sbb
xchg
and
ja
add
aas
in
je
or
out
jb
or
xchg
mov
mov
sbbl
testl
test
dec
outsl
mov
mov
xlat
adc
sub
mov
aaa
jg
mov
cmp
mov
icebp
mov
lahf
outsb
add
sub
daa
cmp
hlt
test
cmp
push
pop
sub
fmulp
xor
insb
mov
adc
jne
pop
inc
imul
rcr
cmc
popa
loopne
mov
outsl
dec
mov
xchg
jae
ja
repnz
add
adc
mov
mov
adc
push
sub
jecxz
daa
mov
and
out
sbb
adc
enter
mov
or
mov
mov
and
jl
into
in
fildl
inc
out
sub
addb
and
inc
scas
sub
loop
ror
adc
mov
gs
idiv
or
inc
jo
jne
sub
mov
rcll
cs
stos
mov
xchg
adc
jo
cs
sbb
lods
bound
sbb
je
push
pop
cmp
rcr
outsl
push
les
mov
scas
sbb
rcrb
cmpsb
test
int3
mov
gs
mov
call
int
out
jb
jne
sub
mov
jl
outsl
dec
nop
frstor
pop
or
mov
in
mov
ficompl
inc
clc
das
jl
and
sbb
jb
inc
xchg
popf
sub
cld
cmp
xchg
rcr
xchg
sub
push
out
xchg
push
cmp
push
aad
mov
mov
add
dec
or
test
push
add
negb
in
std
mov
pop
jo
or
fs
arpl
mov
arpl
das
cmp
pop
fstl
pop
xchg
add
pop
push
or
sahf
mov
in
sbb
shlb
scas
push
pop
addr16
insl
leave
aad
pop
jb
adcl
mov
push
mov
loopne
clc
jno
or
mov
out
sahf
adcl
adc
sbb
insb
pop
ljmp
insl
xor
dec
pop
pop
jno
mov
fimuls
add
inc
sbb
out
mov
ror
jbe
dec
ret
jb
inc
push
sbb
clc
sub
jo
sbb
xchg
aaa
cs
or
inc
mov
xchg
jno
push
repnz
and
mov
lods
cmp
andl
enter
pop
stc
or
jns
sub
xchg
xor
sbb
test
xchg
arpl
in
stos
aad
sbb
or
pop
mov
ds
fisubs
ljmp
mov
xlat
jo
pop
xrelease
add
dec
inc
mov
hlt
xchg
enter
cltd
jo
out
cmpsb
outsl
mov
fidivs
mov
pop
pop
dec
das
mov
sub
mov
pop
cmp
ss
lea
iret
scas
imul
out
imul
stos
sbb
sbb
jecxz
loop
cmp
pushf
cmc
dec
mov
loop
lcall
mov
lgdtl
subl
dec
lret
flds
shrl
xor
sub
push
push
mov
and
mov
adc
in
add
jbe
shl
mov
popf
adc
cmp
cmp
jp
jg
xchg
xchg
lret
cmc
in
mov
popf
xorps
imul
cmp
notl
push
sti
cwtl
push
leave
fs
repnz
add
and
add
rorl
sub
lods
xor
xor
mov
scas
in
ljmp
or
add
and
lret
lds
cwtl
fcmovu
shl
jp
ljmp
fidivs
sti
add
add
cltd
ja
dec
sbb
mov
je
xchg
jl
push
pop
mov
in
test
out
sub
mov
call
aam
xor
insl
adc
mov
ffreep
arpl
sti
and
xor
daa
ja
insl
idivl
cltd
cmpb
jle
outsb
push
or
push
sbb
lea
int
pop
push
aaa
pushf
adc
sbb
icebp
mov
push
cmp
sbb
scas
xchg
mov
pop
int3
shlb
lods
mov
movsl
xlat
jl
loopne
movsb
mov
outsl
or
and
push
pop
cld
cli
cli
test
pop
fisttps
mov
repnz
xchg
push
xchg
nop
dec
push
lock
jo
hlt
mov
or
std
push
push
lds
cmp
call
jg
cmc
adc
popf
add
lret
in
cmp
mov
ret
icebp
jo
loope
xor
rcl
dec
jb
mov
xchg
mov
pop
fsts
sbb
mov
loop
push
mov
jnp
iret
pop
neg
pop
dec
and
xorl
add
stos
mull
cmc
adc
in
and
adc
lcall
out
sarl
mov
aaa
jbe
rorb
test
mov
add
repnz
dec
jecxz
inc
lahf
mov
pop
idiv
xlat
into
insl
cmp
cmp
shrl
cmp
loopne
sbb
mov
out
je
or
xor
cmp
jg
xor
inc
xlat
mov
add
or
dec
add
out
fisubrl
out
imull
xchg
push
cmp
xor
xor
aam
cmp
arpl
pop
jmp
inc
pop
mov
inc
xor
push
lret
outsl
scas
sbb
inc
cmp
adc
pop
pushl
cmp
jl
sbb
jg
cmp
pop
aad
push
js
nop
cwtl
lret
enter
ret
sbb
cli
mov
fs
jne
pop
scas
sub
xor
push
pop
jne
cmp
fmulp
mov
je
sarl
in
dec
outsb
aad
or
cmp
nop
jge
sbb
jg
xabort
mov
hlt
das
pop
fs
push
mov
push
mov
cmc
inc
add
mov
sahf
gs
aam
cmp
sarb
or
iret
mov
or
jl
outsb
fsubs
xchg
jns
imul
scas
loopne
loop
xchg
movsl
and
lock
push
xor
dec
jmp
mov
adc
inc
repz
dec
rcrl
pop
adc
cmpsl
popf
push
mov
lods
xor
ffreep
int3
call
push
mov
cwtl
loop
ret
addr16
std
mov
xchg
ljmp
inc
div
adc
lcall
loop
out
int
cld
xor
pusha
enter
out
out
and
leave
sbb
sbb
adc
sbb
or
in
popf
mov
iret
inc
scas
mov
es
push
and
repz
push
pop
scas
push
rorl
cmp
sti
pcmpeqw
es
mov
push
xlat
jbe
fldl
cs
int3
insl
or
lahf
cs
iret
popa
inc
aam
adc
lea
addr16
mov
jne
sbb
push
lahf
mov
adc
cmp
xchg
in
testb
and
jo
inc
repz
out
clc
jnp
jmp
into
shll
mov
pop
or
mov
leave
lea
mov
stc
fistl
pop
shll
outsl
scas
repz
dec
lret
add
xchg
mov
enter
jmp
pop
cmp
add
mov
dec
push
stos
fisubs
fs
jmp
pop
xor
shl
fistps
push
loope
in
lret
das
stos
scas
je
int
popa
push
mov
imul
add
aam
pushl
push
enter
pop
outsb
es
add
dec
sbbb
cli
xchg
cmp
cli
dec
movsb
mov
mov
jnp
xchg
push
int3
pop
ljmp
push
mov
sbb
add
scas
outsl
fidivrl
xor
adc
cmp
popf
mov
fisubrs
push
bound
in
in
push
xlat
mov
std
ja
sbb
mov
adc
pop
or
pop
sbb
mov
push
lret
cltd
stc
cld
fsts
cmp
lret
stc
cwtl
cmpsl
lock
xchg
lret
dec
sub
xor
or
out
in
stc
or
pop
repz
cmp
lahf
mov
mov
je
popf
shll
dec
push
dec
stos
in
notl
sub
jmp
ret
enter
add
loope
push
outsb
cli
cmp
lret
testb
lods
int
jle
jmp
mov
into
insl
mov
cmp
fimuls
mov
jp
sarb
scas
cli
stos
aaa
add
adc
addr16
xlat
push
nop
mov
jns
jnp
repnz
lahf
add
fisubl
sbb
loopne
ret
push
inc
fsubrp
pop
xchg
cltd
out
out
ljmp
repnz
add
or
cli
clc
andl
xor
xor
sbb
rorb
jb
jge
cmp
dec
popf
xchg
jl
adc
sbb
ret
mov
pop
sbb
fs
push
enter
out
stos
aas
scas
gs
inc
xor
cltd
imul
push
jno
sub
andb
jae
pop
dec
dec
call
mov
mov
sahf
shll
rclb
sbb
lahf
dec
mov
adc
add
xor
js
push
outsl
push
jp
mov
repz
lret
sbb
das
ret
mov
sbbb
fdivrs
dec
call
push
fisttpl
js
adc
std
jne
mov
pop
sub
mov
jno
lea
imulb
fcomps
imul
push
push
fadds
mov
sbb
movsl
add
jbe
lods
sub
iret
mov
jae
pop
mov
and
push
xor
xor
loope
sarb
jbe
pop
jo
jle
xchg
adc
out
mov
mov
jo
jmp
insl
or
dec
dec
fs
add
sbb
or
lock
xchg
sbbl
sbb
mov
stos
mov
ss
sbb
push
aaa
push
xchg
addr16
cmp
mov
and
outsb
dec
and
jmp
jb
mov
dec
sub
dec
cs
push
mov
jge
pushf
cmp
xor
aaa
dec
stos
fdivrp
test
scas
mov
jg
ret
mov
jne
adc
or
jnp
frstor
hlt
iret
imul
and
mov
jecxz
shrl
scas
jg
mov
in
sti
cli
shr
push
loopne
xchg
mov
imul
test
jmp
sub
mov
ds
mov
ret
or
ss
xchg
nop
out
addl
pop
ret
movsb
pop
cmp
ds
mov
add
in
pop
dec
into
pop
sub
jge
or
test
add
cltd
jg
xlat
icebp
fsts
test
xor
je
dec
ds
xor
jno
jb
fs
jge,pt
cmpsl
pop
xlat
jg
add
iret
dec
clc
jmp
cld
gs
sbb
jo
and
push
or
imul
or
sub
sub
in
jbe
mov
mov
pop
sahf
test
scas
sub
adc
push
outsb
jge
pop
cmpsl
push
adc
sbb
xor
sub
cli
loope
mov
popa
bound
js
dec
mov
ljmp
imul
icebp
in
sbbb
xor
into
fnstsw
nop
bound
addr16
jo
cltd
adc
mov
je
into
fwait
mov
or
addr16
fcompl
sbb
inc
add
cmp
cmp
pop
push
repnz
pop
ljmp
jmp
aaa
movsl
frstor
stos
push
xchg
dec
mov
xor
cmp
loop
jl
push
shlb
addl
mov
fnstcw
adcb
ljmp
and
and
mov
xor
out
lcall
test
dec
popa
push
inc
cmp
push
loope
or
add
loope
lods
sbb
pushf
pusha
add
stos
aas
cs
push
inc
call
jmp
and
movb
mov
iret
leave
mov
arpl
mov
popf
cmp
add
push
sub
sub
push
out
inc
enter
mov
jge
mov
sub
mov
mov
pop
test
adc
popa
pop
pop
pop
pop
icebp
push
cld
adc
adc
push
or
adc
fldl
in
arpl
pop
pop
cwtl
sarb
mov
sub
in
es
fisubl
cmp
dec
mov
pop
add
out
sarb
sbb
or
inc
cmp
lret
fcomps
mov
mov
xchg
jge
push
idivb
pop
cmp
inc
loope
mov
andl
mov
jne
xor
stos
and
or
inc
mov
jae
cmp
sub
inc
in
pushf
cs
pop
dec
add
mov
mov
sbb
and
and
jmp
xchg
push
loopne
xor
mov
ss
cmc
out
add
inc
add
mov
inc
and
jbe
shlb
mov
pusha
sahf
xchg
jg
xchg
shll
push
inc
push
push
pop
adc
mov
xchg
faddl
cmc
scas
or
push
in
jbe
xchg
xchg
in
fdiv
shrb
in
pop
lds
push
jge
add
aas
push
push
sub
les
jae
add
inc
popa
sbb
aad
out
push
or
test
pop
lret
in
cmp
xchg
add
fisttps
lcall
clc
negl
jmp
scas
jecxz
loop
adc
cmpsl
inc
mov
xchg
test
or
add
lods
mov
and
lds
pop
adc
fldenv
inc
sub
cmpsl
nop
add
pop
rol
dec
jge
mov
insl
jp
ljmp
push
fstpl
mov
insl
add
sbb
and
lods
jmp
out
lock
cmp
test
or
movsb
mov
call
push
popf
mov
mov
mov
jno
js
pop
sub
mov
jge
test
mov
shl
dec
mov
int3
pop
mov
inc
lods
lret
scas
rolb
xchg
pop
mov
push
xchg
mov
test
push
cmp
cltd
sbb
out
test
mov
fldt
out
daa
jg
xchg
mov
push
mov
test
push
xchg
lret
inc
pushf
jle
xchg
mov
out
faddl
mov
mov
addb
iret
fmul
add
xchg
mov
push
xchg
fld
pop
in
xor
jl
hlt
out
lods
cmpsb
fistpll
jae
std
add
test
clc
pop
dec
scas
or
dec
lds
mov
lock
into
std
flds
inc
or
gs
ds
daa
sbb
xchg
xchg
inc
jo
inc
cmp
int
and
roll
ffree
inc
pop
push
xchg
mov
push
loope
dec
loop
shl
push
cmp
les
pop
mov
jmp
jle
test
cmp
mov
bnd
cmp
cltd
dec
sbbl
mov
dec
adc
push
mov
xor
mov
cmpsb
or
xchg
mov
lds
test
lods
int3
push
adc
cmp
push
lcall
xchg
inc
ret
cmc
lock
xor
loopne
sti
push
ss
and
popf
insl
xor
scas
test
cmp
testl
repnz
pop
outsl
mov
dec
addr16
adc
or
loop
cmp
or
mov
sahf
test
pop
dec
cmp
out
into
aaa
gs
mov
mov
test
subl
adcl
icebp
push
xchg
repnz
jns
mov
shrb
arpl
lret
add
scas
jb
scas
leave
jle
ror
addr16
shl
mov
pop
in
test
xchg
mov
out
js
push
push
sbb
loopne
jl
insb
fs
gs
jecxz
mull
cltd
call
pop
loopne
daa
adc
cmp
or
jmp
mov
les
test
pop
push
jg
addl
fiadds
shll
cs
pop
xor
test
mov
iret
xor
push
pop
or
push
scas
dec
push
mov
ljmp
loop
xchg
out
mov
mov
push
pop
aad
rcrb
lcall
push
push
js
jmp
cmp
inc
fistpll
add
push
scas
mov
push
in
lds
sbb
cwtl
js
ja
or
aaa
outsl
push
adc
xchg
and
leave
loopne
pop
repnz
mov
inc
sti
shrb
dec
movsb
push
shlb
sub
insl
idivl
aad
iret
mov
shrl
inc
sub
mov
pop
pop
mov
xchg
dec
fsts
lds
jecxz
mov
jl
arpl
in
cld
xor
pop
sahf
ja
add
push
sbb
sub
xchg
scas
push
sbb
add
push
addl
cmp
fnsave
push
leave
mov
jo
xor
adc
pusha
cmp
inc
sbb
lret
mov
divl
je
rorb
jne
inc
xor
mov
ret
pop
test
fimuls
out
and
xchg
inc
pop
mov
push
je
leave
movb
or
je
shll
fs
bound
jge
dec
imul
lret
bound
push
lret
out
xchg
sub
mov
shll
test
bound
xchg
mov
loope
dec
mov
push
mov
add
sbb
ret
fmull
imul
into
add
adc
repnz
ja
dec
mov
test
and
pushf
sub
dec
subl
outsl
push
rcrl
sub
shrb
test
call
adc
insl
mov
nop
xchg
jae
mov
rcrb
add
dec
inc
xlat
call
bound
mov
or
jnp
xchg
ret
sbb
loope
hlt
scas
sub
jge
or
lea
mov
shll
push
or
dec
and
shrl
pop
je
leave
mov
push
inc
or
mov
stos
push
sbb
or
nop
subl
jge
xchg
xor
dec
push
cmpsb
iret
mov
hlt
sbb
ds
jo
lods
ja
cs
cs
stos
push
mov
jecxz
cmp
lock
inc
lcall
addl
push
leave
icebp
sub
pushf
test
adc
sub
pop
add
pushf
fwait
shld
out
hlt
ss
sbb
nop
mov
adc
jbe
lret
loope
lea
shlb
es
cmp
frstor
xlat
fbld
pushw
adcl
and
mov
or
jae
lods
test
int
or
jnp
push
dec
aam
jbe
lock
dec
jmp
mov
int
stos
dec
mov
test
sbb
test
fs
sub
jo
push
hlt
mov
mov
cmp
jecxz
stos
cmp
int3
xor
cmp
mov
sbb
icebp
in
pop
gs
loope
push
pop
mov
and
repz
sti
xchg
pop
lcall
pushf
adc
sarb
mov
jbe
repnz
jl
dec
xchg
jae
mov
pop
sbb
insb
mov
orb
push
mov
xor
or
cmp
enter
push
sub
xor
mov
popa
mov
adc
sti
int3
gs
lcall
pop
adc
out
mov
out
xor
mov
xchg
pop
or
xor
imul
xchg
icebp
sahf
mov
xchg
out
imul
push
mov
push
pop
mov
mov
es
sub
addb
inc
arpl
insb
cmp
movsl
inc
sbb
mov
das
or
adc
loope
mov
jae
fwait
xchg
mov
lcall
lods
mov
insb
rcrb
jns
cmp
xor
mov
xchg
push
sbb
daa
xlat
lcall
or
dec
roll
ja
inc
bound
cmpsb
cmp
xchg
pop
mov
dec
push
mov
addr16
or
jmp
adc
icebp
push
dec
rolb
enter
xchg
and
lret
imul
inc
xchg
lret
xchg
jmp
mov
or
arpl
push
loopne
test
or
into
mov
int3
mov
call
ja
or
les
outsb
mov
in
push
mov
xchg
test
mov
enter
mov
push
dec
mov
ljmp
dec
sbb
dec
orl
lea
sbb
adc
inc
insl
inc
push
adc
xor
sub
scas
push
rcl
dec
and
pusha
es
xor
pop
xchg
cltd
popf
or
mov
xchg
inc
xchg
and
insl
xorl
shll
daa
cli
shrb
xchg
sub
iret
mov
in
lds
mov
push
push
push
lret
jmp
push
out
sahf
jp
mov
clc
adc
pop
adc
out
jl
push
aam
gs
dec
sub
orb
fldl
adc
mov
xchg
in
push
gs
les
adc
sbb
sbb
scas
call
loop
pop
into
fiaddl
and
lcall
mov
call
pop
push
mov
pop
jge
sbb
int3
xor
mov
xchg
lock
xchg
repz
push
xchg
jo
jl
nop
jl
out
xor
mov
mov
imul
jbe
xor
aaa
sbb
subb
shrl
sti
enter
jg
inc
fstpt
cmp
push
movsl
cs
jge
adc
in
insb
push
inc
mov
test
dec
cwtl
shrl
jno
push
fdivrs
push
pop
adc
aaa
in
into
icebp
roll
dec
imul
or
xor
lret
fmull
aaa
pop
sub
fstps
cmp
pop
loop
outsb
and
fisttps
add
daa
sahf
dec
lods
cltd
jo
push
test
adc
xchg
inc
or
push
adc
or
sbb
test
cmp
fwait
pop
push
cmp
lcall
dec
mov
jl
cmc
lahf
cmp
es
mov
inc
cmc
push
jle
jno
mov
push
mov
cwtl
inc
pop
bound
mov
mov
dec
test
or
push
push
ja
or
in
js
cmp
adc
jle
mov
ficoms
mov
int
or
cmp
stc
jnp
jnp
cmpsl
jecxz
xor
mov
cmpsl
aaa
cmp
cltd
lahf
pop
cmp
add
outsl
lahf
in
mov
test
mov
push
add
rcrb
daa
cs
lea
clc
sbb
sub
sub
jle
pop
in
mov
push
pop
imul
push
arpl
enter
push
jb
shlb
lcall
mov
pusha
mov
je
pop
stos
push
out
leave
je
pop
gs
add
and
pop
sbb
lods
insb
addr16
or
sbb
lds
inc
and
mov
stc
add
pop
shll
lods
loopne
jge
cmp
ss
popf
jno
outsb
dec
xor
pop
mov
out
cmc
lahf
and
nop
add
out
sbb
mov
mov
cmpsb
adc
xchg
repnz
ljmp
sub
popa
jl
mov
cwtl
rclb
sub
pop
cli
dec
add
outsb
les
lret
hlt
mov
pop
icebp
push
sub
fistps
jbe
cmc
xchg
dec
popa
xchg
mov
inc
lcall
test
dec
ds
sbbl
addl
cmp
lods
mov
xor
or
sbbl
iret
fs
pop
inc
aad
ret
aas
cmp
iret
add
xchg
loope
insl
jle
sub
ds
lret
leave
xchg
dec
xor
mov
icebp
aad
mov
sub
lret
movsb
push
shlb
jbe
cmp
in
push
lea
in
leave
repnz
fnstenv
and
cmpl
mov
inc
dec
mov
push
pop
and
adc
sbb
jno
outsb
lcall
push
xor
icebp
mov
cmc
mov
push
cli
test
dec
mov
out
repz
jb
pop
ljmp
sbbl
pop
xor
xchg
or
inc
and
mov
mov
mov
mov
cmc
or
xlat
pop
ja
xchg
and
stos
and
xor
addr16
cmp
xchg
test
out
jns
ja
in
mov
scas
jne
fwait
ror
popf
mov
sbb
push
and
lods
sub
movsl
or
cmp
imul
adc
outsl
les
or
inc
sar
jecxz
mov
mov
push
sbb
or
cld
scas
jbe
sub
inc
sbb
mov
nop
mov
divl
sbb
lods
pop
aad
cmp
test
fisubrs
fcompp
fistl
pop
or
hlt
mov
and
xchg
inc
jno
mov
out
call
pop
lahf
je
rcll
jl
pop
mov
gs
sub
pop
mov
daa
xchg
push
sbb
xchg
or
jecxz
and
daa
sub
and
scas
int
and
jp
add
divb
jp
push
lds
movsb
inc
jg
xor
les
lods
hlt
movsl
repz
add
ja
fldenv
into
jmp
jne
cmp
jle
mov
les
mov
ss
and
sbb
xor
pop
in
mov
sub
xor
jno
fbstp
mov
frstors
in
cmp
add
ret
inc
in
ss
push
shlb
sub
pop
add
inc
sub
cld
test
out
xor
dec
les
cmp
jmp
jae
mov
stos
dec
sbb
ja
fnstenv
lods
std
aad
dec
lret
ret
xchg
pushf
enter
js
mull
mov
add
or
pushf
stos
cmc
or
xchg
loopne
xor
jnp
rolb
jmp
inc
test
daa
outsl
gs
sti
out
dec
idiv
cwtl
mov
pop
out
xchg
jmp
pushf
fdivrl
and
add
lret
inc
arpl
jecxz
xchg
xchg
push
cmpsl
pop
fisttps
mov
jecxz
pop
out
push
stc
fsubs
or
movsb
cmp
test
out
pop
into
mov
sbb
jo
fisttpll
cmp
mov
push
orb
xchg
ja
xchg
fwait
jb,pt
out
out
mov
fidivs
loope
xchg
dec
add
popf
xchg
std
fidivs
cld
shll
out
or
lods
or
mov
mov
push
arpl
aam
fldenv
inc
xchg
xor
sbb
push
int3
or
loopne
sbb
add
ss
mov
xchg
sbb
data16
popa
xchg
mov
sub
dec
aam
xor
dec
test
inc
push
xor
ja
hlt
ljmp
js
aad
mov
es
sub
stc
scas
add
inc
dec
iret
iret
fs
jnp
aas
push
add
and
mov
xor
jne
rolb
jg
pop
orb
mov
mov
movsl
movsl
cs
add
jbe
lods
shl
in
xlat
test
test
cmp
bound
lds
push
xor
mov
add
add
fildl
or
push
lock
clc
or
scas
cwtl
mov
mov
out
shrl
mov
divl
ss
add
lcall
ds
out
dec
and
xor
and
cli
iret
or
jno
lods
sbb
std
pop
mov
popf
ret
jae
adc
sub
sti
fs
pusha
mov
mov
and
mov
dec
push
mov
jnp
addr16
xchg
sbb
cmpsb
fwait
stos
dec
mov
call
inc
push
mov
sbb
lret
xor
rclb
xchg
cwtl
sbb
cmpl
sub
lock
mov
aaa
mov
mov
jae
scas
loopne
inc
lret
out
mov
add
and
cmpsb
ret
aad
or
iret
mov
jb
out
lret
sbb
mov
jecxz
lret
adc
shlb
xor
inc
fwait
and
sbb
pop
sub
cmc
out
xchg
pop
lock
iret
repz
iret
stos
cltd
push
add
dec
mov
aaa
mov
bound
mov
lret
cmp
aam
jno
dec
imul
aam
mov
pop
stos
add
xor
out
loop
pop
lods
mov
sbb
call
ret
popa
mov
pushw
cmp
mov
mov
js
push
insl
inc
gs
add
lea
jmp
sbb
or
xchg
pusha
pop
or
add
loopne
push
rcrl
insb
adc
inc
icebp
aam
adc
sbb
imul
mov
popa
xor
fwait
add
sahf
daa
in
inc
push
jl
subb
jns
sbb
lret
loop
test
dec
and
cmpb
jmp
adc
aad
lods
mov
sub
mov
call
inc
cmp
outsl
sub
or
pop
loopne
pop
in
imul
push
adc
jnp
ret
and
lds
lea
sub
jmp
push
adc
cld
stos
dec
cmp
fwait
xchg
or
cmp
xchg
dec
jmp
cmp
fstpt
loop
cld
rcrl
add
sub
outsb
push
mov
sbb
cmp
mov
mov
pusha
jle
mov
int3
pop
mov
jb
sbb
movsl
xor
mov
rorl
pop
fcomip
nop
mov
scas
jg
loopne
mov
in
mov
ljmp
dec
or
cmp
push
pop
sahf
push
xchg
stc
jno
rcrl
ja
push
xchg
pop
lret
add
xchg
pop
pop
das
push
stc
inc
jle
jg
xor
imul
jmp
cmpsb
mov
fcomp
stos
mov
ret
cmp
adc
push
sahf
sub
stos
scas
rol
jne
jo
ret
mov
push
lods
cmpsb
push
repz
inc
cmpsl
sub
inc
aam
mov
fsts
mov
in
mov
stos
stos
lea
xchg
mov
xchg
mov
cli
and
daa
adc
fwait
cs
fcos
repnz
popf
sbb
ss
pop
sbb
lcall
loope
mov
into
cmp
mov
mov
hlt
daa
sub
pusha
movsb
andl
mov
clc
test
aas
incl
andl
mov
lods
mov
xor
in
and
inc
inc
or
lcall
sub
cld
xor
les
outsb
loope
jl
xchg
push
push
and
popa
aam
add
jb
jno
add
xchg
dec
or
mov
scas
cmpb
dec
xlat
aas
addr16
xchg
mov
push
or
add
psllq
adc
mov
lods
rcrb
loope
xchg
mov
cs
dec
lods
ljmp
rcl
jl
pop
sbb
scas
xor
call
je
rorl
into
xchg
loop
lods
orb
xchg
xorl
xchg
add
cltd
movsb
popa
orb
or
outsb
adc
pop
les
sub
test
shlb
lock
adc
xorl
addl
or
sbb
and
sahf
negl
leave
insb
divb
insb
leave
in
mov
into
movsb
test
das
and
dec
les
adc
pop
fstl
and
dec
arpl
sub
lea
pop
or
dec
jbe
arpl
nop
andb
fsqrt
xor
push
push
push
push
inc
lds
loope
ss
out
mov
dec
pop
xchg
jae
sub
rcll
arpl
movsl
add
inc
repz
inc
lods
pop
imul
or
lret
enter
aaa
pop
loop
mov
sbb
mov
lods
fcoml
xor
push
mov
data16
insb
test
addb
loopne
dec
push
mov
jge
xor
jp
arpl
jnp
jb
imul
push
lahf
mov
test
xor
and
hlt
repnz
fwait
adc
xor
ss
push
loope
fisubl
pop
fdivrs
clc
jne
loop
push
pop
sbb
enter
getsec
xchg
pop
mov
push
imul
xor
push
pop
pop
in
cmp
lahf
xor
int
mov
scas
jl
push
pop
gs
dec
push
test
mov
je
or
std
test
aas
stos
imul
push
jle
and
sbb
adc
sub
push
aam
lods
idiv
mov
addr16
shrb
jl
cmp
dec
repnz
lahf
dec
test
jecxz
lods
sbb
inc
adc
jb
rcll
stos
hlt
inc
mov
add
xchg
cmp
popf
inc
adc
and
repz
cmp
scas
jne
iret
pop
sub
push
fmuls
aam
je
lea
and
mov
adc
or
xor
ficoml
cli
and
inc
mov
orl
daa
push
sub
popa
mov
shll
cli
inc
and
adc
mov
add
pop
xor
mov
sub
add
pushf
mov
xchg
data16
aad
sbb
sbb
sbb
out
mov
sbb
push
scas
fimull
adc
or
pop
ljmp
out
repz
out
push
pop
dec
and
dec
arpl
pop
lret
dec
sbb
fwait
mov
sub
jns
xchg
lahf
dec
outsl
fcompp
es
mov
addb
push
add
fnstsw
add
cmp
outsb
sbb
push
or
aaa
aas
xchg
lea
and
adc
sbb
push
add
cmp
sub
jle
pop
jbe
cmp
push
sub
icebp
aaa
mov
sub
outsb
bound
nop
cmc
add
mov
aaa
jg
idiv
xchg
xchg
push
outsl
iret
ljmp
lahf
stos
rorl
out
push
add
sub
rol
andb
pop
and
movsb
cld
nop
push
mov
aam
int
cltd
ss
mov
inc
adc
dec
leave
inc
stos
xchg
mov
arpl
xor
push
cwtl
adc
lods
cmp
lahf
popa
xchg
xor
shrb
mov
push
shlb
rcrl
test
push
mov
je
mov
jo
cli
aas
sub
mov
dec
js
subb
xlat
adc
jmp
xor
and
je
pop
xlat
push
out
adc
daa
jp
jle
fcmovnbe
push
mov
ljmp
out
pushl
lods
and
push
popa
xlat
cmc
movsl
outsb
mov
xchg
jae
mov
imul
jne
mov
dec
add
lcall
lods
mov
call
rorb
inc
ja
movsl
fdivrs
xlat
sahf
sub
inc
jb
push
push
cs
push
jg
leave
mov
add
iret
sub
mov
and
pop
mov
imul
cmp
clc
cmp
dec
mov
push
sarl
xor
add
xorl
mov
xchg
lcall
xor
cmp
inc
mov
shlb
lods
add
lret
rorl
xchg
cs
das
jmp
stc
out
int
or
stos
ds
jns
cmp
std
sbb
movsl
xchg
stc
enter
dec
inc
addr16
aam
add
test
mov
test
mov
pop
mov
lret
and
notb
stos
rcll
vmwrite
mov
jg
lock
pop
push
fdivrl
add
aas
or
adcl
cmpsb
xchg
pusha
int
mov
daa
imul
jo
scas
add
cmc
in
jbe
xchg
outsb
pop
jnp
jns
mov
push
ds
loope
or
stos
imull
ss
xchg
movl
pop
clc
mov
dec
cmp
mov
js
adc
jp
and
sahf
dec
lahf
inc
fstpt
push
mov
adc
adc
call
add
test
iret
xor
jo
aad
push
mov
inc
sbb
pop
cmp
jb
out
lcall
sub
movsl
dec
xor
pushf
fistps
cmpb
call
xchg
lea
dec
dec
ljmp
xchg
lret
testl
push
rorb
shlb
push
arpl
das
ret
lods
add
pop
lret
bound
dec
cmp
fmul
add
dec
and
jl
fstpl
nop
adc
insb
insb
push
or
inc
notb
lds
imul
mov
inc
mov
push
inc
int
sub
nop
lahf
outsl
xchg
mov
mov
lret
lds
mov
push
jbe
daa
jmp
pop
dec
push
mov
popa
jmp
outsl
mov
mov
xor
daa
and
std
into
xor
insl
sbb
xor
into
adc
in
fimuls
fadd
jmp
mov
addb
jecxz
adcb
sbb
cli
xor
mov
push
ljmp
mov
fs
cmp
dec
xchg
arpl
push
imulb
xor
mov
aad
lds
xchg
mov
and
jb
adc
shlb
mov
pop
or
push
popa
push
cmpsb
mov
stos
das
inc
icebp
shll
cmpsl
pop
dec
fbld
test
dec
mov
cmp
xor
push
gs
scas
lret
pushf
sbb
pop
adc
and
xchg
lods
insl
orl
sub
dec
xchg
cmpsb
rcr
cmpb
push
sub
insl
sub
adc
pushf
xor
jno
cltd
out
scas
pop
dec
iret
mov
dec
sahf
lods
add
in
mov
sbbb
lds
cltd
in
push
aas
mov
dec
or
push
or
mov
cmp
fsubs
mov
mov
enter
xor
int
inc
xchg
inc
fisubrl
push
or
aad
push
in
jg
mov
push
out
push
jo
movsl
push
cmp
es
int
fs
jns
push
repz
cmp
outsb
aad
mov
jl
push
stos
cmp
push
jge
shrl
sbb
mov
mov
or
mov
push
shll
cmp
mov
arpl
xor
mov
mov
mov
jle
lret
jle
sub
mov
jmp
sarb
test
push
lcall
dec
bound
inc
test
sbb
dec
outsl
cmp
dec
stos
xchg
add
movsl
mov
cmpps
or
push
xchg
or
jne
and
shlb
add
bound
sub
imul
jnp
nop
in
jns
ljmp
dec
lret
ss
mov
jmp
ficompl
mov
test
pop
mov
fcoml
sbbl
push
mov
sbb
nop
inc
mov
popa
adc
mov
xor
fsubl
xor
shlb
addb
pop
pop
jb
lock
xchg
js
insb
pop
scas
adc
sbb
dec
fs
out
adc
xchg
inc
pop
push
insb
ljmp
dec
sub
jmpw
mov
repnz
lcall
push
int
and
mov
aas
push
loop
inc
sub
pop
shlb
push
inc
pop
mov
int3
iret
fmul
fsts
sbbl
repz
int3
push
cwtl
ja
xchg
scas
lock
jnp
dec
xchg
and
xor
jb
inc
jbe
rol
inc
xorl
popa
pushf
lock
dec
mov
xchg
mov
lret
test
pop
js
mov
and
mov
int3
sbb
daa
adc
or
arpl
jle
cmp
xchg
or
ljmp
cld
cltd
mov
mov
mov
push
mov
lret
pop
pop
icebp
lods
mov
sahf
adc
ljmp
in
jb
mov
sbb
aam
in
xchg
jge
lea
sti
jmp
mov
xor
aaa
fsubrs
scas
adc
add
test
push
cmp
call
pop
mov
mov
jns
mov
jle
lods
stos
scas
mov
ja
add
xor
scas
xchg
mov
leave
cmp
xchg
in
stc
cmp
xor
imul
insb
jns
cs
add
daa
cmp
lods
jns
mov
arpl
into
cmp
mov
fstpt
pop
xchg
dec
and
mov
xor
ret
pop
mov
pop
das
in
push
mov
pop
xchg
in
cs
sarl
fadds
mov
data16
mov
pop
movb
dec
lret
and
xchg
das
leave
push
cmpb
cs
xor
divb
and
stos
cmp
movsl
ja
sbb
je
test
ljmp
addl
cmp
mov
mov
lcall
dec
adc
popf
sbb
mov
in
daa
or
lods
or
lds
rorl
out
push
cld
mov
insb
jp
jl
nop
jmp
pop
sub
jnp
jno
cmp
or
jl
pop
decl
bound
xchg
pop
addr16
inc
jno
std
push
mov
popf
mov
lods
sahf
int
inc
shlb
and
int
pop
mov
push
popa
adc
mov
jo
nop
xor
lret
out
out
add
into
lds
test
jae
loope
adc
cmpsb
add
daa
iret
jbe
pop
cmpsb
dec
les
call
icebp
cs
and
mov
jle
test
test
adc
mov
push
inc
or
inc
sub
aam
lods
push
adcl
mov
loopne
aaa
and
xchg
cmp
cmp
inc
inc
xor
daa
imul
pushf
xchg
or
mov
jp
or
loope
negb
ljmp
fistl
lock
push
enter
adc
jb
mov
pop
mov
mov
aaa
cmp
mov
movsb
int
jg
mov
leave
pop
jne
addr16
clc
mov
std
mov
daa
or
push
push
mov
loop
lods
adc
imul
cmc
sbb
adc
jge
jbe
inc
push
pop
lret
jmp
pop
pop
mov
je
sti
test
push
mov
and
adc
add
bound
stos
les
dec
push
imul
js
scas
scas
cwtl
js
xchg
push
add
stc
cmpsl
js
xor
pushf
push
mov
test
aas
dec
mov
cmp
jno
cmpsb
jl
add
in
fimuls
cli
pop
mov
mov
inc
stos
loopne
mov
insl
out
sarb
push
rclb
adc
inc
and
pop
sbb
pop
andl
cmp
xchg
add
lea
cmp
add
inc
pop
mov
dec
repnz
mov
das
add
lods
jns
xchg
and
shrl
rorb
stos
test
lock
jp
test
insl
ja
das
add
ljmp
dec
fcomi
inc
in
mov
scas
dec
int3
rcll
movsl
movsb
sti
bound
mov
mov
mov
into
mov
and
leave
jo
and
cmp
int
inc
test
orl
add
test
adc
or
jo
mov
cltd
xchg
push
ss
fimull
sub
loopne
adc
pop
fstps
mov
loopne
pop
adc
arpl
rorb
addps
push
add
retw
sbb
ss
sbb
insb
dec
sub
aas
aad
pop
inc
lahf
cmp
fs
lahf
mov
jae
dec
pushf
push
pop
xchg
jp
outsb
leave
ja
mov
xchg
ror
add
xchg
stos
out
ljmp
in
add
mov
scas
in
movsb
xor
xchg
addr16
jbe
outsb
cmp
adc
jle
xchg
mov
lret
mov
jno
and
push
dec
lea
mov
push
inc
sarb
shlb
insl
add
pop
popl
ret
inc
movsl
xchg
inc
or
es
enter
idivl
aad
sub
adc
pop
lods
mov
dec
jne
xchg
iret
or
shl
repnz
shll
movsb
imul
lock
ret
imul
push
xchg
sbb
mov
mov
mov
aaa
pop
rcrb
fscale
mov
adc
adc
scas
xor
rol
push
jne
mov
push
cli
std
push
fldt
sbb
mov
mov
bound
lock
mov
cmp
inc
ljmp
call
mov
cmpsl
sub
dec
xchg
xor
and
jns
or
mov
pop
add
and
xchg
outsb
pop
mov
fimull
mov
cmp
adc
out
pusha
std
add
int3
jge
xor
pop
aas
pop
add
in
pop
mov
insb
dec
repnz
je
sbbl
push
mov
shll
inc
adc
cmp
jg
adc
pop
bound
cmp
sbb
out
ret
outsl
addl
adcl
shlb
jp
mov
add
mov
adc
jge
add
and
arpl
in
adc
gs
pusha
sbb
ffree
test
sbbb
shll
pusha
ds
push
ret
lock
adc
fidivrl
sub
pop
sbb
pop
dec
scas
and
loop
add
ds
js
icebp
imulb
inc
inc
push
sbb
call
dec
in
scas
dec
dec
fistpll
mov
jge
mov
rcl
pushf
mov
fistpll
gs
leave
ret
jecxz
negl
pop
dec
maskmovq
divl
sub
lock
inc
addr16
add
jecxz
sbb
dec
loope
nopl
and
push
push
fisubrs
out
lods
push
dec
pushf
jge
or
in
xlat
add
xor
adc
mov
mov
mov
int
dec
rcrl
xor
cld
scas
pop
fsts
pop
int
xor
in
lcall
dec
jne
dec
fisubs
adc
shlb
bound
mov
mov
cli
add
dec
icebp
iret
ja
pusha
add
lret
sti
mul
jmp
xchg
lret
int3
push
shl
mov
sbb
mov
mov
push
repz
std
dec
push
nop
cmpb
sub
push
idivl
push
push
push
jae
fstpl
xor
and
jae
and
incl
mov
loopne
add
ds
loop
mov
daa
xor
mov
pushf
divl
jo
dec
aad
push
rolb
addr16
fsts
call
adc
negl
test
dec
push
dec
sbb
jmp
scas
cmp
dec
and
imul
lea
movzbl
or
sub
xchg
inc
dec
inc
dec
xor
inc
dec
sub
xor
inc
mov
inc
dec
jne
dec
mov
lea
movzbl
pop
dec
dec
pop
lea
inc
pop
dec
or
mov
sub
inc
dec
and
lea
inc
mov
lea
add
ret
push
push
movswl
dec
push
movzbl
or
mov
xor
dec
dec
push
and
inc
inc
dec
push
mov
mov
dec
mov
inc
dec
sub
push
lea
mov
mov
push
add
dec
xor
lea
and
push
add
add
push
mov
imul
pushl
mov
call
add
add
sub
inc
mov
inc
mov
inc
sub
pop
ret
dec
inc
cmp
jb
dec
xor
lea
movsbl
mov
imul
movsbl
mov
lea
add
inc
add
or
inc
mov
inc
imul
mov
dec
mov
cmp
jb
dec
pop
mov
dec
dec
lea
mov
dec
dec
mov
imul
xor
lea
lea
sub
xor
imul
add
xor
mov
lea
mov
test
jbe
dec
or
or
inc
inc
inc
movzbl
dec
xor
movsbl
sub
movzwl
and
dec
sub
mov
mov
lea
movzbl
xor
lea
add
lea
inc
and
mov
xor
mov
dec
dec
mov
dec
mov
mov
add
dec
mov
movsbl
lea
mov
lea
dec
add
dec
jne
dec
mov
add
dec
and
inc
inc
add
sub
add
inc
dec
mov
imul
dec
add
lea
lea
add
inc
mov
mov
inc
xor
test
jbe
mov
dec
lea
xor
inc
xor
add
and
lea
lea
inc
lea
inc
sub
mov
inc
movzbl
imul
mov
mov
dec
mov
and
inc
add
mov
movzwl
dec
movzbl
mov
and
add
movsbl
mov
and
mov
dec
mov
dec
imul
movzbl
mov
mov
mov
add
mov
mov
mov
mov
movzbl
dec
and
add
mov
jmp
push
imul
mov
sub
imul
mov
lea
mov
sub
inc
inc
or
dec
mov
sub
inc
or
dec
mov
imul
inc
mov
add
and
inc
sub
add
movswl
lea
xor
add
mov
mov
mov
xor
mov
imul
mov
inc
inc
cmp
je
lea
mov
imul
push
lea
call
call
inc
dec
call
call
mov
add
sub
mov
inc
add
add
ret
movsbl
inc
pop
dec
ret
push
add
movzwl
add
imul
movzbl
push
lea
sub
push
mov
push
add
push
lea
imul
movswl
lea
sub
call
add
push
lea
sub
xor
dec
sub
imul
neg
inc
lea
inc
inc
movzbl
mov
mov
lea
mov
mov
add
dec
inc
dec
mov
dec
je
add
mov
add
mov
dec
dec
mov
add
mov
add
mov
repnz
inc
dec
add
mov
jmp
or
sub
sub
add
mov
inc
dec
dec
dec
inc
inc
movzwl
inc
lea
jmp
fwait
mov
call
test
out
jle
or
sub
arpl
pop
cld
xchg
scas
aaa
test
xor
mov
or
sbb
mov
lret
mov
sbb
ljmp
scas
jne
cmp
mov
loop
mov
dec
stos
pop
aas
cli
sub
or
mov
aaa
push
and
xchg
insl
movl
push
loop
pop
mov
bound
fsubl
movsl
mov
test
cwtl
or
loopne
jnp
mov
inc
imul
outsl
jnp
xchg
stos
sub
stos
jecxz
addr16
dec
cli
mov
movsb
pop
pop
pop
or
mov
jne
add
loope
aas
pop
arpl
lcall
xchg
repnz
xchg
iret
in
jg
adc
fsubrs
push
leave
jae
les
cs
ret
ds
stos
jnp
add
stc
insb
out
mov
scas
testl
xchg
xchg
push
pop
std
mov
enter
dec
stos
mull
mov
pusha
cwtl
dec
fsubs
mov
int
cmp
mov
imul
into
xchg
pop
sti
andl
out
lcall
sbb
or
movsl
mov
cld
shrl
push
fisubl
stos
and
pushf
aas
insb
xchg
aam
or
in
mov
in
pop
or
sub
dec
rcrb
sub
or
mov
xor
inc
in
xlat
sbb
or
adcb
aaa
mov
push
inc
cs
pop
sbb
jo
fsubs
xchg
adc
in
sub
shlb
ficompl
js
je
bound
arpl
xchg
cmpsb
dec
scas
push
xchg
fbstp
add
mov
inc
mov
outsl
ret
adc
sbb
xor
lcall
push
loop
dec
cmp
xchg
xchg
jne
mov
out
fbstp
idivb
loope
xor
mov
jnp
lcall
xor
push
push
in
inc
or
test
clc
lcall
repz
jmp
loope
imul
xchg
xlat
xchg
mov
or
adcb
orb
outsl
outsb
inc
inc
xor
xchg
int
push
pushf
xchg
push
and
mov
pop
mov
mov
insl
sar
mov
xchg
jno
add
or
aad
jge
add
mov
push
test
imul
lds
nop
movb
stc
clc
jg
mov
xchg
sub
ret
out
add
xchg
xchg
sbb
cmc
stc
pop
daa
cltd
sub
xor
inc
faddl
sbb
call
and
ja
xor
adc
sub
push
xchg
push
mov
popl
daa
cmpsl
jae,pt
lea
lea
in
cmpsb
and
inc
repnz
dec
xor
xor
movsl
bound
push
shr
orb
out
nop
insb
xchg
push
mov
sub
jnp
aaa
adc
gs
scas
mov
xchg
fisubl
push
aad
cld
or
jle
pushf
fcomps
mov
enter
test
ret
lods
hlt
push
and
dec
fisttpll
jl
push
loopne
pop
add
mov
cmp
clc
sti
xor
les
sub
outsl
enter
inc
and
js
push
es
sub
or
pop
jns
push
cmp
adc
dec
popa
loop
xlat
xor
mov
out
fstl
xlat
or
lods
mov
lds
gs
cmovnp
push
popa
cltd
bnd
dec
sahf
into
sahf
mov
push
xorb
mov
mov
jle
inc
je
mov
in
scas
dec
inc
call
aam
lock
xor
data16
cwtl
aad
xchg
and
popa
out
jno
lret
jne
add
lds
lds
sarl
shl
mov
repz
xor
je
mov
sub
cmpsb
and
dec
inc
andl
push
test
shll
mov
xchg
sahf
lahf
gs
fcoms
and
stc
inc
daa
cwtl
mov
shlb
inc
stc
and
pop
xor
loop
cli
pop
mov
movsl
sub
cmp
mov
outsb
fbstp
sub
and
mov
les
cmpsl
sub
out
imul
test
clc
xchg
cmpsl
ret
push
ret
jo
pop
push
daa
lock
jl
jecxz
outsb
dec
mov
bnd
fmull
jbe
repz
out
popa
xor
dec
int3
int3
inc
sub
movb
cmp
cli
mov
movsb
jge
jb
jae
stos
mov
pop
loop
ret
sbb
push
lcall
ficoml
and
xchg
mov
xor
mov
pop
lcall
jno
loop
into
sub
int
daa
fwait
pushf
sti
and
popa
pop
adc
push
jns
into
xchg
xchg
outsb
mov
sahf
sub
sbb
jmp
rolb
push
loopne
pop
movsb
iret
and
pop
jne
cld
pop
xchg
mov
adc
pop
mov
sbb
js
pop
call
push
in
mov
clc
mov
adc
xrelease
rcll
addr16
lcall
je
test
sub
dec
mov
rcrl
ja
shll
cmp
loop
or
mov
pop
faddl
negb
out
and
push
inc
dec
movsl
push
and
fistps
cmp
aaa
sbb
nop
cmp
xlat
pop
pop
add
test
ds
fdivrl
mov
mov
out
mov
cltd
lock
pop
cmp
insl
pushf
xlat
test
hlt
ljmp
mov
cmpsb
xchg
pop
testb
xor
stos
ja
test
in
mov
int
adc
inc
stos
add
inc
out
push
sub
bound
mov
stos
imul
insb
imul
incl
or
shl
pop
insl
fwait
add
enter
cmpb
inc
aaa
mov
hlt
mov
or
jp
cmp
maskmovq
add
adc
mov
rcll
les
dec
outsl
js
push
or
push
shrb
mov
sbb
adcl
test
xchg
fistps
nop
dec
arpl
jl
fwait
movsb
ds
mov
cmc
xchg
mov
jne,pn
loopne
sahf
bnd
mov
mov
jno
push
add
insl
inc
sub
ror
lahf
mov
adc
or
loope
sbb
fwait
xchg
mov
shr
icebp
mov
inc
xor
cld
or
xor
sbb
fisubs
mov
pop
into
cmc
mov
fnstsw
repz
sbb
loope
fcompl
shl
enter
add
lods
push
cmc
xor
inc
js
push
bound
cs
jne
add
subb
clc
or
push
pusha
sbb
nop
dec
ja
inc
jp
sbb
sub
push
xchg
xchg
mov
dec
push
mov
enter
movsb
xor
repnz
not
cltd
in
mulb
xor
xor
push
pop
adc
xchg
jl
out
lahf
and
gs
pop
scas
mov
jno
xchg
fldenv
and
add
ds
jmp
lcall
mov
out
dec
pop
arpl
xor
imul
and
push
daa
mov
dec
lea
aam
lret
dec
mov
cmpl
in
lods
push
out
jne
in
mov
sub
mov
cmpsl
sarl
dec
stos
mov
mov
hlt
arpl
sbb
push
pop
imul
mov
in
int
sbb
xchg
mov
dec
mulb
gs
cmp
xchg
jg
cltd
ret
testl
cmp
sub
adc
xchg
dec
gs
subb
in
sti
mov
mov
mov
cmpsl
insl
lods
cmpsb
jmp
lret
in
xchg
fcmovb
dec
and
js
xor
lea
rorb
jb
sahf
scas
pop
xchg
add
ret
je
mov
jne
loop
and
xor
ret
inc
sub
inc
xchg
jno
mov
pushf
push
push
rcrl
push
xor
inc
jp
lods
push
jecxz
adc
and
xor
jnp
inc
xor
jl
fidivl
enter
sub
nop
or
or
dec
sub
subl
movsb
in
repz
insl
repnz
cmp
mulb
jmp
lds
hlt
sti
inc
aas
lret
cli
imul
dec
fsts
js
mov
or
add
clc
pop
notb
inc
nop
dec
mov
shr
lcall
leave
push
mov
jecxz
push
mov
scas
ss
inc
outsl
cmpl
out
inc
inc
es
or
mov
push
jecxz
shll
pop
scas
lds
mov
and
in
cmpsl
cltd
xchg
int3
lods
dec
hlt
aad
jmp
sbb
sub
jbe
mov
sbb
ret
cwtl
cltd
in
dec
popa
inc
sbb
std
imul
mov
flds
fisubs
enter
andb
dec
jge
push
fsubr
cmpsl
or
aas
add
ret
negb
mov
xchg
sbb
sbb
mov
test
sti
jno
imul
sbb
cmp
adc
fwait
outsb
les
push
push
jecxz
cmp
das
mov
stos
push
scas
push
lcall
daa
cmp
pop
fdivl
sbb
hlt
xchg
pop
or
mov
sub
es
mov
and
fucomip
and
ret
daa
cs
fisttps
push
cmc
sub
popa
stos
imul
movsl
clc
add
test
mov
jmp
add
scas
xchg
enter
movsl
dec
or
inc
xor
add
mov
pop
adc
jle
adcb
je
nop
data16
inc
jne
sahf
add
xchg
icebp
popa
push
subb
insb
lret
mov
call
lock
pop
or
outsl
or
mov
and
decl
and
sub
jl
notl
lods
sub
xor
aad
imul
out
decl
push
shlb
push
dec
adc
andb
bswap
ljmp
pop
arpl
lods
mov
std
stc
in
jae
mul
jmp
sbb
adc
aad
push
leave
shlb
ret
sub
outsb
repz
pop
ss
jns
pop
insb
ficoms
push
mov
xchg
add
imul
lret
mov
test
scas
pop
call
outsl
sarb
mov
xchg
mov
andb
movb
and
into
or
xor
xlat
and
dec
stc
mov
ja
test
mov
aas
repz
jle
loop
and
outsl
pusha
sbb
inc
lods
outsb
sbb
in
gs
cmp
cwtl
sbb
and
sahf
in
jg
push
xlat
rcrl
sbb
adc
leave
sub
adc
or
mov
mov
movsb
adc
push
jae
adc
lods
ds
sbb
fcoms
call
cmp
mov
mov
loop
or
sub
ficoml
hlt
psubw
gs
xchg
jno
dec
and
dec
int
hlt
push
xor
insl
mov
pop
cmc
xor
add
dec
mov
arpl
sbb
stc
stos
getsec
cwtl
adc
cld
cmp
pop
sbb
aaa
add
js
in
divl
mov
daa
fimull
into
out
and
cmpsl
test
nop
jmp
adc
fwait
jae
sub
pop
inc
sbb
sub
cmp
cmpsb
test
nop
jmp
xlat
pop
int
mov
jnp
cmp
xor
cwtl
sbb
in
or
dec
xchg
pop
lea
cmp
or
jl
sti
push
push
call
add
ss
dec
xchg
stos
out
and
inc
daa
mov
xchg
jne
stos
test
lahf
push
cmp
movd
adcb
stos
pusha
and
les
ret
jmp
shlb
mov
sub
pop
fucomp
cmp
inc
dec
xor
mov
cmp
inc
test
add
push
popa
arpl
shll
pop
fcompp
adc
or
inc
fstpt
gs
lret
int3
adc
fcompl
push
pop
aam
clc
cmc
movsb
pop
xchg
push
jecxz
sbb
stc
mov
pop
xor
sbb
repz
push
dec
sbb
push
mov
pusha
sbb
sbb
fcmovnu
pop
repz
outsl
aas
popf
and
aas
push
fisttps
scas
repz
dec
and
in
mov
test
cwtl
cs
xlat
std
fwait
sub
cmpb
aaa
js
inc
int3
push
test
cs
mov
mov
jecxz
fstl
mov
cmp
dec
push
rorl
cmp
pop
add
xchg
dec
add
mov
aas
lret
mov
mov
in
adc
out
xor
scas
jmp
in
cmc
push
in
sub
pusha
mov
cli
and
pop
sbb
popf
or
ds
adc
scas
cmp
lds
fcomp
cmp
xchg
xchg
pop
or
pusha
mov
test
add
movsb
mov
jle
outsl
shll
stc
xchg
adc
lea
inc
or
adc
imull
shll
push
es
push
sub
xor
mov
mov
call
add
movsb
ret
cmp
inc
push
into
add
xlat
and
or
lret
jle
testl
and
fisubrl
loope
xor
push
in
xlat
xchg
inc
dec
repnz
sti
repz
out
add
and
adc
push
fildl
insb
sub
loope
and
pop
std
test
icebp
adc
mov
mov
dec
push
lds
mov
je
jns
xchg
mov
dec
test
lret
mov
imulb
in
push
ss
push
lea
sahf
push
ret
mov
ja
cmp
gs
or
mov
or
in
enter
ret
out
rorl
data16
or
mov
mov
call
and
dec
call
add
push
call
inc
add
dec
movswl
movswl
dec
call
dec
inc
sub
mov
mov
xor
mov
dec
dec
inc
sub
inc
mov
sub
call
add
add
dec
and
mov
call
inc
xor
call
dec
add
movsbl
inc
lea
dec
imul
add
dec
pop
add
add
and
add
mov
pop
mov
inc
pop
add
dec
dec
dec
pop
mov
dec
inc
add
lea
inc
imul
mov
pop
mov
lea
pop
lea
inc
mov
add
dec
call
mov
sub
mov
imul
ret
inc
mov
push
and
sub
push
inc
dec
push
dec
mov
push
inc
mov
push
and
lea
mov
or
inc
push
mov
ret
push
imul
push
movswl
movsbl
and
sub
push
mov
dec
sub
call
pop
ret
jmp
mov
dec
pop
pop
ret
push
sub
inc
mov
dec
add
dec
xor
inc
sub
add
xor
inc
add
dec
inc
mov
inc
lea
dec
lea
lea
add
sub
imul
mov
dec
inc
pop
ret
sub
imul
mov
lea
mov
mov
movzbl
or
mov
dec
inc
mov
lea
xor
xor
add
mov
mov
inc
and
inc
dec
dec
mov
lea
add
inc
cmp
jb
add
push
dec
mov
push
imul
inc
push
movsbl
add
xor
dec
mov
xor
movzbl
sub
xor
inc
xor
push
and
mov
push
inc
inc
pop
inc
add
mov
dec
mov
inc
or
mov
or
lea
xor
mov
mov
dec
imul
mov
dec
mov
movzbl
lea
lea
add
sub
add
dec
add
dec
dec
movzbl
imul
lea
imul
mov
dec
dec
inc
add
inc
imul
and
mov
inc
inc
jmp
add
add
fs
add
xchg
loope
adc
adc
add
adc
add
pop
hlt
add
or
pushf
add
aaa
mov
add
addr16
adc
mov
lret
adc
addb
mov
mov
je
push
add
inc
int3
not
mov
flds
pushf
dec
and
inc
lock
mov
arpl
outsl
jmp
rcr
jno
inc
test
or
flds
pop
fs
ja
and
jl
fildll
cmpsl
daa
movsl
pop
xlat
and
pop
push
and
ret
push
xchg
push
arpl
push
cltd
pop
pop
insl
or
stos
pop
cld
fnsave
jne
ds
xchg
insl
into
aaa
idivl
test
push
hlt
shll
dec
xchg
add
add
lcall
les
xor
nop
sbb
push
mov
xchg
dec
sbb
pop
sub
push
pop
and
pop
add
cmp
add
test
ljmp
nop
xchg
jmp
or
cmp
sub
sub
mov
lds
mov
sbb
pop
ret
xchg
adc
icebp
rorb
ror
lea
mov
sbb
stc
xlat
push
cmp
sub
pop
jl
aaa
mov
push
cmpsb
adc
stos
rol
aam
insl
nop
add
and
addr16
mov
pmovmskb
adc
js
pop
in
mov
aaa
das
mov
mov
lds
pinsrw
bound
xorl
dec
inc
adc
pusha
loop
xor
jne
add
push
sbb
inc
adc
sarl
add
jl
sub
jmp
arpl
mov
jae
add
ret
aad
mov
data16
mov
sub
loop
mov
leave
test
sbb
fwait
xor
jb
addr16
or
popf
push
clc
in
push
or
pushf
fs
push
aas
enter
pop
movsl
dec
add
mov
and
add
cmc
fidivrs
add
loop
arpl
pop
outsl
push
inc
inc
add
mul
sub
xor
aas
cltd
xchg
push
sti
push
add
mov
jo
adc
xchg
pop
in
sbb
mov
and
mov
test
inc
les
sbb
xor
cmc
aaa
adc
fsubrp
and
push
cmp
adc
cmp
xlat
xor
shl
add
sti
cltd
add
orb
push
xor
cs
push
add
icebp
xchg
xchg
xchg
out
outsb
outsl
in
cmpsl
push
nop
xchg
pop
mov
jbe
add
mov
movsb
or
xor
out
sub
clc
sub
sbb
fsubrs
mov
out
pop
addr16
push
mov
push
mov
mov
adc
jb
xchg
test
in
in
adc
sub
mov
mov
cmp
sarb
loope
dec
mov
fld
loop
push
sub
pop
imul
dec
add
pop
push
and
pusha
arpl
pop
addr16
sub
or
out
in
fdivrs
dec
jno
arpl
xchg
inc
inc
les
stos
pop
jle
mov
xlat
xchg
int
jmp
xchg
cmp
cwtl
arpl
adc
add
add
dec
mov
pop
aas
sub
pop
aaa
lods
jmp
mov
add
mov
pop
lods
ljmp
sbb
aam
add
cmpsl
inc
pop
test
mov
push
jnp
pop
and
lock
movsb
std
cwtl
lea
push
fdivr
inc
mov
popf
pop
cwtl
and
sbb
push
mov
inc
pop
xor
push
inc
jo
mov
jge
adc
push
dec
stc
push
inc
lds
mov
movmskps
mov
test
jmp
outsw
pop
das
and
sti
xchg
loopne
dec
xchg
enter
into
jge
inc
not
pop
push
mov
dec
ljmp
imul
ljmp
dec
lea
add
mov
push
mov
sub
pop
fsubrs
ljmp
add
mov
pushf
in
mov
mov
int3
and
pop
cmpsb
sub
mov
es
cmp
lods
and
jg
ror
fwait
rolb
aas
jl
popa
rcrb
in
push
xchg
pop
add
pop
and
xchg
push
out
cmp
hlt
sub
stos
ljmp
and
test
inc
std
pop
cmp
and
xlat
mov
cmpxchg
test
add
sti
aad
je
imul
aad
pushf
push
sbb
mov
or
test
aam
in
sub
imul
add
jge
lcall
xchg
nop
aad
mov
jne
int
lahf
movsb
mov
test
or
or
inc
bnd
hlt
aam
imul
lret
aam
add
add
cmp
mov
pop
dec
mov
and
sub
fnstcw
inc
sarb
add
add
or
mov
cli
dec
sti
mov
and
pop
in
mov
push
cltd
pop
repnz
dec
sbb
test
and
jb
test
lcall
loop
push
je
sbb
insl
push
push
adc
sti
mov
popa
test
int
cmpsb
jp
xlat
cli
std
mov
adc
mov
xchg
sbb
adc
jmp
loopne
push
jg
sarb
sub
nop
fs
std
pop
xchg
mov
xor
lods
and
or
mov
xchg
sbb
mov
popf
pop
scas
add
arpl
dec
sbb
push
int3
sub
mov
in
cs
pusha
mov
test
mov
mov
xor
cmp
mov
cmp
or
lret
cli
xor
movsb
inc
pushf
sub
push
mov
loope
mov
mov
jnp
and
mov
nop
xor
mov
fildll
stc
xchg
repnz
cmp
test
pop
pop
sbb
imul
push
cmp
push
jo
repz
pop
mov
xor
icebp
pop
jge
int3
movsb
adc
inc
inc
add
push
int3
xchg
clc
fs
mov
mov
add
pop
mull
fimull
shrb
jne
dec
stos
add
add
out
or
mov
dec
sbb
xor
mov
popf
cli
rorl
fs
std
sub
in
mov
xor
mov
and
jb
in
inc
cmp
inc
jne
mov
insl
mov
adc
cmpsl
xor
mov
and
push
pop
fs
push
jbe
ret
lods
scas
adcb
add
fildl
mov
lods
adc
pop
cmp
nop
add
jp
dec
mov
and
in
nop
and
je
dec
mov
cmp
xor
ljmp
mov
xor
movsl
cmpsl
cmpsl
sbb
or
add
sbb
inc
mov
pop
pop
sti
or
mov
clc
popf
daa
fdivs
jmp
or
cmp
insb
jae
incb
cmp
data16
jg
or
xor
inc
adc
out
insl
out
mov
push
or
push
jle
js
mov
adc
xchg
mov
lods
outsb
dec
add
data16
out
xor
jnp
inc
outsl
push
outsb
cld
pop
inc
out
adc
fxrstor
imul
jge
jb
mov
inc
inc
adc
ret
js
mov
push
lret
jle
rcrb
sub
dec
inc
or
mov
dec
into
dec
jnp
adc
xor
inc
jno
dec
sahf
lret
add
outsb
mov
out
imul
imul
ds
push
lret
dec
mov
inc
lahf
imul
js
lock
and
sub
and
ret
pushf
mov
cmp
out
inc
ret
enter
dec
mov
adc
mov
aad
pusha
dec
jge
cmp
popf
sbb
mov
ss
or
les
scas
or
inc
push
sbb
sahf
pushf
mov
mov
cs
or
stos
shll
sbb
sbb
in
mov
gs
jo
push
stc
rorl
sbb
orb
cld
std
sub
pop
dec
in
sub
push
dec
mov
or
cmpsb
mov
dec
inc
repz
je
rorb
inc
lock
lods
clc
and
into
aas
push
ficompl
mov
ljmp
jge
sbb
cwtl
out
ja
mov
jns
push
aas
scas
cmp
sub
pop
push
push
imul
std
arpl
mov
cmpsl
push
jbe
push
jmp
jmp
int3
ret
and
push
int
inc
push
mov
and
loop
pop
mov
arpl
es
adc
sbb
movsl
add
pop
ss
xchg
or
lock
jnp
ljmp
push
ror
xchg
pop
shrb
dec
jae
dec
push
bound
jo
test
and
or
test
adc
jno
movsl
sbb
arpl
arpl
pushf
sti
and
jl
jbe
lea
xchg
jg
les
ja
mov
cmp
pop
cltd
ja
pop
mov
out
imul
dec
pop
inc
dec
je
out
ss
xchg
xchg
xchg
ret
push
sbb
cmp
add
dec
idiv
mov
push
jo
and
cmp
jl
mov
bound
stos
pop
jmp
xchg
out
pop
jno
lret
jge
jle
xlat
data16
adc
xor
js
repnz
rol
rorl
and
ja
inc
pop
adc
mov
insb
lock
lds
mov
clc
and
add
pop
in
or
lcall
pop
mov
repnz
dec
cmp
insb
sub
inc
mov
idivb
xor
adc
mov
andb
imul
outsb
stc
sbb
sub
popa
enter
mov
jnp
sbb
popf
pushf
movsl
ret
add
mov
and
sti
pop
and
mov
lods
xchg
and
fwait
lea
mov
mov
scas
and
popl
or
mov
sub
dec
dec
and
mov
addr16
or
xor
loop
inc
xchg
test
stos
mov
cwtl
mov
dec
jg
jle
lods
bound
stos
into
cmc
xchg
dec
in
in
pop
jns
jnp
les
fadds
dec
loop
fnstcw
pop
pop
add
pop
inc
add
add
mov
push
enter
lods
inc
sbb
ja
gs
lret
es
mov
cmp
inc
xchg
aaa
fistps
xchg
push
or
or
daa
ja
dec
push
jp
adc
xor
subb
mov
xor
push
jne
mov
cmp
or
inc
mov
xchg
adc
stos
out
dec
adcl
inc
jmp
sarl
dec
ljmp
testb
push
dec
mov
mov
jge
mov
daa
ds
mov
jo
sbb
dec
add
push
addb
push
push
push
test
stos
cmc
xor
inc
and
add
xchg
xchg
mov
out
ret
push
or
jnp
cli
pop
ds
push
pop
jl
insl
out
push
cltd
fmull
jno
je
in
push
ss
cmp
jl
es
dec
shr
lahf
sbb
cltd
mov
inc
aam
add
and
mov
add
movsb
inc
xchg
dec
clc
push
jo,pn
adc
std
js
outsb
fldt
xor
std
inc
sahf
adc
cmpsb
adc
cmp
ljmp
dec
mov
xlat
xchg
out
pop
lret
add
loope
jge
mov
xorb
movsl
das
cmp
push
push
outsl
push
mov
jge
mov
lahf
sub
cmp
out
stos
ret
jno
mov
stos
push
scas
jbe
push
inc
inc
and
out
into
mov
stos
out
dec
push
das
pop
int
rorl
mov
insl
mull
and
fdivr
or
outsb
pop
jne
sarb
cmp
dec
decl
insl
cwtl
outsb
xor
idivb
aam
out
pusha
or
push
xchg
addr16
outsl
inc
jae
pop
es
imul
cwtl
aam
cmp
aam
or
inc
or
aaa
cmpsb
sub
mov
out
xchg
jle
arpl
xchg
test
jno
inc
fcomi
cmpsb
leave
lock
jmp
cld
ds
daa
mov
pusha
xchg
lret
pushf
inc
mov
stos
dec
sub
hlt
jnp
and
mov
xchg
test
nop
push
push
mov
xchg
int3
outsb
scas
pop
cmpsl
adc
pushf
enter
jb
dec
mov
call
push
or
pop
mov
mov
ret
jmp
stc
pop
sub
cmp
in
stc
mov
pop
cmpsb
sub
jns
pop
sbb
stos
push
jbe
repnz
incl
cwtl
mov
inc
pop
sbb
repnz
sub
add
push
fsubrs
push
gs
mov
das
mov
pop
imul
in
jnp
and
pushf
sub
es
sti
insb
dec
clc
pop
jae
xchg
xchg
jae
ss
test
arpl
mov
xor
idivb
push
push
mov
sti
add
in
sti
aaa
shl
fs
mov
fldenv
adc
arpl
or
int
push
lahf
arpl
movsl
fldt
mov
aad
mov
xchg
out
adc
scas
cmpsb
pop
sub
stos
sbb
xchg
lcall
lock
dec
test
lods
das
push
cli
sahf
mov
loop
inc
mov
jae
mov
dec
xchg
out
inc
and
pop
lahf
jmp
inc
add
lret
inc
fwait
mov
ja
push
test
std
cld
les
push
sub
mov
in
xor
push
outsb
xchg
std
fwait
daa
pop
xor
pop
push
mov
xchg
sub
adc
sub
icebp
xor
mov
outsb
fcmove
rorl
repnz
pushf
loop
inc
cmc
mov
sbb
arpl
out
js
pusha
and
or
outsb
xchg
cmpsb
mov
addr16
xchg
jl
outsb
mov
ljmp
inc
mov
sbb
xor
into
bound
cmp
enter
or
clc
adc
je
jle
pop
jne
sbb
cmpps
notb
inc
xchg
cmp
ficompl
jg
jb
mov
pop
scas
or
jecxz
pushf
push
pop
loope
aam
clc
adcl
inc
cltd
xchg
aam
das
arpl
loope
xchg
jnp
cmpsb
add
nopl
mov
cmpb
pop
adc
cli
test
xchg
mov
aaa
pop
xlat
inc
in
addr16
jecxz
cmpsb
sub
mov
pop
movsl
negl
lcall
push
lock
mov
outsl
adc
sub
call
sbb
mov
cmp
sub
and
mov
cli
cmp
mov
or
shll
jle
jl
rorl
dec
es
in
sub
push
popa
jg
std
push
repz
fsts
in
repz
push
je
in
jmp
leave
adc
scas
cmp
sbb
fwait
cmp
pop
out
shll
xchg
lock
out
dec
cld
xchg
pop
lods
xchg
push
fs
iret
jno
sahf
mov
lret
nop
push
push
imul
push
das
xchg
cmpsl
call
loope
pop
call
sbb
xchg
or
mov
and
rorb
inc
outsl
mov
push
lea
es
imul
mov
fld
out
lods
push
mov
mov
cmp
push
aas
xchg
jnp
loopne
sbb
sbb
les
and
or
xor
incb
cmp
lcall
push
push
out
add
fsubr
jb
fistps
cltd
jne
jecxz
push
add
inc
mov
mov
test
pop
adc
dec
xor
mov
add
xchg
cs
push
xor
arpl
cmp
fiadds
js
add
sub
popf
sahf
cwtl
test
lahf
sahf
adc
inc
xchg
call
mov
mov
aad
push
int
mov
lret
xor
stos
jo
cli
add
mov
pop
dec
inc
mov
les
inc
sbb
int3
dec
cwtl
lods
rol
dec
outsl
cmpsl
xchg
pop
divb
int
lods
adc
and
popf
jae
jnp
or
loop
movsb
adc
lret
pop
xchg
sbb
fimuls
jecxz
arpl
or
cmpsb
hlt
lods
dec
adc
and
gs
pop
fwait
or
jb
sub
push
and
clc
jl
push
sahf
dec
pushf
push
cmp
std
xchg
dec
pop
jo
cmp
movsb
pop
sbb
pop
or
mov
stc
lahf
mov
jmp
stos
mov
sub
loope
lods
mov
daa
fwait
adc
sahf
jne
fisttpl
pop
jbe
cwtl
divb
mov
push
inc
inc
cmc
fdivrl
aam
scas
jb
mov
movsl
sbb
imul
or
xor
cmp
inc
dec
lret
xchg
push
imul
nop
lcall
push
dec
dec
fisttpll
adc
jle
out
lds
pop
ror
clc
mulb
and
popa
les
pop
mov
popf
adc
or
nop
mov
dec
xor
int3
inc
add
sbb
pop
push
cmp
arpl
push
test
mov
pop
mov
jge
pop
add
popf
jmp
lods
repnz
mov
mov
mov
popf
fdivrl
lds
sbb
push
jl
outsl
cwtl
sub
jns
push
and
into
mov
ss
fstps
clc
mov
xchg
xchg
in
lods
jecxz
or
std
imul
or
jg
inc
sbb
idivl
push
jbe
jb
in
stos
dec
ret
ja
cwtl
sti
in
xchg
mov
fadds
pushf
daa
fwait
out
out
pop
fstpl
pop
xchg
pop
jg
data16
addr16
dec
inc
lahf
cli
push
xor
mov
xchg
dec
pop
inc
cld
mov
adcb
jmp
stos
bnd
add
jb
testl
xor
subl
dec
adc
xchg
or
movsl
and
xchg
lret
scas
lahf
inc
xor
adc
push
inc
addr16
lock
or
xchg
out
xchg
out
scas
pop
fs
xchg
adc
dec
cmpb
aas
dec
and
fadds
or
cltd
scas
ret
sbb
xor
repnz
pop
jp
mov
push
insl
imul
rcr
inc
jle
add
in
pusha
int3
ffreep
jecxz
lods
xchg
sbbl
sbb
popf
ret
loope
loope
lds
nop
push
mov
sbb
addr16
movsb
int
xchg
call
mov
fwait
enter
int
psllw
push
push
dec
xchg
out
mov
popa
xchg
lret
jg
push
jl
pop
out
outsl
mov
imul
pusha
sub
sub
test
xchg
inc
xchg
ja
mov
ffreep
call
mov
in
add
sbb
xor
imul
movsb
mov
sti
push
adc
lock
out
jmp
insb
sbb
mov
adc
lcall
pop
ljmp
inc
sbb
pushf
fstl
lods
xchg
dec
stos
fildll
daa
xor
jb
je
rcrl
push
test
in
out
rcrb
cmc
pop
testb
testb
xchg
adc
push
pop
popa
insb
jg
xlat
rcrl
adc
lcall
aaa
mull
and
int3
xchg
xlat
in
push
push
xlat
into
std
mov
popa
cmp
mov
stos
addl
pop
and
inc
out
xchg
dec
rol
in
cmp
ret
loop
jp
lea
adc
and
fmuls
push
pop
and
xchg
pop
les
and
and
lods
mov
ret
or
std
pushf
fldl
mov
sbb
xor
lret
xor
mov
ss
jecxz
dec
aaa
mov
lods
movsb
bswap
mov
cmpsl
mov
mov
xlat
aaa
sbbl
int
leave
rolb
push
sbb
fcompl
and
ror
stos
push
ja
adc
jg
mov
scas
mov
repnz
sub
xor
jmp
inc
push
aam
test
rcrl
lds
out
lahf
push
stos
xchg
dec
dec
sbb
psrlw
out
popa
mov
fistps
test
sti
adc
mov
jmp
in
hlt
mov
test
jb
cmp
nop
addr16
inc
lret
inc
ss
adc
jo
aas
mov
lahf
mov
cld
jp
add
and
enter
jns
add
andb
les
pop
or
lcall
pop
icebp
js
dec
lret
sub
ret
sbb
ja
mov
sbb
jle
cmpsb
movsb
xchg
add
decb
push
add
adc
enter
mov
xchg
jbe
push
sub
adc
pop
xchg
push
jbe
incb
mov
mov
jge
pop
orb
repz
cmc
cltd
sub
mov
aad
add
dec
lahf
add
test
push
jae
cmp
mov
xchg
jecxz,pn
dec
sub
cmpsl
data16
sbb
inc
push
data16
dec
or
pop
fcmovnb
xchg
imul
fwait
jae
or
shrl
dec
jae
lret
hlt
xor
or
pop
orb
and
scas
dec
pop
lea
hlt
in
faddl
lods
and
jle
mov
scas
arpl
jo
aam
ss
sub
fbstp
pop
cmp
inc
out
mov
cmp
lock
mov
xchg
xchg
in
and
mov
repz
cmp
subb
push
test
push
adc
out
shlb
lcall
dec
aas
push
mov
inc
or
dec
sti
inc
pop
jecxz
pop
and
dec
arpl
cmpsl
mov
cmp
or
add
mov
inc
bound
scas
push
lea
and
ss
je
cmp
lock
push
insb
testb
jbe
ds
test
pop
hlt
dec
pop
jnp
adc
cld
xchg
pop
daa
sbb
mov
iret
mov
bnd
les
popa
mov
outsl
dec
inc
inc
lret
jle
ljmp
filds
subl
xchg
cmpsl
jbe
push
and
mov
in
lea
bound
mov
mov
jle
mov
gs
and
mov
cmp
repz
ljmp
xor
xchg
mov
push
lcall
in
js
jbe
call
xchg
dec
enter
aas
fsubs
sub
stos
clc
cmp
pop
in
and
adc
xchg
lcall
sti
and
rcrb
hlt
jge
or
gs
push
sbb
iret
insl
insl
jnp
clc
lds
mov
push
and
xchg
gs
sub
shlb
add
pop
add
popf
arpl
sub
mov
orb
ret
sbb
filds
push
sahf
and
ret
pop
sub
push
je
xor
aas
xchg
add
push
stc
cmp
repz
sti
out
div
inc
inc
ffreep
test
movsl
cmc
inc
test
ja
sub
and
bnd
pop
sub
mov
cvtps2pi
jmp
lods
mov
pop
aaa
and
sahf
bound
and
sahf
pop
xchg
in
fldl
frstor
fsubl
mov
test
jne
xor
scas
adcl
cmp
jg
inc
enter
addr16
pop
jmp
in
mov
jo
and
xor
shlb
sub
loopne
divb
test
cs
xor
insb
stc
jmp
out
inc
lods
lods
jo
scas
dec
sub
out
cmc
jg
xor
ja
mov
fdivrl
pop
and
gs
dec
cmpsl
jge
sub
incw
aas
das
pop
loopne
and
clc
or
mov
test
mov
sub
dec
mov
popf
cmpsb
dec
orl
xor
xlat
xchg
mov
mov
xor
mov
mov
and
mov
or
in
jb
addb
inc
sbbb
xchg
sbb
or
stc
pop
stos
scas
jno
push
mov
inc
push
add
jo
mov
mov
jbe
inc
xor
mov
pop
jnp
pop
adc
movl
stc
je
sub
xchg
or
pop
mov
mov
notb
or
aaa
into
shlb
stos
fsubrs
sbb
sub
lock
push
fisubs
adc
fwait
xor
stc
stos
stc
inc
popa
or
mov
mov
ret
fisttpl
in
cmpsb
test
push
and
jno,pt
xor
pushf
inc
test
fcoml
aaa
dec
xor
and
rclb
movsl
mov
movsl
add
xor
lods
mov
aad
push
lea
sub
jns
xor
mov
mull
push
xor
pop
adc
xor
sub
jl
aaa
add
mov
sbb
leave
hlt
mov
cmp
movsl
push
or
mov
jl
mov
jecxz
faddl
push
std
or
icebp
xor
lods
lea
loope
lods
mov
enter
mov
jle,pn
aad
xchg
sub
out
sub
mov
sub
into
adc
int
lds
fsubrs
push
rorb
pop
shlb
lds
fldenv
mov
or
push
lcall
sbb
bound
fisubrl
aam
jle
test
mov
stc
fwait
push
mov
cmpsb
push
std
sbb
das
ret
leave
inc
pop
xchg
pop
data16
mov
shl
cmp
jecxz
cltd
roll
push
mov
ret
and
mov
xor
and
and
mov
push
pop
add
dec
aam
cmp
xchg
sbb
push
test
ret
pop
push
nop
ja
cmpsb
ficoms
mov
aaa
stc
out
xchg
and
push
pop
fs
fimuls
adc
push
in
push
movsl
hlt
push
inc
popf
test
mov
add
in
sbb
push
or
inc
mov
mov
in
and
mov
push
out
js
push
loope
cld
sub
add
cli
ljmp
pop
xor
cmp
cmp
jnp
rclb
shlb
push
pop
in
insb
mov
add
frstor
negl
mov
je
and
cs
fldenv
fistl
stos
jge
xor
cmp
pushf
out
push
leave
sbb
lods
cmc
dec
lcall
pushf
mov
pop
mov
xchg
hlt
scas
pop
cmp
stc
cs
push
sub
sbb
addb
dec
push
push
repz
xor
inc
push
sti
cli
in
addps
loop
into
lea
imul
jbe
mov
xor
in
inc
ljmp
sub
icebp
jp
incl
xchg
sbb
pop
push
out
add
push
and
xor
mov
add
pop
pop
jno
mov
js
stos
jbe
xchg
out
scas
jge
or
insl
inc
sarl
test
push
or
mov
jecxz
or
ja
sahf
inc
scas
rcrb
inc
int3
stc
add
std
and
addb
add
adc
scas
cmpsl
mov
inc
sub
add
pop
cmp
xchg
insl
out
inc
inc
std
cmp
rcrl
cmp
std
fs
mov
xor
xlat
cmp
je
or
jb
ss
jbe
in
jmp
cmp
sbb
sbbb
fwait
push
fdiv
or
and
call
repnz
fs
notb
sub
or
incl
pop
pop
test
sbb
insl
inc
sub
cli
out
sub
sbb
nop
lahf
jns
sbb
inc
ret
mov
leave
xorb
pop
stc
inc
jno
lahf
inc
lea
mov
cmp
dec
push
shlb
inc
or
inc
pusha
std
cmpl
leave
or
jne
lea
ret
loope
mov
xchg
fistpl
sub
in
ss
mov
rorl
jno
ss
frstpm(287
and
pop
inc
test
gs
call
mov
ret
jb
leave
fcmovbe
fisttps
pop
xchg
fdivr
repz
iret
mov
es
push
jmp
dec
inc
data16
push
mov
jb
and
jb
sbb
inc
add
rolb
sbb
inc
push
push
lods
pop
jbe
pop
jbe
push
push
pop
hlt
fdivrl
xchg
cmp
ret
imul
push
xchg
adc
repnz
mov
mov
sar
movsl
cmp
fdivr
mov
dec
jae
sub
mov
xorb
jae
push
adc
pop
outsb
rcll
repnz
inc
and
add
cltd
iret
xchg
shll
aas
std
shr
cmc
stos
rcll
cmpsl
mov
add
mov
clc
xchg
cmpsl
cmpsb
test
jg
clc
jb
hlt
out
push
push
pop
mov
jae
fidivs
mov
and
push
pop
mov
sahf
push
mov
fdivs
js
int3
lea
mov
cmpsl
xchg
addl
pop
push
shll
into
pop
fldcw
mov
sub
inc
add
jns
xor
push
jb
push
cli
or
ret
imul
fcoms
nop
ja
dec
mov
ffreep
jo
inc
mov
iret
fdivrp
pop
scas
lea
sub
adc
sarb
repnz
jno
cmp
scas
andl
sbb
std
test
xchg
push
stos
adc
and
jg
divb
dec
push
or
jno
movsb
inc
aas
repnz
outsl
add
push
out
sub
adc
pop
dec
mov
fisubrs
fcoms
fnsave
loop
pop
ljmp
lods
mov
adc
inc
add
aaa
pop
dec
ret
out
cmc
push
int
cmp
push
sbb
pop
jge
sub
push
jne
push
std
mov
aad
dec
sub
sub
in
dec
ja
lds
fwait
lea
xchg
sub
mov
mov
clc
lea
negl
pop
fisttpll
xor
xor
scas
xor
xlat
lds
jmp
push
bound
test
sbb
inc
pusha
mov
cmp
pop
in
loope
lret
fwait
and
dec
dec
mov
vmaxpd
cmp
push
xor
xchg
hlt
sbb
mov
out
adc
movsb
pop
sbb
shlb
xor
dec
mov
inc
cmp
in
jnp
popa
add
pop
pop
dec
cs
push
popa
imul
adc
icebp
mov
cltd
test
lret
cmpsb
add
pop
fiadds
or
mov
call
pop
mov
fldcw
sti
fisttps
jge
gs
in
ljmp
pop
jnp
jo
aam
rcrl
jp
shr
cwtl
out
imull
xor
je
or
test
jge
frstor
mov
dec
mov
es
and
add
adc
pop
push
xor
stc
jge
pop
out
jne
adc
insl
outsb
cmpsb
ds
test
leave
pop
cmpsb
imul
fisubrl
and
mov
push
sub
mov
dec
dec
insl
or
iret
push
out
scas
push
loop
cmp
pop
mov
ret
mov
ss
and
xchg
lcall
outsb
mov
in
mov
imul
out
push
sahf
je
ss
push
dec
jp
mov
xchg
xchg
xlat
inc
jnp
add
mov
push
sbb
dec
xchg
adc
sahf
int3
mov
mov
lds
movsb
insl
imul
aas
xor
and
stos
pop
and
inc
push
sti
lods
inc
inc
cwtl
xchg
sahf
dec
hlt
xchg
push
inc
mov
or
jg
test
ljmp
push
lods
dec
pop
sub
loopne
xchg
or
loop
int3
fmull
test
cmp
xlat
and
cwtl
mov
bound
pop
jle
sti
inc
jbe
jne
data16
test
adcl
dec
sahf
mov
pop
lea
cmpsb
xor
cmp
js
sbbb
sti
addb
test
inc
pop
je
lods
call
jle
jecxz
stos
mov
repz
adc
imul
ljmp
sub
dec
repnz
adc
xchg
dec
stos
sub
or
insl
negb
cltd
sub
and
pop
push
and
loope
jno
jae
ret
loope
scas
jp
popa
iret
mov
sbb
mov
or
shll
movsl
mov
jnp
adc
xor
mov
mov
sbb
mov
lds
adc
nop
imul
pop
test
adc
lret
lds
jmp
cmp
shll
jecxz
push
out
aam
sub
mov
mov
xor
orl
sti
es
fisubrl
outsb
gs
cmp
bound
inc
mov
pop
sub
pop
std
lahf
or
fcoms
add
adc
sbb
cwtl
jbe
fisubl
pop
cmp
aas
sbbb
pop
sub
scas
lret
pop
xchg
push
aas
jmp
movl
sbb
popa
sub
mov
and
sub
call
mov
and
loopne
jmp
ss
mov
jo
cs
aam
lock
cltd
jo
fbstp
stc
sub
push
push
mov
push
icebp
bnd
mov
negb
scas
movsl
arpl
adc
lahf
cwtl
fs
mov
fs
inc
mov
mov
mov
add
aam
jl
sbbl
rolb
add
push
mov
mov
push
mov
in
and
and
ja,pt
or
inc
push
pop
mov
inc
scas
sahf
jnp
or
dec
xchg
sti
xor
and
cmpsl
fs
repz
sub
push
mov
pop
inc
pop
mov
push
mov
adc
lret
loop
mov
scas
test
outsb
fst
pop
into
adc
or
jbe
or
pusha
icebp
adc
gs
ret
mov
fsubrl
bnd
dec
cmpl
mov
ljmp
sbb
clc
cwtl
testl
sub
das
ja
ret
inc
jp
sbb
xchg
adc
jg
cltd
pushf
pop
addr16
xor
out
dec
pop
inc
or
cld
popa
daa
push
jo
push
popa
cmpb
mov
les
outsl
cmpsl
hlt
cmp
rcr
xor
xchg
popf
incb
fsubl
ss
sbb
cmp
add
imul
jmp
inc
mov
cmp
fwait
pop
dec
sub
xor
mov
or
inc
jg
in
out
adc
jmp
xchg
jb
pushl
add
add
sbb
aas
inc
and
sbb
mov
or
dec
insl
and
data16
cmp
push
adc
test
stos
scas
aas
pop
rorl
cmp
stc
cmp
xchg
fisubl
mov
scas
xchg
inc
test
ds
push
adc
cmpsl
in
xor
cs
popa
std
jle
movsb
loop
push
sub
filds
sbb
or
push
inc
sbb
mov
movb
lods
jmp
xlat
push
pop
int
out
jle
and
or
shlb
sbb
and
push
loope
cmc
push
outsl
rorb
sub
xchg
pop
cltd
push
hlt
test
mull
dec
inc
outsb
mov
or
insl
sub
push
orl
shl
xor
adc
jp
hlt
test
movsl
add
aas
xchg
inc
fwait
mov
outsb
and
mov
sbb
cmp
sub
lods
and
jbe
mov
ss
xor
mov
loopne
sbbb
xor
push
lret
test
pusha
inc
jns
adc
pop
cmpsl
and
fadd
push
cmp
dec
adc
js
out
movsl
cmpsl
sbb
dec
xchg
sbb
ja
decl
scas
ret
xchg
sub
add
push
pop
xor
sbb
xchg
lea
lret
xchg
mov
sub
mov
adc
mov
add
jbe
and
rcr
sti
jb
adc
adcl
ljmp
inc
cmp
mov
and
inc
mov
adc
pop
dec
sbb
aad
add
push
inc
cli
les
pop
mov
cli
lea
fsubrs
lret
pop
imul
lods
jns
cmpsb
sbb
add
call
das
popa
mov
jno
cmp
shr
mov
push
fisubl
mov
push
into
out
test
mov
sbb
and
push
and
jle
mov
cmp
jl
lods
xchg
mov
ljmp
sub
sbb
outsb
jp
mov
in
incl
js
rol
sbb
bound
inc
jecxz
les
jne
pop
stos
push
lcall
dec
sub
scas
hlt
and
xor
lods
mov
or
ret
dec
or
cmp
sbb
leave
pop
das
faddl
xor
stc
pop
add
out
in
cmp
in
aaa
fs
out
icebp
jb
shlb
into
push
push
je
test
test
cmp
sub
and
cmp
lret
add
push
out
scas
push
sub
pop
push
or
nop
aaa
pop
push
in
sub
xchg
dec
in
push
out
scas
push
pop
adcb
out
jmp
add
pop
sub
inc
add
das
and
test
inc
fistpll
inc
mov
cmp
pusha
pop
xchg
xchg
jne
test
push
push
xchg
add
push
push
pop
jb
xor
insb
or
or
out
mov
adc
int3
sbb
pop
out
pushf
imul
aad
shl
sub
mov
test
xchg
jmp
jecxz
and
jge
and
adc
not
push
xchg
or
push
or
cmp
cmc
xchg
lahf
sarl
movsb
pop
dec
xlat
inc
add
inc
mov
xchg
push
rorl
aas
pop
lock
sub
in
lea
jp
jnp
jnp
je
adc
sub
sahf
test
test
iret
jge
push
rcrb
xchg
lea
push
stos
mov
mov
inc
mov
jae
and
add
push
pop
subl
xchg
data16
fnstcw
sub
lcall
add
pop
fmul
lods
mov
push
sahf
xchg
jo
push
mov
pop
in
or
add
sub
into
adc
inc
cmp
imul
sbb
jle
sti
mov
sub
sbb
add
lret
pop
pop
sbb
stos
mov
nop
or
push
fiadds
repz
jecxz
jmp
insb
das
dec
lret
fisubrl
cmp
dec
jecxz
sub
jb
push
xor
mov
xchg
imulb
xchg
mov
cs
jb
xor
rsm
sub
cmp
mov
jae
push
nop
sbbl
fdivrs
inc
dec
mov
pushf
movsb
js
fcmovne
mov
lret
push
mov
sbbl
xchg
loopne
sahf
cld
and
push
push
in
out
jns
mov
jp
add
jle
cmp
les
rorb
lea
adc
loopne
int3
push
int
negb
ficoms
or
dec
mov
test
loop
jmp
mov
mov
bound
fchs
es
mov
inc
into
sar
dec
fwait
stos
scas
aad
scas
mov
cld
roll
dec
jecxz
jo
mov
adc
mov
add
inc
xor
jge
push
scas
add
rclb
mov
mov
nop
ret
add
add
push
push
lea
push
out
pushf
in
adc
adc
mov
adc
fwait
bound
movsl
movsl
mov
dec
dec
cmpsb
inc
jae
call
push
and
ja
int3
loope
xchg
insb
repnz
xchg
dec
mov
dec
push
xchg
lret
sbb
xchg
popa
cmp
stos
sbb
fcomps
scas
push
or
adc
xlat
jae
inc
cmp
lock
adc
mov
xchg
or
lods
pop
aam
aas
scas
lods
push
lods
enter
test
ljmp
loopne
cmp
cli
adcl
cmpb
stc
inc
mov
out
sbb
mov
aas
cmpsl
test
sub
sub
cmp
xchg
fwait
xchg
inc
xchg
or
jg
mov
push
fucomip
in
decb
fwait
add
cmpb
std
dec
mov
push
and
dec
mov
cmp
jl
in
pop
lock
and
cmp
icebp
dec
cmp
dec
pusha
movsb
dec
inc
lret
out
inc
imul
jle
dec
lret
xorl
pop
jecxz
pop
fsub
push
in
scas
or
dec
loope
jb
push
mov
ja
sub
xchg
mov
xchg
outsb
rol
mov
in
mov
lret
dec
push
add
jo
fdivl
and
cmp
nop
loop
test
lds
int3
sarb
in
inc
jbe
inc
ja
ret
push
aas
aad
jns
out
sub
inc
cmp
daa
pop
jmp
xlat
inc
mov
jmp
sti
aam
jae
insl
pushf
xor
or
push
and
mov
add
fdivr
adc
popa
pop
and
cmp
aaa
adc
push
movsb
and
popf
jno
xchg
pop
xor
sub
clc
or
lods
sbb
cld
xlat
loope
leave
add
mov
fsub
jmp
int3
jbe
adc
pop
push
inc
lret
mov
dec
outsb
cmp
outsb
fsubs
pusha
test
adc
test
orl
andb
iret
sti
pop
or
test
cmc
cmp
mov
cwtl
dec
push
aas
xor
sbb
mulb
add
dec
das
enter
xor
jmp
mov
jns
and
pop
add
adc
movsl
mov
flds
sbb
mov
adc
xor
popa
dec
testb
sub
mov
cmp
jmp
jns
out
mov
hlt
xlat
movsl
cld
add
cmpsl
fstl
mov
out
leave
dec
or
dec
sbb
nop
and
push
mov
jne
arpl
mov
inc
jo
pop
push
pop
sbb
and
iret
les
push
das
mov
clc
sub
rcr
push
imul
aas
xlat
cld
sub
xor
and
mov
fwait
dec
loopne
sub
ret
jmp
dec
mov
les
jmp
dec
mov
repnz
pushf
mov
andl
xchg
mov
call
add
into
sbbb
cmpsl
inc
and
orb
sti
fs
popa
je
fisubl
daa
ss
cwtl
sub
jbe
jl
adc
push
adcb
lds
pop
dec
cmp
jmp
cld
mov
sub
cmp
xchg
popf
in
insb
sub
xchg
rorb
and
jg
jae
pop
fimull
ljmp
aad
mov
roll
sbb
pushf
jmp
clc
rorl
mov
das
add
lret
jmp
xlat
mov
cmpsl
loopne
inc
xlat
pop
leave
dec
dec
cmc
aam
pop
int
adc
cmpsl
leave
aaa
add
insl
std
clc
adc
repnz
shll
jle
fistl
test
jns
fwait
jnp
sbb
fisubl
pop
pop
jp
and
dec
icebp
mov
pusha
mov
mov
sub
or
movsb
jp
clc
push
movups
mov
loopne
call
popf
sysret
enter
and
jl
xchg
das
loope
mov
fidivs
jnp
lds
imul
mov
inc
cmp
sub
mov
push
push
push
insb
mov
daa
lahf
clc
push
dec
cmp
lcall
repz
inc
inc
lcall
lret
adcl
add
movsl
scas
ljmp
and
aaa
sbb
fisubrs
pop
ret
mov
outsb
clc
imulb
nop
mov
sub
in
dec
inc
xchg
dec
lret
jb
pop
cmc
sbb
test
xchg
and
mov
cld
lahf
pushf
jp
shr
fldl
xchg
movsl
pop
mov
insb
rorw
push
repnz
dec
mov
xorb
test
jg
sbb
mov
adc
xchg
sub
pop
ret
lds
ljmp
les
jns
decb
jg
leave
xchg
cli
sbb
ror
mov
and
scas
mov
leave
pop
aam
loop
out
call
out
sub
xor
add
pmaddwd
cmp
in
mov
xchg
lea
out
push
in
xor
add
mov
ljmp
fstpl
push
pop
cmp
or
shrl
out
xlat
repz
jmp
out
jbe
xchg
fcomps
jge
or
xchg
cwtl
insl
sbb
ljmp
jns
jmp
cmp
sbbl
mov
mov
mov
mov
out
adc
addb
jg
fisttps
scas
cmp
ret
lods
or
je
ds
mov
repnz
aam
inc
mov
sbb
fld
in
lcall
inc
stc
loop
pop
push
xchg
popa
inc
mov
cmc
dec
xor
pop
sub
pop
int
rcrb
ret
xchg
ja
mov
ss
mov
jne
cmp
cmp
pushf
dec
jo
cltd
adc
jg
pop
sbb
mov
xchg
push
in
inc
jnp
or
data16
cmpsl
js
sub
xor
fiadds
enter
push
mov
xor
jne
jecxz
and
dec
xor
mov
mov
enter
add
in
pop
push
inc
push
mov
jnp
adc
xor
lea
repz
adc
shlb
lock
test
mov
jbe
and
pop
and
inc
mov
adc
mov
push
push
mov
push
cmc
push
jg
pop
adc
xor
addr16
int
lret
sub
sbb
xor
test
mov
addb
push
iret
sahf
push
icebp
and
jbe
mov
cwtl
mov
divb
clc
xchg
insl
scas
cmp
sbbb
fs
shll
jp
repnz
cmp
pop
stc
dec
shll
mov
fadd
and
mov
shl
fcomp
call
adc
sub
sub
fwait
shlb
jno
cmpsl
xchg
sarb
cmpl
dec
inc
jge
and
sub
pusha
mov
xlat
jb
pushf
xlat
lcall
out
xchg
inc
push
test
dec
popl
ss
push
stos
imul
addl
inc
faddp
jo
cld
out
xchg
sbb
push
pop
in
in
neg
movsb
stos
xor
inc
mov
icebp
xbegin
sbb
adc
xchg
sbbl
jmp
adc
loopne,pt
out
xor
mov
aaa
gs
lods
fmull
and
std
ret
adc
xor
cmpsl
xchg
sbb
or
clc
imul
jo
dec
aaa
jbe
xchg
into
mov
adc
fcoms
test
pop
hlt
lea
pop
ret
jae
mov
js
shr
add
cwtl
mov
cmp
ret
jmp
jl
pusha
sub
xchg
dec
mov
stc
lock
mov
cmp
bound
pusha
mov
les
push
add
ficoms
sbb
mov
popf
into
adc
and
pop
mov
div
inc
aam
scas
inc
mov
mov
add
iret
fcmovnu
shlb
sarb
fsubrs
add
cmp
iret
sub
xor
adc
icebp
xor
and
shlb
dec
pop
es
sub
gs
in
imul
and
inc
jne
insb
dec
mov
rorl
jmp
inc
cmp
add
ficompl
sbb
and
xor
leave
pop
aaa
ds
or
test
mov
out
lcall
aaa
cmp
mov
mov
dec
dec
out
mov
or
adc
jbe
pushf
mov
and
dec
dec
mov
sar
jl
add
repz
jo
std
les
xor
pop
xor
mov
xchg
or
flds
jae
out
icebp
jo
cli
jno
xchg
push
add
mov
sub
and
xchg
stc
scas
xchg
jmp
lds
cmpsb
sti
xchg
nop
lods
adc
fwait
jnp
nop
pushf
lods
dec
dec
pop
aam
or
dec
loope
pop
lods
dec
jg
mov
inc
lahf
adc
fcompl
dec
testl
xchg
in
cli
stc
jb
sub
cmp
test
sub
mov
push
out
loopne
jno
jg
or
cwtl
xor
lahf
nop
pusha
repnz
sar
mov
inc
mov
lret
dec
flds
mov
dec
pop
je
push
mov
lret
or
pop
cli
gs
sub
xor
loopne
mov
jmp
js
mov
lahf
mov
addl
xchg
xchg
xor
inc
pop
out
stos
xor
inc
bnd
add
mov
xor
mov
push
hlt
in
ljmp
enter
fsubs
cmpsb
xor
or
fistpl
inc
in
mov
pop
shll
or
movsb
insl
aaa
fdivp
test
mov
aam
imul
mov
adc
cmpsl
inc
iret
xor
push
mov
mov
scas
scas
sub
jae
into
or
push
adc
jne
pop
mov
and
mov
sub
call
lret
fidivl
das
out
pop
pusha
and
int3
adc
mov
xchg
sbb
xor
ljmp
out
fs
lcall
inc
adc
mov
or
into
xor
fcoms
sub
push
xor
cld
in
fstl
cmp
jae
xchg
inc
sahf
inc
mov
leave
mov
int
lds
mov
xlat
lret
pop
out
shll
lock
add
xchg
mov
inc
iret
lret
addl
popf
jg
int
or
imul
lret
adc
dec
xorb
test
jns
cmp
xor
jmp
addr16
call
cmp
mov
data16
fdivrl
das
rolb
add
daa
or
mov
pop
dec
stc
xchg
or
pop
dec
sbb
daa
lea
sub
jl
stc
mov
mov
sarb
cmpsl
mov
jge
xchg
jae
mov
xchg
mov
ljmp
xchg
sub
sub
addr16
out
outsb
idivb
or
hlt
sub
fwait
out
adc
gs
pop
pop
pop
lods
imul
lret
test
in
dec
testb
js
or
data16
sti
mov
inc
out
pop
in
in
test
hlt
cmpsb
leave
movsb
cmp
orl
or
or
push
js
iret
pop
aaa
leave
aas
add
sbb
pop
mov
mov
stos
xor
mov
adcb
mov
das
fimuls
dec
pop
test
jecxz
imul
jle
rcrb
lret
aam
dec
xchg
fistpl
ja
insl
jne
adc
mov
daa
jecxz
rcr
or
sub
and
sub
jo
outsl
lahf
adcb
insl
xchg
sbb
xor
in
out
inc
fdivrl
mov
repz
mov
outsb
cmc
and
pop
insb
call
jge
dec
arpl
sbb
jle
pop
cs
mov
jge
xchg
js
adc
cmc
ljmp
gs
iret
push
and
xor
vmovsd
jg
mov
shrl
xor
cli
sahf
insl
mov
sub
testb
or
cli
imul
sti
push
sub
dec
jl
out
add
dec
rcrb
and
or
popf
bound
and
loope
mov
inc
mov
loope
dec
cs
lds
int
add
sbb
mov
and
rorb
sub
in
xchg
cmpsl
les
pop
mov
jl
in
lcall
cmc
test
dec
sbb
and
add
outsl
shrb
inc
mov
mov
jns
mov
fisubrs
enter
cmpsb
dec
jns
and
test
fs
ljmp
sti
daa
je
or
ss
popa
cwtl
push
push
xor
je
stos
into
and
pop
subl
sbbb
pop
mov
and
outsl
and
repnz
insb
mov
add
sbb
mov
fwait
mov
into
ja
int
les
cmc
ficomps
and
push
xlat
adc
fildl
mov
and
mov
les
psrad
push
xor
ljmp
clc
or
subb
call
xchg
mov
mov
aad
lcall
fisttps
jle
movsl
mulb
dec
dec
mov
testl
mov
cmp
mov
negb
push
mov
or
jnp
outsb
push
clc
outsb
dec
mov
fimuls
push
insl
subl
loopne
lods
cmp
addr16
in
inc
pop
std
jge
lods
testl
data16
add
or
std
or
mov
inc
push
sub
fistpl
or
cli
ds
imul
jmp
and
xor
jmp
insl
dec
popf
push
ja
mov
pop
jmp
mov
out
outsb
call
je
pop
jle
jns
xchg
shlb
fdivrl
xchg
fsubs
fisttps
test
mov
dec
cs
loopne
push
or
xchg
stos
outsl
ffreep
push
scas
inc
in
or
leave
xchg
mov
movsb
jae
mov
mov
aam
adc
incl
mov
sbb
sbb
pop
xchg
push
andl
lahf
sub
add
push
inc
cmpsl
fsubrl
lods
pusha
stos
inc
rcr
mov
data16
in
rcrl
pushf
test
pop
jge
mov
call
jne
movsl
xor
int
jb
jge
fwait
dec
call
or
pusha
out
sub
mov
in
and
mov
sbb
sbb
or
xchg
stc
xchg
jp
add
sbbl
icebp
mov
pop
or
pop
into
mov
jae
and
fsubrl
cmp
leave
fdivrl
push
test
mov
push
cmp
imul
divl
lds
xchg
xchg
dec
xor
sbb
pop
gs
inc
insl
inc
mov
bnd
inc
xchg
gs
adc
push
out
jbe
and
xchg
dec
adcl
out
lods
add
sub
jmp
adc
dec
pop
popa
cltd
cmc
leave
int3
xor
call
mov
fs
stos
inc
sbb
inc
xchg
arpl
push
jle
ja
leave
testb
sbb
out
negl
lock
xchg
out
jmp
ret
stc
cmp
or
push
sti
mov
test
pop
push
sub
inc
arpl
lock
divl
stos
int3
jo
in
dec
cmp
stos
sbb
nop
and
dec
jge
push
pop
aam
jb
jae
pop
into
cmp
jp
pop
or
push
pop
jo
jo
xor
mov
mov
push
shll
sbb
dec
mov
jecxz
jae
and
ss
orb
filds
mov
setne
or
jecxz
and
cmp
in
mov
sarb
sub
mov
jl
aas
mov
xor
shlb
js
cmp
sbbl
fcmovnb
sahf
and
add
xorl
cld
gs
out
xchg
mov
jno
or
jnp
dec
mov
sbb
add
fsts
jo
pop
jns
inc
in
sub
cwtl
cmpsb
jmp
dec
pop
jge
mov
pop
repz
cmp
fs
jnp
mov
outsb
mov
imul
out
popa
aas
xchg
insb
fdivr
repnz
jnp
aad
lahf
movl
add
push
push
lock
and
mov
jno
out
push
jg
pop
and
cmp
pop
inc
jmp
jp
fadds
pop
jg
inc
lahf
dec
mov
push
inc
push
cmpsl
fs
pop
in
movsb
sbb
cs
fnstenv
jg
dec
jmp
icebp
repnz
sbb
loop
loopne
dec
mov
das
adc
lcall
faddp
popa
mov
cli
outsb
les
ja
sub
popl
mov
nop
and
loopne
add
add
addr16
lods
call
sbb
jl
call
sbb
push
push
and
or
pop
jne
aas
insb
inc
stos
mov
cwtl
inc
ret
cmp
jb
sbbb
push
inc
mov
psubusb
mov
ficompl
in
je
dec
rcr
arpl
xor
xor
adc
jo
fadd
stos
cltd
inc
jmp
mov
in
movsl
out
xlat
cmp
push
inc
push
push
call
cltd
adc
movswl
inc
ret
outsl
scas
ret
mov
pusha
into
xchg
aam
jnp
dec
iret
xlat
jl
imul
jne
pop
enter
jl
cwtl
sub
xchg
sub
sarb
in
cwtl
cmp
out
subb
mov
flds
lods
outsl
mov
shrl
adc
andl
and
inc
mov
aam
and
es
and
xchg
nopl
inc
jmp
dec
outsl
jge
sbb
cmp
int
pop
push
mov
cmc
dec
and
hlt
ret
lods
dec
testb
lahf
cwtl
mov
pop
subb
aas
cli
les
mov
adc
lods
popa
jnp
rcr
pop
int
and
jmp
pop
icebp
xchg
aam
push
pushf
push
int3
add
push
mov
stos
pop
fiaddl
imul
sub
add
adc
jnp
fisubs
cmp
loope
adcl
movsl
rcrl
cld
inc
cmp
and
and
fidivrl
pop
mov
xchg
in
outsl
pop
mov
test
inc
scas
orl
lret
test
test
mov
sub
aam
and
mov
jne
and
jno
loopne
pop
mov
pop
cmp
push
cmpsl
or
jnp
jae
std
ss
adc
je
and
leave
lods
cmp
jb
cmp
inc
push
jnp
cld
mov
js
adc
int
xor
shrl
jae
out
jnp
push
pop
mov
popa
es
in
out
pop
in
std
jp
mov
pop
pop
rorb
repnz
mov
scas
daa
or
roll
stos
imul
mov
test
sbb
fadds
push
shll
leave
enter
jns
rolb
adc
lods
adc
popa
mov
roll
mov
push
sbb
pop
push
cmp
push
cwtl
inc
fists
and
sub
jo
ljmp
stos
push
repnz
dec
gs
inc
das
cwtl
push
js
lods
mov
mov
pusha
or
leave
xchg
pop
xchg
sbb
dec
dec
mov
ret
push
dec
push
lret
pop
insb
test
sub
orb
jae
cmp
mov
push
leave
in
sbb
in
rol
and
inc
ljmp
ret
add
cld
mov
xchg
leave
xor
sarb
add
subb
inc
cmp
pop
jne
xor
adc
adc
jp
mov
mov
inc
mov
xor
lds
push
scas
add
arpl
pop
add
addr16
push
call
imul
negl
ja
jmp
mov
jnp
out
aam
xchg
ss
imul
lret
jg
jb
fs
leave
push
stos
imul
arpl
mov
dec
out
cmpsl
je
push
mov
leave
out
pop
ret
push
jl
cmc
imul
add
xor
lods
pop
rcrl
je
mov
mov
jmp
sub
jne
or
lret
cwtl
iret
pushf
fldt
adc
push
or
cmpsl
ss
or
sbb
dec
mov
fcomp
cmp
adc
shll
pop
ss
and
xchg
cmp
rsm
add
mov
es
pop
int3
jne
cli
and
andl
jno
sbb
jecxz
or
cmp
out
or
sub
adc
cmpsb
jle
dec
jg
pushf
cmp
sbb
sub
add
test
dec
pop
popa
jg
pop
xchg
fcmovb
fbld
push
sbb
in
cmp
popf
vunpcklps
test
cmp
lea
aas
inc
js
outsb
add
movlhps
repnz
sbb
fcmovnb
std
xchg
in
xchg
push
cli
cmp
push
adc
ja
fmull
mov
and
add
dec
cltd
dec
int
data16
inc
xor
dec
dec
xchg
dec
sbb
adc
inc
sub
test
jmp
pop
sti
int
inc
pop
cmp
rol
mov
sub
dec
jge
mov
je
lods
dec
mov
jle
pop
inc
aas
xchg
pop
push
flds
test
leave
das
mov
mov
mov
and
nop
arpl
stos
lret
sbb
repz
daa
rcrl
xor
adc
gs
push
xchg
int
mov
dec
nop
mov
xorl
jle
rorb
mov
adc
jbe
test
js
xor
jns
mov
popf
dec
dec
sub
xchg
testl
push
pop
and
icebp
mov
inc
fisttpll
push
scas
into
je
add
hlt
sar
mov
cmp
adc
push
pushf
aam
out
fsin
mov
daa
dec
cmp
push
das
jmp
loop
or
loope
push
shr
es
out
push
fnstcw
mov
xchg
fisttpll
lret
jnp
pop
xchg
clc
nop
stc
dec
push
cld
pushf
xor
int3
in
cmpsl
sub
mov
add
sti
iret
adc
mov
sbb
mov
fsubrs
xchg
push
or
jmp
adc
in
push
push
scas
f2xm1
cmpsb
inc
xchg
push
sub
ret
les
popa
call
inc
xchg
adc
mov
or
shrl
daa
lods
rcrb
popa
cmp
loop
dec
fimuls
cwtl
addr16
xorl
pop
aaa
push
in
xor
and
fstpt
mov
add
jg
popf
cmp
inc
movsb
mov
stc
mov
ds
pop
mov
xchg
test
xorl
mov
mov
pop
mov
and
adc
lds
shll
sbb
bound
gs
subl
pop
repz
orl
push
inc
mov
and
cmp
bound
cmp
xchg
arpl
aas
xchg
mov
sub
mov
notb
cmp
rorl
jg
push
popa
arpl
add
arpl
fwait
cwtl
mov
outsb
mov
push
push
loopne
sbb
sarl
cmp
mov
cmp
mov
fmulp
cmp
adc
imul
es
and
jae
add
mov
daa
mov
mov
inc
pusha
call
push
insl
mov
cmp
fstps
mov
cld
in
dec
mov
lea
pop
fbld
cmp
pop
lret
rcll
pop
push
int3
pop
dec
cs
cmp
cmpsb
movsl
ret
xor
testl
cmp
and
jno
or
imull
ljmp
lret
mov
add
or
int3
or
out
xchg
jg
jle
mov
pop
into
jecxz
fisttpll
mov
or
adc
jl
inc
leave
insb
bound
lods
dec
jnp
push
insl
lret
or
inc
negl
cltd
inc
add
gs
in
inc
add
push
cmp
sub
pop
popf
sti
in
dec
fs
jmp
sbb
inc
pop
call
sbb
jp
mov
mov
scas
mov
insb
test
xlat
addb
cmp
in
add
pop
push
sbb
dec
shrb
adc
das
jmp
jmp
out
push
pop
ljmp
xor
cltd
push
in
ds
in
xchg
inc
mul
cmp
mov
dec
sub
in
or
sub
push
mov
and
addr16
repnz
xchg
lahf
add
pop
jno
jmp
sbb
mov
aad
cmpsl
je
dec
push
push
shl
dec
mov
jg
xchg
lret
dec
insl
mov
sbb
hlt
imul
adc
dec
pop
faddp
fmul
into
lahf
xchg
incl
in
inc
das
mov
ret
cli
cmovae
mov
outsb
scas
lret
test
jne
repnz
out
cmp
inc
jae
pop
aaa
loop
ljmp
sub
pop
into
loopne
or
imul
movsl
xchg
fcom
jno
popa
add
jmp
in
push
mov
push
stc
fucomip
mov
or
or
mov
jmp
inc
es
sbb
sub
lds
daa
and
xor
inc
jnp
xchg
add
sbb
lea
int
and
fwait
test
cmp
jo
jbe
xor
movsl
mulb
movsb
xor
mov
mov
sarb
sub
ficoms
jmp
mov
movsl
mov
inc
shll
pop
lods
mov
xor
xchg
jbe
pop
push
flds
orl
and
scas
dec
push
jo
and
iret
xchg
sbb
sub
sub
mov
xlat
fimuls
aam
jb
mov
jno
cmp
xor
xchg
push
mov
jns
and
lods
pop
mov
dec
cltd
jg
mov
cmp
rorb
fcomps
pushf
mov
and
addl
das
mov
movsb
pushf
sub
outsb
inc
test
pop
outsl
in
nop
xchg
xchg
push
std
dec
cmc
les
jns
out
jno
mov
std
or
xlat
pop
and
inc
in
incl
push
sbb
lds
out
pushf
in
sbb
imul
add
sbb
fcompl
push
mov
mov
or
movsb
aad
add
stos
arpl
nop
imull
add
adc
mov
mov
or
lods
lcall
push
data16
push
mov
ljmp
mov
out
push
lds
cmp
sub
pushl
inc
sub
rcrl
inc
mov
pop
mov
add
movlps
repz
mov
popa
pop
xor
adc
mov
jns
bound
divb
leave
cmpsl
cld
add
bound
fldl
mov
and
das
cmp
adc
push
add
jbe
fwait
dec
sarl
fdivr
icebp
push
cli
lea
mov
sub
enter
mov
mov
lret
jmp
popa
dec
dec
mov
ja
add
mov
jecxz
in
shlb
sbb
lods
xor
and
dec
adc
sbb
dec
xchg
mov
pop
in
adc
pop
mov
jmp
mov
das
int
popa
jge
cmc
shll
sub
roll
inc
out
jb
jno
outsb
leave
xor
cmpsb
and
dec
mov
push
popf
cmc
push
xor
xchg
pop
pop
cmp
sub
jge
jg
inc
xor
mov
aam
xchg
adc
addb
cmp
jnp
rcrb
and
insl
aas
fldenv
pop
cmp
lcall
sbb
out
or
push
push
loop
mov
add
pop
inc
xchg
jle
xchg
and
sbb
adc
ret
testb
ret
add
filds
in
adc
dec
add
out
js
jge
rorl
imul
mov
inc
inc
adc
lahf
punpckhwd
add
aas
mov
push
adc
addr16
xor
aas
xchg
dec
bnd
cmc
add
repz
sub
and
cmp
push
pop
arpl
sbb
in
pop
out
cmp
inc
push
jae
xor
push
adc
mov
jmp
ss
lcall
push
roll
fwait
stc
sbb
add
fisubl
loope
mov
xor
nop
lret
mov
and
or
mov
stc
push
pop
int
push
pop
xor
inc
dec
xorb
mov
fistpl
or
adcl
pop
test
ret
dec
cmc
lods
xlat
xchg
sub
ja
outsb
test
add
cmp
or
imul
dec
cmp
cltd
dec
xchg
sti
xchg
sarb
adc
jbe
xor
lcall
dec
loope
cmp
sbb
fs
sub
loope
clc
outsl
or
mov
insb
cmp
inc
add
push
mov
testb
pop
jns
jle
lods
lods
mov
jae
sub
sub
adc
and
dec
loopne
inc
cld
sub
add
adc
pop
fisttps
ljmp
cmp
or
repnz
insl
dec
scas
push
jns
jns
or
shrb
gs
fisttpl
subl
iret
repnz
fs
clc
into
xor
push
pushf
jbe
outsb
adc
je
xchg
negb
or
xor
fsubs
dec
mov
lret
inc
jae
incl
ja
mov
sbb
aaa
inc
imul
fstpl
push
and
out
mov
sub
loop
stos
push
mov
pushf
jle
sub
scas
dec
add
and
iret
pop
insl
sbb
in
imul
out
sub
scas
sarb
mov
pop
jmp
xor
xchg
in
or
fisttpl
add
je
dec
mov
repz
push
xchg
lcall
lock
xor
push
mov
shrb
xchg
xchg
mov
insl
mov
into
lea
mov
test
je
xchg
push
lret
jl
and
dec
xchg
dec
mov
push
dec
inc
pop
iret
in
int
popf
dec
pop
lcall
dec
pop
cmp
dec
cmp
mov
aaa
pop
pop
out
cmpb
adc
sub
xor
out
add
stos
rorl
sahf
dec
mov
ret
inc
adc
push
ljmp
loope
mov
cmp
stos
adc
arpl
xchg
rcrb
out
cmp
inc
cmpsb
sub
mov
sub
mull
pop
sahf
xor
and
pop
and
jge
mov
fstpt
outsl
mov
out
in
xchg
ljmp
lock
pop
mov
cmp
cld
addr16
iret
dec
mov
adc
dec
repz
xlat
into
lods
arpl
mov
data16
pop
sbb
add
push
pop
add
jb
sbb
loopne
adc
sbb
mov
xor
repnz
rsqrtps
push
pop
and
sub
fcomps
stos
xchg
mov
and
in
fists
push
jmp
cmpsl
cltd
push
xor
sbb
xchg
lock
call
movsl
dec
fcoms
lahf
pop
jo
cmp
outsl
es
xor
xor
popl
cmp
xor
cmp
and
incb
sbb
sbb
ss
out
xchg
lea
xchg
test
cli
jg
jmp
push
fildl
jns
cmp
lahf
push
into
dec
ret
cmp
jg
shrb
push
xchg
cmp
mov
pop
pop
aam
xchg
popl
or
jnp
repz
xchg
jle
pop
inc
pop
xchg
and
and
sub
xchg
and
adc
loope
cmp
push
add
lds
lods
lret
aas
sub
in
int
aas
sub
and
lret
xor
xchg
jnp
xchg
out
mull
sub
add
out
arpl
add
sbb
jl
sti
ret
and
aad
lods
mov
aad
dec
jne
cld
loope
xchg
mov
fists
fisubrl
sbb
out
push
adc
int3
outsl
cmp
into
bound
sbb
or
es
sub
sbb
cmpsb
jle
bswap
jb
xor
test
adc
xor
jae
cmp
js
jne
xchg
mov
ss
mov
adc
add
mov
cmpsl
adc
and
outsb
roll
int
xchg
gs
inc
mov
push
out
cmpsb
mov
into
mov
mov
jns
cmp
stos
jl
cmp
pop
test
mov
stos
xor
dec
aad
in
dec
lcall
das
imul
rolb
subl
cmc
jecxz
lahf
mov
fcomps
into
lea
ss
dec
cwtl
xchg
push
xor
push
int
in
xor
jb
cmpsl
lock
das
dec
jmp
outsb
mov
divl
xchg
std
das
andb
push
nop
inc
test
dec
sti
pushf
sahf
repnz
gs
call
xchg
sub
and
add
les
mov
mov
fsts
push
mov
add
xchg
jnp
rcrl
push
adc
popa
pop
cmp
inc
cwtl
cmp
pop
out
adc
test
pop
jecxz
cwtl
cmp
stos
mov
mov
and
xchg
sbb
mov
lods
ret
mov
aas
push
mov
add
inc
aam
adc
push
arpl
cmc
jg
adc
outsl
mov
mov
xchg
out
mov
call
pushl
pushf
flds
inc
pop
inc
adc
sbbb
pop
pop
cmp
or
push
data16
cli
out
cli
stc
orl
jb
je
push
jnp
std
xchg
mov
icebp
ret
sbb
shlb
sbb
push
cmp
gs
hlt
and
inc
insb
cmp
jae
in
iret
ret
xor
mov
aad
xor
push
pop
testb
adc
lret
dec
out
daa
aam
pop
jp
mov
enter
scas
sub
and
pushf
cmp
sub
push
loope
mov
mov
ja
push
xchg
xchg
enter
mov
push
dec
push
push
sahf
mov
rcr
pop
dec
pop
xchg
adcb
jp
enter
or
shll
pop
js
mov
adc
cmc
xchg
divb
and
je
daa
fistl
fisubrs
ss
imul
mov
out
test
pop
cmpsb
push
xchg
hlt
cs
or
or
fiaddl
sti
hlt
scas
mov
stos
test
out
pop
aad
push
rcr
adc
adc
inc
orl
xchg
loope
mov
popa
or
enter
mov
xchg
inc
fisttpll
cmp
lret
lea
orl
sbb
addr16
sbb
and
movsb
or
dec
rcrl
movsl
cmp
insb
push
push
std
lcall
imul
jns
and
leave
inc
insl
mov
in
xor
mov
inc
stc
enter
imul
cmc
bnd
pop
cld
stos
adc
das
test
jle
dec
lea
jecxz
push
push
sub
in
mov
cmp
clc
mov
mov
incl
je
aam
call
mov
loope
cltd
push
in
cmpl
pop
lret
adc
out
jmp
ljmp
fidivrs
adc
push
outsb
xor
add
push
out
lret
sub
add
loop
outsl
push
jmp
dec
mov
cmp
cmp
inc
mov
pop
shl
adc
adc
shrb
adc
test
icebp
fsubr
iret
sbb
mov
lret
dec
add
mov
in
sub
push
pop
in
shrl
push
insb
fs
jle
decl
stc
loop
add
adc
js
daa
outsb
ja
lret
das
mov
jne
pop
mov
aam
mov
xor
lcall
insb
push
mov
daa
adc
and
popa
ja
cmp
jb
cwtl
mov
pop
addb
out
in
sbb
repnz
es
mov
adc
imul
adc
mov
or
cmpsl
mov
adc
pop
rorl
and
lock
pop
and
mov
inc
ret
stos
xor
sbb
mov
aas
mov
repnz
and
xchg
inc
scas
pop
pop
mov
adc
mov
and
push
cmp
cmp
inc
insb
pop
test
adc
nop
pop
pop
inc
mov
aaa
mov
xchg
enter
int
test
std
mov
sub
or
fs
xchg
divl
ds
push
sub
sub
push
pop
pop
mov
test
xor
cld
cwtl
std
cmp
nop
les
jmp
cmpsb
call
fadds
pop
inc
and
push
aas
outsb
xor
stc
add
in
or
nop
add
out
sbb
xorb
sbb
out
mov
mov
aam
inc
fxch
aaa
test
sub
cmp
jo
sub
addb
dec
adc
bound
out
mov
loop
insb
push
xchg
jmp
mov
js
das
les
push
adc
jnp
cs
ficoml
or
inc
sub
je
test
shr
shrb
stos
adcl
sti
loopne
test
pop
aam
test
loopne
add
xlat
or
mov
jp
sub
out
add
repnz
mov
loope
sbb
mov
or
jno
mov
inc
mov
add
aaa
xor
push
roll
sbb
jge
jne
cmp
mov
mov
cmpb
ret
movsb
lahf
mov
sahf
addl
lock
pusha
jne
sub
cltd
inc
push
mov
out
inc
cmpsl
inc
push
cwtl
fsubrs
cmp
mov
add
cmp
xlat
jl
xchg
ljmp
mov
mov
icebp
adc
sub
inc
mov
in
cmp
xor
push
sub
cmp
fcompl
fidivl
mov
shrb
rcr
mov
test
out
adc
cmp
mov
xchg
mov
fnstsw
cmpsb
mov
sub
jl
addl
in
mov
or
mov
loope
addr16
push
pop
push
push
gs
fsubs
jnp
fcmovb
popa
lcall
icebp
loop
xor
arpl
leave
mov
push
sub
cmp
pop
in
bound
jno
mov
xchg
fnstsw
mov
scas
iret
mov
cmp
imul
add
lds
xlat
outsb
sbb
sub
inc
je
arpl
iret
std
push
xchg
xlat
jbe
loopne
mov
jmp
ret
int
mov
xchg
inc
std
or
jae
xchg
fists
sbb
ret
rcll
jecxz
scas
movsl
fmull
cmp
dec
jge
jmp
aas
ds
lahf
repnz
fidivs
out
pop
dec
inc
or
and
cld
xor
jp
cmpsl
and
jecxz
xor
call
and
sbb
cmpsb
popf
push
push
cwtl
movsl
addr16
sar
mov
jge
pop
xorl
insb
mov
fs
fildll
cmpsb
outsl
sub
push
xchg
cmp
sub
lods
mov
and
mov
popf
mov
jae
mov
cmp
mov
sbb
cmc
push
push
pop
daa
jae
leave
dec
mov
aam
cs
stos
inc
shrb
jg
movsb
aas
fdivrs
imul
inc
push
pop
test
adc
mov
mov
xchg
fwait
int
clc
out
rcrl
mov
cmp
loopne
and
repz
jae
mov
jecxz
mov
fisubs
aam
push
enter
push
xchg
scas
shr
mov
call
inc
dec
cltd
dec
cmpl
jne
sbb
lret
mov
lods
jmp
mov
js
and
iret
imulb
in
or
jp
sub
sub
cmpsl
out
jb
pusha
xchg
lahf
push
adcl
ret
pusha
cs
pop
mov
inc
inc
pop
out
lret
cwtl
shr
clc
cs
push
fcomp
popf
sbb
test
sub
xor
cmp
push
inc
fwait
pop
push
nop
bound
daa
stos
or
mov
loope
adc
inc
js
clc
lods
aaa
cs
out
fwait
dec
popf
aaa
rclb
sti
out
or
mov
mov
mov
addl
push
fstl
hlt
dec
imul
lock
call
das
shrl
idivl
sbb
call
mov
ret
and
inc
out
fwait
add
cmpsl
leave
movsb
es
or
repz
cmpsl
and
loope
pop
jbe
mov
pop
mov
jno
lea
sbb
shlb
lret
sub
mov
ret
mov
cmc
xchg
add
pop
int3
mov
lcall
sub
mov
sub
in
test
imul
stos
not
ljmp
fs
mov
dec
cwtl
pop
mov
mov
ds
mov
scas
xchg
cmp
pusha
push
shlb
push
push
and
in
and
shrl
js
push
jae
xlat
mov
dec
stos
sub
mov
push
sbb
fidivl
xchg
cmp
jnp
orb
sbb
or
inc
xchg
push
xchg
xchg
cmovb
cmp
in
ja
in
aam
lcall
push
mov
xor
xor
mov
test
sub
mov
fmuls
xor
loopne
mov
cmc
adc
push
xlat
pop
test
cmp
cmpsl
mov
sbb
xchg
push
mov
mov
insl
ret
push
mov
das
fidivs
add
pop
lret
mov
dec
sub
es
mov
jge
shr
call
lret
ret
mov
lock
xchg
xor
inc
cmc
ja
fiadds
mov
imul
jl
push
stos
lods
out
xchg
mov
enter
mov
xchg
enter
xor
cld
mov
sahf
cld
cmp
gs
int3
mov
fiadds
jne
ret
sbb
mov
insb
pop
sub
cmp
push
not
mov
mov
dec
mov
sbbb
pop
std
lods
insb
mov
mov
add
xchg
pop
shl
pusha
xchg
adc
adc
push
imulb
lret
scas
add
inc
pop
jmp
repz
inc
and
adc
pop
fimuls
fcom
pop
or
xor
clc
lahf
push
fninit
xchg
adc
pushf
mov
add
adc
lcall
pop
jno
inc
stc
sbb
sub
mov
cmp
aas
sbb
clc
and
xchg
test
fisubs
bnd
pop
jp
rcrb
test
movb
pop
clc
inc
xor
mov
js
das
xchg
popf
repz
push
fildll
xchg
imul
push
add
aad
mov
sbb
pop
jecxz
or
lret
rcll
mov
xchg
ror
aas
cmc
dec
sbb
push
cmp
stos
add
push
dec
notl
add
outsl
cmc
add
in
push
push
cmpsl
jecxz
sub
in
xchg
pop
ret
mov
cmp
mov
outsb
daa
cld
rdpmc
repz
xchg
cmpsl
and
mov
pop
or
or
in
xchg
ds
mov
into
adc
fstpt
fistpll
push
and
out
iret
xor
das
xor
cmpsb
push
xchg
mov
push
and
call
jbe
pop
into
sbb
mov
or
push
jp
mov
xchg
sbb
out
test
iret
jbe
sti
incb
je
and
inc
add
dec
inc
mov
or
mov
mov
jns
push
adc
loop
push
jmp
cmpsl
pushl
xor
mov
out
pushl
push
shlb
pmaddwd
pop
jno
sbb
sbb
add
pushf
test
rorl
int3
rorl
jge
popf
and
leave
in
dec
mov
push
pushf
sahf
stc
and
aas
ljmp
in
cmc
mov
lcall
or
jnp
push
pop
inc
test
ficoms
inc
sbb
mov
cmp
and
daa
adcl
push
js
loopne
into
rclb
insl
iret
lret
jne
stos
inc
push
push
mov
ljmp
iret
rolb
and
sbb
lds
or
movsl
cmp
sbb
dec
sbb
xor
rol
mov
cmp
daa
jno
mov
push
fdivrs
pop
pop
xchg
aad
pop
test
test
xor
mov
inc
imul
rcll
cwtl
adc
cmp
adc
imul
jbe
pop
push
mov
mov
xchg
push
int3
xchg
out
in
lds
jne
jecxz
stc
sbb
in
mov
jbe
mov
lods
bound
es
pop
loopne
shll
scas
xchg
xchg
xor
or
aam
loop
pop
scas
shrl
lahf
lods
xor
push
or
push
mov
sarb
mov
cmpsb
xor
xor
fisubrs
sti
mov
lods
into
xchg
lods
test
lods
fucomp
rcll
cmpsl
mov
pop
sbb
cmp
andb
mov
pop
cmp
ds
sbb
das
cmp
test
mov
outsl
icebp
repnz
add
adc
lahf
xchg
cltd
adc
outsb
popa
popa
cmpb
sbb
add
mov
les
xchg
mov
shr
shlb
test
xor
into
lahf
ss
and
fs
sbb
sbb
pop
mov
and
out
sbb
jbe
cmp
cmp
adc
subl
pop
movsb
sbb
xchg
inc
adc
adc
pop
and
dec
jae
imul
jl
mov
push
jecxz
test
nop
xor
mov
pushf
inc
pop
hlt
mov
outsl
test
xchg
repnz
inc
dec
fs
repnz
adc
push
fbstp
ss
insl
sub
in
add
scas
mov
mov
imul
out
leave
in
adc
jbe
xchg
cmp
and
adc
out
mov
pop
mov
sbb
mov
and
push
push
lahf
pop
mov
ficoms
cli
test
jecxz
push
pop
js
xor
mov
xchg
lret
lahf
cwtl
inc
outsl
test
lods
mov
scas
in
mov
or
jge
ljmp
jns
or
cmc
mov
movl
pop
dec
mulb
clc
push
ja
mov
dec
sti
fadd
sbb
shlb
std
negl
cmp
fmuls
lods
dec
mov
mov
pop
xchg
dec
popf
je
fst
pop
mov
jmp
clc
pop
fmuls
inc
pop
xlat
and
pop
add
cmp
cmp
nop
adc
xchg
lret
sub
hlt
ss
sub
pop
push
push
mov
data16
loopne
bnd
mov
cmp
out
cmp
rclb
lcall
dec
jne
cmp
sbb
mov
mov
mov
sbb
fsubr
dec
lret
jb
sbb
lret
hlt
scas
lret
xorb
aas
daa
aam
stc
dec
or
loope
pop
aas
repnz
mov
xchg
aad
jle
mov
lret
inc
sbb
insl
ret
cmpl
lcall
dec
cmp
pop
mov
mov
sub
jp,pt
pop
push
xchg
xchg
rcrl
in
lret
xchg
flds
mov
cmc
nop
inc
xchg
jb
dec
stos
push
or
pop
popa
jo
enter
jno
shl
enter
or
and
cmp
sbb
push
and
imul
fmuls
ss
pop
or
adc
dec
jo
dec
sub
and
je
cld
push
gs
nop
mov
cltd
pop
mov
and
loopne
sub
xchg
loope
and
mov
dec
ret
xor
mov
jae
subb
jle
fnstcw
push
pusha
and
pop
inc
in
and
xorb
lret
xchg
mov
leave
jg
sahf
dec
dec
enter
pop
out
cmc
scas
repnz
into
sahf
mov
loopne
adc
push
dec
pushf
nop
cld
int3
cltd
mov
pop
add
ret
stc
outsl
rorl
and
mov
and
shrl
jb
cs
scas
push
jb
jg
push
adc
fcos
dec
inc
mov
add
xchg
rcll
ret
mov
or
enter
movl
enter
imul
popl
pop
movsb
jbe
fcmove
cli
add
sub
nop
lret
sub
pushf
lods
xchg
sub
jge
icebp
scas
push
icebp
mov
out
push
idivb
sbb
dec
push
pop
ret
cwtl
xor
mov
dec
xor
mov
and
xor
iret
sbb
mov
push
jg
mov
fcomps
inc
xor
and
mov
add
xchg
shlb
dec
sbb
rcrb
ljmp
sbb
aaa
pop
movsb
adc
imul
sbb
cmp
test
pop
movsb
add
mov
jmp
clc
push
sub
add
andl
add
int
jp
xchg
repz
dec
repnz
pop
xchg
aad
ja
je
jo,pt
xor
sub
mov
sub
insb
subb
aaa
xor
or
or
testb
aas
pop
xchg
out
or
mov
leave
rcrb
int
inc
push
testl
xchg
and
xor
mov
pop
imul
pop
jle
push
push
jl
pushl
out
sahf
cmpsl
jae
scas
sbb
jnp
mov
mov
adc
test
jl
sbb
lahf
repnz
aam
dec
xchg
fs
imul
ja
ret
fiadds
xchg
dec
sbb
cmp
adc
pop
cmp
mov
push
and
aas
popa
mov
inc
fwait
mov
push
jg
sub
dec
adc
jl
fimull
jae
ja
mov
push
test
jge
push
in
or
lcall
std
mov
ret
xor
idivl
das
cmp
sbb
adc
xor
psrlq
add
pushf
das
inc
pop
push
xchg
xchg
popf
and
mov
and
inc
nop
xchg
mov
xchg
popf
jecxz
rol
sbb
std
cmp
cmp
mov
dec
xchg
or
icebp
ret
push
mov
xor
daa
lds
out
add
jnp
push
sub
pop
ja
sti
mov
fwait
jae
inc
mov
and
push
enter
sbbl
imul
and
push
and
aad
mov
fsub
sti
sub
imul
dec
pop
add
add
xchg
dec
push
in
xlat
shll
mov
cmp
adc
popf
das
or
push
mov
jl
jmp
in
pop
jo
popa
jle,pt
push
popf
dec
push
mov
roll
mov
mov
mov
jl
xchg
fbld
rcrl
pop
jns
divb
push
lret
and
in
sub
dec
sar
add
jns
xchg
xor
frstpm(287
dec
xchg
inc
or
sub
inc
jbe
cmpsl
insl
pop
popf
sahf
aaa
iret
fwait
and
dec
sbb
sbb
into
xor
dec
jp
push
jl
push
fidivl
adc
loopne
out
les
ljmp
pop
lods
dec
loope
and
sbb
push
mov
mov
test
in
insb
mov
cmpsb
dec
loop
lcall
sub
jp
sub
jns
je
notl
xor
iret
sub
lret
cmp
adc
mov
push
arpl
xlat
jmp
push
aam
push
inc
mov
xchg
push
xchg
pop
cmp
adcl
cs
cmc
out
push
jge
js
data16
negb
dec
testb
icebp
adc
das
dec
jle
jns
les
sahf
scas
test
pop
data16
je
cmp
pusha
outsl
dec
or
aam
in
sbb
scas
testb
xchg
or
rcrl
shll
fisttps
movsl
in
push
in
ret
fldl
sahf
inc
pop
fcomps
xchg
jae
xchg
jmp
movsl
xchg
dec
adcl
push
inc
adc
dec
mov
sbb
jb
xchg
out
mov
dec
out
pop
xorl
xor
push
and
jle
push
or
cmp
xor
repnz
andb
dec
pop
and
bound
push
icebp
xor
out
jb
push
inc
js
jmp
imul
adc
cmp
pop
or
dec
stos
xor
cs
pop
aad
pop
scas
sub
and
jne
repnz
mov
pop
lods
sti
fisttpll
mov
std
dec
add
out
push
push
pop
mov
stos
stc
xchg
xchg
test
scas
adc
inc
mov
jns
rcrl
les
fmuls
xchg
mov
cli
mov
mov
push
cltd
jno
jle
inc
stos
xchg
mov
rorb
repz
out
fiaddl
cwtl
imul
or
cmovae
lods
pop
fs
inc
dec
sar
sbb
sub
pop
scas
mov
stos
scas
dec
or
das
gs
loop
cmpb
out
xor
pop
push
imul
popf
sub
cmc
mov
fdivrl
xchg
mov
jl
mov
mov
jecxz
jo
cwtl
stos
sbb
js
orl
ret
add
and
pop
fiadds
xchg
jp
inc
loop
imul
xchg
adc
dec
and
adc
or
in
das
je
cltd
push
or
pop
sub
adc
add
mov
sub
popa
xor
repz
mov
jl
xchg
mov
enter
jle
jg
insl
dec
push
adc
pop
sbb
ficoms
js
push
ficomps
cmpsl
jo
sahf
out
pop
sub
testb
mov
rol
cmp
xchg
les
mov
pop
push
xchg
adc
xor
adc
inc
inc
roll
mov
or
ss
jle
xchg
arpl
mov
mov
adc
fwait
or
cmpsl
push
xor
stc
xchg
in
ret
enter
pushf
add
mov
mov
push
push
js
std
out
cltd
cwtl
sub
push
cmp
push
sbbb
fwait
mov
push
xchg
bound
sbb
mov
sbb
call
mov
and
adc
jge
divl
dec
mov
dec
mov
lcall
cmp
call
add
sti
sub
pop
push
aas
nop
xor
lahf
pop
cmc
dec
bound
push
or
xlat
pusha
jb
out
jns
in
jecxz
ret
test
pop
mov
dec
sub
xchg
cmc
enter
jge
push
adc
cmp
daa
rolb
pop
pop
cmc
daa
jp
mov
adc
fmull
cmp
push
inc
inc
scas
decb
pop
or
shrb
pop
aad
push
xchg
cmpsb
or
cmpsb
es
test
aas
ret
xchg
mov
cmp
pop
xchg
popl
sbb
jp
addl
mov
cmp
cmp
dec
mov
hlt
je
add
lret
negl
test
stos
or
ret
js
loope
in
hlt
pusha
mov
lahf
test
leave
iret
aam
sahf
xor
push
sbb
lea
sbb
xchg
xlat
lods
sbb
mov
rcr
adc
jbe
sbb
adc
mov
dec
fimuls
push
jne
in
or
mov
imul
ss
icebp
cli
shl
sbb
insl
notb
fcmovne
jae
push
xor
lret
movb
in
lret
pop
imul
add
sarl
rolb
fs
mov
sub
dec
das
lret
arpl
jle
jns
fsubrl
dec
test
fwait
std
rcrb
inc
addr16
dec
mov
xor
ret
cmpsl
push
mov
mov
pop
scas
jbe
lods
push
mov
cld
push
push
stos
clc
mov
aam
aaa
out
add
xor
aaa
lods
mov
pop
subb
int3
pop
nop
jecxz
mov
lcall
mov
mov
and
xchg
adc
or
in
adc
push
and
dec
stc
push
mov
fsubrp
push
mov
mov
push
stos
aaa
jne,pn
lret
loope
nop
or
lea
jecxz
dec
cmpsb
mov
push
mov
divl
cmpsb
test
pop
loopne
push
je
rcrb
push
inc
repnz
das
or
shrb
pop
add
mov
mov
push
stos
sbb
adc
aaa
cwtl
inc
pop
out
jno
push
push
rep
push
enter
fidivl
lea
push
sbbl
push
mov
cwtl
sbb
loop
pop
lock
leave
pop
in
fistl
je
mov
rclb
push
jmp
lods
sbb
imul
popf
sti
jno
mov
shlb
scas
int3
std
lea
iret
leave
mov
ret
scas
rolb
stos
mov
sti
scas
pop
adc
mov
push
adc
jp
js
and
adc
mov
cs
inc
lcall
pushf
mov
sub
pushf
ficomps
push
jle
shl
push
es
lock
sub
cld
xchg
sbb
nop
mov
jo
vpcmpeqd
pop
add
jmp
pop
cs
xor
in
cltd
jns
push
outsl
ror
xchg
mov
jae
filds
popa
inc
insl
jg
call
and
outsl
nop
ret
pop
cmc
dec
and
adc
stos
call
mov
sahf
jno,pn
pop
mov
shrb
push
add
packsswb
and
mov
in
mov
mov
jnp
xchg
mov
mov
cli
jle
inc
fstl
xchg
pop
mulb
adc
movsb
mov
mov
mov
inc
jmp
dec
dec
xor
in
and
das
adc
arpl
loope
xor
inc
scas
icebp
std
lret
jb
test
push
and
mov
cli
fsubrp
cmovb
xchg
cwtl
dec
lret
out
fstl
mov
mov
xor
popf
sbb
mov
outsb
cmpsl
or
mov
sbb
test
js
fildll
push
stos
jmp
mov
pop
jbe
fistpll
jno
add
data16
enter
les
fsubr
push
fucomip
mov
outsb
shrb
push
into
mov
lahf
xchg
xor
and
repnz
pop
push
mov
mov
lahf
pop
mov
sub
fcoms
jle
ret
or
das
ja
jmp
inc
xlat
ficompl
mov
aaa
sub
movsb
lcall
js
pushl
and
sbb
cmp
stos
adcb
mov
popa
jmp
mov
xchg
sub
jg
ljmp
add
xchg
lahf
or
es
mov
filds
clc
fs
and
negl
ret
fsubrl
cmpsl
mov
das
mov
inc
lcall
outsl
mov
xor
sbb
and
mov
mov
ret
xchg
lock
adc
pop
clc
jp
pop
pop
and
sbb
inc
lods
fistps
mov
sub
jns
popa
iret
inc
mov
pushf
movsl
add
lock
sub
lret
int
enter
ss
shlb
pop
mov
push
clc
xchg
dec
inc
or
inc
lcall
pop
push
cmpsb
push
mov
cmp
insl
mov
xchg
push
xchg
mov
mov
inc
xor
adc
sti
test
lret
inc
mov
mov
xchg
leave
std
pop
aaa
cmpsb
sbb
imul
dec
pop
adc
and
pusha
cwtl
dec
xchg
aaa
and
fs
fsubl
dec
dec
mov
hlt
push
push
jno
cmc
pop
sub
sub
or
repnz
outsl
pop
jmp
xchg
cmp
in
pop
lods
lcall
rolb
fcoms
mov
xor
bound
test
push
lea
clc
cltd
ret
push
xor
subb
out
inc
pop
mov
dec
add
adc
testl
fmul
mov
sub
and
cmpsb
outsb
je
jne
sub
sbb
jns
subl
loop
adc
inc
insb
mov
cwtl
mov
or
aad
fisubs
aaa
adcl
mov
cwtl
addr16
sub
clc
push
cmp
pop
out
adc
adc
ret
jge
js
cmp
fdivrl
jb
shlb
call
insb
push
insl
in
add
es
inc
xor
push
lods
pop
xchg
out
mov
add
ljmp
iret
not
jl
add
and
mov
jb
sbb
mull
cmpb
jecxz
mov
dec
hlt
cld
xor
test
clc
mov
hlt
and
imul
mov
dec
cmc
dec
je
jp
xor
cli
lea
sub
add
cmc
ss
into
fiadds
mov
and
mov
mov
sahf
xor
inc
sbb
push
stc
lahf
lret
aas
mov
sub
cmp
adc
jns
push
or
mov
xor
lret
rolb
lods
popa
and
int3
movsl
pop
fidivl
stos
mov
jmp
inc
shlb
fdivrs
test
jno
xchg
ss
iret
stos
push
xor
loop
dec
sub
mov
addr16
addr16
push
int
shll
seta
sbb
pop
sub
pop
xchg
xchg
std
adc
ja
arpl
cld
insb
sahf
scas
cmp
mov
mov
insl
pop
loope
stos
lcall
push
unpcklps
dec
lock
ret
lret
add
xchg
outsb
jl
jns
cmp
loope
and
scas
sub
add
rorl
in
or
xchg
mov
dec
adc
sub
lds
ficoms
xor
jbe
mov
sbb
jo
and
cli
or
mov
int3
inc
shl
sbb
dec
sub
mov
cmp
jmp
shll
fwait
push
int
mov
mov
and
mov
inc
test
mov
cld
ffree
mov
popa
roll
xor
jbe
xor
pushf
pushf
add
jbe
push
mov
sbbl
rorb
out
test
xor
shrb
cmpb
stc
push
scas
push
lcall
lret
stc
fiaddl
jg
push
jle
test
testl
aam
in
lcall
push
test
push
push
xchg
cmp
imul
mov
popa
add
mov
adc
or
adc
xor
jo
jnp
std
test
add
adc
xor
lea
outsl
pop
shl
pop
das
fbld
pop
pushf
rorl
mov
mov
xor
sbb
pop
adc
loop
mov
push
inc
lcall
mov
stos
es
jle
popa
xchg
jne
ds
ljmp
jbe
mov
nop
insb
and
neg
pusha
mov
sbb
mov
fsubl
fcomip
aas
dec
insb
mov
jecxz
xchg
jge
ds
test
pop
movsl
jae
mov
es
lret
mov
jo
test
push
push
cmp
mov
sbb
jns
das
in
sbb
scas
pop
lret
dec
loop
mov
and
sbb
xor
imul
outsl
fcomps
pop
loope
and
lds
imul
mov
leave
inc
popa
cmpsl
add
cld
dec
daa
dec
adc
push
mov
scas
imul
push
sbb
in
imul
shlb
sub
xlat
and
jno
xchg
and
cmpsl
cmp
mov
sub
fadd
out
push
and
in
inc
jnp
inc
push
mov
push
jns
push
jle
in
adc
pop
pop
test
pop
pop
xor
inc
and
pop
stos
mov
lock
mov
and
cs
cmpsb
stc
dec
rcr
int
adc
cmc
xchg
jbe
cltd
in
in
or
in
movsb
es
in
aas
or
mov
out
sbb
xchg
sbb
mov
inc
push
loop
repz
pop
stos
mov
xor
cmp
xchg
xchg
mov
push
ljmp
int3
clc
xor
lret
incl
dec
movl
mov
mov
cld
jmp
enter
fmull
fwait
and
mov
pop
loope
sub
fcmove
push
sarl
pop
es
or
rorb
fistl
add
add
mov
daa
mov
inc
shlb
mov
sbb
pop
pushf
inc
imul
lods
pusha
mov
bnd
jle
inc
aam
scas
lahf
add
mov
lods
out
shrl
push
popf
xchg
fsubrs
jmp
sub
pop
cmp
outsl
push
repnz
mov
xchg
sub
pop
movsl
roll
push
add
fs
xor
add
jne
int3
mov
je
loop
sub
icebp
les
stos
pop
and
lods
enter
cmp
dec
mov
out
nop
in
js
jge
xor
jno
push
mov
dec
add
arpl
push
clc
mov
sub
push
xor
pop
mov
movsb
ds
test
repz
stc
lcall
loop
jo
lret
outsb
or
mov
jae
adc
sub
fsubl
out
xchg
fsubrl
cmc
pop
out
pop
aad
loop
cmc
shlb
lret
mov
adc
add
push
push
rolb
inc
je
mov
shrl
aaa
std
insb
mov
repz
add
dec
sbb
data16
pop
or
jl
and
aas
pop
xchg
fdivrs
or
xor
xor
fisubrl
dec
ja
sahf
pop
jle
mov
nop
or
in
int3
or
lcall
adc
sbb
add
imul
rcrl
test
mov
movsl
ret
std
dec
rcrl
xchg
push
adc
jo
icebp
xchg
pop
les
mov
rorb
adc
jne
pop
lods
in
into
inc
data16
shlb
mov
jo
aam
imul
mov
and
cmpsb
or
out
mov
cmp
clc
xlat
and
mov
xchg
xor
fs
lock
push
xchg
lock
stos
outsl
xchg
push
xchg
shl
pop
jecxz
adc
xchg
xor
push
in
jbe
or
mov
mov
xchg
jo
neg
sbb
add
cwtl
sub
pop
int
mov
faddl
adc
or
mov
xlat
movsb
sbb
push
pop
aam
shr
test
inc
xchg
push
int3
inc
jle
loope
cmp
out
shl
call
mov
nop
mov
or
jmp
cli
aas
push
call
mov
pop
push
cmp
in
and
adc
sub
repnz
std
lret
testl
or
and
xchg
icebp
dec
dec
mov
fisubl
pop
pop
cld
pushf
ja
arpl
je
xor
int3
nop
mov
in
dec
shl
cmpsb
mov
xchg
fucomi
mov
fisttpll
dec
add
sub
rorb
mov
test
push
xor
sub
mov
psrlq
inc
stos
fs
mov
lret
stc
add
out
adc
jo
shlb
cmp
les
pop
ljmp
lods
out
mov
jecxz
xor
mov
rcrl
fiadds
cmpsl
cs
add
ja
out
xchg
and
dec
stos
in
mov
pop
call
xor
orl
mov
fists
fmuls
ret
mov
or
ljmp
jae
mov
sbb
or
imul
inc
cmp
xor
repz
int
daa
jl
adc
cld
and
add
push
push
push
dec
arpl
push
mov
mov
stos
fsubl
movsb
fstp
in
movb
or
popl
rol
into
and
es
mov
subl
into
mov
sub
jmp
iret
mov
dec
cli
fnstenv
loop
stos
fdivr
xchg
adcl
addr16
divb
add
out
sub
popf
cmp
pop
and
jl
ret
icebp
mov
loope
push
push
xchg
push
cli
lods
jb
and
pop
pusha
push
outsb
in
pusha
scas
push
push
inc
cmc
mov
mov
push
jecxz
and
mov
mov
out
arpl
in
lds
xlat
andb
cld
xor
insl
and
fidivrl
ficoml
dec
xchg
out
cs
out
mov
insb
ficomps
cwtl
aam
mov
cmp
mov
fsubrs
pop
mov
mov
fs
dec
rol
push
inc
adc
pop
sub
inc
dec
call
add
pop
mov
sbb
push
inc
aam
inc
mov
shlb
mov
ljmp
push
sub
and
stc
pop
push
insb
ljmp
jae
imul
jle
pushf
insl
pushf
iret
pop
fwait
imul
daa
mov
enter
cmp
ret
mov
mov
mov
mov
and
mov
out
and
push
mov
sub
xchg
jae
adc
dec
sbb
cwtl
divl
adc
sbb
mov
test
xchg
sub
cmpsl
aas
int3
scas
inc
ja
dec
repz
xor
adc
push
cmp
xchg
in
int3
pop
mov
pop
xor
fistps
cmpsb
fidivrl
push
xor
xchg
or
mov
xchg
pop
int
daa
push
les
mov
pop
xchg
mov
hlt
shll
dec
jge
lcall
in
push
shrl
loope
js
inc
xlat
sub
sti
mov
lds
cmpsb
jbe
mov
fstpl
xlat
clc
shrb
stos
lods
add
sbb
or
push
int
sbb
repnz
mov
and
xchg
push
mov
xchg
pop
dec
push
xchg
hlt
outsb
popa
les
rclb
add
in
les
mov
loope
push
xchg
movsb
push
pop
shll
push
jo
sbb
fdivrl
mov
push
mov
jne
les
mov
cmc
mov
xchg
add
inc
mov
adc
push
js
insb
rolb
dec
xchg
xor
lock
xchg
pop
mov
and
xchg
xchg
out
ret
scas
cmc
push
and
push
addr16
mov
xor
mov
in
jle
dec
sbb
dec
pop
push
loope
and
xchg
lods
or
sbbl
xchg
je
xchg
jge
xchg
push
or
stos
mov
pop
andb
hlt
sub
mov
adc
fistl
push
insb
xchg
into
push
clc
and
and
ret
xchg
adc
jp
stc
sbb
fists
mov
mov
mov
jnp
xchg
and
dec
test
push
lcall
push
popa
ja
sbbl
adc
in
cmc
or
shll
lods
and
into
mov
addr16
push
pop
fnstsw
xorb
mov
xchg
dec
push
jne
mov
outsl
stos
cs
pop
pushf
call
or
icebp
lret
push
dec
lret
add
daa
cmpsb
filds
daa
aaa
push
fsts
loop
out
scas
and
shll
lahf
cmp
push
push
jecxz
loopne
ret
fcomps
rorl
jnp
pop
pop
add
cltd
test
mov
or
cld
and
cmp
data16
cmp
cmp
aaa
sub
iret
and
lds
mov
jg
push
lods
jl
into
jnp
sbb
jne
mov
cmp
shlb
movsl
xlat
lret
fwait
sbbb
notb
add
adc
fwait
push
sub
sbb
or
movsb
pop
repz
pop
pop
stos
bound
in
ret
pop
inc
and
ljmp
lret
xor
insl
mov
sarb
pop
sahf
or
pop
daa
push
mov
and
fsub
add
iret
addr16
scas
pusha
jecxz
lcall
mov
inc
and
or
mov
cltd
cld
notb
icebp
jae
push
jg
leave
push
inc
and
mov
mov
mov
lea
mov
pop
cmp
mov
mov
push
pop
in
mov
aam
and
mov
int3
mov
lahf
fs
fmul
imul
pop
fistl
clc
aam
ret
pop
jecxz
int
add
fiaddl
lcall
adc
jns
dec
into
js
add
and
sar
adc
scas
in
xchg
jo
sub
aad
push
shrb
popf
mov
pop
sub
lea
mov
or
mov
jns
inc
or
add
stos
jne
pop
mov
es
cmc
and
ror
rorl
std
jmp
data16
ret
bound
mov
jns
cmp
cmpsl
js
data16
mov
cld
dec
inc
and
cmp
mov
dec
repnz
call
sbbb
mov
push
insl
enter
xchg
fdivrl
adc
loopne
cmp
pushf
lods
cwtl
dec
xor
mov
xchg
mov
dec
cmp
in
fadds
jecxz
lea
sub
iret
cmp
pop
repz
push
mov
or
imul
cmp
int3
aaa
mov
fstl
in
mov
and
pop
inc
loop
das
jp
jg
push
lock
jne
and
lock
mov
rorb
outsl
sub
xchg
daa
movsl
addr16
jns
jne
sti
push
aaa
mov
push
jge
in
int
jp
popa
mov
jge
cmc
cltd
xchg
arpl
popa
mov
shll
dec
mov
inc
mov
fldenv
out
jo
test
lahf
fwait
sub
cmpsb
daa
test
inc
movsb
inc
jp
xchg
insl
adc
mov
xor
lods
xchg
adc
pop
mov
lret
mov
icebp
inc
je
pop
in
das
das
and
add
push
dec
xchg
adc
jnp
mov
sti
in
push
xor
jb
add
mov
add
cmc
iret
aad
mov
pop
push
mov
test
int3
test
add
push
insb
add
push
adcl
sti
fwait
inc
addb
out
inc
and
les
cmpsl
es
pop
repnz
pop
scas
jmp
push
inc
pop
add
or
cld
adc
inc
cli
cs
insb
mov
bound
push
mov
jbe
ret
divl
mov
xor
xor
adc
sbb
sub
xchg
out
out
or
sub
and
in
sahf
xor
add
stc
pushf
mov
stos
and
in
mov
jecxz
popf
movsl
icebp
fldenv
push
roll
popf
cmp
icebp
cmc
inc
sub
rclb
mov
sbb
fstps
out
jge
std
pop
fbld
adc
in
mov
pushf
dec
cmp
push
xchg
cmp
stos
jmp
jb
mov
inc
push
outsb
cmp
testb
pusha
cmc
fdivrs
mov
mov
push
cmpsb
mov
cs
scas
sbb
lahf
pop
jns
int3
mov
inc
add
fnstsw
in
xchg
push
out
push
test
fcoms
push
pop
dec
adc
cs
sub
mov
xor
pavgw
fldenv
pushl
jle
inc
pop
mov
sbb
pavgw
movsl
dec
int3
ja
push
pop
dec
out
aaa
jge
push
bound
pop
xchg
adc
imul
ret
xlat
xchg
cmc
mov
xchg
mov
fstl
test
hlt
mov
dec
cmpsb
push
jae
lea
jge
int
mov
in
jl
and
sbb
dec
gs
and
lret
in
rcrl
cmp
dec
dec
sub
push
repz
sub
and
lret
pop
fs
subb
enter
push
shl
jg
push
push
mov
mov
jp
push
repz
lahf
dec
add
xchg
sub
adc
nop
mov
inc
imul
bound
jae
repnz
stc
arpl
scas
and
or
bnd
imulb
div
add
cmp
bound
jnp
popa
inc
mov
jnp
xchg
xor
repz
mov
scas
and
adc
xlat
add
mov
std
xchg
dec
mov
mov
jge
jno
pop
pop
and
push
mov
fidivl
jbe
xchg
sub
icebp
add
notb
daa
out
jnp
das
sbb
xchg
pop
scas
ss
ficoml
mov
push
mov
sub
xor
mov
push
mov
out
adc
xor
rolb
call
mov
mov
mov
xlat
inc
cwtl
mov
icebp
inc
adc
dec
dec
xor
shll
in
xor
ja
mov
lods
fsub
adcl
mov
fsubl
aam
popl
xchg
inc
adc
fildl
das
das
push
je
adc
sub
icebp
rorl
mov
fcomps
sub
mov
sbb
adc
sbb
ret
lret
mov
roll
xor
es
mov
push
adc
mov
scas
stc
shld
xchg
cmp
jecxz
pop
stos
cmp
outsl
out
fs
leave
adc
mov
push
mov
jmp
test
lcall
sub
insb
call
xor
or
cmpsb
adc
add
ror
test
js
hlt
sub
mov
or
out
add
push
mov
ss
add
xor
pusha
push
xor
int
cmp
jnp
pushf
outsb
and
in
push
je
mov
fwait
xor
imulb
in
int3
jge
mov
mov
leave
mov
repz
les
dec
jg
std
jo
hlt
test
outsb
cld
add
mov
icebp
sub
outsb
cltd
xor
cld
je
sub
jle
pop
sbb
insl
ja
add
adc
jp
mov
idiv
stc
jae
daa
je
mov
pop
dec
sbb
sub
sub
xor
insl
inc
adcb
out
xchg
lods
test
in
lods
adc
in
mov
cmp
jmp
mov
mov
stos
pop
cmp
out
push
inc
jnp
jmp
mov
jp
push
or
pop
mov
inc
das
pop
fildll
mov
xor
inc
ret
xor
sbbb
lea
cwtl
cwtl
testb
inc
add
cmp
pop
dec
lods
cld
jns
ljmp
je
dec
push
gs
push
sbb
mov
mov
ret
repnz
movsb
ficompl
jbe
mov
ljmp
jns
fwait
std
mov
out
fbstp
mov
jmp
jmp
aam
mov
mov
mov
ljmp
std
inc
xchg
ret
fcoml
mov
mov
inc
mov
fcomps
mov
cmpsb
pop
jbe
filds
inc
xchg
mov
movsb
mov
mov
sub
pop
das
test
jnp
dec
cmc
and
pop
push
fdivrp
and
aas
jle
sub
inc
mov
repz
jge
aam
pop
lods
or
cli
push
or
out
mov
sub
jo
aad
mov
pop
push
push
sarb
sbb
push
mov
imul
rorl
lcall
data16
sub
cmp
mov
adc
push
pop
call
aad
and
pusha
das
enter
mov
fimull
data16
das
fnstenv
mov
int3
inc
push
mov
mov
dec
arpl
or
add
popf
push
push
push
rcll
push
setg
sti
mov
adc
xchg
jmp
popf
mov
fmull
sbb
xor
xchg
cwtl
fwait
rcr
cltd
xor
lds
mov
loop
notb
cs
mov
in
cmp
sub
clc
inc
pop
test
fs
mov
je
test
ss
push
sub
stc
icebp
cmp
jno
ds
adc
adc
mov
ds
icebp
mulb
stos
dec
xchg
js
mov
in
adc
cmp
movsl
xchg
jne
je
jno
mov
lea
int
ret
inc
pop
aad
xlat
movsl
mov
jb
jle
movsb
cmp
cmp
mov
roll
test
mov
daa
ret
out
mov
imul
movsb
mov
xchg
sti
mov
jae
dec
xor
mov
pusha
sub
int3
bound
push
pop
or
pop
ret
xchg
jg
mov
hlt
lods
cld
cmp
mov
push
cmp
or
arpl
push
jno
popa
in
adcl
ja
mov
mov
sbb
test
movswl
mov
sbb
iret
push
bnd
add
lret
push
mov
jmp
and
xorl
jp
stc
mov
push
mov
out
std
jne
js
insw
mov
ds
shrb
mov
faddl
pop
dec
pop
mov
rorl
in
sub
iret
sub
ror
or
jne
mov
xchg
sub
in
push
mov
inc
mov
loopne
arpl
fidivl
shlb
in
lds
rcll
es
les
inc
cmp
pop
fcoml
sbb
sub
dec
pop
popa
ds
fcoml
jg
jmp
jbe
mov
xchg
dec
in
xor
shrb
push
fwait
clc
jg
lods
mulb
movsl
mov
jbe
push
cmpsb
call
inc
cmp
into
mov
pop
pop
xor
or
imulb
int3
add
jae
sahf
mov
cmc
xchg
lods
cwtl
or
sbb
add
sbb
xchg
enter
jo
scas
icebp
mov
imul
sarb
call
push
cwtl
sbb
xor
cld
fstpl
xor
movsb
in
call
adc
decl
jl
ja
push
popa
xor
js
andl
cvtps2pd
addb
decb
aad
dec
movsl
pushf
cmpsl
fwait
adc
iret
push
ds
fdivrs
push
mov
shlb
cmp
popl
xchg
xor
adc
adc
mov
mov
lcall
xchg
xor
xchg
lods
jmp
cld
out
cmp
mov
lcall
cli
cwtl
test
out
cmp
in
mov
sbb
sbb
addr16
std
fsubl
fistps
sbbb
aas
or
pop
push
loop
inc
ja
dec
adc
jle
imul
pop
mov
ret
mulb
daa
sti
stos
inc
dec
les
call
ja
dec
xchg
pop
push
mov
mov
dec
popa
mov
and
push
jg
lcall
aas
mov
xlat
in
inc
pop
jo
fdivl
sub
adc
js
jns
in
inc
popa
sti
ret
fs
loopne,pt
nop
push
icebp
incl
jecxz
dec
or
or
mov
or
sahf
pop
jb
jns
mov
adc
repz
gs
sbb
movsl
scas
inc
mov
jp
sbb
cmpsl
call
test
xchg
xchg
loop
inc
mov
pop
inc
jle
add
popa
cwtl
or
add
mov
sti
xorl
jb
cmp
fdivrl
fisttpll
fdivr
mov
mov
adc
loopne
pop
fwait
nop
add
stos
xchg
pushf
adc
enter
fstp
dec
mov
arpl
lret
xchg
mov
iret
stos
and
mov
mov
imul
outsb
loope
pop
addr16
mov
add
les
movsb
mov
jl
repnz
pinsrw
pop
sub
sbb
or
pmaxsw
and
scas
rcll
stc
inc
xchg
cmp
in
mov
jmp
cld
insl
outsl
pop
shll
imul
dec
jb
lods
or
test
mov
nop
ret
inc
popf
jecxz
sub
mov
scas
pop
jg
stos
call
in
js
add
fldl
lret
cmp
inc
mov
xor
outsb
jne
rorb
test
dec
decl
inc
or
pushf
aas
add
scas
dec
jbe
jo
inc
mov
lahf
mov
push
aas
es
push
push
pop
pop
popf
in
xor
mov
out
or
xor
mov
gs
fistpl
cmp
push
mov
in
dec
cmp
cmpsl
js
and
or
mov
cmpsb
mov
std
jnp
pop
lret
test
pushf
test
nop
fdivl
jg
sahf
pop
movsl
out
inc
mull
jg
cmp
dec
and
inc
dec
and
movsb
or
lds
filds
icebp
pusha
addb
rol
fidivl
scas
sub
scas
fucomip
aam
scas
sbb
insl
mov
and
outsl
popf
or
mov
sub
bound
inc
xlat
xor
jnp
xchg
das
sti
adc
add
test
inc
fdivs
fstps
mov
sub
xchg
call
sti
cmp
inc
mov
fwait
aam
aas
add
addr16
xor
jp
jl
das
jmp
ljmp
movsb
adc
mov
cld
lret
push
push
add
xorl
pop
leave
add
outsl
fwait
jb
or
cmpsl
ffreep
pop
add
cld
aas
xchg
repnz
in
or
fcompl
push
push
std
sarb
int3
sbb
jo
jmp
stos
and
or
scas
lret
outsb
jns
mov
add
pop
icebp
pop
inc
sbb
sarb
push
jp
mov
cmpsl
dec
and
pop
mov
jbe,pn
loop
lods
orl
push
cmpsl
sbb
push
xor
fisttpll
icebp
fstpt
shl
mov
call
testb
into
repz
addl
ret
mov
cmp
addr16
into
aam
jnp
push
scas
dec
and
bswap
je
lds
ss
enter
and
jge
sbb
enter
ss
sub
push
mov
shrb
shlb
out
aas
sub
addr16
adc
lods
sbb
dec
cmp
push
cmp
pop
ja
lcall
push
notb
leave
ljmp
das
out
mov
fwait
xchg
incl
loope
xor
push
aaa
fstps
xor
inc
das
lahf
scas
repz
fsubs
cmpsb
xchg
dec
loope
mov
jge
xchg
push
xchg
mov
xor
je
xchg
push
testl
shll
mov
mov
sub
xor
push
cmc
aaa
mov
insl
andb
sub
mov
movsl
scas
mov
pop
fisttpll
jecxz
ror
jle
sub
push
xor
push
insb
mov
sub
sahf
xlat
inc
jg
roll
inc
scas
xor
ret
std
popf
jle
mov
fisubl
roll
adc
sbb
sbb
add
inc
adc
mov
jno
mov
rorl
fwait
pop
stos
setbe
and
aad
mov
pop
das
push
lock
out
mull
cli
test
nop
stc
sbb
or
pop
scas
dec
icebp
mov
xchg
clc
push
pop
inc
xchg
jmp
aad
push
pop
iret
imul
fs
pop
leave
inc
and
shlb
repz
pop
loop
or
xchg
sarb
xchg
sbb
or
jae
int3
mov
inc
shrb
aam
adc
add
dec
loope
jp
ret
pusha
iret
sbb
and
pop
sarl
mov
cmp
adc
icebp
pop
mov
cs
call
adcb
in
adc
flds
or
add
jae
mov
adc
adcl
mov
inc
and
mov
ret
jmp
mov
sahf
adc
test
mov
imul
ljmp
adc
aad
mov
pop
and
popa
mov
or
add
mov
jo
hlt
or
mov
push
and
add
ds
mov
mov
dec
scas
idivl
cmp
out
mov
mov
add
lea
mov
xchg
pop
xor
pop
push
pop
insl
xchg
push
flds
data16
inc
mov
xchg
and
cmpsl
cmpsl
xor
and
jmp
aad
test
movsl
into
stos
fxch
fstps
inc
inc
aas
jno
push
pop
jecxz
jmp
cltd
or
inc
inc
mov
gs
lret
and
push
lock
jge
les
movsl
pop
jae
jge
inc
dec
cs
shrb
xor
cwtl
aad
mov
push
push
inc
hlt
sbb
jno
push
stos
mov
mov
adc
inc
xor
xor
lods
inc
xor
popf
xor
in
sub
loop
gs
xchg
int3
out
mov
push
dec
outsl
add
mov
mov
jecxz
movsb
sbb
add
mov
dec
cmpsl
add
sub
cld
jge
mov
in
aaa
pushf
inc
inc
es
adc
sbb
cmp
cli
popf
sub
mov
cmp
sub
nop
jae
pop
mov
sbb
in
mov
push
jp
mov
pop
int3
mov
rolb
push
cmp
movsb
mov
pusha
pusha
or
mov
ss
dec
test
cmp
inc
aaa
into
es
inc
and
je
sti
xchg
cli
xor
bnd
or
mov
adc
push
or
cmp
jnp
fsts
insb
mov
push
mov
outsb
xchg
rorl
mov
mov
inc
jle
repz
scas
jo
outsb
inc
adc
dec
cmpsl
test
arpl
dec
mov
rcl
and
jle
and
aam
and
xchg
inc
cmp
dec
bound
pusha
xor
outsl
fiadds
pop
movsb
mov
stc
push
imul
and
imul
pop
inc
inc
arpl
mov
fisubrl
mov
aas
enter
leave
je
adc
loopne
orb
fwait
shrl
or
repnz
pop
pop
js
sahf
mov
mov
xchg
dec
insb
lahf
or
jb
mov
and
mov
add
inc
mov
cs
mov
pop
cmpsl
nop
scas
xchg
sbb
mov
jnp
cwtl
sbb
mov
push
add
loop
lock
std
push
call
mov
xor
ds
lods
xchg
push
aaa
push
idivb
cmp
cmp
adc
mov
mov
cs
shr
xchg
test
jnp
push
mov
mov
jbe
je
add
int
in
adc
fistpll
divb
lret
inc
aaa
adc
jp
push
sbb
jp
repz
imul
cltd
sub
test
sub
push
movsb
jns
movswl
sub
mov
add
xor
aas
add
inc
in
data16
push
lret
out
pop
xlat
pop
adc
mov
xor
lds
ret
cmpsl
mov
lahf
int
fimull
jg
push
sub
enter
add
or
into
sub
dec
dec
adc
push
lret
enter
cwtl
xor
dec
cmpsb
stc
fidivs
stc
loope
add
cmpsl
adc
lret
adc
xor
dec
pop
dec
js
test
cmp
push
push
sahf
loopne
adc
sub
fdivrp
and
ds
and
xchg
outsl
dec
das
aad
rcrb
lahf
call
addb
add
mov
sub
mov
pop
jmp
pop
iret
scas
dec
xchg
jno
in
mov
sbb
sbb
mov
mov
push
pop
xchg
out
das
cmpsb
mov
bound
xchg
cmp
inc
xchg
imul
popf
bound
inc
aam
xor
pop
aad
xchg
inc
dec
and
push
add
add
rcll
lods
pushf
adc
adc
fucom
dec
sbb
pop
clc
mov
pop
xor
xchg
push
bound
ss
cmp
out
pop
bound
jbe
push
push
insb
aam
jo
repnz
jp
stos
sbb
test
sub
cmp
pop
cld
ljmp
aaa
xchg
mov
sub
xchg
push
mov
xor
scas
in
ljmp
mov
jno
pop
out
mov
stc
nop
push
push
gs
dec
or
shlb
xchg
inc
jb
rorb
mov
adc
pop
cmpsl
pop
or
loopne
loopne
lods
and
loope
ljmp
jp
or
add
or
test
dec
sub
or
fwait
sub
ret
xor
in
les
mov
je
loop
hlt
jne
adc
out
outsl
cmp
mov
iret
cmp
insb
mov
pop
mov
and
mov
idiv
jmp
inc
fisubrl
jnp
cld
adc
std
xchg
add
out
pop
inc
dec
mov
cmpsl
pop
jge
cltd
cmp
repnz
add
push
push
int
mov
xchg
imulb
dec
and
movsb
stos
dec
cltd
jg
in
dec
and
fdivl
sub
sahf
mov
sarb
push
dec
ja
mov
add
and
loopne
jb
subb
iret
mul
fdivl
xor
adc
cmp
in
fldt
addr16
loopne
inc
cmp
push
and
mov
push
cld
and
sub
movsl
aas
mov
nop
pop
adc
mov
movsb
pop
sub
jge
movaps
and
jmp
add
loopne
or
js
jo
jg
mov
scas
jge
inc
sbb
mov
nop
fmull
hlt
xchg
test
and
int
push
mov
arpl
cmpsb
addr16
or
sbb
jecxz
sbb
ficompl
insb
push
mov
and
inc
jecxz
adc
add
jl
arpl
adc
or
sbb
adc
push
lret
inc
enter
jmp
int3
pop
sarb
and
data16
cmp
repnz
outsb
or
lock
dec
and
imul
cli
jl
fcom
sbb
ja
sub
int3
iret
leave
pop
and
idivb
out
add
ss
mov
lods
lret
sbb
gs
mov
add
dec
pop
movsl
mov
imul
adc
ds
xchg
loop
pop
dec
outsb
dec
and
push
aas
std
jne
add
and
mov
stos
in
or
xchg
ds
cmp
pop
cmp
bound
push
cmpsl
aaa
sbb
mov
xchg
aam
das
sti
mov
push
mov
fstpl
lahf
inc
sahf
add
scas
mov
and
mov
int
xchg
push
push
mov
into
pop
dec
imul
mov
cmpsb
sbb
add
jbe
out
cmc
pusha
popl
cs
in
jnp
je
shl
stc
imulb
outsl
into
jmp
inc
push
sbb
or
and
jge
shlb
lds
sbb
test
push
lret
ret
and
xor
mov
nop
xchg
ljmp
shlb
hlt
mov
sbb
popf
xor
add
xchg
sbb
or
jecxz
scas
jge
adc
adc
shrl
mov
shlb
mov
push
push
xchg
cmp
or
or
mov
jp
das
sub
dec
xlat
cs
cmpsl
inc
daa
test
jmp
add
sti
pop
in
addb
call
jae
test
and
decb
test
sbb
das
ja
push
jno
loopne
lds
cltd
nop
js
fwait
scas
and
std
jge
outsl
cwtl
fs
dec
and
scas
pusha
add
sti
cltd
popf
xchg
lcall
xchg
jecxz
jae
mov
es
xlat
pop
jmp
flds
arpl
stos
xchg
mov
adc
or
jbe
mov
outsb
mov
iret
ja
jle
popa
jle
ja
dec
adc
cmp
xlat
mov
pushf
cwtl
sbb
fnstenv
inc
and
add
lods
dec
gs
pop
lcall
push
dec
dec
push
std
dec
jns
xchg
mov
aam
push
cmpsb
lds
xor
adc
ss
sti
ljmp
mov
imul
push
inc
bound
rolb
dec
ljmp
inc
mov
jecxz
inc
leave
and
mov
sbb
mov
test
pop
jle
adc
mov
adc
adc
xor
pop
jne
add
sbb
jae
add
enter
mov
test
and
xor
cltd
xor
in
fnsave
add
inc
ret
xchg
dec
loopne
mov
and
adc
jae
inc
pop
cmp
mov
adc
loope
add
pop
scas
jns
mov
add
add
mov
bound
inc
rorb
cmpl
jge
add
test
lahf
dec
popf
sbb
mov
inc
xchg
push
cmp
sarb
lret
mov
xor
movsl
pushl
icebp
sbb
in
dec
dec
push
repnz
push
sarl
scas
dec
movsbl
enter
jmp
cmp
pop
xor
add
notl
mov
cltd
jle
add
xlat
rcl
nop
call
dec
lcall
in
fwait
jecxz
inc
popf
loop
stc
loopne
insl
adc
xor
repz
rcll
xor
mov
test
sub
sar
pop
je
pop
test
nop
test
rclb
mov
sub
mov
popa
cmpsb
arpl
xchg
pop
jl
sub
ljmp
gs
sbb
rorl
sub
loopne
shl
push
mov
xor
jnp
iret
pop
aad
mov
adc
adc
adc
int3
lahf
testl
mov
cld
xor
mov
or
int
subl
adc
add
call
inc
push
das
pcmpgtd
xchg
stos
cmpsl
mov
jecxz
cli
lds
xchg
cmp
repz
or
mov
insb
std
test
nop
repz
or
cmpsl
mov
mov
fstps
sub
lret
and
pop
mov
sbb
jmp
mov
mov
and
sbb
shlb
mov
pop
adc
popf
pop
lahf
subb
loop
sarb
jge
out
pop
loopne
add
adc
cli
insb
mov
push
ja
xchg
adc
adcl
test
xlat
iret
inc
mov
jno
sbb
ljmp
sti
loopne
das
mov
cmpsb
lret
mov
aam
test
out
mov
xlat
inc
test
ret
xchg
mov
dec
pop
dec
cmpl
jg
dec
add
shl
ds
sbb
scas
test
arpl
mov
sbb
aad
push
jl
mov
mov
jbe
fwait
rcrb
fisttpll
test
sarw
push
sub
mov
lret
xchg
dec
push
cmp
ja
adc
xor
test
in
mov
pushf
mov
mov
sarb
mov
addr16
xor
sarl
into
minps
es
cmp
mov
int
aas
jmp
sbb
inc
add
xor
push
mov
pop
adc
test
mov
enter
sbb
sbb
and
cltd
cmp
ja
lods
lret
xor
adc
in
mov
stc
fistpl
xor
jae
out
jmp
add
dec
stc
lret
adc
jl
adc
fisubrs
cmp
xchg
out
pushf
sbb
sbbb
sub
sbb
pop
add
pop
pop
sbb
adc
sub
dec
dec
push
xchg
mov
inc
js
testl
popf
les
adc
sub
adc
cmpsl
mov
movsl
jg
mov
jle
sbb
repnz
inc
ljmp
mov
add
int3
sbb
mov
pop
pop
bound
jns,pt
pop
push
rcrb
aas
leave
dec
pop
jl
fwait
daa
cwtl
or
add
mov
stos
ret
mov
sbb
test
test
sahf
mov
mov
rolb
repz
loop
pop
leave
movsb
imul
add
rolb
ds
popa
adc
jp
add
fldt
xor
cmpb
ficoms
std
jns
add
pop
mov
dec
aaa
adc
andl
icebp
lret
mov
push
test
xchg
js
std
add
mov
mov
insl
pop
shll
inc
pusha
loope
sbb
jl
fmull
lods
mov
popa
mov
xchg
cmc
roll
popa
dec
xor
mov
push
ljmp
mov
jno
repnz
mov
scas
lods
in
mov
call
mov
fs
push
and
inc
jge
int
xor
jge
sbb
push
jg
sbb
std
xchg
cmp
test
mov
pop
lcall
arpl
xchg
mov
stos
dec
and
or
xor
in
adc
mov
repz
or
mov
lea
jmp
jae
mov
push
jo
insl
sub
jnp
fs
test
das
adc
push
sub
rcrb
enter
movsl
pop
daa
out
adc
pop
in
fisubl
js
sub
cli
daa
cmpsb
psubd
dec
mov
stos
call
into
pop
inc
and
insl
repz
mov
and
dec
sbb
cmp
je
cwtl
dec
or
jne
mov
cmp
jmp
xor
int
sub
fsubs
mov
loop
pop
and
xor
sbb
in
xor
popa
inc
decl
addr16
decl
cli
or
jae
roll
aaa
dec
dec
sbb
out
popa
pop
out
sbb
jns
sbb
jbe
cwtl
mov
mov
out
repz
in
push
sbb
stos
stos
cmp
push
mov
push
into
mov
sahf
sarb
fimuls
cmp
jmp
jl
pusha
or
push
lret
test
popa
addr16
addl
sub
fwait
in
in
sub
imul
xchg
push
movsb
test
pusha
adc
push
scas
lea
dec
mov
fwait
xchg
jns
inc
in
aaa
push
mov
sub
arpl
sbb
dec
data16
idivl
ljmp
jno
mov
in
cmp
neg
mov
call
icebp
or
add
pop
pushf
or
les
lahf
add
rorb
sbb
mov
lock
in
jns
cmp
sbb
push
cmp
dec
js
movsl
add
or
cmpsb
in
insb
arpl
mov
mov
push
js
add
das
outsl
and
icebp
es
into
xchg
push
and
pushf
push
mov
imul
inc
loopne
adc
loop
repnz
ljmp
push
das
or
push
push
push
sbb
in
int3
push
adc
cltd
push
scas
sbb
negb
add
pop
mov
mulb
mov
pop
inc
rcll
mov
or
pop
fwait
mov
jp
dec
imul
sahf
mov
ss
imul
dec
add
pop
test
inc
mov
or
add
mov
icebp
enter
aas
into
cwtl
xchg
outsb
jb
jb
inc
ljmp
mov
pop
iret
fsubrl
addl
xor
jg
xor
fmull
addl
lods
outsl
xchg
ss
pop
cmp
pop
push
cs
incl
jl
push
mov
or
xchg
dec
push
xchg
iret
repz
sub
or
fs
int3
xchg
imul
cmp
xor
and
testb
leave
add
test
cwtl
mov
lret
xchg
push
les
mov
xor
push
pop
pop
daa
pop
fwait
stos
fdivl
cmp
mov
aam
xchg
pop
insl
sub
and
int3
lods
test
popa
ss
jmp
clc
sbb
js
xchg
push
imul
out
mov
dec
in
test
dec
and
repz
arpl
test
dec
mov
stc
sbb
int
xchg
add
push
fwait
mov
sub
xor
pop
test
shrb
rcll
xor
pushf
jecxz
push
outsl
jo
pop
imul
jp
stos
inc
jb
mov
aaa
cs
fisttpll
pop
call
aaa
mov
movsl
xchg
pop
mov
rorb
jne
jmp
nop
daa
scas
cld
or
sbb
shrb
xor
fsubs
jp
xchg
fcoms
mov
pop
or
add
xchg
push
xor
stc
push
or
mov
lret
gs
pop
xchg
dec
lods
dec
jecxz
out
xlat
loope
dec
scas
shrb
adc
cmp
push
sbb
arpl
loope
hlt
in
add
or
je
jp
push
scas
xchg
sbb
dec
pop
add
add
ficoms
sahf
iret
jmp
stos
jnp
rcll
divl
mov
dec
cwtl
fisttps
mov
loopne
mov
cld
inc
cmpsb
imul
mov
fmul
pop
fdiv
in
fcmovb
jecxz
mov
mov
pop
mov
add
add
call
sub
mov
or
in
popa
mov
adc
mov
jb
aas
xor
push
mov
fsubs
mov
lock
push
mov
stos
int
mov
ud0
inc
pop
mov
jne
push
cwtl
sarb
pop
jle
push
jno
pop
push
daa
lret
es
scas
cmp
dec
aad
and
mov
popa
push
sub
cmpsb
cmpsl
popa
mov
hlt
lret
pop
dec
xor
mov
cwtl
sbb
dec
mov
xchg
test
int
out
jo
insb
and
sbb
fsubrs
movsb
out
aaa
cmp
int
mov
mov
mov
cli
add
pop
rclb
fnsave
add
fistpll
dec
out
sbb
xchg
cwtl
mov
aas
sub
mov
clc
sub
scas
testl
iret
push
xor
imul
outsl
cli
iret
xchg
leave
cmp
leave
jl
xchg
mov
inc
and
push
sub
arpl
js
jmp
popf
mov
ret
rorl
cli
bound
test
inc
adc
sti
cmp
sub
sub
bound
call
ss
pop
ret
movsb
or
jmp
xchg
mov
iret
orl
mov
push
pop
sub
shll
ja
sub
add
cld
stos
popa
je
addl
scas
ret
sbb
imul
lea
jo
enter
and
mov
adc
mulb
xchg
cmp
in
mov
rcl
xchg
push
mov
leave
test
push
cltd
mov
movsl
sub
jo
stos
adc
rorl
cmpsb
or
pop
sbb
pop
shll
lret
push
jbe
je
or
mov
adc
mov
xor
pop
nop
xchg
inc
xorl
movsb
fcompl
and
and
inc
fcoms
andl
dec
mov
mov
lds
jno
ret
mov
push
repnz
icebp
imul
jmp
fists
insb
enter
cmp
imul
xor
out
call
mov
pop
imul
dec
or
sarl
jl
nop
mov
or
repz
in
inc
xor
repz
sbbb
loope
in
fdivs
dec
scas
repz
jecxz
adc
ljmp
testl
imul
dec
andl
jne
or
jns
mov
scas
cmp
cltd
lret
add
test
and
lods
sbb
lcall
or
mov
mov
icebp
sbb
stos
xchg
sub
xchg
jnp
dec
jns
xchg
add
ljmp
mov
mov
add
ficompl
sbb
jns
pop
mov
cld
std
test
or
add
in
inc
jg
jnp
mov
xchg
push
daa
idivl
mov
add
sbb
jmp
ficoms
lahf
mov
sbb
cli
iret
bound
push
aas
fcompl
cmp
mov
mov
in
out
pop
pop
inc
xchg
lods
mov
inc
arpl
test
mov
jmp
cmc
loope
in
out
or
mov
ja
sar
jge
and
jecxz
and
xor
sub
loop
adc
ret
js
ds
inc
xchg
push
push
test
out
scas
ret
es
repnz
test
repnz
stc
dec
cmp
push
pop
and
xorl
inc
aad
mov
outsl
xlat
sub
jle
or
shll
subb
pop
jecxz
push
int3
lcall
pusha
insl
ljmp
int
inc
or
or
pop
outsb
or
or
pop
hlt
pop
mov
gs
mov
jbe
stos
out
inc
xchg
add
sbb
fsubrs
jg
or
stos
sarl
pusha
xchg
and
jne
fndisi(8087
jno
mov
and
test
sub
fiadds
jle
mov
scas
pop
sub
mov
dec
lock
adc
negb
inc
js
pop
sub
mov
mov
nopl
add
dec
pop
ss
jno
mov
fs
xlat
push
cmp
lods
cmpsb
push
jecxz
jae
mov
xchg
nop
leave
dec
adc
mov
outsb
bound
or
or
jbe
in
movsb
mov
pop
jno
fcoml
shlb
in
mov
dec
push
push
or
pop
pop
sub
or
out
xchg
ja
add
out
dec
xchg
insl
sbb
aad
xor
rcl
ljmp
test
xchg
testl
jne
push
xor
addr16
pop
mov
lahf
lahf
setae
jge
sbb
push
xchg
sbb
xchg
jg
lods
lock
xchg
push
mov
fnstenv
push
pop
jp
test
dec
sbb
leave
push
call
pop
popa
ret
lods
mov
fists
add
es
jno
add
xor
faddl
inc
push
dec
adc
pop
hlt
les
and
cmpb
mov
int
test
out
sbb
js
mov
stos
sub
cmp
mov
inc
mov
fcoms
sub
jns
sub
push
out
push
mov
mov
jo
fdivrs
jnp
mov
mov
push
mov
ja
mov
outsl
pop
fimull
enter
daa
in
pop
mov
je
xlat
leave
jnp
sub
out
jg
imul
xor
add
popa
repz
ret
inc
daa
repnz
add
cmpsl
test
test
fbstp
fisubs
roll
arpl
stc
divb
out
and
xor
cli
and
data16
lds
sbb
push
sti
fsubrs
xchg
sub
out
jecxz
or
das
cmp
xchg
into
mov
in
shr
mov
cmpsb
mov
and
out
test
lds
fistps
std
mov
arpl
fmulp
arpl
xor
lds
mov
sbb
pop
xchg
dec
jns
test
adc
mov
xor
or
jp
mov
fs
xlat
sarb
daa
mov
push
nop
push
mov
mov
xchg
sbb
mov
pop
mov
pushf
add
and
lahf
dec
pop
push
sahf
jmp
mov
sbb
inc
xchg
call
jb
mov
je
add
outsl
stos
xor
push
scas
inc
outsb
mov
subl
loopne
mov
or
pop
xor
in
pop
aam
testl
inc
clc
inc
dec
mov
sbb
cli
jg
add
sbb
xchg
pop
aas
outsb
popf
pushf
pop
cmpsl
clc
out
or
scas
shll
cmp
xchg
push
xchg
int3
clc
dec
pushf
aas
psubsw
jbe
inc
add
mov
dec
out
or
jbe
or
cmp
cmp
in
je
sti
jmp
xor
push
inc
movsl
insl
push
into
inc
jp
int
or
dec
inc
mov
add
xor
jecxz
mov
pop
and
aad
sbb
fidivrs
mov
pusha
loopne
jecxz
pop
xchg
xchg
adc
push
scas
cld
adc
xor
mov
arpl
push
cmp
in
or
in
cmp
xchg
pop
adc
dec
subb
sub
mov
adc
into
outsb
and
scas
push
je
nop
pop
ja
sbb
jnp
jns
push
cli
pop
mov
inc
cmp
jnp
xchg
fidivl
mov
dec
mov
stc
rorl
insb
jns
sbb
inc
xlat
cmpsb
jne
pop
jnp
cwtl
arpl
inc
in
enter
mov
adc
inc
test
and
cmpsl
loope
xchg
cmpsl
jae
xor
jge
mov
adc
mov
push
lds
fists
adc
stc
sti
inc
cld
adc
mov
jne
in
lock
mov
fnsetpm(287
sbb
lock
xchg
xorl
pop
fcoml
aad
pop
out
pop
mov
scas
fadd
inc
into
insb
negb
cmpsb
bound
sub
bound
add
cmp
mov
and
out
std
movsb
bound
jnp
jge
push
or
cmp
ds
inc
cltd
pop
xor
stc
and
inc
jge
push
ret
add
loop
les
sub
or
sub
faddl
psubsw
inc
test
cwtl
std
mov
int3
jae
bound
cmpsl
push
and
leave
jmp
test
in
cmpsb
lock
fldcw
xor
xchg
inc
sbb
jne
outsb
ret
leave
test
dec
lds
mov
test
mov
rcll
jecxz
jbe
test
outsl
and
inc
stos
fwait
enter
cmp
jnp
addr16
fwait
test
mov
and
mov
xchg
xchg
outsb
pop
lods
mov
sbb
push
push
pop
push
jae
mov
inc
movsl
push
stos
fimuls
mov
mov
outsl
clc
mov
push
dec
cmpsl
pop
js
clc
sub
sti
into
sbbl
cld
jp
jnp
jge
cmp
test
dec
std
jb
mov
xchg
xor
cltd
add
sbb
cmpsb
mov
out
sub
mov
cmc
inc
jmp
dec
pusha
mov
insb
mov
iret
pop
push
cli
jae
dec
add
lret
adc
jo
data16
adc
lods
jle
push
aaa
dec
arpl
xor
lcall
pop
push
jno
sti
mov
loopne
in
add
arpl
jno
aaa
ret
xlat
test
add
imul
mov
jmp
je
lret
cmp
mov
jecxz
pop
push
lds
cli
test
es
add
and
int3
addr16
push
or
cmc
out
sub
push
mov
out
inc
pop
pop
loop
xchg
lock
lods
repnz
push
out
cmc
xchg
xchg
test
sub
mov
pop
inc
js
rol
or
push
xchg
test
push
xchg
fdiv
push
pop
push
mov
inc
fistl
sahf
stos
sbb
add
sub
pop
xor
lds
or
leave
addr16
test
mov
je
repz
cwtl
cmp
lods
pop
arpl
stos
and
sarl
jae
lods
cmp
mov
mov
push
cmc
add
in
xor
adcl
push
scas
jo
push
dec
fbstp
mov
adc
stos
testb
add
mov
outsl
mov
dec
dec
jle
mov
aaa
enter
popf
cmc
inc
gs
loopne
cmp
test
icebp
pop
cmp
addr16
cmpsb
xchg
lret
stos
stc
mov
mov
xor
adc
sbb
cli
sbb
test
jo
add
xor
hlt
cmp
outsb
inc
xchg
mov
push
rcrl
aas
loopne
jl
lea
mov
xor
in
sub
cmpb
ja
call
jns
mov
cwtl
sbb
cmc
aam
negl
jmp
mov
dec
movsb
mov
mov
mov
mov
adc
add
jp
jmp
lret
sbb
addl
lret
bound
sbb
and
and
jbe
aaa
cmp
insb
fisubrl
ret
lea
cltd
sbb
push
mov
pop
ss
and
or
in
aas
mov
mov
rol
mov
fs
or
and
xor
insl
push
jno
dec
push
pop
stc
mov
movsl
xor
xlat
adc
aaa
data16
test
mov
addr16
or
xchg
push
in
mov
or
movsl
mov
inc
mov
test
cmp
mov
xlat
in
sbb
dec
int
adc
fisttpll
bound
test
inc
test
std
fisubrs
or
imul
mov
dec
fs
cwtl
xor
or
mov
push
mov
call
test
in
and
mov
inc
imul
pusha
xchg
insb
addr16
xchg
and
rcll
mov
vshufps
add
movsl
loope
stc
inc
clc
and
das
push
mov
fidivl
mov
add
inc
clc
dec
cld
jns
out
out
mov
xchg
or
xor
test
in
imul
scas
inc
js
mov
and
sub
mov
imul
outsb
lock
cmpsl
leave
in
mov
aad
push
sbb
out
cwtl
cmp
pop
pop
mov
cmp
sub
pushf
jg
outsb
xor
mov
aam
xchg
lret
aad
shl
aaa
jnp
xchg
lcall
mov
out
lods
std
mov
je
test
sub
add
inc
push
mov
cltd
das
sub
add
cwtl
test
das
cmp
push
ljmp
xchg
adc
es
cli
les
shll
outsb
inc
sub
clc
into
jecxz
mov
xchg
pusha
xchg
cmp
mov
scas
xor
xchg
pop
dec
adc
add
push
jno
sub
mov
cmpsl
cmp
push
mov
mov
andb
leave
ss
and
mov
jecxz
call
mov
xchg
out
xor
in
shll
cmpsb
xchg
ret
je
sub
out
call
xchg
faddl
or
js
ret
fdivr
inc
adc
mov
sbb
cli
lods
popa
sbb
popw
mulb
adcb
xchg
and
mov
jnp
pop
pop
jae
mov
aam
mov
loope
xlat
dec
std
add
jmp
pop
dec
lahf
cwtl
jp
or
xlat
xor
push
and
inc
add
inc
gs
xchg
out
push
dec
ss
mov
jmp
jmp
bound
xchg
into
cmp
mov
dec
pop
out
pop
pop
jle
xor
mov
adc
xchg
push
push
ret
pop
and
pop
mov
push
in
test
outsl
adc
pop
int3
stc
jb
arpl
mov
pop
test
inc
and
push
jnp
pop
enter
lods
repz
sub
adc
loopne
gs
imul
test
sub
repz
vmwrite
data16
mov
popf
sub
adc
insl
outsb
shlb
jecxz
dec
fsqrt
xor
int3
mov
adc
popf
inc
push
stos
lods
inc
ret
inc
or
push
cwtl
fldl
popf
push
scas
hlt
dec
or
loopne
mulb
mov
mov
subl
dec
push
inc
xorb
cli
mov
xchg
divb
cmp
add
adc
sbb
pop
test
inc
test
imul
out
cmc
or
imul
rcl
push
imul
push
cli
and
jo
dec
cmpsl
bound
xchg
mov
push
lea
jb
mov
sarb
xchg
jg
mov
cwtl
jbe
fldenv
xchg
outsl
sahf
inc
jecxz
cwtl
inc
sbb
in
push
mov
push
add
push
jmp
mov
jmp
or
repnz
mov
fstps
call
mov
push
cmpsb
addl
outsb
mov
push
adc
push
movsl
std
cmp
into
outsb
sbb
inc
jp
cwtl
mov
push
outsl
mov
aaa
dec
jbe
lock
fsub
jecxz
cmp
popa
jg
push
out
idivl
cltd
adc
mov
jle
inc
mov
lret
sahf
sub
xor
jbe
xchg
inc
mov
lea
mov
nop
les
movsb
mov
ret
rcr
movsb
pop
sarl
loop
add
out
cwtl
int3
pushf
addb
mov
adc
or
arpl
scas
mov
cmp
push
mov
clc
add
xor
lds
data16
icebp
enter
int
push
xor
popa
fisubs
adc
adc
imul
insb
mov
fimull
pop
fistpll
loope
xchg
adc
sbb
jnp
mov
subb
es
inc
mov
incl
ljmp
lret
sub
les
cmpsb
pop
push
pop
pop
ret
add
ljmp
imul
push
pop
lret
pusha
mov
jb
and
cmp
ljmp
jmp
mov
nop
add
push
sub
stc
push
sbb
sub
jge
xchg
in
rol
das
ss
lcall
cltd
pop
push
test
mov
out
inc
test
inc
mov
or
movsb
or
iret
scas
pop
sbb
or
adc
adc
adc
pop
dec
mov
dec
mov
add
xchg
aad
mov
mov
cmc
mov
sub
mov
and
ja
fdiv
or
push
jns
xor
outsl
lret
in
dec
mov
cli
push
lea
or
xor
pop
in
pop
lret
in
mov
lret
mov
push
mov
xchg
mov
cmp
xor
stos
adc
rcl
popf
xchg
cmpb
ret
mov
neg
and
outsb
fnstcw
test
add
dec
stos
pop
cli
bsf
sub
and
jle
in
sbb
mov
adc
int3
pop
and
dec
lret
rolb
xchg
mov
mov
jo
sbb
orl
sub
pop
imul
xlat
mov
call
push
and
or
xlat
cmp
and
push
and
mov
adc
or
sub
jg
jle
inc
mov
repnz
pushf
mov
pushf
mov
push
dec
mov
loopne
sbb
or
mov
bound
sub
push
sub
and
iret
jge
adc
push
mov
imul
cli
mov
int
add
sub
dec
adc
cmovs
adc
inc
adc
mov
ds
mov
test
push
sarl
nop
sub
test
aad
push
push
bound
cmp
std
sbb
mov
push
cli
xor
insl
loope
or
mov
xchg
jne
jne
cmpsl
ret
mov
cli
jl
cld
movsb
mov
jmp
scas
pop
sbb
mov
fisttps
nop
lds
or
sbb
adc
or
push
gs
adc
mov
mov
lds
pop
out
loope
lret
jp
scas
xlat
fidivl
sbb
aam
add
in
add
in
mov
and
gs
adc
xor
jp
xor
ficoms
adc
daa
mov
outsb
mov
or
mov
fisubrs
imul
outsb
sub
int
xor
and
out
jecxz
ror
mov
jb
jge
or
xor
loope
mov
inc
push
push
in
gs
scas
sarl
nop
inc
call
jmp
andb
clc
inc
out
lahf
jae
in
loope
xor
ja
adc
pop
fsubrs
and
or
push
flds
push
push
jecxz
jb
adc
mov
cs
push
arpl
dec
roll
jmp
fimuls
xor
xchg
cmp
jbe
repz
andb
cmp
mov
insl
mov
push
outsb
xchg
repz
cwtl
ds
and
mov
jnp
mov
ret
add
jae
imull
sub
cmp
push
push
imul
data16
out
jns
mov
xor
mov
sub
inc
dec
xchg
gs
pop
pop
pop
bound
jmp
push
dec
ljmp
fidivl
repnz
aas
xor
inc
repz
sbb
andb
pop
notb
dec
mov
shl
repz
xor
inc
cmp
inc
adc
cmpsl
pop
jecxz
ret
cmp
mov
mov
push
imul
cmp
fcompl
jp
fs
aad
inc
sbb
mov
jno
popf
fld
shr
test
daa
fcompl
inc
dec
loope
test
pusha
test
dec
xor
daa
std
xchg
out
fldenv
mov
push
xchg
mov
cmp
inc
jnp
mov
lea
inc
push
mov
push
add
jg
incb
mov
orps
in
insb
xchg
lods
jno
gs
insl
imul
xchg
add
cmp
pushf
loop
or
adc
lock
mov
imul
xchg
fstps
repz
mov
mov
and
repnz
xchg
pop
mov
sbb
cmp
imul
dec
mov
jne
sub
dec
mov
and
mov
sub
cmpsl
sbb
pop
lds
xchg
cmp
loop
test
int
aas
imul
add
mov
dec
mov
stos
sbb
rcl
test
jge
push
fneni(8087
add
comiss
ljmp
pop
dec
insl
jae
jnp
ja
imul
ret
xchg
scas
in
push
xchg
imul
xor
sbb
adcl
mov
mov
ret
dec
stos
or
mov
jecxz
loopne
scas
arpl
movsl
loopne
and
repz
lods
cmp
mov
loope
xchg
sub
lahf
pusha
push
js
lea
mov
xchg
fnsave
jp
fistps
mov
cs
push
xor
std
gs
cwtl
inc
mov
sub
leave
je
sbb
inc
lahf
mov
movsl
stos
fwait
test
mov
dec
xor
inc
and
les
xchg
hlt
jp
mov
test
push
mov
adc
mov
and
mov
mov
pop
arpl
cmp
xchg
or
fimull
shrb
mov
mov
aam
dec
jno
adc
lea
jmp
push
xor
test
pop
fmuls
gs
pop
dec
jbe
jns
sti
pop
insb
add
push
sub
adc
xor
adc
lods
push
mov
ret
ja
fucomp
mov
fadd
jbe
arpl
das
xchg
jne
js
and
or
pop
arpl
mov
xor
loopne
xor
mov
cmp
jg
arpl
pop
mov
jge
out
nop
adc
mov
cli
sbb
sub
mov
in
and
out
mov
clc
inc
xchg
repnz
enter
mov
aam
movsl
or
jns
inc
arpl
sub
ret
sub
and
xchg
mov
jg
fs
mov
scas
add
ds
and
out
fdivl
arpl
cmpsl
push
or
addr16
aad
pop
cmp
adc
xchg
imul
or
ret
loopne
stos
jbe
pop
inc
rcl
adcl
and
lcall
xchg
mov
testl
add
or
fdivrs
je
sbb
mov
fsubrs
fstp
xchg
in
dec
out
adc
test
movsl
xor
and
mov
test
ret
cmp
mov
out
ja
repnz
xchg
jmp
xor
popa
clc
xchg
mov
pop
in
push
mov
mov
jmp
iret
inc
hlt
lahf
xor
mov
sub
push
pop
mov
push
inc
xchg
mov
ror
push
leave
xchg
xchg
cmp
sarb
mov
fsubr
dec
or
mov
pop
pop
call
cmp
mov
xlat
or
xor
xor
sbb
loopne
jo
data16
xor
call
add
loopne
in
sahf
mov
cmp
daa
orb
stc
ret
mov
call
adc
insl
pop
mov
jno
scas
adc
inc
sub
out
std
adc
mov
dec
fisubl
pop
inc
xchg
icebp
adc
test
imul
mov
iret
test
xchg
push
inc
scas
out
stos
lea
pusha
sbb
test
movzwl
imul
ljmp
sub
or
adc
stos
out
pushf
adc
push
and
cli
cmp
js
dec
in
loopne
leave
sbb
ja
dec
xor
add
cmp
xchg
cmp
dec
dec
or
test
push
mov
dec
xchg
leave
sbb
aam
into
dec
push
aaa
sub
sub
lea
sahf
daa
and
rorl
dec
jns
jmp
xchg
into
sahf
mov
xchg
in
scas
rcll
mov
ja
mov
jbe
jne,pt
lcall
jne
and
ja
mov
dec
div
popa
push
loopne
mov
lock
push
stos
cltd
stos
push
cmpsl
sbb
cs
movsl
pusha
xor
mov
xor
pop
in
test
push
jmp
lods
loopne
cmp
push
outsl
addb
inc
daa
repnz
movsb
insb
pop
or
daa
or
je
mov
mov
icebp
push
fistpl
int3
push
into
jo
loop
dec
push
insb
imulb
push
or
jecxz
popa
pop
divb
xchg
pop
xchg
mov
dec
rclb
push
cmp
mov
push
fmull
inc
roll
movsb
rcll
cmp
out
add
addl
xor
aad
sbb
inc
and
lret
lcall
idivl
stc
mov
test
out
xor
imul
daa
sub
in
or
adc
lods
inc
push
sbb
and
cmc
push
mov
add
pop
jae
jg
les
xchg
shll
push
pusha
mov
stc
pushf
iret
repnz
add
inc
icebp
dec
mov
or
and
sbb
cmp
fnsave
test
adc
jae
loop
xchg
lea
loope
inc
mov
popf
int
push
cli
dec
das
sbb
dec
add
pop
jo
pushf
push
pop
fcmovne
mov
ret
jp
mov
loop
dec
stos
pushf
lahf
mov
push
cltd
in
mov
popa
fistl
outsl
out
loope
cmc
hlt
jle
outsb
cmc
dec
or
cmp
or
jbe
ja
sbb
jbe
addr16
push
jg
dec
test
adc
movsl
adc
xchg
data16
or
gs
ljmp
mov
adc
xor
sub
pop
mov
cmc
rcrl
adc
mov
cmp
or
dec
push
enter
popf
inc
or
lock
in
or
sti
mov
in
icebp
jmp
aam
push
push
cmp
add
sub
mov
aam
leave
cmp
lods
stos
mov
push
sbb
sub
jne
bnd
and
fcompl
aad
shrl
in
sbb
fcmovu
dec
xchg
fildl
mov
int3
sub
inc
adc
push
adc
cmp
cli
inc
dec
push
push
xor
xchg
xor
addb
mov
test
addb
mov
sub
cmpsl
inc
fcoml
lods
mov
daa
pop
jmp
into
jnp
mov
mov
pushf
xor
shrl
xchg
stos
imul
jle
dec
cmpsb
in
jae
add
push
add
inc
inc
aas
push
inc
push
rcrb
popf
fstpt
cmp
sar
sub
es
and
push
pop
and
inc
shrd
loop
mov
jecxz
bound
and
cmp
lret
jo
loop
aad
pop
or
rcrb
push
aad
cmp
lock
and
mov
sbb
enter
add
push
sub
clc
push
pop
xchg
in
outsl
xchg
in
lret
loop
nop
add
jecxz
fildll
mov
jne
movl
xor
mov
ljmp
cli
sarl
xor
push
ret
rcrb
lret
scas
push
inc
sub
fcoms
std
and
sbb
cmp
ret
scas
int
sub
xchg
addr16
cltd
fdivrs
cmp
popf
imul
dec
mov
jmp
rorb
repz
xor
xchg
cmp
cmpb
daa
es
hlt
add
mov
jg
dec
fdivl
cld
das
or
mov
mov
push
pusha
fildl
js
mov
adc
mov
imul
jecxz
push
in
data16
leave
mov
enter
adc
mov
xchg
jecxz
inc
adc
xor
aaa
xor
scas
fsubrs
add
loope
xchg
dec
cmc
or
pop
inc
andl
push
mov
test
in
jb
sub
push
push
mov
lret
mov
dec
mov
jmp
rorb
inc
icebp
fistl
sbb
cwtl
jmp
into
sub
loope
repnz
jns
and
fisubl
xor
cmp
fsubrl
mov
push
jae
mov
mov
sub
xchg
lahf
pop
cmp
or
cmc
sbb
mov
jge
cltd
lret
les
test
mov
insl
push
inc
loopne
mov
push
cmp
sub
or
pop
add
rclb
imul
dec
enter
xchg
cmp
in
cmp
cmp
mov
pop
clc
push
rcr
dec
dec
cwtl
add
mov
popf
cmpsb
pushf
lahf
lret
pop
lret
repz
xchg
sbb
pop
iret
xorb
stc
addr16
pop
sub
mov
loopne
lods
xor
mov
push
xor
add
mov
out
repz
lea
push
push
push
clc
push
ficomps
das
jbe
mov
pop
lcall
stc
out
cmc
pop
add
cmp
pusha
insl
mov
sbb
or
dec
jge
ror
loopne
sti
gs
push
sbb
movsl
inc
ja
mov
fs
mov
pop
xchg
div
pop
ljmp
mov
cld
inc
mulb
jg
add
pop
adc
orb
movl
cwtl
add
cmp
mov
scas
sbb
es
fdivrp
xchg
cmpsl
mov
mov
stos
loop
jo
jo
aaa
je
push
jl
stc
jle
sbb
cmpl
or
aam
or
adcb
rclb
in
fs
adc
and
dec
add
jnp
or
les
xor
xchg
dec
scas
lahf
dec
insb
loop
mov
mov
push
mov
movsl
xchg
mov
imul
lea
mov
call
faddl
ljmp
xor
mov
pop
add
insl
mov
push
cmp
nop
rol
mov
add
cmp
mov
xor
adc
in
ss
push
stos
push
cmp
jne,pn
push
aam
dec
xchg
adc
adc
jl
mov
sahf
divb
push
test
subl
fwait
mov
loop
mov
int
sbb
cs
aaa
cmp
cmp
dec
fdiv
decb
and
std
imul
sbb
mov
jns
or
and
sub
mov
adc
movsb
mov
mov
mov
lock
pop
daa
mov
imul
push
cmpl
cmp
daa
popf
jbe
cmp
xchg
in
xlat
arpl
adc
loopne
mov
and
movb
push
roll
iret
es
iret
add
ret
cmp
nop
inc
cli
aad
mov
mov
cwtl
jmp
enter
scas
outsl
sub
imul
imul
mov
std
mov
jo
in
xchg
ret
clc
scas
arpl
bound
cmp
push
dec
aaa
filds
or
and
bound
cmpsl
or
lock
mov
mov
bnd
mov
mov
or
out
push
cld
xor
scas
and
shrl
addr16
xchg
mov
ss
sub
jne
outsl
hlt
and
xor
pop
test
insl
in
pop
imull
movsl
jge
fisttps
and
push
xchg
mov
inc
outsl
fisttpll
inc
inc
testb
sub
xlat
lods
icebp
call
sub
and
inc
pop
aam
adc
push
xchg
push
hlt
ss
mov
clc
inc
push
sub
les
jecxz
adc
cli
out
cmp
push
popa
ss
push
je
sub
hlt
sub
inc
fwait
sub
mov
stc
and
xor
add
or
je
xor
push
add
mov
out
insb
xchg
add
jb
lcall
adc
loop
int
ret
push
shl
inc
lds
adc
ss
div
sub
stos
add
jle
push
js
cmp
xlat
xchg
mov
js
and
mov
aam
and
pop
push
lods
mov
jecxz
pop
iret
ss
mov
adc
enter
xchg
xor
outsb
popa
fldcw
lahf
and
xlat
lret
ret
enter
xchg
adc
pop
std
fisttpl
inc
lods
xor
mov
xchg
xchg
cmp
jo
push
xchg
lock
mov
mov
xchg
jg
pop
xchg
mull
jbe
outsb
adc
add
push
or
xor
mov
lret
icebp
push
addr16
rorb
sarb
fldcw
loope
adc
jg
adc
iret
pop
pop
cmp
cwtl
cmp
aas
or
adc
subb
jbe
adc
outsb
dec
hlt
loope
adc
add
movl
add
ret
shrb
enter
sub
add
sub
aaa
imul
sar
pushf
sbb
xchg
jg
insb
loopew
arpl
fcoms
push
mov
lcall
cmp
popf
sbbl
cs
fs
xchg
inc
out
lock
test
stc
sti
pop
outsl
cmp
or
jne
jmp
incl
mov
loop
ret
adc
xor
out
jmp
and
xchg
mov
stc
leave
sub
cmp
sbb
arpl
cmp
add
inc
leave
pop
out
inc
shr
xchg
mov
sbb
xchg
push
jmp
iret
push
dec
cltd
repnz
sub
cmc
or
ret
popa
in
ss
inc
mov
aad
and
adc
leave
push
sahf
cmp
jecxz
repnz
mov
sbb
sub
cld
inc
out
push
lods
xor
jge
xor
cmp
jle
jo
dec
test
mov
mov
test
and
pop
inc
repz
adc
mov
add
dec
and
dec
xor
fnstsw
jns
loope
jb
and
cmp
mov
xchg
sub
sti
ss
imul
scas
jb
fiaddl
and
mov
loopne
mov
data16
dec
xor
sbb
loope
pop
addl
orb
cmpsl
cltd
pop
movsl
push
stos
xchg
sub
mov
orl
stos
pop
inc
mov
sbbl
out
mov
pushf
cmpsb
dec
xchg
cli
test
mov
rcrl
dec
sub
adc
pop
xor
hlt
aam
mov
andb
xchg
lcall
mov
jl
push
jle
sub
and
aaa
pop
stos
and
fld
sub
test
xor
aam
ucomiss
test
call
out
stos
in
push
jno
mov
enter
sbb
ds
repz
cmc
inc
sub
int3
dec
gs
test
sahf
mov
aam
aas
mov
rclw
cli
cmp
mov
inc
in
push
ret
push
mov
add
cwtl
jb
iret
push
test
push
sbb
mov
push
ja
cld
pop
push
add
push
cmp
loop
jecxz,pn
mov
sbb
mulb
stos
and
fsin
dec
xor
push
stos
pmulhuw
push
js
pushf
cld
dec
or
lahf
inc
sub
cmp
add
mov
xchg
lods
mov
fistpll
xor
in
mov
test
movsl
cmpsb
adc
pop
sub
xor
hlt
cs
movsl
dec
mov
mov
cmp
pop
mov
rol
cmp
mov
jae
test
leave
mov
push
add
push
jbe
stos
rclb
into
pop
pop
sbb
popa
sbb
mov
loop
cmp
pop
leave
into
and
pop
icebp
int3
gs
leave
cs
aas
jnp
inc
mov
mov
push
sbb
out
and
and
lahf
outsb
pop
incb
gs
clc
push
in
aaa
repnz
popa
lcall
mov
notb
jl
bound
ret
add
mov
jecxz
ja
mov
sahf
mov
dec
imul
sbb
sti
stos
adc
add
out
dec
fwait
mov
testl
aas
aaa
scas
xchg
sbb
fcmovbe
jecxz
dec
repz
push
xchg
xchg
adc
add
andb
out
out
out
xchg
rcrb
sub
icebp
push
adc
insl
nop
adc
jno
pop
mov
dec
lcall
xchg
push
and
bnd
or
in
addb
mov
ss
push
inc
sahf
xor
cmc
int3
sub
pushf
ja
jp
jg
sbb
nop
es
popa
test
movsl
outsb
mov
andl
imul
sub
push
ds
xchg
xchg
pop
xchg
data16
push
push
imul
stos
imul
push
xchg
add
es
adc
push
xor
cmp
mov
clc
imul
and
inc
in
mov
mov
sub
inc
sub
sbb
fldt
dec
pop
adc
sub
xor
fistpl
adc
cmc
jnp
sub
fsubrs
dec
test
ret
cmp
imul
in
pop
or
mov
jae
mov
push
lods
rcll
stos
aad
loopne
mov
dec
inc
xor
imul
dec
iret
pop
xor
ficoml
sub
xchg
loope
insl
add
in
sbb
inc
js
lods
jp
sub
aas
mov
int
enter
or
cli
inc
repnz
cmpsb
lods
ffree
iret
xor
mov
dec
insl
pop
js
jmp
movsb
and
flds
push
rcrb
loopne
sahf
popa
push
insl
adc
loopne
mov
aaa
inc
es
fs
mov
cmp
mov
inc
das
push
push
imul
mov
repz
pop
sub
sbb
xor
mov
mov
inc
sbb
xor
jecxz
xor
mov
cmp
stos
test
mov
leave
rcrl
aas
add
add
or
sub
fwait
xor
enter
lock
fwait
dec
leave
mov
inc
cmpsl
ss
scas
test
int
into
sub
cmp
push
mov
data16
xor
leave
pop
push
mov
lds
lahf
pop
sahf
inc
xor
push
mov
inc
mov
test
fimull
add
fdivs
aam
mov
pop
sub
movsl
mov
xchg
aaa
cmp
inc
ja
roll
gs
shl
jo
sbb
fwait
and
fadd
jae
dec
cmc
xor
subl
xor
and
sbb
orb
ds
push
mov
add
sahf
dec
push
popa
out
or
gs
xor
test
adc
dec
and
rcr
loop
das
fcompl
xchg
jmp
mov
fwait
pusha
xchg
add
rorb
lea
ss
lods
xchg
fistpll
lods
rolb
arpl
cltd
cwtl
xor
xchg
pop
in
cmc
sub
sub
jmp
push
cmp
repz
xlat
mov
hlt
pusha
es
cld
jb
mov
out
cmp
adc
xchg
and
icebp
out
adc
adc
inc
shl
aas
xchg
push
ficompl
das
sbb
pop
enter
inc
mov
sub
and
sbb
xor
cmpsb
push
stos
fistl
iret
pop
dec
loope
lods
adc
jnp
pushf
loopne
pop
lret
sub
xchg
stos
lods
out
outsl
cwtl
inc
xor
in
cmp
lods
push
lret
enter
dec
push
je
fs
dec
adc
or
xorl
cmpsb
lods
lds
mov
cwtl
add
loope
xchg
pop
push
lahf
cmp
fwait
cmp
std
add
out
repz
repnz
push
lds
addb
and
xor
lds
lods
repz
gs
xchg
lcall
fucomip
pop
add
leave
out
or
pop
sahf
inc
add
push
lock
push
sub
adc
cltd
add
std
mov
sbb
fadds
imul
mov
adc
adcb
aaa
xor
mov
rclb
sarb
orb
lcall
pop
fwait
cltd
cmp
sub
push
xchg
int3
loop
fmull
mov
je
mov
popf
scas
xchg
test
xchg
inc
push
cmc
scas
push
in
lcall
outsb
sbb
mov
mov
xor
imul
fwait
xchg
lods
and
pop
and
adc
sub
mov
movsb
lock
inc
and
push
or
aas
xchg
ljmp
ljmp
in
sti
add
mov
xchg
stos
jge
test
dec
adc
push
jp
sub
add
loope
cli
ret
mov
or
lock
push
mov
mov
mov
push
push
insb
lock
sub
aad
pusha
shlb
sbb
inc
pop
xchg
das
or
mov
sbb
imul
ret
jnp
pop
jnp
clc
les
add
cmpsl
mov
sti
jg
aad
jmp
in
stc
mov
cmp
lahf
movsb
ret
sahf
xor
mov
insb
out
stc
xor
es
mov
pop
fbld
arpl
sbb
jbe
or
or
scas
mov
outsl
dec
imul
cwtl
jecxz
iret
xchg
scas
push
and
mov
sbb
ja
imul
aas
or
iret
mov
cmpb
fisttps
loopne
and
push
add
sbb
scas
mov
push
adc
or
adc
dec
push
ljmp
ja
aam
popfw
fmull
mov
ror
ret
mov
scas
sbb
int3
xor
mov
jecxz
push
subl
clc
mov
jb
pop
aam
push
repnz
cltd
mov
movsb
sarl
hlt
sbb
adc
cltd
addb
outsl
ljmp
fwait
imul
mul
sti
jno
bound
je
xchg
sti
int3
pop
pop
stos
pop
mov
sbb
add
fwait
mov
mov
or
loopne
pop
mov
pop
das
push
sub
outsb
out
and
lock
out
mov
ror
pop
fisttps
inc
mov
xor
call
mov
fcmovbe
xchg
rcll
ss
sbb
shll
add
sbb
mov
xor
sbb
outsl
fwait
push
cmp
cmpsb
pop
xor
fldenv
xchg
inc
mov
fdivs
add
inc
and
addb
mov
bound
mov
repnz
pusha
loopne
test
xchg
and
mov
push
movsl
xchg
and
cmc
test
fiaddl
mov
mov
test
jns
push
and
dec
cwtl
pop
cmp
push
adc
cmp
add
push
pop
push
lds
adcb
xchg
lea
mov
add
dec
into
mov
loop
dec
push
bound
jecxz
ret
dec
fwait
ret
mov
cmp
inc
mov
xor
dec
jecxz
mull
loopne
adc
mov
mov
mov
jecxz
inc
lea
pushf
push
sub
movsl
cmpxchg
jno
and
pop
mov
cmp
cmpsb
cmp
jo
insb
add
enter
ljmp
mov
push
sub
loope
push
iret
pop
mov
lods
adc
lcall
shll
jmp
addb
or
mov
or
or
jb
mov
lods
fisubs
shll
jge
or
ljmp
push
aad
xor
mov
push
add
rorb
insl
cltd
inc
add
js
xchg
or
sbb
mov
jno
fstpl
fistps
call
cltd
out
jo
xor
xor
xor
xchg
fnstenv
push
jns
fcom
test
xchg
outsb
adc
mov
mov
dec
dec
imul
jle
xor
je
cmp
adc
adc
aaa
push
loope
dec
pop
mov
in
adc
mov
cmpsb
xor
push
mov
loopne
xor
pop
cmpsb
pop
mov
adc
sti
xlat
ljmp
movsb
gs
arpl
shrb
ret
iret
lods
int
add
fimuls
jnp
shlb
es
aaa
jnp
shll
or
mov
push
lds
fildll
mov
ror
add
or
mov
jnp
add
leave
add
sbb
popa
mov
in
aas
xchg
mov
arpl
fbld
mov
hlt
add
dec
pop
loop
icebp
addr16
lcall
jl
loopne
xlat
shlb
mov
cwtl
cwtl
xchg
jne
or
xchg
call
lahf
jmp
sub
ret
or
outsl
adc
mov
sub
add
and
fstl
hlt
aam
sbb
push
adc
divb
das
xchg
add
pop
addr16
aam
rsm
sub
jle
gs
out
xchg
clc
jnp
pop
pop
mov
shrb
xor
push
xchg
das
sarl
sub
or
mov
fldl
mov
fnsave
pusha
lds
subl
pop
xchg
cmpsl
adc
repnz
imul
mov
cmpl
rcrb
cli
xchg
xor
add
test
pop
test
or
ret
or
loope
fs
xchg
xor
lret
xor
lret
lcall
imulb
lock
cmc
dec
push
into
add
je
sbb
lods
xchg
dec
dec
js
pop
lods
fnsave
mov
sti
call
sti
mov
dec
mov
cmc
out
ror
nop
test
sbb
pushf
mov
cld
jo
push
pop
es
pop
add
jmp
push
shrl
rcll
arpl
add
add
add
fwait
push
aaa
jmp
dec
aas
inc
stc
lds
insb
pop
jae
inc
dec
inc
das
adc
mov
push
decb
mov
push
cmp
in
xor
into
xchg
jb
loopne
or
xor
push
pop
and
mov
rol
mov
adc
aam
std
inc
mov
insb
jnp
xlat
push
add
inc
lods
dec
cltd
imul
movsl
inc
mov
addr16
outsl
xchg
ljmp
inc
mov
sub
or
adc
sub
in
stos
aaa
pop
xchg
in
icebp
xchg
rorb
sub
out
insl
jns
mov
or
cmp
or
imul
fsts
aad
lea
add
sbb
mov
jb
pop
popf
mov
xor
das
mov
sub
mov
std
pop
mov
testl
push
leave
cmp
pop
movsb
inc
push
push
cltd
aad
pop
loop
imul
mov
dec
mov
push
aad
sahf
inc
rorl
push
ret
and
sti
cmp
mov
xchg
loopne
sbb
sahf
outsl
jo
int
add
mov
lea
jb
cltd
mov
ss
mov
mov
mov
cmp
mov
sar
mov
ljmp
std
pop
jbe
mov
insl
mov
jmp
cmp
addr16
pop
xchg
inc
popf
dec
test
mov
xchg
push
or
rorb
idivb
push
jl
addr16
inc
arpl
and
adc
out
cmpsb
jecxz
ja
xchg
mov
adc
pushf
repnz
jp
jae
pusha
arpl
cmpsl
dec
gs
inc
xchg
mov
shll
stos
push
aas
mov
dec
imul
and
mov
lds
xchg
push
int
sbb
data16
inc
insl
test
insl
sti
mov
sbbl
cmp
sub
repnz
lret
fstp
push
sbb
mov
in
ds
jmp
scas
mov
int
jno
add
notb
es
out
stos
divb
sbb
lock
int3
xchg
xchg
cltd
push
lcall
ret
aas
jp
js
xor
test
shll
repz
int
gs
stos
jecxz
jle
out
xchg
adc
adc
jae
sub
icebp
adc
mov
movsl
push
jp
mov
icebp
xchg
gs
jbe
in
call
pop
jbe
mov
xchg
mov
add
xchg
sbb
mov
mov
bound
std
test
xlat
sub
movb
mov
adc
arpl
adc
jne
popa
cltd
sub
inc
js
sbbl
ret
xchg
shlb
lcall
sti
stc
repnz
outsb
adc
pop
jge
popa
cltd
out
add
push
pop
rcrl
stc
jns
xchg
cmpsb
inc
and
mov
xchg
es
loopne
sbb
or
xchg
lahf
into
mov
cwtl
xchg
or
sub
or
add
nop
nop
mov
out
jge
insl
bound
jge
inc
ja
das
insl
lahf
sbb
sarb
inc
scas
jmp
inc
dec
ljmp
or
jecxz
mov
push
in
mov
add
and
and
lcall
out
cmp
loopne
pop
in
inc
cmp
mov
addb
dec
imul
in
add
scas
bound
scas
jge
xchg
in
pop
out
inc
cmp
aas
sub
or
rcll
ret
sub
or
cmpl
xor
mov
adc
movsb
inc
jne
gs
nop
push
xchg
in
ret
ret
jnp
inc
pushf
int
fisttps
adc
push
push
fs
arpl
or
sub
push
push
pop
inc
sbb
adc
pop
sbb
add
rcr
arpl
mov
fadds
lods
mov
or
push
lock
or
xchg
pop
adc
rcrb
sub
arpl
mov
lods
cld
inc
push
subl
and
repz
sub
dec
and
adc
sub
xchg
add
jl
pushl
mov
lods
pop
mov
movsb
iret
notl
xchg
popf
cmp
xchg
icebp
fwait
test
push
mov
out
lds
mov
and
lcall
leave
dec
mov
jecxz
aad
testl
outsb
das
mov
mov
lock
test
fwait
mov
add
sub
out
inc
sub
and
mov
dec
dec
popa
divb
mov
add
mov
xor
hlt
sub
subl
dec
add
hlt
fiadds
add
jb
and
ret
inc
jo
mov
lcall
je
pop
cmc
push
cmp
imul
sbb
js
add
pop
outsl
push
jne
push
xlat
insb
dec
push
jmp
fidivs
mov
pop
pop
jne
xchg
stos
mov
sbb
hlt
nop
sbb
scas
mov
mov
notl
int
xor
repnz
and
sbb
into
xor
mov
and
push
scas
xor
mov
adc
adc
push
add
inc
ss
inc
dec
cltd
inc
pop
jne
dec
ret
ret
rolb
ret
cli
mov
lret
and
sub
in
mov
movsb
jnp
bound
fsubl
in
sub
pop
mov
in
mov
add
sti
repz
ret
repz
or
cmpsb
fmull
bound
push
icebp
fistpll
bound
xchg
dec
fcmovnb
insb
cld
nop
inc
and
xor
sub
mov
test
ficoms
rclb
divl
jp
ret
test
sub
or
mov
jae
mov
adc
or
jmp
mov
in
stc
lret
imull
add
loope
std
xchg
mov
aas
jle
mov
fcmovu
into
sub
xchg
adc
in
add
and
mov
js
adc
sbb
push
adc
xchg
dec
mov
dec
lds
mov
xor
fistps
add
xor
pop
out
rorl
and
xchg
jmp
add
cltd
jp
test
notb
outsb
cld
cltd
hlt
enter
mov
ss
movsl
push
push
rolb
or
in
ret
stos
flds
add
leave
mov
cli
adc
xor
aaa
rcrl
mov
test
push
dec
es
mov
add
in
or
cmc
outsb
cmpsl
cmp
mov
jo
jno
mov
out
pop
sbb
cli
setno
daa
orb
dec
dec
shlb
and
push
xor
mov
ljmp
push
cmovo
adc
pop
loop
sub
cmp
shrl
pop
scas
cltd
xor
mov
push
mov
push
pop
loope
dec
imul
ss
and
cmpsl
in
aas
jnp
es
in
arpl
ljmp
clc
movsb
adc
and
shr
std
fimuls
ret
mov
outsb
push
mov
aad
lret
popa
test
add
xor
mov
and
pusha
adc
dec
xchg
repz
scas
imul
rcr
ret
cli
xor
jae
xchg
lcall
popa
loopne
lock
in
xchg
mov
mov
sbb
mov
xchg
mov
xor
imul
popf
lds
xor
clc
xchg
repnz
lds
dec
test
pop
test
lods
stos
notb
lcall
nop
jmp
lock
pushf
pop
enter
bound
add
dec
push
icebp
inc
cs
add
iret
cmc
mov
and
test
xchg
pushf
and
mov
or
adc
push
push
pop
outsb
xchg
cs
sub
int3
jl
pop
add
je
leave
mov
jbe
pop
je
jb
inc
mov
and
shrl
mov
jbe
push
fidivl
stos
xor
or
push
xchg
adc
aam
clc
xchg
jle
sbb
test
inc
mov
lret
push
pop
leave
icebp
xchg
sbb
xchg
cld
add
xor
dec
push
adc
rcrb
lret
pop
jo
or
mov
jae
ret
fiadds
mov
xor
xor
sti
fs
mov
test
jmp
cmp
bnd
andb
jo
pushf
cs
clc
hlt
lahf
aaa
cmpsb
negl
xchg
sub
cmc
push
cld
es
stos
bound
push
push
lds
lret
jge
popa
pop
cli
mov
mov
lods
cmpsl
mov
movsb
repz
enter
mov
arpl
outsl
or
pop
mov
mov
fcompl
stos
xchg
or
push
pavgb
loope
adc
jle
mov
addr16
sub
push
mov
scas
jg
in
jae
int
test
xor
sub
sti
jecxz
insl
iret
push
test
flds
adc
and
stos
or
adc
fcoms
xchg
clc
stos
sbb
pop
adc
or
cs
gs
les
sbb
add
aaa
mov
cmp
and
push
push
xorl
fsubs
pop
inc
mov
xchg
test
iret
ljmp
jge
das
jbe
popf
jg
and
lcall
cltd
dec
and
push
pop
mov
imul
test
daa
inc
or
cmp
xchg
push
mov
test
inc
dec
loopne
xchg
cmp
popa
cltd
jl
imul
shrd
pop
call
inc
rol
jbe
xchg
pop
call
xor
inc
push
jno
add
push
movsl
inc
pusha
push
sbb
imul
pushf
mov
in
inc
inc
jo
lods
out
hlt
or
cmp
sub
gs
shr
test
vmovsd
fs
mov
jge
xchg
out
out
cmp
movsb
punpckhbw
movb
jge
adc
shlb
stc
push
outsl
mov
stos
inc
pop
rcll
mov
lahf
and
pop
arpl
ficoml
gs
mov
inc
inc
sbb
loop
add
push
fwait
dec
sbbl
and
cmp
scas
pop
mov
pop
pop
cmp
fmull
add
es
and
imul
mov
mov
pop
lods
jns
cmp
or
out
xor
bound
orb
sub
jbe
es
xchg
push
mov
or
lret
sbb
dec
rorl
push
pop
das
pop
xchg
or
jge
aas
fnstenv
outsl
inc
xchg
int3
add
sahf
pop
xor
shlb
jp
out
xchg
lock
xor
pop
enter
pop
add
aad
mov
cmp
pop
divl
psubusw
imul
inc
add
inc
mov
xchg
iret
cld
xlat
arpl
inc
sub
jecxz
adc
adc
pop
enter
cwtl
sbb
shlb
arpl
ja
rclb
hlt
scas
xchg
ds
rcrb
jae
adc
and
pop
lds
or
pushf
add
fcomps
inc
das
fisubl
test
or
lcall
mov
jmp
fidivrs
adc
shrl
lods
aas
jne
pop
cli
loopne,pt
push
add
pop
add
inc
rcll
pop
xchg
sarl
ss
test
inc
mov
sub
je
jecxz
push
test
inc
jne
lods
push
sbb
shl
and
xchg
xor
sub
inc
mov
inc
cmp
push
hlt
bound
mov
sbb
out
lock
mov
inc
sub
cld
adc
or
mov
mov
scas
pop
mov
stc
adc
sbb
xor
out
cmp
call
push
inc
lahf
sub
mov
lret
lret
mov
pusha
xor
stos
mov
addr16
in
daa
inc
sbb
nop
jo
imul
aad
mov
and
adc
adc
aas
divl
sub
cwtl
adc
icebp
mov
lcall
jg
jp
xchg
int3
aam
xchg
inc
pop
or
clc
outsb
pop
out
push
cmp
popf
aas
mov
aas
js
aas
jg
stc
inc
cmpl
int3
std
leave
das
addr16
xchg
in
jae
pop
leave
push
insl
add
clc
shrd
pop
xlat
mov
push
mov
xor
xor
mov
ds
adc
sub
sub
xchg
xlat
enter
fwait
popa
in
pop
mov
in
mov
clc
testl
repz
mov
outsb
out
mov
lods
mov
out
and
test
ss
pop
test
rcrb
push
addl
xbegin
rorb
enter
icebp
ret
stc
xor
ficomps
inc
mov
outsb
pop
xor
mov
aam
test
loop
mov
xchg
enter
in
add
movb
mov
jnp
dec
sahf
xor
sub
ficompl
test
sub
xor
sbb
loopne
insl
outsl
add
fsubl
add
enter
test
hlt
insl
push
jnp
add
imul
std
mov
mov
sub
xchg
movnti
sub
cltd
loop
loop
ficoms
mov
cmp
dec
dec
stos
cmc
xor
out
mov
sbb
dec
mov
popf
leave
sbb
xchg
mov
sub
lods
fisubl
dec
and
subl
cmp
popf
pop
cmp
and
pop
mov
or
xchg
out
mov
and
inc
jbe
cwtl
jbe
aaa
and
mov
xor
int3
icebp
fnstcw
sti
iret
aad
pusha
insl
pop
xchg
inc
stos
nop
cli
xor
jmp
imul
mov
enter
mov
dec
sbb
dec
insb
adc
and
jae
mov
push
mov
shlb
addb
test
bound
sub
adc
ljmp
sar
pop
mov
pop
sub
sbb
rolb
xor
cmp
xchg
or
loope
lahf
mov
lods
xchg
lods
repnz
pop
lock
loop
or
dec
add
outsl
mov
mov
push
stos
push
cs
mov
test
movsl
jl
cmp
hlt
int
jge
and
add
in
push
aad
or
mov
shl
je
test
jecxz
cmpb
cmp
dec
jg
pop
dec
lds
xchg
clc
sahf
mov
push
push
sub
pop
gs
sbb
lods
loopne
pop
rorb
mov
mov
loopne
outsl
aas
lods
dec
add
pop
dec
cmp
popa
mov
out
pop
fildl
leave
scas
cltd
xchg
out
add
mov
pop
sub
xchg
imul
test
mov
ja
jne
mov
cmp
jne
adcl
sar
jecxz
leave
pop
push
out
sbb
in
cmp
pop
cwtl
mov
inc
int
pop
ror
jle
cmp
xchg
sbb
pushf
jo
add
xchg
push
pop
xchg
je
popf
dec
mov
scas
inc
iret
pushf
push
and
je
gs
dec
cs
add
cltd
pop
xchg
sti
loop
xlat
pop
xor
xlat
jmp
mov
cmc
push
lea
fildl
pop
mov
call
mov
push
in
outsl
cmp
movb
enter
ret
xlat
push
inc
in
mov
add
push
int
inc
in
out
int3
jg
arpl
add
pop
ja
inc
shlb
xor
mov
in
sub
mov
fs
data16
shr
into
push
gs
jge
mov
fldcw
push
cli
loope
inc
ljmp
loopne
jns
mov
call
in
lcall
ret
test
dec
leave
aas
xchg
and
xor
popa
in
mulb
inc
mov
sbb
scas
out
sub
add
aas
jl,pn
fs
or
es
mov
andb
sti
into
xchg
mov
sub
push
jno
cmovp
cmp
inc
xor
push
je
lcall
test
mov
push
push
in
sbb
shl
sub
out
das
loop
mov
xchg
jbe
pop
stos
mov
jno
cmpsl
push
pop
repz
push
pop
jp
rolb
inc
xor
inc
mov
mov
in
das
call
push
scas
inc
or
xchg
dec
shrl
sub
scas
jae
popa
ja
jae
in
ss
xor
test
lods
push
sub
xor
in
push
push
loopne
mov
mov
jle
add
lock
lds
mov
dec
cmp
sbb
repz
jb
adc
jbe
push
xchg
in
jne
add
cld
jmp
push
in
inc
jmp
and
xchg
cmp
stos
pop
stos
jb
dec
jno
jecxz
or
enter
pop
or
jb
out
or
in
xchg
sbb
push
mov
or
arpl
stos
ret
addr16
lods
adc
push
inc
mov
or
mov
mov
mov
dec
sub
pop
mov
bound
add
enter
lock
add
jne
stos
xchg
jg
out
sbb
pop
sbb
lods
pop
into
sub
cmpsl
insl
adc
mov
mov
inc
shrb
xchg
sub
mov
lods
xchg
push
cmp
push
jmp
jbe
push
xor
dec
mov
ds
out
mov
mov
push
imul
pop
sar
sbb
push
out
jl
xchg
out
inc
inc
scas
jae
pop
xor
enter
in
out
clc
in
fstpl
lock
cli
or
arpl
ljmp
jb
ss
repnz
adc
fiaddl
mov
sbb
jl
jmp
push
xorl
lret
adc
xor
jmp
xor
cltd
jp
loop
inc
cmp
dec
push
into
dec
push
pop
sbb
ja
xchg
adc
addr16
mov
out
test
call
sub
dec
inc
sbb
ret
push
lret
lret
push
cmp
mov
dec
les
or
sbb
pusha
push
repz
les
test
xchg
xchg
xchg
xchg
push
insb
push
lcall
inc
scas
pop
dec
addr16
out
sub
inc
adc
je
test
jb
or
dec
pop
pop
arpl
lods
call
mov
out
cmp
daa
jecxz
mov
xor
in
mov
cmpsl
int
in
or
mov
push
imul
ret
push
adc
sbb
xor
push
dec
loop
stc
jmp
aam
pop
push
inc
repnz
enter
stc
add
or
fistpll
inc
mov
push
popf
xor
mov
xchg
pop
ret
xchg
add
leave
cmp
dec
or
stos
test
clc
xchg
insl
jmp
imul
insb
test
mov
or
and
or
cmpsl
xor
fstps
int3
mov
ja
test
sti
mov
xchg
aaa
sub
mov
dec
sbbb
stos
mov
int3
test
insl
mov
rcrl
sbb
loopne
movsl
rcr
mov
rolb
push
xor
lret
cmpb
cltd
out
jns
jno
in
or
fwait
icebp
fwait
push
push
cltd
out
cmpsl
aaa
fwait
data16
mov
sar
mov
xor
mov
mov
xor
bound
push
mov
mov
lds
or
jb
orb
nop
sbb
lea
cmp
mov
pop
shll
and
hlt
jge
mov
push
mov
mov
fnsave
mov
adc
out
push
psrld
ljmp
cwtl
ljmp
sbb
xlat
jmp
loopne
insl
pop
and
xor
mov
xor
lods
sbb
add
pop
mov
in
xor
xchg
mov
pop
aas
mov
dec
add
mov
outsb
lcallw
push
gs
jne
addr16
mov
dec
pop
shrl
cmpsb
fs
cmpsb
adc
negb
pop
jg
sub
and
cmp
int
sahf
movsl
inc
fmul
jg
data16
stos
ficoml
sarl
push
insl
test
sub
inc
jp
cmc
xchg
or
dec
pop
test
cmp
xor
jae
scas
xor
test
push
cmp
adc
out
cmp
xor
cmp
out
jmp
rcr
pop
mov
ss
cmp
xor
fistl
out
xor
cmp
out
fldl
jle
stc
aaa
arpl
push
int
jecxz
js
imul
add
inc
jmp
rcrl
pop
pop
insb
mov
repz
push
aaa
and
cld
ret
jae
lock
pop
xchg
push
mov
xchg
ja
dec
push
push
inc
jae
sahf
gs
push
decl
jg
push
inc
lds
mov
push
repnz
shl
sbb
mov
pop
popf
mov
jns
addr16
sub
lock
xor
or
cmp
inc
mov
inc
xor
iret
out
dec
sub
lret
push
or
cmp
mov
push
fnstenv
scas
cmp
scas
mov
imul
jb
jbe
mov
orb
adc
cltd
xchg
dec
mov
popf
test
fisubl
inc
movsb
test
loope
cmp
pop
mov
mov
fidivl
outsb
movsl
aam
sbb
cmp
dec
into
scas
out
mov
std
enter
pop
xchg
add
imul
mov
or
push
push
or
adc
mov
shl
xor
test
inc
ljmp
std
arpl
fwait
in
xor
push
dec
lret
lea
pop
mov
sahf
push
pop
inc
push
ficoml
jnp
mov
adc
popf
cmp
xchg
jp
mov
push
xor
adc
lahf
inc
dec
push
cmp
xchg
xor
jo
jo
xor
add
cs
imul
jg
adc
add
lods
mov
push
cmpsl
std
dec
inc
sub
sbb
push
lods
jl
pop
pop
and
xorl
ja
cmp
pop
loopne
jg
outsl
inc
repz
cmp
mov
mov
push
test
push
cmpsb
sti
and
int
cmp
sub
xchg
bound
sbb
test
test
cmp
pop
hlt
jnp
bnd
jecxz
testl
pop
sbb
sub
mov
sub
out
dec
loope
push
int3
pop
pop
or
cmp
loopne
and
xchg
imul
fs
stc
push
or
fsub
cli
mov
inc
into
mov
sbb
inc
or
lods
movsl
jmp
cli
cs
iret
sub
int3
or
fsubp
mov
xor
shl
ret
mov
out
pusha
lods
mov
fnstcw
mov
int
imul
push
cwtd
xor
in
mov
mov
test
fisubs
and
jle
adc
inc
subl
fisubrl
pop
push
stc
sbb
jno
arpl
adc
xchg
mov
mov
lea
test
xchg
add
push
push
and
or
mov
xchg
sub
push
imul
mov
out
inc
push
mov
stos
xor
jns
ljmp
test
adc
imul
roll
or
lds
push
cmc
and
mov
mov
dec
mov
ret
cmp
lds
pop
insb
cmp
jb
push
pop
xor
push
inc
jns
push
mov
rep
rcr
inc
arpl
int3
je
call
scas
daa
test
ret
sub
cmpsb
xor
pop
mov
insl
divb
movsl
lcall
mov
fildll
xor
pusha
xchg
adc
sahf
push
clc
xor
outsb
mov
jge
lock
decl
and
clc
dec
adc
xchg
test
dec
sbbl
ja
mov
les
hlt
cmc
add
pop
lret
xlat
std
xor
mov
fsqrt
push
adc
mov
cmp
pop
daa
jge
in
xchg
icebp
jecxz
inc
clc
pop
icebp
outsl
lahf
jbe
cmpsl
lods
sbb
inc
push
movsb
sti
sub
push
fcom
or
push
xchg
sub
mov
js
sti
add
xlat
out
data16
adc
out
lods
or
decb
sbb
mov
pop
pop
xor
dec
jbe
lret
popa
pop
insb
lea
mull
push
imul
mov
xchg
dec
mov
or
xor
or
aam
and
pushf
bound
inc
cmpsb
mov
adc
test
inc
lret
inc
mov
das
mov
imul
call
call
leave
cli
fwait
push
popa
jb
sahf
fs
test
aas
push
mov
cmp
xor
dec
lods
mov
lods
loope
call
call
dec
jle
push
pop
imul
adc
cwtl
inc
or
aaa
jp
test
rcrl
jmp
cwtl
xchg
add
adc
add
mov
movsl
sbb
imul
nop
inc
in
inc
icebp
fldl
lods
in
shrl
pop
lret
loope
push
cmp
out
inc
fcomi
mov
pop
mov
push
ss
jecxz
test
pop
lea
pushl
ret
ja
sarb
arpl
push
xor
aad
scas
sub
jns
add
ret
mov
rorb
pop
leave
aas
je
sub
jns
mov
sti
mov
adc
mov
pop
pushf
jmp
or
loop
xlat
in
stos
fisubrs
pop
out
adc
adc
xor
out
stc
sbb
fwait
cmp
cwtl
xlat
iret
mov
ffree
imul
mov
aaa
into
inc
mov
sub
jmp
fistps
add
mov
cwtl
adc
stos
pushf
out
jns
stos
cmpsb
adc
popa
ljmp
cmpsb
repnz
aaa
push
ja
iret
rorl
ss
pop
mov
stos
inc
push
add
mov
jp
or
pop
sar
je
push
mov
je
outsl
imul
addr16
cmp
cmp
popa
cmovs
jno
pop
pusha
jno
lret
lcall
or
cmp
movsl
pop
jbe
jb
xchg
or
jle
and
xchg
ficoms
inc
insl
cmc
xlat
or
jo
ja
mov
add
jae
aam
data16
js
rcll
sub
mov
xchg
clc
enter
sbb
xor
andl
fstpt
xor
adc
xor
sti
imul
test
dec
jno
lods
out
inc
pop
inc
test
sbb
jecxz,pt
nop
lock
adc
into
les
add
pop
mov
cmp
ds
ffree
ja
xchg
mov
or
cmpsb
notb
sbb
dec
mov
or
imul
test
test
jne
ja
mov
hlt
xchg
xchg
xchg
lcall
hlt
push
mov
or
sbb
and
test
fidivrs
push
mov
push
push
lahf
mov
test
shlb
and
stc
out
scas
mov
inc
mov
sti
mov
loopne
ljmp
ja
mov
fsubrl
out
and
cmpsl
outsl
add
popa
and
or
add
adc
das
adc
mov
sbb
xor
push
mov
fisttps
hlt
insb
push
iret
dec
pop
ljmp
mov
lock
popf
dec
xlat
sub
pop
xor
and
and
in
int
push
jns
sbb
adc
hlt
push
lahf
aad
aad
stos
cmp
sbb
ret
dec
test
jno
push
mov
mov
negb
mov
inc
mov
or
int
xchg
cwtl
jbe
mov
sbb
cmc
xor
jbe
pop
loopne
push
add
dec
jp
push
outsb
mov
into
ret
dec
out
test
outsb
xor
int
insl
inc
and
xchg
cltd
loopne
sub
fisttpll
push
mov
inc
cld
jo
roll
mulb
push
stos
out
fildl
mov
mov
sub
adc
xor
pop
push
repnz
inc
out
or
mov
and
jg
in
rcrb
movsl
loopne
in
test
push
hlt
sub
fidivs
sbb
int
fmuls
out
xor
incb
sbb
and
jnp
mov
xlat
or
jno
dec
jo
addr16
cwtl
movsb
arpl
sarb
lds
push
pop
sbb
repz
pop
push
sbb
sti
mov
outsb
frstor
fbstp
int3
fsub
es
pusha
pusha
movsl
sbb
call
rcrl
lret
adc
scas
loop
pusha
clc
lods
ss
pop
out
add
mov
fcom
sub
xchg
aas
inc
xchg
pusha
out
pop
sbbl
psubb
sbb
xor
jp
iret
add
xchg
jmp
fistl
mov
lock
shl
daa
inc
pop
mov
mov
shll
movq
sbb
faddl
dec
xchg
push
mov
rcrl
mov
adc
ror
call
jbe
mov
cmp
shrl
pop
and
mov
icebp
rcll
sti
jne
mov
iret
fldt
cmp
cmc
jae
add
sbb
inc
decb
loop
sub
inc
sub
stc
mov
xor
or
ret
repz
jno
push
cltd
lock
or
int3
add
xchg
or
xchg
inc
in
xchg
mov
sbb
nop
sbb
mov
add
cmp
push
adc
lea
arpl
ss
outsl
test
nop
popa
inc
sub
sub
les
jp
nop
sar
push
and
inc
mov
dec
sbb
xor
shl
or
mov
mov
inc
xor
cli
mov
scas
xor
repnz
test
fdivr
sub
shll
sarl
movsl
pop
push
sub
mov
adc
loopne
inc
pusha
bound
jmp
lds
dec
mov
cmpsb
arpl
and
mov
add
jecxz
sbb
pop
movq
lahf
int
push
pop
test
std
out
pop
jb
push
out
fistpl
sub
les
lods
jne
clc
and
dec
xor
pop
fistl
je
cmpsl
insb
bound
cmpsb
test
push
mov
mov
mov
lret
int3
ja
call
or
xchg
addb
iret
mov
xor
mov
into
xor
inc
cwtl
loope
pop
adc
mov
pop
or
and
and
shrd
cmpsb
cltd
daa
mov
pop
repnz
xor
sbb
jae
jns
arpl
jecxz
sub
aam
outsb
inc
fdivr
pusha
pop
sbb
insl
jae
int
lods
lret
idivl
jb
outsb
mov
and
sub
push
mov
mov
scas
mov
loopne
nop
aam
cli
xchg
imul
arpl
jecxz
aas
xor
rolb
js
and
push
push
lods
mov
nop
cmp
mov
xor
mov
push
lahf
or
or
lock
and
sti
inc
pop
sbb
popf
int
add
cltd
testb
sub
xchg
xlat
jmp
add
push
mov
mov
mov
rcl
push
mov
jle
rcrb
test
mov
mov
int3
outsb
or
and
cld
scas
jnp
movsb
movsl
xlat
adc
enter
lock
dec
lahf
movsl
pop
xor
mov
loope
xchg
outsl
push
out
add
push
test
mov
nop
xchg
mov
or
mov
adc
inc
mov
loope
sbb
lret
mov
in
sahf
jb
fcompl
inc
lret
lret
orb
sub
jne
sbb
adc
mov
jp
mov
xchg
pop
inc
inc
cmpl
mov
mov
jnp
fdivrl
ret
jns
jno,pt
arpl
out
ljmp
je
jb
adc
cmpsb
in
movsb
cli
scas
or
cmp
loope
imul
jae
test
add
scas
mov
mov
test
test
test
sub
pusha
sbb
hlt
outsl
ds
ret
adc
cmp
sub
dec
fmull
test
push
lods
lods
dec
pop
push
sbb
dec
enter
rorl
in
mov
jecxz
js
ret
stos
add
adc
ret
cmp
rcl
enter
sbb
push
mov
int3
popa
push
jg
xchg
das
xor
mov
mov
fisttpll
daa
xchg
dec
stc
adc
mov
mov
mov
xor
jmp
int3
fsubs
fsubrs
mov
cmp
mov
aad
jmp
imul
fwait
or
push
int3
jp
lds
fistpl
mov
mov
xor
cwtl
add
inc
jae
in
into
and
rcl
das
mov
xchg
cmpsl
xchg
stos
jbe
divb
mov
test
sbbl
shr
cmp
cwtl
popa
mov
les
shl
mov
out
out
inc
sub
stos
test
sub
or
push
adc
dec
nop
mov
and
icebp
mov
out
jnp
adc
xchg
pop
pop
push
dec
out
cltd
lods
lds
push
jp
dec
sbb
push
dec
lret
test
jmp
and
pop
fcompl
pop
imul
xor
iret
sub
pusha
add
lret
xlat
pop
stos
or
addl
repnz
xor
clc
lcall
out
outsb
arpl
mov
test
mov
fs
subl
leave
or
sbb
xor
sbb
or
into
adc
pop
mov
mov
sbb
sbb
mov
xchg
fnstenv
sbb
add
push
add
pop
jl
cmp
xchg
test
pop
pop
inc
cwtl
test
mov
xor
scas
cmp
lods
pop
fldt
out
cs
sub
jbe
cli
xor
outsb
mov
xor
outsb
mov
stc
loopne
fldl
rol
mov
push
sub
repz
pop
insl
test
pop
jbe
stos
loop,pn
push
jns
add
and
adc
imul
out
les
adc
add
in
insb
pop
test
sbb
popa
ret
leave
loope
xchg
stc
pop
outsb
push
aaa
adc
inc
std
icebp
pushf
dec
push
jb
scas
pop
dec
mov
dec
pminsw
icebp
dec
xor
scas
inc
daa
or
cltd
arpl
xchg
movsl
repnz
mov
mov
cmp
stc
popa
addb
outsb
cmc
lcall
xor
mov
ss
dec
adc
ret
sti
scas
insl
dec
lds
cmp
jbe
test
cwtl
iret
into
push
rol
inc
repz
negl
stos
mov
lret
fs
sbb
push
iret
in
sub
jns
pushf
adc
and
out
in
ret
mov
dec
adc
daa
xor
jno
fcompl
lret
jb
pusha
dec
lds
cld
sub
xchg
ret
push
leave
and
sti
lret
adc
sbb
mov
sti
adc
mov
out
jne
out
test
adc
push
sub
sbb
xor
mov
pop
xor
mov
mov
add
and
ja
sub
add
stos
push
repz
aad
xor
push
mov
mov
sarl
sbb
movhps
xor
mov
das
fbld
ljmp
fwait
movsl
xchg
sub
filds
push
lret
mov
sub
push
lods
jle
cmpsl
dec
cmp
push
insl
jle
mov
adc
pop
pop
sbbl
enter
pop
mov
int3
jne
rcl
movsl
leave
and
loope
mov
dec
push
push
pusha
iret
dec
jnp
adc
je
cltd
les
adc
cmpl
cmp
je
int3
cmp
jns
pop
pop
push
js
mov
aam
cmpl
sub
bound
adc
cmc
aam
ret
cli
xchg
rolb
inc
xor
mov
jmp
sbb
sub
cs
or
mov
int3
imul
xor
cltd
out
js
arpl
test
aas
dec
sub
mov
dec
pop
adc
call
xchg
and
cmp
push
inc
dec
cmpsb
xor
jno
ret
push
sbb
cmp
test
lods
push
and
mov
inc
iret
dec
test
pusha
mov
inc
add
fildl
xchg
movsb
xor
test
pop
push
and
cmp
xchg
xchg
hlt
mov
jl
decb
cmp
push
lea
dec
out
sbb
scas
mov
data16
cmp
add
das
mov
sbb
push
out
and
loope
lret
int
xchg
xchg
jl
out
push
sub
lahf
adc
out
fistpll
cmp
call
cltd
jg
jmp
sub
sahf
cmp
bound
ret
and
lret
mov
dec
sbb
pop
jne
push
cmc
insl
pop
jmp
and
xor
sbb
mov
push
inc
movsb
mov
adcb
icebp
xchg
mov
pop
sbb
jnp
mov
into
incb
sbb
mov
leave
jge
int
sbb
repz
cld
orl
jb
xor
and
dec
jb
loope
popf
shlb
pop
int
mov
push
mov
pushf
dec
in
adc
ljmp
fdivrl
scas
stc
fmuls
fists
jbe
adc
dec
pop
cltd
jcxz
or
sbb
pop
pop
cmpb
jmp
xchg
shrb
fiadds
vcvtpd2dq
lret
je
mov
mov
enter
in
jo
out
into
cmp
xchg
xor
test
test
sbb
ljmp
sub
ret
lods
je
mov
call
jo
cli
testl
add
dec
les
cmp
rclb
mov
mov
sbb
mov
shlb
cmpsl
andps
fwait
push
sarl
xor
inc
inc
pusha
rorb
dec
push
fidivs
and
scas
add
mov
push
and
or
cmc
cltd
ret
xchg
scas
inc
adc
test
or
mulb
clc
mov
push
bound
rcrb
les
inc
xorb
lret
imul
fs
sub
mov
in
mov
mov
mov
xchg
push
sti
xor
add
or
xchg
scas
outsl
rcll
fdivrs
dec
pop
pop
int3
frstor
inc
push
imul
testl
cmp
loopne
pop
in
int3
stos
adc
std
std
popf
jne
push
add
in
in
enter
mov
sbb
ficoms
jne
or
ljmp
jno
mov
jmp
sti
adc
dec
mov
inc
sahf
hlt
and
mov
pop
jecxz
xor
les
push
mov
push
cmp
clc
in
cmc
out
or
xlat
out
ja
add
call
arpl
fcmovbe
les
aaa
sbb
ja
inc
daa
xor
sbb
xorl
cmp
nop
rcl
xchg
xor
sahf
or
mov
and
jl
adc
lret
sbb
pop
fildll
gs
stos
adc
lret
push
dec
ss
mov
andb
out
or
mov
sbb
out
mov
push
out
ret
imul
dec
enter
xor
iret
xor
scas
push
xor
adc
xchg
push
clc
loope
cs
cmpsb
jb
dec
scas
mov
lds
ds
loop
xchg
mov
xor
fwait
mov
xor
jle
sbb
xor
lcall
in
sbb
push
mov
jp
mov
leave
add
mov
xchg
ja
out
leave
jmp
jno
push
aam
xchg
jbe
in
pop
lods
hlt
mov
cli
addr16
xor
and
mov
fdiv
and
jmp
pushf
lret
inc
inc
sti
lds
int3
insb
mov
adcl
loopne
leave
add
xor
inc
inc
inc
int
shl
dec
gs
dec
das
mov
cmp
cmp
inc
adc
int3
add
dec
nop
iret
push
mov
jb
lods
inc
mov
sub
ret
shl
push
pop
xchg
dec
push
push
popa
test
pop
inc
adc
inc
test
or
adc
mov
repz
jbe
or
into
xchg
ret
sub
pop
and
cmp
pop
dec
insb
js
dec
mov
xchg
xchg
xchg
pop
jecxz
jbe
xor
fs
dec
leave
popa
pminub
jae
or
sub
aas
push
loope
cli
push
popl
add
mov
mov
gs
shlb
inc
das
push
out
xchg
and
in
test
aas
out
out
test
outsl
fwait
xor
jmp
ljmp
jb
push
movb
lea
jg
std
sub
sbb
mov
stos
in
jge
mov
pushl
popa
fcompl
lods
inc
sbb
cmpsb
add
cmpb
or
sti
cmp
pop
sub
inc
sub
cmp
int
xchg
xlat
pop
insb
cmp
cwtl
sub
ss
std
inc
inc
or
sub
push
scas
inc
aam
sbb
aas
mov
scas
jp
lahf
flds
pop
ds
add
aas
out
xorb
orb
sti
pop
sahf
jno
cld
aas
cwtl
std
daa
stos
dec
push
sbb
imul
sub
addl
xor
xchg
mov
jno
push
jbe
mov
stos
mov
xchg
loop
rcr
movsb
popa
sub
and
mov
iret
adc
mov
jmp
push
push
aas
xchg
or
lret
gs
sbb
ret
ficomps
mov
inc
mov
fldt
adc
sbb
rorb
mov
mov
cmp
dec
jo
xor
jo
sub
xor
jae
and
adc
insl
scas
xor
dec
inc
mov
lock
add
mov
push
scas
add
sbb
call
cmc
test
mov
cmpsl
push
maskmovq
divl
cmp
sub
jmp
out
inc
pusha
sub
or
enter
iret
push
repz
pop
sbb
xor
pusha
test
mov
mov
ror
popf
adc
jno
fsubr
jp
jnp
and
mov
jno
fldcw
sbbl
andb
icebp
jae
incb
stos
add
hlt
clc
xchg
and
rcrb
mov
cmpb
and
sbbb
add
test
xchg
pop
sti
mov
inc
daa
cwtl
movsb
cmpsb
fwait
sbb
outsb
jb
xchg
sbb
mov
fwait
jb
sbb
cmpsl
dec
or
lock
cltd
and
call
dec
dec
or
push
inc
sbb
cltd
addr16
cmp
pop
leave
das
in
leave
cmp
sti
adc
xchg
dec
add
or
push
xchg
scas
rol
cmpsb
sti
loopne
jle
std
mul
fwait
xor
divl
cmp
aam
mov
jne
pop
cmpsl
and
int3
mov
movsl
xchg
mov
xorl
das
lea
fildl
jge
mov
lods
push
repnz
ds
push
push
iret
ret
loopne
scas
xchg
insl
xchg
aas
pop
mov
leave
repz
leave
aas
jle
nop
das
outsl
test
jmp
xchg
and
mov
insb
sub
xchg
pusha
jmp
xchg
xchg
xor
rol
mov
loope
sarl
mov
mov
and
mov
xchg
xchg
jne
fisttpl
jg
repz
push
pushf
fldenv
pop
adc
adc
push
sbb
out
stc
or
aas
fbstp
enter
cltd
add
mov
dec
insb
push
xchg
add
imulb
leave
dec
lret
adc
jb
sbb
packsswb
ficomps
sbb
xlat
mov
test
inc
add
test
nop
cs
out
sbb
das
jb
inc
cmp
test
mov
dec
or
xchg
pop
pop
mov
pop
in
stos
mov
nop
lods
cmp
dec
adc
popf
lret
aas
jge
push
fmul
pop
cs
in
cmp
xlat
jecxz
iret
ret
sahf
outsb
scas
xor
mov
xor
mov
cmp
or
pushf
out
xchg
pop
jnp
mov
out
pop
call
incb
inc
leave
repnz
in
jnp
arpl
cmp
rcll
shlb
add
mov
cmp
fbstp
aad
sub
movsb
mov
mov
cs
insb
enter
and
cs
loopne
fs
ret
cmp
div
mov
and
cld
mov
mov
lds
imul
or
and
in
cmp
in
gs
pop
lahf
fldl
aam
sub
and
lret
push
add
jno
inc
sbb
sub
sub
test
ds
adc
jp,pn
lret
stc
out
dec
add
lods
jb
addr16
bound
add
mov
cmc
lods
imul
dec
outsb
jg
sbb
sbb
mov
xchg
cmc
into
add
cwtl
mov
shlb
push
clc
pushf
test
in
inc
add
hlt
xor
jmp
mov
sbb
mov
sub
cmp
rcl
ja
jbe
cmpsl
hlt
xchg
in
cmp
mov
xlat
nop
inc
or
mov
in
inc
xchg
xor
das
mov
mov
mov
sti
sarb
xorb
inc
pcmpeqb
ja
pop
mov
xor
cwtl
punpckldq
cltd
and
mov
inc
les
jle
push
xor
insl
int
mov
mov
cmpsb
popf
jne
pusha
mov
jb
push
xchg
push
ror
push
stos
jg
stos
js
mov
adc
or
or
jge
in
push
jmp
push
adc
cld
jbe
add
dec
nop
popf
sbb
mov
hlt
cmp
push
mov
push
cmp
out
insb
ret
out
adc
inc
inc
mov
js
shr
jmp
add
js
pop
aaa
aas
or
inc
aam
mov
push
scas
push
ret
mov
xor
repnz
mov
sarl
outsb
ja
popa
rcrb
aad
adc
enter
add
cltd
jno
mov
fiadds
dec
or
cmpl
mov
movsl
das
jbe
jb
push
xor
sti
test
fiaddl
sub
les
notb
mov
jmp
les
mov
lds
jae
add
leave
mov
adc
popl
icebp
pop
movsl
outsl
icebp
xchg
in
push
fldl
jns
pop
addr16
adc
dec
sti
mov
mov
xor
push
push
clc
leave
push
int
or
cli
jmp
out
mov
das
sbb
inc
fistps
xchg
aam
cs
nop
sub
xorl
addr16
inc
icebp
jg
sti
jg
mov
sub
lahf
pop
mov
imul
pop
xchg
out
cltd
pop
rcr
inc
jp
lds
dec
imull
add
in
out
dec
xor
stos
mov
or
sti
dec
mov
cmp
movsb
lods
inc
bound
mov
jbe
fisttpll
in
pop
cwtl
loope
adc
ret
add
add
int3
dec
jmp
rorl
and
popa
add
push
js
xor
pop
mov
movsl
negb
adc
lret
out
inc
sbb
dec
fmull
pop
lret
jmp
jmp
or
popf
adc
outsl
add
pop
iret
popa
mov
pushf
sbb
mov
ljmp
stc
test
jp
hlt
push
and
mov
lock
fstl
test
loope
addr16
icebp
adc
xor
ja
in
dec
mov
cmp
lds
and
cmpsl
cmp
adc
or
adc
push
outsb
and
nop
cmpsb
jbe
test
push
clc
pushf
jge
push
fildll
lods
sbb
or
cmc
add
xor
out
pop
xchg
xchg
cmp
xchg
push
add
mov
push
loopne
ret
popa
int
mov
push
and
adc
dec
push
cmpsb
or
aad
dec
fidivs
mov
xchg
mov
push
in
daa
pop
lahf
jp
mov
add
cmp
xchg
ds
push
xor
jo
xchg
ret
loop
ret
cmp
sub
movsl
ja
bt
sbb
dec
mov
dec
jns
jle
push
pop
and
mov
imul
ljmp
lock
test
push
gs
add
sub
ret
jns
sbb
dec
jg
mov
addr16
pop
mov
pop
ret
mov
int
push
push
fincstp
push
and
pop
sub
ds
out
ret
add
push
addl
add
dec
insb
lret
jne
adcb
add
cltd
call
jbe
aad
jmp
xor
add
out
cltd
aaa
test
fcmovnb
pop
sbb
and
inc
mov
inc
xlat
pop
inc
test
xchg
aam
jmp
pop
loope
dec
inc
and
mov
call
push
push
and
add
and
call
add
shl
or
hlt
fstpl
xchg
int3
and
inc
inc
rorb
into
aaa
es
loopne
in
push
js
fimuls
dec
adc
dec
test
fcmovnu
dec
ret
cs
icebp
std
fwait
cltd
dec
sub
dec
fildll
aam
ds
cmp
and
jns
loop
test
inc
dec
andb
adc
rorl
sbbb
fldl
cwtl
mov
out
into
mov
outsl
daa
fpatan
adc
add
and
mov
cmp
loop
push
sbb
pop
dec
mov
ljmp
movsb
cwtl
mov
fsubrs
pop
xor
nop
jecxz
sbb
adc
jl
out
xor
leave
jmp
mov
stc
xorb
mov
sub
sahf
lea
leave
ds
sarb
xchg
rcl
and
mov
outsb
lods
push
test
test
cmp
mov
cmc
ljmp
sbb
stc
jp
or
rcll
popa
out
cmp
orb
cmpsl
gs
and
data16
add
xlat
aam
test
pop
inc
insb
cli
icebp
lret
lea
aaa
dec
aaa
out
xor
push
sbb
repnz
pop
arpl
sub
xor
fistps
aad
pop
imul
lcall
fidivrl
rcr
sbb
xor
das
sbb
pop
inc
cmp
or
mov
ja
sub
pop
mov
lods
out
lret
mov
idivl
and
cmpl
and
pop
inc
xchg
inc
pop
hlt
jne
data16
pusha
mov
ss
sarl
mov
sarb
clc
xor
inc
stos
pop
es
push
push
jnp
int
lds
push
add
mov
mov
jle
dec
pusha
lds
jl
or
inc
clc
mov
mov
dec
cmpsl
gs
sbbb
mov
mov
addr16
out
sahf
stos
sub
cwtd
mov
jbe
flds
cs
gs
addb
xlat
pushf
sub
stos
les
shl
inc
lcall
imul
sub
mov
cmpsl
insl
jmp
dec
push
imul
mov
ss
mov
lret
sbb
inc
in
jg
add
outsb
jne
rorb
imul
pushf
inc
cmp
js
mov
rclb
icebp
mov
xlat
arpl
xor
sbb
and
inc
ret
lods
adc
lret
adc
xchg
sbb
fmull
sbb
lods
xorb
add
aaa
hlt
hlt
push
rcll
sbb
movsl
sub
inc
dec
xor
and
push
adc
jmp
push
testb
mov
push
mov
mov
and
call
adc
xor
xchg
cmp
je
test
cmpsb
out
fistl
mov
les
out
jbe
cmp
lds
scas
js
test
xor
fwait
mov
cmp
or
insl
cmp
int3
xor
rorb
jge
jb
push
test
lret
push
sub
push
mov
aad
mov
push
sbb
mov
cmp
sbb
mov
add
xchg
sti
pop
sbb
mov
inc
inc
mov
imul
movsb
mov
inc
inc
rcrl
add
mov
inc
js
mov
loop
sub
popf
push
out
stos
xchg
mov
fiadds
jp
adc
shlb
mull
icebp
jp
movsl
xor
std
jns
xor
xor
or
data16
sub
loope
mov
fwait
adc
aas
or
mov
jmp
push
mov
mov
dec
cmpsl
rolb
les
cmp
push
test
pop
addb
mov
xlat
roll
fwait
mov
xchg
sub
inc
inc
xorl
pop
mov
lea
dec
addr16
push
mov
sbb
jle
ljmp
push
out
mov
in
sti
pop
dec
inc
loop
test
adc
cmc
lret
arpl
pop
mov
nop
pop
movsb
fildll
xchg
or
sbb
xchg
ror
mov
lahf
pop
mov
mov
insb
or
jbe
pusha
dec
dec
outsb
xchg
jns
sti
and
in
add
mov
jnp
adc
jno
pop
out
int3
push
sbb
fsubr
mov
aaa
inc
cli
adc
add
sbb
cmpsb
leave
mov
int3
jle
enter
inc
pusha
sti
iret
xchg
jnp
movsl
ss
push
scas
pushf
scas
pushf
sub
push
bound
xor
js
jmp
or
cmp
cld
in
stc
cmp
in
cmpsb
jo
add
test
cmp
pushf
inc
or
lock
pop
movsb
data16
mov
push
sbb
push
movsl
mov
jg
sbb
sub
ds
stos
mov
je
loope
test
jecxz
dec
out
adc
cltd
clc
repz
mov
mov
in
cmp
xor
cmp
sti
adc
fadds
test
jmp
push
and
xor
dec
cmp
lods
stos
or
add
push
int
verr
mov
or
dec
dec
int
mov
in
cld
stc
ficompl
or
in
or
cwtl
movsl
mov
add
push
and
cmp
push
jmp
icebp
adc
inc
int3
out
aaa
sub
and
test
jnp
in
fidivl
pop
cmp
into
mov
pop
cmp
fiaddl
fists
pop
push
fnstcw
cmpsb
add
pop
bound
dec
gs
fucom
inc
pop
out
adc
in
lds
ret
xor
es
scas
push
lds
aaa
and
push
dec
outsl
dec
adcl
xor
add
icebp
mov
sarb
mov
sub
orl
pop
test
aaa
inc
imul
adc
hlt
out
leave
or
mov
lret
lcall
xchg
mov
addr16
lret
add
cltd
daa
arpl
mov
scas
insl
sub
mov
repz
clc
add
adc
lock
cmp
fistpl
xchg
jbe
sub
fcmovu
icebp
jg
push
jmp
mov
push
inc
ss
sahf
pushf
cmp
mov
mov
sarb
jp
and
outsl
dec
or
idiv
jg
push
mov
nop
loopne
lcall
lahf
or
push
scas
push
nop
aam
mov
add
pop
aas
test
sti
push
daa
fbld
cmpsl
inc
fildl
jns
hlt
insb
stc
icebp
iret
dec
test
cmpsb
outsl
loop
push
in
and
push
dec
outsl
or
les
mov
and
insb
pop
or
fisubrs
sbb
sbb
dec
int
jle
cmpsb
jge
rorb
add
mov
cmc
sbb
mov
and
inc
jae
pop
mov
sbbl
dec
pop
cmpsl
or
sub
adc
sti
cltd
lock
incl
mov
mov
mov
jge
pop
pop
incl
inc
repz
enter
push
ret
mov
lcall
push
ret
add
dec
xor
pop
dec
dec
sub
std
loope
xor
rolb
mov
pop
pop
or
int3
xchg
mov
jle
enter
push
test
mov
xchg
mov
loop
push
push
pop
sub
scas
pop
xorl
xchg
jne
rolb
mov
sbb
adc
shll
outsb
icebp
and
jns
je
cs
sub
sub
loopne
sub
movl
push
jecxz
repz
dec
and
xchg
int
aam
aaa
sub
jbe
pusha
mov
jecxz
in
movl
rcl
lcall
or
fcompl
jbe
mov
mov
mov
arpl
pop
xchg
arpl
stos
data16
sti
pop
out
pop
push
and
aaa
loop
adc
in
or
xchg
or
outsl
int3
mov
dec
inc
popa
inc
cmp
jno
add
mov
pop
push
pushf
rclb
cwtl
pop
loop
mov
xor
push
mov
lret
subb
int
lcall
fistps
in
sub
std
insb
xchg
mov
adc
sbb
push
inc
arpl
jb
fmuls
cmpsb
scas
pop
and
xchg
add
xor
pop
lret
jnp
mov
clc
mov
std
int
xor
dec
mov
imul
cli
add
movsb
push
enter
stc
mov
and
jecxz
enter
jnp
lods
rorb
rclb
scas
or
mov
inc
or
mov
sub
rcrb
mov
sbb
dec
xorb
dec
leave
pop
and
cmp
js
sti
loope
lret
das
shrb
add
dec
std
xchg
sub
xor
xor
data16
js
and
rolb
add
mov
call
mov
data16
inc
xchg
leave
pusha
insb
pop
imul
fistpll
xchg
lds
cmp
inc
push
imul
cs
inc
loope
test
ljmp
sub
or
pushf
push
cwtl
pop
leave
out
leave
cmp
stc
ja
cmp
decl
jmp
adc
enter
cmp
add
xchg
mov
pop
pop
xlat
xchg
xchg
xchg
push
lods
or
daa
shll
pop
ds
mov
adc
imul
mov
mov
pusha
cmc
xchg
es
stos
ja
lock
hlt
xchg
adc
mov
add
loope
dec
xlat
xor
xchg
mov
sbbb
inc
mov
popa
mov
lods
scas
rcrl
imul
push
adc
add
xor
into
mov
push
mov
cmp
jle
mov
cmp
test
pop
mov
mov
push
sub
add
imul
pushf
jnp
add
je
inc
dec
and
add
sbb
inc
addr16
mov
jg
jp
mov
mov
mov
fisttpl
inc
cmp
add
push
mov
scas
add
mov
repz
mov
ret
or
push
and
or
ss
lods
jecxz
inc
push
into
fstp
leave
xchg
pop
add
inc
adc
je
mov
pop
pop
add
mov
xor
fs
lcall
and
in
bound
push
push
sbb
rorl
push
rorb
fidivs
dec
aas
sbb
repnz
ret
rol
mov
add
sarb
repnz
popf
js
mov
movsb
pop
test
xor
lock
mov
enter
push
mov
into
jbe
jl
inc
xchg
stos
xor
jnp
cwtl
dec
rolb
imul
inc
icebp
rol
jne
dec
push
lret
push
aas
mov
sub
imull
push
fstp
add
inc
ret
or
jo
xchg
xor
int
fidivl
lret
or
push
data16
push
mov
or
popa
test
or
cmp
outsb
decb
cmp
xchg
pop
pop
call
mov
daa
mov
inc
orb
cld
in
ret
xchg
das
lds
ds
aam
cmc
push
lcall
push
jmp
dec
adc
dec
bound
push
cwtl
lock
das
add
loope
xor
addb
pop
mov
test
lds
sbb
pop
pop
add
imul
cwtl
inc
stos
cld
ss
cmp
insl
push
leave
outsl
push
mov
addr16
mov
or
mov
cltd
sbb
or
lea
test
std
popa
cmp
push
inc
jmp
push
shlb
fstpt
pop
add
stos
inc
aas
mov
lock
xor
lahf
jmp
and
inc
sub
or
pop
ljmp
push
lds
dec
adc
stos
call
mov
push
mov
pop
mov
lock
mov
popf
push
addl
add
in
aaa
ja
or
add
xchg
dec
mov
stos
and
xor
xchg
lds
jecxz
cmpsl
jl
inc
sub
cs
inc
sub
fstps
mov
push
and
add
fisubs
xor
rolb
into
out
ja
mov
lret
jg
test
jno
cmpsl
xor
ret
inc
out
test
mov
pop
xchg
ljmp
into
jg
xor
and
enter
dec
sbb
pop
mov
fistps
lcall
mov
inc
xor
test
pushf
xchg
clc
or
bound
xchg
push
xor
jno
sub
ljmp
lahf
adc
mov
mov
addl
rcrl
sub
push
addl
sbb
jnp
sub
jb
mov
add
test
inc
cld
or
aas
test
or
test
test
add
or
push
mov
sbb
xchg
lods
pop
adc
popa
mov
jbe
push
dec
pusha
rclb
add
xlat
mov
push
repnz
xchg
out
xchg
push
frstor
shld
fsub
addb
mov
push
xchg
or
dec
cmc
jbe
adc
push
add
and
arpl
es
xchg
mov
jbe
pop
fistpl
lahf
inc
and
sub
push
ficoms
test
xchg
pop
ss
insw
xchg
movsl
push
fmull
adc
cltd
mov
loope
fisttps
jmp
mov
dec
fnstenv
cmpsb
aas
pop
add
inc
sub
mov
dec
lock
int
xchg
jl
lahf
movsl
xchg
outsb
pop
addr16
jecxz
fdivrl
sub
xabort
mov
shrl
xchg
jl
rep
cli
sub
pop
and
lea
in
sbb
mov
sub
or
mov
or
orl
in
mov
jns
jmp
or
sub
cmp
cmp
scas
xorb
addl
test
fistps
add
and
lret
pop
add
addr16
xor
ja
push
inc
mov
sbb
cltd
add
test
mov
jmp
and
pop
sub
jecxz
dec
mov
fisttpll
arpl
push
mov
aad
lds
xchg
push
pop
lcall
and
std
sbb
dec
rcrl
mov
sub
cmp
repnz
fsubl
inc
cmpsb
push
popa
dec
mov
mov
push
ds
inc
data16
lods
or
xchg
fchs
aas
add
pop
xor
jle
xchg
pop
fucomp
and
pop
insl
iret
repnz
call
into
or
xchg
inc
xchg
push
push
rcrb
mov
dec
xor
call
mov
ds
add
idivl
adc
inc
mov
jne
outsb
lea
movsb
lods
adc
cmp
xchg
mov
xor
pop
lret
test
lods
push
mov
cli
addb
lret
pushf
xchg
sub
xchg
and
xchg
cwtl
jecxz
or
shr
jne
rclb
rcrl
mov
pop
push
addr16
movsb
push
jbe
out
xchg
or
mull
icebp
xor
mov
jle
enter
inc
in
scas
mov
mov
loopne
je
fs
cmpsb
imul
pop
mov
adcl
dec
movsl
jg
add
loopne
jmp
pop
ljmp
into
xchg
xchg
fdivl
shl
cli
ret
mov
pushf
movsl
jnp
sbb
out
cmp
and
scas
in
cmp
pop
sbb
cmc
sbb
mov
cld
lods
adc
xchg
push
outsb
mov
pop
pop
or
cli
setnp
pop
outsb
fisubrl
mov
dec
into
daa
dec
loop
mov
pusha
mov
sub
pop
cmpsl
je
cmp
daa
xchg
idivl
sub
inc
mov
stos
mov
pop
loope
adc
adc
fiaddl
xor
lods
sub
cmp
mov
call
bound
rcr
push
pusha
mov
insl
xchg
scas
bswap
sub
cmc
out
mov
pop
push
and
add
out
shlb
stos
fcoml
or
ficomps
fs
cld
jnp
lret
push
sub
out
cltd
pop
repz
sbb
dec
out
pop
test
push
pop
push
and
xchg
pop
add
jecxz
jl
adcl
fwait
cmp
aaa
cli
fcomi
fbstp
add
stos
iret
add
sbb
fsubrl
mov
pop
loop
lock
divl
lods
xor
mov
fiadds
sub
movsl
mov
mov
outsl
mov
push
loopne
das
xor
cli
mov
pop
jbe
lahf
mov
cmp
insb
push
movsb
in
in
jmp
hlt
adc
into
cmpb
add
gs
in
mov
pop
mov
pop
jg
movsl
ret
adc
push
xor
sub
mov
push
mov
push
jno
loopne
or
mov
jnp
adc
xor
movsb
mov
inc
in
cmp
enter
xor
inc
sbbl
loop
adc
mov
ds
sub
lds
popa
popa
mov
imul
inc
int
xchg
pop
jbe
gs
adc
fistl
adc
push
popa
scas
adcl
mov
inc
mov
pop
add
into
in
insb
xor
cmp
and
lea
or
sbb
ljmp
movsb
inc
loopne
push
cmpsb
cmp
shrl
fpatan
cmp
pop
xchg
jge
cmpsl
xchg
imul
iret
lds
adc
mov
pop
fistpll
loop
hlt
cmp
repz
nop
pop
enter
sbb
pushf
pop
out
or
fwait
mov
push
movsl
mov
movsb
test
or
shrl
push
mov
sbb
lods
adc
xor
loope
lret
jae
mov
mov
adc
or
fldl
jmp
out
imul
test
bound
mov
popf
adc
pushf
lods
mov
jl
push
sub
gs
add
jecxz
fstpt
push
rorl
mov
pop
or
fmul
lret
jg
xorb
daa
or
scas
pop
pop
adc
mov
jo
sub
dec
jle
sub
xlat
mov
fisubrl
mov
out
pop
incl
mov
push
jg
mov
daa
pusha
loope
push
jg
sti
jle
iret
ds
push
fistpl
or
cmp
push
stos
lods
mov
enter
mov
pop
inc
inc
ret
add
dec
or
and
cmc
push
in
xor
add
outsl
cmpsb
sbb
imul
out
sbb
or
push
mov
mov
inc
sub
mov
aaa
push
roll
repnz
call
rcrl
adc
ja
cli
sbb
jge
push
fstpt
je
sbb
mov
inc
or
sub
cmp
adc
in
xlat
inc
lret
pop
fdivr
loope
xor
les
adc
and
mov
cmp
inc
mov
mov
lret
sub
fidivs
xchg
xor
xor
sarb
movsb
jge
push
lock
clc
mull
shr
add
andb
ret
xor
out
hlt
push
cmc
jmp
and
and
xchg
mov
add
mov
or
inc
negb
pop
lods
arpl
lods
les
cli
xor
daa
out
shrb
loopne
add
dec
loop
sti
dec
dec
xor
jge
jne
out
test
insl
sub
repz
inc
pop
out
xor
jno
fs
jnp
sub
inc
mov
pop
add
cs
inc
lcall
mov
mov
call
sub
fsts
pop
fisttpl
xchg
xchg
daa
rep
cltd
mov
adc
mov
or
xchg
mov
int
add
or
iret
mov
dec
out
add
rclb
fbld
lock
lcall
jmp
addl
jle
addr16
lret
and
xchg
lret
fdivl
jmp
lock
fnstsw
mov
jp
iret
stc
out
or
adcl
push
repz
lret
mov
inc
movswl
adc
mov
popf
add
popa
xorl
xchg
cld
mov
or
sub
jg
dec
call
in
sbb
push
dec
shlb
push
or
push
roll
fnsave
sbb
inc
leave
mov
jp
cs
loope
lock
movb
aam
sahf
xchg
sub
inc
mov
enter
je
and
jnp
in
mov
fbstp
lock
es
xchg
aas
xor
add
std
mov
out
in
sbb
cmp
and
mov
sti
mov
cli
xbegin
cmp
js
shrl
push
jns
jecxz
dec
xor
and
push
dec
xchg
sub
xchg
ret
rcll
xlat
ss
pushf
and
push
fs
ficompl
andl
and
ljmp
xor
popf
push
dec
outsl
scas
out
adc
popw
insl
jg
ljmp
pop
pushf
inc
mov
adc
jbe
in
dec
fsubp
mov
clc
mov
xchg
stos
mov
out
mov
stc
adc
fmuls
data16
mov
and
pop
lds
test
sahf
xchg
pop
aad
mov
inc
repnz
int
xchg
push
pop
sub
out
jge
mov
add
push
mull
test
sarb
aaa
ss
xor
jae
roll
dec
adc
jp
sarl
daa
or
sahf
jne
mov
loope
cmp
mov
fucompp
cmpl
adc
stc
pop
mov
aas
dec
inc
cli
pop
ss
pop
test
aad
dec
sub
ret
insl
push
push
aas
jno
add
cmpsb
fucomi
adc
dec
and
lds
shlb
sbb
jbe
scas
mov
outsl
int3
cwtl
inc
pop
out
stos
lock
xor
mov
test
lcall
xchg
dec
xor
int
gs
mov
mov
cmpsl
xor
mov
jl
cmpsb
fsubrs
sbb
fs
pop
out
lahf
sub
inc
sbb
gs
and
repnz
xchg
js
push
mov
jl
cmpsb
repnz
mov
cmp
rcr
repz
and
xor
xor
cmpsb
lods
roll
push
xor
push
and
hlt
mov
int3
ret
xchg
adc
fldenv
inc
cmp
test
xchg
sbb
dec
inc
icebp
push
adc
fdivrl
popf
movb
outsl
lds
das
add
push
sbb
rorl
popa
cmpsb
jo
jno
xchg
or
mov
add
xchg
xor
sbb
out
fadds
jbe
sahf
mov
sub
and
lock
in
xchg
insb
pop
jl
xor
push
pusha
sub
and
cmpsl
and
cld
or
cld
mov
in
int3
add
mov
cli
cmp
aaa
int3
jle
daa
fnstcw
scas
rcr
lds
or
sbb
test
out
out
in
sarl
ja
inc
movsl
stos
mov
loopne
imul
inc
icebp
add
popa
aaa
mul
scas
cmp
adcl
icebp
mov
add
call
mov
and
mov
mov
bound
pop
mov
ret
arpl
loop
pop
test
xorl
pop
inc
add
fsubr
jnp
lcall
leave
push
push
arpl
shl
bound
movsl
es
pop
mov
inc
hlt
lods
sbb
fcmovne
inc
or
leave
jns
cwtl
and
xchg
ljmp
fwait
sbb
loopne
push
push
and
mov
pop
add
iret
xchg
push
faddp
push
cld
adc
ret
mov
iret
adc
data16
mov
aas
inc
movsl
icebp
mov
imul
push
icebp
addr16
in
ljmpw
negb
jb
xchg
push
xor
inc
enter
push
cmp
jnp
int
push
std
adc
das
mov
stos
xchg
mov
inc
stc
loopne
mov
out
inc
dec
push
ds
pop
mov
mov
and
mov
stc
out
sti
adc
into
lock
mov
popa
adc
dec
xchg
decl
hlt
mov
add
dec
sub
sbb
mov
push
push
lret
jo
push
dec
lea
addb
push
dec
adc
and
jp
push
jmp
pop
divb
orl
call
jecxz
mov
arpl
sar
faddl
punpcklwd
mov
pop
imul
fisttpll
dec
popa
mov
mov
mov
repnz
inc
and
mov
jmp
inc
es
mov
int
stos
andps
pop
lock
dec
popf
dec
xchg
add
cmpsl
jmp
in
xchg
jo
ja
lods
rcll
outsb
xchg
stos
pop
iret
adc
mov
int
inc
push
push
or
mov
cmpsb
mov
sub
lret
add
add
popa
xor
xchg
rorl
and
xor
in
cmp
add
xchg
mov
