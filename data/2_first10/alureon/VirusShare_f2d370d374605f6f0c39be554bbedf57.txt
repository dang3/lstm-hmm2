in
inc
cli
scas
iret
or
adc
jecxz
add
xor
loopne
lahf
sbb
xchg
dec
fiadds
stos
stos
out
je
aad
test
dec
daa
test
pop
stc
popa
pop
and
xchg
rcll
push
sbb
fbld
jle
in
jg
fimuls
mov
gs
mov
cs
ljmp
cmp
pop
scas
or
or
or
test
test
nop
jnp
cmp
stos
stc
sub
dec
movsl
sbb
js
and
into
out
aam
aas
sbb
cmp
bound
loop
ss
ret
add
adc
out
mov
ret
xchg
dec
sub
xor
push
das
arpl
sub
xor
ret
daa
out
mov
push
mov
mov
lea
call
lea
mov
call
mov
push
add
call
add
add
lea
mov
inc
dec
call
inc
inc
mov
mov
dec
mov
mov
add
inc
dec
sub
mov
call
dec
add
dec
dec
call
inc
mov
call
inc
lea
add
sub
dec
mov
pop
inc
lea
xor
add
sub
pop
inc
add
pop
mov
dec
sub
sub
pop
imul
mov
add
imul
mov
dec
dec
dec
pop
mov
or
pop
mov
lea
mov
inc
and
call
mov
sub
or
mov
ret
sub
add
push
add
mov
push
dec
push
add
dec
push
mov
add
push
dec
add
mov
xor
or
push
inc
ret
push
dec
imul
dec
dec
add
mov
add
push
or
inc
inc
call
pop
ret
jmp
add
mov
movswl
dec
movzbl
inc
mov
add
add
lea
and
mov
imul
movzbl
mov
inc
xchg
mov
dec
add
or
xor
mov
imul
sub
movsbl
inc
lea
dec
dec
jne
inc
mov
add
sub
pop
movzwl
inc
pop
dec
inc
pop
dec
mov
mov
mov
mov
imul
mov
mov
or
inc
add
add
ret
push
dec
imul
mov
mov
or
sub
dec
inc
push
push
push
push
inc
sub
dec
push
lea
and
imul
imul
mov
mov
mov
lea
dec
mov
inc
push
mov
inc
xor
mov
mov
push
dec
xor
push
inc
xor
pushl
lea
call
lea
add
lea
lea
mov
dec
add
or
dec
pop
ret
dec
lea
sub
dec
dec
inc
sub
mov
and
dec
dec
dec
cmp
jb
inc
xor
imul
mov
mov
imul
sub
mov
and
inc
inc
lea
dec
dec
lea
and
dec
mov
mov
imul
cmp
jb
dec
pop
inc
mov
add
add
add
xor
dec
add
dec
inc
mov
xor
dec
inc
xor
mov
add
mov
dec
mov
test
jbe
mov
sub
dec
mov
or
inc
or
sub
mov
movzwl
inc
and
mov
imul
mov
movswl
dec
movzbl
dec
inc
add
and
inc
dec
mov
and
mov
lea
movzwl
mov
dec
mov
mov
lea
mov
lea
dec
mov
movzwl
dec
jne
and
mov
inc
lea
mov
add
dec
mov
mov
inc
lea
inc
mov
xor
mov
xor
add
dec
movswl
sub
inc
mov
sub
add
test
jbe
sub
dec
dec
dec
mov
inc
dec
dec
lea
inc
sub
mov
mov
inc
mov
inc
inc
sub
or
or
inc
mov
and
mov
imul
mov
lea
movzwl
movzbl
movzbl
inc
add
mov
mov
and
dec
dec
mov
sub
sub
movzbl
dec
mov
mov
add
jmp
push
sub
dec
dec
dec
mov
dec
inc
dec
mov
dec
imul
lea
inc
movsbl
movswl
inc
inc
add
sub
add
movsbl
movswl
mov
inc
or
mov
lea
sub
lea
inc
sub
dec
add
lea
inc
sub
mov
and
mov
cmp
je
call
call
sub
or
dec
sub
lea
mov
dec
xor
dec
add
mov
xor
mov
mov
sub
inc
dec
mov
inc
lea
inc
dec
inc
dec
movzwl
mov
dec
lea
inc
add
dec
mov
inc
lea
add
xor
dec
movsbl
dec
sub
inc
movswl
add
mov
sub
mov
imul
ret
lea
movzwl
pop
sub
ret
push
mov
inc
imul
add
add
push
sub
xor
push
inc
push
mov
push
add
sub
inc
inc
inc
call
mov
push
dec
inc
xor
movsbl
sub
lea
neg
mov
mov
xor
imul
dec
and
mov
mov
mov
mov
dec
mov
inc
inc
mov
dec
je
mov
movzbl
add
mov
dec
jmp
mov
mov
inc
or
add
imul
repnz
mov
mov
add
mov
jmp
inc
sub
imul
sub
mov
mov
inc
add
add
dec
inc
mov
mov
movzbl
mov
add
pop
pop
ret
push
dec
sub
mov
inc
mov
mov
lea
dec
mov
add
mov
lea
mov
inc
lea
and
mov
mov
inc
or
add
dec
mov
add
lea
pop
ret
sub
imul
mov
inc
inc
mov
dec
lea
mov
mov
mov
mov
imul
dec
xor
lea
sub
mov
or
mov
inc
dec
mov
and
dec
mov
dec
cmp
jb
sub
push
mov
mov
push
xor
and
push
xor
movswl
xor
dec
add
xor
dec
sub
xor
dec
inc
push
dec
dec
mov
add
add
xor
imul
dec
mov
dec
mov
xor
movzbl
mov
inc
add
movzwl
imul
add
or
movzbl
add
inc
mov
jmp
cmp
pop
inc
sbb
mov
das
adcb
jo
in
shrb
mov
out
adc
scas
popa
jns
inc
movsl
push
addl
inc
push
fs
add
shrb
jno
pushf
pop
ja
pop
push
popa
xchg
lods
sub
sub
and
cli
insl
inc
lret
insb
aaa
mov
xchg
ficomps
jle
shlb
mov
mov
jbe
lock
xor
adc
and
jbe
aas
insb
push
inc
jbe
es
cmp
mov
xor
jo
inc
mov
dec
dec
dec
fcmove
ficomps
or
sbb
bnd
fcmovb
sub
ret
mov
push
test
test
push
pop
addr16
popa
fs
pusha
dec
fbld
out
cld
inc
pop
jo
mov
cmp
mul
cmc
es
imul
lods
xor
daa
jo
scas
in
jg
addr16
mov
fsubrp
repz
mov
mov
fwait
jne
and
scas
inc
mul
dec
mov
mov
push
sub
stc
inc
movsl
jg
mov
add
out
test
inc
shrl
pop
lret
sahf
adc
jle
stos
cli
aaa
clc
sub
inc
enter
xchg
test
imul
dec
fsubs
outsb
outsb
bound
push
inc
jl
cmp
ds
daa
and
out
lcall
adc
sub
mov
data16
test
pop
orl
lret
test
sbb
pop
shr
sub
je
push
add
and
mov
pop
pop
out
lods
test
adc
les
into
and
mov
fsubp
shl
pop
mov
cmpsb
sub
ficompl
mov
pop
jge
rcrb
dec
dec
push
fs
push
sarb
in
insl
sub
fcoms
add
fidivrs
lret
shll
lahf
inc
pushf
cmpb
clc
das
mov
cwtl
lret
leave
in
shlb
ja
ds
adc
movsb
hlt
mov
sbb
or
shlb
sbb
xchg
adc
test
sbb
inc
push
imull
pop
dec
negl
lods
adc
xchg
lcall
push
movl
add
push
adc
mov
insl
ja
test
lods
sbb
sub
imul
ja
sub
and
adcl
jl
mov
pop
sbb
lahf
ficomps
push
sub
popa
js
inc
lods
ret
adc
or
add
push
mov
stos
or
or
jns
or
jge
shrl
push
scas
mov
movsb
adc
stos
test
sbb
mov
mov
cltd
leave
mov
mov
lahf
sbb
pop
orb
jae
jecxz
insb
inc
faddp
stc
fs
loope
sarb
sbb
int3
ret
pop
mov
sub
adc
mov
adc
test
add
mov
icebp
add
sbb
add
sub
iret
xchg
xchg
faddl
sbb
sub
mov
jne
cmpsb
mov
dec
xchg
and
repnz
dec
in
ja
int3
out
fcom
mov
push
adc
add
xchg
aad
sub
das
cmp
sub
loop
inc
mov
das
jmp
mov
repz
cmc
xchg
rorl
or
stc
mov
icebp
fcomps
cld
or
leave
rclb
adc
mov
andl
in
lock
ljmp
ss
inc
lea
js
push
test
mov
inc
cmp
stc
jge
cmp
inc
and
and
or
cmp
out
or
out
std
or
addr16
loope
sub
mov
lods
sti
inc
add
jo
cmpsl
mov
push
sahf
and
add
push
imul
xchg
stos
aam
daa
and
sub
addl
shll
movsb
or
cmp
leave
xor
jns
pop
mov
xchg
fwait
bound
inc
das
xchg
ds
push
fnsave
or
les
cmc
push
sub
in
sub
popa
sbb
or
in
or
ja
ret
test
jle
push
es
jmp
pop
jl
cmp
cmpsl
scas
jo
xchg
stc
scas
xor
jge
imul
or
stc
adc
outsb
into
pushf
out
les
adc
add
and
push
cs
pop
jno
and
repz
test
ret
xchg
xchg
daa
out
cmp
pop
insl
bnd
cmp
sub
mov
or
mov
mov
inc
fndisi(8087
add
mov
lods
mov
addl
mov
dec
icebp
or
jecxz
push
xchg
idivb
fsubl
fsubrp
push
int
cmp
lcall
adc
jo
push
shrb
pop
pop
and
and
fidivrl
pop
imul
shll
fidivl
add
std
cmpsb
stos
push
push
pop
icebp
in
jo
and
sbb
scas
pop
push
inc
daa
shrl
or
or
gs
cmc
fldenv
inc
imul
mov
cmpsb
scas
popf
lcall
jno
jo
mov
inc
fstpt
out
xor
popf
popf
mov
rcrl
push
cmp
sub
sbb
imul
cmp
sti
cmp
cli
insl
jle
dec
arpl
adc
mov
fisttpl
mov
push
xchg
in
movsl
xor
dec
mov
insl
pop
pop
and
jmp
push
pop
push
add
repz
mov
mov
xchg
out
jns
out
mov
and
ficoml
dec
push
fcoms
inc
mov
lods
fisubrs
test
clc
in
sbb
cmp
mov
dec
mov
popa
sub
mov
scas
xor
mov
push
mov
lret
notb
subb
xchg
lahf
jl
jnp
xchg
mov
icebp
lock
jge
in
nop
idivb
dec
and
xchg
cwtl
push
mov
hlt
push
mov
and
roll
movb
fistps
js
or
pop
andb
mov
rolb
jg
dec
iret
xchg
cmc
mov
push
dec
inc
leave
mov
fildl
cmp
jbe
test
test
clc
push
ret
pop
cmpsb
insb
push
in
scas
push
out
sbb
pop
xchg
push
and
dec
aas
lret
adc
cltd
push
inc
adc
test
divb
mov
in
push
lods
inc
int
in
in
pop
sbb
stos
mov
or
js
je
mov
and
lcall
ret
inc
push
jmp
test
and
sbb
int
leave
sahf
test
sbb
cld
lods
shr
add
dec
adc
stc
mov
stc
push
dec
push
lds
xlat
adc
and
xlat
or
cmp
mov
mov
adc
push
xchg
fwait
test
or
cwtl
jb,pn
gs
pushf
gs
aad
scas
loopne
and
dec
pop
mov
add
fmulp
ja
pop
and
fucomip
insl
ds
sub
insb
fcompl
add
jg
mov
push
pop
repz
movsb
cmp
ja
mov
sub
jle
jbe
sbb
xor
in
sahf
rcll
xorl
inc
pop
mov
bndldx
into
sbb
jo
lret
daa
andb
sti
or
jge
shl
stos
inc
aas
rcl
cmp
jns
loope
adc
xchg
adc
mov
xchg
or
mov
mov
leave
ficoml
mov
loopne
or
push
pop
push
push
sbb
xchg
inc
xchg
lcall
mov
pop
xchg
out
repnz
inc
jg
lods
sub
loop
add
in
scas
and
imul
add
push
je
fistl
int
add
pop
lods
cmp
push
or
stos
cwtl
out
sub
xor
jo
shrl
pushf
xor
inc
mov
and
cwtl
mov
mov
mov
adc
cmp
test
cmpsb
outsb
dec
xor
xchg
rol
cmp
mulb
dec
lcall
ljmp
pop
mov
cwtl
test
push
add
cs
mov
or
xchg
mov
out
mov
and
mov
rcr
in
dec
into
and
xchg
repnz
mov
sbb
jnp
lahf
jle
icebp
outsl
test
adc
rclb
xor
or
jg
sbb
in
xchg
es
cli
xchg
jg
jo
inc
in
cld
xor
xchg
pop
mov
inc
lea
add
push
bound
xchg
dec
shlb
or
cltd
cltd
adc
sbb
in
cmpb
pavgb
cmpsb
imul
das
pop
pop
mov
xchg
fcos
mov
fidivs
imul
sub
jb
lret
jnp
int
ss
inc
repz
stos
div
and
test
mov
xor
fisttps
xchg
dec
cmc
call
jl
fidivs
enter
cmp
xchg
clc
or
push
mov
pop
or
sub
mul
add
aas
fcompl
mov
nop
movb
mov
sub
push
jno
or
out
xchg
mov
inc
popf
mov
or
fnsave
jo
into
and
incl
dec
test
into
lahf
fs
mov
mov
in
data16
sbb
lods
cmpsl
mov
jbe
rorb
imul
jle
ss
jns,pt
jg
mov
cmp
pop
addr16
bound
bnd
adc
int3
add
rcl
xor
or
push
scas
add
cli
xor
mov
les
les
lds
pusha
loope
mov
xchg
mov
pop
rcrb
fnstenv
and
mov
xchg
add
or
cltd
xchg
imul
mov
addl
icebp
cmp
stos
aaa
push
cmp
jg
mov
inc
pop
xchg
sub
inc
pop
push
pop
push
loop
push
cmpsb
jmp
jl
decb
mov
test
dec
repnz
out
popa
iret
mov
push
into
pushf
into
lock
jg
stc
cwtl
pop
les
xor
out
jl
repz
or
mov
outsb
push
lahf
sub
pop
fdivrs
mov
cmp
jg
ds
jb
mov
or
cmp
jle
inc
adc
fisubrs
push
add
jb
in
notl
xchg
sub
loopne
nop
mov
into
fildl
xlat
sub
test
popf
sbb
ret
sbb
and
inc
jle
dec
xchg
xor
stc
aam
sub
arpl
call
dec
loopne
lds
push
movsl
dec
mov
das
in
fidivl
les
test
cld
sub
xchg
out
or
in
lods
pop
xor
inc
add
in
mov
xor
mov
inc
ljmp
je
daa
jb
inc
loop
sub
push
dec
scas
inc
cmp
repnz
sbb
out
push
hlt
cmpsl
adc
push
add
push
ljmp
ffreep
mov
ficomps
faddl
in
rcl
lods
adc
push
xchg
cwtl
int
inc
popf
mov
mov
sbb
xor
xor
adc
pushf
or
mov
push
in
jecxz
mov
jnp
ret
mov
mov
daa
imul
scas
test
add
fsubl
stc
pop
dec
loop
pop
ret
jno
fimuls
adc
leave
pop
icebp
je
and
xor
insl
jg
sub
adc
xor
ja
mov
add
cwtl
cmp
cmpl
dec
xor
xor
pop
xlat
sahf
rorb
lods
ljmp
mov
dec
or
push
pop
xchg
add
das
xchg
cwtl
fsts
movsl
push
and
les
jns
cwtl
sub
sbb
shr
push
insl
shr
cmp
bound
sbb
jo
jge
lret
lods
or
adc
pop
jp
das
inc
cltd
inc
push
sbb
lock
inc
mov
pop
int3
sbb
xchg
dec
in
xchg
jmp
test
pushf
push
mov
outsl
les
adc
and
addr16
jg
int3
xchg
inc
cltd
popa
popf
adc
fstp
daa
lock
test
and
loop
loop
andb
push
ret
add
aaa
sub
cmp
push
out
aaa
in
daa
arpl
lods
pop
sbb
mov
aas
push
cwtl
dec
xor
cmpsl
mov
jmp
in
jns
jbe
into
sbb
sbb
adc
jle
dec
loopne
xchg
cmpsl
and
mov
sbb
jo
cmp
cmpl
rcll
addb
cmp
js
cli
push
add
or
gs
push
push
sub
out
mov
push
add
inc
mov
sbb
xchg
ret
add
idiv
cmp
add
or
pop
stos
gs
stos
sub
add
mov
xchg
adc
fs
jbe
mov
and
cli
lock
popf
aas
push
rorb
and
setne
testb
cs
js
mov
add
stos
out
xorl
das
out
fisttps
pop
jle
xchg
fisttps
xchg
mov
fcomps
pop
adc
cmpsl
jle
cli
adcb
jecxz
mov
xor
pop
push
mov
fxch
push
mov
imul
xor
sbb
ja
insl
push
fsub
outsl
mov
inc
hlt
rolb
shlb
xorb
ret
or
out
mov
fimuls
jmp
xorl
cli
clc
nop
fnsave
mov
sub
jbe
lret
testl
call
rcrb
mov
jae
jmp
in
cmp
xlat
rcrl
test
inc
lcall
push
je
repnz
sbb
loopne
insb
xchg
sub
dec
test
in
push
mov
pushf
sbb
jbe
repnz
mov
push
mov
js
mov
filds
mov
aaa
mov
and
jge
adcl
mov
pop
iret
fsubl
lahf
add
mov
mov
sahf
mov
xchg
xchg
push
rorb
stos
int3
xchg
shr
push
fildll
sbb
and
vlddqu
lods
mov
loop
clc
xor
and
jo
xor
pop
add
sahf
pop
push
ficoms
ret
in
ret
scas
mov
aam
nop
sbb
dec
jae
movsl
add
sarl
cmp
mov
rcr
outsl
dec
flds
sub
es
sbb
or
mov
dec
pop
in
mov
sbb
je
fnstenv
dec
push
push
pop
call
ljmp
cwtl
daa
push
cmp
jb
jmp
fsubrs
imul
sbb
jbe
mov
or
jmp
sub
cld
aaa
out
sahf
lds
pusha
test
jg
montmul
cmpsb
inc
into
mov
cmp
adc
cli
sbb
jge
pop
pop
push
dec
out
xchg
lods
mov
push
jp
aad
add
mov
pop
aam
movl
sub
fsubrl
adc
pop
xchg
ja
push
or
and
push
sbbb
or
test
imul
inc
jnp
ret
subl
je
out
stos
dec
ficoml
fwait
ret
or
dec
cmpsb
mov
jb
dec
cmpsb
invd
in
inc
xor
jp
jbe
jmp
pop
icebp
ret
sbb
push
jmp
adc
cs
jb
repz
mov
lahf
sbb
xlat
rcll
call
adc
dec
jns
mov
mov
hlt
mov
jp
aad
cltd
arpl
cmc
stos
ret
ficoml
pushf
mov
push
mov
mov
sbb
mov
mov
scas
rorb
xor
or
push
cmpsb
pushf
jns
pusha
pop
xlat
loope
daa
and
xor
dec
ljmp
jp
pop
pop
test
cmpb
leave
push
sti
orb
add
cmp
ficoms
stos
add
xchg
mov
out
xor
cmp
mov
shrb
mov
pusha
mov
jmp
jns
adc
jmp
icebp
dec
mov
xor
sub
hlt
jle
xlat
or
cld
setb
lret
mov
push
xchg
xlat
jae
test
inc
cmp
or
sbb
popa
je
mov
cmp
into
xor
mul
movsb
js
lahf
mov
movsl
mov
inc
int3
repnz
stos
sbb
lret
rcrl
fidivl
test
mov
push
jg
jl
mov
adc
ljmp
mov
and
decb
pop
mov
sbb
adc
ss
or
or
dec
das
dec
iret
xchg
insl
lcall
xchg
stc
xor
sbb
mov
jle
lcall
adc
push
ror
push
jp
test
and
pop
ja
clc
fisttps
push
sub
mov
enter
xchg
xchg
add
mov
inc
outsl
push
dec
imul
xchg
sahf
scas
mov
fnsave
sbb
es
filds
insb
mov
or
clc
push
ljmp
fwait
mov
xor
xchg
jl
es
mov
imul
inc
and
add
pop
insl
xor
ret
xchg
pop
lock
aas
mov
jge
stos
add
jge
roll
rol
lods
jmp
and
repnz
ds
jmp
cmp
call
push
test
dec
adc
dec
pop
push
jne
lahf
rol
add
mov
lret
mov
int3
subl
cmpb
int
testl
mov
mov
iret
xor
jp
sbb
adc
xchg
xchg
xor
gs
cmp
and
cmpsb
int3
fidivrs
mov
arpl
loopne
jmp
les
addr16
dec
daa
test
in
mov
mov
rclb
dec
pop
xor
cmp
dec
mov
adc
add
pop
iret
shll
aam
and
lea
fldt
inc
sbb
ss
xor
add
dec
lahf
mov
inc
push
and
push
sub
lock
fbstp
lret
stos
cmp
das
xor
dec
cmp
pushf
push
jp
xchg
pop
or
cmpsl
call
sti
add
je
jbe
jle
jl
cmc
fwait
addr16
es
mov
aaa
inc
aad
ss
imul
insb
inc
push
mov
mov
mov
cmp
jmp
push
fisubrl
cs
sub
call
cmp
inc
mov
pop
out
icebp
popa
add
in
dec
pop
xlat
ficoml
push
pop
ffreep
or
push
cmp
test
fwait
adc
push
push
iret
pop
fidivs
rolb
mov
and
iret
daa
sub
sub
sub
jb
xor
outsl
in
sbb
bound
inc
inc
mov
pop
jns
stos
out
movsb
out
stos
xor
dec
sub
ficoms
adc
hlt
dec
jns
ret
pop
popa
bound
outsl
inc
fptan
mov
std
lods
shll
mov
adc
test
cmpsb
mov
push
adc
pop
cmp
shr
cmc
int3
insb
mov
adc
int
or
pusha
xchg
mov
ficoms
cli
lea
cwtl
mov
pusha
add
push
sti
hlt
push
inc
pop
cmp
rclb
pushf
sbb
xchg
test
cmp
sub
mov
xor
out
cltd
ret
mov
fwait
mov
fisubs
mov
sub
xor
push
lcall
ret
xchg
xchg
dec
adcl
jbe
cld
arpl
loope
add
pop
sub
mov
push
repz
addb
jb
and
js
add
jp
mov
cld
ss
pusha
fistps
loop
push
push
dec
outsl
mov
ret
fcmovnu
cwtl
popa
jecxz
lret
fsubrp
cmc
fistpl
mov
das
test
inc
cmp
mov
aam
mov
cli
das
adcb
sarb
iret
negb
out
xchg
in
jnp
addb
and
dec
xor
jle
xor
ja
nop
aad
shll
das
stc
sub
pusha
jl
js
repz
lods
jmp
cwtl
pop
leave
subb
inc
adc
inc
cmp
pop
movsl
sub
mov
sar
les
jmp
or
popf
push
jmp
cmp
mov
stos
insl
lods
mov
test
push
jecxz
pushf
xor
mov
daa
int3
push
xchg
pop
mov
mov
push
stc
nop
pusha
cmp
scas
inc
dec
out
push
xchg
in
dec
sub
jl
inc
add
add
sub
cmp
mov
pop
enter
xchg
push
loopne
mov
and
movsl
mov
or
push
into
mov
sbb
sbb
adc
std
aam
add
in
fcmovb
popa
and
mov
pop
xchg
ss
arpl
bnd
loope
mov
sahf
xchg
sbb
pop
mov
xor
into
push
cs
cld
jno
push
adc
outsl
sbb
popf
jmp
std
inc
jae
or
les
ret
inc
cld
jno
mul
loopne
or
xor
xchg
sub
int
adc
push
and
xor
cld
jmp
push
or
cmpsb
aad
fsubl
mov
stos
js
inc
mov
xchg
ds
jae
and
sub
inc
ficompl
leave
inc
or
fs
int
cmp
mov
cmp
and
xchg
sbb
lock
imul
jno
in
mov
sbb
pop
ljmp
fwait
repnz
lds
xor
mov
out
mov
into
arpl
pop
addr16
add
cmp
jbe
jg
lea
and
dec
lea
push
push
out
aas
adcl
and
test
pop
test
popa
mov
inc
adc
dec
xchg
lds
jl
mov
movsl
fistps
dec
adc
inc
sbbb
aam
pop
ss
jmp
sub
arpl
jecxz
out
sbb
jbe
sti
xorl
xor
jmp
cld
lcall
pop
pop
mov
pop
std
fsubrp
dec
adc
mov
lods
aas
fisubrl
inc
les
testb
jae
sbb
loop
add
daa
mov
push
xchg
in
dec
jo
or
push
js
mov
out
imul
add
push
sub
imul
pop
rcr
fs
popa
mov
jo
inc
movsl
ffree
xor
fildll
sahf
pop
xchg
inc
test
pop
inc
jecxz
xchg
popf
xor
popf
inc
adc
jns
jmp
dec
lds
imul
pop
mov
cvtpi2ps
mov
adc
out
inc
jno
xchg
mov
jo
dec
mov
pop
jns
in
rcl
and
divl
mov
jo
es
pop
popa
jnp
dec
xchg
dec
mov
sarb
dec
aas
dec
inc
and
movsl
mov
pop
daa
xlat
outsb
paddb
and
and
les
or
or
push
mov
xchg
ja
cltd
xchg
xchg
hlt
pop
lods
xchg
mov
add
mov
xor
test
xlat
cmpl
sub
cld
push
jne
xchg
cmpsb
push
insl
sbb
xchg
pusha
sbb
mov
lret
dec
lds
cwtl
sbbb
pop
cs
sbb
xor
inc
mov
hlt
jo
adc
mov
sbb
ret
mov
mov
roll
in
push
jbe
mov
mov
sarl
pop
xor
jmp
mov
sbb
cmpsl
rcrb
test
inc
jo
mov
popf
ja
mov
out
insb
repnz
stc
xchg
pop
inc
push
test
jns
enter
and
mov
dec
jmp
idivl
push
pop
cltd
xor
les
sub
or
xchg
std
dec
add
xchg
push
cmpsl
adc
mov
and
in
mov
inc
and
out
mov
push
sbb
jae
jmp
insb
xchg
leave
jmp
dec
inc
adc
pop
into
cmpsb
mov
xor
or
adc
pusha
pop
ss
adc
fnstenv
ja,pn
jne
fnstenv
push
sub
pop
push
addr16
sbb
mov
mov
xor
mov
jnp
call
cmp
divb
imul
aaa
inc
stos
xor
or
xor
xchg
je
jg
mov
adc
push
test
stos
mov
popa
jge
jp
fsubrl
call
inc
mov
icebp
xchg
mov
pop
push
adc
js
jo
pop
insl
cmp
xor
mov
test
negb
mov
or
nop
jne,pn
aam
orb
pop
enter
inc
sub
push
in
sub
mov
jecxz
js
dec
lahf
lock
mov
push
lea
add
push
nop
mov
sbb
outsb
aad
and
cmp
pop
addl
shrl
shr
and
mov
cmp
dec
cmpsb
jne
imull
cltd
pusha
push
jae
push
out
stos
jae
fisubl
cmp
lahf
jno
push
mov
xor
fs
loope
mov
mov
inc
cmp
stos
es
push
loopne
pop
push
inc
stos
push
in
out
int
mov
push
add
mov
mov
sarb
adc
decb
inc
mov
push
mov
jae
jnp
inc
add
cmp
repz
or
fwait
add
pop
push
jge
mov
cmpsb
xor
xor
jmp
loopne
pop
fidivl
mov
or
imul
insb
nop
jp
xchg
xchg
scas
sti
xor
call
pop
mov
movsl
clc
or
shl
cli
mov
fs
push
xchg
jo
lahf
jnp
mov
dec
sub
jnp
add
sbb
mov
add
pop
mov
lods
testb
fidivs
jg
mov
lahf
popa
movsl
jge
das
xchg
test
inc
mov
stc
rorl
push
jge
mov
jns
xchg
sub
mov
xor
pop
xor
cmp
in
outsb
sub
or
es
divb
xchg
sub
adc
sub
cld
loop
fildll
cmp
scas
stos
xchg
add
adc
out
inc
data16
xlat
mov
cwtl
xchg
adc
std
mov
pop
call
jmp
jl
ret
in
add
int3
div
fucomi
and
xor
inc
xchg
cmp
push
fwait
cld
into
pusha
mov
stos
jl
int
add
and
and
inc
in
sbb
inc
adc
iret
inc
fs
mov
fisttpll
fadds
xlat
sbb
aad
jp
push
jne
out
dec
ds
xor
fsubrs
fcmovu
cmp
ud2
add
negl
std
out
sbb
andl
outsl
pop
les
divb
loop
fwait
lret
xchg
incl
jne
daa
in
xchg
mov
shll
push
imul
mov
gs
sahf
jnp
loop
mov
sub
jl
sub
dec
or
jne
in
push
fnstcw
push
in
dec
dec
adc
lret
push
xor
dec
idiv
in
andb
mov
dec
fs
push
ret
aam
push
fistpll
and
sbb
add
lahf
add
out
mov
jo
or
mov
mov
lret
rolb
testb
add
mov
adc
jmp
jecxz
pop
mov
hlt
cs
lock
adc
scas
pop
gs
xchg
fs
mov
outsl
xchg
shlb
sbb
test
and
or
sub
test
fstpt
mov
inc
mov
xchg
lret
stos
shl
es
loopne
xchg
jl
outsb
rcrl
xor
push
fsubr
and
aaa
sub
push
pop
ss
pop
adc
jb
inc
xor
lods
addl
addb
mov
inc
sbbl
loope
test
nop
ror
in
pop
xchg
xchg
jl
mov
push
mov
jg
xor
pushf
fmuls
pop
cmpsl
mov
mov
stc
lea
adc
nop
mov
outsl
mov
lahf
popa
and
dec
add
dec
pop
pusha
xchg
inc
call
sub
je
jae
xor
dec
sub
test
hlt
xor
sahf
js
mov
arpl
and
dec
jno
mov
xor
mov
out
sar
test
mov
cltd
mov
add
imul
call
arpl
inc
sub
pop
neg
jg
gs
nop
or
and
lret
cmp
adc
int
pop
and
cwtl
sub
cmp
push
lock
cltd
xor
mov
sub
xor
out
daa
xchg
mov
mov
xlat
mov
sbb
inc
shr
out
jnp
mov
pop
es
dec
fdiv
outsl
pop
bound
popf
hlt
and
and
or
sbb
dec
mov
sub
pop
and
mov
adc
popl
jb
test
mov
jnp
inc
lcall
cmp
inc
setnp
xchg
cs
pop
cmp
lret
mov
mov
movl
add
les
mov
out
xchg
pushf
push
mov
cmp
frstor
inc
pop
in
les
dec
stc
das
push
dec
test
cmp
insl
cmp
dec
enter
ljmp
repnz
pop
out
fwait
imull
or
imul
fistps
jo
cmp
in
mov
lret
sbb
loope
fisttpll
pop
or
push
xchg
add
scas
sub
pop
movsb
mov
cmpl
jle
lods
jg
xchg
push
inc
jno
pop
sbb
jnp
jl
test
xor
aam
mov
and
push
lcall
mov
insl
test
or
inc
or
and
push
fwait
shl
cmp
pop
mov
dec
push
in
fbstp
jb
fs
stos
mov
dec
adc
aam
xchg
xchg
iret
pop
psubsw
sbb
rolb
jne
stc
inc
add
lret
push
push
adc
mov
cmpsl
add
pop
add
adc
pop
push
fisttpl
and
rorb
xchg
xor
pop
add
xchg
mov
add
xor
xchg
js
push
ds
mov
push
mov
mov
mov
mov
cmpsb
aam
pop
xor
xchg
jo
rclb
dec
ljmp
lods
cmp
xorb
std
in
or
pop
inc
leave
out
js
mov
stc
js
push
add
sbb
idiv
shlb
out
shr
test
inc
fsts
xor
mov
add
jecxz
pop
pushf
add
push
pushl
out
lods
inc
inc
fidivs
popa
fcmovb
repz
cmc
dec
adc
xor
jno
dec
addl
xchg
push
icebp
test
jg
test
cmp
in
dec
into
xchg
mov
xor
in
sub
jne
js
stos
mov
push
pop
push
pop
ss
xchg
lods
add
jg
mov
sub
pusha
nop
xor
fcmovne
dec
repz
stc
xchg
and
xor
mov
jge
mov
xor
mov
mov
or
and
pop
pop
sub
sti
jbe
jge
shlb
add
shll
xchg
pop
add
xchg
out
jns
enter
mov
or
dec
dec
cli
add
loopne
roll
pop
aas
xchg
into
fisttpll
or
sbb
sti
jns
shlb
mov
sbb
insl
imul
daa
adc
jo
mov
imul
jl
and
pop
mov
jo
inc
ret
dec
jmp
jle
bound
inc
nop
adc
mov
outsl
idivl
jp
mov
clc
mov
nop
xchg
xor
pop
dec
sahf
jne
sar
scas
cmp
fsubrs
in
neg
lock
dec
sahf
pop
cmpsl
sub
lods
aas
jo
pop
stos
into
ret
jnp
and
sub
rcrb
mov
mov
jnp
mov
or
test
scas
out
out
xchg
cmp
mov
add
sub
mov
pop
xrelease
sub
pop
scas
mov
cmpsb
pop
in
imul
cmp
mov
or
sbb
xlat
inc
inc
rorb
ss
inc
pusha
cli
loop
sub
add
jo
shll
ja
mov
dec
push
ds
clc
cltd
es
mov
and
rcr
mov
xlat
scas
xchg
popf
leave
cmp
std
es
lods
nop
pop
andl
pop
movsl
iret
sub
jbe
loopne
ljmp
mov
fsubr
je
dec
es
popf
mov
mov
cs
push
xchg
fsubrs
mov
mov
xor
imul
sbb
jns
jbe
sub
xchg
push
sbb
sub
sbb
mov
pop
and
das
and
lcall
cld
fwait
pop
and
jl
mov
insb
xor
imul
pop
outsb
andl
std
ret
arpl
ret
pop
jge
aaa
push
jo
ret
and
jecxz
popf
stc
xor
stos
scas
xchg
fisubs
xchg
add
in
jge
enter
push
sbb
cmpsl
jnp
mov
enter
loopne
and
scas
loope
sbb
out
xchg
lods
xchg
push
aaa
lret
sahf
arpl
sub
cmp
sub
movsl
xchg
jmp
cmp
push
mov
and
adc
push
cmp
jge
subb
pop
stc
sbb
ja
push
ffree
jo
cmc
repz
jl
call
cli
lea
jmp
pop
mov
xor
sahf
fidivl
dec
or
adc
outsl
rcll
fldcw
pushl
mov
in
xlat
sarb
adc
or
out
push
xlat
xlat
dec
mov
iret
das
inc
xchg
push
lds
pop
pop
sub
cmp
adc
adc
inc
lods
and
popa
add
push
mov
push
sbb
push
imul
jmp
push
mov
adc
mov
jno
dec
xor
mov
push
ds
loop
imul
xor
inc
mov
jbe
pop
jbe
popa
xchg
cmp
out
pop
mov
bound
xchg
pushf
incb
mov
sub
lcall
int3
mov
sub
mov
sbb
xlat
adc
fcoms
mov
dec
loop
cmp
daa
xchg
les
movsl
movsl
out
into
xchg
mov
std
push
clc
movsl
pinsrw
shll
mov
pop
jo
pcmpgtw
out
and
aad
loop
and
insb
adc
je
mov
fcoml
out
push
pushf
insl
jbe
adc
mov
or
mov
push
cmc
add
xchg
fs
rorl
je
pop
leave
push
movsb
rcl
testl
xor
jno
mov
mov
clc
or
stc
sub
adc
push
sub
mov
sbb
in
movsb
sbb
xor
sti
and
jmp
data16
insb
and
cmp
pop
or
xchg
cmpsb
test
and
lea
ljmp
adc
rclb
arpl
inc
mov
sub
lahf
cmp
popf
fildll
jo
inc
iret
push
in
or
and
or
std
pusha
das
jge
cs
adc
es
mov
adc
xchg
pop
push
mov
in
stos
mov
dec
shlb
pop
nop
mov
pop
xor
test
mov
out
add
and
pop
jns
addr16
xchg
push
xchg
jmp
add
into
das
jp
ja
xor
jmp
mov
pop
push
fsqrt
push
nop
iret
push
aas
dec
sbb
divb
loope
arpl
repz
xor
or
adc
in
sarl
out
out
cs
nop
fstpt
xor
test
push
aas
call
in
xchg
in
dec
jno
repz
or
dec
lret
out
rorl
fsubp
xchg
sbb
cmp
add
jo
cmp
out
repnz
cs
mov
and
cld
and
fisttpll
or
fildll
jg
loopne
andb
cmpsb
lods
stos
shrl
cmc
push
mov
push
or
or
lea
or
out
vcvtsd2ss
dec
arpl
mov
rcll
xor
call
add
dec
sbb
mov
pusha
fpatan
cmp
scas
mov
lds
or
adc
push
mov
shll
or
cmpsb
imul
mov
je
lock
js
pop
jnp
xchg
loope
sbb
dec
xchg
lret
jp
sub
popf
jbe
or
shl
fucomi
pop
dec
xchg
add
outsl
rorl
ret
jmp
mov
mov
jg
fmull
pop
faddl
ljmp
cmp
or
jno
push
xchg
and
out
test
jns
dec
shl
mov
push
push
sub
jne
stos
cmp
pop
jo
es
xor
mov
sub
mov
ret
xchg
pop
dec
fmuls
push
add
and
dec
mov
xchg
or
adc
sbb
lahf
mov
pop
mov
cmpsb
push
xchg
call
jo
ret
in
out
pop
cmp
jle
jmp
pusha
out
mov
dec
push
stos
cmc
popf
in
stc
jge
inc
pusha
adc
dec
xchg
int
shlb
inc
nop
add
nop
rolb
in
push
mov
dec
dec
mov
outsb
xchg
jbe
pop
fsubrs
jmp
movsb
ret
push
mov
xchg
dec
cltd
rcrb
jg
aaa
dec
lret
dec
cwtl
push
fdivs
cmp
dec
loopne
in
roll
icebp
shlb
xchg
js
push
mov
push
fs
adc
jecxz
fsubl
jp
dec
ljmp
fmuls
jmp
adcl
cld
insb
lock
out
outsb
mov
mov
inc
je
ds
or
sub
insl
jg
or
jns
add
mov
pop
sub
ret
out
imul
or
pop
sarl
push
lods
mov
xorb
ds
data16
and
fidivrs
bound
les
add
and
and
aas
and
add
popl
cmp
jbe
mov
mov
dec
jnp
xchg
frstor
sub
push
jle
gs
mov
jecxz
js
or
add
sub
add
rclb
push
fdivl
int3
mov
cmp
aas
pop
adc
outsl
call
adc
push
repz
ja
add
xchg
push
and
mov
fs
pop
xchg
arpl
movsb
dec
cmp
orl
xor
cmpsb
lods
fcmovnbe
mov
pushf
lret
lcall
dec
clc
mov
movsl
icebp
insb
jo
in
int3
sbb
adc
mov
adc
mov
sahf
dec
jmp
pop
lcall
jecxz
popf
imul
scas
add
lea
or
jg
mov
arpl
add
mov
mov
push
push
arpl
fiaddl
and
add
outsb
sub
jno
jae
sbbb
mov
addr16
push
mov
shl
or
inc
test
xchg
sahf
and
fldt
cld
out
sbb
es
sub
std
mov
or
scas
pop
insb
sub
sti
cmp
dec
xlat
cmp
imul
rclb
jg
outsb
scas
dec
push
stos
xlat
and
xchg
jns
push
lahf
pop
cld
jnp
imul
ret
xchg
sub
xchg
negb
sbb
aaa
call
andl
mov
pop
test
cmp
out
fildl
fidivrl
lods
mov
out
push
dec
mov
mov
les
xor
pop
inc
pop
inc
adc
insb
xchg
ficomps
mov
xor
mov
addb
mov
mov
paddsb
pop
fwait
vpaddq
xchg
push
and
outsb
sbb
sbb
or
loope
push
fucompp
lahf
xchg
xchg
clc
dec
and
and
jp
jae
add
fwait
mov
inc
cmpps
xchg
stos
rolb
or
or
cmp
ret
xlat
cmp
sub
cmp
cmp
bound
sbb
mov
imul
pop
jnp
sbb
pushf
lds
mov
fcoms
mov
cld
sti
sbb
aaa
mov
cli
lds
popa
jmp
or
cmp
pop
sbb
pushf
clc
xchg
mov
inc
stos
cmpsb
in
adc
rclb
xorl
mov
loop
dec
filds
lret
inc
mov
mov
xor
add
in
pop
int
or
cmc
sarl
push
sub
ja
cmpsl
inc
cmc
mov
paddw
mov
push
push
push
add
notl
cmp
mov
jl
jp
push
es
xorb
sub
loope
jecxz
adc
or
ror
adc
inc
jae
les
push
or
lret
xor
repnz
push
repz
sbb
add
push
jecxz
pop
outsl
shl
jp
pop
jl
xor
pop
cmp
lret
imul
incl
je
into
jbe
adc
jno
sbbl
fimuls
xchg
rorb
cmp
mov
mov
xor
jae
jo
xchg
mov
test
imul
push
dec
and
jl
jae
iret
insl
ficoml
popf
int
xchg
out
cltd
imulb
lods
dec
xchg
shl
jp
negl
mov
add
in
jns
pop
dec
jl
sbb
adc
cmp
js
sbb
xchg
mov
pop
push
test
mov
cmp
and
cli
out
sub
ret
popa
sbb
cli
adc
xor
hlt
mov
hlt
lock
mov
pop
mov
das
or
adc
mov
xchg
jnp
sbb
ret
push
jne
or
adc
lods
outsb
and
in
loope
sbb
and
cmp
dec
push
xor
cmpsb
ret
sbb
mov
adc
cltd
pop
adc
ljmp
sti
or
dec
and
cmc
shr
add
dec
sbb
jb
out
sub
lret
fs
rorl
mov
mov
xchg
repnz
mov
out
test
movsl
std
cld
frstor
nop
inc
mov
xchg
stc
mov
cli
scas
push
mov
or
add
enter
shrb
lea
sahf
mov
cmc
mov
nop
xchg
mov
pop
ja
test
lds
hlt
xchg
cmp
add
push
add
daa
jle
adc
or
xchg
loope
ss
repnz
cmpsl
mov
sub
sahf
xchg
sbb
pop
cmp
xor
rcll
sub
dec
test
int
js
out
enter
inc
xchg
call
add
dec
cltd
xchg
fbld
imul
xchg
insl
imul
orl
repnz
sbb
cmc
sbb
insl
jo
dec
xchg
push
xor
inc
pop
mov
movsb
cli
mov
jecxz
ficomps
popf
leave
stos
mov
scas
cwtl
mov
aaa
inc
dec
xorl
push
jbe
stos
aam
push
in
aam
sarl
cld
int3
mov
adc
imul
and
addl
aas
leave
xor
xchg
xchg
lock
cld
jg
in
mov
jno
sub
lret
mov
and
sbb
push
adc
bound
fscale
icebp
imul
jns
in
nop
cmp
inc
clc
dec
ja
or
xor
leave
js
cltd
mov
outsb
repnz
fsub
cli
sbb
cli
inc
mov
lock
cmp
pusha
insl
mov
push
divl
or
fbld
dec
stos
sub
push
mov
sub
lret
add
mov
fucom
lret
test
mov
js
push
leave
sbb
test
push
xor
loopne
sub
sbbb
xchg
mov
fdivrl
repnz
fistps
inc
iret
lret
dec
xor
xor
sbb
push
divl
or
lcall
out
lods
jg
pushf
and
cmp
popa
testl
int3
mov
loop
sbb
arpl
cld
mov
jb
or
xchg
and
sbb
mov
fisubrs
fwait
stc
jmp
jp
cltd
pop
shlb
adcl
in
cmp
cmp
sub
mov
mov
pop
or
cmc
outsl
enter
pop
clc
sub
arpl
repz
push
fs
pop
pop
outsl
je
out
and
lahf
jp
push
pop
add
inc
sbb
test
sbb
out
xor
out
stos
das
mov
dec
xchg
add
pop
dec
icebp
cmpsl
inc
mov
and
cmp
divl
inc
pop
mov
inc
insb
mov
sbb
imul
mov
jnp
jnp
and
cwtl
inc
lock
inc
out
mov
lds
lahf
push
push
jg
sbb
outsb
push
pop
into
inc
dec
mov
sbb
jnp
into
stc
sub
das
cld
fistpll
test
orl
mov
repz
cwtl
pop
pusha
setne
and
lods
xor
and
jecxz
repnz
jle
dec
shrl
xchg
arpl
jl
inc
arpl
ret
push
sbb
cli
sbb
pop
add
xchg
in
sti
fimuls
imul
jbe
loop
dec
clc
ss
or
mov
mov
inc
imul
push
lea
in
mov
pop
mov
ja
nop
fwait
inc
lds
mov
xor
add
adc
enter
cwtl
mov
outsl
sahf
mov
dec
test
pop
and
xchg
dec
sbb
enter
and
test
inc
sbb
mov
mov
jb
cmp
sub
lock
adc
in
cmp
mov
adc
orps
push
nop
cmc
jnp
xchg
xor
rorl
lahf
ja
cld
arpl
movsb
outsb
xlat
in
push
jno
popl
pop
cmc
or
mov
cmp
mov
imul
adc
repnz
xor
out
in
and
stos
aas
cmc
fidivl
adc
fcoms
aas
rorl
mov
loop
out
dec
loop
fistps
pop
xor
mov
sub
add
arpl
sub
ljmp
inc
leave
pop
jns
sbb
sbb
xorb
xor
lds
push
movsl
sarl
cmp
add
xchg
fcoml
adc
sbb
or
mov
jo
jecxz
daa
or
sub
pop
fwait
test
inc
sbb
mov
lods
jecxz
adc
xchg
add
test
in
fs
inc
mov
inc
mov
outsl
pop
and
mov
pop
les
and
movsb
outsl
lds
mov
sub
mov
fadds
loopne
sarb
fwait
lods
lea
cmpsb
jno
push
cmp
push
add
lret
push
scas
add
ds
or
ficompl
cwtl
mov
sub
add
mov
cmpsb
jbe
pop
xor
mov
mov
jp
sti
fdivrs
push
std
jge
cs
sbb
xor
inc
sbb
jge
incl
mov
or
call
push
mov
jp
in
pop
dec
push
add
cmp
xor
sub
orb
popw
dec
rorl
dec
ljmp
insl
mov
inc
mov
je
cmp
push
lds
jbe
or
xchg
push
mov
sub
sbb
aad
inc
mov
pop
rclb
int3
sbb
out
test
push
inc
popf
sbb
insb
mov
subl
pop
cmpsl
or
popa
dec
or
xor
fucomi
add
cld
xor
or
iret
loop
or
cmp
cmpsb
add
lock
inc
or
into
jle
mov
daa
add
mov
nop
pop
stos
push
or
push
push
adc
sbb
rcr
lret
ret
push
inc
sub
push
lcall
out
out
in
push
push
cmc
jnp
inc
mov
adc
push
jb
pop
pop
jno
inc
and
pop
fidivrs
int
lods
scas
repnz
push
adc
xor
imul
inc
fbstp
decl
pop
je
pushf
je
mov
sub
mov
push
sbb
lds
test
inc
daa
mov
enter
mov
je
jmp
lods
push
cmpsb
les
test
cmp
clc
cmp
fdivl
sub
jl
dec
pop
adc
lock
iret
test
aam
pop
sub
and
popf
jb
or
mov
js
jmp
or
je
lea
add
mov
sub
lret
pop
cmc
je
gs
aad
sub
sti
adc
out
mov
mov
jmp
dec
jno
testb
dec
dec
add
adc
mov
stc
insb
test
dec
pop
call
int
in
mov
pop
int
int3
jb
dec
sub
cs
or
sbb
in
mov
loop
push
dec
dec
pop
inc
jae
dec
sti
mov
into
dec
scas
movb
jle
jbe
push
mov
mov
ljmp
sbb
dec
loop
mov
das
push
inc
lea
jnp
in
call
or
jmp
sbbl
lods
pop
mov
ss
push
push
jle
lret
lods
insl
clc
lahf
pop
xchg
push
out
mov
out
aam
inc
push
xchg
jb
cmpsl
and
movsb
sub
push
lcall
push
cmpsl
pop
je
sub
pop
shlb
mov
loopne
jne
lods
fbld
sbb
xchg
sub
rolb
xchg
test
imul
pop
dec
pop
sbb
dec
outsl
pop
push
xor
mov
mov
push
sub
sbb
mov
nop
dec
fldenv
notb
mov
mov
movsb
mov
shrb
mov
sbbw
dec
jmp
fs
mov
push
loopne
pop
test
lock
xchg
ds
cmc
add
imul
lods
into
dec
xchg
pop
les
shll
cwtl
cmp
jecxz
sbb
repz
in
out
mov
jl
add
adc
lods
jmp
fsubp
mov
mov
fdivr
lods
inc
popf
push
jecxz
fwait
int3
popf
or
inc
cltd
mov
pop
inc
out
ja
in
and
push
jmp
lods
insl
push
xchg
adc
cmp
in
jmp
or
clc
scas
pop
imul
dec
cmovge
cmovs
sub
pop
iret
gs
mov
sbb
stos
sbb
xlat
ss
jbe
xchg
inc
in
or
add
addb
rep
xor
add
loope
add
and
adc
add
add
sbb
add
xor
adc
add
and
xor
add
out
lea
push
and
stos
sti
fiadds
sarb
loope
cld
ss
mov
xor
stos
test
js
sti
loopne
stc
ret
in
test
jg
scas
jae
adc
incl
fisttps
testb
mov
fdiv
push
cmpsb
sub
std
dec
and
insb
inc
mov
inc
cmp
jnp
mov
add
fs
jbe
mov
push
dec
shr
xlat
popf
outsb
in
and
in
into
imul
cwtl
hlt
aaa
sbb
sahf
dec
sub
pop
fnsave
mov
adc
push
push
mov
pop
rorl
mov
or
push
add
out
in
nop
pop
ds
sahf
mov
out
adc
jp
or
cs
pushf
add
pmulhw
jmp
ret
je
sub
sub
xchg
cmp
adc
add
push
jg
lds
fimull
movb
add
cs
and
and
push
push
push
test
movsl
out
mov
mov
mov
mov
pop
mov
dec
test
mov
xlat
fldt
aas
dec
sbb
sahf
lds
movsl
movsl
sahf
test
ss
mov
sbb
mov
insb
and
pusha
dec
add
in
pop
push
out
jo
push
xchg
lds
adc
addr16
ja
in
adc
inc
loop
inc
addr16
jbe
add
or
ja
or
jns
xlat
push
std
mov
lcall
lahf
in
adc
jg
mov
mov
jns
mov
mov
pushf
xor
or
and
call
xchg
adc
pop
pop
pop
jecxz
out
xlat
xchg
dec
sub
cmpsl
mov
stc
jge
adcb
shrl
pop
imul
lcall
jbe
mov
movsl
outsl
mov
sub
enter
testl
test
stc
ds
mov
sub
mov
out
rclb
ja
push
pop
or
jnp
ja
pop
push
cmp
and
mov
jns
int
cmc
jmp
dec
pop
sub
test
dec
push
cmpsb
call
pop
mov
xor
xchg
and
sarb
mov
mov
add
mov
dec
rcrb
mov
repnz
gs
arpl
or
les
lods
or
adc
in
imul
sbb
jo
adc
idiv
mov
cmp
pop
push
andps
jb
jp
sar
pushf
ror
xchg
pop
es
dec
out
xchg
jae
push
in
pop
ret
fdivrp
and
sar
out
out
mov
arpl
jle
repz
xlat
loop
inc
fs
and
xor
sub
adc
addr16
dec
mov
dec
inc
jp
es
push
out
data16
daa
or
ss
icebp
sub
jb
xchg
sub
sbb
testb
mov
ss
lret
idivb
inc
inc
nop
std
inc
inc
aas
push
daa
sarb
cmpsb
scas
js
sbb
mov
aaa
out
adc
pop
mov
pusha
cmpsb
adc
inc
jbe
daa
imul
test
rcrl
icebp
sbb
mov
pop
xor
aam
repz
mov
add
mov
jnp
lods
xor
rcrb
fisttpl
negl
fisubs
jecxz
mov
inc
mov
and
int
add
pop
mov
js
cwtl
sbb
pop
int3
pop
in
sub
pop
mov
adc
cltd
pushf
xlat
ret
aam
js
push
adc
andl
mov
inc
cmp
fidivs
bound
or
mov
das
mov
cmpsl
test
or
mov
xor
adc
sbb
jge
sbb
xchg
lds
std
inc
add
mov
jno
sti
or
dec
popa
and
sbb
xchg
inc
hlt
mov
sub
mov
imul
pushf
pusha
jecxz
fistpl
scas
outsl
pushf
add
mov
data16
in
jmp
int3
jge
dec
pop
adc
adc
push
mov
jle
cmpsl
push
mov
mov
in
and
rcll
sbb
es
xchg
mov
clc
cmpb
mov
outsb
outsb
jbe
gs
cltd
mov
push
clc
push
xchg
fcmovne
pop
pop
xchg
bnd
insb
jnp
mov
ret
in
ljmp
jl
lods
and
cld
vpunpcklwd
imul
inc
les
test
in
xchg
mov
jnp
in
and
mov
push
arpl
iret
pop
inc
insb
das
into
sbb
je
cmp
int
jnp
ljmp
pop
and
ja
jle
and
add
shrb
ds
mov
daa
mov
push
in
dec
scas
push
mull
lahf
insl
aad
test
dec
mov
xchg
xor
movl
fwait
sahf
jl
sub
mov
es
dec
jle
fstl
enter
jp
sub
push
aam
dec
cltd
sbb
xor
jl
xchg
dec
xor
dec
push
mov
test
xor
inc
shlb
addr16
mov
cltd
xchg
iret
pop
jecxz
aaa
movsl
or
dec
lret
cmp
and
mov
add
int
sub
jg
ror
pusha
movsb
push
sbb
adc
ds
stc
xchg
pop
repnz
xchg
or
mov
test
xchg
or
inc
cmc
or
cmp
aam
or
cmp
inc
add
es
or
jbe
jnp
mov
jg
xor
rcrl
push
dec
and
jae
dec
fidivrs
loope
push
pop
cltd
cmp
mov
push
sub
mov
xor
test
inc
daa
sbb
add
push
xor
aad
mov
test
incb
mov
mov
push
or
mov
nop
scas
cmp
pop
sub
scas
stc
scas
or
push
ret
test
pop
adc
ja
xchg
imul
lahf
sub
push
mov
leave
xor
fisubrs
in
or
fs
fidivs
ja
jge
pop
dec
dec
inc
mov
decl
ret
or
jb
addr16
sub
sub
bound
insb
mov
push
push
imul
xchg
mov
xor
andl
aad
sub
mov
push
outsl
hlt
jae
inc
dec
jl
aaa
stos
jl
and
dec
pop
pop
outsl
lods
jb
pop
dec
sbb
xchg
jl
pusha
push
sub
mov
jge
add
push
cltd
pop
dec
sub
inc
xchg
lret
add
repnz
xor
jnp
push
sbb
sahf
in
aad
pop
and
testb
mov
pop
faddp
push
jg
mov
mov
jecxz
aam
xchg
stos
push
adc
rcll
je
sbb
ds
lret
pop
or
cmpsb
in
rolb
mov
call
inc
in
xchg
je
jge
mov
aad
bound
lcall
fnstenv
xor
add
add
sahf
sub
in
sbb
adc
xor
scas
in
or
sbb
mov
xchg
out
jne
xchg
inc
popa
sub
clc
and
and
mov
cmpsb
mov
js
sub
lods
adc
aaa
scas
cmp
cld
mov
jp
add
jl
push
push
inc
mov
dec
push
push
lock
xor
sti
test
lds
cli
mov
xchg
xchg
sbb
stos
jb
in
data16
mov
mov
std
notl
jge
cmp
and
in
xchg
jmp
les
arpl
addr16
sahf
push
jb
scas
dec
sbbl
fcoms
sbb
or
orb
aam
fdivl
adc
inc
pop
orl
sub
std
call
ja
dec
mov
in
test
mov
std
subb
scas
clc
jae
xchg
xor
mov
outsl
clc
push
or
xlat
ret
hlt
inc
adc
mov
shll
push
addr16
out
pop
sbb
xor
call
cmpsb
int3
push
dec
sbb
jge
ljmp
jge
jecxz
sub
cmp
repz
ljmp
mov
test
imul
mov
lahf
cli
lods
or
cltd
mov
scas
push
dec
popf
jo
sub
add
movsb
inc
pop
scas
das
adc
xchg
rolb
mov
pop
lea
daa
push
imul
dec
push
gs
ret
insb
xchg
aam
lret
jg
mov
inc
enter
and
inc
call
cmp
test
movsb
ja
push
xor
mov
sbb
push
hlt
inc
data16
dec
mov
mov
cli
sbb
pop
adc
test
mov
int3
pushl
or
sub
pop
lret
cmpsl
int3
fwait
in
push
pop
jle
out
loope
fcomps
mov
repnz
xor
and
pop
dec
rorb
push
push
shlb
and
push
addr16
xor
mov
mov
or
jecxz
stos
sbb
inc
inc
cmp
jl
in
bound
ljmp
add
add
popf
mulb
sub
or
lds
ret
jae
movsl
pop
pushf
std
outsb
outsl
cmpsl
mov
xor
lods
ss
push
cltd
lret
push
test
fimuls
xchg
sbb
in
pop
push
inc
sub
pop
adc
xchg
push
mov
push
or
nop
add
arpl
es
jle
push
shll
mov
sbb
xchg
repnz
mov
jg
lods
sbb
mov
adc
cs
lods
pop
xlat
int
mov
xor
sub
cld
into
jo
mov
ficomps
loopne
mov
push
adc
push
insb
and
shrl
fwait
mov
orl
inc
push
bound
insb
orb
add
push
flds
popa
push
sbb
ds
cmp
push
push
cmc
fwait
jae
out
sbb
stos
push
mov
les
xchg
xchg
adc
es
dec
mov
pop
mul
in
cmp
pop
gs
pop
mov
adc
test
cwtl
mov
jge
mov
das
sub
fcoms
clc
push
scas
pop
xor
mov
loope
jp
jbe
sub
cwtl
pop
pushf
fdivrl
inc
dec
mov
cmpl
add
xor
orb
sbb
xchg
cwtl
mov
add
mov
add
adc
movsb
rcll
addl
movsb
je
icebp
pop
ret
pop
sbb
and
or
lods
push
pop
mov
hlt
mov
and
pop
lds
add
out
cmp
pop
sbb
stos
push
sahf
pop
sbb
jecxz
enter
jecxz
add
sub
mov
xchg
adc
fmuls
daa
dec
push
mov
pusha
jecxz
hlt
insb
outsb
sub
neg
loopne
leave
pop
mov
mov
mov
push
push
jnp
leave
jae
mov
mov
ss
enter
adc
setg
adc
popa
sbb
nop
xor
rclb
rcrl
cmpsl
js
sbb
sbb
and
dec
jns
sub
jno
jno
cmp
ret
ss
loopne
pop
in
scas
xchg
sbb
mov
loope
inc
jge
test
add
add
push
negl
jmp
pop
cmpsl
addr16
insl
inc
clc
pop
and
xchg
cmc
shlb
xchg
push
xor
ret
ficomps
mov
mov
push
jnp
add
ja
mov
jecxz
mov
jae
sahf
in
add
jnp
mov
sub
push
imul
scas
aam
push
decl
or
mov
lahf
mov
add
outsl
dec
xlat
aad
int
or
fwait
push
inc
or
cmpsl
aas
xchg
xchg
push
jle
rcrb
rcrb
js
sarl
dec
pushf
pop
fnsave
mov
push
pop
xor
scas
cli
jg
sbb
dec
push
icebp
xchg
push
adcl
inc
push
or
xor
pop
jo
push
ds
or
inc
test
leave
lock
mov
mov
add
sub
icebp
jmp
add
cmp
lret
hlt
dec
dec
mov
jne
cmpsl
jbe
mov
push
add
cmpsb
das
push
loop
jno
icebp
mov
stos
and
adc
mov
mov
xchg
stc
jle
cmp
outsb
aam
daa
fsubrs
add
push
mov
sub
pop
sub
adc
pop
jbe
popa
into
and
pop
adc
aad
sarb
in
add
fcomps
pop
data16
dec
sti
loopne
out
orl
rclb
into
aad
cmp
dec
push
cwtl
or
adc
and
enter
scas
aam
fnstenv
sahf
stos
xchg
icebp
mov
mov
jnp
mov
dec
jmp
dec
inc
cmp
dec
mov
jne
jns
sbb
lods
sbb
cwtl
xchg
push
mov
inc
xchg
ror
popf
gs
std
insl
leave
ret
sahf
jbe
inc
dec
mov
inc
aaa
js
insl
pop
sub
sbb
mov
jge
sbb
ljmp
ret
sarb
std
dec
popa
mov
xchg
xor
imul
dec
aaa
cld
dec
fiadds
inc
xchg
out
lea
or
ret
mov
push
lcall
fstpl
xor
pop
fwait
sub
iret
mov
mov
add
cmp
inc
xchg
pop
fcompl
pop
xchg
test
mov
lea
and
scas
out
or
jp
outsl
enter
xor
adcb
inc
test
fsubrp
xor
xchg
sbb
jle
int
cli
push
or
jae
out
dec
dec
push
mov
mov
push
mov
dec
loopne
add
lock
gs
pusha
imul
je
xchg
aad
data16
bound
test
int3
jb
cld
test
add
das
scas
mov
or
mov
sbb
cmpsl
out
lret
or
cmpsb
pop
stos
pusha
cmp
inc
mov
mov
imul
andb
sub
and
add
push
adc
lods
scas
cld
mov
orl
jnp
popf
push
fstp
loope
jb
mov
cmp
xor
fidivl
sub
es
fwait
out
sub
gs
std
rorb
push
pop
pop
nop
mov
mov
or
dec
pop
cmp
sub
fnstenv
mov
leave
xchg
mov
clc
bound
xor
pop
xlat
dec
and
and
sahf
adc
rorl
add
roll
push
iret
out
jns
sub
dec
insl
out
or
insb
sbbb
mov
icebp
ljmp
jmp
jns
imul
ret
mov
jge
and
sbb
clc
sub
push
out
push
test
lret
loop
mov
subb
pusha
fld
jp
jae
pop
ret
xlat
mov
scas
insl
xor
aad
xchg
inc
hlt
mov
dec
and
jge
jle
mov
inc
test
sarb
pop
data16
adc
testl
mov
xchg
out
or
lret
pop
test
popa
push
pop
push
mov
cmp
add
jae
popa
add
or
pop
ljmp
pop
sbb
mov
fdivrl
jle
lods
xchg
lods
ret
xor
call
or
scas
sub
mov
xor
enter
out
cs
cmp
xor
fsts
je
push
pop
mov
add
int
push
pop
or
jne
push
inc
fistl
jle
pop
cltd
and
mov
test
in
ss
scas
fadds
xchg
mov
mov
add
loop
pop
loope
cli
sahf
fnsave
in
jp
push
mov
jle
inc
adc
inc
push
leave
test
in
imulb
fsubr
ret
pop
dec
pcmpgtb
out
fadd
pop
mov
cmp
fimuls
sbb
out
sub
sub
stos
pop
dec
adc
add
dec
ror
push
cltd
aam
adc
in
imul
in
cmp
jle
cmpl
fucomp
push
loopne
add
adc
xor
stos
xor
call
pushf
cmc
and
iret
arpl
sahf
jge
jecxz
add
in
les
aas
cmpb
dec
add
sar
inc
mov
jnp
inc
subl
mov
cmc
jecxz
inc
inc
lcall
pop
mov
and
bound
push
pop
jl
jns
jmp
xorl
int
cmpsb
cmpps
rcl
push
pop
loopne
mov
inc
jp
xor
pushf
andl
rclb
sbb
push
iret
push
cli
ja
cli
jo
mov
iret
insb
sub
mov
mov
sub
cwtl
in
ret
or
ss
in
cmp
pop
or
mov
ret
or
or
sub
inc
test
daa
inc
int
sub
fcoml
gs
lods
push
cmpl
idivl
sahf
fidivs
es
mov
xchg
xchg
dec
xchg
sbb
or
insl
adc
adc
jp
sbb
inc
enter
mov
bound
dec
loope
dec
add
shlb
push
jne
sub
sti
cmpsl
std
mov
ja
sbb
out
fisubl
mov
sbb
jns
pop
movsl
cwtl
mov
divps
insb
mov
cmp
and
push
sub
into
pop
out
push
adc
mov
test
sub
ss
and
mov
xchg
push
imul
mov
and
xchg
loope
into
adc
fsubr
cmp
dec
mov
in
out
add
inc
imul
push
movsb
insl
jmp
mov
lds
lret
jbe
dec
and
les
or
mov
femms
cld
mov
enter
fbld
ja
pop
sbb
jb
lods
adc
xor
les
push
inc
or
outsl
into
addr16
jae
pop
cmpsb
cld
adc
movsl
add
dec
leave
lods
pop
mov
bound
lret
mov
mov
out
stos
sub
dec
sub
outsb
shrw
adc
cmpl
mov
inc
and
jnp
imul
adc
subb
mov
mov
lods
mov
in
hlt
outsb
lods
leave
xchg
adc
adc
or
or
sar
add
cmp
push
cmp
sbb
pop
lcall
shlb
in
dec
pop
sti
or
and
xchg
xor
jmp
mov
loop
lods
or
adc
inc
and
das
or
mov
loope
sbb
into
fs
pop
loopne
scas
inc
sbb
das
cwtl
or
cld
inc
jns
sub
push
cwtl
fs
mov
fistpl
xchg
and
inc
fcmovnu
pop
aaa
mov
dec
jp
jle
mov
push
test
and
adc
mov
inc
fstpt
pop
and
sbb
jecxz
pop
dec
mov
mov
scas
mov
cmc
test
es
fadds
cmp
rclb
adc
mov
ja
mov
stos
pop
xchg
mov
out
pop
fmuls
jae
mov
cmpsl
cltd
jne
jmp
and
ja
sub
push
jae
and
dec
ret
idivb
inc
popf
sub
or
daa
scas
ss
pop
loope
jbe
pop
pop
mov
xor
add
mov
negb
imul
sahf
adc
lds
pusha
test
lahf
aas
jne
ffree
nop
mov
jbe
inc
mov
xchg
add
ss
add
mov
dec
iret
xchg
cwtl
jns
mov
insl
jl
add
leave
xchg
clc
das
xchg
mov
push
imul
or
rorl
subl
jne
stos
jo
mov
in
add
sahf
mov
test
clc
ret
in
cmp
loop
xchg
sti
inc
xchg
repz
adc
rcl
push
sub
xchg
add
adc
dec
xlat
bswap
jg
cli
jb
adc
xor
in
lock
divb
pop
lods
xchg
fidivrl
xchg
cmp
rcll
in
add
out
inc
jo
push
repnz
movsb
repnz
pop
out
cmp
push
mov
scas
movsb
lcall
cli
loope
push
mov
cs
xor
pushf
lds
scas
fwait
into
stos
dec
mov
pop
cmc
xbegin
out
push
sub
stos
jle
pushf
idivb
shrl
enter
sbbb
cli
movswl
mov
inc
int3
add
in
add
mov
mov
pop
daa
xchg
xchg
sbb
mov
xchg
adc
int3
adc
pushf
shll
fcompl
mov
cmp
mov
mov
inc
sbb
sbb
not
insb
mov
xor
jl
fsts
pop
fidivl
or
xlat
notl
in
hlt
loope
jbe
aad
test
nop
sarb
mov
cs
lret
mov
mov
push
inc
leave
mov
imul
and
test
test
add
or
inc
iret
or
std
pop
add
mov
cmp
xor
or
jno
mov
jp
mov
and
and
and
dec
int
sbb
dec
or
leave
jge
lods
addr16
cmp
mull
outsb
sbb
clc
mov
pop
lods
push
jmp
fs
dec
addr16
mov
xchg
repz
sub
or
or
lea
les
push
xchg
adc
ss
adc
sti
dec
add
inc
inc
mov
jecxz
icebp
repz
in
xor
les
mov
pop
stos
test
or
push
sbbl
sbbl
push
insl
cs
out
test
gs
outsb
fisubrl
jo
sub
dec
push
fwait
add
leave
andb
idivb
cld
cmp
cmp
fstpl
es
add
cmp
fisubs
popa
cmp
inc
mov
and
ds
popf
stc
in
cmpb
push
xchg
sub
xor
xchg
roll
jbe
mov
mov
adcl
stos
xor
adc
mov
test
mov
daa
jne
mov
outsl
cwtl
push
subb
inc
add
adcl
pop
dec
mov
jge
sti
inc
cmp
mov
arpl
jb
mov
jp
popa
adc
push
aad
jne
mov
test
loope
sbb
mov
out
lods
in
xchg
adc
lock
div
ja
adc
shll
dec
add
insb
jmp
dec
mov
jae
cli
fisubrs
push
pop
loopne
dec
aad
and
fldcw
mov
cmpsl
arpl
outsb
xchg
cld
jg
inc
cli
jne
fdivp
popa
repz
push
add
cmpsb
mov
mov
cmp
repnz
mov
jnp
mov
jle
adc
xor
loop
jecxz
test
xchg
data16
aam
testb
pop
mov
outsb
and
fwait
mov
lahf
cmp
inc
ficoms
insb
call
loop
lods
sbb
repz
aas
out
inc
bound
ss
jp
xchg
movsl
or
adc
fnclex
lods
push
add
xorl
xor
jno
adc
cwtl
xor
and
xor
in
sub
sbb
pusha
add
push
mov
arpl
sub
pop
inc
dec
iret
pop
add
mov
jb
sub
inc
add
stos
mov
iret
test
movsl
insl
icebp
inc
cmp
lds
jbe
ficomps
js
aam
and
divb
sbb
aam
sbb
pop
fistps
adc
lea
and
std
mov
add
fildll
pop
outsb
outsl
inc
lods
inc
mov
mov
orb
into
jg
mov
jbe
ret
sub
stc
pandn
les
aad
sahf
push
fwait
cwtl
xchg
pop
inc
ljmp
or
mov
mov
inc
fstpl
pop
xrelease
lret
push
call
jecxz
jmp
lock
ret
movsl
fldcw
mov
sbb
and
pusha
inc
push
hlt
outsb
cs
or
or
ds
sub
adcl
inc
push
mov
in
adc
scas
push
cmp
sub
bswap
mov
ret
jg
sbb
inc
sahf
lods
daa
icebp
lods
js
sub
and
mov
aas
xchg
mov
cs
and
or
je
xor
call
dec
inc
jb
inc
js,pt
sub
add
lods
dec
push
push
mov
shll
loopne
adc
push
lds
mov
adc
jns
lahf
xchg
nop
cmc
pop
pop
leave
fldl2e
ficoms
mov
cli
daa
repz
fcompl
dec
sbb
sahf
and
popf
divl
cmpsl
xor
pusha
leave
inc
cli
sbb
fistl
sarb
xchg
push
adcb
dec
test
xor
sub
cld
fcomp
out
dec
in
sub
dec
push
ret
iret
rcrl
lahf
outsb
and
sti
lret
jle
test
mov
push
and
jg
lods
call
int3
and
inc
ret
add
cmp
test
scas
push
xor
mov
imul
pusha
jp
int
dec
insl
into
jg
lock
mov
xorb
je
mov
jle
fs
lret
xlat
je
in
mov
sbb
push
xchg
outsl
xor
popa
ds
stos
outsb
pop
or
xchg
loop
loope
test
pop
mov
inc
jnp
xor
xchg
cmp
das
lds
push
cmpl
fldl
jns
xchg
add
loopne
es
stc
inc
pushf
mov
mov
test
add
shl
inc
jge
outsb
push
data16
sbb
mov
scas
adc
ret
mov
jbe
lea
adc
scas
jge
cmc
push
frstor
subb
add
mov
ljmp
nop
or
push
push
fistpl
ljmp
cwtl
insl
in
in
or
xchg
in
repnz
sbb
jo
inc
aaa
sarl
hlt
inc
push
xchg
push
insl
mov
hlt
loopne
cltd
loopne
mov
and
icebp
add
inc
in
lea
adc
push
adc
mov
dec
loop
xor
jmp
insl
out
mov
cmp
sarb
lea
aam
dec
das
jns
scas
dec
jno
or
xor
nop
pop
lods
ljmp
mov
xor
xor
mov
jp
int3
mov
gs
push
inc
andps
sbb
jb
inc
jmp
xor
adc
popa
mov
fcmovnbe
lcall
xor
pop
call
out
adc
insl
cltd
add
pop
mov
jne
fs
subl
xchg
in
xchg
dec
sbb
xor
add
loop
xchg
fstpt
fisttps
nop
jo
repnz
sbb
mov
xor
mov
repz
lock
test
fistpll
in
pop
fidivl
outsl
out
jne
pop
xlat
aas
and
call
daa
cwtl
fisttpll
add
xor
insl
lods
int
sub
mov
outsb
pop
adc
and
inc
pop
sbb
ficompl
adc
add
and
repnz
sbbl
pusha
or
push
fdivl
rcrl
jns
push
movnti
mov
push
hlt
sub
sarb
pop
fwait
and
out
hlt
add
mov
xor
push
lret
sbb
leave
cmpsl
mov
stc
add
or
jecxz
or
mov
adc
or
mov
call
add
aas
dec
pop
inc
je
mov
mov
pushf
fsubrl
dec
or
cli
or
xchg
cmp
xchg
notb
stc
mov
addb
outsb
or
pusha
inc
push
pop
dec
in
cltd
ds
sarl
das
outsl
test
xchg
ja
jg
xchg
stos
pop
push
shrl
cmp
insb
adc
and
jmp
ljmp
jle
push
xchg
jae
jno
cwtl
in
push
mov
sti
or
push
jns
adc
inc
jne
cmp
xor
aad
mov
hlt
sbb
push
lds
xor
sub
xchg
outsl
xchg
or
xchg
roll
jge
in
aad
add
js
jb
test
data16
aaa
xor
outsl
push
mov
mov
or
repz
dec
jne
pop
hlt
cmc
inc
fadds
mov
xlat
or
int3
mov
push
cmp
mov
lods
fsubrs
test
xlat
mov
lcall
adc
in
xchg
das
clc
pushf
sbb
xor
add
outsb
xchg
inc
popf
jge
pop
cwtl
sub
into
aam
ret
test
insb
repz
cs
pop
and
adc
inc
imul
loop
mov
add
xchg
dec
out
pop
push
clc
add
idivl
push
fwait
shlb
mov
cmpsl
scas
and
test
xchg
dec
stos
lret
fldlg2
pop
shlb
icebp
pop
cmpsl
test
insl
jno
mov
lea
nop
test
cmp
fistpll
loop
adc
cmc
sbbb
mov
repz
jle
arpl
lret
jbe
cwtl
push
rclb
cmp
scas
sahf
xchg
cltd
push
inc
mov
add
pop
ret
xor
fiadds
mov
ficomps
daa
sub
xor
bound
dec
sub
push
xor
add
adcb
fisttpll
ljmp
push
clc
pop
icebp
adc
lods
fmul
sub
push
gs
fucomi
stc
inc
xchg
insb
pop
lret
ds
out
int3
mov
mov
xchg
and
jl
cmp
or
sti
inc
ds
pop
movsb
sbb
stc
add
test
jno
mov
jg
loope
xchg
mov
xlat
es
test
xchg
jo
cs
lcall
lods
movb
mov
pop
jp
dec
loopne
xchg
pop
pop
outsb
fists
push
in
xchg
mov
in
lcall
adc
dec
clc
cs
dec
aaa
add
jb
les
aaa
jne
push
addr16
jne
arpl
jo
test
inc
xchg
nop
lods
icebp
pop
push
in
and
arpl
ficoms
or
xor
idivl
cmp
call
pop
sbb
ret
mov
dec
mov
cmp
iret
icebp
cmpsl
fcoms
cmp
mov
xor
sbb
and
cltd
mov
roll
cmpsb
mov
xor
push
popf
inc
ret
push
mov
adc
inc
dec
leave
and
movsb
sub
xchg
push
clc
sbb
int3
dec
arpl
cltd
cmpsl
sub
mov
repz
fcmovnbe
sarl
cs
lock
bound
addr16
mov
mov
sbb
cld
sbb
fbstp
aam
out
add
dec
pop
and
cltd
mov
inc
inc
cmpsb
push
sbb
xchg
add
data16
xchg
shlb
pop
sarl
sbb
xor
les
pop
mov
cwtl
shr
push
mov
imull
jecxz
loope
and
cwtl
mov
or
push
mov
dec
push
mov
clc
inc
cmp
or
sub
push
or
mov
jno
movsl
out
aad
mov
sbb
psubd
jl
lock
add
cmp
xchg
mov
rcr
outsl
adc
and
sarl
cmc
les
arpl
lods
dec
rcrb
lret
xor
and
fwait
cmpsb
jmp
or
clc
sub
call
jp
sbb
pop
ret
out
pop
mov
fdivrl
mov
xor
jns
out
sbb
mov
rol
pop
sbb
add
mov
dec
test
push
adc
and
xor
push
cmp
push
sbb
scas
dec
add
dec
and
stos
cwtl
mov
jle
movsl
cs
je
push
mov
jmp
rcll
inc
dec
call
xor
jno
pop
leave
pop
arpl
outsl
ss
jb
push
out
xor
xor
sub
stc
cmp
in
inc
jp
sbb
inc
xchg
push
call
add
insl
jae
fdivrp
out
int
xor
mov
add
jns
add
fld
lea
or
sub
sub
call
imul
aaa
xchg
lret
xchg
dec
xchg
in
mov
pop
xchg
std
mov
lret
test
lock
repnz
stos
shr
out
ss
sub
cltd
sbb
daa
sub
adcb
jne
push
sub
jecxz
dec
test
cwtl
jp
scas
cmc
fsubrl
mov
les
addr16
movl
decb
pushf
stc
stos
mov
mov
iret
push
jp
push
add
movsb
add
ret
adc
stos
dec
jns
inc
ret
or
xchg
clc
cmp
inc
cmp
cmpsb
xor
insl
loopne
pop
fdivrp
scas
pusha
push
cmc
pop
dec
in
cmp
push
into
ja
adc
pop
push
jmp
aad
jbe
es
mov
or
lahf
lds
mov
or
sti
aaa
ret
movsl
dec
movsb
int
ret
and
stos
in
cld
test
push
add
das
cmp
cmp
ss
jno
mov
or
leave
mov
xchg
inc
jbe
insb
fwait
fwait
out
into
je
mov
mov
mov
fldcw
and
stos
test
adc
pop
sbb
cld
popw
cmp
jae
push
imul
xchg
fadds
lret
push
add
add
out
dec
pushf
xchg
addr16
or
jnp
cli
inc
and
jge
fcomip
inc
movsb
inc
jne
pop
add
loop
jmp
sbb
movsb
and
test
xchg
push
and
pop
rcll
aaa
pop
jl
jno
js
dec
xorl
cmp
lods
or
cmp
cltd
pusha
mov
adc
xchg
outsl
pop
aad
inc
adc
movsb
inc
xchg
mov
je
pop
add
lea
dec
jp
jbe
pop
in
jnp
add
pop
and
mov
data16
add
xlat
dec
adc
jns
fsubl
mov
add
lods
cmp
negl
popf
xorb
les
cmp
outsb
jbe
into
cmc
scas
adc
xchg
roll
inc
ret
add
push
mov
into
adc
jecxz
push
out
test
jns
test
insl
int
loop
add
leave
insl
es
decl
cmp
out
cmpsb
adc
nop
repz
repnz
adc
jecxz
clc
scas
loopne
xchg
jg
out
cli
in
sbb
mov
fisttpll
mov
sahf
push
xor
call
iret
or
paddsw
lock
sub
mov
pop
andb
mov
inc
das
adc
xchg
jae
lods
and
test
adc
jne
inc
dec
mov
adc
int
add
fs
js
divb
pop
pop
daa
push
ficompl
and
into
aam
pop
add
pop
lds
mov
testl
add
js
sub
in
inc
ret
js
stos
sbb
push
addr16
cld
test
and
mov
ror
adc
push
pop
sbb
cli
icebp
repnz
sarl
push
hlt
into
imul
adc
inc
movsb
lahf
mov
push
movsb
pushf
jnp
jne
fstps
stos
fwait
leave
mov
ss
pop
mov
stos
xor
xchg
out
mov
xor
out
xlat
mov
push
dec
sbb
out
repz
aam
or
xorl
popa
push
cmpsl
mov
and
adc
sti
sub
ss
sub
roll
xchg
rolb
daa
int3
mov
ret
aas
out
decb
lea
aas
test
out
mov
adc
xlat
and
fs
loope
and
addb
lcallw
cs
xchg
rol
add
xchg
imul
mov
sbb
adc
rcl
pushf
mov
ficompl
aad
stc
sti
sbb
insb
fs
pop
dec
dec
cmp
xchg
ret
mov
in
fidivrl
mov
js
mov
nop
add
ret
xchg
jbe
stos
pop
cmp
dec
sbb
pop
xlat
int3
xor
out
and
xchg
pop
ret
insb
mov
popa
xor
and
sub
xchg
fs
pop
or
decl
add
insl
mov
clc
clc
mov
cli
fimull
cmp
ss
sbb
mov
and
addr16
int
jg
ret
dec
cli
test
and
loope
xchg
sub
jo
or
lds
cmpsb
lods
repz
adc
cmc
sarl
fdivrs
arpl
xchg
cltd
std
pop
dec
subb
sub
mov
xchg
mov
push
cmp
js
adc
fs
scas
fwait
in
sahf
jbe
and
pusha
jo
popl
scas
mov
dec
add
fwait
es
loop
mov
or
fld
mov
pushf
push
aaa
sub
inc
push
out
mov
adc
ljmp
lds
mov
fstl
push
xchg
mov
outsl
mov
ja
xor
icebp
pop
pop
sub
add
lock
inc
or
xchg
mov
dec
mov
imul
push
ljmp
add
add
cli
int
pop
push
mov
mov
inc
pop
push
call
stc
call
outsl
or
xor
push
cmpsl
sbb
pop
jo
scas
jmp
sbb
add
mov
test
stos
push
dec
mov
les
xchg
jg
addr16
pop
mov
jecxz
inc
mov
cmpsb
shlb
inc
jle
cmc
add
jg
repz
imul
movsl
xchg
inc
push
imul
xor
jge
jns
imul
fs
ja
and
xchg
fcomp
pop
sti
adc
mov
push
lods
rolb
mov
inc
test
jmp
or
stos
mov
sarl
mov
stos
cmp
lods
push
or
lods
pop
xor
push
and
subb
and
inc
fiadds
xchg
cmp
push
jl
jbe
cmp
rclb
andl
das
rorl
xchg
gs
add
addl
push
movsb
mov
jae
push
es
mov
cmp
daa
popl
pop
xchg
lea
pushf
mov
push
ret
scas
push
pop
lcall
inc
fcom
or
int3
lods
sahf
in
dec
jbe
inc
imul
mov
test
inc
jge
adc
ret
sahf
push
pop
inc
std
mov
sbb
lods
fdivrs
xchg
and
sbb
cmp
sub
inc
xor
insl
cld
push
sbb
or
mov
sbb
imul
rorl
xor
jo
add
and
repz
lcall
xchg
mov
sub
and
add
xchg
push
and
and
xlat
pop
jg
jne
mov
xchg
sbb
and
sub
cmpsb
mov
stos
scas
clc
cmp
jecxz
bound
or
lcall
fldt
movsl
and
js
fildll
and
bnd
inc
hlt
push
xchg
in
jne
push
dec
xchg
xlat
sub
lods
mov
mov
pop
pop
inc
cmp
mov
jmp
xor
push
shrb
lock
adc
cmp
mov
adc
jnp
aaa
push
inc
jl
add
je
inc
cmp
mov
addps
xchg
xchg
lock
adc
sahf
add
popa
subl
xchg
loop
out
insl
imul
lock
imul
into
push
flds
lock
xchg
ret
das
ss
dec
faddp
and
clc
push
and
sbb
outsl
stos
cltd
andl
jnp
xor
sarl
inc
cmp
xor
icebp
push
dec
insl
mov
adc
insb
pop
xchg
mov
inc
loopne
aas
jmp
daa
dec
bound
xchg
daa
loop
push
rcl
fs
loop
enter
daa
cmp
inc
add
cmc
mov
push
cwtl
push
lock
test
xor
pushf
adc
pop
mov
sub
lods
sbb
stc
adc
cld
pop
das
ret
iret
je
jmp
imul
inc
sub
push
pushf
stos
cli
or
js
sbb
les
push
test
mov
fsubr
sbb
inc
ja
ret
mov
cmpsb
inc
ror
jno
enter
in
or
clc
sar
loope
xchg
insb
mov
iret
sbb
cmpsl
sti
dec
adc
testl
in
inc
sub
xbegin
xor
push
clc
jne
subb
mov
sbb
sbb
popf
fimull
mov
dec
aas
xor
sub
icebp
xchg
lock
leave
and
pop
repz
int3
and
sub
cmp
mov
cli
pop
shlb
fisubrl
inc
xchg
jl
mov
sub
dec
mov
mov
push
sti
stos
dec
rcl
rcr
mov
insb
fsts
push
cltd
pop
loope
dec
imul
mov
and
pop
inc
call
shl
add
push
mov
add
pop
mov
fwait
dec
fisubl
mov
aaa
xchg
movsb
mov
sub
jb
adc
sbb
pop
mov
js
dec
mov
xchg
jle
or
dec
add
jmp
js
push
dec
or
adc
jo
or
int
xor
stos
jmp
iret
sub
fstps
movsb
xchg
and
leave
inc
sahf
jl
pop
cmp
fwait
int3
or
pop
lods
mov
test
mov
push
aas
mov
dec
loopne
sar
push
xchg
mov
fidivs
fldenv
fucomi
cmp
mov
fisubrl
and
lock
maxps
gs
int
repnz
inc
lcall
pop
xchg
dec
out
imul
jle
arpl
xor
xchg
mov
fidivrl
adc
adc
cmp
das
mov
cli
push
test
enter
inc
hlt
xchg
shlb
faddp
popf
nop
je
push
and
adc
stc
hlt
push
push
cmp
mov
out
in
push
out
pushf
gs
call
mov
std
repnz
shll
push
mov
xchg
scas
mov
ja
into
cltd
aad
cmc
pop
aam
and
sub
dec
adcb
pop
mov
dec
jo
push
stc
std
inc
lea
in
aad
inc
add
mov
mov
sti
stos
cmp
and
fildll
or
mov
cmp
js
mov
insb
inc
xor
push
jg
loope
xchg
push
clc
mov
mov
sub
push
jl
dec
and
push
push
gs
mov
into
adc
sub
rolb
lcall
mov
repz
pop
arpl
stc
out
cmpsl
sub
and
jnp
imul
test
mov
add
mov
mov
shl
xchg
incb
or
xor
inc
pop
mov
xchg
shlb
mov
rorl
rol
mov
push
in
test
xor
inc
aas
stos
cmp
cmp
push
cltd
mov
pop
or
mov
pop
insb
push
inc
sub
push
xchg
in
fidivl
int3
add
movsl
cmp
adc
fldt
mov
scas
loop
lea
mov
std
out
sub
xchg
dec
movsb
insl
jmp
aaa
jle
xchg
stos
out
and
jo
outsb
inc
lea
rcrb
mov
and
cmp
fstl
cmp
insb
xor
sbb
or
lds
dec
jl
push
sub
pop
or
lock
dec
fldenv
add
adc
sub
sbb
fnstcw
inc
or
mov
cmp
pusha
xchg
dec
jns
sahf
js
daa
mov
lret
add
loopne
add
outsl
xor
mov
pop
pop
stos
xchg
xor
outsl
lock
sbb
mov
repz
mov
lret
cmc
jg
mov
mov
add
bound
xorb
movsl
outsl
add
je
xlat
insb
scas
sarl
push
xchg
add
lods
pop
pusha
sbb
insb
fs
sub
pop
gs
gs
cltd
popf
aaa
cltd
inc
cmpsl
jnp
test
adc
jb
inc
mov
adc
enter
add
repz
add
jno
xor
xchg
push
xchg
mov
inc
pop
movsb
jno
test
mov
sti
sahf
cs
sbb
pop
gs
inc
ss
rcrb
jns
rcrl
inc
pop
and
lods
out
loop
push
out
pop
xlat
jp
fsts
cmp
call
insb
xchg
ja
push
clc
lds
push
mov
call
mov
inc
sbb
es
bound
sub
add
mov
pop
jne
ds
xchg
pop
xchg
gs
ficomps
int3
stc
test
repz
ret
lea
mov
mov
cltd
popf
sub
stos
jns
loopne
adc
mov
lds
stos
aas
test
stc
stos
jnp
sub
fs
enter
imul
mov
mov
jbe
xchg
sbb
xchg
int3
push
shrb
es
out
add
adc
sub
lds
ljmp
fistps
mov
adc
inc
fildl
cmp
cmp
ljmp
lret
fistpll
outsl
sti
popa
mov
rolb
dec
and
lock
push
push
test
push
sti
pop
dec
push
inc
mov
jg
cmpsl
xor
lret
xor
pop
into
jnp
pushf
fisttps
adc
xchg
pop
fwait
add
jae
sbb
or
scas
data16
jnp
shlb
fcomps
gs
or
jne
and
add
jno
orl
and
push
lods
int
mov
pop
jp
lds
xchg
dec
stos
adc
gs
adc
pop
out
add
shlb
lock
pushf
in
daa
fnsave
cmp
and
dec
inc
jge
jns
ds
cltd
and
xchg
shlb
adc
outsb
jmp
or
loope
clc
add
xchg
je
push
cmpsb
rcl
cmp
push
jb
and
jge
and
push
cmp
xchg
inc
jmp
adc
mov
xor
adc
fimull
lret
aad
cwtl
push
dec
dec
loopne
xchg
ljmp
pop
fdivr
sub
mov
inc
cld
push
int3
push
icebp
les
lods
inc
in
cmp
inc
xorb
jb
push
iret
ret
push
xchg
dec
fistpll
mov
scas
pop
vpavgw
xor
mov
add
rorl
push
add
lcallw
or
testb
pop
mov
ret
aas
cltd
or
mov
mov
mov
sub
hlt
mov
sub
fstpl
and
loope
push
push
lock
cmp
fs
scas
fucomp
out
std
xor
fisttps
dec
push
imul
into
inc
add
sbb
rclb
mov
fs
pop
inc
pop
pop
inc
fnstenv
dec
mov
jl
and
addr16
xor
mov
andl
and
mov
push
mov
add
pop
pop
lds
pop
call
test
mov
inc
outsb
das
test
mov
sbb
dec
dec
push
rolb
sti
xor
add
repz
pop
repnz
cmpsb
pop
pop
sbb
data16
push
fld1
mov
dec
xchg
xchg
fsubrp
shll
mov
cmp
imul
repz
push
add
mov
inc
dec
inc
push
or
xchg
outsb
mov
mov
adc
push
mov
fldt
and
or
mov
insl
je
cld
clc
xchg
or
adc
and
lods
std
dec
lret
repnz
mov
lea
inc
imul
pusha
mov
xchg
das
lcall
mov
jb
cli
xchg
xor
inc
in
xor
sti
jne
leave
arpl
cltd
aad
cli
mov
xor
test
push
fimull
inc
test
cltd
cmp
adc
cs
dec
inc
pop
cmp
aad
dec
sbbb
cs
add
mov
outsb
or
ret
mov
pusha
mov
aam
dec
cmp
test
sbb
ljmp
inc
adc
frstor
jno
mov
jge,pn
xor
mov
pusha
in
scas
sbb
xlat
sub
xor
into
stos
sbb
out
icebp
sahf
dec
xchg
lret
mov
dec
xchg
adc
inc
cmp
imulw
scas
into
mov
mov
mov
andl
bound
dec
cmp
jbe
xor
mov
sbb
dec
add
js
push
xor
jge
repz
iret
and
sub
pop
nop
mov
sbb
fs
clc
pop
lahf
mov
push
sbb
dec
call
mov
test
sbb
push
mov
testb
dec
bsr
inc
mov
adc
ds
cmc
inc
dec
mov
ret
mov
xchg
xchg
mov
push
cvtdq2ps
hlt
das
lock
int
mov
jecxz
iret
lret
mov
mov
dec
std
inc
in
popf
inc
jge
enter
jne
sbbb
hlt
std
and
sbb
xchg
insb
add
fs
jae
xchg
scas
pop
sti
and
adcl
int
push
jle
sar
gs
pusha
pop
xchg
and
pop
adc
xchg
dec
lods
cmc
test
lea
scas
sbb
shr
in
inc
mov
lret
dec
fisubrs
lods
mov
cmpb
cmc
push
pop
and
in
pop
xchg
jbe
loope
adc
mov
push
ret
mov
hlt
imul
jmp
mov
jo
cmp
sbb
push
gs
cmp
fdivrp
push
lods
aas
pop
fmul
call
mov
mov
in
fldl
pop
and
mov
push
fcomps
inc
hlt
daa
call
subl
leave
outsb
push
pop
cmp
and
insb
dec
movb
into
sbb
xor
push
and
movsl
push
jp
addl
rep
sbb
jmp
mov
les
add
fwait
xor
jns
lods
sub
mov
subl
adc
adc
cmp
push
or
fimull
mov
push
dec
fbstp
add
jp
jnp
jmp
leave
jb
inc
sub
pop
add
sbbb
add
psubw
cmpsb
xchg
mov
js
xor
and
enter
add
je
xor
pop
xor
adc
cltd
mov
xlat
inc
inc
or
ja
repnz
shl
lahf
cmpsb
xor
hlt
fsub
xor
xchg
cwtl
ljmp
mov
xchg
push
jl
js
pusha
sub
data16
andl
xor
mov
shll
cmp
test
repz
sbb
cld
call
mov
push
cli
pop
pop
mov
push
js
sub
push
scas
xchg
dec
in
add
sbb
mov
adcb
push
xchg
push
fwait
add
pusha
movsb
insl
adc
jb
inc
mov
mov
add
mov
or
push
test
jg
mov
xorb
mov
daa
xor
andb
sbb
arpl
push
lods
push
cmpsl
out
mov
push
cmp
mov
cmpsb
mov
cld
sbb
fstps
cmp
and
inc
xchg
push
shlb
jnp
mov
jle
or
or
xor
add
mov
ljmp
lds
pop
dec
pop
pop
jg,pn
stc
sbb
xchg
mov
add
and
mov
push
aaa
pusha
jecxz
push
mov
mov
std
and
dec
lods
pushf
loop
xor
fwait
jle
xlat
unpcklps
ret
inc
xchg
mov
cmpsl
adc
testb
xchg
out
dec
outsl
push
sti
sbb
dec
loop
ds
xchg
jne
jns
loopne
and
xchg
inc
lods
lds
xchg
inc
daa
or
and
pop
jp
sub
pusha
jnp
or
int
push
xchg
cli
pusha
or
in
test
mov
or
daa
outsb
mov
adc
pop
and
add
dec
mov
out
or
js
pushf
gs
xchg
push
xchg
sbb
rcll
icebp
les
jp
imul
jbe
xor
pop
pop
ficompl
sbb
push
inc
jl
jge
mov
sub
cltd
lods
xor
jecxz
repnz
ret
fwait
insb
shrb
mov
add
loop
add
or
add
pushf
sub
push
rcrb
jmp
lcall
es
push
and
add
jae
inc
mov
leave
add
push
jo
fidivl
push
jle
or
mov
pusha
roll
sbb
fdivrl
sub
push
xchg
andb
movsl
sahf
and
hlt
movsl
lahf
aaa
pop
lcall
div
inc
sub
xor
lods
xchg
test
test
mov
ficoml
cmpsb
aad
mov
fdivs
jg
jge
sub
data16
xor
fadds
pop
gs
mov
test
cltd
test
stos
loop
pop
jo
mov
jns
xlat
pop
std
cmc
test
cmp
xchg
std
or
mov
cmp
and
jmp
sbb
mov
data16
lea
cld
adc
test
xchg
or
or
insb
aad
les
out
xchg
mov
jae
sbb
nop
mov
pushf
and
aaa
dec
fmull
xor
mov
loope
leave
nop
pop
fs
popf
arpl
ret
pusha
popa
cmc
icebp
mov
dec
pusha
jo
stos
adc
daa
push
adc
push
ss
and
ret
loopne
bound
sub
fdivs
push
cmp
xchg
bswap
mov
repnz
jb
ljmp
sbb
aas
add
fbstp
cli
bound
xchg
das
je
add
jnp
sbb
out
fnsave
push
insb
inc
in
mov
and
cmp
cmp
or
ljmp
xchg
sbb
mov
out
hlt
insl
mov
mov
lds
clc
outsl
test
fistpl
cmpsb
pop
or
jl
int3
nop
iret
xor
mov
addr16
or
push
popa
cs
adc
mov
and
les
mov
test
lds
push
mov
jmp
aad
fistpl
lahf
ret
div
scas
aas
push
sub
xchg
clc
imul
lds
dec
mov
stc
sbb
jb
dec
dec
dec
dec
mov
hlt
sub
adc
cld
insb
int
xchg
pop
cmp
mov
or
mov
daa
scas
xchg
movsb
adc
or
pop
and
mov
pop
jno
stos
ss
fnstcw
push
aam
jae
lret
and
inc
orb
fcmovb
imul
jmp
mov
into
js
mov
mov
lahf
daa
fs
loop
leave
fstpl
lods
ret
push
les
or
mov
cli
cmc
jge
aam
lds
inc
inc
aas
sbb
mov
lahf
ss
addr16
and
pop
jb
add
gs
loope
ficomps
loope
jmp
lcall
sbb
pop
lret
stos
imul
jp
cmp
lds
adcl
hlt
rorb
lret
cwtl
mov
into
aas
ret
icebp
sarl
adc
stc
outsb
push
jne
adc
pushf
mov
mov
aam
jg
daa
fwait
pop
mov
pop
cmp
or
scas
push
xchg
jns
rcr
pop
cld
lret
adc
adc
lea
pop
pop
xchg
xchg
pusha
in
jmp
xor
out
and
jmp
lcall
sub
xchg
pop
dec
lret
cld
or
ds
and
in
and
jae
xor
push
and
lret
dec
pop
movsl
leave
jbe
stc
mov
push
hlt
in
dec
sbb
addr16
pop
xor
xor
or
mov
stc
dec
nop
and
xor
aaa
inc
movsb
jbe
inc
adc
push
dec
push
dec
dec
sahf
outsl
adc
mov
mov
imul
inc
jge
out
mov
hlt
mov
cmc
mov
sub
sub
scas
in
int
ja
push
push
dec
cmp
jbe
imul
sbb
out
jmp
or
out
aad
dec
push
outsl
cs
push
test
outsl
inc
mov
add
negl
lds
pop
cmp
xor
pop
adc
mov
ds
fimuls
xor
mov
xor
loope
mov
dec
inc
sub
inc
push
clc
or
lcall
ljmp
mov
ds
loopne
push
outsb
jecxz
insl
jbe
pop
add
jns
out
sub
xchg
insb
stos
cltd
lock
and
cmpsb
lods
xchg
stc
pusha
ret
stc
insl
jp
xor
andl
cmp
negl
and
add
out
jae
jl
cs
bnd
sub
jmp
mov
int3
cwtl
xchg
push
lds
cmp
ljmp
rcrl
aad
pushf
xor
push
ud1
or
push
insl
jae
imull
jp
pusha
outsl
lds
notb
push
ret
cwtl
std
in
mov
pusha
cmp
dec
xchg
out
add
mov
nop
push
cmp
out
sub
popa
scas
rorl
dec
pop
cmp
pop
imull
or
rcr
cwtl
cmp
adc
mov
int
lock
cmpl
mov
movsl
push
scas
xchg
stc
xor
mov
add
xor
icebp
xor
enter
in
pushf
xchg
push
mov
add
xchg
rcrb
mov
jecxz
jg
movsl
nop
shll
repz
test
movsb
sbb
scas
ljmp
mov
push
xor
insb
mov
inc
mov
scas
mov
inc
rclb
push
mov
push
int
mov
sub
jmpw
push
inc
lret
xchg
int3
ja
scas
and
dec
or
push
cmp
je
sahf
in
subb
or
pop
shll
sbbb
add
inc
xchg
mov
aaa
insl
dec
pop
sti
ficompl
xor
dec
test
sub
into
fs
add
addr16
in
mov
cmp
mov
fsubrl
pop
lods
sbb
push
ror
movsb
jmp
push
jb
sbb
pushl
sbb
int3
jle
xor
sbb
rorb
mov
cs
sub
mov
loopne
add
and
pop
adcb
inc
mov
inc
sbbl
add
sahf
aas
or
in
lds
mov
pop
fucomi
mov
insb
fmul
mov
stos
xor
jp
dec
adc
adc
jge
cmp
repz
pop
fsubrl
cmc
add
dec
test
cwtl
cmpsb
jge
and
push
daa
cmp
inc
aas
pop
andb
adc
sbb
sub
mov
call
popf
insl
xchg
lea
pop
loop
pop
insl
cs
push
sub
or
int3
jecxz
mov
and
pop
addr16
decb
xchg
icebp
xlat
insb
pusha
mov
xchg
pusha
int3
sbb
out
lea
cmp
lods
and
mov
xchg
jp
jae
in
and
adc
push
out
addb
in
insl
jno
jne
cmpsb
popf
xor
push
pushf
enter
push
mov
pop
jno
adc
mov
div
or
shll
enter
xor
push
ret
cwtl
mov
shll
test
imul
sbb
arpl
rcrl
inc
clc
lods
bound
jge
xchg
xchg
popf
xchg
std
adc
mov
movsb
and
xchg
jecxz
mov
int
cli
pop
mov
or
jnp
ljmp
int3
and
shl
cmp
jo
mov
loope
mov
test
in
lahf
ljmp
xlat
insb
mov
int
gs
ret
insb
add
sub
add
push
pop
scas
mov
iret
and
xchg
xor
xchg
adc
inc
and
jnp
mov
repnz
lahf
mov
xlat
fucom
mov
push
in
scas
ljmp
jne
rorl
pop
sub
jecxz
cmp
fmul
and
imul
xor
mov
rorl
stos
sub
or
scas
add
into
mov
cmc
pop
sbb
fidivl
ret
in
iret
pop
stos
jecxz
and
jo
and
lcall
jne
mov
mov
adc
mov
ja
dec
pop
in
cmp
add
in
cmpsb
jmp
je
inc
mov
pop
cmpb
add
mov
dec
jno
dec
push
xchg
icebp
xchg
sti
int
push
fwait
lahf
testl
fadd
jp
ret
push
ret
sub
out
cltd
xchg
ds
adc
xor
sbb
lcall
sub
xchg
xor
sbb
lahf
pop
inc
outsb
movsl
scas
add
ja
add
cmpb
xchg
cltd
push
cmp
in
popa
xor
shrb
dec
orb
mov
data16
bound
cmc
push
add
pop
add
pop
incl
pop
push
aam
jo
nop
pop
out
loop
pop
inc
xchg
decb
and
sbb
push
rcll
xchg
mov
inc
loopne
outsl
cli
lret
sarl
mov
addr16
pop
mov
jmp
jnp
inc
fnsave
loop
mov
jl
leave
push
fcoms
out
push
not
mov
in
fistl
mov
mov
clc
fistps
sub
and
es
imul
out
push
dec
shll
std
in
inc
dec
mov
repnz
cmc
shrl
jno
cwtl
lods
addl
and
jno
out
ss
sub
sti
lahf
add
dec
mov
rolb
out
mov
stos
push
lods
adc
xchg
loopne
inc
xor
stos
aam
sarl
fmull
iret
or
and
shlb
aaa
mov
test
lret
fdivrs
data16
jg
push
mov
rol
icebp
jecxz
cltd
pop
xchg
sahf
sbb
lods
aas
cmp
xchg
or
jbe
xchg
sbb
mov
add
pop
and
jnp
shr
push
cmp
jge
push
clc
push
imul
pop
push
xchg
xor
cmpsl
data16
and
aas
xchg
mov
dec
mov
adc
sub
es
pop
sub
scas
cmp
pop
push
int3
aas
pop
or
jns
jbe
test
out
sub
adc
and
aad
les
insb
jecxz
inc
push
mov
fdivrs
xchg
push
push
outsl
das
lret
and
cmp
repnz
int3
or
fs
adc
push
mov
lds
cmp
push
in
sbbl
xchg
xlat
je
mov
sbb
leave
rcll
add
pop
testl
test
mov
lods
push
rorb
icebp
jmp
movsl
jne
pop
sarl
insb
push
imul
or
mov
int
cmpsb
out
out
syscall
sub
in
pop
fcomp
and
lock
out
dec
mov
loope
clc
mov
mov
inc
outsl
stos
jns
into
cs
sbb
repz
xor
pop
mov
enter
lods
mov
add
inc
jns
or
neg
inc
push
xor
jg
xor
call
bnd
or
test
ljmp
icebp
adc
loopne
fisttpl
es
mov
xchg
xor
jecxz
mov
jb
fisubl
je
or
or
push
outsl
adc
aas
jle
mov
or
pushaw
mov
iret
xchg
outsb
decl
pop
ja
stos
mov
jno
repz
mov
xchg
mov
xor
clc
das
jbe
and
mov
lods
mov
or
cmp
lcall
cmp
js
imul
arpl
jge
outsb
out
insl
jo,pt
xchg
lahf
sarb
negb
mov
out
pop
cmp
movsb
jae
int
pushf
sub
imul
rorl
jmp
les
adc
scas
cmpsl
xor
pushf
aaa
ret
dec
and
mov
jno
or
jb
or
shl
in
mov
cmpsl
jo
mov
lds
inc
ficompl
mov
clc
imul
adc
cmp
push
and
mov
pop
mov
mov
jno
nop
jns
ja
push
jae
jae
push
and
in
sbb
cmp
imul
stos
lock
adc
sbb
stos
out
addl
aas
loopne
lahf
inc
lret
mov
mov
inc
pop
jmp
add
dec
clc
or
in
jl
push
xlat
cmp
call
pop
out
xchg
in
pop
rcrl
es
test
adc
fcomps
mov
jp
lcall
mov
notl
cmp
lock
jge
inc
mov
adc
pop
cmp
insl
fiaddl
xchg
pop
or
fbld
mov
mov
aaa
out
cltd
ljmp
mov
ret
sti
cltd
loopne,pn
mov
jl
sub
xchg
cltd
dec
xchg
mov
mov
rcrl
push
lea
ja
inc
or
pop
mov
andb
pop
inc
fstl
pop
jae
fldt
lods
jbe
loope
lods
mov
push
fldenv
insl
aaa
std
xor
xor
cmp
jo
imul
pop
ror
fidivl
test
cs
adcb
neg
flds
sbb
inc
jae
sub
ret
fisubl
pop
dec
sub
xchg
shr
out
sub
sbb
fwait
sahf
mov
or
push
into
test
aaa
insl
push
pop
mov
icebp
and
cmpsb
xchg
xchg
push
inc
jnp
sub
cmp
mov
in
rclb
imul
push
rcll
adc
pop
dec
or
and
cmp
lret
scas
mov
jg
icebp
daa
push
dec
cmp
testl
xlat
in
add
inc
in
or
jbe
add
cmp
push
aam
mov
ja
xchg
out
adc
add
inc
test
ljmp
jns
push
cmc
pop
mov
aad
inc
pop
mov
cmc
sub
fdivrl
xlat
or
fiaddl
scas
cs
pop
mov
pop
xchg
xorb
ror
fistl
push
push
je
sbb
lods
sbb
sqrtps
aam
out
jbe
jns
inc
lret
shl
fdivr
test
pop
pop
pop
in
or
out
adc
pushf
push
xor
mov
xchg
ds
insl
addr16
pop
push
xchg
sbb
inc
test
xchg
pop
repnz
or
pop
jo
dec
shlb
out
push
add
shl
rcrl
xchg
in
outsb
shrb
push
pop
or
mov
jb
fwait
in
mov
imul
push
fs
icebp
fmull
fistpll
ds
cmp
pusha
stos
ret
in
or
clc
ds
push
rcl
pop
mov
and
imul
repnz
loop
mov
iret
xchg
pop
pop
cmpsl
rcr
jmp
sbb
jl
dec
inc
jns
pop
repnz
dec
cltd
movsl
mov
ret
fdivl
mov
pushf
int3
fnstcw
pop
inc
pop
adc
dec
not
scas
and
mov
fwait
and
mov
mov
push
cwtl
clc
sub
jbe
cmp
data16
xor
loop
dec
stc
jae
fdivr
pop
lods
and
test
adcb
imul
sub
imul
pop
inc
daa
push
pop
fwait
mov
push
cltd
adc
out
in
fisttps
sbb
pusha
jno
pop
enter
int
jne
sahf
ss
sub
sub
clc
dec
imul
call
xchg
loopne
mov
xchg
mov
xchg
push
jecxz
cmp
aas
loope
aas
fsubp
mov
out
mov
mov
pop
das
popf
out
lret
push
imul
and
aad
cmp
mov
mov
mov
dec
xchg
jo
sub
push
sbb
pop
jg
bound
xor
lods
pop
xlat
lret
out
fists
lods
push
pop
incl
testl
mov
jns
idivl
lcall
sub
inc
xchg
in
test
daa
jnp,pn
les
and
gs
xor
test
ds
and
ss
lock
into
movsb
mov
aad
and
ret
mov
xor
outsl
out
jbe
push
mov
jnp
dec
in
cmp
jp
daa
pushf
inc
mov
rolb
fsubl
adc
dec
jmp
jnp
xchg
and
lea
cmpsl
push
ret
movsl
push
mov
lock
movsb
movsl
das
and
je
rcll
sub
mov
stc
das
push
insl
sub
stos
push
xorl
cs
add
adc
jecxz
popf
into
cld
orl
das
aam
lret
bound
add
arpl
xchg
cld
faddp
fs
call
mov
or
fwait
adc
fwait
lock
fs
cmpsl
test
addb
and
les
in
addr16
cmpsb
xor
test
adc
dec
inc
call
rol
aad
add
mov
xor
imul
push
fmul
syscall
int
xor
push
and
or
mov
or
out
popf
mov
inc
sarl
jl
dec
lret
push
subl
icebp
clc
sbb
test
vpminub
inc
fistps
dec
mov
xlat
insl
jge
shrb
fmuls
jne
mov
inc
mov
aas
mov
xchg
int
mov
fsubrs
jle
sbb
enter
inc
mov
sahf
ja
lock
ss
xorl
movsb
movsl
mov
dec
fisubrs
outsl
repnz
inc
push
enter
shrb
add
jns
xchg
mulps
dec
xor
test
movsl
jg
add
lcall
fnop
mov
js
mov
and
inc
test
loop
call
mov
stc
cltd
repz
subb
push
je
int3
pop
lahf
pop
xchg
jg
mov
sub
movsl
mov
cmpsb
lahf
push
push
mov
shlb
or
mov
inc
sub
jg
imul
add
icebp
movl
lods
mov
jbe
aas
sub
psubusw
sahf
iret
mov
pop
hlt
sub
movsb
mov
andb
xchg
roll
in
in
sub
enter
push
jae
mov
mov
out
add
ljmp
dec
imul
or
loopne
mov
push
out
xchg
shl
xor
sub
call
jbe
out
inc
out
adc
pop
jbe
xchg
out
jl
mov
fistpll
scas
fbstp
cmpb
add
sub
xor
mov
test
enter
sub
pop
mov
xchg
es
ss
add
jnp
movsb
out
repz
push
fwait
enter
cmp
or
nop
das
int3
mov
lahf
sbb
mov
xchg
cmp
sbb
shrl
in
addr16
push
hlt
test
nop
cld
sbbb
mov
mov
in
dec
lods
cli
lea
iret
cwtl
xor
mov
xchg
add
sbb
aam
out
adc
cmc
sbb
jecxz
les
gs
adc
add
lret
xchg
test
pop
xlat
roll
aas
iret
imul
mov
xlat
add
jle
aas
sbb
shll
cmpsb
bound
lret
loopne
inc
or
outsl
pop
adc
fucomi
jo
dec
and
xchg
add
bound
jno
pop
dec
push
imul
sbb
cmp
sub
fnstcw
dec
mov
ljmp
pop
jno
jl
into
add
cmp
pop
sarl
inc
push
or
out
sub
pop
mov
xchg
ljmp
imul
adc
jmp
addr16
jbe
out
dec
cmpsl
xor
adc
shlb
add
adc
mov
ja
rolb
or
cmp
pop
mov
lods
pop
push
or
adc
addr16
fwait
adc
addr16
and
idiv
dec
jl
dec
fbstp
sub
sar
lret
dec
out
inc
ljmp
in
js
ret
outsb
cmc
push
mov
aad
pop
nop
imul
bound
hlt
test
sub
lods
and
dec
lds
xchg
mov
push
mov
scas
add
adc
out
daa
je
pop
mov
push
pop
push
imul
movl
sbb
int3
dec
movsb
push
orb
xor
push
pop
mov
testl
in
sahf
orb
pushf
cli
shl
movd
cmpsb
testl
arpl
add
add
sub
cmp
dec
sahf
addb
outsb
jmp
or
repnz
fwait
xchg
push
lret
ret
popa
mov
push
mov
popf
mov
mov
sub
adc
gs
movsb
shrb
mov
test
popa
push
or
mov
fcmovnb
jle
outsl
dec
jne
notl
or
mov
shll
leave
push
call
xchg
jnp
sub
sbb
push
inc
or
jns
mov
cmp
dec
jo
mov
sub
push
cld
jmp
and
mov
xor
push
mov
sbb
or
push
sub
inc
hlt
imul
clc
sbb
sbb
mov
or
jae
lcall
mov
nop
pusha
inc
vmovupd
je
mov
mov
mov
xchg
mov
sarl
cmp
push
push
ficoml
sbb
sbb
sbb
es
push
js
nop
push
pop
xor
sahf
jb
or
ja
or
mov
inc
adc
dec
jo
addr16
out
aad
dec
add
mov
inc
mov
ja
in
mov
pcmpeqd
arpl
cmpsl
xchg
notb
stos
fcomps
pop
pop
mov
push
hlt
imul
push
xor
dec
fldt
mov
es
mov
jb
mov
mov
scas
call
les
shlb
fistpl
and
adc
notl
lea
mov
lock
mov
aad
sbb
mov
xor
pop
sbb
xchg
fiadds
inc
cmpsl
rorl
adc
dec
lcall
int3
add
jb
push
bound
jns
test
xchg
and
inc
pop
mov
or
push
ret
and
shlb
fmul
enter
inc
mov
mov
out
dec
jno
mov
icebp
xor
cmpsb
rcll
fstpl
movsb
cmp
jp
push
mov
dec
mov
adc
sahf
mov
push
inc
popa
mov
ja
repnz
notb
cltd
mov
mov
fildl
mov
mov
sbb
les
outsl
cs
mov
ret
push
fdivl
cmp
andl
leave
aas
xchg
mov
sub
iret
add
outsb
fwait
pop
pop
push
clc
or
push
scas
or
divb
sbb
loop
pop
pop
dec
test
fisubrs
popf
pushf
dec
inc
add
fadds
pop
aaa
repnz
mov
push
pop
mov
inc
mov
sbb
sub
js
mov
push
mov
xchg
test
adc
add
ret
es
mov
aam
inc
mov
sub
lods
cmc
and
fnstcw
jbe
insl
scas
fmull
xchg
aad
or
shll
movsb
adc
adc
mov
xor
pop
movsl
mov
cltd
and
and
insb
sub
aad
aam
stos
out
out
orb
mov
into
std
idivb
sub
mov
add
decl
aas
and
mov
sar
mov
and
jns
scas
shrb
inc
mov
xchg
dec
push
xor
add
push
stos
jae
inc
imul
add
pop
cmp
lods
fcmovbe
mov
loopne
xchg
test
mov
insl
xchg
scas
testl
inc
jno
arpl
sbb
cmp
popf
ret
loop
xchg
daa
cmp
dec
test
or
dec
clc
inc
xchg
call
inc
jmp
stos
dec
mov
mov
pop
push
jno
dec
or
movsb
bound
or
mov
xchg
loope
adc
lock
pop
pop
daa
mov
jmp
or
xchg
dec
push
jno
out
pusha
stos
out
mov
sub
and
test
call
push
push
ror
out
popa
inc
sub
cli
jnp
loop
cmc
lret
add
mov
and
aad
add
sbb
incb
call
pop
mov
and
aaa
ds
jnp
outsl
orb
xchg
add
repz
shrb
sub
cmp
lahf
cmp
sub
mov
inc
mov
notl
dec
or
je
outsb
push
mov
inc
mov
in
call
out
clc
jbe
mov
dec
push
nop
or
sti
push
cmp
mov
popa
push
test
dec
mov
cltd
jp
in
push
push
pop
sub
stos
xchg
loopne
push
or
sbb
hlt
mov
aas
push
and
pushf
cwtl
dec
pushf
push
test
movsl
mov
or
andl
vpsraw
mov
loopne
loopne
enter
scas
das
lahf
push
adc
js
shlb
mov
xchg
sbb
adc
mov
roll
icebp
xchg
sub
jns
fdivrl
loop
fwait
pop
push
pop
lret
cwtl
sub
cwtl
dec
dec
push
pop
pushl
das
xchg
or
cmpl
xchg
nop
mov
daa
les
push
xorl
sub
cmp
xor
mov
lahf
out
movsb
push
out
push
jnp
mov
sub
jae
gs
iret
into
push
jo
dec
dec
hlt
lds
add
add
out
add
inc
add
ret
sub
leave
lods
ja
and
inc
stos
shrl
dec
dec
pusha
inc
mov
jg
xor
push
mov
add
pushf
or
xchg
push
test
jmp
fstpl
and
lock
out
xchg
sbb
enter
pushf
addr16
jle
setae
fiadds
pop
dec
mov
and
mov
in
inc
mov
xchg
popf
into
lcall
xor
inc
outsl
pop
sub
xlat
xrelease
negb
mov
xchg
repnz
mov
std
and
and
xchg
shl
hlt
adc
push
add
hlt
lret
dec
daa
jb
sub
or
jae
sarl
insl
lds
xchg
pop
sbb
lret
jg
call
out
es
cmc
inc
push
and
inc
lea
jbe
cmp
mov
sbb
fs
stos
stos
pop
dec
mov
notb
or
inc
jae
mov
in
cmp
pusha
je
out
xchg
sti
jmp
out
repnz
push
cs
in
xor
aam
flds
push
pop
sbb
movsl
mov
loopne
adc
sub
je
add
cmpsb
gs
adc
lods
hlt
test
mov
mov
cmc
jns
jo
lret
jecxz
arpl
push
xchg
lahf
inc
ret
push
mov
mov
pop
mov
fnsave
test
push
dec
or
push
and
dec
lea
jae
push
and
pushf
cmp
mov
fistps
or
pop
xchg
and
add
sbb
mov
aaa
ds
mov
mov
imul
lcall
stos
stos
fwait
lcall
mov
add
push
fsubrl
das
mov
insb
mov
push
pop
jle
pmullw
sbb
lods
pop
in
inc
sbb
gs
popf
pop
push
jge
mov
pop
loope,pn
add
sti
jbe
push
dec
insb
js
movsl
inc
outsb
dec
jne
inc
sbb
jae
stc
sub
mov
push
jmp
jno
test
dec
sub
push
rclb
aaa
adc
xchg
orl
mov
pop
sub
negb
std
xor
cmpsb
mov
push
call
daa
repz
mov
int
xchg
pushf
pop
adc
pop
rorl
out
jno
mov
sub
cld
movsb
mov
pop
popf
mov
push
cmpsb
fstl
pusha
sbb
aad
jo
mov
out
and
inc
sahf
mov
cld
cli
mov
sub
jl
jne
jge
lret
movsl
mov
mov
mov
jo
mov
sahf
pop
fisubs
inc
enter
ffree
shrl
vunpckhps
jmp
mov
xorb
sub
jmp
push
mov
imul
movsl
ljmp
xor
js
mov
dec
mov
das
jo
loop
xchg
sbb
movsl
test
lods
hlt
shrb
dec
popa
sub
xchg
ret
mov
sub
out
sahf
pop
std
ret
gs
es
rcll
cmp
je
jnp
xchg
cmp
pop
push
imulb
mov
push
fsubl
add
xchg
sbb
dec
iret
pop
ja
fcmovnu
cmpsl
lea
ret
jmp
jmp
lds
arpl
int
stos
fistl
lock
jg
push
fnsave
scas
sbb
xor
jnp
into
ds
dec
adc
jno
and
cld
ret
jmp
adc
daa
xchg
int
sub
mov
jnp
stos
clc
testb
mov
push
enter
pop
pushf
push
in
jo
test
cwtl
and
add
add
inc
jbe
sub
cmp
pusha
add
pop
mov
or
xor
jle
xchg
pop
notb
sbb
call
ds
push
jnp
and
xchg
mov
mov
or
mov
push
xchg
lea
cs
dec
and
dec
fisttpl
fnstenv
ss
push
imul
out
xor
pop
movsb
jle
shl
aas
out
mov
std
adc
adc
les
shlb
mov
sub
rorb
mov
orb
dec
pop
pop
xchg
xchg
cmp
mov
or
cltd
adc
out
loopne
mov
mov
or
mov
icebp
pop
aaa
cmpsb
xchg
add
pop
lock
mov
das
imulb
dec
lods
xchg
pop
inc
mov
aaa
call
pushf
sahf
pop
shl
inc
int
call
add
lahf
cmp
hlt
push
movsl
std
stos
es
mov
nop
adc
mov
mov
add
cmp
outsb
out
jp
pop
dec
push
pop
xrelease
inc
test
les
fimuls
xchg
dec
cwtl
in
mov
ljmp
fidivs
xor
sub
insb
clc
pop
aam
stos
popa
imull
xchg
jp
testb
jo
and
jmp
mov
or
out
pusha
inc
int
cwtl
jecxz
xchg
mov
pmullw
lea
and
pmovmskb
mov
xchg
pop
cmpb
sbb
test
scas
mov
jmp
mov
fwait
mov
daa
es
adc
mov
fisubrs
sbb
xor
insl
and
int3
pushl
adc
lea
sarl
jge
shlb
fsubrl
mov
js
inc
mov
test
dec
enter
sub
insl
nop
mov
insb
gs
shll
scas
sbb
mov
daa
movsl
mov
add
subb
or
add
test
or
cltd
and
data16
and
cltd
int3
lcall
lea
out
mov
add
jae
shll
addr16
aad
insb
and
sbb
mov
mov
pushf
jo
cmp
push
stc
xchg
iret
fsubl
test
jmp
pop
push
cwtl
and
mov
lcall
test
mov
addr16
fcmovb
inc
xchg
int
insb
or
outsl
js
lods
xor
xor
vmwrite
arpl
out
adc
jecxz
mov
dec
aas
pop
popa
add
xor
inc
and
clc
xor
dec
sbb
cmp
out
push
xor
mov
movsl
xor
fmuls
and
add
out
xchg
or
insl
leave
lcall
mov
ja
icebp
inc
pop
adc
push
pop
sub
outsl
gs
push
rcrl
cmp
adc
dec
jnp
mov
sub
shlb
pop
cmp
sub
in
adc
cmpsb
test
or
mov
inc
clc
fwait
pop
fs
lcall
movsl
outsb
fnsave
mov
push
xchg
gs
filds
and
shr
fldcw
cwtl
cmp
jmp
out
scas
add
xor
lods
popf
and
adc
clc
sbb
and
std
xchg
cltd
push
iret
loop
mov
das
test
jnp
mov
outsl
dec
jmp
imul
sbb
cld
into
shlb
sti
pop
es
call
mov
lock
lea
in
jmp
inc
pop
ljmp
sbb
insb
out
mov
fadds
jmp
or
mov
xor
sub
and
cli
scas
inc
sub
jp
mov
lret
jp
imul
adcb
iret
xlat
clc
scas
cmc
ds
out
xor
push
hlt
bound
mov
outsb
repz
data16
bound
push
and
dec
mov
lcall
mov
adc
xchg
mov
jno
notb
cmp
mov
ljmp
movzwl
fstl
or
inc
pop
pop
test
pushf
mov
push
pusha
pop
push
push
sub
sub
adc
rclb
lcall
mov
leave
je
add
or
sbb
mov
idiv
inc
fs
xchg
or
mov
jg
mov
inc
in
or
pop
stos
mov
test
pop
stc
mov
outsl
repnz
add
loopne
add
cmc
fmul
test
sbb
adc
je
repnz
dec
icebp
mov
lret
cmp
push
scas
mov
fisttps
pop
pop
sbb
jbe
or
dec
lahf
xor
dec
pop
popa
mov
adc
mov
sbb
jb
stos
cmp
lods
add
stos
jg
mull
xchg
mov
pop
movsb
push
lods
shl
fcmovne
lcall
mov
and
mov
stos
inc
xchg
insl
fbstp
shl
mov
fcmovnbe
sub
add
inc
cmp
fwait
dec
xchg
inc
outsb
xorb
jno
fbstp
movsb
mov
mov
push
std
prefetcht2
ret
push
fwait
rcrl
cmp
inc
push
in
xor
fwait
mov
mov
fs
scas
cmp
leave
popf
mov
aaa
xchg
fldt
adc
rcr
lods
and
shll
inc
sbb
fldt
cld
call
inc
push
lcall
push
or
adc
mov
sahf
rcrb
vcvtsi2sdl
subb
js
jmp
push
lds
hlt
mov
push
sbb
jge
mov
test
inc
andb
mov
mov
add
push
ficoms
mov
out
fdivl
or
pop
mov
mov
sbb
int3
scas
inc
cmp
push
jno
in
xchg
loope
dec
outsb
insl
cmp
sub
pop
jg
xor
outsb
clc
or
add
dec
pop
loope
jle
loope
lea
imul
push
inc
xor
add
xchg
or
outsl
push
test
pshufw
mov
or
rorl
cmp
sub
jle
mov
std
jb
cld
pushf
repnz
cwtl
shrb
int3
repnz
mov
pop
mov
mov
movsl
jnp
int3
out
add
push
add
jns
pop
pushf
out
lods
add
inc
dec
push
cli
pop
xor
push
inc
push
dec
insb
pop
lock
call
mov
pop
and
ss
icebp
ja
insl
ficoml
fs
cmp
insb
sub
stos
inc
iret
cmp
test
push
inc
mov
mul
xor
pop
xchg
pusha
std
push
out
inc
shll
test
subl
movsb
mov
xor
push
inc
pusha
adc
or
sahf
xchg
outsl
aaa
aam
mov
pop
aas
stc
lea
daa
aas
int
loopne
mov
and
jmp
and
sub
jg
mov
xchg
pop
inc
andb
sub
xchg
sub
ja
int3
inc
pop
jne
sbb
mov
dec
pop
add
pop
sbb
mov
out
inc
sub
sbb
xchg
mov
push
cmp
jp
mov
lds
pop
insb
insl
jo
mov
mov
lret
mov
jg
leave
ret
insb
ss
and
jo
inc
in
ss
mov
hlt
enter
jecxz
jle
mov
hlt
movsl
sbb
adc
repnz
dec
jmp
cmp
cmc
jge,pt
sub
or
add
sahf
shl
shll
loop
mov
int3
cmp
xchg
int
aad
dec
sub
int
addr16
loop
sbb
or
mov
iret
mov
jns
fiaddl
or
cwtl
in
cmp
mov
inc
mov
mov
lods
pop
sahf
mov
push
pop
xchg
mov
and
test
xchg
les
sub
mov
push
dec
mov
adc
icebp
lret
push
adc
xchg
pop
xchg
xchg
mov
or
ret
nop
mov
xlat
andl
aad
mov
xchg
xor
aas
js
into
jb
into
lea
add
cmpsl
shlb
movsb
mov
pop
fcomi
rolb
dec
cmp
jae
push
jmp
push
mov
lret
xor
lahf
sahf
jmp
jo
shl
cmp
xor
pop
sbb
add
sbb
jnp
std
popa
inc
cli
cmpsb
loop
push
xchg
lods
and
push
mov
imul
out
enter
or
jle
roll
sbb
es
repnz
jmp
shl
dec
lahf
ficoml
aaa
lcall
push
cs
jg
dec
test
sbb
mov
xchg
jle
or
lret
inc
mov
lret
inc
fucomp
loope
mov
lret
pop
movsb
and
or
add
lds
cmp
mov
mov
subb
pop
adc
adc
pop
ret
movsl
stos
pop
ret
xor
dec
sub
divb
push
cmp
xor
push
and
scas
ret
cmc
push
pop
inc
or
jmp
push
dec
inc
push
popf
jnp
add
outsl
fisttps
movsb
cmp
inc
hlt
adc
gs
shll
sahf
push
pop
lcall
mov
push
or
test
cld
dec
sub
xor
push
jl
or
xor
test
sbb
sbb
movsl
test
sbb
mov
mov
clc
dec
mov
add
in
ds
jle
dec
mov
sub
lret
push
mov
shrb
push
sub
pop
shlb
hlt
arpl
fimull
adc
mov
pop
inc
mov
xor
lret
jmp
cmpsl
adc
push
in
mov
loop
inc
jne
inc
adc
and
movsl
ljmp
shll
cwtl
shll
imul
shrl
adc
add
inc
mov
xor
daa
add
mov
icebp
iret
mov
lret
repnz
sub
test
add
data16
push
ret
pop
repnz
imul
loop
decb
test
fsub
popa
fwait
les
rclb
leave
fistpl
hlt
add
mov
mov
inc
mov
fnstenv
adcb
pop
aas
and
sahf
lret
add
push
movsb
sbb
test
rorl
push
std
adc
je
mov
sbb
jne
and
dec
arpl
xchg
aad
mov
dec
stc
add
cmp
into
inc
or
test
adc
imul
adc
add
clc
jnp
xlat
add
bound
scas
and
cmp
push
add
xor
push
mov
call
flds
jge
lods
pop
mov
mov
jecxz
jnp
pop
lahf
or
sub
inc
sub
rorl
mov
mov
xchg
jp
sbb
mov
lea
pop
rolb
xchg
fldl
add
in
add
in
imul
jle
xor
xor
and
mov
call
xchg
rep
jno
cwtl
ret
mov
push
xchg
sub
and
mov
pusha
leave
je
orl
sub
mov
jmp
test
mov
sub
lea
and
push
mov
adcb
mov
mov
sub
imul
inc
in
cmpsl
loope
xor
sbb
mov
mov
xchg
sbb
sbb
push
testb
insb
push
push
in
jnp
incl
jmp
repnz
cmc
push
int
insb
sarb
add
xchg
dec
jge
jb
stos
cli
out
push
insb
cmp
inc
add
xchg
add
inc
rcr
aam
pop
pop
mov
adc
outsb
push
imul
add
repz
jg
jnp
cmp
mov
sti
sti
test
mov
cld
jo
outsb
mov
cmp
inc
jb
mov
push
inc
jg
pop
rorb
test
dec
xchg
adc
test
mov
add
mov
or
ret
xchg
out
push
push
mov
xchg
mov
orl
iret
or
sbb
sbb
sbb
fldenv
jmp
xchg
fisttpl
xor
fxtract
mov
dec
enter
push
mov
ficoml
xchg
std
aam
aad
jne
fsubs
mov
dec
add
xchg
and
cmp
inc
cmpl
scas
call
inc
std
dec
push
ret
and
pop
cltd
out
int3
ss
inc
nop
iret
pop
xor
or
mov
mov
ficomps
xor
fisttpll
sarl
add
and
insl
idiv
cmp
add
divb
nop
inc
out
sbbl
xchg
scas
pop
cld
sub
ds
movsl
outsb
xchg
cmp
add
mov
jge
pop
pop
popf
mov
test
lahf
fwait
jno
pop
ja
xchg
mov
insb
imulb
xor
or
push
sar
cmovne
fadd
cmp
push
stos
pop
inc
pop
xchg
clc
aad
or
clc
cli
mov
or
push
outsb
fs
out
mov
aam
ljmp
call
sbb
into
xchg
add
outsb
lods
aad
stc
leave
lock
or
push
shrb
sub
lock
lods
ss
dec
or
iret
out
mov
cmp
sub
cmc
stos
or
loopne
push
cmpsb
stos
dec
cld
inc
xor
lcall
mov
rorb
je
fstpt
inc
lock
push
or
pcmpeqb
xor
inc
push
lods
out
shrb
sub
outsl
sbb
hlt
jle
pop
mov
sar
pop
shlb
ss
and
out
lds
cltd
icebp
js
movsb
sbb
xlat
mov
das
aaa
loop
jge
andb
dec
loope
out
sub
lret
jmp
dec
arpl
ret
iret
xor
loop
push
jge
and
sub
aaa
out
or
inc
lods
ja
mov
xor
push
test
daa
push
dec
fucomp
adc
cmp
roll
cs
mov
mov
push
and
jp
xor
push
fs
inc
jp
cmp
mov
outsl
push
jg
cli
nop
push
pop
pop
xchg
pop
jmp
das
xchg
mull
jecxz
inc
jo
daa
inc
sub
lds
sbb
dec
clc
in
shll
mov
leave
orb
pop
add
sbb
sbb
test
sub
push
mov
mov
loop
dec
push
call
movsb
push
aam
stc
int3
sahf
pop
cmc
sahf
in
jae
test
ljmp
lahf
insl
test
lock
fs
fisubrl
and
repnz
movsl
std
cmpsl
repz
inc
jmp
ljmp
add
call
adcb
sbb
hlt
mov
rcll
in
aaa
ret
push
ret
sbb
push
add
mov
out
sahf
mov
xchg
add
add
ror
push
sub
mov
add
add
mov
stc
mov
pop
movsb
out
movsl
push
jp
pushl
sbb
test
xchg
out
and
aad
pop
push
add
out
mov
mov
xor
lock
dec
ja
cmp
mov
lret
jmp
ds
push
inc
ficompl
pop
dec
imul
mov
mov
sbb
js
je
xchg
les
or
mov
test
xor
pushf
lret
fisubs
cmc
jne
and
iret
xor
stos
push
mov
fldcw
inc
push
andl
xchg
inc
test
pop
xchg
inc
cmp
dec
jmp
divb
mov
and
nop
cwtl
pop
mov
cmp
and
cwtl
insl
lods
popf
and
sbb
sub
popa
and
pop
int3
jns
rcrl
xor
fildll
push
lcall
mov
das
jnp
jp
xor
dec
adc
inc
cltd
push
mov
cld
or
inc
je
stos
or
mov
sbb
jns
jae
jg
push
adcb
js
xchg
ret
imul
leave
stos
xchg
pop
mov
mov
mov
outsl
pop
mov
xor
pop
cmc
inc
cmp
mov
cmpsl
pop
inc
jmp
in
xchg
insb
cmpsb
mov
sub
fstpt
ss
sbb
mov
add
dec
pop
orb
aas
inc
sbb
mov
sbb
mov
sub
mov
pop
insl
orl
insb
divb
xchg
xchg
dec
or
ljmp
andl
mov
mov
cmp
mov
mov
jmp
cmpsl
fadd
test
adc
push
pusha
aad
push
xor
jle
sub
and
dec
in
jne
lds
ss
jge
jl
hlt
stos
push
mov
fstpt
js
cmc
jnp
jecxz
pushw
jne
xchg
aad
cwtl
lock
shlb
sbb
into
fimuls
addl
rcrb
pop
lods
dec
decb
mov
stos
jmp
and
push
not
sub
ja
ljmp
pop
fsubr
lret
xchg
push
and
sbb
int3
pop
in
or
inc
enter
push
in
mov
mov
js
mov
aad
xor
int
les
leave
data16
push
ss
stos
dec
mov
jl
popa
insl
pop
lock
mov
xchg
inc
mov
fwait
or
add
xchg
stos
mov
testl
frstor
aas
fsubrl
pop
jmp
jno
or
jo
dec
pop
stos
add
xchg
jne
jecxz
test
jg
jp
or
pop
xchg
iret
xchg
ljmp
stos
fs
ret
fs
lret
cltd
cmp
sti
cld
pop
xor
mov
fistpll
mov
pop
mov
dec
insb
aad
loop
dec
cmp
aas
pop
ret
ror
enter
cmpl
sub
push
mov
adc
popa
xchg
mov
and
or
dec
fldz
std
sub
ja
and
mov
mov
out
mov
sub
or
mov
mov
repnz
adc
mov
jmp
cld
popa
mov
imul
int
mov
lds
jbe
push
pop
bound
xchg
inc
mov
into
mov
add
xor
xchg
shl
xchg
loopne
in
mov
xor
mov
fimuls
mov
mov
cmpsl
test
add
cs
jmp
pop
cmp
mov
das
jmp
jle
scas
jo
call
xchg
insl
test
fs
icebp
mov
jnp
nop
repz
loop
push
out
inc
lcall
insl
aas
dec
mov
ja
pop
mov
cmp
pop
xchg
xchg
cwtl
jge
mov
les
dec
fcoms
sub
or
fnstcw
loope
fmul
fidivrl
and
leave
jb
popf
jno
loope
xlat
lds
paddusb
add
or
inc
dec
jmp
inc
shrl
out
cmp
enter
test
std
incb
loope
js
repz
iret
clc
ljmp
fildl
in
and
xchg
in
shr
push
sbb
mov
xchg
or
inc
pop
fmull
sub
or
add
jmp
sub
sub
lods
xor
pop
jecxz
notl
mov
mov
ljmp
xor
pop
sahf
cmp
push
test
pop
push
addr16
stos
test
dec
fisttpll
mov
ficoml
dec
in
xchg
xor
sub
sbb
and
inc
out
clc
out
scas
sub
jae
loopne
mov
xchg
inc
loop
xchg
xchg
inc
cmp
fnsave
jmp
fadds
fildl
data16
mov
insl
xor
push
cmp
repnz
ljmp
icebp
fpatan
adc
in
jmp
or
dec
mov
iret
pop
and
add
jns
add
pop
mov
mov
roll
add
int
adc
pop
fsubp
ret
les
cld
shll
ret
xlat
test
mov
out
cmpsb
std
out
jo
lods
mov
pop
ljmp
dec
icebp
movsl
mov
lret
sub
and
sti
push
subb
dec
lret
pusha
cld
jne
iret
testb
add
sbb
stc
inc
in
and
jge
sbb
xchg
mov
out
mov
sbb
sbb
jno
mov
in
xchg
fmuls
ret
jg
loope
sub
aad
out
sub
mov
in
sbbl
repnz
fisubrs
stc
push
sbb
cmp
mov
testb
push
pop
adc
cmc
stos
out
mov
dec
cmp
sub
mov
mov
frstor
mov
scas
mov
jns
bound
pop
mov
and
sbb
ljmp
dec
adc
pop
lcall
aam
sbb
jl
loop
xor
dec
in
pop
pusha
and
inc
adc
cmp
iret
jmp
xchg
add
das
js
test
scas
push
fisubrl
cmpsb
mov
into
insb
or
adc
pop
daa
outsl
or
fcoml
push
xor
xchg
xchg
sub
mov
dec
cs
push
xor
or
call
jg
jmp
pusha
scas
adc
inc
push
lahf
movsb
mov
cmp
hlt
mov
cmc
xor
sbb
rcrb
jmp
stc
mov
in
daa
xchg
mov
pop
jg
mov
or
dec
sub
scas
mov
add
mov
mov
cmp
mov
xchg
or
orl
sub
push
arpl
sahf
push
shl
in
je
adc
fadd
adc
out
push
loop
js
and
sbb
packssdw
add
push
xchg
sub
pop
dec
xchg
fidivl
dec
fstpl
movsb
inc
je
js
mov
enter
rolb
inc
insb
dec
push
inc
mov
jb
sbb
hlt
aad
push
cmc
pop
aaa
and
lahf
adc
dec
jo
fucom
mov
push
stos
fildl
movsb
xor
mov
adc
idiv
and
test
dec
dec
orb
in
pop
push
xor
push
mov
insb
ja
add
ds
or
adc
scas
push
pop
icebp
int3
lods
pop
rcr
cmp
sarb
ljmp
inc
sbb
fmull
test
ss
je
sbb
cmc
jl
dec
xchg
cmp
push
pop
push
xchg
push
rcrb
pop
fcmovne
inc
pop
pop
jecxz
push
and
out
lods
cmp
in
in
fs
dec
gs
je
dec
mov
loop
in
das
orb
or
jbe
cmp
iret
shrb
inc
add
dec
mov
inc
sbb
add
call
inc
int
or
pushf
scas
sbb
sbb
pop
movsl
test
push
popl
adc
mov
mov
dec
push
int3
scas
ret
mov
xor
add
int3
jmp
andl
jle
add
insl
addl
pop
mov
std
sbb
mov
xrelease
add
lock
add
sub
inc
int3
add
cmc
mov
or
in
sbb
mov
inc
xor
sbb
sbb
sub
xor
adc
push
pusha
daa
filds
and
insl
mov
sub
mov
shrb
mov
sbb
loope
mov
mov
mov
sarl
dec
leave
mov
imul
lcall
cltd
cmp
inc
push
and
movsb
andl
mov
sub
sub
sbbb
adc
call
sbb
pushf
adc
and
fnstcw
cld
lds
daa
mov
mov
int3
sbb
and
icebp
fdivrs
and
jnp
in
dec
adc
ret
lds
add
xor
pop
out
hlt
inc
mov
sbb
cmp
inc
loop
mov
xchg
push
pop
push
push
sbb
cld
inc
dec
cmp
sbb
fadds
xor
mov
mov
mov
es
mov
imul
pop
push
test
sbb
mov
pop
jne
test
jns
mov
dec
stos
mov
sarb
sub
xchg
pushf
loopne
lcall
adc
mov
add
inc
loope
andb
lods
hlt
sub
inc
jno
das
mov
imul
pop
sti
sub
jl
mov
pop
clc
iret
push
add
push
mov
in
jmp
mov
xchg
in
mov
inc
clc
imul
addr16
xchg
jp,pt
scas
pop
shrl
dec
xchg
dec
ds
and
jecxz
jne
pop
jns
sub
cmpsl
or
dec
jnp
lcall
cld
leave
outsb
sbb
mov
sti
adcb
sub
or
mov
test
stos
xor
add
cmc
out
mov
rol
sub
ja
add
rcl
addr16
cmp
mov
mov
popl
jae
outsb
lahf
push
lret
jns
scas
clc
or
mov
add
inc
xchg
pusha
insb
inc
leave
stos
cltd
mov
xor
out
adc
vpmuludq
mov
cmc
popa
lods
shlb
dec
cmp
sub
pop
lret
cmp
mov
scas
mov
and
sbb
mov
in
push
push
cmp
js
mov
jg
sub
dec
rclb
stos
arpl
out
stos
mov
pop
out
xor
pushf
push
cmp
sbb
push
jne
cli
mov
cmc
inc
mov
shl
xchg
mov
inc
mov
mov
jle
sub
test
cmp
xchg
sub
outsb
sti
xlat
pop
xchg
leave
hlt
cs
fcmovu
adcb
pop
cwtl
imul
hlt
mov
xchg
adc
rorl
cwtl
fidivl
or
push
fwait
outsl
and
pusha
dec
out
mov
cmp
mov
inc
mov
mov
pusha
sub
sbb
push
xchg
dec
inc
mov
cmpsl
iret
cmpsl
cmp
rcll
pop
lahf
sbbb
and
fstps
pop
jo
loopne
dec
or
and
scas
adc
jmp
das
js
cmpsb
mov
popa
push
push
es
dec
shrb
mulb
mov
repnz
jnp
lds
mov
jle
mov
adc
and
mov
and
jno
sbb
dec
dec
rolb
andb
ds
and
pop
mov
or
adc
dec
and
or
push
mov
daa
pop
jns
out
mov
mov
test
popa
xchg
fnsave
xor
and
push
test
sar
cmp
push
aad
xlat
push
jb
inc
mov
xor
sbb
xor
das
jge
shlb
cld
fcmovbe
and
addb
in
inc
les
and
add
stc
loopne
xchg
xlat
pop
rol
and
aam
mov
fisttps
mov
push
mov
mov
sub
pop
xchg
cwtl
aad
clc
adc
notl
fs
and
arpl
push
jp
cmp
imul
mov
mov
icebp
aam
movsl
dec
test
push
pusha
into
mov
xlat
xchg
push
adc
xor
daa
out
jle
cmp
fiadds
and
test
es
jecxz
cmp
jbe
sahf
in
pop
enter
dec
lods
sbb
int3
mov
popf
das
outsl
xchg
push
or
movsb
xrelease
sbbl
pop
addl
pop
mov
or
mov
rcrb
jecxz
data16
test
das
clc
les
jno
xor
fmull
nop
leave
mov
repnz
dec
fidivrs
xchg
insb
jecxz
or
pop
fdivl
add
stos
icebp
pop
sub
ficompl
movzwl
and
or
add
movsl
lods
cld
and
arpl
ds
rolb
clc
add
pop
rcl
mov
int
sahf
inc
icebp
in
or
cwtl
jl
ret
mov
sbb
pop
aam
xchg
repnz
fisubrs
std
out
movsb
testb
push
mov
ds
sti
jmp
aad
pop
testb
jl
adc
mov
xchg
inc
add
and
add
mov
sub
loope
mov
sub
ficompl
jmp
ret
mov
pop
fwait
out
adc
lret
pop
hlt
ds
fwait
icebp
and
push
sub
add
adc
or
jp
repnz
cmc
out
das
movsb
fsubl
add
push
out
out
jle
cld
nop
mov
dec
sbb
push
ljmp
sti
adc
ficomps
rorb
adc
test
mov
sbb
and
icebp
aad
add
xchg
mov
das
addb
cmp
scas
inc
jnp
popf
mov
out
jnp
dec
xor
in
jle
mov
mov
mov
pop
xchg
lea
fists
push
dec
test
aad
and
out
scas
sbb
adc
mov
outsl
add
cld
dec
xchg
dec
push
repz
mov
stos
test
xor
sub
in
dec
icebp
lock
pop
es
inc
or
ret
sub
into
arpl
inc
cmp
push
mov
cmp
or
jl
iret
jbe
adc
insl
popa
push
cmc
loope
enter
mov
jmp
add
fnstsw
aas
loopne
sub
out
je
outsl
in
stos
ja
into
xor
movsb
jge
add
lea
test
call
adc
mov
je
mov
inc
inc
out
push
sahf
and
out
sub
loop
aad
pop
and
fs
mov
inc
push
cmp
inc
sub
nop
sbbl
cltd
xchg
cmp
mov
push
push
call
jge
ret
aas
test
mov
xchg
xchg
lret
pop
fnstsw
ret
pop
and
add
mov
je
popf
fisttpll
out
push
adcb
pop
xchg
ds
sub
pop
movsl
push
cmpsb
jnp
into
cli
xchg
test
hlt
loope
repz
call
aad
adc
outsl
insb
cmpsb
jno
cmp
loop
or
bound
push
ja
fdivrp
pop
fsubp
aas
in
jbe
jbe
leave
jge
cmc
shlb
aas
push
leave
lret
sbb
mov
loopne
jg
enter
add
mov
in
push
cmpsb
out
in
mov
cmc
movsb
cs
pop
inc
mov
mov
popa
shlb
cmp
into
aad
push
ja
fidivs
lahf
adc
in
and
pop
mov
inc
out
in
pop
cmp
iret
dec
lret
mov
jno
cld
jno
jnp
xor
fidivl
cmp
push
lahf
enter
mov
cmovb
shl
xor
clc
sbb
ja
push
pop
adc
adcb
cmp
sub
dec
out
hlt
push
test
sti
mov
push
std
mov
xchg
xor
iret
in
xchg
push
stc
lret
or
inc
adc
leave
lret
call
pop
inc
mov
sub
imul
jmp
loopne
push
cmp
sub
lock
dec
das
mov
pop
xor
ja
es
sbb
idiv
mov
pop
orb
mov
lea
jns
pushf
loop
push
jle
int3
mov
pop
insl
iret
adc
lret
in
popf
mov
or
ja
and
mov
stos
ss
sbb
pop
out
dec
adc
mov
lods
out
xchg
push
adc
cmpsb
adc
mov
je
cmp
mov
pop
loopne
or
imul
roll
sub
rcrb
sbb
cmp
jp
aaa
sbb
nop
inc
cmp
adc
and
mov
xor
push
fs
mov
testb
mov
leave
jb
in
sbb
fstps
pop
daa
jecxz
jbe
pop
xchg
mov
xorl
add
push
jnp
mov
rcrl
mov
sbb
push
sub
sti
aam
xor
mov
adc
dec
mov
cmp
dec
aas
lahf
mov
and
mov
pop
je
addr16
cmp
mov
aaa
enter
xchg
std
xor
jle
add
mov
ljmp
andb
xchg
and
sub
push
je
inc
or
jge,pn
std
mov
mov
and
gs
pop
aas
int3
scas
mov
fs
aam
pop
pop
add
sub
test
jns
