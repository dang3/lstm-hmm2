push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
jmp
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
add
add
inc
adc
pop
arpl
and
jp
fisubrs
mov
out
mov
scas
add
ret
jmp
loop
out
daa
jg
add
andl
leave
add
fnstenv
das
pop
mov
stos
sarb
in
iret
test
les
xor
dec
sbb
push
subl
adcl
imul
adc
mov
sahf
push
xchg
push
jmp
insl
leave
aad
push
fiaddl
in
es
xor
daa
fs
js
rclb
outsb
inc
shll
jbe
sbb
outsl
push
mov
incl
scas
scas
push
fimuls
dec
pop
std
inc
mov
or
dec
lods
jmp
dec
imul
repz
dec
xchg
ret
push
outsb
mov
in
inc
sbbl
and
subl
stos
scas
jle
or
js
cmc
insb
gs
or
enter
mov
add
xchg
mov
and
in
mov
dec
xchg
mov
cmp
stos
scas
popa
aad
scas
and
add
inc
lock
or
lret
mov
add
and
out
icebp
idivb
sbb
popf
insb
xor
filds
arpl
adcb
rcll
mov
shrl
popf
lahf
mov
popa
andl
test
or
lods
fcoml
pop
xchg
inc
jle
jmp
mov
out
fwait
loop
icebp
inc
pop
cwtl
push
pop
std
cltd
push
mov
inc
outsb
xor
jae
mov
cli
insb
sbb
jae
rorb
sbb
daa
sbb
fxch
clc
jb
iret
jmp
icebp
imul
push
mov
aad
lahf
jns
push
movsl
push
mov
xor
cmp
mov
add
pop
sub
lods
jp
mov
cwtl
or
lea
aam
add
cmpsb
jne
mov
jbe
popa
mov
mov
into
cmp
xchg
out
imul
lea
xchg
aad
loopne
addb
aaa
roll
mov
push
in
sti
imul
cmc
sub
cmp
lock
es
jge
mov
mov
ret
add
outsb
cmpsb
lea
outsl
push
fwait
mov
and
pop
jg
inc
adc
lods
add
imul
inc
mov
xchg
in
jmp
or
inc
imul
test
pushf
cmpsl
stos
stos
push
leave
add
idivl
jae
lods
das
pop
out
inc
dec
lret
add
aaa
and
fcmovnbe
xor
test
push
jmp
adc
xchg
push
sahf
or
dec
sub
and
pushf
cmp
insl
cmp
mov
sets
or
xchg
dec
or
sahf
add
pop
sub
test
dec
aaa
and
int3
cmpsl
jae
fildll
jne
lcall
xor
or
stos
pop
push
sub
sbb
add
pop
xor
adc
adc
stc
ret
push
fisubrl
push
cmpsl
pop
imul
pop
mov
xlat
sub
mov
push
aas
std
mov
hlt
sbb
inc
push
mov
add
cld
pop
xchg
mov
in
mov
and
lret
pusha
and
sahf
lds
pop
mov
xchg
mov
cld
sbbl
adc
or
mov
mov
daa
add
out
mov
je
cmp
repnz
cmpsl
and
xchg
call
ds
stos
xchg
jmp
cmpsl
xor
scas
cmp
outsb
in
dec
and
dec
popa
cmp
push
push
stc
pop
and
xor
ja
adc
add
jae
and
mov
mov
xchg
xchg
inc
push
sahf
xor
inc
push
adc
xchg
int
inc
imul
sub
sti
sbb
adc
ss
movsb
shll
xor
repnz
jp
fwait
pop
ror
stc
movsl
pop
mov
in
sub
mov
lcall
hlt
and
mov
cmpb
aad
jmp
arpl
push
out
sub
add
add
mov
mov
gs
test
pop
clc
cs
push
mov
xor
lds
mov
and
inc
and
fs
bound
cmp
ja
addl
adc
push
sub
rcrb
lock
sub
inc
rorb
cltd
imul
aas
xor
push
and
int3
insl
add
or
cltd
and
mov
imulb
push
sub
cmc
outsl
bound
mov
sub
pusha
outsb
imul
incl
adc
int
gs
mov
out
sub
mov
or
lahf
sub
mov
les
jno
sti
scas
xchg
scas
ljmp
rcrl
imul
xchg
cs
adc
sub
jnp
sbbl
xchg
mov
jle
mov
movsl
pop
jbe
xchg
lret
xchg
cltd
xchg
addr16
push
or
loopne
insl
iret
add
push
imul
adc
inc
shlb
mov
dec
test
cmp
adc
cltd
popf
mov
daa
daa
jne
push
xchg
mov
push
insl
jecxz
sti
xchg
cld
xor
dec
mov
in
inc
push
xchg
je
ss
pop
jno
push
out
jns
xor
add
add
xchg
stos
inc
outsl
add
inc
mov
push
les
std
cltd
xchg
mov
adc
sub
cmp
and
jbe
shlb
mov
aas
imull
mov
xlat
std
xchg
push
inc
addl
sub
sub
mov
roll
lret
adc
sub
push
cltd
aaa
jo
xchg
mov
dec
popf
push
sub
fnsave
repz
mov
bound
scas
push
test
mov
xchg
xor
push
sbb
adc
xchg
insl
cmp
mov
stos
clc
xchg
lds
dec
enter
and
push
into
shll
push
stos
jne
in
push
push
arpl
jnp
into
sub
push
add
push
adc
aaa
mov
cmc
ljmp
subl
ret
inc
jb
and
xor
dec
push
cmp
xchg
mov
inc
cwtl
ja
push
js
jecxz
sub
add
mov
or
push
scas
sahf
outsl
fisubrl
add
addr16
jmp
mov
sbb
mov
in
rcrb
loopne
sbbl
iret
or
aad
cwtl
mov
cmc
or
push
xor
shrb
mov
out
xor
adc
out
dec
mov
xchg
push
dec
lcall
das
and
mov
syscall
jg
in
cmpb
outsl
in
outsb
add
add
add
leave
xchg
pop
aaa
cmp
adc
mov
out
in
or
or
mov
add
jle
pusha
cmp
pop
pushfw
scas
inc
and
inc
cmpsl
push
xchg
push
outsl
stos
pop
mov
and
add
jecxz
and
mulb
adc
fwait
jbe
pop
pop
std
pop
jecxz
adc
in
sub
push
rol
dec
xor
lock
cld
into
jle
aas
add
and
lods
jecxz
xchg
cwtl
xchg
lcall
add
cltd
sbb
repnz
add
mov
arpl
mov
push
rclb
inc
int3
sub
lret
je
inc
xchg
cltd
fcom
add
mov
lods
sub
fidivl
mov
mov
and
jae
mov
pop
or
movsb
add
ror
out
xchg
insb
jle
pop
fdivrl
outsl
push
add
add
xor
cmp
xor
inc
fyl2xp1
mov
and
jno
stc
clc
pop
mov
mov
ss
in
outsl
test
or
and
movsl
loop
or
cmpsb
mov
aad
lods
mul
pop
jb
inc
push
sub
fldl
sarb
into
sbb
jg
mov
pop
add
push
dec
pop
jp
and
cli
sbb
andl
and
add
add
xchg
inc
popf
or
cld
or
jb
or
and
and
loopne
mov
push
jecxz
add
shlb
mov
inc
sub
xor
xlat
pop
mov
push
out
mov
iret
mov
lock
into
int3
xchg
cmp
clc
push
popf
add
cmp
mov
stc
test
mov
cmp
sub
loope
mov
sub
push
sub
mov
inc
pop
xor
mov
clc
ja
inc
or
out
dec
out
pop
mov
rolb
lcall
adc
subl
in
ljmp
pushf
and
lods
sub
lods
cltd
and
insl
jbe
cmp
mov
addb
lret
pop
les
mov
mov
jbe
xor
fdivrs
inc
test
xchg
add
pop
lcall
and
mov
push
dec
dec
sbb
rorb
cs
pop
sbb
lods
push
mov
out
jne
jnp
jns
xlat
or
dec
ss
dec
aaa
xor
insb
insl
movsl
repz
or
fbstp
test
clc
xor
aas
repz
pop
jbe
jmp
add
inc
push
mov
mov
mov
lea
add
dec
mov
mov
push
push
mov
outsl
sbb
sub
out
xor
sbb
cmp
xchg
inc
popf
fnsave
cmp
ret
add
jmp
cmpl
mov
bound
mov
push
dec
sub
and
jp
sbb
cmp
testb
je
mov
adc
gs
and
add
in
adc
jp
xchg
jne
push
dec
and
pushf
mov
and
add
aad
movsb
cmc
aas
inc
adc
mov
add
out
lcall
push
lds
push
lock
jp
int
adc
xchg
pop
fistpl
adc
add
push
dec
add
je
cmpl
mov
jbe
into
and
out
xchg
movsb
imul
xchg
fidivl
fwait
enter
xor
mov
loope
mov
fistpl
inc
lret
xlat
and
xlat
push
cltd
adc
shr
repz
cmp
pop
adc
and
adc
cltd
mov
pop
mov
sub
lret
or
xchg
xchg
stc
in
out
adc
sub
mov
jne
xor
jmp
add
les
dec
or
cli
lea
lret
cmp
stos
push
fadds
fbstp
fwait
ja
add
add
loope
jo
lock
in
jnp
pop
fcompl
daa
and
in
mov
bound
jnp
dec
mov
rol
inc
push
adc
inc
leave
add
gs
mov
adc
cmp
pop
adc
outsl
mov
in
std
subl
inc
call
sbb
popf
mov
lcall
stc
jecxz
js
faddl
add
add
cmp
test
adc
and
push
xor
es
mov
out
push
xor
adc
adc
call
sbb
cmp
adc
faddp
push
loop
popa
sbb
add
inc
jbe
push
dec
fstpl
std
cmp
jae
jg
mov
mov
xchg
cmpsl
dec
enter
adc
cmpsb
ljmp
sbb
pop
repz
add
add
leave
push
pop
cmp
fists
pop
jg
test
scas
inc
xchg
ret
or
shl
rorb
inc
repnz
fcoml
leave
add
frstpm(287
jnp
je
ror
or
ret
stc
pusha
pusha
iret
inc
insb
movsb
or
push
mov
jle
repnz
mov
out
roll
lods
imul
jp
leave
xchg
lcall
pop
and
add
dec
mov
nop
das
dec
mov
ret
fdivs
add
fsubrl
inc
in
inc
mov
cmpsb
repnz
cld
adc
jl
addb
shlb
mov
add
mov
out
cld
jge
sub
stos
std
sahf
and
pop
arpl
and
test
je
ljmp
sub
add
add
imul
xlat
je
dec
out
or
push
pop
rep
bswap
fldcw
jbe
mov
xchg
push
rorb
adc
in
jp
mov
int
xchg
pop
lock
in
int3
jg
jp
cmp
loop
cmp
add
lret
and
add
lods
insl
fcom
lods
push
add
int
mov
jg
cmpsl
repz
cmp
cwtl
loopne
and
add
add
pop
neg
iret
inc
aaa
inc
test
dec
push
jl
andb
or
pop
mov
pop
gs
mov
sub
ds
adc
cmp
cld
jb
dec
pop
ljmp
or
test
or
or
fdivl
cltd
adc
cmp
or
adc
cmp
pop
movsl
in
in
sub
enter
mov
pop
test
add
jae
mov
pop
mov
jmp
push
ffreep
xchg
push
in
mov
rorb
in
cmova
mov
jo
mov
leave
sub
add
xchg
xor
pop
out
push
and
dec
mov
and
out
mov
scas
add
mov
popf
inc
iret
clts
or
xchg
sub
fildll
frstor
xchg
push
stos
int3
fistpll
pop
call
mov
adc
and
gs
out
arpl
xlat
stos
fcmovne
fwait
into
leave
push
loop
gs
and
push
aam
fdivl
jmp
sbb
insl
or
test
pusha
dec
jmp
jno
es
add
jne
mov
push
jo
and
out
test
repnz
sub
or
xchg
jg
fmuls
add
add
sbb
pop
sbb
enter
inc
adc
xor
imul
cmp
test
out
sub
bound
cmc
fsubrl
aas
in
in
sbb
popl
insl
sbb
sbb
into
xchg
test
jge
out
xchg
ss
mov
cli
dec
loope
loope
cmp
ja
mov
push
adc
inc
in
jbe
sub
add
add
mov
fldenv
cwtl
sub
pop
ret
dec
negl
pushf
std
dec
addr16
pop
fidivrl
jno
inc
xchg
mov
sub
jle
lret
and
or
test
fisubs
in
jmp
cli
push
sbb
jae
fisttpl
push
mov
ret
in
or
pop
mov
mov
adc
and
cltd
mov
repz
xor
xchg
inc
repz
xor
mov
enter
enter
stos
movsb
jb
std
pushf
ss
les
dec
shrb
dec
pop
ret
scas
xchg
test
mov
daa
je
aad
test
pop
sbb
aad
mov
cmp
dec
cmp
popf
mov
mov
sub
prefetch
or
mov
dec
mov
je
jae
push
add
mov
ret
sbbb
ret
or
lock
add
and
lea
push
aad
lahf
shr
mov
shll
bnd
addb
push
mov
ds
or
add
inc
cltd
xchg
add
jge
xor
ja
loopne
push
cltd
push
mov
pushf
sbb
addl
faddl
inc
push
add
dec
pushl
neg
outsl
shlb
shll
push
add
add
and
int3
test
xlat
xchg
adcl
jns
cmpsl
popa
or
pushf
and
push
jle
cmpsl
push
jae
mov
loop
in
in
xor
shr
js
outsl
jb
and
pusha
adc
ja
pop
movsl
iret
pop
test
es
outsb
in
sbb
outsl
pop
adc
lret
cmp
or
push
mov
les
inc
dec
les
jae
add
push
out
outsl
cmpsb
sub
scas
ja
push
andl
push
add
sub
sahf
inc
rcr
jp
cwtl
pop
lock
pop
or
or
and
inc
xlat
test
jl
arpl
cmp
aam
xchg
ffree
ljmp
xchg
popa
les
int
and
sarl
inc
shll
stos
bound
ja
or
and
pop
loope
lea
mov
add
add
push
enter
jp
imul
pop
out
push
clc
mov
adc
sbb
xchg
arpl
mov
ja
insl
shl
push
decl
ret
pop
add
xor
adc
repnz
or
add
out
insl
mov
repz
into
mov
out
xor
dec
xor
out
ljmp
test
jb
into
jle
mov
cmpsl
in
repnz
add
add
out
ss
cmp
rclb
and
loopne
je
mov
daa
add
dec
pusha
data16
dec
jecxz
hlt
repz
jne
add
pop
dec
out
clc
jmp
test
movsb
jmp
fistps
daa
scas
mov
or
iret
mov
jbe
or
add
push
or
ret
push
inc
nop
mov
mov
mov
push
leave
lock
pop
adc
add
and
out
inc
aas
xor
inc
cmpl
mov
loopne
sbb
cmp
mov
dec
loop
or
mov
jno
lret
in
cmpsb
or
push
and
push
std
xchg
scas
xlat
cld
push
or
out
cmp
push
jbe
fmull
cmpsb
loope
lock
js
mov
enter
xchg
push
hlt
jo
mov
gs
cs
adc
add
fs
and
aas
test
push
xchg
lcall
dec
mov
mov
push
cmpb
loop
ret
pop
cmc
sahf
gs
call
inc
mov
mov
sahf
xchg
jg
xchg
stc
loop
std
xchg
fs
sub
lahf
add
mov
dec
pop
xor
in
outsl
inc
fisttpl
enter
xchg
pop
jl
jmp
mov
inc
sub
xor
test
fs
mov
add
add
xchg
push
aad
lods
mov
into
pop
int
fstps
clc
lret
xchg
lahf
mulb
pop
out
sbb
inc
fldcw
rcll
int
sbb
add
jecxz
out
notb
enter
push
gs
jle
ret
mov
test
and
shl
sbb
pop
or
push
xchg
or
pop
xchg
imul
or
or
add
pushf
add
mov
pop
jge
adc
loope
lods
xchg
xchg
dec
mov
add
daa
rorb
add
fists
stos
cltd
mov
mov
dec
jae
or
mov
xlat
xchg
clc
pop
push
xor
and
xchg
mov
push
out
inc
ret
xchg
enter
jbe
and
add
cli
xor
decl
inc
cmp
dec
xor
cli
insb
pop
xor
ss
and
test
jne
ret
dec
or
fidivrs
sbb
cmp
jne
nop
cmc
sbb
in
and
scas
push
push
add
adc
cmp
sbb
push
loopne
fstps
sbb
dec
jp
test
mov
int3
push
in
jecxz
sub
add
lds
enter
fnstsw
add
ljmp
jge
fidivl
mov
jp
cmp
stc
cmpsl
je
js
xchg
sub
std
dec
sahf
add
jl
test
push
inc
fisubrs
fdivrs
out
dec
inc
shll
sbb
in
loop
add
inc
int3
dec
stos
addl
mov
push
push
jecxz
lcall
jne
adc
sub
add
inc
xor
fdivs
cli
jb
aam
cmc
stos
mov
mov
xor
hlt
pop
push
xchg
adc
adc
and
mov
cmpsl
or
cwtl
fildll
jo
mov
jne
xor
call
push
mov
sbb
filds
es
scas
xchg
jne
lods
push
xor
add
xchg
cli
cli
pushf
xchg
cmp
cli
jne
mov
paddq
fabs
adcb
outsb
pop
orl
lret
repnz
and
and
jmp
lods
jle
mov
rclb
jns
lahf
clc
fldcw
mov
mov
fnstcw
scas
imulb
sbb
jl
lods
aas
ljmp
xor
mov
mov
push
add
shl
ret
add
xlat
mov
push
rcrl
dec
popa
fisubl
inc
hlt
xchg
movsl
sahf
jbe
mov
je,pt
xchg
fs
cli
mov
loop
and
div
fisubrl
jae
cmp
movsb
ss
cli
add
and
je
push
xor
xchg
mov
cmpl
aas
xchg
test
push
sub
int
mov
shlb
cmp
jbe
add
repz
mov
testl
imul
jle
fistl
enter
ret
inc
mov
add
mov
mov
cmp
pop
cmpsb
rcrb
adc
rorb
xor
sti
shrl
loopne
out
inc
out
outsl
aaa
or
jp
insl
push
movlps
mov
out
sub
sti
aaa
mov
mov
stos
mov
out
movsb
mov
jecxz
int3
inc
adc
add
add
adc
cmp
cmp
add
testl
mov
fmuls
icebp
cmp
ret
push
popl
lret
addb
lret
and
sbb
lods
lea
pusha
loopne
mov
loopne
sub
ss
mov
jl
in
add
negl
mov
jae
inc
lods
pop
rclb
test
add
mov
int3
ja
movsb
into
lret
inc
loop
xor
dec
popl
or
adc
gs
cwtl
jbe
jl
fucomi
inc
cmp
outsl
mov
pop
push
in
daa
out
sbb
and
dec
addb
or
mov
add
repz
and
cwtl
mov
call
rorl
xchg
push
ret
fsubs
mov
dec
rorl
flds
int
fnstcw
rol
push
adc
add
cmp
cmp
call
movsl
outsb
insb
icebp
mov
add
fists
iret
es
cwtl
fs
in
hlt
push
fs
add
and
shll
inc
push
adc
or
sub
jno
rep
mov
and
cwtl
int3
push
insb
lahf
test
xor
cli
in
push
fsubrs
daa
out
xor
xchg
and
add
add
call
cmp
add
stos
xor
and
fs
adc
mov
aas
or
cmc
out
push
jbe
in
mov
adc
xchg
in
mov
fcom
inc
inc
push
js
pusha
adc
pop
mov
mov
xchg
lds
inc
sahf
loopne
jp
into
sub
push
xor
push
fdivp
hlt
popf
into
add
dec
sbb
lahf
adc
jnp
inc
fcomi
sahf
loope
pop
or
es
push
dec
test
aam
lock
fidivl
cmp
iret
outsl
or
mov
adc
jno
dec
pop
fstp
sub
sahf
mov
gs
aam
int3
mov
fsubp
shl
popa
lods
popa
fnstcw
in
sub
je
mov
mov
ret
sub
push
inc
mov
loop
imul
pop
jle
inc
jge
in
outsb
insl
xor
jl
cmp
sub
push
stc
jmp
add
or
adcl
in
pop
sbb
rorb
cmp
clc
xchg
aad
add
mulb
mov
leave
push
inc
pop
enter
out
sub
sti
test
lret
mov
xchg
sub
fstpt
scas
aam
movsb
aam
test
fs
cld
xor
shlb
inc
mov
roll
add
add
add
mov
clc
out
int
jns
xchg
and
in
maxps
dec
sub
jno
push
and
fnstsw
outsb
pop
push
and
faddl
push
jge
ret
mov
ja
mov
push
mov
mov
xchg
fwait
sbb
xchg
mov
inc
push
jno
popa
mov
jns
mov
dec
jne
test
add
or
leave
testl
add
pop
into
roll
jp
gs
fdivs
dec
sbb
ret
xlat
adc
or
je
js
cmp
sti
pushf
jae
call
outsl
cmp
cmp
in
pop
pushf
call
pop
pop
mov
jl
out
mov
and
xor
outsl
xor
xorb
add
add
enter
xor
pop
fcmovu
xchg
rolb
iret
aam
call
mov
jnp
push
mov
or
orb
insb
outsb
dec
mov
cld
popf
std
fstl
fisttps
hlt
lds
xchg
rolb
movsb
out
pusha
outsb
jl
out
sbb
dec
lds
adc
xchg
jl
insl
clc
sub
daa
addr16
popa
aam
add
std
int
daa
mov
shll
jge
sub
push
jp
and
subb
iret
dec
fsubrs
lods
inc
sbbb
jae
mov
int3
push
mov
sub
jmp
clc
cmpsb
jmp
push
cmp
jle
xchg
dec
inc
imul
xor
mov
lahf
in
mov
pop
cmp
fs
mov
or
icebp
mov
add
add
dec
xchg
mov
nop
jg
fidivrl
lahf
adc
pushf
aaa
and
xor
in
pop
test
loopne
imul
fcoml
bound
mov
stos
pop
dec
sub
mov
xchg
mov
cmp
pop
int
mov
sbb
shlb
sub
insl
mov
jo
std
lcall
iret
adc
in
push
fisubrs
lret
scas
lahf
pop
jne
lahf
xlat
ljmp
rorl
mov
pop
sbb
aad
pop
cmp
loop
push
inc
in
ja
pop
jne
sqrtps
add
int3
loop
mov
xor
mov
pop
xchg
adc
sbb
pushf
orb
ljmp
jns
out
cmp
push
dec
mov
shlb
inc
in
adc
gs
sti
in
sbb
imul
xchg
mov
js
sahf
in
clc
lods
andl
inc
imul
add
lock
mov
test
dec
das
cmpsb
sbb
inc
out
pop
call
popa
movl
ret
in
jbe
daa
sub
push
lea
sbb
aam
jle
pop
test
pop
dec
pop
repz
jbe
test
xor
pop
sbb
mov
cmpl
push
addr16
repz
imul
sbb
inc
notl
mov
sbb
dec
fucompp
gs
inc
es
add
add
mov
mov
xchg
fistpl
out
add
addl
add
ss
sbb
outsl
jnp
ja
test
sub
lahf
xor
adc
push
jle
imul
xor
sar
xchg
jbe
inc
call
ljmp
sub
aam
data16
jg
cmp
pusha
cli
cmp
fisubs
cmp
rcrb
xorb
xchg
leave
ss
jbe
jo
test
jp
sub
sub
add
add
movsb
inc
add
xor
or
inc
test
int3
lcall
sub
aam
imulb
stos
push
push
fisttpll
dec
xchg
loopne
pop
aas
jg
lods
jbe
imul
sti
or
xchg
mov
xchg
psubq
fsubrs
mov
fwait
in
into
fwait
gs
les
aad
mov
mov
mov
adc
or
mov
mull
push
jne
push
in
out
scas
pop
dec
mov
push
call
stc
jae
xchg
lds
mov
xor
sub
popf
push
mov
inc
mov
jns
fsubrs
loope
jno
sbb
in
inc
add
lea
mov
icebp
mov
imul
mov
fiadds
pushf
inc
repz
insb
xchg
clc
mov
add
int
push
outsb
adc
xchg
xchg
add
mov
dec
push
xchg
aaa
dec
xor
sub
mov
or
adc
mov
sub
cld
push
jge
daa
pop
cmpsb
jg
sub
push
sbb
mov
outsb
loopne
pop
jge
mov
inc
int3
cmp
out
loopne
jle
pop
fbstp
cmp
xor
dec
js
add
jmp
jle
test
inc
add
push
lea
xchg
sub
aad
out
jg
dec
lret
fwait
pop
add
push
mov
js
imul
cld
sub
sbb
addr16
mov
hlt
mov
xor
mov
stos
rorb
jg
push
stos
add
sbb
cli
ret
fstpl
add
add
sub
sub
aaa
fsts
dec
cmpsb
mov
mov
lea
cmpsl
sbb
ss
mov
and
mov
push
dec
jnp
jle
sub
jbe
and
notb
movsb
cs
and
lea
xchg
repz
hlt
adc
insb
stos
in
orl
adc
movl
and
inc
shrl
mov
adc
add
add
pop
jle
sti
mov
push
int3
std
inc
in
mov
push
test
fs
jmp
imul
testl
fsubrs
cld
push
mov
jnp
jge
adc
jl
and
xchg
clc
sub
mov
mov
adc
mov
cmp
inc
fsubrp
leave
loopne
jg
aam
inc
push
mov
add
hlt
and
