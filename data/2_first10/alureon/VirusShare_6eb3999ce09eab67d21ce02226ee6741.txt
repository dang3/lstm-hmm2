push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsl
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
jp
push
andb
icebp
or
mov
sub
push
sub
sbb
fwait
dec
loopne
fisubrs
stc
movsb
xor
pusha
mov
shl
inc
pusha
inc
mov
pop
and
ret
mov
add
push
inc
push
jo
das
cmp
popa
movsl
jno
mov
push
pushf
cmp
mov
jo
mov
stos
pushf
jecxz
inc
adc
and
pop
xchg
lret
pop
or
aas
das
jns
lret
xchg
popa
xchg
mov
cwtl
xchg
cmpsb
xchg
pop
jae
sbbb
cs
sbb
mov
mov
popf
dec
jbe
into
jmp
push
xchg
pusha
scas
rorl
loop
inc
push
fildl
cld
pop
mov
dec
mov
mov
les
jbe
jle
paddd
add
stc
pop
push
and
bound
arpl
test
sarl
std
addr16
pop
mov
xchg
fldenv
or
mov
cmp
js
out
movsb
pop
inc
fidivl
ljmp
pushf
mov
adc
mov
mov
xchg
data16
jae
movsl
ret
sbb
xor
data16
sti
pop
ret
xor
in
js
or
push
lods
xchg
lods
sub
fwait
adc
stos
xchg
cltd
dec
mov
test
jnp
push
sbb
fdivrs
arpl
xchg
mov
dec
push
lcall
xor
jle
sub
xor
shrb
test
xor
inc
ret
mov
inc
inc
pop
cmpsb
inc
mov
cmp
xchg
cli
repz
xlat
insl
inc
or
fbstp
loopne
out
sub
lahf
xorb
lods
jne
jno
stc
and
hlt
fdivr
jns
hlt
mov
shr
add
add
push
dec
in
push
xchg
or
mov
pop
ds
popf
shl
jg
jle
into
jmp
push
stc
xchg
daa
ljmp
sar
mov
fidivrl
sub
pop
inc
stos
xor
push
xbegin
push
rcll
cmp
xchg
imul
or
scas
ljmp
inc
mov
jae
les
and
mov
push
add
mov
jge
add
jb
iret
mov
popa
push
icebp
test
jecxz
shll
iret
adc
std
or
or
dec
sbb
and
fistps
jge
and
lods
xchg
imul
mov
addr16
sub
adc
jns
mov
fs
xchg
mov
add
sbb
jp
jmp
lret
outsl
sub
inc
jp
iret
imul
divl
mov
movsb
ficomps
sub
lods
xchg
dec
jae
cmp
sub
adc
sub
or
test
xor
sub
fbstp
scas
mov
test
jmp
push
mov
push
adc
xor
adcl
ds
pusha
lret
sub
push
and
outsb
outsl
mov
adc
push
add
sti
call
ficomps
add
out
xor
jp
inc
push
push
push
or
push
cmp
xchg
or
leave
repz
iret
popf
adc
mov
push
lods
inc
and
inc
fwait
ja
sti
mov
add
or
ja
hlt
rol
inc
mul
adc
sub
out
cmp
call
clc
mov
mov
push
or
add
xor
and
cmc
loopne
inc
mov
add
adc
mov
les
lods
mov
scas
pop
fistps
clc
pop
add
shlb
pop
mov
fistps
sbb
mov
mov
sahf
gs
loop
lock
pop
nop
dec
dec
daa
mov
lcall
mov
pop
and
cmp
sub
stc
lock
xlat
pop
dec
dec
in
aas
ja
and
lods
adc
and
mov
add
aaa
jmp
test
mov
ljmp
sub
inc
iret
and
push
sbb
nop
cwtl
or
les
push
lods
inc
daa
int
mov
sbbb
movsl
mov
stos
scas
push
xlat
xchg
jns
xor
nop
imul
dec
int
xor
das
mov
fsubl
jo
mov
inc
movsl
cmp
out
movsl
xor
es
inc
gs
push
divl
mov
add
inc
pusha
lret
pushf
fs
cmpsb
inc
xor
push
or
add
lea
in
and
sbb
mov
or
mov
sub
fiaddl
xchg
ljmp
sahf
mov
gs
add
stos
nop
sub
loopne
inc
daa
sub
ds
fs
inc
or
sti
and
shll
lock
repnz
or
dec
mov
popf
inc
add
mov
lcall
pop
jns
jp
dec
movsb
negl
loop
outsl
add
sbb
and
icebp
aas
push
fidivrl
xchg
push
into
mov
pop
xor
mov
or
bound
hlt
fistpl
aad
or
dec
cmp
inc
iret
xor
adc
pause
fsts
mov
sub
repnz
stc
mov
add
insl
add
popf
add
stos
push
mov
xchg
mov
fwait
mov
sbbb
sarl
gs
or
test
push
loopne
lods
sub
jmp
and
lret
clc
dec
jnp
push
jecxz
mov
insb
js
mov
out
fdivs
push
insb
cmp
cltd
and
lret
add
jp
leave
sahf
test
leave
inc
add
inc
fs
mov
xlat
push
dec
pop
add
pop
insb
dec
bound
xor
sbb
add
aad
jo
lods
pop
mov
xor
arpl
iret
addr16
leave
and
mov
jmp
sbb
imul
xchg
lar
xor
pop
mov
scas
inc
imul
loope
push
lcall
rclb
pop
cmp
out
mov
inc
sbb
in
add
fimuls
sbb
adc
lret
aas
test
rep
fldl
lods
push
xchg
outsl
lds
jp
xor
xor
cmpsb
sbb
jmp
and
les
jecxz
jb
movsb
or
and
pop
inc
pop
cli
push
mov
mov
std
stos
push
pop
or
outsl
sub
sub
ja
jge
xchg
mov
or
in
and
dec
sbb
in
dec
push
loopne
std
popa
mov
mov
xchg
adc
mov
and
lea
int3
or
or
mov
mov
xchg
push
fs
loop
test
pop
jp
or
add
scas
jmp
aaa
dec
inc
cmp
xchg
sub
xchg
or
cmp
push
mov
frstor
dec
movsb
sti
outsl
fildl
arpl
xchg
addr16
xorl
pop
sbbb
jge
arpl
out
stc
dec
daa
enter
pusha
sahf
sbb
push
cmp
dec
xchg
ror
dec
dec
or
or
sub
cmp
ljmp
xchg
or
jecxz
loop
push
push
push
inc
inc
push
pop
out
xlat
xchg
in
lods
push
cld
mov
jbe
hlt
add
insb
dec
clc
xor
pop
inc
int
popa
leave
sbb
fcoms
sub
dec
xor
and
outsb
sbb
xorb
xchg
cmp
fwait
mov
add
add
movsl
mov
out
push
lahf
inc
shll
fisubl
xchg
add
js
push
rclb
inc
rorl
pushf
sbbb
insb
pop
ret
fmulp
or
ret
xchg
sbb
xchg
sahf
xchg
mov
cld
mov
pop
add
jp
xor
test
dec
stos
lret
stos
or
xor
xchg
dec
icebp
sub
cmp
push
mov
mov
fstl
sbb
add
in
lds
int3
jbe
icebp
xchg
cltd
sarb
xor
fdivrl
pop
ss
xlat
dec
cmc
imulb
adc
popa
ret
pop
push
fsubs
stos
dec
adc
mov
shl
inc
xor
push
sbbb
push
mov
inc
xchg
jecxz
xchg
sub
cmp
rep
mov
divl
jl
cmp
rolb
pop
lahf
insb
pop
sub
push
mov
adc
adc
jmp
xchg
or
xorl
and
ljmp
ret
or
movsl
jecxz
pop
inc
xchg
enter
mov
xor
ljmp
pop
hlt
es
repz
shrb
jne
pop
adc
dec
inc
lret
les
gs
ljmp
adc
or
push
lcall
add
add
inc
pop
pop
mov
aas
add
mov
pop
sbb
adc
rcl
add
cmp
push
cltd
mov
pop
data16
pop
ret
mov
daa
jle
sbb
sbb
mov
sahf
adc
mov
cmp
pusha
add
jo
sbb
std
push
add
cvtps2pi
pop
pop
dec
jae
jbe
lock
jns
xor
rcll
ret
add
mov
xchg
jl
sti
sub
in
jo
pop
push
or
subl
push
mov
dec
mov
and
ljmp
pop
out
inc
movsb
xor
out
sti
scas
gs
and
lret
in
push
loop
xor
test
push
repz
dec
mov
test
inc
nop
insl
push
inc
mov
sbb
xchg
pop
or
popa
data16
mov
add
dec
mov
mov
mov
pop
push
data16
popf
adcb
je
jmp
out
or
xor
les
js
int
push
popf
fnstenv
and
sbb
or
mov
sub
xchg
push
pop
pop
sbb
jb
xchg
jg
repz
cli
dec
es
ljmp
xchg
mov
gs
pop
repz
decl
arpl
fabs
adc
add
add
aaa
rcrb
iret
shll
dec
xor
xchg
aam
or
pshufw
cld
mov
and
dec
fsubs
jl
movsb
sub
movsb
addr16
or
push
push
sti
jno
ljmp
jle
aas
jnp
mov
jmp
popf
outsb
adc
xor
cmp
loop
mov
fs
or
xor
mov
int3
in
mov
ror
mov
or
cli
jnp
pushf
fwait
mov
test
gs
push
fs
jle
aad
lcall
add
xor
call
cmpsl
in
cmpsb
dec
adc
xchg
jno
add
lods
mov
jns
and
and
imul
sbb
add
test
mov
mov
pop
push
leave
mov
add
add
dec
adc
fdivl
imul
sbb
sbb
push
dec
pusha
adc
fs
dec
out
pop
arpl
cmc
in
movsl
push
dec
jne
cmp
loopne
mov
stos
push
xchg
ljmp
rolb
mov
cld
xor
daa
dec
mov
sub
stc
enter
lret
push
cwtl
movsl
mov
add
add
add
inc
sbb
dec
fsubl
push
mov
and
rorl
clc
std
rorb
out
scas
jmp
out
sbb
and
sbb
sbb
out
adc
ja
adc
sub
lods
scas
xor
push
movsl
push
xor
pop
push
sbb
sbb
jne
loope
ffree
or
add
lahf
cmp
clc
mov
mov
movsb
add
imul
add
add
in
jae
cmp
jo
push
iret
imul
sub
fnstcw
add
stos
dec
xchg
loop
or
add
icebp
xchg
enter
data16
xor
in
jb
fs
lock
shr
dec
js
mov
dec
daa
cltd
push
movsb
lds
inc
movsb
stos
daa
int
and
or
xchg
scas
rep
cltd
shr
dec
fldl
pop
dec
repnz
mov
std
add
ds
dec
popf
sbb
add
add
aam
shrb
gs
mov
dec
mov
faddl
jae
xor
xchg
loopne
into
xchg
add
jecxz
outsl
sbb
aas
xchg
mov
sbb
inc
lock
xchg
or
jno
pop
das
mov
cld
xor
cmp
mov
push
rol
cmp
add
je
cmp
pop
and
cmp
xchg
and
mov
mov
negl
sbb
adcb
mov
loop
sbb
lods
insb
cld
fidivl
fsubl
stc
xchg
lods
test
test
push
popa
sarl
repz
ss
je
cmp
pushf
ficoms
sbb
adc
cmovge
in
imul
or
adc
push
xor
sbb
fdivl
or
adc
loopne
and
pop
cmp
imul
pop
sub
add
loop
adc
pop
repnz
insb
cmpsb
gs
add
test
lret
lret
std
sub
ficoms
aas
and
out
pop
ret
sbb
adc
sub
sbb
sahf
jmp
mov
fisttpll
push
and
hlt
dec
insb
mov
dec
fnstsw
stc
cli
fstpt
in
xor
scas
adc
or
jo
paddusw
insl
ret
roll
dec
cmpsb
int
cld
pusha
xor
sbb
mov
push
out
add
je
test
test
jl
xor
std
loop
cmp
or
push
adc
push
sbb
fisttpll
push
movsl
xor
jo
add
cmp
invd
xor
push
jg
sbb
pop
call
cmp
popf
dec
sahf
push
popf
mov
mov
adcb
outsb
xor
icebp
iret
adc
mov
rol
test
mov
int
gs
lods
pop
add
add
imul
add
rcll
daa
cmp
dec
clc
and
xchg
cmp
rorb
mov
push
mov
adc
ljmp
int3
jnp
bound
xchg
adc
rol
fdivr
ficoml
lret
aaa
jp
inc
push
xor
lods
mov
xor
addl
cmpsb
fsubrs
xchg
jmp
repz
jg
add
sbb
out
xor
pop
cli
xor
sbb
push
xchg
sub
mov
int3
sarb
pop
sarl
pushf
scas
or
lock
cli
out
popa
ffreep
jnp
sub
lcall
dec
int3
jl
test
pusha
inc
add
hlt
jno
scas
push
mov
out
jbe
or
outsl
inc
addl
jg
addr16
cmpsl
repz
cmpsl
xor
enter
dec
gs
insl
add
ret
icebp
inc
adcl
cmpsb
mov
mov
sbbl
push
dec
jmp
bound
xchg
sub
jmp
sub
mov
div
aaa
call
cmp
xchg
sub
scas
pop
mov
xchg
fstl
decl
add
dec
adc
cmpl
mov
ja
and
jne
cmc
lahf
xor
repz
xchg
cmc
inc
push
and
jbe
push
imul
cmp
test
sbb
sub
cs
xor
jp
mov
pop
hlt
sub
cs
and
adc
add
xor
xor
mov
jg
std
hlt
pop
adc
jl
fcomp
mov
pop
pushf
or
push
push
fisttpll
in
push
jg
aad
addl
and
mov
iret
insl
pop
mov
popa
in
push
lret
insb
inc
cltd
add
or
jmp
aam
int
aad
es
add
push
and
or
rcll
inc
cmp
imul
pop
cmc
testb
jge
out
add
push
repz
inc
pop
bswap
rcrb
cli
push
mov
push
mov
push
sub
push
adc
adc
jns
fadd
into
add
repz
movsl
or
push
out
dec
xchg
mov
adc
mov
cltd
xchg
pop
or
xchg
add
sahf
mov
adc
mov
outsb
add
ja
fwait
enter
jle
add
repnz
mov
and
cmc
bound
add
xor
shlb
mov
add
add
pop
fdivp
cmp
dec
in
aad
out
bound
pusha
xchg
jmp
and
int3
sbb
or
jecxz
or
or
addr16
xchg
mov
scas
into
cltd
call
outsb
dec
sbbl
icebp
imul
mov
idivb
in
inc
cs
cwtl
es
sub
aam
fildl
push
mov
repz
xchg
aaa
mov
cmp
add
dec
push
mov
aas
pop
push
imul
dec
pop
fsubs
fsub
insb
pop
dec
push
jecxz,pt
mov
adc
sar
loop
mov
sbb
cltd
daa
pop
rorb
jp
ret
mov
dec
call
in
shll
mov
adc
jae
pop
call
push
adc
xchg
jo
push
icebp
int
sbb
pop
imul
imul
cs
push
jmp
push
mov
into
gs
push
or
test
stos
xchg
gs
sbb
xor
pop
shll
int
mov
jne
leave
adc
les
xor
sbb
inc
stos
or
add
loopne
mov
xchg
sub
inc
jmp
push
in
push
jmp
jge
push
or
and
mov
add
or
add
les
les
sub
xor
pop
movl
outsb
jl
inc
or
sub
mov
imul
jnp
mov
pusha
fisubrl
clc
clc
xor
outsl
in
enter
adc
inc
imul
inc
xor
ja
or
push
scas
jecxz
jne
xlat
cltd
sahf
inc
mov
adc
test
call
xor
outsl
imul
jae
in
add
or
add
cmpsl
mov
add
adc
cmc
imul
loope
xor
fs
shrl
add
xchg
call
ficompl
lea
imul
xchg
sbb
hlt
inc
mov
pusha
sub
sbb
roll
movsl
adc
add
mov
dec
push
add
mov
dec
sub
inc
scas
mul
jp
or
jle,pt
push
xor
dec
lret
outsb
dec
int
fs
movsl
das
sub
lret
ret
xor
sti
push
dec
clc
mov
inc
xchg
dec
shrb
cmpsl
xor
add
cmp
aad
mov
or
shrb
je
sbb
out
es
test
mov
fnsave
daa
adc
lret
sub
mov
push
pop
mov
mov
lock
imul
inc
jmp
out
cli
in
xchg
fnsave
mov
lret
pop
cmp
aad
les
aam
das
and
dec
fwait
add
xor
loope
adc
iret
subl
movsl
cmp
sub
arpl
add
and
sub
popf
push
mov
mov
out
push
xor
xor
loop
pop
mov
sbb
xchg
mov
cmpsl
sub
sub
mov
insl
imul
jl
cmp
pushf
sbb
mov
sbbb
mov
in
push
int
imul
in
test
jge
sarb
fnsave
repnz
testl
add
adc
mov
dec
mov
mulb
push
mov
pop
mov
add
insb
stc
jle
in
add
mov
call
jge
add
and
inc
cmpsb
lock
cmc
mov
das
xor
or
or
fsubrs
or
adc
out
rolb
je
daa
gs
sub
dec
int3
dec
cmp
insb
xchg
mov
mov
in
push
adc
cs
hlt
stc
rcll
inc
loope
mov
sbb
rolb
adc
andl
xchg
push
loop
scas
shlb
fs
addr16
mov
ja
fprem1
push
in
daa
in
movsb
mov
iret
ror
lods
xor
push
jecxz
nop
cmp
gs
out
and
lret
idivb
cmp
sti
js
xchg
mov
insl
xchg
push
mov
jb
fstp
popl
into
imul
jno
mov
add
fnsave
pushl
inc
frstpm(287
pop
jp
arpl
or
xor
in
cmp
mov
mov
jne
mov
inc
lds
lret
sbb
cmp
outsb
sbb
and
jae
or
and
mov
mov
cmc
mov
or
add
bnd
std
mov
fisubrl
aam
and
mov
aam
pop
mov
inc
sbb
clc
lahf
sub
add
push
adc
in
fists
lods
lods
icebp
out
sbb
add
adc
fld
shll
sysexit
fistps
mov
in
or
xchg
pop
loopne
loop
push
xchg
sub
lret
shrb
jns
or
cmp
cmp
and
cltd
loopne
subb
and
xchg
push
loope
iret
shrl
iret
outsl
in
jns
gs
jle
je
inc
push
aad
shrl
sbb
movb
shl
xchg
into
mov
push
ficompl
lahf
adc
sub
pushl
bound
or
add
cmove
ret
repnz
addr16
bound
mov
out
jmp
xchg
jle
das
mov
leave
sti
xchg
xorb
in
xor
jns
push
cld
pop
or
jns
inc
or
sbb
sahf
dec
jnp
mov
test
scas
sbb
stos
lea
jns
mov
cmpsb
mov
ret
pop
sbb
cmp
add
std
shrl
fs
pop
pop
addb
xor
rcrb
pop
pop
cmp
xor
mov
sbb
test
ja
adc
pop
adc
xchg
call
std
int3
xchg
out
pop
push
scas
cmp
xchg
test
mov
and
outsl
mov
adc
sbb
jns
into
mov
and
inc
bound
sbb
lods
lea
xor
out
movb
add
add
mov
jmp
lret
mov
or
push
xchg
jb
add
loopne
push
lahf
sbb
mov
pop
mov
mov
rorb
mov
mov
fsubr
or
jecxz
xlat
lret
enter
jne
xor
cmp
imul
mov
push
mov
lret
push
fldt
stos
jmp
xor
ljmp
add
mov
jle
xlat
daa
or
out
jecxz
lcall
out
imull
cmpsb
push
mov
lea
ret
xor
dec
jbe
push
inc
pop
addr16
outsb
fidivs
jmp
aas
inc
sar
sti
mov
xchg
cmpsb
jg
inc
dec
pop
xchg
push
sbb
push
and
push
push
outsl
out
xchg
inc
lods
mov
mov
push
mov
outsl
mov
outsl
mov
adc
jmp
ret
repz
gs
je
repz
int3
jae
sub
lea
dec
call
movsl
add
pop
lock
add
loop
and
sbb
mov
jg
mov
and
xor
cmp
aas
fistps
mov
pop
cmpsb
inc
and
loope
es
mov
lea
pusha
ja
cltd
and
adc
fidivl
pushf
xor
xchg
insb
lea
add
add
mov
popf
mov
orb
push
mov
stc
adc
loope
out
mov
pop
inc
daa
mov
daa
xor
addr16
enter
aad
xor
cmp
cmp
test
adc
iret
into
call
jg
lods
push
int
jle
ror
jns
mov
xor
pop
hlt
stc
dec
stc
inc
iret
and
mov
inc
movl
movaps
pop
and
dec
push
add
sbb
xor
sub
jmp
rcr
out
push
movsl
popf
inc
lock
insl
ja
pop
jecxz
pop
jno
push
mov
addr16
jle
dec
pop
enter
sbb
jg
cmp
sbb
push
mov
repnz
fstps
mulb
pop
cmpb
mov
pop
mov
inc
push
scas
push
scas
jnp
mov
into
fistpl
and
mov
pop
add
imul
das
dec
add
jb
test
sub
aad
sbb
xchg
sbb
mov
cmp
xchg
js
inc
lcall
mov
fstpt
xor
sub
popa
xchg
or
dec
enter
jo
push
sub
hlt
mov
mov
enter
jmp
xchg
in
dec
add
add
mov
mov
mov
pusha
sub
xor
xchg
testb
sahf
or
mov
jecxz
pop
add
cmp
xor
inc
loope
fucomi
xchg
outsl
test
outsb
or
or
xor
sbb
sbb
test
xor
or
push
fnstenv
mov
or
outsl
into
sbb
mov
jno
dec
mov
in
lea
xor
daa
inc
ja
das
fists
add
and
ja,pt
js
clc
mov
xor
fnstcw
ds
lock
orl
add
pop
cmp
xchg
or
mov
mov
pop
data16
inc
xor
push
inc
xor
and
mov
sub
ret
in
xor
push
lods
push
cmp
outsl
xchg
pop
pop
sbb
inc
xchg
fimuls
pushf
repz
scas
mov
ss
inc
and
or
adc
pop
call
fs
jg
outsl
cwtl
cmc
aas
lret
clc
cmp
push
pop
push
mov
mov
cmp
sub
leave
dec
sbb
cli
and
in
sbb
insl
sbb
jmp
dec
data16
loopne
jnp
clc
shl
cmp
int
mov
inc
lret
adc
inc
sbb
in
xlat
push
add
nop
mov
dec
std
lock
shrb
lods
es
mov
sbb
dec
pusha
adc
mov
sbb
push
sbb
push
mov
sub
out
cwtl
aam
cwtl
stos
jne
jecxz
popa
iret
popa
pop
aaa
sbbb
insb
xchg
fmuls
dec
adc
jmp
loope
lods
cld
lret
dec
xchg
js
inc
scas
jle
mov
jp
mov
out
lret
cltd
add
test
clc
jmp
mov
mov
inc
aad
or
stos
cltd
aad
repz
stos
repnz
xchg
or
mov
ret
stc
jns
or
pop
scas
ljmp
lcall
sub
aas
out
aaa
xchg
cwtl
mov
into
daa
adc
xor
aaa
adc
pusha
std
sbb
inc
xchg
inc
scas
jg
test
add
shlb
repz
xor
dec
inc
add
dec
and
mov
mov
inc
inc
aaa
jp
jecxz
adc
sub
pop
jecxz
add
inc
shl
mov
mov
push
jl
out
mov
or
lea
or
mov
mov
stos
bound
aad
xchg
cmp
xchg
lods
jp
jo
int3
adc
loop
ja
insl
dec
call
jns
mov
add
push
inc
sub
or
out
xchg
xchg
mov
sbb
gs
dec
out
push
or
jecxz
nop
out
dec
mov
mov
jnp
mov
dec
pop
outsb
ss
mov
add
adc
loop
mov
lahf
movups
mov
sbb
pop
adc
shrb
and
adc
pop
insb
jo
jp
int3
or
jno
pop
cli
in
cld
daa
out
sahf
arpl
insl
add
sbbl
dec
pop
inc
add
jmp
add
cmc
pop
cltd
xchg
je
mov
std
out
and
sbb
fwait
lock
scas
mov
std
test
jl
pop
into
xchg
xor
push
pop
mov
mov
stos
mov
pop
mov
aam
fs
adc
mov
loop
add
loop
aas
les
add
push
rclb
ret
lea
pop
pop
adcl
dec
addr16
aaa
cld
movsl
push
sbb
and
lahf
push
push
push
xchg
sub
and
push
and
ds
xlat
mov
dec
jle
pop
orb
aad
test
ljmp
int3
sti
sbb
and
xchg
cwtl
xchg
jne
push
and
jne
aas
repz
and
jp
lret
or
add
jl
ret
popa
push
gs
mov
mov
push
fmul
ror
mov
and
ljmp
out
sub
add
mov
jg
push
jo
cmp
dec
out
and
sbb
xor
mov
xor
mov
movsl
jno
add
