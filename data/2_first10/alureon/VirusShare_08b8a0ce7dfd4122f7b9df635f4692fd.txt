mov
push
mov
cmpl
jne
push
push
pushl
call
pushl
call
mov
test
jne
push
call
pop
pushl
call
jmp
movl
mov
pop
jmp
push
call
pop
xor
pop
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
pop
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
mov
push
push
call
add
mov
mov
cmp
jne
orl
mov
jmp
mov
cmpw
jne
add
mov
mov
cmp
je
cmp
jne
cmpw
jne
add
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpw
jbe
add
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
mov
push
push
call
mov
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
mov
push
mov
sub
push
push
push
push
xor
push
movl
mov
call
cmp
mov
je
mov
push
call
cmpl
mov
jne
lea
push
mov
push
pushl
call
push
call
test
jne
cmp
je
pushl
call
mov
cmp
je
push
pushl
call
mov
pushl
call
cmp
je
mov
pushl
mov
mov
mov
mov
mov
call
jmp
push
call
cmp
mov
je
mov
dec
dec
je
dec
dec
je
mov
push
call
push
mov
call
mov
jmp
mov
mov
sub
mov
sub
inc
inc
jmp
pushl
mov
pushl
lea
push
push
push
call
pushl
mov
pushl
call
push
mov
lea
push
push
add
push
pushl
call
cmpl
je
pushl
pushl
call
mov
incl
cmp
jle
mov
mov
mov
lea
push
mov
cltd
pop
idiv
push
pop
push
add
mov
cltd
idiv
add
call
xor
cmp
mov
je
push
push
push
push
call
push
lea
push
lea
push
pushl
call
push
push
push
push
lea
push
call
mov
dec
dec
je
dec
dec
je
push
pushl
call
push
push
push
pushl
call
jmp
xor
push
push
push
push
lea
push
pushl
pushl
call
jmp
push
push
push
lea
push
pushl
pushl
call
pushl
mov
sub
mov
mov
push
push
call
pushl
mov
mov
sub
push
push
call
pushl
mov
movl
mov
mov
mov
mov
call
andl
mov
pushl
push
call
cmpl
je
xor
pushl
call
pushl
call
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
incl
dec
jne
pushl
lea
pushl
call
lea
call
lea
call
decl
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
test
jne
inc
leave
ret
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
mov
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
leave
ret
mov
push
mov
sub
mov
push
push
mov
push
mov
test
movl
je
cmpl
jne
pushl
call
mov
lea
jmp
mov
pushl
call
pushl
mov
call
mov
add
mov
lea
mov
test
mov
jne
cmp
jne
movl
pushl
push
call
test
mov
jne
push
pop
jmp
cmpl
jne
andw
andw
jmp
mov
mov
test
mov
mov
je
mov
jmp
mov
cmpl
jne
pushl
jmp
mov
pushl
mov
push
call
push
call
lea
mov
movw
pushl
inc
inc
push
call
push
call
lea
mov
mov
test
mov
jne
mov
andw
pushl
push
push
push
pushl
pushl
call
pushl
mov
call
mov
pop
pop
pop
leave
ret
push
mov
push
cmp
jb
push
lea
xor
movl
test
je
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
not
imul
xor
mov
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
push
push
movl
mov
mov
lea
push
call
dec
jne
testl
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
mov
test
jne
call
mov
pushl
neg
sbb
and
cmpl
jne
push
push
call
jmp
pushl
push
push
call
pop
ret
push
mov
sub
mov
push
push
push
mov
movl
test
je
mov
mov
jmp
push
call
mov
mov
mov
push
push
push
push
xor
push
inc
push
call
mov
mov
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
push
call
mov
push
push
push
push
call
mov
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
jmp
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
mov
imul
sub
push
mov
mov
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
mov
mov
ror
xor
imul
add
mov
divl
mov
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
je
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
push
push
xor
push
mov
call
mov
call
mov
pushl
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
lea
mov
shr
rep
mov
and
rep
mov
pushl
call
mov
andl
mov
pushl
call
mov
mov
mov
mov
mov
mov
lea
mov
shr
mov
rep
mov
and
rep
mov
mov
negl
push
lea
push
call
mov
negl
mov
pushl
call
test
mov
jne
mov
mov
mov
imul
cmp
jne
xor
inc
jmp
xor
push
call
pop
mov
pop
pop
leave
ret
mov
push
mov
push
mov
movb
mov
cmpb
jne
pushl
call
xor
inc
jmp
andl
push
mov
push
mov
push
push
lea
push
call
mov
xor
cmp
mov
je
cmp
jne
cmp
jne
push
call
push
lea
pop
xor
cmp
jne
cmp
jne
cmp
jne
lea
mov
movsl
movsl
movsl
add
dec
jne
xor
inc
pop
pop
pop
leave
ret
cmp
jne
mov
push
lea
push
call
test
je
cmpb
je
pushl
push
push
call
inc
add
cmp
jl
jmp
cmpl
jne
push
pushl
call
jmp
mov
push
push
call
test
je
push
push
call
test
jne
orl
jmp
push
push
call
test
jne
orl
incl
cmpl
jl
jmp
xor
push
push
push
push
push
push
call
xor
jmp
push
ret
movaps
pop
scas
xchg
sar
mov
int3
fdivl
mov
jecxz
and
mov
nop
jnp
out
cmp
pop
imul
aad
lods
mov
std
jne
mov
dec
inc
in
cmp
out
adc
movaps
pop
scas
and
push
aas
add
fildll
fdivl
mov
jecxz
and
mov
pop
cmp
sub
and
mov
insb
add
cmp
bound
mov
stos
mov
loop
dec
and
add
add
insl
inc
jecxz
sub
in
enter
jle
jg
pop
jp
mov
cld
adc
push
dec
or
icebp
pop
movsl
repnz
inc
in
or
push
jae
push
outsb
andb
mov
jb
inc
sub
push
mov
cmp
repz
add
cmp
push
mov
lods
cwtl
fidivrl
jae
mov
and
nop
jno
and
mov
dec
push
cwtl
mov
push
sbb
dec
mov
pusha
push
mov
pusha
imulb
pop
lcall
out
cld
jp
aaa
mov
cs
outsl
push
mov
or
push
loopne
mov
loopne
sbb
mov
xchg
dec
repz
xchg
push
xchg
js
nop
jge
dec
jge
bound
fsubs
sub
add
idiv
push
mov
sub
dec
std
cltd
dec
dec
mov
ja
xor
cltd
mov
imul
mov
pop
fsubrs
push
cmp
ljmp
jmp
xchg
jmp
sbb
push
sbbl
mov
imul
icebp
fimull
and
stos
lods
push
jl
ds
mov
sub
pop
fwait
rorb
lret
rcrl
sbb
push
into
push
popf
js
fiadds
icebp
jo
xchg
mov
add
ss
jb
push
neg
inc
ds
push
testl
sub
xlat
push
ret
mov
adc
and
mov
xchg
fwait
js
pop
stos
mov
xchg
mov
mov
sbb
addr16
into
sti
cld
fcmovnbe
in
dec
bound
push
dec
into
test
jp
sbb
scas
fnsave
cmp
insb
jmp
or
jo
add
dec
fisubrs
dec
or
aas
leave
inc
and
cmp
hlt
insb
jle
mov
loopne
jecxz
scas
int3
adc
jecxz
les
jg
bound
sub
data16
test
dec
sbb
jb
pop
ds
push
lret
dec
inc
adc
daa
and
ret
popf
in
or
push
sahf
nop
xchg
into
cld
pop
stos
faddp
scas
cli
mov
je
xchg
lret
add
lret
mov
inc
in
and
jecxz
inc
imul
dec
or
fsts
stos
add
sub
mov
clc
fstpl
push
lods
dec
popa
xchg
lock
sbb
stos
or
je
roll
sbb
adc
aas
inc
pop
xchg
aam
jb
daa
mov
add
inc
aad
add
fdivs
arpl
enter
popa
sbbb
pop
jmp
xchg
mov
pop
imul
shlb
push
inc
cmp
inc
ret
rcr
sub
xchg
xor
pop
cmpb
popa
jno
fs
mov
into
pop
mov
subl
and
jecxz
aas
and
inc
adc
daa
dec
mov
loope
lea
movsl
pop
mov
push
add
test
jb
adc
mov
and
pop
enter
jbe
add
cltd
shrl
call
push
in
inc
incl
or
adc
add
enter
mov
add
cmp
sub
imul
and
int
pop
pusha
ds
insl
mov
sub
mov
inc
fwait
stc
fucom
sub
mov
enter
mulb
mov
and
and
and
andl
dec
shlb
into
lods
adc
mov
push
adc
mov
add
cs
das
dec
in
dec
jg
js
int3
pop
push
pop
push
sbb
test
xchg
int3
fsts
cmp
dec
push
dec
xor
add
pop
pop
and
std
mov
hlt
int3
les
mov
mov
sub
push
mov
and
into
mov
repnz
add
stc
out
jne
adcb
imul
ficoms
jle
mov
stos
push
xchg
leave
test
ljmp
fwait
scas
mov
psubq
testb
mov
popf
push
mov
sub
fcom
sti
mov
arpl
int3
pop
loopne
mov
out
mov
mov
cmpsb
insl
jle
test
jns
andb
shr
fwait
into
mov
and
add
jo
mov
mov
jb
loop
inc
jno
mov
inc
pusha
lods
jnp
out
sbb
jo
xchg
cwtl
push
int
jl
adc
and
outsb
clc
aaa
mov
dec
or
add
mov
mov
pushf
push
sbb
out
fnstsw
adc
in
sti
mov
sub
in
leave
test
sub
into
xchg
add
out
leave
mov
jnp
dec
add
sub
insl
add
add
cmp
aad
lods
mov
subb
push
addr16
xchg
faddl
ss
pop
pop
xchg
jmp
xchg
pop
sbb
in
mov
pushf
mov
sub
adc
pop
dec
mov
xor
mov
stc
and
adc
hlt
fs
aam
push
cld
pop
lods
mov
movsl
aaa
sub
adc
mov
mov
add
gs
lahf
sbb
sbbb
sub
mov
cmp
ficoms
cmp
pop
add
and
outsl
fdivrs
daa
xchg
jecxz
xor
push
cs
lret
imul
ret
in
push
out
cmp
mov
aad
arpl
xchg
sti
add
mov
fcos
or
xchg
mov
add
idivl
fs
stc
andw
inc
or
jns
and
jae
js
ds
push
imull
test
sub
xchg
imul
sbb
sarl
mov
clc
insl
popa
outsb
or
xlat
inc
push
cmc
aas
jb
push
clc
jne
inc
xor
inc
jmp
and
sahf
lods
jmp
cmpsl
std
cmp
sahf
and
push
popa
or
or
add
jmp
jnp
int
lcall
fwait
sub
lahf
leave
jl
jne
jge
leave
sub
push
add
outsb
subl
jge
nop
std
inc
jmp
sbb
shll
adc
mov
mov
aam
fnstcw
push
jae
inc
sbb
xchg
push
lods
dec
mov
add
xchg
in
or
int3
xchg
fwait
add
add
xchg
cmc
sub
mov
loop
xchg
into
sbb
insb
insl
les
adc
mov
roll
pop
mov
push
push
aas
jecxz
mov
jl
dec
sub
push
shlb
add
pop
adc
and
js
pop
orb
test
sub
cmpsl
sarl
jo
outsb
jp
jae
lret
loop
in
and
and
inc
test
pushf
es
gs
setl
addr16
call
fnstsw
pushf
iret
xchg
mov
adc
jbe
popf
inc
jge
js
xchg
push
dec
inc
lret
lea
dec
sbb
cmc
jp
dec
out
out
imul
inc
inc
int
aas
inc
dec
out
nop
popf
push
pop
hlt
das
cmp
mov
sbb
outsb
outsl
arpl
hlt
cmp
inc
add
add
sbb
out
mov
test
sub
cld
mov
aas
xchg
mov
stc
cmc
das
test
xor
mov
cli
jae
jp
call
push
xchg
adc
inc
cltd
sti
mov
jge
or
std
lods
idivb
mov
push
stos
in
push
adc
jl
daa
sub
mov
xchg
das
ljmp
add
add
iret
sbb
outsl
or
mov
repz
and
xlat
fmull
push
std
fisttpl
mov
xor
mov
sbb
push
filds
mov
divb
mov
sbb
inc
stos
inc
or
fsubrs
pop
push
stos
lds
test
js
fstpl
xchg
xor
pop
call
test
mov
inc
mov
mov
test
add
fwait
add
add
cli
and
inc
add
mov
xor
outsb
fwait
and
pushf
cli
cmp
test
fnstcw
stos
lahf
in
lcall
pop
iret
mov
mov
aas
or
rcrb
adc
sbb
cmp
nop
inc
out
jl
and
gs
shlb
mov
pop
pushf
pop
ret
std
jge
mov
bound
pop
jno
outsb
jge
in
sbb
sbb
mov
sti
daa
mov
pushf
sti
stc
mov
cmc
ror
subb
push
sub
push
adc
mov
movsb
in
pop
jbe
mov
scas
push
test
xchg
das
xor
dec
jg
push
out
outsb
pop
mov
or
sbb
or
loopne
aaa
push
sbb
mov
mov
lods
frstor
aaa
imul
jne
xor
in
iret
xchg
mov
cmp
sub
fdivrs
pop
xor
push
icebp
mov
pushf
pop
xchg
jle
mov
xchg
call
dec
push
cld
fucom
ficoms
cmpb
loope
mov
rorl
les
shrl
ljmp
adc
pop
dec
out
lret
xor
lcall
arpl
add
add
add
adc
lock
scas
xorb
add
and
mov
jmp
push
pop
lcall
mov
ja
inc
ret
mov
cmp
les
mov
imul
inc
fdiv
pop
mov
test
mov
nop
inc
sub
arpl
add
mov
pop
test
in
outsb
ds
movb
aaa
xor
and
movsl
pop
lock
dec
and
adc
fnstenv
rep
scas
xchg
in
out
ds
add
mov
in
out
xchg
push
ret
jb
popf
fisubl
ss
int3
cltd
xchg
lret
xor
hlt
out
rorb
lea
mov
enter
test
in
and
jl
sbb
dec
mov
mov
sbb
aaa
call
mov
fwait
aad
inc
mov
movsl
int
lods
aad
test
push
jp
xor
mov
enter
sub
mov
xchg
test
or
add
inc
addb
jno
fld1
mov
sarb
and
and
lcall
lock
sti
sahf
aas
mov
icebp
hlt
xorb
cli
mov
add
addl
lock
add
and
mov
push
push
push
pop
in
jnp
lahf
xor
inc
push
bound
ljmp
add
nop
push
push
dec
mov
cwtl
sub
stc
addr16
mov
stc
in
ret
lods
sub
sbb
cld
add
xor
mov
xchg
aam
add
sub
andl
pop
mov
mov
in
fs
pop
jl
and
movb
jl
aad
xorl
mov
ret
sbb
pop
stos
sub
mov
mov
jb
inc
add
call
push
inc
cmp
inc
xor
pop
pop
push
push
mov
jno
test
gs
lock
loopne
inc
pop
add
xor
call
into
and
sub
mov
sti
ljmp
xor
int3
or
std
mov
lcall
je
add
inc
and
adc
mov
loopne
xchg
iret
std
push
mov
dec
mov
push
leave
daa
push
add
pop
loopew
and
fisttpl
sub
push
add
je
cwtl
pop
shl
sarl
mov
mov
stos
mov
arpl
arpl
inc
xchg
lds
sub
arpl
cmc
pusha
cmpsb
push
pop
aam
inc
int3
jge
cmp
cmp
sahf
dec
mov
fs
xchg
imul
insb
mov
push
xor
cmp
pop
cli
dec
sbb
or
shlb
arpl
mov
repz
sahf
add
add
gs
imull
push
sbbl
inc
jecxz
xor
cmc
mov
pop
aaa
addr16
lea
das
xchg
in
cmpb
imull
xchg
cs
pop
sarl
pop
data16
iret
in
stc
daa
sahf
adc
ss
mov
call
push
out
in
mov
das
dec
pop
pop
insb
push
popa
icebp
pop
stos
xchg
mov
lret
nop
std
inc
xchg
push
andl
push
stc
imul
int
add
add
dec
popa
xlat
dec
lea
jno
push
jge
adc
adc
shll
fsubs
push
fcompl
mov
mov
aad
rorb
mov
out
fcom
pusha
dec
jl
sbb
fstl
push
dec
dec
int3
mov
and
or
jmp
mov
mov
cltd
fdivrp
mov
aaa
or
fwait
jmp
jmp
cmp
jbe
push
pop
and
add
cmp
ljmpw
xorl
stos
xchg
rcl
fwait
sub
xchg
push
popl
sbb
sub
mov
adc
fisttpll
scas
inc
jg
lret
xchg
aas
jae
inc
jo
jne
mov
jnp
scas
rorb
out
cmp
sbb
in
lcall
add
add
push
jno
jge
pop
icebp
lahf
pop
inc
scas
inc
pop
cmp
xor
stc
xchg
add
lret
fldcw
jecxz
pop
shrb
ret
aaa
pushf
cmp
iret
inc
xor
frstor
mov
pop
and
jnp
xchg
test
xchg
imul
hlt
and
push
jae
insl
mov
mov
add
add
in
sub
iret
cltd
pushf
clc
sahf
jns
mov
or
and
fs
sub
mov
xor
sub
mov
pop
fcoml
pop
cmp
pushl
test
cmp
loopne
rclb
fdivs
mov
sub
add
loop
xor
pop
add
mov
adc
dec
test
aas
and
inc
hlt
xor
ja
test
push
push
hlt
jns
xchg
sbbb
ds
mov
push
test
enter
adc
cli
popf
lret
icebp
insl
jmp
xor
jge
pop
inc
pop
sbb
cmp
addr16
xor
and
or
xchg
dec
out
xchg
das
jp
add
pop
arpl
jmp
jecxz
mov
orl
xor
sahf
mov
add
out
out
movsb
aam
rclb
scas
in
lret
cmpb
lret
out
mov
ss
fistpl
je
or
mov
or
cmp
mov
and
jne
jecxz
pop
and
mov
add
add
add
aas
aas
inc
idivl
mov
dec
sarl
sub
fadds
jle
nop
dec
js
int3
repz
push
sbb
xchg
lock
subl
shlb
leave
xor
xchg
or
push
rep
lods
xor
rcrl
sbbl
jno
loopne
mov
jne
xchg
mov
pop
cmpsb
inc
pop
add
add
push
jmp
mov
pop
pop
rolb
push
cwtl
xchg
jg
sbb
adcb
xchg
adc
xor
nop
and
cmp
sbb
mov
cmp
ret
push
or
test
rcrb
mov
push
lcall
and
insb
xchg
imul
sub
fistps
dec
and
add
mov
adc
pop
incl
cli
sbb
cmp
lea
dec
gs
hlt
aas
into
sbb
lods
mov
cltd
lock
dec
or
cmp
sub
push
addb
jno
add
push
mov
stc
jae
enter
and
or
int
or
fidivs
jae
and
pop
sub
jnp
xchg
scas
sub
fsts
or
or
fwait
mov
bound
add
ficoms
loopne
adc
imull
mov
jnp
lea
movsl
xor
popf
aas
aaa
hlt
aad
xchg
inc
dec
xor
pop
pop
xor
inc
ficompl
sahf
stos
enter
cmp
mov
jbe
outsb
rcrl
add
shlb
xlat
loope
adc
push
dec
dec
ja
in
cmp
sub
sub
cld
pop
inc
loopne
xlat
das
sarb
push
jo
cmp
stos
mov
ljmp
push
mov
scas
dec
mov
repnz
add
xchg
xchg
mov
or
jns
push
test
lods
dec
pop
lret
lea
pop
popf
mov
sub
dec
lods
clc
movb
cmp
and
insl
pop
pusha
push
rclb
clc
push
jae
push
cmp
add
add
xor
xor
jp
scas
xchg
pop
sub
inc
and
in
ds
jo
cmp
mov
loop
inc
scas
pop
test
and
jecxz
push
jmp
mov
adc
stc
stc
cltd
push
push
data16
lret
loope
out
movsl
sbb
mov
mov
cld
stc
mov
add
imul
adc
sbb
mov
add
sbb
mov
out
pop
int
dec
dec
jnp
fiadds
jne
loop
shrl
mov
mov
mov
mov
ja
mov
xchg
sub
xor
cmp
mov
clc
mov
sub
dec
sbb
xor
cld
push
or
push
inc
popf
lds
iret
add
add
add
nop
dec
xor
fnstsw
sub
jae
and
pushf
mov
aam
mov
jnp
ljmp
jecxz
popa
cmp
scas
hlt
push
mov
clc
icebp
xor
sbb
icebp
int3
std
push
pusha
scas
mov
pop
push
cmp
xor
add
xchg
cmp
pop
cmpsb
and
xchg
mov
pop
mov
rcr
pop
out
adc
add
mov
mov
lods
jno
push
loope
and
xor
dec
cli
jbe
dec
gs
test
xchg
jmp
inc
cwtl
scas
dec
jnp
mov
call
pop
mov
mov
cmpsb
dec
rorb
int
ljmp
out
inc
mov
dec
iret
enter
jo
cmp
sub
ret
ljmp
jmp
scas
daa
sarl
lea
inc
inc
jle
jmp
xchg
mov
ljmp
push
or
inc
into
icebp
or
into
lea
jmp
js
push
pop
out
lahf
neg
outsb
cltd
dec
das
push
push
test
lret
cmp
cmpsl
out
cwtl
add
add
mov
sbb
jne
sub
jmp
push
dec
mov
int
push
movl
and
inc
mov
lret
sti
outsl
insb
pusha
jne
in
aad
sub
lret
jmp
fildl
adc
mov
in
jne
cltd
js
xor
aam
xchg
dec
repz
fildll
std
sbb
mov
push
mov
or
rolb
dec
dec
push
pop
mov
ret
aad
xchg
sbb
lds
cltd
lods
push
jbe
and
cmc
int
cmpl
mov
xchg
roll
xchg
push
xchg
push
call
mov
xor
les
ret
and
jnp
data16
mov
call
add
add
pop
mov
aaa
pop
xlat
pop
xor
mov
repz
sub
je
inc
xor
jne
ja
negb
dec
sbb
sub
in
bound
in
cwtl
sbb
movsb
lea
dec
jg
sbb
cmp
fs
test
mov
cmc
repz
js
in
out
das
pop
loop
cs
lret
and
cmpsb
stos
inc
inc
cltd
jmp
into
cmp
jns
les
dec
lret
sbbl
jmp
int3
popf
movsl
dec
mov
jb
mov
mov
sub
mov
insb
sub
push
cmp
xor
adc
sub
bound
fdiv
adc
push
adc
test
inc
mov
dec
xor
jne
jp
fst
outsb
and
in
rcl
fimuls
or
add
in
dec
aas
dec
dec
aas
mov
cwtl
mov
push
js
aaa
jmp
xchg
test
movsb
xchg
mov
in
ljmp
faddl
shlb
inc
test
fs
mov
pushf
xor
sub
mov
addb
inc
xchg
hlt
sahf
jbe
sbb
push
in
or
mov
sbbl
add
sub
sub
ret
cmpsl
inc
jg
add
jp
lods
insb
inc
mov
inc
mov
fsubp
adc
jnp
dec
pop
leave
mov
xchg
cmpsb
lahf
orb
rolb
arpl
jmp
daa
mov
loop
es
adc
enter
cmpsb
js
loopne
out
add
lret
add
mov
add
or
lea
jmp
mov
mov
sub
into
fdivr
adc
jb
clc
fsubrl
mov
add
lret
mov
jno
pop
loopne
loop
pop
sbb
ss
and
pop
jnp
xchg
xorl
jo
push
out
ja
cmpsl
fcoml
adc
pop
enter
mov
mov
pop
imul
filds
mov
ljmp
stos
xchg
mov
icebp
fdivrl
lock
out
ss
mov
aas
aad
es
shll
stos
xchg
cld
into
pusha
mov
add
add
pushf
jbe
jno
dec
cmp
out
jne
inc
mov
loopne
rcrl
mov
shll
insl
sbb
sbb
xchg
lcall
mov
sahf
jmp
xchg
int3
int3
pop
cmp
int3
daa
xchg
and
or
mov
lods
call
pop
mov
cmpsb
adc
arpl
cmp
pop
dec
mov
add
add
pop
pop
jno
inc
filds
cmpsl
test
mov
aaa
mov
adc
cwtl
mov
leave
popf
cli
jge
xchg
lock
into
adc
or
pop
sub
push
mov
ficoml
lahf
scas
es
dec
xchg
mov
pop
sbb
cmc
mov
pop
inc
sarb
push
popf
lock
aam
push
jnp
xchg
in
movsl
hlt
inc
insl
enter
lds
orl
pop
repz
or
test
add
aad
jo
dec
or
mov
xchg
fstpt
roll
jb
ds
or
inc
inc
push
repnz
lea
cmp
adc
dec
loope
les
push
mov
out
adc
ret
fucomi
es
and
adc
fists
and
shlb
scas
or
addr16
outsb
and
ds
pop
jp
pop
ss
cs
jmp
imul
jmp
orb
push
dec
imul
add
outsl
js
cmpsb
push
out
aam
jno
cltd
out
cmp
sbb
test
dec
jmp
out
fwait
imul
and
and
aaa
mov
sbb
cmpsl
nop
sbb
bound
js
or
les
add
push
ror
sahf
pop
test
mov
pop
mov
stc
ds
cmpsb
fldl
add
add
data16
sbb
out
mov
and
aaa
clts
or
pop
mov
inc
mov
sub
loope
xchg
or
push
mov
inc
mov
xchg
aam
into
sbb
loope
js
sahf
pop
xchg
push
loop
loop
add
fs
or
mov
jb
into
sbb
sub
push
imul
call
int3
add
add
and
mov
stos
insb
jg
mov
mov
jp
addr16
fcmovnbe
pop
adc
add
ljmp
jmp
inc
ret
inc
mov
push
mov
hlt
xchg
jnp
scas
xor
aam
fsts
bound
cmpsb
int3
xor
ds
jp
or
jle
lret
xchg
out
pop
jecxz
jae
lea
add
inc
mov
mov
jl
xchg
or
push
clc
adc
cmp
ret
pop
lea
cmp
hlt
cs
mov
stos
inc
nop
scas
ja
mov
cld
sbb
mov
mov
inc
shlb
les
and
loope
pop
out
iret
push
jns
ljmp
jge
add
or
xor
jnp
repnz
add
add
outsb
scas
sub
fcomps
arpl
clc
mov
rcll
mov
icebp
pop
test
in
out
fdivl
mov
mov
fisttps
mov
xlat
mov
sub
and
fwait
int
jp
ret
pop
add
iret
ss
inc
and
sti
popf
mov
and
add
xor
jnp
mov
add
add
mov
lcall
adc
out
test
push
dec
and
pop
imul
movsl
in
shlb
fsubl
or
push
push
xlat
dec
rcrl
dec
hlt
pop
add
movsb
or
nop
pop
cmpb
in
insl
and
rcl
xchg
mov
xchg
jecxz
icebp
fidivs
xrelease
adc
and
add
add
jns
xor
push
inc
cs
mov
pop
je
xchg
pop
int3
cmpb
xlat
cmp
jmp
out
cmp
fs
repz
add
cmp
xchg
mov
or
adc
or
sbb
mov
cmc
stos
test
jo
in
adc
cmp
jne
jo
icebp
inc
fstpl
cmp
mov
sbb
pop
addr16
divb
lock
xor
clc
imul
jns
add
add
jo
sub
pop
sarb
adc
daa
movb
jns
push
sbb
aas
add
aas
test
pop
xchg
fs
adc
nop
push
repnz
fdivrl
mov
iret
push
pop
sbb
jecxz
cli
mov
jo
ficompl
or
pop
in
test
fadds
rep
enter
dec
inc
mov
aas
inc
insb
cmc
test
push
cmc
xor
xchg
cmp
xchg
or
mov
and
jge
mov
sub
js
fistps
and
pushf
xchg
sub
add
ret
imul
rcr
mov
leave
and
dec
in
cs
cmpsl
dec
out
xlat
popa
add
popa
into
js
stos
adc
or
inc
jno
sbb
inc
lds
int
xchg
pop
lock
jno
dec
lahf
clc
mov
filds
ja
cmpsl
mov
or
sub
add
popf
mov
ds
xchg
jge
addr16
ljmp
bound
xor
and
dec
mov
inc
or
leave
insb
fimuls
lahf
add
int3
push
and
jg
pop
xchg
adc
mov
stos
inc
repnz
sbb
popf
shrl
jb
push
outsl
jg
ret
mov
add
add
test
push
pop
fcoml
dec
sub
lds
out
in
xlat
add
test
dec
cmc
das
fistpll
sub
cmp
dec
movsl
push
push
and
in
cwtl
setge
inc
cld
xchg
jge
pop
out
fistps
lods
push
inc
mov
xchg
or
pop
mov
add
popa
adc
dec
sbb
shlb
and
in
mov
mov
mov
mov
lahf
movl
arpl
loop
mov
mov
mov
movsl
fwait
repnz
repz
add
sbb
cwtl
or
mov
mov
jecxz
js
cld
lret
lods
sub
push
sbb
popf
add
scas
pop
cli
push
jg
or
sahf
sub
sub
neg
call
push
es
fucomi
xchg
movsl
dec
repz
xchg
xor
xchg
add
loope
inc
or
and
or
add
inc
cmp
fbld
aam
jle
pop
sub
es
mov
cmp
cmp
push
lock
xchg
push
xchg
add
jo
cltd
xor
flds
out
cmp
fistps
mov
jmp
movsl
aaa
aas
jb
jecxz
jne
xor
insl
push
insl
jmp
mov
gs
sti
inc
loopne
push
mov
mov
pop
mov
ret
sub
push
leave
call
cmpsb
je
pop
int
leave
and
insl
lea
add
and
repz
enter
test
ja
cwtd
or
and
dec
mov
dec
jp
insb
pop
add
aaa
and
jg
dec
aaa
push
lds
addl
push
and
adc
dec
pop
cmp
sub
push
or
pop
adc
xor
xchg
add
sub
or
mov
mov
and
fldl
jl
and
cwtl
imul
or
inc
pusha
jbe
push
mov
movsl
pop
rclb
pop
notb
adc
jle
in
mov
or
orb
jb
push
hlt
push
lret
lret
mov
lcall
mov
in
es
and
or
sahf
inc
xlat
add
add
xor
pop
std
jnp
popf
es
cmp
jmp
lcall
push
mov
in
push
out
mov
mov
repz
test
mov
mulb
pop
mov
rorl
inc
fimuls
lds
inc
cwtl
lock
mov
mov
ret
mov
dec
ret
xor
inc
jae
xchg
xchg
es
dec
push
sub
mov
mov
fildl
add
add
mov
lods
dec
mov
push
pop
test
adc
cmpsl
pop
in
shll
cli
pushf
and
in
and
in
add
cmp
lahf
pop
or
xchg
imul
xchg
mov
loopne
int
test
in
push
inc
add
adc
xchg
cmp
popl
xor
fcomps
sbb
add
add
les
jle
outsl
push
or
inc
push
pop
xchg
scas
and
es
pop
insb
jbe
jbe
pop
lahf
jnp
inc
mov
andl
repz
test
mov
stos
jno
mov
test
push
imul
push
push
sbb
in
into
inc
stos
add
out
adc
ss
mov
lock
cmp
pop
lret
test
xlat
xor
dec
and
cmp
sti
mov
sbb
and
jne
mov
test
stos
add
imull
push
ds
iret
xor
inc
xor
mov
mov
popa
inc
xchg
cmpl
or
aad
daa
dec
js
and
adc
movsb
pop
jg
jno
enter
and
dec
mov
adc
sbb
insl
lcall
xchg
fwait
mov
lock
mov
inc
push
cmc
push
jo
gs
mov
add
sbb
mov
sbb
mov
push
and
jno
push
adc
fwait
orl
dec
sti
stc
sbb
pop
popa
jecxz
mov
repz
loopne
xchg
insl
jno
stos
mov
negl
mov
dec
rcll
enter
loope
mov
insl
sbb
mov
shll
stos
adc
or
adc
add
pop
js
or
push
dec
loopne
inc
aad
bound
xchg
add
jae
inc
adc
je
js
les
testb
dec
mov
stos
jne
into
mov
fcompl
stos
pop
insl
cs
cli
jp
push
mov
jno
sub
adc
xlat
jecxz
loopne
out
add
add
aas
adc
lahf
push
push
push
pop
mov
pusha
sahf
sub
pop
inc
xchg
cmpsl
lods
movsl
push
nop
xor
push
lahf
jae
sub
jno
out
movsb
dec
mov
sub
aad
dec
lahf
popf
lea
add
lods
mov
adc
fs
movsb
jno
jmp
xchg
cltd
and
mov
and
sbb
enter
xor
pop
cltd
fistpl
imul
int3
ficoms
movsl
cmp
jae
add
xchg
add
cli
pusha
sub
cmp
test
movsl
xor
inc
jae
mov
cmp
add
cmp
mov
mov
mov
cld
mov
popa
xor
stos
push
push
pop
mov
lret
cs
jp
push
sbb
addr16
fstps
cltd
cmc
adc
addl
pop
mov
sbb
add
xchg
mov
fiadds
jecxz
sub
lods
arpl
adc
sarl
and
push
adc
ror
leave
dec
loopne
out
test
sahf
negb
mov
rcrb
mov
or
pop
adc
inc
jae
mov
gs
lds
push
fidivl
or
adcb
push
incb
push
ss
inc
imul
add
pop
mov
xor
pushl
push
jno
cmpsb
sahf
negb
fmull
jno
pop
inc
lea
xor
xchg
in
dec
aas
sub
jle
jnp
sub
jae
add
cmp
sub
pop
cli
mov
repnz
xor
data16
fsubl
sbb
cmp
fnstcw
sahf
test
pop
pop
lahf
andw
