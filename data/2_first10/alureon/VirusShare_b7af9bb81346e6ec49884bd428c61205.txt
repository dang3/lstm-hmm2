mov
mov
scas
adc
loop
sti
jmp
or
cmpsb
clc
fmull
fldt
add
push
jbe
jle
call
pop
cmpsb
repz
fsubrs
incb
mov
lret
mov
gs
mov
stos
loope
jl
mov
fwait
pusha
pop
outsl
or
pushf
js
add
faddl
add
pop
sahf
in
or
push
stc
cmp
push
lods
js
adc
mov
dec
or
dec
dec
fs
movsb
dec
sub
lret
out
jmp
out
adc
aad
insb
mov
fadd
xor
lock
mov
icebp
cmpb
je
imul
sbb
clc
pop
cltd
fldenv
inc
test
shl
fnstenv
cmp
in
or
cld
and
sbb
movsb
mov
mov
into
inc
in
daa
lret
xor
or
popf
mov
mov
insl
enter
shll
lret
stos
jns
rolb
push
cs
dec
pusha
dec
call
insb
pop
add
imul
lods
and
test
mov
and
mov
movsl
mov
movb
dec
and
cmp
xchg
cwtl
ffree
pop
ja
adc
stos
sbb
mov
xchg
lods
mov
add
jne
mov
adc
ss
and
sub
xchg
lahf
iret
mov
fstpl
inc
loop
test
pop
es
stc
in
xchg
pop
loope
jmp
xchg
jle
sti
push
aas
clc
in
adc
test
arpl
dec
int3
loop
jg
imul
pop
stos
jb
jnp
sti
fistpll
mov
xor
mov
xor
jbe
shrl
orl
push
xchg
xchg
cmp
cmp
rcl
add
ds
imul
push
fnstenv
push
pop
mov
add
icebp
xor
jge
adc
out
popf
sarb
je
jg
xorl
jo
ljmp
sub
or
rcrb
and
sbb
pop
pop
icebp
rorl
scas
sub
std
mov
call
gs
outsb
xor
cmpsl
push
arpl
and
fisubrs
pushf
ss
in
sbb
cwtl
js
or
pushf
out
icebp
fsts
nop
loope
xchg
mov
cmp
fadd
dec
fstpt
cmc
or
add
sub
xor
aad
sub
and
pop
ss
mov
jno
sub
aad
pop
jmp
jb
cs
mov
sub
stos
lds
mov
pop
test
mov
fsub
or
cltd
nop
test
aas
sar
add
fsubrl
inc
dec
xor
gs
out
sbb
lock
or
mov
loopne
imul
nop
in
sub
jnp
push
fldenv
jb
addr16
insl
cmc
loope
jg
mov
xchg
dec
push
jae
lods
xor
jnp
jo
fwait
inc
sbb
out
mov
shll
pop
cmp
movsb
int3
mull
inc
or
movsb
leave
sub
outsl
mov
movsb
xor
iret
je
pop
inc
nop
and
jle
cmc
and
jmp
mov
mull
std
dec
mov
les
cwtl
or
int3
jl
mov
jne
dec
in
rcrb
adc
data16
pop
jnp
js
push
and
scas
xchg
sub
adcb
sbb
lea
mov
xchg
repnz
sti
push
enter
jo
in
rcrb
loope
jbe
xchg
cmp
sbb
jp
jmp
aam
in
xchg
insl
repnz
pop
mov
cmp
jle
mov
sub
pop
sti
inc
popf
pushf
aas
dec
cli
lods
dec
pop
mov
data16
xor
xchg
mov
sti
sbb
jbe
mov
and
xchg
addr16
mov
ja
push
push
xchg
xchg
push
cmove
dec
xlat
push
jbe
dec
imul
push
or
fisubrl
into
add
mov
mov
add
adc
sbb
jns
dec
lret
and
inc
in
outsl
inc
push
shl
and
cmpsl
mov
loope
push
push
test
clc
lcall
nop
mov
mov
cmpsl
lods
cmpsb
adc
add
cs
sbb
inc
xor
push
cmp
or
or
mov
adc
or
lahf
aam
mov
lods
fisubs
stc
repz
std
pushf
xchg
inc
inc
das
xor
int
mov
lcall
add
cs
cmp
cmp
xor
call
decl
mov
jmp
mov
jb
cmp
lahf
cmpsb
jno
pusha
ds
inc
popa
or
int
das
mov
mov
push
lock
lods
dec
fs
jbe
out
shl
xchg
sub
add
int
xchg
mov
mov
movsl
mov
cmp
mov
pop
lcall
sbb
mov
stc
pop
mov
dec
add
jb
jmp
push
sbb
or
xchg
out
cld
fidivrs
inc
push
push
gs
sbb
xchg
mov
lret
repz
inc
adc
mov
ja
stos
dec
xchg
addr16
fnstenv
ss
add
push
xlat
xor
outsl
popf
stos
fs
in
daa
in
jae
pop
cmp
aam
cmp
pop
mov
mov
or
sub
in
mov
in
movsb
mov
add
adc
xor
add
in
inc
mov
sbb
jecxz
xchg
pop
xchg
and
jmp
sbb
enter
push
cmp
adc
dec
jo
xchg
push
icebp
das
stos
adc
std
test
dec
mov
mov
cld
add
rep
push
js
mov
sbbb
mov
pop
insl
shl
daa
jbe
mov
xor
adc
decl
loopne
jne
scas
pop
dec
sub
insb
in
add
cwtl
push
xchg
out
sub
and
mov
push
push
add
sub
nop
cmp
mov
jp
stos
fdivl
out
dec
mov
xchg
ficoml
jle
cld
lret
or
scas
orl
ds
stos
mov
lods
loop
jb
adc
lock
pusha
incl
mov
mov
sub
call
mov
mov
call
mov
push
movsbl
call
inc
lea
lea
inc
imul
call
mov
xor
inc
xor
lea
inc
dec
lea
lea
mov
imul
inc
lea
mov
call
xor
add
sub
or
movswl
call
mov
dec
call
mov
sub
sub
inc
imul
xor
movsbl
mov
mov
pop
mov
lea
xor
add
mov
pop
dec
inc
pop
inc
mov
inc
mov
pop
movzwl
or
inc
movswl
imul
sub
or
add
pop
or
lea
pop
and
or
mov
lea
sub
call
lea
add
add
movzbl
ret
inc
mov
push
mov
lea
push
mov
mov
push
lea
dec
push
sub
push
lea
mov
inc
imul
push
dec
ret
push
mov
lea
inc
inc
lea
lea
mov
push
add
mov
inc
call
pop
ret
jmp
mov
movzbl
add
imul
add
mov
add
and
inc
mov
movzbl
imul
mov
xchg
xor
movzwl
add
xor
xor
lea
mov
add
imul
inc
lea
movsbl
dec
jne
add
mov
movzwl
inc
pop
or
movsbl
pop
inc
mov
pop
or
sub
or
imul
or
dec
sub
mov
imul
mov
imul
add
ret
push
push
add
add
push
add
mov
or
inc
mov
dec
push
mov
inc
dec
inc
push
mov
imul
add
mov
movzbl
imul
and
push
mov
mov
inc
push
sub
mov
xor
imul
lea
push
movswl
and
push
inc
dec
pushl
sub
call
add
add
inc
sub
imul
dec
imul
dec
inc
pop
ret
movzwl
or
lea
inc
and
mov
and
dec
inc
mov
cmp
jb
add
xor
lea
mov
inc
sub
mov
inc
inc
add
imul
add
imul
mov
add
mov
cmp
jb
inc
pop
dec
xor
inc
lea
add
lea
inc
dec
mov
add
mov
xor
movzbl
xor
dec
xor
add
mov
mov
inc
test
jbe
inc
dec
dec
lea
inc
add
movzbl
inc
inc
mov
imul
and
dec
movsbl
mov
and
sub
movzbl
dec
movsbl
add
dec
and
dec
dec
mov
or
mov
inc
add
mov
lea
lea
mov
lea
imul
add
lea
inc
dec
jne
mov
mov
mov
mov
dec
lea
inc
dec
lea
inc
mov
dec
dec
mov
mov
mov
imul
dec
imul
mov
or
imul
test
jbe
add
xor
inc
inc
imul
imul
inc
mov
mov
and
sub
sub
add
imul
dec
inc
dec
lea
dec
dec
mov
dec
and
mov
dec
mov
xor
dec
movzbl
inc
sub
add
inc
inc
and
and
sub
mov
mov
dec
movzbl
inc
add
mov
dec
add
mov
sub
jmp
push
mov
inc
lea
sub
mov
dec
sub
dec
inc
inc
inc
dec
add
inc
mov
inc
add
mov
and
mov
imul
lea
inc
lea
dec
inc
movswl
add
dec
mov
and
imul
lea
mov
mov
inc
and
lea
dec
cmp
je
inc
sub
dec
push
or
or
mov
mov
mov
movsbl
sub
add
imul
mov
mov
mov
movsbl
dec
lea
imul
inc
mov
xor
mov
and
add
sub
and
dec
sub
add
add
mov
sub
dec
imul
dec
mov
mov
call
call
sub
lea
inc
sub
sub
lea
dec
ret
mov
lea
pop
dec
ret
push
or
inc
and
sub
inc
push
movzwl
mov
push
mov
push
mov
push
add
add
add
lea
xor
call
movswl
push
mov
xor
xor
lea
sub
movsbl
neg
dec
mov
movsbl
sub
dec
sub
mov
dec
inc
mov
mov
mov
inc
sub
movsbl
dec
je
xor
mov
add
mov
dec
dec
mov
lea
jmp
dec
dec
dec
repnz
mov
mov
add
movswl
jmp
mov
sub
dec
inc
add
mov
mov
inc
xor
dec
xor
movzbl
dec
mov
lea
dec
pop
pop
ret
push
mov
movzbl
movswl
sub
lea
and
lea
inc
add
movzbl
movzbl
sub
dec
mov
dec
lea
inc
mov
inc
dec
lea
add
dec
dec
dec
pop
ret
sub
add
mov
dec
dec
mov
lea
dec
mov
dec
lea
mov
inc
mov
xor
sub
lea
mov
mov
lea
inc
dec
dec
lea
add
dec
mov
cmp
jb
imul
push
sub
mov
push
imul
dec
push
dec
mov
xor
dec
add
xor
inc
dec
xor
mov
dec
push
sub
inc
mov
or
xor
lea
imul
mov
mov
sub
mov
inc
add
movzbl
mov
add
lea
dec
add
inc
inc
add
xor
mov
movzbl
add
dec
sub
add
inc
jmp
mov
push
add
ficoml
push
scas
lods
mov
push
sbb
movsl
aam
xchg
adcb
mov
insl
sbb
movb
mov
sbb
push
ljmp
pop
sub
out
push
xlat
pop
movsb
inc
jo
ljmp
mov
out
jo
aas
cltd
lods
arpl
rcrl
leave
iret
pushf
fsubs
jl
nop
adc
xor
push
pop
leave
ja
scas
call
icebp
pusha
rcll
stos
mov
in
jnp
in
outsb
push
sbb
cld
popf
add
inc
rclb
jo
ds
push
test
out
push
jae
mov
ficompl
jp,pt
dec
xchg
add
xchg
cld
add
jmp
mov
subb
hlt
lret
or
and
inc
aaa
push
fadds
mov
ret
loope
in
test
aas
sti
movsl
and
mov
testl
ss
pop
jb
mov
cmp
sbbb
mov
leave
fsubrl
push
xchg
dec
pusha
je
sbb
mov
call
xchg
stc
xor
sbb
jecxz
push
pop
add
out
dec
jecxz
popa
dec
jae
decl
mov
xchg
add
lds
int3
into
outsb
mov
repz
pop
pop
xchg
jbe
mov
adc
shll
add
add
jg
loop
add
jle
jle
cmpsl
xchg
fsts
loopne
dec
fldenv
mov
mov
adc
lret
and
popf
add
mov
push
test
fildl
adc
mov
sbbb
fucomi
lret
ss
lds
shrb
add
and
aad
in
movsb
dec
pop
inc
ror
inc
inc
loopne
push
sub
iret
jb
loope
jle
inc
push
xchg
jp
fimull
mov
mov
cltd
loopne
jp
nop
lret
or
aam
jle
sbb
and
and
lahf
cbtw
ja
lahf
and
inc
sbb
sbb
mov
addl
sub
lret
xorb
sub
adc
inc
xor
sbb
fcomi
mov
xlat
mov
jg
mov
std
xor
int3
push
sbb
inc
iret
sbb
xor
pushf
push
mov
adc
and
add
pop
decb
test
mov
xor
into
or
pop
jl
testb
push
sti
jae
cwtl
js
push
and
push
inc
scas
add
cwtl
jno
int
cld
jne
fwait
js
pusha
outsl
clc
in
mov
lcall
jno
andb
loop
dec
cmp
std
xchg
or
push
mov
or
add
and
mov
insl
push
ds
sub
unpcklps
mov
xchg
mov
fsubrp
mov
mov
iret
mov
mov
mov
mov
fisubrs
movsl
jl
lds
popa
push
xor
orl
aaa
mov
fbstp
sub
add
mov
insb
aam
or
pusha
dec
pop
pop
xchg
xchg
out
in
sbbl
pop
orb
out
adc
int3
push
jbe
jge
sub
ljmp
lret
in
pusha
mov
mov
mov
int
jmp
sahf
and
xor
dec
dec
es
sarl
sub
sar
pop
or
lahf
cs
cmc
pushf
mov
xor
dec
gs
fadd
xchg
jmp
mov
stc
leavew
out
sub
shrl
add
mov
aam
rorb
lcall
push
cltd
loopne
cli
sub
jp
mov
cli
mov
repnz
call
jae
and
fstp
dec
aas
aaa
sub
cltd
and
or
mov
pop
push
mov
sub
dec
xchg
and
add
push
inc
imul
scas
in
xor
dec
gs
es
lret
push
ss
jnp
es
cltd
inc
push
lret
icebp
fs
adc
push
mov
call
in
adc
jecxz
sub
mov
xor
neg
fs
mov
jno
lea
scas
push
push
inc
pop
lods
xor
loope
inc
rclb
push
mov
ret
push
add
and
fs
icebp
inc
inc
jecxz
mov
in
cmp
sub
or
cli
call
adc
xchg
roll
mov
pop
mov
mov
mov
adc
jp
mov
inc
andb
imull
cmpsb
out
daa
adc
es
mov
mov
imul
in
add
mov
mov
xchg
inc
repz
and
stos
outsl
jge
fwait
xor
ds
pop
rolb
xor
insb
cmp
pop
jg
stos
xchg
xchg
int3
cmp
and
aad
stos
fnstcw
insl
jae
cmpsl
push
loop
cltd
adc
mov
cmc
popf
push
dec
cld
mov
push
cmpsl
lret
dec
mov
inc
and
test
mov
outsl
lds
stos
mov
ljmp
shr
jmp
push
aas
pop
dec
fucom
loopne
add
fidivrl
out
out
inc
stos
stos
ljmp
inc
loope
mov
xchg
sbb
js
pushf
stos
lods
or
mov
sub
cmc
shll
adc
jmp
es
fsub
into
in
mov
scas
mov
jne
scas
cmp
stos
data16
jmp
in
lods
pop
add
iret
lods
daa
sub
cli
pop
xor
cmp
cltd
jmp
add
jmp
iret
lods
inc
jbe
pop
sbb
mov
outsb
push
lds
les
imul
mov
scas
jbe
mov
pusha
push
lret
rorb
pop
imul
insb
mov
sbb
test
dec
in
cmpsb
setge
mov
lock
shrl
xchg
inc
and
sub
mov
fstps
je
cwtl
jne
mov
xchg
int
aaa
mov
dec
ja
dec
fbld
sub
pop
aad
bound
test
lcall
call
or
rorb
into
movsb
inc
mov
inc
xchg
add
xor
push
into
bound
mov
dec
cmp
hlt
push
inc
pop
lods
or
subb
loopne
arpl
lods
pop
xor
adc
sub
pop
cwtl
pop
pop
inc
pop
adc
in
in
xchg
mov
subl
add
aaa
push
xchg
adc
fisubl
and
ret
inc
push
jmp
mov
pop
testb
sub
imul
sbb
lret
jp
lea
rclb
adc
adc
sarl
pop
popf
popa
push
pop
push
imul
mov
testb
call
fistps
fiadds
lea
inc
subl
or
loope
addr16
fdivrs
sti
mov
ss
repz
lcall
dec
pop
mov
xor
mov
xlat
notb
jp
ja
mov
je
sub
test
roll
add
mov
sbb
in
inc
pushf
dec
jecxz
aas
xchg
cmpb
fsubs
pop
into
xchg
inc
or
xchg
inc
pop
movsb
test
push
add
popa
aad
cmpb
jl
aad
aam
jae
inc
ja
sub
out
or
imul
fsubrs
or
fisubrl
mov
jl
outsl
rorl
test
ljmp
adc
lret
xor
flds
aas
pop
or
out
xchg
sbb
inc
lcall
mov
cmpsl
mov
dec
in
mov
push
les
lret
jle
fnstsw
push
mov
test
or
inc
mov
gs
jge
and
outsl
or
mov
mov
mov
sbb
daa
iret
jle
push
lock
dec
fstpl
test
push
pusha
mov
mov
dec
aad
jmp
fcomps
rcll
jae
aaa
lahf
mov
pop
daa
jbe
adc
add
mov
cmp
lcall
repnz
add
imul
es
icebp
fiaddl
cmp
adc
add
lds
rclb
rcl
idivb
pop
pusha
sub
subb
test
xor
xor
and
out
jnp
inc
pop
dec
stc
sbb
xchg
pop
mov
adc
push
bound
jecxz
stc
mov
addr16
les
imul
mov
mov
addb
dec
shrl
rcrb
jb
inc
fcompl
mov
mov
jae
jle
mov
mov
aas
jg
mov
aas
test
mov
mov
mull
push
out
mov
mov
inc
aaa
out
push
test
stos
out
dec
sahf
sub
push
jecxz
mov
mov
int
fildll
in
loope
xchg
aam
mov
subb
jmp
jbe
xchg
das
sub
and
xor
cs
fcoml
dec
int3
andb
lahf
ret
cwtl
add
loop
xchg
add
sbb
into
or
addr16
int
sbb
insb
mov
mov
xor
lahf
and
es
imul
add
hlt
lock
mov
lds
cmp
xchg
insb
inc
inc
xlat
push
leave
mov
out
addr16
xor
in
aas
push
xor
cmp
in
mov
hlt
cmp
popf
sbb
cld
jae
fcoml
xlat
iret
mov
ret
les
loop
cwtl
out
mov
xchg
roll
pop
xchg
adc
imul
cmpsl
lock
repnz
xchg
mov
xor
mov
jns
cmova
mov
mov
jnp
icebp
outsl
add
push
lret
lock
xchg
adcb
jl
adc
pminsw
jns
xor
mov
mov
sti
jecxz
imul
xchg
xchg
mov
sbb
inc
lea
clc
movsl
scas
add
lcall
cltd
leave
or
fmuls
xchg
mov
in
sahf
xor
push
inc
inc
jmp
gs
or
or
mov
aam
sub
leave
mov
cmp
jg
sub
or
sbb
insb
fiaddl
nop
xchg
testl
mov
mov
fs
xor
inc
sarl
and
rcrl
daa
orb
mov
adcl
ss
insl
adc
push
mov
add
xor
es
jp
xchg
je
sub
mov
jecxz
sub
jns
pop
pop
push
rcrb
imul
xor
cmp
scas
fbld
jg
add
aad
adc
mov
mov
scas
push
cmpb
movsb
lds
dec
adc
mov
xchg
sbb
mov
adcl
inc
cmp
sti
lods
mov
addr16
mov
mov
ds
dec
add
pusha
adcb
les
pop
out
cmp
jnp
inc
xchg
sub
pop
movsb
xor
mulps
push
cld
insl
and
lock
push
es
mov
inc
xor
loopne
or
test
les
not
inc
sub
push
lret
sub
jmp
shlb
nop
mov
sahf
lret
aaa
ficoms
jecxz
adc
xor
lock
or
fwait
orb
mov
flds
cmpsl
nop
pop
lret
nop
sub
ret
aaa
lods
and
insb
aaa
pop
leave
adc
jmp
mov
gs
out
or
jle
cltd
je
adc
mov
test
adc
call
icebp
aad
sub
xchg
fistpl
call
sbb
sub
jb
and
addb
xor
subl
jb
xor
test
pop
push
hlt
cmp
sbb
inc
in
dec
add
adc
add
xor
aad
ds
jnp
popf
add
mov
in
inc
addr16
lods
or
pop
ret
xchg
ficomps
testl
and
js
dec
or
mov
cmp
loope
iret
rcrb
adc
jnp
or
xor
rep
mov
and
lods
outsb
lret
lods
dec
or
lock
mov
test
and
data16
repnz
push
or
in
jae
push
fldenv
ja
scas
lods
rcl
loop
adc
inc
fwait
xchg
xor
mov
push
hlt
push
dec
sahf
adc
pushf
stc
pop
xor
mov
arpl
mov
mov
ffreep
push
ficompl
sarl
pop
push
xor
adc
pop
aad
xchg
dec
sub
stos
es
inc
mov
mov
add
dec
add
insb
ret
in
sar
fmuls
scas
sbb
addr16
les
rcrb
test
jbe
inc
pop
xor
push
js
mov
push
lret
divb
inc
or
sub
cmpsl
fsubrs
insb
mov
lret
test
xor
xor
divl
fnstsw
dec
xchg
xchg
aaa
mov
jl
dec
cmpsl
pop
aaa
add
mov
push
xchg
shl
cmp
lds
cltd
in
push
mov
xchg
fcomp
mov
pop
fisubrs
xchg
shrl
inc
insl
push
aam
movb
movsb
pop
cmp
imul
or
ret
and
inc
mov
bound
pop
pop
and
mov
jge
push
jge
pop
shl
lods
lock
out
jmp
imul
lret
fbstp
je
imul
push
or
cmpsb
mov
xchg
es
decl
or
sti
movsb
push
mov
ficomps
sub
subb
mov
xchg
cmp
jp
pop
push
push
jle
jbe
mov
aaa
jae
aas
xchg
lcall
mov
loopne
ret
lahf
clc
pop
sub
hlt
jae
popf
and
push
sbb
rorb
stos
cmc
push
in
out
ret
scas
and
and
psrad
in
push
jno
loopne
cli
hlt
add
testb
adc
cs
jns
faddl
mov
clc
and
pop
mov
sub
or
sub
jmp
rolb
ja
mov
lcall
xchg
jno
or
ja
push
dec
inc
sbb
fstpt
repnz
or
inc
dec
mov
fnstsw
ret
or
sbb
xor
rcrl
jp
add
ljmp
xor
jp
push
push
repz
xchg
xchg
sbb
lcall
mov
or
mov
lret
pop
pop
dec
lret
push
jno
faddp
inc
not
mov
loope
cmp
enter
addl
pop
mov
in
icebp
pop
ret
dec
mov
popa
scas
ss
repz
fs
push
mov
mov
lods
rcrl
push
pop
dec
movb
pop
loope
mov
aam
js
or
inc
xchg
mov
test
clc
cmp
xor
xchg
dec
in
sbb
mov
lods
adc
cltd
xchg
mov
hlt
sti
xchg
fstpt
mov
sub
jg
in
sbb
push
mov
movsb
sub
pusha
fucom
or
mov
pop
dec
scas
cmp
push
fidivs
rdmsr
imul
dec
sub
out
pop
icebp
cld
cwtl
sbb
or
into
je
pop
xlat
nop
xchg
loope
adc
adc
mov
xchg
inc
icebp
shrb
sbb
repz
push
adc
in
daa
cltd
push
adc
mov
push
daa
out
mov
sbb
adc
outsl
das
sbb
mov
mov
xor
push
outsb
jecxz
ss
fcomp
inc
mov
loop
fbld
mov
jo
xlat
hlt
and
outsl
test
les
aaa
or
test
push
dec
aad
nop
stos
inc
or
xchg
jmp
mov
inc
cmp
xor
cmp
mov
jb
jl
mov
cmp
jg
lds
push
arpl
mov
aam
scas
fidivs
mov
dec
fstpt
jo
iret
sbb
cmp
mov
fists
mov
or
adcb
jle
int3
bound
aam
mov
in
fs
dec
add
in
pop
push
in
mov
xchg
sub
mov
cmc
sbb
data16
das
mov
jg
add
xchg
add
stos
and
xchg
cmp
mov
cltd
cmp
add
mov
or
or
adc
jmp
fmuls
lcall
mul
inc
sbb
add
enter
popa
cmp
imul
push
and
sti
dec
adcl
pop
outsl
fldt
adc
mov
sarl
mov
enter
jg
xor
into
cmp
xlat
xchg
add
fisubrs
or
mov
xchg
cli
mov
lcall
pop
adc
incb
xchg
in
popf
push
sbb
mov
jmp
ljmp
add
push
imul
push
cmp
cld
or
int
pop
xchg
dec
sub
jnp
dec
lods
sbb
sbb
in
jp
js
mov
jl
mov
popa
popf
pop
pop
out
mov
cwtl
cmp
aas
mov
lock
jb
mov
jnp
or
xchg
pushf
out
lods
add
adc
and
sub
call
push
bound
inc
cmp
into
sbbl
sbb
stc
lods
xchg
xchg
repnz
lods
sub
and
leave
pop
test
push
cmp
out
popf
or
loopne
xchg
ficompl
mov
es
pop
jl
lret
mov
lret
pop
jecxz
inc
mov
fmuls
xor
xor
outsl
sub
das
sahf
xchg
push
xor
lods
cmp
test
fstpt
test
fnstenv
add
mov
mov
test
cld
fmull
bound
mov
push
bsr
dec
or
mov
pop
stos
push
jl
xchg
loopne
int3
in
add
movsb
xor
adc
jle
fs
ret
adc
jecxz
outsb
imul
sbb
into
in
sar
gs
mov
movsl
cmp
jge
ret
jge
pop
fdivrs
add
mov
lret
sbb
mov
xor
push
imulb
push
icebp
cmp
rcrb
mov
mov
fstpl
inc
insl
pop
std
inc
std
mov
cmp
inc
mov
jmp
cmpsl
and
and
das
push
push
aaa
adc
inc
movsl
mov
mov
sbb
xchg
setl
xchg
sub
adc
and
push
icebp
cwtl
mov
and
mov
test
in
cltd
addl
sub
bound
cld
xchg
and
mov
daa
daa
gs
mov
aam
jnp
enter
lahf
aam
jnp
sbb
inc
jmp
jl
and
sbb
loope
add
pop
pop
xor
mov
jae
jae,pt
dec
jno
int
sub
mov
and
dec
sahf
in
pop
lret
sbb
mov
cmpsb
ret
jno
insb
push
cmpsb
or
push
stc
loopne
push
shll
xor
add
decb
xor
lds
cmp
test
stos
mov
scas
out
push
call
mov
sti
bound
hlt
adc
inc
ret
out
cvtps2pd
ljmp
xchg
imul
sub
mov
inc
fdivrl
inc
xor
jae
or
int
and
cmp
enter
add
repz
mov
fwait
mov
popf
xor
fcomps
xor
fwait
nop
push
pop
enter
decb
push
movsl
stos
xor
xor
lods
int3
hlt
in
push
xchg
int
dec
in
push
or
pop
jnp
push
xchg
fisttpl
scas
test
sub
fadd
inc
jl
dec
lea
mov
int
outsb
mov
jns
sarl
mov
mov
pop
inc
or
sbb
clc
mov
pop
test
scas
pop
add
xchg
pusha
js
loopne
xor
sub
fisubrs
mov
loop
fisttps
mov
hlt
xchg
xor
mov
stos
mov
lds
out
mov
repz
orb
pop
lds
dec
testb
repnz
lods
test
inc
inc
push
adc
cli
fbstp
aaa
push
dec
mov
cmp
orb
in
push
movsb
shl
jg
mov
push
shl
cmp
fdivrl
cmc
add
and
or
push
mov
push
jo
jne
shr
sahf
sub
push
fbstp
hlt
int3
or
cmp
push
inc
sub
cmp
pop
xor
pop
push
lea
mov
xchg
sub
inc
clc
cmp
push
push
les
sti
or
xor
jne
cltd
jnp
stos
xor
lods
sti
pop
sub
fwait
aam
cmp
add
cmp
lods
or
and
xor
rolb
js
mov
push
fstl
out
mov
inc
lret
jle
xchg
jmp
xchg
idiv
popa
repnz
jae
aad
fnstcw
movsb
cwtl
fcmovu
pop
add
push
test
mov
ret
mov
pop
lea
ror
sub
pop
cmp
jp
fs
jg
push
imul
mov
sbb
xlat
xor
or
leave
or
add
or
pop
loop
pop
jmp
and
and
leave
sbb
lcall
xchg
outsl
lret
shr
cmp
jmp
cli
test
jecxz
addb
shrb
pushf
and
push
mov
jno
ret
mov
pop
cmp
loope
lret
mov
adc
xchg
pop
orb
jae
pop
pop
sub
popa
test
cmpsl
scas
jmp
mov
aaa
daa
pop
pop
mov
dec
cwtl
ret
mov
pop
pusha
mov
aam
sub
adc
sbb
movaps
xor
out
jge
jl
adc
and
insl
inc
pushf
notb
xor
push
or
mov
ljmp
add
scas
inc
push
clc
jno
push
into
pop
xor
fdivrl
or
sbb
lods
fwait
cwtl
in
loop
sbb
dec
mov
pop
fmuls
into
sahf
push
push
fcomps
ds
push
stos
fidivrs
cmp
xchg
loop
dec
push
scas
test
mov
and
sbb
loope
push
nop
mov
shrl
test
jge
or
pusha
in
lret
fwait
push
mov
sarl
divb
fstl
jo
adc
insl
xchg
lds
int3
scas
add
jno
add
xor
or
cli
in
inc
nop
push
xor
jp
mov
jp
or
ret
jnp
roll
sub
ds
mov
shlb
inc
sub
dec
push
fs
ucomiss
out
and
arpl
daa
mov
leave
lahf
sub
pusha
sub
xchg
xchg
rcrl
pusha
rcl
xchg
aaa
call
popf
int
xchg
shrl
movsl
jmp
adc
adc
cwtl
pop
ss
mov
mov
sti
clc
sub
fwait
adc
xor
jb
loop
mov
mov
xor
aaa
pop
pop
mov
stc
insb
push
stos
jns
test
mov
xor
ss
out
popf
lahf
pop
bnd
xchg
mov
jp
test
mov
jp
test
push
pusha
jb
fdivrl
mov
lret
sbb
jnp
push
loope
lods
rol
sbb
push
pop
mov
mov
mov
in
jnp
fldl
rcll
push
fiaddl
and
mov
shll
xor
daa
fistpll
add
or
add
xor
orb
negl
cmp
xchg
push
lahf
popa
push
pop
movsl
mov
adc
in
sbb
mov
inc
inc
inc
cs
or
jecxz
mov
enter
in
pcmpgtw
jle
or
setae
out
aam
push
fdiv
in
int
outsb
dec
cwtl
inc
mov
mov
jae
aad
or
mov
out
dec
faddl
mov
sbb
push
imul
enter
mov
dec
xlat
in
mov
loop
jb
mov
sbb
xchg
mov
fwait
xor
cmp
jns
cmpsl
fninit
int
jb
xchg
cmp
mov
lahf
lods
rorl
mov
sub
mov
sahf
insl
mov
data16
in
aam
pop
dec
jle
push
add
add
add
adc
inc
jns
loope
pusha
sbb
or
imul
in
ds
sahf
and
jmp
ljmp
add
jecxz
pop
cmp
xchg
mov
sti
rclb
jnp
mov
in
jb
xor
push
dec
cmp
xor
mov
adc
pop
sub
xchg
or
inc
loope
mov
mov
into
fwait
mov
push
subb
xchg
xchg
sub
cli
lods
fmul
outsl
pop
jp,pn
fnstcw
and
mov
jo
mov
nop
cli
mov
push
aaa
inc
mov
jge,pn
xor
gs
cltd
push
pop
lcall
std
repz
xchg
fsub
and
sti
mov
xchg
fldt
add
jmp
rolb
data16
xorl
dec
or
sbb
or
in
das
xchg
sub
pop
xchg
lret
pop
adc
outsb
xor
insb
jb
jl
call
subl
cmp
int
add
and
mov
mov
cmc
cmp
aam
lds
imul
mov
lods
mov
push
lahf
cltd
or
xor
pop
bound
or
sub
in
shrb
loope
mov
insl
and
ja
arpl
pop
in
enter
fimull
jno
jbe
or
ret
jbe
push
shlb
fcomip
mov
arpl
loope
adc
sub
repz
cmp
mov
inc
jae
dec
lods
xor
ja
mov
aas
mov
cmp
scas
cld
stos
or
and
imull
lods
mov
push
cmp
ret
xor
sbb
movsb
and
fimuls
sub
cld
push
xor
test
int
and
das
mov
inc
pusha
mov
int3
mov
fildll
push
mov
pusha
loop
pushf
loop
ds
repz
push
jne
mov
mov
xchg
jp
mov
jge
lods
subl
psraw
call
int3
sbb
aam
orl
sub
mov
xchg
movsl
jl
push
test
pop
ret
movsl
data16
jbe
mov
mov
cwtl
movsl
xor
roll
jp
mov
scas
sub
shr
push
jge
aaa
hlt
sbb
mov
rep
mov
xor
mov
xor
pop
leave
pop
shl
nop
push
xchg
ja
inc
xor
sub
ret
add
dec
scas
popa
mov
lret
bound
int
push
iret
or
xor
jp
xor
jl
xchg
pusha
mov
js
adc
sub
stos
mov
outsl
add
hlt
lcall
cld
mov
or
pop
mov
push
je
push
orb
cld
pop
loopne
stc
cmpl
mov
hlt
lret
imul
dec
lcall
push
test
loopne
in
and
dec
scas
mov
mov
mov
cmpsb
mov
push
add
aaa
in
ja
sub
inc
loopne
jmp
xor
xchg
mov
ret
push
push
and
jp
or
or
iret
add
cmp
mov
pop
fimull
and
pop
jae
xor
pop
sti
shl
ljmp
sbb
sbb
loopne
into
in
out
rorl
adc
into
mov
aad
shlb
clc
mov
ja
jno
xor
inc
xor
outsl
push
jmp
popa
mov
ret
cmp
lret
adc
jo
jmp
mov
mov
xchg
dec
xor
and
cmp
lods
and
call
ja
jnp
mov
lret
jmp
loop
movsb
fcmovbe
dec
jno
sbb
shl
mov
cmp
mov
pop
aas
sbb
mov
or
pop
and
jg
daa
mov
add
in
sub
imul
enter
sub
loopne
mov
and
call
jno
fldenv
mov
aam
add
prefetcht0
push
cmc
into
int
sub
int3
mov
popf
mov
mov
inc
sbb
aam
das
sbb
jbe
rorl
mov
daa
lds
call
adc
nop
ja
xchg
cmc
and
push
dec
cmpsb
sub
popf
fs
aaa
lea
test
inc
sarb
add
cmpb
mov
fsubs
repz
lret
mov
xchg
popa
pop
rcll
mov
mov
shl
les
and
xor
dec
gs
test
ret
adc
enter
out
call
sub
jo
push
xchg
and
jno
or
adc
ds
std
sub
inc
xchg
negb
imul
sbb
xchg
pop
cmc
cmp
cmpl
popf
into
inc
call
lods
mov
into
in
cmp
xor
insl
cmp
dec
mov
sub
insb
pop
fmuls
push
popa
mov
inc
jns
in
adc
es
dec
jl
mov
dec
pop
mov
cmp
in
stc
sbb
xchg
xlat
mov
outsb
pop
stc
jl
out
xchg
xchg
out
pusha
xchg
outsl
roll
pop
aas
xor
dec
sbb
adc
loopne
movsb
scas
push
arpl
and
outsl
push
push
push
bnd
fdivl
icebp
pop
ffree
or
push
fsubrl
test
fcomip
jae
outsb
inc
addr16
or
push
div
xor
arpl
pop
out
stc
cmpsb
cmp
call
or
cld
mov
jmp
repz
aas
xchg
dec
dec
loope
mov
ret
sbb
ljmp
test
aad
ret
cmp
add
imul
and
sbb
inc
jle
or
in
push
jb
push
fdivrl
pop
add
pop
xchg
pusha
scas
out
mov
int
sub
outsl
pop
sbb
xor
push
sbb
xor
imul
fimuls
cmc
jmp
jp
cmp
add
les
ficoms
cltd
in
adc
aam
loop
aaa
jl
jl
add
orl
call
divb
push
cmp
dec
mull
fisttpll
and
xchg
adc
sahf
push
mov
bound
jnp
in
pop
shrl
cmp
outsl
inc
add
mov
stos
cmp
push
sub
dec
ret
xor
push
adc
out
lock
dec
sbb
data16
ret
ficoml
int3
push
jbe
out
out
mov
jbe
dec
lcall
mov
pushf
sbb
mov
int3
add
lods
push
pop
sub
xor
xor
rol
jns
addr16
adc
mov
addb
adc
iret
mov
movb
idiv
mov
xchg
adc
inc
cmpl
and
inc
in
in
loope
mov
or
xchg
or
push
mov
lds
cmp
sub
xchg
fldl
xchg
dec
sti
shrb
les
cmc
inc
divb
mov
test
mov
in
add
xchg
cmp
mov
bound
outsl
pop
gs
int3
arpl
add
xor
test
mov
jl
pop
outsb
loopne
sub
int
ret
lea
sub
stc
or
inc
inc
shr
mov
cmp
jmp
cwtl
jmp
gs
mov
in
xchg
lds
dec
daa
mov
adc
cmp
repz
mov
cs
sub
aas
call
mov
add
test
inc
or
ss
int3
mov
jno
cmpsl
sbb
repz
ud1
lods
pop
cmp
sbb
loopne
pop
xorl
insb
repz
daa
push
and
fsub
push
sbb
dec
add
lahf
movsb
stos
push
leave
mov
inc
sub
jle
mov
jmp
jns
add
mov
mov
test
mov
pushf
pop
call
testb
out
mov
enter
jg
cmc
pop
push
jmp
mov
add
sbb
xchg
call
fisubs
add
mov
jp
adc
je
mov
call
cwtl
imul
jb
cmp
outsl
mov
push
pop
in
or
fucomi
movsb
inc
movsl
mov
or
cmp
lea
inc
xor
sbb
inc
inc
pop
cmc
outsb
mov
imul
mov
xor
mov
pop
mov
cwtl
xor
or
push
or
incb
sbb
mov
lods
xchg
mov
jo
cld
insb
aas
cwtl
pop
leave
loop
ds
xor
aas
dec
and
bnd
sbb
adc
das
addr16
push
mov
cltd
push
adc
jge
or
add
inc
adc
adc
std
sub
in
popf
or
push
aaa
mov
dec
fadds
ss
or
incb
out
push
cwtl
dec
bound
ljmp
dec
xor
add
fldt
xor
xchg
ljmp
pop
dec
pop
inc
mov
andb
xchg
mov
pop
ret
fwait
mov
sbb
xchg
adc
stos
mov
outsb
or
dec
cld
push
jp
rorb
int3
and
jg
je
and
cmp
data16
and
or
sub
cwtl
bound
iret
or
test
push
outsl
push
lods
iret
sub
rorb
repnz
push
imul
jecxz
add
aad
cs
sub
xor
int
cld
cmp
cmp
sub
stos
mov
es
and
adc
and
into
mov
arpl
and
sub
adc
mov
lahf
mov
pop
jl
mov
int
adc
xorb
pop
call
pop
mov
mov
xchg
fdivr
cwtl
lea
sbb
aad
xchg
subl
sbb
pusha
movsb
and
negl
push
hlt
and
cmp
xor
sub
aas
ja
mov
lods
cli
shlb
push
div
out
push
lret
mov
lret
pop
in
push
in
stos
addr16
dec
mov
dec
rclb
mov
jle
mov
dec
adc
nop
out
xor
je
mov
pop
loope
pusha
popf
jae
mov
fisubs
sbb
not
rcll
arpl
xchg
es
or
stos
push
std
in
xchg
pop
mov
inc
out
jbe
xchg
xlat
adc
test
repz
and
ss
es
daa
std
push
add
roll
xor
pop
loopne
mov
mov
sarb
int3
les
fldt
lahf
adc
mov
pop
maskmovq
testl
in
inc
rorl
and
into
shll
cld
out
iret
jle
push
enter
lods
add
mov
loopne
dec
cli
jp
insb
push
mov
adc
std
pop
sar
push
xchg
fisubl
add
shrl
xchg
mov
addr16
aam
mov
in
and
lods
dec
cmpsl
or
loopnew
xchg
cmp
leave
inc
jg
fsubs
scas
movsb
add
sbb
mov
jmp
loopew
ds
mov
iret
pushf
xchg
mov
mov
out
js
inc
lods
jecxz
sub
lcall
shlb
dec
jb
mov
mov
pop
es
cmp
dec
andb
hlt
push
dec
and
nop
fs
xchg
fmul
decl
pop
jle
imul
imul
cltd
frstor
scas
pusha
cltd
inc
gs
jne
mov
jl
xor
shll
aaa
dec
addr16
dec
call
jb
out
xchg
jns
xorb
xchg
popa
mov
call
dec
dec
pop
test
mov
adc
pop
loopne
mov
das
mov
cmp
pop
les
add
mov
and
arpl
fstpl
pop
and
sub
lret
adc
dec
int
dec
push
xchg
or
repnz
repnz
push
ficompl
sbb
adc
or
int3
inc
lahf
test
pop
xchg
cmp
fidivrl
xchg
mov
and
sbb
cmp
leave
and
mov
jo
stos
pushl
xchg
mov
lds
jns
push
push
xchg
push
lds
fldenv
negl
jmp
sbb
inc
dec
pop
adc
pop
fmull
loope
mov
and
or
adc
mov
jbe,pt
dec
mov
ja
and
mov
shl
mov
jecxz
call
and
in
andb
sarl
xor
or
aaa
ss
jl
out
rorb
and
aad
loope
mov
push
xor
into
in
lahf
dec
or
je
nop
loopne
xchg
lahf
xor
mov
jae
cmp
mov
imul
repz
mov
cltd
sub
dec
push
lods
fucom
push
and
push
bound
adc
or
cmpsb
rcl
scas
or
mov
push
shll
sub
pop
sbb
sbb
stos
or
shlb
jmp
gs
roll
and
cwtl
push
jle
cli
clc
jmp
mov
cmp
adc
push
sbb
xchg
in
in
shlb
pop
mov
push
mov
popf
xchg
or
add
jb
and
mov
push
cmp
adc
fistpll
add
jecxz
adc
jbe
cmp
icebp
xchg
pop
jmp
and
cwtl
xchg
cmpsl
mov
fwait
push
jle
mov
mov
jns
adc
pop
cmp
shlb
push
icebp
sbb
and
int3
jbe
lods
pop
dec
je
xor
and
aas
ds
or
rorl
dec
push
pop
lds
push
mov
js
jne
ljmp
or
imul
push
xchg
push
xchg
ljmp
or
incl
xchg
add
cltd
push
addb
sbbl
jae
lahf
pop
pop
rclb
dec
push
hlt
xchg
lret
test
xchg
rolb
cli
cli
mov
mov
inc
bound
pop
test
aam
push
or
ds
mov
sahf
fcomps
fcmovb
mov
sbb
sbb
pop
shll
cmp
mov
add
icebp
and
jp
xchg
mov
rcll
jmp
rorb
xlat
ds
movsl
jo
jecxz
jmp
das
out
test
mov
mov
into
stos
jns
test
out
or
adc
push
fcomip
mov
push
sbb
mov
into
ljmp
pop
xchg
rcl
popf
or
fldenv
cmp
ds
ds
inc
mov
repnz
iret
out
add
sub
sahf
add
out
push
inc
bndldx
es
jecxz
cmpsl
push
or
gs
or
mov
std
jle
lret
ffree
andl
iret
mov
inc
cltd
adc
mov
shlb
or
dec
fisttpll
movsl
mov
inc
ljmp
pushf
cli
orb
dec
je
scas
test
shl
sbb
ss
mov
pop
pop
dec
daa
aas
lcall
pop
pop
and
push
arpl
sub
ret
fldt
int
lock
sub
ret
gs
inc
cmpb
out
mov
lds
ljmp
test
loope
xor
push
mov
sbb
shll
add
sbb
test
dec
push
xchg
out
cmp
xrelease
and
pop
shrl
dec
aad
dec
pusha
cmova
mov
mov
xchg
xchg
ss
jle
in
xchg
mov
insb
sbb
dec
aad
repnz
idivl
xchg
mov
sub
mov
daa
or
mov
and
sbb
mov
mov
push
ds
jge
sub
fnstcw
pop
lcall
xchg
pop
int
movsb
aas
sti
or
push
movsl
arpl
xor
loopne
repnz
pop
loop
dec
clc
rcrl
das
dec
jbe
push
sub
stos
scas
fsubs
cmp
loop
hlt
pop
and
lret
push
divl
or
test
mov
fidivrl
cli
mov
sar
call
sub
idivl
gs
xchg
jae
pop
xor
popa
inc
sub
push
push
or
fists
inc
out
sbb
add
pop
add
adc
inc
out
sbb
xor
repnz
mov
test
sub
jb
inc
xor
daa
mov
cmp
frstor
pop
sbb
xabort
lahf
pop
roll
cmp
pop
and
jno
cmp
pushf
enter
hlt
mov
fsubs
mov
mov
scas
loope
sbb
mov
mov
addr16
jae
sahf
iret
das
iret
sbb
pop
jbe
cmpsl
xchg
jns
cmpsb
cmp
sbb
mov
xlat
push
data16
xor
daa
sub
dec
add
int3
fs
cmpsb
xor
xchg
out
clc
cmp
pop
xchg
fnstenv
add
outsl
ret
mov
out
imul
mov
add
out
je
sbb
std
mov
cmp
dec
int
fistpl
xor
ret
mov
rol
mov
jo
adc
clc
sub
dec
loopne
cmc
repz
add
cld
sbb
push
cmpsb
xchg
lock
xlat
or
or
mov
jne
ret
jmp
js
lret
daa
in
or
cmp
es
sbb
dec
fstl
out
fsts
fst
pop
aam
jbe
loop
jecxz
mov
and
popa
cmp
sbb
mov
cmp
lcall
gs
dec
sbbb
fs
pop
rcrl
mov
push
adc
lods
dec
mov
fsubrl
cwtl
inc
mov
xchg
fsubrp
inc
movsl
imul
jns
out
jge
mov
cmp
movsl
sub
aam
mov
adc
sbb
fidivs
dec
mov
adc
jnp
inc
jns
addr16
popf
inc
mov
repz
sbb
mov
bound
push
xchg
cltd
out
mov
in
xchg
test
test
ds
dec
xchg
int3
ja
xor
fiadds
jnp
les
in
or
js
jp
scas
xor
gs
fucom
jno
in
movsb
pop
pop
das
vpandnd
xchg
loope
aas
add
rcll
arpl
push
dec
repz
popf
bound
jle
leave
sub
jae
sub
stos
mov
jb
sahf
scas
cs
in
jb
dec
js
test
iret
jnp
mov
pop
dec
and
sbb
and
lds
cmpsl
repnz
movsb
xchg
sub
mov
inc
dec
jnp
std
xor
push
cli
frstor
dec
dec
pop
cli
dec
sahf
inc
jmp
cmp
sarl
mov
sub
mov
sub
std
nop
mov
inc
adc
imull
lods
rcl
mov
popf
sub
in
ss
xor
cs
fs
mov
mov
imul
out
stos
mov
and
lahf
jg
push
xchg
mov
fcmovnu
dec
hlt
or
jmp
popf
loopne
into
mov
fdivrl
mov
xchg
inc
mov
stos
mov
aaa
jns
call
pushf
fwait
adc
in
es
and
sub
xchg
dec
cs
sbb
pushf
jmp
sahf
mov
fisubl
cwtl
cmp
jae
push
lods
dec
jmp
sub
sbb
sub
arpl
adc
cmpsb
out
sarb
sub
push
and
pop
dec
cld
lds
xchg
jno
fcompl
into
dec
scas
pushf
test
nop
pop
jnp
and
sahf
das
cmp
push
icebp
cmp
rcl
aam
inc
push
jle
xor
jg
mov
out
repnz
or
hlt
bound
lods
adc
inc
mov
movsl
mov
cs
pop
shrl
fdivp
test
xlat
fsub
cmp
out
dec
cmp
sahf
es
xchg
cltd
jg
out
in
mov
inc
stc
xor
inc
cmp
out
int
inc
sbb
pop
mov
cmc
outsb
pop
pop
aam
add
sub
or
fisttpll
adc
cs
jno
lret
nop
cmp
jmp
out
jo
cmp
mov
adc
pushf
sbb
cltd
je
and
insb
or
mov
push
loope
xor
pop
mov
in
push
insb
sbb
aad
shlb
cmc
mov
imul
roll
ja
std
lret
test
inc
mov
stos
in
orb
xor
lret
mov
aaa
shll
push
cli
xorl
mov
or
fcompl
sahf
mov
das
clc
repnz
cmp
test
dec
mov
push
in
jge
mov
out
sub
mov
jp
or
jns
popa
sbb
xchg
push
scas
jne
je
fldl
or
pusha
cmp
pushf
pop
out
mov
imul
enter
scas
loope
cmpsb
or
clc
sbb
in
adc
bound
dec
test
push
scas
lahf
repz
xor
lcall
outsb
stos
sbb
scas
adc
adc
pop
inc
int
aad
cwtl
xchg
stos
loop
imulb
sub
mov
iret
push
popf
mov
mov
test
lock
icebp
sahf
addb
jmp
inc
daa
dec
cli
jl
insb
and
daa
inc
clc
les
sti
sar
and
mov
push
andl
into
stos
push
incl
mov
inc
out
mov
mov
or
into
pop
mov
lcall
sub
call
sub
push
jb
pop
int
insl
aam
adc
repnz
mov
iret
dec
pop
lods
sub
mov
push
out
inc
xor
dec
sub
mov
push
in
fbld
ret
jg
lods
xchg
jo
cmpsb
sbb
fs
jne
pop
jo
aad
cmp
cmp
mov
mov
mov
loop
arpl
push
popa
dec
cli
adc
pop
push
sub
repz
mov
arpl
push
xchg
pop
mov
add
jae
sub
test
mov
ds
test
pop
xor
push
mov
stc
pop
ds
call
pop
sahf
pop
shl
mov
add
test
dec
pop
pushf
cs
push
gs
xchg
adc
cmp
mov
xchg
lds
pop
fldenv
mov
loop
lock
pop
out
hlt
pop
or
in
add
divb
add
add
push
test
adc
mov
xchg
shlb
pop
rolb
mov
jg
mov
roll
push
repz
sbb
addl
pop
int
xchg
cmp
or
fs
adc
mov
out
inc
sub
aaa
int3
xor
jecxz
cmp
or
icebp
push
xor
adc
xor
pop
outsb
js
cmpsb
sub
jp
adc
mov
shr
and
popa
jns
das
addb
popf
lea
pop
in
daa
push
leave
aas
das
cmpsb
ffreep
sti
into
js
into
pop
xchg
and
or
or
push
mov
dec
lods
pop
pop
xor
cs
lods
fidivrl
dec
jecxz
out
cmp
arpl
mov
cli
fiadds
mov
adc
and
loop,pt
inc
pop
dec
jo
rcrl
scas
cmp
cmp
lahf
push
mov
mov
pop
aaa
loope
cld
mov
cwtl
sbb
add
fcompl
pop
mov
hlt
jb
dec
add
sub
aaa
jns
fstpl
ja
fwait
lock
out
push
shlb
jmp
lds
cmpsl
mov
es
or
mov
fildl
es
jmp
jb
push
lock
inc
les
or
int
clc
std
je
xchg
mov
cli
push
adc
jb
or
out
mov
dec
int
push
xor
pop
pusha
cmpl
mov
popw
inc
jbe
xchg
dec
lods
jb
push
xor
clc
sbb
sub
not
outsb
dec
mov
out
push
scas
fiadds
lock
push
push
fucomip
cmp
leave
xchg
xchg
out
cmp
xor
cmpsb
mov
mov
cmpsb
lahf
int
push
xor
test
movsl
test
push
pop
enter
pop
int
test
repnz
pushf
rorl
movsl
loopne
adc
rclb
out
out
sbb
and
dec
and
pop
ljmp
push
scas
jae
inc
push
push
roll
and
jl
dec
sub
xor
std
mov
inc
xor
sbb
jne
repnz
mov
jnp
test
stos
mov
mov
test
cmpsl
cwtl
test
xor
pop
xlat
jns
or
xor
xor
lcall
xchg
dec
fs
repz
hlt
cmp
or
cmp
into
std
xor
arpl
lret
pop
pusha
xor
mov
jno
lods
insb
fstpt
add
add
pop
sti
lahf
xchg
fbstp
aas
xor
les
movsl
pop
testb
add
sub
cmp
dec
mov
or
test
jmp
xchg
push
jmp
in
cmp
subb
sti
or
xor
imul
cmp
inc
sbb
std
popf
mov
xchg
jecxz
jbe
gs
jle
pop
jl
jne
jge
ljmp
cmp
sub
sti
fcmove
in
cs
sbb
pop
insl
leave
loopne
jl
mov
pushf
pusha
cmp
pop
mov
lret
fdivrl
and
adc
popf
andb
pop
xlat
pop
mov
lret
xlat
push
aaa
sub
dec
add
dec
jge
lea
mov
es
loop
sbb
test
xor
icebp
in
aad
mov
add
jns
mov
es
in
pop
jbe
ficompl
ficoms
adc
fldenv
cmp
call
adc
into
call
pop
sub
cltd
inc
and
lahf
mov
pop
sqrtps
in
pop
aam
aaa
fs
cmp
cmpsl
push
movsl
mov
fcomip
inc
lock
out
fdivrl
mov
mov
push
inc
adc
cmc
sbb
inc
dec
adc
mov
xchg
insl
xor
sbb
and
imul
aas
inc
cmp
xchg
psrlw
sbb
sbb
push
in
js
lret
test
xor
out
adc
push
daa
xchg
sbb
fcompl
sarl
mov
movsl
lcall
out
test
pop
and
insl
ficomps
mov
mov
push
int3
push
xchg
mov
pop
sub
fmul
in
in
cmpb
cmp
mov
xchg
mov
jb
or
hlt
aas
mov
nop
or
std
mov
and
jae
jecxz
mov
xor
mov
aam
push
enter
dec
arpl
repz
insb
fwait
dec
addr16
inc
dec
dec
fwait
inc
jo
mov
push
and
cmp
xchg
pop
mov
scas
mov
or
and
addb
xchg
movsb
jns
adc
pop
adc
jno
lret
bound
popa
mov
jmp
dec
sarb
xchg
scas
std
xchg
mov
push
push
jb
mov
stc
xor
test
cmp
cwtl
in
cmp
stos
nop
fisttps
arpl
mov
push
loopne
in
xchg
sub
fstpt
and
leave
adc
pop
and
dec
loop
add
jne
lock
test
sub
addr16
mov
out
dec
fadd
icebp
inc
arpl
fisttps
push
xcrypt-ctr
cmpsl
frstor
hlt
test
test
add
xor
xor
repnz
hlt
add
add
push
mov
and
lods
es
dec
pop
enter
ja
mov
gs
les
data16
push
push
ss
out
mov
movl
outsb
lcall
pop
out
mov
push
add
out
push
mov
push
pusha
add
mov
iret
sbb
xchg
jl
cmp
jl
aas
lds
fcmovb
jae
nop
sub
jne
adc
or
fwait
jp
push
pop
jo
mov
sub
clc
les
inc
decl
sub
push
inc
mov
add
or
xchg
sbb
or
cmp
mov
add
dec
lods
inc
aam
mov
les
xchg
lahf
mov
addr16
push
or
fwait
in
add
jmp
cmp
sbb
leave
ds
andb
push
mov
push
cmp
sar
ja
xchg
roll
notb
inc
and
xor
fs
fadd
test
test
pusha
push
or
jp
jbe
out
mov
es
movsl
lock
scas
mov
or
imul
add
hlt
jl
sti
dec
cmpsl
les
cmp
and
cmpl
lret
add
pop
mov
jmp
sub
dec
jne
cmc
mov
loope
mov
cmp
outsb
movsl
aas
xor
cli
je
mov
es
cmp
mov
int
in
mov
cmp
sti
add
xor
out
test
sbb
mov
mov
mov
int
outsb
xchg
bound
pop
icebp
xor
ret
jo
jmp
rorb
add
cmc
popf
inc
push
cmc
lods
rclb
loop
cmp
xchg
sub
and
inc
inc
cmp
cmpsl
out
rcll
adc
mov
and
stc
dec
loope
daa
dec
jle
rcrl
xchg
data16
push
dec
xchg
jae
outsb
mov
sbb
xorb
rcrb
enter
daa
push
cmp
into
add
pop
fmul
mov
ret
jne
jne
adc
arpl
xor
stc
aam
test
sbbb
popa
popa
ljmp
movsb
movsb
and
out
xlat
fwait
add
leave
call
daa
mov
add
mov
xor
out
inc
inc
icebp
pop
jnp
out
call
jbe
jecxz
insb
sub
out
add
jmp
test
out
push
mov
jo
cmp
lea
lahf
jae
push
outsb
add
mov
stos
mov
pusha
shrl
inc
mov
cs
addl
mov
dec
mov
jb
jl
sub
lock
mov
xchg
jmp
mov
sbb
sti
xor
je
pop
test
inc
jmp
insb
jnp
shlb
mov
enter
sbb
popa
out
pop
adc
test
leave
and
mov
jp
xchg
xchg
cwtl
and
mov
pop
dec
fcomp
fwait
test
lcall
sub
push
push
jg
les
inc
pop
jmp
fscale
test
ficoms
fdivr
mov
cmp
fisttpl
test
testl
pop
cmpsb
cld
mov
scas
imul
lods
xlat
pop
dec
cmpsb
leave
out
sbb
pop
in
jge
dec
and
add
ss
xlat
cmp
pop
adc
sbb
inc
mov
cmp
and
ds
hlt
mov
mov
mov
mov
push
iret
add
jns
scas
ss
xchg
stc
rcrb
jae
cmp
call
push
cmp
inc
push
add
lods
pop
les
xchg
sbb
dec
aas
les
xchg
stc
bound
add
xor
add
mov
or
je
mov
jl
test
push
fists
inc
daa
fsts
hlt
adc
push
mov
push
or
cmp
xchg
dec
mov
inc
inc
imul
push
jp
test
mov
xchg
cmp
jge
out
jle
in
fildll
cld
int
mov
ja
cmp
ret
imul
xchg
pop
jecxz
aaa
fs
sarl
aad
push
sbb
push
mov
xor
movsl
fs
lret
movsl
loop
mov
cmp
ds
outsb
mov
push
mov
rcrb
insb
mov
adc
mov
sub
mov
pop
stos
dec
lock
push
loopne
cmp
push
jnp
repz
mov
cmp
fdiv
jbe
xchg
sub
mov
loopne
ljmp
loop
cmp
or
sbb
int
das
cmp
sub
sarb
cmp
dec
push
iret
cmpsb
cmc
sub
aam
inc
or
dec
jecxz
push
loopne
subl
push
cmp
in
mov
adc
pop
pop
pop
ja
cmp
mov
inc
std
xchg
ds
inc
fsubs
sahf
sub
jmp
or
lea
lock
addr16
xor
lock
int3
mov
push
cld
in
push
mov
and
cltd
andl
cld
adc
insb
pusha
lock
dec
push
dec
cwtl
push
lock
pop
ss
jecxz
sti
fabs
adcb
push
shrl
enter
fsubrl
cld
dec
sbb
call
cmp
dec
jno
jmp
popf
bound
xchg
out
sbb
rol
inc
icebp
xchg
inc
sub
sub
cwtl
loop
xor
insb
js
test
sbb
jbe
pop
lret
andb
mov
cwtl
jl
or
and
mov
inc
xchg
dec
inc
pop
mov
sbbl
adc
ds
adc
xor
repz
shl
lret
imul
mov
stos
stos
lods
test
sbb
mov
dec
xor
sub
sub
xor
stos
xor
cmp
test
xor
jg
inc
pop
cmp
sub
jge
xchg
or
jae
incb
idiv
nop
aaa
push
push
icebp
xor
ds
ficompl
daa
gs
cmpl
push
adcb
cld
or
ds
movb
in
add
insb
repnz
cmp
or
shr
push
cmpsl
add
daa
fimull
or
adc
loop
jecxz
mov
bound
add
or
mov
jle
call
cmp
je
arpl
lea
scas
xor
out
mov
xchg
repz
inc
sbb
dec
leave
mov
addr16
inc
xchg
movsb
lea
sti
or
xor
int3
daa
mov
fisubs
in
cs
push
add
loop
in
or
cltd
jne
into
lahf
jae
mov
stos
push
or
mov
jns
jns
mov
xlat
xor
fisubrl
iret
inc
nop
es
je
lret
pop
cmp
in
push
sub
roll
sub
insl
fwait
push
xor
inc
xorl
les
jb
out
and
inc
jo
cmp
cmpsl
inc
cs
xchg
gs
xchg
lret
outsb
dec
xchg
repz
xlat
out
sub
call
push
fstpl
test
sbb
int
dec
xchg
lret
fiaddl
out
inc
push
gs
xchg
mov
xor
bound
sahf
sub
cmp
shl
xchg
inc
fcomps
cltd
nop
and
mov
test
sub
sahf
add
dec
adc
xor
cmp
jbe
stc
popa
shl
or
xor
in
insb
mov
sub
bound
push
cwtl
mov
jb
and
leave
inc
popf
lcall
aaa
sub
ret
jg
decl
repnz
xor
xor
xor
sbb
mov
inc
mov
inc
dec
and
cltd
adc
mov
int
shrb
out
sub
insb
sub
out
mov
mov
pushl
mov
std
adc
ljmp
pop
mov
inc
loop
std
int3
push
popf
insl
outsl
push
mov
insl
sub
orb
test
fildll
pop
or
dec
mov
in
lcall
cmove
lods
faddp
adc
mov
aas
xchg
inc
outsl
mov
inc
cmc
iret
data16
cli
ss
jmp
rclb
xor
sti
cmp
in
rorb
bound
addr16
mov
inc
sub
or
push
out
pop
ds
dec
or
loop
cmp
cmp
mov
jnp
out
push
sar
stos
and
cmc
cmp
xor
adc
repz
xchg
ror
jg
and
aad
ret
popf
mov
sbb
ljmp
ret
pushf
inc
jb
and
xor
mov
in
cmpsb
rcl
adc
mov
out
and
sbb
xchg
addr16
jmp
scas
sbb
filds
push
test
pop
jmp
movl
dec
pop
pusha
xor
mov
cli
jle
in
lea
imul
and
inc
inc
in
sbb
xlat
push
call
fdivrl
movb
fwait
push
mov
pop
dec
daa
lcall
out
mov
inc
test
add
mov
lret
fwait
sub
pop
ljmp
fs
xchg
lods
pop
push
xor
jecxz
mov
dec
shlb
mov
bound
clc
jmp
mov
test
outsl
cltd
or
push
mov
pop
add
lcall
cli
cmpsl
push
into
fstl
into
or
les
call
outsb
outsl
add
fdivs
shll
fsubl
addr16
fwait
mov
jnp
jl
xor
test
cmp
ficoml
cld
adc
jnp
das
sbb
jl
add
jae
enter
push
jae
push
aam
xlat
loopne
push
or
lds
and
aaa
sti
movsb
sub
loopne
mov
in
mov
inc
pop
rorl
cmp
and
hlt
xchg
loop
outsb
in
idivb
scas
test
push
fnstenv
orb
push
leave
dec
mov
icebp
rcrl
jbe
mov
jae
sbb
aad
loope
mov
into
and
les
add
fnstenv
xchg
int
lret
fiaddl
outsb
mov
lods
cld
int
test
ret
or
pop
stc
into
inc
lock
xor
shlb
xlat
fnsave
or
ljmp
mov
pop
xor
and
repz
pushf
mov
pop
int3
mov
js
out
mov
popf
scas
lret
int
pushw
and
arpl
insb
loop
xchg
ss
roll
push
sub
xchg
or
dec
inc
hlt
xchg
mov
stos
add
jne
cli
imul
sbbl
sahf
imul
sub
lcall
inc
sbb
jg
negb
push
stc
adc
and
out
divl
jge
into
repz
out
repnz
scas
jns
lahf
cltd
loop
inc
sar
add
sub
jnp
dec
mov
rcl
es
fisttpll
cmc
cltd
icebp
movsb
loopne
aas
sbb
sbb
cld
test
or
mov
add
or
test
ret
cli
fistpl
sbb
fwait
xchg
lret
or
xchg
xchg
dec
fldt
sbb
cli
adc
es
nop
cmp
shll
dec
inc
or
dec
fmuls
mov
push
int
xchg
adc
pop
lahf
arpl
hlt
sub
aam
mov
ja
jns
and
sbb
cltd
mov
sub
sub
lock
into
cwtl
lret
in
push
xchg
cmp
sbb
xchg
cmp
dec
xchg
mov
jb
cmp
inc
adc
insl
loop
cmc
cld
cmp
test
pop
gs
and
inc
inc
rorl
fmul
outsb
cmp
sub
out
cmp
cli
mov
mov
lahf
cmp
leave
mov
clc
mov
stc
pop
xor
scas
cli
xchg
popa
das
fwait
gs
and
jb
subb
pxor
and
rcrl
es
frstor
mov
pop
inc
push
mov
jns
inc
fwait
xor
or
enter
std
mov
push
int3
or
mov
in
sti
xchg
sbb
inc
imul
pop
movsb
jnp
xchg
sarb
stos
jnp
xchg
int3
iretw
mov
movsb
push
daa
es
imul
dec
inc
sub
add
hlt
in
fs
test
in
mov
push
std
mov
lods
adcb
mov
cmpsb
lcall
jmp
sub
inc
ret
mov
sub
mov
lret
inc
mov
aam
push
ljmp
mov
mov
or
xlat
mov
cmp
push
cmpsb
adc
addl
jnp
push
enter
xchg
stos
shlb
pop
cwtl
imul
add
xchg
cmpsb
in
mov
inc
imul
iret
jecxz
enter
pop
lahf
pop
fistpll
ss
outsl
or
cmp
cmc
and
xchg
sub
push
dec
insb
mulps
xlat
stc
sub
pop
add
jge
cwtl
sub
adc
mov
xchg
jnp
cmc
loopne
cmp
out
sub
sbb
cld
outsb
pop
inc
mov
or
js,pt
sub
fcoml
jbe
popa
rcrb
loopne
inc
dec
pop
lock
adc
xchg
inc
add
push
je
fnsave
cs
pop
das
ljmp
and
movsb
jae
add
loopne
mov
outsl
idivl
fisttpll
pop
dec
pop
incb
xchg
jno
into
pusha
pop
rcr
negb
imul
cltd
test
push
out
and
rcr
or
enter
inc
andb
jmp
rcll
mov
pop
pop
pop
in
xor
xor
gs
arpl
adc
jmp
int3
or
push
iret
adc
test
xchg
mov
div
xor
inc
and
sbb
loopne
cmpsl
dec
jl
fdiv
xor
gs
out
sbb
mov
in
pop
cmp
les
jmp
js
push
jnp
mov
push
aas
cmpsl
xchg
movsb
lds
pop
mov
mov
pop
repz
lret
mov
aaa
dec
xchg
xchg
jb
out
push
jmp
cmovl
cmpb
xchg
cmpb
push
shrb
sub
xor
js
test
mov
out
mov
and
pop
lea
push
fstpl
cmp
jge
inc
mov
ss
stos
jo
gs
std
daa
mov
xchg
sahf
test
push
xor
mov
fdivl
xchg
adc
and
mov
adc
dec
aas
orl
ljmp
lcall
jnp
pushf
pop
cmp
xchg
gs
jmp
xor
jno,pn
faddp
ja
dec
enter
in
xor
sar
jno
ja
ljmp
push
mov
sub
pop
mov
jns
fucompp
bnd
mov
cltd
fwait
jecxz
cmpsb
adc
les
cmp
xor
xor
push
pop
dec
test
ret
push
adc
push
out
push
int3
shl
push
push
mov
jg
or
push
and
in
in
add
js
pop
loope
cli
adc
stc
xor
imul
pusha
shrb
notl
ljmp
mov
repnz
out
or
ds
jle
mov
and
fcomps
sbb
inc
push
pop
fcomi
cmp
pop
rcrl
sbb
loope
adc
lcall
push
testl
pop
jnp
mov
stos
jle
cmp
mov
cwtl
xor
dec
mov
xchg
pop
adc
jb
rorl
xchg
or
adc
jg
pop
cmp
cs
decl
popf
int
stos
aas
xor
iret
add
enter
xchg
jnp
aad
cmpsb
shlb
data16
repnz
scas
dec
outsl
sbb
sub
dec
nop
pop
pop
xchg
sub
std
sahf
arpl
xor
sub
inc
mov
in
loop
aad
and
pop
insl
lahf
rorb
adc
test
sub
adc
mov
jg
cwtl
xchg
mov
xchg
xchg
dec
adc
sbb
jmp
pop
dec
mov
jb
or
or
mov
push
jp
mov
pop
sarb
ljmp
test
xor
or
stos
and
adc
push
push
add
xchg
or
clc
xor
mov
dec
js
lcall
jmp
popf
mov
add
cli
sub
popa
lret
sahf
adc
shlb
insb
cs
dec
fcompl
ss
xor
pop
pop
sbb
push
mov
ficoml
mov
pusha
jo
inc
addl
shll
sahf
cmp
fadds
scas
adc
test
divl
int3
and
aaa
lahf
and
icebp
punpckhwd
dec
mov
dec
push
cli
add
or
sub
pop
enter
xorl
rcll
adc
add
jb
adc
and
pop
push
popf
xor
mov
adc
inc
add
cld
orb
cwtl
pushf
aad
push
and
xorb
sbb
add
cmp
neg
add
data16
stos
les
dec
mov
aam
dec
psrlq
sub
popa
nop
cmp
mov
stos
push
fwait
and
mov
push
jp
xor
push
sbb
fadds
add
insb
ja
inc
inc
mov
push
out
xchg
cwtl
and
or
inc
cli
jns
push
in
pop
mov
fmuls
int3
cwtl
jo
mov
scas
test
aad
enter
mov
adc
push
xchg
jne
jbe
ljmp
scas
mov
or
xchg
in
xchg
andl
push
outsl
cmp
ja
or
sub
cmp
and
sbb
dec
xchg
shrb
cmp
push
jp
bts
mov
inc
sub
pop
xchg
or
push
das
sub
jp
daa
sbb
push
das
pusha
cmc
sbb
mov
clc
cmp
jp
mov
push
fwait
incb
inc
and
xor
add
mov
arpl
inc
test
ffreep
mov
fcmovu
outsl
and
xor
or
push
std
addr16
jg
xor
sub
xlat
cmpsb
pop
push
push
pop
orl
push
add
insb
adc
push
cmp
mov
test
lea
int
ja
fisubrs
jb
daa
out
sbb
xchg
push
jno
pop
insl
icebp
or
mov
ret
cwtl
push
mov
xorl
and
bound
fsts
sbb
icebp
inc
or
lock
clc
mov
ljmp
cld
push
fadds
lock
test
jmp
lds
xor
pop
push
enter
int3
dec
xchg
testl
mov
cli
stc
add
outsb
dec
pushf
pushf
mov
push
xchg
rorb
cld
mov
ds
inc
movsb
outsb
inc
mov
iret
frstor
loope
jge
int
xor
pop
xchg
pop
lods
pop
int3
inc
scas
sbb
cltd
lahf
mov
jae
sub
adc
sbb
add
adc
imul
aam
daa
icebp
pop
push
mov
jno
pushf
mov
or
shrb
jo
lea
rol
mov
and
rorb
xchg
cmp
xchg
shrl
jge
mov
jmp
jmp
pop
lret
scas
pop
pop
add
xor
cmp
mov
add
jl
mov
sbb
sbbb
inc
push
mov
fidivrs
fnstcw
stos
inc
ja
lds
adc
adc
push
add
sbb
and
mov
xchg
push
fmuls
call
inc
pop
lret
push
mulb
jge
rcll
add
popa
jno
cmp
push
push
cmpsb
cli
sub
in
jmp
push
je
mov
sub
in
int
or
and
sub
and
loopne
pop
xchg
stos
fwait
add
mov
adc
cld
fdivp
out
dec
fldl
inc
fmul
mov
jne
and
xchg
cmpsl
cmc
ret
shlb
aad
jmp
mov
inc
pop
aas
sarl
pop
sub
xchg
je
push
jg
jae
mov
icebp
lcall
sub
jl
cmpsb
jg
imul
mov
shlb
cmp
mull
sti
sbb
out
mov
js
and
pushf
cs
nop
bound
mov
mov
or
test
fs
jno
sahf
mov
pop
mov
cmp
adc
lcall
push
cmpsl
cmp
adc
cmpb
xor
jle
cmpsl
aam
push
icebp
shl
pop
arpl
testl
in
cvttps2pi
sub
fstpl
add
or
shll
es
push
mov
mov
dec
or
push
fs
lods
stc
aam
add
xor
adc
fsubrl
pop
adcl
fdivs
aad
dec
test
push
ja
ja
cmp
cld
pop
inc
xchg
in
call
and
stos
mov
divb
or
pop
mov
mov
xchg
mov
push
repz
mov
adc
inc
jnp
mov
lods
jno
into
int3
jg
sbb
lret
sbb
ss
enter
ret
push
push
jns
jne
push
into
push
lret
mov
test
add
cld
inc
jne
xor
jmp
cld
dec
mov
cmc
mov
ljmp
pop
cwtl
repz
in
push
mov
mov
mov
adc
ret
orb
je
fstps
ret
imul
scas
js
sbb
dec
adc
scas
repnz
cmp
pop
and
fs
mov
es
ret
and
fldenv
cmpsb
add
jnp
mov
adc
dec
loope
repnz
arpl
dec
cmpsb
lcall
mov
push
jno
mov
cmp
out
dec
mov
in
mov
inc
pop
mov
dec
push
call
stos
push
insl
leave
es
cmp
pop
xchg
inc
push
mov
mov
jecxz
loope
push
icebp
shll
pminsw
cltd
mov
sub
dec
mov
lods
jl
lret
xor
fmull
sbb
dec
xorb
ret
iret
add
cld
xor
cmp
movb
loopne
and
dec
sub
in
add
add
adc
pop
add
es
mov
dec
lods
pushf
jae
xor
inc
mov
xor
push
push
push
xlat
push
stos
sbb
je
add
jecxz
pushf
inc
lret
add
test
jp
fwait
aaa
sbb
sub
jl
add
imull
out
fnstenv
popa
sbb
adc
mov
and
lret
call
into
ret
push
jns
sbb
mov
jg
lds
cmp
pushf
cmpsl
ss
lods
mov
pop
lock
leave
test
or
out
popa
cmp
pop
fstl
dec
decl
daa
jno
xchg
subb
loope
in
or
aaa
cmp
dec
aaa
and
cmp
cmp
dec
pop
jmp
fs
xor
nop
sub
pusha
adc
bound
jbe
js
popa
jno
mov
out
mov
out
adc
lock
outsb
jns
sub
subb
push
adc
mov
mov
mov
inc
test
call
inc
push
stos
call
adc
call
das
mov
mov
sub
insl
mov
push
jge
xchg
push
aad
add
mov
push
bound
in
out
jl
shl
ljmp
inc
or
mov
jmp
cwtl
insl
sub
xor
in
jmp
add
ficoml
pop
xor
adc
es
popa
add
call
add
mov
and
or
lods
cs
jmp
scas
pushf
inc
xor
fs
into
aas
in
lcall
jmp
xchg
lods
adc
sbb
outsl
mov
add
push
mov
jmp
aam
std
or
clc
nop
in
sbb
sub
in
inc
xor
push
loopne
arpl
mov
mov
push
jnp
mov
cmp
add
stos
mov
outsl
in
scas
pop
insb
orl
add
push
out
adc
rorb
rcrl
adc
lcall
out
xor
xor
mov
xchg
fnstsw
push
aad
mov
mov
or
cs
mov
inc
xchg
jb
je
or
icebp
push
or
mov
mov
test
je
jge
fcmovbe
out
pusha
jp
sub
imul
jns
lock
lods
imul
pop
xchg
mov
int3
mov
cli
cmc
push
decb
push
and
or
data16
sbb
ds
lock
test
movsb
stc
mov
andb
mov
xor
jne
das
xchg
fnsave
fs
xchg
dec
sub
lock
out
mov
inc
mov
jle
sbb
int3
outsb
mov
add
nop
out
int3
xor
loope
cmp
out
dec
gs
movsl
push
mov
or
jl
popf
lods
ret
mov
ret
mov
repz
enter
std
lods
fcmovb
sti
negb
push
dec
mov
jbe
push
insl
add
or
dec
push
cmpsb
outsl
test
sbb
fisubrl
aad
jns
sbb
jp
psubw
inc
pop
mov
popf
adc
add
xor
sub
pop
xor
cmc
lahf
lcall
push
xor
ror
movsb
insb
ret
xchg
jae
test
lret
insb
lcall
push
inc
fcmovbe
inc
adc
push
movsb
mov
add
xchg
stos
lret
sbb
and
mov
test
sub
ret
push
adc
popf
loopne
clc
xchg
mov
jmp
icebp
xchg
aam
pop
and
call
or
repnz
or
ljmp
sub
outsb
cmp
imul
add
xlat
xor
outsb
dec
or
je
cmc
sbb
cmpsb
imul
scas
test
shr
lock
out
pop
fucomp
mov
xor
cmc
pop
and
add
fidivrs
in
lcall
adc
jle
jecxz
mov
loop
dec
lods
test
lock
enter
fcoml
sub
or
ljmp
insl
push
xor
cs
aas
lock
inc
stos
xchg
dec
loopne
mov
push
dec
dec
xor
aam
mov
mov
imul
imul
sti
xor
xor
mov
lahf
adc
pop
sbb
mov
hlt
ret
jb
push
mov
adc
aam
cld
pusha
jns
mov
pop
jmp
mov
sahf
xor
ja
mov
data16
in
sbb
repz
jnp
pop
xor
lret
pop
jbe
xor
or
repz
push
rol
sti
inc
xorl
ss
add
icebp
push
add
mov
jnp
stos
push
xchg
mov
int
dec
into
mov
push
jnp
in
sahf
dec
push
pop
push
jecxz
mov
or
jno
mov
cmpsl
imul
movsl
aam
jnp
in
inc
test
push
pop
jno
mov
ds
add
push
out
mov
pop
out
cmp
push
pop
inc
pop
call
lds
in
sbb
mov
inc
int3
mov
aaa
sub
xchg
jmp
loope
cmp
mov
mov
stos
dec
mov
nop
leave
imul
rorl
out
jmp
subl
mov
mov
push
popf
push
mov
lds
in
mov
mov
push
cmpsl
push
push
cmpsl
sbb
mov
mov
inc
mov
sbb
arpl
test
cwtl
push
data16
lea
lcall
mov
iret
pop
dec
sahf
call
inc
cli
sbb
jmp
add
testl
fistpl
mov
mov
sahf
xchg
enter
loopne
jmp
push
jle
sbb
dec
mov
cmp
clc
pop
cltd
jns
mov
or
sbb
push
cwtl
es
and
xorb
mov
push
or
mov
stos
les
test
push
fwait
out
shrl
and
inc
lea
fistpll
cmp
mov
or
repnz
js
inc
pop
mov
popf
leave
das
push
gs
push
inc
cmp
xor
cs
push
in
cmp
mov
inc
out
sti
sahf
dec
dec
test
dec
mov
mov
scas
pop
cs
push
nop
jns
push
push
ret
cmc
pop
loop
and
dec
push
cmp
enter
add
sbb
xlat
or
pop
out
mov
push
stos
mov
ficoml
cmp
pop
jns
lret
js
mov
nop
and
jle
push
popf
int
sahf
lock
adc
fs
outsb
std
lcall
dec
and
sarl
movsb
jmp
movsl
clc
rcrl
xor
xor
clc
push
in
lahf
fwait
inc
fadds
es
dec
dec
mov
test
aad
les
sub
divl
outsb
pop
lcall
andb
das
cmp
jg
sbb
repz
dec
cmp
xchg
outsl
mov
push
mov
xchg
mov
aas
popf
push
sbb
gs
cmp
inc
xchg
je
scas
movsb
cwtl
xor
jnp
fisubrl
fadds
popa
adc
pop
jmp
je
and
aaa
das
dec
inc
aaa
testb
mov
bound
aas
loop
es
hlt
incl
jge
xor
xchg
adc
sahf
xor
pop
inc
aam
fwait
negl
jb
movsb
adc
push
jg
pop
shlb
adc
movsb
ja
cld
bnd
mov
int
mov
fldl
fcoms
sbb
pop
xorb
fdivl
xchg
cmp
sahf
mov
cmp
and
xchg
inc
in
inc
icebp
out
and
push
cld
imul
jns
arpl
pop
sub
inc
mov
test
sbb
stc
outsb
cwtl
shlb
cmp
stc
and
leave
sub
cwtl
mov
shll
lcall
aas
loop
shl
push
push
pop
or
jge
mov
xchg
xor
add
in
mov
outsl
sbb
cli
int3
movsl
mov
scas
mov
jmp
xchg
lret
cmp
inc
imul
leave
shlb
pextrw
aaa
enter
setge
ret
xor
les
mov
loopne
ja
pop
aaa
push
call
outsl
outsb
inc
sahf
inc
jno
pop
xchg
add
mov
xchg
lock
xchg
ficomps
xlat
fimull
imul
lods
mov
xor
xor
nop
and
push
fldl
dec
inc
in
xchg
pop
scas
int
nop
fsts
out
stos
scas
mov
out
dec
mov
out
mov
xchg
test
lret
fidivrl
ljmp
cli
hlt
test
ror
inc
hlt
test
xchg
pop
mov
in
les
dec
fsubrs
add
fists
scas
cmp
fcmovb
into
xchg
adc
or
and
xchg
inc
xchg
imul
push
jmp
in
adc
cmp
jno
push
pushf
in
pop
and
cwtl
pusha
mov
imul
dec
jge
add
arpl
xchg
ret
sbb
mov
mov
scas
dec
xchg
rorb
push
jg
shlb
fildll
mov
pop
mov
inc
fnsave
push
and
sbb
lds
lcall
movsb
leave
sbb
imul
push
adcl
jle
aas
sbb
inc
adc
repz
sub
or
sbb
call
cmp
and
fstpl
mov
add
insl
int3
les
imul
sbb
inc
push
lods
lahf
int
push
data16
shl
or
mulb
xchg
aaa
mov
ret
arpl
cmp
push
mov
dec
jo
dec
insb
inc
push
fs
pop
dec
sbb
push
lret
sbb
rcrl
sub
movsb
scas
cmpsl
mov
xor
jb
dec
pop
xchg
fiadds
push
mov
enter
mov
and
push
xchg
test
inc
ret
fs
daa
stc
xchg
addr16
fiadds
loope
sub
bound
add
aad
sbb
adc
sub
aad
imul
fnstcw
and
out
jp
cmp
in
jmp
mov
std
jb
andb
je
mov
inc
mov
push
into
mov
sahf
test
push
cmp
test
and
loop
push
mov
mov
add
loope
dec
add
cwtl
cwtl
add
sub
pop
xor
stos
adc
lods
fdivrs
and
aas
mov
insl
adc
mov
in
movsl
add
mov
arpl
jmp
mov
rclb
fcmovbe
das
mov
adc
jg
sub
and
sbb
adc
insb
cltd
mov
repnz
jb
mov
add
and
test
adc
ljmp
cmp
jno
punpckldq
jo
js
scas
add
add
xchg
out
mov
inc
adc
jnp
jne
push
cs
hlt
dec
aam
jle
push
nop
mov
pop
xor
mov
pusha
aas
std
stc
aam
ds
xor
pushf
out
das
je
roll
lret
lcall
xchg
aad
filds
int3
rcrb
inc
sbb
dec
cwtl
call
out
in
stc
daa
test
push
cli
push
dec
je
inc
ss
adc
jge
xor
push
inc
std
push
popf
cmp
sub
imul
cpuid
cmpsb
popa
gs
xor
mov
aam
or
jns
pop
scas
loop
xchg
cmpl
cmp
jbe
xchg
aad
rcrb
mov
movsl
push
jno
scas
out
pop
pop
adc
jb
inc
adc
jne
roll
jle
daa
mov
mov
xchg
into
cmpsb
test
add
repnz
mov
sub
sbb
sar
sbb
aam
push
int3
inc
les
mov
sub
sbb
cmp
jo
sbb
loop
mov
sbb
mov
fwait
mov
pop
jecxz
push
lock
xor
mov
iret
sub
dec
add
xchg
push
jae
jb
mov
in
cwtl
mov
mull
mov
mov
scas
xchg
enter
hlt
loopne
push
repnz
out
and
push
add
adcb
aas
push
movsb
add
pop
or
mov
dec
mov
cmpsl
mov
lahf
add
mov
push
xchg
cwtl
fcompl
inc
fisubrs
mov
iret
cmp
stos
inc
xchg
inc
dec
shl
xor
pop
pop
test
sarl
leave
xor
inc
int
aam
mov
imul
ds
cltd
fcomps
divb
outsb
pop
push
add
and
add
shrl
loop
in
adc
pop
adc
imul
int3
pop
insl
mov
add
insb
dec
pop
cmp
sub
fsubr
das
xchg
mov
popl
pusha
or
mov
inc
jmp
fwait
lcall
xchg
pop
cmpsl
and
mov
fstps
iret
outsl
fwait
in
pop
fwait
fwait
in
cmp
cmpsb
mov
mov
out
daa
hlt
push
lret
inc
cmp
gs
adc
cmpsb
or
cmpsb
loop
enter
hlt
xor
test
gs
mov
notl
sub
fwait
push
mov
jb
inc
sub
data16
test
sbb
xchg
jecxz
out
xor
arpl
xor
ljmp
sbb
mov
jl
pop
jo
add
and
push
repnz
cmc
mov
jl
ds
sub
and
aad
data16
add
pop
sub
leave
in
or
icebp
cmpsb
iret
stc
cld
vmulps
mov
aaa
fnstcw
leave
pop
or
push
cmpl
pop
leave
scas
pop
or
sub
inc
mov
jo
cmp
xchg
xchg
pop
pop
jecxz
popa
insb
andl
push
dec
xchg
mov
enter
sub
lods
inc
ljmp
in
and
cltd
inc
cmp
jecxz
mov
xor
mov
repnz
int3
ret
push
mov
nop
into
bound
faddl
hlt
inc
daa
outsb
testl
loop
lods
leave
les
mov
sbb
cmpl
pop
xchg
pop
jg
dec
mov
inc
sbb
test
enter
pop
ret
outsl
cmp
cmp
jmp
cmp
and
lahf
add
outsb
inc
jl
shll
sub
sbb
adc
loop
scas
jmp
dec
inc
out
fsubrs
sbb
movsl
hlt
cmp
adc
sub
adc
dec
sbb
stos
jne
xchg
mov
mov
shlb
sbb
lds
cmp
inc
outsb
mov
out
aas
xor
pusha
stc
subl
test
insb
lret
das
cmpsb
mov
je
dec
sub
dec
lock
cwtl
xor
int3
js
cmc
add
outsl
inc
mov
lods
dec
xchg
mov
movsl
push
or
aaa
add
aaa
ret
jcxz
jne
pop
jecxz
outsl
shlb
adc
jg
sahf
add
cmp
mov
fimuls
aaa
lods
push
cmp
add
in
fists
dec
adc
cmpsb
mov
sbb
mov
ds
jmp
mov
pop
out
sub
adc
mov
mov
sub
ljmp
xchg
repnz
imul
cmp
add
sub
cmp
mov
cmp
imul
stc
mov
push
ret
inc
xor
sub
push
repnz
and
pop
imul
cwtl
jns
movsl
lcall
jb
outsb
fucomip
mov
fs
shl
xlat
loope
and
icebp
add
rorl
xacquire
mov
cld
push
dec
test
sub
xchg
sbb
arpl
js
inc
orb
out
mov
fisubrl
mov
dec
in
inc
mov
jmp
inc
jb
arpl
mov
loope
ficoml
imul
fldz
fdiv
repz
cli
inc
stos
mov
sub
mov
rcll
xor
ret
push
lods
es
mov
aas
and
push
sub
stos
lret
push
lds
dec
jp
test
hlt
test
cs
lods
fdiv
rolb
jnp
xor
bound
and
mov
and
mov
repz
jecxz
xor
xchg
hlt
in
movsl
iret
sub
jge
pusha
out
std
shlb
sub
int3
loopne
addr16
jno
jl
jmp
xchg
imul
or
xlat
outsl
stc
mov
int3
movsl
outsb
popa
jl
shrb
test
addr16
icebp
xor
xor
mov
jbe
mov
stos
fiaddl
imul
sar
loop
inc
in
xlat
es
push
inc
sub
cmp
lock
or
or
sbb
xchg
andl
dec
aad
mov
mov
test
sbb
movsb
push
jns
mov
fxch
inc
scas
int
bound
cwtl
sub
and
bound
insb
cmpsl
jno
pop
push
inc
add
imul
mov
fistpll
jle
jl
ret
shlb
push
mov
xchg
fbstp
stos
adc
xor
jl
mov
out
push
stc
cmp
push
xorl
jecxz
aas
imulb
pop
add
xor
add
std
imul
push
mov
lock
lret
dec
clc
adc
inc
sub
andb
sbb
fwait
addr16
test
adc
xor
flds
inc
rcrl
and
fistl
xchg
jbe
cmp
addl
call
es
fcoml
cmp
call
imul
fmuls
mov
stos
popf
adc
xor
push
ds
inc
addr16
insb
xchg
push
mov
lahf
cli
scas
stos
mov
cmp
fdivrs
and
ret
jmp
fcoml
cmp
and
sub
xor
andl
push
sbb
mov
flds
xchg
popl
call
mov
mov
jge
out
addl
inc
pop
and
mov
in
adc
fistl
add
dec
mov
loope
and
cmp
ds
mov
ret
sub
cltd
dec
or
imul
mov
push
outsl
cmc
test
and
sub
cli
inc
push
mov
lock
clc
jge
je
fstpl
push
jnp
in
cmpsb
xchg
xchg
iret
lcall
sub
call
js
inc
fcmovu
cli
jp
mov
bound
mov
pop
loope
xor
scas
ljmp
daa
aas
rorb
pop
js
idivb
adc
js
stc
xor
mov
jne
cmp
ret
hlt
scas
cld
cld
imul
push
mov
fildll
push
dec
and
es
hlt
mov
mov
xchg
jno
dec
mov
sahf
and
jecxz
pop
call
adc
lds
lods
cmp
cmp
lock
call
xor
sarl
out
xor
shll
sti
scas
jmp
dec
lahf
les
lods
xchg
push
movsl
mov
rclb
sub
sbb
ljmp
xchg
in
out
or
mov
inc
stc
fs
mov
jg
ds
mov
add
mov
mul
xor
ret
out
pop
mov
xor
arpl
push
cli
sub
shrb
sarb
mov
mov
sub
xchg
sarl
cltd
stos
push
jns
xchg
pop
aam
dec
cmp
hlt
mov
sbb
inc
jl
push
sub
aad
pop
stc
adc
mov
push
add
mov
adc
push
pop
aaa
sub
push
inc
adc
sbb
out
stc
in
ss
pop
test
jle
and
mov
mov
int
dec
sbb
icebp
insl
inc
out
mov
call
pop
sti
mov
xor
cli
or
or
cmp
addr16
add
inc
mov
out
add
test
push
shr
aad
sarl
nop
das
mov
xor
xchg
testb
lods
imul
cmpsl
data16
mov
xor
test
imul
dec
mov
xor
adc
neg
bound
mov
dec
jo
mov
repz
lret
out
inc
rcll
pop
cs
lahf
and
pop
testl
inc
pop
cli
or
sub
imul
aas
adc
idiv
push
aad
test
fcmovne
push
cmp
push
add
ret
pop
push
mov
movsb
sub
dec
xchg
in
push
mov
add
stos
and
mov
cmp
or
in
push
mov
pusha
pop
push
push
or
mov
cmp
push
cmc
push
xchg
and
lea
out
mov
or
out
mov
sub
adc
fdiv
cmp
xchg
sbb
cmp
pop
insb
loop
mov
clc
xor
xchg
stos
shlb
and
test
mov
sbb
jbe
sbb
rcll
push
push
mov
mov
in
sub
mov
sbb
cltd
and
mov
mov
pop
imulb
rorl
inc
pop
xchg
mov
cwtl
pusha
incl
push
jl
xor
fcmovnbe
inc
imul
sbb
sarb
fbld
dec
sbb
addps
rorb
push
rcrb
jbe
imul
mov
or
inc
jle
push
inc
mov
cmp
pop
int3
jecxz
lret
insl
pop
fwait
mov
push
cld
scas
int
test
lret
add
cltd
les
xchg
jns
sub
mov
mov
and
mov
fdivrl
and
cld
imul
fs
insl
cmp
and
fisubs
imul
fbstp
repz
iret
out
add
dec
cmp
sti
test
scas
mov
adc
pop
pusha
mov
clc
mov
push
pop
mov
ret
fsubrp
test
orb
inc
xor
or
adc
pop
cmp
mov
sub
lcall
insl
hlt
and
clc
in
lahf
call
loope
mov
stc
pop
bound
neg
mov
xchg
div
aas
jbe
std
and
test
nop
hlt
cwtl
repnz
jae
or
in
cmp
dec
mov
cmc
popa
or
jl
jmp
inc
out
jno
and
loopne
adc
loopne
push
shrb
mov
sarb
notb
pop
hlt
xchg
dec
fldt
divb
pop
jo
movsb
or
inc
test
cmp
xchg
adc
push
adc
xchg
cli
push
lcall
push
test
xlat
mov
cmpsb
das
push
dec
and
cmp
mov
popa
shll
dec
lcall
pop
fdivrp
dec
decb
mov
push
aas
push
add
lahf
faddp
mov
inc
ficoml
add
test
xchg
xchg
pop
xor
outsl
js
imulb
stc
xchg
lahf
mov
fcoml
sbb
popf
jno
subb
xlat
add
in
pushf
sub
pushf
movsl
dec
cs
xlat
xchg
fnstenv
cld
iret
fmull
fcomps
inc
mov
js
cld
movsb
or
dec
mov
sbb
pop
mov
sub
enter
shrl
xor
mov
mov
out
arpl
lahf
mov
lahf
inc
jecxz
push
mov
mov
jb
cmpsb
data16
loopne
pop
and
fidivrs
sar
sub
frstor
push
sbb
cmpsl
ss
out
mov
xor
or
sti
cmp
rcll
cmp
pop
inc
lock
test
iret
arpl
loop
iret
xor
push
push
and
into
and
pop
lret
inc
stos
je
cli
and
js
cwtl
push
dec
or
les
ljmp
call
ja
pop
std
insl
stos
sub
fildl
and
sub
fistpl
push
movsb
xchg
mov
and
add
and
cmpsb
shrl
mov
sarb
dec
test
nop
jl
divl
cmp
inc
stos
xor
adc
jb
push
movsb
pop
mov
aas
jb
movsl
inc
dec
push
loop
pop
mov
test
lcall
mov
xchg
mov
mov
fdivrs
aas
or
fldenv
inc
loope
push
aaa
pop
mov
adc
and
xchg
xchg
popl
sbb
jmp
aam
daa
call
push
pop
leave
outsl
shll
incb
mov
xchg
insb
hlt
int
int3
imul
sbbl
cmp
or
jb
nop
pop
cmp
jmp
push
pusha
in
xchg
or
std
mov
popl
ret
js
mov
scas
dec
ljmp
push
sub
out
mov
jns
cs
mov
sub
es
or
push
mov
xchg
and
inc
in
xor
ret
stos
fadd
aam
punpcklwd
jns
sarb
dec
lret
fisttpll
or
or
adc
mov
adc
scas
adc
push
mov
mov
fiadds
inc
sub
test
mov
cmp
imul
aam
jb
fmuls
inc
pop
dec
sub
jo
das
clc
push
cwtl
in
mov
shlb
int3
sbb
fisubrl
ja
rclb
mov
outsl
loopne
cmpsl
inc
mov
inc
dec
and
ror
sarb
rcrl
popf
jae
push
sbb
inc
push
push
into
cmp
hlt
add
pop
lock
cld
data16
mov
das
xlat
cmp
jl
mov
loopne
pop
ret
fstpl
std
out
addr16
cmp
test
js
and
sahf
mov
das
mov
popf
test
pop
or
and
xor
add
imul
in
dec
dec
push
fs
xchg
push
dec
cld
add
sbb
and
in
mov
loope
into
int
icebp
inc
xchg
xor
or
ljmp
aaa
sbb
jne
jno
mov
ret
and
into
insl
add
inc
adc
mov
jge
adc
aad
cmpsb
pop
dec
pushf
dec
pop
or
and
dec
inc
aad
shll
cltd
or
ljmp
jecxz
push
fimull
int3
scas
mov
xor
sub
call
fcompl
pop
insb
outsb
xor
push
shlb
xor
lahf
mov
mov
xchg
lock
mov
inc
add
loop
or
fcoms
sahf
jno
in
sti
shrb
mov
sahf
iret
fs
mov
jmp
repz
in
push
add
or
cli
stos
into
sbb
sub
xor
aas
cmpsb
sbb
sbb
outsb
inc
into
sbb
mov
popf
andl
xlat
ljmp
jns
push
cmc
jle
addr16
stc
ret
mov
mov
and
daa
lcall
int
das
mov
data16
inc
orl
cmp
hlt
or
sub
sub
mov
int3
and
test
adc
sub
jmp
cmp
and
mov
push
fprem
lods
xor
out
sti
mov
jae
lcall
mov
mov
pushf
or
or
shlb
or
fcomps
and
ret
cmp
in
inc
dec
mov
cmp
dec
orl
arpl
add
sti
adc
cld
ss
jmp
pop
ds
mov
xor
jns
enter
cmp
ficomps
cmp
dec
in
jnp
mov
push
xchg
das
mov
ds
stc
jb
fdivp
pop
lret
or
pushf
dec
xor
outsb
outsb
add
and
outsb
xor
mov
dec
stc
scas
sub
lahf
push
pop
mov
in
adc
xor
sub
mov
cmp
in
xor
das
cli
add
push
notb
gs
pop
rorl
sarl
xchg
dec
sub
jb
jo
inc
pop
aad
cli
sbb
push
mov
loopne
int3
dec
mov
test
popa
test
jns
rcrl
mov
inc
rcr
xchg
dec
sahf
stos
fildll
or
sub
into
lds
xor
negb
or
cmp
mov
cmp
out
or
xchg
sub
sahf
lock
outsl
popf
ret
sbb
jge
stos
inc
mov
std
and
jb,pt
or
ficompl
mov
aad
mov
mov
call
jge
sbb
or
mov
xor
out
mov
mov
xor
xor
in
adc
mov
inc
aas
cwtl
iret
mov
ret
and
push
popa
insl
push
lret
into
jae
sbb
and
pop
stos
push
dec
inc
call
dec
jb
pusha
push
int3
bound
fwait
xor
inc
cmp
sbb
fs
mov
sub
call
pop
aas
flds
mov
insl
stc
adc
jo
lds
mov
push
cld
adc
out
pop
je
ret
jg
hlt
mov
mov
lret
aad
inc
popa
inc
sub
jl
mov
push
stos
xlat
and
mov
jle
sahf
push
outsb
dec
mov
js
adc
stos
push
push
hlt
xorl
jns
xchg
sahf
inc
inc
and
sar
xor
scas
call
mov
lock
loop
push
adc
cltd
dec
jb
popf
stos
cmc
mov
test
xor
and
fldl
pusha
sahf
icebp
push
mov
jo
mov
js
mov
xchg
xchg
xchg
in
inc
fldl
adcb
repz
shrl
add
cmpsb
mov
mov
fnstenv
inc
leave
pop
xor
jecxz
sbb
cmc
add
cld
xor
mov
dec
xlat
shrb
jbe
leave
psraw
lahf
push
aaa
frstor
push
jle
mov
stos
sub
popf
sub
jle
push
xlat
fnstcw
push
xchg
aad
repnz
jge
popa
addr16
ss
inc
ret
aam
das
mov
out
insl
gs
in
add
xor
cmpsb
push
sbb
ljmp
neg
mov
out
sbb
cmp
cs
jmp
pusha
lods
jne
std
pop
lock
sub
jbe
test
mov
mov
inc
orl
enter
int
jne
ja
pop
lret
lods
ja,pt
and
repz
test
test
mov
in
add
xchg
dec
js
enter
pop
ret
aaa
push
insl
push
into
pop
mov
cwtl
jo
mov
imul
test
jmp
lds
dec
mov
mov
jle
pop
adc
and
in
xchg
sbb
ss
dec
xor
and
in
cmpsl
cmp
fsubrl
nop
xchg
mov
fisubrl
stos
mov
pop
jae
loop
adc
sbb
jno
stos
data16
pop
sbbb
mov
jb
add
or
pop
push
pop
mov
mov
add
fcoml
dec
loopne
and
sub
in
sbb
insl
push
ds
lret
push
outsb
inc
xchg
xchg
rcll
xor
mov
idivl
loope
shlb
aaa
sub
aad
mov
and
cmp
or
pop
jg
cli
mov
lret
adc
dec
push
enter
outsb
mov
lds
js
pop
pusha
adc
mov
out
mov
xchg
mov
jge
push
sarb
outsb
ja
loope
ljmp
popf
out
and
out
xor
mov
inc
adc
and
lret
fsubrl
inc
fildll
fnstsw
cmp
into
fs
dec
dec
pop
pop
int
adc
inc
pop
das
adcl
scas
sbb
push
fidivrl
xchg
int3
xor
lods
jns
xlat
adc
icebp
jle
sti
cli
pop
xchg
cmpsb
jle
dec
jae
push
adc
int
stc
xor
sub
sub
mov
and
sbb
push
enter
inc
psrlq
push
addr16
dec
sahf
cmp
mov
cli
and
xlat
jle
insl
in
sbb
push
decl
adc
and
pushf
fs
inc
pop
mov
sub
sub
sub
mov
das
pushl
or
mov
negl
pusha
jmp
or
mov
mov
push
in
pop
pop
jbe
cmp
and
mov
daa
decb
int
or
out
fbstp
aad
push
adc
jbe
lret
mov
cmp
rcr
sahf
arpl
dec
leave
les
scas
outsb
xlat
ss
addr16
outsb
push
lret
test
xor
mov
int3
nop
inc
add
sub
lods
in
pop
cmpsl
and
nop
jne
insl
mov
push
jle
das
or
xchg
pop
xor
sbb
jp
popa
fwait
test
jne
lret
mov
xlat
dec
iret
sbb
aad
icebp
aaa
xor
jbe
jg
test
sti
mov
jecxz
add
xchg
nop
hlt
les
dec
loop
xchg
shlb
xchg
icebp
lahf
xor
mov
jo
jecxz
test
cld
cmp
mov
pop
dec
xlat
out
and
jo
jp
clc
test
ljmp
push
lret
mov
lcall
das
into
xor
jge
pop
sub
decl
cmp
or
lret
outsb
mov
daa
rcrb
xor
mov
ret
fisubrs
pop
mov
pop
bound
or
icebp
xor
adc
mov
cmp
jo
jo
std
ret
lods
dec
fs
inc
jl
lcall
incb
jg
aam
sti
pop
rcl
and
mov
lahf
jge
and
enter
pop
lcall
les
sub
mov
xchg
or
scas
mov
ja
es
mov
test
rol
js
mov
mov
mov
iret
lods
or
mov
push
aad
and
mov
push
movsl
sub
cmp
mov
ja
shr
adc
lods
out
stos
andb
ret
punpcklwd
pop
pop
jnp
imul
insl
ds
pop
cli
insb
mov
mov
jge
xchg
jge
mov
add
push
inc
pusha
sub
xchg
push
jmp
cld
popf
test
out
int
push
fwait
sbb
mov
inc
stos
pop
push
stos
addb
icebp
inc
fildl
hlt
imull
addl
xchg
push
nop
push
push
fisubrs
movsb
cmp
cmp
fsubs
in
lret
lods
sti
xchg
js
push
aas
dec
mov
sub
mov
mov
rorl
ss
add
dec
call
inc
in
roll
idiv
mov
pop
repnz
or
rcll
loop
movsl
outsb
iret
call
lea
testb
sbb
cmpsb
xlat
fnstcw
imul
jbe
in
lcall
icebp
mov
or
dec
aas
mov
addr16
mov
cli
mov
pop
xor
mov
jg
pop
adcl
jmp
bound
mov
adc
enter
mov
jns
adc
jo
mov
ljmp
and
movsl
sahf
jmp
out
addr16
sbb
inc
pop
outsl
pop
jg
sbb
sbbb
xchg
pop
and
imul
cmpsb
pop
push
mov
push
mov
inc
and
mull
push
inc
in
xor
xchg
mov
call
in
add
cmpsl
movsl
das
mov
and
lds
pop
repz
jne
sbb
adc
mov
sbb
js
in
shlb
xor
out
xlat
sub
inc
push
scas
or
ret
outsl
and
mov
out
ficompl
jo
jl
inc
mov
fnstsw
mov
and
cmp
arpl
or
enter
in
xorb
lret
sub
xchg
lods
outsb
aad
lea
popa
mov
repz
cli
push
push
mov
and
lahf
mov
ss
in
sbb
mov
jb
testl
mov
pop
and
sub
sub
push
orb
loopne
adc
xorb
xor
lret
cmpl
gs
jmp
add
lock
xor
icebp
pop
jnp
shlb
fstpt
iret
jb
insb
mov
cmp
iret
xor
dec
sub
movsb
lds
xlat
xchg
mov
and
sbb
neg
jo
aam
sarb
fwait
sbb
pop
aaa
fwait
inc
loopnew
or
sbb
mov
test
lcall
xchg
je
lcall
shll
pop
clc
adc
xchg
sbb
faddl
shl
std
push
or
out
pop
sub
imul
pop
sahf
mov
mov
add
pushf
xchg
and
dec
mov
dec
add
popf
adc
ficoml
xor
in
ret
cmpsb
mov
leave
dec
pop
aam
mov
add
pop
adc
xchg
xchg
aaa
fnstenv
xor
fs
mov
sbb
mov
rol
rcl
sar
inc
cmc
in
and
mov
int
outsl
push
mov
daa
sub
adc
or
or
test
loopne
jno
cmpsl
jg
adc
subl
lret
xorb
jmp
push
mov
dec
repz
mov
xchg
adc
sub
pop
mov
insb
push
out
loope
imul
mov
sahf
dec
mov
out
pop
mov
imul
fmul
xchg
aas
fstl
pop
cmpsb
imul
add
pop
xor
mov
loopne
lret
pop
rcrl
scas
leave
fucom
outsb
imul
out
pop
or
jb
daa
xchg
push
pushf
out
push
xorb
cmp
jb
add
pop
sbb
cmp
pusha
cmp
pop
adc
add
lret
rcll
dec
std
mov
and
clc
xor
xchg
sub
mov
out
cltd
xchg
repz
fs
cmpsb
fldt
push
inc
out
mov
ficoms
push
push
dec
xor
mov
fistpll
mov
arpl
into
add
vdivsd
and
add
cmp
mov
xchg
mov
lcall
fst
push
iret
push
xor
sub
jp
xor
push
sbb
ficoml
or
mov
or
movsb
pop
inc
sbb
pop
jno
iret
cmc
daa
push
xchg
rorb
mov
inc
insl
fnstsw
xchg
inc
bt
mov
cmp
xchg
xchg
jae
inc
push
gs
add
aad
mov
adc
lcall
or
scas
xor
mov
data16
insb
mov
mov
push
lock
ret
incb
dec
cmp
bound
iret
xchg
testl
dec
mov
stos
cmp
mov
insb
push
lret
pop
jo
push
jmp
adc
lds
jmp
dec
sbb
push
cmp
data16
aaa
nop
ret
cmpsl
or
jb
mov
cwtl
leave
cli
xor
xchg
push
popf
gs
cmp
scas
jmp
shrb
inc
sbb
xor
gs
mov
movsb
movsb
jo
fnstcw
iret
shrb
sbb
outsl
mov
push
mov
add
xor
sbb
add
int3
xchg
pop
dec
sbb
lods
add
in
adc
cmpl
fwait
aad
pusha
jno
loopne
out
test
ja
mov
mov
xor
cmp
outsb
imull
pop
or
jg
int3
jl
push
xchg
xchg
fwait
sub
je
sbb
mov
stos
pop
jmp
sub
jb
out
xor
lcall
pop
aas
xor
dec
cmp
sub
push
jecxz
pop
pusha
clc
jno
aam
mov
popf
in
test
cmp
lods
xor
repz
call
insb
filds
cmpsl
jmp
add
repnz
test
loope
sbb
push
fldenv
insb
scas
insb
xchg
pop
clc
add
xchg
and
mov
pop
jl
shlb
fisttps
add
pop
cltd
xchg
imul
push
roll
movsb
push
fs
out
add
movsl
ja
cltd
push
scas
push
adc
xchg
xchg
cmp
adc
pop
xor
lahf
and
cmp
stos
jge
pop
mov
stos
sub
lret
xchg
push
outsb
fucomp
sarb
add
les
bound
inc
push
test
movsl
jnp
fs
xor
pop
lods
sub
out
daa
cmp
out
std
shrb
and
cmp
push
ret
dec
sbb
jp
cmp
jb
fcmovnu
jle
fwait
mov
mov
xchg
push
add
addb
fwait
adc
out
adc
sub
jbe
push
imul
loope
fmul
mov
sbb
rcrl
xchg
daa
fsincos
shll
push
mov
aam
jbe
jge
and
in
xchg
in
aaa
push
push
add
scas
test
ficoml
jecxz
hlt
xchg
inc
pop
shlb
pop
sub
push
and
xchg
jb
dec
lahf
push
sarl
dec
ljmp
sarl
xchg
insb
mov
js
or
sbb
inc
jp
add
ret
jp
inc
test
leave
sub
sbb
insl
lods
dec
icebp
insl
xchg
xor
add
sub
pop
mov
mov
adc
stos
imul
xchg
mov
call
or
pop
shrb
test
cmp
jnp
ja
xor
adc
nop
jmp
mov
into
js
or
outsl
inc
loope
add
sahf
icebp
fisubrl
lret
jbe
fiadds
mov
mov
repnz
push
jp
cwtl
sub
xor
sbb
adc
pop
in
test
arpl
loop
mov
add
test
mov
xor
or
xchg
imul
imul
popl
dec
test
and
in
jb
pop
cli
sbb
sbb
es
mov
pop
inc
mov
adc
out
jg
scas
dec
jmp
mov
adc
cmp
xor
sbb
sbb
add
or
xor
or
in
xlat
xlat
shl
nop
je
push
mov
mov
pop
mov
sti
add
scas
aad
ficompl
insl
mov
repnz
into
adc
or
jne
andb
addr16
lea
popf
aam
repz
jmp
ret
mov
popf
inc
movsb
pop
out
bound
push
leave
ja
cmpsb
mov
sbb
aas
mov
lret
and
das
add
enter
test
repz
push
mov
decb
iret
xor
xlat
xor
mov
sti
icebp
das
jno
mov
mov
mov
pop
dec
fisubrs
jbe
jae
mov
add
jae
cmp
mov
ret
test
cmpsb
xor
test
call
dec
sbb
add
sub
int3
xchg
and
dec
inc
inc
xchg
jge
xchg
jo
loope
cmp
fdivp
jmp
mov
and
or
and
mov
in
pop
fwait
ret
mov
iret
cmp
aaa
fadds
int3
dec
inc
dec
inc
movsl
mov
inc
imul
ret
pop
repz
imull
sub
testb
pop
insl
sbb
nop
fistps
lahf
add
xor
hlt
std
fucomp
int3
or
mov
push
add
mov
data16
data16
xchg
or
loop
and
mov
int
inc
inc
inc
xchg
sbb
mov
dec
pop
mov
and
push
dec
jl
sbb
mov
ja
cs
aas
pop
fs
out
jno
loop
divb
mov
add
cmp
pusha
lahf
push
dec
test
cmp
xor
or
sub
stos
dec
and
mov
xor
ficoml
mov
adc
pop
and
xor
fs
lret
or
jo
mov
fwait
cld
rclb
inc
inc
xchg
jmp
sbb
sub
aas
movsb
xchg
fsin
add
fcoml
or
mov
mov
xchg
jg
aad
mulb
mov
aad
or
xchg
fsubs
cwtl
mov
leave
jo
inc
or
daa
mov
jg
or
cmp
decl
or
cmpsb
pop
ret
sbb
push
outsl
rolb
xor
in
hlt
loopne
sub
xor
xchg
sbb
and
mov
push
lods
mov
cmp
fsubr
or
pop
shlb
cmp
shlb
insb
rolb
dec
or
sub
int3
sbb
pop
adc
lret
jg
mull
jno
aam
cmp
call
fdivrs
cltd
adc
ljmp
ljmp
subb
jo
fwait
xor
inc
clc
aam
loop
popa
jle
es
sub
bsf
inc
inc
inc
xor
push
push
ds
sbb
int3
das
sbb
dec
sub
mov
icebp
jge
mov
adc
xchg
ficoml
adc
push
sub
xchg
mov
xchg
hlt
xchg
inc
pop
ja
jae
add
dec
sarb
fsubrs
adc
daa
cwtl
imul
dec
mov
mov
lcall
rol
int3
fdivrs
dec
adc
outsl
out
mov
and
lds
mov
lahf
subb
cmc
adc
daa
and
mov
mov
dec
imul
xchg
roll
lcall
adc
clc
jl
out
loopne
adc
test
stc
fisubs
xchg
fs
fwait
inc
out
and
repnz
sbb
lret
jmp
mov
sbbl
sbb
jl
int
adc
test
dec
movsb
ficompl
andb
mov
daa
sub
inc
mov
sbb
sub
out
test
insl
ss
jno
fdivp
push
add
mov
cs
jae
call
pop
sbb
cli
lods
fcmovnb
leave
mov
add
xlat
mov
shll
jae
cmpsl
mov
cmpl
add
das
cld
leave
insl
sub
jp
or
add
repnz
addb
insl
or
mov
sub
and
lret
sbb
lods
mov
cltd
and
ds
jecxz
jmp
pop
xorb
movsl
and
cmp
stos
inc
adc
leave
bound
pop
xor
out
or
push
pop
jns
jne
sbb
fcoml
jae
cli
out
sub
fmull
arpl
or
inc
adc
jae
sti
adc
push
aas
mov
jg
aas
xor
push
les
iret
mov
and
mov
adc
mov
jbe
mov
lds
roll
mov
rcr
lcall
aaa
cltd
popf
push
adc
movsb
push
inc
add
adc
ja
mov
and
dec
push
sbb
mov
inc
pop
push
add
ret
xor
pusha
ljmp
push
in
je
mov
ds
stos
cld
insl
jbe
pop
xor
mov
jne
jne
mov
call
repz
pop
out
lock
push
add
sub
in
and
imul
sbb
cmpsl
aam
sub
imul
mov
push
ja
jne
sub
test
leave
dec
sub
xchg
xchg
pop
sub
pop
dec
insb
shufps
inc
jg
out
mov
push
or
sub
addr16
mov
mov
sbb
dec
les
add
insl
lea
cwtl
cmpsb
in
cmpsb
xchg
xchg
subb
adc
sbb
mov
xor
pop
loop
sbb
dec
out
sub
xchg
pushl
mov
iret
movsb
imul
push
sub
ret
sti
mov
fisubs
xchg
pop
shlb
fwait
cmp
push
jmp
incl
rcr
or
aaa
repz
jo
loope
and
loop
xchg
dec
xor
mov
mov
mov
stos
mov
xor
dec
lods
sahf
or
stos
xchg
push
scas
hlt
dec
pop
xlat
pop
inc
sahf
mov
push
adc
and
enter
stos
inc
push
xor
movd
ret
pop
adc
push
xlat
push
scas
xchg
loopne
add
cmp
daa
inc
lret
fldl
iret
pop
adc
mov
fisttps
mov
js
sbb
dec
and
fbld
bound
out
sbb
jb
add
cmpb
movsbl
call
decl
int3
add
jecxz
jne
dec
mov
loopne
inc
aaa
mov
xchg
cmc
sbb
dec
sti
outsb
outsl
pop
mov
je
dec
lock
imul
xor
jae
or
std
arpl
mov
or
lods
mov
nop
je
icebp
popa
out
dec
enter
push
loope
lahf
and
fdivrl
cwtl
in
in
shll
cld
cli
xchg
push
aas
push
dec
cmovae
jae
lret
outsl
imul
push
dec
lds
inc
insl
inc
es
or
cs
inc
xor
inc
loop
xor
cmp
fisubrl
pop
in
mov
out
cld
mov
cli
mov
clc
mov
adc
xchg
adc
or
pop
sbb
jp
shr
aaa
cmpsb
enter
push
pop
out
cmpl
jae
jno
divl
setbe
jbe
imul
lcall
xor
add
pop
bound
cmp
or
mov
dec
test
xor
shlb
and
xchg
or
sbb
jle
xor
sar
jns
pop
xor
jl
addb
xchg
subb
and
cmpsl
cmpl
and
inc
in
push
ffreep
and
inc
pop
inc
jmp
rcr
out
fsubs
insb
clc
jbe
cltd
lahf
test
repz
cmpsb
int
mov
mov
insb
mov
adc
daa
neg
cwtl
das
clc
sub
cmp
adc
push
pop
ss
aaa
stos
insl
sub
dec
push
sbb
push
mov
xchg
inc
fwait
adc
mov
jp
test
sarl
sub
mov
sub
cltd
iret
cmp
pop
sbb
imul
int3
pushf
test
fwait
mov
mov
push
ljmp
add
push
pop
stc
mov
movsb
aas
pushl
mov
call
aaa
jecxz
mov
iret
loope
or
test
lret
mov
mov
add
dec
loope
js
aad
lock
xorb
xor
dec
sbb
xchg
xor
mov
sbb
pop
push
jnp
insl
sub
adc
nop
daa
scas
or
cmp
out
pop
and
sbb
pop
ud1
adc
loope
aam
mov
sub
scas
push
adc
pop
jo
enter
pop
ret
fchs
mov
loope
pusha
jnp
add
adc
sub
stos
sahf
or
pop
bound
aas
leave
add
sub
ret
mov
cli
das
rcrb
add
and
or
add
xchg
push
or
and
xor
fmull
adc
push
int
push
cmp
mov
fisttps
lock
scas
repnz
pop
jg
addr16
add
lcall
dec
mov
jg
push
add
jbe
ljmp
sbb
mov
pop
sahf
rcrl
rcl
lret
jg
mov
xchg
pop
push
inc
mov
dec
dec
dec
addl
add
ret
mov
cmp
push
mov
cmpsl
and
push
or
push
cmpsb
rolb
xor
adc
push
loope
jnp
inc
repz
outsb
mov
out
rcrb
fcomps
adc
loope
clc
cmp
cmpl
xor
sbb
pop
cmpsb
push
lcall
lods
rcr
dec
cli
jmp
sarb
xchg
inc
es
mov
pop
pop
leave
lcall
dec
push
in
test
xlat
loop
xor
jne
in
or
fistpll
lret
mov
xchg
sbbl
sub
ret
daa
xorl
mov
lock
sar
insb
push
neg
jae
shl
sbbb
cld
add
imul
stos
outsb
or
cmp
cmp
xchg
loopne
mov
mov
and
add
xor
inc
mov
xor
imull
xor
add
pop
cmp
pop
and
out
cmc
adc
push
push
xlat
pop
push
call
lahf
in
leave
dec
mov
mov
dec
movsb
out
lods
std
out
leave
ljmp
mov
push
or
mov
subb
int3
jg
mov
dec
dec
add
hlt
and
mov
loop
mov
and
ljmp
stc
pop
cmpl
stc
outsl
daa
rolb
cld
ljmp
mov
push
fistl
sub
loope
aaa
push
jp
pusha
or
fisttpl
and
mov
imul
int3
xchg
cmp
sub
andb
mov
bound
pop
enter
pushf
jns
negb
or
xor
aas
jl
cmpb
mov
push
enter
lea
shr
pop
stos
popa
mov
ljmp
sbb
mov
adc
mov
dec
pop
mov
cmpsl
mov
aad
cltd
dec
stc
cmp
adc
mov
cs
mov
dec
or
dec
jge
insl
test
pop
mov
bound
aad
inc
jl
lret
cmp
push
add
mov
in
rcr
sub
push
adc
lods
mov
es
push
mov
enter
dec
gs
jge
adc
fsubs
gs
inc
or
test
rcrb
sub
fsubr
into
mov
push
repz
pop
ljmp
movsb
das
mov
and
sbb
fdiv
fst
mov
fcom
imul
push
add
out
jno
pusha
pop
pop
mov
stos
call
lods
mov
test
mov
sar
xchg
rcll
sbb
sub
nop
pop
leave
lahf
divb
mov
add
push
fwait
imul
cmpsb
pop
sub
ret
mov
and
addr16
lds
jno
lds
and
sub
testb
and
xchg
jmp
push
cmp
cs
inc
daa
out
fisubl
push
xchg
popa
mov
ret
sub
or
sub
inc
mov
pop
and
cmp
pop
out
nop
cli
fld
sbb
dec
cltd
pop
ljmp
jb
jmp
mov
outsl
adc
push
xlat
xchg
rcrl
cmc
or
scas
cmp
mov
mov
in
je
fwait
sbb
inc
call
push
xchg
out
lret
jne
orb
jp
repz
lahf
movsl
or
imul
cld
mov
dec
test
sub
loope
jg
mov
data16
pop
nop
aaa
lods
stc
push
inc
xchg
bsf
xor
hlt
inc
sbb
push
and
and
cmp
dec
repz
adc
outsl
pop
xor
in
push
dec
popf
fildl
jb
lret
loopne
ret
inc
adc
imul
and
call
roll
xchg
fdivl
cli
addr16
mov
cli
xchg
jb
fidivl
push
jno
push
inc
jp
sub
scas
dec
mov
pop
repnz
pop
mov
push
imul
cmp
ds
out
and
push
pop
mov
jne
adc
inc
add
ja
cmp
sar
shr
jbe
int3
mov
mov
dec
out
les
mov
sbb
pop
push
jb
rcll
mov
add
leave
push
cmp
aaa
fs
stos
hlt
xor
lock
out
notl
mov
xlat
gs
testb
in
lret
loope
aam
jbe
sbb
data16
cld
mov
test
int3
cmp
add
jnp
pusha
add
lret
outsb
xorps
das
in
or
fsts
je
dec
adc
out
push
jns
mov
in
xchg
push
adc
mov
iret
push
mov
std
inc
xchg
ds
pop
andl
insb
mov
jge
sbb
arpl
imul
inc
clc
out
stos
jbe
jne
loop
fcomp
clc
fdivs
shll
test
ret
lcall
aaa
jp
or
lret
pop
push
jg
out
pop
cmpl
repnz
in
popf
int
mov
sbb
mov
cwtl
mov
sahf
jmp
fsubp
cld
sbb
sbb
cmp
in
mov
jle
nop
repz
mov
mov
pop
dec
sbb
xchg
cld
clc
xor
cmp
mov
mov
sub
mov
adc
ljmp
or
daa
jbe
loop
mov
or
or
or
or
jae
das
es
jmp
pop
mov
lods
dec
ret
int3
jns
out
push
fsts
mov
bound
add
sbb
jb
je
repz
mov
inc
ds
add
je
adc
xor
lret
iret
inc
insb
cwtl
es
mov
push
mov
sub
and
push
lcall
fsubl
outsl
mov
mov
inc
les
mov
inc
and
and
adc
mov
rcl
add
or
xor
sub
bound
dec
sti
test
cmpsl
in
popl
sbb
jle
dec
clc
sub
int
das
lcall
add
dec
ljmp
or
lods
push
std
addr16
xor
int3
cli
lods
pop
jmp
or
or
xor
movsb
add
jne
fistpll
decl
lcall
pop
lret
andl
mov
loopne
sti
vmmcall
rolb
std
pop
jecxz
mov
inc
sub
or
movsb
fstpt
inc
or
out
inc
mov
mov
add
mov
sbb
pop
fs
xchg
in
xchg
mov
or
mov
dec
test
ss
call
pop
mov
mov
or
mov
into
jae
mov
add
fwait
mov
cs
mov
iret
fwait
addl
jp
inc
mov
frstor
iret
cltd
mov
pop
jo
mov
push
ds
icebp
fbld
xchg
scas
jns
ss
sbb
outsb
shrl
das
or
and
cmp
popa
pop
xor
gs
int3
lret
test
xor
mov
add
dec
push
xchg
cmc
test
fwait
mov
mov
outsb
or
mov
das
out
or
mov
jle
inc
jge
jp
daa
pop
cmp
lcall
popf
sub
add
cmp
cmp
or
add
in
repz
fmuls
pop
sub
out
das
xor
mov
add
jae
clc
jbe
loopne
and
xor
scas
xchg
mov
lcall
sub
js
shll
dec
xchg
cs
hlt
js,pn
mov
xchg
shrb
xchg
push
ficoms
pop
pop
pusha
push
xchg
dec
imul
loop
and
inc
mov
jb
jmp
rclb
pop
iret
std
das
sahf
cmpsb
jns
aad
cmp
cmp
movsl
and
add
add
lea
in
jne
cltd
lds
fnstsw
cwtl
lret
loopne
pop
xchg
and
mov
loop
adc
ret
rcrb
sub
fdivr
push
les
nop
fs
push
and
fxch
pop
js
gs
cli
sub
es
xchg
iret
lds
pop
inc
xchg
ret
mov
in
push
dec
insb
popa
inc
xchg
inc
xchg
or
sbb
mov
xchg
xchg
pop
mov
xor
jmp
cmpsl
fildll
xlat
dec
dec
orl
jbe
in
cmp
es
iret
lds
in
in
push
cld
sbb
fistl
sbb
fsubr
mov
or
inc
mov
mov
mov
sub
cmp
inc
shl
xor
jae
mov
mov
xor
fdivl
mov
pop
divl
data16
xor
mov
mov
pop
xchg
shll
fnstcw
lods
out
xchg
inc
fiaddl
xlat
xchg
jl
fsubs
mov
cld
jl
lahf
icebp
cli
dec
add
insl
xchg
jmp
lret
dec
cmp
movb
stos
or
stos
add
dec
add
sbb
push
xchg
imul
movsl
arpl
dec
or
cmp
les
sbb
inc
stos
mov
rcll
stos
dec
push
fidivrl
lcall
test
mov
mov
dec
in
mov
mov
or
jg
mov
stos
fisubrl
out
or
dec
aaa
mov
or
orl
push
inc
enter
fnsave
aam
xorl
add
push
in
and
push
push
mov
test
fistpl
rclb
inc
xor
aas
xchg
or
mov
insb
ja
mov
dec
scas
xor
or
pop
fisttpl
int3
sbb
out
inc
mov
addr16
inc
enter
pop
mov
cmp
aad
int
jno
dec
add
sti
cltd
xchg
xor
cmp
aaa
in
and
in
adc
outsb
sub
test
cmp
fstpl
repnz
jb
nop
mul
cmp
push
mov
test
jge
enter
call
sub
jns
pop
int
cmp
lcall
sbb
jo
sahf
or
mov
adc
cmp
xchg
lret
sbb
cmpsb
lret
popa
shll
bound
and
idivb
push
fwait
add
roll
les
adc
out
jl
aas
repnz
dec
pop
bound
add
adc
push
sarb
gs
icebp
lret
ror
pop
in
out
pop
lods
mulb
fsubrs
andb
dec
mov
aam
push
mov
xchg
mov
xor
xor
pop
scas
das
test
cmp
push
mov
idivb
out
mov
or
mov
out
xor
add
mov
lods
lret
nop
add
call
decb
cs
push
enter
jnp
jecxz
jo
js
imul
add
test
xchg
jbe
push
or
sbb
mov
adc
adc
outsl
mov
roll
mov
push
cmp
ret
dec
jns
cmc
lret
push
mov
nop
mov
das
mov
mov
pop
jle
mov
ficoms
push
mov
jl
outsl
aad
dec
test
sahf
aaa
mov
lret
fadd
call
jmp
sbb
call
pusha
inc
xchg
cmpsl
enter
jae
je
pop
jo
inc
nop
mov
das
sbb
pusha
cmpsl
xor
cmp
fiaddl
in
inc
jp
sub
mov
das
sti
popa
or
xor
invd
ljmp
mulb
call
xchg
or
sbb
xchg
fwait
mov
ja
jge
js
stos
repz
mov
test
xorl
cmp
xchg
mov
xchg
daa
push
subb
cmp
push
rcr
sbb
xor
jne
roll
enter
outsl
xor
sub
je
mov
cmc
add
daa
jno
or
jmp
orl
dec
rcll
je
test
cmp
sbb
xcrypt-cfb
cmpsl
daa
into
inc
mov
enter
cltd
test
push
int
lcall
stos
push
jmp
cltd
repz
mov
imul
in
popf
cmp
xlat
outsb
dec
mov
sti
fisttps
subl
sar
xor
jnp
dec
idivl
test
fldenv
inc
or
inc
nop
jo
out
mov
dec
std
adc
sbb
or
into
cltd
xor
movsb
dec
xchg
jnp
dec
orl
mov
sbbb
out
add
push
pop
pop
sub
dec
sub
mov
push
call
or
and
fcoms
mov
or
adc
cmp
mov
clc
mov
mov
jmp
jae
mov
leave
push
test
mov
mov
push
mov
jmp
jmpw
cmp
int3
outsb
test
addl
and
push
incl
xlat
iret
inc
add
mov
inc
push
into
mov
xchg
xchg
out
xor
and
jmp
cmp
fcoml
sbb
push
adc
repz
mov
repz
jae
leave
sbb
and
div
jne
dec
repnz
popf
push
or
pop
stos
push
pop
mov
in
imull
or
push
mov
jl
je
xchg
shlb
arpl
decl
lcall
dec
mov
repz
mov
xchg
pushf
ret
xor
or
pop
popf
sub
int
cmp
arpl
ds
std
ds
ss
add
sbb
push
pushf
cmc
fcomps
loopne
imul
jo
mov
in
cmp
push
pop
icebp
insl
into
inc
inc
xchg
popa
sti
lret
mov
jns
jne
sarb
add
push
es
outsl
jbe
outsb
dec
cmpsb
aas
sbb
jle
cmp
in
js
mov
les
mov
or
jns
adc
xchg
mov
inc
aad
add
xor
push
inc
cmp
imul
add
int3
sti
push
pop
or
xchg
shrb
in
xor
jl
int3
addr16
in
push
ret
cmp
add
cmp
lcall
jl
sub
sub
xchg
int
and
mov
mov
test
movsl
enter
scas
xchg
xchg
shrb
cmpsb
gs
aad
xlat
mov
mov
mov
and
jne
lahf
dec
jne
jmp
outsl
pop
cld
xchg
ret
xlat
fidivrl
adc
xor
addr16
lds
outsb
add
scas
prefetcht1
xor
in
dec
pop
and
shlb
js
mov
cmp
push
mov
dec
js
cmovae
sbbl
pop
mov
insl
cmp
jmp
adc
adcl
mov
sbbb
jnp
out
int
cli
sbb
out
test
adc
pusha
add
dec
rorl
je
push
mov
pop
ljmp
cmpsl
je
ret
xor
jnp
mov
push
or
xchg
insl
xor
add
sbb
stos
xchg
sbb
add
xlat
jo
inc
out
pop
arpl
mov
imul
cmp
adc
add
fs
xchg
pop
dec
scas
mov
in
loop
stos
inc
aaa
shr
out
call
sbb
roll
sub
into
push
out
jl
test
jnp
push
sub
sbb
cli
in
popa
cmc
and
cmpsl
out
and
or
push
stc
push
push
das
add
sub
pop
mov
lret
cld
cli
dec
movsb
idivb
pop
inc
loopne
notl
aad
ret
fwait
push
rorb
in
inc
mov
inc
test
jne
enter
xchg
push
scas
arpl
sub
inc
rorl
aad
dec
or
add
mov
jae
addb
cltd
mov
imul
stos
jl
dec
sbbl
ret
test
add
xchg
xchg
push
push
mov
and
mov
dec
xchg
fdiv
cs
cmp
pop
inc
out
or
sbb
jle
dec
push
faddl
mov
in
fisttpl
push
mov
fwait
sub
mov
sbb
pop
jg
or
jne
xchg
cmc
das
xchg
fmul
movsb
xor
setp
inc
jecxz
ss
cli
fisttps
fst
add
repnz
xchg
pop
into
push
fisubrl
fucomp
fwait
jbe
sub
sbb
and
movsb
iret
cmp
pop
inc
inc
sub
sbb
je
mov
pop
fwait
lea
dec
imul
repz
xchg
pushl
scas
push
mov
xlat
jmp
push
and
mov
sti
ljmp
test
int3
and
push
jo
sub
cwtl
push
notl
in
lods
insb
push
xchg
gs
popa
fcompl
push
mov
mov
dec
cmpsb
or
xchg
stc
xor
in
mov
adc
xchg
pop
mov
xchg
jl
shrb
cmp
cwtl
dec
jns
popa
cmp
inc
xchg
rcll
lret
addl
or
out
repz
or
subb
inc
je
ret
fiadds
js
add
jae
pop
xchg
dec
movsb
outsb
add
stc
xchg
and
push
add
arpl
mov
rol
and
addr16
jl
add
orl
xchg
jb
enter
leave
xor
adcb
repz
fildl
or
lret
or
jecxz
ljmp
fwait
loope
cmp
and
ficompl
sbb
cwtl
cmp
bswap
inc
mov
inc
mov
mov
dec
mov
mov
inc
loop
roll
jle
mov
lcall
xchg
addr16
mov
xchg
icebp
shrb
enter
cmpsb
push
sarb
push
jno
fidivs
pop
xor
pop
in
sub
mov
mov
lcall
add
jl
mov
mov
mov
scas
scas
test
push
lods
sub
inc
xor
cld
fcompl
dec
in
jmp
dec
add
mov
andb
inc
mov
lea
push
addl
and
setp
push
mov
xor
je
jg
fisttps
ret
jae
out
lret
cwtl
pop
ljmp
xor
sti
loop
pop
cmp
fs
push
dec
mov
rol
shl
fstpl
fldl
call
lods
cmp
clc
arpl
sub
outsl
outsb
pop
ret
xchg
stos
pop
mov
xor
add
add
lahf
and
pop
enter
push
cwtl
mov
mov
xor
das
mov
cmp
scas
mov
out
mov
mov
inc
xor
out
xchg
dec
pop
pushl
pop
jb
outsl
jmp
subl
lea
sbb
dec
xchg
xor
fwait
shl
mov
add
ret
mov
add
and
push
leave
lret
mov
push
sub
xchg
pop
sbb
fcoml
xchg
mov
cmp
inc
jmp
sbb
pop
pop
movsl
repnz
inc
nop
pop
mov
inc
pushf
rorl
scas
xor
xchg
je
xchg
push
fdivl
adc
or
mov
cmpsb
call
mov
inc
inc
ret
xlat
inc
mov
pop
sbb
lret
outsl
xlat
imul
jmp
fiaddl
push
push
pop
jbe
insl
xchg
mov
mov
cld
mov
les
pop
jg
xchg
fs
add
loopne
cmpsl
fcmovu
jmp
push
nop
sub
pop
cmpsb
push
iret
std
leave
clc
push
dec
test
cmc
xor
sub
adc
mov
shrb
jno
inc
decl
push
lock
mov
hlt
xorb
or
jbe
and
mov
pop
push
or
fs
ret
xor
bound
ss
movsb
mov
cmpsb
pop
adc
repz
add
xchg
jne
pop
cmpsb
or
lcall
fwait
jp
stos
in
std
add
decb
xor
popa
pushf
mov
clc
arpl
mov
or
push
repz
and
mov
in
popa
xchg
pop
jg
or
outsb
xchg
mov
dec
push
int3
cmp
adc
sbb
push
sbb
hlt
lods
loop
test
pop
int
push
dec
cmp
loop
and
rol
xchg
adc
lods
shll
icebp
xchg
jns
push
inc
cmpl
pop
xchg
push
sahf
inc
cmp
or
aaa
imul
outsb
lock
sub
inc
cmp
daa
mov
sub
cmp
cmc
mov
insl
adc
repz
daa
mov
shlb
rcl
or
add
shl
sbb
insl
cmp
insb
mov
push
adc
out
stos
jmp
xchg
dec
mov
or
leave
or
mov
movsl
cmpsb
mov
iret
popf
mov
lds
lahf
add
sub
mov
jg
gs
movsb
jnp
enter
lret
loopne
jo
mov
mov
mov
clc
imul
andb
push
aam
ret
gs
mov
rcrb
mov
movb
out
ficoms
mov
or
movsl
outsb
repnz
addr16
das
xor
nop
push
cmp
repz
push
xor
adc
lods
in
add
mov
jns
xchg
cli
pop
xchg
sub
ljmp
fucomip
cmp
or
adcb
inc
mov
es
push
pop
divl
adc
or
lods
fstpt
rcrb
cmpsb
push
mov
xchg
push
add
cltd
inc
bound
sti
xchg
xchg
xchg
adc
sub
rcl
adc
sbbl
push
mov
sub
and
jno
pop
add
arpl
pop
test
inc
push
and
scas
sbb
push
pop
sti
xchg
and
xor
sbbb
scas
cmpsb
lahf
stc
mov
stos
cmpsb
in
outsl
mov
outsb
add
mov
gs
pop
bound
xchg
repz
scas
test
out
mov
std
and
mov
nop
sub
pop
scas
rclb
icebp
movl
imul
movsl
fdivrl
fiadds
mov
pop
mov
pop
stos
mov
dec
rcrl
and
push
xchg
aam
cld
inc
lcall
xor
movsb
add
jge
aad
cltd
addl
push
fsubrs
and
xchg
pusha
lock
push
push
movsl
dec
movsl
mov
mov
stos
cmpsb
lret
ret
inc
fnstsw
fisubs
out
xor
flds
mov
outsl
stc
pop
add
std
pop
or
int
push
mov
xor
jno
xor
jo
lahf
mov
or
leave
dec
scas
and
push
sbb
jmp
jno
cmp
incl
sub
jb
bound
dec
jl
lret
fdivp
cmp
cwtl
add
fsubs
dec
jecxz
fsubr
and
xor
jae
push
lock
test
cld
repz
enter
cmp
sbb
dec
dec
int
mov
mov
mov
rorl
and
in
fstps
push
dec
mov
pop
out
repnz
adc
out
mov
mov
clc
push
mov
scas
ja
xor
das
sub
xchg
fwait
xchg
cwtl
jl
sbb
push
das
push
js
out
je
into
out
mov
es
xchg
out
cwtl
mov
ljmp
repz
fsubr
jmp
int
cmp
aam
or
sbb
js
xor
lcall
sub
aas
sub
and
xchg
out
mov
sub
call
mov
push
stc
aad
dec
or
or
push
fidivl
orl
lock
xchg
xchg
push
push
push
pop
xchg
inc
xor
jecxz
lahf
add
or
andb
or
lahf
xor
add
lds
fisttps
test
mov
icebp
dec
jbe
cmp
int3
test
fs
inc
cmp
imul
and
rcrb
adc
jp
les
in
dec
test
and
orl
mov
inc
orb
inc
inc
int3
mov
and
mov
cmp
and
sbb
cltd
jns
mov
mov
out
mov
mov
jl
dec
cmc
xor
sbb
test
fs
fcoml
pop
pop
jmp
adc
aas
pop
repnz
icebp
outsl
xchg
add
xchg
push
mov
in
aam
xchg
jb
cwtl
repnz
push
lcall
or
std
xor
fistpll
or
mov
mov
add
call
pop
adc
push
adc
pop
pop
xchg
mov
pop
mov
xchg
push
adc
clc
in
xchg
cmc
mov
nop
or
jae
mov
stc
cmp
in
test
aam
pushf
jns
ret
xor
mov
and
mov
test
and
fwait
jg
lods
and
test
cmp
and
jb
mov
outsb
in
loope
in
fldenv
fstl
mov
fadds
lret
mov
out
sub
or
fnsave
pop
out
sub
xchg
cmpsb
xlat
cmpsl
repnz
inc
lret
mov
jnp
or
adc
imul
insb
adc
movsb
sti
jle
xchg
xchg
sub
mov
in
or
pop
jb
dec
xchg
mov
mov
lret
pop
insl
adc
lret
push
rcr
and
fldcw
pop
je
das
add
xor
mov
cmc
jmp
sub
out
rorl
dec
iret
ret
ficoml
imul
adc
insl
dec
insb
cmp
loopne
lret
lock
inc
push
sub
fstp
stos
inc
push
xor
ficoml
stos
pop
loope
test
jg
movsb
xlat
movsl
jmp
push
fcmovbe
mov
ja
aaa
add
add
xchg
inc
cmpsl
xchg
pop
subb
or
or
ret
loope
jg
mov
sub
and
cmp
outsb
and
sbb
cmpsb
and
sbb
or
fstl
mov
insl
jl
fldcw
jmp
aaa
inc
scas
xchg
adc
add
cmp
test
jo
lds
mov
or
push
ds
mov
data16
out
push
cmp
xchg
xchg
scas
fiaddl
addr16
sbb
lret
fs
xchg
ljmp
xchg
popf
xor
in
cmpsb
andb
out
push
and
jg
xchg
mov
dec
cmp
inc
cltd
data16
mov
outsb
jp
clc
and
cli
xor
inc
popa
xor
xchg
mov
mov
aas
scas
dec
into
cs
cmc
inc
add
into
xchg
sub
cmp
out
je
mov
sbb
pop
pop
dec
int3
add
les
push
je
and
int
mov
shrd
sub
or
push
sarb
xor
hlt
mov
ljmp
test
mov
mov
push
loope
bound
push
loop
inc
dec
dec
scas
jp
push
and
cmc
and
test
jnp
rcrb
in
inc
fistps
cmovo
pop
fdivr
cltd
je
jnp
out
mov
lea
adc
or
add
fyl2xp1
cmp
dec
movsl
rcll
xchg
jbe
outsl
ja,pt
cld
push
sbb
ljmp
xor
int
sub
out
cmp
jnp
fwait
xchg
daa
sahf
or
cmp
fidivl
jge
push
testb
pop
test
dec
sbb
out
mov
sahf
mov
loopne
filds
rol
xchg
aas
sbb
aam
lods
das
inc
push
jmp
xchg
sub
sub
cmp
cmp
push
inc
mov
and
jo
mov
and
popa
or
mov
adc
mov
add
jmp
dec
lods
push
cmp
mov
shll
and
fcoml
lods
inc
inc
push
lret
fiaddl
mulb
dec
dec
ds
xchg
pop
cmp
mov
push
mov
mov
and
or
adc
mov
cmp
xor
outsb
mov
push
and
sbb
push
xchg
xchg
pusha
lods
sub
cli
idivl
cmp
ss
sahf
xor
xchg
les
ds
cmpsl
enter
sub
clc
fiaddl
test
inc
imul
int3
js
jnp
inc
loop
cmp
push
add
xchg
adc
mov
fldenv
data16
jbe
iret
sub
scas
sbb
lahf
add
xor
and
cmp
loop
xchg
addr16
pop
mov
mov
lods
test
jecxz
cli
sub
adc
push
ja
mov
pop
data16
out
xor
iret
test
lret
mov
cmpsl
and
push
dec
sub
jp
negl
fsubrs
push
xchg
mov
pop
sub
ret
pop
shll
xorl
and
lods
cmp
ss
sti
aaa
and
pop
dec
jecxz
lcall
insl
hlt
insb
xchg
stos
test
enter
test
cmc
push
mov
add
mov
mov
movsb
jbe
fmulp
inc
push
adc
jae
stc
xchg
gs
cmp
push
mov
pop
mov
xchg
lods
push
sbb
sub
adcb
jle
sub
lods
sub
in
bound
xchg
mov
inc
pop
mov
xor
insl
int3
clc
lret
in
lea
out
lods
xchg
idiv
out
lods
jecxz
pop
arpl
or
push
and
out
and
mov
pop
lods
rorl
jge
fldt
xor
hlt
in
rorl
lahf
dec
mov
sbb
mov
popf
jg
xchg
and
outsl
fistl
ljmp
add
ljmp
mulb
insb
sbb
int
int
ret
aas
fbld
xchg
jae
out
mov
sub
xchg
stos
adc
mov
push
cli
mov
mov
mov
aas
mov
in
and
loop
dec
mov
aam
cmc
lea
roll
icebp
loopne
repz
popa
cmc
filds
ss
sub
ficompl
movsl
xchg
inc
sbb
dec
mov
lods
pop
push
ds
ret
fldcw
mov
push
stos
jo
xchg
fisubrl
xchg
iret
cmc
inc
dec
repz
arpl
xchg
lods
aad
testl
ret
jne
sub
xor
shlb
clc
fcomi
mov
lahf
dec
adc
xor
fwait
cmpsb
mov
adc
lea
cmc
jne
pop
in
fistpl
xchg
icebp
xchg
cld
or
or
push
lahf
enter
out
jns
cmpsb
mov
and
bound
insl
mov
or
or
dec
orb
test
xchg
clc
jb
fwait
cmp
rorl
sub
push
mov
fucom
pop
in
add
enter
ret
repz
hlt
lcall
cmp
nop
inc
push
movsb
std
test
push
xor
add
add
xchg
adc
mov
jno
cltd
pop
into
push
and
bound
cmc
pop
hlt
push
inc
inc
in
ret
arpl
repnz
sti
push
fnstsw
cwtl
or
mov
stc
add
mov
aas
hlt
shrl
outsl
imul
push
mull
inc
xor
xor
sti
add
xchg
out
sahf
imul
inc
mov
and
inc
aaa
mov
pop
inc
pop
fsub
cmp
lods
jl
fists
ficoml
aas
dec
sbb
andb
outsb
add
dec
and
sbb
inc
adc
jne
mov
dec
ja
pop
xchg
cld
das
aaa
jo
decl
dec
mov
movsl
mulb
sbb
sbbl
dec
pusha
testl
int3
adc
fidivl
jmp
and
and
shrb
and
mov
es
repnz
adc
mov
pop
mov
daa
pusha
adc
or
cmp
or
stos
sbb
or
mov
outsl
enter
or
scas
in
scas
sahf
push
pusha
jp
jae
test
sbb
push
jbe
pop
mov
sub
dec
push
jmp
clc
out
fildll
push
fildl
mov
fwait
sub
scas
mov
cmp
fnsave
mov
stos
daa
in
mov
push
es
push
mull
pop
imul
add
sub
push
jo
lret
fnstcw
mov
sbb
arpl
and
pop
and
fnstcw
std
adc
xchg
push
mov
xor
pop
aas
std
or
icebp
adc
xchg
mov
jo
icebp
in
pop
mov
pop
and
int3
add
pop
ret
pop
lret
cmp
aaa
les
or
cmpsb
push
insb
xchg
fs
rol
push
xchg
or
mov
xor
adc
jb
xor
je
fcompl
js
inc
stc
sarb
nop
test
ljmp
pop
pop
popl
mov
xchg
mov
aas
out
cmp
inc
dec
sub
push
testb
leave
mov
inc
ror
jmp
push
mov
sti
es
mov
dec
jmp
shr
xchg
rcll
sahf
push
pop
sub
int3
rcr
pop
arpl
dec
pop
sub
mov
test
daa
sub
mov
shlb
fimull
xchg
jge
repnz
mov
jg
das
jno
cltd
add
adc
push
test
push
pop
xlat
outsb
mov
mov
adc
sub
inc
and
in
in
in
xchg
hlt
pop
mov
cmp
je
jnp
shl
sub
xchg
movsl
xchg
jmp
movsl
das
inc
fcoms
xor
lret
dec
test
cmpsl
xchg
roll
sti
dec
sarb
inc
insb
mov
adc
lret
or
das
in
xchg
outsl
sub
mulb
jl
push
shr
jae
pop
or
cltd
je
pop
sti
cmpsl
jbe
fstl
rorb
push
inc
push
mov
or
in
mov
and
sbb
mov
mov
in
cs
xchg
xchg
inc
dec
mov
decl
addb
pop
fs
test
ja
jg
scas
mov
jbe
in
jns
out
mov
pop
lahf
push
mov
std
test
lret
stos
xlat
aad
lret
sub
push
imul
sbb
aam
stos
enter
nop
insb
jae
mov
mov
push
xor
cmp
hlt
addr16
mov
int
sub
push
fs
dec
xor
test
push
es
and
stc
add
jecxz
jno
pop
das
cmp
lea
xor
dec
sarb
inc
insb
push
jmp
add
push
insb
dec
jnp
pop
aam
xchg
mov
cmp
neg
in
testb
movsl
xchg
xor
stos
push
dec
sbbl
rorb
push
into
dec
ret
mov
or
test
mov
repz
or
push
pop
cmp
dec
sub
pushf
loopne
cmp
mov
or
dec
les
sub
pop
pop
and
ljmp
mov
pop
adcb
ds
mov
and
pop
push
and
stos
push
test
mov
jb
ds
pop
test
mov
js
mov
ja
aas
sbb
push
mull
movsb
inc
cld
imul
pop
aaa
imul
loope
xorl
add
insl
sbb
pop
popf
in
arpl
xchg
in
push
xlat
dec
jns,pt
scas
mov
leave
pop
inc
dec
fisttpl
and
incl
cmp
aas
xor
aas
aaa
or
pop
push
repz
pop
push
iret
dec
or
and
movsl
sub
lods
cld
ret
stos
push
xchg
mov
repz
shl
xchg
cwtl
cmp
mov
mov
lret
mov
push
andl
movsl
push
jbe
inc
in
jmp
aad
jecxz
mov
dec
or
push
mov
loop,pt
dec
pop
inc
push
jne
mov
cmpsl
inc
jb
pop
cld
push
pop
adc
sbb
xchg
into
sbb
fs
cmc
test
div
cs
rorl
adc
xchg
daa
lock
out
int3
stos
jno
inc
push
lret
das
jmp
push
xchg
sub
shrb
xchg
jae
adc
add
in
xchg
push
sbb
add
div
mov
cmp
es
xor
adc
push
mov
sub
cmp
jge
push
mov
jl
dec
jle
xor
adc
sbb
les
lock
adc
adc
std
pop
mov
fldt
dec
ret
addl
sbb
daa
mov
xchg
rcrb
ja
add
push
ja,pn
out
push
stc
dec
dec
mov
mov
loopne,pt
sarl
mov
lret
xor
in
aaa
inc
xchg
adc
fcmovbe
call
fidivs
test
push
ds
sub
adc
push
lods
data16
sahf
push
out
mov
lock
mov
adc
pop
popf
out
and
es
mov
sbb
imul
mov
loope
inc
test
mov
aam
pop
clc
andb
adc
jb
lea
mov
cmp
cs
mov
test
mov
mov
and
add
lcall
aad
outsb
mov
add
movsl
add
jp
stos
push
test
je
rclb
xor
or
mov
std
dec
jge
push
aaa
aaa
ss
mov
cli
mov
shll
ljmp
std
lret
ljmp
mov
or
loop
xor
cmpsl
push
push
add
cmp
fisubrs
pushf
pop
push
jnp
and
stos
or
push
cmpb
dec
pop
jg
push
mov
out
pop
mov
cmpsl
jmp
jae
fdivl
pop
test
cmpsb
and
push
insl
scas
cmpsl
push
test
sbb
into
lret
dec
cli
adc
push
ds
fxtract
sub
and
stos
mov
jg
mov
pop
rcrl
daa
call
das
inc
and
in
and
and
jns
inc
scas
std
ret
add
fstpt
pop
sub
push
cli
xchg
ljmp
outsb
rorl
das
outsl
inc
xor
addr16
lods
sbb
add
cmp
jno
adc
xor
fs
adc
mov
mul
xchg
xchg
loope
xchg
cmpl
das
in
les
jb
sbb
inc
cmp
dec
rol
out
cmp
inc
in
adc
test
push
push
mov
sbb
aaa
lea
pop
push
jnp
jp
out
and
and
jne
call
in
rol
sbb
icebp
in
fnstsw
sti
ja
inc
js
fisubl
out
fwait
sbb
nop
repz
pop
aaa
mov
push
pusha
push
enter
cltd
insl
cmp
jb
jne
sbb
arpl
fwait
inc
pop
sub
pop
pop
and
mov
ss
lret
gs
mov
shrb
insl
mov
sti
jmp
add
xor
cmc
lcall
sub
test
inc
int3
js
xor
xlat
mov
ret
ficoms
imul
xchg
sub
icebp
jp
ljmp
mov
adc
pop
test
sbb
and
push
xchg
loopne
mov
jmp
and
add
loop
xor
dec
je
pushf
test
pushf
sub
adcb
adc
push
pop
sub
sarl
cmp
push
push
ss
mov
call
test
xor
lcall
pop
mov
pusha
xorl
jmp
or
in
xor
aas
js
and
clc
sbb
mov
lea
cmpsb
push
jo
fistpl
stos
test
in
inc
fadds
push
int3
push
call
xchg
xlat
pop
addl
sbb
xor
popf
cmp
ficomps
jb
cmp
jmp
lock
pushf
jbe
stos
fld
inc
mov
mov
or
jle
push
jmp
adc
mov
stos
pop
lds
pusha
push
cli
aad
cs
add
cli
mov
xor
jb
test
jecxz
ja
adc
sbb
fcoml
mov
out
mov
test
pop
push
xor
shrb
inc
push
aad
inc
inc
mov
les
sub
loopne
pop
ret
and
push
pop
lock
movsb
adc
inc
pop
push
sbb
mov
lcall
jmp
cwtl
or
test
push
mov
jo
in
repz
out
pop
or
mov
repz
xchg
dec
xchg
stos
pop
jecxz
fs
inc
cmp
popa
xor
pop
jmp
icebp
out
lret
adc
sbb
repz
outsl
loope
fs
dec
loop
mov
pop
shll
gs
gs
dec
dec
jmp
sbb
mov
push
pop
xchg
iret
loope
inc
mov
and
cmp
sub
mov
outsb
stc
xchg
adc
aas
inc
dec
clc
cmc
cltd
cld
push
loope
jmp
xchg
xlat
imul
inc
cmp
mov
iret
leave
add
cmpb
in
pop
arpl
or
test
xchg
pop
mov
add
inc
out
push
and
and
dec
mov
jmp
sub
lret
or
in
sar
or
sub
mov
shl
cmpl
ja
in
in
loop
movsl
insb
push
adcl
pop
dec
hlt
or
subb
rcll
sahf
aaa
test
ficoml
or
xor
jg
adc
fisubrs
jecxz
fistps
pop
add
mov
fs
movsb
jmp
or
cmp
and
sahf
in
xchg
js
and
push
mov
mov
lcallw
ljmp
mov
out
dec
xchg
movsl
nop
push
xor
mov
in
jae
insl
sbb
mov
or
jmp
lds
testb
xchg
test
call
inc
fbld
lea
sbb
dec
fbstp
or
addl
inc
je
mov
ljmp
aas
adc
hlt
push
mov
push
push
cli
jp
jo
rcr
jb
dec
cld
loopne
jae
arpl
xchg
repz
dec
insl
jl
push
in
dec
mov
pop
icebp
lods
xchg
sbb
dec
mov
dec
mov
invd
sub
pop
cld
sbb
xchg
je
inc
das
pushf
mov
inc
mov
jmp
test
sti
mov
add
inc
fistps
jp
cmpsb
pop
int3
rdpmc
jecxz
xor
dec
test
lcallw
orl
inc
lock
stc
fbld
pushf
jno
jne
loopne
mov
push
popa
nop
fs
add
jmp
dec
lret
rcrb
sbb
or
mov
arpl
pop
sahf
loop
popa
sub
test
jmp
cwtl
sbb
push
add
mov
rcrl
in
lods
inc
popa
repnz
icebp
inc
stc
aaa
rol
aad
cmp
lret
sbb
sbb
inc
xchg
mov
inc
jnp
adcl
dec
push
mov
xlat
mov
ja
daa
cmp
push
jge
dec
enter
jne
lcall
or
sub
and
clc
fdivl
mov
cld
mov
mov
fwait
sub
aaa
sahf
pop
lahf
push
inc
daa
xor
mov
aam
idivb
xchg
jno
bound
movsl
pop
jmp
mov
dec
iret
xlat
lea
add
xchg
push
mov
inc
xor
cltd
cmp
pop
mov
mov
and
subl
or
add
fcompl
xchg
je
fmuls
clc
lock
mov
lods
add
cli
mov
adcl
nop
jle
movsb
mov
ljmp
in
fdivp
das
pushw
adc
loop
in
pop
mov
flds
lods
sbb
xor
ja
hlt
inc
push
dec
jmp
jo
hlt
cmp
mov
cmp
push
cmp
dec
push
adc
or
aas
popa
xchg
pop
out
pushf
dec
out
and
jnp
inc
fisubrl
stos
fcoms
jb
dec
sub
mov
int
dec
ja
out
adc
xchg
cmc
push
adc
adc
scas
pmullw
pop
loope
out
and
lret
jmp
jb
pop
negl
loope
nop
fstpl
pop
cmp
outsl
lods
repz
mov
push
jbe
or
imul
push
movsl
push
dec
sbb
dec
call
imul
arpl
clc
aas
jecxz
push
insb
dec
pop
cmp
xchg
dec
inc
out
cmp
cwtl
and
iret
push
addr16
nop
inc
fldcw
int
test
jnp
mov
mov
es
lods
orb
add
popf
fsubrs
stc
fwait
dec
sbb
mov
xchg
sarl
pop
sub
jne
sbb
xchg
inc
sbb
mov
cmp
stos
add
mov
dec
and
test
test
inc
dec
sti
xchg
movsl
mov
mov
imul
pop
jnp
cwtl
loop
fwait
inc
popf
ja
inc
dec
inc
cmp
pusha
out
das
dec
addr16
xchg
xchg
cmpsb
mov
aad
adc
xor
inc
jp
pop
jl
push
cmp
idiv
xchg
inc
jbe
into
int3
in
jp
add
mov
imulb
xchg
test
jnp
out
test
fldenv
int3
js
jmp
mov
jmp
aad
orb
imul
gs
sbb
mov
cmp
inc
hlt
pusha
mov
aad
adc
lcall
mov
testl
mov
loope
or
sub
sub
scas
push
add
mov
icebp
fstp
pop
mov
jnp
ss
cli
mov
xchg
outsb
add
inc
cld
in
stos
fadds
scas
clc
clc
movsl
sub
sbb
scas
lea
pop
sbb
addr16
scas
into
add
push
stos
xchg
jae
scas
and
fdivl
or
sti
into
dec
xor
sti
jb
mull
xor
add
out
shrb
sub
lea
mov
pushf
pushf
push
shll
and
sub
iret
lahf
vpcmpeqw
xchg
sub
cmp
into
adc
xchg
mov
inc
adc
push
jnp
cwtl
js
pop
daa
fdivrp
orb
daa
jmp
push
imul
pop
jecxz
inc
dec
or
mov
push
add
jb
dec
addr16
stos
push
pusha
imul
cltd
cld
and
mov
pop
scas
adc
fiadds
xchg
inc
jmp
popa
push
xor
pop
pushl
jo
mov
cld
lcall
push
ret
and
add
pop
popf
xchg
xorb
xor
mov
es
pop
xor
pop
sub
dec
repz
mov
call
and
pusha
shll
xor
movsb
adc
icebp
pop
mov
arpl
sub
mov
bound
lret
test
sbb
sarb
cmp
cld
dec
cmp
lods
xchg
lret
enter
cmpsb
xchg
fistpll
cli
int
or
inc
popf
add
jno
fwait
dec
loope
or
mov
inc
inc
cmp
push
mov
inc
xor
xor
sub
out
sbb
call
and
push
aas
xor
test
mulb
add
into
push
xor
pop
pop
or
sub
stc
push
ficompl
sbb
pop
leave
cld
cmpsl
jecxz
into
inc
cmp
aas
mov
loopne
sbb
ja
cmc
sub
fidivrs
jae
paddsw
xchg
xchg
cmp
xchg
lret
ror
xchg
nop
enter
jg
leave
cli
mov
mov
cmp
orl
mov
push
mov
xchg
inc
fsubrl
je
xor
es
jg
dec
push
leave
icebp
push
aam
fsubrl
cmp
aas
aas
lock
loop
mov
scas
mov
and
enter
push
xchg
jno
xor
xor
add
dec
mov
xor
or
repnz
pop
addr16
xchg
imul
xchg
mov
test
movsl
sub
jmp
ljmp
int
jbe
add
xlat
fcomps
mov
pusha
out
imul
xchg
pop
sbb
icebp
pushf
push
in
test
pop
jge
enter
fs
les
inc
mov
mov
mov
jmp
mov
test
out
movsl
sub
and
mov
cmp
xchg
xchg
add
cmp
leave
cmp
add
bound
imul
jle
and
sbbl
insl
ss
cmp
cltd
adc
dec
pop
iret
das
lret
ret
dec
test
sub
mov
xchg
aas
lea
push
xchg
pop
mov
sahf
dec
mov
push
mov
data16
mov
jmp
cmp
lahf
lods
sub
dec
mov
test
dec
sub
jmp
stc
in
xlat
sub
es
fidivl
mov
subl
inc
xchg
std
or
push
scas
imul
jb
testl
ja
mov
aad
insl
lods
cld
jmp
xchg
pop
mov
aad
xlat
sub
add
sub
pop
jbe
lock
dec
pusha
mov
fistpll
movsl
xchg
add
push
sbb
loopne
out
push
daa
jg
mov
jnp
aad
pop
mov
sub
ja
test
jg
pop
or
mov
imul
stc
and
and
cs
aaa
mov
xchg
mov
mov
sub
mov
mov
cmp
cltd
add
test
sahf
call
movsl
xor
std
adc
mov
cli
sbb
sti
sti
mov
imul
add
xor
pop
push
cs
mov
mov
pop
dec
jne
jecxz
sbb
sub
dec
push
test
roll
lret
add
cmp
and
jle
cs
mov
or
nop
inc
dec
arpl
enter
and
push
sbb
adc
pop
es
pop
in
addr16
enter
push
or
mov
jo
scas
mov
xchg
dec
mov
jg
nop
ss
pop
movsb
insl
sub
adc
push
and
xor
dec
and
add
loopne
xor
xor
je
pop
add
xchg
push
jo
out
fsubrl
lea
mov
dec
dec
test
je
cmp
cmp
mov
cli
jno
mov
shrb
cltd
add
fwait
push
and
cmp
and
cmp
cmp
adc
mov
test
loope
pop
lods
insb
aad
loope
cmpsb
jae
inc
add
dec
popa
shlb
sbb
mov
test
jp
and
pop
sahf
subl
fnstsw
push
dec
gs
fdivrs
insl
jl
xor
negl
mov
adc
xchg
bound
icebp
aas
imulb
out
pop
cmpl
mov
xchg
stos
or
mov
rol
adc
inc
enter
mov
jae
hlt
in
enter
test
outsb
fidivs
mov
imul
gs
push
adc
ret
pusha
sub
push
xor
pusha
pusha
add
jae
les
mov
dec
xchg
imul
sub
or
js
imul
jle
loop
pushf
xchg
popf
rorl
pop
xor
ss
mov
cli
push
in
testl
in
decl
or
icebp
stos
ss
push
je
pushf
insl
bound
lods
shl
mov
push
cli
sbb
enter
scas
das
nop
outsb
ror
xor
or
data16
mov
std
sub
divl
adc
aaa
jmp
out
lods
sbb
aad
push
inc
fstpt
sbb
shlb
cmp
in
jmp
jb
mov
inc
leave
sbb
push
mov
push
mov
dec
pop
adc
test
inc
movsl
jmp
in
sub
incb
pop
in
stos
pop
and
sbb
mov
dec
movsl
sbb
out
fstl
ja
in
cmpsl
or
lcall
inc
pusha
jle
fimuls
jle
ret
mov
ss
enter
shl
sub
insl
add
adc
and
jne
push
sub
std
xor
or
xor
mov
arpl
pop
inc
inc
inc
repz
adc
adc
into
out
mov
xchg
or
xor
jg
stos
adc
das
shl
push
sub
sbb
xor
pushl
cmp
mov
add
and
xor
fs
mov
daa
and
adc
imul
lret
cmp
test
and
fcomi
jns
sbb
pushf
call
cwtl
lds
mov
mov
mov
in
xchg
sahf
ret
imul
sbb
push
or
jae
outsb
js
gs
shlb
repnz
in
lods
fisttps
xor
or
inc
sub
and
pop
outsl
add
rcrl
js
jne
iret
add
jae
push
roll
push
mov
xchg
xchg
mov
movsl
mov
stos
loope
xchg
sub
rcrb
enter
xchg
nop
jns
sub
xchg
push
std
fcmovnu
lods
or
enter
mov
and
push
push
mov
mov
sbb
mov
and
xchg
stc
pushf
scas
or
add
inc
and
push
aam
add
jg
add
jb
dec
inc
les
iret
add
lods
cld
das
sub
ss
sbbl
dec
enter
shr
fldenv
dec
mov
push
mov
fistpll
push
push
mov
sarl
cld
or
jns
inc
int3
aaa
xchg
jp
js
mov
icebp
adc
mov
out
or
mov
into
or
push
lods
pop
jnp
shl
aas
repnz
test
and
jns
sub
sub
sub
loopne
or
xchg
push
pop
dec
add
cmpsb
xchg
xchg
stc
dec
nop
add
xchg
xor
subb
aas
pop
pop
lock
adc
mov
adc
repnz
jnp
ljmp
mov
xchg
mov
std
push
jl
fidivs
xchg
dec
gs
lret
sub
ljmp
jle
inc
fisttps
jge
push
loopne
push
movsl
notl
loop
fmuls
mov
jb
sbb
adc
popf
mov
shll
xor
lcall
inc
jecxz
add
insl
test
fisubl
pop
jmp
pop
push
cld
adc
movsb
mov
push
mov
je
cltd
mov
pushf
and
cld
lods
fcompl
arpl
pop
nop
pusha
xchg
pop
loopne
fsubr
outsb
and
loope
pop
sbb
pop
jle
mov
mov
cmp
shlb
out
mov
add
sbb
or
mov
fisttps
sbb
lea
lock
xchg
sbb
cmp
xchg
cmp
mov
jnp
and
push
enter
xchg
in
sbb
movsl
iret
cltd
out
sbb
js
lahf
stos
or
ljmp
add
fnstcw
ljmp
outsl
mov
cmp
lods
imul
inc
test
leave
fidivrs
aas
test
inc
movsb
ljmp
dec
push
lcall
add
stc
stc
fmulp
push
xchg
mov
es
nop
movsb
shrl
jmp
es
jns
mov
jg
adc
xchg
aaa
jle
lock
stos
or
cmpb
sbbl
aad
scas
shl
mov
daa
icebp
cmp
aam
inc
and
adc
sbb
xchg
xchg
lock
aaa
cmp
and
xchg
mov
mov
mov
push
inc
inc
mov
imul
out
lea
mull
test
mov
mov
pop
add
xchg
orb
xchg
into
mov
nop
shll
shll
dec
dec
add
cmpb
push
mov
mov
loopne
psubb
test
inc
add
rcrb
pop
inc
push
cwtl
fstps
add
addw
rcl
dec
push
sahf
xor
adc
repnz
mov
jl
add
and
mov
pop
xchg
push
rorl
repz
clc
lahf
mov
pop
daa
or
ret
adcb
test
pop
adc
dec
add
pop
push
mov
stos
outsb
and
push
outsl
jnp
pop
stos
push
call
pop
jno
mov
addr16
in
lahf
lret
pop
sahf
mov
xchg
jp
shlb
ret
scas
rcll
and
pop
mov
fldt
fsubrl
push
sbb
mov
std
cli
cltd
cmpsb
cmp
jp
push
xlat
sbb
int3
cmpl
or
or
jmp
push
xorl
and
into
movsb
mov
sbb
lret
add
sub
inc
cmpl
jne
and
add
xor
jns
pop
hlt
cmp
xchg
ret
sbb
ja
aas
push
and
jne
test
inc
jl
push
stc
sub
shrl
inc
out
xchg
clc
outsb
mulb
pop
fildll
in
push
je
xor
inc
pop
test
mov
lcall
push
dec
pop
dec
pop
pushf
in
lret
popa
xchg
test
dec
push
je
push
sbb
jno
and
fnsave
scas
jl
ror
mov
lds
add
pop
xchg
mov
xor
cmp
mov
ss
fdivrl
xor
icebp
adc
lock
sahf
xchg
dec
mov
fildl
jb
jmp
fistpl
push
clc
popa
outsb
adc
ror
les
add
hlt
fimull
mov
xor
fistl
mov
bound
jge
popf
int3
pop
pop
lcall
and
stos
mov
fildl
test
mov
lcall
fcmovnbe
fs
fcom
mov
lods
cmpsl
xchg
sub
push
jns
fstp
mov
ret
in
scas
cli
cmp
out
adc
int
push
mov
rorl
mov
pop
sbb
rolb
and
or
dec
aam
mov
adc
sub
cs
mov
insl
mov
dec
popf
mov
xchg
push
push
sbb
and
add
xchg
jle
lods
out
and
fs
jl
push
bound
jmp
xchg
jle
into
mov
fsubs
cmp
or
mov
aam
xor
repnz
adc
mov
or
mov
xlat
arpl
xor
ljmp
ljmp
lds
lahf
lret
xchg
dec
dec
lahf
jne
mov
inc
in
cli
xor
dec
sbb
js
mov
mov
jge
incb
pop
shr
add
sub
cmpsl
scas
pop
cmpsb
push
cltd
lahf
sbb
add
dec
pop
lret
mov
pop
mov
sbb
jbe
addb
xor
ret
cmpsl
inc
sbb
loopne
mov
mov
mov
int
aam
cmp
push
pop
jae
ss
enter
xor
mov
sub
adc
mov
cmp
js
pusha
xor
or
lahf
out
xlat
push
fisubs
xor
mov
jbe
sar
inc
cltd
fbld
mov
dec
sbb
insl
in
jae
lds
pop
js
adc
sbbl
mov
xchg
nop
and
and
pop
lret
pusha
mov
fcompl
cmpsl
add
pop
aad
push
js
pop
pop
xchg
sub
test
push
nop
scas
in
les
pop
and
stc
sbb
pop
scas
mov
jg
stc
cli
pop
mov
mov
cmpsl
dec
test
dec
pop
push
inc
cld
mov
ret
mov
push
cmp
popa
out
jnp
ret
pushl
insl
cmpsl
cltd
mov
scas
sbb
je
or
cmp
jecxz
aad
in
pop
mov
int
add
xor
das
out
adc
xchg
inc
lret
mov
xchg
cwtl
shrl
xor
pop
lods
and
sbb
mov
cwtl
mov
sub
loopne
mov
movsl
xchg
cmpsl
xor
popf
inc
aam
cltd
mov
aaa
je
pop
mov
fidivrs
adc
mov
push
inc
push
sbb
testl
mov
jle
stc
lret
arpl
push
in
lods
add
xor
out
jb
movsb
xchg
jecxz
cmc
xchg
repnz
cmp
mov
nop
xchg
cmp
push
out
mov
shll
jp
xchg
mov
push
mul
and
scas
and
mov
push
stos
bnd
mov
lock
push
or
pop
inc
sbb
sub
inc
fdivrp
ja
jae
lods
xchg
aam
sarb
loop
sub
push
add
xchg
sub
ds
sbb
iret
jno
sbb
gs
fwait
sub
pop
inc
push
popf
mov
cmp
mov
pop
pop
hlt
mov
into
scas
fwait
es
pop
bnd
xchg
andb
and
mov
shrb
xor
fcomps
lods
into
dec
pop
loopne
or
jge
inc
mov
add
sti
fnstsw
aas
hlt
xchg
inc
insb
adc
int
imulb
jns
insl
mov
inc
and
in
into
sub
push
rcrl
xchg
fldt
or
pop
int3
jmp
xor
and
test
pop
pop
pop
mov
cmp
pop
fnstsw
pop
jno
cmpl
and
shrb
pop
outsl
cmpsl
and
cwtl
inc
jge
mov
bound
sub
fistpl
lret
pop
imul
mov
xor
dec
cmp
mov
sbb
xchg
mov
adc
imul
add
mov
rclb
xchg
jle
in
cld
sbb
das
idiv
cmpb
andl
jnp
rcl
sarl
jns
and
stos
lods
movsb
inc
mov
mov
pop
jle
daa
aas
sbb
imul
out
cltd
dec
aad
lret
mov
push
sbb
out
call
loopne
adc
les
mov
mov
test
insl
adc
gs
xor
add
loopne
cwtl
stos
jle
enter
add
ljmp
jp
out
movsb
pop
sbb
inc
test
cmpsl
cmpsb
ret
mov
imul
sub
rolb
dec
cmp
mov
fldl
sub
dec
js
inc
push
or
stos
pop
imul
ss
movsb
mov
fsts
mov
adc
repnz
in
fisttps
xor
xor
sbb
lods
sti
and
mov
stos
das
and
cmc
jecxz
add
in
ret
lock
sahf
or
xor
push
cmp
lods
push
icebp
nop
dec
pop
sub
int
sbb
sahf
cs
xor
push
stos
jle
scas
lods
iret
adc
ret
iret
mov
adc
jbe
xchg
inc
push
loop
push
mov
mov
stos
xchg
shll
jg
push
xor
std
aas
stos
nop
xor
stc
jmp
xlat
add
push
mov
das
push
jl
adc
dec
arpl
add
bswap
js
adc
inc
adc
dec
mov
dec
jns
rdmsr
add
leave
and
xor
enter
mov
fs
das
fnstsw
pop
dec
and
test
add
in
lods
pop
xor
inc
jmp
xchg
xchg
ds
fimuls
mov
outsl
mov
pop
cmp
cmpl
pushf
xchg
jne
mov
rcr
cmp
int3
mov
mov
pop
pop
aas
xor
dec
mov
inc
cli
adc
adc
sbb
fwait
mov
into
mov
xchg
pop
cmp
jns
lea
sti
xchg
add
ss
xchg
ds
jb
mov
dec
cmpsb
pop
fwait
push
ss
lret
adc
sar
jp
mov
and
pop
test
lods
addr16
mov
pop
in
and
fisttps
inc
mov
ljmp
mov
mov
and
or
add
fst
popa
xchg
jnp
xchg
fisubl
push
sub
sbb
repnz
sub
mov
mov
sub
std
mov
in
gs
jg
popf
aad
adc
shlb
movsb
mov
xchg
fs
mull
mov
shlb
mov
xchg
sbb
addr16
xlat
rcrb
pop
jge
xchg
jp
mov
jb
cli
loop
lahf
js
xor
call
stos
mov
cmp
jle
sbb
mov
aad
sub
cmc
mov
stos
lret
fsubl
or
lret
jmp
jge
or
mov
pop
jns
or
ss
mov
or
adcl
sbb
pop
fdiv
loop
inc
fld1
fcompl
jp
test
xchg
pop
iret
rcll
rcll
add
adc
cwtl
mov
dec
mov
sub
mov
pop
clc
cmp
mov
shll
arpl
jecxz
call
push
adc
loop
scas
sub
cmp
sti
insl
test
add
es
out
lds
inc
jo
inc
sbbb
std
cmpsl
inc
xor
mov
xor
insb
and
ret
test
xchg
aad
xchg
scas
test
daa
aam
xlat
xchg
or
mov
int3
ljmp
mov
repnz
xrelease
cmpsl
clc
lods
lret
fstps
lods
enter
or
insl
das
mov
xchg
jno
lds
jecxz
ss
inc
lahf
and
inc
scas
and
stc
xchg
jbe
scas
xchg
xrelease
adc
lcall
mov
cmp
mov
pop
sub
sbb
aam
repz
out
les
cli
sbb
add
jno
lret
mov
and
adc
add
push
push
xchg
push
xchg
add
inc
xchg
gs
mov
ror
cmp
push
vmovd
aam
into
imul
push
jmp
xchg
pop
mov
ja
adc
push
in
adc
test
andb
sub
lds
inc
lock
clc
std
inc
push
xor
stc
cmpsl
ja
cmpsl
shr
sbb
xchg
in
or
or
lea
or
subl
pop
dec
sbb
dec
cltd
xlat
jnp
les
ja
sub
mov
add
xlat
js
pop
xchg
outsb
data16
repnz
sub
cmc
jne
sub
cltd
scas
arpl
in
cmp
imulb
lret
xchg
enter
jl
in
pop
hlt
push
pop
enter
movb
loope
pop
dec
jb
lds
ja
cmp
ret
fidivrl
sbb
outsb
movsb
add
les
push
mov
push
popa
add
or
add
and
bound
add
sub
inc
and
cmpb
fsubs
push
scas
add
jmp
xchg
sbb
mov
add
adc
push
jns
cwtl
test
mov
es
or
jg
ds
in
add
enter
mov
fisubl
cmp
xchg
inc
jge
gs
mov
mov
xor
push
in
mov
push
pusha
dec
imull
sub
bnd
dec
popa
subb
mov
and
inc
fisubs
popf
sbb
in
sbb
mov
aad
jo
mov
in
mov
popf
and
or
nop
ror
xor
lcall
fnstcw
jns
or
int
inc
mov
lret
fmull
fnstcw
cld
inc
xchg
mov
jg
add
push
cmp
pop
lcall
inc
jecxz
mov
scas
and
or
jmp
inc
adc
jns
or
iret
pop
and
jno
mov
cmp
cmp
mov
call
pop
push
sbb
stos
gs
and
fwait
rcr
mov
pusha
aad
lret
xchg
xchg
mov
or
sbb
adc
xor
or
cld
cmovnp
pushf
add
rclb
rcll
es
ret
adc
dec
fdivs
pop
xchg
stc
mov
cmpsb
arpl
jno
jecxz
insl
aaa
loop
pop
roll
jp
and
movsl
jp
gs
je
push
cmpsl
adc
dec
xor
cmp
inc
and
ljmpw
psraw
rcl
dec
out
mov
loope
mov
sbb
and
imull
jnp
and
pop
xchg
push
mov
pop
or
stos
mov
int
add
push
out
sub
pop
aad
add
xchg
mov
add
cld
adc
jge
adc
cmpb
xor
inc
imul
sbb
inc
push
sbb
or
lods
repz
arpl
pusha
loopne
push
out
andb
pop
pop
scas
mov
adc
xor
add
aas
in
xchg
or
cmpsb
fcmovu
in
jle
mov
mov
loop
mov
dec
data16
sub
outsb
ret
push
rorl
xor
inc
cmpsl
dec
adc
dec
cmp
mov
xor
loop
dec
or
fbld
lret
jmp
in
cmpsb
stos
fistpl
js
roll
lds
cld
push
xor
dec
shl
dec
xchg
sbb
inc
mov
or
add
in
shr
loopne
ja
fnstsw
popf
lods
mov
arpl
jle
bound
ret
adc
push
push
xchg
mov
jno
nop
popa
mov
sti
or
test
shlb
cmp
cmp
mov
jns
mov
push
mov
xchg
mov
mov
sarl
dec
andb
ret
pushf
mov
push
xchg
cs
pop
inc
sar
cmp
in
mov
fstpt
and
sbb
outsb
jg
jle
into
sahf
mov
insb
cmpsb
lcall
cltd
pop
movsl
and
inc
jbe
notl
movsl
sahf
addb
sub
dec
loopne
push
cltd
stos
mov
pop
pushf
cltd
jecxz
in
mov
xor
or
movsb
lcall
js
sub
es
movsl
int
popa
push
ret
mov
jge
push
clc
cmp
test
imul
cwtl
stc
aas
mov
pop
ficoms
and
jbe
pop
sbb
inc
push
inc
xchg
push
inc
loope
in
or
push
xor
jge
aad
lods
mov
outsb
add
in
in
icebp
test
std
pop
add
inc
aam
das
pop
mov
and
sub
mov
sub
call
call
lods
xor
insb
mov
repnz
sbb
jbe
xor
jns
test
mov
mov
lods
push
cmp
divl
pop
ret
aaa
inc
sub
testb
fisubrs
movsb
aam
nop
in
in
popa
xchg
ficompl
adc
push
leave
mov
push
push
adc
lret
mov
jle
inc
xchg
sub
inc
xchg
and
in
jle
xchg
fistl
aam
pop
xor
add
sbb
pop
movsl
dec
jnp
ja
mov
sahf
jp
pusha
dec
jo
push
shrb
sub
dec
jp
inc
arpl
sbb
popl
popf
in
jle
out
jp
lret
lods
cmpsl
fidivrs
xchg
cmpsb
mov
lods
mov
and
sub
push
mov
inc
cmp
sub
cmpsb
in
lret
stos
fs
insl
mov
add
or
pop
xchg
lret
mov
xchg
add
call
fwait
dec
addr16
mov
addr16
inc
inc
mov
lods
pop
jne
pusha
les
loope
outsl
addl
sub
sbb
mov
jo
mov
sbb
lds
mov
cltd
in
lcall
repz
cwtl
imul
jae
push
test
jno
lock
insb
cmp
mov
xchg
sbb
jle
push
shrb
cmp
nop
repz
cmp
dec
mov
into
xchg
adc
loop
cld
mov
lods
repnz
hlt
sbb
rcrl
add
notl
jmp
popf
mov
push
jbe
push
jecxz
movsb
xlat
mov
add
sbb
cmp
cmp
or
out
cmp
mov
aad
xor
imul
or
fcomps
fs
mov
push
bound
sahf
or
jae
add
mov
adc
insl
inc
adc
pop
add
bound
pop
addb
stos
out
into
inc
cmc
jp
jb
aad
xlat
xor
das
hlt
adc
loopne
dec
mov
out
add
mov
cmp
in
mov
mov
mov
mov
out
fistl
shlb
pop
aad
jae
sahf
fstpl
cmp
jp
dec
shlb
aam
push
jl
test
iret
or
test
xchg
sub
jmp
lods
pop
and
pop
lods
adc
or
pushl
mov
fistpll
pushaw
inc
fcoms
mov
dec
jae
cltd
setns
mov
mov
dec
jecxz
iret
mov
or
insb
nop
sub
cwtl
mov
inc
jecxz
or
jo
fisubs
dec
fiaddl
cmp
fcomip
fwait
out
jnp
sub
inc
test
inc
int3
push
mov
push
sbb
or
pop
sbb
jo
adc
adc
push
fcoms
pop
shrl
push
subb
movsl
lds
sbb
cmc
pop
sbb
fs
in
pop
outsl
dec
and
loop
pushf
loope
fdiv
jmp
jp
fsubl
ljmp
xchg
aas
loope
pop
les
pop
js
push
and
jl
shr
clc
loopne
outsb
xor
js
les
mov
xchg
sub
mov
or
pop
mov
and
fstl
scas
fs
push
push
cld
testb
jno
dec
mul
xchg
ja
cltd
ja
cwtl
sub
std
fistpl
movsl
or
inc
stos
mov
mov
cltd
add
and
hlt
fidivl
ss
xchg
jmp
cmpsb
cmp
pusha
stc
mov
imul
sahf
outsb
data16
cmp
fisttpl
loope
push
fildll
jmp
xor
push
imul
std
xchg
mov
repz
add
into
xchg
es
push
out
jno
sarl
sbb
xor
cmpsb
in
testl
gs
cmp
pop
lods
mov
xor
add
push
mov
jl
or
mov
pop
xor
in
mov
je
nop
xor
mov
mov
mov
das
mov
pop
stos
stos
add
stc
rep
sbb
popa
add
int
out
mov
nop
cs
rorb
sub
adc
cltd
and
push
pop
repz
fildll
enter
fists
adc
pusha
pop
jnp
xor
and
dec
push
inc
or
push
loop
adc
jecxz
cmp
adc
fists
adc
mov
mov
add
les
aas
out
cmpsb
push
das
sbb
test
jecxz
sub
mov
or
mov
aas
test
push
pop
sbb
push
pop
popf
mov
jne
pop
dec
mov
adc
pmaxsw
or
fisubl
cli
fldcw
cmpsb
ret
mov
pusha
fwait
adc
pusha
dec
loope
bound
jl
push
jp
call
xchg
movsb
pop
mov
or
and
xor
sub
movsl
and
cmp
fstpl
mov
adc
js
pusha
sub
clc
enter
inc
or
cmp
sub
pop
imulb
adc
popf
shl
sbb
dec
xchg
dec
enter
cmp
ret
out
mov
aad
push
push
xchg
push
lcall
repz
xor
or
or
dec
aaa
cmp
xchg
dec
sbb
mov
xor
test
sub
jle
pusha
cltd
fs
bound
addr16
cmpsl
lahf
pop
rcrl
push
pop
loop
pop
cwtl
or
insb
outsl
xchg
ljmp
fidivrs
sub
fiaddl
adc
lds
fwait
mov
mov
imul
test
jnp
push
push
ret
push
xor
mov
pop
dec
lahf
in
imul
mov
mov
xchg
insb
popa
stos
mov
pop
je
clc
in
cltd
loopne
cmc
test
test
cmp
or
lods
mov
aas
jo
gs
adc
ret
push
mov
adcb
mov
mov
shl
dec
mov
push
leave
or
imul
stc
push
mov
in
pop
or
jmp
push
push
jecxz
out
popa
add
pop
testl
lea
test
popf
scas
notb
dec
sub
dec
inc
iret
mov
cmp
pop
rcll
mov
ja
mov
xor
shll
cmp
mov
mov
pop
mov
or
loope
aas
scas
decb
scas
test
and
mov
jnp
into
cmpsb
js
sahf
in
int
data16
lds
sub
xor
cli
mov
dec
test
js
inc
lods
push
lds
and
dec
jle
lds
pop
stos
jle
add
test
or
leave
les
jns
rolb
pop
in
enter
xor
ficoml
inc
jo
aam
add
push
repz
stos
stc
pop
outsl
mov
or
dec
xor
int
mov
fwait
mov
shlb
pop
or
xor
fsubrs
insb
mov
stos
cmpsl
sub
test
push
xlat
jl
xor
rorb
shlb
repz
mov
xor
mov
loop
outsl
in
xchg
inc
jecxz
sbb
icebp
dec
adc
mov
rcrb
xchg
lahf
add
push
sbb
inc
xchg
mov
aaa
push
js
inc
out
ja
pop
push
ljmp
icebp
lods
pop
cmpsb
test
outsl
mov
push
and
xor
dec
nop
mov
mov
mov
push
loop
sub
mov
test
xchg
sbb
sub
jge
mov
mov
stc
xchg
sarl
or
mov
lret
mov
call
xlat
cmp
js
and
mov
or
dec
mov
mov
and
pop
mov
dec
arpl
outsl
enter
adc
ds
fsubrs
mov
push
mov
int3
sbb
mov
mov
mov
mov
dec
aas
sbb
xlat
int
movsb
push
sub
add
daa
jg
test
outsl
cmp
das
lret
cwtl
in
lret
xchg
pop
mov
test
push
adc
js
dec
inc
popf
test
nop
icebp
inc
mov
aad
sbb
xchg
cmpl
imul
push
pop
sahf
mov
pop
cmp
imul
loop
fwait
push
aas
test
jle
pop
add
adc
pop
addl
sbb
pop
add
inc
lahf
lds
mov
enter
outsb
sbb
outsb
pop
jecxz
pop
mov
int3
mov
in
in
jbe
add
out
fists
aaa
jmp
ja
cmp
nop
addl
xor
push
enter
pop
lods
add
lods
sub
mov
stos
mov
push
outsl
jge
or
insb
jnp
aad
mov
dec
inc
les
lods
test
pop
lea
fldcw
inc
jbe
out
int3
nop
rcr
xor
inc
dec
bswap
loop
xchg
push
outsb
out
adc
cmp
jp
push
push
ret
int
in
mov
clc
ret
add
jge
es
or
sub
xchg
mov
imul
push
pushf
adc
lods
cmp
mov
xchg
ret
sar
jge
jmp
neg
mov
aam
mov
xchg
in
mov
cmp
addr16
cmpsl
ss
cmp
outsl
in
jno
cmp
jb
sub
ja
pop
mov
gs
inc
mov
stos
cs
jl
mov
pop
addr16
sbb
cmp
rclb
out
xor
mov
into
fcom
movsl
sbb
jecxz
push
repz
shll
cltd
fwait
ja
xor
stos
or
imul
xchg
push
pop
sbb
ljmp
push
bound
mulb
je
cmp
inc
dec
dec
fdivrl
xchg
pop
mov
ficoml
jne
fbld
lds
pmuludq
das
pop
decl
into
jle
mov
xor
jns
fsubrs
movsl
or
xor
ss
or
insb
jno
repnz
ss
mov
fisubl
adc
cli
cmpsb
fistps
fmull
push
mov
cmp
inc
dec
mov
jae
pop
mov
sub
jl
xor
jnp
lea
add
ficomps
xorl
dec
mov
enter
mov
and
shll
sbb
movb
hlt
push
lret
push
cmpsl
sarl
aam
pop
jl
fidivl
push
dec
or
sbb
mov
stos
inc
imul
sbb
nop
or
fcoms
pop
sbb
pop
outsb
shll
adc
and
out
pop
sbb
outsb
xchg
sbb
push
jnp
cmp
fwait
addr16
mov
stos
xchg
in
in
cmpsl
pop
push
mov
mov
sbb
rcrb
mov
xor
faddp
int3
xor
mov
in
pushl
loop
daa
cs
outsb
dec
dec
cmp
fwait
cmpsb
test
push
or
imul
outsb
and
push
mov
xchg
mov
sub
mov
int
push
push
dec
incl
repz
inc
or
sti
es
and
push
pop
aad
popf
loopne
xchg
inc
push
cmc
sub
aam
and
pop
jmp
jl
mov
and
inc
sbb
xchg
ds
xchg
add
xor
ret
shll
fwait
push
icebp
dec
push
movsl
popa
test
fstpt
ja
enter
inc
lcall
insl
adc
int3
test
dec
pushf
lea
jge
jl
enter
push
xchg
mov
add
cmp
sbb
sub
aas
fisttps
inc
dec
icebp
out
shrl
cmp
ja
push
out
cmpsl
int3
xor
push
or
imul
outsl
cmpb
ja
shr
sub
inc
xor
pop
jno
enter
out
and
scas
cltd
addr16
and
adc
movsl
mov
movntq
sbb
cmp
imul
mov
lock
lea
stos
xor
mov
outsb
repnz
lock
cmp
jl
bswap
sub
xchg
es
mov
mov
fwait
pop
cwtl
lret
mov
cmpsb
and
aaa
cld
ja
cmp
daa
dec
cld
push
jmp
popf
fnstcw
jbe
jge
in
cmp
xor
imul
sbb
pop
pop
dec
ja
pop
add
sbb
adc
into
push
test
divb
pushf
lret
into
push
je
ret
or
or
inc
pop
mov
mov
fcoms
inc
xor
lods
push
mov
cmpb
dec
pop
and
loope
movsb
adcb
cltd
cwtl
adc
adcl
jl
int
js
and
dec
or
sub
jnp
cli
cmp
inc
loopnew
ret
cmp
or
js
jae
popf
fisubrs
dec
roll
ficomps
jg
rolb
faddl
jns
imul
out
fmuls
lods
jns
cwtl
fxch
mov
mov
inc
enter
inc
popa
dec
push
ret
jge
mov
aam
call
xor
pop
int3
adc
xchg
je
pop
xchg
stc
ss
lock
pop
and
addr16
pop
and
xor
lods
mov
in
push
mov
mulps
cmp
jp
and
frstor
adc
out
clc
add
cwtl
idivb
sub
cmp
xchg
mov
rol
jnp
stos
xor
jb
inc
aad
adc
fisttpl
loop
cmp
xor
adc
inc
sbb
aad
test
or
int
xor
dec
outsl
xchg
shl
mov
or
jbe
fsub
adc
xchg
sub
sti
out
push
bound
pop
pushf
rclb
xchg
sbb
lea
in
inc
loopne
mov
sub
inc
lret
fidivrl
ret
inc
adcb
sub
or
test
int3
stos
fst
inc
push
jb
fmull
jbe
mov
sbbl
int3
out
pop
inc
test
push
xor
lcall
cmp
jns
xorl
dec
pop
shrb
enter
arpl
cmpsb
cmp
mov
mov
loope
push
insb
jns
jecxz
mov
push
sarb
lahf
andl
mov
push
mov
xchg
icebp
clc
mov
fsubr
and
push
test
mov
lods
insb
jnp
push
mov
int3
icebp
sbb
cmp
inc
adc
mov
lds
outsl
stc
cmpb
js
xchg
test
push
lods
popa
push
jl
roll
cmp
xchg
shlb
aam
cli
stos
repz
or
movsl
pop
push
dec
subl
mov
adc
cld
popa
xchg
adc
fbld
int
notl
adc
int
sub
xor
sub
mov
inc
xchg
cmp
lcall
xor
lods
movsl
cmp
iret
sbb
mov
sub
jb
pop
and
int
sbb
and
out
inc
lods
pop
cmpsb
adc
and
xlat
aas
add
lds
mov
xchg
xchg
sub
movsb
push
cmpsl
in
sub
inc
popa
inc
add
xchg
dec
jns
dec
push
cmpb
lds
inc
xchg
xchg
std
scas
pop
cmpsl
jae
int3
shlb
sub
mov
pop
popf
dec
adc
xor
in
push
xchg
or
inc
mov
out
fimuls
movsl
sbb
mov
lods
pop
add
out
aas
mov
ret
mov
sbb
movsb
faddl
je
dec
ror
sbb
in
mov
xor
lods
push
add
mov
insl
out
or
xchg
jle
pusha
cmp
in
pop
or
loopne
pop
int
outsl
stc
push
hlt
push
daa
mov
popw
sbb
jmp
loop
lea
xchg
mov
clc
out
mov
stos
jg
fldl
ss
in
push
std
inc
ja
mov
mov
call
sub
inc
pop
mov
rcll
scas
icebp
and
cmpsl
mov
push
test
mov
cmp
sti
xchg
sub
cmc
inc
jne
rorl
pop
jle
xchg
repz
dec
adc
mov
xchg
pop
loop
adc
xchg
test
out
inc
cmpsb
orl
pop
sbb
mov
cmp
ds
pop
pop
fnop
jle
imul
inc
or
incl
iret
dec
rclb
xchg
adc
test
lret
xor
jno
popa
iret
lods
jbe
int
add
and
clc
or
or
and
addb
add
sti
pop
enter
adc
addr16
fldcw
jnp,pn
jns
mov
jg
adc
popf
jae
jp
add
xor
std
aad
imul
ret
cli
sub
jmp
and
nop
js
mov
dec
repnz
pop
mov
inc
sub
das
inc
repz
add
negb
call
lcall
shl
push
ss
push
shrd
mov
ljmp
sti
jnp
vmread
fs
mov
cld
or
std
test
scas
mov
push
mov
jne
stos
xor
sub
lds
in
fwait
pop
xor
and
pop
inc
xor
push
imul
mov
ret
iret
pop
jb
insb
aad
push
xchg
cli
jbe
cli
push
xchg
es
lahf
jecxz
sahf
inc
clc
jb
repnz
dec
leave
adc
aam
jno
xor
and
bound
in
push
rcrl
sub
repz
negl
adc
scas
pop
fistpl
int3
or
adc
fidivl
movsb
sti
test
scas
pop
fidivrl
ljmp
repnz
cmp
cld
scas
aas
stos
adc
or
lds
xchg
pop
dec
mov
or
pop
lods
xchg
iret
movsb
mov
sahf
shl
cmp
je
nop
dec
addr16
andb
inc
mov
inc
cli
in
xchg
add
xchg
out
pop
test
daa
test
sbb
dec
in
repnz
pop
cwtl
vpsllw
and
push
ss
js
mov
xor
outsb
inc
jecxz
and
fsubrl
fimuls
test
test
and
mov
stc
fdivl
aad
lds
rcll
jne
clc
inc
je
jnp
mov
shlb
out
push
xor
divb
or
fstpl
ljmp
dec
pop
and
int
lods
jmp
pop
movsl
jbe
fs
mov
push
mov
mov
pusha
mov
adc
mov
push
sbb
stc
xor
out
mov
sub
push
pop
inc
mov
pop
mov
inc
jnp
pop
andl
idiv
or
or
mov
push
inc
mov
push
jge
ja
jecxz
sub
iret
inc
xor
inc
imull
push
lock
leave
mov
pop
mull
sbb
mov
pop
mov
sub
pop
pmaxub
or
add
stos
into
pop
aam
lret
insb
scas
icebp
adc
cmc
sbb
gs
adc
xor
outsl
xor
shlb
ja
push
out
pop
call
pop
out
push
mov
xchg
hlt
dec
scas
fwait
push
xchg
call
loope
and
mov
lock
mov
leave
iret
ljmp
or
movsb
mov
mov
mov
loope
adc
cmpsb
mov
in
mov
rol
xorb
subb
adc
mov
addr16
aaa
inc
data16
iret
call
test
loopne
adc
xchg
shr
rep
shl
icebp
cwtl
fwait
sub
outsl
fwait
sbb
mov
imulb
mov
rcrb
sarb
add
sub
inc
jo
or
sbb
or
push
sbbb
movb
lcall
out
stc
jbe
and
fstp
mov
cltd
sbb
mov
fidivrl
adc
out
lock
stos
dec
pop
outsb
sbb
lcall
push
in
test
call
xor
add
test
push
mov
stos
pop
shrb
js
sub
ljmp
push
in
sbb
ret
fimull
inc
mov
addr16
test
adc
push
sub
lods
fidivl
xchg
add
sbb
aam
loope
cltd
jp
pop
or
clc
ss
adc
adc
sub
mov
ja
jbe
sbb
jl
mov
test
adc
add
lcall
arpl
shrb
adcb
call
and
mov
pop
scas
dec
pop
dec
data16
out
imul
sahf
mov
das
arpl
inc
push
pop
dec
pop
xor
aas
dec
mov
sbb
or
push
fidivs
xor
sbb
rol
or
ret
add
mov
ljmp
pop
addr16
notb
or
mov
ja
push
into
and
movsb
std
js
adc
fwait
negl
and
dec
mov
out
andnps
mov
push
loope
dec
pop
inc
mov
fwait
xor
ja
add
cmp
cmpsl
mov
ret
mov
out
daa
inc
sbb
in
repz
testl
xor
push
lods
enter
addr16
inc
movsb
lods
movsb
mov
sbb
data16
xchg
and
push
dec
add
sub
loope
ret
mov
sbb
xchg
test
mov
push
iret
fldt
sarb
inc
and
into
loop
push
shlb
add
dec
or
cmpsl
jp
lods
sbb
mov
fisttps
bound
push
xor
je
rorb
lcall
out
fcomip
xchg
jg
and
addr16
dec
les
and
fiadds
push
cwtl
dec
lret
xor
adc
jl
mov
lahf
shl
bound
jle
mov
xchg
or
sub
shrb
andb
add
loopne
mov
sub
addr16
cmp
scas
dec
adc
add
dec
mov
xor
or
pop
leave
pushf
jno
adc
movsb
sbb
fisttps
push
push
movsl
or
and
lret
push
sub
xchg
popf
cmc
xor
xchg
and
or
out
or
add
and
sbb
nop
xor
out
loopne
out
pop
and
add
mov
nop
fwait
adc
test
jmp
lds
dec
inc
and
or
cmp
loop
mov
inc
fs
inc
popf
pop
in
xor
test
adc
xchg
insb
test
jae
adc
outsl
dec
shll
and
push
pop
leave
inc
inc
mov
mov
dec
adc
xchg
aaa
repz
mov
subb
dec
jg
pmulhw
ljmp
pop
pop
loope
push
sub
pusha
mov
lock
popa
or
adc
xchg
insb
push
lahf
dec
and
push
cmpsl
and
or
aad
pusha
cmp
aaa
stos
adcb
fsubl
mov
adc
mov
clc
ja
and
or
jbe
loope
dec
lds
pop
cmp
out
ret
push
imul
bound
sbb
jnp
mov
filds
sarl
xor
cmp
mov
pop
push
loopne
xor
jle
push
cmp
push
popa
xchg
in
inc
mov
ret
xor
xor
or
cmp
rolb
cmpsl
cwtl
stc
addb
jecxz
sarl
sahf
scas
mov
mov
mov
mov
sub
cmpb
or
jmp
clc
adc
cmp
std
jp
roll
or
cld
frstor
or
out
loopne
add
cltd
fisttpll
cli
or
les
xor
xchg
pop
xor
das
pusha
inc
pop
out
hlt
imull
or
fs
lahf
xlat
cmp
pop
je
pop
cld
xchg
in
arpl
mov
cmp
add
mov
leave
push
or
lock
add
shlb
push
xor
xchg
incb
xor
loopne
pop
movsb
jmp
jno
lock
lcall
add
test
pop
aaa
dec
jmp
or
addr16
dec
stos
test
shlb
adc
dec
adc
fcmovne
pop
je
jne
jno
stos
popf
data16
and
inc
push
test
repz
divl
cmp
mov
loopne
adc
push
js
out
fwait
ja
flds
scas
push
mov
lea
movsb
sbb
lea
xor
push
lret
mov
ficompl
pop
dec
xor
fwait
addl
sahf
jo
xor
xor
test
fstl
mov
movsb
mov
adc
pop
sbbl
stc
pop
adc
psubsb
cli
ja
cmpsl
fistpl
xor
or
adc
inc
sahf
aam
decb
jmp
pop
adc
jle
ret
cmp
sbb
clc
lcall
jne
loope
cmp
ror
mov
cmp
cli
xchg
cs
mov
enter
stc
mov
cmpsl
stc
insl
stc
cmpsl
imul
jg
lods
sbb
shlb
mov
lea
iret
les
fsub
mov
mov
mov
add
sub
mov
inc
xchg
inc
dec
jns
cmpl
mov
jne
cmp
test
jmp
cltd
mov
adc
xor
add
test
enter
shrb
mov
cld
nop
lret
cmc
dec
lret
inc
lcall
test
stos
pop
pusha
pop
adc
push
or
and
fisubrl
pop
mov
xor
mov
xchg
in
and
popa
ljmp
pop
pop
inc
pop
push
call
or
push
shlb
aad
mov
mov
xchg
pop
push
mov
jo
dec
xor
shlb
repnz
add
negl
push
dec
push
jle
addr16
xor
js
sbb
fistl
testb
fs
mov
xchg
cli
fsubs
sub
push
mov
adc
jle
in
adcb
lcall
test
add
mov
push
push
cmpsb
addr16
decl
lcall
add
push
sub
decb
jae
mov
mov
popl
push
and
les
sbbl
mov
xchg
movsl
jle
inc
xorl
xchg
les
ret
out
inc
test
je
aad
add
sub
sti
jle
fildll
in
sub
loope
lahf
sbb
ret
into
xor
inc
sbbb
out
divb
jp
repnz
xor
xchg
jns
and
popf
notl
ror
push
inc
pop
xor
dec
push
jp
push
xchg
fistps
das
xor
add
xlat
pop
repnz
sub
pop
mov
push
pop
xchg
mov
clc
aad
and
jge
push
add
out
popf
or
and
xor
mov
cli
add
pop
inc
ja
sbb
sub
decl
fs
imul
outsb
data16
fnstsw
push
push
and
scas
mov
pop
or
xorl
xchg
scas
jge
addl
inc
notb
lea
in
outsb
shl
push
lock
jne
imul
js
xor
xchg
negl
dec
mov
or
mov
jb
and
xchg
add
jno
push
out
mov
lret
pop
fldenv
insl
adc
and
insb
aad
in
loopne
cmc
loope
call
incl
xchg
sti
jp
lahf
jl
mov
jno
mov
push
lcall
dec
scas
inc
ds
inc
call
repnz
jge
cmp
into
subl
jne
mov
jmp
out
and
ds
mov
js
roll
adc
int
xacquire
scas
cmp
adc
ja
cmp
sahf
xchg
mov
pop
inc
lods
call
jecxz
push
push
cmp
insb
in
cmc
scas
jns
loope
xchg
inc
sbb
xchg
fcomip
ret
push
es
jne
adc
push
inc
clc
adc
fidivrs
mov
cmp
cmp
or
mov
push
lds
fs
int3
daa
push
xor
mov
loope
mov
call
xor
cmp
xor
fwait
sbb
xchg
xchg
push
stc
sub
out
dec
xchg
leave
add
call
loop
dec
out
xor
test
sub
std
mov
jo
rol
push
dec
les
and
inc
push
jns
push
pop
fisubl
mov
mov
btsl
stos
adc
mov
cmc
xlat
pop
push
xchg
sub
mov
scas
sarl
loopne
aaa
lret
mov
adc
mov
ret
pop
push
int
xor
popf
cltd
and
js
cmc
push
je
xchg
pushf
rep
xor
xchg
pop
jp
xor
push
xchg
jle
and
pop
add
adc
jbe
lret
es
sub
xchg
mov
gs
xchg
leave
roll
adcb
pop
repnz
enter
add
stos
aaa
push
fisubrl
loop
push
popf
shl
jmp
dec
push
jecxz
roll
push
or
or
jno
add
sub
ljmp
aas
aad
adc
jo
and
je
jl
adc
mov
aam
ror
sub
inc
call
mov
stos
pop
pop
out
xchg
pop
dec
xchg
jo
and
test
or
pop
mov
sbb
mov
or
test
mov
loop
ret
pop
rorb
cwtl
pop
pop
into
ret
mov
mov
pop
das
mov
push
inc
add
int3
aam
ret
pop
pop
xchg
pop
xor
shlb
pop
or
pop
dec
add
loop
pop
into
jb
shr
xor
filds
loopne
les
mov
loope
clc
shlb
xchg
cmpsb
jne
mov
lret
mov
insl
mov
push
mov
in
sbb
push
inc
mov
and
xor
pop
movsb
je
push
or
popf
push
jecxz
xchg
in
hlt
jns
stos
xchg
pushf
imul
xchg
cmpl
add
lea
inc
sub
ret
or
out
fimull
pop
outsb
dec
adcl
scas
data16
jmp
push
xchg
mov
xchg
mov
xchg
lcall
loop
xchg
dec
cmpsl
das
jno
in
outsb
es
pop
shrb
dec
adc
xor
loopne
popa
xchg
gs
jecxz
pop
bound
popa
lods
jo
or
sahf
dec
mov
pop
out
sbb
mov
sti
test
fwait
jne
pop
xchg
popa
mov
or
out
shll
sbb
imulb
movsb
pop
iret
stc
inc
pusha
sahf
xor
scas
in
inc
int3
fdivrl
shrl
js
test
or
mov
mov
ret
cmp
mov
sbb
and
adc
push
in
mov
push
cmp
mov
dec
pop
mov
shll
out
sbb
stos
in
push
lret
add
das
js
scas
pop
into
xchg
icebp
pop
incl
mov
outsb
jb
out
mov
ret
adc
rcrl
test
test
ljmp
fldl2t
into
movsb
push
xchg
inc
xlat
jae
add
jle
iret
imul
scas
into
push
jl
out
sbb
loop
orl
mov
pop
ja
out
popf
data16
or
scas
or
ds
cwtl
pop
dec
cld
dec
je
xchg
sbb
jbe
mov
mov
xchg
jno
lods
dec
test
daa
subb
adcb
mov
movsb
mov
mov
add
les
testb
into
xchg
mov
push
and
or
negl
pop
rcrl
add
lcall
xchg
xor
xchg
xchg
aam
xor
or
popf
mov
fldlg2
adc
push
sbb
fimuls
sub
push
cli
and
xchg
adc
cltd
pop
into
scas
addb
mov
mov
test
pusha
pop
test
cmp
jbe
lahf
sub
add
fs
lret
jo
jne
fwait
mov
adc
push
jmp
cmp
out
fistl
cmp
push
enter
nop
aas
jle
lea
push
cmp
repnz
and
xor
add
cmp
daa
sti
dec
movsb
xor
sub
inc
xlat
hlt
xchg
or
or
sub
push
mull
adc
mov
lcall
sub
ret
leave
push
loope
fiaddl
add
jb
in
lds
cmovg
shll
mov
imul
hlt
or
call
pusha
push
sbb
call
or
or
testl
rclb
jmp
xchg
stos
sti
mov
and
sub
jnp
xor
popf
insl
jmp
add
aad
cmpsb
cmp
mov
adc
mov
cmp
mov
iret
lret
shll
add
enter
cltd
out
pop
adc
mov
add
lods
gs
mov
in
je
xchg
sahf
xchg
imul
push
cs
jne
mov
roll
int
lret
not
clc
xchg
push
int3
jns
loop
push
sub
in
dec
sti
test
sahf
and
sub
fdivs
movsb
xchg
mov
or
scas
repnz
orb
cmc
rcll
push
mov
push
add
das
repnz
cmpsl
mov
dec
and
movsl
scas
jl
jle
jecxz
pop
movsl
je
xor
movsb
aad
outsl
fstp
std
jl
adc
and
bound
push
sbb
xchg
pop
sub
mov
mov
push
scas
es
cwtl
cmp
inc
aam
push
imul
gs
push
and
jne
mov
out
in
cld
inc
out
jmp
stos
jg
lock
xchg
jnp
push
daa
pop
lods
and
add
dec
ja
pop
jae
pop
push
pop
dec
stos
xor
pop
je
jbe
in
xor
test
mov
jns
shlb
repz
push
lea
mov
push
add
cld
inc
popa
mov
xor
mul
or
and
dec
inc
xor
out
gs
icebp
pushf
jns
loopne
mov
xor
lret
add
loope
daa
sub
adc
imul
xchg
sbb
cmp
leave
out
ret
loop
lds
out
mov
push
pushf
pop
fistl
xor
bound
lret
stc
cmpsl
in
adc
clc
mov
jmp
inc
jno
imul
and
cmpsl
pop
mov
push
push
jl
popa
jbe
andb
push
jae
push
fstps
mov
movsl
xchg
fiaddl
mov
clc
sbb
sub
ret
xor
out
push
loop
ret
and
inc
xor
jle
repz
xchg
adc
jns
lcall
shll
shll
mov
add
push
mov
sub
inc
and
or
das
mov
cmp
sbb
push
pusha
cld
dec
xchg
push
mov
into
movsb
pop
cmpsl
repnz
hlt
lock
xchg
arpl
rcrb
mov
dec
cmp
cs
pop
dec
xchg
mov
add
dec
pop
push
jo
ljmp
mov
aad
mov
loop
pop
pop
lds
call
shlb
je
fdivrp
test
jge
add
add
cmc
xor
fwait
cmp
xchg
and
push
stc
andb
pusha
cs
push
in
sbb
clc
mov
mov
outsb
dec
pop
or
nop
jno
push
and
test
mov
mov
loop
stos
inc
mov
call
int3
push
outsb
sti
pop
jecxz
xchg
addb
int
mov
mov
add
pop
outsl
jg
xchg
push
pextrw
jo
leave
andb
fs
sahf
sbb
push
push
arpl
or
dec
test
mov
outsl
fnstcw
adc
jnp
filds
sub
inc
lea
test
xor
clc
loope
jmp
lahf
dec
icebp
faddl
repnz
hlt
cs
movsb
or
cmpsl
idivl
cmpsl
pop
ja
inc
cmpsl
xchg
das
mov
rcr
pusha
orb
inc
push
push
je
dec
xor
mov
icebp
or
xchg
jmp
aaa
dec
pop
mov
outsb
inc
hlt
adc
sbb
out
rcr
inc
cmp
test
repz
aas
cwtl
inc
or
xor
ud0
sbb
pop
adc
push
xchg
inc
mov
aad
pushf
sub
mov
push
pop
push
mov
jmp
jnp
mov
xor
enter
nop
push
bswap
stc
push
not
mov
xchg
push
mov
int3
and
ja
outsb
ret
xchg
cmp
pusha
loopne
jns
cmc
arpl
pop
xchg
dec
xor
sub
enter
add
adc
push
and
lret
mov
fisttpll
aas
sbb
add
or
or
or
jne
clc
aaa
xchg
xor
pop
dec
adc
arpl
mov
sbb
ret
imul
sbb
mov
stos
sbb
rcrb
adc
jmp
or
ljmp
outsb
xchg
sbb
pop
push
inc
mov
cmp
or
stos
aas
int3
mov
shr
test
insb
pusha
push
imul
fwait
call
fdivrp
jns
pop
and
stos
cmpsl
mul
xchg
add
push
xor
inc
sub
mov
jb
iret
fs
push
aad
out
nop
aaa
and
and
icebp
shrl
mov
jmp
in
push
pop
pusha
lahf
inc
sarb
push
rclb
and
lret
shl
jnp
es
clc
out
push
and
cmp
inc
add
adc
aam
or
sbb
xor
sbb
mov
lcall
adc
aas
push
inc
mov
inc
pop
fcom
pop
clc
lock
lods
jmp
mov
sub
and
out
and
es
ficoms
orl
out
in
or
outsl
or
inc
das
and
cli
addl
jmp
adc
dec
inc
enter
cmp
int3
or
mov
int3
mov
data16
bound
movsl
xor
sbb
imul
push
stc
sub
test
add
xchg
dec
inc
xchg
jmp
jbe
pop
cmp
in
ja
call
add
int3
or
lret
xchg
fistl
mov
imul
movsb
ss
xor
sbb
or
mov
aad
add
mov
out
mov
jl
bound
loopne
jl
pop
inc
js
iret
mov
outsl
mov
mov
add
scas
loope
popf
sbb
jecxz
mov
outsl
ljmp
leave
mov
movsb
dec
sub
rdmsr
jl
sbbb
and
push
rorb
jo
fwait
out
pop
iret
inc
jne
mov
mov
cld
push
aam
fcomi
push
imul
fnstcw
sub
jbe
js
sub
fcomps
jmp
cmp
test
pop
or
mov
stos
clc
add
mov
es
jle
adc
jle
xor
jmp
mov
push
xchg
dec
jl
adc
mov
ja
scas
mul
in
add
int3
push
xor
call
js
sar
push
cmp
stos
jnp
stos
faddl
movsl
ss
ror
in
int3
adc
sbb
ret
fldcw
cmp
insl
divl
jns
mov
pop
inc
jns
pusha
cmp
jmp
fstps
imul
mov
cmp
cltd
lret
sbb
mov
pop
iret
mov
fimuls
sub
fmuls
pop
push
lds
push
or
mov
adc
xchg
jp
sbb
sbb
and
in
fists
pop
mov
test
adc
pop
dec
sbb
mov
aam
pop
addr16
mov
inc
jecxz
stos
mov
mov
adc
pop
scas
inc
mov
xorl
xchg
in
cmp
bound
adc
jae
outsb
outsb
loop
daa
and
add
test
loopne
inc
shlb
xchg
outsb
test
mov
adc
push
ja
pop
xchg
loop
mov
mov
adc
js
outsl
pop
daa
xor
mov
stc
sbb
sub
push
sub
addr16
testl
and
mov
xor
lcall
loopne
xor
dec
clc
mov
xchg
sbb
lods
xorb
xchg
clc
icebp
sub
inc
jmp
clc
shrl
out
in
add
lret
icebp
jl
nop
ss
iret
dec
repnz
icebp
xchg
cmp
inc
lods
lea
mov
insl
inc
imul
add
movsl
out
scas
cmpsl
fchs
xchg
or
in
outsl
pop
fsub
sub
adc
in
shl
ds
cwtl
mov
mov
mov
js
pusha
addr16
mov
int
out
in
sub
imul
xchg
or
rolb
je
dec
imul
xchg
shrb
test
ja
outsl
add
rolb
movsb
push
dec
pop
mov
cwtl
cwtl
mov
enter
cmc
mov
rolb
sub
add
sbb
hlt
mov
xchg
rcl
test
aas
loop
aaa
mov
sbb
nop
ljmp
imul
cmp
popf
xor
mov
inc
das
ljmp
ficoms
or
or
insb
add
popf
lods
push
xor
dec
fwait
push
mov
jnp
mov
inc
pop
loope
cltd
sbb
andl
inc
or
sub
mov
sbb
lods
jl
xchg
ljmp
xor
into
aas
inc
outsl
daa
sub
data16
pop
mov
dec
xchg
mov
dec
faddl
popa
dec
pop
push
orl
mov
out
es
jle
mov
push
outsl
ds
jno
push
push
or
mov
lods
sbb
rcrb
jmp
xor
int
adcl
idivl
enter
jg
mov
int3
fistl
add
stc
in
xchg
or
icebp
xchg
test
int3
mov
hlt
dec
jae
pop
dec
xlat
sti
or
push
add
and
pop
mov
jmp
xchg
sti
adc
jo
dec
dec
and
hlt
ret
negb
loopne
xor
add
dec
sub
bound
inc
fildll
cmp
test
lds
ss
add
sub
into
stos
repz
js
xor
or
fdivrp
movsb
jl
rol
and
lret
push
mov
sub
ss
sub
and
leave
cs
fimuls
outsb
mov
bnd
mull
aas
jl
mov
insb
dec
pop
adc
adc
ljmp
out
push
dec
rorl
jbe
repnz
jns
xchg
add
inc
xchg
test
aam
jne
ljmp
dec
fadds
aam
and
sub
movsb
rcll
adc
sbb
out
inc
add
inc
in
dec
stos
push
imul
out
mov
jae
inc
mov
mov
bound
sub
mov
and
and
or
test
push
bound
pop
push
adc
imul
add
aas
out
ds
add
add
lahf
jbe
fidivrl
jecxz
cli
inc
mov
dec
xchg
notl
sub
pop
cld
mov
scas
sub
notb
ds
dec
je
lcall
loop,pt
inc
stos
movsb
mov
popa
iret
scas
icebp
pushf
rorb
testb
fsubl
mov
jne
xorl
bound
ret
aam
pop
jae
add
cli
in
sub
jo
adc
frstpm(287
xchg
xor
adc
or
ret
ja
jbe
and
je
imul
dec
mov
sbb
or
sub
xor
pop
in
add
cs
xor
mov
cli
or
fldenv
cwtl
sti
sbbb
sub
enter
xlat
int
sbb
out
mov
ljmp
xchg
out
fwait
cmc
fstps
xchg
scas
xor
jno
cmp
and
pop
data16
push
addr16
imul
add
nop
or
std
lea
inc
and
dec
stos
out
xchg
aas
in
xchg
adc
pop
ret
mov
je
mov
sub
xor
adc
add
push
sub
lret
push
movsl
stos
in
repnz
adc
push
pushf
dec
push
xchg
jp
sbb
dec
scas
dec
jno
xchg
es
imul
jg
loope
pop
in
lods
sbb
cld
cmc
or
sub
or
xchg
addr16
inc
inc
loope
push
fstpl
sbb
fidivrs
popf
push
dec
mov
stos
push
jb
xchg
adc
ja
dec
jmp
jle
les
xchg
ja
sub
out
jg
hlt
push
ljmpw
ret
std
lret
mov
fisttps
inc
clc
ss
sbb
inc
xchg
dec
dec
and
in
xor
or
jl
mov
int3
jle
mov
rorb
pop
je
push
int
pop
sbb
ja
cld
xor
loop
jne
jae
in
push
mov
sub
mov
imul
out
jno,pt
mov
mov
addr16
fstpl
sub
sbb
adc
jo
in
repnz
push
pop
mov
cli
adc
lret
arpl
aad
popf
aam
cli
inc
mov
repz
mov
jp
adc
adc
sub
test
jne
mov
or
mul
aam
push
sub
orl
insl
sbb
lret
adc
push
mov
ret
xlat
mov
push
mulb
fstps
adcb
jnp
jge
xchg
push
inc
cmpsb
xor
dec
mov
dec
adc
mov
dec
mov
mov
jae
or
ljmp
mov
sbb
jmp
cli
dec
xchg
sbb
stc
xchg
incl
std
je
push
pop
pusha
push
add
jmp
push
out
mov
ret
outsl
les
in
push
lds
or
popf
dec
pop
lahf
dec
stos
add
jmp
cwtl
adc
dec
push
xchg
cltd
push
inc
pop
xor
adc
xlat
xchg
or
lods
inc
sub
fisubrl
push
xorl
outsl
cmp
and
push
leave
call
push
inc
out
inc
adc
jno
adc
adc
sub
jmp
mov
jecxz
les
mov
cmpl
out
cmc
shl
test
xor
pop
cmpsb
cmp
or
das
jne
cs
in
ja
test
lods
mov
jge
cld
add
aaa
push
and
adcl
cmp
test
mov
inc
ret
int
dec
xchg
or
sbb
clc
or
push
arpl
ret
sbb
popa
sbb
add
xor
adc
stos
fstpt
fildl
mov
loopne
stos
fstp
cmp
sub
fwait
ret
mov
sub
imul
dec
jp
cmp
fsub
mov
push
and
rcrb
nop
add
nop
cmp
or
ss
pop
sub
cmpsl
insb
xor
iret
mov
daa
mov
adc
push
xchg
stos
lea
xor
nop
aad
cmpl
sarb
jle
pusha
out
std
rorb
arpl
fldenv
cmpsb
sub
sbb
mov
shr
insl
xchg
pop
ret
int
lret
dec
xchg
insl
cs
lods
cltd
je
gs
outsb
xchg
cltd
dec
ss
push
fildll
mov
inc
std
inc
into
fdivp
fisttps
mov
cmp
icebp
xchg
xchg
test
lahf
push
sbb
sub
js
lea
jne
cwtl
sub
xor
pop
enter
lret
fwait
mov
jne
insl
add
adc
movb
adc
jecxz
shrb
out
mov
xchg
mov
jg
xchg
rorl
imul
repnz
and
push
jl
lret
sbb
pop
stos
imul
push
xlat
sbb
pop
ds
std
movsb
push
cmp
inc
cmp
pop
out
jp
add
push
sbb
add
and
inc
mov
inc
fstps
cmc
pop
imul
rolb
bound
adc
push
xor
xchg
call
inc
mov
cmp
lock
cs
call
lahf
stos
add
test
pusha
add
int3
push
pushf
sbb
mov
ja
inc
inc
pop
pop
les
jp
popf
dec
je
inc
inc
fs
mov
das
lret
or
inc
adc
arpl
out
loope
std
rorl
cmp
adc
xlat
ret
xchg
push
push
add
lahf
or
xchg
mov
push
fisubl
jl
int
hlt
loop
sub
bound
mov
ret
dec
mov
xlat
imul
imul
add
or
arpl
xor
test
xor
lret
aam
push
loope
mov
cltd
scas
and
cmp
scas
lods
cmp
push
push
in
aaa
je
pop
xor
add
shll
mov
stos
mov
fs
movsl
add
shll
jecxz
push
push
dec
pop
and
adc
mov
cmp
leave
sub
neg
mov
jp
ja
out
cmpl
out
data16
dec
mov
das
testl
arpl
cmpsb
xor
jno
fldcw
imul
mov
les
clc
add
mov
cmp
add
lock
aam
stc
sub
mov
push
mov
hlt
push
jl
bound
jnp
push
pop
cmp
pop
or
sahf
inc
adc
insl
fdivs
mov
cmpb
mov
shl
insl
adc
xorb
mov
cmp
bound
push
jl
sub
in
test
ret
dec
out
call
test
fiaddl
cmpb
test
int3
test
or
xchg
or
in
rorl
add
push
fadds
insl
sbb
in
xchg
jno
xor
push
sbb
in
rolb
xlat
cmp
jb
icebp
call
mov
pusha
or
mov
sbb
mov
push
idivb
call
sub
mov
call
insb
mov
xchg
jnp
lahf
adc
dec
jg
mov
jle
lcall
repnz
aam
iret
or
scas
shrb
out
dec
and
test
call
movsl
dec
and
jl
sbb
mov
pop
jne
ficompl
clc
pop
stc
stos
addl
mov
mov
mov
dec
sbb
mov
or
push
mov
fisttpll
fwait
cs
sub
sub
dec
std
push
fldt
in
jmp
cmp
imul
test
out
ret
lret
dec
loop
add
and
das
pop
adc
pop
arpl
sub
cs
ds
or
xlat
mov
dec
test
loope
fistps
in
aaa
scas
add
push
mov
lahf
adc
das
loop
xor
sbb
leave
sbb
inc
andl
test
inc
out
dec
inc
imulb
add
jne
inc
imul
pop
imul
xor
mov
fucomip
adc
push
pop
in
movsb
out
pop
outsb
pop
mov
xchg
daa
stos
clc
test
sub
inc
fs
jge
roll
xchg
pop
pushf
mov
mov
dec
push
add
and
jns
ljmp
xor
mov
rorb
pop
dec
lods
or
decl
repnz
hlt
out
jb
rdmsr
into
sahf
pop
mov
popf
pop
aaa
lret
movsl
je
insl
jb
xchg
inc
in
negb
in
mov
bswap
adc
fstpl
pusha
adc
xor
hlt
pop
mov
xchg
pop
pop
dec
movsl
frstor
jl
aaa
fidivrs
mov
movsb
movsb
dec
xor
adc
dec
es
fwait
jb
test
aad
adc
data16
repnz
xchg
xchg
adc
sub
or
pop
out
mov
or
iret
aas
subb
mov
stos
pop
mov
popf
mov
push
adc
push
out
fistl
inc
icebp
test
pop
or
std
lods
cmp
testb
jmp
hlt
insl
movsl
mov
ja
pop
xchg
fstps
add
fldl
pushl
rorb
pop
mov
xorb
mov
adc
ret
push
ds
test
xor
xor
mov
mov
fisttps
aaa
lods
cmp
jecxz
cltd
xchg
mov
loopne
push
das
cmp
mov
outsl
push
iret
popa
shlb
stc
cmp
mov
add
inc
call
sbb
aas
inc
mov
jp
imul
sub
ret
fcos
xchg
push
sti
cld
into
xor
fimuls
aas
pop
mov
mov
sbb
mov
mov
neg
mov
arpl
mov
fidivrs
inc
bound
inc
es
xchg
imul
xchg
mov
pop
fnstcw
pop
jo
testl
push
std
movsb
dec
push
rclb
loope
test
xbegin
mov
cmp
pop
or
sti
or
pushf
and
clc
lods
xchg
push
xor
daa
mov
mov
jbe
mov
pop
repz
push
lds
pop
and
jmp
shr
ss
xchg
and
pop
js
out
cmpb
jg
addl
jmp
daa
xor
popf
sub
push
shlb
sbb
loopne
fdivs
je
daa
fisubs
in
sub
pop
data16
pop
mov
bound
dec
sub
push
test
push
or
movsb
mov
in
rcrb
inc
dec
outsb
mov
mov
loope
mov
mov
lcall
cmp
mov
mov
js
dec
sbbb
jecxz
sub
cmc
mov
adc
inc
cmp
hlt
jl
and
test
call
adc
mov
adc
call
inc
nop
xor
add
andb
push
loop
jmp
sub
jb
aas
in
sub
sub
test
jmp
jb
in
add
adc
iret
xchg
out
jg
hlt
pop
jmp
enter
sbb
out
ljmp
and
stc
push
mov
test
in
sarb
aaa
sbb
mov
xor
push
pop
mov
adc
adc
cmpb
or
push
push
ljmp
aad
sahf
call
or
lcall
in
sub
and
mov
xor
in
mov
xlat
pop
sub
push
dec
int3
cwtl
loopne
sbb
and
lods
add
xor
je
adc
add
test
add
jns
int
or
idiv
hlt
adc
loope
ja
xchg
add
loope
inc
cmpb
rclb
xchg
call
dec
scas
pop
mov
sub
jb
sbb
lods
mov
jmp
jmp
mov
jge
test
fsubrl
shlb
jge
insl
out
mul
fsub
fwait
and
jns
cmp
cmc
fldcw
movsl
fs
insb
jo
add
xor
int
add
or
and
cltd
and
loopne
mov
jae
aad
stc
test
xchg
mov
bound
jg
sub
repnz
mov
and
jecxz
vphaddbw
cmc
lcall
mov
filds
xchg
scas
les
pop
sahf
xor
sub
fwait
xor
mov
int3
stos
pop
out
shrb
and
fwait
arpl
inc
daa
push
sbb
pop
push
movsb
out
aaa
xlat
fsin
adc
les
data16
test
adc
ret
in
jno
in
jae
mov
cltd
xlat
xor
cmp
and
dec
fisttpll
out
shll
movsb
sbb
fstp
cmpsb
movsb
jnp
ljmp
clc
dec
out
cmp
sub
and
xchg
andl
cli
dec
push
push
xchg
js
cmpsb
aas
test
sub
adc
add
mov
mov
dec
aad
scas
mulb
mov
lahf
push
dec
add
push
sbb
pop
mov
xlat
cmp
decl
jne
xor
loop
inc
ret
sbb
nop
and
shl
js
iret
popl
jbe
sbb
adc
imul
xchg
mov
sbb
mov
inc
mov
sub
out
ja
pusha
mov
cld
mov
jo
aam
push
jl
xchg
gs
pcmpgtw
das
stos
cld
inc
rorb
mov
dec
adc
push
dec
add
call
sbb
add
jae
xchg
or
adc
fsubr
dec
adc
daa
add
cmp
sbb
sub
mul
inc
mov
mov
ret
adc
call
adc
in
fwait
adc
enter
lock
shlb
sbb
hlt
subb
psraw
jl
test
roll
mov
ror
mov
pop
int
push
fcomps
xchg
addb
lahf
jns
mov
inc
pusha
addr16
inc
mov
xchg
jecxz
sub
nop
xchg
test
push
das
push
or
ret
jb
mov
xchg
stc
xor
cmc
mov
mov
insl
jae
aas
dec
data16
inc
je
scas
in
push
imul
and
mov
sub
push
pushf
jne
into
mov
lret
xchg
dec
pop
loop
push
into
add
jo
lcall
xor
dec
xchg
and
mov
xor
push
mov
shll
shl
notb
nop
loope
outsb
sub
inc
stc
das
addr16
mov
inc
or
sub
mov
adcl
add
inc
sub
sbbb
popf
nop
or
imul
and
mov
lea
in
or
out
test
push
in
or
xchg
cmp
mov
out
fwait
insb
cmp
lods
or
ret
mov
arpl
lods
jl
mov
insl
xlat
pop
or
out
jae
out
inc
mov
test
cltd
adc
les
xor
test
leave
pop
mov
push
insl
add
ret
xor
loop
add
inc
outsb
pop
cmp
pop
sbb
lods
lds
xchg
ret
cmp
inc
cld
push
dec
jp
sub
sub
in
das
pusha
mov
loopne
mov
stos
gs
bound
data16
insl
lods
xor
push
xchg
imul
sub
idiv
sbb
out
jns
lret
jae
cwtl
leave
cmp
je
stc
pop
enter
jl
cmpl
jg
gs
mov
inc
fsubrs
ds
adc
mov
ljmp
jp
shr
sub
mov
insb
adcb
mov
xor
pop
and
adc
fstps
push
xchg
mov
mov
mov
ret
in
add
clc
mov
data16
stos
insl
jge
xchg
xchg
scas
and
sbb
cmc
xor
dec
cmc
or
repnz
xor
dec
test
bound
sub
jg
cmpb
sbb
mov
stc
pop
dec
inc
push
stc
lcall
inc
out
cmp
mov
or
pushf
int
leave
sub
aaa
ret
stos
jmp
repz
mov
or
pop
es
pop
in
insl
add
pusha
shl
les
push
in
je
popa
bound
pop
daa
push
mov
add
pop
pop
cmp
jl
repz
xor
daa
call
push
pop
push
popa
or
jno
xchg
aad
xor
nop
mov
jmp
adc
fsubl
fidivs
sbb
sub
lret
sbb
inc
mov
dec
mov
add
dec
icebp
daa
stos
test
sarl
lret
sahf
test
out
xor
scas
arpl
push
adc
and
inc
std
jl
aas
ja
test
and
or
jmp
arpl
outsl
mov
test
xchg
inc
popf
jb
jo
repnz
or
add
sbbb
mov
arpl
jp
inc
xchg
push
ss
push
dec
fiaddl
repnz
cmc
mov
xchg
dec
inc
sbb
pop
sbb
xlat
stos
jbe
add
push
sub
push
sbbb
je
aad
repz
nop
je
pop
faddl
pusha
dec
fs
inc
es
add
movsl
stos
mov
jne,pn
and
fidivl
inc
decb
add
ret
xchg
cli
aad
sarl
mov
cmp
fsubrp
out
nop
fdiv
rclb
xlat
cld
and
and
cmp
loope
in
pop
imul
mov
jnp
sub
xchg
scas
push
cmp
pop
cmp
movsl
jno
test
mov
and
sbb
ds
jbe
pop
sbb
jns
cmpl
lret
xor
pusha
jne
cmp
jnp
mov
push
sub
jns
mov
arpl
rclb
shrb
out
ljmp
rcrb
out
sub
movsb
aas
pop
aam
into
mov
iret
lea
lea
xlat
scas
mov
clc
test
stos
enter
aad
jb
xorb
sbb
sub
jmp
mov
jb
data16
bound
mov
sub
xor
in
out
pop
int
push
or
test
movsb
sarb
sub
jne
mov
fldt
ljmp
mov
dec
mov
cli
adc
hlt
and
xchg
xchg
repnz
sub
scas
in
lods
xchg
mov
xor
in
scas
cmpsb
in
pushf
out
data16
nop
sahf
ja
out
divb
lret
add
pop
push
lods
adc
mov
sbb
aas
lret
gs
fidivrl
lret
add
das
cmp
out
dec
and
mov
dec
bound
fildl
sub
fadds
scas
jbe
ficompl
in
adc
fisubs
mov
out
jbe
hlt
lret
fistps
adc
pop
rolb
mov
fistpl
addl
push
jb
dec
aad
add
stc
arpl
lea
shl
cld
inc
jno
inc
jb
mov
in
dec
pop
inc
outsl
mov
mov
aad
pop
mov
gs
sahf
push
ds
imul
jae
mov
adc
push
div
stos
push
daa
in
inc
das
aam
sub
xchg
jmp
std
lea
xor
bound
adc
add
lds
dec
push
mov
test
xor
les
shrb
or
sbb
dec
in
mov
cli
or
leave
mov
xchg
push
lret
sub
sbbb
out
push
inc
xor
push
xlat
mov
nop
adc
xor
gs
and
gs
adc
repz
sub
ss
shlb
aaa
stos
test
pop
inc
jp
push
push
insb
mov
jno
add
cs
imul
push
sub
loopne
test
xchg
pop
and
adc
repz
add
adc
nop
pop
xchg
cs
add
sbb
jmp
mov
insb
sub
dec
mov
xor
aad
adc
mov
addl
scas
xchg
push
mov
call
sahf
mov
cmc
pop
or
pushf
ja
cmp
jmp
lock
push
add
dec
add
jl
adc
std
scas
cmp
or
enter
cmpsl
pusha
xchg
adc
loopne
repz
sbb
fnstsw
hlt
xchg
mov
add
cmp
in
aam
inc
test
mov
out
mov
jae
inc
push
testb
jle
add
and
int3
or
adc
movsb
scas
dec
test
pop
test
data16
inc
movsl
in
mov
mov
xchg
lret
sbb
pop
jp
fbstp
cmp
mov
add
sbb
aaa
push
rcr
ja
inc
rol
push
xchg
lods
xchg
repnz
int3
shlb
cmp
nop
mov
pop
sub
cli
jp
fiadds
shll
xchg
pushf
dec
cmpsb
push
sub
and
stos
mov
pop
xchg
test
mov
and
sbb
add
add
add
add
in
adcb
mov
mov
xchg
addr16
push
or
adc
xchg
push
xchg
jmp
movl
jg
lret
add
lahf
and
xchg
jl
jp
repnz
je
popf
ljmp
sar
loopne
sub
push
mov
xchg
out
andl
inc
xor
sbb
jns
mov
stos
xchg
dec
jge
in
mov
xchg
and
cmp
nop
xchg
mov
mov
lret
or
movsb
jns
lret
rolb
dec
nop
inc
out
sbb
push
scas
dec
cmc
pop
add
inc
outsl
mov
or
lods
jo
inc
jbe
pop
or
push
and
jo
mov
dec
add
push
lcall
idivl
stc
or
data16
xor
mov
dec
adc
clc
mov
inc
jne
push
repnz
scas
push
mov
out
xchg
aas
mov
jne
mov
cmp
repz
outsb
xchg
sti
dec
mov
pop
xor
scas
pop
and
push
pusha
mov
fildll
xor
imul
mov
jg
xchg
cmpsl
push
scas
pop
inc
icebp
mov
cmc
jno
sbb
sbb
lret
cld
cmp
out
aas
push
cmp
scas
adc
lods
and
and
mov
imul
add
sub
push
cmpsl
js
xor
ljmp
in
and
dec
imul
mov
scas
cmp
rol
fs
leave
cmp
add
int
dec
out
mov
js
pop
ja
aam
dec
sub
adcl
xchg
imul
sbb
push
sub
sbbb
mov
ret
bound
jp
shlb
arpl
out
add
pop
mov
rcrl
rcr
lods
dec
ds
fisubrs
add
mov
out
insl
push
xchg
ljmp
add
sub
push
lret
push
mov
es
mov
aaa
pop
mov
push
mov
jbe
push
add
pop
movsl
sub
mov
sub
lock
sbb
test
push
jmp
dec
repnz
mov
rcll
sbb
sbb
pop
or
popf
lods
shl
push
sub
loope
das
dec
jg
inc
or
mov
lret
xor
ds
aad
add
lret
adc
shll
shll
xchg
mov
jge
sahf
aam
loope
lret
jb
daa
gs
jmp
test
mov
sahf
jb
lods
cmp
int
mov
jg
and
push
ss
or
cmp
mov
movb
mov
int
mov
jo
inc
jnp
push
pop
jo
or
in
jb
nop
push
jle
ds
ret
dec
jge
mov
mov
add
add
mov
and
imulb
fsubs
call
mov
sbb
adc
sub
mov
stc
xchg
fs
xor
cmp
xor
jns
jmp
test
loope
mov
inc
ja
stos
sahf
cli
pop
mov
inc
ret
shrl
sub
sbb
xor
je
mov
and
dec
xchg
arpl
pop
in
cmp
xchg
jp
push
sbb
jns
ljmp
jmp
ret
xchg
int3
fs
xchg
repnz
fstpl
and
lret
std
pop
and
cmp
mull
loope
mov
lret
push
test
lods
in
and
push
lock
sti
mov
cld
xor
call
cmpsl
add
push
mov
daa
out
lock
jge
dec
dec
and
bound
int
mov
sbb
shrl
je
mov
sbb
pop
shrl
and
mov
jnp
push
pushf
jne
jmp
in
stc
icebp
cmp
icebp
mov
ljmp
adc
sub
ret
mov
dec
mov
bound
addb
std
inc
mov
push
cwtl
xchg
repnz
adc
pop
adc
clc
ds
outsb
call
test
scas
pop
aad
outsb
in
lods
popa
jecxz
daa
ret
fmull
aam
cld
imul
xor
rorb
jbe
test
or
daa
fwait
or
outsl
repnz
sub
repz
pop
addr16
mov
jmp
push
push
sahf
sbb
add
loop
push
insb
mov
out
fisubrs
mov
cmc
push
and
lock
test
pusha
mov
insl
clc
repnz
mov
xor
mov
mov
cmp
adc
fsubrs
mov
jp
push
in
push
cmc
aam
popa
xchg
jns
push
pop
and
punpckhdq
push
adc
divb
leave
test
push
jecxz
int
push
out
lret
mov
idivl
inc
pop
jo
sbb
cli
or
pop
mov
in
fstl
jmp
pop
adc
pop
in
enter
cmp
vcomiss
aaa
fsubrs
xchg
stc
mov
add
mov
test
nop
arpl
jp
push
xor
movsl
pop
fcoml
inc
imull
popf
mov
sub
sarb
sbb
sbb
xlat
mov
mov
fcomps
imul
mov
inc
push
sub
clc
sbb
imul
xchg
jge
out
sbb
mov
ret
pop
loope
sub
pop
mov
jg
std
mull
fwait
rcll
xchg
or
pop
sub
imul
addr16
aas
js
dec
sub
sbb
add
shrb
enter
sbb
sar
pop
jge
test
xchg
mov
fidivrl
mov
leave
jb
in
or
cwtl
into
std
mov
pop
scas
div
lret
fstps
adc
fisubs
cmpsb
in
xlat
pushf
push
loopne
fcmove
shlb
inc
stos
mov
loop
aaa
or
mov
cmc
adc
inc
sbb
mov
xchg
pop
ljmp
push
loop
es
loop
xor
jge
shrb
mov
dec
sub
bound
test
xchg
test
and
loopne
or
cwtl
pop
push
sbb
scas
xchg
mov
pop
shrb
sbbb
pop
sahf
dec
arpl
pushf
fiaddl
adc
addb
subl
dec
stc
sub
hlt
shrb
adc
inc
sbb
push
push
and
std
mov
adc
movsl
outsl
xor
into
and
pushf
mov
dec
adc
pop
sbb
addr16
sbb
daa
xchg
push
out
xor
sbb
mov
in
clc
dec
gs
stc
add
jp
sub
addb
sub
adc
rol
mov
and
cli
mov
push
ljmp
repz
int
adc
jb
addr16
cmp
mov
cli
mov
dec
out
test
jno
cmp
sub
rcl
mov
xor
dec
popf
leave
shlb
fsubrl
and
repz
and
xor
inc
xchg
pushf
adc
push
push
out
xchg
insb
mov
inc
lods
or
sbb
or
jae
dec
icebp
orl
sbb
xchg
inc
lods
stos
cmp
iret
mov
sub
push
adc
mov
mov
icebp
test
jns
addr16
dec
xchg
and
mov
inc
test
add
arpl
mov
lret
popa
loopne
pop
adc
xchg
sub
cmp
pop
scas
int
xchg
adc
enter
add
repnz
dec
into
inc
mov
clc
rcrl
out
add
mov
cmp
pop
mov
lods
cmp
add
fcoml
icebp
and
std
pop
pop
std
cmc
dec
xchg
jnp
mov
xor
lea
test
dec
out
fisubs
mov
movsb
push
cmp
push
aad
andl
imul
sbb
hlt
mov
in
and
xor
bound
mov
ret
scas
lret
test
xchg
leave
sub
fcmovnu
call
and
mov
cmp
inc
out
pop
clc
sub
pop
mov
jge
icebp
test
out
loopne
fimull
adc
in
jecxz
int3
cltd
mov
iret
push
mov
sti
xchg
cmpsb
icebp
bnd
mov
fldl2e
ficompl
jecxz
jg
in
pop
or
adc
adc
jb
adc
lds
xchg
push
arpl
mov
dec
pop
lods
push
stos
pop
imul
out
stos
fsubs
mov
sub
out
test
outsb
cmp
jno
imul
cmpsl
xchg
scas
push
mov
jg
sub
rol
mov
btc
xlat
mov
notl
xchg
movsl
adc
add
jp
int3
pop
outsl
mov
data16
dec
mov
xor
jne
inc
mov
xchg
cmp
imul
aam
jae
add
mov
shlb
aam
pop
cmp
jbe
pop
or
xlat
dec
or
or
add
pushf
dec
in
imul
fsts
test
xchg
repz
aaa
ljmp
or
mov
sahf
dec
dec
repz
push
sti
pop
loop
dec
pushf
repz
das
loop
cmp
mov
ret
pop
lea
mov
mov
dec
dec
lea
js
lods
cli
dec
out
dec
cltd
insl
pop
adcb
xor
or
inc
dec
imul
push
cltd
movsb
jno
push
fildll
jo
lea
adc
les
jecxz
dec
push
xchg
xlat
jnp
xchg
mov
xor
jns
pusha
mov
repnz
push
repnz
decb
dec
insb
stos
jnp
addr16
xlat
lods
test
loopne
addr16
sub
test
pop
xchg
hlt
xor
cmpl
ret
mov
mov
inc
sti
mov
daa
mov
xchg
inc
arpl
sbb
bound
cli
push
or
in
js
in
insl
jmp
test
cmp
mov
call
popa
xor
sub
aas
sub
push
iret
adc
pop
jbe
adcb
push
add
pushf
inc
mov
shlb
fwait
iret
inc
sbb
pop
mov
arpl
dec
adc
mov
mov
stos
jb
aaa
inc
test
or
adc
add
insl
add
test
fldenv
andl
or
test
ljmp
test
sub
ljmp
xor
mov
adc
pop
pop
push
xchg
push
popa
mov
and
jecxz
fiadds
out
mov
out
cmpl
outsb
lret
push
xchg
inc
pop
xor
clc
mov
push
or
lcall
lock
sub
mov
fwait
ret
test
cmpsb
adc
mov
icebp
jnp
push
popa
sti
sub
loope
popf
repnz
notb
cmpsb
xorb
mov
xchg
ja
or
int3
inc
dec
loope
dec
push
mov
movsl
pop
jb
outsb
stos
mov
cmpl
mov
in
or
aam
xchg
fcmovnb
adc
pushf
int
hlt
inc
add
dec
jno
stos
sub
push
push
pop
add
test
shrb
push
ja
xchg
fwait
mov
and
dec
cmp
aam
fcoms
mov
test
push
push
jbe
pop
shl
outsl
mov
xchg
mov
add
xchg
xchg
js
pop
push
enter
inc
cmc
sub
orb
ret
mov
push
sbb
into
ret
mov
sbb
cmc
divl
push
mov
icebp
adc
jp
mov
popa
sbb
sbb
sbb
cmp
mov
xchg
stos
inc
jg
mov
sti
cmp
mov
popfw
pop
xchg
inc
jne
adc
sbb
xor
orb
nop
in
insl
xor
jmp
test
adc
pushf
jo
or
insl
and
int
fsubrs
loop
xchg
push
xorb
add
loopne
or
ds
imulb
dec
inc
cmp
in
jno
pop
fmull
les
add
adc
out
xchg
fucomip
add
clc
pop
jl
inc
popf
inc
jne
shlb
xchg
inc
pushf
arpl
jnp
lret
std
pop
fidivrs
dec
in
into
call
xor
cmp
xchg
cli
mov
mov
aaa
cmp
or
jne
jne
push
out
sti
shrb
negl
pop
sbb
in
cwtl
and
jns
and
shll
jne
insb
or
cmp
aas
or
sbb
and
fwait
jne
cmpsb
loope
fwait
lock
push
jns
rolb
fdivl
popa
cmp
lahf
adc
decl
xor
fadds
push
lcall
leave
cmc
sub
mov
jns
mull
ja
inc
mov
enter
cmp
add
aam
xchg
cmovp
inc
inc
roll
xchg
mov
mov
gs
movsb
dec
sbb
pop
jmp
nop
jbe
xor
xor
and
push
or
jb
add
call
fmull
and
into
jp
xchg
cmp
xor
sbb
and
or
fildll
jnp
imul
push
clc
or
or
push
dec
mov
xchg
mov
out
test
dec
orb
in
sbb
inc
sbb
sbb
bound
xor
sbb
push
ja
enter
dec
jmp
jne
movsb
repz
xor
mov
add
sub
cmpsl
fdivr
pop
cmp
and
scas
adc
pushw
pop
lahf
and
shll
les
lahf
xchg
fstl
loop
inc
push
out
out
test
repnz
in
mov
xchg
cwtl
enter
popa
sub
adc
mov
icebp
xchg
mov
add
jne
outsb
dec
lret
jecxz
data16
push
movsb
nop
sbb
pusha
repz
adc
lock
xchg
mov
dec
mov
mov
inc
out
xchg
jns
xor
dec
jp
or
pop
rol
push
sahf
jnp
add
cld
adc
call
lods
fwait
aaa
pop
inc
mov
aaa
andb
xorl
ret
je
sub
repnz
mov
or
sti
stos
fistpl
ja
sub
imul
xchg
in
cs
daa
xor
mov
popf
out
imul
inc
jno
enter
push
outsb
cld
enter
cmp
xchg
sub
repz
xchg
mov
or
ja
push
cmpsb
cld
pop
mov
arpl
cmpl
lret
sub
sub
mov
jo
lea
push
stos
arpl
sahf
fwait
mov
dec
inc
xchg
jne
or
shlb
cmp
mov
pop
mov
scas
stos
in
push
pop
jns
sbb
xchg
jmp
sbb
mov
xchg
mov
jae
shl
rclb
int3
aad
outsb
push
outsb
popa
mov
pop
aam
addb
cmpsb
sarb
psllw
movsb
ss
int
stos
pop
mov
cmp
inc
pop
push
ret
aas
pop
xor
mov
jp
add
in
adc
cwtl
jns
sub
push
mov
push
rol
cs
leave
and
add
clc
and
sbb
stos
xchg
mov
xor
popa
iret
inc
fistpl
orl
pop
inc
add
push
subl
outsb
mov
mov
add
xchg
imull
jnp
addl
add
or
clc
jne
pop
cli
push
gs
jmp
mov
fistl
inc
mov
arpl
jle
roll
or
leave
lret
add
xchg
stc
popa
xlat
mov
fsubp
jecxz
data16
out
gs
cmp
jl
fldenv
sti
negb
stos
mov
loopne
xchg
stc
adc
out
or
lea
rolb
nop
push
sti
mov
stos
lahf
lods
loop
cmp
rorl
aas
lret
lods
xor
push
and
imul
mov
mov
pop
jmp
add
pushf
sbb
in
movsl
xchg
enter
mov
mov
outsl
inc
mov
shll
fstpt
fsts
inc
in
std
in
or
scas
ja
or
push
xlat
push
stos
in
icebp
or
jmp
cltd
cli
ret
nop
dec
mov
mov
repnz
and
pusha
mov
cmp
sub
rorl
xor
fidivl
and
lret
nop
xor
mov
add
mov
repnz
adc
je
mov
jo
xchg
mov
xor
pusha
jae
mov
push
fisttpl
mov
iret
sti
arpl
mov
xchg
ds
xchg
cmc
shl
fbstp
cmpsb
xchg
cmp
call
inc
ror
and
int
and
stos
mov
and
fildll
sbb
jmp
mov
repnz
sti
mov
or
negl
sahf
imul
call
push
push
cmp
mov
lahf
or
mov
jo
leave
sub
or
dec
jae
int
out
inc
sub
mov
lds
cmpsb
fsubrp
inc
xchg
jp
stc
js
call
outsb
repz
ret
dec
push
jecxz
ret
inc
sbb
lahf
add
adc
test
cmp
cmp
sbb
cmpl
xchg
repnz
sbb
mov
sahf
jae
push
jnp
xor
sub
add
cltd
movsb
jb
les
dec
sti
xchg
cmpb
cmp
mov
mov
les
in
push
xor
and
add
push
loop
pop
pop
push
mov
adc
aam
addr16
mov
mov
mov
xor
sub
sbb
jns
inc
outsl
xlat
pop
std
popf
cld
sahf
inc
daa
sub
jg
and
shlb
subb
loop
fwait
jnp
js
leave
dec
in
cs
in
cmp
mov
mov
js
cmp
adc
nop
cmp
and
into
psraw
out
dec
cld
push
sbb
adc
push
inc
dec
mov
adc
je
lods
add
push
in
out
and
decb
push
inc
fldenv
je
mov
hlt
movsl
pop
out
inc
xchg
push
test
ljmp
or
inc
cmp
test
add
movsb
pop
inc
sub
mov
aas
bound
push
ret
sbb
xchg
push
test
test
cltd
ja
in
xchg
add
xlat
cmp
stos
filds
test
insb
lahf
mov
cli
lods
into
rorl
or
imul
lahf
lds
dec
inc
jge
aas
sub
shr
add
fucomip
lahf
fisubs
movsb
or
and
sarb
jb
enter
add
aad
test
jle
pop
imul
push
int
test
movsb
jmp
rcll
mov
out
clc
sub
xlat
fldl
shlb
fcoms
outsb
push
test
into
pop
int
test
or
pop
sbb
rcll
lgs
xchg
and
sbb
je
xchg
mov
adc
repz
lock
sub
xchg
mov
roll
loope
adc
xlat
sub
iret
xor
mov
jnp
pop
cltd
push
faddl
pop
cmpsl
call
ss
aam
bswap
cmp
cmp
aaa
mov
pusha
dec
rorl
outsb
adc
jecxz
cmpsl
or
adc
sbb
aas
mov
or
or
mov
insl
repnz
test
jb
stc
sti
jp
daa
xchg
jne
pushl
mov
push
xchg
and
clc
mov
out
mov
cmp
fists
inc
xchg
scas
sub
imul
mov
adc
lds
mov
test
outsl
and
icebp
roll
add
xchg
repnz
xor
icebp
icebp
pushl
fmul
sahf
aad
shrd
fidivrs
pop
aaa
orb
add
adc
xchg
mov
mov
push
in
mov
inc
jo
std
mov
dec
idiv
into
in
add
jno
xchg
lods
outsl
pop
stos
lds
pop
data16
stc
cmpsl
loope
adcb
lahf
lahf
adc
push
mov
add
inc
fistpll
in
push
mov
inc
xor
jl
mov
fldcw
mov
mov
sbb
in
loope
adc
loope
pop
mov
adc
mov
les
repnz
outsb
xchg
pop
icebp
xchg
jecxz
outsl
out
cmp
fstpt
aam
daa
sarl
cmpsl
mov
inc
jne
mov
pop
fsubr
test
out
cmp
mov
mov
pslld
roll
ret
inc
pop
imul
clc
jo
jmp
sahf
or
imulb
sub
rcrl
call
push
ja
aas
roll
popf
cmp
jg
cli
mov
shl
fucomp
in
fucomip
inc
rolb
cli
push
ss
shl
or
fmull
addb
dec
ss
dec
add
ret
call
std
push
mov
in
mov
inc
pop
sub
cmp
jne
int3
jne
es
icebp
inc
ja
test
adc
xor
xor
imul
inc
lahf
jne
shrb
mov
movsl
xchg
or
arpl
push
ficompl
add
push
lret
jae
add
fs
ljmp
xorb
bound
jne
data16
cmp
push
jle
ret
lahf
mov
push
lahf
xchg
imul
mov
pop
cs
fstpt
les
clc
push
arpl
int3
sbb
out
divl
test
push
pop
sub
aas
xor
leave
data16
mov
dec
es
nop
fsts
pop
jbe
push
xchg
scas
mov
inc
aad
pop
shll
adc
aaa
xchg
mov
add
mov
push
lods
or
pop
xlat
mov
push
lds
sti
sbb
pop
xor
repnz
xchg
loopne
js
lea
push
jne
mov
cmp
stc
jge
imul
push
mov
xchg
push
andl
mov
or
or
mov
jnp
and
jl
pop
fstpl
fstp
xor
in
popa
dec
sti
rcl
addr16
mov
mov
out
stos
sub
add
inc
add
pop
add
fmuls
add
cmp
inc
add
or
add
sbb
add
lahf
inc
add
add
add
rolb
dec
add
inc
cwtl
stc
sub
loope
push
cmp
xor
mov
cmp
stos
pushf
ficoml
iret
cld
pop
lods
inc
xchg
xchg
mov
pop
mov
pop
pop
or
movsl
jb
mov
mov
call
movsb
cltd
inc
and
icebp
push
pop
jo
loope
pop
jmp
add
insb
incb
xlat
cmp
inc
push
xor
rcl
xchg
push
push
aam
or
jle
adc
aaa
push
and
dec
xchg
xlat
inc
clc
ret
das
fdivs
pop
jge
xor
and
notl
iret
jno
aaa
into
xor
in
cld
leave
je
or
mov
sub
lcall
mov
add
dec
pop
jnp
aam
pop
in
push
imulb
into
cmpl
and
or
bound
and
push
adc
pop
pushf
gs
mov
jnp
rorl
out
dec
rclb
ljmp
xor
adc
and
add
fistps
aas
jge
fldl
test
cmp
loope
jne
pop
lock
rol
jne
pop
pop
stos
inc
cmp
inc
pop
scas
fistpl
lcall
lcall
roll
mov
ljmp
jae
hlt
sub
hlt
adc
rorl
push
and
fdivrl
jne
mov
scas
fldl
cmp
decl
hlt
clc
add
sbb
xor
imul
lret
adc
imull
and
push
int
xchg
int
push
mov
cmp
xor
insl
sbb
lods
xor
imul
ja
imul
add
cmp
inc
imul
mov
aas
mov
pusha
loop
inc
push
fldcw
lret
or
inc
xchg
cmpsl
adc
jp
dec
subl
stos
hlt
mov
ficoml
paddusb
imul
adc
shrl
cmp
fidivs
xchg
movsb
call
mov
into
cli
fcmovu
negb
pushf
or
jl
std
xchg
dec
cwtl
lock
xor
inc
insl
jo
stos
mov
jae
pop
popl
leave
pop
xchg
and
jmp
xor
fdivs
jmp
add
pop
sbb
popf
xchg
jecxz
lock
pop
mov
mov
cmpsl
iret
testb
add
in
das
ja
sub
xor
loopne
icebp
shlb
loope
test
repz
es
js
adc
xor
dec
rol
lahf
fucomip
call
pop
aad
les
sbb
jmp
pop
push
sub
push
fwait
mov
dec
adc
mov
push
outsb
cmp
popa
sahf
mov
mov
loopne
xchg
sbb
and
pop
in
push
cmc
or
clc
daa
insl
cltd
ficomps
mov
enter
jmp
pushf
dec
cli
ds
test
incb
in
mov
popf
sbb
fnstsw
fwait
cmpsb
loop
mov
or
push
inc
and
mov
lret
lahf
fmull
sbb
loop
add
jbe
mov
shr
jno
imul
out
pop
fildl
xor
pop
fs
push
daa
les
dec
lds
repnz
jl
xchg
xchg
pushf
leave
ficoms
xchg
in
push
scas
fwait
shll
and
fldenv
lods
mov
xor
pop
inc
insl
inc
dec
jl
mov
push
mov
and
push
or
imul
jl
lcall
cltd
jecxz
mov
push
je
or
cmp
adc
imul
pop
int
adc
movsl
xchg
scas
cmp
cmp
je
adc
leave
rolb
or
add
dec
dec
call
xor
fs
in
sbb
inc
add
adc
adc
mov
mov
test
ds
sub
ja
insl
outsl
lret
daa
mov
or
xor
mov
fildl
lods
jbe
lea
xchg
test
pop
int
pop
sahf
inc
cli
adc
mov
fisubrl
push
fs
imul
andb
lcall
cli
sbb
xor
jb
jecxz
gs
add
jo
stos
mov
mov
ja
jae
nop
test
push
loopne
jle
dec
pop
mov
push
mov
sbb
adc
xor
mov
sub
andb
jbe
mov
cmp
out
call
xor
mov
addr16
pop
popa
dec
pop
and
cmpsl
mov
jmp
lret
push
icebp
mov
rep
and
pop
push
cwtl
xor
xchg
aam
or
int
add
scas
nop
or
jp
fisttps
mov
inc
out
loop
into
outsb
sbb
mov
fdivrs
mov
ds
xor
ljmp
mov
lret
mov
mov
mov
outsl
push
and
adc
push
push
or
cmp
call
ret
and
mov
js
test
imul
fadd
mov
into
sahf
sbb
push
mov
push
aaa
hlt
lret
outsb
inc
mov
movb
mov
add
and
cmpsl
out
mov
push
fisttps
aad
mov
push
lret
in
or
js
cmp
test
xchg
shlb
adc
fldl
inc
add
jne
aad
inc
mov
sahf
int
cmp
addl
out
fs
and
or
or
mov
xchg
iret
jns
adc
mov
pusha
xor
cmp
imul
scas
in
push
and
mov
mov
ss
out
cmp
test
cmpsl
bound
lret
scas
cmpsl
fldcw
push
sahf
jne
cwtl
call
fistl
jmp
xor
dec
mov
jp
cltd
cltd
es
lcallw
lret
xor
scas
xchg
lcall
add
sti
out
mov
stc
ret
push
adc
jl
fsts
ret
adc
adc
pop
loop
sub
js
out
mov
dec
pop
jbe
sub
pop
mov
xchg
add
sub
arpl
test
and
jp
mov
imul
mov
insb
push
btl
or
testl
pop
lds
int
push
popf
iret
movsl
gs
int
and
mov
mov
icebp
add
jmp
into
adc
and
clc
int3
fildl
sub
imul
dec
mov
mov
pop
cmpsb
stos
mov
sbb
insl
xchg
fucomp
decl
inc
or
jne
jmp
xor
mov
xor
cmp
sbb
mov
cltd
sbb
enter
mov
bnd
pop
fbld
jno
push
mov
pushf
xchg
loopne
adc
sub
int3
mov
js
pop
cli
addb
test
shrl
mov
jmp
lods
test
push
jo
scas
sbb
shlb
in
mov
xor
das
cmp
jno
mov
js
sub
sbb
mov
out
pop
lock
add
pusha
in
xor
adc
pop
in
xchg
jecxz
mov
addl
cwtl
in
mov
call
mov
ja
insb
sbb
xchg
jo
or
mov
and
fldt
mov
add
mov
es
ja
int3
mov
mov
jmp
mov
jmp
mov
xor
push
sbb
scas
xchg
in
xchg
pop
mov
cmp
cmp
lcall
dec
int3
mull
fs
mov
daa
in
xor
cmp
out
push
add
mov
mov
lahf
jp
xchg
and
jae
mov
cmpsb
sub
test
pop
into
pop
add
mov
sub
ret
insb
or
push
xchg
mov
cmpl
cmp
mov
or
lret
ret
dec
push
sbb
xchg
je
repnz
add
xchg
jns
movsl
mov
cmp
dec
scas
in
sbb
cmp
dec
test
sub
sub
into
push
dec
adc
popa
dec
sub
xorl
xchg
shrl
jg
aam
dec
xlat
xor
mov
sbb
add
test
ret
outsb
and
xlat
inc
into
push
cmp
scas
ss
into
or
jbe
fisubs
pop
xchg
nop
lea
adc
sub
sbb
adc
adc
sbb
lock
ja
fwait
pusha
push
sub
and
pmullw
sbb
aad
inc
mov
xor
fwait
loop
scas
aas
movsb
lock
loopne
in
std
jmp
inc
stc
xchg
ret
lret
shlb
push
sub
test
repz
ror
or
push
lds
imul
sarl
insb
test
mov
lds
push
jbe
xchg
pusha
add
out
ja
popf
xchg
inc
xchg
sahf
aas
mov
inc
ja
lods
push
icebp
ja
rcrl
push
aam
mov
jp
dec
pop
sbb
mov
fmul
das
inc
sbb
xor
push
jb
cmp
mov
dec
dec
xlat
fwait
ljmp
aaa
push
add
outsl
sbb
ds
add
sub
adc
inc
mov
mov
sub
loopne
or
jb
cwtl
mov
loope
sahf
aaa
push
or
imull
cmp
aaa
jge
mov
lock
rorl
or
scas
aad
popa
testb
adc
pop
push
fdivrl
in
adc
addb
or
orl
jne
push
iret
daa
xor
int3
les
cli
int3
nop
adc
je
jecxz
cmp
imul
sbbl
in
pop
xchg
loopne
add
fsts
mov
jb
jmp
xchg
ds
imul
clc
pop
xlat
ret
xor
jmpw
sub
jmp
jl
cwtl
cmc
inc
icebp
jo
adc
mov
mov
ret
out
js
js
bound
add
cwtl
adc
insb
aad
jge
sbb
dec
lods
je
popl
sbb
stos
sbb
mov
sahf
imulb
std
inc
fucomip
inc
dec
and
pusha
cmp
dec
add
je
lods
cli
xchg
mov
cmp
ja
inc
das
iret
mov
movsl
sahf
dec
outsl
pop
rolb
daa
movsl
mov
insb
mov
pushf
dec
fs
push
sahf
in
push
mov
fs
sbb
cmp
dec
sbb
push
sub
ss
xor
test
push
and
mov
clc
mov
mov
adc
ljmp
stos
mov
xor
pop
and
adc
fdivr
jns
daa
mov
ja
inc
inc
imul
ret
or
fimull
mov
aad
fs
int3
xor
and
push
nop
adc
ja
repz
fxch
scas
call
dec
cmc
bound
outsb
out
lea
mov
lods
leave
pop
stos
stos
aad
call
ss
subl
mov
fcmovnbe
mov
stos
popf
xor
cmp
push
mov
mov
sub
cld
cmpb
out
imul
push
cmp
popa
je
bound
mov
flds
ljmp
xor
mov
icebp
subb
mov
or
std
push
insl
cmp
popf
lret
mov
iret
mov
pause
stos
mov
in
lcall
outsb
fwait
jns
sub
fcomip
cltd
lcall
ljmp
and
popa
fs
xor
cmpsb
mov
call
push
adc
icebp
sub
outsl
aaa
mov
imul
inc
loope
mov
mov
fcoml
movsb
xchg
push
popf
in
pop
pop
nop
push
adc
rorl
notl
movsl
test
xor
lds
xor
cmp
decb
mov
in
cmc
xor
stos
pop
xchg
aaa
in
out
inc
idivl
mov
sub
pop
sbb
mov
xor
pop
dec
jne
sbb
dec
or
mov
scas
xor
lahf
shlb
or
je
aam
in
dec
cld
out
dec
inc
ja
and
fimull
enter
sarl
out
sbb
xchg
into
mov
inc
cmp
int3
adc
xchg
lret
adc
mov
xchg
and
fcomps
mov
pop
ror
inc
push
mov
test
lods
enter
ret
adc
xchg
inc
pop
sub
and
out
shrl
add
loope
and
jecxz
imul
xor
jmp
lds
jo
out
lret
xor
stc
mov
fdivrl
mov
cmp
pop
in
out
loop
jmp
ss
jl
loop
xchg
mov
mov
addr16
lods
push
lock
mov
and
jae
movb
xor
xor
dec
mov
jmp
push
iret
test
jns
out
or
les
sub
push
jb
dec
jae
test
fcoml
loope
adc
or
xor
arpl
fsubrl
scas
aam
stos
lret
in
call
in
jns
in
mov
add
lock
adc
mov
shlb
cmpsb
adc
and
fwait
out
js
push
into
fucomip
sbb
and
sti
cmp
push
pop
add
push
hlt
test
faddp
mov
test
movl
fninit
loop
testb
movsl
mov
mov
divb
inc
mov
add
ljmp
or
shl
jnp
lods
fsubs
testl
out
sarl
or
fisttps
in
sub
sbb
subb
cmp
in
cld
imul
imul
ds
std
dec
pushf
mov
mov
push
cmpsl
push
fs
cli
sbb
test
cmp
cvttps2pi
add
ljmp
cmpsl
sti
fisubrs
fsts
xor
dec
add
push
sbb
mov
push
or
mov
xchg
push
mov
dec
dec
inc
mov
ret
enter
cmp
push
xchg
lods
pusha
je
inc
push
xchg
push
imul
sub
jg
mov
int3
ljmp
sbb
xchg
xor
mov
jb
aad
out
or
out
or
adc
and
or
mov
mov
clc
push
sbb
push
stos
lock
popf
mov
jno
arpl
je
pop
push
clc
or
xchg
push
mov
jg
sub
push
enter
push
scas
cmp
pop
dec
ficoms
ljmp
jns
push
xor
lcall
into
or
adc
leave
hlt
int3
cmp
xchg
js
jge
insl
xor
nop
dec
js
lods
aad
lret
rolb
cmp
xchg
imul
jno
mov
mov
cwtl
leave
aad
pop
push
daa
adc
lcall
inc
mov
xorl
sub
bnd
mov
and
mov
bswap
nop
add
fnsave
call
scas
sbb
mov
cli
hlt
mov
mov
xchg
push
and
andb
scas
jecxz
mov
add
and
jmp
inc
and
mov
dec
aaa
mov
xchg
jae
mov
or
or
in
dec
out
arpl
pop
je
stos
jmp
cmc
bound
clc
dec
lcall
jge
push
scas
nop
or
push
pop
or
dec
mov
stc
mov
sbb
rcl
xchg
lods
inc
cmp
add
mov
idivl
mov
dec
out
aad
mov
and
test
push
jae
ror
sub
sbb
and
adc
jo
lea
add
xchg
xchg
jmp
mov
inc
jb
insb
adc
shrb
inc
lcall
repnz
je
repz
imul
adc
negb
stos
lahf
sbb
daa
or
test
dec
js
push
mov
push
ret
mov
mov
mov
mov
or
leave
push
jmp
iret
mov
or
jmp
push
roll
xchg
lea
in
mov
xchg
out
sahf
sbb
dec
xchg
pop
rcll
movsb
arpl
push
in
push
xchg
in
aam
pop
lods
mov
push
lcall
push
jmp
dec
popf
daa
test
aaa
dec
mov
jne
pop
xchg
les
cs
int3
repnz
fisubl
aad
movsb
xlat
loop
pushf
jle
loop
cmp
adc
outsb
ds
add
enter
xchg
mov
nop
test
idivb
push
pop
mov
or
mov
lret
leave
cmp
in
push
mov
fucompp
int
xor
in
cmpsb
adc
jg
movsl
cs
or
pop
cmpsl
sahf
pop
jmp
dec
sbb
mov
in
push
add
loop
sbb
fldl
test
imul
iret
fnsave
sub
lcall
stc
stc
leave
ljmp
ds
pop
cmp
pop
and
lahf
aad
das
divl
sub
jmp
sbb
inc
xlat
ss
adc
jmp
lcall
stc
jle
das
call
push
and
dec
dec
outsl
fnstenv
leave
mov
jl
pop
xor
mov
cwtl
adc
sahf
cmp
adc
cltd
xchg
enter
jmp
les
iret
sub
jno
xchg
addr16
aam
les
sub
dec
jg
xorb
test
xchg
pop
out
xchg
andb
stc
xor
in
aam
jg
mov
or
lcall
xchg
inc
scas
ret
enter
pop
out
mov
push
out
call
jnp
xchg
iret
pop
adc
cld
sbb
out
lds
pop
cmp
xor
mov
int3
mov
or
stc
and
jo
call
fstpt
movsl
aam
dec
nop
pop
xor
pop
push
cld
inc
mov
pop
mov
stos
inc
inc
mov
aaa
xor
sub
mov
xor
xor
dec
enter
jg
ret
jb
jbe
jns
in
sub
push
mov
push
lods
insl
aam
loope
lahf
daa
cwtl
push
out
movsb
aaa
xor
fistl
out
push
add
inc
add
and
xchg
lcall
ss
fwait
cmp
cmp
sub
sbb
xchg
add
enter
sarb
mov
add
sub
in
out
add
lahf
popl
shr
popf
js
inc
shrb
aad
popl
sub
jae
out
sub
inc
xor
mov
out
push
pop
xchg
arpl
loopne
push
rorl
push
fstl
mov
outsl
sub
lret
xchg
sbb
or
jb
cltd
jo
and
jge
cmpsl
xor
out
dec
and
jbe
movsb
call
bound
in
and
lds
data16
adcb
popf
int
pop
push
xor
jnp
test
lds
xchg
popf
dec
adc
pop
mov
out
jmp
mov
cltd
lods
bound
nop
add
cmp
enter
xchg
loope
scas
jb
cltd
mov
cmpsb
inc
pop
ja
lret
or
sbb
aad
popf
push
fisttpll
mov
adc
lcall
push
adc
je
xchg
shrl
mov
ljmp
in
xor
or
xchg
xor
xchg
cmc
daa
adc
je
sbb
sarl
mov
adc
push
or
icebp
cs
mov
nop
inc
mov
xchg
pop
lret
push
repnz
or
and
fiaddl
scas
mov
enter
daa
mov
and
int3
loopne
or
mov
int
subb
fisubl
or
xchg
xchg
pop
cs
loop
xlat
shlb
push
adc
mov
out
cmc
fimuls
shll
xchg
adc
lods
jns
sbb
les
enter
xchg
mov
pop
xor
adc
push
stc
int
scas
jns
inc
dec
adc
shl
lds
sub
mov
or
lock
jge
cs
and
jns
das
xchg
sbb
sbb
lds
hlt
jae
add
or
bound
popa
int3
movsb
xor
jp
mov
sub
popf
adc
pusha
cltd
dec
jbe
inc
les
jle
call
cmpsb
cli
shrl
push
mov
pop
xor
dec
nop
or
rcrl
inc
or
push
mov
sub
adc
push
pop
xor
addr16
inc
mov
mov
mov
jno
mov
cmc
andl
test
jecxz
hlt
and
push
mov
decl
or
rolb
test
stos
push
jmp
mov
push
cmp
inc
scas
xchg
enter
jbe
mov
sbb
xor
inc
push
sub
cmp
jg
mov
loop
and
nop
popa
jns
arpl
mov
paddw
and
sub
lea
sbb
test
fs
jo
addr16
fcomi
nop
icebp
jg
mov
cld
pusha
cmpsb
pop
sbb
ficomps
or
popf
push
insl
sbb
fdivrl
fldt
sbb
push
daa
inc
push
jecxz
inc
arpl
push
movsl
ret
push
push
mov
jl
push
adc
adc
stc
or
ret
cmp
dec
jne
xchg
mov
mov
cs
stos
fadds
sbb
daa
pushf
cmc
cltd
mov
lods
push
pop
jbe
mov
faddl
jg
loop
sub
sar
xchg
popf
lds
xor
mov
add
stc
cmc
mov
pop
fnstenv
inc
sub
arpl
data16
ret
mov
xchg
dec
pop
inc
hlt
mov
movsb
scas
inc
sub
add
add
insb
adc
pop
pop
or
cmp
add
jecxz
movsb
dec
push
clc
insl
rolb
movb
aam
inc
pop
sub
popf
inc
popf
int3
stc
shr
outsl
cmp
sub
cmp
and
jae
xchg
lcall
popf
cli
rcrb
mov
lods
add
adc
leave
ret
mov
push
jnp
sbb
fadd
in
stos
add
shrl
push
ja
cmp
sbb
loop
test
repz
push
jne
in
dec
ds
jmp
xchg
mov
lret
imul
push
in
into
xchg
inc
xchg
jg
fidivrl
cmpsl
xabort
xchg
andl
inc
xchg
fisubrs
jl
xor
jo
scas
out
xlat
test
stc
repnz
xchg
leave
in
sti
stc
or
mov
mov
xchg
push
jb
pop
or
cmpsl
mov
mov
mov
dec
mov
imul
sub
jecxz
mov
sbb
or
or
call
insb
es
jmp
pop
enter
lahf
fwait
add
and
outsb
pushf
sti
or
pop
mov
fldt
sahf
sbb
repz
es
mov
negl
sub
andb
add
mov
sub
stos
mov
in
cmc
push
fcomps
xchg
jnp
mov
and
dec
ss
add
pop
out
adc
adc
inc
data16
arpl
fisubrl
ret
xchg
stos
xor
insb
push
cmpsb
sahf
add
ficompl
shlb
mov
sub
jae
hlt
lock
and
jge
mov
mov
outsl
push
jge
pop
sbb
arpl
xor
jne
or
sbb
pop
or
cli
cmp
outsl
jmp
lock
pop
pushf
cltd
inc
sti
jp
pop
fnsetpm(287
mov
xor
or
mov
pop
push
sub
inc
sahf
mov
push
gs
sbb
sbb
inc
arpl
jg
pop
cmp
mov
dec
addr16
sarl
outsb
fwait
and
negl
push
sbb
sbb
ret
xor
outsb
mov
mov
add
fstp
mov
ja
push
test
scas
enter
mov
lea
arpl
cmp
scas
jle
out
jp
into
mov
sbb
repz
mov
dec
xchg
test
inc
pop
shll
xor
stc
push
cmp
lds
shl
sbb
xor
and
mov
loopne
dec
pop
add
aam
pop
mov
mov
jmp
icebp
dec
ds
rcrl
lods
imul
repnz
sub
mov
cmp
aaa
xor
mov
mov
xor
js
jno
mov
and
xor
mov
xchg
adc
or
rorb
mov
xchg
je
cmc
add
jmp
sub
mov
js
and
out
ret
fmulp
out
movsb
mov
mov
push
mov
das
push
enter
out
enter
fisubrs
pusha
fisttpll
rolb
mov
jge
sbb
notb
inc
aad
in
lcall
push
add
and
into
xchg
jmp
jmp
aas
mov
push
es
ss
gs
cmp
ljmp
loopne
aad
cs
pop
sbb
scas
mov
lock
push
jns
cmc
mov
inc
stc
rclb
xchg
rorl
aam
jecxz
popa
cmp
cmpsl
sbb
jge
in
aam
jbe
and
cld
pushf
fcoms
inc
and
lods
jmp
imul
add
sbb
insl
push
ret
cmpsl
mov
sti
ja
sub
jmp
popf
lahf
mov
into
cmp
add
subl
fcomip
icebp
inc
cmp
dec
jnp
je
or
or
sub
cld
inc
stos
ret
pop
shl
jne
push
mov
inc
dec
ljmp
ffreep
in
in
test
lahf
addl
or
or
sub
aad
or
arpl
jns
stos
pusha
mov
or
int3
dec
sbb
xor
adcb
icebp
popa
fcoml
pop
push
call
dec
add
push
subl
cmpl
sahf
movb
das
xlat
lea
dec
das
pop
and
lcall
sbb
dec
push
shl
fidivrl
jl
scas
lods
or
xchg
adc
mov
lock
xor
stc
xor
int
inc
cmp
nop
xor
mov
shrb
test
in
lret
lret
xchg
jge
das
ficompl
sub
orl
xlat
cltd
stos
fwait
xchg
add
add
cs
lea
stos
aam
mov
es
jmp
aam
pop
mov
pusha
dec
enter
ret
imul
pop
inc
data16
jnp
test
add
gs
inc
mov
jae
add
sbb
enter
das
dec
stc
sbb
or
dec
xor
sub
mov
mov
and
pop
xlat
daa
dec
pop
imul
dec
adc
push
fwait
call
mov
roll
push
jno
das
outsb
or
mov
push
addr16
out
cli
imul
fwait
enter
pop
push
or
xor
push
mov
insl
pop
inc
jne
out
xchg
cmpl
enter
cmp
push
jnp
scas
jg
dec
pop
inc
rolb
xlat
xchg
std
stos
sbb
daa
divl
jmp
or
sub
xchg
push
push
xchg
xor
inc
filds
mov
dec
inc
rcl
lea
fldenv
je
adc
or
sti
daa
inc
add
popa
xchg
or
notb
stos
lods
mov
test
pop
fistpl
insl
push
jne
inc
sub
in
add
lret
mov
xlat
cs
and
add
fadds
mov
out
jbe
cmp
xor
rorl
dec
rcll
sub
pop
scas
push
cmp
loope
cmp
or
mov
js
pusha
sub
fwait
iret
test
mov
fcos
xchg
sub
sub
orl
and
test
out
int3
dec
pop
xlat
jb
shlb
sarl
mov
push
mov
out
or
sub
adc
sub
insb
mov
rcll
sbb
xchg
cwtl
fldt
mov
cltd
aam
inc
cmp
inc
das
pop
cmp
repnz
repnz
pop
pop
pop
cmpsb
loope
inc
fmulp
adcl
push
jmp
imul
cmp
mov
sub
jmp
int3
dec
mov
inc
arpl
xchg
jae
mov
dec
sti
or
sub
fisubl
outsl
jo
into
and
mov
mov
scas
push
out
arpl
fildl
shlb
jo
jmp
dec
cwtl
mov
jo
pop
cwtl
dec
imul
lcall
lret
mov
mov
adc
mov
jle
lcall
jp
mov
mov
sahf
cmpsl
fcomps
test
or
xchg
mov
or
mov
lock
repnz
jo
mov
mov
int
jne
xchg
adc
rcrl
mov
leave
add
je
xor
roll
adc
xlat
mov
es
jns
adcb
mov
dec
mov
sbb
sahf
ret
adc
stos
iret
jmp
es
das
sarl
pop
jnp
push
add
fldl
cs
divl
aaa
outsl
test
daa
outsl
lret
push
pushf
xchg
xor
mov
add
cwtl
int3
insb
or
cs
sbb
pop
inc
mov
pushf
imul
xor
jnp
repz
dec
cmc
mov
lods
fs
dec
jno
mov
xor
imul
hlt
bound
or
test
jne
sub
and
dec
lret
jnp
loop
jecxz
cmp
nop
fwait
imul
mov
loope
inc
into
leave
out
jmp
ljmp
shlb
and
cmp
and
xlat
mov
inc
ret
mov
test
fs
in
cwtl
sbb
repz
popa
pop
xchg
mov
aas
repz
scas
loopne
lods
pop
push
push
jne
mov
sbb
lahf
icebp
xchg
pop
leave
test
inc
mov
ss
stos
out
jecxz
out
nop
cmp
adc
adc
mov
fstps
sti
pop
xchg
iret
add
fsubrs
push
jg
sbb
mov
jp
sbb
inc
sbb
sub
xor
push
into
loop
iret
jb
js
adc
ss
outsb
pop
xor
jmp
lods
pushf
jnp
push
push
mov
mov
dec
iret
inc
bound
jno
mov
je
mov
adc
das
loop
test
ror
roll
loop
cmpsl
inc
pop
jne
movsb
movsb
sub
ret
xchg
pop
push
fwait
subb
std
cmp
gs
fiaddl
xchg
ds
push
cmp
es
sub
cmp
incb
data16
xchg
lods
je
fistpl
lahf
add
mov
inc
sub
and
hlt
sbb
inc
push
adc
cmc
jns
and
xor
cmp
jo
les
xchg
cmc
mul
sbb
jl
ss
int3
faddl
adc
loope
sahf
out
pop
sub
mov
push
sub
xchg
jbe
xchg
hlt
rcll
scas
jl
mov
fidivrs
stos
push
sub
xchg
dec
inc
ret
fdivl
and
shl
outsl
jmp
bound
sahf
xor
sbb
cmp
pop
jo
negl
sub
sbb
subl
cs
mov
jno
fadds
or
test
inc
inc
jns
insb
mov
ficomps
inc
lcall
ficoml
lock
push
pusha
jo
jl
adc
enter
add
xor
dec
cmpsl
icebp
push
in
mov
movsl
shlb
pop
in
test
jl
pop
ljmp
xchg
mov
fnstenv
mov
scas
cmp
insb
adc
sbb
inc
popa
repz
scas
fisubs
in
test
repz
scas
sbb
add
popl
add
or
int3
jl
mov
add
push
and
cmp
dec
sbb
mov
sub
pop
nop
mov
sbb
nop
push
int
cld
addr16
sti
cmp
test
push
inc
xchg
in
into
dec
push
and
adc
int
xchg
jns
nop
or
and
mov
mull
mov
invd
mov
lcall
leave
sbb
es
cs
ret
mov
ds
leave
push
sub
arpl
pop
mov
and
xor
clc
cmp
cmp
mov
jae
mov
ljmp
dec
add
jecxz
push
shrb
dec
in
loope
jns
in
test
cmp
cmp
xchg
mov
call
add
loope
lahf
dec
shl
or
xchg
mov
xor
mov
ljmp
popa
ja
mov
adc
mov
lea
movsl
ret
test
add
adc
sbb
jl
or
pop
not
fldl
push
add
push
sahf
add
dec
xchg
mov
out
mov
add
jae
je
rorb
iret
jbe
pop
xor
loop
sarl
adc
inc
ss
outsb
pop
call
and
cmp
in
push
sub
lcall
cli
adc
fdivs
stc
in
das
pop
inc
xchg
jno
pusha
mov
loop
in
sub
stos
xor
in
cmp
clc
mov
inc
cmpsb
xlat
or
dec
xlat
into
dec
int
rcl
insl
data16
xchg
cmp
mov
jae
cs
and
js
mov
rolb
aad
pop
mov
adc
fsub
pop
fisttpl
jno
aaa
stos
in
add
sub
cmpsl
cli
ficoml
push
mov
sbb
aam
mov
sbb
or
test
jmp
mov
jae
mov
pop
fisubl
xchg
inc
jp
dec
cmp
jno
incl
test
pop
addl
mov
js
dec
adc
pushf
and
sbb
shr
scas
sub
lret
lahf
fcomps
mov
dec
test
dec
addr16
mov
pop
inc
mov
lret
stc
sbb
mov
adc
xchg
ja
mov
inc
call
loope
pminsw
push
mov
cmc
test
pop
or
jmp
sub
in
xchg
mov
hlt
jp
adc
add
mov
mov
imulb
inc
mov
jno
cmp
jl
or
cmp
xchg
ss
or
cmp
ja
pusha
push
xor
add
ret
xor
jmp
lods
pop
mov
xlat
ret
mov
mov
xor
adcl
xor
xor
idivb
js
inc
popl
jg
jne
jnp
out
clc
xor
sub
sbbb
hlt
mov
cvttps2pi
cmpsb
or
add
ja
loopne
popa
cmp
push
mov
mov
jne
call
rclb
and
jecxz
pop
mov
mov
sub
push
std
test
lret
idivb
mov
push
imul
add
sbb
and
or
imul
cmp
push
mov
mov
sub
sub
push
pop
sbb
js
pop
icebp
mov
adc
inc
sub
jecxz
cmpsb
push
fstpl
popf
mov
fdivp
out
mov
cmp
push
adc
aas
mov
fcmovne
mov
nop
dec
sub
repz
mov
lahf
mov
pop
cmp
fadds
pop
jnp
enter
mov
ret
mov
out
cltd
pop
lods
pop
divb
push
lret
int3
out
or
lods
test
int
in
cmpsb
iret
insb
das
cmp
adc
mov
stc
inc
jmp
or
subb
aad
mov
push
mov
lahf
push
xchg
xlat
xchg
decl
push
and
sbb
fistpll
out
jns
mov
popf
mov
popf
ret
js
pop
aaa
jg
add
sti
loopne
jp
push
test
dec
pop
jp
imul
mov
jp
mov
fwait
sbb
xchg
in
ja
jge
pop
jecxz
pop
leave
dec
idivb
bswap
gs
push
cli
jne
or
cmp
test
int
push
push
mov
lock
mov
idiv
out
cmpsl
lcall
inc
lret
dec
pushf
mov
sar
sub
adc
in
sub
or
mulb
mov
vmread
fwait
sbb
mov
xor
ficoms
xchg
mov
add
or
mov
cs
and
fs
sbb
sbb
xor
and
mov
lcall
sti
xchg
pop
xor
outsb
add
push
mov
cmpsl
push
or
dec
subl
mov
mov
stc
inc
icebp
inc
mov
mov
dec
shrb
sbb
mov
lods
lcall
ret
daa
jbe
mov
sahf
sub
ficomps
hlt
scas
adc
mov
mov
jne
ja
jge
call
ret
cmc
lahf
sub
and
cs
and
stos
js
and
pop
inc
call
dec
push
aaa
push
popa
lret
push
frstor
dec
inc
push
xor
add
mov
scas
and
insb
xchg
xchg
sub
pop
popf
out
pop
push
shlb
cwtl
loope
das
pop
push
aam
les
out
mov
xchg
push
data16
fs
and
dec
mov
sahf
div
sbb
idivb
mov
push
cmp
scas
mov
mov
jne
pop
addr16
mov
pop
stc
sub
sbb
inc
dec
inc
xor
adc
pop
loope
cld
lods
push
das
insb
and
rorb
inc
cld
adc
sub
cmpb
test
cmp
sbb
test
push
sbb
cmpsl
idivl
inc
mov
xchg
dec
test
sub
loopne
ljmp
iret
xchg
xchg
js
xchg
sub
pop
mov
mov
sub
sub
sub
ljmp
jo
push
in
xor
fistpll
sub
dec
xchg
lea
adc
mov
aad
cmpsb
outsl
ret
push
in
int3
mov
mov
cli
sub
arpl
jecxz
pop
sahf
jle
sub
loopne
mov
mov
lret
jb
lock
mov
mov
push
adc
cld
sub
xchg
icebp
xchg
nop
mov
fstpt
xor
mov
jnp
das
aaa
mov
dec
cmp
mov
popa
adc
test
sub
adc
jnp
imul
xor
cmp
mov
xor
xor
cmp
cmp
repnz
xchg
hlt
mov
in
test
pop
dec
lock
dec
cs
push
pop
inc
shl
scas
dec
xor
imull
mov
lret
inc
sub
sbb
aaa
dec
sbb
and
cmp
xchg
fnstsw
mov
xchg
stc
mov
sti
mov
mov
fnstcw
rolb
cli
cmp
addr16
jae
inc
mov
mov
xor
ljmp
sbb
pop
test
and
loop
push
inc
cwtl
fldenv
and
mul
mov
pusha
dec
mov
push
pand
aad
out
sbb
dec
xor
out
cli
pop
scas
mov
mov
xor
ds
aas
push
adc
clc
andl
jnp
popa
sti
mov
sub
in
sbb
mov
inc
testb
mov
xchg
cmp
dec
adc
clc
scas
mov
stos
test
into
les
mov
cmp
adc
inc
adc
ja
pop
add
push
cs
xor
pushf
add
lahf
fidivl
repnz
icebp
data16
data16
sbb
mov
push
cmp
mov
ss
inc
shll
and
mov
mov
or
jne
call
je
xor
mov
jg
mov
inc
test
and
clc
std
loope
test
aaa
test
xchg
shl
push
call
dec
adcb
and
rolb
stos
lock
imul
movsb
push
adc
je
out
lret
push
das
lods
cwtl
xchg
fsubrl
inc
push
jbe
jecxz
lret
aam
movsb
inc
cmp
lds
repz
test
pop
push
inc
jp
mov
andl
jge
mov
fidivs
daa
shll
iret
xchg
pop
xlat
or
nop
into
dec
push
mov
inc
int3
repz
rcll
sub
mov
aaa
cmp
adc
cmp
xorl
push
addb
mov
jbe
xchg
push
fidivrs
pop
stos
sub
sarl
pop
push
ds
imul
push
sbb
mov
lret
or
lret
mov
add
mov
aad
jle
ret
or
add
loop
es
sbb
jmp
pop
xchg
push
or
jns
or
test
ja
inc
inc
repz
adc
out
mov
pop
rorl
call
fildl
and
aaa
or
lahf
sub
mov
jne
or
dec
add
sub
mov
and
and
pop
stos
fisubrl
mov
aas
fndisi(8087
dec
mov
mov
jns
adc
mov
mov
and
lret
mov
add
out
mov
add
test
call
inc
daa
clc
aad
loope
xlat
cmp
adc
add
ss
movsb
insl
and
cmp
and
push
adc
out
mov
add
negb
add
jnp
inc
cmp
test
add
xlat
add
push
and
or
pop
cmp
push
jmp
xchg
cmp
inc
cltd
mov
shl
cltd
mov
and
popf
divb
in
add
dec
push
mov
mov
dec
or
mov
cld
loope
pop
test
dec
call
adc
rolb
mov
and
pushf
inc
into
cmp
xor
testl
pop
mov
xchg
int3
sti
sahf
mov
fsts
mov
shrb
popf
daa
rcrl
inc
test
das
push
mov
pushf
inc
sub
fidivrl
adc
daa
imul
xchg
jo
dec
mov
push
lret
inc
mov
loopne
imul
scas
jl
or
shl
or
sti
loopne
out
cld
and
cmc
cmp
sahf
cmc
in
push
push
dec
xor
cmp
test
mov
or
pop
aam
ds
fsubs
dec
lea
insb
mov
sub
xlat
test
cmp
out
xchg
sub
jo
rcrl
adc
mov
shlb
push
xor
jo
push
das
cmp
movsl
push
pop
andb
pop
or
cli
lds
lret
fsub
xchg
std
sbb
out
ds
orb
jne
test
mov
mov
jmp
adc
and
out
lods
and
add
lahf
pop
xchg
js
fs
pop
sti
sbb
stos
popf
arpl
lea
xor
stos
jne
jmp
movsb
shll
sbb
inc
jecxz
scas
jp
scas
mov
push
sub
cltd
movsl
cmp
jge
and
popf
fwait
inc
ja
mov
ds
pop
aam
dec
cmc
push
out
dec
pop
loopne
push
pop
and
cmp
imul
stc
mov
pop
xchg
sub
pop
cmp
xchg
cmp
sti
cmp
xor
shll
sbb
jo
pop
leave
mov
xchg
ficomps
imul
xchg
push
fnstenv
jge
sbb
cmpsl
jp
cli
mov
mov
mov
mov
gs
sub
and
cmpsb
aam
pop
out
add
or
dec
mov
gs
cld
adc
cmovae
repnz
mov
aam
insl
les
cs
push
pop
xor
repz
out
dec
fisttpl
sarl
out
pop
dec
icebp
loop
fidivrl
mov
in
fiadds
mov
in
and
sbb
sub
mov
js
add
or
ja
stc
data16
leave
and
add
aad
jp,pt
out
icebp
arpl
fsubrp
popa
or
orl
xchg
push
cwtl
es
pop
psllq
xchg
sbb
shr
xorl
mov
cld
push
hlt
push
inc
inc
dec
push
mov
xchg
loop
orb
aam
jge
cmp
sub
mov
pop
cmp
pop
dec
inc
mov
bound
sbb
cwtl
mov
ret
mov
mov
movsb
pop
outsb
dec
lock
cmp
and
mov
lret
xchg
int3
dec
popa
mov
test
xchg
sbb
pop
mov
repz
cld
push
shll
pop
sahf
pop
pop
mov
lret
mov
inc
aaa
push
addl
sub
setns
push
mov
xchg
cmpsb
jp
mov
jmp
aas
jl
mov
cmp
add
pop
in
popf
scas
jle
ret
or
lret
int3
imul
add
inc
xor
jg
ljmp
pop
jbe
rorl
jne
sbb
sub
enter
pop
jae
mov
jb
xchg
out
fldenv
ret
stos
test
cwtl
xor
iret
push
sub
stc
xor
jno
xor
push
pop
jp
jl
fisttpll
push
aas
leave
out
sbb
cmp
mov
mov
sbb
push
add
cmp
nop
or
mov
pop
add
dec
sbb
mov
sbb
aad
or
jmp
and
inc
enter
xchg
inc
jne
aad
pusha
inc
push
sub
mov
lods
test
mov
ret
push
jbe
push
inc
loopne
xlat
ja
data16
lret
mov
mov
mov
fucomp
mov
inc
xchg
xlat
shll
pop
cltd
push
je
mull
pop
bound
aam
and
sbb
shlb
sub
insl
shll
pop
enter
pusha
lods
mov
and
out
xchg
jl
jbe
mov
and
jp
test
xchg
jae
mov
lds
mov
mov
mov
sbb
faddl
xor
aas
movsb
add
pop
stc
and
pop
mov
jae
mulb
or
add
push
repnz
addb
rolb
mov
jb
fwait
leave
adc
movsl
sub
dec
sub
ljmp
pop
lea
hlt
in
out
test
inc
xor
cmpsl
rorl
popf
mov
outsl
inc
fstpt
inc
or
test
dec
in
xor
popf
ja
or
jne
push
and
cwtl
xchg
mov
xor
pop
jae
lds
gs
bound
sbb
cmp
out
mov
inc
mov
inc
je
cmpsl
pop
ljmp
sbb
dec
cmp
mov
sbb
push
dec
cmp
test
nop
ja
aad
fisttpl
jne
push
movsl
jne
mov
push
adc
dec
mov
scas
push
sub
dec
mov
test
xor
adc
xor
loope
sarb
sub
cmp
cmp
cwtl
gs
loop
jbe
outsb
add
cs
xchg
lock
shlb
cmp
mov
call
fadd
bound
test
adc
add
xchg
sub
imulb
arpl
imul
scas
push
sahf
test
cmc
aad
fdivs
scas
andb
add
aaa
lret
push
and
cmp
lock
jecxz
or
dec
sub
xchg
cmp
jo
pop
mov
push
xchg
sti
cmp
push
fists
outsl
sbb
fs
dec
jg
fisubrs
sbb
icebp
out
aaa
sbb
and
cli
xor
icebp
mov
cmp
cmpsb
jne
lcall
pusha
dec
mov
repnz
xor
xchg
stos
inc
push
in
ret
lcall
pop
bound
shr
and
xchg
daa
je
sbb
sub
mov
fcmovbe
cmp
sub
or
aas
aad
out
rcrb
lahf
adc
leave
aam
popf
out
daa
movsb
mov
aas
pusha
and
jl
icebp
stos
inc
sbb
pop
out
fiaddl
cmp
adc
mov
outsb
and
mov
xor
jo
cwtl
mov
or
mulb
loop
jbe
test
sti
push
mov
jb
cmp
out
mov
inc
jne
sbb
pop
sti
or
popa
cltd
push
ljmp
mov
mov
or
and
fcoml
cmp
psrlq
lahf
je
into
adc
sub
decb
int
shll
and
shrl
je
stc
ficoms
das
inc
jle
sub
pusha
dec
sbb
loop
pusha
icebp
orb
xor
fists
cmp
push
movsb
es
outsb
and
push
dec
nop
inc
cs
dec
cmp
pop
loope
xchg
out
inc
int
mov
rolb
shrl
pop
das
sbb
cld
adc
fcmovnu
xor
aas
jno
push
dec
iret
mov
push
xchg
cmp
data16
into
shrb
adcb
sub
outsl
mov
add
xchg
in
les
inc
nop
add
ret
loopne
std
in
or
sbb
dec
gs
sahf
aas
push
in
cli
scas
xchg
xor
jl
pushf
jmp
outsb
hlt
insw
and
push
out
xchg
dec
jg
mov
push
and
cmp
out
ja
subl
call
sub
es
out
adc
jmp
cld
cmp
test
aaa
adc
je
faddl
fidivl
or
mov
daa
cmpsl
popf
add
ja
aam
mov
push
jge
aaa
mov
rorb
cltd
sub
movsl
cld
or
outsb
mov
lret
popf
and
popf
mov
in
out
mov
pop
ret
popa
xchg
int
repz
xchg
or
loope
mov
mov
arpl
or
outsl
pop
arpl
pop
push
in
inc
rcr
pop
pushf
cmp
jge
out
mov
mov
ret
aaa
dec
std
cmc
mov
imul
pop
loopne
sub
pop
hlt
mov
xchg
pushf
dec
loop
dec
adc
pop
inc
test
cld
pop
adc
lret
mov
adc
cmp
add
mov
outsb
test
enter
out
outsb
lods
ret
adc
ja
jecxz
xchg
repnz
mov
mov
sbb
ljmp
mov
cli
sbb
xchg
or
in
lret
and
icebp
inc
mov
stos
mov
icebp
into
rorl
inc
jae
fwait
push
fdivs
addr16
fbstp
jge
insl
push
test
jbe
lcall
lret
in
cmpsb
and
insl
push
mov
mov
out
xchg
inc
int
out
adc
jae
inc
gs
xchg
rcrb
inc
sbb
push
mov
xchg
add
xchg
mov
and
xorb
rcrb
mov
pop
push
sub
push
idivl
sub
mov
out
and
or
add
cmp
aaa
insb
mov
andb
int
sti
and
mull
subb
add
push
fnsave
jne
movsl
cltd
es
push
and
ret
cmc
fldenv
jge
data16
xchg
lret
pushf
cli
inc
xchg
aam
rorb
mov
xchg
mov
outsb
lret
or
repz
pop
mov
sahf
mov
xor
push
aam
cmp
cmpl
mov
pop
movsb
sbb
sbb
mov
add
mov
aaa
mov
shlb
inc
xor
fisttpl
insl
push
lods
in
lods
popa
dec
sahf
std
out
push
lcall
das
add
fildl
mov
mov
adc
mov
ss
fcomps
xchg
push
fisubl
mov
aad
jns
std
frndint
ret
lcall
xchg
enter
das
mov
mov
and
add
outsl
xchg
std
xchg
arpl
test
fnstcw
loop
das
mov
sahf
mov
sbb
fldl
es
pop
and
sub
lret
in
fcoms
aas
add
sti
repnz
popf
rorb
aam
sti
out
leave
jb
mov
mov
add
pop
scas
mov
repz
insb
or
inc
jp
pusha
sbb
dec
ret
andb
jns
mov
fs
lods
pop
jmp
outsl
jmp
sbb
cltd
ret
je
mov
js
jecxz
das
cltd
loop
fcoml
xchg
mov
inc
inc
add
aas
jmp
out
sti
ds
xchg
and
adc
rorb
mov
cwtl
ret
lcall
je
mov
and
lret
das
inc
aas
or
ret
xchg
mov
pop
loope
insl
lock
mov
push
shll
enter
jb
ret
lds
mov
dec
out
xor
gs
mov
outsl
mov
lods
imulb
or
sbb
dec
xor
pop
je
push
out
mov
insb
mov
or
mov
pop
imul
adc
int
cs
xlat
inc
xlat
push
pop
dec
push
fmull
dec
out
repnz
adc
sti
fcmovu
inc
icebp
jmp
std
fnsave
aas
inc
outsb
mov
or
pop
les
lea
je
add
inc
rcr
popa
popa
stos
ljmp
ret
xchg
ficoms
arpl
jmp
pop
inc
push
and
sub
xor
or
out
sbbl
push
inc
inc
mov
out
out
cmpsl
or
cmp
sbb
inc
pop
ja
xchg
pop
pop
inc
faddl
gs
mov
stos
fsubl
fbld
mov
imulb
xchg
push
sub
and
les
adc
mov
scas
out
cmp
data16
fldenv
js
call
push
lds
or
out
mov
jne
fdivl
xchg
sub
sahf
cmc
hlt
sbb
cmpsl
jbe
rorb
imul
loope
xchg
decl
add
pop
mov
xlat
jbe
add
or
mov
icebp
inc
inc
or
cltd
sub
xlat
icebp
mov
xor
mov
es
inc
dec
fbstp
sub
jge
hlt
pusha
add
jecxz
sbb
mov
xchg
addr16
std
pop
in
fidivl
sti
push
jle
imul
and
incl
inc
xchg
stos
lea
pusha
fisttpll
inc
mov
add
rcr
push
into
cltd
out
inc
mov
cmc
mov
das
enter
mov
clc
jg
jl
push
gs
test
daa
adc
push
cmpps
or
mov
mov
push
dec
cwtl
inc
lret
in
add
ret
push
jge
push
sbb
push
lret
fdivr
repz
xlat
ret
push
cmc
ss
addr16
inc
push
mov
mov
insl
mov
jno
xor
fildl
xor
or
and
xchg
mov
fs
rolb
mov
pop
aam
mov
fwait
imul
mov
pop
js
arpl
mov
or
loopne
lock
pop
mov
push
lcall
mov
sub
inc
adc
daa
jo
pop
sub
dec
dec
add
iret
inc
mov
mov
aam
data16
fmul
ja
and
punpckhdq
pushf
rcrl
enterw
mov
fcmovnu
mov
xchg
gs
dec
xchg
add
or
std
mov
enter
xor
les
daa
push
xchg
jge
bound
pop
pop
push
sbb
cmp
adc
dec
jecxz
repz
pop
and
pop
push
mov
shlb
push
push
out
sar
jno
mov
sub
mov
sub
and
lahf
adc
xchg
xchg
repnz
push
mov
rep
cs
frstor
push
popf
sbb
iret
gs
popf
insb
stc
jae
cmp
sub
out
mov
or
mov
dec
rcrl
sub
push
sub
xchg
cmp
cmc
scas
dec
mov
cmp
push
pop
and
or
sub
push
in
repz
and
push
jb
loopne
test
jg
imul
push
outsb
add
test
shl
sub
data16
pop
nop
insl
push
mov
iret
out
mov
pop
pop
mov
ret
adc
fisubrs
dec
dec
sahf
push
inc
mov
sbb
dec
outsb
jnp
icebp
call
jns
aad
int3
imul
repnz
fmull
adc
add
adc
lret
cmp
fs
insl
pop
mov
push
pop
mov
and
subl
push
mov
cli
mov
mov
mov
popa
adc
mov
xchg
or
xchg
xor
cmc
and
cltd
or
leave
ss
mov
movsb
xchg
out
mov
das
in
xchg
or
or
in
cmpsb
aaa
fmull
mov
push
mov
rcrb
inc
fistl
add
dec
push
xchg
notl
js
in
cmpb
push
scas
fcompl
ljmp
ljmp
mov
in
xor
pop
pop
lcall
cli
jl
jg
jge
ret
pop
inc
maskmovq
testl
into
stos
jae
jbe
push
sbb
cli
fimull
dec
loope
add
idivb
xchg
inc
push
leave
xchg
fnsave
adc
xchg
js
sbbl
divb
into
xor
movsl
add
cmp
test
xor
mov
mov
lret
out
rcrb
je
repz
in
inc
dec
or
cmp
pop
stos
fnstcw
xchg
aad
aad
jl
sti
sub
cmp
jne
xor
dec
mov
adc
in
shll
aam
dec
scas
cltd
nop
sub
xchg
clc
cld
mov
xor
push
andl
cwtl
sahf
pop
mov
jmp
push
sbb
xchg
sbb
sarb
cmp
sub
imul
outsb
jae
xor
and
movsl
xchg
jl
push
in
pushf
les
push
jb
add
sub
into
add
out
or
xchg
jmp
es
adc
pushf
les
aaa
push
cmp
xchg
ret
mov
inc
and
test
mov
adcb
cmp
inc
sbb
jb
ret
lret
outsb
push
adc
pop
adc
push
adc
dec
inc
ficoms
pop
pop
lret
mov
pop
jae
shl
pop
push
pop
push
jmp
jl
out
adc
add
jle
dec
jbe
or
cld
dec
idivl
divb
push
pop
pushf
sbb
xchg
jmp
popf
add
adc
fld
or
dec
or
push
int
sti
fndisi(8087
fcmove
mov
in
fldt
mov
pop
mov
push
or
dec
dec
fcomps
adcl
sub
into
lret
dec
push
dec
rorl
xor
mov
iret
jno
xchg
imul
call
mov
mov
fs
mov
les
clc
or
andb
fcoms
dec
nop
test
xlat
cmp
cld
mov
and
adc
test
and
dec
inc
cmp
xchg
test
test
pusha
adc
cli
mov
sub
or
in
rcrl
cmpb
test
repnz
or
push
nop
add
dec
mov
call
add
das
cmc
pop
popf
out
sub
pop
aad
mov
data16
or
in
push
loop
adc
xchg
mov
das
out
dec
pop
lret
add
fstpl
sub
iret
fsts
stos
mov
cmpsl
mov
xchg
cltd
out
inc
in
inc
repnz
mov
and
xchg
iret
clc
stos
fmul
jo
pop
cmpsl
push
fcmovnbe
test
xor
insl
aas
or
in
pop
pop
mov
test
jp
sbb
mov
cmp
xlat
gs
imul
test
fstps
popa
rcr
jbe
xor
pop
icebp
jns
mov
adc
push
jb
in
sahf
or
or
xor
inc
mov
fnsave
out
push
pusha
and
mov
fistpll
jae
sbb
jle
movsl
rcrl
dec
adc
add
mov
xor
xchg
mov
push
push
mov
xor
movsl
icebp
fistl
fs
into
mov
mov
pop
push
out
add
pop
movsl
adc
pop
std
sub
dec
jae
pop
mov
les
js
cmp
pop
out
je
pop
or
add
mov
mov
sbb
jo
jl
sarl
fistpl
cmp
mov
fbstp
mov
inc
jge
ret
pop
dec
gs
xor
jbe
fadds
jne
mov
gs
loop
cmp
push
fwait
dec
stos
repz
lahf
push
ret
enter
int
sbb
js
inc
loop
xchg
hlt
sbb
arpl
pop
shlb
stos
adc
cs
fucomp
jmp
add
jg
mov
outsl
jbe
sbb
into
shlb
or
cmp
stos
dec
fldt
pop
pop
call
mov
push
cmp
in
leave
dec
adc
scas
adc
ss
insb
jbe
adc
rcrl
call
add
ret
fcoml
loop
scas
std
jmp
mov
inc
imul
cltd
jle
xor
add
pop
insl
sub
sbb
cwtl
mov
loop
push
xlat
pop
and
incb
push
popf
mov
jg
and
fninit
call
mov
push
lcall
icebp
and
mov
js
dec
enter
xor
sahf
jb
lcall
rclb
fucomip
in
xchg
cmp
out
icebp
in
lcall
or
incl
test
adc
lret
mov
jae
xor
mov
out
ljmp
pusha
adc
out
sub
sbb
cwtl
js
pop
aad
jo
sub
push
por
or
mov
cmpsl
pop
cmp
xor
xchg
outsb
push
sbb
xchg
xchg
les
jl
je
in
mov
push
jne
cmp
jecxz
lahf
cs
cmp
jno
push
movsb
dec
imul
leave
xchg
sub
add
fstps
lret
cmp
aam
lcall
dec
ljmp
movsb
jo
dec
pusha
sbb
mov
insl
push
fs
or
fcmovnu
jg
and
push
aad
and
scas
dec
sbb
insl
test
xchg
bound
aad
stos
lods
cmp
xchg
cmc
sub
add
lods
sub
xchg
dec
int3
xor
xchg
mov
and
add
lock
and
insl
fmull
loope
std
push
sub
xor
mov
je
adc
in
jne
out
jb
fists
nop
or
xor
pop
lock
push
mov
mov
xchg
fbstp
xor
fildl
mov
mov
jge
jns
cmp
sub
gs
jl
das
push
and
cs
mov
pop
push
adcl
xchg
shrl
xchg
cmp
xchg
xor
jecxz
adc
mov
jnp
add
dec
xchg
orb
sub
sahf
push
lret
pop
cmp
xor
fildll
sahf
push
sub
aad
sbbb
pop
int3
sub
dec
pop
and
xchg
in
xlat
sbb
cwtl
add
js
emms
push
in
das
ljmp
adcl
fildl
inc
je
popa
cmp
cmp
mov
pop
inc
push
bound
pop
and
mov
push
mov
mov
push
enter
lcall
mov
dec
or
popa
mov
jmp
mov
enter
in
pop
jmp
cwtl
cmc
mov
mov
mov
in
xchg
push
pushf
movsl
jl
jecxz
imul
jp
adc
in
xor
push
mov
dec
adc
cmp
inc
fildl
pushf
std
ljmp
mov
adc
out
dec
repnz
arpl
and
inc
imull
adc
scas
fisubl
stc
or
or
or
inc
out
sub
cmpsb
xor
jae
jmp
jo
mov
imul
mov
inc
gs
mov
je
pusha
inc
addr16
sub
in
jns
lods
and
neg
test
adc
push
add
mov
ja
das
pop
mov
outsb
lret
mov
lods
cmp
mov
or
mov
jl
test
jo
sub
outsl
clc
inc
and
mov
out
cmpsl
or
mov
dec
ret
aad
enter
jno
sbb
stc
xchg
mov
lret
cmpsl
jo
adc
cltd
sahf
es
sbb
xlat
cmp
jl
pop
push
outsb
push
xchg
pop
outsb
adc
outsl
push
lock
cs
in
testb
mov
lea
xchg
push
mov
mov
dec
in
push
nop
xlat
jo
cmpsl
push
xchg
les
mov
sbb
xchg
pop
fdivl
jmp
es
dec
add
in
stc
xorb
insb
xchg
dec
movb
push
adc
stos
lods
inc
and
jae
stos
test
adcb
push
dec
xchg
cmpsb
jge
les
fidivrl
pop
mov
dec
loope
loopne
jp
jl
jno
jg
in
push
stos
test
mov
je
test
mov
inc
push
pop
je
addr16
jecxz
testl
xor
jg
addr16
mov
push
jl
add
sbb
jbe
sti
fsub
nop
je
iret
mov
mov
mov
pop
cltd
out
push
xor
and
scas
jge
xlat
jecxz
pop
aam
dec
xor
lds
jp
and
mov
mov
push
or
lock
addb
arpl
adc
icebp
iret
cs
xchg
mov
inc
mov
cmp
jmp
shlb
mov
or
xor
xchg
les
call
les
sbb
in
pop
cld
add
push
gs
daa
lahf
add
nop
add
inc
sub
mov
cld
mov
je
es
jbe
call
push
xchg
mov
movsl
imul
ljmp
mov
dec
inc
dec
jne
in
xor
inc
pop
aad
ret
in
fucomp
fsub
in
push
mov
and
fildll
or
cmp
movsb
or
or
cld
add
add
mov
decl
sti
pop
leave
lahf
or
cmc
gs
and
iret
fistpll
inc
lds
int3
dec
dec
jo
jmp
mov
dec
xlat
add
addr16
fisubrs
loop
lahf
jge
sbb
pushf
ret
bound
add
stos
jecxz
out
and
xorb
mov
rclb
mov
mov
jmp
push
sbbb
inc
xor
inc
fisubrl
mov
lea
xchg
jl
xor
in
scas
fidivl
das
scas
movsl
jbe
arpl
push
rcrl
pop
jl
cwtl
sbb
mov
jo
push
mov
add
cld
lret
pop
push
rol
mov
scas
mulb
lcall
dec
dec
out
push
or
cmpsb
xchg
xchg
lret
std
sub
lahf
push
jecxz
cmpsl
ficoml
jae
jae
dec
mov
jb
jecxz
stc
ljmp
cmp
shll
insb
in
in
mov
dec
mov
pop
cmp
mov
nop
js
outsb
iret
jae
inc
or
outsl
or
push
and
les
inc
scas
add
es
lret
rorb
cmpsb
repz
fs
das
daa
mov
and
pushf
mov
jle
inc
inc
inc
sar
loope
sub
and
int
loop
cmc
adc
test
xchg
mov
gs
cmp
pop
mov
fsubr
mov
data16
icebp
xorl
pushw
fbstp
jge
push
sub
sbb
inc
out
adc
dec
xchg
add
xchg
xchg
testb
cmp
sub
sub
pop
cltd
xchg
fwait
out
nop
mov
scas
pop
loop
orb
inc
aad
iret
or
jg
divl
xlat
in
mov
mov
jbe
adc
xchg
pusha
inc
loop
and
mov
cmc
pop
sbb
inc
cmpsb
das
xchg
mov
dec
js
mov
xor
into
fistpll
dec
pushf
iret
sbb
loop
mov
mov
sbb
cwtl
jl
loope
cltd
mov
cli
xchg
inc
jb
mov
or
push
cmp
xor
pop
cltd
add
nop
xor
aas
sbb
sbb
mov
iret
scas
callw
fidivl
dec
aaa
jb
jbe
out
out
or
and
ja
mov
mov
dec
nop
lret
cld
add
mov
rcrl
fcompl
adc
repz
lret
cwtl
icebp
shll
jo
int
arpl
pusha
inc
pop
cli
popl
mov
cld
push
lods
lods
stos
imul
push
cli
adc
cli
inc
mov
and
cmpb
cmpsb
inc
cmpl
push
mov
pop
sahf
enter
testl
lret
push
sti
jmp
fwait
pop
in
inc
leave
jle
xor
and
add
imul
jo
push
xor
or
dec
inc
lods
cmp
jae
xchg
sbb
adc
push
adc
push
mov
fwait
lea
mov
cwtl
dec
mov
movsb
xchg
insl
out
iret
sub
test
or
lahf
or
imul
in
cmp
cmp
loope
jg
cmp
lcall
mov
ficompl
iret
mov
mov
adc
in
cwtl
sarl
fdivl
and
push
pushf
stc
or
xchg
inc
inc
ljmp
mov
push
cld
loopne
push
mov
lods
mov
test
add
int
sub
imul
sti
mov
xchg
shld
pop
pop
pop
mov
dec
xchg
add
jnp
daa
loop
jge
ret
jmp
pop
mov
mov
lods
xor
aad
or
ret
loopne
subl
inc
test
xchg
add
xor
push
adc
stos
loopne
dec
push
mov
mov
sbb
pop
add
int
jo
xchg
test
sub
sbb
lods
and
mov
mov
sarl
fs
dec
in
inc
fdiv
dec
outsb
data16
pop
push
shlb
cmp
shr
pop
stos
in
mov
daa
mov
push
mov
out
cs
icebp
inc
in
pop
mov
sti
outsb
mov
pushf
adc
sub
fwait
cmp
loop
inc
aad
or
jmp
mov
mov
dec
fbld
mov
pop
sub
xor
gs
jno
enter
jo
cltd
mov
push
popf
sbb
cli
dec
mov
icebp
pop
ja
popf
int
and
rep
cwtl
and
jno
jge
hlt
pop
mov
push
adc
pop
xchg
sbb
es
push
pop
aad
mov
hlt
repnz
and
mov
pop
jo
mov
and
pop
xchg
nop
mov
ljmp
mov
sbb
cld
xchg
mov
push
repnz
add
loop
in
aam
into
dec
xchg
test
push
pop
xchg
cmpsb
add
rcl
push
jns
hlt
push
mov
add
decl
dec
rcrl
sahf
stos
adc
test
imul
sub
lods
pop
mov
repnz
xor
loop
popa
outsl
push
hlt
sti
pop
jae
mov
push
jl
loopne
sub
icebp
clc
in
adc
xchg
push
ficoms
mov
fsub
dec
dec
jb
adc
xor
scas
mov
pop
pop
xchg
mov
dec
push
scas
adc
stc
cmpsb
adc
or
xor
jmp
dec
cltd
add
imul
jp
fistps
push
fwait
and
dec
and
xchg
jbe
movsb
cmp
cmp
out
inc
bnd
or
push
ja
cmpsb
xor
pop
dec
mov
adc
rcrb
jnp
xchg
adc
mov
scas
xchg
test
ss
and
fiadds
cltd
mov
idivb
mov
push
inc
movsl
mov
pop
push
cmp
inc
outsb
orl
mov
jmp
fnstcw
movsl
add
out
js
add
ss
fcmovnu
pop
orl
addb
loope
cld
inc
mov
mov
imul
jg
xchg
push
jmp
mov
test
mov
fidivrs
popa
bound
test
mov
cld
outsl
sti
aaa
jle
aas
shlb
scas
lcall
clc
dec
xor
call
jecxz
mov
sbb
jge
mov
mov
or
test
cmp
adc
enter
xchg
inc
fwait
stos
shlb
mov
dec
sub
mov
aad
mov
mov
outsb
lea
dec
daa
pop
sbb
push
sbb
sarl
sub
push
data16
cmp
mov
pop
mov
adcl
popf
test
dec
xchg
test
mov
test
push
dec
pop
out
sbb
sahf
sub
xchg
jge
add
fucom
adc
push
push
jecxz
sub
cmp
in
daa
jge
xchg
in
sub
test
push
xchg
dec
adc
push
rolb
pop
push
ret
cmp
add
outsl
mov
jl
xor
cld
mov
shll
icebp
mov
xor
fbstp
pop
popa
jge
fwait
cmp
outsb
addr16
cltd
arpl
sub
les
jb
add
adc
arpl
movsb
pop
fisttpl
xchg
lcall
cs
inc
adc
decl
scas
mov
stc
pop
pop
mov
xchg
add
in
adc
jg
adc
pop
std
push
orb
in
cmp
ss
ja
test
or
adc
popf
loopne
mov
mov
mov
jp
add
mov
pop
stos
mov
scas
push
cmp
mov
fsub
adc
rcrb
mov
nop
pusha
outsl
xor
sbb
and
and
jge
jo
mov
push
es
lods
push
adc
jae
out
hlt
cmp
fcmovne
or
dec
sbb
outsb
mov
add
scas
lods
mov
mov
lret
andb
ret
mov
pop
out
sub
jne
mov
jne
daa
mov
lods
cmp
mov
mov
inc
in
fdivr
mov
inc
add
fmull
push
xor
and
inc
outsl
in
icebp
mov
mov
sahf
push
jno
jo
push
cmp
push
popa
shl
pop
rcrl
std
stos
loop
jmp
ret
lret
fmull
jb
out
lock
test
enter
std
push
xchg
xchg
shr
mov
xchg
test
xchg
roll
repnz
sbb
fstpl
xchg
and
cltd
int3
cli
mov
nop
rorl
mov
or
clc
push
push
enter
mov
push
insl
lret
rolb
loop
sti
mov
test
in
push
cmp
mov
data16
adc
xor
and
sbb
iret
mov
dec
sbb
mov
fwait
ja
inc
mov
ficoms
fmull
js
push
aas
out
ret
inc
xchg
cmp
xchg
outsl
push
jno
mul
jecxz
int
icebp
push
cmp
aaa
sub
inc
pusha
rcrl
dec
mov
imul
fcmovnb
dec
stc
jo
js
mov
jl
jle
sahf
push
shlb
lahf
addr16
or
jnp
aas
gs
push
pop
inc
pop
add
push
out
sub
stc
push
outsb
xor
cltd
mov
or
es
in
stos
cltd
pop
pop
pop
and
es
aad
test
movsl
fmuls
dec
push
jp
movsb
pop
mov
divl
leave
ret
mov
loopne
push
dec
iret
cmp
pop
cli
in
movsb
inc
xchg
imul
xor
cmpsl
or
popf
in
jne
sbb
mov
xor
sub
rcl
push
rolb
cmc
or
inc
dec
sti
test
xor
jo
pop
fildll
shll
cmp
cmp
imul
xor
outsb
xchg
push
and
lods
or
mov
push
jmp
push
mov
dec
cld
out
pop
xor
scas
or
insb
stos
enter
xor
sbb
mov
add
mov
sub
xlat
outsl
adc
movsl
mov
aas
xchg
movsl
out
push
sub
sub
xchg
and
xchg
imul
fs
cli
sar
sub
xchg
xchg
jnp
or
add
getsec
arpl
jne
shll
push
incl
scas
xchg
scas
rcrl
data16
stc
xchg
cmp
push
sbb
js
push
adc
lcall
loop
enter
or
add
cmp
push
lret
sti
inc
push
dec
fsubl
addb
lea
test
stos
outsl
pop
leave
test
mov
inc
sub
es
mov
xlat
cmpsl
sbb
aas
mov
mov
inc
cmc
lahf
lret
out
sti
adc
mov
xchg
and
adc
inc
lods
gs
inc
sarb
inc
xchg
fmull
clc
hlt
pop
stos
push
jecxz
adc
je
push
lret
sbb
sbb
xor
loop
pushf
sahf
xor
aas
mov
inc
push
frstor
xchg
mov
xchg
or
and
enter
jne
push
lret
jb
xor
sub
ja
mov
or
add
xchg
sbb
dec
clc
sub
jecxz
je
cmpb
sbb
cmp
xchg
mov
inc
aad
mov
inc
out
mov
lea
imul
jo
cli
cli
loope
push
dec
add
or
pop
leave
push
sub
inc
faddp
out
mov
movsl
pop
push
outsb
cmc
loopne
repz
add
jne
popf
add
cmp
add
loop
adc
sbb
jl
cld
fmul
push
shlb
in
decl
loope
jecxz
dec
fadds
inc
sub
popf
xchg
mov
hlt
pop
xor
xchg
rep
mov
dec
add
sbb
push
adc
push
scas
dec
out
test
xor
mov
sbb
push
je
inc
out
int
xchg
push
push
pop
fwait
loop
pop
sti
cli
mov
add
jle
repz
inc
popa
scas
test
or
jp
ret
pop
test
or
shrl
mov
leave
fsubrs
data16
sbb
cmpsb
mov
add
mov
jge
mov
mull
add
pop
into
xlat
jg
pop
out
jbe
ss
vphadduwd
ljmp
sub
cmpsl
pop
in
jmp
ret
sbb
push
loop
mov
repnz
dec
and
int
jg
jg
cli
jb
int3
stos
jb
sub
into
adc
mov
pusha
and
mov
scas
int
cmp
xlat
mov
pop
dec
mov
iret
dec
pushf
push
fisttpl
pop
push
aaa
orb
aaa
mov
popf
hlt
sbb
add
sub
mov
stc
mov
mov
jns
cmpsb
ret
mov
xchg
stos
mov
inc
add
lock
scas
cmp
test
inc
scas
fidivs
lea
inc
subl
mov
jge
add
pop
cmp
mov
rcrb
icebp
mov
pop
push
and
dec
fisubs
sub
push
and
sti
sti
and
xchg
sub
jp
and
jns
add
or
in
sub
dec
cmpsl
jo
int3
mov
test
xor
sbb
xor
ljmp
subl
fwait
xchg
or
mov
push
adc
dec
jmp
cli
jl
clc
int3
lods
repz
icebp
mov
rcrb
cmpsl
out
xor
enter
cs
xchg
pop
pop
test
push
popa
fidivrl
mov
cltd
jae
xchg
hlt
and
inc
sub
rorb
or
mov
xchg
and
xchg
push
aas
cmp
mov
pop
cltd
dec
push
fistpl
push
and
loope
sub
push
inc
bnd
mov
insb
lret
and
pop
aad
xchg
mov
jge
outsb
popa
xor
xchg
xchg
pop
xor
pusha
or
scas
fwait
scas
or
lods
sub
imul
mov
mov
mov
gs
inc
in
or
add
aaa
jecxz
in
xlat
xor
cmp
outsb
add
jb
test
pusha
or
ljmp
and
adc
and
div
jecxz
sahf
jecxz
fistps
lcall
bound
loop
bound
mov
inc
mov
xor
sahf
mov
shl
adcb
xor
scas
lahf
js
cmc
mov
icebp
stc
pop
das
insl
je
dec
lcall
sbb
in
mov
inc
xchg
movsb
leave
lret
ss
cmc
xchg
inc
call
jne
cmpsb
dec
ljmp
xchg
cmp
dec
in
adc
std
mov
xor
dec
rorb
dec
out
fwait
xor
testb
jmp
sbb
fstpt
cmc
sbb
cmp
repz
iret
mov
xchg
xchg
fidivrl
cmpsb
dec
call
inc
es
push
sub
fsubr
adc
sbb
repnz
out
cs
xlat
mov
mov
enter
mov
mov
and
std
xor
clc
pusha
std
addr16
aaa
call
int3
mov
ljmp
int
jnp
mov
jb
sbb
push
and
push
aaa
cmc
mov
inc
outsb
stos
mov
rcll
daa
and
adc
and
insl
sbb
not
and
adc
push
rclb
es
and
ret
mov
jae
cmp
in
std
mov
inc
and
cs
pushf
loopne
xchg
inc
cmpsl
dec
jb
cli
sbb
in
inc
cmp
jns,pn
not
addl
or
cli
mov
lds
sub
or
sbb
mov
test
pop
push
rcl
fsubrp
rorb
cli
add
add
xchg
enter
add
cmp
jb
xchg
outsl
movsb
cmp
and
xor
loope
ficomps
add
jbe
pop
and
mov
xchg
aas
sub
std
lods
loop
and
pop
jo
lcall
call
bswap
scas
pushf
jp
or
imul
fldl
mov
mov
mov
int
jb
xchg
jnp
nop
mov
ds
sbb
adc
inc
mov
divl
jns
imul
xor
lea
insl
jbe
or
sti
hlt
insb
iret
pop
inc
es
add
fcomp
push
push
dec
adc
scas
lcall
jp
mov
adcl
jl
mov
lret
in
out
cmpsl
stc
repnz
out
mov
lods
ds
or
jl
fidivrl
nop
lret
mov
jle
inc
aaa
jae
and
pusha
xchg
shrb
sarb
dec
test
inc
push
fwait
out
xchg
pop
iret
mov
cmc
sbb
push
out
mov
out
lods
nop
jbe
aaa
fwait
push
repz
mov
inc
sbb
fdiv
outsl
jno
inc
xlat
fnstsw
mul
mov
aas
sbb
push
adc
dec
addr16
dec
add
sti
push
insb
mov
lods
mov
mov
aas
mov
ficomps
cld
cmp
lea
ret
xchg
xchg
inc
ds
sahf
lcall
push
lahf
dec
imul
xchg
lea
shl
xor
js
mov
leave
sub
jbe
or
arpl
adc
test
cwtl
scas
xlat
aaa
in
adc
fsubrs
xchg
insb
inc
data16
or
xor
sub
mov
inc
jne
push
and
lods
jns
out
outsl
call
daa
dec
in
cmp
sahf
sub
je
ljmp
push
pop
loope
movsb
pop
repnz
xchg
mov
test
xchg
mov
and
data16
jecxz
mov
mov
dec
xor
sub
jno
mov
lock
test
lods
jg
cmp
popa
insb
xchg
sub
scas
div
aam
clc
ss
nop
inc
outsb
out
pusha
scas
push
push
call
shll
pop
hlt
jecxz
in
mov
in
loopne
clc
in
adc
pop
popf
inc
jns
movhps
out
hlt
xchg
xor
jne
ja
push
dec
sub
mov
or
shlb
pop
add
es
mov
daa
xchg
dec
outsl
mov
or
dec
or
xor
outsl
lret
orl
adc
or
cs
jg
push
xor
fildl
dec
mov
mov
mov
dec
jne
pop
dec
popa
inc
enter
js
inc
mov
and
jo
into
ret
clc
into
mov
sub
sahf
in
cld
roll
mov
sbb
mov
sbb
xor
aam
in
aam
fwait
out
fs
hlt
in
pop
xchg
pop
fadd
xor
loope
pop
mov
rcrl
xchg
add
mov
ds
loope
out
mov
jecxz
ss
cmp
pusha
xchg
mov
jnp
mov
out
repnz
inc
out
in
push
adc
cmp
out
into
test
push
mov
stos
cli
sub
stc
dec
push
es
aas
cmpsl
aas
in
jmp
bnd
lods
fmuls
mov
and
xchg
jmp
jle
pand
xor
call
dec
or
xor
in
cmp
sbb
test
scas
or
stc
stos
add
outsb
rcl
adc
jmp
out
xchg
ret
movsb
popl
ds
lea
out
and
lret
and
idivb
sub
sahf
inc
mov
aas
jl
and
scas
add
mov
and
stos
out
add
lock
orl
lods
rcl
jg
sbb
imul
push
dec
mov
les
mov
insb
lret
pop
es
fs
mov
jo
int
sbb
push
fdivp
xchg
xchg
add
data16
sbb
mov
pop
stos
xor
lahf
jl
dec
xor
rorl
out
js
popa
in
into
fsubrl
mov
loopne
mov
pop
leave
mov
in
gs
icebp
lea
jo
dec
sub
int3
ret
push
cmp
inc
orb
add
or
pop
stos
mov
aas
in
sbb
repz
mulb
or
jg
icebp
adc
test
fiaddl
lds
or
rcrl
or
shlb
cmpsb
dec
sbb
push
mov
stos
pop
test
xchg
push
xchg
cmpsb
push
es
mov
jp
dec
sarl
int
push
jecxz
pop
mov
stos
mov
test
cltd
cmp
add
orb
repz
push
clc
ret
mov
outsb
xor
lods
push
jecxz
and
lds
aas
rclb
adc
out
mov
push
clc
mov
loop
pushf
sub
pop
mov
inc
gs
rorb
orl
arpl
mov
xchg
fsubrl
loope
icebp
pop
push
cmp
mov
idivb
adc
add
insb
sub
mov
out
mull
adc
and
jge
adc
outsl
andb
sbb
rcrl
movsl
jecxz
test
addl
lret
insl
int
adc
dec
xchg
push
pop
jo
adc
and
and
inc
xchg
mov
sarb
ret
mov
jl
outsb
sbb
xchg
pop
punpckldq
pop
jne
std
rorb
adcl
inc
mov
pop
pop
add
dec
pusha
pop
xor
inc
fildll
outsl
insl
inc
dec
pop
pusha
pop
insl
mov
es
out
mov
mov
mov
sub
loopne
sbb
xor
inc
push
sbbb
fistps
jl
cwtl
cmc
push
vphaddbd
movsb
add
fcmovnbe
jg
dec
pop
push
xchg
cmp
adc
cmpsl
mov
sub
test
push
xchg
int
aad
xchg
aam
ficoml
jnp
mov
cli
jne
jmp
int3
rcll
dec
fistpl
rorb
cmp
mov
push
and
inc
and
add
jge
lret
jge
xchg
popf
xor
inc
es
cmp
mov
test
les
test
xchg
nop
ficoml
ljmp
jecxz
jo
out
mov
ljmp
iret
mov
or
xchg
mov
addr16
fldcw
push
subb
mov
std
mov
and
pushf
mov
lock
push
fisttpl
cmpsl
mov
outsb
jecxz
mov
das
dec
or
pop
and
imul
pop
gs
sub
pop
nop
mov
fstl
push
fisttps
mov
mov
sub
rcr
jecxz
inc
mov
mov
adc
jecxz
insb
and
lock
xchg
jp
imul
lods
mov
cli
xchg
gs
jae
push
int
mov
and
mov
stos
icebp
mov
cltd
xchg
outsb
push
std
xchg
cltd
mov
cmp
dec
movsl
lods
or
roll
mov
mov
out
pop
out
es
and
xchg
adc
mov
decl
out
rep
pop
into
fidivrl
test
adc
push
daa
add
lock
xlat
subb
jo
shr
sbb
ja
das
add
jmp
mov
add
inc
nop
ret
orl
lock
and
add
cmc
lock
into
xchg
push
sahf
jl
outsl
cltd
iret
ss
les
movsb
push
out
imul
xor
mov
push
mov
xchg
mov
dec
adc
roll
cmpsb
push
cmp
icebp
mov
mov
mov
arpl
mov
fs
loop
add
imul
add
daa
pop
xchg
xorl
out
int
push
and
mov
les
out
aad
xor
popf
sbb
push
mov
jge
inc
rolb
fisubl
dec
pmulhuw
loope
rcr
jge
sub
mov
into
xchg
push
add
sub
sbb
and
jne
dec
std
xor
or
loopne
sti
rol
shr
fdivrs
cwtl
cmpl
jb
pmulhuw
pop
fdiv
jg
mov
popa
dec
pop
sbb
aas
dec
sbb
in
pop
test
popa
add
or
and
mov
push
lds
int3
mov
aaa
and
xchg
inc
data16
mov
or
mov
pop
outsb
lcall
and
cmp
xor
ret
es
scas
mov
inc
test
dec
cs
mov
out
jmp
faddl
adc
add
insb
getsec
iret
inc
push
inc
mov
mov
movsb
jno
mov
imul
loopne
leave
dec
icebp
mov
sbb
adc
sbb
insl
mov
and
fs
fs
jno
lods
inc
js
mov
pop
ret
mov
pop
pop
sbb
xor
jmp
test
jo
imul
test
dec
jae
nop
rcrb
popa
rep
inc
stos
repnz
filds
fsts
lret
mov
cs
sbb
pushf
insb
mov
clc
pop
insl
xlat
jno
shlb
dec
pop
cmc
cs
inc
inc
jo
sub
das
iret
icebp
sub
icebp
aaa
push
cs
and
inc
mov
lcall
popa
dec
jmp
in
push
xlat
jl
mov
in
mov
dec
xchg
ja
mov
pop
fsubs
cwtl
xchg
sbb
xchg
adc
mov
data16
ret
jle
sub
aam
jg
sahf
push
in
pop
sub
mov
cmp
push
ds
xor
add
mov
pop
nop
sbb
ret
out
pop
fxch
ret
orb
pop
cltd
sbbl
adc
cwtl
negl
xchg
pop
out
jge
jne
or
mull
inc
outsb
leave
pop
cmp
add
mov
xorl
add
dec
clc
mov
or
pop
in
loopne
inc
mov
jne
jg
test
std
ret
lea
fwait
jo
rorl
sbb
push
pushf
inc
and
cmpsb
mov
lahf
scas
mov
movsl
mov
jo
add
es
dec
xor
cmp
dec
jmp
sbb
mov
dec
sub
jns
pop
jne
std
xchg
push
ret
lds
or
jo
aad
adc
mov
adc
fisttpl
adc
mov
fwait
dec
push
mov
pop
xor
xchg
add
inc
and
lds
iret
lret
stos
test
add
out
jg
es
or
insb
mov
ja
fcmove
int3
dec
jmp
cmp
mov
mov
aaa
push
fs
push
xor
lcall
ljmp
les
sub
test
jecxz
es
outsl
pop
out
push
mov
jge
jp
add
xlat
push
dec
cli
xchg
pusha
inc
dec
dec
je
ds
mov
imul
mov
cmp
cmp
dec
test
sbb
pop
daa
clc
cmp
sbb
bound
addr16
cmp
and
aaa
push
xchg
mov
ja
in
imulb
sbb
lret
in
push
dec
pop
repz
push
jae
push
push
cmp
lock
fisttps
xor
jo
testl
dec
and
lret
jmp
stos
push
addl
stc
iret
or
leave
stc
pop
js
stos
repz
jecxz
loopne
mov
mov
test
shll
shrb
enter
push
sbb
scas
or
fiaddl
fildll
nop
mov
add
rorb
sti
cmp
cmp
fldl
pop
pop
out
rcrb
cld
orl
test
jl
adc
mov
cmp
mov
divb
lods
sbb
ret
sbb
lods
into
test
mov
sarl
enter
or
sbb
inc
icebp
mov
into
pop
mov
xchg
dec
sbb
orb
pusha
mov
ljmp
dec
push
ljmp
xchg
xchg
movsb
dec
mov
adc
cli
sub
add
xchg
push
arpl
mov
outsb
scas
or
sarb
pop
jne
mov
push
mov
push
cli
sti
mov
mov
xchg
cwtl
jp
ret
mov
sub
lods
scas
shrb
xor
inc
nop
mov
jnp
adc
inc
lods
lods
testb
in
sub
mov
mov
je
lds
imul
and
popa
mov
sub
pop
sub
mov
outsl
or
inc
adc
cmp
decl
test
add
mov
push
lods
testl
stos
push
xor
cmp
mov
push
adc
xor
cmc
push
hlt
xchg
lds
jmp
xchg
inc
popa
lock
repz
inc
iret
dec
cld
outsb
pop
stos
out
mov
cmp
outsl
push
mov
push
std
leave
aad
or
xchg
push
lock
push
fstpt
adc
iret
push
mov
pusha
aas
pushf
loop
sub
and
out
cltd
sbb
hlt
dec
add
adc
sub
and
jp
test
xchg
mov
shrl
jmp
ljmp
int
jns
jae
loopne
fdivp
add
inc
aaa
addl
movsl
mov
in
push
int
sbb
movsl
mov
cs
xchg
call
fsubs
aam
xor
mov
xor
cmpsl
push
ja
fwait
push
adc
popf
fwait
sub
cmp
in
cmpsl
jns
lcall
insl
or
jne
ret
pop
jns
jmp
xchg
addr16
xchg
mov
pop
stos
add
hlt
mov
stc
jae
fimull
clc
sti
push
xorl
mov
fisubl
popa
mov
js
fistl
out
inc
nop
icebp
sbb
or
inc
lds
std
lcall
and
mov
or
and
dec
cld
clc
leave
mov
ja
imul
add
iret
imull
enter
inc
mov
ret
fisubrs
lcall
aam
jg
dec
pusha
cmc
ret
sub
dec
mov
and
out
test
decl
das
rorb
xor
push
mov
data16
out
aad
fnstenv
push
or
jp
dec
jns
or
sbb
or
add
icebp
sub
sbb
pop
xchg
inc
or
mov
xor
gs
test
or
xor
lcall
fdivr
daa
and
jns
jne
das
xor
mov
mov
clc
lods
daa
cs
pop
xchg
xor
enter
test
mov
add
std
mov
sbb
frstpm(287
dec
data16
mov
stc
mov
adc
fcoms
push
jmp
mov
xchg
jecxz
xor
stos
fcmovnbe
mov
shll
testl
xchg
jmp
rorl
negb
mov
shll
mov
mov
fcmovne
test
pop
arpl
inc
mov
mov
iret
in
mov
jl
stos
add
enter
cmpsl
fistpll
insl
daa
lock
jne
mov
mov
adc
outsl
or
mov
stos
lret
fdivp
and
popf
fisttps
cmpl
cmp
orl
xchg
add
sub
sbb
clc
test
jl
inc
cmp
pop
bound
es
leave
js
sarb
sub
jno
mov
imul
mov
inc
and
push
and
or
mov
fs
in
mov
mov
jecxz
pop
jmp
fxch
pop
lods
lea
xor
pop
mov
mov
xchg
and
or
popf
add
aad
ds
sbb
pop
loop
lea
adc
lea
in
into
jl
std
mov
std
aad
mov
enter
loopne
jl
or
or
pop
push
push
fstp
and
lahf
adc
mov
inc
mov
mov
lret
add
jne
mov
repz
dec
and
scas
or
out
pop
lds
xchg
push
aad
push
cmp
or
adc
mov
sub
fisttpl
inc
insl
popf
mov
jp
insl
adc
in
mov
stc
push
lcall
mov
cmpsb
and
enter
dec
imull
jmp
or
mov
pusha
andl
xlat
mov
repz
jge
sub
popa
rolb
int3
cmp
and
mov
popa
jns
xchg
out
loopne
sub
mov
lret
stos
cs
adc
loopne
mov
aam
in
xor
jecxz
cmp
jle
dec
adc
rclb
and
bound
out
mov
repnz
inc
cmp
xor
pushf
subl
pop
xor
fnclex
gs
push
flds
fcmovnb
mov
mov
dec
adc
fdivl
fildl
pop
xor
mov
sysenter
dec
xor
clc
jae
js
xor
push
or
shlb
in
ljmp
push
sti
push
and
fcomps
adc
adc
pop
pop
or
dec
jne
pop
sahf
mov
mov
movsb
lahf
pop
push
aad
ljmp
stos
xchg
test
mov
aas
xor
mov
xor
jns
mov
fwait
stos
push
mov
push
outsl
mov
add
cmpsl
add
movl
out
mov
outsb
into
cltd
push
int
cli
sub
stc
movsl
insl
pop
mov
nop
mov
add
lret
inc
jo
fsubrp
jns
cmp
push
fcomps
push
mov
iret
movsl
pop
rorb
cli
cld
std
cmp
shl
test
sbb
mov
cwtl
add
push
nop
outsl
cmp
cwtl
scas
movsb
cmovb
shll
mov
ja
mov
pop
push
rclb
add
stos
outsl
mov
sbb
aad
xor
aaa
incb
xchg
inc
add
xlat
loope
pop
addr16
hlt
pop
pusha
pop
jb
out
cwtl
es
rcll
dec
clc
pop
push
inc
mov
dec
cmpsb
lret
or
cli
fsubrl
jb
jnp
mov
mov
test
arpl
push
shlb
push
cltd
add
lods
mov
dec
popa
inc
adc
xchg
sub
pop
arpl
punpckhwd
in
xor
lcall
and
fwait
in
into
dec
lret
dec
aaa
lret
sbb
mov
popf
test
sbb
push
ja
cmpl
js
ret
sahf
mov
lods
add
int3
jae
movsl
dec
mov
xor
cmpsl
or
fwait
pushf
sub
popa
mov
add
pop
sbb
fs
sub
out
push
pop
mov
or
mov
inc
mov
jge
lea
in
lret
aad
cmp
push
popw
xchg
adc
lahf
jns
mov
mov
iret
in
push
pop
inc
les
inc
mov
sub
cmp
insl
pop
loope
loop
cwtl
pop
xchg
stos
xchg
adc
cmc
scas
or
inc
inc
mov
and
loope
cwtl
adc
or
loop
push
sbb
cli
sub
test
or
or
out
rcr
aam
int3
jo
clc
sbb
in
flds
xchg
xor
sub
mov
cmp
jne
pushaw
test
pop
pop
or
push
sbbl
lret
scas
rol
inc
mov
bound
inc
inc
mov
mov
lock
sbb
sahf
mov
jge
std
push
push
mov
les
mov
push
bndstx
sub
pop
jns
jl
addr16
pop
mov
xor
add
es
sahf
push
fbld
dec
pop
xchg
mov
adc
insl
xor
iret
scas
jb
sarb
cmp
out
cld
add
pop
mov
and
pop
dec
fs
jno
inc
sub
sub
subl
push
sub
dec
outsb
mov
jl
out
mov
into
negl
cmp
movsb
mov
fxam
jg
add
bound
lret
out
and
push
stos
clc
sub
jno
mov
adc
jge
lcall
pop
pushf
push
jmp
jno
jmp
mov
mov
xchg
orl
lahf
stos
hlt
ss
xor
stc
mov
rcrl
adc
mov
sub
lcall
mov
bound
mov
ret
enter
insl
test
cld
test
or
in
fldcw
inc
mov
jb
pushf
or
bound
mov
iret
rolb
cwtl
data16
add
pop
scas
sub
cmp
in
push
cmc
mov
xchg
imul
aam
int
dec
add
push
lock
inc
mov
lods
mov
pushf
mov
mov
fnstenv
lds
ret
mov
push
fistpl
lret
fcomps
stos
mov
dec
daa
scas
mov
dec
inc
movsl
repz
mov
push
mov
push
pop
sbbb
insb
mov
popf
mov
jo
addl
pop
std
nop
rol
mov
xchg
call
xchg
mov
ja
mov
sbb
pop
mov
mov
xchg
js
xchg
mov
sti
sbb
repnz
fnstenv
sarb
stos
fisttpl
daa
rcll
pop
or
sbb
dec
out
adc
lods
lods
mov
faddl
and
push
insb
push
pusha
lret
xchg
out
cmpsl
sub
dec
xor
testl
dec
aas
jmp
fidivl
sub
xchg
pop
hlt
dec
mov
leave
xor
or
adc
fimuls
lcall
lret
sbb
sbb
btr
or
jnp
jb
cmpsb
addb
cmp
mov
imul
mov
nop
pop
dec
shr
sahf
sarb
sub
adc
jns
sbb
addr16
mov
loope
iret
in
lcall
int
dec
cs
dec
push
xchg
mov
xchg
scas
add
and
movsb
int3
in
xor
in
js
repz
push
pop
sub
divb
pop
push
sub
xchg
ret
gs
jle
cmpsl
and
fstl
or
cli
xor
mov
pushf
icebp
out
or
push
mov
call
mov
sub
pop
dec
loop
sub
inc
es
enter
pop
in
and
das
arpl
push
add
cmp
inc
loopne
mov
ja
mov
rolb
cmpsb
iret
xchg
outsl
repnz
jns
nop
push
iret
das
addr16
push
inc
int
loopne
cmp
mov
loopne
lock
out
sbb
jo
pusha
lcall
mov
mov
mov
nop
out
nop
cmp
in
mov
dec
std
rcrb
push
mov
sarl
mov
xorb
xlat
jne
xchg
ljmp
mov
call
jg
lock
adc
mov
fbld
and
loopne
push
mov
arpl
into
push
lahf
lods
push
cmp
cmc
out
push
inc
aaa
mov
cmp
adc
les
pop
jae
xor
movsl
pushf
push
jb
add
jnp
test
inc
fisubrl
test
inc
iret
sbb
shll
mov
xchg
sbb
aam
pop
jnp
sub
enter
pusha
std
test
inc
hlt
dec
adc
adc
push
pop
pop
push
fmul
aad
adc
and
mov
or
mov
cmovl
mov
stos
rcl
dec
pop
dec
sbbl
and
rcrb
mov
pusha
lahf
movsb
int
mov
lea
dec
shrl
call
xchg
fwait
mov
dec
mov
mov
testl
aaa
add
andb
and
push
stos
xor
sahf
mov
sub
cmpsl
mov
leave
in
pop
mov
lret
jnp
adc
sub
mov
mov
icebp
xchg
out
cmp
pop
das
jbe
fidivl
je
dec
in
dec
pop
into
adc
rorl
cltd
and
std
push
pop
mov
in
lahf
stos
cltd
test
mov
jmp
outsw
xorb
jae
xchg
adc
stos
imul
lret
nop
xchg
push
lock
sub
or
jecxz
je
clc
mov
sbb
and
stos
xor
cmp
xor
lods
sbbl
out
mov
enter
cmp
inc
or
repz
movsl
scas
stos
mov
lahf
sub
enter
bound
push
mov
in
lods
add
mov
sbb
push
or
mov
or
sbb
lahf
in
das
sbb
mov
mov
xchg
mov
adc
mov
mov
push
add
popa
mov
jmp
enter
inc
into
shlb
pop
psrlq
dec
out
cmp
fistpl
into
pop
test
loop
and
aad
sbb
push
push
cmpl
icebp
aam
ucomiss
and
mov
sarb
push
pop
in
cmp
mov
popa
add
mov
mov
std
jg
mov
int
jl
and
jecxz
jne
mov
mov
mov
loopne
dec
gs
cmp
and
pop
rcl
test
push
sahf
fimull
cmc
push
pop
add
out
sub
cs
ffree
dec
loop
mov
dec
mov
pop
xchg
inc
sbb
test
out
xor
orb
jge
aam
bound
inc
cmp
push
es
cld
adc
mov
dec
cltd
push
adc
sarb
xlat
cmp
adc
push
test
inc
push
mov
sbb
rcl
push
sub
mov
adc
jmp
jg
sbb
push
insb
sub
cmc
lcall
mov
daa
lea
cmp
std
sbb
mov
mov
popf
inc
jnp
mov
cwtl
dec
ljmp
aas
scas
int
cmp
or
dec
ds
push
out
ja
aas
or
cmp
and
jmp
sub
add
sub
adc
cmpsl
sub
inc
xor
pop
ret
out
jl
mov
mov
ret
mulb
cmp
lahf
mov
iret
jmp
and
fisubrs
push
scas
mov
cwtl
and
mov
pop
cmp
sub
xchg
repz
loopne
mov
add
pop
and
in
dec
fwait
in
scas
mov
lock
imul
dec
mov
and
sub
push
insl
mov
test
ret
cmp
cmp
inc
jmp
add
jmp
in
xor
or
incl
lret
mov
in
dec
aaa
mov
ds
inc
pusha
pop
scas
push
jns
sahf
sub
dec
adc
or
fdivs
add
lods
or
mov
sub
push
orb
addr16
aaa
xor
jb
pop
mov
mov
xor
stos
and
adc
or
adc
movsb
xor
push
fucomp
sub
jge
arpl
cmc
mov
sbb
rorb
push
cmp
cmp
add
push
xor
sbb
fisubl
out
jae
adc
push
and
push
data16
add
jg
in
fsubrl
inc
cmp
dec
mov
mov
mov
jo
mov
andb
mov
dec
cmp
push
aas
scas
jg
iret
ja
fldcw
fsubs
jl
call
jns
pop
pushf
push
popl
fsubr
jnp
xchg
inc
cmp
pop
std
scas
fistl
neg
insl
loop
lcall
add
inc
dec
sub
cltd
rcrb
stos
adc
sbb
cmp
js
aam
enter
test
pop
imul
sbb
dec
test
insb
fwait
jne
sbb
fldenv
sbb
pop
cmpsl
mov
bound
jne
add
shl
subl
and
mov
inc
in
cmc
mov
dec
adc
lea
shll
idiv
cmp
inc
xor
sbb
outsl
jmp
pop
sbb
mov
sub
lea
mov
gs
stos
stos
mov
sbb
repz
shl
popf
cli
fidivs
jge
cmp
bt
pop
aad
pop
adc
in
subb
xchg
jne
xor
mov
jno
inc
jmp
dec
push
je
push
and
sarl
aaa
testl
fdivrl
mov
arpl
lods
les
fldl
loopne
mov
dec
pushf
and
pusha
out
and
and
dec
jae
cmp
and
inc
popf
sbb
nop
aaa
mov
and
dec
sub
int
cmp
ds
add
loopne
pop
sub
les
or
cmp
outsb
xor
in
imul
jp
xor
dec
testl
movsb
mov
adc
mov
outsb
and
pop
dec
fsubr
or
jo
mov
into
jae
mov
or
mov
flds
and
sub
push
or
xor
aad
pusha
cmp
int3
mov
pusha
mov
popf
inc
xchg
xchg
lahf
jns
sbb
out
sub
inc
pop
ja
mov
es
fidivrl
adc
clc
inc
push
ficoms
push
rcll
jmp
fwait
jmp
pop
mov
push
xor
mov
adc
aam
inc
repnz
inc
icebp
pop
bound
or
out
cmp
mov
cmp
push
arpl
ret
shl
or
movsl
insl
cli
sbb
dec
sub
cmp
cmp
xchg
sub
dec
mov
jo
dec
cs
adc
jg
scas
cmc
out
inc
pop
xchg
sub
std
mov
or
fnsave
aad
pop
xchg
test
xchg
data16
std
xchg
scas
clc
popa
dec
xchg
repnz
mov
sub
add
bnd
mov
aas
xor
add
int3
fistps
pop
jns
push
icebp
outsb
xchg
jne
daa
loopne
shrb
mov
mov
pusha
mov
or
out
mov
popf
jg
push
cmp
inc
fstl
in
jmp
adc
dec
in
push
mov
mov
sbb
mov
mov
inc
aam
adc
aad
pop
int
xchg
outsl
cltd
lret
repnz
jg
enter
fnstsw
inc
int3
mov
scas
jg
loop
or
add
cmpb
sar
push
cmp
inc
cmp
mov
shlb
pop
out
fstp
xchg
pop
rcll
cmp
mov
lahf
pop
aaa
and
jae
xlat
jp
add
mov
pop
dec
jecxz
or
mov
movsl
cmp
int3
mov
roll
dec
lds
mov
cmp
add
push
out
je
test
outsl
cmp
adc
lock
sbb
or
pop
test
and
movsb
insb
out
fdivrp
imul
ss
push
xchg
adc
int
cmpsl
gs
je
push
mov
cmpsl
rcrb
leave
mov
push
jmp
sub
sbb
inc
mov
mov
push
sbb
inc
jge
cmp
sub
bound
dec
sbb
sbbl
scas
aas
addr16
dec
jecxz
sub
xor
fdivl
push
sbb
inc
int3
stos
ficoml
icebp
jno
pop
insl
loope
out
imul
outsb
cmc
mov
jnp
adc
out
fidivl
sub
sbb
xor
jnp
or
mov
add
lcall
xchg
mov
jbe
xchg
rcr
and
das
add
add
sbb
push
mov
iret
xchg
mov
mov
sub
jge
fs
add
dec
dec
xchg
cmp
xor
push
or
pop
sahf
movsb
or
pop
aam
inc
lods
mov
mov
xchg
jbe
jge
test
add
jno
cli
inc
dec
xchg
das
andb
and
das
mov
xlat
adc
iret
in
out
and
push
adc
scas
push
popf
mov
and
repnz
out
jl
or
cmc
dec
sbb
outsl
xor
sbb
mov
cmp
jo
jns
jns
sub
outsl
cltd
lahf
mov
imul
andb
call
in
adc
add
es
lods
addr16
inc
or
dec
pop
test
mov
push
mov
or
test
outsl
xchg
mov
cmp
nop
das
jmp
mov
pusha
mov
test
pop
pusha
mov
lods
dec
pop
dec
add
xchg
dec
enter
or
adc
sahf
cmc
fadd
sub
inc
jb
pop
loope
mov
cmp
arpl
repz
in
sbb
ficompl
shlb
cmpsl
cmp
jp,pn
and
xchg
xchg
inc
push
lret
xor
aas
scas
cld
lods
rep
sti
xchg
stos
mov
pushf
cs
ss
rcr
push
popf
add
mov
inc
push
sbb
pushf
mov
jl
or
cmp
mov
cld
int
xchg
mov
xor
das
fiadds
std
pop
stos
lock
pop
cmpsl
lret
loope
jl
fistps
push
test
addr16
jmp
mov
lcall
ret
scas
les
test
arpl
mov
movsb
inc
xor
cmpsb
aas
cmp
mov
int
add
gs
sub
push
insb
and
jbe
sbb
out
add
dec
frstor
mov
cmp
and
mov
pop
mov
pushf
out
xchg
adcb
xchg
jge
inc
push
pop
jge
dec
and
push
pusha
sarb
je
in
mov
icebp
bound
cmp
sbb
xor
mov
add
and
inc
sti
push
jne
mov
stos
push
dec
aas
push
cmpsl
js
les
fdivrs
sub
and
sbb
xchg
out
es
pop
jecxz
enter
pop
and
call
cltd
lods
and
inc
push
ss
insb
das
clc
xchg
cmc
cmp
adc
and
aas
dec
add
rcrb
cld
dec
jae
inc
sub
ds
in
popa
push
xchg
sub
mov
pop
aas
aaa
and
scas
ret
lret
add
xchg
mov
stos
pop
cld
push
call
enter
pop
pop
push
lock
mov
mov
ljmp
add
call
mov
cmpsb
loopne
gs
sarl
shll
lock
cs
sbb
adc
adc
insb
leave
in
lock
es
xchg
xor
mov
dec
cmc
mov
adc
or
or
sbb
pushf
adc
imul
jnp
pop
cwtl
pop
mov
shlb
sbb
mul
enter
or
jo
push
mov
ficompl
cmpsb
loopne
adc
andb
sbb
add
rolb
fs
inc
loop
add
mov
enter
insb
je
es
or
cmp
mov
add
cmp
and
in
xor
and
add
int3
das
jb
sbb
lret
out
xor
push
add
mov
mov
fcmovnu
jne
ret
adc
jno
movsb
out
mov
lret
inc
test
push
jo
pop
mov
mov
add
out
mov
iret
inc
xor
and
fcmovb
xchg
mov
fisubl
mov
out
xchg
inc
scas
dec
jge
testb
fimuls
ror
lret
mov
or
and
mov
ja
por
sub
loopne
jl
sti
jp
cli
push
jnp
inc
xlat
aam
jmp
jbe
xchg
jo
inc
inc
ds
mov
xlat
dec
test
and
leave
xlat
and
lahf
test
jae
mov
jbe
mov
jmp
in
out
dec
add
daa
mov
daa
adc
icebp
jno
add
mov
leave
lock
jp
cmpsb
xorl
nop
lret
push
inc
loope
xchg
push
sub
jns
mov
repnz
dec
inc
jns
jae
sub
jbe
sub
mov
aas
stos
push
xor
fstps
adc
jp
mov
jge
dec
adcb
fiadds
mov
outsb
push
pop
sub
cmpsl
aaa
and
sub
jnp
push
inc
pusha
jecxz
movswl
or
addl
inc
out
movsb
pusha
add
pop
push
repnz
inc
pop
sbb
fsubp
and
push
dec
push
lahf
aaa
inc
sub
inc
mov
xchg
outsl
stos
push
stos
roll
mov
mov
call
dec
lods
dec
mov
jp
dec
lret
mov
add
and
lods
je
mov
popf
jge
leave
lret
stos
jmp
insb
xor
or
daa
imul
mulb
insl
loope
jno
outsl
ss
xchg
cmp
jge
rcll
iret
iret
test
aam
jle
jnp
mov
mov
test
imul
adc
lahf
les
shll
inc
sarl
mov
mov
cmp
xchg
cmc
adcl
push
xchg
jnp
btr
xchg
mov
dec
jo
ljmp
hlt
jo
jnp
dec
adc
pop
ficoms
hlt
ficompl
xor
stos
test
popa
inc
sbb
push
stos
test
and
inc
mov
jae
xchg
test
popfw
stos
pop
lea
pop
das
icebp
lcall
sti
lds
lock
xchg
es
dec
xor
call
rcrb
repnz
cltd
mov
bnd
cmpsl
movsl
in
insl
xchg
scas
shlb
pusha
ret
mov
and
adc
push
adc
out
mov
sub
sbb
sub
push
gs
fwait
xor
aam
pop
or
icebp
ja
cmpsl
popf
leave
xchg
xchg
les
mov
pop
sub
jmp
scas
push
imul
out
pop
pop
xchg
outsb
dec
push
popf
mov
shlb
test
adc
or
xlat
stc
pop
addl
xchg
lahf
ja
jle
call
js
lret
sbb
mov
sbb
ds
ss
dec
cmovg
lock
loope
mov
or
xchg
xchg
cmp
dec
mov
mov
or
loop
add
fidivrl
add
stos
cwtl
push
in
inc
int3
fs
lcall
cltd
mov
mov
ror
mov
pop
pop
jne
dec
dec
jl
sbb
mov
lods
dec
ja
adc
imul
pushf
lods
push
jle
lahf
pop
outsl
add
ss
jo
sti
in
xchg
popf
stos
dec
adc
gs
cmp
cmp
repz
mov
mov
push
aam
mov
sub
inc
jl
loop
lret
push
pushf
inc
fldlg2
outsb
xor
cmpsb
iret
pop
sub
jg
mov
insl
inc
stc
nop
jmp
add
mov
and
mov
ljmp
cmp
movb
enter
clc
data16
or
dec
cmpsl
push
mov
outsb
inc
pop
sub
lret
pusha
bound
inc
sub
inc
sbb
mov
iret
jmp
mov
loope
sbb
sbb
mov
fdivs
add
jecxz
add
leave
inc
dec
mov
outsb
ss
roll
shl
sbb
dec
mov
bound
addr16
cmc
fldt
and
cmpsl
push
sti
or
les
dec
pusha
pop
push
repz
fiaddl
mov
jb
in
jp
js
scas
sub
ja
xchg
dec
movsl
sub
jmp
lods
jecxz
push
imul
and
and
pop
cmpl
sbb
pop
pop
stos
jge
xchg
inc
fisubs
inc
sbb
insl
jbe
int3
les
ss
cltd
mov
popa
xor
dec
aas
adc
jae
cmp
mov
jno
fidivs
xchg
mov
inc
or
notl
push
pop
in
rcr
add
mov
inc
jo
mov
daa
and
mov
insb
aas
sub
mov
pop
popa
ljmp
movsl
xchg
inc
add
shl
inc
mov
nop
idivb
pop
xor
mov
and
nop
popf
adc
jo
loopne
test
bound
repnz
cmpsl
mov
cmpsb
push
mov
pop
sbb
out
rorl
stc
mov
ret
or
sub
daa
cs
dec
divb
xorb
push
in
adc
inc
mov
push
decl
scas
xor
xor
cmp
sub
test
jo
sbb
adc
negb
lock
adc
stc
fistps
mov
stc
mov
mov
shr
fs
decb
push
aaa
sub
in
mov
mov
cmp
dec
pop
and
push
push
in
fs
mov
dec
inc
mov
in
cmp
stos
push
cld
mov
std
and
out
cmpsl
lods
das
push
les
rorl
fwait
ljmp
fstpt
cs
dec
daa
sub
sbb
sbb
push
mov
ficoml
xor
iret
imul
pop
sbb
icebp
dec
xor
cli
xor
xor
and
sbb
js
inc
andl
xor
jmp
loop
lods
inc
cmp
mov
movsl
cli
out
fsubrs
loopne
inc
dec
xchg
ds
or
jne
out
pop
fwait
push
dec
adc
mov
sub
enter
repnz
lcall
push
xchg
adc
or
mov
lds
xor
and
popf
inc
jg
dec
push
and
mov
jl
sbb
sbb
or
xchg
xchg
cmpsl
cmpsl
imul
fistpl
mov
repz
jge
dec
loop
int3
cmp
xchg
test
ljmp
dec
mov
xor
or
loope
mov
pop
jl
pusha
icebp
pop
int3
jo
andb
je
adc
or
sti
adc
dec
inc
call
pop
call
pop
add
pusha
inc
xchg
rcl
ja
mov
arpl
mov
pop
and
das
testl
pop
ds
mov
add
mov
pop
pop
or
add
mov
cltd
or
xchg
out
addr16
mov
rcrb
fdivr
mov
jle
jbe
shrb
push
insb
mov
fcoms
sub
mov
orb
sarl
dec
and
cmp
adc
dec
cmp
mov
fwait
pop
mov
movsl
pop
push
bound
jg
dec
pop
cmp
loop
bound
addb
call
out
shll
xchg
ret
fdiv
push
xchg
inc
xorl
daa
jbe
xor
pop
in
dec
test
dec
pop
add
jmp
sbb
xchg
jmp
bswap
mov
leave
jmp
and
adc
ret
add
fs
iret
rolb
push
fwait
xchg
xchg
pusha
ret
movsb
mov
aad
imul
push
shrl
addr16
cmpsl
push
in
cli
mov
shll
andb
cld
cmp
mov
cltd
cmp
push
jge
ror
sub
sub
divl
mov
in
cltd
pop
pushf
and
into
loopne
aaa
dec
outsl
pusha
hlt
jle
or
jo
les
xor
aaa
iret
lret
add
imull
daa
mov
scas
mov
daa
mov
fnstcw
pop
push
xlat
xlat
scas
xor
and
adc
sbb
jbe
and
jbe
orl
push
insl
dec
mov
testl
cltd
lret
shl
iret
adc
adc
sub
sub
mov
and
sti
iret
out
jo
lcall
loope
push
xchg
sbb
xchg
sub
jmp
jecxz
aad
mov
mov
inc
sbb
mov
inc
aaa
imul
stos
dec
cs
xchg
test
or
orb
out
mov
xchg
pop
lahf
cmp
in
jl
clc
mov
cmp
sarl
outsb
popf
pop
jne
mov
mov
sub
push
in
popf
or
sbb
mov
inc
dec
stc
mov
das
push
adc
js
adc
cmp
in
adcb
push
data16
loop,pn
clc
jl
insb
push
push
je
pop
lds
imul
inc
cltd
fmull
fldenv
xchg
cmp
xchg
dec
jg
mov
cli
xor
rorl
cld
insl
sub
arpl
pop
jo
dec
fbstp
mov
jl
or
fcomip
cwtl
ljmp
hlt
or
fwait
out
jnp
sbb
scas
loope
jle
pushf
mov
js
cmp
cs
enter
mov
dec
ljmp
sub
lock
dec
insl
push
pop
xchg
mov
jmp
js
xchg
insb
aaa
movsb
cld
stos
cmp
cmp
jl
xor
adc
fbstp
fisttpl
cli
mov
jnp
mov
iret
hlt
es
ja
sub
dec
dec
out
cmpsb
in
sub
aam
sbb
sbb
push
mov
sub
mov
adc
dec
mov
lahf
lock
add
cmp
mov
inc
sbbl
push
nop
jl
mov
xorl
xchg
adc
ja
dec
pop
inc
fsts
pop
mov
sbb
hlt
push
es
and
test
xorl
into
xchg
lds
dec
xchg
lds
and
imul
ljmp
jecxz
ss
adc
fmull
add
and
add
xchg
xchg
and
sub
in
test
pop
ss
icebp
enter
jmp
lcall
fs
jbe
in
in
adc
push
mov
or
jo
test
or
pminsw
cmp
cs
data16
aaa
mov
push
lcall
sbb
xor
xor
insb
out
sbb
test
fsubrs
xchg
stos
add
aaa
icebp
scas
popa
add
xchg
jl
lea
popf
mov
xchg
dec
xor
sub
daa
pop
adc
cwtl
pushf
scas
aam
lret
xorl
xor
mov
adc
jl
hlt
ss
mov
inc
fadd
and
gs
ljmp
inc
dec
sarb
dec
xchg
pop
insl
sub
xchg
mov
dec
arpl
pusha
insb
ja
loopne
mov
sbb
adc
mov
dec
mov
into
xor
inc
pop
aas
repz
cmp
xor
sbb
inc
pop
lods
sub
jno
addr16
outsl
xchg
pop
jno
sbb
xor
sarl
faddl
push
adcb
xor
pop
add
adc
cmp
testb
bound
xor
pop
and
int3
movl
inc
xchg
push
mov
fstps
ja
xor
hlt
cltd
cmc
xor
inc
rcl
pop
lret
repz
fisubl
inc
jb
inc
ret
lcall
pop
lock
jmp
sub
daa
fistpll
push
mov
repnz
adc
jp
aad
outsl
cltd
mov
mov
test
dec
les
push
mov
cmp
jmp
ja
sub
stc
addr16
push
loop
sahf
pop
fistps
pop
lret
repz
jb
cmp
gs
cli
inc
fsubrs
mov
in
int3
inc
push
xchg
cmp
add
xor
jb
adc
mov
aas
xchg
adc
jg
fs
mov
dec
sub
cmp
xor
pop
sbb
mov
repz
mov
jmp
data16
ds
pop
call
cmp
push
aaa
pop
mov
push
sbb
pop
sti
shlb
enter
lret
pop
enter
and
scas
inc
and
rclb
pop
movsb
jle
ret
add
sbb
mov
cmpsl
ret
mov
inc
mov
adc
mov
addr16
into
out
inc
pop
in
pop
out
xor
mov
sub
adc
add
int
push
adc
sub
loop
repnz
in
and
inc
popa
lods
sub
sub
xchg
and
subl
dec
sahf
cmp
outsl
into
test
jae
adc
pushf
dec
push
jbe
fsubs
js
mov
loope,pn
pusha
sbb
in
cltd
rcrb
adc
lds
lock
test
cmpsl
repz
jb
cli
cwtl
pusha
jmp
pop
movsb
jnp
sbb
int3
cli
sti
in
sbb
mov
inc
and
pop
and
xor
out
and
push
bound
xor
test
iret
sub
or
shll
in
inc
cmp
mov
jb
das
sarb
clc
lahf
pop
add
mulb
aam
push
mov
fs
dec
inc
push
clc
hlt
cmp
addr16
outsb
ja
cli
clc
cmc
das
jecxz
mov
and
ljmp
mov
push
fsubr
fdivp
outsb
sahf
adc
in
jo
jbe
push
jb
mov
fbld
sbb
mov
push
cli
xor
into
and
addl
xchg
fwait
push
mov
and
lcall
dec
stc
inc
push
xor
testb
inc
dec
xchg
jns
test
and
fiadds
pop
jg
sub
mov
jmp
in
rol
fdivrl
f2xm1
adc
xchg
jne
xchg
pop
push
cmpsb
in
pushf
jbe
cmpsb
rolb
pop
out
add
inc
out
add
jg
pop
lock
jb
and
aaa
cmp
je
imul
loopne
out
inc
fwait
rorl
imul
aam
jl
negl
ss
int3
pop
mov
adc
cld
testl
aad
int3
in
fsubrs
ret
scas
out
lcall
sbb
adc
fcmovnu
enter
and
lret
rorb
and
inc
jge
aad
mov
xor
je
rcl
loop
cmp
rolb
inc
xor
or
mov
imul
mov
jne
xlat
daa
movsb
insl
scas
push
ds
sub
rcl
stc
cmc
mov
std
jb
pop
std
dec
mov
add
shlb
push
int3
jns
or
lret
dec
cwtl
aam
icebp
idiv
push
mov
add
into
or
ja
xchg
cld
imul
xchg
adc
lock
movsl
fcompl
test
add
addb
or
roll
cmpsl
jl
cmp
mov
loope
mov
sbb
dec
out
sbb
lods
ja
adc
adc
lret
mov
call
inc
rcl
cmp
add
and
and
ss
mov
cmp
inc
imul
push
mov
bound
inc
stos
sarb
movb
dec
mov
aas
fisubs
xchg
dec
xor
pop
imul
test
or
dec
fisttpll
int
push
repnz
cmp
rol
nop
jl
ss
inc
sbbl
sub
xchg
leave
and
clc
adc
out
in
pop
cltd
and
xchg
insb
movsb
or
and
shll
jle
ret
jp
decb
inc
add
pop
pop
and
jmp
or
addr16
outsl
mov
imul
ds
loope
sub
bound
sbb
cmp
subl
and
aas
mov
sbb
mov
cmpsl
mov
outsl
dec
clc
adc
inc
and
push
add
shr
sti
xor
aad
imul
fsub
jl
scas
cwtl
push
push
imull
rclb
subb
xchg
jmp
repnz
mov
int3
push
sbb
mov
and
push
xchg
add
dec
fcmovb
stc
mov
or
push
stc
idiv
push
push
jbe
and
xor
xor
push
out
je
lds
mov
js
xchg
xor
test
outsl
xchg
lods
cmp
sbb
push
aaa
shl
jg
and
call
out
mov
jecxz
xchg
loop
into
daa
addr16
cmp
imull
shl
pop
dec
aam
sahf
in
lcall
fsubr
push
cwtl
push
push
popa
pop
pop
fs
pop
repnz
stos
js
xchg
adc
sub
test
cwtl
sub
shlb
pop
cmpb
sub
jp
mov
repz
addr16
outsb
sub
pop
cmpsl
aaa
adc
mov
push
xor
insl
mov
adc
jge
in
adc
daa
popa
mov
xor
std
cmpsl
stos
lcall
fyl2x
std
adc
and
and
or
pusha
and
and
xlat
fadds
pusha
jb
xchg
sub
sbb
data16
or
cmpsb
clc
push
pop
idivb
in
fsts
pushf
ss
cwtl
xor
sbb
daa
sbb
mov
fisubrl
loope
in
pop
loop
inc
aam
out
sahf
loope
test
mov
fwait
mov
mov
out
pop
dec
data16
add
add
sbb
adc
jmp
push
mov
stos
mov
adc
add
mov
icebp
pop
stc
stos
jmp
pop
outsb
cltd
cmp
in
mov
sub
cmp
clc
les
push
adc
in
xchg
jl
mov
mov
xchg
lods
stc
adc
pop
mov
outsl
mov
out
enter
nop
addb
mov
push
sub
ret
movsb
dec
movsb
push
push
es
or
sub
adc
int3
xchg
pop
pop
inc
dec
push
push
push
xchg
icebp
sarb
loope
jb
aaa
sbb
leave
pop
leave
mov
inc
daa
xchg
pusha
push
and
cs
shrb
xor
movsl
lahf
jecxz
jecxz
mov
push
paddw
sbb
incl
sub
outsl
pop
enter
mov
cmpsl
and
jno
leave
and
stc
mov
sub
jge
fcoml
mov
stc
call
lret
and
std
mov
loopne
fcoms
insb
call
push
inc
dec
lret
or
inc
insl
pop
lea
push
pushf
mov
sub
jnp
gs
add
inc
movsl
dec
int3
das
cmp
mov
mov
xchg
insl
in
pop
push
add
pop
jbe
adc
push
scas
or
jbe
sub
or
xchg
mov
std
pop
mov
lret
xchg
mov
mov
sbb
mov
movsl
and
dec
sbb
add
jno
cmpsl
jnp
xor
icebp
xchg
popa
push
aaa
lret
jnp
xorl
jmp
or
dec
jmp
cmp
mov
mov
lods
adc
icebp
adc
mov
mov
jae
cmc
in
pop
cmp
jg
movb
or
jl
xchg
xchg
hlt
push
xchg
jp
sub
sbb
ja
sti
lret
in
data16
call
cmp
inc
sarl
insl
add
in
pushl
pop
dec
jl
pop
pop
out
outsb
pop
rcll
cmp
loope
pop
inc
xchg
or
pop
mov
lock
cld
cmp
fidivrl
std
loope
pop
push
pop
mov
fdivs
sbb
mov
push
sbb
lods
in
xor
mov
inc
inc
pop
cs
lock
out
adc
push
mov
iret
cmp
inc
les
lods
dec
andl
cmpl
mov
mov
icebp
addr16
into
xor
xor
cmp
fsub
mov
filds
sub
jl
mov
or
rclb
sahf
sub
mov
icebp
pushf
gs
scas
in
rcrb
dec
pop
lea
scas
fildll
xchg
sub
sub
shll
jg
pop
cmp
inc
push
add
sahf
jae
clc
xor
ffree
enter
pushf
push
movsl
push
std
imul
ret
fcom
dec
add
push
scas
or
bound
loopne
fwait
xchg
cltd
shlb
pop
sahf
mov
sbb
cmp
cmp
cmp
cmp
pushl
shr
flds
outsb
leave
lea
cmc
aas
mov
or
mov
jge
sti
loop
fwait
call
sub
mov
dec
adc
adc
sbb
fs
icebp
add
pop
jmp
sub
cmp
mov
icebp
cmpsb
pop
in
xlat
mov
inc
jge
loope
daa
sti
enter
sub
mov
sub
imul
enter
xchg
jge
pop
push
sbb
movsl
es
adc
lods
lret
mov
fcmovb
outsb
mov
dec
pop
movsl
cmpsl
and
ds
dec
jecxz
pop
shlb
add
test
scas
test
push
xchg
pop
loopne
push
mov
fbstp
xor
aam
hlt
dec
xchg
pop
icebp
adc
cmp
ja
pop
jnp
out
addr16
ficomps
cmc
mov
add
inc
lea
cmp
or
es
pop
xchg
add
push
mov
add
lea
shlb
jo
sbb
push
mov
in
rcll
mov
cmpsl
sub
das
and
pop
gs
ss
in
xor
sub
std
pushf
lret
xchg
xor
dec
mov
stos
push
xchg
into
adc
test
add
test
inc
mov
test
pop
xchg
xchg
in
les
sub
imul
pop
sbb
js
rclb
pop
pop
mov
push
je
xchg
pop
cmp
xlat
add
or
rorb
push
mov
add
fwait
adc
push
xor
dec
add
lock
lock
jge
xlat
ret
in
loope
fistl
dec
jae
mov
push
sub
ss
outsb
xchg
leave
push
mov
nop
sub
jl
std
testb
sarl
arpl
add
aad
dec
adc
push
mov
aam
stos
push
fstl
adc
shr
sarb
push
or
sub
jp
popf
jecxz
and
jo
sub
dec
ss
cmp
sbb
add
aam
mull
sbb
xchg
and
mov
popa
testl
jp
push
sti
push
roll
mov
pop
jp
jg
dec
sbb
mov
pop
sbb
test
movsl
aaa
jp
xor
adc
inc
loope
fildl
jp
push
outsb
jge
add
pcmpeqb
cmp
into
xchg
ss
repnz
cmp
and
fmuls
ja
xchg
jno
shll
push
mov
xchg
nop
ja
scas
push
jnp
xorl
cmp
pop
pop
dec
cmpsb
inc
push
add
pop
subb
push
sub
fcompl
stc
stos
pusha
or
xor
push
adc
lret
bound
out
push
dec
sub
mov
xor
mov
mov
in
cmp
add
jg
xor
mov
cmp
push
push
mov
dec
push
popf
popf
subb
and
add
pop
push
nop
leave
pop
fisttps
outsb
stos
lods
push
inc
sahf
cmp
fistpl
pushf
out
adc
fsubr
stos
xchg
cli
inc
xor
gs
cmc
sti
fmull
in
jge
ss
ja
out
lcall
dec
es
bnd
pand
add
pop
call
adc
jae
pop
add
loopne
imul
lods
push
js
lock
pop
pop
sub
add
leave
aad
or
lods
loopne
mov
dec
and
xlat
test
ja
mov
sub
loope
push
xchg
jno
jg
cmc
not
push
adc
clc
adc
sbb
push
sub
sbb
sti
dec
xor
add
hlt
pop
dec
push
lea
loop
mov
lret
push
inc
je
repz
push
push
outsb
xchg
fucomip
adcl
iret
mov
push
adc
push
dec
jne
sbb
jns
pop
dec
cmp
clc
inc
repnz
jne
dec
fbld
js
lods
andl
pop
nop
and
or
mov
lret
mov
cmp
add
fsubrs
imul
mov
mov
pushf
mov
leave
mov
sbb
xchg
mov
sbb
idivb
ret
xchg
fidivrs
lret
addl
hlt
mov
dec
xchg
push
dec
xchg
je
push
sbb
pop
pop
xor
inc
les
cld
cmp
int3
insb
icebp
dec
sub
mov
pop
ret
mov
add
jb
ror
sbb
sbb
push
leave
adc
mov
fidivrl
mov
mov
out
icebp
inc
insb
xor
mov
jge,pt
inc
sub
imul
scas
loope
adc
xor
int3
jge
ljmp
cwtl
es
imul
popf
lock
test
sub
pop
cli
fwait
shrl
cld
add
mov
aad
pop
and
insb
fs
fs
or
dec
xor
cmp
inc
mov
insb
inc
inc
outsb
cmp
in
jb
mull
inc
insb
dec
mov
mov
cli
imul
adc
repz
aaa
cmpl
mov
cmp
jb
popa
les
dec
or
test
fisttps
pop
push
sbb
insl
and
popf
sbb
dec
scas
dec
pusha
sbb
push
mov
cmp
daa
les
into
adc
xchg
sahf
out
pop
cmp
ljmp
sar
jae
xchg
sahf
rcl
cwtl
mov
scas
pop
lods
mov
mov
out
cwtl
cltd
xchg
xor
or
pop
xchg
testl
scas
scas
inc
cmp
mov
jo
fldln2
or
pop
inc
test
cli
adc
and
dec
aas
or
fbld
dec
xlat
aad
cmp
hlt
and
lret
mov
mov
sbb
xchg
cltd
xchg
sti
inc
stos
shll
mov
and
fwait
mov
sbb
pop
pusha
xchg
in
or
icebp
mov
xchg
lea
mov
add
leave
jl
cli
movsb
out
ficoml
jge
adc
xorb
in
jae
pop
lcall
aad
mov
jg
jno
lret
aaa
or
jecxz
xchg
adc
mov
outsl
jge
ret
xor
dec
daa
lret
addr16
jo
subb
hlt
mov
dec
xchg
iret
mov
cmp
call
stos
inc
mov
and
das
and
hlt
lcall
add
inc
leave
popf
adc
lret
jae
pop
or
jnp
ror
test
pop
cmp
mov
lret
ja
fsts
movsl
dec
fmulp
stos
lods
sub
les
shlb
int
pushl
sub
inc
ljmp
jb
ja
sub
in
cltd
inc
sahf
cmp
sbb
outsb
push
xchg
push
jmp
addr16
repz
sbbb
inc
daa
out
iret
xchg
dec
sarl
das
push
push
dec
ljmp
or
daa
sbb
cmp
repnz
jns
mov
shrl
icebp
mov
das
xchg
das
pop
push
jae
pusha
leave
movsb
xor
or
test
fcoml
inc
out
fdivs
xchg
or
test
aam
inc
aaa
or
int
mov
dec
in
sub
jno
icebp
mov
xchg
add
jge
inc
cmc
mov
fsubs
ror
std
outsl
and
sub
mov
fcmovu
outsb
dec
add
cs
adc
outsl
xchg
addr16
sbb
int3
or
clc
aam
paddd
xchg
or
cmp
in
push
cmp
jnp
sbbl
rcr
pop
mov
lds
into
push
pop
dec
addr16
or
add
mov
push
and
pusha
in
lea
testl
popf
loope
outsb
mov
mov
or
lcall
outsb
push
dec
mov
fwait
imul
pop
sbb
adc
addr16
test
jns
mov
movl
fisttpll
fldenv
aas
push
mov
mov
loop
movsb
movsb
jns
inc
and
push
jmp
lret
mov
loopne
pop
sbb
dec
xlat
mov
and
xchg
fnsave
loop
pushf
adc
mov
fistl
rcrb
mov
das
xchg
fldt
mov
repz
xchg
xchg
cmp
cmp
jle
mov
jb
cmpsl
cli
and
cs
fisubl
adc
repnz
jmp
stc
inc
cld
shrl
xlat
clc
mov
xchg
aas
in
out
gs
jns
iret
dec
fs
hlt
dec
ja
adc
jge
push
fstl
hlt
adc
lods
or
call
dec
push
pop
jae
xchg
mov
lret
lahf
sub
shll
inc
popf
js
mov
mov
outsb
mov
dec
mov
add
jae
lret
jmp
popf
or
cli
rorl
scas
cwtl
ret
das
mov
pushf
test
push
std
or
adcb
je
jl
lock
in
lea
xor
ret
and
xchg
lods
sbb
in
mov
test
mov
jge
xlat
cmp
dec
mov
scas
sti
xchg
dec
cwtl
adc
dec
xchg
das
ret
mov
sbb
xchg
mov
xchg
jg
pushf
lret
js
cmp
push
xchg
fs
adc
mov
je
cmpsb
mov
push
ljmp
das
rclb
dec
stc
cwtl
repz
push
sbb
xor
push
cld
cwtl
push
xchg
and
xor
cmpb
adc
adc
call
ficoml
shrb
popa
or
cmpsl
push
cmc
sarl
loope
gs
xor
add
jecxz
xchg
fs
aaa
or
jmp
dec
or
mov
inc
push
cmp
ljmp
mov
dec
fmuls
and
lcall
gs
popf
or
bound
lret
scas
push
std
jge
jbe
stos
insl
iret
inc
inc
rcl
jge
fisttpl
imul
dec
lcall
fisubrs
cmp
fisubs
sbb
fimuls
mov
xchg
xchg
inc
mov
lds
xor
fsubr
push
dec
or
push
xchg
pop
pop
cmp
xor
dec
aad
arpl
imul
inc
mov
jge
cli
jnp
sbb
pop
push
or
xchg
push
mov
je
clc
add
push
pusha
outsl
jg
fiaddl
pop
push
xor
shrl
and
pextrw
or
aas
data16
xchg
mov
push
mov
push
adc
fs
or
ret
jbe
jnp
out
inc
pusha
fwait
cmp
pop
cmp
rol
std
and
dec
aam
into
inc
fdivrs
xor
add
xor
les
add
xor
add
ljmp
cmp
lock
sub
sub
or
out
inc
fwait
imul
lret
insb
jle
xor
push
sbb
aad
pop
adc
cmp
lods
cwtl
cmp
sqrtps
pop
rorl
scas
xor
out
sbb
lea
aas
dec
or
adc
jle
stos
cmp
lcall
rcl
cmpsl
lret
sbb
mov
stos
andl
mov
into
pop
push
or
movl
jbe
sbb
adc
out
fwait
in
sahf
enter
pop
and
icebp
add
fiadds
push
or
lods
popa
negl
mov
lcall
cwtl
sbb
iret
mov
mov
loope
out
insb
fsubrp
xchg
mov
loopne
ss
sub
lods
or
aad
stos
mov
mov
leave
or
lret
cmp
fwait
loop
jl
mov
xchg
mov
xlat
pop
idivb
mov
sub
mov
lahf
pop
lods
jo
or
scas
push
adc
subl
pop
sub
xchg
or
sub
sarb
das
mov
mov
fcoms
dec
mov
stos
inc
lcall
push
jnp
push
pop
jbe
incb
pushf
fldcw
test
pop
add
xchg
adc
shll
out
stos
jmp
xchg
movsb
fldt
ljmp
fcoms
push
lods
xor
sti
sub
hlt
mov
rcrl
into
adc
and
dec
jbe
ja
pusha
pop
xchg
sub
shll
mov
mov
fisubrl
and
dec
out
les
xor
sub
or
add
xchg
mov
push
mov
imul
pop
outsl
push
rorl
jno
in
out
out
pop
call
xchg
inc
mov
bound
out
push
and
mov
stc
std
xchg
pop
repz
sbb
pop
push
xchg
xchg
stc
jbe
ror
gs
outsb
mov
adc
insb
scas
mov
cmp
mov
iret
mov
mov
mov
mov
lahf
inc
mov
adc
cmp
cs
pop
iret
mov
sub
ds
jo
lcall
outsb
std
sub
or
mov
fists
rcrb
jns
mov
jecxz
orl
dec
sbb
add
pop
in
inc
sti
icebp
aaa
shld
mov
lret
xor
in
in
sub
sbb
jbe
add
or
adc
mov
sub
fimull
fs
lods
cmp
xchg
hlt
inc
std
inc
add
jae
sbbb
mov
jb
out
rorl
push
leave
cmc
sub
dec
daa
xor
add
insb
hlt
sub
and
jbe
fidivs
lret
inc
jae
fsubl
lods
sub
jns
xchg
jae
mov
cld
cs
sub
jmp
mov
das
inc
leave
cli
outsb
pop
and
mov
inc
or
dec
adc
inc
call
mov
ret
shll
fld1
mov
mov
dec
push
add
dec
jecxz
outsl
fldl
mov
cmc
mov
mov
cs
aam
pop
pop
sbb
dec
add
sbb
mov
repz
or
icebp
ds
out
in
andl
shll
fidivs
and
js
cwtl
pop
ficoms
or
jge
aas
and
aam
enter
jecxz
rol
jmp
sub
inc
sub
jge
mov
xchg
mov
dec
push
hlt
mov
loope
inc
add
push
push
popa
add
lret
dec
jp
repz
call
pop
pop
xchg
mov
call
jmp
mov
rolb
push
cmpsl
cmp
mov
sti
jno
test
sbb
ss
adc
xchg
jl
mov
popa
inc
add
jecxz
fdivs
lods
test
and
xchg
lcall
jns
sbb
jne
adc
aam
jmp
roll
xlat
in
mov
pop
dec
in
jge
rorl
sbb
sub
inc
pop
pop
xchg
dec
fadd
sbb
sbbl
push
popa
in
movsl
leave
xchg
inc
pushf
mov
sahf
repz
or
cmp
mov
enter
mov
pop
movsb
xchg
xchg
and
sub
push
loope
xchg
mov
mov
hlt
dec
enter
das
cmpb
fisttpll
test
repz
xchg
ss
jl
push
sbb
rcl
or
int3
sbb
push
stos
push
roll
ja
fistps
loope
adc
mov
jno
repnz
lss
xchg
pop
das
xchg
sti
sbb
roll
es
out
xchg
dec
clc
aad
dec
pusha
add
xor
fldcw
mov
cli
jns
and
inc
in
arpl
push
mov
mov
xlat
aas
sub
rolb
hlt
js
add
cld
push
les
and
std
lods
filds
rol
jae
dec
inc
ja
loopne
cwtl
xchg
lret
aam
sub
int3
insl
mov
js
inc
cli
jle
lret
sub
xor
pop
pop
movsl
inc
rolb
mov
pop
and
adc
mov
es
das
dec
repz
jp
in
fldcw
lret
out
push
add
pop
std
dec
xchg
iret
mov
jae,pn
dec
push
movb
scas
xchg
inc
bound
mov
add
ja
mov
out
push
push
aad
es
addr16
stc
and
mov
test
icebp
cltd
jl
inc
fnstcw
xor
cs
cmp
jecxz
mov
in
jge
xor
sbbb
jge
mov
repz
in
push
fsts
lcall
jmp
mov
stc
sub
scas
bound
aad
iret
std
mov
dec
dec
push
filds
inc
sub
push
add
push
adc
cs
negl
xchg
leave
stos
mov
sti
into
xor
inc
orb
sub
je
pop
test
push
aas
psrlw
jl
dec
jne
mov
aam
mov
jg
ret
arpl
dec
sbb
push
dec
ljmp
aad
push
xchg
xor
mov
loop
loope
movsl
daa
push
in
into
push
ror
outsb
sbb
loope
fidivs
or
pop
mov
movsl
nop
mov
jb
cld
add
push
lods
mov
cmp
test
push
xchg
adc
ljmp
rorb
mov
mov
rcrb
xchg
shlb
add
dec
outsb
out
sub
movsl
pop
fwait
xor
xchg
sbb
dec
mov
movsb
mov
ja
out
jecxz,pn
cmp
or
cli
mul
mov
test
mov
stos
ficoms
loop
lret
push
out
das
add
scas
lods
adc
push
sub
cmp
lcall
sub
popa
mov
jp
lock
jns
sub
rcrl
dec
adc
inc
jb
iret
shl
fdivl
cmpsb
fcmovbe
dec
aas
xor
imul
arpl
loope
fldl
fmul
shlb
int
xorb
jno
in
xchg
or
mov
dec
fidivl
fwait
adc
push
push
cli
jecxz
adc
lcall
mov
ret
inc
mov
or
sar
js
lock
adc
adc
or
cmc
lock
imul
addl
cltd
enter
push
push
sbb
inc
addr16
mov
jno
arpl
push
adc
cmc
in
inc
mov
mov
pop
orb
push
jo
push
lock
mov
stc
jg
xor
fistps
cltd
jge
mov
std
and
icebp
scas
cmp
imul
stos
negl
mov
inc
push
push
inc
push
rcrb
ja
les
pop
push
dec
jns
mov
mov
push
mov
fsubr
int3
push
jb
and
lret
sbbb
xchg
leave
dec
sbb
fbstp
jb
pop
xchg
lahf
std
sub
jae
sub
mov
push
xor
and
and
xor
xor
pusha
rcr
adc
jae
lds
fwait
scas
and
stos
adc
adc
push
mov
js
dec
inc
ret
je
rclb
stc
mov
cmp
enter
mov
inc
in
sub
mov
dec
lahf
mov
pop
pop
mov
and
cmp
adc
iret
inc
inc
vaddsubps
dec
out
icebp
mov
pop
pushf
inc
jmp
mov
and
repnz
jbe
mov
lret
push
mov
dec
mov
mov
movsb
cwtl
iret
pop
test
cld
mov
mov
xchg
popf
xchg
sub
sbbb
ss
stos
xor
int3
lods
scas
and
and
push
jns
stos
jg
mov
sub
popf
mov
nop
fsubl
in
or
mov
fstpt
cmc
pop
or
cs
xchg
cmp
and
ds
bound
fwait
lcall
xorl
push
or
stc
mov
mov
xchg
in
fists
ficoml
out
jge
movsb
mov
cmp
lods
dec
movsl
fadds
je
push
jg
sbb
scas
xor
inc
loop
xchg
pop
cmc
je
call
jnp
mov
add
in
int
xchg
adc
inc
mov
and
inc
aam
adc
pop
fists
or
sbbl
mov
rol
imul
insl
ljmp
es
mov
mov
adc
or
rolb
fsubl
shl
lock
jno
lahf
sbb
out
sahf
in
inc
imul
xlat
dec
or
fs
leave
sub
cmp
leave
push
leave
call
imul
dec
aad
sahf
xchg
pop
push
or
out
inc
xor
push
loopne
jo
sub
pushf
sti
fs
inc
or
mov
in
cwtl
mov
push
lods
test
add
pop
pop
and
dec
sbb
sbb
arpl
into
sub
cmpsl
lds
out
xchg
test
inc
ljmp
fcompl
lret
cmpsb
lods
mov
add
mov
push
or
scas
jle
cmpsl
in
ret
or
movsb
dec
mov
arpl
jne
mov
cwtl
outsb
in
inc
xchg
xchg
or
and
mov
adc
pop
lods
push
cs
mov
in
popf
mov
out
in
ret
mov
fdivrs
lcall
pop
cld
dec
mov
pop
mov
add
pop
les
ss
add
jno
dec
jle
loopne
int
loope
adc
into
shrl
leave
les
jo
push
cmp
xchg
jo
pop
jecxz
in
jl
jbe
inc
push
lods
sti
test
fisttpll
mov
out
adc
in
ret
inc
movsb
sub
cmc
jmp
xchg
dec
push
or
jnp
mov
ja
xchg
xchg
lds
cmp
ficomps
push
sub
add
dec
inc
inc
adc
sbb
xor
mov
shr
mov
stos
add
fdiv
jle
adc
cmp
jo
clc
jae
ret
inc
xor
ss
pusha
xor
icebp
cmp
cmc
push
mov
popa
or
ds
inc
xchg
mov
mov
clc
inc
sahf
pusha
pop
stos
adc
mov
xchg
in
mov
or
xchg
jnp
sbbl
mov
orl
pop
movsb
cs
lahf
mov
in
jg
dec
inc
add
push
cmc
rcll
push
mov
pop
aad
push
cmp
jnp
lahf
pop
mov
leave
pusha
or
hlt
push
sbb
sbb
xchg
cmc
pop
aad
iret
jge
pop
jg
movsb
add
lcall
int
aam
cltd
aam
push
add
xor
pop
loop
into
rcrl
cmp
movsb
adc
sti
xchg
stc
stos
or
mov
inc
jle
icebp
add
jnp
jg
cwtl
scas
sbb
inc
cmpsl
mov
cmc
sahf
adc
sub
pop
clc
insl
cmp
fisubrl
repz
pop
dec
inc
cmp
jns
jecxz
fisttpll
dec
insb
repz
fldl
sbb
mov
jnp
jne
and
mov
fdivs
loope
enter
cwtl
mov
dec
je
cwtl
std
movsb
mov
pushf
inc
sbb
xorl
cli
test
or
int3
andl
push
loop
mov
loop
pop
nop
sub
ss
call
and
inc
cwtl
ret
aad
gs
inc
cli
xor
xor
data16
xlat
in
push
pusha
jnp
mull
bound
je
inc
inc
sbb
divl
js
fsubrl
sub
xor
xor
push
mov
into
scas
pop
or
test
movsb
push
aad
mov
mov
xor
xlat
sub
mov
jnp
sbb
into
cmpsl
ds
cmpsb
cltd
push
cmpsb
or
insb
adc
imul
cld
bnd
sbb
idivl
lret
dec
adc
nop
mov
cmp
leave
add
pop
pop
stos
fincstp
xchg
enter
shr
cmp
jns
fdiv
ret
push
pusha
xor
icebp
imul
enter
scas
ja
negl
pushf
movsl
xchg
and
xor
push
mov
fldl2t
mov
cmp
mov
mov
cld
test
stos
outsl
stc
addr16
xchg
pop
es
arpl
jp
push
jp
cmp
scas
push
push
aas
subl
xchg
ret
repz
lret
push
sbb
jle
sbbl
or
gs
push
movl
bswap
and
mov
push
notb
hlt
dec
rcl
xor
or
adc
imul
movsb
push
je
inc
mov
ret
xchg
pop
fcmovnu
movsl
push
lahf
sbbl
imul
lret
jge
arpl
nop
mov
movsl
add
outsb
inc
sahf
test
add
loope
xchg
push
sahf
out
push
inc
int3
pop
test
aaa
fisubs
xorb
loopne
clc
cmp
xchg
cs
jb
push
leave
dec
mov
mov
aas
cli
xor
popa
sub
push
xchg
das
push
jmp
jns
inc
and
aas
or
add
xor
pop
fcomps
mov
push
clc
push
out
popa
cwtl
or
sub
push
nop
mov
out
and
movsl
and
scas
ror
test
push
cmp
jae
jb
pop
add
test
add
addr16
push
js
sub
xchg
fidivrl
lcall
inc
dec
and
ffree
push
pushl
aad
addr16
push
jge
stos
jno
pop
fwait
out
repz
iret
int3
mov
int3
xchg
neg
call
pusha
xchg
jecxz
mov
mov
sbb
punpckhdq
lret
fs
sub
pop
jge
pop
adc
pop
inc
add
xchg
sub
and
jge
jbe
jb
jp
aam
mov
dec
push
scas
pushl
xchg
sbb
adc
mov
jp
adc
mov
sub
fdivrs
lea
push
sbb
add
dec
rcll
insb
aaa
shll
cmp
es
and
or
jl
imul
jg
push
push
shll
pop
adc
in
jo
sbb
push
mov
lret
out
shrl
lds
xchg
inc
divl
in
into
adc
fidivrl
or
inc
aam
roll
test
lds
loop
jecxz
push
je
xchg
aam
psubw
negl
inc
cmc
push
jae
push
lahf
inc
cld
push
push
ljmp
ret
mov
mov
int3
cwtl
leave
and
jecxz
xor
or
fcmovu
test
lret
hlt
push
sub
je
adc
ret
and
bound
imul
out
add
loopne
adc
aam
adc
shlb
mov
in
pop
or
and
pop
jb
xchg
shrb
in
sbb
xor
sbb
fwait
add
lods
or
sub
lds
cmp
repz
inc
ljmp
jno
test
cmp
fdivl
inc
or
jb
sbb
pop
inc
push
mov
enter
repnz
or
mov
bound
xchg
shl
jbe
add
push
rcll
inc
movsl
xchg
enter
lea
in
push
sub
adc
fimull
mov
inc
dec
and
xchg
sbb
xchg
pushf
pop
xlat
sub
xchg
mov
imul
loope
or
sbb
mov
inc
out
leave
and
xchg
lcall
add
or
mov
aaa
dec
mov
push
jge
jno
jmp
jbe
add
testb
jb
sti
dec
jle
xchg
sbb
adc
scas
lcall
sub
jns
sub
xor
add
pop
test
rcll
push
js
mov
mov
adc
cld
daa
jne
out
or
popa
jmp
arpl
xor
or
xorl
and
lahf
mov
add
cmp
adc
mov
loop
add
push
xlat
fldenv
fisttpl
clc
fisubl
adc
inc
scas
jnp
pop
stos
sti
scas
loop
jb
jle
add
aad
xchg
xchg
push
mov
cmp
xor
addl
sbb
xchg
sbb
or
lahf
push
int3
mov
xor
sbb
xchg
pop
sub
xchg
scas
dec
sbb
jge
inc
inc
lcall
cmpb
and
sbb
and
in
add
loopne
loope
inc
dec
jge
jge
push
or
jmp
fldl
push
or
scas
mov
repz
fidivl
cli
in
and
pop
sbb
rcrl
xlat
add
pop
popf
push
arpl
push
cmpsb
and
sbbb
movsb
push
js
lds
popa
imul
ret
adc
sbb
stos
stc
fistl
out
scas
aas
test
jmp
loopne
sbb
sub
pop
and
pop
or
mov
jb
fwait
xlat
dec
mov
js
or
push
sbb
lods
adc
sbb
pop
push
inc
rcrb
test
dec
loop
scas
inc
mov
xor
add
mov
inc
dec
rcr
leave
pusha
cmpsl
sub
sbb
sbb
sbb
lahf
mov
in
clc
out
inc
pop
ss
sub
aad
push
push
jg
mov
xor
add
sbb
add
es
stc
push
inc
ret
dec
outsb
mov
xchg
mov
or
mov
dec
dec
push
sbb
push
repz
mov
push
mov
lret
inc
out
mov
pop
lea
imul
xor
jl
pop
iret
je
imul
push
dec
testb
aad
dec
fnstsw
sti
lock
xchg
mov
bound
mov
jecxz
jne
sbb
adc
lcall
xchg
lcall
dec
cs
xorl
jo
push
jnp
xchg
inc
test
jnp
xlat
orb
addl
lods
jmp
int
loope
jbe
addb
shll
enter
int3
push
scas
sbb
jnp
pop
jmp
push
lods
mov
cmpsb
or
insb
sub
add
mov
out
lahf
mov
jno
ficoml
pop
pop
test
sti
add
aam
mov
cli
cwtl
sub
xchg
fdivrl
and
cmp
lea
cwtl
sub
pop
xor
std
mov
cmp
addr16
lret
lahf
sbb
push
adc
sub
stos
in
push
mov
push
stc
mov
dec
lret
and
xor
jbe
loopne
lds
pop
pushf
push
scas
mov
pop
sub
shrl
fldcw
jl
adc
dec
idivl
roll
pop
mov
xchg
out
pop
or
cmp
push
pop
out
lods
mov
jmp
push
pop
cmp
and
cmp
mov
jnp
sub
popa
enter
jae
push
into
sub
insb
mov
adc
push
sub
push
mov
push
rcr
in
addl
mov
push
dec
mov
or
shl
dec
aam
hlt
mov
cmp
and
xchg
xor
les
leave
xlat
mov
clc
inc
fdiv
cmp
loop
lods
pop
out
cmp
inc
pop
jmp
xchg
addr16
jecxz
ficoml
mov
out
imul
pop
push
int3
mov
push
inc
outsl
pop
out
mov
xchg
aaa
dec
cld
cmpsb
mov
xchg
sub
das
mov
jg
daa
push
outsl
pop
in
mov
into
sub
lahf
mov
pop
sarb
push
adc
sti
int3
bound
adc
jecxz
in
mov
pushf
mov
add
pop
or
cmp
sahf
xlat
popf
jns
cmp
xor
jb
xchg
add
or
pop
push
testb
dec
lock
stos
push
rcrb
ljmp
mull
daa
xchg
aad
push
or
sbb
inc
ja
enter
les
jb
lret
insl
mov
test
lods
lods
push
xor
push
sti
add
inc
jns
ss
adc
push
add
inc
inc
rcl
insl
xlat
fldenv
xchg
pusha
mov
fidivrl
sub
pop
sub
andb
aam
mov
push
and
inc
cmc
arpl
int
cld
cs
add
jmp
imul
inc
mov
imul
clc
es
xlat
pop
in
cmc
and
dec
add
lret
mov
mov
and
mov
lods
aas
repz
adc
dec
mov
xor
ficoms
pop
jge,pn
testl
repnz
jmp
xor
add
xchg
add
scas
out
sub
into
mov
jle
adc
xor
fnstenv
pop
inc
push
test
test
repz
fs
js
popa
sbb
adc
pop
fdivrs
cmp
mov
mov
in
movsl
adc
push
add
lret
testb
in
jg
pop
and
out
dec
and
xchg
cmp
pop
dec
imul
push
hlt
insl
test
sub
inc
adc
mov
in
jbe
sbb
imul
sbb
cmpl
pushl
lahf
sub
aam
aaa
or
jnp
add
movsl
pop
addr16
in
loop
stos
pop
adc
push
mov
scas
push
mov
xor
popf
xor
mov
outsb
add
out
or
shr
loopne
lock
add
or
pop
xchg
xor
out
jno
and
outsl
and
dec
xor
mov
dec
std
sub
mov
fnsave
lret
mov
mov
add
mov
mov
xor
movl
lods
addr16
test
pop
inc
push
das
add
push
mov
mov
or
and
pop
jecxz
adc
lret
movsl
insb
andb
xlat
mul
mov
mov
add
les
adc
aam
dec
bound
clc
dec
fnstsw
cmp
mov
int3
jne
mov
dec
or
jp
push
xchg
lahf
push
lahf
or
scas
repz
stos
jge
dec
pop
mov
vminpd
aas
cwtl
and
jb
vxorps
stc
fcmove
cwtl
stc
out
mov
mov
loope
and
incl
cmp
nop
lds
roll
xor
stos
int
xchg
addl
add
test
arpl
jns
xchg
or
dec
repz
out
push
nop
scas
aaa
or
cltd
lods
and
cwtl
cmpl
lret
and
jbe
es
fcomps
push
and
jo
jl
test
adc
add
dec
pop
add
mov
hlt
in
sbb
ret
add
jne
dec
outsb
lock
sub
test
ss
or
cmp
xchg
mov
xor
ret
jge
out
cs
movsb
sahf
dec
mov
mov
lock
xor
xor
xchg
out
bnd
push
stc
add
cmp
je
aad
mov
repz
or
inc
cltd
dec
lahf
aaa
mov
test
xor
inc
daa
push
cmp
cltd
xchg
cmp
outsb
pop
aam
add
sbb
xor
push
adc
dec
jg
loope
add
and
into
cmc
sti
roll
jmp
pop
ret
in
jbe
sbb
adc
fstpl
push
xchg
pop
fidivrl
adc
pop
adc
imul
int3
sbb
sbb
imul
lret
loope
inc
add
cmp
clc
sbb
jle
mov
aaa
daa
shlb
outsb
lds
cmp
xor
cmp
aas
xor
mov
fs
stc
imul
fsubs
ja
mov
sub
lret
cltd
and
jl
xchg
push
inc
pop
cmp
in
add
pop
frstor
mov
lcall
sbb
mov
lret
mov
popf
stos
add
je
lods
rorb
xor
out
pop
jge
out
cmp
cwtl
inc
jbe
jecxz
ret
mov
mov
mov
lods
lahf
stos
adc
push
mov
roll
fcmovu
aam
adc
popw
add
jecxz
pop
outsl
les
stos
lds
cwtl
repz
add
add
lods
xchg
push
jg
push
repz
ljmp
cmp
std
ret
jge
xor
mov
pushf
dec
dec
aam
jne
pop
cmpsl
data16
inc
sbb
test
jb
lock
mov
add
xchg
pop
add
cwtl
stos
sbb
sub
sub
addr16
cs
mov
aam
mov
insl
fisttps
scas
mov
and
jo
pushf
sub
addr16
mov
pop
dec
adc
repz
mov
push
dec
or
hlt
cmp
inc
adc
insb
insb
ds
lret
push
push
jp
dec
xchg
inc
adcl
lcall
test
mov
in
add
lcall
xchg
add
xlat
xor
cmp
xor
sbb
movb
dec
xchg
out
idivb
ficoms
sbb
or
jb
fmull
adc
sub
mov
in
jbe
mov
jmp
arpl
in
js
fcmovne
xchg
inc
lahf
rcrl
jg
push
xchg
lds
inc
fsts
repz
pop
mov
inc
jmp
cmp
aas
or
sbb
sub
fmul
in
shr
out
lods
dec
call
gs
jne
sbb
test
add
or
sbb
cld
mov
lods
outsl
subb
mov
dec
fstpl
cwtl
sbb
jmp
scas
test
inc
scas
mov
pop
push
push
dec
sub
xchg
jne
cwtl
test
js
lds
test
pop
sub
repnz
fiadds
xchg
pop
cmpsl
adc
xchg
test
clc
dec
mov
scas
sub
mov
iret
sarb
mov
push
xor
jmp
sbb
or
sub
outsl
jo
push
dec
inc
jmp
cs
pusha
test
cmpsl
dec
leave
pop
push
cmp
and
sbb
mov
and
aas
xchg
test
xchg
add
or
mov
mov
xor
adc
je
in
or
ret
jmp
mov
lea
inc
mov
or
lds
imul
mov
cmp
fsubs
jo
inc
add
mov
or
jno
add
cmc
scas
pop
xchg
mov
inc
fsubl
lcall
imul
mov
sbb
push
pop
or
rcl
dec
or
push
adc
pop
and
fldl
jae
in
arpl
or
int3
cmp
jmp
jle
js
cli
lea
xchg
cmp
out
clc
pop
rcll
mov
jae
lds
mov
fwait
mov
xchg
xor
xchg
scas
adc
push
notb
pushf
push
or
test
ds
bound
repz
push
rcrl
imul
mov
xchg
fstl
in
xlat
leave
add
test
dec
lds
push
jne
inc
popf
popa
fnsave
jg
adc
xchg
insl
sbb
addl
adc
pop
jge
iret
mov
out
jb
or
aaa
xor
lods
scas
scas
jns
fmulp
jb
iret
sub
rcrb
or
push
cmp
pop
scas
loope
in
lcall
mov
inc
mov
push
lods
rorb
icebp
aaa
jl
sub
jae
mov
cmp
pop
fmull
and
sbb
pushl
aam
adc
pop
jbe
pop
pop
xchg
adc
dec
cmc
mov
fldenv
cmpsb
dec
pop
push
in
mov
iret
mov
adc
cmc
pop
mov
xor
nop
pop
cld
jmp
jns
sub
pop
dec
push
jb
sub
mov
fdivrs
fwait
mov
icebp
mov
data16
cmpsw
int
cwtl
in
ret
mov
push
aad
cmc
push
push
dec
pop
call
push
lock
inc
jae
cmc
scas
or
adc
xor
jp
scas
add
icebp
inc
dec
andl
sbbl
dec
mov
pop
jns
xor
sahf
call
pop
mov
unpckhps
add
or
push
jge
pop
lods
dec
sub
or
fstpt
jl
fsubrl
sub
in
xor
stos
int3
vandps
push
xchg
shl
inc
sahf
js
jno
stc
and
repz
out
out
add
jg
outsl
jbe
sbb
test
cmpsl
inc
inc
adcb
or
mov
mov
and
add
cmp
mov
imul
mov
jns
push
mov
jge
hlt
scas
ds
stos
and
pop
insl
xor
adc
popf
xor
mov
pop
ret
mov
add
mov
mov
xchg
and
movsl
inc
hlt
js
mov
sub
dec
push
jg
cld
xor
push
arpl
cmpl
mov
nop
sub
cli
mov
lea
lods
inc
loope
movntq
out
push
mov
aas
loopne
push
add
ds
in
cmpsb
fucom
push
fists
xchg
ret
insl
and
fstpl
jl
iret
jnp
cmp
pop
dec
inc
add
inc
scas
mov
divl
inc
scas
inc
ret
jp
leave
sbb
js
fldenv
jl
cwtl
push
nop
outsl
cmp
or
jns
frstor
cmpsb
repnz
bnd
rcr
mov
cmp
lret
and
rorw
leave
sub
movsb
pop
inc
je
out
inc
mov
mov
adcb
push
mov
int3
and
adc
fwait
add
sbb
scas
and
push
ret
addl
in
and
mov
mov
and
pop
das
subb
mov
popa
rsqrtps
scas
ret
ja
into
xor
lea
jns
out
xlat
cmp
inc
neg
cmp
int3
imul
movsb
lods
xchg
dec
xor
mov
push
ja
mov
xor
out
xchg
fdivrs
call
imul
push
hlt
sub
aad
sub
xor
std
out
sub
xor
scas
out
push
mov
aad
or
aaa
dec
add
and
push
loop
movsb
pusha
mov
mov
sub
or
fdivs
push
dec
adc
dec
or
es
cmpsl
or
enter
or
jp
adc
pushf
lret
sbb
ds
lcall
push
sub
adc
shrl
dec
dec
call
gs
arpl
out
cmp
aad
mov
shlb
in
out
jnp
enter
cmpsl
xlat
push
inc
std
and
sub
pop
loopne
and
sub
xchg
xchg
call
stos
popa
dec
es
or
dec
nop
mov
cld
mov
mov
ret
lahf
outsl
ds
repnz
aas
out
fs
inc
inc
xchg
push
jecxz
pop
mov
sarl
das
shll
lds
in
sbb
out
dec
bound
push
scas
lock
dec
shll
sti
iret
aas
mov
lahf
and
jns
sub
sbb
jno
mov
pop
jo
aam
js
mov
cwtl
or
jbe
sbb
int3
push
je
adc
mov
xchg
push
inc
adc
test
out
mov
movsl
or
sub
stc
sbb
jns
out
push
imul
or
loopne
jle
xchg
loop
jecxz
data16
sub
pop
xchg
stos
jb
sbb
mov
in
jne
xor
and
mov
subb
xchg
nop
cmp
push
cmpsl
add
shrl
ljmp
js
pop
pop
sahf
xor
or
xchg
shlb
adc
repz
mov
les
sub
push
stos
les
mov
xchg
scas
dec
jb
or
sub
jns
hlt
xlat
xor
jne
in
mov
jbe
pop
aaa
dec
xor
lahf
sbb
cmp
scas
xchg
pop
fimull
xor
ss
xlat
pop
mov
push
orl
push
iret
pop
inc
mov
jmp
lea
outsb
call
lock
and
cwtl
movsl
lds
cmp
cld
xor
add
rcll
bound
in
pop
js
mov
pop
xor
add
add
adcb
push
add
sbb
sti
or
pop
ficoms
push
jo
or
fucompp
inc
jnp
inc
pop
movb
aaa
pusha
lods
push
jle
push
lea
cmpsl
jno
movsl
insb
push
shrl
add
addr16
pop
cmc
push
pop
das
push
clc
adc
pop
push
jns
push
adc
xor
outsb
out
sarl
adc
sbb
adc
addr16
inc
iret
popf
nop
mov
or
call
aas
add
push
cmpsb
cmp
aad
jne
dec
push
xchg
pusha
pop
push
sahf
lret
add
sbb
mov
jmp
cmp
cmp
adc
xor
and
inc
scas
inc
inc
ret
out
in
add
out
and
lea
ret
or
lea
adc
sbb
daa
in
shlb
in
inc
lds
pushf
sub
cmpl
sub
ret
mov
pop
and
lods
xor
popf
sbb
test
sub
stc
dec
cmpsl
inc
icebp
xor
inc
push
and
push
call
scas
and
cld
fsubrl
mov
lock
imulb
cld
jge
sub
cld
movsb
aad
es
pop
or
and
xor
cld
jne
add
lcall
cmp
sub
fwait
and
and
shl
push
loopne
or
repnz
lock
lds
imul
xchg
jge
jo
pop
jb
xor
xchg
or
jmp
test
rolb
pop
in
xlat
push
mov
cwtl
in
leave
push
pusha
cmpsl
inc
push
mov
insb
std
pop
out
loopne
aas
stc
push
cmp
lahf
in
xor
lods
adc
mov
sbb
add
add
inc
adc
cli
lock
pop
mov
enterw
mov
or
inc
es
xchg
inc
mov
lret
fwait
mov
sub
lret
arpl
inc
xchg
mov
xor
mov
lea
in
xor
mov
fsub
or
add
dec
inc
mov
or
sti
add
adc
adc
sbb
bound
loop
dec
cmp
mov
adc
insb
inc
insl
pop
fistl
mov
inc
lods
cmp
andb
fsubrl
jb
pop
das
stos
jne
sbb
xor
out
cld
jae
mov
test
and
sub
sti
mov
icebp
notl
xlat
push
shll
mov
lock
sti
mov
lahf
sub
push
pop
and
dec
pop
stos
ret
aam
mov
popa
loop
cmpsb
xor
jnp
into
and
outsl
cli
pop
jo
pop
cmp
jg
dec
pop
fnsave
adcb
cmp
daa
dec
cmp
or
mov
fs
or
jne
pop
addr16
inc
hlt
sbb
insb
push
add
js
sub
mov
ret
outsl
cs
xchg
or
loop
sahf
fsubrl
out
rcrl
ja
fimull
ror
mov
incb
add
pop
sahf
add
daa
jbe
in
and
loopne
pop
clc
out
gs
inc
inc
pop
jp
aas
int
push
inc
mov
xor
xor
or
shrb
xor
sub
xor
cs
push
arpl
js
mov
adc
dec
adc
rclb
or
add
imul
mov
push
or
jg
jp
push
sub
sbb
lahf
push
inc
sub
dec
push
movsl
or
push
mov
lods
cltd
add
xchg
aas
scas
cs
jmp
mov
cs
pop
push
rcrb
orb
or
lahf
push
aas
sub
popa
mov
mov
sbb
clc
sbb
sub
lock
lock
sti
jge
fdivrl
jbe
lods
out
fs
dec
bnd
das
xor
lcall
nop
lods
mov
test
cmp
fcoml
cld
aaa
jnp
sbb
add
mov
push
cmp
daa
and
or
xchg
jmp
push
loope
xor
mov
mov
xor
jae
xchg
mov
push
cmpsl
stos
pop
hlt
and
iret
cmp
mov
xchg
jb
mov
and
mov
dec
jb
dec
aas
dec
out
xchg
movsl
inc
cmpsb
aam
dec
pop
aam
pusha
fdivl
arpl
sbb
imul
mov
pushf
jecxz
adc
sub
mov
mov
test
lods
cwtd
sub
mov
ret
out
sti
push
pop
mov
push
addr16
ds
push
jno
pop
out
rol
sarl
mov
add
inc
sub
ret
sub
lods
sbbl
cmc
jmp
je
clc
std
jl
jmp
dec
sbb
mov
mov
fisubs
inc
push
mov
jecxz
push
sbb
nop
sahf
test
dec
or
lea
sub
jp
mov
nop
dec
mov
iret
cmp
sub
cmp
mov
repnz
or
fistps
adc
sti
inc
lods
cwtl
adc
inc
mov
mov
mov
pop
test
loope
cmpsl
or
lods
inc
js
xchg
js
iret
inc
sub
lock
or
inc
dec
push
jnp
dec
insb
andl
mov
jnp
pop
inc
scas
repnz
pop
push
mov
mov
add
dec
push
xchg
xchg
notl
inc
xchg
mov
or
xchg
out
addr16
imul
pop
test
je
mov
xchg
fwait
stc
addr16
sub
outsb
mov
sbb
mov
sbbl
fldln2
jne
in
movsl
fstps
and
mov
mov
xlat
test
jmp
out
add
push
call
mov
das
adc
jg
jle
mov
decb
mov
cmp
and
shrl
inc
cmpsb
mov
pop
inc
in
sbb
ret
sbb
popa
adc
insl
shrl
or
inc
mov
es
push
lock
jl
jge
test
mov
jnp
ret
shr
lock
dec
inc
pop
mov
sbb
call
sub
sbb
imull
inc
jae
lahf
mov
jecxz
xor
mov
stos
mov
mov
fs
dec
daa
loopne
cld
out
adc
pop
fnclex
leave
int
push
mov
push
push
insb
or
inc
scas
jecxz
mov
enter
add
imul
push
xor
mov
dec
add
imul
movsl
mov
or
push
sbb
xor
stos
mov
andl
sub
insb
roll
in
push
out
inc
or
xchg
xor
test
mov
out
adc
ljmp
bound
jmp
add
sub
leave
sbb
sarl
pop
jg
int3
xchg
push
jno
out
ss
xor
xor
bound
bound
call
out
jmp
mov
inc
fistpll
shlb
call
int3
jae
aas
push
inc
loopne
xor
sti
dec
sbb
in
pop
enter
pop
test
pushf
loope
xor
jle
and
sbb
xchg
push
in
xchg
sbb
push
or
repnz
ficomps
loopne
subl
lahf
xor
or
loope
push
push
cmp
jle
dec
cmp
into
shll
inc
inc
mov
mov
cli
or
fcomp
sub
adc
add
and
cmp
lret
mov
lods
ss
push
cmpsb
lds
adc
es
shl
push
dec
into
std
fnstsw
fwait
movsb
mov
aaa
call
out
cmp
fwait
lods
enter
xchg
mov
inc
jne
and
cwtl
push
pop
sub
ss
add
cmp
test
fstpt
pop
imul
imull
ljmp
cmp
cmpsb
xchg
jl
leave
adc
sub
or
pop
and
adc
shll
pop
push
pop
aam
sub
xor
in
push
push
push
fldt
sbb
pusha
lret
scas
pop
inc
bound
imul
int
fildl
push
addr16
cld
xchg
loopne
adc
or
jae
pop
mov
popa
and
and
bswap
insb
mov
push
pop
add
jecxz
idivl
adc
mov
dec
xor
sbb
push
xlat
imul
xchg
xor
cmc
gs
xchg
hlt
test
mov
and
sbb
pop
in
out
popf
jecxz
aam
ss
jbe
cmc
test
in
or
cwtl
inc
sbb
xchg
test
inc
jo
or
clc
pusha
cmc
pop
das
jae
test
insl
aam
xchg
add
sub
mov
cli
rorb
repnz
clc
sub
sbb
dec
stc
pushf
jnp
mov
repnz
pop
stos
mov
cmp
pop
enter
leave
outsl
in
xchg
imul
xor
cmp
sbb
push
in
mov
and
aad
and
push
gs
add
rolb
arpl
les
cli
pop
lret
mov
iret
push
call
inc
outsb
jnp
insl
xchg
cmp
sub
add
jmp
adc
ljmp
gs
pusha
dec
inc
push
adc
mov
inc
xchg
lock
cmp
mov
mov
cld
inc
subb
and
mov
sub
pmaxub
retw
inc
lahf
mov
pop
dec
pop
pusha
fucomi
loopne
or
add
rorl
ficoml
xlat
frstor
push
jp
inc
cmp
sbb
addr16
xchg
xchg
mov
push
testb
jmp
ljmp
mov
xchg
mov
push
cmc
pop
int3
test
pushf
mov
es
dec
in
lret
jmp
inc
pop
sub
sbb
fcmovnbe
sub
lret
fsubrs
fcmove
mov
mov
aam
loop
add
frstor
mov
cli
sub
inc
loop
mov
cmpsb
and
push
pop
inc
xchg
into
addr16
stos
call
lds
push
pop
into
adc
pop
gs
or
mov
or
aas
mov
shlb
add
pop
imul
jb
mov
push
sub
push
mov
xchg
je
jo
push
push
inc
mov
or
xor
mov
mov
fwait
fwait
mov
push
sbb
add
sbb
xchg
fdivr
lea
fmuls
ss
mov
dec
or
dec
fidivl
pop
popf
push
subl
out
cltd
sar
in
add
ds
out
xchg
shrl
mov
pop
mov
and
push
jp
and
or
add
sarl
leave
test
and
adc
lret
std
adc
or
insb
lds
jno
or
int3
adc
and
sub
jb
fsubs
int3
fs
push
mov
aaa
faddl
push
inc
sbb
or
fbld
scas
jnp
jg
mov
adc
fnstcw
dec
mov
xor
cmp
inc
inc
das
jns
jmp
ret
stos
jp,pn
pop
fs
popa
push
push
in
inc
test
and
push
test
mov
jae,pn
rclb
mov
mov
fimuls
dec
push
pop
dec
sub
add
sbb
or
adc
jecxz
cli
hlt
addr16
incb
cmp
test
repnz
and
push
loope
lcall
mov
hlt
pusha
mov
mov
push
sarl
pop
push
mov
pusha
in
daa
clc
and
int3
cmc
es
aad
mov
inc
pusha
adc
jae
cwtl
or
dec
loop
add
enter
mov
push
int
add
mov
inc
mov
in
mov
jae
shlb
das
subl
aas
jbe
xchg
sbb
sub
mov
aas
js
stc
outsb
mov
xor
lcall
mov
push
dec
or
or
jb
mov
bound
scas
xchg
xor
mov
stc
sbbb
dec
dec
add
test
inc
sub
mov
icebp
add
xchg
jg
into
dec
mov
xchg
dec
pop
dec
mov
es
ljmp
adc
dec
shrb
sub
insl
inc
cmp
gs
mov
aam
xchg
pop
hlt
mov
out
mov
mov
data16
mov
imul
and
std
mov
insb
shlb
ss
sbb
add
dec
enter
sub
test
cmp
psadbw
cmpsb
pop
repnz
dec
xor
repnz
in
insl
sub
add
sbb
mov
mov
xor
push
cmpsl
dec
push
dec
jb
xchg
push
ss
sbb
or
subl
or
mov
add
ja
jmp
cld
imul
xor
icebp
mov
inc
push
pop
aaa
add
lcall
in
stos
lock
aas
inc
std
mov
scas
and
adc
xor
sub
pop
repnz
decb
cmp
aam
mov
pop
cmp
test
mov
dec
je
aas
test
pusha
pop
lahf
lods
push
fildl
push
jnp
pop
icebp
jbe
sbb
xor
sbb
nop
cli
jl
insb
fadds
cmp
cmp
xor
mov
movsl
ljmp
mov
xor
mov
jne
data16
popa
mov
and
lret
jle
mov
stos
jb
dec
sub
cmp
hlt
xor
jle
insb
bound
test
push
mov
adc
and
hlt
mov
jb
push
add
and
xor
jb
shrb
push
pushf
jbe
sbb
cmp
leave
adc
mov
out
call
fcmove
rcrl
push
dec
nop
insb
push
in
addr16
das
mov
addr16
fistl
mov
in
rcl
pop
jmp
jg
or
iret
cmp
dec
hlt
inc
sbb
jp
cmp
pop
imul
pop
jle
fdivrp
adc
ljmp
mov
xchg
test
arpl
cmp
or
cmp
js
pop
iret
ret
or
and
popa
mov
nop
gs
out
gs
sbb
mov
out
out
xchg
xchg
pushf
inc
jb
add
jg
shl
and
mov
jns
pop
dec
lods
add
mov
jmp
enter
xchg
cltd
ret
xor
punpcklbw
mov
jg
jle
cmp
fnstcw
es
xchg
push
pop
cmc
jo
sub
jg
jmp
xor
enter
mov
adc
test
les
out
jmp
jne
sbb
add
shr
fsubrl
repz
aaa
in
je
xchg
or
mov
or
pop
lcall
mov
xchg
inc
insb
clc
inc
imul
shrb
xorb
add
cwtl
xor
mov
inc
sbb
sbb
divb
dec
lret
or
cmp
jo
in
mov
sbb
dec
cs
jecxz
in
inc
mov
sarb
sub
pusha
lock
inc
or
jle
mov
cmpsb
jns
ss
addr16
mov
mov
xor
into
mov
jp
jmp
xchg
add
shll
cmpsl
inc
mov
jb
xor
arpl
dec
dec
mov
pop
and
sub
sub
adc
adc
loope
ss
xchg
out
les
inc
push
sahf
xchg
je
pop
das
imul
loop
inc
test
jge
xchg
scas
daa
stos
xchg
fcmovu
dec
sub
adc
pop
push
xor
cmpl
gs
mov
nop
xor
lds
call
push
sub
adc
repz
pop
pop
lods
jle
and
cmp
loop
int
shrb
jg
mov
add
lret
xchg
or
jb
fdivrp
mov
xchg
testb
scas
es
ljmp
sbb
cmpsb
mov
inc
jo
rolb
gs
pop
sahf
push
xchg
cwtl
mov
ds
imul
rcrb
inc
add
rcrb
push
mov
lret
cli
rcll
pop
cld
mov
rclb
out
fiadds
dec
popf
pop
jns
daa
mov
das
cmp
lret
inc
aaa
loopne
in
fadds
fwait
xor
dec
lret
pop
shrb
mov
lahf
js
stos
frstor
in
mov
push
xchg
outsl
iret
sti
jae
push
scas
cmpb
jecxz
sbb
sbb
mov
stos
add
sbb
jmp
nop
sti
sub
scas
mov
cmp
popa
or
jb
inc
das
aam
ficoms
loopne
mov
movsb
xchg
lock
xchg
fcoms
pushf
dec
cmp
mov
enter
stos
fidivs
sbb
and
ljmp
add
xor
into
sbb
stc
inc
sub
mov
cli
subb
inc
mov
insl
fisttpll
in
and
cmc
and
cmpsb
xlat
fs
lret
aas
mov
inc
mov
cmp
js
in
pop
pop
cli
incb
lahf
pop
cmp
sub
sub
test
or
inc
lods
push
shlb
push
sti
dec
movsb
fwait
lds
call
test
dec
push
and
aas
shlb
stos
jl
xchg
hlt
jmp
loope
bound
cmp
bound
jge
inc
cmp
xchg
fs
outsb
das
pop
or
sbb
and
push
mov
popf
js
cltd
lea
icebp
xlat
sub
pop
add
xlat
or
or
inc
inc
roll
inc
data16
not
shl
or
or
push
nop
and
dec
and
int3
add
mov
jb
in
shlb
idivb
xchg
mov
fistpl
pop
fwait
mov
mov
rorb
out
adc
cld
popf
rcrb
loope
push
pop
clc
push
out
cmpl
xchg
xchg
sub
sub
push
popf
mov
shrb
xchg
add
mov
test
sbb
mov
pop
push
mov
fists
push
das
pop
cmp
xor
stos
mov
scas
or
inc
cs
loope
ror
mov
cli
pop
into
aam
cli
cli
div
fbstp
xchg
adc
sub
mov
mov
cmp
ret
cli
fisubs
xchg
inc
jbe
jbe
ret
mov
xchg
fistps
nop
cmp
les
mov
mov
or
and
mov
icebp
pop
inc
mov
push
jb
sahf
ficompl
dec
in
add
mov
rcll
mov
dec
sbb
and
fcmovnu
jp
fucomip
ds
push
fcoml
test
movsb
pop
cs
and
mov
fcompl
add
cmp
xlat
arpl
imul
or
add
js
xchg
xchg
add
bound
out
mov
in
pop
fsts
aas
out
hlt
inc
xor
iret
or
sahf
gs
push
mov
sbb
dec
outsl
jne
scas
and
in
popf
jne
or
scas
pop
mov
cmp
mov
push
into
loopne
lret
enter
popa
sub
push
and
dec
js,pt
pop
cmp
lahf
sbb
jo
dec
fstps
xchg
mov
enter
repnz
xor
dec
cmp
cmp
xchg
in
std
lcall
sub
mov
rdpmc
enter
and
cmpsb
int3
push
dec
filds
sub
cltd
lahf
jecxz
adc
pop
and
push
aaa
mov
xchg
sbb
push
xchg
and
xchg
adc
pusha
dec
add
pop
push
enter
jo
fcompl
cmpsb
mov
ja
inc
cmp
dec
int3
dec
or
xchg
xor
in
mov
ds
jge
sub
mov
test
popa
icebp
outsb
jno
cmp
jo
xchg
push
cmp
fs
add
cmp
andb
cmp
dec
dec
jb
cmpsb
push
out
xchg
mov
clc
dec
push
mov
mov
lods
jl
es
mov
cmp
sarb
lods
push
mov
shrl
or
pop
sbb
mov
ret
mov
scas
jne
pop
clc
cmpsl
fiaddl
mov
pop
nop
push
test
lcall
xchg
lock
into
rol
sbb
sub
nop
mov
add
imul
stos
dec
clc
ja
sub
xor
fs
fistpl
jae
shll
hlt
push
imul
pusha
lds
dec
or
mov
cmp
out
aaa
xor
daa
outsl
or
dec
cld
xchg
jae
lds
xor
fildl
iret
andl
mov
outsb
mov
je
pop
push
cmp
jo
inc
cld
mov
inc
add
or
adc
mov
xor
iret
inc
fbstp
and
dec
rorb
pop
lea
inc
in
icebp
das
shll
cmp
mov
mov
sbb
lret
jno
fisttps
or
sub
dec
sbb
pop
aas
push
sbb
pop
fnstenv
jns
mov
stc
movsl
pop
pop
lods
xor
ds
mov
adc
popa
jbe
aad
sub
icebp
or
popf
lock
jo
sub
mov
jae
push
adc
cs
loopne
ds
in
roll
sub
lcall
inc
jg
mov
out
fdivrl
jne
or
lods
enter
mov
mov
sub
jecxz
shrb
rorl
test
out
cs
xor
push
inc
aaa
ljmp
cmc
loope
orb
gs
insl
fs
stc
sti
pop
mov
and
add
pop
out
insb
add
out
jae
out
movsl
jae
lret
xor
mov
ret
inc
mov
ss
push
mov
sub
lods
popaw
add
mov
sbb
movsl
es
popa
mov
leave
lods
xchg
mov
daa
push
jo
scas
addr16
enter
out
xchg
dec
or
jp
pop
adc
jge
mov
ret
adc
xor
adc
xor
scas
lock
xchg
and
sub
out
sbb
les
fimull
inc
scas
dec
adc
cmp
in
sub
shll
push
push
jmp
adc
dec
rcrl
call
testb
and
adc
and
mov
popf
jno
dec
jne
and
push
mov
cli
and
fldl
ret
jg
test
outsl
jae
cmp
ss
pusha
data16
mov
xor
lods
gs
push
mov
sub
add
movb
fs
dec
push
pushf
sbb
sub
iret
test
mov
dec
cwtl
ret
aaa
lret
add
inc
mov
popf
jmp
xchg
xchg
sub
inc
xlat
sub
and
aam
enter
stos
clc
cli
mov
dec
jno
pop
mov
push
and
sub
arpl
pop
icebp
daa
das
fbstp
or
jl
inc
test
insl
fsubrl
les
inc
in
insb
imul
sub
outsb
lret
out
int3
jp
dec
imul
lahf
and
and
inc
in
add
mov
mov
mov
mov
jnp
mov
push
fs
mov
std
and
sbb
cmp
je
out
xor
leave
mov
out
lock
jno
sbb
mov
ret
and
imul
nop
test
push
add
adc
sahf
clc
cmp
fmuls
inc
call
and
jo
stos
inc
push
inc
mov
pop
loop
out
lea
ret
gs
cmc
in
xchg
bound
sbbl
jmp
ja
test
test
sbb
or
inc
out
or
lock
add
mov
push
xchg
sbb
mov
pop
cmp
jmp
cs
test
lahf
mov
xchg
jge
loop
lret
stos
jge
pop
imul
daa
push
dec
mov
cli
sub
mov
mov
fcmove
pop
div
xor
nop
mov
dec
pop
mov
out
sub
nop
in
leave
sbb
inc
mov
or
lods
fs
push
add
lods
negl
and
nop
inc
mov
mov
pop
and
pusha
jb
xchg
jecxz
fstps
mov
push
sub
and
xor
cmp
mov
mov
mov
js
jnp
xor
int
mov
divb
int
test
jl
loopne
mov
sub
imul
ljmp
pusha
mov
xor
hlt
pop
push
sbb
aad
xchg
cltd
bound
mov
test
sbb
aad
int3
dec
dec
mov
jae
xchg
sbb
xchg
mov
jmp
adc
mov
sbb
inc
je
fnstsw
adc
jb
daa
xchg
mov
test
or
pusha
fcom
ja
push
dec
insb
pushf
mov
sbb
jecxz
adc
test
jno
sub
dec
xchg
push
xor
in
xor
in
int
sub
jo
sbb
or
aas
in
dec
xchg
adc
scas
dec
add
push
xor
xor
popf
js
sti
and
cmc
push
and
pop
stc
jne
and
mov
aad
adc
dec
mov
adc
push
clc
dec
aaa
xchg
lea
mov
sub
mov
jns
push
sti
push
push
rorb
pop
mov
scas
xchg
pusha
dec
xchg
dec
iret
dec
out
cwtl
roll
sub
pop
hlt
push
rcl
icebp
rcr
inc
enter
lock
cmp
insl
dec
inc
jg
jno
ret
sub
imul
scas
mov
pop
sti
les
daa
mov
cmp
sub
jp
and
or
lret
adcl
xchg
aas
mov
mov
push
and
jg
mov
push
xor
in
out
sbb
mov
aad
mov
ret
arpl
push
jo
xor
sub
and
lds
mov
daa
mov
outsb
inc
xor
call
mov
enter
gs
jl
and
sti
and
sbb
and
push
add
nop
dec
in
pop
cmp
mov
loop
xchg
scas
mov
mov
xor
mov
or
lret
push
jle
sub
push
out
jbe
jmp
mov
push
repnz
sbb
cld
out
mov
popa
or
nop
jge
adc
out
fs
dec
mov
ljmp
leave
stos
insl
xor
mov
popf
faddl
dec
sub
mov
int
adc
push
lock
add
mov
or
fidivrl
cmp
sbb
mov
xor
and
cwtl
call
jnp
test
jb
cmp
inc
sub
repnz
mov
ja
lea
jge
push
mov
adc
imul
add
std
in
cmp
das
sub
mov
stc
idivb
repnz
push
mov
jns
add
jb
movsb
rcll
dec
mov
xor
mov
mov
cwtl
lret
cmpsb
divb
pop
rcrb
fwait
inc
repz
mov
testb
push
sbb
mov
mov
lods
pop
pop
cmp
push
add
pop
push
iret
jmp
add
imul
or
dec
int3
cmp
ljmp
shlb
xor
loope
fidivs
mov
sbb
adc
rcl
test
sbb
add
leave
jl
push
xchg
roll
jnp
rolb
out
in
std
jg
bound
add
hlt
insb
or
aam
cli
lock
pushf
pop
enter
out
xor
cmpsl
fwait
lahf
ds
inc
cmp
jmp
mov
dec
and
fmull
sti
mov
push
jbe
xchg
sub
outsl
push
ret
inc
fldt
popa
or
dec
mov
fs
dec
leave
xchg
jge
mov
loop
mov
push
or
dec
mov
cmpsl
cmp
test
xchg
fldcw
push
les
xor
add
jmp
cmp
mov
pop
out
adc
mov
aam
jge
lods
repz
push
xchg
cmp
push
aam
push
ljmp
adc
push
stos
mulb
mov
jno
mov
mov
ret
xchg
in
test
or
js
pop
mov
test
into
adc
jp
imul
fisubs
mov
outsl
cltd
aaa
out
inc
mov
cmp
inc
push
xchg
mov
push
or
jb
enter
cld
das
jg
jl
xor
sbbb
stc
rep
mov
enter
push
lcall
fistps
cmp
in
call
mov
mov
adcl
ds
popf
rcrl
popf
or
pop
inc
xlat
mov
jle
fs
inc
jnp
fcoml
push
xor
push
outsl
xchg
and
mov
stc
inc
mov
popf
inc
cltd
adcl
and
jp
dec
fisubs
sahf
inc
roll
jmp
stos
and
cmc
scas
jbe
cli
sub
outsb
pushf
jle
pop
int3
push
mov
movsl
lahf
movsl
js
outsb
xchg
mov
lds
je
test
sub
lcall
jecxz
cmp
cli
cmp
shll
ret
int
xchg
mov
fwait
in
outsb
movsb
loop
mov
aaa
xor
movsl
cmpsb
sub
push
mov
mov
cmpb
sbb
mov
int
or
inc
int
dec
leave
arpl
xor
sub
stc
mov
jnp,pt
daa
add
es
rcr
inc
xor
test
xchg
mov
xchg
fidivs
ds
and
or
repz
xor
mov
mov
test
mov
jns
aam
and
shll
jns
pop
push
mov
pop
cmp
push
mov
dec
dec
xchg
aad
push
mov
inc
mov
imul
inc
mov
mov
lods
test
adc
ljmp
testb
mov
ss
aaa
sarb
or
xchg
or
push
and
jecxz
fwait
pop
ficoml
adc
jecxz
xchg
icebp
in
sar
mov
ja
popf
mov
mov
out
fldt
cmpb
adc
outsb
dec
dec
sbb
outsb
cmp
push
mov
ret
stos
cmp
add
push
arpl
mov
sbb
les
faddp
pushw
test
add
sbb
fdivp
sbb
push
mov
push
ljmp
mov
xor
or
mov
push
repnz
xchg
mov
stc
popfw
ds
in
xchg
mov
mov
out
andb
xchg
pop
push
dec
sbb
out
inc
jb
rorb
out
add
cmp
pop
out
xchg
lods
xor
xor
lods
sub
xchg
sbbl
sbb
imul
xchg
jge
lods
and
into
jo
dec
clc
ret
xor
ret
gs
sub
scas
mov
inc
sbb
adc
nop
test
inc
mov
idivl
push
mov
dec
inc
int
fistpll
clc
testb
adc
pusha
jecxz
dec
pop
fdivs
sbb
and
pop
jp
loopne
pop
mov
nop
test
jecxz
pop
in
je
push
cwtl
xchg
mov
jno
test
mov
lahf
pop
loop
inc
jb
enter
and
subl
inc
cmp
imul
inc
dec
cmpsl
fidivrs
inc
cmpsb
xchg
cmp
pop
ss
adc
popa
fs
mov
or
lahf
in
aam
jmp
loopne
iret
pop
stos
mov
sysenter
mov
pop
call
push
xchg
inc
fdivrs
mov
jae
sub
insl
push
sbb
lcall
lods
xchg
xchg
jge
xor
subl
mov
add
xchg
mov
pop
pusha
mov
inc
shrb
and
or
pop
gs
hlt
dec
mov
adc
clc
dec
sub
fisubrs
fadd
inc
fnstcw
push
lret
dec
push
xor
shrb
xor
repnz
mov
aaa
lret
inc
dec
mov
push
lahf
in
xchg
jb
fistl
mov
jb
inc
xlat
inc
push
mov
pop
enter
in
push
fiaddl
add
sti
or
mov
pop
add
inc
xorb
mov
shl
adc
int3
shrl
mov
fdivrl
mov
addb
pop
mov
inc
or
and
mov
cmp
pop
iret
push
lods
pusha
inc
push
mov
xchg
mov
in
out
out
dec
iret
fimull
adc
lea
pop
sub
cmp
or
or
mov
fwait
lock
push
jl
or
push
mov
and
add
fnstenv
and
roll
and
or
cmp
rorl
and
push
fimull
mov
xor
in
negl
hlt
push
mov
mov
cmp
push
push
cmp
in
repz
stos
aam
lcall
loope
in
mov
imul
in
shlb
fcomps
scas
and
je
repz
mov
inc
cmpsl
sti
mov
inc
ret
cmp
fidivl
ja
push
jge
cld
enter
daa
cmp
push
loope
push
das
scas
data16
lods
dec
jns
add
aas
fisubrs
mov
fistpl
pop
add
jnp
data16
stos
les
rcl
xchg
lret
xor
hlt
jecxz
das
dec
mov
fcmovnb
mov
pop
pushf
outsb
mov
popa
cltd
popa
cwtl
adc
cmc
shlb
ficoms
cmpsl
sbb
aad
push
test
xchg
jo
into
or
add
or
push
or
push
xor
test
mov
fisubl
mov
cs
xchg
adc
lods
call
vmovsd
jne
call
filds
pop
outsl
or
lcall
stos
stos
jmp
xlat
call
out
out
fwait
sbb
sub
iret
clc
scas
mov
std
sub
sahf
fidivs
ljmpw
adc
movsl
or
fcom
sbb
pushf
cmp
xor
mov
pop
push
xchg
enter
cli
out
xor
ret
mov
mov
ret
pop
fistps
lret
aaa
inc
xor
test
clc
dec
movsb
push
mov
stos
cmpsb
ja
dec
push
shrb
mov
mov
lock
jns
xchg
adc
jb
inc
inc
pop
shll
pop
inc
mov
cmp
or
ja
xchg
clc
and
pop
das
lahf
push
das
pop
mov
test
sbb
mov
test
mov
sub
adc
and
and
cmp
pop
lret
jg
or
jmp
mov
shlb
scas
loop
adc
test
mov
mov
roll
negl
loopne
adc
pop
dec
mov
mov
push
jl
incb
in
das
pop
sbb
cmp
int
imul
aam
pop
xor
cmp
pop
out
inc
inc
sbb
lcall
shlb
push
push
clc
push
sbbb
dec
aaa
stos
mov
mov
inc
sub
mov
cmpl
dec
int3
dec
jl
sub
in
imul
mov
out
sbb
ret
jecxz
jle
xchg
ffree
mov
sbb
push
fsubs
jno
jmp
mov
sbbl
mov
push
sbb
mov
push
nop
mov
lock
jp
mov
les
jmp
jle
pusha
gs
fcoms
pop
lret
jb
dec
dec
mov
pop
cmp
sub
aaa
test
gs
xchg
mov
push
mov
loopne
or
dec
adc
pusha
fmulp
push
jns
cmc
push
out
mov
adc
jg
movsl
mov
aad
lds
int3
aam
jns
or
jmp
call
push
mov
push
cmp
arpl
repz
sub
sub
inc
jb
cmp
cmpsb
cmp
data16
jne
mov
mov
dec
xor
das
pop
arpl
mov
xor
iret
cwtl
cltd
adc
popa
lret
mov
xchg
cmp
sar
cmpsb
sti
adc
test
sub
loop
test
push
jnp
out
pop
push
scas
or
dec
stc
call
push
mov
jecxz
mov
js
inc
jl
ficompl
sbb
mov
and
enterw
fwait
lods
aaa
dec
or
add
fisttpl
daa
ljmpw
popw
aad
popa
shll
mov
dec
sub
cmp
fsubl
xchg
aad
jbe
in
pop
ror
pop
sbb
imul
sti
push
testb
sbb
cmp
sub
lahf
int
and
jl
test
in
add
push
xor
add
dec
jle
pop
shl
sbb
push
in
fnsaves
fldenv
mov
cmc
popa
js
add
cmp
or
sbb
pop
xor
aaa
jp
loop
ss
cmp
cmp
popf
fists
mov
test
rorb
lcall
test
imul
daa
out
push
pushl
sbb
ror
aas
popa
das
fbld
scas
loope
stc
mov
or
inc
push
aas
stc
fldt
adc
lcall
cli
nop
sbb
scas
in
cwtl
mov
push
xchg
fimull
dec
cld
hlt
ja
mov
dec
push
sub
sub
add
ss
aad
cmp
stos
jo
jge
and
cltd
cmp
in
jl
std
sub
or
lods
mov
push
xor
mov
sbb
sarl
jnp
mov
mov
loopne
fsubrs
fstl
repz
shrb
dec
push
adc
add
aas
jmp
jo
loope
dec
mov
push
push
lods
xor
lock
nop
cmp
addr16
popa
fnsave
lret
xor
addb
mov
push
lar
nop
jno
call
xor
iret
mov
xlat
pop
loop
pop
mov
fisttpll
fisubl
out
addl
adcb
arpl
in
pop
push
mov
mov
cmp
pop
inc
enter
sbb
cltd
fmuls
push
inc
movsb
in
lret
mov
mov
pop
sub
test
jno
jns
fnstsw
adc
or
in
lret
fstpl
pop
mov
iret
inc
out
xlat
sub
push
add
iret
push
xchg
mov
xor
loope
add
fsubrl
push
ljmp
popf
mov
bound
mov
rcl
dec
mov
adc
fdiv
insb
and
inc
repz
stc
lsl
bound
xor
inc
xchg
lods
test
push
push
call
jg
mov
stc
fiaddl
jecxz
stos
xchg
pushf
push
jno
or
jmp
out
and
sbb
mov
xor
test
arpl
bound
cmp
fidivrl
pop
lods
mov
ljmp
pusha
sub
loopne
jmp
in
mov
ret
xchg
popf
mov
lds
ss
fadds
std
int3
repnz
push
adcl
pop
add
mov
or
or
add
mov
and
hlt
sbb
inc
lret
repz
jg
xchg
push
jmp
sub
inc
and
cmp
xor
xchg
xor
mov
loope
jne
fdivrs
mov
test
or
fistps
cmpsb
add
fs
pop
mov
xor
xchg
hlt
mov
stos
in
add
test
xchg
iret
xor
jno
and
repz
inc
cmp
adc
insb
dec
int
add
dec
rclb
ret
xor
leave
mov
pop
gs
cmp
jge
imul
jns
sub
stos
pop
test
and
adc
fsubl
out
andb
test
sub
shll
out
sbb
stc
pop
out
dec
inc
fsub
mov
dec
jo
jb
dec
jge
push
dec
out
push
pushf
ds
adc
popf
cli
movsl
fisubrl
jle
outsb
push
nop
jl
mov
mov
pushf
pop
mov
xchg
inc
xlat
push
mov
ja
aas
les
idivl
subb
add
xor
enter
xchg
stos
ss
mov
jne
pop
in
movsl
push
ds
mov
ja
xor
dec
mov
test
lods
mov
mov
inc
addr16
mov
mov
xor
movsl
add
pop
pop
mov
loop
ret
repnz
sbb
stos
addr16
push
movsl
mov
push
xchg
add
xor
jg
jle
xor
sti
pop
aas
sbb
sbb
lods
iret
xor
js
call
sub
lret
push
movsb
or
in
les
mov
pop
push
mov
pusha
pop
mov
inc
xchg
xchg
adc
mov
hlt
mov
pop
insl
movsb
pop
adc
mov
pop
pop
or
sbb
nop
add
cmp
ret
mov
cmc
jnp
dec
pop
mov
mov
or
mov
lret
aaa
cmovl
and
aam
jmp
dec
inc
xor
shlb
and
ljmp
pushf
cli
xchg
int
lods
lods
rorb
enter
pop
sub
push
shrb
mov
iret
cld
mov
jns
repz
sub
pop
lds
adc
outsl
xor
pop
in
or
in
cltd
insl
dec
pop
xor
xchg
les
mov
out
inc
hlt
repnz
stos
imul
inc
rcrl
jmp
xchg
push
mov
cs
xchg
in
sub
sbb
sbb
out
sahf
aad
arpl
icebp
jl
loopne
inc
ss
imull
jl
dec
sub
mov
shlb
xor
jbe
and
or
xchg
imul
js
jp
stos
repz
cs
insl
inc
push
icebp
cwtl
or
loop
jmp
daa
add
mov
mov
pop
nop
mov
adc
dec
pop
inc
ret
dec
xchg
scas
dec
pop
in
pop
jnp
movsl
push
in
test
mov
inc
sarl
pop
pushf
jp
mov
jp
or
je
gs
dec
push
ret
jmp
aaa
inc
fiaddl
xor
sbb
jo
xchg
scas
pop
jae
mov
fwait
jle
pushf
cmp
dec
push
shll
ret
scas
pop
mov
lret
sub
mov
fisubrl
add
or
sbb
mov
cmp
lds
data16
push
add
adc
call
cwtl
push
xchg
insl
cmpsb
add
mov
push
mov
mov
pop
popf
mov
lcall
into
sbb
out
jmp
bound
push
mov
mov
out
popl
js
rcrb
adc
pushf
ficompl
rcrb
or
ds
mov
call
mov
clc
pop
mov
add
adc
pop
loopne
pop
in
daa
cmp
lret
fisubl
aad
push
jl
into
or
sub
adc
pop
push
and
jne
ja
push
or
inc
ljmp
xchg
or
mov
adc
or
inc
popa
lahf
pop
mov
dec
and
imul
mov
and
xor
test
cmp
fbstp
into
daa
int3
adc
pop
mov
lock
jge
mov
ljmp
mov
mov
fdivrp
shlb
lret
add
aas
pop
dec
adc
push
mov
xchg
movb
outsb
int
js
movb
jns
xchg
call
fmulp
xor
adc
mov
xor
push
in
fs
or
jl
push
adc
xchg
sahf
push
mov
into
add
cmp
or
cmc
insl
ss
shrb
push
and
inc
ror
outsb
sahf
jb
mov
inc
ja
sub
lret
stc
mov
sbb
addr16
es
hlt
sbb
mov
xchg
jnp
out
cmp
jb
jo
pop
call
push
pop
xchg
leave
jb
enter
xor
inc
xchg
fidivl
imul
jge
mov
iret
jns
mov
xor
inc
lret
cmp
roll
cmpsl
sub
out
xchg
std
sti
lods
mov
lds
mov
jnp
divb
movsb
out
imul
xor
mov
xlat
jl
lods
inc
xor
std
sub
lret
ja
xor
pop
mov
test
pop
push
pop
iret
popa
mov
dec
xchg
dec
fimuls
int3
jge
sub
bound
leave
adc
or
sub
inc
adcl
mov
xor
negl
fs
and
push
add
popa
dec
mov
repnz
sbb
das
mov
sbb
push
out
mov
cli
ja
push
mov
mov
iret
daa
out
push
xor
sbb
cs
sbb
and
stos
xor
inc
dec
dec
outsl
aam
jo
inc
push
out
cmp
xchg
test
stos
movsb
es
or
dec
mov
je
adc
jmp
iret
xchg
stc
movsb
sbb
pop
sbb
xchg
lock
mov
outsb
and
test
loopne
pop
adc
iret
adc
lods
add
add
or
and
inc
sbb
jbe
mov
and
pop
pop
mov
ljmp
mov
jl
pushf
enter
adc
inc
js
xlat
mov
iret
inc
mov
pop
decl
adc
push
fwait
test
adc
add
dec
xchg
xor
repz
cltd
mov
push
arpl
pop
sub
mov
push
stos
outsl
lea
lret
mull
xchg
outsl
outsb
dec
out
test
pop
add
cmp
cmp
pop
ja
popf
pop
sbb
inc
push
sub
and
int3
add
cmp
cmp
addb
and
fnstsw
mov
arpl
jo
xchg
lods
jo
inc
jmp
mov
mov
out
xchg
call
repz
inc
fistpl
cmp
scas
mov
mov
mov
roll
push
shll
push
mov
and
cmp
dec
addr16
xchg
addr16
cmp
cmp
not
and
stos
adc
in
dec
outsb
data16
xchg
cs
ljmp
sti
or
mov
mov
xchg
sub
xchg
ret
int3
loop
jg
ffreep
xlat
ljmp
sti
cmp
push
loope
xchg
push
mov
jmp
jnp
push
sbb
ret
pop
mov
sbb
lods
push
xchg
dec
jo
and
xchg
inc
push
int
stos
mov
mov
in
syscall
leave
lret
int3
movsb
inc
xor
ret
dec
test
inc
cmp
in
in
inc
and
cmpsl
cmp
add
and
mov
shlb
cs
shl
mov
pop
cwtl
outsl
test
cmp
push
xchg
rcl
add
and
cmp
jp
pop
pop
in
adc
add
pop
or
addr16
xchg
scas
xor
push
cmp
fisubs
pop
mov
lds
push
movsl
sbb
mov
pop
pop
lcall
test
movsl
or
aas
or
mov
into
jmp
insb
movsb
mov
addr16
cmc
cmpsl
pushw
loop
mov
or
in
sbb
push
sar
cli
insb
mov
xchg
jge
pop
xchg
mov
push
dec
xchg
and
mov
lods
imul
fwait
and
jno
inc
jno
incl
jbe
sbbl
out
pop
les
imul
scas
aad
jmp
test
je
lret
add
shll
inc
cmpsb
xchg
shrl
add
push
push
jp
inc
and
das
sarl
xchg
xor
pop
pop
xchg
cmp
fnsave
test
lods
jmp
into
mov
int3
mov
sbb
mov
decl
mov
or
adcb
push
push
fmull
push
add
insl
es
movsl
xchg
jne
push
cmpl
insb
or
sbb
iret
leave
into
jnp
divl
xor
cltd
aad
inc
cmp
movsl
push
jbe
jmp
in
inc
sub
mov
cmp
or
shl
pop
loopne
jmp
imul
popaw
int
dec
nop
rcr
pop
stc
xor
jge
jbe
fimuls
cltd
push
inc
mov
cmpsb
rolb
popa
mov
jo
scas
xor
jb
inc
or
outsb
aas
lds
daa
xchg
in
in
scas
idivb
scas
xchg
cwtl
push
aas
jne
pop
cld
xadd
into
push
jle
jg
cmpsl
mov
pop
or
loope
and
jno
addl
sahf
daa
arpl
in
sub
add
adc
ja
pop
or
daa
mov
lahf
pop
arpl
xchg
inc
test
mov
fimuls
push
aad
jne
mov
and
rsm
jle
lds
add
pop
out
into
in
push
inc
aas
jmp
xchg
sahf
sub
push
aam
scas
scas
cmpsb
inc
or
add
xchg
sub
xchg
mov
add
addr16
mov
pop
je
push
and
mov
daa
and
jnp
rorb
js
dec
cmp
mov
bound
add
subb
scas
movsl
xlat
movsb
and
nop
les
xchg
shll
dec
add
insb
cltd
xchg
mov
inc
hlt
push
dec
mov
testl
and
scas
adc
pop
add
push
test
inc
xor
add
jbe,pn
popa
in
and
add
add
push
sbb
pcmpgtw
mov
xor
mull
and
out
fs
das
lahf
push
out
xchg
and
sbb
and
dec
stc
and
dec
xor
pop
fwait
test
xchg
push
loope
jne
sub
cltd
jg
test
test
mov
jae
inc
inc
and
push
ret
or
fistpll
mov
cmp
mov
daa
pusha
pop
loope
add
std
dec
jge
mov
cmc
out
cmc
lods
pop
jge
insl
aam
ss
insl
jl
in
sub
in
std
dec
hlt
hlt
and
into
xlat
fwait
mov
jl
and
pusha
iret
fildll
lret
and
repz
and
jne
inc
shlb
xchg
push
addl
repnz
out
cwtl
inc
xor
cmp
mov
cmp
mov
call
repz
jp
in
aam
lahf
cmp
inc
and
push
pop
push
xor
dec
mov
lcall
push
and
inc
pop
leave
fisubrl
mov
std
mov
mov
mov
data16
mov
jo
jns
movsl
lahf
adc
arpl
mov
ret
lock
mov
dec
insl
popf
xchg
jmp
clc
shrl
mov
ret
sub
dec
or
iret
jae
loopne
add
in
mov
popf
push
cmp
pop
jl
jmp
jbe
outsb
inc
popf
xchg
inc
das
xchg
pop
xchg
in
imul
jo
cmp
push
negl
movsl
and
pop
jecxz
andl
rolb
shlb
xchg
scas
cltd
das
repz
sti
mov
repnz
fadd
push
sub
mov
mull
mov
aaa
xlat
xchg
popw
adc
sbb
roll
arpl
js
sub
ds
jmp
fcoml
int3
mov
icebp
aaa
ds
fildll
addr16
adc
dec
jno
add
repnz
pop
lcall
push
push
ljmp
loope
dec
pop
push
scas
sub
adcb
fiaddl
xor
imul
stos
lcall
xor
cmp
lret
fcos
jno
push
std
mov
hlt
xchg
xchg
push
aaa
icebp
ja
sub
mov
lcall
stos
insb
push
and
cltd
std
pop
mov
fidivs
pop
stos
loop
movsl
cmp
neg
xchg
iretw
pop
daa
cmp
mov
or
in
out
xchg
sbb
push
push
mov
call
mov
lret
adc
fucomi
adc
sahf
stos
mov
cwtl
xor
jle
pop
loop
add
jo
inc
fwait
jne
popf
mov
push
xchg
pop
aaa
arpl
lds
and
pop
sub
xchg
stos
and
mov
hlt
mov
pop
add
loope
lods
repz
jecxz
lcall
xor
jno
gs
sbb
and
xchg
rorb
adc
xchg
and
pop
aam
hlt
xorb
push
test
test
cmp
pop
or
inc
and
test
pop
nop
or
dec
lret
movsl
ja
push
dec
neg
enter
fisttps
mov
mov
jp
cmpsb
sti
xchg
mov
push
dec
cwtl
xchg
push
ljmp
mov
mov
aam
dec
sub
mov
dec
mov
mov
nop
add
frstor
sahf
xlat
fs
mov
adc
and
pop
xor
stos
adc
lock
and
lret
sub
test
dec
sbb
sub
je
out
mov
sahf
in
add
movsb
jne
testb
cltd
shlb
cmp
inc
mov
dec
enterw
jmp
cmp
or
inc
push
lods
arpl
cmpsb
call
add
mov
adc
cwtl
jmp
aam
jns
stos
testb
pop
jno
pop
dec
xchg
jae
out
pushf
dec
test
sub
mov
out
add
or
jns
pop
mov
repz
ja
add
mov
lret
pop
es
enter
aaa
hlt
mov
jge
scas
pop
nop
push
inc
push
adc
call
in
jb
clc
sbbb
sbb
cwtl
pop
bound
repz
andb
add
pop
js
addr16
ffreep
cmpsl
mov
and
jmp
jne
add
sbb
cmpsl
jl
int
xchg
jno
cs
popa
pop
data16
cmp
mov
mov
sbb
outsb
or
arpl
movsl
cmp
push
mov
xacquire
inc
imull
or
push
iret
mov
shl
jbe
adc
es
mov
in
shrb
mull
insl
push
mov
call
push
push
jo
xor
push
shrl
adc
idivl
add
push
mov
and
adc
sub
loop
lea
in
xchg
pop
and
sbb
enter
cmpsb
les
lret
js
aaa
push
mov
neg
push
cld
shl
in
insl
push
xchg
jnp
sbb
and
pop
icebp
sub
je
sarl
icebp
lret
xchg
dec
lods
repnz
icebp
loopne
mov
imul
push
das
adc
dec
fstps
mov
mov
jge
inc
dec
scas
push
push
dec
ja
mov
mov
inc
jmp
adc
xor
cld
sahf
pop
fwait
outsl
into
in
outsl
cmp
xor
repz
inc
in
fmull
push
das
ds
mov
fimull
jle
fistpll
dec
adc
jge
movsb
ficomps
aas
push
cli
repz
fs
repz
xor
add
fwait
inc
xor
movsl
lods
jbe
cmp
js
clc
sub
jl
mov
loop
xor
cwtl
cmpsb
cmc
cwtl
xchg
mov
insl
aam
pushf
adc
jle
std
sbb
pop
adc
mov
arpl
shrb
dec
and
shrb
cmpsb
push
call
or
fs
loope
mov
sbb
push
fimull
and
dec
sub
sub
push
dec
push
pop
scas
mov
fdivr
hlt
ja
in
mov
push
out
sub
push
cmp
adc
push
in
aas
ret
dec
sub
push
loop
mov
loop
mov
jmp
push
movsl
pop
mov
sub
test
cld
adcl
jae
mov
sub
iret
rcl
xchg
jae
in
cmp
jmp
sub
xor
cmc
popa
in
sar
xchg
or
push
movsb
aas
inc
mov
clc
enter
mov
mull
sbb
or
sub
adc
pop
lcall
leave
lds
pop
in
cmp
popa
jl
pushf
int3
jle
jne
jp
mov
cmpsl
insl
sub
addb
out
add
fistps
mov
pop
dec
outsl
push
adc
sti
and
xlat
js
sbb
lea
mov
ljmp
sub
repz
in
fmuls
cmp
mul
imul
sbb
sbb
adc
xchg
movsl
hlt
add
ficomps
jp
pop
inc
dec
stos
ficoms
mov
push
xchg
inc
jbe
imul
dec
bnd
jmp
or
sbb
inc
jns
shrb
inc
ds
pop
or
adc
xchg
ss
jo
out
outsl
popa
lea
cmpsb
jg
out
push
stc
mov
cmp
inc
hlt
scas
aas
repz
aam
add
je
jno
aas
dec
jg
xor
jnp
ljmp
lahf
sub
and
jmp
ljmp
adc
push
push
add
xchg
aad
inc
inc
xchg
andl
mov
sub
leave
cmp
pop
notl
jno
mov
dec
fwait
dec
cmp
or
pusha
add
xor
shrl
shl
mov
aaa
jge
dec
pushf
sarb
push
gs
jae
les
mov
and
and
movsl
jo
mov
mov
xchg
sarl
nop
pop
mov
imul
pop
int
out
pop
push
dec
fwait
push
outsl
pop
ficomps
pop
mov
adc
mov
mov
cli
adc
in
xor
sbb
lahf
adc
idivb
xor
dec
mov
mov
sub
pop
mov
das
mov
dec
or
testl
xchg
icebp
pop
insb
sti
sub
add
jbe
push
sbb
bound
dec
cmc
push
in
cmp
out
push
sub
pop
sub
pusha
inc
sbb
xor
push
cmp
push
and
out
aas
pop
rolb
adc
imulb
cmp
call
dec
lods
mov
int3
cmp
mov
xchg
xor
cltd
imul
sahf
fcmovne
fidivs
leave
inc
stos
lock
xchg
rep
addr16
mov
leave
dec
inc
add
cmp
fisttpll
cmp
gs
popf
test
scas
loope
into
or
aad
mov
rorl
jecxz
movsb
lahf
jns
pop
outsl
cmpsl
addr16
repz
in
testb
sub
popf
lods
pop
xchg
call
leave
fnstcw
mov
jb
inc
pop
lcall
adc
cmpsb
mov
jo
int
adc
mov
mov
repz
adcl
imull
add
sbb
shl
idivl
or
cltd
sbb
aad
or
mov
lahf
xchg
mov
lock
and
insb
scas
ds
and
in
repnz
mov
lret
addb
repnz
fdiv
mov
jae
repz
xchg
rcl
push
add
pop
sbb
out
xchg
mov
mov
fdivl
mov
jns
pop
xorb
jbe
add
lods
sub
jb
add
pop
repz
pop
add
jge
dec
clc
push
push
pop
stos
pushf
frstor
dec
daa
cltd
inc
inc
andl
aas
loope
push
je
mov
data16
add
scas
ds
jno
push
cwtl
fidivl
and
adc
test
jmp
test
lret
testb
inc
stos
lods
inc
inc
jns
pop
pushf
rol
aas
mov
sub
mov
inc
sub
subb
and
mov
and
cmp
xchg
lcall
mov
das
ret
add
or
std
pop
jg
fcmovbe
rorl
out
ja
mov
aaa
jae
inc
pop
fs
call
stos
rorb
xchg
ss
lods
loope
sti
scas
adc
jecxz
mov
sbbb
aad
sub
into
sbb
and
imul
jno
xchg
cmp
push
push
add
sbb
cwtl
outsl
push
push
or
stos
pop
clc
pop
ljmp
lods
cmp
repz
pop
sbb
cmp
das
sbb
or
cmp
cmpsl
xchg
cld
es
inc
stos
adc
add
stos
pop
pop
fldl
add
xor
pop
negb
leave
cmp
sarb
fadds
cmp
add
xchg
sbb
push
daa
ficomps
insb
and
pushf
cmpsb
ss
enter
mov
call
jp
sub
push
jge
loope
fbld
daa
sbb
jo
add
push
dec
and
pop
add
mov
adc
cmp
sub
cmpb
out
and
lea
out
hlt
or
in
out
xchg
dec
mov
add
loope
aam
lods
enter
push
out
pop
jecxz
aaa
mov
lret
loope
aad
movsb
fdiv
inc
xor
imul
dec
pushf
out
sbb
ret
or
je
movsl
jb
movsb
stos
test
pop
in
adc
sbb
sbb
cwtl
mov
push
dec
cmp
std
pop
addr16
hlt
xor
inc
insb
mov
fidivrs
sub
jp
push
inc
rolb
stos
in
lds
ret
cltd
or
jb
notl
ljmp
popf
ret
push
jecxz
loop
call
mov
sub
sub
lcall
int
add
out
and
fbstp
addr16
dec
sbb
pop
pop
dec
sbb
out
daa
pop
dec
rcl
inc
in
dec
cmp
stos
ficoml
push
pop
cwtl
daa
inc
jmp
and
jle
add
xor
loop
push
or
add
push
ret
test
mov
ss
inc
in
xchg
push
push
and
fbld
jge
jg
inc
inc
and
ror
jns
call
int3
jmp
mov
rol
sbb
add
lret
xchg
mov
push
jg
mov
aas
cmp
sbb
incl
stos
and
add
ss
nop
pop
fs
inc
sahf
movsl
xor
mov
adc
adc
out
test
push
cmp
xchg
pop
adc
lret
or
faddp
inc
or
jbe
sub
push
inc
pushf
popf
dec
aam
fisttps
data16
into
subb
arpl
inc
add
or
test
xchg
adc
shll
sbb
xchg
negl
push
sbbl
cmp
into
sbb
mov
dec
pop
or
xor
push
push
repnz
and
and
pop
out
std
xor
outsl
in
in
das
push
push
cld
gs
pop
mulb
pop
push
pop
mov
or
mov
lock
push
in
inc
daa
mov
stos
cli
push
pop
jnp
lea
scas
inc
jbe
mov
cli
pop
mov
repnz
jnp
or
mov
imul
add
int3
sub
mov
push
fwait
push
shr
mov
mov
jae
cmp
cmovns
addr16
cmp
rclb
cmp
addr16
jecxz
pop
push
xor
je
lret
adc
xchg
movsb
xchg
test
cmpsb
fwait
dec
xchg
clc
imul
mov
fisttps
jecxz
mov
filds
jne
insb
inc
pop
gs
imul
scas
popf
push
repz
call
rolb
jg
sbb
ficomps
in
mov
cmpsl
ljmp
pop
mov
cmpsl
scas
and
pop
or
js
sbb
jmp
and
scas
dec
jecxz
or
push
cmp
rclb
xlat
outsl
add
movb
scas
out
push
and
jl
xchg
mov
mov
cmpsb
mov
test
test
imulb
or
sbb
push
xchg
cmpsl
add
addr16
insl
aas
paddw
dec
sarb
neg
daa
sbb
dec
into
pop
mov
xchg
lods
sarb
pop
mov
or
push
stc
dec
int3
cld
xchg
or
xchg
xor
test
mov
loop
iret
xor
shrl
jb
jb
add
mov
iret
les
ja
fs
in
das
sub
xchg
cli
xchg
or
out
jl
stos
cmp
xchg
pop
fwait
loop
int3
xchg
bound
movsl
push
sbb
insb
test
jae
sahf
push
dec
add
cli
iret
test
pop
push
jnp
cmp
cld
sbb
es
or
imul
push
ja
push
popf
int
insl
or
icebp
xchg
insb
mov
sti
mov
pop
out
stos
push
mov
add
sub
test
push
ljmp
add
pop
test
mov
xchg
aam
lea
cmp
inc
into
jecxz
add
or
xor
lods
xchg
pop
imul
cli
mov
or
ja
movsl
push
adc
xchg
push
inc
mov
mov
adc
dec
adc
sbb
dec
nop
pop
movsl
pop
push
and
in
jne
ljmp
scas
pop
jo
sub
rcrl
aam
mov
jmp
sub
movsl
sbb
incb
lea
stc
test
jo
ds
add
xchg
sbb
lret
fbstp
mov
pop
ret
test
pop
jne
aas
icebp
xchg
jnp
or
mov
and
ret
xchg
inc
mov
imul
push
hlt
push
xchg
add
fcmovnu
pop
out
sub
xor
out
rcl
in
inc
sarl
jge
and
movsl
push
outsl
add
lea
popa
dec
pop
sub
mov
inc
movntq
std
je
push
adc
cmp
dec
push
fdivrl
loope
xchg
sub
enter
sub
movsl
xor
xor
lock
jb
fcomi
inc
mov
ss
cmp
push
mov
lret
divb
pop
or
pushf
loopne
adc
jp
in
xor
fmull
mov
stc
test
jp
jae
pop
lods
loopne
clc
mov
stos
incl
pushf
push
aas
movsl
loop
in
sub
push
mov
mov
js,pn
sbb
scas
jae
dec
test
stc
or
mov
jnp
push
pop
mov
xchg
into
fwait
arpl
sub
imul
fadds
lock
inc
add
push
testb
mov
mov
arpl
dec
test
mov
xor
fldln2
lock
mov
jno
push
test
pop
cmc
pop
mov
daa
cmp
scas
popa
aam
gs
push
add
lcall
xchg
mov
cmp
mov
aaa
cmp
jne
mov
and
mov
dec
stos
and
push
lock
loop
scas
std
pop
popl
fs
in
shll
pushf
mov
in
or
pop
ret
call
popa
lods
xchg
rcl
flds
mov
push
sub
mov
pop
int3
pop
mov
push
popf
lea
das
fcomps
out
sarb
xchg
loopne
out
mov
inc
mov
aam
stc
dec
sbb
inc
bound
pushf
clc
push
insb
pop
leave
mov
mov
dec
push
cmp
pop
outsl
rcr
lcall
std
mov
aas
stos
jae
repz
pushf
lahf
adc
pop
pusha
fcompl
dec
outsb
loopne
jne
xor
adc
pop
das
xchg
sub
push
jns
scas
mov
sub
imul
jb
dec
push
dec
insl
clc
inc
mov
mov
aaa
cltd
test
mov
sub
fcomp
hlt
ret
test
xchg
out
inc
push
cmp
pop
pop
push
xchg
pop
push
fldl2t
lods
push
sbb
and
cmp
jge
xor
addr16
int
or
dec
gs
sahf
aas
inc
mov
js
ljmp
imul
movsb
out
cmp
mov
movsl
push
pop
and
pop
lcall
jecxz
push
fidivrs
imul
into
mov
movsb
add
pushf
shll
xchg
aam
inc
pop
dec
lods
ficoms
clc
cwtl
outsl
xor
icebp
pop
ss
mov
jne
outsl
scas
mov
gs
mov
xor
sbb
sub
sub
dec
into
jne
push
add
shrb
dec
arpl
dec
mov
sbb
fptan
or
or
adc
xor
lahf
xchg
fisubs
adc
push
mov
mov
push
ljmp
repnz
fwait
pop
mov
je
pop
xorl
movsl
pop
fistl
add
mov
pop
lret
cwtl
mov
repz
jo
sbb
lret
cmp
xchg
add
adc
sti
aas
imul
mov
fnstenv
test
inc
push
inc
add
dec
icebp
fwait
push
lea
push
ret
cmp
jne
cmp
fs
mov
mov
jb
shrb
lret
stos
xor
sti
sbb
and
push
jo
mov
mov
xor
stos
xchg
push
test
insb
and
sbb
movb
stc
xchg
jo
loope
dec
ljmp
fldcw
cli
sbb
cli
jecxz
mov
fdivs
sahf
pushf
insl
and
cmp
sbb
mov
add
jns
adc
mov
push
stos
mov
push
dec
sub
cmc
sub
push
stc
inc
in
into
jns
mov
inc
cmpsb
mov
xor
mov
or
sbb
dec
cmp
rclb
jmp
adc
pop
jo
mov
cs
mov
sub
repnz
mov
pop
ror
test
xchg
add
aaa
mov
pop
pop
jbe
jecxz
inc
ja
outsb
inc
push
bound
mov
xchg
pop
pop
nop
cmp
push
sub
insl
dec
jge
add
ja
aaa
in
mov
cmp
inc
adc
stc
push
pop
stc
into
xor
mov
add
cs
cwtl
lock
cld
movsb
push
xchg
cmc
cwtl
fisubs
dec
mov
iret
mov
outsl
popa
adc
fwait
push
mov
pop
pop
add
cmpsb
push
aaa
ljmp
xchg
pop
insb
popa
mov
push
dec
je
lea
pushf
das
mov
jno
sub
sub
cld
dec
dec
dec
xchg
xor
pop
pushf
sbb
rorb
in
fwait
adc
imul
mov
lret
xor
xchg
outsb
insl
and
out
jns
push
sub
jp
cmpsl
and
jo
xchg
push
cmp
and
lahf
mov
scas
jbe
and
pop
adc
clc
push
fcmovnb
aam
xorl
inc
sti
sub
push
mov
lock
lock
pop
daa
dec
inc
fimull
dec
fstps
in
add
lods
cmp
in
fisttpll
sbb
sarl
leave
or
mov
mov
cld
cmp
popa
mov
jno
or
cmp
xor
sbb
icebp
xchg
push
sub
loopne
cwtl
mov
jmp
out
or
jnp
add
cmp
and
pop
push
adc
push
sti
and
or
xor
jle
popa
dec
cltd
dec
mov
pop
in
out
pop
fistpll
loopne
int3
cwtl
dec
movsl
xchg
fsubs
mov
hlt
aad
mov
xchg
aam
ficoml
xchg
inc
jp
test
jns
testl
arpl
push
dec
mov
loop
jnp
shrb
sbb
dec
adc
out
mov
adc
stos
mov
push
inc
repnz
jecxz
jl
fsubs
mov
sub
dec
dec
movsb
jae
pop
dec
pop
cmp
inc
or
popa
popl
jnp
xchg
mov
jo
imul
cwtl
add
and
push
and
out
stos
sti
test
push
rorb
jge
add
jmp
dec
leave
lock
jno
or
mov
insl
xchg
adc
pop
ficompl
ficoml
pop
nop
jnp
lahf
sbb
int
fldl
dec
flds
push
in
imul
popa
add
lock
xlat
xor
shlb
jl
pop
shlb
test
aas
mov
xor
xchg
es
fists
inc
sbbb
push
daa
aad
jb
aad
cwtl
add
scas
jle
or
jmp
mov
fisubl
inc
cmp
push
lods
cltd
or
sbb
ret
fisttpl
sbb
sbb
add
in
ss
cmp
xor
iret
fisubl
repnz
repz
shl
mov
lea
stc
cmovg
or
push
int3
mov
movsb
test
mov
xchg
icebp
insb
dec
les
inc
adc
int
fsubl
mov
ret
adc
mov
cmpsb
popa
mov
jecxz
sbb
mov
dec
in
arpl
mov
shlb
cmc
sub
movsl
cwtl
inc
lahf
ror
sti
sub
les
mov
mov
rcrl
adc
mov
shr
popf
mov
leave
pop
mov
les
in
dec
mov
xor
cmp
push
sub
mov
in
cli
shl
aas
push
pop
dec
mov
jle
sub
pop
xchg
add
add
cmc
fldenv
push
push
pop
lock
aas
cmp
ret
test
jno
jg
and
insb
je
shll
mov
pop
int3
dec
cld
lret
xchg
les
rclb
hlt
xor
adc
pushf
stc
popf
lods
mov
idivb
nop
push
daa
push
stos
inc
iret
jl
vpshufd
pop
xor
cmp
ss
fst
mov
jae
mov
fsubl
loope
scas
pusha
push
fiaddl
sub
mov
mov
loopne
xor
cmc
xchg
std
outsb
sbb
sbb
inc
cmc
add
repnz
lahf
shr
es
stos
xchg
or
fimuls
test
notl
mov
sahf
push
andb
lahf
pop
inc
adc
aas
mov
pop
mov
inc
add
xor
sub
scas
jae
in
jmp
jb
push
les
sbbb
cmp
rcrb
xchg
jl
cmpsb
and
add
pop
push
jle
pop
iret
scas
mov
rcrb
xor
add
pushf
fisubrl
shrl
inc
sbbl
lds
shll
cmp
pop
scas
popf
jle
je
int
lcall
cltd
inc
push
dec
int
inc
and
mov
adc
pop
fistpl
inc
std
cmpl
pop
es
aam
sbb
add
out
sbb
and
in
mov
lods
jg
inc
movsl
jo
jge
mov
cmp
loop
push
sub
in
mov
fnstenv
cwtl
das
sub
andb
dec
add
movsl
call
icebp
arpl
shl
out
push
inc
leave
push
mov
mov
xchg
xchg
test
imulb
inc
pop
arpl
dec
jp
into
mov
ss
cmp
enter
lahf
jmp
xchg
aad
mov
adc
and
xor
rcr
adc
adc
xchg
iret
movsb
repnz
adcl
or
or
mov
add
mov
add
bound
inc
outsl
int3
cmc
enter
aam
add
mov
test
lcall
int3
push
ja
mov
dec
adc
scas
or
in
pop
pop
xchg
movsb
push
mov
jecxz
or
inc
cmc
inc
jl
mov
aam
pop
mov
inc
xchg
xchg
cmpsb
sbb
out
inc
js
addr16
cmp
push
fxch
aad
out
jecxz
iret
das
and
jp
xchg
adc
scas
pop
outsl
lods
xor
lcall
xlat
ljmp
fs
cmp
movsb
ja
cmp
das
outsb
insb
xchg
test
bsf
mov
xchg
push
and
adc
ja
fists
sbb
xor
mov
jae
mov
and
push
in
scas
adc
add
xor
aam
or
jb
jbe
xor
push
iret
pop
inc
daa
int3
xorb
fisubl
xchg
in
or
lret
mov
sbb
sti
sbb
lcall
in
loope
cmp
sbb
out
cmp
inc
add
sub
dec
inc
inc
xchg
xor
or
in
and
jmp
push
jmp
lret
xor
pop
add
lret
dec
loopne
push
idivl
outsb
jnp
jo
lahf
and
in
call
leave
pusha
push
div
mov
into
ret
popf
insb
fistpl
adc
pusha
fistpl
nop
xor
arpl
movsb
mov
sbb
sub
ss
inc
fildl
in
call
sub
fnstsw
ds
aad
gs
movsb
mov
jmp
inc
xchg
nop
in
mov
and
sbb
push
iret
push
mov
xor
mov
pop
pop
aam
loope
adc
mov
lds
cmp
jns
stc
outsl
push
loop
mov
scas
mov
je
inc
das
inc
xchg
push
scas
mov
dec
data16
andl
jge
sahf
jmp
mov
icebp
loope
sbb
test
stos
sbb
clc
out
lock
pop
fsts
cs
cmp
out
stos
mov
les
test
out
sbb
add
out
mov
push
push
test
mov
jae
sub
idivl
sbb
and
lds
cmp
icebp
mov
aas
xor
xchg
out
das
repnz
es
in
inc
mov
cmpsl
push
lahf
dec
xchg
and
fnsave
lea
fldl
std
push
ficompl
clc
push
xor
sub
add
fsts
mov
lahf
adc
into
jnp
pop
out
lods
into
movsl
dec
scas
jb
sbb
adc
or
jl
dec
adc
loopne
cmp
aas
icebp
sbbl
sbb
adc
cmpsb
mov
test
inc
cwtl
mov
cmpsl
xchg
int3
loopne
std
xor
adc
shrb
mov
xor
cmp
in
call
jns
lea
lcall
repz
push
filds
jo
fwait
mov
shlb
jg
pop
pop
mov
js
cwtl
add
sub
adc
mov
roll
lcall
dec
xchg
dec
int
xlat
fdivrl
repnz
adcl
dec
add
stos
das
push
pusha
mov
push
mov
int3
pop
aaa
jb
nop
in
xlat
scas
faddl
ror
sub
jge
lods
jb
lds
bound
adc
fsubr
out
mov
int3
loope
dec
adc
lds
sub
jns
les
jmp
out
pop
add
sarb
mov
xor
xchg
inc
push
pop
and
enter
lahf
das
or
out
fst
cmp
sbbb
push
ja
scas
aaa
add
aam
cld
shrb
cmpsb
mov
dec
fcmovnu
inc
in
test
fdivrs
divb
and
mov
scas
sbb
mov
mov
jne
insl
adc
and
push
mov
push
aad
bnd
adc
mov
pop
pop
pop
xor
adc
pop
inc
fisubl
dec
scas
dec
dec
nop
aas
mov
js
dec
pop
and
sub
in
stos
pop
and
mov
xor
dec
xchg
mov
call
push
arpl
push
pop
pop
pop
lret
rclb
nop
je
sahf
jnp
inc
repnz
out
ja
in
fmull
mov
or
inc
rorb
push
jo
mov
push
pop
pop
out
jb
js
xchg
int
aad
cmc
push
sub
cmpsl
xorb
sub
test
cmp
out
lds
inc
mulb
push
mov
xchg
cwtl
test
lods
lahf
lods
lret
and
xor
xchg
inc
icebp
lods
mov
iret
xchg
inc
fistpl
std
inc
scas
pusha
adc
popa
mov
push
ficoms
mov
in
adc
push
jecxz
roll
subl
lods
test
imul
dec
add
out
xor
sub
cmpsl
rol
sbb
sbb
imul
lds
jb
pavgw
out
mov
jge
sti
adc
xor
or
icebp
mov
pmaddwd
imul
imul
ret
fdivl
add
push
xchg
jle
inc
sahf
inc
cs
mov
iret
loopne
ja
loop
and
cmpsl
scas
insb
pop
xor
dec
fld
and
dec
pop
cmpsl
mov
repz
inc
inc
pop
dec
cmp
and
test
add
dec
xchg
ret
clc
loopne
sub
mov
pop
sub
xor
push
out
pushf
repz
das
push
add
into
push
je
push
enter
lods
jbe
subl
mov
push
push
addb
push
mov
xor
dec
pop
pop
mov
xlat
mov
in
push
adcb
inc
sbb
or
std
dec
popf
clc
shlb
xor
bound
sti
jbe
fstl
adc
jne
xchg
adc
mov
inc
jno
jmp
rcrl
fs
push
popa
jecxz
cmpb
loop
jecxz
xlat
js
mull
shrl
fstpl
popf
mov
popf
leave
mov
icebp
call
ljmp
mov
call
mov
push
js
push
mov
push
test
insl
inc
adc
out
xor
adc
lahf
icebp
inc
lcall
imul
je
and
jno
out
nop
mov
push
jmp
dec
push
sahf
cld
lods
mov
leave
lahf
js
xchg
sarl
xchg
push
mov
stos
andl
add
push
nop
and
test
mov
outsb
dec
out
loope
shll
pop
mov
jne
es
fsubrs
repnz
cmp
xchg
or
fidivrs
decb
hlt
fdivs
jp
roll
dec
test
scas
rorb
pushf
adc
addb
xlat
mov
loope
ja
mov
inc
aam
cli
loop
js
pop
aas
loop
in
cmpsb
cmp
rol
xor
adc
cs
push
test
xchg
sbb
test
loopne
mov
rcll
and
mov
lcall
jl
xor
pop
cmp
fcomp
ret
ss
xor
and
adc
or
push
xor
sbb
lods
ss
pop
bound
or
inc
push
testl
xchg
xchg
ds
or
repz
ret
in
ss
cs
bound
mov
into
pop
jg
mov
sbb
cmp
add
outsb
xchg
mov
and
sub
dec
call
sarl
mov
cmp
ss
mov
jmp
cs
scas
add
mov
sub
and
push
outsl
dec
sbb
add
mov
xchg
pmaddwd
aaa
xor
sahf
jb
pop
test
inc
sub
adc
xchg
cs
shrb
jno
and
sub
scas
adc
inc
adc
fcoms
repnz
call
cmp
ljmp
xchg
inc
mov
xor
adc
add
sbb
test
or
stos
jecxz
ss
out
xor
fwait
aam
push
divb
and
lahf
inc
xchg
imull
inc
adc
mov
and
sub
add
sub
push
mov
and
inc
insb
sub
and
adc
adcl
sbb
scas
rcrb
pop
mov
imul
test
jge
mov
and
dec
pop
dec
std
inc
sub
aam
xor
scas
lret
add
insb
inc
mov
fdivrl
inc
enter
or
in
sub
jle
cmp
sub
stos
xor
sub
mov
cmp
rorb
popf
jl
mov
lfs
push
sti
jno
js
xor
and
sbb
aaa
pop
inc
rcr
jo
jp
out
dec
dec
sub
xchg
add
pop
jecxz
insb
push
arpl
fsub
jno
rol
lcall
add
cmp
int
jmp
mov
insl
or
add
shrb
sbb
loopne
gs
sbb
xor
pop
push
setle
out
jo
mov
or
jns
inc
push
lcall
pop
mov
pusha
imul
dec
test
cmp
les
sub
cmp
sub
popa
cltd
imul
push
inc
pop
mov
mov
inc
mov
jb
rcrl
dec
and
ds
sbb
dec
mov
sbb
push
pop
out
mov
aaa
lcall
add
jp
mov
mov
lret
jo
add
sub
mov
imul
push
sbb
mov
test
imulb
cli
gs
jnp
pop
adc
jp
lahf
mov
out
mov
or
mov
orb
iret
jo
pop
push
fdivrl
jmp
push
jecxz
mov
inc
jmp
mov
dec
or
into
and
add
aaa
rclb
inc
notl
movsb
adc
ret
lret
sub
lret
or
int3
repnz
xor
push
test
loope
dec
movsl
mov
dec
orb
jge
outsb
xor
mov
mov
mov
in
lcall
jae
movsl
pop
jbe
mov
mov
call
jle
or
xor
rcll
in
fbstp
adc
fs
jp
mov
inc
addr16
xchg
test
stos
cmp
inc
test
mov
bound
inc
add
jbe
push
add
ss
or
lock
inc
jg
in
dec
ds
inc
push
xchg
sbb
cltd
cmp
outsl
push
mov
jns
dec
je
cmp
and
fwait
xchg
dec
ds
xlat
sbb
sarl
adcl
or
lcall
xchg
jne
sub
or
pusha
imul
fwait
pop
and
sub
sahf
pop
sarb
popf
stos
es
leave
movb
xlat
daa
imul
adc
push
jp
cmpsb
mov
xchg
xchg
lret
inc
sbb
inc
addr16
push
push
push
push
push
adcl
jl
mov
out
inc
loopne
mov
imul
jno
push
and
stos
sub
xor
arpl
imul
sub
mov
inc
andl
pop
sub
pop
adc
lret
cmpsb
add
fistl
cld
push
xchg
imul
xchg
mov
pop
pushf
int3
xchg
cmp
pop
mov
xor
aas
cs
xchg
or
inc
clc
in
rcrb
dec
mov
and
mov
jb
inc
inc
aaa
or
fldenv
mov
push
into
popf
cli
imul
cmp
jge
sbbl
nop
es
or
mov
movsl
movsb
sbb
dec
pop
inc
test
dec
sub
push
xor
xor
add
jecxz
movsb
sbb
sbb
cs
into
aas
jb
cmp
sbb
inc
subb
sub
or
adc
stc
mov
lahf
pop
jp
mov
cs
out
fimull
and
gs
into
push
dec
push
xor
mull
aam
ljmp
sub
mov
xchg
into
shl
arpl
sar
incl
in
jg
add
lcall
pop
divl
or
int
or
sbbb
dec
pop
ficomps
jle
dec
inc
and
daa
pop
xchg
cmpb
aas
cmpsb
and
sahf
jecxz
xlat
test
pop
lret
or
es
mov
push
test
lret
fwait
dec
xchg
xchg
push
push
xor
push
push
jno
stc
ds
xchg
enter
push
mov
jge
push
xchg
fisubl
xchg
jl
add
lret
mov
faddp
pop
loopne
mov
imull
dec
cmp
pop
add
int
icebp
stos
fdivr
and
dec
data16
pushf
fbld
in
cmp
les
sbb
stc
pop
sub
xchg
repz
mov
ret
insb
push
cmp
inc
imul
out
pop
stos
push
sub
leave
pop
mov
sbb
mov
hlt
les
inc
mov
pop
push
cmp
push
dec
sub
xor
fiaddl
icebp
inc
xchg
cld
leave
lock
mov
mov
pusha
stos
leave
adc
addb
add
out
jbe
pushf
aam
mov
push
push
out
mov
ficompl
stos
pop
mov
ja
push
iret
subl
pop
idivb
aad
popf
ja
mov
pop
arpl
ss
or
or
mov
movsl
inc
sub
fscale
pusha
movsb
dec
ret
add
sbb
test
push
mov
ret
inc
dec
popf
push
and
mov
lods
pop
rorb
in
dec
mov
jmp
lret
in
out
push
outsb
mov
adc
iret
divb
into
outsl
pop
mov
lea
scas
dec
bound
stc
jecxz
test
mov
dec
test
dec
int3
in
in
pop
mov
nop
mov
mov
xor
cmp
cmp
jne
and
xchg
inc
popf
inc
pusha
jne
mov
adc
repz
pop
cmp
je
push
sub
adcl
adc
mov
test
ljmp
sub
pop
mov
cmp
loop
push
js
cmc
push
dec
mov
dec
add
mov
inc
dec
push
mov
sub
mov
popf
pop
dec
xor
mov
mov
cmp
dec
pop
fldenv
pop
mov
lock
rclb
push
xchg
lret
aam
out
pushf
out
fdivl
inc
adc
push
out
in
jo
mov
seto
sub
in
repnz
fucomi
mov
das
adc
movsb
adc
xchg
mov
dec
jecxz
pop
imul
stos
xchg
rorl
popa
das
xor
jnp
popa
punpcklbw
sbb
jnp
jle
paddw
lret
dec
aad
mov
jecxz
leave
mov
jnp
shrl
cltd
and
jae
enter
push
mov
int
push
sub
xor
jae
addr16
ret
inc
mov
hlt
or
popl
sub
leave
fistpl
cs
popa
push
dec
aad
je
push
cmp
aad
outsb
mov
or
jl
outsb
dec
dec
arpl
ja
sub
hlt
xchg
add
adc
cmp
mov
mov
cs
jbe
jp
andl
add
or
xchg
push
addr16
cltd
repnz
and
jecxz
movsl
or
divb
addr16
scas
xchg
jl
mov
rclb
mov
lock
aaa
xor
rcll
xor
lods
nop
mov
lods
repz
mov
mov
lods
jo
sub
sbb
add
add
pop
xchg
jge
fabs
repnz
cmc
stc
jp
es
fwait
lds
and
xor
sbb
aad
je
mov
stos
adc
fldcw
fiadds
imul
push
jo
and
inc
call
jne
push
and
mov
sub
mov
dec
jns
mov
and
repz
aam
dec
fstp
mov
cmp
fcomps
and
mov
push
inc
hlt
pop
clc
dec
adc
enter
cmp
mov
mov
lret
dec
cmpsb
jns
mov
sbb
sub
daa
sub
adc
add
sub
in
fs
jo
iret
stos
pop
mov
in
push
aam
int
xchg
mov
jb
cmp
pop
or
mov
xor
mov
add
flds
adc
cltd
movsb
xchg
xlat
jg
pusha
pop
jb
aad
sbb
inc
aas
dec
dec
stos
fidivl
imul
std
sbb
imul
xchg
and
fists
in
sub
and
repnz
cmp
movsl
sub
stos
dec
pop
and
icebp
std
sub
mov
fidivl
fucomi
call
pop
sar
jp
cli
dec
cli
fwait
cmp
mov
jp
cmpsl
hlt
ljmp
and
jne
dec
mov
xor
jmp
mov
sub
cld
js
add
cmp
insl
pop
imul
rorb
pop
xor
add
add
pop
sub
xchg
fdivrp
pop
dec
mov
dec
xchg
sub
std
cmp
mov
jo
add
cltd
sbb
mov
cmpl
xchg
movsl
test
cmp
stos
cltd
sub
ror
sti
xlat
jnp
push
xlat
stc
ret
pop
lret
mov
sbb
dec
dec
inc
popf
push
nop
hlt
xor
mov
fistpl
or
scas
jnp
lods
and
mov
mov
add
mov
fmuls
xchg
aad
inc
push
jp
lret
jae
add
xor
xchg
cmp
cmpsb
dec
push
inc
add
fmuls
dec
or
test
shlb
jge
xchg
push
js
fidivs
bound
pop
add
or
inc
mov
sub
lods
pop
fbld
dec
shrl
push
xor
push
inc
loopne
test
rcl
clc
fists
push
testl
pop
notb
test
lcall
fcomps
or
mov
pop
xor
leave
fiadds
lock
cmp
shlb
mov
cmp
lods
jge
call
add
fisubrs
adc
in
call
inc
movsb
jmp
das
xor
push
xchg
movsb
inc
inc
push
loop
stos
enter
icebp
test
adc
ret
lahf
aad
add
cli
ljmp
add
cmp
pop
pop
cmp
repz
xchg
dec
imul
jns
or
push
daa
out
les
invd
sahf
into
jecxz
sbbb
add
dec
mov
dec
push
mov
jo
das
push
insl
add
outsl
xchg
and
pushf
lods
cmp
addr16
push
push
jmp
or
or
add
inc
mov
inc
dec
cmp
shll
mov
fcoms
or
ficoml
push
cmp
and
lods
dec
sub
dec
js
push
sub
repnz
add
cmpl
adc
imul
fbstp
jl
push
xor
dec
test
xor
push
pop
and
lock
jl
or
adc
jno
adc
out
sub
aaa
or
test
cmpsl
cmp
lcall
int
lods
add
and
leave
xchg
leave
adc
test
mov
xor
gs
inc
xor
iret
fdivrl
xor
cld
out
movsl
xor
dec
pop
and
aam
or
es
loope
scas
pop
pop
fiaddl
dec
xchg
pop
xor
inc
daa
push
iret
jecxz
adc
or
ret
decl
rclb
inc
fcmovu
or
arpl
loopne
data16
call
iret
cmp
mov
cwtl
inc
xchg
std
gs
xchg
shll
rcrb
add
icebp
cmp
mov
aam
mov
imul
andb
jecxz
sbb
imulb
push
pop
inc
jb
pushf
inc
lods
outsb
push
test
sub
mov
test
sub
jp
clc
lahf
popf
cltd
and
pop
cmp
jge
xor
pop
repz
or
or
push
enter
mov
jae
mov
sub
stc
cmp
xchg
pop
loope
icebp
adc
iret
pop
pop
sbbl
add
xor
mov
cmpsb
xchg
sub
test
imul
imul
incl
jge
cmpb
pop
jmp
lret
ret
shll
xor
jne
out
mov
pushf
and
out
std
fcmovnb
dec
pop
mov
cs
mov
mov
data16
or
in
mov
and
adc
fldenv
jge
aam
movsl
dec
add
mov
xchg
dec
push
shrb
stc
pop
sub
mov
in
stos
cmc
repz
xchg
xchg
ss
ljmp
cmp
xor
dec
jb
ret
cmp
mov
jle
xchg
push
jl
pop
loopne
hlt
mov
testl
pusha
in
cltd
cmp
call
adc
push
jge
cmp
sbb
scas
mov
jmp
aas
movsl
das
int
ret
jb
subl
into
mov
adc
pusha
cmpsl
aad
adc
cmpsl
scas
imul
add
mov
xchg
inc
leave
push
mov
shlb
addr16
or
inc
iret
push
insb
jo
inc
mov
popf
cmpsl
xchg
icebp
sub
ret
sbb
pop
or
inc
xor
test
push
sbb
fs
imul
repnz
jno
xchg
push
cltd
les
jp
and
divb
mov
inc
dec
sbb
or
clc
push
aaa
jno
movsb
cmp
xchg
jl
mov
xlat
push
lret
mov
cwtl
iret
dec
repnz
sub
movsb
mov
pusha
shlb
int
enter
loop
out
pusha
addr16
sub
ljmp
adc
push
and
outsb
js
fisttps
stos
icebp
aad
fs
aad
mov
leave
int3
loope
hlt
sbb
sbb
rorl
rorb
scas
mov
adc
jae
and
mov
testb
icebp
nop
popl
xchg
sbb
mov
jns
add
inc
mov
jmp
push
push
xor
je
arpl
loope
xor
dec
ror
adcl
lods
sub
movsb
pop
call
and
add
jge
into
call
mov
mov
cmp
jmp
int3
lods
lret
mov
call
cmp
jo
xor
rcrb
jnp
pop
mov
cmp
lcall
int
call
adc
xor
es
fwait
popa
or
ret
leave
and
imul
or
out
push
xchg
das
out
jle
cmp
xor
leave
out
pop
xchg
enter
sub
xchg
fisttpl
xchg
aaa
insl
pop
push
xor
rcrb
div
xchg
or
mov
ret
in
add
test
mov
mov
lret
bound
aaa
push
mov
popa
lahf
loop
jecxz
cmp
xchg
jge
test
outsl
lcall
movsl
xor
push
js
push
mov
mov
insb
stos
fcmovu
imul
mov
bnd
ljmp
ret
inc
shrb
lcall
fimull
shll
cmp
xchg
lahf
jg
push
lods
inc
repz
adc
mov
mov
adc
fists
sbb
jmp
sub
test
fsub
loope
and
ds
sub
fadds
dec
das
adcb
aaa
bound
pop
sub
push
push
push
ffree
xor
jb
pop
cwtl
iret
arpl
subb
xor
mov
cmp
cmpsb
pop
subl
inc
push
adc
push
std
add
pop
shlb
pop
jle
pop
sbb
mov
pop
sbb
xlat
lods
jmp
xlat
or
lret
cmp
jnp,pt
add
mov
adc
call
mov
sub
adc
pushf
mov
scas
mov
mov
jnp
pop
sub
push
les
and
mov
test
dec
xor
cwtl
iret
lods
xor
add
cmp
loopne
jb
inc
mov
xchg
or
inc
pop
cmp
addr16
cli
test
js
push
push
mov
fisubrs
fnsave
cmp
test
xlat
jle
lock
add
sbbl
aad
ficompl
int
int3
push
dec
stos
mov
adc
fwait
jbe
mov
cmp
nop
scas
mov
xchg
push
in
jg
sub
repz
mov
xor
push
xchg
add
and
lods
jns
mov
or
icebp
cs
lods
cmp
inc
les
mov
and
lock
xor
shrb
mov
mov
mov
push
dec
dec
scas
inc
mov
lds
out
pop
int3
mov
sbb
push
mov
jl
scas
popf
and
push
dec
repnz
sbb
mov
and
or
ficoms
jo
inc
xchg
push
pushf
or
test
rsm
lret
addr16
enter
stos
push
je
imul
lock
adc
arpl
cmp
dec
and
in
add
cs
mov
mov
pop
xchg
mov
mov
stc
pop
bound
nop
cmpsl
xor
lods
call
inc
dec
push
jnp
sbb
pushf
aad
in
add
add
push
test
out
sub
das
or
adc
je
xchg
add
stos
idiv
mov
push
scas
arpl
fimuls
int3
roll
dec
lods
add
or
push
fwait
sbb
adc
movsl
lret
sub
mov
bound
popf
rorb
add
cmp
int
sub
mov
sbb
add
movsb
pop
test
pop
push
adc
aas
inc
std
inc
fistpll
cmpsb
push
jmp
push
stos
inc
add
add
aad
xchg
adc
mov
or
ret
fisubrs
stc
imull
mov
jns
das
lahf
sub
xor
jmp
das
lds
xchg
xor
dec
aam
mov
loop
mov
and
outsl
outsb
push
mov
clc
movsb
stos
cmp
sbb
or
xchg
pusha
sub
xlat
xchg
xlat
fstpt
mov
loope
idivb
dec
xchg
cld
sbb
cmpsb
lret
lds
ret
inc
popl
movsl
xchg
jne
add
decl
jbe
cli
in
insb
mov
int
mov
and
aas
sarl
scas
sub
xchg
movsl
scas
stos
daa
cmp
xchg
shl
lret
xor
push
fwait
mov
data16
xchg
rcrb
xor
ss
mov
pop
pop
sarl
cmp
push
movsb
fcomi
cmc
adc
mov
movb
sub
xchg
push
test
jae
xor
nop
rcrl
xchg
adc
in
pushf
es
jle
lahf
lea
scas
call
and
es
mov
pop
cmpsl
mov
insl
jne
addr16
sbb
and
test
and
mov
cmp
js
sbbl
mov
aaa
push
fs
push
clc
mov
mov
aas
imul
xchg
ficomps
inc
push
xor
jno
fadd
xchg
fistps
cli
in
movsb
cmp
stos
mov
daa
test
jmp
dec
fdivrl
negb
sub
xchg
std
mov
pushf
mov
lods
cmp
in
inc
push
rclb
and
jo
jl
add
psrld
adc
sub
adc
cmpl
lock
pop
and
jne
inc
roll
or
ret
pop
jecxz
sbb
addr16
mov
adc
sub
pushf
in
jle
js
aam
movsl
aam
aaa
imulb
sub
fcmovnbe
rcll
fdivrl
ror
jecxz
lcall
cmp
inc
lods
cltd
xchg
jmp
xchg
mov
add
sbb
and
xchg
cmp
ret
out
iret
add
inc
pop
dec
pop
mov
jbe
fs
or
jns
mov
adc
add
adc
in
subl
hlt
mov
push
xchg
mov
jl
pop
cmp
or
loop
repnz
stc
push
faddl
inc
testb
add
ret
or
pop
mov
jp
out
add
leave
ds
cmp
das
xchg
mov
sbb
orb
jmp
adc
mov
sbb
xchg
mov
mov
cs
adc
sbb
pushf
inc
icebp
mov
xchg
cmp
dec
push
xchg
sahf
movsb
xlat
loop
mov
mov
mov
cmp
mov
lods
jmp
mov
repnz
add
loope
push
arpl
pop
mov
xchg
cmpsb
xor
loope
imul
xor
loope
sub
jg
aad
mov
add
clc
xchg
fcmovnb
or
add
mov
inc
mov
fsub
imul
sbb
lods
and
insb
mov
push
sahf
shll
cmpsl
mov
out
test
shrb
iret
les
int3
adc
cmpsl
add
push
gs
inc
sub
lods
dec
cmpsl
add
inc
dec
fldenv
push
int
add
adc
fdivrs
jnp
nop
fcoml
add
sbb
inc
xor
sub
add
aaa
xor
xchg
mov
sbb
adc
xor
rclb
sbb
jbe
rorb
mov
adc
leave
shl
mov
xchg
lcall
xor
daa
icebp
shlb
or
sbb
shlb
loope
mov
mov
hlt
mov
and
insb
iret
mov
mov
push
mov
inc
daa
rolb
adc
add
or
mov
mov
inc
push
int
clc
dec
sbb
push
jo
push
sbb
adc
jbe
out
sub
stos
int
add
mov
ds
mov
lods
and
push
inc
orb
fidivl
pop
sbb
imul
xchg
pop
xor
dec
incb
jnp
call
lret
push
in
dec
cmp
xchg
daa
pop
rolb
iret
mov
in
popf
fwait
popf
add
test
xor
jbe
mov
xlat
jnp
lcall
sub
fidivs
jbe
sub
mov
cmp
lods
test
imul
push
or
jmp
jo
mov
out
aaa
movsb
xor
lds
mov
cmp
and
int
mov
ljmp
insb
mov
pop
push
jbe
and
sbb
push
add
cmpsl
sub
adc
sbb
lcall
dec
je
mov
sbb
pop
stos
loopne
daa
sub
mov
xor
movsb
sub
add
int
pop
outsl
sub
xchg
add
outsl
xlat
fistl
or
mov
gs
imul
jle
in
jp
mov
push
inc
push
dec
mov
addr16
xchg
xchg
movb
jno
jnp
aas
gs
repnz
adc
xchg
jge
test
xchg
cwtl
add
xchg
inc
cld
aas
and
repnz
lods
pop
outsl
fadds
arpl
adcl
daa
das
jp
testl
shlb
add
inc
inc
and
test
out
clc
sbb
adc
pop
adc
gs
fs
rcr
sahf
push
pop
push
test
jnp
fcomp
push
std
rorl
pop
movsb
jle
push
and
sub
fldl
cltd
andl
pop
arpl
in
mov
pop
loop
jae
jecxz
add
push
sub
icebp
fldl
test
icebp
test
mov
xor
jnp
shll
stc
movsb
lret
mov
mov
lods
or
jb
pop
mov
mov
aas
fnsave
jnp
xchg
rorl
add
ret
dec
xchg
push
cmp
in
sub
ljmp
cmpsl
imul
sti
inc
push
mov
mov
jmpw
pop
pushf
xchg
mov
jge
mov
sarl
scas
pop
cwtl
jecxz
adc
sbb
js
mov
push
mov
mov
outsb
stos
or
mov
aam
mov
shl
cmp
daa
mov
rolb
or
dec
cltd
in
aas
rcll
xor
and
orb
cs
add
add
push
add
pop
add
fbld
ja
and
movb
in
or
jp
scas
push
imul
int
cld
sub
and
push
inc
mov
daa
lcall
je
push
push
icebp
popl
pop
inc
cmpsl
sub
jne
scas
jne
mov
int3
fs
pop
sub
insb
or
pop
add
outsl
dec
cltd
test
xchg
nop
adc
movl
adc
push
add
out
mov
push
testl
and
push
sbb
push
pop
mov
in
clc
mov
mov
ret
add
mov
dec
outsl
cmp
stos
push
xchg
fwait
sbb
push
push
xor
test
sbb
lock
and
cwtl
add
mov
pop
push
sti
sbb
add
ficoml
mov
lds
mov
mov
mov
lods
mov
sbb
pop
test
mov
nop
jmp
mov
outsb
xor
loopne
repz
sub
sub
ljmp
lock
mov
pop
fndisi(8087
push
les
fildl
int3
stc
fs
dec
aad
test
pop
cmp
sahf
in
lods
test
jp
xchg
sarl
insb
jl
push
bound
stos
dec
ret
lods
mov
and
lods
or
sarl
ret
sbb
jae
sbb
out
pop
dec
call
dec
and
push
mov
inc
inc
lret
dec
pop
push
cmp
push
cmp
aaa
pop
js
sub
push
xchg
or
and
loope
je
push
mov
jbe
cli
daa
pop
xchg
push
inc
inc
sbb
or
pop
out
mov
les
daa
cmp
dec
sbb
mov
insb
imul
shll
mov
sbbb
test
bound
out
sub
clc
jns
in
inc
fldt
aas
add
sbb
xor
andb
mov
add
lahf
xlat
imul
fiadds
mov
stos
inc
sbb
cmp
mov
and
and
ja
xchg
je
jbe
in
add
clc
icebp
aaa
mov
or
stos
xorb
push
inc
out
ja
daa
xor
add
dec
sahf
jecxz
pop
outsb
repnz
xchg
lea
cmpb
mov
inc
insb
lret
cmc
sbb
dec
pushf
cmpsl
xchg
push
jne
mov
push
inc
out
or
lcall
clc
xchg
and
mul
imul
es
jae
pop
clc
and
inc
sbb
fldcw
xor
jp
bound
dec
adc
xchg
je
push
pushf
fwait
cmpsb
vcvtsd2ss
insb
xorl
mov
inc
lcall
popa
mov
arpl
stc
mov
pop
jns
lods
hlt
enter
pop
in
sub
jp
pusha
xchg
call
push
jge
mov
jb
mov
movsl
mov
cld
fsubl
leave
jp
or
dec
subb
xor
mov
mov
mov
jno
clc
aad
push
enter
test
or
ljmp
das
dec
xor
in
and
cltd
and
cmovns
fidivs
push
adc
out
inc
test
test
push
aaa
jmp
dec
cmpsl
mov
adc
mov
and
push
aas
mov
jbe
cmc
jle
inc
jb
mov
fsubl
popa
push
lcall
push
mov
push
ja
call
sub
mov
leave
dec
sahf
aam
mov
mov
dec
or
sbb
sbb
add
out
iret
pushf
dec
sub
mov
pop
js
loope
mov
sub
sub
jge
xchg
outsb
std
and
es
add
mov
fisubl
mov
iret
das
push
jge
fsts
push
jnp
hlt
jo
inc
stc
ja
cli
aaa
push
lahf
mov
lock
inc
mov
dec
sbb
xchg
inc
stos
cmp
cmc
cmpsl
insl
push
cmp
int
sbb
ss
cli
cmpsl
add
cmp
xorl
jmp
mov
aaa
mov
popf
push
push
adc
mov
out
int
lods
xor
fwait
push
imul
cs
stc
push
pop
out
cmp
sbb
pop
jp
mov
xchg
insl
add
inc
sbb
in
mov
shrb
adc
xchg
sub
inc
adc
add
pushf
negb
push
pop
sbb
test
sub
sub
hlt
or
pop
fbld
popf
xchg
jg
outsb
xchg
pop
cmp
jge
loopne
xchg
mov
or
jns
out
xor
jne
push
add
or
push
lcall
adc
xchg
mov
je
cmp
ss
nop
pop
mov
xlat
idiv
push
pop
mov
ds
leave
loope
xchg
lss
mov
adc
sti
sahf
jne
fwait
cli
xor
xchg
jo
iret
stc
push
xchg
push
xchg
or
adc
mov
sub
notl
xchg
jp
pusha
push
repnz
iret
pop
enter
jnp
jge
jge
adc
push
and
clc
lods
push
ret
test
xlat
loope
xor
cmp
jp
cmp
in
push
mov
popf
xchg
lods
push
mov
stos
xchg
mov
sbb
gs
flds
xor
insl
mov
push
push
cs
lea
dec
pop
subl
test
and
cli
push
cld
mov
lock
jecxz
inc
aaa
sub
xchg
std
jp
xchg
inc
mov
sbb
rcr
jp
cmp
popf
cltd
jmp
pop
add
and
push
rcll
jnp
cmpsb
and
sub
sub
xchg
cmp
inc
cmpsl
loop
mov
add
loop
pop
sub
adc
inc
dec
cli
popf
mov
jbe
dec
mov
adc
dec
pop
in
pop
mov
mov
std
sub
dec
jno
jo
push
inc
call
stos
cltd
add
mov
cs
mov
fs
rdmsr
inc
dec
pop
cld
aam
fs
pop
cwtl
lret
test
mov
int
cmovbe
push
xchg
sub
cli
repz
pop
mov
pop
cmc
insl
ja
inc
lahf
insb
fistpll
push
into
popf
cli
cwtd
shl
sbb
ret
pushf
out
mov
inc
stos
jae
mov
pop
push
push
adc
fistpll
outsl
dec
xchg
mov
jecxz
aas
jge
xchg
pop
jmp
sahf
push
in
repnz
int3
pop
add
gs
cmpsb
adc
inc
shlb
rcll
push
and
jp
adc
inc
sti
xchg
gs
xor
sub
push
cmc
jge
imul
and
push
call
add
jp
pop
fdivs
and
jmp
xlat
jp
test
lods
loop
xchg
jns
das
mov
mov
lcall
add
int3
push
fwait
pop
inc
cmp
sbb
aaa
xor
or
mov
add
stc
xchg
xor
cwtl
dec
sbb
sti
mov
sub
mov
mov
pop
adc
ss
hlt
cltd
rcll
or
enter
pop
and
mov
das
sub
lods
mov
xchg
mov
xor
mov
cmpsb
aam
daa
mov
scas
inc
pop
hlt
mov
int
pop
push
jo
pop
test
cmpsb
xchg
and
xchg
lods
mov
add
sub
or
inc
je
and
dec
push
inc
mov
punpcklwd
or
and
call
xchg
jge
push
cmpsl
imul
and
ret
mov
xchg
outsb
cmpsb
leave
idivb
jno
mov
or
imulb
test
sbb
out
es
mov
aaa
je
sub
lods
pop
outsl
fbld
jge
rcrl
jl
mov
ja
idivl
int3
inc
mov
dec
enter
xor
icebp
sbb
cltd
pop
nop
stos
jns
jl
test
xor
mov
sbb
stos
adc
pop
imul
dec
push
jnp
stc
xchg
sub
sbb
pop
subl
aad
shrb
stos
rcrb
cmpsl
mov
les
jns
mov
idivl
pop
push
arpl
mov
inc
pop
xchg
jb
dec
rcrl
pop
adc
xor
fwait
out
test
pop
mov
xchg
cltd
add
ss
dec
fs
or
adc
ja
pop
lret
xchg
repz
cmpsb
adc
pop
inc
imul
pop
aad
adc
aas
std
pop
push
pop
jne
mov
test
cmp
push
cwtl
aad
sub
addb
pop
mov
jnp
rcpps
jo
push
fstl
mov
xchg
xchg
push
or
pushf
push
stos
cmp
cmc
jbe
sahf
sub
pop
mov
addl
roll
int
ss
xchg
and
aas
data16
mov
cwtl
fsts
adc
loopne
gs
pop
rolb
ja
stos
out
xor
xor
xlat
movsb
and
pop
jl
ds
mov
or
les
and
sub
sub
dec
out
arpl
sub
cs
rolb
and
fisttpll
cmp
pusha
push
mov
call
pop
in
push
sub
sbb
push
mov
push
dec
ja
testl
imul
pusha
pop
cltd
test
js
xchg
xchg
and
enter
in
cmpsb
push
add
adc
aam
jbe
add
sub
in
add
int
lcall
sub
xor
fs
and
pop
leave
js
shrl
js
das
cmp
dec
mov
fstp
push
add
fcoms
test
ret
cmpsb
pop
mov
and
xor
sahf
leave
mov
js
inc
or
dec
inc
fisubs
je
jp
xor
cmp
rcll
and
fdivr
or
xchg
sub
in
inc
bswap
or
pop
cmpsb
sbb
js
pop
fdiv
xor
mov
jo
pop
or
ljmp
and
lock
stos
pop
xor
mov
fsubs
xchg
out
cmc
loopne
outsb
sti
ds
out
mov
mov
mov
bnd
dec
pop
jb
pop
cmp
pusha
dec
jp
dec
mov
test
xor
push
push
cmp
in
mov
mov
xor
lea
movsl
out
add
dec
ljmp
daa
or
cmpsb
icebp
cmp
ljmp
xchg
lock
mov
jg
push
add
push
dec
lret
mov
fidivrs
dec
dec
movsl
push
imul
or
and
sub
xor
arpl
xchg
out
out
push
inc
lods
cmp
fsubs
adcl
dec
imul
mov
lahf
fidivs
arpl
mov
jno
call
sbb
jecxz
gs
push
pop
rcrb
mov
push
lret
push
cld
push
sub
rolb
sbb
neg
jge
aaa
into
cmp
xchg
mov
clc
mov
lret
dec
sub
das
push
dec
pushf
pop
stos
imul
stos
insl
bound
lcall
jno
mov
cmp
mov
popf
ja
sbb
loope
dec
cmp
mov
xor
mov
xchg
sub
adc
rcrl
insb
dec
lock
pop
push
mov
int
aas
inc
in
gs
or
push
mov
movsl
push
and
das
jmp
filds
or
xchg
pop
inc
mov
push
jle
dec
stos
adc
leave
or
jb
lods
or
out
and
add
sub
sub
in
push
mov
xchg
or
roll
ja
push
nop
pop
inc
in
sahf
icebp
test
inc
es
cli
mov
frstor
pop
mov
fists
dec
andb
aaa
and
inc
xchg
lret
lcall
push
inc
loope
sub
xor
cmpsb
rolb
dec
jle
rcrl
adcl
jo
icebp
pop
movsl
lea
test
xor
ret
push
xchg
fs
add
jnp
clc
ret
jns
leave
mov
pop
or
jp
sbb
push
je
lods
adc
push
rclb
leave
sti
jb
into
fsubrs
rclb
xchg
cs
xchg
xor
cmpsl
fs
jp,pn
xor
std
aam
aaa
roll
pop
imulb
scas
rclb
repnz
shr
xor
lods
loopne
mov
jg
leave
leave
mov
mov
mov
mov
inc
or
mov
jmp
loop
iret
xchg
mov
adc
push
cltd
inc
pop
call
fwait
xor
or
sbb
sub
pop
fimull
pop
adc
ljmpw
into
popf
adc
add
mov
outsl
push
paddd
inc
fstl
mov
jp
std
and
push
or
mov
dec
orl
fisubl
mov
ss
cli
adc
xorb
mov
inc
in
data16
sub
cmp
xor
xchg
pop
inc
pop
cmp
push
cmp
mov
sbb
pop
adc
jecxz
sub
inc
mov
bnd
push
adc
fcomps
out
mov
or
push
les
cmp
cwtl
cmp
xor
or
lods
push
test
pop
cmp
pop
incb
push
add
ret
es
mov
fcompl
movsl
sub
xor
in
pop
mov
notb
ljmp
mov
lods
dec
fdiv
sub
shr
jo
adc
je
test
roll
scas
sbb
inc
pop
and
mov
inc
enter
enter
cmp
pop
sbb
je
xor
add
sub
jbe
clc
in
jg
scas
mov
jnp
addr16
ja
sbb
jns
aam
sbb
rol
push
jmp
and
fiaddl
loopne
adc
xchg
jmp
xor
pop
add
add
pop
int
and
mov
out
pop
cmpsl
rolb
push
sbb
test
mov
call
aas
push
or
jo
cld
js
in
dec
ss
xlat
dec
out
into
data16
roll
jnp
popf
adc
pop
mov
mov
and
sub
test
data16
pop
push
aad
xchg
data16
gs
mov
and
mov
add
addr16
pop
adc
or
js
mov
dec
push
ror
add
jno
call
fldt
push
call
and
inc
xor
adc
ret
js
sbb
mov
mov
icebp
jg
mov
jmp
lcall
int
lcall
cwtl
adc
in
xor
inc
mov
jo
subb
es
ja
in
rorb
into
pop
sbb
dec
in
dec
repz
sbb
sbb
adc
add
xor
add
mov
dec
leave
push
es
call
jp
int
mov
cmpsl
les
mov
insb
mov
sbb
test
sub
stos
in
jmp
pop
les
mov
mov
cmpsl
in
ret
bound
aad
jne
js
movq
xchg
mov
in
cmp
pop
push
pusha
xchg
mov
cltd
lret
std
cmpsl
insl
jnp
inc
add
mov
jbe
mov
adc
movsl
into
pusha
jbe
xchg
and
test
sbbb
pop
mov
sub
das
test
sbb
push
fsubs
sub
pop
out
aam
mov
ret
inc
ficomps
cmp
mov
jns
jo
jge
add
test
decb
sbb
clts
data16
mov
inc
or
mov
inc
clc
cmp
loop
mov
push
and
cmpsb
jno
mov
shl
mov
push
aas
fildll
cmpsb
mov
test
into
lods
xor
dec
leave
and
rclb
xlat
clc
xchg
clc
inc
je
adc
and
sti
xor
push
stc
inc
xchg
dec
enter
lock
xor
mov
repnz
inc
cld
fnstsw
pop
or
jmp
cmpl
rol
and
test
push
pop
jmp
ret
xor
outsb
mov
lret
cmpsb
pop
xorw
or
push
xchg
repz
test
pushf
jp
xchg
inc
push
xchg
nop
lret
nop
sbb
lcall
nop
xchg
data16
jb
mov
mov
ja
pusha
xchg
fstpl
dec
fimuls
add
jl
roll
jle
mov
out
push
dec
jmp
loop
cli
fidivl
cmpsl
fbstp
mov
fisubl
fisttpl
out
imul
mov
dec
outsl
mov
add
jno
es
xor
fadd
mov
inc
ljmp
mov
lcall
out
ja
push
js
fwait
inc
sbb
jp
mov
add
cmp
fnsave
repnz
adc
jp
imul
xlat
mov
jge
xor
jl
jne
cmp
push
iret
pop
lcall
lcall
sub
scas
mov
insl
bound
adc
in
jl
loope
push
adc
test
cmp
dec
sub
jmp
and
sub
mov
push
adc
shlb
lret
dec
fmull
loope
in
mov
mov
fidivrl
mov
jle
pop
xchg
popa
push
rorb
cld
cmp
pop
xor
add
cs
dec
imul
pop
sbb
lods
lds
or
dec
in
push
mov
test
fldl
dec
mov
adc
jne
mulb
rcl
lea
inc
and
cld
mov
jbe
aad
and
pop
roll
mov
je
sub
stc
jmp
imul
repz
sbb
and
jno
dec
mov
sbb
stc
mov
jg
push
xor
dec
out
cmp
lods
aad
mov
cmp
test
and
xor
mov
cmp
add
iret
sbb
pop
or
cmpb
into
push
xchg
push
xor
adc
cmpsl
cmpsl
ficomps
adc
inc
or
jbe
outsb
xchg
push
es
and
lea
and
sbb
imul
jle
outsb
rorl
into
imul
push
pop
outsl
mov
iret
scas
pop
les
adc
aaa
add
push
mov
adc
xor
pop
jne
sahf
out
sti
cmp
xchg
data16
enter
cwtl
in
pop
fsub
xchg
xchg
cmp
xchg
sub
push
jbe
test
cmpsl
int
minps
cmpsl
jmp
cmp
decb
or
inc
dec
xor
pop
jb
test
aas
decb
stos
cmpsl
mov
mov
es
in
push
popa
inc
push
xchg
mov
les
das
pop
cmp
out
cmpsl
cmp
addl
cmpb
pop
scas
mov
sub
js
shll
cmp
pop
lods
stc
fidivrs
shl
lods
push
xor
jb
cmp
jecxz
or
push
xchg
movsb
push
loope
sub
sbb
jno
mov
sbb
sub
ljmp
sbb
faddl
mov
add
xchg
dec
pop
int3
push
add
inc
mov
and
pop
aad
fcompl
lret
rorb
push
xor
fdivl
push
bswap
lods
dec
imul
cs
dec
test
das
rclb
lock
les
pop
mov
loope
sbb
fadds
inc
cmp
mov
inc
add
jbe
add
hlt
jp
adc
jge
sub
int3
test
in
pusha
push
inc
and
jge
insb
mov
fcomip
cmpsb
xlat
or
or
sahf
es
test
mov
aas
fdiv
icebp
dec
jb
sub
dec
pop
jg
aad
and
aam
cmp
adc
shlb
mov
lea
sahf
xor
jnp
fistpl
mov
lea
dec
je
sbb
test
stos
repnz
cmpsb
xchg
mov
ja
add
xor
aaa
cmpsl
movsl
subl
mov
fdiv
cld
cmp
das
sub
cmp
dec
pop
mov
sbbl
mov
pop
jne
das
daa
inc
pop
cs
push
test
int
lods
mov
mov
mov
es
je
jne
mov
dec
and
mov
add
scas
rcl
popa
jnp
sub
cmp
shlb
int3
icebp
call
sub
pop
int
add
xchg
aad
in
rdmsr
int3
mov
push
cli
addb
sbb
iret
lods
pop
arpl
inc
pop
sahf
mov
cmp
pop
ret
mov
cmc
sub
mov
daa
aas
insl
dec
push
mov
inc
cmp
fwait
outsb
test
mov
adc
or
call
add
enter
fwait
jp
jno
jb
xor
fidivrs
push
xchg
cli
mov
daa
in
pop
scas
sti
sbb
aas
mov
pop
clc
dec
and
add
push
popf
aaa
sub
ret
roll
mov
scas
dec
movsb
fistps
and
cmp
jo
ja
mov
pushf
mov
stc
outsl
int
sub
mov
pushf
icebp
cmp
adc
fiaddl
cs
push
xchg
jmp
jns
sbb
xor
cli
ljmp
arpl
out
push
icebp
nop
sub
pushf
cmp
cmp
orb
sbb
adc
dec
jo
fbld
aaa
lock
cs
jg
aam
imul
sub
pop
pop
adc
shlb
push
jae
mov
mov
dec
lcall
test
fwait
test
fwait
and
ret
xchg
pop
loope
fists
push
sti
rorb
adc
aam
push
pop
mov
fistps
push
call
jnp
ror
sub
jne
outsl
mov
or
call
mov
mov
mov
hlt
xchg
and
add
lcall
jle
adc
std
and
inc
ljmp
fwait
sahf
pop
xchg
imul
push
cmp
fwait
das
push
xlat
push
sub
or
cld
cmpsb
bound
das
call
xchg
pop
aam
pop
repnz
dec
dec
pop
std
push
movl
or
xor
cmpl
test
jp
ror
mov
lcall
lea
stos
dec
ss
lea
int3
add
push
scas
mov
push
push
popf
dec
jb
lea
rcll
fisubl
pop
push
scas
mov
call
inc
inc
fisubrl
faddl
pusha
dec
orb
jmp
cs
push
pop
sbbl
repnz
mov
jne
fadds
xlat
adc
sub
or
out
cmp
ret
dec
sbb
sbb
push
das
jne
shlb
adc
rclb
repz
ljmp
icebp
lahf
xchg
sub
sub
aad
xchg
sti
iret
mov
es
mov
sub
les
xor
pop
imul
into
push
push
xor
into
and
gs
ror
mov
fwait
dec
sub
xchg
adc
inc
insb
fdivrl
in
pop
jo
mov
fwait
pop
sbb
mov
jle
sub
pop
jp
adc
out
jne
in
lods
mov
in
pop
lret
sbb
sbb
call
ficompl
mov
sub
fisubrl
fwait
push
jmp
hlt
cmp
mov
jmp
push
pusha
add
icebp
cmp
movsl
ljmp
out
insl
in
jp
push
mov
jae
dec
push
test
xor
fcomip
sub
out
jg
out
daa
ljmp
stc
dec
inc
sub
xchg
movsl
out
inc
sbb
push
sti
imul
into
test
call
xor
push
mov
push
xchg
push
adc
cld
xchg
push
lcall
mov
cmpl
scas
cltd
iret
lahf
mov
pop
mov
popf
pop
lret
pop
dec
xchg
inc
cltd
jp
jp
xchg
add
cli
sub
cli
stos
pop
or
popf
xchg
cld
jno
mov
dec
stos
add
nop
mov
loopne
push
adc
push
xchg
jb
ja,pn
mov
in
fdivs
sahf
adc
movsb
cmpsl
fwait
inc
loopne
shrb
or
pop
orb
gs
fprem1
lcall
test
js
or
sti
rolb
push
sbb
push
push
leave
xchg
jp
xor
xor
sub
das
movsb
xor
in
xchg
aaa
mov
add
cmp
popf
scas
scas
enter
xor
mov
sbb
repnz
das
in
stos
push
jae
cmp
incb
stos
cmp
mov
mov
cmc
sub
dec
xchg
sbb
push
adc
lods
cmp
fistpl
pop
dec
mov
pop
mov
add
int3
stc
jle
add
filds
mov
rcrl
cld
jb
push
fildll
sub
stos
push
nop
inc
cmp
in
push
sbb
adc
ret
sbb
xchg
dec
stc
and
iret
xchg
cmpsb
jb
fcoms
sbb
fwait
int3
sub
not
imul
fcomi
push
cmp
sbb
sbb
jne
stos
frstor
das
or
and
imul
lods
mov
mov
push
cmp
sbb
xlat
andb
xchg
mov
outsl
dec
or
sbb
push
add
jne
ja
fidivrs
dec
imul
jecxz
cmp
jg
ds
sarl
pop
push
add
jge
rorl
scas
push
fwait
inc
lods
push
movsb
in
cmp
bnd
adc
stos
arpl
xor
mov
push
add
sbb
adc
xor
mov
sahf
inc
jnp
into
mov
pop
jae
aad
cs
dec
push
mov
dec
inc
sbbl
mov
jle
ror
xor
pushf
jg
jmp
out
ficomps
scas
xchg
fwait
mov
stos
adc
pop
mov
cmpsb
dec
pop
divb
jmp
fisubrs
in
cmp
sbb
in
jbe
add
aaa
or
std
mov
mov
stos
sbb
jle
add
sahf
push
icebp
cli
mov
xor
xor
jb
jle
es
std
orl
cld
cmp
sahf
add
mov
orb
xchg
addr16
cmpsl
add
hlt
arpl
nop
hlt
add
fmul
and
pop
cmp
lock
cwtl
repnz
sub
aaa
dec
and
or
orb
adc
fmulp
adc
push
sbb
inc
xlat
nop
add
or
dec
cmp
js
mov
pop
mov
adc
xor
add
jb
dec
rcl
enter
outsl
mov
jecxz
push
pop
jns
cmp
bound
pop
movsb
fldl
or
mov
and
loopne
xchg
hlt
ljmp
sbb
cmpsl
push
xchg
adc
xchg
jl
dec
ret
inc
push
sub
adc
cltd
shrb
imul
push
jno
fnstcw
dec
push
aaa
out
pop
addr16
jno
aaa
jb
repnz
add
aam
stc
popf
or
jns
out
scas
and
fmuls
call
push
and
inc
sbb
lahf
out
sti
scas
mov
ret
lahf
pop
sbb
daa
lds
pop
clc
pop
sub
push
in
test
dec
add
outsb
sahf
push
jne
pop
scas
sub
fs
mov
ja
push
push
fildll
aaa
test
sbb
into
inc
xor
sub
pusha
mov
mov
xlat
mov
add
jne
mov
pop
mov
push
stos
xor
rcrb
scas
inc
jo
ljmp
test
in
movsl
insl
xchg
cmp
push
loop
inc
cmpsb
add
imul
xchg
mov
test
dec
fisttpll
pop
outsb
xchg
mov
or
les
hlt
mov
loopne
jmp
sub
lock
push
fiaddl
jo
mov
out
and
rcrl
aaa
and
sub
call
push
int
aad
add
ffree
xlat
mov
sti
pop
loopne
pop
or
imulb
out
ss
dec
add
mov
xor
and
sub
es
push
cmp
jb
mov
bound
pop
mov
sbb
test
arpl
mov
mov
dec
sub
lcall
adc
divl
xchg
sbb
lret
add
ds
test
ror
loop
add
jb
dec
cs
jbe
idivl
aas
sbb
jb
mov
rcll
nop
pop
sub
fisubrs
or
xchg
xlat
xchg
fnsave
push
or
je
cmpsl
mov
dec
jg
xchg
xor
xor
push
into
adc
pop
jl
push
or
scas
in
xlat
dec
negb
data16
scas
cmp
sub
xlat
cmp
cmp
imul
push
push
cmc
sbb
dec
scas
imul
cmp
test
mov
pop
inc
incb
sbb
sbb
push
jne
repnz
jbe
in
pushf
mov
pop
arpl
jle
add
sub
push
in
jge
or
imul
mov
test
push
dec
test
jno
inc
add
outsl
je
push
cmp
fldl2t
and
pop
pop
in
js
adc
mov
adc
out
inc
daa
pushf
adc
push
push
jl
jg
icebp
pop
icebp
das
xchg
mov
negl
pop
jns
dec
lret
in
mov
inc
int
push
jmp
xor
mov
cwtl
fwait
adc
das
sub
into
adcb
lret
scas
cld
insb
pop
xchg
pop
fistl
xchg
bnd
je
stos
and
xor
mov
lret
push
outsl
insb
pop
testl
lock
enter
or
add
mov
xor
inc
sbbb
gs
adc
cmp
mov
inc
mov
pop
mov
fsubrs
movsb
call
mov
cmp
sbb
mov
ds
xor
pop
shl
mov
sub
fucom
ds
sbb
jb
ljmp
xchg
jo
sub
addr16
sub
dec
stc
jnp
jbe
push
popa
in
push
sub
adc
in
or
jecxz
mov
in
pop
cmp
mov
mov
xor
in
xchg
jae
jne
adc
add
xor
xchg
shl
xor
or
ret
xorl
dec
push
xchg
out
push
jg
das
mov
int3
std
push
je
es
mov
shlb
in
adc
cmpsl
and
sarb
cmp
push
mov
movsl
fdivr
mov
adc
adc
jnp
out
addr16
lahf
sbbb
fdivrl
and
cs
add
ror
and
into
jle
jle
xchg
out
adc
test
test
jle
jno
and
push
adcb
lahf
ja
outsb
movsl
movsb
pop
cmp
mov
and
inc
flds
insb
fs
mov
hlt
inc
lock
inc
lahf
stos
push
sub
pop
push
fwait
jp
jmp
jbe
dec
sub
ja
sbb
adc
je
push
lock
ss
gs
mov
cmp
mov
addr16
outsl
sti
xchg
mov
out
and
push
adc
push
and
push
repnz
stos
ror
idivb
push
daa
inc
mov
xchg
insb
testl
dec
mov
mov
loope
dec
or
pop
push
fwait
mov
daa
shr
mov
cmpsl
push
leave
into
loope
enter
xchg
call
fistpll
ror
fwait
sbb
popa
sub
daa
flds
xchg
and
test
mov
cmp
bound
pop
jge
xor
mov
inc
add
sahf
icebp
lret
pusha
sbb
push
or
cmpsl
pushf
imul
push
out
negb
mov
adc
jl
xchg
sbb
mov
sbb
and
je
adc
inc
jo
inc
push
aad
cmp
cmc
sbb
ja
pop
or
sbb
sub
and
imul
into
pushf
dec
and
xor
and
add
scas
mov
int
mov
int
in
test
sbb
cmp
push
dec
cs
andb
mov
cmc
cld
push
outsb
push
add
loope
jae
lods
lds
mov
clc
and
sbbl
lds
aam
push
fnstcw
xor
pusha
outsl
pop
loop
int3
dec
sbb
xchg
pop
cs
push
and
xor
sbb
stos
xor
xlat
movsb
mov
aas
std
add
les
fwait
ss
jne
lcall
loop
adc
aaa
int3
cmp
test
jg
pop
ret
sub
sbb
jnp
addr16
sbb
push
enter
pop
jmp
cli
lock
or
pop
nop
xor
paddusw
lret
out
cmp
sbb
xorl
pop
cmpl
pop
mov
ljmp
popa
or
int
mov
jo
xchg
in
adc
push
sbb
pop
pop
push
jae
adc
add
lods
lods
hlt
outsb
scas
jb
cmc
cmp
insl
dec
and
cld
shl
aas
xchg
adc
lods
jmp
cmpsb
inc
mov
out
mov
dec
xor
mov
stos
add
loopne
sbb
andb
fninit
push
push
push
cld
fcoml
clc
dec
cmc
and
fsubl
mov
inc
push
lods
aad
sub
push
aad
insb
rcll
mull
sahf
or
sbb
fwait
push
fmuls
mov
js
cmp
mov
fstl
int3
pop
int
xor
mov
scas
inc
jmp
loopne
mov
dec
adcb
sahf
push
lea
pop
and
adc
sub
adc
sti
add
mov
loop
fsubrp
das
cli
or
ret
ret
rclb
dec
lret
or
movsb
hlt
jae
in
or
mov
xchg
and
inc
cmp
in
jecxz
jl
test
rolb
or
pop
jg
mov
loopne
jp
cwtl
adc
xchg
mov
add
pop
mov
cmp
sub
pop
dec
mov
loopne
mov
outsb
sbb
ret
into
push
adcb
in
iret
addr16
mov
push
add
pop
repnz
pop
inc
mov
aam
outsl
sahf
fwait
and
cmp
mov
inc
iret
cmp
push
jmp
pop
mov
int3
push
or
int3
jb
pop
jmp
sub
sub
sub
adc
dec
push
bound
mov
push
mov
push
sbb
adc
jno
push
lock
pop
ss
lahf
add
iret
ljmp
mov
test
insb
add
jno
push
xor
sbb
xchg
test
cwtl
ljmp
pop
adc
mov
adc
inc
sub
dec
mov
pop
adc
mov
or
aaa
cmpsb
xor
fcompl
mov
cmp
jle
loope
pop
push
div
add
sbb
rcll
cmp
lock
aas
iret
rolb
js
pop
mov
jge
push
hlt
add
adc
loopne
cld
mov
jns
pop
fndisi(8087
fs
mov
pushf
dec
dec
pop
xor
pop
push
add
pop
inc
lahf
or
push
pop
es
and
in
cmpsl
loopne
enter
orl
sbb
popl
and
push
and
sahf
lds
fisttpll
pusha
rcrl
inc
jl
jae
pop
jl
shr
and
jb
stc
xor
mov
and
fdivs
sahf
int
adc
dec
imul
mov
dec
add
lods
jmp
repnz
ljmp
out
outsl
cmpsl
stos
push
push
cmp
in
mov
cmp
push
out
int3
cmpsl
repnz
mov
jge
xchg
pop
xlat
dec
pop
mov
movsb
adc
mov
and
add
sbb
nop
pop
in
xchg
test
sub
inc
call
mov
mov
and
add
lods
inc
or
jae
sbb
int3
insl
push
cmp
inc
popf
mov
fnsave
leave
idivl
imul
ud1
push
mov
fsts
enter
sti
mov
jp
rol
mov
test
rclb
or
out
fmuls
cmp
and
push
push
lock
dec
cmp
push
pop
or
xchg
outsl
daa
std
sbb
cwtl
jae
mov
push
push
mov
cwtl
mov
mov
lahf
negl
sbb
mov
lea
dec
mov
mov
into
push
jo
pop
add
sub
push
dec
pop
or
add
mov
loope
inc
pop
adc
dec
out
jns
cmp
add
jg
data16
xor
int
fstpt
adcl
dec
fiadds
clc
xor
cli
sub
jecxz
stos
jo
xchg
scas
icebp
fistps
test
pushf
lcall
ficompl
scas
in
aam
xchg
loopne
cmc
adc
ds
subb
push
sbb
or
pop
sbb
and
popf
mov
adc
push
movsb
popf
sub
or
ret
mov
pusha
push
mov
test
das
xchg
mov
and
inc
addr16
popa
lock
ret
pushf
adc
sbb
mov
mov
mov
and
mov
xor
cmp
inc
loop
xor
and
jb
push
inc
mov
loope
xchg
mov
adc
lea
xchg
mov
jnp
dec
pop
sbb
push
mov
add
xchg
ljmp
popf
negl
xchg
mov
xchg
adc
addl
das
in
push
dec
sbb
in
and
lret
int
lods
repnz
jp
das
mov
cmp
popf
leave
jo
in
adc
push
shlb
inc
testb
sbb
sub
out
mov
outsb
add
push
pop
in
mov
mov
or
das
test
dec
mov
add
sti
jl
lret
std
mov
cmpsb
iret
mov
int3
sti
cmpl
mov
jne
mov
fisubs
repnz
jb
inc
iret
movsb
push
loop
into
setnp
ja
dec
xlat
xchg
fdivrs
mov
pop
adc
cmp
dec
lcall
repnz
test
scas
sbb
mov
mov
or
sbb
pop
imul
mov
fwait
out
sti
repnz
es
es
jg
std
and
cltd
push
movzbl
cmp
mov
mov
call
mov
and
or
jp
fxtract
pop
mov
cmp
and
jle
repnz
mov
gs
mov
nop
lcall
sbb
stos
lods
lret
ja
imul
out
mov
mov
lahf
aas
lock
mov
filds
cmpsb
sub
gs
lret
add
lock
jne
cmp
test
and
jle
add
repz
or
sub
add
adc
sub
fimull
enter
and
into
and
push
leave
jnp
int3
xor
sbb
movsl
mov
mov
std
or
push
mov
outsb
and
lahf
mov
lret
xchg
popf
dec
jb
jb
rcrl
daa
mov
pop
push
lahf
mov
jge
jb
jge
push
fwait
out
in
sbb
shll
and
rcl
aam
and
out
or
jo
movsl
mov
cmp
out
cmpb
or
mov
mov
mov
sub
aas
stc
adc
and
or
jmp
push
and
adc
out
or
clc
imul
cmp
dec
sbb
xchg
sub
cmc
test
aad
dec
sub
adc
lods
dec
pop
rcll
or
popf
stos
aaa
cmp
fmull
jl
sub
cmc
addr16
adc
sti
int
pop
nop
in
jbe
dec
mov
inc
sarl
outsb
in
mov
xchg
aad
out
test
or
adc
xchg
xchg
xchg
pop
mov
dec
mov
iret
xchg
cmp
clc
xchg
and
fmuls
jle
daa
push
xor
repnz
repz
popa
cmp
aaa
pop
mov
push
push
add
sahf
mov
pop
aaa
aad
push
fcom
pop
shlb
xor
mov
inc
xchg
mov
push
jg
push
rolb
cmp
sbb
mov
mov
shrb
push
ret
into
popa
jg
jmp
lods
sbb
cmp
clc
outsl
or
rcr
adc
cmp
push
das
mov
imul
lret
lea
jo
or
mov
aam
xor
data16
cmp
mov
out
cmc
cmp
outsb
jg
mov
pop
ret
lret
bound
sbb
and
sahf
sbb
pop
cwtl
dec
hlt
hlt
dec
xor
cwtl
jecxz
dec
in
scas
and
dec
mov
inc
lret
pop
stos
xor
arpl
les
jno
cmp
scas
popa
push
out
xchg
mov
and
mov
addl
lcall
jg
int3
les
jle
push
pop
jle
inc
cmpsl
jle
insl
pop
pop
adc
jp
out
jnp
dec
and
xchg
insl
in
cli
adc
call
fdivp
mov
aam
imul
insl
lds
xchg
mov
sbb
jl
std
enter
ss
iret
imul
jmp
nop
pop
test
pop
movsl
mov
pusha
push
ret
roll
inc
mul
icebp
xor
xchg
adc
mov
fisubl
dec
and
lret
lar
and
push
loopne
mov
outsl
mov
push
jge
stos
mov
cld
mov
adcb
xchg
bound
jno
rcrb
testl
sub
data16
dec
xlat
bound
or
mov
jne
int
inc
rorl
dec
stos
fmull
sahf
inc
add
jp
rorl
cltd
push
gs
mov
and
cmp
hlt
pop
lret
jmp
dec
adc
in
push
aad
jbe
dec
adc
jge
gs
outsl
push
movsb
inc
or
rcll
fistpl
jnp
imul
xchg
movsl
rcr
lods
mov
jge
divl
cs
mov
pop
dec
inc
and
imul
out
fcmovnbe
pop
ret
mov
mov
xchg
cmpsl
push
sub
sbb
jno
adc
rol
or
mov
push
fsub
and
push
push
jg
jo
xchg
dec
pusha
lahf
loopne
or
mov
inc
push
inc
mov
fs
movsl
out
int
jge
cmp
dec
fwait
cmpl
sub
das
dec
dec
lahf
or
cmpsb
xchg
xchg
rcl
add
inc
jle
hlt
mov
dec
jb
in
or
jecxz
fstpl
sbb
xor
stos
nop
push
loop
push
rcr
adcb
mov
sbb
xchg
mov
leave
clc
imul
and
mov
push
jg
insb
hlt
ret
out
stos
test
in
mov
test
call
or
nop
dec
push
mov
test
fdivrp
and
loop
lock
dec
loope
xchg
mov
and
push
ficompl
arpl
cmpsb
xchg
cld
popf
lret
cmp
mov
mov
sub
xchg
or
scas
outsl
stos
rclb
inc
scas
or
and
pop
out
mulb
cmpb
sar
mov
cltd
xor
push
mov
in
in
sub
inc
pop
movsl
adcb
mov
pop
fnstenv
jns
repnz
into
jp
adc
insb
xchg
push
shll
inc
jno
mov
lahf
arpl
add
pop
xchg
subw
mov
jge
sub
notl
aam
into
add
ret
repnz
sbb
pop
fsubs
iret
cmc
jne
and
pushf
scas
jmp
loopne
cmp
add
test
mov
sub
sbb
movsl
xchg
cmp
or
rcll
dec
mov
inc
rcrl
xor
inc
scas
and
cmp
mov
or
mov
scas
cmpsb
movsl
jae
sbb
cmc
fcomp
ret
leave
mov
dec
adc
cli
mov
dec
push
adc
pusha
push
cli
cmpsb
jbe
xchg
dec
dec
mov
xor
inc
ja
dec
pop
in
pop
shl
int
dec
sbb
fs
insb
cmp
pop
xchg
popa
scas
sbb
fs
or
fnstsw
test
or
mov
pop
push
dec
xor
outsl
fbstp
pop
lock
mov
imul
fstpt
mov
mov
pop
aam
ret
push
dec
cmp
cmc
out
jno
pushf
movsl
add
pop
ljmp
push
jl
sub
xlat
daa
mov
jne
sbb
lds
aas
ret
imull
scas
in
test
lods
pushf
popf
jle
lods
imul
subl
mov
or
leave
mov
insl
aam
outsb
fdiv
cs
imul
mov
int3
xchg
test
shll
sarb
test
sub
loope
mov
leave
mov
pop
xor
aad
fstpt
cmp
aaa
jp
xchg
pop
mov
dec
movsb
stos
test
repz
ds
adc
mov
inc
repnz
cs
bound
jno
or
sub
pop
leave
jae
sub
or
imul
push
sub
pushf
cmp
push
inc
jl
and
les
lret
ret
lock
das
or
insb
fldl
xor
jg
or
aam
jmp
andb
xor
pop
adc
jae
pop
pop
fsubr
shll
xchg
pop
call
jne
mov
aam
popa
inc
dec
mov
jo
faddl
mov
push
or
test
push
int
rcr
addr16
push
mov
cmp
insb
scas
dec
cmp
pop
cmp
movsl
insb
aas
inc
push
push
or
push
clc
lret
jp
mov
mov
fcoml
xlat
mov
icebp
add
insl
and
hlt
dec
jge
adc
ret
xor
mov
je
bound
jmp
add
jp
xchg
pop
insl
or
inc
adc
and
repz
lret
push
gs
mov
cmpsl
and
out
popa
jne
or
movsl
sahf
pop
xchg
mov
dec
dec
arpl
pop
inc
ja
cmovns
pop
loop
aaa
loopne
dec
movsb
adcl
xchg
add
jnp
bound
pop
ret
adc
pop
outsl
mov
push
int
mov
mov
pushf
out
adc
sti
mov
ja
addr16
pop
adc
dec
enter
inc
lods
dec
mulb
cwtl
mov
nop
out
sbb
mov
pop
or
xor
lods
rcrl
jecxz
rcr
outsl
mov
popl
and
cltd
mov
pop
mov
frstor
jmp
or
jmp
xor
mov
dec
mov
mov
adc
or
enter
add
xor
fstpl
adc
mov
mov
repnz
mov
adc
mov
xchg
jle
cmpsl
mov
and
cmc
loop
push
lods
ss
hlt
mov
adc
push
inc
inc
jno
and
lret
clc
mov
push
xor
mov
rcll
jne
jbe
inc
cmc
lods
or
or
movsl
jecxz
xchg
and
xchg
hlt
repnz
lods
out
inc
push
sarl
or
mov
daa
test
lock
sub
iret
ss
fldt
mov
repz
divb
dec
ja
mov
push
stos
dec
sbb
xchg
pop
lods
leave
xchg
xchg
jecxz
fs
fdiv
inc
adc
negb
test
mov
cmc
gs
push
sbb
cmp
xor
push
mov
imul
xlat
sub
push
insl
push
pop
movsl
jb
in
inc
pop
mov
inc
mov
sub
xchg
mov
xor
into
mov
xlat
cmp
jge
xchg
ja
xchg
into
sub
iret
insl
call
lcall
jg
cmc
inc
icebp
sub
in
mov
sarl
pop
shl
and
jmp
xchg
lret
xchg
jp
dec
pop
testb
movl
adc
sub
push
scas
adc
sbb
fwait
aam
pushf
jbe
or
fstpl
mov
fcoms
mov
push
jne
outsl
push
dec
sbb
dec
mov
cmc
push
mov
into
fsubr
adc
les
fnstcw
stc
push
sbb
xchg
pop
shr
or
lea
pop
fcmove
icebp
add
es
lods
in
in
and
sbb
into
outsl
fistl
xchg
sbb
jge
adc
xor
jle
sti
out
aam
int
imul
scas
dec
jo
pop
fadds
int3
cwtl
sbb
sub
and
pop
sbb
shll
outsl
and
pop
sub
movsl
fstpl
jo
add
dec
stc
mov
mov
or
inc
xor
mov
push
pusha
add
cmpb
dec
cltd
or
jg
xchg
les
push
lods
test
jbe
fisttpl
mov
mov
test
sarb
xor
fwait
hlt
sub
or
xchg
shrl
movsl
insl
inc
scas
stos
push
loop
shl
cld
or
rolb
sarb
in
sbb
rolb
mov
xchg
scas
ja
cwtl
mov
jae
dec
pop
test
dec
fnsave
addl
push
jne
xchg
and
mov
dec
das
or
xchg
pop
iret
stc
push
ret
je
mov
stos
adc
adc
test
jle
les
jb
and
dec
int3
test
and
aam
xor
popf
lret
xor
push
sbb
mov
mov
mov
sbb
sbb
pop
and
adc
das
xchg
and
xchg
test
nop
jg
pop
les
xchg
jo
inc
mov
popf
jno
inc
int3
cmp
mov
adc
jge
xchg
pop
dec
dec
add
sahf
shll
test
xlat
add
adc
fnstsw
aad
fstpt
xor
and
sidtl
sbb
pushf
push
lock
add
aam
scas
outsl
jge
out
aas
xchg
popa
fbstp
iret
jb
dec
add
inc
adc
mov
stos
and
fcoms
ss
push
sub
loope
ret
xchg
adc
push
cwtl
enter
std
sbb
jg
in
loopne
lds
imul
arpl
scas
test
jb
or
cmc
jl
fnstsw
dec
or
mov
push
ret
pop
lret
in
push
pop
inc
push
nop
inc
push
nop
fwait
xchg
test
or
or
xor
xor
lea
loopne
cmp
mov
or
mov
mov
adc
mov
add
push
sub
movsl
mov
push
daa
push
push
cmp
push
mov
cmp
negl
ja
out
pop
ljmp
push
jge
enter
and
and
mov
pop
cmc
mov
nop
inc
fwait
xchg
cmp
loope
clc
fs
sbb
jecxz
add
ret
pop
cs
das
ss
mov
ret
test
loop
pop
shl
add
adc
test
imul
jl
fcmovnb
sub
cli
mov
and
xor
hlt
cmp
cmp
cltd
aam
push
mov
push
pop
out
push
fimuls
mov
subl
test
pop
insl
lret
xor
xor
mov
fadds
int
push
adc
iret
mov
sbb
cmpsb
insl
xor
sti
arpl
jbe
mov
sub
xchg
mov
xor
xchg
in
xchg
dec
mov
push
and
push
mul
lret
scas
pop
adc
xor
cmp
sub
mov
xchg
imul
idivl
jmp
imul
cmp
mov
sub
vpcmpeqb
mov
scas
out
mov
aad
xchg
outsb
or
aad
push
pop
insb
add
fldl
mov
aas
pop
push
push
xor
or
iret
lods
mov
dec
mov
in
jno
ror
pop
sub
sti
xchg
xchg
adc
mov
mov
scas
or
cmp
xchg
sbb
adcl
xor
sub
or
or
xor
in
cmp
jno
lahf
mov
sub
and
adc
pop
js
outsb
movsl
mov
xchg
iret
outsl
or
ret
int3
or
insl
stc
xor
fs
stc
mov
and
pop
pop
testb
xchg
cmp
dec
ret
addl
pop
fiaddl
cmpb
jnp
mov
inc
add
and
mov
insl
in
cs
sub
xchg
leave
test
mov
ds
xorl
adc
int3
jae
cmp
stc
pop
cmp
jmp
ror
lret
cli
inc
xlat
popf
in
push
lods
adc
clc
cmpsl
jae
frstor
jp
mov
test
xor
insl
scas
xor
sbb
subb
leave
push
and
jbe
lock
cwtl
mov
lods
cmp
ljmp
pop
jecxz
or
dec
fdivrl
push
sub
and
andl
sub
rcl
pop
imull
sarb
clc
std
std
mov
add
test
jp
cwtl
xlat
dec
jno
je
shrb
and
xlat
sub
lds
ret
jnp
cmc
enter
cmc
js
cmpsl
mov
add
pop
lret
leave
pop
mov
pop
in
lods
dec
rcll
and
add
cld
jae
jo
out
push
dec
mov
adc
inc
addr16
cmpsb
nop
mov
mov
mov
adc
aas
stos
cmp
es
ret
arpl
shlb
mov
mov
insb
xor
notb
mov
pop
dec
xlat
pop
add
fstpt
xchg
adc
into
mov
jns
mov
push
mov
in
cld
cmp
sub
lock
mov
xchg
ljmp
outsl
or
lods
push
add
fs
pop
in
push
in
aaa
clc
sub
pop
push
jne
mov
inc
mov
add
fists
gs
insl
dec
mov
or
pop
adc
movsb
mov
mov
fninit
movsl
ret
clc
xchg
into
sub
icebp
test
mov
es
pop
sub
jecxz
sarb
adc
cld
xchg
mov
push
sub
in
and
fcmovnbe
test
mov
out
sbb
or
and
push
sar
push
inc
jecxz
pop
mov
in
jp
jmp
aaa
lea
fdivrp
out
sbb
dec
xchg
loop
sub
mov
inc
jg
lret
sti
jno
fdivrs
and
cmp
add
aaa
inc
jns
push
test
fcmovbe
jae
pop
lods
ret
or
fisttpll
scas
test
mov
mov
and
mov
andb
cmp
inc
xor
movsl
dec
stc
rcll
add
scas
subb
push
xchg
xor
sub
test
pusha
dec
mov
mov
inc
push
leave
test
push
xchg
mov
sbb
insl
cmp
xchg
imul
fwait
push
lock
in
or
aam
dec
es
rep
into
xor
mov
mov
mov
repz
aad
jmp
dec
push
dec
mov
mov
insb
inc
push
sbb
push
aam
inc
pushf
cltd
gs
xor
jb
mov
dec
mov
mov
js
jo
lret
and
in
sbb
out
mov
cmpsl
fcomps
or
inc
pop
lret
mov
adc
mov
pop
repnz
push
jp
sub
or
sub
es
les
mov
aad
test
add
sub
outsb
mov
lea
int
enter
dec
cmp
sbb
mov
lods
sbb
cmp
imul
mov
stos
push
call
cltd
mov
pop
mov
sub
xor
push
nop
pop
sti
sahf
icebp
mov
leave
pop
xor
cltd
test
ja
xlat
test
repnz
jnp
leave
insb
add
push
jns
cmpsb
mov
sub
mov
rcl
fwait
ljmp
fldenv
jbe
arpl
lock
fcoml
mov
xor
je
insl
sbb
loop
mov
xor
in
xor
sub
adc
mov
mov
adc
pop
mov
in
fisubrl
jmp
mov
xchg
mov
xchg
add
inc
movsl
push
imul
xchg
stc
sub
mov
and
out
or
add
pop
cmpb
pop
dec
into
mov
fdivr
sbb
int
loop
xchg
xchg
adc
mov
xchg
jp
sub
sub
push
pop
pop
push
mov
and
sbb
add
push
fsubrl
lcall
cli
and
fdivl
xchg
std
movsl
iret
stos
sub
fistpl
sub
inc
dec
xor
outsl
in
loopne
movsb
jae
aad
adc
test
and
sbb
ret
shlb
sbb
push
xor
mov
jmp
fistps
leave
ss
test
xor
test
pop
add
into
jmp
inc
mov
push
sbb
xchg
rcll
int3
push
xchg
stos
fwait
pop
outsb
outsb
insl
lea
in
dec
into
scas
imul
dec
dec
lcall
nop
adc
xor
dec
mov
sbb
aam
mov
cmp
repnz
arpl
sahf
out
mov
xchg
cmp
xchg
cmp
pop
call
xchg
leave
sarl
cmp
enter
mov
rorl
es
jb
les
or
xchg
loope
mov
push
mov
mov
sbb
fnstcw
sti
adc
enter
arpl
jns
outsl
and
xchg
mov
mov
addr16
jae
add
call
jecxz
stos
in
pop
cmpsl
and
add
arpl
or
xchg
pop
leave
push
int
dec
push
pusha
shll
out
or
rcrb
or
push
and
push
icebp
daa
mov
lret
in
inc
dec
cli
push
xor
or
pop
dec
notl
loope
mov
pusha
clc
ret
inc
mov
out
mov
insb
pop
aaa
xchg
pop
pop
push
pop
das
clc
push
adc
inc
fidivrs
pusha
loop
int
and
pop
int3
mov
ljmp
sub
stc
push
es
roll
mov
push
lock
xor
insl
outsl
and
sbb
mov
pop
inc
enter
sti
les
add
faddl
pminsw
ss
fisttpl
push
repz
push
cmp
mov
inc
cld
iret
and
lret
cmp
add
cmp
jle
sub
imul
or
cmp
and
push
push
adc
and
mov
pop
pop
inc
push
mov
movsl
aaa
push
xor
call
push
jle
cmpsl
lahf
pop
arpl
fisubrl
ss
shlb
pop
mov
rcrl
call
in
sbb
mov
orb
aad
mov
cmpsl
cli
pop
mov
int
push
scas
sub
push
jle,pn
in
pop
int3
pusha
ret
push
cmp
ds
jae
add
clc
sahf
jo
pop
inc
xor
push
push
dec
pop
fimuls
mov
in
dec
sbb
jae
pop
dec
sbb
scas
cs
mov
xchg
xor
insb
xchg
lea
mov
jns
cmp
sub
pop
pop
push
jp
xlat
mov
fwait
cmpsl
pusha
outsb
mov
insl
outsl
mov
cld
dec
addr16
cli
cmp
jmp
fistpll
jno
add
and
test
sub
and
sub
sbb
add
xorb
in
mov
iret
cmpb
scas
arpl
xchg
mov
inc
sub
sbb
ds
div
into
mov
es
cmp
pop
imul
xchg
lods
adc
stc
sub
movsl
jg
jns
and
xchg
scas
mov
mov
rclb
xor
int
dec
idiv
lret
popa
xchg
daa
sarl
mov
iret
pushf
cmpl
xchg
fs
add
push
push
bextr
jge
fwait
enter
mov
mov
scas
mov
fucom
pop
or
xchg
cltd
xchg
cmp
imul
and
fstpt
fldt
dec
add
fists
jmp
xchg
adc
insl
push
std
push
xchg
cmp
adc
aas
xor
xor
nop
shr
fs
test
xor
xchg
aaa
inc
out
mov
or
ret
jmp
sub
loop
hlt
and
inc
outsb
inc
das
daa
sbb
push
mov
push
add
pop
sub
cli
mov
fiaddl
jmp
or
xchg
fidivs
inc
pop
mov
shl
test
das
imul
jmp
dec
and
pusha
dec
vpaddusw
inc
and
cmp
xchg
jg
sbbl
or
push
fiaddl
jb
and
dec
mov
cwtl
sbb
cmpl
mov
jecxz
out
daa
addr16
fistl
xchg
pop
leave
dec
mov
mov
push
decl
push
jbe
sub
fisttpl
movsb
pop
dec
aaa
cmp
xchg
loope
cwtl
jo
mov
test
mov
mov
or
pop
and
mov
xchg
mov
inc
adc
adc
mov
aaa
lahf
sbb
sbb
enter
pop
sbb
lahf
ja
sahf
inc
xor
popa
jle
sbb
cwtl
xor
adc
and
xchg
xchg
rcrl
outsb
inc
push
jae
mov
xor
pop
shrb
and
out
clc
mov
xchg
xchg
insb
sbb
lods
xor
inc
jge
mov
and
sbb
rorl
mov
mov
xchg
xor
enter
lds
hlt
dec
jbe
lds
imul
test
loop
pop
test
xchg
or
js
push
and
and
jmp
test
inc
adc
ss
sahf
mov
jmp
iret
push
push
lcall
and
aam
scas
or
in
inc
and
jle
imul
shll
js
popf
cwtl
xchg
lahf
sub
sar
xor
sub
jno
movsb
inc
mov
mov
pop
sub
mov
ja
gs
nop
insb
jb
lret
xchg
cmp
xchg
inc
insl
popf
sbb
out
mov
popa
shl
lea
movsl
daa
gs
mov
mov
mov
jns
cli
sub
jne
daa
leave
gs
adcb
xlat
push
ficoms
xor
sti
adc
mov
repz
shr
mov
xor
mov
xchg
add
loopne
dec
mov
cmc
lcall
gs
mov
mov
pusha
data16
loopne
mov
and
sbb
xor
jmp
out
mov
mov
jne
lods
mov
cwtl
inc
aas
scas
fists
aas
test
dec
scas
xor
jmp
cmpsl
mov
push
add
push
sub
jmp
adc
add
adc
pop
and
xchg
pop
pop
scas
movsl
and
xlat
push
lret
std
mov
push
add
sti
in
sbb
add
ret
and
mov
mov
sbb
mov
mulb
lret
sbb
and
das
pop
mov
jns
mov
mov
int3
sub
dec
fldt
and
push
subl
outsb
xlat
or
xlat
into
mov
sbb
push
or
out
fdivs
clc
sti
mov
outsl
and
cmp
jmp
xor
mov
popl
mov
or
loope
sub
dec
lods
or
mov
add
sbbl
nop
sbb
mov
jb
in
mov
fidivrs
push
mov
imul
aad
rolb
mov
adc
ret
popf
in
lret
dec
xchg
imul
in
cmpsl
push
cmp
lahf
cltd
xor
fnsave
xchg
dec
and
test
aad
out
or
sbb
int
jae
arpl
mov
mov
popa
notl
xor
cmp
push
jnp
enter
mov
sbbb
or
xor
icebp
mov
cmpsb
pop
out
outsl
out
mov
popa
insb
push
hlt
mov
aad
jmp
pop
sbb
cmp
aaa
add
pusha
or
sti
pop
shrb
jl
sub
and
lock
out
int3
sti
and
in
sub
push
ljmp
cld
out
push
or
push
push
mov
gs
shl
or
in
ret
sbb
daa
and
xor
pop
in
pop
insb
lock
outsl
dec
lock
stc
pusha
jl
xchg
test
bound
cld
xchg
in
mov
mov
push
inc
pop
xchg
test
das
xchg
sbb
cmp
add
rolb
sbb
ret
pop
cld
or
in
dec
rcll
lret
orl
and
test
mov
pop
loope
lds
lcall
xchg
mov
aas
testb
jae
sahf
xchg
sar
or
ret
stos
inc
repnz
jnp
rclb
and
sbb
call
jp
pop
xor
add
jno
ja
pop
xlat
mov
cs
sahf
push
mov
xor
mov
mov
test
aas
lcall
mov
pop
sti
cmpsb
xchg
lret
inc
add
mov
pop
push
cmp
fwait
gs
pop
bound
or
jg
leave
push
movsl
ja
sbb
inc
push
loop
lcall
pop
popa
sbbb
imul
sub
and
inc
test
xor
pop
dec
lret
dec
push
hlt
lcall
iret
cmc
jno
push
xchg
xchg
mov
faddl
rcr
jle
es
cli
mov
lahf
jno
fistpl
xchg
push
fisttpl
jp
in
cld
push
ss
pusha
loopne
jnp
outsb
pop
jo
aam
int
push
xor
and
push
fistpl
jecxz
sbb
sub
stos
fisubs
js
adc
pushf
sub
mov
mov
inc
sub
cmpsl
arpl
mov
stos
adc
cltd
add
xchg
sahf
clc
and
jns
mov
xchg
adc
jo
xchg
push
adc
sti
mov
insb
pop
sub
int3
push
pushf
or
or
jle
pushf
pmulhw
adc
inc
out
in
imulb
jge
xchg
dec
mov
in
xor
flds
dec
xchg
dec
fs
insb
fnsave
and
int3
pop
add
pop
loop
sub
or
mov
mov
movsb
add
pusha
fsubl
dec
mov
iret
pushf
push
ljmp
adc
movsl
push
mov
dec
sub
cmpsl
test
push
mov
pop
stos
push
cmp
popf
ss
ss
adc
mov
scas
shl
cs
mov
xchg
scas
jnp
nop
aaa
gs
sbbl
lock
cmp
mov
lahf
xor
pushf
pop
mov
xchg
test
dec
popf
in
ja
dec
and
add
mov
push
xchg
push
js
and
scas
or
sarb
add
and
fisubrl
push
or
lods
nop
pop
gs
mov
jg
xor
fcom
outsb
inc
push
pop
lret
add
fsubrl
xchg
jb
mov
in
movsl
sub
iret
je
lods
adc
mov
hlt
sahf
mov
inc
mov
inc
mov
xor
push
push
in
push
in
cmp
push
xchg
scas
jl
xlat
inc
fs
mov
jb
mov
sarl
push
out
push
nop
xor
adc
and
shl
sub
jmp
outsb
mov
fwait
jb
leave
sti
lcall
enter
jg
and
xchg
mov
stc
jle
and
sbb
rcrl
ja
pop
mov
add
mov
or
clc
lahf
cmpsb
or
mov
daa
dec
test
push
cmp
sbb
inc
or
jmp
mov
cld
ret
pop
pushf
pop
pop
pop
mulb
mov
aaa
jl
inc
arpl
sub
adc
lahf
ficoml
aam
fidivl
test
scas
pop
mov
and
mov
test
push
in
and
pop
pop
xchg
push
loope
clc
mov
jp
js
rclb
cmc
jne
lods
push
mov
in
enter
adc
pushf
ret
lock
cmpsl
sbb
xchg
jno
and
mov
test
inc
mov
dec
addr16
mov
jecxz
subl
mov
push
test
jne
ret
stc
ret
pop
jle
xchg
and
roll
mov
and
loope
or
in
out
inc
das
fisttpll
mov
mov
cmpsl
leave
inc
cld
enter
call
leave
jmp
out
fildll
and
test
out
or
jb
push
jg
push
xor
rcll
fldt
mov
bound
pusha
jl
lods
mov
movsl
movsb
mov
jecxz
jns
fs
and
dec
mov
cmpsl
lea
fldpi
pusha
mov
inc
rorl
dec
les
and
hlt
xorps
adc
in
mov
pop
cmpsb
sbb
or
jno
dec
mov
inc
lds
rcr
cmp
fidivl
cld
adc
int3
clc
sub
into
aaa
pusha
cmp
xchg
ss
shr
adc
hlt
shrb
out
pop
scas
mov
loop
repnz
ret
jle
outsl
testl
jle
fldl
xor
cmpb
ljmp
cltd
sbb
stc
pop
sub
push
pop
jbe
addr16
lea
xlat
insb
mov
lods
dec
push
inc
xor
ret
sti
or
sahf
test
xchg
mov
jge
xor
fstpl
aaa
shrl
out
or
rep
data16
imul
fnstsw
dec
inc
and
arpl
jb
mov
adc
das
adc
stc
cmpsb
adcb
daa
jge
sub
push
ss
sub
mov
es
loop
mov
test
jmp
jnp
loope
out
or
push
sbb
pop
xlat
mov
inc
cmp
js
mov
test
lret
inc
movsl
mov
xchg
jmp
les
mov
repnz
sub
add
jp
jnp
lods
xor
add
ljmp
pop
nop
stc
mov
mov
mov
enter
cmp
sub
mov
cmp
mov
ret
pusha
add
and
jnp
stos
test
push
test
xchg
inc
pop
add
and
stos
push
es
pusha
xchg
stc
dec
sbb
arpl
fld
dec
mov
js
push
push
movb
in
push
mov
add
mov
cmpsb
in
sbb
adc
sbb
xchg
pusha
mov
insb
adc
cbtw
out
mov
jb
adc
jmp
mov
mov
stc
sub
push
ss
test
repnz
ret
xchg
test
jno
out
aaa
cmp
xchg
stos
lods
xchg
je
xchg
iret
adc
test
add
pop
js
lret
xchg
jmp
cltd
mov
add
mov
iret
push
je
cltd
jbe
push
mov
and
sbbl
cltd
adc
push
push
pop
adc
out
or
in
xchg
add
mov
mov
pop
cmp
jae
cmp
bound
std
sub
popa
xchg
pop
stos
xchg
adcl
cmp
xchg
push
sbb
inc
xor
xor
mov
inc
jle
dec
addr16
rclb
mov
into
ds
dec
icebp
xchg
pop
aaa
ds
imul
dec
sahf
add
test
push
mov
mov
xor
js
imul
cmp
jmp
ffreep
push
and
xorb
fldl
xor
push
mov
inc
in
stos
pop
popf
shrl
pushf
or
cmp
test
or
test
mov
fdivs
push
ret
das
fsubrl
mov
xchg
pop
pop
int3
jmp
cmp
xchg
andb
cltd
fldt
jnp
fldenv
or
and
rcll
lret
sbb
add
or
jmp
js
or
add
mov
xor
push
repz
and
cmp
and
outsb
sti
mov
call
dec
insb
scas
shlb
inc
adc
sub
jne
xor
lret
inc
pop
fistpl
fnstcw
outsb
inc
mov
mov
jo
popa
das
and
dec
enter
imul
movsl
xchg
and
cmp
sbb
sub
push
fwait
daa
mov
cs
or
xlat
cmp
repnz
lods
mov
mov
dec
dec
cmp
jbe
mov
cwtl
ja
fmuls
int3
push
cli
cwtl
imul
xor
rcrb
push
xchg
ds
sub
ficoms
mov
pop
pop
xor
push
iret
orl
cmpps
aad
push
popa
loopne
lods
sub
xor
jo
das
adc
inc
push
adc
mov
pop
scas
pop
in
inc
mov
pop
lret
leave
lret
int3
popf
leavew
and
cwtl
repz
inc
pop
inc
pop
cli
sbb
andb
adc
cmpsl
outsl
sahf
cmp
out
rcrl
test
mov
jmp
mov
les
mov
dec
dec
sub
xchg
sbb
data16
out
cmp
sbb
out
jecxz
xchg
imul
fwait
test
cmp
mov
jnp
mov
sbb
pop
je
add
add
and
scas
xor
test
jne
inc
sub
dec
mov
cmp
sub
bound
scas
inc
movsb
and
jmp
fs
scas
rcll
add
xor
jmp
jo
jmp
inc
push
and
push
movsb
dec
aam
inc
bound
push
test
jo
or
jno
fbstp
ja
add
test
xchg
pop
fimuls
rcrb
mov
dec
aam
cmpsl
pop
adc
hlt
test
sbb
xchg
push
imul
xlat
jo
inc
scas
mov
xchg
inc
scas
xor
or
fnstsw
mov
je
fstps
rcl
mul
js
and
or
cmp
inc
sub
inc
out
mov
fidivrl
inc
add
jae
dec
and
es
mov
xor
push
xchg
cmp
push
push
loop
jnp
js
dec
inc
and
dec
adc
rclb
imul
test
ret
add
mov
pop
pop
in
sub
dec
loop
mov
and
in
stos
jl
jl
in
cmp
sub
mov
jne
jae
gs
leave
shrl
or
rorb
movsb
fs
dec
lahf
call
add
add
dec
jns
cmp
jecxz
enter
inc
push
imul
and
imull
mov
aas
movsl
out
jle
jmp
sub
dec
mov
mov
add
adc
sti
push
xchg
mov
xor
mov
enter
xchg
insb
xchg
out
push
sahf
dec
negb
pop
or
push
lcall
inc
mov
mov
cmpsb
jl
sub
jbe
cmp
jp
or
outsb
sahf
and
frndint
fwait
pop
stc
je
mov
aas
nop
add
sbb
inc
sbb
mulb
aam
addr16
mov
jo
pop
xor
je
rclb
cmp
scas
jns
fcmove
fs
adc
arpl
or
adc
cs
push
adc
mov
out
xor
dec
movsl
sub
add
inc
jl
popf
gs
addr16
decb
sub
lret
or
nop
and
int
pop
dec
lcall
test
out
jne
jbe
aam
pop
mull
test
dec
nop
sub
hlt
cs
cmp
jno
xchg
test
add
inc
mov
xchg
pop
and
sub
push
pop
sub
add
sbb
mov
cwtl
and
loope
jmp
push
test
mov
inc
movsb
jns
xor
inc
outsb
xchg
jbe
dec
stos
lret
ja
xlat
sbb
repz
movsl
mov
ljmp
adc
dec
mov
pop
xor
mov
mov
sub
jno
mov
push
getsec
jmp
iret
int3
xor
sub
and
aam
sbb
inc
test
je
inc
push
push
pop
and
dec
stos
lret
jb
sub
adc
adc
mov
jmp
loop
push
sbb
add
in
mov
rcr
mov
mov
test
lods
mov
dec
sbb
aam
inc
icebp
popa
pop
subb
xchg
sub
and
add
mov
into
cwtl
jecxz
inc
sub
push
or
cltd
push
and
dec
rcrb
movsl
pop
or
repz
fs
shll
jmp
jle
shrd
hlt
jbe
sbb
sbb
sub
mov
std
mov
test
mov
mov
cmp
sub
cmc
test
popa
jmp
add
xchg
sbb
mov
sub
lea
mov
jns
push
je
dec
sbb
leave
dec
aad
xor
push
mov
adcl
jg
mov
movsl
sbb
mov
ret
xor
movsl
pop
pop
dec
loope
adc
mov
jb
out
outsl
int
je
cs
call
fistpll
and
idivb
insl
orb
cltd
xchg
cmc
cmpsl
dec
and
lods
scas
repnz
icebp
add
cmp
jmp
jae
sub
xchg
test
arpl
lahf
mov
sbb
imul
add
sbb
addr16
jge
inc
jne
jl
fwait
les
jg
data16
or
mov
aaa
and
ja
mov
mov
mov
cmp
xchg
inc
mov
xor
std
jae
sub
cmp
cltd
mov
add
xor
das
int3
stos
lock
pop
std
jnp
sbb
mov
pop
orb
mov
xor
ret
mov
clc
ljmp
and
es
adc
sbb
iret
lods
je
jbe
hlt
and
inc
call
dec
fdiv
xor
stc
push
xchg
mov
mov
out
xchg
sbb
add
lret
jae
dec
sub
push
push
xor
jge
mov
push
stc
in
inc
aad
dec
push
or
cmpsb
push
cld
aam
ljmp
and
std
ret
and
and
pop
jns
out
mov
pop
add
movsb
pop
fimull
inc
cmpsb
add
lahf
rcl
repnz
push
rclb
sub
pop
push
into
cmpsb
pop
in
leave
adc
push
xchg
mov
ficoms
sbb
push
mov
sub
call
js
push
loope
dec
outsl
cltd
xor
test
ficoml
dec
and
lea
out
ficoml
add
push
popa
jge
cmp
xchg
xchg
fisubl
in
xor
jp
fldcw
mov
fsubs
enter
hlt
add
jge
sbb
negb
mov
push
loope
sbb
push
mov
push
mov
inc
xor
fs
cmc
lds
dec
lods
push
stos
aaa
in
cmpsl
mov
int
lods
xor
loop
cmova
rorb
fistps
sbb
insl
mov
pop
dec
sub
xor
out
int
repz
xor
mov
decl
xor
mov
call
jle
mov
mov
jecxz
ret
daa
xchg
mov
cs
mov
xor
das
fisubrl
stos
testl
stc
movl
shrl
popa
sbb
hlt
push
mov
jbe
jecxz
or
mov
inc
sahf
mov
shll
arpl
pushf
addr16
push
inc
jg
gs
test
movsl
sub
movsb
stc
testb
inc
dec
ss
mov
jl
add
in
roll
mov
pop
dec
dec
xchg
jbe
pop
cmp
dec
stos
adc
pop
scas
adc
loope
sti
hlt
push
cld
ficomps
cli
lock
push
stc
std
xchg
mov
mov
imul
inc
mov
pop
in
andl
adc
dec
scas
and
mov
stc
dec
add
jo
in
mov
adcl
add
or
es
sub
in
push
test
mov
xor
les
fsubrs
xor
in
push
fwait
xor
dec
push
movsl
pop
gs
leave
and
inc
adc
xchg
cwtl
aam
pop
cmp
lods
lock
dec
jae
inc
bound
cld
jecxz
sbb
sarl
inc
xor
lahf
sub
xor
pop
jmp
and
or
out
mov
lods
cmc
cmp
mov
fcomip
cs
iret
shrl
filds
cmp
dec
mov
int
stos
add
pop
out
cmp
push
and
sbb
fcmovbe
divl
and
jb
andb
subb
shl
js
add
or
adc
dec
add
out
push
in
out
sbb
inc
xchg
leave
sbb
lret
add
inc
and
and
inc
mov
sbb
rcl
cmp
pop
into
mov
sar
fcmovnu
or
adc
mov
inc
sub
cmpsb
push
insb
or
pop
xchg
std
sbb
sbb
xchg
inc
stc
adcl
xchg
push
rol
loope
out
loop
or
pop
fwait
popf
shlb
add
lds
xor
sbb
adcl
xchg
sub
pusha
fbstp
aam
add
in
push
lret
fmull
cli
and
push
pop
mov
jno
enter
into
lods
xor
xchg
mov
ds
call
cmp
dec
inc
or
hlt
inc
mov
pop
lock
or
jge
nop
std
ds
and
aam
jge
or
stos
mov
cmc
ret
iret
xor
inc
mov
call
sarb
das
cs
out
add
lret
cmp
rcr
and
insl
and
dec
xchg
xchg
push
adc
push
gs
mov
jne
mov
lock
xchg
push
xchg
dec
push
inc
cmp
popa
jge
ljmp
pushf
jo
movsl
js
lds
imul
pop
pop
mov
out
outsl
add
xchg
xchg
inc
cmc
jp
ljmp
add
out
add
jno
adc
lods
jne
lcall
mov
or
inc
mov
cmp
pop
adc
leave
push
mov
aas
xor
inc
xchg
out
and
test
fsubs
imul
bound
jg
data16
xchg
push
or
mov
jecxz
out
cwtl
jo
fidivrl
inc
push
inc
mov
mov
jb
sub
imul
stc
cmpsl
inc
addr16
push
je
int3
lods
and
mov
and
cmp
xor
bound
loope
gs
push
dec
xlat
or
ret
and
jmp
cli
xchg
cmp
into
int
mov
ret
scas
mov
ljmp
add
les
scas
outsl
std
sub
xchg
shll
sahf
stos
add
shrb
jns
xchg
lahf
xor
xchg
loop
mov
fmull
ljmp
add
or
push
loopne
inc
insb
int3
idiv
les
decb
insb
and
popf
fcoml
dec
sub
cmp
mov
jb
and
jmp
sub
out
in
ds
int
orl
adc
mov
ds
fcomp
cmpsl
dec
cmp
mov
push
es
fimull
sub
and
or
shl
add
mov
test
add
xchg
dec
push
test
movsb
push
dec
pop
push
in
pop
fnstcw
jb
scas
cmp
ja
out
push
or
mov
scas
xor
scas
jo
pushf
fstps
push
in
xor
arpl
xchg
and
mov
mov
inc
inc
xchg
adc
mov
and
sbb
sub
into
cmc
xchg
pop
fwait
cmp
xor
lcall
sarl
test
cmpsl
sbb
out
scas
test
cmpb
mov
mov
push
sbb
xor
bound
ljmp
mov
push
jl
aad
ja
in
or
sub
sahf
mov
mov
fdivrl
cmp
mov
cmp
ja
out
dec
cltd
cmpsb
or
jns
and
jle
mov
in
jl
adc
xchg
push
xchg
adc
test
mov
movq
fiadds
mov
xchg
repz
sbbb
push
cmpl
cmp
subl
add
imul
push
subl
or
push
stos
sahf
inc
iret
std
and
cmp
movsb
or
and
mov
icebp
lds
std
cmp
xor
inc
mov
xchg
imul
mov
sbb
sti
lock
les
jge
in
ja
test
mov
out
add
or
mov
repz
inc
xlat
lods
xchg
adc
loopne
das
pop
rcll
imul
pop
out
xchg
inc
shl
add
out
inc
adc
sti
pusha
outsb
les
jmp
add
fcomps
out
js
stc
or
ljmp
sar
js
pop
cltd
in
lcall
out
cmp
jg
lret
and
pop
mov
and
inc
push
ljmp
xor
xchg
into
shll
inc
jno
push
dec
loope
lods
jecxz
add
iret
outsb
ja
icebp
cs
adc
jecxz
push
mov
xlat
insb
fs
jnp
pop
mov
push
inc
mov
jmp
fcomps
cmp
push
jg
xchg
aad
adc
scas
ret
pop
xchg
and
mov
movsb
ljmp
in
pusha
adc
and
mov
movsb
test
lret
repnz
jmp
xchg
in
lret
bound
jb
mov
mov
jne
mov
push
sbb
adc
add
popf
out
sub
pop
adc
pop
test
and
xchg
add
mov
clc
int3
test
pusha
mov
jne
fcmovnb
xchg
sahf
int
mov
mov
sbb
mov
pop
lock
mov
js
add
cmc
push
xchg
push
jo
jecxz
mov
jmp
or
das
xor
mov
outsl
icebp
sbb
js
xchg
lods
clc
jnp
stos
inc
cld
mov
in
cld
jno
jbe
mov
test
stc
push
popf
mov
inc
call
fsubrs
ds
repz
mov
mov
mov
dec
dec
mov
mov
in
addr16
das
cmp
mov
jnp
fcomi
inc
xchg
adc
popa
sub
xchg
mov
adc
out
ret
sub
xor
popa
stos
std
stc
push
add
stc
dec
popf
mov
xor
stos
push
icebp
or
rcl
int
mov
pop
push
out
push
xor
rclb
sub
push
jmp
mov
xchg
scas
sub
iret
movsb
pop
pop
sub
xchg
xchg
and
cmc
jge
test
mulb
inc
cmp
and
sahf
push
pop
insl
mov
cli
jne
and
int3
shlb
cmp
push
add
mov
decl
jbe
addr16
add
sbb
sbb
shl
shlb
push
pop
add
mov
shll
inc
ljmp
test
sub
xchg
dec
sbb
push
mov
sbb
xchg
mov
xchg
xchg
cmp
pop
aam
popa
imul
mov
add
daa
dec
ja
addb
mov
mov
loop
stos
xchg
orb
fwait
idiv
or
mov
data16
loop
xlat
cmp
les
add
aaa
addr16
add
jo
xchg
andb
movsb
aaa
fldenv
pop
add
test
repnz
xor
adc
scas
jno
sti
jns
sub
movl
enter
xchg
sub
cld
inc
cltd
mov
aas
jp
push
mov
ret
test
dec
mov
inc
push
push
inc
jp
pushf
lods
test
mov
clc
cli
out
push
inc
sub
jp
es
cmpsb
or
fisubl
xor
addr16
push
data16
fnsave
icebp
test
cmp
jae
xor
addr16
outsb
xchg
and
dec
repnz
je
negl
push
jnp
insb
out
call
push
icebp
ds
add
xor
jl
cmp
orl
lcall
sahf
int3
sbb
jge
fucom
inc
pop
sbb
fadd
cwtl
push
jns
and
xchg
inc
loopne
int
arpl
mov
test
out
in
lret
mov
insb
int3
and
dec
insb
jae
enter
jg
std
jo
js
ds
pop
cwtl
adc
jno
mov
lods
ljmp
xchg
inc
inc
inc
test
popf
idivl
mov
mov
out
mov
push
iret
in
xor
and
inc
sub
call
jns
out
lock
idivb
or
mov
inc
dec
mov
out
mov
add
insl
or
pop
mov
cltd
shlb
es
cli
jl
xor
jmp
xor
mov
or
mov
repz
imul
enter
int
mov
sbb
leave
insl
sub
andps
sbb
push
mov
sbb
pop
dec
sub
popf
push
mov
and
ds
ss
add
add
or
and
lods
stc
popa
addb
fs
stos
jmp
bound
daa
jge
jecxz
lret
fldcw
lock
push
or
rcll
fs
cltd
clc
xorl
jmp
fdivl
sub
outsb
pop
push
sub
sbb
and
test
clc
lods
jbe
or
movsl
mov
out
sbb
and
outsl
pmullw
xchg
cmpsl
ljmp
fistpl
inc
mov
xchg
and
test
sbb
sub
dec
pop
call
mov
nop
xchg
xor
lds
inc
stos
mov
lods
mov
test
xor
mov
imul
mov
test
sbb
sbb
out
iret
clc
push
add
jb
jns
mov
fsub
lret
movsl
mov
xchg
cld
lds
xor
ljmp
pushf
leave
mov
push
inc
add
in
les
stos
mov
mov
cmp
ja
mov
ffreep
push
in
xchg
jp
xchg
outsl
lea
mov
in
arpl
daa
je
add
mov
fsubrs
negl
pop
mov
js
mov
addr16
add
lcall
imul
mov
sbb
cmp
cli
cwtl
addr16
shl
xchg
or
scas
jne
mov
iret
div
lret
push
dec
div
or
jge
pusha
pop
es
test
inc
or
and
inc
call
add
sbb
inc
shll
or
xchg
mov
push
cmpsb
push
xchg
shrb
sub
lret
stos
jo
vpsrld
mov
mov
sahf
sub
and
clc
mov
mov
out
push
mov
cmp
pop
push
shll
outsb
inc
push
in
dec
into
mov
lea
fnstcw
repz
fwait
mov
mov
aam
add
sti
xor
cmp
es
mov
and
xrelease
into
ja
xchg
cmpb
fcompl
lock
xor
add
pusha
xor
inc
cld
inc
aam
jnp
sub
scas
enter
loop
filds
in
pop
fisubs
sahf
pop
mov
sbb
mov
sti
fs
sbb
jmp
bound
mov
mov
dec
fsubs
lods
outsl
lret
sarl
stos
iret
in
mov
mov
bound
mov
lea
xor
sub
xor
sub
push
xchg
adc
into
jmp
ja
imul
sub
out
testb
jle
fimull
arpl
push
fdivrl
mov
mov
lahf
cmp
mov
or
jnp
addr16
inc
outsl
adc
push
pop
jmp
iret
cmp
mov
stos
nop
enter
out
adc
test
mov
addr16
arpl
js
or
imul
xchg
pop
fwait
ja
dec
pusha
das
aaa
jle
lds
inc
sti
xor
jl
jp
fadds
mulb
fidivl
push
sbb
stos
in
adc
and
pop
fsubrl
xchg
lret
sbb
js
jmp
ja
and
lcall
ret
andl
sbb
push
jno
push
fcoml
pop
cwtl
jmp
sbb
les
js
mov
jecxz
pusha
je
out
xchg
lahf
push
jecxz
push
xor
pushf
loop
mov
and
mov
sbb
loope
push
sbb
int
out
xor
es
jecxz
mov
rcrb
aam
push
jmp
pop
jo
mul
into
inc
pop
stos
loopne
sti
cmp
in
jne
test
push
cmp
xchg
cwtl
fidivrl
push
movsbl
mov
add
mov
cmp
shll
add
ret
sahf
ja
dec
shrl
fisubs
and
jg
jnp
shl
add
mov
popl
lcall
les
push
test
lock
xchg
leave
cli
pusha
adc
or
dec
pop
jmp
repnz
shrl
in
jl
lock
insb
push
ja
pop
cmp
add
inc
in
test
es
jno
add
mov
lret
sub
fsub
incl
out
daa
lret
pop
ja
test
imul
aad
dec
dec
xchg
adc
jbe
mov
in
inc
insb
outsb
outsl
or
inc
or
in
subb
dec
xchg
lock
xchg
cmp
pusha
xlat
dec
inc
mov
push
dec
rorb
push
fstpl
pusha
adc
jo
int
dec
popa
xor
add
das
xchg
fwait
xor
in
les
ret
lds
mov
inc
lret
insb
cmp
push
call
fcompl
lods
adc
fidivrs
in
add
xchg
mov
scas
fwait
add
pop
cld
xchg
iret
out
push
xchg
shl
adc
int
in
mov
sbb
xchg
dec
jl
jno
sub
sub
lods
idivb
fidivrs
cmp
stc
inc
or
dec
insl
lahf
insl
xlat
sarb
dec
inc
aam
je
icebp
lds
xor
bound
pop
cmc
call
mov
or
scas
dec
dec
int
jmp
push
lods
cmpsb
dec
dec
repnz
mov
mov
cmp
stos
iret
and
sarl
inc
popa
test
sub
fcompl
jmp
nop
push
add
cli
mov
dec
enter
jl
cltd
popf
cwtl
pop
jmp
ss
bound
inc
mov
aam
sbb
pusha
pop
push
icebp
xchg
leave
dec
sub
outsl
sarb
sbb
and
push
jb
push
push
ja
jb
inc
mov
inc
pop
cmp
jge
mov
loope
iret
mov
xchg
cmc
das
mov
ret
mov
scas
jmp
xor
cltd
pusha
mov
mov
loop
push
fisttpll
adc
pop
mov
or
sub
xchg
push
repz
add
inc
aaa
cmpl
sbb
incl
mov
popf
xor
or
mov
adc
sub
dec
and
or
aam
adcl
lret
outsb
mov
rorb
sbb
mov
movsb
movsl
mov
aad
push
fimuls
sbb
xor
jae
cmpsl
inc
adc
adc
pop
jo
inc
adc
js
mov
push
xchg
mov
ficompl
adc
movsb
subb
iret
repnz
fidivs
cmp
lahf
test
jmp
or
adc
movsb
and
shrb
sbb
jbe
fimull
cltd
mov
cltd
lds
push
jae
stc
hlt
xchg
mov
add
xchg
in
repz
cld
jno
stc
jp
cmpsl
fbstp
adc
inc
mov
rcrb
hlt
and
mov
pushf
mov
data16
mov
jg
mov
push
pop
fsubrs
les
mov
in
add
int3
out
or
mov
call
push
add
aas
test
xchg
inc
lods
test
jmp
jo
mov
cmp
push
enter
mov
or
mov
out
arpl
sub
cmp
push
aas
mov
mov
ret
mov
sarl
pop
inc
fsubrl
push
popa
popa
add
out
lret
mov
loope
bound
adc
or
jge
xchg
dec
scas
addl
in
stos
xor
pop
movsb
xchg
or
fsubl
inc
xor
rcr
roll
or
push
popf
ret
push
mov
jmp
xor
ja
xchg
pop
sub
inc
movsl
dec
gs
jbe
cmc
adc
test
addb
xor
int
pop
pop
mov
dec
push
mov
test
inc
dec
xor
dec
sti
outsl
xchg
aas
and
loope
jecxz
das
movsb
daa
add
or
fucomi
inc
test
mov
inc
mov
imul
cld
repz
sub
mov
cli
dec
repz
push
mov
lret
add
in
mov
fs
xor
into
hlt
into
mov
mov
dec
mov
pop
ret
push
mov
pop
xor
dec
push
clc
out
aaa
nop
mov
or
mov
push
lods
fnstsw
popa
jbe
mov
cmc
xor
xchg
mov
or
pcmpgtb
xchg
repnz
test
or
hlt
dec
lock
stos
fidivs
jmp
mov
pusha
pop
inc
mov
mov
push
lret
popf
xchg
inc
std
dec
mov
sub
in
adc
pop
ret
inc
mov
call
les
xchg
shrb
loopne
sti
xchg
dec
repz
cli
fstl
adc
pop
mov
xchg
lret
arpl
nop
fiaddl
mov
push
add
mov
into
and
cmpsl
adc
cs
xor
cmp
sti
iret
imulb
daa
clc
jae
jle
sarl
jg
push
add
lcall
mov
jae
leave
dec
mov
mov
and
jge
lcall
in
test
lock
es
mov
ret
js
mov
dec
push
test
js
mov
dec
push
subb
pop
shr
popa
mov
in
into
in
push
jbe
bt
push
ljmp
or
push
int
mov
jbe
bound
pop
push
xlat
cmp
negb
mov
test
and
or
ror
xor
aad
sub
lea
mov
mov
mov
xchg
mov
mov
mov
mov
rcrb
hlt
cmp
test
in
mov
leave
xor
orb
shrl
mov
fmull
xchg
mov
std
cltd
mov
fiadds
sbb
pop
dec
push
and
or
fdivs
xchg
pop
out
sbb
aad
pop
into
cli
jbe
movsb
test
mov
ja
out
mov
push
pop
repnz
shlb
out
incl
in
push
sub
adc
lock
fwait
sbbb
movsb
sbb
mov
repz
arpl
mov
sbb
xchg
shr
or
shrb
fmulp
pop
out
lds
xchg
sbb
add
cmc
push
push
or
sub
js
fstps
inc
hlt
gs
bound
xor
mov
mov
enter
mov
and
leave
std
movsl
loope
lret
aas
nop
in
push
pop
add
push
cltd
and
cmovg
jo
mov
add
inc
inc
dec
xor
pop
push
fs
jle
mov
ss
leave
int3
xor
ljmp
or
add
les
cmp
pop
sub
xchg
cmp
mov
and
not
sbb
loope
test
jg
test
jge
sarl
fstpt
lods
mov
pop
lea
mov
fdivr
mov
xor
in
pop
mov
pushf
or
in
iret
mov
lahf
cmp
fcoml
cmc
fwait
leave
fsubl
mov
mov
cmp
test
int3
cmpb
xorl
lahf
inc
sti
mov
xchg
cmpsl
aas
daa
dec
dec
addr16
mov
cmp
or
mov
cmp
std
pop
shlb
jl
ss
pop
mov
cmc
push
movsb
sarb
in
add
jns
dec
jo
inc
adc
adc
dec
xchg
xchg
lock
jmp
jg
ds
or
jnp
jmp
sub
negb
or
rclb
mov
sub
in
push
flds
js
adc
aad
sub
inc
popa
dec
cmp
loope
jecxz
mov
pop
xchg
sbb
xchg
push
and
arpl
jl
dec
push
xchg
xchg
xor
ret
scas
rcrl
cmp
loope
sbb
daa
xchg
cwtl
mov
inc
lock
pop
lcall
add
pop
in
mov
sbb
and
sahf
jg
push
dec
shll
cmp
jge
push
and
enter
cmp
adc
xchg
sbb
daa
lret
inc
movsl
and
or
loop
xchg
std
cli
int
mov
out
int3
jae
dec
stos
filds
dec
sahf
stos
fstpt
push
push
out
scas
cmc
mov
inc
imul
int
insb
pushf
mov
movsl
mov
adc
icebp
jge
rdtsc
mov
js
je
or
pusha
hlt
jge
int
mov
inc
dec
fdivrl
call
inc
dec
insb
addr16
lahf
pop
push
push
dec
and
pop
sub
emms
push
mov
jecxz
test
ja
in
jmp
shr
and
cmp
and
imul
loopne
jne
ret
or
mov
lock
cmpsb
cmc
mov
cmp
rcrl
cwtl
push
loopne
or
and
test
dec
das
dec
aaa
mov
pop
mov
shll
cs
pop
sbb
mov
pop
jo
mov
push
xor
ds
cmc
cmc
xchg
mov
inc
lahf
stos
xchg
das
xchg
mov
inc
mov
dec
int3
pop
jo
insb
fcoms
mov
aaa
inc
loope
xor
cli
xchg
pusha
in
sub
pop
gs
popa
stos
sub
jmp
lock
xchg
xlat
rolb
cmp
cmc
xchg
lcall
mov
std
bnd
sbb
jmp
add
sub
xchg
lret
xchg
jmp
xchg
popa
jecxz
fisubrs
loope
push
stc
add
inc
mov
les
aas
insl
mov
inc
pop
jb
or
les
jmp
aam
je
xchg
pusha
dec
std
mov
xor
push
cmp
push
ds
lods
sub
lods
fcompl
cmp
mov
mov
jbe
out
fwait
loope
pusha
sub
sub
or
in
mov
and
mov
sub
das
adc
xchg
je
mov
push
pop
mov
fisubrs
mov
push
push
lea
int
xchg
mov
loope
pop
cmp
imul
sub
adc
mov
xor
bound
stc
gs
mov
lret
add
and
cld
jnp
lahf
xlat
out
mov
sub
in
sub
pop
lgs
loope
loopw
cmp
lock
cld
outsl
shll
inc
push
and
lea
cwtl
sbbl
pop
pop
in
es
ja
jb
test
popf
jns
push
or
cmpsl
inc
out
loop
mov
lcall
and
mov
and
dec
xchg
bnd
adc
in
jle
ja
ret
jb
and
mov
sbb
shl
sti
or
pop
in
jnp
outsb
xor
cmp
inc
sbb
out
popf
mov
test
xchg
and
dec
jae
adc
push
orb
stos
std
decl
icebp
ljmp
cmp
pop
inc
inc
dec
adc
lods
xchg
jno
fmull
and
scas
push
jno
sbb
or
je
mov
std
rorl
shlb
inc
insl
lods
jo
fsubs
push
sub
imul
fdivs
gs
push
mov
sbb
ret
data16
sub
xchg
insl
imul
je
sub
push
mov
pop
add
add
stos
xchg
in
lods
or
in
dec
dec
xchg
testl
jbe,pn
sub
dec
loopne
andl
and
imul
imul
mov
je
loop
subl
mov
fldenv
jo
jecxz
outsl
add
fadds
cltd
xchg
movsb
imul
loop
jecxz
jecxz
xor
cmpsb
sub
mov
mov
xchg
xchg
mov
adc
gs
repz
jecxz
addb
cltd
or
neg
std
jae
icebp
mov
out
cmp
xchg
sub
push
sbb
scas
ficompl
and
jl
out
paddq
ljmp
mov
fcoms
out
mov
stos
mov
cli
ret
and
repz
push
mov
pop
sub
sub
or
pop
xor
add
icebp
or
stos
movsb
fidivs
xchg
lods
imul
pop
or
pop
push
push
leave
shl
sbb
dec
stos
js
inc
js
repz
jp
sbb
xchg
jae
sub
xchg
cmpsb
popf
ret
cmp
fwait
shll
flds
cmp
ss
and
cmp
nop
pop
mov
mov
lret
add
ret
or
fnstenv
gs
insl
js
dec
jge
mov
call
sub
sub
jns
add
or
add
int
aam
sub
testb
adc
bound
notb
xlat
int3
push
fsubrl
push
jbe
jne
pop
insb
inc
mov
out
adc
mov
movsl
sti
les
mov
lahf
scas
mov
mov
jb
jae
ret
mov
test
mov
mov
push
shl
pop
mov
das
push
jp
movsb
jo
mov
ret
pop
inc
fisttps
mov
push
pushf
js
jo
jae
xchg
pop
pop
pop
adc
inc
into
in
es
shrb
fsubrp
daa
nop
inc
jnp
or
andl
add
outsl
push
lret
repz
sarb
sub
pop
ret
icebp
xor
or
fisubl
push
shl
adc
jge
mov
test
insl
push
stos
mov
ret
mov
sti
pop
stc
test
adc
sub
xchg
sbb
rcr
sub
popl
and
push
and
out
imul
pop
cmp
fidivl
das
jle
pop
sbb
enter
add
inc
inc
push
mov
xor
jns
psrad
in
mov
and
mov
jae
clc
jnp
inc
mov
jecxz
add
inc
xchg
mov
push
jmp
pop
repz
adc
jmp
sub
in
xchg
lods
and
rorb
leave
in
lea
fwait
sbb
push
les
adc
pop
mov
and
pop
push
aad
popa
nopl
mov
cmp
cld
inc
shrd
pusha
mov
in
add
cltd
mov
pop
mov
sub
or
leave
mov
lds
sbb
cmpsb
mov
ljmp
add
mull
pop
test
mov
sbb
out
sahf
ljmp
adc
je
adc
scas
jp
lcall
or
lock
negl
sarb
jnp
xor
aas
addr16
lods
addb
lret
mov
scas
test
icebp
jl
mov
out
lret
push
pop
filds
data16
insb
jl
xchg
adc
adc
mov
sub
xchg
dec
mov
mov
mov
jae
mov
or
mov
out
imul
jmp
fbstp
add
imulb
repz
in
sub
int3
loopne
pop
das
mov
mov
xor
push
arpl
ret
lds
cmp
shrl
dec
out
mov
int
fmulp
or
shl
inc
mov
mov
or
pop
sahf
lret
pop
adc
shrl
push
fdivl
dec
fstl
mov
sub
fbld
sub
stos
jl
in
sub
in
lahf
mov
sti
xorb
or
mov
enter
stos
leave
je
xor
or
mov
popa
sbb
pop
sbb
pop
shl
test
cmp
jmp
cmp
ficomps
or
test
xchg
data16
enter
arpl
or
mov
aaa
push
call
push
mov
jbe
loop
lock
push
int
xor
mov
xorl
pop
cmp
or
xor
lea
cmp
call
pop
sub
enter
dec
cmp
scas
sub
xchg
rol
sub
or
stos
push
push
push
mov
mov
dec
nop
adc
aad
mov
jb
loope
cmpsb
dec
inc
leave
les
clc
jg
xchg
ret
iret
mov
in
dec
pop
pushf
mov
push
mov
adc
xor
jg
outsb
push
idiv
data16
jne
and
mov
cltd
jecxz
fldl
pop
inc
pop
mov
pop
ret
jp
xchg
rcl
outsl
xchg
sti
std
jmp
lock
into
jmp
aaa
sbb
stc
dec
pop
push
idivb
ss
cmpsl
ja
adc
xor
aad
out
cmp
jl
mov
in
inc
aaa
dec
push
addb
rcr
adcl
dec
shlb
ret
mov
lret
push
or
dec
xchg
xchg
sahf
scas
xchg
jb
mov
add
roll
mov
stos
cmp
xchg
imul
pop
fsubl
fisttps
mov
aaa
cltd
pushf
iret
addb
sub
xor
and
xchg
insb
mov
std
loope
mov
aas
cmp
push
addr16
cmp
pop
lret
and
sbb
in
mov
adcl
mov
jnp
jns
enter
mov
jle
scas
ficoml
mov
loop
mov
dec
push
loop
sti
and
lahf
adc
and
daa
outsl
and
push
clc
mov
pushf
xor
adc
jo
inc
push
push
mov
cmp
mov
pusha
xchg
xchg
aad
outsl
ret
xlat
xchg
jno
mov
dec
fimuls
or
fnstenv
adc
imul
das
jg
clc
mov
mov
mov
lret
inc
es
or
jae
jb
lods
loope
push
rclb
inc
out
call
xor
mov
movsl
xchg
aam
cwtl
ret
int
push
test
xor
inc
add
push
gs
in
js
cs
jne
push
and
outsl
add
stc
cmp
movsl
xchg
lock
adc
cwtl
inc
fsubs
push
jbe
insl
stos
xchg
das
and
sbb
imul
and
pop
out
sub
lods
push
sbb
sbb
clc
mov
sub
mov
enter
sar
loopne
inc
jp
nop
stos
mov
int
repnz
dec
push
mov
repnz
add
lods
fidivrl
mov
ret
mov
dec
loopne
add
pop
cmc
push
pop
mov
in
push
sqrtps
sub
cld
dec
xchg
ss
mov
pop
jge
mov
scas
xor
mov
or
mov
scas
xor
shll
cmpsl
fistpl
cmp
cmp
cmp
and
mov
cmpsb
movsl
xchg
pop
enter
adc
enter
std
shl
push
nop
mov
insl
dec
pop
jb
fnstcw
loopne
xchg
adcl
lret
cmp
icebp
dec
das
cmp
mov
jmp
and
mov
mov
lret
jp
inc
pop
aam
adc
cmpsl
lods
movsl
popf
shlb
push
cmp
mov
sub
inc
fistl
mov
repnz
mov
xor
test
inc
xchg
mov
jbe
cmpsb
repz
cs
xor
cmp
mov
repnz
test
mov
ljmp
dec
xchg
fprem
add
cmpl
add
xchg
fdivs
sbb
jle
je
and
xor
and
mov
in
adc
sbb
or
sbb
lods
addb
dec
lret
pop
fcom
dec
or
mov
sub
inc
xor
jne
cltd
in
pop
mov
iret
cmp
xchg
inc
jmp
testl
lods
loopne
mov
shrl
jns
xorb
jmp
cmp
imul
sub
and
inc
inc
mov
inc
inc
dec
out
out
repnz
or
xchg
sub
daa
mov
loopne
lret
jne,pn
das
mov
in
adc
test
test
into
dec
icebp
cmp
dec
push
xchg
movsbl
and
cmp
pop
mov
stos
cltd
daa
js
or
leave
insl
sahf
mov
rcrb
cli
xchg
std
pop
add
aaa
nop
jmp
xchg
mov
ficompl
sahf
lods
jbe
push
mov
sub
push
into
xor
idiv
dec
out
lcall
addl
sbb
imul
movsl
nop
xchg
or
xchg
xchg
pusha
test
das
adc
iret
mov
insb
dec
lcall
mov
push
xchg
ret
cmp
xor
xor
adc
or
adc
push
icebp
fcomps
lcall
test
push
add
lret
loope
push
xchg
mov
lods
pusha
test
jmp
add
lods
jns
mov
cmp
lock
fcomps
aad
cmp
fistpl
call
push
roll
pop
mov
add
lret
lret
sti
jo
push
and
and
cld
sub
int
mov
rclb
leave
add
imul
idiv
mov
cmpsl
aaa
mov
int
movl
hlt
sbb
or
outsl
sub
push
push
add
push
ret
push
out
inc
divl
rorl
cmpsb
or
xchg
or
or
scas
pop
aas
pop
clc
bound
inc
out
outsl
fwait
mov
rorb
inc
add
dec
push
sar
lds
scas
mov
push
repnz
dec
cmp
push
jecxz
sti
out
sub
cmp
mov
fistps
inc
shlb
jo
mov
icebp
cmc
pop
or
cmp
jle
icebp
adc
call
add
and
dec
dec
push
jnp
ret
lahf
mov
push
mov
pop
movsb
sub
mov
ja
push
lods
sub
into
mov
xchg
mov
movsb
adcb
idivb
push
cld
ss
xchg
in
test
ds
scas
jo
xor
mov
insb
add
cmpsl
xchg
dec
mov
xor
stos
xchg
iret
xchg
inc
or
repnz
lret
mov
fs
pop
push
sahf
sub
mull
sub
test
mov
xchg
xor
mov
xor
fidivrs
mov
push
lahf
xlat
scas
subb
xor
jnp
in
cli
push
sarb
cli
xchg
mov
inc
ljmp
push
loope
out
stos
call
mov
testl
xlat
aad
dec
inc
inc
in
cmpl
or
cmpsb
xor
in
adc
insb
lahf
clc
fcomps
cwtl
pop
pop
pop
jb
call
pop
add
sbb
sbb
jg
rcll
sbb
dec
adc
lcall
inc
loop
sar
sarb
dec
faddl
test
push
push
popf
test
hlt
pushl
movsl
cmp
mov
lahf
test
xchg
mov
pusha
mov
cmp
ja
adc
add
pop
scas
sub
inc
xchg
adc
mov
imul
push
or
adc
push
js
ss
add
movsl
mov
cwtl
fwait
push
out
je
pop
cs
inc
test
test
xor
leave
or
push
aaa
push
push
arpl
std
xor
xlat
jle
repz
test
insl
xor
loope
cmpsb
fldt
cld
pop
jne
sub
ret
gs
std
sbb
dec
jbe
ds
or
iret
sub
into
js
pop
pop
jecxz
arpl
inc
scas
inc
outsb
fdivs
pop
insb
stos
mov
mov
lods
arpl
repz
mov
mov
cmp
inc
inc
add
inc
fstps
shlb
ss
icebp
push
jle
popl
xchg
mov
lds
cmp
jae
test
dec
xor
iret
outsb
xor
xor
xchg
lret
lahf
cmpsb
stc
ss
fmuls
pop
and
lea
and
sub
scas
loop
in
fsts
ret
pop
push
cmpsl
xor
or
std
mov
leave
xchg
pop
lock
pop
mov
sbb
mov
loop
pop
xor
and
cli
adc
mov
jle
add
sub
fucomp
sbb
sbb
mov
int
adc
or
sub
popa
pushf
lods
inc
std
lret
jnp
addb
sbbb
jle
inc
dec
mov
pop
std
popa
mov
mov
adc
movsl
data16
das
nop
and
in
out
ret
mov
mov
jg
int3
push
out
dec
xchg
sbb
mov
push
out
mov
mov
wbinvd
mov
adc
inc
fnstcw
es
in
fcomi
dec
add
jmp
pusha
out
nop
repnz
stos
jecxz
aaa
push
mov
cmp
into
iret
pop
mov
jg
jp
lock
and
es
andb
mov
pushf
out
fisubs
and
mov
add
and
dec
test
nop
xchg
call
ret
inc
xor
lret
jl
in
adc
ljmp
mov
je
scas
cmp
lds
xor
lods
or
push
das
cltd
js
cmpsl
testb
fcomp
cmp
lods
fwait
mov
mov
rep
mov
add
jo
ljmp
mov
andb
loope
insl
dec
enter
adcl
xor
mov
mov
pop
leave
in
jnp
sub
and
out
push
daa
mov
xlat
add
cmp
push
or
pop
add
stc
sub
shrb
nop
mov
or
push
repnz
xor
or
push
adc
jmp
add
add
imul
sarb
mov
lock
xor
dec
jecxz
inc
fdivs
push
loop
mov
test
cltd
imul
mov
call
insl
aaa
mov
or
xor
mov
and
jnp
and
aam
movsb
jmp
pop
fcoms
sub
cmc
into
leave
in
int
pop
aaa
out
xchg
lcall
mov
repnz
stos
and
jne
inc
pop
cmc
iret
ficoms
or
ljmp
or
sbb
mov
xor
adc
decl
mov
xchg
pop
movsl
ja
out
fbstp
dec
push
xor
fwait
jb
inc
adc
cmpsl
mov
outsl
ret
xchg
push
sub
in
mov
roll
sbb
add
add
std
scas
push
add
not
dec
imul
mov
pusha
jge
rcrl
mov
inc
js
popa
movsl
notl
xor
cltd
mov
mov
jge
jecxz
inc
mov
popf
incb
jmp
scas
pop
repz
subb
mov
dec
dec
popa
mov
push
scas
bound
fcomps
fstpt
lods
daa
xchg
dec
or
les
rcrb
shlb
out
bound
dec
xor
rorl
jl
xor
adc
pop
leave
adc
sub
rclb
mov
fs
push
negb
xchg
sub
je
jne
jnp
adc
mov
jge
test
pop
ds
sbb
mov
mov
or
adc
mov
lret
push
loope
mov
sbbl
lock
and
in
jnp
js
xchg
or
notb
mov
push
mov
cmp
fistps
outsl
les
imul
rolb
mov
mov
inc
mov
les
shll
pop
jnp
sbb
daa
mov
sbb
dec
nop
dec
std
dec
test
dec
loop
sbb
and
pushf
add
out
push
dec
loope
jmp
imul
sbb
test
sub
pop
test
ljmp
mov
sbb
mov
push
sub
loopne
mov
jp
xor
inc
xchg
push
fidivs
lret
mov
xlat
xchg
sbb
mov
enter
mov
pop
push
pop
rcl
jg
clc
lahf
push
mov
xchg
pop
fdiv
mov
jb
ljmp
and
test
or
lods
mov
xor
push
insb
daa
mov
aaa
add
xchg
jns
mov
sbb
stos
inc
jecxz
je
repz
xor
mov
cltd
stos
mov
xor
js
movsb
jp
dec
jmp
hlt
push
test
or
ret
scas
sub
cwtl
xchg
jecxz
in
inc
pop
or
xor
pop
mov
ja
xor
mov
sbb
sub
dec
dec
cmpsb
sub
js
mov
add
inc
or
mov
mov
pop
push
loopne
shrb
xchg
xchg
cmp
add
pushf
sbb
fistpll
sbb
push
pusha
adc
lea
testl
je
xchg
les
mov
int3
adc
ret
mov
jge
mov
ficompl
outsb
shl
or
sbb
stos
aam
outsb
pop
loopne
mull
jl
in
xchg
ss
or
mov
or
and
lahf
loopne
and
test
sbb
push
insb
subb
lea
mov
xchg
rcr
xor
sbb
pop
push
pop
xchg
jb,pn
stos
adc
cltd
pop
in
add
sbb
cs
test
ds
out
mov
add
mov
enter
or
iret
iret
or
ss
add
cltd
add
jbe
leave
leave
sti
dec
sub
imul
inc
ficompl
dec
inc
push
mov
iret
shll
inc
movsb
and
into
pop
xchg
push
adc
or
rcr
inc
int
ljmp
sti
sub
inc
mov
add
jns
cltd
sbb
repz
push
mov
clc
sub
adc
shrl
xor
incl
jg
rclb
fwait
inc
jbe
pop
shrl
sahf
pop
scas
push
mov
mov
rcrb
imulb
mov
inc
cwtl
jo
dec
and
and
push
jecxz
add
push
sbb
dec
imulb
sub
cmp
fisubl
xor
adc
xchg
push
jecxz
lods
xchg
loopne
cmpsl
sbb
ror
out
pop
mov
pushf
dec
insb
cmp
sub
stc
ljmp
xchg
dec
and
jge
int
subl
xor
mov
ss
xchg
jmp
adc
stos
popa
xor
pop
add
movsb
xchg
mov
cmc
mov
pushf
inc
idivl
fstpl
test
aaa
or
out
lods
dec
dec
in
rclb
sub
push
test
or
aaa
and
out
lods
cmp
sbb
sti
jns
jno
and
insb
andl
stc
adc
lods
sub
inc
sahf
pop
cmc
push
fistpll
add
clc
cmp
mov
jle
cmpsl
push
fcoms
sub
adc
stos
popa
in
and
xor
fcmove
dec
cmp
xchg
sbb
dec
pop
jle
mov
jb
ficompl
cmpsl
mov
sbbl
loopne
and
outsb
add
dec
das
add
pop
movsb
sbb
push
sbb
popf
movsb
inc
cmc
dec
sbb
jb
or
int3
jecxz
xchg
add
imul
dec
dec
mov
jbe
inc
call
push
ss
push
pop
cmpsb
mov
mov
adc
mov
push
addr16
dec
rorb
or
jns
lcall
mov
pop
pop
sbb
jne
add
lcall
scas
in
cmp
sub
mov
aas
stos
test
lds
pop
daa
scas
imul
mov
out
jge
subl
add
lea
les
mov
rolb
add
dec
movsl
mov
mov
dec
jmp
push
push
aaa
pushl
inc
cmc
je
lret
fildl
fcompl
sub
jg
inc
test
ljmp
vandps
sub
fs
test
loope
cmpb
aam
mov
int
stos
mov
sub
and
sbb
mov
jmp
pushf
scas
jp
in
lods
xor
or
cmp
mov
add
arpl
imul
jno
cmp
repnz
mov
les
iret
inc
mov
lods
lahf
loopne
pop
sbb
adc
jno
movsl
leave
add
jmp
dec
outsb
push
adc
add
idivb
pop
mov
mov
shll
lods
nop
lcall
in
push
sbbl
xorb
enter
pop
rcll
and
or
jns
cld
xor
jo
pop
xor
leave
mov
daa
pop
mov
mov
lret
dec
ds
inc
adc
jmp
loop
cmpsb
outsb
jae
out
adc
pop
stc
lea
cmp
inc
cmp
mov
push
cvtps2pd
mov
xor
in
sub
push
mov
mov
sbb
push
dec
jp
nop
sbb
xchg
add
xor
sahf
xor
movsb
loope
adc
orb
inc
insb
jl
into
dec
jmp
loopne
in
inc
fcompl
cmp
clc
fstpl
mov
popf
xchg
lahf
outsl
bound
dec
orl
and
lods
stos
outsl
add
inc
test
add
hlt
pop
pop
imulb
in
and
scas
int
mov
cmpsl
jmp
mov
and
mov
hlt
fisttpl
int3
js
jecxz
add
fucomip
shlb
popf
scas
lods
inc
popa
push
sbb
inc
push
fisttpll
sub
jl
je
insl
cs
shlb
rclb
jg
or
xor
mov
fnstcw
fcmovne
into
fstpt
xchg
lret
xlat
pop
jmp
mov
cmp
cwtl
mov
jge
adc
std
cwtl
test
mov
loop
lock
imul
xor
cmpsb
pop
mov
dec
sti
xor
push
lea
push
fstps
lock
lret
outsb
pop
jecxz
mov
cmp
lret
dec
xlat
jg
andl
leave
push
jne
scas
movsl
mov
xor
pop
jle
cltd
out
popl
aas
notl
cltd
push
ret
push
sub
test
fisubs
ficoms
dec
es
mov
addl
mov
shrb
in
sub
insl
in
repz
out
pop
mov
cltd
sub
clc
movsl
cmp
imul
rcrl
dec
jg
mov
shll
and
jmp
mov
jmp
and
gs
jno
mov
jo
mov
dec
clc
nop
in
xor
mov
mov
rclb
xor
cmpsb
mov
pop
add
add
jns
push
in
and
cmc
shll
push
out
ds
stos
jns
mov
push
jns
test
fldt
jecxz
jge
popf
dec
subl
aam
fld
adc
imul
enter
hlt
dec
lds
scas
and
js
sub
lds
sub
lcall
mov
rolb
push
gs
movsl
lret
lds
push
jnp
xchg
pop
push
in
mov
jecxz
mov
mov
stc
fyl2xp1
sub
push
mov
dec
jmp
push
mov
cmc
lods
push
loopne
mov
insl
fcmovnbe
cmp
repz
pop
mov
sbb
xchg
sub
fsubs
and
pop
fwait
int3
out
and
enter
addl
or
adc
sbb
adc
ret
push
push
pop
mov
sbb
sti
inc
inc
adc
jecxz
add
xchg
or
outsl
mov
arpl
sub
xor
sub
xchg
lea
mov
stos
insl
xor
jl
cmp
sub
stos
push
xchg
bnd
push
fwait
pop
and
int3
jmp
addr16
fxch
mov
jb
pushl
es
gs
mov
inc
xor
sbb
fsubr
or
jno
rorb
loop
mov
or
inc
jb
outsl
mov
push
fimuls
dec
or
inc
cmp
mov
add
in
nop
rclb
mov
mov
inc
add
rcr
xchg
inc
pushf
cs
imul
rol
mov
lahf
nop
add
jp
jecxz
mov
daa
bound
fidivl
pop
or
rolb
mov
push
loope
sub
loope
mov
inc
inc
int3
or
int
or
dec
shr
daa
xchg
xchg
push
xor
cmp
loop
lcall
movsb
mov
int
and
test
and
int
cld
xchg
inc
sbb
cltd
pop
repnz
xchg
dec
pushf
insb
pop
shrb
mov
stc
add
xor
loopne
call
lods
lods
add
lea
ret
jno
xchg
ljmp
push
cmp
aad
decl
repnz
pop
ds
fnstcw
loopne
shlb
pcmpeqd
fadds
int
in
in
test
test
repnz
cld
mov
pop
push
sub
xor
mov
jns
data16
add
shrb
lock
jge
jge
gs
iret
in
mov
rcrb
adc
add
push
and
sub
jmp
mov
mov
xor
jo
cmp
in
push
or
cmp
imul
das
mov
in
xlat
lds
add
cli
test
shrl
mov
sti
and
and
shl
inc
push
out
pop
adcb
fwait
mov
cli
aad
mov
rol
push
xor
push
mov
xor
fistpl
mov
add
clc
out
rcll
leave
and
dec
xor
jns
jae
sbb
mov
or
loope
pop
cmp
jle
imul
push
mov
adc
inc
dec
insb
pop
arpl
repnz
jl
es
imull
sbbb
xor
dec
pop
mov
and
lahf
flds
inc
test
mov
std
stc
gs
jle
sub
sti
mov
stos
mov
pop
jecxz
or
cwtl
mov
sbb
aas
xchg
add
mov
hlt
ja
xchg
dec
daa
leave
lock
sti
aad
mov
fdivr
imul
cmp
mov
mov
push
jmp
sub
or
adc
inc
and
cmpb
test
js
sbb
jnp
mov
or
movsb
inc
push
inc
insb
push
stos
add
inc
enter
cmp
pop
call
std
jmp
addr16
sbb
imul
sbb
fwait
pop
xchg
in
mov
repz
mov
ror
imul
mov
clc
pop
add
adc
dec
adc
jecxz
push
add
out
jnp
mov
jnp
pushf
ss
lds
movsl
iret
pop
scas
xchg
outsl
int
push
push
inc
push
adc
dec
iret
dec
fistl
jge
cmpsb
push
call
sarb
adc
and
stos
cmp
sub
nop
ja
lock
into
jbe
sbb
mov
cli
xchg
aas
repz
fcmovu
xchg
stc
or
call
fistl
enter
push
and
xchg
jns
sub
in
imul
inc
xchg
cmp
xchg
insl
in
call
inc
stc
and
test
imul
mov
fcoml
outsl
call
jle
add
jno
bound
mov
cmpsb
xchg
mov
push
fidivrl
adcl
out
shlb
movsl
cmp
or
lods
pop
cmp
xchg
mov
insb
data16
cmpsl
jge
orb
sbb
outsb
cmpsl
mov
inc
and
mov
lcall
add
and
adc
out
dec
sub
imul
sbbb
lahf
xor
push
xor
cmp
fisttpl
inc
dec
xrelease
push
out
jg
andb
fsts
ds
mov
test
xchg
cmp
push
xor
mov
shlb
adc
gs
inc
adc
xchg
lcall
fs
inc
jo
cmp
xor
cmp
xchg
addl
mov
mov
iret
pop
movsb
push
xchg
jp
inc
fistps
sahf
sub
dec
gs
ljmp
jge
pop
fidivrs
jp
clc
es
xlat
in
rol
lcall
push
loop
inc
add
push
mov
jae
push
sarl
lock
popf
dec
cli
jle
inc
das
adc
xchg
cmpsl
jb
movsb
xchg
div
pop
ret
mov
pusha
jb
scas
push
inc
push
mov
call
int3
xor
loop
cmp
sbb
adc
ljmp
insl
pop
pop
loope
testb
xlat
dec
mov
pop
test
daa
jnp
mov
adc
mov
ds
sbb
mov
sub
mov
lret
out
roll
insl
repz
jl
jb
push
sub
mov
dec
mov
movl
fstps
or
pop
aas
aas
aaa
mov
jae
loop
or
add
pop
adc
push
push
add
test
mov
add
imul
xor
xor
fisubl
roll
cmpsl
or
negb
mov
cmpsb
push
movsb
mov
paddd
inc
shlb
cmp
fildl
mov
push
sbb
mov
mov
fildl
sub
or
lods
scas
dec
fcmovbe
je
mov
lock
imul
leave
test
lds
cmp
adc
mov
mov
popa
push
sbb
sub
inc
out
loop
hlt
and
xchg
rcr
scas
rcll
aas
ret
xchg
imul
mov
mov
and
pop
ss
jae
scas
pop
movsb
pushf
jmp
mov
stos
les
sub
pop
in
dec
call
mov
mov
push
subps
inc
or
ss
lret
and
testl
scas
jp
jne
adc
pop
jge
jbe
jl
mov
dec
enter
adc
adc
pop
lods
repz
outsb
mov
or
mov
push
enter
mov
vaddsubps
jge
addr16
adc
and
xchg
mov
sbb
cmc
lods
cmp
inc
les
cmpl
idivb
out
loop
int
pop
cmp
jnp
mov
xchg
lock
jge
in
nop
cld
xor
cmpsb
scas
test
jg
pop
mov
cmc
dec
icebp
mov
pop
jmp
insl
fwait
clc
mov
shlb
fdivrs
push
test
dec
pop
push
imul
mov
movsl
loop
mov
cltd
xor
and
inc
mov
adc
dec
mov
ret
cmp
adc
and
adc
aas
pushf
inc
cmpsl
adc
insb
or
jne
jo
shrl
xchg
and
or
cmp
xchg
clc
loope
pop
aaa
clc
sub
jecxz
sub
mov
mov
cmc
jge
subl
lea
mov
repnz
cmpb
sbb
daa
jno
pushf
fdivs
xchg
push
aas
mov
inc
test
jmp
hlt
outsl
xchg
add
xor
dec
movsb
ljmp
mov
test
aas
sub
mov
clc
or
nop
loope
lods
xchg
out
mov
in
loop
pop
icebp
push
push
xchg
dec
cmpsb
pushf
xchg
or
arpl
icebp
rorb
aad
notb
pushf
cmpsb
ret
dec
jnp
xchg
repz
inc
add
push
popa
sbb
cmp
sarb
mov
inc
jge
push
adc
popa
mull
adc
arpl
cs
jp
test
add
cmp
outsl
stos
loopne
test
imul
mov
xor
cmc
hlt
push
movsb
jmp
cmp
dec
mov
pop
push
and
dec
jno
mov
outsb
xchg
out
adc
lcall
insl
adc
jnp
outsl
sbbl
jg
or
int
idiv
aaa
mov
and
xorps
xor
fidivrl
nop
lret
lods
sbbb
inc
or
pop
les
sub
mov
pop
push
pop
shr
pop
dec
sbb
sub
fldcw
mov
dec
notb
in
cmp
into
xor
out
jns
or
fldl
dec
mov
jge
push
inc
shll
clc
sar
push
jp
mov
inc
cld
in
cmp
push
cmpsb
lea
sarl
or
sbb
aas
mov
insl
enter
in
xor
sub
fwait
addr16
test
mov
rol
lods
fbld
sub
test
dec
sub
js,pt
cmp
add
fwait
sub
and
fwait
clc
ja
sub
and
lret
pushf
jae
push
rcrl
mov
mov
add
nop
xor
shrb
lds
stos
outsl
lret
das
imul
std
push
mov
lret
loope
sbb
fists
aas
adc
je
out
idiv
mov
cltd
incl
or
xchg
and
enter
and
dec
pop
shlb
xorb
mov
cs
sbb
jne
mov
mov
xor
jge
or
adcl
daa
mov
mov
fsts
in
int3
sub
jle
in
mov
mov
jbe
sbb
mov
pop
sub
add
fs
dec
scas
adc
faddl
add
jb
inc
int
pop
xchg
cmc
lods
repnz
push
inc
fimull
mov
out
in
cmp
pusha
hlt
stos
sbb
ds
sbbb
scas
pop
ds
ja
and
sahf
and
mov
xorb
js
jmp
data16
dec
mov
repz
push
push
test
call
out
dec
sbb
xchg
dec
and
scas
sub
lcall
arpl
push
repz
dec
and
pop
ds
call
mov
call
nop
fisttpll
jp
test
inc
jno
xchg
cmc
push
jno
xchg
out
repz
imulb
ficomps
cmp
fcoms
dec
push
imul
dec
xchg
cmp
mov
shrb
mov
ret
push
push
adc
mov
js
lods
jg
shll
stc
fs
mov
mov
test
ljmp
mov
and
out
andl
ss
adc
ljmp
fidivs
shlb
ret
ss
and
xor
inc
push
inc
shrl
enter
je
orl
pop
fstp
mov
imull
jo
inc
mulb
dec
jns
movsl
dec
pusha
arpl
pop
filds
clc
imul
or
repz
pusha
fs
add
jge
jo
pop
add
sahf
sbb
lret
pop
xchg
or
fs
cwtl
sbb
xchg
mov
fistpl
xor
and
leave
movsb
addr16
add
push
jne
aad
and
xor
add
cld
pop
lock
das
in
or
out
sar
xor
lret
jbe
xor
mov
pop
mov
scas
test
lods
movsl
mov
iret
xor
sbb
push
gs
aas
mov
inc
ljmp
cmp
cmp
mov
mov
pop
nop
push
call
dec
or
cmp
mov
xchg
in
xchg
call
mov
subb
dec
mov
sbb
leave
ret
out
cmpsb
push
iret
push
xor
push
push
dec
mov
test
fcmovbe
mov
pop
add
push
lahf
jne
fldt
fistps
pop
es
and
lret
cld
jecxz
mov
test
xlat
fldl
aam
add
dec
push
sbb
iret
fcomp
mov
add
lahf
mov
movsl
lret
and
gs
aas
pop
adc
or
xchg
mov
hlt
loopne
int3
orl
and
mov
or
dec
and
adc
sub
repnz
jbe
sub
in
xor
xchg
xor
dec
inc
sete
pushf
shll
test
jmp
loopne
and
std
aas
and
js
ds
inc
incl
or
dec
es
out
xor
jb
movsb
stos
add
aas
mov
inc
dec
fnstenv
rolb
ret
das
sub
inc
gs
adc
shl
popa
das
imulb
sub
movsb
sub
sbb
pop
and
mov
popa
pop
ds
jo
or
into
sub
dec
mov
mov
adc
push
test
cmp
dec
xchg
push
data16
inc
cmp
fisttpl
scas
in
lds
jnp
sar
lcall
cmpsl
dec
push
mov
cmpsb
clc
add
ret
lcall
pop
and
jge
nop
call
sub
or
adc
call
lcall
std
mov
push
out
test
stc
out
inc
loope
jnp
pop
mov
adc
push
clc
inc
cld
ret
add
cmc
cmp
sbb
dec
pushl
aad
ret
or
ficomps
xchg
xor
or
jb
call
jb
sbb
dec
sbb
sub
ljmp
cmp
js
dec
sub
pop
scas
aam
mov
sbb
adc
lahf
sbb
fstpt
xorb
loopne
adc
punpckldq
mov
push
lahf
scas
es
inc
std
and
ret
andb
xrelease
jno
insl
int3
cmpsl
dec
push
inc
subl
pusha
mov
inc
cs
xor
mov
stos
xor
sbb
pop
jecxz
pop
mov
inc
movsl
daa
iret
xchg
cmc
cmp
mov
leave
push
cld
in
pop
in
jae
gs
mov
dec
pop
pop
outsb
mov
or
nop
aam
pop
or
xchg
sti
popa
shl
add
jae
jecxz
inc
les
or
and
inc
orl
iret
sahf
cwtl
cmc
es
jnp
pusha
into
imul
mov
stos
jae
icebp
idiv
movsl
fistl
pusha
movsl
push
into
and
repnz
cmpsb
ret
mov
or
sahf
or
dec
adc
test
jne
lret
mov
call
mov
push
and
push
adc
mov
hlt
mov
inc
ficomps
aad
xchg
or
ss
sbb
dec
leave
iret
fstpt
lock
sbb
pop
dec
adc
mov
out
stos
xchg
pop
je
mov
icebp
adc
addb
mov
mov
xchg
push
cwtl
insl
sub
pop
enter
bound
jno
call
dec
or
lcall
stc
int3
stos
mov
adc
lods
add
mov
je
jns
sbb
mov
lock
xchg
rorb
insl
int3
mov
notl
add
xor
stos
popa
shll
mov
fistl
mov
jne
sub
pushf
mov
mov
ret
sti
inc
mov
fiadds
push
add
jecxz
mov
lahf
das
cmp
inc
sbb
dec
sub
pop
adc
push
xchg
adc
xor
int3
mov
sbb
mov
sub
add
mov
std
inc
xchg
pusha
pop
arpl
mov
sbb
mov
aas
ds
mov
divl
jb
subb
sub
insl
add
xor
in
sahf
andb
sbb
push
lds
xchg
gs
xor
mov
pop
mov
shl
pop
mov
xor
divb
popf
dec
push
fldenv
mov
cld
mov
fdivl
cli
or
icebp
xchg
cmp
int3
cwtd
lods
adc
add
inc
adc
nop
pushl
leave
or
dec
loop
jns
icebp
mov
mov
int
pop
push
and
or
shrl
sub
sbb
scas
into
arpl
int3
imul
pop
daa
and
inc
in
ljmp
cmp
out
inc
je
push
data16
lahf
jae
imul
mov
push
mov
pop
mov
cli
pushf
xchg
idivb
pushf
xchg
mov
test
out
dec
scas
dec
mov
stc
and
stc
imul
jl
push
cwtl
inc
ljmp
push
jno
sbb
xor
cmpsb
lock
ficoms
shll
sub
cmpsb
call
fsubs
mov
dec
push
pop
push
sahf
test
pop
mov
jl
xor
mov
push
jmp
sub
cmpsl
fidivl
jae
cmpsl
stos
movsl
push
jne
add
inc
mov
mov
les
insl
into
fcoml
pop
lret
subl
out
jge
lcall
and
cltd
xchg
jae
popa
lret
mov
lahf
xor
sahf
fdivl
stc
pop
push
xorb
ss
hlt
lcall
dec
inc
dec
mov
jge
ds
je
ret
push
cltd
pushf
cmc
jb
and
sbb
je
add
loop
fwait
mov
push
mov
dec
loopne
jmp
addr16
mov
dec
movsl
push
orb
stos
pushf
xchg
push
lds
jg
add
lods
jp
shlb
fwait
dec
dec
aam
inc
sbb
cmpsl
ret
lahf
inc
test
cld
jns
lcall
cmpsb
movsl
in
rcrl
mov
sub
cmp
popa
in
mov
jo
mov
insb
xchg
mov
mov
sarl
in
cwtl
mov
mov
aas
nop
arpl
ja
xchg
aad
xlat
lahf
fwait
out
loop
push
roll
insl
xchg
push
jg
fs
cmp
test
and
mulb
or
sbb
fbld
pop
cwtl
or
or
in
imul
adc
cmp
jns
mov
loopne
movsb
mov
push
cli
bound
mov
push
aas
flds
mov
ljmp
cwtl
adc
add
and
frstor
adc
hlt
jne
mov
sub
push
add
addl
pop
movsl
sub
daa
rcll
xchg
imul
sub
pop
cmp
call
sub
add
rcrb
cs
jb
add
leave
sub
add
adc
cmpl
sbb
bound
mov
negl
sahf
push
cwtl
mov
dec
inc
notl
sahf
or
aaa
imul
adcb
push
xchg
ret
fbstp
ljmp
jo
jo
orb
mov
inc
jns
inc
sbb
int
adc
jecxz
fisubs
inc
add
push
push
jl
in
test
mov
repz
arpl
repnz
mov
les
repz
adc
test
sarb
sarl
sub
adc
add
sti
sbb
jp
sub
aas
stc
js
icebp
popf
mov
mov
stos
mov
inc
push
stc
ljmp
add
in
inc
mov
out
adc
addb
loopne
xchg
in
in
jb
lock
lds
sub
inc
or
fucompp
dec
test
in
fildl
xchg
pop
fstpl
mov
ljmp
xor
lds
scas
pop
and
jle
popf
adc
ds
movl
cmpb
mov
and
xchg
inc
pop
frstor
inc
ficoml
insl
pop
push
sahf
pusha
xor
loope
jns
shr
inc
and
sbb
inc
in
adc
push
movsb
outsb
pop
mov
daa
push
popf
xchg
cwtl
cli
rcll
in
in
mov
into
sub
les
or
xor
push
inc
adc
and
jae
ret
jb
andl
mov
dec
push
xchg
mov
insb
out
mov
mov
subl
movsb
xor
jg
popf
and
and
cmp
sbb
or
aas
mov
out
in
cli
jns
std
pop
in
push
mov
aas
jbe
inc
shl
jl
sub
ss
inc
sbb
jns
or
xor
dec
nop
leave
push
fs
mov
xorb
insl
lds
lahf
repz
xchg
loop
or
cld
out
sbb
pop
mov
mov
xchg
mov
repz
xor
shlb
pop
mov
lods
sbb
lahf
mov
ficoms
inc
pop
sahf
cwtl
mov
aaa
xor
fisttpl
dec
pop
orb
das
inc
sarl
and
push
ds
inc
stc
xchg
and
sbb
sub
fsubrp
aam
out
ret
mov
add
arpl
or
sbb
sbb
cld
and
add
int
mov
sahf
popl
jno
inc
imul
adc
xor
cld
and
mov
push
adcl
lcall
xor
fnstsw
cld
xor
aam
mov
mov
and
add
xchg
roll
xor
iret
cmp
adcb
push
in
dec
push
lcall
mov
jp
cs
push
iret
lahf
ret
clc
dec
cmp
mov
stos
and
in
xchg
fcomps
dec
mov
and
and
adc
xchg
sti
mov
divb
dec
inc
xchg
in
pop
rol
push
mov
mov
mov
mov
loop
xchg
fisubs
lcall
les
into
scas
out
xchg
mov
push
insb
aas
inc
jl
adc
xlat
jo
daa
or
inc
mov
outsb
pop
jbe
leave
mov
mov
or
lret
bound
dec
mov
jecxz
ret
popf
out
cld
pop
loope
push
xor
add
stc
cmp
jmp
xor
jle
decb
je
subb
hlt
jae
loopne
jne
mov
js
cs
push
jae
in
sbb
in
fwait
int
push
daa
cmp
inc
mov
mov
jl
ds
into
enter
mov
pop
push
ljmp
xorb
push
mov
mov
adc
lret
or
faddl
dec
cmp
inc
add
sbb
jle
lcall
shrb
mov
pop
jbe
fwait
push
ss
cltd
pop
cmpxchg
cld
xchg
xor
or
mov
sbb
dec
pop
push
cltd
inc
bound
movsl
das
pop
popf
lahf
push
mov
mov
push
jmp
mov
cmpsb
dec
xor
push
mov
int
dec
cmpsb
scas
push
data16
mov
dec
std
call
or
mov
lahf
lret
mov
mov
jnp
lret
dec
mov
sbb
dec
and
lds
hlt
cmp
sub
popf
jecxz
mov
in
dec
test
int3
js
sahf
flds
inc
mov
insl
adc
dec
ret
aas
in
stc
mov
jno
and
sbb
cmp
jg
add
shll
pusha
adc
jbe
daa
stos
popf
mov
jp
xchg
pop
jne
and
movsb
cmp
test
sub
dec
mov
enter
mov
and
sbb
scas
mov
addb
mov
add
stos
or
popl
lds
sbb
mov
mov
movsl
into
mov
dec
lahf
test
xchg
mov
jg
mov
xchg
pop
add
fcomi
or
or
cmp
popa
mov
aas
enter
mov
adc
mov
xor
movb
mov
insb
push
cmp
add
mov
mov
xorl
inc
leave
push
cmp
or
add
stos
cmp
and
lahf
jo
ret
cmc
add
mov
mov
call
rcrb
fcompl
jmp
jecxz
sbb
sbbb
cltd
xlat
enter
mov
mov
int
jmp
stc
lcall
icebp
outsl
mov
clc
jbe
sbb
add
mov
cld
addr16
lds
dec
push
inc
jge
lods
mov
rcrl
scas
mov
xor
xchg
sbb
sub
orb
call
es
mov
cltd
dec
outsb
xor
inc
nop
sbb
inc
push
fistps
insl
push
and
shrb
shr
xchg
jmp
xor
or
lahf
jno
daa
lahf
mov
and
adc
stos
cmpsl
mov
jno
push
xchg
imul
and
dec
and
jp
mov
dec
stos
xchg
xchg
jge
pop
push
add
bound
cmp
jp
mov
std
test
iret
ja
arpl
sub
fmul
mov
sbb
inc
push
lret
pop
cld
daa
jmp
lcall
mov
mul
mov
int3
or
js
push
mov
fdivl
or
out
aad
add
stos
pop
pop
pop
and
rorl
jge
ud1
jge
push
cli
in
ljmp
push
push
mov
xor
mov
jecxz
jmp
jb
aam
cmpsb
push
icebp
ja
bound
push
pusha
js
push
jecxz
mov
and
sub
sarl
inc
push
fwait
mov
sahf
mov
scas
push
add
iret
add
dec
out
jb
test
insb
mov
pop
xchg
cltd
or
add
cmpsb
pop
ret
mov
sbbb
shll
data16
icebp
imul
adc
les
outsb
loopne
jns
iret
iret
sbb
fnstenv
sahf
and
xchg
outsl
hlt
sbb
adc
sbb
or
cmp
call
repz
mov
aas
out
push
sub
clc
out
ljmp
adc
into
data16
loopne
inc
fucomi
iret
out
loopne
jns
pop
sbb
outsl
inc
jp
leave
jne
daa
dec
faddl
push
add
jl
mov
test
sub
jno
mov
mov
cld
mov
mov
jp
adc
add
lods
dec
mov
roll
cmp
add
sub
push
cmp
loopne
sub
pop
push
cltd
test
out
mov
mov
test
push
cmp
arpl
add
or
cmp
outsb
jnp
cmp
dec
dec
pop
rcrb
and
pop
xor
stos
out
ret
rolb
mov
or
pop
jno
jne
or
jb
shll
inc
sub
mov
add
loopne
notb
push
cmp
cmp
xchg
aaa
loop
cmp
mov
mov
mov
repnz
lret
jae
popa
xchg
stos
ret
adc
fldenv
sbb
dec
mov
inc
xchg
cmp
xchg
fdivrs
xchg
mov
pop
out
scas
jl
xchg
lcall
add
aas
dec
inc
jne
mov
add
stos
in
add
mov
in
stos
xlat
loope
mov
lods
sti
mov
insb
mov
add
mov
or
insl
je,pn
lret
icebp
daa
int
enter
sahf
stc
mov
cli
stos
add
or
out
bound
xchg
inc
and
push
arpl
lret
push
mov
jns
ret
inc
and
loope
or
push
dec
xchg
lods
adcl
pop
pop
jbe
int3
push
push
int3
in
lods
lods
xchg
adc
xor
pusha
pop
mov
test
adc
mov
push
add
sub
xchg
cmp
xchg
xchg
fnsave
outsl
fadds
rcrb
scas
xor
rcrl
inc
lock
nop
xlat
insb
jbe
sbb
mov
mov
sahf
loopne
inc
push
sub
mov
cmp
xchg
out
aam
int3
cwtl
mov
cwtl
addl
out
push
arpl
lahf
lock
outsl
push
inc
out
ss
cmp
jmp
inc
mov
mov
cltd
or
push
lods
popf
or
inc
pop
and
cmc
mov
les
js
xchg
insb
lahf
jnp
sbb
lods
pushl
mov
bound
lock
xlat
scas
mov
mov
or
inc
mov
daa
adc
sub
aas
insb
or
xchg
push
leave
mov
sub
ss
notl
mov
lock
dec
imul
stos
mov
add
xor
push
repnz
aad
aam
push
outsl
push
cld
xor
mov
ja
cmpsb
insb
inc
adc
jle
rol
mov
das
sti
sbbb
cmp
sbb
movl
ret
xor
mov
sbb
ret
das
mov
pop
shll
loopne
push
dec
mov
jle
jp
inc
or
cmpsl
jmp
fs
sub
fsubrs
mov
vmovntdq
leave
mov
ds
mov
sbb
and
mov
lret
jns
cmpsl
or
fs
pop
fwait
jo
mov
test
push
add
push
imul
add
adc
adc
lock
scas
les
mov
push
inc
testb
mov
loope
mov
inc
dec
lock
pop
xchg
int3
loopne
pop
cmpl
mov
in
xor
pop
sahf
pop
xlat
hlt
fimull
int3
mov
pop
xlat
das
jns
dec
or
pop
push
xchg
mov
jno
add
mov
pusha
push
mov
xchg
mov
mov
loopne
mov
std
imul
pop
ret
les
xchg
add
outsb
scas
arpl
clc
stos
xchg
ja
outsl
xor
cmpsl
sbb
out
lods
mov
pop
push
add
dec
std
mov
mov
pop
pop
in
aam
xor
push
mov
fdivrp
jae
out
push
sarl
sbb
das
xchg
dec
fs
sbb
xor
xor
subl
test
fwait
gs
data16
fisttpl
cltd
push
loope
dec
jp
inc
jmp
mov
dec
in
aaa
cmp
leave
stos
out
popl
fsubs
lret
pop
cld
jle
cmp
int3
jns
inc
jmp
push
mul
sub
cmc
add
das
and
and
adc
out
leave
cs
mov
and
sub
mov
pop
inc
mull
adc
aas
mov
pushf
mov
jl
mov
fisubs
jp
and
ljmp
inc
sbb
mov
call
xor
pop
into
loope
filds
mov
notl
xorl
xchg
aad
add
adc
cmc
xor
aas
xchg
and
and
lahf
orl
and
std
pop
test
add
sub
sbbl
gs
xchg
push
xchg
and
lock
lea
out
sti
inc
and
lds
in
out
mov
lock
hlt
push
jmp
dec
and
inc
jle
push
mov
push
xor
lods
and
and
xchg
arpl
imul
add
cmp
js
cmp
dec
fcomi
adc
in
push
je
lea
inc
lahf
mov
sub
repnz
jns
xor
push
and
arpl
add
cli
rolb
lods
clc
sub
pop
or
gs
sub
movsl
push
shll
ret
in
fwait
iret
mov
dec
stc
out
rorl
sti
inc
mov
and
mov
jae
leave
xor
hlt
xchg
leave
gs
dec
xchg
sbb
imul
lock
addr16
jge
int3
lahf
adc
push
mov
mov
pop
mov
lret
shrl
clc
cmp
aad
aam
call
fwait
and
divl
or
jae
outsb
es
aad
aas
dec
mov
xchg
inc
pop
test
mov
lahf
daa
or
xor
aas
fidivl
sti
call
fs
mov
pop
push
pop
sub
scas
cmp
jbe
cmc
das
cmpsl
pop
inc
aas
ja
or
cmpsb
leave
add
pop
out
clc
sub
mov
mov
leave
outsl
xor
push
cmpb
inc
fwait
in
test
xchg
and
inc
cmpxchg
mov
loopne
push
cmp
adc
out
test
sub
cltd
sub
pop
mov
adc
xchg
mov
jle
lret
mov
gs
imul
mov
out
jecxz
cmc
pop
sub
mov
xor
jmp
and
jbe
cmpb
test
ja
in
dec
fcoms
sbb
fmulp
clc
jle
jl
inc
adc
adc
mulb
sub
cltd
adc
pop
xor
push
int3
and
push
pop
jecxz
xchg
inc
shlb
daa
sbb
jmp
jnp
cld
pop
shlb
mov
ljmp
test
movl
adc
pop
test
fstp
lret
ror
outsb
movsl
inc
xchg
xchg
in
jnp
jae
and
popa
arpl
popf
mov
loopne
dec
and
dec
call
cmp
and
mov
jo
adc
scas
add
push
sub
gs
pop
jmp
lret
int3
xor
call
push
sub
clc
out
mov
xlat
aad
mov
xor
xchg
call
adc
sub
mov
imul
push
xor
insb
cs
arpl
adc
sbb
mov
mov
rcll
xchg
rorl
adc
nop
loope
sub
test
and
jbe
push
xchg
rorb
mov
in
sbb
mov
mov
adc
aas
jne
xchg
jno
es
dec
mov
and
xlat
add
sbb
lahf
jmp
jo
hlt
push
xchg
stos
imul
push
cwtl
dec
xor
repz
xor
jp
dec
shrb
push
jae,pn
xchg
pop
pop
inc
or
sub
xchg
xchg
add
cli
jecxz
out
mov
sub
xchg
aad
dec
xor
repnz
xchg
and
pushf
roll
out
xchg
pop
sarb
dec
fldl
sahf
push
lea
clc
push
movsl
xchg
lock
mov
xchg
ljmp
stos
cmp
jg
jne
iret
outsb
loope
xchg
push
xor
xchg
cmp
pop
adc
repnz
adc
mov
mov
xor
push
std
imul
and
or
scas
lahf
jmp
mov
mov
lods
andl
les
fwait
mull
int3
aaa
outsl
inc
fildl
xchg
sub
push
dec
in
insl
cmpsb
cmp
xor
xchg
cmp
push
arpl
mov
pop
jp
repnz
lahf
insl
into
sub
nop
insb
clc
xor
mov
dec
dec
lahf
cli
das
xchg
or
sub
push
stc
push
out
test
mov
or
lret
fwait
fwait
pop
lods
jp
adc
add
or
adc
xor
das
aas
stc
enter
call
into
int
jp
jmp
push
imul
dec
pop
outsl
stos
fwait
mov
fmulp
jl
in
fbstp
jbe
sbb
jns
idivl
adc
outsb
mov
mov
pushf
dec
pop
push
pop
fidivs
jmp
sub
jmp
mov
shrl
sbb
scas
cld
xchg
mov
dec
scas
jle
ret
dec
xor
push
cmp
xor
fsub
and
gs
mov
pop
aad
lret
frstpm(287
push
cmp
or
out
adc
or
sub
into
jecxz
popa
xchg
mov
mov
into
icebp
pushf
lcall
mov
sbb
ljmp
stc
push
xchg
jge
es
cs
sarb
jle
add
sbb
fisttpl
loope
out
sbb
xchg
cltd
jecxz
dec
or
jecxz
fisubl
imul
lret
icebp
push
arpl
ljmp
pop
aas
repnz
out
rorl
ficoml
pop
and
test
ds
mov
outsl
or
and
outsb
mov
pop
jg
mov
in
cs
test
push
mulb
adcl
inc
out
xchg
jnp
adc
pop
pop
cmp
fs
js
xor
mov
in
fimull
mov
lods
jmp
sbb
js
cmpsl
xchg
sub
mov
pop
movsl
pop
outsb
adcb
or
cmp
sub
xchg
dec
sbb
fadd
lret
stc
outsb
fbstp
jbe
pusha
subb
lea
dec
pushf
mov
jp
cmpsl
push
ja
mov
sbb
cmp
addr16
ret
stos
lods
out
inc
push
sub
jmp
stos
mov
popa
pop
sbb
pop
fstl
test
sbbl
xor
or
not
lret
mov
lods
shlb
shrb
fidivs
pop
out
ret
xor
and
repnz
outsb
in
push
mov
mov
and
inc
loop
popf
mov
adc
mov
filds
popf
cmp
or
pop
xchg
add
aas
pop
cmp
push
xchg
xor
rcl
inc
xlat
outsl
push
and
xor
cltd
lods
or
aad
dec
fcomps
cltd
adc
iret
std
push
imul
movsb
loopne
cmp
test
add
jmp
in
lea
shlb
mov
scas
jl
or
popf
mov
and
das
xor
das
lret
add
adc
and
or
dec
je
loopne
xor
sarb
iret
xor
fisttps
insl
mov
mov
xor
adc
jecxz
jle
cli
jecxz
cli
and
ror
lahf
inc
push
push
test
lods
jns
lahf
lret
cmp
fs
add
mov
out
jbe
pop
lcall
not
xor
arpl
and
dec
xchg
ret
jecxz
test
jg
mov
jge
xor
fildll
fisubrs
dec
int3
mov
insb
icebp
addr16
mov
sti
pop
imul
loope
enter
push
sbb
inc
mov
cmpb
jge
push
dec
subl
cmp
mov
mov
lods
inc
jmp
add
xchg
scas
loope
loopne
add
jnp
sarl
sti
fwait
mov
fcoml
hlt
imul
dec
pushf
repz
jecxz
cmpsb
mov
dec
pop
xchg
dec
jle
lret
xchg
pop
loopne
adc
ja
orb
enter
shr
pop
push
dec
aad
or
es
int3
mov
sbb
push
popa
lods
push
mov
decb
sbb
les
inc
sbb
popa
loopne
add
push
and
pop
xor
imul
jg
mov
xlat
inc
xchg
sbb
out
cmpsl
mov
mov
out
lahf
rolb
sbb
push
idivb
popf
lods
mov
aaa
and
mov
push
mov
mov
out
inc
rorb
inc
push
punpcklwd
adc
mov
mov
mov
jb
mov
ljmp
scas
jae
sub
leave
out
ja
adc
addr16
int
sti
sbb
add
dec
loopne
mov
dec
movsb
cmp
mov
scas
pop
loope
xchg
lea
and
mov
mov
mov
xlat
sbb
jge
je
rorb
stc
push
inc
ror
jecxz
mov
pop
xchg
mov
lahf
mov
hlt
push
into
sub
ficompl
cmp
scas
bound
inc
in
cmp
cmp
dec
ss
aam
inc
sub
sti
pop
imul
rcrb
imulb
popf
mov
decb
shlb
mov
and
fbstp
push
imul
and
jmp
sbb
push
add
sahf
pop
loopne
das
add
test
and
ret
sarl
test
sub
sbb
iret
add
xor
sub
mov
les
push
push
arpl
xchg
dec
movsb
dec
jns
loope
push
imul
out
ret
lea
cmpsl
inc
loopne
sahf
adc
mov
gs
pushf
cmp
int
sbb
mov
pushl
js
insl
cmp
lret
add
adc
fdivrl
push
and
xchg
clc
pushf
bound
xchg
fnsave
xchg
inc
stos
sarb
scas
lea
stc
leave
sbb
sbb
push
xchg
cltd
cmp
imul
int
push
mov
cmp
add
or
or
push
mov
inc
sbb
mov
or
mov
push
je
push
lahf
mov
mov
xchg
sahf
sub
dec
loope
jmp
shrl
mov
cmovle
inc
std
or
and
rclb
push
loopne
cmp
fisubl
sub
add
jle
lods
push
xchg
decl
xchg
push
jle
sbb
int
push
mov
add
or
sub
lock
mov
push
rorb
sub
mov
repnz
add
mov
leave
lods
add
sub
ja
vmread
pop
mov
push
sub
mov
or
outsl
pusha
jns
mov
add
leave
mov
sub
loopne
mov
cld
xchg
insb
jae
mov
or
popa
ficoml
repnz
f2xm1
jecxz
and
in
out
fildl
loope
sub
xchg
pop
out
or
mov
add
push
js
mov
rorb
sti
pop
dec
push
push
das
dec
ret
roll
cmp
in
jno
dec
insl
xor
push
dec
xchg
imul
sub
sub
hlt
cmp
inc
add
in
mov
pop
dec
push
sub
pusha
in
out
xchg
mov
ret
scas
aad
bound
mov
sub
daa
shr
mov
scas
fiaddl
ljmp
sahf
dec
jecxz
rcll
add
dec
repz
out
add
rclb
outsb
cltd
dec
mov
dec
or
xchg
imul
sbbl
sub
add
and
aas
push
xchg
mov
js
inc
out
pop
dec
testl
shrb
out
xchg
adc
out
shll
pop
xchg
adc
fistpl
shrb
les
add
cld
mov
sub
lret
and
sbb
movsl
cld
adc
mov
mov
jmp
in
daa
insb
jmp
or
in
cmp
jns
mov
cmovs
mov
push
fstpt
jle
jmp
pop
mov
in
pusha
movsb
adc
sub
mov
jns
call
add
lods
xchg
push
data16
shlb
mov
push
fdiv
push
xchg
mov
mov
xchg
addr16
cmpsl
pop
inc
adc
push
sub
fwait
adc
les
inc
iret
mov
and
jge
out
cmp
int
cmp
imul
imul
stc
gs
or
cmp
or
xchg
push
fwait
out
push
ja
lcall
xor
pusha
int
cmpb
fistps
and
in
das
data16
xchg
icebp
push
lods
popa
fbld
and
in
sbb
setnp
push
daa
jnp
subl
pmullw
incl
pop
fdivs
fstpl
stos
cmp
pop
jmp
sub
aas
and
mov
movsl
dec
imull
std
cli
icebp
stos
repz
out
pop
cltd
scas
jp
rorl
dec
dec
push
mov
ds
add
cld
push
movsb
cmp
push
and
stc
mov
add
and
packsswb
ror
lahf
cmp
fists
loop
dec
shl
ret
cmpsb
dec
sub
fnstenv
test
scas
inc
aaa
xchg
popf
xchg
insb
dec
xor
lcall
dec
jae
out
add
inc
adc
push
pusha
jae
jno
and
nop
mov
cmp
daa
out
int
lods
sarl
shll
es
test
xchg
fwait
xchg
fdivrl
daa
and
fcoml
xchg
cmpsb
push
and
lret
cs
mov
shlb
xor
xchg
loope
daa
pop
mov
outsl
and
xchg
outsl
xchg
test
push
ds
cmp
rep
push
dec
out
dec
scas
imul
daa
sbb
jno
lret
xchg
dec
rcrl
mov
insb
xlat
sbb
xchg
sbb
repnz
add
repnz
and
aad
xchg
or
dec
push
fidivrs
idiv
sbbl
lock
in
mov
fsts
dec
out
dec
andl
movsl
insl
xor
adcl
dec
xchg
mov
lods
stc
push
fs
mov
add
fnstcw
xchg
lods
adc
xchg
cmpsb
cmc
xchg
in
push
pop
adc
fsubrl
add
push
fdivrs
mov
mov
out
pop
sub
sbb
pushf
je
jecxz
pushf
jbe
mov
lock
mov
mov
subb
shl
test
mov
sbb
mov
adc
xlat
cmpsb
jg
xorl
aas
fcomps
or
cwtl
gs
sbb
outsl
lcall
sbbb
push
leave
pushf
out
flds
out
mov
call
test
je
adc
insl
jmp
ss
fsubl
ja
jmp
roll
iret
pop
testl
push
outsl
insl
inc
cmp
das
and
dec
test
out
or
daa
jne
aam
ss
mov
out
mov
subl
fistpll
add
outsb
add
sarb
fldl
dec
popa
int3
mov
ret
cmpsb
sub
je
ds
test
fwait
clc
leave
cli
jne
in
xchg
inc
or
int3
lcall
es
outsl
inc
adc
jae
lea
sbb
cs
pusha
out
lds
pushf
xchg
push
stos
or
push
adc
lea
add
adc
shll
cmpsl
and
sbb
aaa
jp
int3
mov
push
jg
scas
imul
bound
and
shrb
mov
das
int3
ret
sarl
sbb
push
je
dec
in
xor
das
test
inc
mov
ret
aad
dec
popf
bnd
mov
and
sub
xchg
push
jae
push
xchg
scas
push
insb
cmpsb
insb
cmc
add
lods
les
dec
lahf
nop
icebp
loope
cmp
push
cmp
add
idivb
cmp
aaa
cmp
das
stc
sbb
rcrl
jns
ljmp
pop
xchg
cmc
lahf
fs
lds
dec
push
clc
adc
movsl
imul
div
data16
mov
pop
pop
push
frstor
mov
test
negb
sbb
mov
and
adc
lea
pop
ret
push
jbe
sub
jb
movsl
mov
or
push
test
mov
loopne
nop
lods
frstor
mov
sahf
mov
jg
rclb
xor
pop
les
xlat
jp
dec
fucom
mov
repnz
add
jno
stos
insb
dec
mov
xchg
rolb
pop
mov
xchg
push
jns
push
cli
sbb
mov
inc
mov
std
mov
cmp
rcrb
shrb
addb
lods
popa
aaa
jmp
pushf
shll
sbbb
add
js
mov
pop
int3
add
adc
rol
fists
mov
add
pop
xor
stc
std
ds
adc
std
cwtl
loop
inc
pushf
outsl
dec
mov
dec
add
mov
call
test
mov
rclb
rol
repz
nop
loop
push
mov
cmpb
test
sub
les
icebp
das
fs
addl
and
dec
xchg
cmp
push
inc
pusha
dec
stc
pop
pop
xchg
push
xor
jecxz
rcrb
shr
and
test
push
sahf
lds
mov
sbb
aaa
inc
popf
cmp
pop
xchg
pop
xchg
mov
imul
ficompl
pop
lods
js
jecxz
subl
sub
cwtl
int
sbb
jl
xchg
repnz
inc
scas
sbb
inc
mov
jne
jle
xor
push
fucom
xor
xchg
stc
aad
push
ja
lods
pushf
push
mov
fcomi
mov
dec
shr
lret
cld
aaa
cs
add
cmc
leave
add
inc
test
mov
dec
int3
imul
and
cwtl
adc
inc
lret
cld
adc
es
push
or
daa
icebp
fldenv
inc
mov
data16
sub
icebp
inc
fisttps
inc
pop
sbb
cltd
lret
leave
sbb
fadds
dec
cli
cmpsl
add
clc
cmpsb
mov
mull
nop
stos
idivl
int
out
xchg
inc
cmpsl
lret
dec
and
push
sbb
sbb
dec
repnz
insl
scas
rcll
dec
inc
xchg
cwtl
jo
or
mov
add
mov
movsb
mov
xchg
inc
aad
cmp
pop
faddp
mov
push
add
icebp
inc
pop
lods
in
mov
je
mov
push
adc
pop
int
clc
push
mov
adc
iret
jl
inc
or
aas
jecxz
out
ljmp
pop
push
pop
je
stc
in
push
fucom
jnp
repz
cltd
out
lods
jb
and
ficoms
out
out
cmpsl
adc
mov
test
ds
in
jle
dec
notb
cmc
push
and
dec
add
xchg
dec
stos
imul
fmul
jb
nop
xchg
or
pop
lods
push
mov
in
in
iret
imul
sub
aaa
and
push
jb
sub
adc
loope
sub
fwait
and
movsl
jecxz
dec
fldcw
popf
jae
fmul
add
xchg
fs
cmp
cmp
incb
inc
mov
adcb
in
loope
imul
addl
jno
cmp
push
jns
mov
mov
lret
addr16
ds
and
jl
addb
in
jb
and
xchg
dec
subb
fnstcw
iret
arpl
sub
ror
mov
mov
rcl
push
add
dec
ds
addr16
jo
sbb
add
mov
pop
jae
or
adc
pop
sbb
sub
jg
lea
pop
jbe
add
data16
sbb
pop
addr16
aaa
cli
out
aad
gs
mov
push
aad
sub
aad
dec
and
and
in
adc
pop
push
sbb
dec
xchg
xor
in
mov
sbb
mov
dec
or
adc
sbb
test
rorb
adc
xchg
xchg
xor
roll
mov
push
popa
dec
data16
test
xchg
cwtl
lcall
inc
shll
aaa
aaa
dec
mov
jl
out
cs
jb
out
roll
popa
or
or
dec
negl
mov
jp
xchg
lret
pop
pop
push
subb
insl
cwtl
adc
or
push
ror
sbb
inc
add
sti
scas
add
scas
pop
cmpl
add
adc
test
popf
leave
out
dec
and
mov
mov
mov
dec
inc
pop
int3
xchg
ljmp
mov
xor
movsb
mov
inc
xor
cmp
jae
adcb
jnp
dec
ss
pushf
hlt
add
or
fidivrs
mov
lret
jbe
lret
dec
push
cmp
fwait
xchg
jns
xor
push
ret
pop
icebp
aad
lods
mov
lret
mov
imul
mov
cmp
sbb
lea
xchg
push
cmp
test
mov
inc
push
cltd
sub
dec
orl
push
mov
clc
inc
xlat
inc
push
xchg
test
fwait
movsb
cmp
mov
repz
in
cld
or
cmp
mov
mov
xchg
iret
dec
int
sbb
dec
push
lock
jmp
add
xchg
push
dec
xchg
rclb
or
movb
push
insl
cmc
xchg
sbb
jne
jae
push
or
cmpsl
fsubrl
inc
ljmp
and
add
stos
jge
jae
sti
movsb
inc
pushf
rorb
inc
jbe
fldcw
sub
cltd
add
aaa
in
lahf
aad
jbe
pop
scas
jbe
sti
mov
lahf
sbb
mov
out
push
clc
popf
push
enter
or
pop
jle
fdivl
mov
sbb
dec
ljmp
fisubrs
out
pop
scas
dec
dec
ss
or
inc
ficoms
or
jb
lds
or
out
shrl
clc
rclb
or
jg
fsubs
fwait
or
sub
ja
mov
fdiv
das
ret
mov
mov
pushf
or
push
test
dec
xchg
dec
cmpxchg
imul
jge,pt
pushf
adc
cmp
mov
and
jg
imul
sub
ret
mov
mov
sti
dec
std
xchg
cmp
test
int
and
int
sbb
or
dec
cmp
mov
mov
or
push
js
aam
mov
jecxz
fsubs
rcl
gs
sub
cmp
cwtl
stos
lret
rolb
add
dec
cmp
stc
dec
lret
out
es
push
adc
adc
sbb
cmpl
cmp
or
cmp
xchg
cmp
cli
flds
xor
xchg
adc
shrb
movsb
cmpsb
inc
lret
adc
add
ss
xor
fsubl
fisttps
and
out
test
repz
adc
out
dec
leave
gs
popa
insb
movb
js
cmp
mov
or
popa
scas
insl
or
pop
test
add
push
je
cmp
and
pushf
sub
pop
add
es
mul
nop
in
loopne
lods
adc
cmp
xchg
mov
fs
mov
aad
cltd
pop
rorl
test
std
xchg
call
jg
roll
arpl
jo
add
push
fstpl
lods
and
or
insb
push
cmpb
dec
aam
movsl
mov
dec
jp
cmpsb
fwait
pushf
mov
cmc
int3
mov
cmc
icebp
pop
subb
and
jne
jae
jns
inc
jns
loope
jbe
jns
cli
adc
or
pop
das
loop
inc
jg
mov
lret
and
mov
push
cmp
mov
sub
out
shrb
arpl
inc
testl
shll
mov
jbe
inc
aam
adc
mov
cmp
js
out
stos
and
inc
mov
or
or
cmpsb
mov
adc
xchg
dec
jle
cmp
pop
ret
test
ds
mov
inc
push
call
loop
fildl
mov
inc
aad
leave
loopne
es
pop
pusha
add
jecxz
sbb
mov
mov
cmpsb
rclb
xor
add
lock
push
out
arpl
jno
push
iret
aad
jl
jnp
lods
int
loop
sahf
outsl
pusha
stc
sbb
or
insl
adc
xchg
mov
loop
lock
pop
mov
push
sbb
jnp
jge
pop
in
int
add
sub
jmp
rclb
icebp
mov
out
mov
lahf
addr16
fisttps
xchg
mov
jmp
addb
cmpsb
stc
bound
lods
ja
push
loope
cmc
popl
push
pop
addr16
int3
gs
por
iret
clc
cmpl
push
mov
or
ss
xchg
adc
xchg
mov
adc
cmp
add
push
cmp
sub
into
es
dec
pop
jmp
std
imul
test
adc
jbe
data16
aaa
xchg
xchg
in
cmpsl
lret
out
test
lea
dec
pushf
pop
loope
cmc
clc
mov
aaa
cmp
add
stc
aaa
aad
loopne
xlat
add
xchg
insl
dec
icebp
mul
jne
cs
sbb
push
rorl
lock
aas
xchg
push
sub
lea
pop
push
mov
rcrb
push
cmp
mov
inc
adc
dec
and
and
push
mov
negl
and
out
int
adc
xchg
jbe
jnp
outsl
mov
mov
mov
sub
adc
jg
gs
paddusb
pop
mov
xor
pop
pusha
fsubl
sbb
fadd
xchg
mov
push
mov
pop
add
cmpsb
nop
xchg
sub
stos
inc
mov
daa
arpl
adc
popa
push
daa
inc
cld
push
push
fldl
sub
lds
mov
stos
test
push
sbb
roll
sub
addr16
mov
cmp
sbb
dec
pop
test
add
push
cs
jp
pop
dec
inc
test
in
add
or
pop
outsb
cmpsl
sub
mov
cmp
ror
push
add
xor
sub
mov
nop
lods
iret
scas
fs
or
inc
dec
jno
loope
das
adc
sbb
xor
inc
push
inc
dec
push
aam
ds
sbb
dec
dec
enter
dec
in
pop
dec
jno
mov
push
dec
fstp
mov
insb
stos
in
adcl
cltd
iret
lcall
or
in
jmp
ds
je
arpl
movsb
push
xchg
xchg
push
jp
outsl
jge
pop
cmp
in
or
stc
lods
mov
cmp
xchg
aam
add
fsubrl
jle
into
scas
andl
fwait
mov
sbb
pop
mov
nop
or
out
in
iret
hlt
gs
jle
push
xor
cmp
es
push
fldenv
mov
push
cltd
in
sahf
push
arpl
mulb
pop
loope
adc
add
adc
daa
iret
pop
and
sbb
in
mov
rcrb
aaa
or
and
jmp
popa
jmp
xlat
or
les
push
arpl
lods
bound
cmp
xor
pop
xchg
aad
add
jle
fiadds
cmp
add
inc
mov
adc
sub
aaa
xor
filds
and
in
pop
push
cmpsb
or
bound
xchg
outsb
xchg
lea
jo
mov
and
cltd
or
pop
fsubrs
fsubs
lds
mov
cmc
xor
jp
pop
inc
ja
and
xor
or
or
outsb
sub
mov
test
pop
jmp
inc
loope
lods
out
pop
imul
lcall
lock
loop
insb
jo
lods
dec
adc
leave
and
jecxz
lods
dec
xchg
adc
inc
pop
mov
mov
xor
ss
pop
pop
sbbb
ja
mov
inc
dec
xor
add
out
stos
inc
in
out
ret
xchg
push
lcall
inc
stos
mov
ss
jb
sbb
add
adc
pop
aad
add
lods
repnz
inc
stos
jge
xchg
jb
popa
push
add
xchg
push
and
pushf
je,pt
push
push
stc
mov
rcrl
in
aas
dec
lahf
fcomps
cltd
inc
lcall
pop
push
out
frstor
jno
cs
xor
shlb
cmp
repz
inc
stos
cmp
add
adc
mov
pop
in
fiadds
sub
pop
sub
ss
push
mov
aaa
mov
fstps
js
or
cmp
fldenv
jl
and
add
out
dec
jmp
lcall
mov
out
nop
pop
add
ss
aaa
jmp
and
out
loop
cmp
xchg
ret
add
out
aaa
sbb
xor
xor
push
fstps
xchg
xchg
or
test
ds
cs
and
sbb
cltd
outsl
mov
xchg
push
ficomps
push
out
add
addr16
push
rorl
dec
lret
repz
stos
mov
sub
mov
lea
inc
repz
or
mov
ficomps
mov
mov
das
sti
jo
jnp
nop
loopne
ret
data16
pop
add
adc
sbb
inc
jne
roll
cmp
cmpsw
mov
mov
mull
pop
mov
inc
xlat
dec
fcomi
stc
cmp
js
shrb
leave
in
push
xchg
xor
stc
shr
inc
les
js
sbb
xchg
testl
cmp
cltd
mov
out
adc
cmp
out
insb
out
sar
ret
icebp
iretw
jns
mov
add
test
shll
clc
jge
adc
inc
shrl
pop
ret
rol
mov
or
push
stc
sbbl
sbb
clc
pop
in
dec
iret
scas
pusha
cmc
mov
mov
inc
mov
mov
cmc
pop
adcb
fs
cmp
stos
js
into
mov
push
push
mov
roll
dec
mov
inc
xorl
loopne
pop
dec
xor
aaa
cs
pusha
cmp
add
mov
pushf
data16
or
dec
adc
test
jbe
push
mov
lahf
imul
jno
nop
jb
mov
stc
lods
dec
pop
jns
test
jecxz
xlat
dec
adc
xlat
push
jge
push
jns
sub
sti
out
popa
imul
xchg
lret
push
or
dec
rcll
fcomps
xchg
cli
xor
iret
mov
jb
push
daa
loopne
std
pop
je
test
sbb
push
add
loop
movsb
cmp
adc
adc
xchg
repz
xor
sub
mov
jp
xchg
nop
pop
pop
mov
cwtl
stos
sbb
dec
mov
imul
popa
pushl
xchg
push
std
cmpsl
pop
iret
cmp
or
sbb
pop
loopne
mov
and
out
shll
push
int
sahf
sub
jl
mov
lock
cmpsl
sbb
je
sub
push
fnstcw
ja
add
add
adc
xchg
sub
xchg
sbb
jle
sub
in
inc
loop
idivl
add
and
int
lea
ret
xchg
xchg
leave
pop
data16
mov
or
inc
sbb
cmp
subl
arpl
inc
out
push
and
jbe
ljmp
adc
ja
arpl
cmp
mov
test
dec
jg
int
nop
inc
dec
jnp
scas
adc
loope
fsts
dec
dec
pop
arpl
xchg
xor
xchg
mov
push
lods
push
cmpsl
dec
pop
mov
mov
subb
rorb
sbb
aas
cmp
cmpsl
dec
imul
int3
push
lret
mov
xchg
insl
test
jle
pop
stc
stos
lods
xchg
and
std
mov
clc
or
pop
std
aam
mov
inc
je
fistl
xchg
or
repz
dec
cmp
test
int3
push
mov
pop
inc
inc
cmp
repz
dec
xchg
pop
ret
arpl
cli
cmpsb
xor
mov
mov
cmpsb
test
js,pn
fcmovb
insl
and
ret
mov
mov
dec
into
mov
inc
das
mov
lods
das
sti
int
fimull
dec
sti
fs
pop
mov
push
fldt
rcr
and
mov
daa
xchg
jle
add
lcall
stc
pop
jo
jbe
out
mov
fcomps
mov
sbbb
insl
repz
inc
jecxz
sub
cmpsl
or
ror
popf
and
or
addl
push
mov
dec
jp
enter
xchg
rcl
sahf
lock
dec
stos
or
out
sub
sub
shlb
mulb
addr16
mov
pop
cmp
pop
out
pop
mov
mov
dec
ret
int
dec
js
push
dec
insl
xor
jg
xchg
lcall
andl
mov
jns
fwait
hlt
ds
inc
cmp
test
inc
loopne
ret
lahf
jmp
xchg
pop
test
loopne
stos
pop
das
pop
cmp
xchg
lret
sbb
sbb
in
adc
or
dec
jae
fwait
push
pop
jmp
push
xchg
push
and
popa
dec
fxch
imul
test
push
cmpsl
jle
inc
dec
jb
and
sub
cwtl
and
mov
inc
daa
mov
pop
mov
jae
lcall
xchg
jno
stos
loope
repz
out
xor
shll
das
xor
call
aaa
jecxz
loopne
xchg
adc
push
sti
popl
cmc
addb
aam
flds
xor
gs
push
dec
cmp
push
push
mov
aas
rcrl
mov
stos
lahf
loope
mov
bound
ja
shlb
ja
pop
dec
sub
popf
cmp
inc
cmp
cmp
in
js
test
pop
xor
push
js
xchg
fdivrl
jbe
test
testb
push
push
rorb
fidivs
sbb
pop
aas
sub
sub
fstl
ret
or
adc
lret
xchg
inc
inc
jecxz
cli
xor
xor
mov
push
inc
aad
mov
enter
push
adc
nop
push
push
cmc
jbe
hlt
rcrl
test
dec
stos
mov
lods
sbb
inc
pop
xor
pop
adc
add
push
dec
in
pop
popa
xor
or
inc
sahf
mov
cmc
pusha
xorl
jae
sub
mov
lret
mov
mov
and
andb
sahf
cmp
addr16
jmp
les
lock
movsb
pop
je
rep
cli
jae
push
in
adc
rorl
cmp
adc
movb
inc
repz
pushf
ret
out
add
popf
leave
xor
push
pxor
icebp
enter
cmp
test
fwait
and
inc
inc
insl
mov
cwtl
jae
call
mov
in
jne
stc
out
xor
std
addr16
imul
push
jp
fs
lods
lret
xor
mov
cmp
cmc
sahf
fwait
enter
lods
imul
dec
fsubr
push
dec
testl
aad
sbb
sti
push
cs
jl
pop
aas
sbb
repz
or
cmc
ds
jmp
sbb
dec
inc
aam
out
ljmp
jne
sub
xor
rol
mov
stos
out
sbb
orb
jp
cmp
sti
pop
pop
orl
xor
cmp
cs
push
sbb
lahf
cmpsw
inc
and
lcall
sub
push
outsb
repz
icebp
pop
nop
shlb
mov
lock
sub
adc
dec
hlt
cld
xchg
test
aam
inc
sub
jge
push
cmp
adc
outsb
loope
clc
dec
xor
push
adcl
push
push
sub
mov
cltd
leave
xor
lods
sub
and
mov
cmp
xor
xor
lea
fwait
dec
test
stos
mov
cltd
cmpsb
fistpll
mov
push
sbb
dec
bound
imulb
sub
lcall
repz
inc
inc
outsl
add
test
sub
gs
es
dec
rcll
fs
stc
and
xor
lods
int
nop
cmp
pop
and
test
inc
call
cmp
lods
jo
or
popf
fadd
fdivl
jb
gs
lods
in
test
adc
popf
jmp
mov
je
cld
adc
jnp
xchg
sbb
adc
int3
or
test
clc
dec
fs
shll
and
js
dec
mov
sbb
das
fsubr
in
sbb
cmp
das
mov
sbb
xchg
outsb
push
sub
movsb
std
pusha
xchg
aad
or
mov
and
mov
les
push
jno
in
ret
pop
sub
popf
sub
popf
cs
icebp
test
mov
or
and
cwtl
and
lret
push
dec
mov
repnz
mov
mov
or
int3
out
jl
mov
fistpl
pop
adc
pop
xchg
mov
cwtl
jnp
test
jmp
cltd
xchg
dec
dec
ds
lods
imul
in
out
cwtl
ret
ss
out
test
aam
push
inc
mov
in
cld
push
pop
add
mov
jo
nop
popf
mov
cmp
push
jnp
lahf
jnp
cmp
push
sbb
add
push
sub
pop
cmc
fimuls
fbld
popf
adc
xchg
movsl
xchg
dec
test
fbstp
addr16
inc
in
in
test
push
dec
mov
pop
mov
js
jmp
lods
or
sbb
xor
in
test
push
pop
shlb
stos
push
adc
dec
enter
push
ret
inc
insl
and
scas
push
cmp
or
dec
add
in
ss
jae
pop
call
les
js
add
cld
vphaddbq
or
stos
es
cwtl
imul
inc
popa
cmp
outsl
mov
imul
loope
cmp
mov
xor
fists
ja
xor
sub
add
leave
xchg
fstpt
daa
push
sub
test
mov
stc
fisubrl
push
into
int3
aas
pop
out
mov
stos
sbb
jno
addl
cmp
pushl
notl
rclb
insl
cs
mov
pop
cs
inc
out
js
orl
aad
lods
push
lret
jle
dec
xor
lret
pusha
out
dec
inc
popa
movsb
mov
pop
push
roll
int3
je
push
pop
inc
mov
in
popa
xchg
and
mov
gs
popa
or
enter
xlat
sub
dec
sbb
sbb
sahf
adc
dec
mov
pop
in
sbb
xchg
pop
imul
lcall
popf
adc
pushl
movsb
test
data16
mov
das
inc
jbe
jg
int3
je
int3
fsubrl
pop
outsl
sub
xchg
pop
dec
xchg
xchg
mov
push
xor
inc
and
ja
rcll
fnstcw
jbe
andb
fstps
push
sub
lods
pop
test
jae
inc
ficomps
loop
out
lods
fisubl
cmp
cmp
lea
push
push
add
push
or
rcrl
fstps
xor
mov
mov
sahf
or
bound
xlat
dec
dec
clc
inc
popa
inc
xorl
and
aad
insb
rclb
dec
adc
dec
inc
lret
add
fnsave
sar
pop
jle
jmp
sub
and
adcl
xor
insb
nop
in
lcall
nop
pusha
jb
fisubs
shlb
adcb
es
mov
push
or
out
jmp
mov
lahf
adc
hlt
pop
mov
cld
mov
ret
cmp
outsb
test
and
stc
jmp
sbb
or
loop
out
sbb
pop
sbb
jg
cmc
aaa
cmp
es
and
inc
repz
fidivl
inc
sub
cmpsb
loop
cmp
stc
xor
cmpsl
stos
loop
inc
jg
aad
popf
mov
inc
addr16
gs
or
fisttpll
call
dec
push
decb
mov
test
in
stc
add
ja
push
cmp
sub
xor
mov
mov
xor
adc
insb
nop
xchg
inc
push
in
pop
notl
aaa
ljmp
lods
xor
and
lods
adcl
push
data16
or
xchg
sbb
and
mov
pop
xor
lods
adc
pop
xchg
mov
shlb
xor
cmpb
add
cmp
sub
aas
in
push
pop
jno
xor
in
inc
cltd
sti
and
sub
std
int3
sbb
in
sbb
outsb
jmp
xchg
imulb
dec
mov
and
mov
inc
adc
aaa
xor
dec
dec
mov
cwtl
jle
outsl
lods
ss
mov
jb
and
mov
enter
pop
in
mov
mov
and
push
data16
xchg
fisubs
daa
js
sbb
jbe,pt
lahf
xor
push
mov
adc
ja
enter
scas
daa
inc
mov
and
outsl
out
ss
push
lret
test
test
cltd
jecxz
inc
bound
and
ret
push
sub
je
imul
mov
inc
and
xchg
pushl
lcall
popa
mov
iret
pop
repz
int3
cmpsl
mov
sub
inc
lock
jb
adc
push
inc
arpl
test
add
pop
adc
or
pop
insl
sbb
jo
inc
adc
mov
test
push
roll
out
mov
and
repz
inc
push
sbb
cmpsb
bound
js
sbb
mov
stc
cwtl
jecxz
stc
pop
lock
ss
xlat
aaa
fsubl
dec
or
mov
lret
jb
popf
in
mov
xor
mov
jns
mov
test
rol
or
in
popf
fcoml
xlat
sub
cmpsb
xchg
cmpl
sub
dec
pop
test
cvtps2pd
cwtl
sub
imul
inc
dec
add
pop
and
sbb
inc
divb
repnz
or
push
ja
lret
or
add
cmp
roll
test
push
addl
enter
xor
imul
arpl
addps
adc
aam
mov
adc
cmp
mov
scas
push
sahf
jnp
fisttpll
fsubs
bound
or
stos
popf
dec
lds
js
fnsave
xchg
loopne
add
movsb
fld
mov
ja
aam
adc
push
fisttpll
jmp
cmp
js
and
notl
out
inc
sbb
and
mov
push
aam
mov
dec
push
insb
vmovdqu
cwtl
sti
fidivrl
filds
out
inc
int3
mov
or
aaa
lods
or
jle
inc
test
inc
rcl
das
pop
xlat
sub
nop
jl
lret
cmp
or
in
sbb
mov
and
xor
imul
inc
shl
xor
lret
es
lods
into
xchg
mov
repz
out
pop
mov
inc
aad
push
or
cmp
cld
dec
jae
daa
movsl
ss
sub
xchg
cltd
insl
mov
cmpsl
das
lock
daa
mov
xchg
pop
fmull
out
enter
cmp
stos
adc
popa
repz
sub
xor
inc
mov
js
and
and
jge
das
popf
cmp
ljmp
int3
xor
lcall
mul
inc
mov
mov
ret
rorb
dec
jp
repnz
pop
imul
popa
sbb
inc
xchg
adc
sbb
jnp
jnp
push
lret
test
xchg
adc
pop
notb
pushf
sbb
adc
xor
xchg
test
repnz
dec
ss
fistps
ds
aam
popf
mov
in
and
sub
popf
mov
pop
pop
in
xchg
cmpsl
cmp
fsubp
movsl
jbe
aad
loope
fadd
jo
popa
scas
icebp
jnp
and
movsl
pop
pop
dec
dec
or
jbe
sbb
cs
jmp
notl
push
pop
scas
ret
jl
jge
adc
inc
scas
mov
push
sub
out
adc
jne
lods
pushw
in
imul
sub
out
mov
je
push
in
cmc
ss
out
ret
adc
out
mov
iret
push
pop
inc
inc
push
les
ss
jno
dec
xchg
or
roll
test
or
fisubrl
inc
add
mov
adc
je
mov
jmp
mov
pop
adc
fnstenv
xchg
mov
insl
les
shlb
sbb
addl
dec
inc
push
sub
jge
add
jns
enter
imul
in
mov
ret
mov
stos
rcr
xchg
iret
notb
push
loop
int3
push
or
scas
pand
cltd
insb
cmp
cmp
daa
lret
cmp
or
addb
loopne
push
mov
ja
lcall
fs
fwait
leave
lods
and
shrl
repnz
stc
mov
outsl
mov
popf
mov
movsl
jae
add
fidivrl
aas
jbe
rcll
out
push
das
push
push
push
adc
repz
xchg
jnp
dec
push
aam
mov
and
dec
push
das
enter
lods
icebp
nop
pop
xchg
cwtl
and
movsl
aam
lods
pusha
mov
mov
adc
xor
loop
sbb
or
loope
cmc
adc
test
leave
shrl
xchg
jmp
movsb
xor
push
incl
add
adc
daa
xchg
js
mov
mov
ja
addr16
mov
jp
pop
cmp
loop
leave
mov
in
in
mov
fnstsw
rorl
push
inc
insb
pop
push
dec
and
test
pop
into
mov
and
push
cmpsb
sahf
in
inc
cmp
xchg
mov
jb
and
sub
jno
subl
jno
dec
fcomi
rorl
addr16
leave
adc
pop
fwait
mov
arpl
push
cli
fildl
scas
je
pop
std
mov
push
imull
je
gs
in
inc
pop
aad
shl
shll
int
lahf
add
xchg
sbb
cli
test
addr16
mov
jo
icebp
lods
sub
les
enter
icebp
dec
dec
jmp
rol
push
popf
sahf
sbb
jae
dec
mov
imul
and
test
dec
and
and
mov
fisubl
pop
add
sahf
out
xchg
and
test
rclb
loopne
jmp
dec
cmp
xchg
fcmovbe
incl
mov
rcr
dec
cmc
fwait
sub
int3
xorb
pop
hlt
xchg
lret
dec
insb
jl
cltd
mov
inc
cld
mov
cmp
jne
lahf
add
in
or
push
stos
add
das
add
push
mov
es
xchg
jmp
pop
push
shlb
scas
push
xor
outsb
adc
andb
aaa
leave
insl
out
mov
cmp
mov
dec
mov
mov
mov
and
aad
push
adc
jo
insl
jmp
cs
dec
lds
aam
loope
pop
insl
pop
jge
lea
sub
or
mull
or
sahf
repnz
stos
dec
enter
pop
mov
xor
adc
push
sub
mov
add
bound
test
mov
mov
es
mov
stc
test
mov
dec
idiv
dec
inc
popa
pusha
push
add
cmp
out
ret
mov
pop
push
push
jmp
inc
add
xchg
int3
ljmp
aas
nop
mov
sub
push
push
and
out
out
or
mov
test
jl
push
dec
fcomps
ljmp
es
mov
hlt
add
ljmp
stos
lret
fsts
sbb
call
jge
pop
bnd
inc
repnz
aas
jp
leave
inc
mov
push
and
mov
rcrb
sbb
stos
jle
cli
push
popf
ljmp
cmp
lds
lcall
loope
push
jnp
in
fiaddl
je
pop
jmp
push
ljmp
popf
or
cli
sbb
loop
in
sub
fimull
xor
daa
add
inc
cmpsb
dec
or
mov
in
in
mov
movsb
inc
nop
bound
lock
cmp
mov
dec
call
push
pushl
jecxz
cmp
mov
enter
fwait
jno
out
push
movsl
mov
addl
inc
rcll
adc
mov
test
add
fadds
push
sbb
lret
popa
hlt
xchg
lcall
ret
push
inc
or
inc
aam
dec
lret
xchg
pop
lret
dec
xchg
bound
xchg
fnstenv
out
stc
rcll
lcall
push
jb
gs
inc
iret
mov
ret
adc
push
mov
lea
dec
jno
lea
cmp
cmpsb
lgs
inc
stc
push
cmpsl
dec
addl
aam
out
not
push
sub
rorl
pmaxsw
mov
imul
mov
mov
mov
push
xlat
sbb
int3
push
lret
mov
cmp
aas
push
cmp
ss
xchg
sti
stos
pop
and
movb
dec
add
negb
cmp
push
sbb
stos
aaa
ficompl
cs
addr16
jmp
xlat
test
mov
neg
and
xchg
popf
icebp
jmp
xchg
ss
adc
rorb
pop
out
mov
arpl
or
xchg
push
std
les
pop
adc
mov
js
test
or
adc
enter
pop
xor
pop
repz
rcrb
cmp
xor
ret
je
jae
add
jp
aam
push
loop
ret
loope
ljmp
lea
imul
mov
insl
shlb
test
test
iret
push
jmp
in
inc
sbb
add
fisttpl
jecxz
lods
xor
xor
in
pop
xchg
cmp
movsl
pop
mov
outsl
je
cmp
or
mov
pop
push
xor
pop
rcr
mov
mov
and
loope
push
testl
mov
sbb
jp
jno
mov
push
call
push
popf
mov
cmpsl
imul
test
lds
add
dec
xor
jno
lahf
movsl
xchg
mov
jne
gs
out
cmp
sub
loopne
mov
jns
fldcw
cmpsb
pop
jmp
xor
mov
out
stos
mov
icebp
xchg
inc
and
dec
and
or
imul
movsb
int
add
aaa
arpl
cwtl
push
mov
xor
dec
xchg
inc
mov
imul
ret
xchg
and
test
cmc
adc
push
jb
push
cltd
dec
mov
jb
xor
sti
test
adc
jbe
arpl
out
adc
mov
pop
jo
das
mov
dec
inc
lea
mov
sbb
jae
pushw
fdivs
dec
in
sbb
mov
xchg
fisttpl
sub
repnz
lods
enter
add
shll
adc
scas
test
jno
loope
sbb
add
inc
mov
jbe
stc
or
add
into
inc
testl
sub
xchg
sbb
stos
popf
inc
data16
mov
mov
mov
add
pop
sarb
rcrl
xchg
mov
push
dec
jbe
mov
in
popa
shr
add
loope
je
loope
mov
adc
sbb
pop
cmc
testb
shl
adc
aam
sar
add
jnp
mov
xor
in
sahf
push
daa
push
or
fstpt
add
fildll
adc
sbb
add
sbb
jns
mov
add
push
cmp
inc
inc
fcoms
mov
dec
push
insb
lret
cld
push
ljmp
pop
fs
dec
mov
imul
sbb
xor
popa
insl
sub
in
scas
add
and
sbbl
shll
adc
imul
dec
pop
mov
and
lahf
inc
sbbb
push
outsl
or
mov
cld
pop
in
orl
dec
lock
jge
aas
enter
test
mov
sbb
mov
mov
adc
lds
xor
in
lret
xor
and
fbstp
loope
clc
cmpsl
push
mov
cmc
mov
mov
and
inc
dec
js
cmp
inc
fsubs
sarb
daa
in
cmp
jg
sbb
decl
cmpsb
xchg
push
push
in
jae
fdivrp
addb
add
sbb
dec
into
mov
mov
out
adc
stos
rclb
les
mov
jo
int
dec
hlt
mov
test
mov
std
lds
and
xlat
stos
mov
pop
pushf
mov
test
jl
dec
xchg
mov
mov
imul
sub
or
ds
and
lahf
inc
mov
sbb
or
call
fwait
repnz
xor
shrl
stos
cltd
js
inc
mov
sahf
dec
and
cmp
jo
in
jbe
push
xchg
insb
and
fs
dec
aaa
jg
pop
pushf
fstps
push
ss
loopne
outsl
pop
adc
push
stc
adc
mov
and
mov
cld
dec
jb
sbb
mov
movsb
xchg
mov
ret
cmp
mov
push
loope
fstpt
cli
inc
mov
adc
subl
dec
insb
mov
lcall
sbbb
mov
orb
add
and
or
xchg
inc
sub
sub
jmp
jmp
popa
mov
mov
clc
pop
dec
or
daa
ds
push
xor
mov
mov
xchg
scas
dec
arpl
jle
add
ljmp
outsl
push
push
dec
cmp
inc
inc
js
ret
sub
mov
in
callw
xor
xor
sub
mov
clc
or
icebp
ja
mov
or
stc
lods
cld
mov
fcoml
xor
adc
sub
in
inc
sub
fwait
leave
xchg
mov
test
mov
or
loop
cmpsl
add
ret
lcall
and
push
push
mov
mov
lock
icebp
fisubs
xchg
repz
js
cs
jecxz
mov
sahf
adc
ljmp
or
shrb
popf
adc
test
sar
pop
pop
or
pop
int
fcmovnbe
imul
xor
sub
inc
push
push
loop
loopne
or
out
xchg
sbb
in
lcall
ret
repz
ljmp
mov
xchg
idivb
xor
sbb
sbb
lahf
out
ja
adc
loop
outsl
push
pop
lea
je
cli
xor
cmp
mov
push
adc
sbb
scas
xor
dec
push
adc
push
xchg
pop
xor
loop
jg
adc
jmp
adc
xor
call
repz
popa
mov
or
add
imull
sbb
cmp
out
fwait
dec
fs
cmpsb
roll
mov
lods
xor
lods
pop
jae
fwait
je
out
pop
dec
repnz
xor
fdivrl
icebp
mov
lods
cmp
neg
cwtl
fisubs
aas
daa
mov
shl
shr
or
mov
add
iret
push
sub
and
xor
test
mov
mov
in
mov
shrb
enter
iret
push
test
imull
mov
lcall
cmpsb
mov
out
pop
lahf
sub
hlt
sahf
stos
mov
mov
out
mov
sbbb
repz
jmp
into
js
ja
ljmp
cmpsb
mov
add
add
cld
mov
mov
or
xor
add
cwtl
push
enter
mov
push
fs
pop
xchg
adcl
in
bswap
aaa
mov
insb
adc
jns
jge
sarl
fnstsw
fld
dec
data16
lcall
ljmp
mov
in
shr
push
cwtl
lret
inc
aaa
and
mov
repz
js
mov
jg
call
jno
out
ds
stos
push
sub
cwtl
xchg
daa
aam
mov
outsl
mov
jb
out
mov
mov
shll
xchg
or
pushf
pop
ss
cmpsl
mov
adc
movsb
es
addb
movsl
jae
inc
lret
mov
jmp
jmp
lds
mov
mov
in
jge
inc
or
loope
push
and
rorl
cmc
xchg
mov
pop
lods
push
daa
push
fcom
push
jg
adc
out
adc
loopne
movb
xchg
mov
xchg
leave
or
mov
repnz
sbb
orb
sbb
loopne
jp
pop
xchg
aad
cmp
fs
loop
add
stc
push
jnp
and
jns
inc
xorl
mov
push
cmp
and
test
cmp
xor
adc
mov
push
les
xorl
mov
jns
ja
mov
inc
xchg
jb
mov
jle
jno
mov
int3
add
addb
shll
pop
nop
mov
add
imul
xchg
cmp
adc
imul
cmp
rcl
out
or
cmp
cmp
call
dec
shll
rorb
push
sub
icebp
cwtl
dec
jmp
es
ret
inc
or
adc
xor
mov
out
bound
and
addr16
fadds
mov
and
xchg
test
lock
push
divl
pop
jne
sub
adc
nop
jmp
sub
in
mov
lock
xlat
pop
std
subl
sahf
or
stos
jne
mov
dec
push
pusha
xchg
ret
add
rorb
or
push
out
dec
push
mov
sarl
loope
jge
adc
iret
dec
inc
pop
sub
iret
cltd
xchg
je
and
jbe
jb
idivl
mov
jae
mov
nop
mov
ret
inc
pop
ja
sti
xchg
lahf
dec
add
out
sub
mov
les
pop
out
mov
repnz
in
cmp
lods
lods
jecxz
lea
and
fiaddl
or
incl
inc
add
adc
in
push
and
jl
fsubp
adc
and
ljmp
cmp
adc
push
loope,pn
mov
dec
sbb
popf
add
insl
daa
fisttpl
nop
push
in
fildl
aas
cmp
fisttpl
cmc
fcomi
mov
jl
jecxz
andl
xchg
loop
jl
adc
mov
push
dec
shll
cli
ss
test
icebp
movsl
in
dec
enter
insb
fisubrl
fistpll
adc
dec
jge
mov
int3
inc
add
and
fadds
lcall
add
cmp
xlat
mov
and
cmp
loopne
imul
and
sbb
pop
mov
jl
stos
pop
mov
lret
push
fadd
pop
xchg
insl
lea
dec
inc
das
mov
pop
in
pop
mov
das
int3
xor
cmp
or
xchg
jo
mov
jge
jecxz
xor
push
insl
push
ret
jp
loopew
jnp
not
jo
scas
ret
fst
lret
inc
add
sbb
xchg
lret
adc
xchg
insl
adc
dec
sbb
mov
xor
push
scas
mov
push
mov
int
out
insl
scas
mov
jge
pop
cmpsl
add
out
jmp
nop
imul
negl
push
mov
mov
arpl
idiv
or
xchg
mov
pop
pop
mov
dec
mov
test
or
mov
pushf
out
dec
fsubp
ret
movsb
mov
sahf
int
mov
aam
outsb
ja
push
pop
rclb
popf
cli
push
notb
add
jecxz
das
mov
out
or
scas
enter
cmpsb
or
mov
dec
out
test
push
cmc
or
jns
test
jmp
mov
add
add
enter
pusha
jo
xor
push
test
cmp
stos
inc
test
test
push
fisttps
adc
and
jg
pop
inc
adc
out
dec
adc
dec
pop
in
pop
sar
and
lea
jl
mov
mov
jle
push
orl
pop
movsb
out
in
or
rorb
aad
jl
sub
seto
dec
mov
ss
mov
aam
sbb
loopne
pop
push
xchg
jne
sub
in
or
xor
xchg
push
xchg
cmp
fwait
bound
adcb
lock
je
add
xlat
or
inc
push
je
test
jb
je
pop
or
mov
pop
push
es
bound
xor
repnz
adc
and
test
and
insl
pop
jmp
ss
mov
mov
cmpsb
imul
push
push
pop
aaa
inc
mov
rcll
jge
aam
and
mov
dec
lret
cmp
sub
sarb
xchg
ljmp
dec
sbb
pop
pop
mov
in
inc
in
int3
pop
sub
push
repz
test
push
mov
inc
in
xor
fstpl
lret
pusha
pop
frstor
xchg
rolb
or
or
popf
fstl
es
stos
sub
pusha
in
jns
add
adc
sarb
push
std
mov
xor
lods
jl
hlt
push
pop
xchg
add
arpl
dec
lcall
jbe
pop
or
repz
push
fcmovbe
cmc
adc
call
jmp
out
xchg
and
cmpsl
add
adc
mov
pop
aas
xor
mov
push
outsb
aaa
dec
mov
lahf
inc
add
dec
mov
jne
cmp
sarl
pop
pop
cmp
mov
jl
mov
and
inc
xorb
addl
popa
or
dec
and
xor
clc
push
dec
clc
pop
pop
cmp
bound
jecxz
inc
pop
ljmp
addb
adc
in
imul
pop
sub
imul
jg
inc
int
pushf
pushf
inc
pop
loop
pop
sbbl
sub
lock
leave
fnstcw
pop
scas
sarl
fisubrl
pop
aaa
popf
test
test
popa
in
mov
fdivr
pop
cli
sti
xor
push
cld
sahf
mov
xchg
fstpl
lock
in
test
mov
cltd
jae
or
pop
or
mov
mov
cli
xchg
aam
dec
lods
test
test
inc
test
insl
push
sub
into
dec
test
mov
mov
mov
fnstenv
add
std
out
push
add
and
mov
es
insb
mov
mov
dec
and
aam
xchg
stc
lods
shrl
repz
insb
pop
ja
pop
sbb
push
dec
mov
fldt
add
cmp
movsb
in
mov
push
pop
ss
xlat
mov
pop
cmp
pop
daa
and
fnstcw
lahf
mov
ret
jp
sahf
pushf
xor
cmp
lods
xchg
mov
jecxz
sbb
push
mov
fiadds
mov
mov
icebp
jg
rcr
pusha
shll
jmp
aaa
xchg
leave
mov
fadds
nop
inc
ljmp
cld
les
jle
or
xor
repnz
cmpl
jle
pop
sub
loopne
test
mov
inc
pop
sbb
inc
cwtl
fmull
in
mov
push
adc
repnz
inc
aam
add
xchg
push
movsb
mov
inc
movsl
into
lahf
es
push
inc
lahf
cld
jno
arpl
aas
iret
cmp
mov
sub
cmpsb
repnz
xor
fists
jno
push
pop
pop
in
xor
xlat
mov
add
pop
out
scas
jp
mov
ljmp
mov
pop
lret
inc
cltd
cld
adc
xchg
pop
in
stos
ja
fsubrp
mov
into
cmp
xchg
mov
aas
cmp
fstpl
dec
lods
shrb
xor
xor
in
push
or
test
sbb
mov
mov
xchg
inc
adc
xor
rcll
repz
sarb
ja
test
cs
mov
sbb
cmp
push
jno
mov
int3
rorl
sete
add
stos
adc
inc
ljmp
mov
adc
cmpsb
push
imul
add
jl
xor
out
pop
inc
sti
mov
cmp
and
xchg
inc
repz
pop
aas
js
mov
scas
sbb
fsts
dec
push
fsubrl
imul
insb
push
insl
push
test
mov
lods
ds
push
adc
aad
lea
cmp
mov
das
xor
sbb
arpl
cmpsb
push
xchg
mov
repnz
cmp
in
add
aam
arpl
dec
xor
cltd
cmp
mov
cmpsl
int3
cwtl
fcmovnb
jns
xchg
daa
pop
neg
and
movsb
dec
in
push
xchg
mov
addb
add
cmp
jno
aad
pop
sbb
ss
or
add
in
mov
jne
call
mov
out
mov
mov
in
cmp
dec
and
sub
faddp
inc
scas
pushf
jb
xor
je
stos
shlb
ret
jnp
jp
or
nop
cs
jecxz
dec
push
repz
in
outsb
int
add
and
mov
push
fwait
insl
push
xchg
inc
je
and
rorb
out
fcoms
rorl
lds
jae
cmc
inc
and
mov
or
cmp
rcrl
and
clc
outsl
cmp
cmp
jnp
std
std
pop
push
js
popf
movsb
cmpsl
add
mov
sbbl
push
jno
cmc
test
daa
lahf
rolb
bound
outsb
jecxz
and
push
test
sti
xchg
mov
movsb
stos
adcl
jno
fdivp
xchg
mov
jno
pop
maskmovq
idivl
ror
sbb
repnz
lods
inc
inc
mulb
push
xchg
faddp
lds
clc
and
insb
insl
push
cmp
mov
ljmp
xor
scas
or
and
xor
jl
ret
xor
mov
pop
xor
movsl
sub
xchg
call
aaa
cwtl
mov
push
mov
dec
sti
cli
push
lret
inc
out
rorl
pop
unpcklps
clc
mov
sub
mov
repz
fisubs
lcall
test
inc
dec
fsts
cmp
pushf
add
lcall
cmpsb
sub
cmpl
mov
mov
jns
shlb
stos
pusha
aad
lods
mov
sbb
shll
mov
push
scas
push
data16
inc
xor
stos
incl
or
nop
jg
out
mov
stos
cwtl
nop
xchg
mov
push
push
lahf
inc
fmull
mov
popf
insb
cmp
mov
inc
lock
cmp
notb
inc
lret
enter
xor
xchg
dec
pop
push
mov
out
test
rcl
dec
gs
inc
xchg
ljmp
adc
jl
cmp
iret
adc
jg
push
cwtl
mov
push
ficoms
xchg
mov
add
xlat
push
xchg
sti
test
dec
repnz
fsts
xchg
inc
sbb
inc
sahf
jnp
movsb
and
xchg
cli
mov
inc
fmulp
dec
rcll
aad
out
pushf
push
push
fwait
mov
aaa
je
jmp
std
sti
loopne
inc
das
cmp
jb
xchg
scas
pop
and
jg
pop
xor
pop
sub
add
inc
fwait
rcl
dec
mov
loopne
clc
jle
add
xchg
mov
ja
or
inc
inc
imul
mov
push
lcallw
inc
dec
and
sub
jne
or
ljmp
fisttpl
mov
loop
insl
inc
or
jl
sbb
pop
sbb
and
idiv
loop
add
cmp
les
adc
xor
shr
add
shr
adc
cmovg
or
dec
and
dec
mov
enter
lods
inc
fmull
or
xchg
jp
lcall
xor
and
in
aas
cwtl
sti
jnp
inc
call
add
sub
imul
sub
sti
leave
jle
jae
stos
inc
das
sub
add
jge
call
cmp
and
dec
push
push
and
sub
or
jnp
push
aam
mov
or
add
push
cmp
push
sub
push
dec
mov
sub
pop
cmp
cltd
maxps
add
into
add
test
js
jp
fistpl
push
xchg
xor
subb
mov
ret
xchg
inc
inc
fsubl
push
and
cld
test
mov
push
test
sbb
ljmp
mov
aad
clc
jge
xchg
push
imul
xor
fs
ljmp
push
test
insb
cmp
add
dec
push
xor
loope
mov
rcll
sbb
sub
jmp
push
iret
xacquire
inc
jbe
mov
mov
dec
push
filds
mov
in
mov
mov
lea
pop
mov
push
fisttps
jo
call
push
mov
imul
xchg
jmp
add
or
popa
xor
xor
jo
ret
ljmp
jne
lret
sub
push
outsl
testl
xchg
and
and
dec
cmp
daa
ret
ret
mov
adc
jnp
xor
leave
std
arpl
xor
iret
rcll
mov
dec
mov
xorl
shll
cli
std
mov
out
mov
call
mov
mov
daa
xorb
mov
add
ds
pop
outsl
cmp
adc
daa
pop
dec
inc
or
pop
or
movsl
fimuls
ret
xchg
lea
nop
cmp
out
imul
and
mov
cmp
push
hlt
fcoms
out
daa
jb
lea
cmp
add
dec
push
imul
clc
dec
xchg
sub
test
mov
sarb
lods
adcb
sub
movsb
movsb
jbe
test
sarl
les
push
mov
cmp
dec
jge
pop
adc
fistpll
dec
push
bound
iret
ljmp
aas
jae
inc
test
mov
shll
push
ja
add
test
mov
in
xor
sub
xchg
nop
out
pusha
jb
dec
mov
daa
sub
cld
adc
gs
out
outsl
sbb
xor
je
test
pushf
jl
xchg
dec
loope
sbb
xor
je
jb
pushf
add
fstpt
sub
lret
aam
pop
inc
inc
add
sub
push
icebp
shll
daa
cmpsb
fcompl
insb
pop
popf
jmp
dec
sub
or
mov
push
nop
mov
xchg
aad
sub
pop
mov
jle
mov
stos
fnsave
xor
xchg
neg
and
add
mov
cmp
mov
add
mov
icebp
cmp
mov
ljmp
cltd
jecxz
aaa
vcvtsi2ssl
cltd
leave
repnz
push
out
jbe
adc
stos
lods
dec
xchg
pop
cmp
in
push
sub
mov
xchg
mov
sub
push
jge
clc
push
mov
outsb
mov
aaa
imul
and
cmp
and
leave
sub
daa
mov
in
aaa
test
ficoml
leave
std
sbb
cmc
cmpsl
mov
jae
push
jg
fbld
lret
cs
insl
mov
adc
popf
push
mov
dec
lahf
jo
add
stos
fsubr
into
fstl
iret
pop
jns
adc
addr16
jle
push
inc
out
jns
lock
mov
or
jne
pop
aas
fstl
mov
fstpl
es
imul
out
je
sub
fxch
rorl
sub
cmp
mov
mov
and
sub
push
repnz
or
dec
cld
cli
inc
fwait
pop
xor
xchg
outsl
bnd
cmp
sbb
daa
jle
pcmpgtw
outsl
outsw
pop
clc
out
sbb
test
ret
int3
jnp
repz
jno
push
mov
add
shrl
push
sub
adc
arpl
cmp
test
dec
or
pop
loop
loopne
loop
fadd
cmp
scas
adc
push
outsl
dec
enter
xchg
dec
jl
out
pop
stos
cmpsl
repnz
test
gs
pusha
aas
jo
lret
push
inc
pop
test
lock
sub
and
push
movsb
mov
pop
movsb
and
jnp
out
inc
mov
jns
xor
xor
fsts
or
decl
loop
pop
das
ds
sub
jp
xchg
nop
shll
mov
sub
shll
ljmp
xor
fcoml
imul
popa
sbb
push
mov
out
push
xchg
mov
fmull
dec
and
lcall
xchg
push
test
lret
cld
mov
xor
nop
xchg
fs
dec
push
xchg
lods
pop
data16
icebp
leave
inc
addr16
data16
xchg
jl
rcll
push
in
mov
add
iret
and
pop
mov
loopne
icebp
dec
cs
ljmp
sahf
aam
mov
sbb
sub
ret
xorb
rcrb
mov
dec
mov
in
ror
shl
cmc
stos
loop
jo
mov
adc
pop
xchg
xor
jl
sub
subb
adc
xchg
xor
push
or
mov
fsubs
data16
mov
xor
jmp
jmp
ljmp
fwait
mov
xchg
fs
daa
fnstenv
cmp
leave
cmp
jae
aad
insl
and
xor
dec
leave
into
pop
cmpsl
sbbb
aas
cmp
xchg
movsb
mov
and
dec
xchg
cmpsl
cmp
in
ret
cmp
fnsave
rclb
xor
pop
subps
sbbl
faddl
adc
cltd
loope
or
push
cltd
mov
repnz
add
pusha
push
imul
sub
iret
xor
push
imul
inc
dec
clc
mov
addr16
popa
aad
movsl
jne
mov
jns
popa
sbb
sub
push
xchg
dec
mov
cwtl
cmp
mov
sub
in
pop
xlat
out
sbb
push
jle
pop
ja
mov
or
mov
clc
cmpsb
sbb
mov
pusha
and
jns
pusha
js
jle
lret
imul
and
lcall
enter
fimull
mov
test
cmp
jp
adc
cmp
jle
mov
jo
adc
push
out
lcall
mov
pop
push
ljmp
je
mov
mov
sahf
test
lods
addr16
insl
in
mov
std
pop
cmc
arpl
xchg
int3
fcmovne
or
cmp
movb
cli
icebp
add
add
pop
inc
adc
stos
movsb
fdivrl
or
xchg
jae
xor
push
outsb
cmp
fwait
xchg
push
clc
cltd
repz
popl
mov
lea
gs
push
sbb
or
push
popa
fisttpll
jnp
hlt
aam
inc
pop
or
adc
int
movsb
pop
cmp
jb
pop
je
popa
inc
cs
pop
fldl
hlt
lods
push
xchg
enter
rcl
mov
xchg
pop
insb
xor
or
jecxz
add
scas
xor
xchg
icebp
push
cmp
pusha
insl
dec
push
adc
sub
pop
or
scas
mov
mov
xchg
xor
xchg
test
int
fsubl
or
outsl
outsb
imul
shl
icebp
mov
stos
ret
inc
ja
stos
mov
pop
ds
xlat
repnz
fildl
cmp
daa
jne
enter
orl
orl
dec
sbb
fbstp
mov
in
lds
mov
sub
inc
xor
pop
mov
imul
push
jge
jae
push
or
cmp
mov
rorl
mov
dec
or
or
push
push
fst
dec
cli
and
push
or
test
sub
lods
ret
call
jbe
inc
rcrl
pusha
xor
mov
leave
aaa
fnsave
das
aad
pusha
test
mov
cltd
lret
mov
pop
movsl
pop
fs
jle
sub
mov
mov
add
aad
sub
xchg
mov
popf
adc
inc
popf
inc
rclb
rcrb
dec
xor
je
push
cld
xchg
push
sqrtps
xchg
dec
mov
loope
leave
sarl
pop
cmp
mov
clc
pop
xchg
rorb
jne
mov
mov
pop
cmpl
xor
sbb
adc
lcall
cmpxchg
cmp
rcr
inc
pop
add
fwait
pusha
in
and
dec
int
mov
cmp
cmp
mov
cld
jb
cmpb
pop
and
and
xor
jecxz
jns
push
jp
mov
inc
imul
outsl
and
jge
xor
xchg
imul
cmp
in
xor
sahf
mov
nop
scas
imul
jne
insl
inc
and
sbb
hlt
adc
and
lods
lcall
popa
jp
or
jo
cmp
ljmp
mov
cmpl
push
xchg
jne
ret
and
cmp
push
js
or
jno
sbb
mov
xchg
cmp
adc
pop
or
popf
cltd
xchg
in
or
mov
cmp
hlt
ret
pop
jnp
jg
xchg
mov
mov
dec
push
andl
mov
js
pop
adc
xchg
movsb
inc
fstpt
mov
mov
popf
dec
daa
cmpb
pop
loop
into
lcall
pop
movsb
shlb
cli
cmp
nop
movsl
mov
mov
mov
adc
inc
repnz
aaa
mov
or
dec
je
or
xor
subb
jecxz
jb
das
jp
mov
in
insl
or
and
jp
and
xor
sub
popa
je
lods
insb
xchg
cmpsb
es
mov
sub
in
push
mov
xchg
aad
popa
int
int3
and
fiaddl
sub
mov
and
or
out
imul
pop
inc
in
jl
pop
fcompl
fldt
mov
addr16
daa
xchg
sbb
sub
adc
xchg
popl
sub
mov
test
ja
ljmp
cli
pop
pop
inc
mov
lret
out
std
sti
push
imul
or
mov
call
jbe
inc
mov
fdivp
jmp
sbb
jecxz
push
cmp
or
daa
cmpsl
xor
outsl
pop
in
divl
dec
addr16
pop
sti
aad
cld
xor
push
je
adc
leave
repz
push
icebp
out
gs
out
push
or
bound
jle
arpl
dec
jle
pop
xor
in
imul
outsb
sbb
test
aam
rolb
out
data16
fs
adc
int3
xchg
sub
xchg
push
cmp
sbb
push
add
inc
and
jae
fisubrl
jle
bound
inc
jg
xor
imul
sub
inc
arpl
xchg
cs
repnz
cmp
jbe
add
rclb
scas
dec
in
xchg
les
addl
pop
mov
cmp
mov
inc
mov
push
or
movsl
xor
out
inc
jno
mov
test
and
mov
xor
clc
icebp
adc
jecxz
test
je
inc
jl
imul
mov
jmp
inc
pop
cmp
cltd
mov
in
sub
sbb
fisubrl
mov
dec
out
mov
lds
mov
cmp
mov
in
and
pop
inc
outsb
fbld
outsb
fdivrl
xchg
stc
shrb
push
cmpsb
pop
mov
test
fwait
aas
lret
dec
add
adc
popa
ds
inc
sbb
stos
cmp
dec
xor
mov
xor
push
push
in
nop
test
sbb
icebp
dec
sahf
cs
out
add
or
stos
push
push
dec
mov
stc
lahf
mov
or
jle
repnz
mov
cmpsb
in
leave
inc
fmul
mov
sub
sub
adc
call
inc
xor
lcall
push
jmp
jo
sub
mov
mov
inc
comiss
push
data16
lret
mov
xor
xchg
stos
mov
push
aad
inc
dec
sbb
dec
push
jns
lcall
addl
cmpsl
adc
imul
push
xrelease
adcl
loop
jb
fucom
lock
sahf
sbb
or
mov
lcall
mov
pop
jl
lret
adc
clc
scas
adcl
and
dec
outsl
repz
dec
in
or
and
mov
mov
inc
mov
cwtl
mulb
inc
mov
aam
jl
pop
dec
les
mov
xchg
sbb
jnp
jnp
dec
adc
add
scas
fisubrl
cmpsl
clc
push
mov
xchg
pop
jp
outsb
ror
dec
and
sti
outsb
inc
dec
cli
and
fstpt
ss
pop
fstps
dec
push
dec
fidivs
or
sti
sub
imul
adc
dec
or
rorb
arpl
cmp
and
or
fisubrs
cltd
pop
add
sbb
xchg
cltd
and
ja
ss
pop
push
push
popf
push
add
inc
mov
lret
cmp
lock
movsl
int
insl
loop
ret
inc
push
adc
in
popf
xlat
mov
rclb
inc
fcmovu
jecxz
mov
dec
dec
lock
or
xchg
jmp
pop
daa
xchg
mov
dec
jmp
clc
ljmp
insb
hlt
jae
dec
popf
pusha
out
adcb
xchg
je
pop
data16
mov
sub
cmp
lea
xor
rcrb
ret
scas
jno
lahf
test
lea
inc
adc
shr
fsts
mov
out
loope
push
mov
mov
stc
xchg
mov
jge
fadds
out
mov
add
mov
inc
mov
stos
and
or
jecxz
sbb
call
test
add
jno
mov
andb
sbb
into
adc
pop
add
out
and
arpl
dec
lds
pusha
aad
sub
shrb
ds
add
sub
cs
loope
mov
pop
loopne
xor
lret
loopne
cld
popf
movsb
add
bound
jne
jno
mov
scas
in
iret
fnstcw
xchg
adc
movsb
sbb
cmpsl
psubd
mov
cltd
addr16
add
iret
outsb
xor
call
mov
hlt
das
fstps
lock
xchg
mov
xor
mov
sub
mov
jmp
test
outsl
jp
xchg
pop
push
or
cli
dec
or
sub
pop
dec
and
and
pop
mov
jecxz
cmp
mov
rorb
mov
cmc
xchg
in
outsb
mov
cmpb
icebp
mov
lahf
and
jnp
mov
adc
jo
jge
imul
cmpsb
push
inc
ret
fldenv
xchg
cmp
lahf
in
push
mov
cmpsl
sbb
shll
cmp
xor
stc
sbb
in
sbb
sbb
jmp
adc
xor
xchg
cmp
ss
jae
sbb
inc
popf
stos
push
insb
fcmovnb
rcll
sbb
xor
rorb
mov
cwtl
fnsave
pop
jge
and
mov
sub
hlt
jns
aaa
dec
sbb
aas
sbb
mov
or
jne
cmp
jecxz
int3
ljmp
jge
mov
xor
dec
sub
jno
shl
sar
xchg
sbb
or
insb
or
shll
adcl
rcrb
hlt
mov
jmp
add
cmpsb
jno
repnz
push
cmp
stc
outsb
push
xchg
or
data16
andb
cmp
mov
push
in
dec
sbb
push
pusha
jle
inc
int3
int3
mov
out
jg
cld
or
xchg
test
xchg
andl
inc
out
les
push
cmp
xor
jg
mov
and
mov
pop
icebp
ja
addr16
inc
cmp
nop
mov
std
rcrb
data16
mov
or
repz
cmp
repnz
pop
dec
aam
dec
mov
das
outsl
dec
cmp
cmp
fnstsw
and
cmc
dec
dec
andb
das
mov
lahf
fidivl
pop
dec
mov
and
pop
or
ror
cli
lahf
pusha
sub
jg
xorl
cmp
imul
pushf
in
leave
push
add
jge
inc
outsb
cmc
es
call
lcall
jo
and
push
out
xchg
movsb
test
les
inc
jmp
and
into
jg
ss
xchg
imul
pop
adc
mov
dec
pusha
stos
les
push
jecxz
jg
out
sbb
shll
shll
in
and
xchg
lcall
xchg
das
mov
das
push
cmp
sub
fcompl
mov
stos
mov
jb
jns
xor
sahf
out
jae
mov
andl
fimull
adc
mov
fstp
arpl
out
int3
xchg
jbe
or
leave
or
sbb
scas
pop
cwtl
dec
aas
ret
gs
sbb
add
mov
dec
pop
cmc
js
jmp
cmp
jns
and
lcallw
mov
test
fadds
loop
pop
inc
std
imul
adcl
pop
jl
sbb
jmp
ret
lods
pop
jl
repnz
jne
cmc
sbb
sub
mov
inc
pop
or
test
lds
movsl
enter
xor
or
sahf
pop
mov
jns
clc
out
push
xchg
arpl
por
jle
xor
fwait
rolb
sbb
adc
xorb
shll
daa
hlt
xor
cmc
test
stos
push
dec
lret
int3
jae
mov
in
xchg
shlb
pop
setne
hlt
stos
jl
ficomps
dec
daa
jo
int
mov
ffree
or
and
push
jae
dec
fs
sub
push
stos
gs
or
fstps
addr16
jb
dec
popa
dec
icebp
add
cmpl
outsb
add
stos
jo
lods
push
dec
bound
mov
sbb
pop
lret
and
push
fmuls
ret
pop
inc
ficomps
test
and
into
aam
das
nop
movsl
push
das
bound
aaa
push
pop
jl
sbb
and
and
les
cmp
les
scas
push
dec
xchg
cmp
adc
mov
dec
addr16
dec
push
aad
dec
adc
mov
dec
xchg
inc
pop
pop
pusha
das
clc
orl
adc
int
inc
mov
push
jo
pop
sbb
out
sub
loop
inc
ret
cmc
stc
xor
nop
mov
ds
inc
jb
fidivs
inc
lock
inc
cwtl
push
lods
mov
fisubrl
and
stc
outsl
imul
imul
cmc
adc
pushf
and
into
xor
mov
ficompl
fists
cmp
sub
adc
fnstsw
push
jl
pop
shrl
inc
xor
xlat
mov
or
ljmp
add
pushf
mov
and
xchg
iret
add
mov
stc
sub
mov
fidivs
inc
rorl
or
fldcw
std
lods
xor
mulb
pusha
cmp
rcrl
jno
pop
rcll
dec
rclb
mov
mov
inc
add
iret
cmc
sub
mov
cmpsl
bnd
shl
adc
inc
lret
and
sub
lret
cwtl
ljmp
fwait
mov
cmpsl
imul
inc
push
cwtl
lods
sti
push
mov
jp
xor
pop
movsb
rorb
mov
xchg
xchg
dec
jmp
nop
mov
loop
rcrl
test
push
jo
and
fdivs
xor
jmp
lcall
sbb
rcrb
and
lahf
xor
out
jae
es
jns
ss
mov
or
mov
test
sbb
jmp
arpl
xor
cmpsl
stos
jae
or
pop
and
lret
mov
mov
loope
sbb
adc
adc
cmp
add
fisttps
test
add
mov
imul
stos
notl
pop
scas
fstps
cld
pop
daa
test
sbb
fdivrl
push
push
lods
fdivs
shl
push
xlat
outsl
ret
add
pushf
in
je
dec
mov
xchg
add
rolb
sbb
aas
mov
pop
push
xor
dec
and
fs
push
jmp
popf
sbb
sub
mov
mov
inc
lret
jbe
rcl
mov
jmp
sub
ror
rcrl
mov
xchg
into
shlb
rorl
das
jg
push
jl
mov
inc
add
inc
and
jmp
sahf
outsl
icebp
cmp
ljmp
mov
divl
jg
into
add
xchg
fcompl
into
mov
int
and
sbb
dec
ret
cmpsb
cmp
xor
adcb
stos
jle
aad
cwtl
sub
out
cmp
fldt
nop
rcrb
int3
sahf
movsl
mulb
jmp
pusha
jp
push
and
adcl
push
in
push
xchg
cmp
aam
sbb
es
mov
cmp
aas
popf
mov
cwtl
push
addr16
pushf
lret
dec
sarb
leave
add
andb
test
and
sub
mov
int
xchg
jecxz
mov
fsts
push
inc
jb
dec
arpl
adc
sub
iret
in
xchg
out
aad
pop
sub
jg
xchg
in
dec
push
mov
shll
xor
xchg
mov
xchg
pop
add
sbb
xor
dec
jbe
orl
cmp
das
add
scas
stos
gs
out
xchg
push
out
mov
mul
jns
int
imul
dec
mov
pop
das
outsl
cmpsl
ja
addr16
call
fldt
fiaddl
add
pop
lret
jmp
lahf
dec
sahf
movsl
out
lds
insl
push
jmp
push
and
push
adc
repz
fsubs
adc
scas
mov
lods
lahf
shlb
pop
fidivrl
push
xchg
cmp
push
jge
cli
lea
popa
jecxz
xchg
push
push
mov
stos
cltd
les
aaa
push
out
xor
push
movsl
mov
bound
and
out
std
insl
or
ror
adc
addr16
mov
leave
call
test
push
andb
sbb
dec
std
bound
pop
sbb
into
add
and
xorl
data16
ret
xor
mov
je
xchg
nop
mov
push
fstpl
and
pusha
dec
std
xchg
adc
call
mov
repnz
pop
mov
push
push
xlat
lods
sbb
push
inc
mov
idivb
mov
test
insl
sti
shll
test
and
cmp
pop
mov
jg
out
mov
dec
les
orb
sbb
ja
addr16
aas
leave
sti
add
in
mov
in
adc
xchg
push
dec
mov
sbb
push
and
lea
dec
cwtl
and
lret
jecxz
cmp
fwait
iret
adc
inc
insl
mov
xor
iret
ja
std
lahf
mov
std
mov
inc
sub
in
hlt
add
ret
mov
dec
gs
add
or
dec
jecxz
je
inc
nop
fmulp
xor
daa
negl
push
push
divb
es
popf
fdivr
gs
sbb
and
push
mov
inc
mov
pop
je
shll
push
sub
inc
mov
lcall
or
fists
gs
outsl
pop
xchg
inc
shl
fistpl
mov
xchg
sub
enter
mov
filds
popa
inc
and
dec
lods
push
fsubl
inc
sbb
sbb
data16
jl
pushf
xor
bound
pop
bound
cmpsb
sub
sarl
mov
sub
into
jb
push
hlt
mov
mov
jb
mov
adc
jge
add
cmp
sarl
dec
arpl
adc
ss
cmpsb
sub
dec
jle
fistpl
incb
ret
push
pop
or
xchg
cmp
xchg
test
pop
inc
xlat
movntps
aaa
cwtl
aam
rorl
sahf
or
jb
add
push
inc
jmp
sbb
outsl
daa
sub
push
mov
outsl
dec
les
roll
movsl
lods
mov
sbb
xchg
das
test
out
push
test
inc
rcr
je
jge
insb
loop
out
add
push
or
aaa
cld
insb
lret
jbe
pop
scas
std
push
test
ret
adc
mov
cmp
mov
mov
inc
push
stos
jo
imul
adc
sub
