stc
loopne
insl
arpl
scas
leave
addr16
pop
inc
sbb
imul
xchg
test
movsl
xchg
aam
mov
xchg
inc
scas
mov
mov
xchg
sub
roll
sahf
cmpsb
in
dec
repnz
mov
in
push
mov
cmp
clc
cmp
push
out
dec
stos
or
jo
xor
inc
and
stos
sbb
fistpll
outsl
lea
lock
sub
aam
cmp
jle
pop
push
pop
rcr
sbb
gs
push
mov
and
roll
aas
xor
cwtl
pop
dec
or
je
push
dec
push
stc
hlt
not
sub
sbb
xchg
ss
leave
outsl
out
loopne
fs
enter
enter
xchg
in
popf
adc
and
cmpsl
rcrb
mov
xor
out
mov
lods
mov
pop
lret
ja
dec
push
dec
int
call
push
dec
fnstenv
and
xchg
add
lahf
push
jne
ss
jbe
sbb
bound
push
in
repz
push
jo
js
ficoml
inc
sub
sbb
scas
jge
daa
cmp
testb
adc
or
dec
aaa
sbb
adc
subl
dec
sub
aas
adc
push
mov
inc
push
or
adc
pop
andl
jecxz
movsb
test
das
faddl
adc
daa
pop
es
jle
jl
stos
push
jae
aas
jnp
pop
int
mov
mov
cmc
push
fldl
cmc
repz
sbb
imul
mov
mov
sti
std
mov
adc
int
pop
push
and
mov
cmp
pop
out
xchg
cmp
lock
pop
scas
and
xchg
loop
mov
mov
fwait
ret
sahf
test
repnz
repnz
or
mov
or
shrb
scas
fstpt
adc
mov
incb
jno
inc
inc
cltd
xor
in
mov
jbe
xchg
sbb
out
or
inc
adcl
inc
lret
aas
faddl
or
push
mov
push
push
insl
cmp
fcoms
fdivs
std
aad
inc
mov
mov
into
pop
inc
mov
or
iret
mov
sbb
fidivl
adc
fidivrl
mov
arpl
xor
ficomps
out
out
sarl
fstpt
sahf
push
dec
out
pop
inc
cmp
inc
fimuls
mov
jne
sbb
fistl
adc
in
notb
mov
js
test
in
inc
add
sahf
aad
ret
mov
cmp
call
insb
scas
mov
ror
ret
xorl
pop
popf
lds
hlt
jno
sbb
clc
jmp
scas
dec
outsb
pop
popa
ljmp
inc
int
mov
add
cmpl
pop
arpl
lea
xor
call
dec
sub
call
movswl
push
lea
call
dec
add
movswl
inc
sub
xor
call
dec
add
mov
add
inc
mov
add
mov
imul
movsbl
mov
sub
dec
call
lea
add
lea
mov
dec
call
dec
dec
call
sub
dec
mov
inc
mov
inc
lea
add
inc
pop
sub
inc
sub
add
dec
pop
lea
dec
pop
mov
imul
inc
imul
pop
dec
sub
dec
mov
movzbl
inc
add
dec
pop
add
sub
pop
mov
lea
mov
inc
xor
call
dec
lea
add
mov
ret
imul
add
push
sub
add
push
mov
lea
push
mov
mov
push
mov
sub
push
dec
mov
mov
mov
or
push
dec
ret
push
inc
mov
mov
dec
inc
sub
push
imul
add
inc
call
pop
ret
jmp
dec
and
inc
mov
movzbl
mov
dec
xchg
inc
mov
mov
dec
xor
dec
movswl
inc
imul
inc
sub
mov
dec
jne
dec
mov
mov
or
pop
sub
lea
pop
mov
sub
pop
inc
mov
dec
lea
mov
mov
inc
movsbl
lea
dec
imul
add
ret
push
push
add
add
push
dec
dec
lea
inc
lea
add
push
or
dec
movzbl
lea
push
mov
and
inc
add
sub
sub
lea
push
dec
mov
lea
push
sub
imul
xor
sub
lea
push
dec
imul
push
mov
mov
pushl
mov
call
mov
add
sub
inc
sub
add
lea
inc
or
pop
ret
sub
cmp
jb
inc
xor
sub
mov
sub
mov
mov
sub
inc
add
inc
mov
add
movzbl
add
mov
and
add
cmp
jb
mov
pop
mov
dec
add
inc
dec
dec
sub
add
xor
mov
dec
inc
and
movzwl
xor
inc
imul
xor
add
dec
mov
add
sub
test
jbe
add
dec
imul
dec
dec
inc
add
dec
mov
imul
add
dec
and
dec
mov
mov
add
dec
movzbl
inc
add
inc
dec
and
imul
inc
mov
imul
dec
mov
xor
lea
mov
dec
sub
mov
add
inc
dec
lea
mov
dec
jne
movswl
mov
mov
inc
add
inc
and
inc
sub
add
imul
add
mov
sub
sub
inc
lea
mov
lea
mov
mov
mov
inc
inc
test
jbe
inc
xor
lea
sub
lea
mov
add
movzwl
inc
inc
xor
imul
dec
lea
dec
inc
mov
inc
mov
movsbl
mov
xor
and
imul
lea
mov
lea
lea
movzbl
dec
imul
add
and
dec
and
lea
dec
mov
lea
inc
movzbl
imul
dec
mov
dec
mov
mov
mov
sub
movzbl
lea
sub
add
lea
jmp
push
movzwl
mov
inc
mov
dec
and
lea
mov
dec
mov
lea
movswl
mov
add
sub
inc
dec
or
mov
and
dec
lea
dec
inc
mov
dec
imul
xor
imul
inc
mov
dec
dec
dec
xor
add
mov
dec
xor
cmp
je
xor
imul
dec
push
mov
call
call
add
mov
call
call
and
dec
lea
and
lea
add
imul
ret
lea
imul
pop
imul
ret
push
inc
mov
mov
mov
dec
push
inc
add
push
inc
push
sub
push
dec
inc
mov
sub
mov
call
inc
push
and
and
xor
lea
sub
mov
neg
dec
and
dec
dec
mov
inc
mov
dec
xor
mov
mov
lea
inc
lea
dec
dec
je
add
imul
add
mov
mov
xor
mov
mov
mov
xor
dec
repnz
inc
add
add
lea
jmp
imul
mov
inc
lea
mov
imul
dec
mov
jmp
sub
add
or
inc
xor
inc
lea
mov
pop
pop
ret
push
inc
inc
mov
inc
or
sub
movzwl
movzbl
mov
add
sub
dec
inc
dec
sub
dec
dec
or
inc
or
and
mov
mov
add
and
mov
mov
mov
pop
ret
sub
inc
mov
mov
sub
mov
movsbl
and
mov
mov
dec
mov
movsbl
xor
xor
movzwl
add
mov
lea
mov
inc
dec
mov
lea
lea
mov
inc
cmp
jb
imul
push
dec
mov
push
movswl
movzbl
push
inc
movsbl
xor
mov
mov
xor
dec
dec
xor
add
imul
push
mov
movsbl
mov
lea
add
xor
mov
imul
mov
add
inc
mov
and
inc
movzbl
sub
inc
mov
add
sub
add
add
dec
dec
movzbl
add
xor
add
imul
dec
add
inc
xor
imul
mov
imul
inc
or
mov
add
jmp
sti
push
xchg
add
push
insb
test
js
cs
js
fstenv
gs
and
xchg
or
sbb
xor
dec
in
mov
cs
pop
sahf
and
gs
xlat
movsb
mov
movsl
in
mov
mov
std
dec
loopne
xchg
ficoml
jg
mov
stos
imul
mov
jno
mov
xor
test
mov
aaa
fdivl
rcll
sbb
xchg
es
push
xor
stos
sub
mov
fcmovu
cmp
jge
add
sub
orl
jbe
and
jmp
adcl
dec
cmp
sbb
loope
push
xor
gs
xchg
adc
out
dec
adc
sub
sub
push
lods
sbb
inc
call
sub
in
xor
shll
jno
pop
scas
mov
mov
out
fwait
xor
lret
pop
cwtl
jmp
adc
ret
out
dec
ja
lcall
mov
xor
sub
push
pop
scas
adc
call
pop
or
mov
mov
arpl
inc
imul
mov
fwait
jmp
or
mov
cld
fcompl
mov
lret
or
out
jbe
push
loopne
pop
cmp
icebp
cli
and
lahf
or
inc
mov
sbb
nop
xchg
je
fisttps
or
cmp
adc
inc
push
xchg
and
in
rorb
adc
inc
js
lcallw
ss
jmp
mov
cmp
push
mov
push
dec
imul
mov
mov
jmp
cs
add
loope
mov
insl
lret
mov
cltd
and
inc
sub
lcall
or
jae
ret
fsts
push
ret
testb
mov
dec
pop
test
cltd
in
rcrl
dec
dec
andb
daa
xchg
sub
pop
cmp
sub
fimull
push
push
inc
dec
bound
dec
repnz
mov
sahf
adc
pop
push
inc
mov
addb
jp
and
sbb
rcrb
dec
fs
insb
and
lds
or
add
popf
lea
scas
adc
mov
jle
into
into
inc
push
add
add
mov
pusha
inc
mov
sahf
popa
mov
dec
pop
inc
cmpsb
int3
aam
pop
lret
rcr
fldcw
inc
std
pusha
xchg
inc
insl
and
in
mov
jge
xchg
loopne
popf
call
popa
push
xchg
xchg
lcall
and
pop
push
insl
stc
ss
inc
pop
dec
add
mov
fsubrp
sub
adc
push
sbb
mov
sub
adc
cmpsl
negb
leave
outsl
stos
add
sbb
testb
hlt
out
fnstcw
mov
data16
in
icebp
adc
lods
stc
mov
loopne
sub
push
out
gs
bswap
les
rcl
aad
mov
ret
jmp
cli
inc
adc
mov
xlat
mov
or
jns
and
testb
loope
push
or
sbb
inc
std
in
fs
xchg
mov
push
js
or
xchg
out
cmp
push
dec
mov
lcall
ffreep
push
xor
inc
dec
add
dec
jecxz
xchg
adcl
pop
mov
mov
mov
fwait
iret
jo
or
cmp
inc
addr16
mov
add
jo
sahf
les
or
push
xchg
stc
nop
aaa
fxam
dec
ja
mov
xchg
add
inc
and
in
das
and
jle
es
push
divl
adc
in
stos
imul
cmp
mov
push
sub
xchg
adc
cwtl
xor
sbb
dec
cs
cmp
jl
pop
or
inc
lods
cmpsb
addr16
and
add
in
fldl
sub
and
mov
mov
add
push
xchg
mov
push
mov
cmpb
ljmp
mov
xlat
cltd
xor
leave
scas
cs
sub
add
negl
mov
push
sbb
pusha
in
xor
fidivrs
or
xchg
adc
jle
pusha
loopne
mov
jecxz
fdivrs
cmp
test
add
out
fs
into
pop
ja
push
ljmp
and
fstpl
out
mov
push
aaa
xor
imul
xchg
push
fidivs
jmp
push
push
fs
pop
lret
test
fsubp
movsb
ret
loope
sbb
aas
inc
dec
pop
mov
pop
rolb
cli
jmp
fs
jno
mul
bound
sti
fisubs
fs
xor
xchg
inc
cmpsl
sbb
mov
sbb
out
cmpsl
das
mov
adc
dec
popa
adc
push
cmp
cli
mov
popf
loop
in
leave
pop
inc
jle
jns
mov
repnz
lds
mov
sbb
popa
mov
pop
push
rcl
loop
adcb
inc
push
xor
roll
shll
jo
imul
add
repz
push
cwtl
xor
arpl
jb
xchg
jbe
mov
jle
loop
inc
xchg
inc
das
inc
and
outsb
and
loopne
jnp
xor
mov
clc
fistpll
gs
pusha
xchg
cmp
subb
adc
adc
xor
jno
shll
jmp
add
mov
sahf
div
aas
ret
or
inc
ret
xchg
lods
sub
outsb
out
jno
and
fildl
call
xor
stc
push
cmpsb
dec
sbb
push
sahf
insl
push
xchg
popa
mov
leave
fs
ret
pushf
in
mov
mov
and
stc
shll
sub
orl
jns
or
xor
ljmp
adcb
in
xor
inc
pusha
out
xchg
arpl
mov
fucomp
jno
push
mov
add
cmp
add
sti
pusha
fdiv
out
lods
ret
xlat
jo,pn
lret
lock
push
test
dec
addr16
ja
filds
rorl
lods
xlat
test
sub
popf
fwait
aaa
push
mov
xchg
and
dec
fs
pop
xor
jne
cmpsb
fdivrs
ds
scas
fcoms
sbb
inc
pop
push
mov
mov
lods
cmpsl
add
xchg
and
leave
inc
mov
inc
roll
testb
data16
and
ja
dec
pop
jle
cmpsb
popa
mov
lret
jne
iret
xchg
adc
add
inc
ds
add
frstor
jb
repz
jg
in
test
mov
inc
push
scas
insl
pop
aaa
xchg
dec
cmp
adc
shll
mov
sub
push
push
imul
inc
xchg
je
rclb
cltd
jnp
add
xor
or
and
adc
dec
adc
lock
cs
cmp
ss
cld
out
movsl
jmp
cwtl
repz
pop
lods
mov
loopne,pt
daa
out
xor
imul
cmp
push
shrl
sbb
inc
fcmovb
aas
sbb
sub
xchg
or
sub
jg
fs
fisubrl
ds
fsubs
repz
cs
je
iret
leave
inc
out
stos
dec
jns
jnp
pop
inc
cmp
adc
arpl
inc
mov
inc
out
and
sub
fcmove
loop
cmpb
test
push
cmp
outsb
sbb
cmpsb
mov
loope
pop
dec
lcall
mov
mov
pop
shrl
mov
cld
test
cmc
into
mov
popf
xor
push
cmp
jg
mov
mov
adc
cmp
adc
sub
fnsetpm(287
push
mov
adc
mov
cltd
inc
or
xor
push
mov
in
mov
pop
push
sahf
ret
popa
cmp
xchg
int
fnsave
jne
or
paddsw
test
mov
dec
push
sub
cmp
test
pop
iret
xor
adc
leave
fwait
mov
pop
add
das
fisttpl
mov
and
jl
inc
aam
orb
add
inc
stos
jae
add
cs
jle
sub
stos
out
xor
pop
mov
xchg
xor
adc
inc
xor
subb
cltd
and
sbb
shll
sbb
mov
inc
pop
rcrl
push
inc
mov
out
gs
and
adc
inc
pop
jg
aaa
add
imul
das
sbb
xor
repnz
push
xor
test
sub
cld
mov
cmpsb
pop
jae
insb
and
fisttpl
mov
add
inc
stc
xchg
insb
push
add
mov
int3
cmp
mov
mov
ds
cld
mov
lea
and
xchg
push
mov
dec
or
repnz
adc
sbb
loopne
push
jo
ds
in
shlb
sbb
int
mov
inc
out
mov
test
nop
cwtl
add
inc
inc
push
pop
arpl
inc
das
mov
xor
mov
or
cwtl
xor
lock
movsb
jmp
popf
repz
cltd
icebp
and
jge
xlat
mov
mov
push
xchg
ss
pop
push
ret
rorl
stos
sub
gs
xchg
pop
es
jne
mov
push
movsb
pop
xor
sahf
mov
stc
mov
jg
xorb
mov
leave
and
xchg
xor
mov
rcl
movsl
je
push
jno
add
cli
out
mov
repnz
scas
fs
sbb
rcrl
xchg
sub
lods
adc
inc
mov
or
jp
mov
imul
mov
out
xor
outsl
in
imul
lahf
cmp
sahf
sub
dec
xor
testb
sub
cmpl
fs
mov
leave
dec
jp
add
jns
add
mov
int
and
aam
ljmp
cltd
dec
outsl
shlb
mov
mov
test
mov
les
mov
jl
ucomiss
cmp
jecxz
shrl
xor
repnz
je
dec
push
ja
out
jl
mov
add
dec
cltd
aam
js
cld
and
outsl
fsub
cmp
adcb
into
cmpsl
rorl
lods
xor
xchg
inc
sub
dec
mov
in
pop
pusha
jmp
shll
add
scas
xchg
jns
mov
cs
cmc
cmp
int
cs
aam
or
aad
or
mov
mov
clc
orl
inc
idiv
sbb
push
xor
cmpsb
and
mov
sub
ret
jge
jns
push
pop
filds
dec
xchg
vmovd
fwait
pop
imul
pop
push
repz
mov
shr
dec
icebp
sub
iret
loop
and
adc
push
jb
and
mov
out
mov
ss
fsubrp
outsl
andl
lock
loopne
add
xchg
dec
adc
fldt
or
loopne
jg
jno
iret
sub
and
push
xchg
mov
stos
ja
pop
or
js,pn
add
cmp
sti
lock
cltd
lods
xchg
pop
and
pop
or
dec
jns
daa
jle
stos
push
ja
hlt
loop
fcomip
fmulp
add
jo
dec
pop
mov
mov
ds
and
lods
mov
add
cltd
in
loopne
aaa
sub
mov
mov
push
pop
sub
stc
popa
lret
mov
add
dec
cmp
inc
push
cld
ret
sbb
mov
jae
pop
sub
repz
es
or
cmp
mov
hlt
pop
loopne
add
in
push
or
mov
pop
in
cwtl
lret
jecxz
rclb
pop
and
dec
faddp
xchg
sub
fimuls
xchg
xchg
mov
out
xchg
mov
or
fstp
sub
lea
mov
mov
mov
jno
ss
ffreep
fcoms
adc
sub
insl
hlt
roll
rcl
add
fmull
cmp
jp
pop
lods
test
pop
aaa
inc
divb
xor
or
or
xor
mov
fistl
arpl
ds
add
les
dec
shll
xlat
dec
scas
mov
and
stc
in
mov
lcall
int
insb
and
cmp
subl
xchg
mov
adc
call
and
loope
roll
push
pop
lds
push
scas
mov
mov
push
sub
and
cmpl
xchg
subb
jb
fnstcw
mov
xchg
std
pop
out
shll
mov
ffreep
push
inc
pop
mov
pop
imul
pop
outsb
pusha
cltd
outsb
loope
xchg
sub
loopne
cmpsl
shrb
jno
or
push
inc
dec
dec
mov
xchg
aaa
pop
jl
mov
mov
je
imul
inc
stos
repnz
fisttpl
jmp
nop
inc
shlb
sahf
call
out
inc
push
addr16
test
jmp
je
pop
jbe
push
shll
mov
pop
mov
cmp
adc
dec
in
inc
ret
pop
jmp
push
sti
fistl
fcom
jecxz
fsubl
lods
xchg
shll
stc
jo
loope
dec
jmp
sarb
hlt
loop
mov
insb
and
jmp
xchg
out
jg
data16
jne
popa
mov
test
push
xor
repz
adc
adc
jns
es
adc
push
enter
jge
dec
daa
ljmp
divb
mov
stos
icebp
rorb
xchg
dec
pop
repz
cld
mov
fcoms
nop
push
or
arpl
data16
das
xor
bound
shrb
fcmovnu
ss
mov
shl
bound
pop
or
fcmovne
xor
test
push
jl
imul
test
mov
push
mull
push
and
jo
out
pop
subl
mov
scas
mov
lock
inc
dec
mov
mov
sbb
lods
cmp
flds
fnsave
add
fwait
push
in
cltd
cmp
das
std
and
test
mov
lods
inc
xchg
dec
and
daa
xchg
in
ret
cmc
stc
stos
fs
lock
imull
mov
gs
mov
pop
adc
scas
jns
mov
repz
ficoms
xchg
sbb
inc
fwait
std
cmp
sbb
cmpsb
sub
inc
lahf
xor
xchg
lret
gs
mov
lock
jns
xchg
ljmp
shlb
daa
cld
dec
lods
lahf
test
and
xor
loopne
faddp
jle
vpaddsw
dec
inc
ja
sbb
and
inc
lahf
cwtl
lock
mov
testl
jne
cwtl
inc
fwait
xor
test
mov
jns
dec
mov
or
mov
xor
data16
and
jb
es
sbb
pop
jle
js
push
dec
mov
push
clc
data16
xchg
and
daa
cmp
cmp
addr16
push
dec
andb
jnp
mov
sahf
cmp
iret
mov
mov
cmp
push
imul
fwait
push
jle
das
scas
mov
add
stos
jns
stos
aas
sub
push
aad
xchg
dec
sbb
inc
test
loope
insb
xor
enter
sub
movsl
imul
into
rol
jnp
adc
adc
inc
stos
into
adc
xchg
and
mov
pop
and
je
pop
in
lcall
clc
lcall
rcrb
rolb
gs
mov
cmp
inc
pop
stc
pop
dec
int3
fistpl
dec
xor
mov
daa
jbe
inc
mov
adc
imul
js
mov
inc
dec
loop
mov
lock
xor
inc
cmp
push
cwtl
sbb
push
lret
pop
xchg
jbe
cmc
fstpl
scas
out
cmc
inc
fadds
pushf
aaa
adcl
lock
push
imul
xor
cmp
sbb
lahf
fistpll
lcall
xchg
sub
pusha
jae
movsb
sub
sub
jbe
jle
fwait
loope
shrl
test
sbb
jbe
jnp,pt
cmc
add
add
mov
aas
int3
jo
inc
loope
in
sahf
inc
inc
jmp
dec
test
aaa
pop
fdivl
js
dec
cwtl
jo
pop
jo
daa
jmp
add
mov
inc
fisubl
jp
sbb
add
insb
lock
ja
push
cli
sub
and
push
mov
mov
xchg
cmp
out
push
sahf
cmp
in
inc
sub
loop
adc
fucom
pop
mov
cmp
or
or
inc
or
shr
mov
jnp
xchg
fsub
dec
sub
inc
pop
push
or
mov
mov
aad
aam
clc
lea
loope
push
fs
push
aas
lds
jae
pop
clc
out
and
push
cwtl
xchg
sarb
mov
mov
adc
xchg
das
adc
xchg
cli
sub
push
xchg
fadd
sbb
xor
adc
or
fwait
std
lds
or
icebp
sub
pop
sub
sub
dec
cmp
sbb
adc
mov
mov
adc
popa
mov
loope
jecxz
mov
or
cmpsl
push
push
repnz
shlb
mov
pop
into
dec
push
or
push
lret
ret
gs
lret
in
push
xlat
cltd
lcall
testl
js
xchg
hlt
das
js
push
mov
dec
xor
push
out
jo
lret
cmpl
mov
mov
xchg
jl
out
or
fimuls
in
and
je
test
loope
inc
cld
add
iret
xchg
xlat
mov
fistl
mov
orb
popa
decl
sbb
arpl
popa
sub
push
loope
lret
inc
in
je
and
popa
or
mov
aaa
cmp
xchg
fimull
cmp
cwtl
lods
gs
mov
lods
cmpb
movsb
add
cld
cmc
ljmp
sbb
insl
dec
dec
cmpsl
xlat
inc
filds
lods
lods
add
jb
pop
push
mov
out
push
in
mov
mov
hlt
ret
ret
cmp
fimuls
das
lods
test
es
xlat
push
lods
lods
pop
xchg
movsl
mov
rclb
push
jge
sub
mov
push
in
sbb
hlt
mov
jg
dec
sbb
pop
test
pop
jo
push
add
mov
js
out
dec
in
rorl
popa
movsb
push
mov
addb
sbb
scas
xchg
lea
iret
jmp
jecxz
xchg
test
and
pop
mov
cmpsl
xchg
cmp
inc
add
jecxz
inc
call
add
loopne
movsb
rolb
xchg
dec
fnstcw
fs
aam
das
xchg
cmp
xor
pop
loopne
insb
mov
push
jae
imul
adc
or
sbb
dec
push
xchg
inc
jae
and
pop
inc
out
sbb
pop
ret
xor
mov
daa
lods
sbb
xor
or
and
outsb
fs
stos
clc
jge
mov
gs
cmp
pop
inc
inc
loopne
out
cmp
cmpsl
push
mov
sub
xor
cmp
into
cmp
xchg
movsl
mov
xor
mov
stos
push
stos
adcl
imul
ja
cmpsb
sbb
pop
cmp
sbb
jae
mov
adc
rcll
and
mov
ljmp
jno
pop
pushf
lds
xorb
test
and
cmp
dec
stos
inc
push
int3
mov
sbb
les
ja
in
pop
mov
add
xchg
fwait
inc
push
insb
int
loopne
insb
add
mov
mov
je
pop
leave
je
gs
adc
adc
mov
mov
in
imul
add
xchg
lods
mov
mov
xchg
pop
stos
gs
outsl
addr16
fdivs
pop
add
mov
pop
add
js
inc
pop
mov
ret
jb
lods
call
mov
sarb
out
enter
adc
ss
inc
cltd
lock
adc
mov
or
scas
or
xchg
adc
cmpsl
hlt
pusha
jb
sub
rorl
jno
pop
sub
mov
xchg
cmp
scas
mov
cmpsl
mov
aas
ret
jb
rcrb
pop
mov
cmp
outsl
test
mov
jo
out
insl
adc
push
dec
jne
jnp
pop
cmp
jae
cmp
fildl
jno
leave
xchg
or
cwtl
stos
jge
jnp
je
ja
jno
stos
dec
sbb
sbb
jmp
xlat
mov
repz
add
dec
cmp
mov
jmp
ss
out
lods
adc
add
test
mov
xchg
fnsave
and
mov
inc
sbb
call
loop
out
test
dec
mov
pop
and
lods
push
fwait
sbbb
lret
pop
adc
gs
push
push
in
ja
and
outsl
inc
scas
sysexit
out
outsb
cmp
adc
dec
xchg
cmp
xchg
call
jo
sbb
xchg
cmpsb
cs
mov
in
loope
jno
loope
mov
pop
jno
pop
pop
pop
fildll
xor
xchg
iret
out
push
enter
add
cs
out
in
push
lea
pop
aaa
js
jmp
leave
ja
and
out
hlt
jl
inc
mov
xchg
and
fiaddl
bound
movsl
inc
sbb
inc
push
loop
pop
add
lods
mov
clc
xchg
inc
mov
xor
pop
test
push
add
into
adc
imul
imul
sti
shrb
lods
aad
push
shll
call
xchg
bound
pop
aam
outsb
xlat
mov
inc
pop
inc
imul
mov
cmpsl
addr16
or
aam
insb
aaa
sbb
ret
mov
and
cwtl
stos
xchg
pop
movsl
push
mov
cmp
shlb
ljmp
or
xlat
inc
int3
add
mov
lods
dec
lods
or
hlt
aam
lcall
and
fidivs
adc
ret
addr16
push
dec
bnd
jmp
test
xchg
pushf
sbb
jnp
cmp
add
pushf
adc
das
aaa
adc
dec
push
mov
mov
rorb
addr16
pushf
nop
cmp
xchg
sbb
inc
cs
cmc
fs
jno
cli
out
mov
lods
shl
and
sbb
jle
in
loop
mov
aam
pop
and
lret
sbb
xor
sbb
mov
xlat
cmc
testl
push
pop
pop
fnstenv
lds
pop
ret
pop
pop
pop
jno
xchg
cltd
shll
xor
movsb
xor
mov
aas
mov
add
push
xchg
pushf
repz
enter
xor
mov
pop
pushf
adc
xchg
and
sbb
xor
mov
icebp
test
add
jns
lcall
out
pusha
icebp
pop
mov
aaa
orl
icebp
into
or
bound
loope
lret
je
adc
test
insb
js
out
movsl
mov
hlt
xor
lret
aaa
xchg
sub
ret
pusha
adc
fucom
cli
xor
pop
ljmp
sub
jnp
and
test
imul
pop
push
subb
mov
hlt
sti
in
aam
fildll
jmp
dec
aam
in
inc
push
adc
mov
insb
xor
fldl
divl
js
adcl
test
out
mov
dec
xchg
imul
push
clc
fs
sbb
pop
out
cmovg
lret
inc
gs
in
into
xchg
or
fsubl
adc
dec
sub
inc
jmp
xchg
outsl
lret
pusha
mov
push
and
xor
jmp
sbb
js
out
shld
cmpsl
rcrl
jge
jmp
mov
pushf
lahf
fadd
daa
mov
std
xorl
xchg
and
add
pop
jno
jne
jnp
shl
in
ds
rcr
pcmpgtd
push
push
fwait
clts
jmp
cmp
fistl
inc
and
clc
cwtl
or
out
cmp
push
stos
xor
jb
cmpsl
lods
cmovno
out
sub
xlat
jb
in
pop
push
loope
mov
inc
add
or
aam
mov
inc
cmpb
xlat
mov
lahf
push
add
push
popf
or
pushf
jae
mov
les
sbb
sahf
stc
hlt
adc
mov
mov
lcall
gs
fsubrs
jae
sti
data16
insb
loopne
scas
ljmp
mov
ljmp
decb
cltd
sbb
std
mov
in
mov
loopne
cmp
mov
insl
pop
aaa
or
push
fcoms
pusha
cmp
sbb
mov
jecxz
push
jle
xchg
xchg
dec
mov
leave
iret
sub
fwait
ja
jb
inc
sub
js
clc
in
hlt
sbb
sbb
test
xchg
xchg
inc
dec
out
inc
xor
clc
movsl
adc
inc
dec
sub
je
or
lods
cmpb
sti
repz
add
movsb
unpckhps
jbe
push
jp
dec
pop
scas
imul
or
lods
lcall
dec
mov
out
and
dec
dec
mov
ficomps
adcl
inc
xor
std
mov
pop
scas
pop
lods
mov
outsl
pop
out
push
sbb
ret
adc
les
in
outsl
pop
mov
mov
xor
mov
cs
mov
daa
push
inc
ret
clc
fists
clc
jmp
inc
sti
xor
and
sbb
pop
call
pshufw
push
mov
push
add
mov
call
dec
sbb
xchg
cmp
insb
test
pop
and
inc
jo
adc
and
mov
int3
rorl
inc
pop
ret
lods
mov
fmulp
sub
lock
ret
fnstenv
or
cmp
into
les
aam
push
notb
dec
lret
cmp
xorl
cmp
and
add
sub
test
or
push
xor
pop
arpl
insb
xor
push
out
and
inc
div
sub
and
fadds
ja
jle
hlt
mov
xchg
stos
bnd
cmpsb
sub
ficomps
sub
in
jmp
xor
bswap
mov
xchg
pop
imul
mov
fisubs
lret
sahf
mov
cltd
pop
mov
lcall
dec
fistpll
sbb
push
lahf
mov
mov
mov
cmpsl
fs
cmp
jnp
xor
daa
jmp
adc
fisubrl
sbb
cmp
cwtl
push
dec
mov
ret
mov
pop
pop
sahf
push
lea
mov
pop
xor
sahf
or
sub
insb
pop
fists
loop
out
lahf
js
and
cs
ja
hlt
test
out
mov
sub
iret
dec
imul
inc
mov
out
js
loope
mov
xchg
inc
jns
dec
xchg
cli
xlat
roll
sub
mov
or
pop
lret
pop
pop
push
cld
jg
pop
outsl
nop
push
jg
mov
movsl
xor
aam
jle
mov
push
or
bound
out
xchg
in
fistpl
gs
leave
jp
je
ja
xchg
pop
sub
inc
add
sarb
and
sbb
dec
push
mov
ljmp
xor
cmp
pop
add
imul
mov
cmpsb
cli
jg
outsl
shlb
imull
cmp
pop
or
dec
nop
adc
jmp
push
loop
xor
add
rcrl
outsb
xchg
imul
cwtl
mov
movsb
ret
jns
pop
out
or
int3
xlat
mov
repnz
or
mov
mov
leave
aad
adcl
sbb
lock
stos
lock
dec
ljmp
fldt
incb
add
inc
inc
adc
sbb
sti
cmp
inc
jle
adc
push
mov
mov
inc
jnp
xor
ds
addr16
push
les
loopne
push
outsb
mov
mov
pop
nop
cmp
lahf
fsubl
add
rclb
sub
fucomp
mov
enter
lods
dec
pop
sbb
dec
mov
sbb
mov
mov
mov
shlb
xor
add
jns
mov
lcall
adc
mov
inc
cmp
inc
and
push
adc
daa
call
inc
repz
xlat
test
cwtl
scas
pop
bound
and
xor
jmp
outsb
bound
aas
mov
push
flds
fmuls
push
imul
jnp
out
xchg
mov
leave
nop
push
sub
imul
push
or
mov
xor
sub
add
data16
push
dec
push
data16
loopne
fldl
sbb
ret
imul
icebp
out
repz
jnp
int3
pusha
push
inc
hlt
mov
fadd
sub
or
jne
cmpsb
daa
in
imul
push
mov
int
mov
ss
pushf
mov
add
int3
sbb
mov
leave
incb
stos
pop
fsts
and
xor
add
test
fwait
pop
sub
out
sbb
mov
dec
testl
in
and
pop
loopne
fs
insl
xorl
std
pop
inc
mov
sahf
adc
pop
rcr
lret
pop
sbb
test
loope
cmpsb
je
les
js
in
repnz
pop
adc
cwtl
mov
add
jno
addr16
xchg
orl
pop
xchg
push
clc
arpl
shrb
rcrb
xchg
sub
arpl
mov
inc
movsb
faddl
push
jg
jmp
movsb
or
push
xchg
xchg
push
jo
ret
xor
adc
idivb
or
pop
and
lret
outsb
sub
mov
in
jbe
add
ljmpw
add
mov
insl
pop
adc
cld
lods
outsl
or
fisttpll
aas
notb
push
add
or
sub
mov
mov
jmp
dec
push
cmpsl
dec
gs
mov
mov
dec
cmp
inc
ret
pop
pop
and
call
xor
inc
repz
cmpsb
or
jecxz
mov
popa
icebp
mov
mov
test
stos
cltd
icebp
int3
pop
daa
xor
cmp
jp
sbb
dec
push
stc
push
and
xchg
mov
jge
push
divb
outsl
insb
sbb
jmp
pop
cld
lods
negb
dec
pop
sbb
push
es
stos
ja
mov
inc
inc
arpl
and
push
movsl
mov
sub
lahf
enter
jecxz
and
push
fs
xchg
push
and
xchg
enter
mov
movb
sub
imul
gs
mov
test
push
pop
jmp
add
push
and
repnz
js
sub
lods
or
pop
lcall
mov
in
mov
into
aas
ja
push
push
lret
push
jns
inc
xor
out
leave
xor
iret
inc
push
mov
outsb
cmp
testl
pushf
out
dec
add
jl
mov
scas
xchg
outsl
jmp
jns
enter
pop
mov
imul
cmp
pop
adc
cmp
in
adc
push
push
pusha
mov
pusha
or
cli
xchg
inc
mov
outsb
pusha
pop
cmp
sbbb
insb
mov
push
add
dec
jmp
sti
sub
inc
mov
sub
sahf
sar
push
push
in
sbb
cmp
ds
and
rorb
aam
inc
popf
add
push
push
push
mov
pop
addr16
pop
jbe
fmull
ficoml
ret
popf
fdivp
mov
ja
repz
jno
mov
xchg
sbb
add
clc
nop
push
push
rolb
or
lea
fnstenv
enter
and
jge
push
mull
jmp
out
les
shlb
addb
push
dec
icebp
or
movsl
xchg
shl
mov
adc
jo
stos
jg
cld
add
push
push
outsb
xor
push
cld
fucomp
pop
movsl
fdecstp
clc
xor
xchg
xchg
or
sbb
mov
xor
pop
push
arpl
ja
sbb
cmp
push
std
mov
mov
fwait
inc
dec
clc
shlb
push
aas
jmp
int
mov
fdivrs
call
movsb
nop
inc
cmp
idivl
js
sbb
jge
mov
and
fwait
push
xor
scas
ja
loope
pop
cld
into
pop
inc
push
xchg
mov
shll
shl
sub
xchg
cmp
and
inc
lock
inc
arpl
roll
adc
out
pop
enter
xor
notb
sbb
sub
lea
dec
into
jle
nop
loopne
mov
mov
push
cmpsl
dec
inc
xor
and
into
es
ja
xor
mov
hlt
in
sbb
lock
inc
cltd
pop
test
xchg
lods
cli
fildl
push
dec
mov
loop
sub
and
xor
adc
out
aas
jno
xor
movsl
hlt
loopne
aam
sub
and
fcomps
dec
mov
outsl
cmp
test
xchg
movsb
pop
push
add
dec
xor
stos
std
stc
push
jnp
jns
scas
sahf
add
dec
roll
add
sub
mov
ret
sub
and
inc
sbbl
out
sub
or
push
daa
xchg
mov
dec
std
mov
lcall
aam
adc
int3
and
nop
dec
jno
xchg
outsb
xchg
icebp
nop
xchg
jne
add
rcll
iret
push
xchg
dec
sub
jge
fwait
xchg
adc
test
mov
inc
pop
hlt
incb
iret
jbe
leave
and
mov
pop
stos
leave
aad
mov
pushf
aam
aam
add
cmp
sbb
jns
push
hlt
lods
lods
mov
jno
cmp
in
loope
inc
lret
pop
and
shrd
sbb
jmp
sub
mov
lcall
sub
inc
cmp
clc
adc
push
test
movsb
inc
add
subl
loop
pop
cmp
xchg
mov
jns
aad
sub
add
stc
pop
mov
adc
test
mov
push
fldcw
stos
aas
lahf
jg
or
sahf
lock
test
mov
sub
loopne
cmp
jp
ficomps
out
add
inc
ljmp
sub
adc
inc
sti
fmuls
cmp
push
cmpsl
inc
xchg
lret
sub
in
jle
cmp
movl
in
push
xchg
push
or
mov
out
fiadds
push
fimuls
push
adc
xchg
push
xor
data16
js
addr16
imul
rcll
bound
aaa
dec
repnz
mov
push
das
pandn
into
mov
mov
mov
pop
mov
dec
xor
daa
inc
cmpsl
inc
iret
dec
jmp
jge
push
fistl
cld
data16
ja
test
call
loop
xor
imul
sar
xor
push
int3
xchg
gs
sbb
scas
push
sbb
leave
lret
roll
cmp
dec
ja
pop
orb
gs
iret
inc
mov
mov
std
mov
xchg
into
orb
arpl
jecxz
adc
cmp
cmp
data16
mov
mov
dec
rcl
fcmovnbe
movsl
mov
out
jb
movsl
pop
add
out
mov
cld
xchg
in
int
sbb
jno
and
cmp
push
test
arpl
xchg
repz
dec
in
in
cli
adc
sub
pop
push
adc
popa
jg
inc
into
xor
adc
out
repz
aaa
inc
inc
rorb
test
xchg
sbb
sub
into
stc
and
call
std
ret
xlat
lret
ss
lret
cld
gs
mov
and
jge
andb
das
or
xchg
sarl
push
sub
sarl
jg
inc
iret
mov
shr
xchg
xor
fmuls
sub
mov
incl
repz
sbbl
int
fmul
pop
mov
inc
jp
sub
pop
lcall
jg
loope
icebp
aam
imul
pop
push
inc
inc
repz
sahf
idivl
mov
shrb
mov
rorb
movsl
xlat
inc
mov
mov
fidivrs
jmp
jne
addr16
jns
lahf
mov
repnz
push
xor
inc
mov
stos
add
lret
loopne
fwait
test
sub
mov
into
ljmp
rcll
cmp
mov
and
jle
fidivs
sub
test
xor
fwait
es
popa
dec
test
cmc
sbb
or
and
movsb
dec
xchg
pusha
and
idivb
dec
cmp
notl
push
shr
mov
jae
les
loopne
or
xor
js
add
test
adc
inc
mov
or
mov
cwtl
xor
push
shlb
add
xchg
sbb
dec
mov
clc
push
adc
stos
jae
sti
lds
inc
inc
and
in
aaa
jno
add
push
repnz
cmpsl
sti
dec
and
repnz
fsubs
xchg
sub
inc
jl
data16
mov
divb
inc
cmpsb
fcmovnb
hlt
mov
lea
sbb
mov
sbb
stos
push
js
arpl
into
add
mov
pop
jae
movsb
imul
jae
shll
scas
repz
jno
sahf
mov
jmp
stos
mull
fnclex
ja
pop
dec
or
jne
xor
lret
pop
mov
popa
fcomps
mov
and
or
lds
xor
xchg
sub
or
cltd
sub
rorl
into
sub
cwtl
mov
cmpsb
shlb
popf
xor
in
dec
cmp
jb
and
bound
sub
loopne
jmp
and
xchg
add
mov
jo
movb
dec
pop
rorl
mov
mov
cmp
xor
pusha
aad
loopne
insl
xchg
cmp
cmp
cmp
sbb
ss
cs
cmp
cmp
lret
jb
addr16
cmc
xor
mov
ficomps
pop
push
cli
dec
in
sbb
call
jns
mov
push
pop
push
es
jo
or
ljmp
loop
push
imull
das
lea
lcall
aam
repz
aam
dec
sbb
xchg
cwtl
push
sbb
in
mov
fmulp
rolb
pop
xchg
int
mov
imul
and
lret
jo
mov
mov
sbb
pop
jbe
jbe
in
movsb
push
dec
lea
je
mov
iret
mov
mov
aad
outsb
mov
movsb
test
mov
mov
cmp
inc
in
inc
jne
push
je
and
in
pushf
adc
loope
call
inc
mov
clc
fildl
sbb
js
fs
pop
push
sti
sub
mov
inc
rorl
xor
test
or
je
mov
dec
inc
mov
aam
lret
sbb
xchg
inc
jle
jbe
pushf
cmp
xchg
stos
es
lret
cld
aam
sarb
inc
push
sbb
outsb
mov
rol
cmp
adc
sti
cmp
pop
clc
dec
inc
xor
xchg
push
es
dec
inc
add
das
and
jge
push
insl
push
daa
push
cmp
xor
sub
mov
push
push
dec
dec
outsl
aas
fiadds
outsl
mov
enter
cwtl
lahf
cmp
push
mulb
inc
xor
cmp
push
inc
lahf
pop
pop
fidivrl
dec
jb
inc
loopne
xor
loopw
dec
or
pop
sub
fst
cmp
in
cltd
fdivs
movsl
pop
lods
out
pushf
call
out
sarl
cmpsb
mov
sahf
xchg
push
repz
pushf
mov
jg
mov
sti
sub
adc
adc
lahf
mov
loope
rolb
xchg
dec
cmpsl
jmp
sub
mov
pushf
test
dec
xor
push
movsl
mov
pop
scas
fmul
and
fs
fwait
cmp
push
cmovnp
cwtl
mov
or
xor
sar
fnstsw
cmp
inc
shlb
xchg
or
push
pop
fisubs
popf
das
xor
mov
push
mov
faddl
xchg
movsl
dec
mov
fbld
fisttpll
enter
jo
js
fistl
mov
clc
daa
js
lock
mov
aad
loopne
jmp
xchg
bound
xchg
cmp
rorl
xchg
lods
lea
xchg
test
int
push
mulb
jae
cmpb
shrb
andb
push
arpl
enter
fld
pop
push
mov
add
jg
pop
add
test
in
jge
push
adc
lods
call
out
push
sub
daa
stos
or
jmp
push
fldcw
adc
clc
add
shlb
aad
cwtl
push
hlt
push
sbb
sbb
stc
pop
cmp
or
out
inc
jl
pop
gs
sbb
int3
dec
pop
mov
inc
int
xchg
sbb
pop
xchg
push
mov
lods
xchg
jbe
sbb
or
out
mov
mov
scas
arpl
jb
adc
sbb
shrl
pop
dec
cld
ds
in
repnz
je
imul
jne
mov
fdivl
xor
stc
jl
ljmp
js
dec
lods
mov
stos
imul
xor
xchg
jns
nop
adcl
or
jmp
push
popf
cli
movsl
push
loop
test
nop
inc
sub
scas
movb
insb
sbb
or
mull
scas
mov
jle
int
andb
cmp
adc
add
fdivrl
xchg
mov
out
adc
or
or
out
es
xchg
dec
jb
es
into
andl
jno
sti
sub
dec
push
stc
sbb
in
shlb
pop
lcall
in
cmp
cmp
loopne
inc
sti
mov
push
sbb
and
fcmovbe
mov
lcall
fsub
push
js
test
push
mov
notl
inc
mov
ds
or
scas
push
jnp
inc
lahf
rorb
mov
adc
ss
das
popf
shll
dec
and
cmp
notl
bound
push
jne
mov
pop
mov
push
shlb
repz
aad
xchg
out
push
cmp
in
pop
adcb
jae
mul
jp
andb
jbe
mov
inc
mov
scas
xchg
outsb
pushf
pop
cmp
mov
sub
xchg
jno
mov
push
insb
mulb
arpl
mov
in
test
pop
dec
insl
loopne
je
push
sub
ret
mulb
cmpsl
add
xor
mov
ja
or
jle
add
mov
inc
mov
mov
popf
in
xor
add
mov
in
les
xchg
and
lret
sbb
aas
adc
mov
cmp
sub
int3
daa
and
mov
jne
ret
push
imul
pop
mov
mov
mov
fnstenv
or
mov
xlat
cmpsb
mov
out
test
sub
ja
sub
in
sbb
es
push
icebp
inc
sub
rclb
jecxz
lods
sub
inc
mov
data16
movsl
fistps
xchg
push
mov
mov
hlt
mov
xor
idivl
push
sahf
and
in
aad
mov
and
dec
jecxz
ljmp
fs
jae
push
aaa
or
and
js
mov
leave
cwtl
lcall
fdivrp
mov
fisubl
lret
repnz
inc
dec
call
sbb
push
lahf
xchg
mov
stos
pop
nop
bswap
push
lock
dec
mov
jge
jecxz
inc
inc
mov
jae
push
jge
sbb
jp
adc
adc
shr
nop
popf
jno
mov
in
pusha
xor
mov
cmp
xor
push
pop
adc
xchg
in
xchg
sub
mov
ss
sbb
fisubrs
fmuls
sub
xchg
adc
cmc
xchg
cmp
add
inc
repnz
pop
dec
fildll
cli
lods
lahf
jp
lret
adc
les
out
jno
pusha
xor
mov
push
stos
mov
loopne
dec
repz
nop
pushl
xor
sub
movsb
sub
mov
pop
test
dec
and
add
mov
dec
scas
xor
or
jmp
cmp
lret
pop
sub
call
sbb
xchg
idivl
push
and
movsl
mov
cmpsl
pop
push
daa
lahf
xchg
cli
bound
out
clc
xchg
xlat
sahf
jb
loopne
pop
pop
pop
jnp
gs
sbb
xor
repz
movsb
inc
pusha
outsl
adc
jae
add
mov
xorl
push
dec
add
and
addb
sbb
nop
mov
gs
lds
pop
pop
pop
ss
fwait
dec
mov
test
jecxz
xor
out
add
cmp
mov
sub
cmp
jno
pop
insb
sbb
outsb
fsubrs
mov
popf
xchg
push
cmp
fsubl
push
inc
inc
loope
sbb
xlat
and
xchg
lea
dec
adc
negl
fisubs
sbb
jo
mull
mov
adc
fistpll
sub
cs
jns
rcl
cmp
jbe
adc
js
sbb
inc
dec
push
icebp
inc
xchg
stos
inc
push
and
pop
cmc
out
jle
add
mov
gs
adc
jnp,pn
push
call
cmpsb
sbb
icebp
cmp
lahf
fwait
sub
shr
mov
insl
xchg
mov
push
movsb
adc
and
dec
dec
pop
rorb
cmp
mov
or
into
jp
push
dec
add
pop
not
cmpl
xchg
pop
into
and
ret
dec
xchg
add
xor
or
addb
dec
lcall
testl
xchg
xlat
inc
pop
ror
scas
outsb
mov
xor
lret
inc
iret
jp
data16
scas
lock
jmp
scas
daa
aam
imul
sbb
cmp
cmp
rol
nop
mov
in
sbb
mov
push
sub
int3
pop
pop
inc
insl
mov
or
add
jns
fsubs
pop
clc
add
in
xchg
repnz
push
outsl
cmc
cli
lahf
inc
call
outsb
sti
pop
add
cld
fldenv
cmp
sbb
andl
fsubrs
jle
cmp
mov
inc
imul
insb
pusha
in
gs
movsb
and
std
lret
dec
packuswb
sbbb
add
pushf
shlb
add
movsb
mov
push
xor
mov
scas
mov
or
loopne
out
scas
mov
jge
shrb
shll
aaa
sbb
or
clc
pop
xchg
repz
enter
gs
pop
movsb
iret
add
frstor
inc
sub
movsl
int
imul
cli
pop
fmuls
jg
sub
fdivl
push
inc
push
sbb
mov
mov
sub
testl
mov
sahf
decl
jge
iret
popw
popf
mov
lea
stc
jmp
cld
sub
popa
stc
fs
add
mov
mov
test
movsb
cli
insb
incb
push
test
jg
sub
jmp
jmp
pop
leave
lret
mov
lea
iret
movsb
aam
dec
xchg
sbb
add
add
xchg
push
push
pop
out
jnp
cmp
xchg
stos
sbb
iret
cmpsb
xchg
dec
popf
pop
ja
iret
mov
jge
xchg
push
fildll
add
mov
fcmove
imul
fisttpl
xchg
out
push
in
out
jge
inc
sbbl
inc
lds
push
cmp
shlb
or
add
push
jno
subl
jbe
mov
insl
mov
cmc
in
mov
and
mov
mov
or
outsl
xor
pop
int
sub
out
ret
xchg
insl
sub
and
pop
popf
clc
mov
inc
lret
cld
dec
push
iret
lret
adc
cmpsb
frstor
out
out
mov
js
fiaddl
xchg
pop
lds
pop
push
inc
push
or
rcrl
jo
adc
mov
inc
mov
jmp
inc
jecxz
mov
or
and
push
push
mov
add
pop
enter
mov
arpl
push
cmp
xchg
sbb
jb
repnz
pop
fildll
jmp
scas
jns
and
jmp
jb
sbb
arpl
ret
cmp
aaa
sub
sub
dec
cmp
pop
mov
inc
fincstp
mov
rorb
loop
int
xor
lds
jbe
xchg
sbb
adc
dec
cmpsb
mov
fcmovnb
adc
adc
cmp
push
push
adc
mov
add
jg
sub
jnp
test
adc
jge
jne
or
pop
shl
adcl
mov
popa
in
rclb
push
imul
pushf
lcall
jg,pn
and
repz
push
insl
and
cmp
or
cmp
xor
adc
xchg
popf
pushf
es
jmp
sub
je
div
pop
push
cltd
arpl
or
lods
arpl
dec
outsl
dec
shll
loope
mov
sub
inc
test
xchg
add
jge
mov
jmp
and
sub
pop
sahf
mov
das
cld
push
push
popf
or
and
mov
adc
inc
xor
aam
fildll
mov
and
data16
push
repnz
test
shrl
mov
out
outsb
adc
es
loop
out
jbe
lea
pop
jo
cli
movsb
push
loop,pt
ficoml
lret
aad
push
dec
imul
data16
aas
and
push
ret
in
outsb
cmp
shll
push
pop
xorb
and
xchg
enter
sbb
push
jge
daa
add
out
into
ss
cmp
cmc
and
xor
and
dec
in
jle
sub
push
pop
out
mov
push
and
xchg
xchg
mov
jnp
out
inc
repnz
sub
xor
clc
xchg
ret
sbb
fs
adc
mov
and
xchg
add
pop
loopne
std
xchg
icebp
lahf
in
inc
rcll
sub
inc
shrl
jecxz
or
into
iret
shlb
aaa
inc
sub
add
mov
xchg
sub
std
inc
dec
or
sahf
hlt
in
dec
movsb
out
pop
lods
mov
pand
mov
sbb
pop
bound
jge,pn
aas
mov
cmp
lret
mov
popa
leave
mov
repnz
and
cmp
js
ss
in
test
xlat
dec
xchg
fnstsw
jp
test
add
xor
dec
mov
add
stc
mov
ja
inc
pusha
pop
sub
cs
pop
outsb
cld
lods
repnz
scas
pop
sarb
cwtl
sahf
sahf
ret
lret
inc
adc
jmp
mov
dec
lret
or
and
into
fs
pop
nop
push
pop
lods
mov
mov
or
cwtl
rcll
imul
adc
dec
aaa
outsb
in
test
push
sub
xchg
pusha
dec
lahf
icebp
cmp
insb
sbbl
cld
xchg
stc
pop
and
cmp
stos
sahf
dec
stc
pop
push
pop
mov
inc
mov
std
fmul
dec
pop
push
push
add
ljmp
arpl
notb
sbb
jmp
gs
adc
shrb
lods
shrl
cmp
testl
fists
repnz
mov
lock
enter
fadd
adc
and
jle
nop
les
add
in
jge
mov
push
sub
lahf
lock
es
and
pop
pop
repz
jl
in
inc
mov
clc
or
in
sbb
jp
imul
fnstsw
insb
sub
test
push
or
cmp
or
imul
lret
addr16
call
mov
xor
out
test
cltd
mov
xor
xor
es
pop
lret
insl
aad
lcall
cmp
jno
cmp
test
cltd
mov
andb
loope
int3
and
xchg
xchg
imul
je
movb
inc
jo
stos
mov
mov
xchg
cmp
xchg
clc
mov
hlt
dec
dec
lea
mov
cmp
jl
push
jne
cmp
shll
ss
mov
inc
daa
pop
jmp
sbb
loope
fadd
outsb
in
jge
xchg
or
jb
pop
inc
add
add
dec
pop
dec
mov
aad
mov
je
push
pop
or
call
push
mov
les
sbb
loope
es
xchg
jmp
cmpsl
dec
cmp
in
fistpl
inc
add
cmc
inc
add
jl
sarb
mov
lea
adc
cmp
lahf
or
nop
push
xchg
out
dec
sub
icebp
push
lods
repnz
push
mov
sub
fsub
movsb
arpl
test
mov
xor
std
insb
jecxz
push
push
mov
push
inc
inc
es
pop
es
iret
paddd
and
pop
mov
dec
jbe
xlat
insl
add
repz
lock
mov
mov
dec
mov
add
push
stos
lock
fdivs
mov
lret
adc
jle,pn
cmp
or
int3
ficompl
mov
imul
lahf
sub
rolb
fs
sbbb
mov
jnp
xor
xchg
fdiv
inc
jns
cmp
fcoml
aam
lock
pop
imul
inc
fsts
xchg
push
jle
loope
dec
mov
add
data16
adc
jne
jns
mov
mov
fisttpll
pop
enter
jne
aas
dec
sub
repz
cmp
pop
and
leave
sbb
add
cmp
scas
aam
enter
jp
adc
pop
icebp
mov
scas
mov
push
jge
divb
or
pop
mov
sarb
lods
sub
dec
scas
mov
in
mov
add
js
loopne
cmp
mov
ljmp
lds
add
pushf
sub
imul
lods
or
sti
push
out
into
enter
dec
pop
mov
mov
mov
fcoms
shl
fmul
mov
jns
test
out
pop
mov
ds
cmpsb
inc
sub
add
ret
int
mov
pop
mov
mov
pop
jns
mov
pusha
xor
das
cmp
out
into
add
enter
inc
jle
scas
sbb
mov
adc
cmp
pop
addb
scas
jmp
adc
ret
sti
jle
jbe
and
pop
push
fdivrs
stos
push
inc
jae
lds
or
jecxz
mov
scas
sub
sub
andb
test
cld
add
and
std
aaa
push
mov
or
adc
mov
mov
cmp
adc
pop
out
stos
and
xor
mov
or
ss
mov
inc
and
cmp
rcrb
or
popa
mov
add
loopne
dec
pop
daa
mov
adcl
push
inc
das
and
xor
sbb
out
pop
inc
mov
incl
test
inc
imul
xorb
addr16
push
iret
enter
mov
sub
pop
test
or
sahf
xor
lcall
popa
sub
les
pop
mov
cmp
dec
xchg
mov
push
cmpsb
xlat
mov
scas
mov
ds
jl
out
int3
loop
daa
jbe
gs
pop
stos
mov
pop
and
out
andl
mov
scas
addb
pusha
push
jmp
lret
dec
std
lcall
xor
lock
jle
loop
in
outsl
pop
in
add
lds
lret
fsubrl
push
popf
cmp
xchg
inc
mov
div
enter
jge
adc
popf
mov
pop
mov
rcl
shl
jle
leave
das
mov
fimull
dec
dec
scas
xchg
sbb
cwtl
xchg
mov
rorl
push
test
das
add
jmp
nop
adc
ficompl
cmc
icebp
add
sub
dec
stc
std
sub
sbb
pusha
sub
jo
rorb
dec
shll
ss
sbb
pusha
leave
fwait
pop
mov
fwait
jl
dec
or
clc
pop
in
enter
arpl
add
scas
add
test
or
jbe
jae
adcl
lret
inc
scas
jle
mov
bound
lret
adcb
push
push
inc
imul
cmp
je
inc
push
push
mov
push
and
movsb
xchg
mov
inc
imul
das
cmp
adc
xor
inc
xchg
pop
stos
pop
jmp
push
vpperm
mov
sbb
rclb
xor
jmp
adc
jp
xor
jecxz
mov
sbb
stos
scas
lds
mov
lret
arpl
ss
test
xlat
xchg
outsl
or
cwtl
fsubp
mov
arpl
lret
dec
add
and
jns
test
fisttpll
cmp
cltd
xchg
loop
push
test
adc
mov
mov
mov
or
mov
mov
jnp
pop
int3
nop/reserved
repz
and
cmpsb
add
dec
pop
sbbl
xchg
pop
jns
icebp
push
ljmp
jmp
xor
or
pushl
cmp
data16
inc
xchg
jnp
lret
mov
leave
and
mov
fcomps
jecxz
cmc
push
xchg
push
flds
aaa
enter
push
nop
cmpsl
add
push
test
inc
daa
fs
dec
cld
pop
sbb
rcll
mov
aaa
imul
pop
jmp
scas
fldcw
loop
push
mov
xchg
sub
clc
les
fisubrs
imul
test
xor
lds
mov
jno
out
and
adc
xchg
popa
and
cld
add
scas
jge
enter
or
fwait
jecxz
jne
fdivs
out
add
push
pushf
add
out
test
sub
pop
ja
mov
fbld
pop
push
jne
jne
cmc
sbb
test
add
sti
arpl
xor
jbe
sub
push
xchg
dec
repz
push
stos
mov
jp
xor
imul
and
mov
ret
dec
jg
dec
dec
or
test
repz
scas
adc
mov
js
cmp
popa
imull
aas
cmp
pop
sbb
pop
mov
int3
mov
leave
add
cmp
es
lret
xchg
push
sahf
fidivl
add
out
out
ret
and
xor
mov
pop
dec
adc
jp
sub
xor
sub
div
dec
pusha
es
adc
mov
iret
xlat
fst
and
push
sbbl
sub
lcall
xor
daa
adc
mov
popf
xchg
jne
aaa
cmp
mov
and
insb
cli
mov
out
push
fcomps
cmp
sub
or
pop
jbe
dec
jecxz
fcmovb
lcall
inc
lahf
rcrl
add
ja
jnp
jo
mov
push
js
cmpsb
scas
adc
push
adc
sub
pop
fldl
or
lahf
fisubrs
mov
call
inc
xor
adc
adc
or
push
cmpl
push
cmp
lods
cmc
push
ss
pop
fwait
or
dec
jns
and
push
imul
ficoml
jmp
paddw
push
jp
fcomps
into
mov
xor
cmpsb
je
aaa
push
scas
mov
cmp
stos
ljmp
jecxz
mov
xchg
popa
mov
inc
mov
add
loop
or
pop
or
push
or
push
mov
lds
repnz
sbb
daa
iret
test
repnz
pop
cmc
push
rcrl
and
mov
bound
xchg
fsubs
insl
xorb
hlt
in
fisubrl
xor
insl
test
fdivr
cmp
test
add
inc
fisttpll
pop
ss
mov
inc
dec
std
jbe
lret
mov
adc
or
pop
pop
mov
inc
mov
fldt
cmpsl
jl
inc
ficompl
xor
pop
jmp
sub
and
and
rcr
cs
dec
push
lock
mov
out
cmp
or
out
fisubrs
roll
push
lcall
mov
push
pop
sbb
sub
fs
cs
cld
jmp
cli
cmp
ficomps
inc
xchg
sub
mov
xor
add
je
dec
inc
sub
arpl
lods
lods
xchg
scas
sub
xlat
xchg
shll
in
cmp
daa
lock
inc
outsb
inc
mov
and
sub
std
push
jb
inc
adc
iret
scas
cmp
dec
lret
mov
clc
jge
or
mov
sahf
pushf
push
bound
rolb
orb
mov
sub
sbb
sub
ret
pusha
adc
mov
mov
mov
lock
sbb
testl
and
adc
cmp
dec
cld
and
adc
sahf
cmp
dec
pop
rcll
stc
sbb
rolb
jecxz
fisttpll
stos
cmp
dec
push
fdivr
mov
js
ret
xlat
jge
out
imul
js
addr16
cmovg
lock
outsb
sbb
push
dec
ucomiss
outsb
fisubl
fdivr
je
push
sbb
fmuls
repnz
jge
adc
subl
pop
mov
adcl
and
addb
popa
jae
arpl
mov
lock
dec
pop
shlb
sub
or
cmp
and
rclb
adc
lods
adc
ret
lcall
int3
psllq
and
aam
xchg
xchg
lcall
orb
dec
xor
dec
lods
sub
push
loopne
in
sahf
jbe
or
sbb
rol
push
inc
es
les
cmovb
in
inc
mov
scas
loope
push
repnz
cs
imul
out
and
mov
popa
in
jecxz
fwait
or
jecxz
or
imul
mov
lods
mov
imul
clc
jnp
sbb
push
pop
lret
xor
push
cmpsl
and
inc
je
sti
lock
xor
shll
cmp
inc
into
jo
jnp
mov
int3
jo
cmpsl
sbb
mov
ljmp
sub
aad
fsubp
iret
mov
mov
cmp
addr16
xor
fstl
addl
dec
repz
add
push
mov
lock
je
shlb
mov
inc
in
test
divl
jne
inc
adc
test
daa
push
stc
mov
test
lock
push
into
mov
jb
add
jl
inc
pop
int3
pop
mov
outsb
adc
and
jnp
andb
scas
addr16
subl
add
add
int3
sti
lods
pop
inc
jno
lret
dec
not
movsb
xor
push
pop
add
loope
adc
push
jmp
sbb
xor
jbe
push
cmp
xchg
arpl
jno
mov
mov
sub
dec
push
shlb
fildll
fstpl
pop
jae
mov
add
jo
jecxz
add
pop
pop
mov
adc
popa
and
jo
enter
push
push
xor
mov
cmc
mov
ret
pusha
loope
ret
ljmp
add
jae
into
sub
pop
push
cli
mov
cld
inc
stc
sbbb
xor
testb
xchg
cmp
movsb
pop
sahf
pusha
cmp
push
test
fsubl
sti
push
shrb
and
cmp
mov
repnz
stos
sub
or
andb
stos
dec
ret
adc
lahf
out
push
jae
mov
xor
aad
hlt
int
adc
leave
sub
mov
sub
pop
iret
jns
aam
add
mov
popw
adc
xchg
add
sub
push
xchg
or
cmp
push
sub
push
mov
jmp
inc
push
test
repz
pop
dec
pop
and
leave
cmp
dec
aam
jmp
push
jecxz
sbb
les
dec
lret
enter
push
add
das
pop
cwtl
icebp
push
dec
stos
stos
fidivrs
das
cmp
sub
xchg
mov
mov
test
pop
adcl
nop
push
rorl
push
lods
call
sbb
pop
int
mov
data16
or
jb
adc
add
sub
mov
clc
sbb
gs
addr16
mov
cmpl
sbb
push
add
jb
aam
cmp
adc
loope
mov
sub
pop
mov
jg
jno
mov
popf
mov
sub
adc
jbe
mov
adc
mov
pop
sbb
jg
jb
jmp
sub
dec
dec
xchg
mov
ljmp
pop
jb
arpl
xor
cmpsb
mov
dec
inc
and
xorb
inc
daa
fwait
lcall
mov
les
inc
mov
inc
fs
test
fbstp
xchg
jmp
aaa
inc
ret
lods
adc
imul
arpl
sar
lods
mov
lods
xor
cmp
xchg
imul
jmp
push
inc
and
mov
rclb
scas
or
push
inc
or
inc
sahf
pop
mov
mov
mov
loop
mov
pmulhw
imul
xchg
cwtl
pop
pop
cld
xor
pop
sbb
sub
pop
notb
std
mov
sub
sbb
ja
or
mov
and
add
cmc
xchg
sbb
sahf
jp
lea
xchg
lds
dec
scas
shr
test
jmp
scas
lds
jge
add
push
mov
inc
test
pop
cmp
mov
fiaddl
push
insb
mov
mov
inc
pop
test
xlat
ds
insl
mov
adc
loopne
mov
pop
out
cmpsl
jg,pt
xchg
push
cmp
mov
dec
xor
sbb
jge
lcall
mov
push
cmp
int3
adc
repz
pop
outsb
sub
mov
into
lret
jle
sbb
xchg
stos
cli
xchg
jbe
stos
xor
lahf
mov
pop
jp
and
xchg
addb
ds
into
in
lods
outsb
fistpll
cmp
hlt
pop
pop
jo
mov
mov
fisubl
sahf
test
mov
pop
icebp
fsubl
mov
divb
cs
pushf
or
add
das
push
shlb
pop
neg
add
mov
sbb
xchg
mov
jno
jg
scas
push
inc
mov
jo
hlt
imul
jno
aad
cli
add
outsb
sub
test
enter
mov
test
jnp
inc
xor
aad
sub
fcomps
out
jl
jne
test
mov
fists
jle
sti
dec
mov
jo
data16
jmp
or
sti
outsb
mov
jo
shlb
sbb
rcll
or
lret
pushf
mov
popa
fwait
out
js
dec
dec
movsb
je
call
or
xchg
inc
xlat
cmpsb
insl
mov
stc
jecxz
insl
push
xchg
loope
flds
push
mov
clc
cmp
fdivl
call
ds
out
jp
dec
cmpsb
cmp
pop
rolb
insb
sub
and
pop
sbb
call
xchg
push
rclb
negl
sbb
xor
mov
mov
dec
sbb
cmp
xchg
push
rcl
push
dec
ret
inc
cmp
outsl
loop
daa
cmp
fwait
push
jnp
sbbb
and
in
xor
inc
add
fcmovu
popf
stos
aas
inc
enter
adc
xchg
test
cmp
stc
lea
adc
repnz
mov
jle
cmp
cmpsl
imul
and
cmp
lahf
int
push
inc
push
fldenv
test
xchg
inc
mov
pop
xchg
rorl
fadds
dec
xchg
mov
cmp
movsl
stos
or
dec
cmpsb
int3
loope
movsl
orb
enter
xchg
sbb
pop
jmp
mov
js
stos
cmp
cmc
and
and
push
jns
push
popf
jl
add
sub
loope
inc
aad
or
xor
dec
cmp
mov
sbb
scas
or
mov
inc
dec
mov
ja
xor
dec
jp
xchg
add
push
enter
mov
pop
pop
enter
mov
xor
cld
xor
cmpsl
icebp
scas
or
mov
vmwrite
mov
pop
mov
bound
pop
fwait
nop
or
jecxz
cli
xlat
push
push
scas
test
and
xor
push
leave
sbb
dec
xlat
xchg
andb
mov
inc
xor
divl
pop
sbb
sbb
addr16
bound
pop
add
adc
imul
scas
dec
dec
popa
int
out
pop
jb
or
popa
repnz
jne
shrb
jb
mov
push
push
cld
fwait
in
aam
aam
sbb
std
scas
dec
insb
mov
rol
sub
push
sbb
pop
dec
cs
notb
fistl
mov
cmp
mov
xchg
inc
stos
lock
xchg
lcall
aaa
pop
cld
push
inc
xlat
jno
outsb
jno
nop
outsl
sub
pushf
inc
mov
popf
push
inc
pop
xor
popa
rorb
pop
xor
jle
jno
and
jecxz
fdivl
sahf
dec
cwtl
and
mov
pop
icebp
add
test
mov
jo
loop
shrb
andl
xor
jg
cmp
xor
pusha
roll
leave
stos
aas
xchg
sub
or
aam
test
pop
sbb
pop
cmp
repnz
daa
xor
popa
sbb
insl
cmpsb
mov
push
lret
int3
leave
clc
cld
and
xor
pop
cli
jnp
adc
or
fs
mov
pop
pop
mov
xchg
fisttpl
or
mov
add
xlat
and
inc
push
mov
adc
jno
cltd
das
cmp
icebp
mov
idivb
lret
inc
mul
dec
hlt
sub
fwait
adc
push
clc
jg
pop
pop
and
sbb
jbe
pop
popf
cmp
xor
mov
mov
jne
xchg
orl
std
movl
cwtl
out
jge
pop
push
adc
rol
sar
or
pushf
cli
dec
sahf
jmp
test
xchg
pop
inc
les
shll
dec
xor
push
icebp
popl
aam
loopne
pop
mov
jge
mov
xchg
clc
dec
jno
cmp
mull
ret
popa
dec
je
push
adc
es
lahf
inc
xchg
scas
repz
add
nop
push
in
xchg
aas
jne
insb
pop
fsubrs
scas
adc
stc
inc
mov
into
imul
inc
sub
cmp
nop
push
cmp
int
int3
nop
shll
fdivrl
jne
inc
and
cmc
adc
mov
in
xor
rol
sar
scas
decb
push
or
jle
stos
jle
outsb
lods
sub
loope
push
xchg
sbb
jne
sbb
test
pop
mov
ss
sahf
ss
sub
leave
fsubrs
lret
sub
xchg
sbb
shll
and
and
popf
jle
mov
cltd
cltd
add
lcall
es
dec
cmc
adc
out
scas
adc
add
push
inc
sbb
push
jmp
xchg
movsb
fisttpll
sti
push
pusha
repnz
mov
mov
fisubrs
mov
call
repz
mov
mov
pop
enter
stos
daa
mov
pop
jmp
xor
xor
and
push
mov
push
cld
sti
xchg
xlat
add
daa
xor
jmp
adc
cmp
sbb
push
shll
pop
mov
sbb
add
cmpsl
imul
cld
imul
jbe
mov
cmp
mov
or
lods
mov
inc
out
dec
mov
sub
xor
repnz
dec
push
jmp
push
dec
int
ja
pop
repz
and
mov
icebp
pop
xchg
jmp
or
insb
inc
and
xlat
dec
jecxz
shll
sti
movsb
roll
mov
pop
fwait
jnp
lcall
adc
sub
mov
sbb
push
sub
fcom
cmp
cs
int3
xor
sub
je
push
cmp
shlb
cli
or
xchg
xor
xchg
dec
inc
sahf
shl
xchg
dec
and
inc
mov
push
pop
xor
inc
mov
mov
xor
jnp
adc
or
pop
push
sti
mov
loope
jmp
adc
inc
push
orb
xchg
mov
in
inc
out
adcb
fstpl
push
pop
in
cld
lcall
scas
sbb
xchg
sahf
insb
fsubrs
jbe
mov
push
inc
mov
cmp
pop
add
sbb
faddl
aas
scas
js
push
adc
rcl
pop
lods
cmp
dec
fsubrp
or
clc
xor
test
les
scas
movsl
or
jp
mov
loopne
adc
xlat
adc
sub
jg
mov
pop
dec
divb
xchg
cmc
adc
pushf
mov
xchg
out
scas
and
sti
popa
aas
lret
add
jnp
in
inc
pop
mov
sti
jno
inc
ljmp
add
sub
cmpsl
mov
loopw
into
mov
imul
es
adc
and
dec
in
outsb
out
jl
loop
mov
es
imul
xchg
push
sbb
imul
addr16
sarl
mov
mov
pop
and
lds
fdivrl
pop
imul
adc
sub
flds
gs
je
push
mov
pop
movsl
push
leave
pushf
mov
xor
jns
sub
aad
add
push
aaa
enter
mov
cmc
jg
sbb
es
cli
cli
mov
push
add
pop
loop
pop
jp
lods
or
or
dec
jge
sub
xchg
fdiv
fstpt
notb
rcrl
mov
cltd
push
aas
lahf
insl
popa
add
lret
pop
mov
stos
pop
ret
and
dec
daa
sub
into
jae
jle
inc
stc
ficoml
filds
imul
sbb
mov
add
push
scas
lcall
icebp
movsl
pushf
fidivs
mov
nop
in
cmpb
push
mov
int
shrb
inc
cmp
inc
fmulp
pop
test
add
and
xor
sub
ss
fs
cmpsb
jge
xchg
ss
lock
cli
cmp
sbb
add
fstpt
xchg
xchg
sub
in
das
cld
test
lock
inc
hlt
or
call
mov
lods
or
mov
std
cmp
loopne
daa
rep
sbb
add
push
ret
inc
test
add
out
sub
test
test
divb
test
xor
sbb
imul
adc
cs
stos
in
adc
sbb
test
inc
loop
xchg
int
inc
ss
sbb
push
jb
roll
scas
push
pusha
leave
adc
push
inc
mov
mov
and
imul
or
enter
add
mov
pop
dec
inc
aaa
cmp
dec
xor
or
mov
bound
mov
jbe
or
out
push
push
mov
in
sbbl
popa
ret
aas
jg
daa
add
jns
int
out
pop
xor
or
cli
insb
xor
mov
pop
lcall
flds
std
push
daa
mov
arpl
fidivs
fimuls
adc
push
sbb
xor
cmpsb
push
mov
aad
xchg
mov
and
orb
mov
push
js
sub
or
xor
mov
cltd
mov
pop
cli
rclb
and
sbb
inc
sbb
cmp
out
stc
or
aam
mov
movsb
das
add
or
sub
ss
ret
inc
stos
std
ret
mov
stc
sub
dec
pop
lea
sahf
mov
inc
mov
cmp
mov
mov
mov
in
mov
ds
stos
into
adc
stos
or
rcrb
test
push
pop
sub
mov
into
dec
scas
cmp
aam
mov
xchg
lods
shlb
push
xor
cltd
cli
pusha
out
and
lret
mov
add
mov
ret
sub
ds
pop
clc
fnstsw
mov
sub
loope
sub
jns
mov
lcall
incl
fisttpll
pusha
rcr
mov
adc
ret
jno
cltd
pop
fsubs
jno
adc
daa
mov
jbe
test
fimuls
pop
dec
notb
decb
psubusw
cmpsb
mov
mov
mov
int
push
dec
push
sbb
dec
jne
and
mov
pop
pop
outsl
call
lock
mov
push
bound
fnstsw
subl
ljmp
ret
jnp
pop
or
push
push
inc
clc
pop
addr16
jb
jg
adc
jns
jbe
xchg
xchg
xchg
cmp
lods
and
mov
dec
push
repz
cld
aam
gs
jae
cmp
lret
push
mov
push
aaa
nop
sub
cld
dec
cs
pop
lods
out
jne
jnp
pop
pop
add
loope
mov
aas
shrl
sub
dec
fldt
dec
sahf
aad
loope
lods
or
jo
adc
loopne
mov
jg
pop
ret
insb
sbb
pop
cmp
xchg
iret
add
mov
sbb
xor
movsb
cmp
pop
mov
je
sbb
rcr
dec
inc
jge
push
mov
sbb
jge
sub
fcmove
imul
int3
inc
or
mov
fldt
add
imul
inc
shlb
jae
pop
xchg
imul
cltd
xchg
lret
or
repnz
insb
jp
jae
xchg
lock
stos
jecxz
repnz
movsb
test
gs
mov
mov
icebp
int3
in
cmp
sahf
rolb
mov
mov
repz
test
add
jne
mov
pop
imul
aaa
mov
cmp
iret
movsl
stos
sbb
fists
test
mov
out
jnp
xchg
jns
sarl
les
nop
ds
rcll
jne
push
in
test
inc
push
dec
fwait
xor
pop
sbb
stc
jp
sub
ja
push
jb
je
mov
jo
out
lahf
rcll
into
je
mov
js
inc
sbb
int3
int3
push
imul
sub
xchg
mov
add
into
es
in
mov
stos
or
into
rolb
push
int
jle
aaa
stos
imul
lahf
mov
inc
add
xchg
shrl
and
or
rcrb
test
push
popf
jmp
jns
shll
lods
shll
cmp
pop
push
push
test
neg
call
out
mov
fidivl
or
call
outsb
mov
jb
lods
repz
fdivrl
loopne
pop
cmp
cmp
cltd
xchg
imul
fdivr
jle
mov
hlt
out
in
fsubr
cmpsb
cmp
out
pop
push
daa
xchg
xor
inc
pusha
and
cld
in
mov
test
push
xchg
adc
add
popa
pop
push
dec
xchg
lds
test
xor
cmp
adc
ret
jmp
add
jle
es
pushf
inc
ja
add
jmp
fldz
fidivrs
mov
mov
mov
out
adc
cmc
adc
lea
mov
shrl
inc
arpl
lods
push
daa
xor
jo
aas
roll
jno
out
mov
push
aad
int
dec
stos
data16
in
and
loop
addb
stos
into
mov
fstpl
notl
or
add
or
sub
jnp
loope
jo
xlat
add
std
rcr
pushf
cli
cltd
negb
das
mulb
fcmovbe
push
loope
push
jbe
aaa
mov
jbe
xchg
pop
rcrl
xchg
pushf
jp
subb
mov
test
mov
mov
pushf
lock
mov
pop
add
test
cld
cli
pop
addl
ret
mov
xchg
inc
dec
or
jg
mov
pop
push
aaa
or
mov
fisubl
outsl
dec
hlt
and
xor
pop
sbb
inc
push
imul
outsl
loopne
stos
mov
jb
popf
or
push
inc
and
imul
xchg
ficomps
xor
push
je
imul
and
rcl
push
jp
or
sbb
mov
lods
sti
push
push
frstor
test
lcall
ljmp
addr16
imul
pop
add
lods
fisttpl
jge
sub
repz
cli
fists
xor
je
inc
mov
pop
jge
jns
pop
push
jno
mov
push
lea
sahf
test
push
push
cmp
sarl
movsl
cmc
fcom
mov
push
mov
popf
sbb
int3
pop
icebp
loopne
jnp
inc
movsl
cmp
jbe
dec
ret
mov
or
shl
push
jnp
jg
ficoms
in
insl
nop
xchg
js
push
movsb
and
dec
push
jp
jo
ljmp
mov
clc
push
or
dec
inc
dec
dec
jecxz
stos
or
cltd
pop
xchg
insl
mov
iret
xchg
cmp
ds
repz
xor
pushl
add
push
ljmp
loope
lahf
push
loop
arpl
xor
inc
outsb
or
xchg
sbb
sbb
lahf
cmc
lock
jecxz
ja
mov
lcall
jl
aad
pop
imul
stos
jnp
mov
cmp
inc
add
push
cmp
int
ret
loopne
adc
sarl
inc
dec
aam
mov
mov
dec
fstp
and
cmp
loope
enter
mov
test
jle
dec
insb
nop
daa
mov
jae
in
sbb
or
sarl
daa
or
in
push
fs
mov
int
mov
mov
inc
xchg
enter
jae
iret
jmp
gs
fadd
push
and
jns
scas
dec
adc
jb
mov
cli
test
sarl
fcmove
push
push
movsl
adc
mov
les
imul
rolb
clc
mov
xchg
les
out
push
mov
fbstp
fmull
movsb
push
ja
pop
icebp
ficoml
pop
jbe
divb
ja
jbe
jne
call
pusha
fldcw
cmp
stos
lcall
iret
inc
repz
sbb
rcr
add
mov
cltd
jg
jecxz,pn
sbb
mov
shll
lahf
sysret
subl
mov
pop
out
repz
pop
mov
or
adc
inc
fisubl
fisttpll
movsb
mov
mov
pop
mov
fldenv
mov
pop
mov
inc
fistpl
imul
lret
test
xchg
cld
int3
dec
push
mov
loop
adc
dec
incb
bound
lcall
cmp
hlt
imul
cltd
push
pusha
mov
sub
lcall
bnd
jle
xchg
sub
xchg
add
xor
inc
mov
out
pusha
dec
and
test
sbb
out
fadd
pop
fstl
lds
cmpsb
rcll
lea
push
das
sub
xor
lds
xchg
and
comiss
xchg
mov
xchg
push
pop
xchg
ljmp
cmpsl
inc
roll
rorb
es
mov
outsl
mov
pop
sbb
ja
fisttps
dec
adc
push
imul
jle
push
add
clc
mov
int
dec
loop
mov
lahf
pop
add
inc
scas
push
adc
cmpsl
ljmp
fidivrl
inc
movsl
and
sbb
inc
inc
push
inc
sti
out
inc
mov
inc
ds
cli
arpl
js
stos
mov
pop
mov
sbb
sar
lret
sbb
cwtl
inc
add
push
mov
xchg
dec
pop
imul
lret
cmpsl
cwtl
out
imul
dec
loop
insb
dec
in
stos
or
cmp
fisubs
popl
lock
call
bound
xorb
mov
push
lret
dec
xor
leave
xor
pop
out
iret
xchg
mov
push
sub
call
inc
fucomip
sub
or
push
lret
loopne
inc
dec
or
add
adc
lahf
cwtl
and
pop
add
sbb
inc
loope
lea
addl
loop
and
insb
mov
mov
push
sbb
mov
vunpcklpd
fadd
mov
xor
inc
lods
fmul
xor
mov
xchg
jle
scas
dec
icebp
bound
inc
push
cltd
scas
dec
inc
mov
push
out
pop
mov
stos
daa
dec
les
jl
hlt
rcrb
cmpsb
insl
cs
mov
call
cmc
shrb
mov
inc
dec
outsb
xchg
xchg
cmp
fmuls
xchg
xor
xchg
or
dec
xchg
mov
ret
cmpb
in
mov
jg
mov
jmp
sbb
cmp
adc
sbb
repnz
gs
mov
and
and
or
incb
add
sbb
push
mov
mov
fcoms
xlat
pop
jp
rcrl
push
xor
cmp
lods
cmp
cmp
jb
xchg
push
scas
xchg
xor
icebp
mov
add
xchg
or
push
mov
out
or
iret
cltd
cmp
jl
sub
cmp
shr
push
inc
icebp
xlat
lcall
test
mov
mov
mov
adc
jecxz
xchg
cmp
outsl
pop
hlt
scas
loope
sub
sub
fstps
lcall
lods
mov
adc
xchg
or
jae
jo
gs
gs
jle
push
mov
test
or
cmp
mov
es
lcall
cmp
pop
hlt
leave
fwait
dec
cmp
js
int
add
test
scas
adc
or
xchg
push
fimull
jmp
cmp
js
dec
cmp
and
rol
ret
mov
mov
loope
pop
std
mov
scas
cld
in
xor
add
das
jns
das
add
jle
mov
imul
imul
jnp
xchg
sbb
cmp
add
jecxz
sub
xchg
pop
stos
pop
sbb
imull
dec
lods
stc
shlb
inc
mov
sub
int
testb
aad
loope
scas
jns
sahf
rcr
ss
sub
clc
xor
lods
xchg
pop
dec
inc
nop
dec
aam
inc
fisttpl
adc
lds
xchg
and
shll
shlb
aas
cmp
push
mov
rorl
jp
outsl
xchg
xor
push
jp
and
nop
fsts
sbb
fsubl
arpl
sbb
mov
push
imul
imul
push
shr
mov
fwait
xor
das
je
in
mov
add
out
mov
es
lods
push
lock
pop
lods
jg
cld
iret
inc
ret
pop
fidivrl
fstpl
out
pop
sbb
xchg
pop
dec
imul
push
cwtl
cwtl
adc
dec
gs
mov
jle
aaa
addr16
adc
mov
or
test
rol
out
stc
loopne
and
cwtl
and
cmp
adcl
ret
sub
lea
mov
aam
out
es
int3
adc
lcall
push
frndint
mov
scas
xchg
je
xor
mov
inc
lock
pop
sub
mov
mov
sbb
ret
and
sbbl
mov
sbb
dec
cmpsl
add
in
pop
shll
mov
ss
inc
dec
les
into
inc
or
adc
cmp
lods
imul
pushf
jp
xorl
cmp
stos
fisttpll
bswap
dec
pop
pop
ds
popl
push
out
mov
data16
dec
fwait
addr16
and
push
dec
pop
lcall
cmpsl
jno
or
enter
xchg
testl
adc
xor
ja
and
fldl
xor
cmp
iret
fldcw
adc
or
fwait
in
xchg
scas
orl
xor
mov
inc
inc
jmp
push
test
shrl
push
push
inc
and
inc
jecxz
pop
xchg
mov
subl
shlb
cwtl
mov
test
fs
or
iret
in
fidivs
and
sub
call
jl
repnz
sbb
jge
dec
jnp
aad
or
iret
or
jo
mov
call
popf
jmp
jae
mov
cvttps2pi
inc
int
imul
dec
int3
shll
sahf
dec
gs
imul
mov
dec
in
loopne
push
sahf
in
lods
mov
pop
xor
adc
mov
fcoml
cmp
or
ja
scas
or
in
aas
and
mov
cli
mov
fiaddl
pop
add
lret
arpl
adc
outsb
aad
repz
xor
fbld
call
mov
in
adc
lods
adc
adc
in
aaa
push
mov
ret
dec
ja
je
rcll
sbb
jmp
jmp
stc
mov
xchg
bound
ljmp
and
iret
or
mov
or
fiaddl
loope
sbb
cmpsb
enter
sbb
dec
xor
mov
out
mov
jle
out
mov
mov
push
fisubrs
inc
sbb
jns
in
xor
rorl
ret
mov
fs
xchg
rcl
cmp
idivb
and
jl
inc
sbb
mov
pop
adc
pop
divb
or
or
or
xor
adc
ss
ret
pushf
push
inc
imul
dec
inc
pop
or
jae
lods
iret
mov
mov
xor
push
roll
ja
int3
mov
xchg
jb
in
adc
xchg
lods
in
fmul
pop
out
in
popa
sbb
mov
mov
hlt
fisttps
cmp
in
xor
lea
and
mov
sub
ret
test
add
dec
xchg
sbb
loopne
push
pop
int3
pusha
jle
cli
adc
push
adc
loop
call
or
push
dec
mulb
mov
aam
dec
outsb
cli
or
mov
clc
scas
out
fisttpll
mov
int3
mov
popf
xchg
leave
sub
xor
les
movsb
pushf
adc
loop
dec
push
inc
fildl
leave
pusha
and
je
add
outsb
cld
xor
xchg
scas
cmp
dec
repnz
cmpsb
jge
outsb
jno
les
daa
popa
adc
add
mov
pushf
lock
dec
xor
sub
mov
sub
mov
pop
or
mov
into
lret
adc
cltd
xlat
cmpsl
xor
or
sbb
xor
fucomi
or
lds
inc
aad
and
cli
mov
cmp
or
test
divb
cmp
std
and
je
das
out
or
ss
mov
push
fisubs
fs
push
and
pop
and
adc
dec
push
dec
push
lock
dec
push
pop
pop
cli
push
shl
dec
movl
imul
jnp
adc
xor
sbb
out
pop
bound
pushf
push
push
dec
ret
or
pop
inc
add
mov
fdivr
mov
mov
push
jge
mov
insl
pop
push
xchg
add
pop
adc
pushf
repnz
fbld
cmp
jnp
loopne
mov
ret
leave
ficoms
pop
jb
pop
mov
and
add
insl
or
jnp
ljmp
pusha
jp
sub
mov
and
xlat
orl
inc
test
fisubs
scas
fadd
or
inc
jns
stc
push
lret
jae
sbb
test
mov
mov
or
mov
sti
mov
lods
leave
movb
jl
pop
dec
push
lcall
mov
sub
test
and
aad
icebp
sbb
inc
and
je
xchg
cmp
loope
adc
cmpsb
mov
jl
andl
sbb
lahf
mov
lcall
mov
imul
dec
rolb
dec
inc
cmpsl
jmp
popf
mov
icebp
in
lock
push
push
add
inc
pop
mov
xchg
add
xchg
pop
cmp
dec
pop
mov
popf
popf
fwait
leave
cmp
lods
data16
aam
scas
mov
std
jbe
outsb
mov
ret
rolb
daa
mov
xchg
sbb
mov
mov
shll
dec
mov
imul
mov
out
xor
and
aad
xor
stos
mov
jmp
incl
cmp
or
sub
jne
adc
pop
dec
push
xchg
sti
inc
or
repz
sbb
cmpsb
imul
xor
mov
dec
or
pop
adc
leave
loopne
shll
xor
inc
aaa
and
jl
dec
cmp
sbb
and
imull
rolb
push
popf
je
bound
adc
mov
sbb
ljmp
mov
fldl
jl
jae
aad
adc
cmpsb
mov
mov
add
or
and
into
sub
mov
adc
mov
dec
fwait
push
mov
in
push
or
dec
add
pusha
pop
test
cmp
jne
push
jno
rclb
lahf
fwait
jne
adc
pop
xorb
xor
inc
mov
loop
sbb
in
rcrl
loopne
leave
mov
jecxz
stc
leave
jno
andl
mov
mov
les
push
insb
mov
xchg
adc
mov
in
sbb
jb
mov
hlt
cmp
mov
stc
daa
mov
push
push
loopne
mov
loop
arpl
in
push
sbb
or
ss
shl
sbb
imul
into
sub
mov
xlat
mov
xchg
adc
mov
mov
xchg
icebp
xor
in
jo
pushf
mov
lahf
out
jecxz
mov
fs
add
lahf
lods
cmpsl
sbb
inc
pop
mov
pop
std
fcompl
sbb
or
add
push
cld
jmp
iret
lea
sub
jnp
cwtl
ror
sbb
daa
int
mov
pop
insb
mov
pop
pusha
repz
cs
lahf
cmp
jb
jmp
or
in
lahf
aas
mov
subl
popa
imul
loop
pop
ds
adc
iret
xor
push
mov
aam
xor
stos
popf
subl
cld
aam
mov
xor
movups
aad
dec
mov
jbe
in
lret
xchg
fsts
pop
addr16
scas
je
xchg
movsb
push
push
push
jge
lock
sub
and
out
mov
mov
mov
sbb
add
pop
fsubrs
dec
mov
sbb
pop
jns
inc
mov
pop
mov
int3
ret
in
stos
das
pop
int3
out
sbb
push
xor
nop
gs
inc
out
iret
xor
xchg
popa
iret
dec
shl
lods
mov
push
push
pop
movsb
popa
ficoml
sub
or
or
repz
adc
mov
and
subl
addr16
jno
inc
nop
mov
es
in
mov
addb
mov
inc
nop
jmp
push
add
pop
mov
dec
dec
je
dec
into
outsl
test
push
and
out
mov
pop
imul
or
inc
ds
mov
sbb
std
imul
or
and
and
pop
scas
adc
sahf
mov
jno
sbb
mov
testb
mov
xchg
add
out
add
ror
adc
mov
imul
dec
fmull
inc
or
or
mov
lahf
clc
mov
or
daa
add
pop
jge
lcall
pop
pop
jl
jb
add
out
mov
jecxz
outsl
test
mov
lahf
adc
lds
jbe
xchg
shrb
jnp
dec
inc
add
xchg
js
ja
jl
or
adc
imul
push
xchg
clc
repz
or
fdivrp
mov
sub
jg
inc
sarl
pop
xor
pop
gs
popa
repz
cmc
loopne
push
and
and
pop
xchg
or
ret
cmpl
scas
mov
mov
cltd
adc
xlat
jp
and
jg
stos
lea
mov
aaa
sbb
mov
xor
dec
pop
cmp
jecxz
repz
xor
and
mov
adc
dec
inc
dec
dec
ds
enter
es
jmp
mov
and
add
mov
add
or
sub
scas
dec
test
inc
leave
aas
imul
push
nop
and
in
mov
mov
pusha
mov
divl
ret
push
insb
cli
xchg
stc
or
enter
movsb
testb
add
roll
stos
mov
xchg
push
ja
xor
and
imul
sub
out
xchg
pop
mov
sbb
sahf
xor
mov
data16
xor
lcall
xor
insb
xor
push
rorb
push
aam
pop
mov
das
shrl
stos
xor
pop
xchg
fmul
mov
in
inc
fcompl
mov
scas
xchg
or
push
dec
mov
nop
sbb
pop
adc
sarl
rcrb
inc
stos
sub
subl
lret
xor
cmp
pop
lcall
adc
add
call
pop
es
stc
fisubrs
mov
loop
into
das
lcall
cmpsb
cs
xchg
call
sub
int3
cmpsl
mov
sbb
repz
ret
stc
addl
lahf
mov
mov
movsl
subl
js
leave
inc
mov
lahf
cmp
mov
stos
ljmp
push
or
arpl
inc
inc
cmc
sbb
push
out
and
sarl
xor
loop
or
mov
xor
rcrl
cld
dec
fsubrl
scas
dec
cmp
mov
jl
leave
xchg
int
movsl
cmp
rol
and
add
stos
jne
adc
xchg
push
or
int
out
out
mov
jmp
or
sub
dec
dec
movsl
and
stc
shl
idivb
in
ret
ret
sbbb
orb
mov
pop
push
popa
cwtl
dec
lods
repz
jge
insl
pop
pop
in
sbb
fidivl
jl
sti
icebp
adc
sbb
testl
cmp
inc
call
adcl
cld
je
push
cli
fbld
popf
repnz
mov
fimuls
mov
jnp
push
ret
mov
fnstcw
ja
cmpsb
pop
jle
incl
sub
jnp
jg
jnp
inc
inc
add
xchg
jge
xlat
inc
mov
add
xor
xor
xchg
push
dec
pop
fldl
fsubrl
mov
mov
and
cmp
ficompl
inc
jns
fcoms
pop
inc
lcall
pop
and
out
push
jp
inc
arpl
and
pushf
add
adc
in
jbe
jnp
dec
mov
enter
mov
in
shrl
mov
and
dec
jae
ficompl
jge
lock
leave
xor
out
and
ret
mov
cld
push
mov
jp
mov
cmp
adc
idivl
jmp
shrl
push
mov
cmp
mov
push
or
xor
xchg
pop
ja,pn
aad
int3
js
cltd
ja
sti
dec
cmp
jg
inc
lock
jmp
rcrb
adc
mov
clc
test
pop
movsb
pop
fsubl
repnz
inc
or
lock
dec
divl
int
pop
mov
call
xchg
mov
mov
pop
adc
and
jns
ds
push
ret
and
xchg
lds
sub
loop
lods
xchg
push
sahf
or
pusha
xchg
ja
jp
enter
rcll
pop
lods
mov
pop
fildll
mov
insl
cltd
ds
mov
call
sub
je
add
mov
xor
xor
out
mov
lahf
xchg
ss
clc
pusha
shlb
cs
push
push
cltd
or
xchg
push
push
mov
and
jb
jp
pusha
sub
pop
orl
cmpsl
scas
and
sar
daa
adc
sti
xor
fstl
outsb
out
test
aas
xorl
pop
jno
push
mov
dec
mov
out
xchg
push
mov
cmp
xlat
jmp
inc
cmc
jo
xchg
ja
dec
imul
jge
lret
flds
gs
dec
leave
xchg
cmp
imulb
movsb
shrb
pop
jb
leave
cmp
pop
je
test
xchg
dec
or
cli
xchg
xchg
sub
and
inc
inc
xchg
or
ret
xchg
into
mov
std
cmpsb
mov
rcl
movsl
ret
inc
push
in
mov
bound
xor
xor
xchg
scas
outsl
movsl
push
push
in
insl
data16
push
jns
xchg
movsb
fadd
imul
pop
or
shr
sub
popa
mov
into
or
push
mov
call
or
enter
push
mov
xchg
dec
mov
xchg
rcl
movsb
jge
pop
jno
enter
cwtl
jmp
jo
movsl
les
inc
mull
and
pop
cmpsb
mov
hlt
sbb
jmp
push
add
ficompl
inc
xor
lds
movsb
or
icebp
cltd
xchg
mov
pusha
jae
pop
jmp
shlb
add
dec
fsubs
inc
ljmp
popf
xor
mov
aaa
sbb
pop
mov
stc
sub
xor
hlt
xor
gs
push
enter
pusha
xchg
cmpsl
imul
jecxz
mov
jl
mov
xchg
sahf
shll
call
int
mov
jno
pop
inc
mov
xorb
mov
xchg
mov
push
lods
dec
add
mov
gs
ljmp
ds
fidivrs
add
shr
sahf
cmp
pop
adc
fists
push
inc
or
add
pushf
xlat
andb
aad
test
lods
lds
orb
cld
bound
inc
loope
lcall
mov
push
dec
out
jns
loopne
xchg
arpl
push
and
add
mov
jb
sub
data16
scas
inc
jmp
mov
dec
test
push
adc
mov
ficompl
sarb
lods
adc
cmp
das
or
popf
loop
mov
and
add
cmp
stc
push
out
push
repz
dec
cmpsb
fldenv
or
jbe
xor
in
pop
mov
lods
jmp
mov
les
out
push
add
pushw
xchg
pushf
jl
imul
sbb
cmc
push
add
push
mov
cmp
dec
adc
fidivrl
dec
mov
or
mov
adc
jge
in
mov
mulb
xchg
xchg
js
sbbl
jae
xchg
jb
push
push
sub
jns
inc
sub
xchg
mov
cmp
mov
sbb
sbb
outsl
jns
scas
je
into
int3
scas
fwait
roll
out
out
adc
push
imul
mov
daa
and
cmpsl
sub
xor
or
jbe
orb
rclb
mov
xchg
xchg
or
mov
sub
out
xor
std
movsb
pusha
bnd
xor
movsl
imul
inc
mov
into
mov
pop
jg
imul
retw
fmull
movsl
outsl
push
and
add
xchg
roll
stos
gs
repnz
jp
jne
pop
or
dec
test
out
insl
push
mov
adc
pop
pop
pusha
outsb
scas
test
roll
push
or
adc
ret
mov
adc
orl
sbb
leave
cmp
push
mov
leave
jmp
xchg
sbb
and
adc
dec
cld
sbb
add
fsubr
add
jg
out
mov
sbb
sub
aaa
cmc
dec
div
and
adc
aam
mov
add
shll
les
or
scas
jecxz
ja
cmp
outsl
mov
sti
cmc
ja
xchg
mov
and
add
clc
mov
insl
loopne
sub
std
inc
xlat
inc
mov
dec
ret
shlb
stos
sar
and
add
inc
adc
xor
stc
std
sbb
xlat
minpd
inc
dec
push
call
loope
push
xchg
xor
or
push
jnp
cmpsb
or
mov
push
lods
push
insl
std
and
ss
addl
repnz
sbb
sbb
cltd
cmpps
aad
rclb
arpl
es
dec
leave
daa
jo
pop
ret
sub
test
mov
cwtl
jmp
lods
mov
daa
pop
mov
mov
std
cmc
mov
pop
cmpl
sahf
icebp
dec
lods
dec
xchg
cli
dec
pop
mov
mov
mov
cmp
fiaddl
push
jp
jb
dec
loopne
ret
lds
jno
cmp
ficompl
out
dec
sub
cmp
sahf
push
fldenv
sbb
inc
mov
cli
aam
push
add
add
test
xchg
into
icebp
xchg
sub
jb
and
xchg
out
push
arpl
loop
jmp
inc
mov
filds
xchg
cld
iret
cmp
shlb
ljmp
or
sbb
popa
jp
adc
push
adc
mov
lods
lret
rorl
xlat
push
inc
ficomps
sti
sub
push
pop
inc
push
rcrb
sbb
push
shrb
lods
inc
xchg
mov
jae
xchg
mov
addr16
mov
test
pop
sub
push
pop
orl
stos
roll
out
iret
cwtl
sbb
xchg
xchg
inc
in
sub
sbb
mov
imul
mov
pop
xor
adc
loop
or
cmp
push
jl
das
jno
insb
fdivrs
or
mov
push
cli
iret
add
dec
push
sbb
inc
dec
adc
push
out
sub
xchg
pop
popf
fisubs
cmp
pop
and
dec
jle
pop
incl
loope
out
nop
cmp
and
int
leave
xchg
loopne
lods
icebp
mov
clc
in
push
mov
jae
sti
sbb
cmp
dec
icebp
xor
mov
push
lahf
add
mov
icebp
hlt
mov
pop
mov
insb
rorb
or
pop
add
pop
jne
testl
enter
jg
je
jp
test
jb
sub
jns
andl
and
dec
adc
xor
fsts
rcrb
sbb
test
pushf
add
ss
mov
fildll
popf
pop
aam
sbb
call
scas
into
jge
jmp
jge
cmp
push
adc
jle
mov
add
in
cwtl
fwait
sahf
cmpsl
cmp
inc
lods
pop
mov
test
ja
lret
mov
push
pushf
or
or
mov
out
popa
xor
xchg
outsb
and
mov
sbb
cmp
cs
push
les
push
push
jbe
mov
push
jecxz
addr16
mov
cmpsb
push
lea
add
adc
mov
mov
mov
pop
xchg
and
dec
je
push
mov
jl
subb
xchg
xor
dec
xchg
xor
scas
jo
lea
addb
out
insl
add
je
mov
pop
dec
cmp
jo
jbe
mov
push
fcompl
daa
or
add
in
lahf
jb
enter
dec
popf
popf
stos
loope
push
inc
stos
xor
adcb
insl
and
sub
fs
xor
outsb
mov
mov
cmp
mov
push
xor
scas
sti
mov
movsl
pop
or
adc
les
repnz
ljmp
lods
mov
mov
mov
sbb
push
orl
scas
loope
fsubp
inc
push
enter
mov
and
push
ljmp
int3
and
fs
imul
in
lcall
xchg
rorl
mov
into
inc
jbe
inc
xor
inc
sahf
repnz
outsb
cli
mov
lock
cmp
mov
xor
push
pop
dec
cmp
and
sbb
nop
inc
inc
mov
add
out
sub
inc
loop
movsl
sbb
ret
ljmp
fwait
mov
pop
xchg
or
inc
in
arpl
xor
sbb
leave
aad
data16
int
mov
fwait
inc
jecxz
sub
add
mov
cmp
sarb
into
and
xor
and
mov
fldl
in
add
in
jecxz
ljmp
pop
push
stos
mov
jl
pusha
xor
jge
scas
push
mov
bound
push
sbb
dec
dec
adc
sub
fucomip
in
arpl
sahf
xchg
aaa
ja
scas
pop
loopne
pop
out
push
fnstenv
sbb
adc
sbb
fs
ret
mov
jae
cmp
mov
adc
pop
out
sub
mov
xchg
push
pop
stos
imul
repz
mov
cmc
inc
inc
jb
jno
pusha
imul
int
mul
outsb
fsubl
shlb
test
pop
or
sahf
in
mov
mov
xor
int3
fmull
jmp
jmp
inc
jp
stc
pusha
ja
jmp
mov
xchg
sub
std
pop
inc
or
shll
xlat
into
cmp
pop
incb
mulb
push
xchg
add
insb
push
push
les
dec
sbb
or
ja
scas
xor
add
pop
in
sub
xchg
add
cmp
or
shlb
adc
es
add
shrl
call
mov
pusha
cmp
fcompl
push
bound
lods
sbb
stos
mov
std
call
dec
cbtw
add
adc
lods
mov
fimuls
mov
or
ret
test
push
bsf
arpl
in
sub
test
mov
es
arpl
or
popf
ljmp
lea
push
leave
lods
cmpsl
cmp
lahf
xchg
cmc
mov
cmc
mov
push
jbe
sbb
xchg
adc
inc
pop
cmpsl
mov
cltd
ja
jne
xchg
ss
test
sbb
test
mov
inc
mov
xchg
test
lds
test
sbb
mov
popa
ret
sahf
popf
xchg
pop
xchg
cmp
into
outsb
mov
push
cmp
es
addl
sbb
sub
push
inc
std
arpl
xchg
mov
inc
enter
loop
cltd
sub
xor
outsl
mov
in
fcmovnb
xchg
pop
test
outsl
sbb
mov
ret
inc
outsb
iret
pop
sub
xor
ja
leave
jne
lds
ds
cmp
inc
lods
cmp
jg
leave
inc
outsb
mov
and
jp
pop
std
aaa
adc
stc
mov
stc
ffreep
aas
les
jecxz
dec
iret
pop
mov
add
or
and
sub
sub
inc
adc
iret
xchg
lret
jle
test
sbb
inc
leave
mov
cmp
jg
stos
cmp
mov
cmp
aam
lcall
nop
adcl
push
std
pusha
xlat
ds
test
or
test
sahf
adc
sahf
aad
out
pop
lahf
push
and
sbb
xchg
fstps
inc
inc
ja
decl
jl
push
mov
in
lods
jecxz
mov
cmp
loope
and
xchg
add
push
das
and
aad
cmp
or
scas
out
mov
stos
cli
addr16
pushf
ljmp
mov
xchg
movsb
mov
aas
push
gs
pop
and
push
mov
mov
xchg
sub
sbb
fwait
pop
cmpsb
dec
inc
and
leave
test
std
push
sbb
stos
fldl2t
xor
in
sbb
dec
push
inc
add
push
mov
ss
mov
enter
fildl
lea
lahf
shll
mov
lahf
loope
dec
std
bound
xchg
push
lret
add
ficomps
push
jns
add
out
jecxz
ret
push
dec
les
add
jmp
mov
ss
int3
cmpsb
in
inc
les
mov
movsl
cmp
jp
fldt
sbb
ljmp
ret
js
dec
in
inc
lcall
cmp
mov
fcoms
push
cmp
xchg
pop
je
sbb
lret
cmp
push
cmpsb
repz
scas
sti
inc
mov
incl
stos
cmp
cld
dec
fmul
and
dec
pop
popf
mov
sarb
mov
mov
jmp
sbb
outsl
mov
xchg
lcall
daa
cvtpi2ps
pop
in
sub
in
adc
fldcw
and
movsl
add
mov
aaa
push
mov
cmpsl
fdivs
data16
push
lock
loope
or
mov
or
pop
add
jmp
add
inc
push
je
cmc
rcll
ljmp
push
jecxz
push
lret
stos
mov
les
outsb
inc
stc
fs
dec
lahf
xor
shll
and
fnsave
dec
test
out
int3
dec
arpl
fdecstp
or
divb
leave
inc
testb
sbb
and
adc
loope
lds
add
add
adc
out
loope
scas
mov
sub
aad
inc
pop
and
push
pop
fistl
testl
xchg
das
add
mov
stc
push
out
sahf
stc
mov
mov
movsl
sar
insl
leave
mov
out
sarb
push
sbb
add
jns
js
stos
scas
push
mov
xchg
mov
jo
js
loopne
dec
mov
jmp
cmpsl
xor
out
and
jge
push
cmp
dec
pop
mov
stc
test
iret
int
inc
xor
aaa
or
dec
push
xchg
es
xchg
mov
mov
cmc
jne
fcmove
sub
call
sbb
test
inc
repz
jbe
mov
pop
fnsave
sbb
and
add
subl
adc
mov
out
fucomip
popf
mov
and
cmc
aad
ud0
in
mov
add
and
dec
jns
jb
inc
mov
movsb
add
pop
sub
dec
aam
or
mov
inc
stos
or
pop
or
mov
and
and
sbb
mov
test
fstl
nop
sbb
xchg
pop
mov
xchg
and
dec
push
inc
jp
negl
insl
cmp
dec
xor
sub
lea
jecxz
std
adc
lods
std
test
nop
nop
roll
lcall
mov
sub
cmp
jbe
jns
lds
or
sub
sub
shlb
xchg
ficoml
mov
cmp
faddl
adcb
jnp
out
jmp
sti
dec
cmpsb
movsl
adc
inc
xchg
fcoms
mov
dec
lea
adc
pop
int
ret
mov
fistpll
jg
ficomps
dec
cltd
sbb
push
mov
repnz
and
mov
mov
mov
popa
sbb
fwait
mov
leave
jo
mov
repz
or
mov
movsb
inc
jl
adc
mov
sar
fstl
pop
aas
cli
shll
insl
adc
add
pop
popf
imul
aam
scas
xor
xlat
xor
testl
pusha
int3
pop
jecxz
das
mov
neg
lahf
fdivl
outsl
in
push
je
mov
jmp
std
ret
inc
sub
jbe
mov
jecxz
dec
or
test
dec
jae
jle
pushl
std
insl
ss
or
pop
add
xchg
mov
test
cmpsl
or
shlb
or
add
cmpsl
imul
shll
inc
and
mov
fmull
mov
mov
nop
mov
xlat
adcb
rol
jnp
loope
fcomi
adc
mov
lahf
inc
jmp
pop
stos
dec
mov
daa
adc
jle
test
jp
add
adc
pop
jbe
subb
popa
add
aad
out
push
imul
jbe
loope
cmpsb
push
jbe
rcrl
mov
sahf
mov
jnp
xor
lds
or
mov
popf
repz
pop
sbbl
cmp
ss
inc
push
incl
sub
inc
jle
fcomps
inc
or
jnp
lods
data16
movl
not
jge
xchg
cmp
loop
data16
jne
xchg
in
out
scas
adc
dec
add
inc
mov
lock
sbb
insl
cmp
arpl
imul
pop
pusha
movb
int
cli
shlb
xor
addb
cmp
jno
cmp
xchg
fsub
pop
mov
jne
xchg
ret
clc
outsl
push
decl
lods
pusha
test
es
dec
pop
jle
sarl
mov
xor
mov
push
xchg
mov
fsubrl
mov
popa
lret
jp
sti
push
bound
sbb
cli
sub
ljmp
orb
cwtl
xor
test
and
xchg
je
adc
hlt
xchg
and
push
and
call
lods
cwtl
or
testl
loopne
je
repz
inc
jb
aas
push
popa
cmp
out
ja
enter
fistl
outsl
int3
add
inc
popf
roll
jp
push
sub
daa
push
push
icebp
in
push
leave
jl
sub
arpl
out
adc
mov
lds
xchg
leave
jns
rcll
stos
sub
repz
std
jo
push
mov
mov
pop
pop
mov
pop
into
sub
mov
xchg
lods
loopne
mov
in
adc
sub
mov
imul
inc
mov
sarb
sbb
insb
cmp
fdiv
mov
pop
fs
xor
negb
push
stc
hlt
inc
pusha
or
pop
repnz
sbb
lds
dec
fdivs
leave
enter
fs
ss
mov
in
pushf
add
and
addr16
cmp
lds
test
fcmovb
hlt
fucomip
imul
push
sub
scas
jo
sarl
fwait
pcmpeqd
jno
cltd
inc
lds
xor
adc
int
movsb
repz
push
leave
loop
push
test
jmp
sub
out
repnz
jnp
in
fstpl
movsb
pop
jg
arpl
mov
cmp
xchg
jbe
xlat
sub
inc
sub
arpl
or
aam
adc
dec
aas
movsb
mov
nop
xor
xor
mov
mov
es
mov
mov
rcr
cld
xchg
fs
xchg
call
lret
xchg
adc
fsub
fdivrs
adc
lock
testl
mov
daa
adc
fabs
add
int3
sub
int3
loop
jl
lds
inc
subl
jl
jmp
lock
inc
jae
xorb
jp
pop
imul
inc
int
ret
dec
inc
popa
int3
fisubl
jns
xor
sti
xor
add
inc
jae
loop
les
sbb
aas
mov
mov
mov
sahf
andl
rorl
nop
popf
decb
pop
lds
fldcw
daa
xchg
lds
iret
fiadds
lea
sbb
scas
add
jo
sbb
out
xor
imul
pop
ljmp
jb
outsl
dec
push
sub
std
xor
jno
pop
ljmp
daa
mov
hlt
rcrb
cmpl
jne
int
push
fbld
adc
loope
nop
and
jl
sti
mov
and
lock
rolb
push
adc
pop
mov
rolb
and
xor
sub
and
pop
rolb
mov
or
jo
dec
popf
pop
jp
cmp
add
ljmp
adc
push
lock
in
ret
pop
and
mov
test
mov
adcb
insl
mov
std
xchg
outsb
imul
aad
fdivl
sti
jo
sub
sbb
outsl
ljmp
ss
cmp
dec
jg
rorb
sahf
lret
iret
call
and
jne
inc
mov
dec
mov
xchg
push
lret
dec
add
mov
jle
pop
xor
loope
mov
ds
clc
and
dec
add
dec
inc
nop
fs
sbb
dec
sbb
mov
hlt
lock
cmp
sub
xchg
iret
mov
jg
xchg
jno
pop
or
mov
roll
fsubrl
sbb
out
jg
xor
outsb
mov
and
mov
sti
mov
sarb
aas
outsl
repz
fdiv
outsb
loopne
lret
aad
xchg
stos
lahf
ret
add
xchg
shrb
mov
lods
mov
je
jmp
stos
test
sbb
js
hlt
push
xchg
aaa
and
mov
test
push
mov
dec
sbb
stos
push
mov
or
les
inc
insb
jns
fsubrp
test
ljmp
jns
mov
lods
pushf
ss
or
adc
subb
ja
sub
cmpl
or
lea
push
mov
leave
and
or
out
pop
jp
repz
add
popf
call
inc
cmpsl
mov
iret
jne
fbstp
xchg
lea
adc
dec
ret
movsb
imul
arpl
sbb
dec
dec
cmp
sbb
push
add
jno
hlt
jle
sub
cwtl
mov
sti
iret
adc
lods
cli
sub
mov
push
or
pop
jnp
push
ljmp
loopne
inc
lods
inc
outsl
inc
out
pusha
pop
pop
mov
push
mov
jl
enter
jae
jmp
xchg
lds
js
or
insb
std
mov
add
jno
in
decl
jae
pop
jle
not
inc
mov
ret
data16
das
popf
lods
movsb
jae
mov
mov
inc
data16
leave
push
push
pop
stos
aaa
rol
in
push
jnp
sbb
xchg
es
jae
arpl
or
mov
push
push
cltd
ret
test
push
ds
in
mov
es
cmp
jp
dec
ret
loope
test
fwait
cltd
pop
sub
push
pop
xchg
push
nop
push
bound
mov
pop
inc
mov
cmp
imul
inc
andl
call
sbb
sbb
mov
adc
arpl
jae
mov
mov
faddl
popa
inc
enter
jnp
ds
inc
lret
dec
stos
stc
pop
scas
pop
inc
push
inc
add
push
lds
jmp
shrl
add
popa
push
mov
ret
adc
pop
xlat
inc
fs
repz
ja
std
pop
mov
fildll
pop
jne
jmp
stos
bound
fadd
mov
outsb
or
sbb
push
test
adc
push
jns
push
es
in
pop
mov
in
aaa
dec
push
aaa
jle
mov
lret
stc
lret
pop
inc
xor
int3
mov
inc
in
cmp
andb
pop
push
mov
xor
mov
fdivr
bound
cmp
sub
ret
mov
sub
js
rcrb
inc
sti
push
xchg
add
push
inc
mov
clc
arpl
pop
cmp
pop
mov
minps
test
arpl
arpl
mov
fucomip
cs
adc
imul
mov
push
pusha
push
push
cmp
dec
test
push
sbb
rclb
mov
cmp
shll
les
jnp
jno
mov
mov
mov
mov
pop
lret
shl
aam
push
push
push
dec
movl
rcl
cmp
sti
push
sbb
jg
cltd
dec
es
adcb
popf
cmp
lahf
shll
fsts
cmpsl
or
pop
adc
mov
out
out
and
insl
faddl
inc
les
or
cmp
sahf
rclb
and
popfw
adc
lret
imul
cmp
xor
add
into
or
int
mov
mov
xchg
andb
adc
fs
xor
aad
cld
xor
outsb
dec
sub
mov
fstps
or
sbb
leave
mov
inc
es
ss
in
sbb
fimuls
hlt
idivl
insl
movsb
sahf
dec
popf
flds
pop
add
add
mov
les
add
pop
pop
jp
cmpsl
dec
idivb
pop
and
test
flds
pop
mov
push
xor
in
inc
mov
lret
sub
mov
pop
fidivrl
jns
pop
push
mov
inc
or
inc
xchg
test
out
cs
flds
inc
cmpl
mov
and
mov
sbb
jno
xorb
xchg
mov
cmpsl
dec
repnz
xor
dec
fwait
mov
inc
imull
jo
into
sub
cmp
pop
xchg
fstl
insl
stc
aad
out
ret
ds
insb
jge
push
cmp
xchg
fcoms
adc
mov
jg
and
ds
cs
icebp
movhps
push
xchg
sahf
sbbl
mov
xchg
jmp
aam
cmp
jns
xlat
scas
sbb
cmp
ret
je
testb
outsb
xchg
loope
push
jmp
aam
clc
mov
cs
es
stos
lods
mov
push
aaa
mov
pop
mov
inc
out
push
cs
mov
add
ja
pop
mov
adc
les
sbb
jbe
xchg
mov
ja
mov
lods
inc
mov
faddl
inc
push
stos
sbb
sub
scas
pushf
mov
sbb
sub
sarb
icebp
cmc
insl
in
pop
sbb
in
hlt
jle
sahf
fmuls
ret
push
icebp
fisubrl
ffree
dec
dec
add
add
mov
repz
pop
pushf
fstl
andb
push
es
addl
jp
jmp
jnp
add
sahf
mov
push
icebp
pop
ficoms
xchg
shlb
cmp
stos
mov
flds
mov
fs
mov
inc
stos
sub
in
dec
inc
xor
dec
ds
mov
sahf
dec
loope
pushl
fwait
jge
add
movsl
dec
inc
out
gs
inc
ljmp
lret
in
mov
iret
ljmp
mov
push
inc
and
aas
pop
and
mov
pop
shll
ss
inc
sarb
adc
aaa
push
xor
xor
mov
ror
xlat
push
xor
movsb
push
sub
movsl
pop
or
adc
mov
or
xchg
insl
lret
add
sub
push
nop
cwtl
cmp
or
and
xchg
cld
inc
jbe
int
mov
les
fs
mov
jno
push
mov
mov
fstpt
aad
push
and
lods
pop
mov
fisttps
orb
mov
cs
jle
sub
icebp
xchg
addr16
popa
push
into
and
and
inc
lahf
mov
fildl
and
fs
fstpt
movsb
mov
sahf
add
cmp
test
pop
lcall
jle
mov
xchg
fdivr
xchg
mov
xchg
pop
shrb
and
mov
dec
or
pop
ljmp
rclb
rcr
lret
pop
cmp
gs
adc
jp
movsl
push
es
ds
jo
adc
push
insb
or
stos
into
clc
repz
gs
mov
lds
test
xor
cmp
sbb
leave
lahf
push
sbbl
je
lret
lret
mov
aad
fistpll
xchg
in
andl
or
clc
aad
cmp
fwait
jne
mov
sub
pop
mov
cmp
mov
mov
sub
dec
sub
mov
loope
fiadds
rcr
std
call
push
jg,pt
mov
add
sbb
xchg
gs
jg
sub
jg
lods
lahf
sti
and
jo
xor
mov
mov
push
mov
mov
fimuls
mov
testb
shrl
lock
pop
sbb
mov
xor
loope
sbb
ja
xchg
lret
xchg
rcrl
sahf
jns
push
jmp
push
sbb
fmul
xchg
loopne
popf
mov
aad
mov
imul
pause
aas
mov
sub
mov
pusha
mov
inc
pop
pusha
aam
sbb
inc
and
lea
dec
mov
movsl
dec
mov
out
push
pop
sbb
mov
fwait
lret
pop
cli
mov
mov
test
das
push
jnp
int3
mov
ljmp
lret
pop
xor
fsub
inc
or
mov
xor
sbbb
xor
insl
mov
jb
cmp
mov
loop
loopne
jmp
ljmp
out
int
pop
add
mov
dec
scas
iret
sahf
fcompl
out
mov
fidivrl
xchg
mov
push
xlat
mov
inc
lock
idivb
push
cmp
lods
xchg
in
jmp
dec
push
mov
sbb
sbb
add
bound
xchg
or
adc
insl
mov
mov
insb
pop
jae
push
movsb
sbb
outsb
sbb
or
mov
mov
mov
or
pushf
addr16
into
icebp
out
dec
adcl
dec
imul
fisubl
cs
sub
sub
shl
xchg
pushf
mov
mov
fimull
mov
dec
adc
pop
sbb
addb
adc
popf
sbb
out
aas
inc
pop
push
daa
repnz
sbb
mov
imul
aaa
pop
fidivl
jae
inc
lock
xorl
pop
mov
in
jnp
cmpsb
adc
clc
jge
mov
leave
popa
adc
inc
negl
mov
sub
sbb
lods
mov
out
sub
jnp
daa
push
push
sub
pusha
test
cmp
mov
mov
das
in
sbb
pop
xor
lcall
mov
jae
loopne
insl
sbb
test
adc
in
and
mov
push
outsl
or
je
pop
popa
data16
stos
lahf
insl
adc
insl
cmp
jg
xchg
xchg
jp
and
bound
dec
scas
xor
xor
in
push
mov
cmp
and
or
clc
sbbl
sti
cmp
push
loopne
xchg
into
mov
or
hlt
or
insb
in
into
inc
jle
out
push
popf
aaa
pop
fldl2t
jmp
lock
rorl
jne
push
push
iret
popa
lods
jmp
lea
cmpsl
in
popf
xlat
sarb
and
add
jle
or
leave
cmovnp
call
add
cmp
push
aad
push
aad
and
sbb
inc
and
mov
adc
mov
mov
inc
jle
enter
outsb
out
fnsave
ljmp
push
pop
aad
dec
jae
cmpsb
loope
subl
dec
rol
cmp
pop
jmp
mov
mov
mov
mov
ret
bound
or
jbe
sbb
sbb
aam
inc
aad
jne
mov
lcall
ret
mov
lea
es
mov
cmp
imul
lret
dec
scas
pop
movsl
fdivrl
mov
mov
pop
push
out
inc
push
sbb
insb
std
inc
jbe
cmp
xor
stc
jg
fwait
jge
xchg
inc
pop
ret
xchg
dec
mov
sbb
adc
mov
xor
enter
mov
sahf
lahf
outsb
repnz
jge
aaa
in
shl
adc
std
cmp
sbb
cmpsl
pushl
lahf
cmp
inc
adc
dec
inc
ffreep
add
movsb
shrl
push
add
push
xchg
adc
outsb
lock
imul
loopne
mov
mov
lret
mov
cmp
adc
cmp
mov
cld
dec
mov
pushf
fs
jae
jle
dec
push
add
cltd
sbb
imulb
cld
push
scas
outsb
push
jp
sbb
inc
mov
movsl
pop
mov
jnp
sub
pop
jb
adc
adc
int3
push
push
dec
pop
aas
jbe
mov
pop
lods
add
lahf
cmpsl
lret
sbb
dec
rclb
test
cwtl
andl
je
inc
dec
sbb
in
pusha
xor
mov
fstps
push
fcomps
ret
or
aam
out
mov
popf
aad
imul
or
ret
pop
push
insb
scas
aam
enter
mov
inc
pusha
in
cwtl
or
xor
xchg
inc
push
mov
cmp
cmpb
stos
push
inc
jnp
mov
mov
inc
dec
adcl
scas
outsb
mov
jbe
int
insb
mov
test
arpl
divb
mov
mov
fcomps
cmp
std
jne
ret
dec
vmread
xchg
xlat
add
jmp
xchg
xlat
jb
jnp
or
mov
pop
push
sub
push
negl
xchg
mov
bound
push
movsl
lea
add
lock
incl
xchg
mov
lahf
fucomp
into
cmp
mov
xchg
adcb
addb
pop
cs
xor
lcall
lods
xchg
push
lds
xor
jno
pop
stos
push
ljmp
add
sbb
lret
neg
cmpsb
stos
jns
call
cmpsl
les
adc
add
jge
repz
push
inc
push
mov
jl
or
leave
mov
ds
or
jno
add
cwtl
lea
mov
lcall
cmp
mov
cli
lods
pop
fs
mov
int3
add
sub
xchg
imul
dec
negb
rcrl
mov
push
ja
jp
push
mov
repz
iret
je
sub
adc
or
xchg
inc
xchg
mov
pop
xor
mov
mov
push
sti
add
lret
xchg
popf
pop
adc
popf
test
test
cmp
push
lock
scas
mov
inc
fsub
jne
mov
divb
sbb
fisubrs
lods
mov
push
pop
addr16
sub
and
push
jmp
popa
scas
add
ss
js
jns
mov
fs
push
mov
in
xchg
adc
fimuls
movsl
mov
xchg
js
imul
js
or
rcrl
lahf
and
xor
in
cli
imul
aam
ds
or
lahf
loope
jmp
iret
mov
and
fcompl
and
inc
dec
mov
xor
pop
es
in
sbb
outsl
inc
adc
data16
cmp
mov
pop
in
jle
out
idiv
pop
pushf
xchg
pop
call
cmp
repnz
push
mov
test
dec
icebp
mov
cmc
or
cmp
inc
mov
cmpsb
mov
add
sub
js
cmpsl
sub
mov
push
bound
sbb
jns
rorb
add
mov
sbb
mov
sbb
icebp
loope
insb
cmp
push
jecxz
mov
mov
dec
repnz
push
mov
pop
shlb
or
xchg
inc
push
or
rorl
mov
inc
sbb
dec
xlat
jmp
sub
scas
mov
mov
mov
and
stc
mov
push
adc
dec
mov
lock
sbb
cltd
clc
rorb
into
pop
ja
xchg
out
mov
icebp
sbb
test
and
imull
fdivl
and
xor
movl
bound
sti
xor
movsb
mov
xchg
lods
jmp
mov
test
repnz
sub
imul
push
xchg
stos
ja
cmp
mov
jne
xchg
fdivrl
mov
int
push
pushf
stos
add
xchg
repnz
mov
xchg
push
out
fistl
je
pop
nop
pushl
mov
fs
call
pop
loope
jae
mov
lss
push
fwait
sub
mov
test
data16
ljmp
or
cwtl
loop
jbe
cmp
xor
sysenter
xchg
ja
adcb
mov
dec
cmc
sub
add
nop
push
xlat
inc
loop
sub
mov
loope
in
insl
imul
loop
jbe
mov
stc
fdivrs
inc
mov
mov
sbb
std
cmpsl
pushf
ja
sbb
out
icebp
xor
mov
mov
or
fnstcw
shl
pusha
test
out
adc
popa
bound
sub
fists
repz
stc
pop
insb
push
push
sbb
mov
test
scas
mov
pusha
push
ds
clc
bound
push
cltd
cwtl
xor
inc
int3
outsl
mov
and
adc
sbb
xlat
mov
fdivp
adc
imull
fwait
pop
mov
pop
call
dec
jo
popf
movsb
out
outsl
fdivrs
in
push
bound
push
ss
cmp
mov
adcb
dec
dec
cmpsb
ret
push
leave
daa
insb
xchg
test
ss
in
iret
sarb
dec
cmpsl
test
out
sbb
push
push
xchg
pushf
sbb
mov
mov
ljmp
hlt
lcall
push
mov
out
shlb
pop
xchg
aad
cmp
in
das
loop
dec
jecxz
dec
adc
mov
or
movsl
xor
fwait
mov
mov
les
loop
jp
inc
loopne
or
out
sub
jg
pop
pop
jae
mov
shlb
lahf
sub
into
sbb
adc
add
push
and
add
scas
lcall
jno
cmp
cmp
in
loop
pop
add
and
adc
add
ret
pop
or
fwait
xor
jbe
icebp
out
push
outsl
fisubs
xlat
dec
mov
subl
ja
mov
data16
mov
mov
gs
ja
insl
mov
shl
rorb
mov
aad
bnd
in
insl
jmp
dec
lock
aam
ret
cmp
leave
add
cli
mov
ret
fwait
xchg
pop
pop
mov
popf
in
push
data16
mov
inc
int3
cmpsb
cmpsb
dec
imul
push
aaa
jne
sbb
sbb
mov
int
ljmp
sbb
mov
leave
mov
jo
lcall
pop
fists
lahf
add
cmpsl
or
jp
dec
sarb
lcall
fs
pop
ss
mov
add
leave
inc
sbb
ljmp
lea
jo
arpl
inc
loope
les
repz
sub
or
faddl
jo
mov
sarl
js
dec
mov
adc
or
push
and
pusha
dec
enter
push
int
aad
cltd
movsb
mov
fsubrs
and
pop
xor
or
inc
pop
leave
mov
xchg
dec
mov
or
in
xorl
cltd
in
mov
pop
sbb
and
leave
mov
and
add
jp
jns
jg
outsb
shrl
and
scas
and
shl
ret
xchg
sbb
dec
leave
iret
jp
mov
and
and
xchg
arpl
sbb
push
cmp
push
and
add
imul
mov
lods
adc
in
sub
push
inc
push
imul
cmp
push
aaa
pop
out
inc
in
pusha
inc
sbb
pop
cs
inc
negb
lahf
jmp
mov
hlt
xor
iret
imul
and
addl
and
movsl
add
sub
mov
popa
rcl
or
add
das
xchg
test
cmp
cmp
lret
leave
mov
les
out
hlt
ss
push
pop
int3
pop
sbb
mov
lret
nop
dec
mov
ret
cs
and
hlt
adc
pop
nop
pop
das
inc
insl
add
pop
jl
inc
loop
and
pop
and
subl
ljmp
mov
das
sbb
mov
cld
mov
aas
mov
dec
cmpl
sbb
movups
mov
subl
push
xchg
shll
cmp
adc
call
sbb
and
push
or
icebp
xor
call
adc
dec
bound
or
jle
dec
ja
daa
mov
stos
add
icebp
dec
sub
push
in
mov
push
subl
mov
xor
and
in
stc
push
sbb
xchg
cmpsl
movsl
fdivrs
fmul
insb
rorb
lock
dec
mov
cld
movsl
dec
movsl
inc
add
aas
nop
jp
ss
and
add
mov
aam
push
pavgw
xor
dec
sti
xor
mov
int3
repz
popa
pushf
or
inc
mov
xchg
and
and
sub
lods
imul
mov
mov
out
jmp
dec
push
and
mov
sbb
int3
mov
daa
fdivrl
and
shl
push
sbb
enter
pop
add
push
loopne
adc
out
insl
adc
jmp
flds
mov
cmpsb
jmp
dec
push
sbb
lods
jl
inc
jmp
fcoml
inc
push
cmp
jg
xor
sub
mov
test
pop
add
loope
mov
or
inc
mov
out
stos
mov
ret
sub
jge
mov
and
int
mov
fs
mov
jg
mov
enter
jo
inc
lret
xor
jge
push
cmc
sub
adc
mov
gs
and
arpl
cmp
in
sahf
or
adc
pop
stos
dec
mov
mov
mov
sarb
arpl
push
mov
shll
mov
mov
lcall
xchg
mov
jge
nop
jno
in
shlb
jae
mov
shll
nop
mov
insb
push
xor
mov
adc
addr16
fmul
xchg
ret
adc
rorl
mov
adc
cmp
jne
mov
loope
add
jge
fwait
or
sbb
add
in
and
into
insl
add
jecxz
push
movsl
mov
cmp
fwait
std
push
cli
sub
lock
jmp
cmpsb
or
sahf
fwait
or
add
or
jne
jns
mov
dec
decl
mov
push
push
lret
in
xchg
fstpt
add
fdivrs
add
scas
xchg
push
mov
lods
cmp
pop
dec
and
cmp
mov
mov
aad
sbb
or
sub
fsubs
mov
loope
dec
mov
testb
jmp
ss
jecxz
cld
das
loope
add
pushw
in
iret
cld
repnz
jecxz
seto
mov
inc
sub
xor
mov
adc
push
cld
cmp
mov
pop
sbb
mov
js
mov
sti
lds
jbe
ret
decl
mov
push
add
and
out
insl
dec
mov
ljmp
gs
xor
call
mov
sub
jns
inc
cli
adc
push
shl
xchg
jl
mov
fsubl
mov
xchg
insl
and
insb
mov
lods
subl
jp
out
push
xchg
cli
mov
ret
mov
inc
jle
lcall
mov
sub
jecxz
fstl
mov
push
and
dec
in
scas
add
and
cld
mov
nop
in
in
sub
add
pushf
pusha
xchg
pop
sub
fs
ret
rclb
scas
jl
add
mov
xor
aam
fmull
cmpl
fs
out
jbe
pop
shufps
movsl
sub
pop
xchg
pop
stos
cwtl
push
nop
clc
inc
lods
shr
and
push
leave
pop
and
loopne
add
fnsave
mov
dec
fnstsw
outsl
pop
dec
mov
xchg
negb
cmp
subb
lds
pop
cmp
sub
call
mov
arpl
dec
aaa
mov
gs
sub
out
icebp
mov
jmp
les
adc
mov
sbb
fdiv
pop
xchg
pop
pop
shrl
push
adc
mov
xchg
push
and
push
inc
mov
and
sahf
xlat
add
stos
push
xor
scas
in
fdivs
fs
inc
xor
adc
jle
ds
jg
outsl
loopne
xchg
iret
add
loop
add
shrl
xchg
pop
push
xchg
sbb
xor
stos
inc
add
mov
jg
push
jne
adc
mov
mov
stc
pop
enter
pop
push
popa
mov
cmp
and
jecxz
inc
imul
inc
mov
in
arpl
imul
and
cld
test
es
push
cltd
mov
loopne
pop
xor
fldt
and
cmpsb
ret
stc
lds
sub
adc
ficompl
cmp
dec
fs
sub
dec
andl
mov
stc
xchg
xor
push
daa
call
aam
mov
xchg
cs
lret
inc
nop
mov
enter
lods
add
xchg
inc
nop
jmp
and
daa
stos
stc
pop
shrb
sbb
in
arpl
and
jb
mov
fs
iret
sub
or
adc
iret
jno
cmp
cmp
cld
inc
fsub
je
mov
into
dec
xchg
sub
pop
ja
mov
adc
insb
fsubs
cli
hlt
pop
mov
inc
xor
sbb
lock
push
pop
xor
pop
insl
jg
inc
inc
xorl
fdivr
adc
in
fcompl
dec
cmc
mov
pop
jg
push
lahf
imul
loope
es
lods
mov
aam
adc
dec
lcall
test
in
jmp
fadds
push
aas
scas
sub
inc
rcrl
stc
in
aad
mov
pop
popa
in
insb
fsubrl
dec
int
out
lcall
mov
sub
inc
mov
ror
iret
inc
dec
adc
adc
inc
mov
cli
adc
fiaddl
lea
or
mov
jp
fs
mov
dec
movsb
inc
jae
jl
mov
lahf
std
add
mov
pop
sbb
mov
push
aaa
in
pop
les
lret
lock
das
scas
shlb
jp
insb
jmp
xor
lahf
in
xor
ds
adc
fsub
lds
inc
in
scas
cmp
xor
fisubs
subl
icebp
fcoms
cmp
sub
xorl
jb
add
jl
and
jb
or
xor
sbbl
cs
xchg
out
or
lea
push
sahf
jne
sbbb
popa
jb
jb
pushf
mov
adc
pop
fwait
outsb
push
sub
pusha
jb
je
pop
es
xor
inc
imul
add
mov
repnz
int
cwtl
xorb
xor
fcomps
xor
jp
inc
orl
repnz
xchg
pusha
pop
pop
lock
and
dec
leave
inc
dec
cmc
add
push
sub
mov
aaa
mov
lahf
xor
mov
into
jns
xchg
fldcw
push
xor
sbb
out
addr16
mov
lock
scas
fs
or
adc
cmp
adcb
jne
add
inc
aas
fistpl
xchg
repz
adc
test
xchg
xlat
mov
rcrl
idivb
push
sti
sti
pop
stos
lock
adc
sub
pop
imul
adcb
or
ja
test
pop
jbe
mov
nop
dec
popf
cmpsl
dec
mov
in
mov
dec
jge
out
in
inc
adc
cmpsb
les
jbe
cmp
pop
push
dec
mov
sahf
fadd
jmp
xchg
sub
jns
or
add
or
aaa
xlat
rorb
aam
add
push
and
pop
jne
ret
xor
sub
setno
dec
lahf
cmp
ds
mov
jns
push
xor
sub
jmp
mov
arpl
call
pop
pop
xchg
fstl
mov
pop
cmpsl
xchg
push
mov
push
cli
popf
js
shr
lret
cld
and
aas
je
imul
mov
loope
jb
mov
xchg
add
leave
loope
addr16
add
mov
outsl
dec
int3
ret
and
jg
adc
out
imul
add
ret
sbb
enter
fiaddl
fiaddl
and
cld
jl
sub
push
fmull
in
out
test
xor
or
xchg
popa
das
push
pop
out
fiaddl
not
sub
inc
xor
imul
mov
out
inc
adc
ja
sbb
adc
hlt
sub
dec
mov
xchg
and
cmp
lahf
lods
inc
jno
leave
push
adcb
dec
ds
movsl
daa
aad
jne
cld
outsb
test
fnsave
jns
pop
jo
mov
push
sub
adc
push
mov
pop
lods
cli
fiadds
cmpsb
fimuls
jp
jmp
negl
aad
pop
rorl
aas
aam
in
lret
arpl
jno
sbb
sbb
inc
daa
nop
xchg
mov
fistps
xchg
jae
or
pop
shl
jmp
lds
lock
pop
inc
hlt
push
push
lock
and
lods
inc
call
jmp
mov
popf
push
cmp
push
and
fcoms
mov
lds
push
add
fistps
xor
lods
jp
mov
jl
fildll
lret
ret
inc
sbb
xchg
sbb
sbb
mov
mov
rcrl
mov
test
in
cmpsl
shlb
jl
in
push
inc
daa
test
clc
leave
jecxz
out
ret
mov
push
pop
or
std
fstpl
fistpll
mov
out
push
test
adcl
loop
fdivrl
in
divb
mov
xor
push
mul
stc
mov
mov
adc
adc
jl
in
sbb
pop
cltd
lock
movsl
adc
mov
into
xchg
std
inc
idiv
stos
shlb
pop
lret
loopne
push
fwait
xchg
inc
movl
and
push
out
dec
jns
paddq
mov
xorl
sub
addr16
test
cmpsl
pop
jp
nop
test
pop
and
ss
push
mov
push
inc
fcompl
icebp
orb
mov
mov
repz
jae
iret
mov
mov
repz
frstor
es
mov
cltd
pop
inc
mov
into
js
mov
jp
dec
jp
sub
addr16
nop
fcomps
pop
enter
xchg
ret
mov
stos
stc
in
out
mov
fisttpll
push
xchg
dec
inc
adc
xchg
mov
adc
inc
rolb
dec
out
add
adc
fisubl
sbb
adc
sub
mov
aas
mov
fs
test
lea
pusha
sub
int3
sahf
inc
add
jbe
daa
xchg
cmp
dec
dec
movsl
add
xchg
cmp
jecxz
cmp
or
outsb
sbb
dec
ficomps
add
sub
sbbl
stos
push
pop
adc
rolb
mov
xchg
bound
into
scas
mov
cwtl
xchg
ficoml
shl
mov
xchg
xchg
iret
mov
mov
ja
test
arpl
sbb
mov
lds
xor
mov
push
out
nop
inc
lahf
and
fldl
or
jle
shrl
sub
cmp
mov
mov
pushw
repnz
ja
pop
pop
cmpsb
mov
popa
push
js
xor
fs
mov
mov
mov
iret
inc
xor
add
es
sti
push
std
push
adcb
divb
movsb
aaa
jle
enter
leave
mov
nop
mov
mov
or
ret
mov
inc
cmpl
sub
lret
lahf
cmp
sbb
out
cld
push
xchg
xor
or
cwtl
fisubl
mov
adc
mov
cmp
or
mov
pop
sbbl
mov
iret
cmpsb
fimuls
jb
xchg
xor
pushf
xor
sub
subl
sbb
xchg
push
aam
outsb
ret
int
ret
xor
neg
jmp
mov
cmpsb
sbbl
jge
lahf
lret
mov
sbb
cmp
push
das
mov
xchg
addb
arpl
and
cmp
xor
mov
add
push
jo
nop
aad
pop
int
mov
loope
jp
jecxz
cld
loop
sbb
and
xchg
pop
cmp
adc
mov
add
imul
mov
notb
sarb
int3
add
fiaddl
clc
xchg
scas
cmpsl
packsswb
dec
push
push
mov
push
jp
lahf
ret
js
add
cli
pop
lret
fstp
xor
sahf
js
mov
adc
xchg
pop
out
fdivrl
add
push
scas
mov
aas
loop
push
pop
pop
ja
add
xchg
fisubrl
icebp
xchg
lea
arpl
les
jbe
push
pushf
mov
dec
add
sbb
and
inc
int
adc
idivl
loope
std
mov
add
repnz
lods
mov
scas
jae
cmpsl
loop
inc
jbe
pop
dec
or
mov
mov
ds
push
push
add
pop
pop
lock
jae
or
clc
scas
rcll
lds
data16
int3
cmp
push
shll
add
pop
mov
pop
call
and
hlt
lods
jnp
jmp
pop
test
push
cmp
ret
dec
rorb
in
pushf
adcb
sti
movsl
sub
mov
sub
mov
push
outsb
xchg
sbb
pop
inc
mov
mov
and
jge
cld
xchg
jmp
mov
jecxz
cmp
ljmp
sub
rcrl
fildl
out
mov
mov
lds
sbb
hlt
mov
or
repnz
loop
adc
pop
xchg
fadds
adc
pushf
mov
loope
lods
mov
sub
fstpl
outsl
les
or
jle
lret
outsb
xor
and
jno
or
adc
lret
push
lods
pop
call
stc
lahf
jns
cs
and
mov
mov
fcoml
or
repz
gs
gs
iret
lods
xor
lahf
mov
out
mov
jecxz
push
mov
test
adc
and
addb
fildll
push
and
jmp
mov
cmp
cwtl
ficoms
cmpsb
mov
add
lds
rorb
jg
cli
int
ds
stc
enter
addr16
lock
iret
cltd
test
sub
out
xor
sbbb
add
bnd
divl
jmp
jae
test
dec
push
jmp
dec
or
loopne
sbb
cmp
lcall
jne
jb
dec
push
lcall
jns
adc
inc
pop
cltd
gs
pop
xchg
into
adc
jcxz
sti
cld
out
fs
imul
ss
je
fisttps
dec
mov
cli
out
sub
push
add
jbe
sbb
pop
cmpsb
cs
shlb
cltd
sbb
jg
sub
sub
push
stos
nop
or
mov
and
cwtl
xlat
fwait
mov
cmc
mov
fadds
cmp
push
jb
sbb
lcall
jno
test
or
push
or
xor
fs
out
call
jb
aaa
lret
mov
push
outsb
iret
in
sarb
ret
aas
es
test
das
adc
push
insl
popa
inc
mov
cmp
sbb
lret
ss
adc
insb
imul
sub
inc
int
push
pop
xor
add
jae
call
push
fmull
mov
js
mov
inc
cmpsl
adc
pusha
nop
scas
rcrb
sub
mov
cmpsl
out
hlt
jo
adc
rolb
jne
dec
xchg
push
sbb
lahf
or
xlat
test
mov
and
imulb
subb
fwait
jne
inc
clc
jl
xor
mov
aas
inc
movsb
mov
movl
test
mov
pop
push
hlt
mov
jecxz
hlt
xchg
and
cli
in
mov
gs
cli
mov
push
mov
test
pop
fstl
sbb
cld
sahf
jns
xor
daa
add
fldcw
insb
nop
cmpb
andl
xor
leave
loop
add
push
push
jnp
or
dec
mov
test
cmp
adc
outsb
xlat
fists
push
ds
adcl
andb
stos
sub
in
dec
push
movsb
outsl
mov
inc
jns
push
jl
repnz
jl
popf
or
pop
fiaddl
inc
lods
and
mov
mov
mov
dec
lret
mov
je
movsb
adc
inc
mov
xor
ja
pop
repnz
xchg
jecxz
arpl
pop
mov
fs
jge
cltd
sbbb
or
fistpl
fldt
jle
in
lods
mov
pop
cmpsl
mov
add
cmp
cltd
push
xor
call
sbb
cltd
jmp
or
aas
movsl
mov
adc
sub
insb
or
adc
aas
test
pop
pop
pop
sub
mov
ss
mov
data16
mov
shrb
rol
rclb
fstl
jns
lea
pop
daa
sub
sbbb
and
xchg
cmc
jne,pt
in
add
lods
push
push
pop
mov
shll
jl
mov
xchg
dec
test
andl
pop
addr16
in
pushf
es
jl
jo
pusha
aaa
stos
pop
out
pop
addr16
push
es
out
pop
js
mov
sbb
loopne
loop
inc
lock
adc
pushf
aad
lcall
pop
lea
or
imul
inc
out
cs
fisubs
xor
mov
int3
stc
les
out
jae
loop
outsb
push
sub
push
pop
icebp
dec
mov
cmp
pop
jmp
scas
imul
adc
push
fimull
mov
les
add
sbb
je
or
mov
inc
repz
inc
flds
lcall
mov
es
sbb
mov
rorb
pop
outsl
xchg
adc
out
inc
int3
jmp
repz
outsb
mov
mov
cmp
cmc
push
in
push
cmp
sub
or
or
scas
stos
cmc
fstpl
cmc
mov
insl
mov
push
std
cmp
sbb
iret
arpl
aam
and
ja
ss
ficoms
std
pop
popa
and
enter
in
cmp
test
pop
sbb
mov
sbb
aaa
divb
sbb
jns
inc
pop
mov
aam
add
clc
mov
sahf
xchg
mov
push
and
vmread
hlt
sbb
push
inc
jecxz
cmp
call
cmpsb
jns
pop
adc
std
cmc
sub
cmp
pop
mov
sub
es
jns
and
arpl
pop
xor
test
mov
fs
je
xchg
add
jle
mov
push
adc
xor
and
subb
cmp
dec
sahf
les
stc
out
cmp
shlb
popa
push
imul
jbe
fstpl
xchg
pop
inc
in
mov
inc
adc
bound
mov
jle
mov
ret
mov
loop
jmp
xchg
add
adc
divb
popf
pop
mov
movsl
mov
cltd
inc
jle
mov
adc
aas
xchg
test
jae
lea
imul
mov
and
mov
push
int
inc
xchg
mov
lret
xor
sbb
icebp
sbb
xchg
add
lret
jp
aad
and
mov
adc
sbb
sbb
sbb
mov
lret
or
cmp
push
sub
push
mov
into
add
adc
add
add
sub
orl
jne
xor
xchg
add
xchg
jnp
insl
cmp
dec
dec
jecxz
and
test
mov
insl
adc
enter
arpl
and
bound
xchg
xchg
shrl
mov
fimuls
insb
lods
mov
pop
jge
dec
pusha
or
push
repnz
ficompl
adc
push
lret
gs
xor
neg
std
pop
test
mov
xor
jmp
ss
lahf
test
sub
pop
xchg
out
and
mov
int
pushf
adc
aaa
adc
sub
movsb
or
syscall
scas
xchg
adc
aad
aam
je
je
testl
xor
dec
inc
mov
cmpsl
push
inc
outsl
cmp
adc
fsubrl
insl
inc
enter
mov
pop
dec
add
sahf
jmp
add
dec
ljmp
and
jg
cmp
fidivl
test
leave
xchg
xchg
push
add
push
mov
je
mov
and
mov
ror
and
pop
icebp
xor
inc
mov
ljmp
mov
pop
sbb
imul
shlb
ja
sbbl
add
imul
in
shl
out
push
cmp
mov
sbbb
add
lock
shl
dec
inc
add
mov
sub
xchg
pop
sub
mov
cwtl
int3
mov
pushf
outsb
jecxz
sub
dec
test
mov
daa
mov
and
xchg
push
repnz
add
testb
or
out
push
dec
sub
fcoms
std
fsubl
adc
test
test
jb
or
xor
jbe
sub
sbb
jg
xor
inc
and
addr16
mov
stos
dec
push
inc
pop
pop
push
shlb
in
je
dec
aas
pushf
adc
mov
mov
pop
popa
mov
repnz
push
ds
mov
orl
out
cmp
adc
dec
jg
jae
inc
lock
mull
push
adc
mov
sub
pop
sub
cmp
push
in
sub
mov
nop
dec
test
in
dec
stos
lret
and
mov
call
les
movsl
insb
imul
mov
pop
mov
test
dec
push
repz
mov
loop
or
add
inc
and
stos
fs
int
loope
outsl
mov
js
shl
inc
add
ret
add
pop
scas
pop
loopne
xor
mov
lock
or
cld
mov
pop
xchg
into
mov
jo
out
mov
push
sbb
enter
pop
sbb
push
inc
ret
pop
pop
xor
pop
roll
rorl
mov
sbb
push
sti
fsubp
aaa
je
mov
or
cmp
mov
sub
push
pushf
and
dec
jle
and
rclb
aaa
xor
fsts
fbstp
jno
mov
or
shlb
cmpsb
xor
fldt
xchg
pop
inc
xchg
outsb
mov
or
jnp
sub
ja
lods
sbb
pop
fadd
or
stos
scas
sbb
jns
rep
cmp
or
pop
pop
repz
mov
or
mov
cmpsb
out
scas
sub
cmp
adc
mov
imul
adc
arpl
mov
jo
icebp
shlb
fmul
lds
add
sbb
sub
adcb
out
cli
sahf
jnp
ret
push
jne
jp,pt
sahf
dec
inc
pop
cmc
sub
cmp
outsl
call
xchg
adc
mov
xlat
xchg
out
cmp
js
int
lret
push
je
jb
ret
lock
pop
mov
xchg
clc
mov
and
or
pop
nop
xorl
sysenter
mov
add
lds
sub
jns
bnd
sbb
outsb
xchg
hlt
in
mov
cmp
xor
iret
out
push
xor
test
mov
hlt
mov
fidivrs
imul
mov
mov
push
lret
mov
ljmp
inc
movsl
push
jp
lock
and
xchg
and
mov
cmp
in
lea
pushf
or
inc
loop
mov
inc
xchg
fst
mov
adc
mov
out
js
and
mov
incb
dec
xor
adc
leave
adc
int
out
je
std
sahf
std
popa
insb
jnp
iret
cmp
js,pn
pop
dec
and
in
stos
cwtl
jge
out
pop
imul
repz
mov
stos
cld
cwtl
pop
add
add
cwtl
ret
iret
add
mov
fnstenv
sub
lcall
negb
es
ficompl
mov
scas
and
std
push
mov
adc
mov
or
aad
adc
jecxz
jne
mov
ficompl
mov
inc
mov
mov
fs
push
push
pop
jle
pop
scas
test
mov
mov
fisubl
adc
sbb
sbb
cmc
sbb
inc
cltd
inc
pop
imul
add
pop
fidivs
incb
stc
xor
xchg
sub
or
rcrl
ds
out
enter
movsl
xlat
fdivrs
adc
sbb
xlat
test
ret
je
ljmp
cmp
push
nop
adc
jg
ds
pop
adc
stos
dec
test
add
mov
mov
or
insb
mov
xchg
clc
and
pop
movsl
push
pop
and
arpl
addb
mov
mov
in
dec
ljmp
sbb
ret
pop
cmp
cmp
sub
xor
mov
lods
inc
inc
es
ret
push
xchg
push
fs
cwtl
push
cwtl
ljmp
or
pop
mov
ljmp
and
idivl
test
cmpsl
sbb
adc
cs
cmp
clc
inc
popf
dec
mov
mov
je
jmp
add
shrl
and
fucomip
push
xor
mov
mov
int3
outsb
xor
xchg
jns
jb
insb
orb
jl
push
into
xor
xor
inc
shrb
mov
sbb
mov
lcall
push
jecxz
jecxz
mov
lods
ret
aam
lret
pop
lahf
fstpl
aam
push
xchg
mov
jmp
dec
mov
inc
test
pop
repz
sar
icebp
xor
mov
pop
ja
or
jge
mov
and
imul
or
insb
xchg
inc
lods
int3
xor
in
popf
dec
aas
cli
in
orl
dec
out
ktestb
mov
cmpsb
bound
xchg
xor
shlb
out
push
jg
stos
and
mov
jmp
je
xchg
cmp
or
cltd
mov
inc
inc
js
xchg
and
ljmp
movsb
pop
icebp
pop
cmp
cmc
je
loopne
pusha
pop
test
nop
and
sbb
in
fistpll
fstpl
jmp
iret
fildll
incb
std
addr16
xchg
xor
icebp
enter
adc
add
scas
cld
xor
cld
mov
jne
stc
mov
xchg
mov
in
sbb
cltd
jns
jae
inc
cmpsl
hlt
mov
lret
mov
rorl
negb
or
test
lea
and
xchg
cs
cmp
pop
out
in
shlb
or
cltd
add
jmp
or
and
data16
icebp
stos
loop
dec
cwtl
xchg
fsubrp
jg
adc
push
mov
xchg
or
in
dec
mov
test
push
out
pop
mov
dec
jl
std
push
inc
push
dec
dec
idiv
cmpsb
pop
or
xor
mov
in
or
jmp
pop
pop
add
mov
imul
daa
inc
inc
add
mov
loop
sbb
mov
add
mov
pusha
lods
and
imul
push
sbb
mov
lret
dec
dec
cmp
xor
sub
out
ljmp
mov
fsts
push
mov
rorl
inc
pop
ss
pop
xor
pop
pop
call
inc
out
mov
cmp
inc
stos
loopne
cmp
outsb
dec
lret
outsl
insb
push
xor
mov
jl
or
mov
fs
or
jecxz
sub
repnz
std
shrl
pop
jnp
ds
xor
lea
jnp
push
pop
push
loope
pop
add
xor
mov
push
jmp
xchg
in
pop
int
add
hlt
aad
stos
push
std
push
inc
outsb
jnp
mov
es
mov
adc
enter
adc
out
divl
xor
jb
cwtl
and
mov
out
lahf
iret
js
and
ret
xchg
sti
movb
sub
lds
cmp
int3
outsb
cmc
mov
dec
mov
mov
xchg
pushl
xor
rcll
adc
mov
rep
dec
pop
repnz
into
push
sbb
in
lret
pop
mov
lock
xchg
mov
nop
fnstsw
mov
les
sarb
outsb
imul
leave
lods
mov
adc
insb
roll
ret
push
mov
outsl
ficoms
mov
inc
push
sar
dec
jg
mov
lcall
sub
mov
sbb
test
in
inc
test
jge
sub
jl
jbe
and
pop
xor
sbb
mov
jle
and
lock
jecxz
sub
lds
mov
xchg
loopne
subb
test
xor
cmp
push
xor
rolb
inc
push
in
cwtl
pop
loopne
test
sub
pop
incb
sub
xchg
je
jl
mov
mov
push
pushf
jl
jl
rorl
push
rep
push
xchg
aam
sub
push
push
les
and
sub
movsl
cli
pop
sbb
and
es
and
mov
in
and
mov
cmpsb
lahf
xchg
xchg
mov
mov
jp
leave
xor
pop
cmp
dec
mov
shl
xor
cmpsb
popa
xor
sarb
lahf
cmp
test
scas
test
out
dec
dec
leave
pop
repnz
xchg
popa
push
mov
adc
xchg
push
loopne
adc
add
popa
rcrb
ror
in
popf
repnz
mov
mov
mov
outsb
repnz
popf
je
lods
mov
xchg
jno
adc
sub
adc
nop
sbb
scas
ret
out
push
ss
in
sbb
adc
mov
lahf
mov
mov
cmp
ret
pop
shrb
aaa
cmc
lods
insb
popa
add
mov
shrl
cmp
sub
xchg
dec
push
jbe
push
or
aad
push
daa
pop
jl
dec
jecxz
mov
and
xchg
jg
xor
mov
mov
jge
pusha
aaa
cmpps
mov
sbb
inc
popa
pop
mov
popf
and
cmp
cli
xchg
xchg
fs
cmp
roll
xchg
mov
jl
test
sbb
out
rorl
xor
into
cmp
adc
push
xchg
sub
leave
push
jp
cld
inc
sti
test
or
testl
push
dec
cwtl
ja
mov
sbb
in
add
xor
stos
xchg
mov
pop
cmp
cmp
push
into
cmp
data16
inc
je
or
pushf
pop
add
rol
cmp
out
aaa
push
inc
inc
out
imul
iret
mov
lcall
aas
push
pushf
pop
inc
je
mov
and
cld
mov
les
andb
cwtl
pop
lcall
or
int
pop
xchg
in
gs
jb
test
popf
and
into
out
repz
fimull
push
dec
scas
mov
mov
mov
and
adc
or
bound
jno
fwait
jle
into
ljmp
and
mov
stos
mov
lds
pop
out
fisttpll
gs
dec
jo
jae
inc
xlat
cmp
repnz
cld
pop
cmp
shlb
lret
sub
push
scas
bound
mov
ja
dec
sub
aas
and
mov
stc
jp
inc
pop
lds
push
cmp
xchg
lret
pop
les
and
dec
xchg
and
sub
aas
in
je
mov
or
inc
sahf
loope
in
call
dec
mov
or
jecxz
cmp
les
cmp
in
sub
jecxz
add
jecxz
xchg
movl
cli
lods
test
adc
dec
ss
add
in
push
cmp
seta
pop
cmpsl
test
sub
and
orl
and
ljmp
push
pop
push
xor
xor
jo
jns
sbb
lret
cwtl
stc
xchg
sti
xor
daa
das
dec
cmp
cmp
aaa
movsb
dec
sub
jg
ja
test
mov
jne
loopne
pop
mov
lods
ss
ds
into
mov
bound
into
pop
cmc
or
jge
and
inc
ficomps
mov
cmp
pop
add
daa
push
mov
andb
mov
cmpsl
les
push
xor
rcll
xlat
imul
sbb
pop
mov
scas
bound
mov
add
stos
repnz
sbb
test
sbb
pop
sbb
add
sub
nop
in
lock
dec
mov
xchg
add
clc
mov
mov
shll
xor
faddl
sub
push
dec
add
and
dec
add
sbb
lcall
push
iret
cmc
mov
push
mov
aam
pop
pop
push
or
sub
xor
out
add
mov
add
xor
jecxz
pushf
mov
mov
pop
cmp
hlt
notl
mov
fnstsw
mov
arpl
sub
fnsave
pop
pop
push
cmpsl
push
pop
and
movsl
mov
jecxz
push
cltd
mov
mov
es
or
gs
fdivr
lret
jmp
sbb
lock
dec
jnp
aaa
xchg
push
je
scas
xchg
mov
mov
jo
cmp
or
mov
xchg
adc
ret
adc
je
jge
fsubrl
lea
lret
fstpt
ret
fisubrl
push
inc
ret
add
cmp
mov
mov
pop
daa
mov
int3
fadds
jno
jae
out
fcmovbe
aas
mov
leave
dec
jae
add
pop
fwait
mov
pop
out
xchg
popf
arpl
pop
int
test
fs
jl
popf
add
push
inc
add
movsl
cmp
mov
adc
andl
pop
mov
add
imul
cmpb
mov
inc
sub
xchg
loopne
add
jge
leave
sub
or
sub
push
imul
lahf
push
add
push
loop
or
mov
movsb
cli
stos
fs
rcrb
lods
clc
inc
mov
or
test
test
das
jmp
pop
rcll
ffree
mov
xchg
cmpsl
in
leave
sub
fdivrs
mov
ljmp
shlb
jg
pop
fists
cmp
pop
mov
sti
test
inc
and
aas
mov
rcrb
adc
sbb
loop
test
mov
sub
int
rolb
inc
pop
xchg
icebp
or
pop
or
aaa
xchg
das
or
and
ljmp
loopne
adc
fs
loope
push
add
lret
cltd
jne
mov
mov
mov
adc
push
pusha
jecxz
insl
xchg
lret
lds
mov
repnz
aas
popa
imul
test
mov
or
mov
fldenv
or
inc
test
out
fiaddl
clc
mov
jne
lahf
imul
jb
cli
out
hlt
xchg
nop
ljmp
sbb
jl
mov
sub
roll
sbb
push
and
int3
neg
jge
fidivs
xor
icebp
in
cmp
fs
popa
ja
lds
jmp
and
decl
jle
insl
mov
cmp
cltd
xor
in
and
cs
mov
insb
aad
test
inc
mov
pop
repnz
lret
push
filds
popa
movsb
lret
dec
loope
int3
hlt
jnp
ljmp
add
mov
cltd
icebp
imul
cmpsb
sub
scas
jae
or
fisubs
in
add
int
imul
pop
xchg
enter
imull
ret
data16
jle
jl
add
cmc
sbb
pop
and
push
ret
in
mov
enter
mov
imul
aam
lcall
pop
jp
mov
jno
lock
popf
fxam
sub
xor
and
clc
test
xor
addr16
add
mov
jl
fs
sarb
push
mov
xchg
pop
jae
and
mov
jl
lock
xor
test
jmp
dec
mov
push
dec
push
popf
rclb
push
pushf
imul
lods
pushf
in
stos
inc
in
cmp
adc
push
test
das
push
and
sbb
cld
imul
mov
jl
enter
daa
or
sbb
adc
rcr
out
or
cli
imul
push
cmpsl
int
nop
test
lcall
add
je
fs
leave
jecxz
rorl
add
shll
xor
loopne
sbbb
repnz
cmp
fidivl
jg
sub
icebp
pushf
dec
clc
jle
push
cld
add
imul
ret
fldenv
cmp
ss
mov
ret
and
daa
cld
into
pusha
push
inc
cltd
mov
mov
inc
repz
and
xor
orl
mov
mov
and
data16
mov
mov
mov
clc
hlt
jge
das
inc
mov
mov
lret
push
and
dec
les
int
cli
mov
pop
repz
ss
and
gs
mov
dec
lret
out
ret
push
subl
into
outsb
fnsave
xlat
aam
ja
push
mov
mov
outsb
add
adc
cmp
inc
add
inc
shrb
mov
xor
rep
add
or
push
imul
ficoms
aam
xchg
int
roll
stc
fdivr
mov
mov
lea
mov
pop
and
xor
and
filds
jno
mov
sbb
add
add
fs
jns
pop
cli
pop
mov
mov
call
or
inc
sti
test
cmpl
dec
ror
or
or
push
sub
mov
pop
notb
add
popa
cli
xchg
cmpb
inc
jecxz
xchg
icebp
jno
fldcw
mov
xchg
out
dec
repz
pop
mov
jl
xor
mov
rcrb
lock
ds
out
sub
mov
sbb
loope
sbb
ljmp
lds
imull
and
mov
sub
out
subb
int
push
cli
and
je
mov
out
mov
cmpsb
arpl
cmp
movsl
push
push
mov
xor
mov
cltd
push
or
adc
popf
or
mov
inc
cmc
dec
mov
add
ljmp
icebp
jbe
scas
insb
xor
add
ss
mov
sbb
inc
push
stos
xor
mov
jg
enter
rolb
adcb
mov
scas
lret
fld
jae
fstp
lods
repnz
mov
jg
mov
repz
scas
stc
bsr
push
cmpsb
mov
je
xlat
inc
fidivrl
shll
mov
in
pop
out
sub
fstps
dec
or
sbb
dec
testb
or
fiadds
pop
cmc
xor
adc
int3
ss
js
inc
push
or
repz
dec
andb
stos
inc
fwait
sub
and
insb
mov
out
out
nop
scas
xchg
inc
lods
outsb
ss
adc
ja
sub
popf
sub
jo
fs
pop
daa
lret
int3
js
and
add
jo
xchg
push
sub
adc
dec
dec
roll
sbb
adc
lea
clc
add
mov
movsb
cmpl
pop
cmpsb
gs
or
sbb
adc
jno
test
imul
xor
add
stc
dec
leave
ja
jge
sub
repnz
daa
inc
xchg
notb
popf
mov
daa
cwtl
push
sbb
push
mov
mov
push
sbb
mov
push
xchg
andl
sub
enter
ja
repz
cmc
and
andb
push
jb
in
repnz
or
scas
ffreep
jl
mov
scas
stos
mov
lret
xor
xchg
jl
xchg
inc
popa
stc
fistpl
mov
push
and
and
jle
and
mov
pop
inc
cwtl
andb
testb
cmp
mov
hlt
xor
dec
fs
test
adc
jno
adc
jb
and
push
inc
in
mov
fstp
sub
dec
int3
out
in
movsb
push
jecxz
fs
rcr
fimull
in
movsb
jl
leave
lods
mov
cmpsl
and
push
cmp
adc
jbe
xchg
lcall
mov
cmp
adc
ljmp
jp
add
clc
scas
pop
cmp
add
filds
push
dec
inc
mov
rcrl
jmp
sbb
adc
ret
xor
push
incb
je
orb
jmp
mov
push
push
pusha
fldenv
shrb
orb
push
jl
stc
inc
mov
in
scas
ljmp
ret
sahf
sbb
ljmp
xlat
jmp
and
jg
in
dec
sbb
fidivrl
das
out
sbb
dec
divl
sti
sbb
fldenv
jg
mov
divb
sar
cmp
mov
divb
xor
cwtl
pop
push
jle
pop
mov
insb
fcom
sarb
mov
push
xor
jp
icebp
clc
cli
setnp
pop
dec
mov
inc
imul
enter
jmp
repz
jmp
mov
nop
mov
xchg
outsb
dec
mov
push
stos
mov
cwtl
mov
pop
xchg
xor
idivb
das
loopne
pop
push
mov
mov
xor
xchg
sbb
mov
jo
or
jae,pt
outsb
xor
test
xor
test
jp
pushf
pop
outsb
sub
iret
xor
es
leave
dec
sub
jns
in
fdivl
inc
dec
cmp
sub
inc
aaa
fwait
and
inc
leave
repz
sub
les
add
xchg
stc
fwait
pop
pop
aas
push
xor
ja
stc
push
xchg
dec
repnz
sbb
mov
iret
xor
mov
jb
pop
loopne
imul
es
mov
or
jno
inc
in
aas
int
jns
mov
xor
out
inc
cmp
xchg
fstps
mov
lcall
fs
cmp
inc
sub
mov
lcall
repz
adc
lret
ret
xchg
pop
sbb
movl
cwtl
aaa
add
xor
mov
fnstenv
in
mov
mov
inc
lds
into
fwait
and
shrl
gs
or
push
loopne,pn
inc
pop
add
pop
cmp
sbb
jecxz
loop
and
cmp
push
xor
push
mov
pop
movsb
push
stc
xchg
movsb
lret
bound
fcmovu
mov
cmp
dec
test
push
mov
jp
into
push
add
or
inc
fnstsw
cmpsl
nop
mov
inc
adc
sbb
xor
and
jl
jb
mov
cmp
mov
dec
out
and
cmp
stc
scas
mov
pop
jle,pn
cwtl
ds
in
push
dec
mov
in
xor
lock
imul
push
jno
out
mov
js
pop
insl
xor
mov
cmp
pop
sub
leave
fsubrs
mov
in
sbb
dec
divl
jg
inc
and
mov
ja
popa
mov
sbb
pop
sbb
sbb
and
mov
sahf
push
pop
add
fistpll
and
imul
rcl
pop
aad
xchg
sbb
sbb
sub
mov
and
in
xchg
push
jnp
jae
outsb
int3
jne
stc
mov
push
push
xlat
mov
lahf
add
cmp
sbb
mov
clc
in
mov
push
mov
cmp
je
roll
jbe
sahf
pusha
popa
and
repnz
xor
push
mov
xorb
and
dec
jg
out
shll
pop
push
gs
lods
insb
or
rcll
call
test
mov
test
fldcw
add
fst
aad
pop
mov
xor
jge
lods
sub
xor
dec
push
enter
decb
pop
je
ljmp
ficoml
cmc
leave
les
sarb
xchg
outsb
insl
std
jno
cli
cmp
push
and
or
test
dec
roll
xchg
lods
sub
sbb
jae
ja
imul
sar
ret
mov
or
ss
sbbb
mov
outsl
test
adc
mov
mov
pop
inc
push
or
hlt
cmp
mov
icebp
dec
push
int3
pop
xor
popf
je
fwait
pop
rclb
adc
int
add
adcl
xchg
int
mov
jb
push
or
cwtl
mov
scas
sub
or
xchg
jno
inc
repz
mov
iret
cmpsb
pushf
sub
fidivrl
loop
push
add
or
jb
push
jbe
jnp
mov
pop
sbb
je
ret
hlt
push
leave
push
push
push
inc
mov
or
mov
add
sub
pop
or
imul
xor
pop
movb
movl
scas
aad
push
fidivs
iret
jbe
aaa
xor
mov
lcall
outsb
push
inc
mov
xlat
arpl
push
and
aas
mov
mov
sbb
mov
bound
xchg
decl
cmp
int
pop
cmpsl
test
add
hlt
jg
daa
dec
xor
push
pop
or
in
lea
mov
mov
adc
fistpl
fdivrl
adc
leave
dec
inc
add
mov
mov
mov
fsub
stc
je
add
movsb
int
jp
mov
popa
adc
cmp
rcrl
lods
movd
push
lods
sbb
dec
pushf
add
inc
daa
or
mov
and
test
xchg
cwtl
std
sub
and
mov
stos
std
sub
xlat
in
inc
push
pushf
xchg
sbb
cmp
xor
lods
fisubrs
push
add
fisubrs
xor
mov
mov
sub
cmp
cmp
mov
lock
inc
mull
push
rcrb
lock
std
mov
add
add
pop
stos
ljmp
pop
xor
push
xchg
ja
push
jne
or
dec
xor
mov
xchg
cmp
dec
lret
sbb
es
imul
ds
xchg
xchg
push
sbb
cmpsl
outsl
jge
loopne
cs
lods
or
insl
int
aam
out
jge
dec
outsb
scas
sahf
xlat
xchg
adc
xchg
iret
add
xchg
dec
lahf
test
add
popf
mov
pop
scas
inc
test
dec
in
cmpsl
mov
mov
xchg
mov
fsts
inc
in
add
cmp
repz
les
imul
mov
dec
pop
add
aaa
pop
xorb
inc
mov
or
test
inc
mov
push
inc
sbb
outsb
mov
shll
cmp
cmp
cld
hlt
not
scas
lods
js
movsb
icebp
or
sub
cwtl
or
inc
pop
fistps
sub
lods
mov
sub
push
ficomps
std
inc
mulb
push
pusha
dec
sub
mov
sarb
jb,pn
faddp
cmp
push
out
adc
test
call
jb
idivb
repz
popf
mov
cmp
add
cmp
aad
repnz
mov
dec
push
subl
movsb
lds
mov
repnz
fwait
lcall
dec
ret
stc
sbb
stos
adc
push
in
cmc
lret
in
inc
leave
jno
xchg
insb
xorb
cmp
xor
and
mov
rep
cmpsb
pop
mov
push
or
pushl
xchg
cmc
push
jl
popa
js
cli
lret
cmpsb
fdivrp
add
cmpsl
jo
ror
aad
out
or
xor
pushl
inc
push
mov
jg
icebp
dec
shl
adcl
dec
bound
cwtl
and
subb
adc
jp
jne
loope
lea
ficoms
xor
arpl
jne
mov
inc
pop
cmpsb
jbe
nop
push
cmc
pop
pop
imul
pop
mov
xchg
fs
lcall
dec
dec
xchg
outsb
push
jl
xor
pop
js
jge
or
aas
clc
sbb
jno
sbb
cmpsl
or
or
fildll
add
adc
mov
ret
add
leave
sahf
imul
into
mov
mul
add
faddp
sbb
out
das
sub
adc
xchg
xor
pop
cmp
mov
enter
mov
cmp
xor
insl
fstpt
shlb
add
mov
cwtl
sub
test
add
es
loop
xchg
imul
jmp
ret
pop
and
push
je
fldcw
inc
xchg
gs
scas
inc
sbb
lods
imul
ret
cltd
dec
pusha
in
push
loop
xor
scas
into
lea
int
aaa
mov
cmp
dec
inc
dec
aas
fs
in
lcall
into
dec
jbe
mov
dec
lock
sbb
mov
sub
push
xor
mov
mov
pusha
roll
mov
rorl
xchg
daa
lahf
xchg
insb
test
adc
ds
or
gs
mov
pop
gs
xchg
push
rcr
xor
scas
xchg
xchg
call
ret
bound
imul
lds
fs
mov
mov
inc
shl
adc
add
adc
pop
xlat
mov
pop
int3
jo
adc
cmc
std
pusha
sti
mov
mov
sub
jb
jle
stos
fidivl
shll
fimull
inc
fwait
enter
orb
pusha
test
pop
clc
dec
orb
in
in
jg
xchg
push
out
cltd
scas
mov
pop
out
outsb
pop
xchg
and
sbb
test
imul
mov
addl
xor
mov
mov
adc
add
pop
sub
push
xchg
cmp
cmp
mov
cmp
cmp
cmp
inc
jne
dec
je
jo
pop
cmp
test
xchg
sbb
fcompp
jo
lds
jnp
pusha
dec
out
negl
xor
subl
mov
and
addl
in
movsb
je
into
cmc
insb
xchg
dec
mov
and
gs
dec
outsb
jb
enter
movsb
lods
or
dec
pop
pop
pop
daa
cmp
cld
xchg
scas
imul
push
dec
mov
and
movsl
xlat
out
fcmovu
xchg
jp
or
pop
arpl
and
sahf
int
push
pop
and
fwait
scas
or
jp
inc
cwtl
xchg
adc
lret
out
jae
clc
rorl
sbb
mov
call
xchg
faddl
dec
testl
pop
sbbl
xchg
jmp
gs
cld
and
push
aas
in
mov
mov
nop
jb
push
ja
cwtl
xor
aaa
fs
pushf
pop
add
pop
stos
mov
push
pusha
mov
mov
repz
sbb
nop
divl
enter
pop
mov
or
dec
add
cmp
sub
mov
and
ja
cvtps2pd
add
jg
es
or
into
lods
mov
jbe,pn
pop
mov
sub
jp
pop
and
pop
xchg
pop
shlb
sub
jne
pusha
js
leave
mov
ja
cmpsb
jnp
dec
sub
dec
js
add
pop
cmp
cmp
pop
clc
inc
cs
stc
mov
pop
lock
lock
icebp
ret
jns
sbb
inc
arpl
outsl
sbb
cmp
addr16
mov
sub
ror
sbb
popa
push
cmp
jg
enter
fld
aaa
mov
mov
mov
xor
inc
scas
fdivrs
mov
lds
sub
or
fs
cmp
out
pop
divb
adc
repnz
int3
in
ljmp
aam
mov
andl
and
or
divb
outsb
mov
cmp
mov
inc
cmpsl
data16
ljmp
int3
aam
aad
jmp
shlb
clc
inc
cmp
das
test
mov
or
test
testl
je
jno
sub
ret
xor
cld
insl
sbb
add
dec
pushf
or
add
sbb
cmp
outsl
stos
sbb
hlt
lcall
push
mov
call
push
insl
loop
cmc
stc
lahf
or
cmp
dec
pop
icebp
mov
sbb
add
push
cmpsb
sub
and
or
fwait
leave
mov
sub
and
xor
cmc
test
in
cmp
dec
data16
jo
xchg
es
pop
push
das
insb
in
aad
imul
push
cs
aas
cltd
mov
mov
lock
aam
dec
mov
xchg
sub
pop
dec
jecxz
jmp
push
movsl
rclb
xor
pop
lods
out
ror
lds
mov
mov
rcll
lahf
pop
mov
pop
out
mov
js
jne
or
popf
cmc
movsl
loop
xlat
fwait
mov
add
add
pop
pushf
inc
pusha
mov
xor
cmp
adc
leave
hlt
pop
xchg
call
dec
xor
iret
in
cmpsl
mov
mov
and
inc
stos
test
jecxz
mov
xchg
add
sahf
xchg
mov
cltd
cmpsl
mov
add
cld
stc
cwtl
jnp
lret
mov
cmp
call
lret
push
inc
mov
pop
std
mov
fadd
leave
into
lret
mov
out
lea
ret
push
clc
mov
jnp
adc
jbe
mov
mov
mov
sbb
lods
xor
jmp
pop
dec
pop
cmpsl
mov
cld
aas
jne
idivb
fisubrs
adc
lret
out
sub
pusha
pop
pusha
inc
push
sbb
inc
js
dec
and
cmp
add
inc
xchg
cmp
ljmp
jb
in
xchg
lods
mov
js
jnp
data16
mov
out
pop
add
mov
sub
lcall
nop
and
fcomps
rol
push
push
sbb
sbb
imul
stos
inc
repnz
imul
sub
addl
flds
outsl
popa
jp
add
mov
int3
mov
out
jg
dec
adc
pop
hlt
xchg
nop
jae
or
test
sti
xchg
push
jno
mov
mov
orb
and
pop
lods
loopne
cli
and
out
inc
dec
xor
dec
lds
enter
test
mov
lock
xchg
pop
aad
and
mov
mov
and
repz
xor
sbbl
mov
pop
iret
orb
sti
jp
dec
pushf
and
push
out
and
insb
insl
adc
idivb
test
mov
loopne
inc
mov
inc
xor
lds
push
jl
scas
shlb
in
xchg
xchg
std
call
adc
mov
mov
or
ds
int
daa
andl
push
pop
imul
xor
adc
shlb
test
leave
jns
dec
pop
out
pop
outsb
adc
adc
repnz
outsl
aad
push
es
std
movsl
xchg
push
push
roll
fidivrs
cmpl
imul
add
gs
rorb
push
lds
ds
mov
shrl
les
jns
imul
mov
sbb
cli
cmp
mov
cmp
jnp
push
in
xor
ret
jle
mov
cltd
xchg
mov
test
sbb
cmp
xchg
sbb
into
int
test
dec
mov
ret
or
push
sub
lret
movsb
arpl
sbb
dec
in
inc
xlat
mov
xor
xor
nop
sar
outsb
cmp
lret
fwait
iret
adc
lds
jbe
out
imul
jmp
add
or
gs
pop
popf
mov
xor
sub
cs
dec
ficoml
push
adc
sub
ss
pusha
push
data16
inc
cmp
aad
ljmp
daa
mov
fisttps
outsl
pop
stos
dec
fadd
mov
inc
sbb
sub
inc
mov
leave
adc
pop
out
popf
lods
sbb
lods
add
jle
and
mov
sub
sub
leave
arpl
fwait
sub
loope
bound
jge
stc
repnz
jnp
add
outsb
fistps
push
insb
inc
cmpb
loop
and
fldl
sub
xor
inc
dec
orl
repz
out
mov
add
test
mov
filds
sub
ss
dec
lods
icebp
push
add
ja
mov
pusha
jmp
mov
xor
push
push
xchg
out
adc
mov
sarb
sub
adc
mov
ljmp
xchg
mov
popa
fsub
ret
mov
in
int3
sbb
pop
in
adc
leave
and
lods
fdivp
fmull
fildl
inc
xchg
jae
test
popf
pop
aam
fcmovu
arpl
xor
mov
xchg
add
mov
jecxz
push
mov
mov
and
jo
push
ja
pop
fwait
test
xchg
pop
dec
mov
test
pop
mov
mov
dec
ja
and
mov
lret
inc
mov
mov
or
cmp
sbb
xchg
dec
push
outsb
sahf
aaa
mov
aas
das
push
cmp
xchg
xor
daa
testl
cmp
in
loopne
and
cmp
adc
inc
pushf
add
lcall
mov
popa
jnp
xchg
lea
shlb
leave
inc
xor
push
and
push
int3
int
pop
inc
mov
ss
in
mov
imul
dec
pop
daa
cmp
and
mov
gs
pop
or
insl
jmp
jo
push
ret
mov
mov
js
mov
js
inc
clc
ljmp
repnz
pop
jmp
and
dec
in
cmp
cld
mov
je
in
sbb
je
mov
sahf
mov
movsl
mov
pop
sub
mov
cmp
and
test
cs
movsb
jo
cmpsb
pop
jmp
or
adc
ds
pushf
sbbl
pop
fwait
or
add
lahf
fucomi
lea
stc
xor
xlat
aaa
lods
mov
sub
adc
andb
jne
es
imull
cmc
pop
adc
arpl
jns
cmp
xchg
ret
into
dec
adc
adc
dec
out
cmp
or
cmpl
sub
popa
dec
jmp
adc
cmp
inc
adc
movsl
jne
mov
icebp
lea
mov
dec
and
mov
int3
out
aam
and
fs
mov
in
roll
sub
pop
adc
fcomps
je
xor
add
fdivrs
lds
nop
pop
push
xlat
lods
xor
ds
xor
lds
enter
mov
pop
js
pop
add
pop
imul
add
add
add
sub
inc
add
out
add
stc
add
mov
inc
add
add
add
dec
jnp
sbb
or
loope
ret
rcr
rorl
das
fs
xor
and
jge
loop
xor
call
push
fcmovnb
inc
aaa
lcall
lea
push
mov
in
pop
jne
loope
orb
add
push
mov
push
ret
scas
ja
xor
outsl
aas
jmp
add
sub
jle
out
adc
add
js
mov
cmp
jmp
adc
hlt
inc
repnz
outsb
dec
jb
pushl
add
enter
push
stos
call
mov
ds
pushf
dec
insb
or
je
or
add
push
xchg
addr16
sub
int
mov
adc
inc
fists
js
xor
or
ret
xlat
fisttpll
xor
mov
sbb
sti
lret
xchg
pop
mov
sbbl
jno
jne
xor
lods
in
sub
arpl
gs
xchg
insb
ret
mov
cmp
aad
mov
lods
mov
in
sbb
cmp
cmpsl
in
fiaddl
loopne
ljmp
lahf
or
and
mov
and
lret
dec
lods
in
lea
dec
inc
mov
scas
jecxz
hlt
scas
pushf
cld
popf
sbb
insl
shr
sub
shl
sti
std
imul
push
lock
push
out
xchg
mov
leave
jnp
mov
cld
ss
cld
test
cmc
pop
aam
mov
scas
js
imul
xor
lret
adc
out
jg
and
fcmovnu
push
out
dec
js
pop
popf
lods
in
push
push
push
cmp
xchg
insb
enter
scas
jae
fistpll
icebp
call
orl
jns
adc
mov
mov
movsb
dec
aam
sub
mov
cltd
aaa
mov
push
aad
out
jae
jno
rolb
dec
dec
or
stos
clc
and
fcmovu
inc
leave
pop
mov
rolb
pop
aam
push
imul
mov
cli
adc
out
jecxz
cmp
adc
jge
xor
mov
mov
xor
mov
cmp
pop
inc
in
cmp
xchg
comiss
shlb
adc
sarl
arpl
add
fistpll
mov
adc
and
shlb
pop
data16
sti
addb
jecxz
inc
mov
pushf
dec
lods
test
jns
cmpsl
cltd
add
lock
lcall
mov
sbb
jg
and
push
fstpl
push
cmpsb
adc
adc
fstpt
outsb
ja
jne
push
outsl
scas
loop
addl
jo
loop
bt
xchg
sub
sub
fwait
popa
hlt
mov
outsb
adc
sub
pusha
scas
add
in
cmpb
js
notl
dec
das
dec
mov
push
sub
adc
and
call
call
rorb
stos
dec
fisttpll
adc
out
sub
rorl
ja
stos
add
cltd
inc
outsl
adc
inc
sbb
mov
mov
mov
cmp
jns
fmuls
adc
and
and
or
pop
rolb
repz
push
xor
cmp
inc
hlt
pop
clc
mov
mov
dec
mov
fidivl
dec
call
push
adc
lret
in
ljmp
cmp
subl
imul
xchg
arpl
xchg
out
add
dec
mov
sbb
popf
sti
clc
mov
insb
push
sub
dec
in
leave
fs
call
pop
xor
pop
xor
cltd
out
imul
pusha
cld
popa
addr16
in
mov
pop
fcomip
enter
shlb
sbb
mov
and
cs
lahf
or
adc
mov
jl
cmp
lret
mov
popl
xchg
jns
cmp
push
pop
xor
in
sbb
insl
add
icebp
push
add
fstpt
jecxz
enter
sub
jne
out
gs
xlat
jne
imul
scas
add
dec
out
push
in
sarb
mov
aam
mov
add
pop
out
push
stos
cvtps2pd
test
adc
bswap
loopne
mov
int
mov
insl
shrl
clc
mov
pop
add
in
pusha
push
push
add
xor
cmpsl
cmp
dec
inc
jbe
jo
test
daa
pushf
mov
jo
and
les
movsb
mov
fstpl
mov
push
lea
add
push
cmp
sub
xor
mov
or
inc
cmp
in
add
sub
xor
ds
es
cmp
inc
call
mov
int
inc
popa
loop
jne
lock
push
jns
adc
adc
sti
lock
sbb
jnp
fsts
mov
lea
lcall
ret
repnz
lea
or
dec
mov
addr16
sub
sbb
add
pop
inc
in
icebp
int
imul
and
push
outsb
push
std
mov
out
pop
unpckhps
fs
mov
test
outsl
mov
cld
pop
call
mov
dec
cmpsl
sti
stos
or
xchg
pop
imul
adc
stc
cmpsb
jp
pop
push
jmp
xorb
sahf
or
push
mov
ret
xchg
inc
insb
push
dec
pop
or
dec
adc
cmc
clc
popf
in
rol
pop
out
test
sbbl
mov
lods
stos
mov
ja
xchg
inc
aam
pop
out
shl
pop
icebp
push
mov
or
out
test
cmp
cmp
rcrb
push
ds
jnp
dec
mov
sbb
push
mov
or
mov
shrb
push
stos
inc
jo
aad
pop
jge
sub
push
popa
lcall
cmpsb
lahf
jecxz
lahf
test
movb
inc
sub
dec
cmp
frstor
jl
push
test
add
mov
cmpsb
mov
pop
stc
sub
adcl
inc
out
out
xor
ret
mov
pop
lret
in
adc
jnp
cmp
lods
cmp
cld
jne
fistpll
pop
cmpsb
stos
mov
and
pop
dec
sub
stc
movsl
enter
pop
loopne
sbb
cmp
jle
and
int
jg
push
jg
mov
neg
xchg
xlat
cmpsb
pushf
insl
mov
inc
lcall
inc
and
or
jne
outsb
push
repz
mov
add
aad
shl
jl
ljmp
dec
jl
push
stc
arpl
fmull
in
int
cmp
daa
sub
shl
inc
sbb
lcall
int3
ficompl
aad
xor
push
push
sbb
sbb
push
mov
cs
push
mov
lret
ds
push
jae
inc
imul
icebp
shll
adc
cmp
cmp
mov
push
or
test
mov
pop
fmul
int3
adc
inc
fiadds
cwtl
gs
lcall
mov
push
adc
aas
dec
pop
inc
cs
inc
mov
cmp
nop
mov
popa
mov
sarb
jb
add
and
outsl
popa
mov
or
lods
jnp
call
push
inc
mov
and
jl
test
aam
pop
and
xchg
sbbl
and
xor
mov
ja
shlb
xchg
lock
push
fimuls
fildl
dec
aas
shll
push
jb
mov
jo
out
jo
int
xchg
adc
xchg
lock
sbb
pop
scas
or
incb
pop
inc
subb
fists
mov
push
sbb
cmp
xor
mov
xlat
sub
xor
mov
xchg
mov
cltd
and
addr16
pop
rorl
xchg
xchg
in
das
jno
pop
dec
test
xchg
xchg
push
mov
imul
xor
js
aaa
rolb
pushf
repz
cmpsl
push
enter
data16
mov
jbe
jmp
xchg
je
enter
aam
cmpsb
popf
sub
in
mov
push
inc
mov
pusha
test
mov
sbb
insl
inc
push
fwait
dec
out
add
mov
test
movsb
pop
adc
in
iret
mov
cmp
fidivrs
je
imul
and
xor
push
rorb
push
call
mov
jp
fistl
in
add
sub
xchg
push
int3
mov
and
aas
out
push
cmpsl
cmp
jecxz
jp
out
xchg
pop
jmp
pop
dec
imul
jns
mov
imul
dec
cltd
mov
inc
fidivrs
repnz
adc
pop
sahf
adc
dec
dec
ds
enter
inc
insb
xchg
jle
pop
sub
int3
pop
pop
xor
enter
sbb
gs
mov
repz
icebp
dec
and
pop
mov
outsb
sub
mov
push
sub
insb
insb
pop
test
add
rcr
push
jno
into
aas
repnz
scas
ss
lahf
clc
dec
fwait
sbb
cltd
mov
int
sub
and
lds
loop
mov
or
mov
cli
repnz
push
sub
xchg
jg
lock
gs
notb
ljmp
in
rclb
fldcw
jl
push
outsb
xchg
mov
cmp
lcall
filds
sub
test
minps
dec
out
pushf
and
mov
mov
nop
sub
sub
into
sbb
in
aam
pop
mov
cmpsl
jp
out
mov
fildll
pop
xchg
lahf
ds
mov
pop
mov
xor
mov
orl
jle
loope
clc
cmp
aad
int
not
arpl
xchg
inc
cmc
dec
rolb
das
pslld
fstpt
mulb
call
mov
xor
push
push
insl
mov
pop
pop
test
int
cmp
jno
mov
scas
out
lcall
jb
add
sbb
xor
add
jl
dec
bound
loopne
daa
std
mov
sbb
dec
sub
repz
dec
fdivrl
aad
mov
scas
daa
mov
jno
fcmovne
nop
repz
ss
push
mov
rclb
xor
mov
dec
les
js
inc
fiadds
xor
scas
cmp
mov
and
fbld
stos
inc
or
push
mov
mov
mov
inc
mov
in
mov
push
inc
and
and
scas
popf
out
pop
mov
jbe
adc
mov
scas
jecxz
inc
ds
and
popa
pop
jnp
push
cli
pop
fiaddl
push
in
cmp
sbb
jnp
in
mov
mov
jae
clc
lods
insl
jbe
mov
mov
imul
or
movsb
cmpsl
fwait
pop
push
fmull
jge
add
push
mov
sbb
xchg
into
dec
and
inc
stos
sbb
arpl
xor
add
sub
dec
pop
rorb
in
pop
or
mov
and
sub
inc
dec
pop
sbb
xchg
js
lret
xor
cmp
inc
inc
inc
inc
repz
adc
dec
ds
adc
mov
out
sbb
insb
cmp
imul
faddp
pop
sbb
daa
das
add
daa
je
add
pop
adc
add
mov
pushl
fmuls
cs
jge
pop
xor
jb
nop
mov
mov
cmp
jp
cli
iret
std
or
outsl
jns
int3
push
and
imul
imul
pop
fdivl
rcrb
push
add
call
cwtl
mov
int
lock
jmp
jbe
pushf
jo
sahf
cmp
pop
mov
add
je
push
loop
mov
or
sahf
mov
sbb
dec
adc
pop
add
mov
xchg
adc
xchg
imul
jge
pop
out
pop
test
sbb
ds
je
xor
aas
or
pop
mov
mov
push
jno
jo
sti
loopne
push
cmpsb
and
jmp
addb
subb
pop
stos
mov
adc
andb
push
arpl
xchg
xchg
imul
xor
mov
aaa
xchg
cld
in
rcrl
lods
stos
lods
or
sbb
ja
arpl
push
test
lcall
mov
test
jnp
es
fwait
inc
jb
mov
adc
outsl
fstpt
cwtl
pop
dec
pop
iret
push
hlt
ja
dec
out
gs
xchg
or
xlat
push
cmp
fstpl
sarb
mov
insb
nop
sarl
lret
fisttps
jmp
mull
mov
loopne
imul
add
xor
mov
pop
xor
jle
sub
fstl
loope
repz
fstl
js
insb
daa
lock
sbb
push
jbe
cmp
xchg
fcom
mov
mov
inc
addr16
jmp
pop
iret
or
pop
testb
in
outsl
dec
mov
push
outsl
shlb
outsl
cmp
xchg
jo
mov
inc
jns
test
movsb
push
and
test
cmpsl
pop
cmp
push
test
pusha
incl
cmp
cmp
pop
mov
and
mov
pop
call
inc
and
fdivrl
ljmp
sahf
fwait
shlb
xchg
push
xor
fcoms
push
ja
pushf
sub
test
sarb
inc
es
mov
mov
cmpsb
aam
repnz
in
push
mov
xor
aaa
push
add
pop
in
nop
xchg
dec
add
cld
ss
sub
pop
sti
pop
sub
lods
insb
je
js
xor
cmp
ret
sub
cmp
cmp
mov
cmp
mov
std
dec
jl
add
into
push
mov
lcall
inc
mov
jo
pop
addl
call
ds
fmulp
sti
gs
ret
lret
mov
add
push
or
mov
arpl
inc
movsl
push
roll
adc
outsl
iret
xor
sub
lds
sbb
pop
outsb
lods
push
cmpsb
test
cli
jno
cmp
or
xor
pop
decl
mov
ljmp
jge
fistpll
mov
fisubs
int3
aad
adc
mov
sarb
or
icebp
push
adc
repnz
xchg
outsb
pop
in
repz
push
fs
mov
sbb
pop
imul
repz
shrb
imulb
jle
jge
packuswb
and
jge
inc
ss
xor
pop
scas
mov
dec
sbb
adc
sub
adc
sbb
mov
lret
xchg
lea
xor
or
imul
sbb
add
loopne
push
inc
inc
mov
aaa
sub
adc
or
sti
test
loope
pop
push
subb
loopne
cmpsl
jle
jle
imul
jns
or
sub
fsubl
lock
mov
mov
movl
aaa
sti
ja
xor
cmp
repnz
xchg
jecxz
out
jnp
fscale
jo
push
imul
std
lock
daa
xorb
imul
hlt
mov
sub
out
pop
outsl
jne
stc
in
out
xchg
mov
mov
je
cwtl
mov
fs
mov
add
stos
sub
into
or
into
mov
cmpsl
dec
popa
xchg
pop
iret
test
add
pop
fsubl
jns
push
jge
mov
inc
sbb
shl
mov
in
repnz
cld
dec
inc
dec
movsb
rcrb
sarb
adc
imulb
jg
nop
jae
leave
int3
bound
mov
mov
ret
scas
adc
bsf
push
sti
insl
repnz
push
loop
xchg
call
jecxz
movsl
cmpsl
sub
aas
imulb
cli
int3
inc
gs
mov
es
jae
scas
iret
sbb
xchg
rclb
fnstcw
subb
pop
popf
jno
sub
mov
mov
sbb
jl
repz
jge
add
jl
fdivrs
into
xor
jno
dec
roll
pop
sub
pop
clc
addr16
add
mov
pop
lods
cmp
mov
frstor
int
enter
pop
lods
std
mov
push
dec
dec
xchg
clc
push
ja
sbb
lods
dec
mov
mov
add
inc
adc
dec
sbb
mov
add
add
pop
js
push
mov
imul
imul
cmp
push
in
or
adc
or
out
mov
shll
stos
mov
seto
add
dec
andb
and
loopne
ljmp
adc
out
jge
int
stos
bound
outsl
cwtl
xchg
mov
add
xchg
or
xor
aaa
push
ficompl
push
hlt
mov
jbe
cltd
orl
jle
jns
jbe
scas
cmp
out
mov
lods
in
push
add
inc
mov
mov
imul
ljmp
add
out
test
test
push
mov
mov
adc
mov
insb
inc
pop
cli
sub
adc
cmpsl
mov
push
insb
jl
mov
sub
pop
fwait
dec
adc
test
xchg
or
out
adc
cmpsl
in
sub
call
jecxz
pop
popf
push
xor
outsl
jge
and
lock
flds
call
insb
xchg
mov
mov
incl
pop
push
sbb
push
and
popa
lods
ret
ffree
outsb
jl
imul
sti
in
adc
mov
cmp
lahf
cmpsb
sub
xchg
lock
popa
clc
imul
mov
push
mov
test
popa
fbstp
sbb
pop
pop
push
mov
push
loop
ret
inc
outsb
jl
xchg
mov
fcomip
sub
mov
sub
fnstsw
rcrl
mov
dec
dec
add
cld
pop
inc
insb
nop
inc
mov
mov
sub
mov
fmull
push
mov
pop
xchg
andb
mov
movsb
inc
push
outsb
pop
pop
movsl
xor
stos
pop
inc
popa
scas
enter
dec
dec
and
dec
xchg
dec
sbb
ds
pop
mov
inc
sbb
jmp
pop
dec
pop
add
es
dec
xchg
xchg
cwtl
test
test
pop
orl
fnstenv
lods
adc
int3
fnstcw
adc
xor
ja
pushf
test
pusha
dec
bound
into
sub
xchg
lret
hlt
mov
add
mov
rcll
mov
pop
jb
daa
addr16
rol
daa
sub
fimuls
mov
test
add
cmp
adc
xor
aam
int
sub
in
add
mov
rcr
les
mov
or
cmpsl
incl
cwtl
js
lret
cltd
dec
sbb
sbb
dec
outsl
enter
dec
or
movsl
std
test
int3
mov
sarl
dec
sti
out
or
lods
xchg
jnp
mov
cmp
insl
outsb
subl
pop
icebp
or
lcall
sub
sahf
pop
out
sbb
mov
sub
fwait
or
stos
cmp
jbe
mov
jno
add
push
mov
pop
mov
dec
or
cmc
inc
add
pop
push
out
sub
xor
sbb
mov
aas
jmp
inc
popa
insl
ftst
clc
xchg
mov
xchg
sub
fdivrs
fildll
fwait
push
cmp
out
inc
pop
sub
int3
das
xor
dec
jb
jo
add
jae
or
adc
divb
mov
insb
xchg
push
push
mov
inc
jne
mov
mov
inc
mov
cmp
in
leave
pop
hlt
fisubrs
and
shl
lock
mov
cmpb
ja
mov
pop
lods
add
mov
stos
hlt
orl
xchg
shrl
jns
dec
mov
in
mov
fptan
int
popw
jbe
ss
rcrl
xchg
or
or
div
push
hlt
cld
pop
sub
push
arpl
pop
loop
sti
lods
sbbb
les
sub
call
jl
jg
mov
add
repz
jge
aam
dec
cmp
mov
stc
das
push
xchg
or
inc
adc
jmp
and
leave
fwait
push
sti
pop
ja
sub
jmp
mov
cmpb
fimuls
in
ds
dec
mov
or
rorl
loopne
sbb
cmp
scas
popa
leave
mov
sub
xchg
nop
push
test
mov
xchg
insl
add
addr16
int3
inc
shll
in
mov
xchg
mov
xor
add
sub
jae
aad
sub
sub
ja
adc
and
push
pop
sbb
mov
dec
push
or
dec
fnstenv
mov
rcll
scas
jl
sub
mov
xchg
lock
xchg
mov
es
xor
insb
mov
stos
repz
into
lock
aam
push
loope
and
and
pushl
dec
cmp
xchg
xor
outsl
out
je
fcomps
or
stos
es
cmp
fchs
push
push
aaa
pop
sub
sub
stc
cmp
jle
lret
or
ds
xchg
mov
and
xor
sbb
pop
mov
lret
call
jge
lcall
mov
enter
inc
dec
dec
les
add
lea
int
or
inc
xchg
enterw
pop
in
xor
jg
push
push
mov
mov
fsub
dec
fs
add
pop
cmp
push
mov
mov
fs
xor
sbb
stc
inc
es
jne
mov
loope
stc
incl
call
jl
fiaddl
and
out
sbb
xchg
sarl
addr16
cmc
divl
push
inc
test
in
pushf
addr16
mov
xor
repz
icebp
cmp
cmpb
lea
repnz
test
or
cli
and
stc
cmp
out
ret
or
pop
jg
jae
das
stos
mov
leave
test
mov
add
jb
mov
and
popf
std
jbe
and
pop
mov
mov
imulb
push
les
or
push
ret
push
mov
loop
aas
and
pop
subb
aaa
sub
cmc
add
mov
or
cmpsl
icebp
in
leave
mov
jno
lret
nop
add
pusha
fbstp
xor
push
sub
popa
lock
push
xor
test
test
dec
bound
push
mov
mov
loope
into
or
mov
xchg
das
push
mov
adc
insb
rep
add
aad
pop
mov
and
lcall
lds
lock
push
cmp
nop
mov
inc
into
pop
lock
xchg
lds
popa
orl
jno
pop
cli
cmp
xchg
out
mov
pop
push
aas
scas
arpl
add
push
jbe
push
push
mov
add
sarb
xchg
add
imull
icebp
sub
int
xchg
scas
add
mov
insl
call
orl
jb
cmpsl
cmc
fadd
jo
lds
adc
xorb
jmp
divb
mov
xchg
mov
add
sbb
cwtl
mov
fidivrl
mov
shll
cmp
inc
xchg
addr16
or
xchg
pop
adc
mov
adc
sub
and
cmpsb
jo
incl
lods
lret
loope
pop
push
or
add
cwtl
loope
inc
inc
xor
dec
cmp
hlt
pop
mov
jge
mov
adc
pusha
pop
lea
cmp
or
lahf
mov
les
dec
fcoml
mov
jg
cmp
jb
jle
jge
dec
es
stos
adc
pop
push
xchg
lods
sbb
es
push
xchg
outsb
repnz
popa
aaa
sub
rcr
aam
cmpl
mov
jmp
dec
mov
push
xchg
stc
call
insb
lds
cld
ror
adc
xchg
aaa
jecxz
testl
and
adc
out
in
out
pusha
adc
sahf
dec
cld
xchg
test
xchg
push
hlt
jno
orb
and
push
ret
cli
bound
xorb
ds
fwait
xor
arpl
mov
roll
cmp
cmc
sbb
mov
add
je
pop
pop
sub
and
xor
adc
test
outsb
addr16
aaa
cwtl
mov
icebp
ret
repnz
dec
inc
movsb
out
mov
inc
insb
inc
mov
test
push
ds
add
adc
lret
cmp
mov
inc
cmp
int3
cmc
pop
mov
pop
or
mov
cmpsb
cmp
ss
arpl
push
xor
pop
inc
imul
and
call
int
icebp
or
or
aas
mov
push
imul
adc
enter
aaa
in
fsubl
testb
cmp
stos
push
bnd
out
sbb
xchg
pop
loopne
sub
punpcklwd
js
mov
adc
jb
mov
xor
adc
xchg
fcomi
mov
sbb
popf
popl
xchg
sub
inc
add
add
inc
cltd
icebp
scas
in
cltd
test
cmpsb
dec
push
cmp
lds
addb
ja
clc
cmp
fwait
mov
imul
jp
inc
addr16
jl
ljmp
stos
clc
adc
js
in
fwait
sahf
jg
sti
mov
fcomps
xchg
sti
jne
mul
inc
or
mov
cmp
fwait
mov
test
imul
add
mov
adc
cli
out
popa
jle
sub
mov
mov
outsl
arpl
popa
dec
or
cvtpi2ps
arpl
dec
cmp
and
imul
mov
mov
add
and
add
jbe
or
mov
shl
jo
int
xchg
les
pop
xlat
jl
xchg
or
push
adcb
imul
in
mov
lock
and
and
dec
or
dec
mov
lret
pop
mov
repnz
xchg
mov
jbe
jns
loop
and
in
lret
inc
add
bound
push
mov
dec
fists
out
repnz
mov
nop
lods
push
mov
fmuls
and
lea
popf
dec
aad
add
lret
repz
enter
push
adc
jl
push
loop
imul
or
negb
push
cltd
ret
mov
test
mov
int3
aad
adc
pop
inc
hlt
or
repz
pop
jb
mov
ror
jmp
adc
lods
scas
jns
lds
pop
mov
push
test
rcrl
xchg
loopne
xchg
inc
jp
or
jecxz
sbb
mov
movsl
clc
and
fstl
sub
aad
cmpsl
test
nop
dec
shl
sub
in
push
xor
adc
mov
add
dec
ss
push
mov
nop
cli
fucom
loope
cmp
inc
push
mov
outsl
aam
inc
jmp
aad
jbe
loop
mov
adc
mov
pop
mov
bound
push
pusha
xor
push
out
aam
jbe
xchg
test
push
rcll
dec
lods
lock
das
dec
int
pop
jbe
mov
insb
ljmp
adc
sbb
jecxz
orb
adc
mov
cmp
jge
add
pushf
sub
xchg
and
adc
int
stos
push
popf
cmp
cmp
out
dec
dec
sub
or
lea
dec
repz
enter
fnstcw
scas
jae
js
mov
stc
in
pop
mov
ret
adc
sub
out
aad
add
mov
push
or
dec
inc
dec
cmpl
leave
and
inc
imul
icebp
xor
add
push
mov
jnp
mov
es
cs
cmp
mov
pop
pop
aad
jbe
leave
inc
pop
jge
push
in
out
add
mov
pop
js
push
rdpmc
xor
add
lods
push
xlat
mov
imul
xchg
xchg
nop
out
jg
jae
push
insl
jl
cmp
pushf
sbb
in
mov
mov
dec
and
fsts
jae
sbb
imul
add
shrb
mov
call
push
dec
jmp
sbbb
in
mov
push
push
add
dec
pop
push
mov
push
jb
add
shlb
out
iret
push
lcall
sbb
sub
dec
jg
pop
test
inc
loope
add
fwait
outsl
dec
into
mov
inc
sub
jmp
sbb
xor
or
mov
sbb
scas
xor
mov
cs
add
xchg
jb
sub
or
or
pop
fnsave
sbb
dec
sub
cmp
adc
lods
mov
jns
add
ljmp
aad
fwait
or
mov
je
int3
jns
inc
mov
fistpll
into
ss
lock
call
in
pusha
imul
test
push
push
es
cwtl
mov
add
stos
xor
mov
mov
ja
cli
add
add
sub
loopne
jno
sti
mov
push
lret
mov
nop
mov
movsb
add
jge
add
jl
sub
ror
aaa
pushl
cmp
lock
or
insl
cmp
std
adc
icebp
por
cmp
imul
in
inc
sbb
add
fwait
inc
movsb
pop
pop
cwtl
add
movsb
push
jne
pop
insl
scas
rclb
in
mov
addl
sbb
fmuls
xor
jecxz
mov
xchg
mov
rcrl
adcl
adc
push
mov
sti
jb
push
push
mov
call
and
int3
push
or
es
inc
js
hlt
cmp
xchg
insb
leave
mulb
xor
je
jns
pop
xchg
xlat
push
sub
sbb
jl
cld
ror
test
pop
mov
fnstcw
aaa
jl
mov
cmp
or
and
loope
aaa
push
xor
sbb
sub
cmpsl
std
dec
shlb
cwtl
push
lock
mov
insl
addr16
hlt
ficomps
mov
outsl
dec
pop
sub
jns
push
push
xchg
punpckldq
js
les
loope
repnz
add
mov
and
mov
xchg
lods
nop
cmp
xchg
cmpsl
pop
dec
shlb
mov
jno
scas
mov
fs
dec
push
in
xchg
pop
inc
fidivl
jae
push
das
and
shlb
xchg
sub
rcll
lea
in
pushf
mov
xor
add
xchg
adc
mov
xor
or
xorps
sbb
inc
push
mov
mov
lds
xor
adc
sub
int
pop
shll
in
shl
pop
outsl
lcall
int3
xchg
arpl
std
inc
and
fmull
cmp
add
les
je
push
imul
movsb
arpl
out
mov
hlt
popf
je
out
test
stos
mov
mov
test
out
push
inc
push
mov
xchg
icebp
mov
mul
rcrb
mov
xchg
sub
aad
sbbb
fstps
rcr
pop
or
add
icebp
cmp
mov
shlb
push
stc
inc
jne,pt
mov
sub
mov
movsl
int
or
dec
bound
push
loope
cmp
in
stos
test
jmp
push
js
test
or
jo
lock
fdivr
movsl
data16
inc
push
push
std
add
xchg
mov
fnsave
mov
jmp
fcoms
inc
imul
xchg
iret
dec
test
icebp
aas
xor
inc
add
and
xchg
mov
cmp
jae
sbb
loop
and
jbe
adc
jnp
dec
add
cmp
xor
xor
notl
setbe
rorl
or
jae
sub
sbb
sub
mov
fbstp
xor
mov
clc
fiadds
in
xlat
adc
in
out
in
jmp
int
and
subl
orb
jne
lods
iret
pop
inc
sbb
test
dec
fstl
dec
fwait
jb
leave
mov
mov
lahf
push
jl
cmc
bound
xchg
out
inc
cltd
pop
jg
subb
cmovs
cmp
mov
inc
cmp
or
mov
enter
jl
movd
adc
hlt
icebp
cmpsb
lret
ja
pop
inc
femms
pop
fldenv
cltd
shrb
aad
push
popa
xchg
and
or
mov
dec
out
cmp
mov
out
or
cmp
mov
fwait
popa
jnp
jns
push
sub
jnp
push
icebp
pop
jne
lods
sub
into
xchg
lahf
cld
push
dec
add
mov
or
in
cli
inc
scas
xchg
mov
xchg
pusha
pop
xchg
lock
cmp
idivb
mov
test
int
es
jp
aad
cmpb
push
inc
cmpsb
bound
xchg
or
fdivrs
fcom
jne
lret
decl
xorb
push
mov
inc
sbb
pop
adc
jo
sub
imul
aam
adc
cli
daa
test
popf
inc
mov
add
mov
subb
stos
pop
dec
inc
mov
cltd
fs
insl
pusha
and
insl
add
inc
addl
test
aam
adc
addr16
in
mov
xchg
xor
adc
sahf
rcr
sti
push
movsl
dec
xchg
notl
aas
rcll
ss
cli
adcb
std
int
and
out
fisttps
jp
sub
mov
sbb
xchg
or
inc
sub
rclb
mov
dec
push
mov
int
fisubrs
jbe
in
or
xor
jecxz
or
mov
dec
stc
aas
jge
ss
xor
mov
outsb
sahf
jp
jae
shl
xor
out
jo
addr16
in
fdivl
loopne
xchg
sub
fs
ficoml
add
adc
push
cmpsl
push
mov
cmp
push
les
out
dec
mov
out
xchg
fdivr
mov
mov
popa
loope
pop
inc
jle
xor
pop
add
les
ds
fistps
mov
jo
stos
xchg
cmp
dec
mov
leave
out
xchg
ret
ljmp
rcll
rcrb
jo
mov
pop
jge
push
jge
lds
sub
out
push
or
mov
push
xchg
rcr
mov
sbb
fadds
mov
push
dec
cmp
mov
mov
mov
inc
cmp
push
dec
jno
loope
mov
xchg
mov
pop
scas
jae
add
ret
leave
sarb
and
in
inc
std
sub
push
pusha
arpl
fisttpll
scas
data16
mov
mov
aam
pop
loop
and
lock
or
enter
fwait
inc
or
sub
imul
jno
mov
mov
es
insb
mov
pop
sub
or
cs
dec
repnz
popa
mov
xchg
dec
or
jno
sub
push
movsl
push
mov
cwtl
xorl
adc
adc
cmp
test
test
xchg
int3
jae
push
imull
or
jl
xchg
jecxz
cmp
lret
and
insb
adcb
mov
mov
mov
and
insb
sub
dec
push
idivl
cwtl
insl
ficoms
mov
adc
dec
shl
out
popf
adc
pop
mov
mov
push
std
and
mov
lcall
mov
movsl
sbb
sub
adc
or
ret
add
lods
int3
push
xor
es
cmp
mov
into
cmc
imul
psubb
jno
inc
inc
push
pop
cmp
or
xchg
lock
loope
xor
stc
push
mov
push
fstpt
or
cmp
or
xor
out
jns
dec
xchg
rol
adcb
xchg
out
clc
lret
aam
mov
icebp
inc
dec
sub
into
push
pop
int
mov
mov
pop
cmpsb
popa
push
sub
inc
pop
lret
mov
imul
xchg
mov
je
test
lock
sub
add
rcrl
out
fstpt
mov
fcoml
xchg
hlt
mov
mov
es
adc
jae
xchg
rorl
sahf
je
fwait
xchg
dec
xchg
xlat
iret
popa
lods
xchg
mov
jl
movsb
ljmp
mov
inc
xchg
mov
ret
push
lret
insl
imul
scas
insl
mov
or
mov
sti
sarb
mov
nop
mov
shl
pop
in
popf
cmp
cmp
pop
pop
inc
inc
fisubs
cmp
jg
xlat
test
sar
orb
insb
popf
jne
jbe
push
cli
lcall
imul
mov
inc
pop
call
and
popf
or
push
je
gs
fsubs
inc
subb
aad
xor
iret
xlat
push
pop
leave
push
cmp
loopne
shlb
mov
ss
jns
pop
mov
popf
repz
and
add
in
dec
mov
or
mov
stc
and
in
cmp
and
sbb
mov
sbb
mov
test
bound
sbbb
and
xchg
or
aas
sub
imul
adc
dec
ss
add
mov
sahf
xchg
inc
xor
lret
mov
xor
adc
xor
cmp
gs
pusha
inc
fmuls
jge
inc
lret
mov
std
sbb
sbb
not
add
and
std
mov
xchg
test
ds
mov
jmp
cmp
or
inc
lcall
sub
loop
mov
add
aaa
std
rcl
jl
mov
cmpsb
hlt
mov
movsb
mov
pop
popf
pop
inc
xorb
dec
cmp
mov
xchg
lret
test
cmp
jnp
jae
sbb
jecxz
adc
pop
cli
ret
add
sarl
cli
repz
in
xchg
lret
flds
mov
sbb
cltd
vpaddb
data16
xchg
shll
cli
xor
mov
adc
fimull
cmp
call
into
aaa
push
push
xchg
or
mov
lods
dec
add
pop
test
jmp
inc
lahf
insl
jecxz
push
pop
push
push
cli
cmp
nop
out
push
pop
cmp
mov
xor
js
push
les
and
add
cs
xchg
push
insl
fdivl
xor
push
cmp
cmp
mov
mov
dec
je
scas
xchg
add
fsubr
lea
cmpsl
xchg
sub
js
inc
or
or
loopne
dec
pop
into
jo
int
lock
jmp
mov
jns
dec
ret
test
jmp
lds
or
into
xor
jnp
pop
hlt
cmpsl
add
sbb
xchg
add
cmpsl
push
mov
adc
jns
repz
mov
xorb
sbb
insb
les
pop
stos
sub
scas
xchg
test
jp
mov
aad
leave
xor
jb
push
pushf
cmc
loop
xchg
psrld
jge
sub
insb
lret
sbbb
loope
outsl
pop
inc
dec
jmp
movsb
ljmp
pop
mov
je
lods
mov
mov
jns
insb
repnz
int3
cmp
js
xchg
rol
mov
dec
xor
aam
aad
mov
jle
add
out
das
xor
fisttpl
leave
out
data16
out
mov
std
scas
adc
ljmp
jno
inc
and
adc
aad
mov
xor
cmp
inc
sbb
mov
or
scas
dec
xorl
fucomp
push
movsb
ja
popa
or
dec
pop
xor
cmp
push
imul
pop
js
inc
in
or
daa
jb
pop
rorl
lret
mov
inc
inc
pop
add
add
mov
aaa
xor
pop
cli
test
push
or
sub
push
and
jmp
inc
or
mov
scas
push
daa
clc
std
popf
cld
inc
sub
add
mov
outsb
shrl
arpl
call
sub
dec
jns
shll
fwait
xor
in
inc
andl
test
cwtl
jns
jbe
inc
push
filds
xor
push
push
fs
xor
push
fstl
dec
fcomip
xchg
dec
xchg
lods
or
push
ss
cmp
lods
add
cld
push
add
inc
addr16
enter
sti
mov
or
cmp
mov
inc
call
sub
andb
jge
jmp
push
jl
adc
jle
adc
push
sub
mov
sub
dec
jl
cmp
xchg
inc
inc
push
push
fnstcw
xor
dec
in
js
pop
xchg
cmp
lods
gs
and
out
xchg
ret
mov
test
sbb
sub
aad
out
sbb
dec
push
mov
in
jmp
leave
mov
jnp
mov
mov
pop
orl
sbb
mov
or
imulb
scas
mov
cs
xchg
push
cmpsl
mov
dec
ja
push
cmp
xchg
popa
dec
push
and
ss
xor
push
cmc
pop
pushl
push
add
cli
xor
mov
dec
xor
xchg
or
sahf
into
das
jle
sub
sbb
cmp
xor
sbb
fnstenv
or
add
dec
rorb
jne
lea
pop
imul
dec
push
push
into
inc
mov
lds
jno
fsubr
cs
movsl
pop
ror
fwait
mov
fxch
or
pop
div
stos
mov
ljmp
imul
mov
push
and
aad
gs
inc
mov
sbb
test
scas
dec
scas
sbb
in
add
out
shlb
jge
call
cmp
mov
mov
fsubs
push
mov
push
ret
sbb
cmc
loopne
outsb
xor
mov
out
shl
ss
shll
pop
cmp
adc
xchg
inc
cmp
sub
movsl
or
dec
test
inc
xor
cmpsl
loope
push
adc
cmp
mov
divb
xor
mov
jg
dec
lret
lods
inc
jp
xor
cmp
jo
or
rcll
push
mov
fwait
pop
sub
out
mov
imul
repz
mov
xchg
in
sti
aaa
jns
adc
jmp
jmp
mov
mov
inc
inc
testb
in
and
ss
pop
in
push
push
inc
xchg
nop
adc
adc
sub
add
je
fadds
mov
pop
cwtl
adc
xchg
data16
sbb
sub
repz
sbb
jmp
push
iret
pusha
mov
loop
add
dec
in
out
hlt
pop
in
lcall
xor
in
or
mov
addr16
in
shlb
sub
and
jae
pop
ret
pop
sbb
lods
sub
push
movsl
flds
pop
stos
lds
shrl
rclb
adc
insl
int3
mov
xor
xchg
nop
iret
cmp
cltd
insb
dec
cltd
outsb
fsubrs
in
fisttps
stos
mov
popa
rorl
mov
into
cmp
mov
sbb
cmp
mov
js
and
add
dec
ljmp
std
sarb
mov
dec
shll
mov
fidivrs
mov
cmpsl
dec
pusha
jle
clc
mov
subl
pop
pop
pop
add
pop
pop
and
aas
in
sbb
jne
scas
pop
or
mov
add
jg
push
xlat
lods
sub
mov
xor
jb
dec
jl
inc
push
sub
sbb
mov
fimull
or
mov
add
pop
pop
sub
add
inc
fcoms
test
jo
hlt
sti
sbb
cmpsl
mov
ret
push
adc
add
xchg
sub
insb
scas
outsl
adc
or
mov
push
jg
add
sub
in
fs
cld
lcall
push
pop
cs
mov
adc
or
inc
xor
negb
jl
int3
int
enter
jmp
loope
dec
sbb
jnp
cwtl
jp
outsl
cmp
sbb
jae
adcl
leave
repz
add
aad
sbb
lcall
pop
mov
aas
pop
sbb
jnp
in
cmp
das
inc
dec
repz
lods
jae
in
push
or
xor
call
daa
push
fwait
andb
mov
out
js
imul
xchg
jle
fdivs
out
xor
rolb
lret
mov
push
jno
push
leave
mov
mov
add
sub
mov
orl
lds
jb
mov
pop
out
and
mov
stos
sbb
mov
sahf
and
stos
mov
sub
inc
xor
pop
cmpl
fstpl
sub
shll
sbb
push
xlat
mov
out
mov
divb
lods
ret
push
xor
nop
bound
lret
xchg
and
test
mov
xor
pop
jge
pop
mov
cld
sub
fstl
aad
stos
insl
jne
pop
in
sub
scas
aaa
jecxz
dec
shll
insb
repz
dec
jecxz
sti
cmp
push
test
xor
pop
sub
std
sbbb
mov
mov
in
mov
sbb
inc
sti
inc
nop
fsincos
int3
iret
jmp
cmp
fwait
into
xchg
lds
popf
dec
in
repnz
push
sub
jb
jge
iret
add
mov
and
push
xchg
pop
inc
dec
dec
sbb
fwait
cmpsb
adc
leave
bound
sbb
mov
mov
pop
andb
mov
out
jge
icebp
icebp
xor
pop
scas
xchg
or
sbb
mov
adc
orl
inc
lods
ja
pop
push
push
leave
sbb
mov
or
outsb
dec
jbe
addr16
cmpl
sarl
push
pop
gs
mov
out
je
pop
xor
jp
lods
popa
push
out
data16
shrb
negl
lock
mov
call
add
add
sbb
sbb
and
rcll
mov
jp
outsb
xlat
ret
scas
mov
mov
aas
cmp
movsl
dec
pop
xlat
ret
cmp
adc
mov
lahf
aam
lods
pop
and
dec
loop
sub
and
adc
mov
sub
arpl
fldt
pushf
dec
shrb
je
or
out
mov
xchg
outsl
jnp
cli
fimull
lcall
in
outsb
add
mov
mov
adcl
dec
addr16
pop
lds
fs
jle
loopne
xchg
gs
mov
jno
push
movsb
in
rcr
sarl
push
lea
in
jae
pop
std
mov
popa
or
jge
xor
mull
adc
roll
test
loopne
dec
cmp
push
aad
mov
lea
pop
sbb
jno
pop
adc
enter
int3
sarl
repnz
ja
cmp
orl
push
fs
mov
push
mov
movsl
dec
in
adc
jae
add
mov
ret
sub
leave
mull
sbb
out
mov
sub
outsb
mov
cmp
in
movsb
jb
sbb
inc
cmp
jb
cmp
xchg
mov
loope,pn
je
mov
mov
mov
inc
out
insl
fdivrl
pop
mov
mov
xchg
leave
lods
ficoms
fdivp
in
inc
ss
add
sub
adc
test
movsl
sub
sahf
and
sbb
ja
lret
add
sbb
add
xchg
movsb
in
iret
pop
leave
iret
push
xchg
jecxz
mov
push
insb
imul
addl
pusha
sub
in
aaa
push
inc
pop
fldcw
cmp
rclb
dec
dec
mov
dec
jae
cwtl
fstps
mov
cmp
mov
in
roll
mov
cltd
jae
dec
lock
mov
adc
or
insb
lods
mov
aad
lods
and
sbb
jge
adc
push
loop
outsl
and
mov
and
pop
push
push
lds
ljmp
popa
lahf
and
jecxz
repz
jmp
cwtl
mov
stos
test
out
jns
adc
cmc
test
lret
fwait
lds
mov
sbb
cld
or
pop
or
xor
pop
orb
fldt
push
sub
sub
mov
popf
std
jl
popf
and
in
lock
nop
push
mov
push
and
push
inc
jno
mov
ror
cmp
add
xchg
dec
shr
jo
dec
sub
jb
or
rcrl
push
repnz
cmpb
lods
mov
fmull
xchg
int3
imul
adc
inc
sbb
subb
in
stos
lret
lcall
cli
mov
pusha
inc
xchg
stos
pop
or
test
and
enter
shll
mov
sbb
inc
movsb
sbb
or
ljmp
iret
ret
imul
std
lcall
cmp
out
iret
loop
sub
mov
sub
inc
push
add
xchg
mov
or
jo
stos
ljmp
sbb
mov
inc
daa
and
test
loop
iret
iret
subl
repz
push
fsubl
subb
jmp
iret
and
pop
insb
addr16
cmp
jns
mov
outsb
pop
outsl
push
std
inc
pop
push
sbb
cmp
sub
mov
adc
popf
nop
rclb
sti
fdivp
int3
mov
popl
aad
mov
sbb
notl
adc
cmp
dec
cltd
add
sbb
dec
cmpb
out
pushf
fnstsw
dec
movsb
add
imul
mov
insb
out
inc
lcall
mov
cmp
jne
stos
aaa
ljmp
lahf
je
lret
imul
jle
rorl
lret
stos
stos
pusha
pop
jne
dec
or
xchg
xchg
jb
dec
je
jp
js
fwait
sbb
fistpll
test
neg
cmp
repz
cmp
inc
call
or
sbb
movsl
arpl
das
rcll
mov
mov
imul
xor
jne
sarb
loop
push
mov
pop
push
inc
cmpsl
mov
ret
inc
inc
and
xchg
xor
fsubr
and
outsb
jbe
dec
fs
fcompl
out
lret
ss
rclb
mov
xor
lds
xchg
cmp
mov
cmp
pop
and
pop
inc
mov
bound
daa
and
ds
adc
or
sahf
clc
in
jmp
or
loop
xchg
lahf
jbe
xor
fcomip
xlat
test
mov
or
jnp
aaa
lock
leave
sub
daa
movsb
in
repnz
aaa
dec
loope
sbb
inc
dec
scas
cmp
js
out
pop
mov
push
loop
jno
dec
lcall
bound
scas
lods
cltd
ljmp
sbb
bound
outsl
push
in
pop
daa
stc
fiadds
xchg
mov
add
movb
clc
sbbl
xor
xor
gs
fdivr
lret
in
sbb
ja
lock
mov
out
sub
dec
or
sbb
pop
dec
dec
test
outsb
ja
sbb
xchg
lret
dec
in
jbe
jge
in
into
stos
mov
push
ja
fucomp
nop
mov
gs
or
int3
ret
cltd
pop
inc
jge
insb
inc
cwtl
insl
cmpsb
cmp
xlat
mov
mov
idiv
scas
mulb
xchg
pop
jl
mov
mov
fwait
jo
mov
push
jb
jp
jb
sbb
pop
shrb
stc
xor
push
fistpl
sbb
out
shrb
pop
mov
jle
xor
xor
sbb
push
dec
sub
addb
bound
push
mov
xchg
sti
cs
xchg
stc
adc
inc
or
pop
mov
sbb
cmp
mov
or
scas
and
push
mov
bnd
lea
repnz
inc
aad
or
loopne
mov
insl
and
xchg
gs
adc
dec
add
imul
mov
dec
mov
outsb
lcall
ljmp
xor
sbb
sub
adc
xor
pop
mov
mov
jp
add
and
int
sub
ljmp
jecxz
or
lcall
mov
xchg
pop
jb
jg
mov
push
mov
mov
in
lock
push
add
jbe
arpl
push
pop
inc
and
pop
movsl
jb
mov
lock
xchg
push
jmp
adc
sub
pop
pop
jne,pn
test
xchg
sahf
mov
fadds
pusha
in
mov
fimuls
xchg
push
cld
scas
xchg
jbe
mov
push
sbb
cmpsl
fsubp
dec
aaa
pushl
lahf
inc
fdiv
test
xchg
stos
mov
sub
jg
inc
sub
cld
cmp
and
add
dec
stos
sub
out
or
push
adcl
jae
dec
std
push
sub
andb
push
jne
mov
xlat
lods
mov
mov
mov
cmp
loop
nop
inc
mov
lds
xchg
dec
xchg
lods
imull
mov
dec
and
adc
jp
movsl
jbe
outsl
aaa
or
ja
loopne
mov
inc
sub
push
and
in
push
or
xchg
xor
sahf
dec
xor
jl
inc
popf
jmp
sarb
xchg
push
mov
mov
test
fcmovb
mov
mov
sahf
shr
fdivr
xchg
divb
mov
xor
rolw
xchg
loop
fbld
icebp
mov
test
xor
xor
sub
cmp
inc
bound
loope
and
mov
imul
inc
mov
insb
repz
iret
jae
lea
lahf
cmp
or
adc
add
sub
mov
jb
push
fsubrl
or
push
jb
lahf
aad
push
icebp
adc
and
add
sbb
pop
nop
adc
shlb
fsubs
mov
xor
jmp
in
cmpl
adc
aam
sub
fstpt
test
push
aam
lcall
cmpsb
and
loope
push
or
cmp
outsb
mov
pop
sbb
xchg
adc
and
xor
les
mov
mov
mov
push
out
les
lods
pop
movb
adc
mov
je
cmp
jmp
mov
lcall
imul
and
dec
sti
jecxz
test
mov
and
enter
fldl
imul
jl
loopne
adc
xor
cs
cltd
ljmp
mov
mov
inc
jmp
push
mov
or
mov
lods
into
cltd
sub
mov
mov
sbb
sbb
cmpsl
sbb
lods
xlat
orl
jmp
fnstenv
outsl
ret
xor
outsb
jno
jmp
pushf
add
pop
push
push
stos
mov
pushf
or
dec
and
fistpl
std
push
cmp
scas
xchg
pop
mov
out
mov
dec
jnp
cmp
mov
sbb
das
pop
xor
mov
test
imul
mov
rcr
pop
addr16
lcall
cld
popa
imul
mov
outsb
cmp
cmc
jge
xor
test
or
sub
mov
pusha
mov
cmp
mov
jge
or
loop
sbb
dec
sbb
inc
andb
push
push
inc
mov
movsl
jns
imul
mov
and
arpl
iret
stc
mov
std
cmpsb
fimuls
and
stc
mov
xchg
xor
cmc
cmp
add
aam
cmp
pop
mov
hlt
inc
outsl
sbbl
dec
popa
idivb
xchg
pop
push
cmp
outsb
xchg
stc
pop
lods
pop
adc
out
mov
lock
icebp
cmpsb
adc
add
xor
inc
sub
es
lahf
andb
xor
push
cmpsb
dec
aad
mov
out
jae
ja
stos
push
arpl
out
fldcw
ja
clc
jne
jb
mov
ljmp
sub
pop
enter
jge
aas
popa
ss
xchg
leave
fcmove
adc
call
fwait
mov
pop
push
and
ficoml
jp
mov
mov
inc
cmp
xchg
pushf
mov
lcall
fdivl
stc
ret
ret
jns
xchg
je
mov
jae
mov
stos
out
pop
insl
mov
push
or
cmpsb
ja
fisubrl
cli
jle
shlb
dec
mov
stos
inc
mov
mov
pusha
outsl
dec
and
push
jecxz
xchg
std
insl
nop
gs
push
pusha
dec
adc
xchg
jo
mov
inc
cmp
and
sbb
shlb
fisttps
or
dec
jge
xor
push
das
adc
popf
pop
push
idivl
sarl
mov
or
aaa
les
cld
fisttpl
jne
add
mov
stos
scas
lret
rcrl
xchg
imul
and
mov
fsts
stc
jg
dec
cmpsb
mov
sarl
xor
and
push
aam
push
cmp
std
sub
out
jp
jae
rorb
dec
jne
je
push
int
sbb
sbb
pop
pushf
dec
in
pop
inc
mov
jle
lret
leave
push
pop
fadd
push
mov
daa
movsl
cmp
inc
popf
add
pop
jmp
lock
popf
sti
mov
orb
jbe
call
pushf
add
cmp
xchg
sbb
mov
push
and
cmp
hlt
fnsave
mov
int3
or
xchg
jns
sub
stos
mov
andl
rcl
das
in
add
sub
test
and
ret
sbb
aas
enter
inc
sbb
cwtl
fwait
jb
fisubs
push
jge
xchg
and
call
push
push
push
xchg
outsb
sbb
repnz
or
mov
push
jge
outsl
mov
lcall
jnp
popa
lret
mov
mov
repnz
outsl
pop
divb
fldl
jns
fdivl
pop
fs
mov
leave
dec
dec
movsb
inc
rcr
test
popf
inc
insb
dec
nop
xchg
xor
push
std
mov
inc
add
push
popf
pop
out
divb
cmp
aaa
add
mov
push
dec
into
cltd
test
in
rorl
lcall
cs
dec
adc
add
fildl
cmp
add
repz
aad
pusha
adc
pop
jp
push
sub
and
add
fists
mov
push
xor
outsb
in
outsl
or
sbb
mov
pop
rclb
and
loopne
orb
cmc
pop
push
out
nop
add
imul
add
inc
pop
leave
adc
cli
mov
xor
test
inc
leave
lock
xchg
push
pop
pop
push
loop
test
mul
stc
pop
cs
and
mov
sbb
outsb
sbbb
jp
xlat
addr16
inc
std
mov
push
push
mov
dec
test
ss
adc
scas
test
stos
adc
or
sub
inc
aam
dec
addb
addr16
dec
pop
xchg
dec
flds
cmpsb
nop
and
pop
jo
or
dec
test
xor
mov
je
sub
or
fwait
test
add
sbb
cmpsb
popa
add
mov
mov
mov
push
cli
pop
push
sub
scas
icebp
icebp
xchg
lods
outsb
sbb
clc
lds
popf
lods
adc
fcoms
mov
sbb
mov
repnz
dec
icebp
cmpsl
lods
sbb
inc
rorl
xchg
fistps
push
addb
out
jns
test
fsub
pusha
sub
jae
fdiv
mov
insl
pop
pusha
lcall
pushf
push
sbb
pop
enter
dec
xor
xchg
je
int
mov
cmpsl
inc
cmp
add
push
dec
sub
movsl
jecxz
xor
or
sets
aaa
scas
lret
cs
call
inc
jo
repz
jmp
loopne
mov
lret
dec
jo
and
fcmovnbe
xchg
cmp
dec
push
mov
cmc
mov
adc
dec
test
mov
jle
iret
in
lea
ss
repz
lret
or
or
or
mov
sbb
pushl
js
cmp
inc
hlt
popa
and
aad
test
filds
out
pop
sbb
mov
or
icebp
cwtl
jnp
xor
lods
mov
xor
mov
cwtl
xor
jp
daa
sbb
dec
rol
xor
push
pop
xchg
int
call
xchg
jl
dec
sbb
enter
pop
adcb
jo
adc
pop
outsb
mov
jne
shl
sbb
pop
adc
bound
clc
cmp
add
sub
subb
and
arpl
cmpsl
ret
jno
xor
jmp
jecxz
jle
add
out
mov
or
and
add
inc
pop
pop
in
dec
push
inc
xor
push
stos
movsl
data16
rol
iret
add
lods
cmpsb
imul
mov
sub
mov
into
test
mov
jle
repnz
and
mov
dec
out
imul
pop
push
dec
mov
jl
sti
out
ret
sbb
fdivl
mov
xchg
loop
dec
icebp
mov
sti
mov
jmp
roll
push
add
and
imul
jae
mov
jnp
hlt
jb
sbb
sbb
adc
mov
je
fisttpl
jmp
pop
inc
push
or
std
pop
xchg
dec
jle
repnz
push
xor
pop
ret
jmp
push
js
and
jns
jl
xorb
jmp
mov
mov
sti
dec
je
xor
outsb
int
push
std
jle
test
mov
add
scas
xchg
stos
or
cmp
mov
or
sub
test
and
sbb
pusha
repnz
enter
in
mov
sbb
pop
and
mov
sub
sahf
repz
in
jle
push
jbe
inc
xchg
in
std
jg
adc
cltd
ret
cli
and
scas
jnp
lea
outsb
mov
test
push
aad
fsubrp
sbb
xor
mov
outsb
sbb
mov
xchg
fcmovnu
cmpsb
push
rorb
jo
fmul
inc
inc
bound
sub
push
inc
adc
lock
sbb
push
loope
cmp
jecxz
jae
and
sub
cltd
and
mov
mov
or
lahf
std
lret
pop
into
or
push
mov
int3
cmp
jbe
int
adc
pop
push
jne
add
push
and
mov
js
adc
icebp
sbb
lock
cmp
out
movsl
and
jns
out
jo
adcb
cmpl
idivl
inc
mov
jbe
xorb
dec
stc
jne
aam
js
out
hlt
ret
or
push
jne
insl
repz
cmc
mov
mov
sbb
adc
data16
jp
adc
rorl
popl
loopne
xor
popa
pop
std
mov
gs
js
cmc
in
add
filds
cmp
lock
push
pushf
jmp
test
insb
dec
push
cmp
mov
add
lock
lock
test
lret
rorb
push
jmp
xchg
push
mov
pop
inc
sbb
jno
lret
aas
je
xor
nop
mov
int
push
daa
ficompl
xor
outsb
stc
iret
in
or
cltd
pop
cmpsb
stos
mov
jle
mov
add
js
add
mov
xor
jmp
jns
roll
push
loopne
mov
imul
rolb
pop
mov
jge
jne
jl
test
xor
push
dec
repnz
clc
andl
insb
xchg
fisttpll
frstor
inc
iret
jl
mov
insl
cs
dec
sarb
stos
push
out
dec
jg
dec
sub
dec
mov
jl
push
nop
in
sub
cs
and
inc
jmp
mov
xchg
sbb
jle
push
mov
ret
shrb
je
or
xchg
sub
inc
xor
lds
dec
sub
fcomip
movb
lock
adc
inc
push
sub
adc
mov
pop
xor
or
dec
sbb
adc
mov
or
xchg
pop
mov
mov
dec
dec
arpl
ret
xchg
repnz
sub
test
dec
scas
inc
mov
outsl
sbb
and
adc
cmp
dec
and
in
jae
jg
cwtl
sub
stos
mov
cmp
mov
jp
mov
pop
fmull
shlb
xor
adc
cmp
push
out
lret
fdivs
mulb
aas
test
pop
pop
sbb
scas
dec
test
pop
sti
mov
insb
in
pop
mov
fisubs
into
push
mov
mov
jbe
out
dec
in
aad
scas
aad
mov
test
outsb
push
mov
test
sbb
mov
ss
sub
push
pop
out
jl
dec
loop
icebp
mov
bswap
repz
pop
jge
and
lret
jg
xchg
popa
orl
mov
mov
stos
adc
sub
repnz
xchg
adc
inc
cmp
push
add
inc
call
lea
test
mov
sbb
mov
push
repz
cmpsl
lea
aam
shr
mov
repnz
je
inc
pop
push
cmovg
dec
sbb
inc
popf
mov
pop
lcall
ljmp
mov
or
sub
jae
ret
or
fucom
sbb
sbb
sti
fdivp
lcall
ljmp
leave
adc
pushf
or
mov
rcl
cmpsl
das
das
paddsw
fcompl
pusha
enter
dec
xchg
add
add
mov
std
add
outsl
scas
scas
aaa
mov
les
sbbl
inc
scas
clc
mov
lods
add
fisubs
es
sbb
jmp
outsl
and
push
ljmp
or
cld
push
adc
push
cli
loope
cmp
movsb
fisubrl
out
and
xor
out
fsubl
mov
insb
mov
mov
sub
jne
je
xlat
xor
cmpsl
adc
hlt
mov
lret
sbb
jecxz
sub
sub
insl
stos
push
int
jle
or
cmp
or
pop
push
dec
mov
sarl
stos
fwait
mov
aas
cmpsb
cmpsl
andl
mov
add
pop
jecxz
in
mov
inc
mov
push
jg
jns
sbb
leave
xor
push
pop
jg
jg
inc
pop
shrl
add
int
xchg
fcomps
xlat
sbb
or
js
mov
push
dec
xchg
xor
cmpb
call
call
in
out
mov
pop
inc
xor
sarl
cmc
sbb
fbstp
add
push
ds
stos
push
inc
adc
insb
dec
dec
test
add
xor
add
xchg
rcll
cmpsl
push
pop
cld
push
out
sbb
hlt
adc
xchg
pop
test
call
xchg
mov
xchg
push
bound
xchg
into
xchg
and
insb
in
xchg
shlb
lods
add
jae
repz
daa
jecxz
push
divb
xor
out
insl
test
inc
imul
jg
adc
or
popa
aad
imul
add
adcl
in
sub
mov
and
adc
out
popl
adc
test
xor
addr16
mov
and
hlt
and
arpl
mov
out
jg
pop
mov
lahf
dec
std
sbb
outsb
mov
into
shr
call
fucomi
and
cmp
ss
mov
pop
out
mov
cmp
cmp
icebp
cmp
inc
jns
out
jge
mov
rcl
pusha
rolb
clc
jae
push
add
jae
add
jg
ja
dec
into
push
lea
push
popa
pop
mov
sbb
sbb
sbb
out
data16
pushf
sti
xor
jle
or
add
xchg
out
shl
ror
inc
mov
or
push
into
lret
inc
lahf
mov
or
movsl
imul
ret
outsl
lds
xchg
inc
pop
xor
into
xor
test
adc
bnd
dec
mov
or
jle
lds
fldenv
mov
fldt
ret
loopne
xor
sub
rorb
cld
ljmp
and
test
dec
sub
ret
faddl
fmull
cmp
call
in
fstp
insl
inc
mov
rcl
paddusw
mov
xchg
js
sarl
aaa
sub
in
imull
jbe
out
jbe
test
push
pop
xor
and
push
add
adc
imul
test
push
lock
lds
adc
rol
into
loop
cltd
mov
jecxz
add
push
cmp
mov
insb
imul
cltd
jae
jle
fbstp
mov
ror
mov
int
and
mulb
dec
pop
inc
jne
mov
pushl
jno
push
in
scas
pusha
adcl
pop
xor
loop
mulps
insb
hlt
push
cli
dec
mov
dec
out
inc
dec
imulb
icebp
fistpl
aam
aaa
shrb
adc
in
ret
flds
pop
add
out
mov
ss
push
int
pop
jecxz
stos
lret
flds
mov
mov
sub
add
or
gs
mov
jmp
or
cmpsl
int
sbb
xchg
dec
repnz
dec
hlt
pop
movsl
adcb
inc
subl
or
inc
es
clc
mov
cs
repz
inc
arpl
mov
mov
xor
insb
fldcw
pop
or
or
cmpsb
js
jae
hlt
push
lock
push
or
mov
cli
add
cmp
mov
notl
pop
iret
adc
and
inc
fs
lods
jae
mov
inc
bound
cwtd
cwtl
xchg
add
xchg
mov
pop
pushl
sub
jp
mov
push
loop
daa
add
sbb
inc
lcall
lretw
xor
scas
or
or
iret
sahf
and
mov
push
fyl2x
push
xchg
cmpsl
cmp
rcll
push
jg
jno
adc
sbb
adc
shlb
jge
sub
outsb
mov
cmp
or
cmp
mov
jno
mov
and
lea
lods
lods
pop
or
aaa
pusha
movsl
jno
xor
in
sahf
push
mov
cmp
sub
xor
adc
filds
jl,pt
div
mov
das
sub
out
hlt
lea
out
push
les
mov
push
aad
mov
int3
jb
sbb
iret
data16
mov
in
movsb
inc
sub
cli
sub
cli
cld
jp
xor
add
hlt
int
pop
std
nop
leave
movsl
mov
or
leave
insl
in
and
cli
out
cmp
xchg
jecxz
jmp
lock
gs
mov
xor
dec
fistpll
test
mov
push
mov
dec
jge
scas
push
pop
sub
mov
lret
cmpsb
in
and
sbb
setp
fcomi
cld
int3
or
inc
push
mov
shll
inc
jne
xchg
add
push
mov
ret
in
and
adc
push
loopne
mov
jp
fldt
and
mov
jg
call
arpl
pusha
add
pop
adc
push
jmp
sbb
inc
cli
sbb
push
aad
lds
dec
adc
push
inc
popl
pop
mov
std
push
push
pop
cwtl
mov
shlb
rcl
and
mov
sub
adc
enter
lods
mov
insl
push
fcompl
ret
xchg
cli
enter
ret
cmpsb
inc
dec
jmp
dec
mov
adc
sbb
movsb
fcomp
mov
cmpsb
mov
or
mov
cld
daa
imul
xor
dec
out
mov
pop
push
pushf
out
inc
xchg
sbb
mov
or
lods
and
out
shrl
int
es
pop
inc
popa
insl
xchg
dec
xchg
daa
iret
mov
cmc
inc
mov
call
stc
jg
push
mov
jne
call
imul
call
dec
cmp
xor
adc
adc
cmpsl
push
push
cld
xlat
inc
cmc
sbb
pop
inc
mov
fistl
sbb
fcoms
jl
dec
cmpsl
stc
dec
cmp
pushf
test
out
andl
mov
mov
inc
scas
int
and
shlb
mov
inc
xchg
mov
pusha
inc
cmp
mov
fldl
push
ljmp
lret
xchg
rcll
jle
inc
mov
aaa
test
outsb
jae
cmc
and
mov
push
mov
fstl
mov
jg
push
jno
dec
xchg
scas
jmp
and
mov
pop
ljmp
cmp
div
je
mov
push
fisubrl
das
imul
out
repz
xor
jo
testb
xor
sub
pop
call
lods
xchg
fsubs
xor
in
and
or
loopne
pushf
inc
xlat
or
sub
lcall
sbb
fwait
ljmp
test
icebp
sbb
sub
scas
and
xchg
fisttpll
stos
adc
dec
sub
es
in
inc
jo
arpl
je
pushf
dec
jae
scas
mov
pushl
and
cmp
cmp
inc
push
xor
test
gs
repz
mov
dec
pushf
dec
jecxz
dec
dec
pop
sub
jecxz
sbb
lret
cmp
fistl
rcl
push
cmp
jbe
pop
fists
sub
xlat
enter
mov
mov
inc
int
loope
jae
pop
mov
push
ss
fcmovne
mov
aad
aam
dec
mov
jnp
cld
sbb
in
ret
dec
push
jle
mov
push
js
mov
sub
fisttps
cmpsb
push
inc
xlat
fisttpl
shll
lods
and
sbb
stos
mov
jb
lret
sbb
sahf
loop
ss
cmc
push
xchg
mov
adc
rcll
pop
mov
sbb
dec
mov
jbe
into
lea
pop
test
mov
int3
jnp
or
push
jmp
push
test
jmp
popf
mov
nop
xor
mov
mov
add
dec
sarb
and
mov
hlt
lcall
rclb
mov
rcr
or
cmpsl
ret
sbb
push
outsl
in
pop
rcll
xchg
mov
sbb
and
mov
or
inc
shrl
in
clc
leave
jecxz
inc
and
iret
sbb
add
dec
call
mov
arpl
sub
imul
fucomp
add
movsl
scas
fs
stc
or
xchg
dec
mov
loop
pop
je
add
psrlq
inc
fwait
xchg
pop
loopne
mov
rorl
pop
into
in
push
loopne
or
lds
xorl
lods
lret
or
daa
loope
push
adc
lret
out
cs
into
aam
faddl
out
rorb
pop
or
leave
je
sarl
sbb
add
lret
out
pop
nop
roll
inc
or
xchg
fwait
in
daa
jb
bsf
das
sub
xor
mov
inc
mov
cmpsb
shlb
jp
lock
cmpsl
jmp
mov
cmpsb
mov
xchg
aad
testb
sti
decl
aaa
cmp
in
in
pusha
xchg
addb
shll
cmp
stos
out
jne
pop
mov
int
push
clc
les
and
push
adc
mov
add
sahf
xlat
jno
das
dec
dec
out
or
sub
add
push
xchg
bound
pop
stc
sbbb
bound
aaa
filds
xor
xlat
leave
sbb
repz
fucomi
scas
pop
les
jmp
mov
or
jo
add
fcoml
es
mov
packsswb
mov
jp
jb,pt
negl
adc
sub
adc
or
cvtpi2ps
out
and
fldenv
push
and
jp
test
mov
jne
arpl
adc
icebp
cwtl
push
sti
lea
ljmp
xor
enter
int
fidivrl
call
jne
mov
mov
push
loop
arpl
aam
outsb
cli
mov
dec
pop
and
dec
mov
out
scas
test
movsl
pushf
pop
shll
xorl
sbb
cmp
andl
xchg
outsb
into
or
xchg
jle
test
sarb
or
push
xchg
jle
hlt
adc
out
movl
inc
xchg
pushf
xchg
or
fwait
leave
pop
lea
jno
loop
push
pushf
inc
cwtl
pop
dec
sbb
jg
movaps
dec
insb
or
mov
cmpsl
sbb
or
call
mov
sbb
nop
push
cmpsl
lret
xor
rcrl
mov
mov
mov
aam
aas
pop
repnz
jmp
xchg
clc
test
inc
dec
xchg
mov
jae
flds
lcall
mov
lea
or
push
sub
jno
push
xor
sub
mov
jmp
push
ret
decl
test
loopne
fcoml
frstor
jp
xchg
cmp
push
ret
dec
add
ja
xlat
pop
push
mov
xchg
daa
loop
pop
mov
xor
and
int
mov
sarl
mov
mov
pop
cli
popf
rorl
inc
test
scas
mov
aaa
aad
in
xchg
mov
mov
add
inc
dec
add
jp
popa
rclb
xor
pop
sbb
dec
pop
pop
push
pop
xor
jb
inc
int3
lahf
push
lock
inc
sbb
std
addb
sahf
xchg
fbld
out
mov
xor
adc
jb
in
push
ret
pusha
insb
sbb
mov
xchg
adc
jge
mov
cmpsl
lret
ud0
add
mov
pop
xchg
push
insl
add
dec
xlat
imul
stc
imul
push
jo
imul
jb
je
out
adc
movsl
pop
clc
lcall
cmp
cmp
push
rorb
pop
or
dec
sub
cmpsl
fcompl
inc
ss
jge
add
scas
fisubl
xchg
inc
sarl
inc
adc
in
fsubr
imul
pop
rcr
bound
jnp
sub
xor
dec
rorl
insb
imull
and
loope
pop
or
mov
adc
pop
add
mov
jnp
jmp
arpl
or
out
lret
jbe
fldenv
into
cmp
adc
push
and
add
pushf
loope
mov
sub
in
test
mov
daa
mov
sbb
shrl
lea
aaa
ljmp
and
add
das
inc
scas
xchg
cwtl
es
mov
add
mov
ret
mov
pop
fdivl
enter
xor
stc
adc
addr16
rclb
test
add
scas
mov
xchg
adc
bound
mov
das
lret
mov
ret
lret
rcrb
lahf
stc
jge
in
push
pop
xor
aaa
sbb
push
dec
insb
xchg
loopne
push
and
jbe
sbb
jnp
pop
inc
rclb
insl
icebp
scas
dec
add
jle
data16
xor
push
sub
fisubrs
aam
mov
test
iret
cld
push
xchg
sbb
mov
and
pop
mov
jl
inc
ja
and
push
sbb
and
orl
dec
mov
mov
lret
mov
push
sub
lods
outsl
push
jge
movsb
push
andb
sbb
arpl
adc
push
push
jle
xchg
mov
adc
adc
adc
add
int
sbb
mov
insl
add
add
les
scas
fistpl
popf
or
sti
pop
pop
xchg
inc
or
add
push
adcb
aas
mov
and
mov
xor
xchg
nop
mov
mov
nop
cmp
sbb
leave
jb
cwtl
push
mov
arpl
in
sti
inc
fwait
push
shlb
xchg
adc
dec
das
pop
mov
dec
jb
jl
cs
xorb
mov
mov
dec
sub
out
pop
mov
loope
xchg
cld
dec
int
and
and
xor
pop
out
ljmp
mov
jae
das
cmp
pop
inc
scas
jnp
push
cli
pop
ljmp
lea
cmp
xchg
out
sbb
ja
test
jle
mov
clc
sbb
in
pop
pminsw
inc
push
enter
jp
sub
shl
popa
dec
push
and
mov
mov
into
jg
adc
mov
pop
pop
pop
loop
test
les
mov
sbb
fsubl
push
xor
jecxz
jmp
jns
mov
in
jbe
mov
jle
pop
out
mov
jl
loopne
pop
add
and
das
test
dec
mov
ds
aad
lock
cmpsl
lods
fidivs
xchg
divl
cld
cli
mov
fldt
xor
jl
pop
or
jo
andl
or
or
add
lret
sub
add
fdivrp
sahf
enter
cmpl
mov
ljmp
iret
out
or
scas
scas
stos
sub
sbb
xlat
xor
rcrl
and
mov
cld
roll
lret
xor
pop
cwtl
ret
aaa
add
cld
movsb
push
jge
gs
pop
incb
mov
mov
xchg
cs
cmp
loopne
in
stos
mov
xor
xchg
test
and
mov
aaa
push
pop
addb
jmp
popf
mov
fbld
loop
scas
std
cmpsl
repnz
mov
cmc
xor
stos
pop
and
mov
xor
in
cltd
daa
movsl
add
andl
pop
fcomps
dec
lods
cli
cld
lcall
in
and
xchg
insb
pop
adc
xchg
add
mov
sbb
xor
mov
cmpsl
test
cmpsl
shll
stos
in
fnstcw
xchg
fcomip
iret
repnz
enter
scas
sub
leave
test
fnstenv
les
sub
mov
push
push
and
sub
and
cmpsl
mov
das
cmc
pusha
ja
movsl
push
rcl
xor
leave
lret
dec
sbb
int3
cwtl
shrl
out
scas
leave
pop
jne
pause
sub
xor
std
sbb
xlat
inc
mov
dec
mov
pop
into
das
cmp
test
dec
lock
sahf
push
lahf
aas
std
xor
xchg
jge
mov
ss
jne
out
orl
xchg
push
aas
jmp
and
mov
pop
xor
mov
aam
jmp
xchg
xchg
outsl
push
jae
call
jo
sub
outsb
push
jp
cmp
mov
xorl
jbe
rcr
push
cmpb
dec
aas
cmc
mov
mov
inc
add
pop
test
orb
xchg
add
mov
mov
xchg
inc
addr16
jmp
decb
mov
js
mov
push
adc
leave
sbb
or
shlb
adc
ret
push
sub
and
movsb
js
orl
sahf
push
mov
sub
stos
pop
adcb
inc
inc
shr
pop
or
dec
push
pop
jmp
int3
mov
das
out
xchg
xchg
jmp
sbb
repz
pop
xchg
sub
mov
lret
nop
inc
xchg
sub
shr
fidivrl
hlt
mov
xchg
fstpl
stos
pop
and
mov
fdivs
lcall
cmp
inc
and
sub
nop
sbb
stos
repz
adc
jmp
sub
xor
pusha
adc
inc
xchg
test
popa
xor
int3
mov
enter
mov
stos
mov
xlat
mov
inc
push
inc
and
mov
pop
testb
cmp
cs
sub
jecxz
out
shrb
xchg
mov
data16
and
in
lahf
daa
insb
out
mov
and
pop
xchg
clc
xchg
rcll
iret
or
daa
jbe
jle
push
out
ret
jp
adc
add
lahf
push
dec
daa
jge
push
stc
ljmp
insl
out
pop
and
iret
pop
push
inc
popa
and
test
cmp
loope
and
mov
rolb
rcll
ds
aaa
lods
repnz
fimull
pop
outsl
add
or
sub
xorl
out
push
jno
aam
jnp
pushf
jle
lds
insb
fcmovbe
icebp
jb
cmp
repnz
mov
mov
inc
pop
lret
cmpsb
in
dec
mov
cmp
ljmp
pop
int3
cmpsl
and
mov
xlat
push
inc
lahf
adc
xchg
cmpsl
mov
pop
xchg
movsl
push
movsl
mov
imul
lcall
pop
ds
fldl
sbb
lock
push
inc
cmp
push
adc
xchg
lods
mov
leave
scas
mov
ljmp
adc
cmp
sbb
push
idivb
lahf
inc
jecxz
imul
adc
dec
dec
out
mov
jmp
lahf
out
xlat
mov
incb
std
and
push
pop
mov
mov
cli
mov
bound
xorb
ficompl
adc
hlt
adc
mov
dec
bound
pop
xchg
fistpl
out
mov
cmp
sbb
push
and
inc
mov
xchg
xor
pop
ret
mov
subb
xchg
jo
or
mov
sbb
mov
and
xchg
test
dec
xchg
mov
fcom
sub
jbe
add
or
push
ficomps
pusha
xchg
fildll
inc
ja
cmp
inc
hlt
inc
push
out
rorb
push
sti
insb
cs
push
cmpsb
testb
fildl
outsl
call
sub
addr16
insl
fdivs
gs
push
lods
lret
arpl
into
push
in
nop
ljmp
sahf
icebp
cmp
loope
dec
push
out
mov
sbbl
xchg
push
xchg
icebp
xlat
sti
mov
jno
cmc
adc
aas
stc
xchg
dec
fimuls
incl
es
push
or
or
sbb
push
push
dec
add
decb
hlt
adc
int
sbb
adc
xchg
clc
push
shl
push
decl
xchg
sub
mov
imul
mov
mov
lahf
mov
lcall
lock
loop
subb
cmp
fs
lret
inc
push
aad
mov
and
aaa
add
adc
rcl
or
inc
test
stc
mov
inc
xor
inc
jo
cmp
cltd
push
outsb
call
jo
xchg
bound
lea
jmp
pushf
mov
cmp
push
cli
mov
xlat
mov
cmp
pop
insb
push
cwtl
or
mov
cmp
sbb
cmc
scas
sti
pop
data16
fdiv
lea
fstpt
push
push
and
std
push
gs
jl
push
sbb
fwait
adc
adc
mov
cwtl
subb
loopne
in
pop
dec
dec
cmpsl
sbb
das
pop
fisttpll
aaa
dec
insl
test
js
stos
adc
or
fadd
cmpsb
jge
pusha
outsl
cmpsl
inc
xchg
cmpsl
inc
adc
add
jb
pop
enter
sub
jg
repz
push
out
cmpsb
mov
rorl
mov
inc
movsl
sbb
movsl
xchg
pop
xor
repnz
ljmp
fs
enter
or
out
int3
sti
es
or
rorb
lret
outsb
imul
mov
imul
xor
lds
movsl
daa
mov
add
cmp
mov
xor
and
push
sub
movsb
das
inc
loope
add
pop
ret
jle
adc
mov
ss
out
mov
aad
mov
mov
mov
in
xchg
test
pop
pop
imull
pusha
pop
addl
add
outsb
clc
lret
sub
cmp
lahf
push
inc
sub
mov
and
push
xor
das
mov
in
pop
loop
mov
jne
cmp
in
jb
loope
iret
cld
inc
push
insl
inc
lcall
cmpsl
les
in
mov
out
mov
pusha
jl
xchg
add
enter
add
cmpsb
jle
popf
outsb
insl
push
test
bound
cmc
test
sbb
outsb
mov
cmpl
push
push
inc
push
fadds
xchg
sbb
cmpsb
mov
and
pop
and
cld
cmp
pusha
rorl
das
xor
cmp
dec
xchg
pop
cmc
cmp
insl
repz
rep
jnp
cltd
xor
popf
pushf
movsl
pop
arpl
outsb
mov
push
sbb
lcall
call
mov
test
call
scas
jo
int3
or
in
inc
fwait
dec
cli
mov
mov
mov
imul
cmp
subl
xchg
push
xchg
adc
outsl
mov
mov
out
and
rorl
xor
shlb
imul
pop
and
std
in
cmp
stc
fsubrs
dec
sub
jg
cmp
jg
lock
inc
adc
sbbl
test
lahf
pop
repnz
sbb
cmp
pop
and
test
dec
jb,pt
out
aad
scas
out
sub
xchg
insl
push
jnp
adc
popf
and
movsl
and
stos
pop
mov
cmpsl
add
scas
and
mov
setb
sbb
sti
mov
push
int
jecxz
dec
cmp
mov
int
dec
adc
les
stc
lds
insb
outsl
pop
push
push
push
sbb
push
icebp
add
lock
es
popf
mov
jmp
jecxz
dec
movsb
cmp
popa
cmp
cmp
das
mov
push
lret
call
mov
mov
add
inc
sbb
cli
mov
pop
ja
cmp
pop
sub
pop
add
jno
cmp
push
test
inc
popa
cmp
mov
or
jecxz
pop
in
outsl
mov
add
call
popf
sub
mov
andb
xchg
or
cwtl
out
push
sti
sub
jbe
inc
ret
sub
mov
addb
cli
scas
imul
pop
cmp
in
addr16
xor
hlt
mov
xchg
sbb
cmc
mov
sub
cmp
insl
stos
jns
mov
loope
or
out
in
lret
into
push
movsl
push
add
xchg
push
push
sub
stos
shll
repz
fiaddl
lret
push
mov
sbb
mov
and
popf
push
imul
mov
xchg
dec
sub
sub
inc
ret
xor
xchg
cmpsl
xchg
xchg
sub
aam
mov
jle
jmp
adc
addr16
sub
jns
push
sub
and
hlt
js
popf
pop
mov
push
mov
outsb
mov
jle
or
adc
mov
rcll
aam
or
jmp
ds
cwtl
adc
pop
or
ffreep
in
jmp
mov
add
push
push
ret
sub
sbb
into
pop
arpl
ja
fsub
push
testb
jmp
rcll
dec
pop
daa
int3
mov
mov
mov
outsb
xor
or
jle
popa
movsb
xor
xchg
jno
xlat
stos
in
lock
or
int
xor
mov
out
jecxz
pusha
sbb
aas
mov
push
fbstp
pop
scas
push
adc
lret
sub
xchg
je
xor
mov
fnstsw
movsb
std
or
cmp
fstp
xchg
mov
ret
imul
outsb
or
test
bound
lock
inc
jo
inc
js
sbb
shlb
lahf
aas
outsl
or
mov
push
pop
and
clc
add
mov
cmp
xlat
ljmp
aas
inc
mov
mov
inc
inc
iret
out
xor
or
in
sbb
sbb
inc
adc
shlb
and
add
mov
movsl
and
xlat
ds
push
push
xchg
and
xor
mov
jecxz
dec
fsubrl
in
push
jle
loope
call
hlt
mov
sbb
out
gs
add
add
jnp
mov
inc
sbb
cmpb
insl
xchg
lea
inc
fimuls
xor
iret
mov
fwait
add
test
sub
inc
int3
cwtd
mov
test
lcall
sbb
hlt
push
push
enter
movsb
push
hlt
inc
aaa
stos
mov
loope
nop
test
dec
sub
in
loopne
add
push
mov
inc
and
out
int
bnd
fcmovbe
push
xor
sbb
loopne
mov
roll
fwait
imul
out
xor
sub
push
add
test
in
pop
mulb
mov
outsl
jbe
sub
jns
icebp
jmp
cli
inc
dec
mov
sbb
push
push
dec
inc
cmp
mov
fs
fistpl
shlb
adc
xchg
mov
movsb
cmc
and
mov
into
inc
roll
fwait
push
fstl
inc
xchg
popa
sahf
fistl
clc
ds
add
mov
inc
sub
ja
cmc
jp
lock
aad
mov
push
gs
sub
cmp
jbe
sbbl
mov
push
jns
iret
or
xchg
push
cli
fdivs
jge
insb
out
push
lahf
inc
fs
jno
cmp
in
dec
xchg
cltd
and
jecxz
test
inc
cmpsl
pop
repz
xor
push
mov
lcall
popa
jns
hlt
leave
jle
mov
mov
pusha
xchg
dec
movsb
push
pop
mov
add
xor
jbe
dec
mov
clc
push
xchg
aaa
mov
out
pop
test
sub
pusha
dec
lea
cltd
mov
jb
popf
sub
ljmp
das
sbb
pop
sub
movsl
xchg
adc
scas
dec
xlat
lret
add
mov
and
or
dec
push
inc
adc
loopne
ss
adc
push
pushf
ret
cwtl
out
sbb
gs
aaa
jnp
cmpsl
push
pop
and
or
pop
sbb
sub
mov
add
xchg
mov
pop
cwtl
mov
sub
scas
insl
popa
push
dec
inc
xchg
xor
push
sub
fs
dec
ja
mov
mov
shll
insb
das
lea
pop
in
aaa
cmp
cmpsl
dec
aas
pop
sub
out
mov
pop
push
cs
adc
negb
add
inc
test
popa
lcall
aaa
js
mov
loop
and
test
push
int3
adc
mov
add
xor
out
pusha
stc
jmp
ja
ds
push
rcr
in
movsb
inc
cmp
decl
jmp
mov
aam
xchg
je
mov
lret
or
in
jle
cmp
cmpsb
jns
neg
cmp
dec
addr16
mov
stos
inc
cli
test
sub
dec
fidivl
inc
lds
testl
add
ret
push
sbb
sbb
xchg
pop
pop
psrad
in
mov
inc
pop
cs
divb
jno
dec
pushl
sbb
shlb
arpl
jb
jle
mull
mov
push
stc
scas
sbb
push
inc
and
test
mov
cmpb
aad
leave
or
in
and
push
sahf
imul
into
scas
pusha
lods
xchg
inc
push
xchg
dec
push
jns
cmp
add
dec
xchg
scas
cmp
out
dec
imul
dec
xchg
push
xor
and
into
cmp
inc
xchg
add
lods
pop
and
jmp
xchg
mov
mov
std
mov
cmc
dec
iret
mov
mov
mov
inc
pop
outsl
pop
add
stos
outsb
popf
cmpsb
lock
gs
roll
popl
inc
cmp
push
xchg
jle
cmp
ret
push
lea
push
dec
xrelease
loop
stos
popa
dec
out
test
dec
cmp
fwait
js
mov
in
clc
add
shr
add
repz
mov
mov
js
xchg
jbe
pop
nop
mov
cs
pushf
cmp
add
or
jecxz
ljmp
cli
in
cwtl
pushf
insl
outsl
call
dec
cwtl
pop
into
aad
and
stc
sbb
aad
shlb
fdivrp
jp
sbbl
mov
test
sub
clc
dec
pusha
stos
ljmp
adc
sar
jbe
ljmp
dec
sub
inc
stos
mov
add
mov
xlat
daa
aam
mov
negl
sub
adc
mov
paddq
stos
test
pop
in
pop
sbb
push
insl
fidivl
cmp
mov
or
xchg
cmpsb
lods
daa
mov
fs
mov
pop
pop
or
cli
mov
mov
out
mov
sub
test
pop
lods
dec
pushf
xor
int3
fwait
xchg
xchg
sbb
mov
sbb
push
mov
popa
outsb
pop
push
mov
aaa
inc
sub
inc
cmp
mov
adc
inc
jecxz
sarl
in
push
scas
clc
ds
lds
je
mov
imul
jp
sti
sbb
and
mov
std
lret
mov
hlt
pushf
sbbl
sbb
jecxz
jb
sub
mov
mov
mov
xor
es
ss
push
rcr
popa
outsb
fldl
scas
fs
mov
mov
les
or
adc
fbld
inc
inc
sub
ficoml
mov
jmp
sbb
sub
or
out
fs
aad
nop
lock
mov
xchg
sbb
jne
cmpsl
jmp
pop
pop
aas
sbbl
sub
mov
push
sahf
add
sar
dec
mov
and
xchg
mov
jne
xor
xorl
mov
fcomps
sbb
pushf
aam
sub
mov
mov
mov
mov
int3
es
push
push
sub
into
pushf
cli
xchg
dec
loope
mov
lret
push
adc
cwtl
add
jp
enter
lods
sbb
cmp
mov
jecxz
scas
add
icebp
andl
pop
cld
or
dec
cwtl
add
scas
test
daa
cwtl
imul
call
out
xor
es
fdivl
aam
cmp
jb
jae
lcall
pop
mov
push
mov
adc
xor
pop
leave
inc
subw
ret
xchg
and
cmc
cltd
sub
dec
mov
addb
or
jb
bnd
inc
mov
test
or
dec
jno
push
in
repnz
adc
lahf
movsl
pop
jns
mov
fists
aas
lret
subl
sub
in
pop
mov
in
inc
and
mov
xchg
lds
loop
incb
add
sub
std
ficoml
mov
fcomps
mov
outsl
sub
data16
in
sbb
mov
cmc
cwtl
cmp
mov
mov
pusha
and
rclb
xor
ss
push
xchg
and
xor
xchg
cli
out
out
out
int
stc
mov
add
pop
sti
stc
mov
cmp
fmuls
push
les
es
mov
fs
lods
push
clc
divb
jge
into
adc
movsb
lods
call
xchg
inc
loope
pushf
mov
push
mov
test
adc
push
mov
xchg
or
sbb
or
hlt
jns
add
sbbb
adc
jmp
xchg
clc
call
xchg
pop
mov
outsb
imul
push
xor
sahf
pusha
cmpsl
mov
aad
insl
dec
roll
subb
mov
mov
es
dec
fidivrl
jp
dec
scas
test
ja
les
adc
cwtl
xchg
inc
imul
fidivrs
or
imul
sbb
mov
xlat
xlat
jge
out
dec
pop
neg
rcl
push
jo
ficoml
popa
popa
mov
add
lea
xlat
mov
cltd
pop
stos
pop
xchg
pop
mov
test
fwait
ljmp
in
call
fmull
icebp
stos
jle
shlb
jl
ja
arpl
dec
out
idivl
call
push
ja
mov
lods
dec
iret
cmp
cmp
mov
mov
clc
xchg
xchg
jb
jae
popf
dec
push
mov
data16
cld
stos
aas
push
push
push
mov
pop
fsubl
mov
mov
add
inc
push
cs
mov
gs
icebp
cli
inc
daa
mov
mov
dec
outsb
movsl
pop
fs
dec
fwait
mov
add
mov
mov
xor
shlb
sbb
push
and
aam
dec
pop
inc
sbb
mov
add
xor
fcoml
sub
popa
lret
mov
into
out
ret
cmc
jg
out
mov
push
cmp
dec
and
xor
mov
mov
repz
inc
xor
ret
dec
cmc
int
or
push
xor
xor
mov
pop
sub
outsb
cmpsl
imul
lcall
jo
cmp
jmp
jp
insb
mov
mov
inc
and
and
pusha
sub
add
mov
fistpll
xchg
jmp
in
xchg
push
mov
add
add
ds
ja
jo
aam
fstps
pop
fdivl
adc
jnp
add
fnsave
cmp
sbb
mov
jp
shrl
sbb
notl
mov
and
mov
push
adc
std
ss
dec
fisubrl
dec
jg
mov
arpl
imul
mov
gs
jp
fs
cmpsb
add
lcall
xor
daa
cli
scas
pop
mov
testb
ss
divb
add
imul
daa
popf
pop
aad
insb
xchg
adc
mov
dec
addr16
inc
test
enter
mov
es
stc
ret
push
lret
xor
jb
push
int
in
clc
jae
mov
inc
push
inc
xor
adc
lahf
addr16
je
mov
dec
push
pop
jbe
out
mov
pop
fistpl
and
lock
sbb
push
mov
jb
loopne
cwtl
lods
xor
aad
decl
jne
cmp
sub
ss
jns
out
nop
hlt
neg
jl
push
orl
and
mov
scas
in
ret
pop
and
sbb
mov
outsb
mov
test
xor
imul
jbe
pop
cld
or
in
idivb
jae
aaa
js
jg
aad
mov
jle
nop
jo
fidivrl
sar
sbb
cmp
fisttpl
sbb
cmp
leave
out
mov
loop
push
sbb
cmp
jnp
or
scas
cmp
or
mov
jecxz
pushl
fs
fnstenv
insl
push
in
nop
mov
bound
sbb
in
gs
pop
add
ja
cmp
mov
rcrb
adc
pop
mov
mov
mov
js
sub
inc
ret
addr16
in
sub
ficompl
shrb
add
xor
ja
mov
pslld
jge
lret
jnp
movsl
mov
mov
je
push
test
pop
fisttpl
fwait
lcall
jecxz
das
sub
push
fcmovb
stos
push
test
sbbb
dec
inc
out
fisubrs
out
jge
sbb
push
mov
mov
cmp
fucomip
cs
repz
mov
into
lcall
iret
jne
repz
cmpsl
mov
fs
rorb
outsl
or
mov
cld
xor
fistl
mov
adc
test
or
dec
popa
and
sbb
add
cmp
xor
and
push
jg
pop
adc
sbb
inc
cmp
pop
fisttps
and
pushf
dec
cmp
mov
pop
dec
sbb
js
sbb
push
push
outsl
mov
xorb
lret
xor
fdiv
dec
pusha
xor
xorb
loopne
inc
mov
daa
mov
insb
xchg
or
jmp
sbb
out
ss
es
mov
sbb
outsl
aaa
jge
push
outsl
pop
mov
jae
sub
sub
addr16
jae
push
cs
daa
xchg
push
or
ja
pop
out
add
pop
mov
out
xchg
push
jae
cmp
and
jecxz
push
cmpsl
xchg
enter
lods
mov
imul
xchg
cmp
xchg
lds
insb
sub
lea
aas
movsl
shrb
js
test
int3
test
xor
pusha
or
mov
jnp
mov
add
pop
ja
fldl
sbb
sbb
push
aad
adc
cmpsl
jmp
sbb
std
mov
rolb
xor
xor
jp
addr16
push
mov
mov
pusha
fnsave
push
movsl
adc
cld
gs
cmpsb
sbb
pop
sbb
sahf
push
inc
shll
push
cmpsb
lods
mov
and
jle,pn
and
out
mov
idivb
inc
xchg
lods
scas
dec
iret
shll
cmp
out
das
inc
daa
xor
aas
mov
lahf
jp
mov
insl
pop
mov
in
xchg
outsl
and
insl
ja
push
lret
sarl
or
mov
mov
fiaddl
inc
push
xlat
ss
mov
stos
insb
pop
push
shl
adc
nop
mov
cmp
jae
das
verw
loopne
or
movsb
fsubrl
pop
psubsb
cmc
shll
mov
popa
inc
add
fsubrs
cld
lock
mov
in
movsl
int
push
inc
jmp
mov
repnz
lods
decb
bound
push
test
push
sti
pop
mov
jmp
sbb
lock
mov
add
fstp
jnp
jns
push
mov
sahf
dec
inc
xor
icebp
jne
and
add
shlb
cmc
add
and
lods
out
sub
clc
push
adc
pop
sbb
jp
pop
test
dec
push
sbb
dec
cmp
pusha
cs
push
add
dec
mov
lds
push
cmp
fcomps
dec
xchg
popa
jge
rorl
andb
outsb
ja
and
mov
js
out
jne
mov
into
js
test
pop
stc
lods
or
mov
ret
and
inc
add
das
sar
clc
jle
inc
or
add
xchg
adc
cmp
sbb
bound
push
sti
xchg
pop
lods
insb
pop
pop
out
sub
mov
cmc
aaa
sbb
mov
repz
fcmovnbe
fs
xchg
sub
xchg
fst
into
fisubrl
sbb
es
xorb
sbb
pushf
jp
xchg
idivl
xchg
mov
sarb
sbb
lret
mov
mov
sub
mov
test
rolb
xor
mov
dec
outsl
sbb
xchg
and
mov
std
fldt
adc
or
adc
popf
shl
sahf
and
inc
mov
aaa
xchg
mov
jmp
sub
mov
test
fwait
xlat
mov
imul
fbstp
inc
cmpsb
mov
fdiv
jns
es
test
dec
xchg
inc
sbbl
imul
xor
adc
mov
sub
sbb
push
dec
jp
fs
out
inc
inc
stc
and
mov
jae
test
xchg
push
add
repnz
sub
test
jnp
add
push
mov
test
shr
ror
int3
lds
xor
pop
push
imull
sbb
mov
jp
stc
jle
adc
xchg
pop
test
popf
dec
push
jne
dec
outsl
mov
push
xchg
push
lret
xchg
mov
sbb
add
pop
xor
lock
outsl
dec
push
xchg
dec
popa
lret
mov
sbb
repz
mov
inc
icebp
int
cli
mov
mov
pop
push
into
sub
movsb
push
sbb
xchg
xchg
xchg
adc
add
out
add
jp
xchg
std
out
sub
sbb
xor
ja
lret
cwtl
mov
jb
or
inc
test
mov
es
imull
xchg
pop
es
test
sub
sub
cs
sbb
fcoml
sbb
repnz
arpl
test
mov
dec
add
adc
add
dec
je
fmull
repz
xchg
cli
pop
insl
mov
out
daa
add
les
add
fwait
pop
lds
sbb
addr16
push
pushf
enter
rclb
jl
lret
jl
test
inc
dec
sub
mov
ret
cmpsl
loop
jecxz
in
dec
ret
mov
and
ja
dec
int
cmp
inc
xchg
or
and
mov
rcrb
pop
pop
pop
inc
inc
int3
ja
inc
fwait
lret
outsl
andb
cmpsl
aaa
push
or
cld
push
jo,pn
popf
pop
jg
mov
imul
push
stos
jle
add
jae
pop
ret
test
and
push
jnp
imul
jmp
ljmp
xchg
jo
jmp
cmpsb
mov
popa
and
mov
arpl
stos
xor
mov
jg
mov
sbb
outsb
imul
sbb
cmpsl
adc
fldenv
jecxz
js,pt
xchg
cmp
push
addr16
in
shll
sub
pop
or
aad
add
mov
mov
mov
adc
ss
scas
test
movsl
stos
mov
jbe
roll
movsl
xor
pop
mov
into
scas
frstor
pop
sbb
jg
pop
xchg
shll
lea
outsb
adc
sub
or
sbb
les
xchg
xchg
cli
aas
fimuls
rclb
and
popa
adc
inc
imul
inc
scas
mov
cmp
mov
notl
lds
dec
dec
js
sub
aas
ret
mov
fdivr
stc
sbb
mov
or
addr16
vpmacssdqh
cmpsb
push
iret
and
cs
out
jecxz,pn
pop
movsl
mov
sbb
dec
and
pop
testb
cld
cld
testb
jae
ret
hlt
mov
lock
jne
mov
lcall
mov
inc
inc
add
out
push
gs
add
movsl
jbe
popa
push
push
dec
and
leave
stc
mov
push
js
lcall
xor
dec
cmp
adc
sbb
lret
pop
jns
lret
fcmovne
jle
and
xor
in
sub
lock
and
arpl
xlat
loop
mov
pop
xchg
xor
nopl
lea
bound
pop
cmp
popf
inc
add
dec
xchg
insb
popf
jg
test
in
leave
fistpll
ljmp
pop
add
stos
mull
insl
clc
stos
cmp
std
arpl
ds
mov
loopne
and
inc
shr
xchg
ds
bound
aaa
xchg
pop
das
cwtl
or
mov
mov
mov
mov
jl
xchg
shl
in
jp
pop
fnsave
dec
xor
push
and
push
leave
cmp
filds
fimull
push
inc
in
out
sub
adc
jecxz
lods
jg
and
xchg
fsubl
popl
hlt
out
ja
cmp
addr16
xchg
jne
cmp
xlat
xor
cmp
pop
sbb
sarl
lods
into
fisubs
sbb
jecxz
cmc
repz
scas
inc
jge
mov
popf
js
lock
cli
pop
decl
xchg
int
das
test
roll
sahf
mov
cwtl
imul
jmp
test
xchg
rcll
icebp
adc
or
insb
insb
mov
insl
jns
mov
rcrb
int3
sub
cmc
aad
pop
xor
dec
mov
insl
loopne
pop
adc
xor
shr
and
stos
mov
outsl
jg
loope
call
sub
push
jle
hlt
jp
pushf
hlt
call
test
dec
mov
push
out
aaa
push
outsl
cmp
test
sub
xlat
mov
popf
add
or
into
iret
sti
shrb
or
xchg
es
sbb
add
inc
cmpsl
add
push
shll
jg
aam
ss
adc
mov
jl
in
imul
jmp
or
sub
hlt
or
dec
je
jg
mull
icebp
mov
out
xor
pop
stos
pushw
inc
mov
adc
cmpsb
out
jmp
mov
jbe
ljmp
sub
mov
jae
push
rcll
sbb
sbb
imul
push
mov
in
dec
stos
roll
xchg
mov
sbb
lods
cmp
or
pop
in
popa
sub
cwtl
push
aaa
sbb
xor
or
cld
and
inc
int
mov
mov
and
mov
mov
in
shl
mov
cmc
fs
add
loopne
rsqrtps
mov
xchg
add
xchg
xchg
jns
sahf
mov
xchg
bound
xor
xchg
jge
fiadds
fldt
das
popa
das
sbb
in
mov
pop
jecxz
stos
xchg
data16
and
mov
jle
or
imul
rcrl
sub
adc
iret
out
jg
in
xor
push
in
add
insl
bound
ds
loop
ljmp
shr
push
aad
xchg
adc
cld
dec
mov
dec
mov
push
ja
jmp
inc
pop
pop
add
loopne
ret
sbb
cmpsb
and
and
push
and
loopne
xor
out
dec
ds
mov
movsl
data16
mov
iret
xor
mov
mov
loope
mov
icebp
dec
and
xor
rcl
icebp
inc
mov
mov
aaa
imul
movsb
or
pop
push
fdivrs
aas
mov
mov
pop
stos
roll
pushf
sub
pop
pop
into
pop
cld
outsb
jnp
add
jg
cs
mov
repnz
iret
std
es
mov
pop
push
jns
test
rol
lods
lods
push
hlt
mov
cmc
xor
testb
insl
jnp
shrl
xlat
inc
jo
mov
xchg
xchg
or
mov
xchg
sub
out
stc
cwtl
into
pop
ficomps
lea
jno
sbb
adc
nop
cmp
sub
clc
cmp
add
jno
mov
pushl
pop
rolb
shrb
notb
das
lahf
jp
add
push
outsl
in
mov
xchg
scas
or
test
pop
mov
dec
adc
push
cltd
xchg
lret
inc
pushf
pop
mov
push
add
scas
sbb
push
sbbb
mov
fiadds
mov
mov
mov
pop
in
test
scas
pop
test
bound
sarb
sbb
loop
outsl
mov
adc
aam
test
paddusw
testl
es
add
test
lods
or
add
inc
sub
das
shll
in
imul
lret
or
das
pop
mov
lods
xor
mov
sub
arpl
mov
mov
out
push
cmp
cmp
push
mov
pop
xchg
or
jns
test
gs
arpl
push
jl
xchg
or
out
into
push
adc
fsub
dec
popa
lods
mov
pushf
mov
xchg
or
mov
jbe
dec
lods
out
in
mov
negl
scas
loopne
mov
mov
mov
lds
xor
fnsave
mov
cmp
gs
out
mov
inc
scas
cmc
rol
arpl
xor
out
jmp
pushf
pop
dec
and
push
jno
adc
cli
mov
outsb
xchg
or
jge
popa
insb
popf
lock
bound
scas
mov
movsb
jb
pop
cmc
out
jnp
inc
xchg
add
mov
push
stos
insb
js
hlt
mov
jle
sub
cmpsb
out
or
push
or
cmp
and
in
jbe
sbb
and
pop
dec
cmc
xor
inc
sub
pop
call
cmp
aas
jge
pop
repz
mov
leave
mov
jp
test
decb
cmp
dec
pop
ds
lcall
lcall
cltd
pop
dec
rcll
and
push
iret
js
jmp
lret
xor
inc
jne
jecxz
lret
inc
xor
mov
cmc
and
cli
inc
gs
imul
and
cmp
outsb
test
or
fdiv
arpl
std
sub
push
xchg
inc
and
jns
jne
jns
xchg
movsl
mov
inc
mul
repz
sbb
scas
sub
sbb
sub
inc
add
mov
fstpl
xor
sub
inc
aam
incb
jp
dec
or
sub
add
or
mov
adc
mov
das
dec
push
lret
mov
pop
imul
add
mov
jno
fucomip
mov
add
or
sti
mov
testl
dec
in
arpl
sbb
repnz
fcomi
sub
das
call
js
sti
ljmp
add
test
mov
movsl
xchg
in
cmp
cmpsl
les
scas
inc
sbb
es
or
mov
add
div
cld
sub
cwtl
int3
or
push
pop
shll
inc
xchg
sub
sub
mov
jge
add
xor
rcr
xorl
ret
add
lret
jecxz
hlt
ss
adc
rorl
jge
pusha
adc
jbe
add
movsb
idivb
jnp
jge
popl
call
jb
movsl
and
pop
ret
popa
push
inc
adc
dec
inc
fldt
imul
inc
mov
adcl
mov
idivl
jl
xor
xorb
in
roll
push
mov
mov
add
hlt
lea
cltd
not
jne
mov
fdivs
inc
and
aam
cmpl
sub
pop
add
xor
jmp
out
sbb
jbe
cmp
lahf
cmpsb
adc
sub
call
outsb
xor
dec
call
loopne
mov
xchg
ljmp
adc
outsb
ret
inc
add
lods
js
sub
sbb
mov
and
out
and
cmc
jl
ret
test
xchg
adc
adc
popa
or
cwtl
inc
imul
out
push
mov
adc
push
sub
data16
push
lret
pop
xchg
lods
push
les
into
rcr
push
ds
mov
mov
pop
mov
or
sbb
nopl
or
sti
sub
aaa
cmpsl
shll
xor
adc
xchg
jp
lds
cmp
std
jl
shlb
mov
mov
push
sbb
adc
adc
loopne
insb
mov
push
jo
lahf
jmp
stc
pop
xchg
imul
cmp
faddl
mov
push
ds
push
adc
lea
xchg
in
push
js
adc
cwtl
mov
push
outsb
jbe
mov
loope
dec
jo
stos
ret
push
cli
fisubrs
cmp
dec
xlat
sub
lret
negb
cmp
xor
and
into
xchg
enter
int
and
into
pop
repnz
push
test
and
cs
adc
pop
pop
push
adc
rclb
and
int3
cmp
jne
jle
rorl
mov
popf
xchg
js
test
dec
jne
mov
std
test
sbb
sar
aam
cmc
mov
xchg
out
sti
adc
push
jbe
movl
lcall
sub
or
jmp
outsl
out
popf
xor
cmp
mov
adc
xor
imul
in
inc
daa
push
rcrb
push
mov
inc
loop
xchg
dec
and
mov
xchg
and
stos
sub
arpl
push
ficoml
mov
aas
lods
in
jnp
fucom
sbb
pop
aad
enter
dec
adc
mov
pop
xor
test
xor
push
xor
frstor
mov
cmp
mov
jb
inc
int3
mov
in
stos
and
leave
mov
aad
aad
pop
dec
or
or
xor
testl
mov
or
add
sub
cmp
mov
xchg
rcrl
sbbb
mov
dec
adc
cmp
pusha
inc
push
mov
mov
pushf
aam
add
jge
cltd
jle
ljmp
and
mov
adc
lahf
mov
sbbl
loope
sbb
bound
push
cs
mov
fists
push
mov
sbb
pop
dec
pop
repz
fsubl
pop
xchg
scas
sub
lods
jge
gs
repz
jb
or
enter
sbb
call
inc
adc
jno
lret
es
sub
xorl
es
fwait
das
pop
cli
fdivs
shlb
rcll
sti
push
rcrb
in
jbe
divb
push
pop
and
es
jl
movl
movsl
jle
sub
pop
cmp
aaa
gs
fst
pop
dec
sbb
mov
xor
rorl
js
mov
call
mov
mov
sbb
mov
loop
xchg
mov
mull
out
adc
pop
inc
jmp
imul
pop
andb
xor
jg
fcmovnu
add
insb
std
adc
std
sub
xchg
mov
std
sub
sub
in
or
aam
xchg
push
divl
cmpb
pop
and
and
mov
cmp
cmp
das
xchg
add
pop
xchg
insb
fldl
xchg
sbb
rcl
jne
xor
cmp
enter
ret
jns
in
or
inc
or
popa
push
les
xor
vprotq
push
dec
jp
sbb
shlb
cmp
sbb
mov
sbb
hlt
outsb
or
jp
lods
pop
pop
mov
insb
lret
inc
sub
fidivrl
aad
subb
sub
xchg
xchg
push
outsb
xchg
in
mov
test
add
add
mov
inc
int
mov
insl
mov
test
outsl
inc
cmp
inc
mov
in
js
and
pop
pop
hlt
lods
test
cmp
cs
sub
cmc
push
into
fadds
or
outsl
jg
outsb
into
adc
enter
jb
sahf
js
or
outsl
stos
ret
inc
dec
jp
sti
add
cmp
sbb
setne
push
push
fcmovnbe
nop
mov
js
outsb
fldt
push
aam
sub
jae
and
add
adc
and
test
push
test
fcmovnb
inc
jg
cmp
in
scas
mov
loop
mov
cltd
aaa
xor
pop
flds
stos
cld
test
pop
jecxz
xor
pop
mov
dec
pop
cli
add
int
push
cli
movsl
pop
ja
push
fucomp
mov
pop
les
sbb
dec
mov
mov
and
shl
xchg
ljmp
fisttpl
xlat
int
pop
das
dec
pop
fcoms
mov
sbb
mov
call
leave
pop
push
outsb
pop
ljmp
lds
insl
push
aaa
addr16
adc
repnz
mov
rclb
pop
inc
inc
enter
sbb
mov
add
in
sbbl
xchg
jae
call
inc
or
fwait
icebp
add
ljmp
scas
fsts
mov
rcrb
and
sub
jg
jle
jmp
and
lret
gs
sahf
scas
jl
cld
jmp
sbb
ds
inc
adc
sbb
mov
sbb
mov
mov
push
dec
adc
mov
cmc
pop
and
push
mov
sbb
je
lret
or
pop
arpl
xor
cmp
push
test
mov
dec
xor
gs
add
add
rorl
fildl
push
in
insl
out
fwait
jmp
sbb
repnz
xorl
mov
push
data16
lock
outsl
cmp
lds
jmp
cmp
sbb
mov
mov
in
or
push
add
pop
in
push
js
cmp
mov
lods
cmp
pop
insl
inc
xchg
fmul
jmp
mov
xor
out
add
mov
sbb
bound
xor
lds
mov
xor
mov
xor
or
fisubrs
push
dec
filds
adc
and
mov
cld
push
jecxz
in
in
clc
stc
pop
call
adc
adc
outsb
mov
fs
mov
cmp
push
and
and
es
inc
cmp
jo
xchg
or
test
adcb
test
sbb
adc
sub
out
jg
dec
push
mov
ljmp
cltd
call
xchg
mov
stos
adc
and
int3
clc
fcompl
outsl
mov
arpl
popa
out
aaa
xor
xchg
add
test
xchg
xchg
xor
hlt
add
aad
adc
jge
out
lock
jb
lea
mov
movsl
int
adc
cmpl
dec
sbbb
rorb
je
pop
mov
mov
adc
mov
ljmp
add
sub
add
xchg
orb
cmp
popa
mov
or
das
divb
sahf
dec
fistps
sbb
xchg
repnz
ret
jp
divb
xchg
repz
js
sbb
sarl
pop
add
cmp
mov
outsl
ljmp
sti
sub
rcr
and
gs
dec
aam
into
movsl
lcall
inc
push
mov
add
pop
mov
cld
out
jno
sahf
cli
cltd
gs
and
pop
popa
dec
aam
mov
jo
in
test
add
nopl
mov
pop
imul
push
add
out
cs
outsb
adcl
pusha
xor
dec
inc
sbb
mov
stc
adc
gs
dec
pop
adc
loop
pop
adc
sahf
push
in
repnz
mov
xchg
push
xor
fmuls
out
sub
push
sti
inc
xor
popf
jmp
inc
enter
cmc
aaa
xchg
jmp
inc
adc
subb
push
movsb
sar
lea
cmp
leave
push
mov
lret
lea
inc
sub
pop
les
loope
lock
cmp
xor
shl
push
pop
xchg
ljmp
dec
push
jae
in
fwait
movsb
pop
mov
test
inc
popf
cmp
dec
inc
pop
scas
xchg
xchg
decl
mov
sub
fiaddl
outsl
mov
stc
jle
xchg
xor
popf
xorl
xchg
jns
push
mov
pop
adc
outsb
pop
arpl
fldt
add
sub
xchg
filds
mov
out
pop
cld
cmpsl
and
adc
pop
pushf
int
arpl
in
or
pop
rorl
sub
notl
pop
dec
xor
add
dec
fmul
and
sub
inc
mov
adc
jmp
jb
dec
out
xor
and
ja
shrb
insb
push
pcmpgtb
mov
stos
hlt
jnp
pop
std
pop
insb
inc
adc
clc
cld
xor
add
pop
and
xchg
pop
daa
and
loope
cmp
add
xchg
pop
pop
xchg
repz
clc
push
fiaddl
mov
cmp
mov
in
cmp
inc
xor
pop
or
and
add
rorl
push
push
fcoml
xor
loopne
mulb
loope
dec
insb
mov
aam
js
std
repz
imul
cmp
mov
cltd
imul
out
mov
lahf
cmp
pop
mov
jno
mov
push
adc
cmc
sti
lds
fwait
push
pop
orl
push
ret
stc
cmpl
xor
xor
std
adc
adc
mov
xor
int3
jns
mov
shl
test
mov
lds
sbb
xchg
fs
scas
lods
movsb
repnz
rcrb
pop
jno
loop
lods
pop
cmp
cwtl
lcall
jae
outsb
mov
mov
stos
mov
xchg
dec
shl
out
icebp
adc
cs
dec
dec
cmp
jecxz
pop
or
loope
pop
push
dec
aaa
in
lock
jno
mov
dec
cs
adc
push
push
in
inc
rcll
mov
aaa
into
icebp
mov
mov
lcall
and
loopne
pop
push
inc
mul
inc
aam
shlb
add
and
push
out
loopne
sub
pop
fwait
sub
xor
test
xchg
insl
imul
jg
daa
rclb
cmpsb
sarb
lods
adc
lea
xor
adc
push
cmp
pop
jl
inc
sti
mov
lds
aas
or
dec
sahf
xchg
std
dec
mov
mov
and
in
popf
push
mov
testl
push
pusha
daa
push
icebp
fwait
and
jnp
imul
or
loopne
rcll
adc
adc
jecxz
pop
sub
ror
add
pop
cli
jle
aas
and
xor
daa
outsb
repz
out
sbb
xchg
inc
mov
ja
out
sbb
repnz
push
sub
pop
mov
cwtl
sub
xchg
pop
add
xchg
out
mov
mov
sbb
adc
cs
and
dec
sub
icebp
adc
shlb
xor
dec
xchg
lock
test
enter
xor
out
out
pusha
adc
push
jne
mov
sarb
pop
adc
es
jae
imul
jle
sti
sub
cld
out
enter
lcall
ror
push
out
xchg
add
push
into
xorl
stc
sub
out
xchg
cltd
sub
mov
ja
clc
jns
adc
and
test
nop
fdivrs
daa
push
sbb
pop
lret
in
loop
shlb
test
inc
loopne
fcmovne
dec
sti
aam
js
sbb
sub
inc
scas
cmp
arpl
cmc
jg
shl
int3
shr
mov
xor
add
gs
das
lcall
int
test
inc
ss
idivb
dec
lahf
lea
cmpsb
in
outsb
sub
xchg
add
fisttps
add
add
std
push
aam
dec
jne
mov
jg
fidivs
jbe
pop
pop
inc
cmp
call
sub
push
pop
inc
xchg
xor
and
inc
repnz
out
dec
sbb
or
push
les
int
xchg
xchg
popa
push
push
ficoml
lret
inc
inc
outsl
mov
hlt
pop
pop
and
inc
mov
push
pop
push
in
or
in
das
xchg
ds
scas
push
add
bound
cs
ds
cli
lahf
testb
dec
call
jne
les
xor
pop
daa
call
divb
stc
mov
ds
pushf
mov
jecxz
lcall
mov
fldcw
insb
inc
aad
cmp
xchg
imul
ffreep
pop
xchg
dec
adc
push
sub
push
cld
ds
add
pop
xor
push
fsubl
insb
sub
adc
and
push
arpl
pushf
add
loop
mov
sub
sbb
fwait
mov
lcall
or
aas
test
fildl
daa
or
dec
cmp
std
data16
bound
sbb
cwtl
mov
lea
sti
repnz
xchg
push
push
lret
or
fcoms
push
push
sti
jo
repz
pop
sub
dec
addr16
fsubs
mov
xchg
xor
aas
into
jmp
jne
ret
shlb
xor
aam
push
xor
jo
pop
les
cmp
cmp
ja
sbb
cmpb
pcmpeqw
into
cmpl
dec
cwtl
or
clc
mov
push
fwait
dec
loopne
push
sub
rcrb
or
mov
das
cltd
lea
pop
adc
push
in
inc
jbe
sti
push
adc
xchg
dec
ret
cmpsb
mov
mov
pop
movsl
fidivrl
addr16
push
pop
and
in
out
jne
sub
in
dec
les
fsub
lahf
pop
dec
jbe
push
shr
aad
push
std
push
mov
or
loope
movsl
adc
in
dec
or
out
fnstenv
push
jbe
push
jae
mov
mov
xchg
xor
arpl
fldl
push
movsl
mov
mov
push
cmpb
leave
loop
jno
or
jl
push
mov
push
add
add
nop
mov
mov
sahf
mov
cli
scas
pop
xor
add
jp
rolb
dec
rcrb
nop
shlb
insl
xchg
cmp
pop
ja
lret
stos
enter
jbe
lahf
cwtl
dec
int3
jno
push
pop
adcb
cmp
inc
lret
adc
pop
pop
arpl
test
xchg
adc
add
adc
das
xchg
push
mov
jnp
inc
rorl
pop
mov
xchg
push
test
fsubrs
pusha
sub
mov
xchg
sahf
push
scas
std
fstpl
add
mov
rorb
xchg
adc
jo
dec
mov
sub
inc
adc
sub
fucomip
dec
sbb
movsl
stc
xchg
xlat
fs
repnz
add
inc
mov
in
sbb
decl
lea
or
andb
popf
dec
aad
addl
or
ja
aam
push
ret
cltd
mov
loop
cmp
cmp
es
xchg
int3
mov
fistpl
leave
lea
and
int
popw
xorb
and
cli
nop
sbb
jmp
loope
call
jb
movsb
xchg
sbb
aaa
add
xchg
cmp
push
ret
mov
inc
sub
in
cmp
cwtl
cmpl
popl
xor
ret
xor
push
adcl
mov
mov
out
jo
popa
rol
adcb
cmp
xchg
int3
pop
cmpsl
lahf
fidivs
jns
ds
sti
ja
jmp
push
push
stos
popa
or
mov
sub
or
xor
sub
or
filds
adc
pusha
scas
test
rcll
lahf
das
aad
push
pop
pop
xchg
push
sbb
jbe
mov
cmp
outsl
push
insw
movsl
and
orb
sub
call
push
jg
ljmp
daa
dec
jp
shll
rcrb
inc
clc
mov
sbb
ret
cld
cmp
iret
inc
subl
in
repnz
cmc
push
shll
add
dec
fcoms
js
cmp
aaa
push
jae
sub
and
mov
lds
mov
and
mov
push
js
adc
test
push
mov
or
add
fmuls
dec
push
sbb
dec
inc
push
out
xchg
sahf
sub
jmp
je
call
aad
jmp
cld
popf
jle
lds
cmp
pop
or
or
mov
adc
xchg
xor
mov
add
add
lret
push
rcl
mov
jb
adc
arpl
aam
bound
sahf
rclb
test
popl
xor
and
in
es
jecxz
adc
inc
lahf
cmc
sub
xchg
in
aas
mov
sbb
sbb
or
idivl
icebp
push
lret
enter
cmp
xchg
int
push
push
pop
popf
shl
ret
add
mov
lcall
xor
inc
stos
ja
mov
dec
rep
addr16
lock
hlt
cmp
fwait
movsb
add
cmc
incb
jo
xor
fwait
cld
dec
int3
sub
mov
sub
scas
fldenv
imul
in
pop
movsb
stc
pop
cwtl
push
jl
stos
push
cmc
pop
shrd
jecxz
mov
jle
into
cmp
dec
test
lods
pushf
mov
fistps
in
sbb
add
cs
mov
mov
or
lcall
call
adc
and
xor
pop
repz
lret
scas
sbb
imul
mov
sbb
mov
push
add
ficomps
mov
cmp
or
inc
and
xchg
mov
cmp
mov
cmp
jne
add
shll
push
xlat
mov
push
mov
lcall
rclb
xor
mov
pop
add
inc
mov
cmp
mov
bound
inc
inc
pop
xchg
mov
fnsave
and
sbb
fldt
data16
mov
dec
pop
movsb
jge
xlat
pop
sbb
mov
mov
push
ss
fildl
push
bound
inc
loope
lcall
cmp
in
call
sub
mov
add
data16
pop
mov
outsl
in
and
dec
punpckhwd
inc
jg
popf
ret
movsb
push
cmp
xchg
nop
ja
call
rcrb
test
push
shrl
add
les
fwait
imul
stc
jle
push
rorl
xrelease
nop
cmpb
mov
or
std
jecxz
mov
inc
jo
pop
in
pusha
gs
mov
adc
fdivrl
mov
pop
pop
sbb
fucomp
bound
ss
sub
jno
cmp
ffreep
stos
mov
cmp
loop
xor
icebp
les
es
pop
dec
nop
pop
fs
mov
jp
scas
clc
dec
jbe
divl
mov
xchg
bound
pop
jnp
jp
push
push
xchg
sbb
mov
neg
jmp
nop
mov
adc
xchg
inc
aam
aam
xchg
ss
jge
test
xchg
pop
mov
sti
fbld
sarb
mov
jmp
and
imul
and
outsb
push
mov
imul
xor
push
inc
pop
push
push
aas
jne
mov
sarl
fmull
bound
lret
mov
rclb
pusha
pop
cli
ret
dec
sbb
iret
adc
loopne
inc
sarb
lret
pop
xor
rclb
xor
rol
nop
fnstsw
movsb
sub
inc
data16
xchg
cld
clc
fwait
adc
or
test
jge
mov
push
adc
std
jmp
icebp
add
dec
push
lds
fisttpl
jmp
pushf
mov
not
cwtl
js
inc
fsubp
jae
sub
roll
pop
aaa
mov
test
sbb
xchg
sub
inc
clc
sbb
je
cmp
and
dec
sahf
lods
ds
sbbl
inc
arpl
jae
jbe
mov
and
aas
adc
lods
push
mov
int
dec
test
stc
xchg
mov
scas
fcompl
pop
roll
int3
push
and
lret
insl
or
cmp
inc
sbb
in
inc
push
xlat
or
aad
fsubr
in
jae
popa
filds
jb
pushl
sbb
imul
push
addb
mov
orl
adc
push
and
jge
pop
repz
add
mov
xchg
push
sbb
cmpsl
pusha
pop
fbld
adc
xchg
mov
aam
cmp
dec
push
shrl
ljmp
mov
jae
push
mov
mov
out
sub
cmpsl
fst
stos
sahf
jno
mov
inc
movsb
pop
inc
cmc
push
dec
bnd
adc
pop
pushf
xor
test
sub
jno
lcall
cmpsl
aad
shrl
or
jmp
mov
xchg
mov
sbb
push
mov
fwait
mov
inc
in
popf
dec
adc
or
movsb
mov
sahf
in
jae
mov
cmpsl
sub
push
mov
leave
sub
push
adc
xchg
in
decl
lds
adc
in
and
fdivp
les
mov
mov
xor
xchg
fwait
pop
mov
or
mov
sbb
popa
jb
fiadds
scas
lds
mov
xor
ja
jns
adc
mov
dec
dec
or
inc
pushf
ret
pop
dec
test
outsb
outsb
pop
arpl
pusha
outsb
inc
mov
pop
or
pop
cmp
add
jb
scas
and
int
ja
fildll
pop
push
in
test
cmpsl
clc
dec
dec
adc
pusha
or
pop
fdivl
ror
pop
int3
repnz
insb
pushf
roll
jno
inc
sarl
in
xor
pop
jecxz
rorb
jns
fcoms
fstpt
and
mov
push
mov
mov
insl
cmp
imul
fstpt
sbb
xchg
test
in
pop
and
or
add
cwtl
lods
inc
fsts
jecxz
out
lods
addl
test
scas
mov
and
mov
mov
loope
and
call
imul
js
mov
loope
push
pop
fimull
inc
mov
cwtl
insl
xchg
push
pop
out
push
pop
jge
daa
mov
ficoms
push
repz
call
mov
push
andb
mov
pop
lahf
shl
push
repz
mov
filds
pusha
mov
push
jb
fcomps
xchg
sbb
pop
repnz
add
xchg
xchg
nop
inc
sbb
pop
rclb
jnp
xlat
sub
sub
popa
gs
cmc
or
bound
js
imul
sahf
std
xlat
fsubrs
jno
outsl
xor
mov
mov
push
mov
and
outsb
jle
mov
sub
lcall
adc
adcb
shlb
fsubp
mov
push
pop
popa
mov
jge
repnz
mov
aaa
pop
pop
push
lea
mov
insl
cmc
add
call
outsl
test
xlat
add
jecxz
sbb
pop
daa
adc
dec
out
xor
leave
divl
push
test
jns
pop
std
arpl
shlb
loop
repnz
xchg
jle
add
xor
xlat
or
rorl
es
fstl
jns
mov
xchg
inc
mov
shlb
out
insb
adc
data16
adc
mov
lcall
and
xchg
add
lret
jnp
out
mov
push
xchg
adc
fsubl
xor
sbb
sahf
repnz
push
cmp
lret
mov
sahf
test
mov
dec
mov
ffree
into
inc
xchg
dec
stc
jo
xorb
popa
xchg
popa
call
out
push
lahf
repnz
mov
xchg
mov
push
jge
sub
outsl
jg
cwtl
inc
inc
das
and
pop
leave
pop
sbb
push
push
xchg
in
imul
sub
mov
fldcw
cmp
test
aad
nop
adc
cmovp
and
dec
ret
ds
pop
shlb
daa
mov
test
stc
jmp
and
pop
push
jne
cmpsb
dec
test
mov
gs
aam
imul
xor
or
lods
dec
push
adc
aas
adcb
jo
int3
subl
fidivrl
jmp
sbb
testl
sub
leave
dec
shll
stos
jnp
mov
out
lods
sbb
pmaxub
jbe
lods
pop
dec
test
jno
mov
add
ret
rcrl
lcall
call
push
inc
push
jbe
dec
or
xchg
mov
inc
addr16
sub
xor
adc
mov
loopne
lcall
xor
push
ds
and
jne
mov
mov
stc
inc
stos
andb
cmp
stos
ror
test
mov
lahf
loope
pop
push
push
cmp
or
ficompl
xor
ret
jnp
xor
inc
jp
f2xm1
jl
rclb
mov
jbe
xor
mov
test
out
sti
mov
mov
jbe
inc
icebp
test
xchg
out
pusha
dec
pop
pop
orb
cld
aas
imul
push
movsl
mov
repnz
test
daa
dec
xchg
stos
jecxz
push
mov
sbb
mov
aad
dec
repz
fistl
pop
push
adc
push
sbb
sub
fwait
mov
lock
jno
push
or
adc
imul
idiv
mov
je
movsl
xchg
cmp
aas
mov
adc
sbb
sbb
test
into
adc
js
inc
icebp
xchg
and
cmp
fcom
int3
push
xchg
xchg
addr16
sbb
int
fcmovnb
sbb
hlt
out
enter
adc
push
mov
push
jg
loopne
pusha
push
into
lods
sub
dec
pop
ds
adcl
xchg
mov
outsl
mov
leave
lods
pop
inc
enter
stos
push
fwait
aad
inc
iret
test
push
sbb
cmp
stos
jle
test
mov
push
push
roll
stos
dec
mov
fwait
jns
roll
stos
arpl
cli
dec
pop
imul
add
and
out
call
xchg
mov
push
add
mov
dec
cwtl
xchg
addr16
aam
cs
pop
out
dec
lods
mov
xchg
ljmp
or
sub
sarb
popf
push
push
repz
jg
adc
test
imul
xchg
cltd
xchg
popf
nop
and
lcall
adc
adcb
xchg
rorl
nop
lret
vpmacsdql
inc
mov
add
dec
push
mov
pop
mov
gs
xchg
cld
or
mov
push
pop
dec
xchg
cmp
xchg
hlt
xchg
test
unpcklps
fisttpl
xlat
in
bnd
pop
xchg
mov
push
ss
stc
jns
out
cli
jecxz
int
mov
orb
shl
shrb
mov
inc
rcr
bnd
cmc
mov
iret
fnstcw
cld
push
push
in
inc
sub
sbb
sub
lret
add
fmull
push
hlt
mov
cltd
pop
adc
rorb
cs
nop
sub
push
xchg
adc
lret
push
push
jmp
filds
ret
jecxz
leave
int
mov
mov
std
dec
push
mov
xchg
inc
bnd
aas
dec
cld
out
sbb
mov
dec
pop
xchg
fsubl
adc
cs
idiv
ret
add
int
in
dec
sbb
dec
xor
push
cmpl
out
rorb
iret
jo
sahf
mov
inc
add
shl
fcomp
mov
lcall
data16
cmp
out
fdivrs
add
inc
fistps
xor
into
mov
mov
xorb
das
pop
dec
xchg
push
adc
das
jl
test
shlb
xchg
mov
sahf
mov
jo
sub
add
adc
xlat
adc
sbb
test
add
in
aam
je
pop
in
jl
push
bound
inc
aad
cmpsb
imul
jns
pushf
xchg
push
xor
push
pop
mov
leave
pop
push
sub
std
dec
insl
mov
inc
jo
sbb
arpl
cmc
sbb
insl
push
movsb
lcall
push
add
xchg
mov
xchg
mov
jg
cmp
jmp
xchg
sbb
pop
jno
jp
fdivrs
mov
loop
dec
in
add
cmp
outsl
mov
aas
push
pop
int3
sti
sbb
jno
and
mov
sub
mov
inc
sar
adc
movsb
cs
xchg
nop
fs
int3
rorb
cmpsl
sbb
sub
stos
jl
adc
cmpsb
adc
js
mov
xchg
repz
rclb
add
or
loope
or
test
pop
xor
addl
movsl
rsm
inc
sub
add
ja
xchg
loope
dec
pop
and
cmpsb
fwait
iret
test
inc
das
mov
lock
call
pop
mov
sbb
stos
loope
xor
mov
pusha
enter
fbld
pop
push
test
pop
hlt
into
jl
pop
mov
dec
xor
repnz
jno
leave
xor
pop
int3
xchg
mov
rcrb
or
les
shll
stos
inc
jg
mov
xlat
sub
mov
add
cld
outsl
inc
lahf
sarb
popa
lea
pop
adc
aam
dec
sbb
out
add
mov
fsubrs
xor
mov
jg
add
pop
leave
xchg
add
push
inc
add
push
push
inc
lahf
les
lods
cs
push
mov
icebp
push
mov
cmp
push
out
pop
add
testb
sub
leave
out
iret
fisubs
insl
sub
ret
adc
mov
dec
lock
pop
dec
loop
fs
jbe
inc
loopne
mov
ljmp
sbb
adc
loopne
push
xchg
lea
popf
pusha
je
in
sub
mov
pop
imul
insl
ss
push
pusha
lcall
mov
call
test
add
stos
fnstenv
out
xchg
mov
fidivrl
sbb
mov
mov
test
out
mov
out
jmp
test
loopne
fistpl
dec
pop
mov
and
cmp
shll
jmp
fsubr
pop
xchg
push
jg
push
fdiv
mulb
test
dec
jns
dec
or
out
sbb
jmp
popa
xchg
xor
or
jnp
cs
movsb
iret
and
fdivs
adc
pop
push
sarb
movsb
fs
jmp
in
push
call
bts
je
jae
xchg
mov
outsl
ret
repnz
xchg
inc
xchg
push
pinsrw
lock
scas
or
lahf
movsl
cltd
and
rorb
mov
fcompl
inc
lock
lcall
mov
rcrl
cmp
dec
ret
jae
cwtl
enter
adc
leave
jne
cmc
stos
pop
lahf
lods
inc
jae
push
scas
insl
push
adc
ss
mov
in
scas
sbb
push
cld
scas
rcrl
cmc
pop
popf
loop
dec
mov
mov
mov
sbb
push
xor
shrb
lret
or
test
jo
dec
xchg
cmp
sbb
lods
sar
or
sahf
es
mov
lret
lods
out
mov
aas
pop
or
inc
or
jle
adc
cli
shr
jg
xchg
mov
jo
imul
mov
mov
imul
out
add
sbb
pushf
cmpl
call
gs
mov
cltd
add
out
or
fs
jmp
cltd
add
sarl
popa
aad
leave
dec
data16
movsb
hlt
mov
out
pop
inc
xchg
jns
sbb
in
jb
lahf
cs
and
push
sub
mov
lahf
test
push
mov
in
sbb
and
out
dec
ficompl
int3
cwtl
or
mov
lcall
or
popf
mov
idivb
dec
push
ja
mov
xchg
inc
mov
sub
negb
inc
mov
mov
cmpsl
adc
idivl
xchg
mov
jle
sub
out
sti
push
inc
lods
cs
lcall
mov
sub
cs
add
ja
add
or
pop
cmp
add
fistpll
ret
jge
fwait
xchg
xor
push
mov
test
lret
inc
loope
ja
xchg
cmp
mov
pop
sbb
sub
push
xchg
or
mov
add
stos
cli
ret
pop
push
clc
int3
pop
jg
outsb
sbb
shrl
mov
out
outsl
sarb
adc
movsb
mov
mov
fistpl
and
xchg
sbb
sub
xchg
mov
enter
inc
inc
cmpsl
add
sahf
sahf
add
mov
push
cli
mov
mov
shrl
out
push
outsb
jno
jb
dec
mov
test
jno
lods
negb
xor
xchg
jg
cmpb
cmp
push
inc
mov
out
imul
add
adc
shll
clc
cmpb
xor
mov
roll
mov
mov
xor
imul
lods
inc
jne
test
mov
stc
insl
xor
sub
dec
push
jp
movsb
pusha
mov
repz
xchg
add
ret
dec
popf
sahf
push
cld
lock
cmp
push
sbb
fs
lods
mov
out
js
push
movl
fs
test
rolb
mov
fidivrs
inc
push
loope
rol
insl
add
pop
pop
cmpsb
jecxz
or
pop
iret
mov
popa
dec
stos
jb
xchg
push
jg
pop
add
jmp
jns
push
mov
lods
lods
and
fwait
mov
add
out
push
mov
stos
pcmpeqd
adc
pop
filds
mov
xor
xlat
leave
mov
fs
sarb
mov
sbb
test
scas
lahf
push
xorl
ret
adcl
mov
xchg
scas
mov
mov
popf
leave
xor
movsl
ja
mov
hlt
cmpl
call
fisubrs
cmp
jbe,pt
ret
lods
jnp
cmp
and
mov
add
jae
sub
cmc
pop
jmp
mov
fiaddl
scas
sti
lods
enter
popa
inc
xchg
and
ja
add
xchg
das
es
lods
push
xchg
pop
cmpl
es
add
pop
fists
shrb
in
insl
enter
dec
and
js
sub
cli
sbb
aaa
mov
pop
and
cmp
mov
sub
frstor
into
cmp
push
jmp
mov
mov
stc
shlb
nop
jecxz
dec
push
and
in
push
pusha
sbb
inc
pop
add
xchg
movb
fcmovnb
rcrb
enter
pop
or
xchg
pop
repz
fs
in
fsub
mov
xchg
mov
in
mov
popa
cmp
orl
sti
mov
je
mov
jge
adc
cltd
jns
shrb
mov
xorl
push
in
or
int
inc
xor
into
cs
pop
test
lret
or
addr16
pop
aad
add
jg
aas
je
faddl
mov
dec
cmpb
fdivs
cmp
mov
fwait
test
cmc
push
sub
mov
pop
sub
iret
inc
js
push
pop
xlat
mov
xor
jno
aad
sbb
sbb
xchg
movsl
add
imul
xor
outsl
mov
or
notb
mov
insl
out
mov
cltd
das
lods
out
sbb
inc
movsl
je
push
push
dec
in
lret
or
jl
sbb
mov
rcll
inc
cli
inc
pusha
jle
cltd
lods
sub
cmpsl
dec
into
jl
inc
fwait
movsb
mov
jecxz
and
dec
scas
divl
fucom
inc
pop
je
or
cmp
mov
pop
xor
mov
lahf
nop
mov
jle
cmp
xchg
or
inc
or
fbld
movsl
loop
hlt
ljmp
sti
mov
jecxz
add
push
pop
push
adc
cmpsb
rclb
loopne
or
cmp
lret
aas
lods
jg
xor
out
dec
push
pop
or
adc
jmp
mov
scas
dec
cwtl
jbe
pop
pushf
dec
mov
and
daa
push
push
pop
xor
dec
lock
fisttps
mov
sub
cmpsl
hlt
je
xchg
pop
adc
loopne
out
mov
pop
mov
mov
repnz
jne
jmp
mov
lea
aad
lret
xor
fimuls
xor
in
mov
cld
pop
push
inc
in
loopne
sbb
mov
xlat
and
bound
push
pop
popa
mov
pop
test
dec
push
jns
scas
inc
enter
lcall
mov
js
js
out
das
sti
sub
cmp
jle
notl
scas
cmp
push
add
jle
or
cli
mov
jno
push
jae
test
mov
and
push
daa
imul
aaa
cmpsb
lock
cmp
js
ja
div
inc
sub
cmpsb
mov
iret
test
movsl
dec
fsubrp
push
int3
ficompl
lock
pop
xor
dec
arpl
lods
inc
imul
pop
fs
push
push
insl
pop
loop
inc
and
iret
cmp
mov
add
test
imul
xorb
ds
js
cld
add
sarb
call
data16
sbb
sbb
repz
jo
inc
jns
insb
in
xlat
dec
dec
popl
in
icebp
mov
pop
test
repnz
adc
or
mov
mov
imulb
xlat
call
push
imul
or
iret
enter
ret
cmp
inc
mov
inc
jo
sbb
call
gs
arpl
mov
jno
jnp
mov
jnp
dec
lods
sbb
cmpsb
xchg
sbb
lods
mov
jge
jp
insl
imul
pop
outsl
sbb
sub
std
mov
test
sbb
loope
hlt
add
dec
iret
xor
je
mov
das
sub
mov
add
or
sbb
mov
adc
xchg
cwtl
pop
xor
mov
insl
xchg
pop
das
es
int
divl
in
insb
jp
sbb
test
test
test
xchg
outsl
or
xchg
shll
pop
test
cmp
pop
leave
mov
and
pop
movsb
jno
or
push
inc
flds
push
fildl
sub
cmp
enter
push
sahf
fcoml
rclb
push
pop
xlat
mov
stc
or
and
stc
mov
ret
ss
call
mov
inc
fistl
or
call
adc
pop
loope
push
dec
out
movsb
cld
push
mov
inc
cmp
jmp
aam
shll
movsb
xchg
cld
xchg
test
jp
xor
ss
adc
les
in
or
mov
insl
push
inc
outsb
sub
sub
mov
rcll
xlat
sarb
sub
jno
and
cmp
jo
lahf
sbb
add
sbb
xchg
sbb
jae,pt
bound
lods
jae
adc
xor
push
and
mov
shrb
inc
mov
mov
dec
cli
imul
dec
popa
push
jb
jl
scas
pop
dec
dec
loope
out
inc
in
cs
push
xchg
sub
fs
dec
add
mov
imul
bound
inc
hlt
andl
daa
pusha
or
in
mov
pop
arpl
jp
lods
xor
mov
mov
push
jns
sbb
push
andb
push
les
fcoms
xchg
insb
sbb
add
mov
pushfw
popa
in
mov
cmpsl
xor
pop
or
pop
repnz
cmp
data16
jle
fs
and
add
mov
fsubrs
xor
push
clc
fwait
xchg
cwtl
add
or
aad
ficoms
xor
or
jbe
xchg
jbe
cmp
dec
je
shlb
sbb
fildl
ja
sti
sbb
testl
mov
mov
imul
int3
jmp
adc
jle
mov
and
repnz
insb
sti
add
test
jecxz
inc
mov
out
xchg
push
call
repz
jns
mov
xchg
or
imul
jb
xchg
sbb
ret
mov
jmp
push
fistpl
int
push
mov
xlat
xchg
pop
xor
ljmp
sub
xchg
pop
sub
mov
mov
hlt
xchg
dec
subl
sahf
inc
lods
xor
sub
stos
or
cmp
inc
mov
lret
jnp
push
leave
gs
mov
test
subl
adc
cmp
in
pushf
test
in
mov
out
mov
lea
cmp
lea
popf
xchg
sub
popa
filds
cld
mov
imul
sbbl
sub
data16
lods
jo
clc
loop
scas
mov
jne
or
mov
inc
ss
test
jg
mov
pop
repnz
push
sub
movsb
out
xor
xchg
pop
imul
test
je
pop
mov
and
or
jnp
add
ret
mov
mov
ss
jp
stc
inc
cmp
into
pop
clc
mov
mov
ret
mov
lahf
jge
mov
push
psllq
xchg
mov
test
fs
nop
mov
insb
pop
push
movb
repz
lcall
mov
push
adc
and
ljmp
mov
dec
xchg
sbb
test
fisubs
in
movsb
adc
add
iret
aas
imul
dec
test
push
push
imul
dec
xor
sub
cmp
fcmove
pop
sbb
sub
cmp
pop
repz
int3
popa
pop
push
lods
xorb
jno
aaa
ja
pusha
in
mov
xor
mov
mov
in
adc
loopne
ret
mov
push
and
jge
cltd
jle
ficoml
hlt
xchg
inc
cmp
popf
mov
xor
inc
jge
pop
jp
dec
lock
and
aam
inc
push
popa
mov
sbb
cld
lds
rol
les
mov
lods
sti
std
js
adc
rcll
xchg
dec
scas
mov
shrb
inc
enter
inc
pop
movb
ret
inc
push
push
cmc
and
mov
mov
push
cltd
and
mov
lods
and
lahf
repz
sbb
inc
je
cmp
jmp
rorl
xor
aas
je
ljmp
popf
and
fldcw
xor
jge
lea
adc
int
push
mov
xor
dec
dec
inc
and
mov
xchg
pop
mov
sub
add
add
sarb
mov
sbbb
das
in
pushf
jmp
rcl
cmp
mov
out
lock
or
idivl
shl
ljmp
dec
pop
addl
sbb
aaa
push
sub
sub
xlat
and
add
popa
cmp
shrl
and
stos
imul
sub
add
jl
rorl
cmp
inc
lahf
mov
add
sahf
mov
stc
or
sbb
lcall
dec
inc
or
mov
addr16
xchg
mov
subb
cmpl
stc
sahf
xchg
dec
lock
in
fstl
dec
std
inc
test
xor
cmpsl
jbe
and
add
in
pusha
scas
xchg
mov
sbb
push
jle
pop
pop
and
addr16
xchg
ds
movsl
dec
call
push
iret
jl
cmpsb
xchg
push
lcall
xor
jmp
and
fdivs
repz
push
cmc
loopne
xchg
sub
mov
sarb
add
insb
lea
out
add
and
cmp
push
or
dec
and
xchg
pop
scas
jl
push
cltd
test
ret
mov
push
adc
sub
jp
out
push
cmc
std
aaa
lret
sbb
sahf
or
sub
push
scas
out
mov
pop
insl
sahf
inc
cmc
cmp
adc
adc
cmpsb
lds
lds
mov
mov
hlt
fldt
jl
push
and
sbb
lret
imul
push
push
adc
push
pop
enter
lret
mov
push
int
fs
jg
out
jmp
pop
pop
adc
inc
pop
clc
enter
insl
in
popa
mov
in
in
stos
in
enter
adc
test
push
rorb
add
pop
push
dec
cmp
lcall
rclb
loopne
or
jl
mov
or
mov
mov
sbb
daa
xor
jmp
pop
fs
clc
imul
js
xor
add
pop
decl
add
dec
sti
mov
std
rcrb
cli
mov
fwait
mov
scas
fwait
addr16
jae
lea
jg
sarb
mov
pop
mov
pop
int3
jb
cmc
sti
push
shll
xchg
or
mov
mov
in
imul
push
cmpsl
mov
lret
lea
inc
test
bound
push
or
std
scas
cld
pop
leave
lahf
clc
loop
inc
mov
adc
inc
jns
and
cltd
out
jl
insl
scas
jbe
pusha
into
test
mov
sub
mov
popa
mov
sbb
mov
jo
aaa
or
push
aad
dec
or
aam
xor
popw
lret
andb
js
repnz
mov
lret
es
mov
and
mov
cmp
insb
daa
cmp
out
cmp
mov
cld
push
scas
out
cmp
or
add
aad
jecxz
pop
arpl
jp
nop
xor
test
jb
sbb
and
inc
xchg
fildl
push
mov
mov
pop
fadd
hlt
and
lea
push
sbb
leave
lcall
mov
lret
leave
sbb
out
jbe
mov
adc
jnp
push
pop
mov
push
jmp
inc
mov
sbb
out
ds
out
jmp
movl
cmp
inc
jl
into
ret
psubb
sbb
ror
roll
push
sbb
push
cmp
inc
ret
scas
aad
add
xchg
dec
sbb
ss
xchg
cmpsb
out
sbb
mov
sbb
mov
js
in
aas
test
inc
pop
push
aam
rclb
aaa
hlt
in
lcall
dec
push
popa
stos
add
sbb
sub
ficoms
ss
ds
cmp
fldenv
aaa
mov
mov
call
xchg
cwtl
and
mov
push
sarl
and
and
add
cmp
xchg
cmpsb
jp
push
outsb
gs
ljmp
movsl
jbe
bound
test
mov
and
dec
stc
push
jnp
push
ss
xchg
cmp
adc
mov
loopne
das
sbb
aaa
lods
sbb
mov
push
inc
loope
xor
and
or
jmp
jge
or
sbb
or
jo
push
push
mov
and
daa
mov
push
jmp
push
fstps
imul
pop
mov
mov
ret
popa
push
jle
cmp
clc
mov
and
push
cmpsl
pop
ja
das
out
add
cld
mov
cmpsl
push
cltd
xchg
mov
sbb
xor
stos
mov
shr
in
mov
fimuls
movsb
sbb
lock
dec
dec
push
repnz
incl
push
sbb
or
cld
out
inc
mov
dec
or
jecxz
mov
stos
mov
repnz
scas
insl
mov
lret
into
mov
arpl
or
aad
ja
push
movsb
dec
and
aam
sbb
lods
sub
je
cmp
mov
pop
dec
shlb
cmpsb
push
dec
cmp
aam
js
stc
fs
rolb
xchg
push
mov
stos
xor
mov
or
xorb
sbb
inc
inc
in
push
out
mov
add
and
arpl
enterw
push
or
mov
divl
add
scas
imul
mov
xchg
xor
mov
lcall
nop
add
icebp
out
loope
xor
dec
fs
ret
mov
pop
popf
pop
pop
add
mov
arpl
xor
cmp
xchg
clc
mov
mov
clc
ss
out
add
das
out
fwait
adc
ret
or
pusha
inc
dec
clc
std
shlb
add
mov
dec
out
inc
sub
mov
jne
nop
mov
lahf
fmull
shlb
pushf
mov
dec
cmp
inc
sbb
shlb
adc
xor
xchg
mov
mov
mov
loop
and
adc
test
lds
test
mov
push
adc
fs
cli
je
sahf
mov
into
outsb
xchg
daa
das
les
or
outsb
mov
fwait
xor
movsl
mov
dec
frstor
jl
adc
divl
sbb
xchg
xchg
scas
xlat
jb
push
fsub
pop
xchg
pop
ja
out
int
mov
xor
mov
mov
mov
fstl
movsb
fst
imul
sub
jle
pop
mov
test
addb
adc
xchg
lods
bound
and
lea
insb
fucomi
xor
fcmovbe
ror
fcmovu
mov
imul
mov
sbb
pop
aam
jp
pop
jecxz
and
cmc
psrld
adc
in
sub
insl
mov
shrb
xor
xchg
dec
idivl
out
cmp
cmp
mov
lock
addl
and
and
out
lahf
mov
jl
enter
mov
out
adc
loope
mov
movsb
lahf
nop
lcall
sbb
push
incb
stc
ja
mov
push
out
sbb
push
xchg
add
repz
call
mov
lock
in
xchg
mov
in
add
cmp
fcoml
jmp
pop
clc
mov
std
jbe
mov
int
adc
and
dec
fnsave
jnp
sti
cmpsl
lahf
mov
out
shrb
jp
xchg
push
pop
inc
test
adc
les
add
lret
sbb
stos
popf
mov
xchg
jg
add
nop
cmp
fsubrp
fdivl
mov
inc
mov
push
enter
fistpll
gs
addr16
fistl
sub
sahf
enter
jno
cs
out
mov
adc
sub
call
inc
sbb
and
adc
push
ss
into
sbb
fldl2e
jmp
sbbb
adc
push
pushf
bound
cmpsl
mov
mov
pop
leave
dec
jns
mov
pop
pop
pop
mov
ret
int3
clc
std
mov
xchg
push
nop
dec
or
aas
jp
out
adc
jb
test
in
mov
pushf
sbbb
mov
fstps
or
inc
sub
shl
rcll
pop
adc
testl
je
sub
and
dec
cmp
cmp
test
xlat
mov
popf
jbe
insl
add
sub
sbb
sbb
or
addr16
and
pop
std
test
xor
fnstsw
and
mov
inc
mov
lods
mov
test
add
iret
fists
mov
inc
push
dec
sub
dec
sbb
test
xor
nop
loope
add
mov
inc
lock
mov
pop
loope
aas
test
xor
sbb
es
jo
jns
nop
sti
ss
mov
xchg
push
mov
stos
cmp
movsl
cli
add
jo
loope
push
jge
push
and
push
jno
or
push
sahf
imul
fstps
mov
call
in
lock
sub
cli
mov
mov
cs
nop
lock
cmpsb
popf
xchg
dec
mov
pop
jecxz
adc
out
inc
arpl
in
push
push
mov
in
stc
push
mov
sbb
jbe
pop
pop
les
in
fidivrl
xchg
mov
mov
xlat
add
xchg
sahf
leave
mov
in
sarb
and
addr16
stos
std
pop
test
fadds
cmc
dec
test
dec
pushf
fimuls
sbb
dec
dec
mov
js
ss
cli
lcall
cmp
mov
cmpsl
popa
pop
xor
icebp
inc
push
mov
xchg
popf
sti
mov
jb
sbb
rclb
dec
or
sti
xor
nop
pop
nop
pop
out
fbld
ss
ret
mov
packuswb
pop
loop
jbe
lods
mov
xchg
jno,pn
loope
or
add
loopne
loop
bound
push
xchg
sbb
jmp
adcl
insb
sub
xchg
cli
jmp
repnz
roll
arpl
imul
mov
out
push
or
dec
cs
aad
lcall
loop
imul
addr16
sahf
lods
xchg
pop
div
mov
jns
jnp
insl
sbb
inc
lret
push
pop
jns
mov
mov
icebp
lods
cltd
clc
mov
int
add
aas
sub
lea
inc
mov
rcrl
lcall
fnstsw
adc
shrl
ret
cmp
or
xor
clc
outsb
jle
or
sbb
das
jmp
pusha
in
shrl
mov
in
fwait
mov
lahf
pop
mov
sbb
jmp
jecxz
pop
lods
aaa
loope
nop
jmp
mov
xchg
add
mov
cmp
push
mov
mov
xchg
cmc
insl
in
mov
hlt
cmp
mov
inc
pop
sbbb
mov
inc
shlb
mov
jne
cli
xor
into
pusha
jecxz
push
lret
sub
mov
dec
daa
aaa
jne
outsb
mov
sbbb
pop
cwtl
ss
lock
sub
incl
mov
mov
jle
xchg
ss
xorl
fdivrl
pop
das
xchg
jmp
std
sub
lods
mov
es
add
pop
pop
pushf
jno
push
xor
aaa
movsb
sbb
xor
inc
mov
rcl
hlt
jecxz
mov
push
lret
fwait
je
pop
pushf
mov
add
xchg
mov
cld
imul
mov
aaa
popf
mov
in
fwait
aam
adc
jo
sub
ja
inc
mov
push
pop
loop
fs
push
mov
cld
outsl
pop
xchg
push
jb
dec
mov
push
stos
sub
ljmp
sbb
fisttpll
jg
cmpsb
enter
bound
ret
repnz
fiadds
lea
sarb
popa
hlt
fistpl
clc
or
ss
lea
loop
cmp
fsubrs
cmp
push
sbb
es
test
sbb
call
ret
nop
repz
imul
lds
inc
js
inc
mov
jns
movsb
out
sub
pop
xor
movsl
loope
int3
dec
push
mov
andl
or
mov
mov
pop
mov
mov
xchg
mov
push
xchg
mov
ja
inc
mov
pop
iret
cld
sbb
mov
sub
and
adc
cmpsb
aaa
inc
or
das
mov
pop
add
xor
test
test
lds
insl
jns
sti
push
mov
popa
fs
pop
inc
fs
cmp
xchg
nop
punpcklbw
push
rclb
xlat
repz
pop
repnz
daa
adc
cmpsl
sahf
pop
pop
inc
cwtl
push
fwait
adc
fwait
sarl
push
pop
imul
cmp
mov
fprem1
andl
lods
rcll
jp
loop
pop
or
cwtl
or
mov
iret
push
or
inc
fisubs
loop
cmp
xor
mov
fs
lods
sahf
data16
sbb
lret
pop
mov
sbb
mov
or
int
inc
daa
repnz
insl
mov
mov
mov
aad
xor
push
ret
pop
cs
sub
enter
push
jno
mov
repz
mov
pop
push
enter
jl
inc
sub
sbb
mov
cmc
popl
sahf
std
lods
xchg
pop
sub
sub
cmp
jl
hlt
shll
mov
and
add
or
add
stos
cld
pusha
lahf
mov
sbb
jmp
push
inc
in
je
mov
testb
dec
fisubrs
lret
xchg
repnz
lret
cld
and
data16
or
jp
sbb
or
and
popf
out
call
dec
pop
cs
fwait
xor
negb
xchg
sub
das
mov
data16
pushl
mov
outsb
lock
push
push
loope
mov
cs
xor
cli
push
push
push
push
push
ja
nop
rolb
mov
outsb
loop
repnz
dec
and
into
fdivrs
pop
inc
mov
jge
aad
sbb
decb
cmc
push
lock
mov
sbb
test
mov
int3
leave
sbb
stos
pop
out
loope
pop
dec
sub
xchg
jo
jno
es
cmpsl
mov
pop
cmp
dec
inc
dec
jp
sub
and
test
pop
cmp
lods
inc
mov
push
dec
jge
clc
std
pop
mov
xor
inc
jg
mov
mov
dec
ja
push
subl
xor
mov
sbb
sub
ss
fiadds
cmp
lret
dec
add
popa
xor
add
and
leave
in
xchg
ss
dec
mov
jmp
pop
bound
mov
test
pop
xchg
cmpsl
out
jl
or
fxam
and
adc
les
fistpl
fs
scas
pop
mov
mov
out
jbe
jne
lock
or
mov
jg
faddl
push
outsl
push
add
cmp
es
dec
pusha
orb
mov
push
cli
push
push
inc
cwtl
decb
push
std
cmp
pop
xchg
xlat
push
add
lret
mov
dec
jo
enter
lahf
push
jnp
cmc
dec
sti
xchg
inc
sub
mov
dec
lahf
jge
stc
jmp
dec
cwtl
or
clc
sub
clc
lods
mov
mov
and
cmp
xor
mov
add
int
mov
pop
repz
fwait
icebp
loop
pop
adc
mov
push
scas
fwait
mov
pop
and
pushf
insb
and
jp
mov
dec
push
enter
xlat
add
xchg
leave
sar
scas
cwtl
cmpsb
add
fabs
push
dec
dec
loopne
sbb
sbb
outsb
mov
pop
cmp
fcoms
cmpsb
dec
clc
mov
and
addr16
les
shlb
xchg
sbb
xor
adc
imul
addl
and
aaa
sti
mov
cld
jecxz
testl
push
mov
fs
xchg
inc
inc
icebp
roll
pop
cmp
sbb
lret
dec
pop
push
movsl
mov
or
fwait
pop
lea
push
sahf
aaa
xchg
mov
out
mov
inc
push
jmp
xchg
out
clc
in
repnz
dec
lahf
and
daa
xchg
inc
gs
lea
cmpsb
divl
inc
xchg
outsb
push
mov
xor
out
rclb
sub
sub
xchg
daa
xlat
popf
xor
enter
or
ret
mov
mov
xor
add
lret
pop
outsl
add
stc
sub
pop
dec
inc
xor
and
mov
stos
mov
sbb
dec
nop
leave
inc
mov
fdivrl
jl
pop
sbb
xlat
pop
out
mov
mov
cltd
lock
loop
lods
fstps
mov
cld
lods
sbb
mov
repnz
jno
mov
dec
je
lret
mov
jbe
rcll
test
inc
ljmp
sbb
repnz
pop
ja
and
sbb
das
jbe
or
mov
ja
or
movsl
and
xchg
inc
xchg
cmp
sub
daa
adc
pop
popa
aam
or
pushf
loopne
aam
or
push
cmp
adc
cmpsb
pop
gs
std
mov
or
mov
lret
insb
or
mov
repz
jns
aam
push
xchg
stc
out
mov
lea
std
mov
in
jno
mov
in
sti
rclb
xlat
push
sub
into
cli
lods
inc
dec
test
dec
dec
xor
addb
or
dec
pop
add
adc
jg
xchg
pop
stos
in
push
mov
outsb
les
daa
jns
dec
add
jo
inc
inc
cmp
push
inc
mov
scas
test
add
mov
jbe
mov
inc
lea
in
jp
mov
negb
sbb
std
xchg
pop
mov
cmovns
cmpsl
jg
lods
push
imul
jp
push
lahf
aam
das
adc
or
lds
aam
ljmp
pusha
test
out
cs
aaa
mov
mov
stos
es
pop
add
mov
mov
pop
adcl
testl
sahf
mov
xlat
mov
ret
mov
lcall
gs
or
mov
lret
int3
mov
pop
xlat
mov
adc
mov
jne
push
push
add
push
aam
push
cs
loopne
jmp
push
pop
jmp
fwait
push
jo
xor
loope
repnz
into
jmp
mov
jp
mov
pushf
sbb
pop
jns
aam
clc
aad
bound
orl
mov
in
loopne
xchg
ds
add
push
pop
sub
repz
mov
mov
xor
mov
jnp
out
or
and
mov
jno
hlt
pop
rcl
cmpsl
data16
sti
cld
mov
push
sbb
push
fimull
cmpsb
into
fistps
fldcw
mov
cmp
mov
movsl
mov
xchg
mov
add
dec
add
aam
sbb
cli
pushf
sbb
mov
cmp
and
cs
pop
imul
adc
xchg
in
sbb
fldl
jge
mov
xor
push
leave
pop
xchg
insl
jl
or
sub
xorl
call
mov
daa
je
mov
xchg
sbb
adc
hlt
sub
popa
mov
add
rcrl
push
sub
loope
mov
test
repnz
sbb
adc
xchg
cmp
and
popa
cmpsl
and
nop
mov
ficomps
out
inc
add
fdiv
sub
cmp
leave
ljmp
stos
sbb
inc
fucomi
xchg
pop
fwait
mov
jecxz
in
dec
insl
popa
mov
adc
ja
dec
pop
sbb
xor
sub
mov
jecxz
mov
push
popa
out
test
add
das
scas
or
cwtl
int
test
xor
inc
mov
lods
jno
sahf
lds
sbb
xchg
jno
in
and
dec
push
xchg
test
mov
out
popf
jnp
aas
imul
jl
movsl
popa
jmp
push
mov
clc
sahf
cwtl
fdivl
jno
cltd
cmpsl
adc
and
and
push
sub
xchg
inc
stos
lcall
fmull
mov
test
adc
test
pop
rolb
xorl
mov
lret
dec
adc
cwtl
mov
lea
std
pop
xchg
adc
add
lods
arpl
imull
mov
enter
jg
or
cmp
ror
or
loope
es
and
sbb
push
out
jmp
pusha
dec
mov
jae
iret
lds
pause
pop
xorl
stc
sbb
sub
and
pop
imul
pop
mov
jno
test
lret
in
and
sbb
loop
adc
push
ljmp
pop
pop
sub
pusha
ja
fdivs
into
mov
pop
adc
outsb
mov
rcrl
lret
ds
add
inc
jae
push
inc
je
xchg
in
cmp
fwait
push
addr16
test
test
clc
mov
pop
mov
sbb
out
mov
movsb
adc
mov
or
mov
adc
push
in
push
jb
shrb
lret
lds
add
adc
gs
insl
adc
sub
jmp
popa
dec
stos
inc
mov
sub
add
push
jns
aam
and
filds
in
out
adcb
std
adc
pop
sub
insl
cmp
mov
xlat
sub
sbb
push
add
adc
xor
ja
movb
sbb
sub
mov
inc
cmpb
int
push
imulb
inc
xchg
push
jge
scas
imul
call
xchg
shll
pusha
clc
mov
adc
arpl
jne
aad
in
mov
es
sbb
jbe
sub
jecxz
add
mov
xor
data16
testb
and
cmp
scas
call
mov
xlat
pop
xchg
inc
loop
std
out
and
out
dec
in
loope
pusha
push
icebp
push
fnstcw
xchg
popf
sub
cmp
push
push
nop
sbb
scas
mov
fstps
inc
push
je
imull
pop
mov
dec
pop
adcb
lds
ja
xor
sub
je
xor
mov
aam
mov
into
imul
cmpl
add
sbb
add
mov
bound
lcall
push
push
stos
roll
cld
stos
inc
fsubs
or
xorl
sbb
pushl
sahf
enter
inc
sti
sbb
cltd
push
pop
mov
or
pop
mov
xchg
lahf
lea
mov
das
dec
xor
sub
jmp
ljmp
or
dec
sbb
adc
cld
xchg
xor
xor
in
mov
out
push
mov
icebp
mov
and
loop
mov
sub
popa
rclb
arpl
arpl
cld
fadd
adc
scas
sahf
lret
xchg
adc
or
and
test
int3
inc
mov
in
scas
mov
daa
push
xor
mov
pop
leave
cld
test
cmp
xor
xor
jg
cwtl
or
adc
test
cmp
xchg
pop
lock
ja
inc
xchg
or
pop
jb
daa
mov
jecxz
test
stos
sti
sbb
jg
add
loope
sub
pop
xor
ja
popl
jne
pop
mov
push
lea
lock
or
xchg
lret
loop
dec
cwtl
in
das
adcb
cli
mov
test
mov
or
in
lds
imul
or
out
nop
test
dec
lret
dec
xor
ficomps
loopne
adc
js
mov
mov
sbb
ja
inc
test
cld
movsl
push
mov
mov
mov
and
ds
jl
and
and
or
test
jne
bound
push
mov
jge
fsubl
mov
fwait
or
add
sahf
mov
sbb
jns
scas
adc
mov
pop
add
mov
js
mov
and
repz
fiaddl
movsl
jo
fldcw
lahf
in
push
sub
and
incb
mov
fnstenv
fs
dec
popf
aas
out
pop
test
xchg
dec
dec
jb
jg,pn
mov
lods
into
sbb
aam
lods
fcomi
adc
pushf
dec
ret
lock
movsl
mov
mov
ljmp
repz
cmp
push
in
xlat
inc
mov
mov
mov
mov
sahf
repz
das
xchg
xchg
insb
dec
mov
add
or
cli
xor
jle
std
inc
fs
cmp
in
jbe
pop
imulb
mov
pop
mov
dec
mov
sahf
xchg
popf
adc
xchg
or
dec
mov
xchg
mov
lods
mov
popl
mov
add
mov
es
sub
fildll
add
in
cmc
jb
fwait
cmp
push
push
fcmove
jno
outsb
inc
cmpb
push
dec
loopne
movsb
nop
and
xchg
mov
dec
xchg
xlat
addb
les
push
rcrl
shll
push
sub
in
or
aaa
into
inc
fidivs
xor
sbb
cwtl
xchg
mov
and
xor
bound
jl
sub
mov
dec
rclb
push
mov
cli
dec
in
lods
arpl
aam
icebp
xchg
sub
push
ja
push
pop
xor
movsl
jae
or
flds
pop
pop
mov
mov
and
out
insl
cmp
dec
out
or
cs
xchg
mov
jge
ficompl
test
dec
mov
xchg
cltd
outsl
xchg
add
cwtl
outsb
out
pop
pusha
sbb
push
orb
cld
lcall
sub
push
notb
sub
fmul
push
pushf
or
sub
icebp
mov
mov
dec
or
fidivrs
jae
popf
imul
push
mov
pop
sub
jnp
repz
mov
rcr
fnstsw
sbbb
jge
and
mov
mov
xor
or
rep
adc
pop
xchg
pop
push
loope
mov
mov
leave
dec
fwait
pop
xchg
push
inc
lods
stos
push
imul
pop
in
idivl
fidivrs
sti
fs
ljmp
or
and
pushf
mov
pop
push
sub
sub
test
adcl
sub
sbb
mov
jbe
push
fists
testl
stos
mov
outsl
cmp
out
sub
and
stos
das
mov
or
mov
insb
push
loopne
fadd
les
sbb
in
cmp
adc
jle
xor
shll
mov
loop
insb
hlt
and
repz
inc
jl
dec
cmp
dec
dec
push
or
ffree
mov
rcrb
popa
jbe
aam
call
testl
sahf
adc
pop
aas
cmp
lea
frstor
xor
jns
insl
cmovl
bound
jnp
ror
imul
push
and
loope
adc
subb
mov
outsl
cld
shll
fs
fsubl
push
inc
push
pop
adc
dec
inc
jmp
xor
stc
call
cmp
sub
jmp
push
push
ret
inc
setl
out
or
mov
ljmp
push
dec
push
mov
pop
jmp
push
cmp
mov
loopne
orl
xchg
cmp
nop
pop
lock
pop
cmp
push
jg
cli
push
addr16
sti
and
sbb
adcl
or
mov
hlt
push
int3
add
inc
push
push
inc
out
mov
popf
xchg
sbb
inc
scas
add
xacquire
and
movsb
jl
jo
mov
imul
sbb
adc
out
mov
dec
jg
lret
cmp
fsqrt
imul
or
sbb
clc
inc
mulb
mov
into
fs
outsb
xlat
push
push
loope
orl
jg
jle
sub
lcall
add
pop
les
andl
in
xor
add
or
jmp
sahf
insb
bound
cmp
inc
pusha
mov
push
and
push
lods
sbb
sbb
xchg
dec
adc
test
lods
repz
fstpt
xlat
je
andl
cmc
popa
pop
mov
fwait
mov
mov
lret
jmp
lret
movsb
or
and
xchg
test
ja
lds
push
mov
cwtl
dec
lods
fsubrs
or
ret
cmc
mov
test
xchg
out
or
leave
xchg
call
adcl
je
fs
jno
jns
mov
fsubl
lea
pop
and
pop
ljmp
out
lods
adc
push
fcoms
mov
call
fs
add
call
add
hlt
pop
dec
sub
ds
lret
push
adc
pop
movsl
cmp
and
mov
cmp
sbb
ds
jo
push
dec
push
roll
addb
hlt
push
sbb
xchg
jg
sahf
mov
and
xor
lea
cmp
mov
adc
dec
mov
adcl
cmp
add
rcrb
pushf
xor
adc
fidivl
sub
push
mov
in
push
jle
int3
bound
inc
outsl
int3
mov
scas
jns
dec
dec
lahf
in
mov
ficompl
adc
iret
or
jne
bound
es
mov
iret
sbb
adc
cmp
mov
aaa
hlt
data16
push
rorl
dec
movsl
in
push
test
loope
mov
cmp
je
daa
fcmovbe
fldt
pushf
xor
pop
jnp
popa
push
pop
dec
mov
ror
rcl
sbb
and
arpl
stos
xchg
inc
iret
arpl
mov
pop
and
jb
xchg
sub
aam
or
inc
add
outsb
roll
subl
mov
subb
mov
icebp
cmp
or
cmp
std
xchg
xchg
les
jle
cltd
mov
pop
js
push
dec
or
fs
push
rolb
push
add
fidivrs
sbb
jle
mov
icebp
arpl
jle
fs
lret
pop
mov
fwait
cmp
test
jae
add
push
icebp
cli
inc
daa
add
pop
xchg
imulb
mov
aaa
mov
push
and
js
repnz
outsb
mov
sub
and
sub
lcall
popa
mov
pop
call
or
repz
dec
mov
ret
cld
xchg
leave
sti
sub
xchg
sbb
push
ss
sub
dec
dec
xchg
mov
sub
mov
int
enter
out
arpl
add
sub
pop
push
mov
sub
daa
mov
inc
out
jb
sub
adcl
loopne
push
add
lock
jo
hlt
cmp
test
push
fdiv
or
leave
pop
adc
clc
loop
inc
sbb
push
test
out
add
sub
or
gs
aam
scas
insl
jo
inc
or
out
imul
mov
pop
dec
cs
push
cmp
in
jp
out
mov
addr16
xor
jnp
sub
or
mov
xchg
add
adc
scas
mov
fcom
pusha
test
jnp
test
xchg
ds
add
daa
les
arpl
push
xchg
mov
jecxz
shll
les
outsb
add
dec
mov
mov
sub
pop
je
add
imul
pop
add
push
inc
and
xchg
cmp
lods
adc
cltd
xchg
stos
xor
pop
in
icebp
sbb
mov
data16
sub
adc
cli
or
or
cwtl
xchg
inc
inc
jnp
stc
xlat
out
inc
fiaddl
and
add
fwait
jmp
push
mov
cli
arpl
fmuls
mov
sub
pop
pop
arpl
and
push
cmpsb
inc
adc
adc
or
int
adc
sbb
dec
pop
sti
or
test
sbb
fs
cmp
and
mov
lods
push
dec
mov
adc
test
mov
das
into
sbb
mov
xchg
add
in
add
rorl
lret
and
clc
test
pop
jbe
mov
push
arpl
and
imul
cmpsl
lods
jb
sbb
fcmovnb
push
inc
lcall
outsl
icebp
test
outsb
push
cmp
imul
mov
rol
lcall
sbb
pop
push
dec
fstps
adc
sti
pop
ret
mov
rorl
notl
dec
cmp
xchg
add
orl
leave
sub
xchg
rorb
adc
sub
cwtl
mov
mov
push
pop
ret
test
lea
dec
sub
bound
jmp
xchg
jae
dec
push
dec
popa
pop
jmp
xor
xchg
or
movsb
dec
in
xor
stc
movsb
push
inc
or
cli
lock
ret
in
rol
and
int
mov
mov
jno
add
andl
and
mov
xor
loope
fists
dec
or
jb
rcll
cmc
dec
repz
cmc
in
rolb
scas
mov
mov
lret
fcmovnbe
aas
stos
dec
mov
into
sbb
xlat
shlb
cmpsb
pop
add
aas
mov
dec
mov
or
jns
inc
jno
lock
push
or
cmp
sub
test
add
inc
arpl
movsb
add
aas
and
dec
imul
cmp
popf
adc
test
mov
cmp
xchg
punpckhwd
rcll
add
jmp
xchg
xchg
push
adc
push
push
sub
ficomps
push
push
push
test
xchg
xchg
fidivrs
lret
das
ja
jae
std
loope
lods
mov
les
fiaddl
xchg
movsb
inc
mov
scas
insb
jge
xchg
stc
or
push
or
lret
cmp
mov
bnd
repnz
dec
out
in
test
mov
into
push
test
lcall
sbb
lea
xor
bound
mov
dec
jmp
lret
sar
sbb
in
test
sub
cmp
mov
push
inc
test
dec
mov
jae
dec
idivb
repz
add
mov
clc
xchg
ds
in
stos
pop
aam
test
andl
jnp
mov
push
and
jnp
inc
cmp
push
sub
xor
sbb
sbb
cwtl
loopne
clc
push
pop
cmpsb
mov
cmp
jle
enter
jecxz
xchg
xor
stos
sbb
mov
clc
inc
dec
lock
mov
out
and
xor
xchg
pusha
sbb
mov
xchg
mov
pop
push
mov
dec
ret
jmp
push
mov
test
popa
in
mov
std
xorl
xor
cli
dec
inc
out
addl
std
inc
int
fadds
js
push
mov
mov
fs
ss
fidivrs
pop
push
inc
sbb
sbb
imul
gs
jge
jmp
fwait
pop
imul
push
adcl
jmp
ja
xchg
fbstp
stos
push
leave
les
out
popa
das
inc
adc
shlb
mov
cmpsl
inc
jns
cmp
mov
call
fs
cmp
sbb
arpl
add
dec
inc
push
mov
pop
jecxz
mov
xchg
outsb
das
rcrl
push
cmp
lods
xchg
mov
jnp
fisttps
mov
mov
loop
push
lret
sub
mov
fsubp
cltd
dec
sub
xchg
pop
ja
inc
call
mov
cmp
add
out
scas
jle
insb
and
adc
pop
adc
mov
mov
dec
stos
testl
jne
or
mov
mov
cmc
clc
andb
xchg
inc
and
mov
clc
mov
or
cli
loope
ja
dec
cmpsl
jmp
cmp
pop
out
jns
iret
push
push
out
js
cld
imull
jnp
mov
and
lods
jle
mov
adc
mov
ret
pop
out
pop
aam
sahf
testl
dec
add
sbbl
popa
repz
dec
out
jb
in
fisubrs
mov
test
sub
push
ret
mov
inc
pop
stc
jne
mov
xorl
les
pop
lea
or
fwait
pushf
lahf
scas
mov
clc
cmp
mov
adc
aas
shrl
outsl
es
loopne
incl
ret
jge
sbb
mov
push
lea
xchg
jl
rclb
adc
repnz
pop
shlb
jl
mov
cmp
iret
mov
jp
iret
sbbb
cmpsl
fadds
rcr
lcall
ljmp
stos
cmp
call
ss
ret
xchg
test
push
inc
sub
mov
in
cwtl
movsl
inc
mov
pop
xchg
mov
mov
mov
imul
jl
cmc
and
imul
sub
or
aad
ret
mov
jno
lcall
les
int3
roll
inc
mov
lahf
repnz
addr16
cmpsb
push
js
xor
inc
mov
aaa
cwtl
or
aas
leave
divb
imul
push
cmpsl
xor
cmp
mov
dec
xor
xor
fidivrs
test
xchg
or
in
jmp
test
lahf
lret
rcll
popf
jge
adc
jg
push
or
dec
adc
outsb
fstpl
aam
jae
jne
subb
pop
nop
xlat
pusha
jns
adc
xor
sbb
loopne
and
jge
or
ljmp
xchg
push
fdivl
cmc
adc
xor
mov
jecxz
push
loop
imul
ds
popa
jmp
insl
mov
inc
adc
pop
addb
sbb
lods
enter
in
jmp
mov
mov
mov
imul
xchg
cmp
fsubs
les
shlb
or
repz
scas
loop
push
cli
cmpsl
cmp
int3
ja
xlat
add
adc
sub
out
js
addr16
sbbl
stc
mov
xchg
ja
shr
hlt
mov
call
scas
jne
mov
outsb
adc
pop
testl
pop
mov
xchg
sti
xlat
hlt
mov
xchg
sbb
hlt
insb
js
int
leave
sub
out
fiaddl
or
mov
mov
lock
fldt
loope
pop
xchg
jg
mov
negb
push
cmc
jg
xchg
dec
pop
mov
sbb
out
gs
dec
insl
orb
lock
outsb
mov
jp
sub
jg
cmp
jle
cmp
out
jle
jg
xchg
inc
or
xchg
stos
sub
dec
or
xchg
into
cmp
ljmp
adc
lods
imul
jns
in
mov
mov
ja
repz
shrl
rcl
dec
fldcw
adc
and
jns
mov
cltd
dec
mov
mov
or
mov
mov
vhaddpd
fs
inc
stos
fcoml
xchg
ret
xor
aad
cltd
popa
fbld
cmp
leave
call
sti
adc
push
test
decl
pushf
xchg
cltd
fisttpll
pop
lret
dec
les
or
sub
push
inc
popf
pop
push
int3
inc
imul
mov
imul
jb
cmp
pop
push
pop
fstpl
mov
or
jns
jne
sub
sahf
or
pusha
fidivl
ja
push
in
xchg
aam
jp
rorl
scas
mov
mov
cmp
adc
jns
add
repnz
push
cltd
xor
nop
add
mov
jmp
fisttps
ljmp
jp
or
adc
inc
or
mov
inc
imull
loop
push
pop
jecxz
into
nop
and
sub
mov
mov
movlhps
sbb
enter
stos
push
je
cmpsl
aad
jns
ljmp
imul
test
mov
sahf
add
adc
arpl
nop
scas
outsl
push
loop
les
loop
adc
fldl
mulb
cmp
jp
inc
fdivl
adc
shlb
xchg
rcrb
mov
xor
add
dec
lods
sti
mov
lahf
or
jmp
jge
sub
aas
sbb
adc
mov
pop
cli
addb
dec
pop
out
sahf
mov
add
imull
mov
lret
inc
sub
bound
out
iret
dec
cmpsb
repz
ficoml
sub
jbe
popa
imul
cmp
adc
arpl
popf
or
push
xchg
mov
sub
mov
sbb
stc
loop
adc
sub
sub
insb
adc
mov
push
cmp
fisubs
mov
outsb
push
mov
mov
rcrl
fld
mov
aaa
rclb
movsl
repnz
push
lods
push
push
adc
icebp
push
sub
adc
pop
ror
in
jb
loopne
sahf
outsl
inc
fnstenv
ja
out
arpl
bound
daa
mov
jp
jae
fstps
inc
fists
cmp
cmp
shrb
in
sbb
lds
jmp
push
add
adc
pop
mov
arpl
adc
and
jg
flds
inc
push
inc
test
mov
push
popf
iret
loope
aas
icebp
mov
mov
fwait
pusha
pop
add
sub
jnp
std
lahf
inc
stc
push
daa
lahf
sbb
mov
mov
pusha
xchg
in
cmp
or
loop
lahf
andb
popf
dec
cmpsl
add
sub
dec
sbb
pop
xor
dec
jmp
std
dec
inc
mov
test
imul
icebp
jge
cmpb
out
fidivrs
mov
and
jmp
mov
sub
push
sub
mov
dec
mov
push
push
push
xchg
push
ret
fnsave
call
cmc
lods
int3
insl
jl
mov
cmpsb
adc
mov
mov
jge
add
or
cs
scas
js
scas
lahf
test
jp
cmp
push
sbb
lret
ss
or
lahf
popa
cmpsb
dec
sbb
mov
adc
and
xchg
test
mov
xchg
insl
outsl
mov
push
sub
mov
mov
mov
jmp
cli
pop
mov
test
dec
dec
or
imul
jnp
aam
fidivl
icebp
je
or
lahf
fsubr
in
in
mov
dec
or
adc
mov
leave
dec
or
xor
dec
lahf
cmp
and
aad
daa
pop
push
xor
pop
mov
ret
sub
dec
into
cld
pop
loopne
ror
adc
dec
dec
add
mov
cmpsl
mov
lcall
xor
leave
das
push
inc
pusha
cmpsl
inc
adc
int3
cmp
or
dec
dec
in
out
xchg
lock
int3
add
imul
ret
sbb
add
mov
jno
in
xchg
mov
xor
mov
popa
mov
mov
in
pop
scas
in
pop
dec
xor
cwtl
loopne
mov
and
and
test
mov
cwtl
sbb
fucomp
jmp
ss
lea
or
sbb
pop
cli
jns
pop
out
sti
xor
fwait
ss
into
add
loope
lock
xchg
nop
ret
lds
mov
jge
stc
dec
mov
inc
mov
lds
mov
imul
pop
inc
scas
inc
mov
mov
mov
and
push
xor
add
push
jl
inc
push
push
and
mov
js
cmp
push
negl
insb
xchg
ss
xchg
je
jecxz
pusha
mov
aaa
test
arpl
mov
gs
add
pop
mov
subb
dec
shll
mov
adc
daa
pop
mov
and
icebp
jae
mov
push
cmp
pop
decb
cwtl
dec
and
aam
push
and
pop
repz
xchg
pop
pop
dec
sbb
add
jp
jns
add
sti
push
mov
icebp
and
pop
clc
xchg
xchg
push
test
aas
imul
ljmp
xchg
cwtl
sub
push
in
stc
cmp
inc
out
mov
mov
and
mov
xor
cwtl
imull
imul
cld
or
and
jp
and
movsl
xlat
stos
ds
test
dec
xchg
jb
mov
sbb
mov
aam
scas
dec
sbb
scas
xor
clc
push
not
out
mov
movsb
popf
ret
and
divb
sbb
pop
mov
and
adc
lods
fnstsw
xor
gs
in
mov
ja
xor
sbb
push
inc
jo
push
and
decb
sahf
out
and
and
mov
ss
xor
cmp
xor
fdivs
xchg
shlb
jb
inc
out
enter
std
cmp
add
xchg
dec
jo
or
popf
cs
cld
test
push
or
add
jmp
sbbl
filds
sub
lret
xor
pop
in
in
je
and
dec
repnz
ret
pop
out
dec
loope
sub
imul
mov
sbb
in
xor
jb
insb
bnd
push
mov
jge
imul
imull
std
xor
push
sbb
data16
mov
fs
test
call
xlat
xchg
sbb
sub
je
out
jge
xor
addb
js
mov
mov
pop
add
insb
add
mov
xor
adc
xlat
sub
jecxz
dec
inc
xchg
dec
gs
repnz
dec
sarb
cmp
inc
mov
push
mov
mov
scas
test
loop
jl
add
pop
mov
mov
and
push
pop
xchg
adc
sbb
and
stc
jnp
cmp
sbb
push
mov
loop
jp
inc
lods
sbbb
or
and
in
sub
sbb
mov
adc
jo
cmp
inc
push
adc
mov
push
movsl
lock
dec
sub
xor
mov
dec
lock
negl
cmp
fwait
dec
ret
lds
leave
repz
pop
inc
arpl
sub
dec
jge
jno
pop
in
add
je
fildl
or
sbb
test
inc
gs
cltd
pop
imul
mov
negb
stos
aaa
mov
nop
inc
hlt
jg
bound
xchg
or
mov
xchg
das
ljmp
repz
mov
les
scas
cwtl
movsb
jmp
mov
cmp
sti
jo
xor
xchg
push
jge
adc
adcl
jge
ja
sub
adc
xchg
jae
add
fbstp
mov
mov
arpl
cmp
sub
mov
jne
pop
arpl
int
mov
andl
insb
sti
insb
jno
cmp
xchg
in
hlt
pop
icebp
jge
mov
push
fs
add
jg
adcl
cmp
xor
lods
fsubp
jg
pop
test
jb
pop
jno
in
mov
popf
daa
aas
shl
cmp
mov
jmp
pop
test
mov
ds
xchg
out
cmpsl
sbb
scas
lret
pop
out
sub
mov
cwtl
shll
mov
mov
mov
nop
inc
dec
and
data16
loop
pop
out
xchg
pop
and
movsl
rcll
add
jb
cli
cmpsb
aad
jnp
sub
fisttpll
cmp
lods
or
dec
mov
ds
add
dec
xor
push
push
outsl
xchg
xor
mov
loope
dec
push
mov
lahf
add
xchg
mov
and
mov
icebp
ljmp
xchg
push
sbb
jb
jp
xor
dec
mov
movsl
mov
and
push
jne
insl
nop
cwtl
xchg
mov
jecxz
mov
and
mov
or
bound
pop
adc
test
inc
cmp
cmp
push
mov
xchg
cmp
test
nop
stos
xchg
sbb
add
or
stos
cmp
jo
xchg
popa
push
enter
adc
pop
pop
and
ljmp
popf
ret
mov
mov
fisubrl
hlt
cmp
lds
add
enter
push
fiadds
cld
outsb
mov
repnz
sarl
pop
inc
jo
push
pusha
jbe
cmp
ja
push
sbb
pop
mov
nop
cltd
clc
aas
cmp
aas
shll
cmp
cld
mov
dec
xor
and
negl
push
ret
hlt
addr16
push
mov
xchg
addr16
push
lods
inc
ret
cmp
jae
dec
add
push
stos
ss
dec
lret
movsb
lds
dec
sbb
mov
jge
sti
jns
inc
mov
jne
inc
cmp
and
int3
dec
sbb
ljmp
sbb
mov
andl
addr16
push
jae
pop
xor
movsl
jno
xor
cmc
sti
dec
cmp
mov
into
repz
mov
inc
or
pop
adc
out
mov
aam
jl
out
jae
dec
fnstenv
push
ficompl
cmp
outsl
mov
xor
mov
push
jl
push
repnz
inc
push
inc
push
sbb
in
jns
add
cwtl
jge
xor
js
and
jne
jnp
mov
sbb
scas
sub
pop
or
lea
sbb
outsb
mov
jns
call
ret
lods
mov
stos
movsl
gs
sbb
cmp
mov
je
add
and
rcrb
push
loope
and
ret
mov
test
popf
dec
sbb
sub
sub
mov
repnz
mov
jp,pn
in
cltd
aaa
push
mov
mov
subl
pusha
push
mov
test
mov
inc
int
dec
out
xlat
xchg
out
decb
and
psubusw
jns
xchg
push
push
or
push
push
call
lods
pop
mov
push
pop
add
movsl
mulb
mov
jle
cmpsb
cmp
in
sub
js
mov
rorb
cmc
mov
orl
mov
xchg
mov
xchg
sbb
fnstenv
adc
ja
movsb
inc
in
pop
push
add
addr16
fldenv
outsl
stos
cmp
xor
stos
std
gs
push
pop
mov
insl
iret
push
lods
addr16
push
xchg
mov
mov
push
std
das
into
aaa
xor
push
hlt
jne
inc
cwtl
shll
cmpsl
add
push
fwait
sub
mov
adc
pop
sub
aad
in
sbb
ljmp
dec
sahf
leave
loope
push
mov
enter
bound
out
xchg
mov
cmp
xchg
loope
push
int3
mov
and
fimull
xchg
cmc
insb
sbb
push
ret
xlat
sbb
pop
repnz
dec
sub
pushf
imul
lock
push
inc
rcrb
push
xchg
jmp
jmp
add
test
mov
dec
pop
cs
adc
cwtl
or
sahf
sbb
daa
mov
rcrl
lret
adc
lock
cmp
pop
fcom
fistpl
icebp
xchg
xchg
loope
punpcklwd
add
mov
sbb
out
pop
pop
jo
mov
mov
cmp
jbe
jle
and
inc
add
loop
xchg
push
adc
rcrl
call
dec
repz
shlb
dec
aas
loopne
test
add
movsl
adc
cmp
paddsw
mov
imull
lods
xchg
mov
xchg
ret
mov
les
lret
stos
and
mov
push
ljmp
jb
repz
out
cmpsl
dec
addr16
push
nopl
jl
xchg
pusha
les
rcl
push
out
aam
movsb
xchg
push
xor
and
loopne
mov
pop
dec
sub
and
shll
cmp
jge
cmp
sbb
test
sbb
push
jns
pop
lea
movl
imul
inc
sub
scas
scas
mov
lret
ds
inc
sub
dec
scas
fdiv
movsb
ret
out
icebp
imul
xchg
icebp
pop
pop
inc
popf
mov
sbb
xor
popf
das
xor
adc
mov
mov
idivl
les
inc
jecxz
xor
aaa
jo
and
jae
test
sti
mov
mov
testb
cmpsl
xchg
imul
xlat
call
call
fucomi
mov
lret
outsl
jo
out
gs
push
cmp
or
push
mov
ss
repz
std
jl
push
por
shll
inc
mov
daa
outsl
adc
jne
xchg
adc
pop
push
xchg
xchg
scas
cmp
aaa
sub
or
imul
mov
or
xor
jge
mov
push
mov
pusha
xchg
popf
aam
fiaddl
push
popf
fdivrl
push
sbb
stos
cmp
shrb
jmp
pop
mov
sahf
and
cmpsl
jmp
loope
test
idivb
xor
pop
or
std
mov
pushl
push
cmp
dec
fmul
stc
hlt
lcall
pop
cmc
fiadds
repz
mov
test
sbb
lock
mov
fistl
ljmp
and
data16
mov
mov
sti
inc
mov
add
mov
push
mov
ss
adc
hlt
mov
jmp
jnp
fldcw
mov
jmp
sub
push
mov
add
dec
and
test
inc
imul
inc
jb
mov
push
pop
lret
ret
clc
fldl
or
jg
mov
sub
and
pop
adcb
adc
pop
push
pop
std
arpl
or
dec
cmp
adc
or
fsubrs
sub
aaa
test
inc
push
push
or
pushf
and
add
fs
xchg
loope
out
fs
shlb
sbb
cmp
stos
add
fstl
dec
or
shll
mov
adc
cmc
lods
mov
adc
pop
xchg
mov
subb
jg
mov
xor
push
pop
jb
jb
shlb
repz
xor
dec
and
call
mov
adc
rcrl
jae
es
mov
gs
sub
ret
outsl
push
xchg
add
jge
push
rclb
sbbb
movsb
xchg
push
pop
sbb
cmp
cs
data16
xor
pop
andl
inc
pop
and
jl
es
sub
fadds
sahf
testl
insb
cmp
test
mov
adc
test
add
cld
push
mov
sbb
sub
cwtl
dec
add
enter
add
sbb
stos
jbe
adc
xchg
adc
sahf
sbb
mov
jg
lods
rcll
pop
in
push
inc
scas
pop
mov
loop
sbb
dec
cld
cmp
push
stos
fimuls
sbb
test
aas
or
scas
adc
xchg
mov
je
insl
sarl
sub
pop
adc
fimull
pop
pop
xchg
gs
dec
cli
faddp
cmpsb
sbb
pop
mov
sub
mov
dec
pushf
in
lea
ret
outsb
and
jl
jnp
mov
pop
dec
je
mov
mov
xchg
sbb
test
lock
push
shll
sbb
sub
xchg
in
adc
loop
cmp
xchg
icebp
loop
jle
dec
and
sub
add
mov
outsb
test
mov
insb
dec
icebp
in
mov
shlb
xor
cltd
bound
nopl
rolb
sbb
inc
imul
adc
sbb
pop
stos
jns
test
xchg
repnz
stc
shl
sti
ds
scas
or
xchg
sub
dec
jl
dec
cld
or
imul
xchg
insl
ja
cmc
cwtl
sub
test
pusha
mov
and
cltd
divl
cmpsb
mov
add
jmp
int3
int
pusha
lock
shl
aad
add
adc
xchg
rcl
jnp
dec
cmp
and
jbe
mov
xchg
dec
xor
cmpsb
int
push
popa
mov
cli
fcmove
outsb
mov
mov
xchg
jno
push
pop
add
adc
push
xor
rcl
mov
repnz
enter
lods
xsaveopt
ss
jne
adc
mov
jb
cmp
xor
push
icebp
sub
rcrb
jne
jae
stos
addb
add
cs
repz
out
cmp
sbb
enter
jns
or
andl
fucomip
push
dec
sbb
adc
mov
push
jo
sbb
shrl
in
vmovaps
es
jmp
mov
je
push
adc
push
cwtl
add
mov
mov
js
jae
and
jne
inc
jo
push
mov
imul
cld
sub
pop
mov
or
cmp
sub
loopne
xchg
cmp
sbb
sub
push
mov
int
stos
adc
scas
sub
cld
aad
adc
js
dec
loop
insl
sbb
loop
ja
cmc
sub
pusha
and
leave
popf
inc
rclb
loopne
and
aaa
mov
jb
jns
xchg
jmp
fs
fildll
jae
popa
lret
inc
inc
mov
xor
pop
jl
shl
aaa
out
mov
rolb
sbb
dec
push
mov
or
and
sti
mov
into
jns
test
sti
pushl
push
lock
stc
sti
sub
inc
popa
add
dec
psubq
imul
and
push
mov
sbb
xor
rorl
pusha
push
adc
jmp
mov
sarl
or
mov
mov
loopne
stos
out
mov
sub
daa
stos
repz
dec
and
repnz
shlb
inc
ss
or
inc
adc
inc
jecxz
xor
aas
cmpsb
addr16
cmp
leave
pop
bound
pop
mov
test
push
push
lods
dec
adc
std
pop
movsb
jg
lahf
pop
int3
loop
cli
mov
mov
je
or
mov
sbb
scas
xchg
pop
out
pop
cld
into
xchg
out
and
icebp
mov
inc
mov
xor
sub
xchg
popa
ret
clc
mov
mov
mov
dec
insb
jb
cmp
ds
movsb
lahf
nop
subb
mov
jecxz
xor
jae
pop
sbb
negb
inc
insb
push
or
pop
int
icebp
inc
pusha
jle
sbb
cltd
sbb
sub
test
cld
jae
push
and
add
or
jnp
inc
jmp
ss
push
lods
sbb
mov
cmp
sbb
push
add
pop
dec
arpl
movsl
jl
add
fidivl
add
adc
jno
push
fwait
sarb
cmpsl
out
addb
adc
mov
fisubrl
out
cltd
je
xor
push
or
std
fxtract
test
push
testb
or
mov
push
xchg
mov
xchg
out
movsb
push
jecxz
scas
fcoms
xor
pop
mov
dec
test
and
pop
ret
xor
pusha
sub
int3
adc
jo
fsts
xchg
xchg
sub
jecxz
inc
lea
mov
mov
pusha
dec
int
sub
mov
sub
addl
sub
dec
test
mov
inc
fsubrs
jnp
mov
mov
sub
sbbb
xor
pushf
add
add
push
pop
mov
ja
es
and
jle
hlt
jae
dec
mov
stos
mov
add
and
je
outsb
push
jbe
repz
xchg
sbb
xchg
xlat
inc
dec
jno
loopne
inc
and
popa
cmp
aas
pop
push
adc
loope
fcomp
iret
popa
xor
mov
pop
data16
adc
daa
test
jns
or
sub
inc
mov
sbb
sar
xor
push
or
mov
cmp
mov
pop
das
test
sbb
imul
jmp
and
sub
rcl
inc
jae
pop
adc
es
mov
test
add
pop
jg
xchg
rorb
pop
mov
dec
add
int3
loop
xchg
mov
inc
rcrb
sbbb
sti
xchg
hlt
xor
dec
stos
adc
cmpsl
fcmovnbe
sub
xchg
mov
sbb
js
fucomp
repz
cltd
imul
out
and
xchg
movsb
clc
ja
jae
daa
mov
adcl
and
js
stc
jp
addl
sti
and
pushf
repnz
ret
add
or
push
stc
roll
in
jg
loope
fdivrl
in
xor
arpl
xor
int3
dec
or
out
cmc
xchg
add
sbb
inc
gs
sub
xchg
ret
jmp
mov
fdivl
std
sbb
push
testb
xchg
idivb
rorl
dec
in
dec
sub
loop
inc
outsl
push
inc
aaa
mov
push
loopne
adc
repnz
subl
mov
jo
aaa
xor
div
in
repz
lea
xor
push
scas
dec
mov
inc
psrad
lret
stc
mov
jp
push
test
ss
sub
jbe
pop
push
ja
clc
in
imul
mov
inc
push
and
ficoms
mov
add
faddl
es
or
dec
xor
or
iret
sbb
push
lahf
jbe
lret
push
decb
fwait
cmp
and
push
addr16
xchg
imul
nop
call
insl
sub
rcrb
mov
inc
cs
shr
out
and
cmc
aam
xchg
mull
mov
je
adc
fldenv
xor
or
and
repz
int
adc
adc
mov
push
jae
data16
jnp
mov
xor
xchg
loop
push
iret
xor
repz
das
add
int3
ret
call
mov
add
fs
sub
mov
sti
pop
cmp
sbb
mov
imul
repz
hlt
dec
mov
push
xchg
xor
pop
sub
add
mov
push
out
cmp
aas
sub
test
xchg
sub
imul
xchg
dec
aaa
xchg
xchg
repz
push
adc
out
lret
rcrb
xchg
insl
inc
or
aas
cltd
fcomp
add
cmp
in
jmp
add
in
ret
popl
xchg
push
imul
int
bound
das
cmp
cltd
add
js
and
mov
jno
xor
mov
pushf
cmp
iret
mov
dec
xor
or
lret
cvtps2pi
data16
and
enter
mov
mov
sub
mov
sub
mov
cltd
mov
xchg
les
mov
jmp
outsl
in
rcrb
es
mov
jge
push
mov
ds
adc
cmpsb
xchg
xchg
sti
mulb
xchg
gs
sarb
xchg
mov
loopne
mov
lret
adc
mov
fldcw
cmpsl
movsl
inc
push
inc
sub
and
pop
subb
sbb
push
fwait
cmc
push
ljmp
or
mov
or
cmp
ljmp
dec
cmpsl
imulb
push
imulb
clc
lods
inc
shlb
es
icebp
inc
sahf
mov
scas
adcb
lret
inc
jb
mov
mov
push
stos
shlb
mov
sbb
loop
arpl
mov
pusha
lcall
movsl
add
aas
js
pop
mov
movsb
or
inc
push
and
out
out
cli
inc
add
pop
repz
enter
int3
int3
sbb
lods
out
mov
push
data16
pushf
xor
jno
cwtl
out
out
mov
cmp
mov
adc
fsubrl
repz
rorl
push
push
xchg
adc
js
shlb
das
inc
fbstp
leave
test
lcall
mov
movsb
test
sbb
push
xchg
hlt
int
mov
xor
sarl
icebp
stc
mov
int3
rorl
sbb
lock
mov
lock
pushf
push
lcall
es
lret
test
out
jno
xchg
rorb
shrl
pushf
arpl
arpl
fbstp
out
data16
ja
cmp
inc
jp
sbb
pop
xor
adc
roll
sbb
shl
sbb
f2xm1
imul
cmpsl
das
inc
and
push
movsl
insb
aaa
or
inc
cmp
jmp
stos
insb
pop
cli
or
jmp
int
daa
es
push
push
jp
loopne
sbb
cmp
out
cwtl
shl
cmp
sbb
mov
pop
cltd
jns
test
rcrl
jbe
outsb
stc
out
or
sarl
push
hlt
pop
or
mov
add
mov
stos
add
ret
pop
add
or
popf
daa
and
outsl
cmp
xchg
push
mov
lock
insb
int3
cmp
imul
pop
clc
icebp
js
test
scas
hlt
call
mov
inc
call
mov
loope
cmp
jo
popf
scas
fcmovnb
xchg
mov
push
sbb
mov
fwait
scas
inc
jb
sub
adc
jmp
pop
inc
dec
adcl
xchg
xor
inc
jo
mov
fdivp
dec
sar
pop
lock
fxch
sar
sub
outsb
mov
mov
mov
xor
rorl
push
mov
test
pop
popf
xor
cmpsb
imul
jo
or
lods
nop
pop
sub
add
xlat
jmp
subl
lock
mov
push
pop
xor
push
shll
adc
outsl
or
ljmp
div
mov
and
mov
cltd
xchg
cmp
mov
adc
and
loop
movsb
jp
sar
pop
dec
mov
imul
mov
icebp
mov
dec
std
js
jno
mov
flds
xchg
pop
subl
or
aas
mov
insl
movsl
add
cmp
in
and
je
cld
stos
clc
das
stc
sbb
outsb
insb
aad
jb
xchg
idiv
clc
fs
xchg
lret
ss
outsb
jnp
pop
mov
and
stc
clc
fcomp
adc
in
mov
ss
rorl
in
outsb
cmc
addl
pop
shld
rolb
inc
lods
mov
fdivrp
shr
cmp
sub
cmp
push
or
sbb
mov
cmc
mov
jno
pusha
aas
iret
sub
data16
or
push
push
xchg
cs
lock
aas
push
aam
jae
add
shlb
lcall
fucomip
sub
adc
jo
icebp
add
fldenv
mov
xchg
es
pop
fcomps
stos
mov
inc
push
add
and
popf
mov
pop
outsb
call
aas
pop
pop
cltd
stc
xchg
out
mov
negl
mov
and
shrb
aad
popa
push
jmp
jno
pushf
adc
test
cld
sbb
sub
cmpsl
leave
xor
mov
inc
in
jae
scas
into
push
or
add
jns
out
push
in
or
les
outsl
aam
mov
mov
jmp
movsb
cwtl
sbb
pop
lret
cwtl
push
pop
lret
loop
cmp
jno
push
ror
out
cmp
outsl
adc
mov
cmp
std
jnp
movsb
leave
sub
or
xchg
lods
sbb
xlat
test
sub
das
ja,pn
fmull
ret
push
std
adc
icebp
scas
xchg
mov
or
lea
cmpsb
in
mov
ret
mov
xchg
sub
dec
ret
inc
fmuls
aad
hlt
jno
mov
jmp
jns
loope
decb
shr
sbb
pop
mov
mov
paddsw
insl
mov
popa
rclb
sti
ss
in
aad
xchg
shr
push
mov
fs
pop
pop
data16
add
cmp
fwait
or
jae
mov
or
bnd
loope
cld
jno
xchg
cmpsl
xchg
push
out
mov
push
rorb
add
out
cmp
inc
aad
mov
loopne
daa
and
inc
xlat
outsb
jle
inc
push
movsb
add
bound
push
dec
inc
sbb
mov
fsubrl
rcrl
imul
dec
cmpsb
addr16
jnp
mov
sub
icebp
addr16
mov
dec
sbb
imulb
push
adc
jo
mov
out
cli
pop
insb
rorb
pop
out
xor
inc
pop
inc
jb
or
pop
incl
test
push
add
sbb
mov
ret
test
fucomp
into
out
outsb
addr16
loope
jb
xor
dec
pop
gs
or
test
push
jne
inc
jecxz
inc
cmp
sub
imul
rorb
shl
cld
sbb
int
jp
sahf
fcom
scas
dec
inc
arpl
inc
out
sahf
push
iret
fidivl
xchg
test
and
popf
sbb
mov
stc
iret
test
add
movsb
or
and
inc
pop
aas
xchg
pop
and
adcl
lea
ret
cmp
or
out
scas
scas
jns
inc
cmpsb
or
add
cld
and
fstl
andb
fisubl
add
je
lcall
loop
jb,pt
or
push
add
xchg
sbb
pop
mov
scas
fisubrs
mov
fsubrs
push
jmp
mov
lret
cwtl
cmpsb
jecxz
test
push
outsl
clc
cwtl
add
add
cmp
push
jno
js
jl
les
cmc
or
lahf
fstpl
pop
ret
pop
dec
clc
shlb
or
push
jp
mov
je
fstpl
xchg
jbe
movsb
mov
lods
and
xor
dec
ficoms
imul
roll
in
lcall
dec
out
xor
outsb
into
xchg
outsl
jmp
sbb
mov
mov
scas
outsb
ret
cmp
jge
cwtl
xchg
lock
cmp
xor
xor
inc
mov
popa
dec
imul
imul
push
xchg
sbb
out
ljmp
aas
xchg
pop
push
mov
xchg
aas
pop
and
mov
mov
lret
les
out
or
in
pop
int3
xchg
or
push
icebp
mov
iret
push
ds
and
addr16
bound
imul
dec
lea
mov
popa
ss
sbb
test
xor
push
lea
pop
mov
add
or
push
jp
enter
aas
adc
pop
test
popf
mov
mov
mov
add
inc
test
mov
xlat
in
push
mov
push
jbe
jbe,pn
lahf
xlat
xchg
ds
xor
pop
fwait
pop
or
push
nop
inc
or
loop
pop
sbb
pushf
daa
repz
scas
sub
leave
or
mov
xchg
dec
push
xchg
loop
and
call
lock
xchg
outsb
lea
xor
sbb
mov
movsb
lds
sub
mov
shll
cltd
add
sahf
cli
xor
sbb
aas
sbb
fdivl
roll
mov
pop
mov
cmpsb
adc
dec
dec
xor
and
jge
adc
jle
push
jmp
repnz
jge
ljmp
jbe
mov
lock
test
and
sbb
leave
or
dec
inc
aas
adc
pop
movb
loopne
repz
test
data16
jl
mov
mov
data16
push
mov
push
inc
movl
outsl
jge
in
in
bound
insb
sub
push
xor
pop
lret
lods
mov
rolb
mov
jp
int
jg
lds
pop
mov
psrlq
cltd
dec
jp
popl
adc
divb
jo
and
out
je
sub
xchg
dec
daa
jle
subl
xor
mov
adc
dec
in
scas
outsl
cmp
pop
daa
je
or
repnz
jb
stos
ja
jl
add
jg
pusha
cmp
xor
movsl
scas
sbb
xor
cmp
inc
sbb
out
bound
push
add
fadd
push
fbstp
and
int
outsl
inc
mov
add
rclb
sysexit
mov
mov
cmp
aad
fidivl
sbb
subl
xorb
out
push
arpl
cmp
std
ljmp
mov
leave
dec
dec
cli
xchg
inc
inc
pushw
jae
fimull
pushf
sarb
enter
lock
mov
es
out
bound
dec
daa
cmpsb
mov
test
cmpsl
push
sub
push
mov
pusha
and
pop
xchg
orl
and
push
flds
jl
adc
hlt
syscall
mov
jge
pop
js
or
clc
fwait
out
mov
fsts
dec
hlt
or
xchg
leave
pop
and
mov
adc
ret
data16
int
xor
movsb
inc
xchg
sahf
cmc
cld
inc
cmp
or
xchg
dec
pop
cwtl
mov
cmp
movsl
bound
stos
xor
pop
fdivs
cs
jno
cbtw
mov
ds
pop
lcall
xor
lds
movsl
lods
mov
push
push
mov
push
bound
pop
mov
jae
push
inc
out
aam
js
and
call
lret
jp
aad
pop
mov
inc
cld
mov
sbb
lds
movsb
push
jmp
imul
xor
mov
pop
mov
mov
lods
mov
ljmp
outsb
push
dec
stc
rclb
ret
cmc
popf
sub
mov
icebp
sbb
xchg
jno
test
out
addb
in
jge
test
fistpll
les
scas
jne
inc
stc
cmp
jg
jbe
sarb
inc
xchg
pop
cmp
pusha
push
adc
aad
rcll
sbb
jne
mov
xor
ljmp
in
and
pop
xchg
bound
pushf
push
inc
int
notb
enter
test
cmp
push
cmpsl
imul
mov
jg
cmp
mov
out
insb
mov
ss
cmpsl
inc
mov
pop
loop
inc
ret
mov
mov
ss
sbb
lahf
xlat
push
ja
dec
mov
mov
out
popa
mov
cmp
inc
pop
arpl
imul
outsl
jb
xor
outsl
dec
mov
in
cltd
sub
mov
pop
cmp
scas
inc
sti
stos
ja
lcall
add
and
adc
into
cs
xor
shlb
jmp
xchg
mov
xchg
jp
test
enter
lds
sarl
jmp
rorb
mov
dec
push
xor
jnp
adcb
ror
cmp
sub
aad
test
jg
subl
fwait
sub
dec
ljmp
mov
xor
fldl
inc
sub
icebp
lahf
adc
cmpl
jge
and
stos
test
add
add
outsb
and
js
mov
inc
addb
inc
aad
lock
movsb
mov
shrb
inc
jl
out
and
loope
cmp
mov
into
mov
sub
lcall
cmp
adc
iret
pop
les
ss
and
pop
adc
pusha
aad
mov
fmulp
fwait
pop
bound
adc
pop
mov
or
pop
inc
mov
in
mov
push
pop
fcomp
cs
fmul
rcrb
daa
or
mov
fwait
gs
xlat
lret
push
mov
mov
xchg
jb
fadd
subl
cmp
div
jne
cwtl
cmp
mov
into
sti
and
nop
mov
cmp
mov
push
or
sbb
push
lcallw
sti
sub
mov
rorb
int
adc
rclb
push
jae
jbe
ret
mov
lds
cmp
sub
fbld
lods
jmp
movsb
push
int
jo
orb
cmp
ror
mov
mov
repnz
xchg
test
movsb
or
mov
mov
sub
or
int3
add
ffreep
cld
sub
xlat
push
subl
push
lret
mov
rcrb
jg
mov
inc
xor
cmp
imul
sti
sub
push
and
mov
fcmovu
out
push
mov
cld
mov
sub
lret
sti
inc
and
jns
mov
test
jp
sbb
insl
decb
pop
fidivl
icebp
sub
ds
outsb
sbb
sub
and
push
adc
cli
stc
pushf
jle
mov
iret
rorb
int
mov
pop
adc
outsl
ret
push
orb
add
lahf
xchg
mov
lret
stc
pushf
mov
add
mov
in
insl
sub
push
mov
orb
adc
roll
xor
imul
scas
insb
lcallw
cmp
sub
sar
inc
xchg
and
xor
loop
movsl
jbe
divb
std
jg
mov
movsb
adc
adc
shll
xchg
cmp
insl
test
pop
cmpsl
inc
jbe
xchg
cmp
lods
sub
jno
lods
mov
push
decl
adc
xlat
jecxz
sub
and
orb
fnstcw
ljmp
jecxz
cmp
xchg
adc
shrw
aad
jae
clc
add
mov
daa
mov
in
xor
ljmp
jge
dec
rcrl
xchg
push
push
inc
push
loopne
je
fdivrl
orb
jle
mov
sbb
and
pop
psubq
orl
popa
out
adc
push
sub
adcb
adc
cmp
adc
push
fstpt
push
test
cmp
lods
cmp
jno
jns
lods
and
rcrl
addl
mov
cmp
fdivl
mov
sbb
jbe
mov
mov
sbb
adc
or
mov
push
mov
sbbb
mov
test
cmp
xlat
pusha
std
xor
mov
add
and
cmp
mulps
mov
rolb
shl
inc
sbb
sbb
jmp
sbb
fstl
dec
cld
inc
dec
js
mov
ja
ss
dec
shll
cli
movsl
stc
push
dec
rolb
imul
aam
xor
ds
cmp
enter
and
gs
insl
nop
push
cmpsb
xchg
xchg
test
pop
test
sarl
sub
sub
inc
mov
enter
mov
addr16
inc
fsubl
or
into
aad
lds
imul
cmpsl
cli
push
or
jne
aam
lahf
arpl
or
mov
scas
or
test
xchg
jnp
pop
lret
cmp
mov
sarl
mov
mov
add
test
sbb
repz
fcmovu
mov
sub
in
cmc
imul
leave
and
loopew
clc
jnp
ds
popa
aad
in
les
je
les
jnp
push
loop
mov
clc
sti
xchg
or
dec
rcrb
mov
adc
pusha
mov
pop
or
outsl
pop
loopne
xor
pop
shr
pop
mov
cltd
sti
js
test
leave
sbb
inc
push
add
ss
jecxz
fldl
adc
out
outsl
js
or
movsl
sbb
pop
rolb
mov
les
xor
add
fldenv
pop
sub
clc
mov
or
xchg
and
in
cmpsb
pusha
dec
add
test
dec
push
and
cmpsb
cli
adc
push
clc
dec
leave
ret
in
inc
xchg
daa
outsl
movsl
jno
mov
cmp
and
push
rcll
in
lods
cmp
xchg
xor
and
pop
ljmp
loop
mov
pop
pop
jge
jnp
add
fidivrs
add
push
dec
jl
add
ret
test
push
pusha
cmp
sub
mov
outsl
lods
or
incl
pop
gs
imul
mov
push
jp
inc
mov
sbb
or
dec
pushf
xor
push
incl
cmp
test
daa
movsl
into
in
insb
aam
out
adc
stc
pmaxub
nop
sbb
jmp
dec
push
pushf
test
outsl
add
mov
push
push
mov
pop
push
dec
insl
ds
and
out
lret
lret
mov
xor
ss
cwtl
mov
notl
mov
cmp
add
push
divl
jo
iret
outsl
aad
movsl
ret
xchg
addb
mov
pop
daa
push
enter
lcall
pop
cmp
icebp
fsubrs
jns
mov
ss
cmp
mov
fnstenv
xchg
and
cmpsl
and
push
addr16
mov
jns
scas
lahf
mov
fldcw
test
jmp
mov
push
sub
leave
pusha
dec
adc
cmpl
dec
add
call
sbb
xor
dec
cmp
lods
xchg
jle
mov
and
pop
std
sbb
inc
loopne
sbb
das
shll
fdivs
pop
mov
xlat
adcl
dec
pop
repz
mov
push
xlat
adc
aaa
iret
clc
cwtl
jne
mov
or
pop
jae
repz
mov
mov
popa
fs
fistps
insl
inc
imul
adc
int3
lret
in
xor
push
xchg
pop
in
frstor
cmp
xchg
movsl
ret
jnp
dec
mov
in
push
clc
movsb
pushf
mov
or
or
daa
arpl
scas
ss
out
push
lods
mov
and
cmp
mov
sbb
enter
imul
mov
imull
in
sti
daa
push
inc
out
dec
mov
fcmovne
enter
ljmp
or
mov
js
and
hlt
jl
adc
adc
adc
mov
icebp
push
inc
pop
lea
or
push
push
stos
jmp
mov
out
sbb
fbstp
adc
mov
outsb
or
xchg
js
int3
or
xchg
sbb
cmp
sbb
dec
stos
repnz
add
icebp
adc
pop
mov
mov
add
gs
inc
inc
dec
fildl
jle
es
insl
jne
insb
push
xor
cmp
ljmp
pop
dec
ret
outsl
inc
lea
dec
and
or
jno
roll
mov
fwait
mov
loope
sbb
mov
cs
int3
cmp
push
lods
pop
dec
cmpsl
imul
or
and
lock
mov
cmp
push
arpl
xchg
incb
in
push
dec
addr16
jns
cmpsb
jae
jg
sbb
shr
jae,pn
push
cltd
sub
mov
or
lret
pop
and
cmp
ret
les
pop
xchg
adcb
cmc
cld
pop
in
rcll
jnp
push
popa
pop
out
dec
iret
ja
enter
iret
insl
cmp
inc
mov
mov
lods
lret
inc
call
nop
sti
fcomp
add
mov
and
in
pop
xchg
pop
jbe
std
xchg
out
insl
xor
xchg
test
cli
xchg
loopne
adc
push
mov
adc
or
aad
and
inc
or
mov
andb
fidivrl
pop
pop
out
xchg
or
xchg
adc
xor
adc
sub
pop
inc
xor
xor
retw
ljmp
scas
mov
xchg
inc
xor
xlat
or
inc
pop
dec
mov
lea
les
pushf
ds
jp
movsb
and
mov
pop
icebp
stc
mov
xor
addr16
mov
ja
mov
jl
pop
divb
push
cmp
cmpsl
push
mov
inc
jno
sbb
shlw
aas
dec
add
sub
loop
or
xor
mov
add
dec
mov
pop
pusha
jbe
scas
mov
ficompl
or
test
cmpsl
pop
sbb
sahf
sarl
xchg
or
pop
xor
dec
hlt
cmp
inc
and
push
add
jne
imul
sbb
aad
insl
inc
lds
push
pushf
adcb
and
imul
dec
cmpsb
jno
xchg
xor
jae
movsl
shrb
mov
jb
and
repz
or
sbb
inc
stc
in
cli
xchg
push
jns
push
popa
das
loopne
push
sub
inc
mov
push
dec
mov
pop
xadd
shll
lret
mov
fcmovne
dec
mov
fnstsw
ljmp
fwait
mov
lret
dec
in
arpl
jl
leave
lret
icebp
xor
lcall
xor
subl
mov
cwtl
cmc
or
test
test
mov
push
add
push
repz
addl
sbb
xlat
ret
mov
insl
lret
inc
insb
mov
cs
stc
pop
push
cs
ljmp
sahf
inc
addr16
mov
stos
cmp
ja
outsl
aas
cmp
test
jo
xchg
pop
movsb
or
or
jno
ljmp
jne
xor
push
shl
cmp
aaa
mov
xlat
les
daa
lahf
push
push
mov
test
call
lea
lods
cli
rolb
xchg
or
sbb
dec
arpl
push
mov
lods
notb
pop
inc
ljmp
xor
sub
js
lcall
dec
push
je
sahf
xchg
lock
lahf
lods
mov
je
loopne
mov
pusha
sbb
repz
hlt
mov
xchg
add
sahf
arpl
mov
fcoms
testl
and
and
aam
pop
and
js
jnp
xor
imul
fbld
add
jp
lret
mov
push
popa
push
push
add
pop
cmp
mov
lcall
vmwrite
adc
sub
adc
dec
and
movb
js
addr16
out
sbb
fisubl
lret
add
test
xlat
cmp
cltd
xor
push
cld
fdivrl
sbb
push
inc
lds
enter
jl
xor
and
push
sbb
push
sarl
arpl
push
dec
rol
add
out
in
lret
pop
faddp
xor
mov
cli
push
mov
test
add
in
add
shlb
mov
sub
int3
cs
rclb
adc
sbb
and
arpl
outsb
jbe
out
shlb
sub
push
lods
insl
daa
sbb
adc
je
mov
lds
fcmovne
sbb
dec
mov
les
inc
out
arpl
pop
jo
daa
and
ret
sbb
and
std
divb
mov
mov
popf
insb
sub
sub
cmp
lahf
mov
popa
inc
and
cltd
xor
push
repnz
pop
dec
in
fimuls
jbe
outsb
fadds
lahf
ds
mov
stc
cmp
push
ds
fwait
xchg
in
jg
mov
cmpsl
fsts
mov
cli
les
setnp
cli
inc
repnz
xor
xchg
dec
outsl
mov
scas
leave
dec
fimull
push
nop
sti
add
lods
test
imul
xor
and
scas
pop
or
pop
add
andl
movsb
fadds
je
jle
mov
dec
jb
mov
adc
and
inc
dec
adc
dec
loop
cmp
add
adc
adc
mov
cmp
lret
mov
or
push
pop
sub
rcrl
and
aaa
aas
mov
loop
leave
cli
mov
xchg
mov
les
aaa
ds
fsubs
and
adc
ljmp
xchg
inc
jo
inc
xor
xor
mov
sarl
add
mov
js
mov
lds
xchg
jle
pop
and
out
pushf
aas
xchg
mov
push
jno
jb
mov
out
adc
stos
cwtl
lahf
xor
inc
add
inc
subl
out
sbb
jle
add
subb
push
mov
mov
cmpsl
lret
sbb
lcall
inc
pop
xchg
cmc
aaa
xchg
dec
leave
and
cmp
cli
mov
subb
inc
mov
xor
stos
jp
mov
adc
jno
ja
repnz
stc
push
inc
push
repnz
jl
mov
pop
scas
es
xor
scas
mov
clc
mov
add
mov
jmp
nop
inc
mov
test
ds
out
or
mov
fwait
fwait
sbb
push
and
adc
mov
mov
add
dec
sub
sti
ror
sub
bound
lahf
xor
cmp
xchg
and
outsb
sub
cwtl
fsubr
jno
sbbb
inc
fimull
outsb
fs
rorb
cmp
mov
decl
in
push
leave
loope
and
and
mov
xchg
outsl
jbe
sti
ja
pushf
and
jns
clc
mov
dec
loope
jb
or
adc
push
lods
shll
pop
test
out
enter
sub
fcmove
ret
test
jecxz
and
pop
xlat
hlt
sbb
movsl
mov
fists
inc
xchg
lahf
mov
xor
in
js
xchg
sti
cmpsb
in
lret
adcb
sbb
sbb
push
rcrb
mov
add
or
xor
lock
popf
xor
mov
std
loop
mov
sbb
stos
bnd
aam
into
cmpsl
jmp
fstpl
dec
sub
dec
popf
mov
hlt
pcmpeqd
dec
ret
lret
mov
dec
sub
xor
outsb
xlat
ret
ja
jo
adc
xor
dec
into
outsl
jmp
lods
std
mov
sub
sar
xchg
aam
addr16
sbb
lcall
iret
add
or
sbb
mov
lods
and
push
jecxz
push
mov
dec
aaa
aam
xchg
popfw
popf
dec
cli
xlat
push
outsl
cmp
mul
mov
push
dec
jp
dec
dec
push
nop
adc
outsl
pop
hlt
push
mov
pusha
lea
mov
adc
inc
xchg
add
cwtl
jmp
leave
test
movsl
jmp
jae
call
xchg
jecxz
pop
ror
cmp
enter
adc
mov
mov
jbe
lods
push
sub
loop
mov
cli
cwtl
in
mov
loope
lret
adc
xlat
outsl
ret
rcrl
jnp
leave
dec
rorb
imul
mov
pop
lret
cwtl
test
cwtl
cltd
pop
xchg
loop
shll
xchg
mov
push
fmull
push
fs
dec
in
sbb
lods
xchg
js
ret
sub
and
adc
movsb
ret
dec
pusha
push
and
inc
cs
add
in
inc
imul
mov
push
outsb
cmp
pop
or
inc
cmpsb
out
sbb
test
in
jae
fsubr
mov
daa
mov
cmp
jle
lock
in
or
sbbl
jmp
mov
cld
in
out
mov
xor
jmp
pop
add
orl
mov
inc
loopne
fs
inc
ja
fsubrp
xor
cmc
in
out
jl
jb
mov
push
ja
cli
sbb
dec
addr16
arpl
push
popf
pop
pop
pop
fs
jmp
scas
push
sub
mov
pop
loop
shlb
xor
jl
push
mov
dec
in
loope
xchg
pop
fldl
sbb
scas
cmp
adc
dec
sub
rcr
stos
adc
aaa
lret
jbe
cmpb
cmp
out
pop
dec
addr16
out
pop
insb
addr16
mov
push
call
cltd
lahf
cmp
scas
add
iret
mov
stos
cli
xor
jnp
sbb
xor
popa
out
adc
mov
and
xor
lret
hlt
adc
xor
push
inc
sti
cltd
xchg
sub
iret
xlat
xchg
sbb
pop
mov
push
fcmovb
push
cmpsb
add
out
jo
mov
sbb
inc
lret
inc
and
dec
aam
or
ret
jns
das
pop
add
adc
scas
or
ss
or
cmp
add
imul
nop
lods
jle
out
out
mov
addr16
movsb
pushf
or
mov
loope
mov
mov
dec
outsl
in
aam
aam
sub
push
decb
mov
dec
scas
mov
das
movsl
sub
xchg
loop
fs
fsubrp
sti
mov
movsb
cmp
lahf
mov
cmp
push
inc
lock
cmove
inc
icebp
pop
cmpl
xchg
and
testl
cmp
mov
mov
add
or
test
xorl
mov
inc
mov
dec
aad
xchg
scas
mov
ret
sbb
inc
in
mov
leave
and
stc
imul
xchg
xor
loope
stc
jnp
adc
mov
sub
and
or
inc
cmp
dec
mov
mov
add
inc
dec
xchg
inc
xchg
pop
cli
cmc
mov
add
xor
leave
adc
sahf
test
adcl
or
dec
repz
fiadds
xchg
jb
add
cmp
xchg
mov
add
adc
fsubl
cmp
pop
cmp
cld
xor
leave
xchg
add
xlat
push
mov
mov
ret
xor
sar
shrl
mov
pusha
jne
sti
mov
lock
insb
outsl
adc
add
out
scas
mov
or
icebp
lret
mov
mov
inc
inc
ds
aas
mov
insb
arpl
sbb
and
pop
inc
cmpsb
js
mov
add
and
add
pop
in
sub
iret
xchg
scas
pop
mov
push
decl
xlat
pop
dec
pop
xor
or
add
sti
cwtl
sbb
push
pop
jbe
and
stc
add
cmpsl
cwtl
push
xchg
clc
jne
push
repz
and
sahf
or
rcrl
in
scas
pop
pop
mov
push
das
cmp
mov
push
mov
xchg
jno
aam
fcmovne
dec
insb
sub
inc
xchg
jb
fs
fildll
mov
jge
and
xchg
sbb
pop
sub
in
sub
mov
repz
add
scas
or
mov
xchg
xlat
sub
cltd
dec
push
test
jo
xchg
aad
push
imul
jecxz
adc
nop
adc
sub
sahf
ret
ss
es
shl
mov
lock
cmp
cmp
addr16
add
fsubrs
xorb
cmp
leave
arpl
jmp
push
mov
and
mov
fmull
shll
call
cmp
jmp
pop
clc
imul
pop
sti
inc
push
in
sbbl
out
call
in
mov
test
lods
inc
pop
pusha
out
in
aaa
mov
in
jns
jmp
pop
fdivrs
lea
or
adc
add
pop
sbb
shll
idivb
add
adc
js
repnz
xchg
push
xchg
mov
leave
mov
cltd
jl
jbe
mov
adc
pop
pop
pushf
jb
dec
dec
xchg
xchg
int
xchg
insb
faddl
xchg
mov
jge
loopne
mov
lret
adc
xchg
jge
jno
dec
sub
lcall
stc
lahf
enter
add
jle
shlb
jmp
andl
xor
xchg
sub
inc
or
jp
in
push
mov
xchg
mov
xor
fisubl
pop
push
lods
pop
mov
fs
jmp
dec
adc
pop
pop
addb
push
addr16
enter
scas
dec
and
jbe
jns
mov
aas
or
popf
mov
arpl
mov
jmp
add
mov
hlt
inc
jp
out
lods
repz
les
je
out
outsl
out
jb
xor
mov
cmpsl
loop
pop
mov
mov
xor
scas
jbe
outsl
jmp
shll
in
sti
frstor
les
daa
dec
lods
ljmp
mov
pop
jb
call
aam
and
test
cli
jns
imul
cmp
in
push
mov
stos
adc
adc
or
mov
add
fimull
push
fs
movsb
xor
and
gs
fxch
ret
pop
mov
and
mov
ss
inc
xchg
insb
or
cmp
mov
not
loop
jle
adc
sbbb
fistpl
fcoml
shrl
add
mov
popa
xchg
shll
lret
pushf
fidivrl
sub
jecxz
dec
sbb
pusha
int3
add
stos
jg
mov
inc
push
loopne
jns
pop
mov
push
push
sub
movsl
popf
gs
add
enter
aam
jns
mov
int3
ds
sub
sbb
fmuls
sbb
lret
daa
aam
pop
nop
lret
jle
lret
or
push
inc
adcb
sub
shrb
sub
loop
cmp
shll
shufps
lcall
push
lahf
sbb
insl
fcmovbe
shlb
dec
add
mov
cmpsb
or
inc
shll
sub
outsl
lock
add
xor
into
loopne
lods
fdivr
outsl
movsl
xor
pop
xor
data16
lahf
cli
pop
push
aaa
in
sbb
mov
mov
pushf
jno
mov
fsubs
xchg
pop
add
out
dec
test
pushfw
mov
pop
stc
mov
jns
cmpsb
test
jns
decl
mov
movsl
iret
push
cmc
mov
xchg
dec
imulb
ret
and
mov
xchg
push
popf
push
xor
fnstcw
scas
and
jbe
ret
cwtl
loope
pusha
roll
lods
sbb
sub
out
insb
testb
jbe
cmc
clc
lcall
xor
jb
mov
roll
in
adc
shlb
aas
mov
sahf
hlt
nop
sub
push
xchg
jo
testb
mov
sub
mov
outsb
hlt
fdivr
mov
enter
es
mov
ds
lods
mov
sbb
xchg
push
fistpl
mov
add
sbbb
rolb
inc
and
sbb
inc
adc
adc
mov
ja
pop
xor
popa
js
inc
test
or
into
mov
pop
or
mov
adc
nop
push
dec
jecxz
or
mov
gs
rcrl
jns
test
stc
stc
jp
int
lds
pop
xlat
inc
lock
lret
cwtl
test
cli
push
sub
push
and
xlat
dec
inc
mov
and
cmp
adc
inc
ret
push
pop
adc
stos
movsb
fnstsw
test
cld
cmp
nop
daa
sti
or
adc
addr16
sub
pop
or
shrl
jae
add
jbe
cmp
repnz
jl
pop
mov
dec
sub
nop
mov
ret
sbb
cmp
pop
popf
ds
cmp
lods
jmp
push
fcoms
dec
xchg
js
or
cmpl
inc
call
sub
push
xchg
mov
ljmp
dec
dec
fidivrs
mov
cli
insl
xor
push
je
scas
xchg
add
bound
cmp
push
mov
cmpsb
pop
xor
fldln2
aam
cli
loop
rcrl
sub
outsb
push
mov
push
sbb
aas
inc
sahf
nop
or
inc
mov
mov
into
cltd
loop
adc
and
sti
cmp
pop
cltd
std
push
and
xor
lret
sub
xor
xchg
jns
stos
push
out
ljmp
stos
js
cmpsl
mov
pop
xchg
xor
jp
stos
repz
repz
pop
xchg
push
cmp
pop
js
xchg
out
and
or
mov
addb
jo
lods
aas
fstl
dec
jecxz
fsubp
rorl
mov
nop
sub
sub
and
or
clc
push
aam
xchg
lods
xchg
xchg
or
stos
mov
dec
les
std
mov
sbb
test
scas
jg
sub
je
insl
ljmp
pushf
and
mov
inc
pop
xchg
loopne
fcoms
gs
inc
jmp
aaa
addr16
pop
in
out
sbb
hlt
lock
ljmp
je
sti
jle
cmpsl
imul
decb
pushf
mov
lret
pushf
dec
mov
xchg
lods
jmp
xchg
not
xor
jg
sbb
cmc
mov
call
mov
inc
dec
outsl
or
or
inc
ljmp
fimuls
stos
enter
loopne
ret
jmp
lahf
addb
lret
int
mov
mov
adc
jl
test
push
push
and
pop
push
out
pop
popa
xchg
shll
movhps
jns
je
jmp
push
fwait
movsb
jnp
jb
addr16
and
adc
into
mov
popa
jecxz
cs
cmp
jmp
cld
fwait
mov
lea
pop
jns,pn
jl
outsb
mov
mov
jg
mov
lea
jl
xchg
xorl
cmp
inc
aad
mov
clc
sub
inc
cmp
or
rcl
sub
in
stc
sub
sarl
lahf
pop
adc
sbb
inc
fistpl
cmp
movsb
xor
pop
add
mov
or
xor
push
negl
int3
test
jne
fsubrp
xor
adc
mov
inc
les
push
aas
gs
mov
or
cmp
aaa
or
jp
xchg
sub
lds
jns
pop
out
jbe
cmp
mov
sahf
sbb
mov
lcall
dec
and
ret
std
mov
out
fsub
or
xchg
ja
aad
dec
mov
movsl
pushf
pop
and
sub
mov
cmpsl
push
jl
pop
and
cli
sahf
jno
leave
add
pop
into
mov
jo
in
add
cs
outsb
pop
fcompl
mov
subb
pushf
movsl
aaa
repz
repnz
icebp
cmp
dec
fs
cmpsl
shll
cmpb
ret
shr
fwait
pop
mov
rclb
push
loop
push
or
mull
and
inc
or
fadd
pop
sub
cmpl
xor
pushf
xchg
inc
adc
out
push
hlt
cmp
mov
jo
jl
fldcw
and
adc
mov
mov
lds
mov
mov
push
sbb
loope
adc
iret
iret
push
xor
imul
sub
push
cvtps2pd
sub
cli
fs
cli
jmp
push
subb
xchg
stos
sbb
dec
imul
jae
orb
push
fdivs
fildl
inc
inc
cmc
push
hlt
data16
pop
dec
mov
xorl
push
sub
mov
enter
fimull
push
sbb
ror
xchg
pop
jmp
and
pop
sar
adc
xchg
pop
adc
or
leave
mov
scas
add
dec
data16
mov
leave
xchg
mov
mov
fldt
push
pand
lock
sub
cmp
sbb
and
ds
sahf
sbbb
repz
or
add
inc
push
and
fidivrs
dec
mov
dec
aad
dec
clc
adc
lahf
cmp
aaa
leave
call
mov
jae
mov
mov
mov
cmpsl
jg
cmpsb
dec
cmp
out
lcall
cmp
cmpsb
imul
insl
and
xor
dec
or
xor
pusha
lcall
lcall
pop
lcall
decl
pushf
cmp
sbb
lods
cmp
outsl
push
mov
dec
and
jb
sbb
ss
push
fsubs
fidivrs
xor
mov
mov
sbbl
mov
dec
jmp
arpl
push
and
aam
daa
pop
lret
shrb
mov
push
in
add
xchg
xchg
sbb
idivb
mov
test
xlat
in
das
and
pop
pop
push
lahf
mov
sub
aad
jbe
lods
lcall
push
mov
ret
mov
insl
lret
jle
repnz
cs
lret
and
xchg
int
push
push
dec
xchg
ljmp
test
sbb
sbb
adc
addr16
mov
sub
es
shrb
cmp
pop
mov
enter
loop
fucomi
outsb
xchg
and
and
and
getsec
outsb
inc
xor
adc
and
add
es
xchg
mov
lods
dec
dec
lahf
pushf
leave
mov
mov
hlt
lcall
jl
sub
cmp
jmp
mov
lret
cmp
mov
rol
cmp
lcall
sar
cmc
sub
out
mov
jo
aaa
push
add
add
ljmp
mov
jmp
jecxz
lahf
out
or
pop
add
loope
aas
xchg
mov
sti
xor
xchg
inc
sbb
sub
jo
repz
mov
lods
dec
mov
xor
add
clc
sub
xor
cmp
cmp
pusha
lods
push
cmp
jle
sub
iret
es
sbb
in
cmc
or
es
insl
inc
sub
or
cmp
jo
lret
fiaddl
pop
sahf
das
inc
push
insl
ds
pop
dec
lcall
cld
pop
jmp
divb
cli
loopne
xor
enter
ja
repnz
in
sahf
push
mov
imulb
mov
insl
int3
push
or
lock
add
test
xchg
adc
add
pop
jecxz
and
push
cmpb
cmp
adc
pop
fildll
adc
dec
jns
inc
mov
jo
push
pop
flds
adc
cmc
jmp
rolb
loop
jle
jno
jmp
mov
in
out
mov
ss
inc
enter
push
popf
xor
jecxz
inc
cltd
shll
lds
fimuls
mov
push
sub
adc
mov
daa
divb
mov
daa
mov
adc
or
rclb
xchg
jmp
inc
ja
idiv
jp
inc
push
sahf
xor
test
sti
xchg
out
and
int
out
out
push
or
fsts
in
mov
mov
adc
test
lea
andl
int
aad
jge
es
stos
push
outsl
sub
and
sub
jae
loopne
add
jge
out
or
lcall
in
cmpsl
call
xchg
mov
gs
adc
loopne
rcrb
ret
aas
pop
fsubrl
push
cmpsb
lahf
fcomip
pusha
push
lea
jb
inc
insl
ret
mov
mov
jle
push
xchg
in
or
rcll
cli
repnz
out
xor
pop
popa
inc
popf
jo
fistpll
leave
bound
aaa
loop
mov
adc
rorb
pop
pop
ds
out
mov
cmc
lret
sti
xchg
push
jno
dec
dec
mov
add
and
xor
mov
out
loopne
sub
xor
out
mov
xchg
or
mov
arpl
mov
insl
pop
scas
push
mov
shll
dec
pusha
mov
fsubrl
pop
add
ja
repz
sbb
or
addr16
in
dec
fmull
mov
fisttpl
das
mov
outsl
leave
les
or
xchg
test
sub
fmull
jae
cmpsb
xor
cmp
shlb
dec
jmp
fmuls
inc
mov
test
daa
pop
pop
mov
adc
fnstcw
dec
insb
xor
fisubl
mov
mov
adc
enter
sbb
inc
push
lds
hlt
fisubrl
out
inc
pop
jno
jg
sahf
stos
mov
insb
aaa
movsl
mov
mov
shlb
jl
sub
cmc
test
cmp
shll
js
sub
mov
xor
lods
push
jno
mov
push
cmpsl
je
test
sub
stos
mov
test
jp,pt
push
daa
fcmovnbe
out
pusha
xchg
inc
lcall
cmp
jno
adc
dec
mov
icebp
add
cmpsl
jge
sar
adc
mov
xor
pop
push
bound
adc
xchg
out
adc
arpl
pop
repnz
jmp
cmc
inc
mov
xor
jo
cwtl
mov
pusha
or
movsb
pushf
in
jl
and
sbbb
hlt
arpl
imul
mov
jp
imul
xlat
invd
mov
sub
xchg
cmp
xor
push
out
xchg
add
fdivs
pop
test
push
in
push
pop
inc
jno
testl
push
insl
nop
inc
enter
sbb
jecxz
push
xor
fs
mov
mov
add
gs
rorl
jnp
js
or
mov
cmpsb
and
mov
xchg
add
xchg
rorb
loop
cli
and
scas
and
test
cmp
xor
xlat
test
ret
adc
inc
add
mov
mov
mov
sbb
pusha
movsb
fmull
cmp
inc
add
sbb
jb
test
cmp
pop
cwtl
sbb
sahf
int3
pop
mov
sub
xchg
pop
sbbb
lds
aam
inc
lds
sahf
bound
icebp
adc
or
push
sti
mov
fsubrl
out
insb
or
xor
push
das
xchg
push
shrb
loopne
mov
sub
mov
dec
sub
inc
repz
mov
std
xchg
jb
stc
out
sbb
test
sub
xlat
mov
mov
cmp
push
in
pop
inc
jae
mov
mov
inc
mov
sahf
loopne
fstl
pop
int
add
ds
adc
ret
jno
cld
data16
inc
xor
sbb
xchg
fdivl
and
jg
jle
stc
inc
sarl
sarb
adc
mov
mov
push
divl
lcall
push
ret
push
pop
pop
vcvttsd2si
dec
xor
out
cmc
add
insb
mov
add
inc
jp
out
in
arpl
mov
pop
sbb
and
das
loope
push
cmp
xor
test
pop
loop
push
adc
cmp
scas
push
dec
in
in
cmp
cmp
mov
adc
loope
dec
inc
inc
ss
xor
cmpsl
rclb
cmp
dec
movsl
xchg
pop
sbb
add
push
sub
or
cmp
es
rcl
les
ja
cmp
mov
in
cmp
gs
push
pop
lds
mov
arpl
lcall
lods
popl
sub
dec
adc
add
mov
push
dec
dec
push
mov
ficompl
push
fadds
xchg
clc
les
add
iret
inc
xchg
movsl
mov
cwtl
xor
pop
inc
cltd
repnz
pop
dec
nop
pop
cmp
sub
mov
repz
mov
or
ds
cmp
les
lahf
add
leave
adc
ss
shr
push
movsl
cmp
iret
hlt
popa
mov
insl
jb
icebp
or
in
xchg
ret
push
daa
insl
xchg
adc
test
push
pop
popf
nop
inc
inc
bound
adc
push
sarl
mov
gs
rcr
inc
mov
imul
das
add
mov
fnstcw
ljmp
fwait
inc
shlb
or
mov
lea
push
test
stos
int
lret
cmp
dec
mov
test
clc
jo
jo
inc
mull
xchg
dec
adc
xor
adc
jb
mov
and
jle
rol
add
lret
bound
in
stos
jl
xchg
inc
xor
or
cmp
jno
pop
ret
imul
xchg
push
pop
shll
jns
outsb
jnp
pusha
imul
mov
xor
pushf
or
push
mov
outsl
rol
cmpsl
push
lods
cmp
xchg
cs
out
shll
xor
aaa
push
ljmp
mov
insl
push
xchg
jp
push
adc
jle
push
adcl
stos
mov
ss
pop
push
jb
push
mov
cwtl
daa
fwait
mov
and
cmp
add
mov
adc
or
jecxz
push
dec
lretw
sub
cmpsb
pop
or
scas
sbb
out
inc
outsl
lret
inc
add
mov
mov
fsubrl
stos
mov
stc
xor
mov
std
outsl
andl
lret
rcr
negl
aam
pop
add
shlb
into
ds
pop
sbb
bound
lods
daa
mov
loop
les
shl
cmpsl
mov
mov
jg
push
sbb
rcl
jecxz
fwait
mov
fs
inc
arpl
and
mov
xchg
cmpl
cwtl
shlb
lods
jb
push
pop
fyl2xp1
jns
push
and
popf
add
addb
mov
divl
xchg
mov
dec
push
mov
in
test
test
fsub
subl
pop
int
jae
sub
or
rclb
loope
mov
sarl
ljmp
int3
pop
lds
jmp
stos
dec
cmp
les
rcrl
aad
hlt
bound
mov
addr16
fwait
push
mov
insl
sub
movsb
xchg
rorl
xor
aas
rclb
jns
out
cmpb
sbb
in
sub
mov
mov
pop
repnz
jle
ret
mov
test
cmp
xor
imul
stc
lahf
pop
movsl
xchg
jg
mov
mov
sub
into
xchg
out
test
jo
pop
into
movsl
mov
sbb
pop
addl
rclb
sub
inc
dec
dec
ljmp
aad
pop
imul
jp
xchg
push
daa
adc
lahf
add
mov
lods
mov
hlt
out
pop
lea
loopne
testl
cmp
xchg
xor
dec
dec
roll
mov
dec
mov
jp
inc
lods
les
aas
mov
loopne
dec
add
inc
jne
mov
pop
subb
xor
pop
or
mov
gs
push
xchg
add
in
pop
xor
mov
dec
stos
scas
enter
jecxz
mov
add
mov
jge
das
sbb
adc
fsubrs
ds
sub
test
add
movsb
add
sbb
cmp
jp
push
mov
inc
hlt
mov
mov
cld
or
lods
outsb
pushf
pusha
scas
pop
outsb
stos
and
test
mov
mov
lods
scas
jp
xlat
inc
push
jno
inc
push
jg
stos
shlb
sub
cmc
bts
pop
insb
test
xor
cmp
xchg
xchg
shrb
dec
xchg
mov
push
push
loope
js
ficoms
push
das
or
mov
dec
or
mov
mov
mov
and
bound
push
add
push
out
in
daa
jp
jb
popa
xor
cwtl
jo
call
scas
out
fcomip
rcrl
jns
sub
xor
inc
xchg
push
lcall
inc
fildll
gs
fstps
add
popa
push
dec
std
enter
scas
push
sbb
mov
js
inc
xlat
pop
or
leave
mov
sub
outsb
daa
sub
and
jecxz
jmp
push
fldt
sub
cmpsb
pop
inc
mov
inc
insl
xor
repz
popf
test
orb
repz
ss
and
fwait
and
mov
lcall
bound
xchg
pop
and
mov
out
mov
push
xchg
jne
mov
jae
sub
fs
inc
ljmp
pop
pop
iret
das
movsb
cld
push
ret
jge
call
ljmp
xchg
cmpsb
push
push
rcrl
je
jnp
or
adc
or
cmp
lea
mov
or
sub
or
stc
bound
or
sub
popf
and
daa
jbe
inc
rcl
mov
rol
repnz
sarl
int3
push
push
mov
out
aas
pop
jae
data16
rcl
adc
ljmp
jg
popf
xchg
cmp
mov
xor
xor
push
or
xlat
xchg
int3
divl
mov
jle
cmpsb
sub
test
aaa
xor
sbb
pop
scas
mov
pop
out
lcall
fstpl
pop
mov
and
leave
pop
mov
jbe
xchg
or
xor
jnp
push
aas
pop
or
sub
out
shrl
push
xor
sub
jne
ss
int3
ja
adc
cmp
inc
stc
mov
mov
inc
xor
mov
or
fisttpll
pop
push
pcmpeqb
add
cmp
inc
cmp
sub
xchg
push
sub
pusha
cmpsb
cmp
add
jg
sbb
push
xor
shr
mov
mov
mov
or
and
test
scas
jnp
clc
adc
pushf
sarb
jb
mov
into
pop
pushf
in
jb
cli
ss
sbb
mov
cli
data16
and
lds
movsl
test
xor
sub
dec
mov
ret
leave
gs
mov
sub
xchg
addl
roll
pop
jge
or
rcrl
push
cwtl
mov
and
inc
sbb
imul
int
out
cwtl
repz
push
loope
jmp
push
add
lds
outsb
sub
dec
imul
push
mov
pushl
sbb
out
lret
jmp
lcall
mov
test
jle
mov
loopne
subb
sub
push
sub
aad
sub
mov
or
insb
mov
xchg
jbe
mov
dec
and
jg
lods
mov
sti
insl
scas
sbb
subl
and
cwtl
and
aam
data16
inc
add
addl
cmp
dec
add
fmuls
pusha
cmp
xchg
sti
cmp
addl
jb
jo,pn
mov
decb
pushf
mov
dec
mov
cmp
out
inc
adcb
xchg
hlt
add
clc
lahf
in
mov
jb
cli
cmpsl
addr16
add
mov
gs
cwtl
dec
ljmp
xorl
cmc
mov
xchg
out
push
test
push
mov
stos
repz
cmp
and
popl
and
enter
push
inc
xchg
mov
cli
ret
inc
mov
mov
scas
push
adc
add
add
testb
sub
pop
mov
adc
mov
inc
fwait
repz
dec
add
aad
pop
xchg
dec
pop
mov
loop
inc
out
adc
pop
xchg
jbe
and
pushf
pop
jne
inc
inc
dec
mov
inc
xchg
into
jne
xchg
sbb
fwait
aaa
push
and
stos
push
adc
mov
mov
mov
mov
out
pop
pop
mov
aaa
mov
and
aas
dec
cli
sub
push
rcl
in
xchg
sub
xchg
jno
xchg
out
fistps
cwtl
pop
push
push
jbe
jne
xor
xchg
lcall
adc
sbbb
aad
lahf
imul
xor
cmp
pop
outsl
mov
sbb
mov
lret
mov
aas
mov
push
out
loopne
lcall
sub
dec
bound
adc
ficomps
pop
adc
leave
dec
sub
lret
xor
xorl
test
js
dec
and
inc
hlt
adc
pop
rcrb
xchg
mov
fwait
out
rolb
addr16
sub
jecxz
in
push
sbb
push
dec
and
xor
ficomps
popf
imul
jbe
mov
mov
shlb
push
mov
popa
clc
cmp
ficoml
and
mov
ror
bound
aaa
sub
pop
rcr
xlat
push
add
jl
lahf
out
loopne
xor
jno
sub
movsl
xchg
mov
mov
in
xor
pop
pop
jge
dec
addb
pop
pop
sub
push
cmpl
jecxz
mov
insl
lds
jl
mov
popa
lods
xchg
adc
cmp
push
jne
cmp
mov
mov
lds
in
pop
xor
iret
loopne
xchg
xchg
shll
pop
and
clc
adc
pop
fidivrs
and
out
mov
or
imul
mov
pop
test
addb
adc
push
sub
addb
pop
inc
mov
jp
sub
lcall
fsubp
add
popa
shl
les
dec
bound
pop
sub
push
test
repnz
cmpsl
imul
ljmp
test
mov
sub
lods
sbb
pop
cmp
or
gs
add
cmp
loope
mov
icebp
hlt
pop
mov
add
stc
adc
inc
inc
jns
jnp
ljmp
jae
xchg
arpl
jb
sbb
arpl
xor
sub
mov
push
fnstcw
sub
clc
divb
dec
and
lods
fimull
mov
xchg
mov
lret
fdivr
and
jl
mov
xchg
inc
lds
xchg
loopne
dec
cli
inc
mov
inc
push
ljmp
ret
sbb
push
out
lahf
dec
jb
mov
fidivl
dec
gs
mov
dec
jnp
push
scas
lret
add
sti
jp
xor
cmp
out
add
movsl
mov
pop
jbe
sub
jo
stc
lea
mov
test
outsl
pop
mov
jns
pushf
pop
stc
xor
push
mov
mov
pusha
inc
notl
dec
push
sbb
sbb
pop
aam
test
jne
jae
and
jb
mov
sub
ret
mov
sub
enter
dec
insb
imul
xchg
xchg
mov
dec
mov
je
dec
iret
pop
pop
push
push
test
nop
mov
or
cmpsb
xor
loope
sub
or
into
movsl
dec
das
call
sti
in
or
push
or
xchg
and
dec
pop
mov
xchg
xchg
dec
xchg
push
les
pop
call
jp
xchg
and
outsb
mov
xor
dec
cltd
fwait
jle
push
stos
xlat
scas
into
pop
stos
outsl
pop
and
xor
sahf
inc
mov
adc
cmp
iret
mov
sahf
mov
stc
mov
test
push
andb
xlat
xchg
lea
mov
mov
push
jns
mov
arpl
out
lcall
add
mov
jmp
inc
ret
aam
lods
mov
jbe
mov
fmul
out
cmp
aaa
xlat
test
add
xor
mov
ds
adc
out
xchg
xor
add
inc
pop
inc
lods
sbb
and
xor
jg
push
sti
cs
cli
fisttpll
mov
orb
ficoms
outsb
in
stos
hlt
cmp
inc
push
pop
or
addr16
cwtl
mov
add
xor
in
jmp
lcall
inc
rcll
mov
jbe
icebp
xor
jge
cmp
xchg
rcr
lret
cmpsb
outsb
cwtl
add
mov
ja
xchg
dec
lahf
dec
sbb
xor
push
imul
outsl
imul
das
les
add
in
or
ficompl
mov
mov
cmp
repz
repnz
mov
adc
mov
jp
xchg
mov
sti
mov
ds
mov
mov
nop
bound
js
sbb
and
stos
fdivrs
pop
das
jge
gs
enter
sub
int3
pushf
adc
push
shrl
jp
daa
adc
jno
push
and
push
jb
add
enter
inc
push
sbb
pop
pop
ret
and
sbb
pushfw
lock
xor
aad
pop
adc
test
mov
dec
pop
sbb
xorb
xchg
fdivrl
xchg
fcmovb
jle
cmp
inc
fwait
add
ret
dec
push
ja
cmp
sbb
shl
repnz
dec
notl
inc
or
shlb
into
lods
jb
fs
push
mov
add
mov
push
mov
test
xchg
sar
test
mov
push
test
inc
bound
add
mov
sarb
jl
lret
shll
mov
lahf
imul
sub
jmp
sub
adc
mov
adc
or
mov
dec
fidivl
xchg
clc
mov
imul
mov
inc
and
lret
loopne
test
mov
mov
adc
add
loop
scas
sarb
mov
xor
pop
adc
xchg
cmp
in
mov
arpl
mov
test
jmp
inc
push
cmp
inc
out
lret
test
mov
mov
insb
lcall
dec
push
adcl
xchg
push
enter
xor
push
dec
mov
rclb
add
aas
andl
leave
mov
or
cwtl
push
lods
fdivp
loope
stc
inc
sbbb
adc
sub
std
xchg
data16
mov
xlat
sahf
mov
mov
out
mov
sbb
dec
jae
add
rcl
sbb
push
push
mov
leave
int
dec
shll
lret
lods
aas
ss
enter
pop
jne
xchg
mov
lds
mov
add
mov
cltd
es
sbb
and
fisubl
int3
jbe
inc
movsl
inc
sub
rorb
mov
rcrb
sbb
out
mov
sbb
push
push
jae
es
outsl
jb
pop
mov
cmc
pop
mov
ret
pop
lods
jmp
inc
and
hlt
fstps
test
out
outsl
pop
dec
fwait
jnp
xchg
push
lcall
aad
insl
mov
sti
sbb
cltd
arpl
mov
dec
jmp
push
in
clc
lea
mov
inc
mov
add
std
jge
jbe
int
add
out
mov
sub
inc
outsl
ret
mov
decl
fldl
mov
enter
addb
lret
ds
push
sbb
idiv
out
imulb
mov
fcmovu
or
push
inc
push
dec
bound
ud1
jae
cmp
or
xchg
cmpsl
or
add
fadds
aas
mov
mov
dec
mov
in
inc
fldenv
stc
inc
cmp
and
popf
jle
test
das
push
imul
push
jnp
js
ljmp
mov
push
xchg
xchg
bound
pop
xchg
imul
lea
pushf
jecxz
mov
out
xor
les
shll
adc
daa
pop
leave
sbb
dec
cmp
inc
filds
jns
jle
xchg
mov
pusha
mov
add
mov
icebp
push
push
mov
fwait
xchg
xchg
stc
pop
scas
adc
lret
or
jb
lds
into
das
scas
mov
mov
les
in
and
jecxz
sub
mov
mov
stc
daa
das
in
jns
dec
call
fcoms
add
jno
loop
pop
pop
inc
movsl
and
cmp
add
inc
mov
outsl
mov
add
gs
sbb
repz
mov
mov
add
sbb
jmp
lcall
xor
push
jl
fsubl
cmp
or
push
jmp
loopne
push
aas
mov
xor
stc
dec
fldt
adc
xor
xchg
cld
pop
inc
sbb
or
sbb
cmp
je
xor
push
pop
cvtps2pd
inc
push
fistpl
ficomps
pop
sub
jmp
dec
repnz
arpl
sub
ljmp
jnp
pop
movsb
add
dec
jecxz
mov
je
ds
pop
cmp
push
adc
vdivsd
add
ja
dec
rolw
sub
cmpsl
jnp
sbb
mov
xlat
adc
test
and
sbb
and
cmp
es
and
out
cmp
pop
loopne
mov
xor
jns
inc
jl
and
mov
pushf
lret
sbb
xor
arpl
test
pop
cmp
out
inc
mov
out
and
pusha
pop
ret
in
fs
call
icebp
lods
pushf
adc
xor
into
test
rcrl
ret
xorb
shll
gs
push
or
cwtl
or
dec
fisubs
xchg
popa
int
adc
or
movsb
mov
push
cld
xchg
stos
nop
test
test
dec
xchg
stc
jnp
fildl
shr
ss
and
gs
jbe
lahf
pop
jge
test
sub
in
das
jo
adc
inc
xchg
lea
bound
subb
mov
jb
jp
lea
sti
imul
and
fwait
sbb
xchg
mov
cmp
push
sbb
lret
mov
xchg
xchg
xchg
fisttpl
addl
sub
roll
mov
push
fdivs
enter
pop
lods
mov
jne
lods
pop
mov
js
dec
mov
mov
std
js
xor
lock
cmpsb
cmp
shrl
mov
mov
int3
and
inc
jmp
dec
int
ret
and
cltd
add
xchg
jbe
cltd
jbe
xor
lret
fists
inc
leave
xor
pushf
and
mov
rcl
cwtl
imul
les
dec
sbb
pop
fs
xchg
cmp
mull
aas
xchg
setg
xchg
and
lea
push
push
push
mov
mov
andb
mov
pop
das
cmp
loop
mov
xchg
push
insl
fcoms
sub
fisubrs
xchg
xchg
push
jle
xor
fidivrl
fadds
push
daa
xchg
hlt
das
pusha
cmpsl
adc
or
cltd
into
loopne
fistps
xor
push
and
mov
pop
dec
sub
sub
mov
fiaddl
fwait
in
insl
mov
push
adc
mov
loope
inc
insb
shr
jecxz
js
stos
out
lcall
inc
inc
clc
aad
cmp
lea
mov
jl
cmp
adcb
cmp
and
in
sbb
iret
push
ljmp
inc
outsl
pop
popf
add
mov
addr16
sub
test
int3
mov
dec
or
adc
fcmovnbe
pop
dec
std
mov
mov
push
inc
mov
and
clc
push
dec
ja
jmp
mov
or
xchg
cld
cwtl
adc
repz
cli
adc
push
xor
sub
inc
inc
adc
pop
decl
idivb
out
xor
flds
dec
ret
andl
loopne
pop
in
push
movsl
scas
xchg
push
dec
fsubp
pop
or
push
xlat
aad
test
data16
out
xchg
orb
jne
daa
ja
fisttps
mov
pop
cwtl
pop
dec
aad
mov
mov
lods
outsl
cmp
or
sub
in
shll
mov
jg
cltd
inc
jbe
cmc
push
pop
adc
push
fnstenv
xor
mov
xchg
repz
stc
rclb
sub
in
lods
mov
add
mov
mov
xchg
out
sahf
mov
mov
mov
add
push
jns
fsubrl
add
icebp
mov
inc
mov
mov
mov
pop
xchg
adc
xchg
sub
pop
push
bound
jle
sub
dec
mov
mov
adc
mov
cs
mov
into
shll
cmp
out
push
shrl
insb
dec
loopne
or
pop
jmp
lods
adc
pop
icebp
lock
adc
sbb
lea
enter
sahf
call
pop
cmc
lcall
jg
jl
push
fsubrl
lcall
xlat
popa
push
mov
xchg
push
sbb
adc
push
mov
loop
jmp
jecxz
mov
lret
imul
pop
stos
xchg
pop
cmc
mov
sbb
aam
cld
test
test
adcl
dec
aad
push
jns
ja
in
leave
test
pop
cld
fwait
cld
add
divps
mov
loopne
mov
xlat
cmpsl
fimull
notb
xchg
mov
mov
push
mov
cmp
sbb
jg
push
adc
jne
xchg
cs
cmp
outsl
lret
dec
cmp
lock
jne
out
add
int
lds
test
jbe
dec
gs
mov
mov
scas
lret
insl
daa
jne
mov
inc
lcall
repnz
pop
jo
jbe
sub
xchg
frstor
or
fmul
inc
gs
sbb
xchg
mov
scas
mov
push
cmp
jae
cli
out
mov
and
lock
sti
pop
inc
shlb
sub
cmp
pusha
or
xor
mov
lea
push
and
xchg
mov
adc
add
call
jp
hlt
pop
xor
mov
loop
bound
fisubrs
ljmp
add
out
in
pop
negl
mov
dec
sub
in
sub
adc
loope
aam
mov
and
mov
andb
push
pop
xlat
repz
mov
cmp
jge
xor
jmp
aam
imul
mov
dec
ret
add
xlat
push
adc
sti
dec
cmpsb
hlt
cmc
adcb
popa
inc
andb
rcr
mov
and
imul
mov
push
adc
out
push
in
sub
jnp
mov
les
lods
pop
movsl
lahf
cmpxchg
stos
add
test
es
pop
shl
sbb
shll
inc
fstl
pop
add
icebp
cmpb
and
cmp
imul
xchg
push
cwtl
push
cld
pop
and
dec
mov
push
gs
mov
inc
jmp
jne
fldl
inc
test
stc
and
jb
fwait
lret
in
jecxz
lock
mov
xchg
mov
insl
add
xor
mov
mov
fs
fldl
xor
inc
jno
or
add
pop
cmc
xchg
push
stc
bound
mov
dec
xchg
inc
test
mov
lods
loopne
jge
xor
popf
xchg
push
inc
je
sbb
loopne
mov
inc
mov
fbld
sbb
inc
inc
pop
mov
sar
or
ds
sbb
and
mov
fisttps
cmp
cltd
aam
sub
mov
adc
mov
push
lcall
sub
rcr
jmp
dec
rclb
mov
out
iret
push
mov
adc
sub
call
inc
popa
dec
imul
loop
ja
cltd
leave
xchg
imul
sbb
jnp
fwait
xchg
sbb
js
push
ret
sub
mov
jge
mov
out
add
mov
adc
lods
sbb
mov
jge
or
push
out
jno
lods
movsl
loope
lods
andl
lods
neg
ds
test
jnp
sbb
gs
xchg
jp
push
aas
aad
mov
or
or
push
or
lret
lret
scas
push
push
jl
cltd
add
fcompl
push
pop
lds
mov
push
sbb
cltd
rol
mov
mov
xchg
lea
test
test
cmp
xlat
std
push
mov
mov
mov
push
cltd
dec
xchg
sbb
scas
sub
cld
xlat
xor
icebp
fnsave
sub
push
and
dec
adc
jl
fbstp
fistps
inc
dec
mov
in
aas
jno
mov
pop
xchg
mov
fcoml
sbbb
repz
mov
and
jl
cmpsl
push
sbb
xchg
cs
mov
lods
mov
sub
cmp
dec
xor
jle
pushf
andl
add
cmp
and
fildl
jge
sbb
cmp
stos
clc
inc
jmp
jbe
dec
xchg
pop
sub
push
push
cmp
or
push
out
push
nop
xchg
shlb
outsb
or
inc
mov
xor
cmp
sbb
std
pop
xor
or
sbb
dec
or
mov
jge
popf
shrl
popf
push
shll
xchg
rcll
jbe
inc
mov
mov
cmpsb
dec
add
push
cs
push
adc
pop
loopne
jno
in
inc
imul
std
addr16
dec
jmp
ds
pop
xorb
inc
inc
std
xchg
nop
mov
sbb
movsb
fnstcw
push
jmp
adc
mov
adc
xlat
xchg
scas
jnp
cmc
pop
jne
dec
mov
xchg
inc
add
xchg
and
sti
out
mov
imull
xchg
jg
xor
pop
cwtl
add
cmp
jmp
push
mov
mov
inc
push
xchg
jecxz
xlat
fcoms
push
insb
aas
aaa
push
jge,pn
or
movsb
push
fs
or
cmp
adc
mov
jo
push
jae
sbb
mull
sbb
or
adc
mov
adc
test
mov
pop
dec
xor
mov
mov
mov
cmp
repnz
pop
jmp
or
hlt
outsb
insb
fwait
mov
push
mov
nop
lcall
mov
inc
arpl
xchg
je
xor
je
mov
xchg
jmp
adc
je
and
adc
call
mov
mov
sbb
push
imul
lods
mov
push
dec
or
lret
push
outsl
stos
sar
mov
jecxz
jno
imul
mov
idiv
cmp
jnp
sbb
insl
shrb
add
jecxz
into
test
push
mov
je
addr16
mov
test
xor
aas
cs
inc
mov
shlb
lock
test
stos
or
test
lahf
movsl
sti
ja
push
mov
insb
imul
mov
and
sub
or
or
scas
hlt
add
xchg
mov
mov
adc
fwait
mov
ficompl
push
cmp
jl
mov
add
jmp
pop
and
sbb
clc
fbld
lods
fwait
shlb
dec
in
xchg
or
lret
xor
dec
in
mul
push
enter
sbb
fldlg2
mov
repz
fwait
leave
fs
or
cmpb
data16
push
movsb
cmc
insb
xchg
sbb
pushf
mov
inc
sti
pop
insl
jb
jmp
sub
sbb
and
scas
mov
jmp
mov
sub
jae
cmpsl
jl
in
adc
cld
jb
lea
or
inc
mov
insb
or
dec
ror
outsb
dec
push
fisttps
dec
mov
pusha
cmc
xor
orb
pop
sbb
dec
cmc
fbstp
pop
pop
popf
in
bound
scas
shll
and
cmp
loope
and
nop
movsb
and
jne
xor
cmc
adc
fimuls
ss
pop
pop
sub
lock
jne
sti
cmp
enter
adc
cmp
iret
jne
xor
gs
test
adc
sbbb
fwait
movsb
gs
push
daa
hlt
push
icebp
push
int3
clc
scas
inc
mov
pop
out
outsl
mov
jg
and
mov
lods
xchg
outsb
fnstenv
lds
or
in
lahf
les
les
xchg
jno
fisubl
or
mov
jb
push
mov
push
outsb
cmp
jo
int
shlb
fsubl
sbb
or
sahf
nop
sub
pusha
xor
and
addb
dec
mov
mov
mov
hlt
in
rcrl
and
repz
lds
iret
sbb
push
jae
out
je
gs
jg
sbb
push
insb
mov
mov
sbb
xor
cmpsb
mov
cmpsl
add
add
sahf
lods
mov
clc
lahf
arpl
push
fstpl
pop
pop
and
pop
mov
imul
xchg
mov
mov
sbb
rclb
or
jnp
sti
lea
inc
inc
ror
jp
stos
lret
repnz
dec
inc
inc
mov
mulb
xor
arpl
inc
push
sbb
inc
push
jae
and
add
jnp
out
mov
nop
rorl
jp
ret
ret
es
cld
stc
mov
cmc
jo
sbb
ljmp
lea
daa
mov
sbb
scas
push
xlat
js
and
test
loope
adc
ss
mov
mov
jmp
push
je
insl
inc
inc
test
divb
adc
push
imul
mov
pushf
jmp
mov
orl
mov
pop
into
out
inc
sahf
jmp
adc
ljmp
sbb
jp
cmp
inc
or
and
and
push
jnp
inc
adc
dec
xlat
cmp
jle
push
push
xor
mov
pop
push
jecxz
mov
fnstsw
loop
mov
out
fdivrs
and
add
adc
nop
mov
sarb
pop
pop
insb
outsl
xchg
pop
test
inc
mov
pop
sarl
mov
jns
pop
or
mov
add
mov
push
mov
push
cmp
cltd
loop
mov
mov
pop
in
js
call
loopne
int3
sub
jle
push
push
aas
dec
out
push
test
cld
xor
loopne
dec
mov
sti
les
mov
dec
popf
fisubrl
cltd
gs
cmp
adc
cmp
adc
fistpl
sti
cltd
stc
lds
sti
and
test
inc
clc
icebp
cs
cmpsl
and
arpl
and
mov
icebp
push
outsl
cmp
xchg
bound
xchg
xchg
lcall
testl
jle
fildll
xor
jmp
sub
mov
inc
div
xchg
adc
sub
push
add
jns
pop
pop
mov
out
mov
or
or
loope
or
sub
xor
sub
insl
adc
xchg
js
lods
in
mov
jne
xor
push
testl
pop
cmc
jl
call
aam
sub
test
lock
jl
aam
adc
push
and
mov
sbb
stc
pop
pop
cld
mov
xchg
xchg
lret
incl
mov
dec
pop
sub
ud0
out
add
in
repnz
or
test
mov
xlat
jo
xor
sbb
adc
cmp
xchg
cmc
fld1
sub
icebp
add
fimuls
pop
cmp
pop
lock
sbb
das
adc
repnz
sub
sahf
out
gs
in
inc
jmp
call
lds
jmp
ret
lcall
add
je
adc
and
mov
mov
mov
fistl
out
inc
daa
xchg
add
cs
dec
aaa
mov
fcom
enter
adc
dec
jo
and
imull
mov
pop
je
outsl
lret
sbb
data16
sub
inc
jmp
nop
cmp
call
mov
mov
mov
xchg
jb
cmpsl
fs
pop
mov
inc
adc
movb
jbe
sbb
nop
movsl
mov
lods
pusha
add
nop
mov
ficompl
lods
mov
dec
aaa
ja
outsb
popa
xchg
xor
lods
push
push
and
pusha
in
in
mov
mov
xor
icebp
pop
mov
mov
push
push
lds
in
lret
jecxz
andl
xchg
ret
jno
stos
aam
fadds
lock
adc
sub
xchg
dec
outsl
pop
pop
cld
popa
jecxz
adc
hlt
cld
xor
imul
call
dec
jns
xchg
enter
shll
in
add
rcr
insb
push
push
xchg
adc
pop
subl
add
dec
das
sub
cmp
adc
inc
lock
faddl
leave
mov
sub
pushw
mov
sbb
jno
out
cmpsb
sub
lock
push
aam
inc
shlb
shll
dec
pop
inc
cmp
test
pop
xor
add
pop
mov
sbb
out
jecxz
repnz
cltd
fs
cmc
addl
or
mov
fldt
lahf
test
in
subb
jmp
jnp
cs
and
mov
fnstsw
jle
add
inc
in
lcall
pop
pop
shlb
sti
roll
xchg
push
adc
cwtl
clc
ds
or
mov
or
sub
xorb
scas
pop
inc
inc
push
jge
xchg
lock
shrl
xchg
and
popa
fdivrl
fisubrs
mov
xor
inc
aam
adc
js
mov
xor
cmpsl
ja
out
leave
cmpsb
and
icebp
out
or
daa
bound
lcall
mov
lock
push
mov
mov
ret
add
sbb
lea
sbb
daa
pop
lods
imul
mov
test
and
cwtl
sub
sbb
inc
cmp
popf
inc
cwtl
adc
cs
std
gs
mov
rcr
mov
scas
test
rclb
dec
hlt
fcmovnb
xchg
xchg
mov
push
not
aas
popf
cmp
sbb
jg
ja
inc
imul
stos
loopne
gs
mov
sub
push
mov
pop
sbb
mov
dec
cltd
fdivs
sub
mov
out
xchg
dec
inc
out
mov
mov
mov
mov
sbb
subb
xchg
bsr
in
ss
inc
push
lahf
imul
shr
fcmovb
jge
adc
or
sbb
mov
dec
mov
pop
pop
push
mov
enter
xor
pop
xchg
sahf
test
xor
cld
sub
jmp
xchg
out
xchg
inc
mov
dec
mov
cmp
jnp
dec
addr16
ret
leave
sbb
popf
jl
frstor
xchg
add
mov
popa
and
xor
enter
iret
lcall
push
inc
push
enter
mov
and
cwtl
adc
push
scas
in
push
push
xchg
push
push
imul
push
add
cmc
jae
mov
xchg
ljmp
pop
fbstp
arpl
jae
iret
xchg
les
mov
cwtl
pop
mov
inc
hlt
inc
jae
mov
xchg
xchg
mov
push
add
cs
jp
aad
xchg
push
or
inc
das
lcall
iret
xorl
mov
push
fstpl
adc
testb
je
jp
out
cmp
es
test
fisubl
adc
and
mov
out
jmp
ret
mov
xchg
ret
test
sbb
mov
aam
call
push
xchg
cmp
outsl
mov
and
mov
and
data16
aam
arpl
lods
adc
adc
or
jae
or
dec
push
into
insb
and
mov
jecxz
jns
adc
jns
xor
xor
rorl
fidivrs
adc
fnstsw
cli
xor
lret
lret
xor
pusha
fwait
pusha
loope
pop
jae
mov
xorb
cli
orl
scas
je
in
cmpsb
inc
imul
pop
aas
inc
jne
ljmp
cmp
adc
cld
mov
mov
insl
add
add
loope
lret
popa
imul
xchg
jb
dec
dec
dec
pop
jmp
cmpsl
sti
jmp
sarl
cs
mov
mov
imul
xchg
inc
ret
mov
adc
push
fsubrl
inc
jle
iret
dec
sub
lock
movsb
mov
fsub
add
rcrb
xchg
es
jge
jnp
sub
mov
cmp
jnp
repnz
cltd
ss
in
ljmp
inc
push
fstps
mov
dec
or
hlt
out
and
sub
sub
test
das
mov
sbb
fs
cs
popf
stc
ficoml
and
testb
push
cmp
mov
and
dec
push
out
xor
mov
xchg
or
popa
adc
jno
aaa
push
pop
aad
gs
pop
rclb
cmc
sub
das
dec
pop
cwtl
scas
push
xchg
fst
mov
mov
sbb
lods
xchg
sbb
imul
cld
bound
cld
inc
sbb
xor
jne
stos
mov
divl
jmp
lods
dec
sub
sahf
repz
add
enter
pop
pop
stos
hlt
mov
mov
adc
cli
ret
or
pop
adc
xchg
popf
imul
aad
cmc
and
in
xor
push
cmpsl
push
test
sbb
in
dec
jmp
mov
pop
dec
or
push
test
sbb
push
test
push
mov
mov
out
inc
sub
sti
jne
cmp
enter
push
fs
mov
mov
sahf
push
jge
sub
pop
int
add
adc
lea
jle
pop
add
insb
leave
bound
mov
addr16
js
dec
inc
dec
aas
stos
into
or
mov
fisubrl
cmp
xorb
mov
jbe
pusha
inc
and
cmp
dec
push
cwtl
data16
in
fidivrs
pushf
cltd
jbe
add
test
sub
fwait
jns
mov
imul
mov
loope
cmp
push
cwtl
pop
push
mov
js
adc
sar
push
push
pop
mov
xorl
pop
cmp
sti
jne
out
add
and
ss
mov
data16
int3
xchg
out
sbb
sbb
scas
add
mov
cmc
or
or
add
jo
mov
sub
cmp
add
lods
dec
xchg
xchg
out
lret
cmpsl
cmp
dec
mov
repz
xor
mov
shll
inc
je
inc
rorb
adc
sarb
loope
pop
jo
jp
push
mov
sub
mov
mov
sbb
xor
sub
mov
mov
jbe
addb
jecxz
push
hlt
dec
lods
insl
in
dec
insb
fadds
fs
orl
vmwrite
test
fisubrs
or
and
lods
cmp
lods
lea
cmp
aas
xchg
jae
mov
dec
or
mov
fwait
push
xor
adc
pop
sub
xchg
xor
mov
push
ret
sub
push
add
jmp
sarb
mov
jo
cwtl
jne
mov
cmp
repz
xchg
je
pushf
imul
lds
xchg
sahf
clc
scas
in
in
push
test
and
lods
dec
test
in
and
hlt
xchg
cmp
test
and
out
adc
test
push
in
insl
pop
dec
inc
and
or
outsl
push
mov
dec
out
fnstenv
js
stos
push
xor
into
cmp
insl
cmp
movsb
out
pop
bound
sbb
lods
data16
jb
es
add
jbe
cmp
inc
das
cwtl
sub
clc
sbb
or
movsl
jl
fistpl
mov
data16
test
jp
jo
sbb
cmp
outsb
cmp
inc
ds
adc
sbb
mov
insb
cwtl
adc
sub
sbb
das
out
cmc
or
xchg
lods
in
or
jmp
sti
push
pop
mov
mov
adc
jnp
jae
push
fnstsw
xchg
orl
pop
iret
and
mov
mov
sub
adc
xchg
cmc
in
outsl
lsl
xor
pop
mul
or
loopne
or
and
pop
or
xchg
xor
in
mov
test
imul
jnp
adc
jnp
nop
test
cmp
sub
jecxz
shll
lret
aad
sti
dec
sub
jg
inc
add
decb
ret
dec
roll
mov
repnz
adc
adc
out
daa
mov
mov
aad
ds
mov
clc
inc
sub
push
add
pop
xor
dec
add
dec
sbb
sbb
cmp
pop
sbb
lcall
dec
xchg
add
movsb
mov
push
shl
pop
jl
mov
push
das
cwtl
outsb
push
cs
inc
sub
cltd
test
xor
mov
cmp
js
out
pop
outsl
and
aad
sub
cmp
gs
test
rclb
test
lods
mov
push
fwait
xchg
ja
iret
decb
mov
mov
clc
shll
pop
lods
loopne
mov
dec
les
xchg
cli
repz
mov
mov
lcall
mov
lahf
and
xor
push
loopne
and
fistpl
sbb
jnp
sahf
xchg
pop
rorl
fwait
mov
xchg
roll
aam
jle
sarb
mov
push
rcl
sub
push
xor
int3
in
xchg
add
int
sbb
lods
fmuls
mov
mov
pop
inc
aam
sub
daa
lds
inc
cmp
adc
inc
pop
push
or
icebp
aam
pop
lcall
outsb
popa
stc
dec
loopne
orb
in
push
lds
sub
mov
in
xchg
es
rclb
mov
lret
and
cmpsl
dec
sub
in
stc
cltd
bnd
inc
int
je
call
inc
std
cmp
adc
xor
das
jmp
test
pop
aas
in
fldenv
daa
movsl
out
aad
sub
and
int3
adc
std
imull
add
mov
popl
std
cmc
test
dec
mov
xchg
jns
outsl
lods
jecxz
xchg
sbb
test
enter
les
and
pop
dec
cmpsb
movsb
mov
dec
jmp
xor
daa
ja
add
inc
in
xchg
inc
add
lea
xor
adc
xor
jo
hlt
mov
stos
xor
inc
data16
subb
lea
fst
mov
pop
and
cmc
push
mov
test
cmpsb
movsl
dec
xor
cmc
inc
pop
out
aad
imul
pop
push
iret
sbb
into
dec
stc
jecxz
push
mov
inc
stos
pushl
sti
adc
mov
add
jo
testb
imul
rclb
jns
loopne
sbb
pop
sub
and
jle
jnp
jne
add
mov
jmp
fcoms
out
fnstcw
repz
inc
inc
mov
enter
rorl
lock
inc
pushf
hlt
sbb
push
pop
sub
je
popa
das
dec
aam
scas
mov
int
lds
mov
or
test
xchg
arpl
int3
ds
or
and
inc
loop
popf
cld
lea
dec
xchg
lds
inc
stos
adc
loopne
cs
dec
xchg
pop
pop
adcb
imul
jno
mov
out
xor
imul
inc
cmpl
push
and
rorb
ja
dec
mov
popf
adc
stc
add
mov
jbe
mov
add
icebp
rcl
repnz
sub
mov
jecxz
sbb
lods
test
xor
sub
nop
les
pop
cmpsb
xor
jns
push
call
mov
sub
mov
fbstp
push
aaa
arpl
jg
jmp
jns
pop
ret
fdivl
sbb
pop
xchg
stos
sbb
hlt
cmp
into
or
mov
inc
mov
jp
cs
xchg
lods
inc
push
sub
stc
adc
jge
inc
lock
mov
dec
fs
ficompl
flds
dec
cwtl
dec
fsubp
adc
mov
jb
test
dec
mov
mov
gs
push
enter
xor
mov
add
pop
pop
xorb
dec
jle
shrl
movsl
ja
aas
pop
shlb
fdivr
nop
sub
pop
scas
ret
out
lret
inc
and
imul
or
jo
jl
push
lcall
js
sti
push
sbb
lods
stos
inc
test
sbb
pop
jp
add
cmp
jecxz
pop
xor
pop
cmpsb
add
sbb
and
ja
scas
das
fsubl
cmp
lcall
dec
lods
out
xchg
cmpb
pop
lahf
jb
hlt
ret
xchg
and
xchg
cmp
jmp
push
add
xor
pushf
test
stc
dec
sbb
or
daa
jle
mov
lods
cmpsl
mov
iret
and
adcb
pop
inc
and
scas
scas
movsl
sub
imul
call
mov
cwtl
cmp
adc
into
out
cltd
and
jbe
out
sahf
inc
pop
call
mov
bound
jmp
jo
sbb
test
jo
mov
call
movb
xchg
inc
loope
inc
mov
popa
cmp
adc
int
xor
or
sbb
in
shr
and
cmp
push
fwait
int3
test
scas
sarl
mov
fldcw
ret
je
xchg
sub
add
inc
cmp
mov
or
push
ret
fists
and
lods
lods
inc
mov
test
pushf
and
jecxz
sbb
filds
imul
xor
mov
out
xor
or
ret
inc
scas
fbstp
jmp
mov
dec
mov
ds
inc
dec
dec
or
cmc
filds
mov
arpl
ret
rclb
lret
lret
mov
jb
push
xor
and
push
mov
pop
and
jecxz
jne
fstl
cs
jno
pop
mov
xchg
push
mov
hlt
add
scas
xor
and
aad
sub
mov
pop
data16
adc
push
and
jae
dec
in
rorb
jnp
out
test
aad
lods
cmpsl
push
mov
xor
mov
dec
lea
add
sub
test
adc
test
ljmp
mov
mov
cltd
jns
out
lret
add
cmpsb
enter
pusha
push
push
xor
mov
or
icebp
mov
inc
sti
arpl
int
mov
or
mov
mov
or
and
iret
stos
mov
mov
sbb
inc
push
arpl
xorb
and
add
jp
fstl
xchg
cmpsl
adc
repz
lret
std
mov
pop
popa
jp
imul
ror
and
cli
lods
imul
pop
sti
out
cwtl
push
test
jl
push
add
pop
test
mov
sbb
inc
ja
mov
rclb
xchg
pop
in
fs
icebp
push
pushf
inc
cmp
mov
mov
popa
sub
imul
sbb
idivb
mov
into
enter
pop
push
int3
ffree
mov
sbb
xorb
push
shl
and
mov
loop
cmpsb
push
pop
cmc
mov
rclb
ror
push
aaa
jno
iret
add
sub
push
pop
pop
mov
mov
cmpl
cmp
out
outsl
cltd
jge
jl
adc
ljmp
aam
or
add
sbb
add
pop
sub
jne
and
lret
mov
sbb
movsb
js
inc
or
xor
xor
mov
sbb
lret
pushl
ja
inc
fiadds
adc
subl
std
mov
les
mov
pop
idivl
or
lret
pop
pop
in
cmp
push
rorl
mov
cwtl
push
xchg
adc
pop
or
lock
cmpsb
hlt
mov
and
push
in
fsubrl
insb
mov
ret
xor
imul
xor
xor
pop
mov
sbb
clc
xor
gs
fbstp
imul
push
mov
outsb
pop
xchg
xchg
sbb
testb
xlat
jnp
mov
mov
loopne
cmp
and
mov
jmp
dec
rorl
dec
pop
fidivs
and
movsl
mov
xor
aam
cmp
inc
and
sub
xchg
cmp
orb
lret
add
sub
inc
popa
push
or
insl
mov
jmp
ja
pop
mov
jno
ja
in
pop
fwait
ljmp
push
pop
loopne
sub
sbb
cmpb
fwait
mov
mov
orl
sbb
inc
xchg
and
sbb
inc
dec
es
sahf
push
cwtl
push
jmp
fwait
jle
in
out
mov
mov
jl
jne
dec
xchg
and
jmp
test
outsl
mov
insb
outsb
out
push
ds
dec
rclb
in
mov
addr16
xchg
mov
jecxz
dec
mov
outsl
push
insb
aaa
mov
loop
jns
jmp
xor
cltd
jns
mov
gs
faddl
dec
jp
inc
pushf
sbb
hlt
cmp
pop
and
pop
cltd
push
sbb
or
roll
xchg
pop
mov
aaa
test
mov
jle
imul
sub
fs
pushf
sbb
jbe
mov
push
or
dec
pop
and
or
cmc
inc
lds
rep
xchg
xchg
adc
mov
jg
daa
bound
xchg
mov
adc
or
sar
aam
pop
push
ljmp
sub
imulb
lods
and
pop
push
cmc
push
push
xor
aam
pop
lcall
scas
add
rorb
cli
cli
jge
add
les
aad
pop
lret
pop
jb
loopne
sbb
jg
mov
mov
xchg
add
or
lahf
addr16
xlat
adc
and
and
add
icebp
mov
xchg
xchg
out
ja
clc
dec
fwait
stos
aas
out
inc
adc
push
cli
add
push
in
dec
cmpl
xor
into
nop
add
mov
loopne
js
int
pushf
es
push
dec
out
mov
mov
or
inc
xor
push
adc
shl
mov
inc
jle
push
cli
jnp
pop
fldt
int3
sub
hlt
das
and
mov
cld
push
movsl
sbb
mov
and
jg
mov
call
std
lea
xchg
fndisi(8087
sti
daa
xor
rep
push
xchg
fwait
pop
xlat
sahf
add
hlt
mov
dec
and
das
mov
adc
pop
or
cmp
movsl
sbb
mov
icebp
mov
pop
aam
xor
std
cmp
idiv
int3
data16
inc
push
cmpsb
insl
sbb
push
push
push
daa
pop
add
aam
xchg
mov
leave
daa
int
mov
fidivl
pop
outsl
and
in
dec
pop
clc
pop
pop
ds
daa
dec
mov
rorb
push
pop
jmp
lahf
dec
jmp
dec
xchg
xchg
dec
int
test
dec
push
push
lcall
ret
jno
stc
cmp
loopne
lock
mov
dec
push
sti
mov
aaa
mov
roll
rcrb
or
jo
sti
mov
add
sbb
xchg
inc
jb
xor
repnz
adc
int3
cmp
loopne
dec
sub
divl
mov
test
repnz
jno
mov
jbe,pt
je
repnz
xor
dec
push
cld
jg
sbbb
sbb
jo
xchg
test
out
inc
jge
xchg
lret
and
pop
cmp
cwtl
sbb
pop
inc
xor
lcall
sub
stos
pop
negb
in
das
push
and
sbb
xchg
adc
xlat
mov
imulb
mov
mov
lods
sub
push
or
sti
push
jnp
insb
jb
fistps
mov
adc
adc
adc
sub
pusha
out
and
push
push
lret
pop
dec
pop
dec
jle
adc
or
data16
inc
jmp
mov
xchg
jecxz
pop
fnstsw
add
enter
jmp
pop
scas
out
shll
data16
mov
jne
mov
add
test
mov
mov
cmp
scas
jae
lcall
repnz
push
cwtl
outsb
jecxz
jnp
jne
or
gs
leave
mov
adc
fisubl
pop
aas
push
lcall
lcall
push
and
in
stc
test
popl
lret
jo
mov
outsb
mov
repnz
in
push
cmpsl
jecxz
lret
jbe
lods
mov
and
mov
xchg
cli
subl
mov
add
aad
fwait
jbe
imul
add
fmul
adc
xchg
mov
pop
and
sub
je
into
les
out
inc
mov
jl
pop
pop
loopne
rolb
into
outsb
inc
mov
jle
cli
mov
jge
push
test
mov
xchg
sub
inc
ret
sbb
fnstenv
stos
add
inc
inc
arpl
push
pop
filds
sahf
cmc
push
popf
jo
sbb
adc
adc
mov
mov
dec
pop
test
pop
ljmp
pushf
arpl
mov
fidivl
into
mov
cmp
shr
pop
movsl
mov
sbb
xor
out
xchg
pop
insl
jg
aaa
push
cmp
cmp
mov
bound
iret
stc
test
add
adc
or
fsts
sub
andl
inc
cwtl
mov
sti
mov
lds
dec
dec
cli
ds
fs
inc
push
or
dec
mov
xor
mov
xchg
mov
popf
es
mov
pop
add
pop
mov
hlt
mov
andl
jp
sub
sahf
mov
add
movsl
and
sbb
push
int
out
xor
inc
cld
cltd
pusha
outsl
jne
sbb
push
add
insb
mov
ud0
push
inc
jg
or
mov
lds
ficoml
aad
fldt
stos
out
fadds
test
pop
cld
movsl
cmpsb
and
lret
or
aam
adc
pop
popf
aad
lods
mov
hlt
scas
idivb
sub
repz
pop
movb
push
cwtl
gs
leave
jmp
xchg
cmc
mov
or
cmp
leave
dec
xchg
jb
aam
push
inc
adc
scas
push
mov
int
into
divl
sub
out
nop
dec
in
dec
test
xchg
jg
sub
cmp
pop
sub
push
hlt
mov
inc
jns
adc
cmpsb
inc
loop
ror
push
xchg
jae
fisttpl
sbb
lock
out
pushf
out
mov
and
daa
xor
push
dec
push
dec
dec
inc
js
mov
int3
lods
mov
push
lods
pop
push
das
or
inc
lea
cli
push
aad
lret
xor
fildll
inc
int
jbe
imul
stos
and
add
stc
ja
aas
dec
insl
sbb
and
pop
testb
test
xchg
add
xchg
mov
push
shlb
or
fmul
sub
enter
xchg
in
test
mov
adc
test
dec
lods
xchg
stos
in
dec
sahf
stc
lcall
dec
aad
lea
dec
repnz
stos
sub
das
push
scas
sti
inc
mov
inc
fidivrl
jo
fs
jbe
and
add
movsb
jge
push
xchg
fdivrp
mov
imul
lods
sub
mov
cmp
cs
cmp
cmpsl
test
xor
and
or
mov
xchg
in
xor
test
mov
testl
dec
fdivr
inc
mov
dec
ret
into
movsl
mov
or
jns
andb
push
mov
ja
sub
out
push
rcrl
sbb
in
andb
inc
jnp
fcmove
push
fdivrs
push
jnp
mov
sbb
jp
movsl
leave
aad
in
pushf
es
jae
imul
adc
mov
inc
push
mov
sub
pop
jo
lock
sbb
pop
cmc
jmp
cmpsb
pop
fisttpl
sub
lahf
and
mov
dec
js
pop
movsb
jbe
outsb
dec
mov
pop
div
cmp
jnp
mov
sahf
ja
shlb
sub
lret
sti
fcoms
into
test
xor
lock
xlat
icebp
jle
jmp
loope
jecxz
dec
scas
inc
mov
movsb
insl
incb
lods
or
add
mov
jl
dec
repz
adc
fstps
mov
pop
lods
inc
shll
lock
sbb
movsb
inc
xchg
sbb
pop
xchg
xchg
les
sub
adc
mov
push
inc
fadd
in
enter
mov
dec
pusha
loop
dec
orl
call
aas
mov
bound
bnd
lock
loop
jns
jle
in
jo
push
or
mov
fists
mov
arpl
cs
push
lret
xchg
sub
pop
cmp
mov
addb
addb
adc
sub
shll
leave
dec
mov
sub
mov
jle
shlb
pop
jae
adc
mov
outsb
xor
cltd
aam
push
cmpsl
out
sbb
cmpsb
in
std
sub
pop
iret
or
dec
jno
test
xchg
out
mov
in
xor
xchg
mov
das
inc
pop
or
testl
rcl
lret
imul
or
mov
push
cmc
sbb
and
mov
jae,pn
fucom
lea
mov
inc
out
and
push
mov
fwait
push
aad
push
cwtl
negb
jb
addr16
and
inc
xchg
pusha
sub
pop
fisubrl
jge
fwait
jns
or
aad
out
dec
push
adc
in
outsl
push
daa
out
dec
mov
out
adc
mov
lret
adc
cli
or
int3
pushf
push
add
repz
jno
aas
ljmp
cmp
sub
scas
mov
mov
sbb
test
mov
fs
and
fidivl
mov
jo
mov
or
xchg
pop
jl
cmp
mov
scas
in
cmp
cmp
add
jnp
rorl
iret
cmpsl
sbb
cmpsb
ret
stos
mov
mov
bound
jnp
mov
inc
rorb
fwait
das
cld
movsl
outsb
aam
repz
sub
mov
jl
cwtl
mov
cmpsl
lock
inc
outsb
dec
rcl
sub
mov
pop
mov
pop
jns
inc
add
into
xchg
jle
xor
lock
mov
andb
cmpsb
aad
int3
addr16
popf
loope
shrb
in
addr16
xor
and
mov
orb
std
pop
push
sbb
jne
add
xchg
push
jmp
or
mov
dec
iret
mov
leave
sti
out
dec
pop
test
adc
test
xchg
cmp
jmp
cmpsb
xchg
push
adc
xor
inc
xlat
setne
gs
or
lahf
mov
push
sbb
mov
insb
jno
lcall
test
fsubrl
ja
movsb
loopne
push
loopne
lock
lret
popa
pop
mov
pop
outsl
push
jns
xor
repz
cmc
inc
cmpsl
push
das
iret
mov
inc
dec
lock
sbb
stos
sbb
pop
mov
call
pushf
cmc
or
in
mov
ret
gs
push
xchg
push
ret
sbb
cmc
inc
lret
push
cmpsb
cwtl
cmpsl
xor
cli
in
movb
xchg
push
sti
out
jnp
and
js
push
lcall
outsl
pop
inc
push
mov
push
icebp
adc
mov
xchg
pop
iret
xor
and
lock
dec
fiadds
scas
hlt
jg
xor
rol
inc
int
pop
ret
gs
imul
pop
sarl
or
js
xchg
jge
daa
dec
mov
repz
push
and
out
ss
ficoml
pop
fadds
popa
loop
rolb
adc
movsb
mov
std
gs
xlat
pop
inc
and
adc
stos
and
insl
pusha
in
mov
push
cmp
bound
or
movsb
pop
mov
mov
xchg
ja
jne
outsb
ficoml
into
insb
mov
mov
lea
push
mov
lea
pop
daa
and
xor
push
sbb
adc
test
add
imul
push
mov
into
cli
int3
pop
aam
lock
cmpsb
cli
stos
xchg
xor
add
decl
sub
jmp
insl
in
lea
imul
aas
cmp
xor
clc
loope
outsl
xchg
xchg
sbb
sub
insl
loope
jb
mull
cmpsb
cmp
gs
mov
out
mov
push
xchg
imul
adc
pop
push
add
test
sbb
push
jo
mov
icebp
stos
cmp
rcl
pop
mov
sbbb
sub
lret
scas
sub
hlt
inc
stc
add
adc
mov
mov
pop
popf
mov
cld
add
orb
test
call
jmp
add
popf
mov
test
add
fmull
mov
mov
xlat
arpl
aas
insl
or
lods
int
frstor
ss
pop
fbld
or
nop
mov
push
sub
lds
loopne
pop
add
sub
enter
adc
sbb
aad
cmp
stc
gs
sub
lods
cmp
dec
outsl
andb
jg
mov
fldln2
out
add
pop
jno
pop
test
cmp
dec
adc
test
or
popf
out
in
fisttpl
cmc
movsl
out
call
insl
mov
xchg
mov
and
sbb
int
sbb
jns
push
adc
lahf
inc
enter
or
jo
movsl
or
pop
test
mov
add
movsl
cmp
mov
inc
fs
pop
jmp
insb
add
ret
iret
call
jns
cld
in
push
mov
adc
mov
imulb
cmp
mov
mov
idivl
pop
daa
scas
ret
xchg
shll
je
mov
xor
xor
std
add
ljmp
inc
add
pop
lahf
sbb
subb
dec
sub
pop
lock
push
mov
pop
in
js
inc
into
leave
xor
and
xchg
outsl
fnsave
imul
sub
mov
xor
add
pop
insl
ds
xchg
mov
stc
xchg
adc
jmp
cli
xor
in
scas
cld
jecxz
inc
sub
jb
mov
imul
int
repnz
xchg
cli
in
mov
xchg
push
xchg
in
in
fcoml
xor
js
mov
mov
dec
inc
jae
mov
out
dec
sub
push
dec
ljmp
mov
pushf
sti
loopne
or
movsl
push
dec
adc
icebp
dec
or
xchg
push
imul
xchg
xor
adc
daa
aad
sub
mov
aam
jmp
xchg
jbe
jns
or
outsl
ljmp
xor
xor
sub
out
bound
test
sbb
mov
mov
pop
popa
mov
call
add
cmpsb
or
xchg
add
xor
jp,pn
push
lret
cs
mov
test
adcb
repz
sbb
mov
mov
clc
xor
pop
push
dec
outsb
flds
in
xchg
and
cmovl
leave
or
out
jge
ret
push
push
xchg
adc
aas
adc
push
clc
aad
xlat
cmp
push
lret
lahf
cld
out
jge
fistps
push
fdivs
pop
dec
xchg
fists
add
or
add
lret
xchg
cwtl
ret
out
out
roll
movsl
push
add
fmuls
outsb
fwait
adc
adc
hlt
add
cmp
enter
or
shrl
and
push
xchg
jl
out
in
rclb
jl
jmp
mov
in
push
movsl
jge
pop
scas
inc
mov
out
jle
mov
out
add
movsb
aaa
inc
cmp
lock
test
xor
seta
dec
testb
mov
sub
add
xchg
xchg
gs
or
clc
pop
pop
fldenv
mov
movsl
pop
sbb
jno
sub
stos
ds
sub
pop
aas
xchg
loop
mov
out
push
or
add
add
stc
xchg
fisubl
sub
sbb
dec
jbe
mov
pushf
outsb
dec
sbb
jae
in
sub
mov
lahf
sub
sub
xchg
rdpmc
cli
test
jb
cld
lahf
ja
dec
xchg
lock
mov
cmc
or
cmc
push
sub
subl
push
mov
xchg
jle
loope
cmp
mov
sub
pusha
jp
insb
jo
addb
mov
xchg
or
xor
xor
and
test
or
test
mov
jne
mov
ss
add
pop
sub
jnp
xchg
add
loopne
addr16
sub
push
mov
arpl
or
cmpsl
add
stos
jge
arpl
inc
lea
add
xlat
dec
adc
xchg
add
mov
addr16
psrlw
out
fcomps
xchg
push
mov
shll
mov
push
decb
push
adc
sbb
mov
adc
clc
fs
jmp
mov
jg
arpl
sbb
or
dec
inc
mov
sub
cmp
shll
pop
sar
and
jne
push
incb
xchg
inc
enter
clc
sbb
sbb
adc
jge
lock
lcall
mov
pop
mov
sub
sbb
cmpsb
mov
mov
or
iret
mov
mov
inc
jmp
adc
sub
clc
cmpsb
mov
jno
mov
xor
les
insl
xchg
pop
jecxz
andl
not
lods
push
pop
cmp
outsb
ljmp
inc
pop
std
leave
push
ljmp
andl
mov
data16
popf
jo
jl
add
out
mov
mov
cmpsl
je
rolb
clc
jnp
dec
pop
rcll
jnp
out
inc
jo
jecxz
dec
aaa
mov
mov
movsl
ss
lahf
rcr
add
push
sbb
jb
das
mov
nop
fs
mov
cmp
cmp
cmp
loopne
sarl
mov
xchg
sbb
rcll
pop
scas
loope
bound
sub
fsub
into
add
es
jo
add
adc
out
test
and
or
leave
pop
push
outsl
and
or
inc
enter
dec
rol
xor
mov
pop
pop
imul
pop
sub
pop
and
push
lds
or
pop
mov
cmp
mov
adc
lahf
sbb
inc
sbb
in
sbb
cwtl
mov
fadds
adc
mov
xchg
adc
mov
xlat
insb
rorl
push
jmp
jecxz
test
in
mov
fmuls
outsb
xchg
xor
ffree
mov
divl
je
ret
insb
lods
adc
lea
xchg
push
jle
xchg
aaa
and
rcl
enter
sub
sbb
loope
sbb
cmp
int
cli
inc
cmp
or
adc
push
push
sub
xor
imul
lahf
inc
hlt
loop
cld
lahf
les
mov
ficoml
pop
cmp
dec
push
enter
jmp
scas
mov
nop
cmp
int
push
xor
and
cmp
fistpll
shr
push
lods
and
mov
outsb
pop
xor
push
dec
push
mov
int3
int
dec
enter
mov
jo
and
test
cmpb
dec
pop
imul
xchg
mov
inc
cmp
sbb
push
xchg
sub
pop
inc
test
repnz
es
cmp
and
adc
call
icebp
in
js
mov
or
loope
cmp
sarl
cmpsb
icebp
xor
adcb
fsubp
stos
aam
jno
add
les
in
mov
mov
js
fnsave
push
xlat
loop
add
mov
ficompl
jne
pop
push
mov
lds
movsl
xchg
fstl
push
and
push
into
cmp
mulb
pop
imul
sub
addr16
mull
ljmp
fmull
fwait
sbb
xor
mov
cwtl
cmpb
test
mov
pop
test
cmp
add
dec
push
je
add
push
out
bound
adc
jle
ss
ret
lds
iret
in
es
pop
sbb
sahf
pop
out
cmpsb
sahf
push
xchg
mov
mov
insb
inc
out
and
jns
fcoml
jge
bound
xchg
mulb
and
rorb
jns
outsb
lahf
ds
mov
das
data16
stc
setne
pop
aas
movsb
inc
pop
mov
pop
sar
insl
sbb
in
pop
fstl
mov
call
jmp
cmc
push
jns
outsl
ljmp
adc
sbb
jg
inc
jmp
shr
nop
iret
jle
cltd
sbb
fcomip
cmp
inc
out
shll
js
jno
sarb
push
adc
xchg
int3
hlt
push
xchg
or
xor
mov
lret
imul
mov
dec
push
dec
sbb
data16
das
pop
repnz
idivb
mov
js
pop
nop
cli
in
das
mov
fnstsw
jae
xor
call
scas
aas
mov
pop
insb
out
push
push
fcmovnu
jae
into
mov
mov
inc
dec
push
jmp
sub
and
or
mov
ret
or
push
test
sbb
sub
dec
not
add
shlb
inc
cmpsb
and
das
pusha
outsl
mov
subl
dec
inc
mov
or
xchg
popa
gs
outsl
div
leave
test
and
test
xorb
mov
ficomps
sbb
inc
in
inc
into
jnp
cwtl
decb
jbe
sub
lods
xbegin
das
insl
test
test
pop
or
adc
lret
leave
pop
mov
jbe
adc
nop
popa
ds
fs
pop
inc
sbb
pop
jmp
or
std
push
and
jg
movsb
push
mov
ja
mov
daa
dec
fwait
mov
push
mov
lock
adc
add
lock
inc
mov
push
sbb
inc
loope
cmc
adc
fisttpl
fdivs
enter
dec
xor
cmp
clc
add
fistpl
stos
adc
jmp
repz
out
ss
popf
or
aam
sub
in
repnz
scas
mov
data16
iret
ficomps
jo
add
fwait
gs
jmp
lods
inc
lret
or
push
cmp
xor
sbbb
pop
pop
xor
rolb
outsb
jge
cmp
popf
push
lods
cs
cli
subb
push
bound
mov
and
xchg
xchg
inc
imul
pop
cmp
xchg
dec
push
mov
or
pusha
mov
mov
mov
je
push
pop
xlat
jbe
push
or
fsub
movsb
push
aad
xor
divb
mov
mov
std
cmp
and
test
cmpsl
add
cmp
movsl
dec
cmc
ja
push
loope,pt
or
mov
call
mov
adc
push
pop
add
into
lret
mov
outsb
aaa
popa
sahf
fnstsw
add
jns
gs
fisubs
jnp
pop
ljmp
in
inc
add
icebp
cwtl
out
lock
in
xchg
pop
dec
jl
xchg
clc
ds
push
mov
cmp
dec
add
mov
repnz
imul
push
in
ret
push
dec
dec
adc
ljmp
xchg
push
mov
outsb
or
xchg
sti
icebp
pop
dec
or
aas
mov
and
inc
into
or
ficoml
or
lods
jle
in
pop
sahf
outsl
jmp
pop
cmp
push
add
and
fwait
pop
jnp
in
mov
inc
popf
pop
pop
mov
jbe
out
mov
stc
in
cmpsb
adc
ljmp
mov
notb
aad
adc
fistps
xchg
loope
aam
jns
mov
pop
adc
je
mov
arpl
mov
add
adc
and
mov
xor
dec
pop
mov
mov
ds
jmp
cmp
xor
fdivrl
gs
xor
xchg
mov
mov
jle
out
fwait
test
mov
jmp
xchg
mov
call
xor
dec
in
inc
mov
outsb
mov
shll
loope
les
das
aad
and
cmp
xchg
sub
ret
stc
ret
cmp
aaa
cmp
and
pop
dec
test
xlat
push
cwtl
jb
std
jne
adc
loope
pop
jmp
leave
aad
xor
inc
sbb
mov
dec
adc
mov
and
insb
xchg
stos
das
insb
xor
imul
push
push
jbe
mov
or
or
mov
orb
inc
cmp
imul
ficomps
sbb
clc
stc
adc
sub
jmp
js
sub
pop
dec
sbb
mov
mov
insl
or
int
jns
dec
xchg
xchg
lea
inc
jb
loope
fldcw
daa
cmpsl
dec
and
pop
add
jbe
sub
in
cmp
add
neg
cmp
xchg
scas
aas
cwtl
inc
out
loopne
inc
mov
mov
loope
out
sub
nop
jecxz
pusha
data16
pop
and
ljmp
cmpl
mov
cmc
clc
mov
dec
adc
aad
cli
cmpb
mov
mov
push
pushf
push
and
int
inc
fs
sub
mov
ds
ja
mov
leave
test
xor
aas
cmp
out
loope
popa
push
mov
stos
ss
xor
icebp
fs
jae
lock
mov
call
xchg
jp
repz
sti
pop
pop
xor
mov
fistpll
cmpb
popf
outsb
out
push
loope
or
sbb
sub
mov
mov
and
gs
mov
gs
cmp
push
enter
xlat
sub
xor
jmp
shlb
mov
xchg
test
push
add
pop
dec
mov
or
jbe
out
pop
hlt
xchg
rclb
sub
cld
xchg
mov
adc
mov
imul
sbb
ret
adc
jl
add
xlat
pop
jnp
xchg
test
js
xor
xchg
jecxz
es
call
fs
insl
insb
pop
add
mov
pop
push
adc
xlat
out
xchg
jb
lahf
sbb
je
and
test
add
ret
rolb
jno
sub
into
push
fdivrs
and
les
inc
pop
jns
mov
scas
jge
sub
pusha
adc
leave
lds
cld
sbb
rolb
pop
xchg
std
ret
push
in
mov
mov
pop
mov
sub
cmp
stos
mov
jmp
and
jbe
inc
sbb
mov
gs
aas
outsl
cwtl
cli
push
sub
pop
mov
or
in
and
aaa
inc
aaa
mov
xchg
push
dec
bound
dec
ds
mov
es
imul
test
out
push
push
ljmp
loopne
inc
mov
jo
xchg
out
sbb
cwtl
fcoml
pop
je
ret
filds
addl
pushf
push
xchg
mov
test
jno
clc
popa
add
jb
sti
mov
sbb
and
lahf
pop
enter
add
flds
mov
xor
push
mov
pop
cmp
mov
lea
ds
or
mov
cmp
xchg
push
scas
inc
pop
test
pop
out
and
sbb
cmpsl
lds
aam
add
cmp
and
pop
or
lods
fs
and
dec
flds
and
mov
rcrb
outsb
push
pop
repz
pop
daa
xlat
ret
adc
dec
and
int
out
jbe
mov
adc
inc
adc
cld
adc
fs
lods
shll
ret
dec
mov
jle
xchg
mov
mov
mov
dec
mov
cmp
repz
push
sbbb
lods
ljmp
gs
enter
lea
es
or
push
lods
jnp
pop
sbb
lods
cmp
sbb
sbb
or
add
fildl
or
call
cmpsl
adc
mov
sbb
mov
je
xor
mov
addb
jge
lret
loopne
pop
ja
enter
pop
pop
loopne
dec
push
clc
xor
xchg
dec
shll
and
mov
xchg
mov
pop
fwait
push
dec
xlat
dec
push
fldenv
pop
fwait
aad
xchg
dec
stc
int
push
popa
sti
adcb
shll
dec
out
orl
push
mov
shl
test
stos
cmpsl
add
or
scas
scas
jmp
mov
in
dec
sub
das
push
aas
cmp
or
aam
mov
int3
inc
mov
sub
or
mov
jp
inc
mov
sub
jg
jns
push
adc
jge
cmp
xchg
xor
jecxz
in
inc
sub
outsb
lcall
sbb
lods
lret
faddl
rcl
mov
adc
insb
repz
jecxz
idiv
or
sbb
fsubrl
dec
add
mov
mov
mov
pop
add
xchg
push
or
aaa
sbb
test
add
stos
les
les
add
add
int
in
out
xor
xlat
xchg
insb
mov
sbb
testb
xchg
pop
xchg
movsb
mov
fnsave
sahf
jp
push
scas
sti
sbb
test
or
int3
lds
push
insb
je
fadds
cld
mov
repnz
mov
cmpl
dec
outsl
dec
lahf
mov
jns
lret
stc
mov
sti
mov
rolb
dec
cmc
adc
add
fsubrs
jmp
or
add
xchg
incl
and
and
pop
lret
pop
aad
in
sbbl
pop
or
dec
pop
fcomps
sarb
int
aad
js
in
in
rorb
popa
ret
inc
scas
adc
cmp
iret
pop
cld
out
repnz
mov
xor
jecxz
mov
add
mov
inc
out
ja
lret
dec
jae
rcl
inc
stos
aad
push
ret
or
iret
pushf
sbb
leave
fistpl
inc
fwait
push
add
xchg
mov
sub
jge
inc
sbb
aas
and
je
xchg
stc
xchg
stc
hlt
outsl
test
scas
sub
and
repnz
push
mov
sbb
sub
hlt
jns
je
ss
nop
push
mov
jg
sub
sbb
nop
jecxz
xchg
jl
mov
test
insb
xlat
es
push
dec
inc
cwtl
lcall
icebp
xlat
call
ljmp
adc
xchg
mull
push
or
pushl
jnp
iret
cltd
xchg
andb
push
cltd
scas
fisubl
xchg
and
int3
mov
adc
push
enter
mov
daa
add
iret
imul
lret
jge
add
mov
jno
lods
repz
push
and
mov
jmp
or
jbe
test
shlb
sbb
add
inc
ret
int
inc
dec
mov
and
push
pusha
inc
mov
adc
imul
sbb
in
cmpsb
fcomp
adc
das
call
mov
add
dec
filds
dec
xor
or
inc
push
js
push
mov
data16
out
push
xchg
dec
addr16
fildll
negb
sbb
push
pop
aam
sti
mov
popf
out
cmp
or
addb
adc
sahf
lahf
ss
lret
mov
outsl
mov
pop
push
push
out
sub
cmpsb
scas
mov
stos
adc
or
mov
add
test
int3
pop
repz
xor
je
lods
xlat
jae
add
adc
nop
dec
mov
mov
in
adc
cmp
xchg
mov
nop
icebp
in
dec
xlat
sbb
shr
xchg
pop
js
adc
cld
lods
dec
hlt
pop
or
in
sub
push
test
ljmp
jo
das
sub
sub
icebp
add
daa
push
arpl
sub
lahf
inc
or
xor
das
in
cmp
js
ror
or
xlat
je
and
lret
in
pop
mov
push
out
mov
outsb
jno
loope
inc
ret
int3
sub
insb
xchg
hlt
insb
lds
mov
cli
nop
outsl
mov
repnz
pop
ss
xchg
pop
add
mov
cmc
jns
dec
addl
stos
mov
or
lcall
les
daa
xchg
push
xlat
jbe
pop
sub
rcrb
in
hlt
dec
popa
inc
insl
xchg
sbb
xor
aam
mov
mov
cmp
leave
jecxz
sbb
inc
xorb
test
jle
mov
lods
or
in
in
cmp
jmp
mov
sbb
push
mov
and
cmp
enter
jae
pop
nop
enter
cltd
pop
fnsave
xchg
and
mov
sub
ljmp
jmp
pop
mov
sub
or
add
xor
inc
mov
pushf
inc
scas
xlat
in
push
cmp
dec
flds
inc
out
jge
bound
adc
or
dec
jae
cmp
cmpb
aaa
or
xor
scas
cmp
test
dec
push
push
adc
dec
jae
dec
push
adc
and
xor
js
jns
push
pop
inc
mov
out
fnsave
insb
sub
mov
push
cmp
mov
fwait
pop
mov
fbld
fnstcw
sbb
inc
jno
test
sbb
and
leave
icebp
push
sbb
mov
repnz
in
mov
jno
pop
mov
and
fistpll
dec
aad
out
je
pop
and
aas
pop
mov
rcrl
mov
push
scas
xchg
dec
push
mov
sub
and
dec
sbb
cmc
mov
xor
xor
and
and
fwait
push
push
shlb
adc
imul
push
push
lahf
dec
cmpsl
sbb
movsb
jmp
jl
mov
jnp
cmpsl
mov
pop
pop
lds
in
cmp
or
lods
leave
xchg
out
cmp
jl
cmp
das
jb
lods
or
ret
mov
jmp
add
sbb
fwait
outsl
incl
sbb
es
inc
pop
and
clc
jne
cmp
popf
popa
es
ja
movsl
cmp
sbbl
sbb
int
int3
mov
inc
sub
adc
sti
fstpl
je
dec
push
shr
pop
mov
bound
call
aaa
dec
int
add
shlb
adc
orb
ljmp
and
in
out
push
mov
dec
or
and
lahf
sarb
hlt
xor
and
imul
in
daa
punpcklwd
popa
cmp
xor
pop
xchg
mov
les
or
jle
cld
in
sar
inc
push
outsl
lret
loope
xchg
cmp
lsl
out
popf
and
jg
and
push
sbb
sbbb
pop
std
int
shlb
cmp
mov
push
fstpt
movsl
andb
mov
add
sbb
mov
xchg
cmpsl
adc
out
je
push
mov
cwtl
sahf
xchg
mov
xlat
cld
cwtl
lea
testb
fstps
dec
data16
insb
mov
jle
andb
cmp
mov
mov
insb
cmp
cmp
sbb
bound
int
pusha
aam
mov
jle
push
fimuls
std
pop
and
cltd
cmp
jle
cmp
add
pop
adc
sub
cmp
ret
sbb
fmuls
and
dec
jo
cmp
cli
or
jne
push
aad
jl
ficompl
in
pop
ret
ror
lock
xchg
out
int3
push
rorl
and
pop
outsb
push
pop
in
notb
out
das
test
mov
and
mov
push
jle
outsb
ret
ja
fwait
pusha
nop
inc
outsb
popf
jb
repz
test
iret
pusha
scas
ret
fisttps
xchg
fwait
jge
pusha
and
pop
sub
gs
mov
sahf
clc
xor
pinsrw
pushf
or
dec
push
fistpll
lock
or
inc
sbb
ss
pop
int3
lds
adc
xor
int
dec
nop
out
xchg
lcall
dec
sub
dec
popa
mov
cmpsb
sahf
xor
fimuls
mov
xchg
packssdw
enter
sbb
pop
push
loope
pop
fs
sub
in
adc
pop
mov
pop
sub
mov
fdivrs
cli
js
mov
mov
imul
icebp
imul
fidivrl
pop
addl
xlat
inc
repnz
stos
fwait
mov
rcll
fwait
xchg
and
jns
movsb
jle
mov
sbb
add
pop
sbb
lods
addr16
and
mov
mov
lock
inc
and
xor
push
mov
jae
jge
pop
loop
enter
mov
subb
dec
mov
les
ret
ret
add
loope
sarw
ret
std
sbb
inc
popf
jle
xchg
dec
jg
lods
dec
jmp
add
mov
dec
inc
fsubs
mov
mov
inc
in
aaa
sbb
mov
jbe
js
mov
mov
out
xorb
adcb
or
jbe
cwtl
std
jnp
jp
mov
add
xor
movsb
pop
jnp
test
jmp
into
insl
imul
push
pop
stos
pusha
ss
aad
shlw
int
or
dec
les
inc
adc
mov
dec
xor
rol
mov
push
dec
in
add
or
jl
lahf
mov
movsb
adc
jge
xchg
pop
push
adcb
out
jmp
dec
loopne
dec
cmp
jle
push
lret
sbbl
push
or
fsubrl
out
ss
dec
stos
sti
or
jno
xchg
dec
pop
dec
int3
cli
jb
mov
inc
pop
iret
xor
ret
stos
push
sbb
movsb
cmp
fstpt
subl
pop
lods
test
sbb
dec
ret
or
scas
xchg
add
ljmp
xor
aam
daa
leave
and
push
fnstsw
jo
imul
jecxz
jg
cmp
lcall
xchg
pop
clc
lds
xor
cltd
movsb
out
or
push
ret
adc
xchg
inc
pop
sbb
int3
push
nop
mov
cmc
dec
aad
push
xchg
xchg
jmp
into
orl
push
mov
lods
movsb
std
or
out
jbe
dec
add
mov
sbb
dec
in
aas
ret
jae
dec
enter
test
jge
fcmovnu
push
pop
inc
mov
push
scas
adcl
fdivrs
lods
cmp
sbb
and
call
aam
lret
cmp
cmp
xchg
xlat
loope
lret
dec
loop
mov
movsl
lahf
lods
pop
push
or
mov
jne
and
jne
and
stos
lret
sub
mov
popf
xchg
pop
js
pop
lcall
das
sub
loope
rcrb
jo
xor
jne
data16
dec
inc
xor
cmc
push
outsl
cmp
xor
push
jae
xchg
es
sub
push
es
push
mov
je
or
mov
addb
add
xor
addl
pushl
sub
pop
jo
pop
orb
ja
mov
popa
sub
roll
push
clc
iret
inc
dec
gs
out
mov
add
in
jns
pop
insb
repnz
arpl
adc
xor
xor
ret
outsl
sbb
ficoml
adc
mov
stos
rcr
cmp
pop
mov
mov
pop
sbb
jno
mov
scas
add
lahf
xchg
es
mov
dec
ret
addl
adc
mov
adc
pop
xor
out
stos
adc
scas
dec
xchg
fs
lahf
cmpsl
lcall
add
aaa
lds
xchg
out
pop
mov
fisttpl
mov
and
push
fwait
pop
loope
jp
jbe
mov
cltd
push
gs
adc
xlat
and
sbb
xchg
fsubs
dec
pop
enter
scas
cmpsb
xchg
mov
lret
jecxz
shll
jno
sbb
xchg
fcomp
loopne
testb
fs
push
push
repnz
mov
mov
jle
and
adc
inc
jnp
pop
in
jnp
inc
inc
jns
rol
pop
inc
adc
bound
rcl
mov
imul
or
push
das
test
les
jae
cmp
sbb
movsb
pop
out
insb
inc
adc
xchg
push
mov
shll
jb
push
mov
push
out
push
jno
adc
outsl
dec
out
sbb
fadds
in
cmp
xlat
shrl
cmp
mov
mov
or
cmp
pop
push
sbb
mov
insl
push
push
scas
cmp
ss
in
jmp
cmpsb
mov
jo
mov
adcl
xchg
out
sub
scas
fcmovu
xchg
inc
idivb
mov
xor
mov
push
jno
ljmp
xlat
jl
scas
in
repz
dec
inc
inc
add
faddl
mov
fcomi
subb
hlt
adc
es
xchg
in
adc
pop
nop
in
mov
mov
movsl
lret
jae
or
movsl
sti
ss
aas
out
lahf
stos
in
xchg
outsl
dec
xchg
hlt
add
add
shll
movsl
sbb
lds
jge
bound
sbb
ja
pushf
outsl
bound
jns
or
in
pop
add
cli
ror
mov
in
jbe
arpl
arpl
shll
lods
ficompl
and
cmp
jle
imul
and
imul
mov
xchg
jg
lods
out
sub
loopne
pop
push
mov
mov
jo
jmp
ret
das
jnp
ret
inc
add
cltd
fwait
inc
std
dec
fimull
mov
xchg
repz
insl
lock
sub
out
hlt
mov
jbe
js
adc
add
jno
ss
movsb
imul
mov
stos
out
jae
sbb
imul
cmp
dec
sbb
ds
inc
xchg
dec
popa
rcll
jp
add
jge
push
push
push
mov
shlb
xchg
aaa
push
scas
pop
mov
xor
leave
adc
lahf
clc
sbb
inc
orb
divb
push
push
outsl
cmp
int
mov
pop
push
sbb
daa
pop
and
pop
jge
sub
scas
popf
sbbb
xchg
mov
mov
pop
fbld
push
fst
pop
inc
mov
rolb
fs
push
lahf
lret
sbb
sub
mov
inc
lcall
mov
ficompl
sub
sub
push
ret
and
mul
pusha
cmp
xchg
out
sarb
iret
filds
mov
or
test
ja
add
lock
fs
cmpsb
add
push
shll
mov
mov
pushf
pop
add
dec
jnp
int3
loope
dec
push
lods
int3
jb
mov
mov
in
mov
outsb
rcl
fsubs
sbb
inc
repnz
lock
adc
shl
sbb
inc
or
lods
out
mov
lret
push
add
jl
in
xor
jb
movb
mov
add
xchg
xchg
push
adc
dec
cmp
jns
repz
inc
jns
pushf
ljmp
in
es
xor
ret
xor
mov
mov
xor
inc
add
or
jp
popf
stos
lock
fsubrl
and
bound
aad
stc
das
inc
iret
mov
cmp
jae
das
push
xchg
pop
repz
stos
xor
xlat
xor
sbbl
push
dec
int3
test
jne
fidivrl
mov
xor
in
hlt
rcr
fcompl
gs
sub
mov
imul
pushf
sub
cmp
inc
loopne
and
jge
sub
cli
sub
adc
lcall
xor
cmp
mov
mov
into
add
push
mov
and
and
mov
loope
cmpsb
popf
cli
aam
add
std
pop
mov
int3
shll
jo
xchg
ja
test
rcrl
movsb
xchg
js
jg
sbb
cmp
loop
inc
sbb
push
ja
outsb
sbb
mov
xchg
pushf
hlt
pop
xchg
sub
push
in
mov
enter
lret
mov
and
into
sbb
xorl
sbb
pusha
aaa
loop
cmpsl
mov
jge
ret
sub
idivb
cmp
push
in
negb
dec
adc
mov
aad
cli
inc
or
push
xchg
dec
repz
cmpsl
xchg
mov
and
pop
shll
add
iret
fwait
and
lods
dec
mov
adc
decb
cmpl
mov
pop
jno
popf
adc
add
js
dec
push
daa
adc
loopnew
shr
sbb
pop
lods
fmulp
lret
xchg
jp
xchg
push
sbb
xchg
mov
mov
cmp
mov
repz
and
mov
ficoms
xchg
add
cs
mov
and
adc
jle
lcall
cmc
cmpb
movsl
imul
daa
enter
test
jbe
inc
das
movsb
lea
cmp
jecxz
mov
mov
not
mov
bound
mov
mov
adc
loopne
xor
sti
adc
and
push
adc
jl
and
in
lea
mov
inc
adc
scas
pop
icebp
jmp
popa
xor
add
push
ret
stos
xlat
rolb
insl
aas
daa
pushf
xor
daa
int3
adc
push
aaa
movl
jnp
hlt
jns
xor
add
push
fwait
test
jbe
mov
adc
sbb
mov
jle
mov
ret
cmc
inc
lods
push
fucomp
addb
pop
xchg
enter
xchg
inc
mov
push
or
adc
cmp
lods
push
mov
adc
jecxz
push
lret
ret
je
cmpl
repz
xchg
jge
fs
lret
pop
sub
mov
push
push
movl
add
cmp
sub
fidivs
or
fmulp
lahf
stc
out
test
jle
jns
push
mov
and
mov
sub
xchg
cmc
mov
shll
out
mov
inc
xlat
arpl
incl
test
inc
inc
dec
jmp
in
xor
adc
pop
push
add
lea
sub
call
stos
lahf
sbb
mov
pop
xchg
xor
out
adc
roll
add
out
mov
mov
cmp
and
mov
pop
dec
sub
movsb
fwait
test
int3
cmp
leave
and
cmpsl
pop
cmpsl
sarb
add
pop
in
pop
neg
or
dec
cmc
movsb
dec
out
fwait
ljmp
stos
mov
ja
mov
dec
pop
push
pop
pop
pop
ret
mov
xchg
jecxz
push
nop
nop
jl
mov
cwtl
sub
jne
pop
gs
jns
divb
dec
arpl
outsl
stc
mov
sbb
jp
shrl
roll
or
jo
xchg
out
jp
flds
fdivrl
fsub
or
fildl
test
icebp
adc
cmpsb
xor
mov
jg
cltd
xchg
std
mov
push
rcrl
popa
jae
in
aaa
in
xchg
push
xor
mov
aaa
mulb
sbb
fcmovne
fwait
out
inc
push
movsl
ud0
push
xlat
loop
xchg
lock
fcoml
scas
js
or
ds
sahf
enter
rol
xchg
dec
xor
push
icebp
mov
shrl
std
imul
lcall
jle
into
xchg
popf
je
sub
jnp
or
outsb
xor
mov
push
aam
dec
pop
jb
jae
mov
loope
popf
xchg
mov
adc
cmp
pushf
mov
jle
xchg
sbb
sbb
add
dec
popf
cmpsl
add
lahf
cmc
mov
jle
cmp
sbb
xchg
mov
dec
mov
ret
xor
mov
lahf
jae
sub
negb
rcl
popf
sbb
push
cmp
scas
cmp
sub
adc
imul
xchg
inc
inc
mov
cs
push
adc
sbb
pop
rorl
ja
cld
mov
pop
sub
jnp
dec
hlt
pushf
mov
add
ficompl
addb
fucompp
lahf
jo
scas
pushl
adc
or
push
xor
repnz
pop
nop
dec
lahf
test
pop
sub
cwtl
push
jge
push
clc
shll
xchg
xor
aaa
pop
lods
pop
push
imul
jne
cmp
add
lea
clc
call
decb
int3
aad
sbb
lcall
sbb
shll
dec
push
icebp
in
popf
adc
flds
xor
dec
ljmp
or
scas
inc
and
inc
neg
test
sbb
and
xchg
inc
push
pop
cmpsl
cltd
cmp
notb
jge
in
ds
cmp
fnstenv
dec
jmp
pop
mov
pop
inc
insl
mov
adc
arpl
push
jno
sti
les
mov
mov
pop
les
sbb
sbb
mov
lock
and
xor
subl
js
mov
mov
sti
pushl
jno
mov
push
cmp
mov
and
in
add
rcrb
cmp
mov
or
xor
shrl
sbb
adc
sbb
lds
adc
js
fdivrs
sbb
mov
mov
jbe
dec
popf
insb
js
ret
popf
rorb
xchg
lahf
ds
ficompl
aas
mov
inc
push
sbb
in
and
enter
push
ds
clc
cvttps2pi
stc
jg
mov
mov
xor
pop
cmp
push
push
cmp
add
cltd
xor
adc
enter
scas
mov
or
call
cmp
scas
movsl
popa
out
lret
aas
and
popa
fidivrs
and
out
roll
aas
in
dec
inc
mov
gs
mov
fimuls
cwtl
push
mov
xlat
mov
dec
cwtl
push
ljmp
nop
xchg
aam
test
fsubl
cli
ja
xor
std
jo
das
mov
vxorps
cwtl
lahf
rcr
lahf
lock
push
outsl
mov
jl
test
fistps
sar
ror
scas
sbb
cltd
fnstsw
sub
jp
out
pusha
lea
sbbl
and
push
fs
repnz
call
jnp
adc
testl
adc
repz
adc
out
icebp
inc
je
mov
in
xor
clc
or
jecxz
sub
push
pop
and
cmp
into
fisubrl
ljmp
cmpsl
and
jo
jnp
aam
insl
sti
or
cltd
addr16
or
or
cwtl
dec
xchg
inc
xchg
outsb
mov
adc
jo
dec
int
pop
adc
mov
mov
push
dec
pop
bound
sbb
aas
xor
jae
adc
mov
push
push
mov
lods
cmp
movsb
jmp
dec
add
pop
repz
ja
cld
pop
pop
xchg
dec
outsl
xor
dec
fsubrl
dec
cmp
and
jo
lea
enter
xor
and
repnz
pushf
out
pop
test
mov
inc
cltd
push
mov
ret
xor
mov
test
push
call
fcoml
xor
insb
shrl
pop
mov
jb
loop
das
pushf
lock
cld
mov
push
cmp
mov
jmp
sbb
lock
lcall
in
xchg
xchg
cld
rcr
addps
cld
dec
add
jmp
cli
cmp
adc
push
mov
inc
xchg
hlt
mov
xchg
insb
pop
aas
sbb
stc
out
std
lds
push
adc
icebp
popf
cmp
ret
int3
rol
ss
push
gs
push
cmp
jb
mov
mov
mov
adc
lods
push
fnstsw
mov
and
pop
insl
lret
in
aam
mov
ret
pusha
aad
cmp
push
scas
sbb
cwtl
int3
cli
sbb
in
outsl
mov
bnd
lahf
repz
push
dec
ret
mov
cmp
xchg
cmpsb
dec
sub
push
push
xchg
cmc
sub
jns
sub
ljmp
call
mov
push
shrb
or
mov
rcll
stc
clc
mov
and
pop
jne
mov
fbld
js
scas
lock
mov
push
pop
or
dec
push
xor
dec
inc
insb
into
sbb
pop
bound
cmp
sbb
xchg
mov
jge
clc
jae
jae
sub
jmp
pop
lret
dec
dec
mov
mov
cmp
jo
mov
in
inc
subb
mov
jle
sub
nop
cli
rorb
mov
imul
jb
scas
sar
cmp
les
scas
sub
in
cmp
mov
cmpsl
aas
call
cmp
stos
lret
xchg
stos
dec
daa
inc
and
lret
mov
sbb
bound
mov
push
stos
dec
fld
iret
test
and
xchg
ret
mov
xchg
mov
mov
shlb
mov
mov
ret
in
imul
rorb
jae
les
sarb
push
xchg
and
iret
fdivl
hlt
pop
in
roll
test
addb
sbb
mov
xor
je
dec
fdivrp
dec
inc
add
ret
shlb
xchg
into
sub
out
shrb
in
jge
push
pop
add
mov
lret
and
fnstsw
dec
mov
sub
out
push
xchg
or
out
xchg
shlb
and
mov
xor
inc
and
repnz
test
add
and
lret
ret
inc
cwtl
xlat
rcr
in
inc
adc
sti
adc
orb
mov
in
xchg
test
leave
outsb
add
fisubrl
pop
fimull
sub
mov
or
jo
pop
pusha
inc
insl
shl
stos
jno
das
inc
stos
sbb
jne
in
inc
rorl
sbb
inc
push
aas
fs
pop
mov
call
gs
je,pt
out
fistps
jmp
push
daa
mov
enter
repnz
or
sub
jmp
arpl
imul
fdiv
sub
addr16
lcall
repz
sahf
incb
sbb
comiss
xor
ret
add
inc
dec
lods
dec
movlps
inc
mov
rorb
pop
cwtl
mov
call
lahf
mov
or
add
dec
insl
testl
adc
push
xorb
jge
mov
popa
sbb
pusha
in
push
outsb
and
movsb
arpl
test
fadds
pop
aas
mov
movsb
jns
and
loopne
not
jp
sub
jg
cmp
pushf
rcrl
pop
nop
jp
lods
loope
jne
and
sbb
scas
aaa
outsb
rep
rcll
popf
int3
sahf
dec
test
dec
call
cs
jle
mov
mov
lahf
sbb
ds
pop
lock
daa
std
cs
test
bound
andl
imul
cmpsl
dec
dec
lahf
test
idivb
push
pushf
orps
es
aam
int3
in
mov
cltd
push
insb
sbb
test
fnop
cmpsl
and
adc
xor
xchg
test
push
lods
xchg
cmp
shlb
addl
lahf
fucom
pop
jg
arpl
pop
rolb
stos
iret
dec
jae
push
mov
push
aad
mov
adc
xor
xchg
data16
pop
mov
aad
lods
addr16
les
xchg
out
paddw
aad
sbb
add
sbb
cld
add
pop
shlw
mov
ss
stos
hlt
imul
mov
inc
xchg
loopne
jecxz
out
mov
imul
into
mov
pusha
pop
fimull
jae
pop
pop
adc
pop
push
je
mov
sub
dec
push
sub
push
push
popf
cmpsl
pop
ljmp
pop
sahf
pop
push
wrmsr
sti
mov
sub
mov
and
sub
nop
arpl
addb
nop
cwtl
pop
lea
sub
ret
jno
lahf
sub
add
jo
adc
insl
sub
mov
add
idivb
lods
and
and
movsl
mov
and
mov
int3
pushf
xor
addl
mov
int
movsl
xor
and
std
ret
leave
insl
or
into
push
dec
stos
sbb
ret
sub
rorb
mov
sub
add
add
leave
psrlw
cmp
mov
out
dec
aam
insl
mov
movsl
sub
jb
sbb
sub
mov
call
add
ret
mov
or
mov
push
push
xor
lds
int3
hlt
sahf
pop
ds
lock
outsl
in
pop
rclb
and
xor
out
sbb
push
or
aaa
rclb
mov
adc
shrl
jecxz
fisttps
mov
lds
sub
icebp
ret
or
out
inc
bound
sbb
xor
or
ljmp
mov
lcall
push
mov
mov
lret
rcrb
xchg
sub
xchg
rcrb
repnz
ret
sub
or
ret
and
lods
mov
xlat
out
cltd
sbb
jno
mov
inc
cwtl
adc
std
daa
out
push
iret
or
cltd
add
jmp
inc
pushf
add
jp
xchg
inc
out
arpl
sbbb
shrl
cs
push
cmpl
sub
push
nop
xchg
xor
test
js
sahf
inc
jnp
in
scas
pop
mov
add
in
iret
hlt
mov
inc
lods
sbb
mov
cmp
sub
xchg
js
inc
dec
popf
femms
adc
push
movsb
jge
imul
xchg
jmp
mov
inc
jp
xchg
movsb
push
clc
lret
mov
inc
push
insb
mov
sub
cmpsb
xchg
or
rcrl
pop
mov
ret
les
pusha
notl
adc
xchg
subl
fstpt
insl
mov
cmp
jle,pt
es
xchg
or
sbb
and
sarb
xchg
push
or
cli
aad
dec
test
js
sbb
xchg
push
sub
xor
ret
xor
pusha
dec
int
fcompl
insb
imul
orl
inc
mov
ss
mov
orb
inc
test
ror
push
lods
inc
gs
leave
lret
insb
test
add
xchg
inc
lret
sbb
push
cwtl
inc
mov
scas
cmp
dec
out
jecxz
pop
pushf
push
xor
mov
xor
mov
addl
cmp
sbb
lret
push
xchg
adc
jbe
or
push
jo
add
xor
inc
fmul
xchg
pop
outsl
fidivs
mov
adc
xchg
stos
shlb
and
lret
in
scas
jne
insl
fidivrs
cltd
sub
add
add
imul
repz
mov
cmp
rcll
fs
mov
sub
imul
xor
out
aam
ret
test
pushf
dec
mov
sbb
ret
mov
inc
or
lcall
or
sti
gs
or
pop
mov
or
cmp
fs
mov
scas
jmp
pop
lods
repz
mov
cmp
dec
dec
inc
sarb
sbb
add
lea
inc
push
fdivl
xchg
imull
mov
scas
mov
scas
pop
cltd
pusha
imul
inc
xor
mov
push
cmp
je
addr16
lret
ficompl
lret
fwait
and
jb
popa
out
pop
xor
adc
jmp
lcall
pop
adc
jns
leave
push
sbb
lods
mov
cmp
scas
ss
lahf
test
cmp
xor
jae
movsb
insl
jbe
fs
dec
dec
jp
xor
cmp
call
shrl
mov
adc
out
loopne
les
clc
ficompl
pop
jbe
clc
push
sub
jl
push
pop
push
lahf
test
push
test
imul
out
sbb
lock
cwtl
jecxz
ja
mov
mov
ljmp
or
aam
int3
fisubrl
out
aaa
mov
vmovaps
inc
pop
dec
jae
fldl
inc
mov
movsl
jne
loope
push
mov
pushf
cwtl
data16
in
mov
movsl
arpl
jg
xor
divl
cmpsl
or
outsl
sbbl
in
mov
cmp
fldenv
cmpsl
jp
sbb
aam
sbb
mov
push
inc
loope
fwait
pop
push
mov
xchg
fiadds
sub
mov
int3
icebp
mov
jle
inc
out
pop
cmp
loope
ds
mov
add
or
inc
iret
cld
push
iret
int
push
cmp
addl
das
fisubrl
push
mov
cmpsl
sti
outsl
in
arpl
xchg
int
sahf
sub
add
jne
in
mov
cmp
lret
and
push
addr16
and
nop
cmp
and
imul
cs
adc
and
xor
jecxz
addr16
movsb
xchg
or
gs
inc
dec
adc
ficomps
jne
xchg
repnz
pop
pop
pusha
cltd
and
lds
gs
shlb
loope
add
aad
cld
and
mov
sub
inc
movl
shrl
inc
mov
adc
outsb
jnp
insl
inc
gs
gs
hlt
mov
add
xchg
mov
data16
arpl
leave
dec
cmpsl
inc
imull
lock
xor
outsb
out
movsl
jmp
cltd
mov
cwtl
int3
xchg
sub
xor
mov
les
adc
bound
mov
insb
divl
int
insl
stos
push
mov
inc
pop
popf
filds
data16
mov
insb
into
ds
mov
inc
sbb
pushf
pop
outsl
and
icebp
jno
xor
scas
in
jne
mov
lds
test
cmp
sbb
pop
dec
pusha
fwait
out
add
add
test
inc
ss
and
push
insb
inc
xor
dec
push
inc
dec
sub
dec
shl
popf
and
out
mov
inc
scas
mov
sub
cld
fwait
pushf
cmpsb
cmp
dec
leave
inc
dec
push
loopne
xchg
cmpsb
jle
call
rcrb
iret
popa
ffreep
jmp
fisubs
lret
int3
push
pop
mov
mov
pushf
cltd
shll
loope
add
mov
push
adc
pop
cmp
neg
fldcw
imul
in
push
clc
cwtl
xchg
aaa
aad
ja
fldt
les
testl
sub
jl
cmpsb
in
jle
pop
in
xor
mov
ficomps
cmp
mov
mov
iret
stos
adc
fwait
movsb
test
inc
out
mulb
insb
pop
imul
mov
out
test
jae
imul
in
xor
inc
and
popa
add
pop
jmp
xor
test
push
mov
inc
and
jmp
stc
out
enter
jnp
leave
leave
xchg
pop
and
mov
fnstcw
repz
lods
mov
jge
das
movsl
mov
ss
mov
iret
hlt
and
pop
inc
outsb
add
and
int3
jns
ja
cld
jnp
jmp
cwtl
mov
adcb
cmp
mov
fucomip
push
or
scas
test
popl
cs
and
pop
add
xchg
fiadds
popa
mov
pop
mov
push
pusha
cwtl
ret
inc
sbb
mov
shll
pop
dec
or
pop
stos
dec
sub
sub
dec
cmp
data16
stos
int3
push
and
repnz
mov
lcall
jge
pop
sub
cmc
lods
jnp
lods
xchg
rolb
mov
push
popa
rclb
mov
lock
call
popa
jne
mov
sub
out
pop
sub
xchg
or
clc
aas
mov
fcoms
cltd
fistpl
inc
pop
cmp
gs
and
scas
mov
xchg
xchg
js
mov
inc
push
lret
fs
ss
shrl
push
push
lock
adc
das
xor
insl
mov
jns
dec
scas
repnz
fstl
rclb
fcmovnb
ljmp
push
or
or
dec
pop
cld
in
dec
rcrb
cmp
leave
ja
jecxz
loop
push
repz
outsb
inc
mov
popf
lret
pop
ret
inc
call
orl
or
es
arpl
into
push
gs
sbb
dec
jne
sbb
out
into
and
hlt
popa
cld
out
push
and
xor
shll
mov
xor
xchg
loopne
cmc
xor
jle
nop
sbb
int
and
pop
in
and
fwait
std
push
xchg
out
mov
test
fst
adc
in
insl
push
enter
gs
loope
pop
add
movsb
mov
pushw
mov
out
xchg
aas
push
cmp
aad
push
inc
xor
inc
cwtl
ret
or
movsb
dec
das
ss
xor
faddl
clc
push
pop
hlt
into
push
push
sub
addr16
add
push
cmp
mov
icebp
push
add
push
jns
mov
mov
sbb
gs
hlt
test
inc
push
in
push
cmp
xchg
nop
xchg
mov
gs
jmp
lret
dec
sbb
iret
pop
mov
and
xchg
fildll
xchg
dec
lcall
aad
int3
push
movsb
pop
pushf
addr16
mov
jne
mov
adc
fsubrs
adc
pop
icebp
loop
xchg
inc
pushf
addr16
sbb
lock
sub
adc
push
mov
inc
call
sub
dec
push
or
push
lds
or
rol
lds
sbb
scas
fucomi
push
or
rol
repnz
jmp
or
out
xor
inc
mov
stos
adc
xchg
pop
and
inc
iret
cld
mov
inc
mov
sub
pop
cltd
ror
lock
jecxz
fs
mov
addr16
orl
popf
mov
push
sbb
or
lds
and
pop
lea
roll
andl
mov
cmc
lret
insl
call
xchg
icebp
or
pop
or
dec
cmp
sbb
or
ret
aas
lock
in
stc
adc
mov
mov
adc
mov
xorb
xor
test
rcl
in
push
mov
addl
mov
sub
les
testb
jae
rorl
repz
cltd
imul
pushf
subb
and
dec
movsb
js
dec
stos
adc
fmul
add
jl
mov
mov
bound
mov
fnsave
push
and
gs
cli
mov
fisttpl
inc
cli
in
popf
pop
jmp
and
in
push
mov
leave
lods
sbb
popf
push
pop
and
subl
repz
dec
dec
loopne
jg
jns
sub
push
xchg
add
repnz
cmpsl
mov
pop
leave
mov
inc
ljmp
imul
outsb
mov
fmull
pop
inc
sub
add
imul
jnp
jb
jae
jg
sbb
push
mov
mov
push
push
out
cmp
xchg
xor
ljmp
push
jo
fwait
arpl
jle
fdivs
mov
stc
push
aas
pop
scas
loop
xor
fmuls
loope
mov
rcrb
jno
cltd
enter
cltd
jne
fprem1
cmp
call
sub
movsb
aad
and
movsb
ds
icebp
inc
cli
clc
mov
test
jb
jle
mov
adc
hlt
stos
popa
sbb
outsb
push
jle
dec
repnz
orl
mov
mov
clc
mov
mov
test
stos
dec
or
stos
mov
jno
dec
push
mov
pushf
pop
ds
scas
cwtl
push
adc
bsr
repz
stos
imul
decl
sarb
or
dec
pop
out
jge
push
push
push
lea
std
pop
jne
js
push
dec
jmp
push
jmp
bound
jmp
addr16
out
ja
jno
add
jb
ds
call
pop
fcmovu
or
or
pop
test
mov
imulb
mov
ret
popf
insb
int3
pop
insl
or
cmp
xchg
lret
mov
add
stos
addr16
sub
stos
pusha
mov
fs
adc
leave
aad
iret
fs
inc
jae
clc
add
xchg
jp
adc
mov
sbb
sub
jo
jno
jns
repz
xor
push
das
cmpsl
jb
mov
imulb
nop
int3
fdivp
push
in
fdivp
mul
insb
mov
and
and
xchg
xchg
hlt
push
pop
sbb
sub
sbb
jp
sbb
mov
push
fstl
mov
fnstenv
jnp
sub
popf
and
pop
jecxz
sbb
loope
pop
jno
xchg
stos
pop
shrb
test
insb
cmp
loope
xor
pop
jle
movsb
rolb
sub
incb
mov
es
sbb
out
cmp
push
mov
lods
leave
nop
test
loope
mov
inc
les
cli
adc
xor
sbb
dec
rcll
cmp
xchg
les
and
addb
mov
leave
mov
adc
fwait
xor
xor
xor
push
stos
mov
mov
adc
push
sbb
sbb
dec
push
pop
js
push
add
addr16
or
add
outsl
movsb
out
aaa
lods
dec
insb
je
ret
aad
shll
lods
es
fsts
jnp
mov
fs
xchg
add
mov
pop
pop
xchg
scas
sar
aas
aad
andb
pop
movsb
dec
fisttpl
or
xchg
jp
xor
mov
cwtl
jmp
xchg
cmpb
aas
hlt
and
pop
mov
je
addl
xorb
decl
pushf
les
pop
pop
cmc
adc
mov
in
js
push
dec
add
mov
jne
cmc
scas
and
inc
mov
sarb
mov
jp
sub
out
mull
sbb
cwtl
je
adc
or
jl
push
dec
aam
cmp
mov
dec
popf
dec
dec
sub
add
mov
cli
sub
test
mov
ffree
cmpsl
iret
out
stc
adc
mov
jmp
adc
jg
andl
test
dec
imul
idiv
std
cmpsb
mov
jnp
dec
mov
sub
fsqrt
scas
add
pop
andl
outsl
xchg
repz
mov
icebp
xor
jge,pn
mov
pop
scas
mov
push
inc
push
pop
mov
push
xor
les
push
push
aam
test
out
dec
dec
negw
add
lea
sahf
xor
jecxz
jecxz
lock
pop
and
int3
idivl
cmpsl
call
pop
and
rep
stos
add
fwait
out
sub
out
mov
loop
sub
lds
or
jg
mov
xchg
dec
data16
adc
data16
jo
xchg
pop
lods
pop
inc
push
popa
ds
or
jle
insl
lods
pop
or
push
sbb
jmp
in
ljmp
clc
leave
xor
xor
mov
pop
ja
adc
mov
fstpt
iret
push
adc
filds
jb
xor
jbe
mov
add
dec
lret
inc
mov
fimull
sbb
push
xchg
repz
mov
push
mov
rol
movsl
mov
xchg
cmp
dec
dec
stc
dec
test
das
jmp
dec
hlt
loope
movsl
sbb
mov
or
jae
jge
lret
scas
movsb
int3
inc
movsl
sarl
xchg
daa
cmpsb
mov
push
sbb
xor
add
lahf
ss
out
mov
ljmp
cmpsl
outsl
add
mov
pop
push
sub
popf
jne
mov
inc
mov
mov
in
or
incl
and
push
in
jl
shll
adc
out
jl
sbb
idiv
push
and
mov
mov
int
xor
push
outsl
pop
and
add
xchg
out
mov
lahf
incl
inc
push
add
push
dec
gs
cmp
adc
out
mov
ja
stc
insb
orb
pop
cmp
jp
xor
cltd
sbb
inc
or
das
push
pop
xorb
dec
push
andl
lods
push
mov
cmp
push
andb
popf
in
fiadds
cs
dec
fld1
xor
fistpll
cmp
mov
pop
sarb
and
sbb
dec
sti
xlat
int
into
jb
test
imul
call
inc
push
out
inc
popf
ud0
push
test
popf
nop
hlt
sub
sbb
push
or
ud0
xchg
mov
mov
pop
adc
lock
pushf
jns
repnz
test
lahf
dec
fidivrs
lret
cmp
inc
and
push
inc
xchg
aaa
inc
hlt
push
sbb
and
push
xchg
lret
xor
or
or
sbb
adc
jge
sbb
push
or
ret
sbb
push
orl
insl
negb
adc
or
cmp
dec
mov
test
sbb
cltd
nop/reserved
movsb
and
cld
adc
cltd
push
lcall
mov
or
sub
dec
pop
ss
outsl
xlat
fwait
mov
mov
ret
neg
mov
xor
pop
jp
cmp
xchg
or
ja
ficomps
jmp
fwait
xlat
push
sub
lcall
and
clc
test
dec
movsb
cltd
and
shrb
push
inc
mov
jl
and
pop
sub
imul
loop
pop
stos
stos
pop
or
outsb
push
xorps
sub
sbb
and
call
pusha
dec
stos
mov
dec
and
test
mov
mov
cmp
shrl
scas
jmp
rcrb
fldcw
mov
popf
mov
mov
pushf
xchg
mov
mov
inc
jns
in
aas
sub
jnp
aas
jnp
iret
xor
mov
push
aaa
cmp
mov
jno
pop
and
aam
mov
jp
cmp
or
and
shll
dec
add
fdivrl
sbb
mov
sbb
test
jp
push
mov
movsl
sti
scas
cmp
and
jnp
mov
xchg
inc
ret
insb
ss
ret
fwait
addl
les
mov
jae
mov
jne
mov
les
ss
fst
xchg
jle
icebp
aam
dec
push
dec
or
pop
insl
lcall
insl
popf
lock
jp
add
sub
mov
les
mov
push
sbb
or
popf
nop
in
pop
or
xor
lret
nop
shlb
inc
dec
sbbb
inc
jl
mov
out
mov
push
imul
scas
sahf
lea
xor
popa
mov
iret
enter
sub
fadds
imul
mov
mov
in
insb
test
mov
imul
ss
enter
inc
jle
xor
dec
stos
mov
leave
add
lds
arpl
pop
scas
push
xchg
test
pop
xchg
sub
movsl
push
inc
sbb
cmpsl
xor
mov
dec
fbld
and
inc
test
into
cli
dec
repnz
into
sub
pop
lock
or
push
mov
movb
in
dec
and
jp
dec
in
inc
xchg
dec
sbb
or
pop
sahf
jmp
out
cmp
jo
xchg
call
rclb
adc
jb
andb
or
pop
jae
stos
mov
mov
sbb
add
push
xchg
mov
ds
or
lods
stc
mov
mov
out
dec
jo
mov
js
into
and
cld
mov
and
inc
adc
cld
push
fnstcw
stos
cmp
leave
inc
subl
daa
cmp
mov
fidivl
dec
mov
cmp
xchg
popf
rcr
test
jle
cli
out
xchg
fldt
sub
dec
cmp
xor
std
sbb
xlat
mov
cmp
jo
dec
jle
lock
mov
jno
movsb
inc
inc
bound
jmp
xchg
aas
pop
pop
out
sub
jne
or
idivb
scas
stc
int
inc
and
mov
adcl
xchg
xor
lea
dec
scas
aam
mov
pop
cmp
fldt
xor
jmp
mov
mov
dec
popa
sub
roll
test
aas
or
push
arpl
pop
rcr
repz
xor
jmp
push
daa
jmp
cmp
adc
mov
xchg
xor
lds
adc
jno
adc
sbb
pmaxsw
stos
inc
mov
fbld
sti
xchg
cmc
mov
fcoml
pop
pop
call
pushf
xor
ret
add
aad
and
sub
jp
and
dec
or
ret
test
cmc
insb
jne
mov
sub
imul
data16
push
std
loopne
pop
lods
gs
ret
dec
imul
sub
jl
mov
mov
mov
jge
ds
aas
enter
push
in
xchg
lahf
xchg
and
test
jbe
adc
add
inc
iret
cmp
pop
push
pop
xchg
mov
mov
and
push
mov
cli
cwtl
inc
dec
or
in
pop
cmp
cmpsl
dec
mov
rolb
daa
jg
popf
sbb
xor
inc
mov
es
out
jnp
negb
mov
lcall
ret
xchg
mov
ja
loope
dec
fsub
or
roll
pushf
xchg
test
repz
add
dec
and
outsl
pusha
adc
and
pop
test
push
cs
dec
call
inc
adc
out
shll
mov
jmp
mov
or
addr16
xchg
testl
and
or
ss
ja
outsb
sub
mov
xchg
ret
test
mov
push
cwtl
hlt
andl
xlat
pop
push
shlb
push
cwtl
vmovhps
mov
and
cs
shlb
cmp
cmc
outsl
lds
xor
fimull
je
jmp
mov
or
lods
cmp
push
mov
loop
jmp
xchg
mov
cld
xchg
push
sbb
jne
mov
shr
jo
and
mov
fwait
pop
push
lret
xchg
pop
imul
jno
mov
adc
fadds
pop
push
sahf
in
js
mov
scas
lods
imul
mov
aam
xchg
lods
push
std
inc
cmp
mov
enter
adc
out
movsb
outsl
outsl
hlt
sub
stc
inc
mov
aam
enter
imul
notl
out
inc
and
movsb
cmpsl
mov
xchg
test
and
xor
xlat
mov
jl
pop
mov
lahf
movsb
lock
xor
add
lcall
enter
pop
cmp
inc
pop
inc
or
ja
decb
sbb
mov
push
xor
cmp
cltd
push
jno
pusha
xchg
lds
lcall
sbb
cltd
mov
pop
pop
loop
loopne
mov
dec
mov
mov
leavew
push
mov
mov
cvttps2pi
aaa
cmpsb
int3
lcall
stos
adc
fstpt
rorl
into
jbe
adc
add
add
mov
arpl
arpl
pop
mov
sub
or
mov
es
adc
mov
add
sub
loope
ret
push
mov
ret
into
sub
pop
xor
out
cmp
add
roll
xchg
adc
mov
jo
mov
jb
fs
xchg
xchg
xor
lret
notb
mov
and
push
insl
stc
out
cmp
pop
cwtl
jno
push
insb
dec
adcb
ret
push
insl
repz
jne
test
ss
dec
xor
add
ret
test
outsb
adc
popa
lret
jns
scas
or
jno
sbb
jo
bound
push
lds
mov
xchg
or
fucomi
data16
mov
mov
push
xor
sub
inc
push
loope
cld
inc
fs
insb
add
out
xchg
jp
jbe
jns
cmp
pop
mov
add
das
dec
push
jbe
pop
mov
ss
inc
stos
fs
lods
shrl
adc
mov
mov
cmp
lcall
loop
loopne
push
sub
fsubs
and
js
mov
sbb
mov
ret
clc
repz
sub
xchg
push
js
pop
ss
jmp
aas
repnz
mov
jo
cs
icebp
ja
mov
rolb
jo
cmp
mov
clc
lcall
lods
hlt
shll
add
dec
out
cltd
enter
mov
push
mov
stos
xchg
sub
pop
and
fdivr
pushf
stos
dec
xchg
add
jbe
fmull
ret
xor
xchg
xchg
and
and
sbb
nop
rolb
ds
cmp
bnd
shrb
push
pop
add
pop
in
push
aas
bound
into
and
addr16
xchg
pop
orl
cli
ja
mov
or
mov
das
jae
leave
cmp
push
pop
cmc
mov
cmp
shlb
dec
cld
mov
fwait
jg
test
xchg
enter
or
mov
push
mov
inc
ret
or
jae
add
xchg
test
adc
and
push
add
addr16
jne
sbb
mov
fwait
lea
xchg
dec
push
addl
dec
mov
mov
jg
arpl
out
xchg
pop
out
push
popa
cmp
sub
or
add
hlt
cmp
movsb
mov
dec
push
jmp
jo
push
xchg
test
test
inc
push
fisubrl
fdivrl
inc
ret
mov
add
add
pop
jge
mov
push
lahf
out
cmp
push
inc
push
add
mov
lds
loop
in
sti
movsb
jecxz
out
sub
aam
jne
xchg
mov
lock
out
pop
add
ret
dec
inc
loope
fcomip
mov
mov
xchg
iret
xchg
leave
ret
jns
cmp
shrl
jbe
popa
mov
push
in
lea
xlat
xchg
ret
gs
fdivrl
stc
push
sub
jmp
push
xor
cli
jle
sub
sbbl
push
movsb
xchg
stos
mov
push
push
adc
lret
pop
stos
shr
and
push
popf
sbb
clc
ret
sbb
mov
jo
xchg
dec
test
pushf
ds
add
push
fmulp
mov
ja
les
mov
push
data16
xor
repnz
je
mov
inc
loope
xchg
add
push
push
xor
ljmp
fbstp
pop
je
and
ljmp
ljmp
stc
push
lret
cmp
pop
xor
sbbl
sbb
dec
jbe
xchg
adc
aaa
pop
xor
add
mov
rorl
adc
lcall
add
xchg
les
jne
ret
dec
sub
leave
and
xchg
cs
mov
or
lea
loop
aaa
pop
adc
shl
sbb
sti
das
ljmp
dec
out
dec
rol
push
in
rorb
sub
sarl
xchg
cmc
test
xor
sub
add
mov
and
clc
bound
cmp
jl
repz
pop
fxch
cmpsl
je
jbe
push
cmpl
push
dec
mov
sub
fisttpll
dec
stos
cltd
lods
imul
gs
pusha
jmp
or
es
sbb
mov
int
daa
adc
fs
inc
xchg
stos
cmp
sahf
cmpsb
pop
dec
push
mov
mov
jnp
aad
and
jle
cmp
mov
pop
into
or
add
jle
xchg
imul
pop
push
jno
jno
cmp
rcr
mov
loop
mov
mov
jl
inc
aaa
lret
xor
movsb
inc
fs
add
dec
jbe
dec
ja
push
out
bound
push
mov
movsb
sbb
andb
inc
leave
add
dec
xchg
lahf
pop
xor
shl
mov
dec
ja
mov
mull
jne
dec
jo
add
fs
inc
mov
jne
andb
mov
loop
dec
call
popa
mull
mov
dec
fs
inc
imul
jne
test
sub
push
das
insb
mov
decl
xor
dec
outsb
mov
out
bound
xor
mov
into
jmp
push
dec
sahf
xchg
dec
sub
mov
jecxz
mov
cmpsb
cmp
sbb
pop
or
sbb
lret
mov
xor
inc
adc
cmp
in
push
mov
in
or
or
out
sarl
push
jmp
sbb
dec
mov
outsb
ja
or
aam
push
and
int
out
push
pop
daa
pop
jle
push
xchg
roll
mov
jb
inc
pop
mov
pop
lret
add
inc
lods
fcoms
idivb
lret
sub
jbe
mov
fcoml
jbe
gs
add
jae
push
fsubp
cmc
call
aam
scas
mov
sub
xor
pop
jge
jne
push
or
pop
push
stos
fdivr
mov
xchg
mov
ja
sub
inc
gs
lcall
cmc
push
jmp
lds
cwtl
inc
mov
dec
mov
cmp
inc
std
repz
jg
nop
fwait
sub
int3
mov
in
cmpsl
mov
cld
cmp
lock
pop
add
and
js
jae
test
push
or
out
push
cmpsl
xchg
dec
xchg
pop
fists
or
scas
orb
popa
cmp
cmpsb
mov
inc
xchg
in
outsl
add
jae
and
mov
mov
push
xchg
shll
roll
daa
hlt
mull
repnz
in
dec
add
test
jp
jle
and
scas
inc
ds
jp
xor
and
adc
push
or
xchg
and
sti
jp
jmp
mov
dec
cmpsb
push
insw
xor
les
push
pop
push
scas
rcrl
lods
pop
and
pop
stos
into
sbb
cmp
lock
dec
jno
enter
adc
or
jns
leave
lea
jbe
or
insb
mov
sub
sarl
sub
push
xor
and
out
stc
mov
sarl
jo
ljmp
mov
out
pop
movsb
mov
mov
andb
int
pop
jnp
push
lret
nop
je
movsb
imul
into
pusha
adc
bound
mov
or
test
adc
movsl
es
adc
adc
rorl
xchg
mov
lret
test
push
jnp
mov
es
lods
outsl
sahf
jb
loopne
loop
push
adc
sub
or
dec
inc
inc
mov
loopne
push
push
fsubl
mov
iret
pushf
rcr
popa
mov
ret
arpl
mov
pop
pop
out
dec
je
aaa
int3
xchg
push
insl
push
mov
push
xor
adc
mov
add
inc
pop
ret
ss
aas
in
les
icebp
mov
loope
hlt
sbb
shrb
ss
loope
cld
jno
pop
or
jbe
lods
jbe
in
loope
shll
std
jecxz
mov
jp
lods
mov
out
pop
das
push
and
cmp
inc
xchg
call
inc
add
mov
ficoml
subl
jl
ret
sub
mov
gs
outsb
mov
mov
xchg
dec
sub
fucom
push
cli
dec
fprem1
xor
cwtl
popa
insb
dec
cmpsl
add
mov
inc
mov
cmpsl
lods
xchg
sbb
mov
lret
xor
outsb
flds
mov
sub
sub
xor
jb
push
jg
pop
jle
jmp
aas
inc
xchg
xchg
into
cltd
je
subl
cmp
test
and
out
push
pop
sbb
fs
or
and
and
xlat
int3
cmc
jo
jne
nop
test
and
inc
mov
jb
clc
shrb
adc
sti
test
or
fadds
add
ficoml
lock
fwait
lcall
sbb
in
lods
mov
or
out
cmp
push
cmpsb
fidivrl
push
mov
xchg
bound
sahf
iret
ret
pop
inc
leave
addr16
xor
mov
xacquire
pusha
sub
popf
cmp
fists
arpl
pop
mov
shll
xor
fisubs
lcall
psllw
pop
rcl
lcall
xor
gs
into
push
pop
leave
xchg
pop
lea
and
in
imul
dec
shl
mov
sbb
loopne
fsub
nop
adc
mov
sbb
cwtl
inc
lret
push
mov
pop
jbe
repnz
mov
inc
out
adc
pop
ret
cmp
scas
inc
mov
scas
push
out
lcall
cmc
add
inc
outsl
sub
mov
inc
jge
mov
xchg
cmp
mov
dec
mov
inc
dec
ss
pop
xchg
ljmp
and
inc
std
pop
ret
popa
pop
fcmovne
sub
mov
arpl
mov
or
cmp
int3
sub
out
test
insw
sub
scas
or
lret
pop
ljmp
xchg
mov
push
mov
and
jl
jnp
dec
cmp
mov
cs
fisttpll
jnp
movsl
cmp
xchg
pop
add
std
sbb
call
push
cltd
pop
xchg
not
push
and
pop
data16
adc
mov
mov
sub
jle
xchg
scas
test
addr16
xor
and
xor
fsubrl
mov
pop
rcll
int
cmpsl
je
xchg
loop
insb
movsl
je
jbe
clc
add
ja
lock
push
call
cmpb
cmp
shll
ret
insw
dec
push
nop
mov
inc
xchg
jle
sub
push
xor
adc
mov
rol
xchg
enter
push
xchg
fistl
mov
pop
fimuls
hlt
pop
adc
jbe
into
mov
imul
flds
add
add
rcrl
sbb
outsw
mov
mov
jge
cmpsb
adc
pop
shrl
mov
hlt
xor
sbb
nop
enter
sub
xor
jno
out
call
mov
xchg
mov
sbb
hlt
orl
or
les
cmp
fistpl
outsb
adc
rcll
adc
mov
icebp
jns
lods
jno
lock
dec
jle
stos
xchg
sbb
std
dec
in
lods
rol
rep
xchg
ret
shll
vmovups
push
stos
mov
subl
jne
bound
call
push
xchg
add
mov
aad
adc
outsl
das
inc
jmp
xchg
jne
scas
add
add
pop
xor
xchg
cmp
sub
jecxz
adcb
loop
push
stos
scas
dec
sbb
leave
jo
test
test
cli
pop
cmpsl
fdivr
loop
stos
cmc
das
shr
push
xor
dec
inc
hlt
jp
and
loopne
enter
mov
data16
pusha
into
aas
pop
aad
out
call
hlt
lea
aas
cli
fnstcw
aam
jg
pop
sbb
daa
aaa
push
cmp
xor
lahf
loopne
shl
jmp
mov
shlb
cmp
or
outsl
xor
movsl
jne
pushf
ficoml
pop
push
arpl
pop
loop
out
repz
mov
dec
mov
xchg
fwait
mov
xor
imul
xor
or
push
ja
dec
pop
pop
call
inc
data16
ret
popf
add
or
rep
lahf
lods
mov
aas
jg
pop
mov
outsl
inc
inc
fdivr
shrl
movsl
xor
inc
mov
adc
push
aam
pop
adc
in
xchg
fldenv
lret
fwait
push
sahf
cli
test
push
into
repnz
jbe
repnz
cmpsl
repz
scas
xor
push
test
testb
sbbl
daa
ss
sbb
push
xor
sub
mov
nop
clc
cmpsb
orb
add
stos
adc
andl
xchg
mov
cmp
addr16
stc
std
or
inc
aas
mov
jmp
cmp
inc
or
adc
mov
iret
orb
clc
sbb
js
andl
or
xchg
movsl
pusha
test
dec
sbb
pop
sub
loop
aad
sbb
icebp
mov
daa
pop
inc
mov
or
inc
call
es
scas
movsl
idivl
into
push
fdiv
adc
and
push
fdivs
imulb
fdivrs
pop
jmp
push
adc
and
repnz
mov
mov
ret
add
std
std
insb
dec
imul
jne
adc
das
xorl
hlt
dec
loop
pop
aad
sub
cmp
xchg
push
cltd
out
lock
lret
lahf
mov
repz
test
add
pop
add
movl
adc
cmpsb
loop
in
loope
xor
loope
lea
subb
jmp
inc
push
in
add
enter
dec
int
inc
mov
les
xchg
mov
mov
pop
mov
call
xchg
lret
cli
xor
outsl
iret
int3
frstor
mov
dec
sbb
arpl
stos
fnstenv
push
inc
loop
push
enter
stos
mov
movb
add
pop
addr16
sub
cmpsl
and
adc
inc
inc
int3
fisubrs
add
adc
push
dec
mov
add
xchg
cld
mov
jg
fcoms
stc
xchg
pop
jle
icebp
bound
mov
ja
push
fs
push
cltd
das
popa
mov
fstps
xchg
imul
enter
in
popa
test
dec
not
lret
push
adc
xor
adc
sbb
cmp
mov
jle
mov
mov
mov
sti
sub
mov
jecxz
push
jb
int
outsl
or
mov
jmp
add
mov
pop
pushf
inc
pop
jecxz
xchg
es
stos
and
mov
pusha
inc
dec
jl
leave
mov
mov
cmc
loopne
xchg
sbb
cs
xchg
add
scas
dec
aad
fidivrs
inc
mov
ficoms
das
imul
sub
mov
adc
frstor
lock
xchg
xchg
iret
lock
mov
jle
jecxz
jo
sub
ret
adc
push
out
add
ret
pop
aas
inc
sub
mov
mov
lods
xchg
inc
xor
mov
iret
dec
xor
dec
inc
xchg
or
aas
add
into
sbb
cs
frstor
mov
arpl
out
leave
aas
lods
jbe
mov
cltd
fdivs
hlt
cltd
test
rorl
xor
ret
mov
mov
mov
aad
insb
les
addr16
nop
out
in
xlat
jae
push
jnp
push
xchg
lock
push
xor
xchg
or
out
mov
push
fimull
data16
jle
sahf
pop
inc
dec
mov
jnp
hlt
sbb
jecxz
mov
jmp
fnstenv
enter
cmp
sub
inc
mov
fsincos
push
and
dec
dec
pop
clc
into
mov
mov
loope
cmpsb
sbb
ret
pop
mov
jle
aaa
dec
dec
inc
insl
pushf
dec
imul
fists
xor
mov
in
inc
cmpsb
mov
negl
inc
jle
imul
icebp
inc
sub
mul
faddl
nop
hlt
mov
lahf
add
sub
mov
mov
sub
dec
fs
leave
loopne
pop
push
test
ret
inc
jno
jmp
dec
mov
fidivrs
xchg
mov
mov
loope
je
in
dec
mov
jne
lea
push
ljmp
mov
mov
lret
pop
movsb
mov
call
leave
jmp
dec
sbb
adc
iret
ret
lods
insb
pushf
ds
pop
xchg
push
pop
pop
adc
mov
fidivs
call
push
cltd
inc
ret
in
bound
cld
leave
inc
daa
and
mov
mov
push
xor
das
outsl
mov
fwait
andb
and
mov
adc
inc
daa
aaa
xchg
sbb
inc
ret
xor
xlat
mov
xor
jb
xor
jp
cmpsl
pop
and
cli
xchg
xchg
pop
xchg
lock
pop
jl
fwait
sub
test
int3
pop
inc
les
sub
push
push
ret
out
loop
cmp
mov
and
loope
mov
pop
mov
ja
ds
xchg
xor
mov
mov
leave
insw
gs
test
and
stos
sub
adc
loope
xchg
sbb
fadd
imul
add
jb
les
aaa
mov
cmp
xlat
xorl
jne
xchg
cld
movsl
mov
sbb
hlt
mov
jp
push
fisubs
pushf
mov
xchg
imull
loope
idivb
cltd
inc
mov
arpl
mov
lahf
mov
and
outsl
fwait
push
pop
push
sub
cli
pushf
mov
imul
cwtl
imul
xchg
mov
push
call
xchg
ret
mov
out
add
jp
in
xchg
inc
pop
jp
mov
mov
iret
xor
test
lcall
cltd
inc
xor
loope
inc
inc
adc
pushf
adc
xchg
call
and
jl
mov
lret
test
jnp
gs
xchg
aad
popf
dec
push
data16
xchg
xor
cwtl
push
mov
movsb
cmc
jbe
mov
lods
sub
cld
dec
test
mov
push
outsl
pop
insl
xchg
sahf
dec
fdivr
je
mov
xchg
subl
fbstp
repz
data16
fisubrl
inc
in
cmp
es
mov
jbe
ficoms
push
das
and
nop
aaa
dec
fsubl
xchg
jecxz
stos
out
cmp
add
inc
pop
mov
loope
jae
mov
xchg
pop
filds
aam
sahf
adc
sbb
lods
xchg
add
sub
dec
lcall
je
repz
pop
mov
push
les
data16
ret
mov
xchg
add
add
or
jg
insl
movsl
cmpsl
or
lret
sarl
cmp
add
lcall
and
roll
mov
mov
xor
mov
mov
sub
cltd
inc
movsl
sahf
mov
arpl
stos
pop
imul
adc
ret
pop
jo
mov
push
xchg
jp
inc
cmpsb
inc
rcll
jnp
push
mov
dec
push
sub
lret
inc
cmpsl
jecxz
fldln2
jl
imulb
or
and
or
adc
inc
inc
inc
icebp
adc
cmc
jge
ljmp
xchg
mov
push
ret
ret
cmp
mov
cld
inc
dec
shr
loope
ja
lahf
fwait
test
mov
dec
data16
negb
fisubl
fucom
repz
xchg
cmp
sbb
movsb
mov
inc
outsl
pop
adc
pop
cmpsl
adc
fnstenv
mov
add
and
mov
mov
push
push
les
inc
sti
inc
push
into
fdivl
dec
aaa
jo
jl
dec
sbb
xchg
rcrl
push
mov
or
xorl
xor
cwtl
jg
cli
imul
lcall
scas
xor
pop
fwait
dec
in
addr16
lea
dec
daa
jae
fists
or
xor
iret
xor
shr
mov
fldl
jo
dec
clc
mov
call
push
ja
mov
or
mov
fnstsw
push
mov
xor
xlat
or
pusha
xor
sub
sbb
push
pop
aam
pop
dec
inc
fcompl
add
dec
or
sub
jecxz
shl
rol
test
int3
xchg
fldenv
mov
subb
mov
and
mov
je
clc
dec
dec
push
push
dec
pop
pop
icebp
es
cld
sbb
or
adc
mov
sub
jge
call
outsl
add
mov
or
lret
stc
bound
pusha
adc
jmp
pop
push
pop
sub
push
out
or
