mov
xor
cmp
je
push
add
pop
inc
cmpb
jne
ret
push
mov
sub
addb
sub
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
push
add
pop
pop
leave
ret
push
push
push
xor
mov
push
mov
call
mov
push
push
mov
call
push
call
mov
xor
inc
cmp
jne
push
pushl
push
push
call
jmp
cmp
jne
testl
jne
cmp
je
push
mov
call
pop
test
jne
mov
call
jmp
cmp
jne
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
je
push
push
push
push
call
push
mov
call
xor
pop
pop
pop
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
add
sub
lods
xor
stos
sub
sub
sub
sub
roll
sub
push
add
pop
jne
pop
pop
pop
ret
push
push
push
push
mov
call
mov
jmp
push
mov
sub
add
add
push
push
push
mov
xor
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
mov
call
mov
push
lea
push
push
pushl
mov
call
push
mov
call
lea
push
mov
call
mov
mov
call
cmp
jne
cmp
jne
push
push
push
mov
call
cmp
je
xor
lea
test
jmp
mov
mov
mov
push
mov
call
push
call
lea
push
push
push
push
call
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
test
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
push
call
push
call
pushl
call
mov
mov
sub
push
push
call
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
mov
xor
xor
cmp
jae
mov
mov
mov
addl
subl
push
pop
rep
mov
add
mov
add
add
mov
mov
movzwl
inc
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
add
not
add
not
shr
add
push
mov
sub
add
push
lea
push
mov
call
add
add
mov
mov
mov
mov
push
popl
sub
sub
lods
xor
stos
sub
test
sub
sub
test
sub
roll
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
cmp
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
addb
add
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
mov
mov
add
cmp
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
lea
test
cmp
jb
pop
pop
xor
push
add
pop
ret
push
mov
sub
sub
push
mov
mov
add
mov
test
jne
push
add
pop
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
sub
mov
add
mov
xor
mov
cmp
je
add
sub
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
push
add
pop
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
add
add
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
movb
call
leave
ret
mov
or
mov
movzbl
xor
push
add
pop
mov
sub
add
mov
decl
jne
lea
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
add
add
sub
cmp
jb
pop
pop
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
ror
add
sub
jne
test
jns
lea
and
or
pop
mov
pop
ret
rcrl
aam
pop
add
stos
pop
add
add
add
or
daa
jae
cmovo
xor
pusha
pop
cmp
jg
cwtl
lods
cwtl
push
icebp
cmp
jae
xchg
mov
loopne
popa
or
xchg
subl
std
out
pop
and
inc
rcrb
adc
bound
adc
das
jle
sub
push
aaa
jmp
imul
inc
in
add
sub
mov
xchg
imul
pop
xchg
imul
mov
and
sbb
and
push
enter
add
cmp
mov
adc
adc
xchg
inc
push
dec
fcomi
mov
insb
jp
sbb
or
ret
xchg
xchg
xor
es
testb
std
xor
and
jmp
mov
push
in
mov
jbe
insb
mov
in
pop
pop
mov
xchg
loope
jmp
ja
add
andl
cmp
pop
sub
fistps
aaa
mov
fcomps
icebp
jo
cmp
cmpsl
inc
mov
xor
or
dec
mov
aaa
push
add
movl
les
in
subl
lock
mov
repnz
jo
pop
and
out
jns
pusha
out
pop
and
cmp
sbb
scas
push
dec
testb
fcom
outsl
xchg
test
ljmp
cmc
insl
jge
clc
jle
adc
cwtl
mov
and
cmpsb
push
and
cmp
push
inc
nop
movsb
add
cld
mov
ret
cwtl
cmpsb
orl
adc
pop
pop
lret
test
jp
lahf
xor
push
jo
popa
iret
test
or
mov
rcrl
arpl
sub
cli
pushf
push
xchg
add
addl
outsb
and
mov
push
into
push
sarb
push
or
shl
in
test
fstps
fs
cmp
lods
clc
push
xor
mov
pop
loop
jo
jae
int
mov
lods
out
xchg
and
iret
stc
repz
into
int3
add
lods
lods
inc
jmp
fnsave
adc
fwait
add
aam
in
mov
or
cmc
xor
inc
insb
push
lcall
inc
adc
int3
sub
pop
fcmovu
sub
div
xchg
or
push
leave
xor
push
jl
icebp
and
push
cmpsb
hlt
mov
or
pop
icebp
and
and
sbb
sub
push
movsb
cmp
insb
jp
or
ja
or
mov
test
inc
xor
adc
jnp,pn
loope
pop
jp
dec
or
xchg
pusha
lock
or
sbb
aaa
inc
insl
adc
cmp
les
mov
jmp
xchg
add
rclb
xor
stc
push
fs
je
repnz
std
pop
push
cli
int
enter
cmc
push
das
push
or
movsb
scas
dec
jb
dec
mov
int3
xchg
dec
adc
or
jbe
mov
cli
negb
ret
repz
mov
or
or
stos
sub
cltd
cmp
sub
outsb
movsb
test
push
sub
jge
insl
pop
js
cmc
cmp
pop
jae
sbb
inc
mov
repz
mul
dec
mov
cmp
icebp
andl
js
inc
loopne
inc
aam
int
sub
punpckhdq
mov
add
jne
xor
gs
hlt
je
idivb
dec
and
cld
lret
xor
dec
pop
stos
pop
insl
inc
std
adc
pop
mov
pop
adcb
fwait
test
or
dec
out
push
xor
jecxz
das
das
and
stos
inc
fcompl
sub
xchg
scas
in
and
imul
test
sbb
push
mov
jne
lret
ss
xchg
stc
outsb
push
out
sbb
sub
mov
jge
shrl
pop
and
cs
cmp
in
fdivrs
xor
les
outsl
jb
movsl
fs
push
push
or
cmpsb
repnz
mov
addr16
fmuls
inc
in
lods
xchg
cs
mov
adc
mov
mov
xchg
push
pop
pop
cli
repz
push
jno
ror
das
leave
mov
pop
ficomps
lahf
sub
dec
les
pusha
mov
pop
fcmovne
dec
arpl
xchg
inc
fdivl
lcall
inc
xor
loop
and
insl
sbb
lock
daa
cmp
addr16
mov
jae
cli
int
aad
test
jo
flds
xlat
mov
push
push
js
lret
cmpsl
scas
scas
cmp
mov
mov
les
icebp
inc
imul
mov
mov
xor
cmp
sbb
insl
sahf
add
add
test
aas
in
mov
push
out
mov
jo
into
test
xor
loopne
into
mov
sub
out
cmpsl
xor
or
xor
test
sub
sbbb
stc
daa
xchg
bound
and
add
mov
jae
cs
dec
xor
or
scas
jg
mov
add
fdivr
add
cwtl
ljmp
adc
xor
sbb
test
int
imul
xchg
sbb
inc
outsl
xchg
imul
jae,pn
or
mov
sub
xor
cltd
sub
push
test
xor
or
jae
cmpsl
xlat
xchg
push
pop
imul
rorl
xor
push
arpl
roll
push
dec
scas
jb
popa
sub
or
int3
out
and
iret
add
cwtl
xchg
in
loop
jmp
sbb
sbb
leave
sub
addr16
out
sbb
out
or
sbb
mov
push
js
ret
lds
movsl
aad
xchg
pop
mov
add
mov
jno
mov
in
out
cmp
outsl
fwait
lret
xchg
icebp
xchg
ffreep
mov
hlt
popa
leave
dec
aas
jge
cmp
mov
or
mov
ja
mov
pop
pop
pop
lock
xchg
in
inc
cmp
pop
fs
push
mov
inc
mov
mov
repnz
inc
add
mov
cmpsl
xchg
and
insl
pushl
ret
std
xchg
mov
mov
inc
sub
jmp
subl
ret
xlat
loope
push
and
mov
cmpsb
insb
dec
roll
addl
insl
xor
lock
jnp
shrb
dec
in
cli
bsr
xorb
es
dec
or
hlt
outsl
enter
call
sbb
sbb
out
rclb
sbb
cwtl
mov
stos
or
lret
mov
out
aas
sbb
and
push
iret
aaa
faddl
push
popa
mov
push
aaa
rol
mov
loop
sarb
adc
add
in
sub
ds
mov
mov
jbe
mov
fwait
cmp
loop
dec
enter
cmp
add
mov
mov
push
xor
mov
push
cs
in
inc
divl
cli
adc
outsb
mov
push
pop
jge
xor
lods
mov
popf
dec
addr16
push
lcall
xlat
scas
cmp
ficompl
sbb
adc
rorb
adc
sub
leave
lock
mov
lret
dec
scas
test
dec
dec
xchg
fs
bound
mov
xor
pop
push
and
add
sbb
rorl
shll
dec
enter
setg
xchg
fsubrp
pushf
in
imul
ss
push
shlb
mov
shrl
mov
inc
fcmovu
inc
cli
ret
mov
fwait
test
test
aam
repz
and
xor
mov
pop
xlat
inc
ljmp
inc
ret
cs
sbb
ds
lahf
jns
in
fstl
rorb
sarb
and
dec
inc
pop
lds
jmp
sub
call
fldl
mov
call
or
and
lods
call
dec
lods
movsl
scas
mov
test
pop
or
cmp
xchg
and
fistpll
dec
fsubrs
out
outsb
lret
into
stos
jae
out
pop
mov
sahf
push
xchg
sbb
xchg
rolb
out
adc
outsl
je
scas
rorl
adc
jg
add
jmp
sahf
bound
mov
cmp
xchg
and
mov
push
lret
lcall
inc
ror
imul
push
mov
cmc
fildll
mov
cltd
adc
outsl
shrl
test
sub
push
pushf
push
les
mov
push
inc
scas
mov
jl
fbld
jl
es
loop
mov
fs
leave
jo
bound
pop
mov
loope
mov
adc
sbb
push
inc
cwtl
push
mov
xchg
test
cmp
mov
test
xchg
lods
pop
sarl
shrb
loopne
cmp
fcompl
cld
out
mov
jcxz
cwtl
and
mov
out
out
in
incl
insb
or
notb
xchg
xorl
xlat
fcoms
dec
imul
push
adc
or
sbb
fcmove
out
imul
sbb
repnz
cwtl
lods
mov
mov
in
xchg
add
pushf
jp
mov
mov
cmp
pop
and
xchg
jp
mov
mov
cmp
mov
dec
out
repnz
add
xchg
or
shrb
jmp
xor
and
bound
adc
mov
aas
sahf
js
jo
ror
xchg
fildl
pop
es
pop
stc
sarb
icebp
add
fidivrl
hlt
pop
aad
fs
mov
push
add
xchg
gs
pop
inc
out
pop
lods
cs
test
pop
aam
popa
sbb
shlb
sbb
ja
push
fimuls
push
push
xchg
fsubrl
cmp
rorb
inc
cmpsl
add
mov
or
mov
inc
pop
ljmp
xchg
inc
lds
pop
lea
xchg
icebp
mov
ljmp
cmp
jb
mov
jo
aam
mov
add
shll
mov
mov
bound
sub
pop
loope
fwait
pop
cmp
add
lock
mov
sbb
mov
fdivp
fldcw
inc
ss
push
mov
fnsave
jno
in
dec
les
jb
cs
cmp
daa
push
icebp
dec
outsl
cld
in
add
sahf
fisubl
adc
cmp
sub
decl
mov
lods
inc
rep
inc
xlat
mov
data16
xor
and
mov
or
clc
es
add
mov
pop
out
scas
sub
mov
mov
je
dec
stos
mov
or
mov
hlt
rclb
les
lcall
cmpb
sub
dec
add
xchg
std
cwtl
cmpsb
xchg
movsl
andl
scas
filds
fmulp
pop
push
xor
aad
into
push
std
pop
or
dec
stos
and
test
adc
jle
push
dec
lock
xchg
dec
mov
imul
mov
push
stos
data16
xor
arpl
cmp
and
test
lret
and
addr16
pop
pop
lock
and
jecxz
dec
ss
loope
leave
jmp
and
mov
ds
ficoms
mov
dec
dec
cs
mov
cmc
add
and
or
push
loope
lret
rolb
fsubl
js
xchg
aaa
bound
mov
inc
adc
ret
push
icebp
push
cmp
iret
idivl
jne
cmc
out
hlt
adc
nop
test
dec
gs
sub
clc
add
jae
ret
dec
add
fdivl
arpl
fsubs
jae
add
jbe
imul
xlat
fwait
add
out
mov
xchg
sbb
mov
and
decl
nop
movsb
xor
nop
xor
cmp
out
add
fnstenv
adcb
enter
dec
vpsubb
movsb
mov
and
adc
stc
xchg
inc
pop
test
adc
fwait
mov
fidivl
lahf
in
push
movb
mov
sub
mov
xor
xlat
mov
xchg
loope
out
adc
jle
cwtl
add
lock
and
push
cs
pop
mov
iret
fmuls
lock
add
sti
xlat
or
inc
ss
fldcw
add
and
jl
jo
cmpl
pop
xchg
lock
imul
jno
outsl
add
ror
mov
dec
lods
mov
xchg
or
sbb
push
and
mov
and
push
inc
cmc
dec
arpl
jecxz
fldenv
pop
sbb
sar
mov
mov
sub
imul
mov
lahf
xchg
mov
gs
sarb
xchg
scas
shll
daa
outsb
dec
fs
push
test
push
incl
ret
push
lret
dec
xchg
lahf
insb
sbb
dec
adc
dec
sbb
jge
test
fcmovb
ja
or
cmp
fisubrl
add
jae
iret
xchg
pop
pop
pop
adc
test
push
dec
inc
or
shlb
loopne
das
testb
xchg
inc
popf
pushf
lahf
ds
daa
es
pop
fnsave
dec
and
pop
xor
mov
sub
dec
jo
jl
lods
aas
xchg
shrl
ret
pop
hlt
movsl
fsts
sbbb
in
and
call
pop
adc
cs
sub
repnz
scas
jo
cmp
mov
push
shlb
push
mov
inc
xlat
int3
mov
sub
mov
cmp
pop
cli
mov
lcall
fmul
outsl
shll
mov
bound
shll
shll
fistps
dec
pop
outsl
bnd
cmpsl
int
cld
push
sub
mov
jmp
mov
xor
lock
jnp
mov
pop
hlt
or
mov
mov
mov
fidivrs
or
or
enter
bound
sbb
jle
cmp
and
jo
idivb
and
inc
cmp
sub
loope
sahf
xchg
adc
pop
dec
in
dec
dec
iret
mov
scas
imul
xor
js
jae
fldl
mov
add
xorl
cmpl
insl
fwait
popf
imul
stos
lods
fidivrs
js
mov
movsl
adc
lahf
dec
lods
fcmovnbe
adcl
hlt
dec
cmpsb
in
and
test
pop
add
lods
rorb
int
dec
xchg
vpsadbw
xor
jp
aas
pop
in
ret
add
adc
push
int3
mov
mov
call
push
adc
mov
imul
js
nop
mov
lock
rolb
cld
mov
jnp
cmp
pop
add
in
add
lods
mov
add
fnstcw
rcll
movsb
sub
pop
ds
out
and
cwtl
stos
jg
inc
in
nop
add
mov
clc
sbb
xchg
out
jns
popf
movsb
sub
or
mov
in
xchg
mov
and
int3
stos
insb
ret
test
sti
mov
clc
mov
mov
in
sub
lods
data16
xor
sbb
sti
aam
in
insb
cmpxchg
or
dec
cmp
pop
jno
xchg
mov
repz
ljmp
ja
push
leave
dec
bound
jmp
add
sub
sbb
xor
push
cmc
mov
xchg
out
mov
jle
adc
sar
add
jmp
mov
loope
orps
cmp
lods
test
data16
imul
fwait
sbb
movsb
adc
scas
mov
pop
inc
xor
mov
xor
testb
and
ret
pop
ds
fmul
test
gs
les
fidivs
data16
inc
shlb
xchg
mov
mov
out
jae
sbb
test
notb
pushf
pop
jmp
jecxz
cmp
nop
mov
aam
jne
jle
or
xor
arpl
pushf
arpl
mov
stos
dec
xor
mov
outsl
aad
xchg
test
mov
xchg
loopne
add
mov
stos
adc
into
pusha
push
push
jge
leave
xchg
jnp
cwtl
jne
xorl
arpl
imul
fiadds
adc
jge
inc
sbb
cmpsb
and
pop
cmp
fwait
int
and
push
or
sub
sub
into
mov
lret
loope
popf
lods
lret
adc
into
mov
clc
add
lahf
xor
jns
mul
xor
sbb
flds
stos
in
mov
sub
insl
mov
dec
fisttpll
pop
adc
xor
dec
lahf
pop
jne
movsl
xchg
mov
and
jnp
mov
daa
pop
xor
test
cmpsl
in
or
cmp
test
lret
bound
dec
test
or
xchg
add
shll
add
lods
jmp
pop
dec
stos
lret
and
movsl
mov
pushf
mov
and
sbb
stos
sarl
dec
test
or
fidivl
fisubrs
in
pushf
sub
lret
xor
push
mov
cmpsb
xor
xchg
xor
cmp
inc
mov
dec
std
ds
mov
test
pushf
pusha
pop
gs
aaa
inc
or
sbb
movsb
xorb
xor
sub
cli
addr16
jnp
lock
or
xor
or
rcll
ret
adc
sub
int3
and
xchg
mov
jle
or
stc
es
adc
popa
ja
mov
dec
int
sti
mov
xchg
or
and
mov
pushl
mov
mov
idivb
pusha
adcl
in
pop
xchg
sub
out
dec
test
push
cltd
jno
call
jno
or
ret
in
daa
and
inc
sti
arpl
iret
loope
outsl
scas
mov
arpl
sbb
icebp
push
pop
pop
loope
inc
addr16
push
push
lds
addr16
sbb
movsl
xchg
rcrb
imul
sti
loope
and
inc
cmc
mov
aam
xchg
test
pusha
or
adc
cmpsl
jo
push
mov
sub
mov
aad
sub
mov
pop
add
pop
notl
imul
or
pop
test
push
hlt
mov
cwtl
jge
jo
addr16
repz
jg
add
mov
neg
push
in
in
inc
ljmp
stos
inc
mov
das
outsl
out
lds
xchg
push
icebp
cmpsb
mul
xor
push
cmp
mov
sbb
mov
xchg
xchg
jle
fnstenv
dec
icebp
pop
daa
lock
jmp
pop
push
mov
leave
fiadds
bound
xchg
repnz
mov
testb
inc
shlb
lahf
xlat
pop
pusha
pop
jmp
lods
rorl
inc
dec
mov
pop
ficomps
rorl
xor
jae
daa
jmp
ret
cmpsb
xchg
sub
data16
dec
fidivrs
fstpl
les
sbb
lret
push
stos
faddl
mov
xchg
mov
nop
dec
push
test
fwait
xchg
andl
adc
mov
std
push
push
add
or
mov
pop
ljmp
xchg
sbb
mov
mov
xor
xor
jmp
fistpl
sahf
push
adc
scas
andb
mov
in
xor
enter
leave
xchg
mov
xor
xor
pushf
and
or
mov
pop
add
mov
aam
imul
mov
mov
jae
mov
mov
dec
xchg
adc
xor
mov
sbb
sbb
iret
mov
testl
pop
cwtl
jge
mov
pop
mov
test
psllq
repnz
xor
and
xor
xchg
xor
mov
dec
xchg
movsb
leave
fiaddl
aas
sahf
cli
push
test
sub
mov
dec
sbb
mov
je
dec
sahf
mov
loope
inc
mov
fisttps
and
push
cmpsb
adc
lock
aad
sahf
add
push
stos
imul
pop
dec
in
stos
stc
jns
cmpsb
iret
stos
or
mov
xchg
dec
mov
push
cltd
sub
cmp
pusha
mov
adc
jbe
fwait
inc
add
js
rcrl
and
stc
mov
mov
imul
push
push
cmpb
xor
jae
cmp
xor
xor
xor
mov
aaa
xchg
pop
pop
xchg
sbb
xor
test
xchg
mov
mov
push
jb
cmp
mov
sub
popf
in
enter
pushf
inc
mov
pop
mov
jg
fdivrs
cmpsl
frstor
cs
mov
mov
and
adc
frstor
fildl
pop
sub
cmp
lret
cs
test
ror
imulb
rol
icebp
lods
daa
xchg
cmpsl
test
mov
or
mov
negl
fisubrl
subb
cmp
loope
jecxz
pushf
lods
lret
hlt
icebp
jg
mov
xchg
cld
mov
popa
testb
cli
outsb
ret
lea
xlat
jmp
adc
pusha
lock
adc
jb
andl
xor
scas
sahf
mov
xor
mov
mov
mov
sub
popa
push
cmp
les
fstpt
mov
jae
fcmovu
adc
in
add
jb
mov
lock
mov
stos
jge
aad
add
outsb
mov
sbb
shll
loopne
pop
sub
iret
mov
aam
jp
mov
dec
mov
sbb
xchg
add
sbb
inc
add
orl
int
rorl
mov
ja
and
sub
shlb
insb
sahf
into
jecxz
or
lret
aam
imul
sbb
push
cmp
sbb
sub
cli
xchg
jecxz
sahf
push
push
xlat
and
sub
mov
add
xchg
jecxz
outsl
mov
std
mov
sbb
adc
xchg
mov
jp
sahf
adc
mov
mov
testb
mov
fidivrl
out
push
leave
stos
mov
lea
lock
mov
push
lahf
ja
cli
iret
inc
std
insl
fdivrl
mov
push
add
ret
in
pusha
jne
nop
ljmp
adc
push
mov
lret
call
ja
pop
mov
js
mov
mov
jmp
icebp
divb
xchg
jmp
cmp
bound
push
add
and
jns
mov
aad
xchg
cmp
dec
ret
movsl
cmpsl
ds
in
push
add
aam
mov
pop
pop
xor
xchg
insl
ljmp
xorl
pop
in
outsl
fwait
jecxz
sbb
mov
sub
insb
mov
sbb
push
fildll
jmp
repnz
pop
les
nop
stos
sub
movsl
jp
push
push
mov
add
pop
mov
orl
mov
mov
ficoml
cmp
cld
sub
and
mov
cmp
je
repnz
negl
xchg
add
scas
stc
hlt
mov
movsb
inc
or
pop
in
es
fistps
daa
and
stc
icebp
pop
scas
cmc
cmpsb
outsb
adc
in
idivl
and
out
divps
xchg
in
scas
xchg
or
orl
inc
mov
fwait
xor
fwait
and
inc
out
push
orl
popa
les
jns
mov
fbstp
xchg
mov
xor
in
dec
mov
outsb
mov
out
ljmp
jns
cld
rorl
add
sub
scas
repnz
scas
jae
adc
jns
xor
adc
loope
mov
cmp
mov
loopne
push
aam
stos
mov
bound
add
cli
and
jp
or
jge
adc
mov
aas
into
dec
pop
sub
fstp
xchg
mov
jno
out
insl
loope
jmp
mov
test
shl
ffreep
push
sub
and
insb
cmc
loope
xor
or
push
fnstenv
cwtl
xor
into
and
test
or
insl
pop
jae
mov
xchg
rcrb
outsl
sti
add
mov
das
scas
out
xchg
pushf
adc
repz
fsubp
adcl
dec
adc
jecxz
jmp
pop
insw
adc
sub
mov
sbb
shll
dec
cmp
sub
mov
push
xor
push
mov
clc
std
shl
mov
cmpsl
je
movsb
sub
out
std
subl
leave
loope
and
jg
scas
imul
or
fidivrl
push
vphsubbw
or
ror
sbb
jo
adc
adc
std
popf
rep
addb
repnz
mov
dec
les
mov
sbb
nop
xchg
dec
ret
adc
jecxz
xor
mov
dec
jl
call
inc
insl
nop
mov
lret
xor
and
or
insl
bound
imul
pusha
pop
mov
scas
mov
cmpsl
je
push
divl
mov
stos
ret
and
sub
out
or
in
push
inc
cld
dec
cmpsb
and
lahf
jl
fiadds
outsl
in
hlt
cmpsl
fdivl
jbe
pushf
xchg
sbb
addr16
push
aad
out
add
push
push
in
dec
inc
cmp
or
cmp
add
mov
jp
sahf
insl
lds
lods
push
repz
ret
xchg
sub
jnp
cmpsl
jle
jb
iret
mov
mov
clc
cmc
sub
or
xchg
jno
or
pop
ret
add
addr16
sub
scas
push
add
mov
mov
add
lahf
sub
dec
cmp
lock
xor
pop
fprem
jne
loopne
out
inc
jg
push
pop
dec
or
gs
fisubrs
or
cmovp
dec
int3
add
dec
popf
sub
or
arpl
or
inc
and
dec
js
aas
xchg
cmp
inc
inc
push
mov
sub
sbb
push
arpl
jns
sub
int3
inc
inc
stc
or
dec
add
adc
clc
icebp
push
xchg
fs
iret
stc
stos
xchg
filds
loopne
loopne
arpl
sbb
movsb
cmpsl
push
aad
fimull
inc
mov
in
sbb
pop
lods
xor
push
inc
add
push
aad
jle
lret
mov
push
ljmp
out
aam
adc
in
xchg
imul
sbb
enter
gs
call
push
sbb
dec
loope
push
lret
xchg
push
inc
lods
andps
loop
fmul
stos
pop
push
dec
push
xor
ja
notb
int
inc
imul
push
sub
push
push
cs
pop
xchg
hlt
arpl
push
inc
mov
jl
test
push
lcall
test
or
xchg
xchg
lahf
notb
dec
stos
sub
popa
aam
aam
pusha
inc
lods
and
sub
mov
adc
xor
jns
hlt
arpl
insb
scas
push
ret
dec
sbb
jbe
mov
xchg
cmp
push
sub
dec
dec
adc
sbb
out
ret
into
rcrb
hlt
icebp
aas
arpl
sahf
mov
cmp
subb
das
repnz
mov
rcrl
ja
and
mov
aaa
in
inc
adc
add
mov
fs
int3
mov
inc
adc
int
jnp
mov
push
jne
xchg
pop
inc
stos
push
sbb
ja
aas
cltd
push
inc
iret
jbe
sub
faddl
leave
xlat
jge
loopne
xchg
jne
imul
int
jmp
jnp
mov
fimull
mov
jnp
mov
stos
inc
jl
mov
xchg
mov
sub
jo
push
cmpsb
arpl
push
jo
into
lods
mov
pop
mov
lcall
pop
adc
push
aas
sbb
and
mov
mov
bound
enter
stos
push
xchg
aaa
dec
adc
mov
jge
jle
jae
xlat
jge
xlat
dec
jb
cmp
jo
bswap
xchg
call
aaa
dec
testl
leave
xor
push
xchg
jl
fs
ret
clc
pop
and
push
sbb
add
mov
sbb
scas
jns
mov
movsl
mov
add
cld
jnp
pop
clc
dec
loope
mov
lock
sbb
out
push
mov
xor
sub
loop
in
or
stos
jle
cmp
and
push
stos
leave
rorb
daa
in
fldl
aaa
loope
mov
scas
jmp
ret
sub
mov
push
add
cmpsb
sub
shr
xchg
push
mov
adc
pop
ficoms
or
dec
sarb
pusha
pop
aas
in
ficoms
inc
aaa
or
aas
jl
and
xor
sub
loope
sub
in
dec
addl
dec
cwtl
adc
lahf
inc
insl
sahf
mov
loop
add
sub
repnz
and
adc
sbb
je
dec
xchg
mov
and
adc
popa
mov
pop
add
pop
or
scas
adc
ljmp
test
push
loopne
xlat
das
mov
adc
and
je
test
in
fldpi
aaa
mov
movsl
xlat
and
out
xor
ret
je
cltd
mov
adc
daa
lock
test
in
xor
jbe
push
push
adc
sub
inc
bound
xor
fs
mul
stos
mov
xchg
movsb
xchg
out
imul
or
movsb
adc
shrb
pop
sahf
js
adc
cmp
and
mov
add
push
mov
jmp
push
mov
pop
inc
jb
push
fcmovnu
cmp
jmp
add
add
nop
pop
aam
push
jns
es
adcb
jmp
das
xchg
lods
inc
push
pop
push
add
fbstp
jmp
jmp
adc
aaa
pop
xor
gs
pusha
aas
mov
dec
aas
loopne
mov
sbb
sub
fildl
shll
sbbb
out
ds
rcr
icebp
shrl
and
in
clc
psubb
int3
mov
ret
int
jg
add
std
or
dec
mov
or
jb
pushf
and
dec
cmp
mov
cld
or
dec
cmpsb
imul
daa
sti
cmc
les
add
das
xor
popf
push
jle
lds
and
rcr
test
fnstsw
mov
xchg
inc
and
inc
in
push
jge
or
addr16
pop
cld
out
cmc
inc
rorl
data16
out
sub
test
stos
sahf
test
mov
push
nop
pop
push
mov
push
dec
movsb
lcall
sarl
inc
fadds
inc
repz
jae
jno
addr16
clc
pop
push
rol
xorb
in
popf
mov
jno
inc
leave
xchg
mov
in
pop
jb
divb
test
mov
int
lcall
mov
jae
ficoms
pop
mov
out
jb
push
popf
mov
push
out
dec
loop
xor
lods
mov
test
lahf
xchg
mov
gs
bswap
hlt
cmp
pop
cwtl
lahf
or
lods
xchg
dec
sbb
lods
fdiv
push
pop
fbstp
mov
or
xchg
mov
stos
mov
sbb
mov
or
cwtl
xchg
cmpsb
sub
push
mov
cmpsb
in
mulb
rorb
push
movsl
into
lret
sub
pop
mov
test
add
pop
scas
ljmp
cmc
lcall
daa
xor
nop
mov
mov
xor
mov
fs
fstpl
stos
jle
push
outsl
push
add
mov
nop
imul
and
mov
sub
movq
push
lea
call
out
and
std
scas
push
cwtl
cmc
inc
push
push
sbb
jno
ljmp
pop
add
jne
lods
push
pop
pop
outsb
loop
ret
jp
inc
add
mov
movsl
ret
imul
idivl
shlb
ror
xchg
lods
fidivs
lahf
add
sub
xchg
sub
stos
and
insb
sub
icebp
std
mov
mov
leave
or
jns
lods
std
mov
xorl
test
mov
pop
int3
addr16
xor
push
loopne
xor
data16
xor
je
push
jge
cmp
xor
add
xor
adc
dec
in
jne
xchg
add
or
or
les
into
or
rolb
js
imul
aad
pop
jnp
push
ljmp
iret
jbe
jp
push
popf
in
push
fstp
enter
shlb
add
inc
xor
fldl
test
push
xchg
xchg
push
mov
and
add
fisttpll
daa
test
and
ja
idivw
aas
sub
xlat
or
cli
add
fs
or
or
sbb
mov
xchg
subb
cltd
es
or
add
insl
hlt
sbb
test
mov
push
sbb
mov
pop
or
repnz
rep
out
jl
int3
movsb
ret
test
mov
sbb
cmp
imul
xor
lea
or
sub
push
bound
xor
mov
inc
cmp
iret
jl
ja
sti
test
jns
std
int3
mov
mov
inc
test
imul
and
stos
dec
mov
cli
push
test
ds
lock
call
aam
mov
xchg
inc
jmp
repnz
xchg
lods
xor
inc
add
addr16
pop
push
dec
mov
pop
es
aaa
out
inc
fisubrs
lods
sbb
cmp
inc
movsl
push
mov
inc
dec
je
cmp
mov
gs
test
repnz
outsb
add
jne
pop
jp
fistl
push
fcmovne
mov
dec
popa
mov
pop
adc
sbb
data16
sbb
dec
jns
jecxz
push
mov
lret
mov
out
xchg
cltd
ds
inc
bound
mov
popf
xchg
out
sbb
pop
push
imul
sub
lret
lock
fidivl
push
jp
dec
sbb
dec
into
outsb
nop
out
cmp
pop
jo
push
shlb
pop
mov
out
insb
push
mov
adc
aad
movsb
pop
jmp
sub
jns
sbb
jb
lahf
jg
mov
jo
jmp
xor
push
or
arpl
mov
mov
imul
out
jae
daa
out
sub
jge
cli
int3
or
fwait
cwtl
or
dec
or
xchg
sub
test
pop
movsb
lahf
iret
hlt
je
out
test
call
fsubs
fwait
sub
icebp
mov
aam
push
ja
cltd
loope
inc
mov
sbb
and
addr16
mov
fsubl
sarb
mov
cmpsb
in
repnz
cmpsb
adc
xor
adc
sarb
aam
dec
mov
adc
inc
xchg
cmp
push
add
inc
mov
jle
fwait
mov
popa
pushf
push
mov
adc
mov
pop
and
push
inc
inc
out
das
inc
cmp
jl
mov
push
scas
hlt
mov
pop
stos
xchg
lret
aas
aam
pop
or
cmp
std
loopne
cld
sbb
or
test
shll
pop
inc
cs
push
jp
addr16
mov
push
fildll
mov
shrb
negb
xchg
xor
js
test
loope
stos
ds
popa
mov
push
out
fs
outsl
dec
es
mov
mov
les
inc
mov
test
mov
jno
mulb
mov
mov
sub
push
jg
jp
adc
fsts
mov
jg
shlb
mov
in
into
cmp
shl
mov
call
sbb
in
mov
sbb
pusha
add
outsb
jne
mull
loopne
std
lds
inc
mov
xor
mov
xor
call
mov
xlat
bound
sub
push
push
push
cltd
mov
xor
das
in
mov
xchg
sbb
cmp
push
andb
lock
je
jp
imulb
pushf
jb
aad
lods
and
fwait
xor
cmp
clc
inc
sbb
imul
fcoms
push
and
mov
loopne
and
sarl
cmp
xchg
jmp
rcrb
push
ljmp
jns
mov
mov
mov
insl
xchg
sahf
fstpt
lea
sbb
jo
rol
cmp
xlat
lods
xchg
dec
pop
popl
les
fwait
cmpsl
lret
addr16
mov
adc
mov
ljmp
test
clc
rcll
cs
pop
pop
sti
cld
leave
adc
lods
je
ja
or
pop
popf
mov
mov
or
cmp
mov
sub
lods
pop
bound
push
shl
mov
push
stos
in
fbld
mov
hlt
sub
cmpsl
lret
add
push
xor
icebp
mov
popa
pop
or
inc
movsl
outsb
addl
insl
ss
dec
push
or
orb
es
mov
loope
add
sub
xor
mov
jne
sahf
push
inc
sbb
push
cmpsb
mov
mov
xchg
pusha
arpl
push
out
mov
xchg
adc
pop
stc
pop
xor
jae
out
inc
jp
into
daa
sub
in
add
push
pushf
test
outsl
rclb
ja
lods
rcr
mov
jl
cld
arpl
mov
sub
lea
rcrl
std
loopew
mov
jbe
sub
or
out
jb
popf
add
fdivrl
push
repnz
out
notb
jp
push
xchg
xlat
mov
add
or
pop
aad
lret
mov
pop
rclb
push
mov
js
mov
add
lds
ret
sub
jmp
sahf
jns
push
inc
mov
push
movsb
dec
push
mov
lods
or
push
push
cbtw
inc
nop
test
push
call
cmp
pop
and
and
cmp
lcall
popa
jbe
or
addps
pop
in
mov
call
jns
jg
xor
popf
repnz
xchg
aaa
sbb
jp
push
in
mov
mov
mov
mov
mov
push
and
cli
insl
lcall
push
and
add
push
scas
push
ja
pop
dec
fidivl
adc
push
lea
decl
lods
jne
movsb
stc
adc
sbb
mov
pop
popa
fcmovbe
jmp
inc
push
outsb
ja
aaa
lret
push
mov
dec
sub
int3
lods
out
daa
int3
and
cmp
shr
stos
pusha
cmpsb
adc
lods
movb
add
cmp
xor
test
mul
dec
xchg
add
push
shl
aas
fcoml
sahf
push
subl
and
mov
cld
fnstenv
jp
int3
lods
cltd
xor
or
test
hlt
hlt
add
lcall
jb
imul
adc
shlb
lods
movups
movsb
rcr
sar
adc
jle
lret
fnsave
mov
loop
jmp
push
add
test
divb
xchg
loopne
dec
mov
test
hlt
push
cli
xchg
xchg
lcall
cwtl
adc
sbb
icebp
iret
imul
cld
jbe
inc
outsl
cmpsb
cs
aad
pop
sbb
mov
cmp
call
mov
imull
lds
cmp
bound
or
push
mov
lret
or
data16
lcall
rol
mov
shrb
test
mov
jle
pop
push
add
daa
lret
jle
clc
mov
loope
adc
dec
adc
mull
pop
jecxz
mov
xor
jg
imul
mull
ljmp
and
popl
or
mov
arpl
mov
fists
sbb
in
scas
inc
mov
das
insl
mov
arpl
or
leave
repnz
xchg
jb
cmpsl
pop
sti
fldl
cli
add
bound
mov
lahf
fadd
dec
insb
movsl
pop
cmpsl
pop
aad
push
sbb
pop
out
jge
lcall
outsl
scas
aad
jle
int3
mov
mov
inc
or
gs
jmp
inc
cmp
je
fimull
out
test
es
jno
cmp
inc
adc
pop
mov
daa
jo
xor
jecxz
stc
subl
int3
aad
jp
lret
jl
push
mov
cmp
jmp
jl
adc
movsl
fstp
sahf
inc
sub
aas
leave
push
cmp
add
cmpsl
jecxz
fs
daa
xchg
and
mov
into
bound
sub
mov
push
jns
jno
xor
mov
jecxz
sbb
xlat
dec
jns
fstps
cmpsl
stos
and
sbbl
loope
stos
mov
aaa
sti
loop
jle
jns
adc
lods
inc
popa
jnp
mov
fnsave
pop
mov
lret
mov
or
dec
sbb
fwait
add
aaa
int
popf
xchg
in
test
xchg
adc
xchg
clc
pop
xor
xchg
xchg
test
sub
cmp
ret
inc
rcll
int
iret
xor
push
mov
lods
mov
push
inc
jmp
mov
sub
cmp
dec
dec
loopne
rorb
pushf
sbb
cmpsl
push
cmp
xor
xchg
movsl
jo
mov
xor
mov
cmp
lcall
adc
aam
ret
cld
xlat
data16
mov
dec
xor
and
add
filds
lods
jp
mov
inc
arpl
movsb
pushf
into
inc
cmpsb
cmp
sub
adc
xchg
cmpsl
jecxz
movsb
dec
movsb
fwait
mov
jle
add
push
insl
cltd
or
pushf
or
arpl
scas
cwtl
in
cmp
cmpb
lock
lods
aam
or
in
add
subl
mov
jge
fldcw
pop
adc
js
xor
div
xchg
gs
adc
daa
out
movsb
test
out
add
dec
push
test
jge
cmp
xor
pop
push
pushf
cmp
stos
mov
inc
aad
aas
mov
loopne
div
mov
lock
and
and
jg
lds
mov
sub
scas
pop
mov
call
fsubl
add
cmp
mov
es
jne
inc
js
push
call
in
add
js
lret
imul
shl
inc
dec
dec
inc
rcrb
mov
stos
les
push
aas
mov
sbb
adc
js
pop
sub
adc
lods
mov
sbb
scas
jns
addr16
inc
xchg
xchg
pop
xchg
fildll
push
mov
or
movsb
xchg
xchg
xchg
aad
popa
movsl
or
imul
push
mov
ret
jp
adc
xchg
inc
popa
mov
movsb
ss
flds
sub
mov
dec
enter
pop
es
mov
jp,pt
sbb
sub
pusha
inc
push
pushf
cmp
mov
lock
xchg
insb
push
inc
add
sub
rclb
fdivr
xchg
pop
out
jg
adc
fisubrs
ds
sub
mov
mov
pop
std
lcall
pop
push
push
xor
pop
jo
dec
aam
sbbb
or
out
mov
mov
sbb
add
idivl
lods
std
add
xchg
fists
les
fwait
and
mov
mov
out
pop
dec
push
and
enter
pop
mov
dec
push
push
mov
cld
pop
push
enter
test
insl
loope
jb
jns
addr16
bound
adc
add
dec
pop
adc
sub
aad
in
arpl
xchg
test
sbb
or
mov
mov
add
xor
add
or
push
xlat
outsb
cmpsl
xor
push
adc
pop
outsl
xor
imul
jge
cs
mov
lea
aas
cmpsb
cwtl
xchg
in
lcall
jge
adc
pop
jns
cli
dec
lds
arpl
movsb
into
aaa
and
xchg
xchg
mov
loop
pop
adc
lods
pop
cltd
dec
sbb
inc
mov
je
add
sti
mov
add
loop
or
sub
add
jmp
jge
inc
lahf
mov
inc
popf
sarb
dec
dec
icebp
dec
xor
sbb
jo
jmp
mov
lret
mov
sbb
test
dec
mov
add
dec
jo
into
mov
push
lods
data16
cmc
push
or
dec
lods
jg
add
je
in
sub
movsl
push
xor
jno
fs
loope
jp
or
cmp
fidivrl
jp
cmp
aad
sbb
mov
add
jp
fistpl
pop
fimuls
pushf
rcrl
add
push
push
test
cmpsb
mov
pop
pop
and
out
adc
imul
add
and
push
fidivl
lret
inc
jle
inc
inc
out
cs
push
inc
mov
mov
push
mov
or
mov
adc
adc
and
inc
xor
popf
cmp
loope
cmpsl
mov
xlat
iret
pop
and
inc
and
inc
xchg
popf
push
rolb
inc
mov
jge
aaa
xchg
shlb
pop
imul
ja
add
icebp
push
jge
mov
dec
add
scas
in
cmpsl
roll
sbb
or
or
clc
xor
inc
mov
and
jle
movsb
jle
cli
inc
iret
in
jle
adc
push
mov
and
xchg
or
fdivl
sub
jmp
or
cmp
xchg
jb,pn
xor
mov
ret
push
pop
and
sbbl
add
cmp
add
out
xchg
mov
shlb
sub
stos
cmpsl
mov
data16
cld
pop
jmp
adc
movsb
mov
jg
cmp
pextrw
stos
push
xor
mov
cmpsl
leave
lods
fwait
loopne
mov
adc
pushf
rorb
popa
cwtl
and
inc
out
cli
xor
and
in
fucomi
std
push
cmovle
test
ds
stc
mov
jo
jo
mov
inc
mov
ret
loopne
insl
out
int3
or
fcomip
add
inc
sbb
add
inc
xlat
sbb
push
mov
out
movsb
dec
cmpsb
or
cmp
mov
cmp
pop
rcrl
jl
mov
pop
leave
std
mov
mov
mov
mov
test
aam
jne
test
imul
loopne
xchg
aas
pop
mov
or
scas
pop
cli
paddusw
add
xchg
jae
in
mov
hlt
jge
push
data16
test
mov
ret
push
insl
cmp
xchg
xchg
push
shlb
mov
in
dec
cmp
fnstenv
dec
dec
jmp
jae
push
das
cmp
iret
cmc
lods
jo
cli
movsl
mov
fiaddl
jb
sub
xchg
int
fstpt
jno
or
mov
jg
add
xor
orl
cmc
jecxz
or
inc
out
or
in
push
pop
mov
dec
dec
cld
xor
mov
pop
mov
push
movsb
xor
loop
fists
fdivrl
iret
scas
inc
sub
push
in
test
mov
push
jnp
int
cmp
movsl
inc
push
push
mov
mov
jbe
pop
xorl
xor
scas
ret
stos
xchg
es
mov
push
pop
push
or
push
in
out
cmpsl
mov
dec
cltd
sti
xchg
and
mov
add
sub
mov
int3
sbb
add
inc
fxch
clc
pop
sarb
pop
std
in
sbb
clc
xor
adc
cmp
fadds
lea
mov
sahf
aaa
jne
popa
push
pop
jp
adc
jnp
cwtl
cwtl
sub
ja
lcall
mov
xor
sub
ss
ss
jg
dec
arpl
lahf
pushf
popl
mov
movsb
mov
push
dec
push
jbe
fsts
mov
mov
push
sti
inc
test
pop
sub
sub
pop
loope
pushf
xlat
mov
lock
xchg
inc
dec
lea
and
mov
js
xor
add
mov
cmpsb
mov
out
mov
in
lods
stos
and
mov
dec
stos
mov
xchg
xchg
xor
div
test
loopne
int3
inc
sti
jne
sbb
sbb
outsb
sub
pop
sub
pop
ss
aaa
pusha
sbb
mov
add
pushf
dec
or
repz
in
sbb
hlt
and
adc
loope
pop
and
mov
nop
xor
mov
sbb
sbb
loope
test
loope
pop
mov
sub
dec
in
aad
xchg
mov
movsl
clc
outsb
sahf
mov
enter
sub
mov
loop
mov
jmp
lea
add
xor
cmp
nop
daa
es
test
sub
pop
sbb
sbb
sarl
and
or
xor
jb
xor
repz
xlat
inc
pusha
push
push
xor
mov
or
sub
int
lcall
mov
adc
cmp
cmp
mov
xor
xor
inc
jg
pop
mov
push
mov
lret
popa
xchg
xor
xlat
cmpsb
jmp
or
adc
ja
lods
mov
xor
sbb
xchg
inc
fidivl
movsl
jle
mov
or
movsb
cmp
repnz
loopne
xor
inc
mov
fldenv
pop
or
mov
aaa
pop
das
jae
out
mov
insl
add
lds
jle
cli
test
mov
pop
sbb
addr16
inc
mov
data16
mov
push
test
mov
jg
mov
xchg
sbb
pop
call
in
pusha
call
in
jecxz
mov
inc
test
gs
push
mov
xor
sub
mov
stos
push
mov
bnd
sbbb
cmpb
lods
add
sub
mov
xchg
lods
and
aas
mov
stc
fmuls
pop
adc
sbb
jne
sub
xchg
add
cmp
call
push
das
xchg
dec
pop
xor
add
outsb
pop
and
ficompl
mov
jne
jo
std
xchg
sbb
adc
push
xchg
inc
jmp
fisubrs
imul
sbb
std
repz
jae
dec
ds
cmp
jecxz
adc
je
test
mov
push
aam
pop
mov
jo
mov
cmp
rcll
adc
and
ds
jae
outsl
pop
clc
sub
mov
add
add
mov
mov
dec
xor
mov
pop
std
ss
pop
clc
lret
mov
pop
jl
sub
jo
fidivrs
push
frstor
cli
adc
add
pop
aad
cmc
mov
sar
loop
jne
inc
xchg
cmpsl
inc
add
jns
adc
or
lcall
fistps
movsl
orb
mov
adc
push
lcall
cmp
int
insb
jo
in
push
mov
sub
jge
ja
fwait
ja
or
sub
push
into
cmp
sbb
std
mov
sbb
inc
xor
push
inc
shl
int
test
movb
jg
outsb
leave
movsl
dec
dec
fidivl
cmc
idivb
pop
jbe
repz
sarl
mov
dec
je
lods
or
sbb
imul
dec
mov
lcall
outsb
mov
xchg
cmp
loope
xchg
add
xchg
and
incl
mov
cmp
push
sbb
loopne
scas
bound
adc
jg
mov
cmp
popa
and
in
sarl
fistpl
cmp
loop
and
jbe
lret
jo
push
mov
stos
mov
js
lret
rcll
mov
cmp
sbb
push
mov
dec
std
jmp
scas
xchg
pop
push
add
jnp
aam
mov
les
mov
xlat
mov
add
sbb
das
iret
xchg
mov
out
nop
sti
jle
rdtsc
pop
push
das
mov
dec
mov
sbb
dec
cmp
push
sub
js
sbb
inc
pusha
popa
call
jecxz
xor
mov
dec
jle
in
stc
xchg
pop
xchg
inc
iret
push
mov
and
jo
sbb
aam
cmp
push
adc
cmp
or
fmuls
adc
mov
jmp
adc
mov
ret
ftst
xchg
stc
out
jmp
leave
pushf
xor
bound
fidivl
clc
outsb
cmpsb
mov
cmpsl
frstor
cltd
push
aad
nop
inc
adc
or
ds
call
xchg
pop
in
out
or
aam
call
test
es
idivb
xor
lods
jecxz
andb
mov
fucomi
pusha
push
pop
out
fcmovne
push
adc
pop
das
add
clc
shlb
xor
fsts
in
inc
aad
inc
stos
mov
mov
or
mov
fisttpll
mov
repnz
push
push
outsb
lahf
pushf
cmp
push
das
push
fisttps
in
xor
popa
in
jae
inc
jp
inc
fnstsw
sbb
in
mov
lahf
lods
adc
mov
xchg
mov
enter
movsl
leave
sub
mov
outsb
aaa
sbb
pop
scas
xchg
imul
add
mov
and
push
cmpsb
mov
sbb
jle
in
xor
mov
lcall
xor
pop
dec
xor
mov
jg
jmp
sub
push
enter
sahf
or
push
stc
mov
mov
pop
ret
jl
mov
popa
mov
push
int3
mov
in
jne
out
mov
mov
rep
into
mov
mov
adc
jns
xor
jp
nop
inc
pop
inc
jmp
sub
call
mov
push
mov
jnp
mov
in
mov
cwtl
into
stos
pop
mov
test
mov
jne
imul
jns
sti
push
into
jl
pop
mov
test
sti
adc
pop
cmc
inc
sub
std
fs
sahf
ror
das
test
xchg
push
dec
gs
xchg
mov
dec
out
das
adc
int
jge
inc
pop
jae
rclb
popa
mov
cld
mov
test
or
mov
imul
idivl
daa
mov
sahf
or
sub
fs
mov
dec
lret
mov
or
fcomp
cmpsb
inc
stos
sarb
mov
cmp
adc
lock
std
sub
add
lods
sbb
fisubs
jg
jg
push
out
sub
mov
fmull
cmp
pusha
xorl
cli
lock
sub
mov
call
or
sbb
fildll
int
xchg
push
inc
cmp
jp
mov
mov
adc
pop
mov
adc
jbe
mov
ffree
mov
loope
je
adc
push
dec
mov
movsb
mov
mov
mov
aas
shl
fs
adc
faddl
mov
push
jecxz
ss
outsl
popf
inc
cltd
fisttpl
jle
xor
out
movsl
cmp
pop
adc
movsl
mov
jle
sar
daa
mov
mov
mov
xchg
cmpsb
ljmp
jb
lock
push
out
dec
sbb
sti
fiaddl
mov
mov
add
pop
pop
out
lods
mov
fbstp
sahf
sub
shlb
xchg
rclb
decb
xchg
pop
or
jmp
cmp
sahf
inc
xlat
push
pop
sbb
rcr
sbb
sub
sarl
push
cmp
or
dec
sub
jns
xchg
addb
jae
leave
inc
insb
jns
hlt
cmp
pop
data16
add
incl
hlt
ret
add
and
popf
sub
popf
dec
andl
notl
es
dec
aad
adc
adc
test
cmpsl
push
cmp
stos
subb
mov
cs
pop
push
outsl
jae
or
daa
push
dec
adc
mov
xchg
dec
jecxz
icebp
pmulhw
es
adc
dec
sahf
inc
imul
xchg
pop
xchg
jle
sbb
adc
jne
cltd
mov
movsl
and
mov
cwtl
mov
and
cmpsl
sbb
insl
sbb
add
pop
arpl
xlat
lea
aam
cmc
testl
dec
xchg
jecxz
pop
sub
aaa
out
shll
call
xor
es
cmp
lret
jecxz
jbe
adc
shlb
xchg
loop
jecxz
push
mov
xlat
sub
test
mov
movsl
lods
xchg
jg
push
or
clc
into
inc
sub
sbb
push
cmp
inc
inc
std
xor
decl
insl
out
pusha
aaa
shll
mov
sbb
les
or
out
and
sarb
in
iret
push
mov
mov
cld
dec
int3
lret
sbb
ficomps
mov
orl
sbb
xchg
ds
push
sbb
push
adc
xor
dec
xchg
fs
and
push
push
pusha
aaa
jne
pop
jp
repnz
repnz
sbb
fnstenv
outsl
jge
gs
call
jb
mov
jae
into
xor
push
ret
movsb
sarl
add
add
mov
andl
in
pop
sub
out
cmp
cli
bnd
add
fldt
ret
pop
pop
in
pop
call
or
addb
pop
push
cmp
cmc
sub
lods
add
sbb
ror
pop
lock
xchg
test
pushf
adc
mov
rcll
push
pop
mov
in
ret
movsl
lock
mov
sbb
xchg
sub
movsb
and
in
jge
test
pushf
xchg
and
jb
inc
loope
rcrb
aad
je
int3
mov
push
sbbb
push
test
and
mulb
mov
sbb
mov
adc
movsl
and
mov
les
addb
das
sbb
jl
lret
loop
test
mov
xchg
dec
jae
jne
clc
insb
cmp
cmc
aas
push
cmp
aam
cmc
fwait
xor
xor
mov
sti
mov
andl
jne
rol
jo
mov
jo
addr16
push
fdivrl
adc
xchg
in
pop
loopne
sarl
xor
mov
cmc
stos
mov
mov
push
mov
pop
movsb
dec
jge
mov
divb
pop
push
nop
shrb
shlb
push
lds
int
and
cli
inc
fsubrl
lret
icebp
es
mov
inc
js
mov
inc
push
fdiv
xor
into
nop
shlb
pop
hlt
pop
mov
cmp
and
dec
jmp
comiss
daa
rclb
mov
push
cmp
dec
inc
xchg
iret
adc
divb
add
outsb
xchg
xchg
mov
subb
sti
or
xadd
xchg
dec
sbbb
mov
push
and
sub
shl
and
mov
fstpt
cli
imul
pop
lods
mov
pop
jg
xchg
xchg
fwait
scas
xchg
pushf
pop
enter
mov
icebp
movsl
or
lods
jmp
cmovle
push
adc
insl
cmp
push
mov
adc
xor
push
jecxz
push
sub
cmpsl
scas
xor
and
adc
jo
jg
dec
fimuls
inc
mov
int3
xchg
cli
push
mov
mov
lcall
orl
sbb
cmpl
sahf
push
inc
mov
inc
and
fists
test
jae
xor
mov
mov
int
sar
outsl
roll
iret
call
lret
outsb
out
pop
adc
or
imul
cwtl
pushf
loop
mov
shrb
lds
mov
inc
stc
hlt
out
jl
xorb
outsb
data16
pop
pushf
jp
jns
pushf
mov
cmp
fdivrs
jg
psrld
inc
sahf
mov
xchg
jne
lods
adc
test
xor
push
push
adc
lret
xlat
stos
cld
push
sub
bswap
and
jb
subl
jbe
xchg
or
cwtl
outsl
inc
xor
and
gs
into
lds
lret
mov
outsb
lret
out
ja
fnstsw
sahf
repz
cmpsb
mov
xchg
aaa
mov
push
aad
out
ret
ret
pushf
leave
daa
test
out
stos
fs
mov
out
test
mov
fcomip
dec
ret
push
mov
cmp
sbb
subl
ret
or
cmp
pop
movsb
xchg
loop
int3
xchg
push
cmpb
jns
xor
dec
jbe
insb
decb
cmp
lea
xchg
cmpsl
or
mov
xchg
lods
mov
ud1
inc
fsubrl
jbe
mov
lret
test
fwait
xor
cmc
xor
mov
cmp
repz
jl
adc
push
fistl
sarb
or
stc
lea
mov
dec
int3
rolb
pop
push
pop
imul
jecxz
and
stos
int
call
aam
cmpsl
xor
inc
inc
xor
ds
cmc
test
scas
jnp
not
mov
inc
jge
shlb
aad
and
mov
mov
in
add
push
jmp
adc
sbb
xchg
xchg
or
xchg
outsl
cltd
ret
jp
dec
mov
sarl
cltd
ss
mov
xor
cmp
out
cs
xor
xchg
lds
xchg
filds
adc
andl
test
add
jmp
lret
push
cwtl
sub
ret
enter
bound
jne
jnp
and
in
pop
sub
cwtl
or
mov
sbb
xchg
cmc
add
cld
loope
int
loop
ja
push
jp
cwtl
add
in
ljmp
pushf
outsb
push
cmp
test
sahf
xchg
aam
xor
aad
pop
loop
popa
pop
flds
sub
in
rcrb
push
outsb
pop
push
arpl
sbb
shlb
mov
in
jo
dec
add
inc
xchg
push
mov
popa
stos
ja
xor
push
push
test
outsb
lods
pop
fsubrs
out
das
dec
mov
sbb
xor
fisttpl
mov
mov
cmc
pop
push
sub
imulb
mov
in
ds
xchg
add
xor
jg
xchg
and
out
rcll
out
push
jne
movsb
cmc
lret
icebp
iret
leave
xchg
pop
movsb
sub
jge
scas
pop
mov
movb
jecxz
pop
scas
and
test
cld
jb
adc
cmpsl
jbe
jns
sub
pop
sbb
test
inc
std
sub
jecxz
and
sahf
idiv
lods
jmp
out
pop
lret
jno
jmp
adc
cmp
dec
lahf
fmul
push
sbb
add
ss
add
mov
jo
addb
pop
jg
xor
push
sub
adc
out
pop
xor
or
aam
mov
popa
push
lahf
mov
sti
lds
mulb
inc
out
fnstcw
jle
mov
mov
out
fs
aas
adc
xchg
push
push
pop
push
ljmp
in
mov
test
rcrb
enter
clc
lret
dec
test
xor
cld
xor
cmpsl
pop
fucom
push
push
leave
jecxz
stos
mov
imul
xor
ds
sbb
ret
shrb
fdivrl
xchg
cmp
xor
push
lret
aam
mov
xchg
pop
iret
arpl
testb
sbb
leave
mov
clc
bound
mov
rcrb
adc
btr
mov
dec
sub
inc
inc
cli
mov
mov
js
das
or
xchg
cli
mov
aaa
in
dec
lcall
lea
rorb
call
cmp
jb
fsubr
inc
dec
aam
stos
adc
push
sbbl
pop
imul
mov
xor
in
or
push
sub
mov
nop
aad
cmp
iret
push
stos
out
jo
test
pop
rcl
stos
scas
test
fsubr
mov
int
push
push
or
and
jp
mov
push
and
lods
scas
pop
mov
lds
lret
add
call
in
testb
loopne
or
insb
sub
jle
in
mov
dec
dec
jo
lret
outsb
inc
sub
aaa
sti
in
xor
call
daa
mov
sbb
test
stc
sub
mov
rcr
movsl
pop
fwait
outsl
xchg
pop
in
mov
fadd
addb
aas
mov
imul
fisttpl
dec
adc
sahf
jmp
lds
test
jge
dec
dec
addb
bnd
popa
int
lret
decb
int3
fbstp
xchg
add
imul
test
mov
and
or
sar
imul
stos
sbb
loope
dec
lahf
adc
mov
inc
and
scas
sbb
or
int
xchg
in
mov
sbb
cltd
adc
inc
push
jmp
push
cli
and
sub
lock
mov
hlt
icebp
add
dec
xor
xchg
push
adc
jg
push
test
cwtl
sub
popf
je
cmpb
roll
lahf
lahf
xlat
xchg
mov
lds
mov
inc
jecxz
cmp
xchg
xor
mov
in
roll
movsl
sti
outsb
jb
adc
mov
gs
outsl
das
xchg
jge
movsb
mov
jle
push
cmp
rcrb
push
cltd
push
or
ds
inc
mov
repz
aam
clc
imul
xchg
je
sub
je
movsb
xor
test
jae
pusha
in
call
enter
sub
scas
jb
mov
out
xchg
gs
sub
sub
jmp
pop
daa
out
xor
inc
shlb
xchg
jnp
adc
mov
mov
std
xor
push
pop
js
adc
mov
ds
dec
ret
jecxz
and
ret
and
mov
cmp
sarb
imul
inc
int
mov
dec
shrl
mov
in
and
xor
into
int
cmp
jl
ret
mov
stc
repz
mov
arpl
je
fcomi
loop
sub
pop
lods
repz
popf
push
jl
inc
push
js
dec
lahf
leave
iret
and
sahf
adc
popa
insb
popl
je
push
xchg
test
je
insb
cmp
test
fwait
inc
jbe
add
arpl
lods
rorb
cmp
add
in
in
dec
inc
loopne
mov
fsubr
xchg
jbe
iret
pop
imul
scas
scas
aam
test
push
imul
or
in
dec
mov
sbb
test
jns
into
mov
cli
mov
xor
sbb
jns
pushf
mov
xchg
cld
stc
inc
ja
sub
fs
push
and
jno
or
xor
dec
sub
mov
pop
or
pop
mov
pop
fwait
rorb
jno
mov
sti
adc
bound
jo
and
cmc
adc
cmp
xchg
pop
add
stc
xor
add
add
pop
and
jp
aaa
fwait
lret
and
push
jo
and
mov
and
jo
es
ja
dec
xor
test
sarb
loope
jle
dec
pop
rorb
call
std
je
movsb
repnz
bound
xor
or
xchg
xchg
imul
sbb
mov
xor
xor
rolb
adc
neg
jge
push
ja
fmul
mov
mov
push
pushf
mov
sub
push
cwtl
repz
lret
xchg
inc
in
and
mov
jo
aas
pop
jb
sbb
repnz
pop
inc
mov
negl
add
je
cmp
movsb
and
push
lds
dec
outsb
fdivl
out
lods
sub
roll
push
lds
lea
adcb
insl
stos
ljmp
jb
or
test
mov
icebp
test
or
fcomip
lea
push
ficompl
std
jmp
cld
jle
arpl
repz
and
aad
sbb
aas
sbb
stos
adc
sub
push
popf
lret
ja
sbb
imul
lret
fldl
mov
enter
test
aaa
adc
mov
push
in
mov
cltd
fcomps
gs
dec
int3
sub
adc
push
jno
cli
imul
jmp
jae
out
jno
ret
movsl
lods
lret
mov
dec
xchg
pop
adc
lods
data16
or
mov
cld
sbb
cmc
popa
mov
push
out
stos
lcall
shr
mov
call
imul
mov
or
adcl
xor
pushf
fimuls
scas
sbb
xchg
mov
jp
xor
dec
mov
icebp
dec
mov
dec
nop
out
enter
gs
jnp
outsb
arpl
je
inc
stos
je
or
sbb
sub
out
xchg
jne
lods
lret
ja
and
mov
or
cmc
push
addr16
xor
das
cmp
adc
or
cld
loop
nop
fldl
push
pop
mov
nop
outsb
adc
sti
push
cld
fisubl
pop
sbb
icebp
icebp
imul
addr16
es
jl
testb
or
ljmp
pop
scas
mov
enter
mov
insl
cmp
cli
dec
sti
xor
cli
arpl
lret
pop
inc
mov
mov
stos
mov
pop
inc
std
mov
fisubs
jl
sbb
mov
dec
cli
mov
inc
xchg
sbb
cmp
adc
pop
pop
pop
sbb
lea
add
cmpsb
sbb
push
adc
ja
sti
jmp
fwait
outsl
jo
mov
inc
fildll
xchg
adc
push
jno
loope
popa
xor
or
pop
cmp
iret
into
mov
call
inc
addr16
dec
push
pop
xor
push
xor
int
fnsave
outsb
fwait
mov
sahf
jae
jns
lds
es
daa
jno
jnp
cltd
ret
jle
sbb
cmpsb
inc
and
dec
nop
mov
retw
mov
loop
push
ret
dec
fwait
sarl
loop
push
mov
call
icebp
jb
push
shr
test
jnp
pop
mov
jp
pop
insl
cmp
push
fcmovne
push
inc
add
push
and
mov
push
cld
pusha
or
dec
xlat
ror
mov
lds
jo
cs
scas
xchg
outsl
ss
mov
mov
sarb
in
shr
inc
or
les
daa
movsl
lods
mov
mov
pop
xor
fimuls
cwtl
pop
mov
or
mov
xchg
addr16
mov
fs
push
xor
fstpl
int3
movsl
xor
push
pop
insb
mov
lods
mov
pop
popa
gs
sbbl
and
sub
fstl
jns
push
imul
cmpsl
pop
shrl
xor
in
mov
das
mov
and
mov
in
inc
and
lock
mov
push
movsl
sbb
push
sbb
and
dec
and
imul
negl
ja
jl
mov
ja
sbb
div
movsb
jge
dec
sbb
loopne
test
mov
clc
mov
adc
testb
cmp
clc
es
push
push
movsl
dec
mov
mov
movsb
add
mov
call
in
push
xchg
adc
adc
iret
imull
repnz
xor
sbb
shll
repnz
dec
lods
push
bswap
outsl
xchg
mov
push
inc
repnz
fcmovb
lret
ljmp
movsl
cltd
xchg
xor
pusha
mov
push
rcr
jl
out
xchg
mov
sbb
jns
aas
mov
pop
dec
push
iret
fwait
iret
xor
cli
or
cs
jbe
xchg
lcall
pop
pop
lock
pop
aam
push
bound
mov
lret
test
lock
hlt
sub
mov
xchg
pop
dec
dec
or
ja
loop
or
leave
hlt
xchg
je
sub
xchg
dec
fldt
in
sbb
xchg
movsb
cmp
cwtl
pop
mov
sub
pop
dec
xchg
xlat
lds
jg
jp
imul
iret
pop
mov
fmul
jmp
sbb
add
lret
xor
add
scas
mov
sbb
sahf
repz
fsub
xchg
pop
push
or
mov
pop
lock
mov
out
jle
push
loop
stos
dec
xor
daa
cwtl
les
and
fiaddl
push
es
sbb
jae
jmp
push
in
in
jg
scas
jne
aam
les
fdivl
mov
pop
addr16
mov
add
mov
idiv
adc
out
scas
jecxz
popa
repz
ss
fisubrs
cltd
aam
pop
ja
sbb
xor
xor
pop
adc
out
stos
les
cmp
xchg
cmp
mov
hlt
mov
jae
int
xchg
mov
std
ds
fadds
xchg
rclb
push
out
test
sar
push
enter
xor
mov
xor
rcrl
std
or
xchg
aaa
ret
jnp
push
loop
call
rclb
and
jmp
pop
ja
andl
xchg
loopne
out
hlt
inc
sbbb
cltd
inc
inc
je
iret
or
mov
stos
sbb
mov
mov
negb
and
xchg
cmpsl
jmp
pop
outsb
mov
aam
mov
and
and
mov
jmp
imul
ja
xor
xchg
mov
inc
lret
jb
pop
inc
push
push
sbb
mov
mov
inc
lds
js
inc
xor
and
repz
mov
pop
ljmp
rcrb
push
out
int3
sti
push
dec
cltd
cmp
inc
mov
lock
in
popf
mov
push
idivb
cmp
adc
adc
xchg
dec
push
jnp
outsb
xchg
cmp
jnp
push
and
stc
sub
cmp
rolb
fldl
lret
cmp
mov
xchg
inc
ret
mov
jnp
outsb
jae
cld
mov
hlt
adc
pop
inc
xchg
pusha
add
push
jns
xchg
daa
inc
cs
xlat
out
movsb
and
sbb
aas
mov
cmpsl
shrb
roll
jp
pop
inc
sahf
ljmp
jne
pop
and
cmp
jns
ftst
in
inc
add
or
mov
or
inc
rorb
cpuid
call
pop
inc
mov
sub
cmp
movsb
mov
dec
ret
repnz
lret
xchg
ret
popf
jecxz
jae
xchg
andl
adc
sub
pop
aaa
mov
jmp
xchg
loope
sti
adc
jmp
xchg
and
jmp
bound
or
xor
test
nop
sbb
inc
pusha
cmp
sub
daa
cmp
mov
mov
inc
daa
out
cmp
hlt
cmp
pushf
mov
push
cmp
adc
ja
loop
loop
xor
pop
inc
jge
jp
insl
jmp
das
cmp
push
cmp
and
mov
mov
mov
xlat
dec
bnd
imulb
push
test
bound
das
lea
pop
or
shlb
push
frstor
sbb
insb
loope
scas
sbb
dec
dec
inc
jnp
dec
sarl
rep
inc
pop
outsl
fidivs
outsb
iret
insl
jnp
adc
cmpsl
cmpsb
in
arpl
fsub
pop
imul
jmp
test
xchg
lods
jp
pop
repnz
xchg
jmp
mov
insb
mov
pop
mov
fildll
mov
sbb
inc
imul
fcoml
push
mov
jbe
ljmp
ljmp
cmpsl
inc
icebp
pop
loopne
aad
bound
adc
clc
scas
mov
int
and
and
orb
add
jp
popa
arpl
xchg
pop
and
loope
pop
pop
cltd
int
and
cmpsl
inc
sbb
sarl
nop
jns
inc
gs
loopne
jns
jnp
js
lea
xor
adc
aad
ret
jmp
movsl
dec
movsl
sub
xlat
mov
push
xchg
pushf
xor
stos
jno
pop
cltd
fisubs
inc
push
adc
cmp
push
xchg
xchg
rorl
enter
xorb
je
in
cmp
push
mov
bnd
aad
or
lods
jg
cmp
lods
in
xor
sbb
cmp
inc
sbb
js
fcoml
test
mov
fmull
and
mov
int
push
adc
mov
push
pop
sub
and
stos
xlat
dec
sub
cmp
out
xor
mov
mov
pop
pop
add
mov
frstor
lret
sbb
andl
add
sti
mov
or
add
hlt
sbb
dec
and
mov
xor
out
repz
mov
popf
mov
mov
out
jnp
les
mov
and
push
aaa
ss
add
dec
mov
adc
add
notb
pusha
data16
or
in
adc
dec
xor
pop
push
lcall
pushf
loopne
gs
mov
xchg
sub
pop
sbb
or
ljmp
es
mov
in
add
mov
jmp
movsl
jle
addr16
dec
sbb
add
add
add
jo
jns
outsb
je
insb
jne
je
add
jae
add
add
add
add
data16
add
add
insl
add
add
imul
popa
add
jns
add
popa
outsb
add
add
add
imul
jns
outsl
add
add
add
jbe
add
add
jae
add
add
add
add
jae
add
add
jb
add
jae
popa
jb
add
add
je
add
outsl
push
imul
add
add
add
add
jb
outsw
jb
add
dec
outsl
ja
popa
add
add
popa
add
add
add
add
add
add
add
add
outsl
add
jb
add
bound
imul
add
add
add
insb
popa
push
add
add
inc
add
add
push
insb
insb
popa
push
je
bound
inc
add
add
add
add
add
add
add
add
add
jo
imul
add
add
jns
outsb
je
imul
dec
add
add
add
add
add
je
push
add
data16
add
outsb
add
add
insb
add
add
add
add
outsb
add
insb
popa
push
add
outsl
add
add
outsl
add
add
data16
insl
add
insb
add
jae
add
push
add
add
je
push
add
add
fs
imul
imul
