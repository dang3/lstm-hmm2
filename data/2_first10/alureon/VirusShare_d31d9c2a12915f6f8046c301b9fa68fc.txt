push
mov
sub
push
push
push
neg
ror
mov
lea
neg
push
not
rol
xchg
lea
rcr
mov
xor
lea
not
neg
ret
add
not
add
lea
rcr
not
lea
mov
mov
mov
not
ror
xor
neg
mov
lea
xor
not
call
xor
lea
add
not
rcl
lea
lea
xor
xor
neg
rol
mov
xchg
xor
neg
not
rcr
shl
mov
call
and
lea
adc
lea
mov
xchg
lea
add
add
add
xor
xchg
mov
rol
add
xor
xor
xor
mov
mov
push
xor
xor
xor
lea
shr
xor
and
adc
lea
xor
ror
xchg
push
mov
xchg
mov
add
xor
call
push
rol
mov
lea
xchg
not
mov
shl
xor
mov
pop
mov
lea
lea
add
ror
xor
xor
lea
mov
shl
add
rol
adc
neg
not
mov
mov
xor
mov
mov
mov
mov
lea
shl
add
cmp
je
shr
mov
mov
lea
add
shl
neg
mov
or
je
adc
lea
mov
mov
xor
and
mov
lea
xor
add
lea
add
mov
and
xor
xor
xor
shl
shr
ror
lea
xor
mov
mov
xor
neg
mov
mov
rcl
mov
adc
xor
mov
lea
neg
shl
mov
adc
neg
xor
rcr
mov
xchg
mov
xor
mov
xor
cmp
je
lea
neg
lea
xor
neg
rcr
xchg
shl
xchg
ror
and
xor
lea
adc
xor
and
lea
mov
mov
ror
push
call
xor
neg
lea
neg
mov
xchg
mov
mov
mov
neg
shr
lea
adc
xor
xchg
lea
lea
mov
add
neg
and
lea
ror
mov
add
lea
mov
lea
movl
mov
xchg
mov
lea
xor
ror
xchg
movl
lea
lea
rol
xchg
neg
mov
mov
adc
mov
rcr
xor
mov
xor
neg
shl
not
mov
xor
lea
lea
lea
add
mov
adc
mov
push
mov
add
shr
add
xor
push
mov
neg
xor
xor
add
mov
neg
pushl
xor
shl
xor
mov
add
adc
lea
pushl
rcr
xor
mov
mov
mov
mov
call
mov
add
shl
neg
mov
xor
xor
lea
lea
neg
add
mov
and
ror
not
neg
mov
mov
mov
rcl
mov
ror
xchg
shrl
xor
lea
shl
shr
xor
rcl
shr
not
mov
xchg
mov
xor
ror
mov
not
not
xor
mov
ror
neg
not
ror
rcr
xor
lea
shr
neg
lea
push
not
adc
lea
rcl
xchg
mov
not
mov
mov
lea
mov
lea
xchg
rcr
lea
lea
mov
mov
mov
lea
mov
and
neg
popl
lea
mov
xor
xor
xchg
mov
add
xor
lea
lea
mov
mov
rol
lea
rcr
xor
mov
decl
jne
xor
xchg
xchg
mov
lea
and
adc
lea
xor
shl
mov
xor
neg
rol
shl
xor
xor
xor
shl
xor
lea
xor
mov
lea
not
mov
neg
xor
mov
neg
jmp
ror
shl
mov
adc
adc
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jp
imul
add
int
jmp
pop
scas
add
pop
mov
push
xchg
jmp
inc
fistpll
stc
xor
call
jmp
fsubrl
bound
pop
and
scas
adc
add
and
sbb
jmp
jg
cmp
mov
pushf
add
pop
push
sbb
and
cmp
add
scas
add
push
inc
xor
xor
and
shrb
dec
sub
jmp
lcall
pop
mov
and
xor
push
mov
lea
or
push
jmp
in
mov
ret
push
pop
test
movsl
xchg
fldt
lcall
mov
xlat
jmp
sub
ljmp
out
inc
shrb
jmp
repz
adc
xor
push
jb
daa
sub
je
push
xor
push
or
ljmp
jmp
mov
bound
iret
out
je
cmp
gs
enter
int3
xlat
iret
xor
and
call
enter
sub
fcomps
decl
into
int3
test
int3
and
in
add
jmp
fcoms
pop
pop
xor
and
xor
in
mov
int3
movsb
xor
and
sti
mov
and
fnsetpm(287
mov
fdivrs
cmp
or
or
xor
sbb
dec
int3
and
cmp
inc
lret
dec
mov
scas
sub
int
out
sbb
push
in
mov
movhps
jno
lret
xor
and
sub
push
iret
mov
add
mov
add
scas
add
mov
cmp
push
push
dec
sbb
push
daa
mov
cmp
jmp
adc
add
push
xor
and
mov
inc
imul
add
and
pop
int3
dec
mov
les
fistl
mov
cmp
test
mov
out
sbb
and
rolb
inc
adc
and
sbb
test
int
fcmovnbe
mov
add
xor
mov
push
adc
test
add
ficoml
iret
inc
popa
sbb
sbb
and
mov
imul
iret
mull
out
fsubs
jmp
mov
dec
cmp
jo
sub
and
mov
cmp
sbb
pop
sbb
mov
mov
bound
daa
mov
pop
mov
cwtl
pusha
xor
pop
jecxz
out
and
pop
iret
xor
les
ljmp
andb
daa
mov
ret
xchg
mov
and
push
imull
lcall
cmp
push
mov
add
cmp
add
add
jmp
sbb
mov
bound
daa
pushf
iret
pop
loope
push
or
cld
xor
pop
push
cmp
iret
xor
jmp
mov
and
xor
das
pop
inc
lcall
push
dec
xchg
add
or
loop
movsb
test
dec
int
inc
pop
stc
mov
into
scas
push
xor
mov
lock
cmp
jo
jbe
bound
cwtl
int
repz
dec
mov
les
mov
out
fldl
out
scas
xor
inc
test
jmp
inc
les
pop
nop
int3
and
mov
inc
push
mov
sub
fldcw
add
mov
cmp
xor
and
bound
daa
push
int3
and
xor
jmp
inc
push
scas
hlt
int3
and
rcll
and
xor
movntq
mov
jo
add
xor
push
mov
inc
faddl
hlt
inc
dec
sbb
and
mov
int3
and
xor
bound
iret
push
loope
mov
xor
push
stc
xor
dec
call
loopne
iret
add
jmp
cmp
fs
test
les
bound
cmc
insb
icebp
inc
cmp
loope
xchg
cmp
enter
or
in
xor
xor
fsubrs
sbb
mov
enter
dec
pushf
sub
or
loope
mov
push
mov
cmp
xor
neg
das
stc
sbb
add
nop
rorb
dec
stc
jg
addr16
rorl
pop
aas
loopne
int
in
sub
cmp
adc
xor
aaa
mov
or
ljmp
xchg
loope
jae
inc
movl
cmp
mov
mov
push
pusha
mov
rcr
in
decb
lcall
inc
in
in
in
test
fisttpl
in
jno
mov
mov
mov
ret
adc
pop
pushf
and
aaa
ljmp
mov
int
mov
sub
mov
outsl
int
mov
cltd
scas
add
or
test
in
cmpsb
sub
les
pop
data16
cmp
dec
mov
adc
and
or
push
out
insl
and
mov
stc
cmovl
loope
ret
aaa
dec
in
xor
sub
xor
dec
out
cmp
xor
cmp
or
jae
and
mov
fildl
mov
clc
je
and
les
das
fwait
jb
lds
in
fsub
scas
inc
call
sbb
fldenv
insb
js
or
add
add
lods
xor
loope
pop
iret
jge
add
xor
sub
nop
fstl
xor
lods
insb
addr16
mov
inc
xor
ss
pop
js
sub
pusha
shl
or
out
jno
in
sub
adc
sub
sbb
sub
lret
xchg
loope
mov
inc
dec
sbb
out
jle
mov
test
loopne
addr16
xor
stc
enter
adc
adc
push
dec
jge
int3
fimull
inc
into
jns
pop
push
cmp
xchg
pop
mov
sub
jae
mov
inc
and
mov
lods
cmp
stos
insl
fs
test
stos
xor
aam
bnd
fiadds
mov
int3
mov
das
inc
sti
mov
mov
cld
xlat
and
xlat
mov
or
push
outsl
dec
mov
jge
aam
cmpsl
or
xor
int
jle
and
xchg
pop
mov
push
aad
xchg
pusha
divl
ret
lret
lea
adc
shl
andb
outsb
or
and
fstpt
adc
lret
adc
and
inc
insb
xchg
mov
int
enter
pop
lret
dec
sub
jl
push
es
mov
nop
jmp
jbe
cmp
adc
leave
mov
dec
xchg
inc
push
or
scas
pop
mov
inc
aad
notb
inc
popl
mov
push
orb
mov
orb
stos
pop
stos
push
mov
dec
mov
inc
pop
add
push
lahf
push
lods
dec
mov
nop
insb
adc
sub
imul
stos
inc
xor
pop
mov
cltd
rcrl
nop
add
jg
mov
and
pushf
inc
push
adc
dec
out
stos
xchg
cmp
jecxz
in
cld
cwtl
into
inc
cmp
std
adc
adc
addr16
adc
shlb
faddl
aam
sbb
sti
js
fstpt
jno
pop
movsl
addr16
je
push
test
sbb
add
lahf
sbb
or
or
dec
test
sbb
inc
jb
mov
ds
jnp
xchg
sar
or
add
lcall
imul
cld
mov
add
sub
out
int
mov
cmpsl
xlat
push
jns
in
xchg
pusha
mov
add
adc
aaa
jecxz
test
test
std
fisubrs
test
in
rolb
movsb
add
test
cwtl
dec
xchg
addr16
sub
idivl
jmp
movsl
ret
lods
lret
stos
pop
scas
fcmovbe
push
mov
mov
into
pop
in
xor
cmp
jo
cmp
imul
xchg
sub
fs
js
xor
bound
lods
add
mov
in
rclb
imul
add
icebp
sbb
in
fbstp
push
std
les
sub
xor
mov
mov
ljmp
cmp
test
mov
push
mov
sub
mov
jno
mov
repnz
add
fs
push
lods
jno
mov
nop
dec
cmpsb
sbb
in
loope
push
push
call
leave
push
inc
sub
mov
mov
ja
add
stos
js
pop
xor
lock
xorb
inc
dec
xchg
push
or
mov
dec
orl
in
nop
mov
jbe
cli
mov
sbb
inc
roll
mov
pop
mov
adc
xor
mov
dec
xchg
test
pop
pop
jne
movsl
fstpl
loopne
out
dec
pushf
add
push
test
int
mov
cmp
push
mov
mov
mov
mov
push
es
repnz
add
push
inc
dec
cmc
sbb
mov
adc
int3
