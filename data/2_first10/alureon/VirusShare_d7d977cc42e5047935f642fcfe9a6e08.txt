push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
add
adc
jp
repz
orl
ss
mov
fistps
gs
std
cld
or
pop
mov
loope
fimull
mov
sub
pop
clc
fisttps
pop
daa
and
leave
push
fimull
mov
cmp
add
or
insl
xor
cmc
je
lods
push
icebp
icebp
icebp
es
xchg
dec
push
in
add
push
push
lret
iret
orb
and
imul
xchg
imul
jno
mov
imul
add
mov
sub
arpl
sbb
decl
jle
fcoms
test
ds
leave
stc
or
cwtl
dec
stos
fdiv
push
cmp
icebp
pop
or
ror
addr16
push
rorl
call
sbb
push
insl
jbe
cmp
test
lret
lret
inc
cmp
xor
or
dec
xor
pop
fwait
or
ret
and
add
add
pop
sbb
inc
shl
mov
xchg
adc
cmp
add
out
xchg
xchg
insb
idivl
sbb
dec
cmp
mov
cltd
mov
inc
out
es
test
xor
test
cmc
pop
cmp
and
add
xor
cmp
hlt
mov
loopne
fmuls
inc
fmull
repnz
jno
sbb
pop
cli
add
add
add
leave
jmp
stc
push
mov
in
push
xchg
add
sub
mov
mov
xor
sub
mov
imulb
lds
shlb
shlb
sbb
add
fisttpl
cmp
and
xchg
mov
dec
scas
pop
push
xor
clc
push
aam
cmp
xchg
dec
ret
xchg
ljmp
xor
cmpsl
cmp
jl
movsb
xchg
or
lock
sbb
iret
xchg
mov
ds
outsb
pop
test
repz
xchg
dec
or
lret
jle
mov
push
es
or
jae
push
in
pop
sarl
dec
cmp
repz
push
xchg
mov
stos
cwtl
adc
sbbb
pop
or
ja
push
dec
dec
dec
ret
inc
notl
mov
fcoms
mov
jo
out
pop
fstl
pop
cmp
enter
or
pop
pushf
jecxz
push
jecxz
pushf
add
add
movsl
mov
adc
inc
cmp
mov
dec
push
sbb
inc
sahf
push
xor
cld
pop
out
call
sub
jbe
pushf
jbe
in
imul
subb
inc
cs
rorb
bound
hlt
xor
hlt
sarb
jne
scas
in
stos
popa
ret
cmp
jns
lea
lahf
xchg
sub
mov
sub
test
sbb
out
repz
xlat
xchg
cmp
add
mull
incb
std
add
sub
cmp
add
pop
shlb
jno
loope
fmul
mov
jns
mov
inc
fisttpll
shll
mov
pop
ja
mov
mov
lock
adc
push
scas
and
mov
mov
stc
out
jno
or
xor
sti
repz
xor
mov
adc
cltd
xor
lahf
mov
cmp
scas
xor
fdivrl
out
add
add
cmp
jnp
leave
and
hlt
and
inc
pop
insb
popa
sbb
mov
gs
push
sbb
imul
aas
xor
jecxz
jnp
hlt
int
jle
imul
fcoms
mov
mov
pop
jne
les
xchg
xor
dec
out
sbb
cmpsl
xor
mov
or
cmp
inc
pop
jne
sahf
out
fsubr
inc
lods
jl
fisubs
add
mov
mov
in
xchg
lds
or
jno
dec
sbbb
lods
jmp
jge
jle
repz
movsl
mov
addr16
mov
push
cmpl
and
jmp
xchg
inc
jmp
les
xchg
lea
je
mov
push
push
cmp
aad
inc
sarb
imul
mov
dec
std
daa
cs
add
filds
or
mov
add
pop
pop
push
adc
fcomps
adc
cmc
pop
xchg
cwtl
mov
or
pop
ja
insl
or
or
sbb
add
dec
sbb
xor
or
add
mov
add
pop
dec
fmull
xor
jne
arpl
jnp
movsb
test
pop
sub
mov
test
mov
mov
mov
aam
xor
imul
js
inc
mov
mov
add
pop
add
add
xor
scas
fcomi
dec
or
inc
sbb
sub
pop
repz
jne
adc
mov
dec
dec
mov
outsl
or
jne
add
icebp
adc
dec
cmp
xchg
cli
add
mov
stc
push
cmp
cmp
cmc
arpl
mov
pop
adc
es
std
jg
fcmovnu
cmpsb
not
push
inc
loopne
xchg
inc
or
and
and
add
cmp
dec
sti
es
jbe
jns
cmpsl
lcall
mov
sub
scas
push
dec
fcomps
cs
mov
cmc
dec
sarl
jbe
jcxz
ljmp
ret
xchg
sub
js
cmp
cmp
sub
xchg
dec
xchg
stos
add
outsb
insb
mov
mov
test
mov
add
pop
les
dec
fstl
mov
or
mov
cwtl
cltd
inc
mov
aam
dec
lret
jb
rcrl
gs
inc
scas
cmp
xchg
cmpsl
mov
xchg
push
jne
sbb
fcoms
and
xor
xchg
and
outsl
jmp
cmpb
inc
add
xchg
and
call
pop
js
push
sub
fmuls
inc
ret
mov
jge
mov
sar
rolb
int
lahf
push
or
add
push
mov
sub
pand
mov
test
sbb
fucomi
pop
push
aas
imul
outsb
and
orl
add
shlb
fsubrl
mov
xor
mov
bound
insl
dec
scas
jmp
das
sub
sbb
sarl
mov
add
lods
into
inc
cmp
mov
sbb
mov
ds
loop
ret
jmp
push
lds
lret
or
inc
sub
in
or
pop
mov
sahf
ds
ret
jbe
add
scas
push
cwtl
or
ret
out
mov
mov
dec
jnp
or
addr16
add
inc
jb
or
aas
std
xor
push
mov
or
nopl
mov
add
int
xor
out
mov
jo
jae
lcall
xchg
lret
lock
sub
mov
adc
push
rcll
fcmovb
ficoms
adc
dec
js
cmp
das
pop
in
in
filds
pop
loope
jno
push
add
inc
xchg
cmpsl
scas
test
data16
lahf
scas
jmp
cmp
data16
aam
mov
mov
push
xchg
and
aad
push
fistl
adc
outsb
das
enter
sub
aaa
shl
fwait
addb
popa
movsb
nop
mov
xlat
lret
lock
dec
jecxz
jno
shlb
cmpsl
in
mov
iret
sbb
outsb
ds
faddp
xor
push
inc
bound
add
scas
fstps
mov
mov
fimuls
outsb
testb
nop
add
mov
add
inc
jl
lods
xchg
push
xchg
enter
test
dec
push
sbb
mov
push
cmpsb
push
ficoms
inc
push
cmp
mov
loopne
mov
sbb
outsl
in
mov
add
jmp
outsl
and
push
sbb
sub
mov
stc
pushf
fbstp
hlt
cmpsl
xchg
call
cli
fcomi
test
jnp
adc
push
lea
popa
call
hlt
pop
sub
in
mov
in
cmpsb
sti
in
fisttpl
add
jp
scas
sub
xor
mov
adc
jo
in
push
mov
rcrl
loopne
jg
popa
sub
in
add
dec
push
scas
call
xor
outsb
xchg
scas
stc
and
push
bound
mov
cld
gs
test
cmp
shlb
pop
sbb
in
adc
lret
mov
sbb
xorb
jne
aad
icebp
mov
shrb
mov
add
add
jbe
iret
out
fmul
es
mov
inc
push
stos
and
dec
test
shl
mov
add
push
jnp
int
sub
mov
ja
or
test
add
inc
ffreep
insb
adc
jnp
xlat
jne
call
xor
inc
mov
test
in
sti
add
pop
and
je
cwtl
push
adc
fiaddl
add
or
andb
shlb
fwait
xor
movsl
fimull
inc
imulb
fld
into
sub
rolb
inc
icebp
push
sub
and
jge
ljmp
int3
ss
xchg
adc
and
mov
push
mov
jg
sub
roll
xlat
jecxz
mov
cmc
xor
test
movsl
orb
cmp
lock
pop
pop
sbb
or
popa
in
sbb
push
mov
inc
push
lds
out
cwtl
pop
cmp
leave
or
mov
push
fldcw
push
ret
mov
or
xchg
call
jb
dec
into
shlb
mov
sbb
and
and
sbb
sbb
inc
in
aaa
sub
cmp
push
pop
dec
adc
test
add
mov
dec
sub
dec
adc
mov
je
in
jg
cmpsl
pop
cmpl
aas
jmp
inc
dec
mov
xorl
push
push
mov
stc
outsl
xor
cmpsb
das
repnz
add
pop
fsubs
cld
ficompl
fdecstp
ljmp
inc
adc
dec
addr16
add
inc
lods
pusha
pushf
mul
xor
test
mov
xor
cmpsb
imul
xorl
insb
xor
mov
sub
pop
cli
add
imul
and
mov
inc
in
into
jno
dec
fs
and
sub
cltd
xchg
mov
push
dec
or
ret
jbe
pop
lret
les
push
pop
ss
repz
mov
or
outsb
fldt
data16
nop
into
out
xchg
filds
pop
mov
adc
cmpsl
rcl
test
and
add
mov
jne
add
int
or
push
rep
sbb
ljmp
outsb
loopne
pop
mov
mov
clc
xchg
or
xchg
js
fs
cmp
cmp
icebp
aaa
adc
mov
arpl
xor
stos
xchg
cmp
push
cwtl
movsl
cld
sahf
cmp
pop
shl
jne
aad
iret
push
mov
sahf
aam
ja
sbb
int
aad
dec
lock
or
notb
lahf
mov
jg
xchg
mov
bound
pop
add
insl
adc
lds
cltd
sbb
and
inc
mov
clc
stos
stc
xor
fnstcw
lahf
adc
dec
into
cld
add
sub
pop
cwtl
push
in
add
xchg
xchg
xor
xlat
scas
mov
dec
dec
test
add
adc
add
cld
add
xchg
stc
lret
lods
mov
mov
popf
xor
subb
divl
enter
sub
push
sub
insl
jmp
out
sub
pushl
inc
inc
push
adc
adc
pop
loope
mov
pop
adc
scas
xchg
xchg
sub
mov
pop
cltd
cmp
cmp
add
repnz
into
fldenv
push
xchg
sahf
jnp
andl
lret
fisttpll
jp
pop
mov
jbe
movsl
adc
scas
maskmovq
negl
jmp
jnp
and
fistps
ret
popf
push
clc
cmp
adc
repnz
or
insl
aad
shll
and
add
pop
pop
leave
ljmp
dec
lods
scas
adc
mov
adc
call
push
add
jmp
faddl
add
add
push
ret
and
mov
xchg
out
fst
lock
jge
test
xchg
sub
mov
jmp
inc
fistps
xchg
lods
jbe
rorl
mov
push
add
dec
js
push
popa
pop
xchg
inc
sarb
test
xchg
in
fnstcw
fistl
shrb
inc
pop
int3
mov
add
xchg
int3
out
pop
fsubr
enter
or
xor
cli
and
sub
cmp
aad
add
jge
lret
loope
mov
dec
add
dec
out
push
cltd
mov
jle
lret
jne
sub
movsb
xchg
sbb
inc
pusha
pop
mov
mov
je
mov
xlat
hlt
ret
sbb
push
lret
mov
mov
xchg
loopne
or
out
in
xchg
dec
add
lds
cli
cmc
movsl
dec
pop
dec
push
push
xor
inc
int
das
xchg
pop
adc
push
addr16
xor
pop
dec
fwait
mov
add
add
xorb
dec
mov
pop
cld
mov
stos
lock
dec
repnz
jbe
scas
jnp
outsb
fisubrs
fs
andb
mov
addl
sub
test
bnd
sub
jmp
xchg
cmp
jae
or
jo
add
mov
aaa
test
mov
xchg
in
adc
pop
shlb
lahf
test
fsubrs
cs
and
add
nop
movsb
ds
sbb
lock
pop
shl
movb
adc
icebp
or
mov
fildll
lock
inc
pushl
outsl
stc
mov
add
cmpsb
push
jge
adc
jmp
in
ret
xor
pop
lret
xchg
xchg
push
or
in
int
rorl
ret
daa
xchg
out
dec
jae
mov
fmull
std
pop
lcall
add
xchg
xchg
mov
jo
pop
into
aaa
jge
or
add
push
pop
jl
mov
adc
mov
mov
push
cmp
incl
lea
mov
inc
jl
push
clc
sub
aad
pushf
pushf
and
cmpsb
fiadds
bnd
and
bound
clc
xlat
add
fisttpll
mov
inc
dec
shlb
sbb
ret
pavgw
inc
mov
add
rep
arpl
jle
and
push
in
test
out
sub
cmp
push
cmpsl
push
daa
out
inc
sbb
addb
ljmp
sarb
or
add
add
mov
xchg
imul
enter
andb
adc
push
pop
push
jnp
notl
mov
iret
jb
mov
cmp
adc
xor
ljmp
add
add
push
out
mov
pop
dec
sbb
sarb
xchg
add
adc
ret
mov
sbb
repz
cmp
std
mov
xor
adc
pop
push
pop
or
mov
sub
cmp
and
mov
fstp
fistpll
xchg
push
call
pop
and
ja
arpl
insb
sbb
cld
nop
pop
push
scas
loopne
push
out
and
cwtl
cwtl
add
add
cmp
sub
ds
jbe
mov
cli
cmp
pop
xchg
dec
jp
xchg
adc
movsb
jg
mov
cmp
xchg
aas
or
test
add
int3
in
ds
shrb
dec
nop
push
xor
mov
repnz
or
add
je
fcmovnbe
sub
in
fadds
adc
sub
mov
in
inc
lahf
ret
xor
dec
sub
add
add
pop
aas
xor
inc
fistl
push
dec
imul
dec
std
into
stc
push
daa
pop
into
mov
pop
or
xor
sub
cmp
bound
int
sub
ljmp
mov
lods
mov
push
or
jnp
jnp
addr16
and
stc
pop
bt
fsubs
in
push
dec
into
loope
pop
jp
fs
or
cld
adc
ss
aaa
cmp
shrl
add
add
out
sub
out
cmp
fldt
int3
jo
mov
loope
bts
ror
hlt
cmp
enter
out
enter
fnstsw
loopne
and
pop
xchg
sub
and
or
xchg
scas
jnp
mov
in
mov
add
cmp
xor
icebp
das
mov
sub
add
add
and
mov
mov
add
into
pop
push
lret
mov
cmp
fsubp
imul
imul
or
sbb
xor
mov
xor
sbb
push
imulb
fdivr
sub
push
or
cmp
lds
inc
stos
mov
adc
add
ljmp
jae
jno
shr
aas
inc
lods
movsb
jae
mov
popf
push
dec
js
xchg
pop
scas
fdivs
icebp
jne
rcll
lods
fisubs
dec
test
jne,pt
sub
jo,pt
arpl
mov
into
adc
mov
dec
mov
mov
pop
push
mov
push
sti
jb
jnp
jmp
out
test
stos
into
dec
adc
ret
xchg
cmp
or
je
dec
stc
push
dec
mov
sarl
cs
jo
stc
jnp
les
mov
mov
mov
cmc
and
push
popa
inc
push
fidivs
test
dec
orl
sub
cli
sub
rorl
int
push
pop
data16
mov
mov
andl
add
add
add
jmp
xor
mov
jno
dec
movsl
cld
add
inc
es
pop
xchg
cmp
pop
mov
lock
shlb
mov
test
pop
fdivl
pop
gs
stos
stos
pop
pop
in
add
sub
xchg
jne
mov
jb
and
mov
std
mov
jbe
rorb
push
sub
hlt
dec
dec
stos
mov
insb
loopne
push
sbb
add
sbb
push
sbbb
es
in
sbb
cmpsb
xchg
push
cmp
sbb
test
pop
notl
dec
fs
jp
into
pop
pushf
xchg
loopne
enter
mov
xor
enter
add
out
pop
dec
push
mov
cs
and
sbb
jbe
jbe
inc
aam
leave
sbb
fs
or
lods
addr16
jo
test
xlat
hlt
pop
inc
out
mov
push
lock
divl
fcompl
dec
add
push
jnp
mov
pop
jno
cmp
sbb
cvttps2pi
mov
cmp
out
push
outsl
and
insl
movaps
aaa
lahf
mov
sbb
push
xchg
test
stc
or
movsb
jo
or
test
shl
sub
mov
popa
and
aad
add
call
sub
les
stc
xor
adc
inc
add
inc
pop
sbb
adc
add
sub
icebp
xlat
or
lahf
into
cmp
add
loop
popa
dec
inc
js
push
in
mov
repnz
jg
pusha
push
sahf
aaa
or
sbb
push
mul
xor
es
sbb
mov
fninit
les
mov
stos
pop
in
je
cmp
test
repz
sub
jbe
ret
pop
adc
int3
ss
add
les
dec
sbb
add
daa
jbe
sub
in
sub
rclb
xorb
sbb
sti
or
sub
in
test
dec
jmp
push
sbb
jp
cltd
xchg
out
jle
mulb
or
sbb
jns
enter
mov
mov
dec
pop
popa
adc
fidivs
in
ret
gs
out
cmc
dec
ss
jl
in
add
mov
adc
bound
popf
cmp
sub
test
aam
cmp
stos
ljmp
lahf
jo
pop
push
lods
xchg
pushf
lods
loop
scas
mull
jl
into
icebp
lea
daa
lcall
push
or
sub
imul
mov
inc
sahf
mov
jl
add
dec
out
mov
dec
es
inc
cmp
stc
cmp
xlat
and
nop
inc
rorb
dec
es
fnstenv
cmp
int
push
cmc
and
and
ss
imul
mov
leave
das
lret
xchg
ja
lahf
add
adc
iret
mov
inc
inc
arpl
imul
and
movups
and
popa
jno
mov
mov
ss
inc
imul
or
filds
push
mov
pushf
and
and
pop
xchg
xchg
aaa
mov
push
in
repz
into
mov
pop
rolb
insb
xchg
sub
cmc
lret
pop
fisubl
stc
stos
xor
mov
std
lods
jns
std
aaa
mov
int
mov
out
lcall
imul
mov
and
xchg
inc
lret
into
sbb
xchg
xor
sub
cs
daa
or
jmp
add
jmp
mov
mov
es
sub
pusha
add
std
pop
mov
cmp
push
mov
aam
out
cmpb
stos
rcr
mov
and
push
add
inc
inc
in
in
aam
gs
leave
mov
les
jg
dec
mov
shrb
pushf
scas
shlb
mov
aam
jb
xchg
inc
loopne
mov
inc
outsl
mov
enter
addr16
mov
pop
jecxz
jns
test
imul
adc
cmp
inc
cmp
and
inc
leave
jp
sbb
xor
cmpsl
jb
mov
jb
and
wbinvd
inc
sub
in
popa
jbe
xor
cmp
in
out
aad
out
push
dec
cmc
cld
add
rorl
cmpsb
jle
jnp
sahf
insb
shl
aad
xchg
ficompl
fcomps
jb
or
push
fcmove
gs
minps
jo
add
mov
mov
mov
clc
cmp
inc
dec
push
daa
mov
cmp
ja
dec
pop
adc
add
enter
inc
jp
aam
cmpsb
dec
inc
cmp
cld
mov
sub
shl
push
rclb
into
mov
and
sub
mov
lock
movsl
movsb
sbb
cmp
xchg
loope
pop
xor
test
add
insb
bound
iret
stos
insl
lock
or
fs
lahf
fidivrs
les
nop
xchg
mov
mov
push
cmp
testl
dec
scas
out
nop
xor
pop
pop
pop
and
xor
lods
jle
inc
jb
mov
mov
push
pop
jecxz
shr
jecxz
mov
std
daa
aaa
scas
pop
std
push
push
out
pop
lods
rcll
add
add
or
js
mov
xchg
test
rcrl
ret
push
int3
lds
or
in
mov
inc
flds
jb
add
mov
stos
outsl
repnz
cmp
push
or
rorl
push
pop
pop
das
das
push
mov
stos
and
mov
pop
repnz
pop
adc
mov
push
cmpsb
scas
mov
mov
gs
data16
jecxz
cs
fmuls
xchg
pushf
jbe
pushf
add
add
jmp
cmp
gs
cli
adc
fsubrl
test
pop
xor
fisttpll
filds
pop
call
aad
sub
cwtl
out
add
popf
mov
pop
fists
sub
aam
in
xor
rcrb
xchg
xor
dec
ror
add
jecxz
data16
adc
insb
insl
fstpt
add
jmp
in
pop
dec
inc
sub
cmp
cltd
mov
cmp
mov
add
add
xchg
jmp
rcrb
inc
jae
and
xchg
imul
add
mov
mov
je
or
loopne
inc
mov
inc
dec
ja
ds
xchg
fsubrl
jmp
out
stc
popf
leave
cmp
pop
enter
cmc
out
in
pop
shrl
cmpsb
es
add
ret
pop
imul
pop
pushf
enter
popf
sbb
outsl
jbe
scas
pushf
shlb
push
jg
lret
jge
xchg
es
add
inc
cs
outsb
push
or
ljmp
xor
pop
push
add
andb
andl
in
repz
xchg
out
cmp
push
mov
push
mov
mov
pop
adc
and
aaa
mov
ja
sub
sbb
sub
cmp
push
or
into
insb
or
out
push
sarl
lahf
loopne
sub
inc
adc
jbe
dec
int
popf
mov
sarb
jb
sub
gs
loop
fsubr
push
dec
xor
clc
test
stc
mov
cli
rclb
or
sbb
inc
clc
pop
mov
mull
adc
inc
lods
std
dec
lock
jb
sbb
jns
jae
xorb
jns
stc
push
xchg
jmp
daa
je
push
push
xchg
xchg
sbb
cmp
ss
test
add
sub
sarb
sub
adc
outsl
in
mov
xchg
jne
aad
or
adcl
roll
fmuls
or
cmpsl
sub
adc
adc
sbb
je
shll
daa
add
xor
sbb
xchg
jmp
xor
or
mov
pusha
fs
ss
test
adc
push
shl
adc
imul
out
in
sub
push
cwtl
out
inc
out
inc
movsb
fmull
and
repz
aaa
decl
ss
mov
add
pushf
jb
test
rorl
sbb
std
dec
ffreep
sahf
and
ret
popf
imul
push
lcall
aad
sub
shrb
pop
jns
fsts
leave
add
aas
ret
cmp
or
das
jg
cmp
xchg
es
mov
shll
and
pop
inc
mov
nop
pop
mov
int
leave
adc
pop
fildl
cld
add
add
xchg
fildll
not
test
xor
clc
mov
cld
mov
test
push
jbe
and
das
ror
fbstp
push
push
lea
mov
daa
and
add
add
cmc
roll
pop
xchg
movsl
mov
rcrl
shrl
scas
mov
push
xor
xor
xorl
adc
inc
outsb
aaa
add
cmp
mov
adc
xchg
dec
xchg
add
mov
movsb
jnp
adc
pop
inc
and
jmp
cmpsl
lods
hlt
jl
xchg
pop
cli
inc
cmp
fimull
ret
cltd
repnz
push
sbb
and
loopne
add
inc
rolb
cmp
sub
rcrl
aam
xor
pop
xchg
jae
xchg
xlat
xor
and
push
pushf
cmp
dec
push
inc
roll
out
icebp
mov
dec
cwtl
dec
mov
fidivrl
stc
jge
push
ret
movsl
xorb
pop
sbb
sub
stos
rolb
dec
dec
lock
mov
clc
mov
fsubrl
stos
test
pop
aaa
push
pop
jmp
lret
add
add
fsubr
sub
pushf
imul
push
in
je
ret
fldenv
sub
mov
push
shl
arpl
je
pop
psrld
adc
push
std
jno
test
pop
filds
subb
mov
aas
shl
sahf
mov
add
cmp
sbbl
rcrb
dec
jo
lods
arpl
jl
sti
sub
fdivrs
add
xchg
cmpb
mov
xor
pop
or
adc
jle
addr16
push
pop
fidivrs
cmp
insl
dec
push
adc
mov
ret
lcall
call
repz
mov
adc
sahf
mov
dec
jne
cld
cmp
in
andb
int
add
cwtl
push
xchg
or
and
pop
rcl
hlt
mov
lock
cmc
dec
loop
test
in
in
add
jae
sub
lret
and
push
cmc
les
push
add
insb
ds
inc
in
xor
mov
dec
loopne
xor
inc
dec
lret
mov
cmp
pop
loop
mov
lcall
aaa
cmp
push
or
xchg
xor
pop
jno
xchg
xor
stos
add
sahf
das
into
jle
in
mov
xchg
dec
pop
mov
test
test
addl
mov
int3
inc
adcb
hlt
adcb
dec
add
test
icebp
insl
pop
xor
cmpsl
jp
into
outsb
push
xlat
mov
cmp
jp
sahf
or
pop
sub
mov
push
sbb
jecxz
cmp
push
stos
mov
pop
shrl
test
decl
xlat
shr
or
add
mov
push
inc
adc
insb
mov
lcall
inc
push
or
outsl
call
xor
cmp
out
rcll
jno
inc
test
xchg
vcvttsd2si
and
aaa
add
shlb
roll
in
xlat
aaa
adcb
dec
xlat
mov
test
test
gs
xchg
sbb
dec
call
repz
xlat
out
loop
enter
push
mov
sbb
mov
mov
ret
fcoms
sub
sub
out
inc
pushf
push
mov
jno
js
mov
enter
jle
dec
mov
or
dec
jecxz
jb
out
leave
lock
pusha
aad
xchg
add
add
fs
push
lods
jle
stc
adc
jbe
mov
cmp
icebp
popa
mov
out
dec
push
inc
push
cmp
jb
push
cmp
or
dec
pusha
lahf
insl
inc
xor
xor
rorl
