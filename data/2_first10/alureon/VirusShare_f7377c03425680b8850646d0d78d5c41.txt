sbb
add
mov
mov
lret
clc
rorb
xor
push
pushf
jae
xor
push
repz
jbe
sbb
in
sub
popa
cli
sbb
outsl
sub
pop
sub
rorb
pop
cmpsb
mov
or
cmpsb
movsbl
jb
je
push
jle
test
icebp
cmp
xlat
xlat
cmpsl
adc
fisubrs
mov
sbb
cmpsb
loop
sbb
inc
xor
cmp
iret
xchg
mov
inc
iret
jo
jb
fwait
popl
sbbl
mov
push
cmp
sbb
lahf
ja
cld
test
add
arpl
mov
xor
inc
push
inc
adc
sub
mov
bound
jp
sti
add
sub
sbb
popf
xor
inc
scas
jbe
mov
js
xchg
xchg
jg
inc
cmc
scas
in
test
idivb
add
xor
ss
mov
in
or
jne
ret
lret
out
lock
inc
and
movsl
jg
scas
mov
add
je
adc
in
adc
push
lcall
mov
aam
imul
mov
flds
push
mov
cmp
movsl
jmp
lods
cmp
cmp
imull
cmp
sub
fisttpl
or
out
fsubl
adc
push
push
rcrb
inc
pop
inc
mov
or
mov
or
lcall
popa
jne
imulb
test
scas
adc
clc
testb
dec
xlat
bound
adc
xchg
adc
pop
and
lcall
daa
dec
pop
je
sbb
cmp
and
int3
das
cmpsb
mov
cmpsb
push
call
push
js
adc
sub
das
insl
test
mov
sbb
mov
inc
jns
shl
fwait
sbb
inc
jl
push
out
sub
orl
mov
adc
mov
subb
jg
cwtl
dec
imul
in
and
pop
adc
mov
jns
jno
sarb
xchg
xor
outsl
mov
sbbl
adc
js
out
daa
cwtl
jecxz
sub
cmpsb
shlb
sub
dec
fdivs
test
pop
mov
or
out
loopne
mov
cmp
adc
add
pop
imul
dec
repz
test
mov
jmp
push
mov
imul
filds
fstpt
movsl
lcall
adc
mov
ljmp
pop
clc
or
push
mov
push
add
stos
push
enter
mov
and
inc
jle
into
cltd
adc
es
jae
out
into
shrl
test
jne
inc
adc
rcrl
add
sbb
inc
inc
cld
xor
scas
xlat
cs
jae
into
outsl
std
insl
xchg
adc
ret
popa
mov
call
inc
pop
lock
lock
std
push
xchg
imul
ret
xor
mov
rol
mov
cmc
push
jne
aam
imul
mov
rcrl
mov
out
aaa
sub
mov
xor
push
mov
aad
imul
ret
scas
pop
in
arpl
and
or
je
pop
rclb
lret
out
sarb
pushf
test
xchg
jae
leave
push
loope
call
sti
cwtl
in
lret
jle
jno
pop
cmp
ja
sub
fcomps
push
insb
cmc
repz
dec
xchg
mov
inc
dec
jns
ja
daa
inc
popf
jp
lret
push
bound
xchg
xlat
mov
cmc
in
out
fucomp
add
xchg
int
mov
adc
mov
das
mov
xor
pop
and
icebp
push
js
in
pop
lods
add
mov
enter
pop
inc
cld
xor
dec
push
ljmp
pop
mov
jo
push
sub
mov
loope
mov
mov
xchg
mov
ds
and
mov
add
xor
dec
jae
mov
xchg
ds
frstor
idivb
aam
imul
pop
outsb
mov
pop
xor
aaa
fdivrl
mov
and
icebp
and
subl
int
fcomps
push
hlt
jmp
fwait
repnz
lods
sbb
and
repnz
pop
or
aad
jns
scas
lea
imul
or
xchg
xor
pop
mov
shll
mov
pushf
cmp
negl
push
cmp
fidivrs
leave
pop
pop
enter
mov
add
test
xchg
sub
addl
into
sub
add
out
cmp
testb
mov
push
mov
push
hlt
outsl
xchg
fisubs
test
adc
jb
or
jb
cmp
lret
jno
xchg
sub
icebp
cli
out
mov
data16
mov
mov
ret
cmpsb
fmull
rcl
in
mov
fnstenv
dec
xor
stos
or
cmp
add
shl
add
lea
mov
sbb
xor
dec
iret
mov
xor
cmc
mov
xor
and
push
and
push
sub
test
orw
and
das
mov
in
push
jmp
xchg
fnstsw
popa
xchg
sub
inc
lret
fidivl
sub
mov
cmp
shll
jle
pop
push
mov
jno
jmp
shrb
dec
lret
pop
addr16
xor
enter
data16
lods
mov
lret
icebp
repz
adc
stc
mov
out
scas
addl
stc
movl
popa
mov
dec
mul
push
cmpsl
ds
pusha
lods
cmp
lret
add
inc
jns
jb
repz
push
dec
push
push
rclb
lahf
ja
fwait
lea
sbb
iret
and
ds
and
mov
sbb
add
cmpsb
and
stos
inc
mov
mov
cmp
jmp
mov
cmp
sub
cltd
add
dec
sarl
lds
pop
leave
std
ret
and
push
add
out
cmc
jae
pop
adc
repnz
mov
lret
cmp
aaa
and
insl
test
pop
lcall
add
call
imul
cmp
rolb
xchg
xchg
lods
pop
aaa
in
mov
ljmp
movsl
cwtl
std
or
jnp
dec
shrb
push
sub
stos
pushf
xchg
iret
in
sub
inc
pushf
push
mov
notrack
sbb
pop
push
lahf
push
pop
scas
divl
ret
mov
in
pushf
mov
sub
into
push
and
pop
adc
fwait
and
pop
cld
mov
mov
ja
dec
aaa
xchg
mov
mov
and
aam
ret
inc
mov
hlt
mov
mov
mov
or
xor
cmp
int3
push
ret
inc
or
ret
shrb
inc
popa
dec
sbb
test
push
mov
sar
sti
inc
jbe
inc
sbb
aam
cld
and
insb
clc
push
mov
mov
or
push
mov
pop
ss
dec
xor
stos
mov
sub
clc
or
mov
sub
sub
mov
pop
ja
enter
xchg
shll
jns
stos
mov
mov
popf
cmpsl
test
test
imul
mov
mov
adc
out
lret
es
pushf
aam
push
or
inc
sub
sub
pop
cmp
sbb
push
add
mov
add
and
sbb
adc
loopne
cltd
test
inc
js
xlat
sub
pop
mov
xor
test
ret
mov
xchg
mov
call
inc
mov
cmc
out
sub
and
sbb
pop
sub
out
xchg
mov
jp
mov
dec
dec
xchg
lods
cmp
pop
sahf
in
iret
sahf
pop
push
jmp
rolb
nop
xchg
mov
mov
popa
xchg
xchg
mov
mov
inc
xor
out
lret
sbb
jo
add
jae
xchg
xor
xchg
cmpsb
mov
push
icebp
mov
xor
mov
decb
hlt
push
movsl
mov
daa
idivb
cmp
push
xor
lret
ds
out
mov
in
loopne
sub
call
cmp
cmp
imulb
sahf
or
add
pop
cmpsl
adc
pop
xor
into
repnz
icebp
popa
jbe
push
add
pop
and
inc
fimuls
loopne
mov
mov
les
lret
dec
jmp
bswap
ljmp
jmp
popf
push
repnz
dec
popa
js
cmp
pop
dec
inc
bound
mov
scas
inc
lea
loop
xchg
jno
mov
bound
mov
scas
arpl
or
mov
imul
jp
ret
out
test
repz
or
fwait
xor
cmp
sbb
int
push
ret
test
inc
aam
or
lret
in
aaa
pop
fisttpll
movb
sbb
scas
js
lock
pop
jl
pushf
out
mov
xchg
sub
lds
in
pop
xchg
out
mov
mov
and
mov
test
push
fs
add
inc
test
sbb
cmpsb
aaa
nop
test
xor
lods
sbb
add
and
sbbb
out
pop
jp
pop
enter
cmpsl
inc
jecxz
or
push
jp
jmp
dec
andl
das
push
push
pop
subl
inc
popf
push
lods
lods
xor
movsl
or
fs
add
jb
iret
mov
dec
std
jg
fldl
and
push
nop
in
cmpsb
out
pop
icebp
mov
sbb
push
sti
jge
out
push
cld
xor
mov
add
or
in
test
jne
and
xchg
xor
aam
mov
ds
test
xchg
addr16
xchg
lods
mov
jl
mov
sub
inc
out
ds
leave
rcl
cs
inc
mov
ret
mov
cmp
dec
xchg
aam
jo,pn
addl
mov
xor
fistpll
fnstcw
pushf
inc
xlat
cld
sub
inc
pop
xchg
pop
or
repnz
or
adc
and
nop
mov
push
xchg
sbb
leave
mov
adc
sbb
xor
jmp
mov
ret
cmp
testb
sub
xor
mov
in
negl
nop
mov
jns
pop
ljmp
mov
xor
mov
add
jbe
cmp
in
outsl
xchg
leave
mov
or
insb
movb
mov
movsb
popf
cmpl
mov
or
sub
or
iret
mov
dec
fwait
leave
cmp
mov
lret
jl
mov
add
popf
ljmp
test
and
pop
mulb
fcmovnu
jb
mov
in
lods
pop
sbb
mov
outsb
pop
cmp
rorb
xor
jecxz
enter
push
mov
in
mov
gs
sbb
push
lahf
aad
pop
loopne
xchg
or
lret
into
shl
loop
mov
mov
add
mov
sbb
idiv
stos
js
jne
lods
and
das
xorl
iret
xchg
sbb
outsb
pop
or
flds
inc
scas
add
cs
sbb
cmpsb
pop
push
iret
jns
and
mov
add
les
pop
dec
pop
jnp
in
cmpsb
ljmp
and
nop
fcmove
mov
or
sarl
dec
daa
ja
or
xchg
sbb
pushf
adc
js
adc
sbb
mov
inc
push
dec
cmp
pop
nop
fs
and
cmp
js
cs
lods
repz
adc
jb
xchg
mov
dec
mov
mov
dec
or
mov
in
cs
inc
test
xor
mov
or
push
cli
push
dec
test
sub
xchg
add
lds
dec
scas
mov
ficoml
std
loopne
xchg
pop
aas
push
jae
js
pop
rorb
pop
sub
cmc
inc
cmp
fisttpll
xchg
xchg
daa
pop
das
cwtl
in
out
loope
mov
dec
push
imul
jecxz
push
enter
xchg
out
pop
sbb
lods
test
jle
aas
imulb
and
lahf
insl
dec
sahf
hlt
stos
add
inc
sub
mov
cmp
mov
jle
inc
fucomp
and
sub
xor
idiv
push
in
popf
mov
addb
mov
std
push
test
and
xor
shlb
dec
xor
pop
scas
call
and
das
sub
nop
out
cmp
inc
outsl
ds
lea
fcmovb
sbb
sub
cld
jno
leave
jp
test
aad
std
or
pop
inc
xor
cmpsb
jne
inc
add
lea
jns
ficomps
aam
xchg
pusha
lea
dec
add
xchg
icebp
cmp
jo
pop
mov
push
xlat
aam
adc
mov
or
pushf
cmp
cmpsl
js
cltd
sbb
inc
fwait
xlat
push
push
push
dec
mov
loop,pt
mulb
cmpsl
scas
roll
lret
jmp
mov
push
lds
inc
add
xor
jae
jge
aam
sbb
pushf
adc
mov
pop
mov
xor
pop
and
fsqrt
lods
dec
mov
cli
adc
jge
test
mov
icebp
sub
lret
xlat
in
aaa
lods
orl
pop
rsqrtps
lret
pop
test
xchg
cmpsl
adc
std
mov
xchg
add
mov
or
dec
mov
cmpsb
add
inc
test
fstpt
fdivrp
and
out
shrb
std
ret
out
mov
cwtl
adc
sub
pop
adc
movsb
dec
or
dec
cwtl
pop
iret
xchg
fwait
out
mov
mov
xchg
push
push
icebp
xchg
bound
lock
iret
xor
cli
sub
lock
loop
jecxz
or
js
cmp
mov
pusha
bound
push
popf
adc
mov
rorl
add
push
mov
inc
mov
fcomip
jecxz
adc
mov
popa
clc
dec
add
shr
push
adc
adcl
dec
out
xchg
mov
jno
mov
pop
cmp
push
jl
cwtl
xor
mov
mov
ss
cmpsb
js
clc
femms
sbb
movaps
inc
cld
jmp
leave
and
call
in
cltd
je
mov
xchg
inc
leave
push
int
sahf
loopne,pn
nop
jne
push
sbb
mov
xchg
mov
mov
inc
and
outsb
lret
cmp
sbb
sub
add
add
xorl
adc
aam
xchg
mov
push
xchg
sub
add
repz
push
js
xlat
jae
adc
and
std
mov
lret
sbb
xchg
pop
add
mov
mov
jo
dec
dec
add
imul
aam
cwtl
pushf
ret
adc
xor
mov
sbb
fdivrl
mov
add
movsl
dec
pop
adc
pop
pop
mov
stos
int3
cmpsb
xor
jge
mov
bound
pushf
xchg
push
scas
jmp
mov
xor
mov
mov
out
mov
jne
dec
xor
int
orb
sub
jo
stc
and
fists
sahf
bnd
dec
mov
xchg
mov
shll
or
xor
fucom
imul
test
jne
push
pop
jle
and
push
pop
add
sbb
push
fs
sbb
or
test
aad
xchg
or
std
aaa
sub
or
jb
pop
or
mov
mov
mov
daa
iret
push
cmpsb
or
xchg
mov
push
cmpsb
mov
cmp
cld
stos
das
jg
rclb
lods
jo
pop
fistpl
or
inc
push
inc
jle
lds
lods
fwait
lods
cld
jecxz
ds
xchg
push
rorl
pop
testl
cmpsb
fcomi
fstpt
lea
push
leave
add
fdiv
ds
xchg
cmpsb
sbb
outsl
loope
imul
mov
push
dec
cwtl
mov
inc
cmp
cmc
clc
xchg
pop
stc
adc
movsb
ret
imul
jo
cmp
add
mov
sub
js
loopne
sbb
call
into
push
scas
xor
push
xor
test
test
icebp
imul
xchg
daa
jb
aas
inc
mov
push
xor
scas
and
jns
xor
insb
sub
das
test
loope
add
cld
push
xor
repz
fisttps
or
adc
inc
leave
out
sub
hlt
sbb
push
mov
push
push
xor
ja
movsl
or
cmpsb
push
shll
aad
push
mov
and
inc
inc
es
add
das
int
jo
out
xchg
and
dec
clc
test
and
fisubl
mov
sti
cmpl
push
out
xchg
arpl
mov
stos
outsb
add
jp
ja
mov
mov
mov
xor
repnz
jge
and
fldt
pop
pop
clc
dec
adc
mov
xchg
test
faddl
lret
das
pop
fldt
rcl
scas
mov
inc
xchg
loope
jns
lods
aam
push
jae
mov
aad
xchg
out
and
lock
sbb
dec
push
jl
xor
sub
lds
sahf
cmpsl
gs
mov
aaa
fdivl
lcall
xor
pop
push
fsts
sub
testb
in
and
jne
out
dec
dec
in
loopne
adc
and
in
pop
test
loopne
fnclex
and
insb
cmpsl
mov
fmull
jno
out
dec
add
cltd
lret
mov
sub
cwtl
fimuls
cs
push
in
pop
nop
mov
mov
xor
or
cmp
push
lahf
inc
jl
push
sub
popa
cmc
mulb
sbb
jns
xor
ds
pop
xor
in
insl
pop
jl
push
movsl
xlat
fdivrl
inc
push
dec
lret
test
lret
and
xor
jae
xchg
repnz
cmp
out
jb
div
jmp
lahf
jmp
rcll
adc
add
stos
pop
fwait
dec
aad
into
insb
das
nop
fcomi
in
sub
lcall
mov
js
xlat
jae
mov
loopne
arpl
jae
dec
jo
cmp
pop
cwtl
mov
ds
inc
loopne
or
pop
js
mov
push
out
push
mov
add
sbb
pop
mov
movaps
add
enter
mov
imul
push
add
cltd
cmpl
scas
es
ret
and
out
adc
push
leave
test
jns,pt
jge
pop
loope
pop
in
push
xor
xor
xchg
shlb
mov
aas
out
adc
clc
popf
lea
push
pop
call
push
movsb
fstp
push
cmc
es
pop
mov
pop
pop
fstpt
out
scas
test
scas
roll
jecxz
sbb
or
and
test
and
test
push
rcrb
jmp
or
mov
mov
aam
scas
add
mul
add
pop
push
fstl
fucomp
pop
xchg
outsl
cmp
lahf
mov
and
push
aam
rolb
lret
pop
repnz
xchg
push
sub
xor
sub
and
jbe
push
daa
in
or
lds
fcompl
inc
or
dec
ljmp
xor
mov
icebp
mov
xor
in
test
loopne
push
dec
fists
popa
inc
mov
dec
das
jmp
add
in
jb
andl
loope
test
push
or
mov
add
sti
xchg
ljmp
mov
fisubrs
lahf
dec
ljmp
stos
fwait
jno
push
xchg
ja
je
sbb
inc
cmp
lcall
or
test
aam
sub
js
push
mov
mov
sub
mov
add
mov
pop
jp
test
xchg
test
xchg
jno
sbb
imul
and
dec
push
sbb
out
add
push
pop
sbb
dec
inc
mov
fldcw
push
jle
nop
jo
loop
inc
notb
pop
leave
push
jns
pop
shll
cmp
xchg
popa
shrb
arpl
push
mov
push
or
fcomps
xchg
cmp
imul
fs
les
daa
cmp
pminub
les
mov
inc
gs
or
lret
cli
lret
mov
loope
stc
arpl
pop
xchg
fs
in
dec
cmp
dec
xchg
outsl
inc
cwtl
repnz
jns
scas
ss
jno
es
es
loopne
mov
fsubrs
xchg
test
and
jle
aas
andb
lea
ja
fiadds
shl
sbb
clc
jmp
imul
stos
jb
cwtl
mov
cwtl
xchg
shll
cmc
sarb
jmp
sub
xor
jnp
ss
sub
stos
jle
outsl
popf
ja
scas
gs
jmp
cmp
add
sbb
dec
fcoms
jecxz
jg
fnsave
outsl
sbb
dec
inc
insb
xchg
mov
xchg
xor
adc
imul
mov
sub
in
mov
addr16
faddp
jb
and
xchg
sahf
int
dec
cmpl
stos
sbb
mov
xor
inc
js
xchg
mov
nop
inc
pop
push
push
das
jne
xor
into
insl
cs
cmp
mov
cltd
ret
xor
bound
movsl
pop
mov
lock
mov
scas
inc
out
inc
insb
or
lcall
add
sbb
mov
mov
and
out
lock
mov
jmp
dec
cltd
aas
shl
lret
into
es
clc
dec
mov
push
sbb
scas
mov
lcall
add
mov
cwtl
out
lea
jmp
into
sub
in
mov
shrb
lret
test
out
inc
fcoms
cwtl
sub
test
and
outsl
pop
sti
jl
sarl
idiv
aad
and
stc
or
adc
shrl
aaa
mov
jno
mov
mov
adc
jge
cmpsb
stos
into
mov
fmul
and
push
movsb
je
fisubrl
adc
xchg
jbe
jg
insl
xlat
out
mov
mov
loope
xor
outsl
les
mov
popf
repz
jecxz
and
call
adc
jp
sub
loope
fisttps
mov
adc
or
xor
fcmovbe
orl
mov
mov
sarb
add
scas
int3
adc
sbb
xchg
jb
insl
inc
out
pop
jle
mov
stos
jns
adc
test
dec
push
xchg
ret
mov
push
rcr
lds
or
mov
cli
insb
jmp
addr16
stos
call
imulb
add
shll
testl
xchg
xor
mov
xchg
adc
and
cld
imulb
mov
movsb
xor
and
hlt
fdivp
in
test
icebp
loope
filds
pop
or
insb
popa
lods
pop
jne
insl
xchg
in
mov
push
int
fstp
pusha
sub
xchg
jno
push
cmpsb
int
fbstp
mov
add
mov
sbb
cs
insl
pop
jecxz
dec
jmp
pop
xchg
fiadds
push
dec
stc
dec
mov
xchg
ret
lea
adc
int3
mov
push
sbb
clc
popa
dec
jg
stos
cmc
inc
or
mov
jns
dec
jp
int3
mov
dec
mov
scas
xchg
out
push
dec
repz
dec
subb
push
adc
insl
dec
mov
mov
sbb
jecxz
push
and
xchg
fcoms
mov
into
insb
cwtl
xchg
add
imul
or
fcomi
aaa
mov
stos
push
dec
sbb
jbe
ret
scas
cmp
addr16
sub
add
mov
xchg
scas
dec
aas
lds
jnp
or
loope
repnz
bound
mov
sarl
bound
orb
shlb
out
inc
adc
push
mov
xor
ds
es
je
cmp
pop
sbb
pop
mov
mov
adc
add
jnp
movl
clc
ucomiss
push
aaa
pop
jno
cld
add
adc
shrl
sub
adc
aas
pop
push
out
enter
rcrb
push
push
test
adcb
lahf
ds
std
xchg
lock
pop
push
sub
dec
out
jle
bound
ljmp
and
xorb
cmp
mov
popf
pop
jno
lahf
jg
sbb
mov
stos
pop
lcall
cmp
dec
test
and
or
push
mov
filds
subl
cmp
outsb
scas
inc
pop
jae
sbb
ljmp
lret
jl
xor
loop
lods
xlat
mov
dec
enter
jmp
push
loopne
cmp
cltd
mov
and
mov
popa
iret
pop
mov
repnz
in
mov
test
cmpsl
imul
jp
push
sbb
js
push
jg
mov
ljmp
insb
jns
faddl
bound
jmp
push
hlt
loop
les
adc
xor
fcomp
xchg
dec
imul
pop
ljmp
add
mov
mov
popf
addr16
mov
adc
es
insl
and
enter
in
push
or
push
shrl
sti
test
shrl
mov
add
sti
mov
mov
jno
xorps
mov
adc
dec
mov
in
addl
jmp
jae
out
lcall
leave
pop
xor
sbb
mov
aad
mov
jle
shrl
mov
sbb
mulb
add
sbb
pop
cmc
fdivs
inc
cli
pop
mov
sbb
push
es
sbb
sub
imul
xchg
int3
push
mov
xlat
cmpsl
mov
add
adc
mov
mov
out
mov
loope
sub
pop
push
or
jle
xor
push
insl
adc
pop
shll
scas
in
ficoms
ja
negl
sbb
mov
cmpsb
lds
adc
scas
pop
pop
push
int
mov
or
pop
sar
mov
mov
add
xchg
mov
inc
jb
cmp
ja
pop
lcall
cmpsl
and
lret
jnp
xor
roll
mov
imul
dec
jmp
ret
in
mov
inc
pop
mov
adc
add
mov
outsl
fisttps
xor
in
inc
rorl
incl
mov
scas
cmc
sbb
jne
ja
pop
inc
lods
out
vpmulhuw
dec
lret
push
daa
inc
rol
in
ja
subl
mov
sub
js
in
inc
mov
or
jle
and
pop
inc
mov
imul
cmp
add
push
adc
js
add
nop
sbb
fiadds
repnz
pusha
cmp
push
int
or
lock
lock
cli
xchg
mov
and
push
je
dec
scas
jmp
fwait
mov
push
pusha
fstl
les
jecxz
cli
adc
daa
sbb
xor
inc
mov
out
pop
ljmp
adc
pop
stos
mov
imul
fcompl
iret
add
cmp
pop
and
xor
xor
cmpl
std
std
push
daa
mov
rcr
adc
test
or
decl
sub
or
frndint
and
lcall
mov
fs
rcll
adc
jnp
or
lret
stos
adcl
stos
gs
imul
jl
scas
mov
push
jo
dec
pop
pop
outsl
push
jbe
fisttpll
push
aas
cmp
mov
push
call
flds
cs
push
adc
lea
shll
fs
add
in
dec
jmp
xor
mov
sub
mov
xor
fistl
xchg
lret
and
out
ljmp
loop
lods
outsb
adc
imul
mov
cmp
adc
data16
test
lods
xchg
jmp
cli
cmp
mov
mov
mov
aas
cld
xor
out
fwait
iret
ds
mov
push
subb
fistps
jb
dec
inc
movsb
jecxz
pushf
mov
fwait
aam
mov
push
or
cltd
pop
mov
xchg
mov
sbb
enter
out
faddl
xor
jb
add
cltd
imul
dec
sub
and
fwait
pop
mov
mov
push
stos
jnp,pt
js
in
or
sbb
repnz
leave
shlb
scas
jno
dec
sarb
add
shll
and
mov
xchg
xchg
fs
mov
mov
shrl
dec
sub
and
aam
sbb
test
cmp
mov
mov
sbbb
and
inc
mov
push
push
cmpsl
fisubrs
and
fildl
push
inc
cmc
pusha
pop
xor
jge
sub
inc
pusha
test
sbb
jle
push
clc
sub
dec
pop
les
jg
sub
xor
in
sbb
xchg
inc
or
mov
in
inc
in
je,pt
bound
out
xchg
aam
push
data16
adc
jle
and
mov
lahf
gs
scas
lods
cmpsl
pusha
dec
outsb
jnp
push
sub
in
sbb
add
stos
dec
push
jmp
push
test
mov
inc
test
lahf
repz
push
movsb
or
cmpb
aas
sbb
inc
mov
mov
dec
jb
mov
cld
pop
lods
lahf
in
sbb
jbe
jge
sahf
sub
les
fdivrs
daa
mov
pop
in
test
and
inc
enter
int
sub
popf
cmpsl
test
jmp
or
lret
inc
jo
dec
xor
in
bound
fdivl
repz
cwtl
push
stc
and
cmp
ficoml
push
jp
or
in
aam
cmp
jecxz
divl
inc
lret
loope
dec
mov
test
les
cli
push
movsl
push
imulb
jg
stos
das
cmp
clc
lret
cmp
test
imul
or
jmp
aaa
sbb
data16
adc
cmp
push
sbb
out
jl
js
out
imul
fimuls
xchg
call
repz
lret
dec
ds
jecxz
xorb
fadds
sbb
xor
cwtl
lods
dec
bound
or
xchg
fwait
adc
adc
sarb
cld
testb
loop
int
sub
arpl
in
in
mov
pop
and
adc
into
shlb
scas
js
je
push
push
xchg
test
cmp
shl
pushl
dec
cmp
cmp
mov
sub
mov
cmp
and
iret
xor
push
leave
dec
mov
push
fnstcw
push
addr16
mov
test
pusha
cmpsl
inc
inc
mov
push
and
xlat
mov
enter
push
xchg
imull
movsl
scas
scas
pusha
repnz
pop
cltd
mov
jecxz
aaa
loopne
scas
add
or
add
adc
jg
test
mov
xchg
mov
or
test
jne
cmpsl
add
sbb
outsb
or
or
jne
mov
dec
cli
mov
inc
mov
in
mov
mov
sbb
mov
dec
and
orb
sub
aam
mov
cmc
adc
loope
fmul
add
cmp
push
call
inc
lods
aaa
xchg
in
hlt
data16
push
lea
dec
xchg
dec
and
enter
hlt
mov
adcl
pop
stos
cmp
and
mov
stc
filds
rolb
jnp
sub
mov
xchg
les
in
mov
fmuls
inc
mov
cwtl
jmp
cmp
dec
cmp
mov
jbe
repnz
xchg
div
push
xchg
and
mov
add
xchg
mov
push
pop
in
jno
and
cmc
sbb
pop
lretw
loope
sbb
jl
gs
or
xor
in
mov
lahf
fadd
fs
es
enter
push
movsb
xchg
mov
mov
push
sbb
shr
in
mov
jg
inc
inc
push
out
push
int
in
ss
gs
jl
xor
inc
pop
sahf
leave
xchg
fistps
fistpll
mov
dec
dec
mov
adc
filds
fadd
dec
shl
jecxz
push
mov
fnstsw
and
jp
mov
fisttps
ret
daa
inc
jo
xor
add
adc
std
mov
cmpsl
mov
jbe
mov
mov
das
daa
cmp
fidivl
hlt
pop
mov
lock
xchg
sbb
pop
pop
xor
ret
jecxz
sub
out
fsubs
mov
andb
enter
sbb
lahf
fildll
or
and
stos
movsl
rolb
dec
imul
iret
and
mov
loopne
dec
aam
pop
lcall
aad
das
mov
xor
sysret
cmp
push
push
dec
sahf
stos
and
cs
pop
add
mov
fs
lcall
cld
pop
jae
in
inc
in
les
das
pop
aad
out
sub
inc
cmp
stc
into
push
or
out
adc
mov
ss
add
mov
push
inc
mov
push
xorl
inc
outsb
insl
or
dec
mov
fwait
pusha
push
rol
pushf
xor
push
jno,pt
outsl
dec
imul
fdivs
dec
aad
jne
cwtl
or
jecxz
push
fidivl
outsl
mov
pop
ss
sbb
cltd
ret
cltd
mov
cld
mov
rorb
or
xchg
fs
sbb
adc
cs
xor
or
jo
divl
testl
or
out
aam
je
test
jo
xchg
add
nop
lods
out
dec
cs
mov
gs
les
std
test
test
dec
mov
daa
pushf
sbb
mov
adc
ja
gs
sbb
out
push
mov
pop
mov
cmpsb
add
jne
xchg
call
cmp
push
fbstp
cli
out
js
mov
dec
jno
movsl
movsl
adcl
jp
daa
and
das
fsub
fsubrs
int3
inc
call
xchg
scas
daa
push
mov
jae
push
sbb
push
mov
addr16
fs
repnz
mov
sub
mov
push
jnp
sbb
xchg
addl
add
mov
push
int
into
jb
mov
sub
adc
sti
daa
ret
adc
and
mov
outsl
pop
movsb
arpl
in
inc
scas
mov
cmp
sbb
jge
lret
cmc
call
fists
pushf
adc
push
je
mov
adc
fisttps
jne
jle
or
sbb
mov
cs
or
xchg
push
cs
aad
pop
icebp
push
cli
mov
je
sahf
fnsave
ja
pushw
push
or
sti
fwait
jl
gs
adc
stc
pop
outsb
add
scas
mov
push
stos
jnp
add
cmpl
mov
testl
and
clc
mov
int
mov
and
sti
push
dec
pop
shrb
inc
shrb
in
std
repnz
mov
cmpsl
cmp
sti
mov
cmp
out
mov
jl
lock
rolb
and
push
jmp
inc
jmp
ja
test
sub
je
inc
push
jmp
jge
jnp
sbb
fldl
xor
adc
lret
fnsave
pop
cmp
mov
dec
out
lock
cmpsb
std
sbb
sbb
xchg
loop
xchg
fs
loop
shlb
je
pop
jo
mov
lahf
fistpll
and
aas
mov
iret
loopne
push
loopne
cltd
jnp
fwait
and
mov
push
sub
xchg
or
and
test
testl
lock
cltd
lea
movsb
fwait
fwait
stos
mov
inc
fimull
mov
cmc
xor
sbb
lret
rcl
mov
xorb
push
les
mov
jle
and
shr
or
and
imul
stos
fs
inc
mov
xlat
pop
adc
call
sarl
and
imul
flds
mov
sbb
mov
mov
mov
sbb
out
je
pop
jnp
scas
call
cltd
out
mov
mov
bound
sbb
jge
xchg
xor
xchg
jg
pop
insl
jp
xchg
daa
sbb
inc
inc
xorb
or
jb
dec
inc
test
pop
lock
xor
out
add
cmpb
mov
in
jns
lods
shlb
dec
cld
xchg
xchg
into
movsb
mov
mov
mov
cmp
cmp
lret
cmpsb
loopne
push
cmc
das
out
push
addr16
add
rcrl
and
jmp
fiadds
pop
dec
popa
sbb
adc
jmp
loop
enter
jp
sub
rolb
stos
fcmovnb
push
pop
fdivs
ss
stc
sub
int
sahf
and
std
es
dec
fcoml
xor
lods
and
mov
cmp
dec
das
xchg
in
imull
int3
rolb
test
bound
add
adc
call
push
mov
push
sbb
jmp
imul
jbe
jmp
rorl
mov
xorl
lahf
stos
push
pushf
loope
add
sub
insl
push
xor
jnp
imul
pop
jg
shrl
call
xor
cli
shrl
js
lods
movl
mov
pop
dec
jo
aam
mov
pop
xchg
dec
dec
stc
sbb
lods
or
push
push
pop
stc
pop
insl
and
sub
outsl
scas
mov
cmpl
sub
mov
shrb
xor
xor
bound
inc
movsl
cmpsb
rep
add
xchg
es
adc
aam
int
jns
inc
les
cmp
xchg
mov
stc
fstp
pop
dec
xor
pop
sarb
xchg
push
mov
or
bnd
xchg
std
pop
rclb
pop
daa
movsb
and
dec
pop
ja
into
lods
xchg
iret
dec
lahf
in
pop
imul
insl
adc
out
jns
mov
adc
clc
lds
lahf
xor
mov
jbe
addr16
clc
scas
mov
testl
shll
lods
sub
dec
sbb
shll
mull
out
lahf
iret
add
dec
int
rcrb
inc
pop
pushl
pushf
inc
pop
dec
xor
bound
ffree
loopne
dec
ret
dec
add
sub
xlat
out
enter
test
sbb
mov
push
loop
xlat
mov
inc
andb
jecxz
loop
push
iret
out
push
mov
mov
add
mov
and
cmp
insb
push
inc
repz
rolb
jb
je
mov
jmp
loope
stc
jl
mov
push
cmp
lods
jnp
mov
mov
lcall
ljmp
shl
inc
dec
lds
or
pushf
xchg
incb
jnp
jb
sbb
push
add
imul
je
cmp
xor
or
mov
ds
mov
cs
shlb
jg
xor
mov
daa
sub
scas
push
mov
xchg
mull
fcoml
leave
test
jbe
jbe
loopne
enter
sub
popf
push
cmc
cs
add
mov
cli
in
out
scas
xchg
stos
cmp
mov
enter
outsb
cltd
inc
xchg
cs
daa
imul
xchg
jecxz
cmpsb
sbb
pop
das
loope
out
repz
pop
jge
xchg
cli
shl
stc
jns
fidivrl
loop
nop
mov
xchg
lock
inc
and
jo
pop
addb
loop
dec
insl
mov
push
mov
jecxz
dec
out
mov
outsb
pop
mov
jb
cmpsb
mov
sub
mov
scas
xchg
mov
mov
mov
xchg
int
jle
mov
dec
mov
inc
push
push
imul
icebp
fs
daa
cs
mov
mov
test
cmp
sbb
pop
shll
call
popf
test
mov
movsb
pop
cmpsl
js
pushf
sahf
popa
cmp
stc
mov
dec
jbe
sti
xchg
dec
xor
and
jne
mov
mov
add
cmp
inc
mov
inc
mov
mov
add
add
mov
mov
shrl
fidivs
mov
xor
cmp
lcall
cmp
nop
mov
sub
adc
or
xchg
rorl
pop
repz
push
sbb
sub
dec
in
pop
jne
lcall
leave
or
test
test
scas
lock
mov
inc
insb
sbb
xor
mov
cmpl
lea
bound
out
jnp
jge
xchg
mov
out
aas
andb
imul
mov
clc
push
lcall
xchg
jbe
mov
lock
mov
out
testl
stc
jmp
in
inc
mov
fldt
fisubl
mov
pusha
sbb
mov
sarb
add
mov
dec
xor
cmp
sub
add
lea
aas
lret
push
mov
sbb
dec
pop
xor
push
in
jl
sahf
jge
in
mov
mov
jge
pop
mov
in
push
adc
mov
xchg
pop
and
adc
dec
std
mov
or
aaa
int3
in
xchg
mov
call
sbb
adc
push
mov
sti
push
jmp
loopne
mov
mov
push
push
mov
xchg
inc
jmp
xor
xchg
imul
mov
push
jno
mov
or
mov
push
push
lock
fildl
pop
ret
xor
loop
pop
jmp
out
lcall
and
mov
iret
mov
fists
hlt
xor
jmp
rclb
xchg
div
mov
dec
xor
sbbb
ret
jp
adc
mov
fidivrs
outsb
cmp
dec
outsl
adc
rcll
dec
in
mov
imul
popa
dec
dec
imul
jns
mov
sub
pushf
fs
int3
jecxz
xor
and
and
add
outsb
js
stc
sti
stos
pusha
and
sahf
or
mov
pop
sub
loope
mov
dec
sarl
loop
imul
or
sbb
pop
test
pop
ljmp
pop
cmp
in
int
inc
jo
enter
cmpl
dec
push
sbbb
data16
and
sub
pop
xchg
and
aam
jmp
mov
lock
xor
add
inc
insl
loope
hlt
leave
cli
mov
test
xchg
push
insl
pop
ret
push
mov
test
cmp
adc
sub
xchg
outsl
clc
sbb
fmuls
inc
mov
mov
fwait
cmc
mov
mov
jns
js
outsl
flds
test
mov
pop
dec
inc
mov
xlat
jb
icebp
or
enter
in
loop
cwtl
enter
jmp
dec
shlb
insb
jae
stos
fistl
xchg
add
fs
push
sbb
lea
pop
ret
insl
cwtl
sbb
add
jp
shrb
sbb
mov
pop
cs
and
out
pop
push
sti
mov
mov
cld
mov
jl
popa
sub
mov
or
and
inc
or
repnz
testb
inc
pop
mov
mov
loop
orb
fsubr
sbb
roll
das
clc
sub
ja
mov
cmp
aaa
jg
xor
push
push
or
leave
pop
inc
arpl
daa
shrl
lods
mov
lcall
push
dec
clc
addb
mov
repnz
jbe
or
dec
das
xchg
mov
adcb
test
mov
or
adc
add
test
sub
jle
push
xlat
loope
pop
cltd
insl
adc
in
push
ja
aaa
cmp
inc
sub
sub
out
fsts
jge
call
inc
test
lea
inc
into
stc
hlt
fcompl
inc
repnz
nop
lods
test
daa
stos
mov
scas
pop
mov
aaa
sub
mov
sbb
xor
push
sub
pop
pop
sub
sub
sbb
lret
clc
lcall
inc
dec
loopne
mov
dec
cmc
aas
sub
arpl
pop
mov
loop
xchg
push
push
lock
or
cmp
fildl
fs
xor
lea
mov
sub
cmpsb
lods
mov
das
or
leave
fucomip
jae
jnp
pop
stc
push
loop
ret
pop
xchg
xlat
dec
xor
xchg
inc
sub
jmp
es
xor
lahf
into
fstpt
data16
jmp
iret
inc
jmp
je
sub
push
ret
inc
jnp
or
xchg
jecxz
lret
push
rol
aas
sub
jnp
pop
lock
cmc
dec
push
sbb
adc
adc
mov
inc
outsl
mov
jbe
push
in
loop
lods
and
fldl
or
adc
ds
push
mov
pop
test
push
mov
daa
xlat
or
repnz
xchg
fcomp
mov
jge
mov
pop
adc
cmpsl
inc
outsl
imul
ss
xor
ret
jne
stos
push
ret
xchg
sub
and
js
outsb
ja
lods
mov
in
add
mull
mov
or
mov
fcoms
pop
les
data16
xchg
pop
push
test
sub
and
pop
adc
xchg
push
mov
or
xlat
add
adc
mov
jge
jle
imull
xchg
stc
xor
cwtl
and
aaa
sarb
or
jp
rcr
int
mov
fisubs
and
cld
imul
sti
jg
jl,pt
rorl
scas
mov
sbb
cmp
sbb
test
push
xchg
and
pop
jnp
imul
lock
mov
out
adc
cmp
dec
sahf
jno
sbb
fwait
sahf
dec
mov
pop
arpl
arpl
adc
cmp
sbb
notb
pop
aad
jb
jg
mov
jnp
adc
iret
cmpsl
leave
xorl
aas
push
stos
lret
mov
fcomi
mov
or
mov
xchg
imul
jae
repnz
inc
mov
bound
sbb
mov
add
cld
and
fs
add
int3
lcall
shlb
or
jno
fidivrl
pop
push
ds
mov
xor
cld
or
sti
xchg
stos
movsb
adc
les
in
cmp
js
push
mov
pop
push
dec
leave
addr16
mov
mov
xlat
sbb
push
in
fcomps
sub
in
jecxz
icebp
pop
stos
aaa
jne
les
mull
in
lcall
fimuls
or
mov
sbb
mov
iret
pop
test
xchg
test
xor
shrl
test
dec
nop
imul
mov
call
flds
xchg
lahf
xor
xchg
sbb
loop
or
rcll
std
shl
iret
push
je
push
rol
je
push
loop
xchg
inc
test
push
ret
sbb
adcb
cmpsb
adc
adc
mov
adc
add
adc
in
jns
mov
sbb
cmp
movsl
xchg
lret
mov
leave
pop
js
fiadds
inc
pop
pop
or
icebp
arpl
inc
outsl
sub
mov
xor
push
loopne
mov
imul
testb
sbb
les
mov
sbb
lods
inc
repnz
push
pop
lret
sbb
in
cli
out
or
mov
into
pop
dec
pop
outsl
adc
icebp
pop
fs
and
gs
xchg
mov
fcomip
or
mov
sbb
popf
shl
popf
xchg
dec
xchg
stc
lds
jle
cli
and
aas
dec
fwait
and
in
das
cmp
mov
dec
sbb
push
movsl
movq
loopne
push
test
test
jne
shrb
lcall
cmp
aam
ljmp
add
mov
mov
xchg
mov
movsb
mov
leave
cmp
or
leave
sbb
mov
rsqrtps
or
pop
adc
cmc
sub
xchg
jl
or
arpl
out
lret
jmp
dec
aaa
cld
test
lret
icebp
or
xchg
add
jae
gs
jp
repz
xor
subb
sub
mov
lahf
outsb
cmp
in
pushf
pop
loop
sbb
sbb
test
and
push
bound
pop
inc
add
dec
test
std
inc
int3
insl
enter
jb
hlt
cmc
jge
dec
or
jmp
dec
andl
cmpsb
repnz
out
out
es
pop
or
test
push
gs
test
repnz
pop
jecxz
sub
push
and
lahf
popf
pusha
push
out
mov
push
mov
popf
and
jp
inc
jnp
fisttpll
inc
sub
xchg
mov
lret
jecxz
jae
call
repz
sbb
imul
xchg
subl
xorb
imul
mov
push
ficomps
movsb
xor
cmpsb
je
sbb
ja
dec
sub
out
test
lret
xchg
mov
iret
jg
out
scas
push
js
lret
dec
push
mov
mov
lds
cmc
cmp
lret
sub
popw
cmp
pop
inc
pop
addr16
mov
imul
mov
jg
adc
or
mov
push
push
sub
mov
jg
and
repnz
mov
outsb
iret
movsl
inc
sbb
daa
ja
xchg
push
jnp
mov
call
jo
div
in
fimull
in
ret
mov
add
and
push
or
mov
cmpsl
cwtl
and
sub
lds
outsl
fcmovnb
mov
sbb
cli
aad
add
jo
and
adc
cmp
cwtl
inc
out
xlat
sub
dec
mov
xchg
xchg
mov
arpl
int
mov
call
adcl
jae
cld
xchg
sbbl
and
jl
adc
xlat
stos
mov
outsl
enter
test
sbb
fadd
pushf
sub
addr16
lock
dec
pop
test
pusha
fistl
adc
push
enter
or
aaa
pop
dec
cwtl
mov
and
mov
jb
arpl
insb
jmp
xchg
and
mov
mov
imul
mov
dec
es
jp
ss
xor
dec
in
mov
insb
lods
sar
xor
icebp
sarb
jmp
cmp
dec
popa
sbb
out
mov
mov
jno
push
lret
pop
cmp
pop
fsubrl
jmp
mov
std
test
das
jg
ret
movsl
xchg
dec
mulb
mov
jp
mov
pop
pop
out
adc
loope
sahf
sub
and
add
pop
fcoms
mov
cld
ljmp
dec
fisubrl
inc
int
mov
sub
mov
inc
mov
xor
cwtl
andb
fistl
adc
mov
mov
shll
movsl
fsubl
mov
adc
popa
inc
cs
fcomps
out
cltd
test
push
insl
pop
jp
in
lods
sbb
icebp
imul
add
pop
loope
sahf
lret
cmp
mov
pop
arpl
subl
adc
cmp
jns
pop
mov
popf
pop
inc
or
aaa
dec
mov
cmp
sbb
push
xchg
sarb
jnp
xchg
aaa
fnsave
dec
shrb
sub
jno
mov
fdivr
lods
inc
ficomps
xchg
add
pop
push
xchg
xchg
cmp
insb
push
mov
fcomi
inc
ret
jmp
dec
add
fwait
test
in
sti
int
xlat
lods
push
stos
pop
bound
mov
xchg
or
stc
mov
cmp
leave
sub
push
loopne
mov
push
pushf
notl
cmpb
outsl
inc
pop
std
sub
jp
inc
or
movsb
mov
loop
pop
mov
test
in
push
data16
adc
sub
mov
mov
into
xor
mov
aaa
or
push
or
cmp
cmc
loop
push
lret
mov
scas
push
push
lret
mov
insb
cmpsl
xor
icebp
jg
leave
pop
cmpl
pop
fucomp
lods
fimuls
mov
pushfw
das
scas
int3
enter
xor
lock
ret
jg
inc
stos
mov
aam
dec
sub
mov
fisttps
dec
in
jns
fisttpll
and
mov
inc
jns
push
cmp
jnp
arpl
jmp
ret
cwtl
iret
lret
lods
xchg
cmp
dec
je
push
lock
push
outsl
hlt
into
popa
mov
inc
and
pop
mov
pop
push
sahf
pushf
outsl
or
push
jbe
xor
xor
fwait
mov
loope
fcmovnbe
mov
sbb
inc
cmp
shl
fpatan
shl
fs
mov
pop
xchg
outsl
out
push
lock
cmpsl
add
mov
inc
arpl
or
andl
fsubl
orb
test
cltd
inc
and
mov
push
cli
test
insl
cmp
clc
sub
inc
push
push
adc
mov
push
push
cli
xor
and
imul
push
insb
jb
sbb
aaa
pop
mov
push
and
pop
mov
xor
out
mov
mov
cs
sbb
ret
push
shlb
popa
ja,pt
or
rcll
mov
push
add
mov
sub
push
in
jle
mov
pop
inc
push
sbb
mov
jg
test
mov
rorb
lcall
mov
xchg
inc
inc
cmpl
add
lea
out
inc
jno
adc
mov
ss
pop
sub
cmp
shr
dec
std
scas
sbb
push
idivb
mov
repnz
cmc
cmc
pop
ss
gs
adc
pop
jnp
dec
lret
mov
outsl
xchg
sbb
cmp
lock
and
pusha
ja
fbstp
dec
loop
adc
inc
push
cli
inc
jmp
rcll
and
pop
ret
mov
rcl
cs
mov
js
mov
test
push
cmp
push
dec
inc
lgs
hlt
mov
mov
call
cmp
adc
xchg
addb
mov
pushf
and
stc
push
mov
dec
mov
adc
mov
add
mov
shlb
jne
xchg
mov
loop
pop
push
fstps
pop
in
int3
push
fbstp
call
push
fs
mov
cmp
inc
adc
dec
xchg
or
mov
in
insb
ret
out
xlat
push
xchg
outsl
imulb
mov
jmp
xor
pop
out
xchg
and
mov
ss
mov
mov
insb
jmp
addl
push
sti
push
test
push
and
mov
pushf
mov
cmp
imul
ja
vphaddbw
and
es
cmpsl
cli
in
sbb
sub
push
ret
test
shll
sbb
lods
ljmp
push
xchg
outsl
cmp
cwtl
pop
and
fdivrl
add
mov
push
mov
inc
mov
mov
jne
xchg
rol
add
cmp
and
xor
push
cli
or
dec
cmp
mov
jg
aaa
xchg
mov
sbb
mov
fistps
mov
xchg
xlat
jns
pop
mov
test
js
or
xchg
ret
je
adc
mov
add
out
cmpsb
dec
es
imul
mov
push
push
repz
inc
mov
rcrb
cmovns
in
xor
xor
movsb
fs
jle
inc
iret
das
sub
out
xchg
mov
mov
mov
jl
jbe
xchg
aad
and
imul
stc
popa
dec
aas
hlt
lcall
loop
insl
xlat
ds
sub
push
jns
call
jnp
sbb
xchg
outsb
sub
pop
jb
dec
jnp
les
cmp
iret
cwtl
cmp
cmc
push
hlt
inc
insb
jg
cmp
fistpll
loope
inc
cmpsl
push
mull
insb
cwtl
out
or
xor
jecxz
sub
out
mov
popf
fidivl
cltd
mov
push
lret
sbb
xchg
movsb
sbb
test
test
mov
dec
fwait
xchg
imul
push
sbb
inc
or
lcall
shrl
or
push
mov
mov
sbb
fildll
in
inc
outsb
and
adc
adc
ja
fs
mov
push
cs
xor
xchg
xor
jle
test
xchg
mov
ret
inc
hlt
fstl
cmp
insb
in
mov
jp
clc
sbb
mov
pop
sahf
jae
cmc
movsl
sub
fsts
inc
mov
push
aad
jno
pusha
clc
dec
cmp
jge
jg
push
jl
mov
aad
cmp
jne
dec
xor
out
mov
jecxz
or
jp
mov
outsb
in
loopne
bound
push
adc
adcl
mov
mov
push
int3
or
xchg
fildl
or
shl
and
insl
push
ret
mov
test
dec
out
loope
rorl
add
cmc
lea
pop
les
mov
adc
xlat
scas
pop
push
cmp
jl
xchg
cwtl
pop
mov
maskmovq
js
fidivs
out
mov
shufps
xchg
mov
div
sbb
pushf
ja
push
jnp
push
mov
adcb
stos
xor
add
mov
shlb
mov
in
mov
nop
add
js
fwait
pop
test
sarl
outsb
ficomps
push
test
and
and
in
xchg
stc
jecxz
fistl
sub
or
testl
out
push
cmp
push
sbb
cmc
in
mov
jns
and
mov
sbb
xchg
push
cld
pop
hlt
mov
push
into
fimull
or
push
jo
rclb
leave
sub
das
mov
jp
out
icebp
xor
ss
mov
icebp
cmpsl
je
or
stos
xor
idiv
inc
movsb
dec
adc
jno
ljmp
dec
outsl
jl
test
sbb
repz
add
mov
push
jb
out
jae
pusha
add
jne
cs
inc
inc
in
sub
cld
mov
pop
push
in
mov
mov
cmpsl
jg
fisttpl
sbb
or
adc
rorl
lret
or
scas
mov
fdivl
mulb
movsb
icebp
ja
cmpl
loop
push
mov
cmp
addr16
ds
cmp
mov
cmp
dec
into
out
sbb
daa
fs
scas
jge
and
mov
inc
dec
add
mov
mov
xchg
jb
je
clc
subb
mov
mov
mov
test
fst
arpl
or
xchg
iret
int3
pop
out
arpl
cmpsl
shl
jmp
pop
dec
xchg
xchg
loopne
pop
jb
stos
pushf
sub
nop
cmp
mov
xchg
popf
adc
or
std
repnz
xor
jae
pop
pop
mov
repz
repz
dec
jle
sbb
adc
inc
xchg
jle
data16
test
int
mov
xchg
add
xor
lret
pop
mov
cmp
sbb
notb
xchg
cmc
test
enter
xlat
or
shll
popf
clc
add
cltd
shl
cli
subb
jb
adc
pop
leave
fcomps
sbb
icebp
into
xchg
rcll
lret
idivb
mov
sub
mov
lods
std
xchg
jns
aad
ljmp
mov
aas
and
or
rclb
out
bound
inc
jne
pop
cmp
in
xchg
roll
xchg
outsl
sbb
mov
ficompl
dec
pushf
sbb
adc
leave
dec
sbb
pand
test
stos
cmpsb
loopne
fisttps
xchg
pop
and
xchg
mov
dec
leave
ss
xor
dec
addr16
lods
outsl
xchg
sahf
and
cmp
ljmp
push
xchg
sub
pop
push
add
xchg
repnz
mov
jbe
push
adc
sub
jo
rclb
out
leave
pop
repz
jmp
repnz
jg
mov
xor
sub
and
cld
ds
xlat
push
enter
sbb
jae
mov
ds
jbe
dec
gs
ja
jmp
xchg
ret
adc
mov
pop
aas
or
jecxz
push
add
xor
adc
and
int3
adc
dec
xchg
and
cmp
jb
cli
and
mov
cmp
jle
mov
lret
adc
sbb
push
js
and
jecxz
sub
cli
and
jecxz
andb
push
mov
jnp
outsb
lret
xchg
aas
fbld
cmp
sahf
pavgb
imul
popa
out
scas
jmp
cmp
pushf
mov
psllq
mov
sbb
add
inc
adc
cmp
adc
stos
div
lea
sub
call
mov
gs
in
jb
sub
shufps
and
adc
rcrl
inc
or
insl
das
jb
aad
adc
incb
mov
repnz
mov
lods
adc
mov
pushf
jle
xor
xchg
cmp
int3
enter
je
xchg
sbb
xchg
cld
mov
cmpsb
das
sub
clc
insl
je
idivb
pop
test
jg
mov
mov
lods
mov
mov
insb
into
or
aad
testl
outsb
inc
dec
mov
ficompl
rclb
add
repz
xchg
mov
test
jmp
mov
cmp
gs
stos
push
push
xor
out
movsb
push
icebp
or
jmp
dec
adc
sbb
popf
jg
push
out
lods
imul
mov
repz
jmp
or
pushf
xor
aas
int
nop
inc
dec
dec
out
inc
popa
ja
outsb
jle
ss
ret
mov
xchg
add
mov
sub
fsubl
jmp
inc
or
pop
cmp
mov
pop
ret
std
and
cmc
test
xor
sti
mov
push
rcll
adc
das
mov
sarl
addr16
cmp
cmp
and
rorl
repnz
add
xor
or
fnstsw
xor
test
inc
js
mov
movsb
aaa
out
cmp
pop
int
mov
xchg
shrb
xchg
adc
fstpt
fisubs
sub
out
add
imul
or
adc
popf
dec
cmpsl
add
pop
loop
adcl
lret
cmp
cwtl
sub
inc
xlat
fildll
bts
movsl
fsubr
mov
mov
jmp
xchg
jecxz
xchg
sahf
lods
rclb
sahf
outsb
inc
dec
mov
fcmovnbe
ljmp
das
mov
and
jle,pt
push
and
mov
lret
rcl
test
scas
jno
add
jl
mov
jmp
sbb
pop
pop
mov
cmp
repz
les
mov
fwait
cmpsl
mov
sarl
or
inc
push
out
lahf
adc
jbe
movsb
mov
fcomps
xchg
test
adc
pusha
outsl
and
push
mov
add
pop
add
or
je
cmc
inc
movsl
jo
mov
cmp
ret
dec
test
xchg
pop
mov
adc
stc
and
jge
or
or
mov
add
dec
mov
inc
add
es
ret
adc
call
fimuls
je
or
dec
in
in
out
inc
inc
fldcw
mov
xor
mov
bound
push
imul
sti
es
adc
je
sbb
or
dec
adc
adc
icebp
push
dec
jno
dec
xor
pop
test
xchg
fnsave
addr16
add
bound
mov
pushf
mov
cmpl
mov
scas
je
mov
test
insb
mov
mov
nop
ja
jns
sub
stc
cld
pop
repz
mov
sbb
sub
jp
mov
lock
cld
and
or
xchg
in
adc
fnstenv
or
mov
cs
aas
mov
xchg
arpl
andl
mov
aad
in
mov
fstpl
sarb
and
aad
cld
adc
lods
js,pt
scas
xchg
not
gs
shlb
dec
mov
mov
cmpb
ja
stc
mov
into
test
hlt
mov
and
mov
shrb
ds
dec
cmp
mov
cmp
mov
mov
or
xchg
in
and
push
mov
cmp
mov
sub
or
fdivrl
or
mov
std
mov
push
and
imul
mov
sub
lea
mov
ss
or
mov
test
mov
ljmp
sub
outsl
or
xor
cmpsl
fcoms
push
jne
sbb
add
enter
cmc
int
xor
popa
cmovg
lret
cli
jae
test
insl
mov
shrb
sub
popa
mov
jmp
dec
mov
faddl
or
mov
shrl
jle
and
fiadds
or
cmp
and
lods
or
lock
mov
cmpsb
out
mov
sbb
jmp
mov
jnp
sahf
jnp
out
jge
inc
fisttps
push
fbld
jg
loopne
jnp
test
dec
xchg
jle
repnz
inc
inc
sub
mov
mov
into
movsl
into
loope
pop
jns
cmpsl
repnz
aad
xchg
cmp
dec
aas
cltd
xor
lcall
add
bound
mov
inc
clc
dec
sahf
pop
out
jl
inc
cltd
push
ud2
bound
mov
sub
lret
xchg
pop
and
nop
xchg
xor
stos
pop
ljmp
sub
xchg
in
call
inc
movsl
xor
pop
fs
sbbb
pop
jns
in
call
adc
mov
cmp
add
scas
xlat
inc
stos
or
jecxz
xor
mov
inc
cs
clc
adc
sbb
sarb
out
push
and
add
mov
mov
and
add
sub
mov
ret
lret
notb
sub
shr
call
jecxz
jp
mov
xorl
rep
or
jnp
sub
jmp
aam
push
jl
xchg
or
in
jae
pop
mov
and
adc
xchg
xor
mov
aaa
addr16
mov
fcompp
scas
lret
bndstx
popa
cmp
out
popf
mov
pushf
cwtl
sub
add
inc
jb
out
dec
xlat
push
sub
pop
arpl
repz
mov
scas
rcrb
jle
mov
lods
out
mov
sbb
das
adc
cmc
dec
scas
xor
gs
stos
mov
mov
cmp
add
xor
mov
inc
ljmp
in
mov
xchg
dec
jge
outsl
and
sub
xchg
mov
mov
nop
dec
mov
xchg
insl
pop
xor
jb
or
lock
lods
inc
add
lds
dec
fcmovnu
add
pop
inc
pop
loope
xlat
inc
sub
xchg
or
cld
loop
push
outsl
lret
mov
mov
pop
dec
je
ret
enter
aaa
sub
or
outsl
inc
stos
xchg
fs
pop
dec
inc
pop
fs
decl
mov
dec
ljmp
je
jg
insb
and
and
adc
xchg
ret
imul
or
jg
mov
xlat
jg
push
add
add
cmp
mov
xchg
rol
lods
loope
int3
cmp
movsb
xor
sbbb
repz
mov
mov
push
and
cmpsl
mov
xchg
pop
mov
aam
xchg
xchg
adcb
and
xor
mov
add
and
ret
pop
test
push
sbb
sbb
xchg
xor
loop
popa
lods
cli
sti
cltd
fdivp
jge
fwait
or
push
rolb
adc
hlt
mov
je
pop
mov
sub
sub
push
mov
and
out
repnz
cmp
push
test
out
mov
xor
ljmp
call
outsb
cmpsb
js
subl
subl
xchg
imul
mov
or
jb,pt
sbb
movsb
das
add
xchg
scas
cmp
mov
push
popa
jle
push
lods
shlb
cmc
sbb
push
insl
add
inc
shlb
or
mov
cmp
pop
lods
mov
xor
push
adc
pop
add
stc
addr16
cmp
and
or
mov
in
outsl
movsl
out
je
rcrl
int3
ds
dec
lret
jbe
out
ss
xor
xchg
or
mov
dec
mov
inc
or
cmp
sbb
push
sahf
pop
jle
add
cltd
ja
push
aad
or
fdivl
and
xchg
orl
xchg
data16
pop
movsb
add
arpl
leave
mov
movsl
in
in
icebp
jmp
or
cwtl
mov
divl
mov
les
pop
mul
or
inc
das
and
dec
mov
out
lss
popf
add
add
sub
repz
inc
sti
push
imul
cmp
or
js
mov
arpl
jb
fsubr
mov
pop
xor
push
cs
pop
inc
xchg
pop
sbb
jnp
movsb
mov
add
mov
mov
add
repz
jns
adcl
lcall
out
mov
pop
jnp
roll
fimull
jge
or
out
sbb
fldl
fildll
cmc
or
inc
sbb
dec
dec
add
add
aas
fistps
fwait
out
lds
pushf
popa
xchg
sbb
cmp
jae
mov
sarl
std
push
inc
add
xchg
std
or
add
mov
jb,pt
pop
bound
lods
repnz
inc
mov
cs
comiss
nop
stc
scas
mov
jae
adc
push
jns
push
popa
or
sar
push
lds
jb
mov
sahf
icebp
sub
push
push
rcrl
dec
and
mov
mov
push
xchg
xor
mov
jae
pop
std
jnp
jno
test
xchg
xchg
lret
test
loop
movsb
adc
in
inc
cmpsl
push
fsubrl
add
mov
mov
jmp
call
das
push
push
addr16
call
sub
mov
test
stos
adc
mov
out
mov
lea
nop
int3
inc
cs
adc
fistps
push
adc
push
and
fcoml
and
stos
jle
hlt
inc
or
fistps
inc
or
mov
leave
jmp
adc
outsb
imul
mov
js
movsl
and
repnz
cwtl
jae
pop
xor
mov
js
stc
xor
shl
push
xchg
adcb
mov
mov
xchg
mov
jge
stos
xlat
rolb
cli
push
jmp
dec
xchg
je
cmp
testl
mov
into
loop
xchg
mov
jg
mov
test
mov
or
cs
jecxz
add
es
nop
movsl
loopne
hlt
test
mov
mov
sub
enter
loopne
xchg
xchg
or
popf
mov
jo
or
jecxz
mov
lcall
sbb
mov
xor
inc
js
gs
es
xchg
repnz
les
sahf
xor
add
stc
pop
loopne
pop
push
cmp
ljmp
adcl
pusha
xor
fmuls
movsb
inc
rcrb
decl
in
lods
jp
pop
dec
push
xchg
xor
mov
pusha
mov
adc
sbb
flds
enter
pop
arpl
arpl
mov
mov
sarb
cwtl
cmp
lret
das
cli
cli
jmp
xchg
and
sbbl
mul
xchg
rclb
pop
jnp
xchg
inc
sub
rcrb
xlat
xchg
jbe
int
addl
add
lahf
jno
arpl
add
xor
faddl
call
add
sbb
mov
push
cmp
in
jne
mov
adc
cwtl
mov
mov
loop
lods
lahf
mov
or
shlb
jo
pop
int
fsubrp
add
lret
inc
insb
mov
pop
mov
mov
popf
in
or
fadds
ret
movsb
push
xchg
lock
lock
sub
addb
lods
popf
xchg
add
or
rorb
repnz
stos
pop
ss
sbb
jb
mov
cmpsb
ficoms
add
out
out
loopne
gs
inc
lret
fwait
mov
stc
insb
jge
xchg
ret
arpl
inc
push
cmp
ret
ss
push
jle
loopne
out
push
into
and
nop
daa
lds
cmpsb
mov
xor
sub
shr
int
loopne
xor
mov
cmp
jnp
cwtl
mov
inc
and
xchg
mov
loopne
jne
xor
pop
pop
movb
dec
iret
sub
push
lret
ficoml
mov
inc
je
ret
iret
aaa
push
sub
stc
sbb
jl
imul
pop
out
adc
outsb
je
sub
loop
mov
push
dec
js
mov
pop
and
mov
in
xlat
push
xor
out
adc
data16
shl
dec
sbb
inc
mov
xor
aas
mov
jg
dec
push
addl
sub
test
cmp
enter
movsb
inc
dec
mov
sti
fnsave
sub
xchg
sub
cmp
pop
push
pushf
rcr
addr16
fs
adc
and
andb
lods
add
mov
add
sub
add
jecxz
cmp
jo
fsubp
imul
out
mov
popf
xor
fsubrl
mov
xchg
arpl
in
das
fidivrl
fimull
jns
jb
lahf
daa
add
cmp
add
mov
pop
cli
xor
xchg
imul
jp
enter
les
sahf
inc
addr16
aaa
cld
pop
xor
sbb
cmp
gs
jo
xor
scas
dec
scas
aam
sub
sub
add
or
repnz
loop
inc
mov
jecxz
dec
adc
out
sbb
push
outsb
xchg
xorb
fnsave
aam
imul
pop
and
sub
loop
into
faddl
add
adc
mov
or
inc
push
sub
cmp
mov
jns
lods
xchg
std
fdivrl
jns
rol
mov
repnz
push
test
std
in
movsl
mov
add
push
icebp
cwtl
pop
arpl
lret
call
loopne
cmp
jmp
sub
scas
rcrb
pop
fcoml
subb
mov
push
cld
in
mov
sbb
push
shll
xor
jae
mov
fadds
xor
sahf
idivl
aad
push
add
mov
sbb
shll
push
mov
add
in
loope
push
fsubs
sub
pop
cmp
sti
jle
mov
xchg
sub
mov
scas
loop
jno
sub
popa
ja
fisttpl
ljmp
jmp
sbb
push
in
les
rcr
dec
push
pop
and
cld
push
adc
repz
mov
adc
es
push
fldcw
inc
sub
cltd
outsl
mov
fsub
dec
outsl
mov
adc
pop
xor
pop
cmc
pop
icebp
sbb
push
mov
mov
movsl
pop
or
adc
xor
or
push
push
jae
and
add
sbb
xchg
popa
lock
das
cwtl
cli
lods
shrl
inc
cwtl
rorb
sub
dec
pop
int3
std
sbbb
jbe
jmp
call
push
dec
dec
mov
jae
dec
popf
dec
xlat
sub
fmulp
cmp
or
push
xor
loope
lds
clc
jb
in
add
scas
insb
lock
popf
inc
scas
outsb
xchg
shlb
lahf
and
add
sbb
push
pushl
jns
adc
test
dec
cmp
add
xor
mov
imul
xor
arpl
and
cmp
sarb
xchg
insl
xchg
scas
lret
daa
or
stc
dec
push
and
fldenv
in
repnz
lahf
es
xor
adc
in
xor
cwtl
pop
movb
insl
mov
rcr
inc
sti
inc
sahf
xorl
daa
xchg
insb
jo
clc
lods
add
dec
xchg
in
sbb
outsl
ds
rol
addr16
jecxz
push
or
lds
incl
push
mov
pop
add
pop
pop
popa
cmpb
test
pusha
add
pop
ret
data16
mov
outsb
inc
xlat
ds
inc
add
pop
adc
dec
adc
icebp
clc
jg
sbb
outsl
add
scas
lods
jge
movsb
sar
pop
jae
mov
iret
roll
sub
and
inc
fistl
hlt
mov
jb
cmp
fdivs
in
mov
dec
rcrb
lcall
or
sub
mov
xor
out
leave
add
loopne
testb
add
jecxz
clc
fwait
loop
loope
les
jnp
cmp
dec
inc
mov
stc
out
and
adc
mov
movsb
into
push
jg
sub
add
arpl
fldl
out
imul
push
fldt
cwtl
sbb
loopne
mov
xor
push
test
lahf
aad
pop
movsl
add
loopne
hlt
sahf
pop
rcrb
and
sahf
movsl
imul
inc
daa
and
mov
add
shll
xor
dec
xchg
aas
scas
xlat
pop
push
mov
mov
test
adc
inc
xorl
xor
jbe
cmpsb
ja
dec
clc
fucomi
jb
aas
add
xlat
pusha
mov
adc
push
xor
push
gs
and
imul
jno
xchg
int
mov
cld
loopne
or
enter
add
xchg
pusha
push
xor
jle
hlt
mov
les
aas
shl
push
fadd
lock
add
test
das
pop
fwait
and
xor
ds
clc
adc
mul
mov
jno
fwait
mov
add
or
pop
fstp
push
pop
jb
out
mov
xor
pop
mov
and
daa
xchg
outsb
aad
push
and
add
and
negb
jnp
xchg
fst
sub
xchg
vcvtsd2ss
fdivrl
inc
sbb
lock
outsb
leave
xor
dec
adc
cmp
outsb
pop
inc
out
pop
sub
xor
xor
mov
add
imul
movsl
outsb
add
push
stc
and
in
jnp
fstl
call
pop
cmp
jb
pusha
mov
xchg
cwtl
ret
mov
mov
jb
ret
pop
mov
or
fsubs
or
lret
aaa
pop
and
popa
push
imul
push
iret
and
divl
stc
cmp
push
and
pop
cmpsb
and
push
and
jnp
pop
push
inc
sti
out
stc
cwtl
ret
sub
in
arpl
dec
fs
out
ja
adc
clc
std
sbb
imul
das
push
repnz
jbe
pop
enter
mov
bound
cmp
stc
and
sahf
inc
or
imul
fiaddl
loop
xchg
add
repnz
sbb
pop
das
xchg
xor
push
adc
outsl
aas
insb
mov
mov
stos
xchg
out
add
je
dec
jae
fwait
jg
addr16
aad
mov
jae
mov
pop
rol
push
inc
push
imul
fisubrl
mov
sarb
call
mov
std
sub
leave
sub
aaa
push
sar
inc
and
movb
mov
out
xor
cmp
out
aam
je
call
icebp
out
test
outsl
fidivs
call
sarb
fcmovnu
or
mov
clc
or
out
jecxz
rcrb
adc
push
mov
cmp
jo
adc
cmp
fld
cmpsb
mov
and
lods
sub
in
icebp
push
fmuls
lock
and
push
iret
and
pop
push
jmp
shll
sub
pop
enter
lods
int3
xchg
sahf
mov
js
test
xor
sbb
lods
cmp
mov
adc
es
clc
insb
std
mov
sub
aaa
cmp
mov
mov
adc
in
stc
cmp
jne
inc
and
xor
inc
ret
jmp
jne
test
loopne
push
aad
std
addr16
orb
dec
repz
lret
xor
fldenv
cmpb
lret
xor
inc
jb
iret
push
outsb
outsb
fwait
pushf
sbb
mov
push
jne
inc
loope
movsb
aas
data16
inc
lcall
jno
ds
lods
mov
dec
jae
out
mov
mov
jmp
mov
cmp
mov
out
jg
ret
repz
cli
outsb
inc
mov
popf
dec
cmp
loopne
hlt
cmp
lods
rcrl
pop
mov
mov
popf
xchg
outsb
loop
ljmp
call
ljmp
test
xchg
sub
or
mov
inc
cltd
sbb
movsb
insl
nop
mov
pop
mov
call
push
movsb
loopne
arpl
ljmp
imul
pusha
push
in
sub
and
jmp
pop
movsl
sti
pop
xchg
aas
imul
dec
mov
sub
test
lret
or
jmp
xchg
call
rcrl
into
aam
jge
jae
mov
or
push
mov
insb
ficomps
jge
loopne
xchg
lret
xor
pusha
jl
imul
cs
jg
cmp
in
test
inc
xor
add
or
lahf
dec
jmp
jne
jno
int3
adc
loope
les
dec
rep
lods
std
xchg
lods
insb
ds
movsl
jbe
push
push
cmpsb
push
push
xchg
jae
dec
fs
imull
test
jl
fcom
sbb
dec
cmp
loope
fidivrs
inc
rol
mov
lahf
mov
mov
sub
cmp
lock
fdivrs
pop
das
stc
mov
pop
jno
pop
pop
jg
pop
jecxz
mov
push
cmp
dec
test
in
xchg
lcall
icebp
fcoml
push
and
xor
in
push
sbb
mov
int3
adc
xchg
fiaddl
mov
mov
fdivl
dec
and
mov
nop
dec
mov
cwtl
sahf
popf
cmp
cmp
imul
popf
mov
push
inc
jno
scas
data16
stos
idiv
es
dec
cmpl
hlt
add
dec
mov
popa
sahf
jo
pop
pusha
cmc
repnz
aad
dec
sub
cmp
jae
pop
setl
outsl
mov
and
pop
add
aad
push
lahf
mov
test
rcr
jno
xchg
xor
xor
cmp
lock
push
enter
inc
adc
fsubrl
iret
xchg
xchg
dec
adc
in
movsl
leave
add
push
cmp
jg
xchg
sti
les
cmp
mov
out
pop
es
rol
pop
add
inc
stos
sub
xorl
cmc
stos
jle
rcrb
mov
xchg
dec
iret
lea
mov
call
out
pop
nop
jne
stos
cmp
cmp
push
dec
test
popa
mov
test
lods
inc
or
mov
xchg
sub
std
adc
push
std
adc
cmp
pusha
imul
mov
sbb
pop
xor
gs
adc
sti
or
out
xor
cmp
bound
mov
lcall
jnp
enter
pop
inc
cwtl
mov
mov
mov
jne
cli
out
lock
cltd
add
jns
enter
lods
mov
sbb
sbb
decb
shl
in
xor
mov
enter
das
push
aam
cli
add
adc
mov
jmp
adc
pop
sub
jno
movb
ficoml
or
lock
fisttpl
push
sbb
mov
sbb
jp
pusha
scas
xchg
repnz
test
int3
rcl
ljmp
fsubr
mov
mov
cmp
and
shr
lahf
lahf
fcomps
jae
sub
mov
cwtl
notb
ja
add
cmpsb
outsl
icebp
jno
jmp
mov
in
rcrb
adc
and
sbb
imul
cltd
shlb
or
sbb
adc
inc
dec
dec
adc
xchg
xor
mov
jae
xchg
insl
adc
mov
lea
fnstsw
push
test
sub
dec
int
mov
fstl
hlt
add
pop
cld
sbb
inc
xor
std
pushf
cmp
in
es
sbb
jbe
xor
push
xor
clc
and
cs
xchg
scas
aad
arpl
xchg
mov
orl
mov
xor
movsl
dec
xchg
pushf
sbb
scas
and
mov
loopne
cmp
in
mov
mov
mov
lods
sub
jns
adc
sbb
cmp
cld
fimull
stc
mov
stos
lods
xchg
sub
jge
call
into
inc
mov
iret
adc
fistl
inc
mov
pushf
fildl
dec
in
mov
les
mov
or
test
arpl
adc
adc
ret
mov
add
out
ds
ljmp
adc
jecxz
enter
xor
int
sbb
test
sbb
push
mov
jno
scas
clc
xor
iret
mov
rorb
aaa
popa
adcb
or
cmp
inc
ss
adc
movsl
xchg
adc
adc
push
mov
mov
mov
nop
pop
push
int3
mov
push
dec
shlb
loop
dec
jge
int3
fldcw
stos
push
out
outsl
add
int
cmp
inc
jecxz
into
and
lds
push
pop
mov
in
jmp
stc
mov
xchg
scas
ja
jmp
push
push
sbb
ljmp
das
jp
mov
out
pop
out
into
ljmp
test
ja
xchg
pmaxsw
jl
aad
xchg
sbb
fnstenv
scas
xor
repnz
int
jne
add
lods
mov
out
push
std
pop
mov
popa
mov
sub
adc
adc
or
int
mov
mov
cmp
cwtl
and
pop
into
lcall
mov
popf
xor
int3
pop
lret
mov
dec
lcall
popf
out
jns
test
into
call
mov
lds
cmp
jo
fs
scas
pop
push
jge
jmp
jg
pop
mov
mov
cmp
test
pop
ficoml
es
jno
cwtl
xchg
icebp
dec
cld
mov
lcall
mov
adc
pop
inc
dec
jbe
pop
test
adc
sbb
dec
or
roll
daa
inc
ljmp
sub
pop
xor
cmc
les
aas
decb
addr16
push
inc
inc
icebp
insl
or
lds
mov
testl
cmp
xor
insb
scas
inc
fwait
xchg
in
add
aad
and
xchg
and
ret
xchg
fwait
out
push
loopne
mov
xor
jb
xchg
scas
xchg
sbb
or
addb
out
sub
cmp
inc
mov
cwtl
cld
sbb
push
pop
add
test
xor
arpl
icebp
and
hlt
mov
sub
mov
out
cmp
cmp
out
jns
push
cmp
adc
pop
pop
out
jns
repz
mov
leave
cmp
mov
movsl
inc
mov
push
push
or
add
mov
adc
cmp
cmp
mov
sahf
jmp
int3
adc
loope
frstor
aaa
mov
addr16
jne
ret
dec
mov
push
mov
mov
nop
jns
cmp
test
mov
inc
das
inc
jbe
lock
inc
loope
push
jecxz
mov
and
jne
xor
hlt
lock
dec
out
ljmp
sub
std
ja
pop
pop
or
pop
sbb
stc
test
popa
push
test
dec
int
loopne
cmovae
mov
loopne
aas
cwtl
sub
xchg
sbbb
xchg
jae
pop
push
push
mov
leave
scas
lods
cli
out
mov
mov
in
xor
mov
jg
inc
pop
movsl
in
jno
sub
xor
pop
xchg
mov
push
inc
lahf
sarb
mov
das
enter
sbb
cmpb
sbb
xor
les
add
in
push
lret
sub
xchg
cltd
cmpsb
jb
jecxz
aaa
divl
iret
push
test
std
add
mov
outsb
sbb
xchg
sti
or
out
jne
mov
popf
add
inc
cmpsb
pop
ds
fsubs
pop
cmp
scas
pop
jnp
mov
mov
adc
stc
test
pop
cmc
jecxz
imull
ret
fldenv
fsubs
jb
cmp
mov
add
lods
mov
cmpsl
sub
int
sahf
adc
je
into
mov
in
lahf
hlt
cmp
sbb
int
cld
xor
cmp
add
iret
mov
out
clc
sbbl
jae
clc
test
shrb
insb
lret
dec
push
test
ret
imul
fildll
inc
adc
daa
lahf
lea
pop
xchg
fsubr
adc
fmuls
addl
dec
jge
mov
int3
sub
jmp
adc
into
pop
add
xor
jne
pop
out
mov
arpl
add
inc
cmp
jp
push
arpl
loop
pop
adc
out
fwait
inc
push
cmp
xchg
aas
pop
xor
in
out
stos
stos
mov
add
mov
inc
mov
in
push
inc
inc
sbb
pop
dec
stos
push
and
push
and
push
mov
mov
fwait
in
xor
mov
xchg
cld
jne
pop
loope
loope
mov
divl
or
push
jg
out
lock
push
out
or
gs
push
arpl
mov
jae
or
adc
pop
push
int
push
cwtl
adc
mov
mov
mov
jnp
pop
push
inc
xchg
mov
imul
xor
pop
sahf
mov
iret
roll
sbb
jno
xchg
daa
idivb
sbb
jb
mov
mov
sbb
jg
rolb
out
jae
and
movsl
inc
insl
outsl
rcl
cltd
sbb
negl
cli
push
mov
in
sub
popa
sbb
sbb
cmpsb
cmpsb
jb
xor
inc
scas
cld
mov
mov
pop
xor
ds
cltd
js
stos
xor
mov
sbb
cmp
movsl
mov
divb
lock
or
push
stc
push
popa
push
lret
dec
dec
push
aam
out
pop
jmp
xor
into
cmp
fwait
clc
pop
lcall
ljmp
pusha
mov
mov
imul
pusha
or
push
xchg
ja
cmp
xlat
xchg
das
lcall
fcomps
fucomi
jno
gs
mov
sar
scas
out
aaa
jnp
fmulp
aas
sbbb
rorb
or
jo
bound
sbb
sbb
jno
scas
xor
scas
mov
xor
mov
inc
fists
aad
popf
push
mov
sti
xacquire
cmp
jmp
sbb
sbb
pop
popa
and
sbb
pop
sbb
and
int3
push
push
pop
les
shl
mov
sub
test
pop
mov
lahf
movsl
push
adc
cs
push
outsl
rcrl
xor
ror
inc
and
test
dec
inc
sbb
cld
mov
data16
xor
jnp
fdivrs
stos
or
clc
aas
xchg
adc
orb
dec
insb
std
das
out
and
or
inc
and
outsl
nop
push
test
popa
rolb
insb
xchg
imul
and
andb
cltd
jecxz
mov
mov
ret
mov
popa
insl
cmpsb
and
in
mov
mov
fiaddl
jns
pop
and
nop
sub
mov
aam
lds
adc
adc
inc
add
push
popa
push
out
add
sub
in
fwait
bound
or
adc
and
push
push
xchg
mov
mov
mov
fwait
stos
adc
dec
adc
scas
scas
adc
stos
aaa
arpl
iret
sbbl
or
jg
fdivr
jne
sub
shrl
cmpsl
fs
jecxz
sti
sti
jb
into
les
sti
bound
cmpsb
sahf
mov
adc
lahf
xor
out
insl
xlat
sahf
adc
fldt
rclb
test
mov
bound
fwait
outsl
xor
in
sbb
hlt
mov
sbb
adc
lret
push
or
xor
repz
or
push
jns
cltd
cmp
ja
xchg
daa
sbb
xchg
cmp
addb
jecxz
mov
faddp
jmp
mov
inc
int3
and
mov
cli
pop
xor
mov
les
and
shll
sahf
inc
lcall
test
in
int
xchg
into
lods
in
add
add
inc
fisubs
mov
bound
sbb
fiadds
movb
and
movsl
and
inc
loop
xchg
js
cmp
adc
dec
adc
or
mov
sahf
pop
mov
pop
fwait
xchg
stos
addb
sbb
mov
xor
push
movsl
mov
pushf
and
aas
mov
push
xor
test
sbb
fidivrs
push
loop
in
mov
inc
mov
clc
inc
call
movsb
loope
or
mov
in
inc
sub
mov
in
sti
xor
inc
test
add
mov
loope
rol
push
and
mov
pop
lret
xchg
jnp
or
repz
movsb
stc
push
in
mov
jmp
xchg
sub
mov
shrb
movsl
cmp
bound
je
stos
mov
add
fwait
cmpsl
jmp
ret
jmp
aam
jae
xor
outsb
mov
pop
jno
mov
bound
mov
add
push
lods
cmpsb
ljmp
imul
sub
push
aaa
je
mov
je
cmpsb
cmp
xor
or
add
cmp
jmp
shl
bound
lcall
fdivr
mov
lock
lds
lods
add
lahf
jp
cli
stc
add
int
dec
xchg
mov
dec
mov
ljmp
mov
and
push
add
js
push
mov
stos
inc
rclb
fisttpl
sahf
je
dec
gs
fs
jmp
sub
hlt
sbb
mov
inc
dec
rol
inc
sbb
xor
mov
adc
das
mov
and
push
inc
cmp
inc
xchg
mov
popf
and
mov
xor
push
iret
repnz
pusha
ja
adc
stos
enter
sbb
jbe
jbe
push
jp
xorl
icebp
adc
mov
xchg
xchg
pop
push
add
inc
cwtl
popf
es
js
xor
jmp
xchg
or
faddl
cmp
or
lret
jl
sbb
mov
arpl
cmc
pop
mov
jne
test
bound
cmp
mov
popfw
adc
les
push
int
jne
cmpsb
xor
jge
sbb
and
out
scas
pop
arpl
pop
mov
jb
xor
test
decb
into
mov
sub
xchg
cwtl
push
xchg
pop
cmp
mov
stos
jae
adc
cmp
fdivrl
and
mov
sbb
push
sub
mov
sbb
jb
ret
popf
inc
jp
or
push
jbe
pusha
or
push
sub
and
jecxz
dec
inc
jl
outsl
adcb
jo
cmp
dec
pop
fdivs
pop
push
scas
dec
pop
mov
sbb
mov
xchg
pop
sub
pop
mov
pop
aas
xchg
hlt
shr
dec
rcl
push
pop
ljmp
stos
pop
test
movsb
jge
shrb
pop
cld
int3
das
xor
pop
fisttps
call
adc
mov
loope
sub
cld
stc
xor
jecxz
or
ret
iret
imul
pusha
lea
inc
and
cmp
jg
std
mov
xchg
ljmp
divb
pop
sub
pushf
push
add
aaa
fnstsw
sar
stos
push
sbb
addl
pop
push
and
negb
test
test
push
mov
out
fisubrl
adc
int
lahf
dec
adc
nop
out
int3
cmpsb
rolb
inc
jne
aas
inc
data16
dec
mov
and
mov
jb
cmp
jl
cmp
pop
les
mov
rolb
mov
sbb
outsl
aas
adc
jge
push
clc
sbb
fsubs
and
ret
pop
xchg
sub
test
or
mov
push
pop
cld
pop
mov
out
ds
jo
cmp
adc
dec
add
fisubrl
cld
arpl
lret
in
movsb
pop
mov
fistl
cmpsl
adc
stc
or
clc
mov
out
dec
leave
mov
sti
mov
mov
sub
js
xchg
test
scas
xor
xor
cmp
adc
addl
add
jmp
call
dec
mov
xor
pop
scas
mov
popf
lods
std
rorl
mov
dec
sub
mov
mov
lea
nop
xor
lds
push
int
iret
sub
fcoml
or
cmp
fsubrs
sub
fsubrs
imul
js
std
gs
ss
and
or
insl
sbb
mov
out
sbb
hlt
insb
dec
cld
mov
mov
adc
jnp
sub
test
fnstsw
xor
cmp
fsubrs
jg
jmp
mov
dec
pushf
imul
mov
popf
mov
fistpll
inc
xlat
test
sbb
adc
pusha
push
pushf
xchg
dec
push
inc
fimull
lahf
add
jnp
push
inc
dec
les
loope
push
aam
and
sarl
leave
sbb
xor
inc
or
fbstp
jle
test
or
push
dec
xchg
das
fcom
mov
stos
pop
adcb
lods
loopne
loop
jno
xchg
pop
addb
jne
jb
pop
push
inc
out
mov
mov
popa
mov
aad
repnz
dec
aas
std
xchg
jae
mov
arpl
push
sbb
cmp
dec
xor
mov
sub
addr16
sbb
call
xlat
inc
inc
test
testb
shlb
mov
fdivl
movsl
std
pushf
dec
mov
xor
inc
jmp
pop
es
sbb
outsb
aas
or
or
outsb
push
cs
adc
xchg
xor
aam
repz
outsl
in
inc
cli
dec
mull
and
sub
fcomps
or
mov
push
loopne
pop
push
mov
ljmp
imul
mov
cli
lea
push
addb
out
decl
cmp
addr16
scas
cltd
aam
ret
pop
int
pop
ljmp
lock
sbb
orl
dec
sub
jae
push
sub
fucomip
mov
pushf
popf
add
push
aas
sbb
add
in
xchg
popf
mov
or
aas
insb
sbb
hlt
aaa
xor
outsb
mov
jns
mov
stos
adc
jo
js
add
int
lcall
push
mov
xor
aas
mov
mov
sbb
inc
and
into
sub
les
mov
out
dec
adc
movsb
cmc
lret
int
inc
and
mov
outsl
arpl
lahf
addr16
xor
inc
fsubrl
aad
jbe
int
mov
lds
dec
mov
mulb
inc
int
jb
dec
push
pop
mov
jnp
insb
shlb
pop
add
inc
push
frstor
movsb
fdivl
and
cs
fcmovbe
sbb
and
dec
notb
xor
rcl
loop
xchg
or
enter
into
add
lahf
jnp
mov
je
repz
sub
ljmp
cmp
xlat
add
je
adc
inc
hlt
dec
xor
test
enter
es
sub
push
imul
sti
mov
cmp
mov
mov
test
cmp
mov
fidivl
arpl
fld
int3
add
adc
sub
cmp
in
pusha
faddl
mov
mov
lock
insb
arpl
lret
pop
push
mov
test
daa
dec
mov
mov
or
lods
ljmp
pop
and
fildl
push
repnz
movsl
mov
fisttps
mov
cmp
in
jg
mov
arpl
movsb
ja
jle
mov
jnp
ja
jge
pusha
xchg
sbbl
ds
test
daa
push
mov
or
jg
hlt
jnp
fcoms
mov
pop
add
imul
push
dec
rcrb
add
and
mov
mov
xchg
pop
inc
mov
xor
sub
xchg
out
stos
pop
mov
jecxz
jo
mov
jno
cld
xlat
push
fadds
imul
lods
mov
adc
sub
and
adc
add
rol
mov
adc
out
push
addr16
lods
mov
iret
sub
mov
repnz
test
fistpll
std
fidivrs
fs
into
dec
and
or
push
inc
sar
or
rcrb
push
mov
fsubr
loope
cs
push
cmpsb
arpl
pop
adcb
mov
mov
inc
mov
jbe
dec
xor
cld
stc
in
out
out
mov
testb
sub
hlt
mov
inc
jecxz
ret
lahf
xchg
xchg
incl
rorl
mov
popa
and
adc
adc
stc
xor
jecxz
mov
ficompl
inc
pop
movsl
mov
cmp
inc
jb
xchg
ja
add
cmpsb
cwtl
in
cwtl
push
je
jae
push
xor
jl
test
pop
div
in
enter
inc
in
mov
xchg
sub
fwait
movsl
aad
adc
adc
jne
andb
ss
jae,pt
popa
cld
out
sbb
daa
testl
pop
lock
sub
and
push
mov
arpl
shl
enter
fidivs
jns
add
mov
cmpsb
add
ret
icebp
mov
fcmovnbe
repz
sub
and
cltd
int
out
movsl
push
sub
cmpsb
add
mov
push
cmc
fmull
ljmp
clc
add
clc
sub
loopne
iret
das
jnp
xor
inc
lods
xchg
mov
or
cs
lret
push
cltd
aaa
cmp
xchg
mov
add
test
aas
or
push
fisttpll
enter
mov
test
mov
leave
mov
jne
cli
add
cli
bswap
in
mov
pop
inc
imul
int3
popf
pushf
outsl
test
or
xor
scas
int
or
movsl
and
mov
rclb
and
adc
pop
test
lret
mov
inc
or
std
out
out
jge
cld
mov
mov
dec
push
filds
cmp
inc
jp
enter
and
mov
dec
xchg
imul
or
pop
cmp
xchg
inc
mov
out
or
cwtl
mov
pusha
mov
mov
iret
xchg
dec
insl
jg
jbe
mov
push
mov
fsubrl
jmp
add
ret
mov
mov
adc
sti
ret
push
sub
fidivrs
cmp
aaa
movsl
lea
sub
jl
ja
adc
add
les
insb
sub
test
cs
adc
pop
mov
scas
iret
or
jmp
stos
cli
aas
xchg
pop
or
push
adc
js
daa
inc
cmp
test
inc
aam
push
jp
dec
push
mov
pop
ljmp
mov
and
xor
nop
adc
pop
add
push
and
cmp
cli
jp
test
pop
clc
lahf
loope
or
mov
and
sete
insb
lret
xchg
pop
inc
push
mov
xor
stos
dec
sub
add
sbb
xlat
in
mov
rcll
cmp
mov
sbb
hlt
sub
inc
iret
fadds
cmp
xchg
arpl
add
pop
adc
cli
aaa
cld
orl
ja
dec
sbb
repnz
xchg
stos
out
jae
je
mov
cmpsl
mov
stos
in
out
scas
xlat
dec
insb
subb
fwait
cmp
jge
push
adc
push
or
push
adc
cmp
mov
sub
idivl
dec
mov
gs
cltd
psubq
rcr
loope
sbb
ficompl
lds
xor
adc
pop
clc
xchg
and
pop
lds
lods
test
lock
ret
rep
push
sub
push
mov
movsl
in
pop
std
jmp
cs
aaa
sub
push
add
pop
sarl
jp
or
and
lret
fisttpll
adc
out
push
and
xchg
test
jno
xchg
mov
int
rorl
jnp
cli
pusha
ja
nop
jae
sti
jg
inc
and
addr16
data16
rcrl
inc
push
loop
cmc
cmp
mov
dec
aaa
push
xchg
daa
jnp
xor
push
xchg
in
push
jl
pop
in
ret
or
adc
fimuls
pop
rdpmc
mov
jecxz
push
lea
aaa
in
xor
jae
bnd
je
hlt
lods
add
lea
jg
jmp
incb
cmp
jns
gs
filds
cmp
stos
cmpsl
jne
inc
xchg
mov
xchg
dec
xchg
lcall
adc
sbb
popl
in
sub
repz
sbb
mov
loopne,pn
das
push
rolb
xor
cmp
fidivl
mov
loop
lcall
adc
xchg
mov
stos
sub
push
dec
loope
adc
jne
inc
mov
jae
mov
add
pop
in
adc
xchg
sahf
ljmp
or
iret
ja
cmp
insb
dec
stc
scas
in
int
mov
inc
aas
sbb
sbb
lds
dec
jecxz
clc
test
add
push
lods
pop
inc
sbb
gs
push
fisttps
bound
xchg
adc
cld
or
imul
incl
xor
lods
and
test
xchg
pop
outsl
out
xchg
sub
mov
popf
imul
xchg
insb
jae
xchg
jecxz
ljmp
add
out
out
rcrb
lea
test
or
cmp
xor
and
xor
adc
sbb
mov
repz
mov
inc
daa
roll
jl
xchg
or
xchg
ret
add
push
js
decb
loope
nop
xchg
aad
sub
inc
xlat
dec
loope
mov
shrl
xor
bound
loop
add
mov
and
mov
sarl
flds
scas
xor
mov
movsb
push
sub
inc
vmovupd
icebp
ss
pop
xor
add
sbb
pause
and
idivb
dec
jno
pop
dec
mov
scas
enter
and
aad
xchg
lret
push
add
imul
inc
cmpl
sbb
mov
xor
imull
adc
lds
sbb
fsubrl
ret
jae
das
cltd
incl
jbe
add
pop
xchg
add
pop
sub
push
jo
lea
mov
clc
cmp
js
mov
cld
inc
daa
or
mov
inc
cmpsl
clc
ds
fnstcw
xor
mov
rcrb
dec
movsl
mov
lods
xchg
mov
jecxz
adc
mov
mov
xor
xchg
xlat
inc
aas
xor
xor
enter
dec
dec
sbb
push
and
int
fs
pop
mov
out
xor
xchg
dec
xor
and
insl
or
xchg
imul
inc
out
in
mov
pop
mov
ja
pop
sbb
int3
out
add
inc
inc
les
pop
jae
in
mov
jno
jle
mov
shrb
sub
int
jno
cs
mov
inc
out
mov
mov
jecxz
js
xchg
mov
shrl
inc
sahf
cmc
cmpl
psrld
dec
lock
cmpsb
adcb
mov
jmp
cmp
sub
mov
cmc
mov
cwtl
or
adc
fbstp
mov
stos
xor
ret
add
cmpsb
inc
or
push
jle
jo
jae
jns
pop
mov
add
out
pop
pop
and
mov
pop
jo
pop
lods
testl
mov
rorl
mov
inc
jae
jns
or
sbb
in
add
std
fwait
mov
ret
addb
inc
das
inc
mov
rolb
cmp
mov
adc
dec
push
or
test
inc
xorb
and
ljmp
frstor
incl
js
leave
push
inc
movsb
lock
add
ret
mov
and
repnz
je
add
pop
cmp
das
sbb
insl
and
inc
mov
je
ds
mov
xor
add
and
mov
adc
into
data16
cmp
lcall
gs
sahf
mov
insb
mov
movsl
xchg
fists
test
repnz
and
dec
mov
fsubl
xor
adc
repz
push
sbb
sti
adc
imulb
pop
fsubs
sub
inc
and
mov
jle
jno
mov
mov
ja
xchg
inc
jmp
pop
leave
xchg
in
dec
cltd
jp
xlat
insl
jae
dec
je
cltd
lret
shll
repz
outsl
mov
out
xchg
add
mov
cmc
enter
lds
push
outsb
mov
sub
cmpsl
in
pop
adc
sarb
mov
repz
jge
sub
lcall
int
jmp
sbb
shll
mov
add
in
pop
aam
add
cld
lods
mov
sbb
sbb
das
popf
loopne
add
pop
nop
xor
mov
inc
shl
scas
sub
loopne
pop
pop
add
and
dec
outsl
icebp
mov
or
jns
rolb
xor
ljmp
pop
jns
out
lock
and
ret
mov
xchg
xchg
cmp
pop
or
and
aaa
ja
addr16
adc
xor
test
dec
in
adc
cs
out
inc
pop
out
sahf
into
jge
inc
adc
adc
les
fidivrl
jbe
insb
pushf
xlat
lds
les
in
add
in
cs
mov
outsl
scas
test
popa
iret
ret
jg
test
mov
in
mov
fnsave
stc
into
inc
jae
dec
jns
idivb
test
scas
xchg
jae
xor
or
push
aad
mov
test
adcb
mov
movb
daa
push
pop
fstl
loopne
aaa
lods
sbb
loope
adc
mov
xor
sbb
mov
lods
mov
mov
cmp
push
mov
mov
hlt
ret
sti
popf
mov
xor
lahf
and
inc
mov
in
mov
popf
das
mov
popa
test
cmp
sti
aas
fstps
inc
and
mov
mov
mov
out
adc
lods
cmp
fists
mov
out
jmp
stc
sbb
inc
mov
xor
dec
shll
xchg
sti
add
and
nop
imul
xor
clc
dec
and
lret
jo
int
and
inc
out
fisubrl
cmp
add
xor
jp
sbb
adc
test
cs
test
inc
inc
leave
adc
mov
outsl
out
xchg
mov
ficoml
jns
out
cmp
cmc
popa
sahf
pusha
cmp
orb
inc
xchg
es
stos
push
xchg
push
pop
bound
push
leave
fidivs
outsl
shl
pop
xchg
fucomp
int3
cmp
adc
imul
test
inc
test
in
stos
pop
lods
inc
and
jmp
into
fucomip
mov
lret
jle
push
cld
lret
and
push
inc
into
lods
ja
sub
jmp
stos
test
adc
loope
sbb
bound
aad
aad
popa
and
sbb
cmp
fwait
jp
xchg
neg
mov
fs
push
cmp
mov
call
addr16
fldenv
xchg
int
xor
imul
pushf
lock
add
and
xchg
aad
cmpsl
push
push
icebp
sbb
fucom
cmc
mov
push
imul
mov
mov
pop
sub
mov
and
clc
in
add
lds
cmpsb
cmp
jnp
rorb
mov
hlt
xor
inc
mov
lcall
mov
add
sub
sbb
push
pop
loope
mov
loopne
fsubs
dec
adc
xor
fdivr
mov
imul
jecxz
mov
arpl
testl
xor
arpl
or
das
cmp
or
loopne
sub
push
and
and
sbb
jge
inc
jo
adc
les
pop
fisubrl
outsb
push
add
movntq
jbe
inc
push
or
pop
cs
push
into
or
inc
push
dec
ret
mov
ljmp
adc
sub
mov
test
leave
setge
cmp
cmc
xlat
pop
cmp
jp
clc
push
jp
or
rorb
mov
pop
add
inc
sbb
stos
das
hlt
xor
lods
loope
out
push
fstpl
push
mov
sbb
or
in
loope
decl
aas
inc
orl
xchg
insb
mov
push
jecxz
dec
sbb
xor
adc
aad
or
mov
int
dec
pop
bound
dec
repz
sub
aas
and
fidivs
test
pop
cmp
pop
nop
sbb
js
lcall
cwtl
mov
scas
cli
mov
jne
and
lea
inc
ret
lret
leave
mov
cmpl
sahf
cli
in
pop
lods
jae
outsl
inc
fstl
jp
imul
movsl
sbb
mov
ljmp
out
mov
mov
xchg
push
xchg
arpl
push
pop
out
in
mov
add
int3
cmpsl
stc
mov
xor
ret
mov
aad
lock
outsl
popa
outsl
dec
out
or
mov
sbb
in
ja
xchg
push
daa
mov
pop
mov
sbb
mov
shll
lods
xchg
call
in
mov
in
jecxz
mov
mov
sub
and
imul
pop
xchg
lods
xchg
inc
jge
and
stc
icebp
sbbl
add
ss
add
or
cmp
das
lods
dec
loopne
mov
movsb
notb
cmpsb
jle
push
mov
inc
jb
fiadds
stos
mov
stos
mov
jp
stos
cmp
and
stc
outsb
int3
int
inc
pop
jne
adc
jnp
lret
and
mov
and
mov
push
jl
int3
fwait
andb
add
mov
ret
in
mov
pushf
adc
pop
push
into
sbb
push
stc
stc
decl
test
std
jbe
mov
int
es
jbe
jbe
ss
popf
addb
adc
rorb
jno
sbb
mov
add
cmp
adc
pushf
cli
icebp
clc
dec
insb
pop
xlat
mov
mov
popa
add
das
push
cltd
xor
inc
loopne
dec
sbb
and
mov
das
sbb
gs
lock
sahf
adc
in
add
dec
test
aad
mov
inc
adc
cmpsl
add
mov
mov
test
dec
fcomps
jae
inc
mov
scas
fnstsw
inc
jl
jb
xchg
xor
push
fcmovnbe
inc
arpl
jns
icebp
test
jae
adc
popf
adc
call
sub
pop
inc
out
fsts
aaa
jmp
push
or
cwtl
push
sub
cmp
cmp
sub
push
jo
insl
lock
outsb
mov
push
mov
js
rcrb
subb
in
fidivrs
jo
outsl
xchg
mov
aam
mov
or
mov
clc
subl
mov
add
mov
jmp
daa
add
sar
cli
aas
andb
xchg
add
loopne
pop
pushf
enter
mov
hlt
loopne
aaa
jne
loopne
lret
dec
push
loopne
mov
mov
into
aad
scas
repnz
jge
dec
pop
bound
gs
xchg
bound
and
jbe
add
add
psrlw
jle
nop
test
mov
pusha
arpl
mov
ret
sahf
ja
add
inc
test
outsb
xor
mov
imul
fcomps
mov
insl
insl
jle
out
clc
dec
push
int3
outsb
cmpsl
adc
adc
iret
cli
xor
movsb
sbbb
sub
xchg
clc
inc
out
fimull
xchg
and
out
movsl
push
jmp
rorl
stc
testl
lcall
mov
les
dec
lea
xchg
mov
jbe
push
mov
es
xchg
mov
aas
iret
pop
mov
mov
fnstenv
into
pop
loope
cmc
repz
cmp
xor
repz
push
and
out
mov
shlb
aad
inc
mov
xor
mov
inc
and
inc
movsb
push
nop
mov
jne
hlt
push
xchg
scas
sub
jl
xor
dec
aas
xchg
mov
cmp
mov
and
cli
outsb
jmp
jmp
push
fstpl
push
in
pop
add
or
popa
mov
sbb
and
stos
dec
leave
or
and
pop
xchg
mov
xchg
push
xor
sbb
inc
sahf
cli
aad
dec
pop
pop
xchg
xchg
pop
movsb
push
aad
mov
push
sti
pop
cmp
out
jecxz
cmpsb
movsl
push
cld
xor
xchg
pop
jecxz
out
imul
mov
mov
out
xchg
cli
mov
pop
insl
or
shrl
fimull
imull
dec
fwait
in
movsl
push
mov
push
push
fsubrs
xor
add
mov
sarl
xor
mov
rcrb
xchg
movsb
mov
fbstp
sbb
mov
sbb
mov
stos
cltd
xor
xchg
sub
loopne
jp
popf
xor
dec
inc
loopne
jne
iret
pop
ds
btr
sub
into
sbb
dec
sbb
hlt
push
test
push
push
inc
repnz
jb
mov
adc
or
test
lret
mov
xlat
mov
ret
loope
test
loope
pushf
mov
and
dec
dec
pusha
xlat
stos
push
inc
call
jmp
push
imul
jno
int
xchg
add
aad
out
jb
pop
dec
imul
pop
fisubrl
mov
fists
add
xchg
arpl
mov
xchg
ficoms
and
pop
jg
in
repnz
popa
and
negb
push
daa
inc
aam
push
sub
andb
outsb
xchg
cltd
jbe
inc
je
movsl
aam
jo
ljmp
inc
add
mov
xlat
mov
push
adc
pop
in
xchg
lret
and
dec
aaa
movsl
or
sbb
dec
pop
sub
insl
mov
add
and
cli
inc
ret
jo
maskmovq
testl
sbb
push
pop
xor
lcall
and
and
xor
pushf
lock
dec
pop
fsubrs
aaa
and
push
push
inc
or
test
cs
movsl
or
addr16
mov
fsubp
pop
cmp
out
cmpsb
sub
in
sahf
stc
fs
mov
cmp
xlat
loopne
mov
in
orl
cmp
add
leave
push
pusha
into
daa
lods
mov
ja
stc
movsl
call
push
mov
sbb
mov
mov
sbb
xchg
lret
insb
out
hlt
fadd
imulb
testb
dec
xchg
sub
out
rcrl
cmpsl
push
mov
xor
mov
dec
aaa
xor
push
mov
or
xchg
and
adc
and
inc
push
jecxz
and
sbb
psubusb
or
inc
mov
lcall
dec
xchg
sub
mov
cmpsb
xor
jnp
fucomp
pop
stos
cmc
mov
xchg
jg
add
orl
mov
mov
xlat
fnstcw
shlb
mov
test
idiv
and
mov
adc
pop
jmp
pop
aad
cmc
add
mov
in
mov
and
fiadds
inc
insb
mov
ret
mov
xlat
or
fcomp
and
lock
mov
sbb
ja
jns
ljmp
mov
test
or
add
jnp
cmp
mov
imul
mov
ret
hlt
add
outsb
sub
aas
inc
jb
inc
inc
mov
andl
xchg
inc
xor
cmp
inc
jns
mov
and
mov
inc
lahf
pop
push
add
cmp
loop
jno
push
sub
or
mov
orl
cwtl
inc
xchg
xor
xor
jge
imul
gs
cltd
ja
outsb
jae
in
dec
jb
mov
mov
shll
rorb
push
loopne
xchg
dec
in
add
dec
dec
inc
jnp
and
xor
out
out
jno
hlt
xor
pop
add
aad
mov
gs
xor
lret
mov
mov
xchg
sub
iret
std
and
dec
imul
addr16
fcmovbe
mov
int3
pop
xchg
pushf
push
aad
xchg
jb
test
sub
sbb
jae
mov
filds
mov
lret
mov
repz
pushf
jg
rorl
xor
sbb
xor
les
pop
inc
out
imul
jno
push
inc
xchg
cmp
jo
cmp
xchg
adc
popf
sarl
lret
push
mov
cmp
scas
adc
mov
mov
int3
xchg
mov
ffreep
in
bound
jnp
aaa
adc
in
sbb
in
push
xor
fisttpl
out
inc
shlb
sub
jnp
xchg
jne
xor
pop
bound
subl
mov
mov
loop
jbe
mov
pop
popa
add
cmp
push
cwtl
cmc
xor
les
push
lret
sbb
in
xchg
sbb
mov
or
pop
add
imul
cmp
xor
mov
lcall
sub
shlb
rcll
xchg
int3
shll
clc
xor
dec
jmp
mov
inc
ret
jbe
pushf
push
jno
aam
shll
cmp
dec
int
cmpsb
outsb
pop
sbb
cmp
dec
or
mov
icebp
dec
mov
scas
pusha
test
test
pop
push
jb
pop
pop
mov
imul
test
sub
lock
into
in
movsl
dec
pop
loopne
comiss
iret
cmc
aas
in
cmpsb
and
sub
xor
jno
xor
jg
xlat
jne
ja
sahf
push
add
adc
aaa
enter
stos
cltd
ljmp
or
dec
push
jmp
jns
jge
inc
notl
ret
in
jo
movsl
pop
inc
call
lea
jle
in
push
int3
dec
xorb
ljmp
push
cmp
dec
fidivs
or
adc
push
sub
xor
pop
negb
mov
fadds
pop
xchg
cmp
push
cld
scas
lret
outsb
push
into
jbe
loope
pusha
xchg
fsub
sbb
loopne
mov
enter
roll
stc
dec
pushf
mov
lock
lret
daa
sahf
jmp
aam
adc
or
mov
xor
je
sahf
iret
enter
loope
mov
cmp
js
jmp
dec
fsubr
js
sbb
add
and
pop
fsubr
nop
pop
sbbl
pop
sub
xor
inc
mov
hlt
add
lcall
test
mov
daa
ror
nop
sbb
dec
test
jno
pop
gs
cs
arpl
pop
sbb
daa
popf
cld
cmp
data16
push
dec
dec
fisttpl
stos
sub
cltd
gs
pop
fsts
adc
lds
int3
xchg
mov
fdivs
mov
or
cmp
jmp
insl
loope
aad
add
cmpsb
in
pushf
test
jbe
add
fwait
inc
mov
repz
jg
enter
sahf
rorb
lea
mov
add
rorl
hlt
add
mov
fbstp
xor
rcl
xchg
push
mov
pop
and
mov
repnz
lret
jle
sub
popa
out
xchg
sub
lea
into
rcr
cmp
and
adc
dec
ss
push
sub
mov
clc
data16
dec
cmp
std
xchg
push
fldl
xchg
xor
stos
mov
xlat
pusha
into
jno
rorl
cltd
andb
ret
loopne
pop
std
mov
pop
out
pop
loopne
jno
movsl
mov
insl
jb
addb
mulb
jmp
stos
shlb
popa
test
ds
gs
add
adc
lret
cmpl
jns
js
jmp
add
adc
lea
dec
xlat
sarb
pop
cmp
fcmovnbe
sub
pop
jne
inc
sbb
stos
push
adc
push
mov
add
push
mov
gs
and
shrb
int
or
sub
ret
pop
lds
mov
push
mov
mov
scas
mov
pop
adc
cli
inc
leave
lea
push
and
jmp
insb
inc
cwtl
inc
ja
scas
lods
loopne
push
dec
jge
enter
or
xor
cltd
ds
xchg
mov
sub
sub
and
enter
repnz
or
mov
mov
stc
imul
imul
bound
loop
cmpsl
pushf
push
mov
fdivrs
cmp
imul
xchg
std
imul
ljmp
rcrl
idivb
pop
add
cmc
cs
orl
arpl
jnp
mov
repnz
lcall
pop
mov
aaa
sub
add
loop
add
or
nop
or
inc
lea
out
stos
out
pushf
repnz
mov
js
xlat
repz
pop
adc
mov
xorb
sbb
dec
and
stc
popa
jno
repz
cmp
jp
mov
cmpsl
cmp
mov
mov
xor
aas
pusha
in
pop
mov
imul
aas
enter
in
cmp
mov
adc
cli
test
mov
ss
mov
shrb
mov
ljmp
fsubl
mov
add
push
add
outsb
into
pop
repnz
stc
or
push
faddl
fstpt
jns
xchg
sti
inc
loop
push
mov
ret
jno
push
inc
mov
mov
sub
push
ret
jb
xor
fstpl
pop
cmp
inc
xor
pop
gs
mov
pop
xchg
test
and
jo
out
jecxz
pop
in
and
sbb
jmp
push
fmulp
addr16
ljmp
movsb
mov
outsl
sbb
cltd
jmp
and
adc
pop
ds
lcall
ss
aad
out
bound
add
sbb
mov
repnz
fists
pop
cmpsb
inc
dec
add
cmpsb
insl
insb
nop
pop
in
jl
cld
fisubl
ret
scas
xchg
arpl
movsb
dec
xor
cs
lods
inc
cmp
xchg
out
jle
sarl
or
std
jno
sbb
js
jo
orl
out
inc
mov
cmp
push
add
pop
add
ret
nop
mov
or
jecxz
insl
ret
push
xchg
aad
and
out
out
jg
lock
lcall
cmpsb
mov
jnp
adc
sbb
adc
adc
pushf
das
or
cmpsb
orb
push
jl
xlat
rcrl
adc
xorb
sub
arpl
popf
int3
push
imul
mov
pop
mov
jne
mov
das
xlat
fcmovbe
arpl
xchg
adcl
dec
loop
add
dec
rcrl
test
mov
int3
andl
scas
pop
popf
imul
xchg
shl
inc
cld
push
stos
jno
inc
mov
inc
pop
push
lock
pushf
mov
cmpsb
subb
add
jbe
lods
push
imul
and
aas
xchg
mov
pop
sub
lods
cmpsl
cmp
push
adcl
mov
push
in
sbb
int
xchg
subl
inc
fs
jbe
and
call
insl
cmc
adc
sbb
loop
ja
mov
test
daa
leave
sbb
sbb
sbb
adc
pushf
ret
push
and
push
ds
call
fistpl
repnz
out
gs
inc
fbstp
jns
repnz
movsl
andb
jne
dec
sub
in
pusha
dec
mov
pop
xchg
negl
push
fnstcw
lea
jae
ljmp
test
push
loopne
mov
push
cmc
jns
mov
sbb
add
xor
sub
shlb
out
sbb
mov
jle
sub
add
dec
iret
sbb
xchg
out
mov
cmpb
push
jno
and
loop
sbb
outsl
pop
and
pop
rorl
shll
lret
jb
mov
cmp
fiadds
jp
loopne
jle
imul
push
jbe
or
mov
mov
loope
orb
pop
mov
cmp
cmpsl
jbe
int3
push
mov
out
push
int
add
sub
pop
adc
nop
mov
cmpsb
imul
jae
bound
jge
out
push
fwait
sbb
xor
jo
fwait
mov
xor
dec
mov
shlb
fstpl
ret
scas
jae
inc
push
fwait
add
jp
das
mov
bound
jmp
mov
push
aad
sub
push
cltd
movsl
mov
lock
jnp
jnp
jns
call
aaa
sbb
xchg
leave
popa
add
call
jle
pop
aaa
loope
mov
nop
fidivl
push
lods
xor
mov
and
or
lret
push
loope
xor
int
lea
xorl
gs
jl
pop
repnz
vsubsd
imul
aaa
aas
ljmp
pop
push
mov
sbb
xor
sub
les
jne
arpl
xor
push
push
orb
lods
jo
std
call
inc
add
adc
jbe
lea
mov
and
adc
adc
cmc
out
sub
mov
xor
cwtl
pusha
pop
mov
mov
inc
testl
repz
sub
loopne
ja
adc
rcrl
cmpsb
pushf
sbb
jle
sbb
mov
in
sahf
jb
pop
add
pop
test
out
cmpsb
mov
push
mov
in
imul
fs
sarl
adc
fldcw
mov
xchg
int3
cwtl
add
scas
clc
test
pop
mov
jbe
xchg
add
and
loopne
or
es
test
in
mov
scas
stos
addr16
mov
movsb
sbb
xor
ds
adc
inc
inc
cmp
lods
push
cmc
test
sub
or
dec
push
mov
int
jbe
dec
leave
sub
movsb
fldenv
out
cli
pushf
cltd
movsb
dec
mov
pop
jb
lods
inc
popa
inc
or
xor
inc
repnz
out
cmpsl
or
dec
out
cmpsl
aaa
lret
nop
dec
insl
outsl
mov
or
pop
ret
cmp
loope,pt
pop
sahf
cmp
cli
or
mov
mov
leave
ss
push
dec
cwtl
scas
mov
pop
addl
in
add
out
fwait
pop
call
repz
sbb
ds
add
lea
push
sbb
popf
das
push
sub
inc
scas
pop
xchg
push
and
test
xchg
lods
jg
cmpsl
std
sbb
adc
aad
sub
ror
out
cs
loope
lds
and
leave
inc
out
das
popa
pop
pop
and
jo
rorl
loopne
jp
dec
aad
add
cmp
push
cs
sub
ja
inc
std
mov
and
nop
jo
and
pop
jge
pop
lock
inc
jbe
repnz
ss
pop
push
int
sbb
lds
cmp
xor
sbbl
sub
dec
inc
lcall
shlb
mov
daa
xchg
mov
sti
hlt
pop
loopne
pop
imul
xchg
xor
in
icebp
mov
mov
out
sbb
punpckldq
mov
sub
pop
dec
inc
inc
gs
add
cltd
mov
mov
rcrb
movsl
push
js
xor
or
call
push
or
cltd
out
jle
scas
jb
sub
jo
adc
push
insb
mov
push
out
cltd
sub
or
jbe
xlat
jmp
mov
add
jecxz
push
inc
adc
dec
ret
scas
es
test
mov
and
enter
xchg
lcall
repnz
sti
lds
dec
xor
mov
ja
dec
movsb
jb
sub
cltd
cltd
jge
sbb
pop
and
push
out
and
fwait
test
orl
pop
pusha
inc
rolb
fstps
sbb
add
cmp
out
dec
xor
mov
inc
addr16
jmp
cmpsl
mov
imul
push
fs
xchg
jp
jb
int3
lret
mov
lahf
dec
ljmp
in
sbb
loopne
inc
lods
es
sub
insl
stc
cli
xchg
pop
jle
xchg
or
mul
repnz
cld
and
lret
mov
aaa
sub
pop
dec
imul
movsb
and
sbb
mov
and
into
xchg
mov
fsubs
lds
stos
lods
es
loope
ja
and
ud2
dec
movb
jmp
cmp
dec
inc
xchg
mov
jne
cmp
shl
sarl
xchg
insb
mov
sbb
fistpll
push
mov
jg
cmp
xor
repz
push
popa
mov
jge
sbb
xor
les
lock
mov
je
xor
mov
xchg
fistps
push
gs
stos
inc
imull
and
decb
fcmove
mov
push
rcr
xor
icebp
xchg
xchg
call
aad
rcr
or
mov
sbb
jg
mov
enter
or
cmp
mov
sbb
stos
pop
mov
int
fistl
daa
jbe
lahf
add
dec
stos
stos
pop
lahf
lea
icebp
push
inc
popaw
scas
in
or
mov
adc
and
sub
lret
hlt
jge
loopne
out
adc
inc
movsb
pop
adc
push
in
mov
sbb
jg
push
aad
mov
push
sahf
dec
test
dec
mov
cli
cld
psubusb
jg
aad
mov
stos
lcall
xor
imul
fcoml
xchg
leave
idiv
in
dec
enter
lods
sti
and
push
cld
iret
mov
mov
lods
push
mov
ja
in
lods
imulb
negl
jmp
xchg
jmp
mov
and
iret
jno
push
lret
push
lahf
mov
add
in
dec
sahf
cltd
inc
movsl
popa
lods
and
lods
push
popa
pop
sbb
sbb
push
push
inc
inc
out
nop
push
les
mov
imul
repz
inc
insl
call
stos
aaa
xchg
mov
out
scas
out
lods
pop
cmp
loopne
sub
je
stos
and
cltd
xor
dec
adc
in
ret
cmp
data16
verr
xchg
xchg
or
fwait
out
jns
xchg
fisttpl
adc
dec
jmp
bound
mov
or
xor
incl
and
mov
sbb
cmp
testb
mov
imul
push
xor
fstpl
das
xchg
inc
mov
aas
call
std
add
test
rorl
icebp
dec
push
addr16
in
rorb
and
cmpsl
mov
call
cmp
and
test
iret
fiaddl
dec
xchg
sub
imul
repnz
pop
pop
out
push
mov
sahf
jmp
mov
mov
mov
aas
mov
sub
adc
sbb
in
mov
bound
xchg
pop
dec
mov
add
xchg
mov
push
sti
xchg
lret
cmp
xchg
sbb
xchg
mov
scas
or
out
enter
and
dec
mov
cmp
std
sbb
sub
xchg
aam
insl
mov
mov
mov
dec
iret
xor
mov
cltd
push
cmp
mov
dec
aaa
adc
inc
cmp
orl
call
out
jb
xor
in
js
or
push
pop
dec
repz
adc
xlat
and
out
enter
cs
jge
mov
push
in
xor
js
int
insl
add
jmp
mov
xchg
mov
pop
repz
sub
imul
adcl
jmp
push
xor
rcrb
fists
add
cli
push
ja
adc
dec
sub
pop
gs
mov
cmp
outsl
aas
rcrl
push
out
xchg
pushf
push
dec
mov
gs
stos
xor
ret
int3
or
inc
xchg
popf
xor
adc
xchg
stos
jne
test
sub
mov
insb
int3
inc
lods
ret
inc
loop
mov
data16
push
lret
fildll
fwait
sub
cmp
inc
sub
cwtl
test
arpl
cmp
stos
jb
rclb
mov
enter
in
bswap
fdivl
pop
jo
cld
push
int3
sub
xor
sti
xchg
fisttpl
movsb
xor
push
push
out
movsl
leave
ja
mov
or
jle
rcrl
add
sahf
sahf
orl
push
dec
push
sbb
in
dec
cmp
lret
std
addb
adc
mov
or
das
data16
xor
mov
dec
cmp
not
xchg
fisttpl
enter
jge
sub
sub
andl
dec
push
adc
hlt
jnp
stos
adc
pop
fcomps
aad
xchg
jle
and
mov
push
pushf
inc
mov
adc
mov
mov
je
lahf
cld
dec
jno
mov
mov
jns
add
scas
and
jbe
dec
push
mov
add
rolb
sub
inc
add
icebp
mov
nop
hlt
mov
ds
ljmp
rorl
in
clc
lods
out
sti
getsec
push
insl
add
aaa
std
fmuls
mov
sub
xchg
jb
in
and
inc
ljmp
mov
fwait
pcmpgtd
nop
add
fadds
or
into
cmp
sbb
mov
pop
xchg
lret
inc
in
sub
fsubs
test
popa
imul
int3
push
psubsw
or
in
ja
xorl
std
fidivl
dec
sbb
aad
cmpsb
xchg
lea
hlt
mov
mov
dec
or
xor
loop
mov
cwtl
loopne
popf
aaa
ret
mov
gs
hlt
ljmp
js
sbb
sbb
lret
sub
fisubl
test
or
push
aam
addr16
into
jo
sub
shrl
ret
mov
aas
ret
lods
ds
sbb
jecxz
test
sar
xchg
add
fbld
jle
push
jecxz
out
push
popa
jle
ds
outsl
scas
push
jg
xchg
pop
bound
sub
fsubs
rclb
push
sbb
ret
mov
xor
mull
outsb
test
jo
clc
int
shrl
gs
hlt
nop
out
call
or
insl
xor
bound
dec
fwait
and
lds
and
pop
jo
ret
push
jb
mov
fisttpl
sbb
push
call
xchg
xchg
clc
lods
dec
mov
scas
push
movsl
inc
je
or
arpl
push
jg
outsl
dec
mov
aaa
das
and
shl
jns
in
dec
mov
mov
scas
xchg
fsubrp
jne
fwait
iret
push
out
addl
and
andl
fs
cld
mov
lret
xchg
inc
cmpsb
daa
cmp
jne
dec
das
lds
sub
bound
test
loopne
pop
sub
inc
pop
dec
in
ss
xchg
inc
pop
cmp
popa
ret
or
xor
pushl
hlt
push
push
push
cmp
movsb
outsl
jg
adc
or
adc
rcr
das
fsubl
gs
sarb
jg
add
fwait
popf
lods
xchg
cmp
mov
bound
out
mov
xchg
fisubrs
or
cwtl
or
cli
jne
jmp
addr16
pop
arpl
test
in
roll
mov
mov
call
inc
inc
dec
jne
fsub
jl
aam
cmpsl
pop
das
roll
adc
popf
clc
subb
xchg
nop
clc
fisttps
stos
filds
push
inc
add
arpl
mov
push
loope
pop
movsl
add
xlat
icebp
lea
dec
sahf
jp
das
adc
adc
dec
sbb
add
sub
lcall
faddp
aas
ds
push
or
dec
inc
mov
pop
jb
lret
rcr
xchg
fdivs
dec
jmp
fstl
add
jnp
lcall
dec
ret
scas
cmp
dec
jmp
mov
scas
xor
jmp
or
push
les
jge
jns
sub
push
mov
add
test
mov
fisubl
xchg
std
sub
mov
mov
sbb
mov
cs
outsb
out
xchg
daa
jl
pop
jae
inc
fnstsw
mov
ja
xchg
cmpsl
xchg
pop
dec
jmp
or
pop
mov
gs
insl
es
imul
pop
in
sub
pop
push
aam
insl
inc
xor
das
cmp
inc
cmpsb
push
push
daa
push
sub
jg
je
sub
jno
push
ret
jecxz
jg
inc
sub
push
mov
mov
test
mov
test
pop
xorl
lods
outsb
ret
adc
dec
and
ja
jmp
mov
xchg
test
out
or
mov
imul
movsb
mov
inc
bnd
out
jle
pop
cmp
cmpb
icebp
loop
lahf
sbb
jg
push
cmpsl
mov
dec
mov
insl
cmc
xor
and
in
jne
mov
fs
dec
lea
fiadds
cmp
jo
stc
pop
lret
aad
jecxz
sbb
pushf
aaa
mov
sahf
lods
push
test
xchg
fsts
push
pop
rcll
push
cmp
xchg
lahf
mov
and
stos
xchg
push
xchg
sub
data16
lods
xchg
jnp
inc
nop
gs
sub
and
mov
sbb
or
jg
mov
sbbl
push
loopne
sub
lds
jb
mov
pop
cmpsb
jmp
push
movsb
adc
mov
or
jb
cmp
pusha
arpl
jb
add
mov
inc
jmp
push
scas
insl
mov
int3
mov
push
test
ljmp
bound
pop
mov
mov
and
adc
jb
je
adc
push
cmc
adc
adc
xchg
inc
mov
clc
cmc
stos
bound
or
mov
out
add
cmpsw
mov
or
inc
mov
sbb
outsl
cwtl
pusha
mov
dec
push
lcall
inc
mov
and
jg
test
mov
sub
push
cmp
sbb
aam
repnz
xchg
dec
jnp
cmc
xchg
repnz
pop
ror
mov
add
fnstenv
je
sub
pushf
pcmpeqd
sub
popa
gs
negb
shlb
push
rdpmc
fwait
mov
pop
pop
je
arpl
in
icebp
mov
ficompl
int3
xchg
and
and
jg
push
pop
out
mov
push
mov
jecxz
js
addr16
arpl
push
fwait
xor
push
rcrl
fdivp
adc
jmp
inc
pop
loop
inc
jae
test
mov
dec
inc
cmc
push
ja
aad
repz
lods
in
aad
sub
xor
mov
dec
adc
push
xor
mov
jmp
cwtl
mov
mov
jns
pop
push
sbb
or
or
popa
pop
mov
test
data16
arpl
push
shll
mov
stos
pop
fisttpl
fsubrp
sti
sub
cmp
aaa
or
rolb
add
pop
scas
shl
xchg
lret
frstor
jle
fst
sarl
pop
dec
add
ret
jae
movsl
and
into
movsl
pop
ret
fwait
cmpsb
rorb
mov
cmp
sub
movsl
mov
js
add
and
repnz
cmp
jle
xorl
repz
lret
mov
movsb
mov
test
pop
sub
pop
ret
pop
jle
in
aaa
sub
jo
push
outsl
pop
out
pop
insl
mov
adc
push
push
loop
xlat
jbe
inc
roll
or
fsubrs
push
sahf
fucomp
and
xchg
xor
xchg
or
jns
push
test
xchg
shlb
scas
sbb
mov
out
std
icebp
cmp
hlt
and
sbb
in
mov
jge
jb
sub
lret
mov
popf
hlt
add
cmp
cmpb
pop
add
adc
sub
jg
xchg
test
push
inc
push
hlt
fiadds
push
xorb
dec
aad
add
int3
sub
mov
cwtl
sub
push
xor
rcrl
shlb
cmpsl
inc
mov
mov
outsl
pop
jp
repnz
gs
mov
fnsave
adc
out
mov
out
test
rol
or
inc
imul
xor
sub
inc
jl
int3
jmp
jae
or
xor
aam
mov
adc
loop
jnp
add
fsubrl
add
lds
outsl
mov
movsl
test
mov
inc
dec
ficompl
pop
pushf
mov
aad
fwait
dec
fiadds
fdivrl
mov
mov
sub
xor
icebp
sarb
pop
push
stc
daa
mov
aad
or
ds
and
cwtl
test
xchg
call
fiadds
sysret
out
inc
call
cld
pmullw
and
imul
out
mov
sti
add
mov
bound
mov
and
sbb
dec
insl
and
fsubl
mov
fistpl
push
ret
mov
mov
roll
rcrl
into
dec
pop
inc
shlb
xor
xor
push
mov
pop
sub
cwtl
clc
and
push
xor
adc
leave
in
lcall
xor
pop
test
enter
push
xor
gs
xchg
jbe
jecxz
sarl
test
fs
or
inc
mov
lahf
ret
aaa
mov
jno
xor
mov
cmc
fcmovnu
ds
sbb
fwait
add
das
vpunpckhqdq
popl
shrl
dec
movsb
xchg
aaa
jb
adc
ds
xchg
jp
in
push
sub
xor
adc
aas
adc
cwtl
inc
lock
push
cmp
cmp
push
mov
fiadds
pop
cmp
push
daa
jb
mul
lret
test
adc
and
adc
loop
int3
xchg
lahf
pop
jne
mov
jbe
inc
sub
ret
cmp
push
nop
mov
cwtl
and
cmp
scas
imul
cli
js
xorl
pop
daa
iret
dec
mov
inc
jmp
inc
scas
faddl
int3
fwait
mov
xlat
clc
mov
out
test
mov
adc
fstps
loopne
inc
pop
outsb
movsb
mov
add
lcall
outsl
popa
in
xchg
in
testb
enter
push
xor
add
in
xor
ljmp
loopne
and
jg
notl
mov
push
mov
and
adc
dec
cmp
test
roll
mov
add
cmc
sbb
mov
jae
imul
out
je
ret
imul
xchg
pop
or
out
jo
aas
movsb
stc
mov
aam
addl
push
pop
cwtl
mov
xchg
lock
sti
out
mov
push
mov
push
sbb
and
scas
pop
call
fcmovnb
mov
fwait
fs
jle
mov
test
pushf
cmp
or
add
dec
repz
inc
add
aas
mov
movsl
lods
scas
pusha
data16
adc
mov
sahf
mov
jl
cmp
icebp
lea
fisubrl
insb
int3
cmp
xchg
hlt
rcrl
in
dec
repz
and
jb
sub
fcomp
cmp
inc
das
insl
into
cmp
jb
xlat
sub
scas
push
std
or
mov
cwtl
insl
xchg
aas
cmpsl
sbb
mov
adc
push
lahf
dec
test
push
mov
sbb
mov
xor
out
adc
dec
or
pop
sub
and
pop
and
imul
xchg
ds
sub
rolb
sahf
das
aaa
sti
sub
lcall
daa
push
fists
xchg
imul
movsl
push
sub
loopne
ret
adc
cld
int3
sub
mov
xchg
add
es
fwait
in
mov
int
movsb
sub
std
iretw
xor
cmp
int
out
lods
in
sub
xchg
pop
xor
aaa
data16
lcall
in
daa
push
cmp
shlb
push
xor
cwtl
lods
push
mov
shll
stc
push
ret
push
jbe
dec
icebp
shll
enter
dec
or
dec
push
inc
fadd
xor
push
fpatan
fwait
xchg
mov
imul
incl
push
cmp
hlt
test
jl
xor
inc
sbb
and
xor
inc
ror
and
sti
stos
lods
lds
inc
mov
add
or
aad
ljmp
cmc
in
jbe
and
ja
aaa
or
imul
clc
inc
adc
mov
ret
fidivl
mov
repz
or
sti
fwait
outsl
es
test
mov
mov
mov
jg
push
jo
sbb
pushf
aaa
or
ja
pushf
scas
lahf
jmpw
sahf
pop
fists
jbe
push
cmp
aam
mov
jg
jae
jb
dec
mov
sbb
sub
lods
das
xchg
data16
sub
xchg
inc
dec
mov
pop
mov
and
mov
xor
xchg
pop
xor
add
sti
mov
cmp
push
pushf
mov
adc
out
mov
mov
adc
pop
shll
psubd
data16
leave
push
popf
mov
dec
xor
mov
add
into
out
lret
push
jne
jno
dec
mov
or
in
dec
pop
imul
dec
cmp
mov
mov
xchg
call
popf
or
idivb
cmc
pop
mov
xchg
roll
jb
notb
dec
inc
stc
xor
test
cmp
scas
insb
push
rcl
out
fstpt
push
popa
inc
cmpsb
ss
xchg
fnsave
ret
cltd
ds
mov
sub
shlb
cmp
pop
movsl
test
sbb
mov
inc
push
pop
inc
cmp
ret
mov
jae
scas
xchg
sub
xorb
jp
push
mov
pop
push
and
leave
nop
dec
movsb
xor
mov
adc
jle
or
lcall
inc
sbb
repnz
adc
out
jecxz
lods
push
mov
pop
mov
mov
pop
inc
adc
jb
mov
pop
shlb
lea
movsb
dec
pop
cmp
or
push
xlat
or
imul
jmp
jae
xchg
pop
adc
call
xchg
jecxz,pt
test
addr16
xor
or
add
push
std
or
push
mov
inc
mov
sub
aas
popa
rcl
sub
jo
inc
sub
sbb
sahf
push
dec
daa
fdivs
fidivrs
jecxz
lods
push
push
mov
add
clc
jmp
pusha
lcallw
fs
sub
fldl
xor
fsubs
lahf
sbb
loop
lock
cwtl
scas
cs
xchg
dec
fdiv
dec
fstpt
mov
mov
mov
pop
ret
ja
inc
pusha
push
dec
xlat
and
and
pop
xchg
cs
lds
pop
ret
loopne
filds
push
mov
dec
mov
mov
mov
mov
mov
or
pop
dec
nop
ret
je
test
cmp
lret
jle
jbe
lret
sbb
daa
xor
sbb
out
xor
dec
pop
das
inc
popf
sbb
and
and
adc
ret
sbb
js
enter
mov
inc
sub
mov
push
cmpsl
aaa
lods
add
dec
arpl
fsubrl
jbe
dec
xchg
pop
pop
sbbb
jbe
jmp
and
and
fs
cmp
jbe
inc
xor
mov
xchg
shll
cmpsb
stos
add
mov
dec
dec
mov
inc
or
into
mov
test
cmp
sti
jle
jp
xor
xor
test
mov
inc
jmp
fcmovnbe
loop
cmc
push
negl
std
out
cmp
sub
lret
js
cmpl
lcall
pop
test
int3
add
push
and
mov
lods
aas
test
xor
cwtl
jno
adc
fdivr
lcall
aam
or
insb
insb
jno
push
mov
mov
inc
iret
test
cmp
push
int3
mov
push
pop
sbb
repz
shll
mov
push
pusha
iret
jg
inc
sbb
dec
insb
in
out
pop
fdivrs
and
adc
daa
test
push
dec
mov
addr16
cmpsb
or
or
jns,pn
mov
lret
gs
inc
movsl
jns
fucomip
mov
sub
sub
les
mov
mov
test
insb
add
push
xchg
mov
pop
movsl
or
nop
int3
mov
adc
mov
ffree
data16
sub
pop
negl
pop
xchg
scas
adc
xor
or
sbbl
mov
add
ret
inc
inc
adc
sbb
rcll
test
test
xchg
or
mov
aaa
mov
add
xchg
int
jl
push
and
out
fisttpl
fistpl
push
add
and
popf
adc
add
loop
pushf
mov
sub
pop
pop
push
mov
cmp
out
fcoms
jmp
cmpsl
mov
push
dec
cmc
pop
pusha
xchg
cmc
loopne
movsb
jns
jge
jl
in
push
mov
xchg
pusha
cltd
or
test
fcom
sbb
fnsave
es
add
pop
fildl
sbb
lahf
stos
out
or
add
sarb
int
push
fildll
pop
pop
lods
xorl
fs
test
jp
jl
ljmp
mov
jle
push
inc
fisttpl
xor
dec
adcb
jnp
pop
imul
fmulp
js
sbb
ss
push
sub
in
jp
jo
sbb
add
xor
dec
sub
xor
mov
inc
in
mov
pop
into
push
xrelease
out
mov
push
xor
mov
cmp
imulb
jg
fidivrs
jae
in
dec
loop
and
mov
mov
xor
es
pop
scas
mov
dec
in
inc
ljmp
cwtl
inc
addr16
dec
inc
jno
aad
lock
test
or
int3
pusha
leave
scas
add
movsb
pop
aam
push
nop
pop
scas
xchg
ljmp
orl
mov
aad
adc
js
nop
jecxz
leave
stos
dec
lock
inc
sub
leave
je
jo
imulb
push
push
adc
scas
pop
lret
test
scas
out
xchg
ljmp
xchg
lcall
fcoml
pop
pop
push
inc
push
out
ret
cmp
mov
fsub
dec
fwait
and
mov
cmp
out
sbb
in
ds
enter
cltd
inc
in
add
lds
xor
data16
iret
sbb
ja
andl
cmc
push
xchg
out
fsubs
or
sbb
xchg
and
dec
iret
xor
add
js
cwtl
mov
das
std
jmp
lock
int
cwtl
leave
sahf
in
push
jge
sti
push
movsl
pop
and
mov
out
lock
or
rorb
in
ret
dec
cmp
mov
in
es
adc
mov
stc
pushf
dec
scas
jbe
in
outsl
fisttps
std
fs
sub
ret
scas
pop
test
inc
and
mov
sti
pop
test
test
test
or
cmpsl
lahf
cmp
rolb
lahf
aad
out
movsl
dec
in
push
loopne
inc
fiadds
xchg
cmpl
test
paddsb
jo
add
pop
add
add
dec
or
xchg
pop
out
ss
ljmp
pusha
fldl
test
mov
imul
xorb
adc
mov
iret
mov
outsb
adc
or
jg
repnz
adc
clc
in
scas
jle
or
clc
insb
call
nop
add
sub
inc
enter
in
push
add
ret
sahf
push
inc
xchg
mov
mov
pop
cmp
adc
mov
dec
cmp
xchg
les
leave
add
dec
mov
fdivs
in
pop
add
addb
dec
cmp
push
xchg
shrb
cmp
xchg
and
mov
add
hlt
ds
add
mov
adc
push
dec
ljmp
add
push
lahf
push
xorb
les
mov
push
and
and
inc
and
sub
ds
mov
xchg
repz
push
lock
mov
outsb
add
inc
mov
lds
cmp
in
push
das
sbb
out
fcomps
pop
add
jle
add
dec
test
sub
add
lret
stos
stc
popf
mov
nopl
int3
hlt
mov
out
jp
testl
mov
sub
mov
jne
xcrypt-ctr
cmpsl
lcall
adc
cwtl
mov
and
add
aam
pop
and
add
test
inc
test
jo
sti
addr16
sub
and
or
pop
adcb
pop
push
inc
push
mov
dec
sub
push
in
push
add
pop
out
jno
push
ret
int
pop
test
into
mov
cs
inc
loop
mov
jl
stc
dec
mov
xchg
subb
sub
into
adc
lret
fwait
cmpsb
pushf
sub
dec
xor
ds
mov
cld
jp
cwtl
movsb
fidivl
pop
rorl
and
addb
xchg
hlt
push
mov
xor
lods
pop
jbe
hlt
push
sbb
mov
mov
inc
xchg
push
xchg
push
jp
dec
mov
inc
mov
xchg
push
push
jl
jb
xor
dec
xchg
inc
inc
fiadds
scas
fisubs
cmp
lret
inc
sbb
sbb
cmc
push
adc
mov
sbb
jmp
ret
jle
xchg
mov
sbb
daa
jb
rcl
dec
jmp
out
xchg
fcompl
mov
xchg
test
addl
xor
lds
leave
arpl
sub
gs
lahf
jl
mov
mov
rcrb
and
hlt
adcb
dec
sbb
add
or
push
std
sarl
pop
iret
outsb
dec
aad
hlt
cmp
add
lcall
outsl
mov
sbb
cmp
lock
sbb
in
rcll
mov
movsl
stos
ret
outsl
cs
push
lea
int3
js
push
jo
cmpsl
xchg
cwtl
sbb
xchg
push
jne
push
xor
xchg
orl
mov
jne
lock
xchg
fwait
ror
pop
jno
inc
cltd
mov
adc
push
andb
cmp
jns
mov
fwait
jne
mov
dec
cwtl
scas
or
xor
iret
add
add
js
or
je
mov
mov
imul
cmpsb
cwtl
jp
or
pop
fistpl
out
mov
out
jb
js
into
cmpsb
psllq
adc
adc
and
scas
lret
xchg
mov
pop
xchg
push
and
dec
repz
mov
xor
jmp
and
popa
icebp
lret
ljmp
or
incb
in
mov
les
test
adc
pop
in
jmp
jl
out
mov
mov
xchg
or
xchg
out
jge
inc
into
rcrl
sbb
sub
je
in
imull
stos
or
fidivl
xchg
sub
cmp
in
jg
mov
aam
lods
mov
leave
lahf
shlb
leave
cmp
xor
popa
mov
inc
xor
xor
and
aad
cld
push
ja
mov
jae
aad
sti
daa
cltd
das
lds
lods
jb
mov
lods
xor
add
mov
pop
push
lock
inc
xchg
mov
push
push
pushf
jno
sahf
cmpsl
fbld
psubb
orl
stos
sub
pop
lods
es
mov
dec
xchg
fwait
mov
or
inc
rcll
rcll
cld
mov
mov
mov
jl
mov
jle
dec
cli
mov
test
sar
cmp
andl
sahf
orb
negb
movsl
in
add
jge
jne
mov
or
add
and
sbbl
int3
sub
inc
mov
mov
cli
mov
mov
or
test
ret
je
scas
xchg
push
int
pop
push
jle
enter
xor
inc
pop
mov
pop
xor
add
mov
add
inc
or
push
outsl
push
dec
in
jae
mov
inc
in
lock
dec
mov
int
adc
shlb
cmc
movsb
or
or
repz
addr16
mov
mov
add
mov
mov
adc
mov
incb
sub
test
sub
jbe
sahf
imul
cmp
iret
mov
cmpsb
inc
dec
aaa
in
bound
popa
imul
popa
dec
addr16
push
aam
mov
xchg
xchg
repnz
pop
dec
inc
xchg
and
cli
lret
jecxz
mov
out
push
push
loopne
add
push
push
lods
stos
mov
ficoms
inc
es
sarl
outsl
xor
add
imul
push
mov
mov
std
push
sbb
mov
mov
jo
icebp
xor
inc
int
cltd
aas
enter
mov
sbbb
cmpsb
mov
cmpsl
addr16
cmp
mov
test
fs
jge
or
dec
insb
call
mov
and
pusha
sti
pop
jno
aas
inc
mov
aam
dec
js
inc
fadd
ljmp
add
push
fcoms
mov
push
stos
jns
subl
sub
out
mov
mov
xchg
push
add
fisttps
mov
inc
adc
xor
outsb
and
sbb
incb
fdiv
andb
mov
nop
inc
mov
aas
out
dec
or
pop
jb
and
jecxz
pop
es
cli
dec
xor
jp
mov
stos
lret
sbb
outsb
rclb
out
mov
rclb
add
outsl
inc
imul
rolb
jbe
and
daa
movsl
cmp
sub
add
dec
imulb
or
sbb
sbb
dec
stc
nop
ficomps
push
push
fsubp
popf
push
push
dec
dec
enter
mov
jae
into
jbe
sbb
test
pop
jbe
out
mov
xchg
push
sbb
roll
insb
sub
mov
xor
rorb
lock
mov
ss
cmc
inc
call
mov
inc
push
je
or
inc
dec
test
push
jl
mov
or
jae
add
icebp
mov
mov
jno
pop
pop
push
dec
enter
mov
into
fstpt
adc
rcrl
arpl
pop
fwait
xchg
inc
xor
mov
testb
mov
jmp
clc
xor
mov
dec
cli
or
fwait
pop
xchg
stc
in
mov
ret
hlt
or
movsl
push
jle
bound
add
xor
scas
pushl
cmp
out
stc
push
xlat
add
xchg
lahf
shl
jno
fcoml
ljmp
sbbl
enter
jne
loop
inc
ss
shr
jl
mov
out
xor
jns
lea
jg
insl
pop
push
ret
insb
pop
xor
je
cmpl
cmp
gs
fld
sub
mov
mov
push
mov
pop
dec
cli
mov
lret
stos
dec
mov
mov
jbe
enter
push
mov
xor
adc
cmc
arpl
adc
mov
andb
inc
imul
cmpsb
or
xor
jnp
ret
ret
jge
add
sbb
and
mov
adc
fnstsw
in
pop
jmp
je
inc
xor
adc
in
mov
pop
push
pop
cmp
or
mov
sub
or
and
xor
insl
fstl
popa
cwtl
cmp
test
fwait
cmpsb
adc
add
mov
sbb
jo
scas
ffreep
add
add
sbb
cwtl
push
call
jle
loopne
adc
sbb
out
push
mov
int
int
aaa
pop
testl
add
jae
push
xchg
ret
insl
ja
es
sbb
ja
fcom
lcall
mov
mov
sub
test
and
insb
adc
in
sub
mov
in
push
adc
inc
hlt
inc
hlt
leave
mov
sti
xor
xor
xchg
and
fisubl
push
mov
and
xor
dec
adc
inc
cwtl
jecxz
shll
sub
jno
pop
pushaw
jle
repz
mov
icebp
mov
and
pop
icebp
fwait
adc
mov
or
stos
stos
mov
fnstenv
mov
or
pop
pop
inc
pop
jg
sub
push
dec
stos
dec
jnp
dec
mov
ds
jecxz
jg
mov
fldt
xor
xlat
insb
xchg
push
or
or
xchg
outsl
inc
popf
fisubrl
xchg
push
xchg
rclb
and
xor
ret
jbe
aas
push
in
jne
xor
dec
sti
clc
leave
imull
loop
gs
xchg
cmp
sub
int3
xor
ljmp
rcll
arpl
xor
ss
inc
test
cld
imul
ficomps
push
pop
dec
shlb
pop
push
or
mov
jle
sbb
xchg
jecxz
repnz
cwtl
lret
in
loope
xchg
lds
loope
dec
sub
rolb
test
xor
fbld
inc
daa
mov
push
sub
outsl
xor
mov
fstpl
and
lock
fsubrs
adc
jg
push
mov
cmp
nop
jb
jl
mov
jge
push
dec
dec
push
lret
addr16
mov
pop
ljmp
loope
popf
call
dec
lea
jo
data16
icebp
cmc
icebp
sbb
imul
pop
test
sub
lahf
push
stos
dec
js
cmp
xchg
pop
mov
enter
xchg
leave
pop
cltd
dec
mov
mov
fcompl
fs
clc
mov
push
add
bnd
push
test
push
or
shrl
mov
in
adc
daa
adc
inc
and
add
cmpsb
adc
sahf
test
jmp
or
jno
cmp
adc
insb
jo
mov
clc
pop
cmp
or
mov
push
sbb
vpshlb
in
nop
bound
imul
adc
xchg
scas
shlb
test
and
sub
mov
mov
mov
mov
mov
push
cld
xchg
in
movsl
pop
repz
mov
call
jecxz
cmpl
add
stc
cmp
or
and
mull
jmp
adcb
fadds
mov
int
pop
cmp
movsl
lret
rcll
or
or
das
push
sahf
cmp
jno
mov
ja
int
or
bound
xchg
mov
fiadds
push
push
outsb
mov
stos
xor
adc
fs
cmpsb
mov
out
jae
dec
jle
ret
dec
das
push
call
test
addr16
nop
testl
iret
dec
cmp
mov
outsl
push
xchg
jle
sbb
sti
cld
jp
adc
xor
out
fcmovu
jns
jo
push
les
xchg
push
fs
mov
push
addr16
test
sbb
jno
adc
arpl
xor
mov
sbb
repz
mov
and
jp,pn
rcrl
stos
or
sub
jmp
aad
gs
loope
dec
sub
inc
inc
and
add
pop
pop
je
lahf
push
xchg
dec
xchg
pop
rcrb
inc
xchg
or
pop
rcr
inc
xor
xchg
push
jae
idivl
test
cmp
mov
out
cltd
pushf
push
jg
sbb
in
test
push
in
in
ficoms
lods
bound
lcall
mov
inc
or
push
push
leave
mov
or
call
pusha
pop
mov
data16
adc
out
nop
fisubrs
push
imul
pop
inc
add
in
lea
and
lcall
inc
pushf
subb
push
in
mov
push
inc
stos
mov
movsl
shlb
mov
mov
pop
repnz
daa
jg
inc
add
adc
inc
fistpl
mov
jg
adc
insb
xor
lds
mov
ljmp
or
add
jns
pop
pop
sbb
inc
mov
inc
sbb
shll
subl
leave
repnz
jmp
push
fldt
sbb
nop
sub
and
jecxz
pop
sbb
popf
xlat
adc
push
test
add
ljmp
dec
adc
or
daa
adc
insl
fs
push
inc
or
fistpll
enter
dec
push
mov
jo
repz
cmp
push
popf
in
or
test
dec
mov
push
les
lds
pushf
and
loopne
add
cmp
adc
pushf
test
out
or
mov
lret
fiaddl
popa
inc
test
cmp
call
cmp
inc
lret
lret
and
mov
adc
rorb
pusha
mov
inc
cld
cmp
jg
mov
sbb
cmp
pusha
or
subl
dec
ffreep
sti
jno
jnp
scas
jge
xchg
fstpt
jecxz
stos
lods
or
pop
sbb
xchg
sbb
pop
outsb
sub
add
ja
pop
jmp
test
mov
das
dec
iret
mov
cmp
test
sub
lock
cmpsb
idiv
or
jno
sti
subl
int3
sub
and
stos
dec
clc
stos
or
into
jmp
jbe
xchg
add
xchg
gs
pop
xchg
sub
shll
dec
or
or
shl
xchg
sbb
ret
sbb
repz
inc
dec
sub
push
pop
les
mov
xor
aad
aas
lahf
add
jno
fsubrs
pushf
sbb
out
push
cld
mov
or
out
xor
mov
mov
fmull
jo
dec
xchg
xor
in
icebp
inc
jmp
loopne
pop
push
mov
sub
adc
dec
shr
jnp
test
adc
inc
pop
dec
jno
flds
shll
mov
cli
iret
and
insb
pop
sbb
data16
push
xchg
and
jne
rclb
fwait
mov
ja
mov
lahf
mov
xor
lahf
shl
outsl
xchg
or
xor
inc
inc
cmovo
data16
push
lret
xchg
xor
push
jl
or
je
int3
je
jmp
ss
popf
xor
movsl
inc
jle
adcl
aaa
loopne
scas
arpl
call
xor
into
mov
pop
cltd
adcl
pushf
frstor
pop
popa
ds
pop
mul
pop
push
sbb
push
scas
mov
mov
xor
xor
mov
cmpsb
xchg
iret
insl
ficoms
add
dec
daa
xchg
jp
ljmp
pop
sbb
or
pop
xchg
sar
in
and
movsl
imull
mov
movl
lods
xchg
jb
rcrb
cmpsb
mov
add
mov
xor
out
dec
push
iret
xor
bound
mov
scas
aaa
in
out
mov
and
lea
inc
ret
ret
cmp
imul
jl
push
xor
and
roll
add
int3
cmpsl
xor
fs
div
lods
push
xchg
inc
ret
imul
daa
jae
into
mov
mov
arpl
xchg
popf
daa
add
cmp
xchg
out
pop
jo
jmp
push
mov
sti
into
cltd
shlb
imul
xchg
mov
leave
xchg
dec
int
movzwl
lods
ja
pop
dec
push
mov
fldl
in
test
mov
stc
pop
jae
inc
sub
loop
push
dec
dec
pop
sub
insl
lds
std
scas
inc
fisttpl
and
int3
sti
jmp
sbb
dec
daa
and
and
sti
xchg
inc
jo
popa
add
or
movb
cs
rorb
and
fidivl
mov
insl
cmp
dec
js
fwait
ljmp
push
mov
push
push
or
sub
in
scas
mov
loop
das
cmp
aam
xchg
xchg
movsl
loopne
sub
dec
xor
lock
add
pop
sub
cmp
inc
or
mov
jle
rcrb
xchg
jle
jecxz
inc
inc
out
mov
std
icebp
orb
test
test
jmp
in
xor
in
jge
sbb
push
dec
decl
push
xor
inc
ror
jl
fs
xchg
notb
xchg
sbb
jle
js
jns
mov
sbb
iret
jmp
cld
pop
rcrl
popf
fistps
pop
mov
cmp
lret
fnstsw
dec
rcl
in
pop
test
jg
jmp
scas
mov
testl
cmpsb
pop
andb
aad
lahf
and
push
cli
jmp
mov
mov
inc
das
clc
pop
adc
or
f2xm1
fmuls
mov
call
xchg
ja
dec
mov
lea
aaa
jl
call
push
mov
ljmp
mov
cld
rorb
das
shlb
xchg
iret
movsb
fidivl
movsb
push
mov
insl
popa
pop
xor
fisttps
andb
xchg
dec
xor
ds
xchg
ljmp
in
sub
add
jnp
push
js
push
jmp
sub
push
dec
xor
test
pop
adc
sub
or
cmp
out
jp
push
sbb
jp
cmp
ficoml
sbb
push
lcall
sub
push
cmp
dec
xlat
or
mov
clc
mov
dec
push
push
outsb
xor
mov
inc
popf
shll
cmpsl
sbb
out
test
jno
inc
sbb
or
lds
outsb
sub
add
pop
fcoml
mov
xchg
in
xor
xchg
pop
xchg
sub
jge
adc
adc
and
mov
dec
stos
mov
xchg
cmp
out
xchg
gs
jle
mov
sub
inc
movsl
and
jp
ret
mov
popf
outsl
sbb
call
popa
inc
mov
mov
push
cld
pop
mov
in
sub
jo
test
movsb
pop
pop
cmp
enter
rcll
out
jg
and
and
adc
xor
nop
cld
subl
lds
add
mov
movsl
pop
pushf
mov
sub
fidivl
mov
in
pusha
pop
fs
les
and
mov
xchg
repnz
cmp
or
sub
cmc
push
sbb
stos
cmc
aaa
jnp
ret
call
loopne
dec
sub
sub
inc
sbb
fdivs
test
call
add
je
bound
cs
addr16
outsb
pop
call
inc
rolb
loope
imul
cltd
fadd
mov
dec
and
cwtl
adc
and
gs
xor
fisttpl
mov
pop
inc
mov
cmp
xorl
push
cmp
jne
add
popa
mov
mov
ficompl
mov
sub
pop
dec
daa
cmp
aaa
dec
incl
inc
or
cmp
fsubs
call
xor
sub
ror
shrl
dec
xor
fwait
jp
mov
out
adc
push
ficomps
notl
push
pop
or
or
in
lret
insl
mov
jp
and
dec
adc
decb
push
int3
loop
mov
jg
hlt
mov
dec
jg
cmc
cmpb
jg
lahf
xor
and
data16
xchg
enter
pop
or
add
pop
fstl
inc
mov
and
out
inc
std
mov
xor
jno
adc
mov
mov
pop
mov
js
or
insb
push
xor
in
das
xchg
sbb
inc
ret
sbb
arpl
mov
sub
jecxz
cltd
add
push
flds
pusha
mov
mov
push
mov
test
and
cmp
mov
fstpt
adc
cltd
mov
outsl
mov
lret
pusha
imul
out
cli
mov
cmp
jae
imul
andb
adc
test
jecxz
adc
jnp
cltd
mov
cmpsl
imul
add
lahf
push
hlt
jmp
dec
inc
sbb
jg
dec
loope
jns
mov
mulb
mov
pop
sub
das
push
jl
sbbb
mov
mov
mov
and
ja
pop
jg
fsubrl
push
mov
sub
nop
jne
inc
sbb
lret
movsl
jae
rorb
inc
addl
pop
int3
jmp
into
dec
cwtl
lcall
jmp
jmp
ror
fistpl
and
mov
cs
xchg
lea
xchg
xchg
sbb
pop
push
icebp
adc
pop
push
jno
rolb
subb
out
mov
sbb
pop
mov
shrl
jb
push
inc
clc
and
xchg
xchg
cld
pop
pop
jmp
adc
jmp
adc
fdivrp
cmp
xchg
mov
lods
inc
or
cmc
in
pushf
add
pop
cld
shl
inc
adc
mov
jnp
loopne
mov
dec
or
xor
pushf
out
push
je
jns
stos
mov
cli
clc
fmul
push
push
cltd
mov
xlat
movsl
inc
into
add
cld
or
cmpsb
or
aam
mov
data16
scas
xor
pusha
xchg
pop
sbbb
out
rcll
adc
movsb
pop
dec
jle
dec
jecxz
lds
mov
sti
popf
in
dec
xchg
mov
repz
sarl
cmpsb
fs
out
or
insl
dec
out
cmp
or
jne
mov
pushf
pop
xlat
xchg
push
sbb
inc
jl
std
ss
lods
xchg
out
pop
push
scas
push
loopne
mov
das
cmpsb
ror
cld
xor
mov
sub
mov
loope
in
mov
jns
sbb
outsl
pop
xchg
test
mov
mov
jmp
jge
loope
xor
push
add
xchg
cs
add
call
popf
loope
out
out
sub
mov
mov
movsb
pop
js
jns
frstor
out
xchg
test
gs
mov
mov
out
mov
int
cmp
test
dec
pop
mov
dec
pop
leave
push
mov
aam
bound
or
jge
add
push
les
pusha
aam
rcrl
popa
icebp
add
pushf
pop
jmp
or
mov
xchg
fisubs
mov
push
lahf
int3
std
xchg
or
fs
jnp
xchg
xorb
sub
fsubl
mov
mov
adc
mov
fnstcw
pop
stc
ds
push
adc
xor
jp
imul
or
pop
sbb
dec
xchg
es
daa
push
adc
repz
loopne
out
in
inc
test
xchg
jbe
push
popa
pop
out
cmp
call
jge
mov
repz
jbe
add
dec
mov
or
popa
in
sub
mov
sbb
test
divb
ss
mov
je
and
mov
and
jae
pop
imul
cmpsb
mov
jns
inc
sub
add
jle
arpl
xchg
dec
outsb
adc
adc
adcl
sbb
xor
out
add
adc
cmc
add
jmp
lret
jmp
mov
in
call
out
mov
mov
xchg
pop
xor
adc
jne
adc
dec
loope
jnp
leave
mov
mov
imul
xor
adc
jp
xchg
shlb
sub
dec
ret
lock
adc
jno
dec
or
and
mov
mov
stc
pop
pop
and
inc
dec
insl
insb
pop
scas
sbb
cs
test
arpl
inc
in
insb
test
xlat
add
xlat
push
dec
lods
add
dec
aad
repz
lds
into
loop
daa
lods
lock
imul
inc
cmp
cmp
sub
push
jns
pushf
sarl
fnsave
in
inc
inc
test
loopne
mov
sub
mov
xchg
mov
push
add
sbb
and
fucomi
mov
cli
out
jge
lret
int3
lea
roll
jge
adc
nop
movsb
into
lret
mov
enter
out
fcoml
ret
imul
jae
jl
out
cmp
add
mov
cmp
mov
pop
inc
pop
cmp
aas
mov
dec
rcll
sar
add
xchg
int3
scas
mov
mov
add
je
insb
sub
iret
cld
push
gs
add
js
lar
gs
sti
xchg
loop
fnstcw
xor
pusha
fcomi
mov
adc
or
mov
outsl
into
sahf
jge
inc
aaa
fwait
cmpsl
stos
in
clc
cmp
enter
shl
mov
sub
in
repz
jmp
daa
icebp
add
dec
mov
pusha
test
jns
xor
push
xchg
adc
mov
aad
out
aad
mov
out
sbb
notb
leave
sarl
rcll
cmc
ds
sub
push
xchg
sti
fs
loopne
das
pop
std
cli
add
dec
inc
mov
std
push
add
adc
in
fucom
mov
xchg
xchg
cmp
xorl
mov
dec
adc
mov
cli
and
lock
xchg
out
mov
xlat
jbe
mov
aam
push
jno
mov
popa
testb
lods
inc
stos
fdivl
and
jl
stos
pop
testl
fldenv
and
push
shrl
stc
xchg
into
xor
aas
cld
mov
dec
cwtl
add
test
cmpl
icebp
mov
aam
xchg
sar
ljmp
xchg
pushf
cmpsb
push
ret
enter
jmp
jae
outsl
repz
divl
and
xor
mov
cmpsb
jp
cli
jb
xchg
lea
xor
repz
mov
pop
pop
ss
and
jp
dec
or
sbb
add
xlat
fmull
push
cli
and
xor
xchg
xor
dec
outsl
es
loop
pop
loopne
push
repz
in
pop
push
sub
lret
push
cmp
mov
xchg
xor
int3
inc
adc
cmpsb
rcrb
aas
mov
cmp
push
in
mov
aas
addl
pop
movsl
xor
dec
adc
and
xchg
jle
js
xchg
add
dec
push
mov
test
lret
test
sub
popa
fstp
cltd
push
in
fisubrl
inc
pop
fadd
lods
cmp
mov
test
sbb
mov
cmpsl
pop
fildll
stc
lds
sub
mov
jns
stc
xor
inc
sahf
pop
stc
cmp
pop
filds
mov
mov
push
repnz
outsl
inc
in
sbb
mov
mov
sbb
pop
in
mov
mov
inc
add
inc
shlb
cs
cmpb
or
ljmp
xchg
div
scas
push
add
movsb
mov
mov
fcoms
bound
push
stc
mov
and
xchg
inc
ds
scas
nop
xor
daa
pop
cwtl
dec
cmp
sbb
jle
arpl
mov
dec
dec
std
lahf
cli
mov
mov
into
addr16
imul
movsl
sub
mov
cli
insb
out
cmc
adc
repz
adc
insl
lods
adc
mov
inc
jle
and
outsl
pop
jg
dec
jbe
nop
insb
xchg
and
ret
adc
add
gs
jmp
cmp
and
das
outsb
mov
rcl
lock
push
or
outsl
xchg
add
packssdw
cmp
sub
mov
mov
je
sub
xchg
cltd
dec
js
inc
mov
mov
bound
and
test
push
addr16
xchg
in
pusha
js
xchg
mov
jne
dec
inc
adc
sbbb
xchg
cli
int
pop
imul
jnp
inc
xchg
lea
mov
les
push
cmpb
std
push
dec
adc
sti
jg
pop
popf
and
cmp
jns
enter
popf
jno
pop
push
mov
dec
xchg
mov
mov
mov
shrb
ljmp
fidivs
jnp
push
std
dec
adc
imul
das
jbe
jae
test
stos
or
jg
dec
insb
inc
xor
dec
cmpsl
sarl
in
xchg
mulb
mov
pop
sbb
pop
loopne
sbb
mov
pop
shlb
dec
cmpsb
mov
fsubrl
inc
push
xchg
not
add
sbb
and
loop
xchg
jne
mov
movl
lods
mov
fptan
out
inc
sahf
or
insb
scas
ja
cltd
adc
inc
rorb
sub
fsub
cmp
mov
inc
scas
sbb
test
jb
adc
das
data16
mov
cmp
lods
int
repz
nop
jo
insb
mov
push
mov
popa
mov
aaa
enter
divl
mul
xlat
movsl
in
mov
mov
rcl
xchg
aam
clc
xchg
mov
fwait
xor
add
das
pop
shrl
loop
or
sahf
lret
repz
xchg
fnstenv
out
dec
xor
fstpl
mov
mov
loope
cwtl
lahf
imul
rcrl
dec
pop
pop
xor
mov
das
jno
sbb
jb
add
out
cmpsb
addl
stc
lods
inc
sub
rclb
loopne
dec
push
mov
out
mov
mov
subb
mov
stos
mov
lds
or
test
push
enter
js
pop
adc
jge
or
add
cltd
inc
cwtl
jns
mov
popl
andl
push
pop
clc
mov
outsl
es
inc
std
xlat
pusha
rcll
fistl
scas
mov
mov
mov
jecxz
and
inc
adc
test
shl
daa
xchg
cltd
jge
ret
mov
mov
popl
loopne
data16
loop
push
adc
stc
cmp
pop
in
mov
jg
fmuls
call
fsubs
sub
xchg
push
daa
shlb
sbb
inc
jb
sbb
inc
dec
shrb
outsb
into
dec
jmp
test
sbb
push
int3
loopne
cmp
cli
dec
lods
add
mov
hlt
mov
jns
jmp
xchg
cltd
fcmovu
into
sub
inc
dec
fidivrl
push
xchg
mov
mov
sub
cmp
out
mov
in
push
jp
jbe
xlat
lea
enter
cli
jne
mov
or
in
mov
mov
in
adc
test
repz
cltd
js
lret
loopne
les
xor
mov
pop
pop
js
mov
dec
mulb
in
stos
jge
pushf
mov
pop
ja
xchg
lea
jns
mov
dec
rorb
xorl
jmp
cmp
imul
call
push
stos
add
mov
test
lea
dec
repnz
fldt
je
rolb
push
dec
popa
js
clc
xor
into
clc
loop
xchg
or
fildl
ja
pop
pop
data16
dec
jp
cmp
cmpb
sbb
mov
cli
lods
push
cmpsb
inc
test
loope
push
push
pop
shlb
hlt
adc
jp
mov
push
addr16
repnz
decb
test
and
cmpsb
int
xor
sbb
pop
sahf
data16
lret
push
aam
xor
lds
idivl
jno
ja
cmc
jmp
js
cmp
cltd
push
hlt
xchg
fstpt
xor
xor
mov
mov
xchg
mov
aaa
out
inc
inc
jns
ljmp
out
push
push
mov
in
push
test
mov
in
addr16
sbb
xchg
fistpl
sbb
cmc
pop
push
fnstenv
leave
sbb
sbb
and
jo
mov
mov
mov
sub
adc
mov
xchg
cwtl
dec
gs
lea
and
mov
mov
dec
pop
add
jb
sbb
push
cmc
stc
push
xor
aad
data16
out
sub
decb
mov
rorl
xchg
movsb
push
sbb
push
ss
repnz
insl
and
jbe
sbb
or
or
mov
imul
fwait
sbb
pop
fistpl
dec
pop
adc
mov
sub
movsb
data16
sub
lds
loope
shrb
mov
imul
loop
push
mov
cltd
mov
leave
cltd
fmulp
or
cmp
inc
lds
in
xor
cmpb
daa
movsb
clc
cwtl
mov
jp
out
loop
les
mov
adc
imul
push
xchg
add
mull
xchg
scas
clc
shlb
pop
or
pop
icebp
cs
jecxz
push
mov
or
iret
cs
adc
add
jp
inc
add
fmuls
leave
mov
and
push
sarl
clts
out
jle
sbb
cltd
pop
inc
and
cli
fisubl
fistps
inc
jmp
stos
dec
lea
sahf
pop
test
outsl
jo
add
pusha
jno
dec
mov
cmp
jae
cmpsb
adc
mov
ljmp
xor
jo
imul
out
shlb
cmc
aas
inc
shrw
dec
xchg
loop
cmp
repz
addr16
bnd
sub
mov
push
sbb
adc
cmp
xor
xchg
orl
insb
cmc
je
push
xchg
cmp
push
dec
stc
push
mov
lds
mov
ds
cmp
out
and
cmpl
inc
sbb
cmp
mov
insl
jge
mov
divl
js
sbb
cmc
out
addr16
push
insl
sbb
xor
outsl
pop
pop
cmp
mov
mov
ss
cmc
loop
lahf
in
cmpsb
cmp
dec
mov
cmp
xchg
xor
into
aaa
pop
mov
sti
cmp
andnps
popa
jp
inc
xor
xchg
andl
in
mov
jg
mov
rolb
add
xchg
cmpsl
dec
sub
std
sub
mov
mov
cmpsl
icebp
mov
add
fisubl
nop
stc
mov
andb
scas
popf
rol
xchg
hlt
add
pop
cmp
shll
push
cmp
loop
out
push
mov
xor
cmp
mov
gs
out
add
ljmp
jp
sahf
scas
daa
mov
jno
mov
ds
movb
pop
push
enter
sbb
cs
cltd
lea
lcall
leave
test
stos
add
or
or
push
bound
rorl
jae
daa
jns
inc
mov
push
shlb
mov
jl
cmpsl
adc
fidivrl
fcmovnb
es
or
lock
pushf
cmp
pushf
mov
mov
mov
xchg
xorb
out
ja
and
loope
mov
push
icebp
iret
sbb
int3
add
into
and
fsubrs
or
pop
lds
lahf
adc
xchg
inc
stos
xchg
leave
jg
dec
daa
popf
sub
cmpsl
les
cwtl
repz
push
lcall
xchg
or
sbb
daa
test
imul
sub
fstps
fisubrs
jnp
dec
and
stos
cwtd
xor
shrl
mov
hlt
jno
fldenv
lahf
enter
mov
jbe
test
imul
jae
lock
cmp
fcomps
cmp
mov
jno
xor
xchg
add
push
hlt
sbb
cmc
dec
push
sarl
add
or
or
push
call
lahf
out
not
xor
addr16
cmpsb
cmc
inc
aam
sbb
std
std
clc
inc
and
adc
fucom
arpl
std
lods
fnstenv
lcall
xchg
push
add
into
js
jnp
imul
cltd
or
mov
test
sub
mov
stos
jbe
in
negl
fmull
lcall
insb
mov
outsb
lods
cmovnp
rolb
mov
movsb
outsl
lret
xor
adc
push
xor
dec
mov
std
mov
jl
xchg
add
les
adc
add
repz
and
aaa
xor
and
mov
cmp
lea
sub
xlat
xor
test
inc
cli
xchg
leave
mov
jecxz
cmp
insb
xchg
and
imul
jl
pop
jmp
xor
std
fstps
dec
aam
ss
lods
movsb
cmp
ljmp
push
jae
jbe
fsubrs
xchg
adc
gs
add
ja
jae
inc
into
pop
sub
inc
jmp
andl
faddp
cs
dec
adc
mov
adc
push
rorb
pop
sbb
pop
addr16
xchg
and
xor
cltd
mov
ss
fcmovu
and
lock
popa
dec
repz
das
add
popa
mov
push
ret
sbb
inc
pop
dec
pop
cmp
ret
imul
xor
into
dec
ror
jno
push
pop
pop
xor
push
lods
jmp
sti
pop
dec
mov
lahf
jbe
push
lods
xchg
ret
and
lret
gs
inc
subl
xorl
mov
adc
push
test
imul
sub
pop
dec
insb
inc
adc
sub
pop
mov
sbb
imul
lods
mov
pop
pop
push
or
sub
imul
push
ret
sbb
pusha
adc
sbb
cmc
mov
cli
rcrl
push
xor
testb
sub
inc
aaa
sub
adc
and
pop
les
fldcw
ds
mov
sub
sbb
adc
ljmp
adc
dec
ret
jbe
jge
jle
cmp
repnz
ret
arpl
mov
or
sahf
loope
fistps
jns
add
adc
cwtl
fidivl
mov
icebp
push
bswap
sub
les
fdivrs
pop
jge
sbb
aaa
call
jp
daa
out
bound
scas
xchg
jae
scas
cmp
icebp
mov
adc
lcall
jecxz
loop
push
cmp
mov
out
loope
cli
ja
add
popf
ficoml
inc
inc
das
lock
or
jle
xchg
jle
pop
lcall
and
sub
sbb
xchg
add
call
leave
addr16
es
xchg
repnz
fwait
jns
cmp
test
pop
out
arpl
call
std
int
mov
mov
out
negl
xor
inc
mov
jecxz
pop
adc
lcall
pusha
out
lea
xchg
rclb
mov
jge
out
pop
arpl
es
data16
xchg
add
inc
std
rorb
xor
mov
inc
xchg
pusha
sub
xchg
mov
mov
push
sub
lret
push
mov
rcrb
cmp
test
xchg
in
mov
out
lahf
adc
inc
lretw
clc
incb
mov
cmp
cmp
es
cmp
inc
popf
cli
adc
or
or
or
leave
in
pop
mov
fwait
out
das
jge
ret
sbbl
pop
dec
adc
test
in
add
push
mov
lcall
cmp
or
scas
sub
lock
inc
xchg
adc
bound
inc
xchg
sti
fidivrl
and
dec
repz
les
lock
push
popa
aam
pop
das
xor
sbb
jne
push
out
mov
aam
adc
in
sub
sbb
xor
aas
and
aaa
pop
mov
push
fstpl
dec
call
mov
mov
or
imul
lret
add
and
std
stos
cmpsl
cmp
jae
dec
sbb
cmc
pop
lea
mov
add
sbb
jnp
jno
jmp
pusha
sub
test
lds
mov
in
in
aam
loope
or
push
in
and
rclb
mov
mov
fs
push
es
aam
dec
mov
push
cwtl
inc
rcll
dec
fcomp
xchg
or
cltd
or
mov
in
inc
es
sarl
imul
sbb
aad
xor
mov
mov
idivb
mov
push
sbb
arpl
int
inc
shrb
adc
or
cmc
adc
cld
add
orl
push
cmp
scas
addl
xor
inc
jg
aaa
pop
stos
inc
ss
cmpl
jo
out
dec
es
xor
and
movsl
mov
cmp
cmpsl
loop
movsb
test
jb
cld
pop
push
dec
pop
mov
scas
adc
add
out
pop
mov
mov
cld
add
cs
mov
mov
cmc
outsb
xor
jno
std
or
jle
pusha
ret
jae
xor
loop
mov
outsl
pop
add
popa
sub
pop
or
mov
mov
lock
or
mov
sbb
and
inc
fcom
adc
push
ret
cmp
push
or
mov
outsb
xor
push
mov
add
enter
and
xor
popa
stos
call
xor
pop
inc
sub
jb
or
ret
xchg
xor
or
pop
mov
loopne
inc
movsb
mov
rclb
jecxz
sbb
fnstsw
push
sbb
dec
ss
mov
inc
xchg
cmp
jne
jmp
push
mov
inc
xor
pop
loop
adc
cmpsl
xchg
pushf
std
xchg
or
or
cmp
mov
mov
pop
stc
pop
lret
push
xchg
cmpsl
xchg
cmc
out
decl
lods
sbb
fadds
or
int3
int3
mov
dec
insl
push
push
aam
cmp
testb
insb
inc
jbe
mov
add
jb
and
jae
mov
sub
mov
jecxz
in
add
and
and
jb
fcmovnb
inc
adc
and
loope
dec
insl
mov
movsb
bound
outsl
pop
and
or
ljmp
ja
pop
cltd
out
mov
push
jo
xchg
adc
xor
mov
add
scas
adc
push
xchg
jnp
mov
dec
imul
push
pop
sub
mov
mov
xor
into
int
test
sbb
insb
sbbl
sbb
into
js
push
dec
ja
xor
sbb
lcall
mov
addr16
imul
xchg
add
and
jmp
mov
fs
lock
mov
inc
inc
pop
jp
std
shll
sub
loop
insb
shlb
inc
pop
sbb
xor
or
xchg
movsb
mov
stc
push
mov
sub
addr16
pop
subb
fwait
and
mov
cwtl
cmc
ret
or
add
in
outsb
mov
lods
leave
add
ja
xor
push
mov
or
jp
lret
adc
icebp
mov
js
pop
out
ficompl
lret
in
ja
addb
inc
xlat
lret
fists
xchg
or
in
stc
call
cs
push
fdivp
mov
lods
inc
mov
stos
icebp
ja
and
add
adc
inc
into
mov
in
nop
sbbl
pop
ljmp
adcb
rolb
sbb
jmp
mov
xchg
data16
js
scas
jg
dec
ja
dec
loop
dec
xchg
lret
outsl
int
testl
xlat
icebp
in
add
loope
mov
sbb
pop
sbb
inc
pop
aam
es
lret
fmull
sub
outsl
adc
cwtl
mov
std
std
sarl
daa
mov
call
or
inc
pop
test
into
stos
xchg
les
jg
pop
decb
in
data16
les
fldenv
sub
pop
inc
aad
aas
dec
xor
cmc
xchg
mov
lock
cld
mov
cmp
jno
hlt
loope
push
push
xor
xchg
and
xorl
in
lcall
add
aam
std
or
xchg
sbb
xor
inc
aas
mov
aam
insb
push
jge
ror
xchg
cmc
aam
adc
out
in
add
addr16
inc
stos
pop
jbe
ret
sub
popa
into
andb
mov
xor
pop
push
cmpsb
add
mulb
add
jne
jle
sub
test
jb
fmull
out
addr16
or
add
mov
lcall
shl
loop
mov
outsb
xchg
xor
pusha
mov
test
dec
xor
imul
jle
or
sub
out
icebp
insl
jbe
lock
insl
add
cmp
out
mov
fistps
jbe
cmpsb
mov
and
nop
inc
int3
ret
cmp
sahf
jae
imul
ja
loop
mov
mov
leave
mov
das
cmpsb
inc
popf
push
test
inc
inc
sti
lahf
loop
mov
bound
mov
fdivl
lret
sbb
arpl
ret
lods
dec
int3
xorb
mov
test
iret
loope
cmovp
lock
mov
lods
mov
mov
ss
imul
sbb
clc
inc
mov
push
sbb
mov
xor
cmp
jne
in
in
adc
sbb
out
add
add
repz
mov
push
xor
loope
ja,pt
push
sub
mov
mov
and
push
mov
int
jg
loope
addr16
scas
popa
es
inc
and
dec
xchg
imul
jge
es
add
cmp
xchg
popf
int
ds
loope
loope
inc
fiaddl
jmp
sub
mov
fbld
xor
outsb
dec
pop
sbb
arpl
outsb
icebp
inc
mov
dec
pop
xchg
xchg
jp
lds
jge
in
cmpsl
push
pop
dec
je
xor
push
scas
insb
lret
jle
out
and
fs
fcoms
bound
add
stos
pop
xchg
adc
and
mov
mov
mov
sbb
cmp
jge
mov
lock
movsb
add
mov
cmp
mull
or
sbb
les
popa
test
mov
ret
inc
popf
cmp
inc
mov
and
xchg
and
addb
xchg
push
outsb
cltd
std
ds
dec
inc
xor
add
cmpsb
or
xor
aaa
sbb
cmp
into
movsb
aad
test
xor
out
test
and
neg
inc
cmpsb
clc
jne
fcomp
stc
repnz
out
aad
inc
mov
loopne
jl
fsubs
and
fs
loope
mov
cli
pop
xor
pop
adc
pop
mov
jae
lods
stos
lahf
and
enter
jbe
dec
mov
idivl
sbb
fdivs
cwtl
xchg
pop
pop
imul
sbb
jle
cmp
pop
movsl
dec
add
pop
daa
es
addr16
jno
fsub
cwtl
push
cmpsb
loop
not
or
mov
into
test
and
cmpl
in
movsl
or
in
vpmacsswd
clc
outsb
sbb
divb
xor
cmp
mov
outsb
mov
and
push
test
sti
loop
call
mov
arpl
shlb
out
sahf
aam
xor
sarb
and
xor
shrl
decl
lret
xorl
push
aaa
adc
popf
arpl
aad
lret
fsubp
in
cld
in
lcall
lods
aas
das
stos
int3
inc
mov
call
pop
mov
sbb
xchg
sub
iret
adc
movsl
movsl
jnp
sarb
ss
cmp
lea
aaa
pop
imul
arpl
lahf
mov
gs
pop
pop
cmpsb
sti
push
dec
mov
pop
cltd
jns
fists
xchg
popf
jns
or
dec
inc
or
mov
insb
or
or
fs
pusha
rcll
out
or
out
ljmp
mov
mov
fsubrs
lods
jno
or
test
cmpb
adc
out
adc
das
mov
sahf
stos
or
mov
outsl
int3
pop
loop
jmp
stc
ss
pop
xchg
pop
mov
inc
mov
test
cmp
push
or
aas
int
rclb
push
stc
adc
rorl
in
nop
test
scas
cmpsl
push
pop
jg
test
add
push
stos
fwait
xlat
xor
or
inc
inc
repnz
sarb
int
fildll
sub
lock
icebp
dec
xchg
push
int
xchg
imull
mov
xor
inc
aad
inc
shll
ss
rorl
arpl
push
in
lret
shl
in
and
insb
cltd
iret
ljmp
push
inc
and
jae
jle
imul
lock
arpl
cmp
pop
push
jmp
mov
imul
mov
add
sub
insb
out
push
shll
and
ret
jbe
cmp
frstor
mov
pop
out
xchg
addr16
cmpsb
cld
adc
jmp
inc
or
cmc
mov
fdivs
push
aas
cmpsl
test
mov
adc
jb
shl
jle
or
mov
xchg
cmp
or
rorl
test
inc
lods
mov
add
xchg
test
mov
lcall
mov
or
pop
mov
sbb
inc
stos
icebp
mov
xor
daa
sub
dec
xchg
xor
ljmp
iret
dec
sub
push
fsubs
cmp
out
notb
mov
xchg
pop
lods
cwtl
iret
es
fldl
sbb
xlat
aas
enter
lcall
sti
fimull
int
les
mov
dec
in
sbb
orl
pop
push
mov
ret
pop
sub
xor
push
mov
mov
in
rep
mov
cmp
sbb
shl
mov
xchg
scas
shl
imul
mov
pop
ss
inc
jle
sub
outsl
sbb
mov
and
inc
loop
cli
xor
jge
mov
rorl
mov
inc
xchg
xor
jo
mov
cmp
push
mov
adc
and
sbb
mov
aas
incb
add
lahf
mov
out
scas
cli
pusha
int
pop
mov
shlb
hlt
imul
addr16
lcall
ds
adc
arpl
jmp
or
je
inc
jns
push
push
sbb
jae
fcomps
orl
xchg
jae
or
lret
mov
xor
lock
add
mov
or
push
mov
pop
cs
push
add
aam
jns
divb
cmp
xchg
fmuls
push
rcrl
jecxz
sti
ljmp
sub
cs
mov
cltd
out
arpl
mov
pop
inc
int3
or
xor
popl
adc
popf
movl
int
add
inc
stos
cld
push
fnsave
xor
divl
pop
bound
xor
pushl
arpl
and
inc
mov
add
aaa
mov
or
mov
lret
clc
mov
xchg
mov
inc
add
es
xchg
sub
add
add
xchg
inc
mov
ljmp
test
cld
push
jl
ret
mov
dec
es
jne
xor
xor
mov
sub
add
sub
iret
inc
icebp
xchg
cmp
mov
hlt
imul
dec
gs
mov
mov
out
mov
xchg
sbbl
adc
and
jbe
mov
dec
sbb
int3
data16
pop
dec
iret
shll
enter
sti
shlb
movsb
xchg
sub
and
pushf
mov
mov
and
dec
cmp
mov
lods
sub
mov
jns
jmp
xchg
in
popa
std
jl
ja
add
push
ret
loop
dec
enter
loopne
call
pop
mov
in
add
cmp
fisttpl
cmc
adc
clc
ret
ds
imul
ss
xchg
fidivrs
or
and
or
hlt
cmpsl
leave
icebp
sbb
stc
movsl
stos
fwait
insb
adc
stc
filds
push
fs
mov
sub
stos
add
or
lcall
pop
and
xor
sahf
and
mov
xor
adc
stos
cli
js
lret
dec
xchg
xchg
xor
fisttpl
mov
ljmp
adc
push
jl
mov
adc
test
jg
out
pop
test
mov
les
jmp
jae
out
mov
mov
push
std
jmp
sbb
repz
js
dec
bndstx
in
test
std
cmp
sub
cltd
lret
es
mov
rorb
fadds
jmp
pop
lods
cltd
mov
bound
dec
popa
cltd
stos
sbb
aam
cwtl
jmp
mov
jle
imul
iret
ja
shrb
inc
add
jp
inc
ror
int
and
stc
and
testb
or
sub
out
aad
mov
mov
ljmp
orl
es
movsb
mov
repz
mov
and
push
call
fwait
aam
jb
cmp
cmp
mov
dec
jmp
stc
mov
sbb
jb
fld
int
and
fistpll
sub
jb
add
cmpsb
aas
adc
mov
lar
push
fwait
andl
or
test
jl
push
int3
aas
iret
mov
das
sub
loop
jbe
push
cmp
mov
mov
push
mov
sahf
cmp
sub
je
mov
arpl
cmp
es
outsl
jb
mov
jns
adc
push
aaa
mov
jg
out
mov
sbb
outsl
xlat
dec
sar
daa
aad
insl
enter
add
and
aam
insb
outsl
dec
and
imul
enter
sbb
mov
rol
push
adc
aam
cwtl
jns
cmpsl
mov
xlat
add
pop
aad
xlat
mov
xchg
xchg
movsl
pushf
and
and
sbb
shl
mov
jne
rorl
mull
inc
jne
xor
scas
cs
and
sub
aaa
mov
mov
js
cmp
and
cli
orl
arpl
dec
ret
add
xchg
rcrl
loop
ficomps
in
sub
xchg
stos
aam
fldenv
push
dec
fbstp
out
mov
or
fistl
clc
jl
xchg
lock
jbe
push
mov
repz
les
xchg
jecxz
push
push
out
imul
idivb
cmp
mov
mov
lock
fmuls
cmpb
ds
dec
ja
jbe
add
mov
push
xlat
xor
sahf
mov
mov
jg
add
mov
dec
or
mov
push
fistps
or
push
dec
pop
or
mov
sbb
push
mov
scas
xchg
or
lods
out
orl
pop
mov
fnstcw
loope
pusha
inc
pop
ja
push
jle
inc
and
xor
xchg
ret
jnp
jecxz
lret
xchg
add
cmp
lods
cmp
rolb
mov
sub
lock
adc
xor
mov
fwait
jp
in
pop
mov
add
and
negl
clc
arpl
mov
gs
and
aam
push
jne
add
cmp
or
jge
ret
cmp
jbe
test
sub
fwait
int
adc
xor
lcall
mov
adc
popa
pop
js
mov
jmp
cmp
mov
inc
xchg
xchg
adc
cwtl
or
adc
ret
mov
sbb
int3
mov
mov
adc
push
dec
in
out
test
lock
add
push
in
sbb
clc
jae
xchg
das
enter
xchg
fs
out
adc
subl
inc
hlt
sahf
repnz
cmp
cwtl
pop
sub
fdivl
cmp
fs
xchg
stos
sub
inc
mov
test
cwtl
add
inc
sbb
jbe
icebp
lods
push
xor
mov
test
mov
ds
lods
add
inc
clc
insl
jnp
in
dec
cmpsb
fucomip
and
out
cmp
xor
testb
test
push
pop
ja
les
popf
aam
sub
nop
adc
mov
sub
mov
int3
movsl
mov
xor
xchg
mov
xlat
rorb
cmp
movsl
cmp
ljmp
and
ljmp
out
imul
and
push
les
mov
out
inc
pop
arpl
test
xor
mov
or
push
lods
fidivs
jle
mov
pop
outsb
and
test
cmp
mov
lock
lret
inc
sti
xchg
into
mov
ss
and
adc
lods
mov
lds
mov
sub
bound
mov
mull
xchg
add
es
adc
aaa
and
sub
cmc
jle
sbb
std
shlb
dec
shll
pop
hlt
add
ja
inc
ret
fisubrl
lret
cmp
xchg
stc
lea
cltd
sbb
jnp
in
outsb
popf
cltd
lock
mov
test
adc
shl
mov
out
in
cmp
push
xor
stos
sbbl
inc
popa
movsb
cli
cmp
push
inc
lret
rorb
jecxz
add
jecxz
lcall
enter
lds
dec
add
xor
setns
mov
je
jbe
xchg
xchg
fidivs
js
js
cmc
or
hlt
mull
jle
test
in
push
sub
unpckhps
inc
mov
dec
cld
inc
cli
insl
in
leave
push
stos
cmp
jle
pusha
lock
gs
les
neg
or
mov
or
scas
stos
rclb
xchg
addb
mov
fwait
sbb
test
jb
jp
mov
mov
sub
pop
mov
add
mov
daa
jbe
dec
scas
int3
xor
cmpsb
push
sbb
mov
mov
pop
scas
lcall
leave
loop
mov
xchg
jecxz
test
xor
js
fdivrp
mov
es
add
repz
stos
push
dec
xchg
or
ja
sbb
push
sbb
rorl
jecxz
inc
and
test
pop
cmp
add
push
ror
fcoms
js
and
cs
sbb
mov
jnp
xor
popf
sub
mov
pop
push
sub
stc
mov
cmp
mov
pop
stos
inc
adc
add
fwait
mov
call
cwtl
adc
addr16
repnz
jmp
outsb
or
push
loope
push
jle
inc
sub
and
pop
fsubrs
cwtl
rcrl
sbb
inc
jecxz
decb
push
aaa
push
imul
pop
shr
sbb
inc
ss
dec
cmp
xchg
and
insb
sub
and
xchg
fcomi
imulb
push
or
push
test
add
bound
pop
les
pop
mov
lods
add
add
outsl
ficompl
mov
mov
test
sub
popf
ljmp
int3
mov
jecxz
fimuls
hlt
cmpsb
into
mov
mov
pop
mov
fwait
rcr
insl
in
sbb
xchg
repnz
dec
repz
rep
mov
imul
imul
in
adc
test
jl
rcl
enter
cmp
dec
xchg
dec
lcall
lahf
cmp
adc
lods
and
mov
xor
dec
add
rolb
dec
cmp
xor
adc
sub
int
add
or
and
and
adc
rcr
xchg
push
cmp
jle
xchg
aam
xchg
sbb
add
orl
jb
mov
in
cli
mov
or
dec
jg
cltd
push
dec
into
xlat
mov
push
je
ret
in
shlb
test
mov
out
xor
add
int3
and
hlt
dec
loope
push
repz
das
and
mov
xchg
test
scas
test
scas
cmpl
fcomi
xchg
insl
sub
xchg
scas
adc
push
mov
les
xchg
movsl
pop
pop
cmp
mov
pop
add
add
repz
clc
xchg
push
stos
dec
pop
sbb
repz
nop
pop
fiaddl
les
sub
inc
inc
dec
pop
pop
aaa
cltd
dec
jg
xchg
mov
mov
aas
testb
xor
or
mov
aaa
into
mov
xchg
pop
ljmp
rorl
add
push
mov
mov
add
cmp
ror
sbb
add
pop
mov
fs
mov
outsl
pusha
pop
test
push
mov
enter
sub
out
scas
inc
and
es
pop
xlat
out
adc
aas
push
jns
data16
push
scas
out
cld
mov
pop
jg
movsb
mov
and
or
movsl
lret
divb
pop
mov
push
cmpsb
addr16
xchg
fbld
decb
cmp
cld
push
divl
call
ja
jne
lret
jl
scas
js
dec
xor
in
jle,pt
shl
push
mov
push
push
call
xchg
popa
jle
mov
cmp
dec
dec
in
dec
xchg
clc
rolb
loopne
mov
cmpsl
jmp
pop
and
jne
imul
arpl
mov
popa
std
imul
dec
inc
push
call
jge
lret
and
fmull
xor
dec
rorb
fstl
xchg
xchg
int3
imul
xchg
and
lods
mov
lods
or
mov
std
es
xor
cmc
test
sub
out
add
push
stos
leave
gs
mov
mov
cmp
push
cmpl
cmp
lcall
test
lods
push
mov
fbld
aad
imull
mov
orl
mov
ljmp
sbb
dec
and
xchg
repz
inc
dec
jge
or
aas
inc
movsl
cwtl
pop
bound
cli
das
mov
xlat
inc
add
pop
in
imul
xchg
js
sbb
push
xor
or
inc
push
ss
xor
cwtl
inc
jmp
ljmp
subl
jecxz
ja
jge
jmp
fsts
adcl
sbb
insb
adc
push
in
sub
das
sahf
xchg
call
inc
cmp
les
test
and
fisubs
mov
insb
arpl
adc
mov
cmp
or
movsb
lods
xchg
sub
and
hlt
dec
cmp
fimull
jae
dec
xor
sub
jo
mov
sub
and
adcl
jl
mov
xchg
push
push
imul
andl
clc
popa
mov
lock
nop
pop
sti
loop
ret
cmpsl
xor
push
bound
mov
hlt
cwtl
push
or
push
shlb
in
adc
and
jns
ljmp
in
sub
js
movsl
cltd
lahf
mov
push
lret
pop
loopne
testb
hlt
push
xchg
add
pop
push
xchg
push
mov
push
mov
pop
out
outsl
adc
stos
and
xor
faddl
sti
cmp
cmp
adc
das
sub
nop
pusha
cmove
and
xchg
or
push
sahf
jae
mov
andb
xchg
rorb
hlt
pop
lods
out
and
out
pop
add
movsl
jecxz
in
xor
dec
sub
sub
or
jle
sbb
adc
dec
mov
push
outsb
mov
jmp
cld
outsl
add
mov
aas
mov
idiv
fs
ret
cwtl
rcll
sbb
jp
outsb
stc
loop
push
pop
ret
pop
adc
pusha
pop
xor
sbb
ja
dec
push
lods
clc
lds
subl
push
xchg
stos
in
xor
fldenv
mov
inc
mov
test
mov
sbb
mov
jne
jb
outsb
subl
mov
sub
ds
mov
and
add
icebp
into
insl
jg
test
mov
imul
adc
push
xor
xlat
ret
shll
rcrb
lret
in
imul
test
leave
fldt
or
dec
and
jb
ret
fsubl
xchg
sbb
jl
xchg
add
jns
mov
xor
mov
jns
rcl
mov
lcall
xchg
scas
xor
cmp
cwtl
iret
mov
adc
sbb
inc
xchg
ljmp
loopne
rolb
mov
cs
mov
jnp
pop
out
xor
xor
cmpsb
dec
sbb
ret
mov
out
adc
imul
cmp
out
xor
stos
lahf
xchg
jno
mov
ret
stos
pop
daa
sub
mov
test
repnz
lods
mov
mov
dec
and
addr16
icebp
mov
shrb
xchg
ret
push
and
scas
jl
imul
lcall
inc
movsl
cmc
dec
sbb
dec
and
shrl
sbb
mov
std
fs
out
ficomps
cmpsl
sub
das
cmp
pop
inc
and
in
lods
fildll
jno
js
sbb
add
testl
mov
popf
and
out
les
add
or
mov
inc
xchg
test
data16
iret
mov
add
inc
cmpsb
ror
jmp
adc
jp
jl
fs
xor
int
lock
ljmp
inc
add
dec
mov
lea
mov
data16
outsb
repz
sarb
fwait
and
jge
sub
int3
sbb
das
je
or
xchg
cmpsl
sti
mov
push
es
enter
xor
push
mov
iret
mov
push
repnz
xchg
jecxz
adc
sub
sub
lods
daa
pop
ss
mov
int
xlat
adc
jl
in
inc
and
push
push
sub
and
into
mov
dec
lock
xchg
addb
jno
adc
jl
andl
dec
out
jp
mov
add
or
dec
pop
sbb
leave
sub
ds
jmp
mov
mov
imul
mov
mov
xchg
and
xlat
sbb
scas
jne
popf
movl
les
sti
inc
add
pusha
sbb
jne
in
cmp
or
lods
mov
ficoms
andl
xor
dec
test
aas
push
push
and
mov
mulb
adc
shrl
shll
inc
leave
div
xor
dec
cmc
insl
loop
stos
movsb
test
sub
cmp
jb
sarl
orb
cmp
repz
cltd
lcall
push
loope
cld
test
dec
jo
dec
mov
testb
mov
cli
into
mov
pop
es
dec
outsb
xor
vucomiss
jl
inc
out
push
int
mov
jns
outsb
adc
mov
movsb
xchg
mov
stc
pop
lret
js
scas
cmp
ja
mov
leave
jle
daa
or
mov
shrl
in
rorb
or
xchg
mov
mov
js
mov
inc
inc
mov
push
sahf
jge
sbb
out
mov
push
mov
dec
mov
ja
push
std
push
xchg
push
sbb
dec
bound
add
jno
lcall
out
ljmp
or
fbld
pop
sti
cmp
sahf
sub
jecxz
pushf
dec
aam
jl
push
lcall
movsl
movsl
mov
mov
mov
ds
xlat
cmp
fmuls
scas
ds
pop
sub
and
sarb
and
inc
movsl
jg
sbb
stos
movsl
lea
mov
call
scas
mov
outsl
aad
rorl
rcll
mov
ret
jno
pop
jae
lcall
cli
outsl
cmp
pushl
xor
dec
addr16
mov
andb
mov
outsl
xor
addb
out
add
leave
mov
inc
xchg
add
das
push
popa
adc
mov
cmp
in
loop
lock
cmpsb
fists
ret
xor
dec
leave
cmova
and
loop
push
fbstp
popa
fadd
insl
fwait
inc
ljmp
mov
mov
cltd
lret
xchg
imul
adc
sub
mov
mov
sbb
mov
dec
jo
mov
push
xchg
lret
dec
mov
nop
xlat
fiadds
out
jecxz
cwtl
aaa
jp
or
add
or
push
shll
jecxz
mov
mov
mov
ret
jmp
jg
movsl
jecxz
outsb
dec
in
mov
js
cmpsb
jns
mov
xchg
into
hlt
outsb
jb
inc
lods
lods
mov
daa
push
sub
xor
in
popa
out
in
insl
mov
push
loope
adc
idivl
leave
jo
pop
movsl
fildl
inc
or
mov
push
pop
movsb
mov
mov
jmp
gs
sahf
test
scas
mov
scas
add
adc
ror
ficompl
pop
pop
fistl
call
and
ret
cs
int
mov
rcr
mov
scas
xchg
cmp
mov
aad
mov
jg
mov
lds
test
shlb
ds
jne
mov
mov
or
push
mov
cs
call
or
popl
pushl
jno
ss
fdivl
lods
push
pop
add
es
add
stos
nop
je
mov
stos
sbb
fisttps
pop
addr16
out
cmpsl
sub
sbb
mov
pop
mov
add
jb
jl
pop
sub
pop
xchg
push
fstp
push
icebp
sbb
xchg
mov
lds
or
adc
fidivrl
sbb
cltd
gs
pop
data16
incb
push
dec
stos
ja
adc
pop
jo
rcll
xchg
sbb
pop
sbb
jns
jp
inc
lret
adc
fists
ljmp
sbb
push
push
jmp
sub
data16
dec
jle
fsts
push
xorb
outsb
imul
ret
popf
sbb
jno
mov
push
push
dec
int
jne
and
cld
fwait
sbbl
adc
shll
sub
sbb
fisubrl
jne
jmp
dec
insb
movsl
inc
pop
icebp
mov
dec
insl
mov
inc
cmpsl
std
stos
iret
fmulp
pop
mov
daa
aad
sub
iret
mov
xor
out
jge
xchg
adc
sahf
jnp
aam
add
sbb
js
push
mov
sub
aas
mov
or
jp
addr16
outsb
xchg
inc
stos
dec
mov
xor
scas
arpl
push
into
int
cs
push
xchg
fstl
cmpsb
gs
mov
addr16
sahf
mov
fsub
jmp
sub
pop
sub
sbb
cwtl
inc
inc
xor
add
mov
inc
dec
dec
pop
xor
stos
xchg
sbb
movsl
mov
sbb
cmpb
fnstcw
out
dec
dec
push
cmp
push
shrl
lret
rorb
mov
xchg
xchg
insl
push
cld
jno
lods
imul
ret
add
rclb
cld
jb
cld
push
std
in
dec
lret
fcmove
jns
adc
xor
aam
push
mov
fs
out
jmp
pop
jno
adcl
rol
shlb
xchg
mov
ret
jnp
hlt
sbb
adc
mov
push
pop
mov
mov
in
add
mov
imul
imul
add
sahf
push
test
imul
insl
movsl
cwtl
insl
add
loopne
sub
cmp
int
sbb
mov
inc
stos
cli
sbb
lock
lods
mov
sub
psubw
cmp
ja
adc
jo
lock
in
jmp
cmp
cmp
mov
cld
jmp
testl
aad
pop
imul
sbb
push
std
test
mov
popl
ljmp
push
jb
sbb
lea
pop
aas
test
pop
xchg
repnz
xchg
cmpb
cmp
int3
xchg
jecxz
jns
jnp
cmp
bound
xor
push
js
addr16
sub
sbb
sbb
push
insl
gs
loope
sub
push
lahf
jbe
and
daa
mov
add
mov
hlt
test
aam
mov
ds
pop
sbb
fsts
pop
or
inc
negl
push
jg
cmpsl
xchg
jecxz
cli
clc
stos
xor
push
jmp
sbb
es
pusha
or
cmp
adc
xchg
jbe
xor
mov
xor
dec
xor
sti
sysexit
ficompl
xlat
pop
inc
jl
pop
sbb
sub
mov
pop
in
xor
stos
and
dec
out
xchg
mov
loopne
setg
je
adc
xchg
dec
mov
stc
pop
mov
shll
xchg
lret
fcos
ljmp
ja
lock
mov
sub
add
mov
lock
call
insb
test
add
adc
sti
mov
aas
sarb
stos
adc
imul
adc
mov
pop
out
and
and
sbbb
cmc
cmp
xchg
pop
fcomip
les
lock
and
push
add
cmpsb
test
imul
push
test
rorb
popa
or
mov
in
push
jmp
sbb
std
xor
push
xchg
or
nop
stc
jmp
inc
push
or
cmp
popf
mov
push
push
push
lcall
out
dec
mov
push
adc
nop
jle
scas
xchg
mov
sbb
xor
pop
mov
stc
inc
adc
xor
leave
push
das
rorb
pushf
mov
popa
inc
loope
add
sub
test
lods
aam
mov
mov
or
ja
inc
jmp
out
daa
std
add
mov
stos
jo
xchg
sbb
or
ret
adc
mov
xchg
sbb
divl
dec
jle
dec
test
add
decl
push
xchg
loope
mov
sbb
insl
andb
lea
std
xchg
xor
sbb
leave
mov
mov
icebp
add
mov
stc
or
daa
mov
and
hlt
cmp
int3
ret
imul
aas
in
fstl
sbb
pop
dec
add
into
cmpsb
nop
jns
stos
shll
push
mov
mov
in
mov
xchg
push
insl
adc
mov
mov
pop
das
aas
lahf
imul
in
aam
mov
imul
jg
lods
push
imul
mov
test
test
adc
sbb
jp
ss
inc
loop
mov
push
test
mov
add
rorl
sbbb
repz
sub
pop
insb
pop
in
or
dec
jmp
add
mov
imull
pop
adc
and
pop
mov
xor
push
stc
mov
mov
lcall
fmull
inc
adc
cli
jle
popf
jae
stc
repz
dec
fsubrs
iret
js
lods
and
ret
nop
jge
aas
mov
xor
cmp
int3
push
daa
clc
lret
sahf
xor
sub
dec
jo
ret
decl
lods
push
xlat
and
jns
shr
hlt
lret
lret
lock
daa
loopne
fs
stos
pop
lret
shll
adc
sbb
ret
push
dec
rcll
out
repnz
cmc
imul
adc
into
sub
adc
jmp
scas
inc
xor
sarl
xor
out
cmpsl
adc
mov
mov
add
pop
pop
scas
dec
into
jge
lretw
pop
mov
xchg
jmp
ret
push
bound
lea
rcrl
inc
dec
xor
fdivl
cmpsl
fscale
sbb
sti
sub
xchg
adc
push
dec
xchg
add
mov
inc
mov
pop
push
test
mov
and
and
xchg
hlt
inc
jg
push
test
jb
xchg
sub
dec
in
inc
lret
dec
fmul
shl
mov
dec
xlat
frstor
jg
dec
scas
cld
and
mov
cmp
and
xor
inc
js
push
adc
test
pop
arpl
clc
or
gs
xchg
loope
fstps
sub
sbb
in
cmp
jbe
push
jae
lods
mov
mov
in
jne
add
jae
jnp
sub
mov
testb
push
sbb
pop
mov
ljmp
mov
jp
jb
insl
push
or
xor
rorl
jmp
ljmp
aad
imull
cmp
imul
sbb
lock
pop
shlb
xlat
jle
inc
rolb
cmp
cwtl
loope
pop
push
ss
mov
lret
mov
xor
cmp
js
mov
mov
dec
cld
mov
and
fdivrp
mov
xor
loop
stc
adc
cmp
lods
aas
jp
sub
mov
in
pop
and
push
xchg
out
bound
enter
in
movsw
es
jbe
xchg
jb
out
pop
pop
and
mov
cmp
mov
out
jnp
mov
and
lret
mov
or
pop
cltd
cmp
push
dec
adc
clc
test
mov
mov
pop
add
dec
stc
mov
icebp
mov
loope
icebp
or
mov
lods
out
les
mov
pop
jp
inc
loop
imul
jbe
mov
mov
mov
inc
inc
pop
push
mov
xorb
mov
sti
mov
and
test
pop
dec
xchg
icebp
dec
xor
push
enter
ljmp
pop
mov
xchg
push
cmp
out
insl
push
imul
mov
loop
stos
insl
mov
xchg
fwait
std
mov
pop
mov
sub
add
add
scas
sub
test
mov
push
call
xchg
and
fbstp
lock
or
pop
lret
dec
ljmp
out
cmc
das
xchg
jno
stos
dec
cmpsb
jns
and
jg
hlt
movsl
rcl
daa
test
push
or
or
mov
loop
mov
or
fcomps
cltd
sub
or
loopne
dec
jmp
int
mov
mov
aaa
and
sbb
and
cmp
or
push
call
push
fcomi
inc
xor
in
mov
outsl
das
addr16
push
or
adcl
inc
sub
mov
pop
sbb
mov
test
or
mov
push
xchg
into
enter
sub
xchg
shrl
cmp
std
inc
arpl
test
stos
movsl
sbb
pop
das
xchg
fwait
sub
sub
incl
jle
lahf
mov
ds
movsb
hlt
cltd
or
xor
dec
adc
mov
mov
and
cld
mov
adc
loopne
add
xchg
xor
leave
mov
mov
cltd
lcall
movaps
jno
and
test
sbb
add
push
sbb
out
push
sub
inc
pop
cmpl
call
and
dec
mov
dec
lods
out
push
sti
lods
test
cs
movsl
sub
mov
cmpsb
shl
gs
das
cmp
pextrw
xchg
push
mov
add
test
jbe
stos
fdivs
or
sub
pop
rorl
xor
movl
cltd
in
xor
test
rcrl
lret
scas
xchg
lcall
cmp
repz
sub
int3
outsl
lods
dec
pop
mov
xchg
iret
test
scas
stc
incl
js
stos
xchg
jmp
inc
imul
mov
jmp
xchg
mov
and
push
cmp
sub
add
in
and
call
sub
pusha
das
xor
mov
sbb
movsb
and
sbb
idivl
sbb
dec
cmp
jns
adc
mov
push
adc
mov
inc
pop
in
inc
fwait
push
call
cmp
into
shll
mov
push
fs
in
lds
xor
mov
outsb
xor
divb
sti
pop
push
fldl
loope
add
sahf
inc
enter
sahf
mov
inc
xor
pop
xor
leave
or
fnclex
pop
mov
mov
movsl
shll
pusha
out
xchg
inc
push
sub
insb
divl
jl
inc
or
mov
add
push
inc
repz
or
lods
xchg
lea
cmpsl
rclb
mov
inc
sub
dec
cmp
enter
xor
lods
xchg
jno
cmc
jne
xlat
adc
cmp
pushf
pop
dec
dec
mov
lret
dec
movups
lret
sti
test
lret
inc
lcall
nop
arpl
dec
stos
lock
xor
dec
mov
inc
xchg
pusha
aas
jno
outsl
mov
ret
bound
ljmp
aam
sbb
cmpsl
sbb
data16
push
mov
cmovbe
sub
rorl
fsubl
mov
stos
je
jb
dec
insb
rol
mov
jle
neg
rcr
rcl
adc
hlt
sub
jae
stos
adc
ja
rcll
sbb
mov
or
gs
in
push
rcr
sbb
inc
outsl
adc
addb
call
iret
mov
ja
or
cmc
sub
pusha
push
jge
add
or
fldl
jge
jbe
xor
loopne
cmp
in
loopne
mov
ficompl
imul
sahf
dec
loop
mov
clc
mov
inc
popa
lret
nop
adc
clc
inc
fcmovnu
inc
aas
cwtl
jecxz
xchg
adc
adc
jmp
adc
insb
inc
mov
stos
cmp
pop
push
mov
cmp
mov
mov
push
sbb
add
popa
mov
mov
push
rclb
imull
xchg
lret
mov
push
es
notl
adc
fidivs
fildl
lock
xor
out
into
mov
cmpsb
xchg
aam
ret
jae
sti
fldl
lahf
push
out
dec
push
adcb
test
adc
fs
scas
push
mov
pop
xor
dec
mov
add
das
mov
ret
inc
dec
lock
adc
sbb
orb
nop
push
lods
fisubl
and
bound
sbb
aad
inc
mov
scas
shrb
shr
lret
mov
lret
testb
movsl
stos
mov
xchg
lcall
cwtl
xchg
iret
fcomps
lahf
pop
fs
mov
inc
js
adc
out
mov
push
pop
mov
dec
jne
std
jecxz
in
add
adc
mov
mov
flds
imul
cmc
cmpsb
or
adc
dec
ret
cmpl
mov
xor
push
and
ret
cmp
adc
jecxz
inc
gs
sbb
add
movsb
movsl
popa
sbb
aad
and
lcall
add
int3
dec
pop
movsl
sbb
sbb
aaa
inc
add
enter
add
pop
inc
and
or
in
adc
test
push
sti
mov
adc
dec
popf
sarl
add
out
popf
dec
cs
dec
xchg
sub
leave
test
in
in
push
mov
sub
push
cld
xor
xor
sub
cmp
popa
inc
and
xor
cld
xchg
repz
xchg
mov
out
pop
repnz
jns
xchg
repnz
fidivrl
xchg
out
xor
pop
aaa
aam
cmpsl
popf
lds
mov
enter
or
and
jmp
stos
or
pop
or
push
and
mov
pop
test
ja
add
fdivs
in
and
xchg
mov
lret
aam
sar
repz
mov
pop
call
push
fdivp
pop
rcrl
or
mov
ret
jg
scas
xor
fnstsw
cmc
dec
adc
ficompl
insl
push
mov
in
xor
adc
mov
xor
sub
xchg
imul
mov
cs
and
negb
adc
pop
adc
mov
sub
add
mov
adc
loope
jp
in
sub
bound
cli
imul
jmp
in
ficomps
stos
xchg
adc
xor
adc
sub
add
jmp
frstor
divb
push
and
stos
jl
sbbl
out
adc
repz
jns
cmpsb
xchg
fisttpll
adc
and
subw
xchg
aas
jns
mov
cmp
sub
js
pop
repnz
pop
repnz
push
repnz
mov
insl
xchg
fs
mov
jecxz
shlb
jmp
pop
in
pop
insb
sarb
imul
out
mov
aaa
adc
cmp
rolb
repz
mov
aas
pop
loop
loop
vmovaps
sahf
adc
mov
icebp
sbb
ds
insb
test
sub
decl
shll
rcr
xor
and
jle
mov
loop
pop
divb
imul
xor
mov
push
and
hlt
orl
aas
sbb
adc
adc
out
enter
mov
cmc
mov
stc
sti
and
rclb
test
pop
scas
mov
mov
pop
out
ja
into
xor
into
out
sbb
jnp
outsb
and
sub
sbb
inc
test
sbb
test
dec
leave
fadd
or
dec
add
inc
imul
push
push
jge
cmp
dec
xchg
int3
push
mov
cli
mov
lds
sbb
xorb
pushf
xor
lods
xchg
data16
out
mov
imul
in
sub
out
adc
and
lods
add
cltd
mov
mov
sub
sahf
inc
outsl
mov
sti
jno
ljmp
aas
mov
push
xchg
imul
lahf
call
pushl
jecxz
lret
imul
outsb
scas
out
pop
xchg
pusha
divb
lods
test
jmp
fdivrl
fildll
or
jbe
push
or
push
adc
enter
adc
inc
leave
jo
mov
lock
lds
sub
mov
fwait
cmpsl
inc
mov
cld
mov
xchg
ret
insb
jp
inc
dec
jbe
roll
mov
jo
out
cmpsb
xlat
sbb
xorl
inc
sub
cmc
mov
sbb
clc
cmp
push
faddl
daa
mov
pushf
cmpsl
push
and
das
imull
jns
aaa
cmpsl
ficoms
icebp
cld
loopne
pop
push
fs
cmc
or
mov
out
sbb
pop
mov
mov
cmp
int
jns
mov
add
std
lret
test
imul
dec
iret
sbb
mov
xchg
xor
clc
icebp
sub
sarl
push
loop
adc
sbbl
push
and
scas
inc
mov
mov
push
arpl
push
cmpsb
xor
xor
adc
lea
popa
add
fisubs
mov
sarl
insl
lret
cmp
pop
jbe
out
loopne
xor
sbbl
mov
negl
outsl
leave
testb
cmpb
ds
mov
daa
add
jmp
aam
cmp
mov
test
sti
aad
xor
add
and
xchg
inc
sbb
test
dec
les
jno
loope
sbb
add
inc
push
mov
sub
clc
xchg
test
mov
cmpsl
push
jg
mov
repnz
bound
orb
test
mov
sbb
pop
cltd
inc
je
adc
in
dec
dec
sbb
je
movsl
repz
xor
inc
lods
dec
push
fwait
cltd
mov
test
movsl
push
lods
cmp
pop
cmp
movsl
push
movsl
add
dec
mov
xor
and
push
dec
cld
xchg
xchg
enter
out
clc
jl
xchg
in
and
pop
clc
jl
jae
roll
xlat
lcall
cwtl
movsb
inc
dec
xchg
xor
shll
inc
mov
cmp
lock
pop
mov
pop
cwtl
enter
bound
pop
inc
dec
dec
lock
repnz
cltd
fidivl
cmp
mov
scas
mov
fidivs
mov
lcall
inc
dec
fisubrl
fs
or
dec
pop
cmp
iret
and
lods
mov
push
test
pop
xchg
jecxz
push
imul
out
xchg
fists
xchg
add
test
sbb
daa
or
adc
sbb
leave
in
scas
lock
jns
push
pop
add
sub
mov
mov
jnp
mov
andb
or
fsubp
rcll
lahf
bound
outsl
fsubr
rolb
or
or
mov
jae
rcr
push
stc
test
aas
jae
ja
push
loop
rolb
jo
in
popf
icebp
mov
cmc
divl
cwtl
push
pop
test
call
fwait
ja
fs
ret
mov
addb
mov
dec
mov
adc
jge
mov
js
xor
jb
sbbl
pop
rcrb
ljmp
sbb
or
insl
cltd
mov
in
insb
int
je
cmp
mov
or
rcr
inc
mov
enter
inc
test
mov
jne
jno
lret
mov
clc
cs
push
push
pop
cmp
movsl
cmp
inc
movsb
ret
and
and
adc
cltd
xchg
and
lea
fisubrs
adc
mov
rcl
stc
pop
mov
outsb
inc
inc
fistps
cmp
out
dec
rclb
mov
in
adc
cs
popf
arpl
loope
ret
loope
aaa
inc
cmc
fldl
je
outsl
sarl
insl
adc
int
das
mov
push
adc
lcall
insl
xchg
sub
mov
mov
xchg
sarb
pop
pop
pop
mov
sub
and
xchg
xchg
pop
cmp
push
cwtl
andb
mov
pop
push
xchg
adc
ljmp
lcall
psrlq
xor
pop
xorb
add
dec
das
mov
push
shlb
pop
in
push
test
daa
push
pop
cmp
inc
negb
pop
inc
xchg
flds
insb
inc
push
cmp
mov
lahf
mov
pop
and
ret
mov
pop
push
repz
sahf
imul
jl
dec
mov
and
mov
inc
push
popf
push
cmp
sbb
push
dec
movsl
clc
fcomps
ds
mov
or
and
or
or
sub
iret
push
ret
scas
inc
push
jmp
popa
cmpsb
pop
push
shll
inc
fwait
clc
jl
sub
adc
jp
inc
xchg
jbe
ljmp
pop
jae
pusha
movsb
rolb
imul
pop
daa
add
repnz
std
mov
cltd
inc
push
int3
aaa
outsl
jbe
fldcw
std
popa
inc
stos
pushf
and
sahf
push
das
adc
std
shrb
nop
out
pop
js
dec
push
subl
cli
cmp
fsts
mov
cmp
imull
inc
repz
in
lods
fidivrs
test
insb
dec
add
push
iret
sub
push
hlt
mov
dec
aas
mov
jle
sbb
cltd
ja
jne
out
adc
test
sub
dec
xor
adc
push
jg
punpckhwd
movsl
movsb
push
adc
ljmp
mov
xor
iret
cmp
sbb
mov
shl
jb
mov
mov
adc
stos
xchg
sbb
xchg
add
out
es
imul
imul
int3
dec
fldcw
mov
dec
es
sub
dec
loope
sbb
sub
xchg
les
int3
xor
loop
dec
clc
push
mov
outsb
jo
inc
mov
pop
lret
cmp
or
mov
inc
insw
mov
or
insb
lea
mov
das
cmp
out
scas
imul
push
push
mov
sub
cmp
testb
lret
mov
or
sbb
lods
sbb
ret
pop
and
and
mov
xor
push
out
repz
sbb
mov
ficoml
loope
in
test
mov
daa
add
jmp
mov
mov
inc
jns
xchg
pop
jl
int
sub
int
cmpsl
enter
mov
fcoms
sbbb
xchg
addr16
mov
aas
daa
cmp
divl
cmp
lahf
cmp
int
xor
repz
movsb
stos
int3
mov
scas
leave
gs
mov
push
pop
and
int3
es
je
ret
add
loop
out
loopne
jno
insb
mov
jns
lahf
cli
adc
jecxz
and
in
sahf
sbb
popf
lods
fisubs
fcom
iret
addb
or
dec
push
jae
adc
dec
vphadddq
cmp
test
and
xor
fucom
dec
outsb
mov
imul
call
out
add
lret
or
insl
pop
or
mov
ret
jg
cltd
or
mov
mov
dec
aad
sub
popf
dec
iret
push
and
inc
js
loop
fstpt
pop
add
cmc
dec
pop
xchg
leave
adc
sub
push
iret
and
push
ljmp
cld
jbe
xlat
push
xchg
ficoms
add
dec
lret
or
in
hlt
dec
push
jbe
xchg
cmpsb
repnz
divb
push
sarb
js
test
mov
scas
in
dec
lock
dec
es
jmp
cmp
adc
xorb
cmp
sbb
sub
xchg
mov
cli
jl
dec
mov
mov
mov
or
jno
repz
jo
push
inc
ljmp
inc
test
cmp
aam
push
fs
sbb
or
in
aaa
mov
mov
and
adc
aad
cltd
outsb
mov
imul
sarl
jg
mov
xchg
fildl
out
xor
loope
leave
jns
ljmp
cmp
sub
rorl
dec
xchg
out
bound
faddl
test
sbb
out
outsl
add
inc
jb
adc
std
sub
push
sti
sub
jle
aad
jmp
jp
mov
add
ret
imul
adc
sbb
and
cmp
xchg
add
xchg
jmp
jno
movsb
pop
ret
int3
subb
push
in
jp
jg
test
sub
or
loope
xor
cld
mov
add
dec
pop
pop
lahf
jge
incl
hlt
popf
push
sbb
and
sbbl
inc
lods
ret
daa
or
jno
mov
jns
fistl
lock
xchg
inc
sbb
int
mov
mov
push
xorb
add
enter
lods
sti
lea
or
cmpsb
pop
cmp
hlt
into
repnz
sub
repz
mov
aas
insl
adc
or
je
repz
les
loopne
lods
movsb
sahf
pop
inc
mov
push
mov
mov
repz
ljmp
lods
call
push
dec
icebp
mov
push
xor
je
sti
push
jne
pop
gs
inc
xchg
std
jne
bnd
or
data16
cmp
jb
mov
jns
add
cwtl
push
xor
jmp
push
nop
inc
jne
pop
adc
mov
dec
mov
loope
sbb
jns
call
jbe
inc
cmp
js
push
jnp
adc
inc
out
add
push
clc
shll
add
lods
mov
leave
mov
or
nop
cli
orb
das
ljmp
aad
jb
loopne
mov
xchg
mov
push
sub
mov
cmp
or
xchg
jle
test
xor
pop
add
push
inc
jo
inc
hlt
out
cmpsb
pushf
mov
xchg
cmp
cli
adc
jo
ret
mov
push
dec
ja
out
adc
push
testb
xor
mov
std
ss
ss
xlat
fidivs
aaa
test
cmp
xchg
inc
cmp
or
cmpsl
mov
pop
clc
imul
pop
loop
daa
pushl
cmp
xlat
cmp
xlat
dec
rclb
fadd
mul
bound
aad
call
pop
lods
mov
rcrb
xchg
test
dec
icebp
inc
lret
es
dec
scas
rcll
lcall
cwtl
lock
cmp
loopne
mov
jmp
sub
or
xor
sub
pop
push
xchg
fldcw
movsl
imul
aas
lods
sbb
xchg
mov
add
movsb
ret
stc
jl
dec
ja
adc
pop
repz
pop
dec
stos
pusha
cmp
insb
mov
add
lods
or
cwtl
shlb
ja
sbb
sub
out
lods
or
push
icebp
adcl
inc
dec
mov
ja
mov
mov
cmpsl
and
or
mov
out
inc
test
add
rcll
xchg
or
rsm
cmpsb
insl
lcall
mov
or
ss
sub
jae
div
jmp
cld
adc
in
insl
addr16
xchg
add
mov
sub
and
adc
xchg
add
testb
loopne
sub
lea
icebp
in
push
fs
add
mov
push
jge
pop
adc
lock
stos
mov
sub
ss
cmp
mov
fmuls
push
adcl
adc
jno
sbb
stos
or
dec
rorb
scas
cmp
jp
into
shrb
pop
dec
int
inc
sbb
inc
cltd
enter
in
dec
push
and
inc
rorb
fcmovnu
pop
jno
sub
add
mov
repz
lcall
lahf
setle
xchg
inc
xchg
dec
xor
cld
xchg
xor
popf
jbe
lcall
xor
xchg
jecxz
cmc
movsl
dec
dec
sar
add
mov
pop
add
fldt
sarl
hlt
inc
dec
cmp
push
push
gs
xchg
pop
cld
out
push
pushf
lock
xchg
inc
arpl
mov
cmc
mov
cmp
add
loop
cmp
adc
sub
shlb
lret
jle
mov
out
cmp
loope
pop
xchg
xchg
cmp
adc
dec
in
notl
scas
pop
or
inc
mov
lret
xchg
sbb
pop
pop
dec
inc
jno
pushf
adc
sbb
repnz
stos
sbb
enter
idivl
push
adc
or
ljmp
stos
mov
fwait
mov
jge
sub
lock
fidivrs
cmpsb
in
xchg
xorl
inc
push
or
xor
fcmovu
add
mov
enter
je
jns
mov
cmp
xor
imul
xor
add
dec
daa
rcr
scas
dec
popf
push
mov
jbe
and
sbbl
fwait
repnz
fsqrt
mov
mov
xor
xchg
into
cmpsl
mov
push
sub
cltd
mov
and
mov
iret
xchg
stos
push
insb
js
mov
test
js
imul
jnp
jl
sbb
push
movsl
xor
inc
mov
getsec
cmp
and
jge
dec
imul
lahf
scas
jnp
xor
or
jne
cmpsl
neg
push
adc
mov
sub
pop
cmc
cwtl
dec
or
cs
mov
xor
jae
lds
mov
mov
scas
add
lahf
sbb
inc
aaa
sub
dec
dec
mov
mov
test
nop
aaa
pop
xor
dec
xchg
jg
adc
fstl
jne
ret
data16
sub
and
inc
test
or
and
inc
jmp
ror
push
sub
or
nop
cmpsb
stos
andb
jp
pop
cmpb
jno
xchg
addr16
iret
mov
movb
jae
jg
lret
jp
push
xor
add
out
loop
hlt
jge
iret
xor
std
push
stos
aas
outsb
or
mov
test
push
mov
pushf
sbb
jbe
sub
pop
fdivs
sbb
mov
clc
sub
enter
add
cltd
sti
mov
xor
stc
test
scas
push
xchg
adc
call
cmc
nop
pop
imull
or
les
fs
pusha
clc
add
sub
jecxz
les
adc
pop
sbb
push
pop
imul
or
and
jns
lahf
add
lods
ljmp
mov
jbe
and
pop
inc
mov
fadds
mov
and
test
fnstcw
mov
outsb
mov
cmc
adc
adc
imul
and
sbb
pop
arpl
adc
adc
int
repnz
rclb
push
loope
hlt
xor
jle
ja
cld
call
adc
inc
xchg
jle
sbb
subb
repz
xor
in
xor
cmpl
pushf
fsubrs
outsb
sbb
add
xor
les
fdivl
fistpll
out
xor
xor
test
lahf
testb
fucomi
jnp
or
mov
ficoms
dec
imul
pop
dec
cld
mov
sbb
loop
out
addr16
xor
mov
outsb
cwtl
mov
jp
xchg
bound
jge
sbb
test
mov
outsl
xtest
push
ret
iret
and
sti
jle
mov
insb
add
sbb
push
or
sub
in
or
dec
adc
fadds
mov
mov
dec
imul
add
mov
jae
sub
push
fwait
jne
sbb
sub
pop
clc
pavgw
lret
or
test
fldt
sti
shlb
push
cmpsl
movsb
pop
xor
cmc
cld
ja
inc
dec
dec
lods
inc
leave
mov
nop
aas
mov
scas
test
ljmp
aaa
lahf
fstpl
mov
mov
pop
jmp
cli
inc
fdivl
aas
xor
out
je
inc
add
jle
mov
inc
push
ret
mov
jge
scas
ror
daa
sbb
icebp
shl
popa
movsl
and
xchg
push
in
xchg
cltd
mov
test
je
pusha
dec
loope
adc
mov
fildl
testb
mov
dec
repnz
pop
add
sarb
sub
inc
sbb
lock
jne
inc
cmc
cmc
clc
push
out
push
mov
lock
call
adc
xchg
sbb
or
mov
dec
loop
dec
dec
cwtl
inc
and
sub
cld
icebp
in
sarl
cmp
ret
out
mov
fmulp
xor
stc
cmp
ljmp
dec
xor
inc
pop
xchg
xchg
leave
mov
popa
mov
leave
adcl
pop
fsub
jno
loopne
xchg
negb
sar
shl
xchg
mov
xchg
sbb
fsubr
xchg
push
stos
jbe
les
cltd
jmp
inc
cmc
mov
cmpsb
sub
mov
loope
or
inc
pop
or
loope
scas
mov
xor
mov
popa
subps
inc
sub
cmpsl
lock
mov
xchg
push
jge
arpl
dec
adc
push
push
mov
fwait
andb
xchg
cli
push
repnz
pushf
fnsave
mov
sti
push
push
xchg
push
jns
ret
mov
sbb
sbb
loopne
ret
adc
and
cmp
icebp
jg
and
pop
pusha
mov
leave
push
hlt
jge
icebp
jbe
mov
push
cmp
outsl
ja
pop
nop
lods
adc
fs
scas
nop
xor
scas
test
cwtl
sub
pop
dec
dec
pop
out
jge
inc
cmp
les
pop
or
pop
test
outsl
mov
sbb
out
scas
jg
xor
push
dec
sub
jae
xor
das
aam
lahf
inc
sbb
movsl
mov
xchg
test
mov
in
sub
pop
dec
xor
pushf
jb
xchg
xlat
outsl
or
lcall
mov
push
xchg
mov
paddsb
outsl
fs
pop
jns
insl
aas
xchg
jo
aaa
sbb
jg
pop
xor
je
icebp
push
push
aam
mov
cmp
sub
stos
adc
stc
jp
xchg
dec
lods
mov
faddl
int3
das
test
jl
mov
ds
mov
jge
test
pop
jnp
jo
lds
jb
mov
mov
inc
xor
xchg
sub
fmuls
mov
jno
xor
push
in
jmp
push
and
fldl
mov
pop
dec
adc
sub
outsl
shll
and
inc
add
jae
cmc
sub
sub
test
mov
popa
xor
lods
sahf
jo
aaa
int
fisubrs
adc
xchg
lds
xchg
jnp
scas
lods
mov
add
sub
adc
add
and
lds
and
sti
mov
sbb
fdivp
imul
xchg
fmulp
pop
mov
sti
rorb
int3
push
inc
arpl
mov
adc
xorb
lret
iret
mov
out
push
mov
adc
sub
mov
cs
movsl
or
sbb
rcl
add
scas
adc
adc
inc
push
dec
adcb
pop
pusha
dec
js
mov
sbb
jle
rorl
add
mov
shrl
pop
push
push
pusha
mov
lahf
test
xor
sarl
jnp
inc
add
aad
mov
push
in
lahf
mov
and
in
sbb
out
cs
andb
sbb
mov
xchg
icebp
cmpsb
fs
dec
arpl
push
int
pop
and
xchg
movsl
mov
cmp
sbb
pop
imul
ficomps
or
mov
xlat
cmp
scas
dec
lcall
les
mov
xor
adc
mov
add
out
mov
cmp
push
mov
adc
inc
mov
cmc
jmp
adc
stos
mov
sbb
test
mov
sub
in
jl
jne
sub
cmp
mov
or
mov
mov
mov
xchg
idiv
cmp
mov
pop
fwait
testl
cmp
inc
iret
xchg
insl
sahf
or
push
sub
stos
jecxz
and
jno
xchg
shll
jbe
sbb
iret
gs
add
push
mov
jg
cmpsl
mov
repz
cmp
inc
dec
pop
mov
test
push
xchg
jae
ja
mov
adc
test
stos
mov
imull
pop
imull
add
adc
jns
ret
jo
test
hlt
jge
sub
mov
pop
and
xchg
or
sbb
outsl
lahf
xlat
cltd
movsl
sbb
cmp
outsl
lods
mov
insb
movsl
stos
mov
xlat
pop
clc
insb
out
push
xchg
hlt
repnz
mov
jne
scas
adc
inc
in
pop
shll
and
xchg
cld
mov
add
pop
pop
adc
out
comiss
xchg
sbb
push
jne
add
lcall
sti
add
sub
mov
pop
cwtl
xor
add
push
movb
sti
test
mov
scas
mov
je
stos
je
mov
fucom
in
sub
loopne
push
clc
lods
cmc
jmp
orl
test
pop
scas
xchg
jmp
dec
sub
push
add
loope
pop
repz
lahf
cwtl
sub
adc
div
adcb
aam
jne
andl
pusha
loope
jns
aad
dec
mov
mov
add
inc
repnz
mov
cltd
jno
xchg
pop
push
test
scas
sub
shrl
outsl
sbb
and
xchg
inc
rcrb
scas
jge
adc
je
jmp
scas
dec
popa
insb
aam
aad
out
sub
out
jg
pusha
cmp
in
out
jl
dec
movsl
pop
sub
pop
jge
mov
subl
cmp
out
push
or
sub
jne
push
mov
adc
xor
aad
cld
inc
xor
pusha
inc
fnstenv
mov
cmpb
xlat
cmpsb
ffreep
mov
cmpsl
xlat
popf
sub
mov
jl
cmc
xchg
hlt
int3
jecxz
out
pop
mov
stos
movsb
inc
mov
ret
add
push
insb
popf
clc
and
xorl
adc
scas
sub
sahf
repz
scas
add
in
outsb
scas
and
test
or
push
push
mov
test
dec
fwait
mov
fadds
or
xlat
popf
cmp
adc
subl
or
push
adc
bound
out
push
jecxz
pop
sbb
cmp
mov
lock
sub
dec
mov
sti
dec
nop
xor
xchg
jmp
rorb
inc
cmc
fistl
mov
test
dec
mov
stos
adc
test
xchg
stc
lock
outsb
mov
aaa
inc
dec
adc
lret
test
lea
cltd
xchg
xor
mov
int
fwait
dec
lret
mov
int
out
sub
push
addr16
negb
pop
and
ret
scas
push
jbe
pop
sub
jecxz
sbb
xchg
xchg
out
adc
fs
test
mov
jb
cwtl
jb
cmc
cmp
lock
lds
test
or
push
rorl
pop
mov
sbb
sub
lahf
jo
cmpsl
scas
incb
mov
sahf
in
push
cmp
cmp
inc
ficompl
dec
movsb
lods
sub
arpl
fstp
arpl
pop
and
push
xor
add
fstpl
xlat
leave
add
ljmp
adc
cmp
lret
fwait
cli
rclb
testl
ret
sub
add
mov
out
fnsave
pop
je
std
add
fidivrs
aas
cmp
sub
jo
sub
imul
adc
xchg
repnz
adc
inc
mov
add
sub
push
inc
call
or
jmp
pop
loopne
sub
inc
test
frstor
lret
xor
lahf
jnp
mov
pusha
jno
mov
ds
sbb
xchg
fiadds
xchg
sbb
pop
cmp
pop
or
ljmp
test
mov
rclb
jno
call
into
imul
ljmp
div
mov
iret
leave
paddsw
popa
mov
mov
fistl
and
sub
add
xchg
adc
cmp
push
outsl
cmp
fdivrl
sub
or
leave
sbb
insl
repnz
enter
inc
and
loope
jmp
adc
clc
push
or
and
dec
jne
mov
add
int3
popf
lods
leave
addr16
mov
cmp
pop
add
and
cmp
cltd
loop
or
popf
ret
inc
xchg
cmpsl
xor
dec
xlat
std
mov
cltd
aam
mov
jbe
push
mov
sub
in
ss
mov
scas
mov
arpl
cmp
jb
push
and
sub
cmp
jb
inc
sub
cmp
out
aaa
dec
test
push
jae
push
xor
out
aam
ljmp
insb
fsubrs
mov
or
stos
arpl
outsb
ja
pop
push
rol
cwtl
mov
out
int
or
mull
push
mov
mov
lds
adc
dec
testl
lock
xchg
jg
xchg
add
or
and
xor
pop
les
push
push
xor
scas
mov
mov
lret
fists
sbb
inc
or
das
test
icebp
cmc
mov
push
xor
mov
push
xchg
mov
std
testb
pop
roll
daa
inc
icebp
mov
inc
lret
inc
nop
jmp
mov
lock
ja
sbb
mov
insb
or
sub
jl
test
inc
aam
jp
in
fsubrl
lret
bound
cmp
push
sbb
add
xchg
inc
lock
adc
adc
xchg
sbb
cmpsl
mov
mov
js
xchg
or
push
cmp
jmp
push
popa
lock
call
loop
and
std
shll
dec
rorb
test
mov
scas
in
mov
lcall
test
mov
loop
popf
int3
pop
sub
push
cs
push
push
je
rclb
mov
dec
inc
call
pop
fwait
xor
imul
inc
push
mov
xor
pop
push
popf
dec
push
cmp
movsb
xchg
sarl
pop
outsl
xor
cli
mov
push
sub
and
jnp
or
cmpb
and
inc
cld
dec
xchg
adc
and
inc
out
fs
adc
movl
movsl
aas
fistpl
and
lfs
daa
fwait
xchg
scas
scas
xor
movsb
test
dec
lret
mov
dec
test
mov
xchg
out
xchg
negl
sub
les
cwtl
dec
ret
mov
xlat
xor
shll
pop
lret
and
bound
mov
cmp
addr16
psrlw
push
mov
mov
mov
dec
and
inc
adc
jge
add
popa
mov
outsb
sub
push
adc
jl
cmpb
test
mov
or
repnz
and
jb
jo
je
xchg
mov
adc
jo
fidivrs
test
push
imul
mov
pop
roll
jg
mov
dec
xor
adc
les
sub
outsl
mov
mov
sbb
test
sbb
cltd
jmp
sbb
adc
jmp
dec
jno
js
or
sub
sahf
jno
pushf
xchg
inc
dec
inc
jne
out
pop
xorl
aas
xchg
add
addl
lods
movsb
fwait
jle,pn
pop
lahf
add
or
sbb
mov
mov
negb
push
and
mov
cmp
incb
push
push
mov
add
jbe
mov
mov
inc
aaa
mov
aad
xchg
lds
fcomps
fadds
stos
xchg
push
ret
dec
xchg
daa
lods
inc
in
push
jl
jg
jno
ss
push
test
xor
fsts
clc
adcb
lods
sbb
xor
sub
fisttps
shr
push
popa
lret
scas
jnp
pop
cmpsb
lds
sub
pop
inc
arpl
jbe
fimull
xchg
xchg
pop
lahf
jae
pop
and
into
popf
inc
shl
arpl
int
rcrl
in
inc
jecxz
mov
fimull
lods
lcall
mov
std
cltd
jl
mov
scas
mul
dec
mov
dec
call
push
inc
push
mov
sub
jne
icebp
inc
inc
scas
fscale
out
addb
pop
ror
inc
popa
pushf
pop
clc
xchg
jno
or
lcall
fimull
mov
stos
xchg
pop
xchg
stos
mov
push
psubusw
clc
mov
aad
push
cmp
enter
inc
xchg
call
mov
je
pop
jecxz
jle
stos
sub
jge
andb
fs
sti
mov
cmpsb
pusha
mov
pop
mov
lods
and
test
xchg
test
mov
je
push
scas
inc
les
inc
mov
mov
inc
bound
push
adc
jb
mov
jno
out
cmp
ljmp
daa
out
fs
aas
imul
or
ret
push
or
test
cli
mov
inc
pop
xchg
sahf
incb
rcrl
fcmovnb
fisubrl
loope
mov
jg
in
jae
jns
mov
mov
add
xchg
jecxz
test
stc
mov
mov
cmc
mov
imul
cmpsb
mov
lret
adc
and
cltd
fwait
cli
or
jl
mov
ret
mov
jmp
jns
int3
mov
outsb
jle
sahf
cmp
inc
out
cs
xor
inc
dec
dec
shlb
in
push
arpl
data16
ss
pop
sarb
fmuls
scas
ljmp
push
mov
dec
fcmove
jo
push
aad
leave
xor
inc
test
and
pop
pop
cmp
xchg
push
fidivrl
sub
and
lcall
jmp
push
pop
xor
xchg
jne
mov
incl
adc
scas
mov
lods
sub
or
lods
es
aas
lcall
adc
ret
add
push
iret
dec
push
push
loopne
shlb
hlt
popf
cwtl
push
cmpsb
stos
jp
aas
in
ret
aas
push
add
dec
jmp
fdivrp
ss
xor
in
and
and
adc
mov
cmp
mov
mov
movsl
sbb
dec
adc
lock
ja
loopne
mov
cld
pop
dec
mov
bound
jecxz
mov
mull
inc
ljmp
gs
ficompl
dec
or
stc
mov
adc
push
mov
dec
push
jbe
sbb
add
push
dec
mov
lock
stc
jecxz
pop
push
mov
xlat
jle
sbb
in
mov
or
jno
adc
lds
adc
sub
xchg
and
push
insb
lret
mov
sbb
mov
pop
xrelease
repz
repnz
popa
loopne
xchg
push
addr16
repnz
sbb
mov
fldl
aas
in
test
xchg
mov
in
sub
pop
fwait
test
adcb
rcll
mov
lods
mov
inc
pop
rcll
mov
call
add
xchg
push
sub
adc
push
cmc
mov
cmp
xor
mov
sti
sbb
cmp
int3
and
fisttpll
xchg
outsl
inc
sbb
test
imul
stos
jmp
setg
movsb
bound
arpl
sub
ret
cltd
lcall
dec
insl
scas
shll
mov
int3
sub
dec
popf
adc
or
sbb
fsubs
mov
orb
rcrl
movsl
clc
jp
dec
mov
ss
insl
cld
mov
je
pop
loopne
sub
in
and
ret
mov
cmp
fs
dec
mov
sbb
faddl
cmp
adc
ret
jnp
xchg
xor
push
test
sub
jmp
xchg
sbb
loope
aad
es
cmp
dec
arpl
or
push
jecxz
inc
movl
mov
mov
mov
and
xchg
cs
hlt
jbe
ret
hlt
out
arpl
mov
dec
in
xor
fstpt
push
bound
pop
xor
cmp
in
jg
inc
cmp
cld
ds
pusha
adc
test
movsl
or
add
cmp
push
loope
and
mov
in
addl
jge
jo
int
sub
test
addr16
int
rcll
inc
popa
jns
mov
cmp
in
inc
test
xchg
add
lahf
add
dec
xchg
cmp
call
push
rcrb
lds
outsl
push
mov
lcall
cmp
fs
push
imul
pop
mov
cld
das
js
xchg
adc
ljmp
cltd
loopne
jle
lods
icebp
sub
imul
cmp
test
jmp
ret
or
jb
fiaddl
xor
or
andb
divl
cmp
ds
fnstenv
adc
pop
cs
jne
push
xchg
push
add
daa
into
dec
push
and
dec
mov
int
repnz
mov
enter
cs
out
inc
pop
add
pop
lock
js
inc
mov
dec
daa
push
cmp
dec
cmp
in
push
jae
xchg
cltd
xchg
pop
jg
fdivr
rcl
jae
jae
mov
in
push
popf
sbb
cld
es
jbe
int3
fdivs
in
sub
push
into
fmulp
lret
dec
and
bound
pusha
mov
mov
mov
xor
xor
sahf
push
jmp
add
neg
ds
enter
cli
sub
jnp
xor
lds
lds
xlat
sarl
push
push
fcmovne
pop
xchg
push
push
mov
cmp
push
pop
test
cmp
jnp
js
test
jle
xlat
push
mov
push
rorl
push
cmpsb
aam
stos
int3
ljmp
jmp
fisttpl
ret
pop
fnstcw
pop
es
ljmp
test
in
sbb
mov
insb
lock
push
mov
shll
shlb
dec
xchg
xlat
push
das
sbb
mov
stc
pop
push
adc
jo
xlat
loope
mov
mov
cmp
jae
mov
cmp
pop
loopne
cmp
out
lock
pop
dec
push
in
xor
xchg
lret
push
sar
fs
scas
sub
sub
ds
fistl
lea
je
cwtl
fwait
in
lret
jle
jmp
jg
dec
fldl
jnp
inc
adcb
aad
add
sbb
pop
add
cmp
fcmovu
push
and
negb
repz
rolb
sbb
imul
mov
popf
dec
dec
jae
gs
sbb
scas
xor
cmp
pop
adc
lods
mov
lret
rclb
mov
stc
insb
mulb
sub
or
or
and
add
pusha
add
mov
std
jno
dec
add
mov
cmp
imul
xor
std
mulb
mov
pusha
push
pop
and
or
push
popf
fwait
sbb
arpl
insl
sbb
daa
sbb
ret
jne
adcl
sahf
fnstcw
adc
xchg
test
lds
adc
mov
les
cmpl
push
pop
add
lds
xchg
xor
push
pop
mov
xor
fidivrs
push
mov
xor
mov
dec
and
cmp
dec
or
lods
sahf
dec
mov
pop
fsubl
sub
ds
inc
dec
jge
push
stc
and
mov
add
aas
jmp
imul
rcll
in
mov
outsl
fwait
lahf
pop
enter
jne
mov
ret
std
mov
sbb
mov
jecxz
outsb
mov
push
out
fucomip
or
xor
lds
fsubrs
mov
add
std
dec
and
nop
inc
std
cmc
insb
add
cmpl
icebp
lcall
mov
lret
inc
test
jae
sbb
sub
add
insl
jl
jo
cmp
mov
xchg
idivl
insl
cmc
mov
std
jbe
in
sbb
xchg
push
ret
lock
fwait
push
std
mov
in
bound
cmp
jae
ja
dec
notb
sub
add
inc
loop
test
pop
sbb
mov
mov
popa
das
dec
mov
bound
mov
push
in
dec
mov
sub
fistpl
fistpl
cld
inc
in
mov
dec
xchg
icebp
xchg
cmp
inc
dec
pop
xor
mov
dec
les
adc
mov
daa
mov
sti
inc
jg
mov
in
rcrl
push
ljmp
jp
mov
fdivrl
mov
mov
jne
stos
mov
test
push
or
fisttps
andb
insl
or
std
out
dec
and
outsb
dec
or
mov
xchg
lods
int
push
ja
dec
test
adc
call
lahf
or
sub
xchg
sub
pop
insb
cwtl
cmpsl
add
cmp
ja
test
int
xor
pop
or
int3
aaa
jnp
cs
jge
inc
and
ret
bound
daa
stc
je
movsb
add
xor
and
out
fcompl
dec
sbbb
addr16
ret
adc
jae
lock
inc
mov
sbb
enter
fidivl
lock
sbb
out
addl
mov
inc
mov
loopne
shll
sub
fs
sub
sar
shll
xor
cmp
call
pop
sub
push
xlat
outsb
mov
out
cmp
mov
xchg
jb
lods
inc
movaps
xchg
jmp
rorb
pop
js
test
xor
mov
lods
adc
imul
in
loope
in
and
sub
stos
dec
mov
ljmp
stos
pop
and
cmc
push
add
lret
into
divb
ret
adc
pushf
movl
test
jae
sbb
cli
arpl
add
inc
in
inc
push
call
sbb
in
repnz
mov
cmp
divb
imulb
es
mov
or
scas
call
sbb
mov
insl
mov
fldt
mov
mov
mov
pop
dec
shlb
fdivs
mov
cs
xor
push
test
lods
mov
pop
xchg
and
popf
fisubrs
stos
int3
jge
adc
mov
inc
cmp
add
inc
scas
cwtl
add
int3
adc
mov
push
push
jecxz
repnz
jge
push
mov
dec
insb
sarb
fprem1
adc
mov
testb
sbb
stos
mov
fs
push
cwtl
push
js
jge
out
push
test
mov
xchg
je
test
xchg
xor
fiadds
stc
adc
lods
gs
mov
sub
mov
mov
hlt
pop
jl
cmp
les
js
pop
stos
fbld
adc
cmc
pop
lret
sub
cmpsb
arpl
stos
jno
mov
xor
sub
sub
xchg
mov
and
clc
andl
mov
fucomi
xor
inc
push
pop
mov
std
cs
loop
repz
pop
sub
int
jl
mov
jp
inc
cmp
shl
mov
cmpsl
push
int
das
sar
nop
int
xchg
in
jmp
mov
inc
adc
sbb
rol
fcmovnbe
outsl
leave
fidivs
shll
mov
shl
push
sbb
int3
aad
in
movsl
mov
cld
pop
mov
adc
les
sbb
pop
mov
dec
in
out
jecxz
xchg
push
push
dec
sub
ljmp
mov
mov
and
mov
stos
daa
ja
push
or
xchg
add
xchg
fcomp
xor
xor
add
aas
lods
add
fsubrl
fimuls
mov
leave
push
push
ret
cld
sbb
mov
aaa
dec
cmp
sbb
dec
dec
cmp
inc
aas
add
inc
and
xor
idiv
jmp
cs
adc
imul
xchg
mov
pop
mov
test
pop
push
jnp
push
out
xchg
arpl
xor
test
mov
cmp
jp
adc
dec
or
dec
negb
ljmp
mov
ljmp
mov
dec
adc
xchg
std
xor
cmp
out
getsec
or
cmp
iret
jb
ja
jae
ja
outsb
int3
and
push
pop
mov
shrl
movsl
or
ljmp
pop
push
or
std
dec
pop
lods
aam
push
fistpll
ljmp
or
push
add
insb
das
push
mov
inc
pop
xchg
pop
lret
xor
jnp
cli
sbb
inc
mov
push
and
adc
jns
vorps
data16
into
xchg
scas
cmp
sbb
adc
fadds
adc
ja
arpl
enter
jns
xchg
jbe
push
xor
xchg
mov
sub
jmp
daa
pop
call
test
sarb
mov
inc
je
cmp
mov
and
mov
mov
pop
or
jp
xor
roll
cmp
push
pusha
ss
sbb
mov
mov
pop
testl
push
cmpsb
ljmp
mov
out
mov
in
loop
sub
cwtl
lret
inc
mov
test
mov
mov
fxch
hlt
pop
outsl
mov
nop
push
jge
pop
call
inc
mov
leave
jno
inc
sahf
shll
repnz
pop
fimull
outsl
mov
bound
mov
out
mov
bound
adc
mov
cli
mov
enter
cli
or
cmc
jp
xlat
std
ljmp
jle
push
mov
in
movsb
pop
pop
icebp
mov
fsubr
xchg
mov
push
sbb
xor
adc
jo
sub
icebp
inc
fadds
xchg
push
sbb
stc
ret
mov
lea
sub
int
inc
ret
lods
adc
loopne
inc
scas
cmp
add
mov
stc
dec
mov
adc
push
jp
sub
incb
ljmp
aam
pop
push
xchg
cmp
or
bound
fidivrl
js
add
sbb
scas
sarl
mov
add
std
adc
push
andl
jns
pushf
or
sbb
cmp
sub
aam
xchg
cmp
pop
in
mov
imulb
sub
push
sbb
sbb
inc
mov
xchg
cs
lret
leave
xchg
mov
inc
daa
xor
pop
mov
cli
xchg
icebp
mov
outsl
mov
mov
inc
les
out
or
or
lea
leave
pop
dec
test
dec
dec
or
push
movsb
add
jp
cmp
clc
and
outsb
into
aas
xor
push
ljmp
loopne
and
mov
adc
push
aas
mov
xchg
fimull
dec
fs
clc
dec
inc
aad
ret
xor
loop
and
jecxz
pop
push
jle
xchg
js
movsl
cmp
push
cmpsl
fwait
test
xchg
aaa
or
sub
testb
stos
outsl
dec
or
leave
loope
addb
mov
jno
jle
pop
jle
inc
shlb
cltd
mov
insl
dec
les
cld
js
jge
pcmpgtd
dec
orb
test
or
scas
pushf
push
jae
rcrl
movsl
xor
mov
jnp
or
incb
cmp
mov
fistpll
sub
aas
add
jge
mov
gs
int3
outsl
bound
shlb
xlat
push
sbb
add
out
test
cmpsl
mov
add
mov
push
test
pop
rcrl
icebp
push
lret
out
stos
xchg
cmp
call
out
jne
adc
shlb
call
or
and
mov
bound
loope
pop
mov
in
mov
lock
inc
sbb
jns
lds
imul
loopne
mov
xor
jp
cmp
mov
imul
ljmp
sbbb
inc
and
inc
pop
sbb
scas
lcall
lret
cld
inc
aam
pop
or
mov
jle
test
outsb
iret
lds
inc
jmp
add
lds
aaa
jp
aam
pop
shlb
adc
ffreep
mov
jle
xchg
xor
nop
ror
das
mov
mov
shl
leave
sbb
xor
dec
pushf
neg
cli
leave
mov
mov
fs
mov
pop
inc
mov
pop
jmp
jp
mov
sub
out
jmp
mov
rep
xchg
fldt
mov
lods
mov
and
test
jnp
mov
incl
mov
gs
and
andl
imul
lods
xor
lods
ds
cmp
fwait
xchg
cltd
fwait
loopne
cli
enter
sub
ss
mov
adc
mov
pop
stos
dec
add
negb
jmp
cmc
je
inc
out
in
xor
insb
aam
xchg
popf
xchg
test
cli
xlat
jl
lret
or
jge
adc
dec
test
mov
ss
push
or
pop
call
dec
mov
movsl
clc
lret
sbb
or
cmp
mov
nop
cli
aam
push
stos
aaa
sub
push
jg
mov
pop
je
xchg
xchg
push
xchg
push
test
fists
arpl
jne
pop
xlat
add
dec
mov
sbb
repz
mov
and
into
add
or
sub
or
push
push
aaa
mov
das
dec
mov
lods
dec
stc
dec
or
pushf
mov
dec
mov
mov
xorl
cli
shrb
sbb
cmp
or
mov
insl
xchg
jle
pusha
inc
jg
or
xchg
roll
mov
loopne
xchg
mov
inc
mov
cwtl
pop
aas
fmul
sub
mov
imul
inc
scas
jmp
stc
xor
mov
xchg
rcrb
inc
jbe
adc
mov
mov
sub
xchg
adc
jl
dec
out
push
cmp
fadds
and
outsl
clc
cmpsb
mov
jne
movsl
add
mov
jae
fisttpll
mov
ds
sbb
cmp
aam
adcl
outsb
fcomps
xchg
ret
push
or
stos
shll
mov
aam
dec
push
call
call
add
arpl
test
lret
sbb
push
cmpsl
inc
mov
int
cmpsb
int
and
nop
ja
cmp
ja
sysret
adcb
enter
or
scas
movsl
jae
mov
and
ja
mov
cmp
sbb
inc
push
jmp
lock
into
nop
ficompl
lret
idivl
js
mov
rorl
aas
pop
cmpsb
sub
mov
imul
gs
inc
lods
mov
mov
filds
xor
stos
dec
scas
popf
in
in
push
ret
mov
xchg
pop
cmovge
jbe
mov
out
sar
pop
arpl
insl
push
data16
data16
jp
sub
pushf
lahf
lcall
cmp
inc
push
pop
nop
shl
jae
clc
push
sub
xchg
fbstp
mov
incb
insb
lcall
enter
movsl
jmp
push
das
aaa
mov
pop
popa
arpl
and
jmp
lret
repnz
lods
leave
in
leave
cwtl
mov
and
das
sub
adc
aaa
cli
aam
roll
outsl
pop
fucom
inc
lahf
pusha
xchg
fucomp
sub
or
pop
in
test
lcall
dec
fisubs
dec
lods
sub
jo
stos
ds
cld
arpl
imul
lcall
push
fistl
hlt
cmc
fnstcw
js
xchg
jo
icebp
aad
xlat
xchg
adc
and
mov
cld
or
loop
push
or
dec
mov
fldcw
testl
cltd
ss
mov
incb
mov
xor
adc
iret
cltd
jbe
shlb
xchg
mov
pop
clc
pop
in
das
lea
rcrb
add
loope
mov
outsb
jle
cli
inc
xchg
das
dec
fnsave
mov
push
daa
cmp
cltd
ja
pop
scas
lods
xor
out
xrelease
push
arpl
mov
shl
push
fidivrs
cmp
int3
mov
mov
cmc
mov
dec
xchg
mov
mov
inc
mov
pop
sbb
and
inc
pop
movsb
xor
inc
roll
pop
ds
fstl
adc
push
outsb
pop
jp
xchg
das
ss
mov
in
subb
ret
rolb
fnsave
inc
push
pusha
cmp
mov
lods
in
mov
shlb
das
sbb
mov
sbb
dec
jmp
cmp
popa
jmp
fidivs
dec
shr
and
sti
fadd
dec
fldcw
popa
cmp
incl
cmpsb
dec
clc
mov
xor
and
pop
push
sub
fs
out
std
mov
mov
arpl
shll
mov
and
stc
or
sti
ffree
add
xchg
sub
loop
cmp
daa
sbb
mov
xchg
push
test
xchg
sbb
and
xchg
aaa
out
nop
sbb
inc
jle
inc
sbb
mov
cmp
lret
adc
pop
xor
out
inc
adc
lods
sbb
insl
mov
adc
xchg
sbb
mull
or
lds
xchg
sbb
mov
add
and
pop
xlat
int
testl
dec
jmp
fdivrl
push
fs
negb
scas
rol
jno
mov
cld
pop
xlat
xlat
xchg
dec
mov
inc
mov
lds
clc
and
movsb
cs
ja
leave
dec
mov
iretw
icebp
js
and
or
jle
fsubr
and
jge
mov
out
fdivl
push
xor
pop
fadds
cld
adc
mov
xlat
mov
push
fsubl
xchg
pushf
pop
int
add
sub
jo
dec
and
sub
mov
xchg
xor
mov
or
insb
pop
lret
and
out
pusha
arpl
inc
push
add
sub
mov
jne
lret
clc
mov
sbb
sti
inc
imul
push
pop
int3
jbe
sbb
insb
mov
xor
pop
adc
jbe
hlt
mov
cltd
push
xchg
aam
mov
push
jne
in
sub
imul
ret
pop
pop
lcall
mov
cmp
into
mov
cltd
and
test
mov
sub
pop
adc
mov
roll
movsl
inc
push
add
scas
mov
mov
cwtl
mul
pop
es
jmp
mov
les
mov
rcl
movsb
mov
cmc
or
sbb
pop
push
dec
inc
pop
shll
push
mov
or
mov
popa
lods
jg,pn
jecxz
daa
outsl
inc
inc
lahf
add
or
push
ljmp
sub
popf
add
mov
or
or
add
scas
mov
lds
outsl
sub
lret
inc
out
push
ss
sbb
test
lock
es
insb
repz
sbb
mov
cmpsl
pop
imul
push
mov
shll
addr16
mov
clc
es
and
je
fsubp
dec
cli
pop
lahf
fdivs
inc
cmp
sbb
mov
or
pushw
sbbb
cmp
sub
pop
jp
test
cwtl
and
leave
repnz
or
mov
shl
pop
ret
and
stos
out
sub
and
xchg
pop
push
xchg
mov
cmpsl
xchg
and
cld
adcb
push
insb
insl
pop
data16
jnp
xchg
cmp
popl
inc
dec
mov
das
stos
or
faddl
mov
jne
and
cli
xchg
mov
pop
sub
inc
push
push
sub
mov
or
cmpsb
iret
out
pop
mov
mov
fistpll
clc
xchg
jno
lea
call
rcrb
lcall
cmc
sbb
aas
jo
jns
mov
mov
popf
outsb
maskmovq
testl
shrb
mov
jmp
iret
xor
and
mov
push
xor
test
test
pop
inc
cmp
out
dec
xor
in
adc
or
sub
mov
sub
pop
arpl
adc
fsubrp
push
cmp
sbbl
mov
nop
in
pushw
push
pop
dec
insl
test
xor
or
aam
aad
and
adc
mov
loopne
aaa
addb
xor
sub
movsl
push
jae
pusha
popf
ret
sub
mov
dec
mov
addl
add
sbb
in
lret
aam
shr
add
roll
sarl
ss
cmp
jno
rolb
and
jbe
test
inc
mov
rcrl
lods
test
sbb
adc
jbe
mov
mov
icebp
cs
adc
jmp
lock
int3
or
mov
loop
sub
pop
cmp
rclb
subl
and
jmp
stos
pusha
add
imul
fisttps
add
dec
pop
mov
inc
pop
fiadds
mov
es
add
adc
ficoms
rol
repz
mov
popf
fidivl
std
xchg
or
popa
lret
jo
imul
sub
cmp
in
sbb
loope
stos
push
lock
cmpsl
iret
fdivs
das
jmp
call
out
sub
push
int
xchg
into
adc
rorl
jg
lahf
pop
xchg
int3
mov
stos
sahf
fwait
mov
iret
dec
add
popf
repz
cs
bound
cmpsl
mov
push
lret
dec
fimuls
cs
clc
jbe
adc
test
daa
enter
sti
jo
jg
push
out
stc
rolb
stos
in
into
adc
push
mov
loop
insb
pop
gs
xchg
test
aaa
mov
cmp
sbb
test
sahf
nopl
pusha
dec
or
mov
jmp
sti
pop
ja
mov
out
fsubrs
xchg
xor
subl
cmp
push
fdivs
mov
cli
aas
mov
sbb
xchg
dec
fiadds
pusha
mov
fcompl
add
ret
jno
mov
jb
jns
add
jno
dec
mov
fs
adcl
imul
mov
sbb
sub
mov
pop
inc
sub
out
adc
jmp
or
lods
sbb
in
xchg
mov
repnz
mov
nop
sbb
fisubl
mov
cld
les
mov
bound
mov
and
scas
adc
sahf
out
dec
ret
sti
xor
cltd
ja
or
mov
jge
hlt
push
push
outsb
mov
push
out
out
cltd
jl
sbb
pop
or
mov
stos
or
test
shll
dec
mov
fstl
cltd
xor
movb
mov
sbb
movsb
push
bound
movsl
dec
loopne
xchg
mov
mov
cmpsb
int
les
mov
mov
idivl
outsl
arpl
mov
rclb
mov
clc
nop
mov
adc
xchg
mov
cmpsb
pop
dec
mov
mov
sub
mov
adc
and
pop
xchg
xchg
mov
push
or
dec
xor
lock
push
sbb
jb
adc
adc
fidivl
outsl
xor
mov
pop
mov
adc
mov
mov
aam
movsl
push
rolb
mov
sub
push
les
mov
test
clc
jl
lcall
bound
sub
xchg
scas
inc
dec
bound
mov
push
pop
js
and
cwtl
adc
pop
jnp
test
xor
insb
adcl
arpl
mov
cmp
gs
fnstcw
dec
pusha
add
int3
adc
pushf
movsl
xor
pushl
sbb
loopne
and
mov
and
and
lcall
xchg
inc
movsb
push
scas
add
push
out
cs
xchg
adc
xlat
dec
hlt
cmp
addb
mov
mov
cli
jle
mov
mov
add
xor
clc
pop
dec
outsb
fstpl
sti
fwait
clc
in
cmp
loope
mov
jge
adc
fcoml
pop
add
pushf
cmc
aad
daa
lds
sbb
jecxz
mov
inc
xchg
mov
jno
mov
test
je
ds
xlat
ret
fwait
sub
bnd
adc
pop
xchg
jae
js
lods
shrb
mov
fwait
scas
divb
inc
mov
imul
jecxz
popf
lods
push
pop
mov
repz
nop
outsb
xchg
mov
in
stos
test
cli
cmp
mov
mov
push
test
fbstp
mov
pop
dec
pop
xor
push
mov
loopne
fdivrl
inc
mov
or
add
sbb
pop
jle
lcall
sahf
das
repz
inc
sbb
mov
xchg
movsb
rcl
add
pop
scas
in
arpl
xchg
add
and
inc
rcll
xchg
mov
and
mov
stc
xlat
int3
jb
dec
insb
or
roll
rorl
mov
sbb
lret
imul
lods
out
xor
js
ds
mov
inc
daa
mov
into
pop
imul
daa
dec
inc
inc
or
cmp
dec
jge
out
cld
shl
outsb
cmpb
repnz
int3
lcall
mov
lods
pop
push
cmp
inc
aad
sbb
lcall
test
cld
sbbl
shl
fidivrl
cbtw
inc
xchg
and
int
dec
jb
loope
dec
mov
inc
jae
push
adc
fidivs
test
test
mov
sbb
je
aam
scas
adc
xchg
aaa
jnp
incb
in
enter
in
dec
xchg
sbb
stos
gs
xor
dec
mov
pop
mov
push
int
dec
outsb
in
cmc
mov
or
xor
repz
pop
adc
mov
add
push
stos
leave
sbb
sti
adc
xor
es
adc
loope
lret
test
fimull
inc
mov
jl
out
push
lods
mov
mov
leave
and
inc
dec
sub
sbb
paddusw
mov
jno
fsts
daa
clc
leave
inc
sub
lods
xchg
aaa
or
sub
sub
push
stc
xchg
mov
cs
js
cmpsl
ljmp
loop
inc
dec
std
gs
adc
push
ret
addr16
aad
xchg
lahf
pop
bound
adc
jmp
repz
scas
lds
sbb
dec
scas
push
into
xchg
push
ss
rolb
mov
ljmp
and
fdiv
dec
into
enter
andb
in
pop
xor
leave
xchg
shl
imul
cmp
lock
test
mov
mov
mov
sarb
ss
xor
cmp
xchg
inc
outsb
cmp
pop
in
mov
mov
stos
decl
push
push
push
fwait
push
sbb
cwtl
stos
jbe
rcr
xchg
das
mov
daa
mov
mov
jp
mov
cwtl
lock
sub
and
sub
into
inc
enter
push
sti
push
lea
or
jge
sbb
jmp
xor
int3
pusha
xor
push
pop
call
into
outsb
dec
fwait
rcrb
cmc
inc
cmc
inc
iret
sub
inc
test
mov
out
les
add
mov
test
dec
mov
cmpsl
xchg
imul
or
sti
adc
aam
push
mov
in
hlt
lahf
ss
push
jmp
daa
cmpsw
mov
inc
mov
add
iret
and
aam
push
jp
push
xchg
inc
test
push
inc
and
sahf
xor
hlt
inc
test
fsubl
iret
mov
cmpsb
jecxz
xor
mov
outsl
jmp
shl
xor
inc
xchg
xor
inc
sbb
bound
icebp
adc
mov
test
lcall
xor
bound
dec
xor
xlat
mov
xchg
gs
sbb
les
aas
pop
das
int
cmpsl
cmp
xor
js
mov
fisttpll
ss
fsubrp
fsts
xchg
sub
inc
push
sahf
and
xor
inc
and
test
iret
or
es
out
pop
fwait
test
add
and
push
inc
sub
jecxz
sub
loope
mov
add
test
mov
jb
add
pop
mov
pop
int
dec
mov
push
lahf
add
cmp
xor
jnp
fsub
clc
add
fldt
sub
insl
lds
dec
mov
addr16
out
mov
push
sub
mov
and
inc
xchg
lds
push
and
inc
into
insl
jle
and
cmp
ret
mov
bound
mov
lea
xchg
hlt
cmp
jge
cmp
insb
xchg
xor
rcll
cltd
lret
fs
or
push
or
sbb
insb
dec
adc
and
xchg
sub
inc
jns
loope
jne
roll
fildl
pop
adc
and
add
sbb
inc
jmp
mov
push
ss
subb
repz
xchg
inc
out
out
push
mov
pop
aas
push
mov
pop
jmp
aaa
out
daa
sub
bound
sbb
out
xor
int3
test
add
cwtl
sub
pop
fidivrl
pop
add
push
mov
xchg
shll
mov
sbb
fisubrs
jno
add
aaa
ja
xor
push
bound
mov
stc
lret
mov
pop
enter
les
and
insb
pop
ss
frstor
and
push
jne
cmovnp
adc
xchg
repz
repz
movb
mov
out
mov
push
test
or
pop
cmp
or
jle
mov
out
mov
push
inc
push
pushf
sub
insb
ret
addb
adc
jp
inc
push
in
stc
repz
jae
jo
adc
push
ss
mov
pop
or
dec
data16
push
insl
push
int3
push
xchg
cld
cmpsl
mov
jg
jmp
movsb
ljmp
fisttpll
jge
in
mov
insb
daa
add
pushf
dec
js
adc
push
sub
pop
inc
adc
int
sub
daa
or
pop
test
outsl
arpl
mov
inc
lea
push
test
xor
mov
mov
add
les
push
int3
jecxz
mov
jae
cwtl
push
je
add
mov
data16
jns
icebp
push
pusha
call
sub
adc
pop
cltd
jmp
mov
popa
repnz
lret
jmp
xchg
mov
daa
jnp
hlt
iret
movsl
inc
ret
push
out
and
push
in
jg
pop
or
or
and
xchg
xchg
adc
enter
cmpsb
push
jge
cmp
aad
ret
frstor
push
add
mov
add
mov
xchg
outsb
int
mov
ss
loop
pop
lds
nop
andb
sar
aas
mov
dec
out
push
insl
addl
loopne
int3
test
cmp
push
jge
in
xor
mov
cmpsl
gs
imul
inc
lcall
jne
enter
or
push
sahf
and
nop
int
rcrb
addr16
imul
jns
lods
cli
mov
cmp
jge
cmp
fs
jle
jb
lds
inc
stos
xchg
cld
sbb
test
pop
cmp
xor
mov
in
gs
lods
push
inc
push
and
fs
int
gs
inc
in
jbe
sti
mov
mov
dec
aam
rol
das
insl
out
sbb
and
cmc
jmp
es
scas
mov
mov
out
repnz
aaa
inc
jb
insl
insl
add
fcmovnb
push
inc
pop
and
dec
xchg
xchg
or
aas
stos
getsec
pop
pop
push
and
fcoml
push
and
mov
lret
lcall
add
adc
cmpsl
jmp
lds
sub
adc
mov
adc
dec
aad
xorl
js
gs
push
jg
pop
and
mov
mov
jle
sub
fnstenv
fsts
mov
pop
sbb
inc
bound
addr16
movsb
push
push
std
or
sbb
or
or
fbstp
mov
stos
ficompl
dec
mov
pop
scas
mov
jb
inc
pop
jne
pop
or
sub
aas
les
loopne
mov
ds
jno
jmp
js
andb
out
cwtl
jnp
lret
push
xchg
dec
and
and
pop
jbe
aad
notb
and
jg
nop
xchg
mov
mov
jae
sbb
addb
imul
test
mov
and
in
jmp
bound
xchg
cmc
mov
jae
hlt
jl
je
sub
stos
push
xlat
popa
test
and
popa
push
cli
pop
dec
cmp
pop
and
add
dec
xchg
mov
ss
pop
cmp
scas
cmp
jl
pop
stos
jecxz
gs
adc
mov
ret
adc
push
js
jmp
ret
mov
and
cmc
adc
out
xor
adc
sbb
mov
jns
jle
outsb
push
add
mov
aaa
inc
stos
lock
lods
out
mov
xchg
pop
add
xchg
jns
adc
xor
xor
out
inc
jb,pn
sbb
mov
mov
out
out
jno
mov
cltd
xor
jp
fnstcw
pop
pop
aad
sahf
pop
adc
and
and
sbb
push
shlb
clc
and
leave
jae
or
das
shl
cmp
inc
xchg
cmp
in
enter
inc
out
jo
cmc
xchg
add
outsb
das
pop
xlat
xchg
jne
les
xor
mov
inc
cmp
push
test
in
pop
or
or
sahf
bound
push
aad
ds
cmp
dec
loope
add
mov
cmpsb
xor
adc
iret
push
and
call
shlb
rclb
mov
push
movsb
fcmovb
pop
or
clc
adc
cmpsb
out
ss
ss
iret
mov
fwait
xchg
cmp
pop
xor
imul
dec
hlt
std
dec
cmp
mov
test
in
scas
xchg
cmp
mov
test
and
gs
cmpsl
lods
adc
mov
aaa
icebp
dec
xchg
cs
repnz
inc
adc
aam
dec
mov
dec
and
rcll
jae
xor
out
cmovb
dec
fmuls
and
mov
xchg
test
pop
loopw
push
inc
fidivl
xchg
ds
cli
lret
and
sahf
add
jl
les
shlb
xchg
test
jno
jp
push
pop
arpl
sbb
js
loopne
xchg
pop
push
leave
js
fldl
mov
xchg
sarb
adc
and
imul
pushf
loopne
ja
test
or
xchg
jne
shl
pop
pop
mov
cmp
mov
inc
xchg
mov
testl
stc
add
ss
and
es
mov
in
add
test
movsl
push
pop
add
ret
loopne
jge
movhps
fmull
insl
mov
xchg
leave
es
inc
call
movsb
aam
ds
loope
in
sbb
cmpsl
les
push
mov
call
xchg
adc
inc
mov
adc
push
mov
push
faddl
out
xchg
outsb
push
test
sbb
dec
popf
lea
repz
lahf
sub
xchg
popa
pmaxub
and
jl
fidivs
inc
hlt
lods
sbb
fnstcw
roll
dec
jge
ror
xor
jl
and
pop
jl
sub
mov
mov
sbb
xchg
mov
xor
push
cmpb
sub
push
xor
inc
mov
sub
test
cli
mov
loope
fdivrs
xor
xchg
std
je
or
cmp
push
cli
cmc
mov
push
adc
lods
xchg
sub
mov
mov
mov
mov
add
sub
xchg
mov
scas
inc
sti
jl
dec
int3
push
testl
xor
mov
std
insl
icebp
lock
or
pop
mov
push
stc
or
test
jo
mov
test
push
cld
push
jnp
cld
sub
ret
inc
pop
or
pushf
mov
inc
outsl
sar
mov
repz
mov
fwait
pop
jle
loopne
xchg
push
and
ret
and
push
xor
mov
sbb
xor
rcl
test
scas
or
xchg
int3
or
int
jecxz
mov
push
scas
cmpsl
insl
dec
in
adc
ja
in
push
inc
lods
pop
jmp
push
pushf
dec
and
std
movd
mov
hlt
sub
push
ds
in
adc
ds
push
mov
outsl
sbb
sbb
popa
in
lret
rorl
gs
add
mov
daa
and
mov
adc
aam
mov
and
lcall
xor
cld
push
push
push
pop
mov
aaa
inc
bound
mov
jmp
xchg
or
movsl
mov
and
mov
jb
sub
cli
cmp
pop
int
sbb
test
out
fcoms
cmp
ret
xchg
lahf
negb
aas
fmul
and
lods
ss
xchg
addr16
out
mov
sbb
lods
out
sub
or
sub
push
or
add
mov
pop
outsb
notb
sbb
jmp
loopne
in
and
push
sub
jo
sub
push
push
push
inc
lods
mov
adc
xchg
test
out
lock
insb
or
add
scas
call
jge
out
adc
push
fisubl
test
lods
jg
lret
sti
sbb
lret
dec
aaa
or
sarb
cld
push
sub
pop
push
fwait
add
test
adc
leave
jg
cs
and
xchg
mov
scas
test
adc
push
aas
aam
jp
add
add
push
outsb
movsl
fstpl
jno
adc
pop
into
xchg
in
add
cmp
add
mov
or
es
mov
mov
lcall
test
std
sti
stos
inc
loop
aad
sub
neg
dec
sub
cs
loop
daa
pop
stos
sub
std
inc
or
test
call
and
and
orl
fcoms
inc
jmp
mov
sbb
xor
fstp
adc
mov
aas
xchg
jne
pop
movsb
in
mov
pop
push
sbb
lahf
push
xor
sub
mov
pop
mov
cwtl
or
xchg
insb
mov
adc
cmp
jge
adc
or
pop
push
lret
mov
imul
into
adc
adc
fisubl
push
inc
inc
add
orb
jne
ret
pop
ja
jmp
rolb
sbb
cmpsl
cmp
mov
hlt
subl
xchg
pop
cld
jp
add
inc
inc
stos
faddl
daa
ficomps
sbb
aaa
xchg
pushf
lcall
arpl
cmp
test
insb
insb
pop
push
jns
adcb
adc
in
out
ljmp
int3
mov
bound
cmp
dec
les
xor
pop
jl
sbb
sub
sbb
stc
mov
xchg
mov
cmp
movsb
fucomi
ret
rorb
cli
jmp
test
adc
pop
and
sub
aad
loopne
pop
cmp
fwait
push
cltd
jmp
in
inc
loopne
das
fiaddl
sub
push
movsl
hlt
inc
and
xchg
les
jne
pop
jp
imul
jae
mov
insb
mov
arpl
pop
pop
int
mov
xor
pop
scas
outsl
jg
jno
into
outsl
out
push
out
adc
adc
movsb
fistl
cmp
mov
daa
cmc
xor
xor
or
cmp
push
aad
inc
xchg
lds
xchg
out
and
out
pushl
push
xor
jbe
and
cld
into
fucomip
fsubrs
hlt
neg
test
out
inc
imul
stos
orb
mov
fdivs
lret
xor
xchg
cmp
fsubrs
movsl
jecxz
cli
inc
push
repz
pop
notl
or
cmpsb
nop
mov
mov
fsubs
sub
insb
mov
xor
aam
shrb
xchg
stos
inc
push
mov
pop
ror
insl
mov
das
inc
stos
jmp
fistpll
mov
mov
arpl
inc
cmp
pop
imulb
popw
lret
jnp
adc
mov
addl
popf
mov
and
cmp
lock
push
ret
pop
and
dec
push
jae
cmp
ret
ffreep
and
cmp
aas
repnz
add
add
aad
add
shll
into
mov
aam
cmpsb
jno
enter
mov
xchg
mov
sbb
sub
daa
pop
push
das
mov
mov
cli
xor
lahf
xlat
cmpsl
pop
pop
xor
inc
stos
mov
test
inc
lret
dec
jecxz
call
sub
aam
pop
xor
jne
imul
dec
out
mov
js
adcl
sbb
ljmp
xor
shl
int
mov
mov
jns
pop
mov
and
shll
push
inc
sub
into
imull
xchg
push
push
inc
or
xchg
push
shll
push
xchg
pop
test
nop
lock
loopne
adc
mov
ss
xlat
in
jl
sbb
cmpsl
mov
pop
loopne
add
and
adc
pop
les
decl
sbb
push
jnp
dec
subb
jmp
sub
add
push
mov
roll
das
iret
cmc
imul
inc
push
stos
or
push
aas
cmp
or
mov
sub
xor
lahf
or
xor
sbb
cmp
xchg
enter
and
in
inc
popf
mov
jb
or
adc
push
push
and
pop
gs
movsb
gs
add
in
in
adc
push
pop
lods
movsb
fstl
xorb
ljmp
xchg
inc
xor
cmp
aaa
adc
jns
clc
push
lcall
es
sub
fcmovne
inc
insb
fcompl
fstl
pop
inc
add
cs
and
into
inc
das
adc
loopne
lret
popa
test
mov
mov
aas
and
jb
outsl
cmc
shl
cmp
adc
je
xor
jg
movsb
gs
movsl
lahf
inc
xor
fiaddl
cmp
push
lods
add
xchg
xchg
jb
lcall
pop
push
push
inc
mov
push
adc
push
mov
adc
scas
scas
mov
jg
or
dec
stos
or
cltd
addl
les
sub
and
push
cmp
xor
lds
mov
or
outsl
add
or
test
jecxz
lret
shr
stos
push
mov
xchg
pop
jmp
js
lahf
push
dec
or
rorl
and
xlat
inc
stos
jne
inc
push
idivl
aad
mov
dec
sbb
xor
jmp
pop
and
insl
add
jnp
cld
sahf
push
pop
in
gs
dec
pop
xor
leave
add
or
idivb
jl
movsl
pop
in
inc
jb
or
std
imul
popa
mov
adc
mov
shlb
std
adc
adc
jge
jno
lret
ss
arpl
add
in
std
xchg
jle
cld
xchg
fwait
or
mov
pop
jb
pop
sbb
pusha
push
aad
subb
jne
aam
or
int3
adc
jp
cld
sub
ljmp
inc
sbb
out
jle
mov
xor
add
in
stc
pop
jecxz
fdivl
fisttpll
jns
cmp
and
adc
pop
mov
lock
rorl
fldcw
call
cmc
adc
pop
subb
jp
mov
mov
adc
mov
lret
fidivrs
dec
mov
xchg
fistpl
rcl
sbb
dec
pop
and
sub
mov
insb
mov
jge
gs
mov
in
insl
test
stc
push
mov
lods
fcmovb
outsl
cli
cmp
scas
adc
imull
mov
fcoms
lock
iret
xchg
negl
loope
lret
pop
push
lods
push
pop
cwtl
mov
leave
lcall
push
stos
loope
fdiv
xchg
xlat
xlat
lea
add
scas
or
inc
cld
mov
mov
jne
jl
push
jg
hlt
mov
push
sub
imul
loop
fs
mov
mov
movb
xchg
sub
push
out
inc
and
test
scas
push
iret
aam
pusha
and
adc
sahf
es
jo
dec
test
into
in
in
sbb
out
pop
lahf
push
arpl
mov
icebp
mov
cltd
inc
pop
into
sbb
adc
mov
test
je
das
adc
and
cmp
push
fildll
mov
loop
jne
xor
mov
fisttpll
lahf
sbb
fistl
daa
dec
in
pop
add
push
imul
scas
popf
xchg
lds
popf
adc
mov
sub
jp
aam
pop
xchg
push
sub
jp
jnp
jmp
repz
and
pop
xchg
jmp
sbb
out
addr16
jae
adc
inc
push
repnz
aas
in
data16
and
jge
aad
jnp
in
insl
dec
fmuls
mov
aam
jg
cwtl
lock
add
outsb
leave
movsl
lcall
inc
out
dec
add
cmp
ret
mov
sbb
mov
fmul
jp
mov
lcall
shrl
jae
jl
xor
das
data16
cld
inc
xor
cltd
dec
dec
sbb
bound
sbb
mov
cld
adc
popa
push
jno
push
pushf
sarb
inc
fucomi
or
pop
sbb
ja
idiv
cmp
and
lcall
mov
inc
xchg
lods
mov
add
sbb
pop
lea
cmpl
lods
pop
lods
lcall
sbb
and
pusha
pop
adc
les
xor
and
jg
dec
jns
push
hlt
jae
inc
shl
lahf
cmp
push
xor
cmp
in
mov
and
psllq
cli
fmull
mov
cli
inc
mov
dec
mov
icebp
cmovbe
sbb
shlb
xchg
mov
jecxz
mov
pop
movsb
jmp
outsb
inc
mov
sbb
cmp
ds
mov
shlb
scas
adc
fsubs
inc
cwtl
lret
inc
fldl
daa
loop
push
xor
cmpsl
jmp
mov
out
inc
jg
or
mov
leave
adc
and
adcb
ljmp
sbb
sub
mov
enter
arpl
into
xor
xor
cmc
jl
rolb
in
inc
pop
pusha
add
xor
icebp
bound
xlat
or
dec
pop
dec
ss
hlt
xchg
xchg
out
dec
cli
xlat
jnp
sbb
das
and
pop
dec
jo
insl
mov
pop
fs
out
hlt
into
out
lret
mov
jns
loopne
pop
sahf
inc
out
mov
push
fimuls
out
sub
stos
xor
outsb
movsl
jns
dec
lret
jecxz
mov
repz
inc
imul
call
jnp
xchg
les
jl
add
mov
mov
stc
adc
out
das
and
loope
or
out
aad
xchg
mov
fisttpll
xchg
aaa
and
jno
sbb
mov
mov
mov
clc
add
add
nop
pop
sbb
scas
lds
mov
mov
pushf
repz
in
and
dec
leave
ss
into
rolb
xorb
leave
arpl
shrb
lods
sarl
imul
jns
jecxz
push
ds
mov
dec
popa
mov
jb
mov
fcomps
mov
xor
daa
or
mov
test
push
push
pop
lcall
fistl
mov
mov
outsb
and
rcl
insb
arpl
sub
pop
adc
xchg
push
fwait
pop
push
mov
jmp
jno
cli
pusha
fdivrs
mov
or
outsl
pop
cs
inc
lret
pushf
lea
shrl
add
and
stc
mov
inc
push
pop
clc
daa
jg
xchg
pop
push
push
xchg
jmp
sbb
rorb
xlat
rclb
cli
mov
jb
jle
roll
int3
jnp
dec
pusha
bound
aam
incl
sbb
mov
mov
sub
pop
stos
stc
inc
jae
gs
xchg
xchg
jg
xchg
cltd
clc
pop
push
jp
insl
xor
repnz
es
ja
cmp
xchg
imul
test
sub
mov
jecxz
outsb
add
cmp
push
idiv
repz
lcall
in
pop
cli
lahf
mov
imul
jle
mov
pop
mov
push
call
xor
aaa
loop
mov
jp
xchg
or
cld
call
inc
pavgw
sti
xlat
es
out
pop
mov
mov
pop
pop
sbb
gs
scas
aam
pop
pop
cmp
cwtl
fcomps
inc
lods
add
xor
and
xchg
aad
dec
push
outsl
and
in
les
push
dec
fidivrs
popf
xchg
subl
mov
out
les
jge
mov
test
fimull
ret
call
sub
push
or
xor
inc
dec
mov
push
mov
arpl
mov
test
es
adc
xchg
in
es
inc
jmp
stos
add
je
xchg
push
and
lods
fwait
push
adc
mov
mov
pusha
into
and
loope
popf
cmp
int
adc
into
inc
sub
cmp
or
pop
shlb
add
inc
dec
enter
pop
fstps
pop
inc
inc
pop
repnz
loopne
enter
mov
andl
adc
out
aam
mov
xlat
lods
repz
or
jns
loop
jno
xor
cld
outsl
stos
sub
mov
jo
mov
mov
dec
jge
rclb
mov
insl
test
enter
insb
jno
jl
incb
sarb
dec
mov
mov
popa
fimuls
pop
mov
outsl
cmp
andb
das
mov
adc
iret
xor
es
iret
jae
xor
scas
popf
push
mov
imul
add
inc
popf
cmp
push
add
popf
in
sub
sbb
ljmp
add
jmp
xchg
cs
andl
or
adc
in
jge
xchg
enter
sbb
fcmovbe
std
jns
pushf
in
aas
orl
test
dec
xchg
jns
mov
mov
xchg
push
xchg
movsl
int
dec
push
and
divl
daa
popf
cwtl
into
mov
ljmp
push
movl
add
faddl
rcl
loope
jae
rolb
test
or
les
das
adc
mov
in
adc
add
cld
js
mov
mov
aad
sbbl
psubsw
adc
inc
aad
inc
mov
sbb
pop
sbbb
ds
jae
cmp
negb
xor
or
dec
loope
mov
int
ljmp
subl
xor
fs
je
jae
test
adc
jge
fwait
in
sub
cmp
repnz
push
std
inc
in
ja
mov
mov
mov
cmp
cli
lea
sbb
or
mov
jp
shrb
push
sbb
sbb
pop
cmp
das
insl
and
test
stc
sarl
jnp
jecxz
mov
add
imul
jp
imul
call
aaa
inc
inc
push
inc
js
gs
in
pop
mov
and
sbbb
into
or
jg
jno
dec
mov
sbb
sub
stos
add
shlb
push
or
stos
jo
in
cltd
outsl
icebp
dec
push
notw
xor
enter
test
mov
xchg
ds
sbb
popa
mulb
inc
push
add
and
int
jge
mov
adc
subl
pop
mov
pop
push
and
int3
or
push
sahf
push
inc
repnz
mov
sbb
in
cmp
pop
pop
pop
cmp
xchg
out
outsb
mov
testb
sbb
cmp
inc
pop
rcrb
sbb
sti
lcall
lret
mov
mov
repz
push
test
pop
inc
xlat
addr16
aas
iret
mov
lret
std
repz
shrl
adc
xchg
cs
lret
mov
xchg
push
push
mov
lods
cli
pop
jmp
jnp
loopne
shll
add
xor
mov
out
xchg
push
pop
popa
sub
mov
sbb
xor
xchg
and
cs
inc
or
movsb
cmc
or
cmp
leave
and
fnstenv
sbb
mov
pop
popa
jle
ret
gs
insb
test
pusha
sbb
inc
dec
cmpsb
or
adc
test
not
jno
popa
xor
mov
cmp
or
push
ret
mov
mov
pop
cmp
test
daa
negb
add
jbe
fwait
mov
sbbb
lea
dec
shlb
mov
dec
shr
shrl
test
sbb
mov
ljmp
xchg
and
dec
xor
mov
mov
loope,pn
fprem
jecxz
sub
aas
insb
xchg
test
xchg
mov
jge
mov
test
push
xor
push
fdiv
enter
cltd
push
mov
push
or
mov
aaa
aas
adc
mov
jno
sbbb
pushf
ss
scas
mov
xor
nop
push
out
lcall
xchg
mov
fs
jno
add
repnz
cmp
sbb
nop
repnz
dec
push
cld
mov
cmp
das
adc
pop
arpl
mov
xchg
sbb
ss
push
call
loope
cmpsl
push
lret
mov
adc
loope
cmp
jle
dec
push
fs
mov
subl
lcall
dec
xor
dec
jae
scas
fwait
or
jl
test
shlb
in
call
or
and
cmpl
faddl
xchg
sub
mov
inc
in
pop
ficoms
ret
loopne
xor
sub
enter
or
cmovle
push
pop
test
test
ret
fsubrl
xchg
dec
sub
aam
fs
mov
pop
cmpsb
je
popf
cmpsb
add
pop
ja
jmp
sub
cmp
sbb
out
pop
cs
mov
add
inc
ret
sub
call
xchg
dec
cmpsl
jno
call
movl
jp
jecxz
mov
flds
cmp
and
push
pop
cmp
movsb
idiv
dec
pop
fistl
mov
or
and
jmp
xor
pushf
push
mov
mov
lret
in
cltd
dec
adc
sahf
ja
adc
mov
dec
out
mov
mov
cmp
jno
or
jmp
xor
inc
cmpb
and
adc
pop
and
inc
cmp
xor
xor
dec
sarb
mov
mov
lret
in
push
xchg
jb
pop
lahf
fdivrl
push
jmp
push
pop
in
leave
fnstenv
cs
xchg
cmpsb
cwtl
mov
jge
bound
imul
mov
lods
add
out
and
out
out
scas
cltd
lahf
js
adc
mov
dec
adc
jp
mov
dec
dec
call
test
xchg
sbb
mov
jb
push
mov
aad
lret
test
or
mov
js
popa
fs
push
daa
lcall
jg
sbb
cmc
out
dec
movsl
ds
cmp
mov
push
out
and
push
mov
inc
sti
push
dec
sbb
dec
jp
push
add
cmpsb
xor
adc
out
data16
cmpsl
pop
shrb
jne
mov
add
imul
push
outsb
dec
sahf
or
or
lret
mov
jle
push
divb
cmp
dec
pusha
add
mov
add
or
in
pop
out
jmp
rolb
daa
test
gs
xchg
sti
push
test
enter
sbb
sub
add
mov
loopne
jno
out
imul
pop
jl
mov
mull
cmpsl
leave
int3
js
dec
loopne
call
out
ret
loope
or
unpckhps
mov
fidivrl
adc
scas
inc
out
nop
mov
out
sbb
out
mov
jbe
sahf
adc
loopne
dec
cli
sbb
dec
repz
or
test
add
out
mov
notb
popf
or
insb
push
iret
std
jb
test
inc
daa
push
mov
mov
cmpl
push
jne
pop
dec
jecxz
into
mov
pop
mov
lods
lcall
add
mov
lcall
inc
push
cmpl
jne
pop
sbb
push
in
push
or
je
mov
mov
movsl
lds
mov
test
fsubrp
add
jo
loopne
sbb
test
xorl
jl
daa
xchg
mov
outsl
popf
call
cs
mov
jmp
scas
out
mov
popf
jns
loop
leave
add
cmc
enter
pop
lcall
cmpsb
sub
imul
jmp
loop
aas
sbb
xchg
lods
push
cmp
scas
dec
je
pop
in
into
lock
cld
dec
fisttpl
out
cmp
hlt
adc
mov
out
nop
pop
movsl
jae
jne
ds
mov
arpl
inc
out
jno
aaa
sub
ds
adc
push
jmp
xlat
scas
sub
jb
lock
sbb
cmp
adc
test
fwait
xchg
insl
nop
push
cli
cmp
js
test
adc
js
mov
jge
fwait
in
pop
js
fbld
sbb
rolb
outsb
jnp
in
xchg
aas
je
inc
mov
mov
xor
in
roll
movsb
pop
clc
mov
imul
cli
jbe
loop
push
push
adc
cmpsb
mov
cmpsb
mov
bound
insb
xchg
pop
jbe
dec
lods
xlat
add
ljmp
cmp
inc
fs
xor
pop
lds
movq
xchg
sub
mov
lods
xchg
add
jae
mov
push
sbb
push
mov
enter
fucom
adc
add
xor
cmp
icebp
movsl
jp
dec
test
popf
xor
inc
in
mov
sbb
add
dec
cmp
add
iret
daa
test
mov
mov
scas
xlat
insb
push
jp
adc
ror
cmp
jecxz
sub
cmp
imul
sbb
jl
and
inc
mov
jo
out
out
mov
xor
stos
or
popf
adc
dec
fs
cmp
in
inc
inc
lods
out
test
iret
mov
ret
cmpsb
cwtd
fiaddl
inc
mov
fcoml
lds
inc
inc
shrb
pop
or
sbbl
ret
mov
xchg
push
pop
ljmp
movsb
std
adc
pop
xor
or
lcall
jg
ss
sub
inc
cmp
sbb
pushf
repz
and
pop
shrb
es
sbb
sti
jmp
mov
stos
sahf
ss
subb
ret
or
into
icebp
or
and
and
insb
gs
adc
in
pop
pop
add
into
cli
icebp
xchg
lret
lret
movsl
stos
cmp
xor
fstp
cmp
inc
mov
push
ja
mov
les
or
test
adc
push
push
data16
dec
std
mov
xor
push
mov
inc
dec
xor
jg
dec
cmp
rolb
sti
shlb
pop
xchg
dec
test
mov
xchg
sahf
jl
adc
sbb
fdivs
inc
pusha
lock
and
pop
aaa
loop
lcall
mov
fstpl
sbb
loope
addr16
fists
data16
push
fsubrl
into
dec
adc
in
ficompl
xor
xor
orl
loope
cmp
mov
cltd
loop
in
sbbl
inc
and
dec
dec
or
int
xorl
mov
cmp
add
fwait
inc
loopne
pop
mov
in
xor
rorb
or
xlat
pop
adc
jl
mov
sbb
sub
inc
inc
add
adc
add
stos
cmp
ss
out
or
pushf
in
daa
xchg
mov
sbb
std
push
xor
xor
lods
repz
lahf
jnp
pop
sbbb
lret
cmp
add
mov
xchg
sub
inc
xlat
fistpl
xchg
mov
mov
stos
shlw
dec
enter
pushf
rorl
dec
test
push
test
icebp
mov
imul
fwait
add
nop
adcb
sub
scas
add
fistl
stos
mov
outsl
arpl
adc
jbe
cs
ficompl
pushl
pop
adc
mov
icebp
pop
mov
loop
sbb
pop
into
loope
loope
pop
xchg
clc
dec
mov
dec
out
aaa
in
les
and
push
jne
sbb
ss
out
pop
mov
mov
scas
flds
popl
xchg
jl
les
cltd
in
cmp
jg
fistpl
xchg
aam
mov
pop
scas
or
xor
sets
inc
lcall
outsl
add
adc
shll
out
xor
mov
push
fwait
cld
or
and
jb
pop
popf
push
out
push
stos
sbb
xor
cmp
cli
call
sti
adc
lahf
and
outsl
movsl
into
inc
loop
fwait
dec
add
cmp
jl
jmp
movsb
lret
xor
pushf
cs
fildll
je
popf
mov
xor
pop
ret
jp
pusha
sub
jne
dec
mov
pop
enter
in
inc
stos
pop
repnz
pop
or
mov
ficoms
sub
icebp
incb
dec
into
cmp
js
das
dec
xor
jo
and
in
push
arpl
insb
cltd
inc
sar
mov
jp
fsincos
adc
push
int3
xor
inc
jecxz
or
cmp
inc
add
enter
jns
xchg
insb
addr16
lahf
push
and
pop
pop
scas
ds
push
gs
xchg
inc
inc
jbe
push
jecxz
pop
xchg
stc
add
dec
cli
jg
or
lret
sbb
pop
inc
rcll
cmc
xor
je
mov
adc
sbb
dec
lcall
mov
jo
icebp
cmp
adc
adc
sbb
add
adc
sbb
pop
hlt
out
and
aad
add
xchg
pop
cmc
movsb
fmulp
pop
inc
js
or
mov
jns
mov
sub
jns
out
aad
push
cli
jl
adc
mov
out
jns
push
in
jne
pusha
icebp
nop
cmp
aas
or
js
in
insl
cmp
mov
mov
pop
insl
push
je
pop
jmp
mov
pop
les
or
leave
stos
insl
mov
sub
arpl
mov
add
or
mov
or
aaa
sbb
sbb
popa
outsb
sub
cmpsb
dec
mov
xchg
je
cmp
imul
rorb
mov
inc
xor
sub
mov
dec
cmpsl
stos
in
mov
es
adc
xor
add
push
andb
ljmp
push
rclb
rcrb
fdivrs
pusha
jno
les
rorl
test
jno
int
pop
push
cmpsl
jnp
xchg
rcrb
adc
dec
repz
lret
fwait
movsl
sub
aam
enter
mov
ljmp
fists
in
out
pop
add
decb
out
mov
scas
clc
inc
in
mov
rcrl
iret
or
mov
jns
imulb
cli
sarb
imul
inc
add
sub
fs
mov
jecxz
and
or
pop
pop
inc
dec
bound
cli
mov
cltd
aaa
ds
sub
jmp
in
std
xor
inc
arpl
loope
jmp
jnp
cld
insb
push
sub
fwait
inc
push
lcall
jne
mov
mov
jp
add
mov
out
es
mov
ret
vunpckhps
fcomps
aas
dec
pop
or
pop
stos
dec
call
outsb
stos
movsb
cs
cmpl
pushf
push
sbb
shl
test
cs
lcall
xchg
push
xchg
adc
sbb
aaa
sub
pop
rol
outsl
leave
hlt
inc
jne
dec
cmp
je
xchg
inc
and
aas
addr16
pop
xchg
div
pop
adc
stc
icebp
dec
add
sub
add
ret
lahf
cmc
mov
adc
es
sarb
fisubl
push
jbe
pushf
adc
std
mov
cmpb
mov
sahf
enterw
aad
pop
bound
sbb
xlat
shlb
push
dec
popf
jg
cltd
lods
fimuls
test
and
pop
xchg
shll
push
adc
sub
movsb
sub
scas
fisttps
pop
xor
mov
push
mov
jno
mov
cwtl
es
sub
enter
lcall
dec
mov
mov
pop
in
movsb
push
scas
mov
add
adc
pushf
jnp
imull
sub
xchg
nop
sbb
pop
pop
les
push
sbb
mov
es
je
pop
aas
mov
loopne
pop
negl
jp
mov
pop
mov
cmp
sub
dec
lods
fsts
jb
sub
in
dec
and
mov
ds
pop
divb
inc
sub
add
adc
test
add
iret
shrb
push
int3
data16
fistps
pop
jne
and
scas
mov
in
mov
pop
sbb
lret
mov
pop
mov
fldcw
jmp
sbb
dec
ds
popl
cmp
jl
into
ja
aam
xchg
ret
inc
test
inc
mov
push
pushf
inc
push
mov
lahf
sar
and
jecxz
push
out
hlt
cltd
icebp
xchg
jns
shl
stos
mov
fs
int
cld
movsb
xchg
inc
loopne
and
sbb
icebp
dec
adc
xor
mov
test
pop
pop
imul
push
scas
and
popf
or
popa
push
leave
les
jbe
cld
mov
mov
jne
sub
stos
imul
mov
and
cmp
sub
ja
leave
shld
lds
in
sub
int3
mulb
adc
inc
mov
enter
jo
xchg
test
lret
loopne
inc
jmp
push
fcoml
jno
rcr
out
inc
into
mov
or
imul
sub
stc
lret
into
dec
xor
jno
xchg
imul
in
cmp
push
jnp
cltd
xor
sbb
enter
ficompl
and
shll
mov
comiss
or
iret
or
jbe
cs
dec
xchg
xchg
pop
aaa
adc
cmc
cmp
fiadds
mov
fwait
xchg
jp
sub
mov
dec
mov
add
insl
addr16
mov
les
ficoml
ror
cmp
leave
fdivrs
sub
mov
inc
xchg
jae
mov
xchg
mov
push
cltd
jo
xchg
fs
cmpb
test
adc
sbb
jns
dec
lahf
hlt
das
jg
inc
xor
xor
shll
fstpt
ss
and
pusha
jge
sbb
cmc
push
jmp
scas
push
pop
xchg
cmp
shl
icebp
jp
bound
stos
push
inc
fidivl
cmpsl
mov
add
or
dec
mov
mov
fisubrl
bound
push
pop
int
xor
pushf
sbb
push
mov
mov
fwait
gs
sahf
pop
and
and
clc
push
xchg
jne
pusha
clc
pop
lods
imul
or
fcmovnb
mov
mov
sbb
ret
cmp
dec
aam
jnp
lock
mov
dec
xchg
ja
inc
ss
cmp
test
xor
ret
mov
test
jne
jp
sbbl
push
dec
sub
pop
cltd
add
lods
mov
popa
daa
dec
adc
dec
outsb
ss
pop
movsb
xlat
xor
out
add
or
cmc
sub
push
dec
add
dec
jb
out
adc
test
icebp
ret
or
subl
dec
lock
sbb
daa
cltd
shrl
mov
enter
jns
push
jo
mov
cmpsl
or
cmpsl
sub
arpl
sub
inc
nop
jae
movsb
cmpsl
mov
lahf
fnstcw
insb
pop
xchg
pop
lods
mov
mov
popa
ljmp
orb
loop
jno
pop
xchg
lds
mov
xchg
stos
lret
out
sbb
mov
test
dec
sub
dec
cmpsl
pop
sub
mov
outsb
push
loope
sti
inc
add
imul
cs
mov
out
shrb
movsl
iret
push
mov
rcll
fsubs
test
mov
add
sahf
mov
jmp
cmp
mov
iret
movl
xchg
into
mov
arpl
ss
icebp
pop
orb
xchg
ljmp
fmuls
cwtl
mov
sbb
xor
in
in
push
add
cli
push
xorb
decb
mov
js
push
jb
add
stos
jns
sti
out
cwtl
mov
divb
push
mov
shlb
fisubrs
mov
ror
lcall
mov
mov
add
jge
cmpsb
dec
mov
push
and
js,pn
popa
adc
push
bound
lcall
pop
outsb
icebp
rcl
insl
mov
jno
push
xchg
mov
data16
test
pop
aam
test
push
mov
sub
and
and
dec
hlt
jnp
into
mov
jmp
sbb
and
cmpsb
test
sub
aas
aad
stc
mov
imul
ret
or
xchg
loop
stos
rolb
push
rep
add
push
adc
xor
or
lds
sar
ljmp
add
jmp
sub
pop
fwait
xlat
ret
enter
xchg
mov
sbb
in
push
movsb
push
xchg
sub
rorb
aad
stos
gs
add
or
push
jg
xchg
out
mov
or
aad
mov
ljmp
fstpl
dec
xor
sbb
lahf
sbb
mov
xor
add
add
xor
inc
daa
lcall
sbb
repnz
push
xchg
inc
xchg
xchg
shr
xchg
or
imul
imul
push
andb
leave
cld
or
leave
repz
loop
mov
push
fs
push
cmp
ljmp
enter
repnz
sbb
outsb
in
adc
mov
jp
add
jecxz
fs
xchg
push
das
in
arpl
stos
add
fistpl
loope
cmpsl
jmp
mov
das
ret
scas
scas
push
cmc
mov
fsubs
mov
push
incl
mov
rolb
faddl
mov
and
push
pop
mov
mov
adc
xchg
imul
movl
mov
rcl
fnstcw
xchg
dec
fs
pop
arpl
jae
cmpsl
sbb
shl
rcrl
flds
loopne
xchg
in
push
adc
rcrb
bound
jg
insb
jns
push
cwtl
lea
xchg
or
popf
cwtl
pop
mov
pop
adc
dec
xchg
sbb
push
inc
pop
sub
mov
fwait
add
mov
and
js
cmp
pop
cs
pop
pop
pop
pop
cmp
jne
scas
mov
adc
adc
in
mov
in
add
cmp
out
add
std
cmpsl
cmc
inc
addr16
inc
mov
pusha
mov
sub
mov
mov
sbb
mov
inc
mov
imul
or
push
das
data16
in
sahf
cmpsb
scas
or
test
mov
insl
sub
addr16
mov
push
je
dec
add
mov
jl
faddp
jo
dec
loope
cld
mov
movsl
sbbb
cmovns
bound
lods
cmp
scas
cmp
sti
int3
push
push
std
fistl
mov
push
and
pop
neg
out
ret
adcb
jle
mov
inc
call
mov
repz
inc
or
jg
push
jns
add
ret
dec
mov
inc
cmc
mov
jl
ret
ljmp
roll
test
adc
sbb
dec
pop
dec
push
jp
icebp
cmp
push
inc
test
es
xchg
adc
frstor
sbb
ja
jmp
insl
sbb
cmp
mov
dec
push
leave
xchg
inc
push
or
push
je
iret
scas
aad
mov
insl
popf
dec
idivl
cmp
inc
inc
in
icebp
inc
cmp
push
mov
sub
jmp
xor
icebp
push
and
push
mov
inc
inc
es
sub
cmovle
cs
jno
outsl
mov
push
out
in
push
int
mov
popa
push
xchg
xchg
mov
pop
adcl
mov
jno
add
fcomip
cltd
push
add
rorb
test
mov
insb
daa
jl
aad
cltd
out
ljmp
js
xor
or
nop
pop
jbe
jmp
xor
add
nop
outsb
repnz
inc
loope
xor
arpl
sub
data16
insl
xchg
pop
jmp
cmpsl
js
xchg
nop
les
flds
in
and
in
cmp
sub
jmp
mov
jecxz
lret
std
cmc
data16
add
xor
add
mov
stc
lcall
fs
popf
dec
ja
stos
out
leave
aaa
in
dec
jmp
xchg
imul
sbb
dec
jp
inc
data16
xchg
adcl
aas
push
int3
sub
inc
mov
outsl
or
dec
enter
push
shrb
sub
cmp
or
sbb
jg
mov
push
cld
jae
int
mov
or
mov
sbb
xor
push
jns
sti
sub
adc
xchg
lods
push
daa
ret
sbb
fs
dec
xorl
scas
insb
iret
das
imul
mov
outsb
cs
inc
mov
ficoms
mov
mov
lock
mov
aaa
xchg
and
add
xchg
xchg
hlt
jnp
jne
dec
xchg
les
fmuls
add
xchg
int3
sbb
adc
imul
cmp
jno
cmp
sub
lcall
pop
and
into
xor
cmpsl
lods
int
xorb
jmp
push
mov
adc
pop
insb
mov
xor
gs
push
test
je
lret
mov
lahf
xchg
sub
scas
decb
jbe
fldenv
inc
daa
push
daa
in
das
iret
stos
inc
fstl
fs
aas
cmp
enter
or
sub
mov
mov
cltd
cltd
out
mov
ja
xor
lret
in
aas
inc
into
lahf
adc
leave
sub
outsb
jo
repz
mov
loop
insb
add
push
fcmovnb
mov
stos
dec
pop
xchg
mov
fwait
xchg
bound
sbb
cmp
xor
cmp
and
and
addb
dec
jp
dec
pop
mov
mov
jo
jmp
mov
mov
sarb
jns
stos
xor
das
xor
nop
fcmovu
lods
mov
mov
push
xor
leave
ljmp
xor
std
and
mov
out
sti
adc
cmc
sti
mov
mov
mov
jge
sbbl
dec
inc
adc
push
push
les
mov
mov
das
jle
jbe
fdivr
in
cli
fnstenv
or
nop
xchg
or
jne
icebp
popf
mov
out
gs
cmpsl
xor
in
stos
dec
repnz
mov
imul
cmp
mov
dec
stos
cmp
jl
scas
dec
stc
mov
adc
into
and
xor
loop
mov
sbb
lock
icebp
push
push
sti
lds
sub
cmpsl
sbb
adc
mov
sbb
lea
data16
xchg
ret
es
jl
push
push
jmp
sbb
out
add
pop
push
cmp
cs
sti
mov
add
test
cmpsb
sbb
inc
inc
xor
stc
daa
xchg
mov
leave
inc
hlt
xor
cwtl
push
js
mov
cmc
xchg
cmp
xor
or
jne
lea
test
jmp
incl
cmp
aas
xor
inc
cltd
push
xchg
add
dec
sahf
mov
imul
jle
add
xchg
jo
add
les
std
or
out
imul
fmuls
andl
xchg
ljmp
jmp
shl
mov
aas
xor
push
lret
pop
pop
out
push
pop
out
or
xchg
mov
pushf
js
ljmp
stos
pop
xchg
mov
or
pusha
stos
jnp
addr16
fwait
jb
sub
dec
popa
clc
push
arpl
xchg
inc
and
in
cmp
test
xor
enter
mov
setnp
lret
mov
es
xor
pop
push
pop
jmp
or
xor
addr16
aad
in
mov
adc
popa
adc
fwait
gs
jge
mov
ds
loopne
push
and
push
xchg
jl
mov
cmpsl
inc
fildll
adc
adc
xor
mov
pop
fiadds
sbb
sti
mov
fildl
das
lahf
dec
out
fwait
repnz
adc
rorb
pop
cmp
mov
xchg
in
std
mov
and
mov
stos
ss
lods
dec
ret
cmp
data16
stos
pushf
in
xor
fisubs
in
or
xchg
loopne
pop
icebp
push
jb
sub
jns
sub
push
ficomps
xchg
popa
mov
mov
pop
js
mov
fs
jmp
stc
push
std
stc
add
adcb
rorl
push
xchg
fnstcw
into
jp
pushf
mov
les
sbb
jns
je
mov
out
test
mov
dec
lock
cmpl
mov
pop
mov
xchg
idivb
sbb
mov
dec
test
inc
dec
mov
push
lea
mov
sti
sbb
loopne
jmp
fiadds
xor
fstpt
push
or
test
inc
cmpsl
les
inc
lock
stc
pusha
imul
jp
mov
xchg
jg
pop
pusha
into
int
add
out
mov
sbb
or
or
into
lret
pop
sbb
out
lcall
mov
lock
cwtl
xchg
arpl
int
lretw
push
xchg
jp
dec
sbb
push
dec
jmp
push
incl
xlat
leave
popl
enter
inc
mov
jns
cltd
dec
pop
xor
add
fwait
loopne
test
fstps
xchg
adc
inc
push
jns
xchg
fcomps
and
rorb
sub
add
ret
icebp
jle
push
xchg
aad
push
ds
jne
fmul
repz
cmpb
jle
xor
push
scas
push
insb
push
fidivrs
jle
xor
inc
nop
pop
cld
add
mov
pop
dec
repz
icebp
loope
push
cld
scas
dec
inc
add
jne
inc
adc
jl
sbb
into
adc
or
add
test
std
es
and
movsb
popa
and
aad
jp
and
mov
add
movsb
loope
sub
inc
xchg
push
xor
dec
sub
roll
iret
loop
mov
rclb
mov
fs
mov
in
mov
cmpsb
cmp
push
insb
fld
mov
and
mov
and
gs
lods
fistps
add
scas
mov
loope
into
lock
mov
in
pop
adc
and
outsl
adc
test
cmp
sub
jp
shrb
xor
aad
cmp
jmp
push
mov
js
icebp
dec
sarb
aad
xlat
mov
inc
or
into
in
arpl
pop
mov
or
fcompl
nop
js
fsubrs
int3
jge
mov
xchg
mov
adc
add
push
outsb
xchg
add
xchg
nop
jne
pop
pop
repnz
mov
xor
rcrl
and
inc
in
lds
js
inc
outsb
ret
jae
std
stc
sub
fxch
sub
xor
jge
test
sub
scas
cmc
jg
loopne
jns
dec
mov
dec
arpl
rolb
push
inc
mov
in
fsubp
jbe
loope
das
xor
cmp
scas
jle
jns
mov
push
jle
addl
push
sbb
lods
loope
jbe
repz
enter
jnp
cmp
loope
xchg
aaa
je
mov
stos
inc
testl
dec
xchg
mov
movb
dec
push
outsb
push
divb
add
inc
sahf
push
add
lds
pop
outsl
xchg
mov
cmc
out
jno
fsubrl
inc
pop
jne
cld
jl
dec
fs
js
add
popf
and
out
dec
loope
mov
cmp
xor
cmp
push
arpl
pop
cs
stc
xor
jne
push
ret
gs
arpl
mov
mov
xchg
testb
cmpb
mov
xchg
pop
pop
in
jno
xchg
pop
mov
loopne
popl
imul
cwtl
add
ljmp
xchg
fcompl
pop
decl
dec
cmpsl
adc
and
lock
mov
cmp
fstl
mov
pop
movsl
push
dec
push
push
mov
testb
clc
xchg
xor
pop
loope
les
sbb
mov
insl
das
push
sahf
hlt
movsl
ret
or
or
or
push
cmp
sbb
in
fdivs
adc
jbe
idivl
jbe
sti
test
mov
inc
leave
pop
rclb
test
pop
pop
sbb
aad
add
test
inc
mov
rcrl
jno
pop
pop
inc
sub
mov
cmpsb
loopne
jns
lods
aam
rcrb
cmp
stos
push
es
mov
outsl
inc
int3
adc
and
jns
cld
cltd
add
lods
mov
cld
xor
cmp
enter
adc
dec
int
psllq
jbe
aam
mov
and
cmp
xchg
pushf
pop
fs
sub
nop
mov
cmp
imul
lcall
shl
dec
in
movsb
jo
sub
iret
lock
out
cmc
shrb
xchg
and
fistps
jbe
fsubrs
jno
addr16
aam
loope
jbe
sub
mov
lret
mov
out
aam
das
jge
mov
fnstcw
arpl
xlat
mov
inc
jge
sti
dec
sub
inc
pop
cld
and
mov
mov
mov
add
mov
mov
andl
and
aas
lahf
into
fildll
mov
dec
mov
mov
nop
mov
ficoms
iret
pusha
mov
mov
jns
and
jp
mov
or
stos
sbb
dec
sub
stc
enter
scas
insl
loopne
addl
imull
and
aas
and
inc
xlat
mov
jmp
cwtl
faddl
add
sub
sti
dec
inc
call
pop
popa
push
addr16
mov
jl
out
jb
test
jno
fidivl
cmpb
pusha
lds
mov
pop
pop
mov
cmc
xchg
out
aaa
cli
xchg
xchg
loop,pt
mov
adc
jmp
and
push
mov
push
sbb
cmpl
sbb
jmp
or
movsl
outsb
lea
push
mov
rclb
and
call
fiaddl
lods
pop
scas
cld
int3
aad
push
fucomip
jge
repnz
xorb
mov
or
pop
cmp
dec
sar
inc
inc
inc
lahf
cli
or
aaa
fsubrl
dec
sub
mov
imul
add
movl
std
mov
inc
dec
fistpl
pop
add
fs
inc
repz
mov
mov
pushf
add
xchg
iret
sahf
popf
mov
out
mov
ficoms
dec
jno
add
mov
mov
mov
mov
test
imul
stc
popf
push
lret
inc
dec
mov
fimuls
inc
sbb
add
test
dec
jmp
int3
pushf
and
outsl
pop
or
jbe
jo
imul
jb
adc
mov
popf
mov
lods
in
pop
hlt
out
and
sub
fdivs
jl
faddl
pop
xor
sbb
sbb
or
pop
insl
mov
pop
into
in
pop
popf
jmp
push
imul
je
not
insb
mov
bound
cli
sub
mov
mov
out
loop
dec
jo
rcrb
arpl
sbb
and
ljmp
pop
push
mov
mov
mov
hlt
es
inc
lret
mov
movsl
rorl
mov
or
inc
xor
cmp
mov
popf
sub
insl
dec
inc
shll
popf
inc
mov
lret
sub
mov
xchg
iret
dec
shrl
mov
rcr
pop
sub
mov
dec
sub
sbb
jno
movlps
rcrb
popf
inc
jmp
aad
mov
mov
jl
xchg
push
fwait
xchg
nop
lods
ror
mov
bound
loope
popa
rorb
enter
jae
in
cmpl
cmp
loope
les
add
inc
jnp
fwait
adc
shll
or
adc
cmp
ds
mov
xor
adc
pop
dec
adc
call
and
popa
leave
sub
inc
pop
mov
lahf
int
add
sbbb
inc
mov
inc
js
mov
inc
cmp
xlat
push
lds
add
lcall
ror
subb
push
bound
and
lea
out
les
jg
pop
daa
rcrb
je
pop
xlat
mov
in
push
movsl
nop
pop
pop
jmp
or
pusha
inc
std
pop
jns
repnz
fwait
movl
sbb
and
std
les
or
push
test
fnstcw
fadds
jmp
xor
and
cmc
std
pop
mov
push
pop
insl
outsb
pop
lods
cltd
jo
sbb
jl
ficoms
scas
repnz
mov
push
pop
sti
out
fdivrp
sbb
outsb
addr16
mov
pop
inc
adc
pop
iret
xchg
sbb
push
mov
push
sti
mov
jecxz
fidivs
mul
sub
inc
movsl
mov
dec
popf
pop
and
insl
pop
ret
push
jg
test
mov
daa
shlb
jnp
mov
sti
mov
xor
push
ficomps
je
pop
mov
xchg
xor
adc
fsub
inc
xor
mov
dec
movl
neg
pop
pop
mov
and
aaa
sbb
call
sub
fxch
mov
stos
mov
push
stos
pusha
mov
mov
pop
add
js
out
out
sahf
jp
xlat
fcom
arpl
sub
ja
jecxz
jno
aaa
negb
adc
clc
mov
icebp
pop
push
lea
mov
jl
mov
lods
jl
mov
fldl
repnz
xor
or
xor
mov
jecxz
fistl
cmpsl
xchg
sub
xchg
pop
dec
sbbl
rcll
jno
js
mov
jp
push
mov
jno
dec
xor
ret
mov
xchg
dec
or
or
push
push
mov
add
aas
push
ss
enter
adc
inc
cmp
repnz
xor
cwtl
sbb
sahf
mov
stos
push
in
sahf
sbb
rcrl
mov
scas
mull
add
cltd
sbb
cwtl
pop
dec
and
jmp
mov
sub
sarb
inc
bound
sahf
add
enter
cltd
or
fnstsw
sub
sub
xchg
insl
es
jns
cmp
cwtl
pop
or
ss
and
pop
leave
insl
or
add
out
loope
pushf
dec
call
dec
inc
adc
lods
ljmp
lea
cmp
lcall
arpl
test
cli
cmc
icebp
inc
push
mov
mov
outsb
in
mov
mov
push
sub
test
mov
loopne
inc
stos
cltd
scas
lods
lcall
pop
idivb
push
xchg
sub
xchg
sub
cmpsb
lods
jbe
movsb
push
push
adc
les
clc
fisubl
into
inc
fwait
cld
lea
jp
push
cltd
xchg
daa
cmp
test
cmc
mov
in
leave
mov
jecxz
lret
push
ljmp
adc
out
pop
push
push
xchg
jge
sub
push
push
push
push
mov
xchg
mov
xchg
repz
repz
xor
pushf
psrlw
sti
mov
sub
add
idivb
mov
adc
xchg
call
mov
je
xor
sub
or
cmpsl
xchg
cmp
lea
pop
dec
xor
mov
repz
cltd
xor
ds
mov
bound
lcall
push
fwait
in
and
das
sbb
in
gs
sub
in
jmp
or
jne
or
lds
push
bswap
mull
fidivrl
test
packsswb
popa
fcompl
pusha
cwtl
cmpsl
ret
sbb
jmp
or
addr16
sub
incl
loop
repnz
cmp
and
pop
sub
lock
cltd
and
popa
es
sbb
and
and
push
insb
mov
maxps
mov
fcoml
push
insb
mov
js
add
mov
fdivrs
cs
jmp
dec
ret
jb
ret
xor
jbe
rclb
jno
jg
ljmp
dec
lock
push
xchg
movsb
ret
into
mov
hlt
cmp
icebp
loopne
stc
lea
mov
jmp
mov
addb
jns
ss
popa
inc
sub
sbb
add
inc
sarb
daa
xor
fistpl
xchg
adc
xor
in
or
push
xlat
in
adc
push
loop
ficoms
ret
std
call
test
and
pop
aam
insb
or
sub
cmp
dec
lock
addb
or
pushf
cmp
cmp
ficompl
es
scas
in
loopne
jo
ret
xor
xchg
and
imul
clc
je
lahf
mov
xchg
adc
cmpsb
sub
shll
dec
xchg
int3
push
xchg
jge,pt
pop
test
cmp
pushf
iret
cmpb
cmp
call
ret
popa
or
popf
push
ljmp
filds
mov
xor
mov
pop
push
jle
and
adc
mov
mov
minps
xchg
pop
or
jg
sbb
xchg
dec
dec
aad
xlat
aad
pop
mov
xchg
hlt
sub
jmp
adc
push
jo
test
xor
xchg
cmpl
mulb
inc
pop
subl
pop
gs
movsl
push
pop
xor
arpl
scas
leave
cli
cmc
push
frstor
fistpl
pop
in
sti
xor
sbb
inc
pop
jecxz
inc
fcmovu
pop
sub
adc
dec
lods
addr16
outsb
add
pop
aam
mov
xor
loope
insl
jecxz
sahf
sub
ss
xchg
sub
jnp
adc
inc
cmp
jecxz
int3
mov
lcall
cs
sti
insl
mov
fldln2
movsb
hlt
xor
ret
aas
fimuls
push
mov
xor
push
dec
fwait
bound
fidivl
inc
out
cmp
pop
out
sarl
xchg
ss
push
lods
sub
pop
mov
stos
pop
mov
jmp
or
pop
adc
sbb
mov
cld
and
shll
scas
pop
jb
and
dec
out
mov
test
xchg
xchg
scas
mov
sub
cmpsb
pop
cli
repz
sbb
dec
pop
rcrb
aam
cld
into
je
mov
jl
mov
frstor
add
push
jne
das
push
shrb
and
out
pop
in
cmp
les
jnp
nop
aas
sub
repnz
out
int3
push
pusha
insb
push
mov
push
popa
jp
out
lcall
test
mov
adc
push
clc
mov
xchg
cli
insb
push
mov
loop
ret
mov
jl
cmpsb
add
mov
popa
iret
test
cmp
or
xchg
mov
dec
fsts
mov
add
mov
test
test
test
lock
dec
outsb
outsl
lret
lock
cld
and
shlb
ficoms
or
add
lret
jp
repz
fwait
je
push
in
lea
out
gs
fidivs
sub
cmpsl
rcr
jnp
repnz
into
aas
pop
mov
leave
insb
cmpsl
out
inc
and
aaa
push
enter
dec
push
mov
jno
pushf
inc
dec
pop
je
pushf
repnz
sub
fdivl
cmp
ficompl
bswap
and
fistps
mov
xchg
hlt
xor
inc
pop
gs
inc
pop
push
rorb
cwtl
dec
add
test
xchg
xchg
cmc
pop
xchg
push
sti
icebp
pop
faddl
dec
and
nop
sbb
fnstsw
adc
clc
popa
xlat
inc
hlt
or
push
inc
nop
dec
pop
dec
mov
fmuls
fdivs
int3
adc
and
sarb
dec
call
inc
std
adc
add
aad
das
lcall
fldenv
and
push
ljmp
fwait
pop
pop
popl
xchg
in
stc
inc
xor
cmp
lahf
aam
push
jo
stc
pusha
int
repnz
add
data16
push
dec
add
push
or
dec
sbb
mov
cmp
adc
in
sar
call
xor
jns
jg
int
adc
jnp
imul
adc
fimull
imul
cmpsb
jae
mov
mov
and
sar
and
ret
daa
jp
xlat
and
stc
push
out
andl
in
jmp
jb
sbb
repnz
push
insb
dec
ja
cmp
cmp
int
loope
push
ja
psubq
out
scas
push
mov
inc
insb
and
out
rcr
das
leave
inc
ret
insb
stc
sbb
in
mov
das
mov
sbb
iret
cmc
jmp
test
and
es
pop
clc
dec
sbb
pop
push
out
cmpsb
fstpt
jp
mov
mov
ljmp
jno
shlb
sahf
mov
xchg
add
pop
add
in
push
out
jbe
scas
shr
faddp
das
cmc
sarb
mov
out
cltd
jge
push
mov
mov
loopne
mov
imul
or
adc
adc
jnp,pn
cmpsl
ret
aad
push
jbe
outsb
jge
popa
fadd
xchg
fs
pop
mov
int3
out
js
inc
mov
jne
push
xchg
lea
pop
mov
or
sarl
sub
daa
rcr
cmpsl
ljmp
inc
addr16
mov
fwait
mov
je
xor
adc
xlat
std
or
fbld
push
lcall
pop
pop
iret
ret
es
dec
pop
inc
pusha
rorb
cmp
lcall
loopne
xor
xor
ret
mov
pop
test
xor
xor
cli
push
popa
dec
xchg
arpl
push
movsl
jbe
pop
mov
rorb
pop
fdivr
leave
insl
adc
mov
sub
xchg
fidivs
cwtl
std
cmp
fcoml
inc
jnp
enter
add
xor
adc
loopne
jnp
inc
es
mov
or
rorb
and
rcrb
xlat
push
ss
fs
jecxz
or
pop
push
in
es
xchg
push
call
sub
mov
jmp
mov
addr16
mov
pop
push
dec
xchg
insl
pop
xorb
mov
adc
cmpsb
xchg
and
dec
and
cmp
dec
add
mov
es
push
ljmp
aam
push
lahf
mov
test
inc
ljmp
push
pop
inc
mov
sbb
jp
popa
add
cmp
push
fwait
cld
pop
mov
add
div
lea
mov
cmpsl
popf
ljmp
daa
mov
mov
std
mov
pop
out
xchg
insb
loope
sub
fwait
push
in
sub
jo
jo
and
shlb
pop
pop
int
dec
and
sbb
jb
or
inc
add
mov
pop
mov
sbb
repnz
scas
int
xchg
or
rcrl
cmp
xor
pop
aad
arpl
movsl
mov
jge
cs
jecxz
xchg
mov
add
sbb
xorb
int3
pop
pop
jmp
stc
fidivl
push
jp
ds
enter
add
mov
or
mov
and
ficoms
fsubs
cmpsb
lods
and
sbb
into
sub
mov
mov
js
and
xorb
sub
xchg
stos
das
cltd
insb
popa
mov
es
lret
out
mov
xorl
les
xor
jno
jmp
or
inc
std
ret
call
addr16
and
icebp
ret
push
loopne
jecxz,pn
out
jmp
xor
adc
fcomip
stos
jne
mov
cs
nop
repnz
inc
mov
xor
jge
lock
and
pop
je
call
jl
dec
fcomps
pop
in
push
mov
or
iret
in
add
inc
xchg
in
xchg
sbb
push
inc
data16
aad
mov
sti
mov
push
aad
mov
inc
adc
sub
cmpsb
dec
add
add
movsl
or
xlat
adc
sbb
arpl
stc
mov
dec
cli
in
jns
or
add
xchg
jge
push
xor
std
aad
addb
enter
xlat
cmp
nop
incb
in
arpl
popf
add
mov
movsb
imul
in
dec
shlb
addl
mov
fnsave
jb
and
or
icebp
cmc
iret
je
jne
insl
std
dec
mov
mov
lods
and
popf
int3
cltd
andl
jno
xchg
ret
push
push
jnp
mov
fldenv
adc
jmp
lods
fisubrl
cwtl
popa
or
repnz
lock
push
mov
sbb
lcall
jb
cmp
ret
or
fcomp
pop
mov
cmp
inc
cmp
xor
add
daa
push
mov
lahf
cmp
aam
ja
xchg
mov
jl
dec
pop
inc
gs
lods
xor
cmp
in
push
shr
push
xchg
imul
jp
negb
pop
or
sti
jle
xchg
mov
js
scas
fs
adc
pop
and
lahf
mov
cmc
mov
jmp
add
sub
andl
outsl
clc
std
jmp
dec
or
std
aad
js
int3
push
cmpsl
les
jecxz
adc
repnz
pop
mov
int
rcrb
sub
push
xchg
fsub
stc
push
jge
rcrl
cmc
sub
xor
insb
jae
ja
xchg
fdivrl
sbb
mov
jmp
lcall
mov
xchg
inc
add
decb
insb
pop
cmp
pusha
sbb
inc
pop
adc
mov
cltd
jle
cs
popa
cli
sbb
adcl
in
and
arpl
mov
sub
rcr
xor
andb
test
and
jne
xor
lret
jle
push
mov
inc
inc
dec
aas
sub
das
fdivr
cmp
cltd
mov
int3
or
jae
int
pop
pop
or
shll
orb
out
jbe
jl
cmp
xor
dec
adc
bound
xor
push
mov
sahf
jno
pop
pusha
insb
push
loope
or
lret
pushf
mov
fsubl
outsb
inc
pop
mov
lods
test
xor
insl
jb
sbb
jmp
das
xchg
sub
lret
push
cmp
adc
inc
dec
mov
outsl
inc
repz
outsl
and
or
fcomps
cmp
cld
cmp
and
adc
jae
ja
cmp
nop
test
sub
lock
or
jmp
imul
popf
and
pop
fidivl
sbb
outsl
mov
cmpl
cwtl
xchg
stos
push
sub
adc
mov
cmp
cs
jecxz
daa
mov
mov
scas
mov
mov
lret
in
pop
je
inc
and
add
rcrl
lds
aaa
mov
xchg
pop
les
arpl
jl
shl
xlat
aad
aaa
std
jmp
jb
je
gs
shr
fnstcw
add
and
pop
push
daa
dec
cmp
adcl
icebp
xchg
repz
dec
adc
xchg
inc
mov
push
int3
fwait
xchg
in
scas
mov
repz
jnp
lahf
pop
pusha
push
icebp
dec
test
jae
xor
cmp
and
mov
inc
ret
adc
lcall
or
pop
and
xchg
jne
xor
push
ret
add
out
fs
jb
mov
insb
dec
mov
xor
push
loop
xchg
test
int3
stc
mov
enter
cmpsl
sbb
pop
sub
jl
ss
ss
cmp
mov
hlt
sub
ljmp
icebp
pop
cmp
sbb
cmp
push
mov
lret
out
and
inc
push
mov
xchg
movsb
mov
push
popf
mov
and
pop
fiadds
jno
test
test
pop
imul
dec
stos
mov
rol
cli
mov
and
cmp
into
ds
or
push
cmp
orb
jo
ret
jb
push
xchg
push
cmp
mov
jbe
test
lods
mov
pushf
adc
inc
aas
pop
mov
or
dec
hlt
jb
and
cltd
pop
mov
xchg
mov
inc
cs
sbb
dec
pcmpgtd
xchg
aad
daa
lahf
clc
sbb
inc
pop
roll
cmpl
mov
sahf
je
into
ds
pop
xor
cmp
mov
in
xchg
jbe
lods
popa
cmc
and
cld
fwait
addl
pop
adc
xchg
push
adc
sahf
add
adcl
and
fsub
pop
arpl
loopne,pn
cmpsb
pop
iret
push
aam
dec
add
xor
dec
lcall
cmp
std
mov
fisubl
mov
xor
mov
mov
sbb
cmp
xor
insl
add
adc
mov
data16
jp
push
ror
cmpsl
jmp
pop
xchg
xchg
or
je
mov
movsl
pop
out
dec
inc
mov
dec
cmc
push
xor
pop
and
adc
bound
js
pop
and
pop
in
or
in
daa
ss
jb
fisttps
or
fldt
dec
mov
fucomp
add
out
jae
adc
sub
stc
mov
filds
fs
loopne
and
pop
or
mov
add
or
sub
testl
sahf
mov
out
fldcw
or
fcoml
cmpsb
aaa
xchg
mov
mov
inc
and
push
test
sub
adc
push
cmpsb
mov
mov
icebp
pop
and
dec
sub
sbb
pop
pop
adc
mov
jne
adc
in
push
clc
jmp
xor
pop
lahf
iret
mov
out
pop
popf
add
mov
repz
jmp
mov
add
fisttps
sub
adc
std
pop
js
inc
fdiv
pop
outsl
test
pop
dec
and
stos
xor
fwait
dec
mov
cmpl
or
lahf
push
jecxz
pop
nop
mov
test
jae
inc
pop
lods
sub
movsb
pushf
jno
jbe
xchg
push
aad
cmp
push
cmp
push
repz
dec
adc
mov
nop
mov
push
sbb
dec
cmp
sub
mov
imul
dec
sbb
sub
cli
mov
clc
dec
jbe
and
and
clc
ds
cltd
jmp
lret
rcll
push
mov
test
sub
fs
mov
sti
repz
sti
sbbl
mov
jge
bnd
cmp
cmp
dec
adc
fwait
inc
ljmp
push
dec
jmp
loope
inc
lret
insl
aas
mov
shll
in
sub
mov
sbb
and
or
jecxz
jle
inc
scas
sbb
xor
mov
sub
mov
mov
push
lods
out
pop
mov
pop
mov
dec
ds
inc
mov
clc
setp
xor
or
leave
sbb
ljmp
inc
sahf
ljmp
pop
ds
rcl
or
sbb
sbb
lea
cmp
loopne
add
mov
rorl
orb
out
inc
xor
add
addr16
imul
or
ret
push
sub
std
ljmp
test
test
add
aaa
push
pop
daa
enter
adc
dec
cli
push
stos
pop
or
xchg
inc
cmpsb
mov
pop
adc
xor
popf
pop
cmp
arpl
loope
data16
jmp
xor
mov
inc
mov
sbb
es
inc
mov
bound
aaa
imul
push
push
jecxz
pop
xlat
mov
subb
sbb
inc
lahf
mov
cmp
fnstcw
out
mov
jl
jle
call
adc
pop
mov
nop
inc
add
and
iret
and
notb
cwtl
sub
inc
pop
sbb
mov
mov
dec
add
es
nop
xchg
lret
adc
mov
pop
sahf
clc
and
mov
and
ficoml
rorl
sahf
jns
loopne
mov
fwait
and
pop
push
cmpb
popa
cmpsb
jo
push
lahf
dec
sub
sub
inc
dec
iret
lds
dec
cld
dec
adc
cmpsl
in
sbb
outsb
push
add
lods
push
ja
imul
cmp
xchg
cmc
xor
int
addr16
cli
cmc
inc
flds
js
test
in
jns
lods
imul
dec
clc
fs
dec
lock
ljmp
cli
pop
xchg
cmp
ljmp
stos
pop
jmp
outsb
or
add
sbb
jbe
dec
ficompl
aad
jae
cmp
into
xchg
in
xchg
adc
ret
mov
jecxz
adc
pusha
fiaddl
dec
add
hlt
in
cmc
cmp
mov
in
arpl
mov
add
loop
xor
imul
dec
inc
out
sub
jmp
add
lock
xchg
sti
or
dec
mov
sbb
imul
std
sti
test
mov
push
and
rcl
xor
mov
outsl
repnz
test
sub
mul
out
rol
insb
int
daa
jbe
and
fwait
jae
pop
fmull
or
cwtl
outsb
mov
ds
movsl
jno
mov
inc
inc
pusha
or
addl
outsb
les
cli
mov
in
jne
sbb
jp
push
dec
pop
in
aad
hlt
pop
je
clc
test
mov
add
push
loop
shlb
aam
ljmp
add
leave
out
sub
adc
adc
mov
pop
and
mov
pop
test
mov
cmp
dec
cmp
rcr
lea
dec
sahf
or
int3
jp
push
cltd
mov
aas
inc
sub
adc
mov
lcall
mov
aam
xchg
and
in
adc
jl
mov
int
dec
xchg
pop
cld
mov
add
mov
sahf
mov
dec
add
or
cmp
push
jb
dec
ret
mov
insl
arpl
imul
inc
xor
mov
mov
push
fildl
jns
dec
shl
lods
mov
mov
and
mov
push
xorl
cmpsl
inc
fistpll
sub
dec
cmp
add
push
loope
sub
mov
fimull
outsl
in
call
cmp
outsl
addl
xor
inc
push
aas
or
out
andl
and
sbb
das
addl
sub
mov
dec
fcoms
mov
xor
pop
fsubs
movsl
sbb
xor
cs
pop
test
scas
das
fisubl
xchg
shr
in
add
dec
cmp
sub
imul
rcrl
fwait
sub
xchg
xlat
add
and
ss
movhps
mov
inc
cmp
fidivrl
fisubrs
cld
inc
clc
push
xchg
in
inc
ret
mov
dec
repnz
pop
and
cmp
push
jecxz
movsl
mov
pusha
or
push
orl
loop
dec
jns
add
ljmp
nop
cmp
scas
xchg
xlat
or
sbb
push
jb
jnp
out
push
cmc
dec
movsb
mov
test
rcr
mov
stos
xchg
jge
rol
and
cmpl
lock
cmc
in
mov
lret
mov
dec
jns
sahf
shlb
cmc
push
sahf
inc
jmp
test
mov
pop
movsb
xchg
test
and
mov
mov
adc
pop
mov
rcrl
push
xor
xorb
scas
and
mov
mov
js
fsin
cmpsl
cmp
inc
fistl
leave
push
stc
add
push
add
jl
cltd
imul
or
pop
fstps
arpl
mov
mov
loope
push
shrb
push
fcoms
pop
ljmp
mov
adc
push
jb
adc
xchg
pop
push
dec
pop
call
ret
faddl
sub
mov
pop
push
popa
dec
and
notl
pop
sub
roll
scas
inc
or
lods
popa
jmp
cwtl
or
mov
shlb
jne
and
sahf
lea
jecxz
mov
repz
lcall
jg
out
xorb
mov
roll
dec
add
xor
sbb
test
pop
mov
and
add
sub
mov
add
cmp
mov
mov
hlt
movsl
test
jns
frstor
dec
push
outsl
mov
xor
and
ja
adc
add
std
jecxz
pusha
pop
cmp
add
jns
adc
ljmp
pushf
mov
ljmp
in
add
nop
sbb
xchg
xchg
out
hlt
jg
lret
scas
xlat
and
movsl
imul
hlt
stos
pop
scas
xor
push
xchg
mov
jecxz
cmp
sbb
daa
mov
jae
mov
push
mov
mov
or
pop
jo
sub
lods
sub
dec
add
jnp
iret
lcall
sub
adc
fimull
insb
pushf
mov
roll
daa
pop
fimull
test
push
in
mov
push
push
xchg
cmpsb
outsl
mov
push
or
push
xchg
push
inc
cmp
gs
out
mov
xor
loopne
pop
adc
push
and
jb
xchg
add
icebp
icebp
ds
iret
fimuls
ret
jecxz
and
cmp
fs
std
jne
mov
shl
jmp
jb
dec
lret
mov
adc
jae
inc
and
and
pop
in
std
cld
mov
pop
adcb
lcall
adc
pop
push
mov
shll
sarl
push
and
movsl
or
std
push
xchg
repnz
flds
lcall
and
cmpsb
outsl
xor
mov
mov
mov
lds
adc
imul
jae
mov
xchg
push
adc
in
mov
mov
sbb
je
xchg
fmull
sub
idivb
xchg
xor
enter
mov
pop
sub
pushf
xor
xchg
bound
mov
push
outsl
jge
movsb
sub
unpckhps
sub
cwtl
xorl
pop
hlt
pop
cmp
pop
lods
pusha
scas
test
je
adc
xor
sbb
inc
jae
insl
inc
ss
push
jmp
mov
cmp
rorl
cmpsb
vcvtsi2ssl
push
imul
jg
mov
push
and
adc
xor
fs
filds
test
shlb
pop
lds
push
or
xchg
cmp
xchg
mov
jnp
cmp
xor
rolb
arpl
outsl
dec
jmp
mov
jmp
aas
int
mov
cmc
loopne
dec
lret
ljmp
aaa
ret
out
sbb
inc
popf
cmp
jne
int
mov
pop
dec
pop
test
scas
adc
lds
mov
mov
scas
inc
movsb
js
loopne
jl
adc
pop
mov
xchg
pop
mov
adcb
scas
xchg
ret
jae
test
lods
lcall
jne
jmp
ret
cmp
adc
insl
cwtl
jecxz
arpl
push
test
outsb
daa
mov
aas
addr16
imul
pop
push
pop
add
out
jmp
lods
or
sahf
mov
bound
lods
subb
jns
pop
aas
shlb
sbb
adc
lock
loope
call
scas
test
inc
pop
int
in
push
jo
add
sub
mov
popf
js
mov
cmpsb
xor
cmp
int3
sbb
and
shlb
arpl
add
mov
adc
mov
cmpsl
and
inc
pusha
out
xchg
ja
mov
cmpsb
add
jns
sbb
add
push
xchg
sub
aas
loope
mov
and
or
jge
repnz
or
jl
inc
jmp
push
sbb
inc
cmp
cmpb
add
rcll
xlat
inc
cltd
mov
loopne
ss
cld
add
cmp
mov
mov
das
leave
cmp
push
stos
jbe
mov
jecxz
aad
insl
sbb
cmp
pop
sbbb
in
test
adc
ret
adc
inc
hlt
pop
push
fucom
leave
adc
jnp
xor
sub
test
dec
test
xor
mov
cmp
ja
jle
xchg
cltd
xchg
and
mov
or
lods
mov
sub
imul
icebp
fildl
out
mov
add
jl
std
icebp
inc
repnz
loopne
xor
jnp
inc
xor
rep
xor
fimuls
xchg
dec
out
and
cs
cmp
lahf
femms
mov
sub
dec
dec
push
mov
or
mov
scas
sti
cmp
test
mov
xor
je
inc
push
outsl
mov
in
in
lds
pushf
dec
sbb
lret
into
mov
jp
push
or
cmp
xor
jecxz
adc
repz
xchg
ja
dec
arpl
popa
lock
cs
enter
adc
add
std
sbb
mov
fisttpll
cmpsb
ljmp
fidivs
mov
pusha
pop
push
mov
add
xchg
inc
aas
push
mov
inc
mov
mov
stos
fimuls
in
cmovge
jmp
add
rcrb
or
mov
xor
leave
pop
fmull
frstor
or
xchg
gs
arpl
adc
mov
hlt
and
mov
ret
or
push
imul
xor
imul
push
xor
jmp
adc
sbb
dec
inc
rcl
test
out
adc
aam
xchg
push
stos
inc
rcrl
and
call
jge
mov
add
out
mov
sbb
ret
repz
xlat
adc
aad
dec
insl
inc
lcall
arpl
xor
imul
adc
sbbb
mov
mov
cltd
test
xor
dec
insl
clc
pop
and
inc
das
xchg
xchg
mov
mov
jmp
add
leave
testb
dec
fwait
pop
test
rcr
pop
jns
daa
repnz
jmp
pop
inc
cmpsl
xchg
fnstsw
enter
iret
sbb
pop
notl
sbb
enter
cs
lock
inc
dec
mov
stc
mov
mov
fs
sbb
inc
push
pop
add
push
mov
mov
sbb
sub
add
std
jno
outsb
insl
lret
fistl
test
ret
in
aas
stc
jl
frstor
inc
xor
nop
add
daa
and
out
or
and
push
lcall
push
jge
imulb
jle
fdivs
mov
imull
cmp
adc
xor
mov
sub
mov
mov
idivl
pushf
in
mov
dec
rcll
pop
sbb
lods
xchg
inc
jp
dec
pop
repz
and
inc
sbb
pop
mov
cmp
fisubs
aad
xor
mov
adc
push
xchg
test
in
popa
lea
push
jl
jl
and
pop
imul
in
lret
outsl
adc
into
cmp
push
loop
repz
icebp
mov
fildl
or
mov
fildll
push
fs
loopne
inc
addr16
pusha
pop
popf
imul
jae
pop
lds
gs
fstpl
sbb
insb
pusha
cli
inc
jmp
ds
pop
cmp
push
jo
fucomip
add
xor
cmp
xor
jnp
cld
lret
inc
inc
sub
shr
push
or
adc
lods
add
movsl
aaa
addr16
pop
in
jmp
mov
mov
ror
cmc
mov
xchg
ret
add
cmp
pushf
dec
out
sbb
mov
repnz
clc
cmp
push
xorb
mov
fisttpll
mov
mov
or
mov
popl
lods
add
push
imul
push
and
dec
fnstenv
shl
xchg
add
and
subl
test
cmp
int
pusha
fstpt
movsb
jnp
test
sbb
mov
aad
mov
xchg
int
mov
inc
sub
cmpsl
sub
push
cli
cs
dec
movb
push
xor
sub
mov
mov
ret
push
das
jl
loopne
fdivs
mov
cmc
mov
add
inc
xor
in
jnp
das
aad
inc
popa
cmpsb
aam
jmp
push
push
jle
xchg
faddl
mov
andb
inc
xchg
and
int3
aam
std
in
mov
mov
adc
stc
aas
ljmp
jge
inc
popa
mov
push
pop
push
dec
dec
int
les
in
repnz
xchg
xor
jnp
add
mov
mov
inc
sub
cs
push
mov
mov
insl
pop
cmpsb
fdivrl
icebp
jno
js
pushf
push
mov
daa
aam
fmulp
cmpb
or
jg
jb
adc
jl
in
mov
gs
mov
fildl
add
test
xlat
fisttpll
scas
add
jl
icebp
sbb
jo
sbb
jbe
das
int
or
clc
das
mov
shrb
clc
in
cmc
bound
xor
sbbb
xor
xor
dec
jno
sub
fldcw
lock
fistps
mov
out
cmp
adc
aaa
sbb
icebp
push
movsl
scas
xchg
mov
mov
xchg
lret
dec
push
sar
cmpsb
sbb
or
xor
pop
jmp
pop
test
negb
pop
ffree
outsl
call
loope
dec
inc
xchg
pop
fdivr
or
sbb
mov
mov
sub
fdivl
mov
xor
jp
jge
cmp
push
aaa
sbb
int
daa
pop
loop
push
fidivs
std
mov
mov
ret
pop
scas
push
fcmovnu
or
sahf
dec
or
dec
rcrl
cwtl
arpl
out
sbb
sbb
jge
push
jmp
xchg
ret
push
inc
jmp
adc
mov
jl
jns
lar
xchg
jmp
cmpsl
cmp
dec
sbb
xchg
ljmp
sahf
jne
pop
sar
ds
sub
movsl
outsb
call
jb
mov
in
xchg
leave
repnz
inc
ds
dec
in
pop
mov
add
jo
jle
popf
adc
sbb
ljmp
mov
cmp
adc
sahf
inc
jmp
push
lahf
push
arpl
subb
push
dec
sbb
out
mov
or
stos
inc
cmp
das
nop
and
xchg
dec
xor
rolb
subb
jl
jae
sub
mov
jg
mov
sub
repnz
and
xor
loop
rclb
sub
xlat
jbe
leave
fs
cmp
scas
imul
test
xchg
sub
cmpsb
ljmp
cli
dec
jge
mov
jg
cli
int3
ss
sti
lods
fistpl
xchg
jmp
popf
xlat
scas
sbb
divb
xor
subps
adc
ljmp
jge
xchg
cmp
mov
and
rorb
inc
push
dec
clc
push
mov
cmp
sub
add
lods
data16
pop
cmp
movsb
int
jmp
sahf
xorb
sub
cmp
sub
fs
mov
js
gs
xlat
xchg
cmpsl
pushl
mov
jno
clc
cli
push
stos
insb
repz
push
aad
inc
push
dec
jge
aad
test
int
push
inc
bound
xor
bound
bound
scas
dec
ja
xor
and
jle
aam
aam
popf
sub
jle
loopne
push
xchg
and
lds
cmpsl
push
xlat
dec
jg
pop
mov
int
mov
jns
pushf
iret
adc
stos
jno
fsubl
cmp
ljmp
and
sub
push
xchg
js
add
mov
sbb
add
add
adc
adc
or
leave
das
pop
push
insb
mov
js
cmp
xor
sti
fwait
int
das
aad
xorb
adc
pop
mov
int3
or
xchg
fisttps
add
jmp
pop
sbb
fucomip
stc
in
adc
mov
subl
je
iret
jo
in
lcall
sbb
outsl
jo
into
pusha
mulb
push
lea
loopne
fsubrl
xchg
add
mov
mov
lret
rcr
sub
xchg
fiaddl
fmuls
test
aam
add
sub
dec
cmc
loopne
add
test
sbb
test
add
pop
sbb
stc
rclb
inc
sbb
xlat
jecxz
imul
mov
mov
xor
mov
mov
and
lods
pop
fwait
movsb
jb
sub
pop
dec
leave
mov
push
insl
sti
dec
mov
and
xchg
lods
rep
fisubrl
cmp
mov
inc
in
popf
fs
subb
cli
movsb
icebp
pop
jnp
jecxz
sahf
mov
add
add
js
sbb
cmp
es
adc
adc
add
mov
push
cs
test
xchg
out
cmpsl
push
inc
out
loopne
cmpsl
ror
pop
hlt
xchg
js
xchg
iret
xchg
ds
call
bswap
test
nop
cmp
popl
fildl
inc
sub
add
lea
daa
dec
ja
cmp
je
xor
outsl
inc
jge
jg
andl
dec
call
rcrb
fdivr
daa
mov
add
pop
into
cmpsl
stc
pop
rcl
push
lahf
call
adc
mov
stos
fidivs
inc
ljmp
or
or
cld
or
into
jp
insb
mul
stos
cltd
push
aad
pop
leave
lret
mov
movsb
shlb
rcll
insb
in
scas
movsb
pop
dec
jge
lret
aas
or
cmpsl
scas
inc
cmp
lahf
sub
jnp
int3
mov
mov
outsl
dec
mov
add
hlt
loope
sub
pop
mov
aaa
cmp
scas
mov
fimull
jecxz
cmp
test
sahf
out
mov
gs
xor
sbb
int
loope
mov
std
pop
adc
aas
les
outsb
data16
fwait
xor
ret
bnd
mov
lods
cmpl
pop
dec
mov
mov
add
cli
mov
je
add
fsubp
pop
out
xchg
or
lods
icebp
call
mov
in
popa
outsl
or
clc
jmp
in
mov
imul
test
mov
xchg
jbe
aad
nop
fdivs
push
sbb
jo
push
outsl
lahf
into
xor
jl
jno
jp
mov
mov
aad
pop
addr16
clc
push
orb
cmp
punpcklbw
inc
inc
cmp
outsb
mov
adc
dec
xor
add
xchg
xchg
mov
or
pop
or
mov
addr16
push
inc
or
mov
jp
push
pop
js
push
daa
adc
pop
or
lret
data16
mov
hlt
sub
or
cli
test
arpl
cmp
dec
je
out
pop
imul
cmp
xchg
movl
mov
enter
sub
call
std
xchg
addr16
lods
xchg
sbb
and
and
mov
push
ja
sub
lcall
testb
sbb
lahf
mov
pop
data16
and
cmp
or
popa
inc
aas
outsb
push
aaa
sub
pop
dec
notb
push
test
mov
cld
fwait
or
mov
les
test
adc
aaa
iret
cmp
fsubl
shlb
dec
inc
out
mov
xchg
aaa
dec
push
jecxz
es
mov
mov
out
push
into
lret
pop
pop
mov
mov
jae
lcall
and
add
sti
jns
shrw
jle
rclb
mov
jne
xchg
scas
or
stos
lahf
or
add
in
ror
pop
rcrl
adc
push
mov
shll
jb
fsubrs
mov
add
icebp
test
mov
mov
cmc
push
xchg
push
sub
jbe
sub
insb
sbb
pop
push
xchg
add
xor
ds
movl
inc
xchg
push
popa
jb
xlat
pmulhw
loop
mov
jle
mov
add
xor
sbb
cmp
lock
aam
xchg
imul
aad
pushf
mov
fwait
call
aaa
cmp
xchg
mov
sub
insb
ja
test
stos
mov
lea
sub
mull
sub
int
push
adc
fdivrp
adc
jbe
dec
and
add
outsb
mov
fdivr
push
lcall
dec
hlt
inc
xchg
jo
jp
paddsb
inc
cmpsb
ljmp
and
xchg
out
sub
mov
imul
shll
pop
vmwrite
outsb
mov
jb
repz
push
xchg
or
dec
lds
faddl
pop
sbb
mov
pop
scas
mov
sahf
lret
xor
cmp
imul
cmp
mov
fisubrs
sahf
pop
pusha
cmp
cmp
mov
and
pop
cmpsb
jg
add
dec
mov
and
out
xchg
rcr
xchg
lret
inc
or
jg
pop
loopne
adc
push
fldln2
stos
pop
in
pop
jp
bound
shll
mov
sub
adc
lea
ds
int3
daa
mov
inc
scas
ret
lcall
stc
jg
push
pop
lret
jno
mov
adc
adc
pop
nop
add
lods
sar
push
mov
sbb
xchg
jmp
popf
sub
push
adc
ficoms
addr16
iret
push
mov
xchg
adc
loopne
stc
pop
sbb
and
sub
push
or
adc
int
insb
imul
and
dec
std
shr
aam
sub
adc
daa
mov
cmp
popf
cmp
cmpsl
push
mov
lock
mov
je
xor
getsec
aad
outsb
negb
dec
dec
and
cmpl
mov
mov
arpl
dec
mov
sub
dec
sahf
mov
leave
sbb
sbbb
hlt
aam
sti
mov
push
popa
pop
pop
leave
push
xor
fsubr
mov
mov
push
jg
lods
xchg
fisubrl
xchg
push
sub
es
adc
mov
mov
test
shl
pop
ljmp
and
and
pop
cltd
ret
imul
mov
mov
aas
xchg
add
test
xchg
or
fwait
out
call
mov
ja
mov
outsl
dec
daa
xchg
sub
inc
rcrb
aad
add
mov
mov
dec
call
stos
movsl
mov
in
out
fnstenv
popa
pop
fwait
pop
add
ja
das
pop
pop
mov
fmul
pop
jg
mov
addb
pcmpeqw
or
loopne
push
xor
push
out
mov
pushf
push
fwait
rolb
sbb
stc
xlat
push
adc
shlb
mov
stos
mov
aad
add
pop
lds
lock
shll
xchg
or
loope
aad
xchg
mov
cwtl
pop
adc
add
sub
insl
js
pusha
jl
sbb
data16
mov
or
int3
insl
xchg
mov
mov
add
call
or
iret
or
cmpsb
fs
cs
sti
xchg
inc
test
jo
in
mov
mov
scas
cmp
sti
adc
rol
jae
insl
xchg
mov
add
xor
dec
test
sbb
icebp
lods
add
add
add
enter
lahf
into
mov
test
jmp
out
clc
mov
fcomp
dec
fs
xchg
int3
stc
jne
push
call
mov
or
fistl
mov
or
shl
cli
sub
andb
sbb
jge
clc
call
jl
add
lcall
dec
in
sbb
dec
sbb
mov
mov
fidivl
subb
fbld
inc
sbb
incl
sbb
arpl
movl
or
adc
xor
xchg
cs
inc
imul
sub
mov
movsl
dec
dec
sti
adc
mov
add
push
mov
xchg
out
jno
sub
add
jae
adc
subb
in
xor
mov
in
add
ret
add
shl
dec
cltd
push
insb
aam
ds
or
andl
lret
pop
mov
and
subl
pop
aaa
ljmp
outsb
in
out
mov
cmp
and
cmp
add
sahf
xchg
icebp
mov
lahf
adc
lcall
xchg
mov
or
jbe
cmp
das
sbb
nop
ljmp
je
je
and
push
pop
sbb
inc
dec
dec
es
mov
pop
fwait
push
call
dec
xchg
adc
data16
add
lahf
and
add
pop
test
cmp
cmc
es
stos
cmp
jo
sbb
lret
test
ss
in
mov
bound
cli
push
xchg
push
pusha
ret
add
xor
mov
repnz
mov
sti
js
cmp
inc
scas
loop
stc
mov
fs
das
sbb
scas
pop
testl
arpl
mov
hlt
xchg
pop
inc
inc
mov
fs
xlat
xor
fmull
iret
fistl
out
loop
jae
mov
sub
add
push
xlat
pop
scas
sub
jge
or
gs
test
cmp
or
pop
pop
adcb
xchg
xchg
add
loop
mov
xor
les
and
jnp
xor
outsl
test
imul
jae
clc
pop
xchg
jno
rclb
shlb
jne
adc
dec
cmp
pop
in
loop
bound
dec
jecxz
adc
ss
cmp
adc
fs
add
sub
mov
jae
push
push
pop
testb
mov
push
repnz
pop
xchg
loope
jne
fistpll
rcr
rol
jb
popf
cmpsb
in
ja
ret
mov
les
sub
fmulp
mov
fnstenv
addl
jmp
shll
jecxz,pt
sahf
lock
ja
mov
test
xchg
movsb
shlb
cld
ror
test
mov
inc
lods
fistps
or
xchg
mov
sub
ja
push
shr
lahf
ret
shrb
js
or
push
cld
ss
push
mov
icebp
out
pop
xchg
into
inc
xchg
loopne
mull
fidivs
cld
adc
nop
les
cmp
xchg
arpl
fistps
add
rcl
mov
out
rcll
mov
and
jns
pop
mov
inc
push
xor
daa
dec
mov
test
out
add
in
push
sub
push
or
mov
or
pop
pop
aaa
jbe
jmp
cli
pop
sub
jb
dec
es
xchg
movsb
fwait
sub
in
pop
rol
cmc
sti
cld
arpl
es
push
in
xor
scas
mov
shl
es
pop
sbb
or
jmp
pop
loopne
movsb
mov
or
out
lret
adc
mull
fisttpll
xlat
or
aas
fs
mov
inc
dec
mov
jne
inc
push
ja
sub
or
cmp
adc
xor
mov
je
jle
mov
sahf
mov
pop
mov
pop
xor
mov
cmp
inc
outsl
lods
test
daa
cmpsl
in
jo
inc
fisttpll
fidivrl
cmp
push
stc
stc
test
xor
js
pop
hlt
xor
mov
dec
pop
nop
loopne
js
jle
ja
icebp
fildl
mov
leave
xchg
jle
cmpb
fsubr
aas
adc
or
mov
mov
mov
cmp
jmp
push
shrl
lea
test
test
dec
in
aas
add
jl
test
jns
fwait
je
lods
inc
shlb
jne
cmc
int3
add
pop
add
std
xchg
outsb
js
insb
pop
aam
cwtl
sbb
mov
xor
shrl
push
mov
into
icebp
out
mov
fildll
wrmsr
mov
lcall
aaa
stc
dec
out
js
mov
out
out
cmp
ja
mov
mov
call
jp
mov
push
cmp
or
adc
or
adc
mov
loope
sbb
test
inc
repnz
sbb
xor
ljmp
push
sbb
fldcw
push
sub
push
or
je
ja
popf
sbb
pop
das
push
xchg
mov
pushf
cmp
punpckhbw
mov
push
js
aas
lock
jns
mov
scas
dec
outsl
repz
ljmp
cli
inc
aad
repnz
out
stc
lret
xchg
scas
pop
inc
xchg
xchg
or
mov
sub
inc
and
loopne
adc
pop
mov
lds
cmp
inc
out
jmp
sbb
xlat
mov
sub
pop
repnz
xchg
lods
sbb
pop
dec
push
dec
enter
hlt
cmp
imul
adc
mov
fcmovnb
mov
jge
std
fstpt
repnz
js
jnp
inc
jmp
pop
xor
xchg
nop
addr16
rorl
imul
or
pusha
adc
and
in
and
mov
and
movsb
mov
fisubrs
inc
stos
inc
mov
std
aaa
sahf
imul
imul
popf
movsl
outsl
sbb
mov
mov
mov
lds
std
mov
mov
clc
fcoms
push
inc
push
push
adc
add
jae
pop
ljmp
xlat
lods
inc
movsb
or
and
xor
scas
push
jne
popf
jb
mov
pop
jl
or
mov
repz
or
mov
push
push
les
in
jl
xchg
mov
xor
inc
lret
cmpsl
and
icebp
and
lahf
mov
mov
fstpl
mov
push
cmp
test
out
or
mov
mov
lods
mov
jae
jecxz
sbb
neg
in
adc
jl
dec
lcall
daa
mov
shrl
pushf
sub
iret
lea
inc
pop
fcoms
mov
scas
inc
imul
mov
rcll
xchg
stos
inc
scas
pop
fidivs
lret
and
lock
inc
gs
sahf
jle
jle
sar
gs
dec
xlat
fidivs
lods
leave
adc
iret
movl
mov
pop
mov
sub
js
jno
fcomps
xor
add
adc
xchg
idivb
dec
lret
pop
loopne
cmpl
inc
cmp
sbb
out
es
pop
call
add
js
divl
arpl
out
pop
lret
cmpsb
mov
imul
rorl
inc
and
dec
jb
push
jns
push
std
xor
mov
xchg
mov
add
outsl
insb
scas
adc
cltd
pop
sarl
xchg
push
mov
fistpl
fsts
pop
add
cmovs
popf
adc
mov
fs
pop
cmp
not
stos
jg
mov
fwait
outsb
mov
stos
mov
xchg
jge
outsl
mov
pop
sub
pop
cmc
shll
add
xchg
repnz
or
clc
movsl
push
xor
dec
jg
loope
jmp
mov
repz
lock
jmp
or
pop
addr16
jno
adc
xor
jge
enter
inc
lds
sub
cs
and
jne
loop
test
xor
std
push
pusha
or
unpckhps
pop
negb
sbb
pop
push
lret
es
sbb
setnp
xchg
push
fstps
mov
pop
inc
inc
fisubrs
test
sub
lret
loop
sarl
repz
jbe
xchg
push
lods
shlb
pusha
insl
cmp
mov
sbb
enter
pop
jl
notb
push
iret
repz
neg
loopne
inc
xchg
or
insl
xlat
xchg
cli
test
fadds
repz
hlt
fildll
sub
xchg
push
dec
push
out
rcll
sbb
sbb
and
je
jecxz
jae
imul
cmpsl
jmp
clc
xor
sbb
adc
xchg
lret
call
lods
pop
jno
popf
ret
pop
adc
pop
pop
push
mov
popa
mov
jne
sahf
clc
or
aaa
xor
sbb
repz
ljmp
inc
testb
sub
cs
or
andb
movsl
fcmovne
cmpsb
jne
test
jg
mov
add
pop
daa
sub
sub
mov
push
ja
xchg
mov
dec
or
mov
push
inc
scas
sbb
out
lds
sub
ljmp
add
jmp
nop
mov
dec
jbe
ret
out
jmp
shl
sti
icebp
dec
out
add
push
stos
add
idiv
xor
mov
mov
push
out
addr16
add
das
mov
dec
inc
outsl
jmp
fsubrs
cmc
gs
rclb
fucom
idivl
cwtl
xchg
lds
jo
jns
xchg
dec
adc
orl
add
push
lcall
mov
sbb
mov
mov
or
jae
cmc
and
cmp
mov
inc
loop
mov
dec
mov
mov
mov
xchg
aaa
dec
loop
xchg
xchg
sub
jecxz
cmc
sbb
sub
movsl
jns
lcall
movsb
lcall
add
cmp
nop
jle
adcb
inc
xchg
test
push
jb
scas
sbb
int
cmpl
push
int3
mov
stc
lahf
mov
loopne
mov
push
insl
xchg
push
sbb
mov
jb
or
inc
in
cwtl
pop
in
divl
dec
inc
sbb
ss
dec
inc
jno
fsubrs
hlt
repnz
rorb
sbb
jae
out
subb
mov
in
loope
sarb
arpl
scas
sbbb
cs
add
mov
pop
inc
jmp
push
and
imul
sbb
iret
popa
cmp
aas
mov
jecxz
xor
cs
cmc
inc
jl
mov
xorb
pop
lods
ljmp
stos
fbld
and
mov
jb
fistpl
jge
leave
sub
mov
pop
fcmovbe
into
in
mov
dec
cmpsb
mov
mov
add
jae
lods
cmp
pop
icebp
lcall
add
mov
sub
aas
ret
jl
pusha
call
jg
jle
bound
icebp
cmp
enter
loop
inc
repz
mov
cltd
ljmp
pop
push
push
dec
adc
jmp
sbb
fldt
in
hlt
popf
inc
inc
dec
jbe
int
ss
ds
jmp
movsl
push
jge
jecxz
out
aas
adc
mov
xor
cmpsb
xlat
js
sub
xchg
outsl
ljmp
fidivrs
and
cmc
jp
pop
cld
pop
inc
ljmp
cmpsb
sbb
cmc
test
stos
push
dec
sbb
mov
fiaddl
fisttpll
enter
ja
jb
push
mov
inc
or
popf
lea
dec
pop
pop
pop
cmp
bound
adc
outsb
idivb
shll
mov
cmc
call
in
jns
sub
fimuls
adcb
inc
pop
dec
in
pop
and
cs
fmull
dec
in
fwait
xchg
stos
rol
enter
adc
or
pop
cmp
push
and
pusha
outsl
sbbl
and
inc
dec
incl
sbb
xchg
insl
pop
xchg
add
sub
dec
dec
lea
aas
mov
and
test
arpl
inc
cmp
idivl
inc
jl
hlt
ljmp
pop
mov
dec
daa
and
cld
lds
adc
cmp
lea
shrb
add
jae
rcrl
cmp
addr16
cmpl
push
movsl
adc
jne
pop
gs
inc
pop
mov
in
mov
in
xor
jmp
dec
imul
and
adc
fistl
dec
popa
out
jb
mov
mov
pusha
add
popf
mov
rcrb
in
or
xchg
adc
ficomps
fbld
fiaddl
lods
mov
in
loop
outsl
xor
jnp
aad
pop
sub
xor
pop
loop
inc
push
enter
mov
mov
and
pop
cmc
pop
sub
cmp
inc
jo
int
jns
ret
in
xchg
push
movsl
adc
out
ffreep
xchg
mov
stos
incl
loope
xor
pop
pop
dec
cmp
and
cmp
in
shrl
jge
xchg
or
pop
fists
xchg
das
sub
xchg
out
push
pop
arpl
mov
mov
cmp
mov
inc
mov
cwtl
cld
insl
lock
aad
xchg
pop
test
jl
pop
mov
repz
or
pop
sbb
call
xchg
cmc
clc
dec
in
push
lret
idiv
aad
sub
hlt
jecxz
imul
mov
pop
mov
mov
push
hlt
sti
jmp
xchg
inc
mov
fs
adcb
outsl
in
sbb
xor
sub
sbb
lcall
hlt
out
jb
add
xor
cmp
jne
enter
notl
loope
mov
push
sbb
pop
dec
in
and
mov
xlat
sub
jl
pop
mov
js
jle
sar
inc
ja
xchg
add
data16
and
stc
pusha
jns
ja
ds
jb
sub
dec
stos
jnp,pt
pop
sub
add
dec
loopne
sub
mov
arpl
xlat
and
cwtl
or
push
mov
mov
xor
dec
and
scas
test
or
lret
iret
mov
mov
xchg
jl
or
faddl
xchg
pusha
sbb
jno
movsb
or
fwait
add
loopne
out
cmp
stos
mov
test
and
stos
out
outsb
fcoms
addl
ja
sbb
xor
or
xchg
adc
adc
fcmovnbe
rol
adc
push
testl
lcall
jb
pop
xorl
pop
lcall
cmc
mov
inc
sub
fwait
rcrl
cmp
cltd
stos
fwait
loop
inc
ss
sbb
bound
test
test
and
and
data16
sbb
imul
fwait
lahf
mov
cwtl
fcom
aas
sub
mov
mov
or
push
lret
jl
jecxz
mov
mov
jmp
stc
hlt
es
adc
dec
adc
xchg
std
jo
pop
xor
mov
loopne
fisubl
aas
ret
mov
dec
out
jl
cmp
outsl
lds
lcall
cld
xor
xchg
or
jp
ret
out
loope
pop
mov
mov
pop
nop
into
jge
aaa
jge
mov
fcoml
mov
lea
inc
arpl
pop
sbb
inc
stos
mov
adc
and
mov
bound
aad
out
fnstcw
mov
dec
hlt
scas
aas
push
mov
outsb
inc
dec
call
jno
and
popf
cmc
daa
xchg
jge
cmc
imul
or
jnp
add
imul
jmp
jecxz
xor
cmp
aad
cld
xor
adc
fsubs
mov
inc
out
jmp
cmp
xlat
lret
aas
adc
or
out
cmp
outsl
mov
add
pop
int3
cmp
fidivrl
or
insb
jmp
fcmovnb
dec
sbb
mov
orb
bound
lods
iret
rolb
insb
stc
mov
in
mov
insl
scas
subb
mov
hlt
pop
push
jecxz
or
pop
cmp
or
jae
add
mov
jae
jbe
jp
imul
iret
fstps
push
sbb
imul
lds
cmpl
push
adc
addr16
fisttpll
adc
out
into
inc
mov
mov
sbb
lcall
ss
ret
cmpsb
dec
mov
test
add
bnd
enter
jb
sar
jl
xor
in
rcrl
pop
ja
int
jl
push
adc
in
jl
adc
mov
mov
or
test
jns
cli
cmp
scas
add
shrl
add
cmpb
mov
mov
add
lods
ja
jne
push
mov
sub
sub
push
mov
nop
je
cmc
std
mov
rcll
xchg
hlt
mov
enter
in
pushf
adc
out
std
ret
lret
hlt
jo
imul
jno
jge
push
and
xor
jmp
lods
and
outsl
cli
dec
aas
or
or
xor
xor
adc
movsb
and
mov
movsl
pop
and
pop
or
pop
jns
das
roll
sbb
fildl
ficoml
cmc
decl
push
pop
xchg
mov
je
inc
std
push
popa
stos
pop
sub
bound
hlt
into
mov
jge
jg
in
or
aaa
pop
addb
cmp
mov
cmp
inc
imul
mov
inc
pop
ljmp
mov
xchg
jg
and
ljmp
push
cs
or
call
inc
fs
xor
pop
and
ljmp
add
jg
jg
mov
xor
mov
int
push
outsl
sub
cltd
mov
pop
fwait
aas
repnz
lods
sub
mov
stc
addr16
leave
ficompl
inc
sub
mov
outsl
repz
cmpb
and
add
push
mov
push
dec
cmpsl
adc
mov
xchg
cmp
cld
pusha
push
xchg
lds
dec
test
mov
movsl
lret
icebp
push
push
push
xor
jnp
stos
cld
in
clc
mov
shll
and
sbb
jg
cs
xor
jmp
or
iret
mov
filds
stos
push
jnp
adc
aaa
int
loop
cmp
pop
dec
sbb
shr
xor
sbb
cmp
jg
loope
mov
push
out
rcrb
repz
xor
pop
inc
js
repnz
mov
inc
dec
jg
mov
adc
xchg
outsl
dec
add
mull
cmpsl
jno
shrb
fcomps
loope
test
rol
dec
bswap
test
in
aad
push
test
or
dec
mov
mov
dec
rorl
jb
mov
es
lock
pop
enter
add
or
lcall
sti
pop
xlat
out
inc
mov
lods
jp
adc
sbb
test
incl
xor
call
sbb
inc
imul
inc
jl
sar
test
repz
xchg
fwait
sbb
fs
xor
push
subb
insl
mov
xor
je
xorb
fists
xchg
inc
ja
test
hlt
pop
xor
shrl
mov
add
pop
adc
jne
outsl
aam
pop
stos
ds
fwait
or
aaa
leave
pop
jno
and
movsb
test
adc
fs
sti
pop
subb
push
dec
jns
loope
push
les
outsb
cli
sbb
lahf
pop
jmp
mov
pop
mov
sbb
push
sub
pop
pushf
sti
test
sub
cmp
mov
push
arpl
pop
idiv
lock
inc
cmp
lock
int
movsb
mov
nop
xchg
or
lret
imul
mov
ret
insb
scas
xorl
mov
popa
out
push
lea
and
icebp
imul
mov
gs
ror
fbstp
sahf
movsl
data16
cmp
jmp
mov
je
pop
ss
mov
dec
data16
pushf
mov
sbb
inc
lcall
das
and
leave
inc
xchg
sbb
adc
gs
and
push
rcll
mov
lcall
lea
cmp
mov
inc
adc
mov
dec
aaa
pop
push
mov
jecxz
cld
sbb
pop
mov
cmp
stos
sbb
int3
fwait
loope
mov
jnp
inc
sub
fnstcw
hlt
mov
leave
push
imul
jg
push
js
adc
push
xchg
push
and
push
out
cmpsb
int3
insl
pop
movsb
sbb
pop
push
add
inc
jp
in
cld
jae
aaa
adc
sbb
mov
loop
imull
push
andb
mov
mov
jmp
dec
pop
add
adc
cmp
int
ljmp
push
inc
mov
fadd
mov
int
xor
mov
mov
xlat
mov
out
jg
ja
fdivs
rorb
lods
mov
mov
mov
clc
cmpsb
push
push
or
xchg
pushf
mov
jnp
add
sti
jno
sti
test
xchg
mov
lds
aas
mov
add
iret
add
push
xchg
les
xchg
pop
scas
imul
mov
fidivrl
mov
stos
out
and
push
xchg
mov
jae
test
stos
nop
pop
cmpsb
mov
sub
ud2
dec
nop
outsb
xchg
xor
leave
dec
pop
ret
dec
dec
mov
push
pop
jne
jns
xchg
movsb
mov
cmc
pop
int3
mov
popa
xor
push
jnp
adc
mov
out
sbb
adc
arpl
movsl
pop
mov
jp
mov
in
xor
lret
insb
rcrb
xchg
addr16
bound
pop
cmp
cs
dec
faddl
or
inc
fiaddl
dec
notl
icebp
lods
repz
imul
mov
scas
mov
mov
test
inc
xlat
stc
mov
jne
lds
cmpsl
jge
sub
cmp
jae
dec
jp
jmp
in
js
int
mov
in
inc
dec
in
xor
sarl
stc
or
jno
xchg
loope
mov
push
jne
lahf
popa
aam
test
or
sbb
push
mov
andl
add
aaa
mov
mov
add
in
mov
ret
mov
or
lcall
mov
enter
mov
stc
arpl
in
imul
push
pushf
lret
xchg
lods
stos
cmp
nop
gs
sbb
insb
test
movb
cmp
int3
cmp
hlt
xchg
hlt
sahf
add
add
cmovg
test
jg
mov
lcall
scas
sbb
nop
ret
fsub
int3
divl
icebp
out
xchg
popa
cwtl
sbb
test
int
fwait
gs
test
imul
cmp
jbe
mov
fs
aad
pusha
or
call
cmpsb
mov
dec
push
stc
mov
call
inc
pop
cmp
and
scas
ficoml
shrl
push
stc
push
pushf
pushl
push
cmc
leave
aaa
lods
lods
push
fisubrs
mov
mov
push
fcmove
jbe
out
push
add
and
ret
stc
dec
out
adc
pop
push
pop
test
aaa
sub
movb
out
daa
sub
shlb
push
mov
clc
shrb
adc
testl
mov
rcrb
xorb
xchg
cmpsb
jb
mov
rcrl
stos
sbb
push
mov
das
xchg
loopne
add
push
push
mov
outsb
lea
dec
mov
ret
ret
mov
pop
testb
add
mov
pop
int
ret
xchg
popa
into
fcmovbe
clc
shlb
ss
int
or
cmp
iret
call
xchg
fwait
fidivs
pop
mov
adc
dec
pop
and
lods
dec
into
repz
mov
popf
fwait
mov
data16
nop
push
push
addr16
sbb
jo
outsl
push
mov
in
sub
stos
cwtl
hlt
xchg
call
xor
jns
ja
cld
lock
jg
push
jmp
in
insb
cmp
loope
ds
sbb
xchg
mov
insb
xor
mov
int
mov
ficoml
call
cmp
sbb
rcrl
pop
pop
xor
add
mov
mov
mov
hlt
aam
stos
out
pop
hlt
jnp
in
jl
mov
std
shlb
dec
push
adc
or
pop
mov
testl
int3
incl
mov
hlt
jle
hlt
scas
jle
jbe
push
jnp
jae
mov
imull
mov
xchg
push
imul
lret
mov
mov
cmove
pusha
cmc
out
cmp
add
rclb
icebp
cmpsb
dec
mov
dec
orl
andl
mov
adc
out
repnz
xor
rorl
pop
fisttpl
jbe
sbb
adc
sbb
pop
imull
imul
mov
int
mov
rcll
jns
mov
sti
mov
cmp
cmp
sbb
push
leave
sbb
mov
jg
pop
outsl
je
test
ja
xchg
mov
test
adc
pop
ror
out
cmp
std
cmpsl
sbb
sub
sarl
mov
cmp
hlt
lcall
mov
mov
std
outsl
hlt
inc
in
aad
mov
jl
add
mov
pop
andb
fdivr
dec
addl
loop
cmp
pop
out
sub
pusha
xchg
sbb
push
cmpl
mov
adc
cld
sarb
dec
xchg
cmp
fldcw
call
out
out
xchg
fistpll
cmp
mov
xor
xchg
nop
lret
or
pushf
pushl
sbb
mov
add
pop
xchg
push
popa
pop
pop
repnz
test
andl
or
into
dec
mov
sbb
xor
sar
mov
mov
jnp
jp
sbb
loope
mov
roll
mov
sarb
imul
std
mov
dec
xchg
jne
bnd
dec
jne
and
inc
imul
add
jno
fcoml
jbe
aas
sahf
das
cltd
push
test
int3
mov
scas
mov
dec
cmp
sub
dec
adc
pop
xor
popa
aam
mov
roll
fcmovbe
test
add
push
fnstenv
hlt
pop
fcmovnb
cmc
repnz
stc
icebp
out
sbb
int3
and
jg
mov
jg
pop
aas
ret
sub
cwtl
adc
outsl
fcomip
hlt
add
adc
fsubrl
xchg
and
test
fidivrs
vmread
imul
add
aad
icebp
lock
push
or
inc
iret
into
mov
fnstenv
mov
rolb
cmp
xchg
mov
add
inc
xchg
xchg
daa
pop
adc
repnz
or
subl
adc
xor
dec
adc
lret
cli
popa
sti
iret
rclb
sbb
mov
lahf
dec
mov
xchg
aad
out
pusha
push
lret
cwtl
ds
and
sub
ja
fs
adc
push
shr
xchg
pop
mov
pop
adc
jl
bound
lods
shrb
sbb
cmp
xchg
data16
pop
loope
std
mov
cmp
inc
insb
sub
pop
mov
dec
mov
loop
mov
mov
inc
sbbb
sub
fucomip
mov
xor
sub
xor
inc
sub
push
mov
jmp
notb
pop
dec
xor
dec
mov
call
xchg
xchg
les
mov
sti
fdivrl
mov
in
pop
adc
in
pop
xchg
fldcw
and
dec
lock
gs
inc
daa
mov
lret
jecxz
jbe
jecxz
outsb
dec
lods
int
mov
je
push
xor
cltd
and
mov
push
xor
enter
imul
or
roll
sbb
pop
nop
mov
mov
push
cmp
and
iret
mov
or
mov
cmp
jmp
mov
pop
je
int
sub
cs
sbb
xchg
clc
xlat
insl
add
test
mov
sub
arpl
mov
loopne
sub
hlt
sbb
pop
adc
out
cmpsl
outsb
and
jno
sub
int3
and
inc
jp
stos
outsb
outsl
enter
xchg
ljmp
xchg
sti
cwtl
mov
jmp
cmp
gs
adc
insl
push
adc
shll
inc
es
sbb
outsl
je
adc
lds
mov
sahf
mov
xor
test
shrb
pop
and
push
lds
insb
inc
xor
sub
adc
push
push
xlat
bound
out
daa
pop
testb
movsl
pop
sti
fs
jmp
mov
testb
or
movsl
pop
fs
and
cltd
xchg
popf
popf
out
cmpsl
mov
dec
mov
daa
lret
mov
adc
xor
push
pop
jb
mov
imul
shl
repnz
cmp
and
sbb
movsb
jl
repz
ja
cmp
aaa
inc
add
sbb
xor
jb
insl
cwtl
stc
mov
or
out
sahf
inc
into
or
outsl
stos
mov
scas
jo
jecxz
cmp
sbb
add
fnstenv
pop
sub
jbe
int3
mov
call
nop
and
shl
es
frstor
subb
cmp
fidivrl
popa
ja
loopne
push
cmp
lahf
dec
test
ret
sub
fcom
fists
lahf
inc
mov
add
fs
inc
mov
inc
dec
adc
bound
jne
movsl
jbe
cmp
jns
outsl
dec
iret
mov
cmc
xchg
pop
xor
scas
repz
mov
addr16
or
pop
addr16
mov
xor
adc
mov
cmp
dec
fisubs
outsl
adc
jg
aas
xorl
mov
add
mov
cmp
nop
dec
push
aaa
push
sub
pop
repz
scas
pop
xchg
and
pop
adc
lock
iret
sbbb
out
fstpl
bnd
xchg
mov
stos
and
cmp
divb
adc
xor
rorl
repz
loope
mov
insl
and
mov
mov
in
push
loopne
lahf
and
add
cli
xchg
fwait
dec
in
cltd
sbb
outsl
test
xchg
test
sbb
test
mov
aaa
icebp
inc
pop
xlat
push
cmp
cmp
or
lds
cmp
insb
xor
inc
sub
call
sub
lcall
push
jno
or
in
aad
sub
js
dec
notl
in
int
xchg
lds
aad
add
aaa
roll
jmp
xchg
cmp
movsb
sub
scas
dec
hlt
cmp
jg
xor
je
sarl
mov
xor
in
fadds
adc
push
mov
xor
sbb
repz
in
mov
enter
test
test
pop
mov
lret
xchg
jg
roll
sbb
pop
mov
xchg
and
sbb
xchg
ss
loopne
sbb
add
aas
jg
outsb
aaa
push
mov
arpl
and
xor
cmpsb
sbb
and
sbb
daa
mov
shll
mov
add
pop
mov
scas
sub
dec
mov
inc
das
xor
mov
frstor
pop
jno
aam
addb
or
jmp
jne
inc
jmp
pop
push
cli
lods
inc
pusha
jnp
mov
je
fsubrs
mov
test
push
mov
fisubs
cmp
add
xor
cmp
xchg
xchg
push
lock
add
rolb
hlt
dec
mov
adc
jg
fucomi
mov
mov
push
pop
xchg
orl
aad
jne
loopne
lea
repz
sub
stos
pop
sub
ss
sub
adc
in
dec
xlat
je
movl
dec
cld
add
imul
add
mov
xor
sahf
xchg
pop
adc
mov
fnstcw
test
pop
mov
mov
mov
mov
dec
mov
pushf
out
movsb
insb
test
pop
mull
aas
loop
iret
pop
xchg
imulb
add
arpl
ljmp
mov
and
fwait
arpl
push
fisubl
leave
lds
sub
pop
xor
jo
hlt
jle
cmc
lods
sub
xor
sbb
push
inc
jl
in
ret
mov
out
jne
ja
xchg
out
sbb
push
sbb
lock
mov
jb
das
inc
adc
and
int
add
cmp
scas
mov
sub
fs
addr16
xor
or
aam
cmp
xchg
or
inc
test
shrb
pop
mov
push
js
aad
out
cmp
xchg
mov
divb
shlb
jns
shl
ja
xlat
add
test
jo
cmp
scas
nop
mov
push
inc
dec
mov
mov
cmpsl
cmp
in
jecxz
js
pop
pop
cmp
loope
cltd
add
push
gs
sub
adc
popl
call
imul
pop
iret
call
pop
mov
add
pop
sbb
mov
adc
mov
arpl
jp
cmp
add
push
or
rorl
arpl
sub
fistpll
cmp
xor
les
lods
aas
mov
jns
adc
pop
loope
or
lds
insb
mov
add
fdivs
mov
in
lods
iret
scas
inc
push
add
lock
sub
push
adc
outsb
sbb
lods
cmp
xor
push
push
xor
imul
pop
lret
and
fistps
popa
jo
pusha
cmp
add
dec
mov
push
or
jle
or
jl
cld
push
scas
daa
lods
ret
jae
sarb
testb
std
inc
nop
int3
call
popf
ds
leave
mov
pop
wbinvd
rcl
stos
push
movsl
jmp
xlat
jmp
or
pushf
dec
mov
xor
or
mov
mov
lods
sub
mov
mov
push
pushf
notl
inc
sbbl
xor
fcmovnb
leave
dec
nop
orb
loope
adc
leave
int
mov
stos
mov
addr16
fbstp
stos
jne
in
mov
sbb
imul
push
xlat
std
mov
out
je
mov
pop
push
sahf
add
add
clc
sbb
mov
out
in
mov
lods
push
out
inc
loopne
adc
jg
repz
lods
sbb
pop
xchg
fidivl
push
jno
push
xchg
je
movsb
mov
andl
dec
gs
xor
and
adc
movsl
imul
mov
loop
push
aas
mov
bound
or
cmpl
xchg
cltd
pop
dec
lods
shlb
loope
push
loop
addr16
sub
cmpl
jne
loope
out
xchg
lods
data16
ret
aaa
jg
jns
or
ss
push
xchg
cld
adc
mov
jle
cs
loop
in
jmp
out
jge
mov
pop
insb
mov
and
pop
sub
stos
in
push
adc
cmp
mov
cli
out
push
mov
in
xor
jbe
inc
loopne
cld
fdivrl
aaa
mov
cwtl
stc
dec
mov
mov
js
jmp
mov
or
popa
iret
jns
andb
xorb
repz
mov
mov
push
push
cmp
mov
outsl
or
mov
nop
pop
pop
lahf
inc
xchg
and
daa
mov
fsts
ror
pusha
loope
mov
dec
call
jge
xor
out
fwait
bound
mov
fildll
mov
push
adc
out
test
inc
jns
mov
sbb
test
cltd
push
addr16
les
js
es
sbb
ret
xor
sub
inc
jnp
push
dec
or
leave
lcall
jo
mov
shrl
icebp
dec
insb
push
aam
into
xchg
movsl
flds
jo
inc
adc
outsb
pop
fcmovnb
sub
push
inc
ljmp
cld
mov
xor
adc
mov
lods
sbb
test
add
aaa
xchg
filds
js
inc
aas
mov
cs
arpl
mov
daa
iret
inc
in
inc
push
popf
adc
daa
test
mov
leave
roll
jbe
fists
data16
iret
inc
ss
or
arpl
movsb
sbb
mov
arpl
inc
loop
push
mov
jb
xchg
pop
dec
add
inc
pop
fiaddl
mov
mov
inc
cmp
nop
jnp
into
mov
and
pop
insb
mov
push
jb
xor
call
sub
pxor
lcall
mov
aad
mov
je
push
adc
mov
inc
xchg
rolb
xor
xchg
test
adc
in
in
xchg
adc
sbbb
cs
mov
dec
mov
dec
inc
addr16
jb
xchg
adc
test
daa
jbe
loopne
xor
xchg
lahf
fs
fadd
push
xor
jl
or
test
lods
sbb
lods
les
jae
enter
pop
cmp
xor
and
push
push
out
lock
movsb
sbb
adc
mov
xor
jecxz
daa
in
xor
iret
mov
add
in
shr
adc
mov
jg
fcom
mov
fcomp
imul
stc
lock
lcall
cmc
ret
movsb
xchg
sarb
loop
sar
sbb
jbe
pop
cmp
inc
scas
jnp
jno
cmp
push
out
out
dec
mov
aaa
mov
fidivs
jb
bound
jge
out
loop
and
jns
imul
into
mov
mov
adc
mov
mov
jo
sbb
push
pop
sbb
mov
lods
sub
stos
test
lock
fadd
fdivrl
xor
push
xor
bound
repz
repz
dec
mov
int
mov
add
jo
outsl
adc
in
dec
and
mov
popf
fmul
rorl
xchg
test
fdiv
stos
es
add
stos
lcall
pop
mov
add
test
xchg
es
lods
pop
xchg
xchg
mov
in
cs
push
xchg
cli
sub
pop
mov
ret
decb
dec
test
fadd
mov
sub
fiaddl
push
push
mov
rcrl
jno
data16
popa
cmp
xor
shl
or
cmp
xlat
test
or
sahf
mov
lods
lret
and
shrb
dec
pop
mov
sub
xchg
push
cld
fbld
jno
push
movsl
ljmp
dec
add
stc
outsl
ret
adc
sbb
inc
mov
cmp
and
dec
pop
test
jge
inc
adc
shlb
and
add
cli
mov
jecxz
loop
cmpsl
pop
sub
dec
filds
lods
nop
aad
mov
dec
pop
add
and
mov
xchg
addr16
in
lret
fisttps
cmp
mov
stc
sub
test
ret
pop
xchg
repz
out
aaa
fwait
add
pop
fnstenv
push
mov
mov
ja
dec
int
lea
adc
in
or
popf
fsubs
dec
jae
jns
cmpsb
xor
test
cmp
mov
roll
and
inc
mov
or
cmp
mov
jl
scas
xor
in
adc
sub
add
ljmp
dec
lret
lods
or
push
cmp
push
lock
xor
and
cmp
out
icebp
xor
sbb
fstl
pushf
popl
jne
pop
mov
repz
lock
push
cmp
lcall
icebp
pop
mov
adc
jmp
testb
adc
aaa
movl
test
adc
rorb
xchg
push
or
cmp
inc
data16
das
pop
cs
out
push
mov
repnz
div
jge
cld
les
xor
sub
adc
ds
jl
pop
dec
pop
test
push
push
lcall
and
icebp
adc
insb
mov
je
loop
cmp
pushf
es
fistpl
stc
insl
rol
fs
pusha
mov
jno
into
out
mov
and
pop
cld
ret
jl
fadds
out
dec
adc
insl
pop
lock
loop
cmp
push
add
notl
adc
negl
das
push
pop
jg
repz
aaa
pop
adc
pop
sbb
sub
stos
fpatan
js
jo
vmulsd
pop
adc
out
into
jo
aad
mov
adc
dec
push
sti
inc
cs
adc
ds
xchg
lahf
jne
aaa
ficompl
data16
xlat
js
mov
or
dec
push
bnd
pop
pop
dec
pop
addl
mov
cmp
sbb
shlb
pop
loop
rcr
into
pop
mov
push
lret
xor
shll
in
movsl
out
andl
add
in
pop
or
movsl
arpl
scas
jp
idivb
lret
pushf
mov
aam
adc
mov
dec
mov
adc
stos
jmp
test
dec
cmc
dec
add
mov
nop
je
vmread
aam
clc
orb
out
inc
shrl
inc
out
cmpsb
or
pop
xor
das
mov
pusha
add
adc
lahf
cmpl
ja
repnz
pop
std
ljmp
xchg
inc
bound
pop
cmc
ljmp
ret
jns
xchg
leave
sub
or
outsl
mov
dec
lret
jno
dec
xchg
out
fstpl
ds
and
and
jle
sbb
pusha
inc
pop
xchg
lret
test
push
adc
xor
xchg
sbb
repnz
pop
lahf
dec
push
mov
ljmp
in
fistpll
sub
mov
push
imul
stc
mov
daa
xlat
xor
push
int
ret
push
nop
mov
lds
xchg
mov
rolb
jg
ret
cmpsl
sub
insl
fisubrs
cmp
or
icebp
stc
pop
das
pop
out
sbb
cmp
jg
or
subb
xchg
je
mov
rcrb
nop
imul
jae
insl
mov
int3
mov
bound
into
xor
sbb
test
stos
adc
dec
mov
inc
push
dec
lahf
in
incb
inc
cwtl
out
mov
testb
inc
jp
jae
das
int
data16
ror
in
pop
dec
xchg
mov
or
out
add
cld
xor
or
leave
loope
adcl
repnz
xor
lods
pop
jecxz
scas
xchg
dec
fdivrp
push
loope
test
dec
sbb
cmp
jg
jb
stos
add
or
push
sbb
aam
stos
stos
jge
cmpsb
mov
push
or
repnz
sbb
popf
in
pop
pop
or
cli
push
push
mov
mov
ds
subl
pop
add
daa
scas
or
inc
data16
dec
loopne
decb
cmpsb
xlat
xchg
scas
jle
push
push
loope
enter
mov
loop
sti
inc
cmpsb
inc
cli
bound
add
pop
cmp
int3
push
or
movl
into
mov
dec
data16
gs
cmp
sbb
addr16
dec
int
xchg
loope
cmp
loop
test
test
pop
cli
dec
imul
jno
and
ds
fchs
sub
mov
int3
push
mov
cmp
enter
push
cmp
out
mov
iret
jb
pop
inc
repnz
mov
scas
scas
sub
mov
std
mov
sbb
pop
je
cmp
sub
adc
aas
sub
paddusw
cld
popf
enter
or
push
fidivrs
ret
enter
loopne
rdmsr
into
pop
mov
nop
pop
mov
sub
call
pushf
sbb
add
xchg
push
fsubs
sub
ds
inc
mov
pop
cmp
js
jns
rcrb
movl
int
cmc
stc
cli
cwtl
lcall
jb
cli
adc
lret
fldl
sbb
mov
sbbl
call
mov
in
test
mov
pop
lret
dec
xchg
pop
jnp
fidivrl
sbb
mov
dec
aaa
ja
cmpsl
jnp
lret
stos
mov
lock
or
and
mov
xor
js
insb
ja
dec
cwtl
push
pusha
imul
push
jno
iret
xchg
adc
pop
ret
out
or
push
fsubrl
addb
inc
sub
mov
in
int
push
sub
test
push
pop
mov
mov
jns
movsb
out
add
lret
jbe
mov
mov
mov
les
pop
leave
pushf
mov
or
mov
mov
int3
or
in
lds
pop
mov
lock
add
imul
das
and
pusha
les
push
add
mov
inc
packuswb
popl
std
mov
sub
sbb
mov
fistps
out
xchg
pusha
cmp
stc
push
adc
cmp
dec
idivb
inc
popa
pop
add
insl
das
test
mov
jge
stc
es
into
aaa
loopne
imul
push
xchg
xchg
xor
xor
dec
cmp
mov
int
xchg
cmp
cmp
mov
stos
das
fistl
outsb
pop
lods
loope
inc
dec
rcll
or
and
pop
orl
inc
cmp
ds
repnz
xchg
test
xchg
cld
cs
sbb
xchg
and
inc
inc
sti
cmpsl
push
or
test
adc
sub
outsl
aad
sahf
jmp
adc
pop
loope
out
xchg
pushl
dec
mov
jl
inc
push
jns
pop
xchg
in
enter
or
xchg
mov
inc
addb
push
mov
mov
add
cs
iret
imul
adc
cmpsb
inc
fdiv
pop
and
mov
cwtl
insl
dec
ja
pusha
mov
xchg
push
and
jp
imul
lcall
lret
mov
stos
clc
cli
cmp
out
mov
pop
sahf
jnp
ficompl
add
jge
dec
cmc
push
mov
jge
pop
int3
std
jne
sub
pop
test
sbb
xchg
test
mov
adc
and
jne
jl
xor
imul
xlat
sbb
das
xor
jo
or
adcb
xchg
mov
cmp
in
push
mov
aam
out
sbb
jnp
fisttps
test
aaa
subl
hlt
push
fstp
pop
xchg
dec
jecxz
or
or
jno
scas
add
inc
jecxz
fadds
outsb
jl
jno
mov
add
mov
pushf
or
test
jo
int3
pop
inc
inc
pop
sub
icebp
shlb
fs
aad
imul
iret
movsb
gs
popf
xchg
mov
loop
and
inc
and
popf
pusha
fnstenv
sub
hlt
inc
fdivrl
sbb
xchg
out
nop
fstps
stc
nop
cmp
in
pop
push
sub
push
lret
cld
sub
es
imul
repnz
lret
popa
cmp
shlb
dec
das
pushf
leave
push
in
xlat
inc
subb
xchg
sub
fistpll
add
fistps
movsl
dec
data16
mov
or
push
sub
movsb
xor
and
push
loopne
arpl
inc
fadds
push
cmp
inc
add
mov
xor
cltd
cs
mov
mov
out
push
aas
cmp
lds
ret
aad
mov
pop
xchg
xor
or
lahf
cmp
mov
or
add
or
sbbl
fwait
cmc
mov
int3
mov
add
sub
cmpl
pop
loopne
mov
hlt
or
sbb
insl
lahf
jb
hlt
bound
rorl
scas
out
pop
push
es
enter
stc
jnp
in
mov
in
jae
mov
outsb
lea
xor
call
jbe
inc
jnp
pop
test
mov
dec
jne
xor
xor
jbe
addr16
movl
push
loop
mull
sbb
insl
leave
xor
cmp
and
inc
iret
movsl
adcl
fstpl
ds
data16
aad
dec
sbb
and
adc
adc
lock
pop
push
lock
out
lea
mov
mov
inc
idivl
inc
test
es
add
push
sub
lods
fnstsw
insb
out
inc
je
mov
lcall
movsl
sub
push
inc
sub
fwait
jle
out
test
rolb
ljmp
mov
das
adc
subl
mov
je
mov
and
dec
xchg
fistps
xchg
add
xchg
lods
adc
icebp
jns
xchg
dec
push
mov
add
outsl
out
sbb
mov
add
ret
in
movsb
scas
daa
rcl
add
std
xchg
cmp
sahf
fistps
or
mov
push
xor
repz
push
push
pop
pop
sbb
test
ret
jmp
xchg
and
xorl
jb
shll
call
mov
ds
and
addr16
jb
fcomp
cmp
jbe
jb
mov
cmp
into
cmp
leave
xor
xchg
dec
add
adc
stos
sbb
in
xlat
dec
mov
sub
jne
mov
es
mov
sti
sbb
and
sbb
mov
sarb
or
jae
iret
jg
mov
cmp
and
add
and
xor
cmpsb
or
fiaddl
loopne
ret
lret
subb
mov
out
pop
insl
jns
jnp
jp
jne
jp
adc
aaa
adc
ret
mov
mov
or
sub
xchg
pop
pop
cld
rolb
dec
leave
ret
push
jle
push
repnz
loopne
add
in
push
lods
lock
mov
add
jnp
cmpsb
das
lahf
lret
call
push
out
adc
movsb
mov
jo
inc
cmp
lea
negl
add
aaa
dec
mov
add
fwait
testl
cs
lahf
ljmp
mov
mov
jnp
xor
pop
fwait
loope
outsl
and
pop
jno
mov
faddl
scas
insb
push
push
dec
fwait
dec
and
les
push
jmp
lret
ljmp
inc
sub
xchg
push
in
jg
negb
filds
or
add
jmp
pop
std
outsb
push
ret
or
ljmp
pop
in
test
cmp
cs
out
xlat
ja
popf
jmp
shll
sub
pop
or
test
mov
cmp
jmp
leave
mov
mov
rolb
mov
xchg
inc
sbb
mov
and
fadds
enter
pop
mov
fdivrl
repz
and
fincstp
add
pop
push
xchg
inc
mov
icebp
sbb
ljmp
scas
sbb
cmp
dec
fbld
dec
pop
enter
paddb
cwtl
cmp
rolb
lods
pop
repz
mov
std
fs
lock
sbb
jecxz
pop
push
rcrb
arpl
ror
push
jno
pop
dec
mov
movsb
push
std
mov
xor
sbb
rcl
das
inc
inc
scas
shlb
add
jo
sbb
lds
sbb
in
test
pop
aaa
and
les
sbb
add
mov
mov
lret
clc
rorb
xor
push
pushf
jae
xor
push
repz
jbe
sbb
in
sub
popa
cli
sbb
outsl
sub
pop
sub
rorb
pop
cmpsb
mov
or
cmpsb
movsbl
jb
je
push
jle
test
icebp
cmp
xlat
xlat
cmpsl
adc
fisubrs
mov
sbb
cmpsb
loop
sbb
inc
xor
cmp
iret
xchg
mov
inc
iret
jo
jb
fwait
popl
sbbl
mov
push
cmp
sbb
lahf
ja
cld
test
add
arpl
mov
xor
inc
push
inc
adc
sub
mov
bound
jp
sti
add
sub
sbb
popf
xor
inc
scas
jbe
mov
js
xchg
xchg
jg
inc
cmc
scas
in
test
idivb
add
xor
ss
mov
in
or
jne
ret
lret
out
lock
inc
and
movsl
jg
scas
mov
add
je
adc
in
adc
push
lcall
mov
aam
imul
mov
flds
push
mov
cmp
movsl
jmp
lods
cmp
cmp
imull
cmp
sub
fisttpl
or
out
fsubl
adc
push
push
rcrb
inc
pop
inc
mov
or
mov
or
lcall
popa
jne
imulb
test
scas
adc
clc
testb
dec
xlat
bound
adc
xchg
adc
pop
and
lcall
daa
dec
pop
je
sbb
cmp
and
int3
das
cmpsb
mov
cmpsb
push
call
push
js
adc
sub
das
insl
test
mov
sbb
mov
inc
jns
shl
fwait
sbb
inc
jl
push
out
sub
orl
mov
adc
mov
subb
jg
cwtl
dec
imul
in
and
pop
adc
mov
jns
jno
sarb
xchg
xor
outsl
mov
sbbl
adc
js
out
daa
cwtl
jecxz
sub
cmpsb
shlb
sub
dec
fdivs
test
pop
mov
or
out
loopne
mov
cmp
adc
add
pop
imul
dec
repz
test
mov
jmp
push
mov
imul
filds
fstpt
movsl
lcall
adc
mov
ljmp
pop
clc
or
push
mov
push
add
stos
push
enter
mov
and
inc
jle
into
cltd
adc
es
jae
out
into
shrl
test
jne
inc
adc
rcrl
add
sbb
inc
inc
cld
xor
scas
xlat
cs
jae
into
outsl
std
insl
xchg
adc
ret
popa
mov
call
inc
pop
lock
lock
std
push
xchg
imul
ret
xor
mov
rol
mov
cmc
push
jne
aam
imul
mov
rcrl
mov
out
aaa
sub
mov
xor
push
mov
aad
imul
ret
scas
pop
in
arpl
and
or
je
pop
rclb
lret
out
sarb
pushf
test
xchg
jae
leave
push
loope
call
sti
cwtl
in
lret
jle
jno
pop
cmp
ja
sub
fcomps
push
insb
cmc
repz
dec
xchg
mov
inc
dec
jns
ja
daa
inc
popf
jp
lret
push
bound
xchg
xlat
mov
cmc
in
out
fucomp
add
xchg
int
mov
adc
mov
das
mov
xor
pop
and
icebp
push
js
in
pop
lods
add
mov
enter
pop
inc
cld
xor
dec
push
ljmp
pop
mov
jo
push
sub
mov
loope
mov
mov
xchg
mov
ds
and
mov
add
xor
dec
jae
mov
xchg
ds
frstor
idivb
aam
imul
pop
outsb
mov
pop
xor
aaa
fdivrl
mov
and
icebp
and
subl
int
fcomps
push
hlt
jmp
fwait
repnz
lods
sbb
and
repnz
pop
or
aad
jns
scas
lea
imul
or
xchg
xor
pop
mov
shll
mov
pushf
cmp
negl
push
cmp
fidivrs
leave
pop
pop
enter
mov
add
test
xchg
sub
addl
into
sub
add
out
cmp
testb
mov
push
mov
push
hlt
outsl
xchg
fisubs
test
adc
jb
or
jb
cmp
lret
jno
xchg
sub
icebp
cli
out
mov
data16
mov
mov
ret
cmpsb
fmull
rcl
in
mov
fnstenv
dec
xor
stos
or
cmp
add
shl
add
lea
mov
sbb
xor
dec
iret
mov
xor
cmc
mov
xor
and
push
and
push
sub
test
orw
and
das
mov
in
push
jmp
xchg
fnstsw
popa
xchg
sub
inc
lret
fidivl
sub
mov
cmp
shll
jle
pop
push
mov
jno
jmp
shrb
dec
lret
pop
addr16
xor
enter
data16
lods
mov
lret
icebp
repz
adc
stc
mov
out
scas
addl
stc
movl
popa
mov
dec
mul
push
cmpsl
ds
pusha
lods
cmp
lret
add
inc
jns
jb
repz
push
dec
push
push
rclb
lahf
ja
fwait
lea
sbb
iret
and
ds
and
mov
sbb
add
cmpsb
and
stos
inc
mov
mov
cmp
jmp
mov
cmp
sub
cltd
add
dec
sarl
lds
pop
leave
std
ret
and
push
add
out
cmc
jae
pop
adc
repnz
mov
lret
cmp
aaa
and
insl
test
pop
lcall
add
call
imul
cmp
rolb
xchg
xchg
lods
pop
aaa
in
mov
ljmp
movsl
cwtl
std
or
jnp
dec
shrb
push
sub
stos
pushf
xchg
iret
in
sub
inc
pushf
push
mov
notrack
sbb
pop
push
lahf
push
pop
scas
divl
ret
mov
in
pushf
mov
sub
into
push
and
pop
adc
fwait
and
pop
cld
mov
mov
ja
dec
aaa
xchg
mov
mov
and
aam
ret
inc
mov
hlt
mov
mov
mov
or
xor
cmp
int3
push
ret
inc
or
ret
shrb
inc
popa
dec
sbb
test
push
mov
sar
sti
inc
jbe
inc
sbb
aam
cld
and
insb
clc
push
mov
mov
or
push
mov
pop
ss
dec
xor
stos
mov
sub
clc
or
mov
sub
sub
mov
pop
ja
enter
xchg
shll
jns
stos
mov
mov
popf
cmpsl
test
test
imul
mov
mov
adc
out
lret
es
pushf
aam
push
or
inc
sub
sub
pop
cmp
sbb
push
add
mov
add
and
sbb
adc
loopne
cltd
test
inc
js
xlat
sub
pop
mov
xor
test
ret
mov
xchg
mov
call
inc
mov
cmc
out
sub
and
sbb
pop
sub
out
xchg
mov
jp
mov
dec
dec
xchg
lods
cmp
pop
sahf
in
iret
sahf
pop
push
jmp
rolb
nop
xchg
mov
mov
popa
xchg
xchg
mov
mov
inc
xor
out
lret
sbb
jo
add
jae
xchg
xor
xchg
cmpsb
mov
push
icebp
mov
xor
mov
decb
hlt
push
movsl
mov
daa
idivb
cmp
push
xor
lret
ds
out
mov
in
loopne
sub
call
cmp
cmp
imulb
sahf
or
add
pop
cmpsl
adc
pop
xor
into
repnz
icebp
popa
jbe
push
add
pop
and
inc
fimuls
loopne
mov
mov
les
lret
dec
jmp
bswap
ljmp
jmp
popf
push
repnz
dec
popa
js
cmp
pop
dec
inc
bound
mov
scas
inc
lea
loop
xchg
jno
mov
bound
mov
scas
arpl
or
mov
imul
jp
ret
out
test
repz
or
fwait
xor
cmp
sbb
int
push
ret
test
inc
aam
or
lret
in
aaa
pop
fisttpll
movb
sbb
scas
js
lock
pop
jl
pushf
out
mov
xchg
sub
lds
in
pop
xchg
out
mov
mov
and
mov
test
push
fs
add
inc
test
sbb
cmpsb
aaa
nop
test
xor
lods
sbb
add
and
sbbb
out
pop
jp
pop
enter
cmpsl
inc
jecxz
or
push
jp
jmp
dec
andl
das
push
push
pop
subl
inc
popf
push
lods
lods
xor
movsl
or
fs
add
jb
iret
mov
dec
std
jg
fldl
and
push
nop
in
cmpsb
out
pop
icebp
mov
sbb
push
sti
jge
out
push
cld
xor
mov
add
or
in
test
jne
and
xchg
xor
aam
mov
ds
test
xchg
addr16
xchg
lods
mov
jl
mov
sub
inc
out
ds
leave
rcl
cs
inc
mov
ret
mov
cmp
dec
xchg
aam
jo,pn
addl
mov
xor
fistpll
fnstcw
pushf
inc
xlat
cld
sub
inc
pop
xchg
pop
or
repnz
or
adc
and
nop
mov
push
xchg
sbb
leave
mov
adc
sbb
xor
jmp
mov
ret
cmp
testb
sub
xor
mov
in
negl
nop
mov
jns
pop
ljmp
mov
xor
mov
add
jbe
cmp
in
outsl
xchg
leave
mov
or
insb
movb
mov
movsb
popf
cmpl
mov
or
sub
or
iret
mov
dec
fwait
leave
cmp
mov
lret
jl
mov
add
popf
ljmp
test
and
pop
mulb
fcmovnu
jb
mov
in
lods
pop
sbb
mov
outsb
pop
cmp
rorb
xor
jecxz
enter
push
mov
in
mov
gs
sbb
push
lahf
aad
pop
loopne
xchg
or
lret
into
shl
loop
mov
mov
add
mov
sbb
idiv
stos
js
jne
lods
and
das
xorl
iret
xchg
sbb
outsb
pop
or
flds
inc
scas
add
cs
sbb
cmpsb
pop
push
iret
jns
and
mov
add
les
pop
dec
pop
jnp
in
cmpsb
ljmp
and
nop
fcmove
mov
or
sarl
dec
daa
ja
or
xchg
sbb
pushf
adc
js
adc
sbb
mov
inc
push
dec
cmp
pop
nop
fs
and
cmp
js
cs
lods
repz
adc
jb
xchg
mov
dec
mov
mov
dec
or
mov
in
cs
inc
test
xor
mov
or
push
cli
push
dec
test
sub
xchg
add
lds
dec
scas
mov
ficoml
std
loopne
xchg
pop
aas
push
jae
js
pop
rorb
pop
sub
cmc
inc
cmp
fisttpll
xchg
xchg
daa
pop
das
cwtl
in
out
loope
mov
dec
push
imul
jecxz
push
enter
xchg
out
pop
sbb
lods
test
jle
aas
imulb
and
lahf
insl
dec
sahf
hlt
stos
add
inc
sub
mov
cmp
mov
jle
inc
fucomp
and
sub
xor
idiv
push
in
popf
mov
addb
mov
std
push
test
and
xor
shlb
dec
xor
pop
scas
call
and
das
sub
nop
out
cmp
inc
outsl
ds
lea
fcmovb
sbb
sub
cld
jno
leave
jp
test
aad
std
or
pop
inc
xor
cmpsb
jne
inc
add
lea
jns
ficomps
aam
xchg
pusha
lea
dec
add
xchg
icebp
cmp
jo
pop
mov
push
xlat
aam
adc
mov
or
pushf
cmp
cmpsl
js
cltd
sbb
inc
fwait
xlat
push
push
push
dec
mov
loop,pt
mulb
cmpsl
scas
roll
lret
jmp
mov
push
lds
inc
add
xor
jae
jge
aam
sbb
pushf
adc
mov
pop
mov
xor
pop
and
fsqrt
lods
dec
mov
cli
adc
jge
test
mov
icebp
sub
lret
xlat
in
aaa
lods
orl
pop
rsqrtps
lret
pop
test
xchg
cmpsl
adc
std
mov
xchg
add
mov
or
dec
mov
cmpsb
add
inc
test
fstpt
fdivrp
and
out
shrb
std
ret
out
mov
cwtl
adc
sub
pop
adc
movsb
dec
or
dec
cwtl
pop
iret
xchg
fwait
out
mov
mov
xchg
push
push
icebp
xchg
bound
lock
iret
xor
cli
sub
lock
loop
jecxz
or
js
cmp
mov
pusha
bound
push
popf
adc
mov
rorl
add
push
mov
inc
mov
fcomip
jecxz
adc
mov
popa
clc
dec
add
shr
push
adc
adcl
dec
out
xchg
mov
jno
mov
pop
cmp
push
jl
cwtl
xor
mov
mov
ss
cmpsb
js
clc
femms
sbb
movaps
inc
cld
jmp
leave
and
call
in
cltd
je
mov
xchg
inc
leave
push
int
sahf
loopne,pn
nop
jne
push
sbb
mov
xchg
mov
mov
inc
and
outsb
lret
cmp
sbb
sub
add
add
xorl
adc
aam
xchg
mov
push
xchg
sub
add
repz
push
js
xlat
jae
adc
and
std
mov
lret
sbb
xchg
pop
add
mov
mov
jo
dec
dec
add
imul
aam
cwtl
pushf
ret
adc
xor
mov
sbb
fdivrl
mov
add
movsl
dec
pop
adc
pop
pop
mov
stos
int3
cmpsb
xor
jge
mov
bound
pushf
xchg
push
scas
jmp
mov
xor
mov
mov
out
mov
jne
dec
xor
int
orb
sub
jo
stc
and
fists
sahf
bnd
dec
mov
xchg
mov
shll
or
xor
fucom
imul
test
jne
push
pop
jle
and
push
pop
add
sbb
push
fs
sbb
or
test
aad
xchg
or
std
aaa
sub
or
jb
pop
or
mov
mov
mov
daa
iret
push
cmpsb
or
xchg
mov
push
cmpsb
mov
cmp
cld
stos
das
jg
rclb
lods
jo
pop
fistpl
or
inc
push
inc
jle
lds
lods
fwait
lods
cld
jecxz
ds
xchg
push
rorl
pop
testl
cmpsb
fcomi
fstpt
lea
push
leave
add
fdiv
ds
xchg
cmpsb
sbb
outsl
loope
imul
mov
push
dec
cwtl
mov
inc
cmp
cmc
clc
xchg
pop
stc
adc
movsb
ret
imul
jo
cmp
add
mov
sub
js
loopne
sbb
call
into
push
scas
xor
push
xor
test
test
icebp
imul
xchg
daa
jb
aas
inc
mov
push
xor
scas
and
jns
xor
insb
sub
das
test
loope
add
cld
push
xor
repz
fisttps
or
adc
inc
leave
out
sub
hlt
sbb
push
mov
push
push
xor
ja
movsl
or
cmpsb
push
shll
aad
push
mov
and
inc
inc
es
add
das
int
jo
out
xchg
and
dec
clc
test
and
fisubl
mov
sti
cmpl
push
out
xchg
arpl
mov
stos
outsb
add
jp
ja
mov
mov
mov
xor
repnz
jge
and
fldt
pop
pop
clc
dec
adc
mov
xchg
test
faddl
lret
das
pop
fldt
rcl
scas
mov
inc
xchg
loope
jns
lods
aam
push
jae
mov
aad
xchg
out
and
lock
sbb
dec
push
jl
xor
sub
lds
sahf
cmpsl
gs
mov
aaa
fdivl
lcall
xor
pop
push
fsts
sub
testb
in
and
jne
out
dec
dec
in
loopne
adc
and
in
pop
test
loopne
fnclex
and
insb
cmpsl
mov
fmull
jno
out
dec
add
cltd
lret
mov
sub
cwtl
fimuls
cs
push
in
pop
nop
mov
mov
xor
or
cmp
push
lahf
inc
jl
push
sub
popa
cmc
mulb
sbb
jns
xor
ds
pop
xor
in
insl
pop
jl
push
movsl
xlat
fdivrl
inc
push
dec
lret
test
lret
and
xor
jae
xchg
repnz
cmp
out
jb
div
jmp
lahf
jmp
rcll
adc
add
stos
pop
fwait
dec
aad
into
insb
das
nop
fcomi
in
sub
lcall
mov
js
xlat
jae
mov
loopne
arpl
jae
dec
jo
cmp
pop
cwtl
mov
ds
inc
loopne
or
pop
js
mov
push
out
push
mov
add
sbb
pop
mov
movaps
add
enter
mov
imul
push
add
cltd
cmpl
scas
es
ret
and
out
adc
push
leave
test
jns,pt
jge
pop
loope
pop
in
push
xor
xor
xchg
shlb
mov
aas
out
adc
clc
popf
lea
push
pop
call
push
movsb
fstp
push
cmc
es
pop
mov
pop
pop
fstpt
out
scas
test
scas
roll
jecxz
sbb
or
and
test
and
test
push
rcrb
jmp
or
mov
mov
aam
scas
add
mul
add
pop
push
fstl
fucomp
pop
xchg
outsl
cmp
lahf
mov
and
push
aam
rolb
lret
pop
repnz
xchg
push
sub
xor
sub
and
jbe
push
daa
in
or
lds
fcompl
inc
or
dec
ljmp
xor
mov
icebp
mov
xor
in
test
loopne
push
dec
fists
popa
inc
mov
dec
das
jmp
add
in
jb
andl
loope
test
push
or
mov
add
sti
xchg
ljmp
mov
fisubrs
lahf
dec
ljmp
stos
fwait
jno
push
xchg
ja
je
sbb
inc
cmp
lcall
or
test
aam
sub
js
push
mov
mov
sub
mov
add
mov
pop
jp
test
xchg
test
xchg
jno
sbb
imul
and
dec
push
sbb
out
add
push
pop
sbb
dec
inc
mov
fldcw
push
jle
nop
jo
loop
inc
notb
pop
leave
push
jns
pop
shll
cmp
xchg
popa
shrb
arpl
push
mov
push
or
fcomps
xchg
cmp
imul
fs
les
daa
cmp
pminub
les
mov
inc
gs
or
lret
cli
lret
mov
loope
stc
arpl
pop
xchg
fs
in
dec
cmp
dec
xchg
outsl
inc
cwtl
repnz
jns
scas
ss
jno
es
es
loopne
mov
fsubrs
xchg
test
and
jle
aas
andb
lea
ja
fiadds
shl
sbb
clc
jmp
imul
stos
jb
cwtl
mov
cwtl
xchg
shll
cmc
sarb
jmp
sub
xor
jnp
ss
sub
stos
jle
outsl
popf
ja
scas
gs
jmp
cmp
add
sbb
dec
fcoms
jecxz
jg
fnsave
outsl
sbb
dec
inc
insb
xchg
mov
xchg
xor
adc
imul
mov
sub
in
mov
addr16
faddp
jb
and
xchg
sahf
int
dec
cmpl
stos
sbb
mov
xor
inc
js
xchg
mov
nop
inc
pop
push
push
das
jne
xor
into
insl
cs
cmp
mov
cltd
ret
xor
bound
movsl
pop
mov
lock
mov
scas
inc
out
inc
insb
or
lcall
add
sbb
mov
mov
and
out
lock
mov
jmp
dec
cltd
aas
shl
lret
into
es
clc
dec
mov
push
sbb
scas
mov
lcall
add
mov
cwtl
out
lea
jmp
into
sub
in
mov
shrb
lret
test
out
inc
fcoms
cwtl
sub
test
and
outsl
pop
sti
jl
sarl
idiv
aad
and
stc
or
adc
shrl
aaa
mov
jno
mov
mov
adc
jge
cmpsb
stos
into
mov
fmul
and
push
movsb
je
fisubrl
adc
xchg
jbe
jg
insl
xlat
out
mov
mov
loope
xor
outsl
les
mov
popf
repz
jecxz
and
call
adc
jp
sub
loope
fisttps
mov
adc
or
xor
fcmovbe
orl
mov
mov
sarb
add
scas
int3
adc
sbb
xchg
jb
insl
inc
out
pop
jle
mov
stos
jns
adc
test
dec
push
xchg
ret
mov
push
rcr
lds
or
mov
cli
insb
jmp
addr16
stos
call
imulb
add
shll
testl
xchg
xor
mov
xchg
adc
and
cld
imulb
mov
movsb
xor
and
hlt
fdivp
in
test
icebp
loope
filds
pop
or
insb
popa
lods
pop
jne
insl
xchg
in
mov
push
int
fstp
pusha
sub
xchg
jno
push
cmpsb
int
fbstp
mov
add
mov
sbb
cs
insl
pop
jecxz
dec
jmp
pop
xchg
fiadds
push
dec
stc
dec
mov
xchg
ret
lea
adc
int3
mov
push
sbb
clc
popa
dec
jg
stos
cmc
inc
or
mov
jns
dec
jp
int3
mov
dec
mov
scas
xchg
out
push
dec
repz
dec
subb
push
adc
insl
dec
mov
mov
sbb
jecxz
push
and
xchg
fcoms
mov
into
insb
cwtl
xchg
add
imul
or
fcomi
aaa
mov
stos
push
dec
sbb
jbe
ret
scas
cmp
addr16
sub
add
mov
xchg
scas
dec
aas
lds
jnp
or
loope
repnz
bound
mov
sarl
bound
orb
shlb
out
inc
adc
push
mov
xor
ds
es
je
cmp
pop
sbb
pop
mov
mov
adc
add
jnp
movl
clc
ucomiss
push
aaa
pop
jno
cld
add
adc
shrl
sub
adc
aas
pop
push
out
enter
rcrb
push
push
test
adcb
lahf
ds
std
xchg
lock
pop
push
sub
dec
out
jle
bound
ljmp
and
xorb
cmp
mov
popf
pop
jno
lahf
jg
sbb
mov
stos
pop
lcall
cmp
dec
test
and
or
push
mov
filds
subl
cmp
outsb
scas
inc
pop
jae
sbb
ljmp
lret
jl
xor
loop
lods
xlat
mov
dec
enter
jmp
push
loopne
cmp
cltd
mov
and
mov
popa
iret
pop
mov
repnz
in
mov
test
cmpsl
imul
jp
push
sbb
js
push
jg
mov
ljmp
insb
jns
faddl
bound
jmp
push
hlt
loop
les
adc
xor
fcomp
xchg
dec
imul
pop
ljmp
add
mov
mov
popf
addr16
mov
adc
es
insl
and
enter
in
push
or
push
shrl
sti
test
shrl
mov
add
sti
mov
mov
jno
xorps
mov
adc
dec
mov
in
addl
jmp
jae
out
lcall
leave
pop
xor
sbb
mov
aad
mov
jle
shrl
mov
sbb
mulb
add
sbb
pop
cmc
fdivs
inc
cli
pop
mov
sbb
push
es
sbb
sub
imul
xchg
int3
push
mov
xlat
cmpsl
mov
add
adc
mov
mov
out
mov
loope
sub
pop
push
or
jle
xor
push
insl
adc
pop
shll
scas
in
ficoms
ja
negl
sbb
mov
cmpsb
lds
adc
scas
pop
pop
push
int
mov
or
pop
sar
mov
mov
add
xchg
mov
inc
jb
cmp
ja
pop
lcall
cmpsl
and
lret
jnp
xor
roll
mov
imul
dec
jmp
ret
in
mov
inc
pop
mov
adc
add
mov
outsl
fisttps
xor
in
inc
rorl
incl
mov
scas
cmc
sbb
jne
ja
pop
inc
lods
out
vpmulhuw
dec
lret
push
daa
inc
rol
in
ja
subl
mov
sub
js
in
inc
mov
or
jle
and
pop
inc
mov
imul
cmp
add
push
adc
js
add
nop
sbb
fiadds
repnz
pusha
cmp
push
int
or
lock
lock
cli
xchg
mov
and
push
je
dec
scas
jmp
fwait
mov
push
pusha
fstl
les
jecxz
cli
adc
daa
sbb
xor
inc
mov
out
pop
ljmp
adc
pop
stos
mov
imul
fcompl
iret
add
cmp
pop
and
xor
xor
cmpl
std
std
push
daa
mov
rcr
adc
test
or
decl
sub
or
frndint
and
lcall
mov
fs
rcll
adc
jnp
or
lret
stos
adcl
stos
gs
imul
jl
scas
mov
push
jo
dec
pop
pop
outsl
push
jbe
fisttpll
push
aas
cmp
mov
push
call
flds
cs
push
adc
lea
shll
fs
add
in
dec
jmp
xor
mov
sub
mov
xor
fistl
xchg
lret
and
out
ljmp
loop
lods
outsb
adc
imul
mov
cmp
adc
data16
test
lods
xchg
jmp
cli
cmp
mov
mov
mov
aas
cld
xor
out
fwait
iret
ds
mov
push
subb
fistps
jb
dec
inc
movsb
jecxz
pushf
mov
fwait
aam
mov
push
or
cltd
pop
mov
xchg
mov
sbb
enter
out
faddl
xor
jb
add
cltd
imul
dec
sub
and
fwait
pop
mov
mov
push
stos
jnp,pt
js
in
or
sbb
repnz
leave
shlb
scas
jno
dec
sarb
add
shll
and
mov
xchg
xchg
fs
mov
mov
shrl
dec
sub
and
aam
sbb
test
cmp
mov
mov
sbbb
and
inc
mov
push
push
cmpsl
fisubrs
and
fildl
push
inc
cmc
pusha
pop
xor
jge
sub
inc
pusha
test
sbb
jle
push
clc
sub
dec
pop
les
jg
sub
xor
in
sbb
xchg
inc
or
mov
in
inc
in
je,pt
bound
out
xchg
aam
push
data16
adc
jle
and
mov
lahf
gs
scas
lods
cmpsl
pusha
dec
outsb
jnp
push
sub
in
sbb
add
stos
dec
push
jmp
push
test
mov
inc
test
lahf
repz
push
movsb
or
cmpb
aas
sbb
inc
mov
mov
dec
jb
mov
cld
pop
lods
lahf
in
sbb
jbe
jge
sahf
sub
les
fdivrs
daa
mov
pop
in
test
and
inc
enter
int
sub
popf
cmpsl
test
jmp
or
lret
inc
jo
dec
xor
in
bound
fdivl
repz
cwtl
push
stc
and
cmp
ficoml
push
jp
or
in
aam
cmp
jecxz
divl
inc
lret
loope
dec
mov
test
les
cli
push
movsl
push
imulb
jg
stos
das
cmp
clc
lret
cmp
test
imul
or
jmp
aaa
sbb
data16
adc
cmp
push
sbb
out
jl
js
out
imul
fimuls
xchg
call
repz
lret
dec
ds
jecxz
xorb
fadds
sbb
xor
cwtl
lods
dec
bound
or
xchg
fwait
adc
adc
sarb
cld
testb
loop
int
sub
arpl
in
in
mov
pop
and
adc
into
shlb
scas
js
je
push
push
xchg
test
cmp
shl
pushl
dec
cmp
cmp
mov
sub
mov
cmp
and
iret
xor
push
leave
dec
mov
push
fnstcw
push
addr16
mov
test
pusha
cmpsl
inc
inc
mov
push
and
xlat
mov
enter
push
xchg
imull
movsl
scas
scas
pusha
repnz
pop
cltd
mov
jecxz
aaa
loopne
scas
add
or
add
adc
jg
test
mov
xchg
mov
or
test
jne
cmpsl
add
sbb
outsb
or
or
jne
mov
dec
cli
mov
inc
mov
in
mov
mov
sbb
mov
dec
and
orb
sub
aam
mov
cmc
adc
loope
fmul
add
cmp
push
call
inc
lods
aaa
xchg
in
hlt
data16
push
lea
dec
xchg
dec
and
enter
hlt
mov
adcl
pop
stos
cmp
and
mov
stc
filds
rolb
jnp
sub
mov
xchg
les
in
mov
fmuls
inc
mov
cwtl
jmp
cmp
dec
cmp
mov
jbe
repnz
xchg
div
push
xchg
and
mov
add
xchg
mov
push
pop
in
jno
and
cmc
sbb
pop
lretw
loope
sbb
jl
gs
or
xor
in
mov
lahf
fadd
fs
es
enter
push
movsb
xchg
mov
mov
push
sbb
shr
in
mov
jg
inc
inc
push
out
push
int
in
ss
gs
jl
xor
inc
pop
sahf
leave
xchg
fistps
fistpll
mov
dec
dec
mov
adc
filds
fadd
dec
shl
jecxz
push
mov
fnstsw
and
jp
mov
fisttps
ret
daa
inc
jo
xor
add
adc
std
mov
cmpsl
mov
jbe
mov
mov
das
daa
cmp
fidivl
hlt
pop
mov
lock
xchg
sbb
pop
pop
xor
ret
jecxz
sub
out
fsubs
mov
andb
enter
sbb
lahf
fildll
or
and
stos
movsl
rolb
dec
imul
iret
and
mov
loopne
dec
aam
pop
lcall
aad
das
mov
xor
sysret
cmp
push
push
dec
sahf
stos
and
cs
pop
add
mov
fs
lcall
cld
pop
jae
in
inc
in
les
das
pop
aad
out
sub
inc
cmp
stc
into
push
or
out
adc
mov
ss
add
mov
push
inc
mov
push
xorl
inc
outsb
insl
or
dec
mov
fwait
pusha
push
rol
pushf
xor
push
jno,pt
outsl
dec
imul
fdivs
dec
aad
jne
cwtl
or
jecxz
push
fidivl
outsl
mov
pop
ss
sbb
cltd
ret
cltd
mov
cld
mov
rorb
or
xchg
fs
sbb
adc
cs
xor
or
jo
divl
testl
or
out
aam
je
test
jo
xchg
add
nop
lods
out
dec
cs
mov
gs
les
std
test
test
dec
mov
daa
pushf
sbb
mov
adc
ja
gs
sbb
out
push
mov
pop
mov
cmpsb
add
jne
xchg
call
cmp
push
fbstp
cli
out
js
mov
dec
jno
movsl
movsl
adcl
jp
daa
and
das
fsub
fsubrs
int3
inc
call
xchg
scas
daa
push
mov
jae
push
sbb
push
mov
addr16
fs
repnz
mov
sub
mov
push
jnp
sbb
xchg
addl
add
mov
push
int
into
jb
mov
sub
adc
sti
daa
ret
adc
and
mov
outsl
pop
movsb
arpl
in
inc
scas
mov
cmp
sbb
jge
lret
cmc
call
fists
pushf
adc
push
je
mov
adc
fisttps
jne
jle
or
sbb
mov
cs
or
xchg
push
cs
aad
pop
icebp
push
cli
mov
je
sahf
fnsave
ja
pushw
push
or
sti
fwait
jl
gs
adc
stc
pop
outsb
add
scas
mov
push
stos
jnp
add
cmpl
mov
testl
and
clc
mov
int
mov
and
sti
push
dec
pop
shrb
inc
shrb
in
std
repnz
mov
cmpsl
cmp
sti
mov
cmp
out
mov
jl
lock
rolb
and
push
jmp
inc
jmp
ja
test
sub
je
inc
push
jmp
jge
jnp
sbb
fldl
xor
adc
lret
fnsave
pop
cmp
mov
dec
out
lock
cmpsb
std
sbb
sbb
xchg
loop
xchg
fs
loop
shlb
je
pop
jo
mov
lahf
fistpll
and
aas
mov
iret
loopne
push
loopne
cltd
jnp
fwait
and
mov
push
sub
xchg
or
and
test
testl
lock
cltd
lea
movsb
fwait
fwait
stos
mov
inc
fimull
mov
cmc
xor
sbb
lret
rcl
mov
xorb
push
les
mov
jle
and
shr
or
and
imul
stos
fs
inc
mov
xlat
pop
adc
call
sarl
and
imul
flds
mov
sbb
mov
mov
mov
sbb
out
je
pop
jnp
scas
call
cltd
out
mov
mov
bound
sbb
jge
xchg
xor
xchg
jg
pop
insl
jp
xchg
daa
sbb
inc
inc
xorb
or
jb
dec
inc
test
pop
lock
xor
out
add
cmpb
mov
in
jns
lods
shlb
dec
cld
xchg
xchg
into
movsb
mov
mov
mov
cmp
cmp
lret
cmpsb
loopne
push
cmc
das
out
push
addr16
add
rcrl
and
jmp
fiadds
pop
dec
popa
sbb
adc
jmp
loop
enter
jp
sub
rolb
stos
fcmovnb
push
pop
fdivs
ss
stc
sub
int
sahf
and
std
es
dec
fcoml
xor
lods
and
mov
cmp
dec
das
xchg
in
imull
int3
rolb
test
bound
add
adc
call
push
mov
push
sbb
jmp
imul
jbe
jmp
rorl
mov
xorl
lahf
stos
push
pushf
loope
add
sub
insl
push
xor
jnp
imul
pop
jg
shrl
call
xor
cli
shrl
js
lods
movl
mov
pop
dec
jo
aam
mov
pop
xchg
dec
dec
stc
sbb
lods
or
push
push
pop
stc
pop
insl
and
sub
outsl
scas
mov
cmpl
sub
mov
shrb
xor
xor
bound
inc
movsl
cmpsb
rep
add
xchg
es
adc
aam
int
jns
inc
les
cmp
xchg
mov
stc
fstp
pop
dec
xor
pop
sarb
xchg
push
mov
or
bnd
xchg
std
pop
rclb
pop
daa
movsb
and
dec
pop
ja
into
lods
xchg
iret
dec
lahf
in
pop
imul
insl
adc
out
jns
mov
adc
clc
lds
lahf
xor
mov
jbe
addr16
clc
scas
mov
testl
shll
lods
sub
dec
sbb
shll
mull
out
lahf
iret
add
dec
int
rcrb
inc
pop
pushl
pushf
inc
pop
dec
xor
bound
ffree
loopne
dec
ret
dec
add
sub
xlat
out
enter
test
sbb
mov
push
loop
xlat
mov
inc
andb
jecxz
loop
push
iret
out
push
mov
mov
add
mov
and
cmp
insb
push
inc
repz
rolb
jb
je
mov
jmp
loope
stc
jl
mov
push
cmp
lods
jnp
mov
mov
lcall
ljmp
shl
inc
dec
lds
or
pushf
xchg
incb
jnp
jb
sbb
push
add
imul
je
cmp
xor
or
mov
ds
mov
cs
shlb
jg
xor
mov
daa
sub
scas
push
mov
xchg
mull
fcoml
leave
test
jbe
jbe
loopne
enter
sub
popf
push
cmc
cs
add
mov
cli
in
out
scas
xchg
stos
cmp
mov
enter
outsb
cltd
inc
xchg
cs
daa
imul
xchg
jecxz
cmpsb
sbb
pop
das
loope
out
repz
pop
jge
xchg
cli
shl
stc
jns
fidivrl
loop
nop
mov
xchg
lock
inc
and
jo
pop
addb
loop
dec
insl
mov
push
mov
jecxz
dec
out
mov
outsb
pop
mov
jb
cmpsb
mov
sub
mov
scas
xchg
mov
mov
mov
xchg
int
jle
mov
dec
mov
inc
push
push
imul
icebp
fs
daa
cs
mov
mov
test
cmp
sbb
pop
shll
call
popf
test
mov
movsb
pop
cmpsl
js
pushf
sahf
popa
cmp
stc
mov
dec
jbe
sti
xchg
dec
xor
and
jne
mov
mov
add
cmp
inc
mov
inc
mov
mov
add
add
mov
mov
shrl
fidivs
mov
xor
cmp
lcall
cmp
nop
mov
sub
adc
or
xchg
rorl
pop
repz
push
sbb
sub
dec
in
pop
jne
lcall
leave
or
test
test
scas
lock
mov
inc
insb
sbb
xor
mov
cmpl
lea
bound
out
jnp
jge
xchg
mov
out
aas
andb
imul
mov
clc
push
lcall
xchg
jbe
mov
lock
mov
out
testl
stc
jmp
in
inc
mov
fldt
fisubl
mov
pusha
sbb
mov
sarb
add
mov
dec
xor
cmp
sub
add
lea
aas
lret
push
mov
sbb
dec
pop
xor
push
in
jl
sahf
jge
in
mov
mov
jge
pop
mov
in
push
adc
mov
xchg
pop
and
adc
dec
std
mov
or
aaa
int3
in
xchg
mov
call
sbb
adc
push
mov
sti
push
jmp
loopne
mov
mov
push
push
mov
xchg
inc
jmp
xor
xchg
imul
mov
push
jno
mov
or
mov
push
push
lock
fildl
pop
ret
xor
loop
pop
jmp
out
lcall
and
mov
iret
mov
fists
hlt
xor
jmp
rclb
xchg
div
mov
dec
xor
sbbb
ret
jp
adc
mov
fidivrs
outsb
cmp
dec
outsl
adc
rcll
dec
in
mov
imul
popa
dec
dec
imul
jns
mov
sub
pushf
fs
int3
jecxz
xor
and
and
add
outsb
js
stc
sti
stos
pusha
and
sahf
or
mov
pop
sub
loope
mov
dec
sarl
loop
imul
or
sbb
pop
test
pop
ljmp
pop
cmp
in
int
inc
jo
enter
cmpl
dec
push
sbbb
data16
and
sub
pop
xchg
and
aam
jmp
mov
lock
xor
add
inc
insl
loope
hlt
leave
cli
mov
test
xchg
push
insl
pop
ret
push
mov
test
cmp
adc
sub
xchg
outsl
clc
sbb
fmuls
inc
mov
mov
fwait
cmc
mov
mov
jns
js
outsl
flds
test
mov
pop
dec
inc
mov
xlat
jb
icebp
or
enter
in
loop
cwtl
enter
jmp
dec
shlb
insb
jae
stos
fistl
xchg
add
fs
push
sbb
lea
pop
ret
insl
cwtl
sbb
add
jp
shrb
sbb
mov
pop
cs
and
out
pop
push
sti
mov
mov
cld
mov
jl
popa
sub
mov
or
and
inc
or
repnz
testb
inc
pop
mov
mov
loop
orb
fsubr
sbb
roll
das
clc
sub
ja
mov
cmp
aaa
jg
xor
push
push
or
leave
pop
inc
arpl
daa
shrl
lods
mov
lcall
push
dec
clc
addb
mov
repnz
jbe
or
dec
das
xchg
mov
adcb
test
mov
or
adc
add
test
sub
jle
push
xlat
loope
pop
cltd
insl
adc
in
push
ja
aaa
cmp
inc
sub
sub
out
fsts
jge
call
inc
test
lea
inc
into
stc
hlt
fcompl
inc
repnz
nop
lods
test
daa
stos
mov
scas
pop
mov
aaa
sub
mov
sbb
xor
push
sub
pop
pop
sub
sub
sbb
lret
clc
lcall
inc
dec
loopne
mov
dec
cmc
aas
sub
arpl
pop
mov
loop
xchg
push
push
lock
or
cmp
fildl
fs
xor
lea
mov
sub
cmpsb
lods
mov
das
or
leave
fucomip
jae
jnp
pop
stc
push
loop
ret
pop
xchg
xlat
dec
xor
xchg
inc
sub
jmp
es
xor
lahf
into
fstpt
data16
jmp
iret
inc
jmp
je
sub
push
ret
inc
jnp
or
xchg
jecxz
lret
push
rol
aas
sub
jnp
pop
lock
cmc
dec
push
sbb
adc
adc
mov
inc
outsl
mov
jbe
push
in
loop
lods
and
fldl
or
adc
ds
push
mov
pop
test
push
mov
daa
xlat
or
repnz
xchg
fcomp
mov
jge
mov
pop
adc
cmpsl
inc
outsl
imul
ss
xor
ret
jne
stos
push
ret
xchg
sub
and
js
outsb
ja
lods
mov
in
add
mull
mov
or
mov
fcoms
pop
les
data16
xchg
pop
push
test
sub
and
pop
adc
xchg
push
mov
or
xlat
add
adc
mov
jge
jle
imull
xchg
stc
xor
cwtl
and
aaa
sarb
or
jp
rcr
int
mov
fisubs
and
cld
imul
sti
jg
jl,pt
rorl
scas
mov
sbb
cmp
sbb
test
push
xchg
and
pop
jnp
imul
lock
mov
out
adc
cmp
dec
sahf
jno
sbb
fwait
sahf
dec
mov
pop
arpl
arpl
adc
cmp
sbb
notb
pop
aad
jb
jg
mov
jnp
adc
iret
cmpsl
leave
xorl
aas
push
stos
lret
mov
fcomi
mov
or
mov
xchg
imul
jae
repnz
inc
mov
bound
sbb
mov
add
cld
and
fs
add
int3
lcall
shlb
or
jno
fidivrl
pop
push
ds
mov
xor
cld
or
sti
xchg
stos
movsb
adc
les
in
cmp
js
push
mov
pop
push
dec
leave
addr16
mov
mov
xlat
sbb
push
in
fcomps
sub
in
jecxz
icebp
pop
stos
aaa
jne
les
mull
in
lcall
fimuls
or
mov
sbb
mov
iret
pop
test
xchg
test
xor
shrl
test
dec
nop
imul
mov
call
flds
xchg
lahf
xor
xchg
sbb
loop
or
rcll
std
shl
iret
push
je
push
rol
je
push
loop
xchg
inc
test
push
ret
sbb
adcb
cmpsb
adc
adc
mov
adc
add
adc
in
jns
mov
sbb
cmp
movsl
xchg
lret
mov
leave
pop
js
fiadds
inc
pop
pop
or
icebp
arpl
inc
outsl
sub
mov
xor
push
loopne
mov
imul
testb
sbb
les
mov
sbb
lods
inc
repnz
push
pop
lret
sbb
in
cli
out
or
mov
into
pop
dec
pop
outsl
adc
icebp
pop
fs
and
gs
xchg
mov
fcomip
or
mov
sbb
popf
shl
popf
xchg
dec
xchg
stc
lds
jle
cli
and
aas
dec
fwait
and
in
das
cmp
mov
dec
sbb
push
movsl
movq
loopne
push
test
test
jne
shrb
lcall
cmp
aam
ljmp
add
mov
mov
xchg
mov
movsb
mov
leave
cmp
or
leave
sbb
mov
rsqrtps
or
pop
adc
cmc
sub
xchg
jl
or
arpl
out
lret
jmp
dec
aaa
cld
test
lret
icebp
or
xchg
add
jae
gs
jp
repz
xor
subb
sub
mov
lahf
outsb
cmp
in
pushf
pop
loop
sbb
sbb
test
and
push
bound
pop
inc
add
dec
test
std
inc
int3
insl
enter
jb
hlt
cmc
jge
dec
or
jmp
dec
andl
cmpsb
repnz
out
out
es
pop
or
test
push
gs
test
repnz
pop
jecxz
sub
push
and
lahf
popf
pusha
push
out
mov
push
mov
popf
and
jp
inc
jnp
fisttpll
inc
sub
xchg
mov
lret
jecxz
jae
call
repz
sbb
imul
xchg
subl
xorb
imul
mov
push
ficomps
movsb
xor
cmpsb
je
sbb
ja
dec
sub
out
test
lret
xchg
mov
iret
jg
out
scas
push
js
lret
dec
push
mov
mov
lds
cmc
cmp
lret
sub
popw
cmp
pop
inc
pop
addr16
mov
imul
mov
jg
adc
or
mov
push
push
sub
mov
jg
and
repnz
mov
outsb
iret
movsl
inc
sbb
daa
ja
xchg
push
jnp
mov
call
jo
div
in
fimull
in
ret
mov
add
and
push
or
mov
cmpsl
cwtl
and
sub
lds
outsl
fcmovnb
mov
sbb
cli
aad
add
jo
and
adc
cmp
cwtl
inc
out
xlat
sub
dec
mov
xchg
xchg
mov
arpl
int
mov
call
adcl
jae
cld
xchg
sbbl
and
jl
adc
xlat
stos
mov
outsl
enter
test
sbb
fadd
pushf
sub
addr16
lock
dec
pop
test
pusha
fistl
adc
push
enter
or
aaa
pop
dec
cwtl
mov
and
mov
jb
arpl
insb
jmp
xchg
and
mov
mov
imul
mov
dec
es
jp
ss
xor
dec
in
mov
insb
lods
sar
xor
icebp
sarb
jmp
cmp
dec
popa
sbb
out
mov
mov
jno
push
lret
pop
cmp
pop
fsubrl
jmp
mov
std
test
das
jg
ret
movsl
xchg
dec
mulb
mov
jp
mov
pop
pop
out
adc
loope
sahf
sub
and
add
pop
fcoms
mov
cld
ljmp
dec
fisubrl
inc
int
mov
sub
mov
inc
mov
xor
cwtl
andb
fistl
adc
mov
mov
shll
movsl
fsubl
mov
adc
popa
inc
cs
fcomps
out
cltd
test
push
insl
pop
jp
in
lods
sbb
icebp
imul
add
pop
loope
sahf
lret
cmp
mov
pop
arpl
subl
adc
cmp
jns
pop
mov
popf
pop
inc
or
aaa
dec
mov
cmp
sbb
push
xchg
sarb
jnp
xchg
aaa
fnsave
dec
shrb
sub
jno
mov
fdivr
lods
inc
ficomps
xchg
add
pop
push
xchg
xchg
cmp
insb
push
mov
fcomi
inc
ret
jmp
dec
add
fwait
test
in
sti
int
xlat
lods
push
stos
pop
bound
mov
xchg
or
stc
mov
cmp
leave
sub
push
loopne
mov
push
pushf
notl
cmpb
outsl
inc
pop
std
sub
jp
inc
or
movsb
mov
loop
pop
mov
test
in
push
data16
adc
sub
mov
mov
into
xor
mov
aaa
or
push
or
cmp
cmc
loop
push
lret
mov
scas
push
push
lret
mov
insb
cmpsl
xor
icebp
jg
leave
pop
cmpl
pop
fucomp
lods
fimuls
mov
pushfw
das
scas
int3
enter
xor
lock
ret
jg
inc
stos
mov
aam
dec
sub
mov
fisttps
dec
in
jns
fisttpll
and
mov
inc
jns
push
cmp
jnp
arpl
jmp
ret
cwtl
iret
lret
lods
xchg
cmp
dec
je
push
lock
push
outsl
hlt
into
popa
mov
inc
and
pop
mov
pop
push
sahf
pushf
outsl
or
push
jbe
xor
xor
fwait
mov
loope
fcmovnbe
mov
sbb
inc
cmp
shl
fpatan
shl
fs
mov
pop
xchg
outsl
out
push
lock
cmpsl
add
mov
inc
arpl
or
andl
fsubl
orb
test
cltd
inc
and
mov
push
cli
test
insl
cmp
clc
sub
inc
push
push
adc
mov
push
push
cli
xor
and
imul
push
insb
jb
sbb
aaa
pop
mov
push
and
pop
mov
xor
out
mov
mov
cs
sbb
ret
push
shlb
popa
ja,pt
or
rcll
mov
push
add
mov
sub
push
in
jle
mov
pop
inc
push
sbb
mov
jg
test
mov
rorb
lcall
mov
xchg
inc
inc
cmpl
add
lea
out
inc
jno
adc
mov
ss
pop
sub
cmp
shr
dec
std
scas
sbb
push
idivb
mov
repnz
cmc
cmc
pop
ss
gs
adc
pop
jnp
dec
lret
mov
outsl
xchg
sbb
cmp
lock
and
pusha
ja
fbstp
dec
loop
adc
inc
push
cli
inc
jmp
rcll
and
pop
ret
mov
rcl
cs
mov
js
mov
test
push
cmp
push
dec
inc
lgs
hlt
mov
mov
call
cmp
adc
xchg
addb
mov
pushf
and
stc
push
mov
dec
mov
adc
mov
add
mov
shlb
jne
xchg
mov
loop
pop
push
fstps
pop
in
int3
push
fbstp
call
push
fs
mov
cmp
inc
adc
dec
xchg
or
mov
in
insb
ret
out
xlat
push
xchg
outsl
imulb
mov
jmp
xor
pop
out
xchg
and
mov
ss
mov
mov
insb
jmp
addl
push
sti
push
test
push
and
mov
pushf
mov
cmp
imul
ja
vphaddbw
and
es
cmpsl
cli
in
sbb
sub
push
ret
test
shll
sbb
lods
ljmp
push
xchg
outsl
cmp
cwtl
pop
and
fdivrl
add
mov
push
mov
inc
mov
mov
jne
xchg
rol
add
cmp
and
xor
push
cli
or
dec
cmp
mov
jg
aaa
xchg
mov
sbb
mov
fistps
mov
xchg
xlat
jns
pop
mov
test
js
or
xchg
ret
je
adc
mov
add
out
cmpsb
dec
es
imul
mov
push
push
repz
inc
mov
rcrb
cmovns
in
xor
xor
movsb
fs
jle
inc
iret
das
sub
out
xchg
mov
mov
mov
jl
jbe
xchg
aad
and
imul
stc
popa
dec
aas
hlt
lcall
loop
insl
xlat
ds
sub
push
jns
call
jnp
sbb
xchg
outsb
sub
pop
jb
dec
jnp
les
cmp
iret
cwtl
cmp
cmc
push
hlt
inc
insb
jg
cmp
fistpll
loope
inc
cmpsl
push
mull
insb
cwtl
out
or
xor
jecxz
sub
out
mov
popf
fidivl
cltd
mov
push
lret
sbb
xchg
movsb
sbb
test
test
mov
dec
fwait
xchg
imul
push
sbb
inc
or
lcall
shrl
or
push
mov
mov
sbb
fildll
in
inc
outsb
and
adc
adc
ja
fs
mov
push
cs
xor
xchg
xor
jle
test
xchg
mov
ret
inc
hlt
fstl
cmp
insb
in
mov
jp
clc
sbb
mov
pop
sahf
jae
cmc
movsl
sub
fsts
inc
mov
push
aad
jno
pusha
clc
dec
cmp
jge
jg
push
jl
mov
aad
cmp
jne
dec
xor
out
mov
jecxz
or
jp
mov
outsb
in
loopne
bound
push
adc
adcl
mov
mov
push
int3
or
xchg
fildl
or
shl
and
insl
push
ret
mov
test
dec
out
loope
rorl
add
cmc
lea
pop
les
mov
adc
xlat
scas
pop
push
cmp
jl
xchg
cwtl
pop
mov
maskmovq
js
fidivs
out
mov
shufps
xchg
mov
div
sbb
pushf
ja
push
jnp
push
mov
adcb
stos
xor
add
mov
shlb
mov
in
mov
nop
add
js
fwait
pop
test
sarl
outsb
ficomps
push
test
and
and
in
xchg
stc
jecxz
fistl
sub
or
testl
out
push
cmp
push
sbb
cmc
in
mov
jns
and
mov
sbb
xchg
push
cld
pop
hlt
mov
push
into
fimull
or
push
jo
rclb
leave
sub
das
mov
jp
out
icebp
xor
ss
mov
icebp
cmpsl
je
or
stos
xor
idiv
inc
movsb
dec
adc
jno
ljmp
dec
outsl
jl
test
sbb
repz
add
mov
push
jb
out
jae
pusha
add
jne
cs
inc
inc
in
sub
cld
mov
pop
push
in
mov
mov
cmpsl
jg
fisttpl
sbb
or
adc
rorl
lret
or
scas
mov
fdivl
mulb
movsb
icebp
ja
cmpl
loop
push
mov
cmp
addr16
ds
cmp
mov
cmp
dec
into
out
sbb
daa
fs
scas
jge
and
mov
inc
dec
add
mov
mov
xchg
jb
je
clc
subb
mov
mov
mov
test
fst
arpl
or
xchg
iret
int3
pop
out
arpl
cmpsl
shl
jmp
pop
dec
xchg
xchg
loopne
pop
jb
stos
pushf
sub
nop
cmp
mov
xchg
popf
adc
or
std
repnz
xor
jae
pop
pop
mov
repz
repz
dec
jle
sbb
adc
inc
xchg
jle
data16
test
int
mov
xchg
add
xor
lret
pop
mov
cmp
sbb
notb
xchg
cmc
test
enter
xlat
or
shll
popf
clc
add
cltd
shl
cli
subb
jb
adc
pop
leave
fcomps
sbb
icebp
into
xchg
rcll
lret
idivb
mov
sub
mov
lods
std
xchg
jns
aad
ljmp
mov
aas
and
or
rclb
out
bound
inc
jne
pop
cmp
in
xchg
roll
xchg
outsl
sbb
mov
ficompl
dec
pushf
sbb
adc
leave
dec
sbb
pand
test
stos
cmpsb
loopne
fisttps
xchg
pop
and
xchg
mov
dec
leave
ss
xor
dec
addr16
lods
outsl
xchg
sahf
and
cmp
ljmp
push
xchg
sub
pop
push
add
xchg
repnz
mov
jbe
push
adc
sub
jo
rclb
out
leave
pop
repz
jmp
repnz
jg
mov
xor
sub
and
cld
ds
xlat
push
enter
sbb
jae
mov
ds
jbe
dec
gs
ja
jmp
xchg
ret
adc
mov
pop
aas
or
jecxz
push
add
xor
adc
and
int3
adc
dec
xchg
and
cmp
jb
cli
and
mov
cmp
jle
mov
lret
adc
sbb
push
js
and
jecxz
sub
cli
and
jecxz
andb
push
mov
jnp
outsb
lret
xchg
aas
fbld
cmp
sahf
pavgb
imul
popa
out
scas
jmp
cmp
pushf
mov
psllq
mov
sbb
add
inc
adc
cmp
adc
stos
div
lea
sub
call
mov
gs
in
jb
sub
shufps
and
adc
rcrl
inc
or
insl
das
jb
aad
adc
incb
mov
repnz
mov
lods
adc
mov
pushf
jle
xor
xchg
cmp
int3
enter
je
xchg
sbb
xchg
cld
mov
cmpsb
das
sub
clc
insl
je
idivb
pop
test
jg
mov
mov
lods
mov
mov
insb
into
or
aad
testl
outsb
inc
dec
mov
ficompl
rclb
add
repz
xchg
mov
test
jmp
mov
cmp
gs
stos
push
push
xor
out
movsb
push
icebp
or
jmp
dec
adc
sbb
popf
jg
push
out
lods
imul
mov
repz
jmp
or
pushf
xor
aas
int
nop
inc
dec
dec
out
inc
popa
ja
outsb
jle
ss
ret
mov
xchg
add
mov
sub
fsubl
jmp
inc
or
pop
cmp
mov
pop
ret
std
and
cmc
test
xor
sti
mov
push
rcll
adc
das
mov
sarl
addr16
cmp
cmp
and
rorl
repnz
add
xor
or
fnstsw
xor
test
inc
js
mov
movsb
aaa
out
cmp
pop
int
mov
xchg
shrb
xchg
adc
fstpt
fisubs
sub
out
add
imul
or
adc
popf
dec
cmpsl
add
pop
loop
adcl
lret
cmp
cwtl
sub
inc
xlat
fildll
bts
movsl
fsubr
mov
mov
jmp
xchg
jecxz
xchg
sahf
lods
rclb
sahf
outsb
inc
dec
mov
fcmovnbe
ljmp
das
mov
and
jle,pt
push
and
mov
lret
rcl
test
scas
jno
add
jl
mov
jmp
sbb
pop
pop
mov
cmp
repz
les
mov
fwait
cmpsl
mov
sarl
or
inc
push
out
lahf
adc
jbe
movsb
mov
fcomps
xchg
test
adc
pusha
outsl
and
push
mov
add
pop
add
or
je
cmc
inc
movsl
jo
mov
cmp
ret
dec
test
xchg
pop
mov
adc
stc
and
jge
or
or
mov
add
dec
mov
inc
add
es
ret
adc
call
fimuls
je
or
dec
in
in
out
inc
inc
fldcw
mov
xor
mov
bound
push
imul
sti
es
adc
je
sbb
or
dec
adc
adc
icebp
push
dec
jno
dec
xor
pop
test
xchg
fnsave
addr16
add
bound
mov
pushf
mov
cmpl
mov
scas
je
mov
test
insb
mov
mov
nop
ja
jns
sub
stc
cld
pop
repz
mov
sbb
sub
jp
mov
lock
cld
and
or
xchg
in
adc
fnstenv
or
mov
cs
aas
mov
xchg
arpl
andl
mov
aad
in
mov
fstpl
sarb
and
aad
cld
adc
lods
js,pt
scas
xchg
not
gs
shlb
dec
mov
mov
cmpb
ja
stc
mov
into
test
hlt
mov
and
mov
shrb
ds
dec
cmp
mov
cmp
mov
mov
or
xchg
in
and
push
mov
cmp
mov
sub
or
fdivrl
or
mov
std
mov
push
and
imul
mov
sub
lea
mov
ss
or
mov
test
mov
ljmp
sub
outsl
or
xor
cmpsl
fcoms
push
jne
sbb
add
enter
cmc
int
xor
popa
cmovg
lret
cli
jae
test
insl
mov
shrb
sub
popa
mov
jmp
dec
mov
faddl
or
mov
shrl
jle
and
fiadds
or
cmp
and
lods
or
lock
mov
cmpsb
out
mov
sbb
jmp
mov
jnp
sahf
jnp
out
jge
inc
fisttps
push
fbld
jg
loopne
jnp
test
dec
xchg
jle
repnz
inc
inc
sub
mov
mov
into
movsl
into
loope
pop
jns
cmpsl
repnz
aad
xchg
cmp
dec
aas
cltd
xor
lcall
add
bound
mov
inc
clc
dec
sahf
pop
out
jl
inc
cltd
push
ud2
bound
mov
sub
lret
xchg
pop
and
nop
xchg
xor
stos
pop
ljmp
sub
xchg
in
call
inc
movsl
xor
pop
fs
sbbb
pop
jns
in
call
adc
mov
cmp
add
scas
xlat
inc
stos
or
jecxz
xor
mov
inc
cs
clc
adc
sbb
sarb
out
push
and
add
mov
mov
and
add
sub
mov
ret
lret
notb
sub
shr
call
jecxz
jp
mov
xorl
rep
or
jnp
sub
jmp
aam
push
jl
xchg
or
in
jae
pop
mov
and
adc
xchg
xor
mov
aaa
addr16
mov
fcompp
scas
lret
bndstx
popa
cmp
out
popf
mov
pushf
cwtl
sub
add
inc
jb
out
dec
xlat
push
sub
pop
arpl
repz
mov
scas
rcrb
jle
mov
lods
out
mov
sbb
das
adc
cmc
dec
scas
xor
gs
stos
mov
mov
cmp
add
xor
mov
inc
ljmp
in
mov
xchg
dec
jge
outsl
and
sub
xchg
mov
mov
nop
dec
mov
xchg
insl
pop
xor
jb
or
lock
lods
inc
add
lds
dec
fcmovnu
add
pop
inc
pop
loope
xlat
inc
sub
xchg
or
cld
loop
push
outsl
lret
mov
mov
pop
dec
je
ret
enter
aaa
sub
or
outsl
inc
stos
xchg
fs
pop
dec
inc
pop
fs
decl
mov
dec
ljmp
je
jg
insb
and
and
adc
xchg
ret
imul
or
jg
mov
xlat
jg
push
add
add
cmp
mov
xchg
rol
lods
loope
int3
cmp
movsb
xor
sbbb
repz
mov
mov
push
and
cmpsl
mov
xchg
pop
mov
aam
xchg
xchg
adcb
and
xor
mov
add
and
ret
pop
test
push
sbb
sbb
xchg
xor
loop
popa
lods
cli
sti
cltd
fdivp
jge
fwait
or
push
rolb
adc
hlt
mov
je
pop
mov
sub
sub
push
mov
and
out
repnz
cmp
push
test
out
mov
xor
ljmp
call
outsb
cmpsb
js
subl
subl
xchg
imul
mov
or
jb,pt
sbb
movsb
das
add
xchg
scas
cmp
mov
push
popa
jle
push
lods
shlb
cmc
sbb
push
insl
add
inc
shlb
or
mov
cmp
pop
lods
mov
xor
push
adc
pop
add
stc
addr16
cmp
and
or
mov
in
outsl
movsl
out
je
rcrl
int3
ds
dec
lret
jbe
out
ss
xor
xchg
or
mov
dec
mov
inc
or
cmp
sbb
push
sahf
pop
jle
add
cltd
ja
push
aad
or
fdivl
and
xchg
orl
xchg
data16
pop
movsb
add
arpl
leave
mov
movsl
in
in
icebp
jmp
or
cwtl
mov
divl
mov
les
pop
mul
or
inc
das
and
dec
mov
out
lss
popf
add
add
sub
repz
inc
sti
push
imul
cmp
or
js
mov
arpl
jb
fsubr
mov
pop
xor
push
cs
pop
inc
xchg
pop
sbb
jnp
movsb
mov
add
mov
mov
add
repz
jns
adcl
lcall
out
mov
pop
jnp
roll
fimull
jge
or
out
sbb
fldl
fildll
cmc
or
inc
sbb
dec
dec
add
add
aas
fistps
fwait
out
lds
pushf
popa
xchg
sbb
cmp
jae
mov
sarl
std
push
inc
add
xchg
std
or
add
mov
jb,pt
pop
bound
lods
repnz
inc
mov
cs
comiss
nop
stc
scas
mov
jae
adc
push
jns
push
popa
or
sar
push
lds
jb
mov
sahf
icebp
sub
push
push
rcrl
dec
and
mov
mov
push
xchg
xor
mov
jae
pop
std
jnp
jno
test
xchg
xchg
lret
test
loop
movsb
adc
in
inc
cmpsl
push
fsubrl
add
mov
mov
jmp
call
das
push
push
addr16
call
sub
mov
test
stos
adc
mov
out
mov
lea
nop
int3
inc
cs
adc
fistps
push
adc
push
and
fcoml
and
stos
jle
hlt
inc
or
fistps
inc
or
mov
leave
jmp
adc
outsb
imul
mov
js
movsl
and
repnz
cwtl
jae
pop
xor
mov
js
stc
xor
shl
push
xchg
adcb
mov
mov
xchg
mov
jge
stos
xlat
rolb
cli
push
jmp
dec
xchg
je
cmp
testl
mov
into
loop
xchg
mov
jg
mov
test
mov
or
cs
jecxz
add
es
nop
movsl
loopne
hlt
test
mov
mov
sub
enter
loopne
xchg
xchg
or
popf
mov
jo
or
jecxz
mov
lcall
sbb
mov
xor
inc
js
gs
es
xchg
repnz
les
sahf
xor
add
stc
pop
loopne
pop
push
cmp
ljmp
adcl
pusha
xor
fmuls
movsb
inc
rcrb
decl
in
lods
jp
pop
dec
push
xchg
xor
mov
pusha
mov
adc
sbb
flds
enter
pop
arpl
arpl
mov
mov
sarb
cwtl
cmp
lret
das
cli
cli
jmp
xchg
and
sbbl
mul
xchg
rclb
pop
jnp
xchg
inc
sub
rcrb
xlat
xchg
jbe
int
addl
add
lahf
jno
arpl
add
xor
faddl
call
add
sbb
mov
push
cmp
in
jne
mov
adc
cwtl
mov
mov
loop
lods
lahf
mov
or
shlb
jo
pop
int
fsubrp
add
lret
inc
insb
mov
pop
mov
mov
popf
in
or
fadds
ret
movsb
push
xchg
lock
lock
sub
addb
lods
popf
xchg
add
or
rorb
repnz
stos
pop
ss
sbb
jb
mov
cmpsb
ficoms
add
out
out
loopne
gs
inc
lret
fwait
mov
stc
insb
jge
xchg
ret
arpl
inc
push
cmp
ret
ss
push
jle
loopne
out
push
into
and
nop
daa
lds
cmpsb
mov
xor
sub
shr
int
loopne
xor
mov
cmp
jnp
cwtl
mov
inc
and
xchg
mov
loopne
jne
xor
pop
pop
movb
dec
iret
sub
push
lret
ficoml
mov
inc
je
ret
iret
aaa
push
sub
stc
sbb
jl
imul
pop
out
adc
outsb
je
sub
loop
mov
push
dec
js
mov
pop
and
mov
in
xlat
push
xor
out
adc
data16
shl
dec
sbb
inc
mov
xor
aas
mov
jg
dec
push
addl
sub
test
cmp
enter
movsb
inc
dec
mov
sti
fnsave
sub
xchg
sub
cmp
pop
push
pushf
rcr
addr16
fs
adc
and
andb
lods
add
mov
add
sub
add
jecxz
cmp
jo
fsubp
imul
out
mov
popf
xor
fsubrl
mov
xchg
arpl
in
das
fidivrl
fimull
jns
jb
lahf
daa
add
cmp
add
mov
pop
cli
xor
xchg
imul
jp
enter
les
sahf
inc
addr16
aaa
cld
pop
xor
sbb
cmp
gs
jo
xor
scas
dec
scas
aam
sub
sub
add
or
repnz
loop
inc
mov
jecxz
dec
adc
out
sbb
push
outsb
xchg
xorb
fnsave
aam
imul
pop
and
sub
loop
into
faddl
add
adc
mov
or
inc
push
sub
cmp
mov
jns
lods
xchg
std
fdivrl
jns
rol
mov
repnz
push
test
std
in
movsl
mov
add
push
icebp
cwtl
pop
arpl
lret
call
loopne
cmp
jmp
sub
scas
rcrb
pop
fcoml
subb
mov
push
cld
in
mov
sbb
push
shll
xor
jae
mov
fadds
xor
sahf
idivl
aad
push
add
mov
sbb
shll
push
mov
add
in
loope
push
fsubs
sub
pop
cmp
sti
jle
mov
xchg
sub
mov
scas
loop
jno
sub
popa
ja
fisttpl
ljmp
jmp
sbb
push
in
les
rcr
dec
push
pop
and
cld
push
adc
repz
mov
adc
es
push
fldcw
inc
sub
cltd
outsl
mov
fsub
dec
outsl
mov
adc
pop
xor
pop
cmc
pop
icebp
sbb
push
mov
mov
movsl
pop
or
adc
xor
or
push
push
jae
and
add
sbb
xchg
popa
lock
das
cwtl
cli
lods
shrl
inc
cwtl
rorb
sub
dec
pop
int3
std
sbbb
jbe
jmp
call
push
dec
dec
mov
jae
dec
popf
dec
xlat
sub
fmulp
cmp
or
push
xor
loope
lds
clc
jb
in
add
scas
insb
lock
popf
inc
scas
outsb
xchg
shlb
lahf
and
add
sbb
push
pushl
jns
adc
test
dec
cmp
add
xor
mov
imul
xor
arpl
and
cmp
sarb
xchg
insl
xchg
scas
lret
daa
or
stc
dec
push
and
fldenv
in
repnz
lahf
es
xor
adc
in
xor
cwtl
pop
movb
insl
mov
rcr
inc
sti
inc
sahf
xorl
daa
xchg
insb
jo
clc
lods
add
dec
xchg
in
sbb
outsl
ds
rol
addr16
jecxz
push
or
lds
incl
push
mov
pop
add
pop
pop
popa
cmpb
test
pusha
add
pop
ret
data16
mov
outsb
inc
xlat
ds
inc
add
pop
adc
dec
adc
icebp
clc
jg
sbb
outsl
add
scas
lods
jge
movsb
sar
pop
jae
mov
iret
roll
sub
and
inc
fistl
hlt
mov
jb
cmp
fdivs
in
mov
dec
rcrb
lcall
or
sub
mov
xor
out
leave
add
loopne
testb
add
jecxz
clc
fwait
loop
loope
les
jnp
cmp
dec
inc
mov
stc
out
and
adc
mov
movsb
into
push
jg
sub
add
arpl
fldl
out
imul
push
fldt
cwtl
sbb
loopne
mov
xor
push
test
lahf
aad
pop
movsl
add
loopne
hlt
sahf
pop
rcrb
and
sahf
movsl
imul
inc
daa
and
mov
add
shll
xor
dec
xchg
aas
scas
xlat
pop
push
mov
mov
test
adc
inc
xorl
xor
jbe
cmpsb
ja
dec
clc
fucomi
jb
aas
add
xlat
pusha
mov
adc
push
xor
push
gs
and
imul
jno
xchg
int
mov
cld
loopne
or
enter
add
xchg
pusha
push
xor
jle
hlt
mov
les
aas
shl
push
fadd
lock
add
test
das
pop
fwait
and
xor
ds
clc
adc
mul
mov
jno
fwait
mov
add
or
pop
fstp
push
pop
jb
out
mov
xor
pop
mov
and
daa
xchg
outsb
aad
push
and
add
and
negb
jnp
xchg
fst
sub
xchg
vcvtsd2ss
fdivrl
inc
sbb
lock
outsb
leave
xor
dec
adc
cmp
outsb
pop
inc
out
pop
sub
xor
xor
mov
add
imul
movsl
outsb
add
push
stc
and
in
jnp
fstl
call
pop
cmp
jb
pusha
mov
xchg
cwtl
ret
mov
mov
jb
ret
pop
mov
or
fsubs
or
lret
aaa
pop
and
popa
push
imul
push
iret
and
divl
stc
cmp
push
and
pop
cmpsb
and
push
and
jnp
pop
push
inc
sti
out
stc
cwtl
ret
sub
in
arpl
dec
fs
out
ja
adc
clc
std
sbb
imul
das
push
repnz
jbe
pop
enter
mov
bound
cmp
stc
and
sahf
inc
or
imul
fiaddl
loop
xchg
add
repnz
sbb
pop
das
xchg
xor
push
adc
outsl
aas
insb
mov
mov
stos
xchg
out
add
je
dec
jae
fwait
jg
addr16
aad
mov
jae
mov
pop
rol
push
inc
push
imul
fisubrl
mov
sarb
call
mov
std
sub
leave
sub
aaa
push
sar
inc
and
movb
mov
out
xor
cmp
out
aam
je
call
icebp
out
test
outsl
fidivs
call
sarb
fcmovnu
or
mov
clc
or
out
jecxz
rcrb
adc
push
mov
cmp
jo
adc
cmp
fld
cmpsb
mov
and
lods
sub
in
icebp
push
fmuls
lock
and
push
iret
and
pop
push
jmp
shll
sub
pop
enter
lods
int3
xchg
sahf
mov
js
test
xor
sbb
lods
cmp
mov
adc
es
clc
insb
std
mov
sub
aaa
cmp
mov
mov
adc
in
stc
cmp
jne
inc
and
xor
inc
ret
jmp
jne
test
loopne
push
aad
std
addr16
orb
dec
repz
lret
xor
fldenv
cmpb
lret
xor
inc
jb
iret
push
outsb
outsb
fwait
pushf
sbb
mov
push
jne
inc
loope
movsb
aas
data16
inc
lcall
jno
ds
lods
mov
dec
jae
out
mov
mov
jmp
mov
cmp
mov
out
jg
ret
repz
cli
outsb
inc
mov
popf
dec
cmp
loopne
hlt
cmp
lods
rcrl
pop
mov
mov
popf
xchg
outsb
loop
ljmp
call
ljmp
test
xchg
sub
or
mov
inc
cltd
sbb
movsb
insl
nop
mov
pop
mov
call
push
movsb
loopne
arpl
ljmp
imul
pusha
push
in
sub
and
jmp
pop
movsl
sti
pop
xchg
aas
imul
dec
mov
sub
test
lret
or
jmp
xchg
call
rcrl
into
aam
jge
jae
mov
or
push
mov
insb
ficomps
jge
loopne
xchg
lret
xor
pusha
jl
imul
cs
jg
cmp
in
test
inc
xor
add
or
lahf
dec
jmp
jne
jno
int3
adc
loope
les
dec
rep
lods
std
xchg
lods
insb
ds
movsl
jbe
push
push
cmpsb
push
push
xchg
jae
dec
fs
imull
test
jl
fcom
sbb
dec
cmp
loope
fidivrs
inc
rol
mov
lahf
mov
mov
sub
cmp
lock
fdivrs
pop
das
stc
mov
pop
jno
pop
pop
jg
pop
jecxz
mov
push
cmp
dec
test
in
xchg
lcall
icebp
fcoml
push
and
xor
in
push
sbb
mov
int3
adc
xchg
fiaddl
mov
mov
fdivl
dec
and
mov
nop
dec
mov
cwtl
sahf
popf
cmp
cmp
imul
popf
mov
push
inc
jno
scas
data16
stos
idiv
es
dec
cmpl
hlt
add
dec
mov
popa
sahf
jo
pop
pusha
cmc
repnz
aad
dec
sub
cmp
jae
pop
setl
outsl
mov
and
pop
add
aad
push
lahf
mov
test
rcr
jno
xchg
xor
xor
cmp
lock
push
enter
inc
adc
fsubrl
iret
xchg
xchg
dec
adc
in
movsl
leave
add
push
cmp
jg
xchg
sti
les
cmp
mov
out
pop
es
rol
pop
add
inc
stos
sub
xorl
cmc
stos
jle
rcrb
mov
xchg
dec
iret
lea
mov
call
out
pop
nop
jne
stos
cmp
cmp
push
dec
test
popa
mov
test
lods
inc
or
mov
xchg
sub
std
adc
push
std
adc
cmp
pusha
imul
mov
sbb
pop
xor
gs
adc
sti
or
out
xor
cmp
bound
mov
lcall
jnp
enter
pop
inc
cwtl
mov
mov
mov
jne
cli
out
lock
cltd
add
jns
enter
lods
mov
sbb
sbb
decb
shl
in
xor
mov
enter
das
push
aam
cli
add
adc
mov
jmp
adc
pop
sub
jno
movb
ficoml
or
lock
fisttpl
push
sbb
mov
sbb
jp
pusha
scas
xchg
repnz
test
int3
rcl
ljmp
fsubr
mov
mov
cmp
and
shr
lahf
lahf
fcomps
jae
sub
mov
cwtl
notb
ja
add
cmpsb
outsl
icebp
jno
jmp
mov
in
rcrb
adc
and
sbb
imul
cltd
shlb
or
sbb
adc
inc
dec
dec
adc
xchg
xor
mov
jae
xchg
insl
adc
mov
lea
fnstsw
push
test
sub
dec
int
mov
fstl
hlt
add
pop
cld
sbb
inc
xor
std
pushf
cmp
in
es
sbb
jbe
xor
push
xor
clc
and
cs
xchg
scas
aad
arpl
xchg
mov
orl
mov
xor
movsl
dec
xchg
pushf
sbb
scas
and
mov
loopne
cmp
in
mov
mov
mov
lods
sub
jns
adc
sbb
cmp
cld
fimull
stc
mov
stos
lods
xchg
sub
jge
call
into
inc
mov
iret
adc
fistl
inc
mov
pushf
fildl
dec
in
mov
les
mov
or
test
arpl
adc
adc
ret
mov
add
out
ds
ljmp
adc
jecxz
enter
xor
int
sbb
test
sbb
push
mov
jno
scas
clc
xor
iret
mov
rorb
aaa
popa
adcb
or
cmp
inc
ss
adc
movsl
xchg
adc
adc
push
mov
mov
mov
nop
pop
push
int3
mov
push
dec
shlb
loop
dec
jge
int3
fldcw
stos
push
out
outsl
add
int
cmp
inc
jecxz
into
and
lds
push
pop
mov
in
jmp
stc
mov
xchg
scas
ja
jmp
push
push
sbb
ljmp
das
jp
mov
out
pop
out
into
ljmp
test
ja
xchg
pmaxsw
jl
aad
xchg
sbb
fnstenv
scas
xor
repnz
int
jne
add
lods
mov
out
push
std
pop
mov
popa
mov
sub
adc
adc
or
int
mov
mov
cmp
cwtl
and
pop
into
lcall
mov
popf
xor
int3
pop
lret
mov
dec
lcall
popf
out
jns
test
into
call
mov
lds
cmp
jo
fs
scas
pop
push
jge
jmp
jg
pop
mov
mov
cmp
test
pop
ficoml
es
jno
cwtl
xchg
icebp
dec
cld
mov
lcall
mov
adc
pop
inc
dec
jbe
pop
test
adc
sbb
dec
or
roll
daa
inc
ljmp
sub
pop
xor
cmc
les
aas
decb
addr16
push
inc
inc
icebp
insl
or
lds
mov
testl
cmp
xor
insb
scas
inc
fwait
xchg
in
add
aad
and
xchg
and
ret
xchg
fwait
out
push
loopne
mov
xor
jb
xchg
scas
xchg
sbb
or
addb
out
sub
cmp
inc
mov
cwtl
cld
sbb
push
pop
add
test
xor
arpl
icebp
and
hlt
mov
sub
mov
out
cmp
cmp
out
jns
push
cmp
adc
pop
pop
out
jns
repz
mov
leave
cmp
mov
movsl
inc
mov
push
push
or
add
mov
adc
cmp
cmp
mov
sahf
jmp
int3
adc
loope
frstor
aaa
mov
addr16
jne
ret
dec
mov
push
mov
mov
nop
jns
cmp
test
mov
inc
das
inc
jbe
lock
inc
loope
push
jecxz
mov
and
jne
xor
hlt
lock
dec
out
ljmp
sub
std
ja
pop
pop
or
pop
sbb
stc
test
popa
push
test
dec
int
loopne
cmovae
mov
loopne
aas
cwtl
sub
xchg
sbbb
xchg
jae
pop
push
push
mov
leave
scas
lods
cli
out
mov
mov
in
xor
mov
jg
inc
pop
movsl
in
jno
sub
xor
pop
xchg
mov
push
inc
lahf
sarb
mov
das
enter
sbb
cmpb
sbb
xor
les
add
in
push
lret
sub
xchg
cltd
cmpsb
jb
jecxz
aaa
divl
iret
push
test
std
add
mov
outsb
sbb
xchg
sti
or
out
jne
mov
popf
add
inc
cmpsb
pop
ds
fsubs
pop
cmp
scas
pop
jnp
mov
mov
adc
stc
test
pop
cmc
jecxz
imull
ret
fldenv
fsubs
jb
cmp
mov
add
lods
mov
cmpsl
sub
int
sahf
adc
je
into
mov
in
lahf
hlt
cmp
sbb
int
cld
xor
cmp
add
iret
mov
out
clc
sbbl
jae
clc
test
shrb
insb
lret
dec
push
test
ret
imul
fildll
inc
adc
daa
lahf
lea
pop
xchg
fsubr
adc
fmuls
addl
dec
jge
mov
int3
sub
jmp
adc
into
pop
add
xor
jne
pop
out
mov
arpl
add
inc
cmp
jp
push
arpl
loop
pop
adc
out
fwait
inc
push
cmp
xchg
aas
pop
xor
in
out
stos
stos
mov
add
mov
inc
mov
in
push
inc
inc
sbb
pop
dec
stos
push
and
push
and
push
mov
mov
fwait
in
xor
mov
xchg
cld
jne
pop
loope
loope
mov
divl
or
push
jg
out
lock
push
out
or
gs
push
arpl
mov
jae
or
adc
pop
push
int
push
cwtl
adc
mov
mov
mov
jnp
pop
push
inc
xchg
mov
imul
xor
pop
sahf
mov
iret
roll
sbb
jno
xchg
daa
idivb
sbb
jb
mov
mov
sbb
jg
rolb
out
jae
and
movsl
inc
insl
outsl
rcl
cltd
sbb
negl
cli
push
mov
in
sub
popa
sbb
sbb
cmpsb
cmpsb
jb
xor
inc
scas
cld
mov
mov
pop
xor
ds
cltd
js
stos
xor
mov
sbb
cmp
movsl
mov
divb
lock
or
push
stc
push
popa
push
lret
dec
dec
push
aam
out
pop
jmp
xor
into
cmp
fwait
clc
pop
lcall
ljmp
pusha
mov
mov
imul
pusha
or
push
xchg
ja
cmp
xlat
xchg
das
lcall
fcomps
fucomi
jno
gs
mov
sar
scas
out
aaa
jnp
fmulp
aas
sbbb
rorb
or
jo
bound
sbb
sbb
jno
scas
xor
scas
mov
xor
mov
inc
fists
aad
popf
push
mov
sti
xacquire
cmp
jmp
sbb
sbb
pop
popa
and
sbb
pop
sbb
and
int3
push
push
pop
les
shl
mov
sub
test
pop
mov
lahf
movsl
push
adc
cs
push
outsl
rcrl
xor
ror
inc
and
test
dec
inc
sbb
cld
mov
data16
xor
jnp
fdivrs
stos
or
clc
aas
xchg
adc
orb
dec
insb
std
das
out
and
or
inc
and
outsl
nop
push
test
popa
rolb
insb
xchg
imul
and
andb
cltd
jecxz
mov
mov
ret
mov
popa
insl
cmpsb
and
in
mov
mov
fiaddl
jns
pop
and
nop
sub
mov
aam
lds
adc
adc
inc
add
push
popa
push
out
add
sub
in
fwait
bound
or
adc
and
push
push
xchg
mov
mov
mov
fwait
stos
adc
dec
adc
scas
scas
adc
stos
aaa
arpl
iret
sbbl
or
jg
fdivr
jne
sub
shrl
cmpsl
fs
jecxz
sti
sti
jb
into
les
sti
bound
cmpsb
sahf
mov
adc
lahf
xor
out
insl
xlat
sahf
adc
fldt
rclb
test
mov
bound
fwait
outsl
xor
in
sbb
hlt
mov
sbb
adc
lret
push
or
xor
repz
or
push
jns
cltd
cmp
ja
xchg
daa
sbb
xchg
cmp
addb
jecxz
mov
faddp
jmp
mov
inc
int3
and
mov
cli
pop
xor
mov
les
and
shll
sahf
inc
lcall
test
in
int
xchg
into
lods
in
add
add
inc
fisubs
mov
bound
sbb
fiadds
movb
and
movsl
and
inc
loop
xchg
js
cmp
adc
dec
adc
or
mov
sahf
pop
mov
pop
fwait
xchg
stos
addb
sbb
mov
xor
push
movsl
mov
pushf
and
aas
mov
push
xor
test
sbb
fidivrs
push
loop
in
mov
inc
mov
clc
inc
call
movsb
loope
or
mov
in
inc
sub
mov
in
sti
xor
inc
test
add
mov
loope
rol
push
and
mov
pop
lret
xchg
jnp
or
repz
movsb
stc
push
in
mov
jmp
xchg
sub
mov
shrb
movsl
cmp
bound
je
stos
mov
add
fwait
cmpsl
jmp
ret
jmp
aam
jae
xor
outsb
mov
pop
jno
mov
bound
mov
add
push
lods
cmpsb
ljmp
imul
sub
push
aaa
je
mov
je
cmpsb
cmp
xor
or
add
cmp
jmp
shl
bound
lcall
fdivr
mov
lock
lds
lods
add
lahf
jp
cli
stc
add
int
dec
xchg
mov
dec
mov
ljmp
mov
and
push
add
js
push
mov
stos
inc
rclb
fisttpl
sahf
je
dec
gs
fs
jmp
sub
hlt
sbb
mov
inc
dec
rol
inc
sbb
xor
mov
adc
das
mov
and
push
inc
cmp
inc
xchg
mov
popf
and
mov
xor
push
iret
repnz
pusha
ja
adc
stos
enter
sbb
jbe
jbe
push
jp
xorl
icebp
adc
mov
xchg
xchg
pop
push
add
inc
cwtl
popf
es
js
xor
jmp
xchg
or
faddl
cmp
or
lret
jl
sbb
mov
arpl
cmc
pop
mov
jne
test
bound
cmp
mov
popfw
adc
les
push
int
jne
cmpsb
xor
jge
sbb
and
out
scas
pop
arpl
pop
mov
jb
xor
test
decb
into
mov
sub
xchg
cwtl
push
xchg
pop
cmp
mov
stos
jae
adc
cmp
fdivrl
and
mov
sbb
push
sub
mov
sbb
jb
ret
popf
inc
jp
or
push
jbe
pusha
or
push
sub
and
jecxz
dec
inc
jl
outsl
adcb
jo
cmp
dec
pop
fdivs
pop
push
scas
dec
pop
mov
sbb
mov
xchg
pop
sub
pop
mov
pop
aas
xchg
hlt
shr
dec
rcl
push
pop
ljmp
stos
pop
test
movsb
jge
shrb
pop
cld
int3
das
xor
pop
fisttps
call
adc
mov
loope
sub
cld
stc
xor
jecxz
or
ret
iret
imul
pusha
lea
inc
and
cmp
jg
std
mov
xchg
ljmp
divb
pop
sub
pushf
push
add
aaa
fnstsw
sar
stos
push
sbb
addl
pop
push
and
negb
test
test
push
mov
out
fisubrl
adc
int
lahf
dec
adc
nop
out
int3
cmpsb
rolb
inc
jne
aas
inc
data16
dec
mov
and
mov
jb
cmp
jl
cmp
pop
les
mov
rolb
mov
sbb
outsl
aas
adc
jge
push
clc
sbb
fsubs
and
ret
pop
xchg
sub
test
or
mov
push
pop
cld
pop
mov
out
ds
jo
cmp
adc
dec
add
fisubrl
cld
arpl
lret
in
movsb
pop
mov
fistl
cmpsl
adc
stc
or
clc
mov
out
dec
leave
mov
sti
mov
mov
sub
js
xchg
test
scas
xor
xor
cmp
adc
addl
add
jmp
call
dec
mov
xor
pop
scas
mov
popf
lods
std
rorl
mov
dec
sub
mov
mov
lea
nop
xor
lds
push
int
iret
sub
fcoml
or
cmp
fsubrs
sub
fsubrs
imul
js
std
gs
ss
and
or
insl
sbb
mov
out
sbb
hlt
insb
dec
cld
mov
mov
adc
jnp
sub
test
fnstsw
xor
cmp
fsubrs
jg
jmp
mov
dec
pushf
imul
mov
popf
mov
fistpll
inc
xlat
test
sbb
adc
pusha
push
pushf
xchg
dec
push
inc
fimull
lahf
add
jnp
push
inc
dec
les
loope
push
aam
and
sarl
leave
sbb
xor
inc
or
fbstp
jle
test
or
push
dec
xchg
das
fcom
mov
stos
pop
adcb
lods
loopne
loop
jno
xchg
pop
addb
jne
jb
pop
push
inc
out
mov
mov
popa
mov
aad
repnz
dec
aas
std
xchg
jae
mov
arpl
push
sbb
cmp
dec
xor
mov
sub
addr16
sbb
call
xlat
inc
inc
test
testb
shlb
mov
fdivl
movsl
std
pushf
dec
mov
xor
inc
jmp
pop
es
sbb
outsb
aas
or
or
outsb
push
cs
adc
xchg
xor
aam
repz
outsl
in
inc
cli
dec
mull
and
sub
fcomps
or
mov
push
loopne
pop
push
mov
ljmp
imul
mov
cli
lea
push
addb
out
decl
cmp
addr16
scas
cltd
aam
ret
pop
int
pop
ljmp
lock
sbb
orl
dec
sub
jae
push
sub
fucomip
mov
pushf
popf
add
push
aas
sbb
add
in
xchg
popf
mov
or
aas
insb
sbb
hlt
aaa
xor
outsb
mov
jns
mov
stos
adc
jo
js
add
int
lcall
push
mov
xor
aas
mov
mov
sbb
inc
and
into
sub
les
mov
out
dec
adc
movsb
cmc
lret
int
inc
and
mov
outsl
arpl
lahf
addr16
xor
inc
fsubrl
aad
jbe
int
mov
lds
dec
mov
mulb
inc
int
jb
dec
push
pop
mov
jnp
insb
shlb
pop
add
inc
push
frstor
movsb
fdivl
and
cs
fcmovbe
sbb
and
dec
notb
xor
rcl
loop
xchg
or
enter
into
add
lahf
jnp
mov
je
repz
sub
ljmp
cmp
xlat
add
je
adc
inc
hlt
dec
xor
test
enter
es
sub
push
imul
sti
mov
cmp
mov
mov
test
cmp
mov
fidivl
arpl
fld
int3
add
adc
sub
cmp
in
pusha
faddl
mov
mov
lock
insb
arpl
lret
pop
push
mov
test
daa
dec
mov
mov
or
lods
ljmp
pop
and
fildl
push
repnz
movsl
mov
fisttps
mov
cmp
in
jg
mov
arpl
movsb
ja
jle
mov
jnp
ja
jge
pusha
xchg
sbbl
ds
test
daa
push
mov
or
jg
hlt
jnp
fcoms
mov
pop
add
imul
push
dec
rcrb
add
and
mov
mov
xchg
pop
inc
mov
xor
sub
xchg
out
stos
pop
mov
jecxz
jo
mov
jno
cld
xlat
push
fadds
imul
lods
mov
adc
sub
and
adc
add
rol
mov
adc
out
push
addr16
lods
mov
iret
sub
mov
repnz
test
fistpll
std
fidivrs
fs
into
dec
and
or
push
inc
sar
or
rcrb
push
mov
fsubr
loope
cs
push
cmpsb
arpl
pop
adcb
mov
mov
inc
mov
jbe
dec
xor
cld
stc
in
out
out
mov
testb
sub
hlt
mov
inc
jecxz
ret
lahf
xchg
xchg
incl
rorl
mov
popa
and
adc
adc
stc
xor
jecxz
mov
ficompl
inc
pop
movsl
mov
cmp
inc
jb
xchg
ja
add
cmpsb
cwtl
in
cwtl
push
je
jae
push
xor
jl
test
pop
div
in
enter
inc
in
mov
xchg
sub
fwait
movsl
aad
adc
adc
jne
andb
ss
jae,pt
popa
cld
out
sbb
daa
testl
pop
lock
sub
and
push
mov
arpl
shl
enter
fidivs
jns
add
mov
cmpsb
add
ret
icebp
mov
fcmovnbe
repz
sub
and
cltd
int
out
movsl
push
sub
cmpsb
add
mov
push
cmc
fmull
ljmp
clc
add
clc
sub
loopne
iret
das
jnp
xor
inc
lods
xchg
mov
or
cs
lret
push
cltd
aaa
cmp
xchg
mov
add
test
aas
or
push
fisttpll
enter
mov
test
mov
leave
mov
jne
cli
add
cli
bswap
in
mov
pop
inc
imul
int3
popf
pushf
outsl
test
or
xor
scas
int
or
movsl
and
mov
rclb
and
adc
pop
test
lret
mov
inc
or
std
out
out
jge
cld
mov
mov
dec
push
filds
cmp
inc
jp
enter
and
mov
dec
xchg
imul
or
pop
cmp
xchg
inc
mov
out
or
cwtl
mov
pusha
mov
mov
iret
xchg
dec
insl
jg
jbe
mov
push
mov
fsubrl
jmp
add
ret
mov
mov
adc
sti
ret
push
sub
fidivrs
cmp
aaa
movsl
lea
sub
jl
ja
adc
add
les
insb
sub
test
cs
adc
pop
mov
scas
iret
or
jmp
stos
cli
aas
xchg
pop
or
push
adc
js
daa
inc
cmp
test
inc
aam
push
jp
dec
push
mov
pop
ljmp
mov
and
xor
nop
adc
pop
add
push
and
cmp
cli
jp
test
pop
clc
lahf
loope
or
mov
and
sete
insb
lret
xchg
pop
inc
push
mov
xor
stos
dec
sub
add
sbb
xlat
in
mov
rcll
cmp
mov
sbb
hlt
sub
inc
iret
fadds
cmp
xchg
arpl
add
pop
adc
cli
aaa
cld
orl
ja
dec
sbb
repnz
xchg
stos
out
jae
je
mov
cmpsl
mov
stos
in
out
scas
xlat
dec
insb
subb
fwait
cmp
jge
push
adc
push
or
push
adc
cmp
mov
sub
idivl
dec
mov
gs
cltd
psubq
rcr
loope
sbb
ficompl
lds
xor
adc
pop
clc
xchg
and
pop
lds
lods
test
lock
ret
rep
push
sub
push
mov
movsl
in
pop
std
jmp
cs
aaa
sub
push
add
pop
sarl
jp
or
and
lret
fisttpll
adc
out
push
and
xchg
test
jno
xchg
mov
int
rorl
jnp
cli
pusha
ja
nop
jae
sti
jg
inc
and
addr16
data16
rcrl
inc
push
loop
cmc
cmp
mov
dec
aaa
push
xchg
daa
jnp
xor
push
xchg
in
push
jl
pop
in
ret
or
adc
fimuls
pop
rdpmc
mov
jecxz
push
lea
aaa
in
xor
jae
bnd
je
hlt
lods
add
lea
jg
jmp
incb
cmp
jns
gs
filds
cmp
stos
cmpsl
jne
inc
xchg
mov
xchg
dec
xchg
lcall
adc
sbb
popl
in
sub
repz
sbb
mov
loopne,pn
das
push
rolb
xor
cmp
fidivl
mov
loop
lcall
adc
xchg
mov
stos
sub
push
dec
loope
adc
jne
inc
mov
jae
mov
add
pop
in
adc
xchg
sahf
ljmp
or
iret
ja
cmp
insb
dec
stc
scas
in
int
mov
inc
aas
sbb
sbb
lds
dec
jecxz
clc
test
add
push
lods
pop
inc
sbb
gs
push
fisttps
bound
xchg
adc
cld
or
imul
incl
xor
lods
and
test
xchg
pop
outsl
out
xchg
sub
mov
popf
imul
xchg
insb
jae
xchg
jecxz
ljmp
add
out
out
rcrb
lea
test
or
cmp
xor
and
xor
adc
sbb
mov
repz
mov
inc
daa
roll
jl
xchg
or
xchg
ret
add
push
js
decb
loope
nop
xchg
aad
sub
inc
xlat
dec
loope
mov
shrl
xor
bound
loop
add
mov
and
mov
sarl
flds
scas
xor
mov
movsb
push
sub
inc
vmovupd
icebp
ss
pop
xor
add
sbb
pause
and
idivb
dec
jno
pop
dec
mov
scas
enter
and
aad
xchg
lret
push
add
imul
inc
cmpl
sbb
mov
xor
imull
adc
lds
sbb
fsubrl
ret
jae
das
cltd
incl
jbe
add
pop
xchg
add
pop
sub
push
jo
lea
mov
clc
cmp
js
mov
cld
inc
daa
or
mov
inc
cmpsl
clc
ds
fnstcw
xor
mov
rcrb
dec
movsl
mov
lods
xchg
mov
jecxz
adc
mov
mov
xor
xchg
xlat
inc
aas
xor
xor
enter
dec
dec
sbb
push
and
int
fs
pop
mov
out
xor
xchg
dec
xor
and
insl
or
xchg
imul
inc
out
in
mov
pop
mov
ja
pop
sbb
int3
out
add
inc
inc
les
pop
jae
in
mov
jno
jle
mov
shrb
sub
int
jno
cs
mov
inc
out
mov
mov
jecxz
js
xchg
mov
shrl
inc
sahf
cmc
cmpl
psrld
dec
lock
cmpsb
adcb
mov
jmp
cmp
sub
mov
cmc
mov
cwtl
or
adc
fbstp
mov
stos
xor
ret
add
cmpsb
inc
or
push
jle
jo
jae
jns
pop
mov
add
out
pop
pop
and
mov
pop
jo
pop
lods
testl
mov
rorl
mov
inc
jae
jns
or
sbb
in
add
std
fwait
mov
ret
addb
inc
das
inc
mov
rolb
cmp
mov
adc
dec
push
or
test
inc
xorb
and
ljmp
frstor
incl
js
leave
push
inc
movsb
lock
add
ret
mov
and
repnz
je
add
pop
cmp
das
sbb
insl
and
inc
mov
je
ds
mov
xor
add
and
mov
adc
into
data16
cmp
lcall
gs
sahf
mov
insb
mov
movsl
xchg
fists
test
repnz
and
dec
mov
fsubl
xor
adc
repz
push
sbb
sti
adc
imulb
pop
fsubs
sub
inc
and
mov
jle
jno
mov
mov
ja
xchg
inc
jmp
pop
leave
xchg
in
dec
cltd
jp
xlat
insl
jae
dec
je
cltd
lret
shll
repz
outsl
mov
out
xchg
add
mov
cmc
enter
lds
push
outsb
mov
sub
cmpsl
in
pop
adc
sarb
mov
repz
jge
sub
lcall
int
jmp
sbb
shll
mov
add
in
pop
aam
add
cld
lods
mov
sbb
sbb
das
popf
loopne
add
pop
nop
xor
mov
inc
shl
scas
sub
loopne
pop
pop
add
and
dec
outsl
icebp
mov
or
jns
rolb
xor
ljmp
pop
jns
out
lock
and
ret
mov
xchg
xchg
cmp
pop
or
and
aaa
ja
addr16
adc
xor
test
dec
in
adc
cs
out
inc
pop
out
sahf
into
jge
inc
adc
adc
les
fidivrl
jbe
insb
pushf
xlat
lds
les
in
add
in
cs
mov
outsl
scas
test
popa
iret
ret
jg
test
mov
in
mov
fnsave
stc
into
inc
jae
dec
jns
idivb
test
scas
xchg
jae
xor
or
push
aad
mov
test
adcb
mov
movb
daa
push
pop
fstl
loopne
aaa
lods
sbb
loope
adc
mov
xor
sbb
mov
lods
mov
mov
cmp
push
mov
mov
hlt
ret
sti
popf
mov
xor
lahf
and
inc
mov
in
mov
popf
das
mov
popa
test
cmp
sti
aas
fstps
inc
and
mov
mov
mov
out
adc
lods
cmp
fists
mov
out
jmp
stc
sbb
inc
mov
xor
dec
shll
xchg
sti
add
and
nop
imul
xor
clc
dec
and
lret
jo
int
and
inc
out
fisubrl
cmp
add
xor
jp
sbb
adc
test
cs
test
inc
inc
leave
adc
mov
outsl
out
xchg
mov
ficoml
jns
out
cmp
cmc
popa
sahf
pusha
cmp
orb
inc
xchg
es
stos
push
xchg
push
pop
bound
push
leave
fidivs
outsl
shl
pop
xchg
fucomp
int3
cmp
adc
imul
test
inc
test
in
stos
pop
lods
inc
and
jmp
into
fucomip
mov
lret
jle
push
cld
lret
and
push
inc
into
lods
ja
sub
jmp
stos
test
adc
loope
sbb
bound
aad
aad
popa
and
sbb
cmp
fwait
jp
xchg
neg
mov
fs
push
cmp
mov
call
addr16
fldenv
xchg
int
xor
imul
pushf
lock
add
and
xchg
aad
cmpsl
push
push
icebp
sbb
fucom
cmc
mov
push
imul
mov
mov
pop
sub
mov
and
clc
in
add
lds
cmpsb
cmp
jnp
rorb
mov
hlt
xor
inc
mov
lcall
mov
add
sub
sbb
push
pop
loope
mov
loopne
fsubs
dec
adc
xor
fdivr
mov
imul
jecxz
mov
arpl
testl
xor
arpl
or
das
cmp
or
loopne
sub
push
and
and
sbb
jge
inc
jo
adc
les
pop
fisubrl
outsb
push
add
movntq
jbe
inc
push
or
pop
cs
push
into
or
inc
push
dec
ret
mov
ljmp
adc
sub
mov
test
leave
setge
cmp
cmc
xlat
pop
cmp
jp
clc
push
jp
or
rorb
mov
pop
add
inc
sbb
stos
das
hlt
xor
lods
loope
out
push
fstpl
push
mov
sbb
or
in
loope
decl
aas
inc
orl
xchg
insb
mov
push
jecxz
dec
sbb
xor
adc
aad
or
mov
int
dec
pop
bound
dec
repz
sub
aas
and
fidivs
test
pop
cmp
pop
nop
sbb
js
lcall
cwtl
mov
scas
cli
mov
jne
and
lea
inc
ret
lret
leave
mov
cmpl
sahf
cli
in
pop
lods
jae
outsl
inc
fstl
jp
imul
movsl
sbb
mov
ljmp
out
mov
mov
xchg
push
xchg
arpl
push
pop
out
in
mov
add
int3
cmpsl
stc
mov
xor
ret
mov
aad
lock
outsl
popa
outsl
dec
out
or
mov
sbb
in
ja
xchg
push
daa
mov
pop
mov
sbb
mov
shll
lods
xchg
call
in
mov
in
jecxz
mov
mov
sub
and
imul
pop
xchg
lods
xchg
inc
jge
and
stc
icebp
sbbl
add
ss
add
or
cmp
das
lods
dec
loopne
mov
movsb
notb
cmpsb
jle
push
mov
inc
jb
fiadds
stos
mov
stos
mov
jp
stos
cmp
and
stc
outsb
int3
int
inc
pop
jne
adc
jnp
lret
and
mov
and
mov
push
jl
int3
fwait
andb
add
mov
ret
in
mov
pushf
adc
pop
push
into
sbb
push
stc
stc
decl
test
std
jbe
mov
int
es
jbe
jbe
ss
popf
addb
adc
rorb
jno
sbb
mov
add
cmp
adc
pushf
cli
icebp
clc
dec
insb
pop
xlat
mov
mov
popa
add
das
push
cltd
xor
inc
loopne
dec
sbb
and
mov
das
sbb
gs
lock
sahf
adc
in
add
dec
test
aad
mov
inc
adc
cmpsl
add
mov
mov
test
dec
fcomps
jae
inc
mov
scas
fnstsw
inc
jl
jb
xchg
xor
push
fcmovnbe
inc
arpl
jns
icebp
test
jae
adc
popf
adc
call
sub
pop
inc
out
fsts
aaa
jmp
push
or
cwtl
push
sub
cmp
cmp
sub
push
jo
insl
lock
outsb
mov
push
mov
js
rcrb
subb
in
fidivrs
jo
outsl
xchg
mov
aam
mov
or
mov
clc
subl
mov
add
mov
jmp
daa
add
sar
cli
aas
andb
xchg
add
loopne
pop
pushf
enter
mov
hlt
loopne
aaa
jne
loopne
lret
dec
push
loopne
mov
mov
into
aad
scas
repnz
jge
dec
pop
bound
gs
xchg
bound
and
jbe
add
add
psrlw
jle
nop
test
mov
pusha
arpl
mov
ret
sahf
ja
add
inc
test
outsb
xor
mov
imul
fcomps
mov
insl
insl
jle
out
clc
dec
push
int3
outsb
cmpsl
adc
adc
iret
cli
xor
movsb
sbbb
sub
xchg
clc
inc
out
fimull
xchg
and
out
movsl
push
jmp
rorl
stc
testl
lcall
mov
les
dec
lea
xchg
mov
jbe
push
mov
es
xchg
mov
aas
iret
pop
mov
mov
fnstenv
into
pop
loope
cmc
repz
cmp
xor
repz
push
and
out
mov
shlb
aad
inc
mov
xor
mov
inc
and
inc
movsb
push
nop
mov
jne
hlt
push
xchg
scas
sub
jl
xor
dec
aas
xchg
mov
cmp
mov
and
cli
outsb
jmp
jmp
push
fstpl
push
in
pop
add
or
popa
mov
sbb
and
stos
dec
leave
or
and
pop
xchg
mov
xchg
push
xor
sbb
inc
sahf
cli
aad
dec
pop
pop
xchg
xchg
pop
movsb
push
aad
mov
push
sti
pop
cmp
out
jecxz
cmpsb
movsl
push
cld
xor
xchg
pop
jecxz
out
imul
mov
mov
out
xchg
cli
mov
pop
insl
or
shrl
fimull
imull
dec
fwait
in
movsl
push
mov
push
push
fsubrs
xor
add
mov
sarl
xor
mov
rcrb
xchg
movsb
mov
fbstp
sbb
mov
sbb
mov
stos
cltd
xor
xchg
sub
loopne
jp
popf
xor
dec
inc
loopne
jne
iret
pop
ds
btr
sub
into
sbb
dec
sbb
hlt
push
test
push
push
inc
repnz
jb
mov
adc
or
test
lret
mov
xlat
mov
ret
loope
test
loope
pushf
mov
and
dec
dec
pusha
xlat
stos
push
inc
call
jmp
push
imul
jno
int
xchg
add
aad
out
jb
pop
dec
imul
pop
fisubrl
mov
fists
add
xchg
arpl
mov
xchg
ficoms
and
pop
jg
in
repnz
popa
and
negb
push
daa
inc
aam
push
sub
andb
outsb
xchg
cltd
jbe
inc
je
movsl
aam
jo
ljmp
inc
add
mov
xlat
mov
push
adc
pop
in
xchg
lret
and
dec
aaa
movsl
or
sbb
dec
pop
sub
insl
mov
add
and
cli
inc
ret
jo
maskmovq
testl
sbb
push
pop
xor
lcall
and
and
xor
pushf
lock
dec
pop
fsubrs
aaa
and
push
push
inc
or
test
cs
movsl
or
addr16
mov
fsubp
pop
cmp
out
cmpsb
sub
in
sahf
stc
fs
mov
cmp
xlat
loopne
mov
in
orl
cmp
add
leave
push
pusha
into
daa
lods
mov
ja
stc
movsl
call
push
mov
sbb
mov
mov
sbb
xchg
lret
insb
out
hlt
fadd
imulb
testb
dec
xchg
sub
out
rcrl
cmpsl
push
mov
xor
mov
dec
aaa
xor
push
mov
or
xchg
and
adc
and
inc
push
jecxz
and
sbb
psubusb
or
inc
mov
lcall
dec
xchg
sub
mov
cmpsb
xor
jnp
fucomp
pop
stos
cmc
mov
xchg
jg
add
orl
mov
mov
xlat
fnstcw
shlb
mov
test
idiv
and
mov
adc
pop
jmp
pop
aad
cmc
add
mov
in
mov
and
fiadds
inc
insb
mov
ret
mov
xlat
or
fcomp
and
lock
mov
sbb
ja
jns
ljmp
mov
test
or
add
jnp
cmp
mov
imul
mov
ret
hlt
add
outsb
sub
aas
inc
jb
inc
inc
mov
andl
xchg
inc
xor
cmp
inc
jns
mov
and
mov
inc
lahf
pop
push
add
cmp
loop
jno
push
sub
or
mov
orl
cwtl
inc
xchg
xor
xor
jge
imul
gs
cltd
ja
outsb
jae
in
dec
jb
mov
mov
shll
rorb
push
loopne
xchg
dec
in
add
dec
dec
inc
jnp
and
xor
out
out
jno
hlt
xor
pop
add
aad
mov
gs
xor
lret
mov
mov
xchg
sub
iret
std
and
dec
imul
addr16
fcmovbe
mov
int3
pop
xchg
pushf
push
aad
xchg
jb
test
sub
sbb
jae
mov
filds
mov
lret
mov
repz
pushf
jg
rorl
xor
sbb
xor
les
pop
inc
out
imul
jno
push
inc
xchg
cmp
jo
cmp
xchg
adc
popf
sarl
lret
push
mov
cmp
scas
adc
mov
mov
int3
xchg
mov
ffreep
in
bound
jnp
aaa
adc
in
sbb
in
push
xor
fisttpl
out
inc
shlb
sub
jnp
xchg
jne
xor
pop
bound
subl
mov
mov
loop
jbe
mov
pop
popa
add
cmp
push
cwtl
cmc
xor
les
push
lret
sbb
in
xchg
sbb
mov
or
pop
add
imul
cmp
xor
mov
lcall
sub
shlb
rcll
xchg
int3
shll
clc
xor
dec
jmp
mov
inc
ret
jbe
pushf
push
jno
aam
shll
cmp
dec
int
cmpsb
outsb
pop
sbb
cmp
dec
or
mov
icebp
dec
mov
scas
pusha
test
test
pop
push
jb
pop
pop
mov
imul
test
sub
lock
into
in
movsl
dec
pop
loopne
comiss
iret
cmc
aas
in
cmpsb
and
sub
xor
jno
xor
jg
xlat
jne
ja
sahf
push
add
adc
aaa
enter
stos
cltd
ljmp
or
dec
push
jmp
jns
jge
inc
notl
ret
in
jo
movsl
pop
inc
call
lea
jle
in
push
int3
dec
xorb
ljmp
push
cmp
dec
fidivs
or
adc
push
sub
xor
pop
negb
mov
fadds
pop
xchg
cmp
push
cld
scas
lret
outsb
push
into
jbe
loope
pusha
xchg
fsub
sbb
loopne
mov
enter
roll
stc
dec
pushf
mov
lock
lret
daa
sahf
jmp
aam
adc
or
mov
xor
je
sahf
iret
enter
loope
mov
cmp
js
jmp
dec
fsubr
js
sbb
add
and
pop
fsubr
nop
pop
sbbl
pop
sub
xor
inc
mov
hlt
add
lcall
test
mov
daa
ror
nop
sbb
dec
test
jno
pop
gs
cs
arpl
pop
sbb
daa
popf
cld
cmp
data16
push
dec
dec
fisttpl
stos
sub
cltd
gs
pop
fsts
adc
lds
int3
xchg
mov
fdivs
mov
or
cmp
jmp
insl
loope
aad
add
cmpsb
in
pushf
test
jbe
add
fwait
inc
mov
repz
jg
enter
sahf
rorb
lea
mov
add
rorl
hlt
add
mov
fbstp
xor
rcl
xchg
push
mov
pop
and
mov
repnz
lret
jle
sub
popa
out
xchg
sub
lea
into
rcr
cmp
and
adc
dec
ss
push
sub
mov
clc
data16
dec
cmp
std
xchg
push
fldl
xchg
xor
stos
mov
xlat
pusha
into
jno
rorl
cltd
andb
ret
loopne
pop
std
mov
pop
out
pop
loopne
jno
movsl
mov
insl
jb
addb
mulb
jmp
stos
shlb
popa
test
ds
gs
add
adc
lret
cmpl
jns
js
jmp
add
adc
lea
dec
xlat
sarb
pop
cmp
fcmovnbe
sub
pop
jne
inc
sbb
stos
push
adc
push
mov
add
push
mov
gs
and
shrb
int
or
sub
ret
pop
lds
mov
push
mov
mov
scas
mov
pop
adc
cli
inc
leave
lea
push
and
jmp
insb
inc
cwtl
inc
ja
scas
lods
loopne
push
dec
jge
enter
or
xor
cltd
ds
xchg
mov
sub
sub
and
enter
repnz
or
mov
mov
stc
imul
imul
bound
loop
cmpsl
pushf
push
mov
fdivrs
cmp
imul
xchg
std
imul
ljmp
rcrl
idivb
pop
add
cmc
cs
orl
arpl
jnp
mov
repnz
lcall
pop
mov
aaa
sub
add
loop
add
or
nop
or
inc
lea
out
stos
out
pushf
repnz
mov
js
xlat
repz
pop
adc
mov
xorb
sbb
dec
and
stc
popa
jno
repz
cmp
jp
mov
cmpsl
cmp
mov
mov
xor
aas
pusha
in
pop
mov
imul
aas
enter
in
cmp
mov
adc
cli
test
mov
ss
mov
shrb
mov
ljmp
fsubl
mov
add
push
add
outsb
into
pop
repnz
stc
or
push
faddl
fstpt
jns
xchg
sti
inc
loop
push
mov
ret
jno
push
inc
mov
mov
sub
push
ret
jb
xor
fstpl
pop
cmp
inc
xor
pop
gs
mov
pop
xchg
test
and
jo
out
jecxz
pop
in
and
sbb
jmp
push
fmulp
addr16
ljmp
movsb
mov
outsl
sbb
cltd
jmp
and
adc
pop
ds
lcall
ss
aad
out
bound
add
sbb
mov
repnz
fists
pop
cmpsb
inc
dec
add
cmpsb
insl
insb
nop
pop
in
jl
cld
fisubl
ret
scas
xchg
arpl
movsb
dec
xor
cs
lods
inc
cmp
xchg
out
jle
sarl
or
std
jno
sbb
js
jo
orl
out
inc
mov
cmp
push
add
pop
add
ret
nop
mov
or
jecxz
insl
ret
push
xchg
aad
and
out
out
jg
lock
lcall
cmpsb
mov
jnp
adc
sbb
adc
adc
pushf
das
or
cmpsb
orb
push
jl
xlat
rcrl
adc
xorb
sub
arpl
popf
int3
push
imul
mov
pop
mov
jne
mov
das
xlat
fcmovbe
arpl
xchg
adcl
dec
loop
add
dec
rcrl
test
mov
int3
andl
scas
pop
popf
imul
xchg
shl
inc
cld
push
stos
jno
inc
mov
inc
pop
push
lock
pushf
mov
cmpsb
subb
add
jbe
lods
push
imul
and
aas
xchg
mov
pop
sub
lods
cmpsl
cmp
push
adcl
mov
push
in
sbb
int
xchg
subl
inc
fs
jbe
and
call
insl
cmc
adc
sbb
loop
ja
mov
test
daa
leave
sbb
sbb
sbb
adc
pushf
ret
push
and
push
ds
call
fistpl
repnz
out
gs
inc
fbstp
jns
repnz
movsl
andb
jne
dec
sub
in
pusha
dec
mov
pop
xchg
negl
push
fnstcw
lea
jae
ljmp
test
push
loopne
mov
push
cmc
jns
mov
sbb
add
xor
sub
shlb
out
sbb
mov
jle
sub
add
dec
iret
sbb
xchg
out
mov
cmpb
push
jno
and
loop
sbb
outsl
pop
and
pop
rorl
shll
lret
jb
mov
cmp
fiadds
jp
loopne
jle
imul
push
jbe
or
mov
mov
loope
orb
pop
mov
cmp
cmpsl
jbe
int3
push
mov
out
push
int
add
sub
pop
adc
nop
mov
cmpsb
imul
jae
bound
jge
out
push
fwait
sbb
xor
jo
fwait
mov
xor
dec
mov
shlb
fstpl
ret
scas
jae
inc
push
fwait
add
jp
das
mov
bound
jmp
mov
push
aad
sub
push
cltd
movsl
mov
lock
jnp
jnp
jns
call
aaa
sbb
xchg
leave
popa
add
call
jle
pop
aaa
loope
mov
nop
fidivl
push
lods
xor
mov
and
or
lret
push
loope
xor
int
lea
xorl
gs
jl
pop
repnz
vsubsd
imul
aaa
aas
ljmp
pop
push
mov
sbb
xor
sub
les
jne
arpl
xor
push
push
orb
lods
jo
std
call
inc
add
adc
jbe
lea
mov
and
adc
adc
cmc
out
sub
mov
xor
cwtl
pusha
pop
mov
mov
inc
testl
repz
sub
loopne
ja
adc
rcrl
cmpsb
pushf
sbb
jle
sbb
mov
in
sahf
jb
pop
add
pop
test
out
cmpsb
mov
push
mov
in
imul
fs
sarl
adc
fldcw
mov
xchg
int3
cwtl
add
scas
clc
test
pop
mov
jbe
xchg
add
and
loopne
or
es
test
in
mov
scas
stos
addr16
mov
movsb
sbb
xor
ds
adc
inc
inc
cmp
lods
push
cmc
test
sub
or
dec
push
mov
int
jbe
dec
leave
sub
movsb
fldenv
out
cli
pushf
cltd
movsb
dec
mov
pop
jb
lods
inc
popa
inc
or
xor
inc
repnz
out
cmpsl
or
dec
out
cmpsl
aaa
lret
nop
dec
insl
outsl
mov
or
pop
ret
cmp
loope,pt
pop
sahf
cmp
cli
or
mov
mov
leave
ss
push
dec
cwtl
scas
mov
pop
addl
in
add
out
fwait
pop
call
repz
sbb
ds
add
lea
push
sbb
popf
das
push
sub
inc
scas
pop
xchg
push
and
test
xchg
lods
jg
cmpsl
std
sbb
adc
aad
sub
ror
out
cs
loope
lds
and
leave
inc
out
das
popa
pop
pop
and
jo
rorl
loopne
jp
dec
aad
add
cmp
push
cs
sub
ja
inc
std
mov
and
nop
jo
and
pop
jge
pop
lock
inc
jbe
repnz
ss
pop
push
int
sbb
lds
cmp
xor
sbbl
sub
dec
inc
lcall
shlb
mov
daa
xchg
mov
sti
hlt
pop
loopne
pop
imul
xchg
xor
in
icebp
mov
mov
out
sbb
punpckldq
mov
sub
pop
dec
inc
inc
gs
add
cltd
mov
mov
rcrb
movsl
push
js
xor
or
call
push
or
cltd
out
jle
scas
jb
sub
jo
adc
push
insb
mov
push
out
cltd
sub
or
jbe
xlat
jmp
mov
add
jecxz
push
inc
adc
dec
ret
scas
es
test
mov
and
enter
xchg
lcall
repnz
sti
lds
dec
xor
mov
ja
dec
movsb
jb
sub
cltd
cltd
jge
sbb
pop
and
push
out
and
fwait
test
orl
pop
pusha
inc
rolb
fstps
sbb
add
cmp
out
dec
xor
mov
inc
addr16
jmp
cmpsl
mov
imul
push
fs
xchg
jp
jb
int3
lret
mov
lahf
dec
ljmp
in
sbb
loopne
inc
lods
es
sub
insl
stc
cli
xchg
pop
jle
xchg
or
mul
repnz
cld
and
lret
mov
aaa
sub
pop
dec
imul
movsb
and
sbb
mov
and
into
xchg
mov
fsubs
lds
stos
lods
es
loope
ja
and
ud2
dec
movb
jmp
cmp
dec
inc
xchg
mov
jne
cmp
shl
sarl
xchg
insb
mov
sbb
fistpll
push
mov
jg
cmp
xor
repz
push
popa
mov
jge
sbb
xor
les
lock
mov
je
xor
mov
xchg
fistps
push
gs
stos
inc
imull
and
decb
fcmove
mov
push
rcr
xor
icebp
xchg
xchg
call
aad
rcr
or
mov
sbb
jg
mov
enter
or
cmp
mov
sbb
stos
pop
mov
int
fistl
daa
jbe
lahf
add
dec
stos
stos
pop
lahf
lea
icebp
push
inc
popaw
scas
in
or
mov
adc
and
sub
lret
hlt
jge
loopne
out
adc
inc
movsb
pop
adc
push
in
mov
sbb
jg
push
aad
mov
push
sahf
dec
test
dec
mov
cli
cld
psubusb
jg
aad
mov
stos
lcall
xor
imul
fcoml
xchg
leave
idiv
in
dec
enter
lods
sti
and
push
cld
iret
mov
mov
lods
push
mov
ja
in
lods
imulb
negl
jmp
xchg
jmp
mov
and
iret
jno
push
lret
push
lahf
mov
add
in
dec
sahf
cltd
inc
movsl
popa
lods
and
lods
push
popa
pop
sbb
sbb
push
push
inc
inc
out
nop
push
les
mov
imul
repz
inc
insl
call
stos
aaa
xchg
mov
out
scas
out
lods
pop
cmp
loopne
sub
je
stos
and
cltd
xor
dec
adc
in
ret
cmp
data16
verr
xchg
xchg
or
fwait
out
jns
xchg
fisttpl
adc
dec
jmp
bound
mov
or
xor
incl
and
mov
sbb
cmp
testb
mov
imul
push
xor
fstpl
das
xchg
inc
mov
aas
call
std
add
test
rorl
icebp
dec
push
addr16
in
rorb
and
cmpsl
mov
call
cmp
and
test
iret
fiaddl
dec
xchg
sub
imul
repnz
pop
pop
out
push
mov
sahf
jmp
mov
mov
mov
aas
mov
sub
adc
sbb
in
mov
bound
xchg
pop
dec
mov
add
xchg
mov
push
sti
xchg
lret
cmp
xchg
sbb
xchg
mov
scas
or
out
enter
and
dec
mov
cmp
std
sbb
sub
xchg
aam
insl
mov
mov
mov
dec
iret
xor
mov
cltd
push
cmp
mov
dec
aaa
adc
inc
cmp
orl
call
out
jb
xor
in
js
or
push
pop
dec
repz
adc
xlat
and
out
enter
cs
jge
mov
push
in
xor
js
int
insl
add
jmp
mov
xchg
mov
pop
repz
sub
imul
adcl
jmp
push
xor
rcrb
fists
add
cli
push
ja
adc
dec
sub
pop
gs
mov
cmp
outsl
aas
rcrl
push
out
xchg
pushf
push
dec
mov
gs
stos
xor
ret
int3
or
inc
xchg
popf
xor
adc
xchg
stos
jne
test
sub
mov
insb
int3
inc
lods
ret
inc
loop
mov
data16
push
lret
fildll
fwait
sub
cmp
inc
sub
cwtl
test
arpl
cmp
stos
jb
rclb
mov
enter
in
bswap
fdivl
pop
jo
cld
push
int3
sub
xor
sti
xchg
fisttpl
movsb
xor
push
push
out
movsl
leave
ja
mov
or
jle
rcrl
add
sahf
sahf
orl
push
dec
push
sbb
in
dec
cmp
lret
std
addb
adc
mov
or
das
data16
xor
mov
dec
cmp
not
xchg
fisttpl
enter
jge
sub
sub
andl
dec
push
adc
hlt
jnp
stos
adc
pop
fcomps
aad
xchg
jle
and
mov
push
pushf
inc
mov
adc
mov
mov
je
lahf
cld
dec
jno
mov
mov
jns
add
scas
and
jbe
dec
push
mov
add
rolb
sub
inc
add
icebp
mov
nop
hlt
mov
ds
ljmp
rorl
in
clc
lods
out
sti
getsec
push
insl
add
aaa
std
fmuls
mov
sub
xchg
jb
in
and
inc
ljmp
mov
fwait
pcmpgtd
nop
add
fadds
or
into
cmp
sbb
mov
pop
xchg
lret
inc
in
sub
fsubs
test
popa
imul
int3
push
psubsw
or
in
ja
xorl
std
fidivl
dec
sbb
aad
cmpsb
xchg
lea
hlt
mov
mov
dec
or
xor
loop
mov
cwtl
loopne
popf
aaa
ret
mov
gs
hlt
ljmp
js
sbb
sbb
lret
sub
fisubl
test
or
push
aam
addr16
into
jo
sub
shrl
ret
mov
aas
ret
lods
ds
sbb
jecxz
test
sar
xchg
add
fbld
jle
push
jecxz
out
push
popa
jle
ds
outsl
scas
push
jg
xchg
pop
bound
sub
fsubs
rclb
push
sbb
ret
mov
xor
mull
outsb
test
jo
clc
int
shrl
gs
hlt
nop
out
call
or
insl
xor
bound
dec
fwait
and
lds
and
pop
jo
ret
push
jb
mov
fisttpl
sbb
push
call
xchg
xchg
clc
lods
dec
mov
scas
push
movsl
inc
je
or
arpl
push
jg
outsl
dec
mov
aaa
das
and
shl
jns
in
dec
mov
mov
scas
xchg
fsubrp
jne
fwait
iret
push
out
addl
and
andl
fs
cld
mov
lret
xchg
inc
cmpsb
daa
cmp
jne
dec
das
lds
sub
bound
test
loopne
pop
sub
inc
pop
dec
in
ss
xchg
inc
pop
cmp
popa
ret
or
xor
pushl
hlt
push
push
push
cmp
movsb
outsl
jg
adc
or
adc
rcr
das
fsubl
gs
sarb
jg
add
fwait
popf
lods
xchg
cmp
mov
bound
out
mov
xchg
fisubrs
or
cwtl
or
cli
jne
jmp
addr16
pop
arpl
test
in
roll
mov
mov
call
inc
inc
dec
jne
fsub
jl
aam
cmpsl
pop
das
roll
adc
popf
clc
subb
xchg
nop
clc
fisttps
stos
filds
push
inc
add
arpl
mov
push
loope
pop
movsl
add
xlat
icebp
lea
dec
sahf
jp
das
adc
adc
dec
sbb
add
sub
lcall
faddp
aas
ds
push
or
dec
inc
mov
pop
jb
lret
rcr
xchg
fdivs
dec
jmp
fstl
add
jnp
lcall
dec
ret
scas
cmp
dec
jmp
mov
scas
xor
jmp
or
push
les
jge
jns
sub
push
mov
add
test
mov
fisubl
xchg
std
sub
mov
mov
sbb
mov
cs
outsb
out
xchg
daa
jl
pop
jae
inc
fnstsw
mov
ja
xchg
cmpsl
xchg
pop
dec
jmp
or
pop
mov
gs
insl
es
imul
pop
in
sub
pop
push
aam
insl
inc
xor
das
cmp
inc
cmpsb
push
push
daa
push
sub
jg
je
sub
jno
push
ret
jecxz
jg
inc
sub
push
mov
mov
test
mov
test
pop
xorl
lods
outsb
ret
adc
dec
and
ja
jmp
mov
xchg
test
out
or
mov
imul
movsb
mov
inc
bnd
out
jle
pop
cmp
cmpb
icebp
loop
lahf
sbb
jg
push
cmpsl
mov
dec
mov
insl
cmc
xor
and
in
jne
mov
fs
dec
lea
fiadds
cmp
jo
stc
pop
lret
aad
jecxz
sbb
pushf
aaa
mov
sahf
lods
push
test
xchg
fsts
push
pop
rcll
push
cmp
xchg
lahf
mov
and
stos
xchg
push
xchg
sub
data16
lods
xchg
jnp
inc
nop
gs
sub
and
mov
sbb
or
jg
mov
sbbl
push
loopne
sub
lds
jb
mov
pop
cmpsb
jmp
push
movsb
adc
mov
or
jb
cmp
pusha
arpl
jb
add
mov
inc
jmp
push
scas
insl
mov
int3
mov
push
test
ljmp
bound
pop
mov
mov
and
adc
jb
je
adc
push
cmc
adc
adc
xchg
inc
mov
clc
cmc
stos
bound
or
mov
out
add
cmpsw
mov
or
inc
mov
sbb
outsl
cwtl
pusha
mov
dec
push
lcall
inc
mov
and
jg
test
mov
sub
push
cmp
sbb
aam
repnz
xchg
dec
jnp
cmc
xchg
repnz
pop
ror
mov
add
fnstenv
je
sub
pushf
pcmpeqd
sub
popa
gs
negb
shlb
push
rdpmc
fwait
mov
pop
pop
je
arpl
in
icebp
mov
ficompl
int3
xchg
and
and
jg
push
pop
out
mov
push
mov
jecxz
js
addr16
arpl
push
fwait
xor
push
rcrl
fdivp
adc
jmp
inc
pop
loop
inc
jae
test
mov
dec
inc
cmc
push
ja
aad
repz
lods
in
aad
sub
xor
mov
dec
adc
push
xor
mov
jmp
cwtl
mov
mov
jns
pop
push
sbb
or
or
popa
pop
mov
test
data16
arpl
push
shll
mov
stos
pop
fisttpl
fsubrp
sti
sub
cmp
aaa
or
rolb
add
pop
scas
shl
xchg
lret
frstor
jle
fst
sarl
pop
dec
add
ret
jae
movsl
and
into
movsl
pop
ret
fwait
cmpsb
rorb
mov
cmp
sub
movsl
mov
js
add
and
repnz
cmp
jle
xorl
repz
lret
mov
movsb
mov
test
pop
sub
pop
ret
pop
jle
in
aaa
sub
jo
push
outsl
pop
out
pop
insl
mov
adc
push
push
loop
xlat
jbe
inc
roll
or
fsubrs
push
sahf
fucomp
and
xchg
xor
xchg
or
jns
push
test
xchg
shlb
scas
sbb
mov
out
std
icebp
cmp
hlt
and
sbb
in
mov
jge
jb
sub
lret
mov
popf
hlt
add
cmp
cmpb
pop
add
adc
sub
jg
xchg
test
push
inc
push
hlt
fiadds
push
xorb
dec
aad
add
int3
sub
mov
cwtl
sub
push
xor
rcrl
shlb
cmpsl
inc
mov
mov
outsl
pop
jp
repnz
gs
mov
fnsave
adc
out
mov
out
test
rol
or
inc
imul
xor
sub
inc
jl
int3
jmp
jae
or
xor
aam
mov
adc
loop
jnp
add
fsubrl
add
lds
outsl
mov
movsl
test
mov
inc
dec
ficompl
pop
pushf
mov
aad
fwait
dec
fiadds
fdivrl
mov
mov
sub
xor
icebp
sarb
pop
push
stc
daa
mov
aad
or
ds
and
cwtl
test
xchg
call
fiadds
sysret
out
inc
call
cld
pmullw
and
imul
out
mov
sti
add
mov
bound
mov
and
sbb
dec
insl
and
fsubl
mov
fistpl
push
ret
mov
mov
roll
rcrl
into
dec
pop
inc
shlb
xor
xor
push
mov
pop
sub
cwtl
clc
and
push
xor
adc
leave
in
lcall
xor
pop
test
enter
push
xor
gs
xchg
jbe
jecxz
sarl
test
fs
or
inc
mov
lahf
ret
aaa
mov
jno
xor
mov
cmc
fcmovnu
ds
sbb
fwait
add
das
vpunpckhqdq
popl
shrl
dec
movsb
xchg
aaa
jb
adc
ds
xchg
jp
in
push
sub
xor
adc
aas
adc
cwtl
inc
lock
push
cmp
cmp
push
mov
fiadds
pop
cmp
push
daa
jb
mul
lret
test
adc
and
adc
loop
int3
xchg
lahf
pop
jne
mov
jbe
inc
sub
ret
cmp
push
nop
mov
cwtl
and
cmp
scas
imul
cli
js
xorl
pop
daa
iret
dec
mov
inc
jmp
inc
scas
faddl
int3
fwait
mov
xlat
clc
mov
out
test
mov
adc
fstps
loopne
inc
pop
outsb
movsb
mov
add
lcall
outsl
popa
in
xchg
in
testb
enter
push
xor
add
in
xor
ljmp
loopne
and
jg
notl
mov
push
mov
and
adc
dec
cmp
test
roll
mov
add
cmc
sbb
mov
jae
imul
out
je
ret
imul
xchg
pop
or
out
jo
aas
movsb
stc
mov
aam
addl
push
pop
cwtl
mov
xchg
lock
sti
out
mov
push
mov
push
sbb
and
scas
pop
call
fcmovnb
mov
fwait
fs
jle
mov
test
pushf
cmp
or
add
dec
repz
inc
add
aas
mov
movsl
lods
scas
pusha
data16
adc
mov
sahf
mov
jl
cmp
icebp
lea
fisubrl
insb
int3
cmp
xchg
hlt
rcrl
in
dec
repz
and
jb
sub
fcomp
cmp
inc
das
insl
into
cmp
jb
xlat
sub
scas
push
std
or
mov
cwtl
insl
xchg
aas
cmpsl
sbb
mov
adc
push
lahf
dec
test
push
mov
sbb
mov
xor
out
adc
dec
or
pop
sub
and
pop
and
imul
xchg
ds
sub
rolb
sahf
das
aaa
sti
sub
lcall
daa
push
fists
xchg
imul
movsl
push
sub
loopne
ret
adc
cld
int3
sub
mov
xchg
add
es
fwait
in
mov
int
movsb
sub
std
iretw
xor
cmp
int
out
lods
in
sub
xchg
pop
xor
aaa
data16
lcall
in
daa
push
cmp
shlb
push
xor
cwtl
lods
push
mov
shll
stc
push
ret
push
jbe
dec
icebp
shll
enter
dec
or
dec
push
inc
fadd
xor
push
fpatan
fwait
xchg
mov
imul
incl
push
cmp
hlt
test
jl
xor
inc
sbb
and
xor
inc
ror
and
sti
stos
lods
lds
inc
mov
add
or
aad
ljmp
cmc
in
jbe
and
ja
aaa
or
imul
clc
inc
adc
mov
ret
fidivl
mov
repz
or
sti
fwait
outsl
es
test
mov
mov
mov
jg
push
jo
sbb
pushf
aaa
or
ja
pushf
scas
lahf
jmpw
sahf
pop
fists
jbe
push
cmp
aam
mov
jg
jae
jb
dec
mov
sbb
sub
lods
das
xchg
data16
sub
xchg
inc
dec
mov
pop
mov
and
mov
xor
xchg
pop
xor
add
sti
mov
cmp
push
pushf
mov
adc
out
mov
mov
adc
pop
shll
psubd
data16
leave
push
popf
mov
dec
xor
mov
add
into
out
lret
push
jne
jno
dec
mov
or
in
dec
pop
imul
dec
cmp
mov
mov
xchg
call
popf
or
idivb
cmc
pop
mov
xchg
roll
jb
notb
dec
inc
stc
xor
test
cmp
scas
insb
push
rcl
out
fstpt
push
popa
inc
cmpsb
ss
xchg
fnsave
ret
cltd
ds
mov
sub
shlb
cmp
pop
movsl
test
sbb
mov
inc
push
pop
inc
cmp
ret
mov
jae
scas
xchg
sub
xorb
jp
push
mov
pop
push
and
leave
nop
dec
movsb
xor
mov
adc
jle
or
lcall
inc
sbb
repnz
adc
out
jecxz
lods
push
mov
pop
mov
mov
pop
inc
adc
jb
mov
pop
shlb
lea
movsb
dec
pop
cmp
or
push
xlat
or
imul
jmp
jae
xchg
pop
adc
call
xchg
jecxz,pt
test
addr16
xor
or
add
push
std
or
push
mov
inc
mov
sub
aas
popa
rcl
sub
jo
inc
sub
sbb
sahf
push
dec
daa
fdivs
fidivrs
jecxz
lods
push
push
mov
add
clc
jmp
pusha
lcallw
fs
sub
fldl
xor
fsubs
lahf
sbb
loop
lock
cwtl
scas
cs
xchg
dec
fdiv
dec
fstpt
mov
mov
mov
pop
ret
ja
inc
pusha
push
dec
xlat
and
and
pop
xchg
cs
lds
pop
ret
loopne
filds
push
mov
dec
mov
mov
mov
mov
mov
or
pop
dec
nop
ret
je
test
cmp
lret
jle
jbe
lret
sbb
daa
xor
sbb
out
xor
dec
pop
das
inc
popf
sbb
and
and
adc
ret
sbb
js
enter
mov
inc
sub
mov
push
cmpsl
aaa
lods
add
dec
arpl
fsubrl
jbe
dec
xchg
pop
pop
sbbb
jbe
jmp
and
and
fs
cmp
jbe
inc
xor
mov
xchg
shll
cmpsb
stos
add
mov
dec
dec
mov
inc
or
into
mov
test
cmp
sti
jle
jp
xor
xor
test
mov
inc
jmp
fcmovnbe
loop
cmc
push
negl
std
out
cmp
sub
lret
js
cmpl
lcall
pop
test
int3
add
push
and
mov
lods
aas
test
xor
cwtl
jno
adc
fdivr
lcall
aam
or
insb
insb
jno
push
mov
mov
inc
iret
test
cmp
push
int3
mov
push
pop
sbb
repz
shll
mov
push
pusha
iret
jg
inc
sbb
dec
insb
in
out
pop
fdivrs
and
adc
daa
test
push
dec
mov
addr16
cmpsb
or
or
jns,pn
mov
lret
gs
inc
movsl
jns
fucomip
mov
sub
sub
les
mov
mov
test
insb
add
push
xchg
mov
pop
movsl
or
nop
int3
mov
adc
mov
ffree
data16
sub
pop
negl
pop
xchg
scas
adc
xor
or
sbbl
mov
add
ret
inc
inc
adc
sbb
rcll
test
test
xchg
or
mov
aaa
mov
add
xchg
int
jl
push
and
out
fisttpl
fistpl
push
add
and
popf
adc
add
loop
pushf
mov
sub
pop
pop
push
mov
cmp
out
fcoms
jmp
cmpsl
mov
push
dec
cmc
pop
pusha
xchg
cmc
loopne
movsb
jns
jge
jl
in
push
mov
xchg
pusha
cltd
or
test
fcom
sbb
fnsave
es
add
pop
fildl
sbb
lahf
stos
out
or
add
sarb
int
push
fildll
pop
pop
lods
xorl
fs
test
jp
jl
ljmp
mov
jle
push
inc
fisttpl
xor
dec
adcb
jnp
pop
imul
fmulp
js
sbb
ss
push
sub
in
jp
jo
sbb
add
xor
dec
sub
xor
mov
inc
in
mov
pop
into
push
xrelease
out
mov
push
xor
mov
cmp
imulb
jg
fidivrs
jae
in
dec
loop
and
mov
mov
xor
es
pop
scas
mov
dec
in
inc
ljmp
cwtl
inc
addr16
dec
inc
jno
aad
lock
test
or
int3
pusha
leave
scas
add
movsb
pop
aam
push
nop
pop
scas
xchg
ljmp
orl
mov
aad
adc
js
nop
jecxz
leave
stos
dec
lock
inc
sub
leave
je
jo
imulb
push
push
adc
scas
pop
lret
test
scas
out
xchg
ljmp
xchg
lcall
fcoml
pop
pop
push
inc
push
out
ret
cmp
mov
fsub
dec
fwait
and
mov
cmp
out
sbb
in
ds
enter
cltd
inc
in
add
lds
xor
data16
iret
sbb
ja
andl
cmc
push
xchg
out
fsubs
or
sbb
xchg
and
dec
iret
xor
add
js
cwtl
mov
das
std
jmp
lock
int
cwtl
leave
sahf
in
push
jge
sti
push
movsl
pop
and
mov
out
lock
or
rorb
in
ret
dec
cmp
mov
in
es
adc
mov
stc
pushf
dec
scas
jbe
in
outsl
fisttps
std
fs
sub
ret
scas
pop
test
inc
and
mov
sti
pop
test
test
test
or
cmpsl
lahf
cmp
rolb
lahf
aad
out
movsl
dec
in
push
loopne
inc
fiadds
xchg
cmpl
test
paddsb
jo
add
pop
add
add
dec
or
xchg
pop
out
ss
ljmp
pusha
fldl
test
mov
imul
xorb
adc
mov
iret
mov
outsb
adc
or
jg
repnz
adc
clc
in
scas
jle
or
clc
insb
call
nop
add
sub
inc
enter
in
push
add
ret
sahf
push
inc
xchg
mov
mov
pop
cmp
adc
mov
dec
cmp
xchg
les
leave
add
dec
mov
fdivs
in
pop
add
addb
dec
cmp
push
xchg
shrb
cmp
xchg
and
mov
add
hlt
ds
add
mov
adc
push
dec
ljmp
add
push
lahf
push
xorb
les
mov
push
and
and
inc
and
sub
ds
mov
xchg
repz
push
lock
mov
outsb
add
inc
mov
lds
cmp
in
push
das
sbb
out
fcomps
pop
add
jle
add
dec
test
sub
add
lret
stos
stc
popf
mov
nopl
int3
hlt
mov
out
jp
testl
mov
sub
mov
jne
xcrypt-ctr
cmpsl
lcall
adc
cwtl
mov
and
add
aam
pop
and
add
test
inc
test
jo
sti
addr16
sub
and
or
pop
adcb
pop
push
inc
push
mov
dec
sub
push
in
push
add
pop
out
jno
push
ret
int
pop
test
into
mov
cs
inc
loop
mov
jl
stc
dec
mov
xchg
subb
sub
into
adc
lret
fwait
cmpsb
pushf
sub
dec
xor
ds
mov
cld
jp
cwtl
movsb
fidivl
pop
rorl
and
addb
xchg
hlt
push
mov
xor
lods
pop
jbe
hlt
push
sbb
mov
mov
inc
xchg
push
xchg
push
jp
dec
mov
inc
mov
xchg
push
push
jl
jb
xor
dec
xchg
inc
inc
fiadds
scas
fisubs
cmp
lret
inc
sbb
sbb
cmc
push
adc
mov
sbb
jmp
ret
jle
xchg
mov
sbb
daa
jb
rcl
dec
jmp
out
xchg
fcompl
mov
xchg
test
addl
xor
lds
leave
arpl
sub
gs
lahf
jl
mov
mov
rcrb
and
hlt
adcb
dec
sbb
add
or
push
std
sarl
pop
iret
outsb
dec
aad
hlt
cmp
add
lcall
outsl
mov
sbb
cmp
lock
sbb
in
rcll
mov
movsl
stos
ret
outsl
cs
push
lea
int3
js
push
jo
cmpsl
xchg
cwtl
sbb
xchg
push
jne
push
xor
xchg
orl
mov
jne
lock
xchg
fwait
ror
pop
jno
inc
cltd
mov
adc
push
andb
cmp
jns
mov
fwait
jne
mov
dec
cwtl
scas
or
xor
iret
add
add
js
or
je
mov
mov
imul
cmpsb
cwtl
jp
or
pop
fistpl
out
mov
out
jb
js
into
cmpsb
psllq
adc
adc
and
scas
lret
xchg
mov
pop
xchg
push
and
dec
repz
mov
xor
jmp
and
popa
icebp
lret
ljmp
or
incb
in
mov
les
test
adc
pop
in
jmp
jl
out
mov
mov
xchg
or
xchg
out
jge
inc
into
rcrl
sbb
sub
je
in
imull
stos
or
fidivl
xchg
sub
cmp
in
jg
mov
aam
lods
mov
leave
lahf
shlb
leave
cmp
xor
popa
mov
inc
xor
xor
and
aad
cld
push
ja
mov
jae
aad
sti
daa
cltd
das
lds
lods
jb
mov
lods
xor
add
mov
pop
push
lock
inc
xchg
mov
push
push
pushf
jno
sahf
cmpsl
fbld
psubb
orl
stos
sub
pop
lods
es
mov
dec
xchg
fwait
mov
or
inc
rcll
rcll
cld
mov
mov
mov
jl
mov
jle
dec
cli
mov
test
sar
cmp
andl
sahf
orb
negb
movsl
in
add
jge
jne
mov
or
add
and
sbbl
int3
sub
inc
mov
mov
cli
mov
mov
or
test
ret
je
scas
xchg
push
int
pop
push
jle
enter
xor
inc
pop
mov
pop
xor
add
mov
add
inc
or
push
outsl
push
dec
in
jae
mov
inc
in
lock
dec
mov
int
adc
shlb
cmc
movsb
or
or
repz
addr16
mov
mov
add
mov
mov
adc
mov
incb
sub
test
sub
jbe
sahf
imul
cmp
iret
mov
cmpsb
inc
dec
aaa
in
bound
popa
imul
popa
dec
addr16
push
aam
mov
xchg
xchg
repnz
pop
dec
inc
xchg
and
cli
lret
jecxz
mov
out
push
push
loopne
add
push
push
lods
stos
mov
ficoms
inc
es
sarl
outsl
xor
add
imul
push
mov
mov
std
push
sbb
mov
mov
jo
icebp
xor
inc
int
cltd
aas
enter
mov
sbbb
cmpsb
mov
cmpsl
addr16
cmp
mov
test
fs
jge
or
dec
insb
call
mov
and
pusha
sti
pop
jno
aas
inc
mov
aam
dec
js
inc
fadd
ljmp
add
push
fcoms
mov
push
stos
jns
subl
sub
out
mov
mov
xchg
push
add
fisttps
mov
inc
adc
xor
outsb
and
sbb
incb
fdiv
andb
mov
nop
inc
mov
aas
out
dec
or
pop
jb
and
jecxz
pop
es
cli
dec
xor
jp
mov
stos
lret
sbb
outsb
rclb
out
mov
rclb
add
outsl
inc
imul
rolb
jbe
and
daa
movsl
cmp
sub
add
dec
imulb
or
sbb
sbb
dec
stc
nop
ficomps
push
push
fsubp
popf
push
push
dec
dec
enter
mov
jae
into
jbe
sbb
test
pop
jbe
out
mov
xchg
push
sbb
roll
insb
sub
mov
xor
rorb
lock
mov
ss
cmc
inc
call
mov
inc
push
je
or
inc
dec
test
push
jl
mov
or
jae
add
icebp
mov
mov
jno
pop
pop
push
dec
enter
mov
into
fstpt
adc
rcrl
arpl
pop
fwait
xchg
inc
xor
mov
testb
mov
jmp
clc
xor
mov
dec
cli
or
fwait
pop
xchg
stc
in
mov
ret
hlt
or
movsl
push
jle
bound
add
xor
scas
pushl
cmp
out
stc
push
xlat
add
xchg
lahf
shl
jno
fcoml
ljmp
sbbl
enter
jne
loop
inc
ss
shr
jl
mov
out
xor
jns
lea
jg
insl
pop
push
ret
insb
pop
xor
je
cmpl
cmp
gs
fld
sub
mov
mov
push
mov
pop
dec
cli
mov
lret
stos
dec
mov
mov
jbe
enter
push
mov
xor
adc
cmc
arpl
adc
mov
andb
inc
imul
cmpsb
or
xor
jnp
ret
ret
jge
add
sbb
and
mov
adc
fnstsw
in
pop
jmp
je
inc
xor
adc
in
mov
pop
push
pop
cmp
or
mov
sub
or
and
xor
insl
fstl
popa
cwtl
cmp
test
fwait
cmpsb
adc
add
mov
sbb
jo
scas
ffreep
add
add
sbb
cwtl
push
call
jle
loopne
adc
sbb
out
push
mov
int
int
aaa
pop
testl
add
jae
push
xchg
ret
insl
ja
es
sbb
ja
fcom
lcall
mov
mov
sub
test
and
insb
adc
in
sub
mov
in
push
adc
inc
hlt
inc
hlt
leave
mov
sti
xor
xor
xchg
and
fisubl
push
mov
and
xor
dec
adc
inc
cwtl
jecxz
shll
sub
jno
pop
pushaw
jle
repz
mov
icebp
mov
and
pop
icebp
fwait
adc
mov
or
stos
stos
mov
fnstenv
mov
or
pop
pop
inc
pop
jg
sub
push
dec
stos
dec
jnp
dec
mov
ds
jecxz
jg
mov
fldt
xor
xlat
insb
xchg
push
or
or
xchg
outsl
inc
popf
fisubrl
xchg
push
xchg
rclb
and
xor
ret
jbe
aas
push
in
jne
xor
dec
sti
clc
leave
imull
loop
gs
xchg
cmp
sub
int3
xor
ljmp
rcll
arpl
xor
ss
inc
test
cld
imul
ficomps
push
pop
dec
shlb
pop
push
or
mov
jle
sbb
xchg
jecxz
repnz
cwtl
lret
in
loope
xchg
lds
loope
dec
sub
rolb
test
xor
fbld
inc
daa
mov
push
sub
outsl
xor
mov
fstpl
and
lock
fsubrs
adc
jg
push
mov
cmp
nop
jb
jl
mov
jge
push
dec
dec
push
lret
addr16
mov
pop
ljmp
loope
popf
call
dec
lea
jo
data16
icebp
cmc
icebp
sbb
imul
pop
test
sub
lahf
push
stos
dec
js
cmp
xchg
pop
mov
enter
xchg
leave
pop
cltd
dec
mov
mov
fcompl
fs
clc
mov
push
add
bnd
push
test
push
or
shrl
mov
in
adc
daa
adc
inc
and
add
cmpsb
adc
sahf
test
jmp
or
jno
cmp
adc
insb
jo
mov
clc
pop
cmp
or
mov
push
sbb
vpshlb
in
nop
bound
imul
adc
xchg
scas
shlb
test
and
sub
mov
mov
mov
mov
mov
push
cld
xchg
in
movsl
pop
repz
mov
call
jecxz
cmpl
add
stc
cmp
or
and
mull
jmp
adcb
fadds
mov
int
pop
cmp
movsl
lret
rcll
or
or
das
push
sahf
cmp
jno
mov
ja
int
or
bound
xchg
mov
fiadds
push
push
outsb
mov
stos
xor
adc
fs
cmpsb
mov
out
jae
dec
jle
ret
dec
das
push
call
test
addr16
nop
testl
iret
dec
cmp
mov
outsl
push
xchg
jle
sbb
sti
cld
jp
adc
xor
out
fcmovu
jns
jo
push
les
xchg
push
fs
mov
push
addr16
test
sbb
jno
adc
arpl
xor
mov
sbb
repz
mov
and
jp,pn
rcrl
stos
or
sub
jmp
aad
gs
loope
dec
sub
inc
inc
and
add
pop
pop
je
lahf
push
xchg
dec
xchg
pop
rcrb
inc
xchg
or
pop
rcr
inc
xor
xchg
push
jae
idivl
test
cmp
mov
out
cltd
pushf
push
jg
sbb
in
test
push
in
in
ficoms
lods
bound
lcall
mov
inc
or
push
push
leave
mov
or
call
pusha
pop
mov
data16
adc
out
nop
fisubrs
push
imul
pop
inc
add
in
lea
and
lcall
inc
pushf
subb
push
in
mov
push
inc
stos
mov
movsl
shlb
mov
mov
pop
repnz
daa
jg
inc
add
adc
inc
fistpl
mov
jg
adc
insb
xor
lds
mov
ljmp
or
add
jns
pop
pop
sbb
inc
mov
inc
sbb
shll
subl
leave
repnz
jmp
push
fldt
sbb
nop
sub
and
jecxz
pop
sbb
popf
xlat
adc
push
test
add
ljmp
dec
adc
or
daa
adc
insl
fs
push
inc
or
fistpll
enter
dec
push
mov
jo
repz
cmp
push
popf
in
or
test
dec
mov
push
les
lds
pushf
and
loopne
add
cmp
adc
pushf
test
out
or
mov
lret
fiaddl
popa
inc
test
cmp
call
cmp
inc
lret
lret
and
mov
adc
rorb
pusha
mov
inc
cld
cmp
jg
mov
sbb
cmp
pusha
or
subl
dec
ffreep
sti
jno
jnp
scas
jge
xchg
fstpt
jecxz
stos
lods
or
pop
sbb
xchg
sbb
pop
outsb
sub
add
ja
pop
jmp
test
mov
das
dec
iret
mov
cmp
test
sub
lock
cmpsb
idiv
or
jno
sti
subl
int3
sub
and
stos
dec
clc
stos
or
into
jmp
jbe
xchg
add
xchg
gs
pop
xchg
sub
shll
dec
or
or
shl
xchg
sbb
ret
sbb
repz
inc
dec
sub
push
pop
les
mov
xor
aad
aas
lahf
add
jno
fsubrs
pushf
sbb
out
push
cld
mov
or
out
xor
mov
mov
fmull
jo
dec
xchg
xor
in
icebp
inc
jmp
loopne
pop
push
mov
sub
adc
dec
shr
jnp
test
adc
inc
pop
dec
jno
flds
shll
mov
cli
iret
and
insb
pop
sbb
data16
push
xchg
and
jne
rclb
fwait
mov
ja
mov
lahf
mov
xor
lahf
shl
outsl
xchg
or
xor
inc
inc
cmovo
data16
push
lret
xchg
xor
push
jl
or
je
int3
je
jmp
ss
popf
xor
movsl
inc
jle
adcl
aaa
loopne
scas
arpl
call
xor
into
mov
pop
cltd
adcl
pushf
frstor
pop
popa
ds
pop
mul
pop
push
sbb
push
scas
mov
mov
xor
xor
mov
cmpsb
xchg
iret
insl
ficoms
add
dec
daa
xchg
jp
ljmp
pop
sbb
or
pop
xchg
sar
in
and
movsl
imull
mov
movl
lods
xchg
jb
rcrb
cmpsb
mov
add
mov
xor
out
dec
push
iret
xor
bound
mov
scas
aaa
in
out
mov
and
lea
inc
ret
ret
cmp
imul
jl
push
xor
and
roll
add
int3
cmpsl
xor
fs
div
lods
push
xchg
inc
ret
imul
daa
jae
into
mov
mov
arpl
xchg
popf
daa
add
cmp
xchg
out
pop
jo
jmp
push
mov
sti
into
cltd
shlb
imul
xchg
mov
leave
xchg
dec
int
movzwl
lods
ja
pop
dec
push
mov
fldl
in
test
mov
stc
pop
jae
inc
sub
loop
push
dec
dec
pop
sub
insl
lds
std
scas
inc
fisttpl
and
int3
sti
jmp
sbb
dec
daa
and
and
sti
xchg
inc
jo
popa
add
or
movb
cs
rorb
and
fidivl
mov
insl
cmp
dec
js
fwait
ljmp
push
mov
push
push
or
sub
in
scas
mov
loop
das
cmp
aam
xchg
xchg
movsl
loopne
sub
dec
xor
lock
add
pop
sub
cmp
inc
or
mov
jle
rcrb
xchg
jle
jecxz
inc
inc
out
mov
std
icebp
orb
test
test
jmp
in
xor
in
jge
sbb
push
dec
decl
push
xor
inc
ror
jl
fs
xchg
notb
xchg
sbb
jle
js
jns
mov
sbb
iret
jmp
cld
pop
rcrl
popf
fistps
pop
mov
cmp
lret
fnstsw
dec
rcl
in
pop
test
jg
jmp
scas
mov
testl
cmpsb
pop
andb
aad
lahf
and
push
cli
jmp
mov
mov
inc
das
clc
pop
adc
or
f2xm1
fmuls
mov
call
xchg
ja
dec
mov
lea
aaa
jl
call
push
mov
ljmp
mov
cld
rorb
das
shlb
xchg
iret
movsb
fidivl
movsb
push
mov
insl
popa
pop
xor
fisttps
andb
xchg
dec
xor
ds
xchg
ljmp
in
sub
add
jnp
push
js
push
jmp
sub
push
dec
xor
test
pop
adc
sub
or
cmp
out
jp
push
sbb
jp
cmp
ficoml
sbb
push
lcall
sub
push
cmp
dec
xlat
or
mov
clc
mov
dec
push
push
outsb
xor
mov
inc
popf
shll
cmpsl
sbb
out
test
jno
inc
sbb
or
lds
outsb
sub
add
pop
fcoml
mov
xchg
in
xor
xchg
pop
xchg
sub
jge
adc
adc
and
mov
dec
stos
mov
xchg
cmp
out
xchg
gs
jle
mov
sub
inc
movsl
and
jp
ret
mov
popf
outsl
sbb
call
popa
inc
mov
mov
push
cld
pop
mov
in
sub
jo
test
movsb
pop
pop
cmp
enter
rcll
out
jg
and
and
adc
xor
nop
cld
subl
lds
add
mov
movsl
pop
pushf
mov
sub
fidivl
mov
in
pusha
pop
fs
les
and
mov
xchg
repnz
cmp
or
sub
cmc
push
sbb
stos
cmc
aaa
jnp
ret
call
loopne
dec
sub
sub
inc
sbb
fdivs
test
call
add
je
bound
cs
addr16
outsb
pop
call
inc
rolb
loope
imul
cltd
fadd
mov
dec
and
cwtl
adc
and
gs
xor
fisttpl
mov
pop
inc
mov
cmp
xorl
push
cmp
jne
add
popa
mov
mov
ficompl
mov
sub
pop
dec
daa
cmp
aaa
dec
incl
inc
or
cmp
fsubs
call
xor
sub
ror
shrl
dec
xor
fwait
jp
mov
out
adc
push
ficomps
notl
push
pop
or
or
in
lret
insl
mov
jp
and
dec
adc
decb
push
int3
loop
mov
jg
hlt
mov
dec
jg
cmc
cmpb
jg
lahf
xor
and
data16
xchg
enter
pop
or
add
pop
fstl
inc
mov
and
out
inc
std
mov
xor
jno
adc
mov
mov
pop
mov
js
or
insb
push
xor
in
das
xchg
sbb
inc
ret
sbb
arpl
mov
sub
jecxz
cltd
add
push
flds
pusha
mov
mov
push
mov
test
and
cmp
mov
fstpt
adc
cltd
mov
outsl
mov
lret
pusha
imul
out
cli
mov
cmp
jae
imul
andb
adc
test
jecxz
adc
jnp
cltd
mov
cmpsl
imul
add
lahf
push
hlt
jmp
dec
inc
sbb
jg
dec
loope
jns
mov
mulb
mov
pop
sub
das
push
jl
sbbb
mov
mov
mov
and
ja
pop
jg
fsubrl
push
mov
sub
nop
jne
inc
sbb
lret
movsl
jae
rorb
inc
addl
pop
int3
jmp
into
dec
cwtl
lcall
jmp
jmp
ror
fistpl
and
mov
cs
xchg
lea
xchg
xchg
sbb
pop
push
icebp
adc
pop
push
jno
rolb
subb
out
mov
sbb
pop
mov
shrl
jb
push
inc
clc
and
xchg
xchg
cld
pop
pop
jmp
adc
jmp
adc
fdivrp
cmp
xchg
mov
lods
inc
or
cmc
in
pushf
add
pop
cld
shl
inc
adc
mov
jnp
loopne
mov
dec
or
xor
pushf
out
push
je
jns
stos
mov
cli
clc
fmul
push
push
cltd
mov
xlat
movsl
inc
into
add
cld
or
cmpsb
or
aam
mov
data16
scas
xor
pusha
xchg
pop
sbbb
out
rcll
adc
movsb
pop
dec
jle
dec
jecxz
lds
mov
sti
popf
in
dec
xchg
mov
repz
sarl
cmpsb
fs
out
or
insl
dec
out
cmp
or
jne
mov
pushf
pop
xlat
xchg
push
sbb
inc
jl
std
ss
lods
xchg
out
pop
push
scas
push
loopne
mov
das
cmpsb
ror
cld
xor
mov
sub
mov
loope
in
mov
jns
sbb
outsl
pop
xchg
test
mov
mov
jmp
jge
loope
xor
push
add
xchg
cs
add
call
popf
loope
out
out
sub
mov
mov
movsb
pop
js
jns
frstor
out
xchg
test
gs
mov
mov
out
mov
int
cmp
test
dec
pop
mov
dec
pop
leave
push
mov
aam
bound
or
jge
add
push
les
pusha
aam
rcrl
popa
icebp
add
pushf
pop
jmp
or
mov
xchg
fisubs
mov
push
lahf
int3
std
xchg
or
fs
jnp
xchg
xorb
sub
fsubl
mov
mov
adc
mov
fnstcw
pop
stc
ds
push
adc
xor
jp
imul
or
pop
sbb
dec
xchg
es
daa
push
adc
repz
loopne
out
in
inc
test
xchg
jbe
push
popa
pop
out
cmp
call
jge
mov
repz
jbe
add
dec
mov
or
popa
in
sub
mov
sbb
test
divb
ss
mov
je
and
mov
and
jae
pop
imul
cmpsb
mov
jns
inc
sub
add
jle
arpl
xchg
dec
outsb
adc
adc
adcl
sbb
xor
out
add
adc
cmc
add
jmp
lret
jmp
mov
in
call
out
mov
mov
xchg
pop
xor
adc
jne
adc
dec
loope
jnp
leave
mov
mov
imul
xor
adc
jp
xchg
shlb
sub
dec
ret
lock
adc
jno
dec
or
and
mov
mov
stc
pop
pop
and
inc
dec
insl
insb
pop
scas
sbb
cs
test
arpl
inc
in
insb
test
xlat
add
xlat
push
dec
lods
add
dec
aad
repz
lds
into
loop
daa
lods
lock
imul
inc
cmp
cmp
sub
push
jns
pushf
sarl
fnsave
in
inc
inc
test
loopne
mov
sub
mov
xchg
mov
push
add
sbb
and
fucomi
mov
cli
out
jge
lret
int3
lea
roll
jge
adc
nop
movsb
into
lret
mov
enter
out
fcoml
ret
imul
jae
jl
out
cmp
add
mov
cmp
mov
pop
inc
pop
cmp
aas
mov
dec
rcll
sar
add
xchg
int3
scas
mov
mov
add
je
insb
sub
iret
cld
push
gs
add
js
lar
gs
sti
xchg
loop
fnstcw
xor
pusha
fcomi
mov
adc
or
mov
outsl
into
sahf
jge
inc
aaa
fwait
cmpsl
stos
in
clc
cmp
enter
shl
mov
sub
in
repz
jmp
daa
icebp
add
dec
mov
pusha
test
jns
xor
push
xchg
adc
mov
aad
out
aad
mov
out
sbb
notb
leave
sarl
rcll
cmc
ds
sub
push
xchg
sti
fs
loopne
das
pop
std
cli
add
dec
inc
mov
std
push
add
adc
in
fucom
mov
xchg
xchg
cmp
xorl
mov
dec
adc
mov
cli
and
lock
xchg
out
mov
xlat
jbe
mov
aam
push
jno
mov
popa
testb
lods
inc
stos
fdivl
and
jl
stos
pop
testl
fldenv
and
push
shrl
stc
xchg
into
xor
aas
cld
mov
dec
cwtl
add
test
cmpl
icebp
mov
aam
xchg
sar
ljmp
xchg
pushf
cmpsb
push
ret
enter
jmp
jae
outsl
repz
divl
and
xor
mov
cmpsb
jp
cli
jb
xchg
lea
xor
repz
mov
pop
pop
ss
and
jp
dec
or
sbb
add
xlat
fmull
push
cli
and
xor
xchg
xor
dec
outsl
es
loop
pop
loopne
push
repz
in
pop
push
sub
lret
push
cmp
mov
xchg
xor
int3
inc
adc
cmpsb
rcrb
aas
mov
cmp
push
in
mov
aas
addl
pop
movsl
xor
dec
adc
and
xchg
jle
js
xchg
add
dec
push
mov
test
lret
test
sub
popa
fstp
cltd
push
in
fisubrl
inc
pop
fadd
lods
cmp
mov
test
sbb
mov
cmpsl
pop
fildll
stc
lds
sub
mov
jns
stc
xor
inc
sahf
pop
stc
cmp
pop
filds
mov
mov
push
repnz
outsl
inc
in
sbb
mov
mov
sbb
pop
in
mov
mov
inc
add
inc
shlb
cs
cmpb
or
ljmp
xchg
div
scas
push
add
movsb
mov
mov
fcoms
bound
push
stc
mov
and
xchg
inc
ds
scas
nop
xor
daa
pop
cwtl
dec
cmp
sbb
jle
arpl
mov
dec
dec
std
lahf
cli
mov
mov
into
addr16
imul
movsl
sub
mov
cli
insb
out
cmc
adc
repz
adc
insl
lods
adc
mov
inc
jle
and
outsl
pop
jg
dec
jbe
nop
insb
xchg
and
ret
adc
add
gs
jmp
cmp
and
das
outsb
mov
rcl
lock
push
or
outsl
xchg
add
packssdw
cmp
sub
mov
mov
je
sub
xchg
cltd
dec
js
inc
mov
mov
bound
and
test
push
addr16
xchg
in
pusha
js
xchg
mov
jne
dec
inc
adc
sbbb
xchg
cli
int
pop
imul
jnp
inc
xchg
lea
mov
les
push
cmpb
std
push
dec
adc
sti
jg
pop
popf
and
cmp
jns
enter
popf
jno
pop
push
mov
dec
xchg
mov
mov
mov
shrb
ljmp
fidivs
jnp
push
std
dec
adc
imul
das
jbe
jae
test
stos
or
jg
dec
insb
inc
xor
dec
cmpsl
sarl
in
xchg
mulb
mov
pop
sbb
pop
loopne
sbb
mov
pop
shlb
dec
cmpsb
mov
fsubrl
inc
push
xchg
not
add
sbb
and
loop
xchg
jne
mov
movl
lods
mov
fptan
out
inc
sahf
or
insb
scas
ja
cltd
adc
inc
rorb
sub
fsub
cmp
mov
inc
scas
sbb
test
jb
adc
das
data16
mov
cmp
lods
int
repz
nop
jo
insb
mov
push
mov
popa
mov
aaa
enter
divl
mul
xlat
movsl
in
mov
mov
rcl
xchg
aam
clc
xchg
mov
fwait
xor
add
das
pop
shrl
loop
or
sahf
lret
repz
xchg
fnstenv
out
dec
xor
fstpl
mov
mov
loope
cwtl
lahf
imul
rcrl
dec
pop
pop
xor
mov
das
jno
sbb
jb
add
out
cmpsb
addl
stc
lods
inc
sub
rclb
loopne
dec
push
mov
out
mov
mov
subb
mov
stos
mov
lds
or
test
push
enter
js
pop
adc
jge
or
add
cltd
inc
cwtl
jns
mov
popl
andl
push
pop
clc
mov
outsl
es
inc
std
xlat
pusha
rcll
fistl
scas
mov
mov
mov
jecxz
and
inc
adc
test
shl
daa
xchg
cltd
jge
ret
mov
mov
popl
loopne
data16
loop
push
adc
stc
cmp
pop
in
mov
jg
fmuls
call
fsubs
sub
xchg
push
daa
shlb
sbb
inc
jb
sbb
inc
dec
shrb
outsb
into
dec
jmp
test
sbb
push
int3
loopne
cmp
cli
dec
lods
add
mov
hlt
mov
jns
jmp
xchg
cltd
fcmovu
into
sub
inc
dec
fidivrl
push
xchg
mov
mov
sub
cmp
out
mov
in
push
jp
jbe
xlat
lea
enter
cli
jne
mov
or
in
mov
mov
in
adc
test
repz
cltd
js
lret
loopne
les
xor
mov
pop
pop
js
mov
dec
mulb
in
stos
jge
pushf
mov
pop
ja
xchg
lea
jns
mov
dec
rorb
xorl
jmp
cmp
imul
call
push
stos
add
mov
test
lea
dec
repnz
fldt
je
rolb
push
dec
popa
js
clc
xor
into
clc
loop
xchg
or
fildl
ja
pop
pop
data16
dec
jp
cmp
cmpb
sbb
mov
cli
lods
push
cmpsb
inc
test
loope
push
push
pop
shlb
hlt
adc
jp
mov
push
addr16
repnz
decb
test
and
cmpsb
int
xor
sbb
pop
sahf
data16
lret
push
aam
xor
lds
idivl
jno
ja
cmc
jmp
js
cmp
cltd
push
hlt
xchg
fstpt
xor
xor
mov
mov
xchg
mov
aaa
out
inc
inc
jns
ljmp
out
push
push
mov
in
push
test
mov
in
addr16
sbb
xchg
fistpl
sbb
cmc
pop
push
fnstenv
leave
sbb
sbb
and
jo
mov
mov
mov
sub
adc
mov
xchg
cwtl
dec
gs
lea
and
mov
mov
dec
pop
add
jb
sbb
push
cmc
stc
push
xor
aad
data16
out
sub
decb
mov
rorl
xchg
movsb
push
sbb
push
ss
repnz
insl
and
jbe
sbb
or
or
mov
imul
fwait
sbb
pop
fistpl
dec
pop
adc
mov
sub
movsb
data16
sub
lds
loope
shrb
mov
imul
loop
push
mov
cltd
mov
leave
cltd
fmulp
or
cmp
inc
lds
in
xor
cmpb
daa
movsb
clc
cwtl
mov
jp
out
loop
les
mov
adc
imul
push
xchg
add
mull
xchg
scas
clc
shlb
pop
or
pop
icebp
cs
jecxz
push
mov
or
iret
cs
adc
add
jp
inc
add
fmuls
leave
mov
and
push
sarl
clts
out
jle
sbb
cltd
pop
inc
and
cli
fisubl
fistps
inc
jmp
stos
dec
lea
sahf
pop
test
outsl
jo
add
pusha
jno
dec
mov
cmp
jae
cmpsb
adc
mov
ljmp
xor
jo
imul
out
shlb
cmc
aas
inc
shrw
dec
xchg
loop
cmp
repz
addr16
bnd
sub
mov
push
sbb
adc
cmp
xor
xchg
orl
insb
cmc
je
push
xchg
cmp
push
dec
stc
push
mov
lds
mov
ds
cmp
out
and
cmpl
inc
sbb
cmp
mov
insl
jge
mov
divl
js
sbb
cmc
out
addr16
push
insl
sbb
xor
outsl
pop
pop
cmp
mov
mov
ss
cmc
loop
lahf
in
cmpsb
cmp
dec
mov
cmp
xchg
xor
into
aaa
pop
mov
sti
cmp
andnps
popa
jp
inc
xor
xchg
andl
in
mov
jg
mov
rolb
add
xchg
cmpsl
dec
sub
std
sub
mov
mov
cmpsl
icebp
mov
add
fisubl
nop
stc
mov
andb
scas
popf
rol
xchg
hlt
add
pop
cmp
shll
push
cmp
loop
out
push
mov
xor
cmp
mov
gs
out
add
ljmp
jp
sahf
scas
daa
mov
jno
mov
ds
movb
pop
push
enter
sbb
cs
cltd
lea
lcall
leave
test
stos
add
or
or
push
bound
rorl
jae
daa
jns
inc
mov
push
shlb
mov
jl
cmpsl
adc
fidivrl
fcmovnb
es
or
lock
pushf
cmp
pushf
mov
mov
mov
xchg
xorb
out
ja
and
loope
mov
push
icebp
iret
sbb
int3
add
into
and
fsubrs
or
pop
lds
lahf
adc
xchg
inc
stos
xchg
leave
jg
dec
daa
popf
sub
cmpsl
les
cwtl
repz
push
lcall
xchg
or
sbb
daa
test
imul
sub
fstps
fisubrs
jnp
dec
and
stos
cwtd
xor
shrl
mov
hlt
jno
fldenv
lahf
enter
mov
jbe
test
imul
jae
lock
cmp
fcomps
cmp
mov
jno
xor
xchg
add
push
hlt
sbb
cmc
dec
push
sarl
add
or
or
push
call
lahf
out
not
xor
addr16
cmpsb
cmc
inc
aam
sbb
std
std
clc
inc
and
adc
fucom
arpl
std
lods
fnstenv
lcall
xchg
push
add
into
js
jnp
imul
cltd
or
mov
test
sub
mov
stos
jbe
in
negl
fmull
lcall
insb
mov
outsb
lods
cmovnp
rolb
mov
movsb
outsl
lret
xor
adc
push
xor
dec
mov
std
mov
jl
xchg
add
les
adc
add
repz
and
aaa
xor
and
mov
cmp
lea
sub
xlat
xor
test
inc
cli
xchg
leave
mov
jecxz
cmp
insb
xchg
and
imul
jl
pop
jmp
xor
std
fstps
dec
aam
ss
lods
movsb
cmp
ljmp
push
jae
jbe
fsubrs
xchg
adc
gs
add
ja
jae
inc
into
pop
sub
inc
jmp
andl
faddp
cs
dec
adc
mov
adc
push
rorb
pop
sbb
pop
addr16
xchg
and
xor
cltd
mov
ss
fcmovu
and
lock
popa
dec
repz
das
add
popa
mov
push
ret
sbb
inc
pop
dec
pop
cmp
ret
imul
xor
into
dec
ror
jno
push
pop
pop
xor
push
lods
jmp
sti
pop
dec
mov
lahf
jbe
push
lods
xchg
ret
and
lret
gs
inc
subl
xorl
mov
adc
push
test
imul
sub
pop
dec
insb
inc
adc
sub
pop
mov
sbb
imul
lods
mov
pop
pop
push
or
sub
imul
push
ret
sbb
pusha
adc
sbb
cmc
mov
cli
rcrl
push
xor
testb
sub
inc
aaa
sub
adc
and
pop
les
fldcw
ds
mov
sub
sbb
adc
ljmp
adc
dec
ret
jbe
jge
jle
cmp
repnz
ret
arpl
mov
or
sahf
loope
fistps
jns
add
adc
cwtl
fidivl
mov
icebp
push
bswap
sub
les
fdivrs
pop
jge
sbb
aaa
call
jp
daa
out
bound
scas
xchg
jae
scas
cmp
icebp
mov
adc
lcall
jecxz
loop
push
cmp
mov
out
loope
cli
ja
add
popf
ficoml
inc
inc
das
lock
or
jle
xchg
jle
pop
lcall
and
sub
sbb
xchg
add
call
leave
addr16
es
xchg
repnz
fwait
jns
cmp
test
pop
out
arpl
call
std
int
mov
mov
out
negl
xor
inc
mov
jecxz
pop
adc
lcall
pusha
out
lea
xchg
rclb
mov
jge
out
pop
arpl
es
data16
xchg
add
inc
std
rorb
xor
mov
inc
xchg
pusha
sub
xchg
mov
mov
push
sub
lret
push
mov
rcrb
cmp
test
xchg
in
mov
out
lahf
adc
inc
lretw
clc
incb
mov
cmp
cmp
es
cmp
inc
popf
cli
adc
or
or
or
leave
in
pop
mov
fwait
out
das
jge
ret
sbbl
pop
dec
adc
test
in
add
push
mov
lcall
cmp
or
scas
sub
lock
inc
xchg
adc
bound
inc
xchg
sti
fidivrl
and
dec
repz
les
lock
push
popa
aam
pop
das
xor
sbb
jne
push
out
mov
aam
adc
in
sub
sbb
xor
aas
and
aaa
pop
mov
push
fstpl
dec
call
mov
mov
or
imul
lret
add
and
std
stos
cmpsl
cmp
jae
dec
sbb
cmc
pop
lea
mov
add
sbb
jnp
jno
jmp
pusha
sub
test
lds
mov
in
in
aam
loope
or
push
in
and
rclb
mov
mov
fs
push
es
aam
dec
mov
push
cwtl
inc
rcll
dec
fcomp
xchg
or
cltd
or
mov
in
inc
es
sarl
imul
sbb
aad
xor
mov
mov
idivb
mov
push
sbb
arpl
int
inc
shrb
adc
or
cmc
adc
cld
add
orl
push
cmp
scas
addl
xor
inc
jg
aaa
pop
stos
inc
ss
cmpl
jo
out
dec
es
xor
and
movsl
mov
cmp
cmpsl
loop
movsb
test
jb
cld
pop
push
dec
pop
mov
scas
adc
add
out
pop
mov
mov
cld
add
cs
mov
mov
cmc
outsb
xor
jno
std
or
jle
pusha
ret
jae
xor
loop
mov
outsl
pop
add
popa
sub
pop
or
mov
mov
lock
or
mov
sbb
and
inc
fcom
adc
push
ret
cmp
push
or
mov
outsb
xor
push
mov
add
enter
and
xor
popa
stos
call
xor
pop
inc
sub
jb
or
ret
xchg
xor
or
pop
mov
loopne
inc
movsb
mov
rclb
jecxz
sbb
fnstsw
push
sbb
dec
ss
mov
inc
xchg
cmp
jne
jmp
push
mov
inc
xor
pop
loop
adc
cmpsl
xchg
pushf
std
xchg
or
or
cmp
mov
mov
pop
stc
pop
lret
push
xchg
cmpsl
xchg
cmc
out
decl
lods
sbb
fadds
or
int3
int3
mov
dec
insl
push
push
aam
cmp
testb
insb
inc
jbe
mov
add
jb
and
jae
mov
sub
mov
jecxz
in
add
and
and
jb
fcmovnb
inc
adc
and
loope
dec
insl
mov
movsb
bound
outsl
pop
and
or
ljmp
ja
pop
cltd
out
mov
push
jo
xchg
adc
xor
mov
add
scas
adc
push
xchg
jnp
mov
dec
imul
push
pop
sub
mov
mov
xor
into
int
test
sbb
insb
sbbl
sbb
into
js
push
dec
ja
xor
sbb
lcall
mov
addr16
imul
xchg
add
and
jmp
mov
fs
lock
mov
inc
inc
pop
jp
std
shll
sub
loop
insb
shlb
inc
pop
sbb
xor
or
xchg
movsb
mov
stc
push
mov
sub
addr16
pop
subb
fwait
and
mov
cwtl
cmc
ret
or
add
in
outsb
mov
lods
leave
add
ja
xor
push
mov
or
jp
lret
adc
icebp
mov
js
pop
out
ficompl
lret
in
ja
addb
inc
xlat
lret
fists
xchg
or
in
stc
call
cs
push
fdivp
mov
lods
inc
mov
stos
icebp
ja
and
add
adc
inc
into
mov
in
nop
sbbl
pop
ljmp
adcb
rolb
sbb
jmp
mov
xchg
data16
js
scas
jg
dec
ja
dec
loop
dec
xchg
lret
outsl
int
testl
xlat
icebp
in
add
loope
mov
sbb
pop
sbb
inc
pop
aam
es
lret
fmull
sub
outsl
adc
cwtl
mov
std
std
sarl
daa
mov
call
or
inc
pop
test
into
stos
xchg
les
jg
pop
decb
in
data16
les
fldenv
sub
pop
inc
aad
aas
dec
xor
cmc
xchg
mov
lock
cld
mov
cmp
jno
hlt
loope
push
push
xor
xchg
and
xorl
in
lcall
add
aam
std
or
xchg
sbb
xor
inc
aas
mov
aam
insb
push
jge
ror
xchg
cmc
aam
adc
out
in
add
addr16
inc
stos
pop
jbe
ret
sub
popa
into
andb
mov
xor
pop
push
cmpsb
add
mulb
add
jne
jle
sub
test
jb
fmull
out
addr16
or
add
mov
lcall
shl
loop
mov
outsb
xchg
xor
pusha
mov
test
dec
xor
imul
jle
or
sub
out
icebp
insl
jbe
lock
insl
add
cmp
out
mov
fistps
jbe
cmpsb
mov
and
nop
inc
int3
ret
cmp
sahf
jae
imul
ja
loop
mov
mov
leave
mov
das
cmpsb
inc
popf
push
test
inc
inc
sti
lahf
loop
mov
bound
mov
fdivl
lret
sbb
arpl
ret
lods
dec
int3
xorb
mov
test
iret
loope
cmovp
lock
mov
lods
mov
mov
ss
imul
sbb
clc
inc
mov
push
sbb
mov
xor
cmp
jne
in
in
adc
sbb
out
add
add
repz
mov
push
xor
loope
ja,pt
push
sub
mov
mov
and
push
mov
int
jg
loope
addr16
scas
popa
es
inc
and
dec
xchg
imul
jge
es
add
cmp
xchg
popf
int
ds
loope
loope
inc
fiaddl
jmp
sub
mov
fbld
xor
outsb
dec
pop
sbb
arpl
outsb
icebp
inc
mov
dec
pop
xchg
xchg
jp
lds
jge
in
cmpsl
push
pop
dec
je
xor
push
scas
insb
lret
jle
out
and
fs
fcoms
bound
add
stos
pop
xchg
adc
and
mov
mov
mov
sbb
cmp
jge
mov
lock
movsb
add
mov
cmp
mull
or
sbb
les
popa
test
mov
ret
inc
popf
cmp
inc
mov
and
xchg
and
addb
xchg
push
outsb
cltd
std
ds
dec
inc
xor
add
cmpsb
or
xor
aaa
sbb
cmp
into
movsb
aad
test
xor
out
test
and
neg
inc
cmpsb
clc
jne
fcomp
stc
repnz
out
aad
inc
mov
loopne
jl
fsubs
and
fs
loope
mov
cli
pop
xor
pop
adc
pop
mov
jae
lods
stos
lahf
and
enter
jbe
dec
mov
idivl
sbb
fdivs
cwtl
xchg
pop
pop
imul
sbb
jle
cmp
pop
movsl
dec
add
pop
daa
es
addr16
jno
fsub
cwtl
push
cmpsb
loop
not
or
mov
into
test
and
cmpl
in
movsl
or
in
vpmacsswd
clc
outsb
sbb
divb
xor
cmp
mov
outsb
mov
and
push
test
sti
loop
call
mov
arpl
shlb
out
sahf
aam
xor
sarb
and
xor
shrl
decl
lret
xorl
push
aaa
adc
popf
arpl
aad
lret
fsubp
in
cld
in
lcall
lods
aas
das
stos
int3
inc
mov
call
pop
mov
sbb
xchg
sub
iret
adc
movsl
movsl
jnp
sarb
ss
cmp
lea
aaa
pop
imul
arpl
lahf
mov
gs
pop
pop
cmpsb
sti
push
dec
mov
pop
cltd
jns
fists
xchg
popf
jns
or
dec
inc
or
mov
insb
or
or
fs
pusha
rcll
out
or
out
ljmp
mov
mov
fsubrs
lods
jno
or
test
cmpb
adc
out
adc
das
mov
sahf
stos
or
mov
outsl
int3
pop
loop
jmp
stc
ss
pop
xchg
pop
mov
inc
mov
test
cmp
push
or
aas
int
rclb
push
stc
adc
rorl
in
nop
test
scas
cmpsl
push
pop
jg
test
add
push
stos
fwait
xlat
xor
or
inc
inc
repnz
sarb
int
fildll
sub
lock
icebp
dec
xchg
push
int
xchg
imull
mov
xor
inc
aad
inc
shll
ss
rorl
arpl
push
in
lret
shl
in
and
insb
cltd
iret
ljmp
push
inc
and
jae
jle
imul
lock
arpl
cmp
pop
push
jmp
mov
imul
mov
add
sub
insb
out
push
shll
and
ret
jbe
cmp
frstor
mov
pop
out
xchg
addr16
cmpsb
cld
adc
jmp
inc
or
cmc
mov
fdivs
push
aas
cmpsl
test
mov
adc
jb
shl
jle
or
mov
xchg
cmp
or
rorl
test
inc
lods
mov
add
xchg
test
mov
lcall
mov
or
pop
mov
sbb
inc
stos
icebp
mov
xor
daa
sub
dec
xchg
xor
ljmp
iret
dec
sub
push
fsubs
cmp
out
notb
mov
xchg
pop
lods
cwtl
iret
es
fldl
sbb
xlat
aas
enter
lcall
sti
fimull
int
les
mov
dec
in
sbb
orl
pop
push
mov
ret
pop
sub
xor
push
mov
mov
in
rep
mov
cmp
sbb
shl
mov
xchg
scas
shl
imul
mov
pop
ss
inc
jle
sub
outsl
sbb
mov
and
inc
loop
cli
xor
jge
mov
rorl
mov
inc
xchg
xor
jo
mov
cmp
push
mov
adc
and
sbb
mov
aas
incb
add
lahf
mov
out
scas
cli
pusha
int
pop
mov
shlb
hlt
imul
addr16
lcall
ds
adc
arpl
jmp
or
je
inc
jns
push
push
sbb
jae
fcomps
orl
xchg
jae
or
lret
mov
xor
lock
add
mov
or
push
mov
pop
cs
push
add
aam
jns
divb
cmp
xchg
fmuls
push
rcrl
jecxz
sti
ljmp
sub
cs
mov
cltd
out
arpl
mov
pop
inc
int3
or
xor
popl
adc
popf
movl
int
add
inc
stos
cld
push
fnsave
xor
divl
pop
bound
xor
pushl
arpl
and
inc
mov
add
aaa
mov
or
mov
lret
clc
mov
xchg
mov
inc
add
es
xchg
sub
add
add
xchg
inc
mov
ljmp
test
cld
push
jl
ret
mov
dec
es
jne
xor
xor
mov
sub
add
sub
iret
inc
icebp
xchg
cmp
mov
hlt
imul
dec
gs
mov
mov
out
mov
xchg
sbbl
adc
and
jbe
mov
dec
sbb
int3
data16
pop
dec
iret
shll
enter
sti
shlb
movsb
xchg
sub
and
pushf
mov
mov
and
dec
cmp
mov
lods
sub
mov
jns
jmp
xchg
in
popa
std
jl
ja
add
push
ret
loop
dec
enter
loopne
call
pop
mov
in
add
cmp
fisttpl
cmc
adc
clc
ret
ds
imul
ss
xchg
fidivrs
or
and
or
hlt
cmpsl
leave
icebp
sbb
stc
movsl
stos
fwait
insb
adc
stc
filds
push
fs
mov
sub
stos
add
or
lcall
pop
and
xor
sahf
and
mov
xor
adc
stos
cli
js
lret
dec
xchg
xchg
xor
fisttpl
mov
ljmp
adc
push
jl
mov
adc
test
jg
out
pop
test
mov
les
jmp
jae
out
mov
mov
push
std
jmp
sbb
repz
js
dec
bndstx
in
test
std
cmp
sub
cltd
lret
es
mov
rorb
fadds
jmp
pop
lods
cltd
mov
bound
dec
popa
cltd
stos
sbb
aam
cwtl
jmp
mov
jle
imul
iret
ja
shrb
inc
add
jp
inc
ror
int
and
stc
and
testb
or
sub
out
aad
mov
mov
ljmp
orl
es
movsb
mov
repz
mov
and
push
call
fwait
aam
jb
cmp
cmp
mov
dec
jmp
stc
mov
sbb
jb
fld
int
and
fistpll
sub
jb
add
cmpsb
aas
adc
mov
lar
push
fwait
andl
or
test
jl
push
int3
aas
iret
mov
das
sub
loop
jbe
push
cmp
mov
mov
push
mov
sahf
cmp
sub
je
mov
arpl
cmp
es
outsl
jb
mov
jns
adc
push
aaa
mov
jg
out
mov
sbb
outsl
xlat
dec
sar
daa
aad
insl
enter
add
and
aam
insb
outsl
dec
and
imul
enter
sbb
mov
rol
push
adc
aam
cwtl
jns
cmpsl
mov
xlat
add
pop
aad
xlat
mov
xchg
xchg
movsl
pushf
and
and
sbb
shl
mov
jne
rorl
mull
inc
jne
xor
scas
cs
and
sub
aaa
mov
mov
js
cmp
and
cli
orl
arpl
dec
ret
add
xchg
rcrl
loop
ficomps
in
sub
xchg
stos
aam
fldenv
push
dec
fbstp
out
mov
or
fistl
clc
jl
xchg
lock
jbe
push
mov
repz
les
xchg
jecxz
push
push
out
imul
idivb
cmp
mov
mov
lock
fmuls
cmpb
ds
dec
ja
jbe
add
mov
push
xlat
xor
sahf
mov
mov
jg
add
mov
dec
or
mov
push
fistps
or
push
dec
pop
or
mov
sbb
push
mov
scas
xchg
or
lods
out
orl
pop
mov
fnstcw
loope
pusha
inc
pop
ja
push
jle
inc
and
xor
xchg
ret
jnp
jecxz
lret
xchg
add
cmp
lods
cmp
rolb
mov
sub
lock
adc
xor
mov
fwait
jp
in
pop
mov
add
and
negl
clc
arpl
mov
gs
and
aam
push
jne
add
cmp
or
jge
ret
cmp
jbe
test
sub
fwait
int
adc
xor
lcall
mov
adc
popa
pop
js
mov
jmp
cmp
mov
inc
xchg
xchg
adc
cwtl
or
adc
ret
mov
sbb
int3
mov
mov
adc
push
dec
in
out
test
lock
add
push
in
sbb
clc
jae
xchg
das
enter
xchg
fs
out
adc
subl
inc
hlt
sahf
repnz
cmp
cwtl
pop
sub
fdivl
cmp
fs
xchg
stos
sub
inc
mov
test
cwtl
add
inc
sbb
jbe
icebp
lods
push
xor
mov
test
mov
ds
lods
add
inc
clc
insl
jnp
in
dec
cmpsb
fucomip
and
out
cmp
xor
testb
test
push
pop
ja
les
popf
aam
sub
nop
adc
mov
sub
mov
int3
movsl
mov
xor
xchg
mov
xlat
rorb
cmp
movsl
cmp
ljmp
and
ljmp
out
imul
and
push
les
mov
out
inc
pop
arpl
test
xor
mov
or
push
lods
fidivs
jle
mov
pop
outsb
and
test
cmp
mov
lock
lret
inc
sti
xchg
into
mov
ss
and
adc
lods
mov
lds
mov
sub
bound
mov
mull
xchg
add
es
adc
aaa
and
sub
cmc
jle
sbb
std
shlb
dec
shll
pop
hlt
add
ja
inc
ret
fisubrl
lret
cmp
xchg
stc
lea
cltd
sbb
jnp
in
outsb
popf
cltd
lock
mov
test
adc
shl
mov
out
in
cmp
push
xor
stos
sbbl
inc
popa
movsb
cli
cmp
push
inc
lret
rorb
jecxz
add
jecxz
lcall
enter
lds
dec
add
xor
setns
mov
je
jbe
xchg
xchg
fidivs
js
js
cmc
or
hlt
mull
jle
test
in
push
sub
unpckhps
inc
mov
dec
cld
inc
cli
insl
in
leave
push
stos
cmp
jle
pusha
lock
gs
les
neg
or
mov
or
scas
stos
rclb
xchg
addb
mov
fwait
sbb
test
jb
jp
mov
mov
sub
pop
mov
add
mov
daa
jbe
dec
scas
int3
xor
cmpsb
push
sbb
mov
mov
pop
scas
lcall
leave
loop
mov
xchg
jecxz
test
xor
js
fdivrp
mov
es
add
repz
stos
push
dec
xchg
or
ja
sbb
push
sbb
rorl
jecxz
inc
and
test
pop
cmp
add
push
ror
fcoms
js
and
cs
sbb
mov
jnp
xor
popf
sub
mov
pop
push
sub
stc
mov
cmp
mov
pop
stos
inc
adc
add
fwait
mov
call
cwtl
adc
addr16
repnz
jmp
outsb
or
push
loope
push
jle
inc
sub
and
pop
fsubrs
cwtl
rcrl
sbb
inc
jecxz
decb
push
aaa
push
imul
pop
shr
sbb
inc
ss
dec
cmp
xchg
and
insb
sub
and
xchg
fcomi
imulb
push
or
push
test
add
bound
pop
les
pop
mov
lods
add
add
outsl
ficompl
mov
mov
test
sub
popf
ljmp
int3
mov
jecxz
fimuls
hlt
cmpsb
into
mov
mov
pop
mov
fwait
rcr
insl
in
sbb
xchg
repnz
dec
repz
rep
mov
imul
imul
in
adc
test
jl
rcl
enter
cmp
dec
xchg
dec
lcall
lahf
cmp
adc
lods
and
mov
xor
dec
add
rolb
dec
cmp
xor
adc
sub
int
add
or
and
and
adc
rcr
xchg
push
cmp
jle
xchg
aam
xchg
sbb
add
orl
jb
mov
in
cli
mov
or
dec
jg
cltd
push
dec
into
xlat
mov
push
je
ret
in
shlb
test
mov
out
xor
add
int3
and
hlt
dec
loope
push
repz
das
and
mov
xchg
test
scas
test
scas
cmpl
fcomi
xchg
insl
sub
xchg
scas
adc
push
mov
les
xchg
movsl
pop
pop
cmp
mov
pop
add
add
repz
clc
xchg
push
stos
dec
pop
sbb
repz
nop
pop
fiaddl
les
sub
inc
inc
dec
pop
pop
aaa
cltd
dec
jg
xchg
mov
mov
aas
testb
xor
or
mov
aaa
into
mov
xchg
pop
ljmp
rorl
add
push
mov
mov
add
cmp
ror
sbb
add
pop
mov
fs
mov
outsl
pusha
pop
test
push
mov
enter
sub
out
scas
inc
and
es
pop
xlat
out
adc
aas
push
jns
data16
push
scas
out
cld
mov
pop
jg
movsb
mov
and
or
movsl
lret
divb
pop
mov
push
cmpsb
addr16
xchg
fbld
decb
cmp
cld
push
divl
call
ja
jne
lret
jl
scas
js
dec
xor
in
jle,pt
shl
push
mov
push
push
call
xchg
popa
jle
mov
cmp
dec
dec
in
dec
xchg
clc
rolb
loopne
mov
cmpsl
jmp
pop
and
jne
imul
arpl
mov
popa
std
imul
dec
inc
push
call
jge
lret
and
fmull
xor
dec
rorb
fstl
xchg
xchg
int3
imul
xchg
and
lods
mov
lods
or
mov
std
es
xor
cmc
test
sub
out
add
push
stos
leave
gs
mov
mov
cmp
push
cmpl
cmp
lcall
test
lods
push
mov
fbld
aad
imull
mov
orl
mov
ljmp
sbb
dec
and
xchg
repz
inc
dec
jge
or
aas
inc
movsl
cwtl
pop
bound
cli
das
mov
xlat
inc
add
pop
in
imul
xchg
js
sbb
push
xor
or
inc
push
ss
xor
cwtl
inc
jmp
ljmp
subl
jecxz
ja
jge
jmp
fsts
adcl
sbb
insb
adc
push
in
sub
das
sahf
xchg
call
inc
cmp
les
test
and
fisubs
mov
insb
arpl
adc
mov
cmp
or
movsb
lods
xchg
sub
and
hlt
dec
cmp
fimull
jae
dec
xor
sub
jo
mov
sub
and
adcl
jl
mov
xchg
push
push
imul
andl
clc
popa
mov
lock
nop
pop
sti
loop
ret
cmpsl
xor
push
bound
mov
hlt
cwtl
push
or
push
shlb
in
adc
and
jns
ljmp
in
sub
js
movsl
cltd
lahf
mov
push
lret
pop
loopne
testb
hlt
push
xchg
add
pop
push
xchg
push
mov
push
mov
pop
out
outsl
adc
stos
and
xor
faddl
sti
cmp
cmp
adc
das
sub
nop
pusha
cmove
and
xchg
or
push
sahf
jae
mov
andb
xchg
rorb
hlt
pop
lods
out
and
out
pop
add
movsl
jecxz
in
xor
dec
sub
sub
or
jle
sbb
adc
dec
mov
push
outsb
mov
jmp
cld
outsl
add
mov
aas
mov
idiv
fs
ret
cwtl
rcll
sbb
jp
outsb
stc
loop
push
pop
ret
pop
adc
pusha
pop
xor
sbb
ja
dec
push
lods
clc
lds
subl
push
xchg
stos
in
xor
fldenv
mov
inc
mov
test
mov
sbb
mov
jne
jb
outsb
subl
mov
sub
ds
mov
and
add
icebp
into
insl
jg
test
mov
imul
adc
push
xor
xlat
ret
shll
rcrb
lret
in
imul
test
leave
fldt
or
dec
and
jb
ret
fsubl
xchg
sbb
jl
xchg
add
jns
mov
xor
mov
jns
rcl
mov
lcall
xchg
scas
xor
cmp
cwtl
iret
mov
adc
sbb
inc
xchg
ljmp
loopne
rolb
mov
cs
mov
jnp
pop
out
xor
xor
cmpsb
dec
sbb
ret
mov
out
adc
imul
cmp
out
xor
stos
lahf
xchg
jno
mov
ret
stos
pop
daa
sub
mov
test
repnz
lods
mov
mov
dec
and
addr16
icebp
mov
shrb
xchg
ret
push
and
scas
jl
imul
lcall
inc
movsl
cmc
dec
sbb
dec
and
shrl
sbb
mov
std
fs
out
ficomps
cmpsl
sub
das
cmp
pop
inc
and
in
lods
fildll
jno
js
sbb
add
testl
mov
popf
and
out
les
add
or
mov
inc
xchg
test
data16
iret
mov
add
inc
cmpsb
ror
jmp
adc
jp
jl
fs
xor
int
lock
ljmp
inc
add
dec
mov
lea
mov
data16
outsb
repz
sarb
fwait
and
jge
sub
int3
sbb
das
je
or
xchg
cmpsl
sti
mov
push
es
enter
xor
push
mov
iret
mov
push
repnz
xchg
jecxz
adc
sub
sub
lods
daa
pop
ss
mov
int
xlat
adc
jl
in
inc
and
push
push
sub
and
into
mov
dec
lock
xchg
addb
jno
adc
jl
andl
dec
out
jp
mov
add
or
dec
pop
sbb
leave
sub
ds
jmp
mov
mov
imul
mov
mov
xchg
and
xlat
sbb
scas
jne
popf
movl
les
sti
inc
add
pusha
sbb
jne
in
cmp
or
lods
mov
ficoms
andl
xor
dec
test
aas
push
push
and
mov
mulb
adc
shrl
shll
inc
leave
div
xor
dec
cmc
insl
loop
stos
movsb
test
sub
cmp
jb
sarl
orb
cmp
repz
cltd
lcall
push
loope
cld
test
dec
jo
dec
mov
testb
mov
cli
into
mov
pop
es
dec
outsb
xor
vucomiss
jl
inc
out
push
int
mov
jns
outsb
adc
mov
movsb
xchg
mov
stc
pop
lret
js
scas
cmp
ja
mov
leave
jle
daa
or
mov
shrl
in
rorb
or
xchg
mov
mov
js
mov
inc
inc
mov
push
sahf
jge
sbb
out
mov
push
mov
dec
mov
ja
push
std
push
xchg
push
sbb
dec
bound
add
jno
lcall
out
ljmp
or
fbld
pop
sti
cmp
sahf
sub
jecxz
pushf
dec
aam
jl
push
lcall
movsl
movsl
mov
mov
mov
ds
xlat
cmp
fmuls
scas
ds
pop
sub
and
sarb
and
inc
movsl
jg
sbb
stos
movsl
lea
mov
call
scas
mov
outsl
aad
rorl
rcll
mov
ret
jno
pop
jae
lcall
cli
outsl
cmp
pushl
xor
dec
addr16
mov
andb
mov
outsl
xor
addb
out
add
leave
mov
inc
xchg
add
das
push
popa
adc
mov
cmp
in
loop
lock
cmpsb
fists
ret
xor
dec
leave
cmova
and
loop
push
fbstp
popa
fadd
insl
fwait
inc
ljmp
mov
mov
cltd
lret
xchg
imul
adc
sub
mov
mov
sbb
mov
dec
jo
mov
push
xchg
lret
dec
mov
nop
xlat
fiadds
out
jecxz
cwtl
aaa
jp
or
add
or
push
shll
jecxz
mov
mov
mov
ret
jmp
jg
movsl
jecxz
outsb
dec
in
mov
js
cmpsb
jns
mov
xchg
into
hlt
outsb
jb
inc
lods
lods
mov
daa
push
sub
xor
in
popa
out
in
insl
mov
push
loope
adc
idivl
leave
jo
pop
movsl
fildl
inc
or
mov
push
pop
movsb
mov
mov
jmp
gs
sahf
test
scas
mov
scas
add
adc
ror
ficompl
pop
pop
fistl
call
and
ret
cs
int
mov
rcr
mov
scas
xchg
cmp
mov
aad
mov
jg
mov
lds
test
shlb
ds
jne
mov
mov
or
push
mov
cs
call
or
popl
pushl
jno
ss
fdivl
lods
push
pop
add
es
add
stos
nop
je
mov
stos
sbb
fisttps
pop
addr16
out
cmpsl
sub
sbb
mov
pop
mov
add
jb
jl
pop
sub
pop
xchg
push
fstp
push
icebp
sbb
xchg
mov
lds
or
adc
fidivrl
sbb
cltd
gs
pop
data16
incb
push
dec
stos
ja
adc
pop
jo
rcll
xchg
sbb
pop
sbb
jns
jp
inc
lret
adc
fists
ljmp
sbb
push
push
jmp
sub
data16
dec
jle
fsts
push
xorb
outsb
imul
ret
popf
sbb
jno
mov
push
push
dec
int
jne
and
cld
fwait
sbbl
adc
shll
sub
sbb
fisubrl
jne
jmp
dec
insb
movsl
inc
pop
icebp
mov
dec
insl
mov
inc
cmpsl
std
stos
iret
fmulp
pop
mov
daa
aad
sub
iret
mov
xor
out
jge
xchg
adc
sahf
jnp
aam
add
sbb
js
push
mov
sub
aas
mov
or
jp
addr16
outsb
xchg
inc
stos
dec
mov
xor
scas
arpl
push
into
int
cs
push
xchg
fstl
cmpsb
gs
mov
addr16
sahf
mov
fsub
jmp
sub
pop
sub
sbb
cwtl
inc
inc
xor
add
mov
inc
dec
dec
pop
xor
stos
xchg
sbb
movsl
mov
sbb
cmpb
fnstcw
out
dec
dec
push
cmp
push
shrl
lret
rorb
mov
xchg
xchg
insl
push
cld
jno
lods
imul
ret
add
rclb
cld
jb
cld
push
std
in
dec
lret
fcmove
jns
adc
xor
aam
push
mov
fs
out
jmp
pop
jno
adcl
rol
shlb
xchg
mov
ret
jnp
hlt
sbb
adc
mov
push
pop
mov
mov
in
add
mov
imul
imul
add
sahf
push
test
imul
insl
movsl
cwtl
insl
add
loopne
sub
cmp
int
sbb
mov
inc
stos
cli
sbb
lock
lods
mov
sub
psubw
cmp
ja
adc
jo
lock
in
jmp
cmp
cmp
mov
cld
jmp
testl
aad
pop
imul
sbb
push
std
test
mov
popl
ljmp
push
jb
sbb
lea
pop
aas
test
pop
xchg
repnz
xchg
cmpb
cmp
int3
xchg
jecxz
jns
jnp
cmp
bound
xor
push
js
addr16
sub
sbb
sbb
push
insl
gs
loope
sub
push
lahf
jbe
and
daa
mov
add
mov
hlt
test
aam
mov
ds
pop
sbb
fsts
pop
or
inc
negl
push
jg
cmpsl
xchg
jecxz
cli
clc
stos
xor
push
jmp
sbb
es
pusha
or
cmp
adc
xchg
jbe
xor
mov
xor
dec
xor
sti
sysexit
ficompl
xlat
pop
inc
jl
pop
sbb
sub
mov
pop
in
xor
stos
and
dec
out
xchg
mov
loopne
setg
je
adc
xchg
dec
mov
stc
pop
mov
shll
xchg
lret
fcos
ljmp
ja
lock
mov
sub
add
mov
lock
call
insb
test
add
adc
sti
mov
aas
sarb
stos
adc
imul
adc
mov
pop
out
and
and
sbbb
cmc
cmp
xchg
pop
fcomip
les
lock
and
push
add
cmpsb
test
imul
push
test
rorb
popa
or
mov
in
push
jmp
sbb
std
xor
push
xchg
or
nop
stc
jmp
inc
push
or
cmp
popf
mov
push
push
push
lcall
out
dec
mov
push
adc
nop
jle
scas
xchg
mov
sbb
xor
pop
mov
stc
inc
adc
xor
leave
push
das
rorb
pushf
mov
popa
inc
loope
add
sub
test
lods
aam
mov
mov
or
ja
inc
jmp
out
daa
std
add
mov
stos
jo
xchg
sbb
or
ret
adc
mov
xchg
sbb
divl
dec
jle
dec
test
add
decl
push
xchg
loope
mov
sbb
insl
andb
lea
std
xchg
xor
sbb
leave
mov
mov
icebp
add
mov
stc
or
daa
mov
and
hlt
cmp
int3
ret
imul
aas
in
fstl
sbb
pop
dec
add
into
cmpsb
nop
jns
stos
shll
push
mov
mov
in
mov
xchg
push
insl
adc
mov
mov
pop
das
aas
lahf
imul
in
aam
mov
imul
jg
lods
push
imul
mov
test
test
adc
sbb
jp
ss
inc
loop
mov
push
test
mov
add
rorl
sbbb
repz
sub
pop
insb
pop
in
or
dec
jmp
add
mov
imull
pop
adc
and
pop
mov
xor
push
stc
mov
mov
lcall
fmull
inc
adc
cli
jle
popf
jae
stc
repz
dec
fsubrs
iret
js
lods
and
ret
nop
jge
aas
mov
xor
cmp
int3
push
daa
clc
lret
sahf
xor
sub
dec
jo
ret
decl
lods
push
xlat
and
jns
shr
hlt
lret
lret
lock
daa
loopne
fs
stos
pop
lret
shll
adc
sbb
ret
push
dec
rcll
out
repnz
cmc
imul
adc
into
sub
adc
jmp
scas
inc
xor
sarl
xor
out
cmpsl
adc
mov
mov
add
pop
pop
scas
dec
into
jge
lretw
pop
mov
xchg
jmp
ret
push
bound
lea
rcrl
inc
dec
xor
fdivl
cmpsl
fscale
sbb
sti
sub
xchg
adc
push
dec
xchg
add
mov
inc
mov
pop
push
test
mov
and
and
xchg
hlt
inc
jg
push
test
jb
xchg
sub
dec
in
inc
lret
dec
fmul
shl
mov
dec
xlat
frstor
jg
dec
scas
cld
and
mov
cmp
and
xor
inc
js
push
adc
test
pop
arpl
clc
or
gs
xchg
loope
fstps
sub
sbb
in
cmp
jbe
push
jae
lods
mov
mov
in
jne
add
jae
jnp
sub
mov
testb
push
sbb
pop
mov
ljmp
mov
jp
jb
insl
push
or
xor
rorl
jmp
ljmp
aad
imull
cmp
imul
sbb
lock
pop
shlb
xlat
jle
inc
rolb
cmp
cwtl
loope
pop
push
ss
mov
lret
mov
xor
cmp
js
mov
mov
dec
cld
mov
and
fdivrp
mov
xor
loop
stc
adc
cmp
lods
aas
jp
sub
mov
in
pop
and
push
xchg
out
bound
enter
in
movsw
es
jbe
xchg
jb
out
pop
pop
and
mov
cmp
mov
out
jnp
mov
and
lret
mov
or
pop
cltd
cmp
push
dec
adc
clc
test
mov
mov
pop
add
dec
stc
mov
icebp
mov
loope
icebp
or
mov
lods
out
les
mov
pop
jp
inc
loop
imul
jbe
mov
mov
mov
inc
inc
pop
push
mov
xorb
mov
sti
mov
and
test
pop
dec
xchg
icebp
dec
xor
push
enter
ljmp
pop
mov
xchg
push
cmp
out
insl
push
imul
mov
loop
stos
insl
mov
xchg
fwait
std
mov
pop
mov
sub
add
add
scas
sub
test
mov
push
call
xchg
and
fbstp
lock
or
pop
lret
dec
ljmp
out
cmc
das
xchg
jno
stos
dec
cmpsb
jns
and
jg
hlt
movsl
rcl
daa
test
push
or
or
mov
loop
mov
or
fcomps
cltd
sub
or
loopne
dec
jmp
int
mov
mov
aaa
and
sbb
and
cmp
or
push
call
push
fcomi
inc
xor
in
mov
outsl
das
addr16
push
or
adcl
inc
sub
mov
pop
sbb
mov
test
or
mov
push
xchg
into
enter
sub
xchg
shrl
cmp
std
inc
arpl
test
stos
movsl
sbb
pop
das
xchg
fwait
sub
sub
incl
jle
lahf
mov
ds
movsb
hlt
cltd
or
xor
dec
adc
mov
mov
and
cld
mov
adc
loopne
add
xchg
xor
leave
mov
mov
cltd
lcall
movaps
jno
and
test
sbb
add
push
sbb
out
push
sub
inc
pop
cmpl
call
and
dec
mov
dec
lods
out
push
sti
lods
test
cs
movsl
sub
mov
cmpsb
shl
gs
das
cmp
pextrw
xchg
push
mov
add
test
jbe
stos
fdivs
or
sub
pop
rorl
xor
movl
cltd
in
xor
test
rcrl
lret
scas
xchg
lcall
cmp
repz
sub
int3
outsl
lods
dec
pop
mov
xchg
iret
test
scas
stc
incl
js
stos
xchg
jmp
inc
imul
mov
jmp
xchg
mov
and
push
cmp
sub
add
in
and
call
sub
pusha
das
xor
mov
sbb
movsb
and
sbb
idivl
sbb
dec
cmp
jns
adc
mov
push
adc
mov
inc
pop
in
inc
fwait
push
call
cmp
into
shll
mov
push
fs
in
lds
xor
mov
outsb
xor
divb
sti
pop
push
fldl
loope
add
sahf
inc
enter
sahf
mov
inc
xor
pop
xor
leave
or
fnclex
pop
mov
mov
movsl
shll
pusha
out
xchg
inc
push
sub
insb
divl
jl
inc
or
mov
add
push
inc
repz
or
lods
xchg
lea
cmpsl
rclb
mov
inc
sub
dec
cmp
enter
xor
lods
xchg
jno
cmc
jne
xlat
adc
cmp
pushf
pop
dec
dec
mov
lret
dec
movups
lret
sti
test
lret
inc
lcall
nop
arpl
dec
stos
lock
xor
dec
mov
inc
xchg
pusha
aas
jno
outsl
mov
ret
bound
ljmp
aam
sbb
cmpsl
sbb
data16
push
mov
cmovbe
sub
rorl
fsubl
mov
stos
je
jb
dec
insb
rol
mov
jle
neg
rcr
rcl
adc
hlt
sub
jae
stos
adc
ja
rcll
sbb
mov
or
gs
in
push
rcr
sbb
inc
outsl
adc
addb
call
iret
mov
ja
or
cmc
sub
pusha
push
jge
add
or
fldl
jge
jbe
xor
loopne
cmp
in
loopne
mov
ficompl
imul
sahf
dec
loop
mov
clc
mov
inc
popa
lret
nop
adc
clc
inc
fcmovnu
inc
aas
cwtl
jecxz
xchg
adc
adc
jmp
adc
insb
inc
mov
stos
cmp
pop
push
mov
cmp
mov
mov
push
sbb
add
popa
mov
mov
push
rclb
imull
xchg
lret
mov
push
es
notl
adc
fidivs
fildl
lock
xor
out
into
mov
cmpsb
xchg
aam
ret
jae
sti
fldl
lahf
push
out
dec
push
adcb
test
adc
fs
scas
push
mov
pop
xor
dec
mov
add
das
mov
ret
inc
dec
lock
adc
sbb
orb
nop
push
lods
fisubl
and
bound
sbb
aad
inc
mov
scas
shrb
shr
lret
mov
lret
testb
movsl
stos
mov
xchg
lcall
cwtl
xchg
iret
fcomps
lahf
pop
fs
mov
inc
js
adc
out
mov
push
pop
mov
dec
jne
std
jecxz
in
add
adc
mov
mov
flds
imul
cmc
cmpsb
or
adc
dec
ret
cmpl
mov
xor
push
and
ret
cmp
adc
jecxz
inc
gs
sbb
add
movsb
movsl
popa
sbb
aad
and
lcall
add
int3
dec
pop
movsl
sbb
sbb
aaa
inc
add
enter
add
pop
inc
and
or
in
adc
test
push
sti
mov
adc
dec
popf
sarl
add
out
popf
dec
cs
dec
xchg
sub
leave
test
in
in
push
mov
sub
push
cld
xor
xor
sub
cmp
popa
inc
and
xor
cld
xchg
repz
xchg
mov
out
pop
repnz
jns
xchg
repnz
fidivrl
xchg
out
xor
pop
aaa
aam
cmpsl
popf
lds
mov
enter
or
and
jmp
stos
or
pop
or
push
and
mov
pop
test
ja
add
fdivs
in
and
xchg
mov
lret
aam
sar
repz
mov
pop
call
push
fdivp
pop
rcrl
or
mov
ret
jg
scas
xor
fnstsw
cmc
dec
adc
ficompl
insl
push
mov
in
xor
adc
mov
xor
sub
xchg
imul
mov
cs
and
negb
adc
pop
adc
mov
sub
add
mov
adc
loope
jp
in
sub
bound
cli
imul
jmp
in
ficomps
stos
xchg
adc
xor
adc
sub
add
jmp
frstor
divb
push
and
stos
jl
sbbl
out
adc
repz
jns
cmpsb
xchg
fisttpll
adc
and
subw
xchg
aas
jns
mov
cmp
sub
js
pop
repnz
pop
repnz
push
repnz
mov
insl
xchg
fs
mov
jecxz
shlb
jmp
pop
in
pop
insb
sarb
imul
out
mov
aaa
adc
cmp
rolb
repz
mov
aas
pop
loop
loop
vmovaps
sahf
adc
mov
icebp
sbb
ds
insb
test
sub
decl
shll
rcr
xor
and
jle
mov
loop
pop
divb
imul
xor
mov
push
and
hlt
orl
aas
sbb
adc
adc
out
enter
mov
cmc
mov
stc
sti
and
rclb
test
pop
scas
mov
mov
pop
out
ja
into
xor
into
out
sbb
jnp
outsb
and
sub
sbb
inc
test
sbb
test
dec
leave
fadd
or
dec
add
inc
imul
push
push
jge
cmp
dec
xchg
int3
push
mov
cli
mov
lds
sbb
xorb
pushf
xor
lods
xchg
data16
out
mov
imul
in
sub
out
adc
and
lods
add
cltd
mov
mov
sub
sahf
inc
outsl
mov
sti
jno
ljmp
aas
mov
push
xchg
imul
lahf
call
pushl
jecxz
lret
imul
outsb
scas
out
pop
xchg
pusha
divb
lods
test
jmp
fdivrl
fildll
or
jbe
push
or
push
adc
enter
adc
inc
leave
jo
mov
lock
lds
sub
mov
fwait
cmpsl
inc
mov
cld
mov
xchg
ret
insb
jp
inc
dec
jbe
roll
mov
jo
out
cmpsb
xlat
sbb
xorl
inc
sub
cmc
mov
sbb
clc
cmp
push
faddl
daa
mov
pushf
cmpsl
push
and
das
imull
jns
aaa
cmpsl
ficoms
icebp
cld
loopne
pop
push
fs
cmc
or
mov
out
sbb
pop
mov
mov
cmp
int
jns
mov
add
std
lret
test
imul
dec
iret
sbb
mov
xchg
xor
clc
icebp
sub
sarl
push
loop
adc
sbbl
push
and
scas
inc
mov
mov
push
arpl
push
cmpsb
xor
xor
adc
lea
popa
add
fisubs
mov
sarl
insl
lret
cmp
pop
jbe
out
loopne
xor
sbbl
mov
negl
outsl
leave
testb
cmpb
ds
mov
daa
add
jmp
aam
cmp
mov
test
sti
aad
xor
add
and
xchg
inc
sbb
test
dec
les
jno
loope
sbb
add
inc
push
mov
sub
clc
xchg
test
mov
cmpsl
push
jg
mov
repnz
bound
orb
test
mov
sbb
pop
cltd
inc
je
adc
in
dec
dec
sbb
je
movsl
repz
xor
inc
lods
dec
push
fwait
cltd
mov
test
movsl
push
lods
cmp
pop
cmp
movsl
push
movsl
add
dec
mov
xor
and
push
dec
cld
xchg
xchg
enter
out
clc
jl
xchg
in
and
pop
clc
jl
jae
roll
xlat
lcall
cwtl
movsb
inc
dec
xchg
xor
shll
inc
mov
cmp
lock
pop
mov
pop
cwtl
enter
bound
pop
inc
dec
dec
lock
repnz
cltd
fidivl
cmp
mov
scas
mov
fidivs
mov
lcall
inc
dec
fisubrl
fs
or
dec
pop
cmp
iret
and
lods
mov
push
test
pop
xchg
jecxz
push
imul
out
xchg
fists
xchg
add
test
sbb
daa
or
adc
sbb
leave
in
scas
lock
jns
push
pop
add
sub
mov
mov
jnp
mov
andb
or
fsubp
rcll
lahf
bound
outsl
fsubr
rolb
or
or
mov
jae
rcr
push
stc
test
aas
jae
ja
push
loop
rolb
jo
in
popf
icebp
mov
cmc
divl
cwtl
push
pop
test
call
fwait
ja
fs
ret
mov
addb
mov
dec
mov
adc
jge
mov
js
xor
jb
sbbl
pop
rcrb
ljmp
sbb
or
insl
cltd
mov
in
insb
int
je
cmp
mov
or
rcr
inc
mov
enter
inc
test
mov
jne
jno
lret
mov
clc
cs
push
push
pop
cmp
movsl
cmp
inc
movsb
ret
and
and
adc
cltd
xchg
and
lea
fisubrs
adc
mov
rcl
stc
pop
mov
outsb
inc
inc
fistps
cmp
out
dec
rclb
mov
in
adc
cs
popf
arpl
loope
ret
loope
aaa
inc
cmc
fldl
je
outsl
sarl
insl
adc
int
das
mov
push
adc
lcall
insl
xchg
sub
mov
mov
xchg
sarb
pop
pop
pop
mov
sub
and
xchg
xchg
pop
cmp
push
cwtl
andb
mov
pop
push
xchg
adc
ljmp
lcall
psrlq
xor
pop
xorb
add
dec
das
mov
push
shlb
pop
in
push
test
daa
push
pop
cmp
inc
negb
pop
inc
xchg
flds
insb
inc
push
cmp
mov
lahf
mov
pop
and
ret
mov
pop
push
repz
sahf
imul
jl
dec
mov
and
mov
inc
push
popf
push
cmp
sbb
push
dec
movsl
clc
fcomps
ds
mov
or
and
or
or
sub
iret
push
ret
scas
inc
push
jmp
popa
cmpsb
pop
push
shll
inc
fwait
clc
jl
sub
adc
jp
inc
xchg
jbe
ljmp
pop
jae
pusha
movsb
rolb
imul
pop
daa
add
repnz
std
mov
cltd
inc
push
int3
aaa
outsl
jbe
fldcw
std
popa
inc
stos
pushf
and
sahf
push
das
adc
std
shrb
nop
out
pop
js
dec
push
subl
cli
cmp
fsts
mov
cmp
imull
inc
repz
in
lods
fidivrs
test
insb
dec
add
push
iret
sub
push
hlt
mov
dec
aas
mov
jle
sbb
cltd
ja
jne
out
adc
test
sub
dec
xor
adc
push
jg
punpckhwd
movsl
movsb
push
adc
ljmp
mov
xor
iret
cmp
sbb
mov
shl
jb
mov
mov
adc
stos
xchg
sbb
xchg
add
out
es
imul
imul
int3
dec
fldcw
mov
dec
es
sub
dec
loope
sbb
sub
xchg
les
int3
xor
loop
dec
clc
push
mov
outsb
jo
inc
mov
pop
lret
cmp
or
mov
inc
insw
mov
or
insb
lea
mov
das
cmp
out
scas
imul
push
push
mov
sub
cmp
testb
lret
mov
or
sbb
lods
sbb
ret
pop
and
and
mov
xor
push
out
repz
sbb
mov
ficoml
loope
in
test
mov
daa
add
jmp
mov
mov
inc
jns
xchg
pop
jl
int
sub
int
cmpsl
enter
mov
fcoms
sbbb
xchg
addr16
mov
aas
daa
cmp
divl
cmp
lahf
cmp
int
xor
repz
movsb
stos
int3
mov
scas
leave
gs
mov
push
pop
and
int3
es
je
ret
add
loop
out
loopne
jno
insb
mov
jns
lahf
cli
adc
jecxz
and
in
sahf
sbb
popf
lods
fisubs
fcom
iret
addb
or
dec
push
jae
adc
dec
vphadddq
cmp
test
and
xor
fucom
dec
outsb
mov
imul
call
out
add
lret
or
insl
pop
or
mov
ret
jg
cltd
or
mov
mov
dec
aad
sub
popf
dec
iret
push
and
inc
js
loop
fstpt
pop
add
cmc
dec
pop
xchg
leave
adc
sub
push
iret
and
push
ljmp
cld
jbe
xlat
push
xchg
ficoms
add
dec
lret
or
in
hlt
dec
push
jbe
xchg
cmpsb
repnz
divb
push
sarb
js
test
mov
scas
in
dec
lock
dec
es
jmp
cmp
adc
xorb
cmp
sbb
sub
xchg
mov
cli
jl
dec
mov
mov
mov
or
jno
repz
jo
push
inc
ljmp
inc
test
cmp
aam
push
fs
sbb
or
in
aaa
mov
mov
and
adc
aad
cltd
outsb
mov
imul
sarl
jg
mov
xchg
fildl
out
xor
loope
leave
jns
ljmp
cmp
sub
rorl
dec
xchg
out
bound
faddl
test
sbb
out
outsl
add
inc
jb
adc
std
sub
push
sti
sub
jle
aad
jmp
jp
mov
add
ret
imul
adc
sbb
and
cmp
xchg
add
xchg
jmp
jno
movsb
pop
ret
int3
subb
push
in
jp
jg
test
sub
or
loope
xor
cld
mov
add
dec
pop
pop
lahf
jge
incl
hlt
popf
push
sbb
and
sbbl
inc
lods
ret
daa
or
jno
mov
jns
fistl
lock
xchg
inc
sbb
int
mov
mov
push
xorb
add
enter
lods
sti
lea
or
cmpsb
pop
cmp
hlt
into
repnz
sub
repz
mov
aas
insl
adc
or
je
repz
les
loopne
lods
movsb
sahf
pop
inc
mov
push
mov
mov
repz
ljmp
lods
call
push
dec
icebp
mov
push
xor
je
sti
push
jne
pop
gs
inc
xchg
std
jne
bnd
or
data16
cmp
jb
mov
jns
add
cwtl
push
xor
jmp
push
nop
inc
jne
pop
adc
mov
dec
mov
loope
sbb
jns
call
jbe
inc
cmp
js
push
jnp
adc
inc
out
add
push
clc
shll
add
lods
mov
leave
mov
or
nop
cli
orb
das
ljmp
aad
jb
loopne
mov
xchg
mov
push
sub
mov
cmp
or
xchg
jle
test
xor
pop
add
push
inc
jo
inc
hlt
out
cmpsb
pushf
mov
xchg
cmp
cli
adc
jo
ret
mov
push
dec
ja
out
adc
push
testb
xor
mov
std
ss
ss
xlat
fidivs
aaa
test
cmp
xchg
inc
cmp
or
cmpsl
mov
pop
clc
imul
pop
loop
daa
pushl
cmp
xlat
cmp
xlat
dec
rclb
fadd
mul
bound
aad
call
pop
lods
mov
rcrb
xchg
test
dec
icebp
inc
lret
es
dec
scas
rcll
lcall
cwtl
lock
cmp
loopne
mov
jmp
sub
or
xor
sub
pop
push
xchg
fldcw
movsl
imul
aas
lods
sbb
xchg
mov
add
movsb
ret
stc
jl
dec
ja
adc
pop
repz
pop
dec
stos
pusha
cmp
insb
mov
add
lods
or
cwtl
shlb
ja
sbb
sub
out
lods
or
push
icebp
adcl
inc
dec
mov
ja
mov
mov
cmpsl
and
or
mov
out
inc
test
add
rcll
xchg
or
rsm
cmpsb
insl
lcall
mov
or
ss
sub
jae
div
jmp
cld
adc
in
insl
addr16
xchg
add
mov
sub
and
adc
xchg
add
testb
loopne
sub
lea
icebp
in
push
fs
add
mov
push
jge
pop
adc
lock
stos
mov
sub
ss
cmp
mov
fmuls
push
adcl
adc
jno
sbb
stos
or
dec
rorb
scas
cmp
jp
into
shrb
pop
dec
int
inc
sbb
inc
cltd
enter
in
dec
push
and
inc
rorb
fcmovnu
pop
jno
sub
add
mov
repz
lcall
lahf
setle
xchg
inc
xchg
dec
xor
cld
xchg
xor
popf
jbe
lcall
xor
xchg
jecxz
cmc
movsl
dec
dec
sar
add
mov
pop
add
fldt
sarl
hlt
inc
dec
cmp
push
push
gs
xchg
pop
cld
out
push
pushf
lock
xchg
inc
arpl
mov
cmc
mov
cmp
add
loop
cmp
adc
sub
shlb
lret
jle
mov
out
cmp
loope
pop
xchg
xchg
cmp
adc
dec
in
notl
scas
pop
or
inc
mov
lret
xchg
sbb
pop
pop
dec
inc
jno
pushf
adc
sbb
repnz
stos
sbb
enter
idivl
push
adc
or
ljmp
stos
mov
fwait
mov
jge
sub
lock
fidivrs
cmpsb
in
xchg
xorl
inc
push
or
xor
fcmovu
add
mov
enter
je
jns
mov
cmp
xor
imul
xor
add
dec
daa
rcr
scas
dec
popf
push
mov
jbe
and
sbbl
fwait
repnz
fsqrt
mov
mov
xor
xchg
into
cmpsl
mov
push
sub
cltd
mov
and
mov
iret
xchg
stos
push
insb
js
mov
test
js
imul
jnp
jl
sbb
push
movsl
xor
inc
mov
getsec
cmp
and
jge
dec
imul
lahf
scas
jnp
xor
or
jne
cmpsl
neg
push
adc
mov
sub
pop
cmc
cwtl
dec
or
cs
mov
xor
jae
lds
mov
mov
scas
add
lahf
sbb
inc
aaa
sub
dec
dec
mov
mov
test
nop
aaa
pop
xor
dec
xchg
jg
adc
fstl
jne
ret
data16
sub
and
inc
test
or
and
inc
jmp
ror
push
sub
or
nop
cmpsb
stos
andb
jp
pop
cmpb
jno
xchg
addr16
iret
mov
movb
jae
jg
lret
jp
push
xor
add
out
loop
hlt
jge
iret
xor
std
push
stos
aas
outsb
or
mov
test
push
mov
pushf
sbb
jbe
sub
pop
fdivs
sbb
mov
clc
sub
enter
add
cltd
sti
mov
xor
stc
test
scas
push
xchg
adc
call
cmc
nop
pop
imull
or
les
fs
pusha
clc
add
sub
jecxz
les
adc
pop
sbb
push
pop
imul
or
and
jns
lahf
add
lods
ljmp
mov
jbe
and
pop
inc
mov
fadds
mov
and
test
fnstcw
mov
outsb
mov
cmc
adc
adc
imul
and
sbb
pop
arpl
adc
adc
int
repnz
rclb
push
loope
hlt
xor
jle
ja
cld
call
adc
inc
xchg
jle
sbb
subb
repz
xor
in
xor
cmpl
pushf
fsubrs
outsb
sbb
add
xor
les
fdivl
fistpll
out
xor
xor
test
lahf
testb
fucomi
jnp
or
mov
ficoms
dec
imul
pop
dec
cld
mov
sbb
loop
out
addr16
xor
mov
outsb
cwtl
mov
jp
xchg
bound
jge
sbb
test
mov
outsl
xtest
push
ret
iret
and
sti
jle
mov
insb
add
sbb
push
or
sub
in
or
dec
adc
fadds
mov
mov
dec
imul
add
mov
jae
sub
push
fwait
jne
sbb
sub
pop
clc
pavgw
lret
or
test
fldt
sti
shlb
push
cmpsl
movsb
pop
xor
cmc
cld
ja
inc
dec
dec
lods
inc
leave
mov
nop
aas
mov
scas
test
ljmp
aaa
lahf
fstpl
mov
mov
pop
jmp
cli
inc
fdivl
aas
xor
out
je
inc
add
jle
mov
inc
push
ret
mov
jge
scas
ror
daa
sbb
icebp
shl
popa
movsl
and
xchg
push
in
xchg
cltd
mov
test
je
pusha
dec
loope
adc
mov
fildl
testb
mov
dec
repnz
pop
add
sarb
sub
inc
sbb
lock
jne
inc
cmc
cmc
clc
push
out
push
mov
lock
call
adc
xchg
sbb
or
mov
dec
loop
dec
dec
cwtl
inc
and
sub
cld
icebp
in
sarl
cmp
ret
out
mov
fmulp
xor
stc
cmp
ljmp
dec
xor
inc
pop
xchg
xchg
leave
mov
popa
mov
leave
adcl
pop
fsub
jno
loopne
xchg
negb
sar
shl
xchg
mov
xchg
sbb
fsubr
xchg
push
stos
jbe
les
cltd
jmp
inc
cmc
mov
cmpsb
sub
mov
loope
or
inc
pop
or
loope
scas
mov
xor
mov
popa
subps
inc
sub
cmpsl
lock
mov
xchg
push
jge
arpl
dec
adc
push
push
mov
fwait
andb
xchg
cli
push
repnz
pushf
fnsave
mov
sti
push
push
xchg
push
jns
ret
mov
sbb
sbb
loopne
ret
adc
and
cmp
icebp
jg
and
pop
pusha
mov
leave
push
hlt
jge
icebp
jbe
mov
push
cmp
outsl
ja
pop
nop
lods
adc
fs
scas
nop
xor
scas
test
cwtl
sub
pop
dec
dec
pop
out
jge
inc
cmp
les
pop
or
pop
test
outsl
mov
sbb
out
scas
jg
xor
push
dec
sub
jae
xor
das
aam
lahf
inc
sbb
movsl
mov
xchg
test
mov
in
sub
pop
dec
xor
pushf
jb
xchg
xlat
outsl
or
lcall
mov
push
xchg
mov
paddsb
outsl
fs
pop
jns
insl
aas
xchg
jo
aaa
sbb
jg
pop
xor
je
icebp
push
push
aam
mov
cmp
sub
stos
adc
stc
jp
xchg
dec
lods
mov
faddl
int3
das
test
jl
mov
ds
mov
jge
test
pop
jnp
jo
lds
jb
mov
mov
inc
xor
xchg
sub
fmuls
mov
jno
xor
push
in
jmp
push
and
fldl
mov
pop
dec
adc
sub
outsl
shll
and
inc
add
jae
cmc
sub
sub
test
mov
popa
xor
lods
sahf
jo
aaa
int
fisubrs
adc
xchg
lds
xchg
jnp
scas
lods
mov
add
sub
adc
add
and
lds
and
sti
mov
sbb
fdivp
imul
xchg
fmulp
pop
mov
sti
rorb
int3
push
inc
arpl
mov
adc
xorb
lret
iret
mov
out
push
mov
adc
sub
mov
cs
movsl
or
sbb
rcl
add
scas
adc
adc
inc
push
dec
adcb
pop
pusha
dec
js
mov
sbb
jle
rorl
add
mov
shrl
pop
push
push
pusha
mov
lahf
test
xor
sarl
jnp
inc
add
aad
mov
push
in
lahf
mov
and
in
sbb
out
cs
andb
sbb
mov
xchg
icebp
cmpsb
fs
dec
arpl
push
int
pop
and
xchg
movsl
mov
cmp
sbb
pop
imul
ficomps
or
mov
xlat
cmp
scas
dec
lcall
les
mov
xor
adc
mov
add
out
mov
cmp
push
mov
adc
inc
mov
cmc
jmp
adc
stos
mov
sbb
test
mov
sub
in
jl
jne
sub
cmp
mov
or
mov
mov
mov
xchg
idiv
cmp
mov
pop
fwait
testl
cmp
inc
iret
xchg
insl
sahf
or
push
sub
stos
jecxz
and
jno
xchg
shll
jbe
sbb
iret
gs
add
push
mov
jg
cmpsl
mov
repz
cmp
inc
dec
pop
mov
test
push
xchg
jae
ja
mov
adc
test
stos
mov
imull
pop
imull
add
adc
jns
ret
jo
test
hlt
jge
sub
mov
pop
and
xchg
or
sbb
outsl
lahf
xlat
cltd
movsl
sbb
cmp
outsl
lods
mov
insb
movsl
stos
mov
xlat
pop
clc
insb
out
push
xchg
hlt
repnz
mov
jne
scas
adc
inc
in
pop
shll
and
xchg
cld
mov
add
pop
pop
adc
out
comiss
xchg
sbb
push
jne
add
lcall
sti
add
sub
mov
pop
cwtl
xor
add
push
movb
sti
test
mov
scas
mov
je
stos
je
mov
fucom
in
sub
loopne
push
clc
lods
cmc
jmp
orl
test
pop
scas
xchg
jmp
dec
sub
push
add
loope
pop
repz
lahf
cwtl
sub
adc
div
adcb
aam
jne
andl
pusha
loope
jns
aad
dec
mov
mov
add
inc
repnz
mov
cltd
jno
xchg
pop
push
test
scas
sub
shrl
outsl
sbb
and
xchg
inc
rcrb
scas
jge
adc
je
jmp
scas
dec
popa
insb
aam
aad
out
sub
out
jg
pusha
cmp
in
out
jl
dec
movsl
pop
sub
pop
jge
mov
subl
cmp
out
push
or
sub
jne
push
mov
adc
xor
aad
cld
inc
xor
pusha
inc
fnstenv
mov
cmpb
xlat
cmpsb
ffreep
mov
cmpsl
xlat
popf
sub
mov
jl
cmc
xchg
hlt
int3
jecxz
out
pop
mov
stos
movsb
inc
mov
ret
add
push
insb
popf
clc
and
xorl
adc
scas
sub
sahf
repz
scas
add
in
outsb
scas
and
test
or
push
push
mov
test
dec
fwait
mov
fadds
or
xlat
popf
cmp
adc
subl
or
push
adc
bound
out
push
jecxz
pop
sbb
cmp
mov
lock
sub
dec
mov
sti
dec
nop
xor
xchg
jmp
rorb
inc
cmc
fistl
mov
test
dec
mov
stos
adc
test
xchg
stc
lock
outsb
mov
aaa
inc
dec
adc
lret
test
lea
cltd
xchg
xor
mov
int
fwait
dec
lret
mov
int
out
sub
push
addr16
negb
pop
and
ret
scas
push
jbe
pop
sub
jecxz
sbb
xchg
xchg
out
adc
fs
test
mov
jb
cwtl
jb
cmc
cmp
lock
lds
test
or
push
rorl
pop
mov
sbb
sub
lahf
jo
cmpsl
scas
incb
mov
sahf
in
push
cmp
cmp
inc
ficompl
dec
movsb
lods
sub
arpl
fstp
arpl
pop
and
push
xor
add
fstpl
xlat
leave
add
ljmp
adc
cmp
lret
fwait
cli
rclb
testl
ret
sub
add
mov
out
fnsave
pop
je
std
add
fidivrs
aas
cmp
sub
jo
sub
imul
adc
xchg
repnz
adc
inc
mov
add
sub
push
inc
call
or
jmp
pop
loopne
sub
inc
test
frstor
lret
xor
lahf
jnp
mov
pusha
jno
mov
ds
sbb
xchg
fiadds
xchg
sbb
pop
cmp
pop
or
ljmp
test
mov
rclb
jno
call
into
imul
ljmp
div
mov
iret
leave
paddsw
popa
mov
mov
fistl
and
sub
add
xchg
adc
cmp
push
outsl
cmp
fdivrl
sub
or
leave
sbb
insl
repnz
enter
inc
and
loope
jmp
adc
clc
push
or
and
dec
jne
mov
add
int3
popf
lods
leave
addr16
mov
cmp
pop
add
and
cmp
cltd
loop
or
popf
ret
inc
xchg
cmpsl
xor
dec
xlat
std
mov
cltd
aam
mov
jbe
push
mov
sub
in
ss
mov
scas
mov
arpl
cmp
jb
push
and
sub
cmp
jb
inc
sub
cmp
out
aaa
dec
test
push
jae
push
xor
out
aam
ljmp
insb
fsubrs
mov
or
stos
arpl
outsb
ja
pop
push
rol
cwtl
mov
out
int
or
mull
push
mov
mov
lds
adc
dec
testl
lock
xchg
jg
xchg
add
or
and
xor
pop
les
push
push
xor
scas
mov
mov
lret
fists
sbb
inc
or
das
test
icebp
cmc
mov
push
xor
mov
push
xchg
mov
std
testb
pop
roll
daa
inc
icebp
mov
inc
lret
inc
nop
jmp
mov
lock
ja
sbb
mov
insb
or
sub
jl
test
inc
aam
jp
in
fsubrl
lret
bound
cmp
push
sbb
add
xchg
inc
lock
adc
adc
xchg
sbb
cmpsl
mov
mov
js
xchg
or
push
cmp
jmp
push
popa
lock
call
loop
and
std
shll
dec
rorb
test
mov
scas
in
mov
lcall
test
mov
loop
popf
int3
pop
sub
push
cs
push
push
je
rclb
mov
dec
inc
call
pop
fwait
xor
imul
inc
push
mov
xor
pop
push
popf
dec
push
cmp
movsb
xchg
sarl
pop
outsl
xor
cli
mov
push
sub
and
jnp
or
cmpb
and
inc
cld
dec
xchg
adc
and
inc
out
fs
adc
movl
movsl
aas
fistpl
and
lfs
daa
fwait
xchg
scas
scas
xor
movsb
test
dec
lret
mov
dec
test
mov
xchg
out
xchg
negl
sub
les
cwtl
dec
ret
mov
xlat
xor
shll
pop
lret
and
bound
mov
cmp
addr16
psrlw
push
mov
mov
mov
dec
and
inc
adc
jge
add
popa
mov
outsb
sub
push
adc
jl
cmpb
test
mov
or
repnz
and
jb
jo
je
xchg
mov
adc
jo
fidivrs
test
push
imul
mov
pop
roll
jg
mov
dec
xor
adc
les
sub
outsl
mov
mov
sbb
test
sbb
cltd
jmp
sbb
adc
jmp
dec
jno
js
or
sub
sahf
jno
pushf
xchg
inc
dec
inc
jne
out
pop
xorl
aas
xchg
add
addl
lods
movsb
fwait
jle,pn
pop
lahf
add
or
sbb
mov
mov
negb
push
and
mov
cmp
incb
push
push
mov
add
jbe
mov
mov
inc
aaa
mov
aad
xchg
lds
fcomps
fadds
stos
xchg
push
ret
dec
xchg
daa
lods
inc
in
push
jl
jg
jno
ss
push
test
xor
fsts
clc
adcb
lods
sbb
xor
sub
fisttps
shr
push
popa
lret
scas
jnp
pop
cmpsb
lds
sub
pop
inc
arpl
jbe
fimull
xchg
xchg
pop
lahf
jae
pop
and
into
popf
inc
shl
arpl
int
rcrl
in
inc
jecxz
mov
fimull
lods
lcall
mov
std
cltd
jl
mov
scas
mul
dec
mov
dec
call
push
inc
push
mov
sub
jne
icebp
inc
inc
scas
fscale
out
addb
pop
ror
inc
popa
pushf
pop
clc
xchg
jno
or
lcall
fimull
mov
stos
xchg
pop
xchg
stos
mov
push
psubusw
clc
mov
aad
push
cmp
enter
inc
xchg
call
mov
je
pop
jecxz
jle
stos
sub
jge
andb
fs
sti
mov
cmpsb
pusha
mov
pop
mov
lods
and
test
xchg
test
mov
je
push
scas
inc
les
inc
mov
mov
inc
bound
push
adc
jb
mov
jno
out
cmp
ljmp
daa
out
fs
aas
imul
or
ret
push
or
test
cli
mov
inc
pop
xchg
sahf
incb
rcrl
fcmovnb
fisubrl
loope
mov
jg
in
jae
jns
mov
mov
add
xchg
jecxz
test
stc
mov
mov
cmc
mov
imul
cmpsb
mov
lret
adc
and
cltd
fwait
cli
or
jl
mov
ret
mov
jmp
jns
int3
mov
outsb
jle
sahf
cmp
inc
out
cs
xor
inc
dec
dec
shlb
in
push
arpl
data16
ss
pop
sarb
fmuls
scas
ljmp
push
mov
dec
fcmove
jo
push
aad
leave
xor
inc
test
and
pop
pop
cmp
xchg
push
fidivrl
sub
and
lcall
jmp
push
pop
xor
xchg
jne
mov
incl
adc
scas
mov
lods
sub
or
lods
es
aas
lcall
adc
ret
add
push
iret
dec
push
push
loopne
shlb
hlt
popf
cwtl
push
cmpsb
stos
jp
aas
in
ret
aas
push
add
dec
jmp
fdivrp
ss
xor
in
and
and
adc
mov
cmp
mov
mov
movsl
sbb
dec
adc
lock
ja
loopne
mov
cld
pop
dec
mov
bound
jecxz
mov
mull
inc
ljmp
gs
ficompl
dec
or
stc
mov
adc
push
mov
dec
push
jbe
sbb
add
push
dec
mov
lock
stc
jecxz
pop
push
mov
xlat
jle
sbb
in
mov
or
jno
adc
lds
adc
sub
xchg
and
push
insb
lret
mov
sbb
mov
pop
xrelease
repz
repnz
popa
loopne
xchg
push
addr16
repnz
sbb
mov
fldl
aas
in
test
xchg
mov
in
sub
pop
fwait
test
adcb
rcll
mov
lods
mov
inc
pop
rcll
mov
call
add
xchg
push
sub
adc
push
cmc
mov
cmp
xor
mov
sti
sbb
cmp
int3
and
fisttpll
xchg
outsl
inc
sbb
test
imul
stos
jmp
setg
movsb
bound
arpl
sub
ret
cltd
lcall
dec
insl
scas
shll
mov
int3
sub
dec
popf
adc
or
sbb
fsubs
mov
orb
rcrl
movsl
clc
jp
dec
mov
ss
insl
cld
mov
je
pop
loopne
sub
in
and
ret
mov
cmp
fs
dec
mov
sbb
faddl
cmp
adc
ret
jnp
xchg
xor
push
test
sub
jmp
xchg
sbb
loope
aad
es
cmp
dec
arpl
or
push
jecxz
inc
movl
mov
mov
mov
and
xchg
cs
hlt
jbe
ret
hlt
out
arpl
mov
dec
in
xor
fstpt
push
bound
pop
xor
cmp
in
jg
inc
cmp
cld
ds
pusha
adc
test
movsl
or
add
cmp
push
loope
and
mov
in
addl
jge
jo
int
sub
test
addr16
int
rcll
inc
popa
jns
mov
cmp
in
inc
test
xchg
add
lahf
add
dec
xchg
cmp
call
push
rcrb
lds
outsl
push
mov
lcall
cmp
fs
push
imul
pop
mov
cld
das
js
xchg
adc
ljmp
cltd
loopne
jle
lods
icebp
sub
imul
cmp
test
jmp
ret
or
jb
fiaddl
xor
or
andb
divl
cmp
ds
fnstenv
adc
pop
cs
jne
push
xchg
push
add
daa
into
dec
push
and
dec
mov
int
repnz
mov
enter
cs
out
inc
pop
add
pop
lock
js
inc
mov
dec
daa
push
cmp
dec
cmp
in
push
jae
xchg
cltd
xchg
pop
jg
fdivr
rcl
jae
jae
mov
in
push
popf
sbb
cld
es
jbe
int3
fdivs
in
sub
push
into
fmulp
lret
dec
and
bound
pusha
mov
mov
mov
xor
xor
sahf
push
jmp
add
neg
ds
enter
cli
sub
jnp
xor
lds
lds
xlat
sarl
push
push
fcmovne
pop
xchg
push
push
mov
cmp
push
pop
test
cmp
jnp
js
test
jle
xlat
push
mov
push
rorl
push
cmpsb
aam
stos
int3
ljmp
jmp
fisttpl
ret
pop
fnstcw
pop
es
ljmp
test
in
sbb
mov
insb
lock
push
mov
shll
shlb
dec
xchg
xlat
push
das
sbb
mov
stc
pop
push
adc
jo
xlat
loope
mov
mov
cmp
jae
mov
cmp
pop
loopne
cmp
out
lock
pop
dec
push
in
xor
xchg
lret
push
sar
fs
scas
sub
sub
ds
fistl
lea
je
cwtl
fwait
in
lret
jle
jmp
jg
dec
fldl
jnp
inc
adcb
aad
add
sbb
pop
add
cmp
fcmovu
push
and
negb
repz
rolb
sbb
imul
mov
popf
dec
dec
jae
gs
sbb
scas
xor
cmp
pop
adc
lods
mov
lret
rclb
mov
stc
insb
mulb
sub
or
or
and
add
pusha
add
mov
std
jno
dec
add
mov
cmp
imul
xor
std
mulb
mov
pusha
push
pop
and
or
push
popf
fwait
sbb
arpl
insl
sbb
daa
sbb
ret
jne
adcl
sahf
fnstcw
adc
xchg
test
lds
adc
mov
les
cmpl
push
pop
add
lds
xchg
xor
push
pop
mov
xor
fidivrs
push
mov
xor
mov
dec
and
cmp
dec
or
lods
sahf
dec
mov
pop
fsubl
sub
ds
inc
dec
jge
push
stc
and
mov
add
aas
jmp
imul
rcll
in
mov
outsl
fwait
lahf
pop
enter
jne
mov
ret
std
mov
sbb
mov
jecxz
outsb
mov
push
out
fucomip
or
xor
lds
fsubrs
mov
add
std
dec
and
nop
inc
std
cmc
insb
add
cmpl
icebp
lcall
mov
lret
inc
test
jae
sbb
sub
add
insl
jl
jo
cmp
mov
xchg
idivl
insl
cmc
mov
std
jbe
in
sbb
xchg
push
ret
lock
fwait
push
std
mov
in
bound
cmp
jae
ja
dec
notb
sub
add
inc
loop
test
pop
sbb
mov
mov
popa
das
dec
mov
bound
mov
push
in
dec
mov
sub
fistpl
fistpl
cld
inc
in
mov
dec
xchg
icebp
xchg
cmp
inc
dec
pop
xor
mov
dec
les
adc
mov
daa
mov
sti
inc
jg
mov
in
rcrl
push
ljmp
jp
mov
fdivrl
mov
mov
jne
stos
mov
test
push
or
fisttps
andb
insl
or
std
out
dec
and
outsb
dec
or
mov
xchg
lods
int
push
ja
dec
test
adc
call
lahf
or
sub
xchg
sub
pop
insb
cwtl
cmpsl
add
cmp
ja
test
int
xor
pop
or
int3
aaa
jnp
cs
jge
inc
and
ret
bound
daa
stc
je
movsb
add
xor
and
out
fcompl
dec
sbbb
addr16
ret
adc
jae
lock
inc
mov
sbb
enter
fidivl
lock
sbb
out
addl
mov
inc
mov
loopne
shll
sub
fs
sub
sar
shll
xor
cmp
call
pop
sub
push
xlat
outsb
mov
out
cmp
mov
xchg
jb
lods
inc
movaps
xchg
jmp
rorb
pop
js
test
xor
mov
lods
adc
imul
in
loope
in
and
sub
stos
dec
mov
ljmp
stos
pop
and
cmc
push
add
lret
into
divb
ret
adc
pushf
movl
test
jae
sbb
cli
arpl
add
inc
in
inc
push
call
sbb
in
repnz
mov
cmp
divb
imulb
es
mov
or
scas
call
sbb
mov
insl
mov
fldt
mov
mov
mov
pop
dec
shlb
fdivs
mov
cs
xor
push
test
lods
mov
pop
xchg
and
popf
fisubrs
stos
int3
jge
adc
mov
inc
cmp
add
inc
scas
cwtl
add
int3
adc
mov
push
push
jecxz
repnz
jge
push
mov
dec
insb
sarb
fprem1
adc
mov
testb
sbb
stos
mov
fs
push
cwtl
push
js
jge
out
push
test
mov
xchg
je
test
xchg
xor
fiadds
stc
adc
lods
gs
mov
sub
mov
mov
hlt
pop
jl
cmp
les
js
pop
stos
fbld
adc
cmc
pop
lret
sub
cmpsb
arpl
stos
jno
mov
xor
sub
sub
xchg
mov
and
clc
andl
mov
fucomi
xor
inc
push
pop
mov
std
cs
loop
repz
pop
sub
int
jl
mov
jp
inc
cmp
shl
mov
cmpsl
push
int
das
sar
nop
int
xchg
in
jmp
mov
inc
adc
sbb
rol
fcmovnbe
outsl
leave
fidivs
shll
mov
shl
push
sbb
int3
aad
in
movsl
mov
cld
pop
mov
adc
les
sbb
pop
mov
dec
in
out
jecxz
xchg
push
push
dec
sub
ljmp
mov
mov
and
mov
stos
daa
ja
push
or
xchg
add
xchg
fcomp
xor
xor
add
aas
lods
add
fsubrl
fimuls
mov
leave
push
push
ret
cld
sbb
mov
aaa
dec
cmp
sbb
dec
dec
cmp
inc
aas
add
inc
and
xor
idiv
jmp
cs
adc
imul
xchg
mov
pop
mov
test
pop
push
jnp
push
out
xchg
arpl
xor
test
mov
cmp
jp
adc
dec
or
dec
negb
ljmp
mov
ljmp
mov
dec
adc
xchg
std
xor
cmp
out
getsec
or
cmp
iret
jb
ja
jae
ja
outsb
int3
and
push
pop
mov
shrl
movsl
or
ljmp
pop
push
or
std
dec
pop
lods
aam
push
fistpll
ljmp
or
push
add
insb
das
push
mov
inc
pop
xchg
pop
lret
xor
jnp
cli
sbb
inc
mov
push
and
adc
jns
vorps
data16
into
xchg
scas
cmp
sbb
adc
fadds
adc
ja
arpl
enter
jns
xchg
jbe
push
xor
xchg
mov
sub
jmp
daa
pop
call
test
sarb
mov
inc
je
cmp
mov
and
mov
mov
pop
or
jp
xor
roll
cmp
push
pusha
ss
sbb
mov
mov
pop
testl
push
cmpsb
ljmp
mov
out
mov
in
loop
sub
cwtl
lret
inc
mov
test
mov
mov
fxch
hlt
pop
outsl
mov
nop
push
jge
pop
call
inc
mov
leave
jno
inc
sahf
shll
repnz
pop
fimull
outsl
mov
bound
mov
out
mov
bound
adc
mov
cli
mov
enter
cli
or
cmc
jp
xlat
std
ljmp
jle
push
mov
in
movsb
pop
pop
icebp
mov
fsubr
xchg
mov
push
sbb
xor
adc
jo
sub
icebp
inc
fadds
xchg
push
sbb
stc
ret
mov
lea
sub
int
inc
ret
lods
adc
loopne
inc
scas
cmp
add
mov
stc
dec
mov
adc
push
jp
sub
incb
ljmp
aam
pop
push
xchg
cmp
or
bound
fidivrl
js
add
sbb
scas
sarl
mov
add
std
adc
push
andl
jns
pushf
or
sbb
cmp
sub
aam
xchg
cmp
pop
in
mov
imulb
sub
push
sbb
sbb
inc
mov
xchg
cs
lret
leave
xchg
mov
inc
daa
xor
pop
mov
cli
xchg
icebp
mov
outsl
mov
mov
inc
les
out
or
or
lea
leave
pop
dec
test
dec
dec
or
push
movsb
add
jp
cmp
clc
and
outsb
into
aas
xor
push
ljmp
loopne
and
mov
adc
push
aas
mov
xchg
fimull
dec
fs
clc
dec
inc
aad
ret
xor
loop
and
jecxz
pop
push
jle
xchg
js
movsl
cmp
push
cmpsl
fwait
test
xchg
aaa
or
sub
testb
stos
outsl
dec
or
leave
loope
addb
mov
jno
jle
pop
jle
inc
shlb
cltd
mov
insl
dec
les
cld
js
jge
pcmpgtd
dec
orb
test
or
scas
pushf
push
jae
rcrl
movsl
xor
mov
jnp
or
incb
cmp
mov
fistpll
sub
aas
add
jge
mov
gs
int3
outsl
bound
shlb
xlat
push
sbb
add
out
test
cmpsl
mov
add
mov
push
test
pop
rcrl
icebp
push
lret
out
stos
xchg
cmp
call
out
jne
adc
shlb
call
or
and
mov
bound
loope
pop
mov
in
mov
lock
inc
sbb
jns
lds
imul
loopne
mov
xor
jp
cmp
mov
imul
ljmp
sbbb
inc
and
inc
pop
sbb
scas
lcall
lret
cld
inc
aam
pop
or
mov
jle
test
outsb
iret
lds
inc
jmp
add
lds
aaa
jp
aam
pop
shlb
adc
ffreep
mov
jle
xchg
xor
nop
ror
das
mov
mov
shl
leave
sbb
xor
dec
pushf
neg
cli
leave
mov
mov
fs
mov
pop
inc
mov
pop
jmp
jp
mov
sub
out
jmp
mov
rep
xchg
fldt
mov
lods
mov
and
test
jnp
mov
incl
mov
gs
and
andl
imul
lods
xor
lods
ds
cmp
fwait
xchg
cltd
fwait
loopne
cli
enter
sub
ss
mov
adc
mov
pop
stos
dec
add
negb
jmp
cmc
je
inc
out
in
xor
insb
aam
xchg
popf
xchg
test
cli
xlat
jl
lret
or
jge
adc
dec
test
mov
ss
push
or
pop
call
dec
mov
movsl
clc
lret
sbb
or
cmp
mov
nop
cli
aam
push
stos
aaa
sub
push
jg
mov
pop
je
xchg
xchg
push
xchg
push
test
fists
arpl
jne
pop
xlat
add
dec
mov
sbb
repz
mov
and
into
add
or
sub
or
push
push
aaa
mov
das
dec
mov
lods
dec
stc
dec
or
pushf
mov
dec
mov
mov
xorl
cli
shrb
sbb
cmp
or
mov
insl
xchg
jle
pusha
inc
jg
or
xchg
roll
mov
loopne
xchg
mov
inc
mov
cwtl
pop
aas
fmul
sub
mov
imul
inc
scas
jmp
stc
xor
mov
xchg
rcrb
inc
jbe
adc
mov
mov
sub
xchg
adc
jl
dec
out
push
cmp
fadds
and
outsl
clc
cmpsb
mov
jne
movsl
add
mov
jae
fisttpll
mov
ds
sbb
cmp
aam
adcl
outsb
fcomps
xchg
ret
push
or
stos
shll
mov
aam
dec
push
call
call
add
arpl
test
lret
sbb
push
cmpsl
inc
mov
int
cmpsb
int
and
nop
ja
cmp
ja
sysret
adcb
enter
or
scas
movsl
jae
mov
and
ja
mov
cmp
sbb
inc
push
jmp
lock
into
nop
ficompl
lret
idivl
js
mov
rorl
aas
pop
cmpsb
sub
mov
imul
gs
inc
lods
mov
mov
filds
xor
stos
dec
scas
popf
in
in
push
ret
mov
xchg
pop
cmovge
jbe
mov
out
sar
pop
arpl
insl
push
data16
data16
jp
sub
pushf
lahf
lcall
cmp
inc
push
pop
nop
shl
jae
clc
push
sub
xchg
fbstp
mov
incb
insb
lcall
enter
movsl
jmp
push
das
aaa
mov
pop
popa
arpl
and
jmp
lret
repnz
lods
leave
in
leave
cwtl
mov
and
das
sub
adc
aaa
cli
aam
roll
outsl
pop
fucom
inc
lahf
pusha
xchg
fucomp
sub
or
pop
in
test
lcall
dec
fisubs
dec
lods
sub
jo
stos
ds
cld
arpl
imul
lcall
push
fistl
hlt
cmc
fnstcw
js
xchg
jo
icebp
aad
xlat
xchg
adc
and
mov
cld
or
loop
push
or
dec
mov
fldcw
testl
cltd
ss
mov
incb
mov
xor
adc
iret
cltd
jbe
shlb
xchg
mov
pop
clc
pop
in
das
lea
rcrb
add
loope
mov
outsb
jle
cli
inc
xchg
das
dec
fnsave
mov
push
daa
cmp
cltd
ja
pop
scas
lods
xor
out
xrelease
push
arpl
mov
shl
push
fidivrs
cmp
int3
mov
mov
cmc
mov
dec
xchg
mov
mov
inc
mov
pop
sbb
and
inc
pop
movsb
xor
inc
roll
pop
ds
fstl
adc
push
outsb
pop
jp
xchg
das
ss
mov
in
subb
ret
rolb
fnsave
inc
push
pusha
cmp
mov
lods
in
mov
shlb
das
sbb
mov
sbb
dec
jmp
cmp
popa
jmp
fidivs
dec
shr
and
sti
fadd
dec
fldcw
popa
cmp
incl
cmpsb
dec
clc
mov
xor
and
pop
push
sub
fs
out
std
mov
mov
arpl
shll
mov
and
stc
or
sti
ffree
add
xchg
sub
loop
cmp
daa
sbb
mov
xchg
push
test
xchg
sbb
and
xchg
aaa
out
nop
sbb
inc
jle
inc
sbb
mov
cmp
lret
adc
pop
xor
out
inc
adc
lods
sbb
insl
mov
adc
xchg
sbb
mull
or
lds
xchg
sbb
mov
add
and
pop
xlat
int
testl
dec
jmp
fdivrl
push
fs
negb
scas
rol
jno
mov
cld
pop
xlat
xlat
xchg
dec
mov
inc
mov
lds
clc
and
movsb
cs
ja
leave
dec
mov
iretw
icebp
js
and
or
jle
fsubr
and
jge
mov
out
fdivl
push
xor
pop
fadds
cld
adc
mov
xlat
mov
push
fsubl
xchg
pushf
pop
int
add
sub
jo
dec
and
sub
mov
xchg
xor
mov
or
insb
pop
lret
and
out
pusha
arpl
inc
push
add
sub
mov
jne
lret
clc
mov
sbb
sti
inc
imul
push
pop
int3
jbe
sbb
insb
mov
xor
pop
adc
jbe
hlt
mov
cltd
push
xchg
aam
mov
push
jne
in
sub
imul
ret
pop
pop
lcall
mov
cmp
into
mov
cltd
and
test
mov
sub
pop
adc
mov
roll
movsl
inc
push
add
scas
mov
mov
cwtl
mul
pop
es
jmp
mov
les
mov
rcl
movsb
mov
cmc
or
sbb
pop
push
dec
inc
pop
shll
push
mov
or
mov
popa
lods
jg,pn
jecxz
daa
outsl
inc
inc
lahf
add
or
push
ljmp
sub
popf
add
mov
or
or
add
scas
mov
lds
outsl
sub
lret
inc
out
push
ss
sbb
test
lock
es
insb
repz
sbb
mov
cmpsl
pop
imul
push
mov
shll
addr16
mov
clc
es
and
je
fsubp
dec
cli
pop
lahf
fdivs
inc
cmp
sbb
mov
or
pushw
sbbb
cmp
sub
pop
jp
test
cwtl
and
leave
repnz
or
mov
shl
pop
ret
and
stos
out
sub
and
xchg
pop
push
xchg
mov
cmpsl
xchg
and
cld
adcb
push
insb
insl
pop
data16
jnp
xchg
cmp
popl
inc
dec
mov
das
stos
or
faddl
mov
jne
and
cli
xchg
mov
pop
sub
inc
push
push
sub
mov
or
cmpsb
iret
out
pop
mov
mov
fistpll
clc
xchg
jno
lea
call
rcrb
lcall
cmc
sbb
aas
jo
jns
mov
mov
popf
outsb
maskmovq
testl
shrb
mov
jmp
iret
xor
and
mov
push
xor
test
test
pop
inc
cmp
out
dec
xor
in
adc
or
sub
mov
sub
pop
arpl
adc
fsubrp
push
cmp
sbbl
mov
nop
in
pushw
push
pop
dec
insl
test
xor
or
aam
aad
and
adc
mov
loopne
aaa
addb
xor
sub
movsl
push
jae
pusha
popf
ret
sub
mov
dec
mov
addl
add
sbb
in
lret
aam
shr
add
roll
sarl
ss
cmp
jno
rolb
and
jbe
test
inc
mov
rcrl
lods
test
sbb
adc
jbe
mov
mov
icebp
cs
adc
jmp
lock
int3
or
mov
loop
sub
pop
cmp
rclb
subl
and
jmp
stos
pusha
add
imul
fisttps
add
dec
pop
mov
inc
pop
fiadds
mov
es
add
adc
ficoms
rol
repz
mov
popf
fidivl
std
xchg
or
popa
lret
jo
imul
sub
cmp
in
sbb
loope
stos
push
lock
cmpsl
iret
fdivs
das
jmp
call
out
sub
push
int
xchg
into
adc
rorl
jg
lahf
pop
xchg
int3
mov
stos
sahf
fwait
mov
iret
dec
add
popf
repz
cs
bound
cmpsl
mov
push
lret
dec
fimuls
cs
clc
jbe
adc
test
daa
enter
sti
jo
jg
push
out
stc
rolb
stos
in
into
adc
push
mov
loop
insb
pop
gs
xchg
test
aaa
mov
cmp
sbb
test
sahf
nopl
pusha
dec
or
mov
jmp
sti
pop
ja
mov
out
fsubrs
xchg
xor
subl
cmp
push
fdivs
mov
cli
aas
mov
sbb
xchg
dec
fiadds
pusha
mov
fcompl
add
ret
jno
mov
jb
jns
add
jno
dec
mov
fs
adcl
imul
mov
sbb
sub
mov
pop
inc
sub
out
adc
jmp
or
lods
sbb
in
xchg
mov
repnz
mov
nop
sbb
fisubl
mov
cld
les
mov
bound
mov
and
scas
adc
sahf
out
dec
ret
sti
xor
cltd
ja
or
mov
jge
hlt
push
push
outsb
mov
push
out
out
cltd
jl
sbb
pop
or
mov
stos
or
test
shll
dec
mov
fstl
cltd
xor
movb
mov
sbb
movsb
push
bound
movsl
dec
loopne
xchg
mov
mov
cmpsb
int
les
mov
mov
idivl
outsl
arpl
mov
rclb
mov
clc
nop
mov
adc
xchg
mov
cmpsb
pop
dec
mov
mov
sub
mov
adc
and
pop
xchg
xchg
mov
push
or
dec
xor
lock
push
sbb
jb
adc
adc
fidivl
outsl
xor
mov
pop
mov
adc
mov
mov
aam
movsl
push
rolb
mov
sub
push
les
mov
test
clc
jl
lcall
bound
sub
xchg
scas
inc
dec
bound
mov
push
pop
js
and
cwtl
adc
pop
jnp
test
xor
insb
adcl
arpl
mov
cmp
gs
fnstcw
dec
pusha
add
int3
adc
pushf
movsl
xor
pushl
sbb
loopne
and
mov
and
and
lcall
xchg
inc
movsb
push
scas
add
push
out
cs
xchg
adc
xlat
dec
hlt
cmp
addb
mov
mov
cli
jle
mov
mov
add
xor
clc
pop
dec
outsb
fstpl
sti
fwait
clc
in
cmp
loope
mov
jge
adc
fcoml
pop
add
pushf
cmc
aad
daa
lds
sbb
jecxz
mov
inc
xchg
mov
jno
mov
test
je
ds
xlat
ret
fwait
sub
bnd
adc
pop
xchg
jae
js
lods
shrb
mov
fwait
scas
divb
inc
mov
imul
jecxz
popf
lods
push
pop
mov
repz
nop
outsb
xchg
mov
in
stos
test
cli
cmp
mov
mov
push
test
fbstp
mov
pop
dec
pop
xor
push
mov
loopne
fdivrl
inc
mov
or
add
sbb
pop
jle
lcall
sahf
das
repz
inc
sbb
mov
xchg
movsb
rcl
add
pop
scas
in
arpl
xchg
add
and
inc
rcll
xchg
mov
and
mov
stc
xlat
int3
jb
dec
insb
or
roll
rorl
mov
sbb
lret
imul
lods
out
xor
js
ds
mov
inc
daa
mov
into
pop
imul
daa
dec
inc
inc
or
cmp
dec
jge
out
cld
shl
outsb
cmpb
repnz
int3
lcall
mov
lods
pop
push
cmp
inc
aad
sbb
lcall
test
cld
sbbl
shl
fidivrl
cbtw
inc
xchg
and
int
dec
jb
loope
dec
mov
inc
jae
push
adc
fidivs
test
test
mov
sbb
je
aam
scas
adc
xchg
aaa
jnp
incb
in
enter
in
dec
xchg
sbb
stos
gs
xor
dec
mov
pop
mov
push
int
dec
outsb
in
cmc
mov
or
xor
repz
pop
adc
mov
add
push
stos
leave
sbb
sti
adc
xor
es
adc
loope
lret
test
fimull
inc
mov
jl
out
push
lods
mov
mov
leave
and
inc
dec
sub
sbb
paddusw
mov
jno
fsts
daa
clc
leave
inc
sub
lods
xchg
aaa
or
sub
sub
push
stc
xchg
mov
cs
js
cmpsl
ljmp
loop
inc
dec
std
gs
adc
push
ret
addr16
aad
xchg
lahf
pop
bound
adc
jmp
repz
scas
lds
sbb
dec
scas
push
into
xchg
push
ss
rolb
mov
ljmp
and
fdiv
dec
into
enter
andb
in
pop
xor
leave
xchg
shl
imul
cmp
lock
test
mov
mov
mov
sarb
ss
xor
cmp
xchg
inc
outsb
cmp
pop
in
mov
mov
stos
decl
push
push
push
fwait
push
sbb
cwtl
stos
jbe
rcr
xchg
das
mov
daa
mov
mov
jp
mov
cwtl
lock
sub
and
sub
into
inc
enter
push
sti
push
lea
or
jge
sbb
jmp
xor
int3
pusha
xor
push
pop
call
into
outsb
dec
fwait
rcrb
cmc
inc
cmc
inc
iret
sub
inc
test
mov
out
les
add
mov
test
dec
mov
cmpsl
xchg
imul
or
sti
adc
aam
push
mov
in
hlt
lahf
ss
push
jmp
daa
cmpsw
mov
inc
mov
add
iret
and
aam
push
jp
push
xchg
inc
test
push
inc
and
sahf
xor
hlt
inc
test
fsubl
iret
mov
cmpsb
jecxz
xor
mov
outsl
jmp
shl
xor
inc
xchg
xor
inc
sbb
bound
icebp
adc
mov
test
lcall
xor
bound
dec
xor
xlat
mov
xchg
gs
sbb
les
aas
pop
das
int
cmpsl
cmp
xor
js
mov
fisttpll
ss
fsubrp
fsts
xchg
sub
inc
push
sahf
and
xor
inc
and
test
iret
or
es
out
pop
fwait
test
add
and
push
inc
sub
jecxz
sub
loope
mov
add
test
mov
jb
add
pop
mov
pop
int
dec
mov
push
lahf
add
cmp
xor
jnp
fsub
clc
add
fldt
sub
insl
lds
dec
mov
addr16
out
mov
push
sub
mov
and
inc
xchg
lds
push
and
inc
into
insl
jle
and
cmp
ret
mov
bound
mov
lea
xchg
hlt
cmp
jge
cmp
insb
xchg
xor
rcll
cltd
lret
fs
or
push
or
sbb
insb
dec
adc
and
xchg
sub
inc
jns
loope
jne
roll
fildl
pop
adc
and
add
sbb
inc
jmp
mov
push
ss
subb
repz
xchg
inc
out
out
push
mov
pop
aas
push
mov
pop
jmp
aaa
out
daa
sub
bound
sbb
out
xor
int3
test
add
cwtl
sub
pop
fidivrl
pop
add
push
mov
xchg
shll
mov
sbb
fisubrs
jno
add
aaa
ja
xor
push
bound
mov
stc
lret
mov
pop
enter
les
and
insb
pop
ss
frstor
and
push
jne
cmovnp
adc
xchg
repz
repz
movb
mov
out
mov
push
test
or
pop
cmp
or
jle
mov
out
mov
push
inc
push
pushf
sub
insb
ret
addb
adc
jp
inc
push
in
stc
repz
jae
jo
adc
push
ss
mov
pop
or
dec
data16
push
insl
push
int3
push
xchg
cld
cmpsl
mov
jg
jmp
movsb
ljmp
fisttpll
jge
in
mov
insb
daa
add
pushf
dec
js
adc
push
sub
pop
inc
adc
int
sub
daa
or
pop
test
outsl
arpl
mov
inc
lea
push
test
xor
mov
mov
add
les
push
int3
jecxz
mov
jae
cwtl
push
je
add
mov
data16
jns
icebp
push
pusha
call
sub
adc
pop
cltd
jmp
mov
popa
repnz
lret
jmp
xchg
mov
daa
jnp
hlt
iret
movsl
inc
ret
push
out
and
push
in
jg
pop
or
or
and
xchg
xchg
adc
enter
cmpsb
push
jge
cmp
aad
ret
frstor
push
add
mov
add
mov
xchg
outsb
int
mov
ss
loop
pop
lds
nop
andb
sar
aas
mov
dec
out
push
insl
addl
loopne
int3
test
cmp
push
jge
in
xor
mov
cmpsl
gs
imul
inc
lcall
jne
enter
or
push
sahf
and
nop
int
rcrb
addr16
imul
jns
lods
cli
mov
cmp
jge
cmp
fs
jle
jb
lds
inc
stos
xchg
cld
sbb
test
pop
cmp
xor
mov
in
gs
lods
push
inc
push
and
fs
int
gs
inc
in
jbe
sti
mov
mov
dec
aam
rol
das
insl
out
sbb
and
cmc
jmp
es
scas
mov
mov
out
repnz
aaa
inc
jb
insl
insl
add
fcmovnb
push
inc
pop
and
dec
xchg
xchg
or
aas
stos
getsec
pop
pop
push
and
fcoml
push
and
mov
lret
lcall
add
adc
cmpsl
jmp
lds
sub
adc
mov
adc
dec
aad
xorl
js
gs
push
jg
pop
and
mov
mov
jle
sub
fnstenv
fsts
mov
pop
sbb
inc
bound
addr16
movsb
push
push
std
or
sbb
or
or
fbstp
mov
stos
ficompl
dec
mov
pop
scas
mov
jb
inc
pop
jne
pop
or
sub
aas
les
loopne
mov
ds
jno
jmp
js
andb
out
cwtl
jnp
lret
push
xchg
dec
and
and
pop
jbe
aad
notb
and
jg
nop
xchg
mov
mov
jae
sbb
addb
imul
test
mov
and
in
jmp
bound
xchg
cmc
mov
jae
hlt
jl
je
sub
stos
push
xlat
popa
test
and
popa
push
cli
pop
dec
cmp
pop
and
add
dec
xchg
mov
ss
pop
cmp
scas
cmp
jl
pop
stos
jecxz
gs
adc
mov
ret
adc
push
js
jmp
ret
mov
and
cmc
adc
out
xor
adc
sbb
mov
jns
jle
outsb
push
add
mov
aaa
inc
stos
lock
lods
out
mov
xchg
pop
add
xchg
jns
adc
xor
xor
out
inc
jb,pn
sbb
mov
mov
out
out
jno
mov
cltd
xor
jp
fnstcw
pop
pop
aad
sahf
pop
adc
and
and
sbb
push
shlb
clc
and
leave
jae
or
das
shl
cmp
inc
xchg
cmp
in
enter
inc
out
jo
cmc
xchg
add
outsb
das
pop
xlat
xchg
jne
les
xor
mov
inc
cmp
push
test
in
pop
or
or
sahf
bound
push
aad
ds
cmp
dec
loope
add
mov
cmpsb
xor
adc
iret
push
and
call
shlb
rclb
mov
push
movsb
fcmovb
pop
or
clc
adc
cmpsb
out
ss
ss
iret
mov
fwait
xchg
cmp
pop
xor
imul
dec
hlt
std
dec
cmp
mov
test
in
scas
xchg
cmp
mov
test
and
gs
cmpsl
lods
adc
mov
aaa
icebp
dec
xchg
cs
repnz
inc
adc
aam
dec
mov
dec
and
rcll
jae
xor
out
cmovb
dec
fmuls
and
mov
xchg
test
pop
loopw
push
inc
fidivl
xchg
ds
cli
lret
and
sahf
add
jl
les
shlb
xchg
test
jno
jp
push
pop
arpl
sbb
js
loopne
xchg
pop
push
leave
js
fldl
mov
xchg
sarb
adc
and
imul
pushf
loopne
ja
test
or
xchg
jne
shl
pop
pop
mov
cmp
mov
inc
xchg
mov
testl
stc
add
ss
and
es
mov
in
add
test
movsl
push
pop
add
ret
loopne
jge
movhps
fmull
insl
mov
xchg
leave
es
inc
call
movsb
aam
ds
loope
in
sbb
cmpsl
les
push
mov
call
xchg
adc
inc
mov
adc
push
mov
push
faddl
out
xchg
outsb
push
test
sbb
dec
popf
lea
repz
lahf
sub
xchg
popa
pmaxub
and
jl
fidivs
inc
hlt
lods
sbb
fnstcw
roll
dec
jge
ror
xor
jl
and
pop
jl
sub
mov
mov
sbb
xchg
mov
xor
push
cmpb
sub
push
xor
inc
mov
sub
test
cli
mov
loope
fdivrs
xor
xchg
std
je
or
cmp
push
cli
cmc
mov
push
adc
lods
xchg
sub
mov
mov
mov
mov
add
sub
xchg
mov
scas
inc
sti
jl
dec
int3
push
testl
xor
mov
std
insl
icebp
lock
or
pop
mov
push
stc
or
test
jo
mov
test
push
cld
push
jnp
cld
sub
ret
inc
pop
or
pushf
mov
inc
outsl
sar
mov
repz
mov
fwait
pop
jle
loopne
xchg
push
and
ret
and
push
xor
mov
sbb
xor
rcl
test
scas
or
xchg
int3
or
int
jecxz
mov
push
scas
cmpsl
insl
dec
in
adc
ja
in
push
inc
lods
pop
jmp
push
pushf
dec
and
std
movd
mov
hlt
sub
push
ds
in
adc
ds
push
mov
outsl
sbb
sbb
popa
in
lret
rorl
gs
add
mov
daa
and
mov
adc
aam
mov
and
lcall
xor
cld
push
push
push
pop
mov
aaa
inc
bound
mov
jmp
xchg
or
movsl
mov
and
mov
jb
sub
cli
cmp
pop
int
sbb
test
out
fcoms
cmp
ret
xchg
lahf
negb
aas
fmul
and
lods
ss
xchg
addr16
out
mov
sbb
lods
out
sub
or
sub
push
or
add
mov
pop
outsb
notb
sbb
jmp
loopne
in
and
push
sub
jo
sub
push
push
push
inc
lods
mov
adc
xchg
test
out
lock
insb
or
add
scas
call
jge
out
adc
push
fisubl
test
lods
jg
lret
sti
sbb
lret
dec
aaa
or
sarb
cld
push
sub
pop
push
fwait
add
test
adc
leave
jg
cs
and
xchg
mov
scas
test
adc
push
aas
aam
jp
add
add
push
outsb
movsl
fstpl
jno
adc
pop
into
xchg
in
add
cmp
add
mov
or
es
mov
mov
lcall
test
std
sti
stos
inc
loop
aad
sub
neg
dec
sub
cs
loop
daa
pop
stos
sub
std
inc
or
test
call
and
and
orl
fcoms
inc
jmp
mov
sbb
xor
fstp
adc
mov
aas
xchg
jne
pop
movsb
in
mov
pop
push
sbb
lahf
push
xor
sub
mov
pop
mov
cwtl
or
xchg
insb
mov
adc
cmp
jge
adc
or
pop
push
lret
mov
imul
into
adc
adc
fisubl
push
inc
inc
add
orb
jne
ret
pop
ja
jmp
rolb
sbb
cmpsl
cmp
mov
hlt
subl
xchg
pop
cld
jp
add
inc
inc
stos
faddl
daa
ficomps
sbb
aaa
xchg
pushf
lcall
arpl
cmp
test
insb
insb
pop
push
jns
adcb
adc
in
out
ljmp
int3
mov
bound
cmp
dec
les
xor
pop
jl
sbb
sub
sbb
stc
mov
xchg
mov
cmp
movsb
fucomi
ret
rorb
cli
jmp
test
adc
pop
and
sub
aad
loopne
pop
cmp
fwait
push
cltd
jmp
in
inc
loopne
das
fiaddl
sub
push
movsl
hlt
inc
and
xchg
les
jne
pop
jp
imul
jae
mov
insb
mov
arpl
pop
pop
int
mov
xor
pop
scas
outsl
jg
jno
into
outsl
out
push
out
adc
adc
movsb
fistl
cmp
mov
daa
cmc
xor
xor
or
cmp
push
aad
inc
xchg
lds
xchg
out
and
out
pushl
push
xor
jbe
and
cld
into
fucomip
fsubrs
hlt
neg
test
out
inc
imul
stos
orb
mov
fdivs
lret
xor
xchg
cmp
fsubrs
movsl
jecxz
cli
inc
push
repz
pop
notl
or
cmpsb
nop
mov
mov
fsubs
sub
insb
mov
xor
aam
shrb
xchg
stos
inc
push
mov
pop
ror
insl
mov
das
inc
stos
jmp
fistpll
mov
mov
arpl
inc
cmp
pop
imulb
popw
lret
jnp
adc
mov
addl
popf
mov
and
cmp
lock
push
ret
pop
and
dec
push
jae
cmp
ret
ffreep
and
cmp
aas
repnz
add
add
aad
add
shll
into
mov
aam
cmpsb
jno
enter
mov
xchg
mov
sbb
sub
daa
pop
push
das
mov
mov
cli
xor
lahf
xlat
cmpsl
pop
pop
xor
inc
stos
mov
test
inc
lret
dec
jecxz
call
sub
aam
pop
xor
jne
imul
dec
out
mov
js
adcl
sbb
ljmp
xor
shl
int
mov
mov
jns
pop
mov
and
shll
push
inc
sub
into
imull
xchg
push
push
inc
or
xchg
push
shll
push
xchg
pop
test
nop
lock
loopne
adc
mov
ss
xlat
in
jl
sbb
cmpsl
mov
pop
loopne
add
and
adc
pop
les
decl
sbb
push
jnp
dec
subb
jmp
sub
add
push
mov
roll
das
iret
cmc
imul
inc
push
stos
or
push
aas
cmp
or
mov
sub
xor
lahf
or
xor
sbb
cmp
xchg
enter
and
in
inc
popf
mov
jb
or
adc
push
push
and
pop
gs
movsb
gs
add
in
in
adc
push
pop
lods
movsb
fstl
xorb
ljmp
xchg
inc
xor
cmp
aaa
adc
jns
clc
push
lcall
es
sub
fcmovne
inc
insb
fcompl
fstl
pop
inc
add
cs
and
into
inc
das
adc
loopne
lret
popa
test
mov
mov
aas
and
jb
outsl
cmc
shl
cmp
adc
je
xor
jg
movsb
gs
movsl
lahf
inc
xor
fiaddl
cmp
push
lods
add
xchg
xchg
jb
lcall
pop
push
push
inc
mov
push
adc
push
mov
adc
scas
scas
mov
jg
or
dec
stos
or
cltd
addl
les
sub
and
push
cmp
xor
lds
mov
or
outsl
add
or
test
jecxz
lret
shr
stos
push
mov
xchg
pop
jmp
js
lahf
push
dec
or
rorl
and
xlat
inc
stos
jne
inc
push
idivl
aad
mov
dec
sbb
xor
jmp
pop
and
insl
add
jnp
cld
sahf
push
pop
in
gs
dec
pop
xor
leave
add
or
idivb
jl
movsl
pop
in
inc
jb
or
std
imul
popa
mov
adc
mov
shlb
std
adc
adc
jge
jno
lret
ss
arpl
add
in
std
xchg
jle
cld
xchg
fwait
or
mov
pop
jb
pop
sbb
pusha
push
aad
subb
jne
aam
or
int3
adc
jp
cld
sub
ljmp
inc
sbb
out
jle
mov
xor
add
in
stc
pop
jecxz
fdivl
fisttpll
jns
cmp
and
adc
pop
mov
lock
rorl
fldcw
call
cmc
adc
pop
subb
jp
mov
mov
adc
mov
lret
fidivrs
dec
mov
xchg
fistpl
rcl
sbb
dec
pop
and
sub
mov
insb
mov
jge
gs
mov
in
insl
test
stc
push
mov
lods
fcmovb
outsl
cli
cmp
scas
adc
imull
mov
fcoms
lock
iret
xchg
negl
loope
lret
pop
push
lods
push
pop
cwtl
mov
leave
lcall
push
stos
loope
fdiv
xchg
xlat
xlat
lea
add
scas
or
inc
cld
mov
mov
jne
jl
push
jg
hlt
mov
push
sub
imul
loop
fs
mov
mov
movb
xchg
sub
push
out
inc
and
test
scas
push
iret
aam
pusha
and
adc
sahf
es
jo
dec
test
into
in
in
sbb
out
pop
lahf
push
arpl
mov
icebp
mov
cltd
inc
pop
into
sbb
adc
mov
test
je
das
adc
and
cmp
push
fildll
mov
loop
jne
xor
mov
fisttpll
lahf
sbb
fistl
daa
dec
in
pop
add
push
imul
scas
popf
xchg
lds
popf
adc
mov
sub
jp
aam
pop
xchg
push
sub
jp
jnp
jmp
repz
and
pop
xchg
jmp
sbb
out
addr16
jae
adc
inc
push
repnz
aas
in
data16
and
jge
aad
jnp
in
insl
dec
fmuls
mov
aam
jg
cwtl
lock
add
outsb
leave
movsl
lcall
inc
out
dec
add
cmp
ret
mov
sbb
mov
fmul
jp
mov
lcall
shrl
jae
jl
xor
das
data16
cld
inc
xor
cltd
dec
dec
sbb
bound
sbb
mov
cld
adc
popa
push
jno
push
pushf
sarb
inc
fucomi
or
pop
sbb
ja
idiv
cmp
and
lcall
mov
inc
xchg
lods
mov
add
sbb
pop
lea
cmpl
lods
pop
lods
lcall
sbb
and
pusha
pop
adc
les
xor
and
jg
dec
jns
push
hlt
jae
inc
shl
lahf
cmp
push
xor
cmp
in
mov
and
psllq
cli
fmull
mov
cli
inc
mov
dec
mov
icebp
cmovbe
sbb
shlb
xchg
mov
jecxz
mov
pop
movsb
jmp
outsb
inc
mov
sbb
cmp
ds
mov
shlb
scas
adc
fsubs
inc
cwtl
lret
inc
fldl
daa
loop
push
xor
cmpsl
jmp
mov
out
inc
jg
or
mov
leave
adc
and
adcb
ljmp
sbb
sub
mov
enter
arpl
into
xor
xor
cmc
jl
rolb
in
inc
pop
pusha
add
xor
icebp
bound
xlat
or
dec
pop
dec
ss
hlt
xchg
xchg
out
dec
cli
xlat
jnp
sbb
das
and
pop
dec
jo
insl
mov
pop
fs
out
hlt
into
out
lret
mov
jns
loopne
pop
sahf
inc
out
mov
push
fimuls
out
sub
stos
xor
outsb
movsl
jns
dec
lret
jecxz
mov
repz
inc
imul
call
jnp
xchg
les
jl
add
mov
mov
stc
adc
out
das
and
loope
or
out
aad
xchg
mov
fisttpll
xchg
aaa
and
jno
sbb
mov
mov
mov
clc
add
add
nop
pop
sbb
scas
lds
mov
mov
pushf
repz
in
and
dec
leave
ss
into
rolb
xorb
leave
arpl
shrb
lods
sarl
imul
jns
jecxz
push
ds
mov
dec
popa
mov
jb
mov
fcomps
mov
xor
daa
or
mov
test
push
push
pop
lcall
fistl
mov
mov
outsb
and
rcl
insb
arpl
sub
pop
adc
xchg
push
fwait
pop
push
mov
jmp
jno
cli
pusha
fdivrs
mov
or
outsl
pop
cs
inc
lret
pushf
lea
shrl
add
and
stc
mov
inc
push
pop
clc
daa
jg
xchg
pop
push
push
xchg
jmp
sbb
rorb
xlat
rclb
cli
mov
jb
jle
roll
int3
jnp
dec
pusha
bound
aam
incl
sbb
mov
mov
sub
pop
stos
stc
inc
jae
gs
xchg
xchg
jg
xchg
cltd
clc
pop
push
jp
insl
xor
repnz
es
ja
cmp
xchg
imul
test
sub
mov
jecxz
outsb
add
cmp
push
idiv
repz
lcall
in
pop
cli
lahf
mov
imul
jle
mov
pop
mov
push
call
xor
aaa
loop
mov
jp
xchg
or
cld
call
inc
pavgw
sti
xlat
es
out
pop
mov
mov
pop
pop
sbb
gs
scas
aam
pop
pop
cmp
cwtl
fcomps
inc
lods
add
xor
and
xchg
aad
dec
push
outsl
and
in
les
push
dec
fidivrs
popf
xchg
subl
mov
out
les
jge
mov
test
fimull
ret
call
sub
push
or
xor
inc
dec
mov
push
mov
arpl
mov
test
es
adc
xchg
in
es
inc
jmp
stos
add
je
xchg
push
and
lods
fwait
push
adc
mov
mov
pusha
into
and
loope
popf
cmp
int
adc
into
inc
sub
cmp
or
pop
shlb
add
inc
dec
enter
pop
fstps
pop
inc
inc
pop
repnz
loopne
enter
mov
andl
adc
out
aam
mov
xlat
lods
repz
or
jns
loop
jno
xor
cld
outsl
stos
sub
mov
jo
mov
mov
dec
jge
rclb
mov
insl
test
enter
insb
jno
jl
incb
sarb
dec
mov
mov
popa
fimuls
pop
mov
outsl
cmp
andb
das
mov
adc
iret
xor
es
iret
jae
xor
scas
popf
push
mov
imul
add
inc
popf
cmp
push
add
popf
in
sub
sbb
ljmp
add
jmp
xchg
cs
andl
or
adc
in
jge
xchg
enter
sbb
fcmovbe
std
jns
pushf
in
aas
orl
test
dec
xchg
jns
mov
mov
xchg
push
xchg
movsl
int
dec
push
and
divl
daa
popf
cwtl
into
mov
ljmp
push
movl
add
faddl
rcl
loope
jae
rolb
test
or
les
das
adc
mov
in
adc
add
cld
js
mov
mov
aad
sbbl
psubsw
adc
inc
aad
inc
mov
sbb
pop
sbbb
ds
jae
cmp
negb
xor
or
dec
loope
mov
int
ljmp
subl
xor
fs
je
jae
test
adc
jge
fwait
in
sub
cmp
repnz
push
std
inc
in
ja
mov
mov
mov
cmp
cli
lea
sbb
or
mov
jp
shrb
push
sbb
sbb
pop
cmp
das
insl
and
test
stc
sarl
jnp
jecxz
mov
add
imul
jp
imul
call
aaa
inc
inc
push
inc
js
gs
in
pop
mov
and
sbbb
into
or
jg
jno
dec
mov
sbb
sub
stos
add
shlb
push
or
stos
jo
in
cltd
outsl
icebp
dec
push
notw
xor
enter
test
mov
xchg
ds
sbb
popa
mulb
inc
push
add
and
int
jge
mov
adc
subl
pop
mov
pop
push
and
int3
or
push
sahf
push
inc
repnz
mov
sbb
in
cmp
pop
pop
pop
cmp
xchg
out
outsb
mov
testb
sbb
cmp
inc
pop
rcrb
sbb
sti
lcall
lret
mov
mov
repz
push
test
pop
inc
xlat
addr16
aas
iret
mov
lret
std
repz
shrl
adc
xchg
cs
lret
mov
xchg
push
push
mov
lods
cli
pop
jmp
jnp
loopne
shll
add
xor
mov
out
xchg
push
pop
popa
sub
mov
sbb
xor
xchg
and
cs
inc
or
movsb
cmc
or
cmp
leave
and
fnstenv
sbb
mov
pop
popa
jle
ret
gs
insb
test
pusha
sbb
inc
dec
cmpsb
or
adc
test
not
jno
popa
xor
mov
cmp
or
push
ret
mov
mov
pop
cmp
test
daa
negb
add
jbe
fwait
mov
sbbb
lea
dec
shlb
mov
dec
shr
shrl
test
sbb
mov
ljmp
xchg
and
dec
xor
mov
mov
loope,pn
fprem
jecxz
sub
aas
insb
xchg
test
xchg
mov
jge
mov
test
push
xor
push
fdiv
enter
cltd
push
mov
push
or
mov
aaa
aas
adc
mov
jno
sbbb
pushf
ss
scas
mov
xor
nop
push
out
lcall
xchg
mov
fs
jno
add
repnz
cmp
sbb
nop
repnz
dec
push
cld
mov
cmp
das
adc
pop
arpl
mov
xchg
sbb
ss
push
call
loope
cmpsl
push
lret
mov
adc
loope
cmp
jle
dec
push
fs
mov
subl
lcall
dec
xor
dec
jae
scas
fwait
or
jl
test
shlb
in
call
or
and
cmpl
faddl
xchg
sub
mov
inc
in
pop
ficoms
ret
loopne
xor
sub
enter
or
cmovle
push
pop
test
test
ret
fsubrl
xchg
dec
sub
aam
fs
mov
pop
cmpsb
je
popf
cmpsb
add
pop
ja
jmp
sub
cmp
sbb
out
pop
cs
mov
add
inc
ret
sub
call
xchg
dec
cmpsl
jno
call
movl
jp
jecxz
mov
flds
cmp
and
push
pop
cmp
movsb
idiv
dec
pop
fistl
mov
or
and
jmp
xor
pushf
push
mov
mov
lret
in
cltd
dec
adc
sahf
ja
adc
mov
dec
out
mov
mov
cmp
jno
or
jmp
xor
inc
cmpb
and
adc
pop
and
inc
cmp
xor
xor
dec
sarb
mov
mov
lret
in
push
xchg
jb
pop
lahf
fdivrl
push
jmp
push
pop
in
leave
fnstenv
cs
xchg
cmpsb
cwtl
mov
jge
bound
imul
mov
lods
add
out
and
out
out
scas
cltd
lahf
js
adc
mov
dec
adc
jp
mov
dec
dec
call
test
xchg
sbb
mov
jb
push
mov
aad
lret
test
or
mov
js
popa
fs
push
daa
lcall
jg
sbb
cmc
out
dec
movsl
ds
cmp
mov
push
out
and
push
mov
inc
sti
push
dec
sbb
dec
jp
push
add
cmpsb
xor
adc
out
data16
cmpsl
pop
shrb
jne
mov
add
imul
push
outsb
dec
sahf
or
or
lret
mov
jle
push
divb
cmp
dec
pusha
add
mov
add
or
in
pop
out
jmp
rolb
daa
test
gs
xchg
sti
push
test
enter
sbb
sub
add
mov
loopne
jno
out
imul
pop
jl
mov
mull
cmpsl
leave
int3
js
dec
loopne
call
out
ret
loope
or
unpckhps
mov
fidivrl
adc
scas
inc
out
nop
mov
out
sbb
out
mov
jbe
sahf
adc
loopne
dec
cli
sbb
dec
repz
or
test
add
out
mov
notb
popf
or
insb
push
iret
std
jb
test
inc
daa
push
mov
mov
cmpl
push
jne
pop
dec
jecxz
into
mov
pop
mov
lods
lcall
add
mov
lcall
inc
push
cmpl
jne
pop
sbb
push
in
push
or
je
mov
mov
movsl
lds
mov
test
fsubrp
add
jo
loopne
sbb
test
xorl
jl
daa
xchg
mov
outsl
popf
call
cs
mov
jmp
scas
out
mov
popf
jns
loop
leave
add
cmc
enter
pop
lcall
cmpsb
sub
imul
jmp
loop
aas
sbb
xchg
lods
push
cmp
scas
dec
je
pop
in
into
lock
cld
dec
fisttpl
out
cmp
hlt
adc
mov
out
nop
pop
movsl
jae
jne
ds
mov
arpl
inc
out
jno
aaa
sub
ds
adc
push
jmp
xlat
scas
sub
jb
lock
sbb
cmp
adc
test
fwait
xchg
insl
nop
push
cli
cmp
js
test
adc
js
mov
jge
fwait
in
pop
js
fbld
sbb
rolb
outsb
jnp
in
xchg
aas
je
inc
mov
mov
xor
in
roll
movsb
pop
clc
mov
imul
cli
jbe
loop
push
push
adc
cmpsb
mov
cmpsb
mov
bound
insb
xchg
pop
jbe
dec
lods
xlat
add
ljmp
cmp
inc
fs
xor
pop
lds
movq
xchg
sub
mov
lods
xchg
add
jae
mov
push
sbb
push
mov
enter
fucom
adc
add
xor
cmp
icebp
movsl
jp
dec
test
popf
xor
inc
in
mov
sbb
add
dec
cmp
add
iret
daa
test
mov
mov
scas
xlat
insb
push
jp
adc
ror
cmp
jecxz
sub
cmp
imul
sbb
jl
and
inc
mov
jo
out
out
mov
xor
stos
or
popf
adc
dec
fs
cmp
in
inc
inc
lods
out
test
iret
mov
ret
cmpsb
cwtd
fiaddl
inc
mov
fcoml
lds
inc
inc
shrb
pop
or
sbbl
ret
mov
xchg
push
pop
ljmp
movsb
std
adc
pop
xor
or
lcall
jg
ss
sub
inc
cmp
sbb
pushf
repz
and
pop
shrb
es
sbb
sti
jmp
mov
stos
sahf
ss
subb
ret
or
into
icebp
or
and
and
insb
gs
adc
in
pop
pop
add
into
cli
icebp
xchg
lret
lret
movsl
stos
cmp
xor
fstp
cmp
inc
mov
push
ja
mov
les
or
test
adc
push
push
data16
dec
std
mov
xor
push
mov
inc
dec
xor
jg
dec
cmp
rolb
sti
shlb
pop
xchg
dec
test
mov
xchg
sahf
jl
adc
sbb
fdivs
inc
pusha
lock
and
pop
aaa
loop
lcall
mov
fstpl
sbb
loope
addr16
fists
data16
push
fsubrl
into
dec
adc
in
ficompl
xor
xor
orl
loope
cmp
mov
cltd
loop
in
sbbl
inc
and
dec
dec
or
int
xorl
mov
cmp
add
fwait
inc
loopne
pop
mov
in
xor
rorb
or
xlat
pop
adc
jl
mov
sbb
sub
inc
inc
add
adc
add
stos
cmp
ss
out
or
pushf
in
daa
xchg
mov
sbb
std
push
xor
xor
lods
repz
lahf
jnp
pop
sbbb
lret
cmp
add
mov
xchg
sub
inc
xlat
fistpl
xchg
mov
mov
stos
shlw
dec
enter
pushf
rorl
dec
test
push
test
icebp
mov
imul
fwait
add
nop
adcb
sub
scas
add
fistl
stos
mov
outsl
arpl
adc
jbe
cs
ficompl
pushl
pop
adc
mov
icebp
pop
mov
loop
sbb
pop
into
loope
loope
pop
xchg
clc
dec
mov
dec
out
aaa
in
les
and
push
jne
sbb
ss
out
pop
mov
mov
scas
flds
popl
xchg
jl
les
cltd
in
cmp
jg
fistpl
xchg
aam
mov
pop
scas
or
xor
sets
inc
lcall
outsl
add
adc
shll
out
xor
mov
push
fwait
cld
or
and
jb
pop
popf
push
out
push
stos
sbb
xor
cmp
cli
call
sti
adc
lahf
and
outsl
movsl
into
inc
loop
fwait
dec
add
cmp
jl
jmp
movsb
lret
xor
pushf
cs
fildll
je
popf
mov
xor
pop
ret
jp
pusha
sub
jne
dec
mov
pop
enter
in
inc
stos
pop
repnz
pop
or
mov
ficoms
sub
icebp
incb
dec
into
cmp
js
das
dec
xor
jo
and
in
push
arpl
insb
cltd
inc
sar
mov
jp
fsincos
adc
push
int3
xor
inc
jecxz
or
cmp
inc
add
enter
jns
xchg
insb
addr16
lahf
push
and
pop
pop
scas
ds
push
gs
xchg
inc
inc
jbe
push
jecxz
pop
xchg
stc
add
dec
cli
jg
or
lret
sbb
pop
inc
rcll
cmc
xor
je
mov
adc
sbb
dec
lcall
mov
jo
icebp
cmp
adc
adc
sbb
add
adc
sbb
pop
hlt
out
and
aad
add
xchg
pop
cmc
movsb
fmulp
pop
inc
js
or
mov
jns
mov
sub
jns
out
aad
push
cli
jl
adc
mov
out
jns
push
in
jne
pusha
icebp
nop
cmp
aas
or
js
in
insl
cmp
mov
mov
pop
insl
push
je
pop
jmp
mov
pop
les
or
leave
stos
insl
mov
sub
arpl
mov
add
or
mov
or
aaa
sbb
sbb
popa
outsb
sub
cmpsb
dec
mov
xchg
je
cmp
imul
rorb
mov
inc
xor
sub
mov
dec
cmpsl
stos
in
mov
es
adc
xor
add
push
andb
ljmp
push
rclb
rcrb
fdivrs
pusha
jno
les
rorl
test
jno
int
pop
push
cmpsl
jnp
xchg
rcrb
adc
dec
repz
lret
fwait
movsl
sub
aam
enter
mov
ljmp
fists
in
out
pop
add
decb
out
mov
scas
clc
inc
in
mov
rcrl
iret
or
mov
jns
imulb
cli
sarb
imul
inc
add
sub
fs
mov
jecxz
and
or
pop
pop
inc
dec
bound
cli
mov
cltd
aaa
ds
sub
jmp
in
std
xor
inc
arpl
loope
jmp
jnp
cld
insb
push
sub
fwait
inc
push
lcall
jne
mov
mov
jp
add
mov
out
es
mov
ret
vunpckhps
fcomps
aas
dec
pop
or
pop
stos
dec
call
outsb
stos
movsb
cs
cmpl
pushf
push
sbb
shl
test
cs
lcall
xchg
push
xchg
adc
sbb
aaa
sub
pop
rol
outsl
leave
hlt
inc
jne
dec
cmp
je
xchg
inc
and
aas
addr16
pop
xchg
div
pop
adc
stc
icebp
dec
add
sub
add
ret
lahf
cmc
mov
adc
es
sarb
fisubl
push
jbe
pushf
adc
std
mov
cmpb
mov
sahf
enterw
aad
pop
bound
sbb
xlat
shlb
push
dec
popf
jg
cltd
lods
fimuls
test
and
pop
xchg
shll
push
adc
sub
movsb
sub
scas
fisttps
pop
xor
mov
push
mov
jno
mov
cwtl
es
sub
enter
lcall
dec
mov
mov
pop
in
movsb
push
scas
mov
add
adc
pushf
jnp
imull
sub
xchg
nop
sbb
pop
pop
les
push
sbb
mov
es
je
pop
aas
mov
loopne
pop
negl
jp
mov
pop
mov
cmp
sub
dec
lods
fsts
jb
sub
in
dec
and
mov
ds
pop
divb
inc
sub
add
adc
test
add
iret
shrb
push
int3
data16
fistps
pop
jne
and
scas
mov
in
mov
pop
sbb
lret
mov
pop
mov
fldcw
jmp
sbb
dec
ds
popl
cmp
jl
into
ja
aam
xchg
ret
inc
test
inc
mov
push
pushf
inc
push
mov
lahf
sar
and
jecxz
push
out
hlt
cltd
icebp
xchg
jns
shl
stos
mov
fs
int
cld
movsb
xchg
inc
loopne
and
sbb
icebp
dec
adc
xor
mov
test
pop
pop
imul
push
scas
and
popf
or
popa
push
leave
les
jbe
cld
mov
mov
jne
sub
stos
imul
mov
and
cmp
sub
ja
leave
shld
lds
in
sub
int3
mulb
adc
inc
mov
enter
jo
xchg
test
lret
loopne
inc
jmp
push
fcoml
jno
rcr
out
inc
into
mov
or
imul
sub
stc
lret
into
dec
xor
jno
xchg
imul
in
cmp
push
jnp
cltd
xor
sbb
enter
ficompl
and
shll
mov
comiss
or
iret
or
jbe
cs
dec
xchg
xchg
pop
aaa
adc
cmc
cmp
fiadds
mov
fwait
xchg
jp
sub
mov
dec
mov
add
insl
addr16
mov
les
ficoml
ror
cmp
leave
fdivrs
sub
mov
inc
xchg
jae
mov
xchg
mov
push
cltd
jo
xchg
fs
cmpb
test
adc
sbb
jns
dec
lahf
hlt
das
jg
inc
xor
xor
shll
fstpt
ss
and
pusha
jge
sbb
cmc
push
jmp
scas
push
pop
xchg
cmp
shl
icebp
jp
bound
stos
push
inc
fidivl
cmpsl
mov
add
or
dec
mov
mov
fisubrl
bound
push
pop
int
xor
pushf
sbb
push
mov
mov
fwait
gs
sahf
pop
and
and
clc
push
xchg
jne
pusha
clc
pop
lods
imul
or
fcmovnb
mov
mov
sbb
ret
cmp
dec
aam
jnp
lock
mov
dec
xchg
ja
inc
ss
cmp
test
xor
ret
mov
test
jne
jp
sbbl
push
dec
sub
pop
cltd
add
lods
mov
popa
daa
dec
adc
dec
outsb
ss
pop
movsb
xlat
xor
out
add
or
cmc
sub
push
dec
add
dec
jb
out
adc
test
icebp
ret
or
subl
dec
lock
sbb
daa
cltd
shrl
mov
enter
jns
push
jo
mov
cmpsl
or
cmpsl
sub
arpl
sub
inc
nop
jae
movsb
cmpsl
mov
lahf
fnstcw
insb
pop
xchg
pop
lods
mov
mov
popa
ljmp
orb
loop
jno
pop
xchg
lds
mov
xchg
stos
lret
out
sbb
mov
test
dec
sub
dec
cmpsl
pop
sub
mov
outsb
push
loope
sti
inc
add
imul
cs
mov
out
shrb
movsl
iret
push
mov
rcll
fsubs
test
mov
add
sahf
mov
jmp
cmp
mov
iret
movl
xchg
into
mov
arpl
ss
icebp
pop
orb
xchg
ljmp
fmuls
cwtl
mov
sbb
xor
in
in
push
add
cli
push
xorb
decb
mov
js
push
jb
add
stos
jns
sti
out
cwtl
mov
divb
push
mov
shlb
fisubrs
mov
ror
lcall
mov
mov
add
jge
cmpsb
dec
mov
push
and
js,pn
popa
adc
push
bound
lcall
pop
outsb
icebp
rcl
insl
mov
jno
push
xchg
mov
data16
test
pop
aam
test
push
mov
sub
and
and
dec
hlt
jnp
into
mov
jmp
sbb
and
cmpsb
test
sub
aas
aad
stc
mov
imul
ret
or
xchg
loop
stos
rolb
push
rep
add
push
adc
xor
or
lds
sar
ljmp
add
jmp
sub
pop
fwait
xlat
ret
enter
xchg
mov
sbb
in
push
movsb
push
xchg
sub
rorb
aad
stos
gs
add
or
push
jg
xchg
out
mov
or
aad
mov
ljmp
fstpl
dec
xor
sbb
lahf
sbb
mov
xor
add
add
xor
inc
daa
lcall
sbb
repnz
push
xchg
inc
xchg
xchg
shr
xchg
or
imul
imul
push
andb
leave
cld
or
leave
repz
loop
mov
push
fs
push
cmp
ljmp
enter
repnz
sbb
outsb
in
adc
mov
jp
add
jecxz
fs
xchg
push
das
in
arpl
stos
add
fistpl
loope
cmpsl
jmp
mov
das
ret
scas
scas
push
cmc
mov
fsubs
mov
push
incl
mov
rolb
faddl
mov
and
push
pop
mov
mov
adc
xchg
imul
movl
mov
rcl
fnstcw
xchg
dec
fs
pop
arpl
jae
cmpsl
sbb
shl
rcrl
flds
loopne
xchg
in
push
adc
rcrb
bound
jg
insb
jns
push
cwtl
lea
xchg
or
popf
cwtl
pop
mov
pop
adc
dec
xchg
sbb
push
inc
pop
sub
mov
fwait
add
mov
and
js
cmp
pop
cs
pop
pop
pop
pop
cmp
jne
scas
mov
adc
adc
in
mov
in
add
cmp
out
add
std
cmpsl
cmc
inc
addr16
inc
mov
pusha
mov
sub
mov
mov
sbb
mov
inc
mov
imul
or
push
das
data16
in
sahf
cmpsb
scas
or
test
mov
insl
sub
addr16
mov
push
je
dec
add
mov
jl
faddp
jo
dec
loope
cld
mov
movsl
sbbb
cmovns
bound
lods
cmp
scas
cmp
sti
int3
push
push
std
fistl
mov
push
and
pop
neg
out
ret
adcb
jle
mov
inc
call
mov
repz
inc
or
jg
push
jns
add
ret
dec
mov
inc
cmc
mov
jl
ret
ljmp
roll
test
adc
sbb
dec
pop
dec
push
jp
icebp
cmp
push
inc
test
es
xchg
adc
frstor
sbb
ja
jmp
insl
sbb
cmp
mov
dec
push
leave
xchg
inc
push
or
push
je
iret
scas
aad
mov
insl
popf
dec
idivl
cmp
inc
inc
in
icebp
inc
cmp
push
mov
sub
jmp
xor
icebp
push
and
push
mov
inc
inc
es
sub
cmovle
cs
jno
outsl
mov
push
out
in
push
int
mov
popa
push
xchg
xchg
mov
pop
adcl
mov
jno
add
fcomip
cltd
push
add
rorb
test
mov
insb
daa
jl
aad
cltd
out
ljmp
js
xor
or
nop
pop
jbe
jmp
xor
add
nop
outsb
repnz
inc
loope
xor
arpl
sub
data16
insl
xchg
pop
jmp
cmpsl
js
xchg
nop
les
flds
in
and
in
cmp
sub
jmp
mov
jecxz
lret
std
cmc
data16
add
xor
add
mov
stc
lcall
fs
popf
dec
ja
stos
out
leave
aaa
in
dec
jmp
xchg
imul
sbb
dec
jp
inc
data16
xchg
adcl
aas
push
int3
sub
inc
mov
outsl
or
dec
enter
push
shrb
sub
cmp
or
sbb
jg
mov
push
cld
jae
int
mov
or
mov
sbb
xor
push
jns
sti
sub
adc
xchg
lods
push
daa
ret
sbb
fs
dec
xorl
scas
insb
iret
das
imul
mov
outsb
cs
inc
mov
ficoms
mov
mov
lock
mov
aaa
xchg
and
add
xchg
xchg
hlt
jnp
jne
dec
xchg
les
fmuls
add
xchg
int3
sbb
adc
imul
cmp
jno
cmp
sub
lcall
pop
and
into
xor
cmpsl
lods
int
xorb
jmp
push
mov
adc
pop
insb
mov
xor
gs
push
test
je
lret
mov
lahf
xchg
sub
scas
decb
jbe
fldenv
inc
daa
push
daa
in
das
iret
stos
inc
fstl
fs
aas
cmp
enter
or
sub
mov
mov
cltd
cltd
out
mov
ja
xor
lret
in
aas
inc
into
lahf
adc
leave
sub
outsb
jo
repz
mov
loop
insb
add
push
fcmovnb
mov
stos
dec
pop
xchg
mov
fwait
xchg
bound
sbb
cmp
xor
cmp
and
and
addb
dec
jp
dec
pop
mov
mov
jo
jmp
mov
mov
sarb
jns
stos
xor
das
xor
nop
fcmovu
lods
mov
mov
push
xor
leave
ljmp
xor
std
and
mov
out
sti
adc
cmc
sti
mov
mov
mov
jge
sbbl
dec
inc
adc
push
push
les
mov
mov
das
jle
jbe
fdivr
in
cli
fnstenv
or
nop
xchg
or
jne
icebp
popf
mov
out
gs
cmpsl
xor
in
stos
dec
repnz
mov
imul
cmp
mov
dec
stos
cmp
jl
scas
dec
stc
mov
adc
into
and
xor
loop
mov
sbb
lock
icebp
push
push
sti
lds
sub
cmpsl
sbb
adc
mov
sbb
lea
data16
xchg
ret
es
jl
push
push
jmp
sbb
out
add
pop
push
cmp
cs
sti
mov
add
test
cmpsb
sbb
inc
inc
xor
stc
daa
xchg
mov
leave
inc
hlt
xor
cwtl
push
js
mov
cmc
xchg
cmp
xor
or
jne
lea
test
jmp
incl
cmp
aas
xor
inc
cltd
push
xchg
add
dec
sahf
mov
imul
jle
add
xchg
jo
add
les
std
or
out
imul
fmuls
andl
xchg
ljmp
jmp
shl
mov
aas
xor
push
lret
pop
pop
out
push
pop
out
or
xchg
mov
pushf
js
ljmp
stos
pop
xchg
mov
or
pusha
stos
jnp
addr16
fwait
jb
sub
dec
popa
clc
push
arpl
xchg
inc
and
in
cmp
test
xor
enter
mov
setnp
lret
mov
es
xor
pop
push
pop
jmp
or
xor
addr16
aad
in
mov
adc
popa
adc
fwait
gs
jge
mov
ds
loopne
push
and
push
xchg
jl
mov
cmpsl
inc
fildll
adc
adc
xor
mov
pop
fiadds
sbb
sti
mov
fildl
das
lahf
dec
out
fwait
repnz
adc
rorb
pop
cmp
mov
xchg
in
std
mov
and
mov
stos
ss
lods
dec
ret
cmp
data16
stos
pushf
in
xor
fisubs
in
or
xchg
loopne
pop
icebp
push
jb
sub
jns
sub
push
ficomps
xchg
popa
mov
mov
pop
js
mov
fs
jmp
stc
push
std
stc
add
adcb
rorl
push
xchg
fnstcw
into
jp
pushf
mov
les
sbb
jns
je
mov
out
test
mov
dec
lock
cmpl
mov
pop
mov
xchg
idivb
sbb
mov
dec
test
inc
dec
mov
push
lea
mov
sti
sbb
loopne
jmp
fiadds
xor
fstpt
push
or
test
inc
cmpsl
les
inc
lock
stc
pusha
imul
jp
mov
xchg
jg
pop
pusha
into
int
add
out
mov
sbb
or
or
into
lret
pop
sbb
out
lcall
mov
lock
cwtl
xchg
arpl
int
lretw
push
xchg
jp
dec
sbb
push
dec
jmp
push
incl
xlat
leave
popl
enter
inc
mov
jns
cltd
dec
pop
xor
add
fwait
loopne
test
fstps
xchg
adc
inc
push
jns
xchg
fcomps
and
rorb
sub
add
ret
icebp
jle
push
xchg
aad
push
ds
jne
fmul
repz
cmpb
jle
xor
push
scas
push
insb
push
fidivrs
jle
xor
inc
nop
pop
cld
add
mov
pop
dec
repz
icebp
loope
push
cld
scas
dec
inc
add
jne
inc
adc
jl
sbb
into
adc
or
add
test
std
es
and
movsb
popa
and
aad
jp
and
mov
add
movsb
loope
sub
inc
xchg
push
xor
dec
sub
roll
iret
loop
mov
rclb
mov
fs
mov
in
mov
cmpsb
cmp
push
insb
fld
mov
and
mov
and
gs
lods
fistps
add
scas
mov
loope
into
lock
mov
in
pop
adc
and
outsl
adc
test
cmp
sub
jp
shrb
xor
aad
cmp
jmp
push
mov
js
icebp
dec
sarb
aad
xlat
mov
inc
or
into
in
arpl
pop
mov
or
fcompl
nop
js
fsubrs
int3
jge
mov
xchg
mov
adc
add
push
outsb
xchg
add
xchg
nop
jne
pop
pop
repnz
mov
xor
rcrl
and
inc
in
lds
js
inc
outsb
ret
jae
std
stc
sub
fxch
sub
xor
jge
test
sub
scas
cmc
jg
loopne
jns
dec
mov
dec
arpl
rolb
push
inc
mov
in
fsubp
jbe
loope
das
xor
cmp
scas
jle
jns
mov
push
jle
addl
push
sbb
lods
loope
jbe
repz
enter
jnp
cmp
loope
xchg
aaa
je
mov
stos
inc
testl
dec
xchg
mov
movb
dec
push
outsb
push
divb
add
inc
sahf
push
add
lds
pop
outsl
xchg
mov
cmc
out
jno
fsubrl
inc
pop
jne
cld
jl
dec
fs
js
add
popf
and
out
dec
loope
mov
cmp
xor
cmp
push
arpl
pop
cs
stc
xor
jne
push
ret
gs
arpl
mov
mov
xchg
testb
cmpb
mov
xchg
pop
pop
in
jno
xchg
pop
mov
loopne
popl
imul
cwtl
add
ljmp
xchg
fcompl
pop
decl
dec
cmpsl
adc
and
lock
mov
cmp
fstl
mov
pop
movsl
push
dec
push
push
mov
testb
clc
xchg
xor
pop
loope
les
sbb
mov
insl
das
push
sahf
hlt
movsl
ret
or
or
or
push
cmp
sbb
in
fdivs
adc
jbe
idivl
jbe
sti
test
mov
inc
leave
pop
rclb
test
pop
pop
sbb
aad
add
test
inc
mov
rcrl
jno
pop
pop
inc
sub
mov
cmpsb
loopne
jns
lods
aam
rcrb
cmp
stos
push
es
mov
outsl
inc
int3
adc
and
jns
cld
cltd
add
lods
mov
cld
xor
cmp
enter
adc
dec
int
psllq
jbe
aam
mov
and
cmp
xchg
pushf
pop
fs
sub
nop
mov
cmp
imul
lcall
shl
dec
in
movsb
jo
sub
iret
lock
out
cmc
shrb
xchg
and
fistps
jbe
fsubrs
jno
addr16
aam
loope
jbe
sub
mov
lret
mov
out
aam
das
jge
mov
fnstcw
arpl
xlat
mov
inc
jge
sti
dec
sub
inc
pop
cld
and
mov
mov
mov
add
mov
mov
andl
and
aas
lahf
into
fildll
mov
dec
mov
mov
nop
mov
ficoms
iret
pusha
mov
mov
jns
and
jp
mov
or
stos
sbb
dec
sub
stc
enter
scas
insl
loopne
addl
imull
and
aas
and
inc
xlat
mov
jmp
cwtl
faddl
add
sub
sti
dec
inc
call
pop
popa
push
addr16
mov
jl
out
jb
test
jno
fidivl
cmpb
pusha
lds
mov
pop
pop
mov
cmc
xchg
out
aaa
cli
xchg
xchg
loop,pt
mov
adc
jmp
and
push
mov
push
sbb
cmpl
sbb
jmp
or
movsl
outsb
lea
push
mov
rclb
and
call
fiaddl
lods
pop
scas
cld
int3
aad
push
fucomip
jge
repnz
xorb
mov
or
pop
cmp
dec
sar
inc
inc
inc
lahf
cli
or
aaa
fsubrl
dec
sub
mov
imul
add
movl
std
mov
inc
dec
fistpl
pop
add
fs
inc
repz
mov
mov
pushf
add
xchg
iret
sahf
popf
mov
out
mov
ficoms
dec
jno
add
mov
mov
mov
mov
test
imul
stc
popf
push
lret
inc
dec
mov
fimuls
inc
sbb
add
test
dec
jmp
int3
pushf
and
outsl
pop
or
jbe
jo
imul
jb
adc
mov
popf
mov
lods
in
pop
hlt
out
and
sub
fdivs
jl
faddl
pop
xor
sbb
sbb
or
pop
insl
mov
pop
into
in
pop
popf
jmp
push
imul
je
not
insb
mov
bound
cli
sub
mov
mov
out
loop
dec
jo
rcrb
arpl
sbb
and
ljmp
pop
push
mov
mov
mov
hlt
es
inc
lret
mov
movsl
rorl
mov
or
inc
xor
cmp
mov
popf
sub
insl
dec
inc
shll
popf
inc
mov
lret
sub
mov
xchg
iret
dec
shrl
mov
rcr
pop
sub
mov
dec
sub
sbb
jno
movlps
rcrb
popf
inc
jmp
aad
mov
mov
jl
xchg
push
fwait
xchg
nop
lods
ror
mov
bound
loope
popa
rorb
enter
jae
in
cmpl
cmp
loope
les
add
inc
jnp
fwait
adc
shll
or
adc
cmp
ds
mov
xor
adc
pop
dec
adc
call
and
popa
leave
sub
inc
pop
mov
lahf
int
add
sbbb
inc
mov
inc
js
mov
inc
cmp
xlat
push
lds
add
lcall
ror
subb
push
bound
and
lea
out
les
jg
pop
daa
rcrb
je
pop
xlat
mov
in
push
movsl
nop
pop
pop
jmp
or
pusha
inc
std
pop
jns
repnz
fwait
movl
sbb
and
std
les
or
push
test
fnstcw
fadds
jmp
xor
and
cmc
std
pop
mov
push
pop
insl
outsb
pop
lods
cltd
jo
sbb
jl
ficoms
scas
repnz
mov
push
pop
sti
out
fdivrp
sbb
outsb
addr16
mov
pop
inc
adc
pop
iret
xchg
sbb
push
mov
push
sti
mov
jecxz
fidivs
mul
sub
inc
movsl
mov
dec
popf
pop
and
insl
pop
ret
push
jg
test
mov
daa
shlb
jnp
mov
sti
mov
xor
push
ficomps
je
pop
mov
xchg
xor
adc
fsub
inc
xor
mov
dec
movl
neg
pop
pop
mov
and
aaa
sbb
call
sub
fxch
mov
stos
mov
push
stos
pusha
mov
mov
pop
add
js
out
out
sahf
jp
xlat
fcom
arpl
sub
ja
jecxz
jno
aaa
negb
adc
clc
mov
icebp
pop
push
lea
mov
jl
mov
lods
jl
mov
fldl
repnz
xor
or
xor
mov
jecxz
fistl
cmpsl
xchg
sub
xchg
pop
dec
sbbl
rcll
jno
js
mov
jp
push
mov
jno
dec
xor
ret
mov
xchg
dec
or
or
push
push
mov
add
aas
push
ss
enter
adc
inc
cmp
repnz
xor
cwtl
sbb
sahf
mov
stos
push
in
sahf
sbb
rcrl
mov
scas
mull
add
cltd
sbb
cwtl
pop
dec
and
jmp
mov
sub
sarb
inc
bound
sahf
add
enter
cltd
or
fnstsw
sub
sub
xchg
insl
es
jns
cmp
cwtl
pop
or
ss
and
pop
leave
insl
or
add
out
loope
pushf
dec
call
dec
inc
adc
lods
ljmp
lea
cmp
lcall
arpl
test
cli
cmc
icebp
inc
push
mov
mov
outsb
in
mov
mov
push
sub
test
mov
loopne
inc
stos
cltd
scas
lods
lcall
pop
idivb
push
xchg
sub
xchg
sub
cmpsb
lods
jbe
movsb
push
push
adc
les
clc
fisubl
into
inc
fwait
cld
lea
jp
push
cltd
xchg
daa
cmp
test
cmc
mov
in
leave
mov
jecxz
lret
push
ljmp
adc
out
pop
push
push
xchg
jge
sub
push
push
push
push
mov
xchg
mov
xchg
repz
repz
xor
pushf
psrlw
sti
mov
sub
add
idivb
mov
adc
xchg
call
mov
je
xor
sub
or
cmpsl
xchg
cmp
lea
pop
dec
xor
mov
repz
cltd
xor
ds
mov
bound
lcall
push
fwait
in
and
das
sbb
in
gs
sub
in
jmp
or
jne
or
lds
push
bswap
mull
fidivrl
test
packsswb
popa
fcompl
pusha
cwtl
cmpsl
ret
sbb
jmp
or
addr16
sub
incl
loop
repnz
cmp
and
pop
sub
lock
cltd
and
popa
es
sbb
and
and
push
insb
mov
maxps
mov
fcoml
push
insb
mov
js
add
mov
fdivrs
cs
jmp
dec
ret
jb
ret
xor
jbe
rclb
jno
jg
ljmp
dec
lock
push
xchg
movsb
ret
into
mov
hlt
cmp
icebp
loopne
stc
lea
mov
jmp
mov
addb
jns
ss
popa
inc
sub
sbb
add
inc
sarb
daa
xor
fistpl
xchg
adc
xor
in
or
push
xlat
in
adc
push
loop
ficoms
ret
std
call
test
and
pop
aam
insb
or
sub
cmp
dec
lock
addb
or
pushf
cmp
cmp
ficompl
es
scas
in
loopne
jo
ret
xor
xchg
and
imul
clc
je
lahf
mov
xchg
adc
cmpsb
sub
shll
dec
xchg
int3
push
xchg
jge,pt
pop
test
cmp
pushf
iret
cmpb
cmp
call
ret
popa
or
popf
push
ljmp
filds
mov
xor
mov
pop
push
jle
and
adc
mov
mov
minps
xchg
pop
or
jg
sbb
xchg
dec
dec
aad
xlat
aad
pop
mov
xchg
hlt
sub
jmp
adc
push
jo
test
xor
xchg
cmpl
mulb
inc
pop
subl
pop
gs
movsl
push
pop
xor
arpl
scas
leave
cli
cmc
push
frstor
fistpl
pop
in
sti
xor
sbb
inc
pop
jecxz
inc
fcmovu
pop
sub
adc
dec
lods
addr16
outsb
add
pop
aam
mov
xor
loope
insl
jecxz
sahf
sub
ss
xchg
sub
jnp
adc
inc
cmp
jecxz
int3
mov
lcall
cs
sti
insl
mov
fldln2
movsb
hlt
xor
ret
aas
fimuls
push
mov
xor
push
dec
fwait
bound
fidivl
inc
out
cmp
pop
out
sarl
xchg
ss
push
lods
sub
pop
mov
stos
pop
mov
jmp
or
pop
adc
sbb
mov
cld
and
shll
scas
pop
jb
and
dec
out
mov
test
xchg
xchg
scas
mov
sub
cmpsb
pop
cli
repz
sbb
dec
pop
rcrb
aam
cld
into
je
mov
jl
mov
frstor
add
push
jne
das
push
shrb
and
out
pop
in
cmp
les
jnp
nop
aas
sub
repnz
out
int3
push
pusha
insb
push
mov
push
popa
jp
out
lcall
test
mov
adc
push
clc
mov
xchg
cli
insb
push
mov
loop
ret
mov
jl
cmpsb
add
mov
popa
iret
test
cmp
or
xchg
mov
dec
fsts
mov
add
mov
test
test
test
lock
dec
outsb
outsl
lret
lock
cld
and
shlb
ficoms
or
add
lret
jp
repz
fwait
je
push
in
lea
out
gs
fidivs
sub
cmpsl
rcr
jnp
repnz
into
aas
pop
mov
leave
insb
cmpsl
out
inc
and
aaa
push
enter
dec
push
mov
jno
pushf
inc
dec
pop
je
pushf
repnz
sub
fdivl
cmp
ficompl
bswap
and
fistps
mov
xchg
hlt
xor
inc
pop
gs
inc
pop
push
rorb
cwtl
dec
add
test
xchg
xchg
cmc
pop
xchg
push
sti
icebp
pop
faddl
dec
and
nop
sbb
fnstsw
adc
clc
popa
xlat
inc
hlt
or
push
inc
nop
dec
pop
dec
mov
fmuls
fdivs
int3
adc
and
sarb
dec
call
inc
std
adc
add
aad
das
lcall
fldenv
and
push
ljmp
fwait
pop
pop
popl
xchg
in
stc
inc
xor
cmp
lahf
aam
push
jo
stc
pusha
int
repnz
add
data16
push
dec
add
push
or
dec
sbb
mov
cmp
adc
in
sar
call
xor
jns
jg
int
adc
jnp
imul
adc
fimull
imul
cmpsb
jae
mov
mov
and
sar
and
ret
daa
jp
xlat
and
stc
push
out
andl
in
jmp
jb
sbb
repnz
push
insb
dec
ja
cmp
cmp
int
loope
push
ja
psubq
out
scas
push
mov
inc
insb
and
out
rcr
das
leave
inc
ret
insb
stc
sbb
in
mov
das
mov
sbb
iret
cmc
jmp
test
and
es
pop
clc
dec
sbb
pop
push
out
cmpsb
fstpt
jp
mov
mov
ljmp
jno
shlb
sahf
mov
xchg
add
pop
add
in
push
out
jbe
scas
shr
faddp
das
cmc
sarb
mov
out
cltd
jge
push
mov
mov
loopne
mov
imul
or
adc
adc
jnp,pn
cmpsl
ret
aad
push
jbe
outsb
jge
popa
fadd
xchg
fs
pop
mov
int3
out
js
inc
mov
jne
push
xchg
lea
pop
mov
or
sarl
sub
daa
rcr
cmpsl
ljmp
inc
addr16
mov
fwait
mov
je
xor
adc
xlat
std
or
fbld
push
lcall
pop
pop
iret
ret
es
dec
pop
inc
pusha
rorb
cmp
lcall
loopne
xor
xor
ret
mov
pop
test
xor
xor
cli
push
popa
dec
xchg
arpl
push
movsl
jbe
pop
mov
rorb
pop
fdivr
leave
insl
adc
mov
sub
xchg
fidivs
cwtl
std
cmp
fcoml
inc
jnp
enter
add
xor
adc
loopne
jnp
inc
es
mov
or
rorb
and
rcrb
xlat
push
ss
fs
jecxz
or
pop
push
in
es
xchg
push
call
sub
mov
jmp
mov
addr16
mov
pop
push
dec
xchg
insl
pop
xorb
mov
adc
cmpsb
xchg
and
dec
and
cmp
dec
add
mov
es
push
ljmp
aam
push
lahf
mov
test
inc
ljmp
push
pop
inc
mov
sbb
jp
popa
add
cmp
push
fwait
cld
pop
mov
add
div
lea
mov
cmpsl
popf
ljmp
daa
mov
mov
std
mov
pop
out
xchg
insb
loope
sub
fwait
push
in
sub
jo
jo
and
shlb
pop
pop
int
dec
and
sbb
jb
or
inc
add
mov
pop
mov
sbb
repnz
scas
int
xchg
or
rcrl
cmp
xor
pop
aad
arpl
movsl
mov
jge
cs
jecxz
xchg
mov
add
sbb
xorb
int3
pop
pop
jmp
stc
fidivl
push
jp
ds
enter
add
mov
or
mov
and
ficoms
fsubs
cmpsb
lods
and
sbb
into
sub
mov
mov
js
and
xorb
sub
xchg
stos
das
cltd
insb
popa
mov
es
lret
out
mov
xorl
les
xor
jno
jmp
or
inc
std
ret
call
addr16
and
icebp
ret
push
loopne
jecxz,pn
out
jmp
xor
adc
fcomip
stos
jne
mov
cs
nop
repnz
inc
mov
xor
jge
lock
and
pop
je
call
jl
dec
fcomps
pop
in
push
mov
or
iret
in
add
inc
xchg
in
xchg
sbb
push
inc
data16
aad
mov
sti
mov
push
aad
mov
inc
adc
sub
cmpsb
dec
add
add
movsl
or
xlat
adc
sbb
arpl
stc
mov
dec
cli
in
jns
or
add
xchg
jge
push
xor
std
aad
addb
enter
xlat
cmp
nop
incb
in
arpl
popf
add
mov
movsb
imul
in
dec
shlb
addl
mov
fnsave
jb
and
or
icebp
cmc
iret
je
jne
insl
std
dec
mov
mov
lods
and
popf
int3
cltd
andl
jno
xchg
ret
push
push
jnp
mov
fldenv
adc
jmp
lods
fisubrl
cwtl
popa
or
repnz
lock
push
mov
sbb
lcall
jb
cmp
ret
or
fcomp
pop
mov
cmp
inc
cmp
xor
add
daa
push
mov
lahf
cmp
aam
ja
xchg
mov
jl
dec
pop
inc
gs
lods
xor
cmp
in
push
shr
push
xchg
imul
jp
negb
pop
or
sti
jle
xchg
mov
js
scas
fs
adc
pop
and
lahf
mov
cmc
mov
jmp
add
sub
andl
outsl
clc
std
jmp
dec
or
std
aad
js
int3
push
cmpsl
les
jecxz
adc
repnz
pop
mov
int
rcrb
sub
push
xchg
fsub
stc
push
jge
rcrl
cmc
sub
xor
insb
jae
ja
xchg
fdivrl
sbb
mov
jmp
lcall
mov
xchg
inc
add
decb
insb
pop
cmp
pusha
sbb
inc
pop
adc
mov
cltd
jle
cs
popa
cli
sbb
adcl
in
and
arpl
mov
sub
rcr
xor
andb
test
and
jne
xor
lret
jle
push
mov
inc
inc
dec
aas
sub
das
fdivr
cmp
cltd
mov
int3
or
jae
int
pop
pop
or
shll
orb
out
jbe
jl
cmp
xor
dec
adc
bound
xor
push
mov
sahf
jno
pop
pusha
insb
push
loope
or
lret
pushf
mov
fsubl
outsb
inc
pop
mov
lods
test
xor
insl
jb
sbb
jmp
das
xchg
sub
lret
push
cmp
adc
inc
dec
mov
outsl
inc
repz
outsl
and
or
fcomps
cmp
cld
cmp
and
adc
jae
ja
cmp
nop
test
sub
lock
or
jmp
imul
popf
and
pop
fidivl
sbb
outsl
mov
cmpl
cwtl
xchg
stos
push
sub
adc
mov
cmp
cs
jecxz
daa
mov
mov
scas
mov
mov
lret
in
pop
je
inc
and
add
rcrl
lds
aaa
mov
xchg
pop
les
arpl
jl
shl
xlat
aad
aaa
std
jmp
jb
je
gs
shr
fnstcw
add
and
pop
push
daa
dec
cmp
adcl
icebp
xchg
repz
dec
adc
xchg
inc
mov
push
int3
fwait
xchg
in
scas
mov
repz
jnp
lahf
pop
pusha
push
icebp
dec
test
jae
xor
cmp
and
mov
inc
ret
adc
lcall
or
pop
and
xchg
jne
xor
push
ret
add
out
fs
jb
mov
insb
dec
mov
xor
push
loop
xchg
test
int3
stc
mov
enter
cmpsl
sbb
pop
sub
jl
ss
ss
cmp
mov
hlt
sub
ljmp
icebp
pop
cmp
sbb
cmp
push
mov
lret
out
and
inc
push
mov
xchg
movsb
mov
push
popf
mov
and
pop
fiadds
jno
test
test
pop
imul
dec
stos
mov
rol
cli
mov
and
cmp
into
ds
or
push
cmp
orb
jo
ret
jb
push
xchg
push
cmp
mov
jbe
test
lods
mov
pushf
adc
inc
aas
pop
mov
or
dec
hlt
jb
and
cltd
pop
mov
xchg
mov
inc
cs
sbb
dec
pcmpgtd
xchg
aad
daa
lahf
clc
sbb
inc
pop
roll
cmpl
mov
sahf
je
into
ds
pop
xor
cmp
mov
in
xchg
jbe
lods
popa
cmc
and
cld
fwait
addl
pop
adc
xchg
push
adc
sahf
add
adcl
and
fsub
pop
arpl
loopne,pn
cmpsb
pop
iret
push
aam
dec
add
xor
dec
lcall
cmp
std
mov
fisubl
mov
xor
mov
mov
sbb
cmp
xor
insl
add
adc
mov
data16
jp
push
ror
cmpsl
jmp
pop
xchg
xchg
or
je
mov
movsl
pop
out
dec
inc
mov
dec
cmc
push
xor
pop
and
adc
bound
js
pop
and
pop
in
or
in
daa
ss
jb
fisttps
or
fldt
dec
mov
fucomp
add
out
jae
adc
sub
stc
mov
filds
fs
loopne
and
pop
or
mov
add
or
sub
testl
sahf
mov
out
fldcw
or
fcoml
cmpsb
aaa
xchg
mov
mov
inc
and
push
test
sub
adc
push
cmpsb
mov
mov
icebp
pop
and
dec
sub
sbb
pop
pop
adc
mov
jne
adc
in
push
clc
jmp
xor
pop
lahf
iret
mov
out
pop
popf
add
mov
repz
jmp
mov
add
fisttps
sub
adc
std
pop
js
inc
fdiv
pop
outsl
test
pop
dec
and
stos
xor
fwait
dec
mov
cmpl
or
lahf
push
jecxz
pop
nop
mov
test
jae
inc
pop
lods
sub
movsb
pushf
jno
jbe
xchg
push
aad
cmp
push
cmp
push
repz
dec
adc
mov
nop
mov
push
sbb
dec
cmp
sub
mov
imul
dec
sbb
sub
cli
mov
clc
dec
jbe
and
and
clc
ds
cltd
jmp
lret
rcll
push
mov
test
sub
fs
mov
sti
repz
sti
sbbl
mov
jge
bnd
cmp
cmp
dec
adc
fwait
inc
ljmp
push
dec
jmp
loope
inc
lret
insl
aas
mov
shll
in
sub
mov
sbb
and
or
jecxz
jle
inc
scas
sbb
xor
mov
sub
mov
mov
push
lods
out
pop
mov
pop
mov
dec
ds
inc
mov
clc
setp
xor
or
leave
sbb
ljmp
inc
sahf
ljmp
pop
ds
rcl
or
sbb
sbb
lea
cmp
loopne
add
mov
rorl
orb
out
inc
xor
add
addr16
imul
or
ret
push
sub
std
ljmp
test
test
add
aaa
push
pop
daa
enter
adc
dec
cli
push
stos
pop
or
xchg
inc
cmpsb
mov
pop
adc
xor
popf
pop
cmp
arpl
loope
data16
jmp
xor
mov
inc
mov
sbb
es
inc
mov
bound
aaa
imul
push
push
jecxz
pop
xlat
mov
subb
sbb
inc
lahf
mov
cmp
fnstcw
out
mov
jl
jle
call
adc
pop
mov
nop
inc
add
and
iret
and
notb
cwtl
sub
inc
pop
sbb
mov
mov
dec
add
es
nop
xchg
lret
adc
mov
pop
sahf
clc
and
mov
and
ficoml
rorl
sahf
jns
loopne
mov
fwait
and
pop
push
cmpb
popa
cmpsb
jo
push
lahf
dec
sub
sub
inc
dec
iret
lds
dec
cld
dec
adc
cmpsl
in
sbb
outsb
push
add
lods
push
ja
imul
cmp
xchg
cmc
xor
int
addr16
cli
cmc
inc
flds
js
test
in
jns
lods
imul
dec
clc
fs
dec
lock
ljmp
cli
pop
xchg
cmp
ljmp
stos
pop
jmp
outsb
or
add
sbb
jbe
dec
ficompl
aad
jae
cmp
into
xchg
in
xchg
adc
ret
mov
jecxz
adc
pusha
fiaddl
dec
add
hlt
in
cmc
cmp
mov
in
arpl
mov
add
loop
xor
imul
dec
inc
out
sub
jmp
add
lock
xchg
sti
or
dec
mov
sbb
imul
std
sti
test
mov
push
and
rcl
xor
mov
outsl
repnz
test
sub
mul
out
rol
insb
int
daa
jbe
and
fwait
jae
pop
fmull
or
cwtl
outsb
mov
ds
movsl
jno
mov
inc
inc
pusha
or
addl
outsb
les
cli
mov
in
jne
sbb
jp
push
dec
pop
in
aad
hlt
pop
je
clc
test
mov
add
push
loop
shlb
aam
ljmp
add
leave
out
sub
adc
adc
mov
pop
and
mov
pop
test
mov
cmp
dec
cmp
rcr
lea
dec
sahf
or
int3
jp
push
cltd
mov
aas
inc
sub
adc
mov
lcall
mov
aam
xchg
and
in
adc
jl
mov
int
dec
xchg
pop
cld
mov
add
mov
sahf
mov
dec
add
or
cmp
push
jb
dec
ret
mov
insl
arpl
imul
inc
xor
mov
mov
push
fildl
jns
dec
shl
lods
mov
mov
and
mov
push
xorl
cmpsl
inc
fistpll
sub
dec
cmp
add
push
loope
sub
mov
fimull
outsl
in
call
cmp
outsl
addl
xor
inc
push
aas
or
out
andl
and
sbb
das
addl
sub
mov
dec
fcoms
mov
xor
pop
fsubs
movsl
sbb
xor
cs
pop
test
scas
das
fisubl
xchg
shr
in
add
dec
cmp
sub
imul
rcrl
fwait
sub
xchg
xlat
add
and
ss
movhps
mov
inc
cmp
fidivrl
fisubrs
cld
inc
clc
push
xchg
in
inc
ret
mov
dec
repnz
pop
and
cmp
push
jecxz
movsl
mov
pusha
or
push
orl
loop
dec
jns
add
ljmp
nop
cmp
scas
xchg
xlat
or
sbb
push
jb
jnp
out
push
cmc
dec
movsb
mov
test
rcr
mov
stos
xchg
jge
rol
and
cmpl
lock
cmc
in
mov
lret
mov
dec
jns
sahf
shlb
cmc
push
sahf
inc
jmp
test
mov
pop
movsb
xchg
test
and
mov
mov
adc
pop
mov
rcrl
push
xor
xorb
scas
and
mov
mov
js
fsin
cmpsl
cmp
inc
fistl
leave
push
stc
add
push
add
jl
cltd
imul
or
pop
fstps
arpl
mov
mov
loope
push
shrb
push
fcoms
pop
ljmp
mov
adc
push
jb
adc
xchg
pop
push
dec
pop
call
ret
faddl
sub
mov
pop
push
popa
dec
and
notl
pop
sub
roll
scas
inc
or
lods
popa
jmp
cwtl
or
mov
shlb
jne
and
sahf
lea
jecxz
mov
repz
lcall
jg
out
xorb
mov
roll
dec
add
xor
sbb
test
pop
mov
and
add
sub
mov
add
cmp
mov
mov
hlt
movsl
test
jns
frstor
dec
push
outsl
mov
xor
and
ja
adc
add
std
jecxz
pusha
pop
cmp
add
jns
adc
ljmp
pushf
mov
ljmp
in
add
nop
sbb
xchg
xchg
out
hlt
jg
lret
scas
xlat
and
movsl
imul
hlt
stos
pop
scas
xor
push
xchg
mov
jecxz
cmp
sbb
daa
mov
jae
mov
push
mov
mov
or
pop
jo
sub
lods
sub
dec
add
jnp
iret
lcall
sub
adc
fimull
insb
pushf
mov
roll
daa
pop
fimull
test
push
in
mov
push
push
xchg
cmpsb
outsl
mov
push
or
push
xchg
push
inc
cmp
gs
out
mov
xor
loopne
pop
adc
push
and
jb
xchg
add
icebp
icebp
ds
iret
fimuls
ret
jecxz
and
cmp
fs
std
jne
mov
shl
jmp
jb
dec
lret
mov
adc
jae
inc
and
and
pop
in
std
cld
mov
pop
adcb
lcall
adc
pop
push
mov
shll
sarl
push
and
movsl
or
std
push
xchg
repnz
flds
lcall
and
cmpsb
outsl
xor
mov
mov
mov
lds
adc
imul
jae
mov
xchg
push
adc
in
mov
mov
sbb
je
xchg
fmull
sub
idivb
xchg
xor
enter
mov
pop
sub
pushf
xor
xchg
bound
mov
push
outsl
jge
movsb
sub
unpckhps
sub
cwtl
xorl
pop
hlt
pop
cmp
pop
lods
pusha
scas
test
je
adc
xor
sbb
inc
jae
insl
inc
ss
push
jmp
mov
cmp
rorl
cmpsb
vcvtsi2ssl
push
imul
jg
mov
push
and
adc
xor
fs
filds
test
shlb
pop
lds
push
or
xchg
cmp
xchg
mov
jnp
cmp
xor
rolb
arpl
outsl
dec
jmp
mov
jmp
aas
int
mov
cmc
loopne
dec
lret
ljmp
aaa
ret
out
sbb
inc
popf
cmp
jne
int
mov
pop
dec
pop
test
scas
adc
lds
mov
mov
scas
inc
movsb
js
loopne
jl
adc
pop
mov
xchg
pop
mov
adcb
scas
xchg
ret
jae
test
lods
lcall
jne
jmp
ret
cmp
adc
insl
cwtl
jecxz
arpl
push
test
outsb
daa
mov
aas
addr16
imul
pop
push
pop
add
out
jmp
lods
or
sahf
mov
bound
lods
subb
jns
pop
aas
shlb
sbb
adc
lock
loope
call
scas
test
inc
pop
int
in
push
jo
add
sub
mov
popf
js
mov
cmpsb
xor
cmp
int3
sbb
and
shlb
arpl
add
mov
adc
mov
cmpsl
and
inc
pusha
out
xchg
ja
mov
cmpsb
add
jns
sbb
add
push
xchg
sub
aas
loope
mov
and
or
jge
repnz
or
jl
inc
jmp
push
sbb
inc
cmp
cmpb
add
rcll
xlat
inc
cltd
mov
loopne
ss
cld
add
cmp
mov
mov
das
leave
cmp
push
stos
jbe
mov
jecxz
aad
insl
sbb
cmp
pop
sbbb
in
test
adc
ret
adc
inc
hlt
pop
push
fucom
leave
adc
jnp
xor
sub
test
dec
test
xor
mov
cmp
ja
jle
xchg
cltd
xchg
and
mov
or
lods
mov
sub
imul
icebp
fildl
out
mov
add
jl
std
icebp
inc
repnz
loopne
xor
jnp
inc
xor
rep
xor
fimuls
xchg
dec
out
and
cs
cmp
lahf
femms
mov
sub
dec
dec
push
mov
or
mov
scas
sti
cmp
test
mov
xor
je
inc
push
outsl
mov
in
in
lds
pushf
dec
sbb
lret
into
mov
jp
push
or
cmp
xor
jecxz
adc
repz
xchg
ja
dec
arpl
popa
lock
cs
enter
adc
add
std
sbb
mov
fisttpll
cmpsb
ljmp
fidivs
mov
pusha
pop
push
mov
add
xchg
inc
aas
push
mov
inc
mov
mov
stos
fimuls
in
cmovge
jmp
add
rcrb
or
mov
xor
leave
pop
fmull
frstor
or
xchg
gs
arpl
adc
mov
hlt
and
mov
ret
or
push
imul
xor
imul
push
xor
jmp
adc
sbb
dec
inc
rcl
test
out
adc
aam
xchg
push
stos
inc
rcrl
and
call
jge
mov
add
out
mov
sbb
ret
repz
xlat
adc
aad
dec
insl
inc
lcall
arpl
xor
imul
adc
sbbb
mov
mov
cltd
test
xor
dec
insl
clc
pop
and
inc
das
xchg
xchg
mov
mov
jmp
add
leave
testb
dec
fwait
pop
test
rcr
pop
jns
daa
repnz
jmp
pop
inc
cmpsl
xchg
fnstsw
enter
iret
sbb
pop
notl
sbb
enter
cs
lock
inc
dec
mov
stc
mov
mov
fs
sbb
inc
push
pop
add
push
mov
mov
sbb
sub
add
std
jno
outsb
insl
lret
fistl
test
ret
in
aas
stc
jl
frstor
inc
xor
nop
add
daa
and
out
or
and
push
lcall
push
jge
imulb
jle
fdivs
mov
imull
cmp
adc
xor
mov
sub
mov
mov
idivl
pushf
in
mov
dec
rcll
pop
sbb
lods
xchg
inc
jp
dec
pop
repz
and
inc
sbb
pop
mov
cmp
fisubs
aad
xor
mov
adc
push
xchg
test
in
popa
lea
push
jl
jl
and
pop
imul
in
lret
outsl
adc
into
cmp
push
loop
repz
icebp
mov
fildl
or
mov
fildll
push
fs
loopne
inc
addr16
pusha
pop
popf
imul
jae
pop
lds
gs
fstpl
sbb
insb
pusha
cli
inc
jmp
ds
pop
cmp
push
jo
fucomip
add
xor
cmp
xor
jnp
cld
lret
inc
inc
sub
shr
push
or
adc
lods
add
movsl
aaa
addr16
pop
in
jmp
mov
mov
ror
cmc
mov
xchg
ret
add
cmp
pushf
dec
out
sbb
mov
repnz
clc
cmp
push
xorb
mov
fisttpll
mov
mov
or
mov
popl
lods
add
push
imul
push
and
dec
fnstenv
shl
xchg
add
and
subl
test
cmp
int
pusha
fstpt
movsb
jnp
test
sbb
mov
aad
mov
xchg
int
mov
inc
sub
cmpsl
sub
push
cli
cs
dec
movb
push
xor
sub
mov
mov
ret
push
das
jl
loopne
fdivs
mov
cmc
mov
add
inc
xor
in
jnp
das
aad
inc
popa
cmpsb
aam
jmp
push
push
jle
xchg
faddl
mov
andb
inc
xchg
and
int3
aam
std
in
mov
mov
adc
stc
aas
ljmp
jge
inc
popa
mov
push
pop
push
dec
dec
int
les
in
repnz
xchg
xor
jnp
add
mov
mov
inc
sub
cs
push
mov
mov
insl
pop
cmpsb
fdivrl
icebp
jno
js
pushf
push
mov
daa
aam
fmulp
cmpb
or
jg
jb
adc
jl
in
mov
gs
mov
fildl
add
test
xlat
fisttpll
scas
add
jl
icebp
sbb
jo
sbb
jbe
das
int
or
clc
das
mov
shrb
clc
in
cmc
bound
xor
sbbb
xor
xor
dec
jno
sub
fldcw
lock
fistps
mov
out
cmp
adc
aaa
sbb
icebp
push
movsl
scas
xchg
mov
mov
xchg
lret
dec
push
sar
cmpsb
sbb
or
xor
pop
jmp
pop
test
negb
pop
ffree
outsl
call
loope
dec
inc
xchg
pop
fdivr
or
sbb
mov
mov
sub
fdivl
mov
xor
jp
jge
cmp
push
aaa
sbb
int
daa
pop
loop
push
fidivs
std
mov
mov
ret
pop
scas
push
fcmovnu
or
sahf
dec
or
dec
rcrl
cwtl
arpl
out
sbb
sbb
jge
push
jmp
xchg
ret
push
inc
jmp
adc
mov
jl
jns
lar
xchg
jmp
cmpsl
cmp
dec
sbb
xchg
ljmp
sahf
jne
pop
sar
ds
sub
movsl
outsb
call
jb
mov
in
xchg
leave
repnz
inc
ds
dec
in
pop
mov
add
jo
jle
popf
adc
sbb
ljmp
mov
cmp
adc
sahf
inc
jmp
push
lahf
push
arpl
subb
push
dec
sbb
out
mov
or
stos
inc
cmp
das
nop
and
xchg
dec
xor
rolb
subb
jl
jae
sub
mov
jg
mov
sub
repnz
and
xor
loop
rclb
sub
xlat
jbe
leave
fs
cmp
scas
imul
test
xchg
sub
cmpsb
ljmp
cli
dec
jge
mov
jg
cli
int3
ss
sti
lods
fistpl
xchg
jmp
popf
xlat
scas
sbb
divb
xor
subps
adc
ljmp
jge
xchg
cmp
mov
and
rorb
inc
push
dec
clc
push
mov
cmp
sub
add
lods
data16
pop
cmp
movsb
int
jmp
sahf
xorb
sub
cmp
sub
fs
mov
js
gs
xlat
xchg
cmpsl
pushl
mov
jno
clc
cli
push
stos
insb
repz
push
aad
inc
push
dec
jge
aad
test
int
push
inc
bound
xor
bound
bound
scas
dec
ja
xor
and
jle
aam
aam
popf
sub
jle
loopne
push
xchg
and
lds
cmpsl
push
xlat
dec
jg
pop
mov
int
mov
jns
pushf
iret
adc
stos
jno
fsubl
cmp
ljmp
and
sub
push
xchg
js
add
mov
sbb
add
add
adc
adc
or
leave
das
pop
push
insb
mov
js
cmp
xor
sti
fwait
int
das
aad
xorb
adc
pop
mov
int3
or
xchg
fisttps
add
jmp
pop
sbb
fucomip
stc
in
adc
mov
subl
je
iret
jo
in
lcall
sbb
outsl
jo
into
pusha
mulb
push
lea
loopne
fsubrl
xchg
add
mov
mov
lret
rcr
sub
xchg
fiaddl
fmuls
test
aam
add
sub
dec
cmc
loopne
add
test
sbb
test
add
pop
sbb
stc
rclb
inc
sbb
xlat
jecxz
imul
mov
mov
xor
mov
mov
and
lods
pop
fwait
movsb
jb
sub
pop
dec
leave
mov
push
insl
sti
dec
mov
and
xchg
lods
rep
fisubrl
cmp
mov
inc
in
popf
fs
subb
cli
movsb
icebp
pop
jnp
jecxz
sahf
mov
add
add
js
sbb
cmp
es
adc
adc
add
mov
push
cs
test
xchg
out
cmpsl
push
inc
out
loopne
cmpsl
ror
pop
hlt
xchg
js
xchg
iret
xchg
ds
call
bswap
test
nop
cmp
popl
fildl
inc
sub
add
lea
daa
dec
ja
cmp
je
xor
outsl
inc
jge
jg
andl
dec
call
rcrb
fdivr
daa
mov
add
pop
into
cmpsl
stc
pop
rcl
push
lahf
call
adc
mov
stos
fidivs
inc
ljmp
or
or
cld
or
into
jp
insb
mul
stos
cltd
push
aad
pop
leave
lret
mov
movsb
shlb
rcll
insb
in
scas
movsb
pop
dec
jge
lret
aas
or
cmpsl
scas
inc
cmp
lahf
sub
jnp
int3
mov
mov
outsl
dec
mov
add
hlt
loope
sub
pop
mov
aaa
cmp
scas
mov
fimull
jecxz
cmp
test
sahf
out
mov
gs
xor
sbb
int
loope
mov
std
pop
adc
aas
les
outsb
data16
fwait
xor
ret
bnd
mov
lods
cmpl
pop
dec
mov
mov
add
cli
mov
je
add
fsubp
pop
out
xchg
or
lods
icebp
call
mov
in
popa
outsl
or
clc
jmp
in
mov
imul
test
mov
xchg
jbe
aad
nop
fdivs
push
sbb
jo
push
outsl
lahf
into
xor
jl
jno
jp
mov
mov
aad
pop
addr16
clc
push
orb
cmp
punpcklbw
inc
inc
cmp
outsb
mov
adc
dec
xor
add
xchg
xchg
mov
or
pop
or
mov
addr16
push
inc
or
mov
jp
push
pop
js
push
daa
adc
pop
or
lret
data16
mov
hlt
sub
or
cli
test
arpl
cmp
dec
je
out
pop
imul
cmp
xchg
movl
mov
enter
sub
call
std
xchg
addr16
lods
xchg
sbb
and
and
mov
push
ja
sub
lcall
testb
sbb
lahf
mov
pop
data16
and
cmp
or
popa
inc
aas
outsb
push
aaa
sub
pop
dec
notb
push
test
mov
cld
fwait
or
mov
les
test
adc
aaa
iret
cmp
fsubl
shlb
dec
inc
out
mov
xchg
aaa
dec
push
jecxz
es
mov
mov
out
push
into
lret
pop
pop
mov
mov
jae
lcall
and
add
sti
jns
shrw
jle
rclb
mov
jne
xchg
scas
or
stos
lahf
or
add
in
ror
pop
rcrl
adc
push
mov
shll
jb
fsubrs
mov
add
icebp
test
mov
mov
cmc
push
xchg
push
sub
jbe
sub
insb
sbb
pop
push
xchg
add
xor
ds
movl
inc
xchg
push
popa
jb
xlat
pmulhw
loop
mov
jle
mov
add
xor
sbb
cmp
lock
aam
xchg
imul
aad
pushf
mov
fwait
call
aaa
cmp
xchg
mov
sub
insb
ja
test
stos
mov
lea
sub
mull
sub
int
push
adc
fdivrp
adc
jbe
dec
and
add
outsb
mov
fdivr
push
lcall
dec
hlt
inc
xchg
jo
jp
paddsb
inc
cmpsb
ljmp
and
xchg
out
sub
mov
imul
shll
pop
vmwrite
outsb
mov
jb
repz
push
xchg
or
dec
lds
faddl
pop
sbb
mov
pop
scas
mov
sahf
lret
xor
cmp
imul
cmp
mov
fisubrs
sahf
pop
pusha
cmp
cmp
mov
and
pop
cmpsb
jg
add
dec
mov
and
out
xchg
rcr
xchg
lret
inc
or
jg
pop
loopne
adc
push
fldln2
stos
pop
in
pop
jp
bound
shll
mov
sub
adc
lea
ds
int3
daa
mov
inc
scas
ret
lcall
stc
jg
push
pop
lret
jno
mov
adc
adc
pop
nop
add
lods
sar
push
mov
sbb
xchg
jmp
popf
sub
push
adc
ficoms
addr16
iret
push
mov
xchg
adc
loopne
stc
pop
sbb
and
sub
push
or
adc
int
insb
imul
and
dec
std
shr
aam
sub
adc
daa
mov
cmp
popf
cmp
cmpsl
push
mov
lock
mov
je
xor
getsec
aad
outsb
negb
dec
dec
and
cmpl
mov
mov
arpl
dec
mov
sub
dec
sahf
mov
leave
sbb
sbbb
hlt
aam
sti
mov
push
popa
pop
pop
leave
push
xor
fsubr
mov
mov
push
jg
lods
xchg
fisubrl
xchg
push
sub
es
adc
mov
mov
test
shl
pop
ljmp
and
and
pop
cltd
ret
imul
mov
mov
aas
xchg
add
test
xchg
or
fwait
out
call
mov
ja
mov
outsl
dec
daa
xchg
sub
inc
rcrb
aad
add
mov
mov
dec
call
stos
movsl
mov
in
out
fnstenv
popa
pop
fwait
pop
add
ja
das
pop
pop
mov
fmul
pop
jg
mov
addb
pcmpeqw
or
loopne
push
xor
push
out
mov
pushf
push
fwait
rolb
sbb
stc
xlat
push
adc
shlb
mov
stos
mov
aad
add
pop
lds
lock
shll
xchg
or
loope
aad
xchg
mov
cwtl
pop
adc
add
sub
insl
js
pusha
jl
sbb
data16
mov
or
int3
insl
xchg
mov
mov
add
call
or
iret
or
cmpsb
fs
cs
sti
xchg
inc
test
jo
in
mov
mov
scas
cmp
sti
adc
rol
jae
insl
xchg
mov
add
xor
dec
test
sbb
icebp
lods
add
add
add
enter
lahf
into
mov
test
jmp
out
clc
mov
fcomp
dec
fs
xchg
int3
stc
jne
push
call
mov
or
fistl
mov
or
shl
cli
sub
andb
sbb
jge
clc
call
jl
add
lcall
dec
in
sbb
dec
sbb
mov
mov
fidivl
subb
fbld
inc
sbb
incl
sbb
arpl
movl
or
adc
xor
xchg
cs
inc
imul
sub
mov
movsl
dec
dec
sti
adc
mov
add
push
mov
xchg
out
jno
sub
add
jae
adc
subb
in
xor
mov
in
add
ret
add
shl
dec
cltd
push
insb
aam
ds
or
andl
lret
pop
mov
and
subl
pop
aaa
ljmp
outsb
in
out
mov
cmp
and
cmp
add
sahf
xchg
icebp
mov
lahf
adc
lcall
xchg
mov
or
jbe
cmp
das
sbb
nop
ljmp
je
je
and
push
pop
sbb
inc
dec
dec
es
mov
pop
fwait
push
call
dec
xchg
adc
data16
add
lahf
and
add
pop
test
cmp
cmc
es
stos
cmp
jo
sbb
lret
test
ss
in
mov
bound
cli
push
xchg
push
pusha
ret
add
xor
mov
repnz
mov
sti
js
cmp
inc
scas
loop
stc
mov
fs
das
sbb
scas
pop
testl
arpl
mov
hlt
xchg
pop
inc
inc
mov
fs
xlat
xor
fmull
iret
fistl
out
loop
jae
mov
sub
add
push
xlat
pop
scas
sub
jge
or
gs
test
cmp
or
pop
pop
adcb
xchg
xchg
add
loop
mov
xor
les
and
jnp
xor
outsl
test
imul
jae
clc
pop
xchg
jno
rclb
shlb
jne
adc
dec
cmp
pop
in
loop
bound
dec
jecxz
adc
ss
cmp
adc
fs
add
sub
mov
jae
push
push
pop
testb
mov
push
repnz
pop
xchg
loope
jne
fistpll
rcr
rol
jb
popf
cmpsb
in
ja
ret
mov
les
sub
fmulp
mov
fnstenv
addl
jmp
shll
jecxz,pt
sahf
lock
ja
mov
test
xchg
movsb
shlb
cld
ror
test
mov
inc
lods
fistps
or
xchg
mov
sub
ja
push
shr
lahf
ret
shrb
js
or
push
cld
ss
push
mov
icebp
out
pop
xchg
into
inc
xchg
loopne
mull
fidivs
cld
adc
nop
les
cmp
xchg
arpl
fistps
add
rcl
mov
out
rcll
mov
and
jns
pop
mov
inc
push
xor
daa
dec
mov
test
out
add
in
push
sub
push
or
mov
or
pop
pop
aaa
jbe
jmp
cli
pop
sub
jb
dec
es
xchg
movsb
fwait
sub
in
pop
rol
cmc
sti
cld
arpl
es
push
in
xor
scas
mov
shl
es
pop
sbb
or
jmp
pop
loopne
movsb
mov
or
out
lret
adc
mull
fisttpll
xlat
or
aas
fs
mov
inc
dec
mov
jne
inc
push
ja
sub
or
cmp
adc
xor
mov
je
jle
mov
sahf
mov
pop
mov
pop
xor
mov
cmp
inc
outsl
lods
test
daa
cmpsl
in
jo
inc
fisttpll
fidivrl
cmp
push
stc
stc
test
xor
js
pop
hlt
xor
mov
dec
pop
nop
loopne
js
jle
ja
icebp
fildl
mov
leave
xchg
jle
cmpb
fsubr
aas
adc
or
mov
mov
mov
cmp
jmp
push
shrl
lea
test
test
dec
in
aas
add
jl
test
jns
fwait
je
lods
inc
shlb
jne
cmc
int3
add
pop
add
std
xchg
outsb
js
insb
pop
aam
cwtl
sbb
mov
xor
shrl
push
mov
into
icebp
out
mov
fildll
wrmsr
mov
lcall
aaa
stc
dec
out
js
mov
out
out
cmp
ja
mov
mov
call
jp
mov
push
cmp
or
adc
or
adc
mov
loope
sbb
test
inc
repnz
sbb
xor
ljmp
push
sbb
fldcw
push
sub
push
or
je
ja
popf
sbb
pop
das
push
xchg
mov
pushf
cmp
punpckhbw
mov
push
js
aas
lock
jns
mov
scas
dec
outsl
repz
ljmp
cli
inc
aad
repnz
out
stc
lret
xchg
scas
pop
inc
xchg
xchg
or
mov
sub
inc
and
loopne
adc
pop
mov
lds
cmp
inc
out
jmp
sbb
xlat
mov
sub
pop
repnz
xchg
lods
sbb
pop
dec
push
dec
enter
hlt
cmp
imul
adc
mov
fcmovnb
mov
jge
std
fstpt
repnz
js
jnp
inc
jmp
pop
xor
xchg
nop
addr16
rorl
imul
or
pusha
adc
and
in
and
mov
and
movsb
mov
fisubrs
inc
stos
inc
mov
std
aaa
sahf
imul
imul
popf
movsl
outsl
sbb
mov
mov
mov
lds
std
mov
mov
clc
fcoms
push
inc
push
push
adc
add
jae
pop
ljmp
xlat
lods
inc
movsb
or
and
xor
scas
push
jne
popf
jb
mov
pop
jl
or
mov
repz
or
mov
push
push
les
in
jl
xchg
mov
xor
inc
lret
cmpsl
and
icebp
and
lahf
mov
mov
fstpl
mov
push
cmp
test
out
or
mov
mov
lods
mov
jae
jecxz
sbb
neg
in
adc
jl
dec
lcall
daa
mov
shrl
pushf
sub
iret
lea
inc
pop
fcoms
mov
scas
inc
imul
mov
rcll
xchg
stos
inc
scas
pop
fidivs
lret
and
lock
inc
gs
sahf
jle
jle
sar
gs
dec
xlat
fidivs
lods
leave
adc
iret
movl
mov
pop
mov
sub
js
jno
fcomps
xor
add
adc
xchg
idivb
dec
lret
pop
loopne
cmpl
inc
cmp
sbb
out
es
pop
call
add
js
divl
arpl
out
pop
lret
cmpsb
mov
imul
rorl
inc
and
dec
jb
push
jns
push
std
xor
mov
xchg
mov
add
outsl
insb
scas
adc
cltd
pop
sarl
xchg
push
mov
fistpl
fsts
pop
add
cmovs
popf
adc
mov
fs
pop
cmp
not
stos
jg
mov
fwait
outsb
mov
stos
mov
xchg
jge
outsl
mov
pop
sub
pop
cmc
shll
add
xchg
repnz
or
clc
movsl
push
xor
dec
jg
loope
jmp
mov
repz
lock
jmp
or
pop
addr16
jno
adc
xor
jge
enter
inc
lds
sub
cs
and
jne
loop
test
xor
std
push
pusha
or
unpckhps
pop
negb
sbb
pop
push
lret
es
sbb
setnp
xchg
push
fstps
mov
pop
inc
inc
fisubrs
test
sub
lret
loop
sarl
repz
jbe
xchg
push
lods
shlb
pusha
insl
cmp
mov
sbb
enter
pop
jl
notb
push
iret
repz
neg
loopne
inc
xchg
or
insl
xlat
xchg
cli
test
fadds
repz
hlt
fildll
sub
xchg
push
dec
push
out
rcll
sbb
sbb
and
je
jecxz
jae
imul
cmpsl
jmp
clc
xor
sbb
adc
xchg
lret
call
lods
pop
jno
popf
ret
pop
adc
pop
pop
push
mov
popa
mov
jne
sahf
clc
or
aaa
xor
sbb
repz
ljmp
inc
testb
sub
cs
or
andb
movsl
fcmovne
cmpsb
jne
test
jg
mov
add
pop
daa
sub
sub
mov
push
ja
xchg
mov
dec
or
mov
push
inc
scas
sbb
out
lds
sub
ljmp
add
jmp
nop
mov
dec
jbe
ret
out
jmp
shl
sti
icebp
dec
out
add
push
stos
add
idiv
xor
mov
mov
push
out
addr16
add
das
mov
dec
inc
outsl
jmp
fsubrs
cmc
gs
rclb
fucom
idivl
cwtl
xchg
lds
jo
jns
xchg
dec
adc
orl
add
push
lcall
mov
sbb
mov
mov
or
jae
cmc
and
cmp
mov
inc
loop
mov
dec
mov
mov
mov
xchg
aaa
dec
loop
xchg
xchg
sub
jecxz
cmc
sbb
sub
movsl
jns
lcall
movsb
lcall
add
cmp
nop
jle
adcb
inc
xchg
test
push
jb
scas
sbb
int
cmpl
push
int3
mov
stc
lahf
mov
loopne
mov
push
insl
xchg
push
sbb
mov
jb
or
inc
in
cwtl
pop
in
divl
dec
inc
sbb
ss
dec
inc
jno
fsubrs
hlt
repnz
rorb
sbb
jae
out
subb
mov
in
loope
sarb
arpl
scas
sbbb
cs
add
mov
pop
inc
jmp
push
and
imul
sbb
iret
popa
cmp
aas
mov
jecxz
xor
cs
cmc
inc
jl
mov
xorb
pop
lods
ljmp
stos
fbld
and
mov
jb
fistpl
jge
leave
sub
mov
pop
fcmovbe
into
in
mov
dec
cmpsb
mov
mov
add
jae
lods
cmp
pop
icebp
lcall
add
mov
sub
aas
ret
jl
pusha
call
jg
jle
bound
icebp
cmp
enter
loop
inc
repz
mov
cltd
ljmp
pop
push
push
dec
adc
jmp
sbb
fldt
in
hlt
popf
inc
inc
dec
jbe
int
ss
ds
jmp
movsl
push
jge
jecxz
out
aas
adc
mov
xor
cmpsb
xlat
js
sub
xchg
outsl
ljmp
fidivrs
and
cmc
jp
pop
cld
pop
inc
ljmp
cmpsb
sbb
cmc
test
stos
push
dec
sbb
mov
fiaddl
fisttpll
enter
ja
jb
push
mov
inc
or
popf
lea
dec
pop
pop
pop
cmp
bound
adc
outsb
idivb
shll
mov
cmc
call
in
jns
sub
fimuls
adcb
inc
pop
dec
in
pop
and
cs
fmull
dec
in
fwait
xchg
stos
rol
enter
adc
or
pop
cmp
push
and
pusha
outsl
sbbl
and
inc
dec
incl
sbb
xchg
insl
pop
xchg
add
sub
dec
dec
lea
aas
mov
and
test
arpl
inc
cmp
idivl
inc
jl
hlt
ljmp
pop
mov
dec
daa
and
cld
lds
adc
cmp
lea
shrb
add
jae
rcrl
cmp
addr16
cmpl
push
movsl
adc
jne
pop
gs
inc
pop
mov
in
mov
in
xor
jmp
dec
imul
and
adc
fistl
dec
popa
out
jb
mov
mov
pusha
add
popf
mov
rcrb
in
or
xchg
adc
ficomps
fbld
fiaddl
lods
mov
in
loop
outsl
xor
jnp
aad
pop
sub
xor
pop
loop
inc
push
enter
mov
mov
and
pop
cmc
pop
sub
cmp
inc
jo
int
jns
ret
in
xchg
push
movsl
adc
out
ffreep
xchg
mov
stos
incl
loope
xor
pop
pop
dec
cmp
and
cmp
in
shrl
jge
xchg
or
pop
fists
xchg
das
sub
xchg
out
push
pop
arpl
mov
mov
cmp
mov
inc
mov
cwtl
cld
insl
lock
aad
xchg
pop
test
jl
pop
mov
repz
or
pop
sbb
call
xchg
cmc
clc
dec
in
push
lret
idiv
aad
sub
hlt
jecxz
imul
mov
pop
mov
mov
push
hlt
sti
jmp
xchg
inc
mov
fs
adcb
outsl
in
sbb
xor
sub
sbb
lcall
hlt
out
jb
add
xor
cmp
jne
enter
notl
loope
mov
push
sbb
pop
dec
in
and
mov
xlat
sub
jl
pop
mov
js
jle
sar
inc
ja
xchg
add
data16
and
stc
pusha
jns
ja
ds
jb
sub
dec
stos
jnp,pt
pop
sub
add
dec
loopne
sub
mov
arpl
xlat
and
cwtl
or
push
mov
mov
xor
dec
and
scas
test
or
lret
iret
mov
mov
xchg
jl
or
faddl
xchg
pusha
sbb
jno
movsb
or
fwait
add
loopne
out
cmp
stos
mov
test
and
stos
out
outsb
fcoms
addl
ja
sbb
xor
or
xchg
adc
adc
fcmovnbe
rol
adc
push
testl
lcall
jb
pop
xorl
pop
lcall
cmc
mov
inc
sub
fwait
rcrl
cmp
cltd
stos
fwait
loop
inc
ss
sbb
bound
test
test
and
and
data16
sbb
imul
fwait
lahf
mov
cwtl
fcom
aas
sub
mov
mov
or
push
lret
jl
jecxz
mov
mov
jmp
stc
hlt
es
adc
dec
adc
xchg
std
jo
pop
xor
mov
loopne
fisubl
aas
ret
mov
dec
out
jl
cmp
outsl
lds
lcall
cld
xor
xchg
or
jp
ret
out
loope
pop
mov
mov
pop
nop
into
jge
aaa
jge
mov
fcoml
mov
lea
inc
arpl
pop
sbb
inc
stos
mov
adc
and
mov
bound
aad
out
fnstcw
mov
dec
hlt
scas
aas
push
mov
outsb
inc
dec
call
jno
and
popf
cmc
daa
xchg
jge
cmc
imul
or
jnp
add
imul
jmp
jecxz
xor
cmp
aad
cld
xor
adc
fsubs
mov
inc
out
jmp
cmp
xlat
lret
aas
adc
or
out
cmp
outsl
mov
add
pop
int3
cmp
fidivrl
or
insb
jmp
fcmovnb
dec
sbb
mov
orb
bound
lods
iret
rolb
insb
stc
mov
in
mov
insl
scas
subb
mov
hlt
pop
push
jecxz
or
pop
cmp
or
jae
add
mov
jae
jbe
jp
imul
iret
fstps
push
sbb
imul
lds
cmpl
push
adc
addr16
fisttpll
adc
out
into
inc
mov
mov
sbb
lcall
ss
ret
cmpsb
dec
mov
test
add
bnd
enter
jb
sar
jl
xor
in
rcrl
pop
ja
int
jl
push
adc
in
jl
adc
mov
mov
or
test
jns
cli
cmp
scas
add
shrl
add
cmpb
mov
mov
add
lods
ja
jne
push
mov
sub
sub
push
mov
nop
je
cmc
std
mov
rcll
xchg
hlt
mov
enter
in
pushf
adc
out
std
ret
lret
hlt
jo
imul
jno
jge
push
and
xor
jmp
lods
and
outsl
cli
dec
aas
or
or
xor
xor
adc
movsb
and
mov
movsl
pop
and
pop
or
pop
jns
das
roll
sbb
fildl
ficoml
cmc
decl
push
pop
xchg
mov
je
inc
std
push
popa
stos
pop
sub
bound
hlt
into
mov
jge
jg
in
or
aaa
pop
addb
cmp
mov
cmp
inc
imul
mov
inc
pop
ljmp
mov
xchg
jg
and
ljmp
push
cs
or
call
inc
fs
xor
pop
and
ljmp
add
jg
jg
mov
xor
mov
int
push
outsl
sub
cltd
mov
pop
fwait
aas
repnz
lods
sub
mov
stc
addr16
leave
ficompl
inc
sub
mov
outsl
repz
cmpb
and
add
push
mov
push
dec
cmpsl
adc
mov
xchg
cmp
cld
pusha
push
xchg
lds
dec
test
mov
movsl
lret
icebp
push
push
push
xor
jnp
stos
cld
in
clc
mov
shll
and
sbb
jg
cs
xor
jmp
or
iret
mov
filds
stos
push
jnp
adc
aaa
int
loop
cmp
pop
dec
sbb
shr
xor
sbb
cmp
jg
loope
mov
push
out
rcrb
repz
xor
pop
inc
js
repnz
mov
inc
dec
jg
mov
adc
xchg
outsl
dec
add
mull
cmpsl
jno
shrb
fcomps
loope
test
rol
dec
bswap
test
in
aad
push
test
or
dec
mov
mov
dec
rorl
jb
mov
es
lock
pop
enter
add
or
lcall
sti
pop
xlat
out
inc
mov
lods
jp
adc
sbb
test
incl
xor
call
sbb
inc
imul
inc
jl
sar
test
repz
xchg
fwait
sbb
fs
xor
push
subb
insl
mov
xor
je
xorb
fists
xchg
inc
ja
test
hlt
pop
xor
shrl
mov
add
pop
adc
jne
outsl
aam
pop
stos
ds
fwait
or
aaa
leave
pop
jno
and
movsb
test
adc
fs
sti
pop
subb
push
dec
jns
loope
push
les
outsb
cli
sbb
lahf
pop
jmp
mov
pop
mov
sbb
push
sub
pop
pushf
sti
test
sub
cmp
mov
push
arpl
pop
idiv
lock
inc
cmp
lock
int
movsb
mov
nop
xchg
or
lret
imul
mov
ret
insb
scas
xorl
mov
popa
out
push
lea
and
icebp
imul
mov
gs
ror
fbstp
sahf
movsl
data16
cmp
jmp
mov
je
pop
ss
mov
dec
data16
pushf
mov
sbb
inc
lcall
das
and
leave
inc
xchg
sbb
adc
gs
and
push
rcll
mov
lcall
lea
cmp
mov
inc
adc
mov
dec
aaa
pop
push
mov
jecxz
cld
sbb
pop
mov
cmp
stos
sbb
int3
fwait
loope
mov
jnp
inc
sub
fnstcw
hlt
mov
leave
push
imul
jg
push
js
adc
push
xchg
push
and
push
out
cmpsb
int3
insl
pop
movsb
sbb
pop
push
add
inc
jp
in
cld
jae
aaa
adc
sbb
mov
loop
imull
push
andb
mov
mov
jmp
dec
pop
add
adc
cmp
int
ljmp
push
inc
mov
fadd
mov
int
xor
mov
mov
xlat
mov
out
jg
ja
fdivs
rorb
lods
mov
mov
mov
clc
cmpsb
push
push
or
xchg
pushf
mov
jnp
add
sti
jno
sti
test
xchg
mov
lds
aas
mov
add
iret
add
push
xchg
les
xchg
pop
scas
imul
mov
fidivrl
mov
stos
out
and
push
xchg
mov
jae
test
stos
nop
pop
cmpsb
mov
sub
ud2
dec
nop
outsb
xchg
xor
leave
dec
pop
ret
dec
dec
mov
push
pop
jne
jns
xchg
movsb
mov
cmc
pop
int3
mov
popa
xor
push
jnp
adc
mov
out
sbb
adc
arpl
movsl
pop
mov
jp
mov
in
xor
lret
insb
rcrb
xchg
addr16
bound
pop
cmp
cs
dec
faddl
or
inc
fiaddl
dec
notl
icebp
lods
repz
imul
mov
scas
mov
mov
test
inc
xlat
stc
mov
jne
lds
cmpsl
jge
sub
cmp
jae
dec
jp
jmp
in
js
int
mov
in
inc
dec
in
xor
sarl
stc
or
jno
xchg
loope
mov
push
jne
lahf
popa
aam
test
or
sbb
push
mov
andl
add
aaa
mov
mov
add
in
mov
ret
mov
or
lcall
mov
enter
mov
stc
arpl
in
imul
push
pushf
lret
xchg
lods
stos
cmp
nop
gs
sbb
insb
test
movb
cmp
int3
cmp
hlt
xchg
hlt
sahf
add
add
cmovg
test
jg
mov
lcall
scas
sbb
nop
ret
fsub
int3
divl
icebp
out
xchg
popa
cwtl
sbb
test
int
fwait
gs
test
imul
cmp
jbe
mov
fs
aad
pusha
or
call
cmpsb
mov
dec
push
stc
mov
call
inc
pop
cmp
and
scas
ficoml
shrl
push
stc
push
pushf
pushl
push
cmc
leave
aaa
lods
lods
push
fisubrs
mov
mov
push
fcmove
jbe
out
push
add
and
ret
stc
dec
out
adc
pop
push
pop
test
aaa
sub
movb
out
daa
sub
shlb
push
mov
clc
shrb
adc
testl
mov
rcrb
xorb
xchg
cmpsb
jb
mov
rcrl
stos
sbb
push
mov
das
xchg
loopne
add
push
push
mov
outsb
lea
dec
mov
ret
ret
mov
pop
testb
add
mov
pop
int
ret
xchg
popa
into
fcmovbe
clc
shlb
ss
int
or
cmp
iret
call
xchg
fwait
fidivs
pop
mov
adc
dec
pop
and
lods
dec
into
repz
mov
popf
fwait
mov
data16
nop
push
push
addr16
sbb
jo
outsl
push
mov
in
sub
stos
cwtl
hlt
xchg
call
xor
jns
ja
cld
lock
jg
push
jmp
in
insb
cmp
loope
ds
sbb
xchg
mov
insb
xor
mov
int
mov
ficoml
call
cmp
sbb
rcrl
pop
pop
xor
add
mov
mov
mov
hlt
aam
stos
out
pop
hlt
jnp
in
jl
mov
std
shlb
dec
push
adc
or
pop
mov
testl
int3
incl
mov
hlt
jle
hlt
scas
jle
jbe
push
jnp
jae
mov
imull
mov
xchg
push
imul
lret
mov
mov
cmove
pusha
cmc
out
cmp
add
rclb
icebp
cmpsb
dec
mov
dec
orl
andl
mov
adc
out
repnz
xor
rorl
pop
fisttpl
jbe
sbb
adc
sbb
pop
imull
imul
mov
int
mov
rcll
jns
mov
sti
mov
cmp
cmp
sbb
push
leave
sbb
mov
jg
pop
outsl
je
test
ja
xchg
mov
test
adc
pop
ror
out
cmp
std
cmpsl
sbb
sub
sarl
mov
cmp
hlt
lcall
mov
mov
std
outsl
hlt
inc
in
aad
mov
jl
add
mov
pop
andb
fdivr
dec
addl
loop
cmp
pop
out
sub
pusha
xchg
sbb
push
cmpl
mov
adc
cld
sarb
dec
xchg
cmp
fldcw
call
out
out
xchg
fistpll
cmp
mov
xor
xchg
nop
lret
or
pushf
pushl
sbb
mov
add
pop
xchg
push
popa
pop
pop
repnz
test
andl
or
into
dec
mov
sbb
xor
sar
mov
mov
jnp
jp
sbb
loope
mov
roll
mov
sarb
imul
std
mov
dec
xchg
jne
bnd
dec
jne
and
inc
imul
add
jno
fcoml
jbe
aas
sahf
das
cltd
push
test
int3
mov
scas
mov
dec
cmp
sub
dec
adc
pop
xor
popa
aam
mov
roll
fcmovbe
test
add
push
fnstenv
hlt
pop
fcmovnb
cmc
repnz
stc
icebp
out
sbb
int3
and
jg
mov
jg
pop
aas
ret
sub
cwtl
adc
outsl
fcomip
hlt
add
adc
fsubrl
xchg
and
test
fidivrs
vmread
imul
add
aad
icebp
lock
push
or
inc
iret
into
mov
fnstenv
mov
rolb
cmp
xchg
mov
add
inc
xchg
xchg
daa
pop
adc
repnz
or
subl
adc
xor
dec
adc
lret
cli
popa
sti
iret
rclb
sbb
mov
lahf
dec
mov
xchg
aad
out
pusha
push
lret
cwtl
ds
and
sub
ja
fs
adc
push
shr
xchg
pop
mov
pop
adc
jl
bound
lods
shrb
sbb
cmp
xchg
data16
pop
loope
std
mov
cmp
inc
insb
sub
pop
mov
dec
mov
loop
mov
mov
inc
sbbb
sub
fucomip
mov
xor
sub
xor
inc
sub
push
mov
jmp
notb
pop
dec
xor
dec
mov
call
xchg
xchg
les
mov
sti
fdivrl
mov
in
pop
adc
in
pop
xchg
fldcw
and
dec
lock
gs
inc
daa
mov
lret
jecxz
jbe
jecxz
outsb
dec
lods
int
mov
je
push
xor
cltd
and
mov
push
xor
enter
imul
or
roll
sbb
pop
nop
mov
mov
push
cmp
and
iret
mov
or
mov
cmp
jmp
mov
pop
je
int
sub
cs
sbb
xchg
clc
xlat
insl
add
test
mov
sub
arpl
mov
loopne
sub
hlt
sbb
pop
adc
out
cmpsl
outsb
and
jno
sub
int3
and
inc
jp
stos
outsb
outsl
enter
xchg
ljmp
xchg
sti
cwtl
mov
jmp
cmp
gs
adc
insl
push
adc
shll
inc
es
sbb
outsl
je
adc
lds
mov
sahf
mov
xor
test
shrb
pop
and
push
lds
insb
inc
xor
sub
adc
push
push
xlat
bound
out
daa
pop
testb
movsl
pop
sti
fs
jmp
mov
testb
or
movsl
pop
fs
and
cltd
xchg
popf
popf
out
cmpsl
mov
dec
mov
daa
lret
mov
adc
xor
push
pop
jb
mov
imul
shl
repnz
cmp
and
sbb
movsb
jl
repz
ja
cmp
aaa
inc
add
sbb
xor
jb
insl
cwtl
stc
mov
or
out
sahf
inc
into
or
outsl
stos
mov
scas
jo
jecxz
cmp
sbb
add
fnstenv
pop
sub
jbe
int3
mov
call
nop
and
shl
es
frstor
subb
cmp
fidivrl
popa
ja
loopne
push
cmp
lahf
dec
test
ret
sub
fcom
fists
lahf
inc
mov
add
fs
inc
mov
inc
dec
adc
bound
jne
movsl
jbe
cmp
jns
outsl
dec
iret
mov
cmc
xchg
pop
xor
scas
repz
mov
addr16
or
pop
addr16
mov
xor
adc
mov
cmp
dec
fisubs
outsl
adc
jg
aas
xorl
mov
add
mov
cmp
nop
dec
push
aaa
push
sub
pop
repz
scas
pop
xchg
and
pop
adc
lock
iret
sbbb
out
fstpl
bnd
xchg
mov
stos
and
cmp
divb
adc
xor
rorl
repz
loope
mov
insl
and
mov
mov
in
push
loopne
lahf
and
add
cli
xchg
fwait
dec
in
cltd
sbb
outsl
test
xchg
test
sbb
test
mov
aaa
icebp
inc
pop
xlat
push
cmp
cmp
or
lds
cmp
insb
xor
inc
sub
call
sub
lcall
push
jno
or
in
aad
sub
js
dec
notl
in
int
xchg
lds
aad
add
aaa
roll
jmp
xchg
cmp
movsb
sub
scas
dec
hlt
cmp
jg
xor
je
sarl
mov
xor
in
fadds
adc
push
mov
xor
sbb
repz
in
mov
enter
test
test
pop
mov
lret
xchg
jg
roll
sbb
pop
mov
xchg
and
sbb
xchg
ss
loopne
sbb
add
aas
jg
outsb
aaa
push
mov
arpl
and
xor
cmpsb
sbb
and
sbb
daa
mov
shll
mov
add
pop
mov
scas
sub
dec
mov
inc
das
xor
mov
frstor
pop
jno
aam
addb
or
jmp
jne
inc
jmp
pop
push
cli
lods
inc
pusha
jnp
mov
je
fsubrs
mov
test
push
mov
fisubs
cmp
add
xor
cmp
xchg
xchg
push
lock
add
rolb
hlt
dec
mov
adc
jg
fucomi
mov
mov
push
pop
xchg
orl
aad
jne
loopne
lea
repz
sub
stos
pop
sub
ss
sub
adc
in
dec
xlat
je
movl
dec
cld
add
imul
add
mov
xor
sahf
xchg
pop
adc
mov
fnstcw
test
pop
mov
mov
mov
mov
dec
mov
pushf
out
movsb
insb
test
pop
mull
aas
loop
iret
pop
xchg
imulb
add
arpl
ljmp
mov
and
fwait
arpl
push
fisubl
leave
lds
sub
pop
xor
jo
hlt
jle
cmc
lods
sub
xor
sbb
push
inc
jl
in
ret
mov
out
jne
ja
xchg
out
sbb
push
sbb
lock
mov
jb
das
inc
adc
and
int
add
cmp
scas
mov
sub
fs
addr16
xor
or
aam
cmp
xchg
or
inc
test
shrb
pop
mov
push
js
aad
out
cmp
xchg
mov
divb
shlb
jns
shl
ja
xlat
add
test
jo
cmp
scas
nop
mov
push
inc
dec
mov
mov
cmpsl
cmp
in
jecxz
js
pop
pop
cmp
loope
cltd
add
push
gs
sub
adc
popl
call
imul
pop
iret
call
pop
mov
add
pop
sbb
mov
adc
mov
arpl
jp
cmp
add
push
or
rorl
arpl
sub
fistpll
cmp
xor
les
lods
aas
mov
jns
adc
pop
loope
or
lds
insb
mov
add
fdivs
mov
in
lods
iret
scas
inc
push
add
lock
sub
push
adc
outsb
sbb
lods
cmp
xor
push
push
xor
imul
pop
lret
and
fistps
popa
jo
pusha
cmp
add
dec
mov
push
or
jle
or
jl
cld
push
scas
daa
lods
ret
jae
sarb
testb
std
inc
nop
int3
call
popf
ds
leave
mov
pop
wbinvd
rcl
stos
push
movsl
jmp
xlat
jmp
or
pushf
dec
mov
xor
or
mov
mov
lods
sub
mov
mov
push
pushf
notl
inc
sbbl
xor
fcmovnb
leave
dec
nop
orb
loope
adc
leave
int
mov
stos
mov
addr16
fbstp
stos
jne
in
mov
sbb
imul
push
xlat
std
mov
out
je
mov
pop
push
sahf
add
add
clc
sbb
mov
out
in
mov
lods
push
out
inc
loopne
adc
jg
repz
lods
sbb
pop
xchg
fidivl
push
jno
push
xchg
je
movsb
mov
andl
dec
gs
xor
and
adc
movsl
imul
mov
loop
push
aas
mov
bound
or
cmpl
xchg
cltd
pop
dec
lods
shlb
loope
push
loop
addr16
sub
cmpl
jne
loope
out
xchg
lods
data16
ret
aaa
jg
jns
or
ss
push
xchg
cld
adc
mov
jle
cs
loop
in
jmp
out
jge
mov
pop
insb
mov
and
pop
sub
stos
in
push
adc
cmp
mov
cli
out
push
mov
in
xor
jbe
inc
loopne
cld
fdivrl
aaa
mov
cwtl
stc
dec
mov
mov
js
jmp
mov
or
popa
iret
jns
andb
xorb
repz
mov
mov
push
push
cmp
mov
outsl
or
mov
nop
pop
pop
lahf
inc
xchg
and
daa
mov
fsts
ror
pusha
loope
mov
dec
call
jge
xor
out
fwait
bound
mov
fildll
mov
push
adc
out
test
inc
jns
mov
sbb
test
cltd
push
addr16
les
js
es
sbb
ret
xor
sub
inc
jnp
push
dec
or
leave
lcall
jo
mov
shrl
icebp
dec
insb
push
aam
into
xchg
movsl
flds
jo
inc
adc
outsb
pop
fcmovnb
sub
push
inc
ljmp
cld
mov
xor
adc
mov
lods
sbb
test
add
aaa
xchg
filds
js
inc
aas
mov
cs
arpl
mov
daa
iret
inc
in
inc
push
popf
adc
daa
test
mov
leave
roll
jbe
fists
data16
iret
inc
ss
or
arpl
movsb
sbb
mov
arpl
inc
loop
push
mov
jb
xchg
pop
dec
add
inc
pop
fiaddl
mov
mov
inc
cmp
nop
jnp
into
mov
and
pop
insb
mov
push
jb
xor
call
sub
pxor
lcall
mov
aad
mov
je
push
adc
mov
inc
xchg
rolb
xor
xchg
test
adc
in
in
xchg
adc
sbbb
cs
mov
dec
mov
dec
inc
addr16
jb
xchg
adc
test
daa
jbe
loopne
xor
xchg
lahf
fs
fadd
push
xor
jl
or
test
lods
sbb
lods
les
jae
enter
pop
cmp
xor
and
push
push
out
lock
movsb
sbb
adc
mov
xor
jecxz
daa
in
xor
iret
mov
add
in
shr
adc
mov
jg
fcom
mov
fcomp
imul
stc
lock
lcall
cmc
ret
movsb
xchg
sarb
loop
sar
sbb
jbe
pop
cmp
inc
scas
jnp
jno
cmp
push
out
out
dec
mov
aaa
mov
fidivs
jb
bound
jge
out
loop
and
jns
imul
into
mov
mov
adc
mov
mov
jo
sbb
push
pop
sbb
mov
lods
sub
stos
test
lock
fadd
fdivrl
xor
push
xor
bound
repz
repz
dec
mov
int
mov
add
jo
outsl
adc
in
dec
and
mov
popf
fmul
rorl
xchg
test
fdiv
stos
es
add
stos
lcall
pop
mov
add
test
xchg
es
lods
pop
xchg
xchg
mov
in
cs
push
xchg
cli
sub
pop
mov
ret
decb
dec
test
fadd
mov
sub
fiaddl
push
push
mov
rcrl
jno
data16
popa
cmp
xor
shl
or
cmp
xlat
test
or
sahf
mov
lods
lret
and
shrb
dec
pop
mov
sub
xchg
push
cld
fbld
jno
push
movsl
ljmp
dec
add
stc
outsl
ret
adc
sbb
inc
mov
cmp
and
dec
pop
test
jge
inc
adc
shlb
and
add
cli
mov
jecxz
loop
cmpsl
pop
sub
dec
filds
lods
nop
aad
mov
dec
pop
add
and
mov
xchg
addr16
in
lret
fisttps
cmp
mov
stc
sub
test
ret
pop
xchg
repz
out
aaa
fwait
add
pop
fnstenv
push
mov
mov
ja
dec
int
lea
adc
in
or
popf
fsubs
dec
jae
jns
cmpsb
xor
test
cmp
mov
roll
and
inc
mov
or
cmp
mov
jl
scas
xor
in
adc
sub
add
ljmp
dec
lret
lods
or
push
cmp
push
lock
xor
and
cmp
out
icebp
xor
sbb
fstl
pushf
popl
jne
pop
mov
repz
lock
push
cmp
lcall
icebp
pop
mov
adc
jmp
testb
adc
aaa
movl
test
adc
rorb
xchg
push
or
cmp
inc
data16
das
pop
cs
out
push
mov
repnz
div
jge
cld
les
xor
sub
adc
ds
jl
pop
dec
pop
test
push
push
lcall
and
icebp
adc
insb
mov
je
loop
cmp
pushf
es
fistpl
stc
insl
rol
fs
pusha
mov
jno
into
out
mov
and
pop
cld
ret
jl
fadds
out
dec
adc
insl
pop
lock
loop
cmp
push
add
notl
adc
negl
das
push
pop
jg
repz
aaa
pop
adc
pop
sbb
sub
stos
fpatan
js
jo
vmulsd
pop
adc
out
into
jo
aad
mov
adc
dec
push
sti
inc
cs
adc
ds
xchg
lahf
jne
aaa
ficompl
data16
xlat
js
mov
or
dec
push
bnd
pop
pop
dec
pop
addl
mov
cmp
sbb
shlb
pop
loop
rcr
into
pop
mov
push
lret
xor
shll
in
movsl
out
andl
add
in
pop
or
movsl
arpl
scas
jp
idivb
lret
pushf
mov
aam
adc
mov
dec
mov
adc
stos
jmp
test
dec
cmc
dec
add
mov
nop
je
vmread
aam
clc
orb
out
inc
shrl
inc
out
cmpsb
or
pop
xor
das
mov
pusha
add
adc
lahf
cmpl
ja
repnz
pop
std
ljmp
xchg
inc
bound
pop
cmc
ljmp
ret
jns
xchg
leave
sub
or
outsl
mov
dec
lret
jno
dec
xchg
out
fstpl
ds
and
and
jle
sbb
pusha
inc
pop
xchg
lret
test
push
adc
xor
xchg
sbb
repnz
pop
lahf
dec
push
mov
ljmp
in
fistpll
sub
mov
push
imul
stc
mov
daa
xlat
xor
push
int
ret
push
nop
mov
lds
xchg
mov
rolb
jg
ret
cmpsl
sub
insl
fisubrs
cmp
or
icebp
stc
pop
das
pop
out
sbb
cmp
jg
or
subb
xchg
je
mov
rcrb
nop
imul
jae
insl
mov
int3
mov
bound
into
xor
sbb
test
stos
adc
dec
mov
inc
push
dec
lahf
in
incb
inc
cwtl
out
mov
testb
inc
jp
jae
das
int
data16
ror
in
pop
dec
xchg
mov
or
out
add
cld
xor
or
leave
loope
adcl
repnz
xor
lods
pop
jecxz
scas
xchg
dec
fdivrp
push
loope
test
dec
sbb
cmp
jg
jb
stos
add
or
push
sbb
aam
stos
stos
jge
cmpsb
mov
push
or
repnz
sbb
popf
in
pop
pop
or
cli
push
push
mov
mov
ds
subl
pop
add
daa
scas
or
inc
data16
dec
loopne
decb
cmpsb
xlat
xchg
scas
jle
push
push
loope
enter
mov
loop
sti
inc
cmpsb
inc
cli
bound
add
pop
cmp
int3
push
or
movl
into
mov
dec
data16
gs
cmp
sbb
addr16
dec
int
xchg
loope
cmp
loop
test
test
pop
cli
dec
imul
jno
and
ds
fchs
sub
mov
int3
push
mov
cmp
enter
push
cmp
out
mov
iret
jb
pop
inc
repnz
mov
scas
scas
sub
mov
std
mov
sbb
pop
je
cmp
sub
adc
aas
sub
paddusw
cld
popf
enter
or
push
fidivrs
ret
enter
loopne
rdmsr
into
pop
mov
nop
pop
mov
sub
call
pushf
sbb
add
xchg
push
fsubs
sub
ds
inc
mov
pop
cmp
js
jns
rcrb
movl
int
cmc
stc
cli
cwtl
lcall
jb
cli
adc
lret
fldl
sbb
mov
sbbl
call
mov
in
test
mov
pop
lret
dec
xchg
pop
jnp
fidivrl
sbb
mov
dec
aaa
ja
cmpsl
jnp
lret
stos
mov
lock
or
and
mov
xor
js
insb
ja
dec
cwtl
push
pusha
imul
push
jno
iret
xchg
adc
pop
ret
out
or
push
fsubrl
addb
inc
sub
mov
in
int
push
sub
test
push
pop
mov
mov
jns
movsb
out
add
lret
jbe
mov
mov
mov
les
pop
leave
pushf
mov
or
mov
mov
int3
or
in
lds
pop
mov
lock
add
imul
das
and
pusha
les
push
add
mov
inc
packuswb
popl
std
mov
sub
sbb
mov
fistps
out
xchg
pusha
cmp
stc
push
adc
cmp
dec
idivb
inc
popa
pop
add
insl
das
test
mov
jge
stc
es
into
aaa
loopne
imul
push
xchg
xchg
xor
xor
dec
cmp
mov
int
xchg
cmp
cmp
mov
stos
das
fistl
outsb
pop
lods
loope
inc
dec
rcll
or
and
pop
orl
inc
cmp
ds
repnz
xchg
test
xchg
cld
cs
sbb
xchg
and
inc
inc
sti
cmpsl
push
or
test
adc
sub
outsl
aad
sahf
jmp
adc
pop
loope
out
xchg
pushl
dec
mov
jl
inc
push
jns
pop
xchg
in
enter
or
xchg
mov
inc
addb
push
mov
mov
add
cs
iret
imul
adc
cmpsb
inc
fdiv
pop
and
mov
cwtl
insl
dec
ja
pusha
mov
xchg
push
and
jp
imul
lcall
lret
mov
stos
clc
cli
cmp
out
mov
pop
sahf
jnp
ficompl
add
jge
dec
cmc
push
mov
jge
pop
int3
std
jne
sub
pop
test
sbb
xchg
test
mov
adc
and
jne
jl
xor
imul
xlat
sbb
das
xor
jo
or
adcb
xchg
mov
cmp
in
push
mov
aam
out
sbb
jnp
fisttps
test
aaa
subl
hlt
push
fstp
pop
xchg
dec
jecxz
or
or
jno
scas
add
inc
jecxz
fadds
outsb
jl
jno
mov
add
mov
pushf
or
test
jo
int3
pop
inc
inc
pop
sub
icebp
shlb
fs
aad
imul
iret
movsb
gs
popf
xchg
mov
loop
and
inc
and
popf
pusha
fnstenv
sub
hlt
inc
fdivrl
sbb
xchg
out
nop
fstps
stc
nop
cmp
in
pop
push
sub
push
lret
cld
sub
es
imul
repnz
lret
popa
cmp
shlb
dec
das
pushf
leave
push
in
xlat
inc
subb
xchg
sub
fistpll
add
fistps
movsl
dec
data16
mov
or
push
sub
movsb
xor
and
push
loopne
arpl
inc
fadds
push
cmp
inc
add
mov
xor
cltd
cs
mov
mov
out
push
aas
cmp
lds
ret
aad
mov
pop
xchg
xor
or
lahf
cmp
mov
or
add
or
sbbl
fwait
cmc
mov
int3
mov
add
sub
cmpl
pop
loopne
mov
hlt
or
sbb
insl
lahf
jb
hlt
bound
rorl
scas
out
pop
push
es
enter
stc
jnp
in
mov
in
jae
mov
outsb
lea
xor
call
jbe
inc
jnp
pop
test
mov
dec
jne
xor
xor
jbe
addr16
movl
push
loop
mull
sbb
insl
leave
xor
cmp
and
inc
iret
movsl
adcl
fstpl
ds
data16
aad
dec
sbb
and
adc
adc
lock
pop
push
lock
out
lea
mov
mov
inc
idivl
inc
test
es
add
push
sub
lods
fnstsw
insb
out
inc
je
mov
lcall
movsl
sub
push
inc
sub
fwait
jle
out
test
rolb
ljmp
mov
das
adc
subl
mov
je
mov
and
dec
xchg
fistps
xchg
add
xchg
lods
adc
icebp
jns
xchg
dec
push
mov
add
outsl
out
sbb
mov
add
ret
in
movsb
scas
daa
rcl
add
std
xchg
cmp
sahf
fistps
or
mov
push
xor
repz
push
push
pop
pop
sbb
test
ret
jmp
xchg
and
xorl
jb
shll
call
mov
ds
and
addr16
jb
fcomp
cmp
jbe
jb
mov
cmp
into
cmp
leave
xor
xchg
dec
add
adc
stos
sbb
in
xlat
dec
mov
sub
jne
mov
es
mov
sti
sbb
and
sbb
mov
sarb
or
jae
iret
jg
mov
cmp
and
add
and
xor
cmpsb
or
fiaddl
loopne
ret
lret
subb
mov
out
pop
insl
jns
jnp
jp
jne
jp
adc
aaa
adc
ret
mov
mov
or
sub
xchg
pop
pop
cld
rolb
dec
leave
ret
push
jle
push
repnz
loopne
add
in
push
lods
lock
mov
add
jnp
cmpsb
das
lahf
lret
call
push
out
adc
movsb
mov
jo
inc
cmp
lea
negl
add
aaa
dec
mov
add
fwait
testl
cs
lahf
ljmp
mov
mov
jnp
xor
pop
fwait
loope
outsl
and
pop
jno
mov
faddl
scas
insb
push
push
dec
fwait
dec
and
les
push
jmp
lret
ljmp
inc
sub
xchg
push
in
jg
negb
filds
or
add
jmp
pop
std
outsb
push
ret
or
ljmp
pop
in
test
cmp
cs
out
xlat
ja
popf
jmp
shll
sub
pop
or
test
mov
cmp
jmp
leave
mov
mov
rolb
mov
xchg
inc
sbb
mov
and
fadds
enter
pop
mov
fdivrl
repz
and
fincstp
add
pop
push
xchg
inc
mov
icebp
sbb
ljmp
scas
sbb
cmp
dec
fbld
dec
pop
enter
paddb
cwtl
cmp
rolb
lods
pop
repz
mov
std
fs
lock
sbb
jecxz
pop
push
rcrb
arpl
ror
push
jno
pop
dec
mov
movsb
push
std
mov
xor
sbb
rcl
das
inc
inc
scas
shlb
add
jo
sbb
lds
sbb
in
test
pop
aaa
and
les
aas
sub
aam
push
jl
bound
icebp
xchg
or
cmp
inc
rcpps
sbb
mov
and
push
loopne
jae
mov
bound
mov
mov
fdivl
imul
pop
scas
push
inc
test
jge
clc
fcomps
push
inc
fiaddl
nop
jecxz
push
ss
push
xlat
int
mov
flds
sub
lods
cmp
sbb
aad
xor
sbb
add
int3
mov
lea
push
out
xchg
pop
or
sbb
mov
xor
add
sub
out
mov
cmpsb
cmp
ret
imul
push
or
sar
sahf
pop
jle
lcall
movsb
inc
jmp
mov
dec
mov
push
add
cmpsl
repz
xchg
push
or
out
shrl
nop
inc
xor
inc
sbb
inc
mov
or
pop
push
in
imul
jge
mov
dec
lret
iret
push
rcr
pop
fnstenv
jg
inc
sub
cld
dec
mov
mov
fisubl
andl
pop
movsl
fs
out
aam
mov
pop
fidivrs
mov
jg
and
scas
scas
adc
sub
loopne
jmp
mov
test
or
scas
orb
arpl
loope
repnz
stos
mov
aaa
test
mov
push
les
cmpsb
push
loope
mov
test
int
movsb
xchg
int3
xchg
lods
adc
inc
cmp
cmp
outsb
pop
rorl
stos
mov
adc
mov
stc
imul
in
jmp
outsl
push
lret
leave
shrl
outsl
movsl
pop
dec
js
xor
mov
push
orl
xchg
pop
mov
test
aas
cs
fucom
stc
loop
add
sbb
add
roll
or
out
add
imul
cmp
popf
mov
pop
mov
rcrb
xchg
mov
pop
hlt
repnz
hlt
movsb
xchg
jns
fnstenv
int3
clc
or
movsb
pop
gs
mov
inc
pop
adc
dec
pop
dec
outsb
in
push
mov
lds
pop
iret
fbld
ret
pop
add
sub
rolb
xchg
inc
jo
xchg
in
cltd
testl
mov
mov
cmp
push
imul
mov
testb
sahf
jecxz
outsb
lea
and
or
adc
testb
pusha
sub
adc
mov
imul
imul
sbb
fwait
lds
sub
push
sarl
insl
adc
pop
jo
fsubrs
sub
insb
outsb
pop
inc
lret
cmpsb
cltd
cwtl
into
popa
mov
xchg
sub
rol
ss
sub
test
in
insl
pop
jl
mull
daa
popa
jne
adc
xchg
adcl
mov
loope
mov
pop
cmpsb
addl
in
xchg
call
mov
mov
mov
out
iret
and
int3
popf
and
ds
subb
flds
cld
jge
outsl
inc
jmp
jl
jg
fildl
jg
xchg
test
or
lcall
jp
sti
jb
in
stc
pop
sbb
cs
jns
bound
mov
roll
divl
pop
icebp
scas
jmp
push
ret
in
gs
imul
sub
shll
jg
pop
mov
ret
sbb
insb
mov
scas
clc
jb
adcl
loope
roll
xchg
push
and
fdivrs
sbb
inc
inc
dec
decb
pusha
xchg
scas
enter
fisubl
sub
mov
jle
mov
stc
pop
mov
popf
fcmovnb
cmp
ds
in
gs
sbb
and
shll
ret
insl
filds
fcmovnu
scas
imul
jb
dec
cmp
jge
xchg
cli
mov
ret
push
daa
sbb
rclb
push
mov
sbb
int3
out
fwait
and
scas
adc
lock
xor
mov
or
dec
mov
push
shrl
sub
daa
cmpsb
push
sbb
push
mov
dec
aas
or
ret
sub
sbb
das
ror
jns,pt
aam
fidivrs
push
insb
aam
cmp
xor
jmp
movsl
ljmp
sbb
mov
rclb
aas
popf
push
sub
lock
movsl
in
fstp
cwtl
cmp
cmpsl
insb
aad
das
sbb
and
xor
sbb
pop
rclb
test
mov
jp
daa
arpl
jno
stos
pop
mov
lds
jmp
sub
adc
mov
dec
mov
cmp
mov
pop
lock
push
ret
push
or
jns
in
pop
andb
sub
pop
sbb
sub
adc
mov
adc
inc
lods
loope
mulb
adc
pop
mov
pop
fmuls
sbb
sbb
mov
popa
jb
or
addr16
xchg
aaa
xor
push
xor
jge
xchg
add
cli
std
ret
cld
repz
push
mov
mov
dec
lret
insb
imul
mov
or
scas
xchg
add
push
shll
mov
out
aad
scas
loopne
sbb
inc
pushf
mov
lcall
pusha
subl
ljmp
and
xchg
inc
paddd
xor
jne
and
icebp
sub
mov
push
pop
fwait
jge
mov
fldenv
stc
loopne
je
xor
sub
stos
inc
fldenv
daa
add
pop
xor
insb
int
lods
js
loope
inc
and
dec
xor
es
movb
pop
test
in
enter
and
sub
cli
dec
jecxz
xlat
xchg
xor
mov
bound
xchg
ja
cmp
xor
push
push
loopne
icebp
pop
sbb
shll
lahf
int
sbb
xor
add
sub
flds
adc
sub
mov
pop
pop
addr16
outsb
mov
jo
outsl
arpl
jmp
pop
mov
and
mov
fxch
mov
xchg
mov
mov
jno
push
inc
shlb
imul
pop
push
rcl
mov
dec
jl
leave
pop
jmp
sahf
dec
or
test
lcall
fdivrp
dec
loope
jmp
das
imul
loope
sbb
call
sbb
or
lock
push
out
xchg
iret
sbb
imul
mov
rcll
mov
test
jbe
fs
mov
sub
mov
xchg
loopne
iret
mov
pop
rorb
je
jo
sbb
adc
scas
pop
pop
out
or
cmp
sbb
lahf
lods
fcompl
jno
jge
pop
pop
dec
lods
cwtl
shlw
jp
mov
jl
dec
test
lds
ss
mov
aaa
rcrl
pop
xchg
jle
jnp
dec
mov
enter
je
push
enter
sbb
ljmp
push
add
fbstp
outsl
sar
in
das
mov
lahf
out
dec
inc
dec
push
push
in
or
mov
popa
xchg
call
mov
cmp
mov
jmp
rorl
in
sub
in
dec
sahf
test
jne
sbb
iret
outsb
xchg
dec
iret
inc
test
cmp
pop
adc
lahf
inc
lret
sub
cld
lods
repnz
push
xor
mov
addr16
nop
or
pusha
imul
jo
push
out
pop
psraw
insl
xor
adc
xlat
jns
outsl
pusha
movsb
out
test
rclb
mov
sub
jne
les
lret
mov
and
adc
push
inc
cmpsl
push
xor
inc
rcrb
fnstenv
test
not
mov
adc
lea
mov
aaa
mov
cwtl
rcl
adc
cmpsl
imul
pop
jae
and
pusha
pusha
adc
cmpl
xchg
jbe
rcl
push
xchg
mov
into
and
xchg
xchg
mov
mov
sub
cmp
iret
ss
mov
jmp
aad
fisttps
addb
jecxz
push
xchg
sub
or
ret
mov
push
lods
test
test
nop
dec
ret
sbb
jo
sub
adc
lds
lret
mov
xlat
lea
sbb
xchg
outsl
mov
test
xlat
es
addr16
std
xor
rorb
imul
dec
outsb
pop
ljmp
sub
in
imul
cmpsb
jae
mov
cmpsb
cld
push
mov
dec
or
jbe
inc
std
insl
pushf
aas
pushf
adcb
outsl
ret
push
jno
pop
push
xchg
into
cmp
add
jg
test
xchg
mov
mov
call
push
mov
fdivrs
out
mov
rcrl
lock
sub
stos
pop
or
push
inc
lret
adc
xchg
mov
lock
cmp
scas
lods
daa
and
push
pop
call
daa
cwtl
mov
repnz
xchg
jg
int
outsl
mov
cwtl
gs
mov
arpl
push
pop
int3
bound
lods
and
lea
inc
or
mov
ficompl
inc
cltd
cmp
fwait
push
arpl
imul
jl
shll
cltd
mov
int3
movsl
imul
jae
or
lock
mov
mov
hlt
dec
add
cmp
cmp
repz
sbb
jno
mov
mov
jg
pop
inc
call
fnsave
mov
clc
adc
inc
sarb
xor
ljmp
outsb
ds
cmp
mov
rcrl
jbe
and
inc
add
cld
mov
push
sbb
js
nop
or
fbstp
push
out
je
aas
mov
enter
inc
jae
pop
cmc
orb
fbstp
imul
lcall
lahf
test
xor
adc
and
ds
jp
adc
popa
mov
scas
xor
push
push
and
and
push
sub
dec
roll
and
mov
lret
sbb
rorl
cwtl
fistps
decb
cltd
je
mov
ja
in
loop
jo
stos
adc
adc
or
xchg
loopne
mov
test
call
mov
ficoms
push
xor
cwtl
and
sbb
shlb
mov
add
push
push
lahf
aas
mov
push
pop
jecxz
or
and
ljmp
xchg
test
lahf
ss
xchg
lahf
bound
xor
stos
ret
loope
push
outsl
adc
mov
jno
aaa
bound
inc
add
aaa
xchg
into
cmc
xchg
xchg
mov
cli
je
inc
pushf
cld
cmpsb
or
dec
daa
fcoms
pop
or
xchg
movsb
dec
lock
loopne
call
xchg
xchg
push
sub
adc
cmc
shlb
or
repnz
jl
int
xchg
rcrb
outsb
xchg
in
icebp
je
pop
mov
sbb
inc
push
or
pop
clc
movsl
mov
push
sub
imul
and
xchg
test
aam
add
fcoms
jle
in
xchg
add
adc
mov
lcall
inc
mov
mov
adc
mov
jo
xchg
imul
outsl
adcl
les
sti
neg
daa
adc
mov
inc
cld
sub
mov
xchg
repz
mov
sbb
int
stc
pop
addr16
in
sbb
sub
and
test
test
sub
fsubrl
xor
movsb
sub
in
sub
cmp
fs
xor
call
loope
pop
test
mov
pop
inc
and
jbe
shll
sbbb
push
xchg
orl
roll
jmp
cmp
mov
or
imul
xchg
sub
xchg
push
push
push
mov
mov
lock
out
pusha
xlat
adc
xchg
cwtl
movsl
add
pop
insb
lret
xor
fldcw
pop
incb
xchg
jns
dec
adc
push
inc
sbb
out
mov
fisubs
push
leave
loope
mov
imul
cli
movsb
and
cmp
scas
lock
sahf
lret
daa
ret
jl
shrb
mov
fcoms
out
pop
or
adc
dec
inc
outsl
test
mov
call
pop
adc
mov
imul
int3
jbe
mov
ljmp
sahf
js
mov
outsl
and
inc
hlt
sbbb
add
rol
and
out
add
sbb
and
pop
inc
and
mov
cmp
cwtl
xchg
in
xor
adc
push
push
jnp
mov
xchg
test
shrl
add
pop
outsb
clc
sub
jl
call
sbb
daa
mov
pop
inc
enter
mov
sbb
pusha
loop
aam
dec
or
push
rorb
cmpsl
sbb
int3
mov
inc
shll
clc
aas
mov
lahf
stos
and
pop
cmpsb
xchg
add
adc
pop
push
and
bound
sbb
mov
sahf
sbb
clc
xorl
pushf
cmpsb
and
repz
jmp
mov
icebp
movsl
inc
or
cmpsl
les
clc
ficompl
push
mov
xlat
adc
jge
adc
gs
int
ljmp
mov
cmpb
cmpsl
sbb
push
pop
sbb
sahf
mov
push
or
stos
mov
mov
or
inc
ficoms
shll
pop
sarb
fldenv
cmp
inc
fldenv
outsl
iret
adc
ss
lcall
fwait
enter
hlt
adc
xchg
das
test
js
addr16
pusha
xor
daa
mov
pop
jb
ret
ljmp
mov
jae
push
js
add
loope
cmc
aas
movl
mov
imul
sarl
sbb
fucomp
jne
sub
and
jl
mov
pop
mov
bound
mov
out
adc
jo
cld
cmp
mov
es
adc
add
rclb
inc
iret
jecxz
jecxz
pop
lahf
dec
xchg
sub
cmp
fisttpll
mov
inc
add
das
inc
fnop
and
pop
shl
jb
hlt
jp
leave
insb
jns
dec
roll
fstl
test
and
cltd
mov
testb
push
mov
lcall
dec
dec
cs
je
sahf
mov
sahf
cmpb
cwtl
push
in
std
push
push
bound
scas
mov
lcall
sti
cmp
pop
jle
repnz
jb
lahf
filds
cmp
mov
pushf
loopne
es
mov
jecxz,pn
outsb
cmp
insl
push
ss
movsb
daa
jge
sbb
insb
test
ret
dec
dec
iret
out
dec
sbb
and
xlat
ret
jl
fs
stos
fmuls
jp,pt
inc
int3
mov
fcmovu
xor
push
ret
sbb
dec
ja
sub
scas
sbb
and
ret
mov
jp
ljmp
repnz
repz
push
sbb
fimuls
mov
dec
aas
jb
out
mov
out
sbb
mov
cwtl
jns
rolb
es
inc
sbb
or
add
and
adc
pusha
test
dec
and
mov
cmp
adc
cmpsb
lret
sbb
mov
rcrl
insl
sbb
test
in
sbb
xor
push
ja
in
jb
lds
add
xchg
mov
out
pop
fcompl
push
lret
call
mov
mov
mov
mov
sbb
sbb
mov
and
lahf
std
dec
xchg
in
xchg
inc
pop
mov
xor
inc
lcall
lock
xor
ret
fsubrl
imul
lds
addr16
push
imul
inc
jb
out
jo
push
jp
iret
cld
cs
jo
test
in
outsl
insl
inc
notl
or
adc
or
mov
stos
cmp
es
shr
ja
sahf
push
jmp
das
push
mov
xchg
add
xor
and
push
or
das
in
fsubrs
movsb
test
adc
or
cmp
push
test
aaa
cmp
outsl
pop
mov
fimuls
pushf
insl
mov
mov
sbb
nopl
mov
mov
data16
arpl
cld
lret
or
hlt
test
inc
daa
gs
and
jae
xor
xchg
fistpl
aam
cmp
fimuls
rorb
mov
push
sbb
add
mov
insb
cmpsl
mov
cmp
vaddpd
mov
and
push
out
and
xchg
leave
imul
push
cmp
jmp
mov
lds
movsl
xor
xor
lcall
adc
or
xchg
notb
jg
pop
mov
inc
loop
jg
pushf
xchg
lret
mov
jns
ret
lods
lcall
fmuls
jmp
repnz
aaa
test
sub
xchg
jae
mov
sbb
aam
fisubrs
lods
and
mov
out
mov
popf
daa
sbb
clc
pop
int3
mov
fisubrs
ljmp
and
ftst
xchg
pop
jecxz
jle
fidivrs
popa
lcall
push
pop
ljmp
enter
xchg
popf
jo
lods
bswap
inc
jecxz
dec
push
outsl
leave
adc
imul
aam
inc
sbb
push
jg
sahf
and
dec
frstor
xchg
pusha
xor
in
sbb
dec
xchg
aad
adc
xchg
inc
rorl
and
pcmpgtd
mov
nop
xchg
repnz
adc
mov
and
daa
jmp
mov
aad
repz
rcr
clc
js
les
dec
icebp
in
cwtl
mov
or
inc
cwtl
inc
xchg
in
data16
gs
daa
call
pop
stc
xor
fildll
sub
mov
jmp
test
in
mov
insl
pop
sarl
fdivr
mov
cmpsl
test
jle
mov
dec
sub
jo
pop
ja
or
sbb
jge
jle
repz
sub
in
inc
or
xor
lock
adc
fwait
mov
std
mov
inc
sbb
mov
mov
ds
and
mov
jb
js
jmp
xchg
aam
arpl
push
and
lock
es
xor
outsl
icebp
clc
add
outsl
sbb
imul
mov
addr16
sub
adc
cs
or
jae
addb
mov
mov
stc
xor
lods
aas
es
sbbl
sahf
cwtl
sub
and
xor
xorb
push
xchg
xchg
in
dec
ret
lret
lds
mov
add
stc
stos
mov
inc
notb
xor
je
mov
filds
int3
fnsave
sub
bound
std
mov
aas
hlt
ss
popa
outsl
lret
ss
repnz
cwtl
fidivl
inc
xchg
cmpsb
js
sbb
stos
repnz
adc
sub
xchg
push
sbb
and
stos
mov
fwait
jo
adcl
lret
lock
jg
lock
div
jp,pn
mov
pop
mov
pop
jnp
jecxz
call
and
icebp
lods
orl
adc
mov
jp
pop
push
mov
jp
xchg
data16
dec
inc
sub
and
jge
xor
push
or
frstor
loope
add
out
sub
xchg
ljmp
mov
mov
xchg
jo
push
mov
adc
mov
test
inc
and
inc
imul
dec
add
jnp
fidivl
aam
add
jg
or
mov
ficoml
pop
gs
leave
push
test
mov
cmp
push
xchg
xchg
xchg
and
shlb
jo
inc
inc
js
mov
inc
out
aaa
jns
mov
lods
outsb
mov
ss
cli
cmp
mov
push
fwait
mov
loop
push
push
mov
sub
fwait
ljmp
pop
fstps
pop
cmpsl
mov
loop
test
inc
cmp
popf
inc
mov
xchg
or
out
pusha
int3
and
and
lods
insb
cmp
mov
cmp
cwtl
rcr
fdivl
lock
shll
sbb
loopne
inc
frstor
mov
jge
cmp
adc
inc
xchg
mul
inc
adc
lods
loop
inc
adc
jmp
faddl
xor
fwait
cmp
or
je
js
or
add
adc
call
pop
sarb
and
sbb
inc
dec
push
std
dec
test
loop
scas
mov
insl
xor
mov
jb
xor
xchg
or
lds
jo
movsb
sub
jmpw
add
sar
adc
repz
pop
lret
mov
out
mov
add
mov
and
call
jno
fisubl
out
pop
cld
push
decl
jbe
sub
adc
sub
outsl
cmp
inc
les
fsubrs
into
mov
loope
repz
or
fldl
jae
rorb
incl
sbb
adc
mov
add
pop
xor
fisttps
enter
loop
outsb
in
pop
mov
sub
stos
dec
loopne
popw
movsb
push
lret
rclb
cmp
dec
inc
mov
clc
iret
xchg
xchg
shr
pop
popf
add
cmp
cmp
scas
mov
repnz
or
sbb
mov
sub
sti
jnp
xor
xor
mov
jno
ja
sti
inc
jge
push
aaa
sbb
mov
clc
sahf
sarb
in
push
push
sbb
pop
outsb
in
js
or
push
rcll
mov
adc
test
pop
sbb
ds
sub
jae
xor
out
clc
push
in
sti
pop
mov
es
xchg
push
pop
or
test
mov
dec
addr16
out
inc
xchg
insb
cmpsl
daa
mov
xchg
and
enter
fildl
jbe
xor
jo
inc
rcrb
test
add
cli
cwtl
xlat
xchg
adc
aad
or
pop
push
or
xchg
repnz
mov
or
mov
xor
mov
cmpsb
or
push
shll
inc
or
add
xchg
pop
iret
enter
addb
or
push
push
stos
sbb
mov
sbb
aaa
outsl
add
mov
out
ja
out
inc
pop
ret
pushf
jg
iret
or
repz
cmpsl
and
lcall
imul
add
shl
loop
mov
cmpsb
in
mov
dec
lods
dec
mov
add
in
lcall
adc
dec
pop
rcrb
inc
rorl
fistpll
mov
scas
movsb
mov
inc
xchg
es
pop
iret
adc
adc
or
mov
cmp
dec
pop
xchg
sbb
push
faddl
pop
and
add
jns
in
iret
mov
lods
clc
daa
popa
jecxz
lods
movmskps
dec
xchg
sar
jb
jle
dec
dec
lahf
adc
fists
lret
pop
and
cmpsl
dec
pop
xchg
aas
das
movsb
add
in
mov
testl
sbb
sub
push
push
data16
fldenv
pop
in
jp
mov
pop
push
orl
add
mov
mov
mov
testl
fists
sbbl
dec
mov
add
pop
sbb
cwtl
xor
adc
dec
pop
jmp
cld
sbb
sahf
mov
or
ja
sub
push
out
adc
jge
jb
daa
les
je
jo
mov
inc
lods
cmc
and
test
and
ljmp
es
and
cld
mov
mov
jecxz
jbe
jbe
loop
push
mov
push
fs
sbb
cmp
push
cmpsl
adc
pop
ret
bound
in
pop
and
popf
popa
test
imul
mov
out
mov
sarb
inc
mov
jno
ljmp
and
aaa
mov
loopne
dec
shrl
jp
lods
jecxz
mov
aad
and
cwtl
xchg
mov
mov
mov
repnz
bound
in
lret
mov
sub
fisttps
mov
ret
sbb
mov
push
dec
sbb
inc
sub
jge
push
pop
ret
fnstenv
pop
mov
xor
aaa
lock
ret
fcmovbe
popf
lods
dec
stos
push
mov
pop
adc
orl
push
sub
mull
mov
outsl
sbb
out
cld
or
adc
xor
or
xrelease
mov
sub
orl
gs
dec
rcrl
xchg
xor
or
mov
fstpt
out
in
mov
and
push
test
mov
inc
pop
push
jg
cltd
out
xchg
insb
xor
std
and
lea
cmp
jmp
or
mov
outsb
arpl
icebp
movsb
addr16
das
inc
lods
mov
sarb
cld
mov
push
cmpsb
jle
pop
ds
or
and
pop
fwait
dec
cmp
pop
lea
push
adc
fcmovnbe
inc
pop
adc
mov
loope
arpl
sub
dec
fistpll
jns
scas
shlb
push
sbb
cmp
and
sbb
inc
lahf
mov
push
mov
jmp
stos
pop
xchg
pop
test
inc
dec
sbb
sub
dec
inc
popa
out
imul
xchg
dec
repz
dec
or
dec
add
adc
pusha
call
mov
inc
fcompl
push
mov
or
mov
adc
mov
pop
sbb
add
or
fsubrs
adc
xor
sub
loop
stc
es
aad
push
xor
popf
push
out
or
cmp
fists
push
and
notb
dec
lds
push
jmp
push
jle
repz
cwtl
xchg
cmp
inc
jge
xor
inc
pop
imul
shl
dec
faddl
mov
inc
and
mov
or
mov
hlt
xchg
sub
fcmovb
mov
aas
mov
or
push
in
sub
xchg
mov
jno
in
pop
loopne
bound
fstps
addr16
lcall
or
dec
arpl
cmpsl
push
pop
mov
xchg
insb
xor
mov
or
mov
or
lods
push
sarb
add
xchg
imul
test
mov
mov
pop
push
sbb
mov
dec
adc
jne
pusha
fsubl
scas
push
movsb
and
or
push
mov
call
dec
pusha
xchg
dec
adc
jl
xchg
add
sbb
iret
push
pop
icebp
inc
bound
or
pop
das
add
mov
push
pop
cmp
add
mov
dec
fwait
in
iret
lahf
pop
test
xor
aam
cltd
xor
ja
cmp
movsl
xchg
jg
mov
push
mov
jae
out
xor
jns
pop
js
sub
sti
lahf
bound
mov
sbb
mov
sub
adc
cli
addr16
movsb
pop
inc
lock
int
jle
or
out
inc
test
mov
mov
and
popa
stos
cmc
cli
mov
sub
aad
ret
lock
cmpsl
adc
dec
push
mov
cmp
cmp
mov
jp
mov
mov
popf
in
mov
das
sbb
push
fnstcw
xchg
xor
sti
lds
cs
xchg
jg
and
cmc
cltd
lods
sub
and
gs
iret
xchg
out
js
adcb
nop
mov
roll
xor
mov
in
loope
dec
adc
or
mov
mov
sub
add
jecxz
fwait
cmp
xchg
jle
stc
hlt
lock
rcrb
imul
xchg
fs
lods
pop
inc
cmp
outsb
sbb
clc
inc
dec
xlat
fcoml
ret
xchg
rcl
es
or
adc
sbb
jp
and
mov
cmp
ficomps
cltd
in
cmc
sti
push
in
sbb
mov
xlat
and
in
pusha
call
ja
or
bound
xor
popa
mov
mov
aad
xor
filds
movsl
jge
and
pusha
fs
movb
test
adc
cltd
push
mov
je
jp
shlb
push
mov
iret
mov
inc
adc
int3
cmpsl
adc
jnp
cs
xchg
hlt
sub
lods
lcall
outsb
or
scas
int3
test
out
xchg
movsb
out
and
dec
jno
inc
cmp
setl
mov
lcall
aas
jge
icebp
and
jge
adc
xchg
sub
lea
adc
or
xchg
mov
inc
lret
pusha
les
or
aam
mov
popf
jecxz
xchg
sub
or
rclb
pusha
adc
andl
jmp
in
dec
pushf
sbb
imul
stos
adc
fidivrl
jno
mov
xor
lock
mov
adc
loope
xor
push
adc
mov
dec
sti
out
jae
sub
dec
out
mov
mov
adc
stc
sub
pop
mov
xor
and
sarl
mov
pop
sbb
test
jae
xor
and
adc
mov
out
int
xchg
and
and
fucomp
jne
or
mov
pop
ret
pushf
out
cmp
mov
gs
jne
movsl
push
sbb
adc
stc
xchg
idiv
loop
je
cmp
sbb
fs
mov
aaa
clc
add
bswap
xlat
out
test
sahf
mov
ret
jns
add
dec
inc
sub
sbb
jns
cmpb
repz
in
ret
or
ficompl
ret
pusha
fisubs
pop
je
arpl
inc
sub
mov
lods
jb
adc
movsb
nop
lock
sub
dec
clc
test
ret
stos
loope
cld
pop
imulb
andb
jmp
xchg
call
mov
lret
hlt
jnp
pop
cmc
adc
cmp
add
pop
pusha
into
push
aad
mov
leave
js
jno
push
insl
mov
subb
push
int3
push
push
pusha
sahf
and
dec
mov
inc
mov
les
push
xlat
iret
lret
jnp
nop
mov
push
loope
hlt
mov
push
xor
sarl
stos
xchg
xchg
fimuls
xchg
inc
jne
pop
les
imul
pusha
fstps
cmpb
bound
adc
mov
out
inc
push
push
sub
mov
iret
stos
mov
in
push
push
jo
sbb
and
insb
adc
and
lods
addr16
jnp
pop
inc
mov
xlat
adc
xor
test
pop
mov
mov
cmpsl
jle
or
mov
sahf
scas
cmp
pop
or
cmp
outsb
ss
fldenv
stos
lret
dec
bound
mov
and
mov
jb
push
push
loope
inc
lret
scas
je
or
and
lock
pop
mov
enter
xchg
iret
dec
insb
mov
add
cld
in
add
adc
mov
xchg
inc
xchg
jmp
jo
xor
jns
add
and
push
sbb
pop
outsb
fisubrs
stc
cmpsl
adc
je
loope
xor
or
repnz
inc
pop
rorl
loop
xor
xchg
sbb
das
sahf
test
enter
lock
movb
xchg
adc
sub
push
std
jne
sub
repz
add
fsubrl
inc
in
push
fcomip
pop
add
hlt
movsl
mov
sbb
cmp
lock
movsl
mov
adcb
add
or
addr16
jns
jbe
xchg
lret
mov
push
adc
jne
ljmp
fcompl
lcall
cs
sbb
xchg
pop
xor
ds
out
dec
or
cwtl
jp
shll
xchg
mov
xor
out
addl
je
fadds
scas
enter
out
pop
mov
lret
mov
sub
push
in
imul
lahf
sbbb
cmp
xchg
sbb
popf
or
sbb
mov
jnp
mov
pop
sub
add
nop
push
jae
dec
add
push
aaa
sbb
out
jmp
add
jmp
cmp
cmp
or
push
insb
cmp
loopne
addl
test
test
outsb
lahf
ret
jmp
dec
repnz
and
jg
mov
mov
push
cmpsl
push
pop
int3
subb
lds
ret
ret
movsl
sub
std
cmpb
xor
lea
jp
pop
dec
fcmovnu
and
iret
in
adc
jnp
pop
pop
pusha
xchg
push
test
dec
repz
inc
inc
movsb
push
push
push
and
mov
and
aad
cmp
add
dec
cmpsl
push
je
jne
loope
cmp
xchg
lret
fdivs
es
cmp
leave
sti
gs
rcl
dec
lods
shll
mov
mov
fmulp
test
out
pop
int
sbbl
fists
xor
mov
fsubrl
add
mov
gs
cs
lahf
loop
xlat
enter
insb
repz
mov
aas
jae
repz
loopne
rcll
fsubrp
mov
push
jge
mov
mov
sub
sbb
adc
movsb
out
jb
inc
push
in
adc
dec
push
push
sub
ret
orl
pop
dec
pop
jge,pn
mov
and
mov
add
jns
in
lret
pop
push
jne
or
lret
jno
fiaddl
cmp
jmp
pusha
add
xor
ja
mov
cmp
dec
push
cmc
push
leave
je
enter
fistl
scas
mov
xor
jnp
cwtl
mov
or
sub
xchg
aam
int3
xchg
dec
lahf
mov
mov
cmpsb
xor
mov
mov
test
cmp
js
cmp
pop
subb
mov
cmp
mov
cmc
sub
push
fadds
lret
push
pushf
cmpsl
cld
adcb
mov
dec
push
mov
push
lds
adc
or
arpl
loope
lea
mov
shl
popf
in
cmpsl
add
iret
dec
rclb
rcrl
arpl
adcl
ret
pop
ss
push
mov
je
or
leave
test
add
int
adc
inc
mov
movsb
int3
mov
movsb
jmp
in
jne
xchg
clc
and
je
mov
shr
inc
call
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
