push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsb
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
jg
xchg
dec
stc
loopne,pn
lea
andb
or
add
lcall
fcoms
in
push
xchg
stos
dec
pop
les
xor
rolb
add
add
cs
fbld
jl
sub
ss
push
and
imul
add
push
push
shrl
sbb
and
dec
rclb
mov
adc
icebp
pop
adc
imul
mov
jnp
popa
popa
and
or
aas
roll
push
shll
sub
adc
shrb
testl
ds
roll
loopne
int
out
jae
leave
shrl
div
xchg
out
mov
add
push
sub
ficomps
fisubrl
bound
scas
test
and
xor
insb
jb
out
sbb
inc
lea
jmp
and
sbb
loopne
iret
fldenv
lods
inc
mov
addb
mov
add
mov
mov
adc
xor
repz
std
icebp
mov
add
test
or
clc
add
bound
push
mov
push
into
jb
mov
sub
sti
xor
stc
and
ja
sbb
pop
push
sahf
call
cmp
aas
sub
ret
mov
xor
les
je
dec
shl
mov
push
mov
xchg
pop
scas
pop
in
mov
int3
ss
cmc
push
or
lods
fildl
loopne
xor
fisubs
js
repnz
mov
adc
scas
cmp
mov
cwtl
jecxz
mov
xchg
push
icebp
and
jp
movsb
pop
or
adc
inc
mov
leave
pop
or
icebp
outsb
jbe
mov
ds
push
test
jecxz
mov
movsl
xchg
adc
push
ss
cmp
scas
arpl
iret
add
sub
lahf
cmp
sbbl
jo
jns
cltd
add
outsl
mov
xchg
sbb
push
mov
sub
divb
mov
ss
push
fldcw
xor
pushf
inc
pushf
ss
or
cli
loop
adc
fwait
push
arpl
pop
rol
and
je
outsl
scas
lds
sbb
insl
popa
sbb
and
js
scas
add
xlat
aam
test
scas
or
jae
test
jmp
movsb
jle
add
and
mov
loopne
stos
sbb
mov
popf
lods
or
mov
int
dec
ljmp
or
xchg
pusha
xor
aad
push
adc
outsb
mov
push
loopne
cmp
daa
xor
mov
xor
rcll
lret
pop
sbb
std
clc
ljmp
test
add
adc
inc
mov
dec
rcrb
movsb
push
pop
shl
fldcw
pop
leave
mov
xor
xlat
popa
je
push
movsb
push
jb
ds
add
sub
mov
lock
call
mov
mov
sar
push
push
jae
call
lcall
xchg
popf
adc
sub
pushf
mov
xchg
je
add
cmc
test
xchg
scas
lret
fisubrl
pop
inc
inc
jae
sub
fsts
adc
in
aas
xor
jg
mov
mov
cmp
fstp
lcall
xor
addl
rorl
pop
push
lds
dec
mov
push
inc
enter
mov
insb
stc
xchg
xchg
cmp
ja
mov
mov
repnz
pop
arpl
mov
orb
jbe
mov
inc
adc
add
xchg
out
mov
arpl
ret
push
sub
jne
ds
mov
xlat
inc
lods
pop
dec
xchg
jecxz
jg
xchg
lret
loopne
cmp
fistl
xchg
inc
shll
jno
lahf
mov
mov
aaa
std
mov
push
pop
add
xor
fisubl
into
mov
jne
mov
repz
sbb
jbe
fbld
mov
xor
xor
adc
sbb
add
sbb
push
xchg
fmull
jns
out
adc
in
in
mov
mov
dec
adc
gs
adc
jmp
pop
pushf
popf
fwait
jbe
mov
mov
mov
cmpsb
adc
movsl
dec
pop
cs
shll
daa
out
pop
inc
inc
imul
lret
add
imul
mov
sbb
leave
aad
repnz
xchg
ds
and
jle
add
push
push
xchg
iret
movsl
pop
cld
call
rorb
es
das
aas
jnp
int3
test
orb
dec
out
imul
cmpsl
insw
js
and
popa
pop
mov
loop
cmpl
sbb
scas
adc
sub
in
shll
or
or
ds
push
lods
and
cmp
and
add
int3
fs
lock
cmpl
imul
les
jmp
ds
test
jbe
xchg
inc
or
vmovq
or
or
push
mov
dec
lcall
cmove
pop
andl
test
int3
sahf
addr16
sub
or
lret
or
not
push
inc
push
out
xor
mov
add
popf
lods
or
enter
pop
push
in
inc
mov
jmp
xchg
add
and
loope
in
movsl
in
rclb
call
dec
insb
and
je
sub
clc
dec
mov
inc
mov
sub
movsl
mul
icebp
ss
sti
sbb
std
int
add
xor
sub
rcl
movsb
enter
push
sbb
inc
pop
frstor
addl
add
xor
sbb
dec
inc
int
iret
add
jns
fwait
cltd
push
insl
pop
into
clc
outsl
aas
daa
es
add
pop
inc
ficoms
push
jns
ja
and
in
sbb
mov
or
repz
ficomps
inc
rcrb
and
bound
mov
stos
sub
pusha
mov
ret
inc
xor
dec
test
std
rclb
lret
xor
adc
lret
add
add
dec
int
je
jbe
adc
jo
aas
cmpsl
mov
scas
enter
lea
rol
aaa
movsb
movsb
and
adc
adc
movsb
add
cmpsb
test
loope
mov
lahf
fistps
sub
pop
movsb
cld
sbb
mov
push
imul
mov
int3
repnz
jl
lea
ljmp
or
mov
mov
fnstsw
add
je
mov
insl
fsubl
mov
mov
sub
xchg
fcmovnu
sbb
mov
lea
enter
arpl
pop
push
fwait
jne
dec
or
cmp
or
mov
cld
leave
je
fldt
dec
push
jp
sub
shrb
jg
call
jge
popf
rcl
fiaddl
push
pop
pop
inc
dec
sbb
imul
lea
cmpsl
pop
lods
loop
pushf
lock
call
fs
mov
out
test
stos
shll
mov
fldl
test
sub
xor
push
push
fildll
subb
inc
outsb
sbb
pop
push
daa
jecxz
xchg
jnp
push
cmpsb
gs
xchg
xchg
inc
pop
mov
orb
arpl
loopne
push
iret
cmp
xor
pop
sub
rcrb
ljmp
add
and
vmovd
mov
jp
fisttps
mov
stos
imul
push
xor
dec
pop
mov
data16
rorb
repz
or
adcl
mov
xor
sub
push
lods
xchg
in
and
add
inc
adc
jp
xor
pop
imul
and
mov
std
adc
cltd
movb
and
es
or
and
in
scas
jae
lcall
in
mov
je
jge
cmp
adc
and
or
test
fstps
movsb
cmp
push
adc
rcr
loope
movsb
mov
jns
pop
pop
inc
xchg
fwait
aam
loop
or
fistpl
or
or
enter
xor
cli
icebp
inc
out
mov
repz
popf
cmp
add
push
fsubrl
in
mov
addr16
add
sbb
ror
stos
cmp
aad
pop
cs
xchg
rclb
lods
adc
ret
push
xlat
addl
icebp
inc
and
pop
sbb
xchg
dec
stc
int3
lods
hlt
lcall
jl
xchg
movsl
in
stos
iret
sub
or
out
sub
repz
cli
jge
insl
in
adc
push
sub
add
add
mov
jecxz
xchg
add
and
pop
ljmp
adc
push
outsb
lods
scas
pop
xor
jno
ficompl
fimuls
mov
lock
shll
mov
mov
adc
cmpsb
into
jnp
mov
stc
je
push
push
inc
xor
jb
cld
mov
and
and
pop
js
test
cmpsl
out
cld
add
inc
dec
test
lods
inc
jge
inc
loop
jns
fidivrl
mov
adc
repz
popf
enter
pop
insb
inc
mov
xor
inc
popa
sbb
mov
mov
dec
mov
dec
sarb
icebp
icebp
cwtl
push
cs
mov
sbbb
and
xchg
add
cmp
mov
mov
mov
xlat
add
add
shlb
mov
shlb
mov
pop
fs
mov
icebp
pop
jp
int
cli
dec
ljmp
or
push
cld
xchg
dec
adc
out
pop
hlt
icebp
push
insb
call
sub
je
sub
cmpsl
push
enter
loopne
and
jl
in
and
push
and
jl
sbb
pop
jmp
loopne
shl
jmp
adc
mov
stos
je
fmulp
add
add
inc
mov
adc
bound
push
pop
test
js
push
test
pusha
imul
out
es
insb
lea
mov
int3
filds
mov
mov
fistpl
or
xchg
add
mov
jp
mov
jg
xchg
hlt
mov
fisttpll
icebp
out
sbb
repnz
add
add
scas
pushf
lea
addl
push
addr16
nop
or
sbb
notl
test
pop
movl
incl
sbbb
aaa
xchg
mov
in
pop
aam
add
daa
xchg
stos
mov
mov
jae
cmp
iret
push
clc
adc
cmp
add
xor
int3
xchg
in
outsb
cs
push
lcall
std
pop
addr16
and
add
jns
xchg
xchg
push
sbb
mov
jbe
jns
xor
push
mov
pop
xlat
xlat
insl
pop
and
int
sbb
jb
adc
nop
push
shll
sbb
inc
mov
out
cmp
mov
xor
sbb
dec
in
xor
dec
or
xchg
ret
test
sbb
icebp
arpl
xchg
aaa
mov
add
jne
xor
pop
int
movsb
int
movsl
fwait
addl
shr
adc
jmp
nop
out
sub
sbb
sub
jle
jmp
sub
mov
xchg
or
cmp
sub
jo
fistps
sbb
push
inc
push
rcrl
shl
fbstp
shlb
mov
xchg
jmp
inc
lods
loopne
dec
mov
mov
or
pusha
sar
out
idivb
rorb
std
icebp
jbe
adc
push
add
dec
and
nop
andl
xchg
lcall
loope
xchg
cmpsl
fs
or
pop
fbstp
cmp
lcall
pop
test
xchg
pushf
lcall
mov
pop
push
sbb
lret
dec
xlat
imul
jno
rcll
dec
cmp
mov
jns
and
mov
push
xchg
add
add
lods
lds
push
push
stos
adc
inc
pop
add
mov
cld
xlat
adc
sti
or
aad
xchg
fldenv
jnp
movsl
add
test
mov
mov
jl
mov
jae
xor
dec
or
stos
add
inc
in
jno
cmc
pop
cmp
add
mov
imul
loopne
clc
imul
faddp
mov
lahf
cs
dec
cmp
xchg
mov
cmp
int
rolb
andl
js
mov
test
add
push
xor
or
js
jp
xchg
nop
dec
and
jecxz
jne
shrl
push
xchg
decl
es
cmp
lret
push
sbb
dec
and
xor
mov
in
pop
dec
inc
jecxz
cwtl
adc
inc
adc
add
inc
aad
mov
test
sbb
std
sbb
or
sbb
push
cmc
pop
jmp
mov
xor
push
adc
dec
pushf
fwait
add
add
add
cmp
dec
jae
fimuls
mov
lret
mov
dec
xor
push
hlt
decl
popf
inc
jge
xchg
and
push
mov
lock
mov
pop
cld
pop
mov
mov
or
sub
mov
test
mov
jp
ss
outsl
xor
mov
mov
mov
xor
movsb
mov
add
jmp
xchg
xchg
sbb
cmp
pop
add
add
pop
fucomi
fs
popf
or
and
leave
lcall
sub
mov
cwtl
popf
sbb
lret
mov
lret
mov
or
mov
mov
int3
pop
sbb
out
out
cmp
int3
xchg
pop
mov
ja
das
or
and
sub
and
or
add
rol
jne
xchg
jecxz
add
into
xor
insl
mov
les
cmp
mov
dec
and
mov
cli
movsb
jecxz
jge
add
dec
add
pushf
sub
and
outsb
imul
bound
xchg
rorl
out
push
push
das
cmpsl
add
inc
adc
pusha
stos
push
sbb
dec
iret
adc
and
sbb
out
and
pop
jmp
cmpsl
cmc
test
and
jno
test
pop
push
aaa
and
pop
pop
ret
xchg
dec
shlb
cs
sub
lret
xchg
out
mov
arpl
push
ret
cltd
or
sub
js
mov
enter
leave
mov
jg
icebp
outsb
jo
inc
pushf
inc
in
aam
aam
sar
ret
or
cltd
out
and
add
test
inc
fdivs
mov
sub
and
test
dec
xlat
add
mov
sub
pop
cmp
inc
jle
xor
push
test
cs
int
stc
pop
sti
mov
mov
aad
test
dec
and
les
aam
in
mov
subl
test
pop
mov
sbb
xor
jns
pop
push
add
add
jno
adc
sbb
jb
orb
ljmp
call
and
mov
sti
dec
imul
sarb
cwtl
cltd
inc
mov
pcmpgtw
push
mov
movsl
fwait
inc
fsts
or
sbb
push
rorl
lret
mov
sar
test
push
sbbl
add
lea
push
sub
lahf
addb
pop
adc
xor
andb
test
addr16
dec
test
xor
or
jnp
add
arpl
int
int3
mov
cmpsl
call
data16
or
xor
cld
push
cmp
cs
pop
pop
inc
xor
hlt
or
dec
jl
in
mov
jbe
sub
ss
ja
shlb
add
dec
hlt
imul
pop
dec
inc
dec
xor
sbb
out
pop
jl
je
pop
rcrl
icebp
pop
xchg
dec
mov
push
ror
test
mov
cmp
out
inc
mov
and
repnz
inc
repnz
mov
adc
test
mov
mov
call
dec
shr
fidivrl
and
push
sbb
shlb
pop
rorl
scas
imul
jmp
aaa
movsb
bnd
cwtl
ds
ret
adc
ret
sub
lock
xchg
add
nop
pcmpgtd
scas
ror
and
sbb
movb
sub
fwait
int3
cmpsb
into
add
out
dec
sti
stos
mov
dec
xor
add
mov
iret
add
movsl
data16
cmp
idiv
sarl
mov
shlb
push
loop
arpl
sub
push
pop
test
mulb
mov
adc
fstpt
in
xorb
fcmovne
daa
or
xor
icebp
scas
aaa
mov
gs
shlb
add
or
xchg
arpl
ret
push
add
xchg
add
xor
inc
addl
movsb
push
adc
dec
nop
mov
scas
adc
xchg
cmp
mov
cltd
stc
es
xlat
testb
xlat
lcallw
add
lock
iret
imul
xor
sbb
inc
ljmp
and
je
adc
subb
jb
repz
idivl
test
add
out
add
pop
jle
xor
es
pusha
lahf
push
into
sarb
or
cmpb
jb
jmp
xor
stc
movsb
pop
fildll
fdivrl
into
test
mov
or
push
sti
and
shll
adc
lret
pop
sti
inc
inc
push
xor
stos
adc
push
add
jb
pop
jo
cmp
fistpl
and
imul
sbb
jns
add
imull
xchg
cmpsl
push
jb,pn
sub
inc
ss
add
pop
paddq
sbb
cmp
sub
mov
clc
or
fcompl
mov
dec
sbb
out
xchg
inc
mov
push
loop
dec
je
sbb
faddp
mov
out
shll
cmp
sub
xchg
add
or
mov
ja
mov
adc
fwait
add
xlat
outsl
mov
add
or
push
lret
sti
cmp
or
in
out
sub
dec
sbb
mov
mov
mov
push
inc
cs
jb
mov
out
xchg
mov
inc
xchg
push
jmp
cmp
fcomps
mov
push
sbb
movsl
adc
fiadds
sub
inc
adcb
sti
pop
mov
mov
xchg
xchg
push
shrl
add
adc
add
jmp
imul
dec
lds
mov
cwtl
data16
adc
sbb
mov
insb
adc
inc
mov
cld
mov
sarb
or
mov
inc
leave
addr16
pop
sub
cmp
push
mov
jne
xchg
js
xor
nop
imul
cmp
add
shl
dec
nop
mov
pop
js
out
cwtl
test
stos
push
jbe
add
mov
aad
jecxz
loopne
ds
stc
cld
ja
jae
or
add
fnsave
xor
call
out
pop
and
jmp
fldcw
dec
add
lret
and
ss
xor
jecxz
mov
aad
cmp
xchg
ret
and
mov
insl
ret
mov
xor
add
jg
or
sub
or
add
dec
mov
add
xlat
in
pop
lcall
nop
ljmp
cmp
lcall
jp
inc
fwait
inc
insl
mov
inc
cmpsl
outsb
in
into
push
out
out
or
aas
lahf
mov
inc
stos
fsub
repz
mov
ret
sbb
mov
dec
nop
out
sarb
iret
lret
add
std
xchg
fs
mov
cmpsb
and
xor
sarl
cmp
xor
pop
aam
mov
xchg
add
and
in
or
sbb
xchg
fidivs
repz
shlb
pop
sbb
shl
sub
dec
sub
cmpsb
movsl
or
dec
sarl
stos
xlat
std
jne
or
add
fldl
sbb
test
xlat
mov
mov
inc
push
sbb
mov
std
push
mov
or
pop
mov
pop
add
cltd
test
in
testl
jmp
mov
mov
add
adc
testb
or
inc
xlat
mov
fs
lea
mov
arpl
xchg
xor
cmp
cmp
sub
cld
jg
xor
subb
test
push
jnp
out
loop
insb
mov
xchg
out
pushf
imul
xchg
shl
xor
push
cmpsb
xlat
mov
pop
add
in
aam
lcall
lods
add
test
xchg
inc
adc
int
fsubp
xor
incb
pop
ljmp
pop
lret
or
dec
pushf
pop
add
cmpsl
jo
in
les
in
cs
dec
xchg
xchg
xchg
fisttpll
push
in
adc
neg
push
mov
mov
pop
sahf
mov
pop
ljmp
mov
fidivs
jg
addr16
shll
rolb
or
inc
mov
scas
jb
fidivl
mov
xchg
xchg
sbb
add
and
xor
dec
aas
dec
add
jg
into
daa
push
aaa
neg
mov
inc
pop
in
cld
imul
push
inc
xchg
jnp
sub
push
mov
push
mov
cmp
xor
fistpl
jb
cs
mov
int3
mov
fnstcw
shrl
mov
mov
and
dec
fnstcw
cltd
lret
enter
test
leave
movaps
mov
fcoms
sbb
mov
and
lahf
jb
scas
dec
enter
test
jg
out
repz
sti
rcll
mov
out
dec
pushf
push
nop
mov
cmp
cmp
or
push
xor
inc
mov
pop
sub
std
mov
mulb
dec
or
mov
imul
adc
pop
aam
mov
xchg
sbb
and
xchg
dec
fcmovnb
fs
push
aaa
fs
out
ret
dec
xor
mov
push
add
sbb
arpl
repz
daa
push
add
loop
repz
pusha
cmc
imul
int3
clc
shr
enter
ss
inc
out
xchg
cwtl
mov
sub
fdivr
dec
jmp
mov
negl
test
jmp
jb
cmp
jmp
call
add
mov
aaa
cmc
sahf
test
mov
and
dec
fisubs
shrl
out
sahf
nop
dec
push
adc
std
icebp
dec
mov
repz
enter
sbbb
notb
dec
ficoms
xchg
add
stos
faddl
outsb
pop
push
xchg
inc
push
gs
and
xor
mov
cmpsl
inc
stos
outsb
outsb
dec
mov
arpl
cmp
popf
lods
pop
or
mov
nop
lods
add
dec
out
pop
xchg
adc
dec
pop
mov
sub
push
fistpl
cmp
or
xor
and
push
xor
popa
fs
pop
xor
mov
inc
loope
mov
aaa
std
xchg
pop
test
pushf
sub
int3
aam
dec
rcl
subps
shlb
mov
xchg
mov
fnsave
mov
out
inc
mov
pop
xor
push
and
popw
sub
stc
jae
sub
cmpsb
mov
popf
jmp
jecxz
add
cmp
das
mov
mov
fadds
adc
out
popa
lock
mov
xchg
aad
inc
call
bswap
stc
cmc
inc
mov
hlt
xor
es
push
push
jne
cmpsl
push
dec
dec
mov
cmp
mov
cmp
jl
sub
push
popw
leave
mov
rcll
add
sub
push
or
pop
jno
mov
mov
inc
push
xor
dec
divl
or
push
sahf
jge
fisubl
les
jbe
lcall
scas
push
lods
mov
mov
cmp
and
std
cmpsb
cmp
lret
sbb
push
nop
jg
mov
xchg
dec
jecxz
fsubs
ljmp
add
add
sub
push
and
push
rcr
cmp
xchg
xchg
cmp
mov
sarl
psubw
add
test
fwait
mov
mov
shll
iret
xor
pop
cmpsb
pop
cmp
jmp
test
faddp
and
mov
sub
cltd
in
dec
pushf
ret
xor
push
push
data16
cmp
push
xchg
cmc
scas
sbb
lods
mov
in
mov
add
pop
push
and
jge
xor
jecxz
sub
cmp
pop
stos
cwtl
mov
popf
lds
call
nop
push
xor
push
jmp
adc
inc
mov
cwtl
cld
icebp
ss
dec
aam
cmp
call
lds
iret
popa
sub
cld
cmpsl
xorb
xchg
rol
shll
xor
adc
cld
push
xchg
dec
hlt
add
add
adc
or
cwtl
fnsave
or
js
mov
mov
mov
jo
cmp
xor
xor
add
mov
adc
and
push
fistpll
lret
add
fwait
or
adc
or
and
daa
scas
xchg
push
insl
push
sub
pop
push
ds
rolb
cmpsb
mov
popa
idiv
add
jmp
divl
cmp
pop
xor
jo
mov
sub
cmpsb
out
pop
and
push
test
in
lcall
adc
jno
dec
shll
pop
daa
pop
aas
cld
jo
sbb
add
pop
mov
test
stos
cli
pop
jge
xchg
rorl
leave
cltd
jae
jg
std
mull
cli
sub
push
cmpsb
aaa
sarl
mov
mov
bound
shl
push
add
les
mov
pop
pusha
xorl
mov
xchg
inc
jp
shrb
das
mov
inc
adc
jo
arpl
jmp
aas
or
pop
cltd
dec
jne,pn
pop
jg
movsl
cmp
jb
xor
push
stos
cmp
dec
push
push
xchg
inc
iret
adc
cmp
mov
pop
rolb
mov
dec
cltd
aaa
xor
pop
xor
icebp
les
push
jp
ljmp
and
inc
push
push
xchg
jbe
xchg
js
mov
in
mov
ret
aam
adc
subb
pop
xor
inc
mov
mov
and
cld
out
rclb
xchg
addr16
add
or
push
inc
xor
jb
jno
icebp
cmp
sbb
mov
sbb
clc
mov
orb
jge
pop
add
rcrl
dec
outsl
leave
loop
out
mov
dec
aas
and
nop
push
push
pop
test
xor
into
xchg
arpl
leave
and
dec
xchg
dec
int3
shr
pop
adc
jl
dec
aad
jge
in
cmp
aas
in
into
shlb
and
add
inc
pop
push
jbe
andb
mov
popa
movsb
inc
mov
fnstenv
fwait
lea
xor
add
mov
pop
add
pop
std
mov
xchg
stos
fbld
xchg
popf
or
cmp
mov
mov
dec
clc
arpl
jns
lcall
push
daa
add
add
test
mov
xor
jp
cmp
ficompl
dec
add
mov
lahf
bound
into
mov
jns
repz
jp
push
ljmp
xchg
cwtl
mov
and
std
outsl
mov
add
out
outsb
push
daa
mov
dec
test
lret
xchg
dec
arpl
cld
lret
shll
push
sbb
dec
jge
push
stc
jl
mov
out
fisubl
lahf
decb
inc
loop
or
test
rorl
mulb
pop
add
shll
xorb
loopne
xchg
mov
mov
sti
xor
and
out
sarl
ret
cmp
xchg
add
mov
pop
and
lret
cmp
mov
test
push
shlb
jle
adc
addb
xchg
jge
cmp
js
subb
sub
lret
fiadds
rcr
mov
cld
cmc
push
mov
leave
movsl
inc
