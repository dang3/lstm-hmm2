push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
mov
imul
sub
push
mov
mov
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
mov
mov
ror
xor
imul
add
mov
divl
mov
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
je
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
mov
push
push
call
pop
pop
test
je
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
cmpl
jne
xor
jmp
push
pushl
call
pop
lea
push
push
call
mov
test
je
pushl
push
call
mov
pop
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
push
push
push
mov
call
lea
push
push
movb
call
mov
push
push
push
call
add
push
call
test
jne
mov
mov
lea
push
push
push
push
push
call
test
jne
lea
push
push
lea
push
push
push
pushl
movl
movl
call
test
jne
push
push
push
call
add
mov
call
pushl
call
jmp
mov
call
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
movl
test
je
mov
mov
jmp
push
call
mov
mov
mov
push
push
push
push
xor
push
inc
push
call
mov
mov
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
push
call
mov
push
push
push
push
call
mov
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
jmp
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
push
mov
mov
mov
mov
sub
test
jne
inc
jmp
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
mov
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
test
jne
mov
and
push
call
test
pop
je
mov
ret
push
push
call
pop
test
pop
lea
jne
lea
ret
mov
push
mov
mov
push
mov
andl
mov
call
mov
mov
pop
pop
ret
push
mov
push
cmp
jb
push
lea
xor
movl
test
je
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
not
imul
xor
mov
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
push
mov
pushl
pushl
push
pushl
call
pop
ret
push
mov
push
push
push
movl
mov
mov
lea
push
call
dec
jne
testl
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
add
jns
push
add
sub
mov
pop
push
mov
cmp
xlat
out
ja
inc
xor
lahf
adc
out
push
xor
fwait
jnp
add
shll
clc
scas
sarl
inc
movsl
cmpb
mov
pushf
pop
cs
lds
push
mov
daa
push
add
sub
mov
mov
cmp
xlat
out
ja
inc
xor
lahf
adc
mov
stos
iret
dec
hlt
int
mov
push
mov
rorb
cmpsb
mov
ret
mov
pop
xor
out
mov
inc
xor
bound
mov
and
aad
pop
dec
mov
sahf
jno
cs
insl
mov
ficomps
xor
push
push
fs
lods
leave
movsb
clc
add
adc
adc
xlat
lahf
rcl
fidivrs
inc
push
and
je
xor
fwait
push
mov
dec
add
add
mov
mov
add
mov
sub
in
mov
xorl
mov
cmpsl
imulw
sub
mov
pop
inc
fistps
je
lods
arpl
pop
xchg
ljmp
insl
es
pop
xchg
test
out
int
mov
push
jno
icebp
loop
mov
addr16
ds
xor
pop
out
movb
adc
lock
iret
and
push
outsl
jbe
outsb
inc
xor
lcall
add
fidivrl
push
fmuls
pusha
incl
leave
push
push
nop
aam
fcomps
mov
int3
ja
repz
xor
sarl
push
dec
aam
mov
cmp
mov
cld
mov
xchg
cmp
inc
dec
jb
xchg
jns
dec
jns
loope
clc
cmpsl
or
movsl
lcall
mov
xchg
mov
xchg
jmp
cld
iret
xor
andb
cltd
sahf
pop
sub
repz
int
pop
divb
rol
add
fldcw
or
inc
ds
std
movsb
and
and
enter
stos
jbe
aam
cs
dec
jle
or
mov
outsl
lods
mov
or
push
cmp
mov
mov
sub
cli
xchg
ds
js
cmpl
or
cmp
or
ja
jo
shl
hlt
rcl
loope
or
jno
adc
add
cmp
lds
je
add
mov
movsl
je
movsl
lcall
sbb
out
pop
imul
and
shlb
bound
mov
add
fwait
in
imul
xchg
jle
test
popf
iret
mov
cmp
popa
mov
hlt
test
loopne
decb
add
inc
sub
aam
xchg
hlt
bound
push
test
loope
movsb
xchg
sub
adc
sbb
add
jge
out
sbb
mov
in
outsl
clc
or
cwtl
sahf
ds
or
rcrb
pop
ss
ret
in
xor
imul
cmc
lods
dec
pop
or
mov
aas
add
inc
jnp
inc
leave
add
mov
pop
cmp
sbb
fcoms
xchg
pop
mov
add
add
push
or
add
and
add
daa
dec
lods
repnz
mov
stc
iret
add
lods
jbe
mov
inc
inc
outsb
inc
std
sub
xchg
mov
popa
sub
addr16
jnp
dec
call
sahf
sbb
in
jnp
adc
testb
xchg
fs
hlt
jae
cmpsb
std
xchg
ret
and
xor
add
fs
mov
flds
scas
xlat
add
add
mov
xor
loopne
stc
mov
mov
stos
xor
aaa
rcrb
jmp
outsl
dec
cmp
test
cli
imul
sub
xchg
pushf
sbb
lcall
ss
insb
xchg
or
adc
cmp
stos
test
dec
pop
xlat
mov
pop
cmp
xchg
mov
test
sbb
add
add
mov
imul
xor
mov
xchg
loope
subl
scas
jb
push
jecxz
scas
gs
icebp
mov
fidivs
icebp
loop
sub
ss
outsl
in
push
pushf
mov
icebp
mov
movsl
jmp
rcll
jmp
les
xchg
adc
jle
sbb
mov
roll
in
insl
ret
jmp
sub
or
xor
or
imul
cmp
leave
ret
jg
lea
mov
das
or
test
movsl
jnp
loopne
adc
pop
int3
mov
push
fisubl
lret
xor
and
testl
daa
lods
mov
lahf
out
sar
fdivr
push
int3
pop
adc
push
jg
push
mov
mov
insl
std
arpl
jecxz
cmp
insb
std
add
cmp
cli
and
jecxz
adc
push
stos
add
pop
ds
sbb
cmp
xor
fmuls
das
jmp
pop
and
pop
andl
push
jg
pop
jo
rol
loope
lock
add
mov
insb
mov
jecxz
dec
pop
int3
inc
mov
inc
mull
int
mov
add
jbe
lret
mov
pop
in
jmp
add
push
dec
ds
sbb
adc
xadd
loopne
cs
fs
iret
push
xor
inc
aaa
mov
mov
cmp
cmp
jecxz
sbb
pop
xchg
fidivl
bound
push
ret
jge
dec
aas
dec
pop
jb
jo
xchg
ret
aaa
popf
xchg
inc
and
push
aad
inc
jle
insl
pushw
add
jle
jecxz
ret
add
mov
out
adc
push
mov
ljmp
adc
push
mov
leave
cltd
test
and
xorl
xchg
jns
in
xchg
rorl
ja
add
scas
popa
pop
mov
and
mov
jo
cmpsl
arpl
outsl
push
in
mov
fwait
aas
push
data16
sarb
push
cmp
cmp
push
mov
or
inc
lcall
test
xor
adc
subb
gs
mov
pop
cmp
or
je
aad
imul
mov
shl
mov
mov
pusha
sub
inc
adc
repnz
dec
in
pop
js
pushf
ret
pop
and
js
pop
in
xor
popf
cmp
adc
cmp
jnp
in
adc
fdivrl
out
imul
mov
mov
dec
enter
insb
and
arpl
sti
fnstenv
jle
cmp
sub
outsl
in
adc
sub
add
add
in
dec
or
sbb
and
mov
jmp
lds
dec
les
xchg
hlt
clc
mov
les
mov
rcll
pop
scas
xchg
stc
adc
mov
aad
lods
and
pop
dec
sbb
hlt
dec
addr16
enter
sbb
and
pop
ja
aam
cltd
fidivs
sub
cmpsb
adc
add
mov
je
inc
inc
mov
pop
or
shl
inc
xor
fdivrs
daa
lret
sbb
pop
cmp
outsl
pop
out
adc
mov
push
push
test
subb
jl
pop
mov
jp
lods
add
push
or
adc
jmp
jle
inc
roll
fisttpll
ds
cmp
cmpsb
push
shrb
jo
stos
lahf
or
adc
and
push
pop
and
add
add
cmpsb
fdivl
insb
rol
sub
aaa
popf
divb
aas
push
sub
popf
and
lock
or
mov
xor
int
fdivrl
test
xchg
int3
inc
incl
jmp
mov
sub
or
mov
add
sti
xlat
cmc
jle
dec
mov
pop
add
stos
out
lcall
jno
sub
add
add
xor
popf
sbb
andb
into
jbe
adc
or
jle
push
ficoms
cmp
jbe
sbb
inc
out
add
and
and
jge
mul
xchg
push
out
push
lds
and
and
jbe
and
adc
lea
hlt
or
push
fsubp
cli
aam
push
js
mov
mov
mov
cwtl
and
adc
jno
arpl
dec
out
hlt
add
mov
push
or
lea
push
sbbb
dec
fisttpll
and
imul
les
fsubs
cmp
or
faddl
xor
sti
in
jne
xlat
nop
xchg
and
push
mov
push
cli
or
pop
imul
lgs
xor
jb
push
adc
push
fnsave
jo
and
rcr
add
add
jmp
int
outsl
push
push
mov
adc
pop
or
addr16
aas
out
loopne
stc
daa
arpl
ja
addl
and
pop
sbb
cltd
adc
jae
mov
aam
out
mov
sub
mov
outsl
movsl
gs
pop
mov
or
add
add
add
jns
repnz
jle
sub
pop
or
sti
or
and
cs
dec
adc
mov
push
je
xchg
loop
dec
std
ds
shll
dec
cmp
sbb
scas
xchg
push
shlb
and
inc
rorb
nop
sbb
jnp
repnz
in
xchg
xchg
outsb
sub
out
mov
adc
insl
out
loope
stos
xor
push
cltd
jo
divl
test
add
xor
movsb
pop
mov
lret
mov
xor
pop
mov
repz
add
sbb
ficoms
mov
arpl
inc
dec
imul
lds
mov
xor
xchg
int3
mov
rcll
add
or
leave
jle
push
cmp
test
add
scas
loop
shlb
mov
pop
add
call
lock
jns
mov
jecxz
jl
fidivrs
cmp
call
mov
cmpsb
pop
dec
popf
and
dec
loop
pop
les
pop
arpl
fcompl
or
sti
imul
or
add
jb
xchg
inc
xchg
mov
sarb
aas
les
out
outsl
pop
rclb
or
mov
pop
sbb
mov
cmc
pushw
adc
out
pop
push
lods
pop
shr
pop
ds
rcrb
push
pop
cmp
es
cli
adc
dec
sub
enter
push
push
and
adc
gs
lods
mov
mov
popa
ja
loop
or
test
ret
notl
test
imul
rclb
jne
fistps
pop
mov
sti
push
cmp
daa
sbb
ljmp
iret
in
jnp
push
push
sarl
push
dec
enter
lock
fisubrs
push
in
leave
xchg
fisttpll
or
enter
add
cmp
xor
cmp
bound
inc
in
fnsave
popf
and
xchg
push
iret
mov
cld
into
mov
add
fnsave
gs
jne
out
sbb
or
call
sub
inc
aam
inc
sahf
adc
mov
in
xchg
cmp
or
lods
movsb
aad
and
aam
add
adc
and
bound
sbb
lret
imul
mov
or
inc
mov
add
in
incl
test
push
out
push
add
inc
cmp
js
jle
arpl
jne
test
adc
mov
push
movsl
sub
xor
fidivs
lahf
xchg
xor
pop
push
std
loope
lods
test
stc
loopne
ret
adc
testb
xchg
stc
cs
pushf
xorl
or
js
push
cmp
inc
ret
jo
dec
shr
cmp
pop
or
mov
add
std
fstpt
xchg
jmp
xchg
out
mov
out
imul
mov
sbb
inc
data16
xchg
pop
sbb
push
call
stos
mov
jle
out
xchg
movl
push
out
int3
xlat
insl
test
ret
push
lahf
loope
aam
fdivrs
jge
sub
push
call
fiaddl
and
push
in
and
mov
pop
xchg
sub
adc
cld
and
pop
in
int3
fldt
push
jg
pop
jmp
mov
inc
inc
jo
aaa
lods
add
test
hlt
add
add
jbe
pop
cli
cwtl
in
mov
xlat
xorl
fwait
jp
pop
sti
push
cmp
and
sub
scas
scas
sahf
fnstenv
push
andl
push
jb
lahf
pusha
pop
outsb
pop
add
add
cltd
popa
jo
inc
cmp
in
in
xchg
sbb
sub
pushf
testb
int
jns
mov
dec
adc
jp
inc
aaa
test
sbb
jb
cld
fistpl
js
xchg
xor
sub
daa
out
add
in
add
std
xchg
nop
cmpsb
jbe
dec
cli
sbb
or
pop
faddl
add
add
cmp
inc
mov
jb
ss
fildll
testb
jne
pop
data16
mov
xchg
cmp
and
std
shr
into
xor
scas
jno
and
mov
in
and
xchg
pop
dec
pusha
dec
pop
sbb
and
lret
sbb
lods
sub
mov
mov
cmp
hlt
inc
jle
xor
loop
and
add
push
jne
sub
cwtl
cs
pushl
adc
add
mov
lods
test
icebp
loope
mov
add
push
aas
or
cmc
mov
rclb
xchg
mov
adc
fistps
ret
in
loop
xlat
cs
push
cmpsb
es
xor
push
sahf
add
mov
popa
cmp
or
in
pop
sti
gs
adc
mov
andl
and
insb
mov
bound
push
inc
imul
add
pop
andb
xchg
into
movsb
inc
aaa
pop
das
stos
pushf
in
int3
fcoms
sbb
mov
ret
pushf
push
mov
cmc
jne
test
mov
outsl
pop
push
fildll
mov
mov
sti
pop
cmp
dec
cmp
cmpl
and
int
inc
pop
punpcklwd
or
push
mov
ret
inc
in
mov
add
je
push
adc
and
ds
push
and
rcrl
pop
daa
in
dec
adc
test
fdivl
sbb
dec
xor
lds
adc
loopne
fimuls
or
mov
push
dec
and
mov
movsb
inc
into
xor
iret
fsubrl
ljmp
icebp
sub
dec
and
mov
jle
lock
mov
add
leave
ret
aas
aaa
cmpl
lret
pop
in
cmp
out
inc
jae
out
out
stos
mov
xor
pop
push
inc
lock
mov
imul
jne
aaa
sahf
cmp
push
leave
xchg
test
mov
ret
adc
sub
adc
and
stos
pop
add
push
mov
sub
dec
sahf
fcomps
push
je
arpl
push
int3
mov
hlt
xchg
dec
push
sti
push
push
mov
xor
jnp
cmp
clc
stc
pop
jnp
mov
lock
ds
inc
xchg
repnz
push
rol
xor
mov
xor
imul
clc
add
insb
std
out
popa
mov
dec
push
xchg
movsb
add
add
mov
push
adc
xchg
mov
mov
imull
lods
xor
mov
xor
mov
fmul
pop
std
sbb
push
sahf
jp
adc
popa
jle
loop
das
lock
push
imul
das
loopne
sbb
notl
ja
adc
gs
in
stos
jl
push
push
sahf
cmpsb
es
dec
fst
rclb
cmpb
jg
sub
add
cmpsb
jne
loope
and
fldl
mov
sbb
adc
mov
sbb
pop
lret
adc
imul
fimuls
addr16
xorl
mov
jne
mov
dec
push
cmp
push
fldt
dec
sbb
jae
jmp
popf
sbb
add
hlt
pop
hlt
popa
jb
inc
mov
call
imul
pop
negb
push
sbb
sti
cwtl
pop
mov
int3
stc
sub
orl
sub
movntps
iret
cmpsb
loopne
popf
lret
jg
push
push
aam
mov
xchg
or
in
clc
cmp
xlat
stos
xchg
push
lods
add
fxch
pusha
inc
push
js
dec
out
push
lds
sbb
sbb
adc
push
adc
sub
xor
movsl
outsl
sub
jle
outsl
mov
jb
xor
in
into
out
jecxz
xor
shr
adc
out
pop
lds
das
adc
jp
cmpsb
cltd
inc
sbbb
pop
pop
shl
mov
mov
std
cld
and
adc
movsb
int3
dec
stc
in
add
add
ljmp
icebp
scas
subl
pop
xor
inc
sub
cmp
cli
cmp
mov
movb
inc
xchg
sub
js
mov
icebp
inc
movsb
mov
dec
jns
push
test
inc
insl
divb
lods
inc
icebp
pop
mov
cmc
cmp
sub
pushf
inc
jae
inc
or
lahf
out
inc
pusha
cld
jp
jns
mov
cmp
add
add
in
xchg
push
outsl
pop
cmp
dec
jle
dec
test
test
nop
sbb
mov
push
cmp
jbe
imul
sbb
test
cltd
inc
nop
fidivs
sbb
inc
hlt
mov
bswap
and
stos
test
cmp
dec
pop
pop
mov
adc
mov
addr16
inc
call
dec
mov
ret
pop
lahf
sbb
mov
std
loopne
jnp
xchg
ljmp
leave
loopne
int
out
sbb
loopne
fisubl
int3
or
push
pop
shlb
lea
loopne
aas
js
and
das
pop
mov
mov
cmp
dec
aad
xor
inc
pusha
test
mov
jnp
jne
add
addb
scas
add
in
imul
stc
mov
adc
and
ja
push
jae
lret
leave
scas
in
cmc
subl
xchg
clc
in
in
arpl
mov
jge
movsb
dec
scas
jo
adc
in
dec
ja
dec
aad
or
cmp
mov
icebp
xchg
mov
ret
push
scas
or
pop
dec
inc
inc
adc
iret
jl
insb
adc
adc
pop
clc
insl
roll
rcrb
pop
int
insb
mov
mov
hlt
push
cmp
js
cmp
test
jecxz
mov
push
aas
inc
jbe
lods
jp
int
loopne
fisubrs
fcoms
jecxz
stos
into
adc
mov
push
pusha
in
mov
sbb
mov
mov
cmp
out
imul
cmpsl
fcomps
movsl
mov
orl
test
stos
or
test
inc
pop
xchg
sub
int
fidivrs
cmp
sbb
jmp
adc
sub
out
aas
dec
dec
mov
cmc
mov
and
add
jno
and
stos
stos
lahf
cltd
jge
sbb
mov
mulb
sbb
mov
imul
mov
jnp
and
and
mov
icebp
insl
leave
jg
cmpsl
dec
testb
ljmp
cmp
inc
ja
in
orl
inc
sub
mov
sub
imul
pop
push
outsl
sub
and
test
lcall
aas
in
mov
loope
in
daa
push
cwtl
mov
cmpsb
pop
das
sarl
in
jae
cltd
stc
ljmp
pop
lret
xchg
sub
adc
mov
mov
jne
sahf
fbstp
ficoml
cmp
nop
lcall
popf
loope
lods
push
popa
sub
jmp
push
and
xor
add
fsubrs
mov
inc
jbe
mov
shrb
inc
mov
jge
cmc
outsb
jp
xchg
add
mov
cmc
xor
lret
or
outsb
mov
enter
adc
in
lock
clc
cli
mov
nop
xchg
clc
xchg
inc
or
rorb
xchg
mov
aad
fsts
imul
push
cmp
in
jl
mov
mov
pusha
mov
or
dec
xchg
jg
mov
add
test
add
add
adc
sbb
pusha
jmp
lea
sbb
test
dec
jg
cmpb
das
push
inc
lcall
inc
loope
es
loopne
fists
pop
cmp
mov
sub
cmp
lret
bswap
adc
sarb
aas
imul
inc
ds
shlb
adc
add
das
lock
pop
aaa
mov
mov
push
bound
mov
loopne
sbb
jae
mov
add
xchg
daa
outsl
cmc
mov
mov
enter
imul
in
dec
shl
fisubl
push
jmp
pop
insb
hlt
in
and
mov
xchg
inc
loop
push
cmp
sub
inc
push
and
jge
pusha
xor
push
xchg
mov
cmp
int3
dec
jecxz
mov
aaa
and
negl
jp
xor
bound
adc
lds
mov
pusha
xchg
jns
in
pop
lahf
movsl
imul
dec
or
and
xchg
add
in
and
pop
repnz
adc
xor
and
addr16
add
in
imul
dec
movsl
pop
ss
cmp
push
cs
stc
mov
sti
movsb
push
es
dec
mov
xorb
cld
sub
or
in
pop
dec
pop
jo
out
cltd
cmp
mov
cmp
ljmp
mov
push
xchg
dec
pop
mov
push
xchg
fmull
fsubr
add
xchg
xchg
push
push
xor
mov
mov
or
push
gs
stos
or
out
sub
push
scas
add
inc
inc
sub
jecxz
iret
jbe
push
adc
and
lds
sub
into
cwtl
sti
shr
das
cwtl
pop
cmpsl
xor
add
jp
mov
hlt
dec
push
aas
lea
popa
test
cwtl
aaa
clc
fistps
inc
imul
fwait
roll
xor
arpl
jecxz
add
roll
or
or
imul
repz
sbb
inc
jbe
pop
popa
inc
cmp
cmpsb
jb
mov
scas
mov
aad
or
loop
fidivs
enter
add
std
nop
sbb
add
sarb
in
fs
outsb
jno
dec
xor
scas
xchg
rcll
pushf
or
cli
pusha
jne
into
pop
push
pop
pop
ja
movsl
std
add
dec
loop
cmp
addr16
repnz
inc
leave
push
adc
or
jns
pop
adc
inc
decl
mov
jecxz
dec
gs
outsb
cwtl
popa
lahf
idivl
mov
mov
add
add
jmp
mov
fs
arpl
add
push
hlt
sti
sti
push
notb
add
fdivrs
enter
pop
xor
or
dec
xor
cld
or
imul
xor
mov
mov
mov
push
mov
jns
adcb
xchg
xchg
cmpsb
pop
aas
pop
jge
push
mov
mov
loopne
sub
jl
popa
cs
out
push
lods
mov
dec
lret
aaa
mov
add
add
jbe
inc
xchg
test
addr16
aaa
je
dec
sbb
mov
cmp
pop
icebp
or
rcll
mov
pop
jb
or
push
and
in
test
jmp
jbe
fsubl
push
es
sti
jg
stos
mov
sbb
lea
jo
movsl
mov
scas
mov
das
add
pop
inc
mov
jno
jne
rcrb
xchg
daa
iret
add
test
and
loope
push
or
nop
cmpsl
sub
jl
std
jp
movsl
flds
sbb
ds
adcl
in
mov
dec
mov
mov
jg
mov
cmp
insb
subb
movsl
and
sbb
test
and
dec
scas
xchg
mov
mov
fxch
and
ss
add
sub
and
fdiv
add
jns
adcb
adc
xlat
outsl
call
fnsave
int
pop
in
sbb
inc
loope
frstor
outsb
dec
push
scas
icebp
fsubs
sbb
decl
decl
movsb
clc
fsubl
es
fucomip
test
daa
or
add
imul
hlt
or
add
inc
jbe
jns
push
mov
mov
xor
mov
add
push
test
in
cmp
js
int3
pop
incl
es
or
lcall
adc
sub
fsub
sub
adc
xor
addr16
jge
pop
cmp
push
cli
pushl
jo
loopne
test
ljmp
push
lods
inc
ljmp
jne
fidivl
push
dec
sub
ret
cltd
xor
xor
iret
mov
jl
adc
add
add
xor
pop
fistpll
cmp
cmp
movsl
fldt
stos
test
cmp
das
rclb
fisttpl
add
pop
lods
ret
out
dec
ja
adc
cmp
sub
pop
push
add
fsubs
das
mov
negb
ret
out
lods
js
das
sub
pop
ret
adc
dec
ret
jo
loopne
je
aas
mov
ror
ss
push
pushf
cmp
cmp
jnp
sub
lret
jne
ficoml
add
sahf
repnz
mov
fnstsw
sarl
nop
jge
push
movsl
mov
pushf
stos
xchg
sub
fabs
stos
mov
sub
xorb
adc
mov
dec
arpl
ljmp
imul
or
jge
mov
mov
cmp
lock
jp
or
or
loop
lret
jecxz
fcoml
jl
sahf
jle
shl
push
cmpsb
mov
movb
je
sub
rcll
jns
inc
jge
cmp
add
fistpl
add
add
fstpl
daa
mov
lds
loope
mov
lahf
mov
push
mov
dec
iret
arpl
stc
testb
jae
lret
and
test
stc
pop
mov
cmp
push
hlt
sbb
and
cmp
dec
push
stc
call
or
cs
sbb
inc
lahf
leave
xor
push
fs
icebp
lods
movsl
push
fs
out
adc
mov
lods
lret
jl
sbb
mov
sub
bnd
or
das
mov
add
add
cld
adc
xchg
jae
popa
jo
add
dec
pop
std
push
fisubs
pop
pop
lcall
or
sub
push
das
adc
shld
idiv
mov
roll
fwait
inc
addb
pop
lea
add
loopne
cs
test
in
adc
imul
aaa
and
std
nop
pop
insl
insl
add
cmp
fisubrs
test
push
push
lock
pushf
in
enter
jp
jbe
js
sub
stos
push
fwait
outsb
outsl
neg
cmp
lahf
xchg
sbb
jb
lds
jae
stos
sub
adc
cmpsb
enter
add
sbb
add
push
push
jbe
mov
pop
inc
fnstsw
mov
pusha
int3
mov
pushf
jns
push
sub
jecxz
lea
sub
hlt
ret
xlat
in
xorl
xchg
or
mov
dec
xchg
sti
push
jl
sti
sbb
in
jge
cmp
xchg
sti
loope
ffreep
sub
insl
int
xchg
call
lahf
lahf
xor
xor
fstpl
add
in
les
movsb
cs
outsl
rcrb
jle
sub
inc
test
jnp
or
out
and
mov
imul
and
dec
lret
add
or
jmp
adc
and
addl
fstps
jle
jg
cltd
aas
add
add
es
test
repz
xchg
leave
popa
push
xor
and
cmp
js
fstpl
int
sbb
popa
mov
jle
fldenv
add
js
dec
pop
sub
add
fcoml
shr
loope
add
cmc
jle
pop
xchg
es
cli
inc
mov
pushf
pop
add
mov
scas
push
xchg
dec
stos
dec
out
dec
jle
sbb
lret
pop
xor
cmp
shll
push
xlat
xchg
loope
pop
out
insl
pop
sarb
pop
sbb
loop
iret
sub
and
ja
inc
jp
mov
jmp
je
cmp
cmc
dec
adc
or
jle
add
inc
jg
adc
mov
add
icebp
loope
or
xchg
xchg
ffree
push
push
dec
cmp
mov
lret
mov
out
pop
push
mov
sbb
addr16
xor
sbb
ljmp
cli
pop
or
pop
fcmovnbe
dec
push
cwtl
inc
aaa
jnp
je
ja
inc
sbb
and
cld
xor
repz
ret
mov
xor
fisubrs
movsb
ret
popf
mov
add
add
cli
push
mov
mov
cmp
enter
fldt
mov
and
fcom
mov
out
xchg
sarl
dec
das
xchg
dec
and
fldt
sbb
cmc
xchg
pushf
int
ja
rorb
adc
stos
test
cmp
pop
das
cmpl
inc
push
cmp
cltd
nop
std
lods
cmp
movsl
cmp
pusha
push
push
pop
insb
mov
out
test
jmp
xchg
fwait
hlt
add
lods
out
adc
ss
hlt
nop
inc
mov
mul
shrb
mov
fcomip
stos
in
mul
xchg
dec
mov
mov
lahf
lret
xor
aam
mov
mov
xchg
xchg
daa
es
rorl
lock
scas
movsl
fimuls
js
mov
outsl
sbb
xchg
jb
mov
inc
sbb
cmp
pop
int
pusha
cld
mov
test
inc
inc
sbb
adc
outsb
push
mov
mov
mov
gs
mov
cmp
add
xor
jo
mov
sub
mov
lcall
out
outsb
dec
xor
xor
call
adcl
cmpsl
test
sbb
ret
out
fdivr
mov
stc
sahf
sbbl
cwtl
push
add
add
xchg
jne
adc
daa
pop
dec
insl
cli
add
pop
xor
test
xchg
testb
add
mov
add
mov
mov
imul
sahf
and
jnp
flds
sti
mov
repz
test
and
dec
and
pop
and
xchg
into
push
aas
scas
xor
add
add
cmp
mov
subb
pop
adc
and
add
test
sub
mov
mov
sub
push
dec
mov
dec
aas
or
addr16
cmc
rolb
xor
dec
lds
inc
dec
xor
adcb
pop
xchg
cmc
data16
jge
repnz
lret
out
mov
fstpl
rcll
das
adc
pop
cmpsl
cmp
sbb
loop
mov
xor
sub
call
in
xchg
sbb
aas
add
jns
dec
fsubl
push
pushf
and
add
push
or
mov
sbb
pop
std
adc
pop
sub
inc
hlt
pop
lahf
inc
cmp
xchg
inc
sbb
add
sbb
aad
sub
jne
jl
mov
xor
jp
cmpsl
ds
cwtl
push
inc
mov
add
cmc
divb
cmp
mov
ret
rcrl
jge
mov
loop
das
ror
or
js
xchg
jge
in
add
out
sub
mov
mov
and
mov
in
cmp
push
lahf
das
jle
adc
or
mov
jg
sub
shl
cmc
or
jne
cmp
imul
andb
lret
imul
leave
mov
push
jno
ror
and
enter
mov
fdivrl
push
or
xchg
int3
sbb
and
or
in
lds
sarb
fwait
or
inc
mov
imul
adc
lock
ss
jae
dec
xchg
jno
push
xchg
sbb
add
add
aad
push
ljmp
rol
mov
push
inc
ss
pop
inc
pop
ficomps
call
rcll
pop
test
inc
or
xchg
into
aam
shl
add
hlt
je
pop
aaa
cmp
dec
jmp
imul
pop
inc
lds
inc
ds
inc
test
push
sar
scas
jmp
cmp
arpl
push
add
and
fcompl
mov
xor
add
add
mov
fists
icebp
ret
dec
mov
lock
cmp
jmp
into
ret
leave
inc
dec
adc
cmpsl
pop
push
xor
and
ljmp
sbb
int
jle
sahf
imul
and
sti
xchg
outsb
js
xor
bound
mov
mov
xchg
ds
lods
add
subl
fldt
and
xchg
xchg
cltd
pop
cltd
mov
xor
or
mov
scas
xchg
or
faddl
fs
dec
sub
cmp
lock
cltd
mov
add
add
shrl
mov
mov
cmp
or
xchg
ljmp
in
repnz
adc
in
dec
jl
or
pop
bound
jno
shll
adcb
les
bound
mov
push
adc
fiaddl
mov
add
add
incb
lret
pop
lahf
and
inc
inc
ja
cwtl
xchg
mov
pushf
test
dec
xchg
pop
ss
sarb
pop
lret
xchg
imul
cld
pop
jecxz
fwait
cmp
pop
mov
pand
