xor
mov
not
not
not
ret
adc
not
ror
lea
lea
push
push
lea
push
lea
push
call
cmp
jne
push
mov
add
pusha
ror
cmp
jne
xor
and
adc
push
xor
mov
neg
lea
cmp
jne
xor
mov
and
mov
adc
xor
xchg
shr
cmp
jae
lea
mov
add
neg
mov
mov
mov
lea
cmp
jae
lea
mov
mov
call
xor
cmp
jne
adc
shl
mov
mov
shr
mov
cmp
jae
lea
mov
lea
mov
xor
call
lea
mov
not
cmp
jae
lea
xor
add
add
lea
shr
not
xchg
lea
adc
xor
lea
push
push
push
push
push
push
push
call
cmp
jae
xchg
mov
shr
add
mov
pop
mov
shl
rcl
xor
dec
jne
shr
cmp
jne
mov
mov
lea
xor
lea
lea
neg
xor
rcl
cmp
jae
mov
shr
push
lea
mov
xor
neg
mov
lea
xor
lea
xor
mov
mov
cmp
jne
shl
mov
rcl
lea
xor
neg
mov
cmp
jne
xor
neg
ror
neg
lea
add
mov
mov
rol
xchg
xor
lea
xor
cmp
jne
xor
and
xor
adc
mov
mov
not
neg
adc
push
lea
push
push
lea
push
pushl
call
cmp
jae
xor
mov
xor
push
not
mov
mov
adc
adc
popl
xor
xchg
xor
mov
add
cmp
jae
xchg
lea
xor
not
lea
cmp
jne
movl
xor
mov
lea
neg
cmp
jae
mov
xor
popl
not
xor
lea
cmp
jne
neg
not
mov
lea
add
lea
neg
xchg
mov
cmp
jae
xor
and
not
lea
lea
not
rcr
neg
xor
mov
neg
xor
not
mov
cmp
jae
popa
leave
call
call
xor
cmp
jae
mov
xor
xor
neg
mov
xor
lea
mov
neg
push
call
xor
adc
xor
xor
cmp
jne
xchg
xchg
not
lea
rol
rcr
mov
cmp
jne
neg
ror
xor
xor
neg
add
lea
xor
not
cmp
jae
xor
mov
shl
xor
xor
cmp
jae
xor
and
lea
mov
mov
lea
cmp
jae
xor
add
rol
lea
mov
inc
jne
lea
not
lea
ret
not
movl
mov
xchg
lea
xor
xor
mov
lea
xor
rol
xor
mov
neg
shl
cmp
jae
shl
ror
and
mov
not
and
mov
xor
lea
neg
lea
push
push
push
push
call
push
cmp
jne
adc
mov
mov
xor
xor
mov
mov
xor
lea
cmp
jne
lea
lea
xor
rcr
lea
push
lea
push
push
lea
push
pushl
call
cmp
jae
mov
lea
adc
xor
lea
neg
xor
lea
mov
mov
xor
cmp
jne
mov
xor
rcr
mov
adc
shr
sub
xor
lea
xor
lea
xor
xor
cmp
jae
mov
not
add
lea
adc
cmp
jae
mov
neg
lea
rcl
movl
and
xchg
mov
not
ret
not
lea
cmp
jae
neg
and
xor
not
xor
and
movl
mov
not
movl
cmp
jne
mov
pop
imul
es
roll
mov
xor
fiaddl
xchg
jb
and
inc
cltd
sbb
icebp
stos
mov
push
loop
push
fwait
sahf
adc
sub
addb
ret
or
mov
loopne
pop
dec
or
mov
mov
or
sarb
int3
icebp
add
push
and
ja
imul
jno
sbb
int
push
imul
std
push
orl
push
insl
loopne
mov
inc
pop
mov
movsl
or
sbb
sti
sub
movsl
push
bound
rclb
push
xor
jmp
outsl
icebp
adc
mov
adc
ret
mov
sub
jns
push
imul
cwtl
stos
loop
sub
aas
test
add
sub
push
test
xchg
cwtl
push
cmp
jne
imul
push
push
mov
imul
data16
dec
xchg
scas
sbb
xchg
outsl
xchg
aas
test
sub
dec
xchg
shrb
enter
aas
test
call
ret
xor
add
push
jne
loopne
push
xor
push
jbe
jp
ljmp
test
pop
sarb
cmp
push
add
in
xchg
aas
repz
dec
pop
lods
in
cmp
shl
fistpll
push
lcall
insl
loop
imul
jbe
push
jbe
jp
xchg
xor
fidivrl
cmpb
jp
imul
icebp
rorb
fistpll
push
push
push
mov
aaa
icebp
sub
ret
roll
cmpb
fwait
adc
ljmp
lods
loop
adcb
and
sarb
fistpll
push
loopne
jle
mov
insl
or
int
dec
loopne
imul
lret
add
sahf
mov
mov
in
mov
dec
insb
mov
push
fs
arpl
push
fs
or
int3
push
out
pop
jno
in
xor
inc
imul
fs
ja
xchg
cltd
xchg
dec
inc
iret
sbb
call
dec
mov
mov
rorb
mov
or
icebp
mov
jle
mov
or
adc
arpl
push
mov
or
mov
inc
xor
mov
test
movsl
test
mov
dec
test
inc
shlb
int
ret
in
ficoms
add
jmp
aad
sbb
cmp
mov
mov
cmp
jecxz
pop
scas
cs
sbb
fimuls
outsl
mov
jp
mov
jno
sbb
xchg
pop
sti
test
cmp
xchg
sti
xchg
pop
addb
push
aad
mov
mov
inc
cwtl
sub
and
jo
push
pop
int3
or
popf
inc
sti
xchg
push
add
std
and
in
popl
sub
or
adc
aaa
mov
or
test
mov
aaa
movsl
dec
fldl
mov
push
pop
insb
mov
mov
dec
insb
mov
dec
jno
or
test
mov
jno
dec
sti
add
mov
push
jo
mov
out
jo
icebp
lds
mov
add
shlb
add
pop
jae
loop
xchg
out
or
pushf
push
sbb
sbb
imul
push
in
sbbb
push
jecxz
pop
inc
jbe
pusha
xchg
js
mov
js
mov
mov
rcrb
mov
test
jo
jmp
cmc
in
mov
insb
mov
popf
pop
ja
mov
add
mov
mov
inc
add
mov
repnz
jmp
dec
cli
xchg
pop
xor
or
mov
dec
xchg
mov
sbb
inc
insb
pop
pop
mov
mov
inc
insb
pop
or
jecxz
push
test
sti
xchg
cwtl
cmp
jecxz
or
in
add
pop
or
jecxz
outsb
sub
mov
fcoml
xchg
pop
inc
lea
push
mov
arpl
nop
push
insb
mov
push
mov
out
fldenv
adc
mov
stc
xchg
pop
addb
es
push
sub
xchg
inc
dec
lds
inc
inc
lds
inc
inc
mov
test
loope
in
scas
and
dec
push
leave
mov
jne
pop
int3
or
mov
add
cli
xchg
pop
loope
adc
ja
and
sbb
pop
push
lods
push
dec
push
push
ja
cs
je
call
jp
sub
or
loopne
dec
outsl
imul
imul
nop
jns
sub
adc
fnsave
jno
mov
loopne
out
gs
out
pop
int3
lock
cmpsl
outsl
cmovnp
xchg
pop
xor
pop
xor
outsl
mov
pop
scas
mov
sbb
mov
je
and
inc
sti
addr16
xor
lods
pushf
push
fwait
xchg
pop
inc
mov
nop
mov
sbb
mov
adc
movsl
or
push
cmpsb
jbe
mov
jmp
ds
inc
sbb
push
imul
xchg
divb
pop
push
mov
xor
repz
shrb
enter
insb
xlat
xchg
int3
mov
mov
add
dec
mov
test
test
lds
inc
or
adc
xchg
mov
sbb
hlt
push
imul
add
std
xor
outsl
mov
and
mov
xor
mov
sti
out
mov
stos
in
frstor
out
mov
outsb
mov
fbld
add
mov
mov
lcall
adc
out
fs
mov
mov
mov
add
inc
pusha
sub
or
jmp
cmp
mov
sbb
push
xor
mov
movsl
lea
cmpsl
fmul
scas
cmpsl
mov
xchg
jl
push
arpl
stc
sub
lds
test
popa
sub
movsb
stos
movsl
or
inc
add
stos
je
aam
cmc
les
shrl
xorl
or
int
dec
sbb
ret
insb
int3
pop
hlt
lret
and
ljmp
scas
xor
dec
out
std
mov
int
movsb
bt
cmpsl
xchg
pop
sub
shl
sarl
loopne
and
bswap
xor
negl
add
mov
lods
rorl
or
mov
ds
and
add
xor
stos
leave
push
or
sub
out
xchg
dec
fs
mov
in
mov
es
das
ljmp
stc
cmpsb
test
fdivrl
decl
xlat
xor
imul
push
out
inc
loop
stos
out
adc
add
sahf
in
xchg
subps
leave
fs
push
dec
outsl
xchg
mov
sub
outsl
bound
cmp
nop
jbe
pusha
in
jo
aad
popf
and
js
insb
or
xor
mov
outsl
jmp
xor
nop
inc
addl
fbld
cwtl
adc
hlt
or
popf
unpckhps
and
jb
push
or
daa
sub
int3
cmpl
sub
fs
out
push
push
lods
xrelease
pop
mov
adc
mov
ja
ret
orl
call
mov
add
sub
or
in
jns
xlat
mov
or
lcall
xor
loop
out
jg
aam
push
test
nop
dec
lock
leave
mov
xchg
lods
pop
int3
ja
scas
lods
push
dec
jecxz
aas
insb
jge
pop
xchg
xlat
cld
push
cmp
ljmp
repz
or
sub
ret
movsb
inc
jge
cmp
jo
rcrl
inc
xlat
mov
nop
mov
lods
inc
leave
data16
push
add
inc
int
das
mov
xor
mov
sub
cmc
xor
xlat
mov
dec
bound
jbe
nop
jns
push
movsl
stc
sbb
mov
cmp
xor
inc
aam
test
pop
mov
xlat
mov
xor
mov
out
xchg
aad
or
lahf
mov
pushf
movsb
stc
aas
stos
xchg
icebp
in
xor
xor
dec
fbstp
xor
sub
outsb
insl
and
xchg
add
int3
lods
mov
adc
xor
lret
xor
inc
ljmp
inc
and
out
jae
jb
insl
xchg
bound
je
mov
dec
add
push
mov
adc
std
inc
jmp
rcrb
dec
movsl
call
insl
ss
pop
int
push
add
adc
outsl
stos
dec
push
mov
cmp
ret
cmp
call
mov
cld
xor
decl
cmpb
ja
mov
sti
adc
pop
fsts
ss
cmp
inc
inc
dec
sbb
loop
sbbl
mov
cmc
or
xchg
test
push
add
push
out
cmp
xor
loopne
jmp
jno
xchg
gs
loopne,pt
lea
jnp
mov
fldl2t
add
add
inc
jo
cld
sbb
inc
xchg
nop
push
inc
sbb
push
or
or
ljmp
pop
mov
cs
jmp
lea
dec
and
mov
sbb
xchg
pop
loope
jae
mov
cltd
or
jg
mov
movsl
mov
inc
sub
jp
mov
mov
fstpl
lea
add
mov
clc
icebp
pusha
xchg
push
jo
inc
scas
stc
add
add
adc
xor
mov
test
or
out
jle
sub
scas
adc
or
lock
outsb
jnp
sub
dec
sbb
ds
xchg
mov
icebp
aad
pop
adc
mov
cmp
mov
test
add
sub
or
iret
mov
je
aas
inc
jb
jne
testl
mov
adc
mov
mov
aas
adc
gs
mov
jns
inc
jp
jmp
pop
mov
call
xchg
movsb
or
cmpsl
xchg
aad
imul
adc
out
jmp
or
mov
xor
inc
inc
outsl
pop
mov
sub
gs
xchg
cmc
sub
and
xor
pop
pop
mov
clc
call
dec
mov
fwait
inc
pop
aaa
popf
aas
add
fs
cmovns
mov
and
and
arpl
pusha
bound
mov
mov
dec
mov
jp
data16
shlb
out
cmpsb
out
iret
clc
lcall
pop
mov
cmc
xor
mov
mov
lock
cmp
insb
hlt
iret
sbb
repz
cmp
mov
push
test
jl
mov
cmp
push
push
stos
loopne
sub
fs
cmc
mov
enter
aam
inc
int3
adc
iret
push
outsl
in
dec
fwait
jae
sbb
std
xchg
or
push
or
stos
or
js
mov
xchg
adc
cmp
and
aad
or
orl
add
inc
or
subl
adc
out
pop
dec
sbb
mov
xchg
or
jle
push
test
adc
sub
add
dec
dec
add
and
inc
dec
sub
and
lods
cld
iret
iret
jbe
mov
pop
stos
enter
inc
mov
ret
mov
mov
sub
pop
sub
dec
sti
adcb
aad
add
jle
dec
clc
and
pop
rorl
lret
stos
scas
out
jb
popa
sbb
out
dec
mov
mov
test
insl
addb
jno
mov
add
shrb
fwait
rorl
imul
jecxz
mov
mov
adc
shll
adc
push
lods
fldcw
test
sahf
outsb
sub
or
cld
lock
adc
out
mov
adc
xor
cld
or
push
scas
adc
repnz
sub
lods
enter
mov
sbb
js
and
dec
xor
mov
or
in
test
loop
xor
cltd
mov
movsb
mov
adc
xor
outsb
scas
push
sub
mov
jo
add
stos
loopne
out
pop
mov
shll
lea
clc
test
sahf
push
xor
imul
dec
cmp
push
fists
sbb
sub
pushf
and
xchg
xchg
xor
inc
or
jne
and
orl
test
dec
cmpsb
aad
test
or
in
aas
scas
add
daa
cld
inc
movsb
add
sbb
jno
or
mov
mov
jmp
test
aam
and
fld
imul
out
sahf
rolb
cmp
lret
insl
jae
out
mov
inc
incl
lods
pop
add
dec
sahf
inc
mov
call
push
add
out
es
lea
cld
test
mov
xchg
dec
pop
inc
pop
dec
cs
test
cmp
push
fs
pop
lods
enter
inc
dec
adcl
adcb
pop
dec
lahf
inc
lods
or
mov
or
ja
movaps
in
je
aas
inc
mov
cwtl
in
cmp
test
pop
xlat
lds
mov
adc
adc
xchg
fdivrl
and
shlb
std
dec
les
cs
repnz
out
popf
push
pop
adc
enter
sbb
rorl
mov
mov
in
mov
fldcw
xor
cmpsl
cmpsb
mov
or
adc
xchg
mov
xor
loop
add
jmp
adc
mov
movsb
es
jne
icebp
sbb
mov
ret
cmpsl
inc
xor
jle
inc
xchg
cmp
aam
cmpsl
in
ds
mov
pop
in
inc
sub
mov
int
mov
and
mov
sub
jno
cmpl
dec
scas
fwait
es
jle
jl
lcall
xchg
mov
clc
ljmp
cld
mov
cmp
rol
cmp
lods
int
fnsave
enter
cmp
ret
dec
mov
repz
sbb
mov
sti
dec
insb
and
stos
outsb
enter
push
repnz
pop
jl
or
pop
nop
dec
xchg
sub
xchg
pusha
out
outsl
hlt
cld
dec
mov
mov
pop
nop
dec
inc
mov
pop
xor
.byte
cld
