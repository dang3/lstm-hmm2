mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
mov
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
add
push
pop
pushl
lea
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
ret
push
mov
mov
sub
push
mov
mov
imul
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
mov
cmp
jb
lea
push
xor
mov
test
jbe
push
push
push
pop
sub
mov
mov
mov
lea
lea
mov
ror
imul
not
xor
mov
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
test
je
push
pushl
pushl
pushl
call
mov
mov
push
call
dec
jne
pushl
pushl
pushl
call
mov
pop
jmp
mov
pop
ret
jmp
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
push
push
push
mov
push
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
mov
push
mov
push
rol
push
mov
test
je
mov
jmp
push
call
mov
mov
add
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
push
push
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
lea
mov
pushl
and
pushl
push
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
jmp
fwait
and
mov
fs
jne
vdivsd
and
js
pop
xchg
sbb
dec
push
adc
stos
bound
rclb
xor
inc
lock
push
ss
push
adcl
fcmovu
adc
inc
and
adc
xorl
and
fs
jne
sbb
cld
mov
lret
pop
xchg
sbb
dec
push
adc
stos
bound
jbe
dec
lds
fbstp
jnp
and
adc
mov
in
scas
jge
or
add
cmp
push
mov
outsl
movsl
mov
das
mov
fwait
aaa
dec
mov
testb
aaa
popa
add
movhps
sub
xor
stos
stc
fsubr
icebp
loopne
rcr
sti
aaa
hlt
push
imul
pop
lret
bound
jb
insl
jne
push
adc
lahf
inc
test
into
adc
push
scas
stc
add
loopne
dec
xchg
cmp
push
addl
cwtl
fldl
lock
cltd
jge
xchg
mov
cwtl
cmc
ds
sub
popa
xchg
arpl
cmpsb
test
hlt
hlt
gs
adc
mov
cmp
shlb
pop
fwait
jae
mov
xlat
sahf
aaa
or
aas
aas
jge
pop
pop
fstl
pop
add
stos
mov
xor
and
jae
and
or
sahf
xor
iret
ret
aaa
lcall
shlb
outsb
fnstenv
mov
mov
or
mov
push
sub
sbb
dec
fs
mov
iret
aad
cmpsl
out
loopne
or
jbe
sbb
shl
std
lcall
push
xchg
add
add
xchg
scas
inc
sub
cvtpi2ps
loope
ret
push
leave
divl
dec
xlat
or
pop
pusha
jae
call
inc
add
add
inc
jge
adc
cmp
mov
je
jnp
mov
enter
loopne
sub
adc
imul
xor
lret
adc
dec
cs
jo
scas
daa
and
call
pushf
stc
dec
adc
inc
jle
in
out
or
mov
and
push
push
int3
mov
cmp
jne
xchg
jns
lods
mov
pop
sub
or
mov
add
add
ret
std
pop
sahf
repnz
imul
mov
lods
ljmp
xor
insb
lock
push
pop
ljmp
or
xchg
inc
dec
push
or
mov
cwtl
ficoms
sbb
mov
inc
dec
jne
mov
sbb
das
addr16
adc
push
imul
int
ds
mov
in
pop
outsl
xchg
add
sub
mov
negl
mov
push
or
movsb
popa
mov
xchg
fistps
scas
add
sarb
movsl
call
mov
sbb
jbe
fwait
or
mov
mov
aaa
movb
cmpsb
xchg
push
mov
mov
push
mov
sbbb
jb
sahf
fcomip
mov
jmp
jnp
jbe
js
ja
dec
andl
cltd
inc
inc
cmpsl
outsb
out
jmp
out
push
jae
mov
xchg
inc
cmp
js
test
xor
cmp
out
mov
adc
pop
insb
mov
sub
push
mov
orl
dec
dec
ret
adc
xchg
add
lret
lock
aad
inc
out
mov
xchg
jle
clc
xor
inc
addr16
push
push
out
scas
lret
stos
mov
push
xlat
add
add
jg
pop
push
mov
mov
push
cmp
sub
popa
imul
test
mov
push
ret
sub
sbb
and
mov
popf
dec
movsl
inc
cwtl
inc
pop
aam
sbb
lret
inc
lahf
sub
out
sahf
icebp
scas
mov
sbb
xor
sub
mov
sub
test
add
add
add
add
dec
mov
xchg
dec
loopne
push
push
or
xor
pop
cmp
xor
push
cmc
and
popf
popf
dec
sub
and
adc
xchg
xchg
out
movb
inc
jnp
es
gs
adc
cmp
jl
adc
lcall
xchg
xchg
jmp
cmp
sub
lret
and
iret
sub
arpl
add
jne
add
loop
int
loop
out
or
jns
insb
sbb
daa
pop
dec
aad
dec
xchg
es
push
outsb
hlt
sarl
and
mov
sub
test
scas
xchg
and
mov
and
xchg
outsb
ljmp
sahf
cmp
pop
movsb
push
neg
jnp
sub
loopne
sub
daa
and
pop
jmp
and
push
adc
lahf
lret
stos
and
adc
add
outsl
sub
dec
cmp
xchg
and
mov
test
lret
mov
cmp
popa
push
push
push
dec
shrl
push
insb
xchg
cmp
or
sbb
pop
shll
dec
ja
stos
sbb
xchg
mov
push
inc
jnp
imul
or
mov
iret
data16
in
or
sub
stos
gs
insl
insl
lret
cmpl
jae
loopne
loopne
icebp
cmp
lds
mov
pop
pusha
or
mov
jae,pt
std
sub
int3
jns
or
xor
sbb
push
sub
pop
xor
stos
scas
sti
mov
scas
outsb
jg
sub
das
je
and
jp
call
pop
sbb
lea
out
or
cmp
loopne
loopne
jne
or
pop
xor
cmp
pop
jmp
inc
push
adc
dec
push
idivb
dec
and
cs
xchg
dec
ret
jns
or
pop
loopne
jns
in
pop
pop
push
out
outsb
inc
fistpll
repnz
push
push
cs
repz
xor
or
nop
push
rcrl
jo
bound
mov
sbb
jne
jb
push
mov
dec
xor
loop
jns
and
fcmovnbe
fprem1
add
add
pusha
out
adc
ja
mov
scas
jmp
dec
ss
sub
xor
push
pop
mov
push
fwait
popf
xor
mov
lock
in
js
imul
and
or
clc
arpl
out
in
cmc
mov
roll
xchg
dec
mov
add
mov
test
sbb
mov
ljmp
stos
pop
add
pop
pop
xor
add
jmp
gs
daa
mov
fistps
mov
mov
jp
cmpsb
sbb
pop
idivl
fwait
sub
lods
pop
dec
cmp
jns
lods
lods
xor
test
xor
push
mov
dec
xchg
pop
xchg
or
inc
nop
add
add
dec
fsts
fimuls
cmp
popa
cmp
push
shr
mov
fstpl
insl
and
ds
int3
add
xlat
push
in
mov
mov
pushf
sbb
pop
mov
movsl
or
ror
xor
jb
subl
iret
data16
sti
inc
jno
out
stos
cmp
bound
mov
ljmp
dec
or
mov
dec
cwtl
stos
jae
or
cmp
inc
imul
aad
js
mov
mov
mov
cld
cmp
inc
push
cwtl
mov
pop
xchg
mov
push
dec
inc
xchg
xlat
jae
sbb
xchg
and
xor
clc
sbb
sbb
in
int
aaa
jb
imul
or
pop
mov
jecxz
dec
xchg
ror
pop
movsl
adc
movsl
sub
stc
push
mov
adc
mov
repnz
xchg
movsl
bound
hlt
push
push
or
mov
mov
movsb
and
and
rorb
imull
lods
push
and
mov
sti
jns
loope
or
mov
mov
ret
sub
pop
and
and
inc
dec
std
outsb
dec
lods
cld
sbb
out
add
pusha
lret
stos
and
xchg
aas
xchg
dec
inc
mov
jle
lcall
into
dec
and
mov
fucom
mov
adc
mov
mov
aas
fldenv
push
enter
fcoml
or
es
xchg
rcll
dec
cmp
pop
sarl
adcb
jmp
or
sbb
lods
mov
mov
sbb
mov
sub
or
mov
mov
inc
push
add
pushf
gs
or
or
adc
xor
push
push
ja
ss
adc
enter
out
scas
mov
test
call
mov
add
add
pop
adc
jbe
dec
sbb
add
jg
mov
shll
test
xlat
cwtl
rcrl
inc
adc
inc
push
inc
test
inc
lods
ret
orl
stos
das
roll
rorb
rorb
pop
loopne
call
ret
inc
xor
in
cmp
loop
nop
jge
xchg
mov
in
jl,pt
lock
xor
jbe
or
rep
sbb
icebp
outsl
adc
pushf
push
fsubl
cmp
adc
cld
adc
and
popf
cs
jecxz
pop
dec
xchg
pusha
or
inc
adc
fadd
repnz
mov
pop
ss
xor
movsl
aas
mov
cltd
xlat
je
mov
test
cmp
cmp
mov
mov
popa
lds
fidivl
pop
xchg
pop
nop
push
mov
outsl
stos
cli
xor
inc
and
sub
inc
pop
pusha
mov
ficoml
add
add
aas
dec
cmc
sbb
lods
mov
rcll
jle
add
sbb
mov
add
and
inc
mov
push
mov
xor
fnsave
test
pop
test
faddl
clc
jge
push
out
jnp,pn
outsb
and
mov
hlt
das
insl
in
fdivl
fcomps
loopne
push
sti
dec
addps
add
add
add
mov
sbb
cmc
push
in
aaa
push
ror
icebp
pop
pop
mov
ret
in
pop
xchg
daa
pop
sub
loopne
ljmp
mov
jl
xchg
mov
add
aam
jo
xor
jge
cmp
ret
xor
jno
or
mov
xchg
mov
stc
outsb
cli
pop
ret
add
xchg
sbb
xlat
into
jno
push
mov
sbb
iret
pop
rcrw
jne
xor
adc
sti
inc
adc
lock
xor
shlb
lods
ds
lock
inc
insl
in
lret
fadd
int
cmc
in
sar
scas
lret
rcr
imul
and
jne
mov
aas
push
xchg
xor
addl
cmpb
add
add
add
add
cli
mov
mull
test
mov
shlb
dec
pop
scas
dec
mov
inc
lods
fdivrl
stos
stos
orb
xchg
mov
orl
sub
inc
cs
in
push
fisubl
pop
mov
mov
mov
les
dec
and
dec
mov
sbbb
call
jp
mov
sub
add
movsb
imul
cmpsb
inc
cmpsb
mov
sbb
push
jg
and
ja
stos
fdivl
lea
int
sbb
fnstsw
xor
ret
cmp
mov
mov
fidivs
or
mov
add
fucomip
xchg
jne
fwait
or
aad
jne
lahf
xor
imul
mov
dec
out
cwtl
pop
gs
imul
mov
push
leave
aad
add
add
cmp
jo
mov
hlt
mov
xor
push
into
pop
lods
inc
sbb
mov
inc
mov
sbb
push
xchg
jmp
xor
mov
xor
es
ret
add
lahf
call
test
repnz
push
mov
test
ret
jmp
lret
fwait
cld
sti
ret
pop
sti
jg
call
and
mov
out
cmpsb
push
and
dec
sub
add
add
sub
push
push
fimuls
movsl
dec
jle
push
mov
repz
xchg
leave
add
mov
jae
sar
popf
clc
cmp
adc
aam
cmp
bound
sub
xor
sbb
test
fs
roll
jb
movsb
push
add
push
rolb
inc
sub
pop
mov
notb
dec
daa
push
and
xchg
push
daa
pop
loopne
flds
adc
dec
stc
cltd
add
add
adc
sub
fwait
xchg
lock
lret
xor
pop
test
adc
xchg
cmp
mov
inc
adc
xchg
sti
movsb
push
cmp
xchg
pop
push
pusha
mov
xchg
shrb
ljmp
xchg
hlt
loop
out
test
imul
pusha
jl
aaa
movsl
jmp
test
push
inc
dec
push
inc
movsl
aad
test
pop
mov
cmc
jbe
and
add
or
clc
iret
mov
cmp
jmp
pop
xor
cld
xor
jo
fstpt
nop
loop
outsb
sbbb
cmpsb
inc
fldl
jo
pusha
sub
bound
nop
xchg
adc
aam
aam
xor
cs
cmp
dec
mov
aam
bound
adc
stos
lahf
adc
inc
dec
dec
movsl
ja
add
mov
xor
mov
inc
addr16
mov
push
les
push
ds
mov
popf
mov
movsb
ss
mov
pop
adcb
mov
mov
cmp
sub
jmp
adc
mov
inc
shr
movsl
mov
loopne
inc
out
out
add
mov
sbb
xor
mov
jecxz
jl
adc
mov
insl
cltd
and
adc
cmp
mov
push
stc
out
mov
scas
mov
xchg
cmpsl
aam
or
adc
add
cmpsb
pop
xchg
sbb
xlat
and
push
jae
clc
inc
dec
rorl
sbb
in
aas
imul
xchg
subl
or
enter
sbb
push
xchg
adc
in
movsl
enter
stos
jp
add
add
xor
mov
adcl
shr
pop
pop
add
jae
inc
pop
mov
mov
inc
sbb
es
sahf
sti
xchg
push
add
data16
lea
jp
test
orb
es
test
cmp
clc
mov
adc
mov
or
imul
mov
pop
xor
jg
add
popl
adc
pop
sub
stos
sub
rcl
inc
pop
ss
jnp
mov
adc
add
ficoms
mov
pop
jp
es
cmp
add
fwait
shrl
jg
sbb
jmp
les
and
xor
dec
sbb
sub
sahf
loope
and
mov
notb
lods
roll
fsubrl
cmp
add
shll
std
pop
std
mov
adc
jb
jns
in
jne
in
fbstp
aam
cmp
inc
lea
push
pop
std
dec
mul
cwtl
mov
pop
add
cmp
and
fdivl
stos
sbb
incb
ret
shrl
jno
cmpsl
fwait
cmp
test
xchg
ror
pop
ss
sbbl
jmp
fcomi
mov
add
sub
push
pop
xchg
push
jle
movsb
xchg
adc
clc
mov
and
pop
xor
and
pop
inc
loop
sarb
mov
add
mov
lret
test
stc
fwait
mov
xor
inc
xchg
dec
cmp
mov
push
pop
xchg
or
pop
popf
mov
mov
mov
xchg
mov
xor
and
fmuls
inc
aas
loope
lret
fidivl
inc
fcom
lock
push
stos
dec
cmpsl
mov
inc
jmp
cmc
ret
lods
push
fstpl
insb
pop
imul
inc
jp
inc
mov
in
iret
xchg
mov
in
das
imulb
inc
jmp
call
decb
imul
jb
add
sbb
push
loop
daa
xchg
jmp
and
je
sti
mov
out
lcall
arpl
mov
jno
lret
mov
jnp
push
or
sub
pop
jns
stos
dec
push
adc
cld
fwait
loope
pop
dec
scas
mov
lret
adc
fnstcw
cmovno
arpl
pop
hlt
cli
sbb
or
xchg
decb
xchg
cmp
mov
dec
sub
ja
mov
in
data16
adc
jo
in
int3
mov
pop
and
aaa
fs
aad
imul
movsb
int3
sbb
scas
cmp
lea
or
sub
fisubs
mov
lret
adc
sub
cmp
adc
test
add
ljmp
mov
fnsave
cld
adc
add
add
adc
out
jecxz
lea
imul
mov
dec
pushf
les
out
insl
adc
out
addr16
dec
push
jbe
xchg
jbe
ret
pop
jo
lret
xor
iret
adc
adc
pop
fs
pop
dec
jp
xor
cld
movsb
data16
or
or
pusha
mov
cmp
test
stos
adcl
xor
add
pop
cmpsl
mov
adc
aad
cmc
jmp
popa
shl
cmpsb
nop
push
push
sub
mov
mov
sub
fwait
jle
test
jge
xor
sub
dec
inc
aam
stc
hlt
into
cmc
adc
cmp
mov
pop
mov
mov
in
lret
lcall
add
mov
lock
out
stc
inc
cli
and
shll
adcb
scas
add
xor
insl
aas
std
lods
loope
es
push
imul
or
xor
pusha
mov
outsl
mov
mov
mov
dec
cmpsb
mov
lret
shrl
scas
mov
mov
or
xor
mov
flds
push
insl
xchg
out
jp
add
push
pop
mov
cmp
jp
inc
in
xor
or
pop
add
mov
fdivrs
iret
iret
pop
fwait
push
enter
jmp
push
inc
fisubrl
pop
push
pop
mov
roll
in
mov
xchg
push
sub
cmp
push
or
jl
sub
adc
or
dec
movsl
in
loop
xchg
ja
sub
add
mov
mov
cwtl
inc
inc
test
or
fsubrl
fwait
or
leave
ret
cmp
cs
add
mov
leave
movsl
jb
mov
push
rolb
push
adc
inc
xlat
in
lods
test
jp
mov
sbb
mov
gs
outsl
mov
jle
cmp
inc
dec
mov
fbld
inc
hlt
int
nop
mov
insb
xor
les
push
pop
pop
cmp
mov
and
repnz
add
cmpsl
out
jo
mov
mov
ficompl
jecxz
mov
add
mov
inc
adc
xchg
popf
sbb
cmpl
pop
xor
jbe
lcall
lds
xor
push
stc
les
sbb
scas
jbe
mov
insb
add
inc
and
pop
cmp
ret
negb
stos
popf
popl
clc
pushw
dec
gs
mov
mov
xor
test
sbb
hlt
add
jns
lcall
loopne
push
stos
ljmp
cli
push
add
add
add
add
and
aaa
pop
xchg
or
mov
cld
jp
xor
push
aad
mov
xor
mov
jge
mov
push
shlb
mov
int
cmp
scas
mov
mov
loopne
test
int3
fsts
cmp
mov
shlb
ret
mov
lods
outsl
xor
xchg
push
jnp
popw
and
sub
scas
mov
ljmp
add
add
add
add
jnp
mov
cmpsb
outsl
lret
cltd
jg
mov
push
es
jbe
cld
mov
movsl
test
out
shlb
jge
xchg
insb
lcall
or
push
xchg
pop
mov
and
test
loopne
fisubrl
mov
xchg
push
dec
icebp
xor
add
out
pop
int3
cmp
daa
add
xchg
sahf
pop
in
inc
xchg
lret
sbb
out
clc
xor
test
fadd
jne
std
dec
mov
xchg
push
mov
mov
call
adc
std
rsqrtps
repnz
cmc
rcll
mov
int
push
cmpl
pop
or
push
jp
in
mov
xor
push
mov
lods
adc
call
xlat
xchg
push
cmp
xchg
pop
xchg
faddl
add
clc
or
or
sbb
mov
jo
testb
xor
jecxz
movsb
aam
fwait
mov
sub
sub
and
lcall
cmp
lret
add
sub
cld
cmpb
mov
adc
adc
cli
xchg
movsb
mov
mov
rcr
and
mov
test
popa
fcomi
add
aam
je
dec
jp
mov
or
add
add
mov
adc
or
into
ljmp
lcall
iret
scas
sbb
mov
ljmp
jae
push
leave
pushf
fistpl
push
movsb
lock
xchg
cmp
add
push
stos
inc
adc
sbbb
cld
pop
das
mov
or
sbb
dec
push
add
xchg
repz
insb
fsubl
mov
xchg
int3
mov
push
add
movsl
xchg
in
add
call
cltd
jg
xor
push
out
xlat
pop
bound
xor
into
push
pop
add
outsb
pusha
jne
jmp
jp
jecxz
add
jg
ficomps
orl
rclb
sbb
mov
dec
jmp
imulb
mov
sbb
pusha
push
enter
clc
pusha
leave
stos
std
data16
jmp
scas
sub
pop
fs
sub
out
bound
std
mov
mov
mov
sbb
inc
sbb
mov
xor
xchg
push
push
adc
pop
push
aaa
ret
push
ficompl
sub
call
adc
and
adc
insb
arpl
xor
and
xchg
test
cltd
inc
add
imul
int3
test
jge
jbe
pop
dec
imul
push
and
mov
mov
je
push
out
scas
push
cmp
push
sub
xlat
cltd
popa
cld
cmpsb
outsl
lds
xor
aam
clc
clc
arpl
push
mov
and
jg
adcb
mov
cmp
add
shll
and
stos
popf
lahf
sahf
inc
mov
xor
mov
sti
pusha
push
and
rcrl
fcoml
popf
and
add
mov
cmp
sub
es
adc
or
sti
push
cmpsl
mov
mov
jecxz
sbb
sub
xor
das
dec
enter
mov
jl
aam
divl
adc
ja
pop
and
cmp
pop
sti
stc
icebp
cltd
sbbl
test
out
stc
jb
jae
mov
mov
bound
cltd
cmpb
aaa
cmpsl
ljmp
test
imul
add
add
add
xchg
insb
xor
xor
pop
lahf
cmpl
dec
and
sub
std
xchg
aam
inc
pop
mov
sbb
mov
sbb
sarb
sbb
inc
mov
test
add
loop,pn
or
jne
and
jno
jl
mov
mov
imul
inc
stc
decl
loopne
outsb
adc
movsb
sbb
mov
add
mov
in
sbbb
rcll
sarb
popa
inc
push
pop
mov
movsb
out
inc
enter
and
clc
push
push
mov
rcrl
add
ljmp
inc
popf
lret
sbbl
or
test
test
sbb
mov
iret
mov
pop
aaa
inc
fistpl
das
sub
sub
out
mov
into
sahf
add
add
mov
adc
sub
decb
add
and
xchg
sub
rolb
cmp
xor
jg
mov
pop
mov
stos
clc
movsb
jge
dec
popf
gs
jne
adc
stos
inc
jl
cmpl
cmp
jle
aam
xor
sti
push
test
add
push
adc
lret
add
sti
pop
idivb
add
lods
loope
push
mov
xchg
daa
jns
or
les
jecxz
ss
add
fsts
xchg
popf
fbld
mov
push
or
or
mov
out
popa
in
into
or
repnz
jne
aaa
jae
les
dec
inc
enter
cmp
stos
sbb
jb
mov
stc
cmpsl
mov
decb
pop
sbb
xor
or
fbld
pop
mov
xchg
add
mov
inc
cmp
xchg
pop
or
cmp
jge
les
jge
push
pop
outsl
mov
and
call
cmpsl
in
xchg
xchg
iret
push
lcall
leave
push
mov
jb
or
ds
mov
or
or
and
es
mov
into
imul
xchg
and
loop
pushf
mov
sbb
mov
repnz
dec
fisubs
out
outsl
insb
cmp
and
outsb
test
imul
and
add
mov
xchg
xor
push
stos
cmp
ja
or
arpl
jge
sbb
push
scas
add
dec
inc
inc
fwait
jb
pop
sub
outsb
jae
inc
push
push
and
out
inc
or
orl
add
test
bound
jbe
mov
nop
subl
add
add
add
add
pop
mov
inc
xor
pop
test
push
sbbl
mov
add
ret
loop
cmpsb
lds
fsubrs
push
push
and
out
gs
dec
es
dec
fsubrs
mov
pop
inc
int3
jnp
ljmp
je
sub
cmp
aam
mov
dec
rcrl
xchg
ss
sbb
in
jecxz
stos
jno
inc
adc
int
jge
dec
dec
faddl
sub
sbb
cmp
pop
push
pop
inc
push
aaa
mov
ret
fidivrl
jge
jb
push
mov
mov
leave
mov
shlb
xadd
mov
frstor
aam
cli
jbe
imul
sbb
inc
in
xor
in
adc
cmovne
add
cltd
mov
pop
mov
in
dec
fnstsw
pop
adc
insl
sub
popf
das
cmpb
rolb
xorl
pop
scas
leave
xor
out
sti
ljmp
in
cmpsb
js
xor
mov
xor
xor
dec
jmp
xor
mov
sahf
sub
aaa
loop
scas
out
loope
mov
outsb
mov
and
xchg
mov
shrb
sub
sbb
and
add
sbb
mov
loopne
push
jg
pop
aas
dec
cwtl
mov
cld
addr16
mov
fiadds
loope
bound
or
inc
scas
sahf
mov
dec
loopne
mov
aad
mov
iret
orl
and
jecxz
push
jp
pop
sub
sbb
out
int3
enter
outsl
mov
scas
fsubrl
pop
test
shlb
aam
xchg
je
loope
jge
push
outsb
mov
sarl
add
std
mov
popf
lahf
mov
loop
stos
lahf
shll
out
mov
xchg
pop
lret
ret
mov
ret
mov
fwait
mov
xor
mov
add
inc
bound
jne
in
sbb
xchg
mov
xchg
enter
inc
fnstenv
sbb
sahf
inc
inc
add
clc
enter
sbb
inc
ds
scas
and
sbb
mov
adc
test
adc
movsl
add
dec
adc
fisubrs
push
cmp
adc
pop
leave
imul
imul
int
insl
arpl
add
sbb
xchg
popa
in
inc
movsl
enter
aad
mov
test
into
sub
xor
inc
sbb
scas
or
mov
inc
xchg
pop
sbb
and
xchg
and
push
dec
ljmp
loopne
mov
xor
jge
aas
dec
fidivrs
fucomip
pop
pop
cmp
in
call
add
add
add
add
pusha
sbb
rorl
cld
mov
lcall
jp
js
test
xor
mov
mov
ljmp
imul
fiadds
mov
pop
mov
daa
inc
sbb
call
test
sbb
mov
das
cs
adc
out
test
in
xchg
frstor
lods
pop
push
dec
sbb
xchg
pushf
mov
icebp
iret
es
mov
cmpsb
decl
sbb
sub
xchg
out
dec
stos
es
faddl
or
data16
jo
leave
cmpsb
dec
inc
in
orb
ljmp
negb
jmp
or
mov
cmpps
add
push
movsb
xor
add
xorb
push
mov
pop
fcmovb
push
mov
add
cs
cmp
pushf
jbe
imul
cmp
and
push
imul
add
xor
pop
gs
push
mov
or
mov
ss
fs
pop
jg
addr16
cmp
jg
and
loope
inc
in
dec
push
mov
ss
dec
pushf
and
mov
mov
push
add
inc
cmc
test
mov
rolb
hlt
cmp
test
mov
jg
dec
int
push
pusha
adc
jae
stos
xor
xor
orb
popl
lock
jae
xlat
js
fdivrl
out
sub
test
rorb
push
xlat
adc
adc
test
mov
and
je
es
inc
push
pop
movsl
addr16
ror
cmp
mov
cmp
lods
push
add
lds
mov
xchg
adc
aad
in
into
bnd
cltd
fwait
pusha
cltd
cmp
inc
mov
xchg
add
jnp
jno,pn
popa
rep
jmp
test
sub
test
mov
or
mov
stos
xchg
mov
aas
or
hlt
xchg
ret
inc
push
outsl
xor
mov
loope
pop
xchg
mov
or
mov
xlat
or
mov
jae
xchg
in
popa
inc
mov
fildl
pop
cmp
lahf
lret
pop
adc
cmc
xor
loope
add
pop
loope
pop
bound
int3
jmp
or
gs
mov
sbb
movsl
dec
xor
push
push
repnz
ljmp
imul
shll
call
das
cmp
daa
js
and
inc
cmp
add
loope
jnp
ret
in
loope
add
movhps
jg
push
aad
iret
cmpsb
aad
repz
xchg
or
scas
mov
stos
inc
lcall
cmpb
in
fdivrs
sbb
les
es
rcrb
iret
movsb
pop
mov
add
std
faddp
sahf
pop
jmp
xchg
jnp
movsb
daa
jno
or
dec
mov
xchg
xorb
xor
mov
mov
push
jl
and
addr16
add
xchg
jmp
mov
gs
movsl
bound
jo
jne
lods
mov
sbb
std
cwtl
je
filds
or
add
add
jle
imul
sub
out
xchg
mov
push
iret
enter
push
adc
xchg
ds
push
hlt
mov
xchg
jbe
push
rorb
mov
cmpsl
out
adc
mov
aas
shrb
notb
add
inc
xchg
inc
outsb
and
pop
pop
and
sti
js
call
aam
jno
insl
hlt
test
pop
dec
cmp
stos
add
adc
es
inc
daa
mov
dec
push
daa
test
cmp
testl
add
js
mov
mov
xor
test
mov
fsts
jle
push
pushf
sbb
dec
loopne
mov
imul
push
fcomp
mov
xchg
ds
outsl
jo
xchg
enter
xchg
mov
sbb
jne
test
dec
or
add
push
pop
jo
sub
stos
pop
push
sub
adc
jae
xchg
sti
inc
ds
jmp
cmp
push
shlb
pushl
rcrl
cwtl
jns
lcall
and
mov
loopne
movsb
add
scas
nop
xchg
scas
mov
sbb
cld
sub
inc
mov
xchg
pop
std
push
in
xchg
or
ret
call
xchg
mov
add
cs
or
lret
jl
ljmp
dec
fistpl
loopne
loopne
xchg
bound
out
fs
xchg
sbb
sub
mov
mov
leave
ficoml
cltd
stos
popf
cmp
and
and
sub
add
outsl
dec
gs
es
inc
or
xchg
push
add
jbe
mov
add
cmp
push
test
push
jbe
pop
test
ljmp
or
out
imulb
out
movsb
sbb
or
xor
mov
out
push
fadd
rorb
mov
adc
cmp
cld
aam
jnp
fisubrl
in
imul
mov
xor
push
mov
mov
testb
jmp
jecxz
sti
mov
fs
out
adc
pop
clc
add
ficoml
mov
add
add
popf
pop
insb
sub
push
inc
xor
daa
push
sub
mov
cld
movl
loopne
fiadds
xchg
push
fildll
jle
sbb
fbld
popf
jp
or
ljmp
enter
cmp
add
divl
mov
ret
push
adc
in
lods
sbb
sub
pop
js
ret
push
add
sti
pop
addl
push
cmp
in
cmovae
push
push
jp
das
mov
dec
mov
mov
or
jl
xchg
push
and
call
inc
daa
xlat
cmp
cs
gs
in
fs
js
pop
pop
loop
adc
pop
movaps
add
xor
orb
bound
out
xchg
xchg
and
adc
mov
arpl
adc
fcomp
subl
pop
mov
add
sbb
jnp
and
xchg
adc
sub
loope
stc
mov
sub
inc
xor
ss
lods
mov
test
jnp
cltd
fwait
hlt
out
sbb
imull
mov
fisubrl
out
xchg
cmp
xchg
xchg
iret
roll
sub
or
pushf
in
adc
sub
sbb
decb
addr16
lahf
mov
add
pop
pop
inc
add
add
in
arpl
je
shl
inc
pop
fcmovne
jmp
movsl
push
push
ret
sub
jo
or
jg
sahf
pop
cmpsb
cmp
iret
fnsave
jecxz
fdiv
jb
push
push
int
or
fidivrs
int3
pop
inc
inc
push
xchg
sub
pop
add
pop
inc
cmp
sbb
sti
inc
sbb
lds
out
fs
inc
loope
aas
hlt
dec
fdivrl
imul
or
sub
adc
adc
add
jg
mov
outsl
cmp
dec
lcall
adc
mov
loopne,pn
mov
int
mov
faddl
pop
call
shl
jmp
mov
int3
adcb
pop
loop
adc
lret
clc
push
push
inc
sbbb
rol
std
int
dec
inc
push
adc
pop
inc
mov
fdivs
cmp
jae
mov
pop
mov
and
hlt
lcall
add
add
pusha
dec
sub
sub
pop
mov
jmp
cld
mov
and
add
mov
aad
loope
stos
dec
loopne
dec
out
push
inc
xor
lcall
push
mov
arpl
or
jbe
mov
ljmp
addr16
cmpsb
jbe
cs
ds
jl
mov
and
enter
aas
sbb
mov
mov
je
push
inc
push
rcrb
outsb
repnz
xchg
pop
cmp
push
pushl
in
or
mov
leave
jecxz
jl
jno
arpl
mov
cmc
insb
xchg
int
mov
enter
sub
xchg
mov
adc
stos
xchg
xchg
fsubrs
jbe
das
dec
flds
mov
sbb
es
fdivrs
lock
jl
pushf
stc
mov
xchg
sbb
add
out
filds
or
mov
int3
out
mov
call
shr
loop
or
imul
pop
repnz
jbe
cli
loopne
insb
imul
push
in
imul
ljmp
push
lret
pop
adc
sbb
adc
pop
out
mov
fimull
test
mov
pop
arpl
mov
addr16
pop
cmc
add
int
out
pushf
pusha
in
rclb
add
inc
add
andb
xor
pop
and
add
arpl
push
sbb
pop
and
push
call
cmp
inc
popf
push
mov
adc
lret
sahf
mov
cmpsb
inc
mov
sub
jmp
decb
push
pop
push
ja
jg
mov
pop
inc
lcall
or
mov
add
in
add
add
push
cmp
lods
push
insb
cli
in
stc
mov
icebp
mov
or
pop
sbb
sub
mov
leave
push
and
ja
pop
dec
addl
pop
test
in
stc
mov
add
pop
xchg
ljmp
push
shl
repnz
mov
mov
xchg
icebp
mov
mov
lock
cmp
cmp
xor
inc
push
ret
xchg
lahf
mov
add
add
add
add
mov
pop
mov
cmp
andb
mov
push
popa
scas
jb
inc
pop
push
nop
mov
andl
dec
pop
pushf
inc
addr16
stos
hlt
ret
out
inc
inc
mov
in
pusha
sbb
push
int3
push
enter
fs
mov
outsb
xorl
add
enter
cltd
add
mov
jb
pop
sbb
or
pop
vpcmpeqq
pop
movsl
push
add
cs
xor
negb
mov
sbb
cltd
fld
dec
enter
orl
arpl
sbb
pop
dec
mov
movsl
push
push
enter
mov
mov
pop
loop
sbb
out
test
cli
adc
rol
inc
pop
dec
jb
lret
xor
xchg
repnz
std
adc
jnp
pop
cmc
call
shlb
push
insb
lea
push
pop
jmp
das
xchg
arpl
push
push
shlb
xor
cli
add
mov
push
arpl
add
add
lret
mov
sbb
jno
cmp
pop
inc
xor
mov
jnp
movsl
out
lods
xchg
pop
shlb
cmp
fisttpl
xchg
subb
add
jmp
mov
xor
jecxz
pop
shlb
dec
ds
pop
mov
inc
and
insl
fdivrp
jae
notl
inc
jo
outsb
sub
push
jg
mov
xchg
push
cmpsb
jecxz
std
cld
je
inc
scas
jae
je
xor
shll
cltd
enter
xchg
jmp
push
or
add
add
mov
les
xchg
dec
inc
fmulp
adc
mov
repnz
or
mov
xor
loopne
pushf
orl
jmp
sub
cld
loop
jb
outsb
adc
dec
fstpl
adc
xchg
cmp
adc
add
fsubs
pop
mov
leave
fs
mov
icebp
std
sarl
shrb
sbb
pop
pop
push
aas
sub
cmc
xor
add
xchg
dec
and
mov
dec
mov
add
jne
mov
xor
or
movsl
mov
out
push
push
mov
imul
sti
call
adc
aas
shll
dec
leave
ss
adc
push
adc
sti
pop
sub
pushw
xchg
std
fsubrs
add
pop
mov
jno
lret
pop
mov
mov
dec
inc
pop
shlb
pop
cmp
in
jnp
push
jmp
push
sbb
clc
testl
add
add
add
divl
loope
or
das
adc
in
mov
adc
rcrl
mov
push
push
adc
in
jno
mov
mov
and
hlt
add
outsb
jne
int3
lahf
lret
clc
xchg
rcll
test
mov
mov
in
ret
adc
and
sbb
mov
outsb
in
xchg
push
mov
and
push
or
add
add
add
push
jno
jge
sub
xlat
loope
xlat
sub
sbb
je
mov
scas
push
jp
in
lods
xlat
adc
les
cmpsb
test
ss
mov
push
sti
je
adc
sub
cmp
gs
xchg
add
and
in
inc
into
pushf
cmp
imul
adc
and
loopne
dec
mov
cmpl
inc
lods
or
xchg
int
push
fdivrs
arpl
repnz
loopne
add
add
aas
sbb
ja,pt
cmp
pop
mov
jae
jbe
dec
fcoms
lcall
addr16
mov
pop
add
insb
shll
shrl
sub
das
push
loope
js
mov
push
leave
repz
test
mov
mov
lods
and
mov
sbb
ret
add
in
test
mov
add
repz
add
outsl
jp
cld
popa
sub
popf
inc
jmp
fs
mov
push
rcll
jns
adc
pushf
ret
ds
push
adc
imul
mov
cmpsl
push
xchg
outsl
mov
ficoms
xchg
out
popf
dec
jg
xchg
jle
out
lret
mov
jno
mov
leave
out
sub
jg
sub
and
push
out
test
fimull
movsb
out
mov
add
add
mov
jge
outsb
sbb
fists
cltd
push
add
jmp
sar
iret
lret
mulb
test
pop
mov
pop
andl
fsubs
jb
jno
adc
mov
mov
mov
icebp
push
into
xor
mov
cmpsl
ret
sbb
mov
jl
sbb
xchg
or
imul
inc
lret
test
fcomi
add
xchg
in
xchg
ds
mov
jbe
xchg
imulb
xchg
dec
movsb
add
or
mov
scas
loopne
fbld
addr16
lods
fiadds
jne
fisubs
xor
les
movsl
add
push
pop
dec
dec
and
push
fsubl
outsb
fadds
pop
push
imulb
xor
arpl
mov
rcll
add
add
add
add
sti
imul
int
gs
mov
sbb
xchg
dec
rclb
inc
hlt
int3
negb
sbb
sub
add
mov
inc
out
test
mov
ds
xchg
popa
pop
inc
mov
add
ds
mov
fisubrl
xor
push
ret
shl
js
ljmp
add
add
dec
ja
mov
outsb
inc
sbb
icebp
cmpsl
fsubs
clc
xchg
mov
pop
mov
aam
pop
dec
sub
lea
pop
cmp
sub
idivb
ljmp
cmc
xchg
dec
mov
test
dec
inc
jns
xor
mov
jns
push
mov
insl
iret
mov
mov
sub
out
pop
inc
imul
jp
jbe
out
arpl
adc
mov
inc
and
aaa
mov
idivl
push
pop
outsl
sbb
jecxz
or
pop
jnp
ret
ljmp
