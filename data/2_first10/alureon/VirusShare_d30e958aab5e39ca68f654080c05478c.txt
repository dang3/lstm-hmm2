mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
andl
push
push
push
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
call
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
testl
pop
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
imul
inc
not
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
mov
add
call
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
push
mov
mov
call
pop
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
mov
je
cmpl
jne
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
mov
sub
push
mov
mov
imul
cmp
jb
mov
push
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
mov
sub
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
incl
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
mov
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
add
sub
push
hlt
mov
jl
js
push
add
lock
xor
and
ss
sub
xchg
cmpsb
push
aaa
pop
push
push
cmp
js
jl
mov
push
mov
out
lret
mov
pop
push
push
mov
cmp
sbb
push
and
rorb
xor
popa
sbb
mov
cmp
enter
pavgw
int3
mov
push
in
pop
add
imul
rorl
sbb
sbb
movsb
into
or
mov
and
add
add
or
ja
pop
sub
ret
adc
xorl
mov
stc
push
pop
call
and
stos
add
lods
out
mov
xchg
imul
pop
xchg
ja
bound
xor
icebp
jae
or
mov
sbb
lret
lcall
or
sarb
inc
mov
in
fnstcw
test
add
rcr
add
xorb
jmp
int3
inc
ljmp
xchg
pop
addl
mov
pop
leave
mov
cmc
movsb
xchg
out
popa
std
ret
negl
lods
dec
lret
fcoml
shlb
add
cwtl
dec
sbb
mov
pop
jmp
loop
aas
lret
leave
clc
push
or
jnp
jb
fiaddl
cmpsb
pop
addr16
imul
cmpb
xor
lds
pop
fimull
and
cwtl
xor
insb
pop
std
popf
inc
and
and
xchg
cmp
aam
fidivrs
pop
inc
add
mov
mov
nop
push
cli
cmc
das
pop
push
bound
inc
xchg
test
jl
pop
xchg
scas
ljmp
sbb
stc
mov
movsb
scas
xchg
int3
cld
add
adc
aam
dec
in
jns
pop
call
adc
jnp
out
ja
push
sbb
rcrb
lcall
je
icebp
xchg
push
scas
sub
pop
lds
jp
dec
add
jl
cmp
insb
insl
or
push
andl
repz
cltd
out
or
sbb
cmp
xchg
inc
and
add
mov
insb
imul
mov
sbb
or
add
popa
sbb
aaa
fistps
xor
in
mov
sub
xchg
pop
xor
dec
xor
jl
adc
aaa
rolb
add
out
arpl
lcall
outsl
insb
cmp
fcomp
lods
sub
test
xor
scas
popa
out
das
mov
and
fisttpl
cmpsb
dec
stc
sbb
or
fs
ds
rep
push
cmpsb
pop
adc
sbb
leave
jmp
xchg
mov
dec
jne
sahf
movsb
push
in
out
ret
dec
cmp
loop
in
test
repz
int3
push
hlt
cld
pushf
mov
rolb
in
loop
add
lret
out
mov
add
add
shrb
fcompl
daa
out
lods
shlb
mov
nop
push
mov
mov
popf
std
lods
in
fnsave
push
push
or
test
subb
xchg
fwait
adc
cmp
jp
jmp
cli
lea
jle
mov
mov
daa
shrb
push
cltd
in
je
test
stos
dec
jle
clc
test
jle
sbb
bound
test
subl
das
outsb
leave
jge
adc
add
push
pop
test
jno
js
shrl
ds
inc
shlb
divl
std
and
pop
frstor
pop
ret
bound
inc
xor
lret
inc
mov
arpl
std
cmpsb
pop
lahf
insb
cli
pop
js
aas
imul
or
mov
xor
mov
cmp
hlt
xchg
int
xor
ljmp
inc
or
fs
or
push
cmp
lods
xchg
test
add
mov
add
dec
rcrl
addl
xor
lock
push
pop
cmp
outsl
pop
xor
inc
inc
les
std
mov
and
cmp
push
mov
fbld
ds
push
cmp
shll
es
inc
dec
xor
pop
xlat
lds
in
call
and
lock
lcall
push
fcompl
mov
push
xor
sub
add
loopne
adc
sarb
mov
pop
out
xchg
into
aad
fwait
jmp
jb
and
xchg
insb
cmpsb
sub
push
sbb
shrb
cmpsl
out
outsl
sbb
cmc
vcvttsd2si
out
or
cmp
sbb
icebp
push
mov
push
dec
in
mov
mov
pop
js
jecxz
cs
xchg
aaa
mov
ret
lret
cmc
aaa
out
cmp
test
push
test
add
add
in
push
inc
mov
ud1
mov
cmpsb
cli
mov
pop
mov
enter
pop
loope
and
xor
dec
mov
rep
dec
lea
stc
ds
or
fstps
jmp
repz
xchg
sarb
xchg
out
arpl
call
into
addr16
insb
pop
and
lret
ljmp
ljmp
mulb
or
jb
adc
stc
imul
xor
xor
into
and
push
sahf
inc
adc
divb
insb
cli
mov
imul
in
push
es
insb
ljmp
inc
notl
inc
mov
lds
add
mov
cmp
jne
fldenv
test
inc
push
xor
dec
movsb
pop
shll
movsb
dec
jb
sub
or
movsb
jg
pop
mov
xchg
xlat
int3
jno
add
icebp
cmpl
add
sub
mov
or
add
add
jp
add
jge
mov
xchg
push
gs
jo
mov
punpckhwd
pop
icebp
xlat
loope
fwait
jns
xor
test
xor
fldcw
outsb
xor
mov
add
sar
pop
sbb
mov
cld
icebp
mov
pop
roll
iret
jl
scas
rorl
mov
jl
lret
lds
push
adc
lea
adc
mov
add
sub
sub
mov
in
cmp
setl
pusha
and
js
jmp
cld
jl
inc
inc
or
les
jl
cmp
fbld
fs
sub
lock
adc
div
jecxz
inc
cmpsl
push
pop
xchg
dec
sti
and
pop
xchg
mov
push
mov
scas
pop
dec
cs
insl
js
leave
xor
in
sub
clc
movsb
xor
nop/reserved
inc
out
movsb
hlt
dec
add
add
scas
sbb
pushf
jmp
sub
repnz
leave
bswap
popf
or
adc
inc
mov
adc
dec
or
or
or
add
mov
mov
sarl
cmp
add
pop
adc
sub
and
and
movsl
divl
jo
test
popa
jb
cs
add
adc
add
add
pop
mov
popa
shlb
or
mov
lock
cltd
cmp
adc
add
mov
adc
adcb
pop
loope
rol
mov
mov
sub
add
mov
dec
pop
cmpsb
cs
lods
loop
mov
sub
xor
in
xor
jbe,pn
mov
mov
inc
pop
in
mov
outsb
cwtl
insl
pop
or
cmc
fists
sub
loopne
add
ss
fldcw
mov
add
pop
lahf
ret
mov
addr16
cmp
lcall
add
scas
cli
lock
insb
and
orb
ljmp
push
push
in
cmp
push
pop
cmpsl
push
mov
fdivrl
push
or
test
mov
mov
mov
cli
in
inc
mov
inc
pop
call
das
mov
test
adc
dec
test
mov
add
imul
int
cmove
pop
dec
popa
sub
in
stc
push
xor
or
fisubrs
stos
sbb
inc
add
das
daa
icebp
add
xor
jno
das
mov
add
adc
in
push
fdivrs
sub
rcll
sbb
in
mov
in
sarl
pop
add
icebp
or
test
mov
add
add
popa
aad
repnz
cli
xchg
jne
dec
jmp
pop
or
inc
idiv
xor
ds
adc
push
jb
or
or
mov
xor
pop
adc
stos
das
adc
or
inc
mov
sti
mov
add
fldt
test
adcb
cli
xor
inc
out
pusha
aas
push
dec
ljmp
mov
sbb
mov
inc
out
cmp
test
loop
pop
pop
cmpsl
and
jb
movsl
xor
stc
mov
test
xchg
call
scas
pushl
mov
jg
add
cmp
dec
or
push
int
jne
cmp
mov
out
fs
xchg
lods
fsts
outsl
insl
mov
or
lods
xchg
xlat
lahf
mov
shll
or
repnz
fiadds
jb
mov
repnz
lods
xchg
fidivrs
add
int3
mov
pop
and
add
aam
or
cmp
sub
pop
dec
push
cmpsl
add
stos
jae
cwtl
les
cmc
roll
imul
cli
mov
call
mov
add
or
adc
sub
inc
imul
repnz
jbe
lds
cmp
out
movsl
rcrl
jno
cli
ss
push
lcall
lcall
cld
push
sbb
sbb
push
jmp
push
push
in
inc
jb
xchg
pop
mov
mov
outsb
sbb
xchg
out
push
cld
ffree
loope
idivl
fstpl
cs
inc
inc
pusha
decb
sbb
ss
or
push
cmp
hlt
outsb
xor
lock
or
fwait
test
negl
xchg
xor
dec
xor
test
xor
or
sbb
dec
xchg
lcall
sbb
jp
lcall
pop
sti
dec
clc
mov
add
jecxz
aaa
mov
dec
lret
int3
dec
sbb
cmp
mov
and
push
movsb
pop
sti
out
xor
add
mov
adc
jae
cmpsb
push
add
mov
xor
in
mov
or
clc
movsb
push
mov
bound
js
inc
jecxz
add
add
jbe
or
sub
push
push
sahf
inc
cmp
mov
in
lds
add
js
mov
jmp
daa
cmp
lahf
jnp
push
fdivr
mov
adc
jg
adc
xchg
push
call
jns
pop
rcr
pop
xor
aam
xchg
fcomps
or
pop
inc
jne
dec
mov
shlb
add
add
mov
fmull
or
dec
insb
xchg
xchg
xchg
push
ljmp
scas
cmpsl
add
insl
iret
xchg
aas
lea
imul
dec
ret
enter
xchg
in
movl
and
loope,pt
fisubrs
test
jp
pop
jns
stos
pushf
sbb
lret
in
fwait
imul
push
fisubrl
xor
negb
andl
repnz
jno
sub
sub
push
jmp
int
add
lea
jg
fcompl
jg
int
out
or
fs
mov
sbb
roll
and
dec
mov
lcall
fidivrs
pop
aad
mov
mov
out
rorl
out
cmpsl
and
xchg
xchg
str
adc
jmp
xor
pop
sub
into
addr16
pop
sub
pusha
mov
add
add
bound
adc
notb
cli
or
adc
jmp
push
cmpsb
add
hlt
pop
shll
iret
outsb
add
push
in
dec
ret
jae
inc
sub
movsl
stos
test
jbe
lods
fs
incl
clc
stos
push
adc
cs
imull
add
jmp
push
out
je
hlt
pop
out
push
xor
xchg
dec
inc
cmp
jle
xlat
cmp
mov
add
out
xlat
bound
jge
addl
cmp
push
pushw
mov
sub
xor
out
xchg
imull
mov
add
les
mov
xor
push
jno
arpl
or
jge
mov
jnp
push
add
inc
adc
or
ret
or
inc
sbb
add
add
xor
push
jge
or
push
test
lods
popf
cmpsb
lods
addl
mov
xor
cmp
outsl
jb
fcoml
cli
dec
mov
and
mov
mov
nop
ljmp
xor
pop
stos
add
and
mov
test
pop
mov
shll
sub
xor
loop
xchg
scas
add
adc
mov
popf
lods
addb
adcb
sarl
ret
inc
cmc
xchg
inc
fsts
xor
add
repz
xor
out
insl
jb
pop
lahf
add
and
test
mov
cmpsb
fmul
hlt
cmpsl
daa
pop
shll
mov
aaa
sbb
push
add
lret
push
push
popa
and
lcall
dec
cli
call
dec
mov
outsl
cli
popa
add
add
hlt
add
movsl
test
pop
ds
fwait
sub
ret
imul
lret
jne
lret
repnz
aas
mov
push
jmp
push
xlat
and
int3
int
jecxz
xchg
out
int
sbb
sub
fbld
nop
push
pushaw
xchg
sarb
fsubr
inc
adc
shlb
cmc
and
outsl
and
jnp
pop
xchg
add
outsb
jmp
and
sub
inc
cmp
mov
inc
fisubs
aaa
jns
hlt
pop
lcall
add
dec
inc
out
icebp
aaa
stc
lcall
das
sbb
shlb
aad
imul
mov
pop
mov
push
push
mov
clc
fnsave
aad
mov
jne
jg
bound
shrd
xchg
gs
push
sub
sahf
inc
in
add
push
xor
in
das
lods
into
xor
push
int3
add
fnstcw
xor
cmpsb
xor
ljmp
push
jo
ficoms
jmp
jl
call
lcall
shrb
xorb
jecxz
push
clc
clc
jne
std
js
push
outsb
push
lock
add
mov
pop
pop
stos
or
rolb
fwait
aad
add
ljmp
call
orl
rcrl
pop
adc
sub
push
xor
or
mov
push
mov
ds
xor
lcall
xor
sub
stos
mov
xor
sbb
lahf
mov
ds
outsl
jmp
fisttpl
shrl
xchg
or
xchg
or
push
sbb
xchg
std
xchg
sbb
test
cmpl
in
ret
mov
sbb
cmp
mov
mov
std
cmovnp
les
xor
jbe
jmp
mov
xchg
xchg
sub
add
in
jb
mov
mov
addb
jecxz
movsb
adc
jl
sahf
and
mov
jmp
push
inc
cmp
out
loope
add
push
std
mov
arpl
add
mov
mov
add
mov
outsl
jmp
bound
add
gs
and
xchg
xchg
jne
cmpsb
repz
cmp
lret
stos
add
dec
mov
sub
xor
iret
pop
scas
sub
lods
push
repz
pop
push
xor
mov
cmpsl
dec
add
jb
shl
movsb
add
addb
mov
sahf
sbb
inc
xchg
xchg
add
push
cli
xchg
mov
cmp
imul
les
inc
jl
jp
mov
rcl
outsb
mov
inc
cmp
xchg
mov
orl
loope
fdivr
push
cld
pop
push
loopw
pop
repz
fcom
jle
inc
pop
pop
pop
push
mov
cs
imul
or
pop
push
dec
push
inc
and
dec
push
imul
xchg
add
add
and
lcall
jl
icebp
test
dec
push
xchg
and
shrb
pop
mov
fsubl
push
adc
hlt
jne
addr16
adc
dec
fs
cmc
pusha
fs
adc
sub
mov
mov
mov
xchg
arpl
mov
pop
or
dec
leave
out
mov
lahf
jno
mov
or
and
data16
or
out
pushf
popa
test
mov
lahf
jge
mov
lea
xlat
inc
add
or
in
enter
cli
mov
mov
xchg
sbb
mov
pop
xor
lods
jp,pt
sub
cli
mov
mov
push
inc
out
std
mov
aad
xor
imul
sub
notl
mov
lds
into
pop
xchg
outsl
and
add
repnz
mov
add
jno
andl
shll
cmpl
enter
aas
xor
je
dec
pusha
mov
aaa
out
fwait
pop
pop
ficoms
aam
scas
repnz
add
cmp
push
push
inc
xchg
or
inc
outsb
push
leave
or
ss
daa
shll
push
dec
push
jl
xor
aas
add
ljmp
dec
leave
and
jno
and
insb
xor
ss
out
scas
jne
adc
xchg
mov
mov
cmp
ret
sbb
les
sub
bound
jmp
ret
clc
cld
dec
mov
cmp
add
dec
push
inc
insb
hlt
jbe
scas
sbb
test
lcall
add
adc
mov
sub
adc
add
cmp
sub
mov
inc
push
pop
int
inc
adc
mov
add
rclb
mov
int3
ret
dec
or
adc
fs
stc
inc
xchg
xchg
mov
andb
mov
push
out
cli
clc
repz
mov
or
jp
addr16
pusha
xor
mov
pop
aam
dec
and
sarb
inc
int
out
add
add
loop
cli
cmp
adc
sub
mov
jmp
ret
sbb
loopne
pop
sbb
add
bound
inc
pop
test
int3
lock
sub
jp
sbb
shll
dec
or
sbb
push
xor
xlat
sbb
mov
sbb
enter
pop
gs
adc
push
dec
cwtl
sti
xor
or
data16
jns
add
ret
ljmp
sub
inc
popa
les
dec
mov
sub
xlat
push
outsb
jae
lods
jno
outsl
sbb
shll
test
push
cmpsb
inc
cmpsl
imul
mov
mov
xor
and
inc
inc
pop
fwait
clc
mov
ret
sbbl
rcr
pop
std
mov
or
jne
jb
adc
xor
jbe
mov
lods
and
push
xor
fnstenv
xchg
mov
mov
xchg
rcll
insb
imul
fs
mov
aaa
mov
flds
sbb
rcr
stos
pop
push
out
sub
ljmp
sahf
xchg
pop
std
shrl
imul
dec
mov
out
stos
inc
dec
pop
and
mov
add
sbb
test
mov
jge
or
sbb
xor
xlat
add
loope
adc
popf
cvtpi2ps
ja
sbb
pop
test
and
mov
movsl
jp
mov
les
std
enter
sbb
dec
repz
dec
fnstcw
inc
jo
aas
outsb
sbbb
cmp
mov
inc
call
dec
pop
mov
xchg
or
ljmp
xchg
ficompl
and
dec
cmp
enter
add
loopne
dec
jo
movsb
pop
jae
jmp
adc
maxps
pop
fcmove
xor
or
pop
xor
pushf
xor
mov
shll
divb
dec
jg
pop
sbb
xchg
subb
mov
push
push
outsl
push
fisubl
icebp
mov
pop
dec
loopne
jge
iret
adc
lods
mov
outsb
jo
call
aaa
push
jecxz
cld
xchg
adc
hlt
and
mov
addl
or
cmp
fcmovnb
jno
xor
xchg
mov
sub
and
cs
outsb
fldl
jl
cltd
fstl
in
data16
xchg
push
nop
pop
sbb
mov
int
adc
int3
jb
sub
pop
push
in
lret
pop
pop
mov
mov
mov
add
jl
push
ds
aam
icebp
mov
add
add
jae
inc
push
stos
or
inc
sahf
test
mov
jmp
cwtl
and
punpckhdq
fidivrl
outsb
push
stos
stc
mov
and
sub
xor
movsb
das
cld
pusha
mov
daa
scas
sti
int3
popf
loopne
sub
shrl
mulb
sub
aad
pop
aam
push
xorb
iret
daa
and
sti
out
add
add
int
int
push
and
call
es
rol
push
mull
incb
mov
cwtl
adc
cmp
mov
leave
subl
movsb
into
push
dec
outsl
push
ljmp
clc
push
lret
repz
and
push
xchg
fmul
mov
jge
xchg
sub
pop
cs
call
pop
ret
xchg
add
add
mov
int
mov
sti
adc
pop
sbb
mov
lahf
pop
adc
lcall
fwait
test
jo
jle
mov
dec
sbb
aad
push
mov
shr
sub
int3
mov
add
jge
xchg
inc
jmp
inc
lods
cmp
addb
cltd
pop
je
lcall
dec
push
fwait
sbb
orb
add
add
out
stc
outsb
dec
repz
xor
xchg
lds
mov
pushl
inc
faddl
and
add
dec
jmp
sbb
fildll
out
cmp
movsl
add
in
pop
ss
sub
xchg
pushf
rcrl
push
jecxz
adc
bound
mul
pop
mov
add
leave
jo
xchg
mov
push
pop
push
imul
xchg
shl
add
add
inc
out
dec
and
clc
les
xor
mov
push
movsb
xor
mov
scas
ja
rcll
addr16
xor
or
rcrb
push
sbb
int
into
jg
jne,pt
in
push
mov
test
or
jmp
sub
sbb
cli
daa
lcall
xor
pop
ror
lret
mov
add
push
dec
push
test
mov
ret
adc
int
jo
test
jb
rcrl
jl
push
movsb
fisttps
imul
mov
gs
fisubrl
xchg
aam
jl
jo
cmp
mov
xor
lret
mov
shrb
jp
xchg
std
popf
mov
lahf
add
cmp
daa
mov
add
add
jns
arpl
mov
out
rcr
lods
test
inc
jnp
push
loope
mov
xchg
and
lock
or
sti
mov
jge
out
dec
int
xorb
sub
jnp
xchg
xchg
stc
dec
in
out
cmpsl
insl
mov
mov
sub
shll
test
aad
daa
fsubl
jecxz
or
add
adc
enter
aad
and
in
mov
mov
add
add
call
xchg
aaa
insl
xchg
mov
xchg
push
push
jno
fs
push
or
add
int
push
pusha
xchg
jns
scas
icebp
jge
insl
lea
out
sbb
or
pop
push
add
pop
mov
pop
imul
and
stos
ds
into
jne
imul
cmc
rclb
adc
ljmp
xor
fistpll
cmc
fsts
clc
sarb
cli
jnp
ljmp
add
add
popf
test
lods
jg
mov
fisubs
sub
dec
xor
jne
out
inc
jno
gs
xchg
bound
cmp
ss
aas
cmpsb
int3
lret
rcll
or
lret
xor
cmp
sub
push
jg
pop
push
jb
sub
nop
cmp
cmp
push
inc
int3
orb
clc
pop
popf
cmp
mov
xor
add
std
clc
mov
ljmp
and
dec
cmp
jne
pop
lock
adc
mov
jl
mov
xchg
adc
ret
sub
in
xchg
adc
test
adc
dec
cmc
inc
mov
inc
pop
cmp
mov
into
ja
or
or
data16
xchg
arpl
jno
mov
mov
outsb
out
xlat
loope
jge
adc
dec
pop
bound
mov
dec
outsl
test
adc
mov
mov
inc
lahf
testb
jge
dec
testl
sub
shlb
les
incl
jmp
lea
dec
mull
fmull
cs
add
xor
jmp
add
mov
pop
xor
scas
shl
lods
mov
xor
mov
stos
jle
bound
adc
sti
mov
subl
or
push
aaa
fisttpl
dec
lds
xchg
daa
ret
inc
pop
push
add
and
and
popa
rcl
mov
std
scas
mov
testb
push
nop
jae
push
in
clc
aaa
sti
mov
aaa
ja
movsb
push
add
in
ss
cli
inc
scas
jle
cmp
ss
adc
pop
dec
xor
rcrb
mov
cli
mov
test
dec
mov
cmp
arpl
xorl
push
adc
sbbl
mov
sbb
push
fcmovb
dec
mov
daa
fnstenv
mov
adc
lret
dec
xchg
int
inc
aaa
sub
clc
xor
jp
repz
ret
out
sub
cmpsb
or
int
data16
xor
mov
mov
lock
test
push
mov
fs
dec
inc
js
sbb
lahf
adc
adc
into
outsl
rcrl
inc
or
mov
pop
stc
lods
jns
pop
mov
mov
cwtl
mov
in
js
movb
xchg
xchg
xchg
leave
mov
je
imull
add
pop
lcall
jns
decb
cmp
lcall
xchg
pop
pop
jp
add
mov
adc
pop
icebp
out
loope
mov
sbb
sub
sarl
push
rolb
add
add
enter
jecxz
push
mov
insb
add
ret
ret
repnz
enter
xor
hlt
add
or
mov
sbb
out
repz
or
aad
xorl
xchg
lret
lea
popa
icebp
lods
call
aad
add
scas
push
into
loop
and
mov
mov
dec
out
mov
sti
int3
mov
test
xor
pop
xor
sbb
cmp
add
adc
sub
outsl
inc
pop
dec
outsb
jb
and
add
sar
push
cwtl
cmp
pop
sub
fcomip
lret
addr16
jmp
add
xor
in
pop
popf
dec
cmpsb
bound
pop
repz
jg
data16
mov
push
mov
dec
lret
xchg
mov
test
lea
pop
pop
and
sbb
cltd
jnp
cmp
adc
jp
rcrb
lods
mov
out
jae
test
lock
repz
jg
jmp
mov
movsb
test
xor
sub
inc
sbb
sarl
sti
inc
sti
enter
push
sti
xlat
mov
test
aam
xor
in
lea
jne
das
cmp
push
testb
push
shr
lcall
cmp
repnz
loop
jae
orl
lcall
dec
shlb
imul
lret
insl
jnp
jne
sub
es
dec
xchg
push
shrb
scas
push
push
fsts
mov
bound
es
add
pop
hlt
jae
xchg
mov
mov
xchg
lea
ljmp
jp
mov
mov
xchg
mov
add
mov
inc
push
pop
jno
test
jmp
insl
stos
sbb
jmp
adc
in
jnp
loop
lods
xor
add
sub
xor
or
dec
xchg
adc
mov
cmp
out
push
aas
in
mov
insl
sbb
mov
shll
cmp
and
popf
adc
pop
mov
jl
push
fcmovu
dec
push
jg
out
in
addl
xor
aam
movl
