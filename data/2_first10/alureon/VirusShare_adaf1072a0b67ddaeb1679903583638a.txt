push
mov
sub
add
add
push
push
xor
push
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
call
mov
push
mov
call
test
jne
mov
call
cmp
je
cmp
je
cmp
je
in
push
push
mov
call
jmp
cmpl
jbe
push
push
pushl
mov
call
cmp
je
cmpl
jne
lea
push
call
pushl
mov
pushl
mov
mov
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
push
mov
mov
call
push
call
lea
push
push
push
push
call
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
test
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
cmpl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jne
lea
push
mov
call
mov
andl
mov
sub
cmpl
jbe
lea
mov
mov
mov
subl
addl
add
add
incl
mov
cmp
jb
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
mov
addl
subl
push
pop
rep
mov
add
add
add
mov
mov
movzwl
sub
cmp
jb
pushl
mov
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
sub
cmp
jb
mov
add
xor
cmp
jbe
add
lea
test
cmp
jb
pop
pop
xor
sub
ret
push
mov
push
push
mov
mov
mov
mov
mov
mov
shr
xor
not
rol
movzwl
add
push
mov
lea
lea
push
push
test
je
test
je
mov
push
sub
pop
mov
mov
push
add
pop
lea
test
jne
lea
mov
mov
mov
mov
add
sub
mov
lods
xor
stos
sub
sub
sub
sub
add
ror
lea
test
jne
mov
mov
sub
mov
add
mov
imul
add
mov
imul
add
mov
mov
neg
add
add
mov
add
add
and
add
movl
mov
mov
mov
sub
add
mov
call
mov
mov
add
xor
add
decl
mov
jne
pop
mov
addl
cmp
addl
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
andl
cmpl
jbe
jmp
mov
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
sub
push
xor
push
mov
call
lea
push
push
mov
call
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
push
push
push
mov
call
test
jne
cmpl
jae
movzwl
test
jne
testl
jne
push
pushl
pushl
pushl
call
jmp
push
push
push
push
call
push
mov
call
jmp
push
push
push
mov
call
push
lea
push
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
xor
pop
leave
ret
push
mov
sub
sub
mov
add
mov
push
xor
mov
cmp
je
add
sub
add
cmp
je
mov
push
cmpl
jne
mov
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
inc
mov
test
jne
jmp
lea
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
addl
subl
mov
cmpl
jne
pop
pop
leave
ret
push
push
pushf
rdtsc
pop
imul
add
mov
and
ror
xor
pop
pop
ret
push
push
push
push
mov
call
mov
jmp
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
push
add
pop
dec
jne
pop
mov
ret
xor
ret
push
xor
call
lea
test
jbe
push
movzwl
imul
add
add
jne
pop
test
jns
add
add
and
or
mov
ret
push
mov
sub
add
sub
push
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
add
pop
pop
pop
leave
ret
xor
jmp
push
mov
cmpl
jb
push
push
push
mov
mov
mov
sub
cmp
sub
mov
lods
xor
stos
sub
cmp
add
sub
add
add
ror
lea
test
jne
pop
pop
pop
pop
ret
push
mov
sub
add
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
push
movb
call
mov
mov
mov
movzbl
imul
xor
push
add
pop
decl
jne
push
push
push
mov
call
mov
mov
cmp
jne
movzbl
push
push
push
call
pushl
push
push
call
xor
push
add
pop
pop
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
mov
xor
cmp
je
lea
test
lea
test
cmpb
jne
ret
jp
add
les
add
adc
test
cmpsl
clc
mov
lock
hlt
pop
mov
jge
iret
xlat
inc
dec
mov
sbb
negl
and
pop
mov
jae
notl
and
aad
dec
inc
ret
ljmp
dec
gs
push
jmp
ss
inc
fs
adc
add
ja
cmc
sub
pop
or
or
rolb
ljmp
push
cmpsb
or
fdiv
cmp
jno
je
cmp
std
pop
mov
das
adc
call
aad
and
fbstp
mov
adc
lods
and
cmc
mov
movb
jge
fimull
jge
stc
fstl
push
mov
lret
ja
shlb
sbb
movsl
in
ljmp
loope
mov
pop
lds
and
es
stc
xor
int
lods
hlt
mov
movsb
enter
imul
and
lea
pop
cmp
add
adc
pop
adc
and
mov
mov
add
fnstcw
lcall
int3
notb
emms
xor
cmp
aam
int3
push
cmp
outsb
pop
xor
or
lret
ret
adc
lock
inc
pop
loopne
pop
sbb
cmpsb
int
shl
movsb
std
ret
mov
std
sbb
psubw
xchg
inc
adc
push
cmp
scas
or
out
movsl
pop
rorb
pop
into
xor
jb
cli
push
cmp
lods
mov
ja
cmovle
arpl
js
add
in
mov
jb
shll
aaa
andl
push
inc
adc
sub
pop
lcall
cwtl
mov
fs
mov
scas
out
push
arpl
out
push
push
mov
daa
test
pop
adc
mov
sbb
shlb
adc
pop
into
nop
je
xchg
outsb
shll
test
das
mov
addr16
cmpsl
pop
decb
push
jp
test
push
pop
mov
or
rcrl
xchg
pop
mov
mov
or
dec
scas
and
pop
in
in
xor
dec
xor
insb
and
jg
js
fs
cltd
aam
mov
test
aad
add
cli
leave
adc
push
mov
sbb
sbb
jmp
outsl
rep
fldenv
push
outsb
pushf
xchg
pop
xlat
lcall
sbb
adc
or
imul
and
movsl
dec
push
dec
in
adc
outsl
xlat
outsb
sbbl
daa
sub
lahf
cmovbe
cmp
add
ljmp
xor
pop
cld
or
pop
push
mov
sbb
addr16
loopne
fsubrl
jno
adcb
mov
out
adc
sbb
pop
aam
mov
xchg
pop
aaa
stc
jg
ss
cmc
and
mov
xchg
or
in
das
lods
stos
gs
fs
sbb
lret
daa
xchg
arpl
loop
lods
adc
dec
fcmovnbe
das
insb
in
mov
jb
xor
test
ljmp
jle
dec
xchg
xchg
dec
add
xlat
sbb
es
lds
setg
push
inc
repz
lods
xchg
das
cmpsl
jns
iret
jp
jp
add
mov
ds
movsb
shl
aam
adc
lret
xchg
addb
or
int
call
pusha
fsts
shlb
jp
loop
push
je
mov
dec
aas
dec
lcall
insl
hlt
pop
add
adc
and
lret
int3
fs
sub
mov
cmpsb
inc
jl
push
pop
nop
bt
rolb
push
cmp
push
je
dec
mov
jp
incl
xchg
mov
nop
sub
mov
aas
outsl
data16
pop
jae
xlat
cld
and
fimull
xor
mov
cltd
outsl
fsubs
and
dec
ficoms
sbb
inc
jae
lea
mov
fnstsw
cmp
jns
mov
in
pop
jp
jns
mov
stc
mov
add
cmp
inc
mov
jnp
push
dec
fwait
mov
pop
stos
outsb
repnz
inc
je
pushf
fidivl
push
jno
pop
sar
jecxz
mov
movsb
push
dec
push
cmpsb
or
push
push
xchg
test
add
push
xchg
mov
inc
or
mov
mov
mov
sub
enter
adc
stc
jnp
ss
inc
jns
add
and
repnz
lgs
in
pop
icebp
sub
jg
cmp
push
or
mov
xor
cmpsb
xchg
popa
test
scas
add
mov
rdtsc
out
cmc
adc
mov
push
cmpsb
std
lret
cmp
fsubs
add
lahf
repnz
add
jno
lea
adc
dec
nop
je
dec
push
movsl
sub
loop
hlt
lds
lret
push
xorl
stos
push
sub
ss
jecxz
jg
mov
add
movnti
or
mov
dec
cmp
sti
pop
jecxz
dec
push
cmp
sti
outsl
test
jmp
and
in
or
or
icebp
aaa
xchg
aam
out
jp
lock
pop
xor
out
sbb
push
cwtl
loop
aam
out
subl
add
out
mov
push
jge
loop
adc
in
and
xchg
ljmp
xchg
mov
mov
sti
push
test
pop
jg
hlt
add
dec
dec
pop
and
add
mov
pop
ds
jmp
cwtl
dec
ljmp
mov
xchg
add
and
mov
jns
out
or
lea
push
sbb
push
rcll
ss
adc
xor
mov
out
cmp
mov
adc
fmull
push
mov
aam
test
fdivl
inc
dec
clc
sub
int
fisubrs
rorb
lcall
jnp
jbe
int3
mov
dec
sub
orl
jo
xor
movsb
lds
push
ds
mov
cwtl
stc
xor
shlb
mov
pop
subl
call
sub
xchg
nop
movl
push
pop
call
gs
dec
scas
or
sbb
or
mov
xchg
push
inc
mov
push
stos
sub
cmp
or
mov
lret
mov
imul
daa
sti
mov
js
lds
jne
adc
ficoml
jo
pop
lret
pushf
out
add
dec
js
shlb
cld
cli
ja
hlt
or
push
dec
gs
xchg
sbbb
inc
fimull
push
push
or
or
and
xor
inc
xchg
push
std
cmp
inc
pop
adc
mov
ficomps
sbb
inc
xorb
adc
clc
pusha
or
ror
push
clc
mov
mov
imul
and
sbb
jno
adc
mov
mov
inc
daa
pop
adc
add
xchg
stc
cld
repnz
lods
repz
ffree
or
fs
add
mov
loop
aaa
rcll
pop
test
mov
adc
mov
or
imul
fcmovne
les
pop
dec
arpl
test
enter
push
testb
out
sti
mov
xchg
lahf
ret
fs
jae
adc
daa
fimuls
movsb
cli
or
movsb
push
pop
push
sub
iret
jle
lret
std
or
lods
test
sbb
pop
int3
sbb
adc
add
pusha
js
pop
mov
sub
or
sbb
je
adc
shr
int3
jmp
mov
fsubl
jp
dec
or
push
out
outsl
mov
inc
jo
test
jge
out
mov
nop
out
jl
mov
inc
js
mov
popf
loop
dec
stos
push
rcrl
or
mov
adc
sbb
sub
stos
or
jl
pop
xchg
cmp
lret
sub
push
ljmp
data16
jp,pn
xchg
outsb
xchg
shlb
mov
and
push
imul
fstps
call
mov
adc
in
inc
rorl
aad
mov
sub
paddd
sbb
mov
adc
es
xchg
xlat
rorl
dec
dec
out
jecxz
mov
ss
nop
mov
popa
cmp
out
mov
ret
pusha
test
test
cld
js
sbb
push
in
fisubrs
push
movsb
orb
test
sbb
adc
pop
jecxz
lock
xlat
sarb
stc
mov
adcl
cmp
rcrl
and
mov
dec
sbb
push
scas
cltd
sbb
add
or
test
in
push
mov
sub
push
dec
inc
loop
andl
push
test
ss
and
xor
and
fcomip
push
stos
or
lahf
push
inc
push
pop
out
dec
xor
test
xchg
fidivs
imul
lods
imul
mov
mov
addr16
xor
mov
xor
xor
enter
pusha
or
or
scas
pop
mov
aad
ja
pop
xchg
or
je
jae
decl
les
jae
cmp
cmp
push
mov
sub
into
in
test
test
lcall
repnz
and
pop
cmpsb
loop
adc
test
push
aam
rclb
mov
jge
cld
pop
mov
dec
jecxz
neg
mov
mov
ficoms
xchg
int
call
arpl
dec
xchg
and
out
stc
fdivl
test
push
mov
rcll
push
scas
push
jecxz
sub
pop
addl
pusha
push
mov
es
pushf
mov
test
aad
xor
or
and
pop
dec
out
std
sbb
insb
cmp
xor
stos
xchg
out
fidivrs
lahf
outsw
xchg
cwtl
adc
mov
icebp
negl
xor
fsub
push
in
or
xchg
sub
or
jle
inc
stc
add
and
push
fwait
cwtl
cld
sbb
sbb
cmpsl
ljmp
mov
mov
inc
push
xor
rorb
arpl
xchg
in
pop
jo
xor
cmp
xlat
iret
push
pop
adc
aas
lcall
fildl
pushf
push
shll
mov
push
out
xchg
dec
mov
mov
push
dec
pop
das
jbe
adc
or
add
mov
lcall
fstps
aad
clc
mov
sub
add
jns
jecxz
pop
sub
jae
mov
pop
mov
add
out
pop
mov
inc
repz
cmpsb
dec
ss
xchg
bound
hlt
sbb
jne
adcb
test
xor
sub
aam
int3
pop
pop
dec
mull
jle
adc
out
fwait
jns
or
lcall
rcrl
in
xor
add
aad
sar
pop
jb
mov
fcomps
rclb
adc
iret
inc
lcall
dec
jl
outsb
fmul
out
xchg
xchg
xchg
push
jne
test
in
shlb
push
stos
stos
sub
test
xchg
cmp
xchg
pop
push
dec
insl
sbbb
inc
insb
in
inc
cmpl
sbb
ret
imul
or
lea
mov
inc
ror
jecxz
clc
mov
sbb
mov
mov
iret
fcmovbe
nop
daa
push
jl
push
mov
sub
sub
pusha
push
jo
test
cmp
movsl
dec
lcall
enter
cmp
cli
flds
movl
pop
and
or
ljmp
xchg
sub
lret
daa
mov
xchg
xor
sahf
les
call
cmpb
jle
jg
pop
adc
mov
cmp
mov
or
aam
ds
dec
imul
or
sahf
mov
sub
mov
add
or
pop
fwait
sub
in
mov
fnstenv
sub
daa
sahf
xchg
pop
imul
mov
cwtl
imul
out
jbe
pusha
sub
or
dec
push
add
in
and
sarl
lcall
push
int
jns
push
out
sub
shl
pop
push
fisubrl
decl
pop
mov
sbb
push
xor
jmp
sub
xchg
cli
test
xorb
ja
nop
negl
stos
and
ss
ss
scas
add
xchg
cs
sub
jae
push
idiv
jl
jge
or
call
dec
mov
jbe
dec
pop
jnp
insl
sbb
xchg
lea
sbb
test
xchg
mov
sbb
push
stos
and
xlat
mov
sub
les
loop
lret
pop
jge
orb
xchg
test
movsl
std
enter
push
jmp
test
es
shlb
lods
pusha
mov
cmp
push
les
pop
sahf
jle
lcall
adc
lea
xor
dec
cld
xchg
sbb
dec
mov
inc
inc
jno
mov
add
adc
sarl
test
ds
mov
loop
das
std
dec
inc
mov
push
pop
jmp
pop
loop
jne
cltd
mov
and
les
insb
cmp
pop
or
jmp
mov
mov
xor
jle
rdpmc
ret
insb
mov
sbb
lods
and
sbb
xchg
nop
loope
cmp
add
sbb
sub
imul
cs
dec
fsubl
pop
adc
adc
mov
push
push
fistps
iret
dec
cs
out
ja
jne
popf
jns
aam
testb
dec
xchg
inc
movsb
and
in
xor
xor
hlt
jbe
sbb
sahf
mov
mov
xor
pushf
mov
xchg
push
push
mov
idivb
add
aad
xor
shrb
insb
jg
dec
ja
pop
in
scas
sahf
movsb
xchg
enter
and
loop
imul
fcoml
add
sbb
xor
nop
es
sbbl
push
mov
lock
inc
flds
sbb
mov
out
movsb
int
jle
jmp
enter
insl
popa
sahf
rclb
fmuls
adc
push
hlt
sbb
mov
or
or
push
xchg
popf
xchg
xor
sub
lds
jg
pop
or
mov
roll
les
mov
loope
pop
fdivp
rcrl
xor
int
xchg
sbb
stos
cmp
and
call
cmp
fistpl
int
dec
sahf
lods
test
add
pop
and
shrl
ss
xchg
nop
imul
mov
lods
ret
xor
sub
enter
int
ljmp
filds
add
jle
xor
imul
mov
add
adc
int
dec
repnz
add
ja
xchg
scas
lret
xchg
and
push
xchg
std
ret
or
push
sahf
inc
and
cmp
inc
aam
push
pushf
fildl
sbb
xor
xor
test
insl
and
and
mov
push
and
test
or
sbb
icebp
push
cmpb
mov
lods
ds
test
testb
pop
xchg
imul
scas
mov
sub
aas
aaa
flds
add
add
sbb
xchg
cs
js
dec
fwait
adc
mov
pop
lcall
lret
ja
lahf
xchg
dec
cs
in
mov
mov
fsubrl
je
jmp
jno
adc
pop
in
push
push
add
and
stos
adc
inc
dec
jnp
rol
fsubl
bound
cld
stc
shll
cmp
inc
fmulp
out
cld
dec
imul
pop
mov
add
jmp
xchg
ret
nop
push
aaa
sub
inc
rclb
dec
js
pop
xchg
mov
add
xlat
jno
shrb
xchg
es
addr16
dec
add
mov
loopne
push
mov
es
aad
stos
rcrb
call
cmp
inc
repz
vpsrldq
fisubrl
mov
xor
cmp
push
scas
mov
jns
sbb
push
in
stos
aad
out
fs
add
push
pop
push
repnz
mov
or
out
call
sbb
adc
push
popf
adc
iret
dec
test
stc
aaa
add
mov
xchg
push
xor
movsl
leave
push
mov
hlt
fstps
jmp
movsl
insb
dec
cwtl
push
lret
xor
rcll
sti
dec
mov
pop
stos
movsb
cmp
in
push
dec
in
sti
mov
imul
jg
int
or
aaa
jae
add
je
mov
addr16
stos
push
lea
stos
sbb
test
insb
andb
jnp
xor
inc
push
push
mov
xchg
adc
add
je
pop
or
sbb
mov
dec
and
and
mov
lea
ret
inc
add
cli
dec
push
jnp
xchg
inc
cld
bnd
jno
lea
mov
call
add
xor
lret
jnp
push
jne
icebp
push
xchg
inc
pop
xor
ret
aaa
mov
aas
inc
test
xchg
in
popa
push
ror
fists
mov
pusha
lods
ret
addb
mov
xchg
push
in
xlat
outsb
rcll
dec
stos
sub
sbb
mov
add
shl
fwait
icebp
cmp
xor
jmp
or
and
xlat
cmp
pop
sahf
xor
loope
xor
fsubrp
je
mov
or
xchg
adc
imul
insl
jmp
mov
and
lahf
pop
push
addl
outsb
sub
adc
movsl
into
sbb
sub
jge
lock
stos
js
imul
jg
jmp
sub
jmp
gs
stos
mov
mov
test
jecxz
test
mov
pop
int
shll
and
xchg
cli
cmp
enter
sub
mov
lahf
xchg
ss
inc
sarl
xor
lret
xchg
jno
inc
and
out
in
pop
lock
sub
loope
roll
lods
into
ret
shrb
test
gs
cmp
push
push
rolb
aad
and
imul
jne
pop
mov
imul
mov
mov
dec
or
inc
mov
fisttpl
pop
dec
add
push
repnz
pop
fadds
adc
pop
push
cmpsl
dec
je
loop
fwait
lock
sbb
and
arpl
add
push
fildl
add
aaa
in
lret
pop
xor
in
jns
fs
add
mov
add
cmp
hlt
lret
cmpsl
enter
jno
rcll
gs
sub
cmpsb
rorb
das
out
cld
inc
outsb
push
cmp
cmp
dec
push
mov
and
sub
rcll
xor
jp
iret
into
hlt
xlat
and
lret
or
lock
push
add
hlt
dec
push
mov
sbb
cli
stos
imul
xor
int3
push
push
mov
push
add
lock
roll
clc
dec
repz
xchg
adc
int3
sbb
gs
jmp
out
xchg
rcl
mov
sti
jne
add
push
cmpl
dec
xlat
lea
add
xchg
shrl
jbe
cmp
fldcw
scas
out
fcompl
push
cltd
lea
std
sar
lahf
dec
mov
addr16
mov
adcb
fsubp
das
jmp
cmp
inc
cmc
mov
adc
inc
outsl
loopne
push
inc
push
sub
es
jne
pop
push
jmp
dec
dec
arpl
std
xor
xlat
cwtl
xchg
inc
dec
in
movsl
mov
call
ljmp
jmp
and
xor
in
divb
imul
lods
popa
nop
jge
lods
mov
mov
loop
xor
in
jo
xchg
stos
cltd
sub
dec
incb
cs
jmp
arpl
inc
movsl
scas
insb
sbb
lock
sub
arpl
aam
or
rep
cli
xchg
mov
fldl
scas
out
xor
xchg
mov
int
adc
cmp
dec
ret
ret
shr
cmpsl
pop
and
jmp
aam
adc
or
mov
hlt
sbb
push
push
rorb
or
js
push
ja
outsb
xchg
inc
scas
hlt
xchg
add
mov
sbb
fstl
cmp
adc
movsl
jecxz
xchg
inc
sbb
add
xor
into
decb
mull
xor
iret
mov
adc
cmp
sub
add
fsubr
mov
mov
pop
les
nop
and
mov
cmp
movsl
xchg
push
cmc
stos
bound
nop
loopne
aad
ja
dec
mov
outsl
adc
in
call
mov
stos
and
mov
sub
aas
push
pop
cmc
ret
ss
xchg
das
xor
pop
lret
push
loope
xor
in
mov
in
jbe
imul
pop
mov
sub
loop
iret
xlat
fistl
int
in
test
test
into
outsl
fidivrl
mov
mov
dec
testb
pop
add
adc
pop
pop
fidivl
and
pop
cmpsl
aaa
gs
sti
jmp
lock
push
clc
repz
pop
xchg
push
arpl
push
fsubrs
adc
jmp
aam
sarb
sbb
jg
xor
neg
lcall
dec
out
mov
sbb
pop
xchg
mov
xor
xchg
lret
daa
sbb
popf
iret
das
sbbl
push
mov
and
or
fcoms
cmp
dec
rolb
in
add
movzbl
inc
dec
cs
out
shlb
scas
sub
inc
adc
adc
addl
mov
jle
push
je
adc
inc
xchg
inc
sbb
push
add
std
adc
loopne
cld
arpl
cmpb
jmp
pusha
jno
lods
dec
orl
sbb
adc
test
sbb
xchg
mov
xchg
lods
mov
lods
mov
arpl
rclb
adc
negl
test
jne
mov
adc
in
push
pop
mov
rclb
add
pop
in
cmp
adc
repz
xchg
mov
mov
mov
out
popf
fidivrl
adc
and
hlt
jb
push
popa
jecxz
xor
gs
jne
mov
inc
jmp
jmp
insl
add
in
jle
inc
mov
inc
xchg
fstpl
xor
hlt
icebp
inc
mov
mov
push
cld
adc
mov
cmpsl
fcmovnbe
inc
aaa
mov
sbb
testb
daa
sbb
mov
insb
cmpsb
sub
adc
sbb
outsb
xlat
xchg
aad
es
mov
pop
inc
adc
lcall
xor
imul
cwtl
adc
pop
mov
into
dec
testb
and
fadds
mov
sub
out
scas
fwait
subl
sub
add
mov
cmp
xor
popf
in
stos
ds
popf
and
jmp
cmc
cmpsb
movl
cmp
clc
daa
arpl
leave
hlt
pop
push
adc
lahf
enter
inc
rcll
ret
adc
dec
xor
cltd
loope
pop
ret
ss
mov
push
insl
lret
movsl
lods
jne
push
xchg
pop
mov
push
push
jns
leave
lcall
mov
mov
xor
pop
inc
int3
mov
inc
jo
lret
jnp
in
or
lds
fs
stc
pop
dec
imul
push
addr16
add
or
mov
push
inc
mov
cmp
lret
sub
sbb
push
sbb
cmp
fmulp
je
cmp
cmc
ret
xor
arpl
int3
or
and
sbb
inc
jmp
or
sar
lahf
adc
aaa
out
int
sub
sarb
stos
cmp
inc
aas
xor
movsb
les
pop
xchg
jbe
mov
xor
mov
xchg
shrb
sub
out
pop
test
loopne
cs
loope
xlat
mov
movsb
dec
iret
xchg
les
xchg
andl
dec
jmp
clc
xor
rol
cli
pop
lods
pop
mov
scas
push
lock
add
add
loopne
daa
add
pop
lea
pop
in
mov
in
push
jg
xchg
clc
sub
pop
lock
xor
fdiv
xor
daa
push
pop
add
xchg
es
ja
jp
sub
sbb
push
xchg
hlt
pushf
mov
pop
outsl
js
xchg
bound
mov
pop
icebp
sbb
mov
fiadds
jno
fcoms
push
lods
mov
mov
adc
sub
daa
adc
mov
lock
and
jno
outsl
mov
jle
pop
out
ja
rcrl
pop
and
jle
pop
ss
lods
xchg
es
xchg
fisubl
sahf
lock
sub
jmp
xchg
or
mov
pop
push
inc
addr16
mov
lret
sarl
jecxz
std
repnz
stc
or
mov
test
jle
push
outsb
loopne
push
mov
xor
outsb
push
mov
cmpsb
xchg
push
jno
pop
ds
jne
stos
mov
fldenv
or
jbe
pop
jp
or
xchg
mov
adc
push
int
lods
mov
push
push
popf
imul
fnstcw
push
jb
inc
sub
es
rorl
in
std
push
and
int
insl
jns
push
dec
mov
jp
xor
lret
pop
pop
mov
xlat
in
data16
adc
lret
cltd
jnp
aas
mov
mov
sbb
and
dec
or
pop
mov
and
and
addl
jg
inc
dec
sub
test
jb
mov
dec
movsl
ror
shlb
mov
mov
cmp
push
mov
xchg
into
pushf
cmpsl
pop
icebp
ljmp
add
mov
fisubl
cmpsl
pop
mov
xor
lret
inc
mov
repz
sbb
je
jg
insb
imul
in
jne,pt
aas
mov
movsb
sub
or
daa
sbb
int3
adc
or
or
outsb
lahf
ja
lcall
add
mov
ret
ret
mov
loopne
cmpsb
jle
insb
dec
push
add
insb
xchg
xor
rol
add
scas
fstpt
or
leave
pop
clc
outsl
xchg
mov
fstpl
dec
add
sub
iret
scas
mov
xchg
mov
fnsave
mov
lahf
ja
sti
jp
roll
imul
jp
aad
scas
les
ja
adc
fs
sbb
out
pop
je
adc
or
inc
inc
pusha
scas
inc
dec
cli
repnz
or
rorb
pop
cmp
push
mov
jl
xor
stc
sbbl
sbb
and
loop
nop
add
cmc
test
cmp
mov
sbb
fidivl
mov
mov
fwait
mov
lret
es
xor
or
jge
xor
or
test
insl
pop
fistl
push
outsb
push
and
and
mov
mov
push
roll
push
dec
int3
and
mov
fcmovnb
popa
lea
rorb
cmp
mov
cmp
sti
out
mov
ds
xor
push
bound
movl
dec
sbb
pop
aas
or
push
inc
xlat
xchg
sahf
mov
jbe
mov
fs
add
pop
cwtl
je
push
or
mov
inc
and
addr16
cmc
aas
or
add
push
xor
adcb
fs
mov
sub
add
add
stc
fadds
gs
add
lock
iret
movsl
ds
pop
testl
jmp
cmpsl
xor
sbb
imull
sbb
mov
jp
push
sahf
and
ret
xor
jl
jb
arpl
fcmovbe
add
adc
adc
add
dec
div
in
shrb
lods
dec
enter
and
je
jns
in
or
jae
stos
cmp
test
pop
xchg
xor
ja
sub
outsb
out
cwtl
mov
test
mov
cmpsl
rcr
test
sbb
xor
outsl
notl
mov
cmp
or
push
mov
cwtl
dec
or
jns
loopne
jb
dec
int3
pop
test
hlt
out
mov
mov
lods
xchg
js
and
pop
scas
fiadds
jno
scas
std
push
int
and
stc
xchg
insl
in
dec
mov
cmp
fnstcw
mov
xchg
int3
pop
int3
lahf
push
fs
push
push
sub
mov
lcall
adc
mov
rcrl
inc
and
mov
shll
jne
dec
fdivrs
and
aad
mov
jg
mov
pop
aad
inc
jns
lods
xchg
mov
pop
lcall
xor
dec
leave
mov
push
xchg
and
cmp
adc
and
jp
sub
lahf
sub
fdivr
mov
mov
mov
lods
shr
mov
sbb
pusha
dec
adc
lods
pop
cmp
adc
filds
add
cs
clc
sub
push
ret
and
loopne
push
mov
sub
iret
out
loopne
jmp
mov
incl
lcall
xchg
mov
mov
mov
push
jnp
repnz
pop
fwait
aad
and
xchg
jns
iret
subl
jns
imul
cltd
shrl
mov
fisubrs
dec
fucomi
test
fstpt
jno
push
fistl
fcomps
inc
into
xlat
ror
imul
dec
mov
mov
xor
mov
add
or
sbb
xor
loope
and
push
sub
mov
xor
clc
push
ret
pop
xor
std
sti
or
pand
pop
pop
aam
cld
mov
cmp
push
in
movsb
jge
arpl
jge
sbb
aad
sarb
inc
les
aam
lret
pop
fisttpll
inc
fisttps
cmp
gs
pop
hlt
out
and
mov
enter
inc
sbb
push
pop
ss
xchg
ret
das
adc
xlat
test
mov
enter
mov
xor
jo
pop
divl
stc
cmp
cmp
addr16
outsl
push
inc
hlt
mov
sub
lcall
xchg
daa
mov
shlb
ficoml
popf
push
popa
and
dec
inc
lea
push
sub
lods
dec
xor
jnp
mov
sbb
dec
inc
mov
push
inc
imul
jne
jo
mov
fstps
setne
bound
icebp
inc
fwait
lret
and
hlt
inc
sti
fidivrs
arpl
fs
dec
ja
ljmp
shl
mov
pop
jne
pop
fdivs
sub
in
jnp
and
aas
sbb
and
mov
push
adc
test
sbbl
mov
mov
xchg
adc
sub
or
aad
inc
popf
negl
dec
nop
and
jae
and
cmp
mov
pusha
mov
mov
jne
or
es
push
or
popa
or
out
jo
cmp
push
movsb
jbe
lea
mov
mov
mov
jp
jbe
add
out
jo
mov
xchg
ljmp
ja
xchg
cmp
cwtl
jns
sbb
mov
loopne
ss
pop
imul
out
lea
in
dec
sub
addr16
pop
add
mov
adc
daa
icebp
lcall
push
pusha
sahf
sbb
repnz
loope
fdivrs
out
inc
pop
lcall
mov
jmp
xchg
std
jl
and
pop
jnp
call
inc
add
push
insb
or
scas
xchg
xchg
cld
mov
orb
lods
lods
int
inc
dec
imul
aas
aad
add
cmc
add
sbb
test
insl
dec
movsl
jle
mov
sbb
and
cmp
inc
das
mov
cmc
pop
repnz
jp
daa
shl
cwtl
jp
cmp
and
jmp
adc
inc
fimuls
pop
inc
aad
jns
or
cmp
adc
mov
lret
cmp
test
js
mov
scas
insl
sbb
push
pop
das
imul
sub
imul
stc
pushf
stos
in
dec
sti
pushf
jp
ljmp
sarb
sub
dec
mov
movl
xlat
adc
lock
bound
pop
cmp
lcall
aas
sbb
jle
dec
popa
shl
clc
inc
pop
clc
arpl
mov
rorl
aas
movsl
mov
daa
adc
or
sub
js
xor
cmp
mov
mov
fiadds
insb
jecxz
inc
xchg
clc
enter
xor
or
repz
stos
xchg
call
test
mov
mov
and
leave
fnstsw
ret
dec
rorb
sub
cmp
adc
cltd
jl
push
mov
jnp
fwait
xchg
fwait
into
inc
cmpsl
mov
shrb
int3
mov
pop
leave
stos
out
cmp
fsts
ljmp
inc
and
or
fcmovnbe
dec
jb
fstpt
mov
faddl
or
cmp
mov
std
push
xchg
les
add
xchg
pop
cmp
ljmp
gs
mov
stos
jl
cmp
movl
js
pop
in
mov
dec
xlat
xchg
adc
push
popl
movsb
cmp
lcall
loope
loop
inc
mov
mov
lea
push
addr16
fldl
cmp
or
lods
cmp
fnsave
pop
pop
sub
ds
iret
out
repz
lods
adc
arpl
in
cld
dec
orb
and
clc
push
dec
mov
fisubrs
sbb
lcall
mov
mov
add
mov
movsl
dec
pop
ret
mov
pop
jmp
in
mov
mov
xchg
mov
out
sub
sbb
dec
push
sub
pop
xchg
test
lret
inc
mov
movsb
inc
sub
and
mov
jl
das
lock
in
jmp
mov
mov
sub
push
or
xchg
sarl
and
pop
hlt
movsb
test
cltd
xor
sub
dec
cmpsb
mov
sbb
mov
shr
pop
inc
mov
sub
cmp
inc
or
bound
jno
add
ljmp
loopne
jg
enter
cltd
mov
cltd
das
arpl
iret
lods
adc
cmp
andb
jge
jns
inc
xlat
bswap
js
or
out
xor
ja
add
out
out
sahf
int3
mov
inc
enter
jge
sub
xor
jns
aaa
in
mov
hlt
nop
pop
cmp
fcomi
das
inc
ss
test
mov
scas
pusha
mov
adc
lcall
and
sub
adc
pop
push
xlat
in
rolb
loop
adc
mov
pop
push
imulb
enter
stos
and
insl
bswap
xor
mov
xchg
jmp
sbb
fwait
pusha
imul
je
jmp
lcall
mov
mov
dec
sub
and
push
inc
dec
mov
xchg
scas
xchg
jmp
lock
sub
jbe
pop
decb
xchg
hlt
movsb
clc
call
push
lods
jp
mov
es
icebp
popa
inc
pusha
test
xor
cwtl
push
loop
xchg
pop
bound
jmp
sti
iret
xlat
jo
jo
and
pusha
arpl
add
and
rorl
dec
inc
ret
xchg
ss
test
test
out
xor
repz
push
das
int3
sub
xchg
pop
mov
inc
hlt
sub
mov
mov
scas
xchg
call
data16
mov
or
or
sub
sahf
pusha
pop
daa
fldl
sub
outsb
xchg
xchg
fists
ffreep
push
or
jns
push
repnz
test
pop
adc
out
mov
xchg
cmp
cmp
cmpsb
insb
cmp
lock
movsb
push
mov
jle
pop
push
test
jo
cmp
and
aaa
rcr
and
push
cmp
xor
data16
xorb
xchg
fistpl
push
cmp
fbstp
pop
dec
out
sub
dec
fcmovnu
outsb
jmp
jmp
or
aaa
mov
insl
mov
push
add
pop
pop
std
push
cmpsl
and
nop
jl
leave
test
adc
aas
mov
sub
adc
cli
shr
cmp
lock
xor
mov
xor
xchg
dec
dec
ficoml
call
adc
aaa
sbb
sahf
hlt
pop
enter
jo
ret
xor
sti
push
int
xor
xchg
jb
pop
and
in
or
and
cmp
lcall
jge
loop
or
mov
xchg
cmp
aas
sbb
cmpsl
push
cmp
xor
jo
sarb
mov
mov
enter
cwtl
incb
ret
push
push
fcoml
loopne
cmpsl
or
push
add
mov
nop
mov
xor
test
and
lods
mov
outsb
mov
push
pop
cmp
sbb
add
sbb
mov
or
mov
xchg
xchg
jo
outsb
pop
imul
cmpxchg
cltd
or
xchg
rclb
and
in
scas
ret
scas
into
das
cwtl
xorb
mov
xor
ret
lret
ret
lret
xchg
and
ret
enter
jl
in
rcl
aaa
xor
movsb
xchg
imul
js
or
sahf
movsb
xchg
out
xchg
fldt
add
dec
add
inc
stc
sbb
xor
clc
movsl
int
cmp
mov
mov
les
leave
incb
fstpt
xchg
dec
out
sub
xor
je
or
xlat
sub
imul
cmpl
repz
aaa
loopne
clc
imul
decl
sub
jb
testb
xchg
jo
lods
xchg
pop
jl
add
xchg
stos
push
push
icebp
adc
loop
lret
push
xchg
or
je
je
lds
push
outsb
sahf
mov
in
ljmp
inc
aaa
xor
into
imul
jl
jmp
sbb
adc
icebp
mov
std
leave
pop
cmp
cltd
mov
test
push
stc
xchg
or
mov
mov
dec
pop
loope
add
or
sbb
add
ss
cmp
jg
dec
push
pop
mov
adc
test
cli
clc
xchg
test
jecxz
scas
jecxz
fisubs
icebp
roll
xchg
add
inc
movsl
das
or
mov
mov
adc
add
dec
aaa
mov
incb
test
lock
fcomi
popf
test
push
mov
rolb
add
gs
adcb
xchg
mov
sbb
mov
cmp
dec
popf
sbb
mov
adc
lret
mov
sbb
xor
inc
ljmp
jne
repz
hlt
add
shl
sub
popa
inc
and
pop
pop
xor
add
enter
inc
lods
mov
fidivs
cmp
mov
jmp
cmp
fwait
in
cmp
push
jne
ret
fiadds
ret
adc
divb
addr16
lret
mov
fcmovnu
cs
jp
and
sub
push
xor
pop
xchg
lods
cmpsl
inc
ja
sbb
sbb
and
iret
pop
add
inc
cmp
jp
enter
in
adc
jo
mov
dec
add
add
sub
sbb
cmpsb
popf
jno
hlt
xor
xchg
rorb
cmp
cwtl
sbb
ret
xchg
int3
inc
out
jae
out
aas
in
pop
add
lret
inc
or
lret
sti
arpl
rcl
lods
subl
sub
inc
inc
test
enter
pop
dec
imul
mov
lods
lret
cmp
xlat
cmp
pop
inc
xchg
inc
aad
sub
icebp
adc
push
jae
rcr
stos
xor
mov
push
push
aaa
dec
push
rcl
stc
lods
adc
mov
push
adc
je
mov
insb
ret
jmp
das
jl
mov
pop
mov
loopne
and
inc
lods
rcrl
mov
out
dec
sub
aam
in
das
popa
inc
push
push
dec
lds
cmp
lock
jmp
test
setp
lcall
add
lret
popa
outsb
sbb
sbb
mov
jb
pop
shll
roll
sub
push
jmp
jne
add
dec
add
outsb
add
add
popa
add
add
add
add
outsb
add
outsl
add
add
add
add
push
add
add
popa
add
add
jne
jb
add
add
add
outsl
data16
add
add
add
jae
add
outsb
add
add
add
add
imul
popa
add
add
add
add
outsb
data16
imul
add
add
push
add
add
ja
jb
add
outsb
outsl
je
je
outsl
outsb
jae
outsl
outsb
add
popa
insb
jns
imul
jae
add
jae
je
popa
add
insb
add
jae
push
add
add
add
outsl
add
add
arpl
add
jbe
jb
add
add
add
outsl
add
add
