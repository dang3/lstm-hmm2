jmp
mov
cmp
jb
push
push
lea
xor
test
jbe
push
push
pop
sub
mov
mov
mov
mov
ror
lea
imul
xor
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
push
mov
push
push
push
push
push
push
call
mov
mov
rol
mov
mov
movl
push
call
decl
jne
test
je
mov
jmp
push
call
mov
mov
mov
add
mov
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
andl
pushl
xor
push
push
push
call
push
call
xor
push
push
push
pushl
call
incl
cmpl
jb
push
call
mov
push
push
call
mov
call
add
cmpl
mov
je
cmpl
jne
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
call
lea
push
mov
push
pop
add
xor
div
push
mov
pushl
pushl
call
push
pushl
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
push
lea
mov
mov
mov
mov
push
mov
xor
push
push
and
mov
mov
call
mov
lea
push
pushl
lea
push
movb
movb
push
pushl
push
push
call
push
push
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
call
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
xor
inc
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
add
push
lea
push
push
call
add
pushl
lea
push
pop
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
push
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
push
push
push
mov
mov
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
push
mov
sub
push
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
mov
jmp
mov
add
xor
nop
movb
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
leave
ret
xor
jmp
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
jmp
mov
mov
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
mov
imul
sub
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
div
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
add
xchg
push
pop
insb
into
mov
cs
mov
mov
gs
in
mov
pop
lds
in
out
mov
dec
outsb
or
inc
adc
testl
xchg
mov
scas
test
test
sti
data16
test
stos
cmp
mov
pop
insb
into
mov
cs
cld
mov
bound
dec
in
mov
pop
lds
in
out
mov
rclb
xor
shlb
jmp
pop
rcl
and
adc
mov
data16
xchg
push
mov
fsubrl
xchg
sti
movsb
add
dec
outsl
std
push
aam
jno
add
jmp
mov
call
xor
push
roll
adc
add
and
test
sbb
imul
add
mulb
or
or
out
and
ret
xchg
lret
popa
lods
push
xor
int
repz
shr
pop
testb
lret
into
xchg
jbe
cwtl
cld
cmp
fcmovne
addb
stos
sar
inc
outsb
int
sarb
scas
test
push
mov
mov
sub
mov
ds
push
xchg
out
push
clc
popa
xchg
jbe
mov
xchg
inc
jne
mov
add
hlt
mov
adc
int3
sub
cmpsl
jbe
inc
jg
push
mov
mov
cwtl
push
fldl
sub
aam
jae
sub
push
mov
popf
stc
loop
sub
cmpsl
daa
push
xor
mulb
outsb
iret
xchg
push
call
fcmovnb
cmp
and
into
out
lods
pusha
jno
scas
enter
rorl
pop
pop
sbb
pop
idivl
into
adc
pop
jl
mov
outsb
mov
lock
add
add
add
mov
push
push
loope
push
or
push
addl
dec
lret
mov
mov
and
add
scas
jg
cs
dec
imul
pop
sbb
pop
adc
push
xor
or
fwait
cmp
pop
lahf
xor
or
mov
out
arpl
rcr
sbb
add
mov
imul
or
and
lea
in
ret
push
or
ja
push
and
loop
cmp
pusha
pop
push
add
sbb
sbb
push
loop
jns
inc
sbb
int3
repnz
mov
pop
mov
sbb
xchg
push
bound
repz
or
ds
cld
adc
addl
aaa
add
add
add
add
add
mov
inc
ror
and
dec
out
int
repz
or
ljmp
sahf
push
mov
rclb
jg,pt
xchg
fs
fldl
lock
shr
sbbb
push
xor
pushf
add
mov
mov
mov
daa
clc
movsl
je
xchg
jp
xlat
push
fstpt
or
or
adc
mov
inc
shrl
add
stos
add
pop
sub
cmc
lahf
or
dec
dec
sbb
sub
jns
dec
lahf
jle
adc
cwtl
ffreep
sbb
fldcw
dec
test
xchg
cmp
mov
mov
mov
es
lret
mov
and
into
jnp
dec
stos
push
imull
rorb
stc
movsb
pop
and
dec
aaa
lods
addr16
popf
xchg
adc
mov
mov
jnp
mov
add
add
sbb
shlb
test
mov
add
andb
pop
out
ljmp
pop
add
fnstenv
test
jns
inc
add
mov
xor
lods
in
xchg
push
and
mov
aam
adc
sub
outsl
decb
cmp
pop
jno
mov
push
and
mov
clc
push
mov
add
add
add
add
ret
mov
subl
scas
sbb
ds
ljmp
xorb
cld
mov
ss
mov
xchg
pop
notb
insl
in
xor
fidivrs
pop
mov
loop
push
sbbb
pop
subl
jge
mov
insl
push
xor
xor
or
pop
and
test
pop
leave
popa
fisubrl
dec
jecxz
adc
add
add
jns
mov
repz
mov
and
fsubl
inc
push
jae
fildll
and
xchg
xchg
punpckldq
or
lea
cli
lret
pop
aas
or
adcb
inc
dec
inc
mov
adc
push
xor
les
int
rcl
xchg
push
sub
and
and
cwtl
sahf
aam
fstpt
adc
inc
push
xor
js
push
sbb
daa
in
js
repz
lods
mov
rorl
add
add
mov
cmpsb
stc
cwtl
xchg
mov
add
pop
fwait
gs
mov
ss
data16
ljmp
ds
push
push
mov
xchg
push
std
jb
data16
sbb
sbb
push
addl
mov
xor
loope
push
popf
mov
shl
divl
sbb
repz
fs
test
es
daa
sub
cmp
pushf
ja
jne
add
add
jne
or
jb
pop
cltd
sub
mov
jno
or
in
mov
jno
outsb
inc
mov
scas
leave
insl
dec
mov
jo
and
fdiv
pushf
dec
shll
imul
and
fsubs
into
fisubs
shlb
mov
out
push
shrb
incb
push
cld
add
jmp
aas
in
pop
jp
stos
push
es
jp
popf
push
jp
lahf
push
aam
popf
call
or
out
xchg
or
bound
sti
dec
jno
ss
jb
and
add
mov
sub
or
add
lock
sbb
iret
mov
dec
cwtl
pop
dec
and
xlat
mov
fiadds
and
mov
adc
xor
pop
sub
cmpsb
ss
dec
mov
jo
iret
push
loope
cmc
stc
push
aam
mov
test
aas
popf
xor
das
dec
inc
dec
fidivrs
mov
xchg
adc
std
lret
add
inc
mov
mov
mov
mov
movl
lahf
adcb
sahf
pop
push
and
xchg
push
mov
add
outsl
mov
add
loopne
cltd
shlb
iret
stc
add
cltd
out
mov
stc
dec
sub
cmpsl
mov
push
sbb
shll
test
dec
add
fnstenv
xorl
cmpsb
add
jl
loopne
adcl
dec
jb
xchg
pop
lahf
pop
push
mov
mov
insl
mov
dec
or
xlat
ds
loopne
mov
jb
mov
add
mov
dec
mov
mov
mov
cli
pop
repnz
xor
push
jl
mov
xor
push
mov
mov
iret
or
inc
xlat
int
jbe
cmpsl
mov
xchg
mov
or
xchg
push
adc
in
cmpsb
ja
fisttpl
mov
push
in
in
dec
push
xchg
scas
lods
add
xchg
std
mov
push
xor
and
rol
and
or
jecxz
call
cli
and
mov
sub
in
pop
ja
jo
xchg
xchg
dec
pop
mov
arpl
mov
dec
iret
dec
cli
push
lods
test
mov
ja
fcmovnb
aad
mov
pop
cli
xor
push
and
pop
dec
jo
lahf
mov
and
iret
and
xchg
flds
add
xor
aaa
jnp
loope
mov
mov
mov
sbbl
or
mov
scas
jne
rorl
mov
xor
cmp
pop
daa
sbb
rcl
negb
in
iretw
sbb
add
jl
ljmp
popa
icebp
pop
add
dec
xchg
divl
pushf
repz
pop
mov
imul
scas
pop
rcrb
aam
inc
jae
pop
addr16
out
shrl
hlt
pop
push
lock
push
push
out
mov
rcrb
sbb
inc
inc
dec
je
xor
jo
jmp
jge
icebp
insl
sbb
add
aaa
ljmp
loope
adc
dec
bound
decb
lods
and
mov
cs
jb
inc
adc
add
sarb
es
inc
push
inc
and
lds
aaa
jecxz
dec
add
insl
fwait
scas
inc
push
aaa
cmpsl
mov
ffreep
sbb
push
test
mov
les
push
pop
mov
push
test
add
jl
add
cwtl
mov
mov
out
cmc
and
jae
lret
fsubrl
mov
rcr
pop
inc
or
stos
and
lahf
push
loopne
stos
loope
mov
scas
add
pop
or
dec
or
xchg
dec
mov
mov
je
inc
stos
pop
and
sbb
mov
lcall
or
cmp
dec
arpl
jbe
popa
or
out
and
fidivs
adc
leave
out
lods
jne
and
aas
mov
fmuls
into
push
pop
repz
adc
mov
pop
out
int
push
cli
inc
jno
in
and
enter
mov
jle
push
ret
test
add
fimull
adc
mov
jle
lret
les
and
mov
mov
mov
jo
inc
shlb
jle
daa
push
mov
sarb
inc
ret
stc
pushf
push
out
and
add
cwtl
mov
sbb
inc
dec
aas
pop
shll
out
fcomps
sub
pusha
sbb
test
in
gs
mov
or
add
out
inc
sbb
and
sub
ja
or
inc
fs
cmp
xrelease
dec
xchg
push
mov
out
test
fildl
and
outsb
pop
or
mov
fs
inc
xchg
mov
mov
sbb
cmp
push
adc
cmc
inc
test
js
adc
shll
andl
mov
add
add
add
insb
pop
out
aaa
inc
test
mov
dec
xor
pop
mov
jb
dec
mov
fcomps
mov
aas
lock
mov
add
xchg
fs
pop
jns
push
and
repnz
jmp
mov
adc
sbb
sbb
jmp
push
mov
sbb
sbb
popf
sub
lret
mov
outsb
cmp
pop
in
dec
data16
pop
imul
pusha
inc
cltd
std
or
sub
xor
jle
add
pop
nop
daa
sbb
sub
in
jno
pushw
fwait
cwtl
dec
add
inc
push
xchg
enter
xchg
jp
out
jb
push
push
xchg
or
sub
inc
push
cmp
fdivrl
pop
sbb
gs
adc
add
dec
in
lods
cmp
je
or
sub
mov
hlt
mov
cmpb
adc
movsb
sbb
inc
mov
mov
call
insb
xor
lds
add
cmpsb
inc
test
inc
pop
jbe
inc
orb
and
inc
hlt
or
orb
sub
xchg
push
push
adc
xchg
jecxz
push
pop
xchg
and
adc
js
cmp
in
cmc
xchg
xchg
lret
or
insl
cmp
xorb
fucom
jp
sub
add
pop
and
adcl
sub
lods
js
test
in
int3
inc
sub
dec
repnz
cmp
lock
shl
mov
sbb
stos
push
inc
or
jecxz
lahf
jle
fnstsw
adc
xchg
aaa
xchg
test
sub
int3
dec
inc
dec
popa
xor
cld
cmp
sahf
cs
mov
or
out
xor
dec
mov
mov
rcrb
shrl
call
out
ja
add
add
in
shll
jle
and
loopne
and
lret
sub
xchg
cmp
jne
sbb
cwtl
sub
pop
repz
mov
cmp
adc
pushf
test
dec
xor
sub
jmp
sub
call
push
push
cmp
sbb
dec
mov
push
lock
mov
adc
fdivs
push
lcall
popl
add
inc
sub
jo
shll
xchg
xchg
jae
push
cmp
push
push
das
pop
es
inc
rol
sbb
cmc
nop
sub
and
cltd
ja
xor
and
cmp
imul
inc
xlat
mov
jnp
sbb
sub
popf
ds
in
mov
pop
addb
cmp
fs
insb
adc
cmp
xor
mov
cmpsb
sub
dec
lret
xchg
add
sub
negb
int3
idivb
sbb
das
js
movb
mov
push
hlt
popf
adc
and
sub
test
jne
and
packssdw
cmpsb
mov
cltd
xchg
repnz
add
xchg
xchg
dec
ret
ss
idivl
or
jp
insb
cwtl
nop
gs
insb
add
call
aam
cmp
lcall
xchg
out
add
mov
daa
daa
lret
inc
test
cld
add
add
mov
cs
dec
dec
or
cmp
and
pop
inc
insl
mov
outsl
insb
mov
dec
stos
ret
fstpl
ret
jl
jg
mov
stos
mov
push
cmp
jmp
cmp
enter
add
cmp
aam
xor
cmc
ffreep
add
xchg
mov
je
les
arpl
push
mov
lret
in
add
or
enter
std
jbe
or
fwait
sub
test
nop
mov
xor
push
mov
mov
sbb
mov
adc
jp
pop
fwait
add
adc
mov
js
jecxz
out
arpl
push
jmp
lcall
mov
jno
fildll
add
mov
mov
lds
lds
ret
inc
or
add
add
add
add
pushf
xchg
bound
pop
loope
loope
aam
and
dec
shlb
cmp
lds
insb
lods
cmpsb
or
lods
pop
fld
push
cs
push
or
ret
repnz
mov
jmp
stc
shll
test
mov
lahf
adc
lds
insl
fmulp
stc
jo
add
dec
sbb
jge
xchg
push
les
mov
stos
mov
mov
pop
test
mov
cmp
cmp
js
aam
hlt
in
sbb
push
leave
pop
sub
cmpsb
pop
stos
call
jecxz
push
fistps
xchg
inc
mov
and
cwtl
add
insl
addb
fbstp
add
inc
das
js
aad
sbb
sbb
mov
jecxz
int3
inc
cmp
xchg
mov
test
adc
in
cs
add
hlt
cltd
pop
out
inc
mov
rcr
dec
cmp
loope
cwtl
movsl
xor
pop
push
and
out
jno
je
test
je
push
in
fildl
fadds
dec
gs
aas
ja
push
lret
xchg
xchg
jbe
jl
call
pop
sbb
sbb
add
add
cmp
icebp
mov
push
push
and
scas
in
cmpsl
mov
push
inc
test
cmpl
inc
sub
sub
jno
mov
std
inc
sbb
inc
jp
mov
fdivrl
inc
test
iret
mov
popf
add
push
jge
mov
dec
or
dec
loope
push
inc
enter
pusha
out
popa
jno
sbb
hlt
add
ficoml
push
adc
loope
dec
clc
test
negl
adc
dec
inc
pop
xor
xchg
xor
notb
xor
lret
insb
test
sbb
jo
stos
mov
pop
int
xchg
aas
int3
xor
orb
int3
pop
inc
lods
add
icebp
inc
xchg
xor
jmp
fsubs
jmp
pop
shlb
xchg
cmc
add
add
add
add
jnp
mov
std
outsl
fbstp
jae
xchg
xor
xchg
push
gs
movsb
jnp
movnti
cmp
mov
clc
jmp
cwtl
sub
xchg
sub
push
mov
ret
gs
lret
mov
aaa
sbb
adc
dec
aas
pop
xor
mov
ljmp
lcall
inc
outsl
inc
sbb
xor
add
pop
pop
mov
loop
add
loope
mov
mov
jmp
sub
cmp
mov
mov
repz
clc
cmp
and
loope
or
aaa
add
xchg
adc
sub
ds
les
inc
in
outsl
data16
pop
or
nop
in
lret
or
and
lea
js
mov
dec
xchg
inc
lods
mov
and
insb
movsl
call
jge
ja
add
adc
xchg
and
or
mov
inc
aaa
add
xor
mov
aad
mov
sbb
xor
sti
out
push
in
push
xchg
mov
in
sbb
aad
sub
lods
in
fdivr
push
jle
cmp
sti
xchg
mov
inc
xchg
xor
rcrb
jo
jae
out
in
xor
stos
cmpsl
out
jae
fmul
lds
and
adcb
add
add
sub
cmc
add
dec
push
pushf
xor
jno
push
scas
dec
pop
hlt
mov
cwtl
rcrb
loop
xor
inc
pop
and
rorl
out
loop
sub
js
push
ret
cwtl
lret
pop
movsb
cmp
inc
enter
or
lock
and
jmp
fistl
test
clc
in
ret
fisttpll
adc
pop
repz
add
jmp
sub
lock
mov
mov
inc
xor
and
rcrb
sub
add
or
rcrb
mov
cmp
shll
pop
popa
fidivl
cmpsb
test
aad
lea
jnp
add
and
dec
sarl
push
mov
xchg
loop
outsb
sbb
jbe
leave
enter
aam
pop
clc
gs
lds
add
ljmp
adc
rsm
insb
test
mov
dec
cmpsl
and
push
rcrb
ret
cmp
aam
dec
sahf
hlt
in
ja
sub
xor
add
fildl
fwait
leave
jb
xchg
push
mov
dec
ss
or
in
rol
mov
push
sbb
ds
xchg
rcl
rcrl
scas
shr
cld
push
ror
ljmp
lcall
push
scas
xchg
sbb
add
add
xor
dec
xchg
cltd
pop
aam
decb
cwtl
inc
stc
arpl
pop
je
sbb
leave
pop
pop
sbb
mov
or
or
jne
inc
sub
lock
rcrl
mov
sar
add
rolb
mov
add
lcall
fcmovnu
pop
mov
sbb
xchg
fidivs
nop
mov
xor
adc
jnp
mov
xchg
xor
add
in
jp
bswap
mov
xlat
rol
mov
push
scas
iret
fs
insl
insl
lods
enter
pusha
push
enter
cmp
mov
sub
pop
sub
add
das
scas
pop
insb
mov
pop
xchg
cwtl
sbb
jp
add
bound
loop
in
daa
jmp
sbb
outsb
add
testl
ret
or
xchg
cld
mov
out
stos
xchg
decl
cmp
cmp
and
add
add
pop
into
lods
cmp
rorb
add
in
hlt
pop
or
mov
sub
jns
cmp
dec
hlt
js
jg
add
es
cmp
aas
shrl
adc
aas
or
and
rclb
dec
daa
arpl
sub
jnp
dec
sbb
ds
lret
rolb
rcl
cmpsb
ja
ret
daa
leave
cli
sbb
push
in
push
cmp
xor
lret
stc
rcl
xchg
add
add
add
int
dec
test
test
push
mov
cltd
shrl
xchg
cmp
sub
aam
mov
clc
push
out
clc
lds
mov
push
xchg
push
in
xchg
mov
pop
ja
xchg
dec
dec
ja
add
in
incl
cmp
data16
pushf
xor
push
es
xchg
xchg
outsb
mov
ds
out
mull
ss
lock
orl
int3
cmp
daa
add
add
decb
mov
outsl
stos
cs
xchg
dec
in
out
inc
loope
pop
cmp
lahf
mov
inc
repnz
clc
inc
adc
dec
jle
mov
outsb
adc
cmpsb
sbb
pop
sub
rcrb
hlt
shll
push
push
jns
fwait
dec
les
mov
and
push
xchg
push
sbb
xchg
popf
dec
mov
add
jne
or
and
push
nop
loopne
xor
stos
xor
lods
test
xorb
daa
pop
jo
mov
jle
test
xchg
ret
xchg
sub
cmovns
sbbb
sbb
pop
mov
mov
cld
in
xor
xor
jo
les
or
sub
out
jl
popf
adc
sti
les
xor
insl
add
sar
mov
dec
ret
push
subb
adc
jb
xor
push
fistps
inc
out
lock
or
popa
add
scas
arpl
jge
or
in
lret
push
push
push
movsb
or
jb
adc
rcr
mov
push
aas
mov
add
fldt
fwait
ja
sarb
insl
and
jb
pusha
adc
sbb
iret
and
mov
add
add
add
add
hlt
xchg
sbb
fwait
sub
int
insl
inc
sub
aad
pop
inc
outsl
lea
xchg
xorl
cmpsb
cltd
out
bound
aad
insl
cltd
mov
aam
dec
imul
push
loop
orl
jnp
mov
mov
outsl
cli
and
ds
or
pop
mov
fidivrs
jmp
sub
loopne
and
sbb
jnp
push
gs
js
loop
fidivrs
jne
mov
push
nop
je
shrb
pop
adc
pop
sahf
jns
lret
inc
and
cld
insl
inc
ja
into
jecxz
sbb
push
jae
aad
ja
mov
inc
mov
jge
xor
sub
sbb
adcb
mov
nop
or
addr16
cmp
jmp
xchg
mov
enter
inc
out
test
test
fs
push
fists
mov
push
xchg
and
add
or
addb
add
push
push
push
fyl2x
mov
mov
and
sarb
cmp
loopne
in
out
leave
xchg
mov
or
mov
jbe
subb
div
mov
dec
loope
inc
dec
lea
push
test
mov
fidivl
mov
cmp
icebp
fimull
je
rolb
je
cmp
dec
sti
rcll
add
pop
mov
shlb
push
mov
mov
add
xchg
pop
mov
jo
into
jbe
inc
push
fistpll
rcl
mov
mov
lret
jno
popf
out
loopne
push
in
push
xor
push
adc
cmp
inc
aaa
aam
and
pop
push
fsubl
xor
jg
shrl
pusha
fisubl
xor
gs
xlat
fsts
fisttpl
leave
xchg
jns
cmp
dec
into
xchg
and
xorb
mov
and
clc
je
jnp
push
adc
push
mov
or
jmp
mov
add
add
mov
add
popa
xchg
negl
or
imul
or
xor
adc
mov
out
sbb
mov
nop
test
pop
mov
fstl
sbb
mov
cmp
movsl
adcl
stos
mov
adc
nop
cmp
jecxz
mov
std
nop
xchg
loop
mov
xor
cwtl
ds
repz
adcb
xchg
inc
lds
add
sub
or
daa
test
xchg
cmp
aam
dec
jne
dec
in
cmp
repz
lods
insb
frstor
add
jne
mov
lret
mov
jnp
fbstp
ret
mov
xchg
push
pop
sbb
sahf
movsl
pop
imul
imul
mov
fdivrp
out
jmp
xchg
fsub
cmpxchg
test
fs
test
add
xchg
fldt
push
adc
in
mov
jne
fisubrl
xchg
mov
aaa
jae
lea
outsb
xor
mov
mov
push
xchg
shl
sti
outsb
mov
mov
pushl
push
les
jp,pn
shrb
ret
xchg
jmp
push
aad
xchg
mov
loope
jb
pop
mov
jne
repz
add
add
add
add
fcmove
cmp
jmp
jge
es
pop
push
loope
js
push
fsubp
jne
repz
dec
insl
rcll
mov
sbb
fdivs
mov
ja
lret
popf
cmp
lret
add
xor
fstps
sti
push
and
mov
sbb
in
push
xchg
and
imul
mov
test
repnz
xchg
pop
iret
jo
bound
push
fsubs
add
dec
or
mov
cmpsb
mov
cltd
xchg
jle
inc
mov
xor
or
call
loope
aad
push
pop
fdivrs
popa
push
arpl
lret
xchg
clc
ja
and
call
pop
or
mov
jg
xchg
cli
xchg
repz
sbb
mov
orl
push
jne
in
adc
loopne
std
test
push
stos
pop
lea
and
mov
push
inc
cmp
add
add
add
xor
adc
jo
mov
in
in
and
sub
push
loop
jno
je
xor
scas
dec
out
push
js
xlat
mov
add
push
jns
mov
cmp
insl
cltd
stos
jo
lret
sbb
xchg
inc
filds
pop
add
pusha
pop
adc
pop
xchg
xchg
add
out
aas
inc
inc
lret
or
gs
xor
call
cmp
jg
sbb
push
rcrb
mov
mov
icebp
dec
xchg
cli
cltd
das
or
cwtl
cmp
inc
stc
mov
fdiv
in
xor
loop
fwait
lcall
insb
movsb
mov
pop
mov
mov
push
in
xchg
mov
lea
xor
fldenv
std
bound
mov
ljmp
nop
mov
sub
scas
add
adc
add
jge
cmpsl
push
test
add
xchg
mov
add
or
sub
jo
clc
fmulp
dec
push
mov
call
mov
sub
adc
and
or
pop
xchg
scas
cli
test
mov
stos
cltd
shlb
test
jmp
imul
pop
jo
jecxz
in
repnz
xor
jl
sarb
push
xor
imul
sub
mov
repnz
out
cmp
mov
xchg
add
add
aas
and
emms
mov
mov
ret
jae
nop
or
jmp
fs
scas
loop
ljmp
adc
dec
fwait
xor
push
and
and
pop
mov
aaa
aas
and
sub
aam
xchg
mov
adc
movsl
aad
cmp
jae
pushf
mov
xor
sbb
adc
mov
stos
dec
fnsave
sub
and
ja
sbb
add
dec
adc
dec
jno
mull
lods
mov
ds
mov
ja
insb
test
es
or
dec
rolb
mov
mov
adc
mov
movsl
aaa
adc
jbe
mov
cmc
xchg
dec
rcll
lahf
mov
jmp
mov
sbb
repz
push
sbb
out
xchg
jae
ficoml
lea
int3
pop
mov
sbbb
adc
cmp
ds
iret
adc
mov
mov
ljmp
loop
ret
adc
cmp
movsl
ljmp
push
inc
aam
pop
test
jo
imulb
ffree
mov
fst
out
jg
pushf
lahf
push
ja
adc
addb
cld
mov
aaa
sti
mov
push
dec
jg
sub
dec
mov
add
lahf
mov
dec
dec
adc
jle
add
xor
mov
inc
or
mov
mov
add
add
push
mov
ret
iret
stos
test
inc
dec
aaa
addl
adc
pop
insb
dec
fs
ret
sbb
push
cmp
lds
mov
in
bound
lcall
sbb
dec
inc
add
andb
cld
int
sbbl
add
imul
pusha
push
fmuls
sub
push
inc
mov
in
push
push
xor
and
adc
mov
das
ss
cmp
inc
arpl
mov
mov
inc
lods
ss
stos
in
add
jo
aas
icebp
aaa
xor
push
icebp
add
cltd
aam
lret
rcll
and
movsb
not
mov
and
pusha
mov
xor
cmp
and
or
add
aas
ljmp
lahf
into
inc
loopne
adc
jl
lret
dec
stos
dec
cmp
data16
mov
call
mov
inc
loop
test
dec
data16
daa
sub
nop
sahf
adc
pop
add
adc
out
pop
mov
dec
push
push
aas
scas
fnstenv
xlat
out
addr16
leave
cltd
popf
repnz
xchg
sbb
sbb
add
loope
mov
es
popf
in
ds
xchg
sbb
xlat
fnsave
sahf
dec
scas
sub
cmp
outsl
faddl
clc
stc
js
pop
data16
scas
push
sub
add
add
test
dec
pop
shlb
push
repz
es
leave
mov
add
lahf
ljmp
mov
xor
xlat
and
std
mov
dec
cmpsl
je
bound
fisubrl
fucomp
mov
mov
and
adc
mov
rolb
daa
insl
cmc
bound
pop
dec
add
pop
lahf
adc
js
cmpsb
movsl
cmp
sub
sub
add
pop
imul
cli
or
push
bound
mov
dec
mov
push
test
inc
cmp
adc
sahf
jmp
sub
inc
cmp
loope
ja
or
or
into
inc
push
mov
into
cmp
jle,pn
add
call
pop
mov
mov
inc
subb
addb
xor
stc
and
and
ss
mov
in
mov
daa
and
gs
add
sub
cmp
jns
add
xchg
mov
js
cltd
mov
rorb
shll
sbb
xchg
stos
xchg
or
cmpsb
mov
ljmp
mov
stos
mov
clc
pop
add
adc
cmpsl
adc
out
xor
rcll
xchg
les
cmp
jbe
cmpsl
in
sbb
xor
xlat
movsl
xlat
int
xchg
cmp
aaa
jle
sub
add
cwtl
aas
icebp
adc
idivb
addr16
xor
into
mov
sbb
jmp
mov
fsubs
gs
sub
push
fdivr
stc
xor
rol
xchg
sub
aad
flds
inc
shlb
repz
dec
cmpsb
cwtl
roll
sahf
mov
inc
sar
cmc
sarb
cmp
mov
scas
mov
jmp
or
xor
xlat
mov
testb
inc
push
and
aam
inc
sbb
shlb
aaa
mov
add
icebp
mov
pop
gs
ja
inc
mov
roll
add
cmpsl
test
jmp
cwtl
into
and
lea
jno
xor
adc
inc
mov
out
sti
or
add
or
dec
pop
pushf
decb
gs
scas
push
addr16
enter
leave
lods
mov
daa
lock
xchg
das
fsubrp
adcb
pop
out
lods
int3
cli
xchg
fisttpll
xor
jmp
inc
hlt
lret
add
enter
add
mov
cmp
jp
and
and
aad
jl
pop
jno
pop
jg
iret
cld
in
cmp
popa
sub
inc
mov
fldcw
ljmp
xchg
mov
loop
push
xchg
inc
shlb
fildl
cmpsl
inc
fimuls
aam
daa
pop
movsl
cmp
icebp
inc
lds
add
pop
pop
mov
push
popf
adc
sbb
xor
pushf
jmp
push
xchg
std
sbb
gs
cmc
mov
cmpsl
dec
fsubr
inc
push
stos
pop
mov
adc
jnp
fbstp
das
sbb
sbb
mov
out
push
add
movl
push
xorl
xchg
aad
js
mov
add
cli
fldcw
push
flds
faddl
xchg
adc
sub
fimull
mov
ja
push
addr16
lcall
inc
je
mov
or
in
scas
sub
xchg
bound
inc
lods
add
test
cmp
push
mov
push
mov
lods
in
lods
inc
sub
aaa
pop
mov
loope
and
mov
mov
jl
ficoml
add
add
add
add
sbb
andb
cli
adc
stos
lahf
js
jecxz
pop
push
daa
aad
ds
not
push
hlt
out
and
rcrb
pusha
repnz
xor
repnz
mov
mov
dec
adc
or
repnz
addr16
and
xchg
mov
jle
jecxz
movsl
imul
ror
jmp
mov
sbb
inc
dec
add
jge
or
cltd
roll
mov
inc
mov
gs
xor
insb
add
xchg
icebp
test
add
ds
add
loopne
iret
cld
les
gs
inc
inc
mov
mov
aaa
xchg
jbe
cld
out
cmp
adc
push
jp
fnstsw
jl
bound
push
orb
inc
sub
cld
and
inc
adc
xlat
push
dec
es
push
pop
push
ds
fwait
inc
inc
in
inc
push
add
iret
add
add
sbb
mov
mov
jb
lcall
es
sarb
mov
mov
lret
inc
mov
in
mov
aad
cli
popa
xor
dec
lret
ss
fcmovnb
scas
hlt
sub
pop
outsl
ljmp
mov
mov
jg
scas
inc
repnz
sbb
out
jb
push
enter
jnp
cmpsb
ret
in
xchg
push
jbe
flds
add
mov
loop
insb
dec
dec
push
mov
sbb
stos
cld
shll
adc
sub
xor
jnp
inc
out
std
icebp
sbb
mov
aam
orb
mov
jae
daa
lret
lret
cmpsb
cmpsl
jmp
add
mov
pop
mov
lea
or
lret
mov
loop
lcall
inc
add
jbe
xor
movsl
aaa
add
add
mov
out
lds
dec
xchg
sbb
xor
and
mov
imul
loope
dec
dec
outsb
dec
out
xor
loopne
sub
jp
pop
mov
pop
sub
clc
or
jecxz
push
insl
lcall
pop
repnz
stos
pop
mov
sbb
push
aad
add
out
adc
add
out
xor
loope
lret
mov
scas
fistps
and
fiaddl
add
nop
icebp
je
mov
sub
ret
iret
ficoml
hlt
ror
or
jbe
push
jl
into
mov
leave
test
mov
sbb
sbb
mov
insl
lods
inc
and
adc
xor
cmp
mov
fcomps
hlt
inc
and
lods
std
sti
rcr
stos
add
xlat
mov
push
ljmp
repz
or
add
add
add
out
push
test
cmpsl
inc
dec
ds
cli
mov
jle
popa
cwtl
jge
or
addb
pop
movsl
dec
out
int3
cmp
rorl
push
and
push
sub
mov
xor
repz
addr16
pop
ret
inc
and
fstps
sbb
jmp
xchg
scas
imul
insl
je
test
ljmp
andl
cli
push
mov
add
mov
test
fnsave
jne
xchg
mov
pop
mov
rcl
lea
sub
rcrl
sbb
xchg
aas
mov
mov
aad
shll
test
jp
mov
insl
adc
shll
xor
jle
inc
xor
jmp
dec
sbb
iret
jmp
add
loop
xor
push
in
dec
or
mov
dec
adc
push
sbb
adc
cmc
out
es
cwtl
dec
sbb
mov
test
inc
lret
or
std
and
or
sti
fcomps
mov
fildll
cmp
xchg
and
mov
xchg
inc
cmpsb
jle
and
cli
xchg
in
roll
lahf
adc
out
mov
iret
pop
or
cltd
xchg
xchg
inc
pop
dec
addr16
mov
add
rcll
lods
das
mov
xlat
pusha
or
nop
fdiv
or
dec
shlb
cmpsl
ljmp
push
pop
enter
xchg
test
xchg
inc
sbb
mov
clc
cmp
test
in
testl
shlb
out
jg
pop
adc
cmp
scas
xchg
fwait
and
aad
rcr
mov
add
add
add
add
sar
add
mov
imul
ret
mov
stos
rclb
in
stos
in
aaa
dec
imull
aad
ljmp
bound
sub
int
jne
mov
sbb
mov
int3
push
mov
sbb
adc
js
jmp
adc
push
orl
add
dec
mov
add
mov
es
data16
jp
or
orb
call
movb
hlt
ss
xor
lret
lret
movsl
dec
add
shll
sub
lret
ret
xlat
cmp
nop
cs
mov
fcmovnb
or
mov
xchg
fs
sbb
pop
mov
flds
sbb
add
sub
es
rcll
mov
adc
sub
add
jno
enter
mov
out
xor
jge
call
lods
das
imulb
jbe
adc
xchg
mov
dec
cltd
xchg
js
popa
aad
sub
and
scas
cmp
daa
mov
loope
and
lret
lods
lods
sub
fmuls
insb
jle
push
loope
ljmp
or
mov
into
das
push
xchg
rclb
decl
cmp
clc
or
mov
xor
xchg
pop
pop
xchg
cmp
add
pop
push
shrl
ret
sbb
push
aam
sahf
mov
inc
push
int
add
add
inc
movsl
or
rcl
pop
insl
add
sub
pushf
hlt
mov
ja
leave
pop
insb
jmp
cli
out
pushl
cmp
jg
daa
mov
adc
cs
rorb
add
cmp
xchg
sti
jmp
jg
lods
lea
into
fwait
movaps
jle
out
mov
popa
xor
mov
xchg
rorb
xchg
test
in
jg
sahf
les
js
adc
pop
imul
sbb
cltd
mov
int
pop
sar
in
stos
add
and
mov
movsl
jg
out
xchg
mov
mov
fistpl
mov
jge
add
add
pop
cmp
repz
into
scas
cmp
pop
lods
mov
lea
popf
out
pop
mov
aad
cs
pop
je
rcrl
mov
pop
sub
pop
gs
cmp
fldcw
mov
jne
stos
gs
mov
inc
push
mov
jle
test
stos
sbb
imul
cli
mov
ss
pop
leave
repnz
jbe
int
aad
fs
lea
aaa
arpl
mov
loop
add
add
add
data16
jbe
and
mov
xchg
mov
lea
mov
push
sbb
jo
jne
dec
jns
jle
xor
and
pop
mov
cmc
out
fxch
or
inc
out
jle
sarl
push
mov
adc
jns
clc
lods
add
es
xchg
push
pop
mov
ja
sbb
insl
xchg
insb
jecxz
test
add
add
add
add
cltd
pop
and
or
mov
push
repnz
add
sbb
divl
aas
jo
mov
mov
mov
movsb
lahf
aad
xor
stos
xchg
rolb
jne
dec
jae
and
mov
or
addb
push
repz
sbb
lods
sub
cmp
jmp
int
cmpsl
add
push
inc
fldcw
jp
sahf
cmp
test
shl
loope
cmp
in
pop
adc
or
in
sbb
lock
cmpsl
add
jecxz
loopne
pop
push
inc
xchg
push
in
dec
mov
fnstsw
js
xor
scas
shlb
imul
or
mov
std
out
xchg
mov
dec
xor
sub
hlt
pop
ret
inc
cmpl
and
scas
sbb
add
dec
notb
mov
aam
xchg
mov
jb
mov
icebp
test
into
aas
ljmp
ds
cmpl
add
or
incb
in
bound
pop
adc
mov
jge
popa
cld
bound
outsl
mov
or
jle
lret
pop
scas
jns
xchg
add
loopne,pn
jbe
xorl
mov
movsl
push
mov
jmp
js
add
std
add
ja
bound
xorl
add
or
idivb
test
arpl
mov
call
lds
mov
pop
mov
bound
cmp
imul
lods
sub
aam
xor
rolb
shl
fbstp
sub
lcall
dec
mov
xchg
dec
xchg
cmc
xchg
inc
lret
bswap
adc
mov
sub
dec
jo
cld
add
clc
lods
mov
std
insb
sub
inc
out
push
jl
cwtl
adc
ss
mov
fimull
sub
or
add
add
sti
das
sbbl
xlat
xchg
adc
aam
lcall
or
mov
cmp
mov
nop
loop
and
inc
lods
repnz
test
lods
loope
fwait
rcrb
cmpsl
loopne
push
push
add
scas
in
cld
jecxz
loop
push
mov
dec
add
add
ret
addl
inc
gs
inc
add
cmp
add
fs
imull
dec
ret
jle
movsb
sub
xchg
test
push
push
mov
jmp
mov
adc
scas
push
fs
pop
enter
adc
push
xor
loope
mov
andb
inc
addl
xor
xchg
ja
sti
shl
adc
xor
popf
and
lahf
and
sahf
xor
call
gs
outsl
sbb
test
add
add
and
scas
pusha
popl
ss
aas
xchg
