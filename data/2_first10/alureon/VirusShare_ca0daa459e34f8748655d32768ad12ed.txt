mov
in
in
mov
data16
jb
and
xchg
mov
jno
mov
popf
fwait
xchg
dec
fdivs
fisubs
dec
inc
loop
shll
and
mov
shrl
ljmp
ds
sub
mov
sahf
add
loope
sbb
lahf
xor
push
ds
xchg
lahf
jle
outsl
scas
arpl
dec
adc
mov
insl
add
call
pop
aas
cmp
ds
xchg
loopne
dec
sbb
sub
push
dec
outsl
mov
cltd
lahf
mov
xchg
movsb
xchg
pop
mov
adc
sti
fstpl
dec
clc
pop
notb
daa
jo
mov
dec
adc
ret
cmp
int
ficompl
call
jmp
sbb
push
aaa
jnp
pop
xor
mov
push
cli
push
pop
loopne
pushl
cwtl
out
rcrb
or
xor
loop
mov
xor
mov
push
call
out
xchg
cmpl
and
jae
ja
decb
dec
popf
loop
into
leave
mov
push
aaa
fildl
sub
xor
pushf
fwait
inc
insl
addr16
in
pop
addb
mov
cmp
fldt
cmp
pop
adc
push
sbb
dec
cli
push
pop
nop
lret
daa
out
pushf
mov
add
add
inc
iret
cmp
inc
sbb
mov
jmp
add
fiadds
icebp
sub
inc
pop
dec
ret
dec
rcrb
gs
push
aaa
mov
je
or
pop
in
pop
add
loope
cmp
cmp
adc
mov
xor
push
inc
ja
jno
shrb
repnz
adc
js
push
xor
fs
addr16
push
push
scas
pop
imul
push
in
mov
mov
in
mov
mov
sub
xor
mov
mulb
cmpsl
and
cmc
in
adc
inc
shll
inc
scas
in
popa
or
or
popa
add
out
jg
movsl
popa
pop
aam
cmp
fwait
add
arpl
loop
jecxz
inc
int
mov
adc
sub
jg
jae
stc
sub
jmp
sarl
loopne
pop
lock
sbb
dec
jl
aam
jl
imul
test
sub
lds
push
cmp
pop
sbb
fstpl
add
pop
sub
stc
push
mov
pop
sub
cwtl
je
and
push
and
mov
and
push
popf
push
sub
jmp
mov
idiv
xchg
or
xchg
add
mov
jo
mov
add
cs
inc
jmp
jnp
imul
mov
ficomps
outsb
loop
movsl
cmp
rorb
int3
lock
notl
fsubr
stc
jle
stos
xchg
mov
imul
rolb
jae
mov
xor
sbbb
inc
xchg
add
xor
pushf
push
ljmp
jl
les
cli
mov
add
test
or
xor
dec
jecxz
insl
push
push
mov
outsb
pop
pop
xor
loop
movsb
push
jnp
loop
fimuls
pop
fstpl
dec
xchg
ret
jb
jle
sbb
addr16
insl
aad
jae
ficomps
mov
inc
xor
pop
ficoms
fisttpl
jmp
and
xor
sub
flds
lods
fnsave
xor
sub
scas
push
fcoms
pop
loope
xchg
jg
xor
jns
test
push
inc
sub
jmp
cmp
ret
sti
mov
push
ror
int3
in
aam
sub
arpl
fimuls
jecxz
mov
pop
insb
cltd
pop
push
xchg
lret
push
shr
daa
adcl
xor
add
jns
adc
dec
mov
cmp
ds
xchg
mov
rorl
jl
leave
shrb
and
fsubp
sbb
jl
daa
push
rclb
int
sarl
lcall
push
ljmp
jb
and
pop
int3
ret
xor
mov
ret
cmc
ret
ret
mov
push
or
int
sbb
xorl
andb
add
cmp
inc
mov
ret
or
lahf
pop
fldt
rorl
xor
inc
add
hlt
mov
int
adc
clc
or
dec
fbld
adc
or
or
in
mov
pop
inc
push
push
bound
dec
lods
fists
hlt
out
jle
sub
lahf
test
call
or
stos
imul
mov
arpl
xchg
cld
orl
mov
mov
push
adc
jne
lods
aas
cli
in
cmp
cmp
arpl
cmp
sbbb
stc
gs
ret
mov
mov
loope
lods
out
dec
and
jge
or
int3
scas
mov
mov
adc
lcall
jo
dec
scas
cmpsl
dec
or
lahf
scas
adc
jle
add
leave
push
leave
loope
sbb
into
lods
add
fimuls
adc
iret
sbb
aaa
clc
fdivrs
test
incl
cmc
ret
test
mov
push
scas
jno
push
lret
fmull
xor
pushf
adc
inc
or
fisubs
fwait
pop
sub
cmp
vmovaps
inc
jne
stc
cltd
nop
push
hlt
pop
jmp
arpl
loop
insl
dec
mov
jecxz
sbb
mov
repz
shl
sbb
jbe
cwtl
inc
aad
popf
add
xor
dec
lock
cmp
fsts
fstpl
imul
dec
fcoml
inc
push
mov
call
push
mov
mov
into
and
std
xchg
pop
daa
mov
jo
incb
out
and
insb
icebp
pop
pushf
inc
subl
loop
sub
inc
lcall
xchg
inc
mov
ss
push
jle
outsl
xor
call
dec
dec
jae
pop
jecxz
stos
scas
cmpsb
je
int3
push
and
mov
xor
cld
mov
xchg
pop
adc
xchg
inc
push
mov
out
ficomps
mov
test
ljmp
xlat
mov
aas
adc
sbb
or
cli
popf
jne
cmpsl
dec
xchg
fadds
xor
sqrtps
pop
sbb
sub
inc
fistl
ret
inc
mov
lds
sub
xor
addr16
pcmpgtb
cltd
call
les
or
popf
xor
rorb
pop
pop
mov
shlb
jecxz
mov
shl
add
cmp
mov
pop
out
fdivr
stos
dec
movsb
int3
pop
adc
cmp
sbb
pop
inc
lea
mov
mov
aad
and
xlat
push
mov
cmc
pop
mov
pushl
pusha
testl
xchg
call
iret
rcll
and
jo
test
jbe
test
mov
sbb
push
sub
cmp
or
nop
imul
ds
movsb
jnp
test
cmp
xor
jecxz
insb
mov
push
sbb
dec
insl
jp
and
loop
sahf
mov
fsubr
loope
jmp
mov
push
xchg
inc
shrb
dec
loopne
in
jp
mov
clc
pop
cmpsl
rcr
push
in
xchg
leave
stc
and
add
popa
sbb
adc
mov
jg
sub
flds
dec
or
xlat
and
iret
subl
xchg
adc
pop
pushw
lods
cmp
mov
jmp
sub
and
cwtl
les
cmp
push
call
testb
sbb
push
xchg
and
cli
test
lcall
neg
aam
add
mov
arpl
adc
push
push
in
aas
xchg
jp
addr16
mov
pushf
jb
rclb
sbb
faddp
repnz
dec
test
jo
push
rolb
jb
jge
int3
cmp
sbb
test
push
filds
shll
pop
inc
sbb
adc
push
ljmp
out
popl
jmp
mov
xchg
shlb
pop
out
fstps
ja
in
jecxz
insb
cmp
dec
jne
jmp
imul
jne
mov
fistpll
xchg
outsl
xor
push
ja
idivb
shlb
stos
fcompl
aam
repnz
in
ret
or
insl
enter
adc
adc
rcl
cwtl
cmp
inc
daa
pop
movsl
arpl
dec
adc
pop
lds
mov
dec
out
iret
push
lretw
push
pop
xchg
imul
insb
lods
pop
clc
xor
inc
mov
push
add
data16
mov
and
dec
push
mov
fdivp
adc
and
mov
insl
sti
call
daa
int3
or
lea
lea
mov
xor
rolb
std
pop
mov
lahf
les
fistpll
stos
dec
push
aam
movsb
add
fwait
enter
sub
and
add
jnp
xlat
and
lret
loop
fistpll
or
xchg
pop
sub
leave
mov
inc
xor
call
add
lea
call
mov
push
inc
call
sub
lea
mov
inc
add
call
dec
dec
dec
add
lea
dec
dec
sub
lea
lea
dec
lea
inc
dec
call
sub
add
mov
or
movzwl
call
mov
lea
call
mov
inc
dec
sub
add
mov
add
inc
pop
lea
mov
add
add
mov
pop
add
inc
pop
mov
add
dec
mov
pop
mov
dec
or
dec
dec
mov
inc
add
pop
inc
mov
pop
dec
inc
mov
add
mov
call
inc
lea
lea
add
ret
lea
movsbl
push
sub
dec
push
xor
inc
push
mov
inc
push
inc
add
push
add
mov
mov
lea
movzwl
push
imul
ret
push
sub
add
inc
mov
lea
add
inc
push
add
lea
dec
call
pop
ret
jmp
inc
and
movzbl
mov
movzbl
dec
dec
xchg
inc
lea
mov
sub
xor
mov
inc
add
lea
inc
lea
mov
dec
jne
or
mov
lea
add
pop
add
inc
pop
inc
imul
pop
add
dec
imul
imul
dec
lea
add
movswl
inc
mov
mov
add
ret
push
push
dec
sub
push
mov
imul
or
dec
sub
and
push
xor
inc
mov
xor
push
mov
lea
and
sub
sub
add
mov
push
imul
mov
inc
push
inc
imul
xor
inc
add
push
dec
inc
push
add
add
pushl
inc
call
mov
add
inc
inc
sub
inc
mov
mov
dec
pop
ret
lea
cmp
jb
dec
xor
mov
lea
dec
mov
inc
inc
inc
add
dec
dec
inc
mov
mov
add
dec
cmp
jb
inc
pop
add
inc
inc
add
sub
dec
inc
dec
add
xor
add
lea
xor
dec
dec
mov
inc
mov
test
jbe
dec
imul
add
xor
mov
inc
mov
inc
dec
mov
inc
dec
and
imul
imul
mov
lea
dec
movzbl
inc
add
inc
or
and
inc
mov
mov
and
imul
mov
inc
inc
mov
dec
lea
mov
add
mov
sub
xor
inc
dec
jne
dec
mov
sub
xor
inc
dec
movsbl
lea
imul
movzwl
inc
mov
sub
mov
inc
dec
mov
sub
imul
and
mov
mov
dec
test
jbe
imul
dec
inc
and
or
add
and
imul
add
inc
mov
mov
add
sub
dec
inc
movzwl
inc
mov
mov
lea
mov
and
dec
mov
mov
mov
dec
movzbl
add
mov
add
or
mov
and
imul
and
mov
add
xor
movzbl
dec
and
mov
add
dec
mov
dec
add
movzbl
add
lea
add
inc
jmp
push
dec
inc
lea
mov
lea
mov
sub
add
inc
add
dec
or
imul
mov
lea
lea
inc
lea
mov
mov
dec
dec
lea
lea
lea
dec
dec
movsbl
mov
sub
mov
and
mov
dec
imul
dec
dec
mov
mov
cmp
je
or
inc
dec
push
lea
call
call
inc
dec
call
call
inc
imul
inc
lea
mov
imul
add
ret
movzwl
and
pop
dec
ret
push
or
mov
add
mov
or
push
inc
dec
push
imul
push
add
push
mov
add
mov
add
and
call
inc
push
sub
lea
xor
inc
sub
movzwl
neg
add
movsbl
or
add
add
or
mov
xor
inc
mov
mov
inc
inc
dec
dec
dec
je
or
movswl
mov
mov
dec
or
mov
mov
inc
mov
mov
repnz
inc
add
add
and
jmp
mov
mov
movzbl
inc
lea
dec
imul
dec
jmp
xor
mov
or
dec
mov
inc
mov
dec
pop
pop
ret
push
mov
mov
mov
dec
mov
mov
mov
inc
inc
dec
mov
mov
mov
mov
lea
add
or
add
inc
dec
dec
inc
lea
lea
movsbl
mov
mov
lea
pop
ret
sub
add
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
inc
inc
xor
imul
imul
mov
imul
imul
inc
add
dec
inc
mov
add
movzbl
cmp
jb
mov
push
add
movzwl
push
sub
lea
push
imul
lea
xor
add
inc
xor
mov
mov
xor
inc
sub
push
mov
add
mov
imul
xor
xor
sub
mov
inc
inc
mov
sub
mov
movzbl
inc
lea
dec
and
add
add
inc
add
xor
dec
movzbl
or
dec
inc
movswl
lea
inc
add
imul
inc
dec
dec
mov
add
add
or
inc
mov
jmp
insb
movsl
das
in
insl
nop
mov
test
aam
push
mov
outsb
push
and
push
sarl
aaa
out
xchg
adc
aaa
dec
cmp
sbb
clc
out
pop
push
imul
xor
xchg
mov
scas
inc
cmp
rcr
push
ds
testl
in
mov
push
mov
push
xchg
mov
jmp
or
jno
jns
jne
xlat
loop
loopne
imul
outsb
push
orb
test
push
test
adc
imul
mov
loop
jbe
outsb
daa
jecxz
fsubl
scas
sbb
pop
daa
xor
mov
popa
xchg
lea
xchg
inc
jp
mov
es
mov
push
in
sub
push
sub
jo
mov
sti
pushf
xor
movsb
dec
mov
sbb
out
ds
push
push
lret
xor
aam
loopne
sub
stos
inc
xchg
jns
adc
sbb
mov
push
xor
ret
add
test
jg
pop
inc
mov
in
mov
push
xor
aam
lods
popa
ljmp
enter
sti
mov
leave
repnz
stc
sbb
out
pop
fld
lods
mov
pop
int3
xor
les
sbb
in
fisttpl
and
lcall
loop
dec
pop
mov
dec
sbb
push
and
or
lea
add
bound
jbe
cmp
movsb
pop
in
iret
dec
sub
push
cmpl
int3
jl
scas
call
pop
jns
stos
pop
add
dec
fsubs
push
jecxz
popa
shlb
inc
add
test
decb
flds
cmp
mov
into
jmp
addl
inc
mov
in
jne
ret
mov
movsb
int
xchg
push
sub
lret
mov
enter
mov
data16
sbb
cwtl
xchg
push
mov
jbe
loopew
jae
mov
adc
push
fstps
push
fisubs
icebp
shll
and
and
in
adc
lret
push
idiv
add
cmp
cmp
jnp
jns
inc
js
xchg
hlt
adc
mov
jl
jecxz
add
incl
push
mov
mov
add
mov
push
imul
data16
fimull
sub
pop
or
movsb
aam
sub
add
lahf
jns
adc
add
mov
fisubrl
addr16
syscall
cld
addr16
mov
or
add
inc
int3
push
sub
xchg
dec
mulb
xor
inc
stc
mov
adc
sub
sahf
xchg
jbe
add
dec
or
test
dec
aam
pushf
cmp
icebp
dec
mov
iret
cs
cmp
cmpsb
es
inc
into
xchg
mov
andb
push
mov
xor
add
mov
mov
xchg
xchg
flds
jno
adc
cmp
out
call
or
dec
fdivs
sti
dec
icebp
inc
adc
fstpl
mov
cmp
shlb
sbb
xchg
cmp
add
out
push
mov
jae
cmp
adc
adc
sub
or
jmp
jo
mov
sbb
addb
dec
jecxz
jno
push
and
xor
flds
call
leave
xchg
fists
push
popf
stc
dec
and
mov
fistl
and
repz
and
mov
push
sbb
fs
mov
inc
mov
sub
pop
dec
mov
in
mov
dec
loope
stos
push
imul
inc
or
bound
inc
movsl
push
push
sarb
jb
pop
dec
icebp
mov
in
mov
sbb
push
lds
pop
jg
stos
or
xchg
cwtl
leave
jmp
and
int3
sti
sbb
adc
imul
cmpl
ljmp
imul
sahf
dec
sbb
cmpsl
das
unpcklps
mov
sub
fwait
xchg
push
xor
sahf
dec
mov
das
shll
rorb
hlt
int
cmp
loope
data16
inc
and
mov
add
or
out
lock
pop
mov
lret
push
push
dec
dec
dec
cmp
sub
add
lret
inc
sub
xchg
sbb
mov
xchg
push
add
insl
mov
sti
nop
xor
sub
pusha
and
mov
fbld
rcll
sub
loope
popf
inc
les
cli
xchg
dec
sub
xchg
pusha
mov
sub
sub
xor
dec
stos
cmpsl
push
cmp
sahf
out
fisubl
or
data16
popa
add
js
iret
mov
lret
stos
jbe
xchg
lock
lret
cmc
pop
imul
fucom
mov
jg
xchg
xchg
xchg
sbb
repnz
filds
lret
pop
pop
orb
dec
lea
addr16
mov
mov
jns
aas
or
stos
xor
pop
jb
mov
mov
jl
xchg
insl
lds
and
out
pop
adc
int3
sar
divb
lret
sahf
cmp
loope
pop
fldenv
and
dec
dec
cld
pop
mov
and
mov
ja
lods
jmp
sbb
ficoms
into
push
lcall
or
lcall
lods
arpl
mov
mov
pop
test
pushf
mov
adc
push
lock
stc
fisttps
in
fcmovbe
mov
lods
aas
cld
xchg
mov
test
lahf
adc
inc
ret
fdivrl
sub
sbb
adc
out
mov
inc
nop
xlat
mov
std
sbbb
lods
iret
mov
insl
jns
stos
aaa
xor
cltd
adc
add
dec
xor
jg
lahf
jns
and
fdiv
in
and
push
aaa
js
inc
outsl
mov
jne
cli
inc
sbb
sbb
test
or
fs
mov
jae
push
je
div
sub
pop
shl
scas
jp
cmp
mov
testl
in
dec
inc
sar
xchg
dec
ja
or
push
cli
popa
sbb
cmc
mov
andb
lods
push
jbe
adc
es
mov
jns
pop
jnp
imulw
movsl
jecxz
push
jae
aas
fld
sbb
xor
push
xor
leave
dec
adc
out
out
sub
adcb
dec
ret
sub
pop
mov
add
cmpsb
pushf
sub
xor
scas
xchg
in
test
lcall
lret
pop
cmc
sti
mov
loope
mov
imul
jns
decb
pusha
xchg
jl
and
addb
pop
hlt
lods
sti
cld
aam
sti
xchg
mov
jnp
lea
clc
data16
ss
loopne
xor
in
pusha
lahf
adc
xor
outsl
pop
xor
aam
mov
pop
js
ds
sti
cld
cmp
dec
popa
fwait
or
and
in
leave
pop
xlat
or
xchg
mov
add
cmc
push
dec
dec
cld
movsl
lret
xor
es
call
jmp
mov
je
inc
movb
push
mov
cmp
pushf
inc
scas
outsb
cmc
clc
xor
aaa
inc
cmc
lret
mov
movsl
mov
subb
cmpsl
sub
cmp
mov
jnp
int
fmuls
arpl
dec
test
push
popa
jp
mov
push
pop
push
jle
mov
fadds
cmpsb
push
mov
xor
or
insl
lea
pop
rcrb
mov
pop
xor
lods
sub
adc
lock
and
cld
cli
inc
stos
add
fbstp
xlat
in
add
cltd
lahf
sbbl
push
fisubrl
pop
fisubs
mov
int
sbb
leave
test
sub
in
clc
in
add
mov
notl
rol
mov
shrl
out
jo
fldcw
je
lcall
sbbb
imul
popf
sub
jp
je
pusha
popf
jl
jnp
pop
inc
sbb
or
aad
and
outsl
fists
mov
gs
xor
divl
out
pusha
pop
lods
pop
gs
pop
jae
imul
mov
xchg
in
sbbl
xchg
xor
test
fs
dec
loope
xlat
xchg
or
dec
sub
popa
out
push
mov
in
add
das
and
pop
sub
adc
dec
aas
inc
pop
imul
adc
mov
loope
aad
call
fnstsw
mov
inc
daa
xor
pop
and
stos
mov
rcrl
jmp
lahf
add
fwait
std
xlat
cwtl
in
jae
sahf
shr
adc
lret
stos
mov
jb
pop
mov
mov
shll
push
into
sbb
sbbl
add
out
cs
idivb
dec
sub
dec
mov
push
fcoml
mov
sub
sbb
sbb
fimuls
push
repz
adc
sbb
lcall
cli
dec
cmp
and
and
les
jge
repnz
insb
ss
movsl
in
jo
sbb
mov
fnstenv
ljmp
sub
or
insl
jb
mov
adc
stos
int
dec
into
mov
mov
add
jecxz
dec
xchg
mov
stos
jg
movsl
and
popa
jg
or
pop
sbb
or
mov
adc
insl
dec
pop
loope
pop
dec
pop
xchg
or
cmpsl
out
mov
mov
inc
mov
into
movsl
ljmp
and
shll
repz
sar
sub
loopne
add
inc
cmpsl
sbb
jbe
jne
mov
add
lea
dec
dec
mov
loope
sbbl
fadds
add
inc
jl
cmpsb
cmp
inc
call
mov
adc
int
xchg
mov
inc
push
pop
fistps
and
loop
cmpsl
repz
dec
shl
push
mov
fdivl
sub
inc
dec
xchg
cmp
faddl
mov
in
sbbl
add
addr16
jge
shlb
in
push
xor
adc
push
cwtl
mov
mov
adc
sub
push
lods
cmp
popf
xor
outsl
sbb
pop
out
mov
or
adc
in
gs
enter
out
jg
sbb
or
je
lds
fldenv
mov
xor
shl
pop
fisubrs
cwtl
leave
inc
data16
xchg
add
out
inc
mov
cmc
xchg
lret
pop
out
stos
jb
stos
stc
xchg
test
push
or
mov
sti
jo
andb
sbb
xchg
mov
lea
out
outsl
mov
inc
cmpsl
in
mov
mov
ret
scas
enter
xchg
or
xorl
les
lods
and
mov
scas
or
fists
mov
cltd
inc
mov
dec
out
xor
sub
inc
push
xchg
insb
loope
iret
daa
mov
fcomps
add
push
stc
pop
inc
push
movsb
leave
jnp
aaa
insb
sub
arpl
sub
push
adc
xor
push
mov
xchg
mov
and
and
sub
jae
sbb
adc
fidivl
and
fcomps
nop
sub
or
lret
mov
sbb
jae
je
mov
xchg
test
rcrl
cld
inc
js
jp
dec
mov
sbb
popf
adc
insb
aam
rclb
sbb
daa
cmp
js
mov
and
mov
or
and
pop
mov
cmp
ljmp
inc
sbb
jmp
mov
mov
pop
inc
sub
or
push
push
xchg
cs
mov
sub
pop
pop
in
sbb
mov
mov
mov
out
xchg
pop
jns
ds
xor
out
cwtl
lock
cmp
cmp
pop
addb
hlt
sbb
sahf
cmp
jbe
fistl
adc
cmpsb
adc
lahf
and
pop
aad
cmp
mov
sti
call
pop
adc
icebp
add
mov
negb
push
mov
in
mov
lcall
lcall
mov
lret
xchg
aad
inc
push
inc
loopne
cmp
test
test
stos
inc
in
inc
mov
adc
and
lea
and
subl
jbe
mov
cmc
xchg
jne
inc
push
adc
xor
repz
adc
fnstsw
aaa
mov
lea
sbb
clc
inc
jecxz
mov
aam
jmp
icebp
and
cltd
mov
jbe
addl
push
cmp
adc
xchg
outsl
je
jns
cltd
push
cmp
dec
loope
mov
dec
pusha
xor
mov
jae
imul
adc
bnd
add
push
mov
lods
das
fnstsw
jb
jb
aam
inc
inc
xor
push
mov
sub
and
sarb
cli
push
and
cld
jo
mov
repnz
mov
cli
ret
mov
ljmp
inc
lods
adc
lret
jb
cltd
mov
dec
push
pop
daa
and
push
push
fnsave
out
ja
and
out
repz
mov
imul
cmpl
shrl
cltd
cmpsl
adcl
pop
bound
mov
cmp
mov
cmp
loop
movsb
push
gs
shll
cltd
xchg
xlat
inc
shl
into
mov
sbb
inc
in
fwait
push
mov
xor
adc
pop
bound
jo
pop
xchg
push
je
push
rcr
dec
adc
push
push
xchg
cmp
or
hlt
jns
leave
cmp
cmpsl
mov
jnp
mov
adc
pop
mov
pop
sahf
call
xchg
mov
fisttpll
dec
lods
xor
ficoml
sarb
in
cmp
push
orl
and
or
dec
cmc
aas
int
movl
xor
xor
sub
mov
lock
inc
add
dec
sbb
push
cli
mov
aas
mov
sub
xchg
imull
int3
insb
jle
xor
into
mov
cmp
xor
cmp
popf
jbe
push
test
aaa
jbe
xchg
fmull
test
aam
or
sub
xchg
sbb
into
mov
imul
lea
mov
imul
ljmp
subl
xor
mov
enter
in
sub
iret
dec
xchg
ror
push
mov
scas
jl
xchg
and
xor
xchg
or
sub
aas
jns
std
das
sub
mov
xor
jg
xor
data16
dec
and
lods
ljmp
jns
dec
jb
imul
dec
sub
push
out
mov
dec
int3
xchg
jecxz
test
push
and
adc
lods
hlt
xor
rcll
addr16
jno
pop
mov
pop
int
add
adc
ret
das
call
pushf
pop
test
mov
adcb
cmp
xor
sub
fsubl
int
js
out
into
add
gs
sub
xor
add
push
dec
and
or
cmp
inc
inc
or
outsl
icebp
add
push
popa
mov
sub
loope
lahf
pusha
ficoml
cwtl
and
jne
adc
fxam
or
xor
leave
add
cmpsl
int3
outsb
xor
dec
test
outsl
lods
jae
ret
shll
pop
pop
dec
ljmp
cmpsl
sbb
add
movsb
xchg
mov
ret
adc
roll
cs
pop
mov
aaa
fnstcw
xor
movsl
push
push
cmp
xchg
in
push
add
cmp
mov
cmp
or
cmp
cwtl
cmc
scas
pop
add
movsl
sub
xor
dec
outsl
fwait
xchg
repz
sbb
test
mov
cs
mov
xor
sbb
repz
and
xlat
hlt
cwtl
out
test
pop
shl
fldl
cmp
js
test
push
push
adc
mov
insl
push
icebp
out
stos
imul
test
jb
adc
mov
mov
push
rolb
pop
movl
lret
mov
inc
mov
push
inc
jne
mov
and
ja,pt
push
ret
dec
push
subps
stos
add
jp
mov
repz
scas
data16
int
cmp
pop
std
dec
adc
pop
xchg
xor
fcoml
addb
cmp
inc
mov
imul
cmp
dec
arpl
and
cmp
imull
sarb
push
in
iret
adc
mov
fiaddl
jae
lea
scas
inc
ret
sbb
insb
sub
mov
popa
test
gs
test
sti
fdivrl
rcr
popf
inc
fstp
jb
leave
add
mov
ret
push
xor
sub
cmp
sub
add
scas
aad
jns
sarb
js
push
and
jne
dec
and
popf
into
addr16
push
dec
jp
cmp
cmp
jg
xchg
stos
xchg
sbb
inc
jmp
je
adc
push
sbb
sbb
push
cmc
cmp
shll
sbb
jnp
sbbl
jo
pop
pop
outsl
out
and
add
jo
fadds
mov
jbe
jmp
pop
or
loopne
xchg
inc
subl
add
in
xchg
push
mov
subl
inc
aaa
pop
jnp
or
add
cmp
ret
adc
call
mov
xlat
ds
sbb
jle
sub
lods
jecxz
inc
sub
in
leave
bound
test
push
fwait
adc
xor
testb
xchg
pop
push
out
xchg
dec
orb
fsubs
adc
pop
push
mov
enter
aam
push
add
insl
test
icebp
inc
push
rcll
nop
push
push
and
push
jnp
jns
push
sbb
loopne
sahf
mov
xchg
dec
sahf
dec
push
and
push
add
adc
arpl
neg
sbb
cmp
mov
jecxz
mov
stc
aas
sbbb
pop
cmp
jae
movsb
xchg
sti
xlat
inc
fsub
or
and
paddq
cmc
cmp
lds
stos
loopne
push
cltd
pop
cs
lds
pop
rorb
das
adc
das
aas
inc
stos
mov
data16
stc
leave
decl
mov
sbb
mov
dec
fistl
jbe
mov
repnz
int
lahf
and
cltd
jae
sti
pop
jle
mov
lret
pop
popa
arpl
pop
jbe
aam
pop
popa
rolb
push
outsb
ficoml
shll
push
cmp
push
test
pop
add
jnp
xchg
push
pop
lcall
out
adc
test
insb
fistpl
pop
dec
mov
mov
ss
add
cmp
iret
lea
fs
mov
and
pop
ret
cltd
xor
xchg
inc
mov
mul
dec
cmp
leave
push
mov
add
pop
xor
hlt
ret
cld
and
shll
add
inc
pusha
mov
cmp
sti
dec
push
insb
push
test
inc
stos
sub
mov
les
jle
call
dec
lds
xor
aaa
dec
notb
lcall
xchg
pop
loop
push
push
iret
push
inc
or
dec
sar
ds
enter
nop
pushf
cmp
rolb
out
mov
sbb
les
aam
jl
aad
pop
mov
lock
imul
daa
sub
fistpll
cmp
pop
adc
sbb
jne
popa
lods
inc
push
cmpsb
pop
mov
add
movsl
test
pop
or
cmpsb
repnz
lods
sub
in
out
test
mov
add
inc
sub
pusha
sub
out
icebp
fwait
in
cs
clc
push
jo
and
test
xchg
or
mov
lahf
xchg
test
sub
iret
xchg
lahf
mov
xor
call
arpl
rcl
sahf
sahf
xchg
cmp
loope
test
fimuls
add
out
fsubrp
popa
in
xor
jl
add
xor
loop
xor
ret
jle
mov
sbb
les
lods
aam
inc
cmpl
fcmovbe
mov
neg
dec
mov
xchg
dec
pop
xlat
jge
fcomp
loopne
and
addr16
call
lods
iret
pop
dec
mov
lret
les
xchg
rcrl
mov
movsl
adc
xor
and
stos
sbbl
or
xor
pushf
mov
repnz
push
in
mov
insl
lods
stos
xchg
test
adc
scas
cs
lock
arpl
arpl
mov
pop
push
mov
jns
hlt
pop
imul
mov
pushf
rorb
les
in
sbb
mov
in
inc
orb
rcrl
leave
insl
out
ljmp
aas
icebp
xchg
cmp
icebp
and
jecxz
pop
xchg
sub
dec
jle
and
out
lahf
push
ret
es
and
sub
push
or
dec
inc
scas
or
daa
and
jbe
push
imul
test
mov
inc
scas
leave
test
or
shll
dec
daa
inc
sbb
insl
adc
filds
sarb
pop
call
cli
inc
mov
daa
jnp
hlt
sub
mov
sub
pop
ret
das
fs
jg
aaa
sub
inc
addr16
push
and
mov
sbb
insb
mov
popa
movsl
addr16
into
adc
inc
and
inc
cmp
lret
pop
mov
add
or
int
scas
push
insb
mov
inc
and
mov
mov
adc
lcall
fwait
adc
jge
add
adc
enter
lods
cmp
pop
dec
les
or
das
mov
mov
xor
lahf
dec
mov
jecxz
pop
aas
das
out
and
enter
arpl
lea
icebp
mov
xchg
fistl
and
jp
and
shl
int3
scas
leave
ret
aaa
sub
or
incl
jge
xor
cmp
clc
bound
lret
push
or
push
or
push
inc
mov
stos
mov
jle
lret
sub
pop
gs
cmp
shld
jmp
in
pop
and
enter
xor
in
jge
adcb
push
daa
lds
ss
sbb
mov
fs
and
pop
mov
rorl
ja
sahf
insb
xor
inc
lahf
cmc
xor
mov
jae
fstpl
lds
sub
in
pop
cli
fstp
lods
mov
int
fistpll
and
fmulp
imul
int3
aaa
out
mov
test
mov
mov
jp
pop
xor
cmc
pop
test
mov
int3
cmp
hlt
xlat
inc
data16
sbb
cmp
sbb
inc
dec
lods
inc
dec
and
arpl
xlat
mov
test
fs
pusha
jbe
push
rcll
int
xorl
shrl
lods
mov
mov
popa
or
test
xchg
out
sbb
cmpsb
imul
adc
mov
and
adc
fwait
loop
push
cmc
out
lret
fmuls
outsb
xor
out
testb
xchg
pushf
stc
cli
idivb
add
jo
xchg
leave
dec
sbb
lret
cwtl
cmp
loope
imul
mov
int
test
rcrl
mov
and
sahf
das
pop
adc
jae
push
jecxz
lock
out
lret
cmp
sbb
ljmp
cmc
push
or
scas
ja
mov
aaa
or
push
add
push
or
in
icebp
out
mov
les
iret
jmp
leave
cmpsl
fnstenv
and
inc
in
inc
fcmovnu
test
cmp
pusha
push
adc
pop
xor
mov
lds
scas
sbb
mov
test
imul
cmpsb
mov
add
stos
xchg
int3
cmpxchg8b
dec
dec
aad
and
xorl
push
xchg
xchg
cwtl
out
jge
jl
cmp
mov
imul
and
movsl
jge
pop
dec
inc
sub
jmp
mov
jge
dec
scas
pop
cld
sub
ret
pop
bound
std
cltd
mov
movsb
mov
mov
push
ret
mov
mov
xchg
aaa
adc
sbb
add
daa
int
dec
in
loop
aas
cli
testb
and
jp
ret
sarl
subl
mov
jae
jl
clc
sub
mov
xchg
jne
ljmp
bound
adc
cli
mov
xor
adc
mov
lods
jbe
ss
jbe
push
mov
jmp
push
and
ss
cmp
ds
imul
ja
icebp
out
and
mov
jg
cld
stos
cld
imul
lret
push
in
imul
sbb
sbb
dec
shll
cmp
inc
mov
das
jo
push
adc
fistpll
popf
negl
and
inc
imul
dec
dec
pop
mov
xor
sbb
lahf
or
insl
push
jle
fwait
stos
mov
mov
sub
inc
js
sbb
cmp
lcall
cmp
sbb
cmp
xor
sbb
jbe
push
movsl
lds
inc
inc
mov
iret
in
pop
ffreep
sbb
xor
jmp
ret
dec
jmp
movsb
add
pop
setno
pushw
stos
sub
mov
mov
popa
inc
add
lea
rclb
add
les
rcll
clc
testl
scas
imul
sub
pusha
int
test
arpl
je
mov
push
lods
les
mov
inc
pop
outsl
xchg
cmpsb
js
adc
insb
pop
in
rorb
lret
pop
or
in
addr16
jnp
and
incb
enter
mov
mov
inc
add
add
roll
loopne
jmp
out
arpl
push
add
repz
out
fcmovbe
aaa
xchg
push
fnsave
dec
xchg
xchg
loopne
lds
enter
rcl
loope
inc
enter
add
xchg
xchg
in
mov
cli
and
sub
mov
dec
das
scas
mov
das
jmp
cli
jb
add
call
cld
sbb
int
inc
leave
out
mov
mov
and
push
test
mov
adc
enterw
scas
ja
and
xor
cmp
fists
cmp
jp
scas
test
gs
cmp
mov
pop
movsb
stos
leave
ret
mov
pop
pop
rolb
dec
es
jne
xchg
bound
xchg
popf
ljmp
mov
out
inc
adc
ret
inc
jb
inc
pop
lds
jmp
xor
mov
loopne
outsb
lss
faddl
lahf
pop
iret
cmp
dec
xor
bound
xor
pop
adcl
mov
ljmp
add
add
push
movsl
mov
xor
mov
mov
sub
push
and
mov
sub
xor
pop
and
dec
test
mov
dec
mov
fisubrl
mov
loop
jl
loopne
jnp
push
mov
stos
mov
cmp
and
lds
adc
and
jmp
push
insl
sub
xor
aaa
jl
dec
out
xor
push
fs
scas
lahf
sbb
repz
adcl
inc
call
lock
test
jmp
shlb
insl
jmp
adc
add
xlat
jmp
push
fcoml
aas
xor
pop
repnz
test
arpl
sbb
out
subl
push
sbb
mov
xchg
in
in
jne
notl
push
loopne
test
out
mov
call
cli
in
jno
mov
js
push
push
shrl
mov
mov
in
inc
inc
loopne
mov
js
dec
dec
and
and
mov
lret
mov
adc
jp
cltd
dec
pop
push
call
bound
pop
in
inc
test
ret
mov
and
test
inc
adc
push
mov
inc
ljmp
push
rol
int
iret
bound
mov
jns
mov
jbe
fisubl
std
cmc
mov
lods
leave
push
cmpsl
xor
push
aas
dec
cmp
push
fsubrs
out
in
sbb
loope
sub
push
adc
mov
les
jp
iret
pop
leave
outsl
push
cltd
xor
clc
sbbb
lds
scas
pop
fildll
jle
dec
push
xchg
lock
push
sar
push
lcall
hlt
repz
orb
loope
leave
sub
xchg
movsl
loope
or
xchg
mov
dec
jne
sub
cs
mov
inc
push
jne
push
and
push
aad
jg
jmp
pop
fisttpl
mov
cmp
ret
test
pop
inc
add
into
mov
ljmp
ret
lcall
js
out
pop
repnz
mov
shll
push
mov
rorl
movsb
mov
and
test
setg
cmp
lea
inc
out
push
adc
and
jmp
or
cltd
cmc
push
jb
mov
icebp
orb
mov
std
stos
and
sub
adc
jle
dec
jnp
jp
adc
jae
xchg
fiadds
add
insl
dec
popf
fstp
fsubs
mov
adc
icebp
leave
mov
scas
push
inc
lea
dec
in
mov
or
xchg
xchg
jmp
and
xchg
fimull
add
push
mov
adc
sub
orb
or
mov
imul
mov
cwtl
xchg
jno
sarb
sbb
imul
jnp
out
mov
pop
lods
in
push
andl
cmp
fildl
out
cld
ret
inc
push
mov
sahf
push
mov
xchg
hlt
out
cwtl
rorl
sub
je
ss
subl
jo
aas
jmp
push
sub
loope
fcompl
add
out
push
mov
loop
fisubs
rol
sbb
rcrb
sbb
jno
push
hlt
add
mov
out
ljmp
add
imul
hlt
pop
aam
lcall
pop
cmc
and
add
dec
dec
mov
jb
fsubrl
dec
in
lock
mov
adc
and
push
and
aad
sbb
pusha
mov
adc
jle
pop
jp
sub
sub
xchg
or
xor
xchg
inc
xor
mov
es
sti
lea
cmpsb
rcrl
lods
shrb
push
rclb
or
lret
mov
ret
adc
adc
xor
clc
out
movsl
aam
sahf
in
add
push
test
dec
loope
jnp
sub
sbbb
sub
js
adc
jns
and
and
test
iret
test
adc
lret
or
je
jns
jg
mov
fsubp
out
js
ja
xor
sbbl
or
cmp
or
lret
xlat
jmp
pop
jo
fildl
mov
inc
xchg
sub
imul
dec
loope
inc
push
orb
jge
push
loopne
jns
sub
adc
or
dec
js
mov
pusha
jb
scas
enter
jge
xor
pop
jae
xchg
add
adc
int3
cmp
add
pushw
cmp
dec
xchg
sbb
enter
mov
adc
jge
mov
inc
pop
cld
mov
mov
cmp
outsl
and
sub
aam
jne
mov
add
and
jne
arpl
adc
pushf
mov
sbbl
movsb
mov
pop
adc
pop
pushf
int3
sahf
sub
jge
je
nop
lahf
test
push
fs
lret
add
sbb
sahf
sbb
je
pop
inc
shll
jmp
and
clc
dec
cmp
repnz
push
in
push
jg
jno
mov
idiv
fsts
in
popf
adc
or
adc
jne
mov
into
mov
sub
pop
mov
pushl
ss
test
lea
xor
int
lahf
fcompl
lea
mov
addr16
cwtl
fisubl
mov
and
rcrb
movsl
inc
outsl
clc
outsb
dec
inc
inc
filds
add
pop
stc
cli
dec
loopne
adc
cmp
dec
mov
xchg
inc
jp
lret
inc
add
jge
mov
cmp
adc
inc
mov
test
lds
aas
add
arpl
ficomps
pop
inc
pop
sub
xor
and
add
jno
daa
rcll
jbe
ss
xor
inc
aam
pop
orb
movsb
movsl
inc
mov
cld
sub
sbb
jmp
sbb
add
push
popf
std
jl
cmp
lcall
sub
iret
and
mov
addr16
dec
sub
and
imul
jb
pop
addr16
out
mov
incb
addr16
mov
mov
aas
insb
test
pop
gs
aaa
xchg
leave
loop
lea
pushf
pop
ret
daa
fcoml
fiaddl
pop
push
dec
inc
stos
mov
cmpsb
int
xlat
push
cmc
pop
out
stos
jecxz
pop
mov
jge
lret
fldenv
or
int3
add
sub
cld
je
mov
pop
clc
inc
adc
lret
cmp
mov
in
and
mov
cmp
jl
negl
pop
mov
pop
lcall
mov
and
es
jmp
imul
or
cltd
sub
mov
pop
inc
sbb
push
adc
pop
iret
cmp
pop
xchg
cmp
xor
popf
xchg
lods
xchg
pop
push
inc
jp
mov
xchg
lahf
push
shlb
xor
shll
and
sarl
aaa
movsb
xor
ja
jns
sub
shlb
stos
mov
les
cmp
add
cmp
pop
jp
sbb
fldt
xchg
add
ja
in
shl
push
or
data16
adcb
mov
or
pop
in
aaa
inc
rclb
hlt
fwait
into
clc
mov
xchg
push
dec
das
outsl
addr16
jns
add
push
outsb
insb
sub
shr
sbbb
push
xchg
pop
int3
adc
loop
pop
call
xchg
fcoms
addr16
shll
bound
sbb
repz
daa
shlb
out
rolb
cmpsl
push
adc
jl
jg
sub
insl
data16
xor
scas
xchg
push
push
pop
in
sub
fbld
inc
int
cmp
add
pop
xor
ss
mov
dec
mov
jmp
push
out
mov
lods
mov
adcb
sbb
push
vmaxss
outsb
int3
push
jbe
cmpsl
push
and
add
into
mov
setne
or
out
out
fs
mov
add
stc
push
lea
mulb
or
mov
iret
aaa
stc
subl
pusha
aas
mov
imul
mov
test
jne
inc
xchg
cmp
int
mov
or
jo
enter
int
aam
sbb
or
scas
xor
cwtl
fistl
adc
js
push
or
inc
shlb
test
or
push
cmp
bound
mov
cld
cmp
or
push
jg
jp
jmp
jmp
jle
sub
loopne
cs
mov
sub
stc
inc
fidivs
fmuls
inc
jbe
test
push
mov
and
adc
sub
adcl
sub
cld
xchg
or
mov
mov
push
inc
and
push
fimull
out
mov
bound
xlat
cmp
repz
jge
cld
jmp
movsl
inc
adcl
test
rorl
pop
cwtl
ds
and
adc
lock
pop
cmp
inc
sub
in
loopne
jle
mov
dec
xchg
sti
lahf
jo
je
pop
mov
sbb
and
js
and
mov
arpl
jne
add
jle
addl
pavgw
js
shll
xor
rolb
jmp
es
out
adc
das
mov
sub
cmpsl
push
push
adc
cmpsl
inc
dec
mov
rcl
jp
add
xor
movsl
mov
fsubrl
div
mov
not
cmp
sbb
push
jbe
jecxz
mov
mov
mov
movsl
mov
mov
loope
mov
hlt
inc
call
jb
mov
idivb
xor
sbb
cmp
jne
pusha
jb
lea
xchg
and
sbb
mov
or
sbb
mov
arpl
and
push
mov
les
dec
cltd
jnp
inc
and
pop
mov
mov
data16
daa
int
lods
fldt
push
fimull
sub
repnz
cwtl
ret
mov
push
jg
es
pop
jns
test
mov
int3
jns
mov
jmp
std
fistpl
cmpsb
lea
int3
push
insl
dec
cmp
sub
cmc
dec
and
inc
dec
inc
lgs
add
jns
mull
out
fldenv
sahf
in
gs
movsb
roll
or
lods
rcrl
jecxz
cmpsl
mov
add
mov
sbbl
sbb
and
mov
mov
adcb
sahf
jne
into
xor
ficomps
je
aas
insb
dec
movsl
scas
mov
jmp
lea
dec
sbb
into
movb
and
fwait
or
test
xchg
lret
insb
imull
repnz
rcll
sbbb
mov
iret
lahf
and
xor
dec
xlat
inc
mov
xchg
mov
cmp
adc
lock
fnstcw
test
cld
call
pop
sbb
les
das
or
scas
xor
xor
sub
adc
outsl
cld
jno
jae
testl
push
rclb
xchg
mov
cmp
push
dec
adc
popa
aas
hlt
xor
cmp
mov
decb
xor
int3
stc
sbb
jmp
or
sbb
sbb
js
popa
imul
test
idivl
sub
movsl
push
imul
adc
jecxz
mov
xor
pop
sub
and
andb
test
hlt
jno
shrb
fldenv
lds
xchg
add
fidivrs
fldl
pop
adc
in
lea
jnp
hlt
lret
mov
arpl
xor
fs
out
add
pusha
xchg
loopne
sbb
mov
lret
xor
fwait
mov
aam
mov
and
lea
lret
push
movsl
and
jno
fidivrl
cs
test
or
adc
inc
pushl
lds
movsl
test
dec
mov
push
mov
inc
xor
dec
or
loopne
incl
inc
insb
xor
rorl
push
call
inc
inc
mov
push
cltd
jl
pop
mov
mov
sbb
rolb
sub
scas
pop
je
xchg
cltd
leave
mov
bound
add
sub
fwait
aam
cltd
xor
jae
ret
jg
outsl
jl
fwait
lock
iret
and
sbb
out
rcll
bound
mov
cli
mov
rcrb
scas
iret
or
push
or
sub
out
xchg
enter
jecxz
cltd
inc
xor
or
movsb
cmp
dec
outsl
iret
inc
xchg
rcrb
adc
fndisi(8087
pop
pop
xor
jno
inc
outsl
or
push
inc
pop
mov
pop
cmc
cmp
test
xor
loope
test
cmp
call
shl
cmp
scas
data16
out
movsb
nop
andb
call
push
cmp
mov
daa
popf
jp
cs
outsl
pop
push
adc
xchg
lahf
fiadds
inc
out
sbb
dec
call
push
insb
outsb
cmpxchg
push
frstor
cli
adc
cs
mov
push
lea
jne
inc
mov
sbb
test
push
xchg
stos
sub
push
jecxz
xor
mov
push
pusha
rcl
pop
inc
push
xchg
into
or
outsb
sarl
sti
andl
xor
xor
sbb
icebp
outsb
lods
adc
push
fdecstp
pop
mov
add
stos
add
inc
sub
outsl
shrl
int3
stos
sub
bswap
out
and
pushf
popa
mov
into
push
gs
jle
adc
addr16
and
mov
movsl
mov
fst
xor
in
pop
mov
push
lds
iret
push
push
or
pop
inc
addr16
ss
ljmp
fldt
pop
ljmp
or
je
cltd
outsl
sub
ret
cmp
mov
cmp
push
out
sbb
mov
mov
push
dec
hlt
sbb
pop
push
mov
jmp
jge
imul
or
mov
inc
testl
jbe
xchg
xlat
loope
mov
ljmp
push
mov
sbb
jno,pt
frstor
pop
push
xlat
pop
loop
mov
sti
imul
xor
mov
and
dec
pusha
pop
adc
dec
jno
lods
test
pop
int3
push
jnp
repnz
enter
inc
xchg
cs
jge
push
cld
dec
xchg
mov
test
jnp
cmp
sbb
xchg
mov
daa
mov
add
xchg
imul
inc
push
add
xlat
lea
enter
push
enter
mov
dec
cmp
nop
loop
lret
sub
xchg
or
mov
cmp
cld
push
push
movsl
jb
mov
fcomps
sbb
sbb
inc
add
rcr
sub
jo
push
dec
mov
incb
ret
xlat
aad
and
jne
inc
fs
sub
aaa
mov
fcoml
xlat
mov
loopne
jmp
add
cmp
xor
sbb
cld
jmp
inc
push
inc
lret
mov
stos
loop
jae
scas
test
sub
sub
cmpsl
mov
push
stos
fmul
xchg
push
orb
adc
push
ljmp
std
push
pop
mov
dec
aas
inc
cwtl
fbstp
inc
add
aaa
sbb
mov
xor
pop
or
dec
lahf
outsl
mov
stc
int
rorb
adc
push
mov
push
cltd
jns
std
and
fs
scas
xor
xor
scas
cmpsl
push
ljmp
pop
lea
rcr
jmp
lock
mov
test
subb
add
dec
ret
fwait
loopne
push
hlt
pop
or
cmpsb
push
test
cmc
sbb
aad
out
mov
sbb
movsb
test
cmp
pushf
adc
xchg
rorb
xchg
daa
cmp
inc
imul
dec
sub
push
fld
arpl
sbb
test
push
add
sub
std
mov
sti
pop
push
mov
lock
mov
daa
xchg
adc
xor
sbb
cltd
inc
add
inc
fs
jno
jae
test
fstl
sub
inc
lcall
iret
movsb
mov
or
ret
mov
popf
adc
mov
aam
jnp
xchg
jne
mov
imul
mov
movsl
shlb
and
lods
imul
adc
xorb
out
rcrl
stc
fildll
and
sub
popa
cmp
aam
cwtl
test
dec
int3
addr16
ljmp
ret
cwtl
add
pop
out
mov
and
push
lods
int3
aad
fcmovnu
std
aaa
cltd
add
fcmovb
mov
aad
loope
out
hlt
and
xchg
jae
jl
movsl
sbbl
shlb
or
adc
inc
or
dec
dec
loope
mov
mov
or
sbb
jbe
fcompl
adc
pop
or
mov
test
addr16
sub
pop
push
sbbl
mov
popf
xacquire
inc
sub
das
leave
mov
jle
sub
bound
adc
mov
jp
push
loopne
jp
outsl
ds
es
inc
iret
data16
inc
addr16
jmp
pop
push
cmpsl
iret
dec
sub
les
hlt
xchg
jne
stc
cmp
mov
loope
loope
pushf
in
cmp
enter
rolb
add
in
jns
dec
mov
jg
fs
data16
jnp
mov
outsl
mov
adc
push
int
ljmp
bound
mov
icebp
pop
add
test
gs
inc
dec
leave
jmp
fldz
push
mov
pop
test
aad
xor
sub
sub
inc
bound
xor
cmovnp
mov
push
sbb
xchg
pop
jl
icebp
lret
push
movsl
test
mov
add
fdivrl
xchg
inc
jmp
lds
aaa
adc
add
push
sbb
sub
pop
or
or
jne
movsb
insb
insb
sarb
add
call
imul
in
in
dec
push
je
jno
mov
jge
nop
ja
fists
ja
adc
pop
sub
ja
pop
xlat
scas
inc
aad
jb
call
clc
jno
adc
sti
ds
pop
xchg
mov
xor
lods
insb
or
mov
iret
daa
xor
adc
cmp
sub
pusha
dec
arpl
ss
pop
test
cmpb
cmp
adc
and
repz
out
inc
scas
inc
xchg
das
sub
push
xchg
push
mov
les
and
jmp
les
jg
outsl
rcrl
enter
push
repnz
fiaddl
stos
outsl
aas
xor
jecxz
xorl
jne
pop
std
addb
sbb
nop
cwtl
cmp
xchg
pop
and
mov
pop
mov
shl
fldenv
bound
sub
cmpsl
enter
xchg
push
xchg
mov
mov
ja
mov
mov
xor
lods
out
aas
inc
movsb
pop
add
and
pop
fstl
push
in
ss
xor
push
in
jecxz
lods
sub
loopne
mov
pop
addr16
sub
shrl
notl
les
fdivrl
pop
pop
enter
push
push
cmc
aam
xchg
out
lret
jns
push
sub
and
movsl
outsl
cli
jp
hlt
xor
cmp
leave
mov
in
inc
dec
popa
in
leave
mov
loop
outsb
popa
pop
add
xor
ficompl
out
push
fdivs
lret
inc
lea
arpl
jbe
hlt
push
and
lret
movsb
lret
stos
or
xchg
sub
orb
jnp
daa
insb
inc
mov
cld
in
pop
push
mov
jne
test
xor
stc
punpcklwd
aad
jg
insb
push
loop
test
ja
mov
pop
push
mov
inc
dec
and
and
jb
add
icebp
push
mov
rcll
or
out
xlat
push
in
jl
pop
mov
insl
cmpl
nop
in
add
add
jle
stc
xor
addb
cmc
test
in
scas
inc
sahf
xchg
xchg
xor
popf
xor
in
aaa
adc
add
cld
sti
and
bnd
push
in
jmp
ja
ljmp
pop
jb
push
inc
fdivrs
cmpsl
cmp
loopne
push
aam
xchg
jp
xchg
xor
inc
fs
or
lret
dec
call
call
bound
fwait
add
mov
or
es
inc
mov
jge
and
sahf
pop
pop
movsl
andb
shll
imul
inc
lods
cmp
ror
scas
jb
leave
jmp
arpl
test
adc
aaa
mov
popf
cmpsb
outsl
call
iret
das
sbb
pop
xchg
inc
mov
mov
aaa
pusha
jb
lcall
xchg
daa
dec
inc
push
bound
stos
pop
adc
xchg
outsl
insl
aad
sbb
mov
es
pop
push
adc
pop
insl
push
sub
jbe
dec
or
adc
int3
es
mov
inc
arpl
mov
jns
lret
adc
xchg
mov
fs
pushf
bound
mov
cmpsl
xchg
bnd
jns
push
sub
sbb
movsl
ja
xchg
and
ss
adc
popf
push
test
push
sub
mov
cmpsl
aad
xchg
mov
test
outsb
repz
inc
out
rolb
inc
mov
nop
lods
jle
dec
add
and
fs
sub
mov
cltd
stc
insb
sub
pushf
es
lods
shl
bnd
pop
out
dec
mov
adc
mov
mov
add
loopne
xlat
xchg
sbb
ret
cwtl
push
inc
sbb
lret
add
xor
lods
insb
mov
mov
aam
cmp
or
inc
sbb
stos
movsl
push
push
mov
inc
adc
inc
int
popa
pop
push
gs
xchg
stos
lds
mov
adc
cmp
xorb
stos
adc
jmp
xor
cmpsb
dec
mov
sbb
outsl
pop
jp
pop
sub
lods
pop
xor
cwtl
inc
into
hlt
dec
das
pop
lods
imul
sub
leave
sbb
out
sub
fdivl
sub
shrb
and
push
mov
sbb
mov
scas
mov
jne
imul
call
imul
addr16
inc
xchg
mov
and
das
xor
cmp
aaa
cmp
fidivrs
jge
xor
mov
int3
int3
push
js
jb
fs
es
stos
inc
xchg
pop
sub
mov
cmpsb
loopne
fs
ljmp
stos
mov
lret
imulb
push
mov
leave
mov
lea
out
xchg
dec
inc
dec
std
mov
sub
xchg
mov
or
jo
outsb
into
stos
cmp
int3
mov
sub
repnz
shr
xchg
lret
xlat
xchg
fwait
add
mov
outsl
out
xor
mov
icebp
repz
push
test
jbe
lea
icebp
pop
and
dec
and
movsl
ret
mov
dec
je
sub
outsl
shlb
mov
mov
pop
lret
out
and
xor
out
lcall
arpl
push
std
mov
mov
hlt
rep
fadds
or
jae
popf
mov
imul
fdivrl
movsl
sbb
into
ljmp
jg
iret
in
inc
xor
ja
repnz
fcmovnb
ret
or
xchg
cmp
or
jg
mov
push
mov
shrl
subl
leave
lahf
mov
leave
mov
pop
mov
or
dec
sbb
repnz
test
sub
dec
jg
loop
decb
dec
mov
xor
sub
pop
in
dec
test
mov
ja
xor
arpl
dec
cmp
insb
dec
cli
push
lock
inc
in
sbb
scas
ljmp
lea
arpl
adc
aas
nop
in
jnp
mov
lret
mov
lods
movsb
mov
notb
movntq
pushf
movsb
push
cmpsl
xchg
sub
and
pop
flds
push
mov
adc
cmp
pushf
clc
sahf
mov
dec
pop
es
fs
dec
cs
xchg
stos
jae
or
or
inc
and
or
add
xchg
es
xchg
pop
lahf
pop
pop
jp
sub
and
adc
mov
xor
lahf
sub
addr16
sub
sbb
sti
push
lods
stos
lods
aam
xlat
lea
sub
movsl
scas
jbe
sbb
test
push
test
repz
stos
sub
pop
mov
push
mov
xor
insb
loopne
push
mov
into
add
std
pop
and
adc
ja
pop
adc
sti
or
scas
rclb
jl
lret
mov
lret
pop
inc
mov
lar
das
mov
dec
iret
push
mov
sti
and
imul
test
and
out
cmpsl
pop
inc
mov
test
das
jb
int
jne
mov
insl
insb
inc
sti
lcall
xchg
repnz
out
mov
mov
adc
cmp
shlb
das
repz
aad
inc
and
sub
add
mov
bound
xchg
xchg
mov
aas
fisttpll
or
push
idivl
repz
dec
cmpsl
add
lcall
scas
xor
loope
xchg
dec
mov
repz
mov
dec
mov
popf
int
bound
add
fildll
popf
roll
mov
ss
xchg
daa
mov
mov
out
aaa
enter
out
cmp
shll
xchg
les
cmp
orl
movsb
jle
leave
jnp
cmp
mov
adc
lods
xchg
inc
mov
pop
and
push
mov
mov
push
xchg
mov
mov
fmuls
or
pushf
cmp
mov
or
jmp
cmp
push
leave
mov
lcall
or
jmp
lods
arpl
mov
pop
sub
mov
bound
loope
repnz
and
cmpsl
shl
out
call
push
das
movsl
mov
aas
adc
es
nop
cwtl
fwait
pop
std
mov
mov
bound
adc
pop
dec
mov
ficompl
call
xlat
insl
rcrl
cmpsl
mov
ljmp
lods
adc
shll
dec
lret
arpl
insb
mov
mov
lret
or
mov
mov
mov
jl
cmp
xor
mov
incb
jg
cmpsl
sbb
and
sti
addr16
xchg
fistps
lret
sbbl
cwtl
push
pop
loop
in
in
inc
lahf
sub
out
mov
jno
xor
cmpsl
stos
clc
stc
or
sbb
mov
pop
jo
adc
mov
mov
std
mov
inc
lret
xchg
mov
mov
imul
mov
rcrb
mov
xchg
lcall
into
pop
fs
pop
or
aam
jns
sahf
cmp
in
sbbl
test
or
cld
mov
or
push
je
xchg
rclb
jbe
cmp
test
rorb
icebp
add
push
insl
dec
fwait
mov
shrb
jo
sbb
pop
test
add
or
das
in
xor
xchg
loope
in
fcomip
in
jmp
jne
int
pop
adc
imul
mov
pushf
xor
ljmp
push
in
mov
add
xchg
lds
pop
sub
mov
xchg
jmp
loope
icebp
test
stos
inc
int
test
push
sub
push
je
inc
add
shlb
mov
in
pop
aad
xchg
insl
fs
mov
pop
aas
in
lcall
ss
pop
shl
mov
jno
inc
fcom
or
call
aas
sub
popf
push
dec
clc
rcr
inc
cmpsl
outsl
into
addr16
ja
js
cmc
cli
jp
dec
cltd
jge
mov
sub
adc
xchg
ret
int3
imulb
out
icebp
pop
xor
pop
xchg
sub
push
adc
loope
ret
xchg
clc
imul
fiaddl
sbb
ret
adcl
test
js
pop
pop
test
mov
pop
andl
pop
cmp
insl
test
sarb
inc
mov
jmp
fwait
das
mov
xlat
cli
sarl
addr16
pop
mov
cmpsl
sbbl
push
push
imul
imul
cmp
mov
push
aas
or
mov
out
and
int
push
mov
pop
std
xlat
add
leave
daa
adc
fwait
dec
incb
pop
adc
dec
mov
sub
adc
jle
jle
cmp
out
jb,pt
movsl
pop
inc
pop
xor
xchg
push
into
and
jb
mov
mov
pop
into
jp
dec
in
cmp
inc
sbb
in
mov
mov
int
enter
mov
mov
inc
push
aam
outsb
and
mov
sub
inc
addr16
sub
push
insb
mov
cwtl
pop
jg
inc
adc
xor
mov
sbb
or
xor
jecxz
nop
xchg
decl
jo
jmp
cmpsl
xlat
cmp
leave
stos
dec
addr16
adc
bound
ret
popf
cmc
or
mov
test
adc
and
out
int3
orb
dec
in
push
insl
and
insl
push
mov
sub
jmp
in
mov
xchg
in
mov
int3
sti
xor
add
mov
icebp
loopne
sub
std
pop
sbb
push
imul
in
adc
push
ljmp
adc
rcr
cmc
fldcw
clc
scas
sahf
adc
lock
pop
mov
insl
jmp
fsubl
xlat
rolb
sub
mov
add
jle
dec
xchg
xor
repnz
cmp
xchg
icebp
cmpsb
jae
es
xchg
cmpsl
sub
iret
xchg
popf
mov
xor
and
add
adc
pop
pusha
js
hlt
or
sahf
imulb
sub
and
es
nop
fsubrs
pop
mov
notl
dec
xchg
adc
fwait
es
pop
popa
fsub
mov
add
shl
dec
clc
negl
dec
iret
lock
loope
imul
mov
inc
add
pusha
mov
int
mov
sub
xchg
sarl
lea
hlt
bound
icebp
rorl
pop
imul
push
jno
fstl
rclb
std
or
in
aad
fs
dec
mov
scas
int
das
mov
pop
leave
mov
lea
xor
xchg
jb
cmp
mov
popf
mov
in
mov
add
inc
sbb
sbb
xchg
iret
dec
jno
movsl
daa
fidivs
lret
jns
imul
test
pop
dec
nop
fdivl
arpl
shlb
cmp
shr
mov
inc
popl
cwtl
jp
pushf
mov
lods
gs
imul
mov
xchg
aas
dec
inc
xlat
lock
or
jns
dec
xchg
cli
cmc
out
dec
cltd
arpl
xchg
cmp
sbb
cmp
lds
push
fcompl
int3
jle
and
insb
sti
dec
aad
dec
xchg
and
sbb
add
stc
mov
loopne
insb
fwait
pop
mov
cmp
xchg
loope
lret
mov
pushl
inc
popf
or
adc
mov
cwtl
jge
inc
popa
dec
scas
xor
pop
add
mov
cltd
xchg
mov
pop
push
dec
sahf
inc
mov
rcrb
xor
pop
pop
jae
fbld
loope
push
lret
sar
dec
rcrl
sbb
bound
xchg
sbb
inc
or
pusha
popa
or
cmp
shrl
or
mov
subl
adcb
lods
fs
pop
sbb
cmp
jl
call
dec
mov
dec
add
dec
outsl
cmp
or
fistpll
sbb
repz
daa
add
ljmp
inc
push
mov
xor
dec
arpl
nop
jmp
xchg
dec
cmp
sub
je
notl
ret
and
jae
nop
mov
fsts
sahf
push
pop
lcall
xchg
adc
inc
mov
push
xorl
clc
lods
popa
movsl
insl
or
ja
leave
dec
jecxz
scas
jle
and
mov
cli
push
lret
fadd
aas
or
imul
shlb
or
xchg
sub
and
cmp
xor
xchg
xor
aas
leave
mov
xor
push
add
push
lock
clc
out
stc
test
rcrl
xchg
inc
test
adcb
shrl
int3
cmpsb
es
adc
cmp
push
aaa
xchg
movsb
mov
jae
bound
inc
in
sbb
ljmp
pop
fildl
sbbb
dec
push
jno
inc
xchg
push
out
enter
xchg
mov
cs
aaa
divb
shrb
pop
ret
sub
iret
mov
jne
and
push
repz
cmp
xchg
ret
xchg
inc
repnz
ss
jb
fisubrl
pop
adc
and
cmp
idivl
inc
fwait
add
xorl
sub
mov
clc
jle
push
mov
das
dec
or
sub
and
xor
and
shll
daa
jnp
test
lods
in
andl
pushf
ss
lods
pop
adc
cmp
sbb
insb
aam
sub
dec
int
mov
ds
cmp
iret
icebp
mov
push
add
jecxz
idiv
sbb
jo
mov
cltd
fsubrs
push
out
daa
xor
push
div
xchg
jge
ljmp
lcall
imul
imul
mov
sbb
iret
scas
pop
lcall
push
cmpsb
push
popf
pop
mov
push
pushf
pop
fdivs
cwtl
pushf
jne
insb
cmc
xchg
pop
cltd
jb
cs
adc
adc
in
mov
xor
fnsave
imul
cmpl
cmpsb
xlat
je
cs
push
xor
lea
push
insb
mov
dec
add
add
inc
gs
inc
subl
cmp
or
push
pop
mov
pop
push
orl
lcall
pop
popa
cmpsl
adc
lret
rcll
add
cmpsb
jl
push
push
in
cwtl
pusha
in
dec
dec
lea
pusha
sub
pop
or
jo
lea
jmp
out
push
sbb
pushf
stos
cltd
sbb
js
mov
add
cwtl
scas
mov
add
stos
or
std
gs
idivb
movl
lods
aas
mov
mov
mov
xor
fsubs
or
fadds
shll
movsb
inc
xchg
pop
cmpb
adc
sti
add
adc
les
jg
sbb
mov
insb
bound
push
pop
xlat
iret
inc
and
popf
pusha
mov
push
aam
push
ss
lahf
sub
dec
or
or
outsl
ret
jns
and
adc
cmp
mov
cmpsl
dec
out
daa
add
cmp
pop
add
push
sub
cltd
mov
xchg
adc
in
cmp
mov
jno
mov
pop
xchg
pushl
xor
ss
xchg
mov
sub
jmp
mov
mov
xor
insb
clc
dec
cmc
jo
outsb
jo
push
ja
xchg
or
inc
sti
in
shll
lahf
fsts
or
leave
iret
sub
and
imul
adc
mov
jb
mov
test
aas
shrl
dec
xchg
in
mov
xor
adc
loope
pop
test
in
loope
or
inc
daa
mov
hlt
ja
iret
fcmove
or
mov
pop
sbb
loop
and
cmpsl
shl
fwait
pop
or
outsl
push
aas
sbb
xchg
jmp
mov
icebp
xchg
dec
mov
sbb
std
out
test
jl
mov
pop
jne
push
aaa
in
dec
icebp
pop
out
pop
ret
dec
outsl
fnstenv
mov
jecxz
std
adc
nop
repz
in
mov
out
rcll
mov
fisubrs
scas
xchg
mov
inc
ret
ja
shlb
mov
les
test
popf
jae
cmp
roll
test
scas
pusha
or
jno
xlat
aad
cltd
jae
push
pop
faddl
mov
sbb
or
pusha
jnp
bound
jmp
dec
sub
mov
bound
xor
out
aaa
mov
in
icebp
or
jmp
movsb
pushf
sub
cli
pop
cmp
test
int
stc
popf
testb
cmp
mov
cld
jge
xor
mov
mov
jne
repnz
mov
dec
pop
or
inc
pop
adc
or
jns
sbb
addb
out
and
mov
ljmp
rolb
xor
pop
shrl
fcomps
mov
pusha
sub
sub
mov
mov
scas
and
jo
push
scas
stos
cs
push
mov
imul
nop
mov
jge
sbbb
sarb
mov
lea
mov
pop
insl
xor
shl
sbb
scas
js
fimull
mov
shlb
push
and
cmp
push
sarb
adc
flds
xchg
rclb
stos
push
sub
push
adc
cmp
pusha
jmp
aaa
inc
dec
push
ja
jns
fwait
arpl
add
push
inc
sti
rcll
mov
mov
ds
cwtl
in
xlat
adc
fldcw
repnz
stos
in
sbb
mov
outsl
push
mov
lods
jae
pop
arpl
ljmp
in
mov
lret
pop
xlat
call
xchg
mov
sbb
lods
cmp
out
sbb
mov
mov
xchg
gs
shlb
pop
cmp
sub
mov
pop
aam
dec
icebp
pop
jecxz
call
xchg
sbb
scas
das
adc
push
push
push
mov
cld
out
leave
fidivrs
mov
pop
pop
mov
ds
and
loope
cli
jge
mov
scas
mov
into
push
push
mov
in
pop
xchg
mov
add
jecxz
in
mov
repnz
mov
jmp
daa
inc
inc
in
mov
sbb
bswap
inc
mov
test
rol
jmp
push
cmpsb
test
imul
add
nop
mov
add
shrb
adc
pop
hlt
lcall
lock
sub
in
ficoms
in
sbb
int3
mov
sbb
outsb
scas
push
sbb
adc
inc
out
mov
mov
and
incl
cmpb
xchg
xchg
into
les
daa
jge
push
ljmp
xor
xchg
push
xorb
into
sub
scas
dec
add
mov
js
cmp
pop
sub
testb
mov
fwait
dec
dec
pop
jge
in
xchg
sbb
xor
movsl
mov
fcomps
dec
sub
js
xchg
jge
loopne
insb
dec
and
inc
jbe
add
lock
iret
sarb
or
mov
dec
movsl
ja
aas
mov
pop
test
testl
dec
lods
and
sbb
dec
adc
and
dec
stos
into
ret
pushf
lahf
push
stc
inc
iret
sti
les
ja
das
loope
out
jmp
jle
mov
pushf
or
cmp
lods
lcall
and
xor
imul
testl
dec
jno
sbb
vpmacsswd
shr
shrl
sahf
xchg
push
push
mov
mov
lret
jo
push
int3
movsl
jmp
repnz
xlat
inc
arpl
test
or
scas
rol
jne
and
imul
jl
push
jle
cmp
fldt
int3
scas
xchg
jne
dec
cwtl
pop
aaa
fmuls
mov
sub
mov
mov
sti
repz
jp
sbbb
xchg
xchg
xor
hlt
cltd
dec
ds
xlat
movsb
int
leave
aad
push
pop
jne
es
pop
push
negl
movl
cmp
mov
in
sbb
bound
shrb
filds
mov
add
jo
cmp
add
lea
in
adc
je
es
shlb
test
and
jl
pop
data16
mov
sahf
push
pop
repz
hlt
mov
sbb
aad
xchg
jmp
inc
mov
lret
or
sub
out
cld
sub
popf
or
test
dec
test
xor
je
jge
loopne
test
sub
test
je
icebp
mov
sub
mov
fwait
leave
xchg
mov
test
inc
das
cmc
push
and
sbb
sub
xor
je
ja
sub
or
scas
push
mov
or
sub
movsb
and
push
sub
mov
adc
add
ret
mov
push
push
pop
push
push
unpckhps
fsubl
test
push
jecxz
test
iret
ss
sbb
jne
movsl
test
call
push
xor
mov
push
js
lock
scas
cwtl
rorb
enter
cmp
icebp
lcall
test
outsb
sub
mov
mov
jae
call
neg
rolb
test
pop
adcl
or
dec
mov
dec
add
fcom
fldcw
push
sub
ss
out
ds
or
rorl
sub
stos
iret
pop
adc
imul
jbe
xor
adc
fcompl
push
mov
cltd
add
push
jge
into
dec
adc
sub
sbbl
stc
ds
cmp
push
and
lods
shrl
inc
lcall
push
sub
adc
outsl
mov
xor
lahf
push
jbe
shrl
xor
jae
inc
adc
mov
je
movswl
xchg
loope
mov
push
mov
insl
aad
shrb
pop
or
or
xchg
xor
fs
mov
dec
daa
sbb
cmp
mov
shlb
aas
pop
and
jp
jl
push
rclb
lret
enter
mov
pop
pusha
cmpsb
repnz
push
push
pop
aaa
aas
out
add
ljmp
adc
jo
sbb
mov
jo
inc
or
add
jbe
addr16
push
jno
pop
xchg
mov
xor
cmpsb
or
dec
ret
xchg
test
cli
jo
sub
loopne
iret
jge
xchg
adc
aam
mov
in
movsb
lret
std
test
stos
add
int3
xchg
adcl
mov
cld
dec
inc
mov
and
stos
leave
cmp
dec
mov
mov
mov
sub
pushf
in
add
nop
mov
xchg
cmp
mov
inc
sahf
push
mov
lods
pop
pop
in
rol
outsb
xchg
push
aaa
push
cmp
sbbb
inc
lds
cmpsb
sub
rorb
or
clc
cmpb
pusha
stos
lcall
sbb
lret
inc
and
and
pop
jno
js
mov
jl
xchg
push
xchg
add
mov
adc
iret
jnp
and
cmp
adc
call
inc
or
dec
clc
xor
mov
jnp
add
pusha
pop
jnp
scas
scas
pop
mov
pop
mov
jne
adc
mov
clc
imul
inc
pop
bound
test
push
mov
xor
adc
push
stos
out
add
int3
pop
insl
cli
dec
xor
hlt
mov
and
fnstsw
jmp
jle
stc
inc
mov
dec
nop
xlat
xchg
or
xor
fstps
push
imul
and
adc
mov
dec
or
divl
jae
cmp
ds
mov
dec
in
loope
loop
inc
cwtl
pop
pop
les
cmp
jbe
mov
fistl
dec
js
ljmp
add
popf
sub
pusha
or
subl
fcomi
inc
pop
lret
mov
lahf
sbb
fldcw
je
shll
jne
ss
jne
inc
test
push
aas
clc
fsts
stc
enter
roll
xchg
divb
xchg
xor
insb
add
mov
cmp
mov
jge
leave
fimull
js
xchg
mov
inc
fmull
cmp
adc
jp
pop
push
mov
dec
arpl
adc
mov
ja
mov
cmp
shrb
lods
bound
mov
jecxz
test
mov
dec
xchg
fisttpl
xor
or
cwtl
xchg
test
scas
rcll
or
add
inc
cmp
push
sub
into
sub
and
fmull
mov
loop
xor
mov
cmp
sbb
pop
adc
out
pop
nop
pop
adc
subb
xor
xchg
subb
mov
stos
adc
jle
cs
mov
int
cltd
subb
dec
fwait
adc
out
push
jg
mov
mov
sbb
mov
insb
jnp
adc
pop
stc
push
xchg
mov
sahf
mov
dec
rolb
inc
out
adc
adc
adc
xchg
mov
xchg
jg
outsb
cld
pop
lock
flds
sub
fsubrl
ja
in
call
enter
lods
or
dec
mov
fucomip
cmp
stos
push
rolb
aas
jmp
inc
imul
negl
outsb
ret
call
out
push
pop
xchg
mov
insb
push
gs
dec
sub
push
cwtl
filds
aas
sub
inc
and
cli
xor
dec
das
push
fcmovb
orl
sbb
mov
pop
out
adc
negb
jge
dec
cmp
push
jbe
pop
mov
mov
rcrl
adc
jb
dec
fcom
pop
pop
sub
mov
jns
fldl
rcrb
xchg
adc
stos
jmp
pushf
mov
adc
mov
insl
dec
fs
cmp
mov
scas
popf
mov
sub
lods
enter
out
push
adc
neg
ja
jle
jo
add
sbb
lock
es
fistpll
fs
fstpl
lock
pop
jno
mov
into
dec
mov
and
push
rcl
or
mov
leave
test
filds
push
mov
xor
pop
and
add
sub
inc
xchg
dec
bound
add
and
fnstenv
clc
xlat
jl
sub
insb
pop
sbb
cmp
out
sbb
das
in
fisttpl
sub
outsl
and
dec
nop
pop
jb
dec
add
out
addb
jo
jecxz
add
sub
fisttps
faddl
lock
std
mov
aad
cld
sub
sub
pop
jae
jo
jl
daa
and
cmp
outsl
rcll
clc
mov
subb
xchg
inc
push
icebp
jp
mov
mov
add
adc
xchg
js
stos
scas
jb
jae
cmp
vpermilpd
fistps
adc
sub
pop
push
lcall
add
cmpsb
movsb
inc
sub
xor
dec
das
cmp
xchg
sti
in
call
scas
inc
pop
mov
jg
xchg
jge
dec
push
push
and
stos
or
repnz
mov
jmp
mov
filds
es
sbb
mov
jbe
cli
inc
push
out
in
xchg
rorb
mov
imul
mov
push
add
not
or
in
or
mov
fbstp
sub
and
adc
sahf
mov
in
out
inc
mov
fucomi
sub
jmp
pop
push
push
aam
in
outsb
div
cli
into
rolb
pop
dec
jno
push
inc
mov
dec
xchg
cmp
loop
xor
pushw
adc
jb
fs
hlt
jb
pop
stc
or
pop
movsl
sub
aam
jae
repz
pushf
xchg
mov
call
lods
loope,pn
negl
mov
push
insl
shrb
sbb
imul
jne
lahf
jecxz
fisubs
jg
xchg
arpl
shr
loopne
pop
fstl
js
pop
int3
xor
xor
je
fidivrl
sbb
cmpsl
fildll
mov
jg
push
jae
sbb
frstor
cmpsl
xchg
mov
push
pusha
dec
xlat
xor
push
aad
xor
in
add
incl
or
push
sbb
cmp
mov
imul
mov
pop
int
xchg
in
fadds
mov
add
or
gs
les
mov
push
mov
lcall
nop
ds
sbb
outsl
ss
and
sub
push
sti
jle
push
int
std
inc
cmp
sbb
rcl
cmp
or
pushl
rolb
lods
lahf
push
addl
pop
sarl
sbb
pop
xchg
repnz
add
mov
ljmp
lea
insl
dec
vzeroall
imul
dec
adc
add
loopne
roll
xchg
pop
xchg
jne
and
mov
rorb
pop
jb
mov
sbb
jecxz
cmp
pop
stos
sub
add
push
mov
mov
pushf
adc
jge
jbe
pop
inc
test
mov
mov
xor
sub
and
je
lret
xor
test
xor
add
pop
stc
pop
pop
and
mov
fsubl
dec
imul
push
es
lods
movsb
push
mov
xchg
repz
test
leave
pop
adc
sbb
aaa
cmp
inc
bound
mov
mov
and
loopne
xchg
cmp
movsl
inc
mov
rcl
push
sti
sbb
xor
mov
aaa
hlt
mov
and
adc
add
je
loopne
sub
lret
mov
mov
pop
push
pushf
movsl
push
lret
jmp
out
jbe
jbe
dec
jns
mov
rcl
xor
dec
je
test
sbb
adc
bound
aad
cmp
or
push
hlt
sbb
mov
xchg
xor
movsl
add
out
push
and
mov
mov
jbe
ret
leave
lcall
aas
mov
add
xchg
aam
addr16
xchg
jp
fdivp
fbld
out
xorb
call
leave
push
lret
sub
nop
add
mov
in
mov
jge
flds
inc
push
cltd
jmp
cld
add
sti
test
fwait
xchg
scas
xchg
adc
inc
pop
ret
fldt
aaa
into
cs
cs
inc
sbb
mov
mov
inc
xchg
inc
or
mov
dec
iret
sub
push
add
shlb
pop
ret
sbb
xor
scas
jmp
rorb
pop
pop
cmp
int3
test
push
insl
and
jg
mov
out
movsb
sbb
in
je
mov
adc
pop
arpl
fdiv
ret
dec
fadd
dec
cmpsb
test
fcompl
jo
out
push
push
pop
and
adc
pusha
inc
out
std
push
je
sub
cwtl
push
int
repnz
cmp
pushf
icebp
pop
mov
addr16
cwtl
xor
fsub
loope
shr
lea
push
shrl
jns
mov
sbb
xor
in
jge
mov
jns
cmp
addr16
cmpl
push
out
dec
scas
cmp
mov
rcrl
aam
imul
mov
push
mov
or
dec
push
push
lock
ss
lahf
jbe
into
or
xchg
jae
fs
call
std
aaa
lock
movsl
ret
sub
lock
inc
imulb
mov
js
pop
rcrl
lea
pop
sti
pop
popl
xchg
mov
out
sahf
lods
push
lock
std
sti
mov
sbb
mov
xchg
das
ljmp
sub
ficomps
mov
mov
pop
pop
pop
idivl
sbb
mov
in
jl
mov
mov
xor
mov
js
lods
inc
stos
aaa
inc
xchg
ds
fistpll
lds
mov
xlat
fnstenv
imul
pop
pop
mov
jo
xchg
mov
ja
jge
push
add
xor
mov
jle
sbb
addr16
mov
mov
les
adc
std
stc
adc
jno
add
lahf
mov
jg
popa
mov
lcall
dec
jbe
test
dec
mov
jns
push
cmp
clc
scas
jle
rorb
in
test
ret
rcll
adc
xchg
inc
pop
add
repz
fs
pop
das
in
in
mov
sbb
out
ss
jns
bound
fs
dec
stos
nop
ja
add
inc
popa
ljmp
sbb
mov
pop
pop
mov
push
orb
mov
loopne
or
adc
and
sub
movsl
dec
add
fnstsw
cmc
or
lahf
sub
xor
sbb
jp
mov
idiv
mov
aad
push
ret
movsl
mov
repnz
sarb
repz
sbb
popf
shlb
add
sub
pusha
sub
shl
icebp
sub
cmp
xchg
pop
jl
int3
xchg
shl
mov
dec
lea
scas
dec
push
xchg
cmp
push
xchg
imul
mov
jmp
jae
pushf
adc
insl
loop
sbb
push
in
and
fisttps
sub
jl
or
push
aaa
cmp
daa
mov
rcrb
adc
sbb
inc
imul
outsl
add
neg
add
add
pop
push
popa
into
sub
dec
scas
mov
and
xor
test
inc
or
adc
push
insl
stos
adc
loopne
mov
fdivrs
sub
jp
sahf
jp
ss
and
or
test
and
jecxz
das
xor
movsb
fs
jecxz
inc
xchg
push
je
xor
imul
je
mov
adc
mull
pop
sbb
popf
js
push
loopne
jp
jne
loop,pt
xor
sahf
mov
inc
sub
repnz
shl
subl
in
stc
sub
loop
cmp
fsubrl
scas
aaa
repnz
pop
and
sbb
int
xor
push
push
mov
aas
repnz
xor
cwtl
cld
mov
rcr
outsb
ds
sbb
lock
sbb
test
lret
testb
xor
dec
and
xchg
test
loopne
and
fldt
inc
test
pop
push
imul
lds
out
gs
repnz
icebp
aas
fstpl
mov
in
repz
inc
pop
sbbl
dec
add
call
sbb
lahf
rcrb
in
mov
cmpsb
mov
or
cmpsl
int3
mov
stos
out
adc
inc
clc
lcall
aas
cmpsl
lock
fists
test
daa
test
and
clc
mov
push
scas
xor
adc
or
mov
or
enter
shl
orl
and
mov
mov
rcr
mov
mov
cmp
mov
dec
pop
js
jne
mov
sub
stc
stos
scas
mulb
data16
jno
cltd
mov
hlt
das
stc
mov
daa
cmp
jmp
pop
sub
mov
fucom
inc
inc
rol
lods
and
lds
ljmp
outsl
fstps
sub
jmp
cmp
cmpsl
sub
jmpw
loop
add
aaa
dec
xchg
cs
jmp
icebp
inc
aas
mov
jp
test
bnd
test
jbe
sub
mov
test
clc
inc
mov
roll
push
dec
pusha
xchg
mov
pop
test
pushf
push
add
push
out
enter
pop
sbb
push
out
sbb
inc
dec
popa
pusha
push
mov
and
xchg
mov
jb
cmp
and
fsub
adc
mov
cmp
mov
adc
nop
rolb
out
jmp
in
add
int
pop
inc
pushf
setno
scas
jo
cs
loopne
or
cmpsl
jo
pop
fwait
jo
fadds
in
lods
or
push
stos
xchg
pop
cmpsb
jecxz
sbb
pop
test
ret
jmp
jns
dec
and
cli
repz
pop
test
xchg
ja
mov
jns
jo
add
adc
lea
fcoml
dec
mov
mov
imul
add
aaa
pop
pop
daa
lds
pushf
or
popa
popa
xchg
aam
leave
xchg
cmp
adc
dec
outsb
loope
inc
mov
fcompl
cltd
imul
bnd
add
mov
std
adc
in
into
hlt
inc
mov
cmc
inc
aaa
mov
adc
clc
subl
fstl
loopne
test
mov
jnp
or
mov
mov
cmp
mov
xchg
and
std
mull
lret
jle
fidivs
gs
notb
lea
mov
inc
and
into
clc
cs
ret
inc
cli
and
pop
pop
dec
cmp
leave
in
mov
sub
mov
loop
add
loope
lahf
inc
or
cmc
xor
frstor
mov
jge
jnp
push
or
xchg
insl
insb
cmc
fstpt
in
repnz
cmp
xchg
and
push
xchg
out
addr16
jb
into
jae
test
pop
decl
xchg
mov
nop
aad
xlat
bound
mov
and
js
mov
iret
movsl
push
sahf
pusha
leave
fs
fmul
ja
stos
or
xor
cld
sbb
push
jmp
dec
adc
adc
out
lock
stos
pusha
pop
ss
push
pop
cli
shl
sbb
adc
rolb
push
add
sbb
cmp
popf
xchg
aas
sbb
orl
imul
adc
xor
push
jno
jbe
adcl
or
insb
xchg
lea
mov
loope
jo
jmp
pop
clc
push
push
aad
out
push
lods
sub
aas
inc
push
and
jp
call
into
das
xor
sbb
jg
js
fistl
mov
push
fdivrl
xlat
sahf
dec
mov
inc
mov
int3
pushf
inc
mov
pop
add
lds
jns
and
mov
hlt
fistl
cmp
mov
fisttpl
xor
sbb
mov
adc
mov
cmc
fdivp
iret
push
pop
add
mov
addb
dec
hlt
in
test
sar
lock
data16
pop
jmp
popf
adc
mov
pop
enter
mov
loope
push
sub
stc
cmp
ds
sbb
mov
roll
dec
xchg
pop
dec
aam
pusha
mov
popa
rcll
and
jg
xor
mov
sbb
mov
mov
lcall
sub
push
xchg
add
aas
adc
xlat
cmc
sbb
sbb
mov
icebp
test
inc
cltd
mov
les
dec
jno
out
add
clc
enter
nop
nop
add
mov
jle
out
int
push
push
xor
dec
inc
sub
or
aam
idivb
les
subl
adc
xor
add
mov
test
call
pop
mov
adc
ret
adc
insb
cmpsl
loopne
insl
inc
ss
ret
call
cmp
mov
jno
les
sti
rclb
inc
shlb
sarb
fs
sarb
stos
adc
push
aaa
xor
or
loop
sub
adc
cmpb
xchg
mov
das
leave
rcrb
stos
int3
add
sub
out
push
movsl
pop
cmp
nop
sbb
popa
icebp
aam
dec
in
pop
fldt
in
lods
mov
mov
jle
lret
sbb
cwtl
sbb
and
lock
pop
repz
mov
inc
sbb
cwtl
sub
xlat
imul
stos
and
in
push
or
loope
lret
bound
pop
inc
pop
or
adc
ljmp
mov
loopne
in
loop
mov
sub
pop
push
outsb
or
daa
mov
in
popa
cmp
and
out
dec
jns
insl
push
outsl
repnz
jmp
lret
ljmp
sbb
imul
test
adc
and
outsl
mov
loop
sbb
mov
data16
shrb
outsb
mov
push
xor
pop
adc
repz
and
fsincos
aam
fs
mov
push
adc
ds
jl
push
mov
xchg
dec
aad
fwait
test
ss
add
and
loop
or
and
loop
or
mov
icebp
loopne
adc
rorl
pop
or
sbb
or
aas
pop
lret
es
inc
push
insl
es
scas
stc
push
and
imul
mov
mov
push
lret
fdivl
jnp
mov
popa
sarb
cwtl
lods
cmp
fnstcw
mov
lret
rorb
mov
mov
cmp
cli
mov
or
xor
or
ficompl
or
popf
outsl
mov
pop
ds
jbe
cmp
icebp
jmp
je
cmpsl
fsubl
leave
sbb
mov
push
lods
imul
ljmp
xchg
mov
push
mov
cmp
ficoml
pushf
roll
imul
jo
std
push
sbb
mov
jo
jnp
rcrl
int3
insb
cmp
lahf
rcr
call
shrl
adc
inc
rorb
ficomps
xor
sbb
mov
mov
jo
jns
mov
ret
mov
les
cwtl
adc
ret
or
sarl
loopne
sbb
or
and
jne
jae
or
pop
imul
ja
add
stos
inc
cwtl
lods
jns
ss
push
lds
pushf
movsb
outsl
and
inc
imul
icebp
ret
bound
push
std
inc
pushf
sub
mov
or
lods
sbb
call
cmp
pop
inc
lcall
fstps
cmp
std
push
or
xor
jo
sub
dec
mov
dec
orl
pop
fwait
in
test
pop
or
outsl
or
imul
out
mov
xchg
sti
loop
push
pop
jne
decb
fistpl
or
decb
sbb
cli
add
dec
dec
jnp
xor
xchg
movsl
xchg
mov
cs
icebp
xlat
xchg
fstps
or
push
mov
pop
push
and
xchg
test
cld
out
loopne
in
lret
xor
push
roll
lods
leave
ljmpw
push
or
push
jp
jecxz
pop
imul
test
fildl
sbb
ret
leave
cmp
mov
fdivl
mov
dec
lock
ja
jae
lret
sbb
rcl
adc
inc
pop
cmp
pop
imul
lods
into
jle
in
push
push
sbb
sub
inc
fiaddl
fmuls
pop
sbb
sub
pop
cs
out
mov
or
and
mov
std
push
fists
adc
jl
mov
or
ret
imulb
in
mov
push
mov
dec
xchg
dec
push
inc
dec
push
push
xor
shlb
jl
lretw
jb
fsubl
mov
push
dec
mov
sub
adc
insl
adc
lds
cs
movsb
iret
pop
xor
cmp
xor
stos
shlb
test
rcrb
inc
xchg
push
std
outsb
mov
lcall
mov
xchg
sub
in
aaa
or
xchg
lock
mov
gs
test
or
ss
sub
inc
test
lahf
pop
jmp
call
xor
sti
push
push
mov
or
cltd
in
lret
sbb
fistpll
test
sbb
sbb
and
xchg
lods
cmpsl
xorl
mov
sbb
push
sbb
or
mov
pushf
imul
xchg
adc
add
mov
sbb
out
mov
dec
jmp
test
data16
and
stos
out
stos
add
mov
pop
inc
test
mov
insb
mov
inc
aaa
adc
mov
jno
cld
xchg
inc
movsb
inc
push
sahf
movsb
dec
nop
loope
mov
dec
pop
outsl
bound
and
xchg
call
je
mov
cld
mov
shlb
nop
bound
ss
cmp
sarl
fstpt
dec
into
mov
rol
inc
sub
test
sarl
xchg
and
dec
lock
es
xlat
std
icebp
push
rcll
popa
ret
inc
xchg
psubsw
scas
dec
je
jg
popf
cli
fnsave
push
aad
sti
in
adc
or
sub
cmc
dec
shll
clc
mov
iret
mov
push
sbb
jbe
lea
inc
ret
ja
test
dec
pop
sub
mov
shl
sbb
sub
stos
test
in
mov
pushw
sub
cmp
xor
outsb
xchg
scas
dec
andb
outsl
adc
and
mov
xchg
dec
loopne
jbe
jmp
rcrl
mov
ds
dec
jne
sbb
cmp
aas
sub
pop
xor
loopne
xchg
and
leave
push
inc
popa
xchg
movsb
xor
fnstenv
pop
lcall
jnp
sub
pop
mov
pop
push
cwtl
mov
pop
arpl
mov
dec
pop
ja
dec
sbb
in
adc
pop
lea
mov
inc
leave
inc
jl
xor
mov
int
pop
js
hlt
or
xchg
push
scas
cmpsl
pop
jl
cmp
hlt
iret
in
pushf
mov
clc
xor
popf
mov
fstps
xchg
ljmp
push
xor
cwtl
addr16
mov
push
js
inc
fisubl
or
xor
rcll
pusha
inc
sahf
cmp
and
lahf
push
sub
cli
push
push
subb
mov
cmpsl
inc
xor
mov
dec
push
aas
rorl
cmp
repnz
lahf
insb
aaa
add
mov
insb
dec
or
adc
pop
adc
mov
mov
inc
inc
push
fldenv
clc
pop
mov
jae
pop
add
fdivrs
cmpsl
push
aas
repz
lock
dec
les
mov
cmc
cs
dec
push
add
cli
push
movsbl
pop
fidivl
push
sarl
xchg
adc
inc
cmp
adcb
cmpsl
pop
add
mov
arpl
mov
clc
xor
pop
lret
outsb
dec
cwtl
add
adc
mov
scas
xchg
jno
and
xchg
add
mov
lock
push
xchg
push
fwait
hlt
lods
ret
in
sub
nop
sub
jbe
push
scas
pop
mov
sub
add
xchg
cld
js
dec
stos
pop
cmp
xchg
addr16
xchg
shll
adc
imul
push
xor
dec
xchg
mov
mov
jg
into
dec
push
mov
scas
gs
sub
stos
push
jp
cmc
add
testl
xchg
pop
sub
movsl
mov
fldl
lock
sbb
dec
adc
mov
or
fbstp
mov
and
pop
add
xchg
push
ss
xor
cmc
jp
mov
pop
adc
lock
mov
loop
movsb
in
call
jno
cmpb
jge
jno
mov
test
and
test
mov
fs
mov
pushf
push
mov
xor
std
and
jnp
jmp
or
xor
ss
imul
pushl
mov
xor
out
push
cltd
jnp
imul
or
or
dec
insl
xor
adc
cli
push
mov
testb
pop
xlat
pop
out
nop
stos
popf
lods
xchg
mov
adc
and
shrl
push
loope
jbe
scas
aam
push
in
int
jnp
push
lret
das
lret
dec
test
cwtl
xchg
mov
out
mov
int
and
sub
sub
adc
imul
mov
lock
or
xor
push
jae
inc
pop
mov
mov
enter
mov
imul
popf
and
out
jecxz
out
xor
shrl
popa
mov
cltd
jb
lret
pop
fiaddl
ret
mov
lret
and
test
xchg
dec
adc
cs
fld
loope
loopne
outsl
cli
stos
add
push
push
xchg
mov
pop
mov
clc
js
lods
testl
jl
leave
xor
daa
sub
push
and
fidivs
iret
cld
repnz
mov
in
imul
imul
fcoms
dec
hlt
pop
andb
gs
fucomp
pop
jge
es
test
sbb
bound
pop
dec
stos
lods
shr
in
adc
jge
xchg
adc
dec
into
push
adc
push
mov
daa
jae
pop
xor
cmp
shlb
adc
sbb
or
fmulp
jne
inc
and
fcmovb
mov
movsl
in
add
imul
vpbroadcastd
repnz
inc
in
out
fsubl
inc
mov
mov
dec
add
and
xchg
push
adc
or
cmc
mov
imul
sub
and
pop
dec
popf
jle
push
dec
mov
push
mov
js
imul
cld
cmp
pop
sbb
sti
pushf
add
adc
call
xor
push
cltd
inc
je
movsl
dec
and
mov
pusha
mov
inc
sahf
pop
inc
stc
fwait
dec
push
outsl
dec
dec
dec
inc
inc
insl
cmpsl
cld
pop
fsubs
and
mov
add
mov
lods
loop
add
xchg
pop
mov
xchg
nop
adc
push
mov
xchg
sub
add
shlb
sbb
inc
mov
xchg
jmp
mov
sbb
les
xchg
push
aaa
dec
xchg
mov
adc
shr
data16
xor
loope
and
mov
cmp
and
inc
mov
push
cmp
dec
or
pop
int
lcall
sbb
mov
jl
insl
stc
das
daa
insb
lock
pop
xor
push
inc
inc
cmc
dec
pusha
or
mov
cmp
mov
pusha
jne
movl
out
jg
call
xchg
lcall
cltd
imul
jb
jle
inc
cmp
push
sub
cmpsl
arpl
fwait
leave
loop
jp
in
sub
inc
xchg
mov
setno
and
and
incl
in
mov
dec
les
out
lea
out
pusha
pop
jmp
jge
into
jmp
jle
mov
icebp
ret
aas
fwait
adc
imul
arpl
jne
jp
mov
lcall
and
adc
jmp
pop
mov
aad
ja
lds
mov
lahf
icebp
cwtl
icebp
sbb
cmc
ret
cmp
sti
mov
cwtl
cmc
es
or
xlat
iret
aam
sub
xchg
add
mov
jo
mov
xchg
pop
hlt
adc
nop
cld
or
xor
gs
cmp
outsl
jbe
xor
mov
mov
jmp
xor
lahf
or
sbb
lock
mov
pusha
js
and
xorb
hlt
pushf
mov
mov
imul
push
add
inc
cli
movsb
ss
fisubrl
std
jne
into
test
loope
mov
sbb
mov
add
mov
xchg
xchg
cmp
jg
jnp
outsl
push
and
aam
popf
pop
mov
inc
in
lahf
psubb
shrl
mov
xchg
mov
push
testb
je
js
dec
aam
das
lods
sbb
cmp
xor
loopne
je
sbb
stos
add
jp
div
inc
aaa
mov
cli
cmp
push
lret
pop
insb
icebp
add
into
jo
sub
xchg
mov
or
fistps
mov
stos
cld
push
sbb
arpl
or
pop
dec
sub
xchg
into
mov
push
mov
adc
mov
push
movsl
outsb
xchg
into
fstpl
loope
push
aas
out
data16
inc
ficompl
pop
mov
scas
dec
fstpl
addr16
test
jle
and
or
mov
xchg
jecxz
sub
cmp
out
inc
sbb
fistpl
fs
cmpl
mov
insb
sti
in
mov
xor
iret
daa
cmp
xorl
fdivrs
rcrb
sbb
adc
ret
mov
bound
repnz
sbb
daa
xor
pop
push
imul
xchg
jnp
dec
std
cltd
xor
ffree
fstpl
gs
add
jmp
int3
sub
sub
sub
cmp
pop
dec
std
pusha
fcmovu
je
mov
lea
das
pushf
lods
mov
dec
je
in
enter
loopne
mov
inc
fmull
das
push
and
ror
mov
ljmp
sub
xorl
xchg
lret
push
sbb
push
mov
je
pop
jb
cmp
push
repz
repnz
jns
inc
movsl
or
sbb
mov
pop
sub
jne
scas
mov
into
cs
scas
xor
cmpsb
icebp
pop
test
xor
lahf
fidivs
mov
repz
iret
loope
pop
addr16
sti
jg
xchg
push
jmp
ss
aam
dec
and
push
or
and
mov
inc
aam
push
or
lahf
add
out
sbb
push
in
lcall
cmp
cld
ja
mov
fidivrs
pop
and
ret
jmp
and
xchg
je
dec
into
pop
add
jle
js
cmp
inc
jecxz
pop
cmp
sbb
xchg
inc
adcl
xchg
andb
inc
lods
jb
xchg
fiaddl
pop
jo
fdivrp
and
jno
and
mov
add
xchg
and
sbb
cmp
popa
shrl
add
sub
lahf
test
push
mulb
mov
pop
adc
push
jnp
stc
orb
test
iret
lret
cmp
or
mov
cli
sbb
cmp
rcll
bound
int3
test
sbb
test
adc
inc
mov
cld
popf
mov
insb
rcl
cmp
pop
lret
push
sub
sub
mov
or
dec
pop
testl
mov
jg
and
dec
pop
repz
adc
fldt
pop
fisubs
daa
lcall
rcrb
or
cmp
inc
jg
pushf
insb
repz
pop
pop
call
fisubl
add
pushf
cmp
leave
mulb
rorl
push
dec
and
xchg
add
subl
mov
lods
addl
test
jno
xor
dec
pop
dec
xor
imul
dec
lods
jge
mov
push
cmp
gs
jmp
fbld
pop
in
clc
out
add
mov
sbb
xchg
out
mov
inc
cmc
dec
das
cmpsl
push
lock
mov
xchg
xor
stos
mov
pop
pshufw
mov
outsl
popa
mov
pop
sbb
inc
dec
ret
negl
sti
dec
fmull
xor
addr16
cmp
inc
inc
arpl
mov
cmpsl
inc
sub
xor
test
or
movb
ja
xchg
mov
ret
inc
or
jnp
adc
pop
scas
push
mov
xchg
shlb
leave
push
sub
sahf
xor
push
jbe
int
mov
stos
mov
pop
outsl
cmp
mov
xchg
cli
data16
imul
push
dec
rclb
test
loop
push
jne
inc
in
jl
sub
popf
sub
mov
mov
movsl
dec
test
pop
mov
insb
pusha
push
mov
sahf
push
js
lahf
test
fcoms
js
sub
leave
int
mov
je
jp
mov
mov
jl
test
adc
or
enter
sbbl
sahf
out
ss
pop
dec
mov
mov
cmp
sahf
jmp
nop
mov
or
cmc
repnz
sub
sub
sub
in
inc
in
cmp
mov
je
sub
in
cltd
jb
inc
cmp
add
push
mov
jo
lcall
jb
cmpsl
push
push
xchg
sbb
sbb
push
std
xor
jne
xlat
sbb
gs
mov
ja
add
lret
test
jp
mov
lods
push
mov
or
mov
add
es
add
jb
sub
push
imul
dec
outsb
push
jle
xchg
mov
jecxz
push
jg
and
push
dec
jmp
mov
xor
jle
aas
aas
mov
sti
pop
lds
addr16
les
test
push
adc
pusha
push
mov
cld
push
mov
mov
pop
dec
cmp
sub
loop
outsb
cmp
stos
cmpsl
inc
sahf
in
jmp
mov
mov
jp
xchg
add
mov
or
sbb
push
shrb
and
aam
mov
mov
mov
mov
adc
mov
dec
in
mov
dec
sub
mov
sub
inc
loop
mov
mov
rol
xchg
aam
psubsw
inc
sbbb
int
sbb
cmp
jmp
mov
or
test
out
adcb
outsl
imul
inc
out
push
mov
cld
out
sub
ljmp
subl
inc
mov
rol
push
in
xor
movq
xchg
lahf
pop
pop
add
jbe
cmp
cmp
in
jnp,pt
jbe
sub
mov
fiaddl
pop
sbb
mov
mov
xor
lret
and
pop
push
mov
jnp
xchg
xchg
je
call
in
ljmp
inc
xchg
adc
stos
xor
fwait
jb
mov
loopne
gs
pop
pop
out
push
aaa
inc
xchg
push
cmpsb
cmp
and
icebp
sub
int3
push
push
mov
ret
mov
sub
es
shr
mov
add
add
push
gs
mov
icebp
insl
push
clc
int3
mov
stos
cmp
push
add
je
dec
mov
hlt
and
sbb
imul
mov
mov
movsl
inc
and
jae
sub
test
mov
ficoms
fst
mull
jns
into
aad
xor
mov
into
loope
xor
rcrb
xchg
andl
cmc
fsubrp
mov
clc
mov
dec
rcll
dec
cs
inc
cmp
popa
mov
dec
push
cmpsl
dec
dec
lret
ffreep
mov
cmc
jne
pop
add
pop
cmp
sarb
in
jb
mov
inc
ds
inc
mov
ret
adc
cs
and
test
push
mov
ds
dec
add
gs
add
and
xchg
pop
push
ds
popa
cmp
mov
xor
sbb
loope
daa
dec
icebp
mov
test
jg
popa
jge
hlt
jb
jl
pop
inc
loope
dec
mov
lret
cli
les
add
fisttpl
dec
jmp
repz
pop
lret
loope
cwtl
repz
rclb
mov
mov
inc
fistl
shl
mov
popa
test
inc
sub
imul
dec
jl
fdivl
shlb
lock
fidivrs
call
inc
mov
rorl
sbb
adc
in
imul
stc
adc
add
sbb
inc
add
xor
sbb
sub
jl
mov
fldt
pushf
in
mov
mov
addr16
lock
dec
in
and
clc
or
rorl
insl
xchg
test
sub
faddp
cmpl
inc
arpl
dec
addr16
mov
ds
scas
mov
inc
mov
imul
inc
jns
xchg
and
and
xor
sub
dec
jae
andb
loopne
inc
xor
std
mov
jp
iret
sub
into
insb
sahf
stos
loope
lock
adc
dec
into
lea
add
inc
imul
pop
dec
mov
pop
imulb
pop
ret
mov
xlat
push
in
mov
pusha
pusha
rol
je
mov
push
pop
xchg
push
jmp
sti
test
inc
jmp
popf
dec
mov
mov
mov
jp
cs
rcrl
lds
jmp
faddp
mov
push
das
jge
jae
jp
stc
mov
sbb
sbb
adc
pushf
out
and
movl
push
pop
mov
jmp
mov
cltd
fmuls
in
pop
cmp
pop
inc
jno
inc
add
std
pop
xor
popf
jnp
push
xchg
jg
imul
adc
xchg
test
sbb
cmp
subb
mulb
rcrb
mov
and
outsl
cmpsb
add
jp
je
push
jp
jecxz
addr16
push
mov
inc
outsb
add
dec
je
int3
jge
xchg
sbb
pop
mov
dec
push
popa
adc
pop
lret
cmp
xchg
inc
out
xlat
pushf
ret
fdivrl
js
xor
jmp
mov
push
out
xchg
lret
push
add
fs
je
pop
outsb
cld
mov
fadds
adc
pop
jo
aaa
movsl
sub
mov
or
mov
mov
test
xchg
jle
test
push
and
xchg
adc
shl
or
xor
ss
push
hlt
inc
fwait
mov
push
dec
dec
lcall
cmp
fsqrt
mov
add
aam
lods
sarb
pop
mov
mulb
mov
out
cli
in
xchg
and
xlat
jmp
movsb
xor
xchg
cmp
cmpsb
jecxz
test
sarl
cmp
mov
fs
faddp
cmp
cmp
out
scas
mov
jb
mov
add
fst
dec
aam
cli
leave
push
daa
mov
ret
dec
arpl
js
push
mov
test
add
push
add
inc
sbb
aas
and
mov
jnp
stos
sbb
aad
sbb
push
dec
inc
jbe
or
jns
or
fwait
xor
pop
sqrtps
mov
inc
dec
inc
mov
xchg
and
popf
std
rcr
inc
frstor
jns
scas
aad
pop
test
imulb
or
rcrb
xchg
cs
ja
jmp
sbb
inc
mov
mov
std
jl
lret
pop
add
iret
push
jge
sub
jnp
dec
divb
dec
or
mov
push
jae
imul
int
cs
daa
jb
pop
sub
fwait
pop
std
cs
lea
pop
repnz
popa
mov
mov
in
loopne
or
xlat
out
sahf
push
js
cld
mov
adc
mov
dec
or
clc
xchg
int3
xor
dec
jl
imul
sarb
insb
mov
andb
cltd
sub
dec
cld
and
add
inc
decb
xchg
nop
sbb
sbb
jecxz
fiadds
test
mov
adc
push
mov
testl
jp
cmp
push
lahf
int3
aam
dec
mov
mov
sub
and
popa
xlat
stc
sti
cld
sti
ja
cltd
sbb
hlt
cmp
lods
jp
mov
xchg
and
add
cmpsl
mov
add
sbbl
xchg
repnz
ficoms
or
loope
sub
cmpsl
cmp
rorl
repnz
sti
push
adc
loop
adc
cltd
ja
jo
mov
cmp
int3
or
mov
mov
insb
add
mov
lret
out
mov
cli
mov
lret
push
dec
dec
fmulp
cmp
clc
mov
mov
ds
cmp
mov
pop
mov
nop
push
add
sbb
loope
or
jns
dec
gs
fs
test
push
inc
xchg
js
test
xchg
push
in
rol
ss
testl
lods
in
fs
ret
pop
jbe
adc
jnp
jp
daa
mov
mov
aas
mov
subb
jae
adc
dec
outsl
dec
popa
in
les
data16
mov
jb
mov
mov
rcrl
cld
fwait
adc
sub
mov
jl
dec
push
push
jmp
fidivrs
xchg
mov
sub
sbb
sub
lret
andl
jno
sbbl
lea
mov
or
mov
push
mov
in
or
ss
xchg
sahf
addr16
cmp
test
bound
xchg
add
or
mov
imul
mov
jmp
xor
insl
jbe
fsubs
roll
int3
push
mov
cld
mov
cmp
mov
sar
pop
fdivrs
inc
add
adc
xchg
dec
cmp
movsb
cmpsl
daa
mov
mov
sbb
dec
mov
mov
pop
and
insb
or
fs
inc
negl
fildl
dec
lahf
fldt
cmc
out
push
mov
testl
insb
cltd
mov
mov
jmp
or
xchg
filds
jp
pop
pop
jp
cmp
sarl
loope
out
xchg
cmp
mov
xchg
and
repz
and
lret
out
ficoml
lds
scas
not
sbb
and
cmp
pop
ja
adc
aam
rcll
dec
sahf
mov
gs
add
outsb
movsb
mov
pop
shll
mov
out
inc
jnp
dec
repnz
push
test
inc
cmp
out
call
dec
push
pop
mov
add
imul
int3
loope
mov
repnz
pop
cs
test
dec
sub
imul
jp
add
mov
mov
sbb
inc
or
stos
sbb
or
adc
nop
jp
cmc
add
stos
outsl
push
add
icebp
mov
ficomps
pop
pop
xor
pop
out
mov
cmpsb
fs
and
adcb
fcoml
sbb
and
jg
out
aas
sub
xchg
xchg
outsb
arpl
fstpl
xlat
mov
sbb
pop
out
mov
aaa
scas
ja
push
mov
lock
add
cmc
jmp
mov
stc
loop
mov
jns
fiadds
push
rcr
push
out
sbb
fcoml
ss
and
imulb
out
div
pop
mov
les
ret
sti
cmpsl
lcall
inc
and
mov
movsl
cmp
in
inc
add
inc
inc
mov
leave
imul
or
push
daa
call
lock
mov
movl
roll
cmp
jo
addr16
sub
std
outsl
pop
lods
cmp
mov
les
mov
adc
testl
mov
gs
ret
xor
out
fnstenv
adc
fstpl
fistps
test
movsb
or
and
xchg
push
dec
push
fiadds
mov
aam
push
push
es
out
outsb
add
aas
fsts
fdivrp
or
and
adc
dec
add
rcrb
ret
popf
ss
sahf
dec
xchg
jmp
jae
pop
add
jle
das
mov
sub
jo
jno
nop
push
scas
push
sub
xor
sbb
and
xchg
push
push
stc
or
imul
sub
test
out
or
xchg
lds
jp
add
fidivs
pop
jb
cmp
insl
iret
mov
js
ds
lds
xchg
arpl
mov
pushf
insl
sbb
adc
mov
test
arpl
add
fxtract
or
ss
pop
sbb
sbb
divl
adc
imul
sbb
mov
ret
out
mov
and
and
fiaddl
hlt
sbb
jg
push
orl
das
mov
or
pop
xchg
xchg
lea
jo
dec
shlb
lock
sub
lret
jnp
sub
lods
push
xchg
pop
enter
add
out
das
test
fldenv
or
movsl
test
or
fadd
cmc
fs
sbbl
iret
sbb
andl
xor
cltd
mov
test
lea
hlt
lds
xor
cmpsl
stc
arpl
push
lcall
iret
add
lods
das
insb
xor
sarb
sbb
push
cmp
dec
shrb
int3
lods
ss
jmp
mov
les
push
xchg
push
and
push
lods
mov
leave
lds
xlat
imul
jb
sqrtps
jo
cmpsb
sub
push
fimull
aaa
insl
int
aam
jmp
xchg
xor
orl
daa
test
pop
sub
fdivrs
sbb
sbb
cwtl
mov
bnd
push
neg
mov
inc
cmp
in
sbb
inc
in
bound
loope
je
ja
and
mov
xchg
loop
jmp
jne
ljmp
lret
into
adc
repnz
repnz
lods
jge
mov
stc
ret
and
lea
pop
inc
loopne
xor
pusha
add
add
xor
adc
inc
shll
outsl
addr16
je
cmp
mov
xchg
ja
sub
outsl
jnp
or
aaa
pop
jmp
sbb
push
daa
adc
stc
fisubs
jp
push
jg
aas
icebp
sbb
ror
xchg
in
sbb
add
mov
inc
sbbb
pop
aas
loope
or
dec
adc
cmp
inc
sbb
cmc
fstps
mov
sub
pop
movsb
loop
sub
inc
popa
add
adc
xchg
mov
xchg
pusha
xorl
push
jp
dec
jle
fcmovbe
nop
mov
ja
pop
mov
outsl
push
xchg
stos
in
mov
movsb
cmp
ljmp
pop
cmp
xor
fiadds
addr16
cs
xchg
xor
inc
or
fadds
mov
shll
pop
mov
mov
repnz
aad
ret
xor
adcl
data16
jae
mov
mov
mov
inc
sbb
shrl
andl
scas
lea
and
lret
pusha
int
inc
call
adc
adc
cld
adc
daa
mov
xchg
int3
fwait
pop
lods
mov
xor
mov
push
fcoms
pushf
shrb
sbb
lcall
push
add
test
xchg
mov
xchg
ss
sbb
fwait
cmpsl
pusha
shrb
jg
or
icebp
cmp
mov
xchg
sbb
arpl
mov
pop
pop
sbb
push
jnp
cmp
push
mov
lret
ja
daa
mov
call
ss
inc
cwtl
idiv
outsb
ds
pop
insb
mov
pop
iret
inc
push
inc
pop
pusha
add
test
int3
ja
insl
out
out
rcrl
inc
mov
pop
xchg
push
mov
mov
aam
or
pop
outsl
push
fistps
pop
push
fs
sahf
jmp
mov
pop
jns
nop
loope,pn
fcmovnu
in
movsl
xchg
repz
pop
ficomps
mov
shrb
out
test
and
lret
es
call
lea
sahf
lret
push
ret
lds
sbb
mov
aam
sahf
and
push
jno
jmp
add
adc
push
or
sub
fidivs
loop
xor
fimull
popa
ds
into
or
rcrl
mov
or
incl
pop
lods
imull
jge
cmp
jmp
xchg
ljmp
fsubs
test
mov
pop
movsl
jle
js
lret
fnstsw
dec
testl
cmp
enter
cmc
dec
fistpll
push
mov
mov
adc
imul
popa
mov
push
inc
test
sbb
add
xorb
fisttpll
ja
and
sub
mov
inc
rolb
cmp
stc
xchg
out
repnz
fs
scas
out
pusha
fisubs
sar
push
mov
add
xchg
jmp
aam
ss
add
insl
or
cld
xor
push
push
mov
outsb
lock
or
mov
mov
cmpb
cmpsb
sbb
dec
dec
sub
mov
or
nop
pop
sub
arpl
movsl
mov
fdiv
in
inc
xor
add
cmpsb
int
loope
push
mov
jne
add
call
cmp
inc
aam
lods
and
test
push
stos
stos
lods
inc
icebp
stc
inc
sbb
sub
adc
jns
inc
push
pop
ja
push
xor
dec
cmp
out
lcall
sbb
cmp
mull
movsl
fs
insb
mov
in
jnp
xchg
sub
or
xchg
add
pop
xchg
ja
mov
orb
or
jo
jge
rolb
jmp
test
fisttpl
or
pop
fidivrs
xchg
dec
push
pop
dec
hlt
rcrb
mov
shlb
std
addb
loopne
movsb
fldl
lret
es
mov
push
lahf
inc
add
mov
imul
jae
sub
xlat
mov
and
dec
inc
fs
inc
std
test
adc
pop
ss
push
rclb
hlt
xchg
add
lds
xor
call
adc
cltd
jle
xchg
or
scas
rolb
movswl
jg
fnstenv
mov
jg
ret
pop
mov
test
mov
adcb
mov
daa
jle
popa
in
add
js
iret
adc
pop
cmp
popf
cmpsl
inc
test
loope
pop
ret
daa
ljmp
popf
mov
jno
sub
sahf
popf
fsubs
jae
insl
ljmp
or
fucomip
popa
fistpll
js
adc
adc
jb
sti
push
add
fdivs
gs
lahf
push
movb
cltd
rol
pop
orl
xor
test
cs
shlb
addb
mov
mov
dec
subb
sub
aad
sub
mov
sbb
adc
and
jg
mov
aam
xchg
int3
cmp
scas
jle
mov
hlt
loop
repnz
imul
les
lods
repnz
or
push
pop
jo
pusha
ja
loopne
in
mov
fdivs
lea
fwait
mov
pop
shl
jecxz
pop
insl
aaa
fistl
mov
pushf
ds
sub
mov
add
data16
pop
cwtl
or
jle
dec
push
stc
ret
and
xor
mov
or
or
imul
mov
clc
pusha
je
or
mov
lcall
jb
cli
jae
mov
incl
mov
mov
je
das
sub
jnp
fnstcw
xor
sub
push
fs
mov
pop
inc
mov
icebp
and
push
cmp
rcl
fstpt
test
call
jb
ss
push
xchg
xchg
cmp
loopne
pop
popa
or
xchg
adc
add
in
jbe
xchg
js
retw
push
fildl
fs
mov
sarl
add
mov
div
outsb
xchg
push
clc
xchg
adc
lea
push
or
pop
add
rol
pop
push
jno
adc
out
sti
jle
stos
push
imul
enter
sub
and
pop
pop
mov
sub
xor
out
or
push
jbe
sub
push
mov
pop
shl
and
jae
mov
or
sbb
es
inc
pop
les
mov
pop
lds
or
hlt
daa
push
dec
push
loope
xchg
mov
mov
pop
or
popf
cmp
shll
xchg
enter
stos
movsb
add
test
mov
inc
add
stc
pop
mov
inc
inc
pop
loop
dec
jle
mov
andl
cwtl
cmp
mov
jo
in
mov
sub
dec
xor
enter
ja
call
inc
pop
out
jne
fwait
jbe
xor
loopne
xor
inc
and
imul
mov
imul
add
add
ret
inc
dec
in
ds
inc
push
mov
fs
leave
popf
outsl
fnstsw
push
pop
push
into
adc
inc
mov
loop
decl
xor
out
pop
mov
dec
mov
in
fistpl
push
fsubr
into
push
in
lods
xor
inc
inc
cmp
mov
clc
xchg
jge
ljmp
inc
add
add
adc
inc
add
adc
add
inc
add
lea
add
addl
add
xchg
add
loop
jl
mov
mov
xor
add
or
mov
jo
gs
adc
cmc
jae
das
cli
loopne
loop
sub
dec
out
inc
mov
push
test
in
ret
sbb
mov
add
mov
in
pop
fwait
push
xchg
lret
push
ret
ja
push
fcomps
mov
je
icebp
xchg
rcrl
xchg
lret
mov
lret
das
lock
das
xlat
sub
data16
fisubs
das
mov
xor
nop
dec
leave
cmpl
pop
movsl
push
hlt
jmp
sbb
repnz
addr16
jg
movsb
pusha
mov
adc
push
push
mov
cmpsl
in
sub
rcll
call
xchg
test
ljmp
das
add
stos
pop
aas
int
xor
pop
int
rcr
stc
add
sahf
lcall
int
ss
sbb
pop
mov
adc
sub
scas
add
xchg
arpl
enter
jg
mov
adc
cmp
rol
mov
adc
pop
stos
push
jno
aas
sahf
sbb
ss
xchg
gs
in
push
ret
mov
lcall
ficoms
xor
repnz
push
lods
or
movsb
fldenv
hlt
push
push
lock
sub
mov
adc
mov
stos
xor
cwtl
adc
push
xor
test
mov
pusha
fwait
jnp
cli
inc
jl
imul
sub
fistl
aaa
lock
or
psrlw
fwait
push
mov
pop
movsl
in
mov
mov
push
pushf
pop
test
repnz
das
in
dec
dec
xor
pop
and
and
sbbl
cli
jne,pn
out
sub
outsb
add
mov
pop
imul
mov
lahf
or
mov
repnz
xor
xchg
mov
fs
inc
mov
inc
dec
roll
xchg
ret
cli
xchg
ret
popf
mov
ret
jbe
in
xor
in
int
xor
sub
and
stc
shlb
je
add
insb
fstps
lret
sub
sub
cld
push
test
sbb
xchg
xor
sub
cmp
or
rcrl
push
clc
xchg
push
dec
mov
daa
xor
mov
push
cmc
scas
and
add
fldcw
stos
or
clc
mov
xor
push
fstenv
push
cmp
sti
test
das
imull
pop
je
clc
sbb
icebp
aad
mov
sarl
movsl
sbb
jmp
push
mov
pop
lods
bound
xor
jo
or
or
leave
test
sbb
int
ljmp
andb
jge
mov
jecxz
mov
xor
enter
push
insl
outsb
dec
int3
mov
enter
dec
pop
adc
dec
dec
pop
add
dec
movl
test
push
xchg
cmpsl
call
push
mov
cmc
push
stos
imul
mov
and
lock
movsb
sbb
out
arpl
push
aaa
in
in
popf
cmc
push
mov
fcompl
cmpsb
lcall
sbb
jne
pop
pop
mov
adc
scas
push
lds
dec
push
and
inc
popa
xchg
jecxz
cmp
sbb
adc
and
and
mov
out
and
in
es
mov
scas
pop
sahf
test
lcall
sub
push
and
mov
mov
mov
inc
je
pushf
jecxz
and
sbb
stos
dec
jge
aaa
decl
push
arpl
add
pop
stos
stos
ret
push
out
or
int
mov
xlat
clc
mov
and
push
out
jle
or
and
imul
push
adc
jecxz
call
xchg
fsubp
push
dec
cmp
mov
inc
loop
out
das
les
mov
in
jo
jae
test
out
sahf
add
cld
dec
or
pop
adc
and
and
and
mov
add
push
sbb
lock
nop
imul
cmc
imul
cs
pushf
push
mov
ret
es
fadds
pop
repnz
xor
cmp
or
ret
lods
pop
mov
pop
xchg
pop
jp
ficoms
lret
lods
fldl
push
pop
push
or
mov
adc
stc
das
dec
mov
cmp
clc
fldenv
test
cld
fdivr
cltd
daa
xchg
std
scas
sub
add
shl
call
sbb
inc
or
cli
addl
clc
sbb
sub
jle
negl
pop
sbb
call
cmp
and
imul
lcall
cltd
popf
out
mov
jns
stos
mov
rorb
outsl
dec
les
sub
inc
lret
add
jl
sub
js
nop
pop
inc
enter
push
ffreep
out
mov
adc
hlt
pushf
dec
jo
xchg
adc
xchg
mov
sbb
xchg
test
stos
xor
loopne
test
push
and
inc
imul
into
daa
inc
lods
rcrb
inc
rclb
inc
aas
add
jnp
xor
in
rcrb
fsubl
imul
sbb
push
cmpl
mov
inc
lock
pop
cltd
jmp
lret
pop
ss
insl
mov
inc
popf
cmp
stos
xlat
lahf
jnp
ljmp
fisttpl
daa
arpl
jns
jns
xchg
cmpsl
pop
pop
add
dec
loop
fbstp
pop
es
js
fwait
xchg
adc
pop
inc
or
xchg
cmp
add
hlt
xchg
repz
clc
xchg
hlt
pusha
or
mov
fwait
stos
or
nop
jb
adc
sub
int
loope
xchg
push
into
cmp
sub
pop
push
push
mov
lods
sbb
test
cld
aas
mov
sub
or
add
mov
push
or
outsl
aaa
lock
xchg
pop
inc
fldenv
in
sbb
call
fucomip
jp
xlat
insl
xlat
int3
dec
jnp
out
adc
dec
imul
movsl
and
cwtl
jg
icebp
jle
mov
mov
dec
iret
and
sbb
fsubs
notl
jl
pop
int3
movsb
call
fwait
mov
sbb
or
daa
inc
xor
jbe
inc
lahf
mov
repz
xor
jno
pop
push
inc
mov
call
clc
mov
fstps
cs
in
lret
pusha
add
daa
jo
xor
imul
pop
mov
adc
out
mov
pop
adc
int
cmp
dec
fwait
rclb
add
push
mov
call
mov
sub
ja
aas
pop
push
test
sub
and
lods
and
and
cli
out
lret
xor
jae
and
in
fcmovu
dec
inc
fwait
push
lcall
pop
sub
mov
xchg
daa
add
pcmpeqw
out
in
dec
out
shrl
cli
arpl
in
lcall
in
icebp
outsb
jae
pop
test
push
sub
adc
jl
push
push
sbb
cwtl
les
jae
jo
sbb
aas
inc
add
insl
lds
mov
sub
jo
mov
leave
leave
mov
bnd
cmp
mov
je
ljmp
and
cmovg
mov
out
xor
mov
add
lret
fidivs
mov
int3
add
cmpsl
ss
stos
sbb
loope
mov
sub
mov
xchg
insl
dec
adc
sub
shl
adc
jg
divb
xchg
jae
ss
cli
popa
fsubp
shll
jns
inc
mov
shr
push
jae
fcmovbe
lods
cmp
add
fdivl
cmp
inc
stc
std
adc
xor
in
ja
mov
repnz
xor
insb
sub
outsb
imull
test
jge
pushf
sbb
xor
mov
pushf
enter
loopne
xor
dec
and
imul
and
xchg
fwait
inc
rclb
scas
cmp
hlt
int
jb
push
test
pop
sub
pushf
adc
inc
mov
sbb
inc
cmp
mov
out
cmpsl
stos
loope
mov
lret
je
insl
add
mov
cmpsb
fists
xor
push
mov
in
cmpsl
or
mov
jae
xchg
push
jmp
test
cmc
sub
jp
stos
adc
mov
jle
push
stc
in
mov
pop
cltd
cwtl
fldenv
cmp
fwait
mov
sub
push
mov
xor
cmc
mov
mov
mov
icebp
mov
cltd
daa
push
mov
jns
lcall
nop
lret
outsl
popf
cltd
mov
icebp
mov
divl
int
inc
nop
cmp
and
int
je
add
adc
hlt
das
bound
add
leave
jp
xchg
mov
dec
mov
or
les
mov
dec
mov
cmp
mov
push
leave
mov
mov
push
inc
add
shl
dec
int
xor
xor
cmpl
repz
cmp
inc
pop
scas
push
test
and
bound
sub
mov
in
push
or
jne
pop
shlb
mov
and
mov
fidivrl
rcll
mov
push
adc
pushf
mov
jp
mov
and
mov
mov
fprem
popa
push
call
add
imul
mov
sbb
sub
inc
add
jecxz
leave
cmp
jp
mov
mov
push
in
jns
xchg
jg
movsb
xadd
mov
popf
and
xchg
sbb
testl
loopne
inc
mov
mov
push
insb
repnz
inc
sbb
cwtl
insb
mov
lcall
test
lods
loopne
mov
clc
inc
and
mov
cli
mov
push
jb
sahf
out
xor
inc
mov
push
and
mov
int
call
aam
dec
imul
sarb
push
push
sbb
arpl
and
mov
repz
pop
pop
shlb
aad
sub
mov
ljmpw
jmp
loop
add
push
push
shlb
push
ss
mov
jmp
jg
ljmp
jnp
mov
test
push
sbb
pop
adc
cmc
sub
and
sti
push
stos
cmp
jmp
nop
xor
lods
xor
mov
xchg
sbb
mov
mov
mov
sub
xchg
inc
jl
pop
scas
out
shl
in
in
ret
push
mov
mov
fsub
cli
mov
sbb
sbb
cmc
adc
pop
mov
jmp
lret
or
cmpsb
and
nop
adc
mov
inc
lods
movsb
pop
lods
adc
or
inc
mov
gs
hlt
xor
push
cmpsb
icebp
ds
mov
or
mov
push
add
cmp
fdivs
xchg
and
xor
jb
pop
mov
sbb
repnz
bound
dec
cmp
sbb
shlb
scas
lret
inc
sbb
lahf
stos
movsl
popa
push
stc
mov
iret
mov
and
insl
cltd
pushf
into
sub
push
roll
xchg
inc
xor
outsb
fisubrs
pop
lret
inc
push
push
les
lret
adc
jnp
xchg
loope
inc
sub
std
test
sbb
idivl
or
repz
shrl
cmp
fildl
call
ds
je
jmp
in
jp
pop
jmp
xchg
shll
sub
dec
ret
push
cmp
dec
clc
mov
test
ljmp
rcll
repz
movsb
push
aad
push
ja
fisubl
and
ljmp
and
xchg
inc
mov
sbb
aas
xor
test
loop
jnp
mov
lret
fcompl
scas
and
xor
fs
cmp
test
cs
scas
dec
cmp
lock
push
ljmp
push
fldenv
pop
adc
pop
pop
push
ja
inc
jl
push
jno
dec
mov
cmp
jns
out
jecxz
jmp
sbb
jmp
fstpt
xorb
mov
ret
mov
popf
mov
mov
and
js
mov
jnp
in
sbb
les
sbb
cmp
xor
lea
push
sbb
inc
adc
lahf
insb
adc
in
imul
jnp
decl
sbb
das
orb
and
xchg
int3
je
je
and
jns
pushf
arpl
mov
adc
sarb
lds
adc
dec
cmp
loop
or
data16
out
cmp
mov
cmp
pop
notb
mov
cmp
fucomp
rolb
jo
or
jns
mov
pop
arpl
fwait
icebp
mov
out
mov
cmpsb
add
daa
shll
sbb
dec
inc
inc
call
add
orb
adc
adc
arpl
sti
je
jns
in
xor
sub
ret
lret
dec
je
cwtl
das
and
cmpsb
imul
xor
out
push
push
adc
mov
dec
shll
or
cmp
imul
push
les
and
xchg
test
mov
std
inc
add
jo
jb
xorb
lret
out
sti
data16
out
push
add
pop
shlb
jno
pop
hlt
test
pop
mov
or
sbb
nop
in
sahf
xorb
or
or
sub
aam
mull
loopne
loopne
int3
jnp
int3
test
je,pt
push
mov
adc
movsb
cs
inc
pop
mov
mov
call
mov
mov
ljmp
outsb
lret
mov
in
jne
xor
pop
jbe
js
shrb
sbb
mov
and
push
xlat
push
inc
lcall
mov
fidivrs
jg
outsb
xor
inc
inc
dec
push
test
xor
mov
push
xchg
je
negl
call
xchg
lcall
add
pop
js
xor
rclb
cmp
pushf
lret
mov
leave
mov
or
pop
inc
fwait
xchg
scas
push
xor
pop
cmp
xor
inc
lods
icebp
dec
adc
rcll
jns
or
cmp
aaa
xor
mov
inc
adc
test
mov
rcr
ret
loop
push
notl
mov
pextrw
into
mov
out
lods
sti
pop
out
cmp
lock
inc
jb
iret
std
push
or
pop
adc
or
push
cmp
jmp
push
xchg
fiaddl
xchg
add
jns
pop
std
inc
mov
and
sbb
adc
pop
mov
filds
sbb
std
mov
dec
mov
pusha
popf
pop
fnstcw
popa
cmp
daa
leave
daa
add
insb
fxch
and
xchg
popa
mov
sarl
inc
pop
pop
jo
jnp
pop
dec
loopne
jb
mov
mov
popa
mov
push
aam
xchg
dec
mov
rcl
movsb
sub
out
mov
inc
unpcklps
lds
imul
jae
mov
popa
mov
hlt
fstp
sahf
xor
mov
inc
jmp
pop
ss
in
push
push
jnp
cs
daa
gs
jae
je
mov
jb
loope
xlat
cli
shrl
or
sub
mov
xchg
jne
lcall
ljmp
or
stos
call
mov
out
loop
bound
jp
adc
test
mov
lock
test
and
sbb
mov
into
mov
push
neg
push
das
mov
cld
cmpsl
mov
call
xorl
cmp
movsb
add
and
nop
sbb
push
mov
or
adc
pop
and
mov
mov
lahf
mov
push
mov
cwtl
xchg
push
push
xchg
adc
jno
hlt
lods
mov
sbb
jae
movsl
push
and
inc
xorl
lea
mov
mov
out
pop
enter
insl
sub
inc
popa
in
addr16
lock
out
arpl
std
mov
mov
fs
je
std
or
mov
adc
mov
and
and
inc
iret
add
cmp
jae
fs
cmp
dec
sub
adc
sub
jp
mov
jo
xchg
inc
cmp
inc
stc
adc
jno
popf
fwait
cmp
mov
or
dec
push
popf
shll
insl
xchg
aam
fadd
mov
shll
cltd
sbb
xchg
cmp
stos
in
push
xchg
jnp
adcb
mov
js
mov
or
sbb
sub
adc
push
or
xchg
or
xchg
ljmp
test
fsubs
sub
dec
insb
movsl
faddp
lcall
pop
sub
mov
push
fisttpl
jp
je
cmp
stos
out
int
pop
or
sbb
xchg
call
jae
pop
cmpsb
mov
xchg
mov
insl
cmpsl
aam
push
stos
lock
shlb
cmc
jge
sub
and
pop
sbb
nop
arpl
and
adc
repz
mov
arpl
pop
sbb
in
push
push
and
divb
adc
push
fmulp
lods
jo
call
xor
mov
repnz
adc
arpl
pushf
and
pop
jno
lods
xchg
call
rcl
mov
out
popa
sbb
and
sub
add
jb
mov
test
leave
cmp
adc
jg
mov
inc
std
jl
cmp
daa
jae
sbb
inc
push
insb
mov
jg
jbe
andb
and
push
addr16
adc
xor
inc
call
cli
movsb
dec
push
add
fwait
sbb
mov
jge
mov
jne
int3
ret
mov
push
xor
es
cmp
mov
in
adc
ja
scas
pop
or
jo
shrl
mov
jp
add
xlat
cmp
mov
adc
ja
jae
sub
push
jns
out
lcall
cld
xor
cmpl
and
insb
sub
cmp
mov
jne
mov
icebp
and
jb
inc
cmp
jmp
xor
pop
cmp
push
mov
lock
fisubs
arpl
dec
stos
add
jp
and
dec
xor
sbb
and
dec
data16
or
cmp
cwtl
inc
cmc
xchg
fsubrl
mov
faddl
cmpsb
daa
push
pop
mov
lcall
sbb
outsl
arpl
mov
js
xor
jmp
adc
adc
jecxz
dec
movsl
push
in
daa
and
out
call
jno
push
cmpl
jnp
sub
cmpl
sub
jg
xor
mov
sbbb
cmp
xor
iret
mov
push
cmp
enter
aas
jne
xor
lret
inc
xchg
xchg
test
stos
in
lcall
mov
lret
mov
jae
sbb
jae
bound
jmp
mov
mov
outsl
sub
sti
and
mov
jo
jecxz
fstl
jbe
mov
lods
sbb
fbld
ficoms
out
pop
icebp
inc
lret
pop
and
jg
imul
flds
jne
xchg
xor
dec
imul
dec
adc
xchg
inc
jmp
lds
mov
mov
jo
xor
lcall
sbb
jg
nop
mov
inc
jne
lcall
sbb
lcall
lahf
aam
mov
and
outsb
data16
in
pop
mov
hlt
daa
out
lods
addr16
sub
pop
dec
aas
add
add
sbb
mov
sub
add
mov
inc
cld
jl
movsb
popf
xor
push
xchg
and
push
xchg
js
push
mov
faddl
orb
fdivrl
xor
repz
inc
mov
or
mov
sbb
int
add
popf
repz
scas
inc
cmp
fisubrs
data16
out
xchg
fldenv
pop
xchg
mov
aad
inc
xor
jne
test
jns
push
jmp
add
sbb
push
inc
xchg
iret
insl
mov
movsb
clc
inc
scas
addr16
loopne
mov
push
mov
fsubp
stc
aas
push
andl
fistpll
xor
mov
and
divb
add
xchg
and
dec
and
xchg
xchg
stos
xchg
xchg
push
out
daa
gs
inc
sbb
mov
icebp
adc
lock
push
or
mov
lods
sbb
mov
popf
mov
mov
jle
dec
mov
andw
push
in
xor
lea
cmp
jns
shl
ja
cmpsb
cs
pushf
mov
jle
arpl
inc
pusha
cmpl
inc
dec
sub
out
pushf
outsb
hlt
push
mov
cmpsb
adc
or
dec
pop
mov
decl
lods
mov
icebp
stos
int
xchg
sbb
mov
mov
or
or
imul
addr16
daa
xchg
xchg
call
cmp
xor
pop
mov
pop
cltd
mov
mov
jo
stos
adc
cmp
jne
cmc
loopne
pop
fcoms
cmp
js
inc
call
xlat
data16
fisttpll
lret
sahf
mov
adc
ljmp
icebp
lock
in
call
adc
sbb
outsb
repz
mov
push
inc
pop
push
push
dec
sub
int
fisubrl
sub
imul
outsb
pop
mov
nop
je
dec
fwait
cmp
inc
outsb
stos
jbe
lahf
jbe
push
push
cmpsb
mov
jnp
xlat
rcr
imul
fisubrl
pop
hlt
mov
pushf
xchg
and
lods
stos
outsl
cld
push
inc
add
push
fistps
push
push
jg
add
dec
inc
fwait
stos
loopne
cmp
jae
inc
jb
mov
rorb
xor
orl
and
adc
in
mov
stc
mov
or
jns
jno
dec
push
lods
ja
pop
mov
xor
add
dec
cmp
int
lods
fisubrl
sti
sub
mov
testb
or
mov
imul
bound
sub
mov
and
mov
pop
stos
pop
mov
scas
stos
aaa
xor
jns
test
add
mov
mov
cli
mov
mov
xchg
pop
mov
fwait
or
adc
jmp
mov
popf
stos
stos
pusha
xor
push
mov
jle
pop
cmp
scas
push
mov
in
sub
cmp
mov
xor
dec
dec
out
rolb
mov
leave
jns
xor
cmp
nopl
sbb
xor
flds
sbbb
ret
out
repnz
int3
cmp
add
out
add
push
ficomps
push
xor
push
adc
movsb
in
test
pop
sbb
adc
rorb
dec
stc
lret
mov
push
clc
or
repnz
stos
cmp
outsb
cmp
or
xor
fadds
dec
sub
fisubrs
push
xchg
push
cmp
and
jno
into
andb
sahf
and
xchg
xor
in
pop
add
mov
jp
daa
aad
in
jl
pop
iret
jbe
mov
push
or
ja
lcall
pop
jb
in
rorl
pop
popa
or
int3
xor
or
inc
push
pop
iret
je
repnz
mov
fsubl
jae
cli
fnsave
test
lods
mov
mov
mov
andl
repz
mov
out
adc
scas
xchg
push
pop
xlat
mov
jmp
cmp
sbb
insl
or
pop
data16
push
mov
adc
jne,pn
mov
xor
xor
mov
xchg
mov
outsl
dec
movsb
fwait
mov
das
repnz
imul
daa
fstl
or
and
mov
or
add
xchg
pop
mov
mov
pop
loopne
push
iret
cwtl
xchg
ficoml
pop
imul
push
in
mov
jne
sbb
movsl
dec
adc
cmp
mov
mov
cmp
shlb
test
lea
test
xchg
xchg
dec
mov
and
imull
js
nop
push
subb
les
pop
sbb
fcmove
cmpsb
repnz
mov
sub
incl
js
jmp
jecxz
jns
mov
mov
add
dec
dec
pop
xor
dec
ret
aad
lea
mov
adc
pop
sub
lods
jg
inc
lods
movsl
cmc
movsl
insl
mov
icebp
pop
sbb
sub
and
pop
rol
xchg
pop
xchg
jecxz
pop
adc
nop
mov
jp
dec
mov
inc
push
or
inc
xor
jo
lcall
in
xchg
jecxz
mov
sbb
xlat
roll
push
stos
mov
xchg
push
dec
inc
jmp
inc
sbb
and
inc
jp
adc
sbb
push
cmp
xor
movq
rcll
shlb
or
js
into
push
push
adc
pop
mov
adc
sub
aam
and
xchg
push
loope
jae
jbe
cmp
mov
lock
mov
push
std
addb
test
jge
cltd
call
adc
shrl
xchg
cmpb
or
pop
add
sub
jnp
nop
jg
stos
or
lods
jge
jmp
addr16
dec
iret
ja
push
popa
js,pn
rorb
adc
mov
insb
outsl
mov
in
lea
adcl
addr16
cltd
sbbb
sbb
mov
fs
or
mov
sbbb
iret
scas
add
push
aad
xchg
or
mov
xorl
cmp
lret
dec
into
hlt
stc
out
cmp
dec
jbe
in
jb
in
pushf
das
mov
xor
pop
scas
jmp
add
mov
ret
bound
sub
call
add
sub
xor
les
pop
or
loop
push
pushf
pop
cwtl
loopne
clc
mov
insl
jne
dec
cld
mov
add
inc
lods
jmp
loope
mov
loop
push
xorl
cli
adc
test
add
aam
lods
je
dec
mov
pop
sub
aas
inc
mov
sbb
scas
pop
jge
jmp
push
xlat
incl
insl
mov
cmp
shll
xor
call
sbb
jg
loop
sbb
cltd
dec
and
sbb
adc
lea
sahf
call
add
divl
scas
mov
clc
je
pop
hlt
cltd
inc
ret
vunpcklps
pop
add
sub
addr16
xchg
repz
pop
cmp
aam
lahf
retw
pop
dec
mov
imul
xorl
test
mov
xor
ds
pop
ljmp
cmp
mov
fisubrl
call
inc
mov
shll
sarl
xchg
ljmp
mov
pop
pop
push
or
aam
push
aaa
adc
cmc
inc
add
xor
xor
lods
mov
in
popf
push
jns
mov
xor
fldcw
push
add
out
out
cwtl
rcrl
aam
imul
test
and
std
dec
or
xchg
mov
mov
lods
mov
mov
xchg
scas
adc
test
testb
or
adc
jno
iret
insl
testl
mov
testl
ljmp
and
lret
pop
mov
aaa
outsl
and
jecxz
adc
fiadds
and
adc
ljmp
mov
jp
pop
imulb
or
adc
jecxz
rclb
into
mov
sub
faddl
mov
jg
mov
and
sbb
sub
push
cmp
push
and
fistl
cmp
push
dec
cmpb
mov
or
addr16
inc
jne
sbb
dec
push
cltd
sub
fisttpll
fistps
fnstsw
mov
xchg
jne
loopne
jns
dec
jg
pop
push
orb
out
push
mov
xor
cmp
inc
and
cmpsb
andl
loope
loope
fwait
jnp
ret
add
andb
mov
xchg
pop
ss
mov
mov
cmpsl
jno
mov
idiv
jle
pusha
je
movsb
inc
push
sbb
jnp
iret
lock
or
nop
stos
mov
add
dec
sbb
inc
pop
add
adc
aam
fisubl
scas
adc
push
xchg
cmpsb
jnp
cli
test
sub
ds
repz
pop
ja
mov
enter
sub
inc
out
xchg
jae
repz
add
inc
sbb
xchg
fisttpll
and
adc
push
sarl
cmp
cmp
push
jle
dec
imul
dec
rolb
or
push
xchg
pop
jmp
fcomps
pop
mov
stos
sub
mov
adcl
mov
mov
outsl
scas
cmc
dec
int3
mov
ljmp
daa
xchg
fs
fwait
aas
fldenv
push
shrb
mov
sbb
popf
mov
jne
dec
jecxz
aad
adc
mov
jns
stos
xor
setle
mov
pop
scas
push
imul
out
cmpsb
mov
fsqrt
jmp
nop
add
add
xor
add
inc
js
dec
or
mov
call
je
test
mov
and
out
pop
pop
aam
sbb
popf
xor
push
cmp
lret
iret
adc
add
mov
std
popf
cmpsl
inc
iret
jle
mov
addr16
pushf
jno
movsl
pop
fs
jae
mov
loopne
push
into
leave
mov
or
adc
or
or
mov
jo
iret
xchg
sbb
xchg
xorb
mov
pushf
mov
sbbl
inc
add
xchg
inc
cltd
push
mov
jbe
insb
xchg
add
fildl
cmc
int
hlt
jbe
je
rcrl
mov
sbbl
push
dec
dec
popa
test
and
fimull
cmc
ficomps
test
aad
pop
cmp
mov
mov
fwait
cmpsb
jno
mov
jg
or
sub
or
call
insl
add
xlat
jmp
jb
mov
imull
cmc
inc
fiadds
sahf
test
test
jle
push
ret
repz
inc
mov
xor
adc
pop
cmpl
out
dec
ffree
cmp
add
push
aaa
fisubrs
stos
add
insb
or
test
adcl
dec
jle
in
outsl
fidivrs
stc
mov
out
mov
push
cmp
fnstsw
stc
jle
xchg
push
push
mov
icebp
scas
cmp
mov
and
ds
imul
movsl
outsl
aaa
dec
fiadds
mov
jnp
insb
sub
push
push
mov
cmp
inc
lret
outsb
push
scas
popf
adc
or
cltd
ret
mov
add
shrb
xor
mov
inc
lods
pop
jecxz
data16
jae
push
xchg
fsubrl
divl
or
test
iret
xor
mov
cmp
inc
out
inc
adc
daa
pop
jl
mov
test
stos
das
xchg
mov
aas
shr
out
pop
mov
nop
pop
xor
inc
add
leave
add
push
cmpsb
iret
fisubl
cld
jmp
popf
sti
xor
cmp
cmpsl
dec
sub
scas
xchg
shrb
addr16
jno
mov
mov
mov
cmpsl
inc
mov
addl
jl
movsl
push
dec
xor
mov
jne
mov
xchg
jo
xor
ficomps
sbb
sarb
mov
fisubl
std
subl
adc
sbb
inc
add
and
outsb
and
dec
xcrypt-ctr
cmpsl
pop
out
pop
js
mov
mov
mov
xchg
cmp
insb
mov
movsl
mov
test
dec
jno
fwait
shlb
adc
mov
xor
dec
fcompl
in
in
dec
imul
mov
cmp
call
xorb
fcom
stos
and
stos
in
test
rolb
mov
in
jne
jne
jnp
lods
adc
mov
sub
out
dec
pop
xchg
cmc
jne
dec
iret
add
pop
out
push
fwait
lods
sub
pop
fs
xor
test
flds
jnp
scas
mov
es
xor
sub
add
sbb
inc
inc
pop
jo
xchg
imul
das
dec
push
xchg
lods
sbb
stos
mov
jne
mov
push
in
mov
stc
lods
shll
test
add
lahf
jne
fsubs
add
outsl
pop
and
scas
insl
mov
xchg
lods
clc
sbbl
ja
repz
mov
pop
mov
mov
mov
imul
or
push
fsubs
nop
repnz
pop
and
imul
mov
jno
insb
or
xor
cmp
mov
add
push
ret
add
adc
arpl
push
xor
lds
pop
sub
adc
jecxz
out
inc
sbb
xor
das
hlt
negb
xchg
mov
sahf
push
xchg
xor
aam
xchg
push
jb
xorl
rolb
scas
fwait
mov
movsl
add
jg
or
repnz
jp
dec
add
mov
pop
mov
hlt
dec
loope
outsl
pop
sub
shll
push
scas
in
jp
ljmp
repnz
dec
aas
sub
aad
adcl
stc
jns
fxam
adc
xchg
in
mov
or
jg
bound
xlat
sub
lret
lock
mov
or
fs
in
gs
ss
stos
inc
inc
stos
movsb
dec
push
pop
outsb
sub
movsl
std
and
fistpl
int
push
xchg
jbe
mov
fstps
cmp
int
iret
add
pop
imul
cmp
xor
jp
addr16
fdivrl
jp
scas
pop
inc
in
mov
jmp
iret
add
jg
add
xchg
in
inc
testl
and
das
mov
repnz
push
mov
popa
push
mov
add
int3
data16
pop
mov
dec
mov
xchg
ja
in
pop
mov
negl
mov
cmp
inc
and
imul
pop
mov
adc
xor
imul
pop
xchg
mov
jl
ss
hlt
scas
add
fdiv
mov
fnstsw
out
dec
cmp
and
and
aas
mov
mov
mov
xchg
or
cmc
jmp
inc
fsts
pop
imul
push
nop
int3
jl
stos
dec
clc
adc
or
pop
pop
loopne
pop
movsl
je
or
mov
mov
pop
mov
clc
xchg
and
dec
dec
push
and
js
inc
cli
les
call
jno
pop
pop
in
outsb
sub
jb
shll
mov
mov
icebp
lret
sarl
std
testl
and
push
adc
adc
xor
imull
ss
xor
xchg
push
in
push
mov
test
mov
test
mov
call
or
leave
mov
fisttps
adc
adc
fsubrl
repz
insb
mov
cmpsb
scas
adc
lret
andl
imul
inc
adc
push
fsubrp
adc
scas
aaa
lretw
inc
adc
cltd
add
push
je
dec
mov
mov
mov
xchg
jle
or
aaa
pop
or
mov
insb
inc
adc
add
inc
xchg
nop
dec
loope
mov
js
xorl
add
fwait
push
insb
int3
cli
gs
daa
imul
inc
out
cmpb
xchg
loope
lock
imul
addr16
and
pop
jno
nop
dec
xor
xor
inc
icebp
sub
xor
mov
inc
push
push
loopne
into
mov
cmp
push
adc
mov
or
adc
aaa
popf
pop
dec
push
loop
enter
in
mov
out
mov
pop
psllw
push
mov
mul
fneni(8087
adc
push
adc
pop
cmp
enter
fstl
stos
lds
sahf
mov
lock
loopne
push
mov
mov
repnz
inc
push
sbbl
loope
push
cmp
and
aad
or
mov
cmpsb
cmp
je
lea
cltd
scas
xchg
repnz
inc
or
inc
jnp
jmp
or
mov
and
cmpsb
in
push
jae
push
pop
mov
mov
mov
lds
lock
xchg
stos
aad
mov
sub
xor
jle
fisttpl
inc
int
push
push
fcomip
mov
fcmovnbe
xor
insl
fstpl
rcr
xchg
icebp
add
insb
and
sub
hlt
in
sub
rcrl
dec
xor
rcrb
push
sbb
sti
repnz
cltd
jmp
popa
cmp
mov
test
mov
mov
xchg
push
mov
aas
ss
cmp
pop
test
mov
xchg
daa
push
and
dec
adc
mov
mov
sbb
sub
cs
jb
pop
fwait
push
repz
push
push
or
fs
call
dec
jb
xchg
stc
xlat
pushf
mov
xchg
icebp
call
mulb
add
sbb
pop
pop
lea
adc
add
jecxz
sbb
pop
or
stos
lods
push
push
xchg
jo
lods
mov
jns
cwtl
jecxz
fnsave
xchg
in
leave
lods
rcl
test
jecxz
test
gs
and
xchg
add
inc
dec
js
mov
sbb
and
inc
push
outsb
jo
add
jne
cmpsl
push
out
mov
repz
rol
divl
out
fwait
xchg
or
mov
cmp
test
shlb
sti
fldt
add
outsl
sbb
pop
imul
xor
out
push
pop
sbb
jmp
cltd
cld
mov
adcb
and
fistpl
nop
add
loop
push
xchg
jge
ljmp
fs
loope
mov
das
addr16
hlt
pop
push
cmp
cli
aas
negl
xchg
dec
movl
cmp
daa
jne
les
inc
ficoms
out
cmp
cltd
aaa
add
jno
testb
mov
inc
addb
sub
fiaddl
xchg
mov
jecxz
and
mov
mov
nop
iret
xor
pushf
sub
dec
or
sbb
inc
imul
dec
dec
and
rolb
movb
scas
int
and
leave
jecxz
out
xchg
push
pop
pop
outsb
into
and
hlt
mov
ret
mov
jo,pn
rorb
and
mov
fdiv
subb
ret
addl
adc
push
pop
jne
lret
shll
loope
mov
mov
cmpsb
cmovae
clc
lret
inc
data16
jae
pop
mov
jle
test
push
scas
mov
stos
add
repz
xor
pop
sbb
and
adc
cld
add
lret
cs
stos
push
pushf
xchg
fisttpll
and
jecxz
and
mov
xchg
inc
xchg
pop
sbb
push
add
cmp
sbb
push
mov
or
xchg
push
adc
jb
inc
cmp
outsb
dec
lods
mov
pop
loope
je
bound
sub
or
mov
iret
fildl
pop
cmpsb
sub
addr16
mov
add
xchg
gs
fs
in
push
sub
out
lods
and
aam
mov
cmp
add
loope
jmp
imul
insb
jno
mov
sbb
cmpl
push
ja
fsubrl
mov
push
lds
inc
cmp
push
sbb
sbb
inc
xchg
dec
icebp
lods
push
in
sub
insb
sbb
mov
jecxz
neg
gs
je
cmp
adc
in
adc
cld
or
je
and
jecxz
psrlw
push
dec
out
jecxz
inc
mov
imul
cltd
inc
shrb
les
imul
scas
inc
test
lahf
leave
or
out
movl
arpl
stos
or
mov
or
dec
push
test
xor
push
push
push
data16
sbb
in
jmp
push
testl
fildl
sbb
mov
pusha
mov
scas
adc
push
out
das
pop
test
and
and
push
out
aaa
fs
cmp
cmp
outsb
dec
les
sub
mov
mov
adc
bound
das
lds
mov
fidivrs
or
mov
out
pop
shld
cmc
loop
dec
or
das
pop
or
mov
gs
roll
xor
inc
je
pop
inc
outsb
inc
sub
add
mov
jl,pn
cmpb
rolb
sbb
xchg
cmp
es
out
mov
sahf
rcll
mov
jno
pop
stos
jge
mov
lea
popa
or
mov
pop
cmp
and
mov
jecxz
insl
sub
cli
into
sub
out
mov
jge
pop
lahf
test
pop
xlat
jne
dec
xchg
out
cli
ret
jb
cmp
iret
dec
lock
adc
jae
jle
inc
push
sub
mov
mov
lcall
push
sub
adc
inc
push
out
sbb
sub
and
jnp
jb
std
push
pushl
scas
imul
test
test
loop
lret
dec
std
cmp
inc
inc
pop
inc
jno
pop
adc
out
mov
fnstsw
filds
stos
mov
outsl
mov
lret
icebp
fwait
mov
out
sbb
jbe
sub
inc
stc
sub
mov
inc
xchg
scas
push
lcall
add
mov
mov
insb
cmc
decl
pop
icebp
rclb
dec
popa
aas
mov
outsb
jne
mov
and
negb
cmc
pop
jle
gs
jecxz
aam
and
sub
dec
imul
push
inc
enter
add
mov
xchg
aaa
mov
test
xchg
pop
and
xchg
mov
jb
add
mov
mov
leave
mov
addr16
and
loop
rorl
jae
jmp
cltd
dec
jle
ja
add
lock
inc
mov
shlb
sub
pop
mov
mov
mov
imul
fdivp
xorl
adc
jmp
bound
mov
int
mov
loope
nop
loope
dec
fsubl
inc
loope
inc
fcoms
data16
repnz
mov
add
cmpsl
push
fisttpll
jmp
cmpl
mov
iret
and
dec
aam
imul
mov
int3
mov
add
sbb
pop
jecxz
push
cmp
pop
jnp
movsb
hlt
cld
in
push
xchg
and
inc
lock
xor
push
insb
push
sti
mov
in
rcll
adc
sbb
sub
cmp
sub
ds
repz
sub
dec
add
push
sub
dec
out
sbb
ja
inc
jmp
lea
adc
popf
and
fcompl
dec
imulb
jp
xchg
test
cld
or
mov
roll
lds
je
les
mov
aas
add
or
xchg
arpl
bound
lret
ret
push
push
fidivrs
add
movsl
test
divl
inc
mov
xchg
cwtl
test
xchg
xor
jno
xchg
lock
push
out
nop
xchg
jo
iret
add
fadd
clc
shll
js
scas
lret
enter
xchg
fstps
shll
sbb
cmp
fmull
lahf
adc
hlt
fistl
and
aaa
int
jl
mov
scas
sub
xchg
mov
jns
lods
xor
pop
lods
pop
xor
enter
adc
mov
add
out
lret
iret
orl
ret
sbb
popw
cmp
rcr
add
enter
and
dec
sub
add
jecxz
inc
pushf
and
or
or
push
mov
insb
in
push
lods
xchg
push
xor
jle
cmp
xchg
mov
dec
cmp
mulb
jbe
mov
out
in
jp
lahf
pop
xor
sub
ficoml
mov
sbb
in
jl
and
rcll
cmp
call
daa
shl
in
xchg
push
les
xor
dec
aad
add
push
leave
add
xchg
cltd
mov
sbb
movl
mov
xor
mov
insb
std
cmp
dec
pop
dec
inc
mov
jo
loop
shll
shrb
iret
stos
jns
loopne
pmuludq
es
ficompl
push
out
sub
cmp
mov
sub
mov
jnp
sti
adc
test
movsl
aam
sbbl
subb
pop
adc
cli
arpl
add
sub
lock
movl
ret
mov
icebp
fwait
sbb
jbe
ljmp
cmp
into
xor
add
or
out
bound
arpl
mov
jle
mov
pop
cs
mov
mov
lea
push
loop
and
or
adc
clc
cmp
fbld
push
aas
shr
pushf
mov
sbb
repz
inc
xor
and
fisttps
repnz
outsl
outsl
add
lock
ret
aam
push
jo
insb
mov
pop
xor
push
sub
jecxz
cmpsb
sbb
je
rolb
sub
cld
ss
fistps
nop
add
dec
shl
mov
pop
sub
jmp
jg
or
stc
and
mov
jb
and
mov
outsb
pop
fsub
xchg
int3
pushl
mov
adc
and
imul
dec
inc
pop
dec
fiadds
or
xchg
imul
stc
push
mov
xchg
jne
mov
in
popf
jge
scas
or
mov
mov
jae
inc
clc
icebp
pop
sub
sahf
cmp
mov
lret
sahf
ja
adc
dec
stc
enter
lahf
pushf
inc
stos
pushf
cmp
inc
sbb
jl
add
shl
jge
orb
stos
in
adc
jo
add
cld
sub
or
cwtl
mov
ljmp
jne
insl
idivb
cmp
setnp
jb
dec
arpl
lds
mov
jns
sub
aad
dec
popf
int
arpl
test
inc
push
add
imul
idiv
std
loopne
cltd
shrb
dec
jno
or
jae
mov
pop
or
inc
ss
xchg
and
mov
fldenv
push
loop
fwait
nop
push
jo
sub
mov
adc
rcrb
popf
or
icebp
cmpsl
xchg
mov
jns
out
icebp
sarl
inc
and
outsb
mov
imul
and
in
jns
lret
add
mov
cltd
loope
sub
push
enter
loop
sti
mov
mov
cld
jge
andb
test
stc
and
and
sub
mov
into
out
mov
push
sti
pop
add
jno
and
xor
mov
sub
mov
inc
cld
mov
mov
mov
fwait
add
in
sub
or
jl
sub
scas
pop
fdivl
pop
test
movsb
lahf
cmpsb
cmp
xor
shll
push
cmp
fsts
in
jb
pop
push
cmpsb
push
mov
inc
out
gs
fisttpll
out
pop
enter
mov
pop
xor
dec
xor
xchg
enter
dec
in
pop
jg
ljmp
jecxz
pusha
lret
pushf
adc
mov
lcall
mov
cmp
adc
ljmp
jg
sahf
lea
fsubs
sbb
dec
mov
pop
fwait
out
fistl
xor
push
and
and
stos
out
ja
test
add
xchg
outsl
in
pushf
xchg
enter
xchg
push
div
add
sti
mov
cmp
xchg
jmp
inc
mov
jbe
cwtl
mov
dec
sub
sbb
hlt
mov
adc
aad
icebp
aam
or
leave
add
gs
jp
dec
mov
scas
rcl
dec
icebp
lods
add
cmp
xor
mov
sub
jno
out
cmpsb
sub
scas
jnp
push
push
dec
cltd
sub
inc
push
mov
inc
mov
dec
mov
sub
aad
les
clc
mov
jne
scas
jb
popf
out
push
inc
push
sub
jecxz
lea
in
js
ret
jne
xor
ss
cmp
stc
cmpsb
adc
cmp
add
add
inc
movsl
out
add
jae
lahf
xor
or
stos
insl
inc
jbe
add
or
pop
mov
rclb
lods
mov
and
add
push
mov
fwait
int3
and
push
inc
xor
aaa
jbe
jae
xchg
pop
mov
dec
push
jle
aaa
fsub
insb
sbb
sbb
icebp
cmpsl
js
stc
push
jne
aaa
mov
aam
iret
push
mov
data16
mov
pushf
ret
fs
xchg
les
in
mov
sub
dec
or
push
aad
sbb
icebp
repnz
loopne
ret
jo
jg
jge
in
pop
subb
inc
sub
mov
test
dec
pop
sbb
adc
dec
push
pop
dec
loope
xlat
xlat
mov
insl
lret
bound
and
test
loop
push
and
or
dec
ja
imul
stos
mov
and
out
push
je
pushf
pusha
pop
adc
push
push
popf
jmp
lret
cltd
jp
xor
xchg
mov
in
mov
mov
imul
lcall
xor
dec
imul
inc
arpl
push
add
mov
repnz
mov
fwait
ss
aam
adc
mov
adc
push
je
int3
imul
xchg
cmp
das
jnp
pop
aad
adc
daa
inc
stos
aaa
mov
mov
lret
xchg
dec
ret
pop
test
xchg
cmc
inc
fsubrs
lret
mov
stos
mov
insb
call
dec
stc
fldcw
push
adc
or
inc
nop
je
cmp
hlt
push
aad
adc
push
pop
imul
add
jns
cmp
lea
fistpl
adc
sub
das
mov
scas
popa
dec
push
push
out
testl
inc
cmp
stos
cmc
xlat
and
popl
es
rcrb
mov
add
sbb
mov
decb
lock
xchg
in
push
jb
or
cmp
xor
aas
or
dec
adc
out
xor
pusha
insb
in
mov
dec
clc
adc
pushf
nop
movsl
popa
ret
test
ljmp
mov
push
add
inc
std
in
cltd
xchg
gs
fwait
cmp
int
test
les
idivl
sbb
xor
fwait
cmc
sbb
fwait
jbe
mov
pop
jno
and
subb
hlt
fiaddl
jge
mov
pusha
int3
push
sbb
stos
jns
call
mov
lods
jbe
es
movsl
ja
in
sbb
mov
and
dec
push
aam
sbb
sub
xchg
lods
ret
pushf
enter
aam
add
loop
ja
outsl
jne
jl
cmpb
jno
jmp
mov
xchg
adcb
leave
push
std
aam
clc
mov
test
mov
xor
mul
cmp
sub
pop
xchg
stos
popf
hlt
jl
adc
mull
jb
dec
push
mov
pop
bound
call
ret
push
sub
fstps
iret
into
fcompl
push
pop
aas
and
loopne
ss
inc
xchg
xor
pop
jbe
insl
inc
ljmp
and
pushf
cli
sub
cmp
adc
jmp
add
aad
xor
std
out
or
lods
insb
xor
in
ja
jmp
mov
push
bound
sahf
test
icebp
fwait
cmp
push
mov
adc
mov
cmp
push
fs
push
iret
out
adc
push
aaa
movsb
jb
arpl
lds
ret
sub
lret
icebp
dec
outsb
and
enter
dec
and
mov
out
push
push
mov
and
mov
jp
or
mov
mov
xchg
pusha
add
or
adc
add
call
imul
mov
cmpsb
fwait
clc
movb
shlb
idivl
sti
xchg
cmc
sub
insb
inc
and
or
mov
ret
mov
aam
addr16
nop
add
fidivrl
das
xor
cmpsb
jge
arpl
arpl
xchg
aad
xchg
mov
or
stc
pop
jmp
cmp
mov
int
jge
adc
sti
sbb
mov
neg
mov
mov
mov
inc
sub
cmpl
pop
test
mov
or
roll
dec
daa
sbb
adc
lea
adc
int3
push
mov
mov
roll
in
and
aaa
ja
or
scas
adc
pop
sub
mov
push
lea
sub
repnz
fwait
jl
pop
push
outsb
fmull
dec
mov
aad
mov
in
roll
cmp
adc
jno
addb
sub
mov
fnclex
fnsave
push
fadd
xor
adc
and
xchg
lock
enter
outsb
xchg
call
mov
mov
shrl
imul
push
cli
loop
xchg
mov
sub
mov
jo
xchg
push
out
sahf
out
jl
xor
cmc
dec
mov
sahf
lret
stc
sbb
ja
adc
xchg
or
jne
inc
adc
mov
xchg
mov
xlat
stos
mov
lods
inc
mov
add
hlt
ret
sbb
mov
xor
mov
addr16
mov
test
cmp
mov
cmc
ficoms
es
cld
mov
pop
push
push
pushf
and
stos
push
aaa
clc
mov
and
sub
push
sbb
pop
repz
lds
pop
js
cltd
xchg
cli
inc
xor
shlb
cltd
in
add
adc
ror
xor
mov
xor
icebp
dec
mov
dec
out
mov
or
ret
rcr
cmovne
cs
cmp
mov
outsl
jle
mov
rcr
out
lds
cmp
sbb
icebp
cmc
inc
je
and
pop
jmp
lahf
loop
xchg
mov
pop
pop
outsl
cmp
add
push
pop
pop
loopne
pushf
inc
xchg
arpl
cli
pop
insb
xchg
and
fstpt
and
pushw
rolb
dec
loop
and
js
push
adc
sub
js
out
aas
loope
push
xchg
into
das
ret
or
clc
orb
int3
loopw
pop
lret
es
and
jnp
xchg
nop
xor
or
mov
popa
jne
jmp
cmpl
or
pop
adc
mov
addr16
leave
cmp
adc
xor
insb
clc
test
xchg
and
fwait
loop
cltd
dec
cld
imulb
out
pop
inc
movsl
rorb
xor
int
aaa
jp
xchg
xchg
pushf
cmp
jo
cli
out
stos
daa
lds
inc
sbb
ljmp
or
repz
mov
add
iret
pop
test
divl
test
jg
fimull
dec
mov
in
adc
sub
das
int3
jnp
call
test
push
xchg
andl
rolb
jge
pop
orb
sub
pop
pop
cmp
xor
pop
in
push
xor
fs
pop
ficomps
cmpsb
stos
fildll
push
jg
adc
dec
into
or
leave
std
or
outsb
pop
insb
outsb
pop
xchg
mov
sbb
jns
cltd
push
inc
jecxz
in
mov
jp
push
loop
fldcw
lret
pop
mov
lods
mov
adc
sbb
push
shlb
paddusw
cmp
or
insl
ret
imul
sub
xor
bound
or
stos
testl
mov
or
jnp
and
cmp
or
sbb
mov
mov
repz
call
jl
pop
jb
pop
popf
mov
mov
jge
popa
lds
mov
jbe
fdiv
cmp
xlat
add
in
dec
jecxz
xorl
or
dec
inc
outsb
data16
mov
xchg
sbb
jno
cmp
pop
push
mov
sbb
in
sub
shrb
add
ja
push
mov
or
xchg
dec
lods
or
pop
add
adc
pop
add
or
lods
push
repz
lret
bound
mov
lcall
add
mull
dec
or
fs
cmp
lahf
push
movsb
add
mov
daa
mov
lret
lds
stc
fs
mov
stos
inc
dec
xchg
fnstcw
lret
push
xchg
mov
adc
cs
aam
jl
pop
mov
jo
dec
ffree
sub
out
addr16
nop
int3
jmp
xchg
je
mov
repz
fwait
cmp
pop
xchg
add
sbb
ja
fadds
mov
ret
sub
mov
inc
lods
es
test
sti
add
iret
mov
push
add
sub
or
adc
push
data16
adc
scas
fadds
stos
cltd
arpl
mov
fistl
aas
fistps
scas
cmp
pop
pop
jl
cmp
aaa
outsb
sub
in
mov
scas
jge
mov
decl
xor
orb
loope
out
push
cmp
cmp
jmp
xor
mov
mov
js
mov
push
dec
or
and
mov
xor
lcall
jmp
mov
test
push
add
mov
pop
xor
pop
xchg
sbb
das
adc
jle
lret
cmp
push
push
pop
cmpsl
jb
add
mov
mov
adc
inc
cmp
xchg
cmpsb
xchg
fsts
dec
inc
loopne
aas
out
fneni(8087
ret
push
loope
xchg
sbb
xchg
dec
xor
and
xor
xchg
xchg
pop
ror
sahf
shll
pop
xor
mov
push
call
sub
inc
mov
leave
gs
adc
lahf
das
fmull
rdtsc
push
sti
add
mov
xor
pop
popl
aas
daa
cmp
xchg
inc
lods
xchg
mull
loop
pop
cmp
pop
fisubl
dec
sub
xchg
mov
xchg
xor
mov
push
enter
aaa
mov
jle
iret
jle
imul
stc
imul
jmp
in
sub
sbb
mov
push
push
adc
outsb
adc
xor
xlat
std
mov
rcll
add
cmpsl
fcmovb
jbe
sti
insl
xor
pop
lret
mov
movb
mov
mov
pop
mov
pop
xor
pushf
punpcklbw
mov
cmp
movsl
outsb
je
lret
sbb
pusha
pop
repnz
test
out
adc
adc
inc
shrl
xor
cmp
cmp
into
outsb
adc
mov
pop
adc
inc
push
mov
jmp
clc
sahf
nop
push
add
xchg
push
or
inc
xor
lret
ds
sbb
inc
lcall
enter
sti
cld
into
pusha
sub
icebp
mov
test
aaa
inc
lret
loop
jp
shl
sbb
and
loop
jp
out
ret
out
int
jp
fidivrl
mov
test
notb
adc
jl
mov
aas
adc
fbld
ret
sbb
in
sub
pushf
lret
jbe
in
sbb
test
test
clc
stc
or
cmp
push
cmp
scas
jmp
xor
sub
cltd
mov
push
mov
lock
sbb
mov
mov
out
sub
sub
sti
cmpsb
insl
push
loope
insl
orl
sbb
sbb
insl
cmpsl
popf
fimuls
bound
std
std
inc
div
cli
scas
add
pop
dec
int
outsb
clc
enter
dec
pop
adc
adc
mov
iret
sbb
xor
sti
dec
shrl
fstps
sbb
scas
enter
dec
and
popf
fsin
test
pop
aam
xchg
sub
jl
cmc
lret
mov
cmp
sbb
sbb
mov
inc
fdivrs
mov
test
mov
pop
das
test
jmp
stos
roll
pop
jns
xor
xor
adc
out
jge
and
lcall
bnd
push
data16
popa
mov
mov
in
cs
push
add
test
out
xchg
lods
inc
and
call
scas
icebp
or
addr16
ss
fists
xor
popf
jp
sahf
push
sarl
xchg
out
rcrl
rcrl
jg
cmp
bound
jg
ja
or
in
pop
xor
out
cltd
fnstsw
sub
mov
sbb
aaa
movsl
lcall
jnp
fildll
es
clc
sub
scas
fisubs
sbb
stos
mov
and
xchg
movzbl
aam
mov
add
push
in
fs
stos
mull
bound
lcall
aaa
stos
cwtl
xchg
adc
sub
out
repz
sbb
mov
push
int
loop
mov
and
and
mov
orl
push
cld
inc
out
fdivrp
icebp
and
xor
fmul
in
push
sbb
std
mov
in
jecxz
sub
push
and
push
dec
xchg
movsl
daa
fisttpll
sub
fsubrs
jl
sahf
add
fiaddl
aas
imul
mov
repz
rcrl
dec
cmp
jo
sub
inc
or
xor
rcl
xorl
js
mov
dec
bound
jns
sub
pop
dec
andl
adc
cmp
ds
dec
xlat
ds
xchg
or
movmskps
push
add
and
push
adc
icebp
pop
or
fidivrl
ret
adc
leave
outsb
jg
jecxz
cmc
mov
sbb
in
add
push
xchg
das
mov
mov
inc
cs
push
xor
lret
pop
pusha
dec
jle
push
xor
jmp
mov
push
and
push
push
mov
shlb
sub
inc
push
imul
rclb
push
jge
jne
sub
int
mov
and
xchg
or
jl
inc
or
fwait
adc
dec
pop
iret
mov
inc
add
inc
xor
test
lahf
aam
imul
cmp
mov
ret
pop
mov
popa
mov
into
shlb
cmpsl
stc
rolb
mov
ret
xor
pusha
pop
shlb
movsl
xchg
or
lock
nop
nop
dec
mov
sub
and
int3
jnp
cs
loopne
add
lret
dec
in
mov
insb
push
sub
pusha
ds
and
jo
lds
lods
repz
sbb
imul
jo
loop
cmp
jo
cmp
mov
cmp
push
andb
adc
lds
lahf
push
pushf
icebp
xor
arpl
xchg
inc
rep
aam
dec
fildl
leave
inc
xchg
stos
lcall
sub
add
das
js
sub
jne
adc
test
addr16
push
mov
cmp
sahf
lret
adc
mov
cld
idivb
mov
and
test
insl
mov
or
mov
add
ret
inc
movsb
ret
mov
adc
test
inc
xchg
adc
sahf
int
ljmp
arpl
dec
mov
xchg
scas
test
dec
repnz
mov
ja
add
cmp
adc
pop
add
test
fndisi(8087
adc
inc
sbb
add
sbb
pop
fstl
xor
jl
inc
mov
int3
xor
pop
daa
mov
mov
js
pop
push
adc
sbb
and
pop
pop
lcall
cmp
jae
xlat
inc
cltd
std
js
gs
jo
jp
insl
mov
mov
ja
or
repnz
aad
inc
add
ret
inc
pop
pop
pusha
cs
gs
ss
in
sbb
jne
cmpsb
cmpsl
cmp
fcomip
cli
int
dec
add
sub
prefetchnta
movsb
stos
mov
insl
dec
mov
ss
scas
dec
negb
pop
add
add
jnp
ret
sub
mov
jl
sbb
ret
test
sahf
mov
mov
test
push
ret
mov
mov
sbb
pop
xchg
inc
cmc
aam
jbe
cli
jae
jge
aad
dec
inc
fsin
mov
lret
scas
outsb
pop
rcl
sbb
add
fldenv
out
ret
fwait
insl
and
or
das
pop
imul
das
std
jns
cmp
fsubp
jp
aam
pop
inc
sub
test
movsl
outsl
ds
ljmp
jecxz
mov
xchg
shlb
nop
dec
push
dec
inc
pop
call
adc
fcmovb
mov
mov
dec
mov
jmp
jle,pn
ds
pop
movsb
cltd
and
shlb
sub
mov
xchg
and
cmp
aam
repnz
loop
cld
push
scas
sbbb
xchg
adc
add
js
gs
pop
pop
mov
lods
jge
fcmovbe
add
cld
in
mov
cmp
sub
jecxz
push
mov
xor
mov
pop
or
sub
aaa
rcrb
push
scas
or
aas
daa
in
cltd
sbb
sub
or
jnp
jae
repz
xor
adc
jecxz
jecxz
xchg
test
push
add
imul
mov
sub
cmp
mov
sub
cmp
adc
mov
es
mov
pop
test
test
loope
cmp
jp
icebp
leave
pusha
push
xlat
mov
outsb
std
js
jns
xchg
outsb
cmp
jecxz
into
int3
insb
cwtl
inc
pop
das
into
sub
fcmovnu
mov
stc
arpl
jbe
aaa
cmp
pop
addl
mov
fst
sti
dec
in
ret
mov
mov
fisttpl
mov
sub
jle
fwait
or
inc
xor
lea
xor
mov
sbb
xchg
dec
push
adc
divl
rorl
fistps
mov
inc
sub
mov
jo
dec
and
mov
adc
inc
mov
push
jle
pop
adcl
fimuls
imul
mov
dec
adc
jmp
gs
jnp
in
push
scas
mov
cmpsb
dec
mov
push
push
mov
xor
xor
scas
or
add
popf
xchg
mov
rcrb
adc
fcomps
dec
adc
rolb
test
pop
ljmp
mov
cmp
mov
pushf
ret
enter
xor
shr
adc
sbb
dec
adc
xorl
lds
add
push
push
hlt
mov
hlt
adc
jnp
shlb
mov
inc
sbb
mov
sub
test
cld
inc
ds
out
out
mov
mov
daa
add
cmp
es
jp
sti
xchg
or
dec
mov
xchg
gs
sbb
push
adc
jle
ljmp
pushf
push
andl
mov
mov
cmp
in
imul
and
divl
xchg
imulb
adc
add
mov
push
data16
stos
test
cwtl
gs
sub
push
mov
popf
in
jle
outsl
and
dec
add
cld
subb
push
xor
stos
cmp
pop
sbb
xchg
iret
push
das
adc
mov
stc
push
jge
repnz
fsubr
push
lds
pop
fdivr
sarl
dec
jne
push
aas
subb
lea
mov
mov
and
mov
fwait
loop
mov
in
fiadds
loop
jle
sbb
clc
or
mov
mov
dec
add
std
mov
mov
lods
dec
imul
xchg
mov
or
push
fs
iret
and
xchg
es
in
mov
xchg
sub
mov
mov
and
enter
arpl
mov
jo
clc
xchg
pop
fsubs
jp
xchg
cmp
xchg
xor
test
shrb
cmp
adc
bound
packsswb
add
ss
mov
pushl
add
test
cli
das
and
sub
mov
inc
jp
pop
jo
ret
pop
xchg
fidivl
push
hlt
jno
cmp
stc
imul
iret
jno
in
mov
movsl
cmpl
pop
sbb
dec
out
js
int
mov
out
aad
pop
pop
mov
dec
lret
mov
test
or
dec
adcb
fs
cmp
or
jno
pop
imul
push
push
mov
xchg
add
sub
jbe
lret
mov
mov
jnp
xchg
xchg
jp
psubq
and
sbb
push
inc
data16
stos
or
mov
hlt
mov
ss
icebp
sti
mov
add
pop
xor
inc
xlat
dec
cmp
or
loope
fldl
inc
loopne
mov
or
pop
sub
push
mov
dec
outsl
aad
rcrb
dec
adc
ljmp
lret
pop
push
andl
lcall
cmp
push
adc
addr16
ja
jb
test
test
out
sub
mov
or
jp
add
dec
add
mov
pop
rclb
mulb
ret
dec
xor
pop
mov
notl
test
push
in
test
ret
and
mov
cs
fwait
popf
subb
out
adc
push
mov
mov
int3
push
enter
les
inc
pop
in
pusha
add
stos
iret
aam
into
fldl
jb
js
daa
push
sti
bound
lods
mov
popa
xor
insl
or
jmp
cmp
pushf
je
jnp
rcll
outsb
loopne
xor
fidivrs
xlat
mov
sub
mov
scas
xor
test
cmp
dec
mov
cmp
imul
mov
clc
mov
cld
sahf
pop
jbe
fildl
loope
sub
outsl
jl
sub
arpl
add
mov
rcrl
scas
lods
repnz
dec
vmread
push
insl
jge
into
pop
cmpsl
pop
jp
cmp
push
xor
pop
xor
push
adc
and
aaa
outsl
loope
cltd
in
inc
push
inc
pop
mov
sarb
leave
inc
sub
mov
add
mov
push
push
popa
js
push
mov
pop
cmc
cmp
test
stos
test
ret
pop
push
or
lock
sbb
lret
mov
push
dec
scas
ds
test
xchg
jae
fistpll
push
out
inc
or
mov
mov
movsb
push
add
aam
push
stos
shr
inc
and
sbb
jnp
jae
bound
scas
aas
icebp
push
mov
sbb
pushf
setae
push
test
cmp
out
dec
div
jge
popf
mov
inc
insb
dec
stc
inc
ss
sbb
lods
iret
mov
pop
addr16
add
lock
xor
pop
mov
clc
add
and
and
xlat
mov
inc
aam
in
dec
mov
push
cld
dec
xchg
inc
xor
pop
out
mov
jge
cmp
cwtl
cwtl
push
into
push
cmp
pop
dec
sbb
fwait
lcall
inc
lods
mov
leave
repz
stc
push
adc
ja
cs
les
aas
jmp
mov
push
or
cld
mov
adc
mov
adcl
xchg
lsl
mov
xor
add
add
inc
lret
or
imul
lock
daa
add
pushf
sub
roll
mov
pop
mov
lock
cli
in
bound
add
cmp
xor
and
and
dec
shl
mov
sbbb
sub
push
fwait
mov
sub
sysret
push
mov
lret
or
push
pop
pop
mov
push
gs
jnp
jae
dec
dec
mov
je
jmp
shlb
mov
sub
fisubrs
outsl
push
xorl
cmp
and
movsb
mov
or
loopne
mov
fldl
mov
cwtl
cmpb
dec
into
test
sbb
popf
adc
mov
test
xlat
inc
lahf
and
ror
imul
lcall
gs
mov
mov
dec
jmp
lds
dec
test
call
mov
inc
ficoml
mov
mov
sub
cmp
int
popf
inc
shr
call
popf
push
ret
mov
push
inc
xchg
mov
daa
ds
mov
mov
test
fadds
add
pop
ljmp
cmc
sub
ds
cmpsb
pop
rcl
and
pushf
sub
mov
test
jge
pop
fsubrs
das
dec
sbb
sahf
jl
clc
dec
stos
xlat
or
fsubrl
arpl
sub
scas
loop
xchg
push
or
dec
popf
xor
aaa
lahf
dec
ret
sub
call
xor
mov
cmp
inc
jbe
add
int
frstor
popa
sub
dec
push
rorl
adc
fwait
das
insb
push
or
imul
pop
sahf
ds
mov
xchg
sbb
and
pop
or
ss
aaa
xor
pop
pop
gs
imul
and
dec
fwait
xor
test
fcompp
dec
and
pop
xor
dec
dec
shll
ja
stos
out
imul
add
lcall
sbbl
pop
mov
cmp
ds
sub
in
imul
fs
inc
pop
jno
outsl
dec
pusha
mov
std
shrl
movsl
push
sbb
sbb
pop
aas
cs
push
pop
add
popf
sbb
jne
sbb
cmpsb
dec
or
xchg
xor
int3
ret
shlb
sarl
mov
xor
push
ja
ret
arpl
lods
dec
jl
ja
jne
mov
rorl
out
mov
adc
sbb
dec
outsb
and
jbe
adc
imul
xlat
xor
lret
or
inc
hlt
rcrl
ljmp
mov
test
mov
fld
jo
movl
gs
jb
repz
pop
lods
sub
ror
jecxz
push
add
jmp
mov
sbb
clc
jmp
cmpb
movsl
ja
out
scas
icebp
mov
push
and
ficompl
sbb
pop
test
pop
cmp
or
movsl
xchg
mov
repnz
movsb
pop
repnz
lret
mov
fsubl
pop
xor
xor
mov
or
sub
aad
jo
cli
data16
cwtl
xor
lcall
jge
push
xchg
push
enter
mov
inc
cmpsb
or
or
inc
loop
sub
xlat
push
fmull
ss
pop
and
aam
sub
pushf
rcr
xchg
dec
mov
cmp
in
shufps
or
dec
mov
cmp
jle
nop
mov
xchg
icebp
shrb
jb
stc
cwtl
jae
sahf
cmpsl
push
gs
xor
fdivrl
xchg
xorl
pop
sti
mov
filds
inc
into
xchg
and
fwait
jb
dec
jne
lods
dec
and
pushf
inc
xchg
xchg
fildll
lods
inc
hlt
jno
loop
shll
fsubrs
test
pop
xchg
cmp
add
scas
outsb
outsl
adc
fldcw
mov
aaa
fisttpl
lods
iret
stos
pusha
sub
jbe
sub
xchg
enter
into
aaa
push
mov
cmp
xor
cld
or
and
hlt
push
les
testl
push
loope
xchg
je
divb
rclb
repz
pop
jb
fwait
movsb
jbe
and
inc
mov
dec
jmp
or
aad
out
sub
jle
cmp
xlat
loopne
out
mov
hlt
test
pop
into
and
mov
movsb
dec
sub
fstpl
mov
push
addr16
xchg
nopl
cmpb
cltd
cmp
sub
stc
loop
roll
dec
sub
repnz
xchg
ljmp
xchg
repz
jg
cmp
mov
out
cmp
aam
inc
cmp
cli
lret
adc
jnp
xabort
or
sbb
fmul
in
add
lret
mov
jne
cld
mov
fisubrl
cmp
popf
int
mov
scas
push
mov
addb
mull
dec
push
sub
push
push
jns
test
loope
fldenv
into
repz
imulb
jnp
stos
inc
lds
lretw
mov
mov
mov
xchg
shrl
fwait
lds
jp
dec
ret
jno
sub
pushf
bound
pusha
sbbb
pop
cmpsl
pop
jb
imul
add
mov
and
adc
frstor
add
call
xchg
bound
jle
fidivs
repnz
icebp
cmpsb
dec
sti
pushf
fldcw
pop
in
stc
ss
add
xor
mov
popf
sahf
mov
andb
icebp
sub
cmp
sub
add
outsl
in
push
jmp
les
shll
call
lret
lea
outsb
nop
je
and
fstps
pop
sbb
dec
cmp
mov
add
pop
insb
aad
push
popa
sahf
cmp
data16
icebp
stc
pop
lahf
jnp
jecxz
mov
dec
mov
ljmp
movsb
fmull
sub
sti
mov
lds
inc
iret
ljmp
and
pop
jle
hlt
sub
enter
pop
lahf
popa
out
add
shr
mov
mov
hlt
or
pop
sbb
into
mov
mov
mov
push
cld
popa
mov
xlat
xchg
sbb
fildl
and
stos
aaa
leave
jno
lret
repz
test
mov
mov
jle
pop
and
mov
jnp
xorl
jns
scas
xchg
outsb
adc
ret
sub
lods
push
cmp
cli
int
xor
jg
mov
fadds
or
mov
adc
push
pop
outsb
je
mov
jbe
repnz
sbb
mov
and
dec
aad
jno
mov
mov
ret
add
loop
xchg
dec
loope
sub
add
insb
mov
mov
push
xlat
xor
xchg
cmp
scas
rcr
push
test
jecxz
mov
test
xlat
into
test
scas
jge
clc
jbe
dec
pusha
setg
xor
pop
dec
fdivs
jnp
int3
outsl
bound
int
in
sub
out
jecxz
xor
sbb
mov
mov
push
mov
pop
loop
xlat
lcall
sub
and
call
push
mov
in
pop
jmp
xchg
mov
sbb
sub
cmp
push
test
sub
sub
mov
lods
jle
adc
es
fcoms
lock
arpl
xchg
or
or
lcall
clc
mov
jne,pt
aad
testl
mov
mov
add
lock
xor
cmpsb
shl
pop
stos
inc
xchg
xor
sub
jno
aaa
xor
mov
aas
jle
jmp
stos
es
insb
rolb
or
lea
xchg
sbb
sub
mov
xchg
push
shl
ljmp
or
dec
push
sbb
in
mov
aas
je
xor
ret
cli
cmpsb
cld
nop
xor
gs
sub
iret
nop
fbstp
out
pop
les
idivb
xor
pop
push
jbe
nop
mov
jno
es
jle,pn
ljmp
or
adc
cmp
xchg
or
out
push
out
nop
mov
icebp
nop
mov
imul
jge
daa
jecxz
dec
hlt
or
cmp
adc
sub
movsb
pop
dec
pop
test
iret
sub
jno
lret
push
xchg
fs
sbb
and
pushf
xchg
xorb
cmp
xor
ret
push
and
jmp
xor
enter
xor
stc
test
mov
ja
sbb
mov
jp
and
jns
pop
aaa
or
into
inc
ret
mov
xlat
imul
push
add
jecxz
pop
stos
or
mov
aad
jb
jp
xor
stos
pop
sbb
test
push
cli
clc
or
pop
fcoms
aad
int3
stos
cmp
rcrb
sub
in
push
xchg
js
xchg
add
clc
and
scas
pop
or
rorb
outsl
lret
mov
pop
pop
fsts
jne
lds
mov
xchg
mov
cmp
lcall
shrb
mov
scas
loopne
lods
dec
fimull
push
jg
or
push
xchg
and
cld
jbe
jnp
push
aad
fidivs
and
lock
and
mov
mov
jmp
sbb
xlat
cld
jecxz
inc
xchg
xchg
pop
adc
xor
aaa
popf
push
lret
int
sub
imul
out
push
stc
ss
dec
rorl
and
jb
loope
sbb
xchg
cwtl
jp
adc
in
add
or
jo
into
dec
int
scas
sub
lahf
fisttps
fistps
sub
jb
mov
or
ret
xchg
pop
inc
push
mov
icebp
push
lahf
dec
lock
in
pop
aam
push
push
and
clc
or
popf
scas
cmp
adc
pusha
sub
sti
scas
jae
mov
pop
aaa
decl
mov
pusha
cmp
into
sbb
push
dec
fs
enter
jnp
js
mov
xchg
pop
mov
lods
cltd
add
in
test
xor
lret
jmp
mov
stos
mov
sti
xchg
mov
pop
pushf
push
les
push
and
enter
ret
mov
adc
xor
xbegin
sbb
lahf
and
pop
ds
mov
cmc
daa
sub
scas
int3
sbb
enter
sub
adc
adc
popf
pop
pop
test
jbe
sbb
pop
mov
testb
sbb
cmpsb
movsl
popl
movsl
pushl
and
or
aaa
mov
sahf
xchg
pop
mov
jne
sbb
or
adc
loop
sub
stos
jmp
and
and
ficoml
xor
push
fsubrl
fs
mov
das
dec
mov
mov
lret
pushf
shlb
iret
or
lea
filds
or
rcrb
sub
mov
test
push
stos
pushf
sbb
repz
inc
mov
inc
fwait
adc
into
cli
es
ljmp
cmc
cmp
adc
jbe
mov
stc
test
push
ljmp
adc
pop
test
repnz
scas
movsb
push
xchg
icebp
sti
mov
leave
xchg
arpl
and
insb
jmp
adc
push
imul
sub
or
test
add
add
push
icebp
sub
orb
or
cmpsb
test
jg
int3
xor
cmpsb
inc
cmp
push
cmc
stos
imul
cmp
cld
out
pop
cli
scas
fs
xchg
adcb
mov
mov
lcall
popf
or
fcomip
mov
push
xchg
out
ret
mov
out
xchg
aas
aas
rolb
loop
or
lods
add
mov
push
mov
lahf
dec
aad
dec
fidivrs
loope
imul
add
dec
xor
sbb
loopne
std
push
add
mov
imul
mov
xlat
lret
aad
dec
mov
lods
pop
pop
xor
out
sahf
icebp
and
jne
sub
dec
xor
out
rolb
nop
outsb
loope
xchg
mov
enter
or
or
cmp
adc
pop
xor
scas
in
mov
stos
push
xor
jns
sub
lock
es
dec
fisubrs
jo
pop
inc
jmp
pop
xor
cwtl
fs
fidivs
sahf
and
jle
filds
mov
leave
sub
movsl
aad
dec
jg
add
jnp
jmp
push
sti
jae
cld
cmpsb
push
lahf
mov
es
aam
mov
repz
pop
frstor
adc
inc
subl
mov
push
mov
push
out
adcb
mov
clc
mov
sbb
jae
xchg
sbb
mov
jno
loopne
xchg
adc
dec
popl
jne
mov
lcall
push
ficomps
mov
scas
std
pop
sub
pop
arpl
push
repnz
push
mov
adc
pop
adc
enter
fistpll
into
lret
jno
shlb
pop
or
imul
cltd
test
rolb
lock
rcl
mov
and
scas
push
cmpb
outsb
mov
fldcw
scas
outsb
xchg
gs
mov
dec
fwait
and
dec
addr16
jbe
or
les
sbb
xor
pop
insb
cmpsb
in
testb
xchg
pop
in
jecxz
sbb
mov
mov
inc
test
mov
sub
pop
sbbb
aas
pop
mov
fs
stos
cwtl
aam
sub
aad
sbb
gs
or
sub
je
lods
call
cmp
jbe
mov
pop
cld
mov
pusha
push
fwait
mov
fucomip
pop
push
loopne
add
inc
cmc
push
out
or
dec
popa
fldt
cwtl
arpl
loop
dec
pop
stos
push
out
jbe
pop
sti
adc
orl
inc
fistps
dec
mov
imul
mov
xchg
aam
jecxz
mov
lret
lahf
outsl
cs
lods
ds
pop
loopne
aaa
pusha
stos
and
pusha
cli
adc
ss
repz
jbe
ss
mov
imul
sahf
in
xchg
jg
dec
xchg
scas
pop
cmp
test
mov
icebp
data16
imul
jmp
push
pop
cmc
insl
mov
mov
daa
test
pusha
ss
or
cmp
xchg
adc
cmpsl
pop
push
lret
les
push
inc
out
push
xlat
int3
ret
sar
cmp
fpatan
fs
adc
inc
imul
add
push
mov
push
or
fcmovbe
jmp
mov
ret
sbb
mov
fwait
fwait
sub
aaa
jl
jae
mov
outsl
push
js
dec
stc
repz
stos
rorl
or
pop
mov
mov
jp
or
into
subb
xor
cmpsb
inc
pop
sahf
adc
cmp
mov
adcb
mov
jnp
fadds
bound
sti
push
jmp
iret
adc
int
inc
pop
push
pop
xchg
out
push
mov
dec
add
into
popa
lcall
push
movsl
es
dec
sub
push
mov
in
sbb
cmpsb
xchg
pop
ret
insl
ja
rcr
xchg
nop
daa
and
movsb
mov
xorl
pusha
sub
or
jmp
rol
mov
scas
cld
lds
mov
aad
inc
aas
xchg
in
cld
sub
enter
inc
fcoms
mov
daa
stos
ja
push
mov
and
cmp
sub
mov
les
std
enter
sub
xchg
push
int3
add
adc
neg
push
add
jg
outsb
push
dec
icebp
xchg
xchg
cmp
call
xor
in
jne
adc
push
out
mov
je
sbb
repnz
adc
insb
mov
mov
xor
inc
not
dec
mov
mov
add
pop
sub
in
adc
lock
or
mov
fisubrl
jmp
clc
mov
dec
pusha
mov
pop
iret
inc
xor
cs
mov
dec
jno
or
and
nop
mov
aaa
sub
adc
and
cmp
ret
mov
daa
push
mov
mov
and
ficomps
mov
and
mov
xchg
dec
outsl
mov
das
inc
jne
scas
pop
into
fildl
test
xor
loop
mov
jmp
mov
dec
sbb
ss
lret
push
ds
dec
shl
ret
jl
lret
sub
pop
cmp
mov
mov
xchg
cmc
or
inc
and
cmp
and
mov
fisttpl
and
imul
cli
arpl
push
jge
mov
xchg
xchg
add
adc
mov
xor
mov
push
cmp
and
add
mov
orb
cs
lods
inc
hlt
xorl
divl
push
dec
jb
enter
mov
pop
cmp
sbb
test
test
insl
mov
int3
mov
mov
sahf
enter
jge
cmp
xor
xchg
inc
out
xchg
les
adc
xchg
in
or
add
fdivs
and
dec
dec
push
aaa
out
add
aaa
negl
mov
std
mov
jle
repnz
xchg
lock
sbb
movsl
insb
je
push
mov
clc
test
lods
cmc
daa
xlat
sub
cltd
shll
jns
cwtl
je
xlat
dec
rorb
jge
dec
ss
mov
in
xor
inc
cmpsb
cli
xchg
mov
adc
mov
lods
xchg
loope
xchg
into
push
xchg
cli
fmuls
dec
lcall
mov
mov
push
cmp
in
pop
jae
jg
sbbb
jp
lcall
add
push
mov
ret
mov
lock
xchg
jecxz
mov
scas
stos
fwait
sub
mov
outsl
inc
into
es
dec
xchg
mov
cmp
ja
adc
lea
sbb
addr16
es
and
jmp
xchg
into
sub
outsl
dec
jo
fs
mov
cmp
out
shl
mov
out
js
jmp
cmpsl
push
jl
sbb
jo
lock
ja
stc
dec
sub
lret
jg
xor
out
fimull
xchg
or
push
hlt
push
adc
inc
sarl
pop
xor
inc
dec
mov
dec
push
cmpb
cmpsl
dec
dec
xlat
dec
xlat
adc
scas
pop
call
cmp
out
jae
addr16
or
or
je
cltd
fs
sub
or
int3
iret
jmp
lret
cmp
insb
jg
xchg
mov
inc
sub
cmp
and
mov
inc
lock
xchg
jmp
stos
ret
sbb
sub
je
loop
scas
stos
mov
pop
int3
iret
mov
hlt
incl
ret
dec
bound
sub
fsts
mov
mov
cs
jbe
fbstp
out
stc
ss
rcr
test
and
xchg
pop
mov
lea
add
pop
mov
test
test
mov
push
sub
add
movsb
int
push
mov
cmpb
popa
sub
lods
es
fdivl
mov
cmp
jl
add
outsl
xor
jns
xchg
cmp
ss
pop
scas
push
pop
add
imul
out
dec
xchg
cmp
cltd
sub
sub
add
fbld
stc
iret
mov
xor
icebp
test
push
es
into
out
fwait
mov
sub
aaa
cmp
stos
dec
pop
inc
mov
sarl
mov
lahf
ss
and
imul
jg
add
stos
mov
xor
mov
arpl
inc
outsb
push
es
shrl
popf
ss
cld
aam
and
into
outsl
and
subl
mov
sti
insb
mov
add
in
in
dec
inc
aad
jle
xor
push
sbb
ja
enter
stc
push
add
movsl
imull
in
cwtl
inc
fs
xchg
jo
sub
loop
out
adc
mov
std
xor
inc
loop
sbb
movsb
add
ja
push
sbb
dec
jns
iret
aam
add
insl
add
pop
loope
aam
fdivrl
lds
fisttps
daa
push
lds
xchg
nop
cwtl
cltd
push
cmc
mov
ret
fidivs
fistpll
cld
aaa
sub
mov
nop
cltd
lock
int
pop
popf
test
mov
inc
outsb
stos
dec
lret
mov
les
push
loop
adc
fcoml
fwait
mov
sar
int
rcrb
xor
ret
loop
jl
jmp
and
xor
negb
dec
mov
mov
aaa
sbb
sub
or
call
lahf
out
or
push
stos
push
dec
leave
cmpsl
lahf
add
mov
mov
add
jb
sub
jmp
jle
dec
xchg
insl
sub
ret
xchg
mov
js
out
out
loope
sbb
add
repz
push
push
lret
or
push
nop
mov
mov
pop
jl
call
aam
sub
rcl
loop
mov
sub
or
fdivrl
iret
xor
scas
xchg
mov
push
add
mov
mov
mov
jo
mov
jbe
jl
gs
lods
sarl
mov
rol
or
pop
dec
ret
popf
pop
andb
mov
xchg
or
push
insb
iret
imul
dec
and
stos
aad
out
fldpi
cmpsl
lret
push
dec
xchg
addr16
cld
or
outsl
jg
rcll
int3
jge
push
sub
nop
cmpb
ss
into
pshufw
add
addr16
dec
sbb
xchg
int
pop
or
sbbb
lahf
stc
push
into
or
mov
lret
addb
sub
out
cltd
arpl
pop
mov
mov
repnz
jo
push
ss
popf
pop
cmpsb
aas
popf
jnp
int
mov
sbb
imul
std
pop
stc
jb
add
pop
or
dec
pop
pop
mov
jns
cmp
ja
ljmp
mov
sti
mov
pushf
into
mov
cwtl
fcomi
add
lods
cmp
dec
in
mov
push
and
ja
xor
xrstors
cwtl
pop
adcl
pop
xor
dec
push
dec
test
mov
lods
inc
call
adc
mov
inc
cmc
arpl
call
push
rcl
or
cs
push
movsl
hlt
pop
out
inc
sbbl
xchg
mov
js
push
les
aad
cmp
xchg
ret
movhps
fcmovu
insb
dec
jl
bound
mov
and
loop
cmp
int
movsb
movsb
pop
jnp
mov
inc
cmpsb
ljmp
push
dec
and
loope
test
pop
repz
mov
and
sub
cmp
mov
hlt
sub
cmp
sahf
sub
sbb
pop
xlat
rol
sbb
pop
ljmp
cld
das
xchg
repnz
lret
jae
scas
and
jae
xor
movl
outsl
lods
aas
pop
cmp
out
push
faddl
nop
iret
cld
mov
and
sub
mov
pop
outsl
cld
dec
fs
or
movsb
je
fwait
or
pop
fstl
pop
negl
xchg
roll
and
scas
fcoml
into
adc
adc
dec
mov
fcompl
xchg
std
dec
jp
cmc
or
loope
xor
adc
insl
sub
jns
fisttps
jmp
shl
mov
mov
inc
push
pop
lock
pushf
sub
or
mov
cwtl
rclb
mov
orl
repz
pusha
scas
inc
push
sub
xor
push
leave
mov
scas
repz
add
popf
pop
aad
lea
das
sbb
and
push
adc
orl
shlb
inc
and
loope
jmp
popa
xchg
shll
push
cld
and
sarl
sub
push
adc
jl
pop
stos
adcl
cld
ficoml
imull
fldl
pop
neg
dec
xor
shll
xchg
lret
out
adc
mov
jmp
pusha
psubsw
cmpsl
ret
and
push
and
popa
sub
mov
xchg
outsb
out
shll
mov
or
or
jl
xchg
pushf
aam
adc
ficompl
cwtl
subl
push
shrb
addr16
sub
cs
or
shlb
sub
fnstenv
mov
pop
int
mov
dec
jmp
arpl
add
mov
scas
push
adc
push
int
mov
cs
add
sub
pop
xor
movsl
es
mov
mov
ss
xchg
xor
inc
les
jle
sub
or
xchg
pusha
push
fcoml
inc
lods
xlat
je
inc
rol
mov
xor
xchg
cltd
lret
push
je
scas
push
stc
and
adc
icebp
cmp
xor
mov
pop
aas
add
mov
incl
inc
mov
ss
mov
insb
pop
adc
mov
sahf
xchg
dec
je
dec
inc
add
test
ss
scas
or
test
in
cltd
shl
inc
mull
unpcklps
fwait
arpl
pop
xchg
jnp
cwtl
mov
inc
fadd
xor
cmpsl
mov
cld
test
push
cwtl
xor
dec
pop
clc
ret
fiaddl
addb
in
or
add
sub
xchg
jb
aad
cmpsl
sub
cmp
push
movsl
js
inc
cmpsl
push
bound
push
out
std
push
fldenv
nop
cmpsl
push
sbb
cwtl
iret
xchg
pop
mov
push
lds
jmp
in
adc
mov
ds
out
add
and
jne
xchg
in
add
xor
ljmp
sbbl
mov
mov
daa
dec
test
sub
and
scas
into
mov
push
orl
or
cmp
or
xchg
out
dec
int3
fldcw
pop
scas
lcall
pop
fsubl
sbb
or
jo
data16
push
data16
jmp
cmpsl
imul
and
cwtl
cltd
cmc
mov
inc
mov
sbb
push
adc
xchg
mov
je
jbe
mov
into
orl
rclb
inc
xor
or
xor
xchg
cwtl
fwait
mov
scas
and
pop
sub
stos
in
shll
sahf
rcl
jno
lea
mov
or
xchg
leave
sub
add
mov
lock
dec
sub
adc
mov
add
xorb
inc
out
dec
mov
pop
xlat
or
pop
sub
push
ja
int3
jl
jp
dec
outsb
mov
repz
cld
pop
jo
add
mov
push
addr16
mov
mov
cwtl
lahf
dec
push
cltd
sbb
dec
test
pop
adc
pop
sub
sbb
inc
icebp
sbb
pop
mov
xchg
jbe
pop
adc
outsl
cmp
fsincos
xchg
xchg
loopne
push
mov
in
fistpl
xor
notl
mov
cmp
mov
into
leave
or
ficomps
imul
cwtl
or
aam
adc
adc
mov
adc
adc
jmp
and
sub
pop
outsl
inc
jg
rcll
inc
mov
inc
jmp
cltd
xor
xchg
pushf
add
jns
adc
sub
lods
inc
out
in
xchg
iret
sbb
sub
pop
lods
or
jg
sub
sahf
jbe
test
stc
mov
aas
push
xchg
dec
outsb
jae
adc
jecxz
sub
ds
mov
mov
testl
movsl
inc
clc
jne
cmp
cmp
clc
xchg
roll
inc
mov
mov
imul
sub
leave
das
xchg
add
cmp
dec
push
std
cmpsb
jb
cmp
mov
loope
fs
loop
fdiv
rcrl
fwait
gs
inc
aad
sahf
pop
enter
inc
sarl
stos
mov
jge
outsl
ljmp
into
gs
mov
jle
or
pop
nop
mov
imulb
roll
cli
xchg
pop
aas
int
mov
fstp
leave
dec
add
jbe
nop
shlb
mov
mov
shr
cli
cmpsl
xor
inc
xchg
pushf
cmp
xchg
jp
es
cmp
hlt
xchg
fs
mov
test
cli
fdivl
movsl
daa
jno
lret
push
les
movb
cltd
inc
xchg
xchg
test
mov
out
inc
lret
mov
and
je
loope
mov
mov
insb
rsm
jnp
shlb
test
xchg
je
clc
test
loopne
outsl
mov
test
addr16
jge
out
and
sub
hlt
cmp
push
push
sarb
lret
add
mov
or
xchg
movb
dec
mov
into
xor
pop
xor
inc
cli
lret
mov
jecxz
or
cmc
adc
ror
cld
push
cwtl
test
mov
aam
int3
or
dec
or
cmp
imul
sub
sar
mov
aaa
pop
repnz
mov
insl
fstl
dec
pop
out
push
adc
subb
jecxz
or
je
fld1
push
jo
sbb
out
pop
clc
xor
or
or
scas
lods
mov
loop
inc
adc
mov
push
jae
popa
clc
dec
std
loope
inc
xchg
pop
mov
ficompl
call
inc
bswap
imul
maxps
xor
lret
cmp
inc
xor
sub
int
aas
sub
xchg
push
cmpsl
cld
pop
int3
cmp
mov
ret
je
sub
jns
in
adc
mov
test
sbb
inc
in
fwait
adc
das
add
mov
adc
push
icebp
shrb
outsl
rcr
inc
rcrb
pop
into
jp
shlb
ret
pop
adc
sub
sbb
into
in
mov
xchg
insb
rcrl
dec
and
pop
repz
cmpsl
jae
fs
xchg
pop
xor
lods
add
push
test
test
jae
xor
push
iret
pop
aas
xchg
std
pusha
cli
lods
push
sub
addr16
cmp
cmpsl
jnp
sbb
ds
daa
hlt
int3
shl
or
xor
loopne
dec
mov
xchg
aad
test
add
cmpb
cli
mov
fdivp
push
push
jb
and
das
push
arpl
jecxz
movsl
test
and
sub
ret
mov
adc
jp
jge
xorl
pop
rorb
cld
dec
jle
jbe
or
add
push
fnstcw
add
inc
dec
popf
fbstp
imul
mov
pop
fwait
jbe
fmulp
or
sub
ss
inc
hlt
test
or
test
xorl
sub
shlb
mov
bound
xor
inc
xor
or
mov
sarb
xchg
out
cmc
xchg
inc
imulb
rorb
xlat
sbb
stc
ret
adc
sub
mov
push
add
dec
dec
pop
sub
add
jne
shrl
or
lret
pop
mov
dec
and
addl
jge
inc
add
push
jns
and
leave
repnz
std
scas
push
sbbb
int
cltd
xor
push
mov
nop
push
jbe
and
fcom
jbe
push
lahf
or
xchg
dec
bound
lahf
ret
testl
lods
dec
pop
xchg
mov
dec
xor
test
dec
pusha
iret
fnstcw
loopne
pop
cmp
lock
sub
arpl
sub
fwait
push
arpl
mov
in
jge
inc
fisubrs
ljmp
mov
cmpsl
sti
add
pop
dec
mov
or
test
xlat
sbb
shlb
sbb
sub
out
xchg
fwait
and
out
sahf
leave
ret
daa
cmp
jns
xlat
jp
cmp
push
push
cmp
sbb
in
mov
rol
sbb
outsl
out
jg
aad
add
inc
push
cmpsl
outsl
notb
insl
cmp
pop
loope
fwait
pushf
les
pop
add
lods
sti
mov
push
in
imul
xor
or
jae
mov
jle
data16
mov
inc
sahf
loope
and
mov
jecxz
les
pop
sar
fucom
dec
cmp
out
cmp
xor
pop
int3
jnp
les
jae
cmc
and
icebp
xchg
call
jno
enter
cmp
push
testb
xchg
jp
and
jne
xorb
xchg
push
aad
sub
xchg
xchg
push
int3
lods
xor
xor
push
xlat
scas
add
lret
outsb
mov
bound
mov
aam
add
cmpsl
cmp
dec
shll
lods
mov
lea
push
mov
inc
jg
mov
jl
xor
sti
cltd
std
cltd
bound
mov
pop
loopne
mov
loope
insl
lods
inc
push
xor
jge
sti
nop
fucomp
pop
push
icebp
xchg
sub
stc
insb
leave
stos
mov
or
cmpl
fidivl
jmp
xchg
rcrl
aaa
add
insb
jecxz
sbbl
jecxz
inc
adc
insl
arpl
les
rcrl
aaa
rcll
sub
stos
mov
xchg
or
inc
pop
adc
lahf
adc
mov
jmp
sti
fadd
mov
cltd
jp
mov
out
fs
and
test
xor
leave
mov
inc
call
adc
mov
je
mov
in
mov
hlt
mov
sahf
add
lea
pusha
mov
sahf
push
icebp
clc
dec
enter
cmp
fdivs
jo
xchg
pop
js
loopne
dec
sub
aas
add
dec
cltd
pop
nop
mov
std
out
mov
sbb
into
movsb
push
clc
leave
ss
xchg
cmp
mov
cmpsb
scas
mov
sub
bound
mov
out
or
adcb
push
sbb
push
push
sub
gs
stc
xor
mov
flds
test
fildll
mov
mov
push
cmp
imul
fwait
popa
jno
mov
fwait
outsl
and
sub
cmpl
sbb
dec
mov
cmp
jle
inc
push
xor
lcall
cs
mov
xor
insl
add
sbb
dec
lds
mov
dec
push
mull
pop
aaa
cmp
sub
stc
dec
pop
xlat
xchg
lret
inc
mov
fmulp
push
lods
xor
sub
and
sbb
mov
adc
outsl
adc
xor
fwait
and
xor
mov
outsl
jecxz
sti
jae
adc
push
ffreep
ja
cwtl
js
sbb
enter
dec
jecxz
cmp
shrl
push
jmp
es
jl
rclb
and
lea
shrb
jp
inc
mov
mov
cmc
xor
clc
je
cmpsl
mov
rcrb
loop
out
xor
pop
add
out
arpl
pop
xchg
pop
movsb
mov
xchg
pop
mull
ja
sbb
clc
pop
mov
inc
aaa
adc
xchg
mov
mov
outsl
push
push
insl
cmp
dec
push
lret
dec
shll
jge
sbb
cli
iret
imul
mov
pop
std
dec
pop
mov
cs
inc
out
or
cltd
xchg
mov
cs
sub
enter
mov
jle
pop
and
push
out
in
sti
jmp
fiadds
les
ficoms
xor
add
sub
insl
push
adc
sub
sub
int3
adc
jb
data16
je
dec
jmp
pop
icebp
es
lcall
mov
pop
shlb
mov
ds
or
rcrb
test
addr16
in
jmp
inc
cmpsb
fs
dec
out
inc
mov
xor
adc
pusha
inc
jbe
add
xlat
pop
cs
insl
sbb
inc
mov
sbb
jge
push
push
rcrb
mov
gs
dec
cmp
pop
fwait
jno
inc
mov
push
xchg
lods
into
pop
clc
push
shll
stos
xor
mov
push
lods
fs
inc
pop
cmp
pop
pushf
push
in
sub
rolb
jl
fstps
inc
inc
xchg
fs
push
mov
clc
mov
jae
repz
xchg
test
xchg
mov
clc
inc
mov
popf
or
jo
jnp
es
cmp
jmp
xor
sbb
in
mov
clc
lcall
mov
add
cmp
lahf
add
data16
cltd
stc
out
adc
and
xor
pusha
out
cs
xchg
or
inc
xchg
add
in
movsb
in
push
mov
fcoml
jle
cmpsl
mov
mov
dec
insl
lcall
shll
sbb
hlt
ret
jg
cmp
xor
mov
ret
cmc
xchg
icebp
xor
add
test
lea
enter
jmp
in
xchg
pop
push
ljmp
jp
cld
xlat
mov
jecxz
jns
xchg
loope
pop
lahf
cmc
sahf
xlat
jb
or
fstpl
test
push
xor
mov
push
add
in
and
or
sbbb
lret
adc
mov
loope
mov
jmp
sub
ja
lahf
pop
push
cmp
add
cs
fs
mov
or
add
xor
test
pusha
jbe
lds
xchg
arpl
aaa
jecxz
jge
mov
jne
daa
mov
inc
sarb
jne
inc
adc
mov
xchg
rorl
xchg
sub
cli
rclb
loop
sbb
hlt
pop
sbb
fdivrs
pop
jg
int3
pop
ljmp
icebp
adc
sbb
hlt
cmp
adc
cwtl
icebp
xchg
pop
ret
jnp,pn
fdiv
jno
sti
mov
aas
cmp
push
or
pop
adc
jbe
cmp
ljmp
int3
test
add
popf
call
xlat
jge
js
or
inc
fdiv
addr16
lret
mov
dec
sub
inc
sub
dec
std
call
xchg
sbb
mov
xor
push
sub
inc
push
in
push
add
sub
pop
fmuls
loop
adc
push
imul
cmpsb
sub
shll
mov
mov
icebp
sub
fstl
adc
inc
popf
jp
ret
adc
fisttpll
and
js
fildll
fcoml
in
movsb
je
jecxz
bound
push
xchg
push
pop
sub
mov
jnp
push
shl
out
sbb
adc
adc
push
jns
pop
stos
out
mov
sbb
or
icebp
cmpsl
les
lds
data16
mov
sbb
lods
mov
leave
aaa
jmp
outsb
scas
nop
mov
fwait
adc
sbb
js
sbbb
adc
adc
and
add
lea
sub
cmp
or
fs
sbb
enter
mov
push
xor
mov
cwtl
push
sub
dec
add
fcomps
pop
jo
mov
inc
sub
push
mov
je
cmpb
cs
cmp
fstp
aaa
xchg
mov
mov
cmpl
gs
int3
test
cmp
jae
pop
sbb
loope
fcomps
fidivrs
ds
add
mov
xchg
mov
into
outsl
sbb
push
lret
int3
or
sahf
xchg
lock
sub
fcmove
sbb
push
mov
mov
cs
subl
and
pop
push
jb
movsl
insl
into
lcall
ljmp
pusha
das
sbb
fistpl
incl
sbb
push
bound
jl
mov
and
into
ds
or
xchg
rorb
dec
imul
jl
xlat
cmpsl
cmpsl
ss
jle
sbb
rorb
rcrl
cltd
or
adc
out
inc
mov
jns
xor
xchg
mov
aas
push
scas
cmp
jns
and
lret
lea
xchg
push
mov
mov
adc
data16
mov
fisubrs
or
mov
cmpsl
inc
sbbl
xchg
adc
and
mov
add
xchg
scas
int
sbb
in
add
jecxz
add
dec
daa
sbb
dec
xorw
lods
pop
sbb
cld
ja
sub
arpl
test
mov
inc
mov
ja
sbb
stc
cmp
incl
arpl
mul
and
in
cmpsb
cltd
jae
fsubl
int
ja
mov
pop
in
pop
cmp
cmp
mov
ss
lahf
cmp
fisubs
lret
std
push
imul
jp
popf
into
cmp
add
mov
hlt
ja
or
adc
xor
xor
xor
jo
lods
pop
scas
adc
out
shlb
mov
clc
ror
scas
xor
inc
in
gs
dec
push
int3
loope
nop
mov
movsb
mov
add
aad
and
sub
xchg
jbe
adc
cmp
aas
cmp
adc
out
pop
js
fsubl
imul
add
jp
into
test
sub
mov
je
dec
pop
je
dec
cmp
mov
andb
movsb
or
clc
leave
mov
inc
push
loope
dec
outsb
sbb
push
fmuls
insb
mov
lds
data16
imul
stos
ds
fdivr
pop
mov
repnz
pop
hlt
in
call
pop
and
push
into
mov
cmp
into
mov
lret
mov
fcoms
daa
push
cmc
jne
cli
cmp
or
dec
xor
mov
ret
cmpl
jle
into
lock
pop
xchg
xchg
cmp
xor
movsl
adc
adc
scas
and
pushf
push
out
in
in
stos
call
std
ffree
dec
mov
ret
xor
mov
dec
lret
add
pop
imul
jne
pushf
ss
jecxz,pt
xchg
into
push
mov
xchg
mov
mov
xor
sbb
ja
lret
add
lock
in
das
stc
hlt
lods
lods
daa
roll
test
in
orb
psubusb
outsl
lods
push
cltd
orb
mov
mov
ds
sti
push
loop
push
or
cli
or
xor
mov
dec
popf
cmpsl
mov
cmp
mov
fcmovu
adcl
jae
xchg
sub
aam
mov
inc
clc
sub
fldpi
sub
add
and
std
test
subb
fwait
mov
dec
lods
outsl
xchg
and
sub
leave
repz
pop
xor
addr16
push
pusha
fsubl
into
loope
shr
mov
push
sbb
sub
pop
push
xor
in
pop
leave
repz
xchg
dec
pop
data16
pop
orl
push
ret
xor
cmpb
push
daa
mov
jmp
push
sub
xchg
xor
push
cwtl
stos
adc
push
jo
jmp
cwtl
jno
xchg
and
pushf
int
loopne
call
mov
inc
sub
mov
pop
sarl
andb
or
mov
lahf
cltd
mov
into
cwtl
xor
xchg
pop
in
mov
movsb
sahf
xor
jno
xlat
cmc
stos
mov
push
fs
push
div
jmp
mov
fwait
or
add
inc
pop
dec
subb
jo
jle
jo
xor
push
popa
fidivrl
xchg
mov
add
jg
dec
ljmp
push
lods
mov
and
pop
mov
pusha
and
sbb
add
cltd
bound
movsb
ret
mov
and
pop
shlb
xchg
insl
mov
ret
mov
imul
fisttpll
loope
cmp
popa
add
sarl
in
aaa
ds
jbe
dec
stos
adc
fs
cs
mov
inc
js
xor
mov
and
fstpt
pop
push
aaa
and
sbb
mov
outsb
push
xlat
pop
xchg
or
jmp
jge
mov
push
push
fstp
dec
jl
push
mov
mov
movsl
pop
push
inc
jl
push
dec
sbb
jmp
push
loop
and
mov
das
jns
jnp
cmp
das
pop
jno
pop
jge
dec
pusha
adc
mov
loop
cmp
js
loope
cmp
aaa
test
ja
mov
sti
inc
dec
dec
inc
scas
rcll
movsb
mov
and
pop
and
mov
mov
jp
out
push
inc
and
daa
mov
stc
inc
xor
sbb
or
sub
pop
add
nop
out
in
test
mov
push
and
push
fucom
test
outsl
jecxz
and
fldenv
lock
ds
rorb
and
shll
or
mov
pop
ja
cwtl
dec
cmp
mov
pop
daa
cmp
xor
or
jl
push
pop
movb
add
jmp
xchg
cmc
push
xor
fs
insb
xor
jl
repz
nop
jbe
jo
add
inc
xor
cmp
push
inc
mov
mov
je
jbe
push
push
mov
test
and
addr16
into
jmp
push
mov
add
add
dec
pop
pusha
shl
and
lret
stos
mov
jle,pt
pop
mov
lds
js,pn
sbb
mov
push
mov
mov
inc
jl
fstpt
mov
mov
outsl
sub
ja
dec
fldt
cmpsb
mov
fisubrs
jl
mov
int
lods
out
sahf
pminsw
movsb
mov
imul
sub
mov
dec
cmp
sub
int
mov
sub
push
aas
jge
scas
xchg
push
pop
jbe
add
iret
or
mov
test
jno
fdivrl
out
movsl
fsubp
pop
adc
or
mov
sub
test
ss
mov
stc
add
cmc
pop
adc
fistps
add
inc
push
push
xor
mov
inc
sub
adc
repz
sbb
test
insb
arpl
sbb
mov
jmp
dec
inc
lcall
mov
add
xchg
jmp
mov
xchg
pusha
nop
mov
hlt
pop
mov
dec
push
inc
mov
jnp
sbb
add
scas
pop
fwait
add
inc
cmp
lahf
push
sub
add
divl
cltd
enter
add
pop
inc
push
mov
das
adc
mov
pop
int
js
cmp
addr16
xlat
lods
js
mov
jge
stos
cmp
mov
lods
into
dec
mov
popa
push
or
lock
jmp
lret
aam
sbb
arpl
pop
xchg
sbb
jne
jno
std
loop
dec
jne
test
sbb
call
mov
fdiv
ss
cmpsb
loope
das
jl
dec
push
inc
and
cmp
cwtl
push
xor
xor
jmp
sti
stos
jno
jne
push
sub
xor
push
dec
mov
inc
jge
fildll
test
test
pusha
ret
cmp
fisubrs
xor
cmpsl
jnp
bound
movsb
and
xchg
stos
push
pop
jmp
lcall
pop
loope
lds
fdiv
scas
add
aas
xor
fs
lahf
jecxz
inc
leave
and
scas
adc
push
cmpsl
cmp
lods
fnstsw
mov
push
cmp
test
pop
stos
cmp
pop
xchg
cmpsb
or
pop
mov
lret
test
mov
mov
sub
mov
fs
test
clc
mov
aam
mov
stos
fcomi
inc
mov
daa
push
dec
ds
push
xchg
cmpl
cmc
aas
xchg
fldcw
jns
pushf
dec
lods
stos
neg
and
mov
fbstp
cld
jmp
das
jb
mov
shlb
into
dec
sbb
movsl
ds
mov
stc
dec
mov
ret
xchg
std
nop
aam
adc
cmpsb
notl
sbb
iret
adc
mov
pop
push
pop
ja
lret
mov
inc
mov
or
fwait
pusha
jmp
pusha
enter
pop
cwtl
sbb
sarl
test
and
mov
aas
pop
in
mov
sahf
jne
and
pop
sti
adc
dec
jns
leave
pop
inc
and
and
pop
cmc
dec
mov
push
jae
lock
sbb
ljmp
and
sbb
pop
lea
lret
or
mov
imul
out
sbb
mov
or
in
cli
ret
inc
pop
cmpsl
lods
inc
xor
cwtl
in
add
pop
movsb
loop
inc
pusha
out
xchg
icebp
lods
stos
cmp
insb
cmp
inc
ds
in
add
sub
mov
push
jnp
mov
mov
jg
test
je
push
pop
xchg
neg
dec
or
inc
xchg
pop
and
rcrl
arpl
jb
jne
arpl
imul
pop
in
or
jp
js
jnp
sub
push
insl
add
adc
les
sahf
stos
fidivrs
push
add
sub
cs
bnd
sbb
ss
mov
mov
add
pop
add
adc
sbb
loope
add
test
fdivrp
sarl
mov
sub
pop
sbb
mov
idivb
mov
insb
sbb
and
daa
fistpll
fs
pop
test
pop
sub
sbb
popf
lahf
stc
xor
std
filds
fs
aad
insl
into
jae
mov
mov
push
lret
jp
push
data16
or
aaa
icebp
jl
jnp
xlat
dec
pop
or
mov
sbb
mov
movsl
test
insb
fisttpll
mov
lock
mull
sub
or
pop
push
or
clc
out
faddl
sbb
imul
lds
inc
shll
or
push
repz
aam
sbb
fwait
xchg
insb
movsl
rorl
mov
popa
cmc
sahf
push
cmp
popa
cmp
bnd
cld
xor
sbb
jne
mov
ljmp
xchg
aaa
mov
jnp
out
add
push
pop
lds
test
adcl
xchg
movsb
xor
fs
mov
and
imul
adc
ljmp
cmp
pop
mov
mov
fadd
ja
push
insl
mov
cltd
fiadds
out
xchg
aas
lods
jns
jecxz
and
outsl
push
push
push
movsb
and
jns
add
cmpsl
clc
push
adc
in
lock
fldenv
data16
adc
pop
add
in
andb
repz
pop
lds
dec
lahf
sarl
mov
out
mov
push
add
push
and
xor
imul
cmpsb
cld
xchg
imul
int
add
out
ficoms
sbb
notl
xlat
and
cmp
aam
lea
inc
sarl
outsl
fwait
dec
repz
or
out
insl
push
in
mov
enter
lret
and
mov
lock
sbb
mov
mov
mov
fldenv
fdiv
cwtl
cmp
xchg
sahf
push
adc
and
scas
fs
mov
add
psubsb
push
adc
mov
xchg
add
cmp
push
xchg
inc
xchg
repz
outsb
inc
jo
or
lret
push
cmp
mov
xchg
jp
movsl
push
add
pop
inc
out
insb
push
outsb
cmpl
jb
sbb
lods
int
loope
gs
mov
fs
xchg
cld
fisubrs
push
dec
stos
mov
insl
inc
mov
stc
js
pop
cs
nop
inc
nop
out
mov
cmp
jl
int
pusha
aam
pop
mov
dec
insb
mov
adc
push
mov
add
xchg
arpl
test
push
outsl
fmull
sbbb
push
out
xor
movsb
push
shlb
outsl
pop
adc
ss
lods
xchg
xor
out
jg
cwtl
mov
xor
daa
cli
clc
sbb
gs
push
cmpsl
rcll
push
hlt
push
fldenv
jg
mov
fisubrl
popa
pop
out
cmp
out
xchg
xor
sub
in
dec
push
cmpsl
jmp
aad
add
mov
fs
mov
fdivrl
out
dec
inc
mov
pop
mov
mov
paddsb
mov
frstor
and
and
mov
cwtl
inc
xlat
adc
cmp
mov
mov
dec
in
mov
mov
cltd
cwtl
movhps
outsl
bound
cmp
dec
mov
loope
cmpsb
test
push
jb
mov
fistpl
pop
mov
fisttps
or
mov
js
fldcw
stos
jge
adc
jp
xor
jno
inc
push
js
mov
add
mov
mov
mov
cmp
mov
repz
loope
or
push
cmp
loop
xchg
or
or
push
arpl
adc
popa
popl
nop
imul
enter
push
push
sub
stc
aam
cmpb
ret
cmc
test
ret
jne
cwtl
mov
push
cli
or
notl
mov
cmp
pop
outsb
xor
push
push
mov
imul
std
idivb
ja
push
sbb
arpl
jb
idivl
stos
or
cmp
push
repz
in
sub
lea
or
and
pop
stos
lea
loop
push
outsb
addb
pop
fnstsw
mov
mov
sahf
xlat
adc
xchg
mov
fwait
sbb
sub
pop
fistl
or
lods
add
fistpl
xor
enter
das
in
cli
shlb
pop
sub
xchg
jmp
xchg
sbb
fcoml
cmc
inc
push
sub
int3
cmp
pushf
push
std
cmp
inc
stos
jo
maxps
xchg
pop
outsl
imulb
movsl
jno
mov
dec
dec
xor
mov
dec
mov
push
cld
cwtl
push
std
aad
sarl
inc
add
inc
aam
jne
js
iret
dec
inc
gs
arpl
push
jecxz
les
test
hlt
aaa
pop
jp
cs
add
cli
lods
and
xchg
mov
sub
inc
aad
xor
fistps
pop
adc
mov
sbb
xchg
aaa
xchg
or
inc
add
push
xor
xor
rolb
ds
ret
sar
xchg
mov
lock
jle
add
std
xor
sti
xor
js
bound
cmpl
inc
and
cmp
add
adc
mov
push
xlat
pop
cltd
shlb
int3
shlb
imul
jge
jno
jl
or
mov
xor
popf
nop
dec
mov
in
cwtl
inc
mov
push
movsl
rorb
mov
dec
gs
dec
sbb
lods
fiadds
imul
fwait
cwtl
dec
shl
aas
jl
gs
xchg
hlt
push
fadds
dec
lods
loop
mov
push
sbb
jmp
push
inc
and
jnp
cmp
push
insl
lods
ss
xchg
enter
mov
push
mov
and
mov
aas
mov
jge
mov
mov
test
adc
mov
push
pop
mov
cmp
mov
test
test
or
push
mov
mov
int3
popf
dec
test
jnp,pt
popf
or
loopne
movb
sbb
xlat
pop
out
cmpb
mov
dec
xchg
div
sbb
cli
shlb
xor
js
outsl
push
mov
mov
mov
xor
push
mov
xor
adc
and
push
mov
nop
jl
mov
push
mov
sub
sti
decb
fisttpll
adc
daa
bound
cmpsb
push
pop
roll
lods
mov
das
inc
and
xchg
cmpsl
arpl
shrb
mov
std
setb
dec
xlat
push
mov
loop
or
dec
sbb
fsub
mov
jno
jne
xchg
clc
lcall
fimull
hlt
imul
leave
stc
mov
shrl
pop
dec
push
insb
inc
mull
popa
gs
mov
fcoml
insl
push
loop
call
cmpxchg
mov
arpl
jne
lock
xchg
push
imul
xor
cmp
jb
ret
test
je
add
call
inc
pushf
xchg
sub
cmpsb
sbbb
test
adc
jg
and
pop
mov
pop
movl
jle
jbe
sub
in
push
lret
shll
pop
ret
jg
lcall
ffreep
out
icebp
hlt
ret
icebp
jbe
or
lret
xchg
sbb
sbb
call
push
xchg
dec
cli
jae
out
scas
out
loopne
inc
in
es
or
dec
and
fcomip
shl
adcb
mov
js
sub
notb
shlb
pushf
adc
push
int
xor
out
xchg
ja
mov
popf
cmp
js
and
sub
outsb
in
cmc
xor
jp
cmp
jmp
mov
mov
loopne
xchg
out
lods
int
inc
sbb
and
push
jecxz
xchg
cmp
xchg
dec
mov
pop
fmulp
sbb
pop
stos
scas
jb
jo
and
or
cmp
or
sub
int3
cmp
xchg
sbb
das
mov
push
rol
add
insl
js
sub
push
mov
push
jge
aad
pop
cli
xor
push
out
daa
test
mov
dec
stc
push
dec
mull
jno
inc
icebp
jge
movsb
jecxz
pushf
test
xchg
mov
push
xchg
jbe
insb
outsl
inc
inc
push
insl
cmpsb
jbe
in
adcl
div
push
adc
cwtl
in
fiaddl
sub
pop
xor
test
mov
xchg
add
sub
call
mov
shll
mov
dec
cli
add
push
xor
aad
pop
sbb
cmc
xchg
cld
xchg
addr16
mov
jns
pusha
add
mov
icebp
aad
and
sbb
out
lods
pop
jmp
mov
push
ret
and
mov
decb
mov
inc
sbb
cs
xor
movhps
inc
jle
test
int
dec
cmp
add
jns
inc
jns
iret
push
and
mov
fdivrs
xchg
lods
add
cltd
jp
xchg
test
popf
dec
sub
lea
pop
icebp
stos
cltd
loop
fnstcw
xor
sbb
or
out
pop
xor
js
push
ret
push
scas
imul
jp
jo
fisubrs
and
adc
stos
mov
sahf
mov
pop
pop
popf
aam
push
nop
inc
shl
popf
dec
add
fs
cmp
mov
xorb
mov
int3
pusha
fwait
push
aad
fs
fadd
loop
loopne
aad
lahf
or
loope
sarb
jg
xor
add
outsl
jg
push
andb
mov
pop
or
inc
pop
dec
mov
test
frstor
shll
mov
out
fmuls
cltd
imul
jne
int
scas
lret
xlat
dec
mov
dec
in
adc
jb
mov
mov
push
jnp
ret
mov
dec
dec
adcb
sbb
mov
int3
outsb
lock
add
push
movsb
jo
xchg
aaa
arpl
adc
loope
cmc
jge
mov
fdivrl
ficoms
inc
dec
lods
adc
fsubr
sti
into
mov
popa
cmpsl
xorb
adc
mov
push
or
sbb
and
scas
xchg
dec
in
add
rcrl
in
fwait
lds
bound
es
mov
cmp
sbb
mov
xor
cmp
adc
fcmovbe
pop
popf
push
daa
nop
xor
xchg
lock
mov
adc
lods
decl
enter
adc
jne
aam
jb
les
mov
jp
sbb
addr16
sbb
inc
bound
lods
popa
aaa
scas
pop
mov
shrl
cltd
call
ja
ret
ffree
mov
push
dec
rorl
mov
data16
mov
push
mov
outsl
xlat
jne
scas
mov
push
jns
fmul
mulb
je
jge
and
dec
scas
cmpsb
push
mov
jns
xor
icebp
inc
cli
push
mov
enter
jg
test
sub
dec
gs
clc
mov
cmp
dec
addr16
dec
push
out
jge,pt
cltd
iret
pop
or
mov
sub
rcll
stos
fcompp
inc
and
xor
adc
es
mov
jae
jl
xor
adc
dec
push
fidivrs
test
or
int
inc
testb
xor
stos
adc
or
and
push
stos
subb
push
sbb
mov
xchg
std
notl
sub
jnp
add
les
test
mov
xor
daa
into
sahf
xor
mov
inc
push
sarb
fcoms
sub
sbb
push
pop
aad
test
iret
push
jg
or
repnz
push
xor
mov
jne
sbb
inc
lock
jmp
inc
out
fcoms
cs
scas
call
adc
daa
xchg
hlt
mov
adc
mov
in
sub
in
sub
inc
jae
iret
push
jmp
jbe
test
dec
fucom
mov
xor
lock
push
sub
pushf
inc
jno
jg
mov
push
xchg
jmp
shrb
in
in
hlt
or
inc
int
outsb
es
xchg
xor
or
int
push
mov
lock
mov
mov
inc
xchg
push
pop
into
cltd
lahf
mov
mov
lods
lea
dec
pop
idivl
ror
pop
in
dec
xor
push
sti
scas
cmp
call
cmp
cmp
add
sbb
pop
mov
outsb
imul
xchg
dec
les
repz
inc
insb
data16
jo
faddl
rcl
or
popf
jmp
in
dec
fiaddl
shll
cmpsl
cmp
lahf
inc
jecxz
cli
or
and
dec
andl
in
adc
gs
pop
decl
dec
scas
mov
daa
cmpsb
sub
sub
or
push
shrb
lret
xchg
arpl
cmp
push
test
loope
adc
rcrb
in
loop
pop
popf
inc
sub
jg
sbb
add
xor
and
push
cli
imul
adc
mov
lret
ret
out
sbb
dec
into
mov
mov
add
negl
push
addr16
adc
dec
sbb
test
xchg
push
sub
mov
dec
test
leave
clc
mov
repz
out
adcl
and
mov
rcll
mov
add
add
mov
inc
mov
pop
mov
orb
sbb
sub
ljmp
xchg
inc
or
adc
cmp
repz
sub
sbb
dec
test
jge
stos
addl
adc
pop
outsl
aam
cli
mov
stos
loop
arpl
cld
clc
add
mov
mov
in
in
ljmp
aad
jl
das
dec
inc
pop
xchg
cmp
bswap
pop
jb
mov
or
inc
mov
notl
or
jne
js
fisubs
stc
sahf
iret
mov
dec
adc
clc
or
incb
mov
push
push
pusha
xchg
sub
dec
push
adc
mov
sti
sbb
xchg
jbe
ljmp
jns
or
scas
mov
test
inc
add
push
fidivs
xchg
jle
fcomip
inc
movsb
fdivr
jecxz
fdivrl
xor
pop
sahf
and
cld
test
push
pusha
sahf
movsl
xor
jae
jae
inc
imull
cmp
dec
test
roll
mov
jns
shrb
jmp
sub
stos
out
mov
test
and
add
movsl
lahf
fdivrs
inc
data16
out
lahf
xchg
icebp
inc
mov
push
insb
inc
mov
adc
sub
loopne
pop
push
xchg
push
mov
loopne
pop
sbb
enter
cmp
inc
arpl
mov
repz
mov
push
inc
pop
test
lods
jne
xchg
sbb
push
sub
insl
jno
dec
adcl
jecxz
pop
add
sbb
cld
pop
pop
ljmp
push
hlt
aas
out
sbb
notl
stos
pop
push
pop
in
ja
push
push
not
out
stc
add
mov
push
mov
pop
inc
jmp
cwtl
bound
in
mov
loope
std
push
xor
inc
lahf
rcrl
pop
lods
add
fstpt
je
xchg
adc
leave
inc
insb
xchg
pop
imulb
dec
shl
mov
js
and
mov
jmp
mov
je
call
aaa
repz
cmpsb
aas
xchg
fnstsw
dec
test
inc
int3
mov
and
sub
inc
data16
pop
jb
in
cmp
dec
lock
and
mov
push
arpl
jmp
test
or
xchg
int
push
je
repnz
sbb
js
ror
or
or
mov
test
pop
and
loop
xchg
scas
aam
mov
mov
sbb
push
das
push
pushf
rcl
call
adc
or
push
sub
std
int
jae
lods
test
dec
xchg
test
nop
mov
pushf
push
les
test
adc
pushf
and
js
xchg
insb
inc
in
sahf
lcall
les
cltd
dec
daa
mov
movsl
mov
cmc
pop
push
cmp
imul
cmp
jle
orl
push
mov
insb
adc
loop
push
test
dec
cmp
ret
xor
inc
in
hlt
xor
loope
cmp
call
sbb
lods
mov
inc
in
aaa
push
mov
sbb
jecxz
mov
push
push
xor
stos
fwait
lahf
mov
sbb
ror
cmp
mov
loopne
inc
in
jmp
loopne
ret
pop
mul
sbb
dec
dec
push
scas
dec
iret
mov
mov
cli
out
or
dec
pop
pop
enter
mov
xlat
in
bound
int
and
xor
inc
je
jno
repz
arpl
fnsave
mov
movsb
out
inc
lcall
jecxz
stc
nop
add
sbbl
sbb
mov
sbb
jbe
dec
dec
fidivl
loopne
xorb
shrb
fimuls
popf
sub
mov
scas
imul
mov
in
xchg
sub
dec
loop
xchg
sub
sahf
or
jecxz
pop
add
mov
aam
inc
stos
es
fists
pop
nop
lret
jp
xchg
adc
loop
ret
jo
popf
in
mov
ljmp
add
cmpsl
or
out
xor
insl
movsl
adc
scas
insl
inc
in
push
adc
and
push
mov
dec
mov
sbb
xchg
les
sub
pop
std
test
mov
andb
pushl
jecxz
sub
mov
xchg
stos
dec
push
test
push
rcrb
out
add
rcrl
bnd
ss
stos
lcall
inc
or
adc
push
jl
mov
data16
clc
sbb
fcmovne
in
stc
xor
test
and
loope
lea
xor
pop
stos
jecxz
ds
pusha
adc
lcall
pop
sar
push
lret
cmpsl
jo
js
xchg
out
sub
mov
adc
inc
gs
stos
dec
cs
inc
dec
push
push
jg
nop
ret
inc
test
clc
and
fsubl
pop
shrb
mov
push
xor
into
add
fxch
stos
outsl
out
mov
mov
nop
fstl
fists
inc
lea
inc
loopne
jb
popf
mov
adcb
jle
jns
cmp
subl
int3
cmp
fisttps
loop
insl
mov
xor
pushf
dec
sub
pop
scas
in
loop
jmp
dec
out
test
mov
lock
add
mov
push
leave
clc
bound
add
xor
dec
ret
push
in
in
jp
stc
sbb
andb
shrl
adc
mov
shll
mov
jae
ljmp
push
inc
icebp
rclb
xchg
mov
cmp
push
or
nop
clc
in
enter
popf
popf
out
aad
push
insb
mov
shll
sbb
aad
adc
lock
add
pop
call
cmpsb
pushf
popa
ret
pop
mov
pop
mov
xchg
mov
bound
mov
lock
pop
les
adcb
jbe
sub
lods
dec
in
ds
repnz
xor
pop
or
das
push
jnp
inc
cs
scas
mov
push
stc
loope
fbstp
jg
out
stc
adc
add
rcrl
fimuls
mov
les
sub
das
xchg
pop
js
mov
maskmovq
testl
negb
cmp
xchg
dec
or
cmp
or
jmp
mov
jae
cmp
inc
mov
movsl
mov
sahf
mov
adc
jle
sub
insb
rcrb
mov
sti
notb
in
mov
das
inc
imul
sub
add
push
lcall
inc
fstpt
mov
jle
xor
dec
xchg
adc
test
adc
adc
xchg
mov
std
adc
sbbl
out
push
rclb
dec
xchg
jg
jbe
dec
int
pop
movsl
cmp
mov
lds
pop
xchg
mov
lret
mov
in
aaa
shl
sbb
mov
sti
stc
cltd
mov
in
sti
leave
jecxz
mov
imul
mov
xor
fdivs
add
in
fsts
cmp
mov
inc
sub
popl
pop
jae
out
scas
sub
sbbb
mov
and
aam
leave
mov
xchg
lcall
int
and
fists
fistpl
push
pop
mov
mov
dec
sarb
jl
fcmovbe
pop
rorl
pusha
test
ja
push
cmp
cs
sbb
lret
das
cmp
jne
xchg
xor
jle
jae
or
xor
jno
pop
int
call
cli
jle
and
mov
aad
mov
int3
jle
xor
cmp
das
push
inc
stc
mov
outsl
aam
aas
mov
xor
push
mov
jmp
filds
clc
cmpsb
mov
in
ja
scas
cmpsb
cmp
mov
sti
or
pop
lods
mov
imul
in
push
in
rolb
push
test
sbb
aad
sbb
push
mov
inc
inc
push
loopne
out
dec
mov
addr16
or
ss
inc
call
jb
orl
pusha
jge
push
in
es
pop
je
mov
fistpl
adc
aaa
in
inc
xchg
pop
jnp
push
mov
sbb
faddl
jae
fisttps
inc
push
imul
cld
mov
mov
xor
inc
rol
clc
or
sub
inc
and
mov
sbb
popl
lock
mov
xchg
and
test
fcmovbe
inc
mov
gs
or
push
or
and
dec
test
stc
jmp
xchg
enter
or
notl
cwtl
dec
or
inc
push
xor
fdivs
int3
xor
add
xchg
dec
out
mov
inc
cmp
stos
inc
cmc
mov
loopne
mov
in
cli
jmp
testl
in
std
add
xor
mov
dec
or
and
dec
sbb
faddl
adc
dec
add
lcall
hlt
mov
cmp
inc
dec
xchg
pop
fsub
push
cmpsl
emms
xor
ljmp
adc
cld
inc
fldt
and
xor
test
push
mov
mov
pop
xor
add
sub
test
pop
inc
aas
mov
rcr
call
xchg
decl
rcrl
push
das
xchg
fmuls
outsl
out
cmp
sub
mov
mov
lock
xor
outsb
clc
inc
stos
into
stos
js
daa
arpl
jne
mov
or
adc
push
cwtl
cltd
test
sbb
xchg
pop
int3
rcrb
mov
repnz
mov
nop
movsl
add
mulb
movsl
jg
out
mov
lret
mov
jae
fwait
loop
test
pop
cmp
add
loopne
push
xor
push
das
fdivp
mov
mov
or
push
mov
gs
sub
add
test
rclb
jecxz
stos
ljmp
fldcw
lods
sub
frstor
out
push
frstor
repz
imul
movsl
sbb
divl
pushf
enter
inc
xchg
shll
in
das
xor
sbb
xor
fs
mov
mov
mov
push
pushf
sbb
pop
fbstp
rcr
pop
mov
imul
and
ss
rol
mov
push
mov
out
pop
adc
jge
sub
mov
adc
adc
pop
jecxz
aas
pop
xor
test
mov
fmulp
scas
pop
pop
aam
mov
mov
pop
data16
pop
add
insb
daa
sub
pop
test
xchg
out
cmp
dec
insb
cmp
outsl
neg
bound
mov
jl
in
insl
addr16
jnp
xor
mov
add
pop
cld
push
insl
cmp
stc
les
adc
rol
cltd
xchg
lock
sub
popa
cli
mov
out
lret
dec
jmp
ja
dec
test
lods
adc
ss
xchg
shrb
push
sahf
mov
push
mov
push
dec
jmp
mov
jnp
outsl
scas
test
je
pusha
fdiv
cli
sub
repnz
push
pop
push
xlat
adc
inc
dec
fcoms
repz
adc
jle
mov
cmp
push
mov
mov
cmp
or
inc
arpl
cmp
mov
aam
xlat
test
push
xchg
push
inc
ds
mov
or
sbb
pushf
out
mov
hlt
dec
sti
xchg
or
xor
test
incl
pop
dec
ss
push
add
notl
add
adc
std
sbb
shl
repz
shrb
mov
rcrb
fwait
mov
ja
or
inc
inc
mov
sbb
inc
ss
out
and
fwait
adc
mov
xchg
mov
cmpb
pop
aad
or
jmp
aas
add
mov
sarl
cmc
jp
aas
lds
xor
ss
sub
fcmovb
or
movb
or
repz
imull
aaa
push
adc
push
jge
js
enter
ficompl
in
dec
xor
mov
mov
sti
loope
int
mov
cld
lods
sub
xchg
cmp
ret
clc
push
cmp
jmp
andl
add
adc
mov
idivb
stc
out
scas
je
sbb
xchg
dec
fdivl
imul
jmp
sarl
inc
cmc
lret
mov
into
adc
cmpsb
pop
xor
dec
add
push
fs
sub
dec
lds
mov
xor
and
and
jb
nop
mov
push
jle
loop
leave
testl
test
dec
leave
push
ficompl
pop
mov
xor
push
mov
jecxz
lock
das
cli
and
jmp
inc
jg
fwait
sahf
bound
loopne
pop
and
test
imul
popf
ret
inc
lret
repz
daa
sbb
test
cwtl
sub
fcmovnu
add
pushf
cmp
in
xor
imulb
insl
push
dec
cmp
or
mov
jb
cmp
xor
adc
or
cmpsl
or
aas
jae
movsl
pop
je
shll
adc
daa
ret
mov
push
mov
fldt
in
arpl
mov
or
aas
mov
adcl
inc
pop
sub
xchg
xor
xchg
push
push
or
add
and
push
pop
cltd
ss
jbe
daa
scas
nop
jmp
pop
mov
sbb
push
cmp
push
mov
xchg
inc
cmp
loop
xchg
movsb
repnz
push
and
push
rclb
gs
pop
xchg
jns
xor
js
scas
jb
xor
in
arpl
arpl
xor
push
sub
cmc
aaa
mov
mov
cwtl
cwtl
stc
loope
adc
shr
iret
sahf
addr16
jmp
add
orl
test
out
mov
aad
xchg
adcb
adc
jg
addr16
ret
push
psllq
subl
sub
fsubs
inc
xor
and
mov
cmp
or
mov
sbb
mov
push
mov
std
jg
outsl
pop
lahf
loop
fcmovne
and
stos
mov
or
push
cmpsb
cmc
stos
faddl
stos
std
cmpsl
fldt
fwait
cmp
cli
lock
fisubs
mov
ljmp
pop
mov
int3
pop
lret
stc
dec
xor
in
insl
mov
pop
invd
scas
adc
lds
in
bound
mov
cmp
sub
inc
addr16
jbe
push
mov
mov
jg
lcall
mov
lds
in
jp
and
pop
jecxz
xor
dec
dec
test
shl
cmp
and
shl
mov
jecxz
jmp
and
das
xor
and
inc
out
das
and
hlt
cmp
xchg
inc
xchg
out
add
cmove
add
jnp
ljmp
xor
icebp
add
loope
out
dec
sbb
or
mov
adc
pop
xchg
dec
mov
lret
xor
and
pop
sub
lahf
dec
mov
add
movsl
xchg
xor
push
xchg
dec
insb
pop
or
lret
imul
cmpsl
push
lcall
clc
andb
out
jne
dec
xchg
dec
es
xchg
cmp
insb
inc
cmpsl
and
mov
test
pop
or
mov
dec
sar
mov
pusha
les
cli
dec
push
fcmove
rcrb
mov
ja
mov
std
rorl
into
rolb
xchg
or
pop
sub
cs
sahf
mov
cwtl
xchg
xchg
jnp
pop
jg
pop
jg
aas
rcll
and
sahf
xchg
mov
bound
sub
sub
lods
sub
mov
add
or
hlt
jb
popa
stc
inc
iret
int3
inc
into
push
jns
push
mov
xchg
loopne
pop
push
xor
loop
cmp
sti
inc
pop
add
jmp
mov
pop
sbb
dec
ret
inc
orl
loopne
gs
jp
xor
dec
std
fwait
cmpsb
shll
push
shl
test
sub
popa
out
mov
xor
imul
mov
pushf
rcrb
in
cs
fisttps
mov
jo
inc
dec
test
dec
fwait
sub
mov
int3
pop
jns
fmuls
in
popa
sbb
sub
and
xor
jmp
test
iret
aaa
or
mov
jbe,pt
mov
aas
mov
loopne
pop
sub
cmp
mov
fxch
call
mov
in
imul
dec
xor
pop
sub
repnz
pop
lcall
ret
js
mov
cli
add
xchg
fnstcw
add
add
and
cmpsb
shll
add
pop
std
testl
adc
adcl
das
and
pop
cpuid
pop
xchg
lret
jle
out
aaa
pop
fldenv
xlat
fstpl
outsl
pop
mov
adc
mov
xor
shl
int
push
add
and
push
inc
js
test
xchg
lods
and
mov
in
jae
aam
mov
sub
mov
push
pop
das
lock
and
push
inc
ficoms
and
insl
add
mov
xchg
lcall
call
dec
xor
fistl
cld
mov
add
cmc
add
inc
iret
xchg
leave
data16
xlat
popl
in
pop
sbb
pop
ret
xchg
mov
or
stc
xor
sbb
mov
mov
add
jo
mov
subl
rcrl
sub
sub
repz
push
repz
jmp
and
or
add
ds
fcomps
jp
test
sar
setge
pop
jmp
pop
insb
mov
adc
ret
mov
and
adc
xor
xchg
sbb
sbb
inc
sub
js
decl
cld
inc
and
sbb
fmull
mov
cmp
bound
ljmp
pop
mov
dec
sub
daa
out
mov
pop
sahf
jnp
cli
mov
mov
hlt
int
sarl
add
dec
lock
loopne
adc
loop
in
push
push
fucom
fwait
sub
pop
rcl
and
lea
and
sbb
dec
pop
sahf
sahf
stos
test
pusha
fisttpll
add
jo
dec
pop
sarb
into
call
mov
jmp
sbb
fs
dec
out
mov
push
repz
aas
js
cmpl
push
or
dec
std
xor
xor
mov
f2xm1
imul
xor
dec
push
ret
dec
mov
data16
mov
jp
xchg
insb
sub
add
cmp
cmp
mov
push
imul
mov
cmp
fwait
hlt
cmp
jns
or
shl
dec
sti
pusha
jg
sbb
adc
adc
inc
sub
insl
mov
pop
loope
xor
mov
xchg
lea
test
xor
sbb
cld
ss
push
popf
push
inc
push
mov
pop
aas
int3
mov
lret
lcall
adc
lret
jbe
cmp
jmp
add
xlat
out
push
or
or
sahf
lahf
and
push
xchg
int3
sti
daa
or
add
xchg
mov
sti
sub
mov
mov
fdivl
in
cmpsl
nop
test
ret
test
call
test
icebp
sbbl
xlat
xchg
xchg
or
lea
push
add
jg
xchg
mov
sbb
inc
aaa
lahf
outsl
mov
aas
jecxz
ljmp
mov
loop
mov
ds
add
and
lock
pushf
push
cwtl
into
jp
jp
add
mov
add
repnz
cli
mov
pop
push
rep
mov
adc
and
xor
fwait
mov
jb
add
or
hlt
mov
fsubs
ljmp
bound
adc
stos
stos
sub
js
into
mov
mov
test
sbb
xor
adc
lcall
pop
jo
push
pop
in
add
mov
arpl
add
sub
sbb
xchg
mov
push
dec
les
push
movsb
shl
loopne
jge
dec
imul
sbb
insb
inc
hlt
int3
or
stos
xchg
enter
inc
inc
dec
xor
push
jmp
jp
pop
inc
insl
fbld
xchg
mov
out
cmp
mov
sbb
adc
addr16
pop
mov
sub
or
out
shll
lret
mov
sbb
sti
adc
and
cltd
xchg
test
sbb
aas
jae,pn
cmp
jae
repz
rcr
jbe
cmp
out
cmp
mov
add
rcrb
js
in
mov
inc
jbe
je
mov
add
loope
mov
xor
xor
sar
mov
mov
jns
fst
push
add
sbb
test
jbe
repnz
jae
mov
fisubrs
imul
mov
fistpll
cmp
dec
repz
hlt
in
jb
leave
cmp
dec
or
mov
xor
sub
leave
cmp
sahf
mov
sbb
and
cmp
leave
dec
insl
sarb
mov
test
stc
outsb
xor
int
mov
fldl
mov
xlat
sti
pop
add
iret
sub
pop
es
ljmp
imul
aaa
jmp
mov
mov
jle
repnz
push
mov
repz
pop
aaa
jg
inc
inc
jge
mov
jns
cmp
push
ret
stc
repnz
pop
outsl
add
out
inc
stos
dec
mov
mov
out
arpl
lret
outsl
repnz
jo
aas
inc
andl
mov
cmpsl
pop
add
dec
aaa
or
xor
xchg
xchg
sbb
in
push
insb
std
sarb
or
sti
xchg
cmpsl
jg
mov
jo
xor
mov
cs
pop
aam
lods
mov
test
cmp
and
in
sbb
leave
pop
inc
std
repz
mov
push
pushf
movsl
clc
and
mov
loope
addb
add
pop
or
mov
nop
lods
ss
mov
sbb
lret
inc
inc
xor
jns
iret
jns
pop
push
mov
adc
sbb
mov
push
lea
push
mov
dec
sbb
lods
test
pop
imul
cmp
cs
and
aas
scas
enter
movsb
sub
addr16
les
xor
mov
xlat
cs
mov
cltd
pop
ja
loopne
js,pn
push
xchg
mov
icebp
jle
inc
sbb
nop
mov
out
sbb
jbe
sub
mov
add
adc
daa
sub
dec
or
andnps
repnz
cmp
lods
imul
mov
cltd
leave
mov
push
stos
jl
leave
sbb
and
aaa
pusha
test
sub
lret
adc
mov
inc
mov
pop
jl
jecxz
xchg
jecxz
push
inc
cs
jns
cmc
sub
dec
xchg
insb
jge
mov
into
stos
jle
cli
in
insl
pop
dec
out
shl
divb
dec
mov
push
in
mov
mov
push
adc
or
mov
loop
or
xchg
or
sbb
push
sarl
mov
in
sbb
ret
imull
pop
cmpsb
aad
rcl
test
test
push
pop
aaa
push
daa
lahf
shll
xchg
mov
leave
sbb
xchg
pop
mov
sbbb
cli
out
xchg
nop
adc
repz
movb
daa
popl
aad
cli
xchg
mov
pop
nop
inc
fisubl
repz
or
jge
mov
push
dec
mov
andl
sarb
mov
lea
mov
xchg
das
cmp
loop
jg
mov
fwait
pop
insl
insl
aas
pop
in
mov
nop
shrl
xchg
out
dec
arpl
test
push
mov
dec
cmp
fists
inc
in
add
movsb
test
popw
ret
stc
adc
out
sub
pop
aas
push
movsb
into
fdiv
push
jmp
dec
add
xor
out
dec
ja
sbb
cmpsl
mov
shrb
inc
movsl
sub
mov
mov
bound
gs
jmp
call
leave
pop
sbb
test
fs
push
sub
or
adcb
xchg
lea
or
aad
xor
pop
sub
push
add
gs
addr16
mov
int3
push
pop
int3
adc
and
cld
dec
xor
scas
pop
pop
mov
std
in
add
mov
xor
enter
and
cmp
or
or
inc
and
or
mov
jb
mov
jne
xor
jae
or
jl
or
sbb
add
pop
js
in
mov
adc
adc
jbe
sti
in
mov
fcom
cmp
sbb
xchg
in
push
push
cmc
xchg
ds
pusha
mov
fnstenv
sti
test
and
mov
and
inc
subb
test
jp
push
push
push
in
dec
adc
ficomps
mov
or
nop
mov
nop
add
adc
pop
data16
ja
mov
jle
and
int
ds
ffreep
pop
repnz
mov
ljmp
aam
push
outsl
lock
jae
clc
xchg
adc
sub
cltd
in
adc
jge
aaa
jns
pop
pop
mov
lret
cli
pop
imul
push
sar
xchg
out
pop
mov
jns
and
imul
or
cmpsl
and
add
push
cmp
mov
xchg
cld
stos
mov
adc
cmp
xchg
loope
jae
jle
outsb
imul
cmpsb
test
popa
push
push
mov
fnstenv
popa
push
out
push
push
adcl
test
sbb
sbbb
mov
mov
jno
mov
xor
icebp
or
stos
dec
sbb
lret
mov
sub
std
imul
or
pusha
imul
dec
cmpsb
push
and
adc
xor
mov
inc
mov
aaa
xchg
mov
jg
imul
test
sub
fwait
adc
mov
push
in
test
cmpsl
sub
add
pop
pop
mov
jo
das
lret
push
push
jg
lcall
gs
inc
cmp
adc
add
in
lods
xchg
mov
push
or
push
cmp
cmp
cmc
push
sub
jae
jno
sub
or
jns
xlat
xlat
nop
jmp
fisttps
cmpsl
std
dec
push
aad
inc
hlt
sub
stos
pop
ja
mov
cmc
scas
mov
xchg
movsl
daa
cmp
or
xchg
cs
push
lret
sti
aad
shll
sub
call
int
add
pop
xor
repz
aas
pop
bound
int3
mov
cmp
sub
stc
mov
cmpl
push
sbb
addr16
outsl
sti
jbe
and
leave
pop
imul
xchg
sbb
iret
addr16
dec
mov
sahf
pop
cmpsl
inc
sti
lret
repnz
inc
mov
out
in
andl
and
ljmp
js
dec
pop
mov
dec
sbb
inc
rcrb
fwait
add
dec
push
shl
aad
and
and
dec
push
stc
decb
jp
mov
mov
and
out
scas
lahf
std
hlt
lret
inc
add
stc
xchg
or
ret
push
jns,pt
scas
inc
mov
ds
lahf
clc
and
push
shrb
and
faddl
adc
clc
test
jns
popa
out
lret
in
adc
andb
or
lret
pop
add
les
sti
add
in
add
adc
pusha
out
push
dec
fdivrp
cmc
jmp
pop
pop
add
mov
fcoml
sbb
mov
sub
popa
or
rcrb
cmp
add
cli
daa
xlat
mov
or
leave
pop
mov
mov
sub
mov
dec
rolb
jl
xchg
pop
fstl
aad
jns
ljmp
test
test
sub
setl
mov
mov
pop
push
push
sub
sbb
inc
les
add
arpl
pop
pop
jmp
in
cmp
loope
xor
aaa
sbbb
pop
test
into
sarb
jo
repz
idivb
lret
push
sbb
add
or
lcall
xchg
cs
lock
xchg
xor
cmc
sbb
test
mov
xchg
jecxz
out
idiv
adc
ret
lds
fistl
imul
test
or
jbe
movsl
and
jns
nop
mov
aaa
stos
outsb
xor
rorl
mov
adc
inc
inc
hlt
lea
lahf
pop
mov
dec
imul
ds
sub
sub
cmp
sbb
jecxz
push
ret
jo
pop
arpl
mov
test
add
cli
into
lock
mov
add
rol
int
mov
add
int3
sub
sbb
mov
cli
cmp
inc
pop
cmp
jns
popa
lcall
test
cmp
xchg
bnd
insb
sub
and
or
or
inc
cmp
sbb
inc
test
sbb
cmp
fisubl
sub
inc
mov
loopne
pop
pop
mov
insb
fildll
dec
and
or
dec
popf
jecxz
mov
sub
in
and
in
cs
sbb
mov
outsb
popa
enter
fisttps
rorb
pushf
mov
nop
imul
pusha
or
adc
in
cmpl
loop
aaa
sub
mov
mov
push
fs
sti
test
in
sahf
mov
adc
mov
jb
jp
sub
sti
ror
enter
mov
mov
out
mov
aaa
clc
je
cmp
fildl
mov
push
int3
mov
shlb
jl
clc
mov
loope
jb
xor
outsb
insb
dec
cmp
je
inc
push
sub
dec
add
jne
out
xchg
mov
cmc
movsl
lock
aam
lcall
inc
fwait
mov
add
movsl
ja
jae
mov
imul
test
xor
adc
aas
and
aas
add
cmpsl
pop
dec
mov
scas
adc
jg
fs
loope
cmp
arpl
rol
stc
xor
add
sbb
leave
into
repnz
pop
cli
data16
adc
mov
ja
mov
jae
mov
shll
arpl
sbb
stos
jne
fcmovbe
stc
insb
pop
lcall
pop
dec
xchg
addb
movsl
pop
mov
mov
sahf
sbb
inc
push
and
mov
mov
scas
push
cmp
add
mov
aad
fs
call
and
pop
lods
dec
in
sti
xor
scas
mov
add
jns
aaa
pop
sub
stc
out
inc
ret
stc
add
push
icebp
pop
mov
xor
cmp
jo
push
addr16
repz
incl
xlat
dec
imul
call
loopne
xchg
shrl
addr16
cmc
cli
fcmovnbe
repnz
push
shl
in
sbb
sub
jb
inc
jle
and
cwtl
iret
sub
mov
pusha
and
dec
mov
ss
push
repz
ret
andl
mov
rcl
jmp
lds
inc
jmp
leave
dec
jbe
sahf
loopne
pusha
cmpl
mov
xchg
dec
pop
xchg
movsb
paddusb
mov
shr
sbb
xchg
jp
shrb
lahf
sbb
push
int
or
and
lods
cmp
push
fisubl
sbb
sub
inc
sbb
push
xchg
ja
mov
and
add
scas
cmp
lock
xchg
sbb
xor
xor
fmulp
push
mov
lods
adc
mov
ret
cmp
fnstenv
stos
adc
int3
xchg
mov
push
or
sbb
into
mov
nop
mov
rcrl
mov
adc
sbb
loopne
aad
fidivrs
push
scas
loop
sbb
aaa
xor
enter
dec
leave
lock
cltd
adc
or
addl
repz
movsl
das
push
push
mov
lds
or
lret
mov
fnsave
and
sahf
add
push
gs
popf
cmp
add
push
add
loopne
xchg
xchg
mov
cmp
lret
out
clc
out
lcall
cmpsl
dec
push
xor
gs
mov
xchg
popa
add
clc
popl
inc
enter
sti
and
out
nop
jb
scas
scas
sbb
sub
pop
or
dec
ss
xchg
dec
inc
xor
int3
jb
sub
out
jns
dec
jno
mov
test
push
pop
fisttps
and
sub
roll
dec
sar
imul
les
or
mov
jge
xchg
test
dec
push
out
xchg
rolb
push
cmp
xchg
fwait
lock
push
mov
push
gs
adc
mov
add
dec
mov
dec
mov
out
or
loope
movsb
fwait
roll
sbb
push
pop
ss
ds
ja
mov
and
outsl
mov
push
dec
loopne
pushf
aas
xchg
into
rcrb
icebp
movd
dec
jle
or
outsb
iret
push
loopne
sbb
add
jmp
dec
xor
scas
cmp
cmpsb
inc
xorl
ljmp
jb
jge
adcl
push
mov
inc
push
sbb
pop
and
in
js
adc
sub
mov
movsl
dec
inc
lods
popa
mov
lret
inc
xor
mov
jge
sub
lahf
lret
pop
popf
push
cmpsb
insl
in
movsb
fstpl
pop
inc
pusha
scas
repnz
pushf
cmpsl
das
mull
push
lock
or
fnstsw
mov
lods
lcall
into
pop
jbe
add
jp
sbb
in
sub
push
xor
xor
stc
ds
imul
cld
loopne
sbb
pop
or
push
in
outsb
or
mov
test
out
std
data16
cmp
pusha
mov
imul
std
and
data16
cmp
pop
mov
push
lret
mov
cltd
push
imul
inc
mov
pop
cltd
frstor
pop
xchg
icebp
dec
xchg
lods
outsb
jecxz
outsl
cmpsl
dec
mov
cld
fldt
adc
inc
xchg
adc
xor
dec
jae
lahf
sbb
add
scas
sub
out
cli
sub
push
add
pop
ds
mov
loop
in
and
fnsave
outsb
push
and
mov
mov
xchg
sbb
sahf
aaa
push
sub
push
mov
mov
movsb
dec
ds
mov
gs
pop
fidivl
in
arpl
lcall
xchg
xor
inc
dec
xchg
xchg
int
mov
sub
icebp
add
and
or
fstpt
fisubs
into
mov
or
lahf
lahf
jl
mov
add
cltd
dec
add
mov
enter
jae
dec
xchg
pop
jno
aam
push
js
sub
xchg
test
and
jmpw
sbb
repnz
ficoml
cmp
mov
fisttpll
sar
xor
movsl
test
sbb
iret
js
imul
sti
mov
sub
jo
leave
sarb
adc
divb
sub
sbb
push
mov
mov
mov
sub
test
pcmpgtd
push
sbb
sbb
jb
in
sbb
test
mov
stos
lods
sbb
movsb
shlb
jns
mov
jae
jecxz
mov
cltd
mov
xor
pop
test
cmp
jns
pushf
cs
jae
add
and
loope
movsl
sbb
inc
xchg
inc
ret
inc
xor
pop
mov
hlt
enter
jmp
and
imul
ret
cmpsb
jno
insl
negl
daa
loop
je
push
imul
out
xchg
adc
repz
hlt
or
sub
push
test
add
sub
jp
mov
pop
arpl
addb
shll
mov
jae
fdivrl
jno
adcl
int
sub
cmp
stos
dec
hlt
sbb
mov
jo
mov
pop
test
push
fldt
push
aas
fdivs
test
test
idivl
aam
aam
outsb
out
addb
push
dec
es
pop
push
push
ss
dec
mov
leave
push
push
popa
sbb
loop
mov
out
mov
jge
adc
cmp
mov
push
test
mov
mov
xchg
pop
pop
xchg
xor
outsl
out
call
pop
sub
adc
dec
out
xchg
pushf
inc
push
rorl
fs
flds
push
sbb
loop
or
shll
sbb
insl
fildl
mov
repz
mov
insl
and
xchg
aas
cmc
scas
inc
push
mov
jg
xor
cmp
or
pop
push
int3
jl
clc
add
and
xchg
inc
pop
add
cli
mov
cmpsl
stos
pusha
pop
ficoml
aaa
mov
or
ds
xchg
sbb
xchg
mov
mov
or
inc
jo
or
pop
mov
xchg
stos
jo
out
lret
sahf
scas
push
sub
cmc
stos
mov
xor
and
xchg
sbb
out
dec
out
fwait
sub
lds
sub
stc
aad
mov
pop
ret
es
sbb
add
cs
xchg
into
mov
insb
mov
fdivs
test
push
push
cmp
push
xor
sub
xchg
mov
jge
repz
stos
test
loopne
popa
mov
addr16
xor
sub
dec
jnp
dec
and
iret
or
sti
push
add
mov
cmp
out
or
push
mov
testb
cmpsb
jle
std
out
int
inc
std
call
adc
lcall
jbe
mov
loopne
in
je
imul
or
push
jbe
inc
jae
cmp
jmp
xchg
xchg
lods
fs
adc
out
push
mov
sahf
inc
aad
add
cmpb
jne
xor
out
in
call
cmp
push
mov
or
sti
cmp
jge
pop
movsl
rcr
shl
jecxz
mov
xchg
aaa
shl
cmp
gs
pusha
sbb
dec
jmp
add
add
push
lret
nop
fistl
popa
lock
lahf
fisubrl
adcl
std
outsl
outsl
push
and
dec
stos
add
lock
push
cmp
xchg
mov
pop
hlt
int3
out
mov
es
lahf
push
lret
push
xchg
mov
es
lret
aas
faddl
lock
push
push
movsb
sbbl
loop
xchg
pushf
popf
jbe
xor
push
pushf
jp
rcll
cmp
ss
or
push
adc
push
out
mov
jo
fbstp
in
xor
mov
ss
cltd
popa
sbb
push
add
sbb
movsl
push
lods
push
push
fsub
ret
neg
cmp
cmp
jnp
or
ds
jnp
test
sbb
inc
aad
mov
fnstcw
shrb
add
lds
loope
mov
ret
xchg
das
arpl
bound
and
dec
mov
pop
clc
fst
mov
or
nop
cmp
xor
fwait
lock
jg
mov
out
maxps
inc
pop
dec
cmc
mov
adc
imul
xchg
lret
or
mov
aam
les
xor
fwait
mov
dec
clc
jg
cwtl
cmp
inc
jns
sbb
fnstcw
cmp
jle
fucomip
fcoms
add
push
pop
lock
lcall
mov
xchg
adc
je
jl
mov
xlat
pop
mov
loop
gs
in
xchg
jo
enter
push
call
jne
cmpsb
and
xor
sbb
mov
repz
bound
sub
sbb
lods
and
inc
test
out
mov
sahf
ja,pt
test
sbb
mov
out
or
mov
and
fiadds
imul
and
xchg
mov
cmpl
sub
lret
repz
je
popf
mov
pop
pop
out
movsb
cmpsb
subl
sub
or
dec
test
repnz
push
sub
sahf
stc
pop
mov
cmp
ljmp
ss
or
out
roll
inc
fistl
out
xchg
push
ds
add
rolb
jbe
and
add
xchg
push
pop
and
movsb
das
inc
jmp
icebp
mov
dec
dec
xchg
jge
stos
int
sahf
addr16
adc
mov
lods
inc
cmp
aam
xor
sahf
in
sub
or
pushf
jns
outsl
call
pop
daa
xor
xchg
testb
adc
iret
seta
mov
test
test
and
sbb
out
cmp
push
sbb
and
xor
cmpsl
mov
lret
inc
adc
cmp
pushf
pop
xor
lahf
push
enter
push
jae
xor
rcl
movsb
sbb
mov
add
mov
ja
mov
ja
pushf
outsb
ja
dec
test
mov
fsubrs
mov
adc
sbb
sbb
mov
out
xor
mov
psllw
scas
jge
xchg
data16
xor
ret
add
movsb
mov
test
mov
outsl
ja
dec
shlb
in
sub
pop
fwait
out
inc
inc
mov
add
adc
enter
mov
mov
jne
dec
pop
lret
pop
pop
and
xor
out
and
in
xchg
pop
cmp
mov
xor
lods
insl
xor
xor
lods
push
xlat
repnz
mov
jp
daa
inc
inc
and
xor
andl
dec
push
mov
cmpsb
and
inc
scas
pop
xor
dec
mov
mov
mov
dec
jno
xchg
jp
stos
or
enter
test
dec
sbb
movsb
insb
sbb
or
insl
jbe
mov
in
mov
out
in
stc
and
arpl
add
ljmp
jg
daa
aam
cmp
test
sahf
std
xchg
push
stc
mov
outsl
arpl
pop
add
adc
cmpsl
int
stos
and
xchg
mov
mov
push
sbb
dec
pop
sarl
xchg
mov
pop
mov
push
gs
les
mov
out
test
jge
mov
loop
call
imul
loopne
or
hlt
fnsave
xor
mov
fists
cmpsb
fnstsw
mov
dec
inc
out
xchg
pop
sub
test
push
or
pop
cli
imul
and
push
push
ljmp
mov
mov
sub
sub
dec
jge
pop
xchg
or
rclb
popf
mov
lret
pushl
sub
pop
push
fdivrl
repnz
jmp
mov
jne
mov
and
dec
add
scas
jae
popa
push
shrb
cmp
push
nop
lret
movsb
ja
sub
imul
or
pushf
sub
mov
lea
mov
cmp
add
testb
sbb
test
add
test
pop
mov
lock
mov
or
lea
fsubs
push
fwait
in
enter
les
aaa
mov
cli
mov
lods
or
ret
add
pop
pop
jmp
roll
repnz
and
and
ficompl
call
mov
aad
adc
aad
adc
fnstenv
push
int
icebp
in
ss
mov
cmp
imul
cld
lea
out
sbb
jnp
jg
in
fsubl
lcall
sub
fwait
outsl
push
xchg
ret
movsl
inc
in
sub
lock
outsl
inc
mov
inc
outsl
mov
inc
xchg
mov
push
mov
scas
jo
inc
xchg
inc
insb
movsl
sbb
mov
movsb
push
stc
sub
ja
push
stc
in
adcb
add
jb
xchg
sub
mov
or
inc
and
shll
sub
popa
xchg
mov
sar
out
or
jae
push
fdivrs
aaa
adc
insl
jae
in
stc
icebp
pop
cmp
adc
or
sbb
pop
cmp
push
loop
sbb
sahf
int
cmp
fs
jp
jle
inc
mov
iret
sub
sahf
les
xchg
mov
mov
call
jle
jge
loopne
dec
or
pop
ljmp
mov
dec
mov
sbb
pop
scas
and
clc
dec
pop
jbe
cvtpd2pi
test
cmpsb
or
sbb
icebp
ret
and
xchg
aaa
sub
push
jno
sbb
out
insl
aaa
or
jecxz
pop
mov
rorb
ljmp
xor
push
ja
xorb
addr16
icebp
and
lret
push
dec
outsl
outsl
push
and
ljmp
jg
dec
jae
fwait
stc
push
sbb
fsubs
push
inc
or
push
dec
dec
add
daa
sbb
rcrl
xchg
lret
mov
dec
inc
adc
fcmovu
arpl
dec
or
das
mov
mov
xchg
mov
inc
add
add
es
call
test
cwtl
adc
ss
cmpsb
adc
out
jmp
lcall
jp
dec
sbb
in
bound
mov
pop
push
fisubrl
cld
mov
xchg
xor
pop
sahf
ds
mov
jl
loope
jmp
mov
add
mov
loopne
pop
xchg
xchg
mov
push
daa
inc
mov
jp
xchg
cmp
adc
mov
xchg
xor
scas
sarb
mov
gs
xor
ss
jle
push
out
lock
add
mov
loop
fisubl
leave
pusha
lcall
jne
lock
dec
ret
pop
push
popa
cmpsl
rcr
out
xor
xchg
jmpw
mov
nop
fistpll
pop
cmp
pop
push
insb
sbbl
mov
into
fimull
leave
mov
push
repnz
or
mov
pop
sbb
repnz
loope
mov
and
bound
in
sbb
test
in
inc
bound
push
add
lds
arpl
loope
addl
in
popa
xor
call
inc
cwtl
loop
arpl
pop
dec
push
stos
mov
inc
int
xchg
add
push
addr16
push
jp
mov
addl
test
ret
adc
test
ja
jmp
inc
pop
dec
pushl
cli
cmpl
iret
popa
inc
xor
dec
dec
lret
cmp
in
xor
and
mov
inc
leave
std
mov
pop
ficoms
jno
cli
sub
repnz
inc
inc
mov
stos
stc
xchg
mov
js
sbb
int3
xchg
out
addr16
aad
or
out
jmp
push
cmpsb
fs
dec
cli
inc
jge
ljmp
mov
scas
sahf
mov
dec
lods
xchg
loop
xor
fnstsw
push
test
inc
mov
xchg
aaa
dec
push
arpl
ds
repz
outsb
sbb
data16
or
xchg
outsl
pop
aad
jge
rclb
jge
daa
inc
mov
jne
inc
sbb
shrl
and
ds
mov
xor
inc
call
or
aam
data16
and
sbb
sti
fdivs
repnz
rcll
or
cmpsl
xchg
ja
xor
push
jbe
push
es
push
movsl
sub
pop
iret
pop
push
gs
call
push
adc
mov
stos
dec
mov
movsb
sbb
aad
sbb
pop
mov
cmp
push
jne
and
aaa
lds
jb
jl
das
out
inc
dec
movsb
push
cmpsb
pop
bswap
jae
loopne
and
push
enter
sahf
in
pop
idivl
or
mov
jne
in
cmp
cs
icebp
testb
push
pop
or
pop
scas
insb
testl
jbe
dec
xlat
ret
pushf
js
and
jg
sub
loopne
push
test
push
test
aad
lock
and
in
push
or
insl
repz
cmc
negb
adc
out
fdivl
rol
push
mov
adc
lods
xchg
clc
ja
mov
out
out
cmc
leave
cwtl
fidivs
push
cmp
cmp
inc
dec
aad
es
outsb
pop
dec
fistl
jbe
sub
dec
imul
adc
inc
mov
cmc
xlat
mov
adc
xchg
push
fnstenv
loope
adc
leave
inc
mov
pop
lcall
or
notl
xor
xchg
sbb
in
sti
and
xchg
xor
pop
nop
mov
int3
mov
xchg
pop
lds
bound
andw
push
fadd
in
repnz
adc
pop
lea
imulb
stos
jg
or
repnz
nop
push
xchg
cld
jecxz
out
jns
xlat
test
out
arpl
add
jae
jecxz
mov
mov
push
sbb
popa
xlat
xor
mull
inc
mov
sbb
xchg
loop
mov
std
and
inc
xchg
dec
pusha
inc
add
pop
sahf
fcoml
rcrb
adc
and
or
mov
call
cmp
and
push
dec
add
dec
dec
jl
cmp
fistpl
adc
mull
loop
cmp
xchg
fistpl
fwait
xor
or
push
inc
dec
push
mov
es
mov
cmpsb
xlat
idivb
jae
insb
dec
push
mov
inc
lea
mov
cmp
mov
jno
bound
shrb
xchg
cltd
cmp
mov
cmp
not
push
mov
pusha
outsl
add
aaa
fcomps
push
pop
jecxz
pushf
pusha
loope
cmp
inc
sub
fsubr
jmp
inc
ja
mov
repnz
loope
mov
addr16
mov
enterw
les
vmread
push
xor
out
rol
cmpb
scas
sub
cmp
inc
outsl
xchg
pop
push
out
sarb
xchg
hlt
push
std
scas
jne
jno
mov
sub
jmp
bound
cld
hlt
and
loope
iret
inc
shl
mov
imul
orl
sbb
bswap
push
or
cmpb
and
rcr
or
cs
je
fadds
outsb
nop
or
stc
iret
popf
jnp
mov
and
push
das
inc
sub
push
xor
mov
out
jno
sbb
sub
pop
jge
mov
cs
adcl
mov
sysret
mov
xor
xchg
xchg
add
inc
xchg
jmp
or
outsb
repz
mov
xchg
sbb
loop
js
add
xor
call
rorl
mov
ret
xor
cwtl
das
sbb
cltd
out
and
imul
pop
cmpsb
mov
aam
cmp
scas
mov
dec
and
jne
cmp
xchg
jbe
pop
push
movsb
mov
lahf
push
dec
mov
test
cmp
add
pusha
or
cli
push
push
into
pop
mov
mov
or
mov
pop
loopne
movsl
int
mov
mov
mov
mov
sti
dec
jnp
xor
sub
scas
push
xor
bound
inc
xchg
mov
sub
leave
adc
or
and
jae
cli
pushf
mov
lods
test
aas
mov
and
std
push
xor
fadd
rorb
xor
dec
in
add
sti
in
xchg
fs
movzwl
mov
out
adc
xor
push
or
insb
or
outsb
jmp
pop
cmpsl
cmp
leave
pop
pushf
fistpl
lahf
rclb
sbb
popf
stc
push
push
pop
test
fs
es
and
xchg
ds
loop
sub
pop
dec
fdiv
sub
pop
iret
cmp
pop
pop
jns
jge
push
push
push
cmp
insl
divl
sbb
outsl
or
jno
mov
jno
daa
outsl
jle
push
mov
shll
push
inc
popf
inc
ret
cmp
not
in
shl
xor
mov
cvttps2pi
rorb
mov
jo
xchg
loop
js
xchg
and
rorl
mov
stos
aad
shrl
test
sbb
mov
jo
sbb
mov
mov
pop
pop
popa
repnz
jecxz
sti
data16
lock
stos
sub
test
xchg
fistps
and
dec
adc
leave
push
std
jbe
pop
xchg
ja
xchg
aas
std
dec
xchg
or
sbb
sbb
ret
int3
mov
sarl
xchg
pushf
shld
loopne
push
imul
mov
mov
and
mov
or
call
mov
mov
jmp
in
add
mov
pop
lods
scas
je
repz
aaa
lock
inc
push
cmpb
imul
movsb
int
push
leave
and
cld
daa
cmp
mov
sahf
and
pop
mov
jo
pop
add
add
fmull
leave
xchg
mov
pop
or
stc
adc
inc
test
cwtl
out
xor
mov
inc
inc
or
push
adc
cmpsb
repnz
jecxz
pop
dec
cltd
cltd
push
xor
leave
outsb
inc
xchg
adc
pop
hlt
jle
gs
mov
enter
sub
cmpsb
or
popa
jnp
loop
repz
mov
fs
mov
lds
sub
sub
lds
sbb
mov
xor
cmp
mov
testb
xor
test
loope
lea
or
popf
adc
push
movsb
outsl
sbbl
scas
and
push
mov
push
scas
sub
test
sub
sahf
subb
mov
pop
out
cltd
jnp
mov
ja
push
negb
push
ja
std
or
add
push
add
jl
xchg
scas
dec
inc
xchg
cli
movsb
fldt
mov
cs
test
mov
lds
vmwrite
cmp
nop
fadd
cmp
add
xor
shlb
push
xchg
and
std
dec
push
mov
ret
and
adc
pusha
adc
sbb
sbbl
repnz
xlat
xor
dec
aad
cmp
mov
and
and
xchg
adc
imulb
mov
or
cmp
mov
sbbb
inc
mov
cmp
lock
movsl
stc
jecxz
dec
enter
jmp
sub
xor
mov
enter
cmpsb
add
mov
aam
xor
mov
xor
cmp
mov
mov
jne
out
in
push
cmpsb
dec
notb
test
addr16
and
fmuls
call
out
mov
xchg
je
dec
mov
or
out
sbb
jo
cld
sbb
outsb
mov
fsubl
mov
inc
decb
stos
ds
bsr
flds
pop
rcrb
popa
hlt
sbb
sub
fldt
pop
ficomps
bound
std
mov
cmp
mov
orb
adc
jno
lahf
stos
cmpl
je
stos
mov
frstor
incl
icebp
mov
and
push
or
sahf
sbb
and
add
cltd
dec
mov
outsb
or
push
fsubs
mov
pop
mov
ret
xlat
aas
testl
insb
ljmp
sahf
xchg
push
addr16
push
dec
in
out
mov
sar
scas
push
mov
and
xchg
jns
cld
stc
cmp
jmp
test
and
call
push
ds
cli
pop
loop
jae
cmpsb
cmpsb
clc
rolb
shrb
xchg
jae
loopne
ljmp
pop
popa
push
jne
and
push
jp
inc
cmp
out
subl
mov
pusha
cltd
into
lods
cmc
mov
adc
inc
je
call
icebp
xor
pop
pop
pop
or
sbb
xchg
lods
test
xor
aaa
ljmp
nop
in
cmp
fdiv
add
lods
sub
scas
push
rol
stos
lcall
pop
cmp
rcll
stc
movsb
fnstcw
enter
aad
mov
fbstp
movsl
sub
mov
in
orb
jno
aam
jge
rorb
mov
daa
adc
xor
filds
insl
mov
xor
imul
pop
xchg
mov
outsl
dec
test
dec
sub
add
sub
adc
negl
cld
jmp
testl
enter
and
inc
pop
loope
sti
adc
scas
imul
pop
iret
inc
pop
dec
mull
xor
imul
test
decb
aaa
inc
arpl
push
outsb
inc
cmp
jl,pt
in
xchg
jecxz
inc
adc
js
sarb
rcl
lret
loop
and
push
in
incb
inc
xchg
fildll
xor
lea
xchg
xlat
mov
dec
cmpl
xchg
cwtl
push
mov
sub
mov
inc
mov
mov
jle
andl
xchg
jno
dec
shrb
iret
lcall
loop
jbe
or
ds
popa
jg
in
jp
jns
mov
sub
loop
or
pop
bndldx
rcll
mov
and
xchg
rorb
leave
cmp
repnz
das
lahf
shlb
icebp
mov
jb
out
lds
lds
js
pop
shlb
inc
mov
fildl
xchg
and
lea
aas
xchg
ret
iret
pop
jecxz
xchg
nop
push
pop
xor
dec
cmp
or
push
imul
in
faddp
add
and
hlt
cmpsl
out
cmpsb
cmp
out
push
pop
lea
jne
mov
lods
push
or
mov
mov
dec
repz
and
testb
nop
jbe
push
adc
in
lcall
outsb
outsb
push
imul
and
sbb
adcb
mov
sbb
push
fcoms
fincstp
and
mov
add
jp
cli
test
sbb
inc
jne
dec
int3
or
dec
stos
call
jl
fwait
aad
pop
push
inc
shlb
or
insl
inc
jnp
mov
push
push
pop
xor
stos
outsl
sbb
or
fistpll
stos
or
iret
in
mov
adc
and
int3
insb
cmp
jge
or
daa
lahf
push
dec
push
jge
or
mov
pop
jle
push
jg
jno
pop
subb
in
xorb
das
lea
mov
xor
sub
push
xchg
ret
fwait
in
divl
adc
in
inc
cmc
mov
fildll
pop
movsb
sarb
jle
pushf
mov
mov
pop
mov
push
add
mov
cmp
fldenv
cmp
out
push
repz
fistpll
xchg
mov
inc
aad
in
cwtl
lods
mov
inc
xchg
outsl
lock
loop
int3
jnp
mov
and
pop
mov
mov
popf
push
stos
xchg
cli
add
clc
gs
out
dec
and
sub
lods
mov
or
fadds
adc
cmc
xchg
add
cmpsl
jb
inc
sub
dec
add
lcall
aas
jl
repnz
sbb
jns
insl
mov
jp
xor
cmc
xchg
inc
sti
hlt
push
adc
sarl
movsl
mov
cmp
xchg
and
push
clc
out
and
subl
data16
scas
dec
push
jl
repnz
xor
adcb
dec
lods
mov
loop
int3
mov
out
gs
je
leave
dec
out
xor
mov
xchg
sub
fidivl
push
loope
jbe
imull
stos
movsl
loope
mov
push
and
and
pushf
xchg
jecxz
cs
lret
daa
subb
gs
lret
cltd
pop
jo
cmp
adc
mov
in
pop
pop
inc
repz
pop
inc
insl
cmpl
outsb
iret
ja
mov
imul
lret
mov
stos
mov
adc
out
xchg
int3
add
pop
jg
push
jl
movsl
mov
xchg
lret
cmpsl
add
cmovne
lret
xchg
pop
add
lcall
xchg
lcall
fisubs
and
or
sbb
js
mov
cmpsb
adc
call
push
pusha
jp
inc
in
divb
mov
jp
jmp
gs
xor
xor
jge
pop
outsl
scas
mov
cmp
and
adc
mov
jo
jg
mov
stos
and
pop
subl
adcl
rcr
mov
xor
cmp
je
mov
inc
pop
dec
add
or
sbb
lock
andl
lods
icebp
cli
jge
add
sub
or
mov
rolb
cmp
popf
adc
sahf
xor
rcrl
sbb
pop
add
mov
inc
fwait
jnp
inc
mov
adc
jae
xchg
sub
arpl
int3
adc
jne
push
pop
push
cmc
pop
push
lret
push
pop
sbb
dec
sbb
inc
loopne
sub
mov
mov
pop
stos
mov
ljmp
leave
ds
push
pop
jo
and
xchg
xchg
jmp
push
je
pop
push
repnz
fldenv
shll
push
xlat
or
test
inc
lock
and
fchs
sbb
xchg
and
mov
jnp
mov
mov
pop
je
test
cltd
popa
dec
xchg
adc
mov
lods
jbe
daa
shr
addr16
dec
rorl
pop
sbb
lcall
push
jo
inc
pop
cmp
mov
mov
ds
jp
cltd
cwtl
lock
cmp
aad
cmp
pushf
aam
js
mov
xchg
fcompl
int
or
inc
push
xchg
cmp
pop
repz
xchg
dec
xor
aam
bound
push
mov
das
cmpsl
ret
popf
push
lea
xor
push
mov
xor
shl
push
dec
adc
mov
push
adc
sbb
mov
xor
jmp
aam
movsl
int
fstps
imulb
mov
clc
jle
jle
andb
mov
dec
inc
gs
je
std
insl
mov
lods
xchg
into
mov
mov
ror
es
xor
lahf
jb
les
outsl
mov
in
dec
ret
mov
mov
ljmp
call
pop
gs
adc
mov
int
inc
daa
xor
dec
mov
les
jns
xchg
movsl
rcrl
sbb
and
push
mov
xor
movsl
fimuls
enter
mov
sti
xorb
scas
test
inc
nop
cmp
mov
add
scas
aam
frstor
push
arpl
divl
cmp
scas
orl
jnp
lods
mov
mov
iret
or
and
cld
rol
dec
mov
push
out
std
and
xor
xor
mov
fisttpll
rclb
dec
dec
xchg
addl
lcall
fneni(8087
leave
jle
push
mov
mov
sub
mov
jae
xor
push
sahf
sarb
and
adc
pop
and
fistpll
and
cld
add
sub
aad
jnp
daa
out
in
or
fwait
mov
mov
leave
movsl
xchg
fiaddl
dec
mov
push
sahf
and
push
jne
pop
shl
jecxz
lods
cwtl
dec
push
jle
shlb
adc
pop
loopne
cmp
out
mov
add
in
outsl
in
mov
mov
inc
xor
vmread
aad
lods
ja
cltd
and
pop
sub
enter
stos
test
clc
ret
leave
sub
jae
sub
pusha
adc
sbb
or
push
sub
cltd
push
pop
cmp
xchg
iret
pop
jmp
sbb
clc
lods
scas
and
and
cs
jo
mov
jle
or
das
pushf
dec
loope
into
ljmp
or
clc
ja
in
push
enter
adcl
pushf
jp
jns
or
ss
dec
fwait
movb
add
inc
and
mov
in
push
aad
test
das
xchg
lea
lret
aaa
xorl
jno
addr16
and
pop
nop
and
sarl
ret
mov
pop
jno
mov
push
in
pop
mov
imulb
and
out
shrb
movsb
mov
pop
cmp
je
nop
dec
jmp
loope
xchg
popa
addr16
inc
sub
sub
rorl
pop
mov
clc
adc
into
sbb
ffreep
loop
push
sbb
and
lods
iret
mov
lcall
aam
movsl
cmp
push
mov
test
jecxz
aas
lock
jnp
xchg
mov
cmp
and
jle
in
mov
mov
orl
mov
lahf
jae
in
shr
bound
ret
mov
lods
ds
enter
and
dec
int
popf
bound
and
scas
loop
cmp
push
repz
iret
or
add
mov
gs
testl
shll
jno
jge
or
sbb
icebp
add
xchg
inc
mov
test
fistpll
push
dec
mov
arpl
push
mov
push
mov
cs
dec
mov
shll
es
jo
mov
jmp
push
aad
and
cmp
pusha
xor
popf
stos
arpl
pop
cmc
jno
cli
mov
adc
jae
xchg
fisubrs
stc
and
flds
icebp
dec
xchg
loopne
test
movsb
xor
jno
xor
push
divb
pop
shll
das
cmp
adc
test
movsb
sub
push
jo
cmp
sbb
fmull
pop
test
dec
stos
es
std
std
stc
lods
xchg
cmc
xor
sbb
cs
cmp
stc
push
fildll
mov
jnp
daa
pusha
lcall
sub
int
sub
push
cmp
cld
leave
dec
xor
jmp
sub
imul
add
addl
add
ds
mov
orl
adc
pop
pop
pusha
mov
dec
push
push
aas
out
and
repz
mov
mov
imul
lock
push
cwtl
mov
out
sub
mov
and
in
jle
sub
inc
in
aam
shlb
jae
outsb
lods
xchg
outsl
int
inc
loop
and
int
sbb
cmp
ljmp
in
and
and
pushl
jmp
jl
mov
xchg
and
xchg
mov
add
pusha
push
sub
cmpl
das
sub
push
nop
mov
ljmp
insb
negl
fistps
or
shlb
xchg
cmp
and
mov
loopne
cmp
add
out
imul
out
pop
cmpsb
ds
add
sbb
mov
inc
xchg
push
out
push
orl
icebp
jp
int3
fistpl
xchg
and
stos
movsb
pop
mov
cwtl
arpl
cmp
mov
dec
std
pop
jae
or
adc
lock
cmp
jno
lds
push
std
mov
lcall
jno
int3
and
lea
sub
xlat
jae
fdiv
test
mov
mov
addr16
pop
out
or
xor
popf
jns
xor
sbb
rcll
loop
repnz
in
jmp
orb
mov
fadds
sub
xchg
mov
inc
xor
sbb
sub
dec
cmp
or
push
mov
xrelease
mov
lea
mov
in
es
arpl
inc
cmp
add
lods
aas
pop
adc
pop
push
xor
cltd
xor
pop
and
incl
mov
push
je
xchg
cmp
test
outsb
mov
mov
add
jbe
push
mov
cwtl
fwait
cli
je
mov
enter
xchg
adc
outsl
dec
mov
std
popa
xor
fildl
inc
or
mov
jns
mov
mov
cmp
bound
pop
push
repnz
fimuls
idivl
rolb
fwait
jnp
leave
dec
cmc
cmpsb
dec
fwait
scas
aad
sub
mov
lea
fisttps
dec
ret
je
in
mulb
xlat
or
out
adcl
inc
repz
dec
or
stc
cmc
jl
pop
xchg
scas
div
ss
hlt
leave
jns
adc
aaa
push
jmp
jbe
mov
mov
pop
mov
enter
fmull
ret
jg
xchg
xchg
std
mov
cmpsl
push
or
hlt
mov
mov
pusha
push
jne
subl
dec
cmc
mov
daa
cmpsb
jp
test
rorb
fs
mov
out
dec
lret
jl
mov
dec
outsb
mov
push
add
xchg
inc
movsb
ljmp
xchg
mov
leave
sub
ja
mov
sahf
xchg
in
lods
aad
fisubs
rcr
ret
cmp
xor
pop
xor
fwait
xor
adc
push
iret
dec
rcrb
and
int3
cmp
fcomip
mov
sub
pop
mov
add
shll
mov
jg
aad
jge
inc
stc
sbb
pop
xlat
loop
gs
xchg
jne
add
sbb
and
pushf
mov
loope
insb
sub
mov
or
push
jge
ljmp
mov
clc
pop
ljmp
shll
nop
xor
ficoml
jae
insb
fisubrs
stc
or
dec
sbb
pop
fmull
mov
jae
mov
repz
roll
mov
jmp
add
cmp
sub
mov
sbb
shlb
jnp
sbb
xchg
pop
inc
stc
lods
scas
inc
push
xor
leave
or
daa
fwait
mov
pop
xchg
mov
push
es
mov
and
add
cmp
jecxz
add
xor
stc
leave
mov
jnp
repz
ljmp
jmp
push
and
sbb
inc
scas
push
mov
cmpl
lock
lcall
lds
or
aad
jmp
jmp
xor
daa
mov
ljmp
or
xchg
lcall
mov
or
add
pop
call
jl
in
testl
inc
mov
repz
and
adc
mov
pop
or
pop
push
cmp
cwtl
mov
aad
lahf
into
jne
cmp
jbe
add
leave
sahf
fadd
adcb
cmpsb
xchg
mov
nop
shll
mov
dec
in
test
xchg
xchg
cs
movsl
shl
jmp
leave
ja
xor
fwait
xor
stc
push
pop
mov
xchg
push
and
sub
inc
dec
lret
sbbb
mov
jmp
sbb
sub
and
push
outsl
xor
pop
loop
rcrl
inc
jno
ss
out
jge
jecxz
fstps
xchg
dec
add
int
fisttpll
in
call
movl
sub
xchg
or
mov
nop
push
push
in
mov
loop
push
fwait
sub
xchg
pushf
je
push
lods
or
pop
xchg
and
xor
xor
add
fdivs
std
pusha
aam
testl
cmpsb
rcll
repnz
add
xlat
cmc
jecxz
out
dec
outsl
xor
cmpsb
and
adc
mov
jmp
xchg
inc
mov
adc
adc
ret
jge
std
mov
ja
mov
sub
cld
add
shlb
arpl
pop
push
repz
inc
xchg
repz
or
push
sub
test
sbb
fldl
pop
push
loopne
dec
and
mov
and
push
sbb
xor
add
mov
push
add
ret
ss
pop
fisttps
mov
inc
or
pop
cmp
lea
mov
mov
sub
inc
rclb
loop
mov
pop
jb
adc
in
leave
pop
test
sbbb
cmp
xchg
int3
data16
add
ja
js
xchg
add
push
daa
std
pop
arpl
jecxz
xor
stc
xchg
dec
fcomp
and
in
push
subb
pop
outsl
push
or
gs
scas
mov
in
sub
mov
fldt
mov
pop
sub
lret
inc
push
test
xchg
push
pop
mov
pop
or
iret
lds
hlt
inc
cmpsl
sub
or
dec
out
xlat
aad
cs
inc
iret
jg
cltd
aas
es
lret
push
pop
rcpps
ret
xor
sbb
push
not
add
dec
and
loop
mov
aaa
int
push
pusha
xchg
jl
cltd
mov
add
mov
jge
or
loopne
imul
mov
push
aaa
and
and
jg
push
stos
push
leave
dec
test
fimull
gs
sub
and
pop
mov
xchg
push
inc
mov
fsubrl
push
push
inc
subl
and
stc
sbb
fnstsw
orb
loopne
nop
ljmp
fsts
pop
std
in
add
jg
outsl
in
jmp
adc
in
mov
inc
pop
pop
inc
fwait
cs
pusha
pop
ds
lea
xor
mov
inc
and
fstps
mov
rcll
inc
mov
dec
cmp
gs
out
in
jp
lret
dec
or
dec
pop
rcl
jo
jle
adc
dec
xchg
ret
loope
push
adc
clc
cmp
test
loopne
stc
rclb
xchg
pop
pushf
xor
js
mov
and
mov
movsb
int
xchg
sbbb
cltd
jns
pushf
cmp
stc
std
rclb
aam
and
mov
shll
dec
movsb
dec
ret
pop
mov
fcoms
xor
sbb
mov
dec
push
sahf
jo
jg
mov
inc
clc
push
jp
pop
outsb
out
enter
cmpsl
in
or
adc
cmpsl
xchg
ds
push
xchg
cmp
and
mov
pop
rcrb
cmp
fistpl
mov
and
imul
xchg
adc
inc
iret
xchg
push
push
cwtl
xor
dec
mov
testb
lahf
xchg
push
xchg
jns
pusha
pop
loop
cmp
push
lods
leave
sub
pop
jmp
push
xor
cmp
jb
sbb
cmp
xor
inc
pop
scas
inc
aam
sub
mov
ds
mov
dec
lock
jns
push
fs
xor
js
xor
pop
inc
cs
pop
mov
mov
or
fnsave
jbe
lds
jbe
dec
pop
lret
ljmp
push
sub
mov
xchg
out
lock
jno
dec
in
dec
mov
mov
push
lods
xchg
ss
jge
es
pop
push
jecxz
sub
pop
icebp
push
jg
notb
dec
xchg
movsl
insl
loope
nop
dec
inc
and
mov
js
mov
in
xchg
add
and
jmp
sub
lods
add
add
jb
jbe
jg
pop
scas
jecxz
inc
pop
push
and
lret
popf
push
cmp
mov
mov
fidivs
or
pop
xor
cmp
pop
dec
pop
mov
cmp
jecxz
cmc
lahf
inc
sbb
in
pop
call
cmp
adc
jnp
repz
pop
and
mov
lahf
mov
jp
fsubrl
push
je
movsb
cmp
mov
inc
mov
adc
sub
loope
cmp
add
mov
fiadds
leave
mov
sbb
lea
adc
mov
sbb
pop
mov
push
out
jg
mov
mov
cmpb
dec
test
xchg
jbe
loopne
dec
jl
repz
xchg
leave
imul
lret
loop
pop
push
adcl
sahf
ja
mov
frstor
aaa
xchg
repnz
fstps
pop
inc
js
xorb
stc
imul
fs
dec
clc
jg
mov
shl
push
clc
ja
cmpsl
outsb
pop
pop
out
and
out
mov
insl
jae
inc
cmpsl
test
std
out
xor
push
pop
mov
mov
loopne
nop
mov
push
dec
mov
out
push
inc
rclb
lock
scas
leave
jno
stc
or
adcl
es
dec
push
xchg
in
jmp
lret
or
sub
xchg
add
shlb
nop
mov
cld
fisubl
sub
out
daa
lods
mov
sbb
dec
imul
fidivrs
aas
js
pusha
les
outsb
mov
push
push
push
lahf
or
fcoml
sub
mov
push
nop
mov
push
arpl
sbb
jl
into
enter
arpl
adc
int
mov
add
movsl
popf
or
out
rclb
mov
push
jbe
inc
mov
mov
arpl
pop
ljmp
mov
xor
aaa
add
imul
aad
adc
nop
bnd
mov
cmp
mov
ffree
jmp
scas
fdivrs
mov
inc
test
jo
ljmp
adcl
stos
arpl
xchg
fcomip
mov
ffreep
cmp
lret
and
mov
push
inc
and
and
dec
lcall
adc
fmul
dec
enter
jg
and
loop
and
lret
pop
test
lahf
and
adc
push
jg
in
stos
sti
inc
stos
jne
cmp
add
cmpsb
pop
scas
scas
outsb
mov
xchg
setae
outsl
sahf
out
pop
pop
jmp
pop
or
insb
cli
lret
decl
and
or
jmp
fdivs
fwait
in
sub
pop
jl
mov
addr16
xor
pop
lea
inc
mov
mov
push
pop
cs
push
cmp
insl
insl
pop
mov
cs
add
cmp
stc
and
call
pop
inc
xchg
ret
out
adc
ds
mov
outsl
mov
push
jle
adc
call
jmp
mov
cmpsl
popf
push
cmp
inc
adc
dec
jle
dec
out
push
sub
das
idiv
aaa
ret
cmpsb
js
lahf
xor
inc
arpl
jp
inc
loope
cmp
or
dec
fidivrs
mov
scas
hlt
test
out
pop
jnp
inc
mov
sub
inc
dec
das
mov
call
test
push
negb
sti
aam
jo
flds
cltd
jno
mov
orb
das
ret
jbe
jecxz
cmp
or
leave
xchg
outsb
inc
xchg
loop
push
xor
cmp
add
outsl
in
adc
inc
mov
dec
fdivl
aad
imulb
bnd
push
add
dec
xchg
bound
aad
mov
cmp
stc
cli
jl
jg
cmp
jb
cli
shrl
dec
pop
clc
push
mov
mov
repz
push
cmpsl
dec
cmp
add
insl
sub
sbb
sbb
lods
xchg
push
xlat
add
insb
pop
popf
mov
add
mov
pushf
xor
pushf
bound
movsb
ss
xor
mov
mov
add
lret
rcrb
sahf
pop
mov
test
pusha
lret
test
inc
add
lss
push
fistps
pop
mov
and
pop
lahf
xchg
sbb
test
and
jo
inc
cli
cmp
les
je
pop
cltd
push
ljmp
adcl
into
into
fwait
outsb
stos
or
lret
jbe
imul
seta
pushl
out
cwtl
adc
iret
fimuls
nop
imul
mov
push
in
pop
fildll
xor
js
idivb
dec
jg
sbb
or
or
outsb
inc
cltd
pushf
bound
bound
jmp
mov
out
data16
hlt
ds
lods
cli
lea
mov
shlb
sbb
jae
or
dec
icebp
addb
mov
mov
or
or
mov
jmp
lock
cmpl
lret
lock
loop
sarb
aas
xor
imul
sbb
cli
jno
push
mov
sarb
jae
mov
out
popf
jl
pushl
xchg
bound
mov
mov
popa
fsubs
movsb
add
nop
sub
mov
add
out
push
or
in
dec
sbb
inc
jmp
pop
adc
enter
and
outsl
sarb
inc
mov
sbb
lock
shrb
rcr
leave
adc
movsb
cmc
sbb
push
mov
add
cmp
sbb
mov
jbe
jp
sub
repz
aad
xchg
mov
cld
in
scas
adc
lea
fstl
repz
cwtl
jle
xor
aaa
in
mov
pop
xchg
cmp
pusha
jns
and
outsb
fisttps
in
sub
popf
cmpsl
or
dec
imul
out
mov
dec
pop
push
xor
mov
jbe
cmc
jecxz
pop
push
ds
xlat
and
xchg
xor
and
jne
ds
sub
aas
jne
jp
loope
out
in
xor
mov
mov
stc
mov
fdivrl
fs
adc
clc
mov
fstps
pop
sub
jmp
outsb
pop
stc
mov
add
adc
jbe
jmp
jmp
sbb
or
test
inc
rorl
sbbb
add
or
adc
insb
andl
shll
inc
aas
or
mov
dec
ds
call
pop
inc
mov
loopne
mov
fdivrl
test
imul
lds
xor
push
out
sub
lock
fsubrl
ja
lea
out
shrl
xlat
mov
mov
push
aam
ret
push
movsl
jle
mov
loopne
or
and
or
data16
or
adc
ret
or
lea
scas
mov
mov
cmpsb
pop
lods
addr16
inc
xchg
inc
fdivl
outsb
out
fwait
jae
mov
mov
sub
inc
push
cmp
inc
imul
mov
and
repz
xchg
fisubs
xor
out
pushf
adc
pop
popf
push
lds
shr
jle
leave
xchg
push
xor
ss
and
sub
imul
leave
cs
cmp
lods
popl
mov
and
mov
stos
cmp
mov
or
jmp
adc
out
mov
add
imul
out
frstor
xchg
dec
push
cld
sti
pop
adc
fildl
movsl
mov
sahf
mov
sbbl
into
or
push
mov
fadds
roll
stos
andb
movsl
mov
xlat
xchg
insl
into
movsb
call
imul
and
adc
xchg
mov
scas
lea
das
xor
gs
sbb
push
pop
cld
adcb
mov
mov
adc
lea
mov
jmp
stos
notb
outsl
add
in
outsb
xchg
xchg
cmpxchg
mov
fwait
rorb
pop
pop
dec
fnstenv
dec
push
dec
and
je
and
sub
xor
les
icebp
pop
int
out
ret
iret
sub
leave
fidivs
enter
out
inc
mov
in
push
rcr
mov
mov
mov
mov
xor
cs
push
or
sbb
test
lret
scas
jmp
insb
jbe
push
jbe
pop
pop
jl
push
ret
icebp
pause
xor
push
xor
jmp
pop
aas
mov
into
dec
mov
dec
lods
jae
cmp
cmpsl
xchg
xchg
push
addr16
lret
idiv
jb
in
nop
xor
push
repz
xchg
dec
adc
insb
push
and
bswap
insb
in
fists
clc
data16
clc
jp
stc
aaa
xlat
into
gs
jmp
jp
push
cmp
sub
cmpsl
and
adc
push
lahf
push
sub
movsb
pop
dec
js
xchg
sub
lds
mov
push
iret
out
cwtl
test
dec
bswap
mov
push
xchg
mov
pop
sahf
dec
mov
stos
sub
adc
mov
ret
add
cltd
push
test
mov
sub
inc
jmp
in
loopne
fcomp
lock
ds
cmp
data16
imull
jb
sub
mov
sub
arpl
mov
scas
ss
dec
sbb
in
imul
cli
mov
mov
pushf
test
int
sub
mov
inc
xchg
adc
ds
out
sbbb
cmpsl
hlt
xor
mov
xchg
and
fcmovbe
push
ficompl
jno
dec
mov
jl
dec
mov
dec
cmp
mov
or
leave
add
repnz
pop
loop
xchg
xchg
and
std
or
dec
stos
mov
int
push
push
mov
sahf
test
jg
jns
les
pop
scas
xor
out
push
pop
add
stos
pop
leave
inc
lods
mov
test
call
adc
mov
xorl
bound
out
sbb
lret
pop
bnd
out
mov
lods
in
test
mov
dec
add
inc
mov
pop
jo
xchg
repz
push
les
out
sub
xor
dec
mov
or
mov
out
sbb
fisubrs
dec
push
clc
inc
xchg
outsb
subb
xor
push
cmp
dec
insb
pop
loope
cmpsl
fwait
adc
aaa
jno
jne
push
push
mov
outsb
bound
mov
js
xchg
sbb
ffree
mov
int
in
xor
dec
movsb
xchg
cwtl
icebp
cmp
rcrb
iret
int3
inc
fs
dec
icebp
addr16
insl
shl
xchg
ss
sbb
sbb
arpl
fisttpl
dec
stc
and
es
jns
repz
test
inc
movsb
xchg
rcl
xchg
iret
faddl
or
lahf
test
and
push
lods
dec
ljmp
xchg
xorl
fbld
dec
imul
ja
and
addr16
inc
add
mov
xchg
daa
insb
movsl
inc
or
jns
mov
ja
ds
bnd
cmpl
ds
out
sbb
ja
out
insb
jp
and
bound
jae
cli
icebp
jl
xchg
mov
rcll
fwait
addr16
mov
cld
inc
test
daa
or
bound
leave
shrl
pop
jl
xor
test
xchg
mov
shll
jae
cmpsb
push
in
cmp
sub
popa
arpl
fwait
sub
stos
jecxz
xor
mov
dec
mov
add
xchg
mov
je
mov
pop
mov
or
in
mov
xchg
sbb
mov
xchg
xchg
ljmp
xchg
jne
shl
sub
jmp
dec
bound
adc
int
sysret
or
dec
mov
in
aam
and
sub
dec
aad
stos
out
xchg
stos
iret
mov
insl
mov
cmp
or
pop
fstps
inc
mov
mov
pop
insb
xchg
mov
xor
ljmp
pop
inc
push
fmull
and
inc
jnp
and
or
xchg
pop
or
cwtl
or
mov
dec
out
fwait
jb
push
repnz
xchg
je
adc
pop
ficompl
mov
fwait
aad
cmp
pusha
pop
int
data16
jo
dec
mov
cmp
sahf
dec
dec
cld
xor
aaa
nop
jns
and
fwait
adc
xchg
stos
int3
inc
jns
inc
ss
outsl
push
mov
and
hlt
mov
xor
fs
aad
pop
sub
adc
int
jbe
mov
mov
inc
xor
mov
xor
push
pusha
lret
sub
mov
or
cmp
pop
cmp
repz
push
cmpl
lds
loop
or
je
test
sbb
xor
and
cld
cld
mov
and
test
jge
leave
scas
adc
push
mov
cs
cs
rclb
mov
lea
lds
ljmp
inc
inc
mov
ret
ljmp
stc
mov
popf
push
jge
idiv
pop
xchg
scas
xlat
mov
aaa
cs
fwait
or
das
aam
lea
int
cmpsb
scas
pop
leave
loope
ret
lods
cmp
inc
rcll
adc
mov
cwtl
ficoms
cs
inc
or
out
xchg
push
and
rcrl
repnz
push
push
test
cmp
push
fsts
ret
and
in
adc
push
pop
lods
int3
cmp
dec
mov
daa
je
pop
pusha
outsl
xlat
jge
inc
pop
pop
xchg
and
cltd
xchg
xchg
xchg
mov
cmpsb
inc
repz
adc
test
and
gs
jbe
scas
icebp
sbbb
mov
mov
mov
fs
dec
leave
les
inc
push
cmc
jmp
pop
lods
cmp
push
and
cmp
sub
jnp
push
push
iret
aad
mov
mov
inc
fs
mov
and
dec
outsb
loop
xchg
xor
cmp
stc
or
cld
shll
orl
cmp
mov
cli
push
pushf
test
push
dec
adc
mov
lret
test
or
or
mov
jae
iret
sub
xor
and
mov
xchg
xchg
dec
movsl
aaa
dec
lods
sti
mov
push
std
push
cmp
xorb
ret
fists
cmc
mov
out
lods
dec
mov
or
repnz
push
mov
nop
cmp
cltd
sbb
mov
add
sbb
mov
rcrb
or
lret
sbb
push
lods
sbb
outsb
mov
iret
xchg
dec
mov
or
shrl
popf
mov
pop
xchg
notl
subl
add
push
jle
push
cmp
xchg
xor
lcall
pop
sbb
sub
mov
jmp
sub
sub
cmp
add
cmp
movsb
sbb
pop
js
push
inc
iret
xor
ss
sbb
cli
or
movsb
stc
lret
pop
loope
add
adc
ret
mov
mov
popf
loope
int3
sbb
ljmp
add
mov
add
es
arpl
cmp
dec
aad
jg
leave
add
add
pop
inc
jb
sbb
xchg
adc
in
mov
popa
inc
push
stc
cmp
inc
push
cmp
xchg
ret
in
mov
icebp
pmuludq
icebp
in
or
jg
fwait
loopne
xchg
and
jo
inc
push
inc
cs
aad
data16
shrl
adc
int
fdivl
filds
cmp
pop
ret
adc
cli
pop
sbb
or
out
adc
incl
fidivs
sub
jmp
ds
mov
rcr
cmp
shlb
popa
or
mov
shr
mov
push
or
dec
int
lods
or
cs
cmp
sbb
and
sti
xchg
sti
loopne
dec
pop
and
inc
mov
sub
xchg
mov
mov
dec
jle
pop
pop
mov
lcall
jle
cmp
mov
lret
test
in
stc
pop
xchg
dec
jns
or
and
clc
in
push
mov
jne
push
add
sbb
popa
cmpsb
mov
or
sub
push
lcall
bound
dec
xor
jmp
sub
xchg
inc
mov
scas
jb
sub
roll
pop
mov
icebp
les
push
jno
stc
xchg
fwait
add
cmp
mov
pop
xor
mov
push
mov
sub
ret
lcall
lret
cmpsl
sti
add
mov
adc
out
shrl
mov
int
add
xor
dec
inc
cltd
cs
cwtl
stos
int
lea
xchg
aad
dec
mov
push
fwait
dec
sahf
mov
test
rcrl
jb
bound
jo
les
les
fstl
sub
add
lds
xchg
inc
in
into
xor
scas
mov
punpckhbw
or
add
mov
mov
and
cmp
out
jbe
loop
sub
das
xor
sti
addl
popf
mov
roll
dec
adc
push
mov
iret
les
lahf
cmpb
data16
mov
xlat
lods
push
sbb
or
pushf
mov
xchg
fsubs
or
push
xor
cmp
rcll
add
shl
xchg
repnz
pop
cmpl
dec
push
mov
ja
enter
push
xorb
add
add
mov
shrl
pop
repnz
sub
adc
imul
iret
xchg
fsubrl
adc
hlt
push
pop
cltd
clc
jmp
into
inc
adcb
test
dec
pminub
inc
cltd
jl
adc
loopne
shr
dec
dec
repnz
mov
sub
imul
pop
insl
clc
pushf
lods
mov
jne
mov
repz
out
test
mov
in
shl
fisttps
jle
dec
sub
ret
push
jmp
decl
xchg
xor
rorb
lods
sbb
push
xchg
or
sub
xchg
mov
or
imul
stos
jae
lret
pusha
sarb
push
insb
rcrl
or
jno
into
jae
cmp
je
adc
sbb
dec
jmp
adc
inc
add
inc
cmp
xorl
pusha
sbb
xchg
lock
mov
xor
mov
cmp
push
loope
push
xor
out
pmuludq
insb
mov
addr16
fwait
xchg
inc
aaa
jae
scas
daa
cmpl
ss
int
dec
mov
sbbb
ja
adc
push
lret
mov
pushf
and
nop
into
and
sbb
and
dec
rep
or
lds
repnz
cwtl
adc
movsb
pop
xchg
out
mov
stos
loopne
adc
sbb
shr
push
int3
pop
subl
mov
mov
into
inc
mov
cmp
sbb
push
lahf
cmc
mov
mov
cltd
xlat
test
adc
mov
jmp
test
add
popl
and
push
xchg
and
jge
xor
cmpsb
add
push
inc
xchg
out
xor
imul
pusha
xchg
daa
add
pop
ret
push
imul
jl
push
in
outsl
inc
and
dec
xor
cmp
dec
xchg
adc
sub
sub
dec
cwtl
popa
mov
loop
in
ror
into
cs
pop
pop
pop
mov
sbb
mov
xchg
xchg
scas
aas
lock
mov
out
mov
cmp
pop
cmp
outsb
inc
imul
xlat
mov
adc
mov
pushf
out
dec
xchg
aad
xchg
pop
jno
mov
push
jecxz
call
loop
nop
ffreep
call
mov
push
xor
int
push
ret
sbb
add
jecxz
or
mov
pop
jecxz
sub
sbb
mov
mov
mov
inc
push
lock
dec
mov
xchg
roll
cmp
jmp
jecxz
shrl
dec
mov
mov
jp
in
movsb
add
jmp
sbb
pop
push
inc
rcrl
xorb
pop
xchg
scas
out
insl
in
xor
mov
cwtl
or
lret
sbb
inc
cli
aas
cmp
pop
inc
xor
in
fdivl
push
insl
jns
pop
shlb
leave
shrl
jb
ret
sbb
mov
fstps
idivl
orb
jecxz
jne
cmp
movsl
xchg
xchg
punpckldq
insb
add
mov
out
adcl
rolb
call
lods
mov
in
std
cltd
add
lock
ljmp
adc
imul
sbb
adc
out
clc
out
mov
lock
mov
cmp
push
jno
sbb
shll
push
mov
fisttpll
inc
arpl
std
das
sbb
ja
push
scas
scas
xor
mov
cwtl
dec
cmc
sub
mov
insl
xchg
adc
or
xchg
dec
mov
fcom
sub
xor
call
xor
and
jo
insb
out
xchg
mov
inc
cmp
daa
or
inc
fisttps
adc
mov
nop
cmp
sub
sub
test
mov
sbb
ficoml
mov
add
call
shrb
clc
std
mov
jp
xor
mov
in
push
mov
jl
sarb
xchg
daa
mov
xchg
mov
push
mov
and
shll
outsl
jmp
and
cmp
pop
fyl2x
rcr
test
push
adcl
lods
cmpsl
jecxz
popa
dec
je
xor
jbe
jg
adc
fadd
jl
data16
mov
push
sub
mov
adc
fcomp
mov
mov
lcall
pusha
add
push
xor
pop
cmp
in
cmc
inc
xchg
shrb
imul
mov
cmp
out
shlb
xchg
mov
jg
lcall
inc
mov
push
adc
pop
sahf
mov
sub
sbb
fcom
gs
stos
cmp
sub
xor
inc
iret
xchg
mov
mov
cmp
push
ret
fnstcw
imul
push
sbb
data16
loop
add
inc
ss
ljmp
lahf
xchg
mov
jp
push
cli
mov
push
xor
mov
imul
cmpsb
into
lds
fcoms
outsb
mov
push
gs
lock
in
push
or
push
and
xchg
adc
lcall
mov
push
jnp
pop
mov
xchg
adc
cli
inc
push
xlat
out
aam
cmc
lahf
sbb
idivl
popf
jle
cmp
jp
xor
pop
pop
jecxz
and
jns
pop
sub
fiadds
push
or
pop
lcall
mov
lods
cmpsb
xchg
or
out
adc
gs
ljmp
outsl
pop
mov
out
insb
or
push
movsb
mov
sub
and
xchg
xor
mov
hlt
inc
push
inc
jae
lret
and
in
and
adc
inc
mov
cmpsb
out
das
or
fdivr
cld
call
bound
test
mov
pop
out
ja
aad
mov
shll
ret
push
test
mov
push
cld
stos
or
lret
out
dec
insl
dec
clc
arpl
adc
mov
jnp
cmpsb
mov
lea
lods
jg
loopne
orb
pop
imul
mov
jmp
jno
push
fwait
add
pop
add
scas
popf
bound
or
mov
dec
ss
jg
lret
xchg
xchg
pusha
xchg
insl
push
cmp
psrld
daa
mov
dec
aaa
sbb
fsubrl
inc
mov
popl
xchg
shlb
das
inc
dec
push
mov
sub
pop
mov
stos
mov
cmpxchg
fisubl
adc
sub
addl
or
mov
push
imul
pushf
xor
xchg
mov
in
dec
out
dec
mov
insb
ret
lods
mov
or
jns
mov
shlb
fwait
imul
fistps
jno
inc
adc
sub
clc
stos
rol
stos
mov
mov
arpl
add
movsb
mov
mov
sbb
pop
imul
mov
push
scas
pop
ljmp
imul
jmp
cli
or
and
mov
int
fstpl
xor
sbb
cmpsb
inc
lcall
pop
push
in
rcr
inc
xor
xchg
and
sbb
daa
mov
or
or
mov
test
int
sarl
cld
leave
cwtl
clc
fprem
and
pop
fs
mov
das
sbb
xchg
arpl
hlt
lea
test
xchg
repnz
cwtl
fwait
cmpl
movsb
lea
xchg
cmp
mov
lea
scas
testl
outsl
arpl
fmuls
pusha
aaa
pushf
xor
adc
aaa
outsb
mov
lret
cmp
dec
lock
cmp
dec
aam
mov
mov
dec
ror
into
sbb
xchg
mov
movsl
scas
aas
cs
aad
and
lret
sbb
xchg
lods
mov
pop
les
mov
dec
mov
fs
mov
fstpt
adc
js
insb
lret
sarl
frstor
cs
push
mov
scas
fisubs
shrb
adc
out
or
test
sub
divb
fstpt
repnz
cltd
fcmovbe
std
add
adc
mov
jno
sti
daa
and
sub
jp
jne
cmp
jae
jnp
test
loop
outsl
call
mov
iret
fisttpll
test
lock
mov
aad
dec
xor
dec
jg
cmp
mov
clc
mov
lock
or
repz
mov
mov
pop
add
fxch
jge
lock
sub
outsl
sti
pop
lock
pop
jne
repz
inc
mov
popf
aam
test
jmp
mov
mov
fcompl
pop
adc
mov
adc
pop
ret
mov
and
insb
stc
arpl
jmp
cmpsl
loopne
mov
sub
pushl
cli
dec
adc
lcall
insb
sbbl
lahf
sub
inc
jb
daa
jne
lea
add
inc
stos
push
test
sub
fidivl
mov
shl
jg
stos
hlt
dec
leave
or
pop
lret
fwait
aad
out
fyl2xp1
jp
inc
fldcw
loop
das
inc
push
and
adc
shrl
jo
std
ja
lcall
jns
jp
mov
sbb
push
mov
push
push
push
dec
dec
sbb
xchg
int
pusha
add
jge
insb
cmp
mov
cmp
lahf
out
and
enter
shll
out
cmpsb
pop
adc
clc
jmp
or
jl
mov
sbb
mov
inc
lahf
cmp
cld
add
fmuls
inc
sbb
sub
sub
jne
or
cltd
mov
xchg
ds
jg
cmp
and
imul
jb
fidivrl
dec
adc
sub
mov
mov
cld
pop
bound
inc
pop
mov
mov
jmp
jge
pop
sub
addr16
popf
js
inc
arpl
mov
cmp
xchg
arpl
aad
mov
shrl
dec
addr16
jne
imul
daa
inc
sub
xchg
jno
outsl
add
jge
iret
mov
xorl
repnz
cmpsl
xlat
adc
in
fistps
xor
sbb
sbb
and
out
fcoml
jne
dec
inc
cmc
loop
adc
push
and
sbb
adc
stos
loopne
fldl
xor
lods
lret
mov
cmp
sbb
subb
lcall
aad
add
pop
sub
imul
lahf
int3
push
or
loope
mov
repnz
je
hlt
stos
adc
mov
stc
scas
push
push
push
loop
mov
ja
mov
dec
jns
or
cmp
sub
and
icebp
insl
rcll
loope
mov
dec
iret
jge
ret
in
add
xor
xor
and
sbb
icebp
sbb
pop
lea
or
dec
add
insb
lods
sub
lahf
push
aad
gs
lods
out
test
addr16
push
sub
pop
sbb
addb
cmp
insb
pop
and
pop
jno
pop
sub
scas
jmp
sbb
cld
mov
lret
push
aas
mov
clc
jne
xchg
loopne
into
pop
push
ret
xchg
mov
lods
jge
fldenv
or
jnp
mov
pusha
insb
jge
insl
add
xchg
lock
insb
das
push
cmpsl
add
sub
fwait
push
rcrl
lods
dec
fildll
cs
lds
adc
cwtl
dec
imul
jo
mov
inc
aaa
jl
add
cmp
inc
fstpl
or
or
iret
push
xchg
xchg
cmpsb
mov
xor
icebp
loope
cltd
mov
mov
jb
pushf
sahf
push
inc
insl
outsl
pop
rcr
adc
and
stc
push
popl
jg
ret
pushf
int3
cmp
jo
adc
adc
mov
iret
jno
jns
test
jg
sub
sub
pop
scas
jp
push
and
add
sub
ljmp
icebp
subb
jp
divl
jno
add
mov
add
xchg
adc
xor
loop
xchg
push
loopne
adc
aas
addl
iret
inc
and
xchg
jge
aad
push
xchg
aaa
add
jbe
stc
pop
sub
jns
out
add
mov
mov
dec
das
inc
ds
popf
jnp
imul
sbb
or
loop
sub
xchg
aaa
in
popa
dec
fsts
xchg
adc
loop
sbb
xchg
les
xor
mov
pusha
sub
aad
push
pop
sahf
mov
push
pop
mov
xchg
fst
loopne
adc
fwait
movsb
push
pop
pop
fimuls
imul
mov
xchg
das
out
mov
add
cmpl
int
shlb
in
lock
push
lds
stos
out
adc
cld
push
sbb
imul
dec
push
test
dec
mov
mov
xor
cli
outsb
dec
lds
mov
xchg
pusha
dec
lods
int
jbe
mov
inc
mov
push
dec
lahf
mov
rclb
cmp
mov
pop
mov
inc
in
xchg
mov
shrb
pop
in
fmul
or
mov
add
sbb
sbb
arpl
inc
inc
notb
push
cmp
xchg
stos
int
test
imul
jb
ss
dec
pushf
insl
ljmp
mulb
push
sub
adc
sub
lret
pop
popf
daa
arpl
xchg
ffree
int3
popf
test
pop
pop
pop
stos
les
cmp
aad
sbb
lret
cmp
sub
pop
divl
pop
xchg
mov
mov
outsb
mov
cmc
in
mov
imul
pop
mov
or
fwait
sub
je
movl
xchg
sbb
nop
repz
test
incb
mov
jg
mov
ror
mov
fisttpl
xor
cli
and
pop
xor
mov
lock
pop
sbb
push
pushf
into
es
enter
scas
lret
repnz
xor
xor
rclb
daa
xchg
mov
sbb
pop
pop
iret
rorl
or
xlat
enter
sahf
sub
gs
roll
pop
or
cld
sbb
insl
outsb
mov
cmp
jge
pop
or
and
aas
jmp
and
rorb
mov
push
neg
shrb
xchg
inc
inc
int3
xchg
repnz
lret
lcall
xchg
jg
mov
push
leave
mov
sub
inc
call
mov
sub
into
jg
mov
call
xor
rcrb
test
pop
jns
mov
push
dec
mov
test
fisubrs
minps
bound
mov
cmp
push
fisttpll
icebp
jns
sbb
fwait
mov
xchg
shlb
dec
inc
stos
adc
sbbb
xor
movsl
pop
data16
fildl
and
leave
in
pop
sub
cld
sub
repz
sub
cltd
cmp
or
and
mov
add
pop
daa
mov
mov
xor
ret
enter
dec
add
das
imul
lods
xchg
adc
dec
lret
test
add
lods
js
sbb
jo
xor
addr16
mov
ficomps
clc
popf
aam
movsb
push
xor
test
push
sbbb
fbld
xchg
dec
inc
mov
stc
mov
imul
jbe
mov
mov
mov
or
jmp
sub
fucomip
or
lods
sbb
xor
mov
not
sbb
xor
xchg
sub
mov
mov
xor
mov
fdivrl
jns
adc
pop
movsb
and
sbb
and
mov
add
mov
pop
movsb
andb
sub
mov
das
mov
cmp
inc
daa
sub
or
pushf
leave
mov
or
lds
pop
pushf
sahf
shlb
mov
cmp
shrl
mov
or
shl
xor
imul
push
push
and
mov
div
jle
push
daa
pop
popf
add
and
ds
pop
cld
mov
mov
aad
jbe
mov
mov
out
jmp
fs
fildl
push
lret
jbe
pusha
cmp
jle
orl
cmp
ret
xchg
out
adc
inc
repz
out
adc
inc
sbb
cmc
in
cwtl
repnz
mov
xor
lahf
adc
das
mov
cmc
xchg
repnz
sub
fisubrl
loop
rcll
and
jo
mov
aaa
xchg
lret
pop
pop
jno
mov
dec
adc
jne
and
lret
jg
dec
sbb
jge
jbe
mov
xor
inc
ficompl
inc
shll
jg
mov
sbb
nop
xchg
into
fiaddl
adcb
or
mov
dec
sub
pushf
and
xor
inc
sti
lcall
popa
flds
mov
xlat
adcl
and
sti
lods
mov
xchg
xor
cmp
mov
pushf
mov
repnz
push
int
outsb
inc
enter
xchg
sub
fs
or
or
cmp
insb
fistps
shl
xchg
adc
push
xchg
pop
cmp
into
ret
xor
push
insl
pop
push
repz
or
sub
cmp
out
test
movsb
and
mov
mov
push
add
adc
pop
sbb
cmp
sub
movsb
sbb
loop
lods
mov
mov
mov
out
lahf
mov
fists
aaa
cmpsl
sub
mov
cmovbe
fldl
inc
lret
mov
sub
jns
outsb
jo
xor
push
jmp
dec
movsb
inc
out
or
inc
xor
enter
inc
dec
mov
clc
rcrb
into
gs
or
mov
lods
cltd
cmp
cmp
pop
sarb
ljmp
jae
add
cs
and
and
mov
pop
mov
xchg
das
mov
int
cmp
psrlq
jecxz
insb
movsb
pop
push
lret
lds
stos
arpl
insb
mov
ja
fs
push
shlb
out
lock
and
std
mov
xorb
mov
mov
popf
cmp
cmpsl
bnd
inc
add
sar
stos
imul
lds
pop
dec
add
push
jle
and
out
dec
aad
cmp
movzbl
dec
ret
xchg
jnp
adc
jns
push
cmp
push
clc
stc
sub
or
popa
mov
cmpsl
cmp
mov
push
xchg
mov
sbb
mov
in
push
push
test
pop
inc
subl
sbb
lahf
mov
cmpsb
mov
les
xlat
aaa
rol
mov
std
mov
pop
lret
inc
aas
loop
dec
inc
xchg
repz
jl
jb
xchg
ja
xchg
arpl
test
imul
jno
jnp
xchg
pop
pushf
lea
jmp
insl
test
data16
jbe
fdivrl
nop
test
dec
push
add
xor
shl
je
out
rcll
inc
xchg
pop
mov
and
jmp
dec
repnz
out
xlat
int
gs
mov
xlat
inc
add
out
or
mov
push
sub
lahf
inc
sbb
mov
mov
dec
mov
and
add
leave
jae
mov
mov
sbb
lods
les
popf
ss
adc
divb
sub
jns
sub
or
sti
gs
rcl
jns
test
cltd
jcxz
pusha
lret
pop
aaa
rcrb
notl
xchg
mov
sbb
push
inc
loopne
cmc
and
or
rcrl
and
je
sbb
xchg
stos
or
out
inc
addr16
shrl
lahf
jns
push
in
loopne
adcl
out
jge
arpl
pop
xchg
movsl
test
sbb
cs
nop
and
icebp
shlb
mov
push
imul
cmp
mov
les
fistps
pmaxsw
std
mov
or
xor
mov
pop
and
xchg
pop
pop
imul
push
js
in
std
mov
and
xchg
inc
cmp
pop
sub
push
mov
in
lds
or
leave
call
jmp
dec
stos
sub
out
push
inc
cmpsl
imul
stos
cld
jmp
mov
incb
jnp
out
adc
jb
mov
cli
mov
mov
adc
popl
das
bound
leave
pop
and
insb
pop
int3
sbb
mov
jle
lea
inc
mov
mov
mov
inc
add
jle
dec
addr16
lahf
xor
inc
cld
arpl
cmp
add
cmp
xchg
stos
mov
outsl
shll
mov
scas
cmp
movsl
pop
push
rcrl
lods
div
xor
and
popl
lret
insl
rol
and
pop
mov
dec
ljmp
insb
vpunpcklwd
cmpsl
icebp
mov
jge
outsb
adc
ret
mov
dec
sahf
mov
push
lea
mov
arpl
int3
mov
push
pop
enter
loop
int
or
bound
cmp
lret
jb
add
inc
or
pop
push
ret
push
push
add
sbb
adc
sub
inc
sti
mov
and
repnz
ljmp
xor
imul
mov
pop
cmp
and
inc
jne
inc
mov
jmp
mov
mov
filds
add
xor
mov
mov
lock
lods
sub
mov
mov
in
sbb
jne
dec
outsl
enter
push
insb
inc
mov
add
xor
jne
mov
and
cmp
mov
sbb
jecxz
xor
movsb
pop
or
cltd
clc
std
and
ja
popf
sbb
sub
xchg
scas
push
xchg
push
cmpsb
mov
mov
or
insb
mov
in
ss
int
xchg
sub
push
cmp
mov
lahf
xor
xor
icebp
stos
jb
mov
push
sti
mov
jne
movsb
adc
cli
fcomps
ja
sub
xor
fisubrl
mov
add
bound
into
push
fnstenv
jmp
dec
xchg
lock
int
pushf
nop
je
mov
stos
add
popa
xchg
je
sub
clc
jo
xchg
and
xor
push
incl
nop
loop
pop
mov
ljmp
and
sbb
ror
fisubl
and
ds
cmp
mov
mov
cmp
xor
sub
push
mov
outsb
gs
test
inc
insb
mov
or
je
pop
in
jmp
pop
test
jl
xchg
adc
cmpsl
int3
or
dec
loop
mov
das
push
inc
dec
leave
fcomip
outsb
jns
lods
or
inc
sbb
std
jl
and
pop
mov
cmpb
js
ss
sbb
dec
fwait
movsb
jl
xor
sahf
jbe
inc
imul
cli
aam
xor
xor
dec
test
insl
pusha
or
sarl
xchg
fwait
jnp
aad
ljmp
xchg
leave
out
arpl
repz
dec
cld
jns
aaa
es
add
mov
jge
jns
push
in
xchg
adc
mov
dec
rcll
xabort
xchg
adc
pop
mov
addb
imul
pop
imul
or
sarb
push
es
daa
dec
cltd
xor
add
adc
jo
sbb
popf
and
jnp
adc
pop
shl
sbb
adc
cmc
sbb
add
cld
addb
lods
sbb
pop
stos
mov
lock
pop
or
jl
loope
push
mov
cltd
add
pop
jnp
mov
mov
test
jo
pusha
jo
push
inc
fcoml
data16
pop
mulb
in
out
dec
mov
rclb
nop
xor
add
outsb
outsl
into
mov
jbe
sahf
push
xlat
fldenv
fnsave
daa
dec
cmp
hlt
push
out
inc
dec
push
sbb
xchg
cmpsb
dec
adc
dec
xlat
ret
xchg
test
aaa
fs
loope
jbe
and
dec
xor
outsl
data16
inc
nop
sti
jne
sbb
loope,pt
fcoml
add
jmp
xor
popl
fwait
xor
or
dec
and
lahf
adc
pop
dec
adc
inc
or
add
testb
sbb
mov
incb
xor
gs
lods
sbb
cs
std
push
cmp
jg
sub
in
sbb
jno
lcall
jle
and
rcrb
fstps
mov
dec
lds
les
pop
lock
cmpsl
jne
dec
add
sti
daa
aam
sub
rorl
andl
inc
scas
pop
or
xchg
dec
mov
sub
jecxz
lea
add
fdivl
iret
mov
lret
pushf
fistpl
shl
adc
fadd
lret
and
or
jbe
nop
lret
out
dec
test
fcoms
adc
add
pushf
jecxz
enter
and
lahf
ss
dec
mov
cmp
lret
push
pop
and
mov
inc
scas
dec
stc
ss
or
inc
sbb
pop
pop
dec
cmpsl
out
in
mov
out
add
les
shl
movsl
cmc
sub
pop
sbb
xor
lods
pop
sub
pop
add
adcb
fs
arpl
push
xchg
clc
mov
es
or
cmp
pop
es
and
cmc
loopne
shrb
dec
mov
adc
sub
xor
out
mov
jecxz
aam
mov
stos
pushf
dec
mov
pop
adc
jbe
add
push
aaa
adc
shlb
push
cmpsb
shrb
push
adc
inc
repnz
sbb
orb
mov
or
repz
jae
pop
in
lea
lds
std
out
and
ss
push
jecxz
fstpl
test
aad
bound
hlt
lret
mov
pop
fstpt
jnp
xchg
fs
mov
push
arpl
mov
loop
fcomip
ds
mov
cmpsb
inc
push
jge
push
out
or
mov
sbb
inc
loop
lds
mov
and
mov
jl
enter
in
mov
dec
pop
push
repnz
cmpsb
inc
jne
jne
mov
jp
test
fstl
scas
cmc
mov
stos
push
sbb
aad
pusha
lret
push
jp
ljmp
mov
lock
cmpsb
xchg
xchg
call
sbb
sbb
cltd
or
mov
cmpsb
js
loop
jecxz
jl
aas
pop
mov
sub
mov
cld
sbb
xor
ss
les
ret
cli
sbb
add
pop
mov
jle
cld
push
xor
sub
push
push
addr16
pop
aas
cwtl
popa
dec
xor
scas
dec
adc
push
push
sbb
dec
sbb
sbb
icebp
outsl
adc
mov
mov
ja
in
pop
xchg
cmpl
mov
mov
xchg
addl
or
icebp
outsl
ljmp
pop
movsb
pop
bound
lret
xchg
outsb
imul
ljmp
imul
inc
xchg
dec
enter
lds
cmp
mov
mov
test
or
jae
out
mov
xchg
out
insb
pop
mov
inc
mov
or
and
cmp
dec
ja
adc
jmp
or
jmp
test
add
dec
shlb
out
mov
xchg
jbe
insb
inc
loopne
and
xor
shrb
enter
add
inc
push
bound
mov
and
lcall
outsb
mov
push
cli
test
sbb
mov
sbb
inc
out
loopne
call
xchg
mov
mov
xlat
ljmp
fnsave
data16
cmp
sti
sub
fs
push
fs
iret
add
incl
or
insb
inc
mov
lock
dec
insl
lret
push
jl
shl
enter
lods
int3
push
sti
jnp
loopne
inc
push
jae
xor
pop
inc
popa
das
outsl
jbe
jmp
pushf
sahf
lahf
inc
mov
jae
or
ret
rolb
les
push
int3
fstpl
daa
fbld
inc
outsb
xor
out
ljmp
hlt
pop
fnsave
lcall
aam
xchg
das
and
cld
xchg
fwait
xlat
sbb
ja
adc
cmp
lret
mov
mov
cmp
popf
inc
push
push
mov
push
movsb
lock
jg
mov
and
push
aad
out
xchg
enter
js
jns
shll
and
cmpsb
xor
test
jo
daa
lahf
lock
rolb
xchg
jb
sub
push
inc
push
cmp
xor
xlat
push
lahf
sbb
xor
mov
mov
mov
div
push
mov
lea
add
mov
jne
pop
js
rcll
push
cmp
gs
shl
adc
popa
xchg
xchg
and
pop
mov
xchg
add
out
mov
add
outsl
ja
bound
ds
