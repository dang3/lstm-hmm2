push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
xor
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
mov
xor
add
incl
mov
push
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmp
je
mov
jmp
push
call
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
cmp
je
push
call
mov
push
push
call
mov
call
add
cmp
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
push
call
pop
ret
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmp
jb
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
push
lea
push
push
call
lea
push
push
call
add
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
or
lods
dec
xchg
das
sub
adc
leave
jno
sbb
adc
dec
adc
and
and
jno
test
in
fisubs
mov
ret
sub
inc
aad
mov
jle
dec
jns
xor
test
mov
jg
dec
enter
xchg
ss
leave
in
mov
and
adc
test
dec
sub
push
dec
fnstsw
add
inc
lea
sbb
fisubs
repnz
push
cmc
xor
xlat
inc
add
mov
pop
jo
cltd
sbb
push
push
adc
in
in
add
dec
mov
stos
lahf
loope
add
dec
aad
pmaxub
sub
dec
repnz
add
arpl
adc
stos
and
xor
out
sbb
mov
cltd
loopne
cli
or
leave
aam
fsubrl
adc
mov
sarb
fldt
jl
sti
stos
and
pop
data16
leave
xchg
inc
dec
add
ljmp
je
mov
lret
divb
xor
xlat
iret
add
inc
jns
shll
jl
popf
arpl
int
iret
fsubr
ret
mov
xor
sbb
jns
xchg
dec
dec
jnp
lret
aas
cmp
shrl
mov
jb
mov
jb
imul
arpl
add
movsb
cld
sbb
or
mov
adc
xchg
sub
scas
aaa
adc
das
insl
or
or
jg
loop
lods
test
insl
jbe
cmp
jg
movsb
cmc
imul
and
cmp
or
lret
int3
lret
xchg
xchg
jo
jecxz
lret
cmp
jge
es
add
push
add
mov
mov
sub
push
popf
aam
jb
scas
sub
inc
or
mov
xchg
xchg
imul
into
jp
fildll
add
mov
push
jmp
xchg
push
dec
in
fwait
cmp
ss
xchg
je
popa
mov
adc
rcrl
lods
loopne
mov
inc
jns
xor
jb
pop
lret
mov
adc
fidivs
xor
mov
outsb
push
jle
adc
mov
je
mov
cld
in
xchg
movsb
sbb
fcmove
adc
inc
les
dec
push
enter
int
cld
jnp
std
jne
or
cmpsb
xchg
cmpsb
mov
add
add
data16
xchg
rcrb
ss
sub
mov
xlat
mov
data16
insl
jmp
dec
sub
sahf
mov
sbb
and
insb
add
inc
mov
xor
arpl
xchg
add
hlt
fdivrl
and
aam
lods
push
add
add
mov
jb
pause
dec
rol
mov
sub
ljmp
test
in
hlt
sti
cmp
in
or
cmp
cmp
test
iret
push
sarl
and
cli
test
mov
aas
shl
sub
inc
imul
add
sbbl
insl
std
mov
loope
xor
sub
pop
jnp
faddl
test
jmp
dec
test
subl
add
nop
xchg
jmp
mov
dec
mov
mov
inc
roll
aam
test
mov
mov
jge
dec
int
xor
rorb
jp
adc
or
cld
push
pop
jno
inc
negb
ljmp
xor
ret
rolb
add
decb
xchg
mov
and
mov
ret
bnd
mov
repz
mov
ljmp
bound
in
rolb
cmp
insl
sbb
idivb
dec
test
loope
xor
clc
bound
mov
cltd
mov
mov
mov
push
test
stos
arpl
mov
jno
add
inc
ret
rolb
or
sbb
cmp
cs
xchg
sti
in
xchg
push
xorb
mov
fnstcw
mov
sbb
jo
aaa
push
mov
add
shrl
sbb
pop
aaa
dec
fstl
cmpsb
xor
je
shl
cmc
push
push
xor
jae
xor
icebp
js
outsb
popf
idivl
ror
xor
sbb
dec
in
addr16
adc
sub
inc
fidivrl
xchg
jbe
jbe
ss
mov
xchg
xor
inc
sbb
fisubs
cs
jb
jno
sbb
add
daa
xchg
push
rorb
dec
pop
stc
dec
lcall
push
sub
and
lfs
sub
ljmp
adc
sbb
aad
fistpl
fadds
xchg
sarl
sub
add
add
cs
in
inc
dec
das
pop
mov
inc
mov
xor
sub
mulb
lret
dec
and
loope
addr16
daa
loopne
movups
cs
xchg
ss
xchg
xchg
sbb
rorl
dec
lcall
jp
scas
lock
ret
addr16
out
adc
cmc
int3
addr16
xchg
insl
jno
incb
dec
aaa
push
shrl
int
std
dec
xchg
and
jne
jmp
cltd
xchg
adc
and
dec
add
xchg
sbb
jno
pop
mov
adc
inc
js
pop
push
fcmovnu
add
lret
add
add
xor
mov
stc
repz
sar
loop
push
imul
cmp
dec
push
xchg
ltr
ficompl
shrb
mov
sub
jg
mov
or
sub
adc
xchg
mov
inc
pop
adc
push
inc
aaa
int
adc
mov
addl
mov
out
sub
dec
pop
mov
cmp
lods
cltd
xchg
lahf
pushf
inc
jno
scas
dec
cmp
mov
add
xchg
sub
add
flds
jbe
iret
ret
movsb
addl
pop
scas
daa
mov
cmpsl
mov
dec
orb
lea
sbb
adc
sbb
call
sti
mov
inc
pushf
arpl
sub
mov
test
loope
push
pop
or
imul
ja
jb
shll
inc
sub
mov
sub
imull
hlt
pop
pop
jno
test
jl
xor
jl
mov
sbb
int
inc
mov
mov
sbb
cs
gs
es
add
outsb
pop
mov
mov
jb
pop
iret
mov
pop
scas
or
movsl
inc
xchg
imul
dec
sub
test
xor
jne
mov
mov
mov
or
and
mov
clc
out
push
mov
cwtl
sahf
mov
cli
fcoml
cld
adc
push
push
ret
ljmp
or
sub
xchg
and
int
jo
adc
pop
mov
mov
add
sarl
xor
nop
mov
mov
push
cmp
add
fcomps
or
sarb
fstl
jae
stc
outsl
mov
sbb
cwtl
out
push
je
es
sub
and
or
adc
push
push
test
mov
mov
pop
sbb
jns
lock
loopne
popa
xor
rorl
push
jo
mov
adc
cs
xchg
cmp
add
cs
sbbb
popa
xor
gs
and
mov
fcoms
mov
icebp
push
cmp
mov
jae
lds
ret
adc
stc
lret
fstl
jne
imul
push
adc
rcrl
ds
push
fisubrs
shl
mov
movsb
pusha
xchg
add
mov
mov
iret
inc
leave
scas
cmp
xchg
xchg
xor
mov
jne
aaa
test
xchg
arpl
xchg
mov
mov
test
dec
cmp
and
add
insl
scas
mov
sub
into
lcall
dec
and
xchg
icebp
int
mov
inc
push
movsb
sbb
mov
ss
mulb
scas
aas
mov
mov
ljmp
push
andl
rorl
fdivrl
lahf
mov
ljmp
out
movsl
scas
aam
xchg
cmp
jns
int3
lock
cmpl
mov
or
lahf
sbb
jle
cmp
inc
scas
insb
les
push
mov
ffree
shrb
sti
mov
dec
push
adc
jnp
rcrl
scas
pop
push
jb
out
movsl
cmp
dec
add
add
and
push
push
or
xchg
jnp
add
sbb
idivl
pushw
push
repz
add
iret
lock
jns
mov
and
divl
js
cmp
pop
cmp
jmp
dec
sub
xchg
bound
cld
xor
mov
sbb
jecxz
out
adc
jne
xor
enter
xor
loopne
ret
decl
aam
ss
cld
mov
push
mov
in
push
jl
pop
mov
out
jno
push
pop
mov
repnz
cltd
popf
das
dec
lods
inc
push
mov
fidivl
add
xchg
inc
jns
xchg
inc
push
imul
rcr
dec
xor
inc
sub
rcl
loopne
xchg
out
and
cmpsl
jne
out
arpl
lret
cltd
jbe
fcompl
push
cld
mov
sbbb
mov
mov
dec
mov
hlt
out
mov
sbb
repz
test
inc
cmp
and
icebp
adc
lret
pop
aad
sbb
jb
inc
dec
or
aaa
push
adc
adc
pop
clc
and
je
popa
fcoml
dec
test
cwtl
outsl
add
add
mov
push
test
cmpsl
and
ss
jmp
sbb
dec
jp
push
xor
xor
lock
in
jecxz
addr16
aad
dec
adc
mov
pusha
fimull
xlat
jnp
fsubrp
pushf
jmp
movsl
dec
fsubs
cld
daa
dec
js
addr16
and
or
imul
inc
pop
daa
adcl
mov
or
sahf
ja
push
jbe
mov
addr16
nop
cmpsl
cs
push
hlt
add
add
sti
in
or
cmpb
imul
imul
out
mov
rolb
sub
shll
in
pop
data16
xor
enter
mov
jno
scas
or
push
scas
loope
push
fistpll
dec
adc
movsb
jno
mov
inc
push
inc
sbb
and
cmp
cmp
hlt
cwtl
fsubrl
movsb
jns
adc
in
jp
push
imull
jmp
cmp
sub
mov
daa
aam
pusha
dec
pop
and
pop
std
cmp
daa
sbb
pop
outsb
add
add
add
or
add
mov
or
xor
loop
shlb
jle
push
nop
dec
and
pop
test
sub
pop
pop
stc
inc
push
nop
sbb
and
scas
sub
add
fsubr
in
mov
and
jmp
push
jmp
mov
out
leave
push
inc
sbb
ror
imul
rclb
and
ret
imul
scas
test
jle
cwtl
mov
sti
inc
in
adc
lock
das
mov
scas
or
shr
sarb
cmp
add
mov
jp
push
xor
cmpsb
int3
lods
and
or
jge
stc
mov
shl
or
sti
or
pop
pusha
insl
repz
js
adc
sub
je
sahf
push
decl
mov
sub
xlat
jbe
add
add
sbb
or
test
sbb
xchg
and
sar
jp
cs
xor
dec
xor
out
ljmp
jbe
rclb
shrb
and
mov
aam
add
rolb
pop
push
push
xchg
xchg
popa
or
jno
rolb
ret
mulb
jb
dec
btr
mov
mov
jge
inc
add
dec
sub
ret
sub
mov
sub
lret
cmp
mov
push
cmp
scas
cltd
loop
xor
loope
rcll
pop
mov
pop
mov
idiv
movsb
aad
inc
mov
add
cmp
nop
sahf
pop
inc
pop
mov
mov
fmull
sub
lss
rol
pop
cmc
scas
mov
sub
stc
fs
addl
mov
rorl
mov
pushf
pop
pop
dec
push
jns
and
mov
aam
sub
pop
push
mov
cmp
mov
daa
dec
pop
xor
xchg
out
inc
jmp
mov
out
cwtl
cmp
adc
mov
push
outsb
mov
and
insb
add
adc
pop
mull
repnz
lods
inc
rorb
sbb
and
aaa
mov
sub
and
adc
or
out
push
mov
movsb
jmp
nop
shrb
xchg
cltd
in
pop
xchg
mov
jle
jbe
test
adc
pop
or
xor
mov
sarl
add
lcall
xor
jbe
adc
add
push
cli
cmp
sbb
cli
outsb
pop
inc
lds
sub
roll
ds
cmp
push
pop
and
dec
rcr
sbb
mov
notl
add
std
sahf
adc
jns
arpl
icebp
mov
mov
jno
mov
or
cmp
fwait
jp
repnz
syscall
fs
cmpb
sbb
js
xchg
lea
jg
dec
xchg
xchg
daa
rcr
cmp
fidivrl
xlat
scas
mov
lcall
lcall
pushf
xorl
call
sub
rorl
insb
xchg
loop
add
or
jecxz
or
cmc
iret
sbb
sub
sahf
jl
call
daa
jne
das
mov
mov
dec
dec
nop
jmp
push
sbb
pusha
mov
cwtl
jns
enter
fisubrs
pop
flds
sbb
push
movsb
dec
jmp
xchg
sbb
push
jae
sahf
jno
push
adc
inc
adcl
call
je
in
or
ret
push
xchg
push
out
mov
jp
fdivr
adc
or
jmp
andb
cs
fisubs
mov
mov
lret
jno
cmc
xchg
out
xor
mov
xchg
sti
bound
push
pop
mov
arpl
aam
mov
pop
cli
mov
imulb
jecxz
mov
jecxz
daa
mov
jbe
jg
inc
cld
sub
pop
mov
add
dec
out
leave
mov
sbb
imul
sbb
mov
and
and
leave
je
jae
xchg
fstps
push
jecxz
adc
out
and
fisubs
mov
iret
sbb
insl
jmp
rclb
cmp
push
inc
xchg
sbb
mov
rcrb
roll
add
fimuls
mov
cmc
stos
out
loop
iret
pop
sahf
dec
aam
test
pop
loop
push
sbb
lahf
scas
dec
imul
popa
jno
test
pop
lret
mov
loope
push
fisubrl
adc
xchg
inc
cmp
mov
pop
scas
dec
sbb
insl
je
in
add
outsl
pop
xchg
pop
jo
bound
pop
and
xor
mov
scas
sarb
gs
xchg
movsl
push
out
in
shrb
inc
jg
dec
popf
mov
mov
pop
test
xor
mov
mov
pusha
sub
and
push
int
fiadds
hlt
push
ret
sbb
add
mov
cmc
push
jl
imul
cwtl
push
imul
insb
std
dec
inc
and
gs
ds
push
xor
lds
cwtl
fdivrl
aam
inc
pushw
mov
loop
test
int3
push
pop
imul
lods
ret
xor
andb
ja
inc
sbb
scas
mov
mov
or
int3
mov
mov
push
xchg
dec
inc
sbb
xchg
ja
insl
inc
sbb
inc
lea
nop
movsb
inc
fbstp
mov
xchg
rorl
pop
mov
xchg
add
adc
mov
ljmp
out
mov
outsb
push
or
loopne
or
ss
jae
pop
aam
sub
ss
mov
xchg
xlat
dec
xchg
test
mov
xchg
imul
outsb
cmp
sub
mov
or
jbe
and
jo
dec
out
xchg
addr16
outsb
scas
fstpt
adc
push
out
push
int
je
xorb
and
loopne
adcl
repnz
imul
add
add
test
lcall
xor
mov
sbb
cmc
inc
mov
sub
fwait
imul
mov
jl
inc
or
push
fwait
daa
cwtl
push
lods
mov
outsb
rcrl
scas
push
rcrl
leave
movsl
test
sbb
xlat
out
pop
test
pop
add
jno
shll
pop
fnsave
adc
xor
dec
fsubl
push
xchg
xchg
je,pn
in
jbe
push
mov
fidivs
mov
ret
mov
adc
hlt
dec
push
loop
mov
mov
nop
sbb
inc
inc
fdivrp
cmp
dec
std
cmp
leave
xor
jb
cmp
or
xchg
xchg
jno
mov
mov
in
sub
xlat
sbb
pop
aaa
and
and
dec
mov
pop
push
int3
pop
add
test
or
mov
dec
pop
push
mov
aaa
mov
cltd
popa
xor
jl
ja
je
add
push
adc
mov
roll
inc
fstpt
xchg
mov
xchg
cld
js
push
adc
adc
lock
jmp
loope
out
sbb
add
pop
cmpsl
cmp
sahf
sbb
sbb
xor
aam
nop
lret
into
or
sbb
push
lahf
sbb
sbb
in
into
xor
pop
out
jno
lock
mov
adc
jg
inc
outsl
mov
mov
pusha
dec
lahf
scas
div
mov
jge
call
sbb
stos
orl
mov
sbb
hlt
movsl
xchg
lock
fs
ret
lock
add
jnp
stos
mov
inc
add
add
push
cli
or
inc
je
mov
test
ja
pop
leave
js,pn
push
xchg
adc
and
cmp
jmp
cmpsl
push
pop
mov
nop
fdivrp
sarb
jbe
and
jbe
push
lret
enter
pop
stc
mov
imul
mov
cmpsl
inc
sub
cs
sbb
jno
adc
outsl
mov
or
or
fidivl
jmp
pop
out
into
push
inc
daa
std
add
insl
stc
lea
mov
jmp
sub
inc
mov
fstp
and
fcomps
jae
add
cwtl
mov
pop
sub
lods
loope
sbb
mov
aaa
xchg
repz
xor
in
push
fs
mov
mov
mov
je
stos
aad
xor
cmp
out
sahf
test
dec
mov
and
cmp
int
call
sub
and
sub
rorl
xor
pop
ret
outsb
stc
aas
imul
jl
lods
stc
loop
sbbl
pop
push
shll
push
xchg
push
mov
inc
enter
fbld
stc
repnz
xchg
xorb
add
add
cmp
fldl
inc
push
stos
dec
imul
movsb
cmc
out
cmp
xchg
mov
shlb
mov
cmp
les
fdivp
scas
mov
ret
scas
test
jg
mov
gs
sarl
xor
mov
notb
inc
iret
push
adc
inc
movsb
ret
mov
push
xchg
lret
push
negl
xor
jb
mov
inc
pop
and
aad
mov
in
push
das
push
add
add
mov
es
repz
out
mov
nop
hlt
push
mov
lds
into
and
fbld
jg
add
mov
out
xchg
and
pop
jmp
roll
dec
dec
push
scas
jo
pop
xor
xor
fwait
xchg
sbb
fwait
outsb
pushf
insb
lea
popl
xchg
clc
enter
lahf
dec
dec
mov
data16
mov
sub
popa
int
rclb
outsl
test
andl
or
lahf
cmpsl
out
in
lea
mov
jmp
pusha
aad
adc
sbb
add
mov
icebp
imul
jnp
sub
dec
adc
addr16
out
rcr
jbe
mov
mov
xrelease
mov
insb
mov
sub
test
and
cltd
add
lret
or
in
ds
xchg
inc
push
subl
insl
xchg
daa
rcrb
and
mov
lahf
dec
jl
test
cltd
pop
ss
mov
jge
or
dec
inc
loopne
adc
sub
scas
cltd
jo
lods
jno
daa
stos
xchg
mov
mov
hlt
inc
out
outsl
jge
mov
shld
or
ja
add
cmp
add
sbb
lret
popa
test
in
orb
dec
jmp
dec
mov
lea
sub
adc
fadds
mov
rolb
insb
pusha
shl
xor
loope
test
mov
mov
lea
lds
scas
xchg
pushf
fistpll
add
mov
es
jbe
jp
mov
outsb
mov
lahf
add
daa
loopne
inc
test
incb
aas
mov
pop
add
push
jnp
and
ljmp
xor
sbb
inc
adc
rorl
mov
xor
or
and
adc
xchg
pop
xor
cmp
sti
sub
mov
cltd
inc
out
pop
jne
lods
out
std
cld
clc
cmp
stc
push
cmp
mov
aaa
loop
sti
daa
inc
les
cmp
std
ror
js
jno
add
xchg
jno
push
mov
inc
aaa
das
inc
sub
mov
xor
enter
lahf
cli
or
lods
andl
mov
les
sbb
pop
andb
movsl
add
pop
jge
pop
idiv
outsb
add
mov
fildll
mov
adc
cltd
cmp
fistpl
dec
loopne
cmp
fs
cmpsl
jmp
pop
outsl
fcomip
std
fmuls
int
lret
mov
icebp
xchg
pop
cmp
push
push
add
adc
and
jle
and
jbe
adc
jg
or
and
mov
push
scas
loop
pushf
imul
or
add
push
pop
xchg
adc
jmp
int3
std
and
repz
adc
scas
insb
iret
and
push
roll
je
insb
inc
add
inc
lods
rcrl
hlt
sbb
call
addr16
fnstcw
fistpl
shll
les
fmuls
ja
adc
adc
nop
repnz
cmp
pop
out
cmp
mov
sub
jl
mov
ret
sbb
call
dec
test
scas
rclb
mov
sarb
xchg
jae
mov
xor
push
les
and
jno
xchg
xor
add
add
mov
jg
add
jmp
pusha
lock
pop
xlat
hlt
sbb
out
add
xchg
adc
insb
inc
mov
orb
push
sbb
das
mov
call
dec
inc
cmpsb
addl
out
test
out
aam
sub
jo
mov
sahf
je
pop
lods
xchg
mov
jbe
addr16
cli
dec
xor
scas
cld
leave
dec
inc
scas
dec
push
add
pop
jl
dec
lds
subb
add
jge
adc
add
xchg
or
jo
test
ret
mov
repz
xchg
outsb
xor
inc
jbe
out
cmp
test
jns
fcoml
xchg
mov
push
adc
popa
mov
dec
push
mov
dec
cmp
push
cmp
inc
adcl
jmp
icebp
and
aas
pop
mov
inc
sbb
xchg
xor
xchg
mov
jae
xchg
jge
push
int3
clc
xchg
mov
add
and
out
fst
mov
mov
adc
stc
add
movsb
das
add
push
stos
jl
ds
fcoml
fwait
test
mov
add
pop
addr16
adcb
mov
dec
scas
ss
push
shlb
cmpsb
popf
xchg
push
shrl
pop
jle
lret
lret
insb
jbe
fbstp
imul
xchg
mov
rorl
cmp
addl
rcrl
test
das
aad
push
scas
jns
popf
pop
test
or
in
lahf
movsl
icebp
and
jl
fs
int3
add
sub
add
add
add
leave
inc
mov
push
sbb
cwtl
jp
popf
imul
lret
cmp
sti
xchg
add
imul
dec
in
push
pop
inc
out
repz
jp
hlt
notb
cmpsb
insb
ljmp
fwait
dec
in
out
cmp
inc
jns
outsl
scas
rcll
ljmp
adc
aaa
rorb
sbb
sub
mov
lcall
add
out
stos
movsb
mov
adc
test
insl
aaa
sbb
add
js
dec
mov
js
jbe
xchg
pushf
lods
lock
add
mov
mov
mov
cmp
ljmp
xorb
cmpsl
in
lret
push
and
hlt
sub
shll
pusha
mov
dec
sahf
cli
mov
pusha
movsl
lahf
clc
ficompl
cmpsb
jl
dec
out
shrl
insl
xchg
sub
sub
test
insl
jecxz
adc
test
movsb
lret
xchg
xchg
out
cmp
cltd
into
mov
insl
sbb
xchg
lcall
movsb
test
add
add
add
pop
xlat
and
lret
je
fmull
cld
jb
scas
adc
cmp
pop
jl
inc
adc
in
ret
dec
pop
mov
mov
adc
pop
lret
hlt
jb
sarb
mov
add
mov
lds
icebp
pop
sub
jno
cmpsl
andl
inc
push
scas
dec
ds
lods
pop
xor
sub
fistpl
aaa
jae
sbb
push
lods
xor
rep
mov
popf
and
mov
cmp
bsr
jl
sbb
mov
jl
aad
incl
add
push
push
mov
dec
sub
sub
add
mov
mov
mov
ficoms
add
aas
fwait
pop
xchg
cmpsl
outsl
sbb
cmc
cmpsb
xchg
test
or
mov
push
push
ret
aaa
sub
sbb
xor
lret
push
aam
sahf
emms
ljmp
inc
flds
or
cmp
pop
and
jmp
lret
cs
or
sbb
stc
mov
xchg
sub
ret
mov
stos
adc
loop
cmovo
stos
mov
out
xor
insb
aad
mov
shrb
add
push
sbb
ret
int
imul
cmpsl
cmp
sbb
pusha
xor
xchg
xchg
jno
fidivrs
rcpps
mov
mov
cmp
scas
cmp
iret
sbb
cli
out
repnz
inc
inc
mov
jne
jne
mov
inc
fildl
adc
adc
jmp
in
aaa
out
sbbb
std
sbb
mov
sub
mov
mov
add
cmp
lock
dec
je
call
mov
sbb
push
xor
mov
scas
roll
add
add
fisttpll
pop
lods
push
pusha
add
mov
push
mov
fdivs
jne
std
mov
xor
sbb
sbb
popa
xchg
adc
repnz
leave
leave
test
fadd
jl
dec
ss
stos
sti
imull
fbstp
negl
add
loopne
or
mov
out
push
push
push
sub
mulb
shlb
pop
fnsave
sub
pushf
test
cli
mov
aam
or
pop
mov
sbb
push
imul
mov
cmpsl
rcr
out
mov
in
jo
push
push
and
lret
sbb
xlat
push
push
sbb
add
add
cli
and
aas
in
jne
inc
inc
ret
dec
fwait
sub
add
xchg
pushf
out
sub
sbb
xor
ret
inc
jnp
and
flds
or
or
push
loope
sbb
pusha
icebp
push
aad
js
inc
lea
mov
adc
daa
popf
mov
insb
sub
sbb
xor
imul
aam
test
pop
mov
xchg
mov
ffreep
push
jl
sbb
add
addr16
inc
mov
dec
jno
pop
dec
sub
and
dec
add
sbb
pop
xor
in
adc
repz
icebp
cmp
daa
jecxz
or
addr16
mov
jp
inc
pop
lcall
cli
xor
jl
mov
pop
lcall
lcall
mov
fnstsw
mov
pop
mov
mov
or
pop
aad
inc
enter
pop
jbe
dec
adc
mov
fwait
popa
pop
addr16
lock
mov
cmp
and
out
adc
cmp
xlat
inc
into
lds
or
sti
mov
fimull
mov
xlat
dec
jbe
push
popf
ja
mov
sbb
jmp
neg
push
loopne
cmpb
push
sbb
mov
sarl
lcall
in
mov
inc
mov
repz
xchg
repnz
fildl
std
orl
