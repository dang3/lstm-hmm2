movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
mov
mov
mov
add
mov
sub
test
jne
inc
jmp
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
mov
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
push
push
call
mov
mov
push
pushl
xor
mov
rep
call
test
je
push
call
xor
inc
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
mov
mov
rol
mov
mov
test
je
mov
jmp
push
call
push
push
mov
push
push
push
push
push
xor
push
inc
push
mov
add
call
mov
push
mov
call
mov
push
call
mov
push
shl
add
incl
push
push
push
call
mov
push
mov
mov
call
pop
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
pushl
call
push
pushl
push
pushl
call
mov
lea
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
imul
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
mov
ror
xor
imul
add
mov
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
mov
pop
pop
pop
leave
ret
mov
push
mov
push
call
mov
test
je
push
push
mov
lea
push
mov
push
lea
push
call
mov
push
mov
call
add
push
push
lea
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
pushl
call
push
call
pop
ret
push
mov
cmp
jb
xor
add
push
mov
je
push
mov
mov
mov
mov
mov
mov
add
rol
mov
xor
imul
xor
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
pushl
push
pop
call
test
mov
je
cmpl
jbe
mov
push
push
pushl
mov
pushl
push
call
pushl
push
pushl
push
call
pushl
push
pushl
push
call
mov
cltd
mov
idiv
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
mov
add
push
call
push
push
pushl
push
call
add
push
call
push
push
pushl
push
call
add
push
call
mov
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
pushl
push
pushl
push
call
add
cmpl
jbe
pushl
push
push
pushl
call
pushl
push
call
pop
pop
pop
pop
mov
pop
leave
ret
push
mov
push
mov
push
push
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
push
call
mov
mov
add
lea
add
cmpl
je
mov
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
mov
push
push
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
pushl
push
call
test
jl
mov
mov
push
pushl
push
call
test
jge
andl
jmp
mov
pop
pop
pop
pop
ret
jmp
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
add
add
cmp
ss
mov
push
sti
cli
out
popf
aaa
imul
xorl
mov
xchg
lock
xchg
insb
add
jnp
stos
sub
cwtl
sub
jo
and
or
sahf
rcr
adc
bound
xchg
jae
negb
addr16
push
sti
cli
out
popf
aaa
imul
xorl
mov
mov
insb
push
pop
cmp
or
adc
rcrb
fdivl
packuswb
stos
xlat
mov
gs
push
js
ja
mov
sbb
add
jne
rclb
shrb
mov
push
xor
test
dec
pop
sbb
push
sarl
push
sub
push
mov
pop
stos
mov
jmp
ror
pusha
mov
mov
jmp
sldt
adc
adc
xor
leave
fiaddl
and
lcall
arpl
loop
int3
pop
pusha
add
ss
lods
jb
mov
test
aad
stos
xor
out
jno
int3
mov
stos
mov
int3
sub
inc
mov
jno
in
inc
ss
jg
lods
pop
scas
sahf
add
or
imulb
in
int3
int3
add
and
cmp
cld
lods
not
sar
test
and
cltd
hlt
clc
leave
jecxz
or
aad
add
negb
in
adc
sbb
xor
jmp
sub
jge
add
and
sahf
sbb
pop
push
jmp
shl
xchg
adc
xchg
jmp
sbb
adc
mov
xor
rcr
sub
mov
lea
out
call
add
pop
mov
add
loop
adc
mov
arpl
inc
outsl
sub
mov
cmp
lret
sbb
lret
and
mov
dec
cmp
xor
dec
lea
sbb
adc
frstor
fs
ret
sub
es
add
add
jecxz
gs
into
sbb
cmp
mov
mov
mov
sbb
ficomps
pop
sbb
scas
sbb
push
sub
pop
fcomi
lret
sbb
in
and
in
rcl
fxch
fwait
cmc
dec
es
addr16
push
push
sbb
push
and
push
jbe
push
out
fs
jno
xchg
shl
cmpsl
outsb
sbb
mov
pop
mov
sbb
jno
mov
movsb
and
clc
hlt
icebp
pop
bound
pop
pop
ja
push
inc
or
cmpsl
enter
clc
cmpsb
sbb
inc
mov
jae
or
jnp
push
dec
fwait
cli
into
inc
iret
nop
and
je
leave
mov
or
dec
mov
js
int3
push
jns
push
xchg
xor
decl
ret
stc
std
in
dec
sarl
jge
sub
mov
dec
inc
outsl
add
add
mov
jne
mov
and
dec
xchg
mulb
lods
jl
and
jne
jne
loopne
add
mov
mov
dec
lds
movswl
ficoml
sti
jne
cli
jmp
jnp
mov
add
ja
jns
cli
mov
ret
and
aam
add
sarb
ret
popa
icebp
inc
sbb
cmp
daa
dec
pop
imul
push
or
repnz
sub
lret
rolb
jo
jbe
sub
mov
mov
mov
cmp
scas
test
fcoml
lret
sbb
add
fwait
cltd
test
sbb
popl
xor
mov
mov
inc
and
pop
add
cmp
out
xor
enter
mov
pop
movsb
mov
mov
xchg
loope
shrd
mov
out
insb
sub
push
sub
sbb
push
je
loope
mov
test
add
push
jg
imul
jge
mov
sbb
xchg
push
mov
cmp
je
cmp
pusha
add
enter
add
sahf
cmp
scas
in
sti
xchg
and
mov
xchg
xor
test
xchg
pop
inc
in
and
into
mov
jno
inc
xchg
push
mov
in
sarl
mov
xlat
roll
xchg
xor
push
lea
pop
and
or
ja
adc
loope
push
mov
popf
dec
test
icebp
lret
movsb
xchg
lea
xorb
add
add
cmp
mov
je
rolb
inc
pmulhw
pushf
or
stos
fisttps
call
nop
sub
repz
or
sbbl
mov
sbb
and
mov
addr16
cs
es
rclb
fiadds
inc
pop
cltd
cmp
cmpl
mov
scas
mov
dec
out
mov
mov
mov
pop
test
js
mov
inc
loop
arpl
aad
aas
and
cmp
or
incb
lds
outsb
data16
mov
xlat
mov
jmp
push
sbb
add
adc
push
ja
jmp
dec
fidivrs
mov
or
dec
cmp
mov
mov
dec
mov
pushf
imul
lret
cmpsb
xor
and
addr16
cmpsl
dec
out
inc
mov
test
xlat
mov
add
add
shlb
repnz
lea
ret
add
ret
add
cltd
push
das
in
inc
inc
and
sbb
call
add
xchg
cmp
mov
jae
aaa
sbb
mov
and
cltd
mov
shll
sarl
pusha
shrb
add
jge
mov
cmp
subl
lcall
insb
mov
dec
cmp
mov
in
cmpsl
out
xchg
adc
or
imul
negl
adc
mov
out
in
sub
loop
leave
inc
sarb
lcall
cmc
push
jae
mov
fsubrl
ljmp
movsb
jg
pop
push
lret
fcmovnb
and
mov
mov
aaa
dec
add
adc
sbb
and
dec
xlat
push
test
je
popl
add
add
push
inc
pop
xor
movsl
loopne
lods
pusha
ror
outsb
into
pop
mov
xor
inc
out
adc
fbld
cmp
andb
cmpsl
es
push
inc
dec
dec
out
sbbb
fs
imul
out
cmp
push
adcb
xchg
mov
sub
imul
lods
std
int3
addr16
and
mov
stos
cs
push
clc
dec
lahf
aas
cwtl
cs
lock
sub
add
int
sub
clc
xchg
loop
fwait
scas
out
in
jecxz,pn
fnstsw
in
pop
or
jg
and
lods
xadd
sahf
mov
push
clc
lods
shlb
movsl
addr16
into
mov
push
lret
mov
inc
inc
jno
cmp
repz
sub
inc
popa
adc
les
daa
pop
out
hlt
out
add
aam
rcll
pop
cmp
pushf
clc
push
rcl
fisttps
hlt
fisttpll
fcoms
xchg
push
fwait
push
mov
dec
test
shrl
scas
dec
mov
ljmp
pop
mov
aad
pop
or
mov
sarl
outsl
cmp
loopne
fidivrs
cmc
out
jecxz
inc
pop
movsl
out
fidivs
add
pop
jne
lret
into
push
mov
adc
notb
loop
or
in
mov
ffreep
fldt
es
cmc
pushf
stos
pop
sahf
mov
js
dec
test
fstpl
les
mov
addr16
or
mov
cmc
je
cli
inc
push
fistpll
sbb
push
int
sub
mov
and
loop
or
popa
sti
jbe
lods
xchg
pushf
ret
or
outsb
in
mov
push
lea
pop
pop
mov
out
inc
xchg
add
xchg
ljmp
fcomp
fwait
mov
aam
int3
fmull
mov
fwait
inc
and
push
cmp
popf
lahf
push
rclb
jmp
add
add
inc
cmp
pusha
dec
mov
cld
or
loop
sub
dec
fldl
outsb
aaa
xorb
mov
aaa
idivb
xchg
lret
add
cs
adc
jle
cs
dec
outsb
mov
mov
mov
out
insl
movsl
fsub
icebp
cmpsl
in
je
pop
xor
dec
adc
inc
jg
and
sub
inc
lock
mov
rcr
cmp
cmp
jne
lret
rorl
dec
cmc
jnp
add
add
xor
pcmpgtb
mov
mov
and
int
adc
repnz
lahf
mov
pop
sub
jg
push
add
jmp
jbe
nop
adc
mov
fisubrl
lret
pop
dec
xchg
cli
jo
leave
loope
fyl2xp1
in
imul
cmp
push
or
fsubr
fcoml
add
add
jne
push
add
adc
nopl
ds
sub
xchg
int
ret
mov
mov
fstpl
outsb
inc
lcall
inc
dec
cmp
unpcklps
addr16
sti
pop
pop
out
leave
mov
pop
int
cmovg
fmull
jb
dec
cmpsl
adc
cmp
xor
cwtl
icebp
movl
add
push
pop
popa
xor
ret
cmp
or
mov
mov
push
sbb
push
push
mov
lds
lods
jp
dec
pop
test
pop
pop
xor
or
leave
bound
jo
mov
mov
fidivl
or
xchg
sti
jo
and
inc
xlat
cli
sbb
add
sub
shll
lds
add
sub
xchg
repz
mov
lods
dec
cltd
mov
es
inc
push
sub
dec
mov
xrelease
pop
or
in
mov
ljmp
int
fcoms
popf
fdivr
add
in
jp
lea
inc
notl
insb
jbe
sar
adc
pop
cmp
sub
stos
mov
add
sub
nop
xor
into
stc
outsb
enter
aad
dec
lret
ret
arpl
mov
mov
clc
and
jne
or
cmp
rcrb
orb
or
out
pop
inc
adc
cmp
inc
stc
test
std
aad
push
test
mov
adcl
or
sbb
addr16
int3
rep
fldt
popl
pop
sar
fbld
sub
std
mov
adc
call
fcmovnbe
mov
aaa
pop
jl
xor
inc
mov
add
nop
test
aam
fdivrs
bnd
mov
cld
mov
cmp
or
jns
shlb
sub
fidivrl
testb
cltd
sub
call
sbb
add
sysenter
fimuls
mov
mov
mov
lahf
and
push
and
outsb
sbb
xor
test
push
add
or
xchg
imul
mov
mov
sar
inc
xor
sti
mov
add
add
sub
or
mov
and
xchg
fmul
pop
fstps
shrb
jbe
mov
gs
cmp
ficomps
cli
outsb
jmp
jg
mov
imulb
stos
sbb
movsl
ja
mov
pop
lret
pusha
add
mov
cli
adc
pushf
dec
mov
push
scas
mov
test
jecxz
loopne
insl
mov
mov
in
imulb
mov
push
out
jae
adc
add
or
loop
pop
test
mov
sbb
fdivp
inc
push
pop
inc
push
lds
daa
pop
fisttpl
mov
sub
push
sbb
pushf
add
loop
leave
in
push
push
inc
sbb
sbb
fldl
dec
in
or
ror
dec
and
repnz
and
xchg
and
cmp
push
mov
xor
add
mov
clc
lds
jnp
xchg
jns
das
pop
inc
xchg
test
in
pop
add
mov
xor
mov
lret
ficompl
cwtl
lcall
shl
push
popa
aas
adc
movsb
cmpb
ret
mov
xor
dec
mov
shrb
stos
outsl
mov
xor
mov
push
movsb
dec
sub
clc
sub
ljmp
mov
and
sbb
cmp
imul
adc
add
and
fisubrl
inc
mov
add
pusha
dec
xor
mov
fs
push
lock
mov
pop
sub
mov
mov
or
loope
cltd
sahf
xchg
ja
or
xor
test
cltd
insl
cmp
mov
movsl
adc
cmp
clc
ret
scas
jb
dec
mov
add
testl
add
jbe
adc
push
inc
pusha
cmpb
ljmp
stos
push
in
insl
repz
outsl
sbb
in
fidivs
xchg
gs
push
or
mov
push
adc
jmp
pop
aas
adc
lcall
clc
xor
rorb
jo
int3
mov
add
ljmp
test
out
sub
and
mov
sti
xorb
mov
cmp
mov
xchg
lcall
push
push
call
sbb
cmp
shl
and
pop
adc
pushf
inc
mov
and
jle
xchg
subl
std
leave
push
push
pop
ret
lahf
or
xor
loopne
add
jbe
jl
fnstenv
add
jl
inc
xchg
mov
inc
jl
out
call
or
inc
add
pushf
jmp
dec
jle
jg
rclb
add
add
inc
fidivs
sbb
loop
pop
xlat
pop
rclb
loopne
je
scas
cmp
loope
jb
into
push
sub
pop
jg
push
pushf
jb
lods
ss
rorb
push
aam
mov
push
push
pop
test
inc
mov
fstps
mov
fists
arpl
add
add
push
popf
ds
push
ja
sbb
adc
dec
out
add
dec
fnstenv
insl
adc
rcrb
cs
mov
sub
and
sub
fisubrl
das
xchg
pop
and
enter
rcrl
fdivrs
insb
leave
pushf
popa
fistpll
scas
sbb
dec
pushf
dec
js
dec
or
iret
cmc
mov
xor
mov
fcomp
xchg
pusha
mov
add
loopne
mov
dec
ret
dec
sbb
test
jge
int
xchg
iret
hlt
mov
lret
xor
outsb
imul
mov
dec
bound
add
ljmp
test
mov
or
jbe
xchg
iret
sub
movsl
test
push
out
add
dec
mov
aas
shrl
aas
popf
das
not
add
push
xchg
dec
push
dec
test
mov
inc
clc
aam
adc
testl
into
ja
sbb
push
xor
stos
cmp
iret
xchg
enter
push
iret
ja
dec
push
xchg
lahf
or
sub
xchg
mov
lods
cmp
adc
stos
lret
and
arpl
and
testl
jae
xor
imul
add
in
insb
imul
sbb
pop
fs
sub
ds
mov
jl
aaa
aad
imul
pop
sarb
and
lods
push
sub
jnp
js
mov
mov
std
mov
lret
xorb
xor
lcall
test
add
ljmp
stc
mov
sarl
test
test
cmpsl
mov
pop
mov
ret
lcall
mov
push
test
fisttpll
out
jnp
outsl
or
ds
in
cmp
jp
xchg
scas
das
and
jl
in
mov
cmp
pop
mov
sahf
or
lock
pop
sar
js
adc
fiaddl
stos
push
lret
add
add
inc
cld
in
inc
das
adc
pop
cli
clc
or
cmc
ljmp
push
dec
ss
jnp
inc
pop
dec
dec
mov
mov
mov
mov
ret
sbb
mov
pop
movsl
iret
jb
sub
dec
push
pushaw
outsb
lcall
dec
xchg
dec
hlt
out
ds
nop
cli
sarb
xchg
call
ret
fisttps
and
icebp
pop
and
lret
xor
jecxz
push
cmp
lock
aam
sar
loope
addb
xlat
add
lods
and
pop
negb
lcall
jb
int
clc
mov
outsb
lods
mov
lret
push
jno
les
aas
lret
inc
in
push
mov
test
mov
lret
fstl
je
push
and
pop
gs
leave
stc
fnsave
pushf
das
iret
add
xor
push
repnz
jle
push
sbb
fistpll
int
cltd
and
jl
imul
push
dec
and
lods
pop
xchg
cmp
mov
xor
ljmp
lret
sbb
push
sbb
mov
test
sub
jle
sahf
imul
xchg
or
in
push
dec
cmpsl
jae
mov
sub
add
mov
mov
mov
int3
into
pusha
or
cmp
jp
fidivrl
ja
add
xor
in
shrl
ss
push
dec
xchg
mov
cmp
pop
push
outsl
cmp
dec
inc
add
jmp
xchg
push
gs
lock
jne
incl
pop
push
cmp
mov
cmpsl
pop
mov
or
fcmovbe
clc
mov
cmpsl
cmpsl
nop
xsha256
cmpsb
xchg
flds
jl
or
mov
add
in
in
and
int
loope
adc
addr16
cwtl
jnp
out
sub
imul
lods
mov
push
cmp
push
pop
subl
push
stos
pop
xchg
pop
lret
lods
iret
pop
ret
in
and
outsb
xchg
add
jb
xor
subl
mov
icebp
jbe
mov
jbe
wbinvd
inc
ljmp
jl
xchg
lea
sti
leave
and
inc
xor
pop
xchg
mov
adc
jle
js
push
add
ret
jge
dec
lock
add
mov
test
inc
outsb
out
pop
mov
insl
or
xchg
jmp
mov
and
aas
pusha
jge
rcl
cmp
jl
mov
xchg
push
mov
inc
push
jbe
cmovb
xor
jecxz
scas
das
mov
sub
int
add
cmpsb
inc
dec
imul
xor
testl
add
lcall
fs
pop
and
pop
pop
inc
rolb
cltd
ret
nop
sbbl
add
or
repz
shrb
pop
sub
pop
and
or
sahf
fwait
loope
sbb
std
mov
mov
cltd
cli
aas
cmp
subb
imul
insl
dec
filds
mov
xchg
inc
add
pop
push
mov
push
pushf
sub
outsb
add
addr16
xchg
sbb
cmp
mov
pop
sub
mov
fwait
and
pusha
jg
imul
rol
sbb
xchg
pop
ret
orl
sbb
es
call
mov
in
dec
jae
jmp
push
lret
jmp
mov
mov
iret
mov
sbb
pop
pop
pop
fwait
insb
mov
cwtl
testb
rol
out
es
xchg
add
add
movsl
ret
cmp
cmpl
cmc
inc
and
ja
jno
pop
jge
rep
mov
mov
dec
hlt
mov
inc
int
movsl
xor
ret
sar
fstl
sub
mov
imul
lahf
out
rorl
xlat
inc
pop
sub
pop
hlt
fstl
sbb
ss
mov
daa
fcoms
push
cli
cmpl
sub
inc
cmpsb
je
add
xchg
ret
jge
aas
and
int
cmp
decl
cmpsl
dec
roll
cld
mov
jb
frstor
out
incb
xor
sti
std
inc
stos
push
lods
xor
popf
or
insb
jle
daa
inc
cmpsl
pop
jecxz
mov
mov
sbb
add
add
xchg
push
inc
je
aam
xchg
cs
sbb
and
lahf
sbbl
mov
loop
mov
aam
add
or
xlat
dec
cli
shll
sahf
mov
cwtl
add
cmpsb
and
lret
ret
add
into
xchg
addl
xchg
jno
jb
out
mov
xchg
jp
stos
lods
inc
dec
sub
sti
xchg
adc
jge
cmp
mov
pushf
sbb
xchg
cmp
int
mov
aam
cs
jo
mov
es
inc
in
dec
mov
jns
xor
xor
pop
xor
cmp
in
xor
pop
stc
lret
jns
mov
add
js
cmp
dec
sbb
popf
ds
into
in
cmp
push
pop
push
dec
pop
cwtl
jno
xchg
pop
pop
imul
movsb
inc
mov
je
lds
ljmp
sti
add
insl
xor
repnz
sub
outsb
stos
loop
pop
std
scas
ss
xor
data16
in
insl
pop
lods
lock
pminub
mov
aad
cmc
inc
pop
cs
and
fs
sub
sahf
repz
xor
pop
mov
test
xor
and
mov
fmul
pop
sub
inc
add
or
push
mov
sub
js
out
in
lods
xorl
xor
mov
fmuls
maskmovq
testl
data16
pop
cltd
jb
xor
inc
jecxz
jb
cmpsb
dec
test
imull
xorb
and
add
add
cmc
pop
sysret
mov
sbb
sbb
add
test
jbe
sbb
lret
call
add
mov
inc
push
aad
in
scas
xor
sbb
and
add
je
and
inc
loopne
cmp
cmc
jp
cmp
std
lret
push
loopne
lods
jg
into
iret
mov
repz
jge
xor
pop
mov
cld
inc
lahf
int
test
add
daa
lea
push
push
add
outsl
rolb
pop
lods
ljmp
xchg
mov
jb
fnstcw
push
adc
cmp
cmp
andl
fwait
sbb
inc
or
test
xor
jmp
lret
movsl
movsl
fstps
adc
shrl
mov
inc
dec
jmp
inc
aas
les
adc
sbb
add
add
push
ret
jne
adc
jb
sbb
addr16
stos
xchg
or
and
adc
inc
cmpsb
jle
pop
fiaddl
cwtl
cwtl
dec
sbb
push
mov
adc
mov
mov
inc
mov
es
xor
repz
loope
fimuls
mov
ds
clc
add
add
add
leave
cli
mov
inc
dec
movsl
pop
inc
cmp
jmp
sahf
cwtl
cmpsb
mov
mov
sbbl
jo
jne
xor
fldcw
xor
add
scas
inc
add
mov
jo
sbb
push
dec
mov
test
jb
ja
sub
mov
and
out
sub
ds
push
fidivrs
test
xlat
sub
std
orb
in
andl
mov
xchg
daa
rsqrtps
sub
mov
in
dec
sub
scas
repz
cli
or
jle
jae
callw
or
push
jne
ret
sub
or
js
lret
dec
movsb
push
inc
stc
mov
inc
mov
popa
ret
inc
xchg
xor
mov
xor
mov
std
in
aad
dec
test
push
jno
pop
xchg
mov
and
out
sub
xor
sub
jbe
popa
jno
fidivs
cltd
dec
jb
mov
imul
jbe
push
pusha
sahf
es
inc
push
dec
dec
arpl
nop
insl
pop
call
jb
fs
push
cmpsl
cmpsb
add
add
fimuls
mov
andl
pop
add
icebp
test
xor
lock
pop
lret
movsl
std
xchg
lcall
cld
cld
cld
inc
xor
jge
mov
push
mov
and
xor
jbe
or
sbb
addr16
add
lahf
sti
in
mov
fwait
stos
loopne
mov
push
mov
loop
xchg
mov
test
adc
jl
fimull
sub
or
cmc
nop
push
cli
jge
mov
xor
xor
repnz
aaa
ss
pop
xlat
inc
sbb
pop
outsl
mov
push
cmp
mov
push
add
loope
sub
in
mov
jnp
or
sub
adc
lea
test
fisubrs
stc
or
bound
bound
out
rorl
mov
or
push
or
and
std
sub
pop
in
sub
lods
test
data16
pop
sbb
in
fdivrs
lods
in
adc
fcoms
outsl
jb
scas
pop
inc
and
push
rcr
jne
stos
pop
push
jecxz
xor
adc
push
push
adc
repz
push
bound
jns
loope
xchg
xchg
mov
cmp
mov
movsl
and
aas
mov
mov
leave
insl
lods
pop
sub
or
fbld
push
es
xchg
enter
setbe
dec
or
mov
cmp
jae
and
inc
mov
inc
jp
xor
fmulp
icebp
or
mov
dec
lcall
add
sbb
ficoms
add
add
cmp
jp
mov
dec
mov
popa
scas
arpl
sub
scas
imul
movsb
push
fildl
xchg
sbb
jl
jle
stos
jg
lds
fs
loop
adc
rcrl
fwait
add
sub
imul
sub
popf
cli
push
jnp
aas
out
inc
sbb
pop
push
mov
sti
pop
out
mov
push
push
push
dec
out
xchg
lds
mov
add
mov
dec
in
sar
and
pop
push
leave
int3
cs
stos
aad
popa
int3
lods
mov
xchg
xchg
into
mov
lea
fs
sbbb
lcall
out
pop
push
sub
rorl
xlat
sar
pop
adc
push
rolb
loopne
mov
mov
in
std
inc
cmc
cs
add
mov
and
ljmp
mov
scas
test
or
push
int3
push
xor
mov
jb
pop
enter
sti
mov
xor
mov
pop
pop
mov
sub
add
ljmp
adc
push
jbe
pop
mov
fwait
scas
int
fdivs
mov
ja
notb
xor
das
add
add
pop
xor
inc
cwtl
cmp
mov
bound
icebp
xor
jmp
vpperm
adc
ja
push
or
mulb
push
fistps
in
adc
and
sbb
mov
cmp
push
add
pop
mov
push
jmp
or
es
imul
xchg
sbb
pop
sbbl
shll
jns
xor
push
iret
shlb
pop
rcl
or
clc
loopne
mov
add
fbstp
xlat
pop
push
jae
outsl
adc
inc
mov
cmp
mov
add
add
inc
push
int3
mov
xor
mov
in
js
insl
in
rorl
sbb
mov
dec
sbb
or
add
mov
mov
xor
add
iret
out
addr16
js
xchg
adc
pop
insb
sbbb
andb
xchg
cmp
jp
or
ss
cmp
push
mov
icebp
movsl
pop
mov
jb
adc
enter
stos
mov
dec
or
push
mov
dec
jmp
ss
sub
shl
test
xor
and
loopne
jnp
mov
and
out
xchg
paddusb
jmp
add
in
mov
out
mov
stos
scas
sub
ljmp
popa
shlb
xor
cmpsb
insl
jo
and
adc
bound
lcall
std
loopne
jp
sub
test
adc
test
add
cmp
mov
aam
push
imul
sbb
stos
xlat
in
in
mov
out
adc
pop
test
test
cmp
bound
cmpsl
push
insl
jle
or
adc
pushf
or
inc
cwtl
jae
add
mov
mov
cmpsb
iret
imul
icebp
dec
jge
outsl
enter
repnz
insb
sti
sbb
mov
in
test
pop
pop
imul
mov
andl
test
xchg
push
cmp
enter
fwait
es
xchg
js
mov
lret
repz
cli
fimull
fwait
mov
xor
xchg
fbld
mov
nop
push
loopne
lock
aas
dec
mov
fdivrs
ss
mov
pop
ja
sbb
jp
leave
pop
xor
bnd
push
mov
jle
inc
int
repnz
xor
add
clc
push
adc
push
cmp
mov
xchg
hlt
hlt
lcall
sahf
ds
mov
das
mov
ja
mov
frstor
rorb
push
dec
stos
add
mov
movsb
inc
dec
cmp
ret
in
mov
sbb
xorl
lds
sub
jbe
pop
cld
push
or
add
add
mov
jb
jg
decb
hlt
mov
and
hlt
inc
divb
enter
xor
jno
lret
sub
rcll
mov
jg
push
mov
mov
dec
stos
fildl
int
inc
bound
ficompl
mov
cmp
or
inc
xor
jg
xor
push
dec
sub
int3
aam
pusha
bound
cmp
jbe
add
add
push
sbb
mov
cltd
lods
clc
lret
jmp
dec
add
js
pop
sub
fwait
aam
jmp
fwait
jp
mov
sub
adc
dec
shll
jg
pop
sub
mov
hlt
xor
subl
loop
pop
xchg
jo
cmp
mov
mov
cmpsl
cmp
sbb
out
pushf
jo
nop
xor
leave
por
add
cltd
in
ds
and
jae
push
stos
sbb
lods
dec
xchg
jl
repz
jp
sbb
jge
bound
push
inc
jo
add
imul
inc
cmp
les
in
fsubrs
aam
adc
fmuls
leave
push
cli
daa
dec
les
mov
sub
roll
iret
add
sub
xor
repz
inc
fcoml
push
ja
cs
aam
out
dec
dec
push
repz
cmp
cli
je
fildll
mov
jno
jecxz
scas
testb
dec
and
int3
adc
jg
fldl
pop
aas
xchg
out
jl
xor
std
lret
lods
mov
imul
leave
dec
mov
cwtl
shr
pop
in
mov
xchg
ficoml
add
mulb
mov
insl
loopne
xchg
push
adc
lods
lcall
xor
das
and
push
loope
mov
ret
adc
and
or
xchg
cli
inc
out
dec
xchg
cmpb
faddl
add
ds
xor
popa
roll
adc
das
sbb
jle
in
pop
out
scas
lea
dec
mov
aaa
push
dec
xlat
xchg
cltd
imul
ljmp
sub
or
push
cld
shrl
xchg
in
int
mov
mov
pop
mov
mov
dec
and
not
sbb
add
add
lock
leave
insb
imul
sbb
lock
inc
mov
inc
in
pop
pop
dec
inc
pop
mov
inc
pop
sahf
testb
in
das
add
adcb
jmp
mov
inc
es
and
mov
xchg
jbe
insl
mov
or
sub
and
adc
push
cmpsb
scas
jg
hlt
idivl
ljmp
scas
es
and
mov
add
push
xchg
push
mov
lods
in
mov
jne
push
and
pop
insb
jnp
data16
push
lahf
movsb
or
test
mov
test
divl
jle
jb
popa
cli
imul
xor
stc
pop
cmp
adc
jo
push
jle,pn
inc
add
dec
nop
jecxz
xor
int3
in
in
movsb
int3
lcall
js
xlat
repz
dec
xor
dec
ljmp
mov
cmpl
add
xchg
mov
mov
fwait
pop
enter
out
rcrl
xchg
adc
sub
mov
lahf
in
or
push
and
cwtl
adc
pop
arpl
push
inc
iret
mov
mov
jmp
cmp
das
mov
push
dec
mov
add
mov
ret
popf
adc
lods
mov
push
mov
sbb
sbbl
cltd
clc
pusha
mov
hlt
stc
ss
ds
mov
movb
add
add
xchg
mov
iret
push
addr16
add
jo
mov
ret
cmc
stos
or
test
in
into
push
mov
roll
aas
or
sub
fmull
rcrl
pop
stos
pop
cmc
cwtl
fstpt
dec
cli
mov
mov
aas
xchg
pushw
es
adc
popa
ret
fnsave
pushf
cmpsl
out
add
lcall
cmpsb
add
xchg
jne
test
ss
sbbb
in
jbe
adc
and
pop
xchg
fcom
dec
dec
loope,pn
mov
xchg
bound
js
scas
mull
inc
loope
rolb
