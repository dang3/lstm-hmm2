jmp
cmp
jb
push
push
lea
xor
test
jbe
push
push
pop
sub
mov
mov
mov
mov
ror
lea
imul
xor
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
rol
push
mov
mov
mov
push
call
dec
jne
test
mov
je
mov
mov
jmp
push
call
mov
mov
mov
add
mov
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
andl
mov
pushl
xor
push
push
push
call
push
call
xor
push
push
push
pushl
call
incl
cmpl
jb
push
call
mov
push
push
call
mov
call
add
cmpl
mov
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
mov
pushl
pushl
call
push
pushl
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
push
lea
mov
mov
mov
push
mov
xor
push
push
and
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
call
mov
push
call
pop
test
jne
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
xor
inc
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
add
push
lea
push
push
call
add
pushl
lea
push
pop
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
push
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
push
push
push
mov
mov
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
push
mov
sub
push
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
mov
jmp
mov
add
xor
nop
movb
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
leave
ret
xor
jmp
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
jmp
mov
mov
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
mov
imul
sub
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
div
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
add
add
into
mov
cs
mov
mov
gs
in
mov
pop
lds
in
out
mov
dec
outsb
or
xchg
sbbb
aas
testl
xchg
mov
scas
test
test
sti
data16
test
stos
cmp
mov
pop
insb
into
mov
cs
hlt
mov
mov
dec
in
mov
pop
lds
in
out
mov
rclb
xor
shlb
jmp
pop
rcl
and
adc
mov
data16
xchg
push
mov
fsubrl
xchg
sti
movsb
add
dec
outsl
std
push
aam
jno
add
jmp
mov
call
xor
push
roll
adc
add
and
test
sbb
imul
add
mulb
or
or
out
and
ret
xchg
lret
popa
lods
push
xor
int
repz
shr
pop
testb
lret
into
xchg
jbe
cwtl
cld
cmp
fcmovne
addb
stos
sar
inc
outsb
int
sarb
xchg
dec
outsl
scas
cmpsb
inc
aas
xchg
adc
mov
jmp
xor
xchg
mov
sbb
daa
push
enter
mulb
mov
inc
add
add
sub
lcall
les
mov
xchg
nop
pop
xchg
push
sbb
hlt
scas
lret
rolb
jg
push
fbld
adc
xchg
xorb
and
lcall
inc
fs
pop
mov
cmp
sbb
push
xchg
outsl
mov
jl
out
xchg
cmp
dec
xor
sahf
xchg
aam
inc
clc
or
jo
add
jnp
xor
cltd
add
cmp
sbb
iret
dec
icebp
xor
call
lcall
scas
fwait
xchg
mov
fstpl
push
mov
not
int
es
mov
enter
outsb
pop
dec
cmpsl
enter
pushf
sbb
das
lcall
push
and
dec
or
jmp
movsb
dec
add
push
or
shrb
inc
add
push
lods
jl
fisttpll
mov
add
jle
sti
cmp
loope
pushl
add
jno
jnp
mov
xor
inc
pushf
adc
xchg
into
ret
xchg
push
gs
shrl
inc
jno
into
pop
pusha
aas
jecxz
fmull
xor
movsl
iret
cmp
fisubl
pop
imul
arpl
cmp
push
ja
add
fisubs
or
mov
xor
push
cmpsl
test
fcoml
cld
das
jns
xor
rol
insb
enter
inc
icebp
push
ss
ss
incl
mov
test
inc
xchg
push
movsl
popa
sbb
jg
xor
insb
inc
subl
sub
mov
in
negl
movsl
mov
and
add
cs
aas
out
shl
push
les
sbb
inc
lds
outsl
mov
push
daa
aaa
mov
xchg
sub
aas
add
inc
stc
test
test
mov
cmc
mov
in
cmc
adc
or
dec
mov
sub
outsl
fisubrs
lahf
push
and
addb
mov
pushf
loop
sub
sbb
test
cmp
pop
pop
push
inc
push
dec
add
cld
loope
nop
adc
add
add
add
gs
xor
filds
shll
mov
xor
clc
sahf
fcmovne
stc
inc
pop
inc
or
lds
mov
aad
test
das
test
lock
pushf
mov
mov
xor
dec
mov
mov
into
mov
pop
addl
ret
enter
sbb
sbb
repnz
add
lcall
push
pushf
mov
xor
jge
int
xor
add
sbb
ss
stc
push
dec
lahf
push
not
imul
xchg
test
sub
into
pop
inc
fmuls
mov
insl
rol
cli
mov
inc
pop
cmp
incl
jecxz
enter
push
lea
xchg
es
shrl
jge
popa
call
sub
add
mov
xchg
mov
and
xchg
dec
imul
mov
iret
add
rcrb
adc
cltd
jl
xor
mov
inc
xor
es
aad
enter
fnstcw
mov
pop
dec
add
pop
cmp
mov
mov
repz
push
cmp
dec
pop
or
sbbl
mov
jmp
xchg
subb
xorb
mov
icebp
mov
xchg
or
dec
stc
fimull
in
inc
xchg
mov
loope
xlat
fcomip
lahf
add
add
sahf
jmp
dec
add
jb
pop
pop
jno
shl
aaa
pusha
pop
shlb
movsb
mulb
fcmovbe
pop
movsb
call
arpl
sbb
loop
mov
ja
in
push
xchg
jne
xlat
inc
popa
jae
mov
dec
and
popa
adc
xchg
aaa
ja
into
sub
pop
xchg
dec
xor
mov
call
out
adc
push
lods
out
add
add
adc
shrl
push
sub
fidivrl
lcall
repz
jmp
jae
clc
sub
mov
jne
pop
aam
popf
xchg
mul
vmovdqu
into
out
pop
sub
push
mov
addl
jmp
mov
jns
cmp
xchg
in
sub
push
push
dec
das
pop
dec
divl
pop
data16
lea
mov
and
dec
sbb
cmc
flds
xor
add
in
scas
in
adc
fucomp
add
fwait
scas
jns
add
push
mov
sbb
fwait
lds
in
imul
pop
jb,pn
mov
and
or
movsl
push
jl
xor
inc
mov
faddl
xchg
gs
pop
xchg
xor
fstpt
add
inc
out
scas
push
leave
loopne
stc
or
js
lods
dec
loope
push
inc
sub
dec
adc
outsb
scas
push
dec
cmp
shrb
pop
lret
cmp
fcmovu
jecxz
bound
and
mov
js
incb
popf
movsb
push
aam
cmc
bswap
leave
xlat
add
scas
xchg
jne
or
add
push
mov
push
jb
sbbb
push
cli
add
or
or
mov
inc
imul
xorb
sbb
xchg
ret
cltd
int
mov
mov
xchg
and
daa
gs
inc
cld
xchg
add
mov
call
fmuls
pop
mov
pop
adc
adc
lret
ljmp
mov
out
cli
adc
mov
cmp
cmp
mov
adc
xor
aad
push
sbb
add
repnz
mov
cmp
outsl
jmp
sub
pop
int3
pusha
in
popa
repnz
xlat
add
outsb
lods
cmpsl
xchg
push
leave
js
mov
or
jge
mov
push
jge
lret
cmp
ror
add
lods
addr16
add
or
pusha
sub
xchg
add
jmp
fwait
sub
rep
pushf
and
inc
hlt
int
aam
mov
jp
clc
dec
xchg
test
sub
adc
imulb
pop
rolb
mov
aam
inc
addr16
clc
out
jno
add
add
into
inc
loop
mov
add
add
jne
insb
popf
scas
xor
mov
mov
jns
mov
std
push
mov
js
cmpsb
int
pop
mov
cmc
mov
lahf
jge
or
xchg
adc
push
sub
jbe
add
or
and
and
or
lods
add
outsl
xchg
adc
add
mov
mov
or
enter
es
int3
dec
in
fwait
xchg
aaa
and
adc
mov
inc
add
sub
add
add
pop
add
lcall
ljmp
push
dec
jno
jmp
or
mov
aaa
daa
stos
fs
rcrb
prefetch
pop
pop
pop
inc
inc
mov
jo
sub
mov
and
or
repz
andb
xor
stc
bound
jecxz
outsb
stc
xlat
or
mov
out
dec
flds
add
mov
sbb
sub
cwtl
jp
aas
xor
dec
sub
cmc
pop
and
repnz
js
push
mov
arpl
das
scas
fimull
popf
scas
add
popf
mov
inc
push
push
nop
fldenv
sbb
cmp
dec
xor
daa
insl
iret
shrb
cmpsl
xorb
mov
add
addr16
sbb
lret
dec
xor
xchg
cmc
clc
subl
inc
push
xchg
rcl
and
push
aaa
iret
mov
les
adc
rcl
rorl
inc
ljmp
das
call
push
sub
loope
push
xchg
push
xor
ja
int3
xorb
fiadds
scas
mov
ja
out
add
push
ljmp
sub
cmp
and
loop
mov
inc
or
add
js
dec
jecxz
xor
dec
pop
dec
cmp
andb
xchg
cmp
add
andb
les
jle
nop
lcall
scas
cmpsl
iret
outsl
inc
adc
lock
fwait
out
jle
jb
inc
mov
mov
dec
xchg
loopne
stos
and
mov
lea
pop
cmp
pop
out
fnstsw
push
cmp
call
arpl
mov
add
inc
nop
mov
mov
in
xor
mov
inc
sub
and
frstor
sbb
sub
rcll
dec
das
arpl
test
jmp
into
in
xor
push
and
faddp
outsl
mov
pop
lahf
repnz
outsl
decl
mov
int3
testl
pushl
dec
sbb
sub
and
lea
int
pushf
xchg
lock
fdivrs
stos
xor
popf
pushf
idivb
push
xchg
jb
and
ror
push
sbb
push
pop
int
xor
mov
jge
sub
or
pop
push
push
scas
push
mov
jecxz
sbb
push
movsl
push
iret
cmpsl
pop
mov
or
dec
cmpsl
ljmp
cmp
dec
cmpsb
mov
mov
or
pop
sub
xor
xchg
sub
push
fists
lds
jl
jle
ffreep
repnz
iret
mov
sub
jns
push
int3
pop
jbe
xchg
les
sbb
mov
mov
inc
ret
xchg
insl
dec
repz
pushl
mov
mov
div
mov
mov
mov
sbb
xor
nop
in
fdivrs
mov
push
in
adc
pop
and
pop
mov
into
test
gs
mov
inc
lret
mov
pop
mov
mov
mov
insl
cli
fwait
or
push
push
add
add
jnp
bound
sub
shr
cwtl
xlat
add
xlat
adc
fldcw
iret
and
cltd
out
nop
cmp
mov
out
call
inc
imul
mov
lods
mov
xchg
push
xor
xchg
inc
push
push
pop
lock
cmp
mov
adc
das
cmp
push
xchg
lock
add
icebp
jo
je
mov
sub
xchg
cltd
sbbl
sbb
xor
loope
push
or
adc
cwtl
out
cwtl
pop
jnp
mov
es
int
sbb
ss
mov
add
xor
nop
dec
sub
push
fdiv
adc
cmp
rorb
cmp
or
sub
fdiv
es
lods
pop
dec
data16
orl
push
sahf
out
lcall
add
into
ror
jae
icebp
add
or
jbe
iret
inc
fadd
mov
inc
cwtl
jle
push
shrb
sti
int
or
pop
and
adc
push
dec
jbe
jno
and
push
lods
mov
shlb
sbb
insb
cmc
jg
mov
jle
shl
js
mov
or
lock
rcrl
imul
lock
cld
xor
repz
aam
mov
mov
fsubrl
jne
dec
lret
adcb
add
dec
aad
xlat
icebp
inc
pop
addr16
push
test
inc
jg
out
stos
dec
push
ror
xchg
sbb
jl
or
fwait
mov
mov
jle
dec
jne
cwtl
ret
enter
pop
mov
out
jmp
fadds
popa
mov
push
clc
jmp
test
jns
sub
mov
sub
pusha
imul
mov
xor
es
add
xchg
cld
mov
into
xchg
cmpsl
xchg
iret
mov
sub
pop
jl
dec
iret
adc
fcomps
push
mov
out
lret
arpl
sbb
pop
mov
fwait
lret
dec
aas
mov
into
sub
or
test
pop
out
xor
sub
sub
sbbb
or
clc
mov
into
nop
rol
outsb
clc
sahf
outsl
sbb
xor
js
ja
ljmp
jno
pop
int3
push
stos
in
mov
sbb
add
js
push
cmp
and
mov
mov
scas
ret
dec
out
dec
mov
xorb
cli
xlat
jecxz
mov
mov
lahf
mov
cmp
add
mov
jle
mov
jp
fsubs
mov
cltd
lcall
stos
mov
push
xor
xchg
movl
xor
dec
fimuls
cmp
aam
mov
add
xchg
out
push
mov
jne
rolb
outsl
lods
jno
ror
ret
adc
sbb
push
jb
inc
adc
xchg
mov
arpl
jle
add
sub
mov
sub
into
xlat
popf
sub
push
fisttps
das
fidivs
in
or
xchg
gs
cmp
inc
iret
sbb
rol
clc
gs
xorl
add
xchg
inc
sub
xor
pop
repz
add
jns
pop
inc
loope
xchg
aaa
xor
cli
mov
das
jbe
scas
add
push
rorl
pusha
adc
sub
fnstsw
pop
jae
sahf
fdivl
dec
pop
imul
push
aas
inc
sbb
out
sub
shr
push
add
jp
mov
inc
xor
inc
inc
jo
inc
sbb
in
fwait
lock
mov
les
mov
fs
test
jbe
rorb
call
dec
pop
icebp
push
and
daa
ret
call
sbb
sub
adc
aas
sbb
leave
std
fcmovb
push
lods
std
mov
stc
adc
loopne
mov
pop
adc
fwait
jo
mov
fidivrl
mov
push
les
out
add
pop
js
pop
es
adc
in
inc
rorl
test
in
xor
push
add
mov
sub
add
push
jmp
rorl
jb
and
aas
test
xchg
or
pushf
and
inc
mov
unpcklps
insb
dec
nop
push
xchg
xor
hlt
cld
dec
fcoml
mov
pop
push
outsb
nop
xlat
dec
and
mov
pop
inc
cmp
in
sub
movsl
xchg
out
dec
icebp
repnz
stos
lds
ds
adc
pop
mov
cmpsl
out
pop
lods
jle
cld
cli
int
lea
add
inc
adc
cmp
jb
add
and
cmp
fisttpll
mov
arpl
add
mov
rorb
jnp
fs
repz
insb
ret
dec
sti
mov
mov
jbe
test
or
fdivs
in
fisubrs
das
outsb
out
xor
les
out
repnz
mov
xor
ljmp
sahf
mov
scas
movsb
andb
add
dec
pushf
fiaddl
mov
mov
aas
iret
mov
add
std
lea
sbb
pop
adc
sbb
cmpsb
rcr
insl
sub
rclb
lret
aaa
pop
jne
mov
xchg
sarl
xchg
das
cmc
pop
sbb
test
add
into
sbb
xchg
cmp
dec
jg
add
mov
outsw
test
lahf
int
pop
push
jnp
add
cmc
das
xchg
add
rolb
mov
mov
jo
or
xor
mov
jb
mov
loopne
xor
pop
dec
and
jne
inc
dec
pop
pop
inc
nop
sbb
dec
mov
lret
push
sarl
mov
or
filds
add
jo
int
xor
cli
jecxz
sub
push
fidivrs
repz
jmp
addr16
inc
pop
or
adc
pop
and
mov
pop
add
shlb
cmp
shll
push
push
nop
sbb
push
mov
mov
xor
pop
or
lods
mov
or
outsb
add
inc
shlb
xchg
push
pop
cwtl
dec
mov
or
out
sahf
call
mov
add
ja
lea
or
push
popf
clc
dec
sbb
orl
inc
cwtl
cld
push
stos
ror
in
std
mov
inc
dec
inc
push
cmc
jle
adc
js
inc
fstpl
loopne
inc
bound
add
push
int3
lods
push
in
mov
sub
jae
insb
and
test
inc
mov
adc
and
and
sbbb
mov
divb
insb
xor
adc
movsb
out
aad
mov
jb
nop
xor
ret
shr
cmp
lods
loope
pusha
mov
mov
lds
ljmp
into
in
mov
cmp
and
push
jmp
pop
sbb
jg
and
arpl
cld
push
xor
mov
nop
add
cld
xchg
push
jo
and
mov
fstl
mov
add
add
add
add
scas
mov
jbe
mov
filds
fidivs
xchg
or
decl
mov
out
sub
pop
inc
lea
shrl
mov
sbb
sub
pop
mov
pop
cmp
dec
mov
pop
pop
and
fldenv
adc
int3
mov
rcl
cs
pop
dec
test
push
icebp
dec
pop
cli
enter
rcr
jge
popf
jbe
add
add
imul
cmpsb
sub
les
mov
imul
cmc
xchg
rolb
push
stos
fstps
test
repz
inc
in
test
out
mov
pop
das
repnz
mov
loop
fwait
dec
aad
int
sarb
pop
outsb
jb
dec
pop
aaa
adcb
adc
mov
test
sub
loope
push
ret
inc
cmpl
pop
xlat
mov
cmpsb
arpl
mov
ja
and
add
test
sub
cmpsb
xchg
pop
sbb
pop
mov
insl
pop
stos
ret
push
daa
stos
xor
add
outsb
lds
jns
in
enter
xchg
andb
push
push
les
ret
loop
mov
xchg
nop
pop
cmp
inc
cmpsb
faddl
push
cmp
lds
andb
mov
mov
in
shrb
loop
or
add
add
add
add
mov
adc
mov
dec
ss
xor
ljmp
push
push
mov
inc
and
add
mov
enter
jb
add
jle
adc
js
mov
xchg
adc
sbb
mov
lretw
add
ljmp
movntps
adc
js
mov
rcl
lahf
mov
or
push
xchg
jae
jb
pop
and
xchg
inc
mov
call
test
int3
jo
sbb
mov
mulb
fbstp
pop
mov
jnp
test
jl
cld
fnstcw
arpl
adc
mov
mov
sub
mov
mov
imul
scas
icebp
fsts
or
mov
and
nop
fstl
mov
push
jge
cmp
insl
xor
iret
and
jle
or
js
xchg
in
jecxz
in
inc
stos
pop
out
out
and
fldenv
mov
mov
sahf
xchg
negb
jns
xor
mov
push
xchg
int3
shlb
pop
push
dec
inc
xchg
sbb
dec
mov
je
es
add
ja
ljmp
loop
mov
xor
mov
mov
sar
push
shll
enter
insb
enter
cltd
loope
call
in
sbb
jp
test
and
and
sbbb
add
add
imul
pusha
sbb
xchg
mov
arpl
ret
inc
push
inc
lock
cmpsb
sub
jae
mov
sahf
lods
dec
jb
scas
add
jnp
xor
leave
adc
push
sahf
negb
shlb
cmp
mov
push
je
ds
xchg
mov
xchg
inc
lock
mov
test
xor
out
sti
iret
bound
mov
cmp
sbb
pop
mov
sbb
mov
jmp
sbb
scas
sbb
jae
xchg
xchg
jle
pop
jmp
sbb
sub
loopne
bound
jmp
in
mov
daa
in
push
add
aad
mov
xchg
loop
sub
cmpsl
je
sub
jp
sub
sub
stc
or
adc
ljmp
add
add
add
add
sub
push
lock
cmp
mov
sbb
repnz
sub
xchg
addl
mov
sub
xor
jmp
xor
add
das
jns
cmp
cmp
rcl
cmpsl
insl
pop
cmpsl
out
adc
cld
ret
fsubl
out
push
mov
mov
jnp
jecxz
jmp
jle
mov
sub
pusha
pusha
dec
sbb
sub
jmp
add
adc
sub
int
pop
lret
inc
sbb
lret
sbb
jnp
lahf
mov
in
in
mov
scas
test
popa
jp
inc
loope
pop
mov
cltd
mov
les
in
daa
dec
ds
jg
and
loopne
aaa
pop
js
and
dec
xlat
pop
loopne
ret
loope
jge
loope
sub
mov
push
cmp
fcoml
mov
inc
test
out
xorl
xor
lcall
add
add
add
add
xchg
mov
test
sub
fcmovnb
push
iret
mov
adc
xor
inc
and
mov
je
bnd
cmc
clc
jae
popa
lcall
jnp
leave
cwtl
cmp
repz
add
or
leave
sti
in
stc
dec
movsb
add
mov
out
cld
shrl
sahf
in
or
dec
or
call
lret
andl
je
adc
mov
testb
mov
add
add
das
in
bound
bound
adc
fiaddl
pushf
dec
add
movl
xchg
mov
clc
sbb
pop
fcmovu
dec
sbb
fnsave
popf
popf
repnz
sbb
in
mov
insb
addr16
jl
xchg
jne
push
bound
xchg
jne
pop
popa
cli
ss
fisubrs
shrl
sti
jo
aaa
mov
xor
dec
jnp
mov
movsl
push
inc
xor
add
pop
outsl
xchg
int
sbb
add
das
bound
xchg
shll
mov
sbb
mov
cmp
sti
xlat
insl
shrb
and
ffreep
cmp
hlt
mov
lret
gs
sbb
sti
jl
inc
mov
inc
iret
pop
sbb
jne
push
gs
mov
adc
insl
pop
push
mov
pavgb
sbb
mov
or
repnz
pop
sbbl
int
pop
repz
fmul
ja
clc
mov
sahf
adc
and
mov
lret
adc
fcmovbe
sarl
test
ja
in
out
jmp
xchg
xchg
mov
out
and
mov
hlt
adc
jno
in
jne
in
loope
shlb
jp
add
and
fldenv
sub
subps
bnd
and
xor
scas
sub
mov
pop
and
sub
mov
xchg
mov
dec
dec
or
es
popf
xchg
jnp
cmpsl
nop
mov
adc
test
add
cs
pop
or
xchg
cmc
add
mov
out
cld
outsl
mov
enter
xchg
xchg
mov
or
int3
pusha
xchg
jp
mov
gs
into
jg
add
loop
rcrl
xchg
cmp
sub
or
movsb
xchg
or
pop
push
mov
fisttpl
pop
cli
or
aas
push
xor
pop
fdivl
add
add
and
pop
push
sbbl
push
in
jno
fnstenv
arpl
jno
push
sub
or
cltd
pop
outsb
outsb
insb
imul
fcompl
cli
icebp
icebp
out
push
bnd
fdivs
mov
mov
or
cwtl
xchg
mov
shr
sub
jg
jne
fnsave
add
mov
push
pop
cli
mov
fsubrs
push
movsb
add
push
stos
adc
in
inc
ret
adc
test
and
mov
xchg
aas
ds
mov
jp
mov
std
fld
mov
lds
inc
xor
ficoms
das
sbb
sbb
push
decl
jge
in
push
jb
je
add
jle
adcl
dec
cmp
mov
pop
outsb
scas
insl
xchg
test
movsb
pushf
cmpsb
cmp
fsubr
push
and
aaa
leave
daa
or
movsb
shll
leave
rcll
pusha
jle
mov
inc
fimuls
out
mov
cmpsl
pop
push
mov
stos
jnp
and
inc
adc
mov
clc
jbe
test
dec
inc
ret
ss
add
push
mov
jb
sti
xchg
and
cmp
push
in
movsb
sub
ret
fiaddl
cmpsb
dec
jp
add
test
test
pop
mov
inc
or
mov
mov
js
inc
or
or
inc
push
js
inc
rolb
in
cmpsl
sub
sar
sets
ss
pop
lock
dec
jg
xor
in
adc
je
imul
sbb
shr
pop
xchg
jge
rcl
push
xchg
bound
jle
sbb
ja
or
orb
icebp
dec
push
mov
ret
out
jbe
sti
cmp
cld
adc
in
movsb
cmp
aas
xchg
les
rolb
mov
and
jmp
iret
jno
stos
aaa
pop
jnp
rorl
dec
inc
mov
sub
nop
sub
clc
jnp
add
jl
push
test
fildl
loopne
jns
sbb
xchg
cmpsb
sub
jnp
addr16
add
jne
or
ljmp
test
std
mov
adc
inc
repnz
jo
xor
add
add
add
mov
xor
mov
inc
pop
xchg
iret
or
xchg
lret
fs
cwtl
cmc
jmp
fistl
xchg
lret
jl
adc
push
mov
pushf
lea
mov
dec
testl
lds
inc
and
aas
out
sbb
mov
xlat
mov
cmc
shlb
mov
push
push
mov
out
mov
dec
pop
aas
out
mov
fsubl
sub
add
fnstsw
fisubrl
mov
data16
cld
jbe
aaa
pushf
scas
and
cmp
or
daa
jno
addr16
push
test
mov
loopne
and
adc
mov
nop
addr16
mov
ja
int3
jg
jae
test
mov
bswap
xchg
sub
fsubr
sbb
xor
jae
mov
jl
push
xor
sub
or
push
arpl
dec
inc
lahf
dec
movsb
push
stc
sub
add
loopne
xchg
pop
mov
ret
cmc
xor
sbb
cmpl
push
jmp
ss
movsb
jne
or
mov
push
xor
loope
leave
fnstsw
addr16
pop
ret
inc
adc
lods
pop
lret
ds
pop
dec
sub
pop
xor
mov
cli
fsubrs
jae
cld
scas
adc
and
push
mov
mov
xor
cmp
mov
mov
in
push
lds
jmp
insl
roll
dec
jbe
pop
hlt
dec
pop
inc
xor
clc
adc
mov
fdivrs
aam
daa
adc
cmp
add
xor
scas
xor
xchg
ja
mov
push
mov
cmp
lea
pushl
inc
sbb
and
mov
insb
inc
jb
xchg
adc
imul
lock
adc
xor
pusha
outsb
out
adc
mov
ss
push
xchg
adc
push
xor
fistps
jo
mov
or
mov
pop
clc
sub
ja
sti
test
mov
adc
mov
xchg
sti
xchg
bound
insl
ret
popf
icebp
iret
popf
icebp
jecxz
mov
adc
xchg
scas
addl
xchg
cmp
push
xor
in
ds
arpl
mov
xor
mov
sahf
movsb
enter
hlt
push
cmc
daa
jb
jge
stc
daa
sbb
ret
mov
add
loopne
jmp
fidivrs
testb
fdivrl
push
push
mov
mov
call
push
or
and
in
mov
xchg
inc
push
lock
add
cmp
cltd
push
and
shll
pop
cmpsb
mov
add
jno
imul
push
ds
ja
jg
mov
fisubrl
sbb
cmp
inc
and
testb
mov
jne
test
adc
es
jmp
lea
add
add
and
movsl
fwait
in
notb
mov
pop
in
jbe
push
into
jge
xchg
lret
sub
in
stos
daa
pop
nop
ss
mov
jo
orl
fsubrl
jne
mov
rolb
jo
rorl
mov
sahf
jo
and
ficoml
push
or
mov
lret
mov
pushf
add
outsb
sub
cltd
ss
inc
or
add
or
lcall
aad
pop
pop
ds
push
add
pop
sub
cltd
mov
mov
sbb
sbbb
insb
pop
xchg
pop
das
mov
xlat
cwtl
loope
test
test
pop
imul
cmp
add
add
add
lock
cmp
aas
cmp
push
in
fwait
mov
enter
pusha
stos
inc
jb
loop
in
mov
repnz
xchg
lods
pusha
dec
and
dec
adc
insl
imul
cld
out
cmc
cmp
xchg
xor
out
pop
cmp
mov
sbb
push
int
leave
ljmp
addb
sbb
or
aam
or
xchg
popf
arpl
adc
out
inc
les
dec
xchg
jl
idivb
push
push
sbb
shlb
cmp
lock
add
mov
inc
inc
add
add
inc
push
loopne
imul
mov
sbb
int
and
sti
inc
fwait
ljmp
or
hlt
jl
sub
mov
mov
ja
fcomps
mov
ret
popf
addr16
out
mov
push
sbb
ret
inc
ret
mov
es
jmp
jb
sub
add
movsb
outsl
mov
add
xor
out
mov
nop
mov
out
and
sti
jp
push
sbb
xor
outsb
imul
mov
out
cmpsl
fsubrl
xchg
orb
sbb
fdivr
push
idivb
int3
call
add
inc
sarl
inc
push
xchg
rolb
enter
mov
arpl
lods
out
mov
test
push
inc
pop
andl
push
stos
repnz
inc
jl
push
or
mov
and
pop
ss
jmp
mov
fdivr
push
fldcw
lret
enter
add
add
and
call
sbb
xchg
push
lret
into
jl
aas
or
sbb
std
jl
inc
stos
repnz
mov
es
test
mov
sti
or
stc
jno
dec
fsubl
mov
jge
shrb
add
fnstsw
insb
push
ja
jmp
lcall
lahf
mov
or
xchg
mov
add
adc
or
jg
dec
ja
clc
cmc
xor
or
je
and
cld
inc
fldenv
ja
push
cmp
popf
dec
int3
dec
or
pushf
xor
jg
mov
xchg
les
aad
and
movsb
push
pop
out
mov
stos
xor
aad
inc
lret
xchg
lods
push
jmp
std
insl
daa
rcl
lcall
add
enter
out
cmp
or
lds
push
add
mov
js
pop
inc
icebp
stos
xchg
fsubl
addr16
mov
in
mov
pusha
mov
sti
xor
xchg
outsb
xlat
push
dec
je
sub
fsubrl
dec
sahf
jb
out
xor
lods
inc
fsubr
fistpl
lret
dec
pop
shrl
sub
ja
outsl
test
adc
cld
sahf
stc
sti
inc
ds
mov
mov
adc
jmp
push
jnp
jno
fisttps
sub
add
lret
and
xchg
mov
es
imul
jg
sub
push
popa
jo
lds
fwait
or
into
jp
inc
sub
fnstcw
push
test
pop
cmc
xchg
or
add
dec
frstor
pop
imul
sub
jnp
xor
mov
andl
jle
add
xchg
jecxz
js
mov
lock
sti
iret
mov
arpl
ds
sub
mov
xchg
leave
jae
push
add
dec
std
enter
out
lret
movb
push
pop
xchg
cmp
mov
mov
jae
inc
inc
fmulp
push
sbb
inc
mov
jp
cli
xchg
pop
sbb
sub
and
movsb
ja
int
pop
std
mov
popf
pop
adc
movsl
or
or
movsl
mov
jle
ret
jo
jae
fstps
fisttps
adc
pop
stc
xchg
xor
out
pavgb
das
sub
bound
pop
into
adc
or
inc
dec
aas
fiaddl
dec
addl
push
push
test
mov
push
fdivrl
je
dec
inc
in
scas
push
fwait
mov
lds
inc
add
add
inc
pushl
push
dec
pop
or
aad
pop
jne
arpl
mov
xorb
jge,pn
sbb
in
xchg
push
hlt
adc
adc
cmp
pop
sub
dec
ss
sub
jns
outsl
cmpb
xor
subb
mov
out
scas
and
jnp
out
dec
into
cwtl
fdivrs
push
data16
mov
add
add
add
add
popf
test
lods
push
add
stc
andb
mov
ds
inc
cmc
inc
mov
clc
imul
cmp
mov
int
data16
ja
jbe
xor
mov
xchg
out
jp
and
mov
xchg
mov
cs
imul
adc
in
popa
lea
adc
cmp
cli
into
aam
ss
imul
mov
add
add
inc
mov
stos
sbb
shlb
enter
mov
int3
inc
in
xchg
out
mov
sbb
inc
fiaddl
push
jle
jne
pop
sub
cmpb
dec
scas
adc
sub
cmp
imul
adc
jl
jns
call
xchg
bound
sbb
stos
int3
out
enter
push
adc
xor
addr16
aad
mov
addb
lods
stos
pop
fcomp
ret
popa
call
ja
inc
sarl
jle
jp
icebp
call
mov
and
ja
int3
negl
lahf
js
cmp
jne,pn
adc
mov
mov
inc
or
sahf
or
negl
add
test
mov
js
xor
sbb
add
add
add
sub
fstps
mov
mov
jbe
adc
subl
sbb
shlb
inc
jae
ffreep
xchg
pusha
neg
pop
xor
