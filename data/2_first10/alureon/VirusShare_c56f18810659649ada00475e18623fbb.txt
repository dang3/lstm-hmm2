xor
clc
addr16
ret
cmp
or
pushf
insl
mov
or
push
push
mov
cld
push
outsb
ss
cmp
inc
stos
fwait
and
lret
movsb
decl
lahf
cmpl
adc
push
pop
movsb
test
gs
add
pop
test
mov
jne
mov
in
jae
mov
xor
cmp
add
mov
jle
icebp
shll
push
pop
or
sahf
cmc
daa
cltd
jp
adc
sub
imul
mov
insb
xor
mov
ss
sub
shl
dec
movsl
add
dec
add
std
push
or
and
dec
inc
pop
jecxz
inc
cmp
or
gs
out
xor
jo
inc
xor
lods
pop
dec
push
mov
in
fnstsw
insb
jecxz
popa
push
cmc
int
xchg
adc
inc
pusha
add
lods
xor
dec
fwait
aad
lock
mov
cmp
xor
inc
mov
or
lret
mov
pop
arpl
adc
ja
cmpb
or
stos
jae
dec
or
das
fcmovnbe
xor
pop
mov
xor
packssdw
leavew
xadd
jg
and
shlb
pop
fwait
es
or
mov
or
sbb
iret
mov
adc
cvttps2pi
sti
je
loope
sahf
jmp
xchg
add
dec
and
dec
mov
shlb
inc
fsub
bound
addr16
add
adc
jbe
stos
aas
lods
ret
adc
ljmp
push
aas
add
jno
cld
cmpsl
add
xor
dec
jle
mov
hlt
fmull
dec
ja
pop
pop
fimull
mov
movsl
sub
mov
int
stos
in
out
into
out
or
jns
xchg
mov
repnz
lret
lock
mov
out
mov
fbstp
cmp
xor
mov
or
dec
jecxz
int
push
and
je
cmpsl
in
test
push
aam
mov
sub
inc
popa
inc
xor
mov
adc
pop
sarb
fucomip
popf
mov
cmpsl
out
push
or
insl
push
mov
jne
add
cmp
pop
icebp
add
loope
jns
mov
loopne
movsb
mov
fwait
dec
aas
xchg
movsl
stos
lds
popa
out
loope
add
adc
int3
lock
test
hlt
xlat
sub
cld
aaa
icebp
push
lods
xor
dec
jmp
test
pop
mov
push
push
mov
out
jb
adc
cmpl
in
fnstcw
jecxz
mov
fdivrs
rolb
aam
ljmp
ficoms
mov
sbb
mov
pop
jmp
cmpb
cmp
lds
scas
mov
xor
out
incl
testb
add
fidivrs
adc
stos
aaa
in
xchg
mov
sub
sub
pop
jp
inc
out
xchg
push
push
es
xlat
xor
mulb
movsb
xor
scas
jne
push
jl
loop
adcb
notl
dec
bound
or
xchg
mov
xor
cli
shr
daa
daa
dec
out
movsb
push
and
push
adc
pop
outsl
lahf
mov
fnsave
pusha
cmpsb
cli
sub
lahf
pop
push
or
and
or
inc
mov
adc
jo
cmpsb
es
aam
fidivrs
adc
rorb
sbb
or
movsl
jbe
stos
and
jne
mov
icebp
js
out
cwtl
lods
mov
sub
cld
sub
popf
push
ret
lods
jne
xchg
shlb
ret
rcr
dec
and
gs
repz
fs
xchg
into
sbb
ret
add
adc
push
movsb
ds
rcl
outsl
js
xorb
mov
scas
mov
scas
test
aas
sub
xchg
xlat
sub
ret
xchg
add
test
xchg
je
ret
arpl
sbb
xor
xchg
stc
adc
arpl
push
xchg
ret
aaa
sub
test
imul
popa
inc
arpl
daa
dec
aas
loop
out
out
insb
or
sub
add
sbb
pop
scas
mov
mov
scas
in
divl
mov
xor
test
mov
xor
push
psubsw
fistpll
fwait
mov
mov
mov
mov
mov
arpl
jo
fsubl
popa
mov
sub
bound
jnp
xchg
imul
shl
jno
sub
jne
aaa
xor
lea
or
icebp
jecxz
outsb
add
mov
icebp
jae
or
cwtl
or
js
sub
aas
jp
mov
push
or
push
js
inc
ret
int
out
push
ret
sub
int3
lds
inc
lcall
and
push
lahf
pop
cmc
out
fs
iret
and
dec
xor
fcomi
hlt
dec
push
inc
mov
inc
jg
leave
pop
jecxz
shr
int
fwait
mov
mov
mov
push
pop
jge
sarb
cltd
push
inc
aam
lock
xor
xor
mov
push
cmp
jae
mov
or
pop
mov
and
adc
rorl
test
test
dec
pop
arpl
mov
fimuls
daa
xor
inc
add
cmp
cltd
mov
jmp
or
fsubl
sbb
fsubrs
cmpsl
subl
pop
daa
lcall
push
inc
popa
sub
push
xor
dec
cmp
pop
mov
dec
decb
rolb
arpl
push
jb
ret
add
das
addr16
add
push
and
pop
xchg
dec
inc
les
gs
daa
mov
in
in
sbb
pop
test
mov
sub
inc
adc
dec
sub
movsl
fs
stos
xchg
call
and
movsb
call
bound
xchg
push
outsl
dec
scas
and
mov
movsb
cltd
stos
sbb
add
sti
imull
scas
lahf
in
je
xor
call
in
mov
shll
add
xor
scas
pop
jne
out
mov
mov
loopne
sub
scas
xchg
cmp
gs
test
call
jb
lret
gs
sarb
pusha
adc
cli
jp
dec
in
scas
pop
sbb
jge
adc
nop
ja
dec
outsl
jp
and
or
and
inc
or
sbb
orb
test
pop
repnz
in
clc
pop
jp
rorb
pop
jo
enter
ss
js
popf
cmp
adc
jns
pop
in
stc
fs
mov
adc
sahf
je
mov
xchg
repnz
mov
or
push
test
aad
shlb
data16
rolb
push
call
arpl
outsb
int3
inc
mov
jb
pushf
dec
fidivrs
out
mov
inc
es
sti
mov
and
mov
out
stc
sub
iret
in
addr16
add
inc
fldt
mov
incl
pop
mov
stc
xor
mov
cs
inc
jecxz
mov
jge
add
aaa
icebp
shlb
test
or
jnp
test
or
dec
mov
sbb
sbb
es
mov
filds
inc
insl
jge
cld
jns
xlat
fisttps
aaa
addb
jle
ljmp
cmpsl
int
jge
jmp
inc
test
out
loopne
outsb
leave
mov
das
icebp
xchg
pop
mov
add
movsb
inc
mov
sbb
lds
sbb
aaa
sahf
movsb
push
adc
xchg
bound
cmp
aas
xchg
scas
lret
in
dec
shrb
das
push
mov
pop
sub
daa
jb
clc
inc
pop
in
and
mov
dec
pop
mul
mov
outsb
mov
xor
inc
dec
xor
fadd
mov
and
inc
iret
pop
push
adc
sbb
lods
sbb
jno
or
jle
shll
mov
gs
mov
mov
mov
dec
stc
jle
dec
sbb
pusha
cld
iret
push
sbb
daa
dec
insl
lock
cld
adc
cmpsl
cmp
mov
xchg
mov
test
popa
add
jge
push
loop
in
shlb
sub
scas
mov
and
pushf
mov
jno
outsl
xor
or
jp
leave
outsl
xchg
rolb
popa
mov
mov
ret
orl
fnstcw
pop
or
add
xor
cmpsl
mov
daa
adc
cld
push
adc
pop
xchg
insl
sub
add
movsl
stos
inc
mov
xchg
adc
fcomi
xor
dec
xor
insl
sub
mov
dec
lock
add
add
inc
cmp
inc
inc
dec
push
outsl
jne
mov
out
scas
sub
ljmp
cmp
or
and
shrb
mov
add
iret
mov
cmp
push
pop
mov
and
jle
shll
push
mov
mov
dec
xor
loopne
movsb
hlt
mov
cmp
scas
stos
sbb
sub
out
subb
int
adc
inc
inc
enter
repz
push
loope
push
push
cltd
mov
gs
xorb
sub
jmp
push
push
nop
pop
dec
mov
adc
and
insb
jb
rolb
mov
mov
mov
and
mov
mov
add
mov
jl
mov
lahf
cli
or
pushl
mov
pop
xor
pop
out
js
xor
jnp
movsl
cmpsb
mov
loopne
aad
and
jmp
pop
les
cmp
or
push
test
pop
clc
mov
sbb
out
and
cmp
push
enter
xor
sub
lds
inc
mov
mov
andb
pop
xor
pop
sub
mov
mov
dec
push
subb
mov
test
mov
jo
xchg
aam
pop
data16
sbb
push
push
fs
in
wrmsr
test
insb
jge
or
xor
jmp
in
mov
mov
cmp
shlb
das
dec
lea
inc
jp
pop
lock
xchg
push
mov
xor
jnp
push
out
add
sub
movsb
pop
lods
das
push
fisttpl
push
dec
movsl
stos
and
rcll
sbb
bound
cmp
xorb
test
adc
inc
jl
adc
shr
and
xor
pop
ljmp
movsb
daa
jle
cmp
xorl
scas
mov
jl
je
es
adc
push
dec
aam
adc
jns
arpl
pop
repz
cmp
jae
movsb
ljmp
sarl
mov
popf
std
stos
sbb
inc
aam
add
stos
push
xlat
mov
mov
jp
push
test
mov
and
push
shr
lods
jmp
ret
orl
leave
add
insb
loope
dec
cld
and
dec
cli
push
addr16
pusha
sbb
push
mov
mov
leave
pop
xchg
xchg
stc
fnsave
rclb
iret
mov
cs
fdivrs
addr16
loop
mov
jge
test
push
and
outsl
fst
in
or
test
cmpb
inc
mov
push
das
out
arpl
or
jle
cltd
int3
insb
js
push
mov
les
sub
inc
mov
in
xor
jmp
call
jo
fiaddl
out
pop
jbe
int
cmp
cmp
stos
aas
sti
inc
loope
add
xchg
jbe
idivb
pop
xchg
jmp
fcompl
stos
cs
es
std
and
and
xchg
out
add
lea
pop
pop
neg
and
adc
xchg
ljmp
cmp
stc
xchg
fdivrl
in
pop
mov
out
sarl
xlat
sbb
jmp
and
roll
cmc
int3
mov
movsb
cmpsb
and
imul
inc
push
xchg
hlt
jne
mov
or
sub
cmpsb
cmp
sub
push
ja
cs
mov
test
jg
cmp
pop
pop
es
aad
xor
hlt
sub
pushf
mov
adc
jno
add
inc
jnp
ret
popa
inc
sbb
mov
ljmp
or
mov
dec
jg
je
pop
in
arpl
lea
fs
pushf
stos
cmc
adc
jmp
test
rcrb
mov
icebp
cmp
pop
outsb
dec
mov
add
sbb
insb
mov
in
sub
cld
ljmp
leave
pop
add
iret
sahf
dec
mov
idivb
fs
inc
in
mov
pop
xor
rolb
out
stos
pop
fsts
cmp
add
add
pop
icebp
dec
fmuls
mov
xchg
lret
cltd
sub
dec
popf
pop
int3
aas
xchg
push
sub
adc
mov
mov
xor
cmp
pop
loop
mov
xchg
and
fsubrl
pop
aaa
or
cmpsb
mov
pop
xchg
faddl
movsl
idivl
loope
in
int
pop
popf
pusha
stos
out
loope
cmp
rorb
lcall
stos
mov
hlt
stos
inc
adc
insb
push
cmp
es
sbb
push
add
out
into
push
cmp
leave
add
shr
pop
cmp
xchg
das
push
push
rcrl
lods
sbb
mov
mov
or
mov
pusha
pusha
repnz
das
not
or
scas
lcall
cmpsl
out
mov
sub
cld
push
lret
mov
scas
aaa
mov
je
xlat
rcll
xor
mov
sub
insb
ljmp
fcmovne
pop
mov
mulb
scas
sub
pop
ds
push
mov
aam
loopne
ret
les
rorl
mov
fstpl
pusha
and
shlb
int
fmull
push
je
cmovle
mov
sub
ja
mov
cmc
cmpsb
outsl
pop
inc
mov
inc
inc
xchg
sbbl
pop
clc
pop
fs
sub
add
adc
inc
int3
stc
nop
sub
mov
inc
xor
subb
aaa
addr16
and
pusha
mov
lock
jp
ljmp
push
js
or
and
ret
leave
insl
cs
push
inc
add
inc
pop
mov
es
cmpsb
test
test
sbb
xchg
adc
or
push
insl
scas
arpl
mov
pushf
mov
lret
cmp
pushf
cwtl
jne
cmp
jae
cmp
mov
ljmp
movsl
dec
out
ljmp
or
mov
jmp
fmuls
aad
add
push
xchg
push
fwait
ret
mov
jne
sub
pop
add
and
pop
insl
sbb
punpckhbw
pop
enter
sti
pop
clc
add
xor
cwtl
inc
lcall
mov
jbe
pop
add
mov
loop
loop
sub
inc
rcrl
jns
lahf
popf
push
cs
fldl2e
lret
xor
inc
shll
enter
dec
adc
adc
ja
jle
push
std
in
cmp
push
or
lods
mov
outsb
xor
in
aad
sub
xchg
mov
pop
out
in
js
imul
mov
push
sbb
lock
cmp
iret
loopne
out
shlb
xor
mov
adc
ja
xchg
sbb
icebp
mov
jecxz
add
mov
jne
sbb
sub
ret
js
cmp
pop
fcomps
add
add
adc
sti
sarb
xchg
and
call
aas
dec
inc
leave
xor
xchg
adc
jmp
xlat
test
xchg
ret
out
outsb
sbb
rcl
int
hlt
mov
sub
les
je
or
rcrl
test
sahf
aad
mov
pop
jbe
data16
scas
push
je
insb
xchg
adc
xlat
adc
mov
out
jno
repz
idiv
or
xchg
or
jns
add
pop
or
icebp
out
mov
insl
outsb
cmpsb
rcrl
popf
int
push
jns
xchg
pop
xchg
add
clc
push
and
push
fnstenv
mov
fs
xchg
into
ss
pop
jo
push
loope
mov
outsb
scas
test
je
sbb
and
mov
frstor
mov
sarb
or
push
push
jl
int3
fsts
nop
loop
xor
data16
inc
mov
cmpb
insb
xor
sbb
imull
fcoml
xchg
jno
sti
adc
push
ljmp
jne
shlb
cli
push
jg
dec
pop
shrl
mov
aaa
pop
jne
in
push
sub
inc
lods
lea
dec
rcr
movsl
jno
xchg
adc
jns
sar
addr16
fisttps
aaa
pop
push
xor
aas
in
inc
xchg
fmuls
in
xor
inc
pop
cli
ljmp
pop
lret
outsb
loope
ror
cmpsb
jg
cmp
cmc
mov
mov
pop
int
ret
xor
add
adc
fwait
stos
adc
push
loop
into
stos
cwtl
pop
mov
mov
xchg
add
inc
jb
aad
mov
jg
mov
mov
mov
lods
pop
pop
popa
or
jp
sti
xor
pop
bound
mov
test
inc
bound
cs
test
rclb
fcmovne
loop
dec
mov
mov
clc
out
test
call
pop
jns
inc
shll
pop
scas
or
imul
mov
dec
insl
inc
or
mov
add
lock
xchg
mov
ret
inc
or
inc
data16
and
mov
addb
dec
lea
mov
aas
das
jp
dec
xchg
cmpsl
and
mov
ret
shrl
xorl
mov
cmp
stos
test
ret
inc
push
or
inc
push
xchg
fstpl
movsb
ss
pop
fwait
dec
sbb
mov
sarl
inc
bound
in
rcrb
aaa
bound
ljmp
aad
scas
pop
test
cmp
mov
cmp
mov
push
pmullw
jmp
add
aam
cmpsl
sub
mov
int
mov
add
clc
andl
xchg
jecxz
pop
test
pop
xlat
or
stos
jp
mov
pop
fiadds
xlat
inc
push
jb
aam
test
mov
sub
xchg
inc
jmp
daa
pushf
jecxz
insb
in
mov
dec
fdivs
jns
sub
adc
mov
add
jmp
xlat
pop
jecxz
ds
lock
fnstcw
out
cmp
sbb
xor
fs
and
pop
dec
and
je
daa
push
mov
mov
cli
jecxz
and
pop
std
mov
int3
hlt
sub
pop
dec
mov
inc
scas
pop
mov
xor
or
lock
dec
dec
jle
movsb
fsubrp
popa
jbe
inc
adc
sub
popf
push
dec
jge
call
lahf
pop
iret
fsubrp
jns
bound
aas
lods
nop
cmp
xor
test
jmp
dec
popa
mov
xchg
add
add
sahf
and
in
xor
loope
xchg
or
mov
call
into
out
pop
pop
or
aad
jl
ss
mov
out
push
out
jno
adc
pusha
or
clc
and
popa
pusha
icebp
mov
sub
popf
outsb
bound
aam
es
pop
mov
mov
jl
lret
lds
cld
push
cmp
inc
mov
sub
adcl
dec
movsb
mov
scas
mov
push
mov
in
dec
cmp
mov
adc
adc
cmp
bound
inc
cmpsl
cmpsl
xbegin
mov
or
mov
dec
pop
std
jl
in
cmp
or
push
out
stos
push
stos
dec
addr16
daa
add
lcall
mov
push
xor
pop
xlat
insl
dec
les
je
stos
repz
loope
out
mov
pop
cmc
addb
jl
rolb
cmp
push
fcomi
and
sbb
stos
xchg
jp
je
push
mov
inc
sbb
fst
and
and
pop
repz
loop
cmp
push
jbe
add
lea
ljmp
push
mov
inc
ljmp
in
push
pop
inc
pop
add
repnz
aas
cmc
mov
aaa
int3
test
adc
sub
add
adcl
cmp
lock
fbstp
into
js
adc
jb
lods
fucomi
push
pop
outsb
rcrb
adc
scas
push
mov
sbb
imul
mov
arpl
jmp
fisubrl
push
cmp
add
pop
stos
adc
lcall
xchg
or
scas
jmp
testb
cmpsl
push
scas
scas
or
add
sbb
push
cmp
jmp
mov
push
movsb
loopne
and
lcall
adc
or
ret
mov
jbe
sbb
adc
cli
pop
stc
dec
sub
adc
lcall
lcall
jecxz
int
sbb
or
xor
mov
xor
das
xchg
hlt
mov
repz
jno
add
clc
fstl
data16
pop
popa
mov
jb
aam
divl
push
bound
inc
xchg
mov
pop
push
xor
sbb
iret
lret
sub
jns
inc
lahf
subl
push
ret
fisttps
clc
movsb
xchg
pop
scas
test
leave
mov
adc
jecxz
gs
mov
inc
std
inc
pusha
jns
cmpsl
cmpsb
jb
push
jg
jp
add
xor
in
test
cmp
stc
dec
mov
xor
mov
lock
lods
les
mov
in
icebp
in
idivb
jg
mov
pop
xlat
imul
jecxz
dec
dec
inc
xor
pop
data16
cmpsl
mov
dec
into
ret
test
inc
cmp
and
xchg
loopne
xor
out
inc
out
mov
cmp
dec
scas
jns
in
sub
cs
stos
leave
popa
xor
or
out
movsl
push
xchg
jbe
addr16
shlb
ss
nop
push
and
clc
in
adc
push
and
sub
mov
dec
jmp
ret
sub
bound
aam
pusha
xor
loopne
mov
mull
mov
xchg
pop
xlat
int3
push
sbb
xchg
cmp
and
jnp
cmp
xchg
hlt
cmp
mov
pushf
in
xchg
popf
out
lret
in
mov
cmpsb
jnp
pop
pop
add
ds
push
sub
or
out
mov
es
rorl
xchg
daa
arpl
outsl
jmp
fcmove
jle
xchg
push
cld
andl
into
test
je
cmp
pop
cld
pop
xchg
sub
xchg
adc
daa
out
or
mov
adc
sbb
mull
inc
je
or
adc
test
xor
cmpsb
xchg
cld
leave
in
icebp
inc
shll
pushf
sbb
jo
dec
push
xlat
stos
ss
sub
es
dec
jg
cld
adc
pop
jbe
inc
cmp
fbstp
inc
cmp
push
dec
jno
or
xchg
sahf
xchg
fdivrs
add
inc
jecxz
and
fldlg2
lds
and
push
adc
mov
mov
xor
and
int3
mov
daa
sbb
aam
jge
stos
imul
fnsave
pop
imul
sahf
inc
stos
or
aas
xor
adc
jns
iret
xchg
push
inc
xor
xor
out
xchg
xor
dec
fs
fnstsw
fidivrs
mov
jae
fmul
imul
mov
pop
push
lret
xor
push
and
fidivrl
or
jo
fs
in
or
cmpsb
scas
std
das
pop
ret
mov
cmc
and
jno
jge
lret
inc
inc
add
jmp
shlb
lods
cmpsl
pop
into
in
pop
lods
xchg
jg
cld
and
mov
add
dec
jb
lret
dec
mov
loopne
ret
cmp
adc
fcompl
into
inc
insl
xchg
loope
add
dec
pop
push
xor
cld
xor
pop
xor
mov
shll
or
mov
adc
pop
xor
inc
cmc
push
and
stc
dec
xor
pavgw
stos
push
xchg
in
add
daa
inc
orl
push
pop
es
roll
fisubrl
into
hlt
pusha
das
flds
add
clc
fdiv
jnp
fmuls
addr16
movsb
fdivrp
push
scas
rcrb
jns,pt
sbb
addr16
and
mov
add
adc
sbb
fnstenv
divl
mov
xor
loop
pop
rol
ljmp
enter
mov
addr16
int
add
mov
shll
mov
cmp
dec
subb
repz
dec
in
inc
add
mov
jo
mov
imul
cmp
aad
jmp
mov
pop
jnp
sub
push
aas
mov
adc
ds
stc
mov
adc
jmp
jb
test
ja
pop
dec
andl
insl
sub
les
ja
fcmovnbe
xor
inc
pop
sbb
mov
out
test
jle
bound
enter
daa
push
out
sti
mov
dec
push
mov
jecxz
cmp
popl
adc
ret
mov
xor
dec
shrb
sbbb
jmp
cmpsl
out
rol
xchg
or
je
repnz
or
fildll
pop
mov
hlt
cmp
adc
sbb
je
mov
rcrb
lods
jb
aaa
arpl
imul
lods
sub
adc
mov
xchg
cld
out
push
fs
ret
add
imul
mov
push
rorl
sahf
dec
stos
cmpsb
fidivs
sub
inc
add
and
or
pop
or
rcl
imul
in
pop
sub
cltd
leave
outsb
fcomip
not
loop
daa
sub
lods
iret
xchg
enter
inc
jp
inc
sub
jb
mov
push
sbb
lcall
ss
imul
fisttpll
mov
mov
mov
lds
cmp
sti
sbb
pop
mov
cmpsb
inc
call
ljmp
add
loopne
pop
jmp
movsl
out
mov
cmpsl
dec
and
add
mov
xor
cmp
sbb
data16
in
jl
pop
push
xor
sub
and
gs
enter
sub
mov
pop
in
xchg
fstps
xchg
jp
mov
lods
and
pop
fisubs
inc
enter
aad
cmp
lock
xchg
stos
add
mov
cmp
adc
popf
insl
addr16
push
lds
xchg
dec
in
pop
push
les
mov
pop
fsub
push
cli
popa
or
sub
adc
popa
pop
adc
cmpsb
or
mov
dec
push
orb
pop
push
dec
ja
testl
movsb
addl
lahf
xbegin
pop
aas
cli
sarl
fidivl
inc
rorl
jmp
inc
or
jmp
push
inc
in
or
leave
mov
daa
ljmp
clc
aas
mov
mov
rcl
dec
mov
aad
jp
xchg
in
and
mov
xchg
adc
fistpll
mov
stos
push
xor
mov
repz
add
jbe
jl
mov
xchg
mov
sbb
leave
lods
mov
xchg
pop
into
or
aaa
mov
pop
jl
stos
cmp
inc
mov
jg
mov
jne
lea
inc
mov
cmp
mov
mov
rorl
cmpsb
lock
dec
cli
pop
repnz
or
or
sub
pop
mov
mov
shrl
clc
cmc
dec
push
outsb
decb
lods
ret
pop
push
aam
pop
jg
dec
push
test
cwtl
sub
jge
fdivrs
popa
insb
add
sub
mov
push
loopne
fmuls
add
lea
mov
push
decl
sub
pop
shll
sub
mov
cli
nop
push
cmc
test
mov
popa
xor
xor
push
ljmp
mov
data16
or
dec
fcom
adc
mov
add
lret
lcall
fcmovnu
jns
mov
mov
mov
mov
add
lret
sbb
into
and
popa
and
arpl
lock
add
stc
inc
xchg
jecxz
sbb
aaa
jbe
loop
xchg
jno
shll
jl
add
mov
sub
mov
scas
sbb
or
jnp
jp
mov
call
cwtl
adc
mov
inc
pop
out
mov
pop
sbb
int3
dec
xorb
xchg
inc
int
outsl
outsb
js
out
rorb
mov
cmpsl
jmp
mov
cmp
xlat
and
fisubrl
cli
push
xor
je
les
pop
pusha
mov
xchg
jp
int3
pusha
cmp
push
lcall
pop
data16
imull
dec
sbb
sub
stc
xchg
mov
aam
lea
mov
inc
iret
pop
or
aad
and
cltd
inc
xchg
cld
cmp
jbe
push
hlt
mov
adc
push
idivl
andl
dec
and
in
popa
sbb
sub
enter
jno
mov
iret
imul
lds
jmp
lods
adc
push
ds
hlt
movsb
sarl
inc
pop
shll
hlt
ret
sbb
adc
mov
add
mov
sbb
adc
lock
enter
mov
cltd
mov
iret
mov
xchg
xchg
outsb
aaa
jo
gs
loope
mov
imul
mov
in
jl
lds
push
push
pop
jecxz
sub
sti
sarl
cli
dec
stos
sub
or
push
jl
sahf
out
and
lret
mov
xchg
mov
xchg
jne
addr16
in
push
mov
psrad
cmpsl
mov
leave
pop
call
push
sbb
fcompl
shll
pushf
mov
stc
nop
mov
mov
es
sub
or
push
ficompl
pop
adc
or
mov
into
fidivs
fisubrs
mov
popa
out
ret
lods
dec
push
repnz
outsb
pop
bound
xchg
xor
jne
daa
fimull
sahf
imul
stc
add
nop
insl
mov
jecxz
pop
mov
jne
pop
or
sub
and
orl
inc
inc
adc
scas
mov
pushf
clc
jp
mov
popf
test
xchg
xor
mov
ret
fwait
cli
jl
sbb
inc
xchg
outsb
call
jmp
cmp
lcall
sub
push
mov
pop
adc
xor
pusha
mov
cvttps2pi
ds
mov
xlat
rolb
mov
mov
rorb
es
pop
mov
xor
jle
call
pop
addr16
add
aad
cmp
lods
push
pop
idivb
inc
add
sbbl
cmp
lods
stc
mov
mov
push
xor
jo
popf
xor
sub
xlat
mov
mov
pop
pop
sub
and
jg
pop
mov
lahf
cli
mov
cmp
ljmp
js
lods
or
jecxz
outsl
fnsave
cmpsb
pop
adc
adc
mov
in
jg
movsb
pushf
jle
mov
sahf
xchg
pop
data16
xor
vpmulhuw
rcll
cs
lahf
out
dec
inc
mov
imul
xchg
into
mov
das
andb
or
scas
insb
das
xchg
inc
xor
out
fsubl
xchg
mov
lods
pop
or
in
cli
and
inc
adc
push
or
mov
int
sbbb
xchg
subl
xor
icebp
and
inc
mov
lods
lods
in
ret
xchg
mov
jae
lret
push
jns
push
ret
sbb
shll
mov
xchg
sahf
cmpsl
dec
jl
cli
sahf
pop
sub
sahf
sarl
sub
shll
orb
pop
xchg
addr16
test
sbb
outsb
aad
adc
les
jecxz
or
and
xlat
popa
dec
stc
inc
sbb
stos
push
xor
and
add
xchg
sbb
pop
ret
mov
insb
jl
fldl
push
jg
and
pop
scas
sbb
xchg
les
cmp
add
fwait
stc
sti
adc
xchg
sbb
add
push
iret
pmullw
cmp
cmp
xor
mov
lret
pop
mov
jg
lretw
mov
ret
insb
dec
popf
sbb
sub
mov
test
mov
cmp
jae
mov
addr16
sbb
jg
dec
push
pop
add
nop
jno
pop
or
das
adc
jns
cltd
incb
lock
push
mov
sar
negl
pop
sbb
loop
dec
xchg
mov
fldl
jg
mov
dec
mov
cmp
or
add
adc
sar
jle
bound
ss
xchg
cmp
mov
out
sahf
mov
je
rol
push
xor
gs
dec
addb
cmpsl
cmpsb
add
dec
sbb
ja
inc
push
sub
xlat
mov
xor
push
sub
test
das
hlt
lds
cwtl
shlb
pop
cmpsb
adc
mov
mov
andl
sbb
mov
cmp
cwtl
sub
clc
in
ret
lods
xchg
cmp
mov
sbb
adc
out
stos
fdivs
into
ds
mov
sub
sub
lahf
stc
cmp
ret
pop
loop
lahf
cmc
stos
int3
push
sbb
aam
jae
add
outsl
dec
fcom
movsb
cmp
xor
mov
or
dec
orl
jg
push
sbb
cmp
cmpsb
fdivr
sbb
mov
nop
sbb
ficompl
xor
inc
mov
pop
pop
test
in
jmp
add
es
mov
mov
lock
out
sbb
movb
inc
lods
js
cld
popf
lea
js
bound
jae
adc
fsubrl
call
sarl
inc
std
mov
add
push
jns
out
int3
aaa
roll
jbe
and
ret
mov
sub
pop
shlb
jo
xor
or
call
xor
cmpsb
pushf
add
mov
xchg
out
testl
push
outsl
cmpsb
sbb
call
nop
dec
aad
leave
sarb
int3
lret
arpl
or
mov
bound
xor
push
orb
add
xchg
push
out
jae
rcll
inc
fnstcw
dec
cmp
pop
xchg
and
lahf
pop
imul
int3
lahf
sbb
cmpsl
sbb
sub
or
mov
mov
int
fwait
out
andb
jno
jl
sub
lock
sbb
add
xlat
adc
cmc
adc
push
and
or
jo
adc
cmc
sub
and
bound
mov
pushf
incb
mov
add
cmp
insl
mov
sub
dec
add
fsubrs
out
cmp
dec
lock
jge
xchg
cli
fnstsw
repnz
pop
jmp
pop
or
out
jle
movsb
push
repnz
jo
fstp
sub
xchg
cs
pushf
jl
pushf
les
addr16
bound
and
repz
and
insb
and
mov
test
lret
in
test
insl
rolb
add
jns
adc
inc
xchg
je
leave
cmp
and
call
jmp
loopne
or
push
sub
or
jne
mov
daa
cmc
pop
test
cmpsl
sbb
mov
lods
push
cmc
xchg
inc
xchg
jnp
mov
cltd
cmp
mov
pop
ds
sti
out
leave
loopne
lods
sub
out
cmpsl
jp
mov
xlat
mov
sbb
dec
inc
push
dec
mov
cs
cmp
ret
jns
or
testb
xor
or
fiaddl
mov
stos
xchg
or
jae
mov
push
mov
adc
adc
scas
rclb
int
lcall
outsb
sbb
cmp
jns
ficoms
fmuls
in
js
mov
dec
add
fcmovnbe
dec
lahf
cld
insb
mov
inc
lea
nop
mov
in
and
inc
push
roll
jo
xchg
jae
cld
jne
shll
stos
pop
fs
hlt
ljmp
shrb
movsl
dec
dec
sbb
sbb
lret
clc
ljmp
fdivrp
test
adc
nop
jmp
cmp
cmp
mov
cmpb
inc
push
mov
dec
addb
arpl
test
push
xor
jb
xor
mov
xor
dec
or
packuswb
xchg
push
and
and
cmpsb
mov
add
enter
push
mov
mov
sub
insl
loopne
sahf
mov
rcll
cmpl
cmp
sub
add
fldenv
lahf
movsb
cmp
lret
xchg
mov
imul
or
int3
lcall
fucomp
rorb
test
adc
xchg
lahf
xor
push
les
push
cmp
aas
addr16
adc
sbb
and
sbb
pop
bound
dec
cmpb
test
fmuls
aaa
out
mov
stos
repz
push
sahf
outsl
xchg
pop
ss
fmulp
dec
mov
call
sub
mov
mov
mov
mov
add
dec
scas
ret
adc
scas
in
push
push
sti
sub
ret
addr16
std
push
push
push
fstl
or
or
pop
shr
jge
filds
pusha
sub
imul
and
xchg
stc
dec
and
fstl
lods
dec
mov
sub
in
mov
ret
out
mov
push
ret
js
int3
cld
inc
add
and
and
movsb
aad
shll
pop
je
hlt
inc
fbld
push
sub
lret
in
outsl
loope
adc
push
push
dec
lret
lcall
fimull
aas
repz
or
mov
add
and
std
add
xchg
out
bound
imul
lods
call
or
in
adc
ds
jbe
cmp
mov
adc
es
mov
out
pusha
lds
mov
popa
je
jno
xchg
insb
and
adc
std
xchg
or
or
into
push
sub
ss
pop
int
jbe
xchg
out
inc
sub
inc
sub
addb
mov
and
int
lods
cmp
scas
clc
stc
mov
iret
cwtl
dec
repz
leave
jmp
leave
imull
mov
outsl
ret
xchg
cmp
pop
mov
pop
xchg
notl
xor
jg
jg
repnz
test
in
dec
cltd
push
sub
jne
push
and
test
fs
push
jb
jge
pop
repz
or
pop
mov
mov
xor
stos
and
popa
loop
mov
mov
divl
cld
dec
in
xchg
dec
and
or
cmpb
int
ljmp
call
sub
repz
fcomi
add
outsl
test
std
sarb
mov
jns
std
enter
jge
test
loop
cld
fadds
dec
lods
je
cmpsb
mov
cmp
adc
adc
pop
aas
lods
xchg
pop
iret
adc
dec
jbe
out
bts
push
pop
outsl
mov
in
add
xchg
mov
insb
adc
jb
fistpll
push
push
lcall
xor
mov
mov
fstpt
mov
rorl
daa
jno
push
popa
faddp
xchg
cs
movsb
mov
pop
in
jg
mov
rolb
fisubl
cmp
or
pushf
xchg
scas
jo
sbb
xchg
inc
and
mov
xor
sub
lds
mov
lea
xor
cmp
stos
jno
inc
das
mov
stc
fnstenv
add
sub
stos
jbe
mov
adc
dec
mov
cltd
js
mov
dec
and
iret
je
adc
rclb
sbb
push
lods
pop
adc
push
ret
add
daa
xor
mov
jg
xchg
push
adc
pop
test
movb
jb
and
jno
shrl
sbb
and
pop
cld
mov
mov
jbe
cmc
mov
adcl
add
sbb
out
cmpsl
or
sub
daa
push
test
repnz
mov
sbb
andb
ret
adc
sti
xchg
fstpt
add
jl
fs
les
ss
int
push
mov
ret
js
aas
mov
jne
inc
or
movsl
sarb
inc
mov
sub
scas
lods
add
aad
mov
addb
test
pusha
test
rorl
push
mov
aam
bound
sub
push
fdivs
lea
jp
xlat
push
sahf
cmp
into
addr16
xchg
adc
movsl
and
push
lods
lds
sbb
sbb
sub
lods
jb
dec
aam
in
stos
imul
mov
mov
or
cli
jg
mov
xchg
push
ret
hlt
cs
mov
mov
gs
and
jne
pop
push
jae
and
pop
jnp
stc
pop
mov
inc
jb
mov
mov
dec
iret
pop
mov
push
add
iret
decb
fldcw
test
hlt
xchg
inc
mov
dec
sbb
nop
and
lcall
popf
roll
jg
shrl
xchg
mov
jb
sbb
out
insb
dec
jmp
mov
fxch
mov
or
jno
jae
enter
inc
lock
negb
pop
shlb
inc
in
adc
cwtl
dec
into
rolb
jns
jmp
jbe
push
inc
sub
jg
push
add
and
movsb
pop
das
imul
scas
shll
xor
mov
and
enter
pop
mov
mov
pop
xchg
inc
xchg
sub
cmp
lds
aaa
jns
scas
inc
fsubrl
jo
mov
xchg
inc
sti
xchg
cwtl
idivl
cmpsb
movsl
inc
imull
sbb
pusha
ret
test
mov
rorb
cld
mov
lret
shll
imul
inc
add
jb
jae
or
flds
jmp
ljmp
cmp
orl
imul
js
pop
push
xor
mov
lea
adc
sti
push
fiadds
cmp
pop
xor
sub
add
sbb
sub
add
xor
add
rep
aam
cmpsb
push
mov
lcall
jnp
sbb
fldenv
mov
dec
std
call
adc
add
mov
add
arpl
in
inc
aas
sub
jecxz
or
xor
fildll
sbb
pop
lods
cmp
jo
push
inc
insb
clc
push
pop
mov
stos
xlat
mov
std
insb
push
mov
frstor
dec
test
shrl
mov
or
jb
mov
sbb
cmpsb
mov
cmp
xchg
stos
pop
jmp
dec
stc
popf
dec
insb
enter
arpl
aaa
loop
pop
cmp
and
sbb
mov
dec
push
inc
nop
idivb
sahf
jmp
out
outsl
sbb
mov
stos
clc
add
mov
mov
mov
out
jecxz
cmp
cmp
xor
lret
aaa
adc
fwait
lods
repz
xor
dec
shr
mov
push
jnp
pop
inc
test
ds
out
jl
xchg
jg
sbb
adc
arpl
jl
adc
mov
xor
sub
mov
orb
je
mov
test
mov
cmc
loop
mov
and
adc
test
enter
mov
movsl
mov
dec
aam
into
das
xchg
daa
popf
aad
rorb
inc
in
addl
cmp
pop
push
inc
mov
xchg
xor
jo
sub
lods
lcall
scas
popf
mov
push
lret
mov
mov
cli
fadds
cmp
or
xor
stos
pop
adc
pop
ljmp
push
and
xchg
jecxz
pusha
rorl
inc
xor
push
aaa
addr16
mov
mov
sbb
test
fisubs
mov
push
aas
out
mov
xor
or
jmp
and
jae
push
outsl
es
adc
mul
push
pop
mov
shll
insl
and
in
xor
mov
test
stos
aas
popl
movsb
in
aam
dec
add
dec
dec
mov
mov
push
fwait
pushf
fdiv
xchg
aam
int3
jle
xchg
and
call
xchg
imul
test
xchg
jge
jl
rolb
and
ret
enter
adc
pop
stos
add
xchg
dec
sbb
mov
mov
scas
in
dec
notl
pop
popa
mov
mov
lods
arpl
push
push
dec
pop
outsl
movsb
sbb
and
or
repz
aam
cmc
ret
adc
sbb
cmp
push
pop
push
jl
scas
hlt
pop
cmpsl
jnp
xchg
dec
xor
subl
sub
iret
shrb
add
jle
mov
jne
push
imul
arpl
mov
xchg
movb
scas
add
stos
fsubp
push
xchg
scas
fistpll
outsb
and
pop
mov
push
repnz
enter
sub
xchg
fadds
lahf
xchg
jl
in
sbb
pop
mov
sub
stos
scas
jge
and
adc
jecxz
test
adc
stc
scas
jecxz
nop
andb
in
sbb
cmp
mov
pop
jp
inc
adc
jbe
mov
adc
lds
fisubrs
or
shlb
scas
lea
jecxz
repz
and
repz
inc
mov
or
cmp
leave
xchg
xorb
icebp
in
in
or
leave
loope
sub
push
jmp
bnd
icebp
xor
dec
and
and
pop
leave
or
jg
jl
fdivl
cmp
push
mov
sbb
cmp
cmp
js
pop
inc
js
jbe
lret
shll
icebp
enter
fldenv
imul
cmpsl
add
out
rcll
in
ljmp
lds
lds
xor
mov
xor
pop
mov
movsb
push
and
mov
adc
ret
adc
cmp
subl
xchg
mov
pop
add
sarb
xchg
je
add
inc
xchg
outsl
or
cltd
fwait
mov
inc
mov
mov
xchg
pushf
pop
jo
out
push
fcomps
dec
sbb
inc
seta
adc
int3
stos
cmp
cld
pop
pop
out
cli
sbb
nop
daa
pop
jge
adc
aam
sbb
pop
cmp
mov
and
out
insl
inc
lahf
push
ds
xchg
lds
cmp
pop
stos
and
aas
arpl
ficomps
outsl
arpl
mov
les
sti
adcb
out
mov
adc
mov
test
add
mov
adc
data16
or
or
out
mulb
pop
gs
pusha
stc
ja
add
xchg
sub
mov
in
lahf
dec
push
call
add
push
mov
test
out
iret
in
add
les
clc
cmp
in
jns
aam
js
pushw
jb
jbe
pop
movsl
ret
fimuls
ja
ds
or
rclb
fs
int3
sub
sub
in
mov
mov
mov
push
xchg
stc
push
jns
loop
js
push
jo
lock
iret
int
dec
rcl
and
cmp
mov
push
or
jecxz
xchg
jne
dec
jbe
nop
pop
dec
mov
rolb
add
rcrb
js
cs
sbbb
mov
mov
movsb
and
pop
jp
and
mov
leave
hlt
outsb
pushf
outsl
pop
sub
and
sub
cmpsl
das
test
push
rcr
jae
dec
flds
out
push
mov
mov
fcompl
xchg
sbb
ret
jg
js
fsubrl
mov
inc
in
sti
cmp
xlat
add
pop
sub
xchg
loop
sbb
jecxz
stos
mov
daa
and
ret
js
test
or
repnz
daa
out
mov
fisttps
push
mov
test
movsl
sahf
sbb
fstps
inc
popf
inc
cmpsl
int
aad
cld
mov
cmp
cmpsb
lds
inc
jecxz
xchg
mov
pop
and
push
cmpsb
jp
out
es
add
cmp
js
jb
fsubrs
dec
flds
fsubp
or
lds
inc
addl
fstpt
pop
iret
push
jge
fimull
jmp
int3
mov
jno
pop
pop
ret
gs
mov
cmc
leave
sbb
enter
xchg
jno
mov
jne
cmpsl
and
cmpsb
cmp
fmull
push
mov
ss
cmp
push
ja
dec
jmp
pop
add
cmp
mov
and
hlt
dec
add
sbb
cmpsb
xor
in
sub
push
push
mov
cmp
or
or
lret
out
cs
or
nop
or
ja
imull
aad
out
imul
mov
adc
mov
push
add
lods
out
sets
and
test
mov
push
sub
mov
push
outsb
adc
lcall
push
push
mov
aas
lods
dec
stos
push
test
push
xchg
fwait
shlb
xchg
pop
orl
lock
cld
data16
mov
out
int3
jno
push
push
mov
ret
push
aad
test
mov
daa
xchg
adc
xchg
negb
jmp
es
xchg
sti
loopne
jecxz
cmp
mov
cmp
sti
lahf
mov
es
test
add
pop
pushf
pop
test
sub
mov
push
xchg
xorb
shr
add
loopne
mov
and
or
jmp
or
mov
cs
add
mov
inc
fsubrl
test
fidivl
adc
lods
or
mov
inc
loope
pop
lods
sahf
inc
adc
pop
jge
js
xor
out
xchg
inc
xchg
inc
ljmp
cmp
adc
popa
stos
jle
hlt
int3
fisubl
pop
or
jg
mov
ror
in
arpl
sbb
popa
ret
pusha
int3
and
or
rcll
mov
dec
shrb
cmp
jge
xchg
les
incl
jp
dec
inc
and
push
cmp
mov
mov
or
cmc
dec
outsb
jecxz
or
dec
fsts
movsl
mov
jno
adc
lret
ss
flds
cltd
dec
daa
rcrl
adc
cmp
xchg
inc
xor
add
popa
in
add
out
pop
push
inc
jl
test
je
movsb
sub
adc
lods
popa
sti
test
into
adc
inc
sbbb
sub
or
aaa
or
leave
pop
mov
test
icebp
stc
mov
or
pop
sarb
div
mov
rep
mov
dec
mov
out
mov
ret
lods
cmp
in
push
test
sub
ficompl
xchg
fistl
pop
out
aaa
cli
popa
or
pop
clc
sarb
xchg
pop
inc
iret
out
mov
mov
fsub
add
lret
nop
shr
xchg
pop
sti
fs
fldt
push
jg
fnstcw
in
test
sbb
ret
or
mov
sub
test
adc
fstpl
cmc
out
sub
loope
inc
push
fldpi
lea
lcall
pop
in
es
inc
xchg
in
lock
cli
pusha
xor
dec
jns
mov
mov
ja
pop
xor
push
rcl
jnp
jl
adc
adc
and
nop
inc
ret
inc
fdivrp
add
mov
add
mov
mov
ficoml
mov
cmpsb
inc
sub
jecxz
add
ss
or
dec
or
xchg
and
inc
xchg
xor
pop
shl
das
out
sbb
sub
cmp
sbb
lods
clc
xor
mov
stos
arpl
js
push
ficomps
cmp
jge
cltd
sub
stos
outsl
cltd
fsubs
mov
inc
lcall
orl
adc
sbb
push
add
mov
cltd
mov
push
test
pop
lcall
cmp
pop
loop
mov
mov
jbe
ret
sub
pop
je
lods
xor
push
ja
push
imul
lea
hlt
pop
adc
leave
test
sbb
pop
mov
or
mov
leave
js
stos
mov
mov
pop
in
pop
loope
sar
xor
jecxz
xor
or
xchg
shlb
add
sub
xor
jecxz
dec
mov
dec
repnz
andl
in
dec
js
shlb
iret
cltd
negl
test
out
add
pop
mov
loope
mov
outsl
cmpl
aad
sub
fsubl
rolb
movsl
arpl
mov
cmp
mov
aaa
cmp
stc
dec
loopne
inc
adc
sub
dec
out
in
mov
add
push
sub
int
sbb
loopne
andl
outsl
push
js
xchg
sub
cmpsl
xor
jb
lds
cld
repz
insb
xchg
iret
sub
lock
add
add
sti
sarb
decl
stos
xor
and
inc
ljmp
data16
lock
jmp
mov
stos
fbstp
or
stc
cltd
out
shlb
add
rcrb
test
mov
jns
cmp
jg
dec
push
test
nop
lds
out
cltd
inc
sahf
lea
cmp
ficomps
scas
sbb
mov
pop
cwtl
aas
pop
sub
aam
or
xchg
xor
jmp
sbbl
sbb
inc
leave
sahf
in
arpl
lods
xchg
adc
jne
shrl
js
movl
add
jno
cld
enter
hlt
cmp
imul
mov
int
add
fiaddl
js
in
add
adc
xorb
or
int
stc
jb
mov
jmp
test
lods
sub
stos
inc
daa
mov
or
mov
mov
cwtl
jge
stc
mov
test
jbe
test
rcll
xor
and
imul
adc
inc
lea
js
adc
dec
mov
je
stc
sbb
sub
pop
sub
out
jp
repnz
inc
dec
add
mov
cmpb
cmp
pusha
addr16
sbb
stos
sti
jmp
data16
ror
pusha
imul
push
lahf
xlat
add
pop
test
jge
clc
stos
push
sub
mov
lods
hlt
and
push
shll
mov
pop
xchg
jl
clc
or
xor
inc
jp
popf
push
fwait
test
add
dec
add
mov
jbe
test
rcll
orb
dec
enter
xchg
inc
test
jno
mov
ffree
insl
rclb
mov
cmp
or
jge
pop
fimull
xchg
repz
imul
xchg
into
lcall
popf
jge
cltd
cmp
loop
cmp
outsb
jle
jg
lods
sub
int
sbb
mov
adc
jp
sub
and
lods
aam
sub
mov
lods
xchg
xor
xchg
les
sbb
stc
movsb
mov
mov
dec
mov
jns
pop
ds
cld
xor
sbb
das
out
insb
fcmovbe
push
jo
in
test
fs
push
pop
sti
jg
sub
aad
jmpw
xchg
loope
dec
push
aaa
or
add
push
movsl
mov
repnz
pop
ja
and
aam
stos
sub
sbb
in
jp
mov
ret
fwait
push
push
pop
dec
and
in
jp
movsb
test
add
xlat
int3
sbbb
lods
mov
jmp
inc
sub
js
lods
jmp
xor
xchg
jl
leave
hlt
lock
mov
adc
shl
sbb
dec
jge
subl
xchg
lods
pop
sbb
push
sub
repnz
fimuls
xchg
loope
xor
fldenv
js
in
clc
fcomps
or
add
mov
dec
icebp
sub
call
ret
out
mov
into
repz
push
xor
sbb
inc
lahf
pop
lcall
push
xchg
es
sbb
adc
mov
idivb
xchg
int3
jae
movsl
ss
nop
je
inc
into
cmp
mov
ljmp
ds
pop
test
loop
scas
js
push
jno
jg
inc
add
cmp
scas
sbb
movsb
stos
xchg
pop
xchg
jmp
fildll
pop
fsts
mov
add
push
call
adc
ljmp
or
inc
frstor
out
xorl
push
loopne
jae
jae
jge
push
lods
stos
lods
cld
icebp
xchg
pop
or
sub
negb
mov
fisubrl
imul
xchg
lods
lret
inc
mov
dec
jmp
mov
mov
fists
dec
mov
push
mov
insb
push
nop
popa
test
adc
pop
sbb
mov
xor
push
sbb
in
xchg
or
aam
test
fisubrs
loopne
xchg
stos
xlat
cmp
mov
adc
fs
pushf
cltd
sarb
leave
pop
add
mov
mov
stos
add
repz
xchg
in
sbb
pop
int3
out
cmp
leave
cmp
adc
test
jmp
sarb
lds
mov
add
xor
dec
icebp
shlb
dec
sub
mov
cmp
cmp
ja
cmpsl
in
mov
xchg
xchg
adc
rcll
dec
mov
lds
inc
pop
jmp
in
test
add
cmp
mov
pop
add
frstor
inc
cmpsb
xor
xchg
loop
bswap
enter
pusha
stos
push
inc
mull
lock
inc
xor
jl
outsb
sti
add
int
pop
dec
push
sub
add
jb
jmp
pop
push
and
cmp
adc
dec
xchg
call
ret
add
jle
cmp
rcr
pop
xchg
adc
fistl
xor
lret
and
idivb
or
inc
mov
bound
xorb
flds
aaa
std
gs
sbb
cli
cmp
test
stc
mov
lock
imul
loope
sbb
cmp
xor
mov
inc
add
in
push
rol
ret
add
lret
pop
je
or
outsl
testb
es
push
lods
les
mov
and
jle
jae
xor
sbb
mov
fnsave
inc
jg
loopne
movsb
xor
movsl
adc
jmp
stos
pop
loope
fldt
addr16
call
and
arpl
xorb
jmp
int
mov
dec
ljmp
stc
mov
fs
xchg
cmp
inc
testb
cmp
xchg
fwait
xor
jle
outsl
add
lcall
push
orb
insb
xchg
fucomip
sub
sahf
mov
add
adc
push
mov
stc
dec
faddl
cltd
insb
addr16
xlat
lods
aad
decb
int
xchg
cli
push
cli
sti
aas
cmp
mov
movsb
jmp
sbbb
and
outsl
hlt
push
dec
push
lret
mov
pop
mulb
pushf
mov
lea
lahf
lds
aaa
mov
subl
push
sub
sub
loopne
repz
stos
sbb
push
xor
mov
pop
lods
push
cli
push
and
ja
scas
icebp
jb
jb
mov
push
add
stc
sub
lcall
xor
cld
mov
fsubs
inc
cmp
outsb
inc
jg
xchg
or
mov
mov
popf
adc
pop
shrl
mov
imul
xlat
pop
test
leave
fs
jo
loope
push
mov
mov
jle
jbe
dec
cmp
call
jb
shlb
add
ret
push
leave
out
ljmp
outsl
mov
sbb
insl
mov
jno
pop
push
and
std
xor
mov
inc
lahf
xor
popf
xchg
clc
xchg
aaa
insb
and
scas
cmp
rcrl
xchg
sbb
or
stc
dec
lods
gs
ja
mov
iret
and
push
arpl
aad
out
out
mov
add
dec
push
inc
dec
in
jnp
sbb
cli
xchg
sti
or
inc
out
cmpl
inc
mov
jns
mov
cmp
xchg
mov
or
lret
stc
lcall
inc
push
out
cmp
sbb
pop
out
add
sbb
and
pop
dec
iret
pop
inc
shlb
mov
fdivrs
jbe
andl
leave
mov
mov
sub
in
mov
ljmp
dec
lcall
xor
sahf
loopne
test
inc
ret
dec
mov
jge
inc
sub
out
mov
outsl
rclb
lret
lods
adc
mov
aas
pop
ja
sbb
or
xchg
push
push
aas
das
in
ljmp
and
ss
inc
lds
nop
cmpsl
popa
sub
jo
xchg
and
xor
xor
mov
xor
int3
idivb
in
notb
fstp
lret
mov
lret
enter
cmp
rorl
mov
mov
add
iret
enter
stos
out
add
imul
mov
add
in
std
out
sub
shlb
push
sbb
cltd
dec
aam
ds
int3
push
mov
xor
jae
add
mov
loope
mov
xor
sbb
or
fnstsw
dec
sub
jne
lahf
add
mov
in
xchg
mov
pop
cmpsb
data16
xchg
sar
mov
adc
jmp
add
ret
aaa
dec
into
push
out
push
push
and
xchg
jle
cmp
sub
jns
sub
dec
cmpsl
cli
mov
ds
popf
lods
dec
stc
ljmp
mov
mov
or
xchg
add
enter
cmpsl
jl
std
addr16
cmpsb
push
jnp
sub
add
xchg
mov
cmpsb
xchg
or
sub
push
test
mov
and
pushf
xor
call
and
dec
dec
add
fstps
sbb
stos
mov
shll
movq
repz
cli
xlat
and
out
push
mov
fadds
inc
ja
ficomps
mov
lods
adc
cmc
mov
nop
cmp
out
pop
dec
jno
pop
aas
aam
nop
inc
mov
sti
pop
fcoms
sbbl
push
xor
shr
push
int
lea
test
mov
sub
jmp
ljmp
inc
into
and
lds
orl
push
lahf
outsl
xchg
xor
sbb
daa
repnz
jb
pop
jle
xor
lods
or
sbb
ljmp
and
rol
sbb
fwait
shrb
out
es
insb
test
cmp
shrb
mov
mov
nop
ljmp
rclb
mov
ss
add
stos
in
sbb
test
or
lods
in
lea
sbb
out
cmpb
dec
push
fidivl
sbb
scas
div
lret
nop
or
into
mov
shlb
andl
scas
adc
inc
pop
add
jne
dec
fisubl
cld
sti
mov
movsl
fildll
mov
add
xlat
push
movsl
and
mov
mov
ds
fdivrl
mov
mov
imul
sub
js
xor
ret
jae
push
inc
hlt
inc
fimuls
jle
mov
lock
and
sbb
scas
movsb
fidivrs
push
testl
add
mov
push
push
cmp
dec
stos
xor
jae
movsb
or
fsub
mov
sahf
pop
shrb
pop
xor
insl
and
push
push
push
lock
push
in
sbb
mov
scas
test
sub
jno
bound
fadds
mov
loope
jg
aam
test
mov
adc
div
sub
repz
xor
mov
jns
adc
jo
sbb
bound
rcll
sub
aaa
std
and
mov
adc
sub
pop
xchg
das
int3
sub
in
mov
bound
xchg
sarb
pop
outsl
in
xchg
mov
dec
cmp
xchg
sbb
rcrb
mov
ss
or
sub
jge
and
dec
cmc
icebp
js
add
daa
pop
repz
popf
nop
push
push
xchg
repnz
aam
subl
outsb
jne
ja
cmp
gs
jns
cmp
adc
adc
mov
cmp
sub
push
dec
sub
sbb
and
pop
stc
fs
js
ret
jl
push
pop
jmp
xchg
cmp
sub
es
rcrb
in
jb
jp
xor
sar
inc
ljmp
jg
lods
int
clc
mov
and
cwtl
mov
push
movsl
jno
sub
push
dec
hlt
popf
jb
sub
outsb
cmp
into
inc
push
in
mov
bound
lret
push
jb
and
ds
test
jb
lods
add
sbb
jae
lahf
or
scas
lods
divl
in
mov
push
cmpsb
and
dec
xor
popf
mov
enterw
test
arpl
enter
dec
add
mov
mov
xor
sbb
sbb
mov
ljmp
insb
xchg
mov
in
inc
sbb
lcall
js
mov
add
mov
imul
mov
mov
mov
out
jle
push
mov
or
roll
mov
jge
push
add
add
sub
pop
dec
xlat
cmp
jne
mov
rorb
push
mov
mov
inc
cltd
pop
stos
addr16
cmp
cmp
push
rcl
testl
or
push
jmp
shrl
lods
jp
ret
jmp
movsb
in
dec
xor
add
clc
scas
shll
repnz
scas
mov
cltd
cmpsl
cmp
jle
xor
lahf
stos
sub
das
push
testb
sarb
add
cmpsb
and
out
and
int
gs
and
ja
fists
negl
adc
rorb
ret
xor
nop
mull
cmpsb
cmpsl
pop
bnd
into
xlat
xchg
aaa
lds
xchg
sbbl
cmp
and
rcl
mov
ljmp
shll
es
stos
gs
iret
insl
push
cmp
imulb
mov
pop
pop
xchg
out
lea
add
xlat
jmp
sbb
insb
xchg
in
dec
cmp
stos
clc
adc
mov
movl
pushf
jno
shrl
fxch
loope
scas
bound
jmp
in
xchg
mov
mov
pop
sbb
bound
inc
push
test
imul
sbbb
sbb
push
pop
dec
and
das
sti
test
inc
inc
sbb
inc
push
ret
and
scas
lahf
mov
mov
or
out
push
xchg
stos
pop
mov
loop
shrb
in
movntps
and
sbb
pop
adc
loope
mov
sbb
cmp
movsb
sub
in
jne
ficoml
das
adc
sbb
sub
mov
mov
test
hlt
jle
push
mov
add
fnstsw
pop
imul
inc
sbb
adc
mov
xchg
orl
lret
pop
adc
cmc
repz
mov
cli
xchg
lahf
jp
xlat
xchg
push
sarl
mov
aas
gs
dec
adc
xorb
cmp
jns
pop
sbb
mov
cmp
inc
mov
jb
and
mov
les
mov
fsubs
adc
pop
cmpsb
mov
jbe
insl
xor
std
pushf
mov
lds
xlat
cmc
mov
lret
lret
sub
jle
int3
testb
aas
rcrb
add
andl
pushf
inc
xor
add
fidivrl
ret
inc
dec
dec
xchg
test
out
in
push
push
dec
cmpsl
cmc
sub
loop
clc
mov
inc
cltd
ljmp
out
xchg
addr16
jge
loop
inc
out
jo
lods
push
cmp
iret
ja
cmp
loope
mov
int3
mov
lcall
xor
mov
jecxz
mov
fs
xchg
fnstsw
je
fbstp
andl
stc
sti
sub
les
and
rclb
pop
cmovle
movsl
aam
shlb
adc
insl
fildll
dec
dec
cmp
popf
aas
xchg
rcll
ja
sub
or
inc
out
in
addr16
cmp
jo
enter
testb
jbe
or
fwait
lods
and
rorl
mov
xor
fdivs
insl
adc
jno
lcall
mov
cmpsl
jl
test
shlb
pop
lods
std
add
lods
or
mov
or
push
push
xor
dec
in
push
aad
rcll
xor
xor
add
mov
pop
push
out
popf
push
int3
mov
lods
jl
pusha
xchg
fiadds
push
in
inc
in
or
jns
add
lock
mov
insl
adc
pop
aam
cvtps2pd
out
fbld
add
movsl
scas
ljmp
lods
movsb
jg
imul
fbld
mov
mov
mov
cltd
pop
or
pop
popa
cmc
mov
lcall
leave
fwait
lock
fwait
mov
xchg
xchg
mov
push
xor
ret
les
test
rcrl
mov
popf
inc
loop
pop
jle
shrl
repnz
enter
or
cwtl
xchg
bound
insb
sbb
jg
lret
push
test
jecxz
or
bound
xor
mov
lock
leave
aas
xlat
cmp
jb
test
inc
mov
pop
inc
inc
push
aaa
lock
and
xor
and
clc
imul
call
push
mov
jnp
pop
mov
lcall
scas
pop
movb
imul
out
cld
repz
inc
jmp
cli
cmpsb
push
add
pop
push
clc
out
cmp
out
push
xlat
dec
jo
jmp
cmpb
clc
sub
rorb
shll
std
xchg
icebp
jmp
sub
xlat
pop
std
rcll
jmp
outsl
mov
pusha
pop
push
aas
mov
xchg
aad
cld
jno
mov
jecxz
inc
mov
dec
mov
mov
dec
pop
ja
sub
jge
notb
addr16
jcxz
lds
loop
xchg
sbb
push
pop
jge
mov
bound
arpl
movsl
popa
pop
push
lea
ds
cmpb
xchg
xor
lock
inc
mov
cmc
sub
and
sub
orb
mov
jo
or
mov
pop
cmpsl
out
fistpll
pop
mov
jge
mov
imul
lods
mov
mov
int
icebp
xchg
test
push
dec
sbb
inc
cltd
push
sbb
xchg
xor
sahf
and
insl
jne
mov
lock
inc
push
push
sets
cmpsl
mov
xchg
lcall
xor
add
jg
imul
repnz
xor
iret
and
faddl
aam
rcll
js
popa
mov
call
shlb
out
inc
pusha
sub
fcoml
mulb
nop
cmp
aas
mov
mov
aaa
out
loopne
mov
xorl
ss
aaa
push
aas
in
pushf
push
jno
out
push
cmpsl
and
or
iret
mov
inc
in
dec
mov
mov
ret
pop
lret
mov
pop
hlt
sti
and
xchg
and
out
les
push
lret
push
adc
imul
call
pusha
xor
push
fsubrs
and
movsl
loope
fidivl
cmp
add
pop
mov
mov
mov
sbbb
and
inc
cmpl
inc
and
jecxz
sub
fs
add
loopne
jo
into
js
pop
mov
ret
movsl
lret
sub
popl
jnp
cli
push
add
addl
addr16
push
xor
pop
add
fdivl
pop
sbb
sub
dec
pop
js
cmp
addr16
out
jl
test
push
cmpsb
xor
scas
mov
stos
sub
call
xchg
lret
or
stos
arpl
mov
jge
sbb
sti
push
jne
fs
les
pop
add
out
mov
jbe
in
pop
js
fcmovbe
into
movl
jecxz
xlat
and
icebp
adc
arpl
lret
push
js
cmpsb
test
aaa
int
push
movsl
lods
or
enter
adc
xchg
and
push
jae
pop
test
repz
fsub
aad
loopnew
ds
pop
or
test
scas
push
mov
call
pop
mov
fimull
jmp
xor
mov
push
pop
lahf
xchg
aaa
adc
sub
mov
jecxz
outsl
sub
inc
fildll
push
sahf
mov
xor
aaa
test
popf
das
pusha
xor
and
mov
push
lock
lock
mov
xchg
mov
out
test
add
test
cltd
js
repnz
jge
jmp
add
rorl
imul
loopne
stc
addr16
rcrb
lret
pop
xchg
rcrl
leave
std
jne
pop
or
xchg
insb
test
pop
jecxz
xor
or
lock
aad
or
nop
adc
lcall
cmp
cltd
pop
push
ret
pusha
fdiv
xchg
lods
inc
aad
fimull
jge
or
leave
pop
cmp
orl
lods
inc
adc
jecxz
stos
test
mov
sub
sub
shll
ret
mov
enter
or
pop
mov
bound
out
pop
dec
rolb
inc
push
add
divb
mov
inc
test
add
jb
mov
out
jns
fnstsw
adc
lock
sti
stc
cmpsb
or
lahf
out
push
ljmp
sub
and
pop
jle
or
jp
inc
sbb
fisttpll
aam
pop
push
push
insl
stos
loop
cmp
inc
jl
jns
inc
mov
pop
cmp
push
or
mov
insb
xchg
rclb
xchg
jne
xchg
xor
xchg
outsb
es
sbb
xor
cmp
lds
imul
addl
add
clc
imul
lahf
in
sbb
and
push
out
fwait
jno
outsl
enter
testb
movsb
fwait
sbb
xchg
movsl
and
insb
mov
mov
mov
jmp
test
mov
dec
in
popf
imul
inc
inc
dec
push
mov
rcrl
and
dec
xchg
jmp
xchg
jecxz
push
aaa
pop
or
push
adc
push
hlt
mov
add
add
mov
roll
nop
mov
repnz
sbb
mov
or
mov
xor
push
mov
stos
dec
sub
aas
mov
pop
jecxz
ljmp
scas
xlat
push
in
jnp
jge
xor
stc
ret
out
int3
cmc
dec
fwait
out
insb
cmpsb
sub
cs
leave
out
lret
data16
out
dec
mov
xor
and
jnp
addr16
mov
imul
xchg
into
ret
pop
adc
decl
ficoms
lcall
mov
fsubrp
mov
cltd
mov
pop
je
mov
test
inc
nop
scas
adc
dec
mov
andb
fistl
push
lahf
enter
mov
add
cltd
push
jnp
jb
dec
pop
jge
stos
xor
mov
inc
mov
mov
xorb
sahf
call
cmp
outsb
imul
lret
int
xchg
add
cmp
fcompl
dec
insl
or
inc
loope
out
and
data16
or
stos
mov
enter
ret
sbb
out
pop
in
sub
js
and
notl
mov
cmp
xor
inc
or
jbe
repz
mov
orb
inc
daa
mov
int3
mov
mov
stos
outsl
imul
jbe
jge
rcrb
push
fucomip
and
jno
das
cmp
ret
sbb
in
ret
xchg
out
mov
cmp
cli
stc
jecxz
xchg
push
shlb
addr16
xchg
lods
and
mov
jmp
ret
mov
xchg
adc
leave
or
inc
push
cmpsl
pushl
sbb
jnp
clc
xchg
test
es
into
xor
int3
sbb
enter
les
sti
adc
push
vdivps
imul
xor
fsubrl
push
mov
pushf
popa
push
xchg
inc
or
fisttps
xor
sbbl
and
inc
sbb
sahf
clc
iret
pop
scas
jmp
int3
rolb
daa
sbb
aaa
mov
popf
dec
inc
cli
mov
xchg
pop
mov
rorb
and
in
in
fcomp
in
dec
scas
in
scas
and
out
xor
mov
popf
jns
mov
rorb
dec
mov
cwtl
outsl
ljmp
cmpsb
xor
lock
inc
mov
dec
mov
adc
aas
pushf
dec
jmp
lret
push
sbb
add
ljmp
cli
sub
or
push
js
lahf
insl
jmp
mov
or
jae
push
arpl
push
in
cmp
rcl
mov
clc
mov
aaa
dec
lea
or
rcl
xor
mov
xchg
imul
xchg
lret
ds
mov
xor
sbb
xchg
jb
sub
sub
xorb
sahf
lahf
js
dec
adc
out
xor
and
mov
fsubl
stos
fcoms
cmpsb
push
xor
movsl
add
lcall
sbb
xchg
test
fmuls
or
sbb
jno
and
jno
mov
or
out
mov
cwtl
lcall
push
pop
out
cmp
stos
dec
xchg
jg
mov
pop
mov
jl
sbb
add
stos
jl
jns
leave
adc
jmp
js
fldt
in
inc
dec
loop
frstor
aas
stos
push
mov
inc
pusha
ds
ja
xlat
mov
popf
cs
adc
rolb
fldl
fs
mov
add
inc
mov
popfw
adc
lret
int3
adc
test
inc
movsl
mov
jne
aad
xor
lds
int
jno
mov
mov
mov
cwtl
loop
inc
sbb
and
xchg
leave
ret
aam
aas
mov
jnp
rcrb
xor
mov
lahf
repnz
fistps
add
sahf
xor
jo
xor
jecxz
add
or
adc
jo
fs
js
add
lret
loopne
sub
cmp
popa
dec
sbbl
into
ljmp
lock
aad
outsl
xchg
lahf
push
or
gs
test
sub
shll
repnz
jg
fwait
shlb
out
shll
lods
test
mov
jg
mov
ss
push
xor
push
cmpsl
cs
mov
fnstenv
jmp
out
repnz
mov
dec
push
dec
adc
sti
push
cltd
mov
test
testb
in
xchg
inc
push
push
sbb
jo
jecxz
fnop
leave
lods
inc
out
xchg
push
cmp
dec
les
push
jae
inc
mov
xchg
out
je
mov
cmp
pop
scas
aas
and
mov
push
lret
or
mov
add
loopne
ss
mov
jl
xchg
mov
mov
xor
iret
repz
push
push
test
test
cmp
repnz
out
xor
push
out
sbb
jmp
xor
dec
cmp
dec
push
inc
cmpl
in
sbb
in
fdivrl
and
stc
dec
imul
mov
fs
test
and
rorl
lock
loopne
mov
daa
cmp
sbb
cltd
dec
jnp
clc
inc
addr16
inc
insb
cwtl
push
stos
loope
loopne
fadd
push
inc
je
and
or
loop
xchg
adcl
loop
xor
repz
iret
insb
push
pop
sub
mov
jo
xchg
jmp
fisubl
pop
pop
jo
jmp
xchg
or
call
sub
xor
pop
insb
jecxz
or
test
pop
jmp
stos
faddl
out
outsl
cwtl
pop
push
mov
lock
es
mov
lock
push
add
xchg
jo
jns
in
stc
xchg
push
imul
in
stos
xor
xchg
pop
in
imul
outsl
aam
mov
fs
sub
out
sti
sti
mov
popa
ss
iret
rcrl
cmpsb
movaps
mov
les
dec
js
clc
insb
adc
mov
pushf
inc
adc
or
push
lcall
and
mov
jg
dec
cmp
arpl
mov
adc
movsl
jns
cmp
sarb
jns
pusha
pop
les
adc
or
sub
inc
dec
inc
dec
insb
cmc
xor
cmp
mov
ss
inc
jns
cltd
hlt
mov
outsb
and
repnz
hlt
mov
adc
push
mov
xchg
xor
and
lods
xchg
roll
shlb
pushf
out
imul
sbb
pop
mov
mov
nop
jecxz
iret
dec
or
adc
and
pop
pop
fldt
or
inc
test
lret
push
jmp
mov
add
inc
insb
cmp
inc
loopne
cli
cwtl
dec
pop
mov
pop
add
inc
sub
hlt
mov
sub
shl
stc
movsl
xchg
gs
xchg
pushf
dec
pavgb
jge
bound
xor
push
xchg
or
lods
mov
repnz
es
negb
jecxz
add
inc
ficoml
imul
xor
call
jg
call
lcall
aam
push
adc
aad
fdivl
bound
or
push
jmp
aaa
bnd
xor
andb
mov
push
rolb
pop
jl
jmp
cltd
insb
fwait
sbb
hlt
sub
lods
dec
jl
xor
xor
mov
or
inc
or
sbb
fwait
xchg
fs
fadds
xchg
out
jb
inc
int
inc
adc
jne
lret
push
test
sub
adc
mov
sbb
push
push
fwait
iret
cli
cwtl
loope
mov
int
mov
rorl
aam
cltd
mov
popa
sub
xchg
pop
pop
inc
pop
arpl
xchg
pop
mov
adc
mov
imul
imul
dec
adc
mov
pop
sub
adc
test
push
hlt
cmpsl
ret
movsb
fdivl
push
mov
cmp
cltd
mov
insl
push
andl
xchg
jnp
or
ds
xchg
idivl
cs
fists
pushf
mov
push
scas
cltd
mov
mov
test
inc
or
mov
push
mov
xchg
js
adc
mov
in
nop
dec
fmull
jnp
bound
cmp
xchg
dec
jmp
xchg
scas
adc
sub
mov
fstp
sbb
push
mov
mov
mov
mov
xchg
cmc
push
pop
inc
mov
leave
add
in
into
add
fcompl
xor
or
jmp
mov
inc
in
push
add
mov
push
jbe
adcb
mov
test
inc
and
bound
daa
push
int3
mov
or
sahf
mov
int3
mov
sbb
insb
dec
dec
sub
sub
xor
dec
push
arpl
subb
jl
inc
scas
inc
sbb
add
mov
push
jp
lea
or
cmpsl
test
imul
aam
fidivrs
sbb
and
test
jne
pop
sub
andl
push
cld
dec
jbe
mov
sti
jmp
lods
pop
dec
nop
js
inc
inc
pushf
rclb
adc
mov
mov
jb
out
cmpsb
add
cmp
cmp
jle
jmp
idivb
aas
cmp
mov
jno
adcb
loope
ljmp
out
dec
sbb
pushf
push
xchg
cs
addb
xorl
push
fdivrs
or
gs
sub
mov
add
stc
sbb
jge
std
mov
push
es
lea
or
sub
dec
add
mov
insb
mov
ds
xor
jns
rcrl
cmp
push
fdivrl
ljmp
dec
pop
imul
mov
shrb
cld
and
mov
or
addr16
mov
andl
inc
pushl
fisubrl
test
repz
std
arpl
fcmovu
int
jne
mov
imul
enter
dec
popf
sub
inc
in
cmp
ret
inc
aam
mov
mov
jns
dec
push
insl
arpl
inc
jnp
inc
mov
add
dec
testb
cs
pop
adc
sub
or
inc
jle
inc
daa
test
add
xchg
and
jae
out
cmp
shll
jl
out
movsl
inc
cwtl
cmpsl
aad
lret
or
adc
sbb
in
sub
js
mov
pop
sub
sbb
jg
les
fstps
imul
shll
pushf
pop
pop
sbb
pop
in
add
iret
lret
lock
stos
insb
and
jb
test
mov
in
out
out
addl
sub
sub
pop
jne
shl
repz
mov
xchg
lret
call
sbb
jl
sti
repz
sub
in
dec
push
ret
shrl
pop
inc
pop
and
or
add
lcall
push
sub
cmp
test
or
xor
xchg
xor
and
adc
aaa
jns
dec
xchg
xor
loopne
cmpsl
fbstp
mov
repz
inc
lcall
in
mov
fists
mov
mov
mov
ljmp
add
arpl
pop
mov
sub
cli
lret
add
cmp
and
dec
out
daa
cwtl
mov
jp
push
xchg
insb
nop
mov
dec
xchg
add
xchg
scas
and
enter
cmp
xchg
std
call
mov
ds
dec
adc
std
mov
jg
aam
ret
lods
enter
incb
ret
popf
xchg
es
ljmp
xor
xchg
sub
mov
leave
adc
push
xchg
nop
adc
jne
pop
outsb
repz
test
xor
and
push
xor
sahf
sti
bound
in
push
or
stc
std
jnp
mov
or
aam
xor
out
mov
xor
sub
stos
subb
call
ds
scas
add
ret
push
ret
xchg
push
aam
sub
and
sti
in
ss
cmp
push
cs
mov
jo
or
and
nop
popa
daa
int3
cmp
adc
mov
fdivrs
or
dec
push
insb
subb
or
push
dec
sub
cmc
dec
movq
cmp
orl
pop
data16
xor
test
cltd
movsb
dec
xchg
mov
outsl
mov
sti
cmp
mov
loopne
iret
sarl
xchg
sub
mov
arpl
jo
imul
xor
and
test
sbb
ficoml
pop
or
jns
lahf
int3
add
in
in
les
lcall
push
aas
inc
adc
cmpsb
cmp
fstpl
sahf
dec
add
pop
sbb
cmp
mov
dec
jo
mov
sub
mov
dec
jo
xchg
cmpsl
push
sbb
das
sbb
je
or
data16
decl
mov
jp
mov
and
imul
sub
leave
inc
push
ficoml
xchg
sbb
and
mov
jmp
mov
mov
add
dec
push
adc
mov
insl
push
cmp
nop
je
test
jb
xchg
dec
inc
xchg
imul
loope
insb
inc
clc
test
xlat
shrl
cmp
push
pop
dec
cwtl
push
cmp
mov
shrb
push
cmpsb
lods
add
fstpl
jmp
repz
jecxz
pop
lcall
out
xchg
dec
test
sbb
xor
into
or
arpl
loope
out
ds
fidivrs
or
pop
call
fstpl
mov
lock
fsubs
loope
pop
cmpb
xchg
mov
cmpsb
shrb
flds
jp
test
dec
outsl
and
mov
cmp
das
fs
movsbl
or
shrb
std
test
mov
lods
xchg
or
aaa
adc
mov
leave
call
pop
into
insl
popa
rolb
jp
cmp
dec
lods
cmc
pushf
or
fdiv
jmp
ret
shlb
or
mov
mov
fadd
jmp
movsl
cmp
mov
ljmp
arpl
cmp
insb
fistps
or
cmp
rorb
sbb
inc
mov
fndisi(8087
jg
bound
mov
add
popa
push
cld
sub
pop
test
dec
xor
adc
lods
push
lret
sub
mov
xchg
fldcw
pop
rcl
sti
test
das
out
dec
pop
xchg
lcall
xor
test
je
movsb
and
adcb
pop
lods
mov
adc
push
add
sub
faddl
in
pand
ret
in
arpl
jp
stc
or
mov
inc
sbb
pop
in
imul
ds
jo
jecxz
iret
xor
stos
scas
test
jo
pop
lock
movsb
mov
std
sahf
push
aam
mov
push
jmp
xlat
rorb
inc
les
sbb
or
sahf
outsl
icebp
pushf
cmp
sarb
aas
in
add
pop
add
stos
out
sub
fnstenv
rcrl
ds
mov
daa
rcrb
shlb
add
test
xchg
mov
xchg
mov
ret
mov
lahf
pushf
pop
or
out
imul
sbb
mov
dec
popa
jmp
imul
cmp
fsubrs
out
aam
xor
push
stos
js
enter
sbb
loope
mov
add
notl
push
addr16
push
mov
jl
jae
push
nop
outsl
cmpsl
test
lret
cmp
mov
lock
sub
mov
in
mov
adc
test
mov
mov
xor
add
dec
jp
outsl
push
mov
dec
ror
repz
and
xor
xchg
stos
push
push
pushf
popa
gs
cmp
jl
int3
cmp
pop
xor
dec
loope
push
fstl
fstl
mov
jnp
fwait
hlt
out
loop
pusha
cltd
ss
push
aas
movsl
je
fistl
hlt
cmp
sub
aam
jle
aam
xor
inc
xchg
and
decl
push
push
test
lret
out
das
mov
movsb
xchg
mov
xor
fucomip
push
and
push
pushf
xchg
inc
xlat
data16
icebp
dec
jbe
icebp
jb
push
shl
xor
jb
push
rclb
stc
xor
sti
xor
inc
xchg
ljmp
or
imul
pop
xchg
dec
push
ficomps
sub
pop
shlb
cltd
aam
xor
mov
and
leave
subl
vpaddsb
aam
outsb
sbb
dec
push
sti
cld
call
pusha
pop
arpl
loope
jg
adc
adc
inc
lds
pushf
cmp
imul
mov
popa
sbb
cld
rcr
push
movsl
movsb
dec
in
mov
adc
test
mov
cs
sahf
movsl
sbb
adc
sbb
mov
jmp
call
jmp
mov
xor
sub
inc
cmp
add
adc
xor
xor
call
mov
or
inc
inc
mov
sub
xchg
sub
rorb
sahf
cmp
stc
scas
aas
add
inc
test
adc
and
push
nop
mov
jle
lods
mov
popa
cwtl
xor
out
sti
faddl
mov
jb
ret
lea
cmp
fsts
and
xchg
adc
ss
add
das
es
daa
loopne
push
mov
mov
mov
cmp
int
mov
dec
push
insl
ljmp
data16
rcrl
out
cmovs
std
sub
adc
ds
and
aad
push
stc
scas
je
xchg
xor
in
je
out
lret
sub
sbb
and
or
push
pushf
repnz
lds
aam
rclb
mov
jae
xchg
rcll
inc
insl
add
imul
dec
sub
mov
aaa
out
cmc
cmpsb
adc
inc
divb
dec
cmp
jmp
add
mov
nop
icebp
mov
loope
push
and
push
int
in
bound
jecxz
js
or
cmp
fs
sbb
xchg
movsl
ret
jno
mov
inc
push
popf
mov
pushf
jp
add
aaa
int
adc
sti
push
mov
shll
lea
imul
sbb
nop
sbb
sbb
ds
das
mov
es
sub
dec
sahf
xchg
pop
push
dec
int
sbb
mov
mov
or
jge
addr16
insb
push
mov
ljmp
inc
xchg
push
rolb
imul
jnp
sbb
and
jo
icebp
adc
cmp
push
in
sbbb
jmp
mov
mov
test
pop
push
sbb
xor
add
out
movb
add
stos
xchg
mov
scas
cltd
mov
dec
lret
or
mov
sbb
mov
popf
jns
mov
dec
mov
cmp
frstor
dec
adc
fdivl
xchg
cmp
in
mov
sti
mov
insb
insl
mov
popa
test
jns
mov
sar
sub
imul
in
rcll
gs
arpl
inc
insl
inc
or
lret
jnp
and
push
sub
xchg
stc
add
in
and
push
adc
lcall
inc
repz
fldcw
add
pop
mov
xor
pop
pop
mov
imul
mov
out
pusha
jne
push
add
xor
sbb
push
jmp
fsubr
jecxz
mov
cwtl
cwtl
dec
mov
sti
or
inc
sti
push
rep
push
rclb
xchg
cmpsb
lds
inc
pop
lret
int
rcl
push
inc
mov
push
es
inc
in
and
pop
orb
aad
xor
gs
out
or
pop
push
fldcw
cmp
shll
mov
add
aas
mov
xlat
aad
mov
dec
adc
ffreep
xor
dec
mov
mov
and
pop
scas
and
push
shlb
sbb
xor
sarl
addb
repz
mov
sub
mov
jle
xchg
lock
xor
pop
push
sbb
or
adc
fistps
inc
xchg
dec
sbb
ret
pop
cmc
insb
repnz
sub
orl
xor
jns
mov
lock
das
out
sub
xor
and
dec
icebp
sbb
inc
adc
loopne
popa
mov
cli
lds
ljmp
lds
pop
or
xor
mov
pop
inc
pop
inc
aas
ljmp
test
movsb
cmpsb
xchg
rclb
jb
sbb
cmpsl
pop
gs
insb
fcoml
sub
ljmp
inc
jo
adc
xor
fiadds
fcompl
repz
paddq
xchg
jge
movsb
out
in
lret
daa
cmp
int3
xorb
push
mov
mov
pop
fimull
or
mov
push
mov
dec
sahf
out
cmp
mov
xor
or
arpl
es
lahf
mov
ja
add
popa
call
adcb
mov
push
xchg
je
sub
cltd
xor
stc
repz
dec
push
mov
or
in
push
stc
fdivr
aam
pop
push
loope
dec
pushf
jmp
data16
sbb
jbe
in
nop
daa
nop
dec
dec
stos
jl
getsec
ror
jo
lcall
dec
repz
cmp
pusha
pop
lods
add
dec
xchg
mov
push
cmc
ret
mov
rorl
scas
mov
aaa
xchg
cli
xchg
and
fmull
sbb
dec
dec
shrl
add
inc
inc
mov
xor
fcmovnu
sub
dec
test
lds
js
add
pop
pop
mov
addb
loope
jp
sti
add
pop
and
repnz
out
or
jmp
xchg
mov
into
aas
cmp
popa
xor
das
repnz
xor
mov
scas
sbb
jp
scas
mov
ja
xor
jne
nop
cmc
sbb
aam
jno
negl
cld
pushf
cmp
cmp
xchg
or
scas
sbb
imul
mov
jl
into
push
push
ljmp
add
push
push
pop
cmp
or
inc
push
dec
xchg
sub
ja
jg
gs
pop
rcrb
scas
ss
xor
mov
mov
adc
inc
mov
mov
jb
scas
xchg
ds
dec
cltd
jae
pop
aaa
lds
gs
push
stos
call
push
and
push
rorb
ss
std
lahf
xchg
imul
xor
inc
add
cmp
insl
push
sbb
pop
cmpsb
enter
cld
scas
bound
mov
aas
mov
adc
nop
adc
xor
mov
aam
sbb
add
or
adcl
adc
jnp
xchg
loop
mov
faddl
clc
fsubr
pop
shr
fstl
test
dec
sbb
push
inc
aam
leave
insl
adc
inc
sbb
and
rcr
arpl
bound
mov
cmpsl
scas
int
add
dec
out
int
les
mov
loope
mov
int
push
add
cmp
cmc
push
cmp
in
popa
aad
xchg
jmp
cmpsl
or
push
sbb
das
inc
subl
sbb
rolb
in
pop
xchg
jns
push
clc
cmpl
add
push
add
idiv
add
mov
jmp
sub
or
dec
sbb
aaa
xor
imul
jae
rclb
rclb
std
jne
shlb
iret
stos
out
jl
sbb
movsb
adc
fcoml
fists
mov
xchg
shr
pop
mov
bound
dec
call
loop
mov
xchg
cld
in
rorb
outsl
insl
bound
mov
push
or
cmp
mov
imul
mov
cmc
dec
mov
mov
adc
mov
jg
xor
test
dec
xchg
xchg
in
mov
cmp
test
adc
pop
sub
unpckhps
sub
stc
repnz
mov
mov
in
jl
mov
jnp
jnp
jmp
xor
sbb
out
adc
push
and
loope
repnz
addr16
int
add
push
or
jae
pop
add
flds
fidivrl
cmpsl
lret
push
enter
xchg
int
inc
dec
inc
lret
imulb
fadd
mov
rcl
test
es
arpl
repnz
into
or
xlat
mov
jb
std
pop
cmp
lods
pop
pop
inc
jb
test
mov
in
sub
jmp
dec
mov
and
cmp
aad
or
mov
int
and
mov
clc
jge
mov
leave
ljmp
cmpsb
push
into
and
sub
pusha
mov
jnp
cmc
mov
mov
mov
pop
mov
imul
cmp
or
cs
repnz
movsl
shll
adc
mov
inc
push
test
mov
in
fs
aas
add
and
fwait
rol
call
cmpsb
aad
adc
xchg
jnp
cmpsb
je
and
in
outsb
and
dec
test
pop
repnz
mov
and
sbb
pop
pop
push
outsb
std
les
js
arpl
ficoms
adc
sbb
sbbl
fnstcw
xlat
sarb
mov
imul
lahf
ljmp
mov
lods
mov
cmp
into
cmp
call
adc
xchg
mov
jp
mov
insb
cmpsb
js
sbb
adc
in
sarb
cmp
lds
xlat
adc
push
xchg
std
push
mov
sbb
les
adc
pop
outsl
ljmp
mov
push
hlt
xchg
push
add
les
sub
icebp
mov
adc
inc
movsl
lods
cmp
imulb
pop
pushf
outsl
dec
push
cmc
sub
mov
jbe
push
sbb
rcrb
lahf
clc
mov
lea
mov
cmpsl
in
pop
pop
cmp
pop
out
mov
lods
movsb
pop
incl
sbb
notb
xor
add
dec
fldl
cmc
mov
push
xor
inc
inc
adc
dec
ret
pop
lcall
xlat
jns
push
sub
jl
lahf
test
xor
sti
push
pop
aam
or
mov
repnz
cmc
add
mov
cmp
adc
pop
mov
mov
push
xor
adc
popa
dec
mov
popf
mov
rcr
mov
inc
cmp
in
or
sarb
cltd
mov
lock
xor
and
arpl
sub
cmp
inc
xor
repz
out
sub
test
xchg
xor
fmuls
cltd
inc
ret
lock
leave
adc
jno
xchg
xlat
ss
in
je
out
out
arpl
scas
repz
insb
je
cmp
das
insl
out
add
addr16
mov
push
and
inc
ljmp
mov
je
inc
test
add
hlt
mov
lods
xchg
arpl
push
mov
js
pop
xchg
inc
add
push
push
xor
jge
lods
adc
push
jle
xor
daa
pusha
jl
mov
fidivrs
cld
mov
aad
mov
lcall
stc
jnp
es
dec
xchg
loop
push
adc
sub
jp
lods
jae
xchg
sub
cli
fidivrs
ret
cmp
rcrb
pop
mov
insl
add
mov
fs
in
jecxz
subb
or
fistl
ret
push
or
mov
test
jg
inc
shll
cli
ja
fisttps
insb
xor
add
daa
mov
jns
jnp
insl
test
ja
out
hlt
das
ret
int
xlat
push
jmp
jmp
adc
push
icebp
iret
mov
cltd
jb
or
or
fs
mov
lretw
sub
cmpsl
sbb
int
dec
mov
ss
jns
mov
sub
cmp
mov
out
cmp
or
xchg
stos
xor
call
rclb
xchg
out
rclb
in
push
and
jo
cltd
outsl
xchg
repnz
clc
dec
pop
adc
cmpsl
aam
pop
daa
pop
ss
repz
mov
je
fbstp
xchg
dec
adcl
lret
stc
and
xchg
iret
jns
sbb
and
push
out
out
shl
es
sarb
call
inc
xor
xchg
sub
out
pause
ret
hlt
add
push
iret
fmuls
xchg
push
sub
fadds
fdivr
popf
push
mov
inc
mov
and
shll
mov
adc
lods
enter
dec
test
clc
and
mov
mov
adc
pushf
lods
aad
stc
dec
sbbl
pushf
es
or
hlt
mov
and
rcll
in
outsb
push
daa
mov
jecxz
pop
sub
dec
cmc
or
sub
cmp
jle
cmp
loopne
imul
je
mov
pop
mov
aad
adc
and
mov
rolb
outsb
xlat
test
enter
cli
insb
out
loope
imul
mov
add
sbb
push
xlat
xchg
outsb
inc
dec
mov
lcall
daa
repnz
jo
pop
jl
aas
xor
add
adcb
rcl
sahf
jno
mov
insl
daa
push
popf
jle
jmp
repz
aas
pop
and
rcll
inc
cmp
mov
xor
ss
decl
jns
dec
mov
fcomps
in
jmp
cmpsb
or
out
add
jle
and
mov
out
cmp
ljmp
in
out
sbb
shrb
addr16
sbb
sti
je
loop
adc
push
stc
dec
aam
aad
pop
test
outsb
adc
in
cmc
sbb
ret
jmp
mov
sub
lret
repnz
xchg
add
dec
data16
cmp
cli
imul
inc
rcl
shlb
jnp
popa
fisubs
shl
out
bnd
insl
addr16
push
out
lcall
and
mov
sbb
and
enter
and
pusha
dec
int3
daa
dec
adc
dec
pop
rcll
in
repz
subb
mov
sbb
or
clc
or
pop
stos
push
mov
test
and
adcb
pop
pop
cmp
pop
sbb
or
pop
xor
mov
int
xchg
insl
mov
or
inc
and
shll
sahf
ss
xlat
scas
push
fstpt
adc
lcall
pusha
data16
subl
repz
int3
aad
ljmp
popa
in
add
cs
aas
sbb
xchg
inc
imul
sub
pop
out
fucom
add
push
add
shrb
loop
push
aas
bound
ror
add
arpl
inc
cli
pop
jne
dec
scas
mov
loopne
dec
loop
inc
cmp
into
mov
pop
int3
add
adc
dec
es
mov
pusha
mov
es
mov
jno
push
out
dec
shll
int
scas
sahf
push
popa
and
inc
jecxz
movsb
mov
inc
call
dec
or
pop
loop
shrl
inc
imul
addr16
pop
xchg
outsb
stos
fsubrl
and
mov
mov
sbb
aaa
in
add
icebp
leave
jge
ret
mov
mov
out
scas
stc
adc
adc
in
in
lea
fstl
xchg
or
cmp
outsb
cmc
int3
pop
push
idivl
andl
dec
ret
inc
xchg
xlat
sub
adc
mov
push
stos
pop
pshufw
pop
pop
adc
setge
jbe
das
xchg
imul
fdivrs
call
dec
out
xor
scas
int3
mov
in
jge
sub
push
pushf
shr
and
fnstenv
sbb
sbb
adc
push
mov
or
icebp
mov
add
mov
fistpl
out
test
cli
js
adc
jnp
mov
push
scas
inc
sbb
call
mov
inc
jge
fsubrl
lahf
xchg
sarl
les
push
push
pop
sahf
inc
pop
xor
movsb
les
imul
push
mov
outsb
mov
cmp
pop
das
sbb
outsb
mov
xor
xor
and
mov
push
xchg
mov
pop
int
vmread
sbb
dec
jmp
cmp
mov
xchg
cltd
sub
xor
cmpsl
mov
inc
sub
push
add
mov
loopne
push
shll
lds
sti
sub
mov
mov
jmp
xor
push
fmull
shlb
test
dec
imul
fsubrp
test
mov
push
xchg
pop
fwait
sti
push
shrb
lds
popf
imul
inc
add
in
jp
out
cs
dec
add
movsb
test
adc
test
cmp
int
mov
sbb
xchg
and
test
lods
shll
cmp
lds
scas
inc
aaa
mov
fs
jmp
mov
divl
je
push
inc
test
cli
pop
mov
icebp
or
xor
cmc
sbb
sub
pop
or
and
mov
adc
or
ja
arpl
clc
std
mov
aaa
push
mov
sub
cmp
aaa
lcall
jno,pt
push
adc
and
enter
popf
test
into
mov
inc
fs
pop
push
adc
mov
aas
out
ret
imul
xlat
test
adc
loope
lds
les
cmp
sahf
out
xor
fisttpl
or
xor
lds
scas
xor
loop
xchg
add
aaa
dec
lret
mov
lret
out
xchg
mov
in
sub
dec
jne
jo
je
mov
jecxz
jbe
push
dec
cli
cmpsl
popa
mov
loopne
or
xor
jge
lret
push
xor
mov
loopne
sbb
mov
cwtl
out
adc
mov
mov
mull
icebp
xor
lods
sahf
scas
adc
mov
mov
cmp
jnp
mov
jmp
in
arpl
cmp
jae
and
int3
lods
mov
xor
icebp
pop
mov
es
mov
fbstp
and
jp
adc
loop
aas
sub
add
and
cmp
dec
or
fs
push
xchg
add
test
rcrb
lock
push
pop
mov
test
push
jae
mov
int3
sbb
arpl
fs
fidivrl
ja
cli
aas
adc
fwait
mov
cmp
pop
add
and
clc
cmpb
push
sbb
mov
lret
sarb
popa
mov
lds
and
add
xchg
inc
mov
xlat
and
sub
rolb
jle
inc
cmp
aas
adc
sub
pop
lcall
loop
jecxz
fdivrs
dec
pop
xor
jp
xor
or
or
hlt
in
pop
mov
imulb
lods
adc
mov
pop
dec
pop
mov
sbb
ret
fwait
jmp
sub
scas
loopne
add
enter
in
repz
lcall
adc
mov
xor
or
fsubl
and
movsb
lcall
mov
push
cli
fidivrs
int3
jne
dec
leave
test
lods
lea
ret
pop
mov
movsl
fwait
mov
inc
call
je
push
loope
mov
lcall
rcl
imul
push
out
aad
mov
scas
mov
int
pop
inc
aam
or
loopne
pop
fistpll
int3
test
mov
test
xchg
fs
and
lds
sub
adc
and
ss
arpl
pushf
push
mov
jmp
jne
pop
or
jp
fcmovne
adc
pop
sarl
imul
test
push
jecxz
subl
xor
aam
adcl
push
sub
outsb
xor
ret
adc
or
push
ss
cs
shl
mov
in
into
shrb
jmp
mov
dec
add
int
shrb
xchg
xchg
andl
fs
repnz
addr16
popf
or
ret
outsb
jno
push
jle,pn
ja
jnp
add
sbb
inc
push
or
cmp
sub
addr16
mulb
es
add
adc
fcmovnb
dec
push
mov
pop
pop
adc
add
pop
jnp
push
add
and
hlt
xchg
movsb
test
and
je
push
cmp
mov
lods
ficoms
jnp
push
je
mov
ljmp
sub
jns
inc
clc
xor
dec
sub
dec
mov
jge
ljmp
mov
adc
int3
dec
stos
ljmp
jecxz
mov
cmp
sti
imul
lock
cmp
sub
fs
loop
test
into
adc
lds
rorb
es
cltd
add
out
push
cli
adc
lds
sub
xor
clc
mov
jbe,pt
es
sbb
inc
push
push
ror
bound
fdivrs
xchg
inc
je
push
jne
mov
mov
sub
sbb
fdivl
mov
in
decl
scas
in
sbb
dec
fidivs
fmul
sti
movsb
lret
jle
cmpsl
or
sti
xchg
push
cs
pop
sub
sub
add
sbbl
jbe
test
into
movsl
jbe
mov
fwait
out
cmc
ficompl
cltd
adc
sarb
jbe
inc
push
ljmp
inc
push
iret
movl
andl
out
pushf
xchg
mov
jne
adc
adc
in
fidivl
shlb
xchg
mov
fdivrl
in
pop
add
sub
sti
fidivrl
mov
adc
pop
shlb
es
xlat
cltd
inc
add
add
cltd
test
inc
test
xchg
loopne
mov
jmp
int
dec
sub
aaa
fsubrl
fs
jecxz
pusha
lcall
jb
sar
jmp
sub
lret
test
insb
pushf
test
or
mov
cmp
jbe
cmpsb
push
mov
pop
dec
ret
popf
pop
xor
push
and
sbb
or
repz
testb
fimull
and
jp
adc
fildl
ficoml
xchg
sbb
popa
or
loop
loop
es
ret
repz
scas
shrb
dec
pushf
jge
add
pop
rclb
inc
sub
mov
mov
fldt
xchg
sub
xchg
push
sbb
sbb
lods
jb
shl
fdiv
mov
divb
les
out
aad
rol
ficompl
fldcw
scas
jl
inc
pop
fs
xchg
dec
adc
mov
out
mov
fst
cmp
mov
mov
xchg
sbb
mov
dec
push
icebp
mov
mov
int3
insb
cmpsl
in
push
xchg
in
loopne
movsl
jp
test
es
jmp
pushf
pop
clc
imul
dec
adc
or
pop
insl
mov
xchg
xchg
mov
pop
test
xchg
jno
xor
xchg
in
xor
test
out
inc
test
into
and
xchg
orl
fadds
push
cli
jmp
fistl
rcll
cmp
lahf
lods
sbbb
inc
std
gs
mov
lcall
xor
push
aas
daa
imul
rol
sahf
and
inc
adc
imul
pop
mov
nop
and
jmp
lds
push
stc
lahf
pop
cld
lret
out
cmp
fs
sahf
enter
inc
mov
cltd
lret
or
adc
mull
xor
test
inc
jbe
popf
notb
mov
test
or
or
loop
repz
fbstp
call
push
out
pop
pop
pop
ret
inc
das
xchg
cli
test
insl
ss
cld
in
outsl
xor
mov
mov
mov
add
test
dec
notl
fs
lcall
jne
inc
jmp
rcll
leave
sub
pop
xor
fucomip
mov
push
mov
jae
sbb
ficoml
in
in
fstpl
and
pop
ja
sub
outsl
cmpsb
add
xchg
jo
sub
ss
cmp
and
push
sbb
test
bound
out
psllw
xchg
daa
popf
mov
cs
ds
jge
pop
xor
sub
imul
popf
imul
jo
insl
push
daa
jne
sub
cmp
popf
cwtl
outsl
jo
inc
and
push
add
call
insb
loopne
lret
loop
cli
add
jno
adc
inc
sbb
ds
out
jnp
int
sbb
cmp
xor
arpl
sbb
popa
ss
popf
push
es
ss
push
and
inc
jl
rcrb
notl
pusha
jnp
ret
inc
dec
lock
js
ja
pushf
pop
cmp
xchg
outsl
push
sbb
xor
jnp
mov
mov
pop
aam
add
push
xchg
scas
loop
xor
or
adcl
add
xchg
push
jle
sbb
idivb
jnp
cmp
fwait
es
enter
pop
imulb
or
dec
jbe
mov
ficomps
mov
in
sahf
or
movsb
sbb
pop
mov
and
mov
ret
or
imul
mov
stos
jae
or
inc
sub
test
mov
movsb
ljmp
stc
rolb
cmp
sbb
jo
and
dec
jge
lahf
pop
inc
or
sbb
mov
ljmpw
xchg
mov
addb
ja
lods
clc
rcrl
sti
push
jbe
stos
das
insb
into
xchg
sbb
and
sbb
push
clc
clc
sbb
les
jae
mov
std
add
dec
and
sbb
out
hlt
out
scas
mov
es
dec
mov
push
add
enter
imul
mov
loope
push
adc
addr16
and
jle
fnsave
loopne
sub
roll
fs
out
jae
mov
xchg
scas
push
inc
pop
test
jne
jnp
or
fiaddl
mov
or
ja
das
je
xchg
jmp
test
sbb
push
and
cmp
int
push
gs
xor
pop
adc
mov
test
gs
mov
push
int
cmpsl
addr16
cmp
jp
mov
xorb
fsubrp
in
test
addr16
fldl
xchg
jno
and
rcl
adc
bound
std
movsb
push
loopne
stc
dec
cmc
or
mov
add
test
in
jb
xor
inc
sub
ljmp
fcomi
xchg
test
sbb
cltd
stc
cmp
and
xchg
mov
cld
xor
mov
dec
dec
lret
pop
in
push
out
in
movsb
in
rcl
das
cwtl
sub
mov
div
cltd
sub
mov
add
mov
ljmp
mov
aaa
lock
add
or
inc
stc
insb
mov
shl
jle
sbb
jl
add
daa
fwait
hlt
das
in
rcrb
mov
xchg
sub
xchg
sub
in
aad
mov
fdivr
aam
enter
popf
cmp
push
fldl
jl
mov
hlt
add
dec
and
xor
lods
adc
sbb
push
xor
and
or
pop
movsb
shrl
jl
sahf
cmp
repz
pop
repz
mov
aaa
adc
and
xchg
insb
sub
incl
frstor
pop
mov
enter
out
fidivrl
jecxz
jle
loopne
cli
shlb
movsl
mov
ja
xchg
ljmp
push
lea
xor
roll
out
lahf
imul
and
pop
icebp
dec
lods
cmc
cmc
jmp
jle
imul
je
push
xor
adc
cmpb
ss
fsts
push
cld
mov
fiaddl
stos
mov
out
push
std
sub
fninit
testb
scas
shrb
lcall
cmp
scas
add
shlb
popl
cs
or
loopne
faddl
xchg
scas
push
mov
pop
icebp
or
or
sti
and
sti
mov
fistl
mov
movsl
aas
xlat
cmp
cld
cs
mov
stos
pop
pop
push
cmp
out
shrl
xchg
stos
xor
lahf
mov
lea
nop
aam
mov
nop
int3
testl
xchg
iret
lods
pop
and
mov
mov
push
cli
out
ficompl
xchg
push
jne
gs
add
jbe
clc
or
inc
sbb
shrb
fisttpll
out
stc
xor
pop
jecxz
insl
adc
xchg
xchg
fcomi
pop
cmp
mov
lcall
sub
push
mov
hlt
shrb
imul
mov
into
push
push
xchg
pop
mov
jae
cmc
push
mov
mov
fldenv
add
inc
xchg
stc
test
dec
mov
pushf
enter
hlt
mov
or
xor
jb
dec
mov
jb
test
cmp
pop
clc
lcall
sbb
loopne
pop
in
insl
fadds
or
ljmp
and
rcll
inc
popa
dec
mov
lahf
jmp
mov
orb
rcrb
jae
fucomip
push
sahf
sar
pop
fildl
jmp
sbb
push
fisttpll
xchg
cmpsb
lret
sahf
push
lods
inc
jecxz
jns
push
mov
dec
pop
test
jle
imul
idivb
in
lock
mov
and
push
data16
pop
aas
bound
jb
and
add
into
cs
repnz
xor
subb
push
movsb
out
fidivl
int
cmp
rorb
push
inc
push
push
xchg
rolb
adc
add
jbe
pop
inc
ficompl
cwtl
orb
arpl
mov
cld
push
int
rol
fcmovne
lcall
mov
outsl
jmp
repz
test
and
mov
fcmovu
andl
sahf
dec
popf
pop
filds
das
adc
push
inc
xchg
xor
ret
cwtl
sbb
shrl
roll
sbb
ja
pop
jne
gs
outsl
mov
cmpsb
loope
mov
test
mov
adc
test
idiv
push
clc
jle
and
add
out
jmp
cmpsb
fildl
pop
lock
mov
mov
jae
jns
sbb
in
lret
das
andb
shl
cli
adcl
mov
leave
jo
imulb
cld
mov
jle
pop
dec
jl
mov
in
cmp
push
add
cmovae
cmpsb
jmp
lcall
fs
pop
ja
dec
call
insb
mov
or
adc
push
repz
leave
inc
sahf
jle
lock
pop
orb
mov
int
cld
mov
test
sahf
stc
mov
icebp
mov
push
mov
fnstenv
inc
hlt
mov
clc
test
sub
xchg
sub
sahf
in
dec
lea
je
jl
or
imul
mov
ret
shl
mov
inc
mov
repz
dec
xor
adc
jae,pt
fsts
jo
leave
xchg
lea
mov
sarb
mov
stc
in
mov
xor
or
aam
imul
cmpsb
imul
imul
nop
pop
add
cmp
inc
mov
xor
pop
pop
cli
inc
sub
mov
or
js
dec
rorl
mov
repnz
std
ret
xchg
pop
repnz
arpl
daa
mov
lcall
mov
pop
stos
rcrb
scas
xchg
pop
cmc
push
push
and
mov
xor
mov
or
or
ss
enter
inc
or
fnsave
and
sbb
push
jno
mov
scas
mov
push
daa
int3
inc
sub
into
or
mov
clc
insl
cmp
insl
and
add
inc
jns
or
adc
xchg
and
adc
fsts
out
stc
mov
leave
int
sbbb
push
data16
sbb
mov
divl
lds
pop
pop
je
loopne
in
rcrl
enter
sub
enter
loope
movsl
je
sub
sub
movsb
pop
inc
fldt
mov
mov
dec
push
lods
lods
inc
cmp
addb
stc
roll
adc
insl
jo
lock
and
xchg
lock
jl
fucomi
mov
push
mov
sub
cmp
add
mov
or
dec
popa
push
mov
inc
jmp
out
pop
or
push
adc
xor
mov
mov
xor
mov
pushf
rorl
dec
jge
mov
shll
mov
shrb
inc
rclb
mov
aam
stos
leave
add
popf
xlat
js
cmp
decb
and
add
cmp
stos
xchg
mov
jecxz
or
pop
jle
das
push
pop
sub
cld
lret
dec
mov
loop
cmp
fiaddl
cmp
mov
sub
add
push
mov
jb
xchg
mov
push
stos
in
ror
push
jg
jle
in
mov
aas
push
push
stc
or
xchg
cli
mov
icebp
leave
dec
ss
or
mov
dec
xor
movsb
pusha
mov
cmpl
xchg
dec
or
dec
cmp
jnp
out
mov
cwtl
jge
jne
xor
nop
mov
movsb
test
jns
cmp
jb
inc
notb
int3
push
out
dec
jne
pop
sub
subb
enter
mov
xchg
or
ljmp
pop
pop
sbb
lods
push
mov
gs
push
repz
test
int3
leave
loope
or
rorl
pop
push
mov
sbb
mov
xchg
pop
jmp
loope
dec
in
mov
adc
mov
dec
pop
xchg
pop
loopne
jecxz
nop
xor
or
loope
movsl
fisubs
xchg
jp
jns
divl
loope
test
mov
or
and
dec
xchg
pop
fsts
push
push
sbb
pop
dec
xorl
xchg
add
cmp
addr16
add
ret
cmp
js
movsl
lock
scas
pop
sarl
sbb
and
sbb
jle
cmpsl
mov
jbe
call
fs
std
xor
in
jl
stos
sti
cltd
push
sbb
and
mov
jb
mov
mov
test
lahf
pushf
lods
jg
or
adc
clc
or
mov
sub
mov
lea
jp
inc
cmp
or
int
ljmp
mov
mov
jae
out
push
jmp
in
shrl
test
fdivr
add
add
xchg
in
cmp
lcall
insl
sarl
and
rcr
arpl
outsl
add
clc
mov
std
push
sub
clc
mov
cli
or
jae
daa
inc
sbb
in
pusha
jmp
lea
push
scas
sub
in
fcom
push
mov
add
insl
mov
cli
test
xchg
pop
jg
adc
push
lods
js
es
jnp
repz
jl
mov
xchg
pop
arpl
ffree
shl
lods
sub
ja
cmp
inc
je
arpl
pusha
and
ja
xor
sub
iret
hlt
pusha
add
gs
lods
push
aaa
fsubrp
inc
cwtl
sub
push
and
inc
mov
mov
lods
out
pop
dec
andb
adc
xor
stos
mov
sbb
ja
cmp
movsl
dec
add
data16
add
cmp
in
add
lahf
in
ficompl
jnp
mov
fimuls
in
incl
jnp
pop
xchg
xchg
adc
hlt
out
push
les
icebp
test
sbb
sub
lds
sahf
fdivrl
rol
mov
scas
out
out
lds
in
jl
mov
sbb
xchg
call
outsb
push
or
cmp
inc
and
dec
lods
mov
mov
pop
adc
dec
je
sub
shrl
lahf
loopne
icebp
jmp
in
inc
pop
nop
xchg
sti
inc
movsb
inc
test
sub
movsb
or
add
outsl
iret
or
lea
out
pop
lcall
iret
cmp
sahf
hlt
jmp
xor
stos
int
mov
adc
and
add
mov
push
push
pop
pusha
es
nop
test
aad
xchg
enter
mov
leave
jns
xchg
xor
and
or
add
andb
sub
pop
inc
mov
loop
stos
jne
fwait
xchg
cmpsb
mov
test
and
mov
xor
add
fcmovbe
xchg
cmp
and
push
fildll
xchg
mov
outsl
test
adc
sbb
dec
cmc
mov
mov
sub
adc
ret
or
xchg
jg
and
js
lret
aad
xorl
out
push
pop
lahf
sarl
xor
xor
xor
imul
push
push
or
es
data16
push
push
out
jl
dec
test
incb
je
sahf
data16
inc
xor
aas
push
mov
mov
popa
xor
fimull
dec
jnp
ja
leave
mov
xor
inc
push
fs
jb
out
fistpll
je
paddb
das
pop
jmp
sarb
push
cwtl
mov
push
hlt
mov
push
hlt
add
xchg
inc
mov
push
xchg
adc
loope
dec
cmp
test
sub
mull
or
shlb
fwait
js
jae
mov
or
mov
mov
icebp
push
daa
sti
add
loop
push
fcmovnb
mov
sbb
in
add
xor
xor
jbe
mov
push
ficompl
mov
push
test
fmul
lods
mov
jmp
into
movsb
lahf
xchg
pop
leave
inc
outsl
xor
mov
add
mov
stos
mov
mov
jb
jae
pop
adc
adc
dec
cwtl
aas
and
sbb
sahf
sub
enter
fwait
sbb
ds
sbb
dec
xchg
icebp
adc
sbb
mov
jl
or
addr16
jns
cmp
cltd
loope
adc
jg
data16
pop
or
jle
aam
cld
add
xchg
enter
negb
push
roll
gs
int
jbe
pop
mov
bnd
lcall
mov
repnz
jmp
push
ret
mov
int
ficoms
adc
ret
sti
cmpsb
decl
in
push
dec
mov
inc
hlt
xor
adc
mov
rorb
testb
fwait
mov
scas
cmp
ret
repnz
scas
iret
jmp
add
int3
negl
stos
repz
push
pop
loope
addl
cmpsb
pop
cmp
xchg
js
out
mov
out
sti
mov
bound
lods
jno
push
into
cmpsl
adc
insb
test
sub
shrb
dec
cmp
mov
mov
sahf
add
mov
jge
in
cmp
gs
movsl
push
mov
insb
or
shlb
sub
test
adc
out
mov
aam
mov
fcmovnb
negb
inc
movsl
and
adc
je
sub
cli
jecxz
mov
fisubl
sbb
or
xchg
int
sub
out
adcl
imul
out
lret
push
mov
add
mov
stc
xchg
pushf
pushf
idivl
jbe
addr16
fdivs
dec
cmp
ret
aad
sbb
xchg
or
imul
std
xchg
loopne
or
sahf
mov
jnp
fnstsw
push
repz
xchg
sub
je
js
imulb
mov
mov
mov
push
pop
mov
push
ret
mov
imul
xchg
sbb
dec
cld
mov
push
fs
jb
scas
int
xchg
in
imulb
jp
cwtl
fiadds
outsb
es
add
adc
cmp
int
cmp
daa
sub
adc
jae
sub
push
sbb
cmpsb
adc
insb
mov
stos
adc
dec
and
jnp
xor
fsubrs
jbe
sub
leave
iret
dec
pop
sti
pop
and
xor
push
mov
mov
xchg
addr16
push
add
aam
cmp
sub
in
pop
ds
jbe
popf
add
lods
sarb
mov
xchg
cs
ljmp
sbb
xor
mov
inc
ss
mov
push
and
in
pushf
pushf
sahf
imul
jecxz
cmc
popa
cmp
addl
hlt
mov
imul
pop
mov
into
cmp
add
and
xchg
popa
jb
xchg
pop
mov
fistpll
call
push
mov
adc
mov
cmpsl
das
sarb
fdivr
lahf
insl
scas
push
pusha
adc
loope
adc
and
test
inc
push
sub
and
inc
adc
pop
push
rorb
mov
rcrl
dec
dec
scas
fldenv
cmp
mov
lods
idivb
ja
cmpl
sub
divb
sbb
add
jecxz
xor
in
jmp
push
imul
inc
stc
inc
cmp
lea
fcompl
out
std
shrl
jo
inc
jle
insl
rcll
cmp
cmp
das
mov
inc
mov
jmp
es
sub
mov
aam
inc
ret
jl
and
out
cld
movsb
sub
inc
popf
push
xchg
or
xchg
push
pop
call
cmp
shll
pushf
xor
and
sub
ss
pop
jp
gs
inc
mov
sub
add
lea
test
mov
mov
cmp
mov
xchg
dec
xchg
or
imul
push
or
ret
shl
sti
inc
push
pop
mov
movsb
jle
repnz
xlat
outsb
lock
lret
mov
mov
xchg
lods
xchg
shlb
rol
mov
lds
jmp
pop
insl
lret
mov
xor
mov
or
loop
and
es
pop
dec
mov
mov
test
jle
pop
sbb
fwait
pop
test
xor
dec
in
or
xor
repnz
push
pusha
out
pop
flds
movsb
mov
testb
pop
mov
mov
or
pop
inc
cmp
xchg
pop
or
or
xor
mov
sub
pop
test
cli
cmpsb
or
mov
ljmp
call
mov
ret
rcrb
mov
cmp
push
xchg
call
call
jae
cmc
push
push
fcmovu
in
lret
sarl
dec
lock
sti
and
outsl
push
or
insb
test
xor
inc
popa
lcall
mov
leave
mov
jmp
push
out
outsb
push
les
mov
fldenv
notb
and
hlt
ret
or
data16
imul
rcrb
nop
or
into
or
inc
hlt
cmp
push
mov
xchg
sub
mov
nop
popf
add
push
rolb
outsl
ja
shrb
dec
mov
add
sbb
repnz
js
lahf
add
imul
aaa
push
and
cwtl
dec
hlt
xor
sub
fsts
xor
roll
push
scas
xlat
jecxz
leave
lods
sbb
jle
orl
xchg
popa
adc
aaa
mov
scas
sbb
popa
jne
hlt
push
shrd
fisttpl
imul
mov
fs
inc
out
pop
les
jnp
movsl
jle
xchg
mov
call
ret
test
stc
add
inc
in
lods
loopne
test
popa
and
push
mov
ficoms
aad
xchg
pop
or
cli
popf
rcrb
push
or
push
repz
int3
sub
adc
push
jg
pop
and
mov
dec
sbb
mov
ftst
mov
xor
xlat
mov
js
push
sub
movsl
dec
mov
fistl
cmp
sub
sub
xchg
loope
pop
js
cmp
cmp
icebp
notl
adc
push
adc
pop
mov
es
fmull
and
js
ds
ret
jmp
ficoml
jo
jl
pusha
inc
ds
sub
adcb
popa
not
sbb
pop
xchg
leave
insl
sbb
stos
repz
push
clc
arpl
pop
push
into
adc
mov
enter
in
pop
cmc
call
sbb
adc
dec
adc
fistps
mov
fmuls
addl
dec
lods
lods
insl
jp
sub
cmp
add
mov
lods
pop
cmp
in
loope
frstor
fdiv
mov
mov
adc
sti
nop
ds
sbb
add
imul
jo
jecxz
pop
push
loop
mov
enter
or
cmpsb
icebp
mov
cmp
cmpsb
mov
jl
sbb
xor
cmp
mov
push
mov
sub
cmp
pop
das
scas
idiv
shrb
sbb
popa
push
xor
lret
push
dec
lret
push
mov
roll
push
iret
push
ret
inc
xchg
cmpb
xchg
mov
inc
push
pop
sub
addr16
movsl
or
sbb
cltd
fnsetpm(287
and
jne
mov
dec
sub
clc
sti
push
mov
int
push
push
jmp
xor
leave
ja
lds
jb
aad
scas
jnp
loopne
bound
dec
mov
insl
test
pop
mov
hlt
push
mov
jg
push
repz
cmp
pop
and
pop
movsb
add
rcrb
test
lret
insb
lcall
repnz
sub
add
add
pushf
into
inc
push
dec
push
jmp
pop
jge
sub
jle
jne
insl
lahf
pop
and
fisttpl
xor
jg
xchg
mov
sbb
adc
xchg
dec
mov
out
sbb
xor
push
jne
repnz
rcr
adc
lock
std
mov
lods
sbb
push
int
es
dec
aad
aas
jne
mov
jb
stos
repz
dec
adc
hlt
mov
xchg
lcall
lret
setne
fdivrp
cmp
addl
jns
sbb
arpl
mov
adc
mov
aaa
mov
fldl
loope
push
cmp
push
repnz
push
js
loopne
daa
cmpsb
lcall
mov
das
int
outsb
mov
fwait
pop
mov
jnp
movsb
jns
or
pop
loope
push
add
lahf
push
and
dec
xchg
xchg
repnz
rorl
jbe
popf
in
stc
out
int3
pop
lahf
pushf
and
xchg
add
push
hlt
or
adc
inc
fsubr
hlt
mov
rclb
push
leave
xchg
push
mov
cltd
fidivl
popa
jle
cmpsb
pop
xchg
lahf
sbb
and
xor
sub
repz
sti
push
sarb
cmp
fsubr
xor
movsl
cli
jmp
ror
mov
cmp
cmp
test
dec
mov
fs
cltd
cmpsb
add
dec
xor
movsb
jb
pop
xchg
xchg
pop
lods
mov
jg
and
xchg
inc
add
stos
call
jmp
adc
inc
jge
cmp
je
mov
aam
jecxz
cmp
imul
cmpsl
lods
pop
sbb
dec
push
mov
negb
into
mov
push
and
push
cltd
jge
push
cmp
jno
es
jg
bound
mov
xchg
cmpsb
jnp
repz
hlt
imul
inc
push
imul
fs
push
dec
cltd
aas
lahf
mov
leave
addr16
aam
loopne
cmpsl
fimuls
fsubs
movsl
pop
mov
test
cwtl
js
popf
scas
lock
xor
mov
xchg
mov
pop
data16
or
rolb
movsl
in
push
test
jecxz
xchg
pusha
or
dec
ficoml
adc
mov
inc
dec
lods
mov
das
call
xor
jmp
sub
inc
dec
into
cmpb
add
sub
or
adc
jmp
cmp
pop
push
pop
jle
stos
int
mov
cwtl
pop
inc
mov
testb
orl
xor
mov
data16
adc
das
outsb
and
cli
outsl
jge
jmp
push
in
iret
mov
xchg
out
rol
mov
and
dec
cmc
push
test
lret
push
push
cmp
jmp
scas
xor
leave
xchg
inc
fnstsw
sub
cmp
in
insl
adc
jne
insb
dec
mov
das
cmp
xor
daa
push
enter
clc
dec
scas
popa
test
and
sbb
adc
jle
into
and
cmp
sub
cmc
and
lea
mov
mov
test
dec
mov
jmp
imul
mov
inc
pop
inc
or
jno
cmpsb
movsl
lcall
mov
mov
fsubl
imul
cwtl
dec
lods
cmpb
mov
or
lret
dec
jne
clc
mov
push
in
sub
imul
push
movsl
mov
jno
push
push
xchg
xchg
outsl
insb
icebp
fucomp
dec
outsb
daa
or
cltd
ljmp
cmp
fucomp
leave
or
xchg
fldt
out
shrl
ja
push
sub
inc
cld
ret
lret
pop
xchg
add
lret
pop
inc
mov
cli
in
test
lock
mov
inc
adc
jnp
or
inc
hlt
movsl
scas
jp
mov
and
aad
ss
cmp
mov
mov
icebp
adc
stos
fcomp
xchg
mov
xchg
cli
dec
mov
cmp
mov
and
es
aas
dec
addr16
inc
aam
cmp
mov
ret
sarb
sbb
ss
jae
mov
xchg
orb
jnp
lret
fsubrl
add
mov
pop
inc
int
pop
push
in
cmpsb
and
mov
dec
and
lea
mul
push
inc
mov
xor
push
in
jp
iret
xchg
mov
scas
xor
mov
out
fs
jle
and
or
or
mov
rclb
cmp
jmp
mov
cmc
adc
ss
jnp
inc
push
pop
and
adcl
mov
add
adc
push
pop
dec
xlat
pop
fsts
xchg
shr
std
mov
idivb
repz
dec
inc
sar
fstpl
ret
dec
dec
inc
jnp
xor
test
aas
mov
cvtps2pd
xchg
icebp
imulb
jecxz
jbe
pop
shrl
push
or
fcmovnbe
push
push
or
rorl
fidivs
clc
push
and
mov
push
inc
js
pop
mov
out
adc
xor
mov
lock
sub
neg
mov
cmp
mov
inc
inc
popf
test
aad
add
adc
popf
jns
inc
mov
idivl
pop
push
loope
pop
pop
in
xor
mov
call
leave
stos
jp
fisttpll
xor
adc
fs
mov
push
gs
dec
cmc
push
lods
ljmp
mov
ror
push
popa
inc
icebp
cmp
adc
xchg
rorb
insb
pop
jg
movsl
stos
leave
ret
or
arpl
int3
xchg
in
and
push
or
dec
mov
and
mov
inc
aaa
out
sbb
stos
adc
repnz
xchg
sub
testb
out
fsubrl
sbb
mov
mov
popa
roll
sub
mov
push
add
idivl
shlb
insb
gs
xor
adc
scas
and
add
inc
jae
mov
lret
cmp
loope
mov
pop
jge
mov
iret
push
mov
aad
fcomps
xchg
or
push
imul
iret
mov
aam
clc
add
mov
lock
test
add
xor
jo
insl
cmp
lds
dec
mov
fcom
data16
loop
cwtl
adcl
jle
fs
sbb
add
adc
dec
lds
mov
mov
jne
push
and
lea
sti
jmp
dec
call
and
adc
mov
mov
ss
sbb
push
loope
add
testb
mov
pusha
cwtl
ret
ss
cld
int3
lods
stos
out
sub
push
ss
push
popf
jl
sub
mov
dec
call
xor
adc
mov
adc
mov
jg
stc
push
leave
sbb
es
aas
xchg
arpl
pusha
mov
es
adc
fcmove
jle
mov
jmp
in
xlat
repnz
in
pop
push
stos
adc
xchg
mov
insl
ret
movsl
mov
rcrl
mov
aas
pop
scas
cmp
sbb
inc
lret
insb
sar
fldenv
adc
fstps
bound
addb
test
cs
sub
testl
pusha
insl
mov
mov
jmp
cmpsb
mov
lods
jg
ss
cli
shrl
out
in
xor
xchg
stc
mov
mov
jge
mov
jnp
sub
cs
test
xchg
mov
cmpl
into
pop
pushf
aad
push
xchg
cmp
aad
cli
jae
stos
aaa
imul
mov
xorb
mov
jmp
subb
mov
mov
pop
adc
imul
cmc
fwait
dec
push
inc
in
shlb
and
jmp
jmp
cmp
js
push
sub
imul
aaa
lds
cmp
std
fmuls
scas
fucomp
imul
jb
loop
xchg
dec
movb
push
cmc
loop
mov
aas
xchg
cmp
lahf
cmp
test
pop
mov
mov
sbb
inc
cmp
pushf
jl
dec
push
jns
push
icebp
sti
fdivl
mov
dec
lods
mov
addr16
inc
mov
aam
xchg
rorl
or
dec
push
push
mov
fmuls
jmp
out
jle
in
clc
ret
test
xor
sbb
call
push
dec
xchg
jae
stos
dec
mov
orb
icebp
push
jp
adc
nop
mov
aaa
pop
xorl
pusha
mov
stos
fisubs
fwait
sahf
and
aam
cmp
daa
pop
repnz
or
dec
es
xlat
mov
daa
sub
mov
adc
pop
data16
shlb
cmpsl
lds
es
sub
fmuls
pop
in
jmp
push
loope
cwtl
std
hlt
cmp
push
mov
xchg
add
pop
push
mov
pop
mov
and
popf
lods
inc
push
jb
cmp
and
xor
add
dec
shrb
pop
xchg
add
xlat
popf
pop
mov
xchg
iret
insl
jl
jecxz
sbb
push
sub
sub
jmp
pop
lret
sub
aas
aas
mov
gs
icebp
xor
cmp
cmp
sbb
out
push
xchg
inc
mov
imul
push
out
mov
lret
addr16
pop
cmp
lds
jp
fstpt
arpl
int
or
inc
mov
adc
dec
dec
call
xchg
push
mov
shrl
xchg
nop
pop
jle
loop
scas
icebp
mov
push
leave
xor
in
in
push
xchg
out
jnp
in
xor
fiaddl
shrb
nop
mov
cmp
movsl
ret
into
lods
mov
loopne
insb
icebp
jo
addr16
add
dec
mov
scas
dec
adc
cmp
mov
inc
scas
mov
movsb
out
fs
sub
dec
pop
movsl
stc
in
or
repz
outsb
aad
bound
jmp
inc
mov
sar
jp
outsb
jnp
cmpsb
push
add
dec
mov
adc
lea
jno
sbb
dec
imul
pop
mov
mov
sub
divb
pop
add
arpl
add
jbe
out
jmp
out
pop
sub
jae
neg
das
clc
movsl
rorl
outsb
lret
out
inc
repnz
add
inc
cmp
xchg
imul
adc
rcrb
inc
inc
lahf
sbb
inc
cmp
movsl
and
mov
jg
jle
shrb
pop
aad
sbb
loope
dec
sub
lea
int3
dec
cmp
imul
fnstsw
fdivrl
ss
hlt
scas
hlt
adc
mov
mov
mov
sbb
push
loopne
insb
sti
and
sbb
out
cltd
sti
push
lods
sbb
dec
pop
adc
cmp
cmp
lret
fstpt
mov
scas
out
aad
lret
mov
dec
pop
sbb
call
mov
xor
dec
dec
fucomip
jmp
lods
jecxz
xchg
aam
das
xor
mov
xor
push
gs
ljmp
int
adc
sbb
xchg
push
outsb
mov
icebp
ss
adc
stos
cmp
repz
inc
mov
push
pop
or
cmp
cmpsl
mov
sub
or
fisttpl
lret
jne
ljmp
fidivrl
lods
insb
xchg
adc
bound
dec
leave
inc
push
arpl
inc
testb
adc
xor
mov
inc
bound
pop
dec
aaa
arpl
test
gs
das
cmp
jno
push
movsb
inc
push
sub
fiaddl
in
xlat
dec
test
pop
inc
mov
rcr
lret
push
scas
mov
mov
sahf
jecxz
mov
sbb
movsb
addr16
mov
faddl
loope
insb
xchg
andl
push
aas
fwait
notl
out
sbb
in
inc
mov
test
insb
in
sbb
pop
pop
cwtl
mov
es
je
push
aaa
push
out
pop
pop
pop
roll
inc
std
or
jmp
cmpsl
push
das
sbb
jns
sbbb
outsb
jl
mov
repnz
popa
mov
jnp
push
jnp
xor
mov
stc
push
jmp
aaa
andb
sub
mov
jmp
dec
sbb
jmp
addl
mov
cmpsl
and
cwtl
or
test
mov
je
inc
in
lcall
dec
add
out
fwait
sbb
loopne
rolb
lods
mov
and
cmpsb
jbe
cmp
cmp
insb
ret
push
data16
push
pop
cmp
add
dec
dec
jecxz
ss
inc
pop
pop
pop
inc
jecxz
jl
shrb
and
pop
sbbb
lock
mov
icebp
scas
mov
sub
andb
and
out
xchg
sub
mov
out
bound
rclb
test
lods
bndldx
rclb
pushf
inc
int3
pop
sti
orb
pop
add
andb
in
jl
jnp
add
repz
idivb
xlat
fdivl
shlb
inc
outsl
xchg
in
jle
push
inc
dec
cs
jbe
test
mov
push
lods
lahf
call
std
sbb
cmp
call
cmc
cmp
inc
ss
and
or
xor
out
dec
xchg
imul
xor
aas
mov
or
movsl
movsl
int3
pop
xchg
imul
inc
jp
cwtl
mov
pop
cmp
fmul
arpl
jecxz
fldcw
add
mov
mov
sub
pop
xor
iret
lahf
lods
iret
push
inc
mov
cli
lcall
rclb
sti
or
inc
mov
cmp
ja
ror
xchg
xchg
adc
jne
xchg
je,pt
push
jg
idiv
cmp
inc
popa
push
cld
push
push
sbb
ret
inc
push
fwait
cs
push
in
sti
xchg
ss
or
mov
jge
addr16
rorl
cmpsl
push
adc
fisttpll
dec
bound
je
in
xor
xor
movsb
push
xchg
sahf
sub
xchg
sub
sbb
push
call
push
cmp
pop
loopne
dec
and
daa
sti
lock
ljmp
ficoml
mov
mov
sub
mov
jmp
mov
push
cmp
jae
and
imul
jle
fs
cli
bound
test
mov
xor
mov
nop
cs
cmp
mov
xor
nop
ja
fidivl
ret
loop
hlt
xchg
xchg
aad
scas
imul
sub
fisttps
sahf
stos
push
mov
cs
mov
jne
and
dec
xchg
movsb
pop
inc
add
bnd
out
mov
in
fisubs
daa
sub
dec
std
add
pop
es
scas
sbb
das
les
push
push
out
int3
loop
cmp
mov
andl
push
fwait
xchg
imul
sarl
ffree
add
lods
stos
fnstcw
sbb
dec
dec
lods
mov
and
sub
cmp
jmp
out
pop
xchg
adc
xchg
add
imul
mov
cmc
ds
cmpxchg8b
int
stc
and
cmp
push
std
jg
stc
mov
sbb
mov
mov
inc
mov
dec
mov
sub
mov
js
ds
cwtl
and
xlat
add
jae
xor
ficomps
inc
sarl
rolb
out
dec
jge
push
repz
inc
lods
jp
clc
rolb
pop
mov
mov
flds
push
test
test
test
pavgw
pop
cmp
push
dec
adc
dec
xor
fldenv
pop
repz
dec
jge
xlat
cmp
scas
call
stos
mov
jnp
mov
hlt
dec
jo
and
inc
dec
lods
jecxz
shlb
mov
and
xchg
maxps
fcoms
and
dec
stc
pop
leave
dec
jmp
out
jno
orb
xchg
push
cmpsl
xchg
fs
pop
inc
stc
mov
xchg
mov
decl
inc
mov
cld
lret
push
cmpb
and
push
cmp
in
mov
mov
xchg
or
mov
or
jns
pushf
pop
ret
mov
icebp
add
sbb
stos
sub
sarb
mov
or
push
mov
cmp
inc
mov
stos
orb
cmovne
in
cmp
xchg
fcompl
test
sbb
xchg
test
and
push
push
loope
push
adc
inc
and
inc
sarb
ja
cmp
arpl
stos
outsl
mov
test
aaa
ret
inc
push
sahf
aas
jbe
pop
enter
ljmp
dec
inc
movsl
imul
mov
pop
and
bound
dec
add
dec
mov
mov
cltd
cmc
cmp
pusha
mov
sub
sub
pop
xchg
scas
xor
loopne
dec
mov
jg
loop
adc
scas
subb
leave
dec
mov
push
mov
aaa
pop
xlat
mov
mov
mov
or
inc
loopne
jl
cmpsl
loop
cwtl
xor
into
sbb
dec
test
jl
and
sbb
sahf
jbe
xchg
lahf
push
bound
push
mov
dec
push
jns
sub
mov
sub
pop
and
pop
xor
dec
xorb
jl
or
mov
scas
movsb
pop
mov
ja
jb
mov
sbb
repnz
dec
cmc
lods
jle
mov
and
sbb
iret
push
sti
lods
mov
int3
cld
inc
xchg
cmp
cmp
aas
push
or
push
adc
scas
ja
cs
pop
jb
popa
ja
lods
or
mov
sarl
js
nop
or
sbb
std
push
imul
in
push
icebp
xchg
subb
add
outsl
adc
lcall
out
dec
movsl
aaa
mov
adcl
scas
cs
je
inc
mov
idivb
mov
adc
cmpl
inc
push
enter
mov
jmp
jae
lahf
cwtl
ds
call
pop
jno
push
clc
jns
cli
pop
mov
mov
mov
cmp
dec
sub
in
bound
stos
xchg
andl
and
icebp
push
popa
sub
js
pop
lahf
mov
fdivs
rorb
jo
xchg
jno
gs
jmp
xor
bound
sub
imul
dec
cmp
lcall
and
sub
repz
jl
add
pop
sahf
fs
ljmp
adc
and
mov
mov
jp
out
jb
hlt
pop
daa
mov
xor
mov
mov
iret
mov
imul
sbb
push
adc
cmc
jecxz
push
sub
insl
jecxz
jno
call
mov
aam
fnstcw
add
outsl
std
shrb
in
nop
mov
add
cmp
nop
pusha
xchg
imul
or
test
test
sub
xchg
insl
pop
mov
cli
pop
lods
or
outsl
push
fs
ss
mov
cmp
out
xchg
cs
fwait
xor
jle
sbb
repz
mov
jmp
pop
andl
xchg
lret
pop
add
pop
movlhps
fdivr
mov
cmp
rcrb
daa
inc
sbbb
mov
or
jle,pt
jbe
lahf
shll
popf
jbe
in
out
dec
stc
pop
add
les
push
xchg
outsb
xchg
adc
add
sub
jmp
adc
aad
push
sbb
mov
push
daa
ds
and
jmp
mov
pop
clc
xchg
and
leave
sti
insb
fs
in
pop
xchg
add
aas
imul
xlat
mov
xchg
orb
push
inc
std
mov
sbb
mov
sbb
cmp
or
aas
sub
xchg
push
jecxz
cltd
and
mov
scas
leave
cltd
cltd
aad
outsb
aam
dec
lret
and
xor
les
push
enter
int
jge
insl
fwait
and
push
std
cmp
bound
sbb
mov
scas
int
xor
ret
mov
sbb
mov
in
repz
and
pop
jle
test
pusha
jmp
test
enter
ss
ret
push
inc
sarl
push
push
add
xor
push
add
stos
xchg
jge
cld
xor
enter
idivl
or
cmp
int
cwtl
inc
xorl
cmc
adc
lea
cli
mov
dec
sar
adc
dec
lods
pop
push
mov
mov
push
fildl
sti
jp
xor
xchg
int3
nop
xchg
xchg
sbbb
adc
sub
jle
fadds
sbb
mov
lock
fistpl
flds
pop
sbb
sarl
sti
push
aam
stc
sub
push
stos
mov
jp
shrl
push
les
mov
pop
cmpsb
and
xchg
or
das
out
or
cmp
pop
notb
sub
idiv
xor
pop
loopne
jl
scas
fs
mov
mov
and
push
mov
xchg
cmp
mov
std
cmp
lock
shl
jle
and
imul
mov
xchg
cmpsl
test
add
jp
stos
stc
and
sub
or
popf
add
xchg
adc
xchg
leave
xorb
xor
sub
mov
ret
pop
outsl
fst
cmp
lock
imul
jecxz
adc
shlb
adc
in
lock
xchg
aam
movsb
or
sti
sbb
pop
jecxz
mov
jecxz
add
adc
stc
es
or
push
mov
jge
sub
lret
fbld
insb
jno
lahf
sbb
adcb
jmp
pop
sub
pop
sahf
push
movsl
addr16
mov
loope
mov
cmp
jle
fisttpl
pop
iret
outsl
call
stos
bound
sbb
push
hlt
aad
std
js
out
cmp
nop
ss
jg
mov
xchg
mov
int
or
pop
call
pop
jno
int3
mov
mov
sbb
pop
mov
test
lds
mov
dec
mov
fnstsw
push
lahf
jge
xchg
iret
xor
aam
in
scas
in
int3
jge
sbb
sbb
adc
or
jo,pt
adc
pop
pop
in
imul
cli
adc
fwait
sub
jno
ljmp
xchg
and
aam
cmpsb
cmc
sti
push
mov
shl
sub
mov
adc
cmp
cmp
xor
inc
sub
inc
cmp
outsb
sti
dec
inc
cmp
cmp
adc
cmpsl
mov
test
inc
cmpsl
pop
adc
roll
jmp
gs
mov
cmpb
cli
push
pop
dec
test
aam
xchg
jnp
sbb
loopne
stos
mov
movsb
inc
mov
loopne
js
push
fisttpll
sahf
pop
sub
test
xchg
pop
xchg
dec
in
pusha
lock
test
sbb
iret
scas
adcl
mov
push
dec
hlt
sbb
aas
loop
imul
jbe
push
inc
js
aas
fistl
push
in
lods
push
jo
xchg
inc
sub
or
dec
sarl
cwtl
sarl
notl
scas
xlat
mov
shrb
mov
jae
mov
xor
mov
shlb
jno
jmp
and
test
mov
fidivs
out
mul
insl
leave
cwtl
xchg
sbbb
bound
and
in
dec
pop
and
cs
out
mov
loop
pop
add
xor
sub
dec
xchg
mov
xor
lea
addr16
outsb
fimuls
outsl
movsb
ja
ret
jae
jae
lods
inc
pop
rcrb
cmp
mov
mov
mov
jmp
rcrb
jg
scas
divb
pop
dec
fucom
pop
repz
dec
fucomi
adc
outsl
popa
xor
cmp
sub
pop
pop
mov
imul
xor
shlb
mov
daa
add
xchg
mov
out
call
jnp
les
loope
jecxz
inc
or
jne
cmp
shrl
xorl
mov
enter
shll
mov
jecxz
cmpsl
into
les
pop
sbb
and
inc
sub
into
xlat
mov
jg
mov
movsl
cmp
je
inc
jns
and
sbbl
ffree
imul
mov
push
sub
sbb
lock
pusha
push
cmpsb
in
pop
jne
out
xchg
and
jae
pushf
mov
lds
push
test
jmp
int
xor
mov
adc
and
jnp
mov
in
adc
or
inc
mov
ret
fisubrl
inc
xchg
inc
jbe
outsl
aas
js
mov
fisubs
push
cmp
sarl
pusha
lret
sub
lock
inc
shll
movb
clc
enter
rcll
cli
sub
jne
psubusb
mov
sti
push
jb
inc
cmpsl
aaa
mov
sub
popa
popa
mov
adc
shrl
ret
flds
lret
int
inc
shll
hlt
mov
cmpsl
adc
or
inc
ret
cmp
mov
add
cmp
lods
idivb
les
test
sarw
lahf
push
iret
inc
cli
mov
ret
movsl
arpl
and
dec
ret
jg
adc
mov
subb
xchg
sahf
adc
dec
xor
cmpsl
pop
xor
mov
mov
bound
and
aad
rcll
scas
daa
and
jl
std
mov
ds
mov
pop
mov
lods
dec
cmp
push
pop
jl
in
rorl
mov
leave
repz
push
jo
stos
sub
inc
pop
mov
repz
mov
adc
test
xor
push
dec
scas
jge
pop
or
jne
shl
ror
mov
stos
int
add
or
enter
mov
sub
jno
gs
jg
icebp
mov
ss
jmp
leave
fisubl
add
movsl
sbb
jmp
or
pop
dec
and
cmp
push
test
outsb
push
lods
and
lret
jnp
fidivrs
xor
cmp
dec
mov
push
mov
sub
cli
test
sub
stos
adc
mov
push
add
cmpsl
lcall
mov
xor
bound
out
sub
shlb
xor
test
inc
leave
pop
mov
pop
mov
inc
sti
or
and
int3
mov
xor
ds
sub
outsb
iret
addr16
sub
or
push
pop
fwait
mull
fdivl
dec
jg
pop
dec
mov
or
jb
fldl
inc
ret
lcall
mov
fiaddl
loope
sub
mov
dec
sub
push
mov
jmp
sbb
pop
pusha
mov
xchg
clc
fcomps
cmp
sbb
add
add
mov
in
mov
jno
icebp
adc
and
test
mov
ret
mov
cmp
leave
inc
out
sbb
dec
pop
mov
rcl
lret
cmpsl
notb
xchg
adc
call
sbb
roll
lret
pop
add
sbb
add
int
lahf
sub
outsl
inc
aad
repz
mov
pop
scas
or
jno
imul
lret
lea
rorb
pusha
mov
repnz
lock
cmp
cld
mov
js
push
jnp
dec
in
cltd
pop
jle
mov
push
adc
loope
inc
test
adc
mov
fisubrs
mov
fwait
iret
mulb
bound
fs
add
mov
push
mov
mov
loopne
adc
inc
out
jb
adc
mov
repz
dec
bound
fsub
push
cmp
sahf
scas
fdivrs
repnz
cmp
mov
out
and
jl
test
sbb
popa
mov
mov
lcall
test
mov
shll
xchg
dec
mov
lds
and
fstps
jl
addr16
pusha
inc
pop
mov
mov
mov
inc
cmp
mov
dec
mov
repz
lods
lahf
lock
pop
cmp
lds
add
sbb
lods
push
in
adc
mov
stos
aaa
jne
mov
fimull
mov
test
add
xor
iret
aad
or
pop
lock
lret
push
dec
sub
cmp
add
pop
dec
xchg
orb
cmp
jb
jmp
jno
push
cmp
test
lcall
xchg
movsl
nop
stc
loop
ret
mov
dec
push
pop
cmc
out
xchg
push
xchg
or
or
or
leave
mov
inc
sahf
push
lock
loope
fisttps
inc
insl
inc
mov
ret
ret
icebp
add
pop
mov
jl
mov
ret
mov
popf
lock
int
mov
sbb
repnz
in
push
inc
cmp
mov
imul
aam
imul
cmp
mov
jae
scas
pop
aad
loop
or
or
add
int3
jns
fucomip
sub
xor
sub
cmp
in
xor
xchg
jo
scas
dec
repz
inc
push
testb
dec
push
out
daa
sti
jge
stos
mov
mov
pop
cmp
loop
dec
and
ret
les
arpl
jne
xor
test
out
outsb
and
les
push
ljmp
or
repz
add
adc
cmp
sahf
sub
icebp
hlt
sbb
jno
mov
js
lret
mov
insl
pop
inc
push
mov
and
fsubl
pushf
xchg
mov
pop
scas
cmp
int3
fwait
add
insb
mov
mov
iret
pop
push
les
sbb
mov
xchg
push
inc
stos
push
test
popf
mov
aas
ror
fwait
dec
push
sbb
ljmp
ss
pop
imul
sbb
clc
xchg
adc
aad
ss
xchg
bound
call
mov
imul
subl
sbb
imul
push
rol
and
pop
out
ret
inc
fcom
sbb
enter
mov
or
cmp
dec
lret
cld
out
pushf
shlb
js
loope
pop
jmp
push
adc
in
movsb
mov
sbb
mov
or
daa
int
movsb
cmpsl
int
cmp
lock
push
sahf
cmp
int
mov
jo
cmpsb
xor
lret
mov
js
negb
scas
push
and
jns
xchg
push
jecxz
in
jns
mov
lods
sbb
sti
test
dec
inc
test
push
sbb
incb
cld
or
xchg
cmpsb
push
outsl
scas
loop
mov
sbb
jp
jne
push
subb
add
or
jb
dec
pop
into
mov
shlb
cld
lret
push
lods
xor
fidivl
int
test
shrb
mov
rorb
aam
out
rcr
pusha
loop
aaa
inc
and
jae
insb
int3
scas
push
add
lds
cmp
adc
and
xlat
scas
or
pop
testb
sub
lea
pop
sti
pushf
jno
arpl
sbb
mov
mov
cmp
aam
mov
movsb
mov
iret
jne
lret
std
popf
outsl
cmp
divl
sub
and
daa
outsl
dec
pusha
pop
mov
repnz
pop
and
pop
mov
pop
out
push
mov
xchg
jae
sbb
xchg
jb
lds
push
imul
xchg
lcall
adcb
std
outsb
mov
out
outsb
ret
xlat
mov
xchg
push
je
push
fs
icebp
add
cmp
pop
rclb
int
fdivp
repnz
inc
inc
push
xor
cwtl
leave
xchg
mov
jp
stos
push
lea
pop
fisubrs
cld
pop
into
popf
cmp
lret
out
mov
mov
xor
cmc
ret
adc
in
test
mov
jno
int
sbb
and
movsl
aaa
jle
jmp
ror
mov
add
xchg
icebp
ljmp
ret
cmp
dec
test
je
push
xor
mov
push
dec
fmul
push
cld
lahf
cltd
mov
xor
xchg
aad
dec
cmp
inc
sbb
mov
mov
and
pusha
sub
or
pushl
and
andb
rcll
js
or
jecxz
lret
mov
inc
mov
push
stc
xor
push
loopne
jmp
pop
cmp
stos
cli
xchg
sub
imul
fidivrs
xor
cld
xchg
mov
in
xor
loopne
enter
cmpsl
pop
loop
jb
lret
jbe
inc
dec
jle
int3
mov
adc
addr16
test
es
xor
mov
and
loopne
pop
xchg
ja
mov
pushf
in
push
rol
decb
pop
loopne
je
push
sahf
mov
mov
loop
sbb
into
js
mov
sbb
lret
rol
scas
xchg
iret
sub
ror
cmp
adc
mov
loop
mov
xor
imul
add
clc
cmp
insl
sbb
fnstcw
sub
call
pop
push
stc
inc
lret
push
dec
and
stos
xor
inc
stc
jno
leave
stc
popf
pop
faddp
test
sbb
les
cmpsb
mov
pop
gs
xor
xor
gs
dec
les
and
loop
test
dec
pop
push
dec
lods
adcl
cmpsl
repnz
fcmove
cli
inc
fidivl
push
push
jmp
dec
push
ficomps
push
pop
sub
cmp
sbb
add
std
in
pop
jns
cmp
mov
fwait
push
add
pop
mov
rcll
cli
mov
mov
sub
jecxz
or
out
jl
fisttps
adc
inc
leave
dec
rep
xlat
dec
fdivrl
jle
sti
cltd
fwait
adc
leave
ja
fmul
int
into
js
push
cmpb
int
movsb
and
jne
shrl
in
jecxz
pop
test
ret
mov
add
or
nop
imul
imul
shl
je
dec
mov
xor
cs
dec
sub
dec
out
push
sarl
imul
test
stos
push
addr16
sub
aaa
dec
scas
shl
jmp
push
popf
ret
and
push
loopne
sub
pop
leave
inc
mov
in
jnp
or
inc
orl
inc
sbb
cwtl
vpaddusw
dec
mov
pop
mov
aam
sbb
xlat
and
pushf
pop
adc
roll
add
jg
add
jnp
fidivrl
push
pop
in
fdivrp
in
and
jb
inc
inc
mov
mov
jno
andb
push
mov
shll
loope
je
rorb
mov
fldl
pop
mov
inc
in
mov
into
std
out
xchg
test
pop
sub
sbb
mov
das
xor
hlt
and
mov
in
imul
adc
and
test
xchg
mov
adc
out
jmp
cmpsb
dec
pusha
adc
sbb
ljmp
roll
les
xor
mov
jno,pn
ljmp
cmp
xchg
scas
jle
popa
insl
dec
mov
xor
add
in
movsl
es
mov
fistl
dec
imul
inc
push
scas
dec
xor
fneni(8087
dec
mov
mull
xchg
cs
shll
addb
and
call
pushf
mov
jno
in
hlt
xor
xor
push
and
add
call
mov
mov
jnp
xor
sahf
pop
jo
iret
test
scas
sbb
xchg
cmp
cmp
ja
jo
or
adc
jb
sbb
adc
movsl
mov
add
nop
lret
mov
cmp
mov
lcall
js
repz
dec
ret
in
stc
jle
push
in
adc
xchg
insb
popf
pushf
pop
jbe
or
pop
insl
sub
sahf
lock
mov
jp
jmp
ds
pop
or
mov
and
adc
call
pop
xor
and
movsl
push
dec
xor
addr16
inc
sub
push
push
jp
icebp
mov
out
imul
into
nop
xchg
mov
test
mov
sar
sbb
aam
pop
loop
add
mov
inc
mov
cmp
test
mov
lahf
out
push
and
or
xchg
or
add
pushf
inc
int
or
imul
rorb
mov
aad
mov
outsl
fcmovne
gs
lds
xchg
xor
fadd
ss
mov
or
cmp
cmp
ret
mov
gs
dec
test
sbb
mov
sbb
out
fwait
ret
pop
add
inc
or
xor
mov
mov
aad
imul
sub
outsl
shrl
movsb
out
sbb
xchg
stc
decl
cmpsl
push
iret
add
mov
lea
lret
lret
rorb
add
mov
jbe
aam
mov
sub
sbb
insl
xchg
jmp
repnz
jns
or
mov
daa
ret
loop
xorb
cmp
jo
and
icebp
mov
xchg
into
cwtl
add
jp
sub
pop
adc
pop
hlt
cmpsb
fisubl
sbb
mov
xor
and
xchg
add
dec
mov
xchg
enter
adc
inc
in
jae
out
outsb
mov
pop
loopne
push
scas
in
mov
inc
movsl
gs
push
ljmp
xchg
cmp
xor
icebp
sub
sub
xchg
pop
ficoms
lret
movsb
pop
scas
xchg
jecxz
call
mov
jle
sbb
mov
ds
andl
inc
inc
mov
cmpsb
inc
rcl
mov
and
mov
xchg
shlb
sti
scas
outsl
cmp
add
sbb
bound
fnstcw
cmp
inc
sub
push
inc
push
mov
jmp
fmul
jno
xchg
xchg
lahf
jae
mov
fstps
call
fcoms
mov
int
or
dec
ret
adc
xlat
or
repz
incb
lods
scas
cmp
push
je
cs
inc
scas
and
sahf
clc
xor
pop
lahf
cmp
mov
xchg
mov
fsubp
cltd
cwtl
bound
add
lret
add
xchg
jl
stc
and
scas
mov
rorb
mov
pop
xlat
orb
sub
int
addr16
stos
ret
cmpsb
flds
xchg
mov
inc
inc
pop
adc
pop
xor
es
mov
mov
adc
sub
fwait
pop
mov
pusha
dec
scas
inc
mov
lcall
xchg
sbb
test
push
pop
ljmp
push
fwait
xor
xor
into
das
imul
jae
and
pushf
jecxz
sahf
xor
xor
das
cmp
dec
ret
xor
movsl
push
jno
jbe
dec
push
add
gs
call
imul
lahf
loope
out
addr16
sub
in
push
push
popf
lds
push
aad
dec
or
outsl
inc
mov
mov
jl
hlt
in
jbe
cli
int
jb
imul
scas
int
in
xchg
rcr
mov
add
test
and
cmp
cmp
sub
mov
jb
scas
hlt
subl
push
push
movsl
inc
inc
call
or
lahf
cmpsb
xorb
cmpsb
ja
ret
frstor
in
xchg
push
outsb
sub
iret
pop
pop
data16
jbe
arpl
hlt
adc
leave
adc
add
outsl
out
andl
outsl
call
xor
bound
stos
dec
sbb
jmp
and
push
sbb
fisttpl
inc
cltd
ja
inc
xor
push
mov
add
and
into
and
add
push
inc
and
in
mov
cmp
daa
push
mov
pop
fmull
xor
stc
mov
ret
aam
test
push
jmp
lret
arpl
dec
insl
cld
xchg
cmp
and
dec
data16
out
imul
rorl
cmp
lahf
ret
cmp
fldcw
mov
push
lds
jmp
pop
shlb
sub
xor
xchg
mov
and
dec
scas
xor
fsub
dec
adc
icebp
test
push
in
loopne
rolb
jl
ficoml
jb
push
lods
pop
cli
repnz
test
xchg
add
dec
push
imul
ficompl
jne
cwtl
inc
call
mov
test
mov
jp
lods
xchg
adc
inc
ja
mov
mov
sbb
lods
rol
cmc
sbb
enter
sub
inc
xchg
sbb
jb
mov
into
fbstp
subl
sbb
jle
sub
aad
xor
adcl
cmp
mov
ret
and
sub
fwait
dec
xchg
mov
scas
jne
test
inc
jp
push
addr16
inc
int3
cltd
shlb
mov
mov
jl
int3
stos
xor
or
lock
imul
out
sbb
adc
loop
mov
add
test
and
cmc
pop
xchg
sarb
mov
xor
mov
pop
mov
outsl
or
jne
sbb
push
cmovno
icebp
pop
lods
sub
or
and
pushf
sbb
cs
sti
xchg
cltd
fs
test
into
add
imul
and
sbb
sahf
sbb
jmp
imul
mov
in
fldt
xchg
jg
push
enter
mov
daa
out
xchg
mov
jecxz
mov
cmc
mov
and
or
cmp
incb
leave
pop
push
sbb
dec
je
loopnew
cs
mov
mov
push
or
mov
dec
xchg
loopne
jns
loope
push
and
imul
xchg
addl
sub
cmp
add
cli
push
jp
in
les
clc
scas
mov
loope
mov
out
fisubs
or
loop
movsb
js
dec
lret
ja
lahf
mov
cwtl
mov
lock
out
mov
and
out
mov
pop
std
mov
repz
lds
inc
mov
outsl
dec
lret
adc
push
out
repz
sub
das
add
lea
popf
lret
or
popf
xchg
insl
int
ja
into
sub
scas
mov
pop
mov
xchg
adc
push
das
cmc
ret
inc
mov
out
cmp
mov
popa
jge
mov
dec
aaa
fwait
or
push
scas
adc
and
mov
and
sub
test
jle
jnp
dec
mov
fwait
stc
pop
push
cwtl
mov
neg
loope
aad
dec
into
call
sub
into
out
cmp
arpl
mov
and
hlt
std
xabort
test
jle
push
cmovl
es
lock
icebp
xor
cmp
and
inc
xchg
dec
or
int3
aam
push
push
mov
xor
inc
inc
jo
xchg
movsl
xor
dec
int
sub
xchg
xchg
mov
sahf
or
ror
push
imul
cmp
dec
push
roll
jge
fbld
inc
xchg
sub
shrl
push
xchg
xchg
fnstenv
mov
outsb
lahf
add
icebp
mov
push
push
cmp
mov
push
fs
adc
push
rorl
mov
out
aaa
daa
push
jecxz
add
and
sub
mov
aas
jge
outsb
adc
or
jmp
aas
sub
or
jno
mov
push
rcrb
out
outsl
sub
cmp
and
xor
sbb
jge
jecxz
ror
sub
lock
push
inc
add
lcall
and
add
outsb
ja
or
sbb
js
dec
mov
repnz
mov
sub
arpl
daa
add
dec
aaa
sbb
mov
in
stc
dec
mov
outsb
add
lods
orb
ja
subl
adc
cmp
in
lea
movsb
jp
fistpll
xchg
mov
mov
inc
dec
adc
xchg
jo
or
pop
cwtl
daa
in
or
jg
xchg
or
sbb
call
pop
mov
movsl
data16
jp
icebp
popl
sub
into
das
lret
sbbb
scas
ja
ja
in
out
sbb
out
daa
out
adc
arpl
jmp
mov
scas
xor
sbb
dec
push
insl
mov
adc
sub
adc
outsb
xchg
mov
mov
push
jge
lcall
iret
dec
sub
div
pushf
jno
jnp
or
imul
fs
icebp
cmpsl
rolb
add
gs
inc
push
in
mov
xchg
in
jno
xchg
mov
mov
push
xorb
sbb
out
cmp
mulb
aaa
jg
sbb
ja
leave
mov
mov
add
adcb
or
xchg
lea
bound
cmp
push
in
pop
movsl
dec
addb
cmpsb
or
sub
fstp
fs
lahf
je
mov
pop
cltd
ret
pop
arpl
enter
and
imul
imul
cmp
jb
daa
repz
mov
pop
jae
sub
mov
cmpsb
push
and
int
xchg
cmpb
divb
sub
int3
cltd
xor
jae
int
in
jp
ds
sbb
rcr
les
rcrl
stc
scas
pop
mov
cmpsl
cld
clc
sbb
dec
jnp
hlt
lea
dec
xor
mov
mov
bound
jmp
push
sub
pop
sarl
cmp
fnstenv
outsl
sub
mov
arpl
testl
lods
lret
cmp
daa
hlt
dec
dec
into
ret
je
popa
stos
or
or
sub
scas
xchg
jb
cwtl
test
jb
jb
cmp
sbb
cmpsl
out
sbb
push
pop
sbb
push
add
in
mov
rorl
xor
mov
cs
sti
sarb
push
mov
mov
mov
ret
outsl
aam
lret
sub
xchg
sbb
mov
jne
ljmp
sub
mov
repz
lret
lods
jl
xchg
jb
and
jb
adc
sub
in
inc
push
dec
mov
lret
mov
cmpsb
pop
out
icebp
clc
and
pop
or
je
out
arpl
add
jae
loopne
sub
pop
lcall
in
sti
cli
lock
xor
inc
jae
sub
mov
lock
adc
cmp
dec
cltd
aas
cld
mov
dec
sahf
and
mov
and
in
outsl
cmp
jo
stc
mov
and
xchg
pop
add
dec
or
cmp
dec
cmp
add
fimuls
in
out
xchg
mov
lock
or
shr
imul
jbe
jno
sub
ret
inc
leave
add
fistpl
and
or
shrl
sub
lahf
sub
out
daa
mov
sbb
push
mov
aas
dec
movsb
int3
gs
jnp
push
pop
sbb
lcall
and
rcrb
xor
mov
fcoms
add
pusha
stc
insl
iret
pop
arpl
sbb
pop
cmp
leave
xor
jbe
cmp
cld
push
loope
push
push
cltd
lcall
test
push
orl
mov
dec
orb
dec
cld
fyl2x
fwait
cld
movl
popl
adc
mov
mov
cmp
arpl
push
out
stos
les
xchg
push
stos
loopne
jne
cmp
inc
mov
inc
sbb
sti
mov
xchg
push
scas
shrb
jle
mov
mov
ja
mov
xor
xchg
pop
enter
or
dec
aas
mov
insl
movsl
icebp
or
xchg
in
inc
push
jae
out
fdivp
sbb
fs
fcomi
gs
insl
push
adc
add
push
test
push
popf
mov
cmp
fidivrl
rolb
sbb
nop
sub
add
xchg
cmp
in
xor
inc
sub
call
mov
add
cwtl
mov
movsl
cmpsb
pop
mov
jmp
push
and
icebp
and
mov
pop
orl
int3
mov
add
xor
rol
add
ljmp
data16
es
popa
and
ret
data16
or
mov
fwait
pop
subl
sbb
es
cltd
xchg
into
jmp
cwtl
or
jnp
sbb
pop
add
sub
loope
mov
aam
arpl
fistpll
outsb
mov
and
pop
jmp
push
pop
jbe
orb
and
xchg
sahf
stos
mov
xor
dec
jnp
xor
cmp
mov
mov
rclb
scas
jae
add
pushf
notl
jecxz
push
int3
sbb
dec
mov
popa
add
iret
pushf
push
cli
out
cmp
cltd
je
pop
add
pop
fs
in
std
xor
mov
pop
xor
or
jno
sbb
push
int
loop
and
xchg
push
call
and
push
loopne
jb
or
fdiv
test
pop
call
sbb
in
lret
lods
mov
xchg
in
iret
int3
sub
inc
pushf
xor
std
mov
loop
stc
inc
fst
shlb
or
inc
xchg
fisttpll
repz
aaa
jecxz
pop
cmp
in
inc
subl
scas
jp
mov
jmp
mov
out
jo
cld
and
in
mov
arpl
lcall
movsb
out
repz
dec
in
popa
idivb
sarb
adc
pop
sahf
fsubrp
add
mov
outsb
lock
sub
inc
mov
mov
outsb
or
repz
push
sahf
cmc
mov
test
cwtl
in
or
call
push
clc
sbb
mov
pushf
jg
sub
mov
cmp
fldcw
ret
daa
push
mov
sub
scas
jae
inc
sub
pop
fidivrs
mov
cmpsl
sbb
xlat
mov
aaa
fstpl
stc
int
es
inc
imul
mov
sti
xor
cmp
push
xchg
or
imul
sbb
pop
inc
aaa
js
lock
inc
out
mov
sub
or
and
mov
jb
mov
mov
inc
push
call
icebp
sub
xor
xor
push
orl
jns
out
mov
jne
mov
imul
sbb
rcll
pop
sbb
or
loop
inc
out
mov
iret
rorb
mov
and
pop
loope
mov
data16
mov
jns
mov
out
lea
jg
or
and
jo
dec
inc
enter
imull
ja
leave
loop
insb
xchg
push
xor
xor
ret
xor
ret
lea
xchg
aad
add
fnstsw
jl
jo
xorb
cmpsb
mov
jnp
xor
adc
pop
push
loope
jns
and
out
stc
xor
xor
push
cmp
xchg
incl
sarl
insl
adc
iret
jb
adc
mov
insb
sbb
pop
or
push
roll
jo
inc
cld
ljmp
cmpsb
cmpb
popf
aad
xor
mov
mov
mov
xor
mov
xor
loop
sub
dec
fadds
in
f2xm1
lock
test
and
out
addr16
xor
mov
addr16
pop
test
jo
mov
fstl
xor
sbb
jb
mov
rclb
test
loopne
push
adc
mov
xchg
jno
in
lcall
jg
sub
xchg
icebp
std
mov
sub
sarb
add
jle
insb
ds
add
or
iret
mov
mov
dec
pushf
xor
sbb
jge
pop
scas
cmp
mov
je
pop
notb
repnz
jne
sbb
insb
aaa
adc
adc
cmpsl
inc
test
mov
xchg
pop
inc
cmp
lahf
test
jp
adc
cmp
xchg
add
jp
pusha
sub
cmp
gs
mov
js
lds
add
pop
jno
mov
adc
sbb
dec
lahf
fsubrl
mov
mov
test
pop
jecxz
dec
popa
jecxz
test
insb
fsts
dec
call
icebp
xchg
or
xor
mov
sbb
popf
jb
pop
insl
xor
add
loopne
sub
pop
push
xchg
dec
jmp
jae
in
faddl
ds
jle
and
xor
and
pushf
rol
loope
push
pop
inc
ja
sub
mov
xchg
dec
sub
mov
lcall
or
add
sbbl
and
shrl
jl
xchg
inc
sbb
dec
xor
imul
xor
push
and
and
test
adc
les
cmp
dec
insl
cmc
dec
jns
cmp
ljmp
ljmp
int
mov
push
and
in
sbb
movl
add
fsubs
insb
dec
cmpsb
add
xor
sbb
fldcw
add
int3
outsb
and
adc
dec
dec
rcr
loop
xor
pop
xor
push
call
mov
xor
repnz
add
frstor
push
movsl
adc
dec
fldcw
arpl
xchg
shlb
test
lds
sti
dec
mov
cmp
lret
push
rcrl
xor
lahf
insb
adc
icebp
daa
pop
leave
cmpsb
mov
hlt
repz
xchg
and
jg
mov
add
push
fiaddl
sti
sub
jns
outsb
in
and
add
add
add
sbb
jp
aam
scas
pop
out
cmp
xchg
repnz
jbe
adc
int3
hlt
fsubrl
xor
jp
inc
jge
dec
inc
cmp
in
ss
jl
fucomi
outsl
lcall
mov
lods
mov
jge
rcrl
pop
dec
add
sarb
mov
repz
in
sahf
adc
loopne
jnp
sub
lods
dec
inc
pop
jne
testb
sub
mov
adc
push
or
mov
maxps
loopne
or
dec
inc
pop
cmp
xorl
int
push
jbe
cltd
ja
aas
and
xor
jle
cmpsl
ja
adc
mov
ret
into
arpl
in
fwait
dec
or
push
mov
rcl
cmp
in
fs
sub
int3
and
sub
out
inc
add
fidivrs
js
sub
jno
add
out
mov
loopne
sbb
jne
aad
ficomps
subl
pop
pop
cmp
mov
insl
icebp
cmp
ret
sub
mov
lods
js
dec
mov
mov
aas
sub
pop
call
jmp
mov
jnp
xchg
scas
xor
aas
sub
sbb
rolb
xor
xor
cli
pop
push
fimuls
jb
enter
pop
jge
int3
dec
pop
push
dec
jb
adc
out
test
cmp
xchg
mov
or
dec
mov
xor
pop
or
xchg
sbb
into
outsb
movsl
pop
jb
ret
dec
lret
xchg
iret
fld
xchg
jns
sbb
ret
pop
xchg
enter
inc
pop
into
add
cld
push
data16
ss
sub
insb
xchg
add
cmp
mov
cmc
in
stos
adc
and
push
add
in
repz
jg
and
imul
mov
mov
mov
xor
push
mov
pop
add
orb
stc
lea
jle
arpl
pop
adc
stc
sbb
add
insb
xor
pop
fists
shlw
orb
loope
int
pop
sbb
data16
xor
mov
add
push
and
lods
hlt
fisubs
pop
enter
rol
fcoms
outsl
inc
loopne
xchg
dec
sti
int
or
jl,pt
addb
adc
bnd
fistl
xchg
mov
cwtl
add
inc
jnp
push
xor
aam
ret
jge
out
shlb
or
dec
idivb
loope
or
xor
sbb
pop
lcall
cld
mov
mov
pop
popa
stc
adc
ret
push
pop
add
dec
pusha
addr16
int3
sbb
in
out
jmp
dec
mov
pop
mov
daa
and
inc
nop
cmc
lea
push
rcll
jg
or
xor
pop
sbb
gs
cmpsl
psubsw
mov
jo
lods
add
jg
lods
iret
enter
popa
and
test
mov
mov
imul
jl
ljmp
call
inc
cmp
ret
add
out
icebp
or
daa
mov
mov
rorl
push
pusha
jmp
cli
add
mov
add
pushf
push
add
pop
jns
xchg
mov
fwait
push
incb
psubd
or
sahf
in
xor
bound
adcb
adc
push
cld
xchg
mov
leave
cli
pop
cmp
aam
sub
aas
stos
cmp
sub
scas
mov
and
data16
cmp
je
xchg
ljmp
js
in
push
nop
bound
cmp
xor
xor
jecxz
int
incl
jle
lea
jp
push
jmp
ds
sub
movsb
add
divl
ret
xchg
push
jo
pop
mov
adc
pop
loop
inc
dec
shlb
pushf
cwtl
pop
arpl
mov
in
add
lahf
int3
adc
mov
ja
dec
imul
popf
or
test
hlt
aam
fdiv
xchg
dec
xchg
inc
fdivrs
out
push
mov
push
ret
mov
xor
stos
xor
dec
cmp
push
cmp
pop
addr16
stos
pop
push
sbb
repz
je
dec
rol
dec
xor
out
xor
int
jae
std
test
test
dec
cld
cmp
add
shlb
ss
movsb
add
mov
iret
loope
lret
aam
pop
sub
add
lcall
or
cwtl
adc
sub
cs
jno
std
pop
arpl
pop
in
cmp
shl
dec
test
cltd
sti
sub
mov
stos
fbld
cmpsl
scas
sub
lret
jnp
pop
lcall
dec
pop
lahf
stos
lock
push
cmp
fisttpl
inc
call
sub
lods
iret
clc
adc
das
and
jecxz
dec
pop
loopne
gs
shl
mov
mov
adc
xchg
sbb
push
mov
push
data16
ficompl
xorl
ljmp
xchg
jbe
or
stc
cmp
and
int
mov
fld
fcmovnu
into
xchg
fwait
sub
inc
jle
inc
cwtl
es
movsl
pop
adc
mov
sub
call
jns
sbb
ret
insl
pop
lea
xchg
dec
les
stos
sbb
xlat
or
je
mov
stc
push
jo
lods
mov
add
in
pushf
push
ret
sti
loope
dec
int
test
dec
jge
jp
fdivs
mov
out
mov
lods
mov
addl
scas
and
xor
and
sahf
mov
mov
aad
fistpll
sahf
rcll
cld
fnsave
ljmp
loopne
into
mov
sbb
lea
mov
shlb
lahf
dec
or
mov
scas
dec
dec
xor
push
mov
mov
ljmp
cmp
cmpsl
fsts
mov
popf
xor
rcll
xchg
lahf
movsb
mov
dec
and
cmp
call
mov
push
lcall
jecxz
mov
scas
add
out
dec
sub
cmc
gs
scas
mov
int3
ss
jno
fcomps
repz
andl
shlb
jle
dec
ret
cmpsb
cmp
push
arpl
push
sub
pop
shll
mov
xchg
add
movsb
xchg
adc
push
scas
jne
xchg
sbb
pop
xchg
mov
fldz
cwtl
pop
inc
xlat
insb
rcrb
push
mov
in
sti
pop
mov
xchg
pop
nop
ja
lds
mov
cmp
adc
popa
aaa
fcomip
std
xor
mov
mov
lods
cmpsl
cmc
mov
cmc
ss
pop
gs
push
shll
in
out
sub
stos
pop
stos
mov
mov
rcl
std
cmpsl
mov
insb
std
into
jmp
cld
inc
push
push
cmpsl
lahf
iret
lods
push
push
sub
xchg
and
adc
xor
adc
lea
push
adc
inc
rorl
fidivs
loope
inc
or
cltd
jl
cmp
mov
fistpl
adc
push
cmpsl
sti
inc
jnp
xchg
lahf
xchg
fwait
pop
and
out
and
xor
dec
add
adc
xor
xchg
stos
shl
movsb
mov
fdivr
add
pop
adc
js
fisubl
pop
ja
nop
test
sub
in
daa
movsb
mov
jns
push
test
jmp
cmp
mov
push
cmp
movsl
leave
dec
fstpl
pop
outsb
enter
add
fcompl
into
push
pop
push
in
es
cli
leave
mov
subb
or
test
mov
inc
pop
mov
jne
inc
rolb
movsb
push
jg
xlat
lock
push
cmp
rclb
mov
cmp
ret
sub
cmp
xchg
sub
xlat
add
jne
jbe
jge
test
shll
in
mov
add
popf
test
sbb
push
cmpsl
push
inc
ret
or
roll
cmp
jle
xchg
call
cmc
cmp
sub
sub
pop
and
jo
dec
or
mov
test
ret
mov
or
add
or
sbb
mov
xchg
add
aam
inc
sub
jb
mov
xor
stos
rcrl
push
cltd
negb
adc
mov
mov
cmp
and
or
dec
mov
pop
idivl
cld
mov
lcall
add
fisubrs
inc
mov
stos
paddq
push
lds
mov
into
aad
dec
insb
daa
mov
cli
ffreep
insb
incb
inc
adc
movsb
popa
or
xchg
mov
loopne
insb
dec
sub
push
dec
add
movsb
leave
repz
mov
mov
jbe
call
add
sub
lcall
pop
dec
adc
popf
jmp
mov
jnp
xchg
jp
push
push
outsb
popf
loopne
dec
daa
pop
lret
sub
ret
push
in
xlat
sub
pushf
sbb
in
lcall
insb
dec
inc
emms
cs
jge
popa
in
jne
dec
dec
jp
dec
sub
in
add
and
xor
jp
pop
sub
pop
push
sahf
pushf
pop
inc
fwait
mov
bound
pop
ja
lret
dec
mov
push
push
ret
data16
sub
lret
das
movsb
pop
or
mov
cltd
xlat
xor
in
fimull
inc
or
xor
ret
test
dec
out
sti
mov
dec
sbb
sbb
dec
orb
icebp
stos
sub
lea
call
jno
mov
mov
add
jns
adc
push
xchg
sub
mov
hlt
rol
dec
pop
xchg
int3
or
incb
out
pop
andl
iret
stos
and
sbbb
cmp
xchg
jne
pop
fnstcw
jg
loope
pop
pushf
insb
or
push
data16
push
xchg
mov
sbb
hlt
pop
loop
push
inc
cwtl
jmp
ds
cmpsl
fadds
xchg
xchg
lods
mov
add
push
nop
sub
mov
loop,pn
outsb
clc
sbb
or
ja
cmp
pop
mov
loopne
xchg
bound
iret
cmp
sahf
xor
pop
mov
rcr
xchg
sbb
notl
addr16
xor
mov
and
fisubs
push
aas
ds
pop
nop
jge
inc
shlb
std
sbb
mov
adc
xor
jb
fisttpll
and
jp
mov
aam
out
in
fcomps
mov
mov
aad
enter
cmpsb
adc
pusha
add
sbb
sub
mov
lea
xchg
test
lea
scas
jae
jp
adc
push
jge
lods
nop
insb
iret
insl
icebp
inc
ja
cmpxchg
enter
pop
in
sbb
addr16
and
or
pop
les
sub
std
add
gs
push
mov
pop
and
sahf
inc
sti
jns
mov
pop
pop
nop
js
sub
or
mov
out
cld
stos
inc
xchg
dec
lret
or
jg
mov
pop
pop
push
aaa
mov
stos
push
aas
jae
cmp
xchg
icebp
jle
pop
xor
idivl
xor
lock
or
aas
fwait
in
fbld
ss
mov
pop
sti
jno
inc
out
imul
rclb
cli
jno
ficomps
sub
push
adc
aam
jo
jae
sbb
sub
int3
xor
dec
xchg
pushl
fsubl
jnp
adc
adc
inc
mov
into
test
daa
mov
xchg
lret
fdivs
hlt
addr16
adc
and
lahf
pusha
inc
dec
rolb
sbb
sbb
mov
sbb
jo
shlb
ss
inc
sbb
or
dec
fsub
or
icebp
push
ret
xor
loop
mov
lcall
fcompl
xchg
adc
shrl
bound
test
cmp
fwait
add
lods
stos
subb
jmp
aaa
xor
cmp
popf
mov
xor
inc
movsb
cwtl
dec
loopne
cmp
int3
aam
push
inc
adc
stc
lods
push
mov
pushl
cld
adc
sub
jns
mov
inc
cli
cmc
in
pop
cmp
stc
xchg
dec
cli
sbb
test
je
mov
fwait
rcll
push
and
clc
jae
mov
out
fwait
lret
data16
cmp
or
dec
out
sti
icebp
mov
clc
xlat
mov
loope
inc
mov
inc
xchg
jecxz
loopne
popf
dec
movsl
ret
dec
sarb
mov
mov
push
int
or
bound
adc
into
jo
out
test
repnz
or
xchg
lock
out
add
aam
or
movsl
push
scas
jmp
popa
push
jge
inc
stc
cmp
into
inc
and
sub
jnp
icebp
dec
hlt
aas
inc
dec
test
push
mov
in
sbb
xor
clc
mov
and
jp
notb
jbe
sbb
pushf
mov
jo,pt
mov
mov
daa
je
adc
mov
stos
push
push
rolb
popa
outsl
nop
fstl
jle
std
aaa
mov
xor
test
mov
xchg
jnp
xor
xchg
push
sub
fldt
pop
aad
dec
pop
jge
fnstsw
xor
imul
sar
stc
mov
or
xchg
aam
sahf
or
ret
cmp
outsl
movsl
pushf
pop
pop
imul
dec
pop
push
sub
inc
out
fldl
jae
mov
leave
mov
pop
and
and
lods
and
les
rorb
je
add
mov
mov
subl
jp
sahf
mov
mov
mov
mov
movsb
mov
dec
loop
sbb
fidivs
jns
bnd
mov
mov
or
xchg
jb
jnp
aad
pop
ret
or
fs
add
jmp
je
add
fdivl
mov
mov
pop
icebp
mov
outsb
daa
in
and
jnp
pop
xchg
push
rorb
jle
fstps
add
xchg
mov
dec
sbb
dec
mov
call
jno
adcb
out
sbb
mov
test
cmpsb
std
jns
pop
shl
mov
mulb
xchg
pop
add
mov
cmpsl
in
mov
xor
fsubrl
jmp
fiadds
cmp
jp
jno
mov
mov
jg
subb
adc
sbb
nop
jo
mov
and
ss
jp
mov
popf
fld1
pushf
lret
popf
ret
dec
adc
lds
in
ret
pop
lods
cmp
add
insb
imul
xor
pop
int
out
stos
inc
sub
push
push
mov
incl
jbe
pushf
push
xchg
sub
ss
test
inc
cmp
add
sub
cmc
fadd
adc
adc
cmpsl
adc
inc
mov
fcompl
sbb
mov
xchg
cmp
outsb
scas
pusha
or
enter
lret
inc
dec
std
dec
mov
loope
add
psubusb
fistps
pop
jns
in
in
icebp
int
loope
push
push
dec
in
pop
lahf
adc
dec
xor
sahf
cmpsl
and
mov
push
bswap
aam
mov
rcr
rclb
jae
cmp
mov
mov
pop
mov
in
ds
ljmp
stc
mov
dec
jno
outsb
int3
stos
std
mov
and
push
pop
or
jp
adc
sub
aas
stc
ficoms
xor
inc
lock
xor
cltd
sub
mov
pop
orb
and
mov
nop
pop
aas
je
pop
jp
jne
fadd
mov
mov
ss
popa
repz
xor
test
dec
mov
in
fcomps
jl
jle
sub
sbb
jne
repnz
pop
and
cmpsl
add
lods
or
mov
cmp
push
call
inc
es
or
xchg
add
sbb
mov
icebp
dec
adc
mov
mov
xchg
adc
shrl
sbbb
add
inc
sahf
rclb
cli
rorl
jg
xchg
sub
and
adc
idivb
adc
mov
xchg
push
imul
mov
out
cmp
jnp
mov
cmc
inc
lods
jg
in
loopne
cmpsl
arpl
push
pop
les
sbb
cwtl
cmp
mov
arpl
mov
adc
js
add
test
out
dec
pop
xor
add
mov
in
repnz
jmp
push
out
bound
dec
cmpsb
or
in
and
xor
jns
and
xor
jecxz
imul
push
and
outsl
mov
mov
cli
les
mov
dec
jle
xor
in
fidivs
packsswb
sbb
pop
pop
cwtl
lds
push
fidivs
inc
inc
stc
mov
outsl
sub
pop
lahf
adc
mov
xchg
adc
push
jae
repz
ret
jns
stos
aaa
decb
pop
or
dec
out
cmp
xchg
jle
add
jmp
bound
fs
daa
lret
addr16
or
cmp
dec
adc
inc
push
jmp
loope
rcl
cs
imul
mov
jb
sub
rcrl
push
adc
mov
jae
testb
lock
dec
mov
inc
gs
ficompl
outsl
shrb
sbbl
inc
xor
inc
outsl
sahf
divl
inc
xor
inc
add
or
cmp
xchg
mov
mov
sbb
insl
dec
repnz
stc
fs
out
sbb
mov
lea
sti
outsb
call
jp
mov
and
mov
and
movsb
jbe
pusha
jl
pop
sub
adc
mov
ljmp
lods
sub
lea
es
mov
mov
insb
pop
fadd
ljmp
sbb
imul
adc
imul
jmp
mov
pop
mov
or
lds
inc
enter
orb
ljmp
int3
pop
ljmp
mov
in
add
arpl
jno
pushl
jecxz
cld
xor
sub
into
daa
iret
paddb
xchg
dec
outsl
das
push
dec
or
mov
add
adc
xchg
aam
cmp
jmp
sbb
mov
insb
adc
fldcw
xchg
loope
cs
mov
push
xchg
or
ret
mov
cmp
and
pop
cmp
xchg
enter
aam
mov
jle
movsb
pop
push
pop
cwtl
ret
mov
iret
pop
xchg
sti
adc
or
pop
ljmp
cmp
xor
lcall
push
lret
sub
xchg
mov
stos
cmp
mov
xor
sbb
cmp
jg
adc
nop
rorl
cmp
lods
jae
jecxz
out
inc
sub
into
fisttpl
push
add
repnz
and
xchg
popf
cmpsl
mov
pop
cltd
fmul
xor
mov
fnstsw
lcall
je
jb
add
lcall
xor
int
xchg
imulb
sbb
add
pusha
or
adc
dec
mov
je
sbb
xchg
sub
rolb
xchg
mov
jne
pop
mov
sahf
jae
hlt
push
mov
dec
push
js
fs
mov
clc
lods
jb
testw
push
adc
pushf
jl
add
pop
cmpsb
add
dec
xchg
icebp
ret
repnz
je
shrl
cmpsl
sub
rorl
jg
jae
aaa
stos
andl
rol
mov
adc
mov
add
cs
mov
mov
insb
lahf
shrb
inc
lock
inc
repz
add
dec
ljmp
loope
xlat
aas
clc
cmp
int3
outsl
jle
fdivp
cld
outsl
xchg
xchg
inc
shlb
cmp
lcall
pop
push
jp
cmpsb
mov
fisttps
adc
call
aas
mov
or
in
or
cmp
sarb
sarl
push
testl
and
aad
push
push
shll
sbb
scas
pop
lods
and
cs
sbb
cmpsb
not
pop
dec
sti
xor
sub
xlat
rol
ljmp
divb
into
std
repnz
not
mov
ds
cmp
mov
or
popf
addr16
fdivrl
mov
add
shl
std
mov
sbb
pusha
stos
pop
stos
das
roll
mov
mov
mov
mov
and
mov
mov
mov
cli
xchg
loop
sti
js
fstpl
repnz
sbb
int3
sub
push
adc
cld
mov
movsl
xor
mov
dec
pop
jb
or
cmp
jne
xor
insl
jb
xor
cli
or
push
xchg
jg
data16
loopne
or
jmp
xchg
out
sbb
test
add
and
inc
add
repz
imul
jg
xchg
xchg
xorb
enter
pop
and
dec
fidivrl
das
cmpsb
mov
inc
xchg
sbb
call
pop
cmp
std
sbb
pop
or
inc
stos
and
lods
cmp
adc
inc
jl
add
jb
mov
jo
push
mov
or
nop
pop
jp
mov
mov
fisubrs
out
ret
push
scas
popf
ljmp
push
cmpsl
add
icebp
cmp
and
sub
mov
out
mov
jge
xlat
add
mov
dec
fisttps
shll
inc
inc
push
mov
adc
and
mov
outsl
aaa
jge
sahf
push
fs
mov
ss
mov
jge
push
cmp
test
dec
clc
cli
add
test
lock
sbb
adcl
mov
jmp
jae
in
test
mov
push
xor
scas
lods
cltd
outsb
gs
mov
or
pop
dec
dec
sbbb
or
insl
int
xchg
outsb
mov
andb
push
jp
lock
xchg
pop
sub
sub
les
and
or
pop
cmpsb
ja
fistpll
cmp
sbb
loope
addr16
pop
jne
in
fcoms
popa
adc
imul
dec
cld
sub
adc
mov
mov
push
mov
dec
jmp
ret
stos
sbb
add
inc
gs
sub
inc
mov
sbb
mov
and
or
test
sbb
inc
test
ljmp
cmpsl
es
rclb
push
aam
mov
sbb
jmp
pop
mov
cld
or
out
roll
enter
xor
sbb
out
enter
loopne
imul
shrl
ret
jle
mov
jno
ja
jl
ret
nop
hlt
out
add
aas
dec
popa
nop
cli
inc
int3
scas
or
lock
pop
cmp
push
repz
pusha
mov
xchg
loop
pop
iret
outsb
jne
xchg
gs
cmp
clc
rorb
call
or
xchg
inc
push
cmova
dec
icebp
subb
imul
sbb
fs
ljmp
iret
push
enter
push
jmp
jns
hlt
push
pop
add
hlt
int
rcrb
add
push
loope
repnz
dec
xchg
dec
test
jb
daa
push
shll
fidivrs
sbb
ret
out
lods
jno
adc
mov
data16
scas
ljmp
in
push
jb
pop
and
imul
mov
lret
adc
pop
scas
clc
adc
cmp
mov
sbb
mov
sbb
loopne
fadds
pop
sbbl
hlt
shrl
jmp
clc
mov
xchg
pop
inc
jns
xchg
in
shl
adc
pop
mov
xor
dec
jp
lcall
int
sub
cmp
cmp
sbb
orl
xchg
xchg
inc
mov
push
lcall
shr
mov
dec
add
mov
lods
loop
mov
mov
aam
fisubrs
dec
inc
jne
pop
xor
mov
dec
mov
or
inc
mov
sti
inc
insb
sub
jns
test
sub
lret
fisubs
and
popf
cmp
push
or
loope
mov
ljmp
icebp
and
sbb
mov
stos
int
push
pop
mov
sub
push
ljmp
cwtl
gs
mov
add
sti
and
lcall
in
test
iret
les
cmp
cwtl
mulb
adcl
jnp
jge
sub
jb
cmp
push
push
add
imul
jg
sbbb
jge
xchg
call
sbb
cmp
scas
mov
mov
out
js
pushf
or
mov
push
insl
loopne
rcrl
lock
push
icebp
mov
stos
sahf
jno
push
dec
int3
sub
scas
ss
lods
xchg
push
in
sbb
dec
or
loopne
xor
sti
dec
mov
xchg
adc
xchg
or
outsl
jmp
mov
pop
and
roll
aam
mov
adc
outsb
mov
gs
scas
xchg
lock
test
adc
js
adcb
aam
mov
sub
or
inc
sub
jnp
inc
push
adc
movsl
mov
mov
flds
les
or
xor
jns
adc
imul
mov
jg
sbb
dec
hlt
dec
dec
and
loopne
pop
jp
dec
sarb
mov
and
mov
xchg
mov
fcom
pop
cmp
lock
lods
es
stc
addl
sbb
out
jne
push
cmp
adc
push
inc
out
adc
mov
push
mov
outsl
out
notl
add
gs
roll
mov
cmp
pop
pop
out
bound
repz
pop
or
lock
mov
cmp
movsl
xchg
jnp
mov
shll
jmp
dec
xchg
adc
xor
push
or
ficomps
lods
imul
jg
mov
fcomp
sbbl
cmp
shll
and
or
add
je
ja
lock
cli
push
pop
lcall
mov
ja
std
adcl
test
inc
sub
push
jbe
leave
popf
ret
mov
lret
mov
shlb
mov
mov
and
dec
cwtl
xchg
cmpsb
scas
mov
fistpl
and
xor
imul
pushf
subl
movb
into
or
sti
xor
xchg
xchg
cmpsl
scas
xchg
inc
aam
add
mov
jle
sub
pushf
mov
lods
pop
or
jns
aas
lahf
inc
repnz
xchg
cld
dec
daa
pop
cltd
pushf
mov
mov
es
pusha
jae
outsl
enter
mov
mov
test
inc
push
mov
push
nop
test
sub
sub
mov
in
inc
stc
push
pop
push
sbb
lahf
lods
ljmp
sub
or
push
std
popa
adc
push
mov
repnz
push
sahf
mov
jle
mov
adc
jecxz
add
cmp
xchg
out
push
ds
int
or
push
mov
call
adc
outsl
push
fs
xchg
push
pop
roll
jo
sbb
dec
or
and
sub
mov
sbb
dec
jbe
jmp
cmp
je
lcall
mov
push
test
in
stos
lret
add
push
dec
les
pop
fmuls
pop
jmp
ret
push
mov
gs
xor
xchg
pop
dec
imul
jecxz
mulb
clc
dec
and
jl
repz
in
adc
cld
ja
xchg
mov
das
repz
fdivr
mov
in
inc
add
xor
in
lahf
jae
sub
jmp
push
cld
addr16
push
cmp
in
cli
mov
jae
pop
std
dec
xchg
iret
xchg
mov
and
inc
mov
push
jbe
cmp
stos
bound
dec
arpl
notb
adc
popa
add
xchg
les
nop
xchg
mov
push
mov
pop
mov
out
dec
testb
inc
out
enter
lret
inc
dec
dec
or
mov
ds
subl
data16
dec
addr16
jecxz
mov
mov
cs
repz
pop
or
jns
xchg
xchg
subl
pop
jmp
cmp
push
cmp
outsl
or
divb
mov
add
std
aad
sbb
iret
shl
cmpsl
clc
adc
pop
pop
jo
add
mov
add
pop
push
adc
adc
xor
loopne
std
xchg
iret
push
sbb
inc
mov
out
in
bound
mov
cvtpi2ps
inc
jns
repnz
popf
sarl
in
push
jns
in
cld
xor
xor
out
push
dec
loop
aam
mov
inc
xchg
inc
repnz
add
jno
sub
or
pop
cltd
imul
sub
lret
mov
mov
gs
sti
pop
gs
jo
inc
and
jno
mov
pop
mov
sbb
sbb
push
jp
jg
mov
sti
dec
lea
test
insl
xchg
push
pop
hlt
mov
std
scas
idiv
lea
in
jno
push
imul
or
inc
mov
leave
mov
mov
cmpsl
sub
lea
loopne
insb
pop
fldcw
push
shrl
es
cmp
orb
push
mov
cmp
fst
lahf
add
ficomps
add
sbb
scas
xchg
jns
sbb
mov
pop
nop
add
sub
push
jae
push
mov
jae
push
pop
ja
mov
fucomp
fisttpll
leave
push
mulb
inc
popf
pushf
sub
lods
mov
or
mov
adc
popa
dec
or
dec
cmpsb
fistps
fsubr
rcrb
daa
jmp
cmp
xor
dec
cmpsb
je
inc
pop
test
or
iret
loop
test
inc
iret
jbe
cmpsb
xor
xchg
lods
out
cli
pop
mov
out
add
call
dec
sbb
repnz
adc
sti
inc
adc
cli
or
es
pop
jbe
testl
fisubrl
add
xor
stos
sbb
adc
add
inc
dec
push
cmp
sti
push
xchg
popw
inc
stc
sub
loopne
xchg
rcr
xchg
add
mov
jne
push
xorb
pop
mov
jo
or
insb
and
push
ret
xchg
out
into
aas
and
pusha
and
testb
push
sti
mov
out
add
mov
jl
xlat
std
testb
add
xchg
xlat
mov
cwtl
outsb
ficoms
adc
insb
adc
scas
mov
pcmpgtw
jge
cmp
push
stos
sarb
jecxz
movsl
ljmp
fcomp
loopne
fsubr
pop
in
aas
push
pop
xor
popl
pop
pop
inc
lock
cmpb
sbb
repz
out
and
pop
push
andl
pop
or
dec
inc
sbb
dec
dec
mov
add
sbb
addr16
jp
data16
mov
mov
cmp
pop
push
jne
jg
js
push
hlt
mov
jge
test
stos
cmp
cmc
add
gs
into
daa
push
insb
mov
les
mov
idivl
xor
xchg
mov
lock
mov
filds
out
les
cmc
jecxz
popf
xor
mov
adc
repz
mov
lock
scas
test
pushf
mov
enter
or
adc
sub
andl
aam
xchg
inc
dec
lods
dec
test
pop
mov
xor
xor
push
fcoms
dec
cld
jns
js
add
dec
lea
lock
mov
mov
pop
xor
sarl
lods
cmpsl
cmc
xlat
sbb
loop
sbb
dec
cli
insl
inc
mov
stc
adc
cmp
aas
dec
sub
cmp
cmp
xor
xchg
xchg
or
imul
cmp
aas
cmp
adc
out
sub
dec
sub
into
mov
mov
cld
add
lods
rcll
test
sbb
arpl
les
ficompl
mov
stc
aaa
inc
das
loope
rolb
rol
mov
dec
pop
adcb
adc
sbb
fldt
iret
outsb
fcmovne
in
push
mov
data16
stos
add
sbb
enter
push
sbb
adc
mov
xor
test
repnz
stos
outsb
fwait
mov
fldenv
jno
cmp
stc
cs
loopne
popa
inc
nop
call
inc
mov
mov
lret
outsb
add
js
jnp
test
mov
xor
lods
cmp
in
enter
in
jmp
dec
cltd
cmp
jg
rcll
dec
pop
jmp
mov
xor
xchg
testl
popf
rcll
stc
dec
and
xor
pop
sbb
push
lods
das
xor
mov
fidivrs
inc
loopne
insl
inc
or
push
rol
icebp
or
sbb
adc
call
out
sbb
sahf
pop
dec
push
dec
xor
leave
pop
int3
pop
scas
xchg
subb
push
adc
pop
and
and
jl
imul
mov
mov
sbb
mov
imul
aas
fisubl
fadd
testl
adc
scas
insl
aad
pop
push
xchg
fistpl
jne
movsl
xor
pop
mov
sahf
xorl
sbb
or
imul
ja
xor
aaa
xchg
ds
ret
lea
sub
int
sub
mov
jle
mov
fcoml
dec
push
loop
fisttps
pop
lcall
and
movsl
mov
out
cmp
or
div
sbb
das
dec
mov
fsubs
push
lcall
mov
push
dec
mov
sahf
or
lcall
lods
testb
cli
insl
add
ja
cmpl
mov
pop
fsubrs
ret
int3
add
sti
fcmovbe
out
loope
sub
push
inc
rorb
dec
mov
pop
sarl
test
xor
adc
in
cmp
jl
sub
xchg
leavew
jo
icebp
jnp
mov
or
inc
sub
mov
jle
mov
sbb
scas
mov
pop
fucompp
aam
pushf
cs
xor
pop
jle
call
test
pop
dec
sbb
or
scas
les
jno
sbb
cmp
mov
je
jecxz
add
inc
xor
imul
aas
dec
pop
aam
pop
fs
insb
push
popa
cmp
xchg
xchg
xor
mov
cmpsl
cld
push
cwtl
mov
insb
cld
mov
call
sahf
add
into
repz
pusha
andl
addr16
mov
scas
xchg
cmp
fsubl
scas
sbb
mov
push
push
cli
addr16
mov
lods
popf
mov
cmp
icebp
lret
and
dec
dec
sete
out
jne
pop
mov
scas
gs
sbb
and
fldenv
push
imul
pop
adc
in
out
out
adc
inc
aas
jl
je
mov
std
mov
int3
and
adc
xor
mov
negl
movsl
jns
add
push
mov
mov
or
loopne
push
mov
cmp
repnz
mov
or
mov
cld
or
stos
pop
sub
xlat
movsb
sbb
fimuls
sbb
cmp
mov
cmp
cld
mov
mov
push
adcb
cs
stmxcsr
dec
out
popa
jbe
jl
push
pop
cmp
cmpb
out
mov
pop
dec
andb
sbb
mov
sub
xor
loop
inc
inc
mov
jb
out
jl
cmp
adc
add
xchg
nop
xchg
mov
xchg
or
test
cmp
mov
gs
test
imul
mov
roll
mov
fimuls
xchg
aam
lret
add
and
inc
jg
mov
in
push
pusha
fwait
inc
ret
dec
adc
and
push
leave
aam
sbb
or
es
fadd
testb
enter
outsb
aad
push
adc
cmovae
mov
fistpl
mov
mov
nop
mov
or
std
iret
ss
loope
dec
pop
pop
mov
inc
enter
js
mov
in
sbb
imul
sbb
ror
mov
jmp
push
fdivrl
dec
clc
xchg
std
loope
aas
inc
mov
mov
adc
fwait
mov
gs
pusha
pop
jmp
mov
mov
in
jecxz
and
movups
jbe
add
mov
xor
into
sub
out
push
push
sbb
cmp
pop
sbb
jns
push
lret
and
jge
jb
sbb
insl
jns
and
fbstp
test
pop
fcomps
int
push
jge
sbb
rclb
je
pop
cwtl
loop
cmpsl
shr
pop
push
xor
ljmp
adc
xor
add
mov
vandps
cld
aas
cmp
call
lods
add
jp
in
mov
pop
mov
jno
mov
clc
jbe
inc
in
ja
pushf
data16
inc
xor
push
sbb
cli
movsb
xor
mov
negl
mov
sar
aaa
inc
loopne
lods
mov
sahf
jbe
and
sahf
xor
inc
xchg
mov
mov
sub
add
addr16
mov
fs
jne
insb
movsb
pop
fwait
and
cld
push
jno
mov
jo
cmp
or
insl
mov
enter
insl
add
out
mov
cld
sbb
jnp
and
test
sti
jmp
pusha
loope
sarl
jnp
popf
loope
lret
cmp
sbb
int3
xor
test
and
push
fidivrl
xor
jecxz
out
inc
mov
sbb
enter
or
mov
xchg
lock
jnp
add
mov
in
push
aam
sbb
adc
mov
into
mov
fisubrs
push
fsubr
pop
ret
sub
jge
shrb
rorb
bound
xor
sarb
test
xor
adc
lock
xchg
data16
int
xlat
sub
cmc
aas
push
bound
test
sub
mov
pusha
mov
jge
mov
outsb
ds
imul
inc
cmpl
ret
hlt
xchg
xor
aaa
pop
mov
or
mov
shld
push
pushf
in
jne
jae
sub
cmpsl
jns
inc
lds
xchg
adc
sbb
adc
ja
mov
inc
push
sbb
cld
sahf
add
xchg
into
ret
push
mov
sahf
or
lea
out
pop
ret
hlt
loopne
xchg
dec
lods
pop
js
adc
test
xlat
nop
and
push
out
popf
xchg
movsl
cmpsb
push
fdivrs
adc
stc
in
arpl
inc
jmp
cmpsl
cld
cs
aas
sub
pop
sbb
nop
mov
inc
adc
shll
sub
and
dec
call
ljmp
mov
cld
testl
jmp
aas
xchg
arpl
stos
xlat
das
and
test
test
xchg
andb
xchg
adc
aad
and
scas
lret
mov
sbb
repz
push
call
push
xchg
cmp
add
adc
and
jle
in
inc
xor
and
cmpsb
loop
jp
add
sbb
mov
sub
test
int
nop
aad
mov
icebp
add
mov
popf
call
movsb
lahf
bound
imul
je
inc
movsl
jmp
ret
hlt
les
xchg
cltd
into
inc
fsts
mov
rcll
movsl
pusha
aad
adc
rcll
and
push
fmuls
dec
in
rorl
pop
movsb
pushf
sub
pop
pop
stc
or
aas
movsb
ss
daa
and
pop
les
mov
push
repnz
push
addl
push
mov
push
stos
ja
jae
cmp
test
adc
sbb
mov
jo
lock
je
sub
neg
pusha
pop
sub
int
cmp
jbe
inc
sbb
js
add
dec
add
or
xchg
subb
adc
inc
add
cmp
and
scas
lds
in
sbb
xchg
or
sub
push
cmp
stc
dec
xchg
push
sbb
ret
enter
ss
aam
outsb
loop
leave
xlat
or
inc
dec
add
roll
adcl
push
loopne
pushw
dec
adc
es
adc
jno
push
pushf
dec
cmp
jno
ret
movsb
stos
lea
fwait
cmp
or
repnz
insb
dec
pop
fcomp
scas
jl
in
andb
ret
inc
xchg
in
push
movb
sbb
jmp
push
cmp
jnp
adc
mov
ja
rcrb
out
rcrb
mov
daa
movsl
mov
or
iret
push
popf
dec
in
int3
dec
adc
mov
or
pop
and
mov
sbb
mov
xchg
jne
xchg
lds
dec
stos
mov
pushf
mov
mov
imul
xchg
fisttpl
scas
mov
push
inc
mov
push
xchg
sub
ds
sub
loopne
pushf
cmp
js
out
xor
cwtl
lds
rorl
outsb
xchg
jae
mov
dec
movsl
mov
ret
dec
xor
aas
idivl
movb
fcmovnbe
xor
push
fadds
fdivl
sar
adc
sub
loop
mov
mov
sbb
pop
adc
cmpl
test
loope
test
pop
enter
je
dec
mov
inc
hlt
loop
pop
sub
nop
lods
aad
xor
in
dec
or
rclb
xor
jnp
mov
cmp
and
jb
or
mov
jg
pushf
jge
adc
or
and
push
ljmp
lods
imul
and
jnp
mov
or
lcall
or
cmpsl
lods
data16
mov
and
lock
xchg
cwtl
push
sub
or
cmp
test
les
hlt
inc
sbb
repz
adc
cwtl
lret
or
seta
mov
push
sbb
scas
mov
cmp
js
jge
lds
loop
shl
mov
add
sub
jg
lret
ds
inc
or
mov
hlt
imul
adc
and
adc
xchg
mov
cmp
test
push
mov
mov
ljmp
pop
push
in
fisubs
inc
lods
xor
mov
pop
or
andl
arpl
outsb
out
les
les
in
push
das
pop
mov
and
cmc
inc
mov
out
push
cmpsb
mov
ret
add
lods
fwait
hlt
and
sbb
and
mov
lods
cli
cs
mov
or
ja
int
cmpsl
mov
addr16
add
add
mov
mov
loopne
or
inc
clc
ss
mov
out
addr16
inc
xchg
push
jb
addl
in
mov
call
loope
adc
inc
cli
xor
enter
loop
add
push
mov
jecxz
sahf
xor
repnz
or
push
int
push
roll
repz
mov
loope
clc
xor
mov
sbb
je
mov
push
push
ds
sub
daa
fcom
mov
rcr
dec
movsb
add
leave
sub
incb
pop
pusha
xchg
lods
leave
and
mov
aas
cmp
push
cwtl
mov
insb
xchg
push
sbb
jo
sbb
sbb
psubusw
popa
inc
or
pop
cmp
test
add
lods
leave
outsb
lods
ret
mov
shl
mov
dec
cmp
out
mov
push
push
cmp
push
movsb
ljmp
xchg
jne
jecxz
add
pushf
jno
jle
testl
cld
xchg
sub
xchg
mov
mov
mov
mov
adc
cmp
movsl
sbbb
fcompl
mov
outsl
mov
in
sub
push
rcrb
int
jb
lock
adc
cltd
in
ficoml
add
imul
push
adc
mov
ret
mov
cwtl
cli
cltd
inc
and
divb
jg
das
pop
or
in
push
push
adc
mov
dec
ja
dec
shll
sbb
lods
and
es
or
das
cmp
xor
pop
pop
cwtl
ds
and
jno
jb
or
std
push
and
test
outsl
xchg
xor
iret
mov
mov
jne
mov
lds
inc
subl
mov
insl
in
cmp
rcrl
stos
mov
mov
dec
or
ror
lret
add
mov
std
jnp
xchg
cmp
xchg
xor
sbb
and
inc
cld
aad
sbb
pop
add
sbb
inc
outsl
dec
jecxz
fwait
pop
mov
add
cmpsl
sbb
adc
xchg
pop
cmc
adc
outsl
aad
ljmp
lret
inc
mov
clc
test
testl
push
fisubrl
push
cli
stos
addl
xchg
push
into
fsubr
outsl
inc
cmp
addr16
pop
push
icebp
hlt
imul
sbb
pop
dec
outsb
dec
lret
cmc
adc
sbb
test
divb
dec
mov
sbb
sub
lcall
pop
adcb
push
push
out
pop
scas
iret
cmp
jnp
jecxz
lahf
sbb
jne
pop
pop
cli
dec
fadds
xchg
shll
xor
fs
dec
xchg
lods
or
push
out
mov
push
add
out
cli
ja
adc
mov
es
jecxz
sub
xchg
repz
pop
jns
xor
pop
ds
push
clc
imul
enter
pop
bound
sahf
mov
mov
fcmovnu
or
loopne
dec
rorb
test
cmp
lret
sti
pop
sub
and
dec
ds
xor
cmp
jmp
pop
ret
out
sbb
push
rorb
nop
xchg
mov
mov
in
and
pop
mov
lcall
inc
test
pop
dec
outsb
bound
pushf
int
lods
ja
loop
out
fmull
leave
or
lods
test
adc
rclb
andb
in
xchg
mov
nop
aad
js
adc
mov
lods
mov
cld
and
sbb
sbb
dec
pop
ror
leave
stc
out
mov
add
pop
inc
lods
lds
inc
pop
into
adc
clc
jecxz
ja
mov
in
dec
ret
ss
gs
ds
popf
and
push
or
rcll
nop
push
fucomip
lods
andl
push
sti
idivb
inc
outsl
xor
jb
and
sti
pop
clc
bound
or
int
cmp
in
push
mov
sbbb
faddl
sbb
sub
mov
dec
mov
jp
adc
adc
add
in
jno
jno
icebp
push
adc
jb
xor
sti
fiaddl
out
jecxz
mov
mov
xor
dec
add
js
jl
fstl
mov
mov
dec
test
mov
aad
cwtl
fs
add
outsl
lods
iret
iret
out
push
xorb
loopne
inc
test
pop
push
repz
mov
push
jg
mov
lahf
jle
cwtl
scas
add
out
jb
sub
dec
in
cmp
xor
push
mov
jo
ja
outsb
call
jg
cmp
cmp
jecxz
clc
aad
or
xor
sbb
add
int
push
sarl
mov
test
adc
pop
push
in
test
push
inc
pop
push
fimull
xchg
xor
jp
aas
or
pop
test
adc
repnz
out
pop
mov
outsl
xor
adc
in
pop
mov
lods
in
sti
jne
jg
in
push
pop
jmp
test
push
mov
push
dec
cmp
pushf
dec
push
adc
mov
jae
push
pop
fldenv
push
fdivrs
inc
or
jmp
mov
je
mov
cmpl
push
sub
repnz
test
inc
mov
cmpl
shll
sub
inc
fs
pop
fiadds
pop
rcr
fstl
inc
xchg
jmp
inc
aas
lods
mov
lea
pop
repz
stos
mov
or
mov
ret
cmp
outsl
subb
pop
loop
out
test
out
cld
dec
shlb
mov
sahf
ljmp
push
gs
rcl
popa
nop
pop
rcl
and
stos
lahf
ss
adc
pop
inc
test
xor
loope
arpl
fcompp
test
lahf
out
icebp
les
das
in
xchg
or
cmpsb
ficoml
scas
jg
outsb
sub
into
mov
int3
sahf
or
jnp
jb
lahf
mov
shl
and
xchg
xchg
and
xchg
inc
pop
ret
mov
clc
fidivl
cmp
ds
dec
sub
dec
fadds
sub
outsb
sub
pop
and
mov
mov
inc
xchg
int
mov
popf
jmp
cmp
jl
push
cmpsb
inc
adc
jb
arpl
js
cmp
clc
shrb
cmpsl
sbb
cmp
outsb
addr16
les
add
icebp
mov
mov
push
fdivrs
mov
enter
mov
push
mov
lock
lods
pop
into
js
pop
in
mov
fnstcw
mov
inc
jle
cltd
xor
sbb
push
inc
and
jecxz
test
fmulp
lret
lret
cmp
cmp
es
push
inc
mov
mov
rcrb
dec
test
adc
ss
fs
xchg
mov
mov
sbb
fstp
pop
das
cmp
add
xchg
sub
sbb
mov
aam
xchg
xor
mov
adc
in
in
or
cmpsb
mov
dec
adc
and
std
and
xor
push
push
scas
divl
sub
gs
mov
popa
call
or
aad
jno
mov
jnp
cmp
push
sub
mov
and
sub
andl
sub
rcrb
popf
aad
gs
sbb
mov
iret
mov
and
cs
sub
jg
mov
mov
and
xchg
in
xchg
clc
adc
ret
sbb
push
call
mov
push
insl
xchg
mov
pusha
enter
loop
mov
mov
add
js
daa
mov
test
cmp
mov
sbb
and
or
and
mov
or
leave
sbb
and
aad
out
test
test
jne
mov
jnp
fbld
pop
ljmp
lahf
in
repnz
pop
test
push
push
stos
xchg
addr16
sub
jno
add
dec
sbb
repz
in
jne
or
mov
stc
mov
dec
mov
loop
int3
in
sbb
dec
ret
xor
sarb
inc
jmp
dec
xchg
test
xchg
jle
add
mov
stc
cmpsb
aad
push
call
aas
icebp
adc
imul
jb
and
push
mov
movsl
jle
pop
add
add
int3
mov
loopne
mov
mov
and
fists
das
cmp
xlat
jo
add
inc
outsb
jle
stos
jae
inc
sbb
pop
inc
cli
xor
shl
sub
int3
subb
pop
andl
cld
mov
push
fimull
inc
outsb
arpl
jecxz
jg
leave
mov
gs
inc
sarl
and
in
bound
enter
sahf
xchg
pop
pop
jmp
iret
cmpl
je
pushf
test
iret
or
cmp
add
jo
lds
sbb
jno
push
cmp
into
and
and
hlt
loopne
outsb
xor
in
imul
jge
mov
shl
arpl
dec
fmull
push
add
nop
pop
and
mov
rcll
and
test
inc
mov
enter
mov
push
xchg
jecxz
arpl
stos
stos
lcall
push
aaa
insb
mov
ret
jmp
cld
mov
lds
mov
aam
mov
mov
lods
mov
test
jl
mov
enter
mov
lret
xor
pop
ljmp
loopne
loop
iret
mov
cwtl
inc
inc
sahf
jmp
in
dec
addr16
add
cli
js
dec
jnp
mov
jb
test
xchg
in
stos
pop
push
fcomp
adc
xchg
push
test
xor
sub
mov
push
mov
dec
negb
movntps
sub
dec
fsubr
or
fwait
and
adc
push
adcl
stos
insl
push
push
nop
jmp
xlat
mov
lret
or
pop
mov
mov
jo
cmp
out
push
add
add
sahf
add
xchg
add
push
sub
sub
lret
add
das
shl
inc
orl
out
stos
add
scas
mov
ret
cmpsb
popf
cmp
adc
dec
das
mov
fadds
andb
pusha
dec
loope
xor
or
cmp
inc
sub
lock
cld
test
push
add
sub
inc
leavew
std
dec
xor
xor
dec
les
in
inc
enter
adc
sbbb
cmp
jmp
cmp
lret
repnz
cmp
mov
aas
and
test
jae
push
push
stos
movsb
sbb
fmulp
test
jle
xchg
inc
jo
sub
dec
ret
mov
jp
stos
fstpl
cli
lods
rcr
aaa
dec
enter
insb
mov
inc
fistpl
sub
add
or
sbb
jb
cmp
mov
mov
pop
jle
scas
das
into
mov
jl
mov
es
mov
or
cld
mov
in
xor
ret
pop
fidivrs
push
mov
sbb
push
mov
add
pop
cmp
leave
shl
sub
mov
enter
xor
xlat
inc
cmpsl
pop
dec
fwait
and
jnp
pop
cs
dec
in
sbb
and
dec
int
jmp
cmp
push
xchg
xor
xor
mov
push
stc
sahf
and
imul
ret
jle
or
mov
outsb
insb
outsl
icebp
inc
jae
mov
push
arpl
mov
sar
in
shl
sub
jbe
sbb
leave
mov
xor
dec
mov
push
dec
dec
adc
add
lahf
adc
jns
shrb
jo
xor
mov
cmp
lods
lods
push
inc
add
sub
enter
push
stc
loop
sbb
xorl
xchg
stos
sub
mov
shrb
sarl
and
int
push
sub
and
cs
and
xchg
das
sbbl
jnp
pop
jp
lds
std
in
sarl
mov
mov
add
ficoml
aad
sbb
shll
in
lahf
aas
xor
clc
dec
and
xor
inc
arpl
mov
pushf
sarb
sbb
aam
test
sub
mov
fidivl
adc
inc
cmc
cmp
and
imul
pop
adc
sub
in
jns
bound
xchg
out
mov
mov
push
inc
int
pop
iret
adc
mov
fs
mov
and
jns
mov
shlb
sub
mov
test
and
enter
idiv
mov
and
in
inc
insl
mov
shrl
or
lods
xchg
mov
or
ret
roll
lods
inc
insb
push
inc
inc
add
jge
mov
sbb
inc
mov
lock
scas
sbb
movsl
mov
stc
sub
roll
or
lret
shll
inc
jle
jo
sbb
inc
xor
mov
add
dec
and
push
jl
jne
mov
push
jne
lcall
aad
adc
imul
pop
add
inc
xchg
shrl
jns
adc
in
pop
xor
jnp
cmp
jbe
sbb
cmp
xor
shl
mov
jnp
pop
inc
or
mov
pop
fstpl
inc
inc
pop
sbbb
out
push
sub
xchg
rorb
mov
push
pop
dec
mov
mov
fimuls
or
cmp
lods
jne
addr16
add
push
xchg
sub
mov
mov
jne
add
push
ja
int3
roll
pop
pop
adc
mov
inc
sub
sub
jo
in
out
rolb
pop
sub
pop
add
push
aam
cmpsl
in
xlat
mov
jo
test
sbb
scas
adc
mov
push
out
aaa
dec
sahf
scas
add
test
test
lret
test
or
std
lock
and
jg
inc
shl
mov
xchg
sbb
cwtl
fisttps
jnp
pusha
or
aad
pop
inc
push
push
adc
fnstenv
es
shrl
outsl
xor
pop
lret
sti
push
jmp
pop
jge
xor
sbb
insb
in
push
bound
mov
xchg
in
mov
jp
jnp
adc
arpl
lock
and
mov
test
dec
inc
mov
or
dec
inc
cmp
push
mov
cld
mov
push
lahf
enter
out
pop
push
add
cmp
out
and
inc
leave
scas
or
popa
int3
push
loope
cs
sub
sbb
or
inc
push
push
orb
push
fisttps
jae
cwtl
incb
pop
mov
add
cmpsl
movsl
or
jae,pt
popf
cmp
xchg
mov
cmp
mov
in
cld
movsb
mov
jno
mov
lret
jl
pop
leave
pusha
push
js
cwtl
sbb
testb
and
jge
jns
pusha
out
loop
mov
xor
fistl
sbb
adc
lret
aas
mov
xchg
xor
rclb
cmpsb
add
aaa
adc
push
cltd
pop
push
mov
fwait
adc
jl
add
lret
scas
imul
div
jmp
mov
mov
mov
cld
test
movups
inc
leave
inc
jle
cmp
jne
cmp
insl
addr16
mov
xchg
xchg
and
inc
mov
push
mov
lea
add
sbb
in
xchg
or
and
notl
cli
and
scas
insb
std
mov
repz
and
loope
push
and
aam
fisubl
repz
testl
mov
repnz
mov
ret
in
or
repz
xorl
adc
cli
inc
cwtl
dec
and
inc
mov
add
xchg
fwait
std
or
fimuls
cmp
test
test
pcmpgtd
cwtl
mov
cmp
xor
or
cmp
xchg
cltd
push
mov
pushf
jnp
pop
inc
hlt
insl
lret
loope
dec
enter
jo
fbstp
bound
rcrl
xchg
xor
addb
nop
addr16
out
push
ja
adc
std
rcrb
sub
push
stc
push
push
cmp
fbstp
rclb
sub
movsb
xor
out
ret
out
cmp
adc
xor
jp
ja
inc
fldl
xor
cli
pop
or
adc
or
sub
lret
pop
test
aam
and
push
jp
dec
push
iret
mov
js
xor
adc
jb
mov
lods
ja
mov
out
jmp
idivl
jns
mov
lcall
idivl
and
mov
nop
jl
pmulhuw
sub
inc
fildl
adc
ftst
aaa
clc
jbe
notl
std
cwtl
mov
cmp
rorl
repnz
aas
xor
adcl
jecxz
ss
add
dec
lock
jg
mov
insl
mov
cltd
push
mov
cmp
cmp
sub
mov
mov
push
popa
imul
pusha
sahf
in
dec
jno
fs
dec
sti
cli
xchg
cltd
test
test
jmp
imul
jge
leave
shrl
ljmp
mov
mov
push
imul
arpl
aaa
daa
mov
hlt
nop
repnz
mov
je
out
add
hlt
int3
dec
adc
pop
and
and
push
inc
jo
mov
xchg
dec
sbb
fildll
xor
data16
leave
mov
dec
pop
enter
inc
pop
pop
mov
adc
mov
dec
rcrb
rolb
inc
fdivrl
jmp
dec
out
or
xor
mov
imul
jb
movsb
ret
xchg
shl
pop
cwtl
dec
and
rclb
mov
pop
or
lahf
mov
bound
ss
rcll
xor
int3
jns
out
leave
loope
mov
and
jb
sarb
test
lods
mov
mov
mov
ljmp
mov
push
mov
mov
das
data16
push
je
fcomps
insb
shll
out
subl
jbe
adc
es
pop
and
push
jbe
insb
pusha
cmpsl
mov
inc
mov
bound
cmp
test
pop
mov
outsl
jmp
dec
mov
out
or
cltd
out
xor
jb
xor
subl
es
dec
outsb
orb
call
pop
mov
adc
jecxz
push
jmp
aad
push
imul
xchg
bound
inc
sbb
pop
clc
scas
sbbb
adc
out
test
xor
push
pop
lret
jo
mov
jle
mov
out
pop
push
inc
add
mov
lock
jecxz
jle
rorl
sub
aam
lods
repnz
jg
adc
dec
sub
push
lret
inc
xor
inc
add
pop
outsb
pop
push
xchg
jne
sarb
movsl
sub
fildl
arpl
adc
cmp
add
dec
inc
repz
aam
jmp
inc
jge
test
xchg
ss
add
divl
mov
fstp
cli
lock
mov
add
decb
fbstp
xchg
xchg
mov
mov
out
bound
bound
dec
xchg
adc
sub
and
iret
cmp
popf
add
cld
shl
push
hlt
pusha
pusha
mov
daa
lea
lret
pop
popa
lcall
xlat
mov
pop
popa
pop
rep
in
mov
jmp
mov
iret
dec
xchg
lret
push
jmp
adc
jo
adc
pop
sbb
cs
pop
rcrl
fmull
inc
and
mov
mov
jbe
inc
sub
cmc
mov
cmp
mov
sti
int3
lret
scas
in
push
or
mov
sub
jae
shrl
int3
fcmove
sub
xchg
decb
sahf
fists
sub
push
pop
mov
jmp
dec
mov
inc
in
mov
andl
loopne
je
mov
dec
adc
push
inc
mov
sub
push
xchg
cmp
inc
cli
cmp
push
fsubs
and
mov
jnp
jno
sbb
pusha
mov
gs
inc
insb
cmc
jp
cs
xchg
lahf
jnp
add
adcl
dec
imul
cld
repz
mov
stc
shl
cmp
hlt
iret
in
mov
les
fsubs
hlt
push
mov
inc
or
xchg
cld
pop
inc
in
movsb
jge
mov
ret
push
and
inc
jmp
frstor
sbb
and
out
and
sarb
cmp
int3
int
xchg
int
sbb
test
xor
inc
dec
bound
sbb
pmuludq
mov
add
aaa
cmp
daa
xchg
cltd
and
fldl
icebp
mov
xor
adc
pop
add
xchg
cmp
lock
outsb
jp
cmp
inc
push
pop
scas
ret
lret
cmp
out
hlt
xchg
sub
lods
jnp
pop
jo
sub
cmp
scas
dec
jae
mov
push
or
loop
jnp
jl
xor
jne
rorb
mov
outsb
notl
mov
imul
sub
sahf
push
int
xor
pop
mov
mov
mov
bound
xchg
adc
add
mov
lahf
sub
mov
inc
sbb
sbb
xor
mov
outsb
xchg
inc
add
mov
fisubl
rcrb
cmp
subl
sbbb
and
sub
pushf
mov
imul
jp
inc
popa
in
or
out
test
mov
clc
mov
in
mov
dec
jp
addl
xor
sub
js
mov
jl
fldcw
enter
adc
shr
in
add
shlb
push
imul
call
mov
int
dec
sbb
pop
cmpsb
jmp
push
xchg
std
outsb
push
sahf
rorb
dec
lcall
push
sbb
lea
mov
popf
call
in
sbbl
or
lret
push
das
mov
mov
sbb
dec
vmovss
jbe
dec
insb
mov
xchg
lea
insb
push
loope
xchg
pop
movsb
push
divl
push
xchg
inc
movsl
cmp
adc
mov
aam
leave
movsl
cmpsl
pop
hlt
pop
dec
inc
sbb
test
add
mov
call
adc
add
cmp
stos
es
push
pop
xrelease
mov
lret
bound
jae
into
mov
jne
cmpsl
call
cmp
shlb
xchg
aaa
or
xor
cmp
mov
pop
xor
out
xchg
jne
mov
mov
lret
loop
xor
xchg
outsb
or
mov
xchg
roll
lea
mov
pop
cwtl
ljmp
cmpsl
stos
mov
jns
dec
leave
sub
fs
jns
stmxcsr
rcrb
mov
into
cmp
insb
out
ds
add
dec
inc
dec
and
in
jno
aam
popa
mov
xchg
inc
gs
inc
add
roll
push
mov
into
cwtl
push
rcl
mov
pop
cmp
test
in
xor
inc
sbbl
push
xor
xchg
es
add
stos
mov
popa
test
sbbb
xchg
ja
or
sbb
jo
pop
cwtl
loopne
xlat
adc
push
xchg
inc
push
sbb
push
mov
fldl
cmpsb
mov
in
test
repnz
movsl
lods
jmp
scas
insl
mov
add
adc
and
movsl
imul
sbb
sahf
sub
pop
mov
adc
pop
lret
std
inc
and
inc
pop
push
add
leave
xchg
mov
mov
inc
xchg
xchg
push
movb
mov
in
scas
push
shll
test
out
mov
es
or
cmp
dec
lcall
jns
and
cmpsb
sarb
inc
sub
inc
inc
cs
lods
scas
mov
dec
insb
push
enter
sbb
xor
adc
outsl
xchg
into
das
rolb
cli
pop
shlb
out
shll
iret
aas
inc
sbb
ljmp
lea
cmp
push
mov
mov
mov
sbb
dec
pop
xchg
xor
mov
inc
fldcw
je
push
dec
xchg
push
out
mov
push
into
testl
xor
jmp
mov
es
push
mov
sahf
mov
ret
data16
xor
cmp
add
push
mov
push
int3
ljmp
lods
sub
in
fscale
dec
xor
iret
outsb
ss
out
mov
xor
mov
adc
jl
sbb
lcall
xor
mov
sbb
mov
adc
negb
adc
movl
loopne
mov
ljmp
sti
mov
jnp
idivb
dec
jle
mov
xchg
cmc
mov
scas
fldln2
dec
cmp
mov
mov
push
pop
pop
add
loopne
dec
mov
les
add
inc
stos
sarl
inc
mov
mov
jmp
push
sbb
xchg
add
xchg
enter
outsb
cld
lods
aaa
push
jg
and
imul
loopne
fisubrs
push
push
cs
sbb
sub
jno
pop
xor
aam
cli
hlt
and
bound
les
int
lock
movsb
arpl
fldenv
shrl
cmp
lahf
push
out
mov
sbb
mov
out
jp
mov
add
xchg
lods
adc
cmp
push
adc
jge
call
sub
fbstp
pop
int3
mov
stos
cmpsl
in
fcomps
adc
das
mov
ds
and
fs
jo
icebp
gs
adc
iret
lock
test
out
dec
or
sbb
xchg
xor
adc
aam
xor
pop
jnp
movsb
xchg
jle
scas
cs
in
jg
std
mulb
xor
sarl
add
cmc
dec
jl
faddl
cli
movsl
test
roll
out
outsl
je
cmp
int3
arpl
mov
int3
mov
xor
loope
pop
sbb
xor
jmp
mov
roll
movsb
xchg
cmc
jmp
cmpsl
outsb
jl
sub
out
and
xor
mov
jg
xchg
mov
rorl
cli
pop
fistps
test
rol
jle
mov
pop
clc
mov
incb
push
push
fidivs
jbe
decb
std
shrl
nop
lds
hlt
cmpsl
fisubrl
push
mov
subb
loop
rorl
adc
out
aad
pop
jne
sarb
notb
jecxz
leave
sbb
inc
lret
dec
out
push
cmp
stos
ss
cmp
pusha
push
push
imul
fdiv
add
shrl
cmp
cli
leave
stos
lods
sbb
call
cltd
dec
adc
testb
mov
dec
loope
leave
jno
cmp
ss
and
andb
inc
sti
test
mov
jo
xor
jo
dec
jl
push
push
xor
jge
incl
mov
imul
ret
add
loopne
fsts
popa
add
pop
xchg
adc
test
popf
jne
inc
subl
mov
and
dec
sahf
adc
add
aaa
mov
out
mov
in
bound
pusha
es
xchg
sbb
ffreep
aaa
imul
insl
arpl
rorl
sub
icebp
sarb
add
popa
lods
int3
imul
daa
dec
arpl
adc
jp
mov
cmc
int
lret
mov
int
addl
shrb
push
in
aad
push
andl
push
sbbl
add
xor
mov
mov
jne
aaa
and
inc
fwait
int3
and
and
adcl
insl
clc
mov
leave
lahf
test
inc
xor
jp
ja
pop
mov
lret
pop
xchg
xchg
sti
and
jb
lcall
je
cmp
add
cmpsb
scas
cmp
mov
lods
mov
jg
scas
lods
scas
mov
cld
inc
rep
dec
mov
xchg
repz
mov
enter
lcall
stc
test
scas
ret
mov
fsts
jnp
ret
mov
and
sub
xchg
dec
mov
adc
dec
sub
xchg
push
mov
pop
movsl
xor
lret
fldl
rcl
push
adc
mov
sti
int3
jne
mov
lret
or
mov
mov
ror
xlat
mov
xlat
jns
xor
cmpsb
dec
cmc
mov
inc
fisubs
or
jmp
pop
sbb
lds
adc
out
xor
lret
pop
stos
mov
jno
fcom
lcall
push
jo
push
push
clc
out
shr
dec
pop
ljmp
push
pop
xchg
je
jbe
xor
ret
sbb
mov
pop
mov
pop
loop
stos
test
and
xchg
sahf
jle
sbb
xchg
cmp
inc
sub
cmp
into
mov
aas
popf
inc
aaa
mov
mul
in
dec
and
cmp
xor
mov
sub
or
rcrb
xor
int3
adc
ja
pop
lds
popa
jbe
push
jnp
scas
pop
rcl
mov
add
fdivrs
dec
movsl
add
clc
addb
pop
xor
lret
dec
rolb
pop
sbb
mov
inc
xchg
aad
cmp
ljmp
lea
ror
pop
test
mov
dec
sbb
sbb
jne
push
pop
lcall
xchg
lcall
and
leave
xor
enter
rcrb
pop
jbe
inc
add
loop
push
nop
cmc
mov
mov
scas
and
xchg
sbb
repnz
test
inc
addl
and
inc
pop
push
in
insl
int
jle
xchg
enter
inc
mov
movsl
xchg
aam
cmp
jbe
sbb
in
mov
insl
mov
push
xor
int
xchg
jmp
sbb
cmp
push
inc
and
mov
sbb
aad
mov
dec
dec
cmp
repnz
sub
add
and
cwtl
int
pop
cli
sub
cmpsb
xor
cmp
xchg
shlb
bound
adc
mov
pop
sbb
fidivrs
mov
push
int
adc
adc
addr16
push
out
xchg
shll
negb
ficompl
cmp
int
jg
and
fwait
lret
mov
in
push
add
sti
mov
in
push
xchg
dec
idivb
sbb
mov
cmp
sub
sbb
add
mov
int3
push
cld
rcrl
jne
mov
jnp
add
push
stos
xor
cmp
xlat
test
inc
outsl
add
or
sbb
mov
in
mov
and
sahf
mov
xor
jle
inc
outsl
cmc
pushf
inc
inc
lea
mov
add
ret
jae
dec
movsb
or
nop
push
pop
out
ljmp
mov
mov
push
or
in
into
sbb
jmp
mov
cmp
inc
pop
jne
xlat
movsl
in
and
mov
cmp
lret
clc
nop
sub
inc
stos
xchg
lret
sti
inc
sbb
or
or
aam
dec
rcrb
rorb
sbb
xchg
je
jle
loop
mov
es
insb
jns
or
and
out
lret
out
add
xchg
jmp
js
mov
adc
jbe
ja
daa
pop
add
adc
inc
stos
mov
add
sbb
or
stos
js
xchg
cmp
rcl
inc
push
movl
cmpsl
mov
dec
loope
lret
shll
and
jmp
jae
inc
inc
jno
aas
or
lret
lahf
push
lret
cmp
sub
xor
sub
xor
inc
fs
xchg
mov
sbb
dec
sbb
cmp
inc
pop
imul
ja
cmc
imul
fcoml
mov
sub
imulb
cli
sahf
mov
cmp
cmc
inc
mov
and
icebp
in
mov
inc
in
pop
and
lahf
add
cmp
xlat
pop
or
xor
ret
mov
mov
adcl
test
mov
dec
int
pop
pop
aaa
xor
and
rcrb
mov
adc
sub
jle
sbb
lahf
jp
push
push
cmc
push
mov
mov
add
sbb
push
adc
mov
mov
rorb
pop
jo
inc
lock
sti
out
movsb
loope
mov
mov
fists
cmc
add
std
rorb
leave
divb
je
pop
and
notl
mov
mov
jnp
jns
adc
sbb
pop
jne
pop
xor
pushl
outsb
jno
adc
jo
test
cmp
jmp
movsl
lods
xor
push
inc
icebp
cmp
mov
ss
flds
mov
inc
jg
and
ror
mov
inc
inc
sub
jmp
mov
fstl
push
lret
or
or
jno
push
ljmp
dec
fidivrl
fiadds
mull
movsl
out
popa
test
push
mov
cmc
xchg
and
inc
jne
mov
push
push
fidivl
pop
pop
test
mov
push
shrl
add
pop
aaa
clc
mov
pop
int
int3
pop
inc
dec
sarl
cld
movsb
mov
je
lcall
and
pop
gs
sub
sbb
inc
stc
and
push
shlb
cmp
negl
and
or
xchg
adc
ja
fidivrs
lods
fldenv
xlat
fbld
jle
xor
jle
jge
mov
mov
sub
popf
jae
mov
xor
xor
popf
loope
incl
push
ja
push
sub
add
mov
jae
shrl
sbb
test
mov
fisubrl
inc
dec
xchg
jp
xchg
pop
in
mov
push
ret
shlb
mov
shll
lret
fwait
hlt
ljmp
sbb
inc
push
sbb
scas
mov
pop
inc
sbb
xchg
mov
sub
call
imull
es
add
mov
ret
or
leave
inc
cmpsl
mov
out
add
cmp
icebp
inc
xor
call
xchg
pushf
mov
test
aad
mov
loop
sti
call
mov
xor
pop
xchg
cli
xor
std
push
cmp
ret
aam
mov
test
pop
inc
sbb
test
adc
jg
mov
jmp
je
xchg
add
add
out
dec
fdivrp
cmp
pop
cmc
pop
js
jnp
mov
fildll
and
fcomps
inc
lcall
xchg
xlat
sub
aas
cmp
inc
test
adc
mov
cmp
jb
jno
jecxz
out
clc
pop
mov
jo
push
pop
jo
iret
push
mov
add
decb
fistpl
mov
jbe
pop
std
lcall
jp
int
mov
add
inc
mov
dec
cltd
repnz
fadd
xor
adc
jp
adc
push
push
out
int3
push
in
adc
mov
rorl
lret
pop
out
std
sub
mov
js
stos
bound
add
movsl
jle
lods
and
lret
imul
ds
aam
add
popa
mov
popf
pop
fwait
mov
std
shl
jmp
outsl
repz
sub
leave
imulb
ja
fnsave
add
dec
je
sarb
repnz
xchg
mov
icebp
cltd
adc
mov
fidivs
add
bound
lods
in
mov
cmp
xchg
out
add
jne
or
adc
pop
mov
insb
dec
in
stos
sub
push
cli
cmp
iret
push
xchg
mov
out
or
pushf
push
mov
jae
xlat
sti
cmp
cmpsb
xchg
int
xor
xor
jecxz
daa
pop
and
pop
aaa
imul
andl
in
daa
adc
fimuls
xlat
test
shl
das
cmc
push
test
lcall
movsl
cmp
notb
jecxz
and
xchg
cmp
inc
scas
repnz
mov
lock
pop
lret
adc
loopne
xchg
mov
sub
dec
cmp
sbb
or
cmp
mov
inc
sbb
test
in
lock
jge
fsub
or
ds
mov
adc
or
sub
xorb
testl
into
cmpsl
in
and
cmc
push
mov
idivl
repz
fildll
mov
adc
xchg
jno
call
add
negb
cltd
pop
mov
icebp
push
mov
cmp
mov
testl
xchg
adc
and
fdivs
js
arpl
jmp
mov
stc
sbb
fmull
xorl
aaa
jbe
cmc
mov
adc
repnz
arpl
lods
mov
push
lods
push
mov
ficomps
jne
or
xchg
dec
scas
test
sbb
lods
pop
cs
jne
std
or
lret
dec
mov
sbb
mov
aas
pop
fdiv
shr
sbb
leave
mov
cltd
int
pop
jg
fiadds
pop
loope
mov
or
popf
jmp
jmp
insb
xchg
jnp
aas
retw
push
cmpl
jno
jle
sahf
xlat
cmp
outsl
bound
fwait
or
add
xchg
xor
stos
mov
sub
pop
dec
mov
pop
add
lret
xchg
add
mov
mov
cld
sarb
mov
lock
jp
call
popa
dec
loopne
xchg
sub
jb
scas
add
push
xchg
subb
push
mov
sub
or
sahf
imul
push
xchg
leave
jg
dec
pop
sbb
mov
pushf
add
jmp
cmp
xor
xor
outsb
sub
imul
xor
popa
pop
inc
cmovnp
xchg
inc
popf
incl
dec
and
sub
jbe
pop
and
jae
out
outsb
out
push
not
cmpsl
mov
mov
mov
dec
popf
add
fimuls
mov
jmp
xchg
push
mov
mov
cltd
ljmp
lods
insl
mov
mov
mov
adc
pushf
or
jmp
ffreep
ret
pop
rolb
or
call
lahf
sarl
iret
test
sahf
push
std
xor
and
adc
cmp
cmp
ret
adc
mov
mov
out
popf
call
decl
xchg
cwtl
pop
sub
push
sahf
subb
pop
mov
mov
and
xor
repnz
inc
push
aaa
xchg
push
add
gs
mov
gs
movsb
pusha
sbb
mov
inc
jle
pop
cmp
cmp
nop
out
inc
inc
push
cmp
jmp
mov
add
sub
sbb
push
daa
jg
jl
mov
scas
test
mov
dec
inc
imul
mov
inc
add
pop
jbe
pushf
cltd
scas
and
fistl
fwait
or
fmull
push
pop
lcall
cltd
pop
in
xchg
inc
or
leave
shll
push
mov
sahf
jae
push
jmp
mov
loopne
mov
cmp
lcall
add
or
stos
mov
ds
sub
lahf
xorl
pusha
push
add
pop
add
push
dec
mov
out
aam
push
dec
mov
cmp
sbb
jmp
xchg
pop
ss
push
pop
pop
lret
and
cmp
rcrl
mov
mov
gs
pop
call
pop
mov
xchg
pop
jae
or
mov
xlat
mov
movsl
mov
ljmp
or
jo
push
mov
imul
cltd
jno
adc
mov
and
iret
mov
clc
xchg
adc
and
add
in
xorl
inc
jbe
push
mov
push
jne
lret
insb
mov
add
mov
add
push
test
in
mov
inc
sub
lock
lods
ret
es
int
mov
popa
pop
insb
mov
ja
mov
out
sbb
xchg
movl
mov
sub
lcall
shlb
movsl
adc
leave
shll
xchg
adc
repz
ds
mov
or
daa
mov
lods
xor
xchg
js
imul
test
nop
icebp
mov
sbb
adc
ret
vandnpd
shl
ja
filds
mov
mov
jnp
scas
adc
mov
sbb
pushf
shrl
std
aaa
sbb
inc
rolb
cltd
das
sbb
xor
leave
cs
repz
cmpsl
xchg
out
nop
data16
and
repnz
inc
fcmove
enter
push
mov
lock
outsb
and
jmp
out
lret
mov
xor
test
aad
les
fcmove
jns
mov
addr16
stos
or
or
ficompl
notb
jle
jb
adcl
shl
or
fwait
xchg
data16
rorb
std
ret
xchg
dec
fucomi
sbb
xlat
mov
pop
subl
mov
inc
dec
lds
and
jp
add
mov
cmp
xchg
js
mov
adc
cmp
push
movsl
out
mov
sbb
cmpb
xor
rorl
cmp
push
mov
jl
pop
mov
push
ja
pop
xchg
cmp
cmp
push
neg
mov
or
sub
std
mov
fwait
sub
dec
cmc
shl
loope
xchg
icebp
sub
and
push
xor
xchg
dec
sbb
addl
cmp
fwait
fs
mov
mov
cli
shr
dec
iret
shlb
repnz
or
adc
lret
hlt
sub
mov
mov
jl
xchg
out
in
mov
add
mov
jno
inc
scas
mov
pop
cmc
fldenv
sub
sub
jge
out
sub
push
xchg
push
fwait
sub
fwait
dec
scas
test
mov
jle
fiadds
ljmp
lea
fiadds
in
pop
sub
test
std
cmp
cltd
and
int
pop
addb
sbb
or
mov
inc
push
add
in
mov
repnz
add
negl
jo
add
fists
cmp
idivl
jb
jo
pop
sahf
dec
sbb
inc
outsl
lock
fldl
sbb
cmp
and
mov
mov
xor
dec
data16
adc
lods
pop
mov
xchg
das
gs
ljmp
inc
push
jecxz
pop
push
out
pop
es
xlat
lret
jno
xchg
addr16
fistl
xor
enter
adc
pop
scas
iret
jne
dec
pop
push
push
aad
stc
sub
and
out
out
notl
xor
cli
mov
jl
call
push
repnz
fs
lds
push
mov
mov
fldl
jg
loopne
sti
and
mov
and
ret
test
cmp
xchg
leave
jge
jg
sub
sub
jb
shll
scas
arpl
or
pop
xchg
xor
pop
mov
loop
sub
dec
lods
xor
fwait
or
sub
pop
jne
inc
mov
and
push
cmp
test
dec
shlb
loopne
js
jg
and
movl
pop
push
call
dec
inc
mov
je
add
fldcw
jnp
ljmp
movsl
sub
inc
es
add
test
dec
int3
mov
inc
icebp
leave
scas
mov
cld
and
xor
sub
cs
add
dec
cwtl
mov
mov
pushf
push
push
cmp
cmp
sahf
lock
aam
testb
push
jl
jg
test
icebp
dec
sub
cmp
sbb
sbb
xor
sub
or
dec
scas
jmp
mov
jns
test
cmp
xor
pop
lea
popf
fxch
std
testl
pop
imul
test
dec
fwait
popf
sbb
jbe
loop
outsl
loope
pusha
sbb
xchg
lds
and
adc
xchg
sub
or
divl
call
add
inc
das
xor
repnz
sbb
gs
jbe
call
ja
xor
dec
push
mov
sub
adc
inc
lods
je
inc
or
xchg
pop
test
loopne
lcall
lcall
mov
xlat
push
cmp
fidivs
cmp
fidivs
adc
call
rorl
repz
lock
jb
jnp
xlat
incl
xchg
in
inc
popa
or
test
cs
sahf
insb
cld
jbe
push
iret
xchg
fwait
aas
xchg
xchg
push
mov
pop
movsl
adc
aas
addb
inc
pusha
test
push
mov
sti
mov
daa
data16
dec
xor
test
enter
fdivr
xorb
outsb
shl
in
out
out
ljmp
hlt
std
add
push
mov
lods
jle
xorl
inc
xor
fistl
and
push
scas
adc
loope
int3
sub
aam
mov
pop
sbb
xor
lds
mov
mov
daa
lea
lahf
mov
adc
mov
shl
cwtl
test
pusha
das
fdivrl
out
ljmp
int
sbb
sbb
jo
mov
mov
xchg
mov
hlt
fistpl
xchg
leave
pop
mov
cwtl
or
cmp
insl
sbb
testl
sbb
iret
mov
xor
nop
xchg
in
ret
mov
ds
leavew
andb
cltd
inc
fnstenv
sub
mov
mov
stc
stos
jae
ret
mov
dec
ficomps
xor
sbb
adc
pushf
cmpsl
std
push
gs
jns
inc
lret
mov
out
lods
stos
mov
sub
outsl
xor
lcall
rcrl
xor
stos
neg
or
in
out
add
cltd
dec
and
lds
adc
push
loop
and
lock
adc
jmp
pop
movsb
and
in
jb
and
add
pop
and
push
xor
mov
vandnps
inc
lods
jle
lods
add
mov
std
rcrb
les
mov
jg
cmc
add
lods
sbb
es
out
push
or
sahf
pop
cli
js
decl
ds
add
sbb
mov
sarb
sbb
test
in
adc
jns
popf
dec
push
jb
dec
orb
movsb
jo
sbb
jecxz
and
mov
je
movsl
gs
push
cld
jp
and
mov
inc
cmp
cmpsl
aam
std
mov
xor
push
sbb
mov
pop
xor
inc
push
add
xchg
fcoml
xor
dec
shrl
jge
jns
lret
ljmp
lods
scas
cmpsl
mov
lock
test
scas
fldl
xchg
imul
call
int3
mul
add
mov
lea
mov
shll
adc
fistpll
cs
cmc
xor
dec
loope
aaa
dec
and
outsl
testb
test
out
mov
test
dec
enter
sub
add
push
inc
ret
xor
cld
mov
insl
inc
lret
aas
push
fwait
loopne
xor
push
jge
mov
cs
negl
mov
jae
lds
mov
icebp
push
or
push
push
lods
add
ds
push
jg
jbe
cmp
mov
cmpsb
rolb
mov
jbe
bound
mov
push
pop
mov
add
pushf
lret
pop
imul
or
or
rorb
loopne
aad
fld
out
jbe
scas
sub
jmp
pop
xlat
fsub
push
mov
cmp
pop
fwait
xor
mov
xor
xor
cs
jae
cmp
jg
ret
cmp
or
stc
sbb
fstl
sub
ret
inc
xchg
divb
sti
xor
mov
jp
stos
xchg
scas
imul
adc
out
sub
lock
or
lret
sub
pop
or
popf
cmp
inc
shlb
jb
das
fbld
shll
ljmp
and
mov
insl
mov
js
sbb
xor
dec
hlt
mov
test
dec
enter
pop
pop
bound
addr16
fsubs
or
fst
and
call
pop
pushf
lret
out
scas
xlat
imul
push
outsb
dec
cmp
adc
mov
jo
cs
cli
sbb
dec
testb
fmuls
insl
jbe
das
stos
xchg
mov
cmc
out
repnz
pop
mov
jno
sub
enter
dec
mov
sub
push
xchg
ret
arpl
popf
push
xchg
ret
cmp
mov
mov
cmp
and
sti
icebp
dec
push
jae
pusha
sti
fcomps
sub
mov
cmp
mov
hlt
cmp
xor
mov
int
sbb
movb
repnz
das
push
pop
ret
xchg
test
mov
mov
fdivrs
adc
cs
cmpsl
shlb
lret
xor
ds
jne
lods
out
and
sbb
add
daa
adc
sarb
in
out
es
das
pop
movb
xor
out
popf
cmpsb
mov
ds
movsl
mov
jl
scas
cmpsb
adc
inc
enter
mov
push
pop
je
mov
mov
gs
orb
xchg
dec
push
mov
ds
int
inc
jmp
mov
jge
sub
imul
push
mov
mov
or
lods
and
rcll
stos
mov
or
add
repnz
in
cwtl
es
lret
pop
sbbl
adc
mov
inc
xchg
aam
mov
push
cltd
jnp
mov
jns
daa
addr16
int3
and
adc
jo
sub
or
pop
repnz
imul
popl
push
mov
pop
lcall
sbb
or
mov
test
shll
idivb
xchg
aaa
cli
or
cmp
shlb
stos
lret
mov
jge
std
popa
sub
and
pushf
and
and
mov
icebp
mov
push
jns
in
pop
bound
push
dec
cltd
xchg
xchg
push
out
jl
js
xchg
pop
frstor
sti
mov
lret
outsb
pop
in
loope
sti
jp
clc
leave
pop
inc
xchg
lods
adc
push
pusha
mov
adc
sub
or
ja
pop
gs
adc
mov
bnd
xor
xchg
pop
push
mov
lea
inc
rol
mov
lcall
push
fdivr
or
call
xlat
dec
loope
push
inc
sub
mov
jo
xchg
inc
mov
sbb
ret
jl
mov
ds
or
mov
aas
stos
and
into
dec
das
mov
jg
inc
and
cmc
data16
dec
push
and
cmp
or
xchg
add
pop
enter
out
shlb
out
push
sub
push
adc
and
out
sbb
pop
jnp
jno
adc
push
inc
in
aas
and
clc
int
pop
cmpsb
lcall
mov
lcall
je
xor
mov
mov
shrb
fwait
das
jecxz
and
test
pop
mov
push
iret
idivb
cmp
dec
mov
push
sbb
push
adc
xchg
inc
push
in
ret
cmp
push
push
popf
mov
aam
or
subl
int
std
mov
cmp
push
or
into
push
test
pusha
icebp
inc
jmp
stos
nop
or
push
xchg
mov
es
insb
jae
movsl
cmp
cmpsl
mov
jmp
add
in
es
insb
ljmp
xchg
or
in
add
lahf
jns
stc
push
pop
ret
mov
add
jecxz
lcall
repz
enter
xlat
pop
inc
jl
jns
mov
mov
aas
inc
ljmp
inc
cs
xchg
jno
js
jecxz
mov
and
imul
rorl
mov
dec
jmp
pop
fldl
mov
xchg
cmp
jnp
pop
and
int
leave
sbb
inc
jae
mov
rcrl
ret
fidivrs
int
mov
sti
add
inc
push
cmc
and
orl
jg
aas
dec
fwait
jmp
das
popa
push
mov
add
pop
sub
imul
je
pop
mov
jo
hlt
mov
mov
sub
cmc
cli
inc
add
mov
pushf
les
movsl
adc
push
pop
pop
ud0
and
pushf
jnp
xor
shl
jae
or
js
movsb
mov
dec
lock
or
inc
xor
xchg
mov
xchg
sbb
arpl
push
and
mov
lahf
loope
jge
add
pop
les
dec
sub
shl
pusha
out
leave
inc
jb
pop
cmpsb
dec
xor
insb
mov
inc
jnp
and
subl
xchg
sub
loop
pop
or
ficoml
add
and
call
fidivs
add
mov
push
dec
imul
add
cli
mov
pop
aaa
sbb
inc
and
fistpl
jo
pcmpeqd
loopne
cltd
pop
xchg
mov
das
and
in
sbb
mov
ja
cmpsb
xchg
jb
mov
test
in
mov
mov
test
sub
int
rcl
inc
jp
icebp
xchg
ret
cltd
push
test
add
imul
fs
pop
add
cmp
jne
add
xchg
add
sahf
jge
fildll
insb
mulb
and
fs
scas
mov
popf
daa
push
xchg
xchg
sti
mulb
lods
cmp
sbb
cmp
imul
mov
mov
mov
xor
daa
mov
imul
mov
xor
dec
push
adc
loopne
push
mov
in
std
add
mov
dec
push
sbbl
mov
jo
jbe
pop
sarl
mov
out
sub
xor
adc
leave
mov
adc
gs
adc
leave
int3
mov
cmp
xchg
enter
pushf
dec
and
hlt
mov
jnp
and
fcoml
push
cmp
sub
or
mov
push
mov
adc
push
int
into
pop
out
cmp
xor
fs
out
fs
or
sbb
push
imul
cltd
out
add
cwtl
cmp
dec
jmp
mov
mov
addr16
lds
xor
pop
cs
push
inc
push
hlt
sub
js
add
cmpsb
mov
addl
dec
xorl
into
add
adc
out
sub
adc
sbbb
push
fcoml
mulb
adc
adc
xlat
roll
push
sti
iret
adc
mov
or
movsb
jbe
adc
leave
adc
std
mov
jp
out
dec
in
mov
sbb
dec
sub
xor
lock
adc
data16
out
and
fdivl
mov
inc
repz
out
and
inc
leave
or
rcrl
fmul
repnz
and
dec
inc
scas
cmp
xchg
and
insb
mov
push
ss
cmpsl
cmp
xlat
jge
adc
jb
and
cmpsb
jnp
addl
pop
mov
cmp
push
sti
push
inc
mov
js
ficoml
jmp
dec
dec
mov
imul
sbb
cs
aad
icebp
pop
iret
shrb
imul
adc
nop
mov
lods
lea
or
push
mov
add
jmp
dec
into
sub
sar
or
ret
fsubrl
scas
sbb
sbb
push
outsb
imul
cltd
lods
or
aas
push
jbe
inc
cmp
sahf
adc
push
fs
sbb
sub
mov
mov
cmpsl
push
sbb
sbb
sbb
hlt
sub
idivl
mov
decb
gs
mov
ret
sub
add
xchg
out
xlat
shll
mov
daa
adc
add
dec
loopne
stos
sbb
mov
sbb
fisttps
repz
push
outsb
sub
mov
mov
sbb
mov
scas
adc
scas
jmp
mov
inc
xor
fsubrl
rcrl
xor
pop
popa
icebp
or
sti
fidivrl
std
bound
scas
insb
and
sbb
cmp
dec
sub
xor
xor
popa
in
adc
lret
adc
pop
rcr
pop
in
mov
mov
add
xchg
iret
and
orl
add
outsb
js
and
xor
lret
lret
aas
insl
fstp
push
jecxz
inc
lods
das
push
data16
or
push
mov
es
addl
jns
inc
mull
mov
pop
pop
mov
add
jl
movsl
out
or
mov
cwtl
pop
push
fcoml
push
ficoms
lods
incb
in
dec
frstor
int
mull
add
pop
cli
mov
mov
cmpsb
std
lea
in
cmp
or
cmp
pop
test
stos
test
rorl
push
into
dec
jg
jle
stos
ja
int3
pop
mov
sub
xor
add
dec
sub
pop
enter
shll
push
cmp
ss
into
xor
pop
bound
jge
push
jns
rcr
or
sbb
push
je
pop
bound
dec
sti
ljmp
and
xchg
sbb
pusha
adc
pusha
add
jge
testb
in
in
adc
cmp
jecxz
xchg
outsl
in
dec
jae
call
scas
cld
inc
cmp
add
jne
outsb
enter
stos
sub
loope
cmp
or
inc
push
adc
jo
cltd
iret
jnp
dec
add
or
inc
jb
out
inc
lods
cmp
arpl
aad
mov
pop
mov
repz
mov
fmull
xchg
lds
push
mov
inc
cmovl
add
inc
sub
je
pop
nop
repz
xchg
mov
mov
out
inc
aam
mov
fs
imul
loopne
std
shlb
pusha
test
xchg
and
into
sbb
xor
mov
in
jmp
push
jp
and
mov
jmp
cltd
sahf
xchg
mov
out
imul
cmp
cmpsb
cmp
xor
mov
mov
cmp
cmp
je
or
pop
inc
es
and
fimuls
jb
jg
mov
ss
cwtl
pop
dec
push
fdivrp
push
ret
push
stos
fcomp
mov
xor
lds
pop
test
je
outsl
xchg
pop
bound
fcmovb
popf
mull
cmp
push
sub
xchg
outsl
scas
cwtl
xchg
stos
hlt
pop
adcl
adc
cmp
sbb
mov
idivb
cmp
out
mov
movsl
jae
cmp
cmpsl
mov
jb
cwtl
xchg
pop
sbb
in
into
mov
repnz
sbb
dec
mov
mov
into
test
cmc
jge
insb
ljmp
push
jno
push
lret
mov
shrb
in
inc
loope
add
mov
aam
push
icebp
fadd
test
cmpsb
aas
xor
jmp
add
adc
lea
mov
and
daa
shrb
int3
testl
inc
inc
pusha
sub
jg
mov
orb
jmp
ljmp
mov
sub
mov
ljmp
mov
daa
xlat
repnz
inc
pop
cmpsl
pop
cli
or
jmp
jb
cvttps2pi
xchg
mov
push
add
xchg
pop
stos
xchg
out
aaa
jae
mov
cmp
out
or
daa
cmp
pop
pop
popf
adc
inc
jb
dec
xchg
xorb
shlb
lods
push
out
mov
dec
mov
mov
in
cmp
adc
xchg
cmp
and
xchg
mov
lcall
dec
sbb
cld
outsb
addr16
sub
ds
stc
insb
shrl
pusha
or
jne
shl
cltd
mov
adc
mov
rcl
sahf
xor
lret
addr16
jp
push
sub
hlt
fadds
stc
mov
std
or
pop
dec
push
push
leave
and
lods
lds
or
daa
xorl
add
jns
rolb
mov
dec
xor
imul
outsb
outsl
push
aas
mov
pop
cmc
repz
rcrb
in
nop
aam
and
inc
add
pop
aas
hlt
in
aas
ljmp
sbb
add
in
jo
enter
ds
push
jb
xorb
push
jnp
xchg
mov
jbe
jb
pusha
mov
inc
and
inc
stos
adcl
movsl
add
bound
int3
hlt
mov
dec
mov
xchg
pop
xor
test
stos
mov
cmp
lret
push
adc
sti
xchg
mov
inc
out
pop
rclb
bound
mov
xlat
dec
xchg
ret
xor
jns
outsl
sbb
fidivrl
pop
mov
int3
xor
mov
rcrb
test
pop
les
sub
int
or
loope
or
movsl
xchg
gs
aad
push
push
xchg
add
sub
hlt
adc
mov
dec
out
cli
cli
or
in
push
xor
std
jge
jl
mov
mov
push
push
adc
jecxz
pop
call
jno
jle
and
movsb
test
mov
jo,pn
insb
aaa
nop
fmuls
int
dec
add
sbb
dec
imul
popa
jnp
and
dec
aad
pusha
test
push
pop
es
adc
jb
test
nop
jae
arpl
jne
inc
push
sub
mov
rorb
pcmpgtd
cwtl
xchg
ja
push
imulb
xchg
push
notl
add
jae
and
mov
jg
sbb
loopne
fsubrs
mov
mov
xor
push
test
inc
sub
xlat
sub
push
popf
pushl
pop
and
sub
push
pextrw
mov
loop
insb
mov
int3
outsb
push
cmp
sbb
xchg
jno
loope
popa
and
sub
test
xor
add
xor
jle
pushf
xchg
clc
bound
adc
dec
fstps
push
push
cmpsl
out
push
outsb
dec
mov
popl
sbb
aam
ds
popa
jle
sub
and
jnp
ljmp
pushl
dec
insl
repz
orl
mov
and
fsubp
mov
pop
and
data16
push
mov
in
xlat
dec
cmp
or
lods
jp
addl
push
push
rcrl
sub
insb
push
std
call
or
xor
popa
mov
hlt
mov
mov
sub
aaa
dec
sbb
sbb
aaa
call
call
dec
jg
push
pop
and
decl
push
lock
aaa
les
mov
mov
ja
cmp
mov
cmp
imul
inc
xchg
call
dec
fsubl
std
and
or
push
push
sub
or
fisubl
mov
sbb
mov
pop
push
dec
leave
in
repz
fsubl
jle
mov
clc
popf
int
mov
sbb
in
cld
add
dec
daa
pusha
inc
aad
in
sbb
arpl
inc
pop
and
mov
push
cmpsl
into
std
roll
aaa
loop
imul
push
pop
hlt
dec
adc
xchg
jmp
and
mov
arpl
or
fldcw
mov
or
mov
mov
jmp
xchg
adc
dec
pop
loopne
xchg
pop
repz
cli
lods
xor
push
xchg
testb
repz
adc
enter
aad
test
dec
movsl
adc
mov
cmp
cmp
adc
bound
out
ljmp
lret
insl
mov
cmp
inc
test
sbb
push
jge
leave
cmp
fadd
push
cmp
jo
cmp
jne
outsl
rorb
outsb
es
in
cmp
loopne
or
js
sub
ffreep
cwtl
mov
inc
inc
or
push
jle
add
hlt
mul
fnop
mov
sbb
cmp
loop
mov
pop
cmp
jb
test
aam
lret
je
xchg
outsb
push
test
stc
push
popl
in
xchg
iret
sbb
aam
inc
jle
push
imul
mov
jl
fnstsw
and
aad
arpl
roll
mov
inc
adc
mov
je
outsb
fs
inc
out
inc
int
hlt
lods
gs
sbb
mov
insb
test
aad
ja
sbb
xchg
out
sahf
pushf
xchg
daa
insl
add
test
mov
cwtl
xor
fsub
out
add
adcl
xor
jb
dec
mov
stc
mov
mov
xchg
jecxz
and
sub
push
sub
jae
orl
scas
gs
jg
aas
adc
dec
mov
outsb
mov
mov
pop
sub
jns
shll
jne
movsl
mov
clc
and
movsl
outsl
es
pop
imul
pop
mov
dec
mov
mov
loope
xchg
arpl
mov
pop
pop
xchg
test
xor
cld
push
adc
dec
repnz
xchg
jp
jae
xchg
out
ds
pushf
jp
loopne
pop
mov
xor
sbb
push
arpl
mov
sti
pushf
cltd
shrl
adc
ljmp
loop
test
push
inc
sahf
pusha
push
pop
enter
sbb
adc
lea
scas
sub
aad
cltd
sahf
cwtl
cmp
mov
xor
dec
xchg
outsl
lods
call
jmp
or
loope
movsb
mov
add
xchg
shrl
mov
fbld
pop
rorl
orl
adc
adc
mov
and
jae
ret
jmp
or
std
cli
movsb
jns
push
xchg
sbb
sub
mov
mov
fisubl
imul
xchg
mov
sub
bound
mov
in
sub
and
cwtl
xor
mov
lret
push
cltd
push
clc
sub
sarb
cli
jb,pt
rorb
ljmp
cmp
or
and
cmp
mov
fnstsw
cmpsb
pop
adc
push
xchg
lds
stos
test
push
jl
fsubr
mov
xchg
mov
xor
mov
sub
dec
loop
mov
or
sub
dec
ljmp
outsb
dec
inc
lock
cmpsl
arpl
aam
bound
add
add
fsubr
and
es
popa
pop
jb
pop
xorl
pop
inc
pop
sbb
push
inc
insb
adc
push
mov
outsb
xchg
in
xor
mov
das
pop
jb
cs
pushl
jle
sbb
icebp
ficoml
sahf
fcoms
lret
hlt
push
jge
lldt
inc
leave
in
or
and
jg
cmp
xchg
fwait
loopne
jmp
xchg
jp
popa
andb
and
push
movsb
rcll
inc
xchg
jno
xchg
movsb
jbe
mov
push
stos
cmp
fistl
inc
lock
pop
sub
inc
jno
sbb
push
dec
inc
xchg
inc
xchg
aam
push
sbb
in
mov
shll
stc
sub
cwtl
cmpsb
pop
dec
mov
rorl
jp
xchg
push
movl
repnz
mov
xor
or
cs
shl
inc
jo
dec
inc
xchg
cmpsl
mov
pop
and
dec
test
xchg
bound
sub
jp
jg
insb
into
adc
push
push
scas
std
add
jle
in
sarl
lds
stos
and
lcall
icebp
mov
jp
loope
cli
inc
pushf
in
adc
sub
repnz
imul
inc
iret
xchg
sub
sti
rcr
push
jno
lods
cmpsb
mov
fildll
mov
push
aam
int
adc
cmp
sub
push
xchg
ljmp
mov
in
mov
sub
mov
mov
push
sbb
jl
in
dec
fstl
jg
mov
jnp
push
into
inc
jmp
xor
loop
jp
jge,pt
inc
inc
mov
sbb
gs
outsl
arpl
int
scas
mov
mov
fmuls
fucom
mov
fildl
cmp
sub
sbb
mov
lcall
cmc
mov
shll
lahf
push
aaa
aam
inc
mov
cs
cli
sub
push
xchg
fldcw
hlt
js
into
stos
cli
mov
in
xor
xchg
lock
mov
pusha
jmp
adc
xchg
adc
adcl
and
loopne
aad
jno
cmc
pop
dec
push
mov
jle
aaa
adc
popa
std
add
shll
inc
mov
inc
xchg
rcrl
daa
daa
pop
push
arpl
stos
sti
jae
fdivl
and
pop
out
push
lret
scas
lock
jmp
xchg
or
add
add
sbb
aad
jp
xchg
loopne
inc
aas
sbb
push
mov
xlat
mov
ss
jmp
js
push
divl
sbb
fidivrl
mov
iret
cmp
inc
mov
dec
and
popa
xor
jg
mov
mov
fs
push
or
cmpsb
in
jo
adc
das
sub
or
mov
pushl
test
cli
inc
jne
fnstenv
adc
test
add
out
leave
xchg
sbb
dec
inc
cwtl
jne
and
jbe
dec
xchg
cld
leave
push
in
rcll
les
jbe
divb
mov
cs
lret
out
cwtl
sbb
pushf
pop
lds
cmp
scas
and
cmp
adc
cs
pushf
jmp
scas
mov
arpl
jg
cmp
xor
sub
out
adc
fs
test
scas
pusha
leave
pop
les
add
add
pop
popa
and
lea
rorl
mov
popa
sub
loop
push
push
mov
dec
call
cmp
enter
cmp
lock
sti
cwtl
hlt
xor
fcoml
cmpsl
fwait
jecxz
sti
push
testb
xchg
cs
outsl
inc
push
cs
adc
les
dec
insb
cmp
xor
adc
xor
xor
call
fmuls
and
repnz
push
pop
push
or
lret
jbe
push
push
mov
out
adc
dec
mov
addr16
adc
xor
loope
popf
mov
mov
jbe
and
xchg
xchg
andb
sub
add
in
or
push
mov
sbb
xchg
jns
xlat
aas
jae
sbb
into
js
push
lcall
inc
hlt
or
pop
ss
das
lods
dec
jo
and
inc
xchg
or
popf
ret
mov
jno
xor
inc
fdivrs
pop
push
jb
nop
xchg
es
rorl
sbb
pop
cmp
jae
mov
testl
lcall
xchg
scas
mov
cld
mov
in
sbb
adc
fstpl
jmp
cmp
iret
mov
cltd
mov
mov
mov
loop
dec
add
adc
mov
into
or
add
or
sub
push
push
fs
mov
outsb
loop
adc
lea
ret
xor
adc
iret
or
xchg
lcall
xlat
movsl
mov
push
mov
jle
popa
or
xorl
out
sbb
xchg
pop
repnz
mov
repz
adc
sbb
das
ljmp
mov
and
jns
or
dec
mov
mov
stc
pop
mov
push
inc
xchg
cmp
mulb
add
aam
add
test
cmpsb
shrl
test
lcall
ss
sbb
add
cltd
outsl
mov
lods
pop
int
pop
jg
push
push
add
sbb
jmp
insb
jnp
scas
mov
pushf
in
jno
inc
xor
jp
cmp
jecxz
cmp
add
sbb
push
cmpsb
cwtl
jle
outsb
inc
ficompl
xor
pop
push
call
cltd
push
xorl
int3
lahf
gs
repz
roll
mov
cltd
mov
push
lds
mov
imul
mov
cld
mov
cld
icebp
inc
mov
push
and
fildll
shrl
jp
mov
stc
mov
test
pop
mov
sub
push
mov
loopne
pop
mov
sti
pop
push
adc
pop
test
rclb
sbb
shll
jns
mov
inc
sub
cmp
jle
dec
mov
xorb
pop
es
mov
int
dec
js
xor
cmp
mov
pop
push
lahf
add
push
pusha
incl
and
pop
xchg
mov
jl
data16
mov
xlat
push
xchg
and
push
mov
jb
adc
dec
push
js
and
je
dec
scas
test
xchg
inc
lds
sub
mov
inc
fisubrs
lret
outsb
ds
lds
jns
outsl
leave
lahf
movsl
lea
jmp
adc
push
and
mov
mov
test
sbb
testl
andl
or
enter
out
push
inc
cmpsb
stc
insl
add
pusha
pop
mov
test
mov
sub
pushf
xchg
mov
push
dec
adc
push
jnp
aam
adc
daa
out
cld
cmp
inc
cmp
repnz
mov
idivl
out
dec
movsl
adc
daa
mov
push
clc
scas
ret
jnp
xor
mov
fwait
ljmp
mov
out
outsb
leave
nop
shlb
dec
pop
mov
dec
pop
cmp
testl
xchg
rcl
imul
xlat
fldenv
rolb
jno
test
fldenv
int
nop
pop
scas
jnp
xor
pop
pushf
jo
sub
imul
pop
les
sub
cs
out
or
jb
leave
inc
jae
enter
cmpsl
mov
cltd
cmc
mov
fldcw
clc
or
jne
sahf
or
cli
mov
cmp
xchg
das
xlat
lret
pop
adc
icebp
cmc
imul
jge
pop
cmp
addr16
adc
adcl
fisttpll
loop
mov
sar
dec
jmp
fistpl
lahf
push
adc
int3
push
pop
cmc
ds
cwtl
lods
push
jecxz
adc
mov
mov
imul
or
repz
pop
outsl
push
popa
mov
movsl
sbb
or
imul
das
into
lods
shrl
mov
inc
jo
mov
push
nop
aas
sbb
jecxz
fdivrs
ljmp
jne
xchg
outsb
in
pop
mov
pop
cmp
sub
xchg
out
xchg
popf
push
mov
jge
fs
push
lock
inc
adc
out
in
add
mov
dec
inc
fbld
insl
nop
sub
adc
fmuls
rorl
push
bound
popf
repnz
iret
or
rclb
add
test
test
jecxz
mov
mov
adc
lods
mov
stos
leave
rcrb
test
ljmp
dec
xchg
mov
ret
inc
jge
xchg
cmp
shl
sub
icebp
xlat
inc
popa
fcomp
cld
sbb
in
jle
nop
sub
sub
in
fstps
loopne
push
imul
in
jae
les
iret
leave
loop
movsl
fstl
mov
mov
push
push
out
push
xor
add
adc
out
pop
mov
and
daa
dec
xor
pop
int3
and
pop
inc
jmp
in
arpl
inc
dec
sahf
ja
jecxz
jge
fs
jle
dec
inc
repnz
pop
aas
push
jae
pop
xchg
icebp
pop
jne
out
pop
push
insl
push
sub
push
inc
test
cmp
xor
push
pusha
mov
push
aad
incb
xchg
sub
sbb
rclb
test
out
je
mov
xchg
loope
clc
mov
out
insb
pop
loopne
daa
jnp
mov
mov
loope
xlat
jno
sbb
lds
loop
loopew
sahf
mov
outsb
adc
and
cmc
lahf
fwait
push
jge
ret
cmpsl
dec
and
xchg
lret
adc
mov
push
jle
push
or
fcomps
fdivrl
adc
lret
dec
add
rcll
sbb
movsb
pop
and
loopne
xchg
and
inc
out
cmp
push
adc
push
xchg
stos
add
lar
dec
dec
xor
and
mov
stos
movsl
inc
sub
clc
pop
cmp
test
orb
mov
mov
xor
repnz
loopne
in
loopne
icebp
inc
push
xchg
cld
inc
xor
push
adc
push
jns
jle
in
mov
sub
or
cmp
ja
scas
add
xchg
ss
clc
mov
pop
fwait
dec
jmp
mov
or
mov
jle
imul
inc
popa
roll
push
js
sbb
in
shll
mov
add
mov
cmp
dec
outsl
testb
add
iret
push
mul
fmull
add
inc
push
jns
push
inc
mov
and
mov
sbb
sbb
jge
bound
lahf
je
xchg
sbb
mov
dec
test
popa
cmp
add
mov
pop
mov
stos
xlat
shll
xor
sahf
inc
insl
inc
dec
inc
sub
xor
mov
xor
jl
xchg
xlat
cmp
mov
ret
mov
cmp
jae
movsl
aas
test
sub
addr16
test
imul
arpl
popf
inc
out
icebp
mov
imul
push
and
mov
insb
bound
xchg
out
imul
pop
cmp
and
jge
arpl
push
sbb
out
push
xor
jge
stc
loop
dec
mov
pop
cmpb
fistps
add
daa
mov
in
sub
pop
div
fadds
or
mov
sbbb
sub
adc
rolb
leave
sub
bound
xchg
aas
adcb
test
test
stc
popf
stos
push
out
xchg
mov
cmpsl
shrb
loopne
xchg
arpl
push
cltd
sub
shll
and
loopne
dec
rorl
int3
push
cld
scas
mov
inc
in
mov
jecxz
cs
movsl
into
push
scas
and
pop
jbe
mull
bound
dec
jne
add
and
stos
rcr
mov
insb
call
cmpl
mov
or
cs
rcrb
jo
enter
test
shrl
cmpsl
inc
push
mov
jns
rolb
or
mov
jl
push
and
adc
xchg
imul
dec
lret
in
int3
adc
xchg
test
push
bound
or
adc
xor
sub
mov
icebp
out
push
cmp
pop
in
test
divl
mov
mov
popa
cltd
aad
mov
pop
in
xor
loop
xchg
mov
inc
aam
dec
mov
and
xor
sbb
or
adc
inc
mov
int3
pop
adc
sub
jno
inc
mov
iret
xchg
mov
and
and
pushf
cmp
fistps
mov
movsb
or
int3
mov
push
outsl
scas
insl
shll
dec
fisttps
mov
dec
popf
mov
push
test
add
scas
pushf
jge
inc
pop
mov
icebp
xchg
insl
or
lock
sbbb
sti
mov
fisubs
icebp
or
cltd
xchg
xchg
das
xor
mov
ret
outsb
imul
sbb
repz
sbb
xor
cmpsl
fdivrl
mov
rol
inc
pop
mov
jg
rcll
pop
in
xbegin
bound
and
insb
xorb
or
icebp
lret
cmp
sets
addr16
movsl
cmpsl
stc
push
mov
mov
sbb
sbb
test
sub
xchg
js
inc
dec
enter
add
jno
loop
bound
cld
mov
xor
mov
mov
lcall
and
inc
stos
fdiv
push
pop
movsb
sub
mov
pop
test
jmp
mov
cmpsb
iret
mov
xchg
xchg
jge
jb
mov
xor
adc
jg
mov
lea
fiaddl
cmc
xchg
loope
adc
mov
cli
outsl
mov
loop
dec
inc
inc
insl
pop
ds
jb
out
popf
test
addb
cmp
cli
imul
mov
lret
sti
movsb
adc
push
ljmp
xor
mov
pop
in
cld
into
pop
adc
mov
mov
pusha
mov
and
bound
outsl
das
fbstp
shrl
fucomi
inc
frstor
lods
or
ljmp
shlb
cwtl
test
or
hlt
push
rcrl
push
in
add
mov
inc
cli
mov
jb
cltd
push
jg
cmp
out
inc
jne
ja
shlb
xchg
ljmp
or
sbb
ret
lods
push
lods
vpunpckhqdq
mov
mov
jl
insl
cmpsb
or
and
test
cmpb
or
jmp
sub
add
inc
movsb
inc
std
rorl
push
inc
lret
lret
mov
mov
pop
inc
jmp
xchg
ret
pop
and
adc
xchg
or
call
cmp
scas
mov
test
in
dec
pop
fadds
and
jbe
cmp
ljmp
test
mov
add
inc
dec
int
cmp
outsl
fcmove
jp
sub
mov
xchg
cmp
push
lret
hlt
addr16
or
push
pop
out
inc
test
aam
fimuls
scas
add
adc
dec
xor
push
pusha
sub
jecxz
xor
aas
cmp
mov
rcll
hlt
xor
js
push
push
rcll
xor
add
mov
and
shrb
repnz
xchg
xor
mov
xchg
mov
jbe
sbb
adc
inc
insl
pop
mov
mov
add
push
xor
lcall
fwait
mov
mov
in
dec
add
sbb
and
outsl
lea
das
mov
enter
mov
and
and
jmp
or
test
or
into
test
jg
xchg
adc
test
sbb
add
outsb
pop
fdivrs
pop
bound
fs
in
and
push
scas
pop
scas
lret
xchg
roll
test
cwtl
adcb
hlt
out
mov
and
cmp
cs
aas
lret
add
les
and
push
cmc
or
mov
inc
out
fimull
xor
bound
xor
dec
and
or
pop
pusha
sar
test
jbe
enter
scas
out
out
add
arpl
dec
xchg
mov
shll
pop
imul
loopne
xchg
sbb
imul
push
push
out
pmullw
dec
popa
stos
in
imulb
scas
test
fldcw
push
adc
and
inc
mov
cmp
outsb
inc
mov
loop
push
add
or
mov
pop
popa
nop
sub
or
push
xchg
ficompl
sahf
jle
push
cmpsb
cmpsl
jp
pop
push
cwtl
clc
fisubs
xchg
push
lock
inc
test
mov
push
push
dec
mov
sti
repnz
loope
jp
dec
add
sarb
mov
lret
addr16
out
mov
das
mov
sub
lock
push
mov
xor
arpl
shrl
dec
mov
test
rclb
jo
xchg
scas
int3
pmulhuw
dec
lods
and
cmpsl
xchg
insl
ret
jae
neg
dec
or
add
pop
test
das
cmp
sbb
mov
pop
es
mov
and
mulb
jno
sub
sbb
in
fsub
lea
fadds
mov
fwait
jo
inc
bound
mov
mov
push
je
and
push
notb
cld
xchg
fs
adc
jmp
jl
arpl
mov
and
adc
pop
lret
and
out
in
enter
mov
push
mov
ret
mov
inc
inc
mov
xor
or
hlt
in
or
js
sbb
pop
or
pop
stos
int3
jb
add
and
test
xchg
mov
std
cli
lcall
push
cltd
cmp
ss
out
fwait
arpl
pop
aam
stos
mov
dec
dec
xlat
outsl
out
incb
insb
mov
xchg
stos
mov
add
stos
cmp
lds
ss
mov
inc
xchg
test
rcrb
xor
inc
ficompl
mov
push
sbb
orl
sub
fs
ljmpw
xchg
push
mov
jmp
mov
in
cmpsb
adc
test
cmp
test
push
movsl
adc
cmpsl
xor
mov
xor
xchg
push
jecxz
repz
pop
cmc
xchg
outsl
mov
pop
call
and
sbb
gs
xchg
jl
imul
sub
test
push
and
add
mov
lret
dec
and
insl
jne
pop
cmpsb
adc
mov
mov
cmp
lahf
ret
dec
push
ret
fldcw
nop
mov
hlt
ret
mov
outsl
adc
les
mov
push
or
ja
xchg
adc
xlat
hlt
mov
mov
mov
stos
lcall
push
cli
orb
jne
mov
imul
clc
mov
push
bound
or
cld
sub
or
pop
imul
jae
dec
cmpsb
shrb
iret
push
sub
outsl
std
icebp
dec
mov
jmp
mov
aam
clc
cld
movsb
dec
and
inc
mov
dec
xchg
incb
xchg
stos
or
leave
or
and
or
jge
mov
xorb
les
dec
mov
push
out
insb
test
int
push
cmpsl
jl
fdivl
outsb
aad
jl
add
push
xlat
xor
xor
je
or
imul
jg
xchg
pop
adcl
xchg
scas
stc
inc
adc
dec
lahf
and
and
mov
out
call
rolb
in
popa
sbb
insl
pusha
fcomip
mov
mov
cmp
loope
out
xchg
inc
popa
dec
sbb
outsl
jle
mov
inc
imul
int3
or
fidivrl
inc
adcl
mov
inc
inc
movsl
fadd
leave
dec
mov
fnstsw
cld
js
scas
dec
or
cmpsl
testb
push
leave
xchg
clc
fistpl
icebp
loope
and
inc
aam
and
jmp
ja
clc
sbb
inc
inc
xchg
fwait
test
xchg
imul
lret
mov
jo
addr16
movsb
test
xchg
call
ret
imul
xlat
hlt
adc
mov
movsl
cmp
int3
dec
mov
jecxz
das
cld
mov
inc
fisubrl
test
push
mov
js
fs
pop
mov
movsb
imul
aas
xchg
es
push
cwtl
xchg
pop
sub
fistl
mov
jmp
ds
dec
pushf
jo
sub
mov
das
rcrb
int3
mov
outsb
mov
test
cmpsb
mov
sub
push
jge
adc
pop
mov
std
cmp
loop
xor
inc
insl
mov
xor
mov
int
test
xchg
fsubr
testb
cmpsb
insl
sbb
fildl
into
scas
fcomp
xor
lret
outsb
mov
fsubl
jge
scas
mov
jl
pop
mov
mov
dec
faddp
lret
xchg
lods
push
pop
push
outsb
add
sbb
cmpsw
mov
xor
cmp
inc
jmp
lahf
pusha
shrl
adc
sub
nop
xchg
sbb
enter
scas
aad
xchg
fimuls
lret
or
sub
adc
lret
push
mov
pop
pop
arpl
fs
stos
mov
xchg
ljmp
fsubrl
xchg
mov
mov
add
sub
out
imull
xor
xchg
xchg
int3
repnz
inc
fadds
mov
in
insb
hlt
mov
fnstcw
outsb
sahf
fcmovnbe
jo
lods
mov
loope
pusha
test
clc
scas
xor
mov
dec
movsl
ss
jo
rorl
jge
cmpb
loopne
fcompl
jae
xor
xchg
pop
iret
adc
pop
and
jno
sbb
adc
cwtl
or
pop
xchg
xchg
add
lods
pop
repnz
pop
out
mov
stos
inc
add
cmp
ret
out
pop
adc
xorb
shr
lods
or
adc
nop
push
sub
ljmp
jle
xorb
add
sbb
sbb
mov
inc
stos
cs
fwait
mov
or
aad
jno
or
sub
pop
pop
les
leave
sbb
out
mov
stos
jmp
lret
sub
xor
pop
mov
rorl
int3
call
pop
les
adc
mov
xor
xor
cmp
int
inc
jmp
push
xchg
shrl
aas
sub
mov
mov
add
sbb
lock
and
push
adc
test
jg
rcll
repz
jae
sub
add
mov
sarb
xor
pop
test
divb
cltd
cmp
insl
and
test
xor
lahf
mov
push
fcompl
mov
sbb
dec
sub
aad
sub
cmpsl
push
sub
push
int
cmpsb
in
subb
dec
std
sub
loopne
xchg
test
es
xor
cs
fisubrl
xchg
mov
jbe
xchg
pop
ljmp
sbb
and
lret
sbb
test
sbbb
sbb
in
cmp
dec
mov
jge
enter
out
push
dec
jmp
stos
icebp
in
out
and
xchg
popf
lods
pop
sbb
dec
jmp
sub
mov
xor
xchg
dec
and
xor
push
inc
jp
cmp
jmp
repnz
cmp
hlt
loop
cmpsb
xlat
dec
mov
lea
mov
dec
lods
ficoml
xchg
test
int
mov
scas
and
or
xor
xor
mov
jl
into
xor
xor
fsubl
add
pushf
xchg
jge
mov
pop
mov
push
arpl
cmp
inc
pop
and
cli
dec
inc
add
xlat
mov
push
shl
xchg
mov
imul
jg
or
and
mov
pushf
jno
or
mov
mov
and
daa
xchg
cmpsl
inc
push
rcrb
push
mov
add
push
inc
xchg
xchg
add
ret
mov
mov
imul
rcr
cmp
jmp
and
xchg
xchg
jne
out
and
int
je
mov
or
xchg
pop
arpl
or
mov
mov
mov
dec
arpl
bound
not
sub
outsl
sub
movsb
add
fcmovnu
test
ss
popa
xor
sub
iret
mov
xchg
mov
adc
std
xor
push
sbb
cmpsl
popa
pop
int
into
aam
dec
call
and
andl
mov
pop
cmp
shlb
mov
sub
sub
dec
xchg
pusha
cmp
arpl
hlt
push
iret
sub
ljmp
mov
dec
adc
jg
pop
inc
inc
inc
push
mov
and
out
add
sbb
jl
xor
mov
negb
xor
mov
in
xorl
das
sub
push
cld
inc
ljmp
jo
pop
into
and
das
pop
xor
push
test
insl
pop
cs
int
and
ja
pop
iret
sub
cmp
jmp
jle
mov
repz
out
lea
cmpsl
dec
mov
pop
lahf
mov
dec
cmpsb
or
mov
pop
and
and
mov
psadbw
jmp
call
and
lods
pop
cmp
aaa
ds
mov
mov
orl
lret
dec
into
mov
stc
in
jp
fistpll
cmc
mov
movsl
daa
aad
imul
mov
fwait
arpl
push
sbb
imul
outsl
mov
hlt
int3
and
jo
popa
jae
push
stos
inc
in
xchg
and
aam
cmc
xchg
ja
jp
sub
fldenv
add
sbb
dec
out
call
and
shlb
mov
cmpsl
mov
sub
cmp
imul
ds
fisttpl
jb
xor
mov
test
movb
movsb
mov
mov
add
int
aas
mov
mov
mov
clc
loop
push
mov
lea
or
pop
mov
pop
mov
test
and
cltd
fmulp
cmp
add
xchg
pop
icebp
pop
popf
or
divl
sbbb
mov
shlb
adc
imul
xlat
mov
adc
insb
in
mov
or
mov
add
cmp
push
pop
cmpsb
and
mov
cld
jno
push
cmp
cmp
ret
int3
lahf
or
xchg
or
pop
adc
dec
and
popa
or
inc
sub
dec
sub
jl
dec
dec
and
mov
sub
dec
loope
jo
lock
outsb
jmp
insl
idivb
std
cwtl
jnp
iret
aas
xchg
adc
mov
dec
imul
dec
sahf
push
sub
movsl
fst
cli
xchg
lcall
and
jnp
call
scas
sbb
push
and
in
mov
mov
aaa
inc
loopne
movsb
mov
in
mov
and
sbb
sti
nop
cmpsb
mov
in
mov
push
mov
mov
call
dec
incl
pushf
xor
ret
cs
insb
daa
mov
hlt
push
mov
dec
clc
lock
sbbl
imul
push
xchg
sbb
dec
add
xchg
pop
xor
rorl
mov
push
add
gs
cmp
and
ja
repz
or
test
insl
or
adc
dec
xlat
pop
out
mov
adc
je
jg
add
cmp
xchg
xor
popa
sbb
lret
add
adc
dec
mov
notb
sub
xor
out
and
mov
or
fsubrp
and
mov
lcall
adc
imul
cmp
dec
out
std
or
cmp
sub
adc
push
fsubr
mov
and
mov
in
mov
out
mov
dec
sahf
jns
adc
movsb
arpl
adc
pop
xchg
rorl
add
add
and
xlat
push
std
cli
popl
and
fdivrs
xchg
out
or
mov
aad
cmp
mov
stos
sbb
pop
in
daa
jns
cmp
mov
leave
mov
imul
sbb
out
dec
or
and
fs
dec
mov
mov
call
jle
frstor
push
adc
pop
pop
stos
cmpb
add
dec
xlat
add
call
repnz
mov
fidivrs
test
jle
adc
imul
stos
imul
outsl
out
cs
mov
xchg
pop
fwait
xlat
xchg
aaa
push
and
mov
cmp
mov
gs
or
jmp
mov
addr16
add
leave
loopne
aad
mov
add
push
adcb
jg
gs
add
mov
mov
pop
adc
push
bt
ja
pop
push
and
pop
push
dec
adc
sub
fbstp
push
add
fcoms
sub
nop
or
imul
mov
gs
push
sbb
imul
fcomps
lcall
ja
loop
xor
xchg
pop
or
stos
pop
jg
add
inc
and
mov
xor
add
shll
dec
adc
and
pop
jbe
xchg
pop
mov
push
int3
xchg
cmp
mov
pop
and
or
int
jle
add
scas
mov
fildll
lcall
xchg
add
cmp
in
fbstp
add
aas
cmpsl
pop
subb
xor
xchg
enter
mov
or
mov
clc
addr16
sbb
int
aaa
mov
scas
push
xor
repnz
mov
mov
aaa
nop
enter
hlt
clc
push
ja
mov
dec
pop
adc
push
mov
movsb
je
icebp
cmp
je
xchg
jnp
rol
in
cmp
dec
add
jb
repnz
sbb
or
xchg
cli
jmp
lahf
ljmp
dec
pusha
push
sbb
cmp
int
adc
pop
push
jl
cli
movsb
addb
imul
data16
mov
popa
clc
pushf
clc
je
adc
out
pop
insb
in
or
cmp
push
scas
movsl
or
sbb
mov
inc
jo
ret
fsubs
mov
add
mov
imul
loope
xor
in
insl
lods
shll
mov
std
pop
test
or
sbb
cmp
cmpb
sbbl
xchg
cmp
fistps
sbb
daa
decb
adc
mov
cwtl
std
or
inc
lods
outsl
imul
loop
movsl
cmpl
mov
dec
pop
add
xchg
and
subb
mull
rol
cltd
ja
je
jbe
jo
rorb
xlat
sub
outsl
push
jl
inc
pmaxub
stos
sbb
pop
sbb
mov
leave
mov
lock
int3
add
mov
push
mov
lret
shlb
test
sti
repnz
sub
test
ja
jle
aaa
test
cmp
idivb
inc
adc
out
cmpl
jmp
mov
jns
sub
inc
int
sub
xlat
jp
sahf
in
jge
add
mov
dec
stos
pushf
and
mov
cmp
xchg
or
inc
js
jns
les
mov
fnstsw
sbb
or
dec
adc
push
and
cmp
jno
fcmove
inc
push
sbb
sbb
or
test
ljmp
mov
mov
xor
daa
xchg
mov
dec
outsb
add
fwait
dec
es
ficomps
dec
xor
inc
es
rcll
mov
or
mov
insl
leave
pushl
ss
jg
adc
xchg
orb
xor
repz
fs
scas
cmc
fcomp
je
push
jo
arpl
xor
pop
mov
sbb
rorl
lock
push
pop
in
xchg
in
mov
xchg
cmpsb
leave
jl
mov
arpl
push
loope
lds
mov
mov
out
iret
aaa
sub
daa
faddl
fwait
lret
aam
jbe
fisubrs
into
je
or
mov
jne
ljmp
and
add
pop
mov
mov
hlt
sti
repz
test
jmp
sar
test
or
insb
lahf
pop
push
mov
or
lods
cs
lret
fcmovnbe
cmc
insl
mov
adc
jae
jmp
das
pop
sbb
push
aad
in
mov
inc
jnp
adc
cmp
aam
js
ret
mov
push
mov
pop
pop
movsl
pusha
adcb
push
pop
inc
sbb
mov
jnp
les
addr16
sub
jo
jge
fwait
mov
pop
repz
ss
jl
mov
repnz
movb
cmp
dec
inc
adc
xchg
scas
loop
fs
jnp
scas
adc
test
bnd
es
loope
sar
popf
cmpsb
mov
cmp
popf
sbb
mov
int
nop
int
adc
inc
fs
xchg
inc
fmul
mov
ja
dec
sbb
out
lret
pop
inc
cmp
xchg
push
mov
outsl
inc
int
je
fadds
insl
call
push
lods
or
jg
into
and
mov
xor
daa
mov
inc
push
rorb
int
dec
pop
inc
shlb
adc
dec
imul
enter
jns
adc
cwtl
push
push
dec
cmp
iret
mov
stc
and
xor
lods
jecxz
mov
stc
cmp
push
mov
lahf
int
arpl
hlt
mov
stos
ss
sarb
cmc
dec
push
movswl
jg
jne
cs
sub
xor
jns
fstl
pop
das
icebp
sbb
jo
scas
xor
jmp
subl
mov
jecxz
das
cli
outsl
imul
movsb
test
leave
cmc
bnd
and
insl
mov
push
adc
leave
lds
or
std
aam
imul
jmp
or
mov
mov
fiaddl
adc
in
scas
ds
pop
or
pop
jb
dec
in
ret
icebp
adc
nop
enter
push
lret
or
jecxz
je
ja
flds
dec
mov
jecxz
addr16
fmul
stc
mov
mov
dec
adc
xor
insl
and
in
cltd
jnp
push
push
or
ljmp
cmp
lcall
jmp
xor
xchg
test
pop
sbbl
repz
in
lahf
jno
cmpsb
lahf
notb
mov
out
jg
int3
push
nop
lea
lods
dec
dec
pop
popa
cmp
push
std
push
fadds
aad
mov
lahf
mov
das
out
sbb
or
jbe
adc
and
xchg
dec
outsl
testb
jbe
shll
sti
mov
push
orb
inc
dec
mov
or
sub
push
loope
ja
cli
shr
lcall
lcall
iret
mov
mov
mov
nop
jb
aam
mov
out
leave
ss
add
jns
sbb
sub
loope
das
cmp
pop
test
lds
push
xchg
cmp
cmp
ret
sbb
aas
add
push
push
ss
mov
stos
pushf
xchg
or
out
jecxz
cmp
ds
jb
daa
daa
inc
or
mov
mov
jmp
lret
xchg
push
cld
jo
push
ss
and
ret
inc
mov
or
rcrl
and
aas
sub
xor
lret
icebp
push
xchg
lcall
clc
out
push
xor
sub
or
xchg
imul
int3
dec
adc
mov
sbb
daa
add
inc
popf
addb
je
movsb
fs
cs
inc
hlt
fnstcw
lds
push
movsl
imul
xchg
jecxz
testb
lods
mov
xchg
test
mov
mov
xor
and
inc
mov
and
jmp
xchg
xor
adc
and
jmp
daa
push
inc
cmp
adc
in
ret
ss
mov
in
xchg
jo
jbe
negl
lock
pop
stos
aad
cmp
mov
xchg
mov
push
inc
mov
pop
pop
arpl
imul
andl
ds
ret
js
jmp
inc
out
add
and
sub
roll
push
or
or
into
cli
dec
enter
ss
jnp
inc
lods
jb
inc
fcmovb
adc
cltd
cmpsb
lods
sti
adc
int3
ds
push
sti
mov
inc
cmp
pop
popf
imul
mov
inc
xchg
cltd
std
ficompl
pop
fidivrl
mov
adc
sub
adc
cmp
jmp
push
adc
dec
jb
cmp
sub
fsubrs
add
das
pop
loop
int
jge
ficoms
sahf
push
dec
into
loopne
jns,pt
jnp
mov
mov
in
adc
iret
fcompl
int3
or
adc
stos
out
add
es
push
push
pop
fsts
adc
cmp
cmp
lcall
negl
popf
mov
mov
imul
pop
shl
adc
jmp
cmpsl
jmp
mov
sub
mov
pop
inc
pop
filds
mov
into
mov
inc
sbb
loope
xchg
shrb
sbb
inc
fdivrl
aaa
imul
movsb
ja
std
mov
push
test
adc
push
mov
push
jne
int
cmc
xchg
sbb
popf
xchg
test
pop
mov
je
mov
mov
jecxz
xchg
mov
jge
jns
movsl
mov
jg
push
inc
lds
push
mov
in
jne
mov
cmp
inc
gs
divl
sbbl
fisttpl
lahf
cmp
mov
cwtl
jne
dec
pop
pop
pop
mov
lds
dec
xchg
push
lahf
pop
push
adcb
fistpll
mov
add
push
out
fidivs
and
int3
adc
aas
push
rcrb
fdivrs
int3
divb
rcrl
fcomps
addr16
mov
mov
ljmp
xor
loop
arpl
hlt
shlb
fisttpll
xchg
testb
cmpl
aas
mov
popl
ret
fisubs
jg
sub
cmp
andb
jno
nop
xor
jecxz
pushf
imul
pop
sub
ljmp
jns
mov
add
xchg
jmp
inc
cmp
adc
popf
movsb
fwait
mov
clc
shl
ds
js
movsb
imul
movsl
mov
insl
or
out
mov
jbe
in
xchg
sub
dec
cmp
adc
jbe
pop
sub
push
dec
mov
mov
ja
inc
imul
outsb
mov
rcl
jl
arpl
adc
in
lods
dec
sbb
sbb
das
pop
imul
test
test
xor
mov
push
icebp
int3
pop
jecxz
test
les
push
push
mov
mov
gs
add
out
push
imull
cld
pop
je
lods
push
mov
dec
xor
fstps
or
pushf
decl
aaa
insl
ljmp
adc
mov
cltd
rcl
outsl
bound
int
sub
sbb
and
jbe
cli
mov
push
out
fstl
ljmp
dec
xchg
dec
pop
and
dec
movsb
xor
lcall
mov
jecxz
scas
cmc
insl
push
aaa
test
orl
enter
lahf
shl
xchg
and
jbe
mov
and
daa
popf
pop
push
ss
xchg
dec
adc
jmp
out
insl
xchg
lahf
icebp
std
fiadds
inc
mov
loopne
loopne
add
push
jge
iret
xor
xorb
adc
sbb
add
dec
lods
ja
jo
sbb
cwtl
add
jmp
lcall
les
dec
incl
mov
mov
cmpsl
cmp
enter
cmc
sbb
imul
jb
lds
xchg
lods
or
cmpsb
mov
mov
into
push
iret
dec
mov
xchg
insl
arpl
dec
inc
xor
push
mulps
mov
popf
mov
mov
jge
inc
mov
lcall
stos
xchg
push
pop
cmp
in
test
jg
je
add
out
mov
inc
ficompl
in
hlt
int3
stos
shll
mov
pop
out
push
lock
push
or
add
xor
mov
jmp
rolb
mov
pop
arpl
stos
daa
sub
mov
ds
stos
dec
cmpsl
addr16
dec
xchg
cmp
das
hlt
add
sub
and
push
stos
int3
and
mov
enter
mov
jle
jl
jne
test
mov
jl
jmp
cmp
int3
xchg
clc
sub
roll
fucomp
nop
addr16
xor
mov
pop
arpl
push
in
test
xor
call
movsb
mov
mov
xchg
inc
test
movsl
jb
in
jae
push
or
xchg
and
repz
jno
mov
xor
cltd
and
push
fbld
mov
call
xor
jne
push
test
adc
cmp
mov
mov
add
cmp
gs
cmpb
or
pinsrw
push
in
mov
xchg
cmp
enter
outsb
ljmp
inc
add
pop
lahf
loopne
dec
out
scas
aas
cmp
sub
stc
rcrl
mulb
cmp
mov
jno
pop
sarb
jmp
mov
sbb
fnstsw
js
mov
iret
jae
mov
test
ret
push
mov
sub
push
leave
xchg
int
mov
cli
pushf
decb
xchg
lods
mov
lret
enter
jae
or
mov
and
xchg
push
fwait
add
inc
jae
adc
jo
adc
inc
mov
xchg
adcl
mov
shll
aad
inc
inc
push
hlt
xchg
push
jl
cmp
inc
idivl
das
loop
out
out
xor
push
mov
paddsb
mov
call
add
mov
lods
arpl
test
add
jge
cmpsl
push
add
mov
rolb
ret
jge
adc
popa
lcall
lods
mov
mov
test
jne
aaa
mov
mov
mov
push
pop
mov
jecxz
lret
mov
outsl
jbe
in
push
int3
cmp
and
inc
fs
and
or
ret
and
fs
jp
insb
inc
loop
jl
stos
push
push
jp
pop
enter
cmc
adc
js
xchg
fs
out
and
das
cmp
or
insb
dec
and
xchg
xor
insl
sbb
inc
mov
repz
or
dec
cmpsl
stos
repnz
dec
addb
add
xlat
push
cmp
push
xchg
sahf
fsubs
mov
in
int
inc
mov
mov
js
jg
gs
add
xchg
aad
inc
sub
insb
push
xchg
jo
icebp
pushf
inc
sub
ror
jns
cmovae
leave
push
in
mov
test
test
fimuls
popf
xchg
sub
gs
jmp
out
push
and
outsb
jbe
ljmp
mov
push
mov
lock
outsl
jae
cs
cmp
sub
cmp
out
ret
std
cmp
nop
lock
sbb
ss
inc
mov
test
stos
pop
insb
xor
xchg
repz
inc
ss
mov
clc
sub
mov
int3
ss
mov
loop
fnsave
orb
dec
data16
inc
lret
in
aam
jp
pop
or
scas
loop
into
jle
jge
das
inc
xchg
or
cld
mov
movsl
push
jae,pn
stos
push
xor
aaa
xor
mov
adc
dec
fcomi
cli
pop
sub
fldt
xchg
popf
out
push
test
lods
xor
xchg
dec
sub
xchg
in
sti
rcl
js
int
mov
es
test
inc
and
cmp
sub
cmp
imul
cltd
jb
out
xchg
push
xor
ds
dec
push
stc
in
loope
lret
int
xor
add
rol
test
xor
cld
out
into
aad
mov
movb
leave
or
test
push
push
sbb
cmp
mov
push
test
ror
test
xchg
add
pop
dec
mov
repz
insl
push
popa
sbb
scas
jg
xor
movsl
push
add
out
ret
popf
cmp
add
push
add
dec
inc
leave
mov
push
fbstp
out
jb
fwait
hlt
xchg
or
or
fidivrl
dec
lahf
cmc
faddl
jae
xlat
in
dec
pop
cmp
mov
cmpsb
test
jp
inc
lea
jp
lret
ss
mov
pusha
std
xor
xchg
shr
outsb
lret
daa
andb
data16
test
push
out
popa
jp
mov
fisttpl
xchg
sbb
int3
clc
stos
mov
roll
lahf
outsl
add
test
pusha
aad
adc
fimull
mov
sub
xor
mov
sub
insl
adc
jecxz
xorb
push
xor
push
sub
fdivrl
xchg
pop
sbb
lods
scas
adc
inc
fsubl
push
push
mov
add
mov
dec
fstl
fcoml
sarl
mov
cmp
inc
lea
cmc
lock
push
mov
mov
lea
in
mov
movsl
ja
mov
mov
mov
sub
sbb
repnz
leave
mov
add
ljmp
dec
fwait
sub
stos
pop
adcl
inc
sub
clc
popf
add
xchg
in
movsl
pop
outsb
ja
repz
repnz
movsl
fistpl
and
pop
mov
push
jmp
arpl
dec
clc
and
rcrl
mov
ret
push
jae
jbe
out
loopne
push
inc
insb
xchg
cltd
pop
sbb
mov
scas
jae
sbb
cmp
comiss
bnd
in
loopne
and
and
shll
and
mull
push
pop
sahf
bound
and
insb
addb
push
dec
mov
inc
xor
sti
xchg
shll
jns
mov
or
shrl
leave
xchg
lods
stos
mov
insb
movsb
lods
pusha
fldl
xchg
push
push
sti
insb
je
and
je
stos
xor
xchg
ret
sub
sub
popf
sub
dec
or
call
xor
dec
xor
sub
cmpsb
xor
loopne
int3
stc
push
movsb
testl
mov
mulps
je
pop
and
pandn
xlat
lods
cmp
xchg
pop
and
inc
sti
jmp
mov
fcomi
dec
dec
sub
xor
std
mov
cmp
popf
lahf
cwtl
insl
push
jge
lea
clc
xor
es
push
mov
jmp
dec
orb
aad
mov
ficomps
or
sub
add
ret
call
shr
mov
jne
aad
call
and
jbe
pop
push
mov
mov
xor
mov
inc
adc
js
sub
lods
mov
pop
pop
ret
out
scas
mov
popf
cltd
cmpsb
lcall
xchg
ret
out
inc
call
jns
cmp
adc
jge
mov
xchg
push
mov
inc
inc
mov
mov
ret
mov
loop
and
nop
iret
hlt
jne
lahf
shr
lahf
mov
lcall
aam
sarl
sub
xor
mov
aas
ficoms
inc
ja
in
dec
shlb
ds
orb
sub
xchg
mov
fdivrs
push
jge
cmpsl
shl
in
jno
dec
out
add
sub
mov
pop
cmpsl
pop
mov
std
test
jp
add
xor
cli
or
ret
std
sahf
or
cmp
in
inc
cmp
shrl
add
test
sub
dec
xor
pop
xor
adc
jmp
sub
sbb
and
aas
cmp
mov
outsl
pop
add
add
in
push
or
or
int
adc
loop
or
xor
sbb
mov
xlat
xchg
mov
arpl
cmp
loope
mov
idivl
addr16
or
push
sbb
popa
xor
js
arpl
pushf
mov
mov
clc
ret
mov
jmp
jp
and
ret
jnp
adc
pusha
lock
mov
ficomps
pop
pop
and
xchg
push
add
jbe
push
xchg
pop
sbb
and
pavgb
clc
arpl
cmp
rcl
addr16
arpl
out
sbb
add
icebp
jbe
jle
inc
repz
xchg
jne
mov
lret
inc
call
pop
xor
outsb
mov
add
int
in
pushf
mov
fcomip
inc
je
pop
or
in
sub
pop
add
addr16
clc
push
or
rolb
ds
loop
jnp
push
popa
cwtl
pop
ficoms
mov
xchg
shr
stos
lahf
cmp
rorb
jo
pop
inc
aam
out
mov
mov
and
leave
gs
jl
loop
aad
and
or
sub
in
sbbl
mov
push
mov
nop
out
daa
int3
cmc
dec
cmp
and
cs
ret
mov
pop
pop
pop
sti
negl
jg
dec
fs
and
out
lcall
mov
xchg
repz
daa
dec
iret
jmp
jns
lret
add
clc
scas
push
xor
jae
loopne
add
xor
push
sub
dec
data16
push
mov
sbb
pop
sbb
aas
stc
jno
pusha
inc
xchg
fstpl
inc
je
sarl
jno
adc
lcall
inc
mov
stos
jo
add
repnz
sub
sti
or
out
jbe
daa
sub
pop
stos
lret
outsb
add
mov
xor
aad
dec
jne
ret
fimuls
jbe
push
pop
imul
jp
stc
bound
jns
ds
fiaddl
dec
pop
mov
testl
ret
cmp
xlat
repnz
mov
sti
fisttpl
dec
mov
mov
icebp
dec
jecxz
jb
jns
pushf
pop
mov
bts
and
jp
pop
push
push
into
push
dec
sti
add
mov
and
mov
xor
gs
arpl
mov
add
outsb
pusha
push
dec
loope
stc
es
ficoms
push
cwtl
mov
xchg
inc
jbe
mov
repnz
mov
pop
sub
fisubrs
and
sbb
push
pop
xchg
inc
jl
jb
jae
add
imul
data16
xchg
dec
push
xchg
jmp
cs
imul
xor
xor
xorl
mov
inc
push
lret
faddl
arpl
jl
mov
dec
sbb
roll
push
out
jo
leave
mov
adc
mov
pushf
rcr
sub
lock
mov
imul
iret
stc
fidivrl
xchg
sbb
mov
cmpsl
imul
push
jmp
mov
inc
cmp
pop
push
ss
xchg
mov
cmpl
in
std
mov
mov
add
int3
mov
pop
lahf
dec
mov
movsl
jge
lret
xlat
je
fdivp
rclb
nop
ret
addr16
loopne
mov
cmp
sbb
int
or
les
mov
out
adc
pop
out
pop
fs
loopne
sahf
outsl
and
cmovl
jmp
jno
movsb
stos
mov
repz
inc
mov
and
shrb
mov
mov
xor
ffree
stc
xchg
je
or
aam
and
sahf
xchg
mov
jl
popf
sbb
ss
call
outsb
sbb
sub
sub
mov
js
cli
and
pop
dec
out
in
lock
inc
test
int3
mov
sahf
cmp
lea
push
add
dec
dec
push
sbb
ljmp
inc
mov
insl
add
push
adc
sti
lret
int3
sarb
mov
fcmovbe
jno
xchg
dec
adc
pop
mov
dec
sbbb
sbb
mov
call
sti
xchg
repz
jge
mov
stos
cmp
jmp
das
rcr
imul
das
mov
push
xchg
adc
xchg
jge
test
jnp
pop
mov
das
pop
movsl
fldcw
jle
cmp
push
xlat
cmp
push
or
sub
repz
pop
aaa
ljmp
sub
out
mov
out
jbe
fists
mov
aam
mov
fucom
dec
cmpsl
or
fbld
jl
fstpl
push
and
mov
xlat
jo
fnstsw
pop
or
test
push
xchg
stc
xchg
loope
sbb
popa
movsb
cmpsb
or
xor
sti
fwait
outsb
inc
or
lea
shr
push
mulb
ret
cltd
adc
push
fdivrl
inc
outsb
xor
xchg
std
cmp
xchg
adc
mov
aad
lret
divl
push
add
adcl
shlb
jnp
addr16
dec
xchg
and
xchg
arpl
cmp
das
inc
inc
or
xchg
cmp
ja
mov
es
xchg
push
cmpl
jns
test
dec
cmp
test
push
mov
sub
adc
in
mov
jl
aam
adc
negl
push
jbe
dec
mov
sbbb
aas
repnz
ss
aas
or
stc
pop
xchg
faddl
int3
jnp
ja
fcmovne
jl
xor
jge
cmpsb
repz
and
add
jae
sub
rcl
inc
test
fldt
out
cmp
xchg
loope
inc
jae
or
jnp
out
test
gs
add
pusha
daa
jno
xor
lds
xchg
fwait
sbb
orb
jnp
mov
popa
insl
pop
movsl
pop
outsl
pop
cmp
jl
inc
aaa
push
rorl
aam
mov
mov
aaa
lods
mov
and
lahf
ret
das
mov
dec
push
aad
lods
jecxz
dec
in
jle
std
test
jg
sub
xchg
mov
xor
dec
push
ret
mov
inc
xor
push
ja
sahf
mov
sbb
stos
or
inc
ss
test
pop
int3
inc
xlat
fisttpll
mov
adc
icebp
nop
fldt
xchg
std
and
adc
xchg
jno
inc
lods
bound
or
je
stos
arpl
pushf
mov
cs
lds
mov
or
push
lods
cmp
jnp
sub
sub
insl
push
mov
jle
sbb
push
fwait
jb
jp
lods
std
pop
inc
lahf
mov
hlt
inc
pop
popf
roll
xor
cmc
mov
sbb
mov
mov
mov
aaa
ds
mov
into
outsb
dec
sahf
int3
mov
xor
mov
lcall
lret
cmpsl
loope
push
scas
cmp
and
pop
lods
clc
cmp
jae
mov
loopne
pop
ret
jns
test
or
sub
lods
shrb
pop
sbb
add
mov
in
push
jno
mov
cld
imul
roll
xchg
aam
and
cmpsl
loope
adc
outsb
loop
movsl
popf
adc
pop
mov
stos
cmp
xchg
neg
jno
inc
fabs
xchg
loope
lods
mov
fmul
gs
pop
cmpsb
xor
xor
add
jo
mov
adc
notb
or
xor
outsl
sbb
out
outsl
push
push
insb
popf
jecxz
stos
aam
testb
dec
lcall
inc
mov
jp
and
push
xor
dec
test
push
movups
inc
sar
mov
or
cwtl
out
sarb
adc
outsl
xor
mov
arpl
xchg
xchg
popa
jno
addb
mov
mov
sub
jo
imulb
xor
jnp
sbb
ja
xchg
int3
jmp
xor
adc
mull
mov
xor
fildl
xchg
jae
lock
sub
push
xchg
aaa
or
adc
dec
aas
add
stos
movsl
icebp
add
or
ja
iret
add
push
mov
lds
scas
xor
shlb
add
ds
or
dec
insb
push
orl
aad
out
ja
sub
sub
icebp
push
aad
inc
mov
push
sbb
xchg
sub
jne
and
fstpt
out
xchg
orb
push
pop
mov
pop
add
aas
xor
inc
lea
xor
lds
je
dec
inc
test
mov
inc
adc
sub
lcall
fimuls
stos
out
or
clc
mull
mov
fdivrs
jne
hlt
incb
dec
sbbl
or
xchg
push
push
lahf
cmp
test
dec
dec
ljmp
jnp
inc
dec
cmp
pop
jmp
adc
popa
sarl
ds
adc
mov
xor
xor
fucomip
dec
jns
mov
dec
pop
or
movsl
mov
jbe
push
sbb
hlt
loopne
hlt
adc
dec
sbb
add
sub
pop
fistpl
fmull
mov
xchg
into
arpl
mov
test
fbstp
in
fninit
and
testl
push
jb
shl
dec
pop
scas
mov
or
or
sbb
pop
cmp
arpl
jp
sub
mov
mov
jo
inc
adc
rclb
jecxz
pop
jg
scas
stc
push
int
xlat
dec
int
imul
push
sbb
hlt
in
dec
and
inc
sbb
ss
sub
add
jb
mov
daa
nop
push
dec
push
lock
add
and
fstps
mov
cld
adcl
pushf
mov
pop
jmp
push
test
jae
out
or
or
pop
outsb
pop
call
ss
xchg
xor
push
bound
add
pop
xchg
adc
dec
mov
dec
sbb
jp
mov
fidivl
shl
fwait
or
and
dec
cs
sub
fidivrl
push
aaa
add
stos
arpl
mov
fwait
xchg
clc
jb
cmpb
xor
dec
cmp
notl
shlb
cmp
cltd
sub
mov
arpl
jno
std
or
xchg
jae
sub
sahf
int
inc
mov
xchg
jp
clc
repz
xchg
ret
ds
jp
pop
jnp
adc
cmp
gs
dec
mov
insl
into
cltd
cmpsb
sbb
mov
sbb
shl
aas
rclb
loop
leave
stos
sub
dec
adc
leave
arpl
leave
cmc
mov
popf
pusha
inc
pop
movsl
inc
lds
mov
xor
stos
in
cmp
sbb
mov
ljmp
push
rorb
pop
out
jbe
mov
insb
rorb
sbb
cmp
call
fmull
notl
and
test
inc
out
lock
cmp
dec
mov
dec
pop
jg
cmp
dec
mov
testl
loope
mov
sbb
jno
mov
push
hlt
cmpb
inc
fucomip
aam
icebp
adc
push
bound
inc
out
les
sbb
inc
insl
in
int
and
lods
push
sub
mov
mov
sbb
push
inc
cmp
adc
push
mov
cwtl
das
adc
sbb
push
or
add
in
sbb
sbb
fmuls
mov
mov
lods
inc
inc
xor
sub
outsl
push
imul
push
stos
mov
jnp
shlb
mov
lret
jg
xlat
aam
mov
sti
mov
push
xchg
nop
lcall
into
repz
fbstp
xchg
movsl
call
cmp
add
mov
idivb
mov
inc
test
inc
push
cmpsl
mov
or
jg
cmp
js
cmpsb
lret
mov
push
mov
push
rcll
cli
xchg
or
and
enter
out
sbb
lret
shrd
inc
test
test
sub
addr16
in
xchg
push
hlt
or
and
dec
or
leave
sub
test
loopne
cmp
adc
pop
inc
stos
loope
add
aaa
je
fldenv
push
cwtl
jmp
mov
lret
insb
xchg
mov
nop
rorl
fisttpl
daa
xor
mov
lods
sarl
push
fwait
pop
nop
push
push
push
push
mov
push
sub
mov
adc
sti
je
or
mov
pop
test
sti
jnp
ret
mov
and
xor
push
cmc
int
stos
mov
mov
mov
inc
pop
sub
mov
mov
rcrb
gs
push
adc
mov
sahf
inc
jmp
xor
arpl
js
scas
xchg
cmc
push
xchg
inc
and
inc
les
jns
adc
mov
imul
adc
mov
jecxz
jge
std
stos
sti
jmp
js
pop
inc
arpl
adc
cmp
jp
imul
in
or
divl
popa
xchg
cmp
insl
lcall
test
or
sub
fsubrl
jb
dec
xor
push
inc
inc
jb
scas
dec
inc
add
outsb
mov
adc
xor
lods
inc
aad
jo
cmp
rclb
sbb
insl
aad
lahf
xlat
imul
add
pop
adc
fs
dec
and
pop
cmpsb
jecxz
cmp
xor
xor
push
repz
xor
xchg
push
pushf
frstor
push
xchg
mov
jmp
or
jecxz
mov
pop
adc
xchg
inc
stos
cmp
arpl
cmp
outsb
in
jnp
dec
cwtl
jne
xor
ret
mov
mov
stos
mov
cmp
pop
cmpsb
xchg
mov
out
cmp
jbe
addr16
pop
mov
adc
test
mov
call
inc
sahf
xchg
out
push
or
mov
rorb
jne
dec
test
and
sub
mov
dec
call
nop
sub
jne
cltd
cs
add
loop
fcoms
pushf
fidivrl
out
mov
jae
or
pop
mov
out
out
push
lret
xchg
or
dec
mov
aas
sub
imul
ljmp
addr16
cld
mov
and
add
sbb
mov
or
adc
inc
sub
shrl
test
jo
int
into
aad
outsb
lock
sub
movsb
addr16
imul
fldl
mov
dec
loope
je
sti
enter
adc
inc
int
inc
xor
gs
mov
iret
xor
pop
aaa
push
or
call
insb
or
clc
pop
cmp
rcrb
xchg
sbb
push
call
popa
pop
hlt
sub
xchg
mul
and
scas
and
mov
test
mov
daa
popf
mov
jo
mov
pop
add
xor
sub
mov
enter
mov
outsb
xorl
sub
stos
or
and
cmp
jl
in
iret
scas
sub
mov
movsb
inc
scas
aam
mov
stos
mov
dec
imulb
fdivrs
into
push
iret
jle
pusha
push
addr16
aad
addr16
aas
or
sbb
adc
mov
hlt
call
mov
sahf
outsb
add
fucomp
sub
cmp
sub
sbb
sbbl
incl
add
lea
and
movzbl
mov
dec
xchg
mov
lea
and
mov
xor
dec
movzbl
dec
dec
inc
dec
dec
dec
jne
add
mov
dec
mov
pop
or
and
pop
lea
sub
pop
movzbl
mov
dec
lea
add
dec
dec
inc
mov
imul
mov
add
ret
push
push
lea
mov
push
add
xor
imul
dec
dec
mov
push
inc
inc
add
and
push
mov
or
or
mov
inc
movzbl
mov
push
lea
mov
imul
push
movzwl
dec
xor
inc
imul
push
imul
mov
push
mov
sub
pushl
add
call
lea
add
movsbl
inc
mov
mov
imul
sub
dec
pop
ret
dec
inc
cmp
jb
mov
xor
imul
sub
mov
dec
mov
mov
movzwl
sub
inc
imul
lea
sub
inc
sub
mov
dec
cmp
jb
inc
pop
add
sub
xor
sub
dec
add
add
add
add
sub
dec
inc
xor
imul
dec
xor
add
dec
mov
lea
or
test
jbe
movswl
mov
inc
add
mov
inc
add
sub
mov
mov
sub
xor
and
dec
mov
mov
and
imul
movzbl
mov
xor
add
and
mov
and
dec
mov
mov
lea
mov
mov
inc
xor
mov
imul
imul
mov
mov
and
inc
mov
mov
mov
dec
jne
add
mov
lea
dec
mov
inc
inc
dec
xor
inc
add
dec
mov
imul
inc
imul
mov
inc
movzwl
movzwl
inc
mov
dec
lea
test
jbe
inc
sub
mov
sub
add
mov
add
mov
mov
add
mov
inc
dec
mov
or
inc
movzbl
dec
dec
add
xor
and
and
and
movsbl
mov
and
movzbl
movzbl
mov
dec
add
xor
mov
and
xor
add
mov
lea
sub
movzbl
imul
lea
mov
inc
mov
mov
mov
movsbl
movzbl
dec
mov
add
inc
jmp
push
dec
lea
mov
lea
dec
inc
imul
dec
add
movswl
imul
inc
dec
movzwl
add
inc
dec
mov
and
imul
add
movzwl
inc
lea
imul
xor
mov
mov
lea
inc
add
inc
movsbl
add
dec
movzwl
movzwl
lea
sub
cmp
je
movzwl
dec
inc
push
and
call
call
lea
dec
call
call
sub
sub
mov
xor
lea
dec
sub
ret
lea
inc
pop
mov
ret
push
imul
inc
mov
lea
mov
push
mov
lea
push
dec
push
xor
push
add
inc
mov
inc
movzbl
call
and
push
and
mov
xor
inc
sub
add
neg
mov
movzbl
dec
dec
inc
sub
mov
or
sub
mov
dec
movzbl
inc
and
dec
dec
je
inc
dec
lea
mov
inc
mov
mov
mov
mov
inc
lea
repnz
lea
lea
add
mov
jmp
inc
inc
inc
add
dec
sub
add
dec
imul
lea
inc
movzwl
mov
inc
jmp
mov
add
xlat
insl
sub
inc
mov
pop
sub
data16
pop
inc
xchg
pop
xor
add
cmpsl
dec
lcall
rcll
imul
es
adc
pop
ljmp
push
cmp
mov
cmp
loop
aad
cltd
lret
repz
push
xchg
das
inc
repz
inc
outsl
nop
repz
incb
adc
cmpsl
push
lahf
dec
inc
fcmovne
and
xchg
leave
addr16
fwait
int3
pop
test
pop
jl
scas
nop
inc
mov
jp
add
mov
add
das
or
insl
pop
test
pop
fdiv
imul
mov
fisttpl
repz
test
cmp
jno
xchg
hlt
cmpsb
into
mov
scas
popf
mov
cmpsl
push
adc
mov
js
fsubl
dec
sbb
imul
cmp
inc
dec
push
scas
and
out
sub
dec
and
add
sub
int
stos
movsb
xor
cmp
gs
sbb
jae
popf
pop
xor
cltd
add
and
movsb
decb
inc
repnz
and
add
out
and
and
popf
dec
push
sbb
mov
leave
inc
test
cwtl
orb
sbb
mov
sbb
or
jne
iret
fcompl
sbb
mov
mov
add
fwait
ljmp
or
inc
mov
inc
adc
add
jnp
lock
dec
mov
add
sub
push
int
inc
popa
push
mov
add
arpl
sub
sbb
sbb
lahf
pop
pop
mov
mov
stos
cltd
sbb
negb
aas
dec
imull
pop
dec
imul
push
mov
inc
lret
or
mov
add
and
sub
bnd
stos
add
fcomps
or
movsl
jns
pop
adc
mov
mov
shrl
jp
xchg
xor
add
add
xchg
push
les
push
mov
cmpsl
icebp
sarl
add
inc
pop
mov
or
dec
push
les
xor
out
orb
stos
in
cli
ds
add
jbe
jo
std
push
mov
mov
and
das
inc
mov
jle
mov
ljmp
adc
mov
in
cmp
ficoml
cwtl
and
adc
dec
outsl
mov
and
or
mov
cmp
repnz
cli
ret
hlt
out
outsl
cmp
in
xchg
push
cmpsb
adc
xchg
jns
lea
push
fcomps
rcrb
xor
test
hlt
xor
push
pop
pop
cli
pushf
popa
pushf
je
lea
jle
or
or
dec
mov
cmpb
lds
adc
or
ss
int3
xor
loope
adc
push
std
push
cmp
inc
and
dec
xor
cld
xor
lcall
xor
push
dec
xchg
out
jle
pop
xlat
stos
scas
loope
xor
inc
cwtl
ss
push
adc
icebp
std
jle
mov
mov
mov
scas
mov
lahf
jmp
inc
loopne
or
mov
dec
jg,pn
lret
js
mov
mov
ja
add
mov
sub
xor
add
je
jns
adc
sbb
sub
fcmovu
pop
mul
sarl
fistl
xor
adcl
je
stos
or
mov
mov
jle,pt
je
pop
mov
sbb
into
subb
xorb
movsl
rorb
scas
sub
lcall
and
imul
mov
daa
xor
jp
inc
jge
gs
jp
outsl
movsb
dec
mov
mov
jno
loop
add
push
xchg
into
loop
int
movsl
xor
stos
sbb
cltd
and
imul
out
or
pop
xchg
sti
sub
fwait
mov
mov
mov
in
push
rorb
push
xor
inc
das
inc
xchg
out
cmc
push
add
sbb
xor
and
fsubs
sub
dec
sub
and
addr16
mov
cmp
sbb
jle
test
sti
sub
and
cli
test
and
or
xchg
mov
daa
jno
xchg
cmp
repz
jl
push
jecxz
bound
pushf
mov
icebp
imul
jnp
dec
icebp
stos
mov
push
movsb
and
sbb
in
mov
mov
jns
and
pop
jne
cmp
je
imul
andl
lret
mov
mov
outsl
and
loop
mov
push
cltd
push
or
lods
xor
gs
stc
testb
inc
or
std
push
adc
mov
adc
arpl
rcrb
fstpl
sbb
inc
cmp
andl
pop
ret
and
adc
lahf
ret
mov
aam
dec
sbb
out
sub
fdiv
add
push
mov
ret
scas
adc
je
or
mov
jne
clc
fcomps
mov
adc
andb
std
cmp
insl
jle
xor
in
fcoms
dec
js
jecxz
enter
stc
cmp
xchg
xor
rorl
jle
inc
mov
xor
cmp
insl
imul
jae
cmpsl
popf
cwtl
shll
cmp
inc
inc
fists
iret
test
enter
adc
and
jmp
or
testb
xchg
xor
movsb
cmp
out
pop
in
inc
xor
mov
cld
inc
pop
lcall
sub
push
stos
and
cmp
xlat
mov
lret
push
mov
mov
mov
ss
cmp
xchg
inc
dec
adc
jl
test
sbb
aaa
sbb
mov
dec
sahf
jp
or
pop
ror
mov
fidivrs
pushf
popa
pop
sti
ret
push
push
mov
jbe,pn
stc
mov
add
xchg
pop
fisttpll
stc
xchg
out
je
lret
mov
sub
mov
cld
popf
imul
mov
push
pop
in
push
pop
inc
dec
popa
repnz
xchg
xor
dec
jge
icebp
jb
and
btc
xchg
fisttps
mov
into
mov
mov
std
shll
inc
add
push
shlb
xor
jnp
test
sbb
shll
inc
lods
js
pop
push
js
xor
jns
loope
in
xlat
imul
add
xchg
fdivr
pop
loop
cwtl
xor
repz
dec
std
xlat
loop
and
xchg
das
les
divl
es
pop
lea
mov
jge
std
xchg
and
add
mov
xchg
dec
pushf
jb
imul
cs
jmp
hlt
stc
cmp
mov
push
mov
mov
addr16
cmc
sbb
jg
pop
fldl
test
cmp
jecxz
mov
sub
cmp
lea
inc
sbb
loope
stc
lock
ljmp
hlt
inc
jb
pop
pop
lret
inc
movsl
outsl
pop
je
in
pop
and
insl
and
and
subb
movsl
pop
push
adc
sti
pusha
xchg
pop
shl
stc
inc
adc
xor
mov
push
add
push
inc
sahf
lret
aaa
cmpsl
stos
movsb
icebp
lret
cmp
or
push
cmpsb
insl
enter
xor
andb
js
fidivrs
loope
sbb
xor
js
and
xchg
lods
rcrb
lahf
mov
jmp
cld
stos
popa
outsb
inc
andl
dec
shrb
ret
sbb
jg
add
clc
mov
leave
sarl
xlat
lods
call
pop
or
jmp
test
and
sahf
clc
loop
sbb
sarl
sarl
pop
shlb
incl
push
in
nop
ja
fsubp
jb
push
xorl
insb
sub
adc
je
fidivl
xor
loope
arpl
adcb
dec
mov
cmpsl
mov
adc
cld
mov
mov
int3
fcmovnu
sti
push
push
hlt
rolb
icebp
enter
sbb
repz
push
jmp
add
pop
imul
jb
pop
repnz
or
push
mov
sbb
add
adc
iret
or
hlt
adc
push
fxtract
fiadds
inc
mov
fstpl
or
sti
push
stos
insl
pop
xor
jnp
shrl
lock
push
dec
imul
cs
test
lock
cmp
imul
cli
in
repz
sbb
fidivl
jae
xchg
cmpsl
out
lds
sbb
in
push
xlat
xchg
xor
push
test
fistl
mov
jnp
push
inc
in
push
xor
in
ret
push
xchg
aaa
fwait
imul
push
iret
lds
pop
inc
mov
jne
jnp
test
mov
ljmp
xchg
imull
sbb
bound
push
cltd
mov
mov
sbb
fmull
xchg
fsubrl
sahf
or
push
add
andb
mov
imul
jbe
push
mov
pusha
push
aas
xlat
dec
and
inc
rcrl
fcmovb
out
sbb
mov
stos
bound
rclb
mov
cmp
pop
pop
inc
cmp
testl
iret
int3
loope
gs
inc
fs
push
pusha
lret
ds
fdivs
into
cmp
jno
lcall
push
mov
push
xchg
inc
mov
sahf
xchg
jo
or
cli
add
jp
sbb
inc
cs
loope
jno
mov
leave
sbb
fistps
scas
loopne
movsb
xor
xor
lods
fcoms
push
inc
cmp
sub
adc
jnp
les
xor
insb
aaa
adc
lcall
cmpsl
repz
scas
movb
jg
push
xor
repz
dec
stos
push
rcrb
cmpl
fwait
pop
lret
ss
push
not
sub
out
sub
outsb
mov
sub
das
inc
cmpsl
sub
or
gs
sub
mov
stc
into
jb
lods
sub
mov
or
push
dec
cwtl
mov
cs
mov
gs
cmpsl
in
mov
std
push
sub
add
jecxz
adc
adc
int
dec
loop
insl
xchg
push
add
dec
dec
ret
outsl
adc
xchg
or
ss
enter
cld
lret
ffree
mov
pushf
or
sbb
repz
notl
mov
in
mov
xor
imul
fstps
or
push
xor
stos
mov
jns
or
ss
xor
mov
mov
push
fs
sahf
jmp
sti
pop
dec
addr16
mov
stos
cmp
inc
mov
xor
sbb
mov
movsl
roll
aad
fnstenv
xor
push
rorb
pop
fucomip
pop
shr
mov
xchg
mov
pop
xchg
dec
cmp
jle
in
cld
fcompl
sbb
bound
add
xlat
clc
pop
add
inc
inc
add
call
mov
xor
or
idivl
fsts
je
pop
jg
push
jnp
scas
mov
mov
cmp
test
out
jg
add
xchg
outsl
jnp
add
and
daa
push
inc
pop
inc
cltd
jmp
or
stc
xor
inc
imulb
scas
setne
xor
ret
adc
xchg
shll
mov
add
movsb
cmp
sbb
and
popa
int3
sahf
adc
cmp
pop
lret
lret
daa
jnp
shr
lods
int3
mov
fwait
shl
shlb
sahf
xlat
arpl
push
nop
jbe
fs
fisubrs
dec
std
test
adc
arpl
and
and
loopne
fbld
negl
jg
jnp
popa
jnp
clc
das
vorpd
sbb
lock
fs
popa
out
cmp
sti
popa
fcomps
jb
jno
mov
cmp
xchg
out
jge
jp
stc
sar
sbb
pushf
movsl
lahf
xchg
aad
lods
add
adc
dec
loope
or
repnz
mov
sbb
lods
mov
cmp
add
and
mov
xchg
and
ret
fidivrl
movsb
mov
mov
outsl
hlt
mov
and
or
mov
movsb
pop
insb
mov
inc
sahf
xchg
fs
push
or
mov
into
mov
jae
cmp
sbb
scas
pop
mov
pop
stos
out
push
sub
ja
mov
leave
mov
js
cmp
hlt
inc
fs
mov
mov
cmp
mov
inc
and
pop
or
inc
jno
dec
cld
ja
adc
jl
mov
cwtl
jge
jle
jae
lret
aaa
mov
mov
jno
inc
mov
lahf
outsb
jmp
xor
popa
sub
mov
test
repz
add
and
dec
insb
pop
cmpsb
xchg
pop
insl
shl
lods
jg
aaa
jl
push
dec
sub
add
imul
cmp
cld
and
in
sahf
push
mov
dec
mov
rolb
pop
ret
das
nop
fcmove
daa
mov
cmp
scas
stc
sbb
pushf
xchg
loopne
je
pop
fs
or
and
add
sbb
mov
addr16
call
pop
mov
mov
imul
aam
inc
mov
inc
sbb
mov
mov
hlt
pop
xchg
xlat
push
inc
jnp
adc
mov
shrl
cld
jp
mov
shll
divl
cltd
cmp
cmc
mov
ds
je
iret
xor
sub
jnp
lods
fstpl
mov
or
jp
gs
push
sbb
outsb
inc
pop
aaa
mov
fidivrs
mov
stos
loope
aas
pop
fisubrs
dec
aam
inc
jo
jl
into
cmp
dec
push
je
sbb
adc
xor
daa
push
enter
insb
fmull
push
mov
es
dec
add
mov
dec
ret
into
dec
rol
pop
cmpsb
idiv
sti
test
lods
push
icebp
fnstcw
xchg
test
pop
fnsave
xor
and
mov
stc
mov
xchg
testb
mov
ror
int3
lock
sahf
std
xchg
pop
cwtl
mov
outsb
pop
xlat
outsb
mov
push
mov
or
lea
call
lea
imul
call
inc
push
dec
call
dec
inc
dec
lea
mov
dec
call
imul
dec
add
dec
inc
xor
lea
mov
dec
imul
add
dec
xor
call
add
add
or
movsbl
lea
call
imul
call
movzbl
mov
mov
xor
and
or
dec
lea
mov
pop
sub
imul
add
mov
pop
sub
dec
pop
xor
mov
dec
add
pop
lea
and
add
xor
dec
imul
sub
sub
pop
dec
sub
pop
sub
mov
mov
inc
mov
call
add
and
inc
mov
ret
add
imul
push
mov
mov
push
sub
lea
push
lea
inc
push
add
and
push
inc
imul
mov
mov
push
ret
push
add
push
mov
movzwl
mov
mov
push
inc
dec
lea
call
pop
ret
jmp
mov
sub
pop
pop
ret
push
add
dec
imul
add
or
or
inc
mov
and
add
mov
dec
inc
lea
xor
add
lea
add
inc
or
lea
or
dec
inc
xor
pop
ret
sub
dec
mov
inc
mov
mov
and
mov
mov
inc
mov
mov
add
mov
xor
add
imul
mov
add
add
inc
sub
imul
mov
or
sub
lea
cmp
jb
inc
push
mov
imul
push
imul
dec
push
and
dec
xor
inc
lea
xor
lea
movswl
xor
add
lea
push
mov
add
push
add
and
pop
movsbl
lea
mov
sub
imul
mov
sub
dec
inc
xor
xor
or
mov
movsbl
dec
mov
dec
inc
movzbl
inc
dec
xor
add
imul
and
add
add
lea
movzbl
dec
inc
xor
add
lea
dec
inc
add
add
mov
dec
and
or
jmp
add
inc
add
pop
add
dec
enter
adc
add
daa
inc
add
fiaddl
jg
add
dec
pop
inc
add
movl
add
adc
mov
sbb
and
test
or
fsubrl
movsl
sub
divl
in
pop
repz
shrl
pusha
pushf
scas
in
insl
stc
sbb
int
and
adcl
cwtl
xor
cmpsb
sub
leave
push
lret
pop
lods
sbb
ljmp
mov
inc
inc
dec
add
lret
add
mull
in
test
jecxz
jo
loopne
cs
jmp
lahf
dec
sbb
dec
mov
cmp
aam
das
inc
shr
push
das
cmp
mov
loope
dec
adc
imul
xchg
pop
pop
jnp
push
mov
and
test
test
mov
stc
mov
les
ds
xchg
and
mov
cmpl
mov
xlat
hlt
adc
dec
or
push
lea
bound
jns
xorl
mov
call
add
cmpsb
or
test
out
xchg
dec
adc
ret
hlt
les
and
cmp
ror
data16
out
enter
cmp
xchg
in
fidivrs
mov
cld
and
dec
leave
jno
lods
outsb
add
into
push
dec
mov
xchg
pop
fcoml
mov
loope
leave
push
and
loope
popf
jo
mov
sub
cmp
jb
xchg
pop
jge
movsl
je
outsl
mov
sarl
add
push
fmull
add
repnz
add
push
sti
cmc
dec
sbb
or
orl
cld
mov
subb
push
cmp
scas
inc
mov
sti
pushf
jg
in
mov
mov
rolb
enter
das
aad
cmpsl
cmc
fstpt
push
test
jg
jecxz
jne
and
xchg
add
mov
push
mov
loopne
js
clc
jge
iret
jmp
ret
in
cs
or
adc
dec
into
imul
pop
jnp
lds
sub
push
dec
jne
out
sub
pop
jns
jp
icebp
push
test
lods
xchg
inc
lcall
popa
stc
repnz
movsb
dec
lret
mov
ja
sti
cltd
cs
fldt
sahf
orl
dec
xor
in
mov
ja
aam
cld
or
dec
xchg
dec
sub
or
push
xor
rorb
pop
mov
mov
pushf
mov
xchg
jb
push
mov
fldenv
cltd
xor
shlb
cmp
repnz
mov
je
cmc
scas
push
inc
and
int3
pop
daa
stos
out
push
sti
jmp
mov
pop
dec
inc
xchg
mov
xchg
cmpsb
xchg
add
iret
stos
pop
xlat
popa
mov
push
jp
cmpsl
ror
scas
int
adc
xor
adc
xchg
push
mov
push
jle
mov
clc
leave
out
xlat
mov
call
bound
fimuls
xchg
std
jle
mov
sub
sub
sti
ljmp
xor
aad
lock
pusha
test
mov
mov
xchg
fdiv
sub
fwait
sahf
cltd
test
int
dec
mov
cld
dec
mov
dec
adc
push
pop
gs
or
fs
jnp
xor
addr16
addr16
lcall
mov
ljmp
mov
lcall
jo
daa
mov
jp
arpl
jo
inc
rolb
test
loopne
push
cmp
sbb
dec
xor
sub
shlb
mov
rorb
addb
shll
test
xor
adcl
testl
xchg
push
mov
fnstcw
scas
jnp
mov
jne
daa
lcall
fnstsw
jbe
sbb
lods
js
arpl
xchg
add
dec
adc
pop
idivb
push
mov
xor
jle
add
icebp
sbb
add
inc
push
dec
cmp
movsl
fdivrs
ret
aam
stos
jae
lea
or
dec
or
push
mov
ret
inc
shr
mov
adc
inc
test
lret
loopne
fwait
jns
lcall
xchg
pop
lock
out
add
in
test
push
scas
imul
das
or
mov
cmpsl
add
sbb
loop
xchg
add
inc
shlw
or
test
repz
jg
cli
add
lahf
push
push
jp
je
jo
pop
dec
fwait
adc
jg
notl
cwtl
sbb
sub
pop
call
push
push
or
add
inc
mov
or
sar
outsb
mov
repnz
nop
mov
dec
in
ficoml
add
jge
adc
aaa
dec
insb
lret
inc
pop
jns
mov
and
int3
mov
push
mov
js
cld
movsl
sbb
cmpb
lods
xchg
push
or
pop
lods
dec
inc
pop
fnstcw
outsl
add
cwtl
cs
push
pop
push
sti
loope
pop
fucomp
or
jns
orl
lds
popf
fsubl
std
sysexit
fimuls
sbb
add
js
xlat
jo
or
mov
int3
inc
sub
das
jmp
adc
xor
cli
xor
mov
jo
fldt
sbb
mov
pop
mov
or
adc
mov
sub
call
arpl
inc
popf
push
cli
add
das
fwait
or
enter
dec
fsub
mov
cmp
xchg
stc
inc
inc
imul
ja
lcall
adc
dec
jecxz
push
pop
mov
das
jge
mov
outsl
ss
popf
inc
inc
repnz
sbb
xor
out
insb
xchg
outsb
lds
xchg
xchg
mov
test
jmp
push
bound
sarb
or
pop
add
or
mov
pop
xor
mov
pop
mov
pop
mov
bndstx
inc
dec
add
push
loope
cli
sub
dec
jecxz
mov
fldenv
sub
lret
subb
pop
adc
add
dec
test
cmp
aas
enter
into
lds
inc
mov
inc
xor
repnz
push
std
jb
subb
mov
cmp
loop
cmp
pop
sbb
leave
jnp
or
mov
cmpl
sub
test
shll
adcb
pop
jg
push
mov
sahf
lret
or
jns
push
in
jne
jle
mov
mov
ret
jp
and
fldenv
outsb
mov
shlb
or
cmp
sbb
xchg
dec
or
jmp
mov
and
out
fistl
insb
cld
push
lret
jae
subb
inc
lret
xchg
dec
dec
xor
fistpll
out
pop
mov
jl
jle
mov
or
mov
lods
fdivrl
xchg
ret
mov
iret
hlt
jecxz
adc
ret
mov
stos
mov
mov
xchg
jbe
bound
jae
add
pop
into
mov
mov
movl
stos
cmp
orb
mov
inc
xor
int
cmp
xchg
fwait
pusha
sbb
pusha
dec
pop
or
dec
push
pop
push
adc
sbb
pop
or
mov
and
mov
pop
cltd
jb
mov
and
xchg
add
cmpsb
mov
testb
cltd
push
dec
jp
xchg
push
int
stos
lret
xchg
push
pop
test
mov
add
scas
add
add
lock
pop
aaa
call
pop
lahf
dec
mov
pop
mov
pop
sub
xchg
mov
or
push
mov
pop
je
push
push
push
jmp
movsl
popf
aad
fcomps
jecxz
cmpsl
sbb
fildll
or
scas
ret
mov
jg
rcrl
nop
xacquire
cmp
cmp
push
adc
aaa
or
shl
nop
cltd
dec
and
adc
jnp
repz
push
mov
hlt
xorl
stc
mov
stos
js
pop
jmp
xor
jge
add
lret
jb
mov
jnp
test
mov
sahf
mov
push
out
sbb
adc
sti
stc
es
lret
imul
out
popf
cmp
mov
mov
sub
push
cmp
test
add
pop
mov
adc
mov
sbb
lahf
cmpsl
rcrl
sbbb
insl
fstpl
jp
loopne
xchg
call
aaa
mov
dec
std
out
push
xor
inc
ret
stos
popf
adc
int3
test
sub
mov
mov
shll
push
pop
ret
out
enter
add
repz
out
outsl
pop
inc
jns
stc
pop
inc
add
pop
mov
mov
out
and
lret
in
xor
mov
pop
pushf
push
push
sbbb
dec
pop
cmp
subl
imul
dec
fwait
outsb
rol
sbb
scas
jae
mov
cwtl
fs
jle
hlt
ja
mov
andl
mov
popf
cltd
xlat
mov
nop
jle
sub
push
lret
add
jb
outsb
incl
push
fsubrs
pusha
jg
leave
pop
ja
dec
xor
xchg
and
fiadds
test
and
mov
mov
insl
lcall
add
xchg
add
repz
mov
mov
xchg
cmp
mov
mov
cmp
sti
pop
repz
xchg
jmp
jb
inc
xchg
push
fwait
lahf
sbbl
lahf
ljmp
les
das
mov
push
inc
fs
cmpsb
cld
fstl
sbb
fidivrs
dec
imul
out
sbb
les
sbb
clc
addl
cmpsb
mov
jbe
push
fsts
mov
mov
movsb
dec
jmp
bound
add
adc
xor
pop
cmp
sub
adcl
adc
sub
inc
push
lahf
push
in
fs
jle
adc
data16
pop
jo
dec
sub
mov
sub
pop
fidivrs
out
movsb
cmp
fcomps
pop
inc
pop
rorl
hlt
pop
add
ret
mov
lahf
cld
inc
mov
and
in
movb
pusha
jb
outsl
stos
inc
adc
sahf
inc
rcll
inc
fists
jg
jp
mov
adc
in
dec
dec
pop
sqrtps
xlat
aas
ud2
leave
or
dec
sbb
int
cmp
insl
not
test
xchg
aas
aad
sub
push
adc
icebp
dec
daa
xchg
cmc
in
fdiv
pop
sbb
movsl
push
das
jge
aad
loop
mov
lods
rolb
shll
les
cld
adc
jmp
test
lock
pop
in
and
jb
ret
test
sbb
into
mov
cs
mov
jb
sub
ss
adc
xor
add
add
or
mov
scas
jnp
mov
rcll
int3
and
loopne
es
mov
mov
rcll
cmpsb
in
xchg
cld
and
push
mov
cmp
loop
hlt
ds
rcll
xor
ljmp
jno
popa
in
out
or
shlb
sub
cmp
or
cmpl
adc
out
ret
cmpsl
outsl
pop
ja
js,pt
inc
outsb
and
xchg
xchg
sti
xlat
inc
shlb
sub
aad
jo
mov
xor
push
inc
repnz
movsl
fwait
pop
jge
ja
push
cmp
ror
stc
repz
add
popa
das
dec
sub
dec
out
lahf
cmp
and
out
lea
subb
lds
xor
add
sub
insb
xor
push
cmp
mov
inc
arpl
dec
sarb
movsb
clc
int
int3
pop
icebp
dec
addb
mov
iret
push
out
stc
push
je
cmpsl
xchg
fiaddl
icebp
xlat
andl
mov
stos
inc
mov
xor
push
mov
mov
xor
jb
pop
popa
lods
xchg
add
js
mov
je
add
dec
push
data16
sub
cltd
sti
pushl
sub
fwait
push
add
aad
mov
loope
ljmp
sarl
ljmp
xchg
push
cmc
sbb
sbb
fwait
ja
xchg
pop
mov
or
adc
fs
in
add
xchg
pop
in
mov
mov
dec
push
rolb
fistpl
or
add
dec
xchg
jae
mov
lods
mov
inc
xor
outsb
in
ss
pop
pushfw
and
and
push
enter
jmp
jo
add
jns
add
out
push
fmulp
mov
repnz
dec
sub
mov
sub
inc
into
sbb
inc
out
hlt
ja
cs
xor
daa
out
push
or
add
mov
or
icebp
movsl
gs
dec
mov
out
sub
or
popa
dec
int3
lock
dec
jge
rorb
inc
pop
fxtract
cmpsl
mov
mov
ficoml
lods
cltd
xor
inc
sahf
or
dec
inc
out
cli
ja
pop
xchg
pushf
xlat
xor
jb
push
aas
jmp
jmp
push
je
cmc
jns
iret
daa
inc
sbb
out
pushl
pop
mov
lock
xor
push
fisubs
pop
mov
je
add
mov
sbb
mov
inc
xchg
test
mov
sub
dec
and
xchg
aas
mov
jns
jnp
popa
jbe
in
or
leave
sbb
outsl
repz
mov
cmp
js
rorl
in
add
ljmp
cmp
shufps
xchg
push
clc
dec
neg
outsb
shll
cli
mov
lea
ret
outsb
vucomiss
inc
mov
mov
push
lea
jmp
hlt
rcrb
push
xor
std
bts
mov
lds
iret
outsl
fcomp
push
nop
xchg
push
data16
cltd
cmpsb
mov
inc
dec
jmp
testb
sub
mov
sbb
mov
pop
fistpl
push
dec
jle
xchg
popf
jle
sbb
test
mov
fildll
lcall
or
sub
cld
jle
std
movsl
stc
out
or
adcb
in
aas
dec
pop
and
cmp
mov
out
jecxz
push
data16
popa
shlb
aad
push
push
jle
or
mov
cmpsl
fwait
mov
mov
inc
jp
add
mov
adc
les
loopne
int3
out
pop
rcl
lret
imul
mov
mov
xlat
xchg
mov
or
mov
rorb
arpl
cmp
aas
call
mov
movsl
movsb
and
movsb
push
pushf
inc
shlb
adc
inc
cwtl
push
orl
loope
sub
insl
mov
test
mov
mov
xchg
cmpsl
or
in
mov
dec
stc
mov
loope
notb
mov
je
xlat
inc
dec
jbe
jo
xchg
jp
imul
lret
sub
xlat
fisubs
arpl
mov
repz
or
pop
lds
dec
loop
xor
push
xor
stos
sbb
push
stos
popl
addb
fdivr
xlat
aaa
ficoml
out
xchg
sar
xor
shll
out
or
or
adc
fnstsw
pop
mov
add
inc
hlt
jnp
cmp
insb
mov
inc
js
notb
aam
test
pop
aas
mov
push
outsl
test
ss
fadds
push
mov
pusha
in
adc
loope
das
pop
dec
test
or
mov
lea
pop
jle
sbb
jb
or
lahf
and
dec
sub
add
repnz
dec
cmp
cmpb
or
pop
mov
cmp
in
push
idivl
fucomip
add
or
pop
ret
pushf
shlb
arpl
mov
mov
push
insl
push
std
shrl
test
cmp
mov
add
jnp
je
insl
xchg
or
push
or
jb
cmp
xchg
push
sub
jg
sub
ljmp
jl
push
out
aad
stos
lahf
sbb
push
mov
mov
and
in
sub
cmp
out
inc
xlat
lods
out
in
adc
lods
or
xor
xchg
or
mov
inc
shrl
jg
adc
pop
pushf
repnz
jb
fwait
ljmp
sub
push
aas
out
std
cltd
dec
xchg
cmp
and
sbb
mov
mov
pop
push
pop
mov
lods
mov
mov
sahf
mov
or
pop
add
jbe
add
push
mov
ss
sbb
imul
jg
sti
dec
roll
lcall
rol
filds
lahf
test
push
push
sub
test
mov
adc
cltd
dec
adcl
stos
test
negb
imul
inc
pop
adc
and
test
mov
sbb
repnz
jp
dec
dec
sbb
push
xchg
jge
inc
shr
sbb
sub
leave
jnp
or
xchg
test
test
cwtl
push
and
sbb
test
fldenv
sub
mov
out
lcall
mov
sub
add
mov
jp
adc
and
and
test
stos
fmul
cmp
lods
xlat
pop
push
jnp
mov
arpl
xchg
push
repnz
add
cmp
ja
push
repz
jbe
and
pop
adc
jnp
cmpsb
or
or
mov
adc
cmp
sub
and
cmpsb
dec
push
add
loop
rolb
shr
dec
pop
cwtl
or
push
xchg
pop
mov
lds
or
xchg
sbb
adc
jmp
aas
mov
repnz
add
sub
push
push
mov
jae
mov
cli
and
repz
rcll
fimull
adc
cmp
subl
pop
int3
jl
nop
push
inc
or
dec
into
sub
fs
cmpsl
sarb
stc
loopne
lahf
pop
push
xchg
pop
movsb
dec
mov
mov
fbld
in
mov
push
mov
mov
jp
push
mov
cld
inc
xor
cmp
pop
and
xchg
cltd
mov
jae
xlat
and
lahf
out
and
loopne
xlat
iret
iret
jge
jge
in
push
mov
insl
sub
push
xchg
loope
jo
pop
loop
repz
ss
and
xchg
and
test
pop
int
in
cmp
sub
jno
insb
loope
clc
cmp
out
imul
xor
lods
push
pop
mov
push
push
fstpt
mov
mov
mov
outsl
outsl
xor
data16
or
mov
add
jp
cmp
mov
push
cmpsl
cmp
outsb
scas
in
andb
inc
cmp
and
xlat
sbb
xchg
imul
ja
sbb
mov
leave
pop
cld
mov
dec
xchg
lock
rol
out
xor
dec
cmp
daa
outsb
lret
fsub
xchg
cld
mov
pop
jle
addr16
xchg
out
jg
cmp
push
outsb
test
jg
inc
or
jmp
rorl
mov
mov
nop
xor
jmp
stc
div
outsb
adc
push
addr16
fidivrl
lods
out
test
into
add
jmp
push
xor
lret
or
xchg
cmp
mov
insb
mov
cmp
jmp
push
sbb
push
adc
mov
jne
imul
fs
aam
mov
fs
adc
sbb
dec
inc
arpl
or
rcll
fs
adc
mov
cmp
sarl
sub
or
and
xchg
jl
mov
mov
loope
mov
dec
lea
mov
mov
xor
cli
icebp
dec
push
sub
jl
xor
clc
sub
mov
push
insb
inc
sbb
mov
stc
sbb
push
xchg
jecxz
sub
mov
push
mov
sub
mov
xchg
lods
cli
pop
insl
ret
insl
outsl
pop
sbb
fistl
call
sti
adc
add
adc
cmp
nop
mov
imul
cmp
jmp
repz
fisttps
sub
mov
js
xor
mov
daa
out
adc
push
push
fistpl
addr16
adc
fisubrs
inc
add
jae
scas
or
add
add
sbb
ret
xchg
out
and
xchg
jbe,pt
das
dec
int
test
mov
scas
fst
xchg
es
rorb
shll
shrl
jo
out
or
inc
cld
or
repnz
fstl
daa
jecxz
jo
add
mov
lods
ror
scas
shr
fistpl
dec
lock
in
fwait
loopne
shrl
and
mov
sub
xor
sub
gs
lret
nop
subl
fisttpl
sub
sub
out
xchg
shl
pop
or
enter
cld
dec
fcomps
mov
je
sbb
push
sar
scas
or
loopne
and
pop
push
movsl
fwait
cmp
push
aas
jae
into
rclb
adc
jae
inc
pusha
enter
addr16
pop
sub
cltd
aaa
fstps
xor
push
aad
inc
sbbl
mov
mov
shl
mov
jecxz
inc
divb
in
in
or
pop
mull
fcompl
lahf
test
call
jb
push
cltd
jle
adc
es
jo
shrb
xchg
insl
fdivs
idivl
xchg
mov
mov
pop
dec
cs
push
pusha
xchg
jl
sbb
pop
rcrb
cmp
push
xor
inc
stos
cmpsl
lods
add
out
xchg
push
mov
in
push
pop
js
stos
pop
out
enter
lods
cwtl
mov
aad
push
mov
faddl
pop
xor
imul
fsubp
out
xchg
ja
inc
stos
mov
adc
sub
pop
cmp
ds
bound
push
ret
lea
cmp
js
int
ljmp
mov
mov
cld
cmp
pop
jp
bound
sub
jno
cmp
test
xchg
cltd
scas
cmpsl
ret
incl
lods
cmp
out
sbb
outsl
adc
stos
inc
in
push
mov
test
mov
cmpsl
je
test
je
jb,pt
ljmp
lret
pop
icebp
lret
pop
mov
and
xchg
dec
aad
xorl
push
mov
mov
test
mov
add
sbb
insl
or
xor
ret
pop
xorb
dec
lods
lods
mov
dec
out
rep
mov
xchg
xchg
fcoms
mov
out
into
xchg
xor
xchg
notb
insl
adc
cmp
adc
and
or
inc
cmpsl
out
call
arpl
dec
mov
clc
mov
bound
add
cli
rclb
testl
icebp
mov
lock
repnz
in
scas
add
ljmp
adc
ss
aad
inc
xchg
jmp
or
mov
jp
inc
mov
in
cmp
ja
stc
mov
into
incl
call
arpl
movb
push
fistpll
fsubr
adc
jns
add
test
insb
int
push
xor
add
push
inc
pop
iret
lcall
cmp
out
dec
or
cli
inc
xor
aas
sarl
xchg
jb
in
or
aad
adc
add
sarb
cmp
dec
ror
mov
or
pop
mov
ret
movsb
add
rorl
daa
cmp
dec
mov
aad
ret
jo
pushf
adc
dec
mov
cmp
jle
in
data16
lahf
popa
scas
sub
push
sub
aad
mov
test
cmp
pop
xor
lods
stos
idivb
call
mov
ss
repnz
out
add
stos
dec
aaa
jns
std
xlat
ret
jmp
dec
xor
xchg
dec
loopne
jp
inc
jb
cltd
in
loope
sbb
fcmovnb
jne
repnz
lret
lret
xor
xchg
popfw
jg
cmp
sbb
test
push
xlat
inc
jne
lcall
jecxz
out
mov
cli
imul
adc
daa
jnp
pop
pop
ja
inc
adc
mov
or
mov
inc
cmp
push
pop
push
lahf
insl
push
jo
lea
in
cmc
xlat
xlat
daa
sub
in
sub
pop
pop
mov
sbb
jle
faddl
lea
mov
xchg
negl
sub
or
inc
ja
jne
and
jp
push
or
mov
xchg
pop
cmp
sahf
movsl
mov
xor
sahf
popf
pop
mov
xchg
inc
push
jbe
idivb
inc
push
decb
jge
fnsave
jp
hlt
or
and
std
xchg
jl
lret
xchg
push
pusha
or
add
int
notb
inc
in
sbb
test
xchg
pop
aas
xchg
loop
add
loopne
mov
sbb
mov
mov
pop
addr16
ljmp
push
loopne
mov
call
cltd
insl
mov
mov
hlt
xor
in
outsb
mov
popl
lock
pop
and
cmp
test
aad
mov
pop
loopne
cmp
outsl
xchg
pushf
jnp
xor
pop
aas
pop
xchg
daa
inc
pop
stc
mov
sbb
add
mov
cmp
inc
inc
sub
sub
aas
dec
jge
push
popf
ljmp
cmc
js
fmul
inc
push
aad
cs
dec
cmc
dec
jo
ficompl
push
cmpsl
test
jne
dec
lahf
fdiv
jb
fbld
cmc
scas
and
mov
xchg
cmp
lds
out
aad
mov
pop
mov
cld
jle
repnz
das
imul
enter
pop
lock
or
mov
outsl
sarb
or
sahf
mov
mov
loopne
addr16
mov
jae
rclb
xchg
mov
ret
pop
shrl
nop
and
xor
mov
dec
or
mov
lods
mov
aam
mov
je
out
adc
push
dec
fwait
dec
xor
push
hlt
les
stc
sahf
xchg
and
mov
jp
xor
ficoml
sti
test
icebp
adc
aaa
sahf
std
mov
dec
pavgb
test
jo
ret
push
nopl
adc
in
outsl
jns
rcrl
lretw
jge
adc
pop
xchg
inc
mov
hlt
dec
iret
mov
int
mov
dec
dec
jne
icebp
mov
cltd
adc
int
or
test
out
fisubs
clc
fcoms
or
push
mov
xrelease
mov
scas
push
mov
sub
push
jnp
pop
inc
adc
fisubrl
imul
ret
loopne
icebp
mov
xchg
sbb
imul
movsl
je
cmpsl
xchg
or
popa
int
or
test
push
adcl
stos
lret
pop
push
loopne
mov
aaa
loopne
insl
add
push
fildll
test
jmp
push
int
into
mov
test
sub
clc
sub
lcall
jbe
push
popf
in
rcrb
js
data16
test
test
jle
addb
popf
out
jecxz
inc
scas
dec
aaa
bound
xor
push
add
std
mov
pop
pop
outsl
dec
fstpt
mov
lcall
outsl
adcl
lahf
mov
dec
outsl
xchg
cwtl
dec
and
pop
pushl
push
jne
inc
cmpsl
sbb
cmpsl
sub
int3
sbb
fisubs
add
lods
sbbb
or
add
fisubl
adc
mov
push
mov
sub
cmpb
or
pushf
adc
rcll
mov
daa
cltd
insb
mov
push
adc
lcall
push
push
mov
lahf
mov
cmp
cld
imul
mov
pop
mov
dec
dec
and
into
dec
fmull
pop
xor
jae
inc
add
add
pop
js
ror
repz
xchg
mov
sub
fildll
dec
popf
adc
lock
outsb
imul
sub
mov
mov
xchg
in
mov
lds
and
cmp
xchg
fldl
mov
leave
hlt
jmp
je
mov
fcomps
divl
xor
cwtl
pop
cmpsb
aas
mov
int3
pop
mov
inc
loope
lahf
rolb
xor
xchg
mov
pop
or
sub
cmp
xor
or
push
sarb
movsl
out
inc
test
push
aad
imul
inc
jnp
pushf
or
bound
popw
lret
lahf
jp
rorl
cwtl
adc
lret
cmpl
out
adc
fstps
sub
dec
test
xor
mov
das
stos
adc
jg
and
rclb
aam
mov
or
dec
outsb
xchg
dec
and
push
aam
and
mov
adc
lahf
ja
push
mov
stos
mov
mov
lret
push
fldt
xor
andb
sub
pop
repnz
cli
iret
scas
jp
in
inc
push
imul
in
jnp
lods
aad
outsl
hlt
aaa
pop
fisubl
jmp
xchg
repnz
addb
out
lock
sub
sahf
movsb
insb
fisttps
icebp
roll
and
jb
hlt
loop
mov
ficompl
imulb
repnz
jle
inc
push
push
cld
popf
push
repnz
out
ljmp
pop
mov
sbb
jle
or
sarb
jo
mov
mov
adcl
jle
dec
testl
cltd
jecxz
mov
fsubr
sbb
lret
fistpl
es
jo
push
inc
mov
mov
xchg
sub
mov
pop
jge
sbbb
mov
or
fisubl
ljmp
ffree
test
xor
gs
lret
mov
les
orl
scas
loope
mov
or
daa
lcall
testb
sahf
rcll
sbb
push
xor
pop
cmp
test
mov
push
in
pop
pop
and
mov
bound
push
leave
std
mov
xor
xor
pop
lds
and
jle
ror
pop
mov
call
xor
mov
xchg
lret
pop
sti
in
cld
test
pop
mov
dec
call
cwtl
push
out
pop
aaa
test
mov
shlb
mov
mov
lcall
pushl
xchg
dec
fwait
mov
xchg
popf
scas
lods
and
pop
sbb
add
pop
pop
lahf
imul
push
mov
mov
leave
insb
ljmp
sahf
ds
pusha
sbb
or
stos
push
shlb
das
mov
mov
popf
in
enter
cs
or
rcrl
xor
sbbb
cmp
mov
ja
pop
sub
sbb
mov
out
jo
inc
cmp
into
insb
out
lods
mov
icebp
xchg
pop
int3
dec
movsl
xlat
jl
mov
ss
xchg
sub
add
dec
mulb
hlt
jnp
dec
xor
push
icebp
popf
scas
cmp
scas
mov
or
pop
in
and
test
lock
test
ficompl
mov
dec
stos
addl
sti
pop
lahf
out
push
idiv
mov
push
pop
test
sbb
xor
adc
sub
jns
mull
test
dec
popf
or
pop
push
loopne
imul
clc
dec
and
je
bound
xor
fsubrl
lcall
test
cmc
jae
mov
nop
pop
andl
sub
mov
insl
in
dec
outsb
in
sub
daa
pop
push
pop
push
lock
add
adc
gs
push
push
pop
mov
push
pushf
sti
pushf
lods
xor
imul
jae
pusha
or
fldenv
push
stos
ja
decb
cmp
lock
adc
call
in
pushf
repnz
ds
daa
push
mov
add
ljmp
or
dec
cmp
push
cwtl
push
mov
sbb
mov
adc
or
aas
pop
iret
js
xor
or
jp
xchg
arpl
and
ret
adc
pop
lret
iret
xchg
mov
inc
lret
ljmp
dec
loop
aad
insl
rclb
cmp
ss
loop
xor
rorl
mov
jne
dec
test
adc
lods
fisubs
lret
int
pop
mulb
cld
dec
iret
mov
xchg
orl
sub
pop
rcrl
push
movsl
bound
insb
or
xchg
add
rcrb
or
rclb
stos
pop
mov
xchg
loope
lods
cmp
dec
pop
inc
hlt
sbb
jle
fstpt
xchg
cmp
fs
loope
test
cwtl
ret
mov
xchg
mov
in
enter
ljmp
enter
pop
ret
test
lahf
dec
or
inc
lods
and
mov
sub
adc
mov
push
mov
insb
xor
mov
mov
call
imul
xchg
sbb
in
fistl
ret
adc
xchg
jmp
mov
sub
iret
push
adc
in
pop
imul
mov
test
sub
add
ficompl
pushl
es
loopne
or
pusha
sub
sahf
pop
cmp
push
push
stos
push
pop
jg
or
and
loopne
out
mov
out
hlt
and
movsb
lret
cltd
int3
push
xor
jb
mov
dec
lds
pop
mov
xchg
mov
inc
rorb
mov
cltd
and
mov
inc
cmpsb
push
push
imul
xchg
mov
sub
fbld
psrad
mov
mov
cltd
je
inc
jl
cltd
outsb
dec
cwtl
mov
scas
ret
nop
mov
inc
mov
imul
mov
pop
iret
outsb
cltd
jae
adc
movsb
int3
ljmp
mov
xchg
aaa
pop
or
out
cli
mov
cltd
sbb
es
inc
mov
loop
adc
scas
int
mov
loop
cld
lret
adc
cmc
out
dec
insb
pop
and
jp
add
pop
xchg
into
jg
out
pop
out
jns
push
aas
sbb
jmp
loopne
sbb
mov
sub
cmpsl
adc
in
sub
add
push
xor
sbb
scas
jmp
ret
cmp
dec
cmpsl
fprem1
fsts
xchg
mov
sub
lock
in
lahf
push
movsl
ret
push
jge
dec
mov
adc
mov
adc
cwtl
repnz
mov
aam
add
outsb
mov
jb
cmp
push
insb
les
ficomps
cmp
dec
sti
mov
insl
jmp
pop
push
ja
xchg
ss
andl
imul
push
or
or
dec
or
lods
outsl
xchg
stos
sti
mov
call
lock
sbb
sub
push
dec
mov
repz
and
or
push
and
jecxz
movsb
or
mov
and
inc
fistl
mov
insl
mov
ret
test
add
cmp
xor
jbe
mov
in
in
inc
sub
cmp
ret
sbbl
lods
and
inc
pop
addr16
mov
adc
mov
jb
hlt
aas
push
int3
push
into
cmpsb
mov
arpl
bsr
sub
or
xor
loop
sub
mov
or
or
xchg
inc
das
jbe
pop
add
fistpl
add
aaa
pop
cmp
stc
sbb
add
cmpl
test
mov
xorl
mov
divl
adc
jnp
mov
pop
pop
repnz
inc
pop
ficoml
xchg
or
je
out
ret
dec
or
or
dec
jmp
cmpb
fstpt
push
mov
mov
roll
pop
mov
dec
std
cs
xchg
in
cmp
int
mov
pop
xchg
jae
sub
sub
shrb
mov
mov
dec
adc
xchg
into
xlat
cmp
decb
divb
mov
add
mulb
jnp
mov
cmp
xor
out
push
adcb
adc
fmuls
push
xchg
jmp
je
rcrb
imul
bound
fmull
shlb
imul
inc
imul
ficomps
shr
mov
xchg
adc
out
fstpt
push
aam
es
sub
add
mov
adc
movl
aas
lcall
add
sbb
sub
scas
pop
adc
ss
sbb
icebp
xchg
pop
inc
scas
cwtl
loopne
sbb
jnp
mov
rcll
sub
xchg
sbb
add
push
mov
jns
mov
adc
pop
sbb
ds
into
push
inc
xor
insb
aam
loopne
into
int3
jmp
cmp
rol
sbb
add
push
popa
in
cld
aaa
mov
or
xchg
sub
and
les
mov
sub
and
pop
xchg
and
xor
jns
cwtl
int3
dec
mov
lods
and
xchg
arpl
icebp
mov
add
sub
aaa
inc
mov
mov
jmp
mov
push
in
mov
loope
pop
imul
cmp
lahf
xchg
or
mov
xchg
or
cmpsl
jmp
jb
mov
stos
out
lea
adc
pop
push
aam
pop
sbb
outsb
movsl
push
jbe
pop
popf
iret
shrb
popa
mov
daa
add
daa
dec
lret
out
mov
mov
add
mov
add
sub
icebp
pop
xchg
jne
pop
xor
push
out
scas
xor
xchg
outsl
sub
ja
inc
cmp
aam
xor
jmp
lea
lret
jnp
lds
sbb
rep
xchg
test
add
lock
xchg
push
mov
into
jmp
fdivl
dec
sub
sub
cmp
movsb
adc
mov
inc
lea
cs
mov
or
fcom
and
push
pop
fsubl
movsb
adc
lcall
adc
aas
adc
push
insl
or
and
in
push
cmpsl
xchg
icebp
mov
mov
jb
call
cld
fnstsw
sbb
jle
jg
movsb
add
outsl
and
inc
rcrl
push
aaa
push
popf
repz
push
popf
mov
iret
out
popa
sar
test
adc
jge
and
mov
jg
jb
leave
sub
mov
data16
pop
pop
insl
mov
mov
mov
cmp
lods
orb
nop
dec
and
add
shr
xchg
gs
adc
fucomp
jb
test
pop
xor
xlat
cmp
outsb
sbb
mov
js
sar
syscall
fcmovu
mov
movsb
mov
mov
insl
or
xor
mov
xor
jno
bnd
push
rclb
daa
push
in
xchg
xchg
fisubs
mov
or
sub
gs
ss
std
mov
lcall
ret
sbb
sti
inc
int
cs
mov
icebp
testl
or
jmp
movsl
adc
pop
sub
aad
lods
js
movsb
and
or
push
pop
cmpsb
ret
sub
dec
outsl
xchg
mov
insl
fstpt
pushf
fnstenv
xor
or
sub
add
add
out
mov
cmc
xchg
add
and
inc
fnstcw
dec
and
stc
push
mov
push
incl
shr
std
mov
mov
sbb
mov
fisubl
jne
rclb
mov
push
shrl
out
mov
pop
ja
sub
add
mov
adc
push
call
or
les
push
jge
sti
adc
sub
nop
mov
loop
cmp
sub
stc
lock
das
mov
sub
mov
fwait
pushf
sub
pop
hlt
fmuls
or
adc
stos
imul
fidivrs
rorb
rcl
inc
push
jnp
push
repz
loop
imul
mov
xchg
xchg
mov
or
cld
int3
ljmp
mov
mov
imul
push
sub
mov
dec
out
sub
bound
mov
loopne
cmp
adc
dec
rcr
adcb
sti
cwtl
sarb
or
aad
add
xchg
sub
push
pusha
jae
in
int
push
sbb
fstsw
xorl
scas
sbb
subl
daa
das
push
push
in
imul
lods
xor
stc
popa
and
ficoms
mov
loopne
inc
sub
shlb
or
mov
xchg
in
je
stos
add
mov
push
loope
pushf
mov
je
or
and
aaa
scas
ret
jbe
rclb
out
mov
or
and
cmpsl
fistps
adc
fisttps
jae
in
pusha
lods
arpl
outsb
out
xchg
les
sub
leave
jnp
dec
jns
imul
cmc
xor
xor
fiaddl
mov
enter
sbb
lea
inc
and
scas
stc
jb
xor
xlat
out
popf
inc
and
lea
out
cmpsl
lods
icebp
shrb
scas
ret
mov
int
add
and
arpl
cmp
mov
dec
mov
or
mov
jge
mov
or
shrl
jb
int
cmp
insb
xchg
notb
and
xor
or
arpl
mov
pop
push
fidivl
xor
xchg
jecxz
sub
fsubrl
jb
mov
xchg
lds
mov
stos
sub
lock
fildl
dec
jbe
jmp
add
or
addr16
mov
cmp
hlt
mov
sar
stos
test
cmp
xchg
test
dec
cmpsb
jno
dec
or
fstpl
mov
mov
clc
stc
mov
aam
bound
cmpsl
out
icebp
pusha
xorl
xchg
xchg
jmp
xor
mov
and
addr16
pop
jge
jp
push
cmc
cmc
pop
cmp
cmp
in
cmpsl
and
shl
aas
movsb
or
jge
adc
not
scas
in
sti
jne
sub
cmp
loope
xorb
sahf
adc
out
cmp
xchg
lock
fs
jo
insb
aad
cmp
jl
pop
dec
out
xor
push
mov
jl
out
notb
cmp
dec
xor
fadds
rorl
mov
ret
or
and
jg
fs
add
pop
xor
fadds
xor
ret
xor
pop
sub
mov
and
pushf
adc
mov
fcmovnu
loopne
push
add
ja
mov
push
dec
inc
jnp
rcll
sbb
je
aaa
ja
mov
jb
sbb
movsl
jg
xchg
sti
xor
clc
lcall
and
arpl
rcrl
xor
outsl
sti
outsb
fs
aad
cmc
cmp
sbb
or
or
and
lret
add
inc
sbb
push
in
push
sahf
test
call
fstl
rcrl
inc
lds
and
lods
shll
insb
sbb
les
inc
subb
jmp
cld
adc
sbb
jns
dec
dec
sbb
enter
pop
jae
test
and
push
pop
mov
sbb
sub
ljmp
mov
rorl
or
inc
pop
rolb
adc
mov
repnz
iret
jl
idivl
arpl
rcll
mov
pushf
cmp
test
popl
inc
ljmp
sti
les
in
dec
ds
gs
ljmp
xchg
sarl
shrl
clc
jg
or
aam
in
mov
jmp
lret
call
push
pop
repnz
push
mov
push
mov
inc
adc
ljmp
push
or
loopne
mov
ljmp
mov
jns
mov
cmc
outsl
inc
xlat
dec
jmp
mov
mov
adc
and
out
xor
push
imul
shrl
pop
imul
add
and
addr16
mov
lcall
push
jbe
aam
cli
and
cmp
popf
mov
mov
clc
sub
adc
das
outsl
outsb
std
stos
faddl
jmp
mov
in
or
and
stc
jbe
xchg
xchg
mov
push
mov
pop
int3
scas
ret
imul
es
in
jbe
fisttpll
fadd
inc
pop
imull
fmuls
sbb
sarb
in
fsts
into
data16
lret
adc
sbb
adc
push
ds
or
sarb
iret
mov
scas
mov
iret
dec
cmp
fcoml
add
mov
xor
sti
std
sbb
mov
inc
add
fistpl
pop
xchg
daa
jp
dec
dec
mov
mov
xor
loope
fsubrl
ljmp
adcb
jne
mov
imul
loope
sub
push
aam
cmc
sbb
lret
icebp
js
dec
shll
test
push
outsb
mov
scas
cmp
jno
push
sub
scas
call
rorb
xor
mov
push
and
push
add
and
fwait
cmp
arpl
jp
pop
adc
test
inc
inc
mov
pusha
mov
push
pop
mov
lcall
mov
mov
add
incb
jno
add
pop
xchg
pop
jb
xchg
pop
cmp
jne
outsb
nop
enter
push
xchg
jle
push
data16
das
or
lcall
mov
lds
fwait
pushf
lret
mov
lea
cmc
incl
mov
mov
pusha
mov
andl
inc
cmp
cli
es
add
ret
push
jns
into
and
fisubrs
rolb
adc
inc
aas
pop
pop
je
cltd
dec
add
pop
test
inc
xlat
ret
dec
lahf
sbb
and
loope
lret
lret
or
orb
clc
outsb
out
hlt
dec
jmp
int3
pushf
jae
jbe
aad
mov
icebp
jae,pt
in
fcomps
xor
xchg
xor
mov
add
cltd
add
inc
aam
lods
jg
push
rcl
lcall
sbbb
loopne
sbb
xchg
jae
stos
lret
fbld
and
flds
mov
cld
out
in
xchg
adc
mov
or
into
cmp
fimuls
push
push
push
lcall
fisubl
push
mov
inc
stos
push
xchg
es
jg
je
mov
das
dec
bound
push
cmp
cmpsb
cmp
push
lret
adc
adc
mov
test
jmp
jnp
fsubrl
sbb
mov
xor
cmp
adc
ret
jno
stos
pop
cmp
pop
sbb
inc
aas
push
sti
xchg
fwait
imul
push
mov
js
sub
sbb
data16
xor
icebp
or
push
aas
sub
daa
cmp
jmp
aam
jb
shl
gs
push
das
push
mov
popf
ja
nop
add
sbb
lods
sahf
das
cmp
cwtl
test
pop
stos
sbb
mov
xor
add
mov
lods
arpl
push
adc
cmp
in
imul
sbb
and
sub
pop
cmpsb
mov
nop
pop
mov
cmc
sti
push
pop
sbb
push
add
test
xor
sub
adc
cmp
lcall
mov
add
cmp
repnz
inc
jmp
mov
cmpsb
out
jecxz
mov
or
js
dec
push
sub
je
into
push
cwtl
ret
ljmp
in
sub
xchg
sbb
or
adc
and
or
jge
inc
test
fs
push
gs
and
add
jnp
adc
xor
loop
int
iret
cmp
mov
pop
jl
es
lcall
mov
ret
xrelease
or
jo
inc
leave
or
aam
hlt
jb
mov
xlat
sub
add
push
outsb
and
mov
aam
xchg
mov
shlb
and
fdivl
aam
cmpsb
std
out
fisttpl
cmp
xchg
dec
jmp
fcoml
dec
jl
mov
inc
int3
mov
inc
inc
mov
dec
scas
leave
xor
call
inc
sub
push
and
dec
and
out
jle
pop
push
xor
loopne
enter
mov
sub
negb
out
imul
or
lods
pop
aad
sub
mov
inc
ja
insl
bound
shl
mov
jbe
and
imul
fwait
cmpsb
scas
hlt
movsl
ds
xor
ret
es
xor
xchg
xor
mov
mov
ss
je
and
pop
fbstp
pusha
add
daa
movsl
ljmp
ret
xor
jne
cld
add
adc
jg
mov
cltd
leave
jmp
dec
shlb
mov
sbb
outsl
adc
xchg
inc
test
fcmovu
pop
sub
add
xor
jmp
incl
in
push
dec
in
push
mov
in
js
mov
aam
daa
fs
inc
stos
dec
addl
rolb
cmp
stos
dec
mov
adc
adc
and
fsts
dec
pop
test
xorl
fisubl
faddl
fcmovnu
repnz
pop
mov
loope
push
jmp
sub
icebp
mov
cmc
inc
xchg
xor
jg
popf
in
arpl
sbb
lea
repz
sahf
pushw
xor
shrl
jns
dec
clc
lahf
ret
pop
rcr
cltd
push
cmp
mov
jns
stos
in
fmulp
outsl
xor
xor
lods
in
mov
xor
jge
scas
in
pushf
popf
cld
aam
dec
stos
sarl
lret
lret
cmp
xchg
mov
enter
cmp
es
cs
jmp
das
jg
lds
and
pop
sbb
mov
jecxz
test
xchg
push
push
mov
lds
lds
inc
mov
push
imul
add
je
mov
daa
and
dec
orl
cmp
das
cmp
add
cld
pusha
aaa
test
test
popa
repz
xchg
imul
repz
fisttps
xchg
divb
xchg
xchg
pop
movsl
test
sbb
mov
std
loopne
push
gs
cli
push
push
cs
cli
sub
mov
mov
aas
lods
inc
dec
mul
xchg
out
je
push
jmp
or
pusha
inc
aaa
cmp
mov
ljmp
jecxz
scas
mov
sub
push
jbe
dec
jmp
lahf
cmp
mov
mov
inc
or
arpl
or
test
inc
std
insb
lret
pop
int3
push
or
cmp
push
cmpsb
data16
xchg
dec
out
dec
push
fistl
inc
inc
ja
iret
loop
test
ljmp
out
jp
xor
cmp
cmp
bound
adc
cmp
or
frstor
loop
lea
sbb
decb
inc
cld
test
add
xchg
mov
cmpsl
das
jb
loop
add
inc
and
pop
mov
xor
and
xor
fldcw
and
add
insb
jl
or
cmp
push
mov
clc
or
fisubrs
fcoms
cli
lcall
ljmp
testl
inc
ret
and
mov
sub
push
ljmp
es
rol
jno
sahf
xlat
lret
dec
ljmp
dec
out
and
orl
loope
fcmovu
mov
mov
and
or
push
jae
out
sub
jl
nop
sahf
pop
movsb
jns
sbb
inc
push
mov
aam
inc
loope
and
cmpsl
sarb
jns
cmp
or
lea
push
pop
int
and
sbb
jno
popa
or
js
jns
add
popf
movl
xchg
push
out
ss
add
fxtract
xchg
mov
fiadds
loope
dec
push
pop
addr16
dec
shlb
daa
xchg
inc
rol
inc
stos
btc
xchg
xchg
out
dec
sbb
insb
loop
test
push
and
js
mov
stos
inc
mov
xchg
dec
sbb
jnp
pop
ja
iret
jmp
sahf
daa
jge
cld
jle
or
sub
shr
mov
mov
cmpsb
inc
sub
mov
cmp
call
push
imul
inc
adc
sbb
mov
mov
adc
or
hlt
push
cli
into
sub
inc
nop
xchg
xor
sbb
add
testl
sahf
sub
cmp
repnz
test
mov
xorl
dec
push
adc
xorl
push
mov
mov
mov
lds
sub
jle
xor
cmpsb
pop
xchg
outsb
mov
out
cld
into
lcall
jb
lahf
in
test
sub
add
sarb
cmp
notb
xor
mov
inc
xchg
sub
push
xchg
and
cmc
loop
repz
inc
leave
cmpsb
mov
ja
dec
mov
addr16
jp
mov
xchg
in
lock
dec
dec
inc
adc
in
push
mov
das
xchg
aad
mov
int
fwait
out
push
pop
or
jl
aas
fisttpl
xor
mov
or
bound
cmp
repnz
fisttpl
inc
pushf
dec
leave
sub
pop
stc
lods
mov
lods
int3
and
stc
xchg
daa
or
loopne
sti
mov
push
jmp
inc
clc
xor
mov
sbb
pushl
fstl
mov
pop
rclb
inc
mov
xchg
ds
xchg
fisttpll
rcrl
lea
sbb
dec
pop
test
sti
mov
add
rcr
inc
pop
stc
cwtl
ljmp
cli
popf
adc
mov
imul
inc
adc
cmp
pop
push
cmp
jo
fcomip
lds
in
popf
ja
push
cmp
aad
prefetcht1
dec
adc
sbb
pop
clc
ljmp
mov
jno
imul
js
ds
stos
lahf
xchg
sub
mov
inc
ret
mov
mov
jp
rcrl
int
add
mov
mov
pop
imul
jno
pop
stc
andl
pop
outsb
popf
dec
sub
push
pop
push
cmp
popf
adc
inc
inc
out
scas
cmpl
addr16
aaa
jbe
inc
mov
mov
fdiv
aad
mov
repz
loop
dec
mov
add
adc
adc
mov
out
aaa
mov
jecxz
cli
push
aam
jno
jne
inc
rcll
hlt
test
sbb
jge
cmp
xchg
mov
pop
pop
and
jl
call
or
test
fsubr
sbb
lods
push
or
sahf
andb
sbb
popf
fidivrl
mov
pop
lret
lret
xchg
ja
push
je
mov
cmpsb
loop
scas
cmp
and
lds
pusha
inc
scas
out
lock
jl
add
push
cmp
jno
jnp
aam
mov
sbb
scas
out
mov
fcoms
insl
jo
lods
mov
and
add
jne
mov
xor
mov
imul
mov
jp
orb
ljmp
add
adc
or
push
dec
sub
pop
imul
mov
mov
jg
add
cmp
das
lret
mov
xor
xchg
xor
inc
stos
lock
sbbb
lcall
test
das
dec
dec
xchg
jle
xor
fwait
outsb
aad
je
std
add
mov
jg
iret
pop
in
mov
sub
dec
scas
xor
mov
rclb
loop
sbbb
test
lods
or
or
jp
mov
push
mov
cmp
or
rcrb
cld
mov
sub
pop
rcll
test
cld
insl
in
lret
pop
inc
aad
jbe
data16
mov
push
pop
jno
cld
add
push
call
cmp
pop
scas
push
pushf
adc
inc
cmpsl
xchg
outsl
dec
jecxz
imul
xchg
rorb
mov
mov
mov
push
jecxz
or
sub
mov
subl
cmp
add
mov
shlb
in
xchg
std
test
dec
cmp
push
lret
add
test
pop
in
mov
push
out
stos
pop
popa
and
mov
adc
pop
js
cmp
mov
out
mov
aaa
fsubrs
lods
loop
imul
lock
sahf
xlat
push
dec
xor
lret
stos
lret
xchg
jbe
sti
loop
mov
sti
push
cmp
cmc
xchg
scas
mov
pop
inc
adc
pop
pop
cmp
inc
xor
add
dec
jae
jb
or
movsb
es
icebp
js
mov
cmp
mov
hlt
inc
lret
xchg
adc
jmp
aaa
rcl
mov
ds
sahf
mov
xchg
pushf
mov
les
jae
push
sbb
jns
ret
sub
xorb
mov
test
sub
movsl
rcr
fucomi
xchg
sub
xor
xor
loop
into
add
call
sbb
arpl
jle
add
aad
sbb
jnp
lret
shlb
mov
iret
cmp
arpl
fistps
adcb
inc
pop
aad
enter
adc
xchg
mov
sbb
fwait
dec
arpl
out
push
cs
int
iret
jle
xlat
jmp
shlb
xor
pop
rorb
xor
int
and
mov
jmp
in
repz
test
sub
jne
inc
dec
jb
loopne
fldt
fimull
cmp
jae
sahf
dec
xchg
mov
pop
in
inc
or
inc
add
xchg
fldl
cmp
sti
iret
mov
mov
sub
aam
arpl
lret
fimull
push
adc
fcmovbe
xchg
adc
jmp
cmpsl
sbb
movsl
inc
std
inc
mov
jb
sub
roll
xor
imulb
addr16
pop
mov
clc
leave
xor
cmpsb
mov
xchg
add
gs
or
cmpsb
xor
sub
ljmp
sub
mov
cmpsb
clc
es
outsb
sbb
sbb
pop
mov
push
mov
shrl
xchg
clc
nop
mov
cmp
scas
lea
jmp
ljmp
xor
clc
sbb
or
gs
mov
cmpl
xor
das
out
or
cwtl
mov
push
movsl
hlt
popf
jae
nop
mov
icebp
cmp
jge
xor
sti
sub
insb
jp
and
popa
push
loop
aam
jbe
xchg
sub
lods
pop
jg
xchg
shll
jno
push
aad
stc
ret
clc
jbe
inc
push
xor
out
lcall
cmc
rcrb
ficoml
pusha
mov
mov
dec
adc
lret
xchg
push
push
jae
loope
cwtl
add
sub
mov
leave
leave
mov
inc
sbbb
sub
mov
sti
pop
cmp
adc
mov
xchg
repz
pop
xchg
aad
pop
xchg
outsl
sub
or
es
test
popa
or
out
cli
data16
fs
in
xor
mov
dec
orl
add
push
fs
or
stos
cmp
inc
adc
pusha
adc
mull
dec
cmp
xchg
rcl
test
mov
int3
addb
outsb
pop
and
or
sbb
cmp
jmp
cmp
sub
pusha
xchg
mov
int
bound
fs
push
add
hlt
fwait
sbb
stos
daa
test
js
in
mov
mov
ss
shrb
xor
dec
shrb
jg
add
orl
cmp
or
fldcw
or
xchg
and
push
addl
das
push
mov
cmp
enter
hlt
sbb
mov
xchg
es
shlb
add
rcrb
je
cmp
in
fists
incl
mov
shr
and
pop
insl
jnp
xchg
pop
jl
mov
jge
in
leave
lcall
sbb
jns
fisttps
push
arpl
lods
cwtl
xchg
es
sub
mov
push
sti
push
out
cli
jecxz
inc
dec
push
fwait
loop
rorb
fnsave
in
test
add
push
adc
or
movsl
gs
lods
int
and
xchg
test
movsl
int
lahf
jp
push
dec
cld
xor
in
cltd
es
rorl
clc
test
lret
fnsetpm(287
jge
or
mov
mov
rolb
outsl
add
sbb
inc
lods
cmp
jl
add
sbb
in
or
in
xor
inc
xchg
mov
ja
xchg
pushf
xchg
xchg
inc
lock
shrd
mov
inc
in
dec
mov
sub
add
mul
lret
dec
cltd
sub
imul
pop
xchg
stos
in
daa
mov
addr16
xchg
test
jbe
test
rolb
icebp
lcall
mov
jo
sahf
repnz
jmp
jge
lods
jle
ficoms
lret
bound
sbb
ficoms
mov
dec
inc
dec
lret
adc
mulb
mov
cwtl
icebp
repz
add
imul
and
cmp
mov
aam
sbb
adc
jmp
jp
sub
arpl
cmp
nop
sub
inc
out
xor
fwait
jp
fdiv
into
hlt
fisttps
scas
and
sti
xor
jbe
ja
mov
dec
and
cld
push
push
rolb
mov
add
pop
and
popa
xchg
cmpl
mov
xchg
adc
cmp
scas
jno
pop
xchg
int3
je
jg
inc
push
cmpsl
sub
fidivl
arpl
push
xor
mov
cmpl
jge
mov
stc
push
stos
aaa
sub
push
sub
fmull
lods
mov
add
movsb
push
in
mul
sbb
xlat
mov
and
dec
cmc
push
cli
jl
sbb
or
testb
push
mov
out
in
xor
or
adc
jecxz
aaa
dec
add
imul
in
fstps
jp
mov
mov
jecxz
dec
pop
std
add
pop
insb
test
or
repz
les
jnp
add
test
aad
xor
clc
add
xchg
mov
bound
data16
xchg
pop
lock
sbb
loopne
js
sub
lock
fcomp
sbb
sub
inc
pop
sub
cmpsb
shll
mov
cmpl
loopne
and
dec
daa
andl
adc
xchg
pop
xor
push
scas
dec
or
adc
lcall
mov
cmp
lods
leave
into
cmp
cmpsl
mov
push
ja
lcall
into
push
fsubl
jnp
xor
mov
mov
arpl
cmpsl
mov
push
push
push
mov
inc
jge
lea
pop
das
mov
adc
outsl
roll
pop
xchg
repnz
or
bswap
xchg
bound
jg
mov
bound
popa
lock
sub
out
adc
jl
out
je
push
push
xchg
movsl
scas
popa
dec
or
dec
cld
and
and
rorb
je
mov
adc
cmc
sub
push
or
pop
pusha
fisttpll
mov
and
mov
add
xchg
xlat
out
mov
push
adc
sub
xchg
jns
test
cltd
jo
out
sub
jge
mov
push
out
lods
iret
fdivrs
addr16
sbb
jecxz
or
roll
and
push
imul
test
cmp
inc
dec
lods
jae
cmp
xor
dec
sub
cmpsb
mov
into
pop
int3
dec
jo
bound
mov
mov
sub
xchg
fcomps
pop
mov
or
lahf
xchg
cmpsl
js
ret
arpl
cmp
pop
loop
xchg
cmpsb
scas
inc
ljmp
and
sub
inc
shrl
xlat
fcomip
dec
jbe
pop
ds
fldt
loope
gs
je
ss
outsl
xchg
outsl
xlat
inc
insb
outsb
ficoms
sbb
ret
inc
clc
dec
popa
jae
shll
xor
aaa
pop
lret
lret
ljmp
cmp
jb
xchg
lds
pop
xor
lret
adc
int3
out
push
mov
ds
clc
lds
inc
pusha
js
mov
lret
inc
clc
xor
jge
dec
jae
adc
cwtl
mov
sahf
mov
mov
cmp
int3
and
add
ljmp
aas
or
cltd
jae
in
jb
pmullw
adc
fcoml
jecxz
addr16
loop
xor
rolb
fsubl
mov
loope
mov
fcmovb
lods
dec
cli
mov
mov
jno
inc
adc
jmp
pop
jns
test
inc
js
movsl
xor
pop
or
jecxz
sub
fistl
test
push
dec
call
jecxz
repz
in
or
inc
and
clc
sbb
in
mov
sub
cmp
aam
scas
push
fistpl
dec
stc
pop
xchg
xor
in
mov
or
push
push
arpl
mov
adc
adc
cs
jg
push
shlb
adc
inc
cltd
inc
movsb
push
pushf
pop
loop
inc
jnp
daa
pop
mov
inc
adc
xchg
jno
sub
loop
dec
popa
cld
lret
data16
jno
inc
pop
dec
cmp
mov
inc
inc
out
arpl
out
adc
test
mov
xor
stc
popf
in
dec
xor
ds
mov
in
rorl
mov
xor
bound
xchg
pop
andb
int
lcall
call
les
shll
xchg
mov
mov
and
ja
fstps
jns
jnp
xchg
push
outsb
insb
jp
data16
and
fistps
dec
sahf
sub
in
rorb
sbb
jl
loop
jns
notb
pop
jle
std
lcall
out
popa
dec
mov
sbb
push
popf
lcall
mov
popa
xchg
sahf
jne
aas
out
in
xor
shll
imul
xchg
mov
aam
in
mov
int3
nop
aad
mov
push
or
inc
mov
push
jne
mov
mov
xor
adc
or
loope
je
cltd
mov
stc
icebp
pop
call
inc
cwtl
lret
pushf
jns
cmpsl
outsb
in
lock
inc
xor
mov
mov
inc
sbb
mov
xor
inc
dec
jp
enter
cs
xchg
push
inc
scas
js
sub
or
adc
in
add
add
inc
cltd
xchg
flds
sub
dec
push
std
add
inc
push
xor
das
testb
shlb
in
fmull
sub
mov
push
mov
in
lea
xchg
jns
jle
out
push
data16
or
mov
push
clc
lret
adc
ficoml
dec
orps
xchg
in
mov
ret
aaa
notb
orl
aad
out
xor
add
xor
or
mov
out
ret
xchg
daa
mov
int
or
shrl
adc
imul
ja
fcmovu
mov
daa
lea
cmp
mov
ja
push
repnz
fists
addr16
cmp
out
xchg
and
ja
xchg
add
mov
andl
dec
jns
pop
jmp
xlat
jmp
jl
pop
fsubs
or
lods
add
add
outsb
sub
in
mov
sbb
mov
jge,pt
jmp
xchg
call
rol
fistl
cmpsb
mov
lret
cmp
mov
decl
mov
in
pop
jns
mov
icebp
roll
add
sbb
sub
and
das
jmp
mov
and
xor
stos
jnp
fstl
pop
test
sub
lcall
sub
aad
cmp
rcl
hlt
dec
dec
cmp
scas
int3
ds
dec
in
mov
test
xchg
lcall
mov
fimull
xchg
xlat
lahf
scas
fldl
push
ljmp
insl
adc
aas
pop
idivb
cmp
pushf
push
push
test
cmp
fcoms
sub
xor
adcl
xor
loopne
mov
in
test
jge
mov
test
pop
int
lahf
out
movsl
xchg
mov
rcll
rcrb
pop
ficompl
push
xchg
xor
dec
or
iret
push
mov
test
aad
jmp
mov
daa
lock
mov
stc
in
outsb
add
add
or
and
shll
ss
bound
and
fsubp
movsb
cmp
stc
pop
mulb
aaa
stos
adc
mov
mov
aad
pushf
jbe
xchg
cmp
sub
mov
push
adc
sub
mov
out
testb
adc
repnz
movsl
into
imul
in
inc
fisttpl
iret
inc
arpl
cs
sub
push
out
pop
inc
push
pop
rol
xchg
xor
shl
jae
cmp
int3
cld
rcrb
in
ss
cwtl
pop
push
popf
bnd
add
fs
icebp
xchg
aaa
inc
into
xlat
out
fdivrs
jo
dec
lds
and
lods
or
movsl
dec
pop
cmp
loope
out
mov
shrl
fidivl
out
sbb
je
sbb
sub
les
sbb
cmp
mov
sti
adc
repnz
mov
push
adc
xchg
rcrl
sbb
das
stc
cmp
add
jno
in
roll
bound
mov
outsb
fadds
adc
dec
jo
mul
outsl
cmp
mov
lahf
or
push
daa
and
sti
jecxz
lea
shrl
mov
dec
push
lock
in
loopne
or
cmp
fisubs
mov
pop
dec
lcall
fs
mov
dec
lret
pop
cmp
iret
jnp
sbb
mov
popf
test
lret
mov
loope
cmp
loop
imul
dec
outsb
mov
push
rorb
ja
add
fldenv
cld
inc
push
out
addb
insb
movsl
pop
pop
jl
pop
jae
cmpb
or
cltd
lds
inc
push
outsb
xchg
push
xchg
es
xlat
pop
call
inc
adc
in
daa
or
xchg
jle
xchg
inc
lods
dec
xlat
test
idiv
xlat
stos
sub
xchg
out
scas
clc
add
in
mov
mov
cld
lret
add
or
lds
je
inc
sbb
dec
jb
loop
dec
scas
xchg
push
scas
mov
sahf
mov
icebp
push
push
inc
dec
mov
sbb
mov
lods
jne
pop
flds
inc
sub
inc
inc
cmp
cld
mov
call
mov
rcl
test
xor
and
xchg
pop
or
addr16
popf
bound
mov
bound
xchg
test
fwait
out
shrl
or
enter
pop
inc
inc
dec
sbb
scas
daa
cmp
add
push
aas
mov
iret
cmp
xchg
std
aad
repnz
cwtl
scas
inc
icebp
push
cmp
addb
jp
jbe
pop
and
mov
jno
inc
jns
or
int3
or
movsb
inc
xchg
sti
out
and
bound
out
and
insb
ret
sbb
lcall
xor
pop
add
jl
xor
mov
ja
add
jb
lds
push
mov
stc
popa
mov
mov
imul
push
loopne
loope
test
inc
cmpsb
divl
or
mov
xor
lret
mov
dec
cld
adc
inc
xor
outsl
inc
xchg
lea
js
mov
push
or
test
jmp
sub
mov
and
loop
jl
and
sub
repz
cltd
iret
pop
subl
roll
not
insl
push
xchg
loopne
fidivs
push
cmp
dec
mov
ficompl
lahf
into
popl
std
xchg
add
and
jnp
test
sub
and
out
repnz
ljmp
ja
mov
xor
in
aad
xchg
insl
dec
and
cli
testb
je
in
add
mov
cmp
pop
subb
inc
ficompl
jmp
pop
test
mov
in
imul
inc
loop
mov
xchg
roll
push
stos
ret
pop
pushf
bound
add
insl
test
aam
or
mov
bound
xchg
sub
push
mov
inc
jns
popa
cmp
add
cmp
aas
cmp
ljmp
sub
inc
pop
fwait
and
jae
jo
pop
lcall
xchg
dec
pusha
int
test
enter
rolb
mov
movsl
sbb
pop
loope
dec
jmp
or
xor
lcall
sbb
mov
xor
cmp
test
mov
mov
imul
adc
int3
xlat
add
and
xor
in
fstpt
mov
outsl
mov
or
repz
ret
idivb
ficoms
or
mov
sbb
pop
or
adc
pop
and
loope
xchg
imul
lcall
sbbl
lcall
loopne
pop
xor
decb
ret
mov
sarl
pop
dec
push
inc
mov
push
pop
sbb
or
rcrl
daa
gs
testl
xchg
lret
jp
pavgw
inc
xchg
out
and
xchg
xor
xchg
mov
mov
leave
in
mov
fsubs
fisubs
pusha
pop
mov
xor
jl
xchg
adc
jae
insb
stc
daa
or
loopne
into
adc
cmp
stos
pop
mov
mov
sub
shlb
enter
outsb
xor
mov
lods
sbb
jno
shlb
test
mov
jl
cmp
sub
cmp
adc
sbb
lret
fdivs
movsb
inc
std
cltd
dec
fcompl
xchg
push
repnz
push
insl
push
fcomp
sahf
xchg
out
and
outsb
xor
push
push
dec
loop
pop
cmpl
push
mov
iret
mov
call
stc
scas
adc
in
push
adc
es
or
mov
or
and
and
push
mov
pop
cmpsb
sti
aaa
inc
mov
cs
in
cmp
pop
lock
mov
xchg
cmpsl
pop
mov
push
mov
adc
dec
pusha
in
int3
xchg
pop
jae
cltd
inc
popf
sub
gs
ja
xorl
mov
fstp
or
jp
shlb
incl
xchg
mov
jecxz
fiaddl
popf
pmullw
sub
xchg
icebp
insb
clc
std
sub
adc
mov
insb
sarb
push
mov
xchg
or
iret
popa
jnp
movsl
cmp
mov
push
and
adc
push
push
lahf
adc
ljmp
rclb
cmp
fsts
dec
adc
push
mov
sub
fidivl
and
add
mov
push
imul
outsl
xor
jnp
rolb
and
cmp
sbb
pushf
pop
xor
movsb
adc
movsb
mov
enter
pop
data16
adc
aaa
in
cmp
xchg
push
mov
sarb
inc
cmp
test
jmp
sbb
xor
jg
test
inc
movsb
sub
cmp
sbb
add
enter
inc
fsubrs
jo
push
xchg
rclb
adc
in
sbb
push
and
cmc
ficoms
in
push
outsl
pop
js
fsubl
dec
sbb
push
ret
mov
rorb
sbb
gs
aas
out
negb
push
sahf
sub
dec
jp
pop
sbb
jne
cmp
or
fmuls
mov
fildl
sub
dec
cwtl
in
dec
and
sub
cmp
mov
cmp
mov
push
cmp
sub
repnz
inc
xor
shlb
enter
sbb
add
ss
mov
into
add
dec
sar
or
daa
fdivs
cmp
jnp
inc
clc
hlt
xchg
stos
int3
mov
loope
jle
mov
xor
push
inc
push
scas
and
jne
sbb
out
test
call
jp
daa
sub
call
scas
cmp
dec
popa
scas
int
mov
dec
psubw
in
or
adc
aaa
ds
adc
xchg
or
scas
xor
sbb
pop
mov
cmp
push
mov
call
cmpsl
pop
mov
dec
mov
mov
sub
push
mov
imul
inc
and
fists
sti
cli
jne
pop
test
pop
out
les
test
lock
dec
ret
dec
in
scas
clc
inc
fldl
jns
jbe
lret
loopne
jle
addr16
xor
lods
idivb
mov
shlb
insl
lret
fcomps
popa
jno
mov
aad
mov
cmc
icebp
mov
push
lret
push
cmc
mov
data16
adc
shrb
addl
lahf
test
lea
cmp
jb
lods
rcll
push
pushf
mov
cmp
mov
ds
imul
xchg
or
mov
mov
sbb
lret
adc
jmp
dec
jno
adc
aad
lods
fcoms
or
stos
mulb
mov
leave
mov
and
adc
fadd
in
mov
xor
push
clc
es
xchg
xchg
clc
xlat
jecxz
pop
shlb
rolb
adc
lock
bound
cmp
add
or
cmp
sarl
add
mov
lret
cwtl
int
adc
xor
in
loopne
push
add
popf
add
pop
sub
inc
call
pop
push
sub
lret
faddp
iret
fwait
int
scas
pop
adc
pop
ret
fcmovu
dec
sti
aas
sbb
xor
mov
mov
xorb
mov
sub
ljmp
xchg
popa
mov
jmp
ds
lcall
sahf
imul
ficomps
add
push
inc
jle
cmp
call
or
push
or
in
or
btr
xlat
xchg
lock
mov
repnz
mov
fs
pop
dec
fdecstp
adc
inc
lcall
fildll
aaa
leave
push
jb
and
nop
add
mov
add
testl
add
add
jl
cmp
out
mov
icebp
add
mov
adc
sti
ja
xor
sub
jge
add
xchg
push
das
push
je
ds
out
jne
dec
repz
insb
mov
movsb
add
cmp
loope
xchg
loopne
jns
in
test
dec
jle
leave
mov
movsl
jns
orb
push
fcmovne
pop
push
xor
push
je
aaa
enter
adcb
sarb
cltd
rol
lahf
fldenv
mov
pop
sub
xlat
out
dec
jns
test
insl
and
popa
cmp
xchg
cmpl
in
sahf
cmp
cltd
imul
mov
or
clc
or
test
daa
xlat
dec
cmpsb
in
stos
or
mov
jmp
xlat
lcall
jp
notl
push
outsl
sbb
jb
adc
iret
sbb
outsb
xchg
jle
pop
insl
dec
jp
aad
pop
jge
pusha
cmp
shlb
pop
xor
add
cmp
in
mov
cmp
enter
inc
jne
test
out
mov
cwtl
bound
mov
fimull
faddl
jns
ret
push
jbe
int
inc
faddl
add
cmp
popa
jb
out
cs
dec
pop
xor
stos
mov
test
repnz
mov
out
loopne
fwait
pop
jns
frstor
sbb
cmp
push
pop
push
or
cs
insb
mov
xor
ja
lret
adc
sbb
xchg
fbld
mov
mov
mov
jecxz
mov
stos
test
sub
jno
push
fwait
xchg
add
inc
push
sbb
adc
dec
lret
jmp
or
inc
dec
clc
out
int
push
cmp
mov
push
ja
scas
fstl
out
jmp
jl
pop
pop
andb
dec
addr16
dec
mov
andb
and
testb
sti
in
sbb
push
data16
nop
cli
fnstcw
adc
adc
push
pop
mov
std
repnz
mov
mov
or
sub
fldenv
pop
stos
dec
mov
dec
push
imul
repnz
xor
ret
adc
inc
xchg
lret
and
xlat
sarl
jns
loopne
cmp
mov
js
push
das
pushf
lret
sbb
in
pop
cvtps2pd
data16
shl
lods
shrb
imul
bound
int3
icebp
imul
add
and
lea
les
dec
dec
cli
xlat
in
pop
outsl
dec
daa
scas
sub
push
cmc
nop
test
dec
popf
aam
popa
sbb
popf
mov
in
fcmovbe
lahf
lret
rcrl
jne
out
pop
jmp
mov
cmc
adcb
push
and
rcll
insb
cmpsb
xchg
mov
inc
and
in
lret
ljmp
ljmp
or
xchg
cmp
jb
lahf
sarb
push
scas
loop
add
and
xchg
inc
shlb
and
outsb
lods
into
imull
push
outsl
ja
adc
cmc
adc
movsb
movsl
sahf
fidivs
test
mov
cmpsl
jno
nop
xchg
test
lods
push
out
lcall
push
adc
mov
cwtl
jne
mul
xor
cld
adc
pop
adc
adc
sbb
out
in
jns
push
out
mov
movsb
or
repz
add
data16
pop
push
cmp
fbld
mov
adcb
sbb
and
gs
xor
bound
pop
rorl
mov
pop
inc
outsb
mov
shr
jbe
sub
sub
dec
or
loopne
aaa
sti
pop
test
lds
mov
pop
pusha
iret
mov
fucomi
and
push
bound
mov
pop
mov
cmp
ret
cwtl
add
mov
mov
sub
xchg
xlat
bts
call
out
stos
sbb
je
movsl
fwait
mov
or
pop
rcr
lods
out
push
dec
mov
ss
xchg
mov
shll
popa
mov
addr16
pop
lret
xchg
jbe
lret
push
lret
xor
dec
sahf
jns
fnstsw
sbbl
adc
iret
inc
inc
xchg
mov
sub
fildll
sub
ljmp
fs
mov
incl
icebp
xlat
into
adc
jne
les
cmp
int3
nop
mov
les
adc
test
out
adc
xor
sub
pop
outsb
in
repnz
xor
inc
add
test
sub
cld
push
or
cmpsb
adc
loope
mov
lods
mov
shrl
mov
pop
aam
out
mov
lock
jno
das
mov
idiv
xchg
xchg
xor
call
sub
in
cltd
pushf
xchg
fidivrs
cmp
xchg
and
lahf
into
mov
imul
jbe
mov
mov
stc
adc
in
pop
je
or
lods
jne
push
add
mov
jnp
ljmp
push
jnp
mov
fiadds
ds
in
test
ret
xchg
jg
jp
ret
filds
and
jbe
mov
test
pop
and
mov
scas
faddl
shrl
xor
mov
mov
xchg
ja
decb
out
and
xor
test
xchg
sub
mov
or
dec
popf
sbb
mov
push
addr16
push
ret
cmp
mov
pop
xchg
fldt
fs
out
aam
leave
jns
pusha
lahf
inc
sub
jp
leave
sub
in
inc
test
sub
cmp
dec
clc
jl
mov
sarb
rorb
jmp
mov
push
pop
push
cli
jl
pop
sahf
leave
jnp
push
and
or
in
inc
adc
dec
cmp
icebp
fisubrs
int
push
sub
push
pop
outsl
cmpl
pop
outsb
das
sbb
and
sbb
aaa
xchg
add
mov
in
mov
shll
xchg
rorb
movsb
and
fsubs
mov
int3
xchg
and
pop
mov
sbb
or
adc
jo
shrl
imul
movsl
stc
iret
pop
popa
xorl
sbb
fs
sub
push
xchg
adc
pusha
mov
cmpsl
mov
in
cs
fs
jmp
icebp
or
mov
daa
in
adc
roll
hlt
adc
and
sbb
jecxz
mov
xor
scas
mov
jge
jp
jno
and
sub
mov
push
out
cmpsl
std
scas
fisubs
push
stos
pop
and
pop
decl
test
xchg
ljmp
subl
pop
mov
out
cmp
mov
sar
cltd
divl
scas
jge
out
iret
pop
call
ja
jbe
xor
rcl
push
popw
lgs
pop
pop
lcall
out
mov
mov
ds
outsl
popa
xor
and
pop
adc
add
adc
mov
sbb
or
or
push
mov
pop
sahf
xchg
stos
nop
sbb
jnp
sahf
dec
jl
movsl
inc
adc
mov
add
sbb
push
or
add
inc
xchg
xor
inc
dec
pop
sub
les
or
or
mov
outsl
xor
ret
pop
gs
push
jp
dec
cmc
cmp
dec
test
pop
gs
fidivl
sub
add
in
int
shlb
ds
fdivl
mov
scas
add
lahf
xchg
clc
push
pop
sbb
inc
std
lret
sub
add
mov
mov
scas
jle
xchg
cmp
jns
add
aam
scas
push
sarl
rcrl
sbb
fadds
imul
ss
dec
lods
jno
mov
cmp
int
mov
je
in
daa
outsb
ja
popa
loop
xchg
add
movsb
mov
add
mov
std
push
jnp
test
cmp
aas
and
xchg
mov
in
pop
mov
pop
fisttps
cmp
aam
repnz
and
lds
pop
adcb
int3
pop
push
mov
imul
les
adc
not
xchg
scas
lahf
mov
push
xor
pusha
insb
shr
inc
cmp
dec
das
hlt
pushf
mov
mov
jecxz
push
pop
pop
adc
pop
outsl
mov
cld
call
int
dec
ljmp
dec
es
push
sub
push
in
jle
xchg
stos
cmc
xchg
cmpsb
das
push
jp
push
pop
test
decb
push
and
push
lods
sbb
cmp
insl
loope
add
push
xor
sub
jmp
aam
jecxz
es
dec
test
popa
es
fldcw
jno
fcoms
pop
jecxz
mov
mov
iret
int3
or
sub
adc
lret
jg
les
cmc
ljmp
cli
mov
shlb
mov
cli
shr
sub
fbld
outsl
rcrb
sarl
bound
cli
mov
sbb
sahf
jb
in
xchg
out
inc
loopne
mulb
mov
jp
xor
inc
xlat
xchg
xchg
call
in
icebp
popf
cmpl
fucomi
or
mov
cli
add
dec
clc
imul
in
cltd
cmpl
jns
push
jp
lahf
xchg
xor
mov
jnp
mov
pop
xchg
ds
lahf
sbbl
std
adc
pop
cmp
pop
pop
xchg
cs
mov
pop
dec
out
int
lcall
and
sti
mov
add
xlat
dec
mov
ljmp
dec
pop
xchg
pop
adc
rorb
mov
pop
jle
sub
or
adc
dec
cmp
and
shrl
cwtl
in
ljmp
jns
sbb
add
add
push
jp
push
call
fmull
mov
into
out
iret
call
es
lods
lcall
jg
jno
pop
js
cmpl
mov
or
mov
xchg
lods
jo
loopne
fisubrs
mov
ret
shrb
and
pop
lock
xor
lahf
addr16
fstpt
test
jmp
cld
out
adc
xchg
xchg
imul
xchg
nop
mov
jg
scas
inc
pop
shlb
xor
loope
xchg
scas
dec
jecxz
mov
cmpsb
shrl
xchg
lods
jo
daa
dec
jnp
jg
cmp
nopl
leave
shrl
add
in
push
pushf
test
jg
adc
cmp
in
clc
fisttpll
xor
inc
outsb
pop
add
push
mov
push
sub
mov
pushf
mov
ret
ret
jo
movsb
and
js
and
pusha
stc
jge
das
arpl
lret
or
int3
scas
addr16
daa
xor
inc
ret
mov
xchg
mov
clc
sbb
and
jle
daa
shr
inc
ficoml
rclb
mov
jge
pushl
cmpsl
int
out
mov
inc
inc
fildll
xchg
cwtl
pop
cld
push
test
mov
push
iret
aad
pop
shrd
ss
inc
lret
lock
dec
lret
cmp
mov
mov
test
sbb
and
inc
out
repnz
sub
test
fdivl
ja
pop
aaa
loope
mov
inc
subb
dec
fisttpl
addr16
cmp
sub
or
shll
es
cwtl
es
jnp
cwtl
lcall
ja
jge
jno
mov
fyl2xp1
add
sub
xor
xor
jno
sub
dec
mov
xchg
daa
cmp
pop
inc
fdivrl
pop
mov
outsb
push
inc
add
rcll
pushf
sub
aaa
or
mov
add
pop
cmp
mov
inc
out
cmc
dec
scas
les
or
sti
sub
xchg
pushf
insl
repz
je
fincstp
out
stos
call
cmp
jae
rcl
aaa
xchg
lea
pusha
pop
cmpsl
in
fisttpl
sti
in
inc
and
clc
or
mov
xor
dec
xor
cmp
jg
mov
fs
jecxz
cmp
sub
sbb
push
pop
in
xchg
mov
pushf
jecxz
out
sarb
ljmp
and
push
pop
ret
std
xchg
adc
hlt
dec
dec
out
aas
or
out
cmp
and
cmp
sbb
cmp
adc
mov
mov
in
fldt
aam
mov
mov
aad
outsl
dec
loopne
add
fwait
shlb
cmp
pop
mov
nop
pop
or
jne
push
rcr
jb
das
push
fistps
getsec
cltd
and
pop
gs
cld
sub
pusha
xchg
jnp
dec
scas
cmp
pusha
push
dec
popf
adc
mov
clc
jp
cmp
scas
jne
xor
dec
xchg
lock
sbb
jno
mov
cmp
movsl
loop
mov
xor
lods
add
fwait
ljmp
add
jle
lds
add
cmp
in
cwtl
xor
mov
fcomp
and
insl
in
ret
or
pop
xlat
cmp
out
idiv
jae
cld
mov
jnp
push
mov
add
xchg
mov
test
xchg
jge
dec
mov
pop
leave
roll
lahf
movsb
lods
xchg
ret
testl
pop
xchg
std
incl
cmpsb
in
inc
pop
ret
popf
adc
adc
jmp
xchg
sbb
je
ds
outsl
mov
xchg
stc
push
and
sahf
sbb
stos
pop
leave
sbb
or
dec
lds
inc
cmp
adc
inc
adc
ljmp
int3
std
inc
mov
lahf
dec
sti
xor
into
das
sub
fs
mov
loopne
pop
repnz
lods
add
pusha
jg
nop
lods
dec
push
mov
xor
mov
and
pop
add
jb
rcrb
push
imul
sub
sub
out
stos
jns
cmp
jl
jp
popa
xor
hlt
test
jae
loope
jmp
lods
cmp
sub
cmp
cltd
cs
sbb
mov
mov
insl
ds
shll
sbb
push
pusha
lock
popl
movsl
pusha
ljmp
fsubrs
push
xor
sbb
ret
outsb
xchg
lea
outsl
jg
enter
std
mov
pusha
lahf
and
testb
pop
and
stos
rorl
mov
jb
lods
push
xchg
jns
xchg
mov
in
or
dec
dec
push
sbb
cmp
out
cld
pop
adc
ficomps
add
xchg
popa
jecxz
out
out
jns
inc
fmuls
negl
mov
popa
jg
add
and
test
cmpsb
inc
mov
xchg
das
jbe
jnp
sbb
inc
or
adc
mov
sub
pop
mov
pop
push
fscale
aas
or
rcll
inc
pop
test
fisubrl
packsswb
lret
std
sbb
adc
lahf
gs
mov
loopne
jns
into
dec
nop
pop
mov
sbb
cmpsb
and
stc
xor
push
sahf
mov
mov
iret
and
jl
fsts
cmpsb
ret
and
jo
xchg
pusha
push
pop
imulb
ret
in
cmp
stos
inc
dec
adcb
pop
jnp
xchg
inc
lods
pop
das
sub
add
enter
mov
jge
cmp
pushf
aaa
aam
adc
mov
xchg
push
fcmovu
cmp
adc
pop
adc
push
out
mov
or
daa
ss
adc
cmpb
aad
push
xchg
rol
or
lds
sub
jge
jmp
mov
xchg
xchg
push
cmp
dec
add
jno
clc
lds
fwait
arpl
jb,pn
jo
cmp
sbb
and
mov
stos
and
sbb
sbb
jnp
dec
or
pop
in
cmp
mov
fsubrs
sbb
mov
repz
add
pop
xor
mov
mov
dec
pop
sarl
sbb
dec
mov
je
out
fisubrl
adcl
addb
inc
movsb
in
sbb
xchg
sbb
adc
out
xchg
data16
add
xlat
sbb
aaa
pop
out
aas
mov
mov
je
mov
push
loopne
decb
or
test
cmpsb
out
push
pop
and
aad
dec
add
pushf
js
sub
repnz
das
stos
and
dec
jg
push
pop
cwtl
sti
sub
test
mov
aaa
mov
inc
and
inc
das
shrl
mov
arpl
in
inc
rolb
aam
scas
mov
cmpsl
push
cmp
aam
mov
mov
fisttpl
lea
pop
dec
jg
jle
adc
daa
test
out
and
hlt
mov
rorl
xchg
out
inc
xchg
iret
mov
mov
sub
inc
adc
mov
jo
les
das
das
sti
pop
add
add
insl
inc
mov
aaa
jbe
cwtl
and
and
mov
in
xchg
decl
test
pop
lahf
sub
icebp
es
cmpsl
sub
dec
popa
add
int
add
add
adc
cmp
add
push
and
jmp
pushf
lds
add
sbb
cld
jp
clc
ljmp
in
inc
jae
insl
mov
push
dec
sbb
dec
sub
hlt
fwait
in
cmp
daa
out
je
outsl
sbb
mov
ret
pop
insl
ja
sbb
add
mov
xchg
sub
das
dec
adc
shll
and
dec
es
pop
enter
jne
push
adc
mov
daa
jge
or
pop
mov
fwait
mov
stos
sub
push
shrb
and
ja
mov
hlt
stos
aad
and
sbb
dec
hlt
aad
out
mov
mov
jle
pop
cld
adc
les
inc
mov
notl
sahf
mov
sarl
inc
iret
lds
adc
cmc
inc
das
mov
mov
test
lret
call
movsb
into
andl
ds
movsb
mov
push
ds
call
push
loop
lahf
std
mov
jge
adc
dec
sub
fistps
aad
sbb
daa
pop
fistpl
test
mov
adc
sar
bound
mov
push
or
pop
inc
xchg
push
adc
es
pop
test
mov
shr
movsb
pusha
in
je
ret
mov
add
and
pop
sub
sub
out
les
lock
push
out
test
loopne
jge
sbb
nop
fwait
adc
out
cmp
int
sub
adc
mov
jns
push
sbb
bound
stos
call
xchg
xchg
mov
cmp
dec
fstpt
sub
mov
xchg
mov
call
aaa
cwtl
insl
call
push
aad
pop
cmc
xchg
jl
lcall
xor
sbb
adc
addr16
pop
into
push
xor
mov
ja
or
cwtl
sarb
push
cmc
or
out
cmp
push
and
fs
cld
jmp
sti
cltd
das
test
fwait
push
or
add
mov
jo
loope
clc
scas
or
mov
ss
and
jae
push
test
adc
xor
idivb
lahf
push
jecxz
push
jae
lcall
int3
jbe
nopl
cmp
xor
mov
ss
mov
lcall
out
not
movsb
sbb
push
rclb
daa
stos
xchg
movsl
cli
adc
repz
jo
xchg
jg
cmp
test
pop
cli
or
jmp
mov
lcall
movsl
int
xchg
dec
mov
mov
cmp
pop
pop
jl
add
lds
jmp
jecxz
repz
std
pop
outsl
or
lea
mov
ss
inc
add
or
mov
add
stos
aam
push
adc
mov
pop
aas
testl
mov
jns
ret
sub
xor
lods
jmp
scas
in
sub
cmp
lret
ja
fs
jmp
pop
jmp
repnz
push
ja
dec
jg
mov
lret
mov
aaa
cmpsb
rcrb
test
shlb
lret
jl
call
inc
out
pop
jge
xchg
out
into
dec
lods
and
pmaxsw
je
gs
sub
cmpsb
fidivs
shr
nop
add
sub
mov
pop
jecxz
sbb
ljmp
mov
mov
insl
add
fsubl
insb
jbe
adc
popf
inc
add
fs
sbbb
cmp
xchg
xchg
int3
sar
xor
inc
pop
xchg
add
mov
or
rcll
push
sub
jbe
cltd
daa
add
mov
cs
int3
in
push
xor
ret
dec
adcb
and
adc
mov
mov
ljmp
imul
test
in
or
add
inc
repnz
js
jbe
push
dec
lea
jge
stos
stc
nop
sub
adc
adcl
mov
and
pop
out
leave
adc
jo
out
ret
mov
mov
sub
jnp
repnz
pushf
aad
inc
and
xchg
mov
cmp
sub
negl
imul
dec
lahf
cmpsb
add
cmp
pop
or
sub
ret
sbb
test
stc
push
jo
xor
add
sbb
shrl
into
mov
arpl
dec
dec
jmp
sarb
inc
jnp
lods
mov
jae
cmp
mov
stos
or
mov
push
xchg
or
push
sub
or
add
mov
xlat
fucomi
sub
les
push
sbb
test
xor
push
sub
inc
aas
cmp
mov
mov
xchg
sbb
lret
sub
jecxz
sahf
mov
jbe
cmpsb
test
add
int
rclb
mov
mov
mov
and
sub
add
subb
adcb
loopne
leave
mov
mov
addr16
ja
sub
sub
adc
mov
pop
mov
xchg
xchg
ret
and
test
test
fs
scas
xor
xor
lods
sub
movsl
movsb
popa
fisubrl
sbb
outsb
jnp
xchg
push
arpl
orb
cmp
stos
xor
imul
into
loopne
inc
push
leave
ret
scas
adc
dec
pop
sbb
push
inc
xchg
mov
mov
pop
nop
clc
dec
rclb
xchg
lret
cmc
std
pushf
xor
adc
mov
xor
and
pop
clc
imul
rclb
push
adc
test
push
xchg
xor
pop
lcall
loop
in
xchg
cmp
mov
mov
ds
int
lret
shlb
push
stc
adc
push
push
dec
pop
rcl
cs
dec
lret
mov
or
leave
add
mov
scas
cs
xor
mov
ret
imul
xchg
imul
sbb
xchg
test
clc
pop
mov
jns
cmp
loope
mov
cmp
mov
mov
mov
xchg
jp
sbb
sbb
sahf
cmpl
sub
push
int3
sub
dec
movsl
inc
daa
inc
adc
int
jge
fwait
mov
jae
gs
pop
and
xchg
add
sti
sbb
hlt
aas
loope
mov
inc
cmpsl
dec
notl
les
push
arpl
in
mov
and
mov
mov
add
mov
insb
xchg
push
push
lahf
xchg
js
adc
sub
pop
push
add
mov
rcl
insl
push
cld
jbe
xor
xor
sbb
inc
test
pushf
fadd
adc
and
mov
ret
clc
not
sub
pop
out
push
cmc
push
fistps
ret
aas
add
mov
icebp
shlb
sahf
scas
lods
repz
or
aas
punpckhdq
or
popf
mov
insl
insl
sahf
adc
ljmp
mov
add
mov
mov
push
pop
les
lea
rcl
sub
push
jmp
scas
lock
and
xchg
cmc
bound
pop
into
and
cmpxchg
jge
les
test
cld
push
or
xchg
insl
xchg
sbb
add
popf
sti
enter
sbb
xlat
mov
repnz
pop
push
sub
mov
out
pushf
cmp
push
fs
mov
pop
ficoms
in
mov
push
mov
pop
addr16
shlb
or
ljmp
fldl
jmp
and
xchg
mov
out
mov
and
xchg
fucom
xor
scas
sbb
mov
addb
mov
dec
push
loopne
push
jbe
jge
inc
aam
inc
cli
stos
fstps
lcall
enter
jae
lods
push
test
repz
orl
push
mov
cwtl
pushf
inc
sub
idiv
adcb
pop
xchg
add
inc
mov
sub
pop
lret
or
addb
fwait
sarl
xor
sub
cltd
sbb
adc
and
lret
and
enter
das
mov
out
adc
hlt
inc
jle
mov
movb
xchg
mov
or
mov
aas
in
addr16
and
mov
push
push
sbb
jno
lret
iret
repnz
pop
adc
fmull
fidivl
pop
jp
ffreep
mov
or
push
into
scas
sbb
jb
adc
dec
cmpsb
sbb
xchg
lret
imul
jle
dec
hlt
mov
mov
push
pop
push
or
xchg
repnz
mov
ret
push
lahf
hlt
and
mov
push
scas
in
mov
int3
sub
lock
js
shrl
insb
shrl
not
push
jns
das
testb
adc
cld
jle
call
xor
push
mov
xor
sbb
and
popa
insl
in
xchg
push
and
mov
in
test
andl
call
push
stos
dec
xor
les
pushf
xchg
xchg
pop
mov
int
aaa
and
das
inc
nop
int
inc
xchg
add
push
in
sahf
iret
call
xchg
ljmp
stc
cli
fwait
mov
sahf
sbb
je
push
adc
ret
insl
ret
mov
shr
inc
subl
dec
push
bound
push
jl
leave
in
into
sub
sub
dec
push
jo
xor
add
jp
jl
mov
sbb
insb
cli
lea
js
fisubs
loopne
pusha
xchg
lcall
mov
rcl
pop
xor
inc
pop
rcr
mov
xchg
mov
push
mov
test
push
mov
fcomip
push
pop
pop
in
jno
ljmp
aam
fdivrl
insl
fiadds
and
ljmp
mov
mov
out
push
push
test
mov
add
pop
and
adc
dec
sub
jle
out
sbb
fisubl
inc
loop
out
fisubrl
arpl
mov
inc
sub
and
fcmovne
mov
xchg
adc
jno
bound
sub
add
insb
pmullw
sbb
jnp
jg
movsb
ds
in
dec
lret
fldenv
pop
jae
testl
into
mov
push
sbb
dec
push
out
push
test
add
mov
movb
and
jmp
sub
inc
iret
lahf
inc
fcoms
cwtl
sbb
aad
push
sbb
jo
shrl
lret
mov
mov
and
loop
xor
xchg
in
mov
jno
lcall
sarb
mov
icebp
dec
mov
jne
adc
sti
imul
jnp
and
adc
ss
mov
leave
or
loopne
out
mov
lds
lahf
xor
icebp
repnz
and
pop
and
sub
and
movsl
enter
mov
mov
cmpsb
mov
test
add
inc
sub
nop
jns
xor
mov
mov
pop
test
mov
mov
ljmp
cmpl
xor
push
push
fdivrl
andl
xchg
pushf
fimuls
xchg
mov
outsb
fdivrs
add
ret
dec
cmp
cmpsl
jg
lahf
imulb
xor
jp
jmp
mov
mov
inc
xchg
pop
sar
negb
mov
jns
pop
add
jp
dec
bound
ljmp
cwtl
mov
mov
sbb
xchg
mov
xor
lahf
or
push
xchg
mov
push
adc
popa
hlt
xlat
push
hlt
les
movsb
or
mov
sbb
pop
cli
aad
sbb
xchg
push
push
inc
insl
adc
xchg
push
aaa
into
inc
outsb
adc
or
inc
sbb
frstor
cld
push
fistpll
jl
sahf
xor
jne
icebp
xchg
loop
dec
ljmp
mov
dec
and
pushf
das
push
enter
data16
and
ljmp
mov
xor
push
addr16
cmp
fdivr
cltd
jp
lea
inc
in
test
call
pop
mov
fmuls
adc
mov
fcoml
imul
daa
xor
hlt
dec
adc
mov
je
cli
pusha
add
xchg
xor
dec
shlb
fldcw
xchg
push
repz
loopne
movl
insl
insb
xor
rcrl
and
daa
or
mov
adc
jno
push
jecxz
adc
xor
hlt
gs
xchg
xchg
push
repnz
ds
sub
hlt
test
xchg
mov
inc
cmc
mov
jo
std
test
lock
sbb
and
or
int3
ljmp
loopne
lret
leave
addr16
arpl
ror
push
xor
mov
mov
fldcw
dec
cltd
pop
sub
push
roll
cli
mov
add
jg
xchg
cmpsl
lods
ljmp
es
dec
add
jge
mov
lcall
or
mov
bound
in
je
mov
add
mov
jmp
inc
push
dec
adc
adc
pop
dec
imul
or
pop
cmpsl
push
push
mov
pushf
pop
std
call
jp
xor
mov
lret
es
pop
cltd
adc
test
ljmp
push
mov
push
sub
xor
jle
pop
add
imulb
or
cs
xchg
xor
dec
mov
mov
nop
out
loop
pop
in
push
movnti
mov
adc
push
imul
fsubrs
push
sbb
fiadds
fsubp
daa
insl
and
test
mov
lods
pushf
imul
cmp
test
popf
xor
stc
bound
iret
cld
inc
dec
bound
or
sub
int
cmp
push
cs
adc
jo
ss
shlb
lret
mov
add
pop
gs
out
jp
adc
iret
fists
mov
out
jp
lahf
sbb
inc
sub
into
mov
and
scas
maskmovq
negl
imul
cmpsl
lods
shll
insb
ficoms
bound
std
xor
sub
roll
roll
dec
mov
cmpsl
push
lock
mov
mov
rcrl
pop
jne
xor
in
push
in
and
fwait
mov
xchg
outsl
cmpsl
push
stc
das
in
sti
test
shll
pop
ds
lods
pop
fdivrs
dec
pop
pop
jl
pop
test
ficoml
repz
outsb
out
in
adc
enter
dec
mov
cmp
test
fcmovnu
es
and
mov
pusha
in
xor
int3
push
sub
daa
test
clc
cwtl
int
mov
mov
gs
les
add
lods
insl
sub
mov
test
or
lea
sub
mov
ljmp
add
fldt
jecxz
mov
mov
mov
mov
test
jb
pusha
aam
mov
stos
inc
inc
daa
and
or
xchg
bound
mov
daa
dec
or
mov
sbb
insl
mov
push
add
mov
in
call
push
fstpt
orb
mov
mov
mov
inc
loope
xor
sub
sbb
nop
bound
out
repz
iret
xchg
mov
scas
cmpsb
repz
das
jns
std
xor
pusha
and
fsubl
xor
rorb
les
mov
fdivrs
cmp
out
sub
adc
push
aaa
nop
cli
fldenv
jb
bsf
sub
mov
lcall
xor
stos
push
and
imul
push
and
dec
into
push
sbb
dec
mov
fs
xchg
pop
int
out
sub
add
and
stos
mov
dec
aaa
pop
shr
xor
pop
insb
xchg
mov
inc
rorb
push
jmp
adc
test
int
adc
pop
popa
xor
int
pop
cltd
xor
dec
shl
push
sub
rorl
sbb
repz
xlat
jo
mov
add
int3
cltd
xor
jae
dec
in
roll
into
xchg
push
or
sbb
in
mov
dec
mov
push
iret
sub
out
mov
aad
push
fdivrl
fnstenv
push
add
or
push
xor
xor
lods
push
cmp
das
sbb
into
cmp
stos
leave
or
pand
fucomp
nop
sbb
cmpsb
js
dec
cmp
movsb
xchg
mov
loopne
je
fidivrl
clc
sub
cld
cli
push
adc
jge
add
mov
dec
sub
xchg
outsb
xchg
mov
sbb
jno
loope
outsl
flds
jno
push
inc
jmp
aad
fldcw
and
jmp
nop
jb
sub
lods
in
filds
or
sbb
ror
xor
cmc
push
arpl
pop
std
addr16
push
jae
bound
lock
lock
xor
or
flds
pop
cld
pop
ret
push
sub
and
scas
push
and
arpl
sub
add
jno
andl
pop
cmp
mov
inc
pop
jno
std
mov
cmpsl
sbb
mov
mov
inc
jg
out
repnz
addb
stos
or
js
inc
sbb
leave
mov
xchg
jmp
cmpl
push
push
stc
test
sbb
adc
lock
and
pop
dec
mov
lods
mov
inc
sbb
mov
xor
cmp
xchg
and
push
mov
sub
push
sub
mov
loopne
add
xlat
cld
xor
sub
sbb
int3
sahf
push
adc
out
mov
push
cmpsb
add
xor
jle
dec
dec
out
inc
add
movsl
jmp
aad
addr16
int
add
xor
outsb
scas
jmp
adc
add
das
adc
dec
daa
imul
sarl
push
in
push
std
jno
mov
cmpb
lock
cmp
mov
cmp
lea
push
xor
inc
cmp
movsb
dec
fisubl
xor
jp
and
mov
or
outsb
sub
fwait
pop
js
lds
imul
in
adc
rcl
sub
fcmovnbe
outsb
stc
inc
cs
sbb
out
xchg
dec
loope
add
das
in
stos
test
scas
fldt
xorb
inc
adc
mov
mov
enter
pop
mov
lods
mov
test
fistps
xor
les
in
mov
sub
movsl
push
sbb
mov
loope
dec
cltd
inc
ret
cmp
pop
cld
xor
push
mov
or
and
out
and
cli
sbb
or
xchg
cmp
pop
gs
cmp
mov
mov
push
or
sahf
pop
cmp
sbb
ret
lods
dec
push
add
push
cmp
aaa
loope
mov
mov
xor
cmc
and
inc
jmp
mov
pcmpgtw
mov
jecxz
dec
sbb
cmpsl
aad
sub
jae
inc
test
pushf
xor
jne
pushf
dec
pop
jmp
int
mov
sbb
sub
js
iret
mov
inc
jb
add
mov
pop
jne
pop
sti
adc
jle
imul
mov
arpl
mov
xor
mov
xchg
mov
sub
cmc
mov
xchg
int
shlb
xor
ss
cmp
test
xchg
movl
mov
pop
aam
in
enter
cs
pusha
cmpsl
loop
mov
cmp
jbe
outsl
int3
inc
pop
adc
jo
xchg
mov
sub
push
loop
or
jns
push
das
mov
lods
pop
pop
imull
in
js
cwtd
test
ss
jb
mov
xchg
ficoms
jle
decl
inc
ret
in
adc
pop
lock
pop
sub
push
xor
adc
add
or
dec
add
mov
inc
leave
dec
comiss
bnd
or
mov
add
shll
pop
and
cmp
cmp
mov
addl
mov
jns
popa
cmp
jle
js,pt
insb
xchg
jbe
sahf
dec
fistl
cltd
stos
lods
shll
rclb
adc
aaa
sub
and
out
cmc
stos
ret
les
in
fld
adc
lock
enter
inc
es
lock
pop
xchg
push
cwtl
and
ret
bound
aas
xor
enter
pop
push
les
cld
or
mov
fcoml
hlt
or
jecxz
pop
xchg
les
sub
pop
mov
mov
cs
and
inc
dec
mov
lcall
scas
dec
lods
mov
xor
sbb
rcr
test
sbbb
push
push
push
mov
jbe
cmpsl
pusha
or
lock
sarb
inc
adc
js
push
ret
mov
push
pop
out
es
insb
add
add
xchg
push
xor
pop
adc
adc
dec
xchg
jno
sbb
mov
pop
xor
or
cld
xchg
sbb
es
data16
les
lds
mov
dec
shll
pop
add
or
std
outsl
nop
add
xor
cmp
scas
cmp
insb
jae
mov
dec
or
jbe
pusha
sahf
int
es
lds
test
lds
sahf
xorl
mov
push
into
xchg
and
sub
cmp
pop
daa
popa
into
sbb
pop
mov
mov
shlb
ret
jmp
pop
cmp
jmp
hlt
dec
ret
adc
cmp
xor
xor
push
into
mov
popf
ss
or
bound
dec
in
mov
data16
or
mov
int
inc
sub
lret
sub
out
ret
push
jle
mov
mulb
push
mov
ror
outsb
js
xor
pop
test
in
xchg
lcall
mov
outsb
lea
fistl
pusha
push
mov
mov
add
out
push
push
icebp
sub
xor
push
in
mov
mov
into
ss
addl
add
or
nop
mov
repz
hlt
roll
cltd
jmp
jp
or
stos
jne
lock
mov
outsb
inc
in
lahf
cmp
pop
adc
ret
xor
pushf
dec
pushf
cld
stos
dec
pop
push
cmp
repz
notb
shlb
pop
movsb
ss
xor
leave
test
mov
daa
dec
xchg
push
loopne
mov
push
and
add
fadds
pop
jbe
outsb
out
push
and
push
sahf
repz
jl
cmp
shll
dec
mov
xor
pop
jb
xchg
insb
push
mov
addr16
fwait
icebp
lahf
in
rorl
adc
mov
jge
inc
pushf
mov
push
repz
mov
jns
es
mov
mov
add
add
xchg
xchg
xchg
or
and
and
pop
lods
adc
pop
adcb
adc
leave
cmp
fstps
adc
std
sub
dec
jmp
add
mov
sti
push
lods
jl
ja
fstp
ret
pop
lock
sbb
lods
sti
mov
scas
pop
or
mov
jae
add
cld
cmp
int3
repnz
jns
iret
sti
push
rcll
sub
mov
iret
out
fstps
test
lds
sub
xchg
fdivrp
sahf
outsl
gs
pop
mov
adc
mov
push
imul
dec
addr16
add
out
les
adc
cmpsl
add
ja
mov
xchg
insl
jmp
inc
idivl
cwtl
sar
jmp
cmpsl
add
subb
xchg
pop
ss
int3
mov
dec
mov
jge
mov
inc
fwait
xchg
imul
into
outsb
or
push
add
in
and
xchg
jge
and
notb
inc
test
cwtl
bound
negb
or
sarb
pop
fidivl
pusha
stos
or
popa
push
andl
ss
insb
jbe
jbe
lret
and
inc
imul
inc
cmc
mov
iret
sbb
mov
mov
cs
cmp
flds
sub
or
js
jno
cs
out
and
mov
cmp
inc
sub
and
popa
xchg
dec
xor
sub
push
mov
cltd
or
sbbl
sbb
xchg
push
nop
mov
adc
inc
sarl
inc
cmp
jg
mov
mov
or
xchg
push
mov
xchg
fnsave
sbb
in
mov
sub
jmp
addr16
gs
in
lret
aam
xchg
sub
adcl
test
sub
jmp
fsubl
cmp
mov
ds
mov
or
cltd
or
add
mov
test
outsl
push
jecxz
fisttpll
mov
scas
or
insb
jae
pop
adc
ds
popf
dec
fcoml
mov
dec
pop
repnz
scas
dec
jnp
addb
jge
subb
mov
jmp
icebp
sub
add
lret
inc
pop
xor
lahf
repnz
leave
into
sub
mov
outsb
add
sbb
cmpsl
outsb
out
add
fsubrl
test
ret
inc
ja
and
addr16
rcrl
subl
push
fdivrl
stc
lret
add
stos
jle
in
sbb
xchg
pushf
bound
push
subl
inc
ljmp
fdivl
inc
push
lret
dec
and
into
sub
gs
adc
and
sub
repz
push
ljmp
jg
test
fsubrl
imul
xchg
mov
pop
or
call
jbe
inc
add
and
or
adc
loope
std
mov
inc
mov
pushf
iret
add
jle
rorb
and
jo
scas
movsl
iret
inc
add
mov
mov
push
in
add
mov
stc
mov
stos
jbe
inc
mov
push
mov
aas
scas
shlb
les
cmp
jmp
test
lock
cmp
pop
and
in
xchg
hlt
out
jl
and
mov
mov
push
and
inc
jg
pop
insb
sti
push
popf
push
out
cli
jge
jns
or
push
sahf
jb
xchg
aas
outsb
sub
and
insl
mov
ret
data16
jne
fildll
jne
out
arpl
fwait
jb
push
inc
ror
pusha
sbb
xor
loopne
cmpsb
addr16
cmp
es
adc
clc
or
mov
enter
lds
xor
test
lods
sbb
dec
dec
sti
ljmp
rorl
xchg
imul
lods
data16
xchg
push
dec
out
insb
repnz
jg
cmp
imulb
adc
push
cmp
pop
mov
bound
and
xchg
test
cmp
test
cwtl
movsl
push
dec
pusha
sub
push
negl
pop
cmp
or
and
push
cmpsb
int3
popa
pop
out
lods
pop
and
jp
testl
pop
xor
fsubr
rclb
adc
xlat
mov
mov
out
orb
insb
push
movsl
les
add
push
pop
popa
and
pop
inc
icebp
pop
mov
sub
mov
mov
adc
xchg
stos
mov
mov
push
data16
inc
call
mov
bound
dec
aaa
mov
or
loop
dec
push
xlat
dec
ficoms
dec
nop
mov
lcall
clc
adcl
insl
js
xchg
or
add
push
cmp
xor
test
jne
in
out
fldenv
in
shll
pop
push
insl
mov
mov
int3
dec
push
mov
scas
and
and
in
mov
cmp
inc
and
mov
lods
fldl
jo
lock
pop
jp
cld
pusha
or
mov
jo
cmovne
je
rclb
mov
stos
inc
mov
pop
pop
and
adc
popf
jne
aas
inc
rorl
xor
pushf
pop
addb
call
push
pop
mov
fisttps
add
sbb
xchg
dec
ficoms
cwtl
popf
mov
leave
fstpl
pop
int
lret
test
mov
lcall
mov
inc
pop
stc
xchg
lods
pop
fists
pushf
mov
push
cmpsb
push
int3
fsqrt
push
jns
mul
xchg
es
or
lret
adc
sub
ljmp
cmc
call
push
out
and
dec
pop
in
adc
adcb
gs
fstpt
pop
xchg
cmp
loopne
mov
inc
xor
das
sarb
in
inc
push
fdivrs
cmp
ret
lahf
daa
icebp
and
pop
dec
shrl
stos
stos
cld
and
std
sub
mov
fistpll
mov
xchg
test
jo
push
pop
pushf
sub
pop
insb
mov
adcb
cmp
dec
mov
push
and
cmp
and
add
imul
repz
push
xchg
xchg
adc
xor
cmc
inc
jb
pop
fcompl
shlb
fsubr
pop
or
xchg
and
aam
mov
outsb
adc
jno
and
call
push
loop
sbb
stos
sbbl
xlat
ror
aaa
sbb
imul
les
out
cmp
xor
lret
sub
ret
ja
xor
rcl
cld
lock
shl
jo
adc
and
sarb
int3
dec
pop
jge
pop
aas
adc
andb
push
mov
mov
stos
mov
faddl
sub
fmull
xor
lds
adc
mov
pop
icebp
push
ljmp
add
jo
lret
enter
inc
outsb
test
or
xor
lret
jno
pusha
add
mov
sub
fisttps
push
rcrl
and
call
hlt
popf
dec
ret
ds
mov
push
sub
lods
jnp
inc
out
shlb
repnz
scas
fdivrl
pop
mov
and
cltd
loopne
ficoml
call
test
push
fstpt
xor
je
or
in
lock
aam
push
fimuls
or
add
xor
incl
ljmp
movsb
jge
xlat
xor
sub
jbe
les
dec
shll
and
mov
xlat
mov
gs
xor
fldl
out
fwait
push
les
iret
sub
adc
inc
dec
aaa
js
fidivl
in
ljmp
shrb
dec
ljmp
mov
cli
call
lea
addr16
or
aas
push
pop
inc
mov
xor
cmp
jb
pop
jb
and
ss
sbb
mov
adc
testb
scas
cmp
adc
xchg
in
popf
push
leave
push
movsl
inc
mov
je
ljmp
xlat
xchg
inc
dec
das
pop
test
mov
dec
and
lcall
lods
xchg
adc
dec
sbb
fwait
and
repnz
fwait
push
ja
mov
xchg
jbe
add
sbb
jle
dec
mov
call
fadds
cmpsl
jecxz
xchg
sbb
sti
scas
dec
pop
lock
outsb
mov
out
rorl
out
push
inc
dec
add
call
mov
dec
xchg
ret
fnstcw
ret
data16
lods
fildl
mov
in
xchg
lcall
rcl
inc
aad
mov
jecxz
xor
push
jnp
cmp
mov
movsl
push
mov
stos
test
in
in
cwtl
shrl
movsb
inc
in
inc
loop
xor
shlb
push
lods
fs
pop
xchg
test
sub
xor
lret
loopne
pop
addr16
insl
pop
adc
rcll
pop
sbb
pushf
pop
in
cs
inc
or
mov
test
lret
popl
sbb
push
push
or
ljmp
jno
icebp
pop
cmp
icebp
and
rcrl
mov
and
jb
outsl
push
push
enter
int3
mov
pop
pop
ret
mov
mov
out
or
loope
sub
sub
xchg
mov
ljmp
popa
or
cmp
les
lahf
xchg
insl
mov
mov
addr16
dec
test
lea
fmull
adc
aas
jnp
in
jb
mov
ret
and
int
add
into
lock
mov
ret
sub
push
pop
mov
gs
outsl
nop
outsb
mov
sub
or
std
js
clc
jecxz
mov
leave
pop
jo
inc
test
sbb
push
ds
bound
pushf
das
xchg
xchg
xor
lods
lahf
jmp
xchg
ss
dec
dec
mov
push
inc
push
gs
subb
fyl2xp1
loop
pop
jl
test
push
xchg
cwtl
xorl
sti
pushf
mov
pushf
push
fdivs
dec
adc
jg
push
xor
xor
pop
shll
xor
scas
sarb
sbb
jg
int3
fincstp
stos
or
sbb
fxtract
inc
shr
pushf
jmp
add
mov
push
pop
aad
cmpsb
xor
test
bound
xor
stos
lea
sti
inc
mov
jnp
cmp
sbb
mov
xchg
data16
insl
lea
sub
dec
lahf
xor
mov
outsb
addr16
pop
cli
ss
add
jne
es
cmpsl
mov
stc
jae
cltd
pop
cld
sbb
leave
aam
fcmove
add
push
hlt
shll
xchg
mov
xchg
loop
add
mov
xor
dec
mov
popa
push
or
movsl
jl
add
or
out
xchg
inc
inc
insl
adc
pop
out
repz
sub
sub
aaa
hlt
fcompl
outsb
jg
out
or
adc
dec
mov
push
jge
mov
jg
cld
loopne
jge
cltd
imul
pop
lds
xor
jecxz
les
xor
jp
in
mov
flds
idivb
cmpsb
adc
popa
add
jne
inc
in
mov
sub
sbb
in
mov
or
icebp
mov
pop
and
mov
jb
lcall
cwtl
add
out
cmp
jo
xchg
xchg
xlat
xor
arpl
out
lret
daa
xchg
imulb
jns
outsb
jmp
xor
adc
pop
pop
fucom
je
ds
inc
jb
jmp
aad
test
jne
xor
sbb
fadd
mov
add
std
inc
mov
sbb
arpl
and
dec
mov
insl
sub
mov
mov
mov
adc
fcmovnbe
xor
movsl
vphaddwq
dec
mov
xor
mov
adc
pop
aas
pop
lcall
je
aaa
sub
std
jnp
aad
daa
sub
jbe
cltd
cltd
lods
sub
add
inc
pop
scas
sbb
mov
orl
test
and
mov
lea
add
or
push
dec
lret
push
sbb
jg
cmp
pop
sub
stos
repz
out
push
scas
and
adc
popa
and
adc
aaa
les
mov
insl
xor
insl
cltd
movsb
jbe
mov
mov
dec
jp
bound
xchg
inc
push
movsl
in
xchg
jns
mov
in
mov
and
test
psubq
add
cs
mov
cltd
dec
repnz
into
jb
aad
int3
or
fs
pop
lret
mov
subb
fcmovnb
sarl
sar
movsl
inc
or
inc
mov
mov
pushf
pop
add
jno
xchg
popf
push
test
mov
push
push
or
mov
ret
xor
xor
add
adcl
fwait
and
popa
adc
or
inc
out
insl
cld
std
cld
xchg
add
add
arpl
jp
lods
xchg
cltd
mov
arpl
fidivrs
mov
sbb
jle
mov
out
push
ret
mov
cmpsl
add
adcb
push
add
jns
stos
in
sti
test
or
es
gs
push
mov
pop
or
pop
in
xor
xor
or
push
dec
rcrl
xor
pop
mov
push
outsl
iret
xor
xor
nop
neg
aam
jns
bts
shrl
xor
pop
cmp
rorl
or
mov
stos
filds
hlt
jne
insl
mov
rcll
lods
mov
xor
in
mov
add
sbb
pushf
aam
movhps
lock
out
mov
je
aaa
mov
aad
mov
popl
mov
outsl
or
and
rcl
into
push
jl
and
add
mov
jl
rclb
add
lahf
fistl
jb
dec
lea
jge
not
push
xchg
adc
push
stc
sub
xchg
jb
outsb
and
mov
adc
ja
dec
xchg
push
loopne
repz
lods
in
es
pop
dec
lahf
sbb
mov
mov
jle
dec
cli
mov
in
or
jns
daa
push
cmp
and
testl
imulb
push
mov
std
cmp
mov
xchg
inc
mov
xor
ret
pop
shll
inc
jae
inc
mov
aam
test
pop
andl
adc
or
lret
insb
inc
sub
fadds
pop
int
gs
jge
pop
add
push
and
mov
dec
mov
adc
cli
frstor
nop
cmp
xor
push
xchg
mov
add
xlat
mov
xor
sub
push
jnp
loopne
dec
add
inc
test
and
fldl2e
lods
std
je
mov
pop
or
push
mov
stos
adc
cwtl
scas
test
loop
inc
sub
add
out
fisubrs
adc
xlat
and
pushf
pop
xor
popl
sub
mov
setns
or
pushf
insb
or
sbb
ljmp
hlt
dec
adc
push
jecxz
lahf
sar
orl
sub
and
les
mov
push
testl
add
mov
mov
cmc
cmp
inc
sub
add
jmp
jns
lods
dec
shl
inc
xor
mov
cmp
scas
mov
hlt
jns
inc
shll
repz
jmp
pop
cwtl
mov
pop
test
jle
daa
mov
rcr
aam
jge
scas
push
mov
roll
xor
and
xlat
sbb
test
or
popa
dec
sahf
push
lahf
mov
cmp
xchg
dec
inc
sbb
sbbl
aad
mov
xor
xchg
mov
sbb
add
add
xchg
aad
sub
jb
in
pop
les
dec
clc
bound
cmp
push
bound
insb
mov
sarb
cltd
iret
push
jge
jge
loope
push
dec
sbb
sbb
imul
shr
mov
and
cmp
lods
jnp
mov
rclb
call
xor
jnp
jno
orb
test
or
xchg
aad
ret
xchg
push
or
pop
int3
jle
loopne
hlt
das
jp
jle
mov
sahf
sbb
ss
test
push
jle
sub
test
ja
mov
in
clc
push
aas
jle
add
xchg
adc
enter
outsb
mov
into
cmp
inc
lret
sub
mov
in
lds
test
sub
aad
repz
fiaddl
shll
sbb
aas
fsubl
mov
cmp
pusha
xlat
xor
repnz
mov
xor
fcompl
mov
inc
xchg
jo
add
xor
cli
push
enter
sbb
stos
clc
cmp
xchg
imul
and
or
in
push
ja
push
pop
addr16
sub
push
rorb
xchg
jecxz
leave
jns
lahf
leave
fsubrp
pushf
jp
repnz
cltd
shrl
sahf
repz
jge
test
push
pop
dec
jbe
cmc
clc
rorb
mov
inc
shr
sbb
dec
aad
or
ret
adc
push
out
loop
jae
fsubs
mov
jge
inc
xchg
jbe
add
mov
or
pop
sub
fistpl
jmp
jae
mov
int3
cmp
mov
sbb
sti
mov
mov
xor
xor
cmpb
mov
jns
ja
jnp
xchg
xor
mov
fwait
movsb
inc
sub
xchg
test
popf
idivl
fwait
loop
xorb
sub
mov
out
fldcw
inc
add
lods
mov
or
sbb
push
sbb
push
cmp
jno
dec
add
sbb
sbb
push
aad
arpl
xor
andb
dec
pop
xchg
or
add
push
in
mov
nop
clc
jg
dec
imul
add
mov
mov
repnz
in
jnp
jl
dec
les
cli
pop
xor
mov
cmp
pop
lcall
mov
rcll
enter
shll
sub
sarl
aas
shrb
mov
lcall
add
test
sub
xor
cmp
xchg
dec
dec
popa
dec
mov
int3
lcall
mov
lret
mov
mov
jno
test
push
jns
int
jnp
ficoml
pop
pop
fsubs
lea
push
xchg
sbb
cs
stos
mov
mov
inc
ret
or
mov
push
push
dec
pop
dec
sbb
cs
ret
fs
jle
jbe
shlb
popw
lds
je
outsb
ret
cmpsl
ds
fwait
rcr
int
xor
push
fiaddl
nop
mov
rclb
and
daa
dec
sub
leave
xor
icebp
pop
and
stc
outsl
mov
sbb
push
addl
js
xchg
maskmovq
notl
sbb
sub
aam
adc
mov
into
xor
fldcw
ds
dec
repnz
cmp
sar
mov
lcall
popa
jo
out
cli
aas
jg
in
lock
cmpsl
and
mov
je
or
mov
mov
xchg
frstor
repz
adc
loope
stc
in
out
inc
movsb
out
sub
inc
jl
dec
cs
adc
ret
and
popf
push
ret
mov
repnz
js
add
outsl
cmp
rclb
xor
fs
push
mov
dec
pushf
pop
xchg
jp
and
jae
lds
fdivs
mov
loope
mov
mov
in
int3
sbb
loope
jecxz
jmp
int3
adc
xchg
push
xchg
pop
loope
xchg
mov
loope
jno
call
test
mov
ja
jae
gs
and
fcomps
jo
push
test
mov
pop
iret
fs
test
sbb
aad
les
inc
aam
adc
xor
xchg
arpl
mov
jns
jne
loop
jmp
push
xchg
add
or
pop
lds
jae
popa
or
fstl
pop
repnz
faddl
push
in
ret
cmpsb
sub
mov
or
pop
adc
test
add
cmpsl
and
push
sbb
dec
push
pop
mull
nop
xor
sub
loope
inc
mov
xchg
je
in
imul
mov
or
and
or
fistl
fimull
push
jne
stos
xchg
jb
mov
sarb
xorl
sbb
cmp
out
jae
xchg
sbb
lea
pop
loop
xor
add
lea
jnp
fdivrs
and
imul
sub
dec
lret
or
and
in
cmp
setg
or
mov
xor
sarb
or
nop
cmp
mov
cvtdq2ps
inc
push
pop
in
adc
adc
or
dec
push
loop
mov
aas
push
pop
or
add
sub
neg
call
test
loop
ret
repz
jle
mov
mov
movsb
sar
mov
bound
cmp
cmpsb
mov
shlb
push
push
sub
sbb
stos
pushf
negl
aaa
add
sti
int
dec
fldt
add
je
cmpsl
iret
sub
loopne
repnz
lahf
add
jmp
push
cmp
push
mov
aaa
dec
jg
pop
sub
mov
arpl
pop
int
push
test
movsl
jg
popf
aas
pop
into
orb
cld
test
inc
mov
xchg
jge
aas
outsl
sub
divl
jg
mov
fsubrs
inc
jns
inc
and
xor
mov
cmp
jge
push
les
ja
dec
in
mov
lret
pop
pop
pop
js
sub
cs
testb
outsl
dec
jnp
mov
sbb
inc
je
push
out
mov
adc
xor
mov
or
cmp
stc
cld
fmul
psubusw
movsl
fmul
stos
insl
daa
xchg
imulb
fidivrl
repnz
mov
insb
cs
pop
insl
fstl
xor
das
mull
inc
outsb
adc
icebp
or
push
ret
icebp
repz
test
dec
ds
push
scas
inc
fstpt
bswap
add
push
adc
jo
mov
int
pop
dec
jb
pop
jb
fcomps
push
mov
or
adc
cwtl
imul
lock
fs
xchg
cmpsl
repnz
push
ja
js
add
dec
and
mov
in
pop
fisubs
sbb
mov
neg
shrl
xor
cli
adc
arpl
add
sbb
insl
jns
mov
inc
add
dec
or
xor
mov
lahf
adcb
imul
lret
int3
mov
ds
push
fsubl
jp
test
push
jns
push
lods
dec
cmp
jge
dec
xor
add
mov
out
popf
and
adc
lret
lods
imul
mov
or
in
iret
xor
mov
adc
jb
sbb
inc
lds
leave
xchg
jmp
jp
add
arpl
cmp
iret
xor
sub
add
ljmp
cmp
sub
sub
pop
cmpsb
xchg
xchg
leave
cmp
les
fistl
pop
andl
rep
push
sub
pop
jnp
push
xchg
xlat
int3
fstpt
insl
ljmp
lret
xor
shrb
imul
std
xchg
imul
sahf
dec
arpl
out
mov
rolb
lea
int
pop
js
or
ds
xor
xor
sbb
je
push
jbe
test
popa
icebp
cmp
scas
cmp
jo
xor
dec
cvtps2pi
push
insb
cmpsb
sti
pop
outsb
in
jmp
sub
cmp
mov
jecxz
mov
loope
movsl
jne
mov
adcl
cld
push
adc
or
leave
fisttpll
mov
fidivrl
push
je
decl
popa
outsl
ror
mov
jl
lock
jg
mulb
xor
fiaddl
jnp
cmpsl
mov
pop
jge
cltd
or
adc
ss
sbb
iret
mov
mov
cmp
jns
test
stc
add
pop
repnz
sbb
mov
pop
jns
roll
jecxz
adc
jbe
popa
cmp
hlt
xchg
mov
xchg
jno
gs
pop
shll
sbb
mov
es
mov
stos
dec
mov
lret
or
rcrl
xchg
mov
out
mov
mov
test
fmuls
and
mov
movsl
imul
das
in
dec
popa
jae
push
sbbl
xchg
and
mov
or
push
imul
outsl
lret
sbb
mov
adc
mov
stos
push
nop
ljmp
loope
out
jns
jmp
jle
lret
jle
lods
inc
popf
inc
stos
popa
enter
clc
mov
sub
jbe
popf
pop
push
andl
push
aam
icebp
push
das
push
sub
int3
xor
adc
sti
push
incb
adc
mov
jns
lods
fcmovnbe
test
sbb
test
lcall
mov
sbb
jecxz
daa
in
movsb
das
sub
mov
and
ss
popl
test
add
insl
dec
fst
imul
mov
popf
mov
shrl
clc
loope
testb
ss
or
hlt
push
icebp
jg
cltd
imul
aam
rcrb
leave
xor
or
cld
cmpsl
push
ja
sysret
adc
push
cli
in
xchg
cmc
inc
xchg
inc
rcr
in
ficomps
and
xchg
in
push
js
dec
scas
jmp
add
shll
jp
adc
jmp
bound
nop
mov
mov
sub
daa
pop
jno
jo
psubb
outsb
sbb
cmp
aaa
mov
mov
stos
jns
or
inc
sbb
js
cltd
rcr
stos
adc
dec
mov
insl
sub
iret
adc
inc
xchg
inc
imul
rol
push
cmp
push
ss
jnp
adc
cmovae
out
sub
loopne
sub
jp
pop
scas
lcall
xchg
add
jle
and
lods
stos
in
dec
aad
push
inc
dec
addr16
dec
sbb
sahf
jno
lahf
or
pop
ds
cmp
adc
sbb
data16
loopne
jb
enter
jge
std
addr16
pop
cld
fldcw
sti
mov
sub
inc
hlt
mov
gs
xchg
arpl
call
mov
xchg
jno
popa
loope
imul
lahf
into
sahf
icebp
test
repz
sub
hlt
jmp
test
jle
adc
addl
push
lea
in
or
push
loop
adc
xorl
rclb
xchg
ret
xor
out
lcall
xorb
loopne
cmp
frstor
add
add
jl
add
movsb
xchg
loope
push
lock
mov
adc
sbb
mov
mull
pushf
les
stos
inc
mov
mov
or
inc
jae
adc
push
test
mov
imul
fstpl
aad
and
fidivrl
scas
rorl
and
xchg
jmp
and
dec
xor
dec
xchg
cmp
call
faddl
rorb
mov
inc
cmpsl
pop
mov
sbb
push
je
cltd
shll
push
inc
jp
mov
movd
into
hlt
xor
cwtl
cmp
cmp
imul
divl
jge
in
test
or
jne
lahf
xchg
xchg
sbb
push
shrl
fsts
movl
jl
sahf
test
dec
pop
subb
dec
pusha
mov
and
jnp
cmp
repnz
fiadds
ds
and
cmp
lea
push
out
or
jg
push
inc
daa
or
inc
int
cmpsl
dec
out
mov
mov
pop
pop
stos
loopne
inc
das
mov
inc
dec
clc
mov
pop
xchg
and
clc
push
xchg
add
rclb
scas
repnz
jmp
hlt
push
xchg
test
mov
xor
shrl
pop
pop
mov
adc
fdivs
cmp
out
aaa
lods
shlb
push
aam
xor
insl
cmc
lock
imul
xor
and
mov
das
or
adc
cmp
popf
lret
movlps
loop
xor
push
mov
mov
cld
xchg
lods
mov
fcmovbe
xor
pop
leave
sbb
adc
cmpsb
lods
inc
int3
push
adc
sbb
mov
popa
or
rclb
mov
jp
add
sahf
nop
scas
fsts
and
icebp
dec
cmpl
clc
js
clc
or
daa
cmpsb
enter
inc
addr16
mov
outsb
mov
mov
sti
mov
fsubrp
xor
ror
xchg
adc
adc
xor
std
dec
cmc
shll
fidivs
inc
test
test
push
mov
in
outsl
out
add
xchg
and
add
xor
enter
cwtl
sub
jp
movsl
out
imulb
cltd
ss
jl
mov
movsl
mov
inc
fs
mov
fs
pop
mov
imul
mov
lods
in
push
outsl
xchg
addl
lods
cltd
test
xor
stc
and
filds
cli
cld
lret
iret
xlat
sbb
fwait
mov
pop
pusha
mov
jne
in
dec
dec
pop
testl
or
mov
jno
xor
pushl
pop
sbb
fucomi
imul
mov
cmpsl
sbb
jmp
lock
mov
sahf
out
jbe
pop
sub
test
lods
xchg
clc
or
lock
pop
sub
lahf
pop
ret
ret
push
sbb
and
cltd
std
inc
jl
out
jl
insl
loope
dec
mov
mov
cwtl
dec
dec
je
idiv
jp
pop
dec
cmp
int3
sbb
mov
andw
loopne
push
lea
mov
dec
enter
and
inc
fs
jo
sbb
jnp
xlat
and
push
subl
cmp
pushaw
sub
lret
fwait
pop
xor
shrb
mov
adc
mov
je
imul
mov
mov
xor
sub
push
pop
cmp
dec
mov
mov
mov
jae
shlb
popa
mov
pop
inc
repz
int3
cmp
pop
mov
mov
xchg
insb
decb
les
shl
mov
aas
push
push
xlat
jg
into
popa
jmp
xchg
sbb
ja
and
mov
push
pop
cli
inc
sahf
xchg
push
inc
dec
push
popa
imul
imul
popa
pop
pop
scas
js
loop
lods
mov
jb
sbb
jae
pop
jge
xchg
hlt
mov
repnz
dec
data16
jp
shrl
movsl
iret
mov
push
adc
sbb
pop
sub
mov
or
mov
leave
push
out
ror
jecxz
pop
adc
sub
pop
iret
in
and
pop
dec
call
js
jecxz
mov
pop
xchg
into
jo
and
inc
lea
jecxz
or
cmp
clc
hlt
dec
mov
push
push
insb
jmp
jne
sbb
pop
popf
ret
cs
add
loopne
mov
inc
fbld
test
dec
mov
fs
inc
test
gs
aas
out
cmp
pop
sub
or
test
outsb
lds
xchg
shrb
lret
pop
dec
push
push
sub
xchg
icebp
add
test
int3
mov
or
adc
jb
adc
and
xchg
cmpl
dec
scas
push
mov
decb
iret
frstor
mov
fwait
or
pavgw
pusha
adc
ja
xchg
jp
js
nop
dec
xor
fisttps
mov
test
in
xchg
jmp
xchg
dec
xchg
dec
pop
jno
add
jo
dec
sarb
jecxz
jnp
addps
push
clc
sar
cltd
iret
jno
pop
pusha
loope
or
pop
and
adc
push
sub
jnp
and
cmc
insb
ds
je
inc
fsin
xor
mov
mov
in
pop
xchg
cld
inc
movsb
adc
loopne
push
ret
inc
sub
mov
pop
out
xor
mov
std
cmpsb
int3
xchg
mov
hlt
cmp
cwtl
ret
and
pop
stos
cmp
in
cli
aam
test
xor
cmp
and
rcll
mov
mov
adc
jl
jno
sbb
mov
stc
jb
hlt
outsb
dec
addr16
scas
shll
in
jns
mov
xor
push
inc
decb
jns
fmuls
mov
in
lcall
push
push
jl
cmpl
jno
inc
pop
sub
push
std
in
cmpsl
in
lahf
pushf
cmp
lret
call
add
xorb
icebp
push
fadds
mov
sbbl
or
mov
mov
jno
lret
movsb
sub
std
sbb
imul
add
pop
inc
sbb
or
mov
out
std
mov
push
movb
lock
jecxz
fisubl
sbb
cmpsl
sbb
pop
nop
out
mov
push
shrl
outsl
roll
inc
mov
xchg
jb
push
or
cmp
jmp
cmp
mov
fwait
xor
or
mov
pop
cmpb
sbb
pop
jns
jmp
mov
jb
lret
cli
repnz
and
es
dec
and
data16
negb
add
in
rcll
sub
ss
sti
iret
leave
push
dec
mov
stc
or
repnz
mov
repnz
cmp
sub
or
xchg
pop
inc
and
lock
mov
or
and
js
mov
xchg
sbb
adc
push
pushf
sub
fisubrl
push
rcrb
in
lcall
add
les
out
xchg
dec
push
inc
mov
leave
add
jae
mov
aam
psubd
xor
cwtl
stc
dec
xchg
xchg
jmp
cmp
mov
sbb
js
jbe
jp
cltd
ja
pusha
inc
sbb
roll
jmp
or
popf
mov
dec
adc
and
mov
push
xor
movsl
adc
popa
cld
imul
push
inc
enter
in
push
fiadds
xlat
mov
aaa
pop
and
xor
pop
mov
sbb
scas
sbbb
mov
fmulp
test
out
outsb
mov
mov
xor
inc
push
into
iret
push
lds
pop
addr16
daa
call
xchg
ds
mov
std
sti
pop
rcll
xor
pop
or
es
int3
lods
shl
inc
cvtps2pi
lds
bound
xchg
aad
mov
sbb
cltd
mov
inc
rcr
cmp
jo
jg
rorb
inc
bound
push
ror
cld
hlt
mov
aam
mov
nop
mov
out
insl
inc
mov
xor
ss
out
dec
inc
icebp
clc
imul
movsl
imul
into
adc
jge
dec
or
xchg
repz
jbe
sub
mov
adc
sub
in
xorb
dec
int
test
sbb
scas
cli
jno
mov
mov
test
mov
adc
sub
pop
mov
or
sbb
push
pop
xor
cmp
aaa
mov
scas
jmp
lds
mov
stc
inc
outsb
jae
pop
lahf
int
rcl
sub
xchg
mov
dec
mulb
xor
nop
fdivr
jmp
push
mov
mov
dec
bt
out
lret
add
jb
mov
in
push
xchg
insl
push
pop
jl
cld
or
mov
pop
cmpsl
icebp
test
out
xor
lods
mov
inc
xchg
rep
mov
rol
mov
jb
stos
mov
fildl
xlat
fnsave
cltd
mov
push
mov
es
testl
mov
jb
fdivl
popf
pop
jmp
dec
sbb
mov
in
push
test
or
loop
into
cwtl
jle
mov
mov
ss
pusha
sahf
mov
int3
out
stc
mov
cwtl
out
lahf
jno
clc
ljmp
das
add
stos
push
pop
pop
pop
shlb
fstl
pop
aas
sub
ja
mov
ja
xor
jo
inc
sbbb
mov
dec
mov
jl
test
xchg
push
add
inc
sahf
jg
pop
and
lret
sub
clc
inc
inc
cmp
pop
push
adc
push
aad
addps
inc
cltd
js
push
lds
les
dec
aad
xlat
inc
fwait
mov
arpl
mov
idivb
lds
neg
mov
cmpsl
adc
aam
add
stos
push
in
out
xor
mov
jb
xchg
inc
ret
adc
sub
adc
lods
outsl
mov
sbb
sbb
pop
cmp
inc
sbb
addl
cmp
ja
pop
and
and
push
cmp
insb
into
fstl
jae
jg
add
mov
testl
stc
adc
int3
dec
dec
ret
xchg
cld
push
jae
jbe
mov
push
rcrb
rorb
in
arpl
jnp
or
jmp
roll
or
add
repz
lret
std
lea
cmp
pushf
push
mov
jg
dec
scas
or
sub
imul
xchg
pusha
testb
loope
sbbl
jae
jns
decb
std
ljmp
push
fcmovb
int3
mov
ret
cs
loopne
in
sub
xor
push
jg
cmp
mov
xor
cmp
and
aad
xchg
mov
cwtl
cltd
mov
jb
xlat
fsts
cmp
add
sub
lret
mov
sub
cmp
pop
lods
aam
cmp
inc
sahf
jo
shl
int3
add
sbb
xchg
pop
cmp
dec
adc
movsl
arpl
aas
xchg
pop
mov
outsl
sbb
hlt
mov
jmp
loopne
dec
lds
dec
test
xchg
inc
mov
cld
lahf
jno
je
movsl
cld
dec
lret
das
repz
rorl
xchg
scas
fbld
mov
ds
cld
mov
iret
pop
xor
in
sbb
jb
mov
sbb
pusha
xor
push
jne
pop
fs
das
xor
cmc
imul
mov
xor
aad
jecxz
je
loope
push
dec
cmp
mov
in
sbb
inc
jno
call
addr16
adc
pop
and
ja
pop
mov
sub
out
cltd
push
adc
sub
push
sbb
insb
cmp
adc
les
mov
incb
xchg
mov
inc
fwait
sahf
xchg
cld
xlat
adc
and
mov
sti
jae
fsub
dec
repz
push
int3
xchg
push
push
pop
push
pop
add
adc
dec
xchg
sarb
movsl
push
lock
daa
inc
pop
sbbl
push
movsl
in
arpl
add
popf
pushf
pop
mov
cmc
mov
out
imul
clc
arpl
cli
mov
sahf
ja
ja
or
push
aad
nop
jne
scas
out
sahf
add
fcomps
popf
sbb
jle
sbb
pop
aam
loopne
lcall
pop
xchg
jg
fsubrp
jnp
ficoms
fwait
movsb
sbb
outsl
rorl
fildl
stc
negl
pushf
adc
sbb
and
out
mov
push
mov
mov
andb
cmp
xor
ret
arpl
loopne
and
xlat
pop
test
das
pop
shr
aaa
stc
not
fdivp
test
pop
adc
xchg
pushf
or
test
popa
sbb
mov
cmp
mov
push
pop
add
test
sub
mov
pop
fbstp
xchg
addb
jb
sbb
cmp
mov
adc
std
loopne
dec
mov
add
xchg
addl
push
push
cs
jg
mov
lcall
lods
add
mov
cmp
fiaddl
sub
mov
mov
jbe
mov
fs
test
cmp
inc
jmp
jp
andb
test
pop
test
push
popa
jmp
push
les
and
xchg
lcall
aas
push
mov
lahf
jno
std
mov
inc
jmp
out
pop
and
popa
adc
add
enter
xchg
imul
repz
imul
dec
test
jb
call
or
mov
xor
mov
xor
mov
push
and
xor
jg
daa
mov
stc
push
mov
repz
decl
push
pop
ficoml
mov
xchg
adc
sub
push
int
ret
or
aad
cld
xchg
mov
xchg
inc
mov
lods
mov
int3
or
jmp
sti
data16
lahf
xchg
sub
rorl
rcr
dec
vpminsw
adc
xor
push
pop
pusha
cmovg
xchg
xlat
xchg
xchg
gs
pop
jecxz
test
mov
pop
xchg
mov
add
mov
ret
push
sub
jnp
shl
xorl
int3
pusha
mov
sub
cmp
mov
sbbb
xchg
rolb
add
push
push
lock
mov
inc
jno
es
push
inc
adc
icebp
sbb
adc
mov
notl
xchg
sbb
xor
lds
pslld
pop
sbb
lock
jg
test
orl
pushf
cmp
rcrl
sub
mov
jb
lcall
movl
xchg
push
xchg
enter
outsl
cli
adc
test
arpl
pop
lret
adc
add
out
fadds
push
in
jp
movsl
mov
xchg
bound
push
push
cmpsb
adc
cmp
mov
orb
xor
addr16
dec
cld
jno
jb
in
pop
lcall
push
adc
mov
int3
shlb
stc
pop
mov
fs
jbe
stc
add
push
add
mov
sbb
dec
dec
lea
popa
cs
jae
xor
pop
pop
idivb
rol
xor
cmp
lahf
inc
fdivl
movsb
mov
mov
lods
and
cmpsb
shufps
adc
imul
loope
out
fcom
test
jnp
f2xm1
or
jge
xchg
fwait
mov
xor
cltd
sbb
scas
push
adc
imul
push
aam
pop
vorps
outsl
push
sub
push
mov
rorb
cmpsb
sub
push
lret
es
pop
out
js
popf
mov
add
push
lret
adc
in
fsubr
sbb
mov
sbb
jbe
loopne
xor
test
aas
xor
mov
push
rcl
adc
inc
cmpsb
shl
shrl
rcrb
push
ja
xor
orl
insl
mov
or
mov
enter
add
inc
cmp
mov
ja
sbb
sub
sbbl
loopne
out
push
outsl
es
push
out
dec
addr16
rolb
push
ds
mov
loope
dec
mov
dec
rcl
into
and
push
dec
pop
adc
dec
aam
adc
adc
mov
pmaxub
into
sbb
xchg
mov
gs
push
xchg
inc
jo
into
lods
adc
push
pmaxub
addb
ja
cmp
adc
stc
xchg
xchg
xlat
sbb
mov
mov
cld
repz
jae
xor
test
pop
xchg
data16
adc
jns
xor
mov
and
push
addr16
stos
mov
adc
xchg
repnz
fcmove
call
jge
and
cmpsl
cli
std
outsb
xor
aaa
clc
push
int3
cltd
xor
rcr
mov
mov
outsb
lahf
mov
inc
push
fcmovnu
push
adc
je
or
pop
push
popf
sbb
stos
daa
push
pop
mov
pop
int3
or
repnz
repnz
gs
adcb
ss
dec
loope
cmp
stos
enter
aam
stos
jge
mov
mov
mov
lret
lock
jl
lds
std
lods
pop
jb
shl
or
addr16
jnp
jo
add
roll
into
xchg
mov
std
test
jg
mov
dec
flds
mov
pop
mov
and
clc
cltd
mov
sti
into
sti
out
stos
xor
jno
arpl
pusha
push
mov
adc
adcl
outsl
jo
outsl
xchg
pop
icebp
daa
and
mov
popa
movsl
fistpl
pushf
pop
xchg
pop
jae
negl
blsic
mov
ret
testb
clc
push
loop
pushf
fwait
aaa
iret
rcl
mov
clc
adc
xor
pop
mov
loopne
in
pop
jne
mov
add
cmp
jg
cmp
push
inc
orb
xor
cmpl
jp
imul
rclb
push
and
adc
mov
subb
popa
inc
insb
cmp
xchg
mov
fbstp
adc
gs
xchg
xor
fiadds
add
xor
or
insl
mov
imul
jae
mov
push
iret
xor
xchg
jne
dec
lods
mov
push
cmp
adc
sar
test
jl
fsubrl
repz
xor
xlat
fnstsw
dec
aaa
xchg
fistps
out
mov
and
xor
cmp
cmp
fdivrp
les
idivb
clc
mov
mov
jae
and
subl
mov
and
and
addr16
or
mov
mov
mov
sub
push
jae
push
adcb
lcall
hlt
scas
aaa
in
dec
mov
pop
pop
xor
ljmp
push
popa
stc
mov
adc
pop
push
push
pop
mov
ss
hlt
test
pop
fnsave
push
sahf
mov
sub
pop
cli
imul
test
lods
rcrb
dec
jnp
cmp
push
ss
movsb
mov
aad
in
test
in
int
push
stos
outsl
jo
add
sarl
mov
inc
cs
sub
lcall
sbb
pop
sub
data16
out
adc
mov
sub
ret
mov
or
xor
sub
movsb
sar
xchg
mov
movsl
cmp
lahf
pop
add
stos
std
loope
jbe
sarl
push
insb
data16
andb
dec
lret
push
mov
cli
push
dec
js
add
xchg
std
xchg
inc
push
pop
leave
mov
addr16
lret
mov
mov
fs
fsubl
cwtl
push
adc
cmc
jnp
push
jl
fcomip
scas
loope
flds
mov
cmp
lcall
es
push
cmp
out
sub
test
cld
pop
sub
dec
cmp
mov
mov
push
pop
lea
jl
cmpl
std
sub
std
rorb
sbb
stc
sub
push
pop
daa
sahf
mov
mov
xor
or
pop
pop
jmp
outsl
cmpsl
mov
cmp
int
jle
add
cwtl
sub
hlt
mov
mov
adc
mov
movl
push
mov
inc
std
dec
xor
in
pusha
sti
outsb
lods
pop
hlt
push
fs
cwtl
push
jl
and
push
mov
pop
lods
xchg
lea
xor
mov
sahf
fiaddl
push
lods
push
push
insb
jecxz
pop
mov
xor
push
orl
in
aam
xchg
movsb
adc
jp
sub
les
repz
xchg
repz
repz
push
mov
stc
jge
mov
lcall
insb
fwait
push
scas
mov
sub
jns
stos
clc
push
stos
inc
dec
sub
nop
into
testb
jmp
mov
cmpb
xor
mov
jns
pop
in
lds
pcmpeqw
ret
sub
xor
mov
imulb
fdivs
insb
xchg
mov
cltd
in
xchg
int3
arpl
push
insb
in
or
sbb
out
pop
cmc
jae
test
fcmove
loope
or
adc
lds
mov
ret
sbb
int3
shr
xchg
lcall
or
cli
lea
fcmovb
mov
mov
movsb
lret
shl
mov
or
das
push
and
addr16
lcall
jmp
mov
and
clc
lea
push
add
mov
sub
dec
and
mov
sbb
xchg
das
bound
call
jns
jmp
ja
cld
jle
cld
lret
dec
sbb
addr16
roll
and
test
mov
incb
stos
adc
jb
pushf
lcall
push
jbe
lcall
fldt
cli
dec
pop
stc
aas
outsb
pop
mov
mov
mov
mov
stc
jecxz
scas
je
push
nop
and
stc
mov
arpl
or
ds
inc
dec
mov
xchg
or
mov
xchg
or
mov
inc
xchg
loop
xchg
jle
xchg
xchg
cmp
push
fimull
loop
scas
mov
lret
imul
xor
addr16
mov
pop
inc
and
aaa
sub
ja
pop
shlb
xchg
rcrl
xor
xor
lea
add
rcll
dec
faddl
insl
imull
push
jns
das
es
and
adc
stc
js
in
xor
lods
cmp
or
jg
imul
mov
add
xor
test
rcr
sti
fnstenv
enter
daa
enter
pop
pop
scas
fimuls
mov
cmp
xchg
stc
jns
clc
cli
std
push
jg
push
into
pop
push
mov
js
push
sub
subl
jae
lcall
dec
pop
cmp
cs
fidivrl
subl
inc
jne
movsb
in
in
or
fsin
sub
sbb
fwait
in
pop
les
leave
add
push
pop
jne
les
jle
inc
dec
bound
sub
xchg
add
cmpsl
push
sub
push
cmc
mov
cmp
jns
mov
inc
mov
shrl
cld
mov
ficomps
push
call
cli
add
mov
test
hlt
xor
pop
jns
push
fmuls
daa
lcall
pop
xchg
mov
out
adc
scas
xchg
jmp
lods
xor
sbb
nop
xchg
cmp
outsl
jp
cwtl
shll
sub
in
imul
mov
int3
gs
mov
mov
ret
add
xchg
cli
adc
adc
ja
jle
lea
add
sub
imul
icebp
scas
incb
adc
loop
mov
push
fwait
rolb
or
arpl
mov
in
mov
fisttpll
cmp
mov
and
xorb
dec
lret
mov
sub
and
movsb
lock
add
xor
or
lods
jge
scas
push
ja
or
cltd
jmp
mov
pop
pop
adc
or
or
xor
rep
je
jne
les
pop
insl
adc
or
pushf
mov
dec
cmp
lea
sub
jb
dec
sahf
mov
je
mov
je
lock
pop
psrld
cmpsl
stos
in
dec
and
lret
xbegin
clc
add
add
dec
movsl
add
icebp
xchg
adc
rclb
cmpsb
cmp
pop
jge
xchg
mov
xchg
jmp
or
gs
jl
ja
cltd
cmp
cli
mov
push
loope
mov
add
dec
or
mov
push
popa
or
call
sub
jnp
arpl
xor
jmp
sbb
popa
pop
ret
clc
aad
xor
mov
out
sbb
loope
outsb
fnstcw
dec
in
add
pop
pop
hlt
aad
jle
fwait
push
aad
and
dec
loop
sarl
je
stos
lock
out
mov
loope
outsb
pushf
inc
arpl
mov
and
ds
lea
mov
test
lods
out
and
xchg
mov
push
sbb
pop
mov
fistl
push
mov
xchg
addb
xor
rorb
in
mov
scas
add
loopne
cmp
cmp
adc
movb
je
adcl
pushf
pop
imul
xchg
push
and
rcrb
or
mov
pop
in
hlt
push
in
xor
xorl
shll
cmpsl
jmp
aaa
mov
arpl
ror
pushf
and
aam
jg
out
mov
lods
mov
adc
xchg
xor
aas
adc
pop
mov
adc
test
sbb
or
adc
or
cwtl
add
cltd
out
and
pop
pop
pop
cmpsb
popa
pop
cmpsb
hlt
push
out
notl
mov
mov
test
sbb
mov
pop
jb
iret
pop
std
add
pop
add
sub
js
add
pop
xchg
pop
jg
mov
into
jle
sub
jbe
into
imull
push
cltd
xlat
mov
ss
or
dec
mov
mov
daa
adc
adc
ja
cmc
inc
in
push
sbb
jns
ja
dec
sbb
data16
ret
mov
jle
xor
xchg
mov
push
leave
adc
jmp
lds
aas
in
sbb
ja
xchg
push
pop
xor
lret
rcll
jg
add
cmp
dec
xor
cltd
xchg
cmp
inc
or
push
dec
pop
les
inc
xor
sbbl
jecxz
add
jmp
pop
pop
ja
mov
mov
int3
mov
push
push
jnp
mov
imull
sbb
mov
test
push
ret
xchg
out
push
aaa
inc
pop
sbb
les
jl
jg
es
adc
xchg
nop
adcb
jg
je
fs
leave
pusha
pushw
cs
sub
dec
add
sub
jmpw
inc
xchg
cmc
mov
addr16
cmp
or
out
aas
jbe
adc
fistps
enter
jbe
mov
sbb
xor
jns
in
mov
movsb
inc
or
mov
pop
psubsb
scas
dec
adc
adc
dec
push
cmpsl
or
sbb
cmp
popl
fstpt
xchg
imul
int
inc
jns
lcall
pop
cs
or
and
ret
xchg
and
and
cmp
jbe
jecxz
test
fwait
inc
pop
in
outsb
enter
xor
pop
inc
imul
ret
push
jne
arpl
add
push
notb
lcall
xchg
mov
sbb
jle
insb
std
imul
aas
loopne
push
ficoml
cmpsb
mov
cmp
test
scas
mov
hlt
icebp
push
imul
xor
dec
cmp
jl
aad
xlat
ss
nop
imull
push
lret
xchg
xchg
js
popf
cli
add
mov
ret
repz
mov
inc
jl
cmp
xor
ljmp
rep
loope
sub
and
rcl
movsl
mov
mov
jne
or
inc
dec
inc
mov
mov
aad
pop
pusha
jne
mov
faddl
cmp
or
push
addl
es
mov
js
filds
out
imul
cmpsb
cmp
jb
mov
jge
cmp
sar
or
lock
in
stos
test
inc
je
jg
sbb
mov
fmul
mov
inc
data16
jge
movsl
data16
mov
sub
and
mov
cltd
sahf
les
mov
mov
in
popf
shrl
mov
sbbb
repz
fsts
lcall
cmp
dec
mov
or
cmp
xor
mov
cmpsl
mov
in
fsts
xor
jnp
mov
pusha
sub
lds
mov
test
fdivs
movsb
rcr
faddl
sub
jl
sbb
test
popa
push
jl
inc
or
fidivrl
insl
sbb
stos
adc
pop
cmp
dec
cmp
pop
sub
mov
nop
stc
xchg
fimuls
pop
and
push
and
or
adc
jne
bound
in
jnp
mov
push
cmp
sbb
fsubrp
lcall
lret
enter
mov
mov
mov
cmp
pop
insb
out
dec
stos
xchg
add
mov
pop
imul
adc
xor
pop
xor
je
fisubs
jp
mov
sub
in
adc
int
add
rcrb
int
fsubl
stos
cmpsl
call
pushl
xchg
decb
sbb
mov
insl
cmc
shll
enter
mov
sbb
xchg
leave
mov
mov
inc
stos
and
adc
jle
fisubrs
out
jmp
sbb
inc
cmp
inc
cltd
xchg
inc
loopne
mov
in
pop
ljmp
jo
mov
add
sahf
pop
push
gs
insb
mov
rolb
xchg
adc
bnd
or
xchg
sbb
add
int
mov
add
scas
popw
into
cmpsb
ja
mov
jo
xchg
sub
dec
jo
push
xchg
inc
xchg
push
mov
push
idiv
adcb
jne
nop
or
xchg
push
dec
dec
xchg
nop
pushf
adc
scas
repz
cmp
push
insb
sbb
insl
or
in
stos
inc
dec
adc
sbb
negb
ds
add
out
mov
mull
arpl
fadds
push
cmpsl
inc
ljmp
add
jmp
xlat
cwtl
cmp
jge
xchg
popa
dec
mov
and
rorl
jge
mov
shll
inc
cld
jmp
notb
sbb
mov
movsb
add
shlb
pop
or
mov
enter
cmp
inc
sahf
add
stos
cmp
in
cmp
adc
psadbw
add
ljmp
push
leave
int
sbb
out
mov
pop
mov
pop
sub
nop
add
js
fwait
add
lahf
lret
lea
sbb
test
adc
jb
mov
mov
in
jecxz
add
push
shrb
mov
sti
rep
cltd
in
add
pop
jo
divb
ret
bound
push
and
sbbb
fisttpll
out
inc
mov
jbe
scas
xor
xchg
rcrb
and
addr16
out
adc
adc
enter
cs
jne
adc
call
mov
sbb
pop
xlat
int3
mov
add
shlb
cld
adc
adc
inc
mov
dec
mov
in
jbe
mov
mov
mov
dec
icebp
repz
imul
push
cmp
scas
push
shrl
adc
mov
cmc
pushf
add
xchg
mov
lcall
and
lds
pop
clc
cs
rcl
lea
insb
or
mov
out
fbstp
incb
xor
dec
mov
fimuls
jo
lods
adc
fcoms
lret
push
lds
push
sub
ja
and
pop
xchg
adc
icebp
mov
and
fldcw
in
jmp
sahf
jns
ljmp
aam
imul
mov
clc
test
push
test
cmpsb
cli
ficoms
sahf
mov
cmp
fucomip
xor
shlb
mov
pop
mov
sbb
mov
out
cmpsl
fnstenv
sub
aad
pop
lret
inc
sub
out
adc
xor
lea
jns
sbb
cmp
and
hlt
or
ds
pop
jb
inc
mov
std
das
push
push
push
subl
addl
inc
das
in
out
cmp
xlat
cmc
test
arpl
xor
sub
jle
fildl
gs
or
mov
push
or
dec
and
xor
dec
mov
cmp
add
in
mov
jo
mov
scas
outsb
fdivl
cmc
or
aad
inc
call
imul
arpl
int3
and
pop
lret
push
pop
lahf
pushf
push
dec
sarl
clc
ss
aad
add
rclb
imul
icebp
imul
stc
adc
lret
loop
mov
or
ljmp
shlb
pushf
loop
dec
dec
push
repnz
xchg
ljmp
jnp
mov
sbb
adc
ret
popf
jmp
lds
aas
out
xchg
dec
dec
or
dec
jae
xor
fcoml
leave
mov
push
push
or
xor
outsb
mov
mov
xor
inc
cmp
insb
daa
add
lret
jb
out
adc
cwtl
sub
js
mov
sub
hlt
rcrl
jae
int
adc
call
aas
inc
rcll
loopne
inc
xor
gs
add
xor
mov
andnps
sbb
daa
and
imul
xchg
cli
jp
push
repnz
pop
dec
testb
fadds
pop
cmp
addl
int3
dec
out
and
pushf
pop
or
and
leave
push
ss
xor
mov
mov
cmpsl
add
int3
test
loope
shlb
jecxz
push
sbb
jne
fimull
jns
mov
das
xchg
lahf
lock
jmp
das
inc
cmp
aaa
mov
out
pushf
add
aas
dec
xor
jne
add
add
or
add
mov
or
dec
dec
rcl
or
aam
rol
leave
jge
aaa
jle
mov
mov
jge
dec
addr16
jbe
lahf
add
fmulp
jae
dec
lds
movsl
fisubl
mov
cmpsb
fldcw
mov
addl
sub
jg
mov
data16
cmp
dec
in
sbbl
jecxz
gs
jp
enter
movsl
fsubrs
jle
dec
stos
xchg
clc
and
in
cmp
in
jg
mov
test
mov
ss
aaa
loope
mov
push
scas
sti
and
dec
mov
or
cmp
sub
into
add
mov
popa
xchg
inc
insl
dec
mov
movsl
adc
andl
push
jl
outsl
add
mov
shrl
popa
ja
iret
jne
fidivl
cs
mov
out
pop
mov
lahf
mov
aas
push
sub
xchg
int3
xchg
lock
test
stos
xchg
sbb
jecxz
arpl
push
jge
inc
pusha
pop
mov
inc
jbe
cmp
fsubs
add
pop
aaa
cmp
adc
cld
fsubs
idivl
into
sahf
jg
pop
aaa
sarl
and
cli
rolb
mov
sahf
aam
sahf
sbb
dec
jl
iret
push
sub
jle
push
cmc
cld
les
repnz
movsl
cmc
stos
jge
sbb
add
lret
xor
nop
inc
dec
push
sti
xchg
adc
in
in
jecxz
test
sbb
fs
and
test
sub
js
nop
add
fdivl
pop
popf
xor
xor
push
push
jecxz
sub
adc
fs
scas
add
scas
mov
in
std
repnz
adc
pop
and
and
loope
inc
sbb
push
sbb
das
xor
pop
add
test
test
in
ljmp
cmp
data16
cld
inc
out
pushf
inc
pop
testl
insb
out
mov
mov
scas
decl
and
dec
mov
js
jnp
aas
jge
pop
push
jmp
fsubs
movl
xor
mov
xchg
adc
xor
push
lods
adc
pop
mov
rol
push
push
and
inc
dec
dec
fdivrl
outsl
or
adc
cld
sbb
sub
rol
pop
in
popa
fs
iret
loop
scas
add
pop
dec
lods
repnz
out
dec
push
lret
sub
fidivl
ds
sub
in
leave
push
ret
das
jg
fwait
push
fistl
dec
mov
or
push
orb
mov
push
dec
and
fdivs
mov
lcall
iret
shlb
cmp
xchg
or
add
push
xchg
push
stos
adc
mov
call
jne
mov
and
insl
jo
sub
push
mov
in
hlt
testb
mov
testl
scas
dec
xor
dec
and
jge
push
push
dec
jmp
dec
sbb
or
inc
xor
dec
stc
mov
mov
mov
pop
mov
jecxz
adc
dec
xchg
sub
fists
iret
mov
les
cmp
xor
lahf
lods
out
and
fsub
dec
pop
dec
imul
adc
jmp
jmp
add
xchg
xchg
movsl
or
jle
roll
std
sub
mov
mov
inc
dec
aam
xlat
push
fwait
in
fadds
dec
dec
adc
mov
push
jo
gs
mov
push
mov
sub
fcomps
or
dec
xchg
mov
cmp
jae
push
xabort
aaa
sarl
jnp
orl
adc
mov
stc
mov
jg
cmc
mov
imul
inc
lahf
sbbb
ret
gs
adc
sahf
ficompl
loope
push
sbb
mov
and
jnp
int3
test
call
pop
adc
das
xchg
mov
xor
stos
call
jg
je
jbe
movsl
mov
lret
outsl
jecxz
xor
mov
push
jne
imul
mov
popa
mov
out
aaa
add
sub
inc
mov
int3
mov
adc
inc
int3
jg
adc
sub
mov
inc
scas
xchg
ret
jmp
sbb
sbb
push
and
add
ss
mov
push
mov
std
adc
sbb
xor
dec
int
pop
sbb
lea
ds
xor
sbb
jnp
popf
insl
ljmp
sbb
leave
imul
sbb
dec
in
mov
out
js
adc
sub
mov
sahf
addr16
sub
or
jns
jmp
mov
aad
or
stos
mov
aaa
and
test
push
xor
push
mov
adc
mov
testb
pop
push
jb
enter
lods
mov
out
mov
sbb
in
ss
and
inc
mov
xchg
aaa
int3
jo
cmp
xor
cwtl
int
cmp
dec
sub
push
mov
fldenv
dec
ret
popa
into
fwait
jge
test
es
or
shl
mov
repnz
jns
and
mov
mov
cmc
push
popa
mov
mov
stos
lret
rcrl
jecxz
fwait
or
std
mov
pop
dec
lods
popa
sbb
and
xor
arpl
popf
cmp
sti
add
es
sub
ljmp
cwtl
adc
push
jnp
xor
sub
arpl
mov
lahf
and
lahf
inc
call
inc
dec
dec
jmp
out
jmp
xchg
jno
dec
xchg
push
inc
sar
out
out
cld
and
fs
into
pop
ret
pop
xor
jno
jno
loope
push
push
aad
in
mov
test
sub
negb
xchg
das
addr16
add
fsub
xchg
push
add
bound
xlat
pop
add
inc
lods
sbb
rolb
add
push
cmp
js
xor
jmp
fisttpl
push
inc
jmp
stc
or
mov
mov
pop
adc
or
icebp
cmp
int3
ss
push
cltd
cli
mov
test
fldl
in
jno
movsl
mov
jns
jecxz
adc
pop
pop
aaa
pop
cmpsb
dec
push
or
sub
or
fiaddl
mov
pop
std
cmc
jmp
idiv
and
adcl
jge
dec
cld
and
aam
cltd
daa
push
xchg
ja
sub
js
mov
mov
aaa
call
jns
ja
and
test
adc
stc
je
xor
pusha
jle
test
popf
sbb
xchg
mov
lds
sub
jo
mov
jmp
ja
aas
and
ret
cmp
and
adc
fimuls
cs
fwait
pop
mov
push
xchg
scas
jecxz
mov
xor
add
cmpsl
leave
scas
in
lock
mov
aaa
mov
mov
mov
jo
xchg
pextrw
jge
fst
push
aam
arpl
sub
jl
jmp
ds
inc
sbb
pop
repnz
mov
xchg
dec
push
sub
xor
iret
sub
call
es
jns
inc
pop
push
adc
push
adc
adc
and
cmp
and
lret
lds
xor
mov
fiadds
dec
adc
jmp
fdivrl
mov
out
mov
xchg
pop
fisubl
sbb
fnstenv
mov
ss
scas
cmp
mov
xor
mov
pop
addr16
ds
pop
pop
jno
jle
xchg
mov
mov
mov
fstpl
lock
sti
movsb
sub
adc
cmp
sbb
popf
or
in
rcrb
repnz
fdivl
push
lcall
sub
test
mov
xor
std
xchg
mov
dec
xor
dec
push
xor
mov
cmp
xor
mov
ret
add
in
jo
movsb
pop
push
jnp
test
adc
cmc
mov
scas
push
lret
icebp
push
sarb
xchg
xchg
jb
mov
gs
imul
ficomps
ljmp
pop
ss
mov
test
mov
les
jns
xorb
daa
cmp
pop
cmp
int
lret
inc
daa
mov
ds
imul
push
iret
ja
stos
push
jecxz
dec
bound
daa
cmc
imul
xor
mov
jbe
lds
mov
jno
cmp
mov
mov
inc
insb
adcl
mov
pop
ret
xchg
adc
arpl
jbe
testb
lea
mov
scas
pop
sbb
incb
xchg
icebp
imul
pop
cltd
or
xchg
ret
xchg
fmull
cmp
sti
fwait
out
add
push
sbb
mov
jmp
xor
out
xlat
ficoml
push
addr16
mov
call
inc
pop
xchg
popa
sub
or
lret
ja
mov
in
notb
xchg
fs
cmp
sbb
shrl
dec
pop
loop
enter
jmp
jae
out
cmc
insl
mov
mov
mov
in
jo
repnz
lods
push
push
fs
mov
rcrb
or
loope
scas
cli
sub
mov
fbld
dec
jo
sub
fsub
cmp
and
addl
and
add
mov
mov
sbb
cli
jno
and
mov
movsl
aad
sahf
loopne
jp
or
and
movsl
movsl
add
outsl
sub
test
insl
nop
pop
dec
and
lods
mov
lods
fnsave
shlb
loop
inc
sbb
test
out
mov
cmc
sub
mov
or
movb
out
mov
addr16
insb
jbe
xor
aas
fdivrs
sbb
mov
cmp
les
in
lret
mov
jnp
test
sti
pushf
enter
inc
push
add
xlat
mov
jl
mov
enter
test
stos
and
jne
orl
aaa
cs
mov
pop
adc
out
push
rcrb
sbb
push
jl
cld
cmpb
icebp
mov
cmp
pop
std
js
addr16
mov
test
push
fwait
testl
mov
cmc
xchg
pop
push
sub
lcall
mov
insl
cmp
mov
sti
cmp
xor
mov
pop
xchg
mov
mov
mov
fdivr
fnstenv
sbb
cld
pusha
mov
sub
sbb
cwtl
test
mov
inc
subl
ljmp
adc
push
sarl
std
test
mov
jg
inc
xchg
dec
or
push
ja
xor
in
and
dec
mov
jae
lahf
pop
in
jo
icebp
out
push
inc
in
lret
mov
xchg
xchg
jle
aas
insl
push
dec
xchg
jg
inc
add
or
jg
mov
scas
into
mov
jge
repnz
dec
dec
jb
ljmp
and
mov
add
sub
ret
and
and
rcrb
cwtl
cmp
imul
jge
aaa
xchg
add
inc
xchg
xchg
out
jns
pop
or
push
add
inc
testb
xorl
mov
loop
inc
aaa
out
fnstenv
mov
jl
and
adc
loopw
jo
cli
xor
mov
cmp
mov
ja
push
into
icebp
lods
inc
mov
shl
stc
div
cmpsl
push
push
mov
mov
push
sub
leave
pop
adc
add
andb
push
inc
add
push
jbe
sub
and
add
xchg
mov
sbb
sbbb
sarl
scas
sub
fcomi
push
scas
stc
lcall
addr16
cmp
cltd
gs
mov
add
jno
rcr
xchg
cmp
mov
ret
mov
and
fscale
mov
out
adcl
adc
andl
lods
or
mov
fcoml
int3
sti
jno
mov
mov
and
jmp
arpl
les
fldl
fidivl
dec
mov
mov
add
xor
cmp
daa
ja
in
mov
loopne
cs
hlt
fmul
push
sub
jns
xor
sbb
clc
or
stos
ret
js
and
sub
sahf
jecxz
in
cltd
pop
fisubs
fcomps
adc
fsubl
cmp
sub
andl
imul
addr16
jge
inc
jnp
xchg
jge
das
shl
std
add
xor
movsb
xchg
jp
cwtl
sub
dec
and
ret
and
mov
divb
dec
aas
pop
je
pop
bound
test
jns
js
loop
sub
mov
and
out
push
push
gs
into
icebp
lcall
and
add
ljmp
ja
cmp
pop
inc
inc
sub
mov
xchg
insl
iret
clc
adc
das
push
jp
icebp
nop
jecxz
pop
repz
jmp
test
xor
in
iret
into
and
std
sbbb
push
les
sbbl
cmpl
loopne
mov
xor
fmuls
add
cmp
movsb
les
or
imul
mov
push
sbb
mov
add
add
leave
dec
xchg
inc
xor
push
add
pushl
xchg
mov
and
out
mov
pop
adc
sbb
imul
dec
and
scas
sbb
cwtl
mov
mov
push
les
das
push
xchg
aad
pop
mov
stos
gs
mov
es
xor
sub
sub
jnp
addr16
dec
push
enter
adc
rcr
mov
inc
mov
mov
cli
call
add
pop
into
cmp
xchg
mov
rorb
add
hlt
lea
repnz
mov
mov
cmp
xor
cmp
inc
xor
cld
lods
aad
mov
jmp
aam
fists
int
push
push
xchg
mov
cmpsb
jl
cmp
mov
sarl
xchg
adc
dec
pop
test
scas
lea
mov
sub
cmp
lds
adc
mov
cli
fwait
cmp
jnp
inc
in
and
pop
out
cltd
mov
sub
lahf
loope
sbb
out
insb
sbb
inc
and
popf
xlat
dec
pop
cs
fwait
pop
mov
test
ljmp
xor
pushf
push
push
mov
loop
push
dec
sub
cltd
cmpsb
or
sub
mov
jg
cwtl
data16
and
dec
inc
repnz
xchg
dec
imul
pop
sar
xor
and
mov
mov
mov
inc
lods
sub
pop
out
jnp
es
cwtl
test
aaa
lods
mov
push
xor
lcall
sbb
jnp
lahf
xor
pop
push
mov
lock
add
xchg
les
adc
sarl
std
imull
add
std
cld
subb
mov
mov
lcall
push
cmp
in
mov
into
pop
xchg
sbb
mov
imul
adcl
mov
sub
fisttpl
dec
mov
pop
test
nop
mov
add
xor
data16
ret
hlt
js
lods
xchg
push
loopne
push
sub
mov
imul
jle
cmp
jmp
dec
cmc
arpl
inc
push
sbb
jno
adc
cmp
clc
jnp
ret
mov
add
push
dec
push
mov
mov
adc
add
mov
add
inc
outsl
cld
sahf
mov
push
aam
aas
pop
push
pop
or
mov
adc
add
es
cmpsl
mov
lret
scas
in
cli
inc
add
das
mov
std
mov
lcall
cwtl
xchg
dec
loop
or
jecxz
xchg
stos
pop
jmp
test
popa
cmp
adc
je
mov
xchg
lods
dec
mov
add
js
and
pushf
sub
or
push
loopne
mov
lcall
fistpl
and
nop
pop
rep
leave
sub
or
fsts
pop
pop
and
mov
xor
jecxz
mov
fistl
adc
xor
cmpsl
xlat
enter
mov
pop
stc
add
pop
fcoms
inc
sbb
add
sar
adc
xchg
stc
popf
insl
dec
imul
scas
cmp
add
adc
mov
sti
jl
inc
xchg
cmp
push
jns
movswl
pop
sub
addr16
lds
cmp
mov
movsb
loopne
rcrb
jbe
outsl
and
pop
imul
fsubrl
outsb
cmp
mov
dec
repz
sti
xor
jecxz
lds
cmp
pop
sbb
dec
add
or
ffree
push
roll
or
sbbb
mov
or
insb
inc
jp
push
add
loopne
pop
in
xchg
jmp
jne
test
ja
jge
into
xor
pop
out
inc
inc
pop
call
ret
aad
imul
test
pop
sub
mov
stc
sub
push
jmp
mov
or
or
popa
or
xor
outsb
jne
jecxz
mov
cmpsl
xlat
or
adc
and
or
pushf
je
out
dec
stc
insl
loope
or
inc
push
adc
fs
int3
mov
rcrl
lcall
pushl
fisubs
dec
icebp
in
cmp
push
gs
outsb
push
jbe
dec
dec
aam
or
and
out
insl
xchg
jecxz
mov
push
in
mov
pop
or
imul
out
pop
pop
xor
pop
mov
into
mov
jae
ljmp
enter
sub
in
mov
push
out
cmp
mov
sub
mov
or
nop
xchg
jle
pop
pop
rorl
int3
jp
sbb
in
and
jecxz
popa
mov
adc
mov
int
cmp
mov
fwait
das
push
mov
and
mov
mov
ljmp
cmp
ret
mov
repz
popa
outsl
cli
pop
cmp
repnz
mov
in
movsb
push
in
jmp
movsb
imul
lahf
call
int3
adc
pusha
das
out
fcomp
mov
fbld
adc
sub
push
fiadds
mov
mov
dec
and
mov
mov
fldl
icebp
inc
push
mov
mov
xor
mov
xchg
loopne
push
shlb
pop
daa
ret
jl
add
or
or
int
add
inc
mov
cli
sahf
rorb
cld
imul
adc
in
loop
or
mov
jl
pop
push
sbb
mov
dec
fs
je
fists
push
enter
ret
int
or
shll
loope
jo
in
jno
aam
movsl
int
stc
dec
jmp
rol
adc
add
cmp
mov
insl
sub
sub
loopne
stc
jl
sub
jecxz
xlat
jecxz
iret
cmpb
imul
mov
dec
sub
repz
xor
lret
xorl
cmp
mov
mov
dec
push
loope
scas
lahf
and
xchg
movsl
mov
movsl
pop
fdivl
jecxz
ret
sahf
push
icebp
rclb
subl
les
xor
movsb
jge
mov
jb
gs
cltd
pop
ja
aaa
mov
push
lock
mov
mov
xchg
adc
cmpsl
clc
xchg
andb
jae
sub
rcll
dec
lahf
mov
out
stc
aaa
xor
test
mov
mov
popa
rcrb
or
xchg
mov
add
sub
xor
pop
mov
popa
loop
iret
or
mov
roll
aaa
mov
subl
nop
scas
sbb
lret
in
add
aas
movsb
stos
daa
xor
popa
and
fists
daa
or
adc
xchg
dec
icebp
fsts
stc
mov
jge
pop
pop
lods
dec
or
sub
mov
repnz
mov
mov
addb
cmp
add
out
xor
iret
adc
xchg
shrb
xor
pop
adc
stc
addr16
sahf
push
mov
ror
or
xor
and
xchg
mov
es
pop
aaa
inc
cmp
add
mov
and
stos
cmp
in
push
xorl
ss
ljmp
lods
dec
and
jle
xor
out
or
push
sbbl
xchg
outsl
jl
adc
push
dec
dec
andb
rolb
lods
sarb
dec
int
adc
dec
push
sub
sbb
call
sbb
mov
test
jmp
orl
in
push
pop
dec
add
adc
movsb
clc
cmp
or
adc
push
insb
lret
sub
push
and
sbb
int3
inc
xchg
mov
in
jmp
pop
pop
sbbl
and
mov
lock
cmp
xlat
inc
add
rolb
loope
call
cld
mov
add
mov
cld
jecxz
mov
jge
std
leave
rol
test
push
cld
loop
out
data16
cs
jno
rclb
cmp
icebp
jle
lods
data16
mov
pop
shl
in
outsl
or
and
ja
lret
xor
mov
ja
mov
push
mov
pop
inc
addl
push
popl
pop
pop
jae
sbb
xchg
adcl
and
ja
pop
insb
in
lcall
pop
js
inc
adc
adcl
sbb
mov
or
mov
dec
cltd
jne
mov
inc
lods
push
and
stos
call
adc
es
ss
out
sbb
push
adc
je
xchg
adc
fsubrs
adc
xor
dec
push
sub
ret
push
sub
sbb
dec
push
jge
cmc
dec
scas
cltd
je
clc
outsl
je
fsubs
repnz
mov
xchg
jecxz
leave
loope
jecxz
adc
mov
hlt
jno
mov
repnz
out
mov
fstp
adc
dec
leave
scas
fcoml
jge
aas
out
movsb
es
jae
xor
divl
mov
sahf
pop
lret
std
ret
or
stc
dec
subb
ret
jmp
pop
pop
mov
fwait
adc
clc
xchg
mov
lea
add
mov
mov
arpl
repnz
and
imul
aad
movsl
pop
icebp
lods
js
inc
rol
add
or
std
fisubl
arpl
or
lock
js
insb
iret
xchg
dec
xchg
in
and
sub
jne
shll
pop
dec
cwtl
cltd
mov
outsl
cmpsl
inc
mov
add
jns
xor
mov
inc
outsb
lods
jecxz
push
and
ret
mov
int3
in
and
jmp
sbb
add
add
fbld
mov
das
dec
sarl
ja
or
or
sub
cmp
test
int3
insl
mov
stc
ss
stos
inc
loope
or
insb
push
jp
inc
dec
xor
inc
inc
push
xor
cmp
lea
inc
nop
mov
or
mov
ret
stos
push
in
test
addl
jb
jae
js
push
inc
and
lock
xchg
and
pop
sbb
leave
mov
dec
dec
pushf
xchg
bound
rcl
jp
and
dec
mov
xor
adc
notl
xchg
ficoml
pop
testb
pop
xor
mov
adcb
loope
sbb
inc
outsl
push
inc
divps
jg
sub
scas
xchg
fsubp
adc
adc
popa
fs
and
jl
sbb
imul
stos
adc
sarl
mov
mull
insb
xchg
movsb
sbb
push
loop
adc
repnz
xor
adc
cmpsb
mov
out
pop
ret
stos
mov
push
sahf
mov
lock
mov
mov
lret
outsl
add
inc
scas
in
imul
adc
jmp
out
mov
pop
dec
inc
imul
scas
sub
dec
jae
sti
ret
mov
pop
dec
mov
mov
cs
inc
mov
pop
jns
adc
fwait
jecxz
iret
pop
push
push
sbb
cltd
mov
out
pop
cmpsb
adc
jge
jl
cmpxchg
pop
hlt
mov
and
cli
je
sti
jno
adc
mov
push
dec
or
ja
push
movl
jb
xor
js
cwtl
testl
xchg
orb
outsl
pop
xchg
jle
pusha
subl
cmp
ret
or
clc
or
lret
xchg
fsubrs
xor
shll
andb
stos
mov
popf
out
out
ds
rcrl
jns
jp
mov
dec
lods
adcb
mov
push
sbb
dec
xchg
int
xor
push
mov
stos
xchg
cld
mov
jg
mov
mov
je
mov
jmp
pop
dec
and
scas
andb
arpl
in
xchg
sbb
sub
sti
ja
daa
cmp
mov
mov
inc
push
movsl
xchg
pop
jg
mov
push
out
aam
lahf
call
add
inc
addr16
push
aad
hlt
out
decb
cs
ja
lea
shlb
pop
je
mov
adc
pop
sbb
xor
push
xor
dec
imull
lcall
pop
xor
inc
mov
clc
stos
or
xor
sub
and
loop
cmp
or
or
out
add
aad
xchg
ja
andl
ljmp
ds
lret
subl
push
xor
lret
fildl
cmp
out
and
xchg
out
push
dec
or
fwait
sub
daa
pop
mov
sarb
test
fwait
or
dec
mov
lret
adc
or
les
add
sahf
cmp
mov
daa
data16
cmp
inc
addl
ret
outsb
call
std
sbb
mov
push
inc
and
sbb
pop
and
jle
add
shlb
xor
daa
or
mov
push
xchg
clc
jmp
push
mov
and
inc
cmc
sub
imul
out
pop
adc
inc
and
add
ja
xor
outsb
lret
xchg
mov
out
mov
movsl
inc
mov
int3
mov
inc
push
xchg
sbbb
loope
out
hlt
sub
xchg
enter
out
sbb
push
es
jle
outsb
mov
pop
sar
packuswb
xchg
or
push
jge
fcompl
out
inc
lahf
pop
push
pop
sbb
push
mov
daa
adc
dec
and
jae
stc
sub
cmp
stos
lret
scas
sbb
insb
test
or
mov
rorb
sbb
sbb
mov
test
pushf
sbb
movsb
mov
lcall
xchg
mov
pop
xor
sbbl
and
jne
lock
jecxz
xor
ljmp
mov
add
lods
push
mov
inc
mov
scas
dec
add
aam
icebp
hlt
ljmp
or
adc
dec
repz
pop
push
cmc
mov
je
and
mov
fdivr
insb
xchg
push
popa
or
in
push
fisubrs
or
jmp
aam
sub
pop
push
pop
cmp
push
movsb
xor
sbb
mov
adc
mov
dec
outsb
push
mov
in
pop
rorb
mov
jo
xchg
ret
scas
pop
popa
mov
jno
mov
insb
add
dec
pusha
lret
xchg
enter
jno
repnz
cmp
cli
mov
mov
mov
int3
les
lea
sub
sbb
push
jno
pop
pop
cld
test
inc
cmp
add
cmc
inc
inc
lret
js
mov
inc
lahf
into
xchg
add
adc
jmp
mov
rolb
arpl
lea
and
orb
lea
cli
push
mov
cmc
les
hlt
jns
js
cmp
mov
fstl
fisubrs
pop
xchg
dec
andb
push
ja
and
mov
pop
or
andb
cmp
mov
add
sub
push
sbb
push
adc
clc
inc
or
je
sbbb
pop
cs
pop
in
aam
std
in
dec
xor
and
or
mov
into
fnstsw
sbb
cmpsl
inc
mov
pop
cmp
xchg
aam
scas
fsubrl
fnstsw
mov
jb
or
xor
inc
and
adc
mov
cmp
pop
xchg
pop
mov
mov
mov
cmp
cmp
xor
xor
xchg
adcl
stos
dec
xor
mov
stc
fbstp
insb
adc
cld
inc
iret
aas
xlat
leave
and
jp
fcomps
push
cmp
pushf
and
cli
jle
and
scas
add
push
sub
bound
mov
lods
jecxz
and
fbld
fdivrs
cmc
ds
mov
ljmp
test
push
ret
das
out
sahf
xor
pushf
arpl
cs
lods
rcrl
jle
nop
pop
xchg
add
add
out
push
add
mov
jnp,pt
mov
add
out
and
xor
mov
xchg
mov
xchg
gs
movsb
cwtl
push
out
test
push
dec
arpl
fistps
aad
fcoms
jge
jo
insl
mov
jmp
loopne
mov
push
and
push
ljmp
out
stos
jne
hlt
sbb
mov
into
push
and
and
ds
femms
lcall
lock
aas
lahf
pop
sub
icebp
out
xchg
shll
inc
data16
cmp
jmp
xorb
jmp
xchg
popf
data16
xchg
ljmp
jecxz
push
shll
stos
nop
rclb
sub
loopne
inc
fwait
out
pushf
pop
jmp
adcb
in
mov
test
dec
div
cli
cwtl
dec
push
and
mov
jbe
dec
mov
icebp
cmpsl
aas
dec
hlt
push
add
inc
xchg
loope
inc
pop
mov
push
cli
fwait
popa
and
mov
ret
adc
movsb
insb
mov
adc
insl
cmp
mov
repnz
ds
addr16
and
xchg
xchg
fisubl
test
xchg
stc
cld
xlat
out
imul
shll
movsb
push
mov
lahf
push
mov
lcall
or
popf
cld
mov
loop
adc
cmc
ja
pop
pop
pop
in
xlat
push
adc
fwait
sub
mov
xchg
and
fcompl
inc
mov
lret
jbe
insb
sub
jbe
push
sub
adc
repz
fidivrs
mov
mov
stos
adcl
mov
jp
inc
pop
std
into
xor
mov
mov
xchg
in
into
mov
imul
and
mov
mov
cwtl
pop
jmp
ljmp
pop
cmp
cmpps
mov
jl
dec
pushf
jl
or
arpl
adc
cmpsl
ja
and
adc
xor
mov
cmp
nop
pop
push
pop
daa
pop
xchg
xor
xchg
sbb
or
jl
fstl
aas
and
and
setl
pop
icebp
mov
pop
lret
xorl
mov
and
fcomip
rorl
aas
les
sbb
adc
pop
mov
loop
mov
xchg
inc
or
add
sarb
outsl
push
std
mov
push
sub
in
xchg
sbb
cli
in
lret
jne
jno
std
testb
pushf
daa
mov
imul
gs
inc
or
and
mov
ret
add
lods
mov
add
jbe
pushl
or
mov
out
xor
jno
ret
adc
aas
push
sub
jne
inc
into
lds
add
lcall
test
mov
jbe
pushf
loope
pop
roll
sbb
es
stos
jmp
cwtl
add
xchg
mov
fmull
divl
test
lret
pushf
mov
nop
and
ss
xor
shl
inc
and
xchg
mov
jbe
xchg
aas
fidivs
push
int3
ds
pop
xor
and
lret
dec
pop
inc
lahf
adc
inc
push
shr
push
sbb
pop
movsl
imul
movsl
sbb
out
bnd
sbb
pushf
push
test
mov
movsb
adc
xor
flds
push
hlt
dec
aas
sbb
sahf
cmp
mov
mov
test
sarl
dec
push
cmc
lcall
sbb
fnstcw
dec
call
add
add
lods
movsb
stos
xchg
mov
jecxz
push
sub
dec
cli
pop
pop
push
int3
je
sbb
inc
dec
jnp
nop
arpl
jecxz
jecxz
daa
or
sub
into
int3
test
inc
adc
add
cmp
fadds
or
jae
add
aad
dec
ljmp
add
mov
xchg
or
jmp
xchg
iret
add
sbb
scas
stos
sub
loopne
cmp
mov
jmp
push
test
ss
lds
mov
and
or
sbb
xlat
sbb
sub
inc
sbb
push
jp
push
sub
mov
int
mov
repz
lahf
push
xorb
dec
fwait
pushf
or
inc
shlb
inc
les
repnz
mov
int
nop
mov
inc
jb
mov
sbb
int3
aam
pop
out
les
jnp
inc
jmp
shr
mov
fnstsw
pop
fdiv
cmp
inc
jecxz
mov
push
andl
orl
inc
lcall
mov
jb
add
clc
dec
xor
jb
and
outsl
add
xor
inc
movsl
or
int3
fidivs
adc
shll
popf
dec
int
dec
push
clc
test
sub
lock
icebp
int3
adc
mov
sahf
enter
adc
in
pmullw
sub
icebp
pop
xchg
les
out
adc
sub
cwtl
mov
inc
and
call
into
ss
es
leave
push
fdivrs
out
mov
push
sbb
adc
xor
das
jbe
add
pop
mov
add
inc
in
pop
movsb
sarb
aad
xchg
adc
xor
xlat
inc
iret
and
ret
sub
mov
int3
xor
jmp
lods
sti
inc
out
in
pop
sbb
mov
stc
aam
push
in
in
ror
adc
add
stos
sbb
inc
cmpsb
lret
adc
aas
push
inc
xor
hlt
inc
xchg
push
stc
mov
jge
sub
imul
decl
rep
rorl
sbbl
nop
loopne
gs
inc
sbb
rol
scas
cmp
andl
cmpl
add
int3
pusha
dec
fcompl
fcompl
jno
xchg
shll
sub
pop
push
cs
dec
push
fiaddl
jno
pop
in
mov
test
mov
sbb
mov
stc
negb
lock
into
push
fsts
add
int3
xchg
in
cld
sub
adc
scas
cmp
mov
sub
cli
ret
adc
push
push
sahf
mov
outsl
adc
fists
das
je
adc
mov
xchg
xor
arpl
daa
sub
sub
jnp
add
pop
sahf
lret
pop
mov
push
dec
leave
shll
pop
mov
cmp
fisubrl
inc
enter
jns
jg
ss
pushf
fstl
adc
mov
add
lock
cmp
lds
dec
push
dec
push
loopne
jbe
cmpsb
ss
and
jne
mov
insb
mov
pop
sbb
inc
add
and
in
dec
paddusw
push
push
pop
cmp
cmp
dec
pushf
lcall
ficompl
fidivs
push
mov
in
mov
lods
xchg
xchg
scas
adc
push
push
dec
insl
inc
sbb
mov
sub
fadds
fdivr
and
add
jge
in
ljmp
dec
push
push
pop
inc
stc
data16
push
hlt
das
ret
push
jns
js
rolb
jbe
xchg
int
sbb
sbb
mov
sub
cs
cs
push
cli
dec
cld
mov
mov
dec
mov
cmc
loop
sub
mov
xor
inc
fidivrl
pushf
push
imul
and
jne
insl
add
xchg
dec
pop
cmp
mov
clc
push
xchg
xchg
arpl
scas
pop
loopne
mov
mov
xchg
jnp
cmp
mov
cmp
bound
in
aad
pop
in
mov
inc
jno
push
add
sbb
push
add
fimuls
xchg
mov
mov
cld
mov
pop
stc
or
cmp
push
or
jno
xchg
nop
jnp
jle
test
mov
cs
or
push
jle
cmpsb
inc
jl
lods
sbb
jns
mov
call
pop
jns
imul
mov
movsl
arpl
mov
xchg
mov
lods
pop
add
xchg
xchg
repz
call
sbb
fs
cmp
push
push
das
sbb
mov
xchg
es
xchg
outsb
imul
das
outsb
pop
pushf
in
sub
jle
xchg
mov
inc
clc
dec
adc
sub
adc
jecxz
add
jp
mov
adc
push
xor
rolb
sub
xlat
outsb
mov
mov
sub
jecxz
mov
cmp
mov
ror
loope
pusha
test
popa
push
cli
add
pop
rcrb
loop
mov
xchg
movsl
and
mov
sbb
sbb
sbb
jno
inc
shlb
aaa
push
out
jmp
dec
rclb
das
xor
scas
enter
mov
mov
dec
sahf
jne
lods
fsubl
sbb
mov
imul
jl
iret
outsb
mov
movsl
push
pop
dec
inc
das
data16
push
push
xor
pop
mov
in
addl
fdiv
stos
sbb
hlt
push
xlat
pop
iret
xor
adc
push
data16
mov
insl
push
loope
dec
inc
das
dec
fcoml
push
fldt
mov
sub
and
cmp
xor
daa
mov
pop
mov
es
sub
stos
int3
in
sti
or
ror
jle
xchg
into
mov
jp
fidivs
scas
fisubrs
jmp
das
sub
add
int3
mov
jle
test
mov
mov
pop
sti
inc
test
push
nop
pop
lods
in
inc
repz
adc
xor
mov
mov
inc
jl
test
cwtl
xor
arpl
movsb
lea
dec
mov
mov
leave
lcall
add
jecxz
cmpsl
sbb
sbb
xor
push
jae
xchg
lea
mov
out
insb
inc
ret
adc
mov
pop
negl
negb
fdiv
enter
and
xor
sbb
jecxz
cmp
xchg
pop
fstpl
xchg
lock
clc
mov
pop
push
adc
mov
adc
mov
es
xchg
mov
sub
mov
mov
dec
and
in
or
xor
push
jecxz
aaa
stos
jnp
lea
es
xchg
orb
sahf
mov
pop
xchg
out
dec
adc
inc
pop
out
andps
test
push
aam
mov
push
pop
sbb
xor
adc
and
push
dec
in
fdiv
inc
dec
fisubrs
mov
ja
pop
cmp
jmp
addr16
inc
fidivrs
sbb
addr16
mov
sbb
jle
jg
or
subl
inc
bound
push
push
xchg
dec
jle
int
xchg
dec
stos
ss
aam
ljmp
fcompl
lods
test
test
ficoms
jo
push
add
js
into
aas
mov
mov
ljmp
push
and
xchg
sbb
aam
jle
loopne
scas
dec
xor
addr16
fcmovnb
call
push
in
cmp
fidivs
pop
jnp
xor
test
xor
jns
mov
push
dec
mov
mov
add
sbb
mov
ljmp
push
lcall
inc
pop
lret
test
mov
outsl
divl
sub
push
sbb
xor
push
xor
cmpsb
push
mov
mov
xchg
push
adc
xchg
xchg
into
jo
out
mov
jnp
jecxz
jb
ds
test
mov
pop
inc
sar
fsts
add
mov
push
cs
jno
adc
scas
jecxz
loop
jmp
adc
mov
adc
dec
mov
push
cmp
mov
pop
jl
insb
dec
xchg
push
cmpsl
insb
fidivrl
xor
pop
jb
call
add
inc
enter
dec
stc
in
bound
rorl
add
mov
mov
out
lcall
fisubs
ds
stos
xchg
sub
icebp
push
jg
pop
fnstcw
in
xor
dec
push
fwait
sbb
or
jmp
cmpsl
sahf
shrb
push
ds
outsl
test
mov
rcr
add
pop
shrb
out
bound
xor
insl
cmp
pop
filds
cld
dec
add
outsb
dec
adc
xchg
aas
and
ror
dec
stc
xchg
sti
and
lods
inc
lods
mov
inc
nop
pop
pop
lods
or
cld
jmp
xchg
out
outsb
test
xlat
cwtl
ds
sbb
mov
psllw
icebp
push
lods
movsb
push
cmp
dec
mov
mov
lahf
sub
sbb
xchg
pop
out
cmp
lret
test
fwait
or
adcb
lret
cmpsb
aad
adc
aam
es
xchg
pop
mov
xchg
repnz
mov
inc
pop
icebp
rclb
dec
cmp
mov
mov
sbb
sbbl
call
push
aaa
push
xchg
lods
mov
add
fucomp
dec
nop
insb
add
sbb
cmp
pusha
pop
xchg
mov
jb
pop
cltd
xor
daa
lds
test
push
pop
popa
sarl
push
xchg
inc
fs
es
pop
xchg
scas
sbb
xor
inc
aam
xor
cltd
and
sbb
add
lcall
das
cli
enter
aad
fucom
sbb
add
lcall
pop
push
addr16
into
hlt
sub
iret
jge
idivb
jecxz
pushf
push
jle
sub
and
rol
aad
in
or
mov
or
jae
bound
enter
xchg
mov
push
cltd
sub
sbb
adc
cmp
iret
sub
push
in
call
rcll
test
fnstenv
jo
jne
mov
jno
mov
cmp
jmp
repnz
add
insl
nop
lods
jl
mov
lret
push
cmp
xorb
gs
add
imul
pop
mov
push
je
sub
dec
movl
popa
movsl
cs
adc
out
gs
mov
fucomip
js
fiaddl
or
je
push
inc
push
push
gs
gs
mov
mov
or
xchg
xchg
cltd
xor
sbbl
sbb
aam
and
mov
lods
out
mov
cmp
or
xor
cmp
mov
dec
dec
sbb
sbb
mov
xor
lcall
dec
ja
sub
mov
pop
dec
pop
cs
xchg
ja
stc
jo
pop
das
adc
or
sub
das
into
or
mov
pop
jnp
inc
pusha
mov
dec
pop
mov
jl
into
adc
dec
pop
mov
iret
repnz
mov
and
outsb
insb
mov
gs
xlat
dec
addr16
mov
pop
add
push
adc
mov
or
add
sub
les
outsb
jb
into
cmp
imul
adc
sbb
push
or
and
mov
iret
mov
dec
sbb
hlt
sti
movsb
shrl
js
pop
inc
pushl
ret
jp
or
cmp
add
jno
fdivs
inc
cmpsl
xlat
data16
xor
enter
std
and
imul
pop
stos
inc
lods
inc
mov
dec
aas
repnz
push
hlt
mov
test
rcll
cmc
sahf
mov
push
adc
leave
jae
adcb
popf
addl
popa
ret
mov
int3
xchg
add
int3
mov
pop
lods
pop
es
mov
cli
jecxz
dec
sub
int
ljmp
mov
sub
cmp
aaa
lret
mov
push
sub
push
insb
sbb
jmp
push
jp
std
adc
dec
shrl
mov
jb
repz
push
imul
outsb
inc
adc
popa
push
rolb
xchg
adc
sub
sub
push
cmp
jo
loop
nop
cmp
and
or
adc
imul
adc
pop
add
test
scas
mov
mov
sahf
mov
sbb
loope
xor
adc
push
ficompl
dec
imul
dec
xor
out
push
add
dec
mov
fcoml
push
fnstsw
sub
and
sub
mov
ds
outsl
js
daa
sar
aas
loopne
mov
and
je
push
mov
mov
cmp
inc
lods
and
icebp
int
mov
sub
pop
xor
inc
pop
add
out
iret
aad
adc
dec
lahf
or
mov
pop
ret
std
xchg
into
adc
sbbl
sub
popf
shrl
sbb
mov
xchg
ftst
push
or
sbb
repnz
xor
inc
pop
fwait
xchg
push
push
ljmp
xchg
loopne
in
add
mov
pop
dec
lret
xor
mov
in
lods
icebp
int
adcb
in
ljmp
xchg
pusha
jge
mov
push
addr16
popa
jne
lea
mov
xchg
pop
adc
or
and
xlat
mov
mov
cmp
xchg
popa
cmp
addr16
sbb
aad
adc
mov
rorb
test
push
out
test
call
mov
outsb
sbb
add
xchg
mov
jmp
enter
push
sbb
add
inc
xor
sbb
ficomps
lock
pop
sub
cmpsb
pop
pop
test
sbb
mov
daa
jo
push
sub
pop
jo
movsl
adc
pop
push
insl
imul
dec
enter
xor
pop
aaa
les
cmp
sahf
clc
je
scas
mov
cmc
loopne
or
jne
mov
adc
push
pop
shll
jl
mov
sbb
add
sub
sub
sti
scas
mov
dec
pop
fisubl
push
sarb
sahf
iret
leave
xchg
shufps
push
lcall
push
dec
clc
inc
arpl
pushf
in
mov
sbb
cmp
pop
push
fcoml
fidivs
imul
cmc
xchg
and
icebp
xchg
jae
xor
xchg
jge
mov
dec
mov
cmp
mov
inc
ljmp
test
xor
push
lahf
int3
cmp
xchg
pop
fcoml
xor
dec
mov
dec
rolb
imul
adc
ret
mov
roll
insb
mov
ret
mov
pop
xchg
add
cltd
mov
pop
mov
xchg
xchg
cld
imul
das
dec
ja
cmpsl
inc
cld
mov
bound
jo
dec
div
nop
lea
das
sbb
jne
dec
pmaxub
sbb
cmpsl
xor
add
paddusb
shll
sbb
shlb
push
hlt
inc
pop
clc
pop
mov
lods
std
sahf
pop
stc
jp
sbb
fwait
in
xchg
movb
je
pop
sub
or
and
sbb
adc
into
stos
test
mov
pop
imul
inc
xorb
ret
xchg
sub
jae
int3
or
add
lret
or
sbb
mov
jns
fabs
push
scas
outsb
scas
dec
pop
cmp
fcoms
dec
add
sarb
dec
aaa
inc
pop
push
push
cmp
inc
cwtl
iret
mov
push
repz
scas
insb
movsl
fistpl
clc
cmp
adcl
mov
inc
push
sbb
loop
data16
out
popf
jnp
and
push
int
fstp
into
cwtl
and
mov
inc
cmc
mov
jno,pn
mov
loopne
jl
stc
xor
sub
adc
xchg
pop
shlb
jge
cmc
das
imul
cmp
sahf
xchg
js
add
jns
movsl
and
push
cmp
xchg
data16
test
jp
and
or
popa
iret
add
cld
fs
or
nopl
jno
mov
cmp
lods
js
cmp
in
adc
cmpsb
push
cmp
mov
shl
rcrl
or
cmpl
ds
jno
dec
loop
ret
enter
call
or
pop
xchg
rol
lret
sarl
or
pop
mov
cmp
mov
pop
dec
xchg
mov
jo
loopne
jnp
jg
push
out
mov
mov
inc
inc
iret
inc
and
dec
es
imul
and
mov
mov
xorb
fidivrl
cmp
cltd
inc
pop
fisttps
push
mov
fldl
ret
hlt
and
lret
cmpsl
cmpsb
inc
mov
xchg
inc
mov
dec
or
push
adc
mov
pop
lcall
fildll
mov
push
adc
addl
fucomip
cmp
mov
lea
pop
mov
jbe
add
pop
outsl
dec
ds
push
xchg
dec
stos
cmp
sub
arpl
mov
inc
testb
hlt
cmp
or
push
mov
mov
into
dec
mov
cmc
pop
rcll
add
adc
into
in
xchg
repz
lret
fwait
dec
xchg
rcl
rol
push
pop
push
and
push
mov
pop
nop
xchg
cli
in
call
mov
and
jns
nop
inc
cmp
push
xchg
arpl
mov
and
fstl
out
insl
sbbb
clc
push
adc
sbb
push
test
fldl
inc
dec
out
lods
jno
push
loopne
mov
jns
dec
jg
insl
outsb
and
inc
out
insb
cli
jle
es
insb
lcall
dec
sub
inc
mov
daa
je
stos
rol
bound
sub
fldcw
and
mov
cmpsl
mov
pop
or
xor
out
scas
nop
and
cmp
xor
pop
mov
jge
jo
push
out
jecxz
cmpsb
stc
inc
pop
xchg
and
sbb
adc
or
push
lock
add
popf
cmp
shl
inc
inc
test
mov
or
mov
jne
xor
icebp
sti
sub
adc
xchg
hlt
mov
cmpl
repnz
ljmp
sbbb
test
mov
sub
arpl
aad
lahf
xor
push
mov
add
shll
cmc
or
shrb
push
cmp
rcrl
mov
sti
and
pop
fdivrs
or
push
rcr
outsb
cmp
and
or
push
cli
xor
leave
lret
fisttps
inc
idiv
dec
mov
add
addr16
lods
xchg
jp
xor
pop
sbb
int
mov
cmpsb
out
stos
stos
jne
xor
adc
mov
mov
xchg
jo
loop
test
pop
mov
sbb
fimull
test
icebp
fs
cmp
subl
fisubl
cwtl
add
pop
mov
jno
dec
pop
arpl
xor
outsb
inc
mov
mov
loopne
movsl
jg
jp
pushf
lods
mov
push
push
daa
nop
cvtps2pi
and
dec
pusha
pop
and
mov
cwtl
push
sbb
movsb
mov
fld
push
xor
lods
ljmp
xchg
int
cmp
insb
std
idivb
or
lret
in
add
out
add
jg
inc
test
or
in
xchg
mov
jg
jle
fsubs
inc
jge
dec
inc
sbb
mov
push
mov
jne
in
jg
jecxz
sub
dec
or
and
adc
sbb
cmp
daa
jae
scas
sarl
xchg
adc
jo
leave
cmpsl
in
jb
adc
xlat
fldcw
test
movsb
test
mov
mov
sbb
lret
push
fcoml
xchg
lret
mov
xchg
xchg
pop
sbb
aam
sub
add
xchg
imul
adc
std
push
bound
ret
div
adc
sti
mov
inc
dec
test
xchg
mov
jg
and
in
aaa
and
cmp
ret
mov
mov
fucomip
sub
sbb
sub
dec
mov
inc
into
aas
cld
xor
mov
sub
jnp
lahf
cli
outsl
setbe
movsl
jecxz
jo
xchg
pop
fisubs
fadds
adc
jb
addl
jge
aaa
jp
out
dec
pop
addr16
adcb
es
mov
xor
pop
push
mov
push
mov
fistps
mov
aam
push
clc
push
push
add
adc
mov
mov
jae
mov
cmp
add
or
inc
adc
loop
outsl
add
imul
cs
daa
outsl
jecxz
cmp
xor
addr16
dec
inc
addr16
sub
cmp
pop
ja
fsubr
icebp
clc
cwtl
mov
cltd
lea
push
repz
pop
cmp
std
pop
stc
xchg
ffree
pop
sbb
mov
push
nop
push
shlb
rcr
sbb
mov
cs
icebp
xchg
push
jp
dec
dec
pop
cmpsl
and
out
mov
arpl
imul
mov
cmpsb
scas
pop
sub
fnstcw
and
xchg
jge
rorb
push
sbb
data16
insl
xchg
mov
popl
push
mov
iret
dec
cs
mov
push
jbe
cmp
andl
mov
dec
dec
mov
call
movsb
jl
inc
ljmp
add
cmp
adc
ss
dec
loop
out
jp
push
jo
xchg
add
lock
movsb
leave
dec
jl
inc
jl
mov
push
stc
or
shl
sbb
insb
cmpsb
out
jecxz
fld
adc
xor
enter
adc
in
dec
ds
xor
cltd
ljmp
rorl
inc
call
mov
jl
cltd
imul
into
mov
mov
dec
dec
add
xor
mov
and
hlt
fwait
int3
int3
sbb
sub
scas
cmp
xchg
jo
in
cltd
loope
push
or
sbb
and
lcall
testb
rorl
mov
mov
jl
scas
into
cmp
sub
xchg
jno
adc
fldenv
inc
push
inc
lock
xchg
adc
out
or
fbld
idivb
stc
fisubl
iret
scas
lcall
imulb
mov
jecxz
dec
dec
icebp
jnp
or
aas
or
adc
rolb
outsl
adc
adc
xor
push
cmc
daa
xor
movsb
jp
rclb
push
out
jecxz
orl
in
push
das
or
imul
fistps
ss
lods
rcl
int
out
inc
js
cmp
xchg
cli
fcoml
sub
test
dec
push
ret
or
ds
pop
sub
inc
mov
fidivrs
xor
scas
adc
lret
push
in
push
push
and
and
cltd
sub
adc
jbe
stos
or
push
test
jecxz
into
mov
and
mov
in
xor
push
ja
pushl
jmp
sub
add
cmc
pop
notl
inc
hlt
xchg
sub
sbb
test
or
dec
imul
inc
jb
in
sti
jb
sub
push
daa
ja
fbld
cli
js
sbb
ja
fsubs
mov
jb
pop
mov
ss
lds
cmpsl
popf
mov
lods
sti
xchg
lret
sub
adc
push
and
fildll
pop
dec
scas
in
and
sbb
popl
out
js
push
test
xor
dec
lcall
sbb
addr16
mov
movsb
mov
je
loope
push
inc
xchg
dec
outsl
inc
mov
mov
leave
sbb
mov
ret
aam
mov
cmp
pop
imul
or
jecxz
sub
leave
dec
scas
push
sbb
mov
mov
stos
add
xchg
xor
sbbl
adc
xor
int
out
fcomi
fistl
add
push
mov
mov
fidivl
ss
add
das
lret
pop
scas
outsl
repz
and
enter
mov
sub
dec
cli
mov
pop
and
ljmp
push
gs
cld
add
data16
push
and
pop
or
insb
and
dec
or
mov
dec
addl
sti
cmpsb
mov
mov
sbb
xchg
int3
sarl
jno
jle
std
add
out
add
sbb
cli
sbb
push
ret
ror
ficoms
xchg
and
arpl
dec
fwait
sbb
cmp
dec
cli
fsubs
jo
es
sub
sbbl
push
aad
push
mov
mov
in
in
sbb
cmp
incb
adc
fnstcw
cmp
inc
mov
pop
lsl
push
mov
push
pusha
cmc
bound
aad
movsb
xor
mov
lods
cmp
popf
push
sub
das
out
cmc
or
xorl
fcomps
pop
dec
adc
lds
icebp
es
sbb
sar
push
mov
lret
jg
ffree
jmp
xchg
mov
jo
int3
jg
xchg
cli
gs
sti
xchg
dec
popf
int
movsl
push
frstor
loope
out
add
push
push
fdivrs
mov
push
push
pushf
and
fcoms
push
pushf
bnd
call
mov
xchg
fadds
or
cmp
push
ret
iret
jge
inc
fidivrl
mov
xlat
mov
addl
xchg
jbe
je
out
cmp
ss
adc
movsb
mov
dec
gs
adc
arpl
out
mov
add
add
xchg
push
ljmp
mov
mov
inc
mov
lahf
data16
jecxz
sbb
sbb
iret
dec
and
rcrl
jmp
sub
mov
lods
ljmp
pop
push
adc
sbb
lock
push
sarl
push
hlt
loopne
pushf
and
xchg
inc
pop
mov
pop
and
js
int
stos
mov
mov
jo
sub
aaa
dec
fstps
sbb
dec
pop
out
stc
mov
scas
test
testl
je
cmp
imul
add
mov
pop
loop
jg
jle
js
inc
push
push
xlat
loopne
push
and
in
dec
sbb
test
imul
sub
jns
cmp
aam
inc
push
fbld
xchg
xlat
sbb
pop
pop
cwtl
out
mov
stos
mov
roll
ret
xor
jl
pop
dec
dec
pushf
jbe
jo
xor
or
cmp
addr16
adc
mov
in
lahf
mov
mov
iret
dec
adc
scas
mov
push
in
popf
mov
mov
fbld
sbb
push
aad
and
mov
cwtl
cmp
adc
pop
fcompl
jbe
jb
adc
push
aam
icebp
add
insb
das
inc
or
push
je
and
or
sbb
popa
adc
cmp
xor
pop
out
lcall
pop
cmp
rcll
imul
arpl
sub
sbbl
pop
mov
add
push
es
std
sbb
stc
xchg
lret
sub
dec
lret
test
aas
fcomps
pop
dec
inc
arpl
jle
push
mov
pop
jns
outsb
xor
sub
jbe
dec
lret
mov
push
dec
jbe
int3
hlt
scas
icebp
jle
lret
add
je
dec
adc
std
mov
shl
enter
lock
dec
insl
pop
enter
xlat
out
repz
xchg
ja
ja
jne
sarb
xchg
out
outsb
fistps
mov
jae
repnz
rorl
and
jecxz
inc
sbb
repz
mov
das
ret
jp
lcall
movsb
cltd
or
pop
insw
pop
push
cmc
std
and
ja
mov
xchg
xor
sbb
mov
inc
inc
jl
movsb
lret
iret
and
jo
cld
std
push
pop
lcall
cltd
adc
iret
andl
cmp
clc
addb
rclb
adc
cmp
push
push
add
ret
fsubs
movsl
test
orl
jae
fiaddl
inc
push
push
adc
scas
mov
push
movsb
aam
add
add
adc
loop
fmul
jne
mov
das
xor
ss
sbb
xor
xchg
das
movsb
out
ds
pop
cmpsb
mov
icebp
js
push
or
addb
popf
je
xor
jo
xor
cmpsl
add
mov
sbb
mov
cmp
xchg
push
push
xchg
movsl
sub
xor
and
lock
lcall
clc
cs
add
jp
pusha
imul
insb
in
movsb
adc
test
addr16
fistl
adc
adc
add
mov
mull
loop
push
jne,pn
sub
in
mov
jecxz
jp
loope
sti
subb
sti
xlat
sbb
pushf
je
stc
xchg
js
add
popa
ljmp
sbb
scas
pop
sbb
lcall
mul
out
rcrb
int3
out
push
scas
xor
in
and
inc
rol
popa
mov
or
andb
dec
daa
mov
or
repnz
pop
cltd
inc
pop
mov
fildll
or
pushf
lea
call
andl
enter
cmp
push
push
and
xlat
push
inc
pushf
or
sbb
and
pop
xorl
mov
dec
cmp
mov
mov
stos
nop
mov
xor
or
jne
cmp
xchg
dec
and
push
jmp
dec
cmp
mov
lods
pop
add
jl
pop
dec
and
dec
or
pshufw
or
insb
add
into
mov
inc
das
stos
jnp
adc
fcompl
inc
cwtl
xchg
test
or
out
das
mov
dec
int3
mov
outsl
gs
das
pop
lock
or
andb
leave
cmp
push
cmc
scas
or
push
mov
inc
jmp
sbb
data16
jnp
gs
cltd
cwtl
jmp
push
subl
push
dec
mov
test
shlb
sarb
je
adcb
pop
mov
test
cli
mov
push
push
push
add
shlb
movsl
lods
iret
push
or
rorl
jl
jmp
iret
ffreep
sarl
gs
jb
cmc
inc
pusha
add
pop
js
stc
loop
cwtl
popf
mov
add
mov
mov
xchg
sbb
sbb
cmp
sub
popa
mov
fnsave
addr16
adc
stos
cmc
cmp
out
lea
pop
mov
pop
iret
subb
or
sbb
aad
add
shlb
loop
add
mov
mov
xor
jo
jl
adc
cmp
sbb
outsb
jae
cmp
jmp
test
rcl
xlat
out
sub
add
ljmp
ret
test
xor
and
mov
jl
jae
and
jg
sub
xchg
int
sub
pop
mov
aam
fsubrl
ficoms
testl
xchg
js
jns
sub
lds
addr16
lds
push
mov
mov
cmpsl
leave
mov
push
stos
mov
pop
pop
sarb
fsubl
sub
xor
inc
lcall
ja
mov
fidivl
pusha
imull
cmp
imul
jb
out
das
cmc
lcall
shrl
sbb
add
sub
pusha
add
push
xchg
mov
lret
push
stos
loope
cltd
mov
mov
mov
movsb
arpl
test
jb
test
clc
setp
mov
movsb
mov
sub
cmp
cld
lahf
int3
dec
mov
push
cmp
jns
stos
scas
xor
into
sti
aas
es
popa
cmpsb
mov
fsubrp
cmpb
or
adc
cmp
fsubrs
out
mov
cwtl
sbb
decb
lcall
push
icebp
xor
sub
sub
lds
outsb
mov
ret
and
mov
roll
jne
ljmp
test
icebp
xchg
push
and
popf
adc
cltd
es
aam
jb
data16
pop
cmp
mov
jl
loopne
sbb
les
int3
sbb
test
je
pop
dec
xor
rdmsr
or
negb
and
js
test
stc
dec
mov
or
mov
shl
aad
jle
test
pop
js
aaa
shld
stos
fidivrl
xor
cmpsl
push
sbb
mov
popa
loopne
adc
sbb
xchg
xor
into
cmp
push
xchg
in
dec
in
xchg
bound
cli
or
or
inc
mov
pop
cld
adc
xchg
xor
sbb
xchg
push
jno
in
fdivrs
sahf
add
js
cmp
push
bound
dec
and
jo
cmc
lods
mov
push
sbb
mov
and
sbb
aam
or
imul
aam
cli
push
jp
and
cmpsl
and
negb
sbb
push
and
mov
xlat
or
out
sahf
mov
imul
push
add
push
hlt
aaa
movsb
mov
dec
imul
mov
pop
xchg
je
pmulhw
je
lock
push
mov
popa
lahf
lea
push
cmpsl
gs
adc
pop
push
mov
xchg
add
mov
and
adc
mov
jmp
push
jge
and
out
pop
test
cwtl
mov
adc
or
mov
mov
popf
mov
arpl
das
add
push
sub
test
xchg
lcall
adc
pop
in
mov
pop
ret
fwait
pusha
cmc
sub
mov
rorb
mov
decl
push
and
dec
ss
push
cli
xor
mov
ret
sub
adc
movsl
frstor
lock
popa
and
inc
pop
adc
aad
cmp
loop
xchg
test
imul
or
adcb
cmpl
fistpll
add
jle
sub
shll
jo
xor
pop
ffreep
push
fwait
mov
clc
out
in
popa
lock
jae
das
outsb
mov
inc
mov
inc
fbstp
enter
sub
test
push
sbb
mov
xchg
dec
out
roll
push
repz
popf
in
jns
fprem1
popa
xchg
jmp
jo
and
adc
js
cmp
cmp
dec
loop
movsb
movsb
or
lret
push
pop
push
xor
jno
fbld
mov
push
cmc
mov
inc
das
stos
fmul
push
jbe
mov
mov
sub
cld
dec
mov
fnstenv
clc
cli
call
push
mov
lret
pop
jecxz
ret
cmpl
movsl
adc
scas
fmul
out
pusha
inc
lods
or
jnp
push
fimull
jno
lret
mov
mov
push
mov
ret
xchg
fcmovnu
cmp
mov
fstpl
gs
jae
fistpl
insl
jmp
dec
mov
adc
or
adc
mov
dec
jnp
cmc
in
sbb
fmull
loopne
jg
add
mov
nop
call
add
pop
cmp
or
aaa
jge
rorb
testb
out
mov
lods
xchg
bound
xor
idivl
scas
cmpsb
jmp
xchg
push
daa
dec
andl
sub
scas
pop
inc
outsb
clc
aad
dec
lahf
lock
pusha
sbb
cmp
mov
test
push
mov
cmpsb
lret
sub
dec
ds
push
aam
jmp
mov
out
xchg
xchg
lret
mov
mov
outsb
mov
aam
insb
jnp
xchg
dec
sbb
mov
mov
es
pushw
test
inc
or
jae
sbb
pop
and
in
xor
add
lock
dec
cmp
cld
xorb
insl
mov
in
lods
sbb
xchg
pop
adc
adc
inc
mov
scas
fnstsw
sub
pop
fwait
pop
cli
cltd
push
add
jle
inc
fbstp
and
outsl
add
cld
pop
es
pop
cmpsb
mov
out
cmovno
pop
mov
filds
in
jle
jae
js
add
rorl
jle
cmp
push
icebp
loopne
in
dec
mov
repnz
out
jo
sahf
and
into
push
mov
push
shrl
mov
iret
mov
mov
test
dec
xor
ja
add
adc
out
mov
dec
in
sbb
loope
mov
xor
adc
mov
fnsave
mov
int
je
push
jae
xchg
enter
jne
cmp
and
int3
in
dec
lds
ds
jne
push
clc
fmul
out
jmp
jp
mov
aaa
sub
andl
fists
push
daa
ret
test
add
adc
addb
mov
fnstcw
icebp
imul
rcrl
sub
movb
add
or
cmp
andb
mov
data16
xchg
mov
adc
mov
pop
sub
or
inc
ja
mov
sbb
cmpsl
outsl
jno
pop
pop
cmc
xor
cs
xor
fstps
aam
mov
jbe
icebp
mov
clc
push
add
jecxz
or
pop
xchg
push
inc
stos
mov
es
test
repz
mov
clc
je
js
sbb
in
adc
js
arpl
sahf
nop
gs
in
sub
das
dec
cmc
iret
js
cmp
lea
pop
int
out
and
in
lret
lods
iret
mov
data16
xchg
mov
sbb
jno
test
add
xor
fisttpll
test
mov
fdivs
xchg
and
inc
sbb
mov
adc
sbb
leave
cwtl
cltd
rcrl
xchg
decl
popf
inc
jle
jnp
xchg
push
outsl
pop
mov
push
pop
les
loope
jnp
fs
sub
jle
push
outsb
jns
add
xor
orl
push
push
pop
imul
je
push
ret
ja
sahf
stos
ljmp
scas
into
sub
adc
push
mov
into
sub
andl
xor
or
jp
mov
insl
cmp
syscall
popa
fdivl
idivl
xor
sbb
mov
outsl
int
jl
lds
scas
jae
push
ja
lock
pop
push
add
mov
or
xchg
mov
mov
and
fcoms
pop
repz
out
out
in
rorb
ljmp
jo
push
add
adc
rcl
aaa
bound
sbbl
add
jp
test
push
push
ret
cmp
icebp
movsb
inc
and
or
repz
jge
aad
fs
insb
rcrl
lock
adc
out
cmp
mov
test
je
add
cmp
xchg
and
mov
pop
gs
jbe
inc
sub
mov
jns
sbb
or
fs
je
sbb
shll
push
aad
and
out
mov
lea
jmp
jne
rcl
and
pop
cmc
mov
mov
int3
js
test
add
and
or
jecxz
cmp
mov
mov
movsl
fwait
push
int3
mov
mov
aad
jae
stos
xchg
data16
out
xor
fdivr
ret
pop
mov
lds
mov
lahf
scas
dec
repz
mov
inc
out
pop
iret
lods
xchg
sarb
jl
sbb
xchg
jmp
xchg
outsb
add
push
int3
mov
xchg
mov
outsb
add
mov
adc
icebp
test
cmp
mov
mov
add
push
xchg
inc
out
push
popf
testb
and
mov
add
rcr
js
stos
and
push
sub
xor
aam
sbb
stos
es
inc
inc
inc
in
fcompl
fwait
popa
add
add
out
add
xchg
jle
shll
hlt
jg
movsb
daa
sub
jp
xchg
mov
sbb
inc
cmp
xor
pop
aam
mov
push
jo
jae
and
jne
or
gs
ds
pop
push
scas
and
ds
stos
lods
and
gs
dec
mov
addl
push
int3
out
cmp
mov
pop
mov
scas
sub
test
inc
and
push
xor
pop
rcrl
pop
xor
pop
pop
mov
xor
mov
das
xor
xor
aam
dec
dec
lret
mov
in
add
mov
sbb
xchg
mov
mov
sbbl
sahf
icebp
fsubl
out
ljmp
push
orb
push
inc
adc
sub
jo
fdiv
add
pusha
mov
jle
cld
mov
mov
adc
in
cmpsb
jb
stos
push
push
push
stc
pop
xchg
jecxz
inc
inc
outsb
cwtl
addr16
scas
cmp
jb
mov
push
fs
rcl
xor
and
pushf
mov
shrl
mov
ljmp
cmp
xchg
mov
dec
mov
test
das
cmpsb
lods
adc
xchg
inc
push
jg
outsl
lea
sub
neg
pop
popf
sub
hlt
inc
xchg
mov
dec
dec
sbb
jmp
dec
int3
pushf
aaa
and
sub
pmulhuw
xchg
in
lods
mov
cld
sti
dec
and
mov
dec
aaa
add
cmp
movsb
rcl
iret
cmpsl
je
mov
push
jbe
mov
or
cmp
lea
mov
in
jno
sub
or
daa
xor
repz
movsl
adc
sahf
loope
adc
stc
dec
mov
sub
push
jmp
or
push
stc
inc
insl
sub
adc
push
dec
subl
in
sbb
notl
dec
or
add
aad
dec
lods
inc
push
mov
mov
ja
into
mov
adc
sbb
repnz
sub
cs
mov
mov
jg
adc
dec
adc
dec
out
in
xchg
mulb
stos
test
xlat
sub
xor
scas
inc
and
bts
cmp
lds
lock
xchg
add
dec
fwait
sbb
push
dec
dec
pusha
xchg
mov
fwait
dec
xor
push
mov
pop
xchg
pusha
pop
outsl
xor
adcb
xchg
mov
adc
mov
ljmp
loopne
out
out
pop
or
repz
mov
mov
sbb
icebp
or
rclb
pop
jne
iret
adc
aam
ds
leave
mov
in
inc
lea
js
adc
mov
mov
mov
sarl
insb
scas
cmp
add
mov
add
leave
call
dec
jo
jmp
push
ja
xor
rcr
movsl
insl
sbb
subb
stos
push
mov
or
clc
int
or
jecxz
mov
clc
xchg
xor
das
pop
sbb
enter
sbb
test
in
push
mov
mov
cmp
push
sahf
push
pop
pop
and
mov
adc
cltd
mov
fs
das
or
inc
sahf
cwtl
mov
es
dec
outsb
jb
int3
push
sbb
jmp
pushf
lods
dec
sub
adc
int
in
roll
rclb
bound
ret
pop
jnp
sti
jns
xchg
and
shl
cmpsb
pop
mov
dec
xor
mov
push
xor
movsb
mov
inc
test
inc
add
in
jae
loop
bnd
push
ljmp
movsb
sub
mov
fisttpll
xor
lock
fnstenv
in
gs
in
pop
lea
pop
cmpb
imul
enter
into
ret
push
or
pusha
jo
push
add
mov
pop
jns
dec
and
cmpsl
xchg
xchg
fsincos
mov
stc
je
out
mov
mov
jae
popf
pop
gs
mov
ds
out
push
jecxz
mov
pop
cltd
imul
adc
enter
xchg
inc
push
mov
pop
pop
jl
xchg
or
call
js
cmp
cmc
stos
les
popa
adc
mov
adcb
mov
call
sub
pushf
outsl
dec
pusha
les
mov
sbb
cld
pusha
call
xor
jle
and
repnz
and
pop
inc
dec
cwtl
lods
pop
mov
sahf
int
pop
sub
sbb
stos
imul
cltd
out
sbb
sub
cmpl
mov
mov
mov
xchg
jne
ucomiss
int
out
sti
imul
imul
fdivr
cmc
int3
jbe
dec
pop
mov
out
movsb
inc
cwtl
and
mov
adc
pop
leave
pop
jae
fcomip
xchg
cld
divl
cmp
arpl
push
cmc
dec
cs
leave
xchg
xchg
scas
pop
outsb
dec
push
lcall
inc
add
fnstcw
mov
add
xchg
push
and
sub
xor
push
add
testb
sti
dec
cmp
push
fisttpll
and
xchg
imul
xor
ja
lret
fdiv
mov
and
jle
sub
pop
cmp
mov
xlat
outsb
jae
fstp
sub
icebp
js
aaa
hlt
leave
lods
outsb
lock
insb
ror
fstpt
scas
jns
adc
and
push
out
push
inc
scas
and
adc
push
sarl
dec
or
in
mov
stc
mov
push
and
rclb
fcmovbe
loop
xchg
jecxz,pt
int3
adc
int
cmp
and
loop
ja
xor
jae
repz
inc
jo
xchg
cs
or
div
push
in
pop
and
inc
loope
push
adc
pop
aad
mov
cltd
loop
dec
xchg
jmp
daa
lds
mov
or
loopne
aas
adc
or
dec
xchg
test
outsb
movd
add
jl
xchg
inc
lahf
in
fwait
push
xchg
ficoml
ret
adc
mov
and
es
cwtl
lret
add
jo
xor
cmp
xlat
xor
cli
and
loope
sbb
pop
movsl
mov
xchg
jbe
mov
jecxz
sbb
push
call
lcall
xor
sbb
mov
scas
mov
enter
movsb
repz
jne
mov
inc
xchg
arpl
in
xor
mov
add
jne
std
mov
dec
jno
aad
rorl
mov
jp
je
push
vcvttpd2dqx
test
jecxz
shlb
push
imul
mov
jo
cld
push
adc
dec
or
mov
jbe
aaa
push
add
repz
pop
inc
pop
cmp
inc
out
ficoml
in
test
lahf
sub
push
ret
xlat
pusha
negb
js
cmp
rolb
rolb
mov
mov
aad
mov
xor
push
rorl
fwait
xchg
movsb
ss
out
mov
push
popa
mov
lret
sbb
sbbb
xchg
lods
stos
lcall
or
jne
movsb
cmpsl
outsb
push
cmc
mov
outsl
outsb
mov
mov
inc
or
dec
in
or
mov
lahf
les
aas
mov
popa
loope
fsts
cmpsb
inc
bound
mov
rclb
out
add
stos
fldcw
sahf
jg
cmp
mov
fisttpl
cmpsl
mov
sub
cltd
lahf
sarl
cmpsb
push
aaa
inc
lret
and
adcb
cmp
inc
out
or
inc
adc
fcompl
imul
sbb
jns
dec
mov
sbb
stos
scas
adc
cli
add
inc
mov
xlat
hlt
fldt
adc
xor
dec
dec
loop
mov
lock
aad
sub
movsb
inc
cmp
jns
sahf
loopne
push
mov
mov
fists
adc
dec
aam
mov
cltd
lret
cmp
popf
mull
push
xor
shrl
or
ss
lock
jno
fmull
inc
mov
cmp
and
fldcw
les
in
inc
rorl
sarl
out
cmpsl
orb
cs
aam
ret
inc
fwait
inc
icebp
outsb
arpl
dec
sbb
cld
pop
xchg
sbb
lods
jne
push
cltd
xor
xor
cmpsl
push
ja
mov
push
fsubrs
out
pop
xor
add
jge
cmp
fucomp
or
jp
dec
dec
pushf
mov
inc
aas
mov
clc
cltd
testl
addr16
add
cmp
stc
or
popf
inc
fstl
repnz
jmp
fisubrs
mov
call
jp
dec
scas
push
lret
jmp
push
add
movsb
cltd
mov
scas
ds
pushf
mov
push
out
aas
push
inc
inc
or
mov
ja
sbb
loopne
sub
repnz
xlat
fsubr
cwtl
pop
cltd
or
mov
repnz
pop
sub
pusha
shll
mov
pop
fimull
arpl
jl
shrb
fs
cmp
xor
loopne
or
cmp
add
or
cld
ret
push
xchg
std
pushf
daa
nop
push
aam
jbe
aam
mov
filds
pop
sbb
jnp
fadd
shrl
lea
int
icebp
and
xchg
adc
out
rcrl
enter
xchg
or
mov
jae
mov
mov
dec
sti
pushf
adc
loopne
adc
pusha
fcompl
cmc
in
pop
sub
mov
jnp
cmpsl
mov
dec
js
and
mov
or
sub
xchg
pop
pop
push
push
mov
cmpsl
dec
iret
mov
add
sbb
xlat
dec
inc
scas
ja
pop
mov
sbb
push
out
add
fstps
cmp
movsl
out
shll
push
hlt
repz
scas
mov
inc
imull
lret
insl
sub
and
sbbl
incb
dec
inc
popf
in
mov
aam
or
test
or
lock
enter
test
mov
cmp
shl
bound
movsl
cmpsl
sub
pop
or
mov
push
cmpsb
mull
pop
or
cs
or
sub
fisttps
mov
out
adc
xor
fdivrl
incl
mov
adc
push
mov
mov
adc
out
adc
xchg
movsb
mov
cmp
and
mov
cmpsl
mov
stos
pop
or
notb
jnp
in
inc
push
insl
push
test
ljmp
mov
xchg
repnz
loope
data16
imul
arpl
scas
cmp
sarl
mov
jge
push
mov
rcrb
pushf
imul
iret
add
mov
sbb
arpl
mov
mov
jo
out
sub
loope
lods
sub
or
dec
inc
mov
or
icebp
sti
jno
aaa
cmp
pop
pop
mov
mov
sahf
scas
xor
movsb
mov
push
adc
in
jl
xchg
xchg
cmpl
adc
enter
and
xor
lea
cltd
push
dec
js
inc
inc
xor
pop
test
scas
mov
out
sbb
sbb
test
sub
lds
fnsave
and
mov
sub
and
adc
ljmp
mov
xor
or
cmpsb
fmuls
jo
or
and
cmp
xor
inc
loop
cmp
push
mov
mov
test
cld
fdivr
fidivrl
or
stos
les
adc
pusha
mov
xor
mov
sub
lret
and
dec
cmp
call
jbe
test
xchg
and
mov
push
test
add
int3
add
xchg
and
adc
movsl
dec
inc
movsb
mov
popf
xchg
push
psraw
mov
out
inc
push
shrl
inc
adc
fstpl
mov
dec
lea
loop
cmp
stos
ret
mov
into
jo
stc
pop
int
jno
sub
paddb
xchg
ror
dec
xor
xchg
ljmp
mov
mov
xchg
insb
in
mull
insl
stos
ficomps
icebp
outsl
xchg
mov
clc
sub
call
jmp
fidivrl
scas
test
inc
stos
leave
sub
scas
lea
lret
call
fsts
xlat
mov
mov
pop
xchg
cmp
ja
ja
xchg
mov
in
lahf
dec
dec
pop
imul
inc
xchg
popa
cmc
std
out
push
movsl
xchg
mov
sarl
sbb
sub
cltd
sbb
sahf
rcrl
ret
mov
mov
sbb
popf
je
mov
ret
fcoml
out
dec
push
and
loope
ja
xchg
sub
push
lret
mov
ret
outsb
out
sub
dec
roll
std
cmp
daa
shrl
and
xor
and
cwtl
mov
loope
or
pop
xor
jo
push
sub
scas
adc
and
addr16
into
aad
mov
jnp
xor
sbb
in
and
push
icebp
jge
adc
stos
push
aas
fwait
push
push
push
sbb
aas
imul
adc
mov
cmp
or
cmp
dec
inc
pop
dec
leave
mov
jne
popf
in
or
or
movsb
outsl
adcb
cmpsb
dec
sahf
or
cmp
add
ret
pop
mov
les
mov
gs
leave
insb
inc
xor
cwtl
push
pop
xor
hlt
push
pop
mov
dec
loop
xor
test
push
xchg
adc
hlt
sub
jbe
push
cmp
adc
fstps
lahf
aad
clc
jge
aad
iret
sbb
fisubl
outsb
mov
scas
leave
pop
in
jecxz
loopne
inc
nop
lret
out
shlb
inc
mov
mov
sbb
xchg
pop
pop
nop
dec
cmc
popa
push
clc
jmp
sub
outsl
cmpsb
pop
jg
aam
mov
push
cmp
jmp
cmp
lods
dec
les
mov
ret
lods
adc
push
shlb
xchg
xor
hlt
ret
int3
xor
movsl
mov
sbb
mov
sub
add
add
xchg
mov
xchg
daa
nop
jns
lds
xor
out
adc
jp
xlat
mov
aaa
push
jne
ss
fdivs
xchg
push
adc
inc
popa
mov
sub
inc
push
mov
dec
ret
clc
jmp
pop
push
aas
xchg
inc
cli
jno
add
add
adc
inc
xor
adc
inc
adc
mov
lds
and
inc
ftst
mov
cs
lods
mov
pushf
in
cmp
rcrb
xor
test
pop
push
cmpsl
fldenv
jo
scas
or
pop
icebp
loope
pop
pop
and
cmp
adc
or
ret
xor
xchg
sti
push
sahf
in
idivb
push
les
fsubrp
shlb
loop
cwtl
movsl
sbb
jo
pushfw
xchg
mov
cmp
dec
sbb
or
and
pop
subl
js
dec
out
fnstcw
fistl
mov
pop
xchg
dec
lods
jl
pop
push
dec
data16
out
ret
push
lds
fisubrs
pop
cwtl
and
cmc
aas
pushf
xor
cmp
cmp
hlt
test
mov
xchg
mov
jecxz
and
into
jnp
jo
jnp
outsb
mov
cwtl
lods
push
leave
bound
imul
imul
jge
loopne
out
pusha
add
sub
loope
cmp
mov
mov
and
mov
or
push
jo
mov
scas
push
or
in
sub
and
dec
movsb
dec
xorb
cmpl
or
stc
mov
sub
ss
stos
repnz
pusha
setns
cs
aad
sahf
dec
fmuls
mov
pop
cwtl
test
out
lods
lods
mov
outsb
insl
and
out
icebp
pop
repnz
roll
add
mov
jmp
inc
aaa
mov
push
cmc
sub
jne
or
repnz
sbb
mov
mov
push
aam
test
pop
pop
xchg
mov
add
loop
mov
out
aad
jae
jg
adc
push
or
mov
add
push
popa
aad
pop
add
sub
mov
lds
sub
push
aad
decb
xor
cmpsb
in
repnz
roll
rclb
dec
mov
in
cli
cs
sbb
int3
xchg
jae
daa
sub
loopne
insl
adc
fistps
sub
test
xor
mov
pushf
cmp
and
lods
adc
idivl
jle
sahf
in
dec
xor
aaa
js
jmp
cli
int
int
pop
push
int3
adc
xchg
idivb
rcrl
ja
or
decb
mov
insl
ficoml
mov
scas
cltd
ds
adc
mov
std
dec
jge
mov
lock
loop
or
mov
xor
xor
test
jae
movsl
cld
inc
insb
or
scas
adc
inc
dec
cmp
cmpsb
dec
or
sub
movsb
je
inc
in
add
sub
cmp
xchg
daa
pop
mov
nop
sbb
sub
sub
in
adc
in
ret
mov
fimull
into
pop
sbb
nop
je
adc
and
test
sub
not
dec
xor
std
jnp
jmp
push
push
dec
dec
xor
movups
mov
aaa
jle
bound
test
sar
jae
dec
repz
movsb
push
mov
pop
pusha
adc
stc
xchg
bound
pop
xchg
sub
add
sub
je
enter
push
or
mov
aam
and
hlt
jns
les
in
scas
mov
jp
push
inc
popa
and
fsubl
in
jmp
push
inc
sub
popf
iret
xchg
adc
xorl
pop
nop/reserved
jecxz
mov
push
in
sbb
push
jae
dec
fistps
and
mov
in
add
xor
sbb
sarb
das
mov
jge
test
loopne
nop
push
pop
pop
and
cmp
movb
lods
fdiv
and
rcll
dec
jb
mov
pop
ja
mov
xorb
dec
cmpb
jb
cld
gs
dec
stc
icebp
pop
mov
icebp
outsb
sbb
loope
push
fwait
push
mov
xchg
cmpsb
inc
scas
push
nop
add
xchg
xchg
imul
add
ja
cmp
sbb
or
inc
in
adc
pop
jle
sub
outsb
pop
mov
sub
rorb
inc
push
sti
ljmp
or
push
add
sub
mul
sub
mov
jns
adc
testb
cwtl
ret
mov
jle
sbb
fwait
xchg
cmp
scas
sbb
aas
insb
mov
jbe
cmp
aaa
aad
in
jle
add
jmp
adc
inc
into
mov
add
pop
mov
lods
mov
test
mov
cmp
pushl
pop
sbb
mov
mov
sbb
sub
ja
mov
popf
mov
jne
ret
mov
inc
and
loope
xor
jo
and
xchg
jl
fmuls
fmul
push
pop
jecxz
popa
adc
scas
push
mov
loopne
xorl
jns
notb
inc
cwtl
sub
xor
sarl
out
data16
or
into
mov
stos
pop
mov
adc
jno
push
imul
mov
cwtl
pop
std
cmp
xchg
jns
push
stos
test
inc
dec
mov
pop
mov
and
in
adc
jl
inc
js
cmc
mov
jb
mov
mov
sbb
jle
mov
jno
xchg
jno
imul
fidivrs
jae
sbb
mov
out
sbb
cmp
sarl
repz
je
dec
mov
in
cmpsl
and
sbb
pop
inc
inc
mov
gs
lcall
and
mov
jge
aam
in
add
fnsave
adc
daa
test
bound
and
xchg
lahf
loop
mov
sbb
push
sti
les
add
call
and
ja
jp
xor
xchg
out
nop
lods
addr16
cmpsl
je
add
jae
mov
loopne
sub
adc
inc
clc
cli
out
or
mov
in
jle
int
mov
and
in
xchg
stos
lahf
jb
mov
xchg
add
ljmp
ja
pop
push
jmp
cmpl
or
xor
sub
adc
dec
fdiv
mov
daa
mov
lods
mov
adc
cmp
shrd
mov
lret
es
and
and
mov
repz
stos
and
sub
cs
xchg
and
je
mulb
adc
xor
inc
dec
outsb
es
push
arpl
out
fildl
mov
mov
mov
fistl
dec
pop
add
mov
leave
sti
cwtl
xor
jp
mov
xchg
das
hlt
lods
cmc
and
adc
jl
or
push
ss
arpl
push
push
int3
ljmp
lret
jmp
enter
dec
jg
fwait
test
or
adc
cld
data16
mov
shll
out
aas
clc
xor
sbb
in
cli
shll
hlt
or
push
stos
push
out
lret
push
aam
mov
test
shll
push
test
movl
repz
jo
stos
push
sub
cmp
lret
mov
into
andb
cwtl
add
fwait
cli
dec
jno
aaa
es
loop
xor
xchg
cmpsl
pop
testl
lcall
cmp
pop
insl
inc
sbb
pop
jnp
lods
fs
add
dec
or
inc
mov
inc
inc
xor
cmp
xor
xor
mov
pop
pop
popf
testb
sub
scas
sub
cmp
xchg
ficompl
cli
xor
iret
and
pop
adc
shll
cltd
push
int3
pop
pop
pop
adc
pop
enter
js
in
int3
cmp
ljmp
xor
pop
cwtl
pop
mov
pop
imul
and
sbb
mov
movsl
enter
adc
pop
push
mov
orl
shl
nop
jne
push
fistl
push
insl
mov
jmp
fisubl
lock
pop
pop
dec
fisubrs
in
ja
mov
pop
pmaxsw
add
mov
stos
imul
cld
scas
into
xor
stos
and
stc
repnz
hlt
sahf
mov
cmp
cld
loopne
mov
aam
xchg
adcl
push
pop
inc
enter
scas
stos
mov
push
push
pop
xchg
xor
scas
mov
fidivs
xor
ret
pop
push
imul
out
xchg
pop
vmread
bound
and
pop
test
xlat
xor
cmpsb
aam
or
dec
nop
out
mull
inc
lcall
and
push
mov
fsubrs
jbe
loop
test
jae
lds
out
cmp
data16
and
lret
lret
adc
fidivrl
lret
subb
and
paddsb
pop
fsubs
loop
icebp
inc
adc
cmc
add
xchg
ret
mov
push
test
icebp
mov
xchg
lret
jns
ret
ljmp
jnp
popl
dec
mov
mov
ja
or
aam
jb
mov
outsb
fldt
lret
cwtl
cld
fcmovnb
pop
mov
jb
jl
xor
jnp
push
mov
cmp
sti
sub
popf
inc
popf
xchg
add
int3
jp
cld
sarl
out
orb
xchg
ret
jmp
insb
mov
ret
frstor
cli
call
mov
fsubl
outsl
ss
mov
data16
test
mov
inc
sub
lcall
inc
mov
aam
aad
lret
nop
lcall
and
outsl
cmp
pop
mov
sbb
jb
cs
testl
dec
ss
call
xchg
sub
lahf
lcall
pop
pop
movl
push
mov
shll
and
les
dec
in
into
or
pop
push
testb
lahf
mov
add
jmp
std
and
add
jne
cmp
push
out
inc
cmp
mov
stos
icebp
iret
lods
pop
adc
ret
lea
incb
cmc
lods
mov
loope
fs
push
sarb
rcrb
test
sbb
mov
aaa
cmp
mov
lods
outsb
sbb
xor
mov
cmp
gs
xor
jae
mov
loope
pop
hlt
movsb
or
sar
testb
adc
and
sti
dec
jg
movsl
mov
pop
xor
mov
add
jp
pop
mov
push
mov
aam
repnz
pop
cmp
stos
popf
cmp
cli
jnp
mov
pop
mov
dec
jge
dec
pop
cmp
jo
fldl
divb
subb
mov
das
dec
xor
insb
movsl
scas
mov
bound
stos
repz
std
cmp
cmpsl
mov
adc
inc
cltd
mov
repz
shl
push
stos
push
adc
call
pop
fcoms
sbb
mov
int
sbb
inc
into
jno
mov
jnp
push
lea
repnz
push
lods
cmp
push
sbb
shlb
cmp
pop
ja
or
sbb
imul
cwtl
or
addr16
push
mov
jp
jp
test
lds
cmp
dec
rcrl
pop
shl
jl
lcall
or
pop
jb
mov
loope
insb
or
sub
fnsave
cmp
or
sbb
inc
out
lods
xchg
and
dec
xlat
daa
dec
adc
in
cld
insl
push
dec
in
xor
lret
push
pop
mov
pusha
pop
stc
fimuls
movsb
inc
hlt
pop
mov
gs
andb
or
dec
cwtl
cld
xor
movsl
mov
dec
cwtl
push
or
adc
inc
mov
mov
add
xor
mov
mov
mov
xchg
mov
adc
fcompl
pop
loopne
and
lds
aas
add
and
sub
jl
into
lods
and
inc
aam
xchg
lcall
dec
sti
pop
pop
xchg
push
sub
jb
outsb
decl
scas
sbb
push
es
aaa
dec
pop
test
cmp
imul
out
pop
jl
sbb
and
ljmp
push
cmpsb
fwait
pop
aad
outsb
sbb
pushf
leave
dec
cmpsl
dec
or
sti
insl
inc
in
mov
sub
lea
int3
xchg
mov
sbb
imul
push
cmpsl
jae
and
es
mov
outsl
xchg
sbb
ljmp
or
mov
pop
loope
push
jo
inc
stc
sub
insl
mov
sar
jo
mov
ljmp
push
call
test
push
push
shr
sbb
stos
pop
je
push
lods
int
out
imul
adc
aas
xor
cmpsb
sbb
sub
jno
aaa
sbb
xor
jbe
mov
fistl
daa
cltd
mov
scas
loop
je
add
mov
sbb
push
cltd
sti
ja
data16
mov
xchg
jecxz
outsl
adc
scas
out
stos
ljmp
mov
cwtl
push
out
icebp
sti
inc
xor
push
les
lds
dec
or
sbb
fisttpll
repz
and
jne
pop
lds
clc
inc
lock
pop
xchg
in
jge
ret
insl
xor
fs
imull
dec
adc
mov
or
mov
xchg
pop
ret
xchg
jmp
cmpsb
inc
adc
sahf
rclb
mov
movsb
add
inc
push
cmp
sbb
iret
imul
imull
cmp
jbe
add
dec
push
in
xor
adc
rol
inc
rorl
jae
lods
pop
jecxz
rcrb
leave
mov
pusha
cwtl
add
stos
xchg
ja
cmpsl
xor
sbb
bound
cmpsl
sarb
pusha
test
push
scas
mov
out
inc
mov
sub
aaa
ljmp
out
popa
mov
incl
xchg
xchg
and
dec
xor
xor
lea
cmp
stc
scas
jno
les
dec
repz
add
cmp
mov
cli
test
sub
sub
mov
lcall
sbb
lds
xchg
mov
adcb
jmp
push
addr16
dec
pop
test
mov
daa
data16
call
lea
xor
mov
mov
sbb
out
imul
mov
mov
xchg
fbld
mov
hlt
sbb
mov
jbe
cmp
adc
mov
repnz
rcll
gs
sbbl
add
notb
js
xor
push
or
stc
pop
add
cmpl
stc
lahf
sbb
pop
push
stos
xchg
std
push
sub
xchg
xor
mov
pop
mov
ficompl
add
mov
sbb
test
cli
cwtl
sbb
push
push
add
mov
mov
lahf
sub
enter
popf
push
pop
outsb
and
scas
cmp
adc
mov
xor
mov
mov
xchg
mov
std
pop
mov
aad
arpl
test
fcmovu
ret
sbb
and
xor
cmp
out
jmp
inc
ljmp
sbb
sub
addr16
clc
jb
syscall
pop
lock
cmp
push
pop
push
repnz
lods
push
cmc
test
push
mov
mov
sbb
daa
pop
add
fsubs
arpl
cwtl
push
jecxz,pt
adc
mov
cmp
push
test
rcl
jg
jnp
js
mov
int3
mov
xchg
mov
repnz
jo
jns
arpl
jno
cmp
jns
adc
cmc
or
jae
jnp
loop
adc
out
out
xchg
repz
sub
addr16
stc
outsb
xor
cli
rcll
mov
add
jnp
inc
fcmovbe
cmp
xor
and
inc
pushf
pusha
dec
dec
addr16
mov
mov
ss
cmp
ljmp
enter
mov
sub
mov
mov
gs
push
les
jmp
ds
out
pop
add
sti
dec
pop
out
mov
incl
or
mov
or
mov
cmp
mov
sbb
loop
ss
or
inc
aas
jg
pop
in
je
xchg
push
lcall
fstl
dec
mov
xchg
out
stos
and
subb
cmp
pop
stos
push
ficomps
fsubs
ljmp
cli
inc
sub
push
sarb
mov
cltd
push
rcr
fbstp
jne
mov
mov
out
and
cmp
mov
stos
out
pop
mov
jecxz
insb
inc
push
cmpsb
push
xchg
int
inc
or
fisttpl
xchg
sti
repz
aad
pop
cltd
stc
jae
call
fiaddl
jae
sub
jne
xchg
or
cmp
lret
mov
mov
mov
in
cmp
call
jmp
adc
aad
lcall
cmc
lcall
dec
push
imul
stos
push
pop
add
xor
ds
cwtl
repz
jae
sbb
addr16
sbb
xchg
xchg
out
mull
hlt
push
cmp
in
daa
dec
cmp
push
lret
aam
add
adc
outsw
mov
and
inc
or
lret
stos
cmp
repnz
push
aaa
pop
mov
and
sub
fnstcw
andl
rcpps
lea
inc
sub
fsubs
fwait
int
mov
push
pop
inc
mov
imul
loopw
enter
pop
or
fiadds
dec
popf
pop
repnz
neg
lahf
ret
rcrl
es
mov
sbb
insb
rcr
sbb
out
jno
push
daa
inc
cmpsb
in
xchg
mov
and
repnz
adc
cmp
int3
in
jbe
or
adc
inc
insl
xchg
push
xlat
in
xchg
pop
leave
push
out
cld
lret
int
sub
add
lahf
push
popf
xor
inc
scas
push
dec
push
and
xor
sbb
and
mov
xor
inc
aam
outsb
pop
std
scas
pop
fst
dec
sbb
push
aam
jb
sub
mov
fucomi
xor
mov
adc
add
jg
mov
arpl
ret
cmp
dec
in
cmc
andb
add
popa
aaa
jge
mov
push
sbb
mov
rorb
pop
outsl
dec
in
xorl
inc
xor
or
push
push
leave
ror
sub
add
sub
sub
sub
out
cmp
jno
push
xor
mov
mov
fucom
daa
and
push
insb
ja
clc
mov
rcrb
enter
xchg
sbb
imul
movsl
outsl
sbb
lret
or
or
push
sub
dec
mov
fstpt
mov
fistpll
mov
xchg
or
and
mov
push
mov
jle
test
adc
push
clc
pop
sbb
sub
dec
or
xchg
lock
std
xchg
pop
push
cmp
je
test
adc
jmp
inc
fstpt
fldl
pop
adc
idivl
jmp
fildl
and
popf
aas
in
nop
js
in
jmp
and
lahf
loop
cmp
sbb
sub
cmp
ret
cmp
pop
push
jmp
outsl
repnz
aaa
sbb
sahf
scas
sbb
rcr
movsl
ficompl
ds
jno
mov
in
inc
insl
mov
mov
jle
push
push
jge
jp
pusha
pusha
jecxz
add
and
addl
adc
sbb
cmpsb
adc
push
mov
xchg
add
pop
sbb
xchg
clc
add
imul
add
lahf
push
aad
cld
enter
xchg
daa
pop
push
jae
cmp
dec
pop
mov
dec
out
and
xchg
mov
dec
movsl
or
xor
push
cmpsb
ret
push
adc
cmp
test
cmp
call
sahf
aas
rcrb
insb
fdivs
fnsave
push
cwtl
sahf
rcrb
movsb
imul
xchg
xchg
ret
push
jb
jo
sbb
jle
dec
xchg
fwait
lret
jae
sti
pop
add
rcrl
movsl
das
call
mov
inc
ror
call
push
xchg
xlat
xlat
inc
cmpsl
cwtl
test
shlb
pop
mov
add
mov
je
push
ds
fs
out
fucomp
pop
loop
sti
dec
fwait
inc
sub
mov
xchg
mov
sbb
add
loope
mov
cmpsb
or
shll
scas
lock
js
repnz
push
adc
or
inc
sub
addr16
fdiv
std
dec
jp
cmc
in
inc
stos
dec
jno
sub
push
pop
leave
sub
sbbl
pop
jecxz
jne
dec
lods
pop
dec
rcll
add
cmc
out
mov
add
out
imul
loope
jno
pop
fsts
daa
mov
or
mov
lret
movsl
inc
sub
in
aas
js
xchg
mov
mov
pop
inc
inc
mov
mov
sub
stc
or
pushf
fistl
dec
outsb
mov
xor
popf
ja
je
repz
cli
mov
test
orb
adc
aam
loop
test
mov
inc
or
fisttps
mov
jnp
mov
push
xchg
push
popf
stos
iret
jmp
sub
xchg
xlat
testb
cltd
arpl
fs
sbb
sbb
movsb
jns
test
xchg
xor
cmc
cmpsb
sub
flds
loop
cld
xchg
mov
ja
jb
push
pop
push
ret
mov
and
je
mov
jge
in
lret
mov
test
xchg
aas
xchg
das
pop
add
ss
out
jne
push
iret
push
push
test
cmp
pop
int3
pop
iret
daa
je
std
pusha
sbb
push
scas
adc
test
lock
adc
sub
add
push
dec
call
fldt
mov
aad
push
xor
sub
test
inc
mov
mov
xchg
or
add
jbe
ret
out
pop
pop
jg
mov
push
or
scas
xor
or
sub
add
xchg
push
xchg
ja
lea
dec
and
cmp
in
mov
dec
rorl
mov
les
adc
lahf
out
cmp
fwait
scas
icebp
insb
rcrb
pop
inc
clc
aam
mov
adc
cmp
add
stos
jp
dec
inc
loopne
sbb
adc
xchg
aaa
popf
mov
arpl
notb
pop
cld
dec
adc
enter
lock
jae
scas
sub
jbe
es
pop
cmc
es
or
and
add
mov
pop
in
bsr
add
and
leave
clc
loop
in
cmp
int
xchg
mov
shl
lea
dec
cwtl
fsubrl
ficompl
ss
into
mov
repnz
pop
dec
addr16
push
int3
sub
dec
ret
sbb
movsb
add
pop
sahf
mov
enter
hlt
subb
jnp
inc
mov
xlat
rcr
inc
adc
add
add
jb
xlat
sarb
jnp
test
es
pop
fbstp
push
cltd
movsb
mov
flds
sub
lcall
mov
mov
push
dec
aas
sub
adc
outsb
cmp
pop
push
lods
call
inc
clc
xor
testb
mov
inc
insb
enter
repz
adc
aam
addl
mov
rcrl
fstpt
dec
dec
out
push
fcompl
push
into
push
sbb
dec
inc
add
push
lock
push
xchg
loop
shlb
push
or
and
sarl
pop
aas
cli
cmp
add
jp
sub
in
lret
insb
dec
mov
xor
jae
push
shll
xchg
in
ja
push
push
push
test
test
inc
inc
movsl
xchg
dec
jp
shlb
js
jo
loop
add
mov
repnz
sub
jl
call
mov
out
adc
ja
pop
push
pop
adc
fmull
jecxz
fcompl
in
adc
mov
sbb
lea
xor
mov
jle
imul
mov
mov
cmp
mov
mov
sti
enter
imul
jbe
loopne
pushf
lods
js
dec
xchg
inc
lahf
clc
sub
xchg
sub
lods
aaa
add
xchg
cmc
sbb
xchg
out
inc
mov
mov
mov
push
pop
popa
xlat
cmp
sbbl
ret
scas
mov
insb
lock
jne
sub
out
cltd
mov
fwait
cmp
push
fdivrs
mov
dec
jne
cmc
lahf
jmp
fisttpll
lock
fwait
enter
jl
sub
std
push
test
pop
jle
lods
cwtl
rclb
aad
fcmovb
dec
mov
sub
hlt
or
cmp
sbb
adc
scas
jg
fdivrl
dec
or
sbb
icebp
xchg
in
lahf
jl
lods
test
sahf
mov
jns
inc
scas
dec
jecxz
sub
adc
call
jns
push
or
xchg
xadd
or
out
dec
mov
into
push
mov
inc
filds
pop
push
sahf
fnstenv
push
cmpsb
popa
sahf
or
xchg
rclb
inc
jmp
insl
or
aaa
or
ljmp
jl
arpl
les
cs
sbb
sbb
cmpsb
loop
push
ror
add
loop
stc
psubsb
pop
fisubl
sarl
aaa
mov
jo
push
stos
fdivrs
dec
repz
fisttpll
pop
mov
dec
into
cmp
inc
shll
daa
imul
stc
pusha
data16
shll
je
adc
jae
dec
loope
movsb
or
shrl
jnp
leave
arpl
sub
sbb
sbb
cmp
mov
jl
add
jp
dec
fidivrs
insb
mov
cmp
push
jecxz,pn
cmp
call
ljmp
dec
sbb
jg
test
rorb
jg
aaa
push
aad
or
out
inc
sbb
adc
fsub
rorl
cmp
cmp
mov
inc
nop
and
lahf
scas
dec
outsb
mov
pop
outsb
cmc
jo
add
dec
push
lret
inc
inc
pop
or
fistpl
pop
mov
adc
adc
sbb
imul
push
add
mov
jne
push
or
inc
loope
sti
outsb
int
mov
inc
inc
push
mov
rol
ja
lahf
push
mov
inc
sarb
jae
sub
push
cmp
fs
xor
and
pusha
ret
fstl
mov
mov
fucomip
inc
mov
mov
jae
cwtl
jae,pn
xchg
mov
add
cmp
imul
in
pop
sub
add
dec
out
jecxz
mov
outsb
sbb
addb
mov
fsubrl
add
out
lods
or
cwtl
cmp
mov
pop
mov
clc
push
clc
dec
xlat
and
les
sub
outsb
xchg
xchg
es
add
sbb
leave
test
inc
sahf
imul
lret
or
ss
fmull
sbb
mov
mov
xchg
sbb
popa
inc
sbb
lahf
repnz
aas
mov
movsb
add
decb
adc
adc
arpl
lret
add
or
sub
mov
arpl
mov
fldenv
sahf
xor
xlat
and
sbb
in
sub
push
jecxz
jle
pop
mov
scas
push
or
mov
stos
pop
dec
lcall
mov
aaa
aam
push
int
mov
movsl
push
lods
jl
pop
inc
pop
inc
and
sub
outsl
add
mov
ja
js
cwtl
aam
sbb
xor
enter
jp
mov
cmp
cmp
std
fsubs
add
jno
add
repnz
mov
cmp
xor
mov
pushf
add
lea
cs
scas
xor
adc
cmp
and
jns
push
mov
sbb
stos
sbb
test
add
xchg
jns
jg
stos
scas
ret
jle
es
into
inc
ds
cwtl
dec
inc
sub
pop
mov
iret
cmp
bound
int3
leave
aaa
mov
cmpsl
sti
dec
outsb
imull
out
inc
pop
sahf
dec
enter
adc
cmp
test
add
jo
cmpsb
adc
jae
add
cltd
into
add
lds
or
xor
inc
dec
xor
movsl
mov
push
call
sbb
xor
inc
or
mov
xchg
jbe
pushl
jmp
mov
ret
inc
mov
pusha
data16
loopne
in
dec
cmp
ficoml
push
std
xchg
shlb
sub
shlb
ret
inc
inc
lahf
jmp
xor
mov
loopne
inc
push
pop
adc
ja
into
pop
testb
out
leave
scas
xchg
lret
pop
inc
dec
fildl
lock
loopne
sbb
popa
inc
in
pop
aaa
enter
xchg
cmp
arpl
ror
test
fidivrl
mov
ljmp
jae
xchg
arpl
loop
push
ds
dec
leave
push
and
add
mov
jl
sub
mov
roll
push
dec
stc
push
mov
ds
stos
jns
scas
dec
jp
xchg
arpl
scas
jo
mov
sbb
mov
and
jbe
dec
jno
movsb
cli
and
stc
je
inc
loop
sub
stc
sub
js
outsb
scas
cvttps2pi
je
inc
add
jb
sub
push
shrb
pop
test
add
push
or
push
jmp
push
mov
push
add
in
jp
sub
cmpsl
fldcw
arpl
push
test
push
dec
mov
addr16
mov
pop
jae
lahf
sub
outsl
jne
popa
stos
test
faddl
sbb
xor
cltd
bound
pop
sbb
pop
sahf
popa
iret
call
cld
js
xchg
dec
iret
sbb
adc
fcoms
test
aaa
jp
rol
xor
repz
push
pop
jp
pop
divb
mov
shrb
xchg
jno
shrl
mov
imul
xlat
sub
push
inc
sub
jns
int3
ljmp
sub
test
xor
pop
dec
xor
push
stos
mov
mov
jle
lea
imul
mov
or
inc
and
mov
inc
and
and
notl
or
roll
jle
jns
pop
ljmp
imul
push
add
inc
rep
dec
jge
push
in
out
int3
mov
iret
sbb
in
pop
nop
dec
and
stos
and
inc
sbb
xor
scas
loop
adcb
inc
xchg
into
inc
xchg
inc
es
loope
mov
inc
out
into
insl
jmp
sub
in
lods
test
mov
loopne
adcl
adc
data16
push
xchg
je
rcrb
mov
dec
mov
rolb
popa
or
jns
jle
xchg
mov
out
inc
cmp
xchg
dec
dec
dec
and
in
xchg
sbb
xor
dec
pop
and
and
iret
repnz
jb
xlat
jno
add
mov
push
push
movsl
cmp
adcl
ja
inc
sub
pusha
psubusw
dec
dec
mov
cmp
jle
rolb
loope
jl
das
push
cmp
cli
pop
or
jmp
fnstenv
cli
jl
mov
cmp
and
cmp
cmp
xchg
adc
jne
mov
inc
mov
push
push
mov
xor
jo
add
enter
pop
lock
xorl
out
pop
shll
pop
pop
push
mov
dec
mov
aaa
sahf
lock
jno
pop
mov
testb
je
or
rorl
xor
out
and
pushf
inc
test
stos
mov
adc
dec
mov
xorl
lods
xchg
mov
push
lahf
or
int3
and
clc
fstpt
cmc
adc
pop
pushf
nop
jle
std
jns
popa
cli
loopne
dec
mov
aas
pusha
int
ljmp
adcb
insb
sbb
int
dec
cmp
lods
pop
mov
pop
insl
sub
cwtl
into
inc
inc
ja
loopne
lret
jno
push
adc
cmp
repnz
mov
loop
cs
pop
add
cmp
fisttpl
rcrl
mov
frstor
push
jge
or
enter
mov
in
ret
mov
mov
loopne
je
lea
xlat
mov
mov
inc
sbb
dec
repz
add
sbbl
fsubrp
ljmp
fnstenv
mov
xchg
shrl
adc
aaa
mov
popf
cmp
xchg
notl
push
push
ja
xchg
rorl
pushf
clc
inc
into
sbb
mov
push
xlat
xor
and
dec
out
rcll
xchg
mov
outsb
shll
inc
fimull
nop
sbb
or
mov
adc
fidivrl
in
mov
xor
and
pop
mov
sbb
ret
mov
cmp
cmpsl
mov
rdtsc
int
inc
mov
xor
in
sub
testl
sbb
fstl
sahf
push
js
bound
or
fisubrl
cmp
cwtl
aam
xor
shll
and
scas
fsubrs
or
into
movsl
inc
out
in
cld
xchg
nop
dec
jno
adc
fucomp
inc
or
sbb
add
jmp
and
imul
cmpsl
mov
mov
adc
pushl
push
fmulp
sub
test
pop
ret
pop
cmp
inc
mov
or
mov
fcompl
push
lcall
xchg
imul
pop
add
ljmp
push
sub
ljmp
stos
icebp
shll
push
cli
and
inc
in
repnz
xchg
and
xor
mov
mov
mov
cmp
in
aaa
mov
xor
or
or
scas
xor
and
mov
inc
mov
jge
in
imulb
pop
xlat
dec
pushf
and
xor
sub
lods
lret
dec
or
fwait
lods
lret
pusha
inc
mov
xor
sub
mov
xchg
cmpsb
sahf
and
xlat
mov
jne
loop
push
cmp
aaa
fidivs
bound
sbb
cwtl
ds
ret
lahf
sub
jle
push
mov
repnz
jbe
outsl
int3
cmp
add
sbbb
jo
stos
test
mov
xor
sbb
mov
or
jmp
add
or
jo
movsb
pop
dec
das
in
je
rcl
push
sbb
ret
clc
pop
dec
out
out
call
add
or
lea
jo
cmovbe
daa
mul
js
cmp
push
cmp
insl
fs
inc
xrelease
ret
push
aad
jmp
and
sbb
pop
fcompl
cltd
inc
cmpsl
subl
lcall
dec
out
shrl
and
movsl
jne
out
filds
movsl
pop
dec
pop
fnsave
jnp
scas
xchg
fnstsw
cmc
dec
dec
or
icebp
insb
mov
push
lea
lock
sbb
add
mov
dec
push
sub
add
push
mov
cmp
xchg
pop
xor
sbb
test
mov
or
popf
test
rcll
pop
int3
pop
xchg
xor
mov
sbb
les
mov
sbb
xchg
pushf
dec
mov
dec
ss
sbb
orb
lds
dec
out
pop
jno
fstpl
xlat
inc
cmp
pop
sub
lcall
jmp
into
outsb
fcoms
jne
add
ljmp
push
je
ret
sbb
lock
not
xchg
lret
adc
adc
inc
lods
and
sub
jp
mov
inc
addb
adc
popw
into
push
fwait
testl
gs
pop
xchg
lds
je
jecxz
ret
popa
jne
shlb
dec
lods
push
pushl
push
scas
add
and
push
lods
dec
mov
or
mov
sbb
adc
push
shll
hlt
push
fadd
sub
fdivp
in
and
jmp
repnz
cmp
xor
hlt
sub
and
popa
and
fs
hlt
and
dec
int
js
mov
aas
popf
xchg
fcompl
das
mov
xchg
pop
sub
or
rorb
pop
dec
or
outsb
mov
push
sub
bound
jns
scas
xchg
cmpsl
aas
insb
push
adc
pushf
cmc
and
mov
fmull
cmpsb
xor
enter
jecxz
inc
push
out
dec
push
mov
in
and
repnz
in
inc
and
pop
mov
fisubrs
icebp
das
jns
jae
and
mov
test
adc
push
jno
test
sub
repnz
xchg
dec
or
mov
fsubrs
mov
sbb
cmp
stc
or
mov
dec
adc
fmuls
jnp
in
push
pop
cmp
jne
add
mov
mov
js
mov
xor
hlt
pushf
xorl
cltd
and
aaa
and
lret
push
mov
cmp
push
sarb
stos
loopne,pn
cli
sti
imul
out
pop
mov
imul
dec
mov
icebp
jbe
cmc
sbb
test
lret
dec
push
loop
or
cld
lret
dec
or
push
call
xchg
pop
ss
lcall
xor
imul
pop
loop
cmp
testb
dec
push
aaa
push
adc
dec
dec
xor
cld
xor
clc
jb
rcr
mov
dec
pop
sbbb
je
decb
fsubl
lahf
fldl2t
xor
dec
jp
sahf
lcall
insl
mov
je
ljmp
aaa
out
mov
mov
nop
cli
fisttpl
shrb
rorb
and
push
outsl
repnz
dec
xchg
scas
out
sar
scas
sbb
fstpt
aas
xor
dec
xorl
sbb
mov
loope
mov
push
mov
dec
data16
ficoml
mov
mov
and
mov
mov
pop
and
xor
loopne
lret
loopne
imulb
fldt
inc
xor
adc
push
mov
test
push
cltd
push
xchg
int3
mov
sbb
out
rolb
add
fsubrs
fwait
in
pop
push
and
pop
leave
out
hlt
push
add
out
in
dec
and
stc
jb
cld
sub
out
and
push
cmp
insb
jp
jbe
jecxz
stos
sbb
jne
adc
ret
jl
xchg
cwtl
and
adc
pop
adc
mov
push
lret
sub
fcos
mov
popf
pop
imul
xchg
std
adc
das
inc
stc
sbb
and
fiadds
lahf
insb
js
outsb
inc
or
insb
pop
push
xchg
insb
inc
stc
out
mov
les
push
bound
add
gs
lahf
jp
outsb
mov
xchg
push
xorb
fwait
daa
shr
cmc
stos
imul
mov
pop
pop
imul
xor
cmc
cltd
inc
xchg
out
js
sub
data16
and
outsb
dec
and
dec
sbb
inc
bound
push
fucomip
mov
popf
inc
adc
popf
rorb
subl
arpl
adc
jle
pop
imul
pop
xor
push
nop
xchg
notb
es
add
mov
inc
into
js
sbb
pop
dec
aaa
push
pop
dec
xchg
xor
inc
jns
incb
stos
jo
dec
add
adc
mov
in
mov
test
lahf
pop
jns
pop
rcrb
xchg
sub
mov
and
dec
daa
mov
cld
mov
push
pop
jne
std
outsl
dec
out
mov
test
inc
jp
jo
std
sub
jg
or
aas
in
scas
addr16
cmp
inc
push
mov
fcomps
xchg
xchg
fiaddl
rorl
adc
push
cmp
je
pop
jb
pop
push
fisubrs
jno
push
out
lds
push
popa
sbb
icebp
mov
cmp
mov
sub
sarl
dec
sbb
sub
push
shrb
mov
imul
stos
cltd
push
sbb
rcll
stos
and
gs
scas
jge
or
enter
jecxz
out
mov
shl
aad
push
xor
inc
dec
cmc
cmpsl
pop
roll
pushf
gs
in
push
cmp
xchg
rclb
xor
add
mov
mov
sub
sub
cmp
inc
shr
adc
cmp
inc
xchg
pop
arpl
rcrb
cwtl
dec
lods
inc
inc
push
pop
scas
pusha
jg
bswap
or
mov
mov
ss
cmp
fcomps
push
and
sub
lahf
push
xchg
xchg
lock
sbb
mov
scas
sbb
sti
aam
sub
jle
xlat
ljmp
add
stos
jno
mov
mov
test
in
adc
js
loop
cmc
mov
dec
mov
xor
push
rolb
sbb
sbb
dec
sbb
and
test
push
roll
xor
into
test
jmp
shr
mov
outsl
out
sbb
mov
in
add
adc
arpl
stos
aad
dec
sub
cwtl
or
and
fadds
es
fnstcw
xchg
pop
push
mov
daa
sbb
adc
pop
fidivl
mov
dec
jns
dec
push
or
jb
popf
jnp
data16
in
stos
push
scas
add
add
cmp
adc
gs
dec
and
adc
add
in
dec
cmp
das
gs
xchg
dec
and
repnz
std
leave
roll
mov
ds
leave
int
pop
xor
addl
fwait
jns
jae
push
adcb
mov
cmp
mov
cmp
inc
add
js
scas
in
fcmovu
mov
dec
pop
mov
or
mov
imul
mov
icebp
mov
xor
aam
cmp
adc
lret
mov
ljmp
scas
dec
mov
jnp
fstp
cmp
je
cmp
mov
fdivr
cwtl
call
std
sbb
stc
jecxz
jmp
ljmp
push
popa
out
xor
pop
jbe
fwait
pop
ja
sbb
scas
and
and
lods
lds
sbb
adc
xor
sbb
loopne
aam
andl
in
jp
insb
sti
and
das
cld
ljmp
add
dec
movsb
pusha
xchg
mov
call
mov
das
xchg
jmp
rorb
lock
aad
sbb
mov
aaa
jnp
mov
jnp
roll
and
arpl
xor
push
popf
jnp
inc
in
dec
mov
mov
cli
push
sub
cmp
and
arpl
out
mov
mov
rcll
add
push
mov
push
scas
arpl
jp
int3
in
ret
arpl
mov
stc
and
pop
mov
adc
incl
add
jo
pop
lret
jae
inc
sti
outsb
cmp
outsb
dec
fcomip
jne
in
jp
mov
sbb
pop
mov
out
jle
jns
out
xor
inc
jnp
popl
jnp
dec
cmp
mov
ds
pop
daa
test
aas
jp
jp
bound
mov
scas
mov
jecxz
mov
divb
adc
out
sbb
lret
jae
sbb
mov
cmp
rorl
aas
imull
js
iret
lret
scas
and
mov
sub
adc
xchg
mov
xor
adc
push
push
fwait
jecxz
or
cs
adc
mov
push
fnstenv
pop
add
je
daa
pmullw
out
fcomi
pop
loope
mov
cs
jb
outsb
and
stos
sub
daa
int
pop
xor
aad
add
out
int
jecxz
lock
fcoms
push
roll
add
push
pop
push
push
mov
fmull
push
adc
test
clc
jmp
jns
out
pop
in
push
sbbl
fnstcw
or
fimull
sets
lret
adc
aas
ljmp
sti
adc
adc
cld
inc
jo
ds
notb
out
movsl
imul
daa
negb
std
mov
and
les
jae
jns
jg
pop
clc
and
rcrl
mov
dec
jno
jnp
inc
outsl
lock
enter
andb
mov
ds
subb
in
pop
loopne
mov
xchg
test
jg
lods
ret
xchg
cmpsb
fdivp
orl
mov
inc
loope
sahf
aad
push
adc
sarl
mov
popa
aaa
icebp
cmpsb
test
stos
xor
ficoms
decb
mov
enter
or
in
ret
mov
jmp
movsb
jb
push
dec
cltd
pop
cmpsb
popa
lea
pop
notb
scas
and
ja
xchg
dec
adc
sub
mov
mov
mov
inc
mov
mov
hlt
ljmp
pop
cs
fdivrs
out
shr
mov
mov
dec
mov
cli
mov
add
mov
mov
repnz
pop
jmp
inc
fidivl
cmpsb
dec
mov
sub
hlt
es
or
cs
leave
loopne
xor
jmp
out
inc
cmp
mov
cmp
inc
call
pop
imul
or
pusha
mov
int3
xchg
or
mov
pop
and
xor
and
cld
in
mov
push
push
inc
jg
dec
loop
stos
roll
in
jl
push
mov
cmp
pop
pushf
sbb
pop
dec
jb
fld
lret
inc
push
mov
cmpl
and
pop
cmp
icebp
cmpsb
sub
insb
daa
and
rcrb
and
fwait
adc
mov
std
pushf
ljmp
push
inc
add
xor
push
cmp
movsb
mov
mov
push
fsubrl
xor
jl
cmpsb
and
cld
fxch
lcall
pop
mov
cmpsl
jmp
push
ret
pop
mov
mov
in
ljmp
mov
mov
pop
add
in
cs
fwait
dec
cmpsl
xor
rol
xchg
jb
stc
mov
das
jmp
clc
out
loop
das
mov
mov
mov
lea
sub
aas
xchg
pusha
dec
enter
lret
out
xchg
xchg
fadds
and
movsl
or
or
and
in
jge
sub
int
pushf
push
adc
mov
xchg
inc
cmp
or
push
mov
add
inc
jge
and
xor
mov
push
test
jae
icebp
int
mov
jmp
mov
lret
leave
mov
pop
adc
icebp
fidivrs
mov
xorb
sub
sbb
pop
enter
mov
inc
jne
mov
addr16
sub
xchg
mov
pop
lea
xor
cltd
dec
push
adc
add
repnz
adc
popfw
jnp
dec
scas
xchg
cs
stos
jge
sbb
pop
sub
jp
sub
outsl
mov
sbb
mov
mov
leave
addr16
xchg
dec
jl
testl
fcomps
fdivrl
mov
testl
cld
pop
in
es
mov
pop
push
jnp
stc
ss
loope
or
ret
inc
fcmovu
ljmp
cltd
push
xor
jbe
push
cwtl
div
dec
jmp
insb
xchg
es
scas
inc
mov
lret
pushf
xlat
sub
dec
leave
add
lods
leave
scas
sub
xchg
out
cmc
pop
mov
inc
add
xorb
stos
xor
in
cld
insb
icebp
push
push
sbbb
cmp
dec
mov
jmp
xchg
push
cmp
push
in
in
sbb
addr16
lret
bound
push
lock
lret
jbe
sub
lretw
add
in
jecxz
cmp
inc
push
xor
fidivs
jbe
cmpsb
mov
cmp
pop
push
arpl
leave
push
stc
sbb
shll
add
or
xchg
xchg
idiv
pop
ret
push
adc
std
mov
cmp
xchg
daa
mov
adc
leave
repnz
jbe
les
jb
test
dec
sub
iret
dec
dec
jmp
jbe
sub
inc
pop
jmp
lods
jmp
scas
add
push
fnstsw
or
imul
dec
sbb
cltd
inc
ss
lods
pop
sbb
popa
xchg
push
pop
mov
je
xchg
psrld
mov
mov
lods
and
push
sbbl
push
jl
mov
jns
xlat
xchg
ljmp
mov
fadd
popf
stos
mov
or
ss
daa
in
push
imul
subb
push
roll
push
aad
pop
sbbl
iret
xor
pop
mov
scas
jmp
mov
inc
and
dec
cmpsb
jbe,pn
lret
lea
jb
sub
rcll
clc
testb
adc
lcall
lret
jb
bt
loopne
and
push
movsb
sbb
mov
jns
add
add
push
ss
ljmp
inc
pusha
fists
pushf
push
xor
push
outsb
inc
test
stos
mov
pop
xor
mov
stc
icebp
mov
inc
or
xchg
dec
rolb
cmpsl
fdivr
adc
jno
imul
mov
sbb
clc
mov
divb
fcomps
cmp
pusha
pop
and
push
push
pop
or
aaa
xor
out
cmp
lods
push
int
xchg
dec
repnz
mov
xchg
cli
xlat
add
fildl
dec
dec
imul
jle
inc
cmpsl
and
mov
xor
lods
inc
lock
cmp
loope
add
inc
lock
clc
jne
scas
scas
fisttpl
loopne
in
add
pop
dec
in
cmp
scas
push
sub
lret
fiadds
jg
add
sub
out
sub
mov
add
jne
push
fsubrl
sub
loop
inc
and
mov
call
sub
out
fsub
lret
inc
inc
lods
shrl
loop
bound
cmpsl
jecxz
jbe
xchg
dec
cld
repnz
lds
popf
das
stos
cli
push
rorb
mov
int3
lods
dec
jns
jnp
pop
bound
int
push
sbb
aad
xchg
push
into
iret
sub
cs
adc
divl
fstp
cmp
in
inc
fwait
mov
mov
inc
js
and
shrb
xor
inc
scas
movsb
pcmpgtd
mov
jg
call
arpl
sbb
cwtl
js
push
movsl
fdivrs
mov
sub
lods
in
lods
in
adc
push
stc
nop
in
ror
inc
ljmp
rorb
and
out
dec
fcomp
nop
out
loopne
or
mov
cmp
sub
push
sbb
xchg
les
mov
sub
lcall
mov
push
loopne
shufps
sbb
push
repnz
adc
cld
and
jb
pushf
sbb
mov
sbb
enter
adc
mov
inc
push
outsb
lds
call
in
test
pop
xor
fisttpll
xchg
mov
lock
cmc
pop
cmp
inc
jae
add
xor
mov
pusha
scas
push
push
out
pop
sarl
into
add
xchg
rolb
push
dec
jae
mov
hlt
insb
inc
dec
mov
cltd
sub
jmp
movsl
mov
in
outsb
inc
pop
pop
ret
or
dec
es
mov
test
jmp
testb
es
sbb
adc
aas
pop
mov
push
fs
xor
sub
sbb
dec
data16
jge
lods
and
push
xchg
mov
lret
mull
mov
adc
ret
repnz
add
stos
jg
jecxz
sub
idivb
fwait
mov
xchg
cmpsb
testb
or
sbb
fcmovnu
push
pop
dec
mov
jb
outsl
mov
or
pop
ret
or
push
out
sbb
dec
mov
or
testl
adc
xchg
mov
testb
fimull
adc
ror
mov
test
call
in
in
cmpsl
dec
sahf
xchg
inc
mov
sub
adc
or
mov
pop
mov
xor
jmp
sti
sbb
sbb
adc
mov
insl
lods
pop
ja
or
dec
pop
cmc
add
push
inc
pusha
mov
dec
xlat
sbb
out
ret
xlat
dec
repnz
inc
push
bound
sti
or
jns
ja
and
out
sbb
out
shll
adc
inc
shll
xchg
jae
insl
mov
mov
add
inc
fldz
sub
lds
lahf
insb
xlat
pop
mov
aas
fidivs
add
add
nop
dec
lahf
jno
xor
mov
jge
dec
push
cmpsb
jne
scas
out
lods
sarb
sbb
imul
ljmp
div
dec
add
mov
push
test
shlb
mov
xor
lds
push
sub
cmp
es
inc
mov
insl
test
sub
insl
xchg
mov
cmp
add
cltd
in
lds
jl
pop
scas
sbb
inc
mov
inc
mov
xchg
fistps
sub
jecxz
sahf
cwtl
scas
popf
xor
mov
sub
mov
xchg
test
sbb
jl
pop
or
pop
in
ret
and
enter
in
shlb
addl
sub
call
cmp
sub
sub
dec
aas
jae
das
std
cltd
addr16
dec
fcomp
xor
popf
dec
or
loopne
add
mov
inc
lods
jo
ret
cltd
lahf
inc
inc
mov
mov
mov
or
lock
lods
cmp
inc
dec
loope
jmp
add
mov
bound
push
and
add
push
notb
lea
lahf
mov
sub
xchg
mov
and
sub
push
outsl
loop
mov
je
add
fistps
xchg
mov
pop
cwtl
test
jno
movsb
shlb
imul
movsb
lret
and
jmp
pop
jo
cmp
fnstcw
mov
jns
sub
sub
xchg
fdivrs
push
sub
cmp
insl
out
xchg
sub
dec
sbb
xchg
hlt
cmp
addr16
mov
das
repz
mov
sbb
mov
subb
cmp
and
sub
aas
pop
cmpsb
inc
jle
jae
or
jmp
iret
cmpsb
jp
adc
popa
orb
mov
or
mov
cmp
pop
mov
lret
add
cmp
or
dec
mov
push
add
dec
add
mov
push
jne
cmc
cmp
jno
mov
pop
and
clc
push
mov
push
jmp
mov
mov
lds
fdivrs
xchg
or
popf
scas
xor
mov
cld
sub
bound
jecxz
addr16
sub
inc
jbe
sub
mov
orb
lods
cmp
inc
xor
or
jb
out
mov
in
xchg
out
push
jnp
push
jle
mov
inc
ljmp
pop
lea
outsl
js
ljmp
subl
dec
loopne
cmp
adc
xor
mov
dec
insl
cmp
or
sbb
push
fwait
icebp
cmc
mov
add
xor
out
or
je
add
out
ret
test
in
sub
test
mov
fadds
jmp
shlb
and
popf
xor
xor
xchg
push
mov
mov
mov
adc
ja
ljmp
inc
andl
push
cmp
sub
lcall
fadd
icebp
xchg
sbb
das
sub
xor
cmpb
jg
insl
cmpsl
je
inc
inc
cmovg
dec
loope
jb
mov
outsb
adc
lret
push
push
cltd
mov
or
sub
adcl
int
sti
aad
jns
xchg
adc
insb
pusha
mov
out
mov
ret
mov
cmpsl
data16
outsb
fwait
hlt
nop
cs
shlb
jns
daa
push
mov
xchg
out
insl
dec
push
add
out
xchg
pusha
pusha
mov
xor
aaa
push
xchg
ds
lahf
bound
neg
lret
pop
stos
or
inc
stos
lret
popa
jmp
testl
cwtl
imul
lret
push
data16
jno
jge
xchg
out
aad
or
addr16
arpl
push
loope
add
pop
shll
imul
idivl
push
dec
clc
cmp
mov
sbb
mov
movsb
pop
jge
add
fld
xor
sti
mov
mov
dec
mov
adc
aad
add
fisubrl
leave
pop
xor
adc
mov
pop
mov
aas
jne
and
ljmp
push
sub
lcall
xchg
std
test
jmp
icebp
inc
movhps
mov
mov
jb
lret
sbb
adcb
cmpsb
arpl
lods
pusha
test
lock
fsubs
daa
jmp
ljmp
push
negl
lods
xor
into
and
aad
or
jno
lods
push
dec
stos
pop
fs
jle
cs
outsb
lods
bound
xchg
stc
stc
nop
inc
mov
adc
les
inc
lods
fwait
in
addr16
ret
call
pop
xor
imull
jno
adc
js
cmp
or
push
insl
jmp
jge
ficompl
aad
xchg
sar
adc
pop
pop
adcb
popf
xchg
in
movl
xor
lods
jge
pushf
js
cmp
sarb
stos
rcl
xchg
pop
mov
sbb
jno
ret
call
inc
mov
sbb
icebp
repz
push
and
outsb
inc
int
sbb
inc
int
cld
push
icebp
mov
lret
sbb
adc
and
jns
push
mov
pop
divl
jmp
scas
sbb
add
xchg
int3
sarb
jge
sbb
inc
dec
add
ret
iret
mov
inc
mov
orl
mov
inc
mov
insl
test
filds
lods
mov
in
inc
ret
adc
mov
repz
jle
lret
or
add
int
roll
std
lds
inc
jg
mov
js
imul
mov
lahf
push
add
aaa
cltd
out
cwtl
and
adc
cmp
popa
outsb
mov
gs
push
dec
inc
adc
rorb
jl,pn
leave
add
inc
addb
scas
dec
sub
pop
in
or
das
mov
testl
popa
data16
push
adc
pop
jecxz
xlat
gs
sbb
cmp
notb
shr
imul
mov
sub
or
out
jg
and
mov
adc
mov
mov
repz
clc
mov
adc
jo
sbb
insl
aad
xor
fwait
fs
add
imul
in
lods
scas
icebp
jo
xor
or
xchg
mov
inc
pop
shlb
int
sbb
dec
xor
clc
popa
arpl
in
out
into
push
fptan
or
ja
pop
test
sahf
and
jecxz
xor
sub
cwtl
lods
bound
lret
ja
add
sbb
pop
cmpsl
pop
cmp
imul
daa
dec
addl
gs
movsb
mov
stos
ja
call
inc
cmp
push
out
sub
inc
xor
subl
lret
lret
aaa
shlb
roll
clc
pushf
mov
stc
inc
add
les
pop
lea
popa
popa
out
add
scas
pop
aas
mov
movsb
loope
es
mov
xchg
test
xor
clc
mov
jo
jmp
inc
push
je
push
fisubl
fwait
mov
or
lods
jb
pop
xor
mov
adc
xchg
shr
pop
mov
xor
ljmp
out
xchg
add
aam
rorl
inc
gs
rorb
push
xor
in
dec
popf
push
popa
nop
xchg
leave
mov
dec
pop
shll
movsl
mov
jg
and
mov
mov
mov
mov
clc
sbb
adc
xlat
xchg
xor
inc
push
jne
jl
ja
adc
fsub
sbb
sub
pop
push
xor
or
ret
lock
xchg
stos
test
cmp
mov
mov
mov
ret
xchg
nop
jg
inc
lret
int3
mov
jmp
fs
mov
mov
popl
nop
hlt
bnd
loope
mov
rolb
icebp
lods
sbb
fsts
and
fucomp
mov
pxor
pop
addr16
xor
adc
mov
mov
and
pop
lods
mov
filds
and
dec
ss
xor
push
and
in
push
mov
xchg
nop
cli
dec
mov
mov
push
or
stc
ror
cwtl
pop
sub
testb
mov
mov
fldcw
cmpsl
jae
subl
std
into
add
inc
cld
popa
xor
push
dec
icebp
fs
fists
xchg
cs
iret
das
movsl
mov
mov
inc
adc
gs
pop
sub
dec
adc
ret
push
cmpsb
aad
aad
stc
push
mov
jl
xor
ror
pop
cmc
ret
bound
lahf
push
popa
call
dec
es
ljmp
subb
pop
sbb
and
jecxz
dec
lret
movsl
nop
push
insl
push
loop
cwtl
test
and
leave
sbb
loop
adc
int
or
adc
push
gs
xor
insb
jo
fcoml
add
scas
adc
mov
sub
scas
mov
div
push
mov
dec
push
jb
mov
rcrb
add
jmp
jbe
insl
lods
mov
daa
int3
out
aaa
dec
jno
int3
sub
in
jp
cmp
mov
or
fs
lock
lret
data16
sbb
mov
arpl
les
jge
out
icebp
mov
insl
cmp
cltd
jbe
xlat
shl
imul
mov
jae
leave
pop
incb
stc
mov
imul
hlt
subl
sbb
cmp
lods
call
xchg
fstpt
xor
lret
mov
fiadds
cmp
mov
bound
mov
cltd
add
push
es
out
and
dec
pop
sahf
lds
fcmovb
lock
or
stos
mov
popf
cmp
sti
and
sbb
stos
xchg
cwtl
jg
jecxz
inc
xor
sbb
dec
xlat
repz
inc
fwait
and
test
clc
je
cld
out
fcmove
push
daa
or
or
popf
sbb
daa
fists
mov
data16
jno
sub
ret
mov
fiaddl
aaa
lcall
leave
add
lea
arpl
xchg
adc
adc
cs
arpl
jl
test
jle
pop
cmp
jnp
mov
lea
in
shlb
add
call
adc
test
mov
bnd
out
cmpsb
ret
xor
test
ljmp
stos
push
fldenv
pop
or
cmp
mov
loope
out
cwtl
decb
mov
out
cmc
lahf
out
cmpsl
xchg
cmp
cmpsl
jnp
xlat
incl
mov
in
repz
mov
std
lahf
call
cmp
add
jae
jbe
xchg
pop
sbb
andl
adc
lret
and
pop
jae
lods
adc
stos
mov
jg
mov
lahf
in
into
mov
jge
push
xchg
lret
psubd
out
aaa
jge
cmpsl
int3
jno
out
mov
mov
mov
test
pop
mov
sub
fnclex
ret
loopne
lahf
test
adc
pusha
jl
xor
orb
mov
lret
mul
movl
shlb
outsl
int
movsb
cs
xchg
repnz
sbb
in
jp
xchg
jecxz
mov
lahf
pusha
pushf
nop
dec
pop
mov
or
and
inc
lret
fimull
popa
fldt
jecxz
or
repz
rcl
xchg
xor
ret
idivb
add
bound
dec
jns
je
orb
outsl
lret
lea
test
and
push
mov
jno
push
mov
ljmp
jne
xor
fisubs
mov
jns
sub
int3
stc
pop
adc
inc
adc
ret
adc
sbb
xor
movsl
inc
mov
ret
fsubrs
sbb
gs
jnp
xchg
add
add
dec
cmp
cs
inc
leave
andps
faddp
jae
push
bound
jge
pop
mov
loope
mov
je
xchg
fsubr
nop
std
test
or
fildl
lods
jns
adc
loop
inc
cmp
repnz
pop
pop
in
stc
ja
stos
xchg
sbb
adc
mov
imul
or
sbb
std
xor
jp
push
fidivl
push
jbe
leave
inc
cmc
sub
sahf
adc
sahf
mov
in
les
pusha
and
cmpl
cltd
xchg
push
inc
insb
adc
in
dec
arpl
xchg
inc
loop
xor
pop
mov
cld
dec
add
scas
inc
inc
out
xor
insl
call
cmpsl
loopne
xchg
outsb
pop
mov
fisubs
add
shl
bound
clc
add
add
andl
imul
ret
stos
rolb
adc
cwtl
sub
xlat
clc
loop
fs
mov
jge
negb
xchg
out
rclb
jo
ja
outsl
xchg
daa
inc
and
je
lods
mov
xlat
add
cltd
popa
addl
imul
subl
cwtl
imull
sub
adc
cmpsb
adc
loope
or
mov
and
dec
pop
clc
mov
orl
iret
gs
and
daa
xchg
push
jmp
repz
xchg
popf
repnz
cli
test
imul
add
mov
lahf
out
fcoml
mov
sti
rolb
fucomi
mov
mov
je
cmpsw
cli
in
das
test
clc
add
lea
and
add
sahf
xchg
in
mov
push
jae
ja
sahf
idivb
push
negb
sarb
dec
nop
lock
stos
ljmp
pop
scas
mov
arpl
lods
mov
mov
mov
cld
shlb
cmp
fidivs
dec
addr16
inc
sub
icebp
sbb
scas
or
push
aaa
or
cwtl
add
sbb
mov
loope
imul
and
stos
jmp
xor
xchg
push
add
sbb
sub
inc
or
inc
and
stc
push
pop
jbe
bound
mov
sbb
xchg
test
push
jmp
int
aad
add
stos
sbb
outsb
lock
push
pushf
mov
js,pn
push
testb
or
cltd
fcoms
or
lock
mov
dec
cmp
cmp
mov
jbe
es
ljmp
adc
push
add
out
popf
js
mov
rcll
xchg
aas
loope
xchg
sub
arpl
addr16
and
clc
dec
insb
pop
inc
xchg
cli
nop
xchg
mov
jmp
loopne
push
and
dec
add
xor
pop
insb
fsubrl
fucom
jae
loopne
pusha
adc
dec
cmp
push
sub
cld
es
rorl
movsb
and
add
sbb
loopne
hlt
pop
jg
push
testb
leave
and
sbb
mov
jbe
test
push
aas
clc
popf
jge
in
push
xchg
bound
jbe
test
sbb
or
lahf
xchg
add
dec
test
je
xor
add
pop
lcall
imul
jb
cmp
pop
rcrb
fiadds
xchg
pop
mov
aaa
cmp
mov
rolb
mov
adc
ja
ljmp
sbb
js
addl
gs
loopne
inc
add
icebp
dec
lahf
mov
dec
ja
popf
cmp
mov
cli
cmc
cmpsl
and
sbb
ljmp
push
inc
fldt
loop
outsl
mov
insl
aas
mov
dec
inc
sbbl
lret
data16
mov
into
xorb
xchg
dec
dec
xchg
lret
push
mov
test
xchg
test
adc
xchg
mov
fcoms
jnp
sbb
movsb
outsb
insb
scas
inc
adc
pushf
xor
imul
mov
jb
loope
out
push
lock
jmp
or
cld
ret
inc
roll
fstl
sbb
out
or
and
cmp
out
jo
stc
add
pop
mov
and
lret
icebp
lret
in
add
mov
jnp
lods
mov
pusha
pop
test
rcll
xchg
insl
jmp
pop
sbb
leave
dec
adc
inc
pusha
shlb
add
stc
push
dec
sbbb
addb
faddp
mov
sbb
adc
hlt
and
mov
jecxz
mov
ss
lds
mov
sub
dec
mov
xchg
aas
insb
sub
inc
xor
mov
jns
aas
and
jnp
je
and
dec
xchg
cmp
andb
int
or
ds
sbb
push
jne
jp
iret
mov
sahf
cmp
fs
fnsave
mov
sub
lea
mov
imul
mov
jecxz
sti
in
inc
idivl
mov
push
js
adc
cli
jl
loopne
cs
sbb
test
fcompl
stc
cmp
dec
jne
call
ja
and
xchg
pop
fnsave
xor
xchg
mov
add
imul
dec
jno
ret
insl
in
fwait
mov
and
fldenv
push
xorb
lahf
lret
mov
dec
adc
pop
push
mov
dec
es
sbb
xchg
mov
or
mov
adc
xchg
adc
push
sub
pop
dec
jg
sub
mov
sub
mov
sarb
in
repnz
inc
sub
jo
fiadds
test
jl
imul
mov
jne
sbb
sbb
cmpsl
push
inc
ja
dec
jmp
in
xor
pop
jbe
push
xchg
sbb
or
push
mov
push
in
adc
adc
cmpsb
mov
pop
out
xlat
aam
cmp
cmp
fstps
mov
mov
xlat
scas
in
shll
les
xlat
xor
enter
gs
cli
gs
push
sub
dec
stos
xor
roll
aad
adc
call
test
xor
int
dec
jmp
sbb
adc
mov
shrb
mov
imul
pop
or
out
pop
mov
icebp
lahf
jbe
lods
dec
cmp
and
and
dec
mov
fimull
filds
dec
mov
dec
out
outsl
or
xor
pop
ret
xchg
add
add
jns
scas
jne
dec
cmp
xchg
or
push
scas
adc
out
cmpsb
sbbb
outsl
xchg
mov
into
cltd
mov
adc
mov
adc
icebp
outsl
mov
shr
mov
out
iret
xor
test
xor
sbb
cmpsl
movsb
or
int
loope
das
mov
push
cmp
shr
or
fwait
sub
out
aam
fmull
jg
loop
xchg
push
inc
sbb
leave
dec
jle
jne
sahf
fisttps
add
dec
xchg
adc
leave
push
cli
jno
pop
lea
sub
mov
dec
xchg
movsb
mov
inc
notb
icebp
jmp
xchg
cwtl
pushf
sti
xchg
daa
pop
mov
xor
mov
fbld
mov
dec
icebp
lods
mov
pop
test
jnp
sbb
push
andl
pmulhuw
inc
ljmp
cli
lods
hlt
cmp
push
jnp
stc
ret
inc
inc
cld
jecxz
xor
es
mov
jno
fsubr
fnstcw
jno
int3
or
lret
decb
std
addr16
sbbb
data16
cwtl
xchg
inc
dec
cld
pop
repnz
aad
xor
and
adc
mov
sub
pop
xchg
inc
dec
les
sbb
outsl
loop
lods
adc
sub
hlt
mov
and
addr16
or
jmp
mov
sub
lret
dec
imul
xchg
stos
imulb
sub
out
inc
mov
add
arpl
orl
testl
or
imul
push
cmp
pushf
std
xchg
inc
sbb
test
gs
jl
jo
sbb
ljmp
jle
lahf
clc
dec
das
sub
fs
mov
add
jg
pop
into
mov
fnstenv
inc
or
pop
je
rol
xor
mov
pop
pop
adc
nop
sub
pop
jnp
fimuls
jle
pop
lock
push
into
xchg
ret
pop
or
insb
mov
test
adc
sar
ret
hlt
mov
pop
aas
loopne
aas
imulb
cmc
cli
sub
mov
bound
dec
sti
add
pop
imul
inc
lea
mov
xchg
icebp
mov
pop
jo
push
or
call
jb
or
and
int
cmpsb
fidivs
xchg
daa
lods
sub
imul
jno
loope
add
into
popf
adc
data16
loop
dec
sti
and
mov
mov
push
cld
loop
cli
into
repz
mov
bound
adc
dec
jbe
cmp
stos
adc
ficompl
mov
shl
push
sahf
jg
xchg
inc
aas
mov
pusha
movsb
mov
sub
sbb
xor
xor
xchg
add
ds
xchg
ja
fwait
jo
fisttpl
pop
inc
movups
adc
and
orb
enter
in
pop
mov
push
cwtl
ljmp
fldl
aam
insb
mov
add
sti
out
sbb
test
hlt
test
lahf
inc
xchg
xchg
lret
dec
test
cmp
mov
ja
mov
push
xor
mov
scas
adc
inc
loope
ja
adc
es
je
pop
test
add
addr16
sub
pop
pop
adc
jae
fsub
int3
sbb
stos
sbb
xchg
popa
pop
mov
call
cmp
mov
add
push
xor
cld
xchg
nop
cmc
mov
cltd
fcomp
es
cmp
mov
popa
scas
or
xlat
or
inc
pusha
dec
divb
je
cld
mov
mov
fiaddl
jecxz
outsl
hlt
mov
xchg
inc
pop
lcall
test
rorl
and
fwait
lcall
aaa
in
pop
mov
test
xor
lods
bound
dec
or
aaa
int
fisttpll
sub
push
sahf
jae
inc
add
and
xor
cwtl
pop
push
scas
sti
and
ds
movsb
dec
icebp
push
rcrb
adc
iret
push
lea
or
fs
pushf
dec
lods
jno
fcmovbe
add
pop
out
loopne
loop
xchg
inc
push
lods
out
xchg
jecxz
in
push
jne
fists
push
and
or
pop
adc
mov
pop
mov
out
rorb
jecxz
cmc
cmpsb
add
icebp
push
into
sti
adcl
sbb
lock
out
dec
mov
cli
lds
dec
cmp
lds
adc
mov
call
mov
jno
pop
mov
cmc
xchg
push
push
arpl
jo
and
stos
pushf
int
xchg
xchg
xchg
mov
movsb
js
fstpl
mov
xor
or
arpl
fs
inc
sbb
fstps
push
or
push
aaa
xchg
addl
outsl
sub
bound
inc
cli
mov
add
stc
jo
andl
out
xchg
adc
lds
addr16
pop
xor
cmpsb
xor
cmp
inc
xchg
pushf
cltd
push
mov
fmulp
test
xchg
jg
mov
gs
sbb
cs
push
jnp
repz
or
int3
popa
xchg
pop
leave
add
popa
lods
scas
leave
pushf
or
adc
add
dec
adc
dec
test
fstpl
lods
adc
sub
int
mov
xchg
adc
pop
inc
mov
mov
sub
and
jl
jnp
cltd
iretw
nop
or
adc
int3
cmp
jp
lret
sub
push
insl
adc
flds
inc
pop
push
xor
popf
cmpsl
xor
sub
push
out
adc
mov
lahf
xor
xchg
pop
push
xchg
and
pop
lcall
dec
movsl
xor
adc
adc
mov
xlat
sub
stos
add
xorl
adc
out
nop
mov
inc
mov
cmpsb
xchg
bound
sbb
addl
push
lahf
sub
shll
hlt
sbb
pushf
stc
bound
fs
and
inc
div
xchg
sarl
xchg
mov
arpl
mov
cmp
sbb
add
and
pop
jb
stos
jnp
jno
or
and
mov
mov
dec
push
repz
xchg
test
fcmovu
ljmp
jge
dec
gs
pop
insl
fstpl
cmpsl
test
mov
lods
das
loope
psubsb
insb
addb
xor
call
decb
add
pop
scas
sub
ret
sub
fbstp
bound
and
sar
hlt
adc
incl
cli
sub
movsl
inc
dec
ret
jno
xor
pop
mov
test
push
xor
pusha
mov
sbb
xchg
inc
mov
mov
aaa
cmpsb
add
stos
pop
mov
popa
clc
jmp
cld
pop
cmp
movl
pop
mov
xchg
adc
add
add
and
mov
out
mov
decl
bound
in
xchg
es
insl
pop
fldl
mov
cli
mov
or
jns
mov
and
ret
cs
mov
push
dec
xlat
jg
xlat
daa
aad
bound
std
sbb
or
cmp
xchg
insb
idivb
pop
jne
es
iret
pushf
push
pop
add
mov
adc
lods
arpl
inc
adc
xor
pop
fdivrp
test
bound
push
adc
adc
pop
sahf
ja
fmuls
mov
jo
mov
and
out
jmp
push
or
jno
add
jno
dec
jecxz
adc
push
jg
cs
stc
adc
fwait
les
repnz
sahf
mov
xchg
popa
mov
ret
pop
fadds
mov
divl
mov
inc
push
out
cwtl
ret
mov
push
in
ficoms
insb
push
fistl
xor
lret
out
mov
mov
pop
fsubr
decl
cmpsb
push
jl
fiaddl
rorl
mov
fcompl
jbe
insb
inc
cmp
or
pop
add
mov
rcl
lods
cmpsb
rorl
mov
cld
mov
mov
or
sub
push
fcoms
and
mov
mov
cmp
jb
aaa
mov
mov
divps
sub
fildl
inc
test
mov
negb
in
sbb
or
insb
pop
ss
lock
inc
add
leave
xchg
rorb
push
jne
mov
jl
and
mov
jo
pop
in
add
jo
adc
dec
add
lea
inc
xchg
xor
lcall
cmp
jg
popa
dec
pop
pop
jno
mov
and
nop
xchg
pop
cld
mov
outsl
dec
adc
jns
fs
sub
orl
jbe
fisubrl
inc
jmp
dec
bnd
shll
push
dec
add
loopne
pop
mov
inc
sbb
out
inc
lds
loop
sub
loope
mov
fisubl
rcrl
or
jl
int
push
les
popa
hlt
lock
das
mov
xchg
jmp
loopne
test
es
lret
mov
stos
mov
ret
dec
stos
add
inc
sub
push
mov
cs
leave
pushl
push
aad
dec
lret
nop
pop
dec
push
dec
enter
inc
sub
xor
repz
inc
ds
xor
test
iret
test
and
or
loopne
add
imul
xor
jo
xlat
sbb
add
lods
xchg
and
into
xor
adc
inc
adc
imul
test
mov
in
mov
popa
enter
in
inc
in
movq
dec
outsb
lods
fs
sbb
repnz
cmp
adc
aas
in
fucom
cmp
cmc
clc
in
push
or
dec
testl
pop
cmp
xor
push
adc
ja
pusha
mov
mov
mov
jnp
imul
mov
pop
sub
dec
sbb
mov
lock
push
jmp
xor
cmp
repz
push
pop
mov
ret
frstor
ja
push
daa
inc
cltd
xchg
rcll
addb
push
repz
add
or
jp
rorl
push
scas
pusha
pop
mov
inc
in
imul
pusha
push
sbb
push
sbb
cmp
hlt
cmpsb
aaa
clc
xchg
add
cmc
xor
sub
daa
adc
jge
lods
jmp
add
sbb
insb
int
adc
loop
das
call
out
out
sbb
popa
push
lahf
lcall
xchg
imul
aad
inc
mov
mov
lea
adc
movb
push
push
dec
fistps
pop
pop
fnsave
adc
or
cmp
rcrl
mov
or
adc
jle
mov
sub
sub
cwtl
jnp
ffree
mov
push
loope
mov
adc
cld
iret
stos
or
adc
xor
loope
lcall
or
jno
mov
test
mov
sub
cmpsl
xchg
div
push
and
pop
cmp
mov
push
pushf
lcall
aam
pushf
jle
mov
mov
pop
dec
push
adc
pop
das
scas
in
ficompl
scas
cmp
jg
cmpsl
push
fstl
rorl
mov
cmp
sbb
jge
mov
clc
scas
fsubl
push
stos
movntq
out
out
sub
clc
or
dec
test
lcall
cmp
ud2
cmp
and
in
fbstp
arpl
add
je
dec
adc
movsb
addr16
cmp
out
lods
rcpps
jg
call
loop
cwtl
ja
cltd
les
sahf
cmp
test
divl
icebp
dec
imul
mov
pop
je
mov
dec
iret
aad
outsb
or
pop
cmp
inc
repz
or
adc
and
mov
std
test
add
hlt
stos
insl
xlat
or
mov
bound
dec
loop
push
fcompl
cltd
scas
or
cld
cmp
push
mov
sub
movsl
lahf
bound
xchg
inc
ret
mov
xor
xchg
sbb
lods
std
imul
stc
dec
xchg
leave
xor
jge
mov
shlb
mov
and
in
shll
out
add
movsl
stos
or
enter
idivb
jo
out
sbb
xchg
aad
out
addr16
icebp
and
repnz
insb
pop
ss
mov
mov
xor
lret
mov
jp
dec
xlat
pop
or
inc
push
arpl
jb
jg
popf
sbb
sbb
jmp
or
push
andb
outsb
xchg
out
mov
lock
fldenv
lret
iret
jno
jbe
mov
ss
mov
and
dec
call
or
pop
pop
adc
jne
add
xchg
pop
ficompl
mov
adc
rcr
sub
pop
add
mov
shr
loop
xor
dec
fcomp
js
sub
test
fcoms
mov
loop
jmp
pop
ja
jle
xor
imul
mov
std
add
cmp
stc
cmpsl
ss
jno
cmp
mov
inc
pop
sub
sub
loopne
aad
ja
mov
subl
mov
sahf
push
xchg
aaa
popa
test
xchg
mov
call
mov
test
lret
out
cmpb
out
mov
pop
mov
push
pushf
loop
test
ds
sbb
dec
jmp
ljmp
mov
imul
adc
ds
outsl
mov
movsl
cli
test
icebp
adc
mov
xlat
pop
push
mov
jge
xchg
int3
xchg
imul
adc
dec
push
cmpsl
xlat
sub
lods
add
mov
leave
lret
ret
or
dec
or
repz
call
ret
xchg
call
mov
xchg
repz
hlt
out
xor
push
dec
popa
loope
int3
xchg
js
in
mov
cmpsb
mov
xchg
and
bnd
cmova
xor
sub
xchg
clc
sub
insb
pushf
pop
xchg
movsl
push
cmc
cmp
test
outsl
subb
rorl
dec
cltd
jecxz
fisttpl
and
mov
sbb
mov
adc
sbb
in
int
test
pop
stos
mov
mov
jp
and
and
fnsave
cltd
push
jmp
cmp
mov
je
pop
mov
or
jge
je
insl
jbe
sub
shr
lret
sub
test
mov
mov
xchg
push
ja
jae
scas
mov
aaa
int
fwait
push
pop
test
ja
nop
and
xor
jnp
scas
insb
mov
jo
mov
mov
dec
lahf
inc
mov
pop
int3
mov
inc
add
jo
xchg
imul
push
scas
data16
push
paddusb
popf
jle
nop
fbstp
xor
mov
xlat
add
mov
sub
dec
pop
and
mov
aaa
adc
xchg
cmp
and
or
dec
mov
popf
jno
out
push
icebp
mov
push
push
test
int
out
aaa
mov
mov
les
add
mov
aam
push
jne
test
fstl
dec
push
mov
push
xor
mov
in
add
cld
and
cld
push
jecxz
sbb
jbe
adc
push
inc
sbb
stc
adc
xor
andl
lds
pushf
bound
stos
and
pop
lock
jae
ret
cmp
mov
fsubl
jmp
pop
cwtl
dec
shlb
cmpsl
std
sbb
push
push
push
sub
sub
ja
xor
out
test
mov
xor
xchg
mov
adc
inc
mov
push
xlat
sarl
jg
and
stc
pop
jge
push
cld
addb
ficoms
mov
mov
sbb
pop
mov
mov
loopne
pop
scas
xchg
pop
adcb
aaa
or
in
push
inc
or
push
add
ss
or
xlat
mov
dec
xacquire
mull
add
adc
mov
mov
popf
subl
or
push
js
int
xchg
in
mov
jb
movsl
inc
push
out
addr16
test
ret
mov
and
out
insb
loope
les
outsl
or
popa
adc
push
jno
jae
fwait
arpl
sub
mov
add
or
jle
lret
dec
cmp
add
subb
mov
cmpsb
push
out
dec
add
mov
add
loope
popw
add
cmc
push
out
shl
loop
in
jle
xchg
aaa
mov
hlt
pop
cli
cmp
movsb
jns
jae
dec
stos
add
and
fxch
insl
and
push
std
adc
pushf
cld
addr16
lret
jmp
stos
xlat
fbstp
popf
add
testl
rcrb
out
cmpsl
movsb
push
mov
repnz
push
int3
in
mov
jbe
xchg
sahf
inc
push
movsb
pop
pop
orl
call
movsl
jno
push
loop
pushf
cmpl
jnp
std
add
pop
push
repz
jecxz
leave
add
adc
imul
add
loope
aam
xor
jo
mov
or
pop
lea
sbb
push
inc
rol
outsl
pop
andb
enter
imul
mov
cli
inc
test
dec
clc
sarl
dec
xchg
jne
and
inc
ss
pop
roll
inc
test
movsb
xor
xchg
fcmovnbe
add
adc
sbb
cmpsb
enter
adc
pop
fwait
ja
sbb
push
add
sub
sub
fs
mov
cmp
loopne
mov
xchg
or
cmp
add
xchg
popa
rcrb
dec
iret
sub
inc
jns
cwtl
aaa
cmp
fmuls
jmp
movsl
test
pop
pushf
aad
in
shl
cs
push
xor
cmp
lock
mov
mov
xor
xor
iret
add
xor
push
dec
xchg
jno
mov
jb
jne
pushf
mov
pop
inc
push
xlat
enter
fistps
cld
stos
pop
jg
sbbl
fmul
inc
aaa
in
add
adc
xchg
add
sbb
xlat
jle
mov
lock
enter
cli
les
jecxz
pop
call
arpl
jle
mov
mov
hlt
aam
gs
xor
loope
das
push
xchg
sub
sbb
fsubp
dec
push
jo
mov
jecxz
adc
sahf
mov
mov
mov
out
lret
push
sub
ss
push
sbb
cmc
add
outsl
fistpl
les
jo
push
pop
lahf
sub
xchg
inc
ljmp
mov
mov
pop
stc
or
mov
cmp
xchg
jmp
fsubrl
scas
test
cltd
fiaddl
pop
sbb
pop
arpl
das
mov
imul
sub
jne
or
pushf
dec
scas
aad
sub
push
or
cmp
dec
jecxz
nop
lcall
xor
mov
addb
cmp
push
pop
jl
test
adcb
push
mov
jns
mov
xchg
push
xchg
xorb
mov
inc
jnp
push
mov
repz
imul
data16
mov
fldcw
add
sbb
mov
jecxz
mov
popa
jl
lods
inc
mov
into
ret
mov
xor
jnp
add
ljmp
jno
rep
inc
xor
xor
jbe
dec
mov
push
mov
sbb
or
imul
inc
push
lcall
fildl
es
xchg
sbb
sbb
les
pop
int
or
xchg
push
loope
in
jge
mov
cmp
mov
arpl
das
mov
mov
lret
pushf
sub
xor
mov
inc
jb
nop
imul
sub
ljmp
movsb
andb
adc
dec
add
sahf
mov
xchg
inc
add
adc
pop
in
int3
pusha
cmpsb
imul
xchg
stos
test
lahf
push
test
push
roll
popa
push
cmpsb
xlat
pop
aas
imul
adc
mov
xor
clc
das
in
call
sbb
or
dec
or
in
aas
jp
mov
test
out
jnp
xchg
dec
popf
jle
lock
push
mov
or
jne
pop
jp
flds
lock
aas
mov
fcmovbe
xchg
std
pop
rcrb
les
pop
xchg
dec
gs
or
pop
sub
dec
mov
cmp
testl
xchg
or
call
ficoms
cmp
or
imul
ret
xchg
adc
insl
sbb
push
mov
jmp
sarl
ret
mov
pushl
sbb
pop
jecxz
imul
sub
cmpsl
js
adc
sbb
adc
add
imulb
int3
push
cmpsb
mov
jecxz
xor
ljmp
inc
call
jl
sbb
jp
fnstcw
xlat
and
adc
push
and
sub
loop
nop
fsubrp
xchg
adc
xchg
popf
gs
jbe
xor
mov
push
fcmovnb
sbb
mov
cmp
fwait
and
xchg
xchg
cmpsl
mov
stos
lock
cmpsl
testb
jnp
stos
fwait
inc
dec
sahf
popf
inc
fcmovb
push
adc
push
gs
xchg
das
fldcw
loop
jb
xchg
xchg
adc
mov
add
xor
sahf
xchg
cmp
cli
xlat
mov
cli
sti
sahf
and
rorb
nop
sub
xchg
cmp
pop
loope
mov
push
sbb
inc
popf
cmp
clc
xchg
iret
xchg
sub
adc
test
pop
xor
push
inc
xor
in
xchg
add
add
pushf
jp
iret
xchg
jl
adcb
lahf
je
test
cmpsb
mov
push
jge
mov
mov
and
mov
xor
sbb
shlb
cmp
inc
pusha
push
mov
jp
push
daa
lds
test
push
lock
push
xchg
inc
sti
rcll
nop
insb
mov
add
lahf
dec
ljmp
sub
pop
add
inc
adc
jmp
xor
xor
ficomps
ja
add
mov
xor
daa
jnp
sub
push
xchg
xor
fisubrs
mov
movsb
sbb
inc
je
mov
sbb
mov
jo
bound
adc
xor
inc
fmull
mov
push
sbb
outsb
mov
out
adcl
dec
ja
sub
inc
jne
and
cmp
pop
pop
jg
sub
fldt
mov
adc
mov
aas
xchg
adc
insb
push
xor
pop
push
cmp
clc
in
cmp
popf
cld
sbb
fs
mov
adc
mov
fiaddl
mov
mov
mov
or
jae
push
and
lods
daa
and
je
movsb
in
mov
call
test
mov
jnp
dec
pop
mov
arpl
hlt
mov
sbb
inc
push
jmp
loope
imul
xor
in
fwait
ljmp
jecxz
inc
mov
sub
xchg
aas
out
lea
repnz
push
lcallw
call
inc
rcr
mov
cmp
dec
and
ljmp
les
outsb
in
or
dec
adc
sub
push
and
movl
push
repnz
cwtl
rclb
mov
repnz
lock
daa
xchg
push
loope
rol
aad
cmp
imul
push
xor
mov
cmpl
push
mov
les
cli
cmp
dec
mov
shlb
cs
mov
push
sbb
cs
rorl
hlt
mov
push
mov
jmp
adc
sub
adc
rolb
adc
adc
nop
dec
out
sbb
clc
stos
out
pop
mov
lds
into
adc
or
xor
jb
repz
loopne
arpl
gs
sarb
lock
iret
xor
mov
mov
add
adc
inc
mov
cmp
cs
mov
mov
lahf
push
mov
nop
cmp
aas
push
sahf
dec
hlt
mov
xchg
in
push
jo
mov
mov
pop
push
std
shrb
sbb
fldt
test
push
outsl
mov
push
push
bound
sbb
jmp
addr16
loop
mov
inc
shl
mov
stos
shll
addb
rcll
lcall
xchg
rcr
shrb
cmp
das
rcl
nop
xorb
es
adc
fistpll
mov
jge
mov
dec
popa
jne
ret
lods
incl
adc
das
add
movsb
inc
add
cltd
push
and
dec
out
pusha
pusha
lret
push
test
mov
js
aam
sub
sub
insb
shl
lahf
lret
jo
inc
arpl
adc
xchg
jp
andl
fimuls
add
inc
jo
pop
add
lods
ret
pop
jne
and
imul
cs
jb
xchg
cmpsl
adc
jecxz
mov
add
lcall
movsb
cmp
jo
mov
ja
es
sahf
adc
cmp
js
jge
adc
sbb
ficomps
rolb
and
sbb
repz
pop
js
scas
mov
sub
ljmp
les
sub
inc
cwtl
pop
or
add
leave
ljmp
mov
mov
iret
daa
lods
add
cmp
sarb
cmp
cmp
mov
adc
xor
mov
js
xchg
sbb
mov
xchg
in
notl
jmp
sbb
dec
or
push
arpl
int
flds
repnz
movb
jecxz
push
mov
hlt
mov
cmp
add
push
hlt
sbb
gs
pop
stos
mov
inc
out
fdivrs
add
out
mov
mov
and
mov
mov
sti
ret
daa
rcrl
std
outsb
jno
lret
sahf
and
pop
leave
leave
in
into
dec
aas
pop
lods
and
push
inc
sub
test
iret
adc
movsb
loope
adc
dec
lods
loop
test
scas
dec
sbb
mov
pusha
lcall
dec
mov
jb
or
into
movsl
inc
test
mov
movsl
insb
push
fistpl
or
push
scas
data16
cld
in
inc
lock
pop
push
imul
xor
inc
aas
add
xor
jno
es
outsb
push
rol
jne
lods
mov
stos
mov
cmp
jg
sub
dec
out
xor
icebp
sub
push
cli
les
add
push
ss
push
pop
and
jbe
adc
xchg
xor
sub
xor
shr
sbb
sahf
int
fwait
or
mov
sub
jae
fldcw
aad
pushf
push
mov
dec
lcall
addr16
adc
push
scas
loope
mov
add
pop
loop
insl
mov
jp
mov
jne
fbstp
neg
mov
mov
stos
out
sub
fnstcw
mov
filds
push
xchg
and
std
jle
icebp
or
sbb
jle
mov
xchg
xchg
iret
mov
pop
test
hlt
mov
mov
sbb
lret
pusha
lods
jp
fucomi
aad
sahf
or
or
mov
xchg
push
jmp
cltd
sub
loopne
mov
lock
xor
mov
jg
jge
or
sbb
xchg
mov
jae
mov
popa
or
pop
popl
outsl
mov
mov
adc
out
rorl
loopne
dec
cmp
sub
sbb
shl
cmpsl
pop
add
or
lock
jns
lcall
add
sbb
ss
stos
cld
movsb
mov
xchg
xchg
mov
jnp
cld
int3
repz
ret
or
out
push
sti
fistps
stc
push
jmp
rcl
out
sub
sbb
adc
jns
mov
nop
fcmovnbe
sbb
mov
jne
inc
lock
mov
sub
xor
pop
dec
out
jecxz
xor
push
lds
mov
dec
pop
pop
aaa
mov
jbe
adc
cwtl
jmp
dec
cmp
xchg
mov
sbb
pop
sub
xchg
mov
mov
lods
mov
out
lret
or
cld
fisttpl
enter
jne
fimull
mov
mov
adc
sahf
pop
nop
xchg
push
les
inc
mov
in
ja
cmp
stc
pop
adc
call
out
mov
xchg
popa
dec
inc
xor
lods
dec
push
dec
push
sub
sub
adc
mov
sub
mov
inc
pop
clc
jne
sub
nop
dec
mov
pop
xorb
rclb
cmp
in
testb
add
sub
add
mov
rcrb
cmpsb
push
jmp
or
xchg
movsl
cwtl
in
sbb
lock
cmc
push
fstpt
add
adc
sti
fistps
nop
lahf
push
dec
xor
and
cmp
push
mov
popa
lahf
dec
out
aad
jl
cwtl
jbe
and
out
xor
ficoml
mov
stos
pop
pop
cmc
dec
or
inc
xchg
add
inc
mov
adc
dec
test
xor
loopne
data16
inc
cmp
jle
and
adc
je
jmp
pop
push
adc
push
sub
xor
mov
lcall
into
stos
push
jbe
das
daa
pop
fsubrl
mov
or
adc
rcl
icebp
mov
dec
jne
dec
call
xchg
imul
test
xchg
dec
add
dec
mov
shrl
pop
pop
jmp
xsaves
jbe
pop
cli
cld
in
mov
dec
jp
pushf
pop
and
xchg
xchg
xor
xchg
out
repnz
shlb
push
pop
mov
ss
pushf
xor
lock
daa
xor
add
cmpsb
push
jp
adc
insb
push
jbe
outsl
xchg
data16
xlat
cmp
mov
test
notl
xchg
pusha
inc
icebp
pusha
inc
push
stos
pusha
pusha
sahf
cmp
push
mov
xchg
inc
inc
push
loope
arpl
int3
xchg
dec
mov
xchg
add
xchg
jno
rclb
mov
ss
in
pop
and
xchg
mov
dec
insl
xor
rolb
and
sub
xor
fldcw
aas
cli
xchg
and
lea
stos
cmp
inc
hlt
fcomps
into
adc
fxch
jo
mov
repz
dec
mov
xchg
lcall
xchg
ss
mov
imul
mov
rclb
lret
pop
pop
xchg
mov
xor
icebp
dec
clc
jnp
mov
repz
xchg
repnz
jno
stos
sub
mov
test
fs
sub
jmp
lret
push
or
int3
mov
test
pop
rcrb
popf
imul
mov
sub
pop
inc
fdivrs
jmp
push
pop
dec
outsl
xor
in
mov
test
fcompl
xchg
dec
jae
lcall
mov
cltd
pop
movsl
push
stos
mov
fs
cmp
ret
sub
dec
scas
sbb
mov
outsl
dec
sub
dec
pushf
nop
and
pusha
std
dec
pop
sbb
not
shlb
jae
cmpsl
xor
jp
fwait
stc
in
jp
dec
xlat
lret
rcrl
and
and
imul
xor
out
mov
pushf
lods
pop
cltd
inc
sbb
test
sbb
popa
pop
inc
add
jge
out
or
adc
lea
mov
push
mov
xor
and
outsb
outsb
popa
push
adc
jmp
jbe
jae
inc
dec
cmc
push
sbb
xor
loope
pop
sti
adc
mov
enter
dec
call
mov
lret
cld
jge
in
shrb
dec
jne
lds
sub
scas
jecxz
mov
fidivs
rcll
pushf
les
mulb
xor
ror
or
xchg
loope
cwtl
adc
pop
rcrb
mov
addr16
push
dec
sbb
sbb
mov
insl
fimuls
int3
or
xor
push
lahf
movsb
cmovo
mov
repnz
xlat
popa
sbb
xchg
mov
aam
lock
add
popf
inc
data16
or
add
lock
in
hlt
mov
sub
rcr
xchg
shl
lock
gs
pop
fwait
mov
pop
push
xlat
pushf
movsb
xor
jmp
inc
sub
pop
push
jge
fwait
jg
dec
leave
mov
imul
les
pop
cmpl
ficoml
outsb
or
sarb
inc
data16
mov
and
xchg
shr
shl
lds
pop
add
mov
jb
jae
xchg
enter
std
jl
std
outsl
imul
inc
jnp
sti
mov
sbb
jo
cld
or
pop
shll
mov
repnz
sub
mov
test
sub
stos
mov
add
jno
add
xchg
add
aas
test
xchg
test
out
jmp
pop
xor
cs
mov
xor
stc
lret
sub
pop
test
mov
jbe
xor
cmp
dec
xor
jl
aam
jbe
inc
fistps
xchg
cmp
lds
popa
mov
jb
mov
into
out
mov
and
ret
push
rorb
aad
sbb
outsb
dec
adc
scas
daa
rcr
nop
add
lods
mov
movsb
cmp
jp
dec
ret
push
ret
cmc
mov
rcll
mov
popf
sbb
lret
push
mov
gs
lret
popf
aas
imul
inc
movsl
fnsave
scas
xchg
or
jl
and
mov
push
fnsave
fiaddl
cmp
dec
sti
sti
lods
pop
inc
sub
jb
fucomi
sbb
fstps
inc
clc
jmp
sub
jns
mov
sub
out
aad
mov
or
je
or
sbb
lcall
mov
das
adc
mov
fmull
popa
scas
xchg
xchg
ret
into
push
orb
stos
jp
ffree
cmp
test
decb
fldl
in
mov
dec
into
repnz
loope
in
dec
cltd
pushl
xchg
xchg
adc
into
outsl
rcrb
dec
lret
xchg
dec
mov
add
adc
imul
int3
loop
lret
inc
iret
or
pop
adc
xchg
xchg
or
icebp
fwait
scas
sti
sarb
cmc
adc
jae
adc
xchg
gs
outsb
iret
jo
int3
inc
stos
push
roll
cwtl
outsl
fldenv
les
int
outsl
arpl
sbb
and
and
daa
icebp
movsl
lock
or
jp
dec
jle
sahf
jmp
and
and
mov
in
push
mov
repnz
ja
jmp
cs
xchg
push
out
dec
and
fisttpl
push
ret
aaa
das
cmp
iret
sub
call
mov
xchg
push
ss
xor
xchg
sbbl
sub
xor
outsb
or
movsl
lret
daa
leave
push
mov
scas
dec
inc
mov
xchg
scas
test
xchg
xor
lds
int3
sub
ds
push
das
test
imul
jmp
cwtl
idiv
inc
jo
push
cltd
adc
add
push
adc
push
and
in
subl
push
loope
jp
sbb
xchg
in
sbb
ds
in
mov
pop
push
loope
aad
out
mov
push
inc
fadds
out
aad
addr16
cltd
inc
int3
mov
sbb
in
mov
lahf
sbb
push
mov
popf
sbb
out
pusha
dec
push
loopne
mov
rclb
fsubrl
les
xchg
xchg
push
adc
sahf
lods
mov
inc
xorl
lea
or
inc
sub
jmp
cmovp
loopne
xor
adc
inc
mov
movb
fiaddl
jp
in
sub
and
mov
lock
mov
xor
rcl
xor
test
jle
stos
inc
mov
aad
fistpl
mov
movsb
inc
adc
ds
pushf
test
mov
push
aaa
leave
sbb
pop
imul
clc
add
xchg
push
push
push
adc
js
add
mov
inc
mov
dec
lcall
aaa
std
repnz
jbe
cmp
inc
cmp
mov
cmp
xor
push
or
sub
mov
inc
mov
movsb
movb
mov
dec
movsb
pop
cmp
mov
push
addr16
add
or
jle
jp
xor
xchg
cmp
adc
mov
std
add
or
scas
adc
arpl
cmp
gs
lds
shrb
cmp
pop
or
xor
push
roll
inc
mov
lahf
repnz
adc
lds
xor
mov
add
pushf
mov
arpl
call
mov
loop
cmpsb
movsl
inc
neg
jo
jne
or
add
pop
outsb
aad
mov
arpl
cmp
stos
pop
test
jge
mov
xchg
dec
lret
sbb
js
pop
or
js
outsb
jae
inc
sub
shll
icebp
or
clc
push
out
sbb
push
inc
in
push
push
adcl
push
xlat
test
lcall
mov
rcrb
pop
inc
dec
fidivs
mov
xchg
dec
in
or
xor
push
loope
mov
mov
pop
cld
popf
and
xchg
cmp
movsl
inc
sbb
mov
cmp
leave
sti
cmp
cmp
jge
or
dec
scas
add
js
fstps
jns
and
cmp
or
push
mov
test
fs
ret
mov
jb
adc
push
pop
out
mov
shrb
hlt
ljmp
cmp
or
in
xchg
pop
sub
insl
dec
movsl
dec
jle
mov
lods
jns
add
mov
out
lahf
sub
push
enter
pop
and
es
ret
sbb
dec
and
add
and
or
ffree
lret
repz
and
addr16
aam
cmc
cmp
scas
popa
fsubs
add
pushl
stc
movsl
push
mov
adc
sub
call
mov
popf
sbb
xor
cmpsb
loop
ret
xchg
fdiv
push
leave
inc
cs
xchg
push
in
xlat
insl
pop
mov
das
jg
mov
xchg
sub
adc
aam
dec
inc
into
cmc
sub
add
pushl
out
icebp
fstl
fwait
add
jmp
jbe
test
mov
add
cmpsb
mov
xchg
inc
adc
jno
or
cmp
cmp
xor
les
out
pop
inc
mov
mov
xchg
addr16
sbb
mov
lahf
push
mov
lods
mov
lcall
pop
stc
inc
push
cld
or
push
jnp
or
lcall
js
cmpsl
adc
push
adc
dec
or
out
inc
lds
push
and
xchg
pusha
test
stos
cld
mov
mov
cmpsl
icebp
cmp
or
mov
or
mov
fndisi(8087
pop
adcb
jno
mov
arpl
test
sub
cmp
mov
lods
xchg
out
insl
pop
mov
push
rol
pop
cmp
xchg
mov
je
jo
inc
pop
sub
push
aad
shll
jg
out
mov
imul
sbb
jl
ret
mov
ljmp
rcrl
fadd
mov
mov
fs
jl
adc
icebp
aas
ficoml
call
mov
dec
fistpl
subb
cli
cmpsb
roll
icebp
iret
nop
not
ret
jle
cltd
cwtl
xchg
in
push
aas
sbb
repz
fistpl
add
lock
pop
aaa
stc
sti
lcall
xor
fbstp
pushf
or
movsb
outsb
mov
or
out
lds
cmp
mov
push
out
cs
inc
push
or
push
mov
aad
sub
mov
jmp
xor
pop
out
push
out
xor
and
sub
pop
sbb
arpl
pushf
add
pop
add
xor
cmp
in
cmpsb
pop
push
and
add
xchg
push
and
adc
mov
rcl
sbb
jb
mov
fiadds
and
fmulp
leave
mov
mov
and
aam
mov
dec
movsb
sub
mov
aad
xor
movsl
test
cmp
and
xchg
push
fsubrs
cmp
enter
xchg
xchg
inc
jmp
out
sti
ja
movsl
xor
pushf
loope
aaa
pop
insl
inc
push
push
int
into
shlb
jo
sub
repnz
mov
inc
bound
loopne
dec
movsl
out
dec
mov
xor
mov
mov
or
sub
xchg
das
mov
pusha
ret
sbb
cmp
inc
jae
insl
add
mov
xorb
and
mov
push
cmp
cmp
dec
jns
loop
pop
cmp
add
scas
out
jmp
dec
push
dec
pop
lods
push
jns
loopne
inc
adc
shlb
testb
mov
xchg
fcoml
cmp
stos
mov
lret
iret
cmpsl
xor
mov
movsl
push
mov
int
out
and
dec
push
xchg
cmp
sub
push
or
mov
int3
push
pop
fwait
or
hlt
add
cmp
jb
popf
aas
pop
mov
popf
sbb
aam
and
and
mov
xor
popf
cmc
orb
mov
xchg
mov
stos
es
add
jnp
pop
inc
imul
insl
jl
sub
dec
rolb
test
cmpl
lods
jnp
sub
fldt
sbb
in
xchg
dec
lret
cmp
mov
sbb
mov
loope
test
xchg
lods
mov
inc
addr16
mov
jmp
xchg
pop
xchg
dec
in
cld
and
ficompl
sarl
iret
or
sti
mov
xchg
enter
dec
push
sub
loopne
xor
data16
insb
and
inc
mov
lcall
pop
scas
aam
or
inc
mov
icebp
mov
cmp
jle
mov
mov
movsb
clc
mov
fwait
xlat
mov
ds
hlt
aaa
cmp
inc
dec
mov
scas
jp
push
roll
or
sbb
icebp
sysexit
daa
ja
pop
xchg
mov
dec
addr16
push
mov
mov
add
cltd
mov
out
cmpsl
pop
adc
push
popf
mov
add
jb
inc
add
cmp
sub
pushf
mov
dec
mov
enter
insl
insl
mov
hlt
inc
lret
mov
ret
cmp
xor
sub
sub
movsb
int
jecxz
dec
in
xor
fcoml
cltd
imull
test
inc
push
mov
push
pusha
add
in
add
out
repz
lods
cld
xlat
sub
loope
rolb
push
test
aaa
push
pop
je
add
cli
insb
add
fnsave
cld
add
mov
imul
push
ljmp
jle
int3
lds
pushl
mov
jbe
in
aaa
push
xor
xchg
rcrl
mov
xor
jnp
push
aad
call
xchg
into
cwtl
sub
lcall
rcll
xor
push
push
xlat
push
and
out
int
pop
sbb
adc
push
dec
xchg
push
mov
and
xchg
fmull
adc
cmc
inc
dec
and
cld
pop
scas
lods
outsl
andl
in
inc
pop
rolb
test
push
push
adc
pop
pop
jae
add
push
xchg
mov
icebp
frstor
lock
inc
xchg
bound
sahf
aad
ds
and
inc
mov
loop
lea
in
enter
daa
leave
or
push
push
pop
adc
push
jns
sub
jl
jge
in
movsl
je
mov
adc
mov
mov
pop
and
xchg
imul
in
rcr
ss
dec
imul
roll
out
jmp
xor
xlat
mov
mov
nop
ficoms
xchg
js
dec
or
sbbl
sub
cld
test
add
pop
ljmp
out
mov
push
pop
mov
lds
lahf
jmp
dec
add
lcall
jmp
dec
sti
mov
jb
adc
inc
xor
lret
pop
xor
test
imul
xor
scas
es
cmpsb
ror
addr16
fldcw
dec
sbbb
cltd
xchg
mov
mov
pop
or
dec
cmp
mov
mov
adc
andb
sub
bound
pop
push
pusha
push
mov
call
jge
inc
insb
fisttpll
sti
stos
imul
jp
xor
dec
addr16
jle
mov
mov
or
enter
fimuls
jp
popa
pop
sub
daa
mov
test
mov
xchg
jne
mov
cli
sbb
call
dec
mov
icebp
jp
aaa
cmp
lods
scas
cmp
or
inc
mov
sub
lds
xor
mov
out
mov
divl
loope
pop
inc
aaa
push
jbe
adc
ror
ret
insl
pop
xchg
cli
pop
xchg
shll
test
lods
out
mov
adcb
mov
dec
pop
out
and
fiadds
shlb
clc
jp
movsl
les
xor
mov
jmp
xchg
rclb
and
test
loopne
sbb
inc
int3
mov
scas
cli
jo
ljmp
jb
jns
ljmp
sub
sub
sub
fdivrl
jg
xchg
data16
mov
ret
mov
adc
pop
and
sbb
rorl
test
out
jb
inc
gs
or
mov
xor
dec
add
sbb
orb
outsb
fcompl
je
out
or
outsl
mov
or
pop
jge
adc
pop
xchg
adc
or
loope
mov
test
xor
xchg
mov
int3
mov
mov
xchg
mov
add
dec
push
sbb
sbb
stos
jmp
data16
in
inc
scas
sbb
lcall
and
xor
gs
fildll
imulb
mov
mov
adc
inc
ja
inc
add
mov
jg
int3
sbb
insl
dec
mov
mov
mov
add
in
jle
cmpsb
inc
inc
cmp
test
push
jne
and
out
mov
ret
sub
scas
bound
dec
jl
in
fbstp
popa
xchg
cmp
aas
cmp
fdivl
dec
dec
push
push
lahf
push
fldcw
cld
mov
jmp
icebp
sub
inc
cmp
jp
fnstcw
jne
popa
dec
mov
aaa
mov
jge
sarl
es
dec
xchg
psllq
xchg
mov
int
stc
push
ss
mov
mov
or
mov
ret
xor
mov
pop
jmp
sbb
in
hlt
div
cmp
xor
out
or
sbb
movsb
adc
insl
insl
jno
stos
push
inc
mov
jmp
jl
or
jp
mov
fistpl
pop
test
xor
jb
xor
mov
mov
jo
xor
push
sub
cmpsl
mov
imul
cmpsl
dec
cmpl
clc
ret
dec
test
mov
push
or
cmp
xchg
sub
xor
jo
scas
pop
int
rcrb
dec
lds
jns
daa
das
mov
lea
std
dec
jmp
cld
inc
test
stos
fs
jae
xchg
mov
ror
pop
cli
mov
mov
jnp
js
sub
rorl
cmp
sub
iret
pushf
push
ja
inc
aas
divb
dec
mov
pop
je
pop
mov
loopne
and
aam
xchg
bound
xchg
in
ret
sub
pusha
jle
cltd
pop
out
es
iret
test
fwait
sbb
jmp
adc
cmp
xlat
push
or
rorb
pop
jecxz
repnz
sbb
and
and
lret
int3
cmp
sub
mov
adc
test
sbb
xor
or
cmp
add
mov
mov
mov
ficoml
in
push
inc
dec
aaa
ret
jg
adc
add
fcmovb
pop
ljmp
daa
pop
jg
sbb
enter
jbe
push
push
cli
jge
fs
lds
push
add
mov
cli
inc
inc
jle
jecxz
add
add
dec
test
push
pop
sbb
bound
pop
popl
stc
in
mov
pop
jp
inc
jns
add
add
sbb
pop
shr
stos
jb
jo
push
xor
popa
hlt
lods
dec
out
aas
js
into
loop
sub
mov
push
sbb
mov
jns
push
push
sbb
shlb
sub
jg
jo
add
jno
dec
adc
rcrl
dec
dec
xor
jl
jg,pt
cmp
xor
leave
push
movzwl
add
ljmp
std
loopne
pushf
adc
mov
fwait
repz
or
adc
stos
cmp
adc
dec
or
ret
es
or
mov
mov
bnd
cld
inc
pop
add
leave
sbb
sti
sub
mov
imul
dec
test
and
or
or
stos
ret
adc
lds
icebp
pusha
mov
xchg
mov
in
out
shl
fistpll
es
and
aaa
push
aaa
mov
or
cmp
rep
xor
xchg
pop
ljmp
push
daa
add
mov
cltd
fdivr
or
fsub
jecxz
clc
sub
inc
movsb
shlb
inc
pop
andb
and
mov
pop
inc
sarb
pusha
dec
sbb
jbe
enter
adc
xor
jl
adcb
push
push
lahf
stc
sub
fimuls
sbb
push
xchg
push
cmc
stos
jp
fiaddl
push
or
and
jle
stos
es
js
lea
bound
fucomip
imul
xorb
in
dec
adc
xor
sbb
jae
repz
push
mov
nop
call
sub
jg
out
aas
cld
xlat
add
pop
into
dec
ret
xchg
sub
xchg
adc
adc
test
or
test
xor
jge
lret
scas
out
jecxz
repnz
fldt
lahf
lret
faddl
aam
adc
fucom
mov
ret
loop
out
push
mov
pushf
js
push
xchg
rcl
xor
jp
in
stos
add
lods
sub
inc
jb
mov
sahf
lret
and
push
xchg
xor
enter
mov
cmpsl
bound
div
mov
inc
cmp
fsubl
sub
fildl
or
or
lahf
jbe
add
sub
jg
mov
pushf
push
inc
xor
mov
imul
mov
fldcw
add
mov
lret
das
inc
xchg
push
scas
pop
insl
nop
stos
rol
lods
js
add
mov
jp
push
orb
pop
lret
add
inc
and
aas
imul
sub
mov
aas
push
and
and
cmpsl
mov
icebp
fnsave
ret
pop
lea
sahf
jae
jg
mov
mov
and
adc
int3
insl
outsl
data16
fsubrl
jle
xchg
subb
cmp
mov
lea
je
mov
xchg
cmp
dec
sbb
cmpsb
inc
fwait
daa
loopne
push
out
jecxz
and
lahf
adc
pop
add
subl
nop
xlat
adc
test
mov
push
inc
enter
xchg
bound
insb
faddl
cld
je
divb
xor
arpl
xor
mov
inc
sub
clc
mov
nop
xor
pop
sub
loopne
and
in
sub
add
xor
fidivrs
sub
inc
stc
repz
fdivr
fs
adc
sub
int3
repz
jo
xor
lret
mov
mov
in
cmp
pop
add
cmp
jae
jne
mov
and
mov
and
xor
dec
push
jae
les
adc
xorl
ret
pop
dec
mov
call
aaa
insl
pop
popa
xchg
push
xchg
fsubs
mov
push
mov
sahf
sbb
cmp
pop
dec
ret
cwtl
outsl
in
scas
arpl
or
cmc
mov
aaa
mov
xor
clc
movsl
clc
outsl
data16
sarb
stc
xlat
pop
or
push
cmp
mov
or
jnp
lcall
aaa
imul
xlat
or
push
shlb
mov
int3
inc
add
dec
dec
inc
push
sub
lret
mov
jae
dec
push
out
sbb
rorb
xchg
inc
fistpl
and
and
fstl
add
test
jge
cmp
cmpsl
aaa
subl
jo
ret
fs
push
js
or
arpl
shll
jle
dec
subb
push
xor
push
insl
out
sub
es
cmp
xchg
mov
sub
in
push
cld
repz
les
in
aaa
fisttpl
out
imul
inc
xchg
inc
fwait
scas
mov
add
lds
popf
sub
icebp
repnz
push
lcall
mov
daa
or
push
xchg
cmc
call
inc
push
icebp
mov
clc
test
imul
pusha
jb
mov
out
mov
mov
sub
fisubl
or
pop
inc
mov
mov
fwait
js
ljmp
lret
adc
outsb
mov
stc
xchg
shll
out
das
dec
out
fistpll
in
test
in
lcall
out
out
cmpsb
repz
sahf
xlat
pop
pop
fcom
dec
fcoml
and
sahf
dec
ss
lds
mov
cmp
and
and
push
outsb
push
out
dec
push
mov
mov
pusha
mov
lret
subl
lods
leave
push
mov
mov
mov
addb
movsl
sub
jbe
cmpsb
data16
dec
mov
dec
and
push
xchg
cs
and
push
outsb
fsub
movsl
xorl
ror
pop
mov
mov
jg
in
dec
pop
int
cwtl
hlt
mov
cmp
ret
adc
push
pop
fwait
es
sub
cmp
test
scas
inc
test
andb
lock
mov
xor
inc
icebp
mov
insl
aaa
popf
and
arpl
xchg
loop
insl
sti
push
push
mov
or
and
jne
out
cltd
xchg
lahf
pop
dec
movsl
mov
push
sub
ja
sub
cmp
mov
push
or
mov
movsl
les
sbb
jno
lret
and
add
ret
push
and
xor
fisttpl
push
sub
pop
iret
cld
test
dec
stc
ds
bound
adc
bound
jns
mov
lock
int
lcall
aas
out
lods
push
inc
jge
dec
xor
outsb
jge
aaa
jle
mov
fs
nop
loope
inc
fstpl
sbb
xchg
test
stos
sbb
imul
push
ds
jns
divps
push
adc
lea
and
inc
call
shlb
jl
jo
jge
or
mov
sbb
pop
jb
dec
ret
sti
push
imul
addb
sub
push
jb
or
xchg
push
mov
lret
push
cmp
outsb
popa
xchg
jae
imul
aam
inc
mov
jl
lahf
insb
loopne
inc
enter
pushf
xchg
je
push
pusha
adc
mov
xor
pushf
pop
jne
dec
cmp
cs
pop
insb
lcall
ret
popf
add
push
lea
fs
jmp
fcomi
shr
imul
xchg
ret
adc
or
and
sahf
inc
inc
lock
mov
xlat
fwait
ds
mov
mov
or
in
scas
pushf
push
mov
fiadds
hlt
mov
and
or
cltd
push
les
xlat
and
mov
aaa
dec
and
or
cmp
xor
pop
int3
shlb
fst
sti
data16
push
cwtl
aad
leave
popf
lret
push
movsl
xor
cmp
int3
inc
sahf
ret
stc
stos
push
xchg
push
ret
sti
sbb
cmc
xlat
push
outsl
mov
dec
aas
sbb
aas
popa
lcall
pop
xlat
cmp
rcr
push
aad
loopne
adc
movsb
cmc
push
cmp
in
or
mov
sub
in
js
inc
jmp
ljmp
imul
sub
je
adc
mov
push
mov
jbe
push
mov
xor
cli
adc
xchg
stc
lret
mov
and
add
and
push
jge
jb
hlt
fmull
jae
mov
ss
push
std
std
and
cmp
jp
mov
into
adc
and
jo
fisttpll
adc
push
xchg
rcrl
ret
subps
pushf
mov
lret
push
nop
movsb
lock
mov
add
mov
int
loop
jmp
idivl
jb
cmp
data16
rolb
dec
cmpl
fwait
dec
sub
adc
sbb
insb
aad
mov
pusha
add
lock
shll
pop
rcl
adc
addr16
repnz
cmc
pop
int
xchg
sbb
into
push
sub
pop
adc
ficomps
ret
jne
mov
outsb
push
dec
push
dec
push
mov
jmp
dec
out
pusha
or
je
lret
stos
lret
lcall
in
nop
mov
pushl
or
sbb
push
mov
cmc
mov
scas
dec
sub
push
and
lea
add
leave
fs
shrb
push
hlt
addr16
insl
lcall
mov
mov
aas
jg
push
mov
mov
rcr
loope
ror
ljmp
test
cld
mov
push
das
ret
xchg
add
dec
mov
mov
inc
movhps
pop
pop
mulb
fsubrs
mov
jl
arpl
daa
clc
and
loop
sti
and
icebp
inc
lds
pop
mov
addr16
mov
or
mov
mov
test
shlb
cmp
mov
fwait
inc
int3
mov
or
cmpb
pushf
subb
dec
xor
rolb
filds
icebp
and
fwait
scas
add
gs
pop
or
cmpsl
lods
dec
fcmovne
lods
repnz
mov
mov
or
or
rol
mov
loope
in
mov
add
inc
dec
xor
aas
pop
or
int
sbb
fidivl
fisttps
push
loop
in
scas
sbb
aas
call
repz
mov
cmpsl
pop
aam
ja
and
loopne
sub
imul
mov
pop
or
xchg
ret
vandnps
mov
dec
sbb
ja
pushf
aas
xchg
add
sub
icebp
xchg
fnstenv
lahf
jnp
cmp
push
xchg
icebp
rol
int3
out
cmpb
test
mov
outsl
xchg
in
mov
cmp
dec
mov
push
scas
aad
adcb
cwtl
cmp
outsl
rcrl
push
fnstcw
cmpsl
pop
mov
cmp
gs
adc
pop
xor
test
inc
in
cli
mov
cmp
call
test
mov
clc
push
cli
mov
adc
sbb
sub
les
enter
push
popa
out
call
in
loopne
shll
sahf
mov
movsb
icebp
jg
icebp
xchg
sub
pushf
icebp
sub
or
in
cmc
adc
pop
pop
sarb
lret
arpl
and
pusha
inc
xchg
dec
arpl
mov
and
mov
push
out
mov
call
movsb
jecxz
adc
repz
pushf
in
jle
insl
in
adc
jb
xor
xor
shrb
popa
pop
pop
idivl
outsl
sub
movsb
dec
mov
mov
cmp
lods
popf
add
int3
shlb
decl
aas
pop
fidivl
xchg
sbb
imul
les
int
add
out
popa
in
stc
push
sub
mov
xor
xchg
mov
jmp
add
mov
xchg
test
jb
xchg
outsb
add
push
push
pop
dec
repnz
stc
jne
fwait
xchg
pop
stos
orl
cmpl
inc
adc
xor
add
ljmp
and
or
cmp
inc
faddp
in
pop
mov
jnp
mov
es
fdivrl
in
jmp
mov
lock
lock
sbb
lret
lea
es
scas
push
xchg
add
mov
dec
sbb
lock
add
and
imull
lret
loope
jb
ja
loope
and
inc
inc
loop
loopne
xor
cltd
cltd
xor
xchg
cmp
hlt
test
xor
div
adc
outsl
aad
jb
setae
dec
insb
shr
imul
fstps
mov
pop
push
and
ficoml
xchg
jle
push
xchg
or
jb
out
nop
pop
arpl
in
cmc
int3
icebp
repz
jl
ret
fucom
das
pusha
or
dec
mov
jge
lcall
mov
or
mov
pop
fisttps
pushf
icebp
cmp
inc
iret
or
push
adc
adc
sub
and
test
jae
jnp
jno
in
lret
test
test
mov
loope
cmp
out
negb
inc
and
inc
and
mov
mov
sub
xor
in
and
loopne
mov
xchg
pushf
mov
mov
pushf
xchg
ret
jecxz
jo
push
out
add
sbb
daa
call
pop
cltd
rclb
jmp
dec
cmp
cmp
icebp
mov
in
mov
jno
push
mov
sbb
pop
cmp
mov
nop
xor
push
sbb
stos
arpl
and
ret
imul
mov
repnz
div
mov
pop
push
mov
ds
adc
pop
dec
fisubs
dec
sbb
pop
fsubs
shl
sub
jge
xlat
repnz
mov
ss
sub
pop
fs
sti
dec
movsb
int3
rorl
pop
mov
mov
test
sti
lock
ret
xor
jns
cmp
into
in
test
mov
lds
sub
cmc
jg
add
in
pop
add
ret
fcmove
or
fildll
cli
mov
xchg
in
cmp
pop
and
mov
push
repz
jo
add
or
sbb
addr16
lods
sub
dec
decb
jnp
lods
push
dec
outsb
mov
cmp
jge
inc
int3
fldl
add
fwait
push
lret
shl
data16
ss
jo
and
xlat
push
inc
adc
cmp
lret
imul
je
mov
mov
sub
addl
cmp
pop
loope
pop
sbb
mov
mov
lods
nop
iret
in
xlat
rorl
dec
clc
dec
and
pop
movb
pop
adc
jmp
jne
pusha
jnp
dec
xchg
es
add
xchg
cmpsl
mov
ret
inc
xchg
adc
cmc
cltd
xor
dec
dec
push
xor
pop
in
cwtl
jo
nop
imul
mov
mov
hlt
inc
loop
lret
int3
push
in
and
sbb
int
in
negb
or
jnp
divl
sub
mov
push
mov
call
loope
adc
call
outsb
mov
pop
cld
roll
data16
hlt
test
jmp
pop
dec
mov
push
adc
dec
aad
pushf
push
in
loope
js
pushf
dec
push
push
pop
xchg
xchg
adc
push
data16
jbe
xor
mov
xor
in
sub
cmp
pop
insl
ds
clc
and
loop
mov
mov
sbb
ljmp
pop
dec
jae
sub
cmp
leave
lods
aas
sbb
and
call
and
out
pushf
pushf
icebp
mov
lods
in
rolb
pop
dec
jns
sub
sub
loop
push
adc
push
xchg
lret
push
fcomp
jl
daa
lahf
fs
sub
aam
add
xorl
sbb
movsb
and
test
jecxz
iret
mov
test
push
pop
out
jns
xor
shll
jb
inc
push
sub
divl
jmp
xchg
subb
adc
lods
ja
inc
add
or
test
jnp
push
das
cmp
mov
repz
out
push
sub
xchg
mov
jmp
in
aad
rcrb
adc
adc
lahf
pop
data16
sbb
or
xchg
push
in
jge
mov
cmp
ja
test
sbb
or
rcl
aas
xchg
and
or
addr16
mov
xchg
cmp
cwtl
jb
out
fwait
mov
pop
pusha
iret
shlb
fs
cltd
hlt
loop
or
out
bound
mov
mov
inc
es
mov
int
out
jo
jns
push
cmp
lahf
lds
lret
xchg
mov
xor
ss
and
and
rorb
mov
cs
fcmovbe
sub
sub
data16
lcall
fidivl
repz
adc
insb
sub
cmpsb
lock
mov
adc
pop
in
insl
xor
mov
and
push
es
push
add
daa
push
lods
int3
pop
test
push
arpl
mov
fidivrl
gs
mov
push
or
stos
int3
mov
push
adc
ds
out
mov
frstor
xor
mov
jl
rolb
out
shlb
xchg
stc
xorl
dec
xchg
addb
add
push
or
iret
lcall
sub
ret
jmp
sbb
out
adc
pop
lret
stos
adc
mov
fcomi
mov
stos
mov
setbe
repz
fs
stos
hlt
inc
jp
outsb
pop
xchg
jmp
out
xorl
jne
mov
xchg
fwait
push
out
lahf
push
mov
out
sbb
aas
cltd
or
xchg
xchg
int3
xor
inc
pop
adc
add
gs
mov
mov
ss
inc
aaa
pushf
in
and
xor
imul
pop
repnz
iret
pop
and
sbb
pusha
icebp
loopne
mov
pop
lds
cs
jno
fstpl
fidivs
std
clc
loop
pop
dec
cld
sbb
testl
rcrl
mov
xchg
sub
dec
and
push
pop
aad
mov
mov
xor
cwtl
push
fidivrs
hlt
adc
jnp
rcrb
insb
inc
mov
push
dec
sub
imul
js
scas
out
sbb
xor
mov
pusha
mov
push
shr
pushf
mov
icebp
and
inc
mov
pop
outsl
pop
lds
dec
jnp
or
outsl
dec
jno
jl
repz
iret
subl
mov
sti
xor
cmp
cmpsl
mov
mov
leave
push
ret
das
fsubs
popf
popw
bound
cmp
mov
movsl
add
in
int3
and
xchg
dec
add
sqrtps
push
sbb
clc
sub
cmp
aaa
outsl
push
in
icebp
pushf
decl
push
sub
dec
fwait
das
int
sub
xchg
shlb
push
dec
mov
mov
mov
iret
add
out
pop
popf
pop
sbb
mov
dec
inc
les
pushf
push
cmp
aam
xor
aad
sahf
pop
push
fsubr
lods
cld
unpcklps
outsb
and
mov
in
sub
add
xchg
das
pop
aas
jle
int
fmuls
icebp
xor
or
shll
ss
jle
andb
adc
fs
jge
dec
or
pop
ljmp
sub
jg
xchg
mov
lahf
fidivl
adcb
and
std
lock
xchg
sbb
lock
sbb
in
stos
test
outsl
mov
xchg
in
lahf
adc
sub
push
cwtl
xchg
out
fxch
ret
sbb
jge
push
xchg
daa
stc
outsb
imul
mov
mov
es
mov
aas
jg
jle
pusha
sbb
pop
mov
push
scas
and
mov
es
cmp
mov
lcall
sub
cmp
loope
push
push
cmp
pop
mov
pop
or
fsubl
sub
loop
sbb
push
cmp
sbb
xor
lods
ja
mov
loop
cmp
cmp
jno
add
push
mov
push
aam
mov
push
lret
scas
in
movsl
lock
fmull
add
add
mov
add
mov
stc
or
pop
xchg
mov
inc
pop
dec
add
ret
pop
iret
fimuls
cs
cmp
mov
es
lods
imul
xchg
push
das
out
rolb
mov
xor
jne
inc
in
loope
call
mov
dec
test
daa
out
push
enter
push
jmp
pop
push
jg
insl
sub
out
push
orb
mov
in
xchg
in
std
jge
out
in
xchg
and
xor
dec
mov
and
or
mov
mov
gs
insl
inc
push
cmp
adc
adc
sub
ret
cmpsb
test
mov
xchg
sub
sbb
cmpsl
call
aas
decl
jns
ret
stc
fcmovnu
in
ljmp
stos
inc
sub
mov
mov
hlt
imul
addb
outsl
inc
clc
sbb
ret
movsl
cmpsb
stos
in
in
jecxz
int
and
scas
sub
in
jmp
jl
cmp
inc
dec
or
cmpsl
pop
scas
mov
das
mov
int
mov
xchg
and
dec
jb
jge
push
cld
ds
lahf
lea
dec
cltd
inc
dec
jg
lret
mov
test
cmpsb
mov
dec
push
int
mov
aam
and
mov
pop
lds
push
push
xchg
jo
xchg
sbb
ffreep
imul
adc
dec
not
cmpsb
addb
xor
rcrb
fsubrl
insb
and
rol
scas
cwtl
sub
lahf
mov
jo
sarl
lret
int3
pop
xor
loop
lahf
test
ja
xchg
ja
movsb
pop
in
ror
es
mov
cmovle
cmc
std
fbld
adc
push
jns
lods
lock
jb
into
xor
movsl
sub
cltd
push
mov
iret
fdivr
jg
sub
sbb
bound
inc
add
jmp
jmp
cmp
hlt
lret
xor
cmp
add
and
dec
imulb
loop
js
cwtl
sti
stos
push
xor
mov
sub
pusha
movsb
pop
dec
popf
push
jae
sbb
sti
fstpt
pushf
pop
xor
fwait
push
xchg
dec
outsb
lea
and
dec
shr
arpl
mov
pushf
fwait
xor
xchg
mov
mov
lock
out
mov
test
jb
sub
sbb
sahf
cmp
dec
pop
int3
test
or
and
jge
fsubrp
xchg
cmpsb
je
leave
dec
cmc
jnp
int3
sbb
mov
and
pop
dec
fnsave
das
int3
jnp
push
ficoml
negl
add
cmp
lret
iret
data16
xorl
inc
push
pop
jmp
push
cmp
ss
ljmp
adc
jp
and
pop
daa
in
mov
push
gs
dec
jbe
or
js
out
icebp
pop
outsb
xchg
or
xchg
mov
jne
adc
mov
adc
daa
mov
dec
xchg
cld
es
adc
les
fiadds
dec
mov
test
sub
jb
mov
mov
mov
aad
add
iret
cmpsl
push
push
pushf
in
lahf
mov
push
into
add
hlt
inc
and
mov
insl
mov
mov
mov
lahf
push
adc
cmc
mov
sahf
xchg
mov
out
lock
inc
xchg
cld
jg
mov
cmpsl
popf
imul
jge
lods
mov
push
xchg
daa
jge
iret
fwait
inc
shr
pusha
jns
mov
or
out
mov
fs
xchg
xchg
lods
fldenv
and
popf
sbb
and
fcmove
mov
dec
ret
xor
dec
mov
mov
mov
mov
fisubrl
cmp
sub
inc
repz
sbb
jecxz
daa
inc
mov
pop
scas
push
scas
pop
cli
xor
loope
fs
lds
lea
idivb
outsb
daa
push
jecxz
popa
mov
push
push
add
inc
pop
sti
xor
mov
paddusb
cmp
mov
push
cwtl
xorb
and
dec
rol
clc
addl
dec
sbb
aad
mov
movsb
ljmp
iret
in
test
dec
cmp
mov
push
pusha
add
sarb
es
shrl
sbb
sub
clc
xchg
lret
fsubr
cmp
popf
pop
mov
jmp
fisttpll
push
mov
pop
div
ds
xchg
mov
pop
arpl
sub
and
add
stos
mov
movsl
inc
sti
cmp
jp
push
mov
sub
push
dec
mov
adc
loopne
sbb
nop
jl
mov
cmc
sbb
sbb
dec
sub
sub
out
mov
mov
adc
xlat
pop
leave
jnp
sub
push
sti
ja
pop
inc
imul
mov
data16
popf
scas
xchg
jbe
pop
xorl
xor
cmp
gs
xchg
push
inc
les
sub
shlb
cltd
movsl
xor
cltd
cli
jmp
ja
sti
pop
enter
loopne
xlat
xchg
cltd
adc
dec
in
out
gs
cmp
stos
xor
mov
imul
ljmp
cmp
fsubrl
popa
add
sbb
dec
mov
or
std
mov
mov
cmp
cmp
or
fcmovb
sbb
xchg
out
aas
mov
push
ret
rcr
jns
cmp
cmp
push
cmp
pop
sbb
fs
std
adc
jmp
lods
mov
push
in
mov
sbb
jbe
jg
repnz
and
xor
imul
xchg
inc
add
pushl
mov
hlt
dec
inc
fdiv
or
sub
mov
push
mov
xor
add
or
arpl
daa
mov
sti
xor
addr16
sub
inc
movsb
shll
push
and
loop
daa
addr16
int3
lds
movl
imul
imul
push
mov
loope
mov
mov
mov
int3
jmp
stc
inc
daa
test
sub
ret
add
adc
and
popa
setno
push
dec
mov
dec
test
ljmp
sub
add
cmp
mov
fists
push
push
push
lock
add
and
mov
cmp
push
cmp
sar
fnstenv
cltd
stos
in
call
pop
xchg
mov
lret
test
loopne
xor
inc
mov
popa
stc
pop
mov
dec
or
mov
fsts
mov
dec
gs
test
mov
lret
dec
xchg
mov
sbb
sub
fdiv
xor
decb
xchg
dec
mov
mov
in
push
outsl
dec
ja
xchg
mov
mov
movsl
jnp
push
dec
and
movsb
idivl
inc
mov
or
vunpcklps
sub
popa
and
add
and
incb
shll
repz
out
out
push
outsl
flds
mov
pushl
push
not
mov
pop
xchg
adc
dec
sub
or
insb
push
lock
inc
adc
lea
test
and
dec
pop
in
mov
dec
dec
es
das
roll
xchg
adc
ja
add
stos
cmpsl
push
ret
cli
cmpsl
mov
icebp
scas
fstpt
push
ljmp
scas
orb
out
repnz
or
mov
nop
xchg
pop
pop
push
xor
adc
cltd
cmp
clc
cmp
mov
xor
stc
or
pop
fdivrp
ds
xor
fidivl
xor
mov
jp
push
push
xor
rorb
push
sub
bound
xchg
nop
add
lret
fldt
fisttpll
push
jmp
inc
bound
xchg
loopne
pop
pop
jl
jno
repz
xchg
in
lds
lret
mov
out
adc
ljmp
push
rorb
jbe
ds
in
add
shll
rclb
sbb
and
imul
dec
mov
xchg
dec
mov
push
inc
adc
mov
scas
xchg
dec
test
das
adc
sarb
xor
jl
es
dec
pop
out
mov
adc
adc
ret
mov
lea
into
in
fsubrl
dec
sub
das
xor
and
sub
dec
aam
fcompl
out
xchg
mov
rcll
movsl
mov
sub
test
push
out
push
jmp
aaa
loope
jmp
lods
mov
movsl
lds
stos
mov
scas
fnstcw
sarb
jp
inc
das
imul
sub
mov
push
mov
lcall
lahf
addr16
cmpsl
jnp
insl
adc
insl
jl
sbb
push
cmpb
jno
lret
divl
fimuls
hlt
inc
xor
push
fidivrs
in
jl
mov
jmp
or
mov
jg
decl
adc
lret
subl
popa
repz
jge
enter
pop
xchg
or
or
mov
stos
mov
mov
add
insl
inc
cwtl
mov
fdivrp
arpl
shrl
adc
xchg
sbb
fldt
das
gs
pop
xchg
or
negl
sbb
pusha
ss
out
out
sbb
popf
add
sbb
adc
push
outsb
push
fwait
xchg
in
ret
aaa
fs
out
xchg
fisubrs
add
int3
adc
test
mov
das
mov
adc
cmc
or
stc
cmpsb
es
mov
add
rorl
sub
jnp
inc
jp
dec
les
push
cmp
cmc
outsl
xchg
pop
and
jno
ja
mov
mov
pop
and
xchg
sub
pop
int3
cwtl
jge
in
int3
test
jl
inc
test
ficomps
xor
dec
dec
jne
pop
aaa
movsb
arpl
cmp
mov
shl
adc
push
jbe
ds
jecxz
iret
add
pop
ds
cltd
xorl
push
jge
pop
xchg
push
sub
mov
mov
cmc
inc
lods
jbe
leave
xchg
insb
repnz
pop
push
jnp
movsb
stc
or
pop
xchg
xor
outsl
mov
pop
inc
out
push
xor
pop
lea
or
mov
int3
add
nop
in
cli
enter
add
sbb
daa
int
xchg
jecxz
jmp
nop
mov
cmpsl
or
inc
cs
sbb
stos
scas
movsb
pop
mov
pop
mov
inc
mov
popa
or
fiadds
sub
aaa
sbb
pushf
movsl
movsb
pop
lahf
lret
pop
repnz
icebp
jbe
sub
stos
inc
icebp
dec
mov
sbb
dec
lea
jns
ljmp
lea
sub
jg
and
stc
push
xchg
inc
loopne
loop
pop
xor
fwait
aaa
mov
xchg
cmp
popf
call
outsl
lds
ljmp
push
mov
lods
xchg
add
pushf
jg
adc
repz
or
std
sub
out
push
and
cmc
cmpsb
pop
push
inc
pop
mov
pop
or
stc
out
xchg
push
adc
fucomp
sub
xor
in
sub
fistpll
sbb
stc
out
or
inc
in
insl
pushf
subl
subl
sahf
jecxz
es
aam
sbb
int3
shr
push
cmp
mov
add
mov
ret
push
mov
dec
das
dec
bswap
imul
cmp
pop
sbb
and
adc
xchg
inc
or
ljmp
punpcklbw
dec
mov
pushf
xchg
jge
adc
dec
fs
popf
jmp
hlt
in
push
subb
call
push
out
pause
fwait
xor
cmc
dec
cmc
add
mov
subb
decl
lock
icebp
jle
icebp
imul
push
inc
jb
call
jnp
stos
cs
xchg
in
xchg
cmp
cmp
scas
push
push
cmp
nop
adcl
xor
mull
dec
call
and
sbb
ljmp
ja
lds
mov
xchg
cli
push
jecxz
add
imul
dec
pop
cld
cmp
imull
cmc
push
add
fcmovb
or
neg
loopne
add
mov
inc
test
insl
lcall
test
lret
movsb
enter
dec
adc
pop
push
mov
mov
test
dec
push
lea
and
fcomps
dec
mov
mov
push
pop
xor
pop
sbb
jno
orb
xchg
pop
mov
stos
scas
pop
sbb
pop
pop
mov
in
imul
fisttpl
arpl
mov
xchg
imul
mov
inc
mov
ret
ljmp
mov
ja
in
xchg
xchg
icebp
pop
push
pop
mov
add
sub
push
test
cmpsl
inc
repnz
mov
xchg
mov
into
fs
mov
mov
cmp
inc
imul
push
lea
lahf
xor
push
into
and
push
or
sti
std
pop
jl
test
adc
fpatan
mov
mov
sbb
insl
pushf
rolb
lcall
or
xchg
add
hlt
mov
jmp
jnp
cltd
fs
or
gs
xor
fisubrs
aaa
jae
xchg
sub
dec
sbb
loope
xchg
lcall
in
shlb
repnz
cmp
xor
push
or
aam
das
sub
inc
push
jns
push
es
std
dec
sub
sti
les
stos
push
sahf
mov
das
js
and
arpl
out
lahf
pop
imul
add
mov
iret
popa
push
call
popl
xchg
mov
xchg
shrb
cwtl
mov
fists
jns
cmpsl
leave
icebp
andl
cmc
push
icebp
repz
shll
xor
jg
nop
jns
or
inc
push
inc
mov
mov
insb
sahf
add
mov
lea
cmpsl
aam
aas
je
cmpsb
inc
decl
das
in
sub
jmp
enter
pop
push
cltd
fildll
mov
inc
sahf
movsb
sbb
test
sbb
xor
push
jno
adcl
adc
add
jnp
fsubr
push
jno
xlat
fisubl
xchg
aam
stc
mov
xchg
cmpl
fsubl
fildl
insb
rorl
ret
push
mov
insl
mov
nop
insb
mov
mov
scas
adc
jmp
popl
mov
mov
stos
ret
xor
dec
shlb
fldcw
sub
insl
jae
mov
loop
or
push
mov
aaa
sbb
mov
inc
out
movsl
dec
fwait
in
mov
xchg
adc
sub
mov
or
in
test
jecxz
dec
sub
xchg
cmp
mov
adc
fcmovnu
clc
cmpsb
mov
scas
and
clc
scas
mov
jae
mov
cmpsb
loop
iret
pop
or
pop
in
sub
adc
dec
pop
xchg
push
out
fsubs
add
or
pop
sub
aad
std
flds
lods
xchg
jb
popf
fidivs
ret
mov
pop
ret
mov
dec
and
ficompl
mul
pop
jnp
or
sbb
and
inc
mov
push
ja
push
out
shl
in
xlat
push
xlat
mov
scas
xchg
int
es
mov
in
shr
add
stos
rcr
test
cmc
ret
popf
movsb
inc
xor
punpckhwd
pop
nop
mov
jne
xor
out
adc
xchg
fld
inc
in
mov
push
mov
push
mov
mov
outsb
mov
and
rcll
daa
lods
xchg
test
int3
pop
sub
jbe
fmuls
push
mov
mov
cwtl
pop
imulb
sub
push
jge
push
out
and
in
xchg
fwait
in
loop
pop
lahf
inc
mov
andl
inc
ficoms
lahf
dec
stos
in
sub
dec
or
dec
jmp
fdivl
jmp
ljmp
cmpsb
jp
cmpsl
into
ss
loop
pushf
cmp
sti
adc
loopne
sti
mov
inc
lret
hlt
mov
lods
popf
cmp
sbb
shll
push
xor
out
and
lea
test
fldcw
mov
push
mov
lods
repnz
fs
adc
aad
mov
fs
lock
cmp
aam
xlat
mov
and
push
pop
add
cmc
inc
inc
jbe
pusha
daa
push
in
adc
adc
movsb
mov
daa
adc
mov
sti
jecxz
inc
ja
jmp
adc
pop
loopne
mov
pop
xor
out
js
xchg
cli
pop
jae
ficoms
adc
outsl
addr16
jecxz
fsubr
mov
cmp
jmp
inc
cmp
inc
fadd
add
pop
data16
push
mov
inc
pop
shlb
shl
pop
xchg
cmpsl
ret
mov
push
in
imul
roll
imul
sbb
outsb
scas
xor
push
ja
xchg
sub
mov
adc
out
mov
lret
stos
sbb
in
inc
mov
push
fisttps
pop
mov
pop
test
add
pop
mov
sbbb
or
xor
shl
out
insb
ficoms
xor
cld
push
sti
cwtl
xchg
mov
mov
imulb
adc
mov
std
fcmovnu
inc
aam
test
sbb
or
int3
inc
or
fldcw
mov
mov
cmp
jle
fldl2e
inc
xor
ret
imul
jp
cmp
sbb
mov
cmp
mov
popf
push
out
mull
lods
add
xchg
in
shrb
xor
fimull
jbe
scas
inc
push
sbbb
add
pop
aaa
mov
mov
fstl
pop
sub
xor
rcrl
stos
push
movsb
push
jae
cltd
pop
sub
idiv
es
call
xchg
xchg
cmp
mov
sub
jne
incb
cmpsl
rorl
decb
ljmp
popa
int3
popa
jns
or
mov
lods
or
adc
lds
mov
sbb
xor
adc
dec
cmp
mov
xchg
lea
sbb
pushf
fisttpl
outsb
out
sbb
test
adc
inc
mov
ja
inc
stos
mul
pop
sub
sub
sub
lahf
mov
cmp
and
hlt
sarb
add
mov
jne
cmpb
mov
adc
into
imul
into
ds
jle
mov
pop
pushf
int
fisubs
push
sbb
mov
mov
push
sub
inc
out
scas
or
cmp
xchg
pop
and
not
jl
pop
pop
mov
pop
mulb
jge
sbb
and
sahf
shr
and
imul
out
call
ja
nop
ss
test
call
pushf
lods
fimull
stos
div
mov
aam
mov
cmc
sub
sbb
cmp
and
push
adc
push
xchg
cli
inc
movsl
push
pop
push
mov
jo
jmp
pop
pusha
cmp
mov
lret
push
or
jae
jg
das
fs
xor
push
aad
roll
inc
fwait
movsb
cmpsb
push
movb
add
mov
lods
mov
pop
mov
nop
cld
fs
cmpsb
out
movsb
or
int
pop
pop
cmp
leave
jbe
mov
aam
jg
mov
add
inc
stos
mov
inc
inc
mov
push
jmp
sub
dec
out
insl
push
lret
cmp
jmp
push
push
out
fs
pop
bound
and
xchg
or
into
fs
ret
mov
movsl
and
pop
scas
fsub
mov
cmc
mov
mov
mov
push
push
bound
cmp
loope
les
test
std
dec
mov
dec
jl
sub
fidivrs
fstpl
pop
fdivs
cmp
jp
dec
add
mov
rclb
jbe
insl
ret
mov
add
loop
push
cmp
mov
push
repz
jns
push
in
jg
cld
add
mov
push
es
xchg
pop
rcll
mov
lret
mov
out
mov
ret
roll
xchg
repnz
das
adc
dec
test
push
add
mov
push
xor
or
aad
mov
js
xor
aas
dec
ja
cmpsl
cwtl
or
push
or
jns
ja
push
les
mov
ja
js
outsl
adc
cmp
jl
in
cltd
mov
jbe
xor
push
dec
idivl
clc
rcrl
mov
push
mov
xchg
lcall
jno
nop
mov
repz
adcl
imul
ficoms
js
or
mov
pop
and
mov
pushf
movsl
idivl
jecxz
insb
xor
or
sbb
cmp
int
cld
or
js
pop
jecxz
mov
aas
pop
jecxz
fbld
pop
pop
sub
sti
out
mov
or
xorb
pop
push
ret
into
stos
das
fistpl
lret
lock
mov
or
sbb
in
shlb
lods
xchg
enter
pusha
sub
fcomps
xchg
aaa
fstps
mov
xchg
sbb
clc
add
ja
out
or
or
sar
outsb
jo
inc
shr
adc
xchg
ret
mov
repz
fs
idivl
fisubs
decl
arpl
add
lcall
jp
pop
mulb
push
leave
arpl
jecxz
or
cmp
jns
lret
cmp
mov
pop
mov
push
mov
or
jne
push
adc
and
fsts
or
mov
sbb
cmp
pop
mov
mov
inc
pop
push
leave
sub
jg
xlat
and
push
arpl
test
sahf
sbb
sbb
add
add
pop
pop
es
arpl
xchg
int3
faddp
fcoms
xchg
or
mov
or
cltd
pop
bound
int
cmp
mov
inc
jmp
mov
or
cltd
js
ds
push
mov
fwait
pop
add
cmp
push
mov
fwait
mov
outsl
push
pop
pop
les
or
xchg
xchg
dec
mov
rorb
shrl
pusha
jp
cld
sbb
cmpsl
movsl
jo
and
lods
ficoms
adc
les
push
jg
in
repnz
sbb
push
out
mov
hlt
sbb
inc
outsb
inc
cli
divl
shll
mov
push
and
leave
cmp
int
sbb
leave
cmp
cmpsl
cmp
xchg
push
and
lods
rolb
pop
jo
pop
std
pop
xor
dec
ret
fsts
dec
iret
loop
lret
aad
sarl
clc
jbe
xorl
adc
and
fstpl
test
hlt
or
mov
fdiv
scas
cmpsb
fs
inc
pushf
lcall
cs
nop
xchg
cli
mov
inc
repnz
stc
jp
or
daa
sub
mov
out
sub
stos
cli
subl
push
loop
ljmp
push
clc
cmp
xchg
test
cmp
dec
jnp
sbb
mov
push
mov
cmp
movsb
out
js
ss
ret
sub
icebp
xchg
cmpsl
fcoms
int3
stos
pop
mov
push
int3
sysenter
fcomp
icebp
dec
pop
lods
rorl
test
stos
xor
mov
push
push
cmp
mov
outsl
iret
mov
xchg
add
mov
test
add
imull
mov
mov
les
leave
xchg
jb
fisubrl
push
and
jnp
pop
mov
push
inc
cmpsb
aaa
daa
daa
mov
ljmp
movsb
sbb
ret
xchg
scas
push
mov
pop
sub
add
shrl
sub
shrl
mov
lods
pop
sarb
dec
pop
das
cmp
mov
jle
cwtl
pop
mov
loopne
xchg
mov
call
mov
movsb
xchg
dec
adc
pop
rcrl
mov
jbe
in
in
push
pop
jb
and
xor
je
cld
sub
mov
xor
cs
stos
pushf
fcomps
aad
dec
mov
add
sub
sarl
cwtl
shrb
sub
or
arpl
clc
xor
movsb
imul
dec
sbb
dec
mov
inc
aad
and
jle
lock
sub
mov
and
lods
stc
xchg
cmpsb
cmp
clc
or
adc
lret
shll
push
push
mov
stos
cmpb
andb
mov
dec
jne
out
cmpsl
int3
lods
xor
dec
sbb
sub
jp
push
std
push
pop
sbb
rcll
add
jle
push
fidivl
jo
and
outsb
or
lcall
push
pop
and
cwtl
imul
arpl
mov
and
andl
repnz
popf
inc
dec
push
xchg
sarb
enter
jge
sar
addr16
mov
pop
test
push
and
ljmp
mov
jne
lods
loop
mov
inc
test
and
dec
mov
sub
aam
lock
jbe
test
xlat
enter
sbb
inc
sbb
mulb
push
test
push
icebp
push
lcall
add
push
ret
pusha
mov
adc
mov
sub
stos
mov
lea
adc
cmp
and
ficomps
out
xchg
out
cltd
idiv
in
hlt
mov
sahf
push
int
mov
in
or
sahf
in
fimull
shll
fcmovnbe
rcrl
test
push
in
add
outsb
mov
xchg
dec
decl
fistpll
or
lock
shll
hlt
fistps
adc
pop
popa
insl
fstpl
mov
loop
js
dec
push
push
mov
iret
jmp
lcall
dec
loop
jl
or
xchg
loopne
ret
cmp
test
test
in
mov
add
icebp
xchg
xchg
or
inc
xchg
sti
and
fdivl
ja
lret
loope
add
or
fs
ss
repnz
jo
sbb
mov
mov
mov
aas
mov
pop
repz
jge
mov
das
ret
out
scas
sub
loope
add
pop
add
jl
sub
sbb
or
mov
dec
mov
xchg
jge
pop
adcl
push
sti
mov
int
cmp
cmp
xorl
inc
xchg
or
test
pop
xchg
mov
push
inc
sahf
loop
mov
stos
int3
popa
out
cld
lock
jne
scas
pop
sarl
lods
mov
pop
jecxz
iret
lods
sbb
imul
in
mov
outsb
imul
insl
or
xorl
mov
pop
push
pop
outsl
dec
lret
jb
cmc
daa
hlt
popf
mov
js
jae
jl
inc
fnstcw
mov
cmp
jle
add
bound
insl
cmp
es
and
nop
in
lea
je
or
add
data16
aas
movsb
fucomp
jp
xchg
repnz
lods
inc
mov
push
jl
je
or
push
jp
adc
or
push
loopne
cld
mov
pop
push
ret
aas
popf
dec
mov
or
scas
mov
sub
and
jle
incb
test
pop
xor
xchg
pusha
mov
outsb
lds
ffreep
xlat
xor
arpl
jb
inc
daa
mov
mov
hlt
adc
jbe
sub
stc
aaa
inc
pop
mov
mov
xor
inc
inc
xlat
xchg
lock
xchg
scas
int
insl
jo
sbb
les
mov
mov
or
std
popf
mov
adc
xchg
std
push
xchg
mov
cmp
cs
dec
push
and
and
fidivs
fcomps
xor
pop
dec
sbb
cmpsl
es
jecxz
mov
gs
pop
clc
pop
push
xchg
arpl
pusha
lahf
xchg
xchg
sub
stos
or
rorl
les
pop
sub
enter
xorl
das
rcr
or
jb
leave
ja
aad
xor
fstl
mov
lods
xor
fs
jae
popf
or
sub
pushl
mov
mov
sti
inc
sub
cmp
call
push
mov
das
iret
sahf
outsl
cmc
mov
out
push
pusha
testb
mov
aas
mov
xor
and
pop
jecxz
dec
cmc
mov
dec
sbb
cltd
test
nop
push
cmp
rcrl
cmpsb
adc
roll
xchg
or
dec
fistps
add
fisubrl
in
pop
adc
nop
sub
xor
jl
mov
mov
stos
xorb
daa
mov
loop
pop
pop
repnz
loopne
mov
iret
lret
icebp
cmp
mov
pop
pop
aad
mov
ret
xchg
mov
dec
mov
inc
stos
mov
push
inc
ds
jmp
lahf
dec
inc
mov
push
mov
inc
and
daa
in
jl
push
scas
dec
cmp
sbb
insb
mov
arpl
mov
ret
movsl
fwait
int3
cld
xor
sub
mov
call
js
imulb
je
idiv
pop
int
jo
xchg
scas
adc
add
fsts
sar
sbb
cmc
add
cmpsl
rcrl
cmp
dec
and
jle,pn
icebp
sub
enter
cltd
or
mov
push
nop
ret
sub
xor
mov
sti
xchg
xor
pop
jne
lods
imull
mov
ffree
insb
add
fs
xchg
aad
outsl
les
out
cli
movsb
insl
sbb
cmp
leave
lods
and
push
cmpb
addl
adc
test
mov
sbb
jmp
addr16
cmc
test
rcrl
inc
aad
jae
mov
pop
ljmp
lods
mov
lahf
add
xchg
in
xchg
loopne
je
call
sbb
dec
push
and
test
dec
es
inc
jmp
stos
ja
push
je
mov
xor
mov
data16
inc
js
rclb
or
imul
pop
decb
ret
js
push
sub
std
nop
mov
cmpl
mov
push
xchg
mov
mov
sbb
jecxz
mov
adc
sti
lret
sub
ljmp
in
adc
dec
mov
fs
dec
xchg
aam
pop
pop
shlb
lret
jno
xor
das
ret
cltd
js
call
push
mov
lock
pop
out
pop
rcrb
idivl
cwtl
fisttpll
xor
sbb
test
mov
imul
adc
xchg
in
jo
sbb
leave
lcall
and
xor
mov
fs
cmp
xor
mov
push
loope
mov
or
stc
sbb
ja
adcl
inc
mulb
push
fisttpl
daa
or
inc
push
adc
gs
loopne
stos
mov
xchg
push
aas
test
arpl
adc
call
and
jle
dec
inc
andl
outsl
inc
fadds
shl
jl
mov
mov
sub
inc
fdivs
ja
fsub
cmp
mov
sub
les
insb
sbb
subb
movb
repz
xchg
push
pusha
add
andb
iret
and
outsl
movsb
int3
or
jecxz
add
cmp
pop
mov
push
mov
dec
icebp
mov
or
mov
in
fwait
pushf
xchg
jno
push
xchg
nop
gs
mov
lods
sahf
nop
sbb
out
pop
push
mov
or
mov
les
testb
mov
dec
jns
ja
jne
jmp
in
iret
rcrl
fdivr
test
icebp
pop
rclb
rol
xor
stos
sbb
pop
cmp
inc
mov
mov
shll
add
jg
xchg
popf
sbb
pop
add
push
push
aas
sbb
in
sbb
mov
repz
push
mov
enter
or
nopl
fsub
lods
lock
inc
rol
iret
mov
lret
leave
and
pop
xlat
test
mov
stc
cmpl
sbb
cmpl
fistl
dec
jmp
call
rcrb
inc
fsubs
pop
xor
mov
insl
mov
inc
lds
lret
cs
cmp
int3
movsl
sub
jo
cmp
sbbl
lock
push
cmpb
jne
mov
cmpsl
repz
cs
or
mov
adc
shll
and
mov
mov
sub
fsts
mov
ja
pop
mov
cmpsl
stc
jle
inc
scas
or
imul
and
mov
inc
push
arpl
aad
cmp
mov
movsl
xchg
push
jge
cmp
das
add
mov
or
mov
lea
adc
cmpl
ljmp
inc
pop
enter
imul
mov
adc
sub
xor
sti
mov
push
aam
dec
inc
sbb
xchg
test
fbstp
mov
imul
xor
lahf
mov
push
cmp
mov
dec
dec
inc
mov
in
inc
call
and
test
push
inc
addr16
or
adc
mov
cmp
cld
adc
mov
mov
xchg
sbb
dec
call
jp
nop
jns
xor
lahf
gs
jmp
lret
jmp
xchg
mov
cld
pop
loope
sbb
add
pop
cwtl
aas
pop
jg
sahf
les
lods
push
call
sbb
dec
pop
fsubs
fcompl
dec
push
lret
sub
jne
or
cmp
hlt
inc
fnsave
test
in
jae
inc
clc
push
and
frstor
push
adc
adc
in
add
imul
xchg
imul
push
shlb
sbb
push
xor
and
add
loope
cltd
sbb
mov
jno
scas
stc
add
lods
popa
test
fwait
xorb
mov
mov
adc
mov
lock
sti
mov
lahf
lods
fistpll
int
test
inc
push
sbb
or
je
push
inc
xor
mov
test
dec
adc
rcr
scas
mov
aad
sub
pop
jne
mov
movb
jns
inc
adc
lock
stos
dec
pop
cmp
inc
jbe
sbb
stos
lea
cmc
or
js
sahf
mov
mov
out
js
push
push
loopne
add
pop
or
jp,pn
xor
mov
arpl
aas
dec
cmp
out
and
push
test
mov
jmp
jg
mov
mov
fimull
insl
pusha
lcall
mov
mov
xchg
gs
mov
or
add
xchg
adc
ret
push
cs
aad
pop
adc
cmp
adc
dec
pusha
jae
mov
cld
mov
adc
jnp
xor
lcall
xor
pop
mov
out
lcall
enter
in
std
mov
std
outsl
mov
sub
adc
xchg
ljmp
push
jg
xchg
cmpl
repnz
cs
leave
add
push
xchg
divl
and
out
stos
iret
jmp
jecxz
movsb
pop
lea
int3
jae
mov
lods
aaa
pushf
jp
or
shrl
insb
addr16
push
int
jp
pop
pop
mov
int
mov
negb
xchg
add
in
mov
or
cmp
add
aaa
or
js
jnp
loopne
jo
lods
filds
adc
outsl
cmpsl
in
fld
frstor
test
xchg
inc
xor
or
cmp
daa
sub
cmp
sbb
leave
testb
in
out
sbb
jne
xlat
mov
mov
push
or
pusha
cmpsl
stos
mov
leave
dec
ret
into
ret
dec
sub
mov
enter
xchg
bnd
jle
shufps
add
mov
loope
negb
xchg
push
mov
lret
mov
repz
or
scas
inc
test
scas
fsubr
xor
popf
mov
mov
inc
movsl
mov
ja
sub
xchg
sub
mov
sbb
popa
add
push
mov
mov
dec
cmp
sbb
std
outsl
inc
adc
and
mov
andl
lret
fisttpl
and
or
lods
push
push
mov
out
lcall
cltd
adcl
dec
js
add
cld
xlat
xchg
mov
test
popa
scas
pop
add
mov
sub
pop
dec
xchg
push
mov
aad
add
mov
push
and
mov
popf
daa
mov
adc
rcl
xchg
and
shll
jp
sub
jge
test
jnp
ds
jmp
or
fidivs
dec
pop
mov
sub
push
push
push
hlt
push
loop
mov
cwtl
dec
int
sarl
stos
sti
or
sbb
inc
pop
cmp
xchg
sbb
pop
mov
lods
cmp
jno
test
push
pop
jmp
or
push
jecxz
loope
or
iret
cmp
outsl
jns
lds
popa
ljmp
cmp
daa
fistpl
call
out
lcall
mov
and
das
cltd
jmp
pop
mov
add
call
enter
sbb
ret
mov
das
pop
imul
bound
inc
fistps
pusha
mov
aaa
adc
push
adc
ss
in
aas
lcall
int3
mov
sbb
push
mov
popf
pop
mov
test
ret
xchg
mov
test
fistpll
push
mov
and
sbb
shll
mov
mov
movntq
or
stos
int3
adc
sbb
stc
test
jmp
in
mov
ja
xchg
lods
out
ficoml
enter
xchg
push
mov
jb
cmp
ficomps
sub
add
mov
int3
and
add
cmpl
sarb
jns
ljmp
add
and
dec
icebp
add
lcall
mov
and
test
inc
inc
mov
lret
testl
js
lahf
jmp
mul
aas
std
into
cs
xchg
dec
jle
test
xchg
leave
fldl2e
adc
in
fcom
or
imul
fisttps
int
sub
sbb
jns
and
scas
lcall
das
ror
and
imul
pop
inc
popf
push
mov
ficoml
lahf
dec
mov
lret
pop
jbe
add
add
add
xor
movsb
xlat
mov
jmp
sbb
sub
sub
inc
jne
xor
push
and
dec
stc
lret
cmp
cmpsb
arpl
fwait
mov
pop
pop
lock
xchg
mov
gs
jb
and
movsl
mov
xchg
inc
cmp
push
lods
jb
mov
cmp
pop
lret
mov
aaa
aaa
pusha
push
fldt
xchg
mov
popa
mov
sbb
dec
pop
adc
jle
or
out
mov
push
mov
sbb
fldenv
insb
xlat
add
cmpsb
mov
std
add
lds
jmp
leave
jmp
cli
xchg
pop
repnz
push
mov
out
loopne
pop
or
pushw
in
out
mov
andb
lret
repz
jno
adcl
mov
out
cmp
imul
das
or
sarl
aas
jae
push
or
or
cmp
lods
sbb
rcll
pop
cmp
jg
cmp
xor
mov
xor
clc
jmp
aam
cli
jmp
sub
or
js
pop
rcrb
popa
faddl
jg
pop
fidivrl
xor
xlat
dec
xchg
insb
inc
mov
dec
and
jl
rcrl
in
cmp
pop
jae
jmp
xchg
or
mov
stc
lock
cmp
mov
leave
cmc
sbb
dec
shr
add
movsl
flds
and
mov
mov
fistl
or
jp
stos
pop
jns
mov
nop
or
rorl
lods
mov
sub
mov
andl
clc
and
gs
jg
inc
iret
test
dec
outsb
cld
lahf
in
push
xor
and
sahf
push
rcr
or
shrb
cmp
sbb
popf
jle
inc
arpl
sbbl
sub
mov
mov
bswap
xchg
sbb
pop
cs
cmc
add
insb
jp
stc
xor
mov
push
call
test
jnp
sti
mov
sbb
movsb
cwtl
lods
sbb
mov
cmpsb
dec
test
aad
cmp
rclb
cmp
mov
xchg
pop
sbb
insl
into
nop
add
mov
loop
sbb
rep
stos
xchg
out
orb
cld
dec
push
aas
les
jg
push
inc
inc
int
mov
or
ret
icebp
not
out
pushf
arpl
mov
mov
adc
loopne
sbb
fildll
or
add
sub
or
out
cld
cltd
adcb
xchg
ljmp
ds
xor
push
mov
sbb
je
jecxz
mov
out
adc
pop
aas
mov
mov
adc
icebp
insl
out
dec
push
lods
push
cmp
push
inc
mov
call
sub
cmp
fs
inc
push
idivb
ja
jp
dec
add
jnp
les
gs
pop
repnz
enter
xor
jns
xchg
inc
mov
mov
xchg
popf
fiaddl
in
fistps
in
xor
sbb
fcoms
popf
cs
push
sbb
or
divb
shlb
push
lock
lods
in
and
jb
adc
or
in
xchg
in
jl
add
insl
shlb
pop
les
ljmp
push
push
push
xor
mov
and
push
xchg
out
jecxz
movsl
push
out
aas
out
dec
mov
lahf
ljmp
lahf
rcrb
lahf
jnp
mov
jle
popf
pop
sbb
and
addr16
int3
inc
xchg
stc
mov
int3
js
testl
rcll
fld
pusha
sbb
cmc
mov
in
icebp
mov
ss
repz
outsb
nop
pop
mov
dec
je
pop
xchg
jns
add
dec
inc
ret
inc
lret
dec
loop
in
jmp
sti
pop
sti
mov
pop
movsl
xchg
imul
pop
and
cmc
int
nop
pop
mov
ja
xor
push
jb
xchg
mov
daa
inc
mov
dec
inc
sub
xchg
sbbl
xchg
sarl
mov
aaa
fwait
in
sbb
mov
mov
out
es
nop
and
pop
xor
xchg
lahf
aam
add
rolb
push
rol
movb
jge
lock
add
repz
push
loope
pushf
dec
cs
shlb
insl
push
mov
jp
aam
or
adc
js
jge
movb
mov
imul
lods
xchg
jmp
pushf
sub
push
test
push
out
jl
pop
mov
fs
cmpsl
xor
pushf
xchg
add
cld
lods
push
sahf
aad
xchg
lret
mov
jge
sub
fiaddl
push
dec
adc
adc
hlt
fidivrs
add
cmp
lea
add
stc
or
xor
fs
adc
jne
inc
hlt
sbb
dec
push
adc
enter
stos
xor
inc
movsl
call
jmp
cli
aad
loopne
push
out
sub
fs
loopne
mov
out
les
ds
sbb
rcrb
iret
std
adc
adc
lods
sti
shlb
inc
dec
sub
ss
mov
jge
inc
pop
sti
push
repnz
out
pop
xchg
loope
mov
mov
pop
pop
xchg
fadd
or
inc
push
jp
data16
adc
or
xchg
shlb
add
mov
cmp
int3
cmp
loopne
lods
shlb
cs
mov
in
adc
and
xchg
mov
mov
lret
push
pop
xchg
dec
cmp
xor
or
push
or
mov
test
lods
sbb
aam
jle
mov
loope
mov
fwait
mov
jnp
leave
imul
icebp
cmp
jbe
mov
loop
fsubrp
idiv
test
mov
jb
int3
mov
vucomisd
outsl
add
sbb
xor
inc
pop
js
addr16
shlb
inc
test
leave
pop
mov
je
push
lret
adc
pop
adc
pusha
rorb
xor
test
push
mov
int
add
ds
add
cmp
loop
idivl
jne
int
sbb
out
lds
sub
mov
in
int3
stc
sti
fisttpll
mov
xor
cmp
loopne
ljmp
mov
lret
lahf
js
inc
shlb
popa
pushf
repz
mov
insl
mov
arpl
inc
ret
das
es
sbb
fmull
and
pop
xchg
adc
lcall
std
mov
rcrl
inc
loop
and
sbb
mov
or
outsb
aam
outsl
lds
cmp
in
jbe
gs
rorb
cmp
aas
xor
xchg
pop
add
cmp
pop
adc
rorl
mov
jbe
inc
aaa
cmp
or
imul
js
push
lea
mov
movsb
call
jmp
sbb
lret
repz
mov
inc
mov
pop
sub
fbld
or
xchg
push
stos
fildll
push
aad
stos
and
rcll
ljmp
gs
enter
add
and
mov
in
popa
mov
fwait
cmpsb
xchg
ret
pop
fisttps
mov
nop
lea
or
dec
inc
push
in
and
loop
xor
loopne
cs
sbb
push
imul
jnp
pop
dec
fwait
xlat
pushf
inc
outsl
jmp
pop
dec
lcall
mov
mov
ljmp
push
test
mov
icebp
add
pushf
fistl
xchg
push
lods
xchg
adc
push
movsl
and
xchg
push
testb
push
mov
mov
mov
jge
inc
popa
dec
mov
bound
and
mov
xor
ret
and
adc
addr16
lcall
cmp
push
add
adc
dec
sahf
fucomi
xchg
adc
aad
scas
sub
inc
xor
push
jnp
mov
adc
nop
xor
jecxz
pop
cmc
repnz
or
or
jne
push
nop
dec
enter
pop
or
jno
jb
xlat
xchg
xchg
cmp
int3
push
inc
dec
rorl
aad
push
sub
decb
xchg
imul
and
xchg
mov
fwait
js
xchg
ss
loopne
pop
fdivrs
adc
outsb
into
push
mov
iret
loopne
or
mov
xor
pop
repz
adc
loop
sub
pop
imul
repz
fwait
int
or
sbb
mov
xor
push
xlat
mov
mov
jb
jmp
dec
int
or
xchg
sbb
jmp
mov
icebp
outsl
xchg
aad
sub
cwtl
fsubrl
push
in
rorb
jle
xor
into
xor
add
dec
pop
cmp
adc
movsb
in
sbb
lds
mov
bound
insl
dec
test
cmp
test
fwait
inc
add
dec
loopne
add
pop
repnz
or
stc
and
cmp
js
mov
sbb
aas
jp
lret
sahf
loop
mov
xchg
outsb
pop
pushf
mov
pop
cld
add
scas
xchg
mov
sbb
sahf
and
fcoms
pop
jle
inc
add
cmpsl
inc
cld
scas
fadd
or
xor
cmp
add
sub
jl
xchg
fnsave
aad
xchg
or
xor
xchg
xor
mov
add
xor
mov
xor
loop
andb
mov
inc
add
test
loop
push
pop
and
sbb
sbb
push
arpl
xor
sahf
or
ret
aas
jmp
iret
fimuls
cmc
push
and
inc
imul
sbb
push
ja
int
sub
aaa
jne
lea
adc
loope
std
mov
int3
push
dec
je
xchg
add
int
jo
sub
push
fsubrs
or
jae
xchg
add
sub
push
cmp
movsb
sub
lret
push
dec
in
mov
dec
sub
jle
outsl
insl
mov
mov
push
sbb
and
addr16
mov
fcoml
ja
mov
push
gs
jmp
sbb
sbb
enter
loope
test
fsubrl
push
mov
out
std
stc
insb
jmp
sub
mov
call
pop
push
dec
inc
xor
inc
sub
mov
add
lret
and
cmp
ficompl
int3
dec
sbb
pop
lds
or
push
mov
push
push
dec
cmp
xchg
out
mov
stos
in
dec
xchg
sbb
test
ljmp
loope
sbbl
xchg
and
fxch
shlb
xlat
mov
jne
clc
data16
mov
test
xchg
adc
adc
inc
cmc
or
push
mov
add
sbb
mov
push
outsb
fs
insb
cmp
hlt
in
jp
data16
mov
out
mov
cs
fs
sbb
and
shlb
ret
mov
insb
insb
fdivrl
sub
pushf
imul
ss
cmp
pop
pop
test
aaa
jmp
pop
cld
outsl
scas
arpl
inc
out
push
pop
pushf
ds
push
add
inc
lds
aaa
xor
sbb
testb
ds
sbb
adc
movups
mov
adc
ss
mov
inc
xor
xchg
jne
or
insl
jl
mov
sbb
jle
inc
pop
jbe
mov
and
adc
jmp
mov
mov
or
mov
movsl
push
jo
hlt
outsb
hlt
into
ss
pop
mov
cs
and
mov
pop
inc
push
or
popf
fisttpll
adc
sub
sub
cmpsb
dec
imul
adc
lcall
sbb
iret
in
sub
fistpll
cltd
repnz
jl
xchg
push
test
inc
das
nop
mov
std
adc
ret
frstor
push
and
xlat
adc
xorb
adc
mov
insb
lcall
or
mov
sbb
subl
aad
mov
out
addl
lea
cmp
cltd
leave
vmovhpd
cwtl
bound
and
clc
outsl
inc
rcl
ss
mov
cmp
adc
or
sarl
push
ret
push
push
xchg
dec
pop
cmp
inc
jo
dec
mov
mov
mov
sbb
popl
mov
add
ljmp
pop
adc
inc
cld
aaa
out
cmp
push
outsl
sub
aam
mov
pop
pop
js
cmp
aam
jae
dec
mov
push
inc
cmp
sarb
notl
sti
jns
jle
jb
add
push
xchg
lret
vpsrld
lret
arpl
fisubrs
ljmp
ret
jg
xchg
inc
jb,pn
pslld
mov
fildll
pushf
out
jae
cmp
add
mov
jnp
nop
push
stc
xorl
test
mov
sarb
jl
ss
add
scas
dec
aam
and
flds
xor
int
push
pop
pop
jge
mov
or
mov
out
push
out
add
mov
mov
xor
out
es
or
rorl
enter
inc
fisubs
ret
stos
xchg
rcl
aam
test
insb
scas
mov
aas
das
sub
jl
sbb
mov
in
enter
data16
divb
insl
pop
rclb
lea
iret
xor
shl
stc
or
test
shlb
ret
movsl
shr
cmp
fcmovb
daa
ret
or
mov
testb
das
pop
xor
sti
cmp
sub
pop
mov
outsb
xlat
mov
mov
push
cmp
mov
dec
cmp
aam
sbb
faddp
cmp
inc
movsb
in
and
push
in
rcll
push
or
imul
lods
sbb
mov
aam
fildl
js
fcompl
adc
cld
iret
pop
jecxz
xor
xor
popf
jecxz
or
jbe
push
sbb
push
es
mov
out
call
push
js
imul
and
xor
pop
mov
inc
bound
jb,pn
test
mov
sub
aas
js
clc
dec
cli
pop
fbstp
or
or
testl
loop
mov
cwtl
fsts
xor
xor
xor
popl
call
adc
int3
xchg
jns
mov
adc
dec
fnsave
dec
add
mov
sti
leave
leave
push
lock
inc
jo
bound
aas
stos
and
jecxz
stos
or
or
dec
cwtl
pop
lret
filds
jg
fisttps
and
mov
mov
adc
ja
sti
jno
leave
ret
xchg
lods
lock
jae
sahf
lods
repz
adc
push
orb
shlb
or
inc
push
lea
and
ds
cmp
adc
in
sub
jmpw
xlat
fcoml
pop
fmuls
adc
fstpl
or
lea
mov
jg
mov
lods
mov
mov
lds
sbb
xor
xor
lahf
mov
inc
jp
push
pop
ret
cld
or
add
std
cmp
popa
sbb
jl
outsb
jno
pop
test
lods
imul
pop
mov
sahf
jb
subl
inc
sub
jne
sub
mov
repnz
aas
add
orl
daa
int
ret
xchg
cltd
or
insb
add
and
and
sub
sahf
jle
testb
mov
xchg
arpl
add
mov
outsb
loope
add
mov
movsl
movsl
shrb
clc
xchg
leave
idivb
sub
adc
adc
push
jg
shr
add
adc
jns
bnd
and
dec
in
push
cmc
add
fcom
fdivrs
mov
loop
or
out
fcoms
push
push
addr16
inc
out
xchg
dec
aaa
jae
out
xchg
dec
push
add
into
xor
lea
or
sub
mov
std
cli
mov
push
sbb
jnp
push
loop
idivb
xor
and
mov
enter
aas
negl
js
dec
cmp
inc
clc
popa
dec
scas
cli
lock
repz
test
in
fisubs
and
testl
mov
ljmp
sub
mov
insl
and
mov
push
sbbb
ja
cltd
cmpsl
push
mov
out
repnz
fcmovnu
xor
xchg
sti
mov
das
mov
cmpsb
inc
xchg
adc
mov
jge
add
jb
ret
test
cmpb
xchg
mov
cs
mulb
insb
fwait
add
dec
sub
pop
adc
jae
sahf
or
add
leave
push
rol
push
or
lds
dec
pop
sbb
imul
lods
idivl
sub
push
dec
imul
xchg
push
std
fwait
into
xor
jnp
jg
sub
mov
xchg
leave
jno
mov
push
rorl
imul
mov
sub
pop
into
add
test
adc
mov
enter
xchg
inc
and
xchg
or
out
push
pop
jg
mov
xchg
adc
fidivrl
and
xchg
xor
xchg
add
aas
movsb
enter
es
ds
popf
aaa
adcl
fists
test
push
dec
dec
cmp
jns
inc
jne
fs
sbb
push
in
lea
xlat
and
xor
roll
test
movsb
imul
das
addb
cmp
mov
push
add
lret
sub
outsl
js
fisubrs
pop
fdivp
ret
cwtl
inc
sbb
inc
or
pop
xor
inc
add
lock
or
clc
jg
nop
jns
mov
test
aad
mov
pop
mov
inc
jecxz,pt
sub
scas
xor
push
and
aas
sbb
push
inc
and
nop
cmp
sbb
sub
add
xlat
mov
cmp
sbb
mov
sub
push
jecxz
xor
loop
mov
divl
out
imul
and
rcrb
pop
je
cmp
aad
add
sbb
mov
push
cld
mov
xor
rolb
push
dec
xchg
mov
mov
in
mov
mov
leave
arpl
mov
and
imul
adc
pop
nop
inc
es
adc
data16
test
out
sub
cmp
outsb
lahf
hlt
adc
sahf
stc
pushf
xor
or
ffreep
jns
call
sub
stc
dec
add
inc
sahf
cli
punpckhdq
push
out
xlat
cmp
dec
lods
fcoms
xchg
push
sti
iret
mov
inc
xchg
pop
andb
mov
orb
pop
call
aam
pop
jl
jns
insl
pop
jo
or
pop
aad
push
mov
int3
mov
dec
in
xorb
xchg
sbb
rorb
push
mov
cmp
add
scas
xor
fidivrs
mov
das
xor
out
adc
fimuls
xor
inc
adc
add
mov
mov
mov
out
and
insl
lods
push
popf
lock
rclb
lcall
lahf
mov
cmpsl
cmc
add
mov
push
es
sbb
mov
add
dec
xchg
out
mov
cmp
ds
enter
ss
loop
xchg
loopne
inc
push
jecxz
es
aam
add
lods
fsubrs
ds
mov
fldt
pop
fmull
inc
imul
dec
push
jmp
inc
mov
call
outsb
mov
cld
es
das
mov
lods
mov
mov
push
rcr
test
int
inc
je
sbb
lods
inc
xchg
ret
add
in
dec
das
adc
scas
pushl
daa
sbb
and
fsubrl
push
cli
adc
xchg
push
pop
adc
mov
mov
add
push
popa
sub
mov
adc
pop
inc
adcl
scas
cmp
xorb
xor
adc
frstor
xlat
push
push
dec
jae
call
into
xlat
cli
jmp
les
cmp
lea
shrb
clc
cmp
adc
push
push
fsubs
mov
lcall
cmc
jecxz
mov
nop
push
xor
shl
lock
dec
sahf
cmpsl
test
mov
mull
cmp
adc
mov
mov
push
mov
int3
pop
fistpll
fldenv
push
add
pop
cltd
mov
mov
or
lcall
popf
jecxz
add
popf
call
mov
lcall
mov
xor
ret
cli
sahf
jae
mov
jmp
es
lock
fnsave
leave
ret
popf
fsubl
cmp
push
adcl
movsl
leave
call
cmp
adc
or
imul
scas
fucomip
and
adc
int
pop
cwtl
cmp
sbb
shrb
and
loopne
mov
and
cmpsb
or
pop
mov
dec
adcl
sub
mov
xor
rorb
icebp
bswap
or
addr16
jp
xor
leave
stos
sti
int3
mov
mov
xor
xchg
cs
test
lea
adc
xchg
imulb
lret
movsl
inc
xchg
enter
add
jmp
pushf
xchg
mov
fstpt
scas
vpshaw
inc
cmc
mov
lahf
ss
mov
lds
ret
inc
test
aad
mov
aas
sub
idivb
jns
in
jnp
sti
repz
mov
loope
mov
jl
push
jno
aam
cmc
adc
xor
in
js
jp
pusha
scas
sub
sub
scas
xchg
sbb
push
ret
mov
add
pop
and
and
dec
jle
cmp
lahf
dec
xlat
in
jmp
sub
push
jg
mov
mov
in
mov
sbb
pop
imul
hlt
add
stc
std
xchg
jns
imul
sub
mov
fsubl
daa
ljmp
daa
test
push
outsb
sbb
movsb
mov
test
lret
dec
mov
sahf
movsb
outsl
push
mov
cmp
fs
stos
lahf
int
fdivp
into
movsl
test
jle
mov
sarl
or
ficoms
pusha
lods
lds
rcl
inc
mov
scas
aaa
sbb
repz
and
mov
xchg
jne
test
cmp
daa
ss
ja
jle
xchg
xorl
aam
sub
xchg
das
xchg
push
push
dec
add
dec
push
xchg
mov
out
pop
add
jg
mov
fiadds
xchg
cmp
jbe
and
push
lahf
and
cmpsb
fwait
cmpsb
sub
mov
sbb
inc
pop
adc
lret
add
out
imull
loopew
popf
cmpsb
inc
pop
je
out
in
jnp
sub
ja
arpl
push
out
jo
das
mov
inc
sbb
pop
gs
jo
imull
js
je
mov
push
push
aad
lods
mov
dec
sbb
push
and
pop
inc
inc
movsl
push
imul
add
xlat
mov
jl
pop
cmp
leave
add
into
les
out
insb
loope
fisubs
test
gs
movsl
in
mov
xchg
jns
pusha
aaa
xchg
dec
call
test
int
imul
inc
loopne
jb
call
mov
scas
jp
inc
stc
fdivl
cmovo
mov
movsb
mov
jbe
pop
nop
jmp
xor
pop
sbb
mov
insl
xchg
lds
sub
das
ret
cmp
adc
inc
mov
xchg
pop
xor
adc
imul
fdivrp
dec
ss
addb
ror
lahf
or
iret
movsl
mov
xor
xchg
scas
pop
sub
pop
lods
xor
add
sahf
call
stc
stos
lea
mov
in
dec
add
jmp
cld
aam
nop
fwait
xchg
cltd
jp
jae
cmpsl
xor
movsb
adc
push
lds
inc
inc
push
sub
cmp
scas
sub
pop
dec
push
lods
imul
add
lcall
and
xchg
repnz
mov
push
jle
mov
or
mov
jle
fstl
or
mov
ret
add
fsubl
fsubrl
jmp
cli
fistpl
in
cmp
pop
mov
stos
fbld
addl
js
shll
cmpb
mov
xchg
imulb
jge
dec
in
jmp
add
gs
fs
lret
scas
mov
pop
jns
fnstsw
xchg
in
xchg
jmp
lock
xor
lea
lret
je
or
nop
xchg
hlt
pop
jmp
stos
add
push
mov
retw
int3
sbb
outsl
cmp
cmpsb
mov
je
testb
cmp
sub
mov
adc
test
adc
insb
fisubs
sub
das
lahf
jno
lea
or
and
fstpt
jg
mov
push
cmc
mov
aam
xchg
lret
jp
enter
repz
add
fldl
jne
or
xchg
repz
aaa
mov
invd
je
cmc
ret
or
andnps
ret
and
push
cmp
mov
aam
lds
cmp
sarl
fwait
cmpsb
lret
xchg
rclb
mov
xor
pushf
pextrw
pop
mov
push
dec
clc
xchg
popf
mov
or
sbb
int3
dec
jae
in
imull
dec
xchg
sub
mov
movsb
into
push
pop
cmp
and
xor
enter
jns
xor
mov
push
jmp
jl
test
imull
xor
cli
ljmp
frstor
cltd
rcll
pop
pop
mov
rolb
aam
test
shrl
rclb
mov
sub
dec
stos
sub
mov
sti
idivl
jecxz
inc
cld
andl
inc
cmpsb
fisttpl
stos
and
push
xlat
cs
fisttps
popf
int3
lahf
xor
jge
pop
xchg
loop
ret
inc
dec
mov
add
insl
mov
lcall
mov
mov
pop
sbbb
pusha
push
and
inc
lds
xor
lcall
xor
lock
in
xor
dec
sbb
test
ja
call
mov
inc
add
test
mov
push
loop
lods
loop
add
scas
iret
pop
pop
js
mov
inc
cs
mov
adc
add
out
dec
insb
data16
mov
mov
rorl
mov
sbb
addr16
sub
mov
dec
pop
out
ss
dec
in
or
mov
sub
dec
pop
adc
sbb
mov
jae
mov
insl
mov
je,pt
mov
mov
push
mov
rcrl
sub
sub
cmp
inc
xchg
fstl
test
or
xor
inc
adc
cltd
mov
push
and
inc
jmp
adc
stc
ja
fdivrs
loope
popa
jbe
incb
dec
inc
xchg
push
loop
lea
scas
mov
pop
call
mov
cmpsb
inc
mov
push
sbb
test
jmp
sub
push
rol
pop
jno
cs
xchg
sub
dec
mulb
push
jne
xchg
mov
sbb
inc
imul
xchg
adc
je
mov
or
sbb
xchg
test
jns
scas
adc
add
ret
xchg
aas
fstp
std
jbe
inc
lret
sbb
mov
adc
lock
cmpb
popa
push
sbb
add
repz
rcrl
adc
or
push
sub
dec
xchg
inc
aaa
enter
pusha
mov
repnz
leave
pop
mov
jns
dec
inc
xor
fnsave
mov
dec
outsb
mov
scas
xchg
mov
fs
and
xchg
pushf
icebp
add
mov
loope
jge
xor
xchg
rclb
jo
dec
push
bound
mov
push
sub
adc
aas
rol
in
cmc
pop
stos
jmp
push
pop
leave
scas
clc
xor
push
xlat
mov
das
js
and
inc
add
ss
data16
xchg
sbb
repnz
mov
iret
iret
cltd
push
xchg
mov
adc
add
xlat
or
mov
repz
pop
cld
mov
push
push
jmp
add
ljmp
xchg
jnp
sti
fmuls
shrl
call
std
inc
scas
xchg
repz
pop
in
jae
insb
and
test
and
and
lea
mov
mov
ds
xor
ss
and
daa
pop
sbb
mov
test
aad
cmc
dec
sbb
sbb
mov
inc
mov
repz
push
mov
lcall
sbb
jmp
sbb
mov
jae
jb
repz
cld
in
les
sbb
iret
je
nop
fimull
fwait
sarl
dec
xor
ss
xchg
sbb
jno
xchg
and
out
add
fimuls
mov
fcoms
push
adc
test
pop
ljmp
jg
mov
arpl
push
in
stc
pop
test
push
mov
push
sti
pop
jecxz
mov
movsb
jo
imul
cmp
ds
jnp
xor
or
jmp
outsb
push
mov
push
roll
aad
pop
mov
jne
mov
stc
fdivl
sub
mov
mov
dec
or
loop
adc
lret
pop
xlat
or
sbb
sbb
imul
mov
adc
mov
cmpsb
outsb
fisubl
or
xor
or
rorb
imul
jae
test
ljmp
xchg
test
sti
push
ret
pop
dec
in
mov
fdivrs
pusha
and
shlb
cmpl
popf
scas
xchg
in
push
mov
xchg
push
and
mov
ja
mov
jne
popa
xlat
ret
scas
sub
sbb
scas
mov
jno
xchg
pop
out
sub
inc
mov
push
mov
imul
shlb
jbe
icebp
mov
mov
das
out
addr16
mov
cmp
xor
dec
je
cmp
jp
jl
into
pop
mov
sahf
jns
cmp
cmpsl
mov
ja
loope
ss
jnp
adc
jnp
and
mov
int3
jno
shlb
in
shlb
xlat
test
stos
xchg
popa
inc
aas
outsl
pop
add
push
mov
out
xor
inc
cli
sti
xor
inc
repz
mov
fnstsw
add
cmp
and
push
inc
mov
xchg
sub
xchg
dec
lcall
push
xlat
jne
push
es
pop
cld
pop
movsl
insb
ljmp
inc
mov
pop
jno
xchg
mov
mov
push
jmp
mov
mov
shll
shlb
jnp
jbe
sub
jae
cmp
jge
xchg
jmp
mov
pop
mov
sahf
jmp
or
or
or
fistpll
fcoml
jecxz
jns
and
adc
pop
mov
lods
cli
sub
shrl
shll
sub
xorl
adc
sub
adc
xlat
lret
pusha
mov
inc
fldt
jmp
jle
dec
push
sbb
adc
mov
sub
loope
fs
imul
xor
in
out
and
add
xchg
jg
jb
sar
icebp
sub
jecxz
jae
push
push
cltd
pop
add
jne
mov
add
ret
cwtl
pop
test
pop
jmp
sub
mov
bnd
adc
scas
cltd
mov
cmpsl
pop
icebp
out
mov
sub
pop
fwait
pop
or
or
jae
outsb
es
call
ror
lock
cmp
stos
shlb
lret
pop
adc
xlat
xchg
scas
mov
xchg
push
mov
fdiv
js
sbb
adc
xor
inc
out
or
mov
popf
xor
sub
lods
xor
jnp
cmp
jae
pop
pop
pop
cmp
arpl
loope
int
lds
pop
out
std
pop
lahf
fs
fstp
xor
jecxz
jae
je
data16
mov
rcrb
sbb
inc
xor
aas
pop
cld
fsubl
mov
mov
dec
sub
mul
adc
mov
and
xor
dec
ficomps
shrb
movsb
xchg
gs
jmp
dec
loopne
es
cmp
mov
outsl
loopne
pop
inc
and
pushf
adc
pusha
imul
push
stos
outsl
lods
repnz
pop
dec
repz
sub
cmp
xor
adcl
test
std
rclb
inc
lahf
icebp
lret
mov
mov
enter
fistpl
into
stos
mov
out
scas
sub
sbb
xchg
pusha
mov
lcall
xchg
jo
jo
mov
mov
pop
andb
push
add
iret
test
inc
sbb
jae
rcrl
lret
icebp
js
ja
in
cmp
sub
adc
jbe
xchg
sbb
cltd
mov
jl
mov
push
int
adc
sti
and
jecxz
lods
lret
or
and
scas
insb
cmc
lret
jmp
push
mov
loope
jmp
sbb
push
addr16
inc
daa
pop
arpl
and
lods
lea
rcrb
pop
xchg
mov
inc
mov
popf
loopne
aad
push
lahf
lcall
mov
sbb
mov
das
mov
and
or
inc
out
js
scas
repnz
hlt
jb
mov
sub
filds
jae
clc
in
xor
sbb
sub
dec
fsubl
or
repnz
inc
pop
xchg
fdiv
cmpsb
and
scas
pushf
xlat
into
pop
aaa
les
jno
loopne
std
std
jno
adc
test
imulb
gs
aad
or
cmpsl
jp
pop
cld
ret
lret
mov
jnp
loopne
sub
push
shl
testb
push
jle,pn
xor
cmp
inc
cmp
stos
mov
mov
inc
int3
push
push
je
outsb
dec
ror
sub
enter
jo
fwait
inc
pop
leave
aam
outsl
mov
sbb
stos
bound
int3
in
xchg
shl
mov
cmp
xchg
cmp
ljmp
lods
iret
or
sub
sub
insl
sar
cmpsl
std
sbb
repnz
xchg
mov
inc
pop
leave
cs
sbb
and
dec
loop
repnz
and
xor
pop
push
adc
jl
mov
push
inc
xchg
inc
scas
test
push
mov
fnstsw
js
cmp
insl
std
pop
nop
das
repz
stos
add
in
cmp
add
es
mov
lods
inc
and
movsl
sbb
jge
hlt
push
cmp
int
xor
and
stos
add
loopne
gs
mov
mov
cmp
pop
mov
imul
fcomps
leave
shl
scas
flds
cmp
push
jns
push
mov
and
lock
cli
aad
sbb
xchg
mov
cmp
movsb
xchg
out
out
xchg
movl
sbb
popf
dec
stos
xlat
nop
call
and
mov
add
inc
xchg
lret
or
andb
jmp
or
rep
sbb
mov
ss
loope
inc
fistpl
loope
xchg
rcrb
lcall
pop
dec
fiadds
sub
add
mov
loope
and
pop
mov
movsl
adc
add
push
ja
add
push
adc
sub
jp
push
mov
pop
cmp
test
mov
scas
dec
mov
das
adc
sub
test
das
ror
pop
jp
pop
jmp
test
push
fisttps
jae
scas
pop
jns
test
shll
fidivl
sbb
lret
and
in
push
fbld
repz
lahf
and
jle
xchg
or
es
pxor
bound
sub
xchg
iret
mov
add
or
ficomps
ds
add
mov
loopne
xor
cmpsl
sbb
aas
lods
cmpsl
mov
sub
stos
mov
lahf
int
adc
shl
pop
outsl
aam
inc
repz
addr16
pop
adc
and
outsb
cwtl
loop
inc
jns
add
add
inc
mov
sub
push
inc
fcomip
sub
movsl
lret
mov
sbb
cmpsl
dec
outsl
sub
out
sbb
add
hlt
xchg
fdivs
pop
es
dec
dec
add
mov
mov
sbb
call
inc
or
dec
xor
into
sub
push
or
in
insl
clc
outsl
dec
or
imul
leave
aaa
or
enter
lock
in
mov
lods
push
loopne
rorl
insb
xchg
jo,pn
mov
call
ljmp
sbb
pushf
dec
mov
lods
in
push
and
lods
pop
dec
jmp
js
movsb
sub
out
leave
dec
sub
std
in
ret
mov
dec
pop
lahf
cmp
mov
mov
mov
gs
inc
repz
loopne
sbb
lods
pushf
in
mov
in
mov
xchg
fcomp
or
add
pop
into
jno
or
push
xchg
into
mov
shrb
testl
sub
pop
pop
and
sbbl
dec
sar
mov
das
unpckhps
mov
cmpsl
xchg
and
dec
es
xchg
mov
mov
pop
lods
pop
int
es
rolb
into
sub
pop
lods
cmp
lahf
pop
fcomps
dec
sbb
mov
aas
sub
fs
ljmp
dec
and
inc
jmp
xor
dec
jl
fsts
mov
push
jp
call
cltd
adc
cmpsl
mov
inc
mov
lock
sbb
xchg
out
aad
add
xor
jns
jg
add
insb
push
xchg
jl
inc
mov
loope
in
inc
pop
pop
neg
ljmp
fwait
inc
push
mov
mov
xor
xchg
mov
adc
push
call
out
pop
lock
xchg
push
mov
or
je
clc
cmp
dec
jns
push
mov
ss
adc
cmpsb
stos
ss
in
pop
mov
in
pop
pushf
sub
js
dec
mov
dec
iret
fcmovnbe
mov
lahf
enter
aas
sti
xor
sub
out
lods
cmp
mov
es
cmp
and
outsl
out
insl
inc
es
sahf
sbb
lret
ffree
aad
adc
cmp
adc
jns
into
push
aad
and
fildl
movsl
mov
pop
cmp
sbb
mov
push
fdivs
in
aaa
das
pop
lcall
mov
xchg
out
push
int3
push
jne
popf
flds
imul
lock
mov
xchg
push
or
inc
dec
fstps
pop
dec
les
jb
push
dec
mov
mov
popa
sbb
sar
enter
pop
push
jecxz
dec
imul
add
fs
inc
pop
lahf
sub
das
inc
rorl
scas
pop
mov
mov
cmp
jne
pop
and
cmc
mov
mov
add
std
mov
ljmp
or
inc
cli
jg
cltd
mov
xor
movsb
push
mov
rcrb
mov
fimull
jns
adc
sbb
test
adc
or
out
les
cld
cmc
mov
jae
outsb
pop
mov
jne
xchg
push
xor
out
das
sbb
ret
mov
jmp
jbe
lcall
cltd
inc
movsb
cmp
push
xor
sub
mov
pop
sbb
movb
xchg
xor
movsl
test
pop
cld
scas
dec
xchg
negl
shlb
neg
mov
ds
cmp
xchg
out
mov
sbb
rcr
push
mov
popa
jae
dec
arpl
movsl
xor
xor
pushf
fsubl
out
push
mulb
loope
fidivl
jns
pushw
insb
inc
xchg
movsl
sbb
pop
lea
arpl
js
lret
mov
stc
lock
and
adc
mov
cmp
inc
pop
stos
add
mov
outsb
gs
jg
ret
cld
jecxz
sub
lcall
fcmovu
or
lods
jbe
popa
jb
and
push
shrb
jg
comiss
pop
jno
andb
or
dec
imul
insl
lock
pop
fiaddl
jmp
mov
dec
rclb
lahf
cmc
or
fwait
sbb
dec
inc
cmp
pop
repz
movsb
fcmovnbe
lahf
xchg
outsl
std
cmp
aad
jge
adc
jb
lods
fs
movsb
jb
leave
insb
enter
cmovs
inc
std
xchg
shr
pop
shrl
xchg
pop
popf
cli
dec
cli
add
subl
pushf
adc
fstpt
in
jecxz
mov
pusha
xchg
inc
popa
mov
sub
dec
mov
xchg
test
cmp
mov
or
in
jne
xor
cmp
rcrb
leave
pop
or
daa
data16
pop
adc
imul
cmp
mov
dec
cmp
outsl
cld
ret
xchg
movl
jmp
xor
mov
xchg
push
cmp
arpl
mov
nop
xchg
add
jmp
aaa
mov
dec
jae
pop
mov
cwtl
filds
aaa
lods
add
cmpsl
mov
sub
ds
sub
cwtl
loop
xor
push
popa
xor
out
cmp
filds
push
ljmp
movsb
push
push
add
gs
sub
fisubl
mov
mov
mov
ja
adc
jbe
xor
mov
jno
mov
xlat
or
cs
push
int3
cmpsb
dec
insl
test
test
mov
and
or
aad
add
dec
lods
or
fldcw
xlat
lcall
ja
pop
jnp
mov
mulb
add
icebp
lods
icebp
in
push
clc
jae
push
cmovnp
mov
movsl
xor
mov
loopne
pop
cli
int3
xor
inc
jge
int
adc
lea
inc
aad
loope
jle
cmpb
inc
in
mov
scas
out
inc
into
pop
adc
stc
mov
jno
inc
fwait
mov
daa
adc
out
loopne
and
xor
push
cwtl
in
loope
std
mov
mov
jne
enter
xor
int3
add
adc
test
hlt
mov
mov
shrb
mov
xor
pop
sbb
test
pushf
punpcklbw
jp
loop
adc
stos
std
lahf
in
enter
adc
filds
cmc
push
scas
hlt
cld
mov
pop
cmp
iret
loope
mov
pop
shrb
cmp
js
dec
out
jb
sbb
repnz
cmp
sbb
inc
fcoml
out
dec
jo
fscale
cmpsb
xor
xchg
mov
sahf
mov
subb
cmc
mov
aad
movsb
jl
add
imull
push
cmp
jle
movsb
rcrb
push
sub
lods
xchg
ret
dec
jo
and
jb
jbe
clc
mov
out
xchg
je
xor
mov
mov
cltd
fdivrs
sbb
call
scas
and
test
mov
pop
dec
mov
mov
adc
loop
icebp
push
dec
add
sbb
inc
dec
xlat
jbe
mov
ljmp
ja
lods
fwait
hlt
sar
mov
dec
fadds
inc
loopne
push
xchg
clc
add
arpl
xor
lds
pop
push
or
call
test
pusha
addb
mov
xchg
adcb
pop
lcall
out
ja
pop
or
jmp
test
cs
out
push
or
test
icebp
cltd
lods
and
push
pop
push
pop
rcrl
jae
jge
mov
leave
mov
shl
int3
cmpsb
xorl
inc
inc
push
fwait
mov
lcall
sahf
and
adc
pop
sbb
jl
or
jl
xchg
in
das
je
push
xlat
pop
cmc
enter
push
and
fwait
lods
in
mov
xor
adc
mov
inc
subl
cmp
inc
in
or
lock
pop
push
mov
addb
pop
popf
cs
sbb
aaa
mov
mov
sub
js
jg
leave
cmpsb
leave
nop
movsb
push
scas
fs
or
rorb
or
outsl
pop
inc
mov
add
jb
inc
mov
jo
xchg
inc
mov
push
xor
out
ss
aam
js
rcr
hlt
jnp
jp
pop
ja
scas
imulb
push
lret
inc
or
in
fs
jle
adc
adc
ljmp
in
push
into
sti
enter
xchg
pop
cmp
movsb
enter
adc
inc
stos
push
add
push
movsl
xor
data16
shrb
in
push
mov
xchg
sbb
ret
test
lcall
adc
stos
jge
push
push
mov
sub
lahf
and
push
or
icebp
sahf
outsb
mov
sub
dec
addl
imul
loope
and
pop
cmp
lds
orps
lret
imul
lcall
pop
mov
jb
pop
xchg
sub
fs
mov
add
addr16
outsl
repz
jg
pop
mov
ljmp
xor
shrb
fs
sahf
hlt
daa
sbb
fstpt
mov
shll
rclb
xorl
jmp
in
jg
in
xchg
mov
jle
jae
sub
fcoms
dec
xchg
aad
cltd
jl
and
int3
subl
mov
pop
dec
pop
xor
push
lea
push
enter
push
xchg
dec
pop
dec
or
mov
addr16
enter
loope
sub
cltd
dec
dec
pop
mov
rcl
dec
stos
les
scas
jae
cmp
sub
push
adc
sub
out
mov
ror
clc
cmp
or
test
push
popf
sbb
jne
inc
clc
mov
mov
pop
mov
pop
inc
es
stos
into
mov
pushf
fldcw
cmp
outsb
popf
lret
insl
cld
sbb
fldl
cld
roll
add
mov
push
loopne
inc
insl
lcall
xor
daa
dec
add
pop
cli
adc
je
and
stc
sti
mov
lods
in
and
push
imul
scas
xchg
push
popf
fidivs
dec
jl
jecxz
push
cmp
mov
pop
or
push
popf
sbb
stos
or
sbb
xchg
shll
xchg
test
mov
mov
pop
mov
mov
jnp
mov
and
js
mov
icebp
sbb
push
adc
mov
cmovno
jo
jmp
cld
into
xorl
loopne
lods
xlat
inc
xchg
test
xor
jo
hlt
xchg
pop
fbstp
fstps
stos
cmp
fistpl
shlb
push
imul
out
cwtl
pushf
clc
shll
scas
jecxz
fnstsw
mov
xlat
jp
mov
mov
xchg
xor
lock
mov
lahf
or
fisttpl
sub
adc
jnp
andb
sahf
mov
addb
cmpsl
push
push
lahf
outsl
jl
cltd
loopne
repz
negb
int
scas
push
cmp
cmpsb
and
mov
cld
xor
daa
push
leave
sbb
jb
out
inc
shrb
ror
push
cmp
adc
cwtl
jae
sahf
fsubl
ss
pop
push
jecxz
mov
xlat
mov
jne
inc
cli
repz
daa
push
or
mov
push
mov
pop
andl
mov
fucompp
repz
xchg
dec
mov
mov
icebp
fiaddl
shrl
pop
les
sbb
sbb
ret
mov
cmp
in
in
pop
jno
bound
lea
push
jo
fimull
shrl
cmp
adc
js
sub
mov
imulb
in
inc
jmp
cmpsb
das
xchg
movsl
mov
aad
cli
xor
inc
lock
arpl
ret
pop
adc
fdivrs
cltd
data16
xchg
bound
dec
sbb
daa
or
in
subb
lods
pusha
jmp
jb
jae
dec
or
and
mov
loop
xchg
dec
mov
test
mov
inc
dec
xor
mov
fsub
cwtl
and
adc
push
icebp
mov
cmc
sub
mov
push
outsl
pushf
popa
repz
test
out
mov
push
icebp
cmp
insb
insb
sbb
inc
arpl
rorl
cltd
daa
push
icebp
cmp
sbb
and
and
mov
push
das
ljmp
sub
mov
les
outsl
in
fidivl
into
push
lcall
dec
sub
and
jmp
imul
xor
hlt
cltd
incl
mov
insb
or
xchg
sub
jae
jle
hlt
xchg
into
dec
mov
push
sbb
push
cmp
lcall
fistpl
mov
adc
jo
xorb
mov
fildll
dec
cmp
cmpsl
lcall
dec
aas
test
cmp
or
leave
pop
mov
sbb
enter
out
ds
or
inc
psubw
jge
loop
in
js
lods
mov
jns
lods
icebp
xchg
add
cltd
popf
js
test
mov
pushf
pop
sub
sbb
push
cmp
adc
cmpsb
jae
jge
inc
insl
jb
in
loope
add
cmp
xor
mov
jecxz
jl
stc
jge
idivl
repz
call
add
cmc
dec
das
sub
flds
aam
sbb
ret
les
push
mov
fdivl
push
cmp
mov
pushf
push
dec
aam
std
jl
push
pop
iret
out
mov
lret
pop
xlat
ds
xchg
dec
sti
mov
mov
fwait
aad
clc
sub
inc
xchg
fchs
adc
push
dec
test
or
add
push
lret
cmp
scas
loope
out
add
sti
mov
scas
sbb
insl
add
mov
repz
out
rcrb
cmp
push
cld
pop
sub
inc
ljmp
inc
pop
scas
pusha
mov
mov
stos
daa
sbbl
push
les
or
mov
addr16
nop
xchg
aam
rcll
push
sbb
pop
inc
xor
adc
xchg
popf
add
mov
in
push
pop
fld
xchg
inc
mov
out
or
jns
jo
int3
dec
ret
xor
std
daa
push
mov
lock
out
sub
mov
sbb
sub
sbb
jno
xchg
sub
stos
cmp
aas
xchg
or
mov
mov
pop
lods
adc
xchg
sub
dec
cmpsl
sub
or
pop
fsqrt
dec
mov
test
dec
stos
arpl
scas
or
cmp
xor
iret
xchg
inc
cwtl
mov
add
addl
es
lcall
sbb
aam
in
test
out
pop
xchg
je
adc
pop
lods
sub
test
xchg
inc
and
imul
orb
xor
adcb
mov
xchg
sti
lods
jmp
pusha
mov
lcall
pop
in
movsb
push
inc
lods
inc
or
adc
pop
xchg
push
shl
sub
iret
mov
std
dec
fidivrl
sbb
mov
call
ja
lds
nop
xchg
adc
push
packuswb
xor
repz
aam
pop
pop
push
add
dec
fxch
inc
gs
arpl
jle
mov
data16
movsl
rolb
ljmp
icebp
clc
rol
sbb
xchg
les
outsl
xorl
lahf
mov
mov
cmp
mov
pop
fwait
mov
ljmp
jne
cld
jge
icebp
out
sti
pop
sahf
dec
outsl
bound
and
sbbl
cmc
mov
cli
add
cmp
inc
xlat
cltd
xor
push
mov
lods
sub
stos
pop
inc
mov
or
jmp
cmpsl
push
cmp
add
xor
lods
popf
jns
rol
jb
mov
xchg
clc
shl
xchg
sbb
add
mov
or
repnz
jmp
imul
mov
lods
and
insb
jno
hlt
ds
xchg
sub
lahf
jns
idivl
dec
subl
inc
mov
xor
xlat
into
leave
dec
mov
dec
mov
aas
insl
sub
push
lods
mov
loop
popf
sbb
sub
mov
cmp
jns
xchg
jmp
loop
dec
mov
pop
aas
sub
loope
xchg
adc
push
adc
mov
adc
call
in
pop
pcmpeqb
test
sti
js
aaa
sbb
in
cs
in
mov
dec
fs
scas
sbb
dec
test
inc
and
sbb
push
lahf
cmp
push
xchg
shrl
subb
xchg
jp
aaa
pop
lods
jb
mov
mov
sub
jo
lret
cmp
data16
fmul
jl
push
sub
sub
mov
idivl
and
inc
push
js
mov
scas
arpl
xchg
in
mov
dec
cmp
scas
pop
inc
mov
lods
adc
push
ljmp
push
cmp
sbb
and
sahf
bound
clc
lods
lods
test
icebp
outsb
fcmovbe
fs
jmp
cld
lds
call
mov
js
xchg
les
out
xor
imul
lods
xor
aam
movsl
out
out
mov
add
pop
fidivrs
or
call
and
push
jo
cmp
xor
nop
scas
sub
sbb
jo
cmp
push
mov
mov
mov
call
in
and
lret
in
jo
bound
or
xor
add
and
sub
mov
sbb
adc
jae
push
insl
lock
xchg
mov
xor
testb
jp
mov
or
sub
iret
mov
test
repnz
sbbb
pop
push
in
aaa
fcoml
pushf
mov
into
mov
repnz
push
loopne
dec
lret
cmp
mov
inc
xchg
jmp
xlat
enter
mov
sbb
jbe
push
jno
imul
mov
mov
movsl
cmp
sub
jg
push
das
lahf
lcall
jae
and
sbb
mov
daa
dec
mov
loop
pop
jae
sbb
in
inc
xor
std
leave
mov
inc
jo
inc
add
pop
pop
mov
iret
inc
shlb
mov
daa
pushf
std
xor
inc
stos
je
sarb
and
mov
rcll
cmp
enter
jmp
cwtl
dec
jns
mov
inc
xchg
shll
mov
and
mov
je
sub
sub
iret
call
push
bound
xchg
lock
pop
fdivp
loopne
xchg
xlat
stos
xor
sbbb
je
call
lret
or
ret
incb
jmp
push
stc
jo
cli
mov
dec
stos
mov
pop
lahf
in
pusha
in
xor
pop
push
push
rorb
dec
movsl
in
mov
xor
mov
pop
dec
in
imul
sub
test
ss
mov
repnz
hlt
out
jecxz
js
and
sbb
and
call
jge
imul
or
jle
cs
hlt
mov
stos
xor
outsl
xor
rcll
push
inc
adc
adc
fimull
mov
cmp
inc
cmp
js
es
jns
lock
hlt
adc
in
dec
cld
xor
sbb
jmp
mov
pop
jl
or
jbe
repz
out
jg
pop
ljmp
adc
sbb
popa
mov
loopne
std
xor
mov
xor
in
jo
inc
xchg
sub
xchg
cld
sbb
sbb
xor
lahf
ja
movsl
lret
adc
movsl
pop
popf
push
mov
xchg
shlb
gs
or
mov
shl
js
sbbl
addps
test
fidivrl
andb
xor
inc
lret
repnz
xor
imul
adc
dec
mov
mov
stc
jbe
fdivs
pop
inc
dec
fisubrl
out
scas
int3
inc
das
and
sbb
push
test
or
in
mov
push
in
clc
js
add
mov
xor
cmp
int3
mov
inc
stos
out
fists
mov
daa
sub
out
popa
popf
push
cmp
es
mov
in
mov
stos
int
ss
daa
stos
add
repnz
stc
add
add
add
repnz
adcl
adc
push
jae
bound
ficompl
lock
mov
imul
jo
mov
pop
inc
fsqrt
icebp
xchg
xchg
dec
push
jnp
test
ljmp
iret
cmpsl
pop
mov
xor
push
mov
cmc
or
mov
aam
shlb
popf
mov
and
notl
in
cmp
jle
cmp
push
out
lahf
push
mov
pop
lea
mov
sbb
rcll
mov
rolb
imul
stos
rcll
andl
ret
jge
xchg
test
outsb
push
dec
sbb
outsb
xchg
mov
ljmp
fmuls
inc
in
cmpb
add
cmp
outsl
and
pop
xchg
sbb
lahf
mov
repnz
xlat
sbb
xchg
fs
out
jae
pop
lret
rorb
mov
in
in
pop
jle
int3
cli
push
aam
pusha
and
stc
leave
and
sbb
sub
fldl
pop
in
mov
ljmp
movsb
or
ret
fcomps
cwtl
cmc
negl
and
outsl
dec
xorl
jmp
jecxz
and
inc
jmp
lods
ret
lods
testb
test
pop
or
mov
sbb
mov
push
dec
xor
jne
sbb
lock
xor
in
cmp
loop
jp
and
loop
add
jp
cmp
cmp
pop
sbb
xchg
mov
inc
pop
or
mov
cmpsl
lret
add
fs
and
shl
mov
inc
arpl
and
mov
ret
testl
or
movb
xchg
call
adc
lods
pop
bound
scas
jne
sbb
popa
jecxz
and
pop
mov
jno
xchg
mov
push
ds
fs
and
iret
ja
xor
dec
aaa
int3
iret
xchg
inc
mov
inc
or
pop
dec
jmp
or
call
jmp
das
adc
pop
adc
aaa
pop
jb
cmpsb
mov
es
ljmp
stos
cli
adc
nop
pop
cld
add
jae
and
dec
inc
mov
ss
push
add
sub
and
out
sarb
push
je
and
out
xlat
out
jae
fs
or
or
out
mov
add
dec
inc
cli
inc
inc
inc
les
cmpsl
mov
bound
inc
imul
jg
ficomps
cmpsb
mov
and
fldcw
popf
in
pop
and
xchg
ficoms
adc
flds
outsb
out
sbb
lcall
fists
xor
jo
and
push
xchg
jns
pop
sbb
fcoml
jl
sbb
inc
fs
shrl
stc
shrl
and
mov
lahf
fbld
mov
or
push
and
sbb
adc
mov
sub
push
pop
adc
mov
mov
mov
int3
adc
mov
push
flds
sbb
or
add
xchg
mov
cmpsb
mov
and
fmuls
insl
adc
jb
jnp
data16
cmpsl
fmuls
dec
fsubrl
inc
js
or
inc
pop
movsl
xchg
cs
cltd
nop
pusha
jg
jmp
addr16
inc
jo
insb
inc
sbb
in
pop
adc
dec
xchg
nop
int3
cs
adc
imull
mov
mov
aaa
in
sbb
push
lock
aam
mov
push
jo
mov
jb
xchg
xchg
shrb
sub
mov
xor
push
cltd
test
dec
inc
mov
sub
and
les
shll
js
push
inc
add
jle
fsubrs
jae
das
pushf
test
lods
aam
or
in
outsl
fstpl
xor
fdivs
cld
mov
fidivl
sti
lds
jmp
xor
cmp
inc
stos
ss
and
xor
sbb
ret
call
push
jl
adc
pop
sbb
pop
sbb
aad
ljmp
sbb
and
rolb
fucomi
xchg
lret
sbb
sbb
push
divl
popf
orb
iret
mov
std
lcall
add
int
les
sbb
sub
xlat
push
mov
adc
cmp
movl
test
add
pop
gs
stc
mov
jnp
add
mov
call
movsl
lea
test
ja
arpl
mov
jmp
sbb
mov
sahf
repz
mov
and
jne
cs
leave
mov
lock
das
push
mov
clc
aas
sbb
les
dec
push
sbb
or
add
dec
sbb
mov
cmpsl
push
push
inc
cmp
or
fimuls
pop
mov
mov
pop
or
cmpl
and
pop
clc
dec
mov
ret
fwait
adc
jmp
and
add
scas
mov
sbb
aaa
cmpsl
add
cmp
scas
daa
sbb
pushf
nop
push
add
mov
aam
rcrl
pop
das
add
sub
out
imul
loopne
xlat
jnp
xchg
std
movsb
pop
inc
mov
lahf
jmp
aaa
orb
scas
cmpsb
push
fwait
xor
push
scas
test
aas
mov
sub
loopne,pn
sub
mov
mov
movntq
out
and
pop
or
xor
movsb
push
mov
pop
add
out
mov
loopne
push
cmpsb
sub
inc
sbb
aam
lahf
mov
mov
xor
jnp
xor
aas
nop
jae
popf
xchg
jnp
ljmp
xor
subb
mov
insl
pop
lods
fidivs
mov
and
int3
sub
inc
mov
or
inc
int
fs
stos
pop
div
dec
jl
arpl
out
xchg
testb
pop
jne
lcall
mov
sub
jmp
pop
add
dec
jmp
mov
sub
pushf
mov
cli
fwait
push
js
in
mov
pop
push
orl
cld
jo
jge
lods
out
fmul
jmp
enter
mov
pushf
mov
clc
lret
adc
push
mov
jne
bswap
das
aaa
test
push
adc
sbb
pop
and
dec
fsts
rcr
push
xchg
ja
sub
ljmp
sbb
inc
lret
jle
movsl
iret
add
and
xor
pop
in
xor
cs
cmp
rorl
nop
stc
or
stos
je
in
sub
dec
ret
je
bound
fs
clc
arpl
test
push
push
and
shrl
sub
das
lahf
and
xor
dec
std
scas
adc
loope
icebp
dec
or
xor
jae
cmp
sbb
dec
inc
lcall
lret
pusha
mov
std
cmp
rorb
adc
aam
pop
jmp
xlat
pushf
xor
subl
je
jne
sub
xlat
mov
cmp
mov
stos
or
inc
aad
and
dec
xchg
or
jecxz
or
aaa
xchg
lea
push
orl
dec
fmuls
cmp
pop
pushf
add
pop
mov
inc
divl
std
test
mov
gs
inc
imul
outsb
xor
adc
mov
js
xchg
fxch
mov
ficoms
xchg
dec
lret
inc
dec
in
aaa
mov
xchg
mov
loopne
mov
adc
mov
pop
or
mov
ror
cmpb
out
cmp
sbb
test
fimuls
cmpsb
cmp
aaa
jecxz,pt
aad
mov
imul
fidivrl
pushf
cmp
popw
add
jmp
push
and
jp
sbb
or
push
popf
rclb
jle
mov
lret
cli
cmpsl
adc
and
add
push
test
and
cmp
inc
or
add
xchg
call
mov
imul
mov
cs
clc
inc
mov
iret
push
mov
dec
andb
stos
adc
xor
popa
loopne
jecxz
jo
pop
je
ds
outsl
int3
xchg
fmul
lods
jo
pop
xchg
jle
das
pop
jge
or
dec
pop
lret
imul
mov
xchg
push
mov
es
imul
iret
cltd
pop
aaa
cmpb
and
jns
iret
pop
stc
xlat
shl
mov
movsb
clc
xchg
or
add
ljmp
insl
sub
je
xchg
inc
leave
inc
dec
adc
jb
arpl
lret
add
inc
push
fwait
int3
pop
test
pop
adc
cmp
sub
scas
pop
mov
subb
jle
mov
scas
jge
jbe
mov
cwtl
xchg
push
cli
fwait
cli
add
or
xor
inc
idivb
jbe
mov
push
lcall
out
xlat
scas
cmp
inc
paddw
imul
imul
sbb
gs
pop
inc
mov
sbb
add
lcall
xchg
lods
xor
test
outsl
mov
inc
or
mov
adc
lock
dec
aaa
pop
insb
sbb
scas
jb
imul
mov
mov
stos
int3
int3
cli
pusha
or
enter
movsl
mov
loope
loop
sbb
push
imul
stos
adc
arpl
es
and
lret
ljmp
dec
fmul
fcoms
cltd
pop
fcoml
dec
popf
or
cld
out
stos
pop
call
repz
cmp
repz
mov
push
sbb
pusha
and
ret
into
sbb
dec
pop
sub
pop
pop
stos
rcrl
push
xor
jg
mov
mov
pop
jecxz
push
sbb
adc
or
xchg
jg
jae
and
xchg
mov
inc
push
mov
push
xchg
cmpsb
and
icebp
or
adc
ds
mov
cli
push
imul
movsb
insl
daa
xchg
hlt
cwtl
pop
jmp
jne
xor
lret
lea
inc
arpl
xor
test
jnp
cs
flds
mov
dec
mov
adc
cmpsb
hlt
sbb
cwtl
xchg
xor
stc
dec
dec
test
pop
mov
sbb
dec
push
sahf
jecxz
cld
dec
jno
into
inc
enter
inc
popf
stos
ret
xchg
mov
sbb
add
jmp
jno
and
inc
mov
adc
jmp
arpl
xchg
leave
or
movsb
dec
pop
jge
sbb
adc
das
pop
nop
or
les
enter
push
cld
into
fwait
mov
inc
shrb
add
jl
xchg
adc
jns
aas
neg
pop
cmpb
jmp
or
or
mov
pop
aam
fs
lret
aam
mov
xor
inc
cmpsl
and
addr16
leave
ss
mov
lcall
inc
pop
fidivrl
aas
fsubrl
pop
inc
call
mov
xor
mov
sti
and
inc
clc
test
mov
enter
mov
inc
xor
cmc
jge
testl
in
test
pop
and
test
jp
xor
lret
sahf
mov
inc
and
cmp
inc
subb
movsl
ss
push
xor
jae
xchg
int
pusha
pop
mov
insb
sarb
pop
mov
cmp
mov
sub
and
mov
imul
mov
cltd
push
cmp
jge
push
les
or
push
loop
cmp
adc
rcrb
or
mov
cltd
xlat
xor
test
xchg
jecxz
jb
adc
jge
dec
lea
gs
cmp
cli
repz
dec
mov
in
lods
pop
mov
int
mov
cvtps2pi
mov
lea
leave
in
xchg
cwtl
jg
xchg
aam
adc
or
pop
cld
sub
sahf
sub
out
dec
mov
ja
pop
pop
pop
iret
cmp
fistpll
mov
lret
xchg
jg
pop
int
out
enter
sbb
cmp
fidivrs
jmp
mov
xchg
sbb
sahf
enter
pop
lock
fnstcw
cmp
xor
mov
lods
xchg
pop
addr16
gs
mov
fdivl
dec
fnstenv
and
daa
mov
xchg
cmp
jb
xor
push
into
iret
ss
ret
cmp
das
dec
jmp
fwait
aaa
and
int3
cmc
repz
push
mov
push
push
jp
sbb
xchg
out
cmp
sahf
add
cltd
stc
mov
sarl
cmc
dec
adc
mov
cmc
jle
je
insb
cmp
cld
push
in
das
and
and
adc
jle
jecxz
ljmp
loop
add
fldl
xor
ret
adc
jb
inc
scas
sbb
cwtl
mov
movsb
cli
lods
repnz
loopne
xchg
decl
inc
push
rorb
pusha
mov
mov
mov
pop
dec
dec
push
pop
addb
adc
lret
popa
pop
inc
jo
inc
fisubl
mov
fsts
arpl
mov
test
cmp
mov
mov
mov
imul
jae
loopne
lods
test
xchg
or
in
fsts
dec
cmpsb
leave
jmp
sub
fld
scas
xchg
shl
aam
dec
add
mov
jae
outsb
push
and
xor
ss
push
cmp
mov
in
jo
lods
push
mov
dec
or
mov
push
test
ret
repz
xchg
lods
push
ret
ds
push
ret
sbb
scas
jne
cwtl
and
or
fcmovb
cmpsb
lods
rol
imul
out
out
pushf
insl
pop
jbe
sbb
mov
push
cmp
movsb
test
jecxz
popa
sti
inc
push
lea
add
sbb
inc
not
aaa
pushf
sbb
lcall
mov
jno
fdivrl
cwtl
pop
mov
movsl
jecxz
xor
mov
inc
negb
out
mov
aam
fs
push
or
negb
test
or
insb
ror
pop
neg
sti
inc
jg
lret
push
dec
lods
test
lds
and
dec
add
ficoms
repz
sbb
les
mov
lcall
ror
add
xchg
out
mov
scas
insl
std
xor
cld
pop
or
outsl
and
cwtl
push
mov
js
enter
scas
scas
loope
xor
repz
fisubl
jb
imul
stc
cli
outsl
dec
in
and
mov
pusha
push
add
push
fisubrs
xor
mov
pop
mov
incb
pop
testl
mov
int
pop
es
xchg
stos
xchg
mov
jnp
out
jg
sbb
loope
jo
sahf
and
sub
dec
ss
outsb
popl
cltd
cmpb
lea
and
pop
icebp
adc
mov
pop
mov
iret
decl
add
imul
les
sub
imul
cmc
js
sub
inc
aaa
xchg
or
repz
repz
test
adcl
xchg
addb
scas
pop
ss
mov
outsb
and
or
xchg
sbb
cltd
mov
pusha
ret
mov
xor
inc
ja
adc
push
movsb
pop
out
mov
shlb
fcmovne
cld
or
pop
push
fwait
dec
add
pushf
loope
jns
fstl
pop
aad
pop
and
mov
push
pop
pop
aam
clc
pushf
mov
mov
xchg
mov
jecxz
sub
repnz
movq
inc
in
hlt
stos
sahf
xchg
jmp
mov
mov
cmc
mov
divl
fsubrl
xchg
or
jmp
jmp
xor
add
sarl
push
cmpsl
fimuls
jne
xorl
in
cmp
sub
sub
jns
test
or
pop
add
pop
lret
push
cmp
inc
arpl
test
popf
xchg
mov
add
fiaddl
loope
movsl
inc
sbb
movsb
cli
or
xchg
jge
roll
enter
push
imul
in
cli
iret
mov
ficoml
xlat
push
dec
jne
mov
stos
stos
cld
and
ja
mov
mov
cmp
sub
push
adc
out
sbb
cmp
pop
cwtl
lock
sub
jmp
push
addb
mov
adc
cmp
cmova
push
insl
push
in
loop
je
adc
add
jns
cli
and
hlt
mov
push
fcmovu
movsb
mov
sub
sti
jl
jnp
in
xchg
xor
inc
stc
mov
pop
jo
push
insb
popf
push
push
jecxz
jge
or
push
sub
inc
jno
cmp
sbb
inc
fldenv
push
repz
popa
push
hlt
inc
out
mov
sbb
sbb
sub
adc
out
xchg
cmp
push
js
leave
stos
xor
out
mov
nop
xor
icebp
push
xchg
and
dec
add
in
lcall
sub
dec
mov
fisubs
xorl
and
int
aaa
fisubl
sarl
jne
jno
dec
mov
es
mov
mov
push
cmpb
inc
mov
jecxz
mov
xor
testb
push
scas
fsts
lods
mov
jb
push
ljmp
add
xor
popf
test
jmp
sub
fistps
mov
cmp
ds
fimuls
xor
aam
mov
mov
pop
sbb
push
pop
fcoml
add
pop
mov
mov
adc
rorl
inc
jle
or
xchg
and
ret
sahf
dec
cli
or
mov
aas
xchg
push
stos
sub
aam
fsubrs
add
into
jl
add
fwait
into
mov
add
sub
xor
jo
and
inc
imul
cmp
sbb
pop
add
pop
cmp
mov
add
xchg
sbb
dec
pop
je
enter
push
into
mov
imul
adc
sbb
mov
mov
dec
loope
std
std
inc
mov
inc
mov
stos
rcrl
int
inc
push
lcall
es
add
pop
sti
mov
shl
repz
inc
xor
cmpsl
dec
push
push
cld
pusha
add
xor
incb
movsl
xchg
push
aad
es
movl
dec
popf
push
fistps
fdecstp
les
imul
sahf
out
inc
inc
daa
inc
out
mov
sub
cld
enter
xor
push
sbbl
mov
cmp
pop
jle
jb
mov
mov
inc
adc
decl
in
repnz
sarl
sub
daa
cmpsb
cld
popa
addr16
outsl
jp
ficomps
cmp
lcall
lret
xchg
dec
test
inc
xchg
add
ret
sub
mov
pusha
mov
pusha
push
mov
add
stc
daa
sub
aaa
call
cld
fdivrs
jl
aam
bound
fidivrs
fildll
test
cmpsb
jo
ja
xchg
mov
xchg
mov
xchg
pop
mov
and
dec
pushf
fisubrl
loope
mov
cmp
adc
lea
sub
pop
mov
fisubl
xchg
inc
ret
dec
je
divb
stos
jmp
mov
pop
mov
icebp
lahf
addr16
jbe
and
add
pop
jl
iret
fs
rol
jmp
out
stos
lea
xchg
movsb
and
data16
outsl
je
mov
lock
push
mov
xor
clc
in
pop
mov
sbb
or
or
gs
inc
adc
iret
fisttpll
aaa
push
xchg
cmp
outsb
sbb
repz
fbstp
inc
push
add
push
inc
cmp
inc
fistpl
add
push
es
mul
cmp
cltd
test
sub
inc
adc
sar
sti
and
in
shrb
mov
ffreep
je
outsl
push
out
adcl
cmp
xchg
outsl
pop
rcrl
shl
and
mov
aam
mov
mov
adc
leave
mov
inc
mov
dec
inc
out
dec
les
ljmp
mov
cmp
sub
add
insb
mov
mov
push
cmpsb
cmpsl
jnp
sub
sysenter
xchg
ret
outsl
inc
bound
jne
pushf
daa
pop
das
mov
jle
popa
out
xor
pop
icebp
sbb
pcmpeqb
xchg
mov
mov
bound
or
pop
iret
jae
adc
fcmovnbe
jo
stos
repnz
xlat
push
arpl
scas
adc
sahf
adc
decl
pop
fnstcw
xor
mov
adcb
lea
jp
mov
pop
sti
push
mov
cli
and
push
pop
rorl
mov
mov
mov
cmp
scas
xor
test
and
sub
lods
push
in
iret
inc
and
inc
adc
mov
pop
fstl
xor
movsb
push
sub
jne
and
xor
cmpsl
xor
dec
aam
insb
inc
cmp
lahf
loope
subb
rorl
mov
add
xor
cmpsl
sbb
jp
loope
shlb
shrl
sbb
lcall
cmpsl
cmpsl
dec
test
add
int3
pop
xor
test
mov
mov
out
push
pop
push
mov
mov
xor
iret
cmc
sbb
mov
insl
jle
and
arpl
out
cmp
sti
scas
lea
das
push
data16
push
xchg
shll
gs
inc
adc
loop
in
cld
xchg
fwait
mov
daa
mov
pop
inc
pop
loop
jns
cmc
test
test
shrb
pop
mov
cmp
scas
or
jo
loopne
sbb
fildll
fxam
ds
lods
jno
in
ss
mov
push
cwtl
adc
xor
mov
repnz
xchg
or
sti
divb
cmpsb
outsl
sub
push
xor
fwait
repnz
ljmp
loope
sub
dec
les
or
repnz
xor
sbb
mov
mov
xor
mov
mov
add
pop
scas
add
hlt
dec
adc
adc
jne
xor
sbb
and
repnz
adc
lahf
sbb
sub
das
push
or
loopne
lcall
imul
into
pop
xchg
sub
pop
cmp
mov
iret
lcall
mov
mov
mov
cld
sbb
sti
and
sbb
add
sbb
xchg
out
inc
movsb
push
cmc
and
fs
pusha
mov
sar
xchg
imul
ss
daa
fs
insb
imul
in
mov
addl
sub
xchg
pop
callw
cmovb
xlat
arpl
xorl
adc
sub
mov
mov
add
add
repz
dec
pop
xor
out
out
xchg
stos
mov
or
push
in
cs
into
and
mov
pop
cmp
add
mov
jno
std
mov
jp
daa
js
imul
jns
andb
js
dec
jmp
xchg
stos
pop
pop
mov
inc
mov
xchg
jl
pop
xor
mov
add
addr16
inc
mov
sub
iret
ds
dec
dec
pushf
lds
add
daa
mov
dec
mov
popa
sahf
cmpsb
xor
adc
cmp
dec
push
jb
int3
out
push
out
lcall
ret
jg
sbb
ss
mov
pusha
pop
and
fwait
cmp
xchg
daa
aam
mov
ljmp
aam
or
testb
in
ret
push
cmp
sub
adc
cltd
cmp
ret
imul
push
xor
in
pop
fldcw
nop
sub
inc
lcall
mov
inc
sbb
or
cli
repnz
icebp
in
mov
cmpsb
fcomi
sbb
fmull
bound
xor
clc
into
sub
loope
dec
and
xchg
push
pusha
jns
das
add
adc
jp
dec
repz
mov
adc
mov
cmp
pmaxub
daa
bound
jno
and
repnz
scas
jge
popf
xor
lahf
in
sbb
cmp
xchg
jp
inc
pop
faddl
bound
add
and
out
adc
mov
fidivs
lds
out
jmp
sbb
cli
pop
pop
cmp
scas
stos
mov
add
addr16
fldt
inc
ss
mov
js
loop
mov
mov
sbb
add
in
add
ja
add
ret
ret
je
pop
ljmp
loopne
jg
cmp
and
pusha
and
cmp
ja
fs
loop,pn
rcll
pop
pop
add
mov
insb
push
xchg
movsb
push
into
or
imul
dec
in
int3
pop
das
mov
add
ds
out
xlat
loopne
flds
test
cmp
fs
mov
sub
mov
cltd
mov
and
xchg
popf
iret
pop
jmp
fnstenv
call
jle
push
in
fsts
xchg
lret
jecxz
rol
roll
js
andb
or
mov
movsb
addl
dec
add
adc
inc
sbb
sub
push
xor
fsubrp
dec
add
dec
push
xchg
faddl
mov
mov
cmp
xlat
loopne
sub
cltd
ds
mov
cltd
js
cld
mov
mov
enter
push
push
sti
popf
jnp
mov
sub
call
jne
mov
outsb
pop
push
push
push
mov
push
xchg
inc
xor
push
aas
shll
dec
xchg
lcall
arpl
in
xor
test
xchg
outsb
pop
xor
into
pop
dec
xor
call
push
sub
pop
and
outsl
add
iret
cmpl
and
dec
xchg
inc
push
add
mov
or
cmp
mov
push
or
jmp
aaa
sbb
ret
pslld
std
adc
push
lret
xchg
cmp
cmp
leave
and
mov
gs
adc
ret
mov
cmp
mov
inc
iret
je
mov
lahf
sbbl
out
mov
lret
call
or
add
aam
dec
and
sarb
sbb
pextrw
dec
aam
ret
or
cmpsl
lahf
dec
clc
jl
xchg
out
mov
pop
cmp
nop
popf
pushf
sti
sbb
and
test
jecxz
cmp
push
adc
and
enter
jg
sbb
sbb
js
jecxz
dec
xlat
sbb
cwtl
mov
icebp
bound
dec
push
scas
jbe
dec
inc
dec
adcb
stc
repz
jns
xor
pop
insb
xchg
jbe
es
xorl
js
cmpsl
or
push
xchg
imul
add
sub
lret
lahf
mov
das
sub
fldt
mov
je
repnz
jecxz
and
fwait
cmp
lret
rolb
aaa
inc
sbb
inc
arpl
int3
inc
mov
movsl
test
pop
outsl
push
fcmove
adc
jb
das
ficompl
sti
push
pop
stos
js
sahf
or
inc
ds
xchg
sbb
xchg
mov
jno
or
sbb
cs
rclb
xlat
jl
jle
push
jmp
xchg
test
push
mov
nop
pop
xchg
pop
dec
into
cmc
pop
in
sub
shll
mov
mov
icebp
insl
mov
negl
mov
cmp
test
mov
xchg
repz
jg
test
dec
rcr
add
lahf
cmpb
xlat
sbb
jne
aas
inc
jne
add
outsb
test
dec
and
test
add
lcall
inc
leave
push
aas
insb
les
jle
ljmp
out
ljmp
out
dec
cmp
xor
shll
lcall
inc
sbb
decb
fists
xchg
inc
ret
or
cmpsl
xchg
addr16
jns
mov
jne
xor
iret
sub
lods
gs
adc
or
icebp
dec
push
lds
cmp
lock
popa
xor
cmp
mov
jns
in
sbb
dec
xor
in
addr16
jae
hlt
fs
hlt
lcall
test
aam
xchg
dec
lea
popf
mov
mov
aad
in
cmc
clc
jle
in
hlt
insb
cld
jo
scas
push
mov
inc
cld
sbb
mov
sbb
xor
orl
cli
loope
xchg
inc
adc
pop
jae
lret
sub
push
cmpsb
dec
mov
mov
dec
and
aad
jbe
inc
int3
mov
push
add
or
push
cmpsb
dec
daa
pop
in
mov
fisubs
sti
out
mov
pop
dec
mov
adc
scas
outsl
sub
fs
inc
rclb
es
xchg
lret
std
sti
jl
jg
mov
cmp
lret
mov
xchg
add
or
icebp
outsb
sub
lds
or
xor
mov
arpl
jnp
add
outsl
xor
inc
sbb
negb
xchg
ds
or
add
xchg
mov
push
mov
xorb
mov
addr16
sub
cli
in
fwait
dec
or
mov
ret
shlb
inc
mov
ret
ret
mov
mov
rcrb
cmpsl
lret
pop
dec
cmp
mov
pop
fistps
iret
xchg
aad
pop
lock
pop
popa
repnz
inc
jge
sbb
arpl
inc
xor
clc
or
xchg
mov
out
nop
cmp
push
movsl
xchg
pop
clc
cmp
push
sub
adc
scas
mov
pop
loope
hlt
mov
xor
pop
pop
pop
push
pop
movsl
jmp
xor
leave
push
fcmovbe
add
xchg
rcl
inc
push
mov
or
int3
cmpsl
pop
lret
and
jb
sbb
push
rclb
adc
mov
sbb
mov
loopne
sti
int3
adc
enter
dec
sti
cmp
mov
xor
enter
mov
or
jne
pop
dec
inc
xchg
push
xchg
lret
enter
jge
mov
test
cld
stos
mov
push
insl
dec
nop
and
dec
jmp
push
rol
jb
mov
jae
ss
in
dec
aad
dec
scas
out
hlt
ljmp
xchg
or
call
popa
lea
pop
out
popa
roll
fsubrl
sub
rcll
add
jmp
and
jecxz
shll
mov
cltd
fsubp
mov
pop
sbb
mov
inc
sub
into
out
xchg
iret
mov
mov
ljmp
xchg
nop
movl
pop
repz
sbb
scas
popa
mov
add
lds
fildl
adcb
jb
cmp
mov
mov
jno
fists
insb
pop
jno
pop
mov
mov
sub
jle
or
les
iret
pusha
mov
rclb
rcrb
das
loope
sub
lcall
push
out
sbb
negb
pop
imul
orl
adc
cmp
mov
xor
sub
ss
or
out
daa
push
mov
xlat
movsl
sbb
fstps
inc
jp
sbb
subl
or
js
add
test
mov
jg
loope
mov
js
mov
pop
sbb
jb
inc
jae
scas
cld
pop
in
call
testl
ljmp
pop
dec
xor
sbb
rcl
rcll
cmpsb
lcall
sub
inc
mov
dec
pop
mov
sub
pushf
cltd
mov
std
lock
imul
sub
mov
mov
mov
pop
pop
or
cltd
xor
xor
pop
jb
mov
add
adc
movsb
xor
adc
mov
sub
sbb
mov
push
xchg
jmp
push
or
shlb
or
outsl
mov
mov
ljmp
insb
fistps
mov
test
dec
ljmp
sub
xor
popa
jns
pop
lods
dec
xchg
rolb
inc
sbb
sub
lock
pusha
mov
imul
pop
hlt
sbb
enter
test
out
mov
xor
pop
aad
mov
sub
fcompl
rolb
cltd
pop
loop
loop
pop
mov
in
add
push
jecxz
jp
nop
jns
imul
push
shrb
push
sti
inc
sbb
insb
andb
lds
test
dec
sbb
and
jge
xor
mov
cmp
inc
cmp
insb
inc
fldcw
pop
sti
adc
and
push
enter
sti
fnstcw
dec
dec
inc
inc
mov
sub
jae
jbe
aaa
pop
shll
jle
pop
cli
mov
jle
mov
imul
out
push
lahf
pop
ljmp
test
mov
shl
push
mov
push
cmpsl
xchg
jo
push
sbb
fistps
jne
into
sub
inc
pop
or
stos
mov
mov
xchg
and
mov
nop
pushf
shll
subl
jae
testb
xor
and
movsl
xchg
dec
mov
jp
mov
iret
adc
clc
jnp
pop
jle
jno
mov
pop
insl
scas
mov
fwait
call
dec
inc
pop
into
add
ret
fs
popf
and
pushf
testb
sub
sarb
ds
dec
jnp
popf
mov
mov
fisttpll
cmp
cmp
dec
mov
imul
nop
xor
mov
jb
mov
repz
jae
icebp
mov
addr16
cs
xchg
push
mov
mov
loope
pop
dec
in
mov
push
iret
int3
push
dec
test
and
outsl
lods
sbb
and
mov
jb
inc
adc
aaa
in
outsl
pop
pusha
insl
add
sub
push
fs
movsb
jg
dec
fcomp
add
int3
xchg
pop
imul
cmp
inc
mov
iret
sbb
cs
dec
push
bnd
xor
int3
fiaddl
jge
mov
js
adc
sahf
fs
ret
les
cmpsb
out
adc
sub
arpl
addr16
sahf
addr16
add
out
sbb
loop
std
push
std
xchg
sahf
lods
mov
shlb
repnz
sbb
insl
or
cmp
add
fstpl
push
dec
test
in
mov
cmp
sbb
iret
or
icebp
add
and
or
push
ret
sub
adc
cli
mov
aad
and
shll
fs
jl
lahf
dec
nop
sarb
call
cs
inc
pusha
jne
jp
and
test
jmp
and
cmpsb
xor
pop
mov
loopne
mov
lods
mov
dec
icebp
mov
movsb
shlb
sbb
mov
push
cltd
cmp
subl
add
push
nop
push
jmp
jns
ror
pop
ret
pop
inc
aad
shrl
sahf
cmpsl
push
jb
test
iret
mov
ret
sub
push
xchg
dec
mulb
lods
data16
lahf
or
xlat
imul
hlt
lret
pop
jmp
xchg
dec
inc
jge
out
fldcw
pusha
rcr
add
mov
sub
and
dec
mov
mov
push
push
inc
pop
sub
shl
xor
jns
lret
sub
sbb
add
lret
call
repz
sbb
inc
jp
adc
add
add
rol
pop
mov
pop
ret
inc
cld
test
add
cld
insl
sub
data16
int
icebp
mov
fistps
es
mov
imul
lea
stos
push
mov
push
loop
je
cli
inc
inc
dec
daa
in
jbe
jo
clc
mov
addr16
adc
mov
lahf
scas
mov
int
ja
lahf
mov
lcall
into
jmp
jg
imul
lcall
sub
sub
mov
jb
sbb
call
rol
pop
sbb
call
cmpsl
inc
cmp
cli
imul
push
dec
and
pop
in
inc
fs
ja
arpl
sbb
movsb
shlb
lret
xchg
push
mov
xor
xchg
fucomi
mov
bound
inc
gs
jae
mov
ficompl
movl
lret
mov
aam
dec
les
outsl
jg
or
jge
lock
pop
sbb
sub
jmp
subl
add
dec
pop
xchg
mov
sbb
adc
or
popf
mov
mov
and
shrb
push
jno
mov
out
dec
adc
les
dec
xor
fistps
xchg
out
js
mov
imul
mov
xor
int3
mov
aam
repnz
inc
xchg
leave
scas
jo
fwait
mov
out
pushf
jmp
pusha
adc
pop
sub
addl
movsb
ss
adc
inc
inc
jge
dec
pop
divps
incb
icebp
lret
icebp
and
push
dec
and
int3
out
sub
out
in
lds
testb
icebp
aaa
out
lds
std
pop
cmp
pop
cmp
push
push
push
adc
ds
pop
icebp
das
adc
jl
or
test
mov
into
xlat
xorl
jnp
lods
movsb
adc
test
jne,pn
pop
test
pop
pusha
gs
test
test
pop
push
adc
nop
shrb
dec
dec
fcoml
push
into
pop
xchg
bound
push
stc
mov
jl
sub
jge
test
hlt
outsl
into
inc
loopne
xchg
jecxz
xchg
mov
dec
pop
inc
imull
ficompl
stos
dec
push
js
adc
xchg
pushf
push
negb
mov
sahf
xchg
xchg
aas
repz
mov
popf
push
xchg
sub
lret
adc
jb
adcl
repz
xchg
iret
hlt
outsl
mov
inc
enter
pop
fsubrl
adc
inc
jl
sbb
inc
mov
adcb
jo
cmp
roll
sbb
pushf
outsb
push
hlt
hlt
addr16
mov
call
dec
lcall
daa
sbb
xor
stos
stc
cs
dec
imul
nop
or
xabort
push
movsb
call
jns
mov
cmp
imul
aam
jo
push
movsl
add
imul
jne
jns
mov
loop
xor
or
or
aad
mov
lock
fisttpll
add
and
sub
arpl
pop
cwtl
int
jmp
push
push
jae
lods
aas
das
xor
mov
imull
fisubs
dec
movsl
and
mov
inc
inc
outsl
pushf
dec
xchg
add
out
push
ss
imul
clc
subb
and
xchg
sbb
or
inc
cli
cmp
jns
mov
imul
pop
in
lock
cli
adc
push
xchg
out
pop
add
push
mov
int
out
jne
and
cmp
sti
ficoms
js
xchg
pop
jp
push
add
adc
lds
fbld
cmp
in
repz
aad
pop
rcll
dec
test
sbb
pop
fstpt
adc
mov
call
pop
sub
test
stc
das
dec
adc
add
fwait
push
cli
movsl
rclb
jp
pop
mov
jnp
or
repnz
jnp
fimuls
mov
popa
cmp
add
pop
aaa
mov
pop
fbld
mov
test
sahf
mov
loopne
stc
rorl
and
lock
arpl
inc
push
cli
sbb
pusha
cmp
pop
outsl
adc
cmp
inc
pusha
inc
xchg
lods
in
aaa
ret
fs
aam
lods
or
cmpb
adc
clc
xor
xchg
test
in
jge
jp
insb
add
test
fbld
sti
mov
xor
stos
and
sbb
mov
mov
or
jmp
xchg
mov
icebp
ljmp
mov
stos
jbe
movsl
inc
add
std
gs
jns
mov
push
and
and
out
mov
mov
adc
out
mov
stos
pop
xchg
cmc
xchg
rclb
cmpsl
adc
adc
adc
fistpll
fwait
pop
ss
sti
mov
sub
lock
cmp
mov
cmp
test
lcall
adcb
pop
cli
mov
je
into
cmp
adc
and
in
adc
or
jge
mov
xchg
fmull
or
sub
or
arpl
enter
int
mov
shll
shr
icebp
fdiv
xchg
or
cmpsl
dec
fs
or
or
fsubrs
sti
adc
cmc
xchg
or
movsb
in
jge
sbb
outsb
addl
pop
mov
movsl
sub
test
leave
sahf
cwtl
push
xor
stos
adc
dec
lahf
cmpsl
jp
rcr
repz
xchg
push
cld
xchg
xor
cmc
adc
popa
jb
loop
int3
outsl
adc
stc
cld
xchg
sti
cmp
and
push
cmc
mov
mov
enter
lea
pop
xor
cltd
xor
rorb
cmp
add
lds
imul
sub
insb
int3
adc
lock
insl
sub
scas
cld
cmp
in
or
adc
push
mov
fidivl
inc
pusha
aam
mov
and
lods
shll
fidivs
mov
push
and
add
dec
jg
test
cld
xchg
stos
push
scas
repz
pop
shrb
cmp
fdivrl
jne
and
orl
gs
sub
mov
add
lock
shl
push
mov
outsb
aas
outsb
testb
pop
sbb
inc
pop
add
add
idivl
das
or
add
adc
rcll
inc
pop
xchg
shll
add
xlat
test
icebp
in
jne
clc
push
add
sbb
push
push
fcoms
addr16
imul
jnp
push
sbb
adc
inc
inc
mov
loopne
dec
cmp
loop
stc
in
in
pusha
or
mov
in
xor
ret
clc
iret
cmp
cmp
pop
and
das
pop
cmp
pop
popf
gs
cmp
or
out
or
adc
push
dec
test
ljmp
cmpsb
mov
mov
test
jmp
cmc
and
and
test
enter
arpl
dec
xchg
inc
gs
shlb
xor
adc
int
aad
push
cmp
dec
cld
sub
sub
pop
subl
stos
stos
les
pusha
mov
inc
mov
test
movsl
fisttps
mov
pop
sbb
xchg
repz
sbb
stos
mov
movsb
movq
pop
jae
mov
xchg
mov
lock
lea
sarl
fimull
cmp
out
lock
fidivrs
lret
xchg
lds
popl
fdivrp
lret
mov
pop
pop
data16
pop
pop
sti
cmp
adc
enter
cmpsb
xor
loop
cmp
pop
cmpsl
fcomps
cltd
mov
dec
push
mov
aas
nop
pop
sahf
push
dec
loope
daa
ret
je
mov
in
or
xchg
mov
out
inc
xor
aas
aad
or
and
add
data16
ja
pop
jno
loop
std
mov
hlt
cld
cli
mov
xor
and
dec
sbb
inc
cmp
push
out
mov
popa
xchg
daa
movsb
adc
rol
cmp
jmp
dec
cmc
nop
pop
adc
and
outsb
dec
xchg
mov
xchg
xchg
push
inc
dec
rcll
xchg
test
cmp
lds
mov
inc
lahf
idivb
sbb
insl
mov
sti
and
je
mov
xchg
inc
mov
mov
push
loopne
mov
adc
pop
dec
jo
cltd
cmp
adc
jg
movsb
mov
xor
fs
xchg
sub
mov
push
loop
aas
aas
call
jbe
fucom
dec
ds
pop
into
mov
orb
rol
popa
imul
adc
int
shrl
jmp
bound
push
pop
shlb
xchg
in
xchg
mov
adc
adcb
dec
fstpt
loop
mov
test
lds
daa
cmp
jmp
dec
jge
into
mov
aam
pop
ficoms
rclb
lahf
sub
sub
sbb
mov
mov
lods
mov
push
mov
pop
popw
mov
pop
cmc
and
jae
cld
xor
adc
out
cmpl
and
cmp
movsb
cld
sahf
adc
xor
xchg
int
lret
setbe
add
lods
sbb
push
cmp
shrl
out
repnz
in
jae
add
lea
mov
push
ja
stc
lcall
mov
jmp
push
ss
inc
shr
in
clc
stos
adc
js
popa
cltd
int3
mov
mov
iret
nop
andl
jne
pop
cmp
jae
mov
stc
les
push
add
cs
or
xchg
xchg
jne
adc
adc
ja
xchg
inc
mov
cltd
fwait
movsb
divl
cmpsb
sub
mov
and
jl
iret
mov
lcall
and
std
sbb
sahf
mov
fldcw
fs
push
lods
int3
xchg
test
int3
or
mov
or
xchg
xchg
mov
lock
cmpsl
xor
add
mov
xchg
adcl
cmpsl
stos
fidivs
lods
int
leave
jge
andb
lods
sbb
or
ret
imul
xor
lock
ljmp
movsl
dec
dec
cld
cmp
mov
lds
pop
xchg
jg
xchg
mov
pop
cmp
xor
cmp
push
jg
xor
add
shlb
add
pop
cmp
lret
push
add
mov
je
push
leave
xchg
je
nop
cltd
cltd
out
inc
lods
mov
enter
sbb
sbb
hlt
loope
mov
aad
fmulp
int3
sub
int
je
imul
iret
xchg
jbe
scas
push
xchg
sbb
or
xor
cmp
dec
aad
and
dec
dec
ret
cmp
sub
and
scas
cmp
repnz
rorb
push
sbb
or
ret
arpl
popa
adc
cs
jnp
xchg
xchg
push
push
mov
xchg
fsubrl
sub
clc
movsb
dec
xchg
xor
and
xor
mov
sbb
cmpsb
push
sti
sub
movsl
mov
jg
ja
fwait
imul
xchg
dec
lods
cmp
and
mov
and
xchg
ds
popa
and
pop
add
sti
pop
sahf
je
xchg
aas
push
cmp
xor
push
or
push
das
aas
test
jbe
cli
loopne
push
jb
shl
fdiv
sbb
pop
stos
pop
jae
push
adc
pushf
ss
jbe
movsl
shlb
scas
push
jno
filds
nop
xchg
cld
mov
test
mov
into
pusha
push
mov
fistl
adc
arpl
adc
fistpl
call
popl
imul
sahf
adc
jns
imul
dec
mov
and
adc
fidivrs
xor
lods
ret
loopne
adc
mov
sub
out
mov
push
aaa
scas
lret
leave
int3
mov
mov
scas
pop
xchg
enter
fs
cmp
xchg
pop
ds
cmpsl
or
sub
cmp
cli
rcrl
or
or
imul
mov
lahf
ljmp
js
cs
pop
mov
sti
jmp
arpl
cmp
xlat
xor
cwtl
ret
mov
jp
adc
mov
in
mov
roll
cwtl
popa
aad
mov
iret
std
mov
jmp
xchg
push
cltd
mov
shr
inc
mov
xor
jne
push
ficoml
adc
cmp
les
mov
test
fs
inc
aaa
scas
and
mov
lods
daa
jmp
pop
xchg
add
fucomip
fldcw
das
shrb
ljmp
push
jns
add
adc
xor
mov
lret
jle
lcall
or
pop
pop
pop
in
push
rcrb
jnp
in
sub
cmpsb
jne
xchg
inc
test
inc
fwait
mov
fiaddl
bound
cmpsl
test
inc
pusha
sbb
cmc
sbb
pop
inc
mov
inc
test
jle
cli
mov
lock
loopne
out
xor
push
lret
add
push
mov
das
pop
mov
clc
and
cld
aam
in
out
aaa
bound
push
icebp
loope
inc
mov
mov
leave
push
push
push
insl
subb
adc
outsl
dec
subb
insl
cmp
icebp
jecxz
jo
dec
sub
inc
inc
in
sahf
int
test
fldcw
mov
jmp
hlt
jbe
sbb
scas
in
push
aam
inc
cmp
xor
pushf
push
notb
rorb
add
sbb
cmp
hlt
loop
cltd
push
test
or
es
movsl
pop
lahf
inc
rolb
repnz
push
xor
jmp
imul
mov
push
icebp
mov
sub
mov
cli
sub
dec
xchg
arpl
xor
jmp
insb
test
stos
mov
outsb
adc
jp
mov
or
cmpsl
or
add
les
lret
jl
in
das
aas
push
hlt
pop
sti
cmc
push
xchg
test
fidivl
mov
mov
cld
pop
jnp
xchg
cmp
lea
nop
clc
test
cmp
xor
or
rcrl
mov
mov
sbb
fstps
jb
or
dec
lods
inc
inc
cmp
add
es
dec
sbb
repz
js
imul
push
push
mov
in
lret
push
clc
dec
add
and
and
add
mov
mov
mov
pop
inc
mov
cltd
or
xor
pusha
fdivr
jb
inc
add
cmp
mov
xchg
and
dec
sbb
dec
fildl
pop
arpl
lret
sub
insb
cwtl
mov
sub
aad
bound
adc
and
cmp
mov
and
mov
add
out
shlb
addr16
sbb
cltd
add
outsl
xchg
push
std
add
and
inc
movsb
movsb
add
fsubl
cmp
inc
in
sbb
mov
add
es
inc
into
cmpsl
push
pop
mov
add
loop
xchg
mov
imul
sub
incb
sbb
in
sbb
mov
gs
inc
fstl
lcall
jns
leave
jnp
in
mov
cmp
push
mov
icebp
mov
push
aas
jecxz
and
add
mov
enter
xlat
sub
push
inc
or
dec
dec
or
jbe
outsl
mov
jnp
cmp
or
pop
cmpsl
jp
addr16
add
push
sbb
mov
pop
cli
sub
stc
adc
dec
das
scas
mov
icebp
int3
add
sbb
pop
cwtl
jns
push
jo
pop
cmp
mov
mov
adcl
repnz
mov
mov
cmpl
into
or
push
sbb
stc
aad
dec
sbb
add
or
fidivrl
mov
lock
dec
sar
xchg
adc
jne
cld
pop
int3
sarl
and
cmp
sbb
ja
cwtl
not
push
dec
xchg
in
dec
adc
mov
outsl
push
cs
jg
cld
jne
subb
sub
mov
sub
fldt
lret
aad
movsl
leave
pop
shrl
sub
ds
das
sbb
out
xchg
pop
loope
jmp
mov
dec
cwtl
popa
fistps
leave
mov
flds
or
sub
add
fbstp
cld
push
jne
lea
mov
daa
inc
in
push
sahf
sub
push
pop
ds
pop
dec
cmpsb
push
xor
push
aam
add
les
imul
and
mov
lahf
push
notb
and
sbb
out
adc
negl
add
mov
movsb
roll
jmp
pop
push
or
xor
lock
or
mov
lret
cltd
push
icebp
testl
ret
cmp
pop
dec
xchg
outsl
ss
andl
inc
dec
out
pop
jbe
outsb
mov
pop
jge
inc
dec
mov
pop
jge
mov
xchg
dec
lds
enter
enter
jge
ljmp
in
mov
lods
mov
cmp
sub
sahf
insl
loope
xchg
and
fnop
int3
aad
mov
adcb
or
es
mov
xchg
xor
and
pop
das
pop
imul
addb
scas
inc
fs
inc
xchg
adc
mov
mov
stos
add
fisubl
and
jnp
or
pop
mov
iret
fcomps
sub
inc
mov
fwait
movsb
pop
add
adc
inc
mov
pop
dec
ficoms
jne
lcall
scas
fs
jecxz
xor
out
mov
mov
mov
cmp
mov
sbb
mov
not
cmp
cmpsl
aas
jecxz
adc
mov
ss
xchg
lcall
cmp
adc
jae
outsl
sti
pushw
push
test
push
jmp
popf
pop
pop
xlat
push
mov
sbb
xchg
mov
mov
pop
aas
mov
xchg
mov
arpl
repnz
inc
or
push
cmc
mov
js
mov
pushf
insb
in
scas
or
addr16
hlt
xchg
divl
sbb
jmp
mov
out
jo
inc
adc
cmpsb
xchg
repnz
int
leave
rcrl
test
mov
sbb
das
ret
ret
ja
imul
in
pop
jmp
push
jbe
ja
jae
cmpsb
push
repz
mov
inc
cmp
inc
xchg
adc
clc
jge
mov
aaa
sbb
cmp
mov
movsb
adc
mov
sti
jecxz
xor
lods
ds
ljmp
adc
scas
insb
add
xor
orb
mov
inc
out
std
sub
mov
mov
imul
push
or
int
dec
add
repnz
stc
add
popf
inc
cli
jb
jecxz
andb
shrl
jl
adc
imulb
call
scas
pop
js
jecxz
out
lea
loopne
ja
mov
mov
call
and
pop
add
and
in
divl
xorl
push
test
add
aam
or
movsb
sub
xchg
xor
lcall
cmpsl
into
enter
cmpb
mov
mov
out
mov
cmp
cmpsb
loope
mov
jl
mov
ret
jb
push
add
or
outsl
push
fiadds
cltd
mov
jp
lea
or
daa
jecxz
ret
mov
repnz
js
jnp
xor
outsb
and
aad
test
fdivr
adc
fwait
or
jmp
pop
and
or
fstps
mov
cmp
sarl
imul
fistps
mov
rclb
sbb
imul
pop
out
jmp
pop
lods
ja
pop
add
adc
jo
gs
cmpsb
scas
lret
xchg
fmull
fwait
and
and
or
fcompl
sub
shlb
or
xchg
clc
ss
repz
test
xchg
jae
xor
sub
sub
sahf
adc
lods
out
andl
mov
les
notb
xor
xchg
pop
push
dec
aaa
jle
sbb
divl
and
sar
inc
cmpl
xchg
lock
int3
and
and
dec
xchg
or
lret
leave
pop
nop
loope
pop
pop
js
nop
test
push
and
out
loop
inc
push
gs
xor
pop
pop
xor
pop
jle
jns
pop
scas
xor
test
pusha
int3
push
push
and
fldl
outsl
inc
imul
js
mov
pop
pop
iret
add
pop
inc
ljmp
pop
or
jge
int3
mov
xlat
push
xchg
add
roll
pusha
xor
mov
test
popa
fwait
ja
mov
xlat
daa
mov
inc
pop
pop
mov
xchg
jae
dec
push
insb
fadds
push
lret
push
adc
dec
adc
mov
sbb
cmp
adc
call
push
inc
push
loope
mov
push
int3
pop
sub
decl
fucomi
mov
xchg
pop
out
pop
repnz
mov
add
pop
push
xchg
fidivs
jns
mov
pop
and
adc
sti
loope
pop
fistpl
sti
lds
inc
je
imul
insb
insl
popa
pop
mov
andb
cltd
shrb
xchg
dec
sarl
and
push
test
cmp
ljmp
inc
fistl
mov
mov
sub
fimull
cmc
adc
je
fbstp
scas
xor
or
in
push
pop
test
movl
repz
jne
sub
push
inc
lds
lods
js
ss
rcrb
jp
es
xor
mov
in
cmp
test
movsl
cwtl
add
in
sub
cmpsl
mov
sbbb
enter
mov
andb
cli
pop
leave
or
stos
stc
test
aad
int3
shrl
out
xchg
ds
mov
add
xorb
loop
adc
mov
xchg
cmp
popf
add
cmp
popf
sub
lods
adc
sub
cmp
add
jle
mov
xlat
and
push
mov
sarl
pop
shlb
cwtl
aad
roll
mov
test
lea
and
mov
pop
fxam
fnstenv
test
jmpw
jne
icebp
into
sti
push
mov
lods
repz
outsb
xor
arpl
ds
mov
cmp
stc
decb
dec
and
mov
adc
xchg
ficoml
inc
push
repnz
pop
lds
jo
into
push
inc
pop
scas
adc
cmp
adcl
sub
ds
cmp
xchg
jle
dec
jne
aad
jno
push
mov
jbe
lcall
jns
sbb
push
rol
repnz
std
jl
mov
sub
out
addr16
rcrl
lcall
sahf
sub
dec
push
xor
lret
mov
shl
jne
popf
incb
call
xor
sub
or
inc
inc
mov
sbb
mov
fcmovu
test
xchg
aam
int
lcall
test
imul
gs
mov
cmp
pop
jge
push
lcall
fmull
movl
dec
inc
cld
movsb
mov
jbe
aam
cmp
adc
outsl
jge
or
fwait
rorl
cmp
sub
add
pop
loop
mov
push
aam
and
push
mov
mov
cmpsl
jle
aaa
in
sbb
sahf
popf
fs
jmp
sub
daa
pop
jmp
cmpsl
jmp
add
shrb
dec
dec
cmp
xor
je
lahf
ss
xchg
adcb
dec
fcoms
sub
add
jl
add
inc
pop
push
orl
inc
repnz
in
rclb
inc
sbb
out
loopne
cld
mov
or
jmp
adc
insl
or
xchg
sbb
cmp
js
shr
lods
icebp
into
push
sbb
inc
adcl
mov
int3
xchg
cmp
xchg
out
in
dec
leave
xchg
mov
cld
xchg
test
mov
inc
popa
daa
shll
arpl
test
mov
xor
ret
jmp
mov
scas
ret
push
cs
adc
test
lret
jnp
push
dec
cwtl
jp
mov
mov
sti
int3
in
mov
ror
and
js
sbb
je
jle
mov
xchg
lret
or
pop
xchg
aam
cmp
inc
fstl
jmp
push
movsl
mov
mov
push
push
xor
sarl
out
test
test
cli
insb
inc
stc
out
and
xchg
xchg
enter
mov
mov
inc
fcomi
call
les
add
push
pop
push
fstpt
stos
xor
xor
add
addr16
or
divb
sahf
fsubs
stos
or
cltd
or
scas
sbb
mov
std
aam
xor
iret
aas
push
stc
adc
xchg
sub
and
lcall
jo
outsb
or
mov
js
scas
cmc
arpl
cmpsb
adcl
xchg
mov
in
sbb
mov
jl
sbb
lock
ret
push
test
mov
mov
xchg
mov
and
xchg
cmp
mov
orl
out
stc
lcall
or
mov
ss
popa
dec
lret
mov
adc
jbe
pop
or
add
inc
adc
lods
adcb
dec
mov
sub
or
or
jb
xor
pop
add
test
sbb
popf
push
lret
pop
cmp
mov
aam
xchg
sub
call
and
push
pop
mov
lock
inc
inc
jp
push
push
iret
push
dec
arpl
je
or
and
ss
mov
ret
pop
aaa
and
dec
pop
clc
cmp
lret
mov
pop
mov
out
icebp
push
out
xlat
sub
lock
xlat
cmpsb
cmp
mov
pop
jb
inc
mov
cmpsl
mov
jo
stos
dec
enter
or
cmc
push
add
test
sbb
cmpsl
out
dec
xchg
pop
fs
pop
jns
add
mov
lods
push
pop
xchg
and
ljmp
push
push
jecxz
sub
or
sub
out
mov
inc
stc
dec
pop
outsl
loope
test
das
push
dec
movl
sbb
adc
cmc
inc
sbb
rcrb
mov
test
lcall
loopne
adc
in
in
orb
lods
clc
out
jge
push
dec
xchg
sti
xchg
pop
je
mov
cs
sbb
jge
xchg
movb
xorb
ret
in
mov
out
cmp
mov
dec
pop
rcrl
and
fs
popl
add
pop
push
je
sub
push
jmp
sub
in
add
cmp
cmp
andb
in
push
xchg
aad
insl
xchg
cmp
mov
xchg
out
mov
mov
dec
cmc
adc
test
lret
add
pop
jno
fstp
xor
xchg
xorl
mov
out
aaa
inc
ja
mov
pushf
das
mov
sbb
lods
fdivs
mov
xchg
inc
inc
aam
fdivrl
mov
and
add
stc
ds
xchg
sub
fmuls
xchg
lret
iret
sub
fiadds
xchg
outsb
iret
inc
out
popf
xchg
dec
mov
mov
pop
aas
mov
pushf
leave
repnz
push
xchg
adc
push
iret
popa
xchg
outsb
and
gs
sarl
out
ljmp
pop
sbb
dec
mov
mov
and
sbb
push
sub
mov
mov
jns
daa
jle
dec
jecxz
aaa
mov
mov
or
mov
in
dec
jmp
cmpsb
or
mov
push
mov
popl
cmpsb
in
xor
xor
aas
out
mov
pop
xor
add
mov
ljmp
or
lcall
cmp
pop
popa
xchg
dec
mov
mov
cmpsl
cwtl
arpl
hlt
daa
or
xor
dec
fwait
sub
jno
inc
dec
xchg
pushf
sbb
lods
xchg
out
add
pop
clc
xor
and
bsf
in
or
cwtl
pop
lcall
add
mov
inc
mov
and
pop
aam
jl
cltd
mov
mov
pusha
imul
lret
mov
shr
adc
test
inc
mov
ror
jle
ror
mov
stos
dec
test
xorb
enter
cmpsb
fmuls
ror
in
fmull
add
setns
pop
push
mov
adc
cmp
sahf
xor
mov
mov
pop
push
lret
subl
test
ret
mov
xor
mov
push
inc
cli
js
sbb
out
loopne
notl
fs
mov
cld
fwait
sbb
adc
sbb
adc
adc
ja
repz
mov
ret
lods
repnz
negl
filds
xor
movsl
pop
insl
xor
cmc
int3
rcr
mov
cld
ret
addl
aad
or
inc
inc
xor
xchg
mov
cmp
rcl
data16
add
cmp
and
popa
ss
inc
lcall
adc
or
scas
xchg
lock
jae
pop
cmp
lret
sbb
jo
sub
rcr
jno
imul
scas
cltd
sub
mov
xor
pop
jne
xlat
jo
xchg
outsl
lcall
jno
lods
je
pushf
lcall
and
xor
pop
push
mov
xchg
xchg
test
dec
imul
add
or
mov
xlat
and
cs
out
cltd
aam
inc
xchg
sub
js
loop
jp
das
imul
sbb
fcomps
push
mov
cmpsl
andb
rcrl
sbb
ljmp
fdivl
mov
dec
pop
xor
ret
jae
outsl
fmul
jle
psubusw
das
adc
scas
dec
int
jmp
mov
pop
aam
pop
jg
mov
popf
test
repz
mov
scas
adc
lcall
push
adc
mov
mov
hlt
and
fmull
push
xor
jmp
mov
fdivrl
pop
push
xor
cmp
push
sub
negb
sbb
adc
jb
adc
aam
subb
mov
popf
and
and
jp
call
dec
jg
out
sarl
repz
jns
mov
push
out
mov
test
add
ds
pop
outsl
setl
mov
dec
mov
or
cmpsl
sub
mov
jne
mov
xchg
or
adc
jbe
mov
mov
lods
push
fidivrs
sar
or
inc
and
xchg
sbb
inc
and
lret
jne
repz
out
popf
mov
mov
jle
xlat
paddusw
stos
pop
and
or
inc
iret
xchg
pop
lret
or
lcall
pop
test
xchg
push
mov
add
std
adc
push
arpl
stc
and
daa
in
mov
jl
pop
adc
sub
and
xchg
adc
aaa
sub
mov
add
pop
dec
fwait
xchg
adc
push
cmc
insl
ds
mov
pop
fldt
push
sahf
mov
int3
out
inc
adc
pop
cs
std
leave
hlt
pop
testb
xchg
adc
pop
cmp
adcl
pop
mov
aas
repnz
insb
adc
pushl
inc
fs
cmp
sarb
adc
and
xor
jae
jne
jp
or
in
sbb
shl
or
in
xor
subl
pop
cmp
push
and
pushf
mov
jns
fldenv
mov
lcall
loop
movsb
dec
and
nop
xchg
mov
test
popa
xor
mov
cli
neg
adc
sbb
and
flds
movsl
stos
mov
aas
inc
imul
movsb
lahf
imul
leave
ljmp
stc
movsb
jecxz
sub
lds
xchg
sub
xor
jae
imul
int3
lods
adc
pop
push
mov
loope
shlb
jecxz
enter
lock
nop
aam
inc
jnp
lock
popf
inc
and
dec
xchg
dec
out
xor
cmp
aad
jae
jle
mov
lods
cld
xchg
loop
enter
cmp
adc
pop
push
es
repnz
mov
jecxz
and
adc
pop
inc
sbb
lahf
xchg
mov
shl
test
in
jmp
clc
xlat
adcl
cmp
lds
and
jb
adc
xlat
sbbl
push
add
cmp
loope
xor
js
ljmp
stos
rcrl
and
lcall
push
loop
sbb
inc
xchg
xchg
xor
adcb
lods
imul
insl
push
sbb
out
rcl
aas
mov
jnp
adc
out
inc
push
jp
rorl
xchg
fbld
mov
pop
push
xor
push
shll
sub
mov
shl
rol
les
enter
sbb
popa
sbb
cmpsb
sbb
push
push
mov
cs
jl
jnp
sub
xchg
adc
mov
xchg
in
adc
repnz
xor
insl
sahf
int
mov
je
mov
arpl
mov
xchg
jecxz
cmp
fnstcw
adc
lret
mov
push
cmpsl
enter
inc
jecxz
into
lret
xor
in
shl
xchg
adc
cld
in
mov
jns
push
dec
es
addb
es
add
cmp
les
xchg
add
push
mov
repz
ret
pop
push
xchg
subb
fisubrs
mov
add
dec
adc
mov
sub
pop
loopne
jnp
sub
pop
jne
data16
aad
fnstsw
xlat
and
push
cmc
outsl
lds
jmp
fldt
icebp
jecxz
fsubr
scas
daa
inc
xor
test
cld
rorb
jp
bndstx
add
pop
dec
or
ds
lahf
cmp
xor
aam
cld
pop
shlb
dec
sti
pop
jne
out
mov
jmp
xlat
fldz
inc
mov
adc
jb
dec
dec
mov
push
insl
adc
mov
mov
jp
fcompl
testl
daa
neg
cmp
sub
aas
lods
and
shlb
ficoms
imul
sub
out
inc
mov
adc
cli
add
jbe
mulb
pop
adc
mov
xchg
sti
outsl
fcoml
sub
sbb
insb
int3
stos
push
les
mov
push
push
or
inc
ja
push
push
int
sar
or
xchg
aad
andl
lds
stos
mov
xor
popa
or
dec
mov
or
xor
mov
push
xor
rcll
scas
xor
std
lock
sbb
clc
fisttpl
add
test
inc
lret
jbe
jle
sub
sbb
or
fwait
push
push
jp
inc
pop
sbb
mov
sbb
xchg
push
imull
lea
out
das
xchg
es
push
int3
addb
jno
mov
sti
in
add
dec
aad
jns
fucompp
scas
add
scas
xlat
negl
adc
es
jae
pushf
mov
lahf
mov
out
sbb
fxch
sbb
xchg
sti
add
imul
jmp
sbb
xchg
xor
lods
cmp
dec
iret
or
aas
mov
cmp
xchg
and
aas
push
enter
fidivs
push
mov
call
pusha
add
adc
movsb
enter
je
rorb
loop
arpl
mov
iret
mov
xor
cltd
dec
aas
das
imul
enter
xor
adc
movhps
pop
xor
mov
jbe
dec
in
or
je
scas
in
ljmp
jmp
or
outsb
xchg
into
in
lods
iret
add
leave
pop
lcall
in
mov
cmp
sbb
loopne,pt
mov
jl
mov
xchg
pop
pop
jb
cmp
inc
nop
sahf
sbb
adc
pop
dec
xchg
test
xchg
cmp
push
sub
movsb
sub
pop
adc
insl
stos
inc
mov
xchg
pop
cmp
inc
ret
and
and
mov
add
or
sbb
dec
or
push
sub
adc
dec
in
xchg
int
mov
test
sbb
jno
jnp
es
mov
mov
fdivl
xchg
adc
addr16
cmp
xchg
inc
sbbb
xchg
lret
add
jmp
inc
pop
add
fadds
cmp
mov
mov
sub
in
lret
dec
dec
fwait
sub
fs
mov
mov
sbb
std
pcmpeqd
mov
mov
jl
arpl
pop
sub
sub
mov
lcall
ret
ret
mov
pop
in
rcrb
and
inc
xlat
stos
mov
mov
test
fcmovbe
xchg
stos
ljmp
loope
sbb
mov
jno
out
lret
fwait
mov
je
push
xor
fnstsw
cmp
push
add
mov
hlt
lahf
insl
jle
scas
dec
ss
jge
jmp
jl
or
pop
jb
inc
aas
inc
enter
adc
inc
mov
shrl
xor
orl
icebp
arpl
mov
test
cld
push
popa
push
adc
subl
sbb
ror
int3
into
movsl
push
das
jo
mov
ja
shlb
ret
popa
jle
arpl
pushf
hlt
xchg
or
adc
lock
sub
cwtl
pop
in
push
mov
sbb
ret
add
sub
cmp
rorb
int3
xor
out
lds
mov
xchg
testl
mov
out
xchg
imul
mov
mov
push
lea
sub
adc
adc
push
mov
dec
jns
movsb
sbb
xlat
mov
in
out
and
int3
mov
mov
push
mov
mov
iret
dec
xor
cmp
xor
insb
mov
and
inc
mov
andb
add
lea
sub
mov
jbe
clc
imul
repz
push
and
out
and
in
lods
sub
cmpsl
inc
fdivs
fcoms
insb
mov
push
xor
call
xor
mov
cwtl
push
cmp
dec
sbb
enter
jecxz
test
outsb
sub
dec
mov
daa
mov
xchg
cmp
dec
dec
ret
stos
pop
sti
lock
or
decl
xor
cld
fisttps
mov
cld
and
and
popf
mov
push
dec
pop
adc
movsl
nop
cmp
stos
imul
jmp
xor
xor
sub
cmc
ljmp
cmc
jmp
bnd
jo
imul
aaa
psrlq
inc
jl
xchg
mov
mov
fcmovbe
loope
test
and
shr
cmovnp
pop
stos
and
repnz
fsubr
lret
mov
xchg
mov
add
int
add
jne
cmpsb
cmp
sub
mov
cmp
clc
xchg
into
jne
add
or
mov
jae
cmc
sub
and
stos
jmp
and
les
outsb
idivl
jnp
mov
xor
outsb
out
pushf
xor
pop
xchg
mov
mov
ret
pop
mov
outsl
mov
jbe
inc
and
aas
lods
pop
cmc
pop
mov
fwait
push
sbb
xchg
mul
pop
jle
sub
fucom
mov
mov
mov
test
popa
xchg
jg
enter
testl
stos
lods
jmp
jbe
dec
test
cmp
mov
mov
xor
inc
adc
jle
test
test
jl
push
outsl
cmc
sbb
adc
inc
pop
jb
repz
xlat
adc
mov
jg
fdiv
pop
xlat
sbb
loopne
jl
ret
sbbb
jmp
xchg
dec
aas
mov
or
mov
shl
test
adc
test
lock
aaa
lock
push
xor
addr16
out
scas
or
inc
mov
cwtl
sahf
xchg
sbb
jnp
aam
xor
andl
cmc
jg
jp
test
sbb
mov
xor
push
mov
mov
dec
ljmp
dec
inc
lcall
mov
cld
pop
outsl
dec
movsl
and
out
dec
cmc
mov
je
lods
mov
xchg
aas
xor
and
xchg
dec
or
testl
push
fidivrl
jp
cld
or
mov
mov
jnp
pusha
pop
daa
sub
fldt
loopne
xchg
adc
push
pminub
jnp
cmpsb
lret
ljmp
cs
adc
jge
or
dec
jle
out
imul
mov
jno
cmp
aam
mov
in
jle
aad
push
cli
insb
jnp
shlb
jl
lret
mov
decb
inc
sti
fsts
sbb
test
ftst
aaa
jg
sub
ret
scas
or
dec
popf
clc
push
test
jmp
imul
push
add
rorb
out
or
fs
cmpsl
out
shrb
les
stc
mov
cmpsl
aaa
ljmp
adc
in
aaa
xor
vmovaps
push
inc
mov
mov
sub
adc
add
mov
xchg
mov
xchg
fimuls
push
pushf
xchg
movzbl
push
add
test
xor
pop
ret
add
cmp
movl
aaa
cmpsb
add
inc
inc
jecxz
andl
dec
fldenv
adc
jmp
in
sbb
into
imul
daa
movsl
cmp
add
xor
adc
and
cmpsb
or
xchg
sbb
pop
jne
out
addr16
or
hlt
lds
sbb
cmpb
sti
ret
addl
pop
test
xchg
stc
mov
pop
ret
insl
into
test
incb
push
mov
loop
push
adcb
decb
mov
or
sahf
xlat
mov
xor
lcall
sub
jne
push
push
pop
xchg
mov
rolb
lcall
adcl
sbb
cltd
out
add
lods
fdivrp
add
pop
push
push
addl
mov
push
lea
xlat
cltd
inc
dec
cwtl
stc
cmp
mov
dec
dec
pop
mov
lea
jge
xchg
mov
dec
pop
lods
or
dec
jne
mov
mov
iret
cs
cltd
sub
lock
cmpb
or
popa
subl
jb
test
adc
push
or
sub
sub
aaa
xchg
cmp
push
fsubrs
sub
mov
jge
pop
shrb
dec
outsb
mov
push
add
mov
xorb
in
sbb
idivl
pop
dec
mov
mov
push
mov
add
mov
and
je
test
dec
pop
jg
or
and
and
mov
dec
mov
out
ja
sarb
inc
aaa
push
xchg
arpl
xchg
imul
lcall
shr
adc
fnstsw
xor
rol
cmp
and
mov
pop
pop
cs
mov
int
call
bound
and
mov
xchg
loopne
push
and
pop
jno
iret
add
sbb
negl
xor
lea
lret
movsb
movb
jp
daa
add
jmp
loopne
icebp
and
test
mov
inc
in
ret
adc
push
lock
inc
mov
ficoml
popa
jle
sbb
negl
loopne
xchg
mov
sbb
dec
out
and
dec
insl
and
mov
jb
rcl
cltd
jo
stos
cmp
pop
repnz
int3
movsb
mov
fwait
movsb
cmp
test
push
out
pop
push
adc
ret
xchg
jecxz
mov
out
jp
xchg
lcall
mov
pop
push
pop
ret
aad
and
ss
mov
std
and
scas
cmpl
shll
or
popl
mov
stos
sbb
fstpt
mov
push
xorl
cltd
ljmp
mov
dec
loope
mov
jecxz
das
jg
lcall
leave
daa
pop
pop
out
inc
sbb
out
andl
push
aad
cwtl
push
pop
mov
jo
push
adc
hlt
xor
mov
xchg
inc
adc
in
inc
arpl
jmp
mov
add
mov
adc
pop
test
test
mov
es
insl
sub
out
adc
jmp
rcrb
mov
and
test
pop
pusha
lods
pusha
cwtl
std
xor
hlt
das
insl
cli
sbb
add
fsubl
sbb
in
cmpsl
sti
jnp
int3
push
outsl
lods
push
xchg
dec
mov
into
data16
in
daa
mov
aam
dec
xchg
sbb
scas
call
lcall
mov
sbb
cwtl
arpl
lock
sarl
scas
sti
testb
pop
fldlg2
movsl
lds
push
mov
cld
fs
outsl
pop
imull
pop
fmull
xor
sbb
ret
mov
xchg
das
pop
adc
out
xchg
sub
pushf
nop
add
clc
fcoml
sarb
mov
dec
mov
mov
xor
cmp
push
xor
mov
shr
xchg
and
lds
clc
lret
scas
cmc
and
cltd
xor
sarl
jg
and
insb
mov
inc
jmp
ja
mov
flds
jnp
shrl
scas
cmp
ss
mov
pop
dec
xchg
add
aad
rorl
pop
mov
in
dec
lahf
push
mov
sub
mov
call
sbb
ja
test
negb
mov
push
ja
or
enter
xor
test
adc
push
scas
fwait
sub
and
subl
mov
cmp
movsb
stc
dec
inc
in
lock
lret
adc
add
daa
lcall
cmpsb
fwait
push
push
data16
mull
fsts
in
lahf
jmp
jo
mull
imul
insl
lock
jo
mov
fsubrs
adc
sar
icebp
pop
lods
cmpsl
xor
js
sub
push
mov
jmp
adc
rolb
dec
sbb
aas
into
sub
sbb
xchg
dec
cmp
in
push
sub
dec
out
sub
lea
bound
ficomps
cs
fildl
pop
adc
and
inc
ret
jbe
mov
push
mov
arpl
je
push
push
jecxz
mov
adc
hlt
lods
cmp
and
stos
and
das
pop
or
cmp
inc
pusha
aas
mov
out
inc
out
loope
das
in
test
adc
xchg
jo
sub
movsb
insl
adc
popa
push
bound
es
mov
add
jmp
cmp
scas
stc
cmpsw
pop
roll
xlat
mov
out
xchg
mov
cmc
mov
pop
in
aam
mov
cmp
and
or
ja
je
add
and
mov
lods
lods
push
push
pushf
mov
in
adc
cmp
cld
enter
add
cmpsl
adc
push
mov
dec
cwtl
pop
cld
xchg
addr16
sub
addr16
into
dec
dec
cmpsl
std
jbe
int3
mov
xlat
test
add
add
sahf
add
xchg
add
fadds
xchg
outsb
inc
stos
dec
bound
dec
pop
xor
push
sub
adc
inc
jmp
xchg
mov
inc
sub
pop
shrl
or
scas
dec
mov
sub
xor
data16
stc
leave
jae
insl
inc
int
aam
sbb
daa
xchg
push
jmp
push
mov
dec
inc
mov
adc
scas
jge
in
in
fs
sbb
rcl
out
jmp
stos
mov
rcrb
cld
xchg
outsb
add
dec
inc
inc
cmp
sbb
fwait
mov
cmp
out
jecxz
cld
xchg
adc
rcll
fadds
jae
bound
cmp
cli
pop
xlat
push
adc
shrl
push
pop
loopne
cli
pop
test
mov
cmp
jbe
sub
xor
jns
loopne
sub
mov
mov
pop
outsl
lahf
jo
iret
roll
xchg
and
movsl
int3
int3
in
inc
out
out
in
pop
es
sub
setb
or
jno
mov
mov
xor
stc
mov
jg
mov
or
push
aad
fistpl
pushf
jg
outsb
stos
repz
push
add
mov
push
pop
cmp
loopne
addr16
aam
or
or
rcll
sbb
xchg
ret
js
dec
fstpl
jnp
int
ja
outsl
xchg
nop
pusha
fimull
cmp
sub
sbb
pop
xchg
mov
add
inc
test
mov
xchg
mov
js
cld
in
ljmp
pusha
mov
mov
mov
xchg
jae
js
lods
ljmp
push
xor
sbb
jbe,pn
inc
pop
cmp
xor
insb
xor
rcll
popf
jg
int
test
lea
or
inc
inc
repnz
std
shlb
xlat
stc
mov
sub
cmpsb
jmp
aad
ret
and
mov
aam
mov
imull
sbb
xchg
cmp
xchg
push
outsl
pop
mov
jae
lds
data16
mov
jbe
pop
or
fidivrs
in
or
or
mov
fsubl
add
mov
aas
popa
movsb
es
aad
or
jl
dec
fldenv
into
lret
iret
cmp
loop
fisubrl
lods
lret
daa
mov
xor
into
and
andl
jae
mov
push
fbstp
push
add
xor
pusha
je
int
outsl
sbb
movsb
stos
xor
jg
iret
inc
mov
xor
in
addr16
rolb
lods
mov
test
mov
data16
lea
sub
sbb
ret
dec
push
or
andl
jmp
add
sar
pop
shlb
mov
mov
xorl
lods
and
push
ds
add
sub
mov
subb
inc
adc
mov
in
mov
les
imul
pop
mov
loopne
xor
jbe
sub
nop
lea
repz
ljmp
sbb
pop
je
sbb
pushf
jmp
pop
cmp
bound
mov
mov
mov
das
ret
clc
js
les
inc
push
xor
shlb
or
je
in
loope
and
pop
xor
or
mov
std
adcl
add
cmp
outsl
ret
sbb
aas
dec
fimull
sbb
xor
les
repnz
pop
push
xchg
in
sub
clc
call
fwait
insb
mov
int3
jl
xchg
cmpl
and
ficomps
xchg
ret
sub
jb
push
jge
popf
arpl
lcall
or
inc
inc
out
imul
sub
test
jae
xchg
cs
mov
or
cli
ret
aam
and
dec
daa
mov
out
jae
add
jmp
add
push
and
push
jge
out
cmp
dec
jb
inc
mov
mov
divl
mov
jecxz
xor
rclb
cli
inc
lret
add
or
cmc
add
mov
lods
sub
pop
lcall
lods
sub
xchg
pop
mov
mov
pop
xchg
mov
movq
jns
iret
adc
scas
xchg
xchg
xor
jbe
rcl
fs
in
jns
aad
aas
sbb
lret
dec
pop
popa
hlt
mov
shlb
mov
pop
idivb
xchg
push
test
xor
jbe
cs
lods
in
pop
xchg
mov
sbb
lds
jl
movsl
fdiv
jb
sbb
add
jmp
cmp
orl
jl
repz
and
mov
or
fsubp
into
jmp
adc
loope
es
hlt
push
sbb
inc
mov
nop
outsb
outsl
add
sbb
ljmp
cmc
jg
test
push
sti
mov
dec
sub
adc
pop
and
js
jle
das
add
pop
inc
fidivs
ss
loop
movsl
add
gs
or
cld
sarb
jp
fnstsw
insb
inc
mov
adc
dec
stos
xchg
pop
push
adc
jbe
sbb
push
sbb
pop
arpl
loop
adc
push
xor
xchg
push
gs
inc
icebp
out
loope
xor
cmp
ds
jge
lods
xchg
pop
cltd
pop
lcall
dec
mov
dec
mulps
out
pop
imul
es
mov
aad
mov
int
xchg
sbb
fs
clc
xor
daa
xor
mov
ret
int
jo
loope
mov
or
inc
sbb
pop
out
lret
fnstsw
mov
cmpsb
xor
movsl
pushf
cmpsb
or
xchg
push
cmp
inc
ret
and
cmpsl
and
mov
insl
xor
push
pop
xlat
xchg
mov
aaa
enter
pop
or
push
cmp
sbb
dec
sub
add
fdivs
pop
sbb
xor
cmp
lahf
mov
sbb
sub
test
je
outsb
movsb
pop
sub
cmp
fimull
xchg
mov
jae
nop
mov
stc
mov
xchg
or
into
xchg
pop
jb
or
mov
adc
push
insb
out
mov
loop
adc
std
cwtl
sub
add
fistpll
fistpl
in
dec
cmpsl
dec
sbb
xor
data16
pop
sbb
jp
pop
push
lret
dec
and
lcall
shl
repz
aas
mov
stos
adc
enter
js
enter
icebp
aam
in
outsl
sti
adcb
lds
mov
mov
out
call
jle
sbb
ja
sbb
mov
pop
insb
or
mov
push
shll
test
sbb
jmp
insl
lret
ffree
cmp
sbb
rorl
jg
xor
xlat
xor
xchg
mov
js
dec
enter
sbb
aam
orl
sub
in
and
shr
pop
ja
and
outsl
sub
stos
mov
adc
push
xor
sbb
shlb
push
xor
shr
scas
dec
addr16
stc
jb
add
pop
imul
push
xor
cmp
dec
mov
mov
sbb
dec
push
cltd
xchg
test
test
aad
loope
fstpl
sub
push
xor
inc
cld
sti
movsb
rcrb
jb
jae
push
cmp
mov
and
dec
push
insl
repz
mov
sub
xchg
jb
test
jge
mov
pushf
mov
fisubs
jecxz
pop
rclb
push
test
adc
add
lahf
sbb
into
ror
mov
adc
ret
and
movsl
push
and
sahf
pushf
lcall
cmpsb
scas
cmp
popf
fs
or
jl
sbb
push
pop
lock
pmaxub
fistpl
or
popf
rcl
mov
insb
jge
or
outsb
pushf
inc
out
test
or
shrl
out
xchg
mov
sahf
mov
push
sarb
lcall
xchg
or
shll
loopne
or
pop
dec
dec
jns
push
shrb
rorl
lds
lcall
rdtsc
lock
loopne
int3
and
fwait
or
cltd
sub
fldt
ret
pop
andl
and
lret
fstpt
sbb
dec
pop
pop
jp
cs
xor
dec
pop
js
cmovns
and
fadd
fnsave
dec
loope
lds
mov
test
xlat
pop
inc
fidivs
jns
sbb
adc
xlat
mov
movsb
clc
sti
rorb
sti
pop
call
xchg
ficoml
mov
push
packsswb
xchg
ja
cmp
clc
push
jo
in
push
adc
out
andb
inc
mov
inc
and
push
dec
fwait
push
jge
jne
mov
push
add
adc
xorl
xchg
lret
pop
imul
xor
fisubs
adc
sahf
imul
mov
iret
pushf
test
insl
xor
dec
je
arpl
jo
fdivrl
dec
jne
sub
and
or
sarl
jle
test
dec
add
ljmp
and
imul
ret
fisubl
cwtl
and
scas
add
cmpsb
jns
adc
pop
lods
xor
mov
sub
imul
pop
outsl
push
mov
jns
sub
test
addr16
scas
xchg
or
mov
push
ja
popf
sbb
call
xchg
cmp
pop
or
insb
push
xor
fcmovnu
jge
outsl
enter
xchg
ficompl
jecxz
cs
ficomps
cmp
cmp
mov
stos
stos
sub
add
jno
inc
jbe
movsb
push
leave
popl
and
push
in
pusha
cld
clc
cmp
jne
fwait
test
push
call
gs
mov
ret
xchg
test
outsl
es
adc
pop
cwtl
jno
adc
adc
inc
mov
push
popl
repz
lock
cmp
in
push
mul
loopne
jb
push
jno
sahf
pusha
and
push
jecxz
pop
mov
loopne
jne
xchg
pusha
loop
arpl
mov
out
pop
xor
sub
in
xor
jge
fistps
das
pop
cmp
fldt
mov
std
add
in
adc
jl
dec
mov
sub
mov
cmp
xlat
icebp
sub
std
lcall
inc
fstpt
fidivl
bound
sbb
leave
mov
add
pop
fnstcw
lock
test
popa
cli
jbe
pop
dec
leave
push
push
daa
jbe
jp
inc
cmp
fcomps
aad
lahf
pop
shrb
test
and
or
repz
psubw
pop
sub
aas
nop
xchg
adc
loopne
or
pop
mov
je
std
sub
and
xor
sbb
sbb
fstps
xor
pop
mov
jne
pushf
hlt
xchg
xor
rol
enter
aad
ret
cwtl
xor
push
test
xchg
and
movd
fcomps
jae
test
insb
leave
fcmove
dec
int
mov
imul
or
and
in
jb
jg
aad
mov
cmp
mov
nop
ja
and
arpl
jns
pop
out
dec
sbbb
rcl
add
sub
insb
xor
stos
jge
push
push
les
push
xorb
xlat
sbb
mov
out
imul
push
adc
mov
lods
popa
shl
mov
packuswb
sub
adc
or
andb
xchg
clc
xchg
into
xchg
push
addr16
repz
fistpll
lahf
sub
mov
stos
lods
lods
dec
adc
inc
fsubr
cmp
dec
negb
int
inc
push
fistps
cmp
clc
xchg
or
mov
sbbl
xchg
sbb
xchg
xchg
pop
or
pop
adc
call
call
test
or
xchg
jl
xchg
and
sub
das
jno
std
adc
mov
insl
rcll
lds
push
xchg
test
xor
pop
push
cmp
mov
or
fiaddl
std
mov
jne
cltd
add
mov
inc
outsl
filds
push
test
insb
repnz
insb
popa
out
shll
sub
bound
adc
stos
scas
cmpsl
dec
cmp
adc
push
sbb
in
add
fidivs
inc
popa
ljmp
cwtl
enter
add
dec
sub
push
mov
lcall
mov
in
clc
mov
jl
data16
mov
and
add
loope
imul
lods
insl
mov
cli
popa
cmp
mull
loop
mov
roll
into
je
bound
adc
lret
xor
cmc
xchg
shll
lcall
cld
leave
cmp
adc
addr16
adc
xor
sti
jecxz
imul
pushf
dec
pop
aaa
xor
lcall
mov
lret
push
cwtl
cwtl
mov
roll
mov
jle
dec
xchg
xchg
enter
push
hlt
scas
ljmp
bound
lock
test
xchg
sbb
mov
imul
mov
sub
outsb
sbb
jg
add
das
adc
js
loopne
push
cli
xor
add
repnz
out
lret
adc
sbb
add
into
and
pop
push
cld
dec
stos
dec
mov
imul
rolb
mov
es
jecxz
sahf
inc
adc
test
xchg
fisttps
push
sti
rcr
adc
out
fnstsw
sbb
xchg
mov
lcall
mov
cld
pushf
hlt
sti
push
mov
scas
add
outsb
cltd
mov
je
push
add
add
pop
dec
scas
cmc
or
call
mov
add
sbb
fadd
mov
xor
jge
movsl
cmpsl
pop
push
xor
pop
testl
xor
cmp
mov
sub
xchg
cmp
cltd
mov
dec
dec
mov
mov
cld
sub
cltd
cmp
add
int
adcb
aas
jg
mov
les
jae
cmpb
pusha
fisubrs
cmp
mov
push
push
push
push
jp
arpl
add
out
push
and
sahf
add
fldl
into
addr16
sub
mov
push
sarl
in
push
push
in
or
inc
loopne
and
dec
imulb
adc
test
pop
stc
insb
mov
jnp
fnstcw
mov
mov
jno
xor
or
hlt
je
daa
xchg
push
push
xchg
xchg
push
sbb
jmp
rcr
add
mov
daa
das
addb
mov
cmp
pop
jb
sub
lret
bound
mov
lods
sbb
xor
mov
xor
mov
rcll
jmp
jns
ss
stos
enter
dec
adc
mov
inc
sbb
mov
adc
xchg
xchg
mov
icebp
inc
xchg
jmp
fidivl
aad
xchg
xor
add
xchg
fldcw
in
enter
xchg
sub
idivl
gs
jne
out
xchg
flds
jmp
xchg
xchg
adc
loop
mov
scas
fldt
ret
sub
lcall
xchg
adc
mov
lahf
inc
movl
fstl
push
add
or
inc
xchg
push
add
rcrb
into
and
mov
into
cmp
mov
out
mov
sub
cmpsl
dec
xlat
fildl
outsl
mov
push
arpl
into
dec
out
jmp
dec
sub
pop
lret
xchg
xchg
dec
pop
mov
movsl
in
pop
xor
sbb
jmp
inc
cmpl
xor
push
mov
mov
cmp
sbb
call
add
and
xchg
mov
sub
add
jne
pop
lods
mov
je
jnp
fildll
cmpl
sub
rorb
in
test
dec
push
and
cmc
mov
ljmp
dec
sahf
insl
int3
cmpsb
sbb
aaa
push
push
inc
call
pop
mov
loop
mov
sub
push
fcoml
test
outsl
pusha
pop
mov
inc
cmc
add
push
out
push
bound
or
rclb
cli
iret
or
xor
lea
repnz
pop
int3
pusha
push
mov
mov
xlat
and
mov
dec
sbb
adc
and
movsl
jle
gs
test
xor
xchg
ja
xor
sbb
jmp
jmp
jp
movsb
jg
out
mov
data16
das
xchg
ret
loope
add
adc
mov
sub
stos
test
cmp
lcall
andl
adc
sub
scas
push
inc
pop
scas
jb
les
test
es
push
lcall
or
jb
inc
icebp
std
lcall
cs
jg
mov
sbb
imul
mov
aam
mov
insl
xchg
shl
pop
imul
pop
xchg
jns
out
cmpsb
jns
push
and
pop
out
jns
jns
aad
mov
out
insb
in
mov
add
inc
inc
pushf
or
add
lock
push
js
clc
mov
fldl
cmp
pop
cld
dec
lods
jo
mov
jecxz
cwtl
ficomps
push
mov
xchg
loopne
iret
jmp
pop
lods
out
adc
jmp
orb
pop
pop
xchg
mov
jns
add
je
push
push
inc
outsl
xchg
std
scas
cld
sub
popa
bound
aam
lret
movsb
xor
xchg
cmpsb
lcall
xor
fwait
pop
dec
aad
fisttpll
std
int
call
push
cmp
pop
push
fsubl
xor
push
jnp
test
aad
ljmp
das
and
mov
in
add
in
jns
cmpsb
xor
out
orb
xlat
sbb
jne
out
or
dec
or
xor
sbb
mov
pop
cltd
ljmp
inc
dec
add
subl
scas
fisubrl
cmp
js
jb
test
test
andb
shrl
lds
cmpsl
mov
bound
xchg
jno
sbb
imul
enter
lret
jl
and
loopne
mov
cmp
mov
out
pop
pop
or
or
cmp
rorl
out
push
jb
andb
popl
jne
inc
cld
mov
jo
rclb
xlat
mov
lret
std
xchg
mov
daa
dec
add
mov
leave
das
and
out
push
test
push
ficompl
jns
movsb
add
mov
das
mov
dec
stc
add
mov
es
aas
pop
pop
dec
scas
mov
xchg
test
xor
or
iret
sbb
jmp
imul
dec
mov
push
cmp
add
xlat
fisubl
pop
insb
loopne
dec
and
dec
daa
cld
jo
ss
jne
inc
jle
mov
mov
stos
jg
icebp
popa
arpl
adc
ret
xchg
or
cmp
stos
jl
scas
imul
or
xor
scas
mov
rol
cmp
dec
pop
adc
sub
add
xchg
addl
ds
add
pop
movsb
jnp
and
cmp
fmull
or
add
mov
adc
or
push
out
lods
dec
push
jge
xchg
dec
jle
cmpsl
movl
js
fimuls
adc
daa
popf
gs
call
js
mov
jns
int
in
and
lds
push
sbb
test
adc
jnp
or
cltd
inc
jl
add
sbb
scas
test
lcall
scas
mov
loop
js
es
arpl
xor
or
cli
mov
dec
dec
mov
fcmovnb
sti
leave
mov
mov
mov
sub
mov
cli
icebp
fs
inc
das
xchg
hlt
jecxz
jno
dec
shl
adc
push
loopne
xchg
jno
cli
cli
push
sbb
add
mov
pop
mov
mov
bswap
mov
add
inc
rorl
stos
jne
fadd
lahf
push
cmp
dec
std
cmp
addb
add
cmc
sti
cs
push
adc
add
les
ficoml
cmp
nop
jp
pop
lock
js
dec
push
loopne
mov
fbstp
in
in
mov
aaa
mov
push
mov
jb
imul
les
cli
jne
jle
lea
in
sahf
cmp
je
mov
fwait
leave
mov
inc
lret
sub
mov
and
lcall
decl
addr16
pusha
fs
fadds
insb
pop
iret
insb
cmpsb
push
jge
inc
gs
adc
pop
fldl
xlat
mov
sub
add
in
ja
hlt
mov
cld
mov
push
ss
lcall
mov
nop
aam
mov
sbb
sbb
ja
mov
aas
or
push
push
and
push
dec
test
and
push
pop
adc
pop
mov
pop
int
out
rolb
mov
pop
and
push
dec
in
stos
dec
pusha
mov
cmp
push
scas
or
aas
loope
stos
dec
ret
mov
xor
pop
sti
jmp
mov
push
mov
lcall
test
mov
jns
sbbl
mov
inc
mov
bound
inc
rorb
outsl
mov
push
or
stos
lods
int
mov
lret
bound
cltd
cmp
leave
int
mov
jo
cmpsb
dec
inc
fsubr
loope
in
scas
dec
fs
in
dec
xor
aad
dec
mov
decb
lcall
cwtl
aam
loope
jge
lcall
pop
mov
cmp
push
cmp
adc
aad
xchg
outsb
jbe
and
repnz
mov
push
add
scas
push
sub
mov
adc
adc
or
dec
in
fstpt
test
and
pop
in
push
fisttpl
ja
mov
push
xlat
fs
mov
mov
push
lods
lods
push
rol
push
gs
sub
stos
rcll
jg
lcall
add
or
jae
and
sti
and
repnz
and
xchg
fld
or
js
inc
mov
out
push
nop
sbb
mov
mov
test
inc
mov
mov
push
das
and
or
xchg
and
rcrl
push
incl
dec
fdivs
xorb
mov
loopne
insb
mov
addb
pop
sub
das
mov
sub
dec
sbb
js
pop
dec
shrb
add
mov
xor
sub
das
popa
pop
test
inc
sar
mov
movzwl
xchg
cmp
jbe
rcrb
jae
shl
mov
movsl
pop
add
movsl
je
decb
incb
add
into
imul
dec
push
scas
imul
mov
xchg
dec
pop
xlat
mov
scas
push
mov
je
pop
lret
in
push
sbb
cmp
aam
mov
mov
mov
sub
pop
pop
push
icebp
mov
cltd
lret
mov
mov
dec
stc
and
jle
outsl
aad
ss
inc
mov
outsb
jge
lcall
xchg
push
jae
out
pop
cmp
daa
out
adc
loopne
push
inc
sti
jbe
add
and
sti
jnp
in
dec
push
cmpl
loope,pn
pop
jmp
lods
mov
fcoms
adc
sub
jecxz
add
mov
xchg
aam
enter
sub
lret
iret
outsb
ljmp
push
jns
cmpsl
jne
loope
shlb
xor
roll
ja
ds
jmp
loop
arpl
xchg
or
daa
fs
xor
repz
mov
in
add
xchg
inc
xor
insb
jp
mov
sbb
pushf
adc
mov
mov
sub
or
xorb
or
jno
dec
pop
out
or
jno
xchg
xor
push
adc
push
push
xchg
movsb
dec
in
push
inc
data16
out
adc
rclb
aas
icebp
adc
movsb
push
fsubr
cmp
push
out
dec
add
add
cld
popl
adc
xchg
fistpl
jg
cmp
push
cmp
sbb
cmp
scas
enter
cmpsl
loop
ficompl
mov
ficoms
inc
in
or
test
adc
cmp
popf
ds
icebp
and
add
dec
add
xor
cmp
mov
testb
popa
xor
rorb
fistpl
clc
mov
push
out
data16
push
pop
lods
push
add
push
pop
xlat
popl
cli
in
xlat
add
mov
and
mov
jecxz
fdivl
sub
pop
mov
test
adc
cmp
and
into
rclb
push
mov
mov
dec
lret
in
out
mov
sbb
xchg
and
push
pop
xor
jle
xchg
mov
xor
jnp
sub
sahf
sub
popf
leave
movsl
push
ss
or
cmc
mov
dec
and
dec
xchg
push
jne
cmp
and
stos
mov
pop
fdivs
gs
add
dec
aas
xchg
mov
push
pop
imul
jmp
decl
or
dec
stc
mov
lock
push
mov
repnz
dec
adc
dec
inc
cmpsl
and
xchg
loopne
icebp
fdivp
les
mov
or
and
fistl
out
cltd
push
orl
pop
clc
dec
jnp
pop
aam
adc
ret
jecxz
pop
mov
push
and
xor
imul
and
xchg
out
mov
lret
push
cld
es
lods
lock
xor
sahf
mov
sub
pop
adc
jle
mov
lahf
mov
in
lahf
xor
jl
push
je
sub
repz
call
mov
outsb
pop
add
test
repnz
cmpb
sub
insb
iret
repz
scas
cmp
arpl
xor
push
test
movsl
lahf
push
and
int3
test
pop
xchg
push
jne
ficoms
cli
sbb
mov
sub
push
push
neg
cs
inc
dec
jl
stos
fsubr
mov
iret
add
or
adc
add
aas
push
sysenter
mov
add
cmp
sbb
dec
jno
dec
pop
sub
rcrb
and
scas
outsl
adc
sub
iret
notb
test
cmp
stos
push
shll
sbb
addr16
sbbb
leave
orl
push
clc
imul
push
repnz
pop
test
mov
adc
mov
test
sub
jae
mov
imul
sti
cltd
jae
and
mov
jp
inc
push
push
mov
push
dec
or
jmp
xchg
inc
xor
and
mov
inc
cmp
sbb
mov
mov
sbb
fcmovnbe
mov
jae
mov
pop
adc
addr16
jg
mov
scas
out
push
sub
aam
pop
push
sbb
mov
stos
xor
cmp
pop
jne
mov
cmp
addl
sub
cmpsb
out
es
pop
jp
mov
xchg
add
ret
rclb
xchg
xchg
pushf
hlt
fldl
mov
or
insl
lahf
outsl
shlb
xchg
or
movsl
jns
es
pop
movsb
mov
sub
pusha
mov
and
jg
inc
mov
mov
push
mov
leave
adc
into
ljmp
jns
cmp
inc
inc
jle
cwtl
shl
in
aad
xchg
data16
out
in
sbb
push
enter
dec
gs
mov
xchg
inc
out
aad
ja
int
mov
mov
into
dec
shll
mov
vpunpckhdq
mov
push
add
imul
out
fdivrl
or
mov
push
lods
ret
and
shll
pop
xor
scas
adc
sub
inc
mov
insb
call
adc
xor
push
fnstenv
cld
cmp
enter
jmp
push
jle
shlb
mov
out
xorb
xor
cltd
imul
lds
and
mov
icebp
or
in
jo
mov
inc
xor
jb
push
fcomi
mov
inc
inc
inc
jge
fidivrl
mov
push
sub
cltd
mov
call
push
add
cltd
std
cmp
out
movsl
mov
scas
test
ret
fcoml
dec
fidivrs
push
xchg
dec
ja
dec
xor
je
and
sub
and
sub
sarl
scas
pause
and
mov
lock
xchg
aad
cmp
xor
jl
add
enter
and
or
movsl
aas
shll
faddl
sbb
inc
aad
jbe
jne
lahf
out
in
sub
sbb
jge
mov
sbb
add
rorl
movsl
xchg
js
aas
andb
mov
mov
or
loopne
dec
pusha
mov
popa
cmp
jns
jb
ja
lods
lcall
cmp
mov
cmp
adc
push
sub
repz
mov
cmp
or
mov
pop
inc
jg
fwait
outsb
push
push
mov
pop
cmpsl
das
js
add
xchg
inc
mov
adc
ljmp
mov
xchg
decl
push
mulb
hlt
xor
dec
cmp
add
aas
jp
cmp
pusha
and
mov
enter
in
cmp
shrl
mov
xorl
lcall
je
dec
movsl
repz
rorl
lock
out
movl
data16
mov
mov
add
pop
mov
or
jne
xchg
or
cmp
das
out
add
mov
sbb
mov
cmp
mov
aad
inc
subl
iret
add
cmp
pop
pop
shl
ljmp
push
mov
sub
pushf
fcmovbe
fldcw
pop
mov
filds
jmp
je
dec
cmpsl
icebp
push
mov
fsts
pushf
dec
dec
jno
std
aaa
mov
xor
imul
cltd
add
xchg
dec
mov
rclb
sbb
imul
ret
test
ljmp
push
sti
addr16
test
mov
sub
rolb
mov
out
test
popf
pop
mov
out
adc
rcl
js
jl
seto
cltd
mov
jle
popa
push
pop
pop
in
ds
je
push
repnz
lock
ja
sub
stc
sbb
sbb
lret
cmp
cmp
and
pop
movsb
push
in
fisubrl
data16
jno
pop
or
lret
cmp
xor
aas
addr16
jmp
sub
call
pop
in
push
pop
mov
fists
lods
cmpsb
fsubrs
mov
aam
insl
cmpsl
out
ret
mov
sbb
or
mov
push
imul
or
movsb
jb
push
xchg
fildl
cwtl
pop
daa
imul
and
adc
inc
or
xchg
adc
icebp
mov
xchg
dec
jge
push
push
xchg
ljmp
mov
mov
repnz
mov
gs
in
mov
fscale
jno
or
push
aaa
jo
ds
lret
enter
cmc
js
std
fisttpll
aas
mov
cltd
rcll
xor
ret
cltd
dec
or
xor
int
jo
aad
mov
cwtl
arpl
shr
aas
dec
loope
aaa
mov
mov
insl
mov
push
fsubl
mov
pushf
mov
data16
xchg
iret
pop
or
dec
into
or
xor
in
ret
outsb
dec
lret
pop
cld
or
inc
mov
cmp
imul
ret
arpl
fdivrs
sub
push
push
fsubrs
adc
xor
call
mov
inc
push
dec
in
sbb
cmp
jne
repz
mov
mul
sbb
inc
xchg
pushf
int
inc
imul
in
enter
testl
mov
enter
or
fwait
sbb
iret
adc
adc
inc
loop
pop
fadd
mov
out
test
cli
adc
scas
mov
scas
dec
jg
jns
inc
push
pop
insb
das
std
add
pop
xor
lods
clc
sub
loop
nop
loopne
mov
add
insb
loope
add
pop
insl
cmp
test
loop
lods
rorl
pop
and
sub
cld
js,pt
adcb
pop
fwait
inc
push
enter
mov
aaa
aad
int3
je
pop
roll
push
rclb
xchg
push
jmp
jb
ret
jmp
sbb
in
push
outsl
dec
jg
iret
xor
push
and
lock
jg
dec
inc
inc
jmp
adc
mov
or
bndldx
leave
addr16
push
mov
loope
sub
out
sub
sbb
jmp
mov
jg
fnsetpm(287
scas
out
repz
pop
hlt
pop
clc
pop
jbe
jo
mov
mov
mov
imul
outsb
jmp
and
add
imul
and
mov
jg
mov
jp
scas
mov
and
mov
xchg
daa
iret
xchg
pop
mov
test
ficomps
xchg
out
int
xchg
movsb
mov
jmp
in
mov
fiadds
aad
popa
fidivs
push
test
jle
jp
cmpsb
jns
or
jecxz
shl
scas
and
xor
cmp
adc
mov
int
popa
and
outsl
lret
or
movsb
test
mov
jl
mov
xchg
jbe
movsl
cwtl
push
cmpsb
dec
cmp
inc
enter
push
adc
dec
fidivl
mov
xchg
inc
or
aas
adc
lcall
inc
and
inc
push
loopne
sti
jo
mov
mov
jo
sahf
push
popf
out
jbe
xor
iret
cs
mov
cmpsl
cmp
cmp
dec
hlt
and
test
push
jmp
shll
fwait
sub
js
sub
out
sti
out
fmull
add
rclb
or
cwtl
jl
xchg
pop
mov
bound
push
add
sub
sahf
fidivrl
ficoms
fbld
clc
jecxz
stos
xchg
in
pop
xchg
lcall
push
aas
andb
ret
loop
add
and
mov
pcmpgtb
push
dec
and
cs
sub
push
mov
je
xchg
popa
in
sahf
mov
jecxz
jle
sbb
outsl
push
stos
fs
ficompl
add
and
mov
outsl
jmp
push
lret
add
push
dec
push
imul
jl
insl
fbld
out
push
inc
movsb
pop
aaa
int
adc
lods
das
cmp
or
sbb
jmp
jle
fsubr
add
jb
fs
ds
fimull
mov
add
cmpsl
pop
repz
cmp
dec
bound
in
pop
pop
jno
cmp
enter
les
ds
mov
xlat
inc
icebp
cmp
shlb
push
xchg
pop
aad
out
mov
arpl
movsl
imul
jb
pop
outsl
adc
scas
in
cmp
and
dec
leave
in
rclb
fbstp
mov
cmpsb
hlt
add
jnp
add
and
jno
push
and
xchg
xchg
sub
movsl
nop
lret
jo
xchg
nop
out
push
lretw
xchg
lret
mov
cmp
and
not
sbbb
rcrl
lret
xchg
xchg
push
test
mov
pop
lret
orl
js
lds
ja
sbb
dec
out
in
mov
pop
movsl
stos
aaa
ret
jno
pop
cltd
cmpsb
adc
inc
sub
sbb
leave
lods
int3
popa
scas
pop
pop
jp
inc
pop
in
test
mov
xchg
rclb
xor
outsb
lahf
in
push
dec
jp
jne
mov
pop
adc
scas
psubusb
mov
push
mov
int3
scas
jns
pop
xchg
push
adc
cld
aad
frstor
fcoms
fmul
ret
shll
repz
sub
lret
mov
adc
enter
dec
mov
sahf
or
outsl
pop
repz
popa
mov
pop
xor
repz
cmp
insb
lds
add
das
jecxz
mov
scas
jmp
repz
mov
sbb
lock
xchg
dec
sahf
incb
cltd
mov
dec
loope
push
sbb
fmull
rcrl
push
jb
clc
pop
xlat
imul
or
mov
cmp
sub
imul
mov
and
inc
push
mov
cld
pop
inc
in
xchg
pop
je
or
mov
jle
vrsqrtss
mov
or
jl
sub
hlt
mov
adc
inc
dec
jg
inc
lds
inc
daa
imul
rcrl
mov
aam
fs
pop
jnp
push
aam
mov
push
lds
pop
sub
test
jmp
cmpsl
fistps
or
adc
loopne
add
pop
jle
mull
lock
in
jns
xchg
movsl
jnp
xchg
add
xor
mov
loopne
cltd
daa
mov
add
xchg
mov
xor
inc
cmp
mov
push
mov
shlb
inc
insb
fidivs
in
or
fbld
in
cmp
jbe
mov
lcall
mov
ljmp
sub
js
jnp
fidivrs
xchg
inc
xchg
or
fcmovnbe
leave
js
xchg
cmpsl
cld
sbb
outsb
or
les
imul
xor
lret
or
adc
pop
in
movsl
scas
fs
rorl
loopne
loop
call
daa
inc
adc
or
roll
jp
or
fldenv
mov
inc
mov
ss
sbb
imul
sub
stos
dec
popf
mov
aas
xchg
cmpsl
mov
nop
cmpsl
push
roll
xchg
xor
add
cmc
pop
fbstp
jmp
mov
lahf
aas
pop
mov
mov
aam
adc
pop
mov
sub
aam
pop
adc
jae
sahf
fadds
test
cmpsb
daa
icebp
inc
mov
jle
or
dec
mov
cmp
bound
jo
sub
jb
adc
je
push
sti
ds
int
xchg
push
outsb
push
jmp
or
cltd
daa
test
inc
mov
add
and
xchg
push
std
push
xchg
mov
movsl
pop
nop
sub
int3
loopne
stos
sarl
and
fimull
cmp
mov
sbb
outsb
ja
repz
lret
inc
mov
rorl
scas
insb
xchg
mov
inc
jbe
push
test
incb
adc
jb
mov
sahf
repnz
mov
jmp
xor
js
sbb
and
imul
mov
test
inc
dec
movsl
mov
rolb
xchg
push
shrb
movsb
jl
es
and
xchg
xor
dec
dec
icebp
mov
xchg
add
pop
dec
ret
imul
outsl
pop
and
jne
shrb
and
pop
notl
inc
shlb
outsb
add
or
pop
push
mov
inc
mov
adc
dec
adc
aas
xchg
mov
mov
mov
aam
mov
sub
xchg
xor
pop
xchg
inc
out
shll
loopne
ja
xor
nop
cli
cmp
aaa
popa
imul
pop
int3
pop
lea
sbb
add
or
jno
adc
xor
jmp
outsl
add
add
in
pop
cmp
roll
and
dec
movsl
mov
out
adc
sarb
add
rorb
cld
mov
or
std
jmp
fwait
jo
cmp
mov
push
lea
pop
sahf
enter
movl
test
pop
cmpsb
cmp
mov
enter
shlb
cli
mov
in
ljmp
mov
mov
push
xchg
xchg
push
repnz
dec
push
popa
pop
xor
ficoml
and
mov
mov
push
cwtl
sbb
push
mov
push
je
cmpsb
mov
inc
pop
test
jle
fwait
push
mov
insb
lock
inc
sbb
les
out
sub
xchg
pop
stos
xor
mov
pop
or
aas
imul
jnp
cltd
fs
inc
fsts
loope
mov
jb
mov
sbb
adc
in
add
or
ret
adc
and
mov
xor
pop
mov
pop
addl
jnp
dec
fidivrs
mov
and
and
mov
andl
fsubr
or
push
adc
cmp
adc
rcl
sbb
aam
inc
push
inc
cmp
cli
sub
dec
add
dec
xor
outsb
addr16
insl
lea
sbb
lahf
add
inc
cwtl
mulb
nop
inc
gs
je
addl
sbb
flds
addr16
inc
mov
sub
mov
push
mov
sbb
jl
shrb
cwtl
cwtl
jmp
jecxz
fidivs
mov
mov
pop
xchg
jecxz
adc
push
dec
scas
jmp
sahf
and
mov
inc
ss
movsl
pusha
push
into
out
mov
mov
pop
dec
stc
sbb
in
lea
negb
jns
cmc
mov
pop
imul
mov
xchg
loope
test
add
mov
aam
in
stc
insl
test
push
std
je
and
stos
mov
adc
cmp
loopne
mov
jge
mov
popa
int
les
testb
imul
mov
inc
arpl
into
jecxz
ret
and
xor
xorb
xor
or
loope
push
dec
sub
std
jp
and
loope
cmpsl
xor
test
enter
jno
dec
out
add
jae
jle
sbb
dec
fadd
jge
cld
push
mov
jmp
repz
into
mov
fildl
call
jecxz
int
dec
stos
ss
pop
aas
cmp
lcall
xchg
mov
cltd
fsub
andl
xchg
mov
sub
dec
lods
add
jg
push
jnp
push
dec
xor
pop
fnsave
lods
and
or
xchg
imul
int3
or
fistpl
mov
ret
fisubs
bound
xor
or
lcall
rcl
subb
cmp
xchg
jmp
dec
es
daa
mov
sbb
sub
push
xor
mov
jnp
loope
clc
sub
mov
shrl
insl
popa
cli
cmp
addb
inc
leave
and
leave
cmp
arpl
adc
repz
push
adc
adc
fmuls
mov
aad
jbe
out
psllq
xchg
push
enter
xor
inc
cmpsb
or
mov
es
xor
clc
mov
sub
cmp
inc
mov
shll
rorl
imul
pop
popf
out
inc
sub
push
fistpl
pop
popa
xchg
mov
outsb
mov
push
push
call
insl
in
mov
push
imul
inc
loopne
cmp
into
pop
push
pop
pop
fcoml
sub
mov
mov
jo
aam
xchg
jno
outsl
and
xor
cmc
dec
pop
arpl
pop
cmp
shlb
xchg
and
pop
leave
adc
mov
push
or
sbb
shlb
add
roll
mov
xchg
in
and
sbb
jnp
push
gs
adc
xchg
jns
hlt
xor
mov
cld
pop
dec
call
outsb
bound
adc
mov
dec
pop
mov
push
lods
pusha
adc
pop
outsl
push
lock
push
aaa
mov
inc
shlb
inc
or
mov
repnz
mov
orl
adc
inc
mov
js
inc
jg
fisttps
push
sahf
fdiv
and
popf
icebp
stc
or
mov
jp
add
mov
addr16
jns
push
ret
stos
loope
pop
or
dec
mov
pop
dec
inc
jmp
push
xchg
and
aam
xor
push
hlt
movsl
arpl
pop
pop
cmpsb
mov
movsl
xchg
in
push
mov
pop
mov
and
repnz
sahf
mov
xor
imul
dec
iret
lret
jecxz
mov
sysret
push
addr16
mov
cpuid
call
inc
lds
jmp
pop
sub
xchg
jecxz
mov
mov
sub
dec
jecxz
in
daa
dec
mov
daa
sub
inc
dec
inc
adc
and
repnz
jecxz
pop
movb
cmp
hlt
sti
mov
pop
pushf
cmp
cld
xlat
inc
insl
inc
xor
fstpl
mov
mov
pop
mov
test
fs
int
loopne
mov
push
mov
nop
pop
adc
xor
es
or
or
pop
iret
xor
mov
or
cmp
jecxz
jae
fdivr
mov
cmp
ret
fldl
mov
les
xor
std
stc
test
mov
cmp
fnstcw
dec
cmp
inc
xchg
xor
sbb
pop
jb
inc
jge
fs
fwait
inc
push
sub
into
cmpsl
shrl
xor
push
jb
dec
push
xlat
mov
int
cmc
cmpsl
es
adc
pop
mov
mov
pop
and
jnp
std
arpl
orb
jne
lahf
jg
cs
jo
jno
adc
aas
and
or
ja
mov
xchg
fsubs
and
lea
pusha
rolb
inc
xor
and
js
dec
pop
jne
sbb
inc
xor
mov
xor
je
push
popf
mov
dec
xlat
cmp
in
xor
fadds
mov
sub
fsubs
inc
ficomps
pop
stos
sub
and
fwait
dec
mov
shll
lods
sub
jns
shrb
ja
mov
dec
cmp
movups
xorl
push
mov
insl
movl
imul
rcr
cmpl
loop
dec
popf
repz
inc
ja
inc
out
repnz
sub
je
les
arpl
adc
and
lock
insl
mov
or
pop
or
out
js
jnp
jae
xchg
lahf
nop
addr16
xchg
adc
mov
loopne
add
mov
push
or
add
int3
repz
adc
mov
or
sub
mov
lret
inc
sub
sahf
popa
mov
and
xor
add
hlt
daa
les
jns
pop
arpl
fdivl
sub
dec
sub
cld
addr16
dec
sbb
pusha
jnp
icebp
sbb
out
adc
jns
jns
or
add
daa
and
int
fwait
pop
stc
call
xchg
jl
incl
je
push
nop
push
push
sub
gs
sbb
pop
pop
inc
in
sub
shlb
shlb
push
sbb
mov
sub
pop
mov
repz
jp
inc
xchg
insb
inc
add
xchg
popf
mov
int
aam
dec
sbb
mov
mov
ret
incb
fimuls
test
and
fldcw
push
daa
jge
js
pop
iret
aam
jp
lods
scas
jg
mov
xchg
dec
aam
xchg
ja
int3
sarl
jno
cmp
cmp
and
lods
movsl
sbb
add
bound
sti
repz
mov
ss
shll
cmovl
pop
data16
push
ja
out
repz
mov
mov
adc
pop
int
inc
ficoms
mov
lret
sbbl
mov
push
cmpsb
xor
decb
dec
mov
push
loopne
jp
int
and
loope
in
cmpsb
xorb
xchg
shl
dec
testb
arpl
adc
insl
cmp
mulb
inc
repz
comiss
xchg
pop
adc
cmc
imul
arpl
mov
loopne
jecxz
and
push
pop
repz
nop
xchg
in
mov
pop
ret
int
pop
mov
dec
jb
test
cmp
js
mov
mov
scas
pop
inc
lods
call
stos
insb
xchg
xchg
mov
repnz
leave
rolb
jp
shlb
mov
or
mov
xor
push
push
sbb
push
mov
and
adc
ljmp
ret
fidivrs
jbe
fs
mov
movsb
add
mov
xor
lods
fidivrs
mov
inc
shl
ja
push
test
movsb
pop
imul
loop
sbb
and
pop
pop
adc
cmp
lods
jnp
lods
addr16
dec
adc
xchg
lods
fwait
push
shlb
sahf
pop
arpl
adc
aam
lds
xchg
add
push
add
sbb
iret
loope
or
dec
js
cltd
sbbl
fnstenv
inc
and
mov
and
add
shrb
addr16
mov
cwtl
mov
gs
ret
movsl
int3
fbld
dec
inc
dec
mov
repnz
sti
mov
dec
cs
adc
int3
jge
inc
aas
into
lahf
sbb
ficoms
mov
mov
fisubrl
sub
jb
mov
jno
jno
pop
mov
jae
das
shrb
scas
clc
xchg
cmp
push
cld
pushf
xor
sub
jae
pop
out
or
fldcw
cmp
ret
xor
jle
push
ss
cmp
fdivr
mov
insb
xchg
ja
xchg
rcll
add
dec
movb
mov
jo
sbb
mov
iret
cld
jns
outsb
enter
cmp
mov
shrb
in
cli
cmpsl
adc
ffree
and
or
scas
inc
add
mov
xchg
idivl
xor
andb
cmp
xor
inc
pop
cmp
in
mov
push
stos
and
or
mov
insl
popaw
xor
decb
pop
cmp
jecxz
push
loopne
outsl
xlat
or
js
sub
sub
jmp
pop
fwait
inc
js
test
pop
dec
mov
mov
or
add
xchg
imul
pusha
mov
lcall
add
fs
jg
rolb
repnz
fwait
leave
sbb
jp
mov
inc
inc
out
xor
xchg
aas
fildl
outsl
push
and
int
dec
push
add
jge
jbe
popa
sbb
xchg
lds
outsb
fld
sub
insl
sub
jnp
adc
lea
dec
cmp
mov
insb
pop
imulb
add
imul
ret
push
mov
cwtl
movsl
mov
inc
test
xchg
mov
sub
sahf
aad
lock
adc
pop
outsl
js
aaa
mov
aad
outsb
sub
std
jecxz
out
sub
call
lret
adc
push
adc
mov
inc
jecxz
pop
stc
adc
outsl
mov
push
cmp
xlat
inc
out
or
push
mov
jecxz
daa
movb
cmp
mov
test
fidivrs
adc
adc
movsb
stc
sub
push
dec
push
jnp
xchg
xor
sbb
out
ja
or
loopne
inc
dec
in
popl
ja
hlt
mov
addb
push
test
mov
fsubrp
jp
inc
ficoms
test
push
pop
jg
ret
das
and
addr16
aas
data16
popf
pop
xor
fnstenv
call
icebp
sbb
xchg
sti
arpl
bound
les
lods
xchg
sbb
fistps
movsb
mov
pop
fwait
rcl
daa
decb
dec
fcomp
mov
test
div
add
clc
ja
mov
int
outsb
aas
pop
push
sbb
popf
daa
mov
leave
test
mov
inc
push
cltd
sbb
pop
xchg
mov
jp
or
push
pop
push
addr16
data16
or
gs
sbb
xchg
dec
and
nop
stc
xor
sub
je
in
sub
xor
cmp
pusha
es
ficoms
xchg
out
or
mov
arpl
mov
mov
scas
cmp
out
push
dec
ljmp
cltd
pop
test
mov
cmp
fadds
push
andl
push
inc
stos
in
and
mov
sub
in
mov
and
inc
xchg
ret
pop
daa
or
sbb
sahf
mov
in
xchg
dec
lret
imulb
fnstsw
xchg
push
bswap
ret
ss
sbb
or
mov
ss
pop
mov
sbb
dec
imul
ljmp
imul
push
out
mov
inc
push
int
lret
cld
sub
jmp
inc
add
movsb
pop
xchg
mov
lock
iret
callw
aam
std
jg
fcoms
mov
pop
ja
lock
dec
jl
xchg
lock
push
adc
push
movb
aad
pop
inc
or
cli
mov
mov
jns
cmp
push
iret
sbb
jbe
mov
popa
push
push
dec
xchg
std
push
jae
rclb
enter
loopne
push
outsl
sahf
int3
or
cld
add
add
lahf
scas
addr16
ret
xor
leave
pushf
sbb
in
into
jge
andl
sahf
inc
xor
pusha
mov
fadds
test
adc
mov
adc
pop
mov
shrl
push
in
sub
rcrb
inc
test
sub
jne
mov
lahf
jecxz
adc
mov
mov
inc
scas
xor
mov
fwait
xor
pop
into
bound
mov
inc
jecxz
mov
push
jbe
out
enter
shll
or
stos
cs
scas
xor
cs
loop
xor
inc
subl
roll
pushf
xchg
sub
jge
pop
aam
ds
jecxz
push
sub
into
mov
fsub
popf
sbb
sub
cmpsb
sbb
inc
mov
adc
cwtl
imul
add
dec
loope
or
scas
data16
or
sbb
out
ret
aad
jns
mov
lret
shrb
sub
orb
push
mov
and
lds
xor
out
push
xor
mov
push
sub
cmp
movsl
int3
sahf
addr16
icebp
xchg
push
sbb
push
es
sarl
arpl
pop
cli
adc
stc
jo
jns
nop
mov
cmp
xchg
xor
xor
jbe
repz
mov
daa
pop
mov
adc
jmp
xchg
push
icebp
pop
stc
mov
xor
fsubp
add
and
mov
push
push
and
add
and
add
jnp
cmpsb
movsb
xor
fistpl
cmpsb
iret
pop
negl
fmuls
push
in
jb
push
sahf
pop
adc
or
or
bnd
dec
scas
test
cld
nop
call
mov
rclb
lods
leave
mov
testl
leave
out
pop
xor
fwait
insb
pushf
and
push
ljmp
rorl
mov
ficomps
mov
sbb
pop
xor
bound
popa
mov
in
gs
mov
xor
call
shll
out
push
inc
int
xchg
lock
std
fmull
push
xchg
mov
out
ret
cwtl
scas
or
mov
inc
subl
outsb
add
xchg
dec
push
mov
fbld
scas
sub
dec
decb
mov
sbb
cmp
dec
push
sub
dec
lret
lret
push
and
test
mov
loop
mov
inc
cltd
add
sahf
sub
insb
popf
add
sbb
call
enter
push
lds
mov
leave
jno
popa
and
push
xor
inc
stc
mov
sbb
mov
divb
adc
mov
dec
jae
dec
inc
xchg
xchg
repnz
push
mov
bound
fwait
ss
adc
adc
sub
outsb
jno
pop
xchg
fcmovne
jae
inc
movsb
xor
roll
js
movsl
in
cmp
adc
jmp
shlb
aad
xor
fcomi
cwtl
push
mov
mov
cmp
mov
lock
cmpsl
pop
ljmp
out
and
sarl
cwtl
les
dec
test
flds
cmp
loopne
pop
dec
scas
fisubrl
pop
mov
das
add
inc
mov
push
imul
shl
call
std
mov
out
adc
mov
lcall
mov
inc
ss
aam
arpl
xor
mov
jno
ret
iret
and
adc
add
adc
sets
scas
fcompl
cmpl
mov
and
mov
stos
or
or
dec
daa
iret
xchg
adc
insb
imul
aam
lea
xchg
xor
jle
ja
scas
push
shlb
daa
imul
mov
push
push
pop
mov
stos
pop
pop
test
stc
jns
aam
xor
in
je
mov
imul
and
stos
sarb
ds
pop
cmp
ljmp
repz
mov
sbb
mov
sub
jne
sbb
and
andl
mov
addr16
cmp
add
daa
mov
popf
popf
and
cs
and
lods
pop
aad
je
sahf
es
jnp
rcrb
ss
fcoml
cltd
push
dec
dec
shr
scas
xchg
icebp
leave
repnz
test
inc
mov
jle
hlt
push
xadd
into
add
or
test
push
add
gs
lds
xlat
ret
lret
sti
pusha
lret
dec
loopne
lods
mov
jns
shrl
adc
sbb
dec
mov
cmp
mov
xchg
aas
push
popf
lea
ret
or
in
aaa
jle
iret
or
push
inc
mov
enter
dec
and
mov
adc
leave
loop
push
dec
pop
add
and
lcall
sbb
cmpsl
data16
and
dec
adc
shrl
psrlw
mov
addb
sti
xchg
jae
popa
sub
out
das
mov
sub
rclb
ja
and
adc
mov
in
inc
sbb
inc
mov
addl
out
dec
adc
and
pop
pop
jno
cmp
dec
push
dec
out
mov
pop
add
jbe
mov
inc
push
cmp
and
xor
cmp
and
into
shlb
mov
ljmp
test
pop
movsb
fs
movsb
movsb
sbb
loope
iret
pop
dec
dec
mov
add
enter
fdivs
leave
stos
scas
call
mov
out
test
mov
shrb
add
inc
aaa
push
pushf
pop
adc
fstpt
and
push
outsb
scas
xor
clc
inc
add
jmp
jmp
xor
jg
loop
mov
mov
sbb
fisttps
and
mov
insl
test
push
mov
int3
js
icebp
out
js
sub
cmp
or
add
inc
mov
inc
jnp
pushf
push
daa
fdivl
cmp
test
in
loope
xor
cwtl
cmc
jg
mov
mov
es
cld
imul
test
les
rcrl
rcr
mov
or
xchg
jg
mov
outsb
ficomps
addl
lcall
rorl
inc
jle
add
or
imul
gs
xor
and
fldcw
es
mov
pop
sub
sbb
shlb
xchg
enter
lcall
aam
or
cwtl
inc
xchg
repnz
filds
out
cmpsb
push
mov
adc
mov
fsts
rorl
ret
xchg
pusha
enter
je
stos
jp
icebp
xchg
xchg
fisttpl
aam
dec
cld
inc
mov
pop
rolb
pop
sbb
out
rcrl
loope
fisttpll
mov
push
aam
scas
shll
jl
jo
push
adc
imul
sub
stc
test
cmp
mov
fucomi
out
mov
sub
ss
leave
mov
scas
xchg
fists
mov
push
fisttpl
subl
dec
imull
inc
or
and
inc
xlat
mov
ja
mov
ret
out
lds
sti
sub
dec
mov
je
or
push
pop
cmp
daa
arpl
pop
jns
lcall
mov
add
pop
pushf
sbb
mov
jmp
cmp
sbb
je
icebp
hlt
aad
push
leave
cld
hlt
lcall
push
xchg
test
mov
pop
dec
xchg
int
loope
jmp
inc
fisubrs
xchg
or
das
lds
xor
jecxz
in
cmp
xor
outsb
lahf
push
jg
sbb
rclb
scas
xchg
cmp
movsb
pop
movsb
push
sti
mov
sbb
cmpsb
out
inc
shlb
add
add
lret
inc
or
add
cmp
mov
xchg
push
imul
xor
in
xor
cmpsl
push
fistpll
cmp
lock
bound
cwtl
pop
cwtl
hlt
out
cmp
pushf
mov
or
outsl
mov
inc
jbe
lods
fdiv
cmpsl
aam
push
popa
dec
dec
aad
rcll
xchg
jne
inc
adcb
cmp
test
jge
and
sbb
mov
outsl
push
sbbb
hlt
in
popa
lds
and
orb
addr16
mov
jnp
xor
jmp
adc
fistl
mov
push
js
mov
inc
mov
aas
adc
scas
inc
pop
fiadds
and
or
test
out
popl
mov
imul
lret
pop
shl
mov
aas
test
dec
xchg
add
pop
test
in
sub
testl
jecxz
cltd
dec
aas
insl
testl
xchg
mov
cmpsl
mov
aas
inc
fcoms
or
sbb
gs
ds
fisttps
xor
and
mov
aad
in
inc
in
and
xchg
push
incb
push
movsl
call
imul
push
push
ret
mov
xlat
cld
sbb
add
inc
or
jns
cmp
stos
jecxz
int
aas
in
xor
jp
aad
in
gs
and
and
xchg
repz
andl
imul
icebp
in
addr16
xor
xchg
pop
pop
js
into
add
shll
mov
lock
cwtl
and
test
repnz
cmc
xchg
or
mov
cmpb
rcrb
and
sbb
test
cmp
jbe
popa
stos
int
jg
dec
adc
ds
jo
add
ret
and
addb
fisubs
or
addr16
inc
cli
cmp
push
cwtl
lea
test
sbb
and
imul
or
fisttps
movsl
stos
movsl
imul
mov
ret
push
lods
sub
enter
mov
in
sub
mov
into
jb
xor
shrl
inc
les
cwtl
push
xor
sub
in
sbb
clc
les
sub
ja
xlat
sahf
jg
ret
or
mov
mov
mov
into
sub
cmp
jnp
xor
aas
jo
push
adc
push
mov
es
mov
rolb
cmc
lods
fdivl
jo
fnstcw
aad
or
xchg
jne
sbb
shlb
mov
cmpsb
out
push
in
repnz
dec
sub
pushf
adc
lock
push
xchg
aad
ds
adc
rcrl
outsl
push
ret
or
inc
andl
lods
cltd
jne
push
sbb
rorl
adc
push
pusha
arpl
out
dec
lods
lret
cmc
popf
pop
dec
aam
ds
push
insl
sub
xchg
icebp
jae
cmp
insb
cmp
mov
pop
dec
dec
lret
sub
xor
ret
mov
fisubl
jns
jle
jmp
movsb
out
insl
mov
dec
rcll
jne
outsb
mov
dec
arpl
fbstp
push
std
push
push
dec
iret
mov
jbe
rclb
mov
cld
and
stc
cld
test
shrl
sbb
xor
fildl
pop
fadd
stc
mov
sub
outsl
xchg
and
mov
loopne
out
fwait
or
test
mov
movsl
into
xor
dec
enter
inc
cli
xchg
push
push
aas
dec
sub
cld
hlt
sub
ss
push
enter
jae
cs
dec
add
out
das
aad
sub
mov
and
stos
or
mov
xchg
jno
mov
jl
mov
frstpm(287
push
incl
cmp
scas
data16
pushf
cld
movsl
jl
jns
imul
push
lods
inc
cmp
icebp
mov
mov
test
mov
or
inc
imul
sub
mov
aas
adc
push
movsl
push
cmp
repz
aad
or
icebp
adc
mov
mov
add
enter
adc
fisubrl
cs
push
in
orl
or
pop
push
xor
lcall
jl
xchg
xor
mov
sub
mov
adcl
stc
sub
xor
sbb
pop
dec
fisubrs
mov
mov
bound
jbe
jmp
sub
jle
and
jl
adc
ret
test
mov
sbb
outsb
xorb
pop
in
pop
pop
call
pop
test
outsl
sbb
loop
jno
rcl
push
mov
sub
pop
cmpb
and
cld
iret
inc
fadd
out
ja
or
out
cmp
inc
decl
out
xchg
ja
ss
mov
hlt
or
push
cmp
sahf
mov
pop
nop
frstor
jbe
std
shll
push
clc
push
ror
loope
mov
stos
xchg
jnp
add
inc
mov
mov
inc
add
ror
or
arpl
daa
mull
sub
enter
rorl
mov
mov
jg
scas
iret
in
icebp
and
jae
inc
or
xlat
sbb
sub
or
and
insb
fimuls
or
dec
stos
xchg
std
xchg
pop
xchg
fsubr
repnz
mov
int3
je
push
mov
andl
lods
movsb
pop
popa
lock
in
cmp
fisttps
mov
xor
mov
fwait
pop
movsl
cmp
cmc
or
lahf
push
pop
xchg
scas
cli
inc
or
test
sbb
mov
aas
dec
clc
dec
shll
sbb
adc
xchg
dec
aam
dec
sub
mov
movsl
mov
add
into
mov
xchg
or
mov
cli
ja
push
xchg
fs
xor
cwtl
popa
push
dec
lea
fimuls
lahf
push
xchg
fidivl
jbe
les
jecxz
jl
sbb
mov
adc
xor
int3
mov
stos
push
repnz
out
push
test
cmp
xchg
or
lods
xchg
dec
ja
cmp
adc
test
adc
and
mov
mov
mov
decl
mov
jnp
ljmp
or
lds
xor
fwait
mov
inc
dec
bswap
xor
xor
xchg
mov
sbbb
mov
sbb
sbb
jne
xchg
mov
inc
sub
lahf
dec
imul
das
ror
mov
jno
and
xchg
xchg
daa
movsl
xor
push
sbb
pop
dec
jne
push
mov
iret
insl
mov
in
inc
adc
add
cmpsb
pushf
jae
loopne
dec
fdiv
aam
pop
sbb
mov
sbb
mov
xchg
pop
adc
mov
sub
repnz
mov
test
mov
lret
mov
push
add
pop
push
or
lea
and
sbb
fistpl
outsl
and
mov
scas
and
jmp
cmp
xchg
int3
aas
sub
scas
pushf
adc
arpl
subl
sub
sub
mov
pop
pop
fwait
daa
loopne
lahf
repnz
mov
fwait
jle
inc
or
sbbl
inc
in
xor
mov
inc
jne
loop
jae
dec
adc
mov
insb
xor
and
xchg
xchg
inc
cli
cld
lods
dec
adc
test
cwtl
out
jg
xchg
idivb
in
ds
lahf
add
sbb
mov
das
jecxz
mov
test
out
or
ja
or
mov
dec
bound
fcmovb
and
add
call
iret
aam
sub
xchg
les
push
mov
pop
and
mov
notb
ret
lcall
hlt
out
out
xchg
mov
inc
sub
fdivs
xchg
push
or
data16
push
dec
out
and
mov
ret
cmp
push
addr16
hlt
mov
mov
mov
enter
and
pusha
mov
jmp
xchg
push
ljmp
sub
sub
add
rorl
jge
fildl
lret
leave
and
push
loop
int3
nop
xchg
or
int
sub
inc
lret
in
and
inc
cmp
pop
iret
xor
pop
insl
mov
and
xchg
xlat
mov
jo
jmp
hlt
sbb
xchg
fists
rolw
movsl
mov
in
jp
fwait
adc
lcall
dec
jns
lods
jb
lahf
insb
sbb
rcl
roll
imul
cmpxchg
jmp
imul
inc
ljmp
out
lds
or
or
push
notb
popa
fdivrs
cld
rorb
rcl
jl
cmp
jno
xor
sbb
xchg
cmp
jb
pop
popf
cmc
jo
mov
mov
cli
jg
out
arpl
lds
pusha
adc
or
mov
and
rcrl
movl
inc
push
idivb
shrb
xchg
adc
scas
aaa
insb
mov
rcr
psubq
cmp
mov
xchg
hlt
sbb
sub
inc
sahf
ret
jmp
lahf
jbe
loop
adc
mov
scas
and
add
mov
pop
push
xor
adc
repnz
decb
popa
xchg
push
gs
stos
dec
or
sbb
mov
aam
out
int3
inc
stos
mul
ret
xor
rorb
lahf
sub
ret
outsb
in
or
mov
lret
inc
fwait
dec
add
lret
xchg
xor
lahf
sahf
fadds
rorl
cmc
push
ret
jge
ficomps
leave
lret
mov
in
sbbb
dec
push
adcb
mov
stc
rorb
stos
push
ljmp
outsl
dec
or
push
stc
sar
dec
add
mov
and
rolb
ret
push
sub
ret
push
dec
xlat
aas
xor
push
jae
xchg
and
sub
or
jbe
fucomi
andb
loope
push
or
sub
adc
outsl
mov
jno
ja
iret
sbb
movsb
cmpsl
ret
js
das
add
dec
fimuls
call
push
add
mov
insb
cmp
subl
mov
xchg
stc
xor
cmp
int3
cltd
jae
inc
sub
xchg
test
pop
ds
mov
xor
inc
xor
inc
test
mov
ljmp
add
pop
es
iret
and
in
push
sub
cmc
inc
test
cmp
rorl
sub
mov
sbbb
pop
add
xchg
inc
cmpsl
out
sbb
idivl
push
jle
scas
aaa
jno
les
sbb
mov
adc
jmp
add
stc
loop
mov
int3
rorb
test
mov
cmova
jmp
fisubs
xor
jbe
neg
lcall
jmp
pop
adc
lods
inc
cld
movsb
mov
lret
ja
outsl
stc
rcrb
enter
dec
aaa
inc
inc
inc
int
fisttps
cmp
fwait
sub
sub
push
xor
jle
hlt
xor
cmc
bound
xorl
dec
jmp
pop
pop
scas
ja
mov
add
test
rcrl
arpl
inc
loope
mov
cld
sub
or
xchg
stos
fidivs
fildl
xchg
lock
mov
fwait
inc
test
out
cli
mov
in
dec
sub
enter
in
adc
inc
in
fisttpll
out
dec
adc
jg
cmc
js
sub
add
cli
je
stc
shll
ret
adc
dec
repnz
sbb
lods
cmp
lods
out
das
push
lcall
pop
cmpsl
enter
adc
mov
pop
cmp
loope
pop
rcrl
stos
add
ds
and
cld
push
popf
add
pushf
ljmp
dec
adc
test
jo
mov
xor
inc
jae
pusha
cmp
pushf
push
cmp
jo
stos
in
stc
bound
dec
mov
pushl
pop
mov
jp
mov
push
mov
movsb
stos
rcrb
xor
jb
and
xchg
mov
lea
xchg
mov
cmp
xor
aad
adc
jo
jg
daa
loop
test
sbb
loopne
lret
repnz
fsubrs
scas
rorb
test
rorl
pop
or
jne
pushf
jmp
loope
fwait
jbe
test
dec
cmp
pop
enter
enter
mov
insb
addr16
xor
push
leave
fcmovnb
mov
inc
mov
std
or
test
inc
aad
aad
add
cmp
mov
mov
mov
clc
push
loope
out
shlb
adc
movsb
mov
xchg
pop
insl
dec
mov
loope
call
daa
repnz
push
jb
or
or
mov
insb
push
jg
shll
mov
lahf
test
enter
add
ret
in
xchg
in
ljmp
dec
mov
or
in
cmp
nop
or
sub
shrl
aam
out
xchg
jle
stc
pop
cmpsb
stos
scas
pop
dec
out
cmp
nop
inc
cld
xlat
jg
xchg
sub
fucomi
mov
int
add
push
jns
cltd
push
test
or
push
lahf
scas
clc
pop
test
jecxz
adc
sub
jne
mov
rsqrtps
ss
cmp
pop
mov
sbb
int3
inc
push
cmp
mov
out
insb
adc
ja
or
loopne
pop
mov
in
fisttpl
jno
sbb
cmc
push
inc
shll
lret
rolb
and
adc
rcr
sti
addl
push
mov
inc
cmp
insb
push
bound
lret
mov
inc
movsl
fstpl
mov
lds
mov
push
and
pop
data16
test
imul
push
int3
xchg
in
cmp
lret
pop
jmp
repnz
xchg
js
frstor
scas
je
jmp
shlb
jns
xchg
jle
dec
pop
dec
and
cmc
push
inc
stos
imul
lods
add
pop
jge
fstpl
loopne
test
and
jno
cli
add
xlat
repz
inc
mov
clc
jno
jmp
push
out
in
shr
xchg
insb
adcb
loop
sbb
jmp
sub
jnp
out
mov
ss
insb
into
addr16
mov
cld
adc
insl
fistpll
dec
loopne
mov
ret
xchg
pop
mov
mov
sub
cltd
arpl
cs
mov
and
add
pop
adc
out
mov
push
inc
mov
adc
xchg
test
cmc
sbb
push
sub
xchg
xor
test
sub
loope
ja
sbb
ss
pop
es
fstpt
mov
aas
mov
int
and
bound
mulb
fidivrl
xchg
fcoml
or
pusha
push
xchg
and
sub
jnp
push
cmp
jg
mov
cmp
nop
out
int
popa
loop
movsl
sbb
or
repnz
filds
or
popa
jmp
arpl
int
testl
mov
aam
in
imul
pop
test
into
scas
jecxz
lds
loop
dec
xchg
lds
mov
xchg
adc
adcl
lock
lahf
mov
mov
pop
or
xchg
xor
outsl
sub
inc
aad
jbe
data16
push
jle
movsb
pop
and
ret
sbb
popf
ja
jecxz
data16
cmpsl
mov
rclb
pop
fsubrl
jecxz
shl
push
imul
or
lahf
sbb
inc
andb
fdivrl
pushf
movsb
fmull
inc
int3
dec
enter
cs
icebp
ss
into
cmpsl
xchg
mov
dec
push
fwait
mov
idivl
cmp
mov
cwtl
shrb
jo
sbbl
or
adc
adc
in
add
in
jnp
xor
xor
in
js
jmp
outsb
jno
mov
push
addr16
stos
mov
or
jge
pop
or
into
fidivrl
xchg
adc
test
fwait
mov
cmp
mov
sub
xchg
push
add
mov
dec
xchg
dec
test
pop
mov
fst
pusha
xor
jmp
push
mov
mov
pop
ja
int
xor
jge
popf
test
xor
mov
mov
add
insb
pop
and
cmpsb
cli
cmpsl
sub
insb
dec
jle
or
push
jmp
cld
int3
jecxz
sub
xor
and
jp
mov
mov
sarb
aas
int3
in
push
adc
inc
or
inc
daa
cmp
shrd
rolb
cld
int
and
inc
mov
sbb
and
dec
pop
pop
in
jecxz
mov
inc
push
adc
pop
stos
rorb
sarb
std
inc
cli
les
mov
xchg
loope
xlat
sub
sbb
mov
or
jmp
pop
adc
nop
test
adc
sti
sbb
mov
mov
cmp
dec
fsubs
cmp
repz
jbe
into
mov
leave
ljmp
add
jmp
push
icebp
cli
xor
test
repnz
cmp
mov
jmp
lods
ret
ljmp
inc
gs
in
adc
cmc
jmp
jecxz
dec
jns
pop
adc
aas
mov
sbbb
mov
push
adc
test
xchg
outsl
pop
dec
dec
stc
test
mov
inc
mov
inc
sbb
sub
and
negb
divl
inc
mov
repz
icebp
jnp
mov
sbb
clc
sbb
pop
sub
mov
push
cmp
js
ffree
xchg
cwtl
pop
mov
jecxz
pop
ret
fnstenv
scas
dec
fldenv
subl
or
ss
and
imul
sub
mov
out
les
cmp
mov
inc
jne
push
and
add
mov
pop
sbb
test
push
add
hlt
aam
inc
mov
call
enter
cmp
lock
inc
inc
mov
out
push
xchg
das
aaa
xchg
push
bound
and
sbb
cmc
insl
pop
or
cmp
dec
xchg
push
xor
push
pop
mov
shlb
sub
xchg
outsl
and
std
jb
jnp
mov
outsb
repnz
jo
or
jecxz
jnp
pop
test
push
cltd
mov
sbb
dec
pushf
ret
orb
push
push
xchg
push
mov
testb
and
jge
or
push
lar
jb
orb
mov
or
mov
clc
enter
cmp
jb
xchg
dec
into
push
loop
jb
pop
cmpb
jae
arpl
iret
inc
xchg
or
pushl
cli
fnstsw
sbb
js
or
imul
rcll
rclb
inc
mov
lret
xor
cli
imul
inc
push
push
adc
push
rorb
pop
inc
es
int
xor
or
out
inc
mov
xchg
jp
pushf
adc
aaa
mov
pop
xchg
jae
dec
fisttpll
mov
repz
or
mov
add
cli
mov
aaa
movsl
ljmp
pop
outsb
cltd
push
js
andb
sti
pop
ficompl
out
mov
inc
inc
icebp
daa
clc
rclb
ljmp
sti
repnz
lahf
or
mov
xor
add
les
mov
mov
nop
sub
jmp
lretw
pop
sbb
lods
mulb
xchg
fisubl
outsb
cmp
inc
stos
pop
xor
push
xchg
mov
ja
loopne
negl
xchg
cwtl
mov
xor
mov
adc
cmc
or
or
in
repz
dec
pop
mov
push
mov
inc
inc
xchg
jbe
clc
push
sbb
fucom
inc
cltd
scas
adc
mov
add
outsl
sbbl
nop
dec
loop
shrl
loopne
stos
xor
popa
lods
in
add
push
std
push
loop
dec
pop
loopne
pop
xchg
test
lods
cmp
fld1
call
inc
pop
lahf
aas
cmp
sub
push
jne
cltd
inc
int
mov
shl
pop
mov
cmp
sub
cld
aas
fmull
pop
sub
xorl
scas
xchg
outsl
test
rcrb
jno
mov
loope
movq
sbb
es
mov
daa
mov
jo
mov
mov
test
adc
xchg
sub
movsb
mov
push
cwtl
mov
jb
push
leave
cwtl
je
dec
or
mov
cmp
je
in
pop
fcomp
push
sti
stc
xchg
repnz
icebp
aas
mov
sub
insl
int3
addr16
call
jae
add
daa
inc
cmp
push
push
add
sbb
inc
mov
or
mov
aam
xchg
int
clc
sbb
adc
call
rcll
ret
mov
xchg
lock
ds
mov
fsubs
sub
mov
xchg
or
adcb
rcr
fstpl
ret
mov
mov
int
add
sub
cld
icebp
cltd
outsb
in
jne
adc
sub
gs
jp
or
fidivrl
mov
inc
mov
or
cmpsl
dec
cmc
jbe
shll
rorl
es
pusha
cld
das
cmp
imul
sbb
sub
bnd
push
mov
or
pushf
mov
xor
add
stc
subb
jg
dec
mov
in
repnz
and
test
pop
cmc
popa
inc
mov
push
and
add
ret
cmp
sbb
fsubs
getsec
pop
sbb
int3
dec
add
add
lods
cmp
mov
data16
dec
xchg
adc
bound
js
pop
xchg
in
shrl
jns
push
or
add
inc
fistps
lahf
pop
pop
push
cmp
mov
or
sbb
js
xchg
jns
imul
and
addr16
in
push
inc
shl
shrl
sub
aad
mov
sar
push
imul
in
jno
cmc
mov
jp
out
inc
sbb
pusha
dec
arpl
jb
push
clc
cmp
lret
lret
jbe
xchg
sub
mov
mov
insb
dec
addr16
lods
out
lods
call
xchg
pop
ja
mov
pop
repz
xor
ss
pop
notb
and
push
lods
dec
inc
jl
mov
and
xchg
outsl
xchg
data16
mov
leave
inc
jne
adc
mov
adc
cmp
aad
mov
call
or
inc
enter
dec
adc
cmp
adc
push
into
clc
outsb
out
sti
std
xchg
inc
movsl
mov
push
pop
push
mov
movsb
inc
in
mov
push
pop
and
sub
and
and
or
push
jne
push
loope
inc
shrl
jg
pop
and
outsl
sahf
pop
int3
pop
fdivrs
ret
add
mov
es
lea
mov
out
xchg
push
push
repz
repz
or
sbb
dec
jb
repnz
push
gs
shlb
jae
add
in
push
aas
inc
and
cmpsl
ss
jae
daa
xchg
sbb
cmpsl
xchg
xchg
in
pusha
mov
enter
and
negl
cwtl
ljmp
push
popf
rclb
jmp
lret
popf
fsubl
jbe
lret
xchg
sub
pushf
out
stos
cltd
pop
xor
jae
in
aaa
sbbb
int
scas
in
stc
dec
jp
inc
mov
mov
xchg
pop
call
xchg
inc
push
mov
sub
repz
and
out
mov
test
lea
rcrl
and
jb
inc
cwtl
aad
xor
xchg
nop
xor
ds
mov
mov
mov
dec
mov
xchg
jo
pop
movsl
je
xchg
cmp
lods
in
mov
iret
xor
mov
call
lahf
test
pusha
push
cmpsb
iret
cmp
addr16
push
mov
xlat
jp
inc
sub
flds
push
xlat
xchg
add
push
out
jmp
xchg
inc
pop
push
add
adc
jmp
push
iret
cmp
adc
ljmp
xchg
ljmp
test
inc
movd
and
stc
fsubrl
xor
mov
scas
and
pop
addr16
jo
fisubrs
sub
notb
loope
push
call
repz
mov
outsb
ret
les
mov
out
jl
cmp
lods
dec
lret
test
or
mov
sub
in
fbld
xchg
cmpsb
dec
push
inc
mov
inc
cmpsb
inc
shl
pop
repz
mov
out
push
enter
push
or
fildll
out
pop
shlb
nop
cmp
or
adc
push
mov
imul
push
roll
mov
jg
sahf
push
cs
and
lds
ss
mov
cmp
iret
lahf
pop
xchg
popa
int
inc
addr16
mov
movhps
xchg
movsb
jecxz
cmp
jge
mov
or
rep
sub
es
adc
adc
dec
and
iret
and
dec
divb
repz
sahf
arpl
inc
adc
daa
mov
cmpsb
or
mov
test
sub
push
lods
jne
outsl
ffreep
mov
pop
mov
jb
sbb
ret
jbe
rcrl
mov
cmpsb
mov
push
dec
imul
or
lret
mov
call
enter
xlat
fmuls
cltd
shrb
mov
mov
loop
jns
add
mov
dec
jns
fdivrs
add
pop
inc
fldcw
xchg
mov
decl
repnz
xchg
outsb
and
cmc
aaa
push
mov
xchg
push
lods
xchg
and
push
ljmp
push
cwtl
adc
inc
cmp
test
and
mov
sti
addl
cmpl
vphaddubq
sbb
jmp
std
fistps
fdivl
int3
aaa
lods
fiadds
jno
mov
xlat
xchg
cwtl
sbb
call
sub
xor
loope
lods
pop
imul
jnp
notb
or
lock
mov
inc
sub
fsubl
test
sub
adc
cmp
push
push
rcrl
jbe
sub
sub
and
jns
orl
pop
and
push
cmp
adc
jg
iret
inc
fiadds
int3
jbe
pop
aad
push
mov
dec
aas
mov
pop
pop
push
jne
sbb
sbb
jp
aad
push
lcall
dec
sbb
mov
add
mov
imul
outsb
add
jne
dec
loopne
adc
jnp
jmp
dec
lds
xor
in
scas
ja
enter
dec
push
test
pop
in
sahf
push
cwtl
push
imul
lss
adc
ret
push
in
jecxz
push
pop
test
push
data16
fxam
mov
cmc
mov
scas
outsl
aaa
sbb
ficomps
sbb
shlb
loop
sub
loopne
lods
sbb
imul
mov
rcr
push
lret
jge
dec
jle
into
dec
or
mov
jecxz
cwtl
loop
mov
int
or
and
sti
pushf
pop
test
hlt
fsubs
leave
je
jne
xchg
into
dec
mov
gs
cmp
cmp
ficoml
fsub
leave
mov
imul
sub
fs
xor
xor
aas
sbb
clc
xchg
hlt
and
jb
fs
clc
rorb
das
add
rclb
lret
sbb
adc
nop
xor
xor
or
dec
pushf
test
inc
ret
lock
push
addr16
clc
sub
jge
js
push
mov
aam
cmpsl
xchg
clc
rol
daa
or
cmp
pop
mov
mov
int3
int
jbe
shrb
int3
cwtl
les
cmpsb
add
sub
mov
cli
push
pushf
add
fadd
sbb
ds
mov
inc
sarb
adc
mov
orb
lods
mov
inc
inc
pop
inc
xchg
sti
inc
add
andb
xor
mov
scas
dec
fistl
enter
adc
fstpl
mov
shlb
mov
pop
adc
andl
sbb
mov
dec
mov
daa
xchg
add
std
pop
mov
scas
cmc
in
mov
sbb
scas
mov
cmpsb
sub
push
cld
in
adc
out
jecxz
inc
test
repz
push
pop
cmp
cs
cmc
test
leave
cmpsb
jnp
mov
jb
outsb
dec
jne
fistps
jnp
pop
pop
cltd
jg
inc
rcrb
xor
mov
mov
sti
pop
fsubs
divb
dec
adc
nop
sub
movsb
fwait
pop
test
and
mov
aam
pop
cmp
dec
jecxz
scas
mov
lea
fs
mov
popf
pop
imul
nop
movsb
jecxz
lock
sub
les
jge
fsubrl
fcoml
xchg
push
inc
cld
xor
mov
jbe
jl
cltd
or
movsb
push
cmp
and
hlt
sbb
call
mov
mov
or
sub
je
dec
rol
mov
sbb
inc
dec
adc
adc
or
push
or
jns
movsb
add
movb
hlt
mov
xor
mov
add
lahf
scas
std
pop
dec
mov
pop
out
testl
leave
jmp
sbb
mov
xor
out
stos
inc
inc
arpl
inc
inc
xor
cmp
dec
sarb
iret
inc
push
mov
loope
fcompl
cmpsb
enter
pop
and
outsl
adc
movl
imulb
adc
xchg
ret
jmp
fisubrs
mov
lods
orl
loope
fcomip
xlat
xchg
jmp
pop
xor
mov
notb
xor
aad
jo
or
jb
mov
bound
adc
xor
jno
mov
inc
int
sbb
pushf
jl
jp
mov
into
cmpsb
mov
fldcw
and
adc
imul
jp
dec
push
xchg
daa
or
fdivs
sbb
leave
and
xor
shll
rcll
test
pop
inc
lahf
stos
adc
add
lods
rolb
stos
cmpsb
jno
je
push
jmp
mov
movsb
push
subb
dec
adc
rcrb
cld
call
loopne
movsb
and
clc
sub
test
or
lods
sbb
stc
and
inc
sbb
pop
sub
mov
fcmovnu
sub
cwtl
and
out
pop
mov
orl
push
fwait
adc
adc
in
fstl
repnz
out
ret
xlat
cs
insb
repz
jg
push
ret
jns
aad
or
xor
xchg
loop
xchg
push
adc
aad
movsb
sahf
and
add
push
movsb
stc
jns
inc
out
cmpsb
push
repz
stc
xor
inc
shrd
mov
flds
iret
add
in
enter
mov
jns
xor
arpl
not
mov
jcxz
cs
mov
jno
mov
int3
fidivrs
mov
mov
adc
add
cmp
jae
data16
xchg
ret
adc
mov
hlt
add
dec
xchg
jmp
insb
loopne
jns
add
fcomp
sbb
dec
push
xchg
and
push
pop
cwtl
mov
mov
xchg
das
dec
insb
sub
adc
push
add
cmp
jb
mov
stos
test
xchg
adc
pushf
xlat
fadds
and
cmp
loopne
test
test
xor
stos
popf
sub
in
jno
adcl
push
sti
out
mov
in
pop
insb
mov
outsb
mov
jge
aam
xor
ja
or
jg
pusha
sub
xchg
sbb
or
sahf
divb
packssdw
shl
lods
xor
test
jnp
rorl
out
cld
add
fnstenv
data16
mov
dec
pop
xor
stos
push
xchg
out
out
pushf
lods
mov
popf
cmp
xor
fdivrl
inc
aam
mov
cs
movsl
xor
and
loopne
jg
or
inc
push
mov
jmp
adcb
cs
pusha
movsb
dec
xchg
mov
test
push
fldln2
mov
pop
stc
inc
mov
jae
push
pop
adc
push
fwait
sbb
cmp
hlt
je
sub
inc
ss
imul
fcmovnu
add
cmp
push
repz
outsl
cli
aas
ficoml
paddsb
mov
cmp
pop
sbbl
mov
mov
movsl
repz
cmpsl
ret
loopne
pop
fst
dec
out
xchg
movb
aas
add
pop
dec
out
cmp
addl
cmc
mov
int3
nop
ds
push
cmp
mov
dec
jg
jmp
lcall
add
test
jnp
cli
in
out
in
out
out
test
rolb
adc
rolb
sub
cld
movsb
mov
dec
mov
cmpsl
mov
bts
mov
stos
call
mov
into
sahf
repnz
fistpll
push
dec
inc
jnp
sbb
test
addl
fs
imul
dec
mov
pop
fldcw
lcall
and
and
call
lcall
addl
dec
stos
xor
or
jp
cmp
loopne
fwait
shll
insb
mov
push
lret
xchg
fmull
jp
cmp
pop
jg
int
lods
xchg
repnz
ret
repz
and
sahf
cld
sub
or
mov
push
outsl
sub
scas
mov
xchg
sbb
xor
and
push
push
rclb
addl
mov
mov
shll
mov
xchg
pop
cmpsb
xchg
aas
idiv
or
dec
jno
adc
ja
repnz
aas
ret
ja
int3
lods
jno
jecxz
jns
xchg
lret
shll
int3
clc
adc
leave
sbb
xchg
aad
mov
repnz
cmp
and
mov
arpl
push
pop
ljmp
inc
xchg
mov
sub
mov
or
insb
push
push
mov
cmpb
and
adc
dec
add
ja
push
lds
mov
xchg
fildl
fmulp
adc
and
stc
xor
mov
jne
pop
dec
push
mov
mov
dec
lcall
push
sub
sbb
mov
and
lcall
sahf
inc
test
jp
jecxz
lods
addr16
jle
mov
adc
out
dec
mov
faddl
xor
push
cmc
adc
push
sub
mov
dec
les
fidivs
cs
out
jno
sub
xchg
dec
dec
jl
mov
push
iret
hlt
sbbb
inc
fwait
sub
movl
mov
mov
pushf
sbb
xchg
xchg
add
adc
cmc
aaa
movsl
pop
sub
int
dec
bound
xchg
xlat
xor
jno
js
lret
ffreep
shl
imul
nop
movl
dec
push
in
mov
mov
cmp
or
sbb
cld
dec
inc
cmpsl
sub
push
push
lds
dec
xlat
daa
shlb
cmp
lcall
sbbl
mov
popf
shlb
mov
sub
inc
mov
xchg
ret
and
mov
lcall
cwtl
lea
sbbl
popfw
lock
xor
adc
push
sbb
outsb
aaa
dec
mov
fs
test
push
mov
lahf
push
movsb
cltd
jb
and
lret
cmc
mov
mov
lods
sub
and
call
and
sbb
cmp
test
fdivs
loope
xchg
fistpl
outsb
cmpl
jle
fldl
dec
adc
data16
adc
inc
ss
jo
push
add
cmp
lods
out
jg
jp
sbb
dec
jno
mov
or
mov
insb
mov
dec
daa
call
mov
push
jg
pop
and
mov
mov
cs
repz
fisubrl
stc
fmuls
and
pop
add
inc
inc
fldenv
arpl
sub
mov
jmp
jge
add
jnp
push
out
sub
int
lret
xor
aam
dec
lods
xchg
sbb
int
daa
dec
imul
test
sbb
xchg
cld
cmp
cmp
out
rol
xor
adc
pop
dec
inc
loop
out
adc
mov
das
dec
hlt
pop
adc
add
addb
fisttps
in
push
xchg
sti
dec
push
out
repnz
stos
fcoms
cmp
nop
dec
mov
test
sub
movsl
sbb
in
iret
jecxz
iret
pushf
hlt
dec
pop
adc
mov
add
movsl
mov
scas
inc
dec
jbe
mov
rcl
push
cli
adc
sub
dec
sti
icebp
add
push
push
xor
int
jb
push
popf
stc
push
jmp
xor
xor
cmpsb
pop
es
lcall
push
int
mov
orl
jne
dec
loopne
iret
mov
and
aam
in
stos
xchg
sbb
pop
xor
cld
push
scas
popf
inc
fnsave
shrb
jge
add
lods
pusha
pusha
sub
jne
xchg
add
xor
sahf
push
hlt
inc
mov
lret
adc
xorb
push
enter
ret
pop
jno
pop
push
mov
dec
scas
or
pop
pop
test
cltd
out
call
mov
jmp
imul
lods
or
fldcw
rorb
mov
xchg
dec
js
jl
jl
mov
out
loopne
mov
jne
clc
xchg
loope
cmp
jae
ljmp
sbb
out
pusha
idivb
push
xor
rolb
mov
or
inc
cmp
sbb
xor
and
rolb
mov
pop
test
cmp
sub
ret
xor
cmp
pop
add
stos
pop
adc
nop
push
pop
xchg
mov
pop
xchg
pop
mov
imul
and
lock
adc
add
jns
push
mov
movsb
cmpsb
mov
out
mov
jno
fwait
rorb
and
daa
out
cmp
xchg
mov
ljmp
sbb
std
inc
leave
mov
xchg
and
aad
out
mov
aaa
fbstp
xor
adc
inc
mov
mov
int
ds
andl
in
ljmp
inc
sbb
sub
jno
mov
push
scas
dec
andl
sbb
push
mov
pop
in
out
pushf
mov
popa
mov
jb
or
loopne
int3
popf
xor
cmc
xchg
sub
push
mov
stos
movsb
ud2
sbb
les
mov
rcll
xchg
mov
hlt
daa
and
daa
test
insb
push
xor
push
push
pop
jmp
pop
ret
imul
dec
bnd
fistps
xchg
xchg
pop
mov
mov
xchg
sub
stos
aam
push
jg
pop
popa
mov
fwait
cmp
out
adc
js
mov
cmp
data16
subl
sub
fwait
pop
push
jmp
ljmp
xchg
mov
push
out
movsb
or
lret
sub
rcll
mov
loopne
dec
mov
test
mov
js
add
push
xor
inc
fbstp
dec
addr16
in
mov
rcl
cld
aad
test
and
jo
cmp
fwait
adc
mov
jle
inc
xor
jl
and
mov
push
pop
fnstsw
int
mov
push
enter
fwait
lea
sarl
insl
insw
lods
pushf
inc
mov
aad
shlb
xchg
in
scas
pushf
mov
rorb
mov
jmp
es
add
mov
adc
sarl
in
fsubrl
cmpsb
subl
xor
fcompl
ret
fldenv
test
push
push
jmp
sbb
sub
jl
jmp
std
mov
lods
es
lcall
test
addr16
xor
mov
mov
inc
add
pushf
push
inc
inc
or
xchg
mov
rcr
or
jns
flds
popa
imul
cs
ja
test
outsb
push
sub
ret
lea
dec
xlat
loope
and
fiadds
pop
aam
mov
xchg
inc
fldcw
andl
mov
jecxz
test
daa
cs
out
xlat
sub
movsb
jge
and
sahf
pop
add
xchg
hlt
mov
inc
pop
cmpsb
imul
inc
es
scas
adc
div
loop
or
stos
push
call
xchg
adc
orb
in
dec
inc
sbb
rorb
stos
gs
in
scas
sub
iret
lret
lds
stc
addr16
push
mov
pop
repz
add
dec
mov
cmp
sbb
shrb
test
mov
cmp
repnz
mov
and
add
and
roll
jg
ss
cld
adc
push
repz
jb
test
and
mov
loope
or
mov
dec
adc
mov
dec
jo
push
mov
adc
add
mov
cs
out
pop
dec
jg
loop
lret
cmp
out
mov
pop
lret
adc
imul
lret
inc
inc
subb
mov
jp
mov
add
sub
mov
mov
insl
in
or
xchg
mov
push
pop
sbb
std
scas
and
repnz
sbb
mov
rolb
fs
fdivrs
mov
xchg
imulb
fimuls
and
mov
aaa
fsub
xor
cmpsl
mov
outsl
push
jns
add
mov
in
sarl
xor
add
repz
mov
scas
int
movsb
shlb
loop
mov
jle
leave
inc
mov
sbbl
xor
push
mull
push
sbb
push
mov
sbbb
clc
xor
jmp
push
andl
insl
dec
and
push
cld
or
mov
inc
pushf
hlt
pop
mov
les
fimull
sub
add
mov
in
popa
or
mov
ret
divl
jnp
pop
shlb
rcl
in
loopne
lods
xchg
push
mov
lds
adc
leave
pop
cmpsl
dec
int
add
mov
mov
addr16
das
xchg
mov
addb
xor
shrl
movsb
mov
loopne
leave
xchg
jle
xor
dec
mov
sahf
leave
decb
push
loope
inc
mov
mov
sub
stc
out
mov
cli
inc
testb
out
adc
inc
and
jp
out
mov
push
push
mov
sti
dec
lea
ret
mov
insl
cmp
mov
dec
arpl
xchg
sub
ss
in
inc
nop
fisttpl
push
jnp
mov
sbb
mov
leave
or
pop
cwtl
or
fmul
inc
or
arpl
xor
mov
leave
mov
in
repnz
pop
inc
lea
xchg
mov
pop
push
loop
jne
jae
out
in
jg
push
inc
push
fcompl
fwait
outsl
data16
mov
lea
xchg
xchg
mov
arpl
sti
inc
cmc
sti
scas
or
icebp
and
mov
push
push
xor
push
test
imul
int
test
lock
sub
in
xorb
in
addr16
call
lret
addb
cltd
pop
sub
je
cs
and
sub
dec
add
mov
cmp
mov
cmp
stos
pop
sbb
adc
iret
push
or
popa
call
iret
push
lret
adc
dec
mov
mov
test
cmp
fstpt
scas
pop
mov
jb
cmp
lret
pop
cltd
mov
sub
cltd
jns
repz
push
es
repnz
jbe
sbb
stos
cli
and
jo
mov
ljmp
inc
cld
in
cld
xor
push
adcb
mov
repnz
outsl
cmp
lret
outsl
lcall
stos
xchg
mov
jg
and
add
and
aad
sar
inc
lea
divb
stc
mov
ja
sti
cmpl
popf
lock
stc
popa
pop
rcrl
test
popa
mov
das
xchg
fdivl
rcll
xchg
loop
mov
xchg
xlat
xchg
lds
jb
sbb
jmp
scas
cmp
or
add
loopne
mov
scas
and
push
add
rolb
in
outsb
sbb
cmp
push
jge
loop
fistl
cmp
shll
das
mov
cs
xchg
push
fstpt
xor
push
imulb
jge
mov
xchg
mov
xchg
test
pop
jno
xchg
mov
push
scas
mov
mov
test
push
xchg
mov
add
aad
sub
lds
cmp
mov
inc
and
xchg
lret
arpl
insb
test
inc
ret
leave
inc
lret
fs
xor
ljmp
aam
push
dec
or
in
xchg
xchg
inc
cmp
aam
lahf
inc
jns
enter
jge
sbb
nop
fsts
lods
out
arpl
std
scas
popf
jno
mov
test
call
jnp
lods
or
jb
xlat
and
push
dec
jl
mov
enter
in
jno
bound
lods
andnps
movsb
mov
xchg
fimull
lock
mov
in
in
sbb
xchg
and
int3
push
rorl
aad
and
ret
and
mov
pop
sub
shrl
xchg
lds
push
pushw
out
leave
cltd
xor
xor
ja
shrl
jecxz
dec
pusha
lds
xor
mov
test
mov
insl
xchg
xchg
mov
sub
jge
mov
aad
push
or
arpl
psubw
and
xchg
ret
lods
imul
add
xchg
mov
cmp
add
xor
mov
ljmp
popw
mov
lret
mov
es
aas
jg
push
mov
cmp
loopne
push
or
cmp
iret
inc
add
sahf
sub
mulps
inc
jne
popf
ror
lahf
imul
pop
mov
and
mov
cwtl
andl
adc
push
lea
xor
fs
sub
mov
adc
pop
xchg
jb
fidivl
rclb
fnsave
add
fldl
scas
addr16
lds
and
dec
ficoms
jecxz
push
sahf
bound
lcall
fnstenv
lahf
cmp
gs
cmp
pushf
push
mov
mov
jmp
lcall
mov
push
ja
cli
mov
adc
xor
jg
aaa
sbb
cwtl
nop
or
sub
nop
not
cmc
imul
ja
pop
test
mov
clc
pusha
lea
addl
mov
mov
cmp
or
and
test
sub
sub
sbb
or
xor
jp
ss
cmpl
inc
fdivs
mov
and
inc
mov
movsl
fld
xchg
fistpll
dec
icebp
jle
ret
out
int
add
add
cmp
mov
rolb
sarl
in
inc
mov
push
and
sub
mov
jge
dec
repnz
andb
xchg
aaa
sbb
jno
repz
and
lcall
lods
cmpsl
stos
mov
cmp
out
leave
dec
les
and
fcmove
nop
sbb
cltd
adc
rcll
ficomps
xor
sub
push
popf
insl
movl
mov
jbe
vandnps
or
fsubr
shll
leave
movsb
fistps
jns
aaa
inc
mov
jg
xchg
cmp
fistps
cld
pop
inc
into
lods
dec
call
adc
repnz
sbb
push
xor
sub
shrb
jecxz
cwtl
sahf
pop
pop
stos
gs
cld
inc
push
fucompp
dec
dec
test
sub
cmp
pop
mov
adc
pop
sahf
jne
fbstp
mov
test
sbbl
mov
lahf
mov
xchg
dec
add
in
push
hlt
and
mov
pushf
jl
xor
icebp
idivl
mov
je
ds
js
mov
pop
ja
dec
test
add
lahf
call
sub
aas
fnstcw
mov
int3
push
aaa
push
push
adc
push
fisubrl
hlt
jl
imul
xchg
orl
sub
and
fdivs
dec
jecxz
movsl
mov
adc
movsb
and
fdivl
cmp
ljmp
and
xor
pop
imul
bound
in
adc
sbb
ja
js
or
fwait
mov
jno
dec
icebp
test
loopne
or
push
or
loop
mov
fwait
pop
pop
inc
mov
testl
sbb
arpl
or
sahf
add
lods
dec
xchg
cwtl
repz
xor
cmp
orl
lret
arpl
add
cmc
or
repnz
ja
test
lds
lods
ja
or
je
pop
inc
pop
jo
out
dec
fcmovnb
cld
insb
hlt
and
in
sub
in
repnz
aas
cmpsl
outsl
and
cwtl
lds
fisubrl
jecxz
inc
test
push
cmp
lock
lret
in
add
mov
aaa
cld
xor
jb
mov
das
or
rolb
mov
add
push
imul
imul
decb
loopne
cmpsb
les
sub
dec
repnz
pop
jg
pop
lds
xor
mov
into
push
imul
inc
add
fildll
or
mov
dec
lds
push
repnz
ficompl
in
and
push
add
aaa
jo
and
mov
dec
mov
movsl
test
xchg
xchg
es
rcrl
lret
sub
xchg
inc
push
test
test
leave
leave
xchg
nop
dec
xorb
jo
or
loopne
sbb
cmp
icebp
add
pop
cmpsb
mov
xor
adc
mov
lea
xchg
iret
jno
jle
sbb
rcl
out
cmpsl
mov
aam
loope
loope
adc
lahf
push
inc
flds
fcomps
stc
push
in
daa
test
aad
sbb
jl
pop
dec
cmp
mov
pop
inc
inc
and
pop
xor
test
stos
and
repnz
ret
mov
pop
inc
and
popf
lods
jle
pop
adc
out
push
ret
adc
repz
ljmp
iret
data16
adc
add
adc
stos
or
inc
and
xor
pop
cmp
js
mov
outsl
scas
xchg
dec
sub
cmp
pusha
cvtpi2ps
lds
jne
fbld
push
dec
add
out
outsb
into
lahf
roll
daa
adcb
pushf
out
jb
sub
hlt
ljmp
fstpl
inc
adc
mov
adc
je
cltd
sbb
mov
mov
jbe
and
jmp
add
in
clc
mov
and
pusha
or
aad
xchg
cmpsb
in
lret
jbe
aad
inc
pcmpeqd
popa
mov
scas
and
mov
in
pop
cmp
cmpb
jbe
sbb
mov
shl
mov
outsl
jbe
and
ds
adc
in
ficoms
mov
sub
enter
hlt
push
jg
fisubrl
sub
mov
stc
and
daa
decl
and
jbe
nop
js
inc
fwait
and
std
mov
xchg
jl
push
adc
mov
hlt
loope
into
ds
nop
mov
or
mov
arpl
jno
fs
jg
xchg
shrb
fs
cli
fists
stc
push
lret
out
dec
xor
fs
aas
mov
pop
jg
out
mov
or
mov
imul
hlt
add
and
mov
data16
xor
in
out
outsl
ss
mov
xor
fists
test
in
movzwl
fists
pop
rcrl
dec
sub
sub
mov
cmp
nop
xor
pop
cmp
and
mov
sbb
aam
cmp
int
les
jg
dec
fnsave
mov
adc
stos
jb
pop
stc
imul
loopne
mov
sbbb
stos
adc
adc
add
or
or
imul
lods
dec
clc
cs
es
sarl
les
cmp
jecxz
push
mov
mov
sub
sti
jno
xor
pop
into
adc
push
data16
mov
fdivs
shlb
xchg
jns
repz
scas
and
lock
ja
test
pushf
sub
shr
and
pop
adc
or
ja
mov
xor
pop
mov
int3
shll
jl
pushf
cmpsl
mov
cs
sbb
shll
push
mov
ds
mov
xchg
popl
cmpsb
addl
jns
adc
push
and
push
pop
dec
mov
scas
push
xchg
jae
sbb
lods
sbb
outsb
pop
push
rclb
hlt
sti
test
and
dec
push
pop
jno
sti
jno
mov
inc
sbb
mov
xchg
repz
xchg
add
cmpsl
or
dec
add
lods
int3
pop
test
scas
push
aas
shll
jge
sbb
dec
add
mov
jl
outsb
in
and
cmp
sbb
pushf
int
clc
mov
push
cmpsb
mov
pop
xchg
pop
outsl
insb
cmp
loop
inc
pop
and
cli
je
adc
loopne
xor
into
pop
jae
push
fadds
mov
xchg
xchg
push
mov
xor
cltd
filds
cwtl
out
cmpsl
xor
jns
sub
lcall
push
sub
je
mov
inc
repnz
pop
xchg
clc
dec
out
or
inc
test
aam
inc
fnstcw
dec
pop
xlat
out
pop
pushf
shl
mov
add
xchg
fisubl
dec
out
xor
pop
fidivrl
bound
jmp
sub
pop
aas
push
xchg
subb
mov
dec
mov
clc
adc
jnp
push
pop
xlat
inc
repz
mov
insl
mov
leave
ret
loop
arpl
in
lods
rorb
mov
and
lock
cmpsb
mov
out
ljmp
push
mov
cmp
mov
inc
xchg
xor
pushf
mov
inc
pop
rorb
cmpsb
xor
scas
dec
push
ss
nop
dec
addr16
loope
daa
imul
sbb
iret
mov
adc
mov
xorl
dec
ljmp
jmp
or
mov
mov
aas
enter
sti
cli
jae
mov
cltd
xchg
jbe
loopne
stc
or
lds
xchg
dec
xchg
addl
int
push
nop
cmc
ds
mov
lea
push
inc
je
fimuls
add
stos
pop
enter
dec
lahf
cmp
xchg
cmp
push
push
mov
rorb
push
lahf
dec
incb
push
out
fwait
or
lock
add
imul
sub
xor
push
jge
ja
push
push
and
add
sub
insb
sbb
mov
cltd
cs
adc
insb
sbb
clc
pop
fdivrs
fdivrl
addl
sar
mov
dec
js
push
cmp
push
push
sbb
sti
jl
dec
pop
loopne
jge
popf
lods
ja
and
out
mov
aaa
addb
xor
iret
cmc
negl
es
mov
push
arpl
sbb
fld
fsubrl
stc
pop
inc
outsl
je
sub
mov
cltd
sub
pop
sarl
rorb
adc
and
jb
mov
cmp
jecxz
or
test
or
push
fcmovnu
enterw
cmc
adc
stos
mov
xor
dec
or
sbb
add
std
mov
push
cld
xchg
sub
ror
aas
cmc
xchg
cmp
fs
and
dec
xchg
jbe
sbb
test
or
inc
test
fwait
cmp
pop
repnz
mov
shlb
dec
push
movsb
push
adc
ret
dec
rorl
sub
lods
push
push
aaa
idivb
adcb
out
dec
jge
ret
sub
outsb
jmp
imull
cmpsl
ja
adc
fidivrs
push
lret
insl
pop
ds
fbld
mulb
jbe
test
cmp
cmpsb
xorb
xchg
in
mov
push
out
push
push
add
sti
outsl
fsubrp
aam
jno
push
loope
cli
mov
push
and
in
jbe
out
add
scas
adc
adc
sahf
xchg
fnstsw
cvtpi2ps
psubd
mov
add
xchg
shlb
gs
pop
sbb
or
cmpsl
sub
pop
insl
outsl
pop
cmp
or
mov
cli
aaa
nop
cmp
iret
in
outsb
adc
jb
and
iret
aam
pop
lea
idivb
adc
inc
je
loope
hlt
lret
adc
nop
add
jle
mov
dec
cmp
push
outsl
sub
add
insl
mov
rcll
jbe
js
inc
js
sbbb
in
lea
int
imul
mov
mov
or
lea
cmpsl
cwtl
test
scas
xlat
in
ret
shr
mov
mov
xor
es
mov
cmp
xchg
fmull
jae
cmp
adc
out
stos
inc
insb
jnp
ficoms
and
daa
inc
add
int
xor
sub
int
xchg
add
daa
cmp
jnp
cmp
fnsave
bound
sbb
inc
xchg
shrb
jno
cmp
adc
jl
lods
pop
push
dec
lret
sti
lds
or
and
cmp
in
popa
mov
mov
push
sbb
insb
and
pop
or
sub
add
pop
sub
mov
lds
dec
mov
push
aaa
mov
or
daa
mov
mov
cltd
mov
aas
fldcw
add
aad
adc
mov
stc
jle
mov
adc
mov
sbb
jns
data16
orb
cmc
ffree
push
loope
outsb
mov
pop
fcmovnu
dec
sahf
inc
ret
xor
add
lea
outsb
dec
mov
mov
fistpll
lods
arpl
jnp
dec
push
testl
adc
xchg
add
sbbb
xor
jmp
dec
fstp
int3
mov
sbb
stc
loopne
adc
stc
or
cmp
enter
mov
mov
stos
sahf
addr16
lods
mov
xor
test
adc
dec
push
cmp
push
jecxz
out
sub
cmpl
add
jl
adc
movsb
add
mov
adc
stc
dec
lahf
sub
add
add
scas
sub
xor
adc
add
fs
sub
lcall
or
fisubl
mov
push
push
push
cli
popl
pop
pop
je
sub
negl
or
outsb
pop
pop
enter
stc
js
lahf
ret
mov
adc
and
sbb
mov
dec
fcoms
mov
cmp
hlt
cltd
sub
imul
inc
push
xor
pop
xor
cmpsb
xchg
mov
test
and
adc
cmpb
pop
int3
int3
sarb
jno
aad
arpl
insb
xor
sub
leave
mov
scas
imul
cli
icebp
pop
flds
bound
aam
fldcw
and
dec
lcall
sub
cmpsb
adc
pop
in
aaa
pop
sbb
push
stos
push
inc
mov
mov
adc
inc
mov
sbb
movsb
jne
std
xchg
sub
dec
pop
cmp
addl
jle
aas
mov
jl
nop
cmp
push
dec
and
xlat
sbb
or
jecxz
xchg
adc
mov
popf
and
mov
pop
or
fists
xchg
xor
insb
and
add
out
dec
in
mov
inc
loope
lods
sahf
or
mov
jae
fisttps
and
inc
ja
cmpsb
xlat
push
dec
cmp
xlat
fisttps
call
subl
mov
inc
stos
ss
sbb
in
fldt
xor
and
inc
mov
pop
pop
mov
or
sub
inc
and
loopne
ud2
pop
iret
lods
test
sbb
roll
push
mov
push
sbb
dec
jnp
daa
and
pop
xchg
lret
test
sub
dec
jle
push
call
ljmp
mov
pop
jno
pushl
jnp
xchg
and
jnp
xor
xchg
mov
mov
rcrb
mov
dec
es
pop
dec
out
js
jmp
dec
push
pop
daa
rcll
movsb
test
inc
mov
xor
shrl
push
pusha
adc
mov
push
orb
mov
pop
in
pop
and
fwait
add
and
dec
outsl
int3
pcmpgtw
xor
push
out
jp
sub
xor
cmp
pop
dec
iret
jmp
cmp
mov
pop
mov
fidivs
cmpb
pop
iret
int
mov
ror
add
clc
push
lods
pop
xchg
ret
notl
ljmp
push
xchg
adc
inc
lods
call
mov
scas
out
lcall
lods
dec
xchg
pop
lcall
inc
call
add
and
xchg
test
cs
xor
je
fistpl
je
popa
roll
push
fcompl
push
mov
pop
xchg
push
dec
popa
dec
cld
ficoms
bound
cmp
adc
lea
mov
or
sbb
repnz
xchg
add
pop
divl
shrb
frstor
and
adc
hlt
sahf
mov
loopne
js
std
fnstenv
mov
addr16
and
mov
sub
mov
sub
shlb
add
std
xchg
fstpt
sub
sub
mov
mov
or
inc
dec
push
dec
jmp
pop
nop
or
jmp
xor
js
out
test
jbe,pt
dec
xchg
movsl
std
aas
xchg
arpl
shrl
xchg
out
out
dec
pop
lret
xor
mov
add
shll
fwait
cmp
out
sbb
ja
vpunpcklqdq
in
fwait
sub
call
inc
arpl
and
xchg
mov
arpl
pushf
mov
inc
and
mov
sbb
cmp
or
sbb
enter
call
js
dec
add
xchg
mov
add
ss
ret
inc
sbbb
lret
arpl
nop
and
pop
fsubrl
jle
add
pop
pop
cmc
sbb
test
xor
sub
in
and
xor
add
and
pop
in
lea
push
shll
loop
push
mov
inc
dec
icebp
test
mov
stc
sbb
adcl
insb
add
testb
jle
shr
ds
mov
jne
cld
xor
cmp
push
insb
adc
cmp
sub
test
rorl
andb
lea
mov
into
popa
sbb
adc
imul
sbbl
neg
popa
fs
fisubrs
jmp
mov
arpl
add
jne
ss
cmpsl
cmpsb
sbb
inc
add
hlt
in
icebp
enter
gs
sub
jbe
sbb
daa
daa
jnp
mov
dec
push
out
dec
pop
ljmp
sub
nop
test
sub
pop
cmp
adc
stos
and
dec
test
popf
stc
sub
sub
fcmovu
into
mov
repz
imul
in
jmp
shr
imul
xchg
sub
fistl
pop
cwtl
loop
dec
out
jecxz
add
loope
jo
repz
xor
leave
sbb
shll
scas
pop
popa
fadds
test
adc
cmp
fmul
dec
iret
jp
push
xor
shl
sbb
xor
lods
jae
mov
in
test
fstps
push
add
pop
ja
popa
cmp
add
add
sub
in
inc
js
andl
inc
fwait
imul
inc
loope
sbbb
mov
stos
fisttpll
addr16
mov
sbb
testl
movsl
inc
inc
pop
sahf
xchg
sbb
inc
cmpl
cs
push
je
mov
hlt
pop
xor
loope
push
mov
loope
pop
mov
jp
jle
out
sbb
orl
mov
faddl
mov
std
sbb
loope
cmp
sbb
ret
clc
imul
bound
xchg
and
dec
out
inc
jno
xchg
lds
and
fisttpl
jle
call
or
push
clc
push
imul
iret
jp
outsb
xor
stc
jne
scas
testl
loop
lcall
popa
xchg
mov
sub
xchg
xchg
das
xchg
jecxz
das
stos
jne
mov
jl
mov
cmpsb
neg
ret
xor
scas
ret
push
add
daa
mov
push
mov
dec
inc
int3
pop
push
inc
push
or
xchg
fnstenv
je
mov
nop
rol
es
cmpsl
out
nop
cmp
adc
dec
adc
lahf
inc
sahf
jl
add
dec
aad
mov
enter
xlat
insl
lock
popa
rolb
orb
bound
test
test
in
stos
ret
outsl
loopne
or
jg
fidivrs
mov
aas
push
jb
jge
inc
mov
add
xchg
std
sti
icebp
push
movsb
lret
sub
add
xor
mov
cld
jp
movsl
xor
cld
xchg
fadds
outsb
addl
js
sbb
add
cmp
mov
fdivrs
push
add
pop
in
sbb
orb
cmp
pop
popa
iret
out
sbb
xlat
int3
lret
js
imul
arpl
mov
inc
add
les
scas
in
xor
mov
sub
insl
movsb
pop
mov
addr16
scas
and
fsubs
in
les
add
add
out
jle
mov
jbe
dec
mov
inc
imul
dec
rcll
loope
imul
inc
xchg
jle
fadds
mov
das
mov
cwtl
jae
adc
ljmp
and
pop
inc
mov
loopne
or
popf
divl
testb
aad
imul
mov
in
push
jl
pushf
adc
lea
push
adc
test
pop
bound
jb
sub
lret
in
das
jl
xor
xchg
ret
call
inc
and
shlb
or
xchg
mov
mov
cmpsl
jae
fistps
pop
lahf
and
test
mov
xchg
xor
test
cwtl
jp
lods
inc
outsl
fstpt
jp
push
sub
inc
cmp
mov
pushf
add
xchg
push
js
out
xchg
mov
sbb
cmpsb
mov
pop
cltd
iret
mov
inc
cltd
popf
xor
notb
ret
cli
rclb
pop
outsb
adc
dec
jp
iret
push
pop
rorb
incl
sub
aad
sub
fsub
enter
jno
mov
sub
sbb
or
popf
jg
inc
insl
arpl
pop
fstl
jmp
adc
movsl
adc
daa
test
loopne
leave
test
icebp
in
pusha
lods
xchg
mov
shlb
jmp
clc
xor
aaa
mov
inc
imul
sub
sti
jns
sti
cmp
sub
push
sahf
xchg
or
call
mov
adc
xor
outsl
jne
insb
xchg
pushl
jmp
call
inc
mov
xlat
mov
ss
repz
out
inc
into
jg
outsl
mov
pop
mov
popf
pop
xchg
loope
jno
push
dec
popf
push
inc
mov
xchg
dec
mov
pop
or
icebp
lods
sub
mov
sbb
adc
sub
add
inc
pop
dec
push
xlat
orl
mov
data16
push
xor
mov
lock
pop
inc
hlt
sbb
jmp
sbb
insl
cld
insl
push
inc
adc
nop
movb
out
jg
xchg
inc
jno
xchg
mov
or
mov
jnp
mov
rol
lods
shlb
cmp
dec
insb
pop
and
mov
xlat
xor
lahf
cwtl
int
cld
cmc
push
push
and
mov
in
adc
js
fwait
test
dec
or
or
out
push
xor
sub
pop
pop
sub
jle
cmp
sbb
test
test
dec
xor
shrl
aad
or
pop
in
jmp
xchg
in
sbb
cmpsb
in
test
cmp
mov
jle
movsb
adc
out
dec
mov
xor
inc
inc
xor
lods
xchg
add
int3
pop
addr16
jp
dec
lock
sbb
cmp
rorl
fildl
cmp
inc
je
dec
jl
mov
xchg
stc
sbb
cmpsb
mov
lret
daa
mov
dec
cmp
xchg
jmp
cwtl
jns
ret
pop
or
or
dec
insl
adc
loopne
test
je
xor
test
pop
divl
mov
add
xchg
fidivrs
push
repnz
das
imul
xchg
fwait
dec
mov
sti
adcl
out
and
push
pop
fdivr
sub
or
xchg
and
dec
xchg
jnp
mov
fwait
test
push
push
dec
popa
cwtl
mov
mov
jle
les
cmpsb
leave
mov
cmpsl
inc
mov
sub
mov
xchg
cmova
outsb
dec
ret
inc
sub
mov
out
ljmp
cltd
mov
lret
dec
xchg
mov
cli
roll
and
mov
stos
adc
pop
cli
es
add
out
daa
test
addr16
push
ss
sub
out
or
sbb
movsb
cli
sub
inc
js
subl
aaa
fstpl
mov
popa
sub
inc
imul
outsb
negl
jmp
mov
mov
in
mov
add
repnz
in
jb
jg,pn
outsb
cld
cmpsl
movsl
sbb
sbb
in
mov
bound
add
bound
adc
arpl
shll
or
aad
arpl
aaa
testb
or
inc
fidivs
jp
je
leave
cmpsb
fcoms
das
cmp
jbe
xor
adc
inc
xchg
jp
push
pop
jle
xchg
leave
adc
pop
js
aad
and
out
sub
int
fcompl
lods
pop
pop
stos
inc
xor
push
popf
jnp
jmp
aas
adc
pop
xor
loopne
popf
out
mov
pop
dec
fists
aaa
int
or
mov
sub
sbb
xor
ss
add
shlb
mov
jne
int3
subb
loop
addl
cwtl
in
mov
mov
test
test
sbb
inc
add
mov
insl
in
and
inc
mov
xchg
cmp
stos
add
dec
pop
sbb
pushf
adc
scas
test
incb
cmc
adc
scas
cwtl
loop
insb
and
mov
push
fs
push
dec
stc
xchg
xor
frstor
jl
pop
addr16
add
jl
sbb
sub
mov
movsl
pop
lret
stos
mov
fcoms
dec
into
into
negl
stc
scas
fwait
xchg
mov
lds
sbb
inc
jle
dec
imull
inc
jbe
shll
aam
push
pop
add
mov
or
mov
jno
adc
mov
stos
dec
jl
and
push
mov
push
fldl
sbb
enter
lods
dec
clc
sbb
pop
dec
pop
ds
lods
jge
sbb
or
cmp
xor
jne
daa
repnz
mov
xor
adc
int3
push
loop
sarb
ror
jmp
or
mull
out
push
mov
xor
mov
pusha
xchg
movsb
lock
out
cld
shlb
into
test
bound
shll
push
cmp
and
xadd
test
and
xchg
hlt
es
jle
ficoms
add
mov
sub
push
sub
pop
mov
jnp
dec
mov
fstpt
push
sub
loopne
add
pop
lret
insb
inc
xchg
cs
mov
xor
inc
xor
cmp
mov
ss
out
fdivrl
pop
shl
fisttps
jb
mov
and
mov
ret
in
sub
add
mov
sti
rcll
add
idiv
scas
adc
jo
sub
sti
cmpsb
adc
xchg
mov
inc
repz
out
inc
push
lea
ss
adcb
add
in
dec
sti
or
jmp
xchg
gs
lahf
mov
in
frstor
lods
cs
mov
push
movsb
adc
fnsave
fistps
frstor
cmp
jae
adc
aas
dec
es
icebp
xchg
sub
add
mov
mov
imul
cld
inc
bound
dec
sub
iret
and
xor
cmp
enter
int3
hlt
aad
dec
cs
cmpsl
inc
stc
mov
es
icebp
or
in
rolb
ljmp
dec
out
cmp
sti
push
fwait
adcb
or
pop
mov
stc
ljmp
test
and
out
mov
adc
scas
out
mov
pop
jmp
lods
aas
sbb
mov
mull
fnstcw
frstor
inc
adc
jbe
jmp
cmp
jbe
movsb
mov
leave
mov
mov
iret
cmp
inc
popa
mov
mov
mov
xchg
movsl
add
adc
xchg
xchg
fildll
scas
jno
mov
push
cmp
mov
push
insb
aas
push
pop
xchg
and
stc
mov
xor
jbe
sbb
lds
fimuls
jle
std
scas
mov
add
mov
inc
cltd
shrl
les
ret
jle
xchg
cmp
lods
push
push
leave
xor
mov
addr16
incb
pop
add
addb
into
push
xchg
xor
lahf
pusha
inc
dec
in
or
jmp
jle
cmp
mov
xchg
fimull
hlt
subb
pop
add
or
adc
sub
lods
jl
aad
addr16
lds
sub
daa
movsb
paddq
hlt
mov
mov
adc
into
jecxz
mov
pop
popf
lock
push
fcmovnu
addb
pushf
lods
fs
mov
adc
mov
dec
jle
cli
cmp
in
add
lea
or
push
scas
push
lret
and
jl
dec
es
repnz
lret
xor
lea
dec
push
mov
lret
lahf
or
outsl
icebp
enter
aam
sbb
mov
fimuls
add
fldl
stos
cmp
cmpsb
les
add
mul
xor
leave
les
and
sub
pop
mov
imul
jns
pop
xor
ja
pushf
fucom
add
add
cwtl
sub
cmpsl
lods
push
out
lahf
mov
test
hlt
sbb
xor
mov
ja
inc
ret
in
and
test
in
pushf
pop
xchg
mov
inc
jb
pop
pop
cmpl
mov
xchg
sbb
push
stos
and
mov
sahf
dec
mov
pop
rclb
mov
jl
push
cmp
dec
hlt
pop
les
add
fcmovnbe
fisubl
fidivrs
mov
repz
add
push
scas
or
gs
hlt
xchg
scas
push
push
mov
jne
orb
or
test
pop
sarb
and
sub
dec
mov
in
jle
mov
cmpsb
xchg
sahf
jne
loopne
pop
std
out
cltd
pop
enter
or
idivl
jns
popa
daa
cmp
idivl
xchg
int
ret
pop
imull
scas
and
add
outsb
ret
shl
add
cwtl
hlt
mov
scas
lods
subb
shl
imul
cmp
outsl
or
loop
int
cmp
sub
data16
popa
in
sbb
enter
jle
and
mov
in
das
adc
xlat
outsb
pusha
xlat
and
fnsave
ljmp
push
pop
pop
movsl
lods
jae
push
push
dec
pushf
cld
cmp
mov
test
or
icebp
imul
mov
push
jp
cmp
pushf
inc
stc
inc
inc
push
hlt
xor
aaa
or
test
mov
push
pusha
into
into
cmp
ja
shld
scas
inc
fadds
inc
pop
jno
hlt
push
xlat
mov
pop
and
or
pop
push
stos
inc
dec
stc
xchg
jae
cmp
jno
loope
lea
scas
cld
jge
push
lret
sub
dec
in
mov
insb
push
mov
je
cmp
mov
imul
lret
mov
mov
mov
adc
mov
test
push
inc
or
sub
inc
daa
das
pop
fwait
stc
mov
and
add
fiaddl
inc
push
push
jnp
push
stos
lds
sbb
mov
clc
adc
xor
or
mov
jmp
out
inc
outsl
jle,pn
aad
mov
popf
xchg
repz
cli
sahf
and
enter
adc
gs
xchg
jns
sbb
rcl
fisttpll
xchg
xchg
shr
imul
cli
push
ficompl
das
mov
bnd
aad
nop
mov
imul
adc
clc
fidivs
sbb
push
sub
or
aad
ljmp
mov
cmpsl
outsl
or
imul
loop
mov
xchg
push
adc
popa
push
inc
dec
shl
or
push
cmp
aad
mov
dec
int
xorb
add
int3
or
and
pop
mov
jle
mov
jl
push
cld
sub
sbb
sub
js
xchg
out
dec
dec
xlat
dec
addb
inc
mov
dec
mov
aas
and
jnp
lods
subb
cmpsl
fdivrs
clc
aad
cmp
jl
divl
mov
cmp
daa
xchg
adc
aad
test
mov
mov
cmpsb
xchg
movsb
mov
inc
ljmp
adc
or
push
cltd
push
inc
cmp
adc
mov
or
daa
fidivrs
push
lods
sub
fisubrs
mov
mov
hlt
int3
mov
cwtl
mov
add
push
or
cmpl
in
je
push
ljmp
xchg
sahf
dec
add
cmp
faddl
jmp
mov
gs
push
lods
outsb
in
into
shl
insl
jbe
jb
mov
xlat
cmpsb
pusha
and
mov
decb
mov
push
aad
add
adc
pop
scas
xchg
test
jb
mov
ja
jg
inc
andb
gs
inc
shrb
dec
push
inc
xor
lds
loop
push
cmpsl
sbb
xchg
mov
ljmp
dec
inc
pop
loopne
xor
jnp
sbb
push
push
mov
aad
xlat
mov
aad
pop
push
popf
mov
cli
mov
dec
lret
loopne
cltd
jge
xchg
lea
cmp
xchg
jmp
mov
mov
hlt
mov
test
repz
dec
adc
imul
mov
je
sub
mov
insb
mov
shlb
int
and
pop
xchg
nop
adc
cs
pushf
mov
rclb
mov
mov
sub
or
sub
inc
pop
mov
cmp
inc
push
adc
addr16
dec
or
mov
std
shrl
sbb
in
shll
mov
dec
aad
xor
mov
lcall
mov
xorl
cltd
adcl
xchg
xor
sub
fildl
loopne
xchg
push
mov
or
faddl
insl
lret
ljmp
aad
or
mov
or
xor
js
in
ljmp
cli
cltd
adc
shrl
push
sub
int
mov
std
mov
xor
jge
lods
push
popf
cmp
push
sub
ljmp
and
movsb
ds
jnp
lods
mov
jg
outsb
repz
movsl
cmp
jns
or
lock
cld
lretw
loope
pusha
inc
xchg
xchg
test
int
mov
aaa
adc
adc
dec
inc
xor
cmc
pop
outsb
and
mov
mov
and
dec
rcrb
stos
movsb
sub
lret
enter
icebp
jg
add
mov
adc
icebp
push
adc
fnsave
ja
orb
negb
mov
xchg
pop
cmc
ljmp
mov
sti
jb
xor
adc
push
push
pop
add
mov
insb
out
and
icebp
sbb
inc
mov
dec
sbb
imul
jmp
jmp
popl
add
or
cs
mov
adc
mov
inc
pop
adc
xor
and
cltd
aaa
and
jo
pusha
adc
inc
mov
stos
fisubrs
mov
jl
sub
insl
or
and
insb
sahf
pop
sbb
inc
lea
int
sbb
scas
inc
lahf
dec
and
mov
mov
and
jl
and
loopne
sbb
push
aam
faddl
or
cwtl
hlt
rcrl
or
jg
jns
imul
sub
add
push
shl
add
mov
and
stc
inc
or
jns
cmp
sbb
xor
mov
inc
pushf
call
cmp
into
add
mov
inc
sahf
inc
jecxz
xchg
cwtl
adc
cli
pop
adc
push
xor
jno
popa
cmpsb
xchg
data16
sub
lods
jg
sub
pop
movsb
xchg
mov
ds
sarb
loopw
xchg
cmp
or
repz
out
popf
dec
shrl
sub
push
shl
mov
adc
data16
ds
or
cwtl
mov
fucomp
loopne
fimull
out
adc
xchg
cmp
rolb
sti
or
lds
leave
push
ss
cltd
loope
movsl
inc
adc
mov
sbb
aad
movsl
fwait
lods
aaa
pop
movsl
neg
inc
jg
adc
arpl
cmp
xchg
and
fbld
cmp
mov
es
gs
shll
push
daa
mov
jle
fidivrl
push
out
pop
dec
jo
cmpsb
jecxz
inc
xlat
push
ss
fstpl
pop
mov
jg
out
dec
mov
scas
jb
add
pop
xchg
hlt
xor
xchg
in
insl
sbb
in
mov
in
mull
scas
jge,pt
stos
mov
imul
int
inc
xchg
sub
sbb
inc
aas
test
and
hlt
push
mov
repnz
jge
out
je
or
bnd
xchg
inc
daa
dec
xchg
popf
ficompl
pop
faddp
cwtl
jne
jne
and
cmp
and
pushf
test
push
repnz
shld
dec
inc
lret
insl
mov
pop
xchg
mov
loope
push
fistpl
call
test
pop
sub
sbb
rorw
push
push
xor
aad
mov
xor
xchg
mov
pop
push
push
dec
out
std
xchg
fstl
loop
xor
mov
in
loope
inc
or
jo
xor
inc
mov
mov
cmpb
and
pop
test
add
push
pop
inc
insb
xchg
pushl
mov
xor
in
std
and
fidivrl
dec
adc
xchg
mov
cmp
add
jmp
inc
mov
mov
push
sub
push
pusha
leave
inc
lea
cmpb
cmpsb
add
sti
int3
in
andb
mov
or
push
dec
add
jmp
lret
aad
shr
jmp
or
cmp
fcmove
aad
in
and
mov
test
pop
fnstcw
mov
test
mov
or
iret
loopne
ljmp
mov
and
xor
adc
xchg
addb
xchg
fs
in
add
int3
ds
int3
inc
rorl
mov
cmp
sub
inc
je
inc
and
leave
es
mov
aad
xchg
or
ss
adc
or
ljmp
dec
sub
andb
jl
xchg
out
iret
and
negl
popa
cmpsl
aam
xor
mov
stos
scas
cmp
pop
std
jb
cmp
push
xchg
lock
das
mov
out
fcompl
push
ja
add
push
mov
clc
nop
and
outsb
sbb
pop
add
xchg
js
xchg
dec
inc
xor
xchg
jl
dec
int3
dec
daa
or
imul
mov
cs
popa
filds
pop
out
push
inc
ret
sbb
or
push
pop
cmpsb
inc
or
setns
rclb
mov
out
int
and
pop
xchg
test
xchg
or
bound
bound
push
shrl
push
test
stos
add
inc
insl
add
add
mov
mov
adc
xor
lods
mov
mov
push
in
mov
in
or
sbb
inc
lahf
and
dec
ds
xor
repnz
sbb
shlb
cmp
xor
sar
out
mov
stc
popf
and
fwait
pushf
das
cmp
int3
jns
cltd
mov
adc
iret
jmp
loope
mov
int
scas
cmc
ljmp
pop
and
mov
lods
cmp
xlat
mov
pop
pop
in
dec
bound
jmp
xchg
repz
fisttpl
std
push
xor
incl
dec
lds
pop
jnp
xchg
inc
std
push
sub
push
mov
adc
lods
mov
mov
je
in
cs
fcoml
pusha
xchg
cltd
push
cmp
cmp
loop
std
stos
into
out
movsb
dec
je
mov
push
into
aam
loop
xchg
jns
dec
mov
xchg
mov
mov
js
pop
xor
sub
push
sbb
roll
fsts
add
lds
fwait
cmp
pop
nop
lahf
mov
xor
push
mov
into
roll
ret
mov
jp
stos
int
push
addl
xchg
lock
sbb
push
in
jae
and
fwait
inc
mov
add
push
inc
dec
aam
sub
das
add
fdivl
pop
pop
add
popf
ja
rorl
call
mov
add
aam
cmp
sub
cwtl
sub
addr16
jb
mov
push
sbb
arpl
and
add
aam
ljmp
fs
cmp
es
into
jo
or
pop
arpl
inc
les
cmp
mov
mov
add
xchg
das
rorb
fwait
sahf
dec
fcomps
adc
gs
push
or
lahf
dec
xor
repnz
cmp
icebp
mov
cli
pop
cmp
push
inc
mov
pop
pop
dec
scas
cs
pop
pop
shrl
out
push
adc
push
cmp
xor
mov
ret
dec
pop
gs
push
orb
xchg
in
push
shl
mov
inc
lods
in
shll
mov
movsb
sbb
test
jle
roll
pop
test
jecxz
mov
xchg
and
decl
lds
adc
or
add
unpckhps
jno
clc
mov
push
mov
dec
in
imul
