jge
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
dec
adc
add
add
jae
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
jg
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
add
xor
les
fwait
push
cmp
aas
sub
std
xchg
loopne
push
out
xchg
sbb
xchg
mov
pop
xchg
dec
mov
movsl
loope
icebp
scas
xchg
mov
stos
cmp
pop
shrl
cmc
jns
xchg
push
andb
inc
add
call
stos
out
sbb
jb
adc
push
or
sar
mov
shrl
xchg
dec
xor
rorb
sbb
mov
jp
dec
and
mov
mov
out
sub
std
mov
aad
inc
jmp
xchg
ret
pusha
bound
sbb
mov
adc
xor
inc
ds
xlat
pop
shrl
ja
add
mov
dec
lahf
jne
sbbb
pop
jle
push
inc
sub
imul
adc
sub
or
inc
js,pn
mov
jge
out
imul
leave
pop
jmp
pop
mov
jae
repnz
test
mov
mov
jge
sub
das
dec
jg
scas
cs
je
dec
adc
mov
mov
dec
fildll
sbb
jmp
dec
sbb
push
pop
or
mov
jbe
and
jno
ljmp
mov
dec
xor
movsl
enter
cmp
out
mov
pop
jns
xchg
lea
sub
sbbl
inc
and
mov
sub
xchg
jg
std
pop
xor
dec
mov
mov
out
addb
add
or
popf
adc
adc
mulb
and
push
loopne
imul
xor
leave
rorl
push
insb
pushf
xor
and
cmc
lds
mov
call
jg
pusha
aas
enter
int
pop
jg
insb
xor
loopne
jecxz
mul
push
ror
mov
push
jbe
sub
push
mov
inc
ja
fwait
mov
push
ja
addr16
test
dec
xor
mov
and
sub
mov
ja
rcrl
shll
mov
iret
incb
jno
mov
pop
dec
cli
sti
xor
pop
push
sbb
pop
mov
jmp
repnz
inc
stc
ja
into
rorl
ret
test
add
pusha
outsl
mov
sub
loope
call
pop
and
iret
cmpsl
jae
mov
sarl
outsl
loope
cmp
ja
xchg
add
add
repnz
jbe
in
pop
cli
test
dec
cmpsl
jno
mov
es
xchg
ljmp
scas
pop
js
leave
or
cwtl
stc
js
xchg
out
jmp
xchg
xor
xor
subb
jo
xchg
pop
jp
cmp
cmp
mov
lock
rorb
sahf
dec
mov
fadd
add
xchg
aad
mov
inc
jne
lock
and
cli
lcall
xchg
das
inc
gs
rorb
xchg
fistpll
jecxz
ljmp
inc
pop
jecxz
aad
mov
inc
push
push
movsl
call
xchg
and
mov
jg
jno
sbb
int3
lcall
bound
xor
fldz
fwait
xchg
mov
xor
inc
mov
int
or
cld
clc
std
pop
lds
ret
jo
ljmp
stos
mov
mov
mov
lcall
lods
adc
call
dec
sbb
jnp
push
mov
lea
dec
call
xor
dec
call
inc
push
inc
call
and
sub
inc
mov
and
dec
call
inc
inc
sub
add
dec
or
add
dec
dec
add
dec
lea
imul
call
inc
add
add
lea
movzbl
call
dec
add
call
mov
and
inc
movswl
imul
sub
sub
mov
pop
inc
inc
movzwl
add
inc
pop
dec
pop
or
dec
lea
mov
pop
xor
dec
or
add
mov
and
mov
inc
pop
inc
inc
pop
dec
sub
mov
add
mov
call
lea
mov
add
add
ret
mov
sub
push
dec
mov
push
lea
mov
push
dec
lea
push
mov
xor
push
inc
mov
mov
inc
add
push
lea
ret
push
imul
mov
dec
lea
dec
dec
mov
push
mov
or
push
add
call
pop
ret
jmp
mov
xchg
imul
add
imul
inc
xor
mov
inc
and
inc
inc
add
inc
dec
jne
mov
mov
lea
lea
pop
and
dec
pop
imul
inc
pop
imul
imul
xor
mov
mov
mov
mov
dec
add
sub
lea
add
ret
push
lea
movsbl
mov
sub
lea
lea
mov
mov
push
push
push
push
lea
dec
mov
push
mov
mov
dec
lea
movzbl
inc
lea
lea
sub
mov
movsbl
push
lea
add
xor
inc
dec
push
dec
add
push
and
mov
pushl
or
call
mov
add
dec
mov
mov
imul
dec
mov
add
pop
ret
lea
mov
mov
inc
inc
mov
dec
inc
or
lea
mov
inc
cmp
jb
sub
mov
imul
dec
xor
mov
mov
xor
dec
or
pop
lea
dec
test
jbe
imul
and
dec
add
mov
mov
add
xor
imul
mov
sub
inc
add
mov
mov
lea
inc
mov
inc
mov
lea
xor
sub
and
dec
mov
sub
mov
movzbl
mov
movsbl
add
movsbl
dec
and
xor
movzwl
mov
mov
mov
mov
movsbl
mov
inc
mov
mov
add
mov
add
lea
or
inc
dec
jne
mov
mov
inc
inc
mov
dec
mov
imul
imul
dec
mov
and
mov
inc
mov
dec
inc
lea
mov
mov
inc
movzwl
test
jbe
mov
mov
xor
add
mov
add
mov
or
dec
sub
mov
mov
xor
imul
sub
inc
movzbl
dec
and
mov
or
mov
and
sub
lea
mov
lea
mov
movzbl
sub
add
add
mov
add
and
mov
sub
mov
mov
dec
movzbl
inc
dec
mov
lea
inc
mov
imul
and
movzbl
mov
add
add
inc
sub
and
mov
add
movzbl
sub
jmp
push
call
dec
xor
lea
dec
xor
imul
sub
inc
lea
add
inc
mov
sub
xor
add
inc
add
add
shl
mov
add
xor
inc
mov
push
or
add
dec
call
sub
pop
movsbl
sub
dec
or
and
inc
mov
mov
cmp
je
call
call
inc
iret
dec
mov
pop
mov
ret
push
mov
and
inc
inc
mov
push
add
lea
push
inc
push
add
push
lea
xor
push
add
imul
sub
lea
mov
call
dec
push
dec
push
dec
pop
mov
sub
mov
and
lea
mov
inc
imul
inc
lea
and
dec
je
mov
dec
mov
dec
sub
imul
inc
lea
inc
mov
mov
sub
mov
mov
imul
add
movsbl
repnz
movswl
mov
add
mov
jmp
add
lea
inc
add
or
mov
mov
dec
mov
inc
add
mov
mov
dec
inc
mov
pop
pop
jmp
ret
push
movzwl
dec
and
dec
mov
sub
inc
mov
mov
mov
xor
lea
mov
lea
or
and
and
add
add
inc
or
mov
add
inc
pop
ret
sub
inc
mov
inc
mov
mov
lea
movsbl
mov
movsbl
add
mov
inc
xor
xor
imul
lea
mov
mov
inc
inc
dec
imul
lea
inc
mov
imul
cmp
jb
mov
push
lea
dec
push
xor
inc
push
mov
sub
mov
mov
mov
xor
dec
mov
xor
sub
lea
xor
inc
mov
push
inc
dec
xor
and
sub
mov
dec
mov
mov
imul
inc
movzbl
sub
inc
imul
sub
add
add
inc
add
movswl
inc
movzbl
mov
add
mov
add
mov
or
and
inc
add
lea
mov
dec
lea
add
add
inc
cmp
jb
inc
xor
xor
add
mov
jmp
fidivrs
nop
dec
and
xchg
mov
mov
jle
sub
jmp
jbe,pt
xchg
ret
or
scas
push
inc
adcb
je
mov
data16
loopne
insl
stos
pop
mov
cltd
lcall
adc
fwait
and
sub
and
stos
sar
jne
daa
inc
stc
pusha
or
and
or
movsl
xor
out
test
and
sbb
sub
dec
sub
push
cmpsl
cli
mov
icebp
mov
sub
orb
inc
ret
or
sbb
bound
inc
adcb
mov
cmp
sti
test
cltd
imul
and
iret
imul
ret
pop
lods
repz
loopne
std
mov
dec
aaa
pop
mov
push
insl
sahf
lods
cmp
test
dec
dec
in
lahf
xor
or
rol
mov
aas
xor
sti
movsb
cmp
lea
test
sub
repz
sarb
cwtl
rcrb
or
adc
jl
adc
mov
xor
inc
push
sub
dec
jbe
es
mov
push
in
pop
jnp
loopne
dec
cmp
mov
gs
xor
mov
sub
add
outsl
jl
cmp
xchg
push
data16
mov
cmpsl
test
xchg
mov
pop
inc
ds
mov
iret
mov
clc
movsb
pusha
mov
sbb
adc
sbb
shl
pop
mov
xor
mov
pushf
repnz
lea
lods
dec
aam
adc
push
xchg
mov
mov
cmp
pop
repz
mov
mov
mov
imul
out
mov
mov
jle
out
outsl
scas
and
pop
jle
dec
mov
pop
rcrl
shlb
xchg
mov
inc
dec
jno
jmp
fwait
inc
and
sub
sbb
cmpsb
les
stos
dec
jbe
adc
imul
outsb
push
ljmp
mov
xchg
aas
idivl
mov
xchg
subb
mov
sbb
lret
out
mov
je
jae
jnp
lods
fisubl
movsb
jmp
cmp
or
push
xchg
push
dec
xchg
push
out
outsl
movsl
xchg
out
inc
xchg
daa
push
adc
lret
jmp
lods
in
stc
setno
pop
adc
mov
jb
hlt
cmpb
xor
mov
cmp
adc
loop
data16
shrl
or
leave
jo
xorl
cmc
imul
lcall
or
mov
sbb
daa
aas
lods
fistps
mov
sbb
mov
mov
cmp
addr16
lods
mov
into
into
scas
jle
jns
xchg
inc
sarl
aas
daa
insb
and
lret
pop
lahf
lea
dec
mov
xchg
xor
jns
cwtl
jp
pop
ffree
xchg
outsl
outsb
xchg
adc
stos
cli
mov
xchg
mov
lret
and
push
jbe
scas
test
daa
mov
into
jg
inc
jb
pop
cmc
pusha
arpl
mov
or
mov
push
addr16
pop
loope
pop
and
nop
or
imul
movsl
pop
ret
das
and
outsl
adc
hlt
mov
xor
shrb
jl
fcmove
jno
jne
loope
pushf
cmp
sti
popa
ljmp
pop
xor
inc
aad
nop
sbb
and
add
sub
or
push
call
fdivr
cmp
pop
mov
cmp
or
xchg
mov
add
mov
lods
sahf
out
fsts
mov
iret
fwait
push
f2xm1
dec
or
daa
cmp
adc
inc
inc
jae
sbb
std
rorl
xor
xlat
sub
outsl
int
sarl
jge
sub
dec
jecxz
xchg
inc
scas
mov
jae
add
andl
push
pusha
and
imul
ja
aas
outsl
and
push
pop
push
outsl
mov
mov
out
repnz
dec
fiadds
test
clc
insb
and
into
cmp
inc
fidivrl
cltd
repnz
mov
bound
or
pop
inc
and
in
lret
mov
mov
jge
arpl
push
adc
push
out
loopne
mov
mov
nop
sbb
inc
gs
xorb
xor
mov
mov
xor
aad
aam
cltd
in
in
test
inc
stos
fstp
lret
cmpsb
push
call
lcall
fidivl
in
into
lods
pop
lahf
cld
xor
inc
rorl
inc
dec
lods
adc
mov
mov
inc
gs
fildl
test
in
push
mov
pusha
or
sub
jne
pop
xor
jge
inc
jno
ret
sbb
inc
xor
and
cmpl
sbb
stos
mov
call
add
loopne
sbb
adc
int3
clc
shrl
fistps
mov
dec
mov
mov
push
lods
movsl
stc
sub
pop
aaa
dec
mov
pop
pushf
pop
cmpl
or
insb
or
adc
sub
test
leave
add
lret
out
jns
sub
mov
je
and
sbb
lds
test
ss
cmp
mov
jge
add
pop
fisttpll
fbstp
xchg
ja
sahf
addr16
xor
hlt
sub
cmp
sbbb
imul
inc
mov
mov
stc
sub
test
jmp
lret
mov
add
pushf
sub
leave
lea
cli
mov
pop
push
addl
imul
in
loope
jbe
sbb
jbe
pop
pop
out
call
xchg
cmp
pop
divl
adc
push
jl
adcl
inc
inc
loope
add
dec
aas
cwtl
mov
jbe
jge
addl
dec
sub
add
mov
imul
jne
icebp
pop
cmpsb
leave
iret
stos
jge
or
push
int3
mov
scas
sub
xchg
jno
mov
ret
jl
fsub
pop
xor
pop
add
xor
xor
adc
aaa
movsl
rorl
in
in
ja
jo
adc
insb
fs
fsubs
pop
out
xchg
fists
addr16
imul
lods
lcall
or
dec
jae
adc
inc
cwtl
adc
sar
inc
popf
jo
adc
subl
data16
lock
jne
dec
lods
mov
xchg
jb
mov
mov
mov
xor
pop
leave
ja
mov
xchg
push
scas
enter
pop
outsb
pop
int3
pop
mov
frstor
add
inc
clc
aas
push
mov
or
addr16
mov
ret
lods
out
fs
cmp
push
pushf
aad
add
push
lds
ss
js
push
adc
daa
mov
out
data16
cmp
ret
mov
scas
xor
dec
imul
sub
pop
mov
test
mov
loopne
mov
mov
scas
push
mov
mov
in
or
imul
push
lock
andb
inc
call
xchg
lock
emms
rclb
mov
dec
mov
enter
mov
int
push
sbb
xor
clc
push
aas
add
into
push
cmp
sub
iret
test
fs
in
ja
dec
mov
imul
dec
adc
insl
js
fcomps
or
and
mov
mov
pop
mov
int3
sahf
mov
push
xchg
push
fwait
mov
and
jmp
inc
subl
sbb
or
adc
jl
add
add
lock
fisttps
and
xor
repz
dec
nop
into
cmp
loope
int
push
pop
push
fyl2x
testl
icebp
iret
es
fs
sub
cmpl
rclb
lahf
pop
mov
jle
int3
xlat
mov
shll
out
hlt
xor
je
imul
repz
mov
int3
in
mov
pusha
les
cmp
add
fiaddl
mov
mov
js
lods
arpl
sub
sarl
jns
dec
mov
and
sbb
mov
rclb
fstpl
add
das
sbbl
cmp
ds
lock
test
and
mov
and
jns
call
inc
repz
xor
pop
pop
add
and
repz
loopne
cmc
push
das
sbb
out
cmp
fistpl
lods
cmp
jl
rol
loop
cs
leave
push
add
popf
cmp
out
loopne
pop
roll
not
sub
insb
out
imul
arpl
repnz
test
in
mov
pusha
rcll
scas
shrl
jl
lcall
inc
std
pop
sbb
out
lahf
test
adc
sahf
stos
pop
cmp
out
pop
cli
xchg
mov
rcll
mov
gs
arpl
mov
cmc
push
pop
xor
in
leave
add
sahf
ud0
inc
test
in
daa
inc
neg
pop
add
ja
leave
mov
cmpsl
cmp
push
mov
and
ficoms
fcoms
push
dec
push
arpl
das
loop
dec
mov
jmp
add
loop
aaa
mov
lds
sti
and
push
mov
mov
xchg
xor
fcompl
js
mov
ljmp
adc
cli
lods
push
sub
jl
add
outsb
or
loop
xor
cmpsb
mov
push
jb
and
push
lods
test
test
pop
mov
jmp
test
xor
popa
xor
cmp
clc
add
xchg
add
fwait
mov
mov
filds
push
test
in
dec
sub
in
mov
call
stos
retw
cs
xchg
sbb
gs
and
xchg
inc
mov
mov
pop
and
push
mov
inc
rcrl
outsl
push
jmp
icebp
pop
mov
fildll
push
xor
rcll
subb
cmp
adc
jnp
mov
ret
adc
jmp
xchg
pop
fcmovnbe
cltd
xchg
ja
jnp
push
push
loopne
add
lods
add
jle
jl
fistl
clc
sbb
je
ficompl
enter
cs
or
and
inc
pop
inc
cmp
std
xor
int
dec
xchg
popf
mov
bound
sub
lock
sbb
or
add
fimull
js
and
mov
xchg
divl
roll
or
outsl
mov
into
pop
push
stos
pop
and
inc
xchg
pusha
xchg
mov
cmp
push
mov
push
sub
push
xor
push
imul
aam
mov
out
in
adc
jmp
les
sti
xor
push
out
mov
add
xchg
mov
loope
sub
ja
cmc
fdivrp
cld
push
and
cmp
sbb
outsl
xchg
hlt
jns
push
lahf
push
jnp
mov
dec
inc
mov
je
jg
cmp
add
shrb
mov
push
mov
and
jmp
jae
ja
add
mov
adcl
iret
rcrb
pop
scas
movsl
rorl
movsb
movsl
mov
and
xchg
inc
or
ficoml
or
xchg
jmp
mov
xchg
insb
cld
xor
fmuls
aas
mov
jmp
dec
xchg
pop
stos
lahf
mov
xor
jnp
in
ljmp
out
push
outsb
pushf
pop
aaa
movsb
stos
rol
idivb
xor
stc
mov
fistl
dec
mov
std
dec
jb
nop
rcrb
jmp
testb
mov
stc
js,pn
jg
adc
and
mov
int
jns
mov
xchg
sar
pop
out
iret
xor
adc
das
pop
ja
nop
inc
cld
adc
stos
ret
sub
xchg
scas
insb
mov
mov
adcl
aam
add
sti
push
in
dec
loopne
mov
pushf
repnz
xchg
xchg
js
cmp
xchg
xchg
sbb
and
mov
or
cli
mov
push
pop
ljmp
aam
mov
sbb
cwtl
push
xor
add
test
pop
sbb
adc
xchg
xchg
out
out
mov
cld
aaa
test
stc
idiv
pop
xor
mov
movb
push
movsl
in
push
fs
xlat
or
ret
inc
mov
or
in
mov
xchg
inc
push
mov
fmuls
dec
sbb
fildl
xlat
andl
jbe
push
push
lahf
movsb
imul
sub
inc
mov
pop
mov
mov
int3
mov
push
dec
xchg
jne
stc
call
add
leave
mov
push
testl
roll
pop
xor
jb
inc
shlb
push
std
out
pop
add
test
out
adc
stc
pop
aam
shlb
shl
test
jl
inc
fcoml
push
in
push
jo
roll
lea
test
cmp
jae
cmp
inc
jecxz
insl
jge
fldenv
cld
imul
sub
ror
mov
dec
cmpsb
or
mov
pop
mov
imul
cmc
mov
mov
aaa
sbb
pop
stos
pop
sbb
lahf
popf
lret
mov
sbbl
ret
outsb
shll
xor
mov
cld
cmp
lods
inc
int
das
inc
insl
mov
dec
mov
xchg
aaa
sbb
cltd
jmp
cld
dec
push
inc
add
add
xchg
cwtl
stc
push
jns
or
sub
lock
enter
push
and
into
mov
sbb
hlt
dec
jb
mov
xchg
mov
rcrl
push
sub
inc
adc
xor
jb
roll
inc
jno
push
xor
mov
pushf
jo
in
or
stos
mov
js
adc
stos
jbe
testb
mov
or
xor
loope
mov
xchg
fcomp
lea
or
ret
mov
notl
sbb
pop
mov
inc
repnz
outsl
mov
mov
out
dec
cmp
in
cmp
jle
sarb
out
lahf
fdiv
xor
repz
push
scas
nop
test
pop
out
cmp
mov
pop
stos
sub
fists
stos
sub
clc
leave
out
cmp
test
sbb
mov
fucomp
lahf
mov
sub
loop
test
test
out
rclb
mov
and
xor
fwait
adc
outsb
fxch
popa
jmp
sub
shll
insl
add
jl
call
sbb
test
sbb
pop
popf
sarb
xor
pop
ljmp
mov
aam
push
outsl
and
dec
sub
scas
out
lods
add
insb
adc
xor
aas
pop
bound
je
mov
pop
mov
push
pop
sahf
in
shr
lret
jae
pop
ds
add
test
and
mov
mov
shl
lret
test
lods
rolb
and
fistpl
push
rorb
sub
adc
aas
aad
push
push
mov
mov
test
sahf
jp
icebp
das
flds
test
test
push
pop
pusha
dec
push
enter
sbb
add
fucomp
outsb
rcr
pop
push
and
das
xor
mov
scas
clc
dec
dec
in
sahf
or
push
jbe
cmpsb
mov
or
adc
test
subl
andb
add
ret
cmp
les
les
add
sub
mov
dec
pop
test
lods
push
pop
pop
xchg
loop
jns
mov
mov
lea
and
dec
jge
sub
das
lret
ret
scas
add
adc
fdivrs
sub
jg
jb
xchg
mov
xchg
mov
jnp
cmpl
or
test
test
jge
aaa
push
and
call
vphaddbd
sahf
lahf
and
mov
in
aad
fcmovu
sub
cs
xor
mov
jb
in
jge
adcl
fmull
nop
movsb
leave
push
push
fs
xchg
jnp
mov
pop
mov
test
lods
les
dec
les
iret
roll
in
pushf
adc
and
jecxz
bound
aas
fldl2t
or
xchg
dec
add
xchg
inc
out
lods
push
mov
sub
sub
scas
pop
fwait
push
sub
aas
jo
cltd
aam
dec
dec
xchg
push
pop
pop
pop
fadd
jbe
sub
dec
push
cmp
cmpsb
jb
sarb
outsb
mov
inc
jmp
lcall
xchg
popl
jecxz
dec
outsl
pop
out
jno
xor
stos
leave
ljmp
std
mov
inc
enter
sub
mov
pop
fs
mov
stos
test
or
mov
cmpsl
hlt
testb
fwait
imul
push
test
inc
push
shrb
rcrb
cmp
dec
mov
inc
jle
call
fdivl
sub
xor
mov
movsb
mov
mov
push
lods
inc
loopne
cmpsl
movsl
jl
push
add
jae
cmp
aaa
cmp
inc
test
add
rorb
int3
jl
aas
dec
ret
jnp
out
mov
cmp
popf
or
inc
jmp
aad
mov
jno
pop
xorl
dec
sub
push
daa
pop
mov
shrl
add
dec
loopne
mov
pop
lods
es
dec
fcmovnb
push
jl
nop
adc
call
test
dec
sbb
addr16
pop
or
sbb
dec
fidivs
sub
cmp
adc
pop
mov
inc
sar
cmp
xor
pop
fst
xlat
push
iret
imul
jle
nop
cmpsb
mov
lea
pop
mov
outsl
outsl
sbb
test
and
dec
insl
adc
mov
push
cmp
int
push
jmp
movsb
andl
test
pop
cmpsb
call
jnp
iret
icebp
jp
cmp
movsb
mov
lds
insb
cli
pop
loopne
js
dec
out
int
inc
jle
cmc
mov
sarl
mov
pop
repz
addr16
insl
mov
mov
in
or
inc
movsl
sbbb
inc
push
xchg
pop
mov
or
add
sub
stos
lahf
dec
inc
xchg
cmp
push
imul
and
sbb
shr
int
fs
cmp
cmp
push
aas
cmpsb
mov
push
imul
hlt
out
and
or
leave
das
pop
aam
mov
in
pop
roll
inc
mov
pusha
pop
inc
out
fisubl
pop
arpl
push
or
mov
imul
ret
add
jo
imul
sbb
inc
xchg
imul
lcall
and
cmc
test
add
sub
sbb
rcll
stos
adc
dec
notl
pop
sbb
add
adc
sub
imul
mov
cmpsb
leave
add
add
add
and
add
xchg
test
jae
scas
jae
loopne
inc
gs
data16
out
ss
inc
mov
inc
test
push
lret
fisubrl
dec
and
xchg
icebp
mulb
jb
dec
popf
popf
push
mov
fnstsw
push
xchg
push
add
mov
add
imul
rcl
add
adc
sbb
push
leave
add
mov
and
loope
adc
ja
lock
sbbl
sub
cmp
mov
pop
xchg
mov
imul
dec
aaa
aam
fiaddl
test
imul
sbbb
inc
and
xorl
jge
inc
fstl
test
mov
adc
adcb
cltd
andb
mov
mov
jmp
insl
out
dec
cmpsb
and
pop
sub
sbbb
mov
mov
xchg
jbe
int
popa
movb
jno
fdivrs
jl
mov
xchg
iret
int
test
pop
nop
xchg
dec
jns
dec
mov
cmpsb
mov
mov
add
adc
jnp
xchg
jecxz
stos
sbb
cli
jl
pop
sbb
jo
xchg
sub
dec
imul
ja
test
test
fdiv
jb
xor
pop
in
repnz
ds
clc
pusha
out
in
mov
lcall
jb
rcrb
jmp
cmp
mov
js
out
rorb
adc
scas
add
xchg
lret
je
add
das
dec
xchg
aad
pop
movsl
jne
sub
mov
cmp
xor
cld
pushf
mov
sbbl
addr16
mov
fidivrl
fcomi
adc
jp
xor
dec
push
push
adc
lcall
dec
mov
outsb
repz
mov
mov
mov
inc
jo
fs
loop
out
stos
adc
or
lahf
loopne
push
mov
sub
mov
mov
cmp
inc
jae
je
loopne
cltd
loope
loope
sub
inc
xchg
mov
cwtl
inc
adc
clc
test
inc
adc
xor
sahf
and
inc
nop
mov
loopne
mov
push
cmpsb
test
ret
or
scas
hlt
lea
jb
xor
cmp
add
outsl
pushf
dec
mov
shrl
inc
nop
pusha
imul
rclb
cmpsl
xchg
pop
push
loopne
dec
xchg
sti
arpl
mov
push
pop
fistpl
mov
sbb
push
jnp
mov
dec
loope
into
adc
mov
out
mov
xchg
das
scas
cmp
push
jae
mov
mov
or
repnz
xchg
and
je
mov
xchg
movsl
jp
js
dec
test
daa
fwait
dec
or
lcall
loop
push
mov
add
mov
loopne
mov
insb
test
orb
sar
adc
jns
aas
or
popf
xchg
jns
pop
repz
cmp
movsl
sub
mov
add
push
fs
push
orb
lcall
mov
rorl
inc
jno
dec
je
adc
push
gs
push
repnz
or
leave
lret
test
fucom
sub
mov
and
fnstcw
mov
add
and
mov
push
js
jne
mov
xchg
fsubrp
or
pop
aam
gs
lret
lret
test
sub
jmp
and
lock
mov
icebp
cld
inc
mov
adc
adc
fcos
adc
mov
push
leave
sbb
ljmp
mov
sarb
mov
fsub
test
and
hlt
inc
sarb
adc
mov
lods
repnz
scas
add
leave
xor
xchg
insb
inc
and
jbe
and
xchg
push
mov
dec
jbe
push
xor
pop
adc
in
add
mov
popa
stos
jns
xchg
stos
mov
jno
out
js
mov
cmp
xchg
rcl
scas
popf
outsl
inc
mov
mov
ret
aad
xchg
pop
add
in
fchs
jb
bound
cmp
mov
repnz
mov
cmp
mov
jmp
mov
add
out
test
jecxz
xchg
out
imul
pusha
and
mov
loopne
in
pop
sbb
or
push
jle
push
jbe
cmp
cmpsb
mov
mov
rcll
push
out
jae
imul
gs
xchg
std
stos
jp
adc
pushf
pop
mov
inc
lock
push
div
sbb
cmp
sbb
add
mov
rclb
mov
add
sti
std
mov
push
xorb
xor
rorb
les
sub
pop
enter
mov
dec
lock
arpl
in
cmpsl
mov
int
lret
nop
xchg
in
popf
mov
pop
jns
mov
inc
lahf
pushf
icebp
imul
ds
xchg
jecxz
fldt
das
cmp
add
movsl
sub
push
jo
xor
add
cmpsb
ja
cmp
out
cmpsb
mov
iret
mov
and
std
and
loop
bound
xchg
fisttpll
movsb
rolb
incl
dec
lcall
popa
andb
xchg
sbb
sbb
dec
lahf
jnp
push
insb
fsubs
inc
mov
cmp
sub
cmp
rorl
cmp
xchg
push
cwtl
add
add
shl
mov
les
je
adc
fcoml
pop
fisttps
mov
orl
popw
inc
mov
cld
mov
pushf
jp
imul
sbb
pop
xchg
scas
fstpl
arpl
mov
repz
and
test
ss
neg
xor
and
and
lds
ds
xor
je
mov
leave
pop
xor
adc
cltd
add
jge
cmpsl
fwait
sub
das
cmp
out
mov
int
outsl
cmc
xchg
jle
test
rcll
icebp
call
adc
test
sbb
cmc
push
adc
sbb
dec
sarb
and
pop
add
scas
and
ret
xchg
loope,pn
mov
inc
in
or
mov
mov
nop
test
push
enter
adc
xor
mov
nop
adc
sbb
in
fxch
loopne
pop
cmc
cld
in
add
jl
sbb
xchg
nop
jle
mov
cmp
movsb
inc
jo
adc
mov
loopne
fbstp
ljmp
push
pushf
push
or
push
and
jecxz
int
int3
mov
xchg
dec
jbe
add
mov
mov
popa
icebp
mov
daa
clc
push
xchg
adc
mov
movl
xchg
mov
xchg
out
cmp
repnz
jne
movsl
in
aam
mov
pop
mov
gs
add
adc
mov
dec
inc
aad
dec
mov
bound
sbb
jbe
mov
pop
pop
inc
stos
or
movsb
out
adc
mov
or
test
add
insb
cs
mov
mov
or
out
inc
xor
add
push
mov
daa
divps
mov
clc
mov
add
mov
adc
sbb
jo
push
addr16
clc
sub
xor
adc
and
fbstp
and
stos
leave
cmp
push
xor
stos
mov
inc
fbstp
sbb
or
das
sub
fwait
lds
jmp
fisubrs
mov
dec
in
dec
ja
pop
jg
sub
jmp
adc
pop
dec
push
adc
mov
push
sbb
jge
mov
inc
mov
lds
into
popa
sub
outsb
arpl
dec
mov
xchg
mov
dec
shrl
add
push
pop
or
test
into
mov
fsubs
gs
arpl
rcll
xor
stos
and
rcl
leave
inc
pop
dec
adc
jecxz
sub
sub
and
sbb
adc
idiv
adc
mov
or
ljmp
cli
jbe
cmp
push
clc
mov
pop
add
adc
add
and
imulb
pop
or
sbb
pushf
sbb
out
mov
mov
sbb
xor
or
and
aam
ljmp
mov
xor
leave
mov
pushf
icebp
jb
aaa
push
lock
es
pop
daa
call
xchg
fisttpll
adc
dec
call
dec
mov
dec
rcll
sbb
mov
cmp
fbstp
and
xchg
repz
push
enter
or
and
cli
inc
aam
ss
or
test
xchg
jp
rcrb
jmp
clc
push
mov
mov
dec
pop
or
push
dec
mov
add
xchg
jmp
out
imul
cmp
pop
ffree
scas
mov
outsb
nop
fs
sbb
adc
push
cld
or
jge
ljmp
addr16
loopne
stos
and
ljmp
fcom
jns
mov
jnp
pop
jb
gs
fiadds
imul
add
loop
aam
lods
enter
dec
add
xchg
dec
mov
popa
add
xchg
sbb
and
jmp
mov
dec
cmp
rcll
inc
iret
outsb
into
aas
xchg
push
adc
daa
pop
test
icebp
fsubrl
dec
test
push
xchg
push
mov
inc
add
stos
pop
in
pusha
or
push
jbe
push
jmp
jnp
popa
push
js
pop
cmpb
setns
test
loopne
and
scas
push
dec
mov
cwtl
push
jbe
fst
arpl
dec
mov
ret
push
in
cmp
scas
mov
and
add
out
outsb
das
mov
dec
movl
sti
mov
daa
outsl
fistpl
add
fdivs
inc
lods
fdivl
push
cmpsl
test
aaa
mov
outsb
popa
inc
add
adc
xor
stos
mov
nop
dec
mov
or
cmc
add
jg
bound
sti
imul
jmp
pushf
sbb
mov
adc
aaa
js
push
test
insb
out
mov
mov
out
xchg
lods
push
lock
push
movsb
lods
sbb
imul
addr16
mov
jmp
repnz
xchg
les
lods
inc
sub
lods
push
ret
dec
jbe
repz
stos
idivl
cmp
push
xchg
xchg
pop
popf
jb
jo
mov
xlat
test
nop
rorl
cwtl
decb
loope
mov
test
jl
push
repnz
push
mov
inc
cmpb
rcrl
clc
push
cmp
and
mov
mov
mov
dec
inc
xor
sub
sub
das
int3
scas
in
pop
mov
xor
adc
push
mov
outsb
sub
or
xor
fmull
and
ds
cmpl
jmp
cmp
or
pcmpeqd
push
mov
cmp
push
addr16
pop
cmp
icebp
xchg
cld
insl
fisubl
idiv
testl
popa
jecxz
das
sub
int
insb
test
and
stos
mov
mov
and
es
out
out
and
lcall
loope
bound
cmpsb
sub
and
insb
inc
pop
cmp
jge
lds
out
push
stc
push
dec
inc
xchg
aad
jae
sub
jne
xlat
xchg
clc
inc
je
mov
add
jmp
out
sbb
mov
ja
pusha
add
jmp
push
push
ror
aad
cs
cmp
jo
inc
repnz
pop
cmc
div
psllq
sub
ffreep
subb
jne
sub
fsubs
outsb
sub
stc
cmpsb
pop
mov
dec
es
sub
outsb
pusha
sub
and
iret
mov
and
mov
stc
pop
dec
pop
mov
mov
xchg
mov
or
mov
push
movsb
mov
mov
cmp
les
inc
jns
mulb
pop
jne
mov
push
lods
dec
or
mov
jo
lds
movsb
dec
lret
xchg
dec
pop
mov
aaa
mov
mov
popa
cmp
arpl
xlat
xor
lods
or
sub
pop
or
call
xchg
pop
in
mov
fxch
fisubl
icebp
leave
roll
aad
mov
mov
iret
addr16
xchg
das
insl
mov
sbb
imul
xorb
cmp
andb
mov
rcr
jnp
outsb
sbb
ret
test
pusha
lret
push
insb
ds
pop
addl
adc
or
filds
and
shl
ss
jg
cli
push
lahf
cwtl
stos
jne
dec
dec
jp
push
and
cmp
in
xor
jg
xchg
andl
lods
adc
das
adc
inc
jmp
aam
xchg
fistps
popf
dec
xor
mov
jbe
mov
imulb
add
daa
and
cld
sub
outsb
jo
lods
sahf
insb
adc
movsb
xchg
sub
and
jns
sub
movsb
mov
or
push
pusha
ds
lea
xchg
js
inc
inc
pop
cmp
stos
fistpl
xchg
adc
in
in
cmpsl
or
or
cld
shll
cmc
mov
pop
ficomps
dec
sbb
jmp
xchg
sub
xor
xor
sub
call
int3
mov
std
aam
je
jae
clc
mov
sub
push
and
out
adc
jo
fimull
mov
dec
adc
fistl
fldln2
mov
aam
scas
test
jecxz
add
imul
xchg
repz
fsts
mov
in
jb
mov
add
mov
flds
leave
push
jl
pop
aad
stos
aaa
pop
out
xor
aad
je
mov
cmp
fiadds
lahf
push
add
shr
es
aaa
in
jge
xchg
push
je
or
outsl
arpl
fs
repnz
int
lahf
into
gs
adc
and
jl
test
stos
stos
push
out
mov
add
pop
inc
mov
pop
mov
daa
xchg
lret
dec
pop
add
pop
jg
ds
notb
punpcklwd
pushf
and
lcall
jne
dec
ret
je
and
cmpsl
sub
repz
test
lock
mov
push
aaa
sub
lds
sub
mov
aad
xchg
cmpsb
imul
lret
sub
sub
or
jecxz
stos
std
loopne
in
push
das
cmpsb
outsb
std
pop
xchg
loopne
lock
dec
inc
lea
inc
into
fisubs
sub
cmpsb
sbb
sub
mov
scas
psubd
repz
or
mov
pop
and
stos
and
popf
loope
sub
xchg
sbb
int3
ss
jns
jo
cmp
xchg
sbb
mov
fcompl
mov
shrl
mov
lcall
xorb
sbbl
les
shl
dec
fidivl
dec
pop
pushf
or
popa
fistps
lahf
nop
fisubrl
jo
call
andl
jmp
imul
mov
inc
mov
pop
cmp
cmp
imul
push
xchg
xor
cmpsl
lret
and
or
iret
cmp
loopne
and
enter
fyl2x
mov
jae
push
jmp
fnstsw
cmp
repz
aas
push
fisttpl
push
inc
push
fcmovne
inc
or
lea
sbb
sub
aad
lcall
in
divb
pop
push
decl
add
movsb
and
lods
dec
sbb
xchg
pop
data16
shll
test
test
xchg
push
stc
jno
cmp
sbb
fadd
out
or
movsb
jp
push
xor
sub
rol
and
rcll
dec
mov
loopne
je
lea
shlb
test
adc
pushl
rol
mov
sub
push
pop
insl
movsb
xchg
test
popa
das
mov
cltd
sbb
cmp
stos
xchg
repnz
mov
incb
sbb
inc
repz
rcrb
or
cs
sub
aaa
decb
rolb
pushf
sub
fwait
dec
sbb
outsb
jb
popl
cld
pop
cmpsb
add
or
cmp
mov
sbb
addb
xchg
dec
cmp
data16
push
xor
clc
mov
cmpsb
push
cmc
das
mov
xchg
inc
pop
adc
add
daa
icebp
jo
mov
ret
pop
xor
fisubl
and
int
insb
mov
xorl
fstp
xchg
mov
xor
inc
and
repz
out
popa
loope
cmp
xchg
pop
ds
sub
xorb
mov
fldl
out
add
insl
cmp
adc
out
push
dec
jo
arpl
aam
mov
jb
rol
sbb
or
xor
test
mov
sahf
adc
xor
jmp
mov
mov
or
cltd
sbb
nop
bnd
shrl
in
pop
test
aaa
cmp
out
mov
add
shrl
scas
lret
loopne
loopne
iret
inc
adc
or
in
jmp
loopne
pop
fcomps
jmp
xor
clc
imul
out
fadds
jne
xorl
mov
mov
cmp
jle
cwtl
pop
into
out
dec
movsb
cmp
andb
add
mov
push
or
leave
cmc
scas
hlt
movsl
xor
xor
cmp
addb
nop
gs
pop
mov
mov
cmpsl
testb
mov
std
jb
sub
sahf
in
cmp
xor
aaa
pop
loope
inc
out
insb
jg
inc
inc
les
sti
jecxz
outsl
enter
dec
pop
ret
insl
mov
xorb
fs
ds
inc
movsb
sbb
lods
xor
mov
pop
dec
jno
add
in
adc
mov
cmp
popa
mov
cmp
stos
int3
and
rcll
sarl
xchg
dec
cli
in
mov
pop
aad
movsb
mov
das
xor
fistl
pop
scas
mov
cmpsl
call
popa
jg
sub
cli
bnd
mov
and
cmp
rcrb
imul
lock
or
in
inc
cmc
daa
dec
and
rol
fbld
cmpb
mov
pop
push
fcmovnu
dec
pushf
add
in
call
es
mov
pop
pushl
add
data16
xchg
fs
mov
movsb
or
adc
cld
push
daa
mov
xorl
sub
femms
jmp
cltd
scas
mov
idivb
nop
jecxz
jo
jecxz
add
xor
imul
movsb
push
adc
jo
popf
mov
sub
inc
in
popa
incb
mov
adc
xor
add
js
mov
out
fcmove
mov
popa
fwait
push
pop
xor
xchg
shll
movsb
lds
imul
cmp
cmpsb
dec
sub
out
testb
push
popf
int
xchg
movups
daa
inc
aam
push
in
or
push
sbb
pop
adc
sub
push
push
mov
lea
jmp
aam
mov
lcall
sub
pop
pop
std
and
fs
rorb
dec
ss
sub
jmp
pop
xchg
fwait
sub
fadds
push
les
inc
clc
ret
out
sahf
ljmp
cmpsl
xchg
dec
adc
add
mov
sti
insb
mov
aaa
inc
mov
fisubrl
sti
cmp
in
pop
push
dec
popf
mov
cmp
sub
outsb
bound
bsf
test
mov
pop
sub
testl
cmp
lds
int
mov
test
mov
sub
lret
or
push
ret
scas
daa
jle,pn
mov
js
adc
int3
dec
xchg
pop
mov
push
mov
repz
mov
addr16
cld
and
fwait
imul
fldl
mov
push
test
adc
mov
mov
inc
cmp
xchg
cmp
outsb
pop
std
call
sbb
and
pushf
mov
sarl
mov
jne
push
jmp
sub
cmp
pushf
sub
jle
xchg
mov
or
das
jle
cmp
mulb
pop
or
xor
in
cmpsb
xlat
dec
movsb
adc
fwait
in
mov
mov
cmp
adc
pop
cmp
and
test
imul
sub
filds
jecxz
fwait
dec
call
push
testb
dec
jns
sub
xlat
inc
inc
mov
adc
xchg
adc
int3
cmp
lret
lds
and
xchg
or
hlt
in
cmp
mov
and
lods
adc
mov
out
push
or
dec
or
jb
loop
scas
stos
fcompl
and
push
jmp
pop
add
mov
xor
mov
adc
mov
xor
pop
fcompl
adc
push
add
mov
imul
mov
jne
inc
jb
pop
push
sti
in
int3
iret
scas
sbb
sub
int
inc
je
cmp
xchg
xor
jns
push
mov
xor
imul
or
inc
cmp
shll
inc
dec
sub
pop
inc
or
pop
jecxz
in
repnz
push
cmpl
movsb
repz
roll
dec
dec
inc
out
sbb
pop
mov
dec
daa
in
lods
lods
or
push
int3
or
cmp
les
lock
or
inc
push
and
add
movsl
jno
loopne
out
in
pop
xor
fnsave
mov
fsubrp
sub
mov
imul
gs
insb
aad
push
int3
ss
inc
mov
mov
and
add
scas
jg
call
jl
ja
push
cmpsb
mov
loopne
fistpl
cld
popf
addr16
jae
push
adc
cmc
jb
out
stc
nop
lds
out
xchg
cli
in
xchg
insb
xchg
mov
adc
aaa
std
mov
jns
and
pop
push
pop
adc
sub
jbe
hlt
pop
dec
mov
cmp
pop
sahf
lahf
jns
mov
pusha
je
push
fldl
sub
fidivrs
sbb
sub
ja
cwtl
push
cmp
inc
pusha
bound
sbb
mov
pop
cmc
xor
lea
push
aad
mov
jns
dec
pop
lahf
push
dec
enter
sbb
pop
aad
cli
fstl
xor
inc
fwait
into
push
xor
jno
nop
sub
pop
cmp
and
das
out
inc
movsb
add
jno
push
ret
inc
or
imul
inc
pop
cmc
sarl
jle
rorb
jl
add
inc
loopne
outsb
adc
fnstenv
jb
dec
and
sahf
movsb
xchg
or
outsl
add
pop
push
in
push
enter
fistps
lods
das
adc
js
mov
hlt
and
cmp
xor
cmp
js
daa
sbb
loope
xor
mov
mov
xchg
lods
dec
dec
ret
mov
das
cmp
sbbl
lret
test
aam
clc
push
push
aas
repz
insl
or
add
sub
add
push
xor
mov
jb
add
sbb
in
rorl
imul
jecxz
in
cmp
mov
jnp
jle
fists
push
cs
mov
das
add
inc
ret
cli
mov
jp
in
cli
shr
scas
cmp
ja
cwtl
ret
stos
sbb
pushf
mov
imul
sub
test
fisubrs
mov
push
push
push
imul
xchg
out
cwtl
lret
push
pop
pop
xlat
aaa
mov
mov
rcrl
nop
test
sbb
aam
cmp
fwait
ret
ffreep
ljmp
and
iret
ret
es
xor
sarl
pop
mov
fxch
mov
in
jg
push
inc
dec
ffree
mov
sub
mov
das
in
into
dec
fnsave
ret
mov
xor
loope
mov
push
and
clc
jg
push
je
movsb
fldcw
std
or
adc
adc
adc
stos
sub
movl
mov
in
mov
xor
push
out
outsb
xor
inc
sti
ret
call
sub
test
jg
shll
mov
pop
dec
lock
xor
jge
inc
jbe
test
mov
mov
pop
loope
inc
or
ret
cmp
into
cwtl
or
xor
xor
push
adc
out
or
mov
repnz
add
mov
mov
cmpsb
adc
jle
xor
mov
lock
cwtl
cmp
pop
scas
inc
jbe
aas
xchg
test
fcoms
dec
inc
mov
mov
fsqrt
mov
pop
inc
cmp
and
scas
imul
out
and
mov
dec
out
lret
bound
popf
sub
testl
imul
stos
lock
je
and
jb
aad
mov
stos
test
bnd
icebp
push
mov
sub
fsts
mov
cwtl
and
fildl
test
and
notb
in
jge
and
dec
popa
push
cmp
andl
push
cwtl
add
hlt
jp
pop
imul
mov
sbb
xor
pop
sub
fsubl
es
cmc
lahf
stc
je
xchg
adc
movsl
xlat
dec
add
sbb
movsl
mov
adc
mov
les
dec
mov
push
daa
and
dec
inc
inc
cmp
mov
fildll
leave
pop
lods
and
outsl
nop
fldl
gs
mov
add
sub
push
xor
jnp
mov
mov
cmp
inc
or
pushl
aaa
push
cbtw
stos
adc
cmp
jmp
mov
sbb
cmpsb
cmp
mov
js
jg
ja
pop
sbb
or
in
cmp
divl
fdecstp
pop
cwtl
scas
aam
rcrb
jmp
testl
adc
ss
add
dec
fistl
adc
inc
repz
and
lock
pushf
push
sub
xor
bound
in
xchg
insl
out
mov
out
divl
cmpsb
mov
cs
cli
pusha
pop
sbb
lds
jbe
movsl
inc
inc
arpl
ljmp
rcr
push
shlb
cmp
fwait
and
div
mov
push
mov
cmp
scas
or
mov
jmp
push
mov
xchg
mov
dec
enter
loopne
xorl
mov
or
push
aas
mov
dec
das
leave
test
aad
lods
mov
jmp
addr16
dec
push
and
arpl
ret
popf
sub
clc
stos
add
out
or
scas
es
ficompl
inc
mov
das
shrb
outsb
cmp
les
xchg
scas
add
push
mov
js
cli
inc
mov
fwait
dec
inc
mov
mov
push
arpl
rolb
je
add
lods
pop
sub
pop
sub
out
sbb
xchg
dec
jp
mov
iret
mov
push
xchg
fdivr
dec
mov
mov
and
xor
cmp
pop
jno
mov
je
cmp
push
and
jne
outsb
cmpsl
sbb
outsb
lahf
push
and
insl
movsl
adc
jbe
data16
push
xchg
dec
jmp
mov
rcll
je
jge
addr16
addl
sub
in
xchg
add
mov
jl
push
cmp
adc
jp
loop
pop
call
mov
mov
imul
push
cwtl
data16
je
gs
pop
xor
in
pop
adc
mov
push
sub
dec
push
rclb
cmp
xor
cmp
lods
rorl
mov
adc
pop
sub
adc
iret
popf
incb
fists
and
and
mov
aas
daa
mov
push
cmp
shll
mov
push
in
addr16
and
mov
fdivrs
xchg
xchg
mov
adc
mov
add
adc
cs
fdivs
orl
std
mov
xlat
adc
inc
sbb
adc
cmp
dec
and
mov
out
stos
jns
sbb
pop
lock
push
adc
icebp
xor
adc
jmp
pop
lds
pop
fistpl
mov
sbb
jmp
sub
test
push
cs
xchg
and
cmp
mov
pop
cmc
hlt
mov
jg
rcrb
jnp
outsb
sar
pop
mov
jo
pop
dec
mov
clc
mov
rcr
pop
sbb
push
mov
inc
in
pop
xchg
xchg
pop
sbb
sbb
sbb
pop
xchg
shrl
jp
dec
add
stos
loopne
frstpm(287
cmp
jecxz
cltd
addb
es
fwait
xor
cltd
es
or
adc
in
jo
jmp
mov
and
stc
xchg
nop
int
loope
addr16
test
jmp
xorl
inc
push
lds
test
mov
jo
aad
add
sbb
cmp
add
xor
push
lods
outsl
and
pop
xchg
xor
mov
sub
repnz
lret
sbb
cmpsl
sbb
cmp
sub
dec
ret
cmpsb
pop
mov
or
ret
shlb
lock
inc
cmc
push
xor
xor
or
aad
or
fimuls
or
sbb
xchg
pop
mov
xor
adc
in
mov
out
xchg
shll
xchg
rcrb
inc
cld
popf
sbb
mov
dec
jne
mov
stc
test
sbb
mov
inc
add
mov
mov
xchg
dec
sbb
mov
and
rol
stc
sub
popf
lret
push
xor
hlt
fsub
push
mov
mov
push
in
jmp
lahf
icebp
aaa
jo
sub
cmp
sub
iret
addr16
popa
fdivs
dec
mov
xchg
testb
jb
rclb
insl
jecxz
outsl
call
and
jl
inc
or
cld
pop
and
repnz
and
out
xor
mov
frndint
test
jg
fs
sub
xor
cmp
cltd
mov
mov
sbb
in
aas
das
ret
inc
out
pop
cmpsl
dec
cmp
sbb
sbb
aaa
mov
fsubrl
add
push
cld
sbb
sahf
xchg
adc
sti
bound
out
lods
add
rcrl
lods
add
int3
bound
push
xor
dec
dec
out
or
jnp
xor
inc
sbb
push
dec
lret
jno
lcall
pop
sbb
ljmp
ljmp
xchg
insb
cltd
sbb
fs
stc
and
xlat
cltd
xlat
add
loop
cld
rorb
jb
in
dec
pop
sub
sub
mov
jp
and
jns
bound
pop
out
pop
cmp
xchg
outsl
xchg
or
fidivrl
adc
fcmovnb
inc
hlt
jp
and
clc
arpl
add
jo
mov
add
push
movsb
mov
imul
mov
jle
in
push
inc
insb
ret
inc
push
xor
out
push
pop
mov
loopne
test
xor
gs
shll
rolb
add
daa
into
jae
in
out
in
imul
rcll
hlt
and
sub
fs
push
mov
lods
pop
es
jle
cmc
xor
or
test
rorl
dec
push
mov
iret
test
xchg
add
repz
xchg
insl
dec
xchg
dec
pop
push
mov
popa
adc
pop
push
xchg
jl
incl
sub
fadd
outsl
je
aam
dec
les
inc
mov
cmp
xchg
pushf
add
imul
mov
jne
dec
sbb
out
leave
or
mov
push
ds
xor
test
dec
outsl
insb
push
sbb
daa
sbb
aam
mov
inc
xchg
sbb
sbb
inc
sarb
xchg
push
and
gs
inc
sub
xchg
pop
mov
stos
cld
sub
mov
push
cmp
cmpl
xchg
shr
insb
jbe
dec
inc
test
ret
daa
sbb
shll
insl
jg
int
test
pop
test
imul
loop
int3
andl
dec
addr16
or
loopne
cmp
cmc
insl
sarl
sbb
test
outsb
push
inc
stos
test
mov
repnz
lods
mov
cmp
repz
loop
ja
adc
lea
leave
jnp
ror
push
inc
inc
loop
mov
cmp
cmpsl
movsl
int
lds
movsl
lcall
in
mov
push
add
sbb
in
mov
and
xchg
dec
popa
dec
pop
cmc
lsl
ficoml
ja
cmpsb
lea
xor
mov
in
andb
push
xorb
int
add
es
sahf
dec
or
inc
inc
aad
sti
inc
pop
mov
mov
sbb
dec
add
je
shrb
ss
pop
outsb
mov
sub
dec
aas
lods
ds
jp
add
dec
loope
sub
mov
sub
fcoms
cmp
lods
sti
inc
insl
repnz
xor
call
cli
jns
test
inc
dec
lahf
push
stc
pop
mov
mov
pop
call
mov
bound
mov
lods
iret
sub
daa
mov
pmaddwd
pushf
scas
out
cmp
aaa
lret
repz
popaw
jmp
and
sub
movsb
mov
int
stos
in
enterw
jp
mov
sub
mov
add
lock
movsl
or
shrw
jnp
push
and
jnp
loope
ret
jo
popl
mov
movsl
pop
lcall
add
mov
sti
ss
jl
leave
or
xchg
cli
jmp
stc
stos
inc
sarl
mov
rep
mov
inc
ds
test
pop
inc
pop
je
dec
mov
adc
mov
adc
in
in
adc
dec
push
ret
adc
rorl
jl
xchg
nop
pop
jle
jnp
jnp
out
cs
cmp
mov
inc
mov
mov
pop
pop
jne
pushf
sub
adc
not
adc
xchg
xor
repz
and
pop
in
scas
or
sub
aaa
pushf
mov
push
je
nop
xor
xchg
les
add
sbb
dec
frstor
loope
adcb
sarl
sbb
inc
jae
daa
in
std
mov
out
add
stc
outsl
pusha
lahf
mov
mov
sbb
or
shl
pop
pop
js
xchg
out
idivl
push
nop
cmp
mov
fcmovbe
imul
add
dec
adcb
or
ds
push
jg
jno
mov
arpl
lcall
jp
out
fwait
bnd
cld
scas
xchg
das
push
xorb
sub
aam
inc
test
fldcw
es
addr16
imul
or
jns
sti
maskmovq
wbinvd
outsb
sbb
cmp
cmpsb
fcoms
roll
dec
adc
in
je
std
jnp
jnp
mov
pop
sub
test
sbb
mov
pop
imul
call
scas
test
ret
ljmp
add
dec
and
cmp
pop
cmp
lock
pop
adc
push
mov
pop
push
push
aad
int
push
cmp
aam
out
mov
and
sbb
add
jl
mov
repnz
movsb
data16
pop
arpl
sarl
cmpsb
clc
mov
cmpl
scas
inc
cmp
test
aad
jns
mov
aad
fldcw
xchg
add
inc
mov
mov
pop
lods
pop
inc
xor
jne
imul
or
adc
imul
pop
dec
es
lret
shl
fmul
push
fst
rolb
je
enter
fisubrl
pop
dec
inc
fwait
jno
dec
or
cmp
ret
lret
jle
jp
add
fadd
dec
pop
std
jns
fldenv
sbb
gs
jp
cmp
pushf
xor
sbb
jge
jle
xchg
stc
test
or
push
fcomp
ja
xchg
aam
xchg
cmpsb
lcall
push
or
movsl
and
jmp
rolb
cmpsb
in
jg
shlb
arpl
sbb
cltd
stc
arpl
push
add
test
sub
sbb
inc
ljmp
and
lock
inc
addr16
mov
adc
jnp
js
fildll
aad
push
xor
jb
xchg
repz
mov
or
cmp
and
movsb
add
pop
fiaddl
mov
rcrl
xchg
aas
mov
mov
jno
cmp
fistl
leave
stos
loopne
cltd
xchg
lea
mov
dec
ljmp
push
test
jmp
sbb
jb
mov
lods
adc
int
lods
popa
mov
cmp
mov
sahf
mov
mov
mov
loopne
adc
fnstcw
test
cltd
inc
sub
test
cmp
jg
jne
cmpsl
sub
mov
jmp
movl
cmpsl
cmpsl
jmp
xchg
pop
loope
fisubrs
sbb
gs
lods
xor
jg
mov
inc
and
popa
jle
ja
adc
xor
push
jl
cwtl
into
clc
inc
push
in
icebp
adc
and
add
lahf
lahf
dec
adcl
jnp
xor
mov
sbb
add
xchg
push
fstl
mov
test
fwait
and
pop
das
jl
jne
push
push
mov
sbb
pop
sub
lock
xchg
in
jmp
movsb
jg
or
sub
xor
es
stos
test
sub
outsb
mov
test
cmp
in
clc
jne
push
push
data16
cmp
mov
popf
popf
inc
mov
xchg
pop
sub
cli
jnp
sarl
movsl
lock
jmp
mov
push
out
adc
mov
jge
adc
mov
pop
or
dec
popf
fwait
mov
cltd
neg
sti
in
cmp
mov
jge
dec
mov
sti
lods
mov
xor
nop
sub
xor
test
insb
fists
in
push
data16
insl
or
sbb
in
dec
fwait
hlt
movsb
pop
popa
das
jecxz
xor
rcll
stos
test
cmp
jmp
ret
nop
sbb
in
pop
arpl
je
mov
cmp
sbb
push
mov
xor
and
jno
cs
ds
sahf
mov
test
jp
jb
inc
pop
pop
pushf
fwait
mov
mov
mov
cmp
stos
lds
lahf
and
jecxz
bound
push
lret
dec
lret
inc
xchg
in
mov
jle
clc
xchg
lods
popa
xchg
mov
lea
rclb
test
clc
dec
jno
jns
lret
and
scas
loopne
xchg
push
jecxz,pt
pushf
inc
int
jnp
ja
and
dec
pop
push
adc
jae
xchg
sarl
and
dec
sahf
add
xlat
and
lock
stos
push
dec
mov
jb
push
lea
dec
cmp
shrl
mov
in
jl
xchg
jns
mov
stc
shll
push
mov
fs
pop
popa
pop
mov
pop
outsl
cwtl
sub
or
aaa
add
ss
pop
bound
es
jo
jecxz
leave
pop
es
out
and
aas
add
bound
cmp
icebp
adc
sbb
or
ret
or
mov
pop
and
out
xchg
movsb
xchg
outsb
cmc
mov
xchg
nop
out
lods
into
lea
testb
xchg
mov
xchg
cmp
dec
jnp
es
and
icebp
pop
pop
jnp
mov
cmpl
xor
insl
push
jp
dec
xor
mov
test
fnsave
nop
dec
sbb
cmp
inc
dec
push
inc
cwtl
jecxz
lock
jge
subl
cli
or
pop
add
mov
lret
in
lods
cmpsl
movsb
movsl
pop
inc
lret
lret
fwait
aam
and
les
outsl
mov
inc
xchg
addr16
add
fnsave
adc
xor
jb
fs
test
out
rorb
or
xchg
mov
das
add
out
adc
mov
push
cwtl
sbb
pop
sbb
ret
dec
cmp
leave
inc
ss
inc
fimull
xor
les
flds
js
movsb
insl
jns
inc
test
jne
scas
ret
sarl
movsl
vpmacswd
adc
int
in
ss
xor
sub
inc
mov
out
arpl
rorb
insl
push
shl
sub
popf
or
shll
movsb
lea
shl
icebp
add
and
nop
inc
mov
add
nop
mov
dec
mov
sub
mov
sti
stos
shlb
test
mov
adcl
inc
pop
insb
push
lock
pop
imul
enter
jbe
std
bound
dec
xchg
mov
aas
test
or
call
add
xchg
xchg
inc
lahf
cmp
push
scas
sub
jmp
mov
mov
hlt
pop
aad
lret
lahf
aam
xchg
and
jae
enter
loopne
out
test
je
jmp
or
sub
dec
mov
in
mov
call
mov
iret
out
lret
mov
sub
mov
cmpsl
ss
jg
sbb
mov
mov
lods
mov
ret
insl
loopne
bound
push
outsl
sub
push
push
add
lods
pop
out
cs
jmp
clc
cmp
mov
mov
adc
test
sbb
push
mov
scas
adc
add
cmp
cmp
insl
fstpt
add
add
sarl
xchg
push
push
pusha
out
or
iret
push
push
mov
negb
sbb
std
mov
pop
out
out
mov
xor
sub
aas
jnp
icebp
mov
push
xchg
jge
fnsave
push
dec
cmp
in
mov
push
cs
scas
ljmp
imul
shll
movsl
lret
ja
inc
mov
mov
cs
insb
inc
or
sbb
sub
call
lcall
mov
cmc
sbb
and
test
lods
cwtl
ret
xchg
mov
in
sub
push
jecxz
mov
cmp
mov
pop
loope
sub
shl
xchg
daa
adc
and
inc
pop
aas
into
xchg
mov
push
inc
nop
add
jp
scas
data16
adc
bound
pop
mov
rclb
adc
add
les
add
push
and
xor
mov
loop
mov
std
shl
psrlw
cmp
inc
mov
sub
xor
lcall
stc
jl
mov
in
pop
test
xabort
jge
xor
mov
inc
inc
pop
xchg
and
xchg
lret
cmp
inc
int3
push
in
adc
cmpsl
mov
dec
out
or
sbb
mov
cmp
stos
ss
je
and
add
jne
jne
mov
jbe
test
mov
push
adc
rorl
and
push
lcall
sub
cmp
jecxz
add
inc
movsb
sahf
rcll
movl
dec
xchg
ja
in
sbb
fs
mov
dec
mov
jmp
and
push
pop
sub
add
outsb
and
pop
int3
lds
aam
push
ss
test
bound
jle
addl
cmp
movd
into
test
sbb
mov
inc
pop
xor
jo
int3
mov
push
in
push
mov
dec
das
mov
sti
push
jmp
push
rolb
cs
xchg
shlb
leave
push
xor
cmp
dec
cs
js
push
addr16
cs
jge
mov
imul
jae
xchg
mov
add
pop
pop
sahf
mov
lahf
imul
loopne
fnstenv
les
jp
adc
mov
test
js
bound
add
sub
sub
shlb
mov
dec
jp
dec
mov
ds
mov
push
xor
out
sti
and
xchg
addl
mov
out
les
outsl
lods
and
shl
inc
or
jbe
and
xchg
add
dec
loopne
lock
jbe
jp
mov
pop
xor
push
push
inc
rolb
dec
movl
fwait
cmp
js
pop
xlat
jp
lods
cltd
sbbl
pop
push
cmpb
fstpl
pushf
jmp
iret
push
sti
pop
xchg
sbb
cli
lret
xor
xlat
pop
push
test
cld
aad
add
popf
test
mov
fdiv
bound
pop
jno
movsl
push
pop
mov
or
push
lret
lcall
xchg
jle
iret
test
int
mov
sti
das
lret
push
in
mov
adc
aam
and
js
jmp
ljmp
and
add
repz
ret
inc
mov
dec
out
sub
dec
stos
push
sub
mov
push
inc
in
sbb
jae
inc
shl
or
sub
insl
stc
scas
pop
sbb
xchg
out
ja
cltd
adc
mov
dec
ficomps
mov
jbe
das
adc
mov
and
into
fwait
or
push
shrb
pop
xchg
pushf
out
mov
imul
inc
aas
ds
and
dec
push
push
and
loope
cmp
jecxz
xor
inc
or
jnp
lods
xchg
int3
inc
sbb
sbb
adc
rcr
jmp
push
mov
aam
and
sub
pop
ja
gs
test
sbb
mov
sbb
aas
stc
sub
sbb
ucomiss
aaa
sbb
pop
jmp
jl
inc
push
ds
push
int
pop
jg
shrb
daa
lds
sub
scas
sbb
nop
and
cmp
int3
sbbl
add
cltd
push
testb
outsl
inc
lret
dec
dec
xchg
push
inc
xchg
pop
sub
sbb
xchg
sbb
stos
loopne
popf
dec
ss
jb
pop
in
sbb
jge
sub
pushf
push
add
xor
sbb
dec
scas
cwtl
clc
push
mov
fldenv
push
cmp
pop
dec
fldenv
aaa
xor
cmp
movsb
add
sti
call
jns
mov
push
push
loope
hlt
test
cmp
xor
test
and
push
and
add
and
pop
mov
xor
cmc
dec
fisubs
jecxz
mov
clc
and
popf
sub
dec
aad
sbb
sbb
repz
sbb
mov
mov
lret
cld
int3
loopne
roll
push
loopne
fwait
mov
jmp
push
mov
xor
es
adc
jne
aad
das
negb
cmpsb
nop
or
test
lods
pop
nop
sub
roll
daa
sub
and
enter
mov
xchg
lret
sahf
xlat
xchg
push
sbb
adc
lret
cmp
inc
or
pushf
jo
inc
js
or
fnstenv
arpl
jns
pop
bound
adcl
andl
xor
inc
adc
fldcw
dec
int
cltd
filds
xorb
push
call
fiaddl
sub
leave
sub
daa
dec
imul
movsb
cmp
shlb
and
lds
pop
sbb
decb
adc
pop
imulb
je
cmp
fnstenv
pop
cwtl
push
xchg
mov
cwtl
sbb
je
cmp
dec
xor
leave
lods
test
sub
ss
mov
data16
xorb
mov
mov
pop
in
inc
mov
mov
jb
inc
or
and
sbb
fwait
arpl
adc
sti
popa
xchg
dec
jmp
xor
mov
icebp
jo
aam
mov
or
es
sti
repz
cmp
cmp
in
cltd
lahf
outsl
xchg
push
mov
cmpsb
adc
sub
pop
mov
scas
shr
pop
mov
push
lret
xchg
jle
mov
ds
pusha
icebp
push
jae
cltd
out
es
sub
ret
js
xchg
aad
inc
dec
lahf
push
test
mov
std
sub
sbb
icebp
bound
or
mov
add
imul
mov
push
mov
dec
adc
add
popl
inc
mov
seta
dec
or
inc
push
xor
mov
js,pt
sbb
sbb
adc
scas
inc
mov
adc
shrl
repz
inc
out
mov
jmp
js
out
push
icebp
cli
outsl
lahf
adc
pop
sub
iret
sub
inc
frstor
dec
loopew
jns
jbe,pt
pop
out
push
xor
xchg
lea
ret
addb
idivb
push
pop
jg
lret
inc
xor
sub
dec
lcall
imul
or
leave
xor
sub
into
fs
mov
adc
cmp
xchg
or
pop
rcll
xchg
icebp
dec
insb
mov
jns
out
test
jno
dec
adc
cld
dec
mov
mov
cmp
and
pop
repnz
xorl
rolb
fs
cmp
ja
cmp
test
jp
push
mov
outsl
ret
cmp
dec
xchg
mov
and
sbb
pop
sbb
add
and
add
xlat
sbb
push
mov
inc
sbb
fldcw
sar
iret
test
cmova
sbb
cmpl
push
xor
mov
add
lods
popa
dec
lret
in
push
ds
lods
arpl
add
aam
inc
push
aam
add
add
adc
adc
mov
out
dec
dec
mov
aad
fiadds
inc
mov
mov
inc
lds
xchg
jge
fdivl
fisubl
xchg
cmp
push
push
and
ret
scas
xor
scas
andl
in
rcrl
inc
mov
sub
inc
and
outsl
jmp
add
iret
out
fstpt
dec
cmp
stos
roll
pop
pop
repz
fsubrp
imul
call
mov
arpl
push
outsb
cmc
jl
push
je
aam
cmp
sub
sub
aaa
mov
mov
pop
mov
or
and
stc
fnstcw
jge
mov
and
xor
sarb
sbb
fstl
pop
push
jo
or
inc
sbbl
ret
jl
hlt
subb
imul
imul
and
jmp
sub
test
adc
sbb
sbb
enter
scas
dec
ja
push
subb
mov
ss
gs
fdivrl
mov
out
and
cmp
inc
subl
push
aam
insl
pop
int3
mov
inc
out
xchg
std
xchg
call
inc
pop
or
notb
pop
out
test
les
je
mov
bound
sarb
std
push
das
cwtl
xchg
lahf
insl
aam
xchg
cwtl
outsl
and
add
aam
ja
jb
lcall
cmp
adc
bound
inc
lcall
fisttpll
lahf
xchg
add
fiaddl
push
das
cmpsb
dec
pop
jmp
arpl
sbb
dec
orb
mov
jecxz
rclb
cmp
call
icebp
add
cwtl
xor
jecxz
cmp
es
mov
jns
add
pusha
nop
or
imul
stos
or
js
and
xchg
push
xor
sub
mov
cltd
dec
popa
daa
dec
insl
popa
jne
cmp
insl
push
xchg
add
js
jne
into
ja
icebp
and
xchg
cltd
pop
outsl
out
andl
daa
or
sbb
adc
ret
or
xor
mov
scas
leave
inc
daa
push
movsl
pop
jl
adc
push
popa
cmp
sub
shlb
push
mov
push
outsb
in
mulb
subl
fnstcw
cmp
leave
push
popa
or
lahf
arpl
add
jb
cmp
enter
and
iret
out
js
add
sub
out
cltd
in
enter
sbb
dec
push
sbb
sbb
inc
gs
lods
cmpsl
pop
rcl
mov
test
int
insb
push
lret
jge
pop
adc
and
fcomi
mov
dec
sbb
lds
pop
xchg
int3
ljmp
or
cmp
pop
jnp
test
stos
cmp
movsl
sbb
xchg
test
mov
dec
push
sbb
sbb
add
loop
or
daa
out
mov
inc
test
cld
call
and
cmp
stc
and
shlb
jns
mov
pop
mov
inc
mov
out
adc
mov
fmuls
insb
sti
lret
lock
jnp
sti
nop
pop
push
xor
call
push
add
scas
cmp
imul
testl
mov
pop
pop
xor
jge
outsl
pop
and
aas
xchg
cmpsb
les
stos
ret
pand
jle
pop
fstps
dec
pop
push
insl
adc
leave
dec
loop
mov
flds
add
or
loop
or
test
xor
mov
je
loop
std
fstpt
out
add
or
add
bound
popa
mov
jo
xchg
jl
cmpsb
pop
dec
dec
fists
mov
dec
fwait
bnd
inc
mov
push
lret
sub
sbb
add
sbb
xchg
mov
and
sub
mov
ret
nop
out
inc
xchg
push
imul
mov
mov
test
or
pushf
pop
add
xor
sub
dec
or
dec
in
iret
fcomps
add
insl
shl
mov
stos
rcll
jg
arpl
vcvtsi2sd
mov
inc
or
cwtl
js
shl
in
sub
mov
mov
mov
rcrl
and
lock
out
outsb
popl
loopne
inc
jmp
mov
fsubr
jle
lds
jbe
ret
cmpsb
sbb
pop
iret
movsl
aam
loope
in
dec
mov
dec
mov
stos
sub
push
loop
sahf
fbstp
xchg
pushf
sub
xor
lds
jb
shlb
add
fcompl
and
rclb
jbe
mov
out
mov
mov
sub
loop,pt
mov
arpl
xchg
push
add
mov
dec
es
inc
out
sbb
push
test
jnp
inc
jo
mov
scas
jl
pop
mov
in
cmc
jl
lods
loope
fildll
rep
inc
scas
mov
jbe
fwait
arpl
sahf
imul
cmp
sub
iret
push
mov
dec
aam
and
xchg
scas
fidivl
repz
mov
dec
mov
in
xor
adc
test
jo
das
scas
mov
mov
dec
loope
sbb
test
das
cli
js
inc
adc
shlb
mov
andl
cmp
sub
jle
cmp
jmp
cmp
in
sub
mov
iret
lcall
or
ds
test
pop
pop
fildll
test
fs
jmp
sub
pop
push
xchg
or
fcom
cmp
cmp
inc
adc
ds
ss
fisttps
pop
test
stos
or
xor
xor
push
je
sub
insl
ds
inc
imull
mov
or
add
sbb
daa
jb
gs
in
xor
outsb
sub
push
dec
pop
mov
in
nop
adc
and
div
dec
je
int
insl
dec
hlt
psraw
mov
inc
sub
pop
jbe
shr
hlt
ficomps
xchg
in
lods
mov
lods
and
cmp
out
sti
xchg
cmp
xor
cmp
stc
mov
popa
jecxz
xor
clc
push
jg
lret
daa
pop
insb
leave
cli
xchg
lret
mov
insb
mov
rcr
arpl
inc
orl
repz
bound
adc
adc
dec
xchg
sub
inc
sub
fisttpl
dec
xchg
xchg
sub
cmpl
pushf
into
popa
leave
ficoms
leave
mov
movsb
or
iret
xchg
fisubrs
xor
inc
rclb
push
lahf
lds
int
fisttpl
or
repz
add
adc
dec
cmp
pop
cmpl
and
shrl
fidivl
or
pop
int
lea
movsb
scas
lret
jo
das
sub
inc
add
popf
fwait
and
fwait
ja
lcall
pusha
movsb
lret
mov
das
xchg
test
outsl
mov
pop
pop
mov
sahf
add
inc
and
mov
pop
ret
mov
mov
arpl
in
mov
sub
insb
std
xor
lahf
lret
push
mov
add
sahf
enter
jb
cltd
jg
lret
mov
lock
sub
stc
sbb
mov
cmp
clc
popf
repnz
call
jns
pop
gs
fimull
lea
xchg
clc
push
clc
fldl
test
dec
jge
ss
aad
je
imul
ficomps
push
sbb
fisttpll
mov
fdivs
sub
dec
sub
dec
not
pop
sub
mov
lret
and
sub
sahf
xorb
pop
lret
pop
mov
xchg
mov
js
jno
jmp
jb
sbb
ljmp
jo
cmp
in
loope
pop
xchg
push
sbb
dec
loop
jl
addr16
inc
jae
push
mov
pushf
arpl
lock
push
push
add
addr16
mov
mov
rorl
pop
jp
fprem1
cmp
add
mov
mov
xor
out
push
mov
and
sub
call
shl
xor
jge
mov
lock
xor
out
xor
sahf
test
mov
jnp
or
ret
inc
imull
lds
hlt
sahf
or
fcomps
or
into
arpl
and
lds
rorb
push
sub
nop
orb
mov
rcrb
inc
std
fcomp
cmpb
out
mull
imul
imul
xor
stc
ret
mov
adc
in
je
pushf
xor
mov
int3
jno
pusha
push
lahf
dec
mov
insl
lahf
hlt
int3
ss
mov
push
ss
xor
rcl
int3
mov
shll
popf
imul
gs
cmpsb
lahf
stos
add
pop
insl
xchg
cmp
dec
rcrb
decl
sub
repnz
rep
dec
sahf
scas
pushf
bound
pop
lret
ret
sbb
std
loop
fiadds
jo
gs
stos
lret
addl
fsubrl
dec
push
call
or
sbb
neg
sbb
inc
mov
mov
out
lods
lods
inc
popa
lcall
add
lds
stos
pop
enter
jno
ret
cwtl
jl
mov
sub
imul
aaa
mov
sbb
cmp
mov
dec
pop
fsub
in
fcomps
lret
adc
inc
ds
mov
dec
push
icebp
sbb
mov
mov
test
xlat
pop
jbe
inc
lock
mov
sub
bound
pop
repnz
jns
and
data16
add
in
cs
pop
sub
mov
xor
mov
adc
outsb
xchg
adc
int3
ja
mov
jmp
mov
fidivs
bound
and
cmpsb
ss
sub
mov
jg,pt
jge
push
lahf
xchg
mov
into
sub
push
push
pop
imul
out
in
test
enter
cmp
push
outsl
push
or
and
popa
bound
or
lahf
pop
movsb
mov
enter
test
jl
jne
cmpsb
jle
fstl
pop
aam
outsb
or
and
push
into
decl
fldl
jae
pop
out
inc
lods
jg
std
and
stos
outsl
cs
mov
push
rcl
mov
js
fistpl
es
adc
cmp
and
pop
and
in
mov
addr16
clc
sub
out
jns
iret
inc
xor
mov
mov
xor
xor
mov
cmp
cmp
push
loop
fs
lahf
fcoms
pop
sahf
mov
sbb
pop
cmpsl
movsb
testb
test
fisttps
cmpsb
pusha
sbb
int
ss
fsubrl
lock
mov
mov
sarl
imul
dec
jb
shl
mov
imul
dec
xlat
jne
je
dec
inc
adc
lds
xor
movb
mov
aaa
sti
mov
ret
ficoml
iret
adc
test
int3
cmp
jbe
loop
xchg
and
mov
int3
jno
jo
adc
xchg
or
insl
cmp
adc
cmp
mov
jbe
sahf
pop
push
adc
es
mov
popa
and
mov
push
cld
mov
sub
scas
fisubrs
mov
jle
and
jo
scas
lods
arpl
mov
sbb
mov
mov
mov
mov
push
jge
push
sbb
mov
mov
dec
fbld
leave
insl
sti
adc
or
cld
dec
decl
cmp
enter
pop
mov
jb
out
test
scas
jo
jb
inc
repnz
jmp
sbb
pop
pop
inc
adc
jbe
cmp
sahf
movsl
mov
aad
pop
test
bound
cmpsb
push
testl
mov
shl
pop
popf
pop
xor
test
or
jg
cmp
sbb
das
pop
call
mov
xor
fmull
test
push
loop
jmp
add
data16
in
sub
out
les
jb
sub
out
rol
push
xchg
dec
shll
movb
dec
lds
pop
pop
mov
mov
cld
aaa
mov
mov
adc
mov
cmp
scas
pop
mov
scas
dec
pop
push
repz
cld
sbb
cmc
mov
adc
mov
gs
push
hlt
aam
xlat
adc
sub
je
addr16
cld
adc
sbb
jae
insb
mov
dec
fmul
mov
mov
fistps
add
jae
test
insb
cmc
fwait
pop
pop
dec
scas
ljmp
inc
call
sbb
and
cmp
adc
imulb
mov
movb
cmpsl
adc
adcl
push
in
adc
xor
mov
leave
faddl
or
push
or
jge
stos
and
mov
xor
push
in
jb
cmpb
ljmp
cmp
inc
movsb
add
pop
and
stc
adc
or
jmp
push
inc
or
gs
add
mov
inc
lahf
xor
test
xlat
test
ss
fiadds
jecxz
jge
sub
pop
xchg
xchg
xchg
or
cmc
xchg
push
mov
sbb
icebp
push
pop
adc
test
fnstsw
fwait
jns
aad
int
pop
mov
nop
negb
xchg
mov
adc
cmp
imul
fcomi
xor
js
cltd
icebp
lock
and
ds
add
movsb
jp
into
xchg
cltd
dec
jle
or
pusha
pop
lret
out
ret
cmpsb
cmp
mov
outsl
lea
push
jecxz
pop
test
icebp
test
imul
push
fisubs
dec
jmp
rcrb
mov
jno
aas
test
mov
lea
sub
sbb
jp
arpl
mov
jge
xchg
jmp
popf
or
lods
mov
cmp
outsl
out
and
fstpl
sub
jo
mov
sahf
js
jo
clc
out
pop
cmpsb
jne
fimuls
lcall
sti
cwtl
jge
xchg
pop
or
inc
push
fwait
cli
insb
or
mov
sub
popa
nop
test
mov
test
cs
pop
adc
push
cmp
add
or
xor
sti
inc
and
and
sbb
jbe
inc
int3
push
cmpsl
jne
popf
xor
mulb
mov
cmp
sbb
xchg
outsl
rolb
cld
pop
mov
pop
mov
fcomps
stos
cltd
lds
xchg
out
mov
mov
jnp
dec
in
xchg
pop
pop
xchg
push
lret
iret
sbb
ja
subl
add
fs
inc
pop
movsb
in
shrb
add
xor
mov
loope
add
mov
mov
pop
pop
pop
cmp
adc
sbb
jns
in
adc
mov
fs
cmp
rcrl
loop
frstor
add
inc
fdivrl
mov
imul
shll
pop
mov
sahf
mov
cmpsb
add
or
insl
popf
lds
mov
xchg
xor
icebp
inc
jb
xor
std
cs
sahf
xor
xor
jnp
push
shlb
jne
ja
cwtl
outsb
arpl
xchg
sub
mov
mov
xchg
mov
jge
int3
arpl
push
imul
in
sti
mov
test
idivb
dec
dec
add
cmpsl
les
sbb
pop
add
push
or
jg
xor
stos
inc
mov
push
fldcw
insl
pushl
adc
fwait
mov
test
clc
mulb
mov
cmp
pop
sahf
cmp
and
cs
int
push
dec
cmp
push
popl
dec
dec
repz
inc
dec
call
xor
popl
sub
imul
jb
xchg
or
outsl
aad
cmp
loope
movsl
ss
bts
push
scas
dec
ret
cli
in
xor
or
push
aaa
int3
movsl
in
xchg
push
in
mov
cmp
jl
mov
leave
pop
and
mov
outsb
jns
xchg
inc
ljmp
bound
imul
and
jb
ret
lret
stos
loop
dec
cmp
rclb
hlt
sub
lcall
push
mov
mov
mov
jmp
and
aas
aaa
test
jg
pop
jecxz
dec
pop
imul
cmp
iret
fisttpl
in
mov
sbb
push
inc
cmp
sarb
je
and
dec
iret
pop
test
cmp
mov
jge
lds
out
pushf
aas
dec
testb
es
movsb
subb
vpslld
add
dec
dec
push
adc
sti
xchg
in
xchg
test
push
incl
lods
enter
call
inc
mov
bound
loop
subl
mov
hlt
je
out
inc
in
testb
xchg
dec
pop
iret
and
lret
leave
fiaddl
fs
addb
or
inc
pusha
xchg
ret
rolb
dec
mov
mov
insl
lods
out
aaa
lret
sbb
jb
adc
mov
dec
inc
loope
repnz
mov
data16
lods
xor
rcrb
push
jbe
cmpsb
test
leave
cmpsl
or
jle
pushl
cld
push
xchg
js
sub
lods
xor
into
pop
cld
push
jnp
or
mov
andl
mov
mov
jmp
ret
jo
icebp
mov
add
pushl
fsubr
inc
mov
test
mov
orb
aad
nop
cmp
add
ja
repnz
xchg
push
cmp
inc
mov
jbe
in
aam
adc
inc
pushf
decb
xchg
lods
and
or
or
cmp
popf
adc
mov
sub
xor
dec
dec
sbb
enter
push
fcmovbe
jns
repz
add
arpl
sbb
adc
shll
add
test
dec
push
ja
loopne
bound
sbb
cmpsl
in
and
push
pop
jne
cmp
pop
lds
loop
cwtl
les
mov
jbe
dec
divl
jge
mov
insb
jb
dec
mov
arpl
daa
fadds
push
inc
imul
daa
pushf
js
sub
push
jecxz
cmc
mov
xor
pop
mov
int
and
jns,pt
dec
push
loopne
movb
mov
sbb
mov
lea
test
fwait
mov
dec
push
xchg
popf
mov
mov
nop
cmc
mov
add
jno
outsl
movsb
sbb
mov
inc
idiv
cmc
int3
stos
mov
dec
ljmp
in
cmp
pop
std
pop
mov
shrb
inc
lock
ss
cltd
add
pavgw
sbb
mov
sub
push
xchg
jnp
push
test
aas
pop
mov
pop
lret
dec
sub
inc
stc
aas
dec
test
mov
and
cmp
lahf
mov
call
dec
sbb
pop
outsl
popa
ss
jnp
shl
inc
stc
movsb
leave
sub
leave
aad
lods
lret
sub
out
and
ds
mov
push
sbbb
pop
sahf
cld
iret
cmpsb
sahf
pusha
movsl
xor
dec
ret
jns
xchg
pop
rorl
and
and
fcomi
sub
mov
push
add
mov
sbb
and
subb
ss
cld
push
sbb
fnstsw
fmulp
mov
pop
and
pop
dec
loop
fldl
or
xchg
repz
cltd
and
sbb
loope
dec
xchg
out
lret
jl
rclb
enter
mov
call
push
mov
or
into
jmp
repnz
push
mov
lods
dec
cld
inc
call
fpatan
iret
push
mov
dec
stc
xchg
icebp
aas
loop
dec
mov
sub
test
jg
cltd
push
push
xor
fisubs
push
xor
adc
mov
adc
ljmp
fmuls
pusha
mov
sub
sub
adc
jmp
mov
aam
cwtl
pop
adc
add
and
adc
ror
lods
std
mov
jns
pop
push
mov
xor
adc
ret
movsb
mov
mov
jo
pop
mov
mov
mov
add
mov
or
sub
scas
mov
pop
push
test
add
sub
sub
pushf
imul
add
sub
jbe
out
in
xor
es
xchg
or
add
scas
mov
xor
clc
pop
pop
mov
xchg
in
jb
stos
and
pop
rolb
stos
es
fwait
pop
mov
lds
cmpsl
outsl
adc
mulb
xchg
or
popa
dec
nop
cmp
inc
subb
sbb
test
insb
jle
mov
popa
push
xchg
inc
aaa
xor
cld
pop
adc
lret
jae
pop
out
shll
cmpsl
jl
subl
clc
jb
inc
fwait
jae
and
jne
sub
adc
push
or
dec
lods
loopne
ljmp
scas
and
push
xchg
lods
out
imul
push
dec
ja
pop
sbb
pop
rcrb
adc
icebp
lds
ja
call
xor
xlat
cld
dec
dec
loope
xor
jae
stos
aad
mov
stc
sbb
pushf
outsl
lret
mov
pushf
add
sbb
imul
fbstp
mov
rcrb
lock
pop
in
push
sub
test
test
lds
mov
add
aas
aad
cld
cli
pop
pop
jae
mov
outsl
stos
test
mov
sbbb
xor
std
push
mov
lods
lahf
jo
dec
es
sub
jle
jecxz
sbb
dec
sub
or
dec
bound
mov
dec
cmpsl
push
adc
adc
imul
mov
into
mov
push
push
add
xorb
xchg
dec
dec
fistps
jb
jp
mov
xor
mov
fisubs
xor
shr
adc
loopne
lock
not
je
ljmp
xchg
jne
lcall
in
inc
and
js
and
push
xchg
pop
mov
fdivl
add
cwtl
adc
mov
adc
leave
lods
push
xchg
push
pop
leave
dec
push
xchg
test
and
jb
enter
imul
iret
aaa
push
push
int3
or
scas
aas
iret
int
mov
dec
daa
scas
gs
test
rol
pop
in
stos
and
hlt
cmp
adc
je
mov
popf
cmp
lret
cmp
test
int
popa
out
lock
push
mov
inc
leave
mov
jp
xor
cltd
cwtl
xor
mov
mov
scas
xchg
inc
test
cmp
mov
rorb
lcall
mov
mov
fs
sub
sqrtps
dec
bound
dec
mov
insb
mov
mov
mov
cmc
sub
scas
mov
lret
js
aad
enter
loop
sahf
outsb
jecxz
rorl
ss
and
push
jg
push
xor
mov
xor
cmp
std
mov
in
adc
cmp
jb
lds
xor
outsl
les
fistpl
scas
fisttps
movsb
xor
mov
sbb
scas
negl
and
jae
repnz
xor
or
arpl
push
mov
pusha
loopne
mov
rcll
test
sarl
xchg
test
xor
pop
popa
fnsave
mov
movsb
shl
fstp
and
push
mov
mov
pop
insl
in
cld
jne
testb
rcrb
push
mov
mov
popa
std
test
fldenv
jnp
mov
test
lds
xor
stos
insl
dec
ret
pushf
flds
mov
nop
fwait
fs
lods
xor
hlt
sub
mov
mov
or
stc
push
movsb
xchg
xor
test
outsl
rcll
pop
push
testb
repz
dec
or
arpl
mov
dec
inc
xchg
insl
or
or
xchg
das
or
dec
jns
test
movsl
shl
xchg
ss
add
xchg
jl
cltd
jno
mov
pop
loope
sbb
mov
inc
jb
jbe
or
out
int3
jae
mov
sub
lock
push
push
inc
mov
pop
fsubrl
mov
cltd
mov
mov
mov
jl
stos
aam
mov
pop
ffree
adc
cmp
shll
in
sub
test
and
xor
jnp
cmp
mov
adc
adc
sub
push
xor
mov
ret
repnz
jae
and
out
fdivs
jecxz
hlt
mov
adc
mov
addb
adc
sbb
jb
jnp
jle
cld
sbb
xchg
mov
inc
mov
xlat
push
enter
xor
aam
cmp
movsl
sbb
jae
jle
adc
jmp
add
add
mov
mov
xor
cmpsb
sub
mov
out
and
adc
add
test
pop
inc
mov
scas
shlb
int
iret
cmpsl
xchg
repz
test
pop
mov
push
lods
pop
push
pushf
iret
jbe
sbb
ret
xor
nop
out
pop
fsubp
daa
dec
add
push
pop
outsb
inc
dec
sub
push
scas
xchg
adc
les
cld
cs
xor
inc
mov
test
dec
push
je
cmp
in
lea
jne
mov
jg
test
jne
xchg
xor
loope
cld
sub
adc
add
xor
xlat
sub
cmp
in
shrl
pop
stos
stos
jle
and
jnp
jbe
stc
in
pusha
xchg
lods
sub
dec
jnp
mov
divb
or
shl
dec
xor
lahf
imul
cmp
sbb
das
pushf
sbb
sub
out
cltd
idivb
jg
pop
test
push
ss
jb
ds
or
sub
sbb
test
shrb
mov
mov
mov
aas
leave
into
pop
cmp
mov
loopne
push
sub
push
sti
or
dec
sahf
hlt
jo
pop
sub
add
pop
test
sbb
cwtl
and
cmp
loope
cmp
outsl
adc
out
icebp
sti
and
xchg
cmp
xor
add
test
sbb
inc
loop
jge
mov
pop
push
sub
mov
sub
xchg
fiadds
add
mov
mov
pusha
jle
insb
pop
cs
fwait
loopne
stos
mov
std
stos
ret
mov
mov
aam
push
mov
dec
into
jno
arpl
push
adc
sub
or
ss
jno
andb
subl
xor
jp
mov
negb
mul
pushf
cltd
cmp
out
fs
cmp
scas
icebp
scas
adc
pop
sbb
jmp
cmp
mov
sbb
sbb
cwtl
mov
jno
and
push
repnz
dec
sub
jmp
add
gs
sbb
es
es
dec
fmull
dec
pop
imul
dec
mov
test
jmp
add
ds
adc
inc
notb
xor
mov
jecxz
cld
jbe
aad
in
test
lods
js
loope
rclb
inc
xchg
mov
imul
mov
mov
insb
and
les
mov
push
adc
ja
xor
iret
in
imul
cmp
pop
xchg
jno
xchg
call
dec
cmp
add
ds
enter
jo
push
and
xor
aad
xchg
divl
jle
add
prefetch
inc
sbb
out
jg
push
cs
add
xchg
aaa
pop
psraw
les
subb
lret
mov
inc
loope
cmp
loope
jns
das
fwait
push
adc
xchg
xor
adc
mov
ret
in
in
fcmovnb
js
sub
lahf
xchg
jae
xchg
ffreep
cmc
xchg
lret
sbb
dec
loope
mov
mov
adc
adc
xor
adc
mov
adc
daa
sbb
aas
addb
scas
fimull
test
and
lods
mov
lret
or
xchg
aaa
and
add
mov
xchg
jo,pn
pop
sub
loop
push
mov
sbb
add
push
jge
sbb
popa
stos
enter
in
into
sbb
xchg
jecxz
inc
add
popa
mov
xchg
movsb
push
sbb
sub
subb
es
std
fnclex
mov
mov
jne
push
loop
xor
lret
xor
fcomp
rclb
addr16
sub
push
mov
and
pop
std
adc
lahf
cli
repz
test
loopne
aad
fidivs
cmp
dec
cmp
push
outsl
jg
mov
les
pop
sti
inc
repnz
pop
and
sbb
sub
jge
dec
inc
inc
shll
fsubrl
pop
mov
das
out
shlb
out
xor
or
scas
lods
ja
cmpsl
inc
leave
xor
shll
sub
mov
jl
arpl
jmp
and
push
xchg
xor
adc
or
mov
fsubrl
xchg
ficoml
pop
out
fmuls
shll
inc
add
jle
hlt
addb
fsts
inc
cmp
fidivrs
test
mov
and
popf
mov
jb
cmp
test
arpl
jge,pt
in
pop
imul
cmp
in
out
push
push
push
mov
movaps
jnp
xchg
adc
into
daa
fs
cmp
addb
aas
rorb
mov
aaa
sub
enter
xor
pushf
shl
lea
mov
inc
xchg
stos
xor
push
loope,pt
inc
es
sbb
or
repnz
sbb
cmpsb
xor
ret
add
xchg
dec
xchg
lahf
into
gs
fsincos
rcrl
icebp
pop
mov
das
roll
mov
andb
lcall
cmp
movsl
clc
push
mov
sub
sarb
dec
inc
pusha
sub
sub
inc
orb
jle
js
push
adcb
jecxz
pop
adc
inc
and
xor
adc
outsb
out
xchg
xchg
xor
mov
mov
aam
mov
bound
inc
fcompl
cmpsb
std
mov
lcall
pop
and
lea
stos
xor
pop
ljmp
add
sbb
mov
lods
lods
mov
dec
adc
arpl
fs
hlt
aad
aam
sub
add
fsts
sub
or
mov
cmpsl
fistpl
sbb
ss
xchg
cwtl
cmp
add
inc
hlt
adc
mov
lret
add
iret
ss
jnp
fisttpll
push
roll
cmp
pop
icebp
cltd
icebp
movsb
out
std
xchg
out
test
pop
sti
sub
nop
jg
mov
movsb
inc
fs
xlat
leave
dec
je
mov
mov
mov
sbb
push
ljmp
mov
stos
out
push
mov
dec
fnstenv
mov
pop
fsts
push
scas
dec
mov
std
adc
pop
js
sub
clc
jmp
cmp
ret
xor
push
mov
iret
jl
imul
mov
js
mov
pop
and
sub
jmp
pop
dec
and
jmp
jb
add
loope
xor
xor
arpl
mov
cmp
add
jo
mov
sub
xor
sbbb
jmp
mov
jg
loop
jnp
sbb
push
jle
enter
sub
cmp
mov
xchg
cwtl
dec
lret
add
dec
mov
mov
mov
clc
insb
inc
data16
lea
popf
sub
or
cmp
test
inc
cmpsb
lret
sub
inc
stos
fisttpll
je
stos
sbb
sub
xchg
aam
or
inc
mov
rol
push
mov
sbb
ja
out
icebp
les
mov
sub
inc
pop
push
loop
std
pusha
out
jne
push
cmp
push
xchg
push
mov
xchg
loop
adc
or
xor
outsl
fadd
dec
mov
fcmove
and
inc
test
cmc
in
add
xchg
movsl
and
or
lds
ficomps
lahf
cmp
lods
repnz
push
push
out
jnp
xlat
xchg
movsb
loop
icebp
jg
xor
sbb
pop
outsl
test
and
mov
mov
and
out
sub
dec
mov
sub
push
gs
xor
imul
repz
mov
cwtl
cmp
jo
test
leave
xchg
and
sarb
adc
add
push
lods
adc
popa
inc
ret
jne
sti
out
inc
dec
arpl
adc
call
dec
arpl
cwtl
sub
mov
sub
data16
mov
shrl
movsb
addr16
jb
mov
loop
mov
movsb
xchg
sbbl
test
wbinvd
iret
scas
mov
loopne
mov
mov
jge
outsl
dec
jno
mov
push
into
push
and
push
inc
and
cmp
mov
and
lahf
sti
in
inc
pusha
mov
shl
inc
stos
imul
outsl
push
and
add
pop
fcom
and
mulps
mov
sbb
hlt
mov
xor
mov
div
pop
popa
daa
and
push
das
cmp
aam
jge
imul
fsubrp
in
insl
imul
sti
xchg
push
inc
sti
imul
pop
add
out
into
pop
jle
mov
sbb
shlb
add
icebp
out
addr16
hlt
pop
lahf
add
xchg
xor
inc
sarl
fs
lods
mov
mov
sbb
or
mov
hlt
cmp
shll
les
lea
fnstenv
jbe
hlt
sbb
xor
xchg
call
cmp
insb
sub
xchg
mov
dec
mov
pushf
sarb
test
add
sub
and
push
pop
fwait
daa
xchg
addr16
push
xchg
fucom
outsb
or
out
rep
push
sub
popf
in
jae
cltd
stos
xor
loopne
test
arpl
adc
inc
xchg
inc
mov
jg
lret
out
mov
fcoms
inc
and
pop
sbb
sti
xchg
cmp
dec
out
repz
pop
adc
out
je
xor
mov
fs
sbb
pop
mov
dec
pushf
jae
add
adc
das
cwtl
addr16
mov
or
push
fnsave
sub
dec
mov
in
and
xlat
jge
or
and
jmp
jp
sub
iret
jge
pushf
enter
out
push
mov
shrd
addb
pop
and
cmpsl
dec
in
cmp
lods
fs
inc
aam
sub
inc
jle
int3
push
jl
push
xor
mov
inc
adcl
cs
dec
test
push
leave
pop
subl
mov
adc
iret
sbb
cltd
iret
jns
data16
add
jg
cmp
cli
mov
inc
pop
push
adc
jbe
movsl
pop
std
cmp
mov
dec
sbb
pop
bnd
fnsave
cld
inc
jns
add
subl
jbe
sbb
xor
adc
fsubrl
and
add
or
xor
jo
roll
or
sahf
jo
mov
cmp
push
sbb
xchg
jmp
inc
add
dec
fwait
pop
pop
jecxz
mov
cmp
sub
fbld
mov
out
jae
dec
loope
mov
add
or
pusha
lods
sub
roll
or
xor
repz
inc
rclb
shlb
cs
das
add
cmpsl
xor
int
ds
movsb
out
stos
leave
sub
inc
stc
iret
ret
test
xor
adc
push
xor
addr16
lds
imul
loop
test
xchg
inc
scas
stos
pop
jno
or
outsl
jmp
push
iret
pop
daa
int3
addl
push
in
cmp
jl
mov
dec
fisttpl
out
jnp
inc
sarl
sbb
and
add
std
jae
fisttpll
pop
inc
push
push
adc
pop
outsb
dec
dec
fisttpl
jmp
push
xor
jnp
sub
add
and
mov
mov
loopne
and
mov
adc
in
jb
repz
cmp
mov
lods
dec
popa
cli
movsb
or
cmp
xor
rorb
adc
ljmp
aas
cmpsb
aam
icebp
jge
pusha
arpl
js
inc
decb
ret
mov
insl
adc
jo
sub
fsubr
in
push
pop
add
inc
xor
aaa
sbb
dec
gs
mov
fadds
inc
jo
dec
sub
or
icebp
mov
pop
in
out
sub
into
pop
push
insl
mov
jl
js
push
cli
cmp
repnz
ljmp
pop
pop
int
pop
push
outsb
and
add
push
xchg
inc
cmp
popa
imul
cltd
filds
scas
out
mov
or
sub
mov
jbe
adc
xchg
jg
and
pop
mov
sub
mov
stos
jne
and
jp
cmp
inc
cltd
int
out
jno
sub
mov
cmc
aad
sub
lcall
push
mov
lds
jmp
movsb
cmpsb
mov
inc
pop
or
les
and
movl
sahf
fldl
clc
popa
inc
scas
loopne
sub
fisubl
lgdtl
sub
adc
push
add
sbb
dec
addr16
sub
and
jge
sub
rol
fisttpll
lret
adcl
sbb
testb
cmpsb
pop
sub
mov
adc
rorl
out
cmovnp
aaa
enter
push
pop
movsb
in
mov
mov
lods
nop
jns
icebp
loopne
aaa
rcr
gs
and
jle
insl
notb
mov
je
std
mov
in
jae
jne
ret
repz
pop
lret
repnz
xchg
shrb
push
dec
xchg
das
dec
loopne
in
mov
adc
ja
fucomip
adc
out
or
sbb
repz
ja
scas
cs
xchg
push
subb
arpl
push
outsl
adc
stos
and
push
xchg
mov
inc
test
daa
jns
mov
test
int3
push
xor
out
add
icebp
xor
mov
into
das
insl
and
sbb
or
adc
clc
jns
sub
lea
jmp
xlat
jnp
push
cltd
in
sbb
cmc
mov
cmp
sub
sbb
cmpsl
jmp
or
mov
dec
test
int
cmp
std
push
pop
or
sbb
jns
or
lods
fwait
pop
addr16
loope
arpl
call
and
push
scas
cmp
das
cmpsb
jl
shl
rorl
push
sbb
cli
pop
mov
inc
xor
sbb
adc
adc
push
xchg
add
jae
orb
add
jg
out
in
fst
jle
push
sbb
stc
pop
lds
xor
lret
scas
mov
outsl
xlat
push
push
fnstcw
xor
mov
test
test
mov
xlat
cmpsb
sbb
ret
pop
not
push
xchg
adc
out
dec
int3
mov
pusha
pushf
stos
mov
xchg
out
jbe
test
shrb
mov
aas
inc
push
mov
dec
das
out
or
mov
jae
dec
jae
lods
add
repz
pop
in
xchg
pop
lret
xchg
arpl
and
cwtl
jp
dec
dec
and
ret
lods
pop
adc
add
cli
xchg
sub
add
mull
adc
dec
loope
stc
and
jecxz
int3
nop
lods
sub
int3
dec
sbb
rcl
xchg
imul
ja
ficompl
lock
xor
shrl
les
out
xor
push
enter
push
scas
sub
pop
xor
push
pushf
enter
icebp
scas
leave
pop
or
add
in
repz
scas
cmp
pop
das
mov
jno
mov
xchg
subb
sbbl
dec
into
orl
jmp
iret
cli
xlat
or
mov
sahf
jle
les
add
or
inc
insl
cwtl
fsincos
push
aam
in
pushf
test
push
stos
sbb
mov
sub
or
and
dec
dec
xchg
js
xor
push
pop
ret
fstpl
or
fimuls
and
add
mov
mov
adcb
mov
nop
and
repnz
push
dec
dec
add
jle
add
in
mov
adc
fwait
sbb
iret
sub
pop
imul
inc
ja
outsl
pop
mov
repz
mov
mov
arpl
test
dec
jmp
pop
andl
mov
xor
aad
mov
ret
xchg
test
ja
sub
push
pop
adc
xor
in
push
lods
ret
sub
mov
adc
jae
push
mov
jle
lea
cmp
lds
mov
or
jl
insl
js
jbe
enter
mov
subb
in
fldt
stc
imul
scas
mov
add
bound
and
xchg
aad
test
or
adc
in
pop
jb
fs
push
aam
cmp
add
pop
lret
cmp
arpl
add
adc
ret
into
sti
add
sub
jo
jno
fcomps
xchg
xchg
adc
addr16
pusha
mov
xor
push
mov
sub
mov
pop
lcall
lods
pop
pop
mov
cld
addl
adc
xchg
pop
mov
xchg
add
shlb
jmp
in
imul
ja
imul
loop
cwtl
ljmp
stos
mov
or
sub
jge
fldenv
xchg
mov
cmp
add
bound
add
scas
arpl
popf
xor
dec
push
nop
ficoms
pop
inc
jecxz
and
mov
or
xchg
dec
dec
in
int
jns
lods
in
push
orl
sub
outsl
shlb
mov
je
mov
pop
fwait
inc
jno
scas
lcall
repz
or
and
push
add
lods
gs
mov
or
mov
sbb
clc
xchg
lods
jns
mov
out
movsb
dec
sahf
jle
mov
cli
jno
cmp
mov
or
adc
clc
test
cmpsb
cmpl
adc
out
xchg
stc
dec
mov
jo
std
add
lret
cmp
jo
add
sub
out
pop
dec
sbb
into
mov
sub
lret
mov
rorb
notb
test
leave
pop
mov
jae
stc
pop
sti
je
add
lods
daa
in
and
in
test
hlt
xchg
lea
or
in
loope
mov
imul
and
mov
push
imul
xor
orb
js
cltd
xor
pop
and
pushf
mov
mov
mov
imulb
mov
pusha
xlat
in
fwait
push
dec
ljmp
fs
mov
adc
pop
dec
adc
js
dec
jp
repz
or
inc
repz
movsl
lock
aam
dec
dec
imul
gs
inc
inc
fildl
cmp
inc
ret
mov
ljmp
ss
sbb
test
inc
inc
clc
mov
jg
mov
mov
mov
adc
out
mov
add
or
mov
ljmp
inc
xchg
repnz
mov
les
jp
repz
add
imul
push
loopne
mov
fldenv
and
and
mov
adc
mov
xor
rorl
xor
mov
dec
stos
frstor
sbb
loopne
fistps
xor
adc
stos
les
cs
jne
or
aam
mov
call
jbe
loop
in
fdivrl
dec
jae
nop
pop
out
std
fwait
leave
mov
mov
ficompl
stc
std
xlat
xchg
and
js
xor
jl
mov
push
stc
and
inc
scas
sbb
or
lock
push
pop
xchg
sbb
dec
mov
aam
sub
mov
push
cwtl
inc
gs
xchg
dec
aas
pop
or
pop
xchg
add
scas
xchg
std
stos
sti
fstpl
les
clc
adc
and
push
pusha
cmc
int3
scas
loope
fwait
mov
or
loope
xchg
fadds
mov
xchg
adc
mov
jns
dec
and
xor
jle
push
vmovddup
push
lods
out
inc
mov
xor
pop
adc
pop
sbb
sub
or
fidivl
mov
and
cmp
adc
sub
das
or
sti
loopne
adc
jae
xor
dec
push
fadds
xchg
popa
les
movsl
data16
mov
inc
and
inc
or
xchg
fimuls
and
adc
dec
dec
imul
mov
push
inc
pop
xchg
shl
imul
jno
frstor
inc
cltd
daa
xchg
mov
push
rcrl
fwait
inc
sbb
and
pop
out
jb
or
pop
dec
adc
mov
scas
fistpll
lret
jbe
pop
mov
cwtl
jl
fisubrs
mov
fcoml
dec
mov
ljmp
popf
insb
lds
pop
inc
ret
outsl
repnz
jne
outsl
lds
xor
fnsave
dec
add
mov
dec
lods
add
sahf
dec
leave
pop
xor
jg
mov
ja
addr16
add
popa
mov
push
xchg
cmc
fwait
mov
mov
pop
sbb
push
clc
jg
lock
xchg
push
and
pop
sub
push
push
adc
in
xor
xor
and
mov
leave
xchg
out
push
jb
adc
dec
ss
push
outsl
scas
push
xor
ds
sub
jecxz
jecxz
repnz
dec
push
outsb
test
int3
movsl
es
hlt
int3
call
push
fcoml
adc
das
sahf
push
inc
xor
push
stc
pop
jecxz
push
lcall
ss
adc
lods
es
je
pop
xor
jle
mov
cltd
push
jno
xchg
andb
push
sub
and
fcos
jmp
xor
ljmp
dec
fsubrp
jmp
loop
adc
rclb
enter
in
jp
xor
mov
fisttps
mov
idiv
push
xchg
sub
sub
rcrl
xchg
sti
cli
aaa
adc
addl
rclb
cmc
nop
adc
imul
aad
adc
xchg
fildl
cmp
enter
cmp
loope
in
mov
inc
xchg
fldcw
call
xor
pusha
jl
fyl2xp1
push
push
cmpl
xchg
xor
push
ret
dec
rcr
aad
pusha
ja
sar
jns
push
lret
sub
int3
nop
xor
cmp
je
cmpsb
das
mov
nop
pop
cwtl
je
dec
add
adc
shlb
or
add
fnstcw
popa
imul
sbb
pushf
xor
repnz
dec
ds
int
pop
add
es
pop
push
pushf
xchg
inc
jmp
bound
xchg
sub
repnz
out
add
push
and
mov
mov
clc
repnz
sbb
pop
testl
clc
data16
mov
mov
repnz
push
pop
cli
imul
jle
pop
stos
push
xor
rorb
rorb
mov
aam
jp
mov
jle
cmpsb
mov
popa
jo
xchg
mov
lcall
sub
fldcw
les
call
mov
mov
add
xchg
adc
or
lods
jo
fs
mov
stc
sub
push
cmp
mov
mov
test
xchg
sti
ret
cmp
add
pusha
sub
repnz
out
push
and
lcall
adc
pop
cmc
add
mov
fmull
mov
ret
scas
inc
in
enter
fnstsw
push
xlat
repz
sub
or
int3
popf
in
repnz
mov
push
sahf
mov
fsubs
jne
push
arpl
add
aad
adc
movsl
dec
cmpsb
repz
cmp
sarb
insb
mov
and
or
mov
mov
inc
push
push
push
ja
pop
arpl
and
jnp
push
out
stos
dec
xchg
pusha
inc
ds
cmp
cmpb
jo
addr16
mov
addb
arpl
int
jmp
or
pop
xor
add
out
std
mov
lret
sub
cwtl
pop
jno
lods
int3
inc
fwait
out
jae
ficoms
sbb
shlb
mov
dec
lock
loope
cmp
cmpsl
adc
ss
pop
xor
sbb
int3
dec
incb
adc
not
call
or
sbb
jecxz
inc
push
jmp
jb
rcll
ljmp
sub
lods
out
jecxz
imul
and
and
lcall
bound
add
sbb
and
jg
mov
mov
aam
test
and
pop
lahf
adc
mov
out
mov
xorb
popl
sbb
mov
stc
xor
outsb
xchg
jns
inc
mov
faddl
testb
lahf
push
shrl
fbld
sub
sarb
mov
in
mov
add
nop
mov
out
inc
inc
push
sbb
hlt
fwait
mov
fisttps
movsl
aam
nop
nop
cmc
xchg
pop
xchg
push
xchg
push
out
xor
gs
jb
iret
or
push
mov
cmp
pushw
int
lds
call
xchg
xlat
data16
dec
add
inc
dec
jl
mov
aaa
out
scas
adc
rorb
outsl
arpl
roll
adc
popf
js
fstp
aas
cli
scas
add
divb
jmp
mov
pop
xor
add
fidivs
daa
cmp
mov
les
js
es
add
loopne
xchg
xchg
adc
pop
mov
dec
inc
call
loop
scas
js
sub
pop
cmp
sub
aaa
sbb
add
iret
movsb
push
jns
push
shlb
and
int3
sub
push
cs
inc
ds
pop
lock
shrb
and
call
lret
xor
or
or
push
icebp
and
xchg
mov
push
push
popa
and
sar
xor
pop
orl
es
adc
cmpb
jns
inc
test
and
lods
xlat
add
enter
in
mov
and
aam
js
pop
lret
xor
jb
cmp
loope
adc
in
ljmp
sub
jbe
js
test
push
fs
inc
add
stos
fstl
gs
push
lea
out
push
jg
jbe
push
out
lea
rorb
mov
push
lahf
sti
test
pusha
fwait
and
push
cld
fs
cmpsl
and
inc
jmp
insb
mov
xor
add
inc
popf
sbb
mov
int
in
jb
adc
inc
scas
xor
vsqrtsd
jge
xor
out
js
and
es
cmp
xchg
xor
ss
cmp
cli
or
call
xlat
jge
leave
lret
sub
in
dec
js
inc
andb
std
nop
jmp
lods
les
pop
adc
add
fcmovne
int
mov
mov
aad
es
mov
add
jl
sbb
dec
pop
pop
stc
cmp
and
iret
in
mov
dec
gs
push
aaa
ds
inc
fcomi
xchg
data16
scas
mov
imul
xchg
cmc
xor
in
test
ljmp
and
popa
mov
es
shll
stc
rcr
sbbl
mov
ljmp
test
add
push
jge
fucomi
sub
adcl
or
ret
hlt
add
jmp
das
loopne
push
gs
add
lcall
cmc
dec
push
movsl
stos
and
insl
dec
lea
mov
fiadds
in
insl
sahf
sub
jge
push
pop
lret
xchg
sub
sub
aam
inc
push
std
mov
inc
inc
pusha
inc
sub
xchg
test
adc
in
dec
call
shll
mov
cld
loop,pn
sub
popa
hlt
xor
fisttpll
and
inc
rcrb
movsb
cmp
push
cmp
popa
movsl
popa
or
bound
mov
cmp
mov
enter
popf
or
push
fdiv
xor
stc
push
lret
out
pop
sbb
retw
gs
cmc
push
clc
xchg
cmpl
es
aad
fs
xchg
add
or
sbb
fwait
data16
jne
sub
test
cwtl
cmp
jae
test
in
outsb
jb
in
xchg
push
inc
sahf
lds
adc
mov
push
push
jno
aad
faddl
adc
mov
sar
stos
xchg
dec
cmp
int
adc
mov
loop
add
rep
mov
std
adc
movsb
enter
rclb
dec
incb
fimull
mov
loop
push
or
pop
test
adc
fs
testb
inc
lret
xchg
scas
mov
repz
enter
xor
js
push
sbb
add
add
in
pop
lret
cwtl
repnz
pmuludq
cli
test
ja
bound
xchg
sub
mov
pop
add
sub
outsb
out
or
sub
mov
icebp
call
dec
jmp
mov
mov
popf
mov
stc
lret
jl
es
loopne
stos
push
enter
test
loop
xor
fcmovnu
sub
inc
mov
pop
sbb
fdivrs
filds
cmp
test
add
pop
mov
adc
bound
push
push
mov
punpcklwd
dec
ds
or
push
xchg
pop
lods
dec
stos
xor
lret
jl
push
pusha
ljmp
push
jmp
int
dec
loope
adc
and
test
push
ja
loopne
mul
push
movsb
pop
dec
xchg
dec
mov
mov
cmp
push
xor
jmp
jbe
mov
outsl
std
inc
test
xchg
fidivs
loop
jb
shrb
ret
fwait
outsb
jnp
xchg
adc
jecxz
dec
pop
push
bound
sarb
sub
push
pop
mov
shll
adc
mov
cwtl
clc
cmp
xchg
enter
fnstcw
imul
push
mov
arpl
bnd
mov
jnp
xchg
cmc
dec
repz
xor
arpl
gs
ljmp
xchg
mov
pop
mov
sbb
dec
pop
mov
ds
inc
out
jl
ret
inc
cwtl
sbbl
out
jo
cmp
js
pop
repnz
push
fisttps
daa
rorb
add
fs
movsb
cwtl
pop
and
jns,pn
andb
loope
xchg
icebp
jl
loop
adc
jge
les
fisubrl
jcxz
shrl
sub
test
iret
xor
mov
outsl
mov
mov
in
movsl
push
cmp
cltd
cmp
xchg
orl
push
cltd
jb
lcall
scas
push
outsb
cmp
fisttps
mov
in
aaa
cmpsb
cmc
sbb
fidivrs
rolb
pop
pop
mov
ja
mov
popf
xchg
frstor
sub
scas
shlb
cmp
scas
cmp
push
sbb
mov
loope
out
dec
pop
stos
add
dec
mov
jge
lods
mov
imul
out
test
pop
dec
xchg
mov
nop
push
loopne
cmpl
xor
jl
mov
popa
fldcw
add
or
push
pop
popf
test
xchg
pop
adc
cltd
hlt
test
dec
add
mov
shl
shll
dec
rclb
out
mov
inc
inc
pop
mull
cli
ljmp
test
or
sbb
mov
stos
pop
nop
pop
addr16
mov
mov
mov
cltd
lahf
sub
xchg
adc
js
mov
pop
push
mov
cmp
xlat
xchg
add
aaa
in
sbb
sti
add
mov
out
outsl
push
dec
inc
xor
add
popf
xchg
jmp
cwtl
sub
in
sub
incl
add
jae
out
push
mov
in
or
lock
cmp
adc
push
rorb
orb
push
sub
sub
cmp
cld
mov
push
cmc
xchg
shlb
sbb
mov
lds
icebp
xchg
push
dec
and
es
adc
arpl
or
xor
sbb
inc
out
pop
imul
add
cmp
or
test
sti
push
pop
andl
or
mov
aas
add
adc
push
adc
mov
sbb
fwait
out
movsl
into
xchg
jmp
xlat
fbld
jle
cltd
push
loope
clc
or
xor
int
and
test
pushf
jl
inc
dec
dec
movsl
push
das
mov
fiaddl
iret
daa
loope
stc
pushl
loopne
jp
push
pop
push
fwait
xchg
mov
cmp
imul
inc
arpl
movsl
dec
cmp
jbe
or
dec
cli
lahf
cmp
sarb
std
xchg
pusha
and
sbb
pop
outsb
mov
push
jnp
leave
icebp
add
mov
aad
cmp
adc
fcomps
jne
sahf
jne
xor
and
pusha
sub
mov
lret
push
pusha
imul
sti
dec
cmp
add
dec
je
pop
adc
jno
pop
adc
cmpl
cli
lahf
push
cwtl
mov
dec
into
mov
cwtd
jecxz
mov
ds
hlt
xor
xchg
jge
inc
in
jmp
jg
pop
jae
push
loope
fs
shlb
pop
dec
pop
dec
cmp
lret
aad
stos
sbb
push
xlat
adc
outsl
fistpll
xlat
jge
test
fistpll
arpl
fs
setg
inc
lret
jno
push
sti
das
jge
fiaddl
stc
jecxz
push
mov
dec
fisubs
cmp
fs
push
adcb
in
inc
jle
add
mov
imul
imull
in
mov
shll
cwtl
adc
je
sub
psllw
jns
in
cld
inc
jb
pop
stc
shlb
adc
fiaddl
andb
xor
push
cmp
daa
es
dec
movsb
ja
pop
int
mov
and
hlt
mov
jne
leave
out
fcmovb
adc
pushf
sbb
cld
jp
inc
mov
fmulp
mov
mov
add
xchg
push
hlt
paddsb
sti
into
leave
pop
adc
and
and
sbb
shr
fwait
push
ret
pop
cmp
and
mov
or
imul
push
enter
sbb
inc
lahf
jecxz
fisttps
xorl
lea
pop
jb
decb
pop
mov
pop
cmpsb
and
push
incl
sub
fisubs
pop
in
xor
mov
or
fwait
mov
lock
inc
imul
xor
sbb
xchg
pop
mov
in
dec
and
loope
dec
adc
aam
sti
repz
mov
mov
cmp
pop
inc
inc
and
imul
jl
outsl
popf
mov
popa
xor
mov
movsb
or
mov
add
lock
push
sti
push
sub
mov
pop
ljmp
xchg
and
pop
inc
stos
pop
jb
movsb
mov
pop
les
arpl
sbb
fadds
daa
xchg
jbe
enter
xchg
clc
and
add
insl
mov
jbe
sbb
or
inc
mov
mov
fstp
addb
test
sbb
sub
inc
mov
push
add
or
divb
call
test
insl
jp
inc
cmpsl
fisubs
mov
icebp
ret
push
cmpsb
bnd
or
jae
sbb
inc
inc
sub
popa
stos
testb
jecxz
mov
xor
mov
jns
loop
stos
dec
inc
jecxz
jo
out
decl
pop
andl
outsb
movsl
and
test
adc
mov
scas
xor
xlat
repz
in
pop
std
xchg
insb
or
fs
push
fsin
fdivl
cmpb
and
stc
mov
xor
ret
xor
and
jmp
push
dec
adc
or
in
stc
inc
jb
scas
inc
xor
lret
jmp
ja
leave
into
pop
lods
mov
repz
test
push
setle
cmp
jmp
cld
xor
imulb
arpl
lods
jp
pop
daa
enter
aas
out
xor
testl
fidivs
das
mov
fists
std
sahf
enterw
mov
test
outsl
push
cli
mov
pop
sbb
mov
dec
daa
out
lahf
push
in
mov
imul
lret
fidivrl
mov
lods
push
fnstenv
mov
dec
pop
loope
pop
sub
adc
add
and
dec
dec
xchg
pop
lcall
or
cwtl
mov
xor
adc
xchg
push
andl
movb
test
pushf
lahf
pop
cmp
js
frstor
pop
lea
aam
sbb
xor
mov
sbb
mov
mov
jge
scas
mov
push
shl
mov
inc
or
ljmp
or
xor
cmc
mov
or
bnd
cltd
insl
lds
daa
and
and
mov
clc
push
sbb
outsl
ds
xchg
cmpl
add
adc
aas
das
out
addb
jns
xchg
xchg
sub
cmp
stc
movb
mov
adc
imul
and
jb
enter
in
fistpll
in
movntps
pop
jg
mov
loopne
adc
pop
in
cltd
adc
sbb
jmp
xor
sub
add
mov
xchg
inc
push
mov
cmp
xor
mov
pop
xor
cmpsb
mov
fsubs
iret
loop
or
sbb
int
jo
pop
out
mov
rcrb
or
insl
imul
mov
jae
xor
sti
or
cmp
pop
sti
mov
jo
das
and
and
insl
cmp
xor
mov
inc
std
xor
sbb
lods
pop
fstpl
sub
mov
mov
cmc
and
test
bound
popa
mov
in
leave
xchg
addr16
sbb
jmp
pop
int3
lods
sbb
add
dec
adc
test
ds
pop
lret
xchg
pop
pop
outsl
or
add
adc
sbbl
push
js
stos
je
test
dec
add
dec
fstps
enter
call
xchg
pop
ret
shrl
xor
dec
push
jle
mov
jle
out
sub
ret
cmp
push
mov
sub
adc
sahf
pusha
les
pop
mov
or
fdivrs
dec
test
imul
loop
dec
lahf
shl
aas
pop
sub
pop
enter
repnz
push
add
jae
fdivr
adcl
cmc
push
xchg
add
cmpsl
leave
xor
test
cld
push
sub
cmp
cmp
paddq
into
and
decb
dec
jecxz
cmp
sbb
fisubs
movsl
fiaddl
push
xor
xchg
sub
hlt
or
in
jno
mov
insl
cmp
mov
adc
shll
or
sbb
xor
adc
in
cmp
clc
inc
cmpsl
dec
inc
cmc
adc
xchg
mov
xor
mov
out
stos
filds
inc
mov
xor
mov
ds
adc
and
es
dec
mov
loop
icebp
stc
ss
xchg
test
xchg
repnz
jmp
and
mov
sub
mov
stc
ret
int
dec
jne
ds
in
jae
xchg
jbe
lahf
lock
lea
jae
sbb
ja
jge
mov
out
scas
fld
pop
cmp
subl
mov
mov
push
xchg
cmpsb
lahf
dec
les
data16
push
rsm
jg
mov
imul
fsubrl
jmp
adc
outsl
and
jae
add
mov
push
rol
sti
add
js
cmpsl
jmp
into
pop
dec
jecxz
push
and
sbb
rcl
adc
mov
dec
idivl
inc
sbb
xor
inc
clc
adc
mov
repnz
pop
sub
pop
fildll
mov
movsb
popf
push
push
mov
mov
imul
pusha
mov
jae
adc
icebp
adc
jbe
adc
add
pusha
shll
pop
das
js
jg
into
adc
push
repz
jbe
or
or
out
sbb
inc
add
lea
pop
add
fsin
dec
inc
enter
ja
sub
push
mov
lods
mov
mov
data16
pop
aaa
sbb
shlb
inc
in
xor
pop
dec
jl
cmp
and
add
mov
aam
out
push
xchg
js
ret
in
sub
jno
jecxz
mov
call
inc
push
pop
pop
jmp
clc
fadd
faddl
out
xchg
mov
andb
fldl
or
jbe
jmp
dec
jno
or
inc
hlt
inc
or
add
and
jo
mov
sbb
dec
jmp
cmp
add
je
lea
cld
xchg
repz
pop
movsb
loopne
mov
or
call
and
outsb
mov
add
arpl
or
popa
insl
mov
loope
and
push
inc
push
rol
inc
pop
bound
sbb
fdivs
das
push
or
sti
sarb
movsb
mov
push
jle
mov
pop
push
lods
movsl
test
push
push
pop
cltd
stos
repnz
jno
xor
jbe
rcrl
mov
lcall
mov
and
dec
pop
lahf
sbb
and
dec
xchg
outsb
fs
lahf
sub
adc
fbld
sub
inc
jmp
mov
mov
scas
cmpsb
imul
arpl
push
mov
mov
fwait
mov
cmp
pop
js
idivl
mov
mov
int3
inc
xchg
adc
pusha
adc
jbe
sub
mov
jp
jno
mov
pop
bound
and
xchg
push
or
xchg
ss
cmpsl
mov
push
stos
pop
es
dec
xor
rorb
sub
mov
cmp
push
test
lods
loopne
daa
out
loop
loope
int3
mov
xor
xor
je
into
push
mov
es
pop
xchg
xchg
pushf
movsb
xorl
aam
das
pop
jp
push
mov
add
stc
xchg
jp
xor
outsb
nop
cwtl
mov
outsl
xor
out
jle
mov
imull
push
fisubs
pop
aaa
in
ds
hlt
int3
xor
xchg
enter
aaa
ss
fs
cmp
hlt
mov
mov
and
dec
lahf
movsl
jb
and
movsl
in
outsb
aas
ror
sub
xchg
lahf
fnstenv
leave
addl
je
mov
lock
mov
out
mov
imul
mov
adc
adc
dec
add
stos
mov
ret
pop
or
clc
repnz
pop
ss
mov
dec
inc
adc
mov
in
pop
pop
inc
cmpsb
aaa
add
cmpb
outsl
mov
mov
sahf
int
fisubl
jo
call
test
and
mov
test
sbb
sub
ficompl
dec
mov
mov
test
popa
pop
mov
mov
dec
dec
shlb
jbe,pn
shr
xchg
mov
mov
lock
cld
out
and
fimuls
test
jns
sbb
faddl
shll
test
jp
scas
mov
mov
pop
lea
inc
inc
sub
gs
sub
sub
pop
xchg
xchg
jl
lea
pop
imul
pop
bound
sarl
shr
or
sub
pushf
dec
sbb
or
sahf
mov
popf
or
mov
pusha
cmpb
icebp
mov
inc
pusha
push
mov
out
lret
push
push
rolb
cmpsl
ljmp
pop
lds
dec
jne
inc
movsl
or
lock
repnz
mov
fcoml
dec
insb
nop
sahf
in
jge
dec
mov
pop
xchg
mov
mov
lret
pop
dec
sbb
data16
rol
jmp
sbb
jl
add
add
sbb
cmovb
loope
bnd
mov
dec
push
scas
and
mov
mov
pop
inc
mov
or
xchg
mov
and
inc
fwait
aas
xor
aaa
in
ss
dec
cmp
call
aaa
jmp
aas
add
sub
dec
mov
push
test
out
jecxz
jb
data16
insl
fdivrl
outsb
inc
testl
or
rclb
dec
aad
jne
lret
xchg
mov
mov
adc
sbb
in
jl
xor
mov
adc
jmp
pop
or
int
xor
pop
mov
das
xor
je
add
mov
push
and
aaa
and
push
roll
dec
mov
mov
stos
jge
add
shl
jae
jbe
pop
fwait
insb
mov
fstps
bound
sti
xor
lock
mov
cltd
push
sub
sbb
fcoml
fbld
inc
jmp
scas
mov
repz
jl
test
repz
and
bound
jbe
add
jecxz
fxch
xchg
jo
rorb
rolb
mov
jne,pn
mov
inc
in
je
sbb
imul
jbe
push
fs
cmc
test
dec
inc
push
sahf
ret
jnp
sbb
call
in
stos
xchg
pop
popa
push
daa
in
xor
ds
mov
cltd
ret
and
inc
mov
test
lahf
lods
add
movsl
sbb
adcb
std
jecxz
aaa
push
add
in
gs
pop
cs
repnz
out
bswap
cmp
xchg
xchg
cld
mov
mov
cmpsb
mov
aam
fwait
mov
sub
lret
cmp
insb
ret
aam
ffreep
push
or
andb
rorl
or
repnz
add
clc
pop
jb
pop
into
idivl
mov
fcomi
xchg
mov
lret
jne
xor
ss
aad
jmp
cmp
test
enter
adc
sbb
scas
fdivrl
pop
lock
repnz
mov
inc
movsl
cli
fs
or
jg
incl
and
fmull
xlat
lahf
repnz
subb
pop
xlat
jg
mov
cmp
pop
jp
aaa
mov
les
push
jae
fnsave
iret
sub
cmp
arpl
or
or
into
cmc
es
and
pop
lods
cmp
arpl
fiadds
divb
int3
int
leave
xchg
xorl
lock
lahf
and
pop
test
test
pop
icebp
repnz
lcall
and
jne
or
or
lret
cli
mov
arpl
gs
popf
xchg
push
fistpl
loope
xor
dec
cmp
mov
aas
sti
sub
je
scas
xor
stos
inc
push
push
icebp
addr16
jno
mov
shrl
mov
jb
fs
add
gs
fwait
dec
xchg
push
call
inc
mov
test
add
cltd
out
pop
pop
pop
fcoms
mov
int
inc
ficoml
test
loop
cmp
ret
pop
arpl
sub
popa
test
mov
lahf
repnz
mov
or
sub
xchg
mov
shll
and
cmp
icebp
mov
movsb
icebp
test
out
dec
shrb
shr
andb
sar
scas
rcrb
lods
mov
jmp
call
jbe
xlat
mov
ljmp
jne
movsl
dec
cmp
mov
and
ds
push
adc
add
stc
mov
cmpsl
mov
inc
lods
test
sti
movsl
out
cltd
pop
push
shrb
xchg
scas
inc
lods
pop
sub
xchg
inc
insb
cmp
subl
add
addr16
sub
out
xchg
and
mov
jecxz
dec
scas
jne
je
add
test
fnstsw
ja
mov
fmul
les
mov
xchg
xlat
add
fstps
lds
sbb
sbb
push
pop
sub
not
lret
imul
hlt
mov
xor
adcb
ljmp
leave
cmp
insl
xorps
or
mov
lods
outsl
dec
insl
mov
enter
mov
pop
inc
xchg
insb
mov
or
and
in
lahf
mov
in
xor
fs
icebp
jp
cltd
dec
mov
dec
dec
aad
ret
sub
pop
or
mov
sbb
inc
shrl
push
dec
fimuls
inc
or
mov
pop
xor
jle
movsl
push
pusha
fiadds
mov
or
dec
cmp
sahf
nop
inc
mov
adc
and
outsl
dec
imul
add
mov
pop
orl
icebp
les
mov
mov
out
cmp
stos
adc
push
in
sbb
mov
mov
or
jp
std
sbb
add
sbb
jmp
pushf
add
push
into
inc
xor
dec
repz
xor
orl
shrl
xor
in
mov
dec
xchg
movsl
rolb
xchg
shl
adc
push
sub
adc
jns
push
mov
xchg
cmpsl
sbb
cmc
adc
adc
test
sbb
mov
dec
test
jo
test
mov
xor
insl
aam
jmp
call
mov
bound
xchg
or
pop
test
in
push
int3
stos
testb
push
pusha
dec
dec
mov
or
mov
fnstenv
mov
inc
dec
sahf
imul
out
xor
icebp
mov
aas
add
call
cmp
fisubl
adc
in
xchg
mov
add
xchg
ret
adc
or
testl
add
je
inc
imul
sahf
test
rorl
adc
test
loope
loop
and
inc
mov
imul
and
in
in
into
sbb
in
fildl
sub
hlt
ljmp
dec
cmpsb
xor
and
pop
sub
adc
sub
mulb
and
rcrb
roll
push
es
outsl
cltd
hlt
jbe
lds
js
add
mov
movsb
addr16
decl
pop
ds
cmp
lock
mov
inc
aas
inc
lods
dec
cwtl
imul
cli
int3
mov
cltd
cmpsb
jge
testl
sbb
in
push
mov
or
push
pusha
xchg
mov
pop
div
imul
jnp
scas
and
push
inc
outsl
decl
sbb
and
xor
sub
mov
xchg
mov
mov
push
enter
mov
shll
add
xor
aas
push
test
cmp
fildl
faddl
in
or
fsubr
mov
adc
push
push
mov
daa
mov
cmp
dec
enter
mov
dec
add
mov
cld
andb
sbb
push
xor
pop
cmp
into
or
push
iret
push
sysret
nop
adc
xchg
dec
fdiv
mov
out
shrl
add
or
xchg
shl
xchg
scas
ret
xchg
cmp
add
mov
add
ret
push
fnstcw
jge
sbb
fwait
nop
push
xor
arpl
pop
mov
xchg
bound
hlt
icebp
lret
call
test
aam
movsb
mov
test
int
aad
test
pop
dec
jno
subl
pushf
push
rclb
ss
or
mov
inc
dec
jp
inc
shll
mov
xor
add
test
push
pop
popf
mov
pop
stos
pop
loopne
cmpsl
dec
scas
dec
sbb
std
mov
out
pop
les
jb
aas
imul
add
xchg
and
pop
shll
sti
adc
into
sbb
and
xor
dec
inc
jo
sbb
inc
mov
fwait
imul
push
cmp
lock
fs
pop
fucomi
js
add
jmp
and
sbb
roll
fwait
sbb
call
fsub
or
sti
and
pop
imul
mov
sbb
sub
loope
xor
lods
int
sbb
leave
test
jl
shrb
cmp
adc
dec
cmc
and
aad
aad
fistpll
push
lret
jl
pop
scas
jmp
daa
or
sbb
les
add
arpl
add
mov
insb
mov
movsl
addr16
call
lahf
xor
jp
xchg
cli
aad
stos
decl
data16
jle
pop
dec
mov
mov
xor
mov
push
les
andl
jmp
stos
rcrl
lahf
or
movsl
in
hlt
cmp
pop
lds
dec
inc
mov
pusha
lods
leave
ret
sbb
fwait
sbb
jp
pusha
fmull
cmpsl
mov
inc
cli
lret
flds
xchg
scas
xchg
pop
ds
popf
pusha
cmpl
outsb
ror
pop
inc
and
outsl
jae
pop
fdivl
out
jno
imul
cmpsb
scas
loope
mov
and
add
push
jmp
pop
in
add
pushl
dec
test
cmp
into
popa
mov
mov
mov
pop
repz
push
repz
insb
std
xor
arpl
leave
sbb
mov
dec
or
fnstsw
xorb
mov
aas
sub
mov
mov
ljmp
fsubp
std
push
xor
push
in
jne
adc
rcl
inc
and
pushf
sub
mov
dec
add
cmovge
jl
inc
push
mov
stos
roll
in
popf
mov
inc
rolb
push
cli
aaa
popf
lret
push
xchg
cs
fisttpll
cwtl
shrl
mov
aam
add
or
inc
movsb
aam
push
dec
sahf
xchg
xor
xchg
xor
fsubrs
addr16
dec
test
sub
jno
popa
repz
adc
pop
lret
xor
fsubs
inc
dec
cmpsl
shl
mov
mov
mov
cmp
loopne
xchg
xchg
sub
cmpsb
xor
or
push
scas
enter
out
nop
pop
jge
add
dec
jge
jecxz
leave
mov
pop
call
cmpsl
lods
xchg
mov
adc
imul
mov
lcall
cmp
cmc
fistpll
call
fdivrs
mov
roll
cmc
out
dec
shlb
cwtl
push
mov
add
or
sahf
or
dec
cmpsb
inc
scas
adc
inc
scas
inc
lods
lret
sbb
adc
mov
call
loopne
push
aam
jl
xchg
pushf
or
xchg
negl
fcoms
imul
add
jns
add
add
sub
inc
stc
inc
add
pop
push
cmp
popf
std
mov
scas
sub
push
call
out
mov
test
stos
mov
clc
shl
sahf
mov
mov
xor
push
or
fldt
pop
pop
sbb
pop
mov
loopne
add
mov
sub
push
xchg
mulb
xor
test
movsb
movsl
cld
sub
inc
insb
adcl
xor
icebp
stos
mulb
mov
int
cmp
mulb
dec
ss
add
arpl
mov
mov
lock
push
addr16
mov
call
pop
xchg
decl
add
cmc
dec
fiaddl
jno
cmp
and
subl
mov
ss
pop
add
push
xchg
test
sub
jbe
push
jg
shlb
jmp
ja
scas
and
sbb
cltd
mov
jmp
push
jecxz
mov
adc
xchg
fidivrl
aad
cld
cmp
cmc
xchg
push
dec
add
jnp,pt
xchg
lock
dec
mov
lea
out
jae
sahf
adc
or
test
dec
lahf
jle
jns
inc
test
es
clc
sbbl
repz
mov
mov
shlb
dec
dec
outsl
icebp
add
aad
dec
mov
shll
in
cmp
cs
hlt
repnz
xchg
dec
iret
fs
dec
js
movsl
mov
sbb
shl
mov
loopne
lret
into
ficomps
and
jne
cmpsb
sbb
add
rorl
ds
in
mov
es
sbb
inc
pop
dec
xor
daa
mov
mov
addps
outsb
push
fldenv
mov
mov
jecxz
sub
mov
repz
mov
add
xor
jl
adc
arpl
xchg
sti
mov
pop
inc
es
sub
adc
inc
std
out
or
cmp
scas
pop
add
push
mov
sub
ret
and
jle
nop
jp
lcall
fisttps
mov
or
lret
shrl
or
xor
cs
inc
imul
inc
ret
daa
and
jg
pop
cltd
sub
xchg
mov
jmp
dec
in
add
mov
pop
xchg
mov
cmp
jo
bound
inc
xchg
dec
push
pop
pop
data16
loopne
inc
test
sbb
xchg
mov
fs
xor
mov
dec
push
mov
add
dec
jge
sahf
push
push
xchg
inc
add
push
pop
dec
mov
hlt
test
and
adc
mov
orl
clc
or
dec
push
lods
pushf
lret
insl
cmc
mov
in
or
movsl
inc
inc
movsl
ljmp
xchg
mov
fldcw
push
pop
nop
fbstp
xchg
jne
xor
push
and
testl
ljmp
sbb
jmp
hlt
cmp
and
dec
push
test
mov
int3
mov
mov
fimuls
inc
sbb
or
loop
cmp
lock
pop
repz
jle
andb
out
repz
test
lock
aam
push
dec
test
dec
out
push
rolb
out
addr16
aam
mov
xchg
jnp
je
inc
movsb
les
stos
cli
fcomp
cmp
insl
mov
outsl
pop
cmc
xchg
sub
pop
mov
sbb
dec
mov
mov
popl
outsl
lea
jo
flds
and
adc
or
and
imul
inc
and
hlt
bound
mov
fdivs
js
daa
jo
jge
mov
pop
adc
mov
jmp
cmp
rclb
out
out
push
popa
sub
jns
jecxz
adc
shll
cmpsb
ret
dec
push
fs
test
ret
aas
or
jg
rcl
xlat
addr16
lea
or
inc
cmp
mov
call
or
cmp
or
cmp
xor
cli
dec
sahf
ret
out
rolb
cmpb
push
pop
pop
mov
call
push
dec
lea
jae
xchg
cmc
fs
inc
or
mov
aad
dec
ja
testb
mov
rcll
sbb
mov
xchg
loopne
push
mov
pop
or
lods
arpl
push
daa
pop
or
xchg
cmp
ret
sahf
mov
notb
mov
lea
loope
lret
push
cmovs
mov
ja
mov
stc
leave
inc
mov
gs
dec
fcoms
repz
jns
fs
and
insb
add
cs
setge
sub
or
and
shrl
mov
cwtl
popf
call
pop
loop
enter
lret
je
outsb
lret
mov
inc
test
xor
pop
push
adc
sarl
dec
mov
sti
jle
jle
lahf
inc
mov
adc
hlt
mov
addr16
xchg
leave
adc
or
outsl
aaa
lret
ss
clc
sti
pop
inc
pop
ja
push
outsb
rcll
pop
mov
ret
insl
pop
adc
hlt
jnp
mov
adc
cmp
fwait
mov
mov
xor
add
xor
cmp
cmp
xor
jecxz
lock
lods
mov
mov
jge
test
adc
out
mov
rcr
outsl
jle
in
jg
xor
adc
in
outsl
sub
shlb
lret
and
xchg
pop
popl
push
imull
outsb
test
cwtl
fwait
add
out
ljmp
ja
pop
cmp
ss
inc
inc
push
ds
andb
cmp
mov
loopne
mov
xor
sub
sub
add
mov
mov
mov
adc
clc
incb
std
xchg
es
outsl
jmp
aad
xchg
loope
xor
and
xor
push
test
out
pop
aad
jbe
scas
push
shll
lds
adc
inc
dec
mov
cs
adc
or
mov
adc
inc
and
push
mov
shl
cmc
xlat
mov
hlt
insl
jbe
add
aaa
cmp
inc
int
popa
lods
cmpsl
cmp
sub
and
scas
lods
sbb
inc
push
xor
fildll
pop
data16
add
lods
andb
lcall
xchg
loope
adc
or
jle
adc
lret
add
call
iret
xor
push
adc
scas
add
dec
mov
xchg
or
and
xchg
xor
pushf
push
jbe
movsl
add
cwtl
mov
inc
or
or
iret
lods
inc
in
jns
ja
add
out
movsl
psubb
cwtl
hlt
cmp
mov
fisubrs
lahf
mov
xor
mov
loope
nop
cmp
push
mov
jbe
mov
sbb
xlat
xchg
shl
flds
sti
hlt
pop
cs
push
xorl
push
clc
ror
xor
mov
ficoms
test
ja
sbb
js
add
fimull
rcrb
and
pushf
in
inc
ficoml
add
int3
pushf
xchg
jns
pop
jo
jl
mov
into
lret
sti
dec
sbb
xchg
sub
int
lock
pop
clc
out
fsub
pushl
and
cli
fsubs
outsb
xor
sub
ja
push
cmp
jno
outsl
pop
leave
daa
xchg
pop
ljmp
mov
xor
in
mov
jne
bound
inc
pop
and
lds
aas
xor
fstl
cmc
lods
xchg
psrad
and
outsb
mov
arpl
or
jg
daa
out
arpl
mov
loope
cltd
stc
mov
xor
sbb
gs
mov
aad
and
and
sti
jmp
ds
pop
cs
call
add
out
lds
or
pop
ja
test
xchg
mov
enter
jns
jne
inc
xor
mov
mov
jmp
or
cs
movsb
and
adc
add
add
add
add
add
dec
sub
adc
add
jmp
mov
add
insb
pushf
add
dec
inc
dec
push
xchg
mov
dec
cltd
sbb
movsl
xor
add
cmpsl
out
into
aam
pop
push
pop
mov
pop
sahf
add
iret
sbb
shrl
cltd
je
mov
outsb
mov
mov
je
movsl
rcl
pop
mov
mov
push
shr
mov
repnz
stos
mov
xchg
hlt
insl
call
push
lds
mov
divb
xor
sub
mov
cmpsl
test
add
cmc
dec
mov
sbb
dec
or
adc
cltd
inc
and
mov
lods
lahf
xor
mov
call
in
cltd
xor
iret
xchg
cmp
cmc
jne
lea
cwtl
imul
aad
or
jmp
repnz
cld
enter
mov
aam
adc
lret
sub
mov
sar
out
adc
xchg
mov
sbb
push
or
or
outsb
ds
jp
xchg
sahf
cmpb
jnp
sub
mov
pushf
scas
xchg
add
xor
fadd
inc
cmp
or
aas
or
pop
sub
cltd
mov
xchg
adc
insl
sbb
push
add
jmp
or
outsb
cmp
test
push
pop
mov
or
and
jno
jb
shll
orb
sbb
mov
movsb
in
sahf
roll
lcall
imul
imul
xchg
rcrb
rclb
faddl
pop
adc
pop
dec
jle
sub
pop
sbb
jns
sub
test
int3
inc
cmp
lret
xor
sbb
jno
mov
cmpsl
dec
imul
mov
mov
pop
ss
and
xor
imul
out
movsl
cmpsl
jmp
mov
sbb
pusha
stc
push
ja
and
rclb
mov
adc
inc
call
loope
jle
add
mov
das
cmp
sahf
frstor
lock
cmpl
jecxz
icebp
sbb
js
enter
xor
shrb
enter
ds
aaa
js
rolb
mov
xchg
inc
dec
xchg
sub
xor
push
aam
sub
push
dec
pop
sub
and
ficoml
mov
loope
insl
sbb
jno
and
pusha
mov
adc
cld
imul
lods
repnz
xor
push
gs
mov
mov
or
es
pop
cmp
ret
cs
or
dec
sbb
jge
jg
je
in
dec
rcrb
mov
jne
pop
add
lcall
jge
pusha
push
jae
ret
jo
loopne
and
push
fisubrs
das
or
lret
jmp
cmc
pushl
cmp
xchg
adc
inc
sbb
scas
addl
pushf
sub
jmp
inc
sbb
cwtl
xchg
mov
pop
or
imul
sbb
call
mov
outsl
jp
xchg
movsb
and
jle
inc
rclb
push
fidivl
ds
inc
inc
lods
jbe
jg
mov
fildll
ret
aad
mov
mov
outsl
or
ret
cmc
push
pop
sbb
js
xchg
add
cmp
add
rcll
sbb
adc
jno
xchg
inc
ds
test
leave
sbb
add
xchg
pop
arpl
test
popl
xchg
insl
arpl
ljmp
or
cmp
push
nop
cmpb
sbb
decb
cmpsl
sbb
negl
inc
scas
fnstenv
popa
lea
sarb
test
fisubs
sub
pop
test
pop
sbb
jbe
int
lret
enter
adc
or
inc
and
ret
sub
sbb
mov
scas
aas
jmp
xchg
ljmp
mov
sub
loopne
scas
pop
mov
adc
pop
gs
add
mov
push
xchg
pop
idivl
test
rcr
push
xchg
stc
add
sub
cmpsb
cwtl
sbb
or
mov
ja
dec
push
nop
arpl
pushl
mov
jnp
out
xchg
fs
rclb
pop
mov
ds
aam
jo
outsl
or
xchg
jmp
push
jg
enter
lea
lock
movsl
jle
mov
aas
pop
loop
or
inc
pushf
std
lods
mov
in
push
jbe
int3
xchg
xor
imul
cmp
dec
ret
aam
mov
rcll
pop
pop
jb
push
loopne
xor
jnp
fists
mov
mov
into
add
stos
lods
pop
popa
mov
pushf
pop
call
insb
lock
jb
add
mov
xchg
cld
mov
pop
cs
adc
jns
mov
add
lea
pop
or
add
pop
lds
or
pop
mov
out
int
les
ss
fucom
pop
jp
adc
jle
mov
ret
out
dec
cmpsb
jno
or
pop
jns
loopne
jo
mov
push
out
mov
mov
out
pop
nop
jmp
cld
xchg
mov
push
jb
ja
sbb
xor
push
mov
and
ja
mov
mov
loope
lcall
les
lds
push
inc
jecxz
xchg
ret
call
push
fcoml
mulb
xchg
test
lds
xchg
pop
aam
jnp
cmpsb
push
xchg
outsl
mov
aas
sub
pop
popa
mov
mov
push
push
xchg
and
sbbl
xor
fldenv
dec
comiss
mov
push
enter
pop
lret
call
fidivl
cmp
fwait
xor
xchg
fnstenv
repnz
mov
push
shl
and
fcompl
mov
jecxz
cmp
adc
jl
rclb
out
inc
stos
repz
test
sbb
pop
push
stc
dec
cld
jmp
clc
mov
lret
clc
mov
into
sbb
push
rcll
xchg
pop
xchg
lea
test
icebp
sub
inc
sbb
mov
xchg
mov
cmp
dec
inc
xchg
fldcw
rcrl
cwtl
into
xorb
fwait
sub
mov
sbb
or
sub
jl
dec
aad
mov
fdivs
imul
xor
mov
outsl
push
adc
hlt
imul
sub
xchg
sub
sub
stos
push
fistl
ret
push
cmpsb
lods
lods
imul
mov
xchg
pusha
out
in
push
xchg
push
icebp
sub
dec
mov
es
xor
and
jl
clc
mov
or
and
dec
xchg
jne
push
clc
pop
lds
ficompl
je
xlat
jb
ja
mov
inc
mov
popa
cltd
sub
insb
push
jae
out
out
scas
inc
in
xor
mov
fsubs
repz
push
inc
push
xchg
in
popf
mov
mov
jo
push
push
or
or
inc
mov
xlat
sbb
shrl
stos
xchg
and
fidivl
movsl
mov
test
call
clc
push
mov
rcr
lcall
icebp
fmul
pop
loop
icebp
repnz
mov
jae
add
mov
ss
es
jae
das
jns
ret
ret
fs
insl
movsl
add
fldcw
shrb
loop
dec
repz
movl
ljmp
fimull
pop
xchg
pop
stos
adc
lock
into
sub
pop
and
dec
inc
xor
adc
xor
mov
mov
ficoms
dec
lret
mov
or
inc
adc
cmp
test
adc
jmp
pushf
cli
imul
lcall
or
jecxz
sub
lods
xchg
add
mov
push
cmpl
xchg
jns
push
in
pop
mov
xor
cmp
sahf
mov
lcall
jae
mov
push
iret
out
fsts
js
cmp
mov
frstor
jge
mov
stos
mulb
leave
dec
imul
ds
repnz
xchg
sbb
call
adc
out
ds
sub
mov
push
shlb
add
dec
jecxz
hlt
outsb
push
dec
in
fdivs
mov
inc
lock
mov
adc
add
cmp
mov
jb
jmp
mov
pop
or
pusha
mov
cmp
arpl
mov
or
xor
or
out
cld
ret
mov
sub
dec
sbb
cli
and
es
dec
sti
sbb
imul
add
or
cli
call
out
pop
pop
sub
adc
in
cmpsl
cmc
and
inc
in
push
and
cmp
or
lahf
fnstcw
repz
lock
inc
jne
sbb
mov
pop
aam
iret
xchg
jl
popa
call
fwait
ja
cmpsl
repz
inc
xchg
orb
mov
dec
xchg
fchs
push
or
int3
cmp
dec
jb
mov
jmp
lret
daa
dec
cmp
sahf
sbb
xor
xor
inc
in
mov
in
std
leave
mov
dec
mov
push
shrl
outsb
insb
nop
sbb
lea
and
pushf
mov
cmpsb
sbb
adc
fdivrp
pop
mov
in
and
out
dec
pop
lret
dec
add
xchg
xchg
cmc
popfw
lret
push
sahf
jmp
jno
inc
arpl
outsb
cmp
fcmovnbe
loope
in
pop
jne
call
pusha
dec
xchg
sub
lret
xchg
mov
mov
pop
mov
das
lods
push
mov
insb
cwtl
mov
int
xor
subb
adc
xchg
js
insb
aas
repnz
inc
jmp
xorb
cmpsb
and
sbb
loope
in
sub
lret
jne
fnstsw
xor
jge
push
imul
adc
ficomps
sub
jbe
js
les
mov
jnp
lods
push
movsb
test
fcmovnu
cwtl
out
sub
arpl
mov
pop
sub
pop
dec
sub
mov
add
into
add
cmp
lods
adc
es
mov
and
pop
lret
lcall
or
jae
das
jbe
insl
les
mov
pop
mulb
rolb
sub
xchg
jns
xchg
mov
lods
push
sarl
in
mov
push
xchg
lahf
outsb
inc
les
dec
push
ja
cmc
rol
sbb
jno
push
mov
add
adc
test
dec
test
mov
sbb
test
sbb
inc
fdivs
mov
mov
add
adc
jg
sbb
gs
mov
cmpsl
or
test
dec
test
pop
arpl
lret
sbb
sbb
jo
adc
lret
dec
sub
dec
sbb
clc
inc
inc
pop
call
movsb
add
jns
popa
repnz
movsl
sub
ljmp
cmp
and
cmp
or
mov
out
ja
push
mov
in
lods
in
xor
cmp
pop
aas
lock
stc
enter
pop
and
scas
ljmp
sti
int3
xchg
adcl
sbb
shlb
mov
mov
dec
jae
fisttpl
sahf
or
inc
repz
out
mov
insb
sbb
mov
pop
les
fstl
mov
lea
cmp
pop
imul
mov
sub
aad
aaa
imull
and
in
mov
lods
push
adc
push
mov
jl
lods
mov
lret
addb
fstps
and
inc
inc
fcomps
pop
push
lock
xchg
and
bound
sub
cwtl
add
fs
rolb
dec
es
test
nop
inc
fs
lods
lret
fucomip
loopne
stos
jb
popf
popa
jns
sbb
mov
in
cmp
mov
add
xchg
int3
dec
pop
add
pop
add
jl
mov
mov
inc
shll
adc
inc
push
pop
pop
sbb
iret
testb
mov
sbb
stos
add
jo
mov
push
enter
rorl
cmp
sarl
pop
xor
repnz
or
std
xor
cs
jns
cmp
dec
sbb
ljmp
pop
aam
movsb
je
repz
test
sub
imul
pop
jo
lods
aam
jae
mov
in
ss
xor
cs
and
add
sbb
orb
xor
cmp
add
test
sbb
jno
scas
lods
add
loopne
or
dec
xor
aad
xchg
int3
enter
lds
test
les
enter
mov
dec
mov
mov
adc
jns
nop
mov
adc
push
xchg
and
aam
mov
in
pop
xor
xchg
lods
ja
int3
cmp
cmp
std
adc
testl
jb
shl
cmpsb
es
add
cmc
ljmp
mov
cwtl
testl
aad
movsl
scas
mov
les
xchg
xor
or
loopne
leave
xchg
mov
icebp
scas
xchg
mov
leave
in
mov
xchg
outsb
inc
sub
jmp
jp
je
cs
nop
jmp
adc
jnp
fisubs
pop
rcrb
pop
sub
faddl
ds
and
pop
push
pop
aad
sbbl
outsl
xchg
cltd
mov
push
inc
add
mov
imul
movsl
cmp
pop
bound
fwait
mov
les
xchg
xor
nop
xchg
mov
push
aad
jo
shlb
outsb
pop
imul
mov
fwait
mov
lds
enter
or
xorb
sub
test
sbb
mov
pop
jp
pop
xor
shlb
insb
mov
stos
push
dec
imul
inc
mov
and
mov
or
test
js
jae
xchg
pop
mov
or
test
and
sti
sub
cmpsl
or
sbbb
pop
push
mov
or
jb
insb
outsl
mov
xor
leave
push
sbb
add
pushf
cmp
pop
fstl
adc
cmpsl
xchg
insl
lock
push
sarl
lret
cltd
mov
jecxz
in
dec
and
or
push
xchg
xor
in
fcoms
lods
popa
and
xor
pop
in
mov
pop
xchg
iret
loope
xchg
jnp
in
es
cmpsb
cmp
push
ret
push
pop
jmp
xchg
daa
cmc
jecxz
outsb
jne
sub
roll
outsl
fwait
ss
lods
int
mov
jo
jle
fs
sbb
push
arpl
pusha
ret
std
aas
lds
mov
xlat
mov
mov
adc
dec
mov
and
add
stos
mov
sbb
inc
jno
cs
negl
ljmp
xor
xchg
leave
daa
out
in
mov
and
mov
aaa
insl
cltd
fisttpll
sbb
movsl
xchg
inc
pop
cwtl
fs
outsb
adc
sub
nop
cs
mov
sub
or
push
push
lock
leave
or
call
pop
fwait
iret
and
imul
jae
int
mov
xchg
and
int3
jg
inc
ds
cmp
in
call
add
push
jno
sbbb
mov
das
rcrb
stc
mov
fucom
xchg
push
jae
sub
push
xchg
jecxz
cmp
pop
adc
lock
dec
dec
orl
push
sbb
xorb
ds
push
daa
inc
test
aas
jl
icebp
sub
add
fstpl
sub
cmpsb
push
sbb
push
mov
ds
mov
knotw
inc
jnp
adc
aas
xchg
or
or
lcall
push
mov
sbbl
mov
cli
mov
dec
and
cld
mov
in
repnz
into
sub
orl
popf
movb
test
insb
pop
and
mov
sbb
outsb
arpl
jp
xchg
xchg
loopne
in
es
jb
cmp
push
cmp
std
divb
decl
cmp
cltd
jmp
push
cmpsl
adc
les
test
mov
push
xor
dec
push
sbb
aaa
adc
pushf
xchg
iret
cmpsl
or
loope
int
mov
jmp
xchg
je
sbb
lret
jmp
fwait
xchg
aas
inc
and
push
jmp
mov
mov
sub
push
lahf
or
in
add
pop
cmp
pop
mov
cmp
popf
lods
add
xchg
fiadds
pop
jl
lods
or
hlt
push
sti
cs
jnp
testb
cmp
cld
push
or
sub
sahf
mov
arpl
xlat
pcmpgtd
mov
jns
arpl
ds
mov
inc
mov
mov
adc
mov
xor
pop
lods
loope
aaa
fwait
mov
in
mov
adc
lahf
adc
sahf
das
ret
xchg
jb
out
movsl
add
mov
imul
xchg
pop
mov
cwtl
inc
ret
push
arpl
dec
xchg
or
leave
lods
shrb
orl
jg
sub
enter
imul
out
dec
inc
aad
pusha
into
pop
jl
pop
out
push
xchg
jnp
dec
push
pop
cmpsb
cld
pushf
dec
pop
fs
rcrl
ja
mov
jl
add
int3
aaa
stos
mov
sbb
mov
adc
inc
lret
sub
scas
mov
fdivl
lea
shlb
insb
loop
mov
rcr
cwtl
popf
test
fs
lds
cwtl
push
sti
nop
test
xor
ljmp
xchg
pop
mov
int
es
sbb
adc
test
push
push
dec
sub
mov
push
add
cmp
mov
jo
mov
cmp
imul
jb
outsl
aaa
add
repz
add
add
test
inc
pop
stc
cli
dec
jl
jbe
or
or
lods
and
sub
stos
cmc
gs
cmpsb
les
rcrb
sub
int3
cld
hlt
mov
xor
cmp
loope
pop
mov
pop
call
imul
cmpb
or
cmp
adc
or
int
jnp
pusha
fbld
ljmp
aas
movsb
inc
push
push
movsl
loope
cmpsb
xor
mov
mov
or
bound
xchg
clc
sub
pop
fsts
and
push
sbb
enter
sub
cmp
fcmovne
js
iret
xor
mov
fisttpll
xchg
pop
mov
dec
adc
iret
pop
jb
inc
push
cmp
in
mov
int3
lret
pushf
jb
pushl
repnz
fnstsw
xor
or
in
lds
mov
rcll
mov
nop
jne
push
and
dec
jnp
push
cmpsb
mov
pushf
add
mov
pop
push
xchg
jmp
xor
mov
in
pop
inc
movsl
mov
insl
movsb
cmp
mov
repz
ja
inc
pop
mov
clc
mov
das
mov
out
inc
or
testb
iret
scas
adc
rcrl
cmc
mov
clc
mov
sbb
jns
arpl
mov
std
arpl
int3
scas
jmp
and
mov
dec
mov
pop
add
jnp
mov
popf
es
xor
jecxz
dec
imul
data16
pushl
js
push
in
xchg
xlat
xor
or
in
icebp
scas
inc
xlat
jne
adc
fstpl
test
es
stos
in
push
je
xor
shrb
icebp
test
adc
dec
xlat
push
outsl
mov
adc
pop
test
xchg
cmp
mov
pop
outsb
and
mov
inc
mov
iret
clc
mov
psraw
jge
insb
push
cmpsb
dec
test
daa
lea
xchg
adc
bound
jmp
push
mov
arpl
sub
icebp
pop
xor
push
mov
dec
adc
test
xchg
popf
sbb
cmpsb
call
sbbb
repz
sub
ss
adc
shlb
pop
adc
dec
inc
mov
mov
jg
pop
jmp
xchg
fildl
mov
adc
sbbl
sbb
cmp
pop
ffree
popa
cs
inc
cmpl
js
mov
pop
mov
cmp
ret
pop
fisttps
mov
pop
cmpl
movsb
jmp
pop
subl
imul
in
stos
in
lds
dec
pop
sbb
cwtl
and
in
xchg
cmp
jb
add
adc
sub
pop
in
inc
xor
mov
sub
ja
sbb
adc
fistl
cltd
hlt
mov
push
xor
fsubl
and
sub
pop
sub
sbb
adc
jmp
inc
ficoml
in
fstpl
jo
sbb
dec
popa
fwait
pop
dec
repnz
and
sub
bound
jno
push
sub
push
dec
mov
nop
jbe
inc
aam
sbb
pop
int
xor
adcb
jb
testl
mov
cmpsb
inc
loop
setle
imul
push
or
popa
gs
cmp
mov
ljmp
cs
adc
lret
das
insl
shlb
mov
adc
mov
daa
mov
adc
inc
inc
dec
push
xchg
pushf
mov
xchg
rol
push
xchg
dec
cmc
jbe
dec
jbe
cmpb
or
popa
sarl
push
jns
mov
cmpsl
push
loope
push
testb
jno
pop
test
out
loop
iret
sub
xchg
pop
sti
push
cmp
adc
push
pushf
mov
and
sbb
cs
fcoml
fwait
push
bound
mov
stos
loopne
mov
push
fnstenv
clc
sbb
jecxz
xchg
pusha
jo
das
inc
push
mov
fucomip
inc
aad
je
xor
ljmp
jle
dec
fidivrl
cld
scas
fwait
outsl
cli
and
dec
cli
push
lods
lods
cmc
hlt
and
test
pop
sub
pop
pcmpgtd
pop
lret
dec
in
out
xchg
pop
lea
fnsave
cmpsb
push
pop
dec
arpl
mov
jae
cmp
jno
mov
out
inc
fdivl
test
insl
xchg
outsb
fs
mov
push
jg
movb
cmpsb
pop
and
push
inc
mov
in
out
jno
insl
cs
repnz
sbb
xor
sub
or
mov
jbe
daa
sbb
sub
sub
sub
or
les
sbb
sub
bound
jl
pop
push
ficoms
jge
inc
lea
rorb
mov
stc
icebp
push
pushf
outsb
stos
outsb
cmp
je
aad
adc
push
mov
cmp
and
push
mov
subb
aas
sub
les
push
hlt
pushf
iret
lea
mov
or
insb
test
mov
ret
add
aam
loopne
push
cwtl
idivb
and
sbb
cmp
mov
mov
sub
sarb
adc
icebp
jne
adc
push
push
mul
and
or
lds
pop
fsubrp
push
test
repnz
mov
movsb
pop
aam
jne
xchg
mov
lret
jp
cmp
cmpsb
jo
or
enter
dec
pushf
pushf
lods
pop
pop
mov
push
test
iret
fs
lods
mov
test
cmp
dec
imul
push
mov
ret
cltd
mov
fs
xor
and
shrb
cs
add
or
sahf
daa
jg
and
shrb
cmp
lret
xchg
jp
mov
pop
andb
rcl
cmpsl
cwtl
mov
in
shlb
repz
push
dec
jne
xchg
inc
sub
mov
inc
cmp
scas
pop
iret
sbb
test
sub
xchg
xchg
xor
add
ja
les
mov
test
out
cmp
jge
dec
movsb
test
popa
pushf
mov
sub
fcomps
call
adc
cltd
jle
adc
pusha
fdivr
push
mov
mov
jmp
cmp
xor
xchg
fwait
out
pop
incb
or
ja
loope
jmp
and
cmp
push
inc
aaa
mov
or
test
mov
inc
sahf
inc
shl
std
mov
fistpll
pushf
pop
and
push
stos
sub
cmp
insl
das
fs
cmp
mov
cld
adc
fsubs
popl
pop
test
and
pop
mov
shll
int3
mov
ret
and
jmp
frstor
push
fisubs
scas
int
cltd
test
cs
cli
adc
sub
mov
sti
push
mov
sbb
jnp
out
jne
fsts
sub
lcall
jecxz
push
out
xor
dec
inc
sub
add
dec
jp
xchg
mov
stos
adc
popa
iret
or
lea
cltd
adc
jb
dec
int3
ficoms
jb
icebp
xchg
push
fbstp
lods
imul
push
jae
sti
out
lret
repz
or
lcall
das
imul
in
out
pushf
bound
jo
mov
addr16
and
ljmp
leave
and
xchg
fcomps
ret
testb
testb
pop
enter
in
subl
jg
ja
sbb
and
cs
popa
xchg
pusha
jge
repnz
repz
cltd
js
jmp
jb
cmp
xchg
inc
pop
xchg
mov
cmp
mov
cwtl
cmp
mov
cmp
push
sub
add
mov
push
sub
ja
inc
or
lcall
aaa
adc
cwtl
cmpsb
mov
fisubrl
lods
inc
sbb
push
jne
ds
icebp
dec
sub
fstps
pop
pushf
push
mov
sub
jo
outsl
add
rolb
sub
js
gs
gs
imul
inc
jp
sub
and
in
inc
adc
xchg
xor
mov
or
mov
ss
cmpsb
ja
inc
andl
xchg
push
mov
adc
push
popa
jge
mov
cwtl
jge
repz
inc
dec
xor
jge
jne
and
call
jne
lret
jns
nop
js
aaa
jp
push
xchg
pop
test
jl
incl
jne
test
rclb
int3
adc
xor
sbb
inc
pushf
or
fcmovnb
push
cmp
stc
mov
adcb
cmpsb
sub
aam
jb
jbe
cmpsb
or
test
pop
imulb
push
fidivrs
add
jne
fisubs
insb
or
cs
or
mov
jbe
jle
dec
in
cmp
divl
mov
jno
and
js
xor
sbb
mov
in
dec
jb
mov
fbstp
in
fistps
shll
fbld
and
xor
add
mov
fs
lcall
mov
inc
ret
dec
adc
ret
push
adcb
ret
pushf
lock
jmp
mov
push
addl
mov
mull
mov
mul
movsl
aam
popf
in
pop
jo
bound
sub
pop
adc
fnstenv
cwtl
fucom
inc
dec
or
add
sub
xor
cmp
in
cwtl
jb
in
mov
cltd
mov
int3
mov
insl
add
jne
mov
mov
jo
cmp
scas
int
or
jl
es
clc
pop
cld
dec
push
and
dec
in
dec
mov
scas
dec
js
in
icebp
dec
xor
jg
push
inc
inc
std
lcall
dec
pop
test
xchg
inc
jb
shl
pop
jecxz
jne
jge
cmp
dec
pop
mov
dec
mov
cwtl
pop
inc
shrb
mov
cwtl
hlt
pop
xlat
test
cltd
aaa
pusha
mov
inc
and
pop
lods
lods
call
mov
out
out
int
sub
jo
loopne
outsl
mov
fcmovu
cmp
inc
lods
outsl
push
cltd
mov
mov
fidivs
and
out
gs
dec
movsb
pushf
pop
sarl
inc
mov
add
push
dec
adc
ds
and
pop
andl
pop
sub
enter
insl
mov
xor
push
pop
push
jae
mov
push
out
adc
sub
fcomip
or
jl
mov
testb
cld
repz
in
pop
jo
pusha
fs
push
mov
les
jnp
and
cmc
mov
adc
int3
jno
mov
mov
rorl
jmp
push
xor
mov
cmpl
mov
mov
dec
cmp
pop
mov
cmp
inc
adc
ror
or
addr16
jns
loop
push
sbb
and
add
test
add
jb
cmp
fcomps
cmp
je
adc
ret
adc
mov
pop
inc
push
out
inc
fxtract
lret
ret
push
cld
fcmovne
sub
mov
xchg
fldl
or
push
mov
push
aaa
push
leave
push
lock
xor
out
stc
inc
shl
int3
adc
test
call
jge
shrb
cmp
dec
jo
xchg
in
les
aas
and
mov
lahf
fidivrl
fdiv
sbb
scas
pusha
popa
and
sub
stos
aas
inc
pop
pop
mov
jnp
aas
imul
mov
or
je
sbb
leave
sbb
pushf
sbb
cmpsl
arpl
fadd
nop
xor
pop
cli
mov
add
fs
sub
sbb
dec
pop
andl
mov
sbb
push
jb
inc
es
es
jnp
ljmp
xor
pusha
insb
ds
lret
mov
loopne
cs
insl
into
inc
mov
mov
sbb
inc
je
adc
js
or
icebp
sub
cmc
insb
lods
fstps
or
call
adc
mov
in
in
push
and
icebp
push
stos
ret
lahf
sub
popf
aam
push
push
xor
test
lahf
sbb
xlat
pop
jnp
clc
adc
xlat
fwait
xor
pop
shl
adc
mov
arpl
outsl
pop
push
pushf
push
fwait
ds
push
mov
rorl
and
or
inc
mov
sbb
fisttps
or
lcall
rorb
xchg
insl
out
in
fcomps
mov
mov
mov
dec
out
push
jecxz
mov
in
inc
and
stc
loop
and
jo
lret
or
xorb
adc
dec
hlt
ja
xchg
out
pop
xor
sub
movsl
xor
enter
ljmp
notb
ret
in
pop
cmp
jbe
movsb
or
lahf
push
flds
fisubs
sbb
adc
insl
mov
jo
or
hlt
sarl
mov
or
movsl
mov
inc
and
rcr
mov
adc
insb
xchg
cmc
data16
pop
in
imul
ss
test
mov
mov
mov
andb
mov
jb
js
cmpsb
pop
or
sub
jae
jae
je
roll
stos
clc
mov
lock
stc
jno
xchg
add
xor
jmp
in
dec
push
adc
leave
popf
jle
loop
mov
pop
shlb
mov
jmp
addr16
test
bound
mov
cmp
mov
mov
push
mov
cmpsb
mov
inc
adc
lods
leave
xchg
fwait
repnz
or
cmp
sarl
sub
xchg
loopne
shll
fcomi
mov
movsl
mov
or
mov
pop
and
sub
outsb
and
sub
in
lret
cwtl
cmp
cmc
lods
cmp
movsl
test
sbb
negl
push
push
lcall
mov
or
lahf
xchg
test
in
pop
add
dec
xchg
in
sub
mov
lahf
mov
pop
cmp
std
scas
sbb
adc
daa
jmp
mov
cltd
mov
jmp
mov
repnz
add
mov
push
int
decl
xchg
add
ret
jp
sub
loop
in
dec
push
test
sbb
pop
jle
jmp
arpl
mov
jge
cmp
mov
cmovg
rcll
jne
sarb
mov
cmp
push
outsl
fdivrs
int
rcl
cmp
xchg
xchg
pop
sbb
inc
fnstcw
insl
stos
sti
scas
mov
sub
insl
lock
jns
pop
adcl
pop
lock
imul
dec
lahf
mulb
stos
ja
stos
and
or
pop
fadds
movsb
test
sbb
push
pushf
or
in
imul
mov
outsl
or
data16
movsb
lahf
inc
addr16
xchg
adc
cmpl
cmpsl
mov
inc
push
mov
dec
jne
sub
ds
in
aad
cmove
xor
mov
aas
mov
stos
ficompl
jg
test
cld
push
jae
shrb
mov
xorb
popa
xchg
imul
inc
repnz
pop
pop
fcmovb
sahf
xchg
jge
mov
mov
adc
cmpsb
lods
incl
mov
test
cmpsl
stc
rorl
cmpsb
xchg
jmp
in
lods
cltd
lods
out
dec
and
push
ret
add
lcall
xor
call
lret
fstpt
mov
cli
mov
or
push
cwtl
repnz
ret
mov
push
jns
pop
jo
pop
data16
lret
movsl
scas
mov
icebp
fs
cltd
lea
pop
loope
enter
mov
pop
ja
xorl
lds
xlat
cmp
mov
imul
jmp
jg
sub
xor
add
lock
test
dec
adcb
dec
or
subl
or
shll
ss
sti
mov
icebp
cmpl
aaa
arpl
lret
sbb
stos
pop
mov
cmp
cld
mov
sbb
mov
push
cmp
xchg
add
outsb
je,pn
mov
push
or
cld
push
aam
lahf
mov
mov
mov
stc
xor
clc
xchg
jnp
fstpl
ret
or
sbb
das
les
jno
lgs
adc
or
aad
in
shrl
jae
jg
into
fidivrl
sbb
xchg
mov
fldenv
test
les
aas
shlb
bnd
mov
add
add
push
mov
jle
mov
xor
mov
jne
sti
fnsave
into
leave
andl
push
jg
clc
jmp
or
scas
jmp
and
or
aam
iret
les
jl
in
in
pop
mov
out
cli
rcrl
fs
jnp
ja
xor
leave
pop
imul
enter
pop
cwtl
or
push
or
mov
add
cmpsl
adc
cmp
pop
mov
cmp
fucomi
xor
ljmp
pushl
sarl
sub
mov
pop
repnz
sbb
pop
jb
adc
mov
adc
sub
ret
mov
pop
inc
xor
jp
adc
sbb
lcall
stos
fidivrl
aam
push
into
push
pop
push
lods
push
pop
cmp
pop
andb
lods
repz
jo
imul
outsb
pop
jns
popf
fstps
cmp
mov
jge
enter
outsl
loope
ss
repz
xor
incl
xor
icebp
or
sbb
sub
mov
clc
cmp
adc
mov
jns
arpl
and
add
test
nop
pop
or
test
in
mov
idivb
repnz
dec
or
pop
aad
gs
sbb
xchg
inc
movl
fs
out
pop
or
iret
pop
dec
cmp
pop
ja
pushf
mov
push
fucomip
dec
pop
and
xchg
add
push
and
xchg
push
leave
scas
ret
adc
leave
mov
arpl
mov
or
mov
jecxz
movsb
xchg
dec
lods
test
adc
mov
push
enter
imul
adc
mov
sbb
or
js
mov
in
pop
jge
mov
out
cltd
data16
icebp
add
lods
xchg
mov
icebp
rcl
leave
push
dec
pop
jo
movl
fs
in
dec
dec
inc
out
push
pop
icebp
xchg
test
xchg
sub
clc
jp
nop
and
pop
shl
dec
dec
rorb
pusha
dec
inc
add
fildll
xchg
cmpsl
push
das
xchg
pop
cld
jl
in
sub
push
jbe
scas
movsl
negb
adc
xlat
xor
clc
cmpsb
faddl
pop
xor
mov
fmuls
dec
jge
leave
loop
jp
xor
loop
dec
rcrl
jns
data16
xchg
in
mov
into
xchg
lret
push
dec
ss
fildl
pop
mov
test
pop
ja
test
mov
mov
aam
lods
orps
test
daa
push
aas
fcmove
xchg
js
inc
gs
jmp
les
testb
inc
lea
fisttps
subb
sbb
sub
fisubs
orl
jecxz
dec
add
mov
in
sub
daa
jno
adc
sbb
jmp
jl
lds
aaa
push
push
pop
mov
leave
rolb
push
and
adc
lock
or
ds
mov
sub
subl
scas
xor
sbb
ficompl
sbbb
dec
fisubrs
add
jge
mov
ss
fldl
jnp
out
aad
mov
adc
movsb
dec
ss
xchg
test
in
out
xlat
dec
movb
sub
xchg
lods
add
xchg
data16
xchg
push
mov
jmp
add
mov
mov
add
fldz
xchg
std
in
sbb
in
mov
or
and
faddl
xor
mov
dec
je
and
pop
bound
push
cwtl
nop
jp
or
jmp
mov
popf
lss
sub
in
popa
xor
add
lea
jbe
adcb
and
shll
push
add
icebp
leave
xorl
dec
movsl
add
sub
lret
faddp
insl
lods
popa
push
fidivs
pushf
ds
clc
and
dec
xchg
xor
lcall
lock
xchg
shrb
aam
aad
or
sub
or
out
sbb
inc
imul
cli
lods
stos
pop
push
stc
pop
xchg
stc
sbb
clc
add
push
mov
int
aaa
cwtl
stos
sub
inc
inc
in
add
sar
pusha
sub
loopne
cmpsl
hlt
push
ret
dec
mov
push
jnp
mov
cmp
pusha
iret
adc
cmp
inc
insb
push
mov
jb
add
and
popf
movsl
dec
push
xor
dec
cmpsl
mov
xor
xor
pop
cwtl
lods
into
lret
adc
rorl
pop
call
popf
test
out
lock
aam
data16
jmp
dec
and
imul
push
push
test
push
test
cli
push
into
imul
pop
dec
out
add
fnsave
mov
xchg
popa
jp
lea
pop
add
js
adc
testb
in
mov
in
xor
sbb
add
out
mov
cmpsb
loope
loope
cmp
push
mov
jo
xchg
cs
push
clc
js
sub
imul
and
sub
xor
sbb
loopne
mov
sbb
dec
dec
addr16
mov
xchg
cmp
sbb
sub
sub
movsl
sub
shlb
repz
xchg
sub
mov
mov
bound
jl
dec
jne
fwait
ret
and
lea
or
pushf
cmc
movsl
xor
out
add
add
fsts
scas
dec
jne
cmpsb
xchg
pop
xchg
rclb
add
pop
xchg
es
cmp
sub
lcall
and
xchg
mov
in
jp
subl
fadds
dec
inc
mov
pusha
or
sti
test
mov
faddl
enter
xor
sar
outsb
push
les
sbb
fs
mov
cwtl
mov
repnz
push
pop
or
pop
inc
lods
fwait
std
push
in
sub
jbe
jbe
test
pop
inc
push
jns
push
pop
ret
cmp
es
or
push
gs
pusha
sbb
cmpsb
les
push
push
mov
add
adcb
rclb
fisttps
pop
cmpw
add
jp
or
mov
bound
int
stos
incb
jl
ret
leave
aad
xor
ficomps
jno
insl
push
mov
fwait
cltd
out
je
js
jle
outsb
loopne
std
lods
imul
test
dec
mov
add
push
and
inc
add
bound
jp
xor
mov
test
gs
and
sbb
inc
inc
push
lock
jo
sbb
rcll
pushf
push
mov
insl
xchg
mov
out
xor
mov
fcom
mov
or
andl
cmc
mov
sahf
adc
pushf
push
outsl
mov
sbb
sahf
mov
cwtl
push
add
adc
inc
aaa
rcrb
icebp
dec
cmp
and
popf
cmp
imul
imul
out
dec
into
mov
add
test
push
or
cmc
mov
sarl
repnz
inc
dec
pop
pop
out
fsubl
divl
ror
mov
mov
insb
adc
jl
push
cltd
adc
loopne
dec
movsb
cwtl
adc
in
or
sbb
add
insb
or
jg
jb
jle
mov
call
jno
mov
mov
adc
xor
not
or
test
push
sbb
inc
addr16
mov
je
rcrb
aad
jmp
loopne
xchg
movsl
mov
lret
push
repz
sbb
std
xor
xchg
insb
mov
or
fidivrs
xchg
adc
fwait
push
push
addl
add
shl
test
cmp
addr16
mov
jl
outsl
dec
mov
dec
xchg
pop
mov
in
rcrb
add
les
and
out
xor
pop
nop
jecxz
jmp
add
mov
mov
or
and
xorl
lods
xor
dec
sti
dec
xchg
pop
dec
dec
mov
outsb
mov
xchg
xor
mov
push
push
cmp
and
mov
lret
fs
inc
mov
pop
mov
in
sbb
jmp
xchg
mov
mov
frstor
mov
cmp
sbb
shll
subb
test
inc
das
daa
xor
notb
out
jg
lods
pop
inc
stos
pop
clc
mov
sbb
jle
ret
jo
jns
pop
inc
jl
enter
jo
in
repnz
mov
jp
shlb
movsl
mov
sub
out
insl
sbb
outsb
je
jno
fdivrs
or
imul
xchg
mov
inc
sbb
xchg
lret
jmp
mov
cmp
movb
xchg
popa
sub
ds
sti
jp
mull
adc
insl
sar
outsl
aad
aaa
rorl
data16
stc
lods
lret
pop
push
sbb
add
xor
int
lahf
and
jno
xor
faddp
dec
xchg
xor
outsl
test
mov
hlt
cmp
call
addb
cmpsl
pop
fisubl
jno
sub
jle
out
mov
push
pushf
inc
and
stos
scas
lahf
inc
div
icebp
or
push
mov
test
or
adc
mov
lret
int3
sbb
test
xor
and
mov
xor
bound
aam
dec
test
rorl
and
in
add
jle
or
and
xchg
stos
adc
cmp
sbb
xlat
lret
mov
daa
jae
inc
or
and
lods
sub
xor
sahf
sub
in
mov
dec
push
sub
xchg
cld
std
aad
pusha
cs
xor
loopne
cmp
outsb
sahf
out
dec
sarb
or
mov
leave
pop
mov
mov
mov
add
stos
dec
adc
and
or
dec
ja
xchg
xor
mov
repnz
lea
daa
mov
sti
inc
dec
cmovae
les
int
mov
ja
push
pop
fsubp
dec
inc
mov
in
mov
or
ret
das
sqrtps
or
xchg
mov
mov
es
scas
xor
loope
les
subl
mov
daa
cltd
lods
imulb
mov
cwtl
fs
jne
lea
push
sar
outsb
jb
test
outsb
sar
mov
inc
loopne
scas
out
mov
cmpsb
or
sbb
mov
jge
pop
or
mov
pop
vxorps
sbb
adc
sbb
inc
out
xchg
popa
sbb
push
inc
dec
and
out
rorl
outsl
test
addr16
xlat
xor
sub
lret
xor
loope
mov
mov
pop
ds
jbe
or
xchg
dec
rcll
cld
xor
mov
cs
sbb
mov
bound
lcall
pop
lea
adc
push
addr16
pushf
and
fmul
loope
xchg
insl
mov
stos
and
jbe
and
aas
test
adc
int3
jns
cmc
aaa
lods
les
je
inc
aam
call
mov
loope
cmp
xlat
mov
sahf
pop
cmc
lock
sar
das
xor
push
mov
mov
cmp
and
mov
popa
data16
mov
cmp
jb
sub
mov
add
mov
add
daa
negb
clc
ja
xchg
rcrl
xor
es
sbb
stc
lods
pop
fs
sahf
lods
sbb
out
or
inc
out
and
xchg
fstl
stos
popa
mov
xor
ds
int
icebp
push
xorb
jmp
adc
ljmp
jp
cmp
cmp
fbld
inc
xchg
adc
std
test
fisubl
ja
xchg
daa
mov
sub
aad
or
inc
push
jbe
inc
xor
adc
cmpsl
cli
adc
xchg
gs
into
mov
mov
lahf
push
xor
hlt
mov
sub
test
imul
mov
inc
mov
mov
lods
adc
add
sub
cs
push
outsb
sbb
repz
xor
mov
mov
mov
cmp
adc
cmpl
addl
shrb
std
hlt
jge
pop
enter
or
sub
fwait
inc
outsl
in
imull
mov
inc
psraw
sbb
xor
jne
cld
dec
dec
pop
ljmp
std
xor
popa
call
es
enter
movsb
push
pop
addr16
xor
popa
mov
or
push
or
cmp
call
les
inc
adc
mov
mov
xchg
jno
cld
ljmp
xlat
sahf
or
cmp
cmp
loopne,pn
pop
jmp
mov
movsb
repz
movsl
fwait
shl
pop
enter
lea
jae
mov
sub
lcall
pop
adc
ret
daa
adc
xor
adc
inc
mov
daa
clc
adc
push
push
popf
mov
or
mov
push
fstl
jmp
adc
jbe
lcall
in
into
mov
lcall
clc
pushf
ss
push
loope
adc
pop
ljmp
aam
jns
jecxz
inc
iret
dec
mov
cld
pop
das
dec
adc
in
xchg
repnz
insb
xchg
cs
clc
enter
das
fadds
or
cmp
lea
xor
sbb
inc
mov
mov
lds
cmc
stc
push
adc
js
sub
popa
idiv
fstl
sti
xchg
lds
repnz
mov
cmc
aad
jnp
insb
xchg
dec
lods
data16
mov
dec
repnz
cmpb
fcomps
arpl
out
test
jne
aaa
out
sarb
notl
imul
add
pushl
xor
rolb
cmp
mov
call
jo
imulb
add
jae
dec
push
mov
sub
enter
test
popf
das
push
lcall
push
ja
ja
inc
jne
mov
sub
std
lret
fisubs
dec
cld
dec
push
xchg
adc
pop
push
mov
add
xor
jb
lock
xchg
out
nop
push
pop
inc
int3
ljmp
lds
mov
push
repz
mov
bound
notb
xchg
pop
adc
add
into
sub
pop
test
test
dec
sub
mov
repz
cs
or
loope
add
mov
mov
jno
mov
lcall
pop
dec
or
mov
gs
or
jns
aaa
data16
cmp
or
mov
in
adc
xorl
mov
into
jbe
fbld
inc
add
add
mov
xlat
outsb
add
mov
and
scas
xchg
ficoml
sbb
daa
cs
xchg
ljmp
rorb
repnz
les
mov
aas
dec
dec
and
rcrb
xchg
sar
cmpsl
into
fisttpll
adc
mov
xor
cltd
outsl
scas
jmp
ss
xor
mov
into
xor
mov
decb
scas
stos
mov
mov
clc
scas
in
adc
lock
es
xor
decb
or
fwait
ret
stc
flds
sub
inc
imul
loop
loop
push
cmc
pop
pop
andl
jno
out
mov
jnp
pop
xor
pop
push
xchg
pusha
mov
ja
mov
or
mov
cmc
das
sbb
pop
jo
lods
adc
clc
push
das
xor
sbbb
fsubrs
test
popf
lods
inc
mov
rcr
jp
cmc
aas
bound
mov
mov
inc
nopl
lret
lret
mov
lret
dec
or
adc
sbb
call
sbb
shld
add
pop
scas
sub
pop
pop
in
sbb
cmpsb
sbb
adc
pop
cmpsl
dec
jbe
cli
mov
ret
pop
sub
lcall
inc
xlat
in
mov
xor
outsb
leave
sub
popa
inc
fbstp
notl
out
andb
mov
outsb
inc
lcall
lea
or
xchg
mov
sub
mov
stos
pusha
pop
pop
add
sub
mov
xor
in
xor
and
add
nop
dec
mov
stos
roll
cmpsb
stos
mov
push
jge
movsl
bound
mov
mov
xchg
out
xchg
jo
arpl
icebp
xchg
sahf
xorl
rorl
dec
int3
push
xlat
nop
or
fildl
dec
and
mov
inc
lods
insb
bound
cwtl
mov
int3
sbbl
aam
inc
notb
es
pop
jl
fdivr
or
aad
stos
push
jno
or
sbb
mov
or
push
popa
mov
cmp
and
push
sub
pop
xchg
cmp
inc
test
add
xor
mov
cmp
adc
xchg
ja
jecxz
enter
jp
push
adc
push
imul
pop
mov
int
lock
movb
orb
lods
cmp
dec
xchg
add
mov
or
mov
outsl
rcl
test
sub
nop
data16
adc
sub
jb
out
xchg
ror
jne
dec
arpl
jns
pop
mov
in
xchg
fsts
push
push
addr16
ret
mov
ljmp
mov
xchg
and
sahf
into
inc
xchg
mov
enter
jecxz
pop
fwait
pop
out
pop
jle
ja
push
adc
test
testb
cwtl
push
cmp
jg
idiv
mov
cmp
int
jp
pop
in
add
xchg
mov
int3
push
movsl
ja
push
ficoms
jo
pop
cmpsl
xchg
movsb
scas
hlt
sarb
testb
clc
das
pop
rcll
jbe
cmpl
sbb
dec
test
inc
push
lods
mov
jnp
xchg
aam
jns
cld
push
movsb
cmp
jae
inc
and
mov
inc
mov
sbb
cli
lcall
adc
or
jae
insl
dec
cltd
ljmp
dec
sbbb
pushl
lods
aaa
stos
notb
jne
sub
push
dec
or
push
and
xorb
dec
movsl
cmp
rorb
mov
cmp
mov
push
repnz
add
mov
sbb
xchg
push
lret
and
in
inc
in
push
pop
cmp
lods
and
pop
or
jp
outsl
add
xchg
mov
into
stos
push
stc
adc
lds
inc
clc
in
sbb
loop
ss
jns
aad
mov
xor
jbe
ljmp
mov
cmc
xlat
mov
fwait
int3
jns
push
icebp
mov
mov
mov
aaa
pop
add
mov
js
out
inc
and
add
inc
je
jb
rorb
pop
fucomip
inc
repnz
sub
int
mov
xchg
sub
mov
test
fdivrp
jle
sub
cmp
daa
push
aaa
test
adc
fcomps
imul
jg
sbb
push
push
add
pop
sbb
popa
add
call
repz
aaa
nop
adc
add
sub
insb
and
or
fisubl
pop
cs
daa
and
js
mov
mull
xor
test
mov
sub
out
mov
xchg
mov
xchg
jb
and
adc
mov
movsl
sahf
ror
fcmove
aam
xor
mov
push
inc
add
cmp
adcl
pop
sbb
notl
jnp
ja
call
dec
scas
lret
xchg
insl
in
das
xor
popa
andl
jne
cmp
sbb
in
aad
lahf
push
cmp
mov
insl
and
cmp
out
jo
test
sub
fsubrs
xlat
lret
inc
sub
in
inc
cmp
inc
dec
enter
hlt
test
cmp
cwtl
and
xchg
xchg
dec
sbb
mov
push
xchg
das
scas
fucomip
test
test
or
sbb
stos
popf
or
xchg
out
iret
inc
mov
xchg
mov
aaa
xchg
in
add
int
xlat
addr16
nop
and
aaa
hlt
xchg
adc
cmp
mov
lock
pusha
aas
and
jl
inc
lods
cmp
imul
sbb
movsb
test
outsl
cmp
cmp
mov
scas
outsl
iret
fsubrs
arpl
pop
add
pop
mov
stc
sahf
test
add
pop
jge
lcall
ja
xor
nop
bound
imul
push
jecxz
dec
xorl
clc
mov
pop
push
inc
mov
test
mov
mov
push
aad
int3
andl
in
je
inc
sub
jno
add
stos
jge
xchg
incl
jo
inc
ds
xchg
xchg
and
xchg
adc
mov
ret
dec
pop
dec
andb
dec
xchg
push
out
into
jl
shl
out
push
mov
inc
push
ret
and
loopne
jns
neg
push
daa
jb
loope
mov
aad
jg
mov
mov
orl
cmpsl
dec
xchg
stc
xchg
aad
addr16
xchg
cwtl
xlat
mov
xchg
mov
cmp
add
xor
xlat
mov
jae
fwait
addr16
imul
sbb
pop
cwtl
int
xor
lods
test
xor
dec
js
popf
push
mov
sbb
xchg
ss
adc
or
cwtl
pop
mov
pushf
cmpsb
sbb
gs
cwtl
sub
push
sbb
jg
inc
bound
nop
clc
pop
outsl
ja
add
lock
xchg
sbb
push
stos
pop
jp
cmp
loope
inc
lret
or
or
sub
cmp
add
pop
mov
push
xlat
cmpsl
sub
outsb
cmpsl
sub
push
xor
jl
mov
repnz
lret
out
stos
fildll
cmpsl
and
mov
xchg
fimuls
out
mov
call
pop
dec
jge
and
push
or
hlt
jno
push
adc
mov
mov
adc
and
mov
gs
lds
jecxz
mov
jae
fisubl
sub
jb
outsl
and
popf
mov
jp
insb
stc
mov
fcomps
repz
mov
add
mov
sahf
pushf
add
mov
push
ss
adc
das
shr
add
ljmp
out
mov
shll
test
and
jne
pop
movsl
daa
loope
dec
rcll
push
lds
jecxz
xor
mov
fisubrs
push
ret
jge
inc
fs
cmpsb
xchg
xchg
cli
xor
sub
xor
adc
loope
xchg
ss
lahf
dec
xchg
cmp
mov
xchg
inc
jns
jnp
loopne
or
in
mov
and
cmp
rolb
jns
pop
arpl
sti
cmp
in
jb
jns
in
mov
ficoml
dec
xchg
sbb
inc
fdivrl
les
loope
and
xor
popf
push
inc
bound
mov
push
pop
push
hlt
insl
adc
push
rorl
pusha
in
mov
stos
test
fdiv
lds
repnz
cmpsb
clc
cld
decl
cmp
push
scas
sbb
aam
lret
jnp
xor
arpl
negb
fwait
push
or
lret
stos
dec
jge
add
lock
movsl
rolb
clc
out
stc
dec
lods
hlt
ljmp
add
push
daa
dec
add
adc
hlt
lds
cmp
xchg
mov
in
cmp
add
mov
stos
rolb
dec
lods
dec
mov
inc
repz
push
dec
or
fbld
push
pop
xor
mov
jl
jle
xchg
mov
push
sub
inc
pop
fbstp
pop
test
xchg
filds
imulb
push
mov
pop
fisttps
mov
xlat
push
imul
mov
jno
adc
sub
popf
negl
je
fildl
xor
rcr
mov
inc
cmp
xlat
dec
pop
lea
jmp
inc
adc
testb
mov
or
pushf
push
and
pop
adcb
ljmp
addl
push
iret
mov
mov
mov
cltd
pop
xorl
xor
jmp
push
cmp
loopne
mov
dec
jecxz
push
movsb
arpl
push
mov
mov
loope
mov
cli
or
ds
decl
push
bound
cmp
std
pop
push
imul
pushl
rclb
and
pop
subb
stos
fisubrs
jnp
add
mov
dec
nop
mov
ja
dec
iret
mov
aad
jne
push
cmp
pop
into
push
repnz
ret
outsb
out
lahf
xchg
pushf
jp
push
lret
sub
in
sub
cs
outsb
mov
dec
pop
push
ja
push
inc
add
jecxz
mov
cmp
xchg
adc
lock
mov
mov
pop
push
push
das
mov
inc
mov
inc
shll
xor
add
pop
loopne
sub
sub
mov
jbe
jbe
test
bound
pop
lds
sbb
jno
push
mov
push
mov
sar
sub
aaa
mov
aam
mov
sbb
dec
dec
fidivrl
jo
lcall
push
mov
lret
es
cmp
sahf
mov
push
pop
mov
inc
enter
lock
arpl
aaa
repz
lock
lock
insb
xor
mov
xchg
out
mov
xchg
dec
lcall
jge
movsb
pop
and
xchg
cmpb
je
xchg
sub
push
daa
add
je
pop
sub
jle
loop
insb
mov
mulb
pop
push
dec
pop
jge
addr16
cmc
testb
js
leave
cmp
sbb
imul
adc
enter
ja
addl
push
cmpsl
scas
push
mov
xchg
imul
and
shr
shlb
inc
inc
cmp
push
mov
cmpsb
jne
lret
mov
aas
or
insb
cmpsb
push
xchg
int
xchg
xchg
outsl
cmc
sbb
ljmp
lcall
es
add
ret
jae
xchg
pushf
add
sbbl
push
xchg
xor
mov
push
inc
push
pop
leave
stos
xor
or
cltd
movsl
jb
mov
xchg
dec
mov
xchg
fnsave
lahf
and
je
leave
cmpsl
test
cwtl
jmp
addr16
mov
cmpl
hlt
mov
pop
and
mov
xchg
sub
and
insl
xor
shlb
and
mov
xor
mov
cmp
pop
mov
hlt
repz
repz
cltd
pop
sahf
xor
js
cli
cltd
jle
jle
pushf
mov
je
cmc
jo
scas
shlb
icebp
sub
mov
js
pop
push
sbb
movsb
fs
xor
shl
add
inc
mov
add
das
inc
sub
addr16
cmp
mov
or
call
lahf
ja
xchg
sbb
xor
es
inc
gs
mov
ficomps
cmc
psllw
cmp
mov
jae,pn
pop
popa
xchg
inc
ret
test
add
lahf
out
arpl
mov
enter
jg
inc
mov
push
les
fcoml
mov
test
imul
sbb
insl
inc
call
jmp
mov
movsb
push
push
mov
mov
mov
xor
xchg
xor
popa
icebp
lret
lea
jp
in
das
subl
lds
mov
bound
add
mov
dec
add
popf
sbb
je
int3
into
inc
xchg
cmpsl
scas
push
pop
mov
pop
jb
iret
xchg
dec
pop
add
frstpm(287
lds
inc
aam
sbb
loopne
xchg
mov
leave
or
daa
lret
and
mov
ret
mov
push
mov
cli
enter
shrb
pusha
inc
lret
cmpsl
mov
mov
inc
mov
in
fnstenv
js
add
call
cld
cwtl
push
sub
inc
les
dec
mov
xlat
push
or
sbb
adc
jle
sti
mov
lods
pop
iret
pushf
dec
mov
scas
pop
int
mov
cld
jmp
aam
mov
jno
lods
test
adc
mov
insl
add
mov
insb
or
shrb
inc
scas
ficoms
jnp
or
bound
mov
int
fsubrs
inc
shll
jns
imul
in
inc
jns
or
out
fsubrs
bound
add
loope
fnsaves
add
ret
les
push
fs
aaa
or
or
sub
movsb
pop
cmp
or
sub
inc
xchg
in
xchg
pop
fisubs
popa
and
inc
adc
sbb
fwait
jo
fsub
xor
lods
test
jecxz
adc
xor
inc
xor
jmp
add
sbb
shlb
pop
cmp
adc
cmp
mov
cmp
cmp
jp
jge
out
cmp
and
lock
test
mov
jp
add
push
in
repnz
js
int3
out
inc
test
pop
fwait
push
int
ja
pop
insb
add
mov
test
int3
jno
test
gs
fisubs
fcomip
ds
jmp
mov
cmc
inc
stos
cmc
push
out
out
push
repz
mov
or
mov
fstl
movzwl
adc
xor
ret
sbb
insb
or
push
fs
in
mov
repnz
pop
outsb
sbb
adc
and
testb
shl
fisubs
sbb
aam
fmull
scas
xchg
xorb
call
bound
inc
adc
divl
fsubrl
pop
mov
jbe
xor
add
scas
leave
cmc
mov
pop
icebp
hlt
pop
lock
jmp
stos
js
cmpsl
nop
int
pushf
nop
das
sub
and
mov
les
and
nop
mov
sahf
xlat
jns
sub
es
ljmp
int
add
mov
aad
push
cmpsb
jecxz
fiadds
mov
imul
xchg
lods
sbb
xor
loopne
push
dec
lock
jp
les
xor
insb
hlt
out
xor
dec
sub
lock
cmp
pop
out
jp
lret
pop
xchg
or
out
call
xor
gs
or
pop
inc
sbb
push
gs
test
or
popf
lret
rcrb
ret
jmp
fadd
push
xlat
scas
xchg
movl
xor
arpl
adc
cmp
loope
jle
cmp
mov
mov
and
push
mov
pop
mov
cli
divb
data16
in
aas
dec
fcoml
sti
pop
xchg
shll
shr
or
xorl
call
and
sub
add
lcall
imul
jae
pop
sahf
mov
outsl
fwait
lock
add
inc
xlat
xchg
xor
push
imul
push
clc
and
xor
and
fistpl
jp
xlat
imul
inc
jg
push
pusha
xor
mov
or
js
cld
jo
sub
in
sbbb
rorb
cwtl
fsubrs
xchg
cltd
jbe
sbb
fdivl
cmpsb
mov
push
add
adc
fs
dec
leave
adc
rcrl
enter
out
iret
mov
cmc
aad
mov
dec
inc
imul
rorl
iret
sub
stc
sahf
adc
mov
pop
xor
adc
ret
mov
fwait
cmpsb
pop
sub
jns
fcmovnu
jns
mov
add
mov
mov
lret
inc
outsl
adc
addl
push
xchg
inc
push
cmpsb
arpl
mov
push
ret
xchg
lds
cld
mov
adc
scas
into
stos
js
std
sbb
inc
aam
sbb
mov
mov
sbb
std
mov
dec
mov
int3
and
lret
enter
inc
xlat
sub
mov
push
in
jg
lea
adc
and
or
popa
repnz
cmp
cs
lods
shlb
push
and
add
outsb
push
out
xchg
popf
jp
test
enter
sbb
xor
pop
repnz
jb
xlat
pushf
enter
mov
dec
adc
out
out
idivb
and
add
add
enter
movsb
or
mov
or
ljmp
jne
pop
jge
dec
and
in
inc
lahf
les
jnp
push
enter
cmp
in
std
jle
pop
sti
lcall
imul
roll
test
jne
xchg
dec
cli
ret
cmp
ret
inc
fstpl
fisttpl
test
pop
inc
pop
jg
ljmp
or
arpl
pop
jle
jecxz
aaa
xchg
inc
dec
adc
sub
loope
lock
sbb
add
into
jbe
dec
sub
push
sbb
insb
arpl
sbb
add
sbbl
push
mov
cs
jns
aaa
aam
scas
pop
jg
mov
sbb
or
cmp
inc
and
and
movsl
leave
jne
adc
ja
and
cmc
andb
in
divb
int
lock
add
enter
movsl
xchg
xor
jo
ror
mov
cwtl
cmp
cmp
cmp
imul
xchg
dec
lretw
sub
in
adcb
cmpsb
leave
inc
es
jmp
inc
jns,pt
mov
cmpsl
imul
sub
adc
arpl
pop
cmp
or
mov
mov
push
pushf
hlt
cmovbe
xchg
sarl
pushl
repnz
pop
cli
mov
sbb
imul
mov
add
push
in
cmp
jl
imul
cltd
stc
mov
xor
adc
sub
mov
in
mov
inc
jg
adc
nop
sbb
outsb
inc
rorb
push
add
aad
cs
out
out
out
fwait
pop
outsb
in
xor
cmp
aas
sbb
mov
pop
pop
shr
and
xchg
sbb
cltd
call
mov
push
mov
lret
xor
js
clc
mov
mov
loop
inc
je
arpl
pop
xchg
dec
xchg
dec
adc
xchg
jne
notl
adc
mov
sub
push
cmp
dec
insb
popf
jbe
cmpsb
sub
xchg
test
jp
cmpsb
iret
xchg
mov
stos
std
mov
test
inc
mov
popa
fs
test
nop
add
inc
ficoml
dec
jmp
mov
insl
jb
dec
fucomi
aaa
jecxz
lret
mov
out
fcomip
sub
shrb
jo
out
movsb
cli
or
sub
dec
stos
jns
add
clc
mov
push
xor
addr16
mov
arpl
lret
cmp
outsb
push
and
push
jmp
sbb
stos
outsb
mov
fwait
dec
and
jnp
push
inc
out
test
aaa
aam
enter
int
daa
mov
fisubrs
mov
stc
inc
fstl
mov
adc
cmp
add
insb
xlat
xor
add
pop
cmpsl
pop
in
ret
xor
adc
pop
iret
sub
sti
lret
lret
lds
fwait
stc
dec
incb
pop
enter
loopne
dec
fwait
pop
sub
adc
dec
mov
jo
jle
jae
push
mov
leave
mov
pop
push
xchg
mov
adc
jmp
mov
inc
xor
sbb
insl
dec
fiadds
adc
imull
dec
pop
aam
xor
das
iret
push
test
scas
mov
jno
sub
sub
mov
ljmp
fstpt
xchg
xchg
insb
test
push
popw
call
adc
jbe
cmc
lods
test
mov
cwtl
aam
jo
jnp
sahf
xor
or
xchg
pop
cmc
xchg
popf
push
lret
lock
sahf
lret
fcmovb
push
cmpsb
mov
mov
push
add
xor
or
sahf
xor
adc
adc
push
adc
gs
loope
xor
mov
jns
pop
xor
push
outsl
bound
sub
inc
les
xchg
mov
lds
lcall
nop
fcoms
shll
adc
sub
aaa
mov
scas
or
cwtl
sbb
clc
and
aas
out
outsb
data16
push
push
int3
fs
pop
pop
pop
cmpsb
rcl
mov
repz
into
cmp
sarl
sub
sub
enter
fnstsw
jge
sbb
loope
mov
xchg
sbb
test
adc
fidivrl
scas
sbb
pop
rorl
jmp
or
push
adc
sbb
in
fcmovnb
std
add
mov
mov
xor
out
add
shll
aas
stc
cli
daa
mov
xchg
pop
enter
ds
ffreep
imul
push
movsl
push
inc
in
pop
cmp
pop
and
cwtl
inc
mov
jecxz
fldt
mov
cwtl
lahf
enter
out
int
int
cmp
fs
cmpsl
lahf
daa
clc
jge
xchg
xchg
or
fucomi
push
imul
sbb
test
aaa
push
imul
pop
xchg
jnp
jle
xchg
pusha
xor
in
js
sti
sbb
lcall
dec
sub
fdivrl
out
sub
ror
sub
sbb
sbb
cmpsl
out
adc
jl
dec
aaa
mov
arpl
adc
loop
push
lods
insb
in
imul
cmp
mov
daa
sbb
adc
xor
push
xchg
add
sbb
leave
sub
dec
sbb
pop
sahf
xchg
mov
fdivs
inc
or
xor
push
jo
add
sub
add
daa
movsb
repnz
bound
jb
pop
cmp
aad
imul
pop
pop
cmpsb
sti
xchg
imul
shl
mov
fs
jge
xchg
adc
out
loope
add
movsl
inc
sar
icebp
xor
or
sbbl
mov
jo
fwait
inc
fists
cmpsb
jmp
cs
mov
clc
movsb
dec
cmp
setno
in
xchg
ret
cmp
pop
xchg
fistpll
sub
dec
and
jle
inc
lock
addl
sub
enter
mov
data16
sbb
lea
imul
mov
jmp
mul
or
in
and
lahf
push
xor
test
shlb
popf
mov
mov
clc
pop
addr16
adc
ds
push
sbb
jo
or
sarb
adc
sbb
dec
in
or
pusha
out
add
into
cmpsl
or
jne
xorl
frstor
pop
imul
pop
mov
out
xchg
mov
sub
inc
sbb
pop
in
sub
push
aam
mov
test
sub
sub
pushf
out
jnp
jmp
and
call
push
push
nop
fidivrl
dec
jnp
add
std
or
fwait
adc
push
shrb
pop
dec
mov
pusha
fcomps
xor
and
inc
jae
sbbl
imull
mov
cld
inc
icebp
xorl
cs
mov
add
es
jl
cwtl
hlt
clc
in
sub
push
or
lods
cmpl
ret
dec
nop
pop
in
into
xchg
mov
jb
ljmp
lret
jo
or
mov
mov
outsl
aaa
fldt
add
mov
fwait
mov
add
add
cs
fistps
jge
push
xchg
dec
mov
inc
mov
cmpsb
in
adc
add
int
sub
mov
loop
pop
andl
mov
out
dec
outsl
arpl
sbb
mov
lods
sub
out
shrb
cmpl
shlb
mov
clc
aad
jbe
or
pop
ja
and
out
sbb
sahf
xor
movsb
movl
ret
xchg
push
lods
jnp
enter
fldt
jbe
daa
dec
fcoml
pop
sarl
test
rolb
rcl
mov
and
cli
int3
iret
sbb
idivl
sub
add
daa
mov
xchg
aaa
pop
mov
in
push
aaa
jle
jae
aad
cmc
jge
add
push
pop
and
mov
push
bound
xchg
ljmp
fcoms
js
ja
jge
cmp
add
lret
mov
cmp
inc
daa
push
enter
sbb
aaa
mov
xchg
xchg
adc
scas
push
test
sub
lret
shrl
xchg
xor
inc
ljmp
inc
test
into
hlt
add
daa
leave
daa
lods
or
es
mov
push
jmp
inc
mov
std
in
pushw
xchg
and
dec
lcall
mov
jnp
bound
enter
scas
in
sbb
mov
sub
add
fabs
cmp
lret
adc
jno
jmp
jg
xor
adc
insb
fwait
rolb
das
mov
gs
jae
inc
movsb
shrl
mov
cmp
sbb
adc
xchg
adc
push
dec
mov
push
add
or
int
lods
mov
flds
cmc
mov
sbb
ret
dec
mov
xor
sbb
sub
je
stc
inc
dec
inc
enter
adc
push
add
repz
sub
jb
ljmp
jge
jle
sbb
int3
sbb
pop
add
or
xor
jl
fisttpl
stos
mov
cwtl
xchg
mov
cwtl
push
or
loop
aad
imul
sub
mov
cld
pop
lea
imul
mov
dec
sub
sahf
shl
movsb
and
push
stos
mov
loop
sbb
xchg
leave
divl
mov
push
push
lret
ds
and
data16
pop
mov
je
add
popa
xor
test
in
xlat
xchg
or
into
loopne
jle
sub
je
adc
iret
push
in
testb
leave
adcl
sbb
lods
data16
arpl
sbb
mov
enter
pusha
push
mov
repz
clc
or
int3
and
mov
mul
inc
hlt
jns
push
les
int
cmp
into
adc
lahf
xchg
mov
cmpsb
mov
repnz
ret
sbbl
sti
jl
push
xchg
or
add
or
push
pop
mov
insb
mov
mov
mov
subb
lds
xlat
repnz
data16
fwait
shlb
fdivrs
pop
unpcklps
or
daa
push
lds
xor
pop
filds
adc
add
mov
pop
dec
cmp
daa
sbb
pop
sti
arpl
xor
push
inc
add
sbb
icebp
lcall
std
sti
scas
out
mov
pop
sub
and
jecxz,pn
pop
xchg
or
push
jno
xchg
push
push
jle
pop
in
pop
push
inc
outsb
pop
xor
inc
inc
ljmp
sbb
int3
rcr
popa
and
cmp
popa
shrb
and
inc
jns
into
mov
dec
pop
xor
adc
jo
inc
add
xchg
mov
add
lcall
shlb
pop
xor
scas
sbb
jne
lcall
mov
iret
aaa
xor
int3
jl
or
aaa
xor
adc
mov
mov
jecxz
arpl
aas
gs
loope
xchg
sub
outsb
scas
mov
lds
push
lods
lret
ja
rcrb
pop
xor
inc
cmp
scas
in
call
loopne
xor
xchg
jno
push
cmpsl
or
cli
dec
mov
sbb
pop
jb
add
out
sub
loopne
out
xchg
mov
test
jne
push
decl
test
pop
ret
faddl
pop
or
pop
mov
call
adc
pop
xchg
mov
cwtl
nop
out
out
loope
pop
push
mov
fiaddl
insl
dec
push
xor
ret
mov
pop
jecxz
cmp
add
fistps
jmp
dec
cltd
xor
popa
add
iret
push
xchg
xchg
mov
mov
sbb
imul
in
lea
mov
dec
adc
dec
fmul
hlt
push
fnstenv
mov
push
je
repz
loop
inc
in
daa
pusha
mov
fmulp
or
repz
push
lcall
sub
jmp
es
pusha
js
jno
out
loopew
mov
loopne
push
out
movsb
pop
pushf
mov
mov
popa
lahf
je
or
dec
and
sbb
cli
pusha
push
scas
dec
stc
push
mov
xchg
or
or
scas
pop
pop
repz
arpl
cmp
push
cli
xor
je
imul
mov
mov
pop
xchg
out
outsl
xchg
mov
jbe
xchg
pop
scas
imulb
loopne
jge
leave
jno
out
sub
outsl
test
stc
or
mov
pop
outsl
jecxz
sub
xchg
dec
lret
mov
cmp
mov
out
movsb
adc
gs
cmp
adc
cs
mov
addl
enter
push
pop
push
add
adc
mov
sub
adcl
adc
stos
lret
xor
pop
cmp
add
enter
adc
push
enter
xchg
cmp
push
outsb
mov
icebp
cmp
push
sbb
or
mov
jmp
stc
pushf
mov
hlt
add
call
shlb
mov
sbb
jo
mov
scas
inc
or
es
mov
xchg
cmc
andb
aad
jmp
in
jae
mov
dec
imul
fisttpl
lret
sahf
ror
es
pop
repz
mul
pushf
or
jecxz
mov
mov
negl
push
loop
mov
adcl
mov
les
jp
stos
call
jae
adc
adc
imulb
sarb
cmp
push
adc
mov
out
dec
xchg
data16
pop
adc
inc
xor
push
xor
pop
addl
dec
add
xchg
ror
and
test
repz
out
inc
xchg
lcall
sti
popf
pop
jb
sbb
lret
mov
ret
mov
dec
je
pop
cld
popa
mov
movsl
xchg
xorl
push
adc
lea
dec
mov
out
cli
stos
xchg
jbe
adc
xchg
sarl
out
push
daa
jmp
aaa
sub
mov
cmp
rcrb
stos
xchg
xor
and
xor
popa
jge
int
cmp
push
mov
and
cmc
mov
in
jecxz
adc
mov
aam
mov
std
xchg
lret
mov
movsl
in
inc
mov
scas
into
fdivrl
iret
movlps
add
fnstsw
xchg
or
cmpb
shlb
jg
bound
cmpb
jge
jle
pop
push
xor
inc
testb
arpl
ret
repz
xor
insl
mov
add
into
imul
add
int
repz
cmp
movsl
gs
ss
xlat
add
lahf
cs
sahf
pop
inc
fisubrl
pop
ss
call
ja
cwtl
sahf
adc
icebp
nop
rorb
sbb
ret
jmp
cmp
jae
cmp
push
mov
das
movsl
push
shlb
cmp
cs
xchg
xchg
insb
call
add
xor
jmp
cmpsb
popf
lds
jp
shrb
shrb
shrl
add
mov
add
scas
mov
push
push
and
pop
shll
sahf
or
mov
stos
clc
loopne
shrl
iret
leave
in
movsb
mov
clc
adc
jae
loope
cmpsl
test
insl
push
inc
ds
pop
push
icebp
add
add
xchg
and
inc
mov
test
mov
mov
xchg
dec
test
xor
filds
movb
xor
xor
loopne
jmp
test
mov
loopne
test
mov
or
aas
or
shll
pop
pop
shll
je
rcrb
mov
fcoml
cmp
loope
ret
adc
enter
aaa
dec
icebp
shlb
adc
mov
sbb
mov
push
jns
jbe
incb
aas
jecxz
jl
inc
pusha
pushf
xchg
mov
fwait
add
in
inc
xchg
xor
mov
pop
ret
daa
jge
xor
xor
mov
rclb
ljmp
xchg
add
js
lret
not
xchg
mov
testl
xchg
add
xchg
loop
jns
cmpsb
jnp
fxch
add
inc
mov
int
mov
push
fcomps
jmp
repnz
testb
lret
ss
pop
push
clc
stos
xor
sbb
ret
or
nop
idiv
gs
scas
das
pushf
xchg
test
push
dec
insl
sub
iret
popa
pop
push
lds
data16
scas
mov
decb
imul
inc
xor
mov
loop
push
ja
mov
scas
lahf
inc
sbb
sub
aas
xchg
mov
push
mov
xchg
addl
imul
test
insl
fdivrl
out
dec
mov
fnstsw
xchg
mov
jo
cmp
out
cli
bswap
or
mov
dec
push
movsb
xchg
jle
push
pop
lahf
repz
mulb
adc
or
daa
mov
fldcw
fs
roll
jp
mov
jb
ficomps
stos
popa
xor
gs
fidivrl
xchg
mov
mov
sub
inc
inc
leave
int3
push
sbb
into
leave
push
in
sub
pop
push
test
dec
jb
fcompl
add
pop
add
mov
inc
mov
push
aad
and
movsl
fs
cld
lds
dec
inc
sub
adc
mov
cmp
xorl
lods
out
scas
sub
jle
sbb
pop
xchg
add
lock
lcall
sub
popa
aaa
and
lahf
out
jle
mov
sub
inc
add
or
ret
mov
aam
dec
add
lret
test
fwait
or
mov
das
mov
and
add
inc
sahf
xchg
xor
test
or
inc
jnp
enter
sahf
pop
xchg
mov
jle
mov
int3
int
xor
hlt
std
cmp
fnstenv
adcl
mov
cmp
mov
sbb
ret
pop
push
jg
mov
mov
sbb
xchg
imul
rclb
out
add
jg
push
mov
out
cli
xchg
and
push
cmp
aas
xchg
sbbl
rcrw
sub
xor
push
je
xchg
lds
aaa
enter
imul
and
mov
lods
jecxz
sub
xchg
push
imul
pop
mov
mov
enter
daa
push
sub
or
rol
cmpb
xchg
out
es
jp
pop
jge
mov
adc
xchg
mov
adc
xor
sbb
xchg
outsl
int
pop
adc
push
fs
sub
sbb
add
mov
and
xchg
imul
movsl
or
je
dec
fs
add
pop
pop
inc
sub
movsb
insb
dec
dec
pop
les
pushf
repnz
icebp
bound
push
dec
lds
pop
inc
stos
loopne
jno
imul
mov
scas
dec
sbb
in
rcll
and
shlb
aam
cmp
xchg
lea
adc
xchg
addl
cmp
jecxz
daa
sti
adc
cld
in
iret
js
sub
jge
imul
subl
cltd
sbbb
cwtl
lods
mov
out
adc
out
adc
andl
clc
dec
fnstcw
and
stc
add
add
dec
sbb
push
or
push
in
lahf
sbb
into
jmp
mov
je
lods
int3
fwait
add
add
xchg
cli
jb
hlt
into
fcoms
push
or
out
mov
push
inc
repz
ror
pushf
add
cld
jp
sahf
ret
mov
jae
pusha
adc
insb
adc
push
clc
orl
cmp
mov
movsb
push
lahf
sbb
test
xlat
xor
sbb
fdivrl
mov
or
lods
or
cmp
sub
pop
repnz
push
sahf
sub
add
movsl
push
outsl
in
mov
mov
insl
xchg
pop
test
push
aad
mov
mov
xchg
jl
jecxz
and
stos
mov
call
rclb
jmp
pop
call
pop
aad
xor
and
jg
pop
mov
in
andb
or
dec
pop
xchg
jo
icebp
jl
aam
mov
shll
push
mov
stos
pop
lods
in
ljmp
xchg
sbbl
jmp
mov
lods
mov
mov
sbb
or
push
pop
pop
inc
int
dec
add
xchg
xchg
call
inc
pop
fcoms
pop
ljmp
or
xor
ret
xlat
pop
push
jl
push
mov
mov
jns
and
fistl
jge
scas
cmp
out
out
fidivrl
inc
jnp
xchg
jle
sbb
mov
adc
dec
and
ljmp
xor
ret
mov
inc
stc
and
inc
loop
std
and
mov
push
mov
into
xor
mov
repnz
shrb
imul
shll
inc
dec
imul
cmp
cs
pop
mov
jecxz
adc
test
xchg
test
aad
stc
push
loope
sti
add
sbb
xchg
push
add
rorl
jnp
sbbl
adc
or
mov
test
and
xor
xchg
mov
and
and
inc
std
sbb
insl
loop
dec
stc
cltd
and
dec
in
pop
mov
lods
inc
aam
out
pop
add
add
sub
sahf
lcall
and
sub
mov
arpl
cmp
lcall
cld
fs
dec
ds
movsb
adc
andl
mov
push
adc
loope
cmc
or
dec
add
dec
add
jle
lcall
out
ss
xor
rclb
test
dec
inc
daa
pop
sahf
jae
jmp
cmpsl
fiaddl
cltd
repnz
std
mov
jbe
sbb
popa
das
cwtl
test
clc
push
xor
dec
xchg
in
mov
outsl
xchg
das
xor
test
out
push
sub
mov
pop
sbb
push
imul
lcall
adc
mov
scas
xchg
leave
scas
mov
xchg
idivb
sub
mov
clc
or
adc
in
sub
mov
xchg
mov
pusha
mov
jl
movsb
lret
and
mov
cwtl
fwait
xchg
and
add
xor
ljmp
push
mov
ret
mov
lock
test
xchg
jmp
pop
ljmp
mov
js
mov
out
xor
std
scas
test
mov
mov
mov
mov
sbb
paddsw
scas
sub
xor
adc
jmp
sub
xchg
or
shlb
addr16
fildll
add
outsb
cltd
push
xchg
mov
in
into
sub
add
arpl
sbb
mov
lcall
mov
pop
lret
sbb
fs
je
and
xor
icebp
inc
outsb
fisttps
and
std
mov
jne
push
cli
push
push
pop
movsb
inc
lods
xchg
mov
ljmp
pop
sbbb
cli
inc
mov
sarb
std
push
cmp
jl
mov
xor
imul
nop
mov
add
fmull
pushf
or
dec
xchg
sub
popf
test
test
xor
mov
cld
xlat
mov
push
fs
sbb
sub
mov
push
mov
dec
inc
inc
pop
addr16
out
out
inc
fscale
or
cli
fcoms
loopne
push
inc
dec
push
jg
pop
sti
push
mov
sbb
cmp
mov
dec
or
out
movsb
pop
in
xchg
mov
cmp
jl
in
jge
sub
ss
and
inc
cli
mov
jmp
cmpsl
lret
outsl
jns
jno
fimuls
movl
cmpb
mov
sar
jns
sub
mov
sub
pop
xchg
loopne
jb
ret
clc
iret
jg
sub
outsl
push
stos
jnp
lds
or
pop
in
popf
pushl
sarb
adc
jbe
fadds
sahf
sbbb
add
pop
jb
scas
es
or
inc
push
xchg
mov
add
pop
imull
out
mov
sub
and
lods
add
data16
in
out
cmpsb
push
std
loopne
mov
xor
out
lret
add
jno
aad
into
xor
ret
pop
cmc
push
jg
cwtl
jle
xor
std
xchg
repz
mov
push
clc
fcom
fimuls
xor
push
mov
in
inc
sar
ljmp
lea
inc
loop
divb
divl
mov
dec
outsb
js
imul
scas
lret
adc
fcoms
test
addb
or
insb
push
das
std
sub
inc
xor
or
dec
pushf
sbb
out
cli
xor
mov
push
mov
loop
mov
fsub
call
sbb
enter
jb
outsb
pop
insb
pop
addr16
out
inc
inc
es
daa
in
lahf
sbb
int
and
mov
mov
mov
dec
sbb
movb
stc
cmp
dec
or
mov
mov
and
mov
xlat
arpl
rclb
xor
js
out
push
push
mov
pop
pop
mov
mov
call
dec
mov
or
add
fidivl
loop
push
xchg
insb
xchg
mov
shlb
in
sub
mov
sbb
aas
push
and
dec
popf
inc
push
mov
rep
inc
scas
imul
push
fadds
pop
das
push
in
arpl
in
daa
adc
mov
push
sub
lods
jns
cld
jo
mov
sub
mov
sbb
cmpl
mov
push
dec
int3
imul
inc
in
fnstsw
fwait
jo
dec
xor
ret
adc
cmp
arpl
fbld
mov
hlt
lret
push
imull
ret
jle
cmpb
mov
pop
ficompl
or
outsl
pop
movsb
and
or
cmp
pushf
addb
xchg
and
lods
enter
inc
pop
insl
test
push
inc
adc
test
push
and
cmp
in
loopne
fisubrl
sti
aas
aam
add
data16
movsl
inc
cwtl
pop
repnz
and
fbld
out
std
fnstcw
xor
add
test
mov
xchg
cmpsb
jb
push
subb
xchg
ror
mov
out
and
scas
icebp
sbb
adc
jp
dec
inc
pop
sarb
mov
cs
fidivrl
lret
push
ret
or
pop
pop
adc
jmp
xchg
inc
inc
xor
push
jb
mov
add
inc
in
dec
js
rorl
out
ret
gs
leave
adc
push
lods
sbb
jge
call
and
mov
mov
cmc
jmp
scas
sbb
pop
sub
xchg
test
xchg
mov
sbb
shll
cli
sub
xchg
out
mov
cmp
scas
inc
test
daa
add
daa
test
mov
xor
test
inc
mov
and
or
or
mov
fsubrs
xchg
cmp
push
xchg
aad
fwait
cmp
add
mov
test
adc
mov
xor
into
rorl
insb
or
outsl
test
pop
fsubs
dec
je
jmp
mov
js
pop
inc
sbb
inc
sti
aam
pushf
sahf
scas
sahf
js
push
lahf
imul
pop
lock
fstpt
dec
xor
push
bnd
mov
pop
cld
call
or
or
inc
lcall
mov
mov
dec
fnstcw
nop
sbb
popa
test
mov
daa
out
adc
loope
test
xor
jno
lcall
jge
inc
cmp
mov
pop
push
dec
popaw
loop
das
sbb
or
xor
bswap
repz
pop
mov
cmpsl
cld
cltd
arpl
dec
dec
rcrl
xor
call
jns
shrl
cmpsl
push
insl
jge
cmpsb
dec
pop
mov
and
xor
push
pop
mov
cld
jp
clc
aas
dec
insl
inc
sub
js
dec
add
mov
cmp
push
xchg
rolb
push
shrl
sbb
cmp
sbb
inc
aad
mov
je
scas
inc
xchg
aam
push
hlt
pop
mov
cmp
xchg
ja
xchg
cltd
sbb
add
rorb
rcr
push
sahf
rclb
aad
and
inc
dec
sub
iret
ljmp
loopne
lock
sub
in
cli
int3
inc
dec
xchg
fwait
adc
addr16
cmp
sbb
mov
les
xchg
jle
pop
or
ret
fildl
dec
or
mov
pop
add
cwtl
popa
in
in
and
sbb
stos
scas
repz
add
adc
shll
mov
jns
daa
adc
insl
cltd
rcrb
popw
insb
jp
and
jl
dec
push
lcall
movsb
sbb
mov
dec
inc
jmp
mov
push
mov
inc
push
mov
inc
or
mov
pop
xor
mov
shll
shrl
ss
xchg
add
push
jl
in
lods
popf
out
jo
mov
hlt
out
or
int
ss
stos
and
shrl
repnz
imul
hlt
pop
push
cld
push
pop
iret
mov
jnp
insb
mov
pop
scas
inc
sub
pop
out
js
inc
fsubrl
test
xlat
sbb
push
mov
cmp
or
int
inc
inc
mov
dec
test
jns
and
insl
jecxz
out
imul
xor
andl
fucomi
cvtdq2ps
mov
jl
and
push
xchg
xchg
dec
icebp
aam
sub
sbb
or
enter
popa
insb
mov
mov
mov
orb
mov
xchg
xchg
sbb
mov
loop
out
pop
push
pop
xor
mov
fdivrp
test
add
cmp
dec
pushf
sub
aaa
push
mov
fs
movsl
and
daa
aas
mov
xor
xchg
lods
push
mov
repz
aas
lods
cmc
test
loop
mov
mov
pop
xor
idivb
mov
loop
adc
and
shlb
mov
inc
jo
jne
leave
xlat
outsl
out
xchg
sub
jne
rcll
popf
shlb
cs
enter
push
cli
stc
inc
in
pop
inc
inc
lods
mov
nop
das
mov
dec
or
adc
pop
lock
dec
add
lahf
cmp
dec
mov
add
aaa
incb
dec
mov
or
aad
popf
lods
sarl
inc
cld
js
xor
pop
or
sarb
xor
int3
cs
mov
repnz
xor
out
mov
or
ret
jecxz
ds
dec
ret
add
cltd
push
roll
cmp
fldl
pusha
xor
das
fstpt
jo
xchg
jns
sahf
xor
inc
pop
mov
pop
nop
xchg
pop
shll
pop
in
jbe
sti
clc
rcl
scas
xor
gs
adc
push
sar
adc
bound
adc
lcall
xor
jge
and
in
and
dec
inc
push
sti
fs
test
mov
jecxz
push
repz
cmp
call
dec
mov
and
xchg
lret
sub
add
adc
adc
jecxz
popf
sbb
cmp
xor
inc
cwtl
and
sti
push
out
out
loopne
add
jbe
rorb
sub
jg
dec
jo
push
push
shll
in
mov
pop
mov
pop
sbb
xchg
adc
mov
out
gs
mov
sub
fldl
in
pop
daa
loopne
mov
push
aas
xor
mov
push
in
xchg
push
jmp
mov
out
sbb
aaa
int3
arpl
jecxz
lahf
ja
xchg
xor
push
rorb
test
pop
xchg
addr16
push
test
js
sahf
sahf
lcall
adc
cmpsl
bound
icebp
and
stc
aas
pop
scas
push
xchg
inc
xor
cs
mov
repz
push
pop
rcr
hlt
jecxz
test
outsl
lods
into
sbb
fadds
leave
testb
addb
mov
std
adc
outsl
pop
pop
leave
or
fwait
jecxz
lds
adc
fsub
shrb
fsub
inc
jge
jecxz
pop
push
insb
scas
js
stos
mov
xor
mov
push
in
lea
push
or
sti
cmpsl
xchg
adc
fwait
sub
fsubs
pop
push
xor
inc
adc
or
or
insb
adc
movl
add
xchg
insl
das
cmpsb
scas
lahf
lods
push
xor
sbb
int
add
jmp
dec
cli
adc
jecxz
xchg
sbb
sbb
call
ljmp
and
push
or
movsb
fs
push
in
icebp
pop
mov
call
test
insl
dec
push
mov
daa
faddl
mov
mov
xchg
adc
push
stos
bound
int3
xchg
pop
add
sub
movsb
negb
xchg
mov
xchg
mov
dec
sbb
sub
jns
cmp
ss
daa
xor
pushf
sar
jecxz
mov
sarl
jnp
xor
lock
shr
adc
lahf
cmp
int
leave
sbb
mov
or
adc
sub
pop
inc
inc
adc
inc
repnz
push
or
sahf
mov
repz
inc
out
test
mov
into
and
push
popf
or
repz
stos
in
sti
orb
out
and
xlat
lea
neg
and
xadd
and
lret
mov
sarl
jbe
loopne
inc
adc
push
push
jns
or
mov
mov
das
in
xor
cli
adc
mov
push
daa
cmp
es
adc
bound
jo
dec
push
popa
xchg
rcl
sbb
push
xor
xchg
loopne
int
scas
xor
les
fsubl
cmpsl
repz
sbb
xor
fadds
scas
and
stos
fmuls
out
cmp
rol
into
cld
lea
jmp
fcoml
mov
insb
jns
in
fdivs
stos
push
in
inc
fcoml
stos
gs
xor
cmp
enter
pushf
jecxz
test
mov
aaa
push
inc
xchg
loope
mov
mov
sarl
lret
push
inc
inc
jge
scas
or
jmp
inc
jmp
jns
je
inc
mov
cwtl
cmp
pop
sbb
jns
int
pop
jbe
or
fisttpl
aam
or
js
sarb
iret
jle
cmp
icebp
mov
repz
jno
mov
mov
int
test
std
in
inc
adc
jno
mov
adc
mov
mov
dec
hlt
xchg
shl
jp
mov
mov
cmovg
add
xchg
cs
ljmp
and
nop
movsl
xchg
adc
repz
xor
sbb
rep
imul
rol
and
mov
mov
ror
cmp
push
movsb
pusha
lea
add
int3
inc
jo
stos
jmp
mov
inc
adc
pop
adcl
pop
lds
xchg
bnd
dec
xor
jge
inc
leave
jp
push
sub
lods
rorb
push
in
out
sarl
mov
call
push
daa
popf
dec
movzbl
daa
movsl
adc
jo
orb
es
dec
mov
xor
jg
out
mov
or
je
daa
wbinvd
sbb
adc
test
adc
mov
sub
jnp
outsl
cmp
mov
push
movsb
xorl
sbb
cmp
ret
enter
out
or
add
fisttps
push
cmpsb
lds
popa
sub
dec
ja
mov
pop
insl
or
mov
xchg
mov
dec
push
pusha
pop
out
cmp
pop
xchg
xchg
xor
cltd
jle
pop
loopne
fidivrl
xchg
sti
in
fmull
inc
dec
fnstenv
fs
cmpsb
clc
add
pop
lret
sti
iret
pop
add
aas
add
mov
ret
or
xchg
xchg
nop
loopne
sub
dec
lods
pop
pusha
scas
push
test
push
std
mov
mov
aad
xchg
cmp
test
mov
and
je
orb
pusha
cli
push
inc
test
mov
addb
fimuls
lea
dec
je
in
push
fcoms
insb
gs
dec
lret
aas
push
jmp
jmp
jle
sbb
mov
mov
loope
pop
push
push
mov
xlat
or
mov
je
mov
mov
cltd
aad
mov
lock
cmpsl
xor
push
repnz
xchg
mov
sub
adc
mov
inc
enter
and
dec
cltd
sub
push
ss
add
and
fldenv
xchg
mov
out
add
test
dec
xchg
js
js
in
xorl
sahf
jo
ja
int3
mov
fnstsw
jbe,pt
jl
mov
es
decb
or
je
lds
sbb
jg
in
in
xchg
sbb
pop
cmp
jne
mov
inc
test
mov
cwtl
or
sti
xor
jb
pop
or
jmp
ss
xlat
test
and
jne
je
pop
sub
mov
push
mov
dec
gs
pushf
lea
cli
jae
invlpg
cli
cmp
mov
ljmp
movsl
pop
mov
mov
icebp
stc
pop
inc
sub
and
pop
mov
add
xchg
sub
mov
sbb
or
popa
adc
out
movsl
cmpsb
pop
mov
adc
adc
mov
jnp
pop
leave
mov
je
leave
lods
es
cmpsb
mov
cmc
mov
ja
pop
in
cmpsb
mov
addr16
aad
push
adc
pop
mov
int
rcl
xchg
push
inc
mov
mov
pushf
sbb
push
inc
pop
sbb
sub
enter
iret
jno
je
pop
adc
inc
and
lahf
xor
mov
ret
jnp
jp
call
leave
popa
pusha
loop
sub
lret
popa
cmp
lahf
arpl
int3
xor
data16
aas
lcall
cltd
sub
adc
sub
sbb
push
rorb
out
stc
pop
stos
and
cli
insl
fwait
or
rcrl
cmpb
push
add
cmc
fwait
jo
popf
movsl
cmp
pop
push
pop
arpl
cmp
xlat
loop
cmovns
sub
inc
into
js
outsl
movsb
scas
imul
popf
je
and
fdivrp
fistl
and
insb
jne
loop
or
ficoms
pop
and
pop
sub
sub
fwait
ret
mov
sbb
sub
out
out
mov
and
jmp
or
fisttpll
iret
adcl
imul
adc
xchg
jmp
sbb
mov
shlb
jge
pop
ss
mov
sub
mov
ret
jp
fwait
roll
lods
cmp
dec
dec
stos
rcll
shlb
gs
loopne
xchg
inc
bound
pushf
inc
pop
mov
test
fs
dec
xchg
sarl
cmpsb
and
inc
xchg
fsubrl
cli
cmp
push
int
mov
pop
mov
mov
add
jns
sbb
xchg
xorl
pop
cli
int
lds
and
cmp
or
shll
clc
cmpsl
xchg
mov
js
mov
cmp
inc
cli
ss
jbe
mov
fcomp
call
inc
and
loopne
divb
lcall
jg
sub
mov
and
ljmp
adc
adc
inc
adc
inc
jnp
jns
inc
mov
jnp
jns
inc
cmp
fsubrp
pop
out
test
leave
stos
lcall
push
shl
int3
and
movl
cwtl
lahf
inc
fdivrp
mov
jmp
cmp
sbb
mov
push
inc
out
in
inc
loop
cmpsl
inc
hlt
in
stos
pop
vpaddq
lds
xchg
inc
sub
mov
jmp
sub
pop
repnz
xlat
jle
fstpl
jbe
and
mov
and
fimuls
pop
or
insl
cmpsb
bound
sbb
sbb
jne
pop
shl
xor
mov
daa
adc
jne
loop
xchg
push
pop
cmp
inc
insb
out
std
lcall
int3
xlat
and
test
cli
adc
mov
adc
mov
mov
fdivs
hlt
cld
imulb
jge
shlw
xor
fidivl
push
insl
fucom
xlat
mov
jge
fmuls
push
inc
outsb
pop
jnp
adc
hlt
inc
orb
enter
sbb
nop
movb
or
pop
mov
cmp
mov
push
dec
movsb
mov
lods
dec
push
jne
xorb
cmc
daa
xor
fwait
es
xlat
insl
or
cmp
push
insl
sbb
sbb
das
jnp,pt
shll
popa
iret
mov
add
mov
lret
and
jo
cwtl
roll
dec
pushf
mov
mov
bnd
jle
orl
ljmp
push
je
mov
xor
xchg
xchg
mov
inc
lret
inc
test
inc
in
pushl
fldt
call
jo
test
mov
mov
sbb
mov
lcall
mov
xchg
push
or
rcll
rolb
fldcw
imul
or
pushf
or
add
pusha
lock
mov
inc
cmp
aam
sarb
outsl
add
mov
cmp
cmp
mov
adc
and
les
lret
push
push
inc
jbe
mov
sub
mov
cmpsb
sarb
xor
loop
jo
in
jnp
test
sbb
insb
xchg
jns,pt
mov
mov
xor
dec
sarb
lcall
lods
lock
dec
adc
sub
lods
jp
popf
mov
dec
popa
out
lret
or
inc
test
sub
dec
push
jg
adc
sbb
pusha
fsubrs
fwait
aaa
rolb
sub
rclb
cmp
test
in
mov
mov
lahf
faddl
xor
mov
aas
stc
mov
imul
xchg
shlb
or
inc
cmp
pop
adc
push
cmp
xor
lret
mov
insl
in
xlat
fdivrl
adc
aam
fcoml
xorb
fistpll
or
and
js
stos
mov
mov
imul
cmp
iret
repz
addr16
mov
dec
add
and
fldl
inc
xor
mov
jns
das
push
int3
mov
lods
sub
mov
cmp
adc
or
fs
scas
push
stos
cwtl
sub
or
gs
scas
dec
mov
das
or
mov
clc
xchg
loop
negl
idiv
divl
adc
shll
cld
fcmovbe
xchg
adc
add
add
insb
lock
dec
fildll
sbb
in
js
arpl
push
push
jnp
cltd
xor
mov
pop
rclb
daa
iret
out
popa
lods
mov
or
pop
cmp
mov
cli
jbe
enter
sub
mov
pop
inc
and
je
jo
xchg
push
lods
js
sub
jns
notl
dec
cmp
jnp
testb
mov
add
xchg
int
ljmp
imul
icebp
out
jge
lcall
or
insl
repz
mov
stc
sbb
test
ljmp
cli
mov
and
das
jno
mov
cmp
call
out
xor
pop
cs
inc
mov
das
in
mov
and
call
jnp
sarb
sbb
push
xor
and
or
or
les
mov
inc
jmp
lea
inc
mov
inc
and
ja
orb
jno
dec
pop
dec
icebp
je
cmc
pop
and
pop
sbb
sub
and
push
fs
imul
and
in
icebp
cmp
xor
ret
lahf
sbb
or
repnz
mov
bound
in
mov
or
dec
fsubrs
daa
aad
mov
add
loopne
daa
aad
repnz
cs
filds
bound
in
jp
pop
sbb
popa
jl
in
xchg
dec
insb
jae
add
inc
leave
int3
push
in
xlat
cs
cld
das
mov
addb
ss
mov
mov
push
test
push
in
mov
pop
aam
stos
adc
mov
pop
add
cwtl
popa
leave
or
cmp
sub
addr16
push
cmp
xchg
sub
mov
adc
cs
out
andl
lds
mov
pop
xchg
push
mov
insb
fsubp
cwtl
mov
scas
xchg
cld
xlat
fistps
movsl
xor
adc
pop
roll
scas
fs
push
push
frstor
inc
popa
cmp
imul
data16
mov
adc
mov
sub
rcl
shl
pop
push
sbb
pop
jo
add
push
inc
mov
xchg
mov
xlat
sti
inc
cmc
ljmp
adc
add
lods
addr16
push
mov
popf
jmp
fistpll
mov
push
rcl
xor
jg
pop
outsb
call
mov
mov
sbb
lcall
mov
jecxz
xchg
xchg
push
lret
test
popa
add
add
push
push
xchg
jo
mov
jge
jmp
arpl
inc
xchg
sub
int
sub
sbb
sub
fildll
jno
mov
inc
test
repz
jno
rcll
sub
pcmpeqd
jecxz
pop
loopne
testl
add
fstpl
imul
out
js
sub
jno
and
lods
cmp
out
mov
jno
data16
lods
pop
shll
pop
and
leave
mov
pop
push
stos
sbb
mov
rclb
fs
pusha
cmc
push
test
cmp
and
int3
mov
insl
mov
or
movsb
inc
rorl
push
inc
aaa
jmp
sub
mov
ret
je
and
aaa
test
lret
cmpsl
fwait
lcall
jae
or
xchg
lahf
subb
jo
cmp
or
or
cs
push
das
into
push
jo
xlat
adc
jb
loop
xor
pop
in
mov
mov
and
pop
adc
mov
sub
mov
cmc
push
bnd
mov
xchg
ja
mov
pop
inc
mov
fs
test
faddl
jle
insl
mov
idivl
push
mov
add
mov
xchg
scas
fsubr
ds
adc
push
dec
jbe
xchg
aam
mov
cwtl
cli
add
xor
sub
mov
outsb
adc
test
push
inc
inc
in
xor
mov
push
sub
xchg
imul
cmp
push
sub
xor
ss
dec
jno
gs
xchg
dec
push
dec
add
inc
sbb
xchg
sbb
or
lcall
js
inc
dec
pop
pop
ja
pop
mov
fwait
arpl
enter
cmpsb
mov
test
mov
fcompl
jne
push
fbstp
data16
lcall
adc
loop
stos
jl
into
xlat
out
sbb
push
mov
into
inc
add
movsb
mov
leave
dec
lcall
push
aam
add
stos
jle
push
rcl
or
ds
or
inc
es
jno
in
cs
cmp
mov
dec
mov
fnstsw
mov
arpl
mov
into
cmp
cmpsl
imul
xor
sbb
lock
repnz
negb
rorb
and
pop
cmp
push
jo
jns
dec
ss
jnp
cmp
movsl
cmpsl
push
loope
imul
jg
and
cld
aam
inc
arpl
push
rcrl
adc
insb
pop
fistl
mov
andb
testl
pop
and
leave
pop
dec
movsb
lds
imull
mov
shrb
jg
cmpsl
cltd
shr
outsb
adc
icebp
test
cs
push
dec
adc
sub
bound
pop
lds
pop
pop
aaa
cwtl
jmp
lea
xor
fldl
andb
push
cli
push
ret
inc
jmp
pop
dec
cli
mov
push
pop
imul
repnz
cli
shrb
loop
into
sbb
xor
and
cs
je
add
xor
insb
outsb
inc
pop
mov
test
aad
jns
outsb
roll
ret
adc
sbb
sbb
mov
xor
or
fs
dec
lret
xchg
sub
je
stos
xor
mov
jecxz
jg
pop
mov
data16
lds
mov
cmp
sbbl
nop
iret
push
lret
aaa
ret
mov
jnp
pop
mov
int
add
orl
mov
movsl
dec
cmc
jnp
inc
dec
scas
int3
mov
push
sub
xchg
dec
pop
mov
pusha
pop
fcmovnb
add
pop
in
inc
xor
dec
dec
mov
movsb
jp
jb
pop
mov
stos
lds
xor
loopne
imul
jle
sti
mov
lret
pop
filds
hlt
lods
sub
inc
int
fwait
sub
or
or
xlat
and
scas
jb
adc
push
in
test
jbe
pop
jl
mov
jb
push
adcl
adc
test
push
adc
popa
ss
cmc
popa
or
push
into
iret
nop
test
xor
enter
mulb
adc
push
pop
pusha
lret
and
mov
sbb
sbb
fcomps
jge
fisubl
mov
cli
mov
sbb
inc
in
dec
jp
add
test
insb
in
flds
pusha
int
outsb
pop
addl
dec
divb
sahf
sbb
pusha
andb
sahf
fcoms
push
sub
sbb
cmp
adc
lahf
popf
mov
aam
mov
dec
and
test
and
js
fs
leave
xor
jl
jge
jp
imull
mov
dec
pop
add
jne
xchg
inc
or
xor
xchg
sub
shlb
lahf
xor
hlt
pop
pushf
shll
or
cmp
addb
out
sub
xor
popf
xchg
mov
mov
movl
mov
shrl
mov
mov
mov
jb
xchg
or
mov
sub
lock
lods
lahf
nop
mov
push
sub
leave
cs
lock
cmp
mov
ret
outsb
shrl
stos
sub
in
in
cmc
push
in
enter
mov
cmpsb
inc
jg
mov
lahf
cmp
test
imul
xor
call
push
and
mov
pop
mov
out
mov
rcrb
mov
cwtl
sarb
mov
jbe
pop
and
lods
and
ret
aaa
mov
sti
pop
xchg
fisttps
jp
mov
jecxz
mov
cld
fidivs
stc
roll
xor
test
cmp
pop
push
stos
lret
pop
in
test
imul
mov
cmpsb
jg
xor
add
cmpb
cli
or
cmpsb
mov
and
mov
lods
rorb
sahf
and
int
cmp
enter
inc
or
mov
mov
mov
push
loopne
xchg
jns
sar
mov
push
negb
jbe
dec
mov
dec
enter
sti
jbe
mov
nop
ret
testl
sahf
into
movsb
enter
fsubrl
mov
jl
insl
aad
popf
adc
outsl
cmp
lret
pushf
inc
fistpll
xlat
daa
add
push
arpl
inc
mov
outsb
aas
inc
fsubl
or
sti
pop
jnp
dec
and
test
jge
inc
jae
das
div
sub
xchg
lods
dec
push
call
dec
mov
icebp
mov
mov
lcall
xor
xchg
and
iret
add
outsl
jno
jge
dec
movsl
jae
adc
or
push
and
test
jo
sub
mov
cwtl
mov
sbb
add
mov
aad
stc
jnp
movsb
sub
rol
push
mov
setae
leave
pop
imul
pop
adc
pop
and
push
mov
and
cmp
jb
bound
mov
pop
into
xor
or
xchg
add
add
pop
inc
dec
pop
add
sub
sub
nop
addr16
pop
aas
mov
sub
hlt
fldt
mov
or
push
sti
jg
mov
ret
shll
out
add
xchg
jns
std
testb
adc
or
lods
lods
xchg
mov
sbb
push
cmp
mov
iret
test
add
pop
jecxz
and
popf
xchg
add
ljmp
out
add
dec
shl
lea
adc
inc
lds
mov
mov
mov
mov
mov
stc
mov
and
adc
sbb
out
das
movsb
fsubl
mov
inc
loope
fbld
push
xchg
insb
insb
jno
jp
sbb
jno
and
scas
xchg
add
dec
aaa
popf
pop
and
std
xchg
imul
daa
iret
adc
sub
fcomi
aad
or
arpl
ja
leave
test
lcall
adc
mov
lret
loope
and
jns
inc
outsb
sub
mov
int
add
and
stos
add
adc
sti
addr16
cltd
subl
push
cmp
dec
loopne
xchg
cmp
lret
out
inc
aam
in
jmp
cmp
insb
cwtl
dec
psllq
jecxz
xchg
ret
lea
inc
rclb
mov
push
mov
push
mov
adcl
inc
aad
or
mov
fbstp
int
rcrb
les
and
cmpsb
sbb
adc
ret
sbb
cmp
lret
adc
lcall
xchg
stos
xor
sbb
cmp
nop
stc
cmc
test
data16
adc
inc
scas
scas
jns
roll
lea
sbb
lcall
scas
pusha
js
push
mov
xor
jge
or
insl
orl
jo
sbb
incl
push
lcall
enter
xchg
loopne
js
inc
or
in
repnz
popl
sub
add
mov
xchg
push
and
or
mov
fdivrp
out
hlt
cli
lcall
out
or
xchg
sbb
jns
inc
mov
lea
clc
push
inc
add
add
adc
or
mov
xor
xchg
shlb
stos
mov
ljmp
push
insl
jp
push
nop
inc
sbb
xlat
sti
push
insb
mov
fwait
out
aam
adc
mov
or
or
mov
in
out
fcomi
pop
out
aad
out
jge
fsubrl
out
cmc
ss
movl
jb
push
aaa
xchg
mov
jnp
pop
jg
subl
rolb
add
pop
adc
dec
mov
imul
pop
movsb
repz
or
mov
fsubrp
repnz
mov
xchg
or
icebp
jge
mov
sarl
sub
in
xor
ja
jl
stos
mov
in
jge
test
nop
cwtl
xchg
mov
int3
push
push
pop
aaa
and
mov
lods
shlb
add
xchg
ss
mov
adc
push
fistps
imul
loopne
roll
xchg
mov
dec
add
or
and
jecxz
lret
pop
pop
lods
push
scas
shlb
pushl
or
les
fisubs
ret
inc
ljmp
test
movl
pop
mov
rcrb
xchg
repz
ret
subb
je
sub
dec
inc
sbb
jne
mov
fdivrs
cmp
mov
outsl
pop
pop
adc
xchg
mov
adc
pop
adc
lahf
jnp
int
loop
lods
sbb
movsb
outsl
and
add
xchg
sub
push
lret
mov
mov
lcall
pop
ret
mov
sarl
and
ds
push
decl
mov
dec
call
mov
jmp
sub
cmpsl
notl
inc
arpl
add
popf
mov
test
out
repz
ja
leave
popf
decb
js
icebp
cs
sub
pop
cmc
or
dec
aam
stc
inc
jle
push
aaa
js
xchg
push
sbb
mov
nop
pop
mov
sub
dec
or
andb
push
daa
popf
inc
mov
mov
popf
mov
pusha
in
dec
fcmove
movsl
lahf
xor
mov
or
out
or
sbb
xchg
mov
dec
xor
jle
mov
mov
gs
fstpl
push
fcompl
mov
sar
cltd
rol
stos
idiv
clc
or
xor
push
popf
lods
pop
rorl
es
or
or
ja
insl
jg
outsb
and
ss
mov
icebp
dec
xor
adc
aam
cmp
in
cmp
sub
inc
sbb
sub
dec
lods
fldl
aad
push
nop
ss
in
jbe
sarb
sarl
bound
add
gs
mov
outsl
rolb
and
xor
cmc
mov
fwait
aad
mov
test
test
inc
push
and
mov
pop
inc
xchg
sbb
icebp
scas
xchg
sbb
pop
sub
scas
loope
sahf
sbb
out
into
int
daa
ret
jae
call
cmpsl
add
jae
add
imul
in
cmpsb
mov
scas
jp
mov
jbe
sarl
ja
and
lret
lods
aaa
add
and
push
inc
fs
enter
xor
arpl
mov
mov
and
pop
sub
cmpsl
sbb
cli
arpl
dec
sbb
mov
decl
jle
sub
xor
mov
incb
push
aas
mov
js
push
mov
inc
idivl
jle
call
pop
lods
cmp
scas
repnz
adc
xchg
lea
add
mov
imul
mov
cwtl
enter
fisubrs
dec
imul
sti
dec
inc
mov
ss
je
repz
aaa
scas
mov
or
rol
andb
stos
dec
inc
fdivrl
insb
in
sbb
adc
pop
loopne
out
aam
lea
mov
inc
orb
movaps
std
dec
push
loope
ror
hlt
push
arpl
out
jb
in
mov
pop
fldcw
imul
les
and
aad
ja
mov
outsb
push
ret
pop
nop
out
jae
ss
ret
pop
int
gs
stos
jp
fidivrl
scas
call
ds
or
inc
dec
stc
mov
and
mov
mov
jns
mov
pop
xchg
out
int3
scas
repz
in
in
aaa
mov
das
pop
or
push
out
mov
mov
scas
dec
ds
aad
inc
xor
in
mov
mov
shrb
mov
lret
arpl
imul
test
xlat
sub
cmp
clc
aam
xor
loopne
mov
inc
and
jno
push
insl
lods
shlb
jno
adc
lret
jge
lods
jbe
xchg
xchg
stc
mov
or
cwtl
and
test
test
fs
mov
es
in
int3
cld
je
inc
push
mov
lcall
mov
out
test
cmp
shrl
mov
out
addr16
jbe
mov
repz
adc
xchg
loope
js
jns
adc
adc
inc
popa
inc
inc
jmp
aaa
cmp
xor
dec
lahf
xlat
add
mov
les
or
fisttps
negl
xor
clc
outsb
imul
jecxz
inc
daa
or
ficompl
jecxz
and
dec
pushf
jb
adc
inc
aaa
test
or
sahf
adcb
push
mov
mov
mov
ds
outsl
scas
xor
call
fnstcw
cmp
insb
maskmovq
imull
push
repz
mov
sbb
jge
lcall
dec
les
pushf
aaa
cmp
jae
pop
iret
mov
adc
xchg
orl
scas
mov
push
inc
mov
adc
jns
outsl
js
hlt
cmc
loope
ficoms
std
mov
andl
pop
add
lods
xor
push
ror
les
sti
push
xor
call
out
push
push
stos
ret
dec
and
sbb
imull
lret
mov
xchg
lea
dec
push
dec
mov
cmp
je
popa
es
jo
leave
push
movsl
fsubl
je
ljmp
test
cwtl
jge
jge
jbe
add
mov
or
imul
mov
rorl
iret
lahf
sbb
fldenv
mov
rolb
stos
bound
xor
ud1
into
test
andl
imul
jne
sbb
lret
xor
cli
pushf
movsb
cmp
aaa
mov
outsl
fs
test
cmpl
in
add
mov
jae
mov
insl
lret
push
lods
sub
push
xchg
popa
cli
repnz
push
mov
test
push
jmp
sub
push
jle
je
cmpb
fnsave
cltd
and
std
inc
adc
leave
or
lret
sub
xchg
dec
mov
push
cld
jae
insb
imul
data16
js
pop
loopne
adc
addr16
sahf
mov
xor
loop
imul
or
sbb
mov
sub
popf
fistpll
pusha
nop
mov
inc
divl
push
mov
push
mov
adc
adcb
jb
cmp
movsl
jb
push
js
sub
into
or
mov
andb
mov
scas
jp
cmp
cmpsb
jge
push
or
data16
jo
sub
pop
pop
sub
addr16
dec
stos
loope
sub
popa
adc
push
and
and
jnp
push
cmp
test
jmp
call
test
mov
add
popf
and
gs
into
dec
jbe
mov
iret
xchg
sub
int
mov
repnz
push
inc
and
mov
rcll
fimull
pop
xlat
adc
xchg
testb
lret
insb
fsubs
popa
movsl
xchg
mov
insl
mov
push
sbb
das
xabort
jbe
or
mov
mov
mov
jne
sub
insb
pop
hlt
adc
movsl
push
or
adc
les
dec
in
jb
subl
lahf
les
mov
pop
sub
mov
and
insb
bnd
mov
mov
out
out
jle
outsb
je
lahf
sub
mov
jae
lods
push
in
xchg
adc
lods
clc
inc
sbb
xchg
pop
pop
or
cmp
in
imul
push
xchg
cmp
mov
pop
add
loopne
mov
xchg
addr16
push
pop
add
add
xchg
in
mov
bound
xchg
cmp
push
arpl
cld
enter
stos
or
pop
jp
sub
jg
popa
mov
arpl
mov
adc
loop
adc
dec
lret
insb
fildll
push
je
test
jle
mov
or
dec
les
pop
push
or
jp
clc
imul
xchg
es
lock
mov
adc
iret
and
dec
mov
xchg
out
xor
fldcw
out
mov
mov
xchg
fdiv
ss
fdiv
push
adc
out
adc
jbe
shl
add
loop
enter
cmp
sub
pop
aas
scas
iret
popa
pop
xor
inc
mov
mov
cld
xor
adc
iret
mov
sbb
ds
xor
ret
mov
cmp
lret
mov
dec
or
pop
xor
mov
and
adc
pop
inc
sbb
xchg
jns
jb
cld
arpl
int
pop
mov
negb
mov
xchg
sub
sbb
push
push
dec
aas
pop
add
and
je
divl
mov
insl
xor
test
mov
mov
ja
mov
mov
inc
pop
adc
shll
sbb
fs
or
clc
lcall
dec
sti
cmpsl
add
in
in
divb
int3
movsl
bndstx
xchg
cmp
clc
enter
pop
sbbb
aam
bound
ret
jmp
lret
cli
loop
pusha
fisubs
shl
adc
xchg
aad
cwtl
pop
test
inc
shl
pop
cmp
jl
gs
fwait
imul
sub
cmpsl
dec
and
test
subb
cmpsl
sbb
mov
lret
and
or
pop
and
rcrb
stos
xchg
cmp
cmp
stos
inc
in
jp
adc
dec
dec
dec
and
addl
lcall
xchg
pop
xor
jno
daa
push
outsl
loopne
rcl
inc
std
ret
lcall
pop
add
imull
cmp
fsubp
mov
push
pusha
xchg
not
and
add
loop
sbb
inc
out
cmp
gs
movsl
dec
push
lret
mov
cmp
lock
mov
mov
icebp
add
xlat
fcmovnu
inc
cwtl
jbe
mov
push
mov
pop
roll
mov
xorb
imul
adc
insl
and
sub
or
dec
ja
mov
or
jnp
rcl
mov
popf
xchg
jge
xchg
dec
or
xchg
leave
fcmovbe
sub
jns
push
inc
dec
ljmp
addr16
push
notl
inc
mov
das
outsb
mov
inc
inc
jo
lods
inc
adcl
test
sub
insb
xlat
inc
push
sub
and
iret
mov
pop
mov
xchg
or
in
mov
add
xor
jae
or
les
jmp
mov
mov
push
enter
imul
mov
push
jae
lds
sub
inc
arpl
test
es
push
sbb
jge
mov
mov
divb
jge
jne
adc
or
mov
and
and
push
testb
fwait
inc
jb
loop
xchg
pusha
push
xchg
pop
lea
mov
pushf
mov
sbb
mov
dec
inc
incl
iret
jb
es
sbb
icebp
pusha
jcxz
movsl
arpl
inc
pop
pop
aad
adc
sarl
mov
xor
xchg
pushl
mov
mov
in
xchg
jno
movsl
imulb
mov
enter
xchg
mov
or
mov
loop
out
int
dec
or
fisubl
shlb
and
pop
dec
aad
fadds
jns
insl
rorb
push
dec
test
mov
jae
lods
les
pop
imul
cltd
jmp
aaa
pop
insl
xor
std
fsubr
bound
inc
in
push
pop
popa
sbb
dec
add
punpckhwd
decb
pop
mov
cltd
dec
js
xchg
push
or
inc
xchg
mov
inc
jge
idiv
leave
cmpsl
outsb
jne
mov
adc
sub
adc
pop
in
push
cmp
repnz
roll
mov
fwait
xchg
int3
divl
insb
mov
inc
sbb
adc
loope
pop
adc
pushf
lds
pusha
jne
push
pusha
pop
adc
or
cs
test
adc
movsl
jp
lcall
inc
pusha
mov
lock
pop
push
addb
nop
lahf
push
cmc
lods
jo
pop
mov
and
andb
mov
out
cmpsb
dec
xchg
mov
mov
addr16
loope
jge
fnstenv
push
cmp
dec
mov
into
lret
xchg
in
push
ja
mov
fbstp
inc
or
jl
xor
dec
mov
ficoms
xor
fwait
pop
push
clc
rcrl
or
mov
push
jnp
xorb
dec
add
ret
jbe
in
mov
jle
ss
repnz
sub
lea
and
pop
pop
ljmp
add
repnz
out
stos
push
mov
shl
push
add
sar
out
popf
mov
mov
fildll
lcall
out
lret
addr16
stc
addr16
pop
daa
jecxz
mov
lds
sbb
insl
ret
call
pop
andl
dec
clc
sti
iret
sub
enter
adc
cmp
xchg
jnp
mov
pushf
sbb
xchg
rorl
pop
cmp
xlat
adc
lcall
sbb
jne
mov
cwtl
ret
dec
aad
fstpl
dec
loop
das
in
cmp
mov
add
push
mov
hlt
movsb
pusha
xor
sbb
int3
add
fs
aaa
gs
cmp
dec
dec
pop
mov
push
mov
dec
push
add
mov
inc
ret
stc
jb
lcall
pop
movsb
loope
mov
test
mov
pop
test
in
sub
pushf
test
fcompl
popf
js
cmp
mov
sbb
sbb
icebp
push
mov
xor
mov
pop
inc
xor
adc
shlb
hlt
jg
testl
adc
push
test
or
push
xor
cmp
jno
mov
jnp
fwait
cmp
dec
bound
icebp
ret
inc
nop
cmc
adc
xlat
hlt
mov
fnstsw
push
or
cld
lods
out
jmp
in
sub
xchg
mov
dec
push
mov
aad
mov
das
mov
stos
dec
adcb
pop
inc
enter
sbb
imul
xchg
push
adc
push
inc
movsl
cmpsl
loopne
mov
cld
test
push
adc
imul
icebp
ret
lock
xchg
xor
stc
pop
cltd
sub
dec
std
aad
fcomp
mov
inc
add
adc
in
jbe
mov
sbb
ret
lods
dec
mov
es
xchg
pop
das
frstor
cmp
xchg
sarl
inc
mov
adc
sub
xor
lock
mov
fsubrl
fisubl
mov
cmp
push
push
inc
mov
repz
jg
sti
xchg
inc
daa
leave
imul
dec
pusha
loope
push
xor
sub
push
imul
push
mov
lret
das
js
xor
ror
in
incb
xorb
pop
jl
idivl
push
jns
mov
cs
jge
xor
cmc
hlt
nop
push
xchg
jbe
out
dec
flds
pavgb
mov
mov
lods
push
add
into
adc
in
fwait
es
insl
jb
rcll
popa
fimull
ljmp
out
mulb
aaa
jo
in
ljmp
int3
out
cmp
call
adc
sub
stos
jge
sbb
pop
ljmp
mov
jne
insl
adc
mov
xchg
fwait
mov
mov
popf
cwtl
fadd
adc
jae
shlb
xor
mov
pop
scas
mov
clc
jno
imul
push
movsl
aas
loop
cmp
stos
mov
sti
out
dec
icebp
negl
test
mov
cld
gs
sbb
mov
int
pop
insb
cmpl
or
pop
scas
adcb
xlat
int
push
push
arpl
andl
add
and
xlat
mov
fcoms
push
sub
xchg
addr16
xor
hlt
imul
sub
xchg
and
inc
push
rolb
xchg
pop
xchg
jns
mov
in
hlt
adc
cmp
outsb
mov
scas
hlt
lods
push
decl
pop
pop
lret
ret
ret
jecxz
fmuls
andb
int
pop
inc
lahf
fwait
cmp
add
xor
outsb
mov
push
and
lock
fimull
add
mov
push
mov
imul
leave
xchg
inc
sub
ds
xor
pop
popa
pop
pop
popf
xor
jnp
inc
rcrb
lods
lcall
lods
pop
movsl
dec
add
mov
insl
xor
pop
dec
rolb
adc
xlat
xchg
push
xor
mov
xor
es
outsw
cld
rcrb
aad
add
add
cld
popf
outsb
pop
lret
fwait
mov
orb
test
clc
push
sub
jge
popf
mov
mov
xor
xlat
xor
pop
int3
push
shll
adc
and
scas
add
mov
dec
and
adc
mov
stc
xchg
and
sbb
loopne
inc
xor
or
cmp
lods
aam
sbbl
sahf
jb
je
and
pop
imul
std
cmp
ficoml
push
mov
jp
test
fmull
repnz
jl
aaa
mov
adc
or
pushf
push
sbb
push
sub
arpl
ss
adc
push
addr16
repz
imul
mov
pushf
add
push
xchg
pop
cmp
adc
mov
sahf
dec
pop
xor
rolb
adc
lret
outsl
and
lret
jp
aam
push
mov
pop
out
cmp
popl
sub
loope
lea
data16
nop
xor
adc
adc
sysenter
stos
cmp
test
shrl
xlat
mov
xchg
pop
jae
mov
push
mov
cmp
cmp
fld
nop
mov
scas
adc
inc
aas
jge
nop
int3
cltd
mov
cltd
jmp
fisttpll
push
shlb
jns
pop
xchg
mov
fmulp
je
rol
bound
loopne
sbb
mov
jno
mov
out
dec
jp
testb
pop
fnsave
ret
mov
out
fiaddl
xor
adc
xchg
in
sub
dec
sub
jecxz
sub
inc
aad
scas
adc
jl
push
dec
mov
ret
adc
stos
fmul
pushf
push
cltd
pop
loope
bound
mov
jg
insl
sub
pop
or
jae
jne
mov
xor
orb
sub
xchg
mov
into
xor
adc
sahf
scas
insl
jbe
xchg
inc
mov
ds
jbe
idivb
adc
lods
lret
inc
and
jbe
orb
jecxz
outsb
xchg
mov
pop
mov
fcoml
fisttpl
iret
mov
iret
xor
stos
dec
fidivrs
push
popf
jle
ja
ret
icebp
push
mov
test
adc
into
insb
lret
arpl
mov
pop
adc
jecxz
pusha
out
mov
outsb
shr
and
enter
xchg
push
xor
int
adc
and
xor
sahf
mov
sub
stc
lahf
xlat
pop
movsl
lahf
popa
into
push
and
jns
xchg
push
das
xchg
bound
stc
fnstenv
xchg
ljmp
shrb
scas
cmp
dec
in
loopne
iret
sahf
shlb
mov
push
fwait
in
mov
sbb
cs
mov
shrb
in
xchg
sbb
fistpll
xor
cld
cwtl
xor
push
cmp
push
pusha
lock
sbb
or
icebp
fiadds
cmp
dec
xlat
pushf
xchg
hlt
mov
fnstcw
cmp
popa
out
clc
push
mov
mov
cmpsb
inc
mov
jmp
in
mov
rcrb
pop
iret
pushf
dec
dec
inc
out
push
xchg
stc
xchg
dec
jne
movsl
sub
push
subb
dec
das
jns
xor
mov
or
dec
lods
and
pop
or
xor
jns
pop
inc
fidivs
dec
sti
lods
mov
pop
mov
cmpl
xlat
je
enter
dec
and
ret
imul
outsb
sbb
add
mov
jl
cmc
movsb
and
stos
xor
test
not
ljmp
pop
mov
lret
mov
ljmp
and
clc
cmp
xchg
jb
andb
aaa
js
les
imul
dec
shrb
mov
dec
fwait
xor
push
pop
lret
rcrb
sub
or
stos
mov
push
mov
xchg
fs
inc
mov
add
lcall
ss
movsl
je
pop
das
ljmp
pop
pushf
push
icebp
outsb
out
popf
xor
fcmovbe
xorl
int3
xchg
and
add
ret
cwtl
leave
outsb
inc
pop
mov
js
cmp
mov
jne
xchg
adc
mov
iret
cmp
iret
gs
mov
sbb
dec
into
mov
jns
sub
jae
aam
andb
aaa
cmp
mov
pop
mov
jp
ja
or
push
je
push
add
out
pop
repz
pop
push
xchg
sbb
xchg
adc
scas
loop
push
mov
clc
cmp
jp
lods
cld
call
dec
inc
dec
push
push
iret
xchg
das
cmp
xchg
lret
sub
mov
cltd
push
adc
out
mov
mov
pop
dec
sbb
sbb
xor
pop
adc
jnp
ljmp
popa
sub
xchg
cmc
xor
and
aad
mov
push
ret
imul
cwtl
out
mov
or
aas
pop
fisubrs
ffreep
shlb
jmp
inc
push
leave
es
cmp
fisttpl
lds
fnstsw
movsl
mov
out
inc
xor
xlat
sarb
sub
mov
cmp
xor
imul
mov
loopne
or
or
lods
rep
dec
xor
shlb
outsb
cmpsb
lea
push
cmpsb
or
xorb
cs
lret
mov
pop
shl
iret
imul
fdivrs
xchg
or
dec
enter
or
aad
sbb
add
in
mov
movsl
nop
lods
lea
aaa
fwait
es
xchg
dec
mov
push
loopne
jb
stos
pop
arpl
stc
test
dec
xlat
hlt
inc
out
scas
sbb
in
enter
or
sub
mov
push
dec
xchg
shrl
test
pop
dec
addr16
in
cmpsb
or
stc
ja
movsb
mov
inc
add
dec
xor
in
das
popf
test
push
push
mov
imul
jo
pop
dec
pop
subl
pusha
inc
std
jge
in
test
and
lds
mov
adc
scas
int
fs
jecxz
xorl
fstps
int3
xchg
xor
sub
jp
mov
stos
mov
push
pop
int
int
aas
cwtl
lods
sbb
loopne
push
lcall
push
aad
push
and
aam
push
sbb
cltd
add
bound
push
std
inc
jecxz
mov
outsb
aas
das
fstl
pop
sarb
fcmovnu
push
xor
das
sub
xor
pop
ret
or
shlb
movsb
iret
scas
and
aam
mov
sub
mov
mov
xor
mov
addl
inc
or
dec
and
rol
neg
add
stc
popf
dec
sbb
cmp
jl
outsl
mov
xchg
xchg
inc
cmpsb
test
push
notb
sub
inc
xchg
popa
sbb
inc
cmp
adc
xchg
stos
jnp
mov
lods
aad
in
push
pop
and
clc
pop
daa
rorl
and
jge
adc
outsl
ss
xor
jg
addr16
inc
pop
movsl
inc
lahf
pop
bound
sub
pop
and
jmp
sbb
and
jg
xchg
push
cltd
push
not
cli
fsubl
mov
in
xor
call
nop
dec
cmp
pop
mov
jne
inc
in
sbb
dec
pusha
push
push
adc
dec
mov
pop
sti
jg
loope
xor
pop
cmpsl
out
push
sub
bound
mov
xlat
jne
mov
adc
push
std
arpl
mov
mov
cmp
sbb
jp
aam
mov
lcall
ds
xchg
aaa
fsubl
loop
lcall
sub
add
popf
adc
dec
repnz
adc
pop
sub
mov
mov
shl
mov
shl
lcall
jbe
push
jmp
rcll
bound
inc
mov
pop
test
sti
call
clc
adc
loopne
das
idivl
int3
adc
or
sbb
mov
fs
mov
cltd
aam
push
iret
mov
dec
lahf
mov
mov
pushl
scas
rorb
call
std
imul
jecxz
call
mov
adc
enter
into
xchg
adc
xor
scas
out
sbb
sbb
repz
lahf
setnp
mov
lcall
mov
add
lods
mov
repz
stc
or
pop
push
adc
leave
sub
cmp
fsubrs
outsl
jnp
xor
mov
nop
inc
test
push
js
adc
pop
cmpsl
push
and
mov
sub
sub
push
leave
lock
or
sub
push
cmp
scas
stos
std
out
pop
es
add
xchg
movhps
mov
pop
lahf
add
pop
mov
pushf
mov
les
mov
out
and
clc
push
aad
push
sbb
in
imul
ret
fiaddl
ds
inc
or
cmc
or
cmpsl
les
sti
aaa
push
jg
test
jg
mov
jl
jecxz
lea
es
push
fucom
sti
dec
mov
cltd
dec
dec
and
loopne
test
ficoms
push
mov
and
adc
stc
lahf
jecxz
inc
dec
nop
mov
call
lret
sbb
icebp
pop
adc
lcall
mov
cmpsb
push
jns
ds
xchg
pop
aaa
cmp
sbb
gs
mov
push
dec
not
ret
lret
rclb
mov
push
test
enter
mov
xor
xor
dec
mov
lods
fisttpll
xchg
lods
mov
sar
inc
adc
sbb
dec
push
jo
mov
mov
sbb
lods
arpl
mov
mov
mov
xchg
cmp
push
aas
inc
sub
add
or
or
mov
faddl
jle
sub
testl
fsubs
xor
insl
in
stos
sub
inc
inc
lcall
cmpsb
into
and
mov
inc
adc
call
sbb
inc
leave
shlb
data16
jmp
js
movsl
dec
sub
out
or
outsl
jne
mov
mov
push
mov
xor
mov
lret
icebp
sub
shl
mov
xchg
cmpsb
pushf
pop
mov
cs
cld
cld
pop
dec
aad
pop
nop
sub
sbb
dec
cmc
in
push
and
xor
mov
xor
jg
iret
outsl
xor
xchg
repz
out
xor
inc
lock
cmp
add
xorb
mov
pop
mov
scas
lret
xor
pushf
mov
push
fstpt
aaa
jecxz
out
ret
xor
xchg
xchg
fbld
inc
into
outsl
ljmp
jp
rep
inc
add
cmpsb
lock
or
pop
xchg
pop
out
popa
and
mov
in
cmp
and
jmp
push
or
nop
push
jno
rcl
dec
ljmp
mov
out
and
pop
mov
add
jb
pushf
sbb
outsl
repz
test
sar
sbb
dec
ja
mov
dec
mov
mov
imul
push
das
jl
xchg
sbb
in
outsl
loop
insl
loopne
push
sbb
mov
and
aad
enter
cli
insl
jge
movzbl
lret
push
int3
ffreep
sarl
fdivrl
push
bound
sub
xchg
push
mov
ret
mov
ficoms
cmp
pop
pop
inc
sub
aaa
xor
sub
xchg
mov
xor
leave
and
ror
insb
add
imull
jmp
bound
cmpsb
lods
stc
loop
call
loop
xor
add
push
aad
xor
sarl
fiadds
add
mov
inc
sub
mov
jae
lods
cmp
imul
scas
mov
xchg
sub
faddl
in
push
dec
in
aam
dec
lea
clc
push
xchg
bound
or
sbb
stos
incl
popf
add
xor
jmp
icebp
push
push
shll
push
js
cmp
fidivrl
pop
cmp
jl
sbb
jno
add
ret
inc
pop
inc
scas
scas
mov
cmp
add
mov
xchg
lahf
out
cmpsb
lahf
push
mov
push
xchg
push
adc
out
inc
adc
cs
mov
sbbl
cmp
psubd
cli
scas
bound
loop
and
jmp
mov
repz
mov
test
test
bound
sbb
xchg
and
jp
xchg
adc
cmp
push
decl
aad
popf
pushf
ds
add
lods
inc
cmc
mov
xor
xor
cli
or
add
in
mov
jmp
sub
cmp
mov
mov
push
daa
mov
sarb
push
sub
sbb
mov
xchg
test
sarb
cmp
adc
mov
addr16
cli
sub
mov
cmpsb
inc
scas
mov
or
shlb
lea
rorb
es
pop
sub
ljmp
pusha
repz
sbb
mov
add
or
aam
mov
push
fimull
dec
pop
enter
fs
loop
mov
xchg
ss
lds
roll
xor
shl
repnz
mov
popf
jl
jp
popf
aam
xor
push
rol
stos
mov
mov
mov
sub
pop
xchg
inc
scas
sti
insl
ljmp
inc
pop
or
fwait
jl
test
jns
mov
push
sub
addb
jns
add
adc
nop
jle
fidivl
or
sub
adc
out
fdivrs
xchg
mov
aam
mov
lea
ds
add
sbb
test
add
dec
mov
sbb
add
jge
es
sbb
mov
mov
mov
xlat
shll
jb
push
jb
pop
inc
sbb
push
ljmp
xchg
sbb
mov
int
push
add
lahf
loop
pop
nop
rcrb
mov
fwait
xchg
adc
cmp
add
negl
test
aad
stos
mov
cmpsl
push
mov
xchg
loopne
shrl
xor
lahf
cmpsl
sub
out
push
insb
cmpsb
dec
sub
enter
mov
in
outsl
push
ljmp
dec
repz
movsl
jno
ret
sbb
lds
sub
sti
out
ja
and
lods
pusha
push
icebp
pusha
push
xchg
loope
lahf
add
cli
cmc
sbb
cmc
mov
or
or
fwait
adc
out
xor
mov
push
push
inc
mov
in
jo
dec
cmp
add
or
and
mov
add
mov
out
insl
cltd
imul
pusha
fcom
cli
xor
bound
ret
push
push
arpl
test
adc
or
or
rorb
xor
popf
lret
shl
mull
and
pop
sub
cmp
dec
or
xchg
adc
sub
lods
fcmovb
fistl
push
ja
aad
and
lcall
and
loopne
push
cltd
jecxz
aam
lret
xor
loopne
lock
sbb
ss
xchg
aaa
adc
push
xchg
aaa
outsl
xchg
in
insl
aam
dec
inc
imul
frstor
js
xchg
fcmovb
xor
mov
dec
or
roll
out
xor
xchg
lret
xor
psubusb
scas
lea
pop
mov
jmp
sub
sbb
fisubrs
aas
int3
scas
xchg
mov
clc
clc
cmp
jle
dec
inc
es
cmp
xchg
fisubl
cs
dec
xor
sbb
pop
outsw
jecxz
int3
idivb
decb
sub
aam
sub
call
idivl
aad
jo
das
xchg
mov
mov
mov
scas
pop
lods
or
mov
dec
xchg
pop
test
sbb
mov
gs
decl
sbb
sub
aam
lret
inc
and
dec
shrb
adc
push
fadds
leave
mov
mov
mov
ljmp
add
inc
shlb
cmp
jo
jno
sbbb
mov
cltd
adc
mov
js
fidivs
testb
dec
mov
lock
xchg
xor
fwait
stos
mov
js
mov
sahf
je,pn
mov
cmp
jp
push
dec
dec
inc
and
arpl
sbb
cmpsl
loopne
cmp
aas
incb
stos
sbb
mov
movsl
push
sub
bound
outsb
jo
sbb
inc
mov
mov
and
pop
or
out
cltd
outsb
adc
push
xlat
cltd
mov
jb
pushf
push
cmc
mov
jo
or
pop
stc
arpl
cltd
sub
xchg
or
and
loop
xor
ds
mov
jl
scas
cli
cmp
inc
dec
jnp
xchg
lds
and
and
in
mov
repnz
xchg
push
shl
jl
mov
pop
and
out
mov
insb
sbb
adc
pop
sub
mov
jmp
test
insb
xchg
push
adc
ljmp
mov
jl
roll
pop
jecxz
pop
out
into
ds
ret
test
pop
add
add
add
dec
das
outsb
sub
xlat
or
cmp
xor
icebp
add
scas
pop
xchg
sub
xor
push
cmp
dec
push
pushl
addb
pop
test
in
lods
jbe
mov
movsb
mov
mov
insl
sti
cmp
in
xchg
and
dec
andl
clc
sbb
xchg
sbb
leave
in
sbb
fsts
add
lahf
xor
cmp
movsl
cld
add
loopne
cmpsl
sarb
fwait
pop
pop
cmp
mov
daa
adc
cmp
cmp
insb
in
mov
cmpsb
loopne
adc
add
and
adc
mov
pop
sbb
inc
xchg
subl
test
dec
mov
cmp
lods
aad
sub
mov
push
pop
aas
int3
fcoms
call
mov
add
inc
loope
xor
filds
pop
push
movsl
test
mov
mov
out
js
nop
test
inc
and
push
add
pop
lods
jne
cmpsb
jo
shrb
adc
cmp
jne
push
into
mov
fwait
cmpsb
andb
clc
add
mov
scas
sbb
dec
push
mov
mov
adc
int3
fists
push
jo
ds
mov
std
lcall
loopne
call
mov
cli
add
addr16
outsl
adc
xor
push
loop
mov
out
cmc
add
jns
enter
sub
popf
ret
mov
insl
mov
push
push
add
mov
rorl
cmp
shlb
rcrb
jae
hlt
adcl
xchg
pop
mov
insb
push
cmp
add
or
xor
aaa
jecxz
ja
xor
push
fdiv
out
sub
and
pop
aam
nop
inc
push
ds
repnz
fstpt
lret
jnp
xchg
popf
mov
jle
popa
cmp
dec
jmp
cmpsl
xchg
fucomip
mov
push
in
push
loopne
dec
jmp
outsb
mov
mov
pop
aad
out
jbe
mov
push
imul
leave
push
pusha
iret
adc
aam
dec
or
cmp
mov
mov
test
dec
in
cld
popa
or
pop
fisttps
pushfw
lods
int
mov
jle
adc
pusha
inc
scas
xchg
cwtl
sarl
je
js
fwait
dec
xchg
daa
and
in
mov
js
mov
pop
and
xor
fwait
pop
sub
stos
fidivs
inc
fwait
sub
xor
int3
cmp
cmp
jbe
and
ljmp
or
aas
jo
dec
gs
jl
cmp
or
ret
leave
daa
inc
mov
inc
cmp
insl
and
cs
cmpsl
mov
or
mov
sub
movsl
sub
ret
lods
sbb
jnp
out
add
jge
aaa
mov
test
popa
mov
outsl
int
pusha
and
mov
push
fldenv
aaa
lret
aaa
nop
pop
cld
negl
lods
push
insl
cld
cmp
pop
jb
lret
sahf
mov
pusha
enter
adc
and
jecxz
mov
xor
popa
and
jg
mov
or
loope
cli
call
add
mov
scas
jle
inc
sbb
xor
lret
xor
and
cld
in
mov
out
push
roll
repnz
pop
push
inc
jne
les
xor
int
rolb
and
push
ret
push
cld
mov
xchg
jl
loope
arpl
shr
push
pop
xlat
loop
xchg
insl
mov
add
cmp
sub
or
xchg
shll
pusha
adc
push
jmp
negl
lock
add
mov
cmp
cmp
push
xorl
hlt
push
push
fisttpll
cs
xchg
in
lds
scas
push
in
sarl
mov
xchg
jb
mov
mov
pop
or
test
jno
loop
xchg
in
lods
movsl
xorb
push
pop
add
sub
mov
cli
lods
aad
push
mov
mov
or
les
std
inc
fdivrl
shll
imul
mul
dec
pop
inc
bound
jns
mov
fs
imul
jno
mov
std
loope
fld
mov
mov
lods
or
xchg
call
ret
fisubrs
sarb
jo
and
shlb
and
sbb
sub
jmp
pop
jmp
or
dec
out
mov
pop
lcall
jno
mov
mulb
inc
push
inc
arpl
adc
mov
stos
push
rcrb
movsb
std
inc
or
hlt
mov
pushf
cmp
push
icebp
or
inc
dec
jp
xchg
mov
mov
xchg
cmpsb
push
cmp
cmp
iret
mov
jge
lock
movsl
nop
mov
cmpsl
inc
shll
lret
subb
mov
fbstp
jecxz
mov
dec
mov
xchg
cmp
sahf
xor
sahf
stos
std
sbb
push
js
dec
arpl
out
xchg
call
lods
xchg
leave
sbb
jmp
fst
shlb
outsb
pop
pop
mov
rorl
mov
mov
popf
xchg
cmp
dec
cmp
mov
xor
lahf
es
fwait
cs
mov
add
inc
test
sti
mov
xchg
test
xor
rorb
leave
ds
or
push
xchg
mov
pusha
dec
dec
inc
loop
pop
lock
sub
cmp
pop
sbb
mov
mov
test
push
out
lret
lret
sub
fstps
call
movsb
outsl
adc
in
xchg
in
mov
cmp
xor
daa
or
enter
push
rolb
push
into
lret
addb
sbb
loop
and
and
mov
lock
adc
dec
dec
xor
es
push
mov
jl
mov
xor
and
cmp
mov
mov
mov
or
lea
pop
add
ret
iret
mov
dec
pop
adc
dec
cmpsl
cmpsb
jno
xchg
pop
imul
pop
addr16
out
adc
popa
and
add
out
leave
pop
repnz
adc
dec
mov
lret
pop
or
iret
or
outsb
mov
or
inc
aam
inc
dec
rcll
into
mov
inc
add
fistpl
dec
or
xor
cmp
addr16
shrl
push
lret
add
dec
mov
out
roll
in
xor
lock
sahf
insb
imul
and
scas
outsb
fstl
pop
dec
pushf
jnp
scas
outsb
je
and
mov
ficompl
popf
inc
jnp
xlat
cmp
shrb
xchg
lahf
adc
sbb
adc
into
mov
movsb
test
xchg
js
push
aaa
mov
scas
push
js
ret
popf
mov
lahf
ficomps
inc
xchg
or
xchg
loopne
sub
add
xchg
jae
test
mov
mov
call
leave
bound
cli
ror
iret
xchg
sti
push
push
sub
sub
js
sub
nop
dec
jae
out
shl
insb
jge
pop
mov
mov
push
jnp
je
mov
cmpsl
jle
push
mov
popa
mov
adc
ret
pushf
xchg
mov
rcr
ljmp
mov
adc
cmp
aaa
jmp
jne
cwtl
mov
jae
andl
nop
lods
mov
mov
fildll
cmp
dec
xorb
bound
sub
sbb
nop
repnz
ds
outsb
add
xchg
sub
mov
test
iret
push
lock
aas
add
and
cmpsb
jle
testb
rcll
iret
scas
cld
outsl
jecxz
jno
xorl
lret
icebp
ret
jl
je
or
or
and
mov
xlat
sub
sbb
dec
xor
and
fsubrl
sub
hlt
and
ret
not
mov
pop
sbb
add
sbb
push
add
stos
xchg
out
mov
insl
jecxz
ljmp
enter
push
leave
pushl
daa
sub
sbb
ret
rcl
mov
fistpl
ss
jp
es
nop
mov
inc
sbb
icebp
cmp
jp
pop
out
das
movsl
fcoml
dec
push
lcall
jae
inc
jp
aaa
gs
and
xchg
jge
ds
loop
aad
hlt
cmc
arpl
mov
arpl
pop
dec
jns
icebp
movsl
fistpl
nop
jge
fadd
xchg
je
pop
ror
mov
mov
mov
in
xchg
sbb
aaa
push
adc
mov
pop
test
test
adc
sti
push
add
sub
push
popa
popf
mov
xor
and
out
mov
dec
push
xchg
out
mov
and
sahf
repnz
mov
fwait
into
jp
jne
into
leave
sarb
addr16
lret
ljmp
aaa
mov
inc
movsl
lahf
dec
sub
cmp
mov
pushf
jl
sbb
pop
movsl
bound
loop
cli
in
lret
sbb
aad
sub
add
mov
loope
sub
stc
pusha
test
lahf
push
push
daa
jae
xchg
cmpsb
pop
lcall
es
sbb
dec
mov
nop
hlt
popl
mov
jo
pop
dec
pop
push
lds
dec
arpl
test
mov
fdiv
aaa
pusha
sarb
mov
mov
das
test
mov
pop
movsl
rclb
movsb
mov
fsubp
inc
pop
and
push
insl
and
mov
scas
pushf
fcmovbe
shll
cmpsl
lods
and
mov
lahf
xchg
mov
mov
fwait
test
mov
xor
fnsave
mov
lods
sub
mov
cmp
fidivrl
enter
mov
push
xchg
ds
adc
and
dec
mov
popa
aad
cmp
testl
insb
fwait
bound
in
push
mov
mov
push
cld
pop
imul
rcll
or
dec
pop
mulb
xorb
loope
mov
std
rcl
dec
icebp
lock
aaa
stos
icebp
mov
adc
push
add
pop
xchg
cmpl
cmpsl
cmc
stc
iret
or
sub
loopne
add
stc
xlat
imul
data16
es
pop
sub
arpl
pop
imul
mov
xor
pop
fidivrl
enter
fimuls
sahf
jmp
lds
jb
push
xchg
faddp
aas
push
xor
jae
rol
adc
outsb
jbe
leave
or
fnstcw
push
loop
ret
xor
push
push
and
lret
fdivs
outsl
xchg
mov
pop
jp
int3
adc
mov
sbb
mov
addr16
dec
into
jmp
cmp
inc
sub
push
or
mov
jb
pop
mov
je
add
cmpsl
mov
popa
jle
icebp
mov
xor
leave
inc
mov
pop
das
pop
push
sub
jecxz
fisubrs
or
xlat
cmp
clc
mov
in
adc
xchg
loope
outsb
mov
jp
bound
cmpsb
mov
fisttps
movsb
movsb
mov
add
adc
cmc
inc
jp
jecxz
enter
fisttpll
dec
jne
movsl
es
or
push
jp
cmp
test
and
pushf
inc
jnp
jge
sub
sub
jge
pop
jae
sub
mov
fisubrs
les
idiv
and
insl
mov
or
pop
xorl
scas
shll
jae
mov
lret
cmpsb
out
fmul
aam
ja
sub
inc
lcall
scas
data16
inc
repz
mov
mov
add
and
add
test
adc
xlat
xchg
fdivrs
add
xlat
outsb
scas
pusha
ret
sbb
call
and
scas
pop
pop
mov
mov
adc
cltd
and
fisttpl
sahf
mov
arpl
das
ret
push
pushf
jle
sbb
cmc
popf
int
aas
out
inc
pop
leave
mov
icebp
jmp
xchg
or
pusha
ffree
xchg
shrb
xchg
cmp
dec
push
rolb
insb
and
push
inc
fcom
pop
adc
mov
js
aas
fimull
cmpsb
xchg
sbb
mov
mov
out
mov
sbb
and
inc
dec
rolb
add
and
into
sub
test
mov
int
js
inc
insl
adc
add
fimull
int
xor
cld
adc
add
daa
pop
dec
es
xchg
lods
jbe
add
in
ret
mov
cmp
mov
cwtl
push
mov
shlb
adc
mov
mov
push
pop
rorl
sahf
cmp
adc
adc
mov
add
fcom
adc
add
jbe
movl
imull
outsb
outsb
and
sub
xchg
jp
cmp
call
pop
mov
cs
clc
push
rolb
push
dec
dec
icebp
lret
mov
and
jge
insb
jl
pop
push
das
jle
mov
xchg
sbb
movsl
pop
hlt
test
ljmp
loope
out
dec
or
push
push
arpl
cmp
int3
sbb
inc
jo
pop
js
mov
mov
in
jno
cmp
aaa
dec
sbb
sbb
mov
jge
gs
popf
add
ss
out
movb
shll
ja
sbb
rorl
call
push
popa
xor
push
stc
pusha
dec
xor
lds
add
lods
cmpsl
repnz
jge
mov
sub
out
out
push
clc
adc
les
shll
pop
dec
mov
inc
andl
cs
testb
adc
push
leave
lds
fcoms
mov
in
adc
mov
add
movsb
push
adc
in
inc
lea
fstpt
jne
jp
jl
xor
rorb
dec
jge
push
xlat
inc
int3
xchg
lahf
imul
xchg
mov
lahf
pop
nop
or
scas
lret
adcb
add
mov
and
push
xor
stos
xor
adc
mov
dec
icebp
out
dec
fidivrs
int3
shlb
sub
lcall
pop
stos
pop
call
aas
xchg
pop
roll
mov
lret
nop
dec
pop
xlat
fwait
pop
mov
push
mov
sahf
aad
or
loope
jmp
jl,pt
sbb
jne
cs
pop
sub
and
add
es
popa
mull
push
iret
inc
test
xor
cmp
mov
imul
jb
pop
movl
fists
inc
mov
negb
and
js
mov
sub
push
add
adc
loopne
push
in
jne
mov
mov
inc
dec
in
push
insl
into
jno
and
call
sbb
ljmp
pop
inc
cmp
pop
lock
not
loop
ja
adc
fucomi
cs
fdivrs
sti
gs
mov
mov
push
jg
or
mov
mov
jl
inc
ss
dec
rolb
and
in
or
out
outsb
cld
push
sbb
mov
mov
cwtl
cmp
mov
xchg
mov
mov
mov
outsl
ds
xor
sub
mov
ret
xchg
or
shll
in
jg
sbb
push
push
pop
mov
and
mov
fnstenv
adc
add
adc
cltd
jp
or
bound
sub
add
movsb
cli
out
pop
rcrl
ss
cmp
decb
adc
aas
leave
cmp
cmp
cli
jo
std
call
out
enter
sbb
pop
pop
push
notl
loope
inc
xlat
xchg
mov
push
test
popf
mov
mov
ja
or
xchg
mov
fistpll
inc
movsl
mov
and
mulb
pop
in
dec
jle
pop
out
ja
xchg
adc
xchg
sahf
les
hlt
dec
mov
add
mov
sbb
xor
inc
push
nop
je
movsl
and
inc
leave
sbb
pusha
sbb
and
mov
cmpl
cltd
test
test
sbb
xchg
inc
aas
push
add
lret
or
inc
pushf
push
fcmovbe
test
stc
lret
out
dec
ror
xchg
testb
fisttpll
pop
xor
xchg
inc
and
arpl
push
ror
inc
cli
ja
jmp
es
push
push
xor
out
cld
inc
mov
push
pop
test
pushf
insb
repnz
pop
test
sahf
mov
inc
add
stc
add
jo
ficompl
or
sahf
enter
xor
outsl
rolb
mov
cmpsb
lcall
push
in
cli
ljmp
in
outsb
scas
and
fldl
popa
test
call
jbe
xchg
jne
ret
pop
pop
jo
xor
pop
frstor
jge
mov
adc
mov
lahf
sub
and
fsub
into
and
mov
roll
das
mov
cmpb
inc
das
ja
push
rcrb
mov
inc
pop
ja
rorb
pushl
adc
and
mov
or
orb
jmp
pop
sahf
pop
test
push
notl
std
cmp
bound
aaa
les
add
mov
int
imul
aaa
adc
mov
insb
lds
jmp
cwtl
cmp
mov
and
add
cmp
adc
and
push
xor
ljmp
ss
jp
sbb
push
xchg
push
xchg
mov
in
ja
neg
or
pushf
pop
add
jecxz
pop
xor
enter
xchg
inc
sub
jle
and
popa
inc
movsb
stos
or
dec
sub
push
sub
mov
or
jecxz
adc
pop
stos
cmpsb
movsl
das
push
jb
jbe
dec
sbb
cmp
cmp
je
sub
lds
add
jmp
loope
mov
xlat
cmpsl
adc
mov
pushf
sub
jg
push
pop
push
subl
stos
cs
inc
jae
xlat
fs
jo
rorl
jp
in
or
mov
xor
fnstsw
idivl
scas
jle
fwait
jl
aad
iret
pop
add
jle
lock
outsl
popa
push
xlat
nop
movsb
xlat
cmp
and
sbb
pop
push
loopne
mov
cmpb
js
repnz
sbb
push
mov
fs
or
lods
add
or
jge
jbe
jl
or
scas
sbb
mov
shll
clc
mov
xchg
cs
lahf
adc
fbld
cmp
rcll
in
add
jno
jae
shufps
lcall
mov
sahf
mov
fwait
addr16
xor
push
stos
push
pop
in
and
int
cli
cmp
sbb
jns
in
jae
sbb
push
mov
sbb
popf
cmp
cmp
or
fbld
sub
lahf
lcall
jg
xor
jae
inc
mov
jbe
fsubrs
daa
jne
pop
roll
or
icebp
data16
sahf
or
or
add
mov
pop
aam
xor
in
or
es
dec
mov
andb
mov
les
dec
mov
jp
lds
vsubss
push
lahf
jnp
add
adc
sarl
xchg
es
jb
or
bound
jnp
shl
ds
or
iret
adc
imul
negl
pop
inc
lock
and
test
arpl
push
mov
jo
leave
inc
outsb
fnsave
out
adc
cmp
int
xchg
popa
push
out
ficompl
ljmp
xor
clc
daa
add
jmp
std
adc
mov
imul
mov
pop
or
pop
mov
mov
cld
js
arpl
mov
jne
dec
mov
or
lea
test
lahf
push
outsl
stc
push
pushf
mov
ret
repz
lret
in
push
clc
lock
insb
inc
mov
adc
xchg
dec
cli
mov
mov
mov
inc
cwtl
out
pusha
mov
jmp
rorb
mov
pushf
xor
jb
cltd
int3
data16
inc
jns
pop
ret
mov
xchg
pushf
rolb
mov
inc
xchg
movsl
lds
cmp
xchg
add
mov
rcrl
jl
icebp
sar
inc
pop
xchg
jae
inc
pop
orw
fnstcw
outsl
insb
xchg
xchg
aam
adc
in
repz
cmpl
icebp
fwait
out
pop
cmc
sbb
xchg
xor
ss
cmp
ret
rorl
ret
outsb
call
xchg
mov
jge
into
out
leave
mov
push
and
dec
loop
pusha
xchg
pop
jmp
xor
dec
pop
popa
push
mov
cld
ret
jnp
out
pop
jge
call
cs
xor
popa
add
jecxz
int3
cmpl
pop
shl
lret
jbe
add
inc
add
dec
push
fsubrs
and
insl
jge
lock
cmp
imul
inc
or
sbb
shrl
adc
jl
push
into
clc
dec
jge
and
mov
sbb
pop
push
jmp
mov
inc
in
and
jo
xor
incb
and
lret
int3
push
ret
imul
jae
cmp
fwait
xor
and
add
add
or
lret
test
cld
sbb
popf
xchg
adc
xchg
pushf
cwtl
std
shll
rcll
cmp
cli
fnstsw
push
sub
in
addb
cltd
movsb
xchg
xor
pop
aad
xchg
sbb
adc
mov
push
mov
clc
adc
mov
mov
mov
push
test
das
cmp
lods
and
push
std
add
out
cmp
jl
lret
push
inc
sub
rcrl
mov
daa
jbe
arpl
xor
bound
sub
mov
mov
sub
jecxz
add
xor
sub
push
jmp
and
cmp
sbb
ds
inc
mov
dec
cmp
or
xchg
dec
xor
or
and
popa
mov
inc
push
or
div
push
cmp
sub
jge
cltd
stos
lods
jp
add
push
push
jne
lods
aas
jnp
add
test
sub
cli
push
dec
lds
inc
mov
inc
push
into
cmp
fcompl
cmp
sbb
pop
xor
or
popf
out
inc
pop
cmp
and
pop
dec
enter
add
in
cpuid
push
mov
das
mov
rcrl
pop
ljmp
addr16
push
iret
pop
add
dec
pop
ret
push
les
out
cmc
test
adc
mov
and
shl
push
inc
pop
sbb
arpl
mov
push
mov
push
mov
and
aaa
jge
mov
pop
jns
jb
mov
sub
pusha
mov
mov
cmp
ret
or
push
xchg
cmp
popa
iret
lret
cli
sbb
cwtl
test
cli
es
jb
fnstsw
adc
xchg
insl
xor
dec
pop
add
pop
add
push
or
out
mov
inc
lds
pushf
add
mov
in
pop
icebp
push
mov
popa
jo
xlat
sbb
or
fwait
movups
cmp
dec
insl
stos
mov
sub
xor
or
addb
mov
jge
inc
dec
aad
lods
push
sub
jg
les
xchg
fnstsw
or
stos
pop
mov
repz
in
push
dec
sbb
in
push
sbb
push
repnz
sbb
scas
inc
loopne
pop
inc
shll
in
jge
push
adc
inc
mov
jg
neg
push
jp
ljmp
lds
je
lcall
pop
pop
inc
xchg
arpl
cs
dec
mov
imul
popa
nop
aad
popf
es
popf
into
add
inc
sbb
add
push
inc
sbb
mov
in
in
lea
xchg
fs
cmc
pop
cmp
and
int
sub
push
jno
popf
scas
xor
xchg
nop
jo
lods
mov
loop
dec
lods
in
adc
cmp
mov
js
mov
stos
xor
sbb
xor
xor
lret
or
sbb
mov
jne
cmp
dec
mov
cmp
notl
cmp
test
xor
mov
xchg
in
and
gs
out
adc
shr
bound
or
pop
mov
xor
sbb
xor
mov
shlb
mov
pop
fidivs
ret
test
repz
out
jl
push
faddl
xor
sbb
aam
nop
and
cmc
lret
aam
sub
xor
mov
sub
xchg
fwait
inc
mov
fildl
outsl
subb
adc
incb
incl
repnz
lods
js
mov
add
ret
push
dec
mov
and
xor
out
add
cs
call
adc
repnz
lcall
hlt
xchg
and
xor
sbb
lret
add
xchg
mov
lcall
mov
xchg
mov
pop
and
push
push
inc
xlat
push
push
mov
push
shrl
sub
dec
mov
aaa
cwtl
jne
test
cmc
pop
pop
sbb
dec
out
adc
insb
cmp
sbb
jb,pt
movsb
dec
loope
mov
sbb
dec
adc
ret
pushf
push
push
adc
scas
and
jle
dec
cmpsb
mov
sbbb
fbstp
test
out
sbb
mov
adc
scas
jl
cld
mov
xor
jb
push
add
test
sub
outsb
mov
pop
aas
push
dec
jo
test
xchg
jecxz
xor
imul
mov
rol
push
xlat
aaa
mov
lret
int3
and
out
sub
push
pop
jl
ljmp
scas
inc
out
inc
fdivrl
mov
mov
fisubs
std
xor
inc
aad
loope
lods
mov
inc
inc
sbb
jb
dec
dec
jnp
lods
mov
mov
mov
push
pop
cmc
mov
mov
dec
sbb
scas
push
es
sub
loopne
aaa
ror
ret
pop
test
add
outsl
pop
xchg
pop
fnstsw
jge
xor
or
mov
jle
insb
in
shrl
imul
loope
pusha
inc
dec
mov
pop
pop
sarb
jl
lret
bound
mov
sbb
aaa
or
jae
dec
push
xchg
fnstcw
out
mov
lds
pop
xchg
and
lods
test
mov
aas
rcrb
add
cmpsb
popl
fistl
subl
pop
loope
mov
adc
cmpsb
add
insb
xor
sub
lret
lea
pop
inc
push
ror
jno
sti
movsb
push
xchg
inc
lcall
xchg
xchg
cli
ret
into
cltd
je
jle
dec
popa
cmp
ja
xor
in
pushl
fdivp
or
loop
xor
cmp
sahf
xor
decl
sub
sub
ja
shll
je
sbb
scas
mov
xor
pop
and
mov
pushf
jle
les
je
arpl
jecxz
cmp
xor
jecxz
addr16
cmp
dec
add
mov
and
imul
sub
push
inc
dec
mov
data16
xor
sbbl
add
xchg
fbstp
sbb
xchg
stos
test
inc
xor
xor
inc
pop
dec
cmp
and
lret
popa
gs
inc
ret
inc
add
xchg
mov
cwtl
sub
xchg
mov
cmp
outsb
pop
pop
lea
into
rorl
sbb
cmp
push
inc
adc
sbb
or
pushf
push
push
movsl
jmp
pause
popa
into
cmpsb
xor
cmpsb
js
jne
popf
sbb
idivl
ja
lea
addr16
sub
or
cmp
flds
in
add
adc
mov
ret
aad
push
int
int3
repz
sti
xor
sti
jne
lods
movsb
mov
pusha
out
cltd
pop
adc
mov
cmp
ret
sbb
pop
mov
rcll
shr
mov
in
dec
push
mov
mov
popf
inc
loop
sbb
mov
call
cmp
pop
aad
sbb
xchg
add
xlat
inc
fbld
cmp
imul
lahf
xor
mov
push
test
pop
add
cld
cmp
sti
outsb
sub
insb
fbld
aas
push
inc
and
pop
frstor
add
cmp
sti
out
iret
add
pop
mov
cmp
cs
mov
mov
rol
and
adc
outsl
mov
fstpl
iret
push
fstpl
pop
or
stc
inc
push
pop
add
outsb
jns
sbb
divb
and
sbbb
addl
out
fidivrs
ljmp
call
and
loop
pop
dec
sub
std
adc
or
mov
xchg
xor
sub
mov
call
dec
dec
xor
sti
out
cmp
aad
mov
jne
jae
add
notl
stos
lods
lahf
cltd
sbb
sahf
dec
jecxz
adcb
push
ss
pushf
loope
xchg
push
daa
insl
cmpsb
dec
sub
movsb
xchg
mov
in
fdivp
dec
sub
mov
faddp
sahf
mov
es
sbb
dec
pusha
stc
mov
xchg
shrb
cmp
enter
and
pop
bnd
mov
shlb
mov
mov
mov
jecxz
scas
and
jle
stc
dec
mov
mov
add
dec
or
je
cmp
push
sbb
call
outsl
xor
jl
fistpll
sahf
or
and
nop
sub
arpl
rorl
inc
frstor
subb
mov
cmp
xor
nop
sbb
adc
out
jno
sub
dec
arpl
fadds
into
addr16
and
lds
lock
inc
ret
cwtl
adc
push
daa
adc
sbbl
dec
inc
sbb
and
cld
shl
lcall
data16
movsb
mov
imulb
aas
mov
dec
aaa
clc
int3
and
mov
dec
and
daa
xchg
dec
in
or
adc
icebp
xchg
add
cld
mov
mov
mov
sbb
jecxz
imul
pop
pop
cs
fimull
cwtl
shrb
xchg
add
movb
cli
jge
lods
mov
lea
xor
fwait
dec
pop
scas
fdivrl
shlb
fs
in
addr16
sarl
push
mov
sbb
mov
fwait
mov
cmc
icebp
dec
jne
leave
cmpsb
rorl
mov
cli
push
ret
mov
jo
test
sbb
js
push
cmp
out
es
dec
out
fldenv
sub
add
aas
gs
lret
test
addr16
jnp
push
iret
mov
mov
adc
push
xchg
adc
mov
pop
dec
pushf
mov
adc
stos
sub
mov
push
icebp
loop
mov
fs
mov
sbb
sbb
mov
inc
sbb
jae
xchg
mov
inc
ds
pop
sub
lods
sbb
sbb
in
lods
adc
mov
mov
dec
js
jo
dec
jno
push
mov
add
mov
loop
std
jmp
call
adc
sbb
fisubs
mov
das
ret
fistps
dec
dec
cmp
icebp
jne
bound
ja
xor
je
imul
xchg
mov
add
in
and
ret
xor
dec
scas
adc
fwait
int3
sbb
push
daa
xchg
fwait
xchg
push
push
lods
fcompl
and
dec
fiadds
adc
jg
stc
loop
mov
in
cmp
clc
popf
inc
jo
mov
mov
fnsave
mov
movsl
mov
cld
das
pushl
lret
jno
and
movsl
inc
lock
cmc
leave
addr16
push
test
mov
xor
lahf
mov
imul
fcomps
mov
jb
pop
and
adc
out
sub
sbb
push
imul
es
stos
fsubs
adc
adc
mov
dec
arpl
cmp
mov
mov
xchg
mov
push
sti
movsb
mov
jecxz,pn
pop
imul
iret
cmp
sbb
xlat
fwait
outsb
cs
jp
loop
jp
outsl
cmp
roll
out
jmp
dec
cmpsb
adc
mov
pop
or
jle
lcall
mov
xchg
andb
push
and
cmp
mov
fdivr
outsl
inc
dec
sbb
pop
or
scas
mov
sahf
sub
imull
addl
iret
pop
xchg
inc
mov
lret
testl
xchg
adcb
fdivl
sub
ss
sbb
sub
add
nop
cld
out
in
inc
iret
shll
ljmp
sub
fcompl
mov
test
xchg
iret
out
insl
push
sbb
fcmovnbe
mov
test
scas
outsb
or
inc
sub
jnp
push
adc
sbb
lock
xchg
adc
in
jg
stos
sbb
jo
mov
jne
imul
pop
cmp
sbb
xchg
jg
aaa
and
xorl
hlt
adc
ret
mov
adc
mov
xchg
shl
loope
ss
push
movsl
popa
cmp
sbb
xor
andl
mov
js
sbb
push
sets
outsb
inc
repnz
mov
adc
lcall
repz
int
adc
stc
cmpsl
mov
popa
cmp
pop
ficoms
inc
mov
cmpsl
std
xchg
in
jecxz
sub
and
hlt
pop
shlb
outsb
movsl
inc
pop
pushf
loopne
repz
lret
mov
movsl
ljmp
orps
jmp
inc
pop
cmc
cmp
jp
inc
std
xchg
xchg
rol
jnp
mov
mov
cmp
aad
sub
jle
sarl
roll
fdivs
into
sbb
sub
aad
into
test
ja
add
lret
rep
lds
cwtl
ja
push
ds
sbb
jne
sbb
shrb
mov
mov
xchg
mov
mov
xor
lret
add
or
add
repnz
push
lahf
sbb
mov
inc
xor
mov
adcl
pop
jle
xorb
jl
or
mov
in
jl
cmp
adcb
jns
fwait
or
jnp
jnp
sub
add
into
xor
jae
xlat
push
out
and
inc
rorl
inc
das
ret
out
pop
aam
mov
enter
popa
adc
push
aaa
sbb
cltd
mov
fildll
push
xor
in
push
or
inc
sbb
pop
daa
mov
jl
push
neg
mov
repnz
push
cwtl
gs
hlt
jbe
pop
xor
xor
push
push
adc
imul
cmp
pusha
jne
sbb
ds
push
fs
in
inc
sbbl
sbb
enter
hlt
add
mov
mov
mov
iret
popf
mov
inc
lock
insl
rcr
sub
ret
inc
mov
pop
mov
cltd
mov
mov
pop
rol
cmpsl
mov
pop
sub
test
sub
sahf
call
xchg
cmp
scas
jle
xchg
dec
jge
gs
insl
sbb
imul
mov
popf
je
xchg
inc
push
dec
je
repnz
inc
sbb
int
movsb
fstps
pop
sbb
hlt
mov
sbb
inc
push
dec
pop
jle
xor
cmp
negl
mov
sbb
mov
or
mov
fwait
cmp
push
sbb
dec
or
cltd
mov
mov
test
mov
lret
push
sbb
mov
ljmp
fwait
jo
push
mov
enter
lods
shl
push
int3
lret
je
inc
jo
and
insl
aas
mov
push
and
shlb
pusha
mov
ret
mov
popf
das
mov
not
rclb
enter
add
fildl
cmp
fistl
and
adc
xlat
mov
in
dec
adc
sbb
or
jne
aaa
shrl
divb
pop
out
out
adc
mov
aad
mov
adc
jp
pop
dec
pusha
and
out
xchg
mov
adc
sarb
test
insb
dec
stc
push
sahf
nop
mov
jge
in
pushf
mov
cs
daa
xor
ret
sub
pusha
jle
sub
enter
mov
hlt
aas
jo
imul
clc
cmp
jle
fsubp
nop
cmc
xchg
sti
int
fisttpll
test
mov
bound
enter
shll
xchg
jnp
shl
inc
int3
cmp
cmp
jecxz
sbb
cwtl
mov
std
popa
pop
orl
jne
insl
arpl
test
mov
ss
or
orl
cld
sbb
fistpll
or
add
gs
arpl
cmc
adc
pop
test
lds
punpcklbw
mov
dec
enter
pop
lds
or
mov
or
sahf
shlb
icebp
and
and
sbb
sbb
sahf
adc
pop
movsb
sub
pop
jb
mov
loope
cmpsl
dec
cmp
outsl
sbb
push
pusha
pop
mov
in
xor
mov
sub
aam
pop
loope
mov
pop
and
sbb
sarl
imul
mov
pop
mov
nop
outsb
lcall
sub
icebp
and
daa
out
jp
mov
subb
jg
in
xchg
mov
loopne
or
rcrb
arpl
cmp
ljmp
notb
icebp
std
cs
nop
jge
sub
inc
pop
in
inc
leave
shr
in
xor
rclb
dec
or
xchg
mov
fidivrl
dec
fwait
push
aam
mov
and
das
jle
rcrb
fldt
es
mov
rclb
loop
ficomps
popa
mov
hlt
and
dec
add
lea
xchg
or
rorl
dec
insb
inc
xchg
and
cwtl
inc
or
lcall
xchg
jo
decb
xor
pause
inc
insb
dec
popf
inc
mov
cmp
dec
jnp
rcr
call
and
daa
pop
addr16
ret
inc
lahf
and
cwtl
push
cmp
or
add
add
pop
pop
mov
pop
push
inc
jo
outsl
call
cwtl
enter
lods
int
fs
inc
out
sbbl
pushf
shrb
xor
mov
ret
mov
add
ljmp
clc
jmp
push
test
inc
in
push
or
sbb
sbb
sub
mov
pop
lock
ficoms
xor
lret
cld
bt
pop
adc
cmp
bound
dec
push
stc
sahf
movsb
lea
pop
icebp
or
mov
out
adc
cmp
imul
xchg
inc
sub
sub
mov
jl
pop
xchg
mov
imul
jmp
int3
xor
and
mov
jecxz
sub
int3
pop
mov
mov
mov
jmp
cmc
imul
call
pop
call
sub
push
pusha
std
mov
aaa
dec
testb
lcall
out
pushf
addr16
sbb
jl
adc
or
icebp
pop
cmpsl
mov
adc
and
arpl
mov
jg
pop
lea
pop
je
in
insb
xchg
mov
je
push
cs
cmpsl
mov
xor
pop
shrd
or
add
cmp
or
inc
fistps
pop
pop
inc
nop
stc
pop
aaa
or
mov
jae
jae
and
popf
iret
lods
dec
lcall
cmpsb
data16
mov
xchg
jnp
xor
mov
subl
pushf
or
das
nop
add
jl
loop
leave
cmpsl
subb
out
xchg
repz
sahf
stos
sbb
pop
pop
divb
rolb
cmp
sarb
xor
dec
bound
daa
push
push
stos
sahf
sbb
and
scas
push
cwtl
out
sub
inc
cld
inc
adc
lahf
xchg
loopne
jp
cmpsl
sub
dec
repnz
cmc
push
push
add
mov
mov
arpl
sbb
fucom
mov
add
leave
shr
sarb
je
ljmp
fildll
xchg
fs
jl
and
mov
mov
or
sti
je
addr16
adc
jg
xlat
dec
loope,pt
sbb
bound
sti
cmp
inc
fwait
cmp
dec
mov
jne
out
xchg
sbb
mov
mov
add
test
pop
xchg
inc
es
pop
xchg
push
repz
aas
cld
test
xchg
ja
es
clc
jp
lods
cmc
jecxz
fdiv
arpl
xor
sub
xchg
mov
int3
mov
xchg
pop
jmp
and
fsubp
sub
mov
addr16
stc
mov
sbb
mov
je
cs
cld
sbb
dec
mov
inc
push
jno
ja
ljmp
lret
outsb
adc
xorb
frstor
or
ds
loopne
xchg
into
cmpsl
addr16
jo
mov
fsubs
dec
repnz
adc
mov
ja
in
test
or
mov
std
jp
insl
lods
inc
popf
cmpsl
xor
push
jno
stos
or
in
mov
xor
add
or
in
jmp
in
idivb
xor
jmp
push
scas
lret
push
sub
xchg
inc
and
mov
scas
xchg
add
jbe
int
mov
loop
add
lods
pop
sub
push
hlt
leave
pop
test
mov
sub
jge
mov
lea
mov
mov
sahf
mov
cmp
add
int3
jmp
mov
xor
xor
out
mov
sbb
xor
pop
inc
popa
inc
out
pop
test
push
cmp
cs
fadd
jae
inc
push
xor
fsubr
rcrw
mov
mov
gs
jne
cltd
xor
cld
add
dec
xchg
sahf
jbe
sbbl
push
xchg
movsb
jle
add
ss
sub
mov
out
ds
int3
cli
sahf
in
pop
das
push
stos
hlt
roll
dec
daa
push
jecxz
xorl
js
xlat
js,pt
cmc
pop
push
out
mov
adc
or
mov
out
loopne
jo
cltd
adc
out
sub
jb
loopne
ret
jae
and
pop
bound
xchg
and
mov
iret
add
addb
xchg
xor
mov
xor
pop
xor
daa
mov
sub
mov
loop
mov
cs
mov
and
mov
mov
sbb
push
mov
mov
pop
fwait
iret
pop
bound
fstl
xchg
pop
lret
outsl
mov
mov
lds
inc
gs
mov
jno
dec
movsl
cmp
cmp
jge
js
xchg
adc
add
inc
pop
imul
xor
addr16
push
push
cli
jns
insl
lret
nop
xchg
out
jno
sub
adc
mov
xor
add
pop
in
lods
out
dec
icebp
mov
inc
and
insb
test
xor
ret
ljmp
pop
xchg
cmp
xchg
cmp
mov
cmp
cmc
jle
in
xchg
lret
les
std
pop
in
xor
mov
cmpsl
repz
push
js
fiadds
xor
sti
dec
jl
or
mov
lret
xchg
mov
aas
jp
xor
loop
out
or
cmpl
inc
adc
adc
dec
test
js
and
shll
xchg
xchg
outsl
les
push
inc
push
adc
pushf
or
push
movsb
ret
pop
lret
and
shl
jnp
push
jnp
aad
std
push
testb
sbb
add
xor
fs
shll
and
ss
fs
mov
smsw
jp
into
rorl
push
insl
push
xchg
aas
push
lods
sub
mov
sbb
call
dec
inc
hlt
mov
pusha
mov
dec
pushw
add
lods
pop
add
adc
aaa
pop
subb
cmp
pop
cli
int3
push
mov
js
sbb
mov
dec
xchg
mov
jne
dec
mov
xchg
sub
les
push
cmp
sbb
add
out
lcall
icebp
rolb
imul
out
mov
nop
pop
pop
insl
stos
aam
addr16
lea
lea
sub
inc
adc
cld
and
inc
aam
in
rcrl
out
daa
mov
shll
psrld
inc
js
fs
adc
cld
aaa
jl
cmp
xchg
les
scas
inc
mov
test
insb
cltd
data16
out
jne
stos
std
sub
test
mov
xchg
stc
jg
movsb
outsb
adc
mov
mov
push
xor
repnz
jnp
dec
push
pop
ss
and
cmp
lret
into
adc
out
xorb
mov
mov
sti
pop
push
addb
pop
sub
push
cmp
test
stc
or
and
cmp
ret
cmp
les
in
and
call
mull
int
test
and
xchg
rolb
jp
lock
ja
pushf
scas
lea
mov
pushf
lret
sbb
dec
ss
hlt
pop
and
adc
aaa
jecxz
xchg
out
arpl
mov
lds
and
and
stos
dec
das
stos
mov
repz
mov
cltd
pop
faddl
push
icebp
xchg
push
dec
pop
outsl
inc
lock
adc
sbb
inc
xor
inc
fucomip
aaa
xchg
int3
in
pop
mov
lock
pushf
adc
cmp
jns
nop
lds
ds
test
cmp
sub
int
shlb
push
and
xor
fwait
inc
add
clc
mov
cmc
or
aam
fadd
mov
inc
out
movsl
sbb
iret
or
cmpsl
jge,pt
or
js
je
fdivrp
test
int
dec
sar
mov
push
cmpsl
ss
stos
movsl
notb
inc
fwait
adc
mov
sbb
out
or
push
cmp
sbb
shl
adc
movsl
lods
popa
fstps
mov
push
les
mov
inc
cmp
lea
aam
lahf
jno
ds
inc
mov
aaa
test
jge
jmp
faddp
iret
sbbb
inc
mov
ljmp
pop
push
cli
jb
ret
push
into
mov
pop
xorb
push
xchg
mov
add
xchg
lds
fisubrs
inc
jp
mov
nop
addr16
sub
and
scas
test
xchg
fmuls
sahf
mov
imul
iret
arpl
sub
mov
push
mov
inc
in
sub
mov
imul
jae
pushf
mov
sub
dec
andb
fldcw
mov
out
xor
out
testl
arpl
or
hlt
mov
fwait
mov
jg
fs
xor
out
sbb
es
push
stos
pop
popf
insb
popf
cmc
pop
das
iret
imul
mov
shll
iret
enter
fcoml
shlb
inc
mov
int
jbe
ss
xor
fildll
pop
and
pop
fcomi
js
mov
orb
inc
hlt
pop
rcrl
mov
lret
adc
sarl
cmp
mov
or
push
imulb
les
jp
sar
mov
ret
push
add
cmp
pop
and
lret
inc
xor
adc
jae
xchg
cmpsl
jne
loopne
frstor
bound
jl
push
mov
xchg
pop
adc
mov
test
pop
push
and
and
sub
fcomi
jle
into
adcb
cmp
xchg
sub
or
in
and
daa
inc
mov
cmp
and
lahf
idiv
test
or
cmp
lods
lret
hlt
inc
inc
push
dec
cmp
fs
xor
hlt
add
xor
into
in
dec
dec
daa
call
xchg
adc
mov
jmp
leave
mov
fisttps
nop
stc
mov
mov
sub
sbb
adc
int3
cmp
sbb
pop
jb
jl
or
mov
test
jb
ljmp
test
into
stc
jo
inc
mulb
jle
shlb
push
lahf
push
and
adc
ds
and
inc
out
and
sub
testb
and
add
mov
dec
jle
in
fwait
pop
jge
aad
xchg
es
test
cmp
and
out
bound
or
outsl
add
or
icebp
xchg
pop
jne
cmpsl
mov
fiadds
pop
test
scas
out
scas
add
sbb
dec
pop
jb
loope
pop
lds
jbe
popf
into
pop
sub
mov
cmp
inc
js
pop
ss
jno
and
xor
add
fildl
dec
jp
cmc
dec
mov
mov
ja
mov
cmp
add
mov
mov
gs
mov
sbb
mov
jl
imul
push
loopne
sti
aad
jno
icebp
lret
xor
adc
inc
push
and
add
fs
jmp
cmp
jmp
mov
decb
insb
cs
dec
imul
dec
xor
mov
iret
mov
xchg
mov
clc
gs
jns
dec
sub
push
sub
add
mov
xor
lea
xchg
insl
stos
mov
les
jnp
push
test
mov
mov
orl
add
add
add
jb
mov
leave
flds
imul
push
aad
sub
jbe
fstpl
pusha
ret
repnz
sbb
pop
mov
push
shr
mov
jne
ss
nop
xor
aad
push
sbb
xor
hlt
cmpsl
test
pop
stos
test
stc
repz
fs
sub
or
jmp
jle
clc
jae
and
or
add
sbb
jecxz
mov
push
jmp
mov
xor
gs
hlt
inc
or
mov
xor
add
adc
clc
mov
cli
out
ret
pop
mov
aam
bound
and
push
cld
inc
fistpll
loop
jle
movsb
add
out
jge
mov
mov
sub
sti
mov
push
cmp
pcmpgtd
push
movsl
sahf
movsl
cli
or
inc
mov
sub
mov
add
fistpl
insl
push
loopne
arpl
xlat
push
xchg
cwtl
add
lret
xor
sbb
inc
mov
adc
dec
push
cwtl
jge
bound
cmp
mov
jnp
mov
pop
popf
mov
push
fwait
popa
fimuls
mov
rorb
mov
xor
pop
sar
or
inc
aas
sbb
add
cli
inc
jo
cmpl
shl
jle
fbstp
jmp
jge
lahf
test
sub
pop
sbb
mull
popa
pusha
inc
loop
lds
push
ja
sub
enter
movq
xor
dec
adc
call
mov
movsl
lods
dec
arpl
xor
xor
inc
xchg
inc
xchg
aad
rorl
stos
ret
push
mov
push
les
sti
aas
inc
cmp
in
pop
es
dec
rcrb
add
push
adc
mov
and
scas
push
adc
jbe
cmp
push
jle
and
sub
inc
imul
pop
push
leave
fdivs
xchg
mov
sbb
lret
mov
into
ss
ds
ds
mov
sbb
push
mov
sbb
sub
rcrl
pop
aaa
pushf
sti
shll
cmpsb
push
cwtl
sub
jle
or
add
cmpl
dec
mov
xchg
jno
popf
mov
push
cwtl
pop
pop
add
xchg
scas
pop
out
mov
mov
jno
sbb
sub
cmp
add
cmp
enter
rolb
and
adc
mov
and
xor
jmp
jp
and
aas
movsl
or
shll
pushf
sbb
xchg
adc
ret
out
lret
or
out
das
push
adc
add
orb
mov
fsts
jmp
in
push
pop
stos
call
mov
enter
rorb
jb
imul
cltd
xchg
rcrl
push
in
loope
daa
in
ss
lret
mov
mov
sbb
xchg
adc
loop
sahf
testl
fadd
int3
test
ja
push
pop
lods
adc
lods
lds
xchg
fsubl
test
inc
and
loop
or
push
movsl
repnz
adc
push
adc
je
sbb
call
jp
stc
repz
hlt
lahf
cmp
ss
inc
adcb
mov
jge
sbb
and
in
mov
push
push
nop
and
mov
inc
and
arpl
into
loope
pop
push
out
loopne
mov
or
fdiv
or
jl
stos
sub
inc
dec
inc
xor
pop
sub
pop
cmpsl
gs
ljmp
rcrl
sbb
jg
aas
add
movsl
add
or
rcll
cli
jns
mov
nop
pop
ljmp
pop
pop
ret
fmull
add
adc
jge
mov
sub
rcl
outsb
rclb
jg
dec
or
adc
std
pmaddwd
das
daa
clc
mov
pop
out
bound
rcl
cmc
data16
in
lock
adc
test
dec
and
lret
es
aaa
mov
lret
mov
in
mov
ret
in
cmpsb
cwtl
scas
mov
pop
push
andb
push
mov
adc
test
inc
xchg
int
loope
mov
clc
pop
and
and
fstpl
inc
loop
in
mov
xorl
mov
sub
jnp
mov
push
fsubp
jl
fxch
or
sbb
jle
fstps
jne
add
mov
int
mov
jne
add
and
outsl
jno
dec
outsb
cltd
pusha
lahf
dec
xlat
popa
pop
push
ret
pop
pop
sbb
cmp
cld
jle
mov
test
fsubrl
sbb
cmpsl
xchg
mov
or
nop
or
sbb
pop
das
outsl
push
rcrb
ret
cwtl
cmpsl
inc
inc
xor
jge
fsubs
fld
std
sub
sub
std
aas
lret
dec
cmp
test
push
dec
dec
jns
lods
icebp
aas
inc
flds
sbb
inc
cwtl
arpl
mov
jne
aaa
movsb
in
xor
cmp
fcmovnu
enter
xor
ret
inc
xchg
into
enter
mov
cli
ljmp
in
cltd
lahf
lds
rcl
jo
test
rorb
xlat
or
lea
test
and
jp
mov
adc
scas
lods
jle
mov
lret
mov
into
dec
sahf
mov
inc
inc
data16
pop
mov
jo
sub
lea
sub
je
push
cs
push
test
loope
and
and
out
dec
lcall
xchg
lds
ds
imul
sti
mov
lcall
cmc
call
inc
adc
jns
imul
es
scas
inc
jno
inc
jne
ficompl
and
and
loop
sbbb
testl
and
pop
out
inc
xchg
adc
pop
in
mov
je
out
or
mov
jo
mov
jo
ror
rcrb
push
popf
push
push
icebp
lea
dec
repz
arpl
push
xchg
inc
push
adc
lods
push
push
out
xchg
add
mov
mov
clc
inc
std
push
xchg
ja
push
ret
test
in
out
int3
sbb
inc
cmp
cmp
cmp
lock
movsb
je
in
add
sub
push
cmp
orb
dec
js
and
mov
arpl
lea
sbb
mov
or
sub
fistpll
xchg
jnp
mov
ret
je
push
cmp
icebp
xchg
push
cli
stos
ret
or
push
pushl
aam
mov
lock
inc
in
outsb
jb
xchg
pushf
dec
cld
push
mov
adc
hlt
inc
loope
jge
sub
ja
inc
fildll
inc
pop
loop
insb
mov
push
ja
idivl
outsb
mov
lcall
in
push
fcmovbe
xorb
dec
lcall
xor
add
push
nop
fisttpll
jnp
mov
icebp
adc
pop
rorb
mov
sbb
in
mov
cmp
sti
adc
and
cmpsb
inc
or
cs
popf
xchg
test
inc
jp
sbb
test
xchg
fadd
aas
scas
adc
xchg
inc
fadd
into
xor
in
and
sbb
sti
sub
pop
cmc
mov
movsb
std
pop
adc
incl
mov
hlt
push
js
daa
xchg
dec
stos
cmpsl
pop
and
hlt
popl
aaa
mull
pop
mov
sub
dec
test
into
icebp
cmp
imul
mov
std
sbb
mov
cs
or
rolb
xlat
stos
and
inc
sub
cmpsl
jae
test
outsb
or
jae
out
jge
sub
mov
add
in
mov
dec
add
pop
cmpsl
je
out
sbb
lods
clflush
cmp
xchg
xchg
jl
inc
pop
push
test
push
in
in
fsubrl
push
pop
mov
ret
dec
mov
addr16
add
sbb
repz
push
scas
add
dec
mov
sub
sub
cs
push
mov
mov
imul
ja
dec
xor
xor
add
lcall
cmp
sti
push
xor
push
sbb
pop
dec
aas
or
add
cmp
pop
jno
or
inc
mov
mov
add
sub
xchg
int3
mov
das
aaa
mov
jmp
push
mov
out
fadds
sub
shrb
das
lcall
mul
cs
xor
es
outsl
jmp
add
pop
mov
sbb
and
or
mov
push
sub
scas
jp
mov
adc
out
loope
das
and
int3
aam
mov
repnz
xorl
sub
push
pop
das
scas
subl
dec
lahf
out
mov
sub
shrb
pop
repnz
push
lock
fwait
or
mov
ret
rcll
adc
sbb
cs
add
pop
pop
jecxz
dec
pop
mov
testl
pop
scas
xchg
push
xchg
test
ret
jbe
push
inc
jae
adc
scas
mov
test
mov
sbbl
push
add
in
pop
push
sbb
pop
shl
push
and
pop
inc
mov
jae
xchg
sub
lret
cmp
add
jne
pop
add
clc
out
fiadds
jl
and
adc
and
and
dec
fimull
mov
pop
jae
shll
push
mov
pushf
repz
jg
lea
jo
mov
and
insb
punpcklwd
cmpsl
mov
stc
cmp
and
fisubs
lods
pop
sub
sbb
cli
jge
popf
scas
lea
cmp
push
out
xchg
add
and
out
push
inc
jmp
mov
bsf
bound
xchg
daa
fcoml
andl
inc
adc
cs
xor
mov
push
inc
rcrb
sbb
dec
xor
insl
lods
pop
int
jp
outsb
iret
insl
sub
or
in
test
sbb
stos
daa
dec
gs
push
ss
in
cmp
inc
mov
lcall
stc
lds
jp
popf
lea
pop
xchg
lcall
push
test
mov
outsb
lret
insb
ret
mov
jecxz
lret
js
cwtl
push
push
js
cmp
cmpsl
call
popa
cwtl
or
insb
sub
mov
repz
adc
out
bound
cmp
jno
pop
push
and
int3
popl
pxor
mov
rcll
gs
xchg
and
sbb
push
stos
mov
adc
inc
es
mov
mov
xor
pop
cwtl
movsl
mov
outsb
rcrl
inc
rol
das
mov
movsb
cmp
and
cmc
mov
aad
and
and
inc
inc
push
test
push
sbb
fnstcw
mov
sahf
imul
lret
lods
and
and
cli
int3
xor
lahf
push
fbld
push
xor
aaa
push
jns
jmp
push
jnp
outsl
mov
pop
out
cmpl
and
ds
lcall
cmpsb
jmp
lods
mov
aad
inc
sbb
dec
add
push
sub
neg
add
out
test
imul
les
add
ss
lea
js
fwait
xchg
or
mov
push
rorb
shl
cli
jl
add
sbb
pop
adc
and
fcmove
mov
iret
lcall
test
push
test
pop
adc
icebp
pop
ljmp
sti
mov
push
mov
jne
or
jle
mov
loop
adc
arpl
out
repnz
stos
jecxz
call
lods
ret
and
xchg
jns
mov
mov
jecxz
bound
mov
and
iret
fwait
push
mov
push
jo
scas
pop
add
mov
dec
ds
movsb
shll
bound
or
xchg
jmp
pusha
lcall
loope
dec
xor
pop
jb
fwait
mov
outsl
pop
mul
hlt
xchg
aam
notl
lret
movsl
imul
mov
stos
xchg
lods
pop
or
ret
mov
popa
negb
cmc
inc
fs
mov
shlb
scas
test
lret
std
lds
shrb
dec
out
inc
imull
dec
mov
adc
imul
xor
and
mov
jmp
cs
shrl
pop
cwtl
in
jp
js
loope
enter
cmp
jl
std
pusha
and
xorps
cmc
adc
or
outsl
mov
mov
cld
adc
mov
sbb
rcrl
inc
divb
in
dec
cmp
push
cmc
fistps
and
out
cmp
insl
push
push
push
mov
rcrl
add
mov
sbb
mov
ret
int
jns
femms
movsl
push
sub
sbb
mov
je
push
and
cmp
insb
clc
rolb
sbb
stc
jg
shlb
inc
xchg
pop
fdivl
jmp
ja
movsb
out
push
insl
test
or
mov
das
push
push
addr16
dec
lahf
cs
lahf
aam
push
outsl
into
into
dec
mov
arpl
lds
jmp
lahf
pop
leave
dec
mov
fsubl
out
in
mov
mov
dec
mov
add
xchg
js
mov
repnz
cmp
std
sbb
addb
mov
ljmp
fisttpll
sbb
push
push
jnp
lods
sarl
adc
mov
pop
cs
push
bound
xchg
jl
jecxz
or
cltd
addb
roll
frstor
lods
mov
adc
jne
inc
mov
mov
rclb
test
jae
jp
je
push
sub
dec
add
cmpsb
rorb
sti
cmp
mov
fldcw
mov
sbb
mov
jns
jo
imul
loopne
aas
out
jae
loop
jno
int
andb
scas
push
fnstenv
jne
sarb
add
in
mov
jb
in
fcompl
pop
mov
adc
mov
pop
inc
int
push
js
sti
mov
pop
adc
gs
add
out
push
repz
sbb
and
pop
je
inc
ljmp
push
lock
mov
sbb
dec
ds
pop
test
mov
or
and
and
pop
push
add
xchg
xchg
lods
jl
sub
pop
cmp
sbb
dec
es
in
imul
fsubrl
pop
mov
push
leave
lock
js
lret
pusha
dec
add
cmp
mov
jmp
pop
aam
inc
jns
aas
shlb
mov
inc
xchg
xor
add
xchg
sub
cltd
ss
lods
push
pop
loopne
fcmovbe
xchg
cmpl
add
or
add
push
imul
xchg
push
mov
imul
push
loop
push
push
icebp
pop
push
loopne
mov
ljmp
xchg
or
pop
mov
sbb
xor
pushf
or
insl
loope
icebp
mov
push
dec
mov
dec
pop
loop
lahf
pop
jle
jnp
pop
popf
sub
bound
mov
nop
gs
jg
jmp
in
pop
cmp
ljmp
adc
inc
mov
pop
sbbb
jb
divb
mov
frstor
adc
ja
and
mov
in
adc
lock
outsl
mov
or
movsb
std
cmpsb
push
inc
testb
out
add
inc
pop
addl
push
scas
std
ret
adc
pop
es
cli
cmc
xlat
push
repnz
inc
pusha
sub
mov
sbb
dec
cwtl
jmp
sub
and
adc
sbb
mov
inc
xchg
in
les
mov
cld
mov
and
xchg
mov
es
push
out
push
adc
cli
ljmp
cmpsl
push
fcom
mov
mov
mov
or
shll
mov
aaa
push
mov
lret
outsl
repz
xchg
int
outsl
es
push
xchg
xor
sti
mov
cmpl
jl
arpl
out
in
push
adc
mov
dec
fwait
xchg
mov
enter
pop
mov
out
pop
rolb
adc
push
or
scas
aas
es
pop
sub
lret
adc
jecxz
push
dec
ljmp
push
sub
fcmovnu
mov
lahf
popa
cmpsl
orl
js
push
out
test
subb
xchg
and
int3
ss
mov
and
push
cmp
stos
jnp
dec
jb
divb
mov
sbb
popf
cli
enter
lcall
daa
lods
hlt
lods
fwait
leave
cld
push
ja
lods
jl
cli
ljmp
pop
jl
sub
pop
ret
jnp
sub
imul
dec
adc
repz
inc
ret
cmp
lea
jno
pusha
push
add
shll
or
push
stos
pop
shl
rcrw
xchg
ljmp
call
outsb
fildll
xchg
add
mov
xlat
rcrb
lock
dec
adc
sub
mov
mov
mov
push
dec
mov
fldl
in
push
adc
pop
outsb
ud0
push
jge
sbb
sub
cltd
or
adc
adc
push
lret
push
ret
roll
mov
adc
xchg
mov
repz
insl
mov
mov
adc
or
aas
cmp
add
push
jbe
ja
xchg
xor
hlt
fbstp
lods
or
arpl
lods
insl
mov
mov
into
or
xchg
or
and
mov
sub
mov
sbb
inc
ljmp
mov
je
fistpll
dec
xor
test
fs
push
sbb
or
xchg
iret
jg
cs
adc
mov
jge
shrl
imul
mov
adc
out
push
mov
dec
outsl
mov
shll
arpl
or
fnstsw
sbb
mov
rcll
sbb
test
inc
es
mov
pop
mov
cmp
fcompl
mov
lret
or
rcrb
pop
out
lods
repnz
xchg
mov
frstor
sbb
scas
sub
mov
jmp
xor
sub
sbb
push
adc
cmpsb
popf
out
rorl
or
notb
sub
int3
sbb
and
xchg
push
sub
sub
jp
xchg
mov
mov
fidivl
scas
sub
call
sub
and
loop
dec
mov
fcomp
push
lods
jo
fists
fldl
mov
movsb
push
aaa
inc
icebp
adc
mov
das
mov
std
popf
push
hlt
push
or
test
cmpb
inc
pop
inc
out
iret
jnp
mov
jbe
xchg
add
arpl
out
cli
sub
orb
rorb
arpl
jne
ds
adc
cld
mov
fucomp
push
push
ljmp
pop
ljmp
mov
out
iret
arpl
jge
adc
push
sbb
add
lahf
cwtl
xor
fnstenv
test
push
adc
hlt
stos
repnz
ret
popa
fs
sub
sti
out
in
add
sti
cmpsl
and
gs
sti
adc
lds
or
mov
outsl
inc
sbb
lods
push
dec
push
push
sbb
jb
push
stos
mov
daa
int3
push
sbb
jns
js
or
sub
ljmp
cmp
addr16
stos
ficoml
sub
add
int
sarl
subl
mov
cmpsb
cwtl
mul
out
or
xor
je
out
or
sti
mov
mov
jle
mov
test
lcall
pop
xor
xchg
call
or
out
pop
sub
or
dec
dec
int3
insl
jecxz
mov
dec
repz
dec
mov
mov
pop
adc
pop
fistps
ror
cmp
mov
push
jmp
or
ror
aad
adc
addr16
and
and
gs
insl
test
inc
repz
dec
test
pop
iret
lcall
int
in
inc
notb
xorb
jnp
add
arpl
jl
repz
icebp
aaa
add
dec
and
or
bound
inc
pop
xchg
adc
fnstcw
mov
and
dec
inc
nop
movsl
shll
sbb
sbb
fs
push
outsl
test
xchg
repnz
push
mov
xchg
xor
adc
lods
shl
repnz
push
aam
xor
dec
xchg
test
lods
sbb
mov
test
mov
out
xchg
bound
in
xor
or
inc
mov
pop
ficompl
inc
xor
lds
push
add
call
roll
out
int3
jne
ss
dec
xlat
ds
pop
das
cld
std
jne
js
aam
adc
rorb
mov
adc
scas
and
xchg
jo
outsl
mov
test
push
je
push
repnz
cmp
roll
push
fimuls
add
jo
cmp
pusha
sbb
mov
mov
mov
lretw
fcoml
rolb
jae
mov
mov
cmpxchg
in
mov
inc
loop
push
add
rolb
add
and
cmp
inc
nop
mov
lods
ja
cld
fcomps
pop
xor
jg
dec
lds
sti
cld
and
xchg
and
cmp
int3
enter
mov
sbb
rorl
add
dec
add
add
push
mov
fstpt
sahf
imul
and
popa
scas
mov
leave
mov
test
cmpb
sub
into
testl
sub
pop
adc
mov
lret
and
push
sbb
ret
sbb
sbb
add
lret
mov
and
in
push
jno
mov
mov
mov
jl
xlat
subl
pop
addl
rcr
std
xchg
add
add
or
int3
je
jns
or
roll
lahf
scas
js
popa
jo
pop
cmpsl
xor
mov
arpl
xchg
dec
push
jge
or
js
jns
leave
mov
ds
out
aam
push
pop
xor
inc
push
push
fs
cmpsl
pop
cmp
in
pop
xchg
lret
inc
mov
xor
jb
mov
jo
in
ds
mov
mov
adc
cmpsl
js
test
int3
mov
pop
stos
fcmovnb
push
push
icebp
stos
dec
add
cmp
movsb
cmp
adc
repz
in
pop
outsl
test
dec
rcll
addl
call
stos
xchg
jne
dec
sbb
imul
filds
mov
in
daa
xchg
dec
push
pop
ret
or
dec
test
mov
movsl
cmc
dec
int3
and
push
dec
mov
pop
je
loop
push
scas
xchg
xchg
sbb
adc
imul
call
add
pop
mov
sbb
sub
cmp
js
lcall
xchg
andb
jbe
mov
popa
repnz
jnp
add
jmp
inc
pop
sbb
out
lahf
xor
add
and
xchg
xchg
cmpsb
cmp
mov
aad
inc
pop
cmp
push
lahf
nop
xor
xlat
ja
sub
mov
cld
repz
loop
cmpsb
iret
cltd
jbe
imul
mov
bound
call
mov
mov
xchg
push
pop
xchg
fisttps
dec
leave
push
push
ret
in
adc
nop
xchg
cwtl
lret
xchg
enter
sbb
xor
jecxz
lods
dec
arpl
orl
jmp
xor
inc
ret
loop
push
cltd
loop
pop
sbb
negl
aad
xor
stos
je
cli
pop
cmp
shr
mov
mov
pop
adc
scas
and
out
sbb
jmp
inc
ss
movsb
jp
push
icebp
jbe
sub
cltd
xchg
adc
jge
movsb
mov
cmp
test
adc
mov
push
call
dec
pop
cmpl
dec
mov
movsb
popa
fnstcw
push
add
push
mov
inc
lods
mov
cld
dec
and
inc
jbe
push
loop
and
jecxz
movsl
aaa
and
sbb
mov
push
lds
rcrb
lret
pop
cwtl
dec
or
sbb
into
loope
jg
mov
sbb
pusha
enter
data16
or
or
sbb
add
movhps
pop
in
mov
mov
repz
dec
sub
movsl
fcomps
xor
sbb
sbb
xchg
rcr
setp
adc
adc
ja
lods
lret
push
jg
fistpl
jae
and
mov
repz
mov
xchg
jg
and
cmpsl
fsubrl
jg
push
cmp
cmpsb
sbb
pop
ret
jge
xchg
dec
scas
mov
iret
or
jge
inc
out
stos
xchg
out
lret
xlat
leave
pop
les
adc
pop
leave
idivb
xchg
inc
out
popa
inc
ret
xor
pop
push
sti
and
imul
and
enter
mov
js
mov
pop
cmp
in
addr16
mov
add
inc
hlt
inc
popf
push
sub
and
outsb
stos
in
stos
repnz
fists
mov
mov
fbstp
jb
jp
int3
dec
jae
inc
int
add
mov
js
jo
or
mov
or
scas
fimuls
rol
lret
aam
sbb
add
inc
insb
jl
and
adc
enter
mov
push
imul
cmpsl
loopne
jg
cmp
mov
xor
mov
adc
pushf
xchg
mov
ljmp
out
adc
push
es
push
pop
cmc
or
jmp
js
clc
cmp
cmp
inc
xrelease
mov
add
xorb
cli
dec
or
aam
je
mov
out
popa
imul
add
mov
push
jp
pushf
icebp
ret
mov
fsincos
testl
scas
push
jecxz
xchg
imul
pushl
push
gs
das
aam
jo
cmpl
ss
repnz
stc
dec
cmovp
dec
cmpsb
outsb
xor
jne
jle
push
pop
test
shlb
je
lds
mov
loop
cwtl
jno
fcmove
push
cmp
adcl
mov
and
push
add
iret
jns
fldenv
jno
loope
fdivr
stos
insb
mov
and
lret
hlt
sbb
cld
adc
repz
mov
jle
aad
fiadds
pop
outsb
std
mov
int3
pushf
hlt
jb
adc
jp
iret
addl
jbe
lods
lods
mov
xor
add
lret
add
mov
jns
mov
inc
push
pushf
rolb
xlat
lcall
cli
rclb
mov
shrb
push
fsts
dec
int
sub
movsl
sbb
shlb
jne
cmpsb
clc
gs
ret
or
jg
outsl
add
xchg
or
pop
jmp
jbe
and
out
cmp
xlat
std
sub
jg
mov
sub
push
dec
movsb
and
rcl
cmpsl
dec
mov
mov
sub
add
sti
sbb
sbb
imul
pushf
pop
and
std
rcll
pop
sbb
fists
loop
mov
fimuls
fcmovu
lock
orb
push
add
out
sahf
jg
aas
enter
lret
mov
mov
push
sub
xor
xchg
jbe
or
in
adc
jg
in
adc
je
push
xor
jge
or
fsts
add
dec
xchg
or
jle,pn
cld
lea
mov
and
xchg
xchg
outsb
adc
andl
add
sbb
mov
cwtl
jg
jae
sub
xchg
inc
mov
decb
aas
push
int3
ljmp
rol
or
das
insb
rcll
sub
ss
inc
mov
or
mov
pushf
shll
xor
mov
test
push
xor
or
mov
roll
sub
adc
sbb
lds
insl
mov
push
fs
pop
sub
add
inc
pushf
pop
add
push
fildl
xchg
ret
pop
and
pop
out
cltd
insb
stc
jp
push
push
pop
jp
add
mov
and
push
cld
mov
push
popf
xchg
mov
out
mov
mov
pop
movsb
jg
push
pusha
imul
jae
pop
push
stos
mov
sbb
idivb
lods
xchg
dec
cld
dec
stos
push
xor
arpl
pop
lret
sub
push
sub
cli
nop
inc
and
jne
pusha
xchg
fcmovbe
push
rorb
push
imul
adc
outsb
imul
gs
je
dec
ja
jecxz
inc
push
jb
loope
jecxz
jne
and
mov
push
insb
fisttps
scas
lcall
hlt
xor
aam
sbb
int3
mov
outsb
hlt
xor
pusha
cmp
pop
sbb
add
add
add
lock
pop
inc
jp
jecxz
or
mov
cmp
adc
in
scas
dec
mov
lgs
daa
ja
in
sub
mov
mov
imul
push
test
cmp
jp
in
incb
rorb
xchg
call
push
ficomps
pop
jge
jbe
cmc
xchg
aad
and
cld
iret
stc
stc
fbstp
out
mov
mov
jmp
mov
in
ljmp
xchg
pop
fisttpll
iret
cmpsl
mov
adc
and
pop
insl
fidivs
push
xor
mov
lods
mov
enter
sub
xchg
inc
in
sbb
or
lcall
xor
repnz
rclb
dec
xchg
cli
das
add
jns
dec
lods
jno,pn
pop
jle
mov
xor
push
gs
xor
in
repz
and
shrl
inc
add
cmp
cmpsl
pushf
jmp
sbb
insl
scas
push
aad
fstpl
cmpl
jecxz
sbb
lret
ret
pop
xor
pop
int
ss
call
sub
xor
cld
sub
in
push
cmp
jp
movsb
ja
fmull
sub
xor
jge
loopne
lods
arpl
or
add
es
lahf
iret
and
add
or
mov
ret
and
jne
movsb
fbstp
cli
inc
out
mov
or
or
adc
cmp
pop
inc
out
mov
mov
call
nop
out
mov
adc
sbb
sbb
jge
ret
mov
lahf
pusha
loope
cmp
pop
lock
pop
add
enter
rolb
xchg
mov
push
jmp
addr16
int
cvtdq2ps
and
adc
dec
cmpsl
lcall
pop
ds
pushf
xor
add
inc
test
mov
sbb
xor
sub
push
ljmp
aad
sbb
cmpsb
scas
lods
dec
mov
adc
mov
stc
pusha
inc
ss
jle
pop
adc
fs
and
mov
xchg
sub
std
das
mov
add
orb
aas
movsb
or
fistpll
add
in
cltd
iret
mov
xor
add
mov
mov
add
or
adc
call
xchg
fistps
mov
clc
fisttps
or
hlt
jns
es
mov
shlb
leave
push
outsl
loopne
adc
pushf
mov
pop
pop
fcoms
push
nop
jecxz
xor
jo
aas
lods
push
pop
stos
fwait
inc
int
movb
fisubl
pop
nop
jb
xlat
or
js
lds
pop
mov
add
cld
fsubl
inc
movsl
jbe
dec
sti
add
jle
sub
or
lret
imul
test
fisttpll
jmp
pop
cmpl
pop
pushf
leave
add
inc
scas
xor
cmpsl
pusha
int
jg
aas
push
and
insb
ja
xor
jge
mov
daa
mov
fidivrl
outsb
scas
push
or
mov
in
test
mov
mov
and
xchg
js
push
pop
or
jno
or
stos
push
insb
pop
sbb
in
mov
lea
fldl
push
jne
xor
inc
test
rolb
out
icebp
add
mov
push
shlb
stos
lds
movsb
mov
mov
loopne
xchg
xchg
add
int3
xor
icebp
nop
lret
dec
addl
scas
dec
fdivrl
inc
pop
lret
popf
mov
daa
sub
pushf
lahf
mov
mov
stos
add
xlat
pop
add
jecxz
adc
lods
jecxz
icebp
xor
jne
stc
cmp
push
aad
jbe
std
xchg
psrlw
iret
adc
loope
fs
pop
fbld
xchg
or
pop
mov
xchg
cmp
mov
jno
push
push
mov
lahf
push
movsl
and
andb
pop
jbe
mov
sub
sbbb
loope
jno
outsl
lock
lcall
fistl
sub
and
push
mov
loopne
push
fisttpll
and
out
sbb
mov
add
js
pop
cmp
into
mov
mov
scas
mov
pop
int3
or
addr16
lea
data16
or
mov
mov
push
ds
out
push
inc
rorb
test
xchg
push
shlb
xchg
ret
adcb
jge
fldenv
out
inc
inc
adc
dec
push
outsb
and
mov
ror
out
popf
repnz
inc
jnp
outsl
pop
imul
ficomps
imul
or
push
mov
xor
sub
mov
jnp
arpl
je
xchg
mov
cli
enter
sub
stc
adcb
shl
xlat
leave
add
jle
jns
ss
pop
insb
jo
fldl
mov
xchg
push
inc
xor
or
mov
fsubl
fwait
lcall
cmp
xchg
jbe
add
gs
cmpsl
inc
push
loope
or
test
inc
mov
mov
jge
lret
ror
jge
insb
arpl
mov
pop
xchg
das
jne
pop
push
pop
push
fcmovbe
fisubrs
pop
jne
lret
xlat
or
mov
loope
ss
inc
in
push
pop
adc
lock
call
cltd
fnsave
sbb
mov
ss
add
xchg
int3
adc
mov
mov
mov
ds
mov
insb
mov
incl
jae
cli
outsl
cmp
lcall
fldenv
mov
jb
and
scas
pop
outsl
mov
adc
mov
cmp
js
sete
loop
inc
rcr
dec
pop
jnp
in
add
es
xchg
lcall
das
sarl
adc
lods
inc
xchg
pop
rorl
loop
jl
dec
jl
les
or
out
dec
mov
and
test
jge
cmp
lret
inc
xlat
or
jecxz
pop
es
push
sar
iret
dec
pusha
or
jg
sti
jb
lea
xor
popa
mov
mov
sahf
sub
mov
data16
push
push
imul
xor
lahf
pcmpgtb
cmp
mov
fdivrs
pop
xchg
push
mov
and
mov
inc
roll
mov
movsb
cs
inc
mov
push
pop
pusha
mov
push
xchg
and
or
leave
lds
xchg
sarb
js
mov
dec
push
xchg
aam
push
mov
mov
ret
jne
pop
fidivrs
popa
jmp
mov
test
adc
or
dec
es
xchg
inc
push
adc
ljmp
push
out
jb
cltd
in
out
test
pop
inc
jne
push
std
xchg
mov
insl
dec
icebp
lods
dec
dec
subb
in
call
test
data16
andb
imul
ss
mov
mov
sub
dec
fildl
xor
mov
cmp
aas
push
push
add
pop
loope
add
test
sbb
push
and
pop
mov
cmpsl
out
dec
int
rcl
cli
aas
dec
and
out
xchg
stos
jne
je
inc
pop
xchg
jle
notb
out
ret
inc
xchg
ret
dec
mov
push
call
movb
cmp
and
sbb
xchg
xor
aad
xlat
jno
jae
pop
aas
xchg
ficompl
inc
xor
call
aas
xchg
repz
inc
pop
leave
sbb
icebp
inc
psadbw
adc
cld
shll
popa
and
cmovl
push
push
enter
push
loop
mov
jg
pop
pop
push
sbb
adc
add
mov
xor
inc
or
test
lock
inc
xchg
neg
mov
and
dec
movsb
call
mov
fwait
pop
repz
sti
push
movsl
fldl
inc
int3
adc
imul
mov
pop
inc
xchg
and
xchg
jne
cmp
stc
clc
sub
hlt
push
pusha
pop
ror
orl
cmpsl
fsubrl
sbb
dec
lahf
insb
loope
mov
sbbb
clc
adc
sub
mov
push
jle
xchg
mov
xor
mulb
adc
xor
dec
sysret
push
push
fcmovne
cmpsl
pop
addr16
cmpsl
leave
andl
mov
dec
xchg
addr16
xor
or
pushf
adc
jg
xchg
jae
cmp
push
bound
push
lcall
movsl
inc
test
stos
popf
inc
add
hlt
and
add
fwait
aam
cmp
dec
icebp
inc
ja
inc
jl
sub
adc
out
dec
or
xchg
out
sti
jmp
fs
push
pop
mov
or
pop
icebp
xchg
and
pushf
add
jmp
cli
pop
cmp
insb
cmp
fs
ljmp
jle
iret
cmp
in
mov
das
ret
mov
ja
or
imul
push
push
ja
int3
call
and
movsl
into
adc
les
mov
gs
arpl
out
popa
add
stos
cmpsb
inc
loope
popf
outsb
pop
cltd
jns
test
scas
cli
xor
push
call
or
out
das
inc
or
xor
loope
roll
inc
jg,pn
mov
mov
insb
rcl
or
aaa
outsb
imul
xchg
movsb
mov
enter
mov
lock
scas
jnp
inc
push
adc
and
inc
push
das
mov
in
data16
ja
mov
lret
addr16
hlt
and
cmp
xor
push
mov
pop
adc
jmp
js
out
daa
hlt
add
icebp
nop
fcmovnu
dec
int3
mov
movsb
sbb
pop
mov
mov
loop
cmp
or
push
jmp
mov
daa
in
cwtl
imulb
add
sub
adc
jae
jne
xor
mov
mov
insl
xor
fmul
out
cmp
add
push
in
jae
jne
mov
je
push
into
dec
add
mov
cmpsl
sbb
aam
fcomi
jp
jns
adcl
jecxz
std
jecxz
rorl
inc
mov
xchg
and
loope
aam
push
divps
adc
hlt
clc
je
jmp
and
pop
pop
pop
mov
jne
shl
adc
dec
mov
mov
sbb
fxam
std
adc
aas
inc
mov
repnz
shlb
cli
enter
push
sti
lds
sahf
lock
mov
ja
mov
push
loope
repz
push
repnz
dec
jle
rclb
mov
jnp
aas
jle
sbb
sub
data16
pushf
push
push
jns
pop
inc
dec
fmuls
xor
addr16
add
adc
pushw
pop
lcall
mov
scas
std
arpl
mov
iret
bound
repz
movsl
orb
jnp
and
cltd
insl
sbb
movsb
mov
sbb
fbld
sbb
arpl
pop
xchg
dec
stos
lret
int
shll
enter
iret
jmp
cld
xor
and
inc
xchg
cmpsb
mov
and
in
imul
sahf
mov
jmp
fimull
jno
std
lods
inc
xor
imul
add
inc
mov
push
sarl
insb
js
mov
xchg
gs
xchg
push
jp
cmp
in
ljmp
push
dec
mov
inc
scas
fbld
xor
arpl
movsb
or
nop
pop
lret
pmaxsw
jp
insb
cltd
loopne
jbe
mov
pop
cmp
jmp
adcb
aas
rclb
push
out
xchg
fs
in
icebp
cmpsl
xchg
sarl
pop
mov
push
jle
sub
mov
jno
loopne
and
cmc
xlat
std
jp
out
mov
jne
cli
jnp
cmp
bound
cmp
stc
dec
enter
mov
hlt
pop
mov
inc
mov
ja
pop
pop
sub
jns
scas
adcl
out
popf
daa
push
fstpt
repz
addb
das
rolb
scas
outsb
sub
cmpsl
push
push
and
adcl
push
bswap
mov
pop
sahf
mov
mov
fwait
leave
testb
mov
mov
cmpsb
sbb
sbb
xor
fisubrs
add
cmpsb
jg
ret
mov
cmpsb
jnp
xchg
stos
inc
mov
lret
lods
inc
xchg
jl
in
jb
push
push
dec
mov
ja
mov
jnp
cld
ja
push
and
cmpb
sub
push
pop
push
test
sub
xchg
dec
cli
push
rclb
mov
inc
das
in
pop
lods
dec
js
push
push
xchg
or
mov
cli
test
mov
inc
jp
xchg
sub
stos
jb
or
mov
mov
inc
or
cmp
pop
sub
inc
jp
divl
gs
and
push
xorb
adc
ss
nop
and
dec
lock
enter
stos
andb
sbb
gs
dec
dec
and
stos
mov
jmp
lret
and
and
popa
xchg
dec
adc
in
jns
out
xor
mov
inc
pop
repz
jo
push
xor
pusha
sbb
movl
jge
inc
inc
jle
mov
sub
shll
xchg
xor
out
lods
ljmp
push
jge
xchg
mov
mov
mov
mov
mov
xor
sbb
xor
daa
xor
idivl
adc
xchg
pop
add
nop
mov
fs
xchg
xchg
cmp
pop
lea
test
ret
loope
enter
mov
js
in
push
lods
mov
xor
push
outsb
dec
lret
xchg
mov
imulb
orl
call
jae
stos
in
or
roll
lahf
sbb
in
jecxz
dec
loopne
nop
add
fsubrs
mov
loope
sarl
outsl
jp
push
pop
fs
adc
jb
sbb
fdivr
xlat
popf
pop
nop
jl
mov
mov
mov
out
lods
xor
push
je
mov
imul
or
sbb
add
add
pop
cmpsl
lods
jns
adc
xor
add
loopne
arpl
jl
sbb
fcoml
mov
int
lret
loope
mov
std
pop
icebp
repz
rorl
push
call
and
xchg
ret
add
arpl
out
js
add
or
mov
jmp
lret
cli
dec
sub
fnsave
sbb
dec
jb
loop
mov
imul
cs
and
outsl
aad
inc
or
mov
jmp
jno
inc
xchg
mov
xchg
mov
push
loopne
jmp
adc
out
pop
es
and
xchg
mov
fcmove
inc
mov
test
scas
xor
jecxz
movsb
mov
jecxz
loop
cwtl
push
push
xchg
fwait
test
int
xchg
xor
push
add
test
shrl
dec
xor
dec
cwtl
sub
jmp
sti
pop
and
inc
shll
ds
pop
ja
push
inc
xchg
cltd
sahf
cmp
mov
cmp
out
push
add
pushf
enter
dec
sbb
cmc
jge
xor
dec
sub
mov
pop
pop
sar
inc
scas
test
fbld
imul
mov
jmp
std
add
push
lahf
xchg
sub
mov
inc
imul
pop
adc
push
sub
outsl
fistpl
or
test
adc
popf
inc
sub
mov
cmp
adc
xor
inc
jmp
loope
stc
mov
sub
jle
mov
flds
gs
mov
push
push
jb
cltd
jbe
or
sub
out
jg
movsb
inc
mov
cmp
xchg
jae
ret
ss
call
dec
les
popa
jl
inc
xchg
jp
hlt
dec
xorl
fstpt
leave
in
xor
aam
bound
rorl
imul
push
xchg
imul
push
dec
xlat
cmp
xchg
addl
std
push
pop
sbb
loop
dec
add
sub
xor
cmpsl
push
or
imul
rcrl
pusha
sti
push
hlt
inc
pop
orl
gs
and
jg
jbe
lret
lahf
adc
and
or
xlat
insl
or
sbb
sub
xchg
sub
js
cmpsl
mov
mov
js
arpl
dec
aas
mov
insb
repz
lret
adc
shll
pop
or
lds
xlat
out
das
mov
xor
cmp
fmuls
sub
idiv
push
dec
pop
gs
cmc
xchg
cmp
push
loopne
popfw
mov
ret
add
mov
icebp
fildll
xlat
nop
mov
mov
fdivl
xlat
xchg
or
cwtl
dec
cmpsb
arpl
xor
mov
jnp
mov
std
add
xchg
add
xchg
push
lods
shll
xlat
mov
cmp
pop
out
in
and
das
mov
jno
sarb
cmp
xor
aas
mov
jl
jl
sub
or
xchg
loop
pop
sti
insb
adc
adc
popf
lcall
in
xchg
fs
bound
xchg
jb
mov
dec
push
ret
fstpl
pop
jmp
mov
cld
out
das
loope
popa
jl
fistpll
and
enter
icebp
xchg
out
mov
mov
push
sub
sbb
mov
mov
and
jecxz
jmp
and
push
pusha
subl
icebp
mov
fdivrs
loop
xchg
jo
fcomps
enter
jno
jg
in
pop
pop
mov
mov
pop
scas
ss
repnz
js
dec
push
pop
les
dec
movsb
hlt
sub
stos
loopne
dec
ret
jp
push
fnstsw
lds
scas
adc
push
int
frstpm(287
ss
cli
test
lret
adc
push
ljmp
add
adcl
aaa
cmp
ja
pop
ss
insl
cli
nop
xor
into
imul
ret
and
cmp
add
mov
xchg
and
pop
rcrl
loop
rcll
pop
push
hlt
je
jo
fwait
cmpsl
dec
pop
call
lods
xchg
shlb
xchg
int3
aam
enter
test
ja
test
mov
jmp
and
sub
pusha
lods
lcall
leave
xor
stos
cld
xchg
mov
out
pop
push
add
in
dec
xor
imul
mov
pop
aam
int3
or
push
mov
xchg
call
xlat
pop
push
dec
xor
sub
out
jns
outsb
push
add
out
pop
fstps
push
pop
scas
loope
xor
and
mov
sub
sarb
pop
inc
lret
pop
mov
test
push
flds
stos
pop
ljmp
pop
lcall
mov
out
jg
f2xm1
xorb
sub
dec
andl
imul
lahf
hlt
mov
xlat
xor
cmpsb
xor
sbb
adc
xchg
sub
sub
sbb
or
sti
cltd
mov
cs
pop
add
pop
movups
pop
sub
int3
stos
sub
add
jae
mov
mov
mov
xor
mov
xor
push
clc
mov
leave
jmp
lea
mov
add
cwtl
xchg
mov
push
pop
popf
xchg
cmc
cli
stc
rorb
pop
and
jno
add
in
pop
add
pop
repz
arpl
out
jecxz
in
shl
cmc
or
test
sub
decb
inc
push
push
fldl
push
cmp
push
stc
lret
or
jns
dec
sbb
out
mov
jmp
gs
jmp
add
rcll
popl
imulb
xor
fdivr
cmp
mov
and
push
adc
or
ret
and
push
xor
dec
repnz
scas
shr
cs
shrl
std
cld
or
dec
iret
jne
dec
into
pusha
cltd
fisubrs
xor
lock
int3
mov
clc
subb
or
mov
jle
and
aas
xchg
bound
outsb
jnp
test
sbb
aad
sahf
icebp
out
cmp
cs
lock
pop
out
jns
and
lcall
pop
clc
push
popl
dec
call
arpl
xchg
add
inc
cli
mov
jg
popa
fnsave
lods
shlb
in
sbbl
pop
notl
jo
and
les
cmpsl
add
lret
cwtl
jecxz
pop
pop
xchg
stos
pop
add
iret
pop
rolb
push
mov
adc
mov
dec
cmp
xorb
jo
cwtl
add
out
js
mov
insw
pop
pushf
sub
lcall
movsl
sub
adc
in
addr16
stc
push
dec
push
pop
lods
dec
rolb
adc
mov
call
mov
clc
jecxz
das
mov
int3
pop
push
loopne
icebp
dec
xor
pop
dec
outsl
pop
sbb
divl
mov
mov
mov
inc
xorb
in
sbb
mov
push
inc
andb
repnz
lahf
inc
sbb
ss
fmuls
shl
ret
les
push
mov
xchg
mov
stc
insl
test
push
adc
add
dec
dec
aam
mov
or
pop
adc
inc
inc
stos
and
mov
inc
push
stos
outsb
jge
push
xchg
clc
pusha
push
in
mov
scas
movsl
sbb
pop
movsb
icebp
inc
mov
pusha
jo
mov
aad
stos
xor
sub
dec
fimull
cld
mov
mov
lret
sbb
cmp
xchg
pop
or
pusha
cld
mov
and
cld
dec
decl
push
xchg
in
push
insb
mov
or
repz
xchg
xchg
cwtl
andl
gs
int3
xchg
cltd
incl
testl
mov
sbb
push
xor
aad
outsb
and
cmc
ds
ret
repz
jno
pop
out
call
mov
or
sub
cs
add
in
push
addr16
flds
add
hlt
icebp
std
fwait
cmp
leave
lcall
xlat
or
and
push
fmulp
shll
adc
inc
nop
xor
fldenv
add
jb
cmp
repz
cvttps2pi
mov
jnp
pop
or
shl
aam
inc
sub
mov
ret
arpl
mov
in
imul
pop
mov
call
and
inc
xchg
fisubs
xchg
cmp
dec
inc
mov
cmp
mov
pusha
dec
sub
push
mov
out
shrb
fdivs
push
mov
fwait
int3
loopne
mov
test
testb
xor
fadds
xchg
test
or
jb
pop
adc
sub
adc
mov
xor
adc
push
dec
das
adc
and
cld
call
cmp
lret
jb
outsl
adc
rol
cmp
cmpsb
jp
out
mov
mov
imul
aam
jno
pop
xlat
inc
sub
cmp
test
roll
dec
fst
dec
push
xor
mov
lcall
adc
inc
add
pusha
cs
lds
and
push
sbb
outsb
addr16
inc
bound
fcoms
lods
repz
pop
fisttpl
and
push
cmp
out
cmpsb
loopne
and
pop
and
cmovs
cmp
mov
cmp
adc
xor
and
negb
mov
ljmp
xor
nopl
and
movsb
ficoml
push
fildll
fstpt
mov
ss
mov
jmp
cmpsl
xor
and
fisttpll
cmc
lock
repnz
lods
pop
push
mov
data16
sbb
dec
mov
pop
adc
adc
ljmp
or
sbb
jae
pusha
rcl
push
inc
cs
sbb
cmpsb
mov
cmp
mov
test
shll
cmp
outsl
subl
jg
test
push
imul
scas
ret
add
inc
jne
in
pop
cld
in
in
sub
sub
int3
repnz
pop
push
hlt
pop
frstor
mov
les
je
xchg
mov
mov
lret
dec
int
dec
dec
je
incb
sub
fsubrl
dec
cs
fs
clc
rcr
fcoml
ret
bound
xor
push
sub
dec
push
xchg
sti
and
fstpl
adc
cltd
jb
movsb
sbb
xor
and
sbb
pop
sub
fnstenv
push
jne
es
stc
cmp
inc
addr16
movsl
dec
lock
dec
lock
pop
sbbb
mov
add
sbb
jbe
push
ffreep
jb
aaa
jns
inc
mov
rcll
mov
mov
xlat
jl
xchg
add
or
add
repz
push
mov
and
xchg
lcall
xchg
push
xchg
repnz
loopne
inc
fxch
sti
sub
imul
mov
push
shll
mov
sti
add
mov
pop
lds
lahf
arpl
xor
jp
out
push
push
inc
std
push
adc
xchg
hlt
pop
gs
sarb
push
pop
and
je
es
cmp
mov
sbb
aas
xor
xor
and
cmp
fldl
bound
gs
outsb
ret
insl
inc
lods
cltd
and
cmove
out
not
fstpt
in
jae
xor
fidivrs
orb
or
and
int
xlat
jae
movsb
jne
add
pusha
xchg
loopne
stc
mov
mov
outsl
pop
addr16
aaa
and
add
dec
and
mov
cmp
mov
imul
mov
xchg
add
dec
fdivrl
cli
mov
dec
inc
repnz
cltd
xlat
push
repz
jle
les
cmpsl
popf
aaa
mov
int3
les
and
mov
fcompl
sbb
pusha
cli
in
test
or
scas
out
mov
add
xchg
add
cld
fistpl
push
loop
mov
mov
inc
pop
test
xchg
xchg
les
jmp
lret
inc
jecxz
and
js
ljmp
lahf
jmp
mov
les
inc
jmp
mov
dec
inc
movsb
movsb
xchg
push
xchg
jns
movq
cmp
dec
insb
lock
pop
lock
adc
mov
stos
jo
dec
repz
movb
jno
and
adc
cmp
push
mov
push
jae
push
inc
scas
jae
pop
mov
mov
sbb
movsb
mov
repnz
psrlq
lods
in
push
repz
dec
lcall
es
fsubs
mov
testl
imul
and
mov
xlat
iret
in
out
pop
adc
mov
test
test
test
xor
aaa
shll
mov
push
int3
push
adc
cli
push
subb
shl
das
cli
pusha
shlb
dec
cmp
aad
imul
xor
mov
fnstcw
jmp
sti
jp
cmp
mov
jns
int3
mov
outsb
repz
xchg
push
ja
add
lods
in
repz
repnz
jno
or
pushf
add
and
jmp
nop
inc
shrb
pop
jecxz
inc
cmp
sub
dec
fs
cmp
scas
sbb
int3
sbb
sbb
mov
es
lods
test
add
sbb
daa
dec
cwtl
repz
or
aas
sub
stos
loope
mov
cmp
fsubp
stos
and
das
sahf
fs
call
sti
movsl
mov
ss
jno
cld
mov
jbe
push
xor
out
ljmp
push
pushf
mov
js
ss
or
sarl
mov
sbb
jecxz,pt
cmp
push
mov
inc
outsl
xchg
mov
ret
jno
int3
mov
inc
ds
ss
sarb
pop
call
enter
mov
lock
sbb
fs
pop
sbb
inc
inc
or
inc
cmp
adcl
sub
in
out
gs
loop
cmpsb
ljmp
sub
repz
in
shrb
mov
mov
push
jno
dec
pop
into
test
dec
dec
fcmovu
lret
test
aas
jbe
xor
add
orb
or
or
mov
fmul
jae
shlb
sbb
mov
hlt
sub
and
xchg
cs
fdivl
adc
lds
insl
cmp
mov
repz
addr16
sbb
xchg
mov
cmp
lcall
cltd
movsb
pop
mov
ss
cmp
ljmp
adc
jb
cmpl
daa
mov
fcmovnb
or
inc
dec
dec
xchg
pop
stos
out
pop
push
lret
rcll
sub
and
aad
jp
cmpsl
fs
ja
jl
dec
push
xor
mov
mov
add
ja
ret
cmp
pusha
pop
mov
pop
addr16
mov
xchg
adc
das
icebp
push
hlt
pop
inc
js
cmp
inc
jno
add
push
stos
jnp
lcall
inc
xchg
cmp
ljmp
inc
cmp
pop
push
mov
inc
sbb
cmp
jecxz
pop
lret
sbb
push
in
inc
jle
push
xlat
test
inc
dec
ja
scas
pop
and
mov
cld
xchg
and
mov
fnstsw
mov
xchg
jno
fidivrs
and
out
hlt
push
in
pusha
stos
in
pop
sub
scas
pushf
mov
cmp
jmp
inc
adcl
inc
mov
xor
shr
dec
out
pop
das
sub
scas
jp
mov
aad
sbbb
xchg
cli
mov
popf
jmp
and
jae
sub
leave
aas
and
mov
lahf
out
sbb
imul
adc
dec
sub
out
inc
or
inc
dec
xor
inc
and
cs
or
ret
add
pop
or
enter
out
outsl
cmp
sbb
out
xchg
cwtl
std
scas
push
lods
jnp
out
dec
adc
int3
mov
int3
bound
fcmovnbe
popa
fdivrs
jnp
xor
push
jg
xlat
sub
mov
xor
std
addr16
mov
and
add
jp
loop
popf
hlt
rolb
cwtl
jno
in
sub
mov
into
shll
mov
push
test
pop
mov
sub
dec
repz
in
iret
mov
lds
movsl
loopne
mov
mov
sahf
arpl
jl
jge
in
xchg
or
ja
jns
mov
xor
shrl
inc
cwtl
dec
das
clc
insl
negl
aaa
push
jp
sub
xchg
je
jb
add
mov
sub
mov
push
mov
dec
inc
pop
and
xchg
sub
neg
cld
fdivrs
mov
stos
cmpsb
scas
fadds
xchg
xchg
sahf
xor
push
xchg
sbb
and
jb
leave
adc
das
in
mull
jnp
cmpsb
fisttpl
scas
lods
loopne
jecxz
add
mov
stc
jmp
ljmp
aam
add
frstor
inc
xchg
xor
cmpsb
adc
mulps
mov
aaa
sub
mov
psadbw
sub
mov
shlb
ss
fmul
nop
xor
test
sti
lret
mov
xchg
test
push
addb
test
and
clc
xchg
cs
adc
push
out
arpl
movsb
xchg
adc
fldenv
mov
loope
add
imul
ret
shll
bnd
fisttpl
orb
push
dec
outsb
xchg
jae
add
lcall
and
lahf
cmp
iret
and
jne
shr
push
stos
add
xchg
xor
addl
lcall
dec
mov
jmp
dec
leave
aaa
loope
push
mov
lods
mov
pop
mov
cmp
lods
movsl
movsb
ret
cmp
sbb
sub
cmp
xchg
cmpsl
inc
cmp
jb
pushf
pop
push
out
sub
mov
mov
iret
fsubr
popf
sub
pop
pop
mov
pop
shl
enter
xchg
inc
mov
popf
push
sub
xor
dec
jmp
mov
sub
mov
xlat
imul
pop
dec
and
test
dec
int
sbb
lret
je
rolb
dec
test
add
mov
pop
fcmovnu
ljmp
int
xchg
sbbl
add
out
push
xor
sub
gs
daa
xchg
inc
nop
mov
or
or
into
cmc
or
lret
and
mov
scas
ja
lds
pop
cld
push
cs
xchg
les
lds
jnp
sahf
sarb
lods
jmp
or
test
push
xlat
das
and
aad
das
mov
mov
ret
sub
cmp
inc
jbe
aaa
std
testl
orb
fiaddl
mov
mov
outsb
xor
mov
jno
xor
mov
fscale
push
or
add
and
mov
push
lds
mov
push
imull
in
aam
fs
jg
dec
mov
inc
sbb
subb
sbb
mov
adc
pushf
mov
xchg
sub
lret
cli
inc
popf
cmp
in
pop
and
icebp
or
xchg
add
gs
loope
cld
push
dec
test
shrl
push
cltd
xor
les
xchg
sbb
xorb
fs
mov
daa
fwait
mov
mov
inc
xorb
idivb
xchg
fbstp
pushf
ds
mov
fimuls
mov
or
dec
jne
and
and
sahf
insb
and
inc
inc
in
push
ds
lds
lret
mov
out
in
xor
jo
adc
aas
mov
mov
xor
cmp
add
pop
xor
push
mov
stc
scas
rcr
mov
sub
jbe
outsl
and
stos
sub
in
fadds
fnsave
insl
into
addr16
dec
cmp
mov
xchg
xchg
popf
jle
fisttpll
pop
adc
dec
sahf
adc
js
mov
jecxz
inc
xorb
nop
inc
dec
and
scas
insl
repz
xchg
fadd
fdivs
in
cmp
into
es
push
push
pop
mov
loop
adc
loope
ret
sub
in
scas
xchg
lcall
cvtps2pi
cltd
mov
iret
ret
dec
pop
cmp
outsl
pop
jle
inc
jno
mov
inc
les
shll
jge
adc
or
push
push
mov
aaa
mov
sahf
pop
stos
sub
movsb
push
adc
or
and
jmp
int
movsb
insl
out
inc
mov
clc
add
in
lret
xchg
xchg
pushf
mov
cmp
fisubl
fdivs
xchg
lret
cmp
mov
lcall
mov
push
test
daa
mov
cmpsb
lock
sub
js
jo
jb
inc
sbb
hlt
or
arpl
xor
test
lahf
scas
sbb
and
dec
mov
sbb
adc
pop
xor
movsb
pusha
or
push
lret
add
outsb
sbbb
out
enter
mov
jne
scas
pop
push
popf
jg
stos
shrl
inc
aas
mov
sub
push
jmp
loop
push
mov
add
pop
je
ret
ret
cmp
out
inc
cld
jnp
mov
outsl
jns
inc
daa
cltd
mov
pop
xchg
jp
add
lret
jne
xchg
sbbl
xor
push
jnp
xchg
xchg
mov
push
cmpsl
pop
notb
xchg
ss
shrl
dec
call
dec
pop
mov
dec
fldt
inc
jmp
daa
mov
pop
rcr
jecxz
cmpsb
xchg
fcomip
int
xchg
repnz
xchg
loop
jo
mov
repz
xor
sbb
mov
ficompl
jmp
adc
mov
xchg
ja
sbb
fs
cmp
xorl
fstps
or
mov
sbb
sti
pop
nop
pop
jg
hlt
add
imul
sub
out
push
jecxz
mov
and
adc
iret
jns
jmp
ja
fsubr
add
js
pop
cwtl
jg
mov
adc
xor
adc
mov
and
es
jg
jno
imul
push
imul
pop
or
pop
subl
aas
jge
stc
enter
fs
scas
sar
push
aam
cmp
or
adc
jg
cmc
icebp
data16
push
lcall
jmp
add
ljmp
dec
int3
loope
and
xchg
pop
add
je
nop
aad
mov
mov
dec
mov
xor
cmpsl
lcall
jnp
bound
loop
sahf
jp
add
xor
mov
mov
xchg
ret
mov
pop
jge
sbb
jo
jmp
xor
xacquire
mov
xchg
nop
mov
faddl
in
icebp
xor
dec
dec
lcall
adc
and
adc
js
and
rclb
les
adc
jnp
and
adc
push
dec
jge
int3
xchg
xchg
and
push
xchg
cli
sarb
xorl
push
pop
dec
std
sub
adc
push
ljmp
inc
push
sbb
mov
rol
inc
jo
dec
and
pop
cmp
xor
sub
push
dec
pop
xchg
adc
cltd
sti
clc
out
jbe
ret
fimull
dec
push
scas
lods
xor
ffree
testl
popf
gs
sbb
ds
gs
insb
push
lcall
sub
popl
cmp
jns,pt
push
jp
push
cmp
cmc
jle
rorl
pop
movsl
push
out
cmp
loope
sti
ljmp
orb
in
loope
sub
inc
add
mov
ds
pop
add
push
xchg
mov
sbbl
xchg
mov
lock
xor
xor
aas
dec
cmpsl
sub
imul
repz
sbb
xchg
negl
sub
jo
loope
cld
imul
mov
pop
js
test
cwtl
push
fstpt
scas
mov
push
movd
jp
data16
cmp
lret
repz
ljmp
fmul
cmp
rorb
jg
mov
stos
mov
mov
inc
fisubl
outsb
call
push
sub
inc
clc
mov
fimull
adc
dec
imul
fadds
lret
or
dec
sti
adc
inc
xchg
popf
cmp
mov
out
shlb
jb
loope
pop
dec
movsb
inc
or
movsl
push
fildll
inc
or
sti
add
gs
sub
add
dec
xchg
dec
xchg
loop
hlt
insb
push
bound
clc
in
cmc
xchg
push
xchg
inc
insl
imul
add
into
inc
xchg
inc
pop
xchg
xchg
lret
cmp
push
rorl
lods
sarl
add
sub
aas
xchg
stos
inc
xchg
mov
mov
dec
outsb
int3
shlb
lret
xor
push
int3
call
or
pop
sub
jnp
stc
aaa
xchg
jbe
jle
shrl
add
js
push
test
dec
and
ud0
jmp
clc
mov
jbe
hlt
jge
add
sub
xchg
add
das
push
cltd
pop
cwtl
pop
aad
fs
xlat
fcomi
push
cmp
clc
xchg
dec
sbb
mov
jno
out
mov
push
mov
imul
fidivrs
push
xor
mov
push
jo
test
pop
inc
dec
ficompl
inc
das
dec
jecxz
push
xchg
int3
and
arpl
sub
movsb
repz
xchg
push
hlt
sub
sbb
adc
call
test
fisubrl
popf
arpl
sub
jmp
dec
into
in
pop
jmp
xor
mov
sub
iret
xchg
andb
inc
sub
sub
flds
je
jle,pn
jmp
or
push
div
sbb
xor
loope
mov
inc
dec
pop
sti
cmp
jecxz
js
loop
int3
push
rcr
ret
pop
lret
das
insl
out
inc
in
sahf
dec
cld
insl
stos
sub
pusha
andl
cmp
stc
flds
and
lock
sbbl
mov
dec
adc
adcb
cld
xor
sub
je
bound
out
nop
mov
aaa
xor
mov
popf
push
jp
fidivrs
daa
dec
out
inc
nopl
xor
xchg
dec
call
addb
cmp
loop
decb
insb
imul
clc
gs
and
pop
je
fmuls
in
push
aaa
or
hlt
or
insb
cltd
sub
add
push
cli
nop
arpl
mov
lret
test
test
loope
pop
cli
out
arpl
push
fildl
mov
lock
std
xor
mov
cld
pop
cmp
jns
jno
pop
fsubs
out
std
scas
add
xchg
les
mov
dec
push
out
xor
push
fyl2xp1
cli
fdivrl
aad
cmp
test
dec
in
and
ja
push
dec
or
sarl
popf
adc
jbe
and
cmp
call
sahf
loope
inc
cmpsb
xorb
xchg
push
inc
insl
lret
xor
addb
or
sub
cmc
push
call
scas
sub
jnp
jbe
les
cltd
cmp
add
jmp
jl
scas
outsb
fisttps
and
aam
cmpb
push
int3
and
and
ret
ds
mov
and
cld
xlat
jbe
je
or
pop
jle
sbb
add
idivl
sbb
add
adc
movsl
pop
frstor
dec
fwait
es
icebp
mov
mov
cltd
test
sbb
mov
xor
fcoml
scas
jecxz
push
insl
lods
addb
daa
cmp
test
jge
outsb
jg
mov
cmpsl
mov
push
mov
fidivrs
pop
cmp
subl
in
mov
xchg
adc
mov
mov
cmp
out
mov
iret
inc
xorl
or
mov
xor
jns
xor
test
push
jl
pop
inc
dec
xchg
push
popa
iret
lcall
xor
push
arpl
inc
es
adc
mov
and
pop
enter
mov
mov
mov
xor
mov
outsb
repz
in
pop
fstpt
adc
test
push
inc
aam
lcall
pop
cmpsb
push
pop
ds
imul
xor
test
pop
mov
mov
pop
sti
loopne,pt
lods
mov
into
andb
sub
cmpsl
popa
loop
mov
mov
outsb
les
cwtl
adc
mov
pop
cmp
das
cld
sbb
mov
loopne
testl
cmp
inc
pop
sub
cmpsl
sahf
arpl
mov
mov
adc
add
cmpsb
pop
ss
popa
adc
jno
sbbl
ja
jb
sahf
fisubs
jg
les
stos
inc
adc
pop
mov
xor
mov
inc
push
adc
scas
int
fbstp
push
jle
mov
or
out
adcb
sbb
stc
outsb
push
sub
xchg
mov
out
inc
xchg
xor
iret
iret
and
aam
mov
push
and
xchg
add
xchg
aas
scas
sub
push
mov
adc
dec
add
insl
icebp
jno
scas
jno
ret
or
outsb
cmp
push
dec
sub
xorl
sub
xchg
aam
je
sub
adc
popf
xor
cwtl
cmp
inc
scas
lcall
pop
inc
icebp
cmp
movsl
dec
xchg
repz
scas
adc
and
lea
jnp
mov
pop
imul
inc
pusha
addr16
into
andl
addr16
fnstcw
xchg
mov
jp
ret
inc
out
adc
ret
roll
push
xor
dec
and
pop
out
mov
sub
out
enter
xchg
movsl
std
aaa
sti
push
cmpl
sbb
add
in
inc
sub
and
or
sbb
or
out
aas
inc
dec
or
push
shr
stc
xor
mov
arpl
loope
jnp
cmp
inc
push
popa
es
xor
xor
mov
mov
mov
out
filds
or
sbb
jmp
lcall
aaa
pop
bound
shlb
sub
and
mov
mov
adc
xor
ja
sbb
aaa
cli
in
shll
sbb
and
inc
cmpsb
adc
sbb
cli
inc
popa
mov
push
sub
out
pop
pusha
xor
iret
dec
je
pop
iret
push
out
out
lret
pop
xchg
ljmp
lods
mov
loop
rolb
sub
jbe
push
fstpl
decb
add
shrb
and
add
stos
adc
push
and
mov
dec
xchg
ljmp
xchg
imul
and
arpl
ss
mov
pop
inc
das
in
mov
mov
cmp
aaa
and
movsl
push
jae
test
and
mov
jmp
insl
jge
lock
test
testb
je
ss
add
and
lahf
adc
int
lahf
jecxz
jle
pop
add
sbb
sbb
push
pusha
mov
pushf
push
jl
dec
or
or
sbb
pop
jne
mov
add
xchg
stc
out
lock
sub
leave
jns
mov
ficoml
movsb
xchg
mov
call
dec
mov
popa
mov
push
pop
iret
je
pop
mov
repnz
mov
hlt
fadds
xchg
push
jmp
pop
lret
jns
mov
movsb
test
cmp
jecxz
mov
mov
adc
pop
je
pop
insl
sub
movsl
arpl
cwtl
or
jne
shrb
or
cmp
mov
xchg
sub
push
es
xchg
mulb
out
aad
out
mov
cmp
xchg
pop
in
jecxz
jne
mov
or
jb
mov
add
pop
jge
jbe
roll
dec
fucom
insb
push
sbb
pop
mov
mov
into
testl
push
xchg
mov
xchg
inc
dec
lcall
outsb
push
pop
adc
sub
cltd
jae
ficoms
push
add
loopne
dec
pop
movsl
pop
push
adc
jae
movsl
fistl
idivb
adc
iret
xchg
and
mov
ja
jg
xor
xlat
pushf
adc
out
ja
add
push
mov
push
mov
push
inc
mov
scas
arpl
inc
test
push
jge
xchg
iret
mov
and
sbb
mov
xor
popf
inc
inc
or
icebp
lock
xor
enter
sbb
loop
aam
lea
mov
sbb
mov
and
es
adc
and
mov
mov
bound
mov
and
sub
lock
lock
jg
in
add
cltd
das
addr16
push
push
xor
push
mov
xchg
into
mov
adcb
je
loope
cmp
movsl
xchg
xor
adc
adc
stc
pop
outsb
dec
js
aad
jg
or
xor
int
jecxz
and
das
sarl
pop
mov
pop
cmp
fstpt
and
in
cmp
lods
testl
test
push
iret
stos
fdivrl
and
stc
divl
test
pop
mov
adc
imul
cmp
rorb
int3
outsl
xchg
mov
jg
repz
out
int
pop
movsl
sbb
or
mov
add
sub
dec
mov
xor
js
scas
push
mov
lahf
and
cmp
rolb
sbb
arpl
int3
cs
movsb
sub
fcoms
inc
jecxz
xchg
mov
jne
andl
and
sahf
mov
test
and
and
aam
rcll
in
mov
je
loope
xor
shrl
aas
shll
dec
repnz
fldl
add
push
jl
out
xchg
adc
dec
insb
lsl
or
add
fdivrs
or
js
push
xor
jne
xchg
pusha
add
in
jl
idivb
sahf
aaa
cmp
leave
loop
in
push
xor
xchg
jae
jae
sbb
jmp
jns
mov
add
jne
mov
add
dec
mov
mov
add
cmp
pop
jmp
loopne
and
xor
fists
sbb
dec
orb
jnp
xor
xor
fiadds
fistpl
hlt
out
int
dec
fists
adc
loop
add
rcl
inc
pop
mov
jge
ja
or
jnp
int
flds
int3
dec
dec
imul
mov
xchg
jae
jecxz
xchg
jl
mov
sub
ret
arpl
and
nop
adc
push
sub
js
repnz
out
jnp
fwait
punpcklwd
jb
in
sub
and
sub
dec
ret
jae
jns
push
lea
arpl
dec
inc
movsb
push
jl
cwtl
test
jl
lret
add
jae
pop
cltd
or
xchg
imull
mov
pop
loope
arpl
int3
ja
mov
pop
and
xor
call
sbb
scas
and
mov
inc
adc
inc
dec
bound
cmpsb
adc
cmc
mov
loopne
add
pop
mov
mov
mov
jno
push
and
int
fs
and
adc
and
sahf
cmp
add
pop
gs
sbb
mov
xchg
pop
push
pop
or
fcmovnu
or
sbb
adc
xchg
shl
or
sub
movsl
mov
and
or
test
push
std
fucomip
enter
jbe
mov
mov
movsb
in
test
pop
data16
xchg
mov
fsubs
inc
lock
sub
insl
pop
and
xchg
sub
insb
into
dec
xchg
std
push
fwait
and
sub
mov
inc
dec
mov
adc
stos
out
into
cmpsl
dec
inc
loopne
insl
data16
in
or
out
push
rorl
pusha
mov
stos
lret
imul
test
mov
adc
cld
or
je
lods
sbb
and
mov
int3
orb
in
fs
inc
add
aas
test
mov
mov
shll
mov
sahf
and
outsb
insl
cltd
mov
pop
fs
enter
lahf
xchg
push
ror
scas
and
sti
enter
pop
test
in
xor
add
xchg
std
adc
sbb
dec
bound
cmp
jle
fs
lods
inc
or
xchg
sbb
js
jb
fbld
fldt
mov
sub
stos
sub
adc
sbb
or
divl
dec
mov
mov
outsl
lret
int
sbbl
mov
lods
sahf
test
sub
outsl
or
js
pop
out
xor
mov
test
push
adc
dec
data16
cmp
and
pop
das
pop
or
arpl
pop
cmpsl
inc
jae
lods
ljmp
mov
mov
adc
popa
data16
bound
scas
subb
mov
and
mov
inc
test
sbb
popf
mov
xchg
in
mov
popf
mov
ja
insl
std
fisubrs
popf
pop
mov
and
mov
mov
add
sub
push
add
pusha
int3
repnz
sbb
and
outsb
pushf
mov
lea
aam
sub
dec
int3
mov
cmp
and
cmp
fwait
inc
fmull
mov
aas
or
dec
mov
jnp
pop
cld
dec
icebp
inc
mov
in
ja
filds
and
mov
outsl
imull
xor
jle
js
lds
std
inc
pop
push
xor
jecxz
sub
je
fwait
jne
mov
rcr
cmp
adc
fistpl
out
and
inc
sub
adc
cmp
xchg
dec
mov
aas
jns
pop
ret
cmp
lods
jo
xchg
add
pop
xchg
xchg
jecxz
pop
cmc
mov
aaa
iret
adc
sahf
sti
adc
pushf
mov
mov
inc
xor
mov
mov
leave
push
je
mov
clc
mov
out
sub
mov
sub
mov
ret
xchg
insl
mov
mov
dec
andl
pushf
hlt
jbe
mov
inc
sub
in
aaa
xlat
add
js
sbb
inc
xor
test
push
mov
adc
cmp
xchg
xor
lcall
pop
inc
jne
sahf
std
sbb
int3
shlb
inc
arpl
mov
adc
ss
data16
cs
loope
xchg
mov
push
mov
pusha
xor
out
test
mov
mulb
mov
lret
mov
xchg
inc
jns
push
cld
pop
add
sbb
in
adc
pop
enter
push
out
aas
lods
inc
pop
jno
movsb
gs
sbb
xor
pop
jo
push
and
jmp
dec
nop
adc
aad
icebp
pushf
mov
xorb
shr
repnz
sarl
push
rorl
decb
xor
scas
outsb
xchg
push
fs
jge
int3
jmp
jecxz
cmp
mov
ret
movl
dec
jle
sub
inc
sbb
std
fists
sti
mov
xor
adc
pop
mov
fnstenv
mov
insl
adc
push
lea
mov
mov
add
add
push
imul
daa
into
adc
xchg
jle
pusha
mov
enter
inc
mov
in
sti
mov
xor
loope
cli
cltd
adc
ret
dec
sub
xor
jg
pop
push
lock
sub
insl
mov
lock
pop
loope
push
add
mov
add
cmp
cmc
stos
fwait
jmp
mov
push
jns
sub
push
xor
xchg
jmp
xor
in
out
daa
ss
adc
xchg
insl
inc
dec
dec
xchg
shl
adc
in
daa
or
ret
faddl
les
loopne
orl
outsl
mov
pop
mov
in
call
popf
or
push
stos
lock
lcall
mov
or
dec
mov
pop
lahf
jmp
and
push
push
inc
dec
in
movl
sub
clc
stos
test
jns
mull
xchg
sub
mov
dec
dec
inc
add
sub
aaa
and
stos
out
into
mov
inc
cmpsl
xchg
add
in
rcr
mov
xor
xchg
sbb
push
dec
outsb
orl
push
mov
fwait
cwtl
addr16
lock
inc
sub
incb
movl
jp
mov
jl
inc
addl
jo
dec
daa
mov
push
mov
scas
xor
and
dec
shrl
shll
mov
daa
lods
dec
mov
cmpsb
pop
lcall
fldcw
cmp
push
push
push
jmp
inc
ret
test
inc
loopne
sbb
test
xchg
push
mov
cmc
out
inc
je
sbb
xorl
cmp
and
xor
mov
xchg
mov
dec
mov
fldenv
and
xor
xchg
fsub
adc
jg
dec
es
inc
loop
repz
aad
mov
and
mov
adc
mov
mov
cmpsb
outsl
das
cmpsl
lahf
filds
cmp
mov
popf
pop
push
inc
mov
outsl
and
sbb
adc
stos
xchg
out
sahf
add
shll
pop
orl
ret
ret
inc
cmpsb
lea
scas
andl
jbe
sbbl
and
ficomps
mov
imull
jmp
xchg
push
sub
leave
data16
stos
xor
lret
jb
mov
mov
cld
cmc
pop
pushf
cmp
es
lock
or
in
or
hlt
sahf
push
ss
lret
lea
js
call
push
clc
pop
fiadds
xor
sbb
mov
xor
outsb
pushf
test
pop
inc
inc
xor
push
and
or
sahf
fisttps
jge
sub
mov
push
and
jnp
mov
ficoml
mov
shrl
xchg
vpmaxub
rcll
and
pop
inc
cmp
jb
mov
inc
or
lods
jne
jne
fs
roll
ffree
jge
test
inc
lret
cmp
xchg
mov
rcrl
jp
or
adc
lods
rclb
mov
adc
ja
scas
movsl
out
cmp
repnz
testl
xor
repz
fs
adc
std
lea
sub
or
fs
and
push
in
ds
movsb
call
aaa
sbb
cmpb
xchg
jmp
xchg
xor
jmp
mov
mov
xchg
fstps
add
and
scas
sub
iret
repnz
call
push
mov
int
xor
or
jne
push
or
dec
dec
adc
pop
and
xor
sub
out
pop
mov
xor
xor
pop
or
inc
and
push
fsubrp
cmp
inc
fmuls
sub
cmp
outsb
or
and
scas
stos
pop
loop
loop
in
pusha
push
pushf
cmpsb
mov
jg
jnp
pop
adc
inc
aas
mov
xchg
std
sbb
fwait
repz
loopne
sbb
data16
lods
xchg
and
jo
pushf
xlat
cmpsb
jo
mov
or
call
cmpsb
sbb
xchg
ret
loopne
or
dec
or
dec
call
leave
push
pop
cmpsl
faddp
scas
mov
out
sahf
jmp
xor
scas
xlat
jle
int3
mov
stc
fwait
dec
hlt
jecxz
les
lret
pop
xor
mov
lahf
insl
repnz
sub
sbb
fildl
mov
sbb
aas
inc
mov
xchg
mov
mov
addr16
test
sub
push
jl
fisubl
out
shr
xchg
div
ret
lret
mov
xchg
add
pop
shlb
scas
jae
and
or
push
mov
ret
mov
cmp
jnp
sbb
xchg
inc
das
in
sub
mov
xchg
push
cli
adc
dec
mov
mov
movsl
jge
lods
jl
fbld
clc
cwtl
cmp
and
add
call
sti
mov
jns
addr16
andl
xchg
cmp
icebp
sub
mov
or
mov
enter
mov
pop
mov
or
bound
ret
inc
jb
push
push
sahf
in
push
xchg
movsl
jecxz
mov
mov
push
movsl
fnsave
xor
decb
sbb
add
stc
pop
out
jno
aaa
ror
xor
push
test
sahf
pop
sbb
outsb
fistpll
or
inc
ror
imul
inc
add
jne
xchg
adc
jp
jg
popa
push
aas
out
dec
mov
inc
mov
std
adc
pop
and
push
dec
xor
mov
lods
push
in
dec
ljmp
mov
fdivrs
sub
addr16
cmp
test
inc
and
daa
subl
lea
mov
inc
inc
xor
popa
out
ljmp
push
daa
repz
incl
stc
into
mov
adc
xor
cmp
inc
loop
push
repnz
leave
into
lahf
shl
adcl
or
idivl
fdiv
push
jl
es
add
mov
gs
or
push
dec
iret
sbb
pop
fmul
cld
add
jb
fsts
add
shlb
mov
ss
push
fildl
stos
enter
lahf
mov
lods
test
jno
repz
xor
add
stos
repz
into
mov
dec
push
idiv
pop
loope
mov
icebp
dec
ret
shll
fwait
xor
mov
jo
push
pushf
or
icebp
decb
mov
or
xchg
in
sub
inc
pop
cmp
test
je
lcall
stos
in
das
pop
dec
xor
adc
insb
mov
push
movsb
or
in
cld
sahf
nop
sub
sbb
or
add
or
mov
jo
mov
scas
shll
jb
dec
cmpl
cmc
out
dec
sbb
pop
stos
aas
insl
add
sub
lahf
push
mov
aam
sub
imul
icebp
dec
and
insl
mov
xor
ja
pop
mov
aaa
or
lock
stos
cmp
inc
insb
pop
mov
push
out
ds
mov
test
push
jle
test
scas
pop
fwait
jge
mov
sbb
ret
movsl
push
mov
sub
adc
scas
inc
cltd
sbb
xchg
jo
mov
mov
mov
sub
lea
rcll
inc
add
data16
data16
mov
stos
sbb
lret
pop
loopne
xor
push
sub
lds
cmp
or
cli
into
es
fisubl
cmc
add
pop
cld
in
mov
andb
xchg
xor
outsb
cwtl
je
iret
mov
push
mov
and
jp
and
cmc
jecxz
inc
mov
xorw
or
mov
icebp
negb
mov
dec
mov
stos
xchg
aas
and
jge
mov
jg
lods
cmp
repz
pop
sbb
movsb
pop
add
ds
sbb
pop
out
loopne
jg
mov
aas
cmpsb
fildl
jl
sub
das
jne
pop
push
fs
fstl
cmp
and
push
xchg
pop
pusha
mov
lcall
sbb
daa
lret
xchg
pop
jnp
std
inc
jle
fstpl
adc
jae
xor
call
jae
and
sahf
xchg
inc
fcmovu
add
mov
popa
pop
sbb
xchg
mov
scas
pop
pop
xlat
stc
dec
adc
decl
cs
mov
and
rcrl
out
mov
adc
insb
mov
sub
jo
lret
jmp
cmp
lret
sbb
jmp
insl
jns
mov
and
shlb
push
pop
sub
mov
or
daa
sub
cmp
adc
sti
and
mov
mov
fsubrl
in
inc
fwait
jb
mov
sub
inc
in
pop
jae
pushf
cs
les
push
mov
sbb
in
aas
add
mov
mov
pop
outsl
sti
mov
mov
addr16
test
es
xor
sub
pop
sub
adc
xor
lock
lahf
fidivl
xchg
sbb
enter
clc
scas
lock
push
and
pop
jno
movsb
out
lods
out
cmp
xchg
or
jno
mov
sti
outsl
push
mov
add
and
popa
inc
popa
adc
daa
je
test
adc
jl
shr
fdivp
adc
test
addb
idivl
push
push
sub
lahf
inc
sbb
stos
adc
cmp
fldcw
cmp
or
jle
cmp
loope
or
call
outsb
pop
stos
mov
dec
sbb
xor
adc
sub
mov
inc
outsb
cmp
xlat
out
xor
mov
xchg
cmpsl
mov
shrb
int
xchg
aas
std
aaa
rorl
dec
out
mov
cmp
stc
xchg
cs
cs
icebp
jno
scas
arpl
addr16
cli
xchg
dec
mov
loope
sub
push
adc
sbb
cltd
jo
ret
decb
adc
jmp
jo
xor
dec
jg
fsincos
flds
popf
inc
call
add
cmpsb
jecxz
pop
mov
leave
shl
or
aam
pop
ret
pushw
out
xchg
cs
mov
mov
mov
shl
dec
xchg
aam
sub
push
ds
pop
hlt
cmpsb
sarb
xchg
lods
inc
xchg
adc
or
mov
cmp
stos
dec
push
mov
jg
xor
std
push
xchg
mov
and
jo
mov
or
cmc
scas
aas
push
fstps
add
pusha
cmpsb
test
cwtl
pop
mov
leave
scas
adc
in
and
insb
fs
add
mov
mov
lea
xor
lret
and
pop
in
mov
rcr
je
mov
mov
mov
int
mov
rcrl
rcl
cld
mov
sub
sbb
sub
or
dec
xchg
or
dec
fidivs
push
dec
fsubl
int
fdivl
jbe
mov
jle
lods
jb
cmpsl
loope
das
mov
xchg
iret
sahf
mov
sub
xchg
out
fs
ficomps
fwait
mov
sub
mov
and
push
add
in
mov
pop
sub
in
hlt
test
xor
jnp
pusha
jns
aas
cs
push
push
negl
pop
jne
adc
std
xchg
push
js
push
jno
push
jnp
nop
imul
push
lret
js
pop
sti
lods
mov
popa
fmuls
imul
mov
ljmp
adc
lret
xchg
mov
enter
mov
mov
popf
push
ja
mov
pushf
arpl
xor
test
mov
fistpl
loope
fs
sub
loope
sbb
and
xlat
inc
or
repnz
xchg
add
bnd
aad
pop
mov
jle
pop
aaa
push
arpl
add
stc
mov
dec
ds
outsb
ret
inc
das
stos
pop
push
pusha
mov
jecxz
int
frstor
pop
jno
pop
mov
pop
mov
imul
data16
outsl
add
loopne
in
cmp
arpl
xor
notl
fisttpll
fidivl
sbb
cmp
xor
ror
fadd
sbb
pop
push
or
pop
lea
sbb
jo
sub
inc
sub
divl
pop
std
mov
hlt
push
lds
lods
xchg
sti
sbb
adc
cmc
out
mov
xor
daa
cmp
cmp
fistl
js
je
mov
or
aas
mov
mov
jno
mov
inc
outsb
lret
out
call
adc
andnps
insl
cmp
jnp
sbbl
pop
das
sbb
dec
loopne
subb
fs
mov
outsl
mov
leave
aas
and
in
loope
push
sub
ret
lcall
scas
sub
outsb
xchg
aas
out
and
sbb
and
mov
dec
pop
out
mov
sbb
or
xchg
mov
data16
and
pop
adc
lret
ja
sahf
or
out
jmp
xorb
sbb
inc
sbb
or
push
and
mov
mov
lea
pop
sbb
sbb
into
mov
pop
jbe
icebp
loopne
das
mov
fs
mov
lret
cmpsl
cmp
inc
cmpsb
push
sbb
sbb
mov
add
lret
popa
stos
aaa
dec
xchg
cmpsb
sub
shrl
lods
subb
mov
in
jnp
sahf
inc
dec
pop
mov
push
mov
pushf
dec
in
pushf
test
insb
test
or
sbb
jg
xor
mov
sti
jmp
std
push
int3
inc
testb
or
jge
cmp
push
sbb
pop
enter
mov
aad
add
mov
insl
lds
addr16
and
rclb
cmpsb
hlt
add
lds
adc
clc
xor
icebp
xchg
movsb
push
inc
mov
ret
add
add
mov
roll
and
outsb
xor
pop
insb
lret
mov
fmuls
jp
inc
inc
cmp
incl
fbld
into
insb
sbb
mov
cmp
shrb
out
jno
pop
mov
push
jnp
add
xchg
out
sbb
add
nop
out
mov
fsubs
incb
in
jl
pop
sub
hlt
nop
movsb
sbb
es
cmpsl
or
pusha
stos
xor
repz
sub
pop
daa
sub
and
cld
sarl
or
ret
and
adc
and
mov
popa
addr16
hlt
fisubrl
adc
into
dec
inc
mov
jns
push
test
fbld
test
xor
inc
imul
xchg
test
push
mov
imull
shll
jb
xchg
sti
pushf
call
jp
faddp
xor
xor
xchg
push
pop
or
loope
loope
fwait
js
fwait
loopne
fistpl
rcll
xor
dec
arpl
stc
lds
add
test
stos
jge
or
in
xchg
xchg
aad
das
ret
push
outsl
push
xchg
jl
call
int3
xlat
lock
mov
mov
adc
lret
loopne
loopne
inc
lahf
pop
leave
add
fstpl
push
arpl
xchg
xchg
lock
adc
mov
mov
ljmp
push
mov
das
in
push
fs
test
cmp
jp
mov
push
out
out
test
mov
divl
movsb
scas
push
push
les
and
adc
enter
mov
in
insl
in
or
cmc
jae
pop
ret
addr16
rcl
pop
xchg
pusha
mov
fwait
pop
lods
arpl
inc
cmp
xchg
xor
sti
dec
dec
sbb
adc
lock
pop
mov
in
mov
jae
les
inc
pop
mov
sub
sbb
jle
rcrb
mov
insb
loopne
aam
pop
movsb
cltd
push
aad
cmpsb
adc
fisttpl
push
hlt
ljmp
out
mov
pop
rorb
out
push
pop
mov
inc
aas
sub
push
gs
cmp
adc
into
test
cltd
sbbl
or
sub
jo
xchg
pusha
out
sbb
sti
test
mov
bound
repnz
stos
outsl
negl
xor
adc
jno
in
xchg
imul
test
jns
and
adc
cmp
aad
push
loop
xchg
sub
bnd
dec
aaa
mov
inc
push
sub
mov
inc
mov
scas
mov
push
aaa
mov
imul
mov
ja
insl
aad
data16
outsl
inc
insb
jge
leave
stos
in
xchg
add
or
mov
ret
inc
adc
cmp
lahf
sub
mov
add
pop
rcll
mov
addr16
cmp
xchg
notl
xchg
pop
testb
adc
mov
push
shll
cmp
cmp
mov
cmp
xchg
sti
mov
out
fbld
mov
scas
stos
fs
movsb
pop
sti
pop
fwait
movsb
jge
cs
shr
sahf
or
adc
pop
push
xlat
and
cs
arpl
jp
mov
and
test
xchg
rcll
test
pop
inc
loopne
mov
inc
loopw
and
shrb
inc
push
lods
add
xchg
xchg
scas
stos
jmp
fildll
mov
mov
push
adc
pop
push
ret
cltd
adc
test
pop
ja
add
mov
scas
lcall
cmp
dec
dec
and
ficoml
sbb
mov
xor
setge
in
sbb
fcomi
arpl
data16
test
cmc
xchg
sbb
cmp
pop
push
in
ret
hlt
mov
cld
mov
test
sbb
mov
scas
out
pop
cld
pushf
jp
xchg
loope
inc
adc
mov
cli
jo
mov
mov
push
xor
inc
sahf
mov
xor
or
cmc
in
pop
fdivl
fisubrl
sbb
or
ljmp
xlat
push
push
call
shrl
push
ja
mov
lcall
mov
sub
xchg
lcall
in
add
fadds
lods
sbb
enter
and
mov
test
int3
int
jecxz
inc
out
ret
sti
cli
sub
xlat
mov
sahf
es
test
repz
mov
test
data16
inc
inc
pop
fisubrs
in
call
insl
push
inc
xchg
sarl
stos
and
inc
js
mov
fldenv
jo
mov
sub
loop
push
ret
pop
dec
push
fwait
inc
sbb
pop
pop
fnstsw
mov
or
fstl
inc
add
jl
out
mov
jecxz
ds
ficoml
mov
shll
std
add
jle
shlb
mov
mov
mov
aad
jecxz
lock
repnz
dec
int
stc
mov
repz
push
mov
mov
or
inc
rcll
or
ret
rcrb
ljmp
mov
mov
push
test
sub
mov
dec
adc
xor
std
add
orb
das
enter
ret
xor
daa
cli
shrl
jnp
xor
das
and
neg
push
push
cmc
fs
ja
fwait
icebp
mov
clc
stc
pushf
cmp
or
and
pop
xor
add
ret
cmp
push
cmp
cmp
pop
call
sub
mov
in
fnsave
dec
and
sub
push
mov
enter
outsb
add
sbb
ret
jae
push
test
sbb
lds
push
mov
addl
sub
dec
lods
mov
adc
cltd
xor
loopne
add
xchg
sar
jp
movsb
jmp
in
adc
lock
push
jge
stos
cmp
and
lods
out
and
mov
mov
je
mov
cli
push
jp
cmp
xchg
add
movsl
adc
pop
pop
in
push
lret
ficoms
xchg
mov
push
mov
in
lahf
mov
sub
jne
js
in
dec
adc
mov
jns
stos
ljmp
outsb
cmp
push
scas
push
cmc
cmp
mov
fsubl
mov
es
test
mov
xor
jl
add
jae
jmp
push
icebp
mov
into
fnclex
scas
or
idiv
das
xor
jp
shll
pop
daa
or
dec
aam
and
out
mov
sbb
pop
in
or
test
and
sbb
aam
push
and
movsb
pop
lcall
dec
and
inc
dec
aas
inc
and
daa
cld
sbb
mov
addr16
loopne
mov
mov
cmp
sbb
inc
adc
clc
leave
and
lahf
pop
outsb
jae
popf
sti
dec
jge
sbb
mov
push
in
mov
mov
inc
xchg
ljmp
push
imul
cmp
call
mov
or
add
push
lods
insb
mov
add
and
adc
iret
xor
lds
clc
leave
hlt
xor
mov
in
jge
xor
sbb
mov
xor
jno
pop
js
jg
inc
jns
and
mov
pop
ret
and
jns
stos
lcall
push
jmp
cmpsl
jb
loopne
xchg
xchg
jecxz
inc
xor
mov
pop
dec
jne
fs
std
ljmp
fdivr
add
adc
dec
into
dec
pop
das
fildl
or
jmp
sub
push
jl
imul
mov
mov
jo
ljmp
scas
ret
push
divl
iret
cmp
rorl
dec
cld
in
push
nop
jmp
add
jb
in
pop
jae
xchg
cmpsb
test
imul
std
sbb
ss
and
mov
mov
xor
addl
popa
nop
inc
mov
dec
je
mov
mov
pop
jb
shll
jg
mov
push
jb
dec
xchg
xchg
test
inc
imul
mov
mov
ss
or
repnz
pusha
leave
add
pop
arpl
mov
into
inc
inc
or
movl
test
popa
xor
xor
dec
cmp
std
add
movsl
push
fldenv
aas
fwait
push
xor
sti
call
sub
pop
fists
jno
dec
jge
sbb
test
fists
mov
jae
repz
ja
and
shll
pop
add
lock
icebp
and
push
cli
ret
popf
rorw
push
xor
iret
cmp
rorl
clc
push
xor
push
add
lods
shrl
mov
pop
repnz
ss
mov
outsb
gs
nop
jo
mov
ret
subl
adc
pop
inc
mov
and
dec
adc
mov
inc
lret
push
loopne
int
hlt
stos
cmp
mov
jne
lea
cmp
push
xchg
add
gs
mov
pop
movsb
shufps
pop
pop
pop
inc
fisttpll
mov
jb
inc
out
xchg
add
pop
stos
stos
xorb
aaa
xchg
fisubs
cmpsl
cwtl
cmpsl
push
in
sbb
mov
or
sbb
in
xlat
inc
xor
sub
enter
and
or
rcll
jp
lret
pusha
shrl
inc
adc
add
cmpsl
cli
mov
adc
and
dec
push
enter
test
lahf
insl
inc
cmpb
push
std
in
jbe
fwait
add
cmpsl
dec
dec
mov
jmp
xor
add
dec
pop
push
dec
cli
adc
fildll
or
jb
cmpsl
lcall
fldcw
clc
lock
call
pop
or
mov
dec
sbb
aam
mov
push
repz
xchg
push
lea
popa
test
das
sub
js
mov
loope
mov
sub
fwait
repz
fisttpl
mov
fldenv
sub
leave
push
aad
test
xchg
cmp
dec
push
fcompl
outsb
lock
inc
cld
mov
push
mov
iret
mov
xchg
adc
test
cmpsb
loope
jp
lret
jno
cli
push
scas
je
push
pop
push
lods
xlat
mov
rcrb
xor
sbb
fidivs
std
out
add
in
pusha
cmpsl
jp
inc
pop
and
xchg
imul
mov
mov
cs
mov
push
stos
test
xchg
lcall
cmp
and
mov
sbb
pop
jno
sbb
or
push
push
xchg
xchg
hlt
aas
mov
rcl
and
roll
loop
pop
inc
cmp
mov
js
mov
mov
out
pop
into
mov
ffree
mov
and
pop
add
or
and
adc
mov
and
fists
add
add
adc
add
imul
add
add
add
adc
add
cltd
cmp
cmp
cmp
cmp
cmp
