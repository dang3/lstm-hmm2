mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
push
mov
mov
mov
mov
push
push
mov
add
push
lea
push
lea
push
mov
call
add
push
push
push
call
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
pushl
lea
push
push
mov
call
add
mov
xor
add
add
decl
jne
addl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
mov
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
mov
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
lea
sub
push
push
push
lea
push
lea
push
mov
mov
movb
movb
call
pop
pop
test
je
mov
xor
mov
cmp
je
mov
jmp
push
mov
call
mov
mov
mov
push
sub
mov
call
push
call
lea
push
push
push
pushl
call
push
lea
push
push
pushl
mov
call
push
lea
push
push
mov
mov
call
push
lea
push
push
call
add
xor
mov
push
lea
push
mov
push
mov
call
lea
push
lea
push
call
pop
pop
cmp
je
cmpl
jne
mov
call
cmp
jne
push
push
push
push
mov
call
lea
mov
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
mov
pushl
mov
pushl
mov
mov
push
pushl
call
jmp
xor
pop
pop
pop
add
leave
ret
push
mov
sub
push
push
push
push
lea
push
lea
push
xor
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
add
lea
push
mov
call
push
lea
push
push
mov
call
add
mov
push
mov
call
push
push
lea
push
push
mov
mov
call
mov
cmp
jne
push
call
push
pushl
push
pushl
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
lea
push
push
call
push
push
push
push
call
push
mov
call
pop
pop
xor
pop
leave
ret
repnz
add
add
push
sbb
add
push
mov
mov
pop
sbb
jb
mov
push
mov
out
bnd
lds
lret
or
sbb
inc
ret
dec
pop
iret
mov
hlt
daa
mov
int
mov
adc
outsl
lods
dec
mov
jo
inc
ss
cmp
push
mov
xor
insb
mov
inc
dec
shll
cmp
nop
mov
in
and
sbb
test
shll
stos
xchg
rolb
cltd
insl
or
arpl
mov
stos
sub
mov
push
mov
jne
pushf
and
scas
and
cmp
or
xchg
jle
icebp
cs
in
loopne
ja
out
dec
imul
out
jb
mov
xchg
sub
dec
jae
xor
pop
insl
inc
je
test
in
std
data16
jae
add
mov
inc
and
mov
fimull
sub
cld
jnp
push
faddl
mov
cmp
pop
xor
inc
enter
movsb
fcos
push
in
lods
pop
test
lock
xor
inc
push
lds
adc
popa
adcb
mov
jb
pop
xchg
sbb
out
add
test
lock
fldcw
cwtl
out
out
jne
sub
popa
pop
sbb
sbb
repz
pop
je
jnp
clc
daa
jmp
push
jecxz
pop
shr
insb
mov
sub
cmc
incl
pop
imul
arpl
test
roll
mov
mov
daa
cld
or
or
inc
ds
ljmp
adc
scas
ja
add
cltd
or
movsw
jg
bswap
push
lock
sbb
xchg
jmp
add
idivb
inc
orb
push
mov
push
push
xchg
leave
mov
out
cs
add
fidivs
xor
es
sbb
or
in
push
dec
xlat
pop
mov
out
fimuls
xlat
pop
and
jbe
jae
out
inc
mov
std
mov
lds
push
dec
mov
test
sbb
inc
or
mov
push
mov
dec
sbb
or
jp
outsb
xchg
pop
add
mov
add
push
ds
test
sti
aam
les
or
sar
fcompl
in
xchg
mov
xchg
adc
decb
out
xchg
sbb
add
and
sub
repz
jl
pop
pop
les
mov
pop
inc
mov
or
fst
data16
mov
mov
mov
or
insl
leave
mov
aaa
dec
arpl
push
push
inc
mov
adc
stos
popf
subb
dec
cmpsl
adc
dec
in
sbb
xor
jbe
or
ror
cwtl
push
mov
add
dec
mov
imul
ds
fwait
push
cmp
sbb
ds
ficoml
movsl
int3
lcall
lahf
fbld
sti
xchg
dec
aas
cmp
push
fisttps
mov
pop
decl
mov
cmc
mov
mov
jbe
fisubl
mov
ficoms
cmp
aas
dec
sbb
xchg
pop
mov
xor
sub
loop
mov
icebp
cmp
mov
sbb
in
jo
sub
jp
adc
xchg
pop
jns
jl
mov
out
ror
fdivl
jne
fsubrl
jecxz
repnz
push
in
pop
aad
add
or
je
imul
pop
xchg
pop
xor
mov
xor
test
xchg
fs
mov
mov
ja
mov
cmp
sub
sbb
cmp
sbb
arpl
lods
fildl
retw
xchg
adc
jmp
sub
aaa
dec
popa
lcall
cmc
ds
push
or
push
dec
aam
adc
movsb
das
adc
jb
lods
aam
dec
xor
push
out
adc
cmp
mov
outsb
stos
or
pop
into
push
push
ret
add
loopne
cwtl
adc
jecxz
mov
dec
dec
cmp
sbb
sbb
mov
pusha
test
out
lods
sbb
insl
outsl
es
mov
add
inc
cmp
sahf
clc
shrw
xchg
fwait
mov
in
push
sbb
fadds
mov
pop
imul
mov
cmp
adcl
mov
bound
arpl
mov
loopne
inc
sbb
pop
roll
sub
out
dec
enter
call
and
lret
add
sarb
pop
movsb
in
in
or
jg
addl
icebp
aas
or
repnz
ljmp
enter
dec
aas
push
mov
sbb
in
or
leave
aad
inc
push
mov
mov
repnz
repnz
iret
add
fldenv
sbb
out
in
pop
or
adc
xor
pop
test
jl
xor
rcl
mov
loop
frstor
mov
pop
add
rol
adcb
dec
mov
push
sti
and
cmpsb
adc
or
adc
add
or
ret
jbe
lret
adc
ljmp
into
je
push
cmc
or
pop
dec
scas
ret
xchg
push
daa
lea
or
out
mov
bound
mov
and
fiadds
mov
jmp
or
sahf
rcll
adc
in
push
and
pushf
insl
or
popa
sbb
mov
repnz
dec
adcb
and
push
ljmp
adc
sub
fs
ss
adc
sub
es
sub
inc
xchg
cwtl
xchg
jne
jp
fistpll
push
dec
or
push
or
pop
lahf
addr16
hlt
xchg
cmpsl
or
inc
adc
jns
inc
sbb
add
lahf
imul
xchg
pop
shlb
enter
sbb
out
popa
vrcpps
push
xor
inc
mov
scas
ret
push
test
and
aaa
cmpsb
xor
or
std
sbb
ss
adc
add
push
ss
fmuls
adc
int3
push
negb
imul
push
sub
cltd
cmp
lods
jb
push
jecxz
mov
sub
jns
xchg
jmp
mov
iret
int
cmp
add
pop
jmp
and
outsl
sub
cmp
scas
mov
jb
pop
movsb
out
roll
xor
mov
mov
xlat
jmp
sub
xor
and
test
push
dec
mov
push
xor
xchg
jp
push
movsl
aam
fsubrp
pminub
test
ret
out
aas
adc
sahf
push
rcll
pop
ret
sbb
fidivrl
mov
aas
cwtl
jmp
dec
js
loopne
neg
mov
sub
inc
dec
test
jbe
push
shrl
fisttpl
pop
ljmp
mov
repz
int3
sbb
sub
mov
xor
mov
dec
repnz
xor
pop
cmp
push
add
lcall
rol
add
mov
stos
push
dec
pop
mov
push
push
fmul
loopne
mov
lret
jne
and
mov
loop
mov
sub
mov
jbe
lret
lock
pop
mov
xchg
cmp
fsubr
push
cmp
xchg
clc
dec
das
dec
lret
add
mov
xchg
clc
push
mov
mov
push
push
mov
lea
mov
fcmovne
dec
mov
das
or
popf
bound
clc
loope
xchg
adc
dec
into
jp
jnp
fidivs
incb
sbb
mov
clc
les
or
xchg
cmp
stos
sti
movups
push
sub
xor
aad
or
mov
lock
add
cmpsb
orl
xchg
pop
stos
pop
sahf
insb
scas
push
lret
push
popf
in
push
sbb
adc
and
mov
gs
xchg
movsl
js
int3
fiaddl
cmp
sbb
sub
sub
sbb
mov
movsl
cltd
xor
push
push
jbe
iret
fdivrl
and
fadds
add
xor
lods
inc
xor
adc
cld
fdivrl
arpl
sub
pusha
or
cmp
inc
lods
aam
fs
cmp
setns
pusha
insb
mov
out
sub
jns
stos
nop
lcall
xchg
rol
pushf
scas
mov
mov
movsb
sub
xor
clc
or
lret
cmpsb
icebp
fidivrs
sbb
xchg
and
mov
inc
push
sbb
and
dec
or
out
lds
cmp
lcall
cmpsb
cmp
andb
pop
mov
xor
loopne
cmc
xor
xchg
xchg
and
cmpsb
pop
cmp
neg
and
push
sbb
mov
inc
hlt
fwait
push
mov
es
cltd
inc
mov
add
push
repnz
aas
pop
movsl
sub
fldt
movsb
adc
or
adc
stos
int3
xchg
lahf
rcll
icebp
mov
sti
fnsave
ljmp
std
pop
jmp
jo
push
inc
jo
les
dec
lods
scas
pop
or
add
xchg
xchg
xchg
dec
pop
jb
pop
adc
aam
jno
mov
adc
je
mov
mov
lahf
push
in
xlat
xchg
sbb
dec
fwait
arpl
gs
into
lea
or
cmp
sbb
push
or
fistpl
test
push
out
lcall
icebp
cmp
sbb
jmp
fdivrl
xchg
adc
call
xchg
aad
inc
loope
inc
loope
cs
stos
in
or
sub
loop
lret
pop
cmp
ja
imul
xchg
pop
ffree
mov
mov
jbe
push
sbb
fcmovnu
rorb
imul
pop
mov
adc
test
outsb
or
mov
xchg
roll
cld
mov
and
mov
or
sarl
push
jae
jb
mulps
out
push
mov
js
push
test
sbb
out
dec
pushf
cmc
mov
cltd
adc
cld
in
ss
or
int
scas
jb
sub
fiaddl
sahf
push
ficompl
adc
mov
xchg
mov
xchg
or
jecxz
lahf
inc
ret
out
mov
ss
fsubrl
insb
mov
mov
dec
sbb
jp,pn
aam
pusha
repz
mov
dec
ljmp
add
mov
sub
dec
or
sti
add
mov
rorb
stos
int
mov
cmp
ficompl
jp,pt
das
repz
sbb
int3
lahf
insb
xor
stc
je
jle
mov
and
pop
jb
shl
dec
push
shrb
movsl
pop
aaa
movsb
xchg
sub
mov
jp
push
movsb
push
psubusb
mov
pop
mov
arpl
pop
inc
scas
shlb
mov
jns
inc
push
sub
outsb
xlat
arpl
xchg
cmp
movsl
push
je
push
pusha
fbld
and
xor
mov
jmp
push
jp,pt
ret
mov
stos
push
inc
mov
outsb
mov
mov
adc
inc
lods
sbb
lea
push
mov
inc
mov
ret
lods
loope
mov
xorb
in
repnz
jbe
je
out
pop
push
and
cltd
enter
jle
mov
popf
push
pop
adc
push
shll
fildll
dec
in
xor
sub
aas
mov
mov
xchg
jnp
add
push
or
test
shll
add
addr16
bndldx
neg
add
inc
jbe
outsb
adc
repnz
inc
stos
xor
insb
stos
mov
scas
mov
lds
iret
xchg
cld
addl
fcomps
mov
ss
iret
scas
jnp
fistpl
lock
xchg
das
loope
cmpsl
ret
sbb
jl
push
enter
xchg
pop
push
xor
das
lods
test
xor
insb
xchg
imul
pop
mov
mov
icebp
and
adc
cmp
push
mov
add
adc
mov
mov
ss
pusha
addb
add
ret
adc
jo
aaa
shufps
lahf
fmull
std
test
and
call
inc
mov
in
add
divb
insl
pop
push
sbb
roll
pop
pop
sub
iret
lret
mov
mov
dec
or
jne
mov
mov
inc
cmp
scas
inc
adc
push
les
data16
stc
mov
dec
ss
repz
pop
mov
jcxz
xor
inc
pushf
xchg
and
xor
pop
imul
into
xchg
iret
std
repz
mov
sub
mov
cltd
mov
xor
and
bnd
jge
mov
adcl
into
outsb
pusha
and
mov
inc
js
cmpsl
fs
xor
sub
mov
loopne
repz
pop
jecxz
xchg
insb
mov
imul
je
mov
fnstcw
mov
in
add
cmp
insb
add
loope
mov
sub
or
pop
push
fs
popf
ds
int3
xchg
jge
sub
sbb
jg
es
cwtl
rdpmc
or
mov
fistpll
and
or
icebp
lock
cmp
lea
sub
mov
mov
or
int3
divl
loopne
pop
test
and
push
movsb
xor
xor
icebp
and
xchg
std
cmp
jae
mov
jnp
lret
or
shll
mov
dec
pop
iret
add
aad
mov
movsl
inc
cmc
into
cli
lds
inc
inc
mov
movsb
push
xchg
mov
jbe
outsb
push
or
pmaxub
je
push
push
sub
fnstcw
mov
or
cmp
cmc
add
les
aaa
pushf
les
pop
icebp
inc
push
jbe
cmc
aas
mov
jb
mulb
lods
mov
pushl
sbb
push
jle
push
mov
push
and
sbb
sub
lds
imul
sti
cmp
or
push
jmp
add
dec
out
dec
test
pop
cvttps2pi
add
pop
fists
xor
pusha
mov
iret
inc
inc
push
je
das
sub
leave
fisttpll
lret
jae
in
push
in
icebp
outsb
pop
inc
pop
mov
push
and
fbstp
pop
ret
push
push
mov
or
dec
cmpsl
test
insl
sarl
inc
cmp
cltd
out
pop
inc
cmpl
cwtl
and
aas
hlt
imul
mov
xchg
adc
imul
rclb
mov
dec
test
or
and
push
sbb
and
aad
pop
pop
dec
enter
stos
inc
popa
sbb
les
push
inc
aad
outsl
jae
dec
inc
stos
je
lcall
jo
stos
fiaddl
xchg
iret
std
mov
cmp
add
test
jo
add
ret
loop
mov
mov
mov
outsl
cmpsl
std
mov
sub
out
sti
repnz
mov
mov
test
test
add
push
pusha
iret
inc
cltd
inc
lods
test
cmc
lods
add
frstor
mov
outsb
int3
icebp
pop
xchg
dec
roll
arpl
mov
push
sbb
adcl
pop
test
jle
mov
add
adc
aas
aad
mov
cmp
out
aad
inc
push
xchg
mov
lods
jg
insl
sbb
push
xor
inc
xor
xor
stos
xchg
dec
xor
add
or
sub
loop
xchg
mov
dec
fistl
in
xor
xor
cmpsb
add
dec
mov
sub
test
hlt
cld
sub
or
xlat
je
cwtl
cli
mov
enter
or
mov
cmp
insl
out
cltd
ja
test
rorb
pusha
pop
sahf
pop
movsb
idiv
sbb
enter
outsb
js
or
hlt
fdivrs
mov
btr
cmp
ror
imul
mov
pop
jae
inc
push
stos
mov
in
mov
out
cld
and
mov
roll
sarl
stos
js
cltd
ds
jns
filds
sub
mov
mov
jp
int
mov
cmpb
jnp
aad
dec
lods
adc
sbb
lods
or
int3
jge
pop
lock
fnstenv
and
cmpb
repnz
mov
mov
dec
jecxz
push
into
jmp
dec
cmp
fwait
adc
dec
insl
jae
adc
or
aaa
xchg
loop
cmp
push
mov
out
fsubrs
insl
outsl
jge
aaa
out
fwait
jno
cld
fs
std
test
addr16
fmul
loop
icebp
jg
push
neg
std
jb
imul
out
cmc
mov
not
dec
xchg
pop
repnz
mov
xor
popaw
cmp
cmpsl
imul
fwait
sub
dec
sbbl
rclb
addr16
jno
daa
jno
xchg
jge
fidivrs
mov
es
pop
adc
xor
leave
icebp
icebp
or
arpl
lods
add
push
cwtl
mov
call
dec
repz
cwtl
hlt
jge
loope
stc
inc
jne
cmpsl
out
in
add
mov
cmpsl
jae
das
cmp
dec
dec
in
jmp
dec
fmul
adc
jl
shll
push
mov
add
aad
mov
or
clc
imul
ljmp
pop
cld
cmpsb
mov
shl
lods
popa
xchg
out
jg,pn
mov
or
pop
jge
pop
inc
icebp
mov
ret
repnz
les
std
and
xor
in
roll
push
mov
adc
inc
test
inc
mov
dec
pushf
ja
sub
test
leave
mov
in
insl
imul
xchg
sbb
adcl
stos
mov
pop
adc
push
sbb
push
mov
xchg
icebp
xor
adc
outsb
adc
ret
jmp
mov
sub
ljmp
and
in
xchg
data16
es
cmpsl
enter
mov
sbb
ss
fistpl
nop
mov
les
enter
cs
sar
into
dec
in
lods
push
mov
add
and
inc
call
push
gs
xlat
mov
or
cs
divb
adc
fidivrs
stos
aam
cmpsl
jnp
xor
jo
xor
push
mov
sbb
pop
int3
aaa
out
movsl
pop
mov
or
push
add
iret
daa
mov
aad
jnp
pop
jbe
data16
dec
add
ret
jno
xor
fcoms
pop
test
mov
push
movsb
xchg
dec
push
daa
push
cli
stos
pop
mov
shrb
mov
mov
adc
shlb
mov
mov
xchg
push
pushf
mov
push
inc
adc
xchg
shll
mov
push
pop
sbb
shl
jno
adc
jl
dec
sti
scas
mov
out
xchg
loopne
xor
icebp
jmp
xchg
pop
mov
lahf
aas
sbbl
push
out
aaa
or
mov
jle
jg
jp
shl
jge
pop
sar
imul
pop
mov
jne
sbb
mov
imul
cltd
or
mov
mov
jns
mov
pop
mov
cmp
loop
or
jae
mov
out
lods
es
sbb
mov
mov
push
rcll
jno
loop
in
inc
ret
pop
pop
sti
scas
xorl
sub
jp
inc
lret
adc
sbb
lock
mov
cmc
into
jb
mov
les
or
or
inc
cmp
xchg
cmpsl
pop
sti
loopne
cmp
lcall
adc
jecxz
jle
push
fistps
jnp
cmp
mov
testb
dec
negb
dec
fldl
jecxz
mov
popa
ja
lret
fidivrs
jp
and
in
rcrb
fisubl
jne
cmc
test
in
inc
and
shrb
add
jns
sbb
push
lcall
sbb
and
jp
popf
add
pop
sub
jne
mov
adc
adc
dec
xchg
jp
mov
hlt
rcrl
lcall
push
outsb
xchg
jae
inc
pop
push
adc
roll
xchg
push
mov
adc
add
in
inc
jg
lret
pop
outsb
pop
fst
and
cmpsb
and
and
mov
bound
pop
xchg
lods
mov
stos
and
sarb
or
xorb
mov
push
or
add
or
cmpsb
jbe
xor
mov
or
dec
cltd
or
mov
pop
sub
inc
push
xchg
or
xchg
lock
loopne
out
mov
mov
sbb
leave
loopne
add
lcall
mov
jb
movsl
jge
outsl
mov
pop
loop
outsb
add
lock
cmp
imul
mov
es
mov
mov
jne
mov
sbb
sub
xchg
dec
push
inc
fists
mov
dec
repz
jle
pop
stos
stos
cmc
push
roll
sbb
rclb
int3
popf
mov
out
sub
push
lret
es
sbb
or
test
adc
addr16
adc
popf
mov
inc
xor
and
orl
pop
inc
jns
daa
cmpsb
fsub
sarb
aaa
aam
adc
loop
sbb
mov
dec
add
pop
lret
aaa
add
xor
sub
dec
dec
or
lds
loopne
jmp
mov
and
loopne
push
cmp
sub
jp
or
sbb
sahf
mov
jnp
ljmp
pop
stos
mov
or
add
dec
mov
jp
in
and
jp
fstps
mov
nop
ficoml
dec
dec
cmp
aaa
jecxz
pop
cmp
out
js
push
adc
push
inc
dec
cmpl
add
pushw
mov
ja
inc
addr16
jno,pn
test
imul
daa
mov
les
outsb
push
pop
xorb
iret
jg
adc
inc
ljmp
das
repz
data16
mov
push
jbe
test
adc
test
push
sbb
repnz
in
in
sub
mov
dec
insl
sbb
jo
sahf
xchg
mov
dec
je
jecxz
aam
mov
scas
call
push
xchg
push
mov
push
jbe
xchg
or
lds
jne
sub
lock
and
outsl
ds
inc
fldenv
lods
and
dec
out
into
jno
daa
icebp
adc
std
push
cwtl
add
cmp
sbb
loope
loope
or
add
test
sub
xlat
inc
mov
push
mov
mov
inc
push
xor
test
add
or
pop
idivb
push
ret
shrl
push
xchg
pusha
cltd
loopne
stos
or
lcall
cmpb
xchg
pop
nop
xchg
add
push
iret
imul
lahf
mov
popa
mov
cwtl
test
cmpsl
das
frstor
inc
or
aad
dec
dec
loope
jecxz
rol
imul
and
lock
je
sub
sbb
dec
bound
push
popf
xchg
add
sub
mov
xor
mov
repnz
bound
imul
or
ss
inc
mov
pop
loopne
mov
