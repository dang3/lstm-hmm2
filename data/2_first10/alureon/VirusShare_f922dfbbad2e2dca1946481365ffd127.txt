shlb
cld
and
jge
call
adc
or
arpl
push
daa
popf
std
leave
lods
cmp
and
adc
loopne
out
xor
mov
jb
or
lret
push
push
push
cli
jge
je
jge
nop
jl
mov
pop
cmp
ljmp
mov
in
aas
mov
call
jno
or
dec
imul
xchg
cld
pop
mov
or
sub
out
scas
data16
mov
xor
xchg
dec
mov
fidivl
test
orl
repz
inc
test
mov
mov
push
negb
in
insl
stos
cltd
add
test
mov
jns
ljmp
inc
jge
jno
xor
add
mov
inc
inc
pop
inc
jno
mov
mov
fnstsw
jbe
enter
push
loop
nop
mov
push
out
sbb
lahf
aam
pop
xor
pop
and
push
mov
jmp
sbb
add
into
mov
inc
jne
in
sbb
cwtl
insb
jecxz
lds
dec
sbbb
pop
leave
jmp
mov
jl
fmull
jle
aam
insl
data16
pop
out
pop
or
pop
lock
adc
movsb
xor
cmp
movl
test
out
stos
loop
scas
add
aam
cs
cld
and
xchg
jno
xchg
sarl
es
aas
das
shlb
rclb
xchg
shll
imul
push
sub
jne
mov
orb
inc
lret
fistps
sbb
aad
add
xor
xchg
sbb
adc
push
mov
les
in
stos
ja
mov
mov
cmpsb
mov
aas
stc
scas
push
inc
movsl
cli
popa
jmp
mov
in
sbb
or
xor
in
mov
lret
jbe
lock
sti
jmp
sbb
and
mov
dec
stos
and
imulb
pop
or
pop
ret
lds
scas
leave
push
mov
adc
pushf
push
mov
jecxz
mov
dec
push
call
fnsave
inc
xor
xchg
xor
jns
arpl
shl
push
stos
push
mov
or
repnz
adc
sub
cmpsl
mov
push
cmpb
icebp
out
xor
dec
leave
lea
pop
adc
add
ret
sbb
xor
dec
std
or
ds
inc
or
and
mov
push
enter
cmp
inc
mov
loop
jle
mov
inc
jecxz
iret
int3
xchg
pusha
ficomps
inc
cmpsl
sub
inc
push
mov
shll
repnz
xchg
ja
scas
sub
shrb
loopne
lds
jae
stc
popa
cs
inc
mov
aas
and
out
sub
gs
push
xchg
loop
je
ficomps
movsl
push
jo
jb
sti
mov
inc
push
xchg
in
dec
push
jl
pop
xchg
xor
or
xchg
pmuludq
stos
aad
sahf
fists
pop
ret
fstl
push
mov
mov
cmp
jne
scas
dec
popf
in
sbb
sbb
sbb
shrl
cmpl
xchg
insl
cmp
out
mov
iret
add
and
lea
pop
jg
fnstenv
add
pop
in
dec
ljmp
mov
lea
jp
mov
lods
call
imul
add
or
sbb
push
and
popf
push
inc
scas
push
xor
mov
lods
pushf
dec
push
adc
mov
loop
push
gs
scas
shl
cli
fsubl
and
sub
cwtl
sahf
aas
cmp
pop
mov
adc
xchg
enter
das
xchg
lcall
adc
sbb
pop
push
dec
mov
sub
loope
pop
pop
adc
sub
add
leave
push
inc
add
imul
aaa
mov
xchg
test
popf
out
fildll
hlt
mov
sbb
sti
push
pop
rcll
ret
insl
mov
aaa
enter
scas
jl
bound
adc
stos
mov
xor
das
cmpsl
mov
push
mov
or
stos
push
je
pop
sbb
inc
cli
xor
into
and
popf
pop
lret
pop
int3
aam
lods
aad
leave
pop
rcrb
push
lret
cmpsb
jge
lods
jne
aad
cld
jnp
jns
cmp
hlt
nop
into
jnp
or
arpl
and
pushf
test
or
cmpsb
inc
hlt
les
sub
xor
sub
rcll
or
lret
and
dec
hlt
mull
xchg
or
pop
add
push
pop
cli
adc
push
pop
add
popa
pop
add
mov
sub
fwait
pop
mov
fsubrs
in
rorl
insb
sub
std
and
cmp
sbb
daa
and
or
add
push
pop
and
mov
sbb
and
iretw
cmp
jnp
mov
fimull
shrl
clc
jmp
into
xchg
test
addr16
lcall
pop
lahf
pop
psubb
cmp
int
push
addb
shl
and
mov
in
jo
inc
push
enter
loop
fisubrl
incb
jecxz
hlt
mov
sti
xchg
jnp
add
shrl
inc
dec
mov
sub
mov
lods
es
mov
or
jno
enter
or
ret
push
push
movsb
pop
mov
mov
inc
js
je,pt
mov
jmp
inc
pop
or
mov
clc
loop
leave
loope
jb
dec
les
in
aas
add
fdivs
lods
mov
push
adc
jae
cmp
xor
ret
push
or
cmpsl
mov
cmp
lret
push
mov
jne
dec
adc
int3
js
cltd
rolb
out
lods
push
cmc
push
lcall
idivb
sbb
sar
xlat
mov
js
mov
call
adc
test
push
sub
push
lcall
iret
mov
faddl
out
add
subl
pop
les
jl
aad
mov
loop
sub
lods
lock
fucom
jg
push
add
adc
or
mov
call
movsbl
inc
call
movzwl
push
inc
call
add
mov
sub
mov
call
add
mov
mov
mov
lea
and
xor
mov
add
and
lea
movzwl
mov
call
dec
add
mov
movzwl
mov
call
inc
movsbl
call
dec
lea
mov
dec
mov
dec
xor
mov
add
pop
lea
mov
add
add
dec
pop
add
lea
pop
movzwl
mov
inc
imul
pop
mov
lea
inc
mov
mov
inc
add
or
pop
inc
or
pop
dec
add
mov
mov
mov
call
lea
mov
add
inc
ret
inc
add
push
mov
add
push
dec
push
add
dec
push
or
add
push
dec
mov
mov
lea
movzbl
push
inc
ret
push
dec
dec
dec
movzwl
mov
inc
push
imul
inc
call
pop
ret
jmp
xor
and
or
add
movzbl
and
lea
xchg
inc
dec
mov
inc
xor
dec
dec
inc
mov
inc
mov
inc
dec
jne
add
mov
imul
movzwl
pop
lea
lea
pop
dec
inc
pop
add
imul
dec
inc
dec
add
xor
dec
inc
mov
imul
add
ret
push
push
imul
sub
push
sub
dec
inc
sub
add
inc
push
mov
mov
lea
mov
push
add
dec
mov
or
mov
imul
xor
push
and
mov
mov
push
add
sub
xor
or
inc
push
imul
mov
push
imul
add
pushl
lea
call
movswl
add
mov
mov
xor
dec
and
mov
dec
pop
ret
dec
cmp
jb
imul
xor
movzbl
xor
mov
and
sub
mov
inc
lea
dec
imul
inc
xor
dec
mov
add
mov
cmp
jb
dec
pop
inc
lea
dec
inc
add
inc
lea
mov
imul
mov
xor
xor
dec
dec
xor
inc
lea
mov
dec
test
jbe
inc
or
mov
lea
sub
inc
lea
add
mov
add
and
inc
and
lea
inc
mov
sub
mov
movzbl
dec
lea
add
add
add
and
mov
mov
mov
dec
mov
mov
add
mov
movzbl
dec
mov
dec
movsbl
lea
add
mov
add
dec
jne
mov
mov
mov
lea
mov
dec
inc
mov
xor
add
inc
mov
lea
inc
sub
mov
imul
dec
mov
dec
mov
imul
mov
test
jbe
mov
inc
lea
movzwl
xor
mov
dec
add
add
sub
add
mov
inc
inc
inc
inc
mov
inc
mov
mov
add
add
and
xor
add
mov
imul
and
movzbl
lea
add
add
sub
inc
and
sub
or
mov
dec
lea
movzbl
dec
add
mov
mov
inc
mov
mov
inc
movzbl
mov
inc
add
lea
jmp
push
mov
inc
inc
dec
add
mov
add
add
add
imul
mov
movsbl
movzwl
add
inc
lea
inc
or
lea
mov
mov
dec
add
imul
inc
imul
and
imul
mov
inc
mov
xor
mov
inc
inc
lea
mov
dec
sub
cmp
je
imul
mov
add
push
mov
call
call
dec
mov
call
call
lea
sub
add
add
imul
inc
add
ret
inc
imul
pop
imul
ret
push
dec
inc
xor
add
xor
push
inc
dec
push
inc
push
mov
push
lea
movzbl
mov
movzwl
add
call
dec
push
mov
or
xor
imul
sub
mov
neg
dec
mov
dec
mov
inc
dec
mov
mov
movzwl
mov
mov
inc
inc
mov
and
dec
je
imul
mov
inc
mov
mov
add
mov
mov
imul
dec
dec
repnz
add
dec
add
sub
jmp
inc
lea
lea
add
or
inc
inc
mov
jmp
lea
mov
inc
inc
imul
add
lea
add
pop
pop
ret
push
and
movsbl
inc
movzbl
add
lea
and
lea
lea
inc
lea
inc
sub
movswl
add
movswl
lea
mov
xor
sub
lea
lea
dec
dec
mov
lea
and
pop
ret
sub
inc
mov
imul
movzwl
mov
dec
dec
mov
sub
imul
mov
movzwl
dec
xor
add
lea
mov
and
lea
inc
dec
add
mov
mov
imul
mov
cmp
jb
inc
push
inc
mov
push
mov
inc
push
mov
mov
xor
mov
dec
xor
lea
inc
xor
sub
mov
push
mov
dec
mov
lea
imul
xor
lea
add
mov
add
imul
mov
xor
add
movzbl
dec
inc
lea
lea
add
or
sub
add
add
dec
movzbl
lea
inc
lea
sub
lea
dec
inc
mov
dec
mov
inc
xor
sub
movswl
jmp
lods
call
stos
pop
lcall
mov
push
imulb
in
cs
mov
push
cmc
or
call
std
jp
iret
xor
les
dec
int
fstps
lods
jl
mov
xchg
sbb
xor
int
movsl
lds
mov
fidivrs
push
fldenv
xor
mov
enter
js
clc
ret
rcl
sbb
sbb
fcmovne
dec
hlt
sbb
lahf
loope
outsb
sahf
stos
push
std
push
mov
std
pop
xor
jg
aaa
aaa
scas
popf
xchg
pop
cs
stc
push
mov
popf
cmp
bound
mov
divb
lods
scas
lret
pushf
sarl
test
fcoms
or
dec
mov
push
or
sub
out
cmp
push
testb
adc
sub
fwait
mov
adc
dec
ljmp
repz
aaa
push
mov
aaa
in
in
cmpsb
jns
xchg
mov
frstor
push
mov
dec
mov
out
loope
dec
push
repz
push
hlt
clc
and
cmpsl
sub
jno
or
imul
push
ja
ja
mov
data16
lcall
push
stos
rol
test
gs
xchg
and
js
pop
inc
int
insb
shl
and
mov
in
sbb
adcb
lahf
sbb
insb
ret
dec
int
and
loop
push
jge
lcall
xor
rolb
add
ja
dec
and
test
adc
ja
pop
stos
int3
test
daa
lods
shr
lret
push
and
test
loope
hlt
ficoms
adc
add
test
dec
jl
mov
add
out
fldt
popf
xor
jbe
scas
shrl
int
ss
jg
push
xchg
scas
mov
sti
xor
bt
sarb
loope
inc
dec
mov
divb
cmp
ja
mov
fcmovb
sbb
mov
dec
movsb
mov
fs
pop
rcll
adc
loopne
cmc
pop
add
ja
leave
in
shll
das
jmp
and
jbe
fadd
push
xlat
sarb
or
int3
fwait
cmpsb
aas
add
dec
mov
imull
pusha
rolb
aaa
or
into
inc
add
leave
roll
dec
outsl
in
push
rclb
dec
mov
cwtl
jmp
fisubrl
cmpsl
cs
popa
adc
jns
inc
jle
ja
push
sbb
mov
in
and
mov
loopne
outsb
mov
loope
push
test
xor
mov
sarb
pop
lahf
iret
cmp
out
adc
sub
inc
mov
shll
pop
adcl
sub
mov
push
jns
mov
ss
in
pusha
sub
arpl
sbb
jge
adc
rol
fs
sbb
dec
cltd
test
pop
and
ja
xor
cwtl
and
sbb
in
sahf
adc
lcall
stc
jns
rcrb
and
repz
pushl
xor
lea
mov
rcr
push
pop
je
push
mov
mov
xor
jae
outsl
dec
sbb
imul
mov
sub
cmp
fmuls
mov
scas
add
out
inc
pop
mov
jne
cmc
ror
dec
sub
push
push
adc
xchg
in
sahf
mov
sahf
out
add
mov
aad
ror
cltd
mov
negb
aas
mov
pop
mov
lret
adc
jo
mov
add
in
and
es
and
enter
push
mov
adc
mov
pushf
cwtl
inc
cmc
pop
mov
rcr
scas
cmc
mov
adc
adc
and
add
lcall
jae
dec
mov
clc
insb
ss
mov
data16
jbe
fidivl
cli
xchg
cs
mov
xor
test
pop
adc
xor
mov
push
push
fldl
test
shll
jecxz
test
push
ljmp
push
mov
inc
pop
dec
mov
push
fsubl
call
sub
adc
pop
popf
adc
pop
mov
adc
in
jg
mov
cs
jecxz
mov
test
sub
inc
pop
mov
pusha
jae
mov
sbb
cmp
mov
orl
es
cmp
stc
add
push
cmp
outsl
sahf
movsb
xlat
dec
in
repz
xlat
les
and
pushf
pop
inc
inc
mov
movsb
ret
dec
sub
mov
movsb
test
imul
cmp
xchg
scas
fisttpll
push
js
xor
cs
jmp
frstpm(287
xchg
into
mov
inc
push
mov
adc
jb
in
xchg
pop
cmp
adc
cmp
push
cld
lcall
mov
repnz
jge
cmp
lds
jg
xchg
inc
mov
push
xchg
jnp
in
mov
mov
pop
jb
or
insl
or
movsb
add
negl
rorl
mov
jmp
lcall
jmp
jne
jo
pop
push
add
inc
jnp
jbe
inc
push
adc
mov
inc
mov
adc
hlt
lret
inc
jmp
jnp
push
fmul
add
push
ror
or
mov
xchg
cmp
mov
subb
mov
add
outsb
enter
mov
add
inc
cmp
stc
insb
dec
or
or
andb
ljmp
inc
cmp
stc
daa
das
cmpsl
mov
aad
in
or
ret
inc
xchg
fildl
mov
bound
nop
push
mov
inc
nop
pop
add
jno
mov
jp
ss
andb
leave
cmpsl
sahf
aaa
outsb
mov
in
cmp
lcall
loopne
inc
inc
out
out
xchg
loope
mov
jbe
add
push
xorb
inc
mov
jmp
cmp
sbb
pop
mov
lahf
jecxz
stos
cmp
repz
add
mov
pop
mov
push
add
lahf
call
dec
rdpmc
outsl
in
stos
inc
add
push
push
test
push
dec
bound
fs
xchg
std
inc
call
dec
and
pop
stos
mov
in
out
sub
stos
imul
out
ret
pushf
or
loop
fstps
cmc
data16
xlat
mov
xlat
clc
inc
xchg
js
pusha
inc
lsl
stos
adc
pop
or
dec
cmc
jbe
ret
jl
shlb
adc
pop
loop
negb
xchg
test
ficompl
xor
xchg
sbb
outsl
cwtl
jl
adc
mov
out
mov
mov
in
popf
sub
ds
ja
push
out
pop
push
insl
in
repnz
aad
jae
testl
mov
and
sub
std
fdivrl
mov
fcompl
fwait
mov
popa
or
pop
add
das
xor
xor
mov
bound
rol
loope
or
and
add
and
or
sbb
loopne
aad
out
cmp
test
mov
sarl
test
or
lds
jne
lahf
shll
xchg
xor
fnstcw
das
mov
push
daa
les
ret
in
cmpsb
ret
jo
sub
adc
xor
jae
mov
push
fnstenv
ljmp
daa
sub
xchg
pop
sbb
std
les
loope
orb
mov
xor
push
dec
or
jnp
jle
sarl
push
adcb
push
inc
adc
xchg
mov
mov
pop
dec
daa
jmp
cli
pop
std
xchg
push
subl
xchg
push
or
add
jg
movsb
aas
int3
pop
nop
je
aas
fisubl
mov
add
lods
adcb
jmp
mov
jecxz
aam
cmp
into
icebp
fs
stos
inc
jno
das
rcl
push
push
inc
repz
adc
icebp
dec
pop
pop
lret
add
ja
mov
pop
push
arpl
xor
jbe
repz
inc
fistpl
out
fisubs
inc
adc
adc
jae
imul
push
jg
sub
mov
inc
orb
mov
stc
cmpl
dec
or
das
mov
pop
lods
loop
xor
xchg
testl
pop
lret
mov
push
xor
xor
mov
or
sub
imul
xor
xor
mov
add
mov
xor
dec
rorl
xchg
jmp
jl
or
es
sbb
mov
xor
orl
cli
xor
push
dec
jb
lcall
lret
cmp
loop
insb
mov
add
xchg
pop
pop
stos
mov
imul
sub
cmp
mov
push
jnp
ret
inc
scas
sub
sub
mov
rcll
xchg
jns
sbb
scas
ret
icebp
inc
sub
adc
jl
js
or
adc
xor
int
xchg
pop
inc
arpl
xor
push
aam
and
mov
cmp
pop
push
adc
sbb
inc
fcomps
push
sub
test
xor
push
pop
pop
pop
enter
mov
shll
ret
mov
mov
jp
jae
rcrl
xchg
cs
push
push
xor
pop
or
adc
cli
jecxz
add
fildll
dec
in
icebp
imul
lcall
sbb
mov
xor
testl
mov
mov
ret
in
cwtl
pop
pxor
call
mov
xchg
push
test
jno
jne
xor
lods
fptan
fwait
and
hlt
xchg
ficoml
xchg
dec
add
push
jno
repnz
xor
sub
cmp
std
stos
int
aas
xor
and
movsl
jb
repz
jecxz
lea
out
lcall
mov
push
pop
dec
pushw
push
je
jno
mov
scas
fucomip
stc
lods
sub
test
xor
adc
cmp
rcr
frstor
cli
jg
out
mov
pop
push
mov
and
mov
mov
mov
cld
jmp
inc
cmp
mov
jmp
jmp
push
sahf
push
scas
out
clc
xchg
cltd
mov
sbb
sub
xor
icebp
std
and
dec
scas
movsl
mov
scas
push
jbe
push
fiaddl
pop
sbb
scas
pop
mov
jl
push
push
std
fcoms
js
xor
cmp
scas
bound
mov
cmpsl
and
fistl
mov
aad
dec
adc
cwtd
push
or
jecxz
and
stos
data16
je
test
repz
leave
aaa
xor
sbb
add
mov
sbb
in
pop
icebp
shl
pop
jl
mov
sbb
cwtl
inc
jne
testl
pop
mov
and
int3
ret
lahf
and
push
cmp
pop
mov
cld
push
imul
xor
cmp
xor
sbb
and
sbb
int3
movsl
push
cmp
dec
xchg
or
xchg
adc
or
stos
scas
jmp
and
aad
xchg
mov
cmc
dec
cmp
mov
or
and
hlt
pop
sub
dec
sub
mov
pop
ficoml
and
out
or
imul
hlt
sub
push
loop
lahf
bnd
mov
jb
popf
lods
bound
das
and
stos
test
dec
pcmpgtd
dec
popf
mov
mov
add
xchg
icebp
lret
dec
sbb
out
cltd
aaa
xor
jne
nop
ss
cli
mov
pop
es
movsb
or
jge
pop
xchg
push
mov
dec
fs
jp
data16
push
pop
cmpl
sub
or
dec
adc
push
inc
xchg
loope
daa
rolb
mov
movsl
movsl
mov
and
int3
popa
adc
push
in
inc
cld
add
dec
mov
add
mov
lock
mov
pop
pushf
adc
or
fdivl
mov
aas
test
cmp
xchg
into
mov
xor
je
mov
cmpsb
push
or
xor
es
xchg
or
iret
shr
js
lods
cmp
sub
scas
std
pop
or
icebp
insb
gs
jb
dec
mov
dec
and
hlt
fs
outsl
lcall
inc
mov
jns
adc
arpl
adc
push
rcr
or
and
js
xchg
xchg
outsl
ljmp
ret
fs
mov
mov
fwait
sbb
mov
pop
push
and
cmp
sub
cbtw
jmp
xchg
push
and
cmp
dec
popf
in
add
xor
jge
cmp
dec
push
xchg
sbb
add
push
mov
jnp
inc
andl
sbb
mov
xchg
ljmp
cld
jg
pop
in
sub
push
jle
mov
loope
cmp
imul
popf
inc
ss
repz
xor
cmp
sub
dec
loop
jbe
aaa
mov
mov
or
rcrl
in
clc
xchg
cmp
into
repz
dec
push
add
lods
jecxz
sub
cmpsb
mov
sar
mov
mov
bound
imul
add
sub
cmp
push
testl
inc
and
push
fimull
or
dec
xor
jne
stos
sbbl
jbe
test
dec
inc
test
xchg
cmp
ds
fiadds
xchg
mov
sbb
lret
arpl
jl
bound
xchg
sub
nop
stos
pop
xlat
mov
loopne
mov
adc
jmp
mov
add
jae
and
out
sbb
scas
aad
cwtl
lods
loope
cmp
cmp
mov
fisubs
fstpt
loop
sub
out
lret
sbb
cmp
icebp
xorl
adc
cmp
cmpsl
pushw
add
xchg
sbb
loop
inc
repnz
ds
jae
xorl
pop
adc
jecxz
mov
add
mov
mov
xchg
sahf
push
sbb
neg
sbb
xlat
lea
push
ror
test
loop,pt
and
and
adc
cmpsl
xchg
xchg
aaa
dec
scas
push
mov
jecxz
sub
add
jb
xchg
subb
push
and
imul
sarl
int3
jne
lods
lock
or
push
jp
push
sbb
mov
add
and
push
jg
sub
sub
adc
out
mov
pop
xchg
push
mov
cmp
aam
jge
int3
or
sbb
fidivrl
out
and
movsl
inc
inc
cs
fbld
adc
mov
ret
outsl
mov
pop
mov
mov
add
es
push
bswap
push
shl
sbb
js
cmp
ret
shl
mov
sahf
fbstp
jge
cld
or
mov
mov
mov
pushf
mov
add
std
mov
aad
push
sub
mov
mov
cmpsl
nop
and
fdivr
jbe
adc
testl
cli
ds
mov
dec
adc
pop
xor
rolb
add
ret
fidivl
in
jbe
mov
shlb
push
shlb
sbb
xchg
cs
fcomps
ss
and
mov
shlb
inc
cmp
into
scas
xchg
imull
inc
sub
pop
mov
sbbb
fwait
stos
xor
int3
and
dec
dec
cwtl
adc
scas
rcll
out
ds
out
pushf
add
call
jmp
jecxz
das
pop
enter
or
xor
shr
xor
cli
cmp
daa
lds
jne
shll
cmpsb
ss
aas
nop
mov
add
mov
adcb
loope
stos
mov
outsb
cmp
fmuls
jmp
out
js
cmpb
and
cmc
xchg
add
lcall
xchg
shlb
ss
dec
push
daa
sub
cwtl
mov
push
xlat
test
imul
pop
adc
mov
xchg
sbb
fsubrl
jl
dec
mov
sub
mov
mov
rcll
xchg
daa
add
adc
jle
sbb
mov
mov
sbb
mov
arpl
imul
repz
outsl
dec
jo
ror
xor
insb
sbb
xchg
insl
out
add
vmovq
pop
pushf
sub
sub
sub
xchg
aad
aaa
add
cmc
xor
addr16
mov
repz
out
sub
int3
pop
and
cmp
fucomi
mov
mov
aam
sbb
jae
aaa
mov
dec
cltd
or
mov
cmp
mov
pop
or
leave
jne,pn
jns
adc
adc
leave
cltd
repz
pop
mov
leave
test
pushf
cmp
insb
imul
or
lret
jno
repnz
pop
jb
sbb
mov
cli
nop
mov
inc
stos
sub
hlt
aad
cmp
dec
cmp
loop
lahf
xchg
idivb
push
mov
jb
out
sub
sbb
push
pop
test
xor
in
cltd
sub
mov
mov
lds
cmpsb
insl
inc
shl
mov
mov
pop
gs
push
ficompl
xchg
in
adc
cmpsb
pop
dec
pop
ret
in
xor
imul
clc
dec
push
or
pusha
scas
int
mov
int
popa
mov
popf
movb
test
cmpsl
mov
mov
andl
jmp
xor
xchg
add
pop
jmp
xchg
push
push
idivl
pop
sbb
out
fnsave
nop
inc
js
jl
jb
int3
lret
bound
mov
test
call
mov
cmpsb
lock
mov
mov
cwtl
aaa
sub
les
jne
rcll
mov
je
rcrl
addr16
pop
xchg
pop
cmpsb
mov
xor
ss
xchg
pop
mov
pop
adc
sti
mov
inc
mov
insl
pop
hlt
jecxz
ss
add
pusha
cwtl
jge
decb
mov
and
pop
jb
mov
ret
in
push
nop
gs
lret
hlt
stos
arpl
add
or
aad
sub
mov
mov
lahf
sbb
xlat
out
arpl
test
inc
push
mov
outsb
pushf
push
mov
jae
or
and
and
std
xorl
in
xlat
xchg
sub
fxch
js
inc
pop
mov
test
inc
loopne
lods
xchg
push
sbb
addr16
fwait
cmc
jp
dec
pop
ret
jo
mov
jge
mov
sub
sub
xchg
pop
and
pop
cs
arpl
test
std
call
jecxz
inc
jge
and
pop
mov
push
nop
lahf
adc
or
and
and
xor
add
jmp
xor
fbstp
adc
add
jno
fwait
cmp
loopne
fwait
lret
sbb
cmp
pop
mov
cmp
pusha
stc
xchg
mov
bound
in
or
mov
pop
mov
xchg
cmp
xchg
pop
fmuls
sub
mov
jmp
cmpsl
pusha
mov
clc
pop
mov
push
mov
add
cs
lahf
mov
test
pushf
push
ja
sbb
or
aam
jl
xor
dec
enter
mov
push
xor
jmp
dec
fwait
scas
lods
pop
enter
xchg
stos
ss
push
es
lods
lds
scas
jl
ret
push
adc
and
out
hlt
stc
xchg
cmp
int3
fwait
xlat
mov
push
out
xchg
cmp
loopne
and
movb
mov
std
mov
ljmp
pop
inc
pop
lret
out
sahf
mov
jne
movsl
xor
sbb
popa
mov
fcoms
dec
and
inc
jge
lahf
sub
mov
aam
ljmp
dec
fmul
push
mov
mov
jo
imul
adc
xchg
scas
cmp
aad
mov
in
mov
pop
repz
jl
pop
sbb
nop
aam
test
jae
rolb
rorl
add
and
xor
xor
jp
insl
lret
js
rol
mov
ficompl
icebp
mov
fcmovne
or
adc
in
js
mov
xchg
fs
mov
movsb
mov
cmp
test
fdivrl
mov
ljmp
clc
xchg
lea
xchg
xchg
add
mov
int3
xchg
int
xchg
jge
or
in
fwait
mov
inc
lods
push
and
fidivs
fwait
lahf
mov
mov
pop
xor
adcb
rcrl
dec
add
fnstcw
pop
xchg
adc
adc
movsb
jp
mov
xchg
imul
sub
pushf
pop
or
scas
fnstcw
mov
mov
test
movsb
and
fiadds
call
arpl
xchg
xchg
push
aam
adc
stc
pop
xor
les
pop
into
inc
and
lods
iret
inc
nop
stc
xchg
mov
cmp
lea
int
sbb
add
xchg
xlat
mov
mov
icebp
adc
push
push
jmp
lahf
sar
daa
xor
sbb
cmp
cmpsb
fs
rorb
sub
ljmp
pop
sarl
lcall
inc
imul
scas
or
aas
ret
stc
sbb
clc
dec
fimuls
movsb
sub
sub
cmp
mov
sub
cmp
sbbl
pop
in
lcall
out
jns
sbb
mov
das
orl
cmpsl
cltd
push
insb
fs
cld
add
mov
shlb
sub
mov
addb
mov
push
jns,pt
sbb
lret
push
cli
mov
ss
pop
push
imul
repnz
cmpsb
testb
pop
add
imul
or
sti
pop
mov
inc
icebp
mov
je
loop
mov
and
and
cmp
outsb
inc
inc
scas
cmp
cmpsl
mov
dec
and
mov
jno
outsb
test
cmp
icebp
fs
adc
fdivl
fadds
add
sub
movsb
push
inc
les
push
xor
fistl
mov
outsl
sub
push
clc
adc
ret
sub
std
imul
movsb
xorl
mov
clc
and
in
out
clc
dec
xchg
sub
mov
push
cltd
jne
xor
mov
scas
jmp
mov
dec
out
cli
and
dec
jnp
aaa
test
lock
dec
jl
push
dec
lahf
lock
shl
xchg
adc
push
sbb
jbe
mov
lds
inc
into
dec
sti
add
adc
sub
push
and
sahf
adc
xchg
sbb
push
and
pop
lahf
loopne
and
cltd
mov
add
fnop
pop
popa
lea
jno
pop
dec
jbe
ja
push
jp
mov
pop
cld
cmp
popf
mov
xchg
mov
int
fnstenv
xlat
or
rorb
int3
cmp
and
iret
jecxz
mov
or
smsw
cwtl
icebp
and
mov
cli
fbstp
pop
aas
mov
mov
gs
pushf
stos
sti
popa
fadd
negb
mov
inc
insl
hlt
in
add
mov
in
dec
mov
ljmp
and
outsl
sbb
call
and
mov
faddp
inc
cld
mov
or
cli
push
scas
push
mov
lock
xchg
mov
popf
pop
add
xor
xchg
pop
outsl
fisubrs
mov
xchg
mov
xor
mov
xchg
xor
mov
cmpsl
lea
inc
adc
test
sahf
mov
sub
stc
sbb
jb
pop
lea
mov
in
in
fs
jno
xor
int
sub
stos
cmp
popa
sbb
test
rorb
and
mov
ret
fildl
inc
decl
loope
aas
cltd
xchg
fbld
jnp
sarl
jae
lcall
sar
mov
mov
xchg
adc
xchg
sahf
scas
cmp
inc
ror
inc
adc
out
mov
pop
add
adc
add
fnstenv
or
xor
ljmp
jno
mulb
icebp
inc
push
mov
xchg
sub
mov
or
repz
jmp
pop
xchg
xchg
lahf
notb
xor
rorb
or
fstl
mov
aad
test
loopne
ljmp
mov
ficoms
sub
mov
aas
adc
xor
leave
fsts
xchg
imulb
sub
push
jg
aas
les
rclb
or
pop
sbb
daa
mov
addr16
dec
int3
divl
or
imul
aas
jp
std
ret
inc
sub
pop
loopne
push
cmp
and
mov
lahf
adc
and
sub
xchg
insl
jecxz
jl
jg
fdivr
xor
pop
dec
pop
leave
adc
push
cmp
sbb
jae
mov
out
mov
dec
mov
mov
and
cltd
mov
idiv
or
ret
pop
and
lods
inc
fcmovnbe
fxch
or
loopne
out
lahf
jbe
out
loop
fisubs
lret
sbb
fisubrs
jecxz
cld
sbb
adc
repnz
das
pop
shlb
or
sub
mov
test
push
mov
lret
pop
mov
cli
sbb
mov
enter
mov
and
je
mov
xor
dec
xor
pop
out
shll
cmpsb
push
mov
stc
and
lea
xor
pusha
jbe
and
nop
dec
push
shrl
or
pop
sub
pusha
and
or
jge,pn
and
xor
shlb
outsb
pop
in
and
test
cmp
imul
fisttpll
rolb
icebp
xor
outsb
sbb
adc
insb
mov
loop
sub
mov
inc
xchg
push
movsl
push
jg
xchg
pop
inc
outsl
ds
inc
arpl
sbb
lret
push
aam
in
mov
adc
fnsave
xor
push
addr16
cli
xchg
xorl
and
jns
repnz
or
cmp
sub
pop
insl
jbe
fcoms
and
gs
das
push
in
cmp
js
mov
dec
jecxz
and
dec
or
arpl
daa
movsl
movb
test
sbb
push
xlat
sub
dec
xchg
daa
aam
xor
mov
insb
in
mov
jo
je
mov
movsl
ret
ss
ss
data16
jg
lods
sti
jnp
mov
push
inc
lods
mov
sbb
lock
je
ret
jmp
pop
call
push
in
sbb
push
push
adc
fisttpll
adc
vorpd
push
jl
cmp
mov
out
aas
test
xor
stc
pop
pop
mov
movsl
mov
lods
hlt
repnz
add
jb
pusha
loope
mov
mov
xor
ret
xchg
shrl
cwtl
xor
jp
imul
jmp
iret
lods
mov
mov
imul
pop
nop
pop
and
insb
jl
inc
mov
adc
dec
test
loop
dec
xchg
cmpsb
test
into
loop
sbb
aam
mov
mov
jmp
cld
mov
imul
fwait
sarl
xchg
and
je
sbb
rolb
inc
idiv
movsb
push
mov
mov
xchg
mov
dec
mov
jp
xor
pushf
pop
adc
test
out
and
mov
jl
sub
fwait
mov
push
std
sahf
add
mov
mov
xor
mov
outsb
xchg
push
or
or
pop
test
hlt
loopne
ret
dec
call
lahf
insl
cmp
sub
mov
push
sub
mov
cli
jns
insb
sbb
and
xchg
mov
adc
xor
push
mov
sub
mov
and
sub
jle
fmull
mov
sub
xor
es
imul
sub
pop
push
cmp
mov
mov
scas
sbb
mul
mov
gs
sub
adc
cmp
imul
testl
add
ror
jge
xor
fsubl
iret
mov
sbbl
xchg
or
pop
sub
mov
inc
cld
fnstcw
lcall
add
pop
mov
xchg
insl
mov
gs
hlt
jno
lahf
dec
movsb
lret
push
push
xchg
inc
mov
data16
add
sbb
pop
aas
mov
adc
icebp
or
fcomip
jmp
xor
les
insb
mov
popf
pop
insl
lds
in
adc
enter
xchg
pop
inc
and
mov
adc
xor
and
mov
clc
jne,pt
mov
pop
and
stc
outsl
fldenv
jge
sub
lret
jb
push
enter
mov
push
or
inc
add
cwtl
push
adc
sub
sub
push
mov
mov
inc
stc
mov
lods
cli
and
aas
mov
xchg
jge
in
lret
lea
pop
add
fwait
and
stos
or
jecxz
xor
out
mov
lret
sub
aas
lcall
int3
out
ficompl
ficoml
mov
and
jbe
push
ljmp
test
bound
add
movsb
sbb
xchg
dec
xor
inc
xlat
xor
fcompl
pushf
int
mov
or
test
cmp
push
sub
loopne
push
adc
add
cmovle
pop
pop
faddl
mov
dec
jle
cmp
mov
fcmovb
sub
insb
repnz
call
inc
mov
dec
movsb
mov
sub
add
inc
out
fdivl
js
pop
out
pop
inc
repnz
aam
mov
pop
add
push
cmc
lods
pop
sub
iret
hlt
outsl
cmp
mov
lea
je
pop
sub
sub
mov
jecxz
outsl
mov
push
scas
xor
enter
sub
xlat
jae
sbb
in
insb
repz
cmpsb
in
or
je
test
shlb
pop
sub
add
pop
clc
call
mov
sbb
sar
gs
scas
shll
jbe
scas
inc
cwtl
std
outsl
and
pop
shl
push
jmp
ret
pop
repz
enter
inc
dec
lret
jmp
bound
popa
xor
aad
push
push
dec
xlat
inc
inc
mov
push
in
loop
imul
fwait
or
mov
lret
xchg
repz
add
mov
addb
dec
addr16
dec
dec
lea
xchg
xchg
push
aam
in
loopne
mov
pop
jg
push
push
pop
xchg
xor
pop
insl
mov
call
mov
out
out
dec
sti
inc
and
or
mov
cwtl
ror
sub
mov
repz
cmp
push
aaa
movsl
ljmp
ret
jno
andl
rclb
jge
nop
sbb
jmp
jge
sbb
cmp
push
cmp
ljmp
dec
fsubr
lea
cmp
inc
mov
sub
cltd
push
in
cs
sub
mov
cltd
mov
mov
mov
mov
dec
pop
popf
push
fwait
sub
iret
in
mov
lcall
insb
cmc
mov
pusha
sbb
loopne
xor
decl
dec
inc
test
test
mov
sub
xorb
mov
out
test
pop
rolb
es
mov
imul
lea
xor
cmp
push
fimull
gs
sub
push
int3
push
das
xor
ss
mov
lcall
and
and
mov
add
fnstenv
test
jae
push
jne
lret
or
dec
cmp
push
or
addl
pop
aad
pop
sub
inc
icebp
outsl
stos
adc
ret
nop
mov
inc
inc
lods
cmpsb
bound
fbld
xchg
dec
shrb
and
push
dec
inc
push
into
cmc
mov
call
insl
frstor
es
mov
dec
lea
xchg
mov
data16
mov
adc
lret
or
insb
cs
fmul
inc
xor
sub
or
mov
sbb
mov
fcom
pop
std
test
xchg
jecxz
inc
add
hlt
pop
cmp
xchg
cli
subl
xor
dec
sbb
cmc
add
push
lcall
push
and
mov
mov
addr16
lods
xor
mov
mov
dec
fnstcw
sbb
cmpsb
fwait
and
pusha
inc
jb
inc
pop
lea
les
jg
jns
test
sbb
lldt
mov
aas
cld
movsl
dec
aas
clts
push
test
or
js
and
mov
pop
fistps
xor
sbb
fsubs
stc
add
imul
aas
movsb
jno
mov
int
cmp
sarl
push
lods
jle
icebp
cmpsl
or
loope
mov
jmp
cltd
cwtl
add
rclb
pop
mov
lea
aad
cmpsb
or
mov
mov
pop
stos
fstl
stc
mov
cld
and
inc
or
leave
push
insb
inc
jae
mov
mov
gs
mov
adc
stos
push
push
sub
and
es
iret
mov
adc
adc
cmp
mov
push
mov
or
leave
inc
inc
nop
bound
xor
frndint
mov
or
test
add
push
jns
bound
sbb
mov
loop
pop
lahf
rorb
push
push
shrb
dec
xor
and
stos
aas
pop
pusha
xor
dec
xchg
les
sub
xchg
out
inc
push
cmc
push
inc
out
cmpsb
sub
cmp
imul
cmpb
add
scas
push
dec
fistpll
mov
addl
mov
xlat
sub
ret
sub
sarb
jp
or
leave
push
scas
fistl
cmp
cli
cltd
std
ret
sbb
jns
gs
push
ret
mul
xlat
cmp
aad
mov
or
pop
push
fildll
pop
cwtl
cmp
out
cli
pop
push
sahf
push
insl
xor
add
sbb
std
lret
repnz
xchg
xor
sbb
inc
lods
aam
or
imul
or
aaa
sbbl
mov
sub
repnz
hlt
xchg
popf
xor
loop
mov
test
lret
faddl
pushf
icebp
add
or
jge
pop
das
je
mov
mov
push
das
int3
sub
pop
jbe
stc
popf
and
ss
pop
fchs
xor
mov
test
cmp
xchg
sbbl
and
xor
mov
push
scas
mov
jge
ret
adc
sub
push
mov
or
dec
pop
sahf
stc
inc
pop
adc
inc
mov
jb
hlt
insb
test
jbe
xchg
mov
inc
or
movsl
in
xchg
pop
or
add
jg
jmp
shll
pop
cmp
inc
js
lahf
lds
mul
mov
ret
fidivrl
inc
sub
add
mov
fbstp
cmp
dec
shlb
cmp
je
push
mov
push
and
add
cmp
adc
xchg
test
mov
fmull
mov
mov
mov
and
adc
cmp
in
lcall
popf
stos
arpl
dec
lret
adc
mov
xor
andl
jp
and
fistpl
and
jno
mov
popa
and
and
pop
pop
repnz
fmull
popa
sub
add
xor
outsl
mov
in
mov
inc
insb
cs
dec
jae
adc
ret
sbb
fwait
movsb
mov
mov
lock
pop
sbb
fsts
adc
and
xor
pop
insl
lods
hlt
push
test
jb
jno
or
psubb
lcall
imul
popf
pop
sti
cmp
ss
mov
movsb
cmp
movsl
cmp
nop
orb
and
hlt
fdivs
ret
xchg
dec
enter
imul
adc
dec
cs
dec
orb
pop
imull
jae
mov
cmp
xor
add
je
aam
dec
rclb
lret
push
insl
arpl
adc
xor
repnz
out
mov
cltd
repz
mov
xchg
outsl
or
repz
jl
adc
mov
xchg
mov
in
sub
and
js
and
outsl
mov
push
fwait
jae
adc
xor
in
pop
jb
cli
sbbl
lahf
dec
xchg
out
cmp
or
or
add
adc
mov
pushf
mov
jge
push
inc
and
cmp
pop
js
xchg
mov
arpl
mov
mov
bound
loop
push
fldz
lret
mov
mov
insl
push
jnp
shrl
push
pop
mov
loopne
roll
cmp
xchg
pop
inc
js
push
movsb
adc
cmpsb
xor
inc
xchg
push
sub
pop
add
sub
push
shl
test
xchg
jecxz
sbb
stc
mov
sbb
nop
dec
lods
ret
dec
iret
adc
test
jns
outsl
lret
pop
push
dec
and
push
mov
adc
or
fdivl
aam
in
and
xchg
push
cmp
aam
and
xor
jecxz
adc
lahf
jno
jp
popa
add
test
sub
cwtl
sbb
mov
cmp
leave
sub
ror
xor
repnz
scas
pop
shl
pop
outsb
dec
out
movsb
movsl
aaa
dec
js
pop
fmul
sub
in
jno
test
mov
rorb
ds
mov
xchg
nop
jle
mov
push
jmp
data16
test
push
push
push
test
iret
sub
incl
and
loope
cmp
in
shlb
mov
outsl
scas
xchg
xor
mov
lock
pop
pop
or
cwtl
movsl
in
mov
in
push
leave
jne
ret
jg
out
sbb
push
dec
iret
push
adc
notb
sbb
ret
out
mov
andl
data16
add
mov
pushl
fildll
xchg
sar
pusha
adc
xchg
mov
sbb
sub
cs
fs
mov
push
mov
xchg
insl
mov
push
subl
je
int
cwtl
mov
pop
push
sahf
xor
std
in
or
sub
fmull
mov
nop
outsl
push
cwtl
xchg
sub
popf
sbb
adc
in
sahf
adc
cmp
jmp
nop
dec
mov
out
xor
inc
out
bound
push
lock
fdivrl
and
in
push
je
jecxz
dec
das
lcall
xor
or
sub
inc
test
jne
adc
and
enter
sbb
mov
push
int3
mov
in
cltd
lods
into
lods
dec
outsb
lret
mov
lret
mov
dec
pop
sahf
cmp
fdivs
mov
add
add
imul
jno,pt
ds
inc
clc
mov
sti
lea
cmpsb
pop
rcr
cs
sub
mov
jmp
cmp
gs
cmp
sub
aaa
lahf
gs
push
sub
adc
xchg
leave
sub
mov
inc
xchg
lcall
push
pop
xchg
xor
and
inc
pop
or
mov
mov
mov
inc
xlat
addb
fidivrl
lret
insl
cs
push
call
add
cltd
js
mov
test
push
stos
ret
mov
adc
xor
mov
out
mov
sbb
sub
push
push
imul
jo
xor
nop
ds
dec
sub
bound
pushf
pop
out
rolb
sbb
test
shll
push
push
mov
pop
inc
cmp
cmc
jl
cltd
addr16
jae
addr16
push
popf
je
sbb
xor
enter
icebp
push
dec
jge
inc
add
in
mov
bound
jns
xchg
push
fadd
ror
cmc
aaa
pop
fwait
rolb
cmp
fimuls
jbe
dec
cmpsb
mov
movsl
popl
pop
cmp
cmpsb
stos
fsubrs
subl
jns
push
mov
push
mov
lods
lods
jp
shrb
mov
mov
daa
int
push
movb
mov
pushf
mov
push
and
outsl
sub
adcb
or
xchg
aad
loope
test
add
jns
enter
push
loope
bound
scas
mov
inc
pop
or
loop
das
push
jo
loope
repnz
push
lcall
cwtl
in
mov
push
mov
xchg
sub
test
outsl
jno
pop
push
push
jg
and
fsubp
add
mov
push
fdiv
push
pop
ljmp
lret
xor
jae
mov
add
adc
adc
rorb
imul
imul
push
movsb
mov
lea
dec
bound
add
ss
jo
or
inc
mov
int
sub
shlb
jbe
movsb
popa
movsl
fstpl
sub
cmc
pop
out
ljmp
vpcmpeqd
inc
push
cmp
fwait
mov
rorb
sub
lods
jb
jp
lods
add
les
xor
jmp
add
push
fwait
lods
cmp
loope
sbb
xorb
je
test
unpckhps
pop
addr16
mov
lret
mov
and
push
mov
adc
and
xlat
lcall
jle
jecxz
adc
rcr
pop
movb
adc
lods
rcrb
inc
and
addr16
xchg
adc
jecxz
mov
adc
jo
pop
mov
loopne
or
popf
xlat
mov
jne
lret
scas
xchg
out
sub
lahf
lret
mov
outsb
pop
insb
mov
lahf
fldl
xchg
sbb
xlat
les
stos
jg
xchg
cld
xchg
inc
push
mov
lcall
xorb
jg
or
std
cltd
ss
orb
lcall
orl
lock
mov
loop
push
stos
jo
cmpb
nop
das
cs
out
mov
stos
adc
cmp
jae
mov
inc
cmp
dec
mov
and
sti
mov
xchg
imull
scas
mov
sub
ret
aaa
lcall
push
in
enter
mulb
sbb
xchg
mov
dec
push
lcall
ret
popa
xor
scas
xchg
xor
dec
pop
fnstcw
sub
scas
sbb
pop
xor
push
lahf
jne
jo
int3
sbb
into
cmc
rcl
ficompl
pop
out
push
scas
imul
aas
hlt
dec
jno
js
jns
push
repnz
stos
lret
cmp
dec
sub
push
rcr
add
shrb
xchg
lahf
mov
cwtl
fisttpll
pop
in
sbb
in
in
fdivp
and
xor
sub
or
cmp
aam
mov
mov
negl
mov
jg
leave
test
flds
adc
imul
stos
loopne
repz
push
xchg
sbb
shrl
and
addr16
adc
mov
xor
fisttps
negl
out
pop
popf
stos
mov
push
inc
fnstcw
mov
fsts
mov
mov
subl
icebp
mov
aaa
push
jae
test
adc
cli
stos
lods
push
jns
mov
popf
xor
jo
mov
js
lahf
push
fcomps
push
xor
loope
or
imul
push
push
negb
adc
in
inc
mov
test
loope
pop
js
in
lret
xchg
mov
mov
int
lock
cltd
and
stos
mov
push
mov
mov
and
stos
mov
push
out
testb
or
rcll
dec
mov
js
pop
insb
les
lea
bswap
inc
cmp
enter
sbb
fwait
jp
icebp
xlat
push
call
sbb
frstor
je
leave
test
sbb
aaa
pop
sbb
or
repnz
and
insb
mov
xor
aad
mov
push
gs
fs
xchg
add
shrl
push
dec
std
push
adc
push
sub
push
cmp
lock
pop
jp
add
stc
stos
adc
inc
add
fwait
sub
add
cmpsb
jne
ss
sbb
fstpt
xor
xor
xchg
pop
ror
mov
mov
aaa
sub
sbb
and
fdivl
adc
adc
push
mov
mov
xchg
out
mov
push
push
mov
dec
sbb
hlt
push
sbb
lret
push
mov
adc
jge
ljmp
jno
xchg
test
jns
push
xchg
lods
sub
push
sbb
js
fsubrl
fs
lods
jae
arpl
xchg
in
inc
iret
sub
imul
xor
mov
je
inc
stc
sbb
test
push
xchg
pop
es
mov
in
lock
int3
call
dec
std
pop
notl
inc
js
sbb
sbb
jecxz
adc
or
xchg
xlat
cmpl
pop
inc
xlat
jae
jmp
adc
inc
mov
xchg
fisttpll
jbe
out
mov
insl
cltd
in
sub
gs
xor
ljmp
aam
jne
adc
scas
push
insb
test
call
test
lcall
mov
popf
test
out
rcrl
mov
mov
dec
in
and
pop
or
imul
leave
mov
inc
popa
add
inc
mov
ja
and
jbe
push
adc
mov
jmp
jb
cmp
int3
mov
daa
enter
jne
push
lock
jge
or
pop
sbb
idivb
mov
loopne
fnsave
fcmovb
loopne
mov
popf
sahf
icebp
enter
cmp
and
jmp
sbb
ret
adc
fcomi
icebp
sub
cmp
push
and
hlt
cld
js
loop
ss
leave
bound
inc
shr
jne
inc
movsl
aaa
cwtl
lea
fsts
jg
pop
ljmp
dec
jbe
push
fs
std
subl
cmp
mov
add
inc
sbb
aaa
and
pop
pop
aam
rcll
out
mov
imul
sbb
out
and
pushf
cwtl
stc
imul
mov
cmp
push
sbb
addr16
xchg
push
inc
lret
cld
xor
add
pop
mov
mov
stos
aad
push
stc
mov
add
adc
out
mov
push
pop
xchg
cmc
out
in
jp
stos
jnp
sub
jp
mov
jmp
lods
mov
in
int3
fsubs
cld
hlt
stos
dec
in
in
cmc
fwait
dec
stos
add
mov
lahf
lock
xchg
in
jae
imul
jl
and
push
sbb
sub
mov
ficoms
sbb
sti
iret
pop
add
inc
and
lods
mov
and
sbb
std
sahf
jno
out
sub
repz
inc
movsl
loopne
pop
xchg
cmp
jne
mov
in
es
aam
xchg
cld
sahf
sub
adc
scas
es
rorl
mov
stos
rclb
popf
jmp
aaa
inc
aam
mov
int3
cmpsl
dec
popa
decl
adc
shl
push
sub
pop
push
mov
adc
in
or
sti
jns
nop
mov
test
mov
and
lret
clc
scas
xchg
cmpsl
pop
rcl
mov
test
xlat
scas
jmp
inc
and
add
mov
or
push
mov
mov
sbb
scas
jg
inc
outsb
ss
stos
mov
gs
pushl
out
add
and
mov
repnz
loope
xorl
xchg
mov
cmp
pop
ss
ljmp
stos
and
cmp
fstpl
xchg
push
and
xchg
add
pop
adc
aam
add
add
rcll
pop
mov
push
sub
mov
mov
adc
sbb
and
aam
jmp
xchg
lods
dec
dec
add
inc
mov
mov
pop
dec
jecxz
pcmpeqd
rcl
fs
int3
aam
sbb
dec
xor
sub
jp
bound
mov
mov
fs
pop
lahf
or
mov
dec
mov
pop
loopne
mov
sub
movsb
shll
pop
adc
jnp
fisttpll
decl
fsubs
mov
cmp
jp
dec
testl
and
pop
mov
pushf
lods
lods
jmp
sub
movsl
xor
push
fmul
mov
sub
pusha
and
jg
test
paddd
in
cld
ljmp
push
sbb
lahf
mov
insl
in
cmp
mov
or
and
ret
add
lds
jge
daa
mov
xchg
inc
fdivrs
adc
mov
out
loope
dec
mov
hlt
bound
inc
into
xor
mov
inc
push
mov
les
sbb
subl
pop
movsb
icebp
cmc
mov
shlb
shll
xchg
stc
std
mov
dec
mov
cmc
dec
sbb
push
dec
inc
jae
add
dec
icebp
ss
daa
lock
jle
test
cmp
add
fndisi(8087
pop
aas
sahf
xor
cltd
fdivs
mov
push
mov
out
popa
inc
and
in
dec
repnz
insb
pop
mov
xchg
xor
sbb
dec
cmp
mov
jp
or
xchg
imul
push
push
insl
pop
inc
js
inc
xor
mov
sub
les
jmp
dec
call
aam
mov
cwtl
dec
pusha
cmc
jecxz
and
imul
adc
iret
dec
mov
das
mov
and
mov
ret
xchg
popf
lret
jg
sub
lahf
jp
loop
fildll
mov
xchg
mov
cmp
inc
leave
scas
fs
cmp
out
mov
adc
fsubl
sub
ret
call
mov
push
xchg
pop
fsubr
aad
cmp
jnp
or
jb
mov
jbe
ljmp
popf
inc
xor
mov
sbb
mov
outsb
sub
xchg
out
js
loopne
sbbb
jge
push
dec
xchg
push
mov
cmpsb
adcl
pop
jg
leave
ja
enter
jecxz
into
xchg
xchg
fidivs
sti
sbb
pop
fsub
mov
ret
daa
adc
mov
mov
dec
movsl
jns
shlb
scas
or
jmp
ljmp
fistpll
mov
mov
lret
sbb
rcrl
test
or
fwait
lret
fisubrs
es
mov
nop
sbb
das
pinsrw
or
loope
sbb
xchg
dec
popa
das
jnp
pop
or
pop
pusha
sbb
mov
out
rolb
adc
in
and
sbb
roll
xchg
pop
cmp
popa
dec
sahf
dec
pop
mov
mov
adc
push
mov
negb
outsl
xorb
repz
lods
cwtl
pop
push
sbb
fisubl
mov
dec
insl
jb
push
push
xor
in
dec
mov
add
mov
cmp
mov
lea
xchg
in
push
jp
mov
into
or
int
rcr
por
roll
xor
fmulp
aam
scas
dec
mov
inc
xor
adc
outsb
sub
adc
insb
std
xchg
mov
jb
les
adc
call
iret
in
fbld
sbb
roll
mov
cmp
and
mov
leavew
adc
ja
int
inc
push
jae
mov
dec
push
jp
dec
divb
cmp
adc
shrl
in
sarl
jo
cld
das
jae
xchg
stos
mov
push
lea
in
pop
or
jo
outsb
xchg
sub
arpl
jnp
lret
or
popa
and
xor
adc
mov
in
jmp
adc
ljmp
cs
loop
xor
sbb
cmp
clc
adc
les
xchg
js
sub
inc
adc
cld
dec
mov
fistps
xchg
mov
sub
popf
ss
pop
cs
jge
dec
push
sub
fnsave
leave
and
and
xchg
pop
and
push
jae
sbb
xchg
fmuls
inc
enter
add
pop
jecxz
enter
lock
mov
dec
outsb
std
mov
hlt
fs
sub
movb
fidivs
out
cmp
pop
sbb
push
dec
mov
bound
jns
xor
in
in
sahf
imul
mov
data16
enter
jmp
dec
icebp
and
lods
insb
ds
xchg
jge
aas
xchg
loope
mov
cltd
fnstcw
inc
js
xchg
jbe
jle
shrl
rcll
fsubrs
or
inc
mov
cwtl
ss
lock
mov
test
lcall
aas
into
ljmp
dec
dec
sub
mov
xor
in
push
inc
test
xor
fnstsw
xor
jnp
cmpsb
ljmp
mov
outsl
arpl
jle
or
mov
ret
or
jg
int3
ja,pt
pop
mov
scas
lcall
jmp
xor
mov
cwtl
lock
pop
mov
sbb
add
idiv
xchg
in
hlt
push
and
xchg
insl
dec
push
paddsw
pop
lds
inc
int
inc
outsb
cmc
pop
loopne
mov
outsb
inc
adc
scas
js
push
imul
cmp
shrl
inc
icebp
out
insb
fwait
jns
bound
outsl
sbb
inc
xlat
jp
sahf
push
ljmp
test
les
imul
test
adc
test
add
mov
pop
cmp
aas
inc
lea
inc
in
das
dec
loop
inc
sti
mov
pop
lods
lea
push
inc
xchg
lahf
push
arpl
inc
cmp
loope
insb
dec
mov
sub
jecxz
push
adc
pop
ljmp
mulb
fdivl
loopne
sub
mov
or
mov
cmp
mov
inc
test
jns
in
xor
cli
xchg
repnz
mov
or
out
jge
dec
inc
lea
mov
fmull
jno
jl
lock
sarb
imul
dec
sbb
outsl
aaa
pop
out
push
push
std
sti
mov
arpl
cmpb
xor
aad
popa
inc
fidivs
jno
or
mov
call
fnstenv
movsb
int3
or
fadds
jle
cmpsb
loopne
pop
sbb
add
in
pushf
push
repnz
and
into
cli
sub
xchg
adc
mov
dec
shlb
add
pop
fldl
xchg
jp
loop
cmpsl
rclb
dec
mov
test
pushf
ret
xchg
out
ret
leave
push
pop
inc
mov
jp
lret
sbb
and
pusha
aaa
adc
mov
and
add
push
pop
pop
popf
lea
scas
in
pop
pop
jge
lea
add
sub
lock
loope
loopne
cmp
in
dec
fstpt
adc
sub
js
pop
imul
dec
ret
inc
stos
xchg
xchg
inc
fmull
cmp
fwait
add
scas
and
and
jno
jmp
push
inc
adcl
aas
push
shlb
or
mov
cmp
daa
cmp
inc
mov
insl
addr16
shlb
push
mov
mov
inc
jl
sarl
pop
out
mov
test
arpl
aam
movsb
imul
xor
in
dec
push
mov
xor
jge
lret
jae
mov
push
mov
pop
ja
imull
xor
cmpsl
fbstp
fidivl
mov
mov
imul
stos
lock
daa
in
jge
mov
in
or
mov
movb
mov
lock
push
clc
shll
cs
pop
and
fidivl
or
sub
rcl
jbe
cli
add
test
cmp
inc
sbb
mov
mov
dec
imul
sbb
xor
leave
std
shrl
xchg
sahf
mov
test
inc
outsb
adc
add
pop
mov
jmp
sbb
or
or
pop
rorb
fldenv
mov
push
push
hlt
movsl
test
hlt
push
push
pop
push
into
xchg
movsb
dec
insb
push
pop
pop
xor
pop
mov
sahf
mov
arpl
or
in
sbbb
cmc
fwait
and
gs
mov
xor
into
add
cs
int3
lds
xchg
or
lret
jmp
gs
cwtl
fwait
ret
push
call
sbb
arpl
ljmp
cwtl
sub
sbb
jno
lods
cmp
lcall
pop
lods
or
ja
pop
stos
mov
mov
cmp
aas
ds
inc
adc
mov
adc
test
inc
inc
imul
or
cltd
pop
fwait
cld
cmpsl
push
adc
and
mov
pop
int
dec
js
out
mov
mov
insb
leave
mov
inc
das
sti
or
push
repz
inc
mov
cmpsl
or
into
mov
xor
icebp
jnp
sbb
sbb
sub
cmp
mov
and
jecxz
sub
mov
fldt
lods
popf
lahf
gs
aas
icebp
jo
sub
jp
fwait
xchg
jle
in
cmp
data16
sarl
cmc
pop
out
int
les
sub
gs
jge
and
sahf
fdivrs
pop
jle
test
push
cmp
inc
push
or
cmc
push
lret
cld
jg
fsubl
mov
push
mov
in
push
lds
cmp
add
test
lods
add
sahf
mov
out
repnz
mov
jne
add
push
mov
mov
lds
or
fs
mov
test
int
xchg
and
add
in
daa
stos
pop
jmp
cwtl
fwait
jno
pop
jle
jg
add
fs
lods
aam
inc
push
call
push
or
icebp
out
jns
fldenv
jno
loope
fwait
dec
xor
fsubl
jno
nop
pushl
pop
cmp
mov
inc
xchg
aam
push
push
mov
or
sbb
pop
loopne
rol
jge
mov
iret
int
sub
inc
mov
lods
aas
inc
jp
sbb
call
sti
andl
xor
in
fisttpll
iret
pop
popa
jl
test
test
lock
aas
outsl
mov
adc
mov
adc
sub
inc
int
xor
in
jno
xor
clc
fwait
stc
jo
push
dec
in
push
cs
adc
das
ret
pushf
jecxz
shll
rorl
cwtl
int
jbe
or
fcomps
pop
mov
push
cmp
orb
cwtl
popa
add
xchg
adc
fldcw
pop
jne
sahf
rol
xchg
insl
pushf
sahf
lahf
sbb
aam
cmp
sti
inc
fs
jne
loopne
mov
mov
orl
mov
out
addb
inc
mov
add
sbb
fwait
push
pop
inc
xchg
in
lret
jbe
insb
add
dec
testb
sbbl
lret
std
in
jmp
mov
jo
call
daa
and
jmp
mov
hlt
or
cmp
loopne
ss
call
sub
mov
cmp
inc
pop
xchg
and
scas
aas
les
and
xchg
push
pop
add
lock
mov
rcrl
push
into
pop
sub
mov
pop
xor
aaa
scas
leave
sti
jns
or
sub
cpuid
inc
mov
outsl
sub
cmp
adc
aaa
das
or
inc
or
and
jae
jo
popa
mov
cwtl
sub
dec
pop
out
jno
arpl
or
pop
or
fwait
mov
add
arpl
push
pushf
push
lret
mov
jns
add
rcll
scas
adc
inc
or
xor
jae
push
cmpsb
in
in
adc
imul
stos
repnz
mov
pop
mov
roll
xchg
xchg
pusha
fwait
ret
adc
lock
pushl
xlat
xchg
cmp
in
std
pop
testb
pop
out
pop
mov
mov
jge
push
push
adc
mov
inc
pushf
stos
or
fbstp
sub
loop
add
and
mov
pushf
call
adc
pop
scas
mov
ret
xchg
mov
bound
xor
enter
mov
inc
gs
cmp
jecxz
mov
iret
iret
sbb
inc
push
shlb
sub
or
push
jmp
idiv
sbb
push
sub
cmp
mov
lahf
mov
dec
inc
sbb
cwtl
hlt
aad
data16
addr16
mov
xchg
xchg
adc
rolb
inc
aas
inc
cmp
cmp
test
or
pop
push
and
fistps
lret
js
aam
mov
mov
scas
inc
mov
orb
mov
icebp
mov
in
stos
ret
mov
xchg
add
pop
add
dec
gs
cli
aam
lret
cmovae
push
jmp
cli
imul
shll
jns
bound
pop
adc
mov
cld
stos
mov
idiv
loopne
mov
adc
xchg
mov
stc
cmp
les
xchg
add
inc
jecxz
mov
jbe
and
stc
rorl
xor
pop
mov
test
adcl
push
int
fisubrs
mov
pop
cs
lret
xlat
fmulp
pop
adc
imul
out
push
push
fldt
jecxz
test
popa
dec
dec
jns
mov
fidivrs
xor
int3
or
mov
and
stos
push
ds
addr16
pop
inc
add
jns
jmp
xor
xor
lret
fwait
inc
fstpl
pop
mov
jo
repnz
cmp
sbb
sub
inc
jnp
mov
mov
lahf
call
icebp
xor
and
pop
je
xor
addr16
shll
adc
cmp
pop
cmp
fnstenv
fisubs
jnp
mov
xor
outsl
sub
xchg
add
jbe
or
cwtl
hlt
mov
aad
mov
xchg
mov
pushf
fucomp
cmpsb
sahf
mov
aaa
jbe
fidivs
xchg
jecxz
mov
and
and
outsl
sahf
push
insb
adc
test
mov
fs
mov
xor
mov
rcll
xchg
xor
jmp
xchg
xor
shlb
cs
lret
pop
xchg
ret
cli
data16
mov
bound
iret
adc
ret
add
cmpsb
addr16
and
or
inc
sbb
stc
dec
stos
xchg
cltd
fisubs
in
xor
dec
arpl
mov
jns
jle
dec
in
pop
pop
imull
mov
jno
imul
aas
ss
int3
jecxz
into
das
arpl
pop
push
jecxz
lcall
adc
addb
pop
or
loop
mov
outsb
gs
popf
loop
shrl
test
clc
xor
enter
outsl
inc
movsb
insb
inc
je
push
loop
jmp
cmp
repz
repnz
pop
js
cmp
out
mov
adc
popa
cs
movsb
cmp
sbb
jmp
sub
sub
out
mov
in
xchg
and
mov
xchg
ds
inc
int
pop
std
mov
xor
push
dec
xor
dec
scas
mov
push
or
loopne
xchg
hlt
cmp
dec
sahf
mov
mov
faddl
jno
lcall
ds
movsb
ds
lret
lret
cmp
das
outsl
fnstcw
mov
inc
xor
pop
cmp
imul
les
cmpb
flds
mov
imul
add
sub
cmpsl
insb
js
or
shl
leave
cmp
repnz
aas
mov
aas
pusha
imul
adc
lods
jmp
inc
mov
pop
cli
notl
in
aas
lods
enter
mov
sbb
fnstsw
out
stos
xchg
mov
cwtl
inc
add
push
jo
push
je
pop
hlt
aas
iret
dec
jno
sbb
loope
pop
icebp
add
out
push
popf
jl
icebp
push
arpl
sbb
mov
fdivl
jo
movsb
xlat
fcomi
jo
pusha
mov
cmp
mov
idivl
push
adc
add
fidivl
pop
inc
lods
jbe
push
iret
mov
subb
sbb
dec
pop
sahf
shl
mov
xchg
insb
add
mov
jge
pusha
inc
adc
dec
xchg
or
adc
mov
sbb
negb
inc
and
pop
push
xor
dec
loope
iret
inc
or
sbb
flds
nop
and
aaa
mov
mov
mov
js
dec
jb
sbb
sbb
pop
sar
push
mov
push
push
xor
mov
or
sub
lds
ss
fiaddl
fs
or
je
cmpsl
fisubrs
pop
sub
adc
pop
pop
jecxz
cmpl
jo
dec
leave
lcall
push
dec
push
testb
stos
pop
aas
mov
or
mov
mov
or
mov
inc
adc
sbb
outsl
jo
iret
adc
mov
lret
jbe
lods
rcrb
scas
mov
and
into
push
xor
mov
jo
push
imul
push
rcr
sbb
pushf
nop
fisttpl
xchg
mov
fisubl
push
push
stos
pop
jmp
push
movsbl
sbb
popf
in
ror
mov
bound
aad
ds
sbb
xchg
or
sbb
push
out
pop
ljmp
push
insl
adc
enter
ret
insl
cmp
out
pop
push
int
imul
sub
inc
cltd
mov
mov
cmp
dec
jns
lcall
push
fsubrs
pop
pusha
mov
call
rclb
or
outsl
jecxz
aam
mov
pushf
and
movb
or
xorl
test
fs
hlt
push
popa
sbb
ljmp
in
iret
or
imul
mov
or
cmc
pop
arpl
add
lret
add
pop
xor
test
int3
cwtl
loope
add
mov
popa
mov
cli
mov
push
and
out
xchg
push
push
xorb
jecxz
in
xor
or
roll
cmp
out
fistpl
xor
mov
mov
sub
inc
xor
js
jle
pop
add
sbbl
jl
jl
jg
push
and
test
movl
sti
stos
std
xor
andl
dec
mov
ja
test
scas
jb,pn
pop
into
xor
jp
fs
inc
xchg
add
ljmp
cld
fstl
sub
lods
aas
cmpsb
fld
cli
push
js
xor
push
push
loope
es
lods
popf
repz
into
jo
cwtl
jmp
lods
lret
test
and
dec
add
cmpl
cld
inc
jns
scas
sbb
xor
xor
adc
sbb
fimuls
shlb
iret
nop
sub
xor
std
mov
pop
add
aas
mov
adc
notb
mov
fnstcw
pushf
xchg
popf
idivb
decb
aas
fsubr
and
pop
jns
sbb
cli
mov
jns
sub
lea
lock
lcall
and
incl
loope
mov
icebp
xchg
leave
imull
call
cs
push
dec
push
aaa
pop
fsqrt
mov
mov
inc
in
loope
or
popf
pusha
sbbl
popf
fsubrp
sub
inc
xchg
adc
mov
or
add
cmp
lret
sub
pop
out
mov
ljmp
jb
xor
add
pop
aas
stc
dec
movsl
cs
xchg
xchg
lock
enter
lock
add
inc
push
or
sub
leave
mov
push
outsl
xchg
inc
roll
inc
pop
enter
dec
jge
mov
xchg
cmp
je
and
cwtl
insl
call
sub
inc
xor
mov
dec
popf
add
mov
or
jp
addr16
fstl
fwait
insb
cld
mov
shll
sub
ret
call
les
lret
jg
mov
push
out
scas
out
xlat
fwait
mov
clc
cwtl
pop
lret
dec
pushf
ljmp
aam
xor
mov
dec
test
rolb
cmp
out
aam
lcall
mov
out
jmp
add
pop
sub
push
or
popl
je
mov
xchg
jo
out
xchg
iret
pop
fidivs
enter
insb
pop
dec
mov
sbb
pushf
sarb
mov
loope
and
xchg
jae
mov
mov
vmovntps
out
or
aaa
inc
jne
and
or
fwait
jbe
push
int3
rorl
idivl
mov
outsb
jecxz
arpl
cld
inc
mov
addb
push
mov
jb
xor
xor
xlat
ja
fsts
pop
mov
gs
pop
icebp
aam
pslld
stc
hlt
push
add
jp
mov
add
adc
std
dec
fisttpll
cmp
fnstenv
inc
jg
cmp
mov
mov
mov
js
lcall
sbb
dec
xor
sub
mov
jno
jno
jmp
xchg
nop
dec
loop
ds
stos
ret
lret
outsl
scas
pop
and
sbb
sbb
subb
add
mov
rorb
jl
inc
sub
test
xlat
mov
scas
lods
sar
mov
scas
std
mov
mov
aam
jae
xchg
push
shr
pop
hlt
scas
add
and
imul
scas
test
fmull
xlat
scas
jns
inc
cmpsl
mov
scas
inc
int
adc
or
enter
mov
sbb
aam
test
out
jb
push
push
in
xchg
cli
jmp
sahf
add
fstps
pop
pop
pop
hlt
mov
jge
mov
mov
movsl
fwait
inc
pop
mov
mov
call
paddusb
fdiv
out
out
inc
fnsave
xchg
sarl
xor
pushf
rcrb
jae
dec
enter
shll
and
adc
lea
sub
aas
pop
inc
nop
mov
lret
jp
hlt
cli
mov
mov
xchg
adc
adc
lret
mov
fs
and
pop
and
mov
mov
xchg
fcmove
sbb
pop
int3
inc
call
dec
push
xor
sbb
sbb
cmp
xor
scas
sub
push
stc
icebp
repnz
mov
js
iret
mov
stos
sub
icebp
mov
stos
cmp
push
and
aas
lock
cmp
scas
loope
and
mov
and
dec
icebp
stc
lods
sub
adc
xor
imul
leave
ja
popa
cld
xchg
mov
push
mov
mov
inc
xorl
mov
repz
or
mov
addr16
jecxz
lods
dec
fldcw
enter
or
fsubr
mov
stc
movl
insb
sti
test
out
mov
stos
clc
push
sahf
mov
sub
mov
sub
mov
sbb
out
push
inc
adc
sub
js
sbb
cmpsb
lds
out
lret
mov
iret
add
movq
adc
fwait
push
insb
add
lahf
lret
lahf
sub
aam
sahf
sbb
mov
addb
fwait
push
hlt
mov
and
fdivs
mov
dec
pop
dec
lret
add
inc
mov
lcall
stos
sbb
xor
mov
repz
cmpsl
ja
or
outsl
add
jle
mov
fistpll
fldl
nop
movsb
or
jnp
pop
mov
xorl
jne
push
mov
xchg
ds
inc
xor
mov
jge
fistpll
inc
xlat
add
push
inc
cld
add
out
scas
mov
push
adc
and
or
shrl
xchg
jmp
hlt
sbb
ss
mov
lods
pushf
pop
dec
je
shlb
or
bound
and
lcall
inc
ficomps
into
pop
xchg
outsb
dec
add
pop
adc
mov
add
xchg
sub
mov
outsb
scas
aad
pop
pusha
push
sub
cmp
imul
out
lahf
pushl
adc
lret
add
xor
jo
dec
or
lock
fistps
ror
shll
or
outsl
mov
sbb
scas
cmc
mov
das
popf
imul
add
xchg
ss
xor
mov
mov
lret
xchg
dec
das
push
adc
insl
mov
mov
mov
gs
imul
leave
test
add
ficoms
jl
in
insb
inc
jnp
fsub
shrl
push
cmp
and
iret
call
sahf
stc
and
pop
inc
jg
mulb
push
xchg
mov
ds
xchg
or
jmp
mov
sub
lcall
pusha
mov
or
imull
jp
fwait
test
xchg
hlt
insb
mov
addl
daa
int3
lds
sbb
sbbl
stos
jmp
cmp
lcall
mov
loope
mov
out
stos
ss
mov
jbe
jge
ss
sti
inc
in
mov
mov
mov
cld
aas
clc
jg
xchg
dec
fxch
repz
addl
scas
inc
adc
and
push
jae
inc
daa
fwait
jge
jno
push
mov
mov
xchg
divl
into
orb
pop
sbb
inc
iret
or
jle
rcll
dec
or
xor
stos
fadd
call
arpl
cld
mov
in
mov
aam
fisttpl
xorl
lcall
sub
xchg
fdiv
fidivl
pop
das
daa
mov
mov
jo
sbb
fdiv
enter
aad
and
pop
mov
dec
mov
mov
add
es
push
mov
andl
mov
dec
test
daa
mov
aaa
cmc
and
jl
repnz
imul
lahf
outsb
mov
into
push
jmp
out
movsl
popa
lahf
in
roll
mov
jno
int3
cld
es
ja
outsb
das
jge
sbb
arpl
cwtl
xor
aaa
jp
lods
outsl
stc
in
sub
sti
xchg
mov
lock
in
dec
mov
xchg
sbb
fsubrs
mov
or
jo
int
js
adc
push
movsl
cwtl
jl
enter
or
push
pusha
std
ss
mov
mov
pop
pop
and
push
sahf
mov
aad
dec
fdecstp
nop
sub
xor
push
jg
mov
pusha
aaa
pushf
fwait
push
push
inc
test
not
scas
or
add
inc
jne
and
cmc
mov
pop
data16
mul
mov
push
sarb
sahf
push
sbb
mov
jae
jg
cmp
push
push
pop
and
add
iret
movsb
out
cmpsb
dec
test
xchg
add
dec
fists
scas
xor
push
jae
jg
mov
popf
adc
pop
jmp
les
or
xchg
mov
sub
cmc
inc
les
jg
lods
and
dec
test
add
std
dec
mov
jle
movsb
in
and
nop
xchg
sbb
cmp
fadd
test
leave
lods
push
pop
dec
test
cmp
aas
testb
outsb
sub
jp
int
pushf
mov
adc
stc
xchg
xor
lods
mov
cmp
mov
inc
add
mov
fistl
lahf
sub
aad
and
and
into
pushf
xchg
dec
adcl
shlb
movl
mov
push
rcrl
test
test
and
xchg
push
or
test
jns
rcrl
mov
in
dec
dec
fs
in
mov
test
andb
movsb
push
add
and
call
push
es
in
pop
shll
dec
mov
jmp
cmpsb
add
xchg
or
aaa
push
add
fsubr
int3
fisttps
pop
sbb
call
out
mov
outsb
pop
mov
mov
push
mov
xchg
jb
add
out
xor
imull
or
jg
fisubrs
and
lea
add
sub
cmp
xchg
pop
mov
and
sbb
shll
rcrb
in
lret
xor
mov
xchg
xchg
inc
sbb
frstor
lahf
fistl
cmc
gs
or
mov
inc
js
lret
data16
xchg
in
pop
mov
lcall
dec
lods
sub
cmp
pop
in
push
pusha
imul
out
pop
es
cli
mov
ja
lods
repz
sbbb
decl
sahf
das
xchg
push
rdmsr
loope
push
cltd
mov
sbb
mov
loopne
lods
xor
rclb
jle
push
pop
js
mov
aam
pop
or
out
sets
mov
je
jge
repz
lods
xor
lods
in
or
sbb
enter
mov
or
outsb
xchg
adc
jg
es
loope
ds
sub
shr
mov
sub
add
ja
push
mov
cltd
cld
fwait
in
pop
jbe
adc
cmpsb
das
ret
mov
lods
das
push
push
fidivrl
notb
mov
sub
xchg
nop
sbb
adc
push
scas
andb
lods
je
mov
sub
test
loopne
jle
add
lret
es
lods
pop
cmp
insl
jp
ja
mov
xchg
pop
jp
stos
subl
test
xchg
mov
add
jp
cmp
xor
cmp
xor
dec
gs
daa
fisttpll
sub
push
test
mov
cmp
inc
dec
push
push
xor
inc
and
sub
shll
adc
and
sti
mov
dec
ficomps
out
xchg
cwtl
mov
lods
push
adc
arpl
sbb
lret
lea
stc
into
sub
sti
stos
std
orl
imul
pop
pop
nop
or
out
mov
scas
push
sub
pop
xor
xchg
sarl
adcl
into
or
pop
int3
dec
push
sbb
ss
dec
ds
loopne,pt
sbb
out
and
push
sub
shlb
scas
enter
aad
push
adc
imul
jns
sub
dec
pop
mov
inc
popf
mov
ret
pop
adc
rcll
or
fisttps
rcll
out
addb
ret
adc
adc
lea
pop
js
pop
pop
in
fwait
shll
or
out
jbe
cmpsl
pop
pusha
xor
adcl
ja
call
xor
aaa
in
clc
lret
sahf
mov
inc
stc
mov
std
jl
sbb
outsb
xor
in
jns
xchg
sbb
xchg
cltd
mov
push
jae
dec
sub
cmc
push
xchg
stos
xchg
pop
ds
push
in
stos
rcl
imul
xchg
push
jns
mov
popl
ror
lret
nop
sbb
adc
loop
imull
add
popf
xchg
js
xlat
dec
aas
out
sar
or
adc
lahf
pop
dec
pushf
jle
movsb
imul
pop
rolb
mov
lods
and
inc
es
out
ja
cmp
leave
fisttpl
hlt
call
sbb
imul
pop
or
sub
adc
out
cmp
fisubrl
cmpsl
cmc
fnsave
cmp
xchg
cs
push
shrb
hlt
fsubrs
pop
jae
mov
leave
gs
pop
sub
add
adc
jbe
jg
jo
xchg
sbb
add
or
test
cltd
movsl
stos
aad
and
cmp
adc
add
arpl
pop
lds
jne
sahf
and
lcall
aas
or
and
jge
lock
out
insb
adc
mov
icebp
test
sub
lods
lahf
cld
hlt
fwait
mov
lods
icebp
mov
mov
imull
xlat
or
xchg
mov
cmp
sti
test
sti
jecxz
mov
sbb
jl
jb
fnstenv
loopne
mov
adc
repz
dec
aas
xchg
icebp
inc
jmp
imul
jbe
dec
mov
mov
shll
inc
fldl
pop
xchg
jmp
pop
jp
mov
lds
and
pop
push
cmpsl
rorl
sub
xor
out
xchg
cmp
dec
inc
mov
shr
aas
out
cmc
cmp
fs
sbb
push
aad
cs
nop
call
xor
pop
ss
imul
pop
jge
shll
sub
test
out
xchg
inc
cli
into
pop
icebp
inc
sub
out
mov
lods
cs
outsl
stos
inc
dec
inc
pop
xor
xlat
jl
cmpb
dec
cli
cmp
jmp
pop
dec
aas
lcall
fildl
lret
add
jmp
clc
pop
xchg
iret
mov
sub
aas
sub
sub
pop
pop
sti
cmpsb
cli
scas
cmp
cmpsb
pop
icebp
mov
scas
xor
dec
jae
xchg
cmp
jne
push
jmp
in
out
mov
pop
sti
pop
push
mov
inc
push
out
lds
mov
add
push
push
sbb
mov
xor
xchg
cld
mov
dec
adc
jle
mov
mov
jne
mov
add
mov
add
push
lods
push
jae
mov
mov
inc
pusha
xchg
pop
lret
lret
xchg
add
stc
outsb
popa
sbb
out
mov
jecxz
and
mov
xor
adc
cmpsl
ret
pusha
in
mov
add
mov
sub
push
mov
je
mov
cld
xchg
std
in
xchg
mov
test
ja
mov
loop
js
adc
aaa
mull
popa
adc
add
sbb
lcall
movsl
jnp
dec
lods
lret
fucomi
decb
mov
insl
cmp
loop
xchg
icebp
adc
dec
outsl
ret
dec
adc
fsubp
cld
jmp
addr16
xchg
leave
pop
sub
mov
out
sub
into
bound
sub
scas
call
sbb
outsl
mov
cli
push
xchg
xlat
sub
dec
mov
push
sub
fiaddl
mov
fcoms
or
mov
cmp
push
xchg
test
in
addb
or
push
andb
dec
xchg
js
adc
jne
imulb
notb
shll
mov
push
fadd
adc
jno
push
aaa
or
mov
adc
insb
cs
stos
dec
adc
mov
outsb
cmpsl
sub
xor
clc
and
adc
jo
ds
outsb
inc
push
cwtl
lock
or
mov
pop
mov
mov
mov
xchg
sbb
pop
mov
sbb
dec
fistpll
and
add
add
sbb
xchg
js
jp
out
add
mov
sub
xchg
cmpsb
cmp
mov
loope
fistps
jns
add
lock
mov
enter
xchg
ja
add
push
push
cld
pop
shll
popl
iret
leave
mov
add
mov
cmp
sbb
push
push
sti
add
lods
popa
test
cltd
mov
mov
hlt
js
xor
arpl
orb
xor
in
xchg
out
mov
xor
cltd
scas
mov
lea
pop
cmp
or
add
in
inc
jbe
cmp
es
and
roll
stc
adc
sbb
jmp
shll
mov
jmp
push
cld
lahf
xchg
and
mov
adc
shlb
mov
cmp
xor
int3
cwtd
lods
cmp
xor
sti
push
loope
sub
adc
mov
ds
push
outsl
mov
cmp
inc
bound
mov
dec
dec
lcall
pop
xor
iret
push
pushf
and
mov
out
lahf
inc
pusha
and
shrl
push
in
jecxz
add
add
test
pop
lds
in
jo
inc
jle
push
xchg
arpl
sub
xor
pushf
loope
lret
das
out
mov
add
stos
mov
pop
test
ljmp
fmull
cmc
mov
xor
call
jecxz
outsl
imul
push
fnclex
ret
loopne,pn
pop
in
xlat
xchg
les
and
or
in
icebp
and
sub
push
cmp
test
es
ss
cmp
insb
add
jb
iret
push
adc
cmp
and
xor
push
aad
push
cmp
clc
dec
cmpsb
cwtl
fs
je
inc
adc
cmp
and
ljmp
cmp
je,pn
xchg
das
cmp
ljmp
aas
adc
imul
pop
add
mov
sbb
popf
xor
pushl
shl
or
xor
mov
enter
stc
xchg
roll
out
dec
inc
fdivrs
push
mov
lcall
sub
sti
and
mov
js
sbb
repnz
xchg
into
jb
lock
in
jns
stos
inc
and
mov
sbb
pop
push
sub
xchg
test
gs
or
sub
pop
mov
pop
mov
cmp
clc
sbb
std
clc
cmp
out
andb
jmp
cmp
pop
movsb
xor
jns
rcl
mov
xchg
mov
xchg
jp
or
xchg
cmpsb
xchg
fldl
lods
aas
xchg
fisttpl
movsl
or
mov
mov
sbb
fucom
adc
jge
in
sldt
or
out
xchg
icebp
mov
add
stc
hlt
int3
loop
sub
enter
xchg
sbb
fwait
loop
xchg
inc
mov
sahf
inc
jl
mov
xor
cs
sub
hlt
adc
adc
push
mov
mov
jp
jne
pop
sbb
dec
pop
outsb
pop
dec
jae
sbb
iret
mov
dec
xor
cmp
aas
cmp
mov
cli
addb
orl
mov
xchg
and
fadd
jno
xor
push
aad
mov
xchg
mov
and
fs
push
pushf
cld
les
and
rcrb
or
and
scas
test
aam
in
inc
bound
adc
aam
nop
pop
test
mov
pop
xor
hlt
xchg
jo
xor
adc
adc
pop
xchg
push
xor
gs
out
sbb
fistl
xchg
data16
dec
mov
mov
dec
add
adcb
jbe
mov
pop
loop
adc
test
cmpsl
js
push
and
dec
data16
and
push
inc
mov
call
sbb
push
mov
fadds
and
push
sub
fs
das
and
mov
pop
movsb
mov
out
and
outsl
iret
incl
adc
stos
test
push
repz
lahf
xlat
add
dec
ss
orl
jne
scas
xor
loope
xor
adc
sbb
xor
mov
test
jbe
fstps
jmp
dec
mov
rcrl
repnz
mov
out
sahf
pushf
push
ja
andl
push
fcoml
push
nop
sub
pop
insl
mov
rol
int3
mov
addr16
mov
xor
xchg
sbb
push
insl
cmc
jbe
cs
lods
xchg
les
sbb
inc
jnp
xchg
and
repz
out
aam
inc
sub
add
je
sbb
push
add
pop
jg
or
xor
sbb
mov
xchg
push
aas
xor
lds
jg
jae
dec
mov
inc
jle
mov
adc
stc
and
add
scas
arpl
movsb
push
mov
sub
dec
jne
push
lcall
sub
jo
jno
test
adc
lea
scas
push
xor
mov
pop
and
push
mov
inc
enter
pop
inc
sbb
cmpsb
xchg
mov
and
mov
sahf
mov
pop
xor
inc
insb
or
sahf
lea
xchg
adc
jg
rcrl
pop
outsb
test
leave
and
aad
mov
jp
hlt
xchg
and
in
jae
inc
mov
adc
popf
inc
xchg
std
call
jbe
mov
pop
test
push
ret
sub
stc
add
shr
xor
jne
jb
and
push
push
mov
out
jg
ss
add
ret
out
xchg
add
or
loopne
cmpsb
pop
stos
xchg
xchg
jmp
xchg
xchg
es
push
xchg
jo
jae
dec
jae
xchg
je
mov
jg
mov
fcom
xor
cmpsl
push
jecxz
inc
cwtl
pop
imul
std
pop
lods
ffree
xchg
fcmovnb
rclb
rorb
mov
sahf
cmp
cmc
in
or
push
fildl
mov
cld
int3
cmp
and
push
push
push
fwait
lods
or
dec
rclb
into
and
lods
leave
int
and
fs
and
enter
lea
dec
out
out
add
pop
inc
jno
sub
push
cmp
lcall
dec
dec
dec
mov
pop
cmp
imulb
jmp
pop
rorl
push
arpl
push
loopne
scas
jmp
aaa
hlt
imul
das
iret
or
fwait
dec
idivl
out
out
xchg
cmpsb
testl
mov
and
lods
cltd
std
mov
mov
push
xchg
mov
scas
in
mov
arpl
jb
sbb
or
lods
cmp
cmp
xor
rolb
inc
fdivrl
mov
add
mov
mov
xchg
into
cmp
and
into
popa
or
in
dec
lods
aam
ret
sti
pop
imul
adc
mov
xor
test
bound
aam
sbb
das
je
add
mov
adc
adc
mov
dec
loop
pop
shll
jns
dec
ljmp
pop
faddp
mov
pop
jo
push
cmpsl
or
adc
outsl
outsl
pop
sbb
aas
xchg
mov
pop
fwait
and
jb
icebp
pop
push
pop
insb
sbb
or
cmp
inc
sub
and
jo
dec
nop
pop
mov
inc
test
in
push
sub
stos
sbb
pusha
fsin
jl
in
mov
ljmp
daa
lahf
inc
repnz
in
cs
fincstp
lock
ja
mov
pop
add
or
aam
stos
out
jle
fnsave
iret
pop
inc
mov
lret
and
mov
xchg
cmp
ret
and
iret
aas
mov
jnp
mov
dec
mov
sub
nop
ja
scas
leave
lret
bswap
ret
out
dec
repnz
fisttpll
stos
push
sub
loop
jp
xchg
fnsave
pop
rcrl
xor
xchg
and
sarb
pushf
push
loopne
or
jmp
sbb
push
pop
movsb
mov
daa
jne
pusha
fidivrs
and
add
ret
addb
pushf
int3
push
mov
es
mov
cmp
ret
into
and
sub
cltd
sub
mov
movsl
pushl
aas
mov
xor
cmp
push
ss
mov
movhps
inc
cmp
pop
in
aas
lcall
push
dec
cmc
fwait
in
sub
pop
cld
shl
jmp
dec
lea
andb
mov
push
sbb
les
mov
bound
xchg
pushf
mov
push
sub
ret
cmp
data16
test
cmp
push
jnp
push
in
jecxz
je
mov
adc
push
mov
push
add
subb
mov
inc
or
fsubrp
add
inc
push
mov
out
cmp
idiv
pop
lret
jnp
inc
addr16
sub
mov
fdivl
loopne
lret
flds
mov
mov
mov
call
pop
pushf
push
xor
sti
push
sti
cmp
lahf
test
push
lea
xor
cmpsb
add
xor
dec
jle
ret
pop
sbb
dec
roll
pop
cmpsb
lds
jns
mov
bound
out
fadd
lds
push
cmpl
mov
cld
cltd
pop
aam
aas
xchg
jl
mov
xor
ljmp
jmp
pusha
sbb
lea
fidivrl
mov
rol
lahf
test
mov
cmp
or
inc
push
cmp
pop
dec
shlb
xchg
or
mov
cli
pop
push
shl
adc
xlat
jno
jl
sahf
psllq
adc
inc
sbb
leave
cli
cmp
fstl
les
and
inc
mov
and
mov
sub
mov
loop
into
dec
ljmp
int3
sub
or
and
stos
mov
in
insb
aad
mov
cmp
mov
repnz
pusha
xchg
cmc
pop
cmp
xor
fildl
inc
mov
inc
sub
jp
sti
notl
pop
inc
mov
addr16
adc
cmpsb
dec
xor
lock
imulb
addr16
in
sbb
pop
leave
jl
pop
add
rcr
sbb
dec
fidivrs
addb
jno
rcrb
or
mov
push
and
mov
jne
std
mov
fidivrs
aam
daa
in
jle
lds
sahf
mov
xchg
cmpsb
adc
aas
jno
push
mul
push
jp
dec
adc
jle
push
push
adc
jp
jp
in
cmpsb
mov
push
jle
push
ds
repz
jb
push
test
fists
xchg
mov
dec
repz
sub
sub
cmp
add
mov
ljmp
rcll
jl
ret
mov
mov
sub
sub
add
xchg
fcompl
pop
cmpsl
outsb
cltd
mov
pop
in
pop
jo
or
in
fsts
fwait
repz
shlb
cmp
lds
aas
jae
dec
push
xchg
rcrb
and
pop
cmc
or
cmp
inc
stc
push
adc
cltd
testl
into
ja
ja
insl
add
js
sbb
mov
scas
sbb
adc
js
out
pop
imul
js
inc
xor
mov
sub
imul
lods
add
push
inc
dec
nop
cli
icebp
rolb
out
cwtl
data16
push
add
lods
adc
incb
add
bound
fisubrs
pop
jmp
adc
sbb
gs
pop
cmp
pop
pop
fidivrl
push
and
jle
jmp
in
mov
push
cmc
lock
cmp
fcmovu
insl
fsts
insb
add
stc
sbb
mov
adc
out
fs
sti
fwait
test
xchg
inc
scas
aad
xor
push
fidivrl
lods
dec
das
dec
shrl
in
jmp
jae
push
lcall
int
push
pop
mov
ret
jmp
lds
cmp
mov
int
enter
data16
jg
push
sbb
xchg
fwait
dec
mov
movsb
mov
ficompl
sbb
lahf
lods
daa
mov
mov
mov
ss
mov
aad
sbb
pop
cli
mov
lods
dec
pop
clc
int3
loopne
push
mov
add
repnz
mov
clc
mov
fiadds
aas
ss
mov
jne
ds
in
jo
nop
bound
xorl
sahf
jp
mov
imul
popf
loope
lock
jns
push
add
mov
mov
stos
cli
loope
arpl
adc
movsl
daa
mov
inc
pop
mov
movsb
mov
bound
arpl
stc
sub
cs
cwtl
into
push
test
sub
xor
xorl
notb
icebp
xchg
push
pushf
sub
sbb
popf
mov
lahf
mov
mov
sbb
sub
cmc
mov
and
in
cltd
dec
push
lds
jp
or
mov
test
fsubrl
sub
jmp
xor
and
and
out
orb
aad
cwtl
and
xchg
inc
sti
push
dec
push
push
lock
mov
dec
lcall
aad
outsb
pop
or
inc
aad
jne
adc
inc
ja
and
xchg
jg
imul
ljmp
pop
ficompl
movhps
test
inc
adc
jo
xchg
fwait
sbb
xchg
inc
cld
stc
inc
leave
sti
fwait
lods
jno
sub
sub
repz
data16
scas
mov
mov
loopne
push
popa
mov
out
add
cmp
jg
and
cmp
and
push
lock
fmull
jl
jne
jmp
in
xchg
int3
lcall
out
dec
push
int3
arpl
les
lock
sbb
xor
mov
in
mov
shlb
fstpt
dec
fwait
pushl
enter
jge
jp
sub
aam
mov
mov
mov
jns
push
push
not
mov
jmp
mov
jnp
or
rclb
loop
jno
clc
sarb
mov
pop
mov
rcrl
inc
movb
lahf
insl
push
xor
cli
and
fdivl
gs
xor
stos
js
faddl
add
rdtsc
hlt
mov
sbb
repz
das
jge
aaa
adc
inc
lods
gs
push
and
in
or
mov
es
mov
sbb
mov
cs
sub
push
jns
adc
mov
mov
sbb
mov
test
cmpsl
push
insb
xchg
xor
rcrb
mov
int
xlat
push
add
jmp
jl
cmp
stos
push
sub
push
pop
pop
es
data16
jb
mov
xlat
adc
loop
lea
cmpsl
pop
add
dec
push
pop
call
dec
jl
or
add
push
push
cltd
aas
xchg
lods
lods
xlat
cmpsl
mov
iret
cmpsl
aam
jb
jp
or
push
add
call
into
mov
addl
outsl
mov
lea
insb
mov
aaa
incb
mov
adc
inc
in
cmp
jp
cld
push
ds
insb
shll
or
dec
mov
out
mov
mov
xor
rolb
in
or
sbb
cltd
cmp
xor
out
sbb
sbb
sub
inc
out
jb
cmpl
pop
mov
subl
jbe
lods
mov
enter
and
aas
or
xchg
or
test
sbb
add
andl
jmp
xor
inc
insl
es
mov
add
cmp
scas
aaa
mov
insb
sbb
mov
jp
xchg
inc
add
loopne
fwait
jmp
movsb
lods
loopne
stc
cli
mov
mov
or
nop
pop
into
push
sub
cli
mov
jmp
xchg
ja
sbb
cltd
aaa
rolb
ret
dec
or
mov
divb
insb
and
jg
xor
nop
and
xor
shlb
hlt
xchg
add
pop
out
int
sbb
jnp
jb
movsb
pushf
sbb
and
cmc
xchg
jns
sahf
je
jno
xor
rcll
jns
pop
movsb
adcb
movsb
xchg
faddl
pop
inc
xchg
roll
movsb
xchg
pop
fwait
int
fsubl
shl
jb
insb
mov
dec
out
xchg
movsl
loope
outsb
pop
xor
cmp
lods
mov
addr16
ja
adc
jecxz
out
mov
jle
push
movsl
xchg
jo
aaa
jmp
lds
add
cmp
imul
ja
cwtl
data16
lret
fcmovb
arpl
pop
int
xchg
lret
pop
xlat
iret
fists
lret
in
jns
or
cmpsl
daa
sbb
jo
xchg
xchg
iret
out
jnp
or
xor
sub
sub
cltd
cmp
push
rorl
sub
push
idivl
addr16
adc
xchg
jl
stos
arpl
cmp
movsl
movsl
call
in
jmp
sub
lret
adc
pop
stos
push
andb
gs
sbb
outsl
add
roll
je
sbb
sub
imul
fs
fisttpl
cmpsl
enter
cmpb
jmp
sti
cltd
add
xchg
sub
or
fsts
pop
mov
and
mov
xor
ja
mov
push
repnz
dec
dec
ja
push
leave
pushf
sub
in
pusha
lds
pop
dec
shll
call
dec
bound
rol
cmpsb
inc
lahf
adc
aad
jbe
push
lret
ljmp
inc
outsb
push
ja
mov
pop
cmc
imulb
imul
xor
data16
js
jg
jmp
mov
insl
jne
xchg
fldt
test
scas
mov
cli
mov
jo
test
cmp
ffree
bound
fldl
insb
xlat
or
leave
mov
add
test
push
push
aam
and
add
or
inc
mov
sbb
jl
mov
les
mov
lea
jl
fldpi
xchg
shlb
and
dec
pop
stos
mov
mov
cld
test
mov
call
out
and
sbbl
imulb
sub
fistl
lret
lock
stos
inc
sub
push
add
jns
add
aas
ficomps
push
es
icebp
test
and
mov
dec
dec
xchg
hlt
lret
scas
push
mov
sub
pusha
mov
lods
pop
sahf
cmp
pop
xchg
sar
sbb
fcmovb
fwait
shll
mov
jmp
cmp
jecxz
jmp
xchg
loopne
fsubrs
in
sbb
fmull
cmp
and
lock
sub
cmpsb
dec
push
push
add
les
cmpsl
bound
mov
jne
scas
lret
jmp
sahf
cmp
mov
test
and
push
mov
or
mov
pushf
fdivrs
sbb
xchg
fsubrp
nop
mov
sbb
pop
xor
sbb
testb
lods
sbb
lahf
adc
mov
pop
data16
pop
xor
imul
inc
dec
push
lock
mov
aad
mov
adc
mov
insl
ret
sub
push
or
hlt
cmp
jbe
iret
add
cmp
push
sahf
or
lret
adc
mov
add
mov
bound
fadds
lret
test
das
add
or
sbb
addr16
inc
pop
daa
and
jmp
xor
cli
cmc
into
mov
pusha
inc
data16
mov
cltd
push
fildl
mov
push
and
sbb
das
les
inc
jno
lock
lods
cmp
nop
adc
mov
fldl
mov
repz
sarb
enter
pop
popf
adc
out
lahf
lock
cmp
jns
push
adc
sub
stos
js
frstor
cmc
jmp
std
outsl
mov
cmc
out
das
lods
fisubl
sub
or
sbb
fidivs
data16
jae
push
lds
xor
ja
scas
hlt
mov
dec
insb
inc
mov
dec
and
or
dec
out
xchg
out
loopne
test
fs
xor
ja
adc
in
test
or
add
bound
and
dec
push
bound
loope
ret
xchg
xor
cltd
cmp
and
mov
sbb
or
popf
inc
fwait
xchg
dec
je
add
cmp
repnz
add
mov
aaa
outsl
push
or
insb
in
stos
cmpsb
mov
push
jge
pusha
ljmp
rol
xlat
mov
popl
mov
mov
cltd
sub
pushf
push
and
cmp
add
sbb
jo
xor
cmc
hlt
and
add
xchg
out
or
add
cmpsb
add
xchg
sarl
jns
and
dec
rcrb
push
iret
pop
push
sub
or
sbb
mov
lret
mov
outsb
or
rcrl
stos
dec
and
jb
mov
daa
add
jge
dec
jae
les
aas
dec
jecxz
jmp
in
mov
dec
jecxz
in
lods
adc
cwtl
cmp
sahf
or
mov
aad
insl
cmp
or
dec
pop
jl
fists
pushf
flds
ret
cwtl
subl
mov
dec
jge
or
repnz
xchg
and
sahf
inc
les
push
xchg
xor
sub
fwait
icebp
pop
ljmp
and
cmp
and
pop
outsb
popf
xchg
xor
out
pop
sub
adc
dec
mov
sbb
aaa
inc
fisttps
cwtl
add
mov
push
test
lret
and
mov
fcoms
scas
ja
jbe
arpl
rorl
jns
sub
add
lods
or
negl
mov
add
clc
notl
mov
test
jg
adc
inc
repnz
iret
sahf
imulb
call
fists
mov
shr
mov
cmc
mov
in
xchg
pop
stos
adc
add
inc
fs
or
push
movsl
sbb
mov
inc
adc
ss
pop
adc
add
pop
jo
sub
bound
jp
fbld
aaa
inc
ficompl
mov
loope
dec
test
movsb
xchg
mov
jl
call
sub
fprem1
enter
inc
gs
dec
inc
mov
out
outsb
div
fistpl
mov
ljmp
add
in
adc
adc
xlat
arpl
ret
lock
popa
add
ret
xlat
hlt
inc
mov
test
push
lock
scas
and
adc
cmpsl
notl
mov
mov
ja
adc
push
movsl
xchg
fmuls
inc
imull
add
js
dec
shll
mov
popf
add
aaa
sar
jge
je
mov
popf
mov
pusha
mov
mov
jbe
ds
cld
sub
sub
and
jge
dec
cmp
add
push
jle
jno
outsb
add
mov
mov
mov
adc
cmpsb
shrb
enter
fiaddl
sbb
push
pop
stos
add
ljmp
add
outsl
into
pop
mov
add
pop
xor
repz
insb
mov
loopne
movsl
mov
sub
jns
js
orb
sbb
clc
hlt
out
outsl
mov
sub
js
push
mov
dec
test
mov
iret
lea
mov
cmp
xchg
and
cwtl
lods
pop
sahf
mov
mov
jl
mov
cld
into
jmp
cltd
jmp
xchg
stos
push
mov
scas
push
ret
iret
sub
pusha
dec
fs
and
mov
jle
ret
or
imul
mov
mov
jns
jnp
adc
pop
cmpsb
cmp
pop
rclb
pop
fdivrp
sub
inc
cmc
dec
mov
pop
cld
pop
or
add
arpl
jge
into
adc
jl
cmp
sbb
add
jae
xchg
push
int3
cwtl
and
dec
xchg
pop
pushf
outsb
mov
mov
inc
add
leave
aaa
mov
bound
jl
dec
int3
push
lock
repnz
jge
jo
mov
cmp
sbb
xchg
sbb
add
fildll
scas
sub
stos
adc
int
add
int
adc
hlt
in
popa
pop
sbb
scas
add
xchg
cmc
jns
cld
mov
xchg
fstp
outsl
in
jecxz
test
loopne
xor
jbe
sub
sar
pushf
sub
icebp
jne
in
pushf
xchg
hlt
xchg
mov
rcrl
dec
lods
push
inc
in
xchg
lret
mov
ret
xlat
push
xchg
jne
xchg
cmp
xor
xchg
leave
inc
mov
xchg
test
or
xchg
ljmp
inc
mov
inc
xchg
int3
insl
cmp
dec
sbb
in
ljmp
sahf
fcoms
and
idivl
pop
lret
sti
hlt
cmpsb
pop
dec
xchg
addr16
inc
sub
pop
ret
push
fisubl
dec
sbb
pushf
or
sub
or
or
pop
out
lret
repz
popf
mov
loop
bound
andb
fisubrl
push
xchg
jbe
in
sub
and
cmc
ja
xor
sti
adc
and
push
xchg
mov
cmp
or
push
dec
adc
daa
insl
jb
lret
inc
jo
dec
pusha
out
test
je
add
cmp
adc
and
pop
cmp
loop
cmp
xor
pop
xor
jne
enterw
jg
push
fisttps
mov
mov
adc
lods
push
xchg
jle
stos
fistps
adc
sub
mov
bound
int
add
jb
dec
rcrb
ds
push
push
insl
loop
arpl
pushw
jb
mov
cmpb
push
or
mov
mov
int
popf
xchg
lahf
js
jp
inc
rcr
je
dec
jb
shr
or
xchg
jp
fisubl
int
in
leave
ds
das
inc
fildl
shrl
jnp
ss
cmp
cmp
clc
pop
iret
dec
xlat
insb
sub
aam
inc
pop
mov
les
push
cmp
xchg
jae
testl
xchg
iret
dec
lret
add
jg
xor
lret
mov
add
loope
inc
faddl
mov
inc
dec
fsubrl
add
inc
mov
sub
rorb
pop
xor
dec
ret
loopne
aad
popf
arpl
std
pushf
push
mov
xchg
ret
aam
js
das
cwtl
mov
cmp
sbb
lock
mov
scas
sub
out
pop
bound
cmp
xor
cmp
ret
push
mov
jle
push
add
pop
stc
push
inc
popf
dec
shll
leave
lahf
add
jp
sbb
nop
push
cmp
xor
test
inc
and
outsb
add
sbb
jbe
popf
cmpsb
push
sbbl
movsb
mov
mov
out
add
aam
lea
int3
icebp
mov
mov
rcrl
shrl
ja
sbb
pop
lret
or
pushf
jl
mov
ja
jl
xchg
add
dec
ja
sti
arpl
pop
adc
push
pop
adc
pop
dec
and
add
data16
ficoms
int3
loope
xchg
jno
daa
inc
test
and
xchg
mov
addb
jp
pop
pusha
lds
int
sbb
sub
cs
shrb
enter
sub
add
fcoms
push
xchg
push
mov
aam
ret
cld
addl
lahf
jmp
xchg
or
pop
iret
test
imul
insl
pop
xchg
ljmp
adc
adc
incb
cmp
adc
decl
xor
or
mov
gs
push
mov
fcoms
mov
sbb
sbb
int
adc
not
movsl
pop
std
xor
mov
ret
and
pop
ja
or
rcrl
call
jecxz
mov
mov
sub
mov
in
int
stos
push
mov
pushf
jno
sub
adc
push
popa
mov
mov
jg
mov
lea
pop
dec
iret
add
adc
daa
faddl
or
arpl
jnp
sbb
dec
test
leave
jle
pop
scas
pop
sub
adc
int3
xchg
mov
dec
pop
or
pop
mov
sar
stc
dec
fmull
xor
jne
rorb
and
mov
or
leave
imul
inc
adc
fidivrs
bound
enter
pop
jno
mov
cld
lock
and
popl
rol
sub
std
cltd
sbb
lock
insl
dec
jle
enter
addb
ss
cmp
jno
mov
fs
add
sbb
ret
subl
cmp
cmp
in
cmc
push
cs
out
mov
cld
inc
jmp
sbb
add
jno
repz
dec
pop
lret
mov
mov
enter
fwait
mov
ret
mov
sub
arpl
inc
in
adc
mov
xorb
roll
out
pusha
mov
in
cmp
pop
xor
lea
dec
les
fisubl
cwtl
ret
add
test
ss
outsl
pop
mov
add
pop
aad
mov
cmpsl
insl
divl
mov
xor
or
mov
aad
pop
in
cmp
cmpsl
popf
dec
cmp
vcvtsi2ss
mov
jmp
lds
sbb
cmpsb
push
or
lcall
cli
mov
push
sbb
pop
das
pop
fcmove
pop
hlt
dec
sar
stos
popf
repz
mov
les
push
push
in
jmp
xor
lods
cmp
xchg
scas
mov
jge
test
pop
pop
outsb
add
loope
int
sbb
test
out
repz
adc
out
std
repnz
test
lds
mull
xchg
icebp
daa
mov
or
push
xor
in
pop
out
lea
jno
out
mov
mov
xor
dec
rol
xchg
mov
jno
mov
jp
fcoml
outsl
in
adc
decl
jge
imul
jns
jae
xlat
repz
xor
sahf
sub
aaa
sub
pop
icebp
lret
das
inc
xchg
pop
inc
sub
ret
xchg
adc
outsl
adc
ja
jb
test
rolb
lea
and
sub
hlt
xchg
add
gs
incb
mov
mov
adc
fs
pusha
test
or
mov
cmpsb
mov
pop
or
inc
mov
cmp
clc
xchg
outsl
push
or
cmp
adc
cmpsb
cmp
icebp
push
scas
cmp
loopne
pop
fisttps
dec
mov
push
add
loopne
sbb
jno
xor
push
nop
fcomps
mov
mov
mov
je
pop
jae
lea
popl
xchg
js
mov
daa
out
pop
scas
movsl
mov
pop
test
xor
subb
js
mov
or
aad
roll
clc
jge
adcl
jp
fs
mov
sbb
daa
jo
mov
push
lret
lock
add
call
mov
mov
jl
loop
fstpt
add
fidivrl
pushf
ret
in
push
mov
mov
ficoms
mov
cmpsl
aas
or
sub
ljmp
and
jbe
ja
lds
mov
stc
xorl
fidivs
popf
adc
into
mov
out
js
jg
inc
dec
cli
fwait
sbb
adc
sarl
lods
mov
aad
test
pusha
jbe
mov
adc
ret
stos
xor
es
addr16
pop
icebp
daa
jmp
cs
leave
ja
in
mov
movsb
mov
dec
mov
loop
ss
cmc
cltd
add
in
les
xchg
int3
adc
cmc
mov
in
dec
push
fldt
ss
aas
mov
cmpb
sbbb
icebp
sti
pop
data16
jl
cmpl
xchg
or
mov
imul
mov
in
xchg
aaa
or
fsubrs
cs
lcallw
sbb
xor
dec
push
mov
sub
lcall
mov
xchg
call
pop
xchg
es
test
jo
adc
cltd
mov
adc
adc
leave
cmp
test
adc
push
in
sahf
enter
hlt
shrb
rclb
rorl
std
rcr
push
test
jo
movl
add
and
or
and
scas
imul
pushf
and
das
push
jns
and
dec
inc
ljmp
jge
adc
adc
ret
sbb
outsb
test
mov
and
rorl
aaa
sub
iret
sti
mov
insl
dec
dec
aas
jb
nopl
or
mov
fidivl
add
pop
mov
lds
pop
push
je
jp
int
add
scas
sbb
or
es
mov
divl
jmp
jl
lock
into
pusha
enter
shrb
cmpsl
xchg
push
mov
daa
cs
ret
push
outsl
inc
sbbb
ss
gs
out
in
lret
leave
sbb
repnz
fiadds
cmp
inc
cmc
jae
add
push
adc
dec
ret
jns
mov
arpl
pop
repz
nop
add
sbb
sbb
adc
or
subl
inc
mov
ja
lods
mov
sub
dec
jne
pop
pop
popa
enter
sbb
adc
push
adcl
push
ljmp
sub
outsl
xchg
stc
lea
push
scas
ja
fistpl
stos
pop
cwtl
setp
adc
push
ret
mov
adc
push
mov
call
les
sub
xor
mov
pop
lds
push
sbb
in
daa
rcrb
inc
mov
jns
and
mov
push
mov
sbb
aaa
xchg
xorl
cmc
xchg
sub
sub
lcall
xor
outsl
shll
add
sub
cld
push
stc
cmp
sub
xchg
xchg
cmp
lahf
pop
lock
jns
jbe
cs
pop
pusha
leave
incl
mov
or
ds
push
movsl
out
lahf
mov
xchg
and
xchg
or
or
stos
push
in
scas
push
xor
mull
mov
jno
bt
lcall
push
jae
lea
mov
sbbb
iret
mov
lock
inc
out
lea
adc
gs
mov
mov
pop
xor
sbb
mov
cmpsb
daa
and
or
jge
add
int3
sarl
jo
lcall
in
cmpsl
sbb
mov
xchg
pop
add
mov
into
cltd
loope
mov
xor
out
fistps
adc
les
jmp
pop
adc
jp
loopne
xchg
or
mov
shll
fidivl
ds
xchg
adcw
repz
adc
cmc
stos
cld
out
sbb
testl
adcb
adc
repnz
jbe
cs
cmove
jbe
xchg
movsl
mov
rcll
cmpsl
cli
sub
call
and
pop
movsb
cmp
fwait
push
mov
data16
pop
in
adc
ss
mov
fcoml
cmp
sbb
cmp
test
mov
insl
dec
dec
xchg
xchg
cld
js
inc
cld
xorb
add
leave
dec
cltd
push
and
ss
arpl
adc
pop
mov
jo
pushf
cwtl
hlt
mov
js
push
arpl
add
out
fisttpll
imul
jmp
jle
sub
dec
dec
sti
in
pop
movl
cld
inc
mov
mov
ret
pop
in
out
sbb
and
jle
cmpsl
adc
cmp
pop
pop
sbb
sub
vmovups
stc
and
cld
sbb
ret
enter
dec
clc
jo
loop
int3
or
and
cmp
shrl
xchg
insb
add
clc
sub
sub
xchg
in
leave
jne
jbe
mov
fimuls
and
and
data16
fstl
inc
test
scas
xor
fimull
sub
cmp
hlt
ljmp
inc
data16
outsl
pop
out
pop
popl
out
sti
and
rolb
pop
xchg
lret
movb
repnz
imulb
out
decb
jecxz
adc
test
push
frstor
repz
jns
cmpsl
fimuls
pop
xchg
pop
shll
imul
mov
mov
cld
xchg
sti
cs
gs
sub
cmp
or
xor
mov
cmp
movsb
mov
and
pusha
fisubrl
stos
cmp
and
inc
cmp
pop
mov
xchg
dec
test
mov
pop
lods
adc
jl
push
test
dec
jl
dec
add
daa
and
sbb
test
pop
stos
in
repnz
push
add
and
out
pop
or
fdivl
call
and
jge
loop
ret
adc
xchg
xor
rorl
xor
std
xchg
cmp
xlat
pop
mov
bound
mov
or
sub
xor
aas
add
idivb
cmc
pop
xor
mov
imul
mov
push
das
xor
push
cs
shl
decb
pop
outsb
cmp
inc
test
sbbl
loopne
pop
cmpsb
cmpsb
xlat
mov
push
cmp
and
xor
lahf
pop
cmpb
push
ljmp
fisubs
adc
adc
sbb
stos
jo
mov
cmp
in
cld
pushl
test
and
lea
std
xchg
inc
lea
cmpsb
pop
inc
jno
clc
push
adc
in
mov
int
insb
jo
push
xchg
mov
jne
xchg
add
and
fmull
mov
icebp
adc
xchg
mov
ret
pop
xor
loop
jle
mov
add
gs
pop
dec
es
lods
add
imul
outsb
mov
sbb
sbb
xor
repz
push
ds
repz
cmp
mov
aas
jge
cmp
jbe
add
outsl
insl
xchg
mov
cmp
out
fisubrs
movsb
mov
jecxz
shlb
inc
aas
outsl
sub
adc
add
movsb
dec
add
xor
test
pop
std
jb
stc
sbb
arpl
testl
loop
int3
cmp
adc
xchg
add
adc
dec
jnp
mov
adcw
insl
repz
pop
outsb
jle
mov
clc
out
lea
outsl
push
mov
sub
mov
or
jae
repz
add
ja
popf
xor
sbb
push
cmpsl
mov
pop
add
das
stc
jmp
or
add
cmpsl
in
push
int3
insb
mov
mov
or
gs
int3
std
pop
sub
and
pop
cmpsb
mov
mov
xor
fildl
inc
or
mov
xchg
dec
sbb
out
sbb
rclb
lea
inc
and
jne
push
aam
sbb
pop
imul
sbb
cld
ss
dec
mov
popa
cmpsb
dec
push
inc
xchg
setns
pop
dec
fs
out
cmp
lea
cmp
mov
out
mov
cmc
pop
inc
xchg
ss
sub
sarl
adc
sahf
xchg
inc
push
rcr
cmp
sahf
dec
and
aad
mov
add
sbb
inc
fsts
mov
add
mov
ret
pop
mov
or
cmpsl
and
ficoml
fcmovbe
xor
jo
call
out
push
adc
mov
aam
sbb
nop
xor
out
dec
lcall
ja
stc
int
mov
inc
loop
add
out
xchg
test
es
push
pop
or
mov
add
negl
pop
pop
jl
and
mov
in
cli
idivb
stc
dec
test
movsb
cmp
aad
mov
shl
dec
add
mov
xchg
fnstenv
cmpsb
les
out
sbb
adc
push
add
sub
fs
mov
pusha
leave
aaa
arpl
and
pop
ja
fbld
pop
cmp
jne
cmc
insl
mov
add
pop
mov
inc
pop
out
stos
in
mov
shrb
sbb
sbb
adc
cmpsb
popf
mov
adc
dec
add
push
dec
jae
and
dec
jne
mov
push
pop
or
cmp
test
popl
sbb
push
cmp
pop
cmpsb
push
fcoms
test
popf
or
adc
mov
mov
jb
fistpl
repnz
packuswb
int3
fnsave
xor
insb
cs
mov
ret
fildl
cmp
aas
aas
cli
lret
xchg
mov
ret
pushf
push
inc
out
inc
pop
ret
fcmovnb
sbb
loop
lods
and
ds
sub
mov
hlt
insl
mov
int3
push
jle
jl
dec
out
mov
ljmp
xchg
es
adc
fadds
jae
dec
mov
lret
pop
das
or
in
mov
bound
and
dec
ficoms
adc
adc
push
stc
xor
jecxz
ljmp
mov
xchg
in
pop
je
negl
sub
pop
push
mov
lods
sub
push
lds
jmp
pop
rorl
mov
mov
xchg
rorl
push
pop
lcall
in
ljmp
and
imul
add
mov
repz
shrl
add
in
in
push
imul
mov
std
cmp
pop
cmpsl
cmp
scas
xchg
leave
xchg
pop
mov
inc
in
stc
push
loopne
sub
std
nop
cld
cmpsb
dec
cwtl
push
andb
and
fwait
stc
sbb
lahf
in
outsl
sub
les
cmp
js
data16
ss
pop
scas
pop
test
xor
lods
fs
cmpsl
int3
sti
inc
in
daa
ret
aad
mov
dec
cmp
scas
popa
stos
mov
mov
js
je
in
out
aaa
sub
push
fcompl
and
push
test
or
stos
adc
mov
sub
sub
aas
out
push
pop
ds
out
mov
ret
xchg
push
mov
sub
jg
imul
fcmovnu
mov
ret
roll
addr16
jge
mov
stc
push
push
mov
decl
popa
rcr
decb
adc
lret
mov
xchg
adc
push
add
jl
sbb
push
cmp
mov
adcl
gs
daa
cmp
dec
lcall
jle
lods
scas
cmpb
dec
jecxz
mov
jo
arpl
addr16
fisubl
orl
cmp
jl
mov
xchg
scas
adc
mov
clc
out
call
xchg
sbb
popa
neg
mov
addr16
mov
xchg
popa
cld
mov
lcall
fisttps
pusha
gs
icebp
push
jne
xchg
cmp
mov
jnp
add
movsl
jbe
out
cmp
xchg
jnp
clc
fisttpl
cmc
pop
pop
call
popa
add
test
jp
xchg
sub
sbb
lea
sti
int3
in
push
adc
dec
out
push
in
dec
jb
or
cs
outsl
mov
out
xlat
push
mov
repz
sbb
jb
je
out
xchg
test
inc
push
sbb
adc
int
push
std
mov
xor
inc
out
nop
pop
out
jp
add
adc
push
sbbl
rclb
rorb
hlt
popf
xor
pop
aad
or
and
mov
movsb
in
sbb
mov
ljmp
push
lods
lea
mov
nop
cs
movsb
enter
fisttpl
fdivs
loope
push
shl
dec
dec
push
sahf
fwait
and
mov
clc
pop
xlat
xchg
jnp
stos
pop
dec
push
sub
lods
shr
mov
je
out
jecxz
add
leave
aas
fwait
popa
test
cltd
ret
repz
pop
adc
push
inc
mov
mov
insl
lods
scas
aas
shrb
cmp
jo
aaa
sbb
cmp
sarb
add
jns
add
fmul
lds
fidivl
push
enter
inc
repnz
outsl
inc
inc
inc
sbb
xchg
inc
gs
stos
test
and
xor
adc
popf
add
subl
shlb
imul
test
test
xor
hlt
mov
add
das
loopne
inc
int3
pop
insl
cmp
fldl
xor
mov
push
aad
lods
jl
mov
mov
ja
lcall
sarb
bound
aad
cs
pop
or
and
ret
scas
jg
fstpl
in
mov
jmp
int
mov
outsl
sub
jns
xchg
sbb
sbb
jg
xchg
addr16
jno
push
mov
popf
cmpsl
adc
jmp
das
push
inc
jle
scas
jns
pop
sub
mov
sub
sub
xchg
lods
cltd
cmpsb
push
xchg
mov
rcrb
cmp
and
add
push
jge
push
cmp
outsb
gs
aaa
clc
stc
outsl
das
jg
icebp
sub
sub
xchg
testb
and
sub
add
mov
nop
std
je
flds
lds
jle
xor
jle
xor
clc
mov
sbb
ja
popa
xchg
xchg
and
out
shrb
sub
jns
mov
fsubs
mov
cmp
out
test
icebp
mov
or
xchg
inc
aam
inc
lret
add
dec
jo
aaa
and
sbb
out
adc
pop
mov
xorl
adc
jge
jnp
leave
or
adc
cltd
pushf
aad
and
push
imul
test
sub
popa
clc
pop
cmpb
in
xchg
fisttpll
je
sbb
js
aaa
pop
inc
pop
mov
data16
arpl
shrl
sahf
or
jno
add
nop
js
lahf
or
outsl
push
jmp
loope
divl
nop
mov
inc
inc
stc
inc
mov
push
in
cwtl
push
inc
pop
in
cld
cmpsl
aad
jo
shll
xchg
jne
or
xchg
sub
inc
lea
movsl
jge
push
je
pop
popf
fwait
js
or
jnp
add
mov
jmp
add
xchg
dec
shll
lret
mov
lcall
mov
rclb
inc
stc
nop
imul
add
jno
fisubrs
push
cmpsb
repz
push
cmc
repz
xchg
out
loopne
pop
out
mov
imul
xchg
xchg
xor
push
cmp
fimuls
sysenter
push
jl
mov
push
inc
and
insl
lcall
xor
jbe
ret
std
cmc
sbb
lret
xchg
les
pop
add
mov
lds
cmpb
pop
shrb
mov
loopne
add
sub
adc
push
jp
xchg
push
scas
mov
cmc
cmp
adc
jnp
sub
pop
cmp
mov
add
movsl
adc
rcl
out
mov
xchg
sbb
lahf
or
jp
inc
cmp
and
cmp
testb
mov
cmpsb
fists
push
out
mov
jle
lea
or
xor
inc
xchg
fnstsw
out
lcall
scas
fnstenv
leave
insl
pop
pop
mov
fdivl
into
mov
dec
imul
adc
mov
add
xchg
pushf
sub
adc
xor
cmp
je
cmp
or
scas
jle
test
loope
xor
xchg
pop
push
mov
sbb
sbb
loope
out
dec
dec
mov
mov
scas
aaa
sbb
mov
push
test
jno
pop
es
cmpsl
add
cli
cld
inc
sbb
testb
xchg
add
cld
insb
testb
cmp
pop
in
mov
mov
sbb
loop
mov
xchg
pop
outsl
nop
imul
ss
cmp
xchg
mov
mov
mov
or
or
jmp
test
dec
cltd
in
mov
push
mov
push
pop
test
sub
push
xchg
scas
jno
out
pop
iret
int3
insl
insl
xchg
adc
jo
jno
dec
clc
loopne
mov
aad
sub
push
loop
movsl
mov
lea
pop
ret
les
jg
shll
sbb
adc
lahf
ja
test
popa
adc
aad
inc
out
stc
adc
fidivrs
lahf
sbb
pop
and
mov
sub
push
fcomip
ja
fmull
xchg
xchg
mov
sub
add
das
xor
in
mov
jae
mov
sbb
sub
pop
mov
popa
fistpll
stos
mov
xchg
jnp
ret
push
rorb
mov
lea
push
in
dec
scas
testl
out
call
data16
mov
lock
mov
cltd
shrl
popf
cmp
out
adcb
push
loope
jle
mov
cs
call
push
add
rcll
inc
jae
mov
mov
xor
je
push
or
imul
rcll
mov
shlb
cmp
in
stc
jecxz
add
sub
add
mov
sub
pop
xchg
jmp
sbb
daa
dec
pushf
lret
mov
or
pop
and
xor
aam
jae
and
stos
xchg
sarb
mov
icebp
pop
out
repnz
ficoms
xor
icebp
mov
dec
or
clc
nop
fs
sti
adc
lods
mov
out
int
dec
sbb
shrb
or
leave
xchg
add
push
mov
aam
fdivl
mov
and
xor
mov
imul
cld
hlt
and
cltd
xchg
push
mov
mov
mov
das
adc
adc
cmp
xchg
outsb
jmp
stc
fstpt
xor
shll
test
dec
insb
das
mov
mov
adc
jne
push
xor
sbb
xchg
mov
les
cwtl
icebp
mov
mov
mov
je
mov
xor
fildll
and
mov
jb
add
les
cli
int
mov
lcall
aad
ficoml
mov
or
lcall
jp
mov
stc
pusha
mov
mov
test
jl
mov
test
stos
xchg
sahf
push
pop
lea
inc
xchg
dec
inc
loope
out
lock
xor
dec
push
xor
lahf
popf
and
loopne
rorb
pop
pusha
mov
cmp
shlb
inc
add
mov
fdivs
and
pop
pop
add
mov
repz
xchg
bound
add
call
out
outsb
in
cmp
or
and
mov
pop
pop
dec
and
mov
sahf
xchg
push
inc
subl
adc
nop
jnp
cmp
test
cmp
mov
gs
xchg
mov
add
hlt
les
fsubrl
adc
sti
ret
shll
decb
cmp
movsb
jne
sub
repz
cmp
jmp
mov
in
adc
push
sub
inc
aas
shll
pop
loopne
adc
mov
iret
scas
mov
insb
subl
std
cmc
mov
push
movsl
inc
sahf
jbe
push
inc
sar
or
fwait
xor
pop
es
cmp
and
sbb
mov
jno
or
push
push
jl
cmp
mov
out
mov
add
sbb
and
add
add
sti
or
inc
or
mov
push
fisttpll
addr16
leave
mov
and
mov
or
xchg
daa
out
mov
inc
xor
xor
xchg
lods
sahf
dec
repnz
scas
enter
jmp
out
testl
adc
int3
push
mov
stc
aad
cmp
pusha
rcr
xchg
jb
mov
push
aaa
flds
aas
out
jecxz
cmpsl
shr
pop
scas
adc
popl
outsb
jle
mov
sbb
and
xchg
lods
js
iret
fistl
fisttps
mov
insb
pop
mov
mov
outsb
test
mov
xor
hlt
mov
lock
popf
loop
mov
daa
and
scas
pop
and
outsb
xchg
jns
in
push
sub
leave
rclb
adc
fimuls
in
aaa
adc
jbe
lahf
in
xchg
cmp
xchg
out
push
xorl
pushf
out
pop
pop
mov
jl
js
mov
cmp
scas
mov
push
cmpsl
popa
mov
xchg
imul
adc
test
lret
mov
sub
outsl
jae
das
mov
sbb
mov
dec
mov
add
push
pop
lock
das
ja
cmc
mov
scas
jl
enter
adc
push
push
add
jl
cmp
or
xlat
scas
mov
inc
adc
and
jp
mov
fcoml
les
inc
xor
cmp
mov
mov
mov
stos
jg
outsb
test
lods
lds
fwait
and
gs
lcall
push
arpl
cmpsb
test
aas
movsl
cwtl
sub
fimuls
sbb
jno
xchg
aas
mov
mov
mov
icebp
pop
repz
insl
xchg
iret
test
mov
dec
dec
addr16
inc
ficoms
sub
pop
jne
je
insb
cltd
pop
dec
sbb
inc
xchg
ja
iret
std
lret
xchg
dec
fdivl
or
aas
and
mov
sti
xchg
mov
push
inc
out
addr16
jb
pop
cmpsl
push
std
cli
int
xchg
adc
and
push
cmpsl
loopne
scas
dec
jae
ljmp
lock
mov
push
dec
scas
testb
jmp
js
arpl
mov
sti
and
jl
sub
add
mull
std
lret
sbb
int
jg
nop
out
nop
sub
test
aaa
push
add
adc
pop
jmp
mov
scas
xchg
push
sarl
popa
xlat
nop
mov
sbb
sub
or
pop
sahf
in
movsb
aad
inc
popf
xor
sub
sbb
imul
mov
adc
mov
xor
shr
sahf
mov
jne
sbb
adc
xchg
cmp
movsb
test
arpl
loopne
sub
ss
and
stos
fwait
push
out
cld
jge
lret
sub
ljmp
pop
xchg
sub
adc
dec
mov
int3
push
mov
sarb
shrb
gs
movsl
xchg
pushl
mov
lret
int3
mov
popa
jmp
mov
lahf
cmp
mov
outsb
outsb
fs
mov
test
fs
imul
test
mov
pusha
dec
rcl
and
test
push
jae
out
jb
pop
pop
aam
mov
idivl
into
cli
lods
pmaxub
pop
sarl
mov
js
lea
aam
and
push
mov
xchg
cwtl
sarl
add
fstpl
adc
add
in
sub
xchg
xchg
fsub
xor
jae
xchg
cli
and
mov
std
mov
cmp
movsl
inc
dec
shlb
sub
ds
push
ret
xchg
mov
rcll
adc
daa
mov
push
in
jnp
inc
es
jb
aas
in
xor
fnstenv
mov
push
add
lods
sub
out
test
rcr
xor
lret
loopne
mov
addr16
mov
dec
mov
cmp
cwtl
aad
nop
sbb
shrb
ficompl
clc
mov
jge
js
mov
mov
mov
push
and
cmp
jecxz
xchg
or
mov
call
sub
push
sbb
pusha
bsr
push
aaa
xor
popa
popf
mov
lahf
loope
insl
mov
xor
in
sub
sbb
aad
test
mov
loopne
je
stos
mov
xchg
lret
xchg
jae
sub
jl
je
out
aad
movsb
jnp
sub
push
addr16
add
push
cmp
ret
pop
roll
inc
test
in
aas
sahf
and
jecxz
hlt
or
mov
inc
mov
sbb
stos
fcoms
and
call
adcb
aas
div
lds
adc
lahf
popf
adc
lahf
cmpb
jnp
adc
jecxz
fdivrs
in
sub
cltd
les
cli
xchg
decl
test
je
adc
repnz
aaa
aaa
jmp
out
jecxz
xchg
ljmp
mov
lds
push
lret
sub
adc
sub
fwait
repnz
inc
popf
gs
jbe
test
fistpl
sub
add
cmp
xor
lock
dec
inc
xchg
inc
cwtl
sti
sbb
fdiv
xor
inc
pop
dec
inc
outsl
push
mov
mov
push
dec
jbe
test
inc
loopne
jo
outsb
addr16
xor
popa
sbb
xchg
std
fisttpll
rol
sub
add
subl
lcall
lahf
push
mov
shl
jecxz
add
clc
mov
icebp
imul
pusha
lret
mov
mov
mov
cli
aas
popf
rcrb
daa
imul
push
jns
mov
jae
jl
jp
iret
stos
fmull
or
xlat
cmp
iret
mov
lahf
mull
xchg
lcall
sahf
adc
addr16
dec
dec
in
sub
add
bound
cmp
pop
inc
mov
call
xchg
inc
int
in
xchg
imul
sub
icebp
gs
cmp
mov
inc
mov
xchg
sbbl
out
xchg
sbb
sbb
pop
lods
pop
and
fists
pop
mov
into
pop
loopne
mov
inc
lods
ret
clc
rorb
loope
sahf
sub
subl
inc
xchg
pop
xchg
or
push
and
loop
test
mov
xor
mov
call
imul
test
and
jbe
pop
mov
jo
scas
cmp
push
xlat
lret
subl
es
fstl
call
inc
dec
ds
lds
jl
pop
mov
in
sahf
aam
cmc
icebp
mov
movsl
lock
jmp
and
push
mov
sub
nop
xchg
stos
int3
outsl
fidivl
repz
jmp
lcall
xlat
xor
verw
sbb
loope
loopne
jl
push
and
mov
cli
out
insl
test
mov
out
test
pop
ja
and
loopne
xchg
mov
push
xchg
xor
insl
cmpsl
in
in
sti
xor
aam
adc
inc
loop
cli
outsb
rolb
std
ror
pop
xchg
xor
ja
cs
fisttps
ret
jne
jbe
call
lea
and
test
jp
pop
pushf
add
and
push
xlat
lahf
out
and
push
add
jmp
push
daa
lock
and
jle
iret
add
and
dec
adc
push
mov
cld
sub
add
sbb
fcompl
bound
sbb
inc
fs
stc
mov
shl
mov
jmp
pop
sti
pop
std
inc
orb
in
inc
mov
mov
test
out
push
hlt
iret
scas
dec
in
ror
out
sar
aam
mov
mov
adc
pop
sub
and
xchg
pop
adc
cmc
mov
push
cld
push
xor
lea
punpckhbw
mov
in
enter
js
push
dec
imul
mov
jnp
or
push
adc
pop
ljmp
jnp
jne
jno
sub
mov
insl
fdiv
and
or
cmp
jb
cli
xorl
lcall
inc
jmp
mov
pop
or
jecxz
xchg
sbb
jb
test
xor
mulb
sub
loope
lds
pop
xchg
sbb
xchg
stc
lcall
xchg
mov
ja
xchg
and
sbb
mov
add
adc
cltd
imul
or
outsb
lea
mov
xchg
js
jg
xchg
adc
shll
pop
imul
je
mov
lods
and
add
pop
stos
jp
mov
addr16
adc
and
push
sbb
pop
push
mov
out
and
inc
ja
out
pop
cmc
testb
in
sbb
mov
adc
or
xor
cmp
jg
add
lcall
or
xchg
loopne
ret
call
repnz
mov
dec
mov
es
ja
or
shrb
cmp
lea
pop
add
decb
fstpt
stc
popf
pop
push
xor
adc
mov
sbb
sbb
and
or
adc
dec
and
stos
out
out
xchg
cld
cmp
add
push
repz
movsl
lret
sbb
mov
sbb
lods
xor
adc
jo
sti
mov
repnz
outsb
push
sbb
jecxz
insl
pop
adcl
cmp
test
mov
sbb
mov
cmp
out
jg
mov
adc
push
jbe
push
insb
sub
outsl
mov
dec
or
xchg
fwait
jge
cmpsl
mov
daa
std
sbb
push
and
pop
cmp
push
sub
inc
xchg
clc
cmp
push
sub
loopne
xchg
jae
out
xchg
pop
insb
pop
pop
jmp
rcrl
je
adc
mov
push
loop
adc
out
out
jge
in
inc
cmp
cmp
xor
loopne
loopne
dec
cmpsl
pop
add
add
js
outsl
sbb
jg
lods
ret
mov
xchg
cmp
jo
adc
add
adc
stos
jne
rcll
test
push
or
mov
aad
cmp
xchg
insb
hlt
jb
sarl
mov
jae
pop
fs
or
xor
jl
dec
lret
mov
pop
pop
xchg
outsb
lcall
call
test
pusha
xchg
movsb
lds
hlt
or
jne
push
pop
mov
cmp
fdivrp
adc
jnp
imul
pop
cmp
scas
sub
cmp
cmp
sbb
sbb
ret
push
fcomps
xor
ds
inc
fstpt
and
jp
pop
sti
addr16
xchg
push
je
xor
cmc
add
cmp
outsl
cmp
dec
stc
aaa
xlat
test
xchg
mov
add
dec
rcrb
pop
xlat
clc
into
push
push
jmp
test
mov
sbb
dec
or
clc
mov
popf
jo
add
stos
cltd
mov
or
inc
out
xlat
das
jns
scas
int3
in
push
cmp
dec
adc
iret
outsl
jnp
lgs
push
sub
mov
mov
mov
lods
mov
push
inc
sub
hlt
test
pcmpeqw
xchg
adc
push
dec
jo,pn
push
lea
jl
xchg
cmp
sub
and
clc
lods
lock
xlat
or
mov
push
dec
or
xchg
mov
push
xchg
movsl
les
and
cmpsl
inc
mov
ja
bound
jo
rolb
gs
push
lret
sub
inc
cmp
outsb
shl
out
movsl
xor
movsl
cmp
iret
nop
aad
shll
scas
ret
add
shl
in
push
aam
push
dec
insb
xor
je
cmp
gs
stos
inc
test
popf
cltd
mov
sub
frstor
cmp
sub
bound
xorl
lds
inc
frstor
xchg
adc
dec
push
sarl
xchg
inc
daa
or
ljmp
pop
adc
outsb
mul
cwtl
arpl
xchg
pop
ret
pop
or
out
call
lcall
sbb
gs
push
in
inc
int3
aam
call
pushf
or
adc
push
xchg
jp
xchg
pop
mov
jl
jns
cltd
insl
jae
add
lahf
mov
adc
rcrb
cmpsb
jae
or
pop
jo
mov
xchg
sub
add
iret
add
adc
sub
test
out
or
repnz
jecxz
addr16
ja
test
mov
jae
fimuls
jge
negl
pop
xor
jp
test
mov
or
inc
aas
jbe
mov
filds
cmp
lods
xor
xchg
jae
in
pop
sub
icebp
imul
lods
out
lret
pop
fs
outsl
and
out
pop
mov
xchg
dec
jae
xchg
or
xchg
mov
out
es
dec
scas
mov
push
adc
pusha
stos
mov
mov
xchg
jmp
jns
cmp
in
jne
arpl
add
das
cmpsl
adc
add
testl
shlb
dec
lret
cmp
clc
and
ffreep
cmp
rclb
xchg
repnz
inc
adc
push
sub
and
sub
xor
mov
enter
lods
cld
mov
mov
xor
cmpsb
lods
mov
dec
mov
push
mov
mov
imul
dec
push
insb
cmp
nop
mov
hlt
xchg
jle
test
pop
movsb
lahf
stos
outsb
cmp
insl
enter
loope
imul
xor
mov
xchg
and
mov
dec
mov
cmp
xor
mov
cmc
outsl
rorb
mov
fisubrl
mov
inc
or
xchg
mov
jae
mov
mov
pop
jg
jae
xor
xor
xchg
inc
vunpcklps
and
ret
fstl
mov
divl
xlat
pop
lods
adc
fnstenv
ret
stos
dec
fs
repnz
in
jmp
pop
in
lods
push
clc
addr16
clc
cmp
call
ret
sbb
dec
jbe
cmp
arpl
leave
mov
icebp
out
fsubl
mov
fsts
and
xchg
pop
sub
testl
dec
push
push
sbb
in
adc
mov
inc
add
and
scas
ds
stc
clc
into
and
ret
xchg
xchg
stos
add
into
push
xor
xchg
sbb
daa
lret
clc
ret
xor
sub
jl
inc
push
or
mov
mov
ss
aad
in
in
fstpt
ljmp
dec
ret
inc
adc
push
mov
pop
sahf
sarb
jnp
repz
pop
arpl
cmp
adcl
push
xor
mov
dec
sti
lret
popf
in
mov
vpsubb
pop
ja
movsl
out
les
or
pop
fimuls
inc
sbb
sarb
in
sub
or
pop
cmp
cwtl
stc
adc
clc
add
sub
movb
std
aas
pop
mov
xor
jp
out
dec
stos
cmp
push
pushf
popf
pop
daa
push
cwtd
or
popa
lds
sahf
ficoml
shlb
pop
dec
cmpsb
sub
mov
mov
xor
imul
fistpl
or
jge
inc
aad
dec
add
sbb
cld
rol
add
imul
loop
push
lds
mov
jbe
lret
lock
xchg
shrb
mov
inc
imul
xchg
repz
int
pop
xlat
mov
sbb
mov
push
test
test
mov
sub
and
ret
pusha
sbb
jnp
add
add
clc
movsb
mov
cld
pusha
inc
loopne
ljmp
iret
push
xchg
cltd
int3
ret
rcrl
cmp
cwtl
jecxz
inc
clc
cmp
mov
mov
sbb
xor
push
dec
cmp
xor
and
lcall
cmp
fsubrs
and
xor
ljmp
pop
bound
or
push
mov
loopne
xchg
xor
cmp
mov
pop
mov
mov
jbe
cmp
pop
sub
std
xor
sub
or
nop
icebp
xchg
add
and
loopne
sbb
sarb
mov
xor
ret
mov
cmp
lea
push
sbbb
jge
ds
mov
or
js
inc
xor
cmp
inc
sub
lock
cmp
stos
test
mov
adc
bound
sub
xchg
xchg
mov
push
out
mov
dec
xchg
fsubl
sub
xlat
push
stc
adc
jge
mov
pushf
rcl
lods
xor
dec
jo
sbb
fsubrs
mov
les
shll
mov
movsl
loopne
lds
ja
insb
mov
imul
in
insl
shl
in
and
ljmp
cmpsl
scas
jge
sub
dec
pop
or
mov
xchg
fdivl
or
aas
cmp
aas
ret
mov
cmp
pop
fists
adc
xchg
pop
push
dec
inc
jae
inc
jecxz
and
xchg
pusha
ljmp
mov
shrl
and
loop
negb
int3
popa
mov
adc
repnz
sbb
mov
popa
jae
adc
mov
ljmp
in
push
lret
mov
lcall
xchg
mov
mov
mov
je
mov
mov
cmp
mov
or
push
xor
adc
pop
dec
inc
popa
cmpsl
xchg
clc
dec
jecxz
adc
adc
lea
sbb
xchg
loop
icebp
dec
andl
add
jmp
add
push
sti
mov
mov
dec
cmpsl
aaa
mov
ja
les
sbb
outsb
ret
or
ljmp
insb
mov
outsl
sub
test
inc
xor
cmovl
jge
jb
call
xor
sub
sbb
xchg
xchg
lret
out
daa
inc
mov
pop
cmp
adc
push
cmp
push
out
xchg
xchg
push
rcll
push
out
test
jb
sbb
jne
cmp
sbb
inc
sub
sbb
insb
loop
cmpsl
repnz
out
test
xor
jl
aam
jge
in
push
psrad
loop
pop
mov
jns
insl
test
rolb
pushf
popa
push
in
outsl
jmp
jmp
rolb
or
jle
out
push
js
sbb
push
jns
mov
mov
push
nop
aad
jb
sub
and
dec
cld
push
loop,pt
loopne
cmp
adc
or
test
lret
aaa
std
mov
call
jmp
mov
adc
scas
xor
jl
into
imul
dec
jge
cmpsb
out
test
dec
loope
in
jne
popl
xor
out
mov
cwtl
xor
dec
cmpsb
cmp
jg
dec
clc
cwtl
jns
inc
andl
daa
inc
push
daa
fs
popf
adc
cs
jp
pusha
leave
inc
jg
imul
xor
out
inc
lea
xchg
jl
xor
sbb
mov
jge
cmp
aam
pop
lea
or
js
gs
push
ljmp
popa
cmpsl
out
pushf
fdivl
jo
test
and
shll
cld
pop
jp
mov
mov
sub
lock
xchg
or
cmpsl
ljmp
loopne
fwait
ja
pop
adc
hlt
lahf
jnp
es
mov
mov
xchg
in
cld
mov
adc
es
adc
iret
sub
addl
jmp
fldl
xchg
inc
loope
cli
repz
sti
outsl
adc
daa
cmpsb
sub
mov
hlt
inc
lds
lret
jmp
xor
ficoms
and
adc
sub
xor
inc
lahf
in
xor
out
mov
mov
xchg
or
xor
inc
or
push
mov
mov
pop
mov
cli
and
xchg
jmp
xchg
aam
popa
xor
aaa
inc
leave
dec
mov
ljmp
pop
inc
or
sub
xor
inc
xor
jns
mov
subl
xor
clc
mov
out
push
cwtl
jecxz
insb
test
and
dec
and
adc
mov
xor
inc
push
gs
cwtl
inc
outsl
jb
movsb
aaa
adc
popf
jno
mov
mov
mov
push
add
xchg
jno
pop
push
imul
cmpb
inc
mov
int
loopne
push
inc
movsb
jbe
mov
into
mov
inc
in
ds
fsub
dec
dec
stc
stos
adc
jp
lret
mov
out
inc
jmp
je
js
add
insb
mov
mov
adc
ret
pusha
test
sub
pop
push
pop
stc
add
jp
pop
lcall
cld
lods
mov
fcoml
or
mov
loop
fsubrs
or
fdivrl
sbb
sbb
xchg
pop
leave
sbb
fs
lock
jge
sarl
or
lea
fdiv
sbbb
xchg
scas
daa
sti
and
xor
fldenv
jle
or
pusha
inc
in
cmp
dec
jmp
jbe
push
scas
mov
out
arpl
xchg
mov
outsw
sbb
jmp
sub
nop
mov
pop
aaa
sbbb
push
gs
push
cmp
sbb
or
inc
popl
testb
aam
fsubrs
pop
ret
pop
test
bound
aam
cmc
cmp
insl
mov
dec
jne
mov
in
andb
cmp
scas
in
mov
aad
lea
mov
sbbl
bound
push
xor
mov
jb
addr16
mov
jge
add
push
out
shrl
inc
pop
sub
in
jmp
in
aam
jge
fldl
ret
mov
dec
mov
mov
leave
push
repnz
out
dec
testb
sub
scas
push
std
and
outsl
mov
push
fsts
sbb
out
cltd
and
add
icebp
xor
mov
aas
cmpl
loope
daa
sub
and
cmp
lods
notb
das
fcom
pop
pop
into
cld
inc
mov
mov
adc
push
mov
rorl
ljmp
sti
add
mov
xchg
stos
jg
insb
jmp
lcall
pop
bound
rorb
xor
pop
mov
xor
mov
lahf
in
mov
leave
push
data16
dec
sub
or
hlt
scas
in
lcall
lahf
xchg
pop
pop
test
and
sub
push
add
add
mov
inc
es
mov
jnp
pop
pop
in
test
jnp
xchg
or
xchg
dec
and
push
mov
mov
and
daa
aad
add
or
loopne
xchg
add
cmp
sbb
push
sub
in
jp
popf
push
or
xchg
mov
sbb
nop
inc
cmp
push
jb
sbb
les
mov
loope
aad
icebp
cmpsb
jne
mov
mov
outsb
and
pop
add
js
cmp
shrb
in
sbb
mov
mov
or
pop
push
loope
cmp
pop
stc
ljmp
aad
gs
stos
push
ljmp
out
mov
xorb
mov
andl
mov
and
mov
adc
insl
jp
and
ret
cmp
jmp
jle
xor
cli
add
scas
in
mov
cmp
in
das
shlb
ret
scas
std
out
not
mov
dec
mov
rcrb
inc
scas
mov
push
adc
int3
or
mov
aaa
or
xchg
enter
sub
mov
leave
popa
daa
xchg
in
mov
pusha
push
pop
daa
subl
roll
or
sub
cmc
xchg
fs
mov
inc
sbbl
lret
data16
cld
call
icebp
nop
jo
add
mov
and
fs
inc
rcrl
pop
sub
jns
push
push
or
or
cmp
or
mov
mov
ret
cmpsb
xchg
sbb
push
lret
push
jmp
shrb
inc
mov
flds
jge
clc
lret
push
mov
nop
adc
and
bnd
push
xchg
inc
out
loop
aad
or
popa
leave
in
stos
imul
sbb
ret
cmp
mov
clc
mov
cwtl
push
sbb
jns
bound
lods
or
jno
and
adc
lahf
das
or
iret
outsb
push
les
dec
popa
inc
mov
xor
ljmp
dec
mov
mov
std
mov
and
cmp
xchg
sbb
mov
lea
lods
movsl
add
scas
push
cmp
cli
mov
lods
mov
fdivr
or
mov
call
or
incl
int3
dec
imul
push
cmpsl
or
rolb
pusha
insl
or
or
cmp
enter
sub
sub
out
lds
cmpsb
jmp
popf
out
jo
sub
adc
xchg
sub
test
add
mov
sub
and
int
cmp
mov
sbb
mov
ds
push
push
movb
shll
add
adc
jne
pop
mov
insl
ljmp
int
xor
xchg
dec
jae
lods
ja
pop
out
cmp
lods
mov
in
mov
push
pop
lahf
push
cmp
dec
xchg
and
mov
push
data16
daa
addb
fucomi
xor
xor
popa
cs
repnz
add
jp
sahf
cwtl
jns
cmpb
std
outsl
add
and
in
movswl
push
cwtl
pop
mov
int3
mov
pushf
sub
in
fldenv
pop
or
and
pop
stos
or
mov
or
inc
adcl
leave
push
fwait
insb
mov
in
push
dec
stos
lods
imul
dec
fiadds
lret
inc
add
mov
pop
jo
out
push
fldl
push
ret
jno
test
adc
inc
fidivrs
pushf
int3
mov
push
mov
and
mov
mov
pop
xchg
xchg
cli
repnz
mov
ret
ret
push
rorb
imulb
pop
std
ss
jmp
or
xor
mov
mov
add
and
mov
movsl
inc
push
push
inc
fld1
mov
pusha
sbb
sbb
int3
movsb
lret
leave
psrad
mov
pop
fsubs
loopne
mov
testl
mov
pop
std
pusha
mov
push
pusha
notb
clc
mov
mov
int
add
movsb
sub
call
push
dec
cmpsl
and
jae
mov
lret
cmp
xor
cld
xchg
setb
fsubr
out
stc
ret
jle
push
mov
repnz
xchg
sbb
sbb
dec
pop
jns
aas
outsb
sub
jb
jl
add
add
and
jg
push
arpl
sub
cmp
cmc
rcrb
cs
mov
outsl
pop
test
mov
push
sub
mov
mov
xchg
push
push
cli
adc
loop
shrb
lock
lock
lcall
outsb
mov
adc
sub
sub
stc
mov
out
loop
inc
sbb
push
pusha
jp
mov
mov
sub
inc
aad
pushf
xlat
cmp
jle
outsl
jb
cmp
cmc
dec
nop
test
jg
sub
fidivrs
jle
sbbb
lahf
add
popf
lock
and
or
lds
dec
scas
faddl
cmp
ret
sbb
xchg
xlat
xor
negb
adc
sahf
movsl
jo
xor
adc
and
enter
pop
cmp
imul
mov
call
cmovne
or
push
sbb
jb
adc
xlat
and
test
xor
pushf
xchg
fsubr
mov
sub
and
add
or
scas
push
jmp
cmp
les
into
ror
je
add
push
lea
push
inc
xchg
add
mov
cmp
test
mov
mov
mov
ror
or
jb
es
jmp
popf
mov
xor
ja
pop
push
ret
xor
pop
adc
sub
vmulps
or
jne
stos
pop
dec
fisubl
stc
push
insb
gs
pop
inc
mulps
sbb
mov
mov
xor
xor
ret
mov
aas
out
daa
xor
jg
js
jmp
cmp
int3
call
loop
and
xor
call
lods
scas
push
or
mov
icebp
push
ljmp
pop
insb
xor
int
jp
icebp
xlat
sub
push
ret
jle
cmpl
in
sub
outsb
push
sub
mov
int3
and
cmpsb
cmpsb
or
mov
dec
jnp
rcll
sbb
dec
or
dec
sarb
push
outsb
dec
out
pop
pop
inc
pop
jmp
lahf
fscale
pushf
pop
test
ss
jbe
cmp
mov
fisttpll
repnz
lret
pop
fwait
rcrl
repnz
es
fstpl
aam
iret
js
mov
out
insb
adc
mov
pop
or
cs
push
daa
pop
push
arpl
inc
pop
mov
xchg
lret
inc
sbb
es
mov
add
dec
fidivrs
mov
daa
mov
push
test
add
add
aas
xor
dec
mov
clc
cltd
imul
jae
into
pop
or
add
ss
movsl
aam
inc
dec
lock
sti
divl
aad
adc
push
vpshlq
fwait
lahf
loopne
dec
lret
xor
insl
pushf
in
lds
test
popf
ret
icebp
jmp
cs
dec
push
mov
and
add
push
shlb
jl
outsl
adc
clc
nop
sub
adc
sahf
dec
jl
loopne
xchg
xor
pop
push
xchg
iret
ret
es
iret
mov
mov
jmp
in
popf
inc
xor
cmp
sbb
sahf
les
dec
outsb
and
addr16
cmp
and
cmp
adc
les
shll
lds
jmp
outsl
jb
mov
iret
out
std
outsb
int
repz
add
lods
pop
data16
cmp
and
ret
out
test
mov
mov
mov
sahf
sti
arpl
mov
xchg
fucomi
aas
ja
jns
out
mov
sub
sub
in
sub
dec
lock
xlat
cmp
and
movsb
dec
cs
push
jbe,pt
fsubrs
popa
aas
lock
dec
inc
aas
mov
lods
idiv
pop
or
and
stos
xor
jae
nop
jmp
sub
int
sbbl
enter
mov
movsl
imul
push
push
lods
push
movsl
test
jmp
lods
sahf
jg
mov
mov
push
insl
inc
std
xor
push
leave
jns
mov
jae
push
xchg
movsl
movsb
or
mov
ds
cmp
jno
pop
stc
dec
shl
loope
fistpl
mov
dec
add
fdivr
push
push
mov
xor
lahf
lahf
icebp
fnstsw
xchg
in
xchg
mov
lcall
jns
test
lock
fistpl
mov
pop
jecxz
push
cwtl
lock
cmp
and
nop
sbb
mov
add
aad
lds
ds
cmp
push
test
adc
adc
xor
scas
jge
icebp
push
repz
fisttpl
aas
sub
push
cmc
mov
dec
sub
xor
sbb
pop
int
test
xlat
test
fimull
adc
std
out
pop
mov
aad
add
sahf
rcrl
xchg
pop
lcall
sub
sbbl
or
dec
cmp
cmp
jno
lds
jl
adc
jmp
fldcw
push
enter
adc
enter
pop
mov
dec
push
sbb
movsl
pop
xlat
pop
clc
hlt
lock
push
fdivl
add
fwait
mov
pop
cmp
mov
in
in
sbb
fisubl
pop
out
mov
push
imul
push
cmp
mov
cmp
ret
dec
mov
imul
in
push
aaa
sbb
sahf
jmp
mov
and
das
insl
js
sub
rol
mov
std
jmp
push
cmpsl
ja
outsb
stos
out
repnz
and
jno
rcr
test
push
cmpsb
or
lods
sub
nop
mov
decl
jge
test
mov
push
sbb
cmpsl
in
dec
mov
add
lret
test
insb
xor
jmp
sub
dec
xor
loopne
dec
or
nop
test
int3
ret
clc
stos
mov
ss
add
sbbl
js
hlt
out
insb
cmp
adc
stos
out
scas
ljmp
ljmp
xchg
cld
nop
xor
addr16
dec
sahf
cmp
lds
sub
pop
jmp
cmc
jmp
adc
mov
movsb
lcall
jp
sbb
jne
or
ds
pop
lods
xor
jge
add
xchg
cld
int3
insb
sub
not
mov
jp
xor
roll
cmp
or
push
decb
inc
jecxz
fsubl
std
xor
fists
inc
xor
mov
mov
les
cmp
dec
imull
xchg
inc
loope
popf
sti
call
cmp
icebp
jb
xor
push
xlat
pop
cmp
fucomi
idivb
adc
notb
stos
and
cltd
mov
into
insl
push
xchg
fucom
js
imulb
fcmove
push
lods
jns
std
push
in
jnp
cmpsl
aas
ds
popf
xor
cmpsl
fld1
movl
inc
sub
push
jns
push
dec
test
jns
stos
insb
cmc
mov
repz
dec
adc
push
sub
mov
fidivrs
mov
ss
dec
frstor
dec
arpl
add
outsl
stos
or
push
cld
xchg
xchg
cld
imul
cmpsl
cmc
das
adc
inc
into
dec
push
jo
sbb
lret
sub
nop
add
outsb
sub
xor
sub
or
pop
insl
jp
clc
pop
jp
jns
psraw
lods
sub
dec
xrelease
aas
outsb
adc
hlt
lcall
leave
push
push
frstor
jo
mov
jo
dec
dec
pop
mov
adc
icebp
jecxz
lods
js
leave
std
mov
out
mov
ljmp
jmp
xchg
fsubl
jp
lods
mov
ds
cmp
sbbl
daa
ds
pop
cli
mov
xor
cmp
fbstp
fistps
sbb
enter
inc
or
sti
fnsave
push
adc
js
push
leave
push
mov
push
aas
mov
repnz
adc
jp
repnz
xchg
sub
stc
push
or
sbb
int3
mov
xchg
mul
pop
lea
pop
push
cmp
mov
int3
movsl
inc
mov
mov
out
rolb
jle
pop
xchg
outsl
out
sub
fneni(8087
leave
roll
outsb
jg
lea
fldenv
fwait
pop
fdivp
push
mov
loop
pop
dec
xor
mov
int3
sub
insl
daa
jl,pn
js
fistpl
cmp
aad
xor
ret
and
ficoms
in
movsl
mov
pop
ljmp
sbb
imul
out
pop
xchg
pushf
push
mov
push
mov
sarb
dec
decl
aad
mov
std
push
mov
inc
scas
dec
aam
or
lret
mov
sbb
dec
inc
mov
adc
sub
orps
mov
adc
inc
cs
movsl
dec
sbb
mov
out
push
xchg
mov
sti
push
fcompl
test
cwtl
enter
sub
sub
pop
push
inc
insl
inc
mov
pop
scas
cmp
sbb
add
popa
jle
push
in
js
jno
or
fldenv
shrl
xor
fisttps
mov
push
add
stos
cltd
arpl
shlb
data16
or
xor
ret
test
jge
cmp
lea
fildll
leave
xor
gs
cmpsb
cld
cmpsb
rclb
sahf
sti
add
xor
pop
lret
pop
scas
rcr
cmc
xchg
sbb
or
jbe
lods
loop
sbb
into
ficompl
in
adc
daa
sbb
pop
rcrb
jb
sub
pop
punpckhbw
repnz
fisttpll
mov
dec
push
clc
jns
mov
jge
in
ret
and
test
jge
fdiv
loop
mov
fisubrs
pop
xchg
cmp
xor
fwait
or
mov
jbe
ficomps
lods
mov
jb
imul
and
xchg
mov
adc
shl
jne
jnp
mov
call
sub
iret
cmp
mov
dec
insl
mov
sbb
daa
sar
xor
fadd
xor
xchg
cwtl
adc
jmp
and
xor
mov
sub
jno
xor
dec
sub
push
cmp
inc
icebp
lcall
arpl
mov
add
push
int
pop
addr16
fisttpl
push
dec
push
scas
push
push
xchg
aad
fs
xchg
mov
insb
pop
jno
adc
adc
or
pop
fnstenv
daa
movl
mov
leave
jg
sbb
cld
mov
in
frstor
push
mov
dec
mov
jnp
mov
sub
dec
lods
mov
push
sub
mov
mov
cs
es
push
inc
dec
ljmp
jb
jl
or
mov
push
dec
jo
mov
jb
mov
cmp
or
int
idiv
lcall
popf
out
sbb
push
jg
es
sub
cmp
push
push
insl
pop
enterw
jmp
fwait
pushw
out
scas
arpl
insb
cmpsl
cwtl
hlt
fdivs
jge
dec
adc
inc
ret
pop
iret
lock
enter
fs
fildll
addl
pop
mov
mov
ret
ja
xor
pushw
xor
mov
pushf
or
fistps
push
ja
mov
jp
divl
std
xchg
or
sbb
ds
lock
sbb
bound
jg
cmp
push
xchg
push
mov
dec
xchg
pusha
jnp
xor
nop
pop
mov
in
fnstsw
and
and
fs
call
jnp
inc
and
sub
in
xorb
bound
dec
outsl
dec
inc
in
xchg
daa
add
mov
push
repnz
int3
sub
and
adc
jne
fisubrl
xor
jle
enter
xchg
inc
stos
andb
ja
mov
push
rol
cmc
cld
in
scas
and
adc
push
push
ret
test
aam
push
daa
push
pop
xor
insb
out
popf
pop
cmp
inc
xchg
pusha
outsl
leave
in
das
fdivrl
inc
jb
xor
xor
push
jbe
std
jmp
mov
and
push
push
out
ja
testb
aas
outsb
cmpsl
in
add
xlat
mov
adc
fs
or
adc
adc
repnz
cld
mov
pop
sarb
inc
mov
sub
out
pop
scas
adc
inc
adc
out
int
mov
sub
pop
mov
popf
orl
jmp
ds
jg
popa
nop
xorb
jmp
popa
popf
jp
fcom
test
or
mov
ds
ds
mov
jecxz
repz
std
std
push
hlt
jns
enter
stos
push
popf
cld
sbb
cmp
scas
movsb
push
std
loope
je
test
fs
cmpsb
clc
mov
in
sbb
enter
test
cs
cmp
jmp
clc
cmpsl
movsb
push
xchg
inc
cmp
nop
pop
fisttpl
loopne
faddl
clc
psubusw
xchg
mov
out
sub
in
stos
icebp
cld
mov
mov
fnsave
mov
in
jns
xor
scas
or
add
pusha
pushf
lea
ds
and
push
sub
inc
fcmovb
lcall
add
add
mov
pop
in
ret
push
aas
fcompl
mov
rcl
pusha
mov
mov
lahf
mov
pop
cmp
fildll
outsl
rcll
push
mov
mov
loope
popa
mov
pop
mov
scas
mov
cmp
roll
jmp
nop
ljmp
cmpsb
gs
xchg
aad
ficompl
sbb
hlt
dec
sub
push
mov
push
cmp
adc
inc
lcall
fwait
mov
or
mov
mov
cwtl
pusha
cmp
jnp
push
mov
nop
icebp
push
jg
rol
sub
dec
test
loopne
jnp
notb
movsl
adc
sbb
insl
andl
je
cmpsb
sbb
mov
pop
lret
rorl
pop
sbb
ja
stos
movl
cmp
ljmp
mov
arpl
push
bound
xchg
inc
fistl
in
lahf
fmuls
stos
scas
hlt
fwait
push
add
mov
stc
pop
adc
outsb
lea
test
movsl
outsl
adc
das
push
mov
adc
xor
pop
cmp
pop
pop
and
or
pop
cmp
aas
cmp
cmp
fidivrl
pop
pop
loopne
xchg
outsb
add
sub
xor
pop
sub
push
test
lock
repnz
add
test
mov
or
push
movsb
bound
ficoms
fistpll
mov
lds
xchg
lret
movsb
dec
pop
dec
bound
cmc
stos
push
mov
stos
rolb
ljmp
push
lods
jns
fwait
and
vpcmpeqw
xchg
xchg
je
jecxz
mov
arpl
adc
and
adc
lock
leave
rcrb
loopne
xor
imul
insb
fisubs
outsl
xor
movsl
ss
or
jnp
lea
fstp
cs
lock
mov
jne
test
sbbl
cmp
js
sbb
push
dec
xor
mov
jns
sbb
mov
dec
jmp
shll
daa
xchg
shlb
bound
lret
call
iret
xchg
cld
ss
mov
mov
popa
xor
imul
in
dec
jnp
mov
sbb
and
std
nop
in
mov
inc
bound
aam
int
mov
push
xor
adc
in
ret
push
push
push
into
push
ss
mov
loop
push
pop
adc
in
call
and
sbb
cmp
lods
add
lcall
inc
mov
ja
insb
ret
add
xlat
hlt
inc
inc
add
repnz
or
or
fbld
xchg
aaa
jp
inc
sub
dec
bound
test
pop
mov
loopne
mov
es
dec
and
jbe
pop
scas
jp
mov
shlb
sub
clc
mov
adc
push
pushf
out
and
push
mov
cld
mov
stc
and
adc
push
push
mov
dec
fimuls
sahf
test
and
push
sarb
sbb
hlt
adc
in
je
xor
xor
cmpsb
mov
mov
sub
dec
or
ds
and
dec
push
fdivrs
adc
jp
jp
icebp
sbb
pop
xor
jp
je
mov
mov
push
lret
mov
lea
push
lock
jl
ss
fdivl
data16
cld
in
insl
or
enter
jns
nop
inc
mov
and
into
test
mov
std
testb
fists
cmp
jg
or
int
inc
test
fistl
movsl
hlt
aad
xlat
or
out
xor
sbb
cld
jl
mov
xor
inc
mov
popa
pmullw
call
mov
ds
pcmpeqd
or
push
ficomps
popf
fldl
cmp
adc
lret
out
fdivs
aam
ds
mov
push
cwtl
mov
cmp
mov
cmp
mov
popf
mov
xchg
imull
add
scas
pop
fistpl
cmpsb
adc
shl
in
imul
mov
cmp
cmp
dec
or
adc
xchg
sub
decl
scas
and
lods
xchg
xchg
mov
cmp
mov
shl
push
mov
xchg
shll
or
push
lret
and
adc
add
push
mov
add
adc
add
sub
add
push
sti
inc
add
add
push
movl
ficompl
mov
js
cmp
push
cmp
xchg
mov
repz
or
dec
fwait
stos
mov
adcb
lret
or
jb
dec
test
lahf
pop
push
push
pop
sahf
into
xchg
clc
jb
fcoms
lcall
or
addr16
call
push
jne
inc
enter
mov
xchg
jns
leave
arpl
stc
testl
mov
popl
add
mov
stc
jge
jae
cmp
pop
std
adc
sub
fiadds
int
or
fidivs
dec
pop
pop
gs
nop
xor
sbb
sahf
jl
cmp
mov
xor
inc
cmpl
jne
push
xor
xchg
dec
mov
out
test
sbb
mov
aad
fs
fstp
sbb
inc
imull
xor
adc
mov
push
pop
pop
popa
pop
in
mov
xchg
push
lcall
or
sbbl
add
fs
jge
and
adc
pop
aaa
out
cs
lcall
iret
popf
push
test
sub
and
cmp
ss
sub
fs
mov
stos
sbb
mov
enter
jo
inc
push
cmpsb
repnz
idiv
decb
and
mov
daa
call
dec
mov
mov
roll
pusha
imul
fs
pop
rol
iret
ja
xor
push
js
loop
imul
loop
out
iret
fldenv
mov
xor
jno
int3
dec
sub
or
adc
lods
and
add
push
scas
insb
out
and
out
aas
and
shrb
push
xor
push
mov
stos
xchg
fidivs
cmpl
decb
sbb
filds
push
in
mov
mov
inc
jg
mov
pop
test
loope
mov
adc
fisubrs
or
mov
adc
das
aad
cmp
cli
adc
ja
and
in
loopne
push
aaa
sahf
push
sbb
repz
aad
es
inc
mov
pop
movsb
in
mov
call
sbb
gs
inc
push
sbb
insl
mov
je
sti
in
sub
cmpsl
loop
mov
fimuls
xchg
push
cmp
add
jns
xchg
ss
jns
xchg
pop
or
addr16
mov
adc
mov
mov
insb
mov
push
cmp
and
inc
jmp
inc
mov
cmp
insl
data16
mov
aam
lahf
data16
cmp
fdivrl
push
push
jl
sub
es
xchg
and
push
xchg
push
dec
cmpb
and
cltd
adc
fwait
or
seta
lret
sbb
lock
aas
scas
imulb
jbe
push
fsubr
mov
fists
jbe
xchg
arpl
push
lahf
and
xlat
jp
dec
push
pop
push
cmp
inc
mov
sbb
popa
sbb
and
add
inc
cli
dec
jg
cmp
sub
clc
scas
test
mov
mov
push
sub
or
loop
push
xor
fdivl
jno
inc
lcall
jle
stos
outsb
lods
out
sti
cltd
sub
das
cmc
cld
sbbl
call
in
nop
jnp
inc
cmp
cmp
call
push
cmp
imul
add
sbb
lods
or
fadds
das
shr
push
cmpl
stos
adc
cmc
push
sbb
ss
dec
test
bound
pop
pop
mov
lods
mov
inc
rcll
mov
pop
push
mov
push
sub
int3
adc
fcoms
aad
xchg
lret
ret
dec
jmp
add
pop
sarb
pushf
ret
sbbl
in
xor
aaa
jg
fadd
icebp
or
repnz
push
js
jl
xchg
mov
xor
jl
inc
push
or
bound
or
and
add
aam
inc
lret
sti
mov
mov
mov
or
dec
sbb
jns
cmp
out
xor
cs
jle
notb
or
sahf
ficomps
nop
rcrb
jo
loope
insb
or
shl
es
push
out
add
js
sbb
pop
mov
xor
xchg
inc
arpl
mov
loope
lret
mov
mov
arpl
pusha
lea
fwait
sub
dec
xor
xchg
dec
cli
add
movsb
roll
xchg
sarl
add
push
pop
stos
mov
lahf
jns
cmpsl
in
mov
icebp
mov
ficompl
fs
xchg
mov
bound
inc
mov
sbb
and
jne
daa
mov
out
popa
xchg
dec
inc
dec
push
fldl2e
movsb
dec
lock
sar
jp
movsl
jo
xchg
push
add
ret
jnp
xor
loope
int3
cltd
fnstsw
pop
jle
lock
enter
pop
pop
mov
shlb
push
jnp
inc
scas
ds
rcrb
bound
fs
adc
push
mov
cltd
pop
jne
mov
mov
mov
mov
sub
mov
test
shl
or
push
setno
dec
repz
out
int3
pop
mov
jmp
sbb
test
sbb
xchg
jns
repnz
adc
add
fwait
inc
data16
stos
lods
ja
inc
adc
add
or
or
test
xor
xchg
xlat
cwtl
adc
loope
xchg
mov
arpl
rorb
jecxz
inc
and
jg
xor
push
into
fisubs
outsb
adc
es
ja
mov
push
leave
in
add
mov
add
jecxz
adc
clc
xor
dec
sub
stos
jb
adc
xchg
jle
jne
outsl
icebp
mov
push
divl
outsb
in
push
xor
or
xchg
adc
int3
pop
outsl
mov
shrl
xor
cmpb
or
add
sarb
lods
js
lret
gs
hlt
shrl
cwtl
insl
and
add
jns
jecxz
lret
push
mov
jae
mov
cmpsb
cmc
cld
pop
adc
jnp
mov
stos
sbb
fdivrs
inc
rclb
adc
cmp
mov
ljmp
fsubr
fwait
xchg
jl
mov
out
jbe
out
mov
mov
jecxz
lods
incb
sbb
cmp
push
dec
lds
jae
inc
pop
addr16
dec
pop
mov
rorl
sbb
mov
orl
loopne
cmpsb
lret
inc
adc
jo
push
cmpsb
push
xchg
shlb
imul
xor
call
xor
jo
inc
adc
or
push
lahf
out
dec
test
push
sub
jnp
mov
xchg
xchg
es
cwtl
int
jne
mov
loope
repnz
sub
fists
rcr
adc
adc
imul
fisttpll
pmaddwd
inc
out
loope
dec
sub
adc
dec
fisubrl
sti
dec
inc
push
mov
sub
subb
xor
dec
sbb
psubusw
mov
and
lret
stc
lahf
mov
shlb
jg
and
xor
popa
and
les
lahf
loop
imul
xchg
sbb
out
xchg
subb
jne
add
daa
mov
mov
aaa
add
push
icebp
mov
jmp
fldt
dec
and
pop
aad
pop
popf
pusha
adc
mov
pop
xor
adc
mov
jae
imul
mov
call
add
add
pusha
repnz
xor
cld
nop
and
int3
sti
and
fisubs
fs
or
in
pop
test
add
sbb
push
movsb
stos
int
cwtl
xor
cmp
xor
push
imul
js
mov
jmp
ljmp
test
xchg
cmp
xor
xchg
jp
fildl
fs
adc
xchg
cld
cmpsb
clc
push
std
bound
sbb
enter
lahf
mov
movsl
mov
imul
and
sbb
push
push
test
sub
pop
mov
ja
es
call
jb
cmpsb
into
add
inc
xor
xchg
cld
jecxz
add
push
pop
insb
lcall
push
outsb
jmp
or
popf
fwait
shrl
sub
pop
insl
shll
adc
movsb
mov
cmpsb
jae
mov
sbbl
leave
mov
xchg
out
movsl
inc
jmp
add
adc
sti
testb
xchg
dec
xor
aas
mov
fldenv
push
outsb
jo
shll
insl
flds
fwait
jne
fstpt
push
sub
or
stos
in
repz
in
mov
mov
push
test
andb
or
scas
fs
cli
push
or
imul
xchg
inc
xchg
ds
or
call
adc
jnp
dec
sti
sahf
nop
or
movl
or
xchg
arpl
out
sahf
push
cli
inc
leave
int3
outsl
inc
inc
mov
or
dec
pop
push
fldl
js
xchg
addr16
fdivl
lret
insb
in
js
mov
xchg
pop
rorb
cmpsl
call
js
or
ds
xchg
xorb
cwtl
xor
sub
cmpsb
lret
adcb
cmp
pop
mov
popw
add
jno
xchg
xchg
je
fdivs
mov
inc
xor
lds
sub
daa
pop
dec
scas
fcoms
or
push
sub
jnp
jl
fcomip
push
push
fisubrl
adc
jno
xchg
lods
pop
xchg
fcmovu
fsub
push
andl
inc
mulb
mov
mov
hlt
lahf
sub
ja
lock
push
cld
cmp
adc
div
arpl
int3
fcomip
lcall
nop
xchg
and
xor
mov
aad
cld
lret
lds
ret
jbe
and
jnp
cmc
fistpl
cmp
test
mov
mov
movsb
jle
fidivrs
cmp
call
pop
mov
pop
cmc
mov
mov
push
xchg
pop
inc
sbb
pushf
rcrb
xor
cmp
fdivrs
pop
jmp
jbe
xchg
or
fs
jb
js
xchg
add
decl
out
mov
stos
mov
ficomps
and
cmpsl
cld
dec
pop
dec
daa
cmpsl
sub
add
inc
xchg
and
cltd
mov
push
jae
in
enter
enter
xrelease
cmp
imul
in
dec
mov
xor
movsb
mov
xor
push
arpl
mov
xchg
pop
xchg
xorb
popf
jbe
sbb
sub
jp
dec
mov
ljmp
imul
add
mov
pop
pop
jnp
dec
leave
loope
xlat
fdivl
pop
test
xchg
cli
jl
arpl
add
out
jne
or
dec
int3
ljmp
je
mov
adc
xchg
mov
xor
imul
jle
lock
sbbl
lock
xor
pop
jbe
sahf
mov
mov
add
out
nop
sarb
cmpb
xor
pop
ds
cmp
dec
pop
and
loopne
jp
cwtl
loope
cmc
jb
mov
xor
fs
lret
cmpsl
gs
in
insl
out
mov
xor
cmp
outsl
in
addl
int3
popf
stos
ss
mov
push
dec
jne
push
add
out
jo
push
pop
std
and
shl
loopne
fisubl
loope
mov
mov
test
sub
push
les
notl
jg
dec
jbe
pop
xlat
aaa
pop
lds
out
mov
xchg
push
inc
ret
rcrl
push
push
pusha
push
ds
jne
test
lock
sti
and
stc
ja
dec
xor
mov
mov
cmp
push
adc
insb
daa
arpl
and
mov
inc
push
lea
and
cs
lret
push
popf
lcall
and
sbb
aas
mov
lds
ficomps
or
cmpsb
push
fdivrl
iret
ljmp
scas
pop
and
sbb
movsl
sti
sub
shl
lock
add
jnp
hlt
out
cltd
or
outsb
popa
cmp
adc
dec
push
jns
cmp
out
scas
xor
sub
dec
loopne
push
dec
xor
cmp
les
and
test
outsb
sbb
mov
es
dec
dec
push
and
cmpsb
dec
add
std
pop
outsb
and
in
ja
push
xchg
jle
aad
and
mov
mov
lock
fldl
icebp
push
lahf
pop
dec
dec
jo
jae
cmp
negl
jl
adc
out
test
pop
into
out
dec
movsb
lea
mov
adc
mov
pop
or
rorb
pusha
leave
imul
subb
sub
pop
dec
cmp
daa
add
repz
fwait
ljmp
fldenv
test
and
dec
and
xor
mov
inc
int3
aas
sub
mov
push
adc
inc
shl
cmpsb
out
sbb
pmuludq
scas
sub
int
and
std
fdivrp
call
mov
jecxz
jp
mov
cmp
xor
jle
add
add
outsb
sbb
fcmovne
sbb
pop
sarl
les
mov
push
pusha
push
add
mov
in
insb
pop
fmuls
mov
in
xor
int3
or
add
repz
orl
cmp
push
test
cmp
lcall
stos
data16
mov
test
int
or
je
sahf
cltd
adc
or
addb
push
pushf
adc
movsb
rcrl
adc
fucomp
fsubl
inc
mov
in
inc
cmp
push
js
mov
loope
stos
pusha
push
fisubrl
push
sti
pop
movhps
pusha
jmp
add
jb
outsb
xchg
outsl
ds
push
xchg
mov
xchg
in
push
mov
daa
andl
movhps
sub
int
cmpsl
push
jbe
leave
jne
in
popa
fcomps
scas
fildl
mov
addb
fsubl
add
rorl
xchg
mov
pushf
inc
push
pushf
loop
aam
or
mov
xor
adc
xchg
test
int
push
mov
imul
pop
ds
mov
test
jnp
dec
jp
or
dec
ss
or
mov
lock
pop
adc
ja
arpl
xchg
or
adc
push
sbb
cmpsb
cmp
out
sti
pop
test
sbb
push
mov
lcall
pop
push
or
fimull
inc
xchg
dec
mov
xchg
push
out
pusha
ss
rcll
not
arpl
ss
mov
popf
inc
inc
addr16
xchg
cmp
movsb
std
xor
sbb
sbb
xor
nop
inc
movsl
mov
inc
stos
add
dec
notl
mov
inc
test
jns
int
bound
push
ljmp
push
push
popf
out
and
mov
mov
scas
cmp
ret
int3
outsl
shrl
sbb
and
pop
push
decb
add
pushf
pop
mov
mulb
adc
incl
push
pop
aas
mov
ret
sub
mov
cmp
hlt
rclb
xor
arpl
xchg
mov
mov
jge
les
push
repnz
enter
js
inc
pusha
dec
ret
out
adc
xor
jnp
pusha
icebp
xor
sub
in
cmp
repz
pop
mov
out
rcrl
shll
mov
mov
mov
popa
mov
icebp
fsubl
sbb
cmp
int
hlt
jbe
fiaddl
cwtl
and
sahf
bound
xchg
lock
stos
repz
inc
pop
add
idivb
xchg
add
fucomi
hlt
mov
jmp
mov
inc
test
xchg
sub
in
mov
xor
push
sti
add
in
mov
xchg
andl
mov
js
aas
sarb
cli
push
mov
fstpl
rorl
xchg
push
push
mov
mov
lea
inc
std
dec
cmp
dec
arpl
sub
loope
enter
fidivl
xor
cmp
mov
and
cli
jle
xor
and
mov
mov
xor
mov
sbb
mov
jmp
insb
push
mov
je
xor
dec
sahf
rcll
stos
or
and
sbb
ret
mov
mov
fs
mov
pop
sbb
test
out
mov
sub
inc
divl
inc
xchg
test
jnp
sti
cwtl
pusha
das
or
mov
pop
fistl
jae
jnp
sbb
loopne
adc
js
sub
push
sub
push
aam
repz
pop
xchg
ds
sub
inc
push
dec
sbb
and
fildl
sub
ss
push
mov
mov
imul
aad
push
or
and
mov
xor
mov
out
inc
mov
jmp
add
in
mov
or
fsub
mov
sub
addr16
xor
or
pop
inc
xor
pushf
push
adc
mov
mov
push
push
enter
into
js
sub
ljmp
inc
and
sbb
push
cmp
adc
pushl
pop
sbb
stc
xchg
jmp
inc
pop
xor
mov
ljmp
into
shlb
or
dec
jg
xchg
sbb
les
inc
add
and
xor
and
scas
mov
and
push
dec
xchg
rorb
mov
loopne
cmp
dec
arpl
adc
movsb
inc
nop
punpckldq
xor
mov
or
mov
or
pusha
iret
call
aaa
xchg
insb
and
inc
cs
mov
stos
jno
mov
mov
adc
xchg
xor
insl
adc
das
shlb
add
jge
or
jg
mov
aam
test
add
das
jne
push
bound
adc
jl
dec
push
push
emms
or
mov
jo
nop
lcall
pop
scas
push
ss
popa
lods
test
outsl
cli
imul
mov
lock
jne
add
rorb
mov
insb
repz
sub
fsubr
mov
imul
adc
stos
scas
iret
jge
xchg
mov
mov
xchg
pop
xor
dec
dec
jecxz
dec
adc
test
call
fisubs
push
pushf
or
xchg
imul
mov
push
jg
mov
test
sbb
sub
pushf
popf
and
ret
sahf
jae
push
or
gs
in
mov
xchg
gs
bound
mov
lods
cld
pop
pop
adc
popa
aaa
jne
pop
movl
movsb
fcmove
lret
movsb
cmp
fs
pop
sbb
or
iret
iret
les
pusha
xor
in
addr16
call
in
jne
int
enter
cld
pop
sub
ds
push
push
fcomip
cmp
jbe
jg
cli
xchg
cld
mov
test
js
mov
fistl
scas
mov
rcr
lea
inc
sti
mov
mov
xor
push
scas
aaa
jmp
dec
jnp
test
fldenv
insl
sarb
mov
mov
push
in
xor
gs
push
lods
xchg
adc
xor
push
dec
xor
or
les
into
icebp
cmp
in
outsl
into
or
mov
xor
popa
inc
cmp
loop
out
insb
fwait
sahf
std
pop
sbb
sbb
mov
cltd
in
lcall
adc
add
ret
shrb
adc
dec
mov
mov
xor
jp
ljmp
and
cmp
ds
sbb
fsubr
mov
cli
lret
cmp
or
aas
test
jg
ds
inc
dec
lods
dec
lret
jae
fbstp
jbe
and
lock
xchg
dec
push
push
xchg
je
test
or
iret
push
mov
fcomp
mulb
int
inc
add
cmp
aas
es
or
inc
iret
ret
and
rol
jno
pop
ret
fwait
imul
cmp
sub
cmp
xchg
push
cmove
paddq
jne
mov
stc
repz
dec
sub
dec
fistpl
sti
fwait
movsb
fildl
in
push
cmp
stos
jnp
xor
and
arpl
and
lahf
ja
inc
jmp
push
mov
fwait
cmp
lods
nop
mov
das
dec
push
xor
stos
sbb
arpl
or
push
addr16
inc
sbb
dec
sub
xor
jb
inc
lret
out
out
ljmp
sbb
cmp
xchg
inc
rcrb
lods
out
sbb
dec
outsl
into
rcr
mov
in
arpl
scas
xchg
out
adc
outsl
push
int
add
cli
imul
lret
dec
cli
dec
dec
pop
insl
in
pop
push
jne
andb
inc
mov
dec
ret
sarl
in
adc
mov
xlat
repz
iret
loopne
xchg
push
mov
bound
mov
xor
or
pop
aaa
das
lods
bound
testb
inc
pop
js
jnp
mov
ljmp
pop
adc
mov
lods
add
clc
cltd
hlt
sub
repnz
mov
iret
cltd
movsl
push
shll
out
test
dec
negl
mov
stos
fisubl
daa
sub
dec
xor
mull
dec
cmp
leave
mov
xchg
cmp
aas
and
pop
popa
ret
lcall
push
fs
push
lock
jmp
lahf
add
adc
lods
scas
out
adc
lahf
or
popa
mov
and
ss
stos
stc
stos
cmpl
mov
push
inc
out
mov
add
dec
je
cli
outsl
xor
sahf
mov
mov
insb
pop
xor
repz
loope
loope
data16
rolb
mov
ret
jmpw
or
out
dec
ss
mov
movsl
adc
cmpsb
sub
and
jne
rcll
insl
pop
sub
cmpsl
out
xchg
xchg
jl,pt
pop
dec
cmpsl
sbb
pop
addl
dec
mov
push
daa
es
cli
dec
pop
fdivrs
or
mov
outsb
cmp
nop
dec
lcall
cld
repz
stos
dec
lea
imul
insb
push
int
stos
sbb
int
pop
ud2
daa
sub
das
add
out
ret
stc
mov
les
jecxz
stos
mov
arpl
add
xchg
test
fwait
outsb
or
bound
mov
stos
adc
bound
pop
cwtl
sub
xor
xchg
and
mov
ret
ret
or
fsubr
mov
rcl
lahf
mov
push
cld
jecxz
push
shll
imul
or
scas
xchg
scas
inc
daa
xor
cmp
popa
shrl
fsubs
push
shr
bound
push
jns
in
shll
push
test
xor
inc
or
dec
lods
faddl
pop
push
jp
idivb
add
xchg
sbb
inc
aam
dec
aaa
dec
sub
in
in
sti
push
jle
jnp
mov
mov
out
mov
dec
movsl
sbb
int
jp
and
sbb
out
add
dec
mov
cmp
cmp
out
cli
aaa
sub
stc
dec
cmp
pop
popl
jbe
sahf
mov
std
ficoms
mov
and
inc
negl
icebp
pop
dec
iret
sub
dec
ljmp
shl
pop
fldt
cmp
cld
jae
xor
jbe
enter
imul
inc
pop
pop
rep
xchg
mov
mov
mov
cmpsl
ffree
cmpsb
ret
lcall
movsl
cmp
or
xorl
sbb
hlt
cli
push
loop
std
fldl
js
movsl
push
cmp
hlt
inc
pop
and
inc
ret
negb
fsubl
jae
mov
gs
test
inc
jecxz
imul
cmp
fsubl
push
call
ja
test
lcall
aam
stos
jne
add
and
cs
jo
cwtl
adc
mov
sbb
push
jl
xor
xor
mov
adc
cltd
sbb
fisubl
sbb
push
add
rolb
inc
mov
pop
je
or
icebp
xor
icebp
push
fstps
and
into
sbb
jo
add
test
hlt
insl
cmp
dec
pushf
movsl
aas
lods
add
test
stos
sbb
insl
push
mov
sub
jns
repnz
out
mov
pop
sti
sbb
jb
xlat
mov
shll
int
xchg
dec
dec
push
jns
not
fnstenv
fs
lods
cli
test
pop
mov
ja
iret
xchg
pop
pop
and
leave
outsl
pop
test
jg
insb
mov
or
dec
push
xchg
shlb
sahf
cmpsb
mov
pop
and
out
mov
inc
xchg
mov
push
dec
lock
and
lahf
jns
pop
gs
inc
xchg
pop
clc
xor
xchg
in
int3
cmp
in
out
cmp
jnp
cmpsl
jge
and
adc
jns
mov
fwait
or
xchg
fsubrp
flds
call
add
cltd
dec
ret
push
gs
cmc
sbb
inc
test
push
rclb
ja
and
mov
ret
repz
inc
stos
sbb
dec
lahf
into
mov
push
scas
shll
cmpsb
jne
incb
test
ljmp
add
in
mulb
xor
inc
arpl
outsb
push
push
lret
movsb
mov
lahf
or
das
jns
fs
shrd
dec
jne
inc
inc
adc
sbb
sub
fwait
stos
pushf
sbb
ja
push
pop
adc
mov
les
mov
fistl
mov
mov
into
push
test
cltd
cmp
wrmsr
jae
dec
testb
xchg
not
xchg
pop
fs
xor
cs
lock
cld
bndldx
out
pop
adcl
mov
lret
pop
mov
data16
mov
mov
or
xor
xor
push
or
cmp
ret
mov
dec
ljmp
in
loopne
dec
mov
adc
push
and
setge
cltd
outsl
mov
arpl
add
xor
ret
aam
add
shll
lahf
rorl
bound
jns
xor
xchg
lcall
jg
mov
xor
mov
outsl
push
or
mov
mov
stc
dec
data16
sub
adc
sbb
sub
jp
lock
and
js
inc
test
test
mov
sahf
test
xchg
mov
cmp
shlb
sub
mov
loopne
cmpsl
test
add
scas
leave
ss
sbb
pop
pop
testl
stc
jnp
add
icebp
mov
fldcw
jmp
inc
cltd
xchg
dec
jo
mov
data16
nop
cmp
cli
jmp
std
nop
or
cmp
cmp
pop
clc
je
pop
js
ljmp
outsb
ljmp
loope
fcomps
push
daa
je
mov
push
mov
push
inc
jnp
mov
aad
push
dec
push
cmp
mov
out
xor
shr
jp
in
pusha
leave
shrb
repnz
dec
jns
cmp
sub
push
nop
push
adc
ljmp
or
adc
dec
mov
xor
mov
jmp
pop
mov
leave
push
xor
cmpsl
xlat
stc
divb
div
jne
cli
leave
pop
cmpb
adc
vmovups
inc
jmp
cmc
test
aam
inc
fstps
loopne
xchg
iret
inc
mov
lods
enter
addr16
and
hlt
rorb
adc
mov
push
cmp
dec
mov
cmc
dec
cmp
por
sbb
jl
call
sub
sbb
shll
mov
sbb
pop
loop
test
lret
xchg
fists
test
leave
mov
mov
jmp
cli
test
fwait
in
jl
mov
push
mov
nop
push
push
jb
mov
mov
or
xor
pushf
addr16
jbe
lret
insb
mov
cmpsb
jbe
adc
mov
je
sbb
insb
into
loope
mov
sub
push
push
mov
mov
xchg
mov
lret
icebp
mov
inc
fdivs
sbb
rorl
imul
adc
xor
mov
ss
dec
mov
cld
js
div
imul
dec
push
int3
dec
xchg
js
xchg
es
loop
sahf
jbe
lcall
xchg
aaa
pop
add
das
mov
adc
sbb
xchg
push
sub
jge
movsb
sbb
insb
icebp
icebp
lds
data16
and
push
xor
jns
push
jne
fcomp
aad
repnz
int3
adc
jmp
and
lret
outsb
sub
je
cmp
lea
xchg
insl
fs
and
aam
mov
ret
scas
daa
mov
stos
scas
mov
into
sbb
push
xchg
icebp
push
mov
jge
dec
xchg
std
and
adc
outsb
mov
dec
stos
int
inc
shll
push
dec
push
les
or
lods
arpl
or
in
push
or
repnz
daa
addb
int
rcrb
or
fldenv
mov
or
inc
inc
jmp
xchg
jge
test
ljmp
mov
daa
sbb
mov
push
shrb
dec
pop
xor
inc
cmp
insl
sbb
push
loopne
fcmovnu
stos
push
mov
mov
out
push
pop
cmp
and
sub
mov
aas
push
fdivrs
cmp
jae
dec
dec
icebp
xor
jg
out
push
pop
or
jle
push
cld
mov
imul
add
jl
inc
adc
push
adc
sbb
inc
add
push
es
or
pop
dec
fisttpl
popf
dec
aaa
jmp
or
insl
dec
incb
jmp
pop
cmc
mov
lods
xchg
dec
or
cs
shl
aaa
jmp
leave
pop
adc
mov
xchg
mov
pop
pushf
in
cmp
pop
imul
cmp
xlat
into
cmp
lahf
cmc
xchg
scas
push
mov
repz
xor
lea
cmp
push
fdiv
aam
xchg
mov
xchg
je
aam
pop
int
add
jb
in
pop
sub
mov
push
sub
or
sar
ja
add
ja
imull
into
cli
add
xchg
jg
jo
sub
mov
xlat
mov
and
inc
inc
fwait
mov
dec
and
push
sub
mov
dec
xchg
loopne
inc
inc
hlt
jge
enter
int3
jo
inc
sbb
sbb
mov
imul
push
and
cmpsl
decl
rolb
popf
cmp
push
test
in
xchg
scas
mov
mov
pop
mov
sti
cvtps2pi
inc
mov
mov
xor
sti
inc
in
xchg
movsl
push
push
movsl
lcall
sbb
mov
cltd
les
imul
inc
test
loop
sub
dec
mov
push
pushf
jle
hlt
fldcw
ja
je
das
mov
and
mov
adc
andb
push
xor
nop
push
xor
movsl
mov
dec
mov
jns
pop
arpl
test
and
inc
xchg
shll
adc
mov
ret
xchg
lods
or
insw
push
push
fisubrs
hlt
pop
or
stos
mov
hlt
aas
mov
ffree
ja
out
test
lods
and
xchg
idiv
popf
movsl
pop
sbb
shll
inc
arpl
sub
daa
lods
popf
sub
enter
inc
pop
mov
js
push
push
push
aad
inc
loop
scas
out
scas
xchg
mov
test
and
test
and
and
mov
adc
adc
sub
imul
daa
push
adc
add
cmp
push
lret
pop
add
jb
pop
outsb
fdivs
jns
movsb
and
imul
stos
fidivrs
lods
fmull
scas
pushl
das
mov
mov
mov
retw
and
mov
cmpsb
push
or
sbb
pop
movsb
adcb
insb
adc
sahf
in
test
enter
mov
lods
incl
fisttpll
lock
xor
mov
jae
inc
mov
mov
mov
mov
pop
movsb
xchg
fcmovb
clc
mov
test
in
insl
outsl
daa
daa
movsl
rcrb
pop
imul
loope
inc
pop
sahf
out
negb
mov
call
mov
mov
inc
movq
movl
sbb
addr16
adc
mov
ret
test
sbb
jae
cmp
xlat
sbb
mov
xchg
in
inc
mov
mov
push
aas
pop
int3
fwait
or
into
out
add
pop
mov
iret
movsl
fstp
imul
arpl
pop
inc
pop
mov
je
xor
in
or
xor
push
loopne
push
popf
push
fadd
mov
orb
fs
push
pushf
call
jns
sub
mov
dec
lcall
mov
xlat
add
jb
ret
xchg
out
or
xchg
push
xchg
outsl
add
and
mov
push
out
ss
stos
movsb
pop
mov
pop
std
imul
adc
ja
test
repnz
jg
lea
cmp
stc
lods
icebp
cmp
xchg
lcall
cmp
icebp
push
sbb
jecxz
cmp
inc
xorl
loope
ret
jp
dec
sub
sarb
and
lds
lock
outsb
mov
repnz
arpl
jbe
jno
adc
xor
add
lock
xlat
inc
sbb
insb
mov
out
movsb
pop
or
add
mov
jnp
icebp
fidivrl
ds
mov
sahf
xchg
stc
sub
clc
xchg
xchg
rorb
js,pn
mov
scas
push
or
xchg
mov
mov
dec
adc
aam
jge
jnp
test
out
pop
xor
inc
mov
or
rol
ds
out
ss
ficompl
popfw
mov
push
test
ja
in
adc
cmp
js
lcall
dec
mov
dec
lret
dec
and
ret
cmp
gs
adc
jle
loopne
sbbl
mov
data16
loop
xlat
mov
int3
scas
pop
sbb
fwait
sub
dec
push
cmp
xchg
stos
sbb
flds
or
cmp
push
iret
xchg
test
std
dec
int
add
and
loope
das
mov
mov
or
ljmp
clc
mov
test
sbb
les
cwtl
push
mov
ret
cli
in
iret
gs
pop
int
mov
in
sbb
inc
frstor
mov
lret
lea
mov
call
ja
enter
push
js
out
test
aaa
or
sbb
clc
or
mov
xchg
sbb
dec
outsl
fnstcw
test
les
mov
sti
addr16
cs
cwtl
stc
fcoms
cmpb
push
mov
mov
cltd
fwait
mov
inc
out
xor
inc
cmpsl
and
jp
xchg
stc
icebp
enter
or
shl
cmp
dec
xor
sbb
cld
dec
dec
aas
pusha
ja
xlat
jmp
mov
pop
insb
ret
pop
sbb
lret
shrl
dec
sbbb
test
ret
mov
cmp
ret
inc
mov
out
pop
add
sahf
fcomps
sbb
push
xchg
stos
xchg
xor
push
add
scas
mov
dec
aad
xchg
out
mov
in
pop
add
cmp
les
pop
imul
aam
lods
in
loopne
fwait
stos
sarl
jo
daa
repnz
call
aad
jae
cmp
and
jg
mov
jle
inc
into
mov
inc
in
js
das
mov
xchg
dec
int3
popl
dec
in
popf
addr16
enter
scas
out
jo
mov
mov
dec
xor
call
ljmp
jmp
jmp
jl
xchg
popa
mov
add
ja
div
dec
mov
jl
mov
sbb
nop
xor
or
outsl
scas
jnp
xor
pop
popl
push
stc
repnz
ret
cmp
inc
mov
push
mov
lret
add
inc
mov
cs
out
dec
and
int3
and
cmc
icebp
fsubrl
sub
jg
movsb
pop
ret
dec
push
xorl
addr16
loope
sbb
sbb
sahf
sub
jl
push
jno
and
jnp
mov
stos
xchg
or
push
sbb
das
outsl
subb
lods
push
stos
mov
xchg
sbb
and
neg
into
xor
data16
test
mov
outsl
xor
adc
push
sub
pop
repz
sub
mov
shrl
pop
xor
sub
jg
xlat
xor
out
data16
pop
mov
push
mov
call
test
test
pop
lods
xchg
and
cmp
lods
push
cmp
adc
mov
and
sub
fisttps
leave
jp
lock
xor
push
jo
pop
pop
in
mov
scas
adc
fucomp
pop
lret
aad
jae
add
ljmp
mov
push
inc
std
and
push
sub
sahf
jno
mov
ja
movsl
ja
cmp
pop
cmp
cmpsb
outsl
fimull
dec
add
mov
movsb
stc
push
inc
cmp
mov
push
push
mov
add
mov
mov
sbb
mov
sbb
mov
out
xchg
loope
push
pop
fists
jecxz
lcall
dec
adc
scas
dec
mov
jb
jecxz
and
xchg
sti
in
inc
push
movsb
fadd
pop
test
das
or
adc
adc
xchg
aas
imul
in
aam
jg
xor
js
jno
repz
dec
xchg
nop
cwtl
sahf
dec
in
mov
push
orl
jmp
sti
loope
or
sbb
icebp
add
xor
scas
xor
xchg
jp
fidivrl
cwtl
dec
mov
sbb
sbb
mov
mov
pop
repz
pop
loop
pop
jae
mov
adc
gs
cmc
inc
jne
fcompl
repnz
pop
xlat
jmp
push
cwtl
enter
cmp
movsb
xchg
inc
cmc
or
out
sahf
cwtl
push
pop
scas
out
dec
xlat
cmp
fisubrl
xor
push
pop
mov
mov
mov
fidivl
sahf
in
cmpsb
adc
mov
popa
cmp
out
jg
jne
out
cmp
xchg
sbb
notl
cmp
imul
mov
fsubrs
mov
xor
movsb
push
xchg
in
xchg
fldcw
adc
or
mov
test
mov
jno
jno
or
fstp
or
loop
in
add
adc
cmc
inc
mov
add
mov
sahf
xchg
mov
mov
gs
ja
push
mov
mov
nop
adc
xchg
cltd
inc
jp
imul
sub
adc
stos
jge
sbb
mov
mov
idivl
xchg
mov
dec
push
stos
mov
jge
cs
jnp
daa
and
lods
xlat
mov
xchg
shr
into
mov
aam
cltd
add
jp
punpckhdq
mul
cmc
sub
frstor
montmul
cmpsb
add
lds
lock
inc
sub
dec
cmp
mov
pop
mov
sti
mov
xor
sub
inc
in
jae
stos
xchg
cmp
xchg
leave
mov
scas
add
cmp
mov
cmp
mov
inc
loope
testb
negl
repnz
js
mov
adc
add
in
data16
dec
and
xlat
xorb
xchg
inc
cltd
fmuls
stos
mov
insb
pop
cmp
mov
or
xchg
pop
mov
and
ret
xchg
lret
inc
and
and
jbe
or
cmp
xor
loope
fisubrl
sbb
sbb
movups
mov
pushf
popa
push
push
xchg
fisttps
xchg
clc
xchg
out
adc
andl
roll
and
ljmp
add
aaa
jmp
and
push
lret
es
out
sbb
sbb
insl
cmp
sbb
sbb
bound
jbe
cmpsb
movsl
clc
push
je
aad
sub
lea
incl
ss
sbb
jno
add
push
in
mov
mov
dec
push
sub
mov
sbb
pop
and
bound
cltd
pop
lock
add
jnp
push
mov
add
and
and
or
leave
jbe
dec
lods
push
push
stos
sub
shrb
cs
adc
cmpsb
pop
mov
inc
daa
popf
sbb
push
or
sbb
enter
xor
mov
sbb
roll
push
mov
addl
in
sbb
scas
stos
mov
imul
fdiv
repz
rorb
sbb
insl
jo
ret
mov
push
sbbb
jg
jl
aaa
pop
jns
mov
js
rclb
mov
and
or
scas
les
insl
push
into
ljmp
pop
adc
xchg
adc
incl
div
fmull
xor
xor
loope
xchg
sub
dec
mull
jl
lock
dec
clc
pop
mov
inc
leave
test
subb
ret
xchg
pusha
inc
fimull
das
push
jne
cs
ret
in
lea
sahf
push
ud0
test
test
jb
jbe
cmp
cmp
test
adc
xchg
lock
gs
rclb
xor
inc
add
sbb
pop
inc
ja
lods
test
mov
cli
xor
push
fwait
mov
out
pusha
loop
add
or
or
sti
adc
cmc
pop
lods
xor
xor
aaa
popa
push
aas
mov
aaa
jmp
mov
mov
clc
lods
mov
adc
stc
adc
mov
inc
and
je
or
pushf
fiadds
mov
xchg
dec
dec
mov
xor
add
ret
lods
scas
sbb
sub
adc
loop
pop
aas
jns
adc
jmp
imul
mov
mov
push
xchg
imull
scas
jge
outsb
adc
adc
sbbb
scas
jne
mov
sahf
add
hlt
flds
adc
xchg
loope
cmp
jns
jo
or
inc
clc
and
or
lret
xor
jb
jle
jnp
or
sbb
pusha
push
pop
jns
push
and
lods
mov
mov
adc
lret
ret
sbb
in
xchg
pop
mov
jne
leave
sbb
lahf
adc
mov
mov
mov
pop
ret
xor
shll
das
and
add
movsb
or
decb
xchg
adc
outsb
push
ljmp
sahf
sub
repz
inc
adc
leave
fnstcw
or
sbb
and
sbb
lods
xchg
popa
xor
js
push
fsubrp
inc
sarl
sbb
jns
rcl
xlat
dec
subb
fcomip
mov
pop
leave
adcb
sbb
cltd
jg
cli
mov
repnz
jno
push
lds
in
pop
sub
js
aam
pop
lret
and
mov
popa
fistpl
call
jecxz
enter
jl
xor
xchg
aas
jb
sub
sbb
rcr
sbb
test
push
sub
into
and
mov
sahf
stos
shll
pop
inc
rcrl
xchg
cmpsb
ja
sbb
xchg
sarl
mov
sbb
inc
jle
mov
frstor
orb
adc
in
and
xor
jle
add
jmp
dec
or
mov
shrb
adc
mov
pop
xor
or
into
mov
push
and
ljmp
xor
lcall
ret
cmpsl
lea
sahf
pusha
inc
mov
incl
subb
negb
xchg
idivl
pop
ds
iret
pop
ljmp
jmp
jnp
fmuls
pop
xor
pop
mov
into
or
insl
dec
cmc
rclb
add
or
dec
or
or
dec
test
push
push
inc
loopne
scas
pop
push
ja
inc
xchg
cwtl
pushf
jg
mov
push
outsb
xor
mov
aaa
cmp
pop
jno
jecxz
mov
int3
cltd
xchg
test
in
cltd
pop
cltd
xchg
jno
outsl
addr16
fcmovnbe
out
dec
xchg
xor
sti
in
test
mov
hlt
daa
gs
lret
mov
das
add
stc
cmp
repz
mov
std
pusha
iret
pop
aad
mov
mov
xchg
cs
mov
push
mov
aam
jb
shld
das
and
cmc
ja
sarb
jmp
push
lcall
dec
push
cmp
out
out
pop
mov
mov
mov
xchg
xchg
ds
ficompl
out
mov
in
adc
dec
iret
lods
push
or
xchg
inc
sub
into
cmp
lods
testl
arpl
testl
lahf
add
mov
cmc
cmpsb
sub
push
into
insb
xor
inc
inc
pop
xchg
mov
cli
xor
cwtl
loop
jecxz
shl
xor
lods
gs
mov
mov
ss
shlb
mov
sub
js
fsts
jle
mov
add
repz
add
pop
leave
dec
call
jns
movsl
or
xchg
decb
pusha
call
and
out
mov
jle
test
inc
push
sbb
test
ss
dec
inc
push
sbb
in
pop
mov
inc
inc
add
xor
cs
fidivs
negb
arpl
pop
sti
mull
movsl
or
decl
xor
loop
fisubs
imul
add
sub
div
daa
out
in
fs
lds
sub
pop
mov
popf
test
and
pusha
es
jmp
mov
fsubrs
mov
push
imul
lret
xor
pop
jle
andl
test
push
and
jno
loop
fdivs
je
mov
push
orb
inc
push
push
jae
pop
jg
add
mov
scas
gs
mov
aad
out
imul
je
packuswb
test
sub
mov
enter
xlat
jge
arpl
in
fldcw
jo
ljmp
mov
push
jecxz
int
daa
popf
ds
sbb
mov
jb
sub
js
shrb
jne
ret
and
push
fxch
aam
les
and
jns
push
je
nop
ret
jae
jl
xchg
shll
je
push
lock
jae
lods
inc
add
adc
movups
inc
outsl
xor
ss
sub
ljmp
add
mov
icebp
sbb
pop
decl
jb
sub
mov
addr16
xchg
mov
test
enter
add
dec
test
jns
push
jmp
or
test
int3
repnz
adc
jecxz
fwait
dec
nop
jbe
sahf
cmp
in
inc
cmp
mov
arpl
jp
lock
add
xchg
xchg
movsl
lods
pop
push
ljmp
sti
sub
andb
roll
scas
xchg
loope
fldl
mov
lahf
loopne
das
add
pop
pop
and
sti
test
add
xor
mov
imul
fnstsw
add
popf
jle
xor
es
fs
test
es
sub
dec
subb
inc
or
xor
adc
sbb
bound
adc
rolb
xchg
out
mov
sub
inc
jno
pop
pop
dec
pop
mov
daa
mov
xchg
scas
loop
cli
xor
inc
jl
cmpsl
adcb
aad
xor
sbb
stos
jl
dec
pop
in
inc
out
vmovq
fmuls
and
and
sbb
or
ffree
iret
cs
cmp
jecxz
cltd
fs
mov
call
inc
cmp
inc
outsl
cmp
jle
les
cld
jmp
mov
cld
mulb
jecxz
xchg
sub
je
inc
jl
xchg
push
xchg
test
mov
xchg
and
adcl
pop
test
getsec
inc
fildl
xor
cs
out
jns
cmp
push
xor
fsubl
out
sbb
add
sub
int
adc
mov
out
add
pop
mov
pop
dec
dec
hlt
outsb
add
mov
and
xchg
test
mov
dec
and
fs
or
insb
xchg
push
lock
pop
mov
lret
ljmp
fisubs
mov
and
enter
sbb
pop
jbe
lret
aaa
fdiv
test
ret
dec
lret
inc
jecxz
je
insl
pop
pop
leave
mov
fistpl
sub
dec
mov
lret
into
lock
stos
pusha
dec
jne
loope
fbstp
xchg
addl
repnz
cmc
and
pop
aaa
out
out
shlb
fiadds
dec
aas
je
mov
and
cld
lods
sbb
rcl
cmp
hlt
dec
das
fcompl
mov
cmpsl
jns
out
pop
mov
cld
add
sub
cltd
push
adcl
mov
mov
sbb
mov
dec
fs
test
test
push
mov
adc
dec
inc
out
mov
out
fmulp
rcll
stc
insb
mov
daa
cmc
xchg
aas
loopne
out
add
out
mov
mov
nop
inc
lods
mov
sti
lahf
mov
pop
add
mov
or
sub
inc
pop
cmp
nop
pop
ljmp
xor
loopne
aad
aad
pop
push
dec
add
mov
and
xchg
pop
test
rorl
push
scas
mov
icebp
adc
cmc
pusha
sbb
xlat
mov
jbe
sub
orl
lret
sub
adc
arpl
mov
or
test
cld
or
or
fstpl
insl
mov
out
call
sub
nop
sar
loopne
xor
fucomp
and
dec
mov
cld
xor
mov
sbb
or
dec
test
pop
lock
in
mov
or
out
xchg
xchg
test
add
cld
jno
fnstenv
lock
adc
les
aaa
sub
sub
jp
inc
fildl
popa
mov
add
mov
aaa
push
pop
lahf
outsb
imul
cs
popf
pop
aas
iret
mov
mov
mov
lock
das
rol
outsl
out
mov
xorl
push
mov
sbb
mov
imul
movsl
lret
push
cmp
inc
push
hlt
je
ret
push
mov
sub
jne
in
mov
jp
push
mov
jbe
cmpsb
cmp
pop
mov
jl
push
aaa
js
adc
adcb
je
xchg
add
mov
mov
mov
mov
call
mov
xchg
dec
xchg
cld
cmp
add
inc
xchg
pop
pop
mov
sti
into
in
adc
int3
adc
sbb
dec
adc
je
dec
imul
xchg
outsl
inc
sahf
jns
pop
mov
repz
imull
pop
mov
mov
cli
dec
dec
adc
xchg
in
xchg
push
cmp
das
out
loopne
xchg
sbb
cli
xchg
dec
mov
fsubr
shlb
fildl
int3
outsl
fldcw
mov
dec
add
out
mov
leave
mov
adc
loopne
or
cmpsb
loope
in
popf
cmp
clc
ret
inc
add
pop
mulb
mov
mov
outsl
sbb
mov
fldt
movsl
xlat
movsb
pop
jnp
loop
add
fmuls
and
stos
subl
add
push
pop
fcmove
mov
loope
push
daa
sbb
xchg
insl
bound
test
jb
push
shrl
js
sub
adc
dec
mov
mov
mov
pop
dec
sti
out
jg
inc
dec
xchg
movsl
jl
gs
lods
repz
into
ljmp
sub
jg
xchg
pop
add
lds
and
inc
movl
addr16
adc
stos
xor
mov
inc
xor
cltd
lock
mov
pop
sbb
ljmp
push
jns
psubsw
add
ss
cmpl
fld
adc
jl
sar
or
sahf
pop
movsl
fsubrp
int3
push
jno
jne
pop
or
cltd
cmp
pop
mov
jmp
xchg
add
fsubrs
pop
outsl
in
es
dec
jl
sbbb
fisttpll
arpl
ret
imul
dec
jbe
mov
mov
cmc
or
adc
mov
push
in
xchg
cs
lahf
mov
rolb
jmp
jb
push
cmpsl
xchg
sbb
mov
int3
testb
jp
or
scas
or
xchg
fucomp
xor
ds
xor
xchg
cld
mov
test
xlat
pop
pop
pop
fsubl
icebp
out
sub
scas
leave
adc
aam
adc
out
data16
mov
fnstenv
inc
pop
repnz
test
add
cld
out
or
jp
xor
call
xor
jns
inc
mov
jnp
jle
mov
pop
insb
stos
movsb
sub
mov
jmp
inc
mov
fisubrs
insb
jl
push
inc
adc
jae
add
les
ja
test
pushf
sbb
int3
pusha
aaa
sub
aad
std
and
data16
mov
aaa
je
xchg
dec
jns
dec
shl
fdivs
shl
and
call
lock
cli
mov
repnz
sarb
push
push
jne
dec
or
enter
dec
test
cli
mov
dec
adc
jecxz
stos
push
pop
sti
or
cltd
sub
adc
mov
decb
lret
leave
add
sub
imul
xor
sbb
push
mov
dec
cmpsb
mov
movsb
push
push
or
js
and
lock
leave
mov
sbb
test
iret
lods
mov
mov
xor
inc
jp
divb
mov
mov
add
cmpsb
sub
jp
pop
mov
dec
and
xchg
add
ds
cmp
inc
dec
in
lock
cmp
sti
int3
lea
dec
inc
out
lods
jp
mov
and
sbb
sub
cmpsb
bswap
ds
test
add
jg
outsl
fwait
xorl
rorb
cwtl
mov
mov
fistl
rep
movsb
xchg
nop
cld
arpl
rcll
push
stos
stos
xchg
mov
mov
jmp
lret
daa
adc
mov
sub
gs
mov
xchg
sub
xchg
mov
lcall
pop
xchg
xchg
xchg
rep
xchg
lods
das
cmpsl
and
mov
jg
leave
imul
imul
mov
lods
loope
sub
data16
lods
xchg
lea
push
jb
es
imulb
imul
andb
xchg
inc
or
fwait
les
dec
loope
push
cli
mov
mov
mov
ficoms
je
call
and
jg
sahf
stos
add
stos
decl
mov
lds
outsb
add
xor
pop
lcall
lods
cmc
cmc
cmp
mov
fs
in
push
jno
mov
mov
ljmp
decb
hlt
mov
shlb
cltd
insl
sub
xor
aam
test
sbb
or
mov
xlat
insb
sub
sar
hlt
inc
enter
icebp
shrb
dec
stos
inc
imul
cs
mov
mov
arpl
std
movsl
aas
jns
jle
jne
pusha
paddq
mov
dec
lods
and
stos
pop
rol
pusha
into
dec
xchg
dec
mov
fistl
mov
clc
in
out
cli
lock
inc
outsl
mov
cmc
mov
inc
iret
and
xchg
movsb
cs
popf
jo
jne
mov
xchg
imul
pop
or
mov
xchg
ds
cmp
or
in
push
sub
shrl
mov
call
ljmp
inc
pop
sub
in
pusha
rolb
sub
mov
movsb
xchg
push
cmpsb
jo
jne
mov
mov
stos
ljmp
mov
mov
cmp
push
filds
add
jae
loope
les
pop
push
aad
xchg
mov
sbb
call
jmp
or
gs
lret
rclb
xchg
sahf
and
cld
sbb
jl
dec
outsb
mov
cmp
in
mov
pop
pop
stos
das
lods
xor
lea
push
push
leave
pop
cltd
aas
adc
jae
push
cwtl
fsubrl
mov
pop
dec
push
je
ficomps
ss
add
addr16
xor
mov
add
add
push
dec
or
mov
stos
dec
mov
ljmp
out
scas
outsb
rcl
fdivrs
loopne
pop
mov
push
add
lods
loope
jp
cmp
iret
je
stos
push
add
cmp
pop
cltd
lcall
push
ljmp
shll
mov
sbb
sbb
add
mov
mov
movsl
pop
dec
or
pop
imul
pushf
sub
sarl
add
jns
or
test
movsl
fstpt
add
lods
pop
mov
mov
arpl
jecxz
lea
or
or
mov
iret
fistps
jo
cmc
das
mov
push
add
sbb
imul
repnz
jae
bound
out
repz
pop
icebp
mov
je
jge
notb
pushf
cld
sti
loop
pop
xor
sti
out
addb
mov
pop
inc
xchg
icebp
mov
lock
in
hlt
mov
push
jne
cld
scas
jbe,pn
mov
xchg
sarb
enter
mov
xchg
dec
js
outsl
push
jno
push
add
or
jge
mov
sub
pop
mov
xchg
mov
ja
mov
bound
pop
std
inc
out
jp
or
arpl
shrl
jae
loope
int3
cmp
and
imul
or
or
sbb
out
stc
movsb
xchg
ja
sub
aaa
mov
mov
cmc
dec
je
add
push
xchg
mov
push
aas
mov
aaa
xchg
insl
je
fwait
inc
dec
pop
cltd
in
or
lahf
ja
mov
mov
fildll
push
daa
mov
cs
mov
mov
jnp
icebp
icebp
dec
add
outsl
dec
push
ljmp
push
scas
test
xlat
pop
push
add
jg
lahf
jnp
mov
imul
clc
push
fldl
push
xadd
cmp
cmpsl
push
xchg
arpl
lods
xor
sub
pusha
std
insb
xchg
shlb
sbbb
dec
icebp
adc
pusha
push
imul
push
fdivs
dec
leave
fimull
jae
inc
pop
add
inc
jp
mov
test
data16
pop
out
icebp
cld
adc
mov
in
and
je
xchg
pop
dec
or
xchg
xchg
sbb
cld
enter
aas
dec
je
push
pusha
rcll
add
push
rep
jge
or
cmp
lods
pop
mov
cmp
imul
xchg
sbb
jmp
nop
fadds
inc
jmp
clc
add
push
aad
insb
addr16
dec
pop
call
adc
or
sahf
pop
stc
repz
adc
loop
repz
xchg
out
movsl
ja
bswap
xorl
lea
mov
adc
or
mov
daa
or
dec
or
inc
mov
fwait
jo
jmp
pop
or
negl
out
nop
adc
add
lret
filds
and
or
sbb
inc
or
ret
xchg
popf
outsl
ficompl
mov
fisttpl
xor
out
mov
loope
insb
shrl
cmp
clc
test
call
sar
repz
fstps
aad
inc
mov
repz
xchg
into
adc
cltd
push
push
fs
sahf
lcall
cld
jbe
push
bound
mov
lahf
sub
js
addr16
sub
mov
shrl
je
pop
data16
aad
and
add
ret
sbb
add
std
decb
mov
mov
pop
aas
outsl
pop
mov
and
shl
rcrl
fs
push
jne
jbe
xchg
jle
inc
mov
jae
idivl
movsl
mov
outsl
mov
and
dec
je
movsl
mov
in
adc
jno
imul
popa
mov
pushf
add
daa
xor
out
enter
cmp
cwtl
dec
push
xor
jb
ds
dec
dec
sti
inc
mov
xor
bound
cmp
and
or
adc
cmp
add
or
aaa
ret
add
lret
mov
int
xchg
lahf
adc
push
cmp
movsb
add
mov
inc
xchg
loopne
out
mov
stos
xchg
pop
dec
test
sub
jo
lea
enter
int3
xchg
fcmovnu
negb
seta
pop
leave
out
sub
in
xor
insl
clc
inc
xchg
lock
data16
inc
mov
pop
mov
loope
sbb
fimull
add
shlb
aad
test
inc
shlb
mov
add
call
outsb
xchg
jp
mov
xorb
popf
xchg
imul
sti
mov
sbb
mov
pop
xor
mov
push
pop
fnstenv
push
mov
xlat
fwait
loope
adc
sbb
add
xchg
xchg
jecxz
jae
decl
jl
data16
or
pop
repz
or
popa
arpl
dec
sarb
and
mov
sub
lret
das
fidivrl
dec
pop
stos
divb
jle
fstps
mov
sti
fs
gs
push
jl
jbe
test
ficompl
add
jecxz
stc
bound
ljmp
inc
je
sbb
add
push
add
push
add
pop
dec
push
add
xchg
add
xchg
leave
cld
pop
cmc
mov
jno
pop
push
dec
jo
push
lret
mov
decb
movsl
push
mov
jmp
mov
sbb
add
adc
dec
cwtl
lods
sbb
insb
xor
sbb
int3
iret
mov
cmp
rorb
sarb
xchg
adc
into
lea
cmpsl
mov
and
ljmp
xchg
cmp
addr16
add
imul
fsts
mov
mov
stc
addr16
repnz
xor
notb
iret
lret
jmp
xchg
lds
cmp
imul
aam
rcrb
cmpsb
jg
lret
pop
add
add
xchg
fstl
sub
xlat
stos
mov
addr16
sub
push
xor
fiaddl
pop
daa
adc
xchg
mov
leave
arpl
jmp
rolb
outsl
out
cwtl
and
or
mov
test
shll
pop
mov
fbld
mov
xor
mov
inc
xchg
pusha
stos
into
pushf
inc
fldenv
lock
bnd
inc
mov
in
dec
scas
dec
sti
cmp
mov
xor
push
jb
pusha
sub
clc
xchg
mov
idivb
aad
inc
mov
mov
pusha
inc
jp
rcll
scas
stos
notb
shlb
cltd
inc
insb
les
pop
dec
ficoms
out
int
pop
stc
pop
mov
sub
sti
loope
imul
mov
gs
add
mov
xor
mov
cld
popf
mov
dec
sahf
repnz
sub
ficoms
mov
mov
cmpsb
push
pop
sub
mov
mov
sub
mov
inc
cltd
push
jle
xor
clc
and
loop
arpl
pop
sub
pop
sbb
dec
outsb
sbbl
xchg
aam
jmp
cli
test
enter
cmpsb
pop
loopne
cmp
jmp
xor
or
add
cmpsb
push
pop
rorb
push
cmp
lock
jne
pushf
inc
clc
xchg
push
stc
mov
loopne
call
pop
sbb
outsl
outsl
aas
pusha
push
andl
mov
loope
ds
mov
sbb
outsb
or
pop
int
fs
pop
es
shll
out
jnp
popf
sbb
ss
cld
and
ret
mov
loop
mov
pop
ss
inc
loopne
push
bound
popa
lock
jl
call
inc
filds
iret
rcrb
loope
dec
sti
idiv
movsl
das
stc
roll
push
mov
jl
mov
mov
loope
aad
inc
test
and
xor
test
sub
clc
push
cmp
adc
sbb
bswap
push
fs
mov
mov
push
mov
dec
mov
add
add
data16
sarl
push
mov
std
mov
mov
daa
xchg
cmp
lock
arpl
cmpsl
cmp
cltd
mov
rcrb
adcl
test
mov
ds
out
stc
int3
mov
lea
add
add
jp
adc
ja
sbbb
jle
add
xchg
test
sub
or
into
aad
scas
xor
enter
rcrb
dec
push
add
popa
mov
mov
sti
xlat
jno
pop
xor
lock
sub
inc
inc
xchg
xor
ljmp
fs
stos
pop
adc
imul
xchg
test
xor
in
sbb
mov
mov
push
pop
jl
dec
inc
jns
dec
mov
and
dec
pop
scas
jge
mov
inc
push
sbb
cmc
in
cmp
cmp
addb
scas
and
dec
push
fsubrs
or
leave
into
fidivrl
pop
sub
dec
cwtl
pop
int3
jns
ret
fbld
inc
cltd
push
jne
cwtl
mov
sub
push
jno
fcompl
sbb
mov
and
pop
js
sub
cmpl
rorl
xor
shlb
ror
enter
pop
int
add
push
push
std
pop
subl
push
je
adc
add
mov
mov
adc
icebp
mov
hlt
cmpsb
mov
lret
pop
and
cld
pop
std
into
inc
bound
adc
xor
stc
incl
mov
inc
or
inc
xchg
ficoms
in
and
and
mov
and
es
mov
ds
jbe
push
sbb
fst
add
mov
lods
dec
sbb
mov
lods
testl
xchg
fs
mov
push
cmp
sahf
mov
xchg
mov
out
lods
cld
adc
movsb
inc
and
sbb
jbe
bound
jns
and
xor
mov
and
xor
jle
adc
mov
lds
fnstcw
loope
pop
jecxz
and
mov
xchg
icebp
adc
sbb
jnp
xchg
data16
push
or
jecxz
and
mov
in
test
dec
mov
std
cmp
cmp
loope,pn
or
out
add
xchg
shlb
add
fstpl
jbe
mov
outsb
add
mov
popa
jp
fldenv
ds
fiadds
js
nop
mov
mov
ds
lds
loopne
mov
jecxz
cs
andb
ud2
fdivl
jge
cmp
push
ret
into
mov
jne
loope
aam
sbb
mov
push
cmp
xor
jb
push
imulw
inc
jnp
and
push
xor
or
adc
mov
fstl
mov
hlt
icebp
lret
test
outsl
enter
or
sbb
mov
pop
popf
mov
push
mov
xchg
adc
dec
test
push
mov
movsl
xor
jne
fdivrs
pop
or
enter
enter
push
jl
mov
and
outsb
stos
cmpsl
xchg
fidivrl
pop
shl
ja
fbstp
hlt
jbe
inc
jmp
mov
inc
xchg
add
movsl
sbbl
xor
mov
dec
js
testl
pop
dec
ret
mov
in
sahf
sub
xchg
ja
fmuls
push
ds
dec
or
and
movsl
add
cmp
xchg
push
dec
test
cmp
mov
outsb
aas
pusha
lds
mov
das
xor
mov
or
dec
push
ret
mov
testb
fists
xchg
cmpsl
mov
push
adc
xchg
dec
cmpsl
cmpsb
and
or
outsl
out
shll
dec
or
dec
push
and
dec
insb
xor
and
push
out
push
arpl
dec
jle
push
ret
stos
repz
fucomi
es
mov
adc
fwait
xor
push
int
insb
in
dec
test
fdivrl
jmp
xchg
mov
xchg
push
stc
push
cwtl
adc
data16
ljmp
xor
test
push
push
insl
lds
xchg
sbb
popf
sbb
inc
sahf
std
int
push
sub
enter
movsb
pop
loope
add
cmpsb
pushf
jl
pushf
push
sti
or
jg
imul
ret
aaa
xchg
pop
cmpsl
out
adc
push
and
and
std
and
mov
cmpsb
adc
mov
jmp
outsl
push
inc
in
call
add
pop
int
leave
int
xchg
xchg
stc
and
xorl
or
mov
clc
movsl
stos
les
xor
xchg
inc
cmp
popa
outsl
movsl
icebp
mov
scas
test
jno
xor
mov
dec
imul
dec
xchg
ljmp
lret
or
test
scas
jl
roll
das
stc
pop
or
mov
iret
sbb
mov
cwtl
cmp
mov
pop
aam
ret
sub
xchg
lds
xor
mov
fistps
add
daa
jmp
push
test
push
aas
mov
push
lods
cmp
lret
mov
gs
in
add
fwait
pushf
aaa
rolb
out
scas
sarb
fmull
lods
add
add
push
in
jle
cmpsb
sub
pop
adc
and
inc
gs
in
mov
lret
std
out
fisubrl
sbb
cmc
jae
dec
jmp
lret
sbb
rorl
xacquire
xor
and
cmpsl
xchg
pop
xchg
xor
dec
jae
rcrb
fsubs
adc
push
sahf
and
cmpl
push
add
and
sbb
js
cmp
or
mov
mov
dec
or
leave
es
sbb
test
sub
incl
add
mov
push
lcall
and
lret
mov
fisttpll
push
movsl
xlat
xchg
cmc
bound
imul
sub
mov
arpl
aam
push
pop
movsb
insb
test
mov
push
cmc
mov
mov
cmp
roll
inc
nop
mov
in
xlat
and
in
dec
cmp
stos
push
mov
and
mov
xlat
cmp
sbb
xor
call
jg
inc
into
mov
pop
lahf
rcr
add
hlt
mov
xor
jmp
pop
pusha
dec
pop
xor
nop
call
xchg
jae
outsb
in
cs
jp
xor
cmp
xchg
bound
push
hlt
adc
es
in
fdivl
popf
imull
stos
cli
je
jle
push
xor
dec
and
inc
arpl
in
ficoms
mov
hlt
ud0
pop
jae
push
stos
xchg
add
cmp
add
into
mov
mov
clc
lret
roll
in
nop
or
pushf
and
xor
movsl
and
hlt
popa
mov
rolb
out
xchg
lods
idivl
push
push
xchg
mov
stos
aad
mov
mov
mov
sbb
mov
mov
jb
dec
jmp
add
mov
sub
mov
pop
mov
shll
lret
mov
stc
jmp
xor
push
sub
addb
call
cli
clc
icebp
cli
jle
and
in
test
mov
push
dec
subb
xchg
and
scas
movsb
mov
cmpsl
jg
cmc
dec
adc
sbb
movsb
ret
inc
insl
sub
leave
sub
out
test
je
cli
cmp
loopne
loop
mov
cld
pop
outsb
outsl
dec
jecxz
mov
dec
cmp
adc
rclb
scas
fistpll
pop
mov
lcall
arpl
mov
cs
dec
es
xchg
fstpt
popf
movsb
movsl
jle
push
adc
arpl
xor
jecxz
jle
jp
ljmp
jmp
sbb
inc
cmp
xchg
push
leave
xor
xor
xlat
mov
xchg
js
lea
add
outsl
nop
mov
xchg
mov
ljmp
repnz
mov
negb
int
ficoms
mov
shl
push
xchg
xchg
imul
mov
pop
js
adc
or
jb
push
stos
pusha
xor
pop
pop
xchg
mov
adc
push
dec
mov
jbe
and
ljmp
push
fistpll
out
addr16
jmp
add
or
inc
fsubl
imul
mov
adc
sub
adc
aaa
sub
fwait
int
mov
fsubs
cld
leave
fnsave
lea
xchg
cmp
fsubrs
stc
xor
test
call
sbb
in
adc
icebp
jl
sahf
imul
in
outsl
loop
add
mov
sub
sahf
cwtl
fwait
pop
in
aas
inc
xlat
inc
stos
je
cmp
js
xchg
stc
je
dec
dec
addr16
lahf
mov
popa
out
add
push
loopne
mov
scas
xor
lods
leave
insl
inc
fists
lcall
mov
xlat
das
or
dec
lea
lds
adc
jp,pt
das
jb
das
fwait
scas
inc
pop
cld
fsubrs
lock
notl
xor
pop
cld
xor
test
xchg
sub
cmpsl
pop
sub
xlat
add
out
out
clc
jo
jl
ja
aam
add
mov
ja
gs
inc
lds
pop
loop
fidivrs
xchg
push
fwait
iret
or
sub
mov
jg
jl
cmp
or
outsl
xchg
cmp
or
in
insb
nop
leave
xlat
inc
xchg
dec
sub
test
xor
je
adc
outsb
icebp
jecxz
aas
adc
lret
ja
insb
out
adcl
xorl
mov
ja
incb
jle
pushl
divl
push
add
inc
scas
cmpsl
test
add
enter
jmp
mov
sti
ljmp
adc
decb
lds
cmpsb
jl
or
mov
fisubrs
call
xor
psrlq
bound
xchg
mov
ljmp
xchg
sbb
mov
fwait
cmpsl
push
or
mov
aad
mov
lret
dec
adcb
add
mov
fucomp
iret
shrl
and
aam
test
pop
inc
sarl
in
pop
jmp
in
xchg
add
sbb
pop
pop
dec
push
adc
push
cmp
inc
jmp
cli
push
jo
fdivl
dec
cmpsl
enter
dec
mov
movl
loope
jbe
inc
dec
sbbl
lea
push
cmp
movl
push
pop
scas
sti
scas
xlat
loopne
sbb
push
outsl
insl
mov
inc
ds
pop
mov
cmc
jne
pusha
xchg
in
rcl
stos
fmuls
popf
lret
nop
dec
cmp
mov
jmp
aam
cmc
pushf
faddl
jo
out
sbb
inc
es
cmp
push
pop
ljmp
dec
dec
int
mov
xchg
inc
jg
inc
sbb
stos
iret
shlb
add
mov
in
lods
fdivl
repz
xchg
aam
or
sti
cmp
sub
rorl
dec
jecxz
imull
adc
testl
insb
rcrb
or
ds
dec
pop
push
mov
sbb
adc
jle
xchg
adc
popa
pop
mov
loope
add
stos
add
mov
fwait
rorl
inc
dec
cs
stc
decl
jecxz
repnz
cmpsl
xor
in
xchg
pop
in
pop
dec
sbb
cli
gs
ljmp
std
jb
mov
ret
ljmp
arpl
jo
mov
sub
push
xchg
rcll
lcall
adc
neg
std
dec
into
loopne
push
mov
lret
dec
stos
icebp
and
lods
push
insb
inc
xor
in
pusha
jae
dec
and
add
outsb
push
nop
daa
lea
fs
mov
inc
push
mov
lret
sbb
push
and
mov
les
and
test
arpl
jmp
call
mov
lahf
cmp
mov
int
mov
adc
daa
test
cmpb
push
bound
les
dec
ret
inc
xchg
lahf
lock
pop
xchg
cmp
je
mov
xor
in
sub
int
xchg
mov
pop
test
outsb
xor
jno
js
mov
jp
shl
xor
ret
aas
dec
sbb
es
adc
ficompl
addr16
xchg
jo
lahf
out
mov
mov
gs
repnz
mov
nop
dec
repz
cmpsl
or
scas
dec
daa
sub
lcall
inc
jge
xchg
in
data16
or
cmp
mov
dec
stos
filds
sbb
xor
dec
call
mov
repz
cmpsb
cltd
push
push
sahf
mov
add
int
sbb
jo
adc
add
pop
mov
jmp
cmp
scas
pop
iret
roll
mov
in
mov
sub
pop
xchg
mov
hlt
out
mov
add
and
pusha
adcl
or
push
inc
or
mov
pop
xchg
iret
shr
lods
xchg
cld
xor
mov
cmpl
lods
imul
filds
es
mov
cmp
jo
pop
insb
push
lea
mov
repnz
inc
push
fsubrl
or
dec
pushf
add
cwtl
shr
dec
push
subb
pop
call
adc
clc
fwait
jno
shlb
negb
std
dec
sbb
test
mov
daa
push
int3
js
cmp
popfw
jge
xchg
loopne
adc
fidivrl
jb
dec
popa
dec
mov
jge
or
fsub
ss
das
sub
push
dec
push
sbb
lock
sub
adc
mov
iret
inc
pop
cmp
sbb
push
mov
ljmp
jmp
xchg
sbb
ficompl
jle
std
aaa
stc
mov
inc
mov
push
mov
test
jno
loope
testl
push
sub
gs
xabort
andl
xchg
dec
scas
adcb
mov
nop
outsb
ret
push
sarb
scas
scas
in
aas
popf
stc
shrl
scas
and
mov
loopne
sbb
pop
loope
jae
outsb
push
xchg
inc
popf
cmpsl
mov
pop
fwait
jmp
mov
mov
shll
ss
or
shrb
jge
xor
sbb
je
jnp
repnz
shll
xchg
cmpps
sbb
jo
adc
test
adc
dec
int
jb
test
lods
insl
repz
ds
dec
repnz
lcall
fiaddl
mov
mov
insl
rcrb
jb
jecxz
mov
imul
adc
call
test
cmp
pop
sahf
dec
jns
test
rol
mov
adc
nop
add
int
mov
cmp
mov
xchg
pop
addr16
mov
in
cmp
and
cltd
addl
xchg
jl
leave
inc
je
push
and
std
dec
out
xor
sahf
aaa
cmp
hlt
jge
mov
out
movsl
movsl
xor
mov
dec
cmp
aaa
cs
mov
sbb
das
sbb
pop
int
test
int
outsb
jle
xlat
imull
add
std
arpl
mov
and
das
leave
gs
into
rcrb
xchg
scas
call
aam
mov
push
les
roll
nop
jne
gs
or
lcall
sub
sub
ror
and
test
jmp
push
mov
sbb
jl
dec
cmp
adc
test
lret
sub
fs
in
or
insb
cmc
dec
fistpll
adc
fiaddl
jno
test
in
inc
call
shlb
lea
jnp
fs
mov
jp
jge
mov
add
cmp
daa
arpl
test
sub
inc
adc
scas
mov
push
dec
jl
outsl
fs
and
aas
cmp
and
test
cmp
cmp
xor
loop
ljmp
movsb
dec
xchg
push
mov
repnz
inc
xlat
pop
jno
pop
inc
pop
cmp
pop
xor
lea
pushf
mov
sbb
mov
insb
stos
mov
test
idivl
sbb
cmp
fnstenv
into
xor
lock
notrack
mov
movsl
mov
and
mov
dec
ss
or
mov
stc
push
fimull
push
cmpb
cmp
cli
out
cli
dec
push
les
cltd
mov
out
xor
inc
pop
orb
inc
mov
hlt
nop
jecxz
push
repz
mov
decb
imul
pop
popf
xchg
pop
icebp
sahf
mov
push
mov
jae
in
mov
lea
inc
inc
gs
movsl
out
inc
das
je
scas
lahf
cld
jmp
add
and
hlt
cld
adc
les
sub
mov
test
and
into
lahf
add
mov
xlat
test
out
and
pop
stc
mov
push
pop
push
fldcw
cltd
addb
addr16
push
cmp
push
pushf
shlb
jne
sahf
inc
mov
jp
inc
sahf
out
xor
jg
outsb
rcl
bound
mov
leave
imul
es
in
addr16
fstp
add
mov
ja
and
orb
push
daa
div
les
inc
jp
fstpl
sbb
jns
shrb
dec
scas
cmp
mov
ja
dec
dec
pop
je
mov
arpl
loopne
movsl
aam
mov
and
add
push
dec
mov
arpl
repnz
aam
loopne
mov
js
fcomps
stc
dec
xor
ja
icebp
cmp
arpl
jae
test
in
pushf
lar
xchg
xchg
jb
xor
jb
lret
fdivp
and
push
push
test
bound
dec
mov
addb
mov
mov
nop
xchg
cmp
dec
mov
add
aaa
test
fidivrl
inc
mov
cld
mov
push
mov
cwtl
sbb
sbb
jno
sub
fucomp
aam
cmpsl
rcr
sub
repnz
pop
ja
and
mov
les
sbb
sub
notl
cmpsl
addb
dec
repnz
cmp
cwtl
adc
rcll
ljmp
aas
fs
mov
mov
push
stc
pop
aad
out
mov
sub
outsb
fstpl
inc
mov
inc
jb
std
and
rorb
dec
scas
push
aaa
sbb
test
cld
outsb
shrb
jge
arpl
push
mov
ja
inc
mov
push
js
mov
jge
push
pop
mov
xor
jbe
xor
cmp
nop
mov
add
jae
loopne
insb
jg,pt
je
aaa
inc
pop
xor
cvttps2pi
push
mov
test
cwtl
sti
inc
xchg
push
cmovae
lds
add
dec
dec
inc
icebp
lea
jge
dec
push
ret
adc
xchg
mov
js
loopne
sbb
std
ljmp
adc
cli
outsb
clc
xor
push
and
sbb
inc
pusha
outsb
sbb
in
data16
sub
ljmp
int3
ja
daa
cwtl
lock
push
or
mov
adc
add
inc
iret
in
std
mov
xchg
imul
sub
and
xor
sti
mov
adc
dec
sub
imul
inc
sti
fldenv
pop
outsb
mov
pop
jmp
pop
clc
jae
in
mov
int
mov
fisubs
aam
mov
js
push
lds
jae
mov
and
aaa
testl
std
sbb
jge
xlat
mov
aaa
sarb
nop
jns
push
dec
mov
test
pop
or
or
pop
pop
fidivl
xor
ds
xor
mov
dec
jp
or
enter
mov
inc
dec
rorb
sahf
dec
push
pop
repz
adc
fimull
imull
rcrl
out
stos
xchg
outsb
cld
mov
pushf
imul
outsl
mov
xchg
jo
ret
jl
loope
xor
icebp
fmuls
push
pop
sbb
ret
jns
stos
pusha
repnz
ljmp
addr16
scas
mov
mov
aad
adc
push
xchg
add
xor
mov
je
cld
sub
rorb
bound
out
mov
cmp
maskmovq
divl
ss
lea
adc
sub
ret
mov
jnp
fadd
push
push
repz
cmp
movsl
cmp
lds
jge
jo
push
out
loop
cmpsl
std
cli
ja
sbb
jle
mov
or
hlt
adc
repz
jg
dec
daa
pop
lds
pop
jmp
les
xlat
mov
xchg
add
in
lahf
lret
es
xor
lock
fbstp
cs
jmp
pop
mov
jl
lret
push
rcl
rol
test
xchg
xchg
mov
cmp
and
fimuls
outsl
sbb
scas
push
push
or
or
leave
mov
sub
add
mov
sbb
inc
inc
mov
pop
ss
adc
pop
std
sbb
xchg
inc
mov
or
dec
xchg
data16
outsb
inc
xchg
sub
adc
jns
mov
into
pop
out
rorl
addps
sub
add
push
in
xor
ss
jo
add
dec
pop
inc
aas
inc
and
sub
lret
insl
aaa
int3
stos
scas
mov
leave
sbb
push
ja
xchg
dec
lea
sbb
xor
sub
nop
jnp
fsubrp
jb
arpl
pop
mov
scas
mov
adc
adc
xchg
mov
pop
fldt
add
fadds
cmp
xor
test
orl
jg
outsl
leave
or
lret
adc
mov
leave
add
sub
outsl
or
mov
xchg
pusha
cmc
imul
or
mov
push
cmp
cld
dec
sub
outsb
push
notb
push
sub
and
push
add
mov
mov
dec
lock
loop
stos
mov
mov
out
sti
dec
sahf
popl
xchg
clc
push
loop
lret
pop
test
add
adc
into
mov
outsl
int
and
test
imul
pop
rcll
xor
insl
int3
or
ljmp
dec
pop
movsb
mov
pusha
pop
shll
jp
lcall
lcall
and
add
pop
test
inc
dec
test
aam
or
push
sub
roll
jecxz
or
pop
dec
insb
xchg
insb
lock
dec
xlat
mov
lret
out
popa
push
xchg
xchg
jno
cld
stos
cmc
rol
sub
rcrl
push
add
mov
inc
jle
sbb
dec
call
addb
sbbl
and
jle
aas
inc
aas
rorl
push
dec
test
scas
gs
push
dec
or
in
out
mov
inc
xor
fs
cltd
cli
mov
das
imul
jo
fs
lods
push
popf
ja
jl
and
dec
sub
clc
and
shlb
loope
scas
cwtl
cmc
jecxz
adc
popf
push
test
out
pop
sbb
out
adc
xor
mov
leave
push
cmp
mov
lcall
dec
and
inc
mov
ss
std
aam
push
xchg
jne
mov
mov
rol
dec
lret
inc
inc
sbb
sbb
xor
dec
into
je
adc
xor
dec
jmp
iret
dec
pop
lcall
loope
and
leave
xchg
je
ja
jne
stos
push
loop
call
jae
jo
enter
js
stc
jae
stc
rorl
mov
sub
jns
pop
insb
inc
add
mov
sti
inc
fnstsw
call
addr16
imulb
xor
ljmp
bnd
inc
xchg
pop
in
xor
das
popf
arpl
cmc
add
in
inc
outsl
or
dec
cltd
dec
adc
push
popa
push
or
cli
ljmp
stos
xchg
in
das
inc
xchg
dec
and
sbb
xchg
pop
xchg
test
xchg
sar
out
xor
mov
sub
mov
inc
inc
shll
loop
sub
aad
push
cmp
lahf
hlt
mov
cwtl
mov
cmp
outsb
divps
xchg
jae
xor
subl
add
fisubrl
mov
out
cmp
cmp
cs
hlt
lahf
sti
xor
mov
xchg
repz
xchg
test
inc
fsub
inc
mov
push
jnp
or
jmp
jae
mov
push
icebp
inc
or
cmpsl
test
shll
stc
jge
les
rorl
pop
push
inc
cltd
outsl
test
mov
inc
sub
dec
push
data16
xchg
or
ret
test
mov
cmp
xchg
pop
sub
add
into
aas
dec
in
outsl
jns
mov
or
cmp
mov
in
pop
mov
sahf
and
mov
jle
and
das
dec
in
add
dec
push
mov
ja
daa
mull
pop
mov
lods
loope
jg
sub
add
jns
sbb
and
xchg
mov
test
mov
rcll
or
jbe
mov
loop
push
fnsave
xchg
mov
pop
mov
call
popf
jmp
dec
xchg
lcall
loope
fdivs
cmp
mov
xor
cmp
mov
shl
pop
imul
scas
and
sbb
xchg
aas
aad
sub
leave
mov
repz
int
rclb
test
mov
jecxz
int3
jmp
in
push
xchg
adc
xor
sub
aaa
in
jb
jp
xchg
jle
sbb
std
loop
push
mov
test
insl
scas
gs
fbld
cmc
int3
or
ret
pop
cs
gs
lcall
test
sub
rcll
push
fdivs
pop
pop
push
mov
cmpsl
das
lahf
push
pop
cmpsl
mov
inc
out
mov
outsb
add
xlat
inc
adc
ffree
lahf
mov
hlt
cwtl
daa
cmpsb
test
scas
inc
ljmp
or
xchg
enter
mov
in
lock
fldenv
xchg
xchg
pop
adc
mov
or
ja
pop
push
lret
mov
mov
rcrl
or
lret
or
inc
jle
pop
push
push
sub
dec
test
ffreep
repz
rorl
scas
test
mov
add
sahf
mov
jecxz
jb
pop
inc
sbbb
lods
mov
stos
add
pushf
shrl
sub
fdivl
mov
pop
or
bound
pushf
push
inc
test
pop
repz
jb
pop
clc
push
mov
adc
insb
mov
lods
test
jecxz
cmpl
aam
lods
inc
out
mov
ds
loop
xchg
and
lret
push
lds
mov
ja
in
loope
mov
mov
jo
sbb
lahf
stc
stos
push
xchg
call
mov
adc
fwait
pusha
push
pop
insb
pop
nop
aam
aaa
in
lahf
mov
lods
push
push
cmp
pop
out
ret
faddl
mov
cmpsb
lods
dec
xchg
rolb
leave
add
pop
push
pop
fstpt
sbb
pop
add
stos
xor
mov
inc
and
ljmp
sahf
pop
lcall
and
lods
mov
push
jne
cmpsb
aaa
data16
xor
loop
cmp
jecxz
insb
push
jle
xchg
and
incl
cmp
push
cmp
subb
in
pushf
in
es
push
dec
jbe
repz
mov
xor
ret
xor
ret
mull
cs
inc
test
sti
fistps
lods
popa
inc
dec
pop
jno
mov
out
sub
mov
fists
ljmp
ret
mov
sbb
cmp
mov
or
fists
mov
cmp
xchg
or
lea
or
xchg
fistl
arpl
jne
ja
or
mov
std
push
mov
jmp
in
test
into
xor
jne
cmp
jecxz
add
mov
hlt
addb
jno
fst
push
lea
fdivl
or
leave
xchg
inc
lods
inc
ret
sti
out
imul
lds
test
stos
pop
out
hlt
fstpl
scas
pop
xor
cmp
cmpsb
daa
test
hlt
push
push
lea
popa
stos
push
pop
fdivrs
xor
shr
sbb
shrb
mov
xchg
pop
stos
pop
mov
inc
in
jecxz
dec
je
pop
cmovb
and
data16
cld
xor
or
jl
call
xchg
daa
sbb
lahf
dec
rcll
and
movsl
inc
mov
mov
icebp
add
xor
fidivs
test
repnz
cltd
scas
test
mov
push
fwait
mov
in
ja
jo
sub
cmpsl
repz
mov
sahf
lahf
outsb
ret
push
sbb
psllw
mov
popa
jl
aaa
popa
fidivrl
sub
sub
imul
add
ds
rcrl
pmaddwd
push
fildl
aaa
mov
dec
mov
xlat
int3
repnz
scas
mov
loope
pop
lods
pop
enter
push
and
imul
js
call
add
cmp
and
adcl
jne
cmpl
inc
push
or
add
jp
jns
test
pushf
je
xor
scas
das
ljmp
mov
hlt
or
fisubrl
popa
aaa
or
nop
add
imul
je
dec
inc
shlb
popf
loope
and
push
add
pop
mov
mov
addr16
mov
out
sbb
dec
fldenv
icebp
shl
push
test
add
add
inc
fcmovnu
inc
and
lods
jo
pop
in
mov
jmp
dec
pop
pop
mov
rorb
xchg
fmuls
jg
aaa
dec
call
mov
loop
cmp
inc
sar
sub
push
and
stos
lds
mov
xchg
scas
cltd
cmc
aam
pop
mov
in
mov
dec
xchg
int
and
or
lahf
adc
lret
psubd
ss
dec
jmp
mov
push
imul
call
test
sbb
pop
enter
pushf
jl
in
push
aad
or
xchg
cmc
inc
out
inc
mov
fsub
enter
pop
cmp
xchg
push
mov
inc
aam
lea
out
xlat
jmp
mov
loopne
repz
xchg
stos
loop
adc
fucomp
lds
sarl
xchg
repnz
jmp
arpl
jne
dec
pop
mov
push
sub
aam
xchg
fdivl
outsl
pop
push
inc
ds
call
jp
mov
loopne
outsl
add
xor
mov
add
jne
sub
ret
lcall
dec
xor
cltd
mov
adc
fldt
xchg
movl
addb
push
jae
add
xchg
icebp
jg
add
pop
ret
xchg
mov
cltd
outsl
mov
pusha
ret
mov
xor
jmp
es
aaa
pop
mov
pop
stos
jle
adc
pop
insl
std
movsb
push
push
pop
cwtl
imul
ss
xor
cmp
movsl
test
cmp
sbb
or
test
adc
test
sub
xor
insl
xor
call
fsubrl
fists
pop
jmp
data16
sub
arpl
pop
sub
xchg
subb
dec
mov
ds
out
cmp
stos
jno
fs
push
imul
loopne
or
mov
js
bound
call
xchg
daa
pop
jmp
push
fcomps
mov
xchg
and
ljmp
out
inc
push
inc
mov
shrl
push
and
dec
lahf
and
jmp
aas
mov
pushf
gs
push
lahf
popa
sbbb
adc
cmpl
inc
in
rclb
cmp
addr16
popf
lds
sub
adc
inc
pop
cmp
popa
mov
cmp
cmp
fstl
int3
sbb
cmp
pop
mov
shr
push
movl
aas
rclb
jg
outsl
test
mov
lea
leave
shl
push
mov
and
pusha
jge
fst
or
jp
adcb
test
imul
aam
fistps
rcll
sub
in
or
rolb
xlat
jle
xchg
jle
movsb
push
nop
shrb
pop
sbb
jb
out
and
imul
mov
outsb
sub
mov
pop
jbe
pop
jbe
pop
ljmp
push
dec
ret
add
inc
lahf
movsb
dec
sbb
xor
shl
rclb
daa
adc
jl
ret
sbb
orb
jnp
pop
data16
adc
ljmp
arpl
rolb
out
mov
call
sub
clc
inc
sbb
push
ret
push
cmpsl
pop
fdivl
jb
lds
jo
lret
sbbb
fdivl
or
aad
sub
icebp
icebp
inc
pop
lds
mov
mov
scas
mov
lret
lods
dec
add
popf
jge
and
loop
push
xor
xor
addr16
jmp
insb
add
aam
lahf
nop
cmp
mov
ret
out
adc
push
dec
dec
adc
mov
outsl
mov
ljmp
clc
pop
jbe
mov
mov
jg
push
xchg
int
pusha
cmp
aaa
fcomp
mov
sbb
shlb
pop
stos
cli
test
sbb
sarl
mov
jge
aad
cs
aaa
data16
mov
cmp
adc
pop
test
lds
icebp
aaa
inc
cwtl
sbb
xchg
jae
test
push
push
call
xor
leave
lock
or
xor
inc
outsl
ljmp
add
cmpsl
out
out
in
sub
loop
sub
fldln2
les
xchg
int
lahf
sub
mov
dec
inc
shlb
cltd
push
jg
or
sub
js
adc
pop
icebp
pop
xchg
out
loopne
iret
mov
in
lret
shll
and
pop
jb
sbbb
mov
xchg
sbb
lcall
adcb
ret
adc
push
xor
mov
jae
shlb
mov
push
int
pop
loopne
sahf
jae
sub
push
sahf
iret
pop
push
pop
sbb
add
and
push
xor
fisttps
cs
pop
in
int
mov
shll
mov
cli
stos
imul
ret
or
dec
pop
aaa
test
adc
add
xchg
sbb
jp
sti
or
je
dec
rorl
mov
pop
pop
stos
ljmp
push
xor
jl
lds
xchg
dec
dec
rolb
rcrl
ret
mov
dec
sub
sbb
sub
adc
dec
mov
in
adc
cmpsl
sbbb
and
mov
pop
fimull
pop
jp
adc
or
pusha
mov
dec
xor
push
je
ljmp
or
cmp
sub
xor
sub
ret
adc
push
fcoml
std
or
arpl
or
das
pop
fwait
inc
push
sbb
pop
push
adc
stos
mov
loop
xchg
pop
cs
and
mov
mov
pusha
repnz
incb
ds
clc
outsb
std
mov
cmp
imul
mov
stos
cmp
pop
lods
sarl
xchg
stos
clc
loopne
push
loope
in
xor
dec
inc
stc
test
pop
aam
mov
or
cmp
das
mov
into
and
or
out
stc
negl
lcall
mov
pop
sub
cli
lahf
imul
adc
daa
pop
jge
rcrb
and
lret
add
push
push
mov
lahf
inc
out
lods
or
inc
out
popa
lds
pushf
push
inc
ret
cmp
imul
lahf
jno
pushf
dec
mov
movsb
test
pop
xor
xchg
add
cmc
cld
inc
in
xchg
cmp
adc
mov
pop
xchg
int3
mov
or
aam
repnz
sbb
and
inc
fwait
xchg
push
dec
sbb
sbb
lret
sub
in
cmp
addr16
mov
popf
sbb
dec
test
jns
mov
push
js
ljmp
add
lock
sahf
push
iret
xlat
mov
in
adc
imul
jecxz
cli
jg
cmpsb
repnz
xchg
or
repnz
ret
xchg
fistpll
mov
inc
aaa
mov
mov
fsubs
push
sbbl
shr
mov
jecxz
in
sub
cmp
stc
cmp
adc
in
jo
in
rcll
xchg
sub
pop
jo
jp
jg
and
mov
adc
xchg
push
xchg
lods
xlat
ret
pusha
mov
mov
aaa
cmp
xor
lret
cmpb
inc
sbb
not
lods
pusha
emms
mov
push
lcall
pop
in
jge
jmp
add
or
loop
pcmpgtd
lods
xchg
imul
popa
test
xor
and
or
jmp
lods
cli
adc
push
dec
cmp
jne
fisttpll
sbb
adc
fneni(8087
rorl
mov
nop
or
lret
popa
shlb
jno
sub
sbb
cli
push
adcb
jp
pop
jb
cmp
jp
cli
add
and
or
fstl
bound
mov
ja
mov
or
or
adc
daa
pushl
mov
xchg
loop
movsb
imulb
jbe
out
cmp
stos
jl
mov
push
lret
xchg
xchg
ret
call
jge
cld
inc
add
lahf
sub
lods
cltd
ret
lahf
pop
bound
clc
repnz
pop
jno
jl
mov
push
arpl
pop
xchg
andl
enter
and
pushf
out
or
ret
inc
mov
stc
pop
js
lahf
aad
cwtl
jp
loope
popf
mov
lcall
mov
outsb
ds
pop
ret
loope
mov
mov
pop
lds
mov
repz
xorb
jae
int3
ljmp
or
jl
pop
add
inc
std
jae
dec
out
push
jno
sbb
icebp
and
sahf
pop
int3
jb
pop
adc
outsl
orb
jecxz
inc
adcl
testl
insb
rcrl
inc
test
cmp
adc
popa
mov
lock
mov
xchg
testl
mov
mov
adc
adc
pop
dec
ret
daa
movsb
pop
imul
mov
imul
sbb
sub
sub
pop
rcll
aas
je
bound
fisubrs
mov
ret
inc
jbe
sub
push
and
mov
inc
hlt
mov
or
push
iret
add
sub
test
cmpsb
sti
pop
mov
mov
mov
ret
adc
xchg
dec
ret
xchg
ret
jae
push
push
mulb
pop
pop
shrb
js
fstp
add
push
sarb
ja
sub
mov
fistpl
push
sbbb
sbb
bound
add
pushl
adc
pop
ret
add
stos
dec
ds
icebp
mov
je
mov
xchg
jmp
push
mov
shlb
int
pop
jnp
push
xor
push
push
mov
pop
xlat
sbb
dec
cmpsl
sub
scas
into
clc
push
inc
fdivrl
lcall
dec
fcoms
sarb
pushf
xchg
fstl
into
jecxz
mov
pop
fisttpll
mov
movsb
scas
lea
inc
push
and
sti
inc
pop
negb
sarb
push
pop
xor
lret
push
stos
lods
or
pop
sbb
inc
dec
sbb
sahf
cmp
jg
ficompl
pop
mov
inc
dec
jne
xor
mov
xchg
cmp
popf
push
dec
push
inc
lret
push
add
fidivl
add
or
call
into
jmp
lock
mov
movl
fsubs
push
imul
insb
aaa
mov
or
mov
push
out
sti
pop
into
pop
loopne
ficoml
imul
arpl
aad
dec
cmpsl
in
out
in
xadd
mov
ret
and
sub
cmpsb
jmp
sbb
dec
mov
loopne
mov
into
data16
sahf
or
push
xchg
shlb
inc
sub
inc
xor
xor
or
mov
inc
insb
cltd
adc
pop
popa
cwtl
outsl
jecxz
mov
js
enter
jbe
out
sub
adcb
or
xchg
mov
adc
xor
sbb
icebp
icebp
push
lock
call
arpl
loopne
clc
jnp
mov
pop
das
repz
push
cmp
dec
mov
xor
jg
dec
in
cmpsl
mov
dec
imul
jle
jb
mov
xchg
xor
pop
stc
cmp
add
mov
cmpsl
aaa
lret
cli
or
add
or
and
mov
ja
repz
jecxz
adc
loop
ror
bound
sbb
les
pop
ficomps
int
fwait
in
xor
loopne
stos
cld
mov
and
int3
fisttpl
addb
inc
mov
sbb
jae
fincstp
repz
add
mov
out
mov
imul
mov
movsb
sbb
out
imul
nop
mov
inc
sub
dec
sub
out
push
mov
inc
cmp
loop
xor
push
sub
movsb
xchg
push
sahf
xchg
scas
inc
icebp
out
mov
dec
adc
stos
fildll
jge
jb
fs
sub
popf
mov
push
js
or
stos
dec
iret
icebp
adc
lds
pushf
movsl
daa
adc
cmpsl
sbb
dec
or
xor
adc
xchg
in
cmp
aad
dec
add
lret
mov
subb
movl
ss
adc
lds
push
mov
stos
fcoms
aas
arpl
inc
and
cmp
add
xchg
jne
out
test
jg
fxch
out
dec
sbb
popf
test
ds
aad
lahf
in
pop
sbb
mov
ja
test
mov
in
sti
xchg
loopew
aas
xor
dec
or
lods
sbb
seto
das
inc
xchg
sbb
pop
cld
inc
es
lock
pop
test
dec
lea
push
mull
mov
push
jae
insl
pop
int
rorb
xor
fldenv
mov
sbb
mov
sti
shll
subl
and
popa
and
cmp
mov
mov
sbb
lcall
test
cmp
xchg
fwait
enter
sarl
push
loop
pop
movsb
lock
data16
inc
out
mov
divl
sbb
ljmp
lret
lcall
sbb
dec
gs
jle
add
lahf
mov
mov
mov
out
lods
lcall
outsb
add
or
and
mov
mov
cmp
lods
sti
jae
int
lret
mov
js
sbb
es
xchg
or
dec
aas
cmpl
jp
cwtl
dec
mov
pop
xor
jecxz
dec
xchg
repnz
pop
into
or
shll
xor
sub
sub
and
dec
pop
repz
pop
inc
test
xchg
mov
or
inc
push
jle
push
pushf
mov
fiadds
xchg
push
smsw
fs
les
or
xor
orl
or
xlat
xchg
rcr
xor
es
iret
sub
cmpl
dec
pushf
dec
xchg
mov
jp
jns
jg
daa
push
jmp
je
mov
xchg
mov
testb
je
loop
pop
call
lret
int
and
xchg
iret
cltd
jae
pop
mov
xorb
scas
mov
les
bnd
into
leave
movsl
movsb
dec
in
or
push
es
fbld
fldenv
and
sub
sbb
stos
adc
arpl
adc
in
mov
mov
xchg
cmpsb
fcompl
push
lods
adc
mov
xor
cmp
dec
or
mov
pop
jmp
fisubs
pop
add
ljmp
push
sub
loop
jne
mov
sub
loopne
xchg
roll
pop
add
arpl
cmc
dec
hlt
fstl
test
sbb
loop
dec
sbb
xchg
jge
dec
fnstsw
test
imul
xchg
dec
addl
xor
aam
mov
imul
scas
lret
andb
lret
cwtl
add
xor
addr16
push
ljmp
pop
sarb
hlt
addb
xchg
inc
mov
cmp
arpl
scas
push
clc
ja
cmpsl
in
movb
roll
push
inc
sub
ja
loope
jnp
cmpb
mov
cmpsb
in
movsl
mov
outsb
mov
fmul
mov
sbb
push
pusha
jne
aam
dec
test
call
hlt
and
mov
loope
fistpll
push
js
stc
ja
pop
mov
xor
aaa
cli
fsubs
sahf
mov
aaa
xor
fdivrp
xor
mov
xor
xor
fsubl
loop
jno
clc
pop
dec
dec
div
loopne
xchg
add
shl
aaa
cmp
cmp
cmp
test
mov
xor
jbe
sarl
adcl
push
mov
pop
cmp
fcoms
add
inc
int
insb
add
sbb
scas
mov
push
loop
ja
mov
ljmp
movsl
test
mov
call
out
std
gs
mov
orb
leave
dec
mov
lahf
loope
cmpsb
test
call
xor
sbbl
xlat
jae
xchg
sub
fldenv
fmull
mov
aas
addl
push
push
movsb
fucomi
jmp
popf
sbb
stos
lea
fisttpll
pusha
or
xor
mov
cmpsl
neg
lcall
inc
push
mov
rorb
lods
cmp
mov
rep
dec
sti
fistl
fnstsw
fs
jbe
adc
rcrb
push
inc
sub
pop
sbb
sysexit
cmp
arpl
ss
lds
push
adc
mov
addb
pop
imul
cmpb
int3
mov
int3
or
pop
fildl
pop
test
or
leave
sti
lret
or
mov
stos
mov
adcl
lret
push
mov
mov
das
lcall
aam
ret
imul
xor
push
pop
lret
bound
pop
mov
int3
sub
adc
xor
xchg
dec
out
and
arpl
pop
cmp
sbb
loopne
adcl
cli
push
fcmovnu
sub
icebp
mov
adc
jnp
inc
gs
lods
gs
fistl
xchg
and
imul
xlat
push
jae
pushf
cwtl
gs
pop
xor
imul
sbb
add
jns
sbb
sub
sub
cltd
sbb
mov
aas
mov
sub
dec
xchg
adc
cli
mov
out
fisubrl
sub
xor
xchg
xor
mov
cmpsl
insl
andb
lret
dec
mov
inc
jns
mov
push
out
jmp
push
xchg
clc
xchg
xchg
inc
shrl
iret
mov
mov
fcmovbe
inc
push
push
push
hlt
add
mov
lahf
mov
push
loop
popa
push
notb
sti
iret
pop
xchg
mov
xlat
mov
push
imul
pop
pop
icebp
sub
and
dec
insb
outsb
xchg
mov
roll
or
add
es
sub
jne
inc
lea
pop
push
rclb
orb
jmp
lods
and
dec
stos
loope
sbb
popf
outsl
pop
addr16
and
and
lahf
add
cmp
lods
inc
inc
push
adc
ljmp
mov
xchg
iret
sub
mov
mov
sbb
adcb
repnz
mov
out
roll
repnz
test
repz
lock
add
repnz
mov
enter
push
dec
fadd
adc
in
sbb
lods
mov
xchg
addr16
sbb
fwait
iret
rcr
rcrb
shlb
pop
mov
push
cmp
mov
ret
int3
aad
rcrb
clc
addr16
mov
push
repnz
int3
aad
xchg
sbb
and
enter
add
clc
clc
pop
insl
pop
inc
dec
sbb
bound
mov
fwait
lods
push
ret
cmp
call
fucomp
ss
and
or
cmp
cmp
clc
stos
sti
fistpll
iret
cmp
jne
imul
stc
cmpsl
xor
xchg
loopne
inc
ret
mov
adc
outsb
cmp
sub
ss
outsb
je
mov
dec
aam
jl
test
inc
fisubrl
add
cmp
test
lock
sub
cmp
out
pop
pop
dec
lret
ss
mov
iret
rcll
mov
loopne
fisubrl
cs
fisttpl
cli
xlat
jns
jle
jo
out
pop
jae
movsl
push
cwtl
scas
pusha
fists
xor
decl
xchg
enter
mov
ret
or
xchg
cmc
cld
loopne
cmp
shll
mov
ja
and
lods
lods
mov
push
sub
mov
mov
push
ret
sbb
jle
xchg
cmp
jb
pusha
insb
pushl
fsubr
pop
xor
push
out
cmp
and
xchg
data16
and
or
call
sbb
push
mov
push
int3
cmp
or
mov
fdivrs
and
inc
aaa
inc
pop
test
dec
cltd
adc
and
add
jno
rcrb
jo
pop
je
mov
scas
jbe
sbb
movl
idiv
lods
jmp
test
cmpsl
aam
or
int
add
std
test
pushf
aaa
lds
adcl
std
mov
mov
jmp
insl
cmpsb
jne
aaa
data16
sub
push
fcmovnb
xchg
negl
sub
cmp
lods
movsl
xchg
fdivl
cmpl
pop
lods
mov
shll
xchg
sti
cmp
rcll
and
xchg
cmpsb
and
loop
int
lock
jb
inc
cmp
out
mov
clc
mov
or
cmp
push
dec
mov
and
les
lret
mov
xor
dec
fildl
pop
loop
sub
sub
sbb
xchg
clc
fadds
cmp
dec
lock
nop
cmp
inc
and
test
push
cltd
dec
pusha
inc
imull
shr
int3
dec
push
lds
test
sti
mov
lods
pop
aaa
sbb
das
push
popf
pusha
movsb
dec
mov
insb
jecxz
pop
pushf
mov
push
push
mov
nop
and
xor
outsb
loop
or
sbb
in
out
outsl
mov
lea
push
inc
push
scas
inc
int
call
push
push
insl
and
pop
pop
push
pop
cmpsl
cmc
cmp
insb
or
call
imul
cltd
adc
ss
outsb
outsb
mov
insl
out
sbb
ret
xor
fwait
mov
mov
enter
cmpb
mov
add
cld
sub
sbb
clc
or
sbb
xchg
push
aaa
lretw
ja
push
adc
loop
rorl
push
shl
mov
imul
xor
aad
stc
loope
cld
es
addb
pushl
cmpsl
inc
sbb
jnp
adc
push
icebp
rorb
cmp
mov
jnp
jb
pop
stos
rclb
push
imul
aas
jb
lods
jp
pop
adc
aad
test
out
jg
mov
add
push
mov
outsb
movsb
xchg
and
je
dec
loopne,pn
inc
loop
or
cmp
test
sub
jae
or
cmp
inc
and
fstps
add
inc
sub
add
cmc
rcr
pop
repz
fidivs
aad
xchg
mov
mov
push
aad
and
in
sub
hlt
test
mov
sbb
cltd
out
xchg
mov
xchg
mov
int3
lds
popf
cs
arpl
add
test
and
xchg
les
ljmp
rcll
int3
mov
lea
loopne
repnz
addr16
ficompl
ljmp
loope
lret
lods
out
test
fs
dec
xchg
sti
pop
mov
fisttps
cmp
mov
mov
fwait
sbb
inc
add
cmp
movb
mov
jne
cmp
ja
enter
jne
jg
leave
je
xchg
ret
sub
rcrl
insl
mov
xchg
xor
loopne
sbbb
loop
jle
mov
sub
and
xchg
sbb
mov
loopne
int
jbe
out
mov
jae
std
inc
aas
fs
shrl
mov
stc
stos
in
xchg
and
pop
or
loopne
lret
xor
cmc
rep
ret
test
cmc
adc
or
jl
mov
fildll
mov
cmpsl
jno
in
stos
fsubrl
sbb
adc
dec
dec
hlt
in
mov
sbbb
xor
jmp
mov
aam
adc
mov
mov
in
jne
push
ret
jmp
sti
pushf
fcomi
stos
sbb
cmp
lahf
arpl
xchg
in
push
or
or
push
add
sbb
mov
xchg
xchg
iret
xor
cld
decl
xor
push
into
scas
pushaw
push
adc
out
mov
push
movsb
dec
gs
adc
orl
daa
push
out
xchg
in
push
shl
fstps
icebp
or
sidtl
add
imul
popa
stc
leave
lds
mov
push
out
into
outsl
bnd
dec
in
and
mov
xchg
jno
pop
arpl
stos
xchg
mov
mov
cli
mov
jp
cmp
data16
loop
xor
dec
mov
clc
cltd
pop
cwtl
nop
push
loopne
and
or
or
mov
mov
push
or
fisttpll
bound
shlb
mov
xor
or
movsb
sbb
jb
cmp
gs
jg
dec
push
sti
jo
mov
mov
lcall
xchg
gs
adc
gs
movsb
push
clc
imul
xchg
jg
add
pop
callw
push
xorb
mov
xchg
lret
jg
sub
xchg
mov
xor
jmp
fnstsw
lods
pop
out
lret
xchg
imul
sub
test
insb
mov
js
jae
mov
insl
lret
jg
dec
mov
inc
and
ds
mov
dec
or
fimuls
sbb
mov
jge
push
rcll
jno
or
pop
call
and
dec
xor
pop
mov
cmc
imul
lahf
mov
aas
in
sub
cld
lds
sub
mov
jno
mov
or
shrb
dec
or
mov
es
call
lods
mov
jns
shrb
fmull
fsubrl
mov
lahf
in
lods
push
pop
nop
shrl
in
movsb
fldenv
sahf
xchg
mov
ret
fdiv
push
cmc
enter
push
mov
mov
fstps
lret
mov
sub
jbe
xchg
fsubp
cld
jnp
dec
fsubrp
fsubl
dec
cltd
push
fidivs
sahf
dec
fwait
cs
push
inc
fs
xor
lock
ffree
adc
lahf
std
xor
xchg
inc
or
adcl
dec
mov
jmp
fsubrs
sub
cmpsb
fstl
mov
fists
add
fcoms
xor
rcrl
inc
pushf
jns
sbb
and
add
dec
cmp
into
jmp
pop
dec
cmp
sub
xor
sub
into
lret
sbb
lock
loop
add
cwtl
test
insb
cmp
add
xchg
cmp
cmp
and
cmc
pushf
add
pop
adc
ds
aam
test
adc
pop
adc
pop
jb
mov
mov
dec
test
mov
dec
sub
sub
jge
mov
lods
aad
lea
sub
and
sbb
test
xchg
fdivrl
rcll
cltd
dec
add
out
fimull
jno
and
out
bound
mov
jmp
add
adc
clc
ficompl
movsl
loop
add
movsl
shlb
das
mov
push
rcll
sbb
mov
ja
jle
cmp
sbb
lea
mov
adc
scas
sti
mov
ss
popf
roll
les
pop
rorb
dec
add
mov
sbb
repnz
mov
daa
in
je
in
or
pop
sets
xchg
ja
mov
stos
clc
mov
adc
mov
cmpsb
adc
cmpsb
pop
or
cmp
or
mov
sbb
dec
int3
fs
mov
mov
or
aaa
pop
or
sub
mov
daa
xchg
mov
jecxz
fmull
mov
jle
scas
imul
mov
cmp
mov
test
add
inc
scas
xchg
movsb
lods
hlt
or
sub
push
mov
mov
xchg
negl
inc
out
shrl
jnp
push
adc
or
push
jbe
xchg
adc
iret
cmp
outsl
test
pop
sbb
mov
add
push
cmp
or
inc
pop
sub
mov
iret
cltd
insb
andl
jmp
xchg
ljmp
iret
adc
flds
sti
mov
sbb
decl
test
push
loopne
mov
test
cltd
jns
in
sbb
mov
add
mov
test
jge
sub
adc
cmp
dec
push
sbb
fwait
pop
mul
ja
jbe
aad
scas
mov
aam
inc
rclb
scas
popf
add
cld
clc
clc
popa
adc
leave
faddp
lret
cli
out
call
sbb
loop
jb
or
mov
sub
adc
cmpsl
popf
cld
adc
je
jp
rcrl
aaa
push
push
add
out
stos
lock
das
in
inc
pop
scas
or
rorb
jl
mov
fadds
mov
cmp
pop
lcall
decb
iret
cmp
call
jne
and
fildl
aam
xor
outsb
mov
xchg
ja
jg
nop
mov
cwtl
sub
pop
je
andl
jmp
jge
cmpsb
pop
repnz
cmpsl
xchg
adc
cs
mov
jns
adc
mov
lds
mov
fstpt
inc
push
das
stos
jmp
jmp
jge
xchg
and
cltd
or
xorl
popa
into
test
add
loop
jae
jl
stos
insb
repz
inc
pop
sub
scas
ret
mov
in
cmp
pop
lds
mov
cmp
cmp
or
cwtl
dec
or
mov
aas
mov
mov
push
mov
jne
loop
push
bound
xor
int
cmp
aad
mov
sub
dec
std
jns
rcll
imul
mov
mov
stos
add
cltd
cmp
test
and
sti
sbb
sahf
inc
pop
sub
stos
adc
jbe
or
mov
negb
dec
loop
mov
mov
xor
adc
sbb
leave
mov
cmp
outsb
mov
cmpsb
in
insl
int
inc
out
insb
push
sub
sbb
add
lds
push
xchg
or
mov
loopne
xchg
repnz
push
shl
in
cs
notb
jo
or
or
xor
repz
cmp
ja
into
das
test
in
aaa
jl
fistps
lock
mull
xor
sbbb
in
mov
lea
stc
repnz
adc
fisubrl
pop
stc
mov
int3
iret
inc
loope
mov
xor
adc
andb
mov
lds
xor
xchg
arpl
and
mov
pop
xchg
rcl
mov
mov
push
stc
mov
sbb
inc
incb
out
adc
fs
xor
and
xor
pop
push
addr16
scas
das
or
jl
sub
add
dec
lcall
sub
lcall
imul
mov
xor
add
adc
dec
repz
in
pop
jbe
insb
int
mov
loop
and
or
outsl
adc
mov
js
mov
add
fidivl
mov
notb
pop
inc
xor
rolb
xchg
rcll
in
xorb
and
add
jl
icebp
jns
push
jns
call
mov
dec
cld
sar
insl
movsl
inc
mov
or
jns
enter
sub
pop
xor
mov
daa
xchg
es
add
mov
loop
mov
popa
fidivrl
sbb
jge
addr16
adcb
adc
lret
mov
pop
mov
jo
fistpl
push
into
cmp
sub
in
adc
cmp
sbb
repz
lahf
fstpt
mov
roll
xor
and
mov
xchg
dec
jne
pop
mov
int
fwait
stos
push
movsl
out
and
das
int3
mov
sbb
adc
xchg
out
lcall
lcall
aas
dec
pop
out
data16
cli
fwait
pop
int3
sahf
pushf
pop
divl
sub
sbb
mov
aaa
inc
add
stos
pop
inc
js
stc
nop
sbb
movsl
or
cld
aam
mov
dec
push
orl
pop
sub
das
adc
sub
lret
or
cwtl
push
xchg
jge
push
cmp
arpl
ffree
sub
stc
inc
sub
mov
mov
push
jo
jle
xchg
out
fiadds
sub
test
loopne
jecxz
mov
scas
add
icebp
ds
jge
add
adc
jp
es
mov
xor
pusha
test
lods
cmp
jle
je
fdivs
daa
push
addb
inc
inc
and
decl
dec
push
push
and
mov
aaa
xor
pop
push
out
jge
jns
adc
mov
fsubrp
repz
jno
imul
bound
sbb
lcall
dec
test
pop
shrl
mov
add
popf
xchg
mov
push
push
pusha
arpl
aam
out
nop
pop
pop
sbb
xchg
aas
dec
je
out
sbb
pop
adc
bound
mov
ret
sub
mov
push
mov
insb
scas
jo
sbb
push
jg
clc
fidivs
pop
loop
or
push
movl
mov
test
dec
hlt
lds
mov
movsb
lock
out
hlt
or
inc
jbe
sub
or
enter
push
fcmove
sbb
cmp
pop
aas
rcrb
jg
scas
push
xchg
and
add
add
xor
jb
or
inc
stc
rorl
sub
fucomi
test
xchg
mov
out
js
push
cmp
stc
adc
dec
bound
mov
sarl
rorb
inc
sub
lret
imul
lahf
negb
or
sbb
outsb
lret
sub
dec
into
stos
push
cmc
fwait
cwtl
push
jmp
ret
lea
es
fs
idivb
mov
inc
ret
lret
push
pop
cld
iret
or
lahf
cmpsb
jae
repz
fistps
push
pop
subl
enter
xchg
les
arpl
loop
xchg
cmp
sub
adcb
mov
add
mov
push
lret
or
and
dec
mov
pop
not
push
rolb
xchg
jmp
adcl
addps
push
ljmp
adc
xor
cmc
dec
adc
ret
dec
mov
test
mov
cwtl
dec
inc
push
inc
dec
mov
dec
jns
rcll
mov
cs
add
outsl
push
dec
dec
push
add
push
sahf
push
cld
push
add
popa
inc
repnz
outsl
sub
gs
iret
mov
xor
mov
popf
or
push
fadd
pop
outsl
imul
rcrb
mov
fnsave
sahf
data16
fbstp
add
cmp
xor
pop
pop
call
mov
std
or
sahf
mov
int3
out
stos
adc
test
scas
shr
imul
das
xor
movsb
into
ja
cmp
push
sbb
incb
adc
fisttpll
ljmp
sti
dec
sub
cmpl
repz
jb
cli
cmpsl
pop
mov
inc
push
inc
loop
sub
scas
enter
xchg
pop
das
pop
xlat
mov
jge
aam
bnd
jb
jb
push
xor
pop
dec
cmp
adc
fs
adc
clc
xor
sub
pop
jge
ds
arpl
arpl
sbb
pop
dec
mov
mov
xchg
push
in
clc
adc
pop
iret
mov
fstpl
addl
adc
mov
jne
xchg
add
sub
or
jne
out
jnp
dec
adc
cmc
outsb
test
cmp
jne
jp
mov
inc
add
cs
push
faddl
insl
cmpsb
cmpl
xchg
subl
mov
mov
and
ret
cmp
sbb
xor
subl
and
and
and
xor
femms
xor
dec
int
xchg
imul
and
inc
aaa
mov
cmp
xchg
push
cmp
je
rcll
bound
sbb
and
arpl
testb
test
sbb
outsb
shrl
fildll
jle
std
push
scas
stos
fwait
mov
pop
iret
ret
xchg
pop
fucomi
sahf
test
pop
jle
jle
dec
test
mov
imul
mul
sbb
add
adc
fs
xor
in
and
sub
fnstenv
dec
out
loopne
mov
insb
cmp
lea
ds
push
cwtl
dec
sub
iret
out
jne
mov
ret
popf
lock
mov
imul
xchg
fsubp
pusha
outsl
mov
nop
adc
xlat
je
sti
test
jbe
in
mov
mov
xor
movb
jp
les
xchg
push
pop
jle
xor
pop
ss
add
pop
sti
pop
xlat
jge
repz
jecxz
orl
aam
test
pop
je
lea
imul
ja
add
sbb
insl
add
cmp
sbb
push
mov
push
test
cmpsb
mov
cwtl
sub
subl
pop
adc
fmuls
dec
mov
xchg
pop
fcomp
daa
stos
testl
enter
cmp
xorb
push
inc
mov
mov
jmp
in
rol
and
lret
sub
test
push
jmp
jb
lock
jb
incl
pop
or
jb
push
dec
leave
pop
xchg
mul
int3
mov
mov
ret
add
or
cmp
pop
pop
mov
mov
sbb
adc
mov
das
push
mov
imul
cmp
jge
jecxz
xchg
mov
or
sahf
xchg
xor
jmp
pop
xchg
mov
sarb
aam
mov
xlat
or
xchg
sbb
scas
dec
push
and
pusha
popa
mov
sbb
sub
mov
std
xor
stc
mov
mov
mov
inc
cmp
add
lret
cmc
cli
shl
cmp
rcrb
jns
stos
inc
leave
push
jne
or
dec
aaa
jo
inc
xchg
sub
sbb
insb
inc
sub
lea
bswap
push
scas
pop
cmpsb
cmp
popa
imul
pop
cmpsb
jle
or
mov
lret
in
clc
les
fisttps
nop
push
mov
aaa
ja,pn
jno
mov
int
pop
mov
push
inc
adc
lcall
or
push
or
and
sbb
adc
les
pop
lret
or
or
and
sbb
sub
sbb
push
adc
pushf
js
dec
xlat
push
mov
jnp
sub
rol
mov
outsb
sbb
add
imul
dec
and
leave
je
push
into
lock
xchg
pusha
loopne
add
imul
sub
int
dec
mov
add
and
sub
popa
pop
stos
pop
or
mov
out
mov
mov
jno
mov
adc
mov
add
out
and
jmp
inc
and
daa
push
cmp
xchg
rcrl
pop
mov
jmp
cmpsl
lods
add
add
xchg
sub
dec
mov
sub
pusha
adc
dec
insl
lahf
jns
neg
lret
xchg
insb
fs
fisubs
and
xchg
sbb
jl
les
loop
inc
mov
aam
cmc
xchg
xchg
push
cmp
push
jge
cwtl
pop
xor
sub
sbb
mov
fucomp
mov
aas
push
xchg
outsb
pushf
dec
add
test
test
jle
fcoms
lea
adc
jl
das
or
aas
lret
in
int3
popf
pop
outsb
inc
loopne
xor
xor
xchg
andl
cmc
push
js
push
ret
push
mov
aam
lret
cltd
xor
jg
arpl
sarb
pop
in
icebp
lret
fwait
dec
jg
sbb
fistl
sbb
stos
stos
test
enter
push
nop
mov
in
mov
mov
xlat
push
sub
cld
mov
loopne
and
mov
stos
ss
xlat
jns
leave
cld
or
cmp
nop
lret
pop
adcb
dec
lds
adc
lods
rol
mov
mov
testb
xor
notb
sub
pop
adc
adc
cmc
cmp
gs
les
add
push
sub
std
mov
lcall
jnp
sub
pop
sbb
mov
pop
mov
insb
movsl
stos
lods
add
mov
daa
mov
dec
aad
lret
test
xor
pop
mov
sub
out
addr16
dec
out
fistpl
inc
aas
xor
adc
jl
fnstsw
cwtl
jmp
sub
mov
xor
sti
cmpsl
sub
pop
test
pop
pop
push
mov
jp
sti
mov
inc
setnp
fadds
int
pop
pop
jnp
out
pusha
clc
les
in
adc
pop
out
mov
out
push
mov
fwait
pop
cld
mov
add
outsl
mov
sarl
cmp
test
mov
xchg
and
mov
push
leave
pop
lret
stos
idivl
xchg
lods
xchg
xor
mov
inc
add
fmull
fsub
adc
arpl
push
mov
aas
pushf
arpl
leave
subb
add
pop
sbb
repz
push
ja
push
xchg
jno
and
and
out
into
cmp
adc
mov
imul
push
insl
pop
int
arpl
sarl
call
cmpsb
out
lret
lds
mov
mov
hlt
in
inc
cltd
sub
pop
outsb
lcall
pop
mov
int3
pusha
outsl
xchg
add
aam
xor
dec
jbe
pusha
sbb
es
out
and
fldcw
xor
pusha
xor
fs
in
dec
iret
dec
sahf
mov
jbe
clc
jecxz
mov
push
adc
inc
ds
cmp
popa
pop
rcl
movsl
mov
jbe
in
mov
cmp
sahf
movsb
sahf
mov
dec
mov
jns
sbb
sub
adc
fadd
xchg
fisttps
push
inc
loope
dec
fdivs
cmp
mov
out
out
adc
fwait
cmp
out
xchg
pushf
bound
or
lret
pop
or
pop
and
push
pop
ret
iret
sub
ds
cmp
xor
push
cmpsb
mov
sbb
cmpsb
std
mov
mov
pop
dec
movsl
pop
xchg
ds
jp
loop
jb
loope
sub
mov
das
pop
rclb
adc
xchg
insb
int3
mov
and
sbb
jl
fcmove
ja
mov
sub
mov
push
lods
cmc
jne
insl
lock
pop
xlat
inc
or
sbb
push
lea
jecxz
mov
cmp
adc
out
das
xor
and
jbe
xchg
movsb
jp
ja
adc
aad
pop
sbb
mov
je
xchg
jbe
fsubrs
dec
int3
test
fmull
inc
sub
jl
xchg
and
mov
vunpckhps
inc
in
rcrl
mov
cmp
fs
mov
sub
mov
icebp
inc
jle
movsl
mov
xor
xor
pop
pop
ja
and
mov
mov
popa
adc
jg
jo
and
mov
push
cmp
outsb
xor
mov
in
push
in
and
mov
fcmovu
in
rol
ja
ret
push
test
sarl
and
fisttps
fwait
daa
mov
xor
adc
les
fstl
xchg
in
mov
imul
add
mov
cmp
jno
pop
or
cmp
cmp
into
inc
mov
cmp
xchg
xchg
inc
pop
repnz
jmp
sub
jle
mov
fwait
mov
dec
aaa
std
pop
test
rol
pop
mov
mov
adc
sarl
cmp
out
jmp
lret
sub
cmc
cwtl
sbb
xlat
mov
push
pop
or
stc
pop
jg
push
pop
sub
or
fisubrs
lcall
pop
push
adc
mov
dec
or
cmpsl
cmp
inc
leave
jnp
andl
inc
pop
mov
xor
xor
xor
cs
pop
inc
jns
push
scas
loop
mov
cmp
mov
std
test
les
push
or
or
jecxz
dec
sub
bound
stc
roll
adc
add
and
sbb
js
lcall
mov
inc
test
push
clc
mov
ljmp
cmp
sbbb
ret
lret
out
imul
imul
mov
or
push
sbb
and
mov
cmpsl
and
mov
add
mov
cld
pop
nop
push
out
roll
inc
push
idivl
insl
out
xlat
pusha
repnz
in
gs
loopne
xor
out
stc
mov
addb
imul
jae
xor
jb
hlt
std
enter
pop
dec
lds
cmpb
jb
adcb
sbb
mov
xor
fildll
mov
sub
mov
xor
cmpl
mov
in
aad
xchg
jbe
xchg
rsqrtps
or
cmp
xorl
add
sbb
ror
lds
jbe
rorb
aas
not
daa
add
sub
out
ret
xor
stc
or
inc
cmp
push
jecxz
lods
leave
mov
adc
rolb
lods
test
test
jecxz
fs
cmp
xchg
adc
sub
shl
cmp
sarl
jno
and
lahf
mov
push
mov
lahf
fcmove
pop
or
addr16
fsubrp
or
add
mov
jno
xorb
out
fmull
outsb
lret
arpl
out
sub
xchg
inc
inc
add
popf
rcll
add
xchg
mov
push
idiv
dec
xchg
aaa
mov
aad
movsb
notb
out
test
inc
jl
push
pop
add
inc
pop
cmp
jl
sbb
mov
mov
push
pop
xchg
sub
mov
cmp
and
outsl
dec
sbb
push
pop
pop
sub
fmul
das
lret
jno
hlt
pop
xor
loop
xchg
imul
cmc
cwtl
pop
lods
outsl
fcomps
mov
cmp
fidivl
scas
icebp
fnstsw
xchg
stc
pop
adc
lock
pop
xor
rorl
xchg
mov
fcoml
iret
stos
xor
mov
insl
call
mov
pusha
cmp
jmp
jg
sbb
repnz
data16
xchg
cmp
sbb
mov
xchg
daa
sahf
jno
adc
stos
push
cmp
jp
test
dec
ljmp
loopne
xchg
testl
pop
fiaddl
bound
ret
int3
sub
scas
test
lcall
cmp
loope
lods
stos
jbe
out
fdiv
mov
and
push
jns
mov
rcrl
sub
pop
sub
rorl
or
shlb
and
popf
pop
fstpl
push
xchg
cmp
bound
mov
push
sbb
xchg
mov
dec
mov
inc
xor
jmp
rep
mov
aam
xor
sub
jne
jl
push
pop
insb
lcall
jle
arpl
stos
push
stc
popa
cmc
loop
pop
lret
subb
jmp
rorl
mov
pop
mov
stos
pop
js
cmpsl
mov
int3
aas
fiaddl
imul
xchg
sahf
mov
sub
push
and
mov
lret
jmp
pop
cmpsl
xor
push
sbb
int
hlt
inc
fistpl
and
jns
gs
fs
mov
xchg
shlb
and
and
je
cmpsl
mov
mov
sub
sbb
int3
outsb
popa
sub
cmpsb
es
out
in
mov
and
inc
and
in
mov
add
loope
clc
roll
jge
mov
pop
dec
scas
xchg
jge
dec
mov
pop
jle
repz
aad
dec
jmp
hlt
and
jns
aaa
lahf
push
repnz
sbb
out
mov
rsm
icebp
ja
sbb
es
push
fbld
sbb
outsb
mov
testb
sub
mov
fstpl
mov
std
sbb
adc
cli
jmp
jl
sbb
pop
add
sub
xchg
movsl
sahf
add
loop
cld
mov
lcall
movsl
jns
int
fstpl
bound
and
rcl
cmpsl
mov
cmpsl
mov
add
in
xor
or
test
mov
jns
jmp
ds
dec
xor
arpl
insl
mov
pop
ret
inc
mulb
or
adc
inc
sub
and
cmpsb
jb
fcmove
fnstenv
das
ss
data16
mov
inc
sti
push
mov
mov
cmc
and
pop
adc
into
cmp
cmc
das
sub
mov
cmpsb
pushf
leave
adc
dec
adc
std
lcall
push
fadds
sbb
cld
jno
xchg
jo
adc
sarl
adc
out
imul
sbb
or
add
inc
clc
inc
pop
test
xchg
push
sub
stos
outsb
push
mov
fidivl
add
or
pop
fldl
adc
fnclex
outsl
sbb
and
and
mov
xor
in
adc
loopne
add
sbb
sub
pusha
stc
pop
ficoms
add
push
imul
inc
mov
into
sbb
xor
jne
out
sbb
push
loopne
adc
dec
xchg
in
movsl
scas
jo
inc
and
out
mov
mov
mov
fisubrl
stos
push
pop
imul
rorb
adc
xchg
or
fiaddl
or
push
test
aam
mov
push
pop
push
gs
sti
rclb
dec
mov
push
fstpt
cmpsb
hlt
popa
out
loop
inc
xchg
push
out
mov
data16
pop
ds
enter
in
push
insb
mov
test
imul
inc
ljmp
je
xchg
sbb
mov
push
out
sbb
sbb
loopne
xor
push
fildl
jb
cmp
mov
xchg
stos
add
mov
push
movsb
xlat
ret
mov
xchg
jmp
add
inc
dec
lahf
call
xor
jbe
std
cmpsl
and
lret
aam
jp
cmp
adc
jp
mov
inc
inc
xchg
sub
ret
vmread
or
jg
test
cmpb
cmp
pop
sbb
out
adc
dec
flds
adc
pop
call
hlt
outsb
shr
mov
jmp
sub
sub
outsb
jp
pusha
xlat
push
ret
ret
mov
push
mov
repz
sbb
pop
xorl
jle
repnz
ds
loopne
xchg
adc
icebp
fs
aas
popa
mov
lret
inc
decb
add
in
adc
rcl
lods
rcrb
je
rorb
clc
and
cltd
cs
ss
mov
cmp
fcmovu
aam
or
jp
sbb
sbb
fcomps
into
add
mov
hlt
mov
js
dec
mov
out
bound
mov
mov
dec
pop
dec
pop
inc
and
sub
pop
xor
movsl
cs
xlat
cmovp
sub
hlt
cld
pop
stos
dec
gs
mov
push
cmp
inc
pop
cmp
ss
cmp
xor
mov
lods
nop
adc
sbb
inc
mov
add
inc
jl
adc
xchg
adc
out
xor
jge
mov
int
cmc
repz
adc
outsl
inc
xchg
pop
es
mov
test
or
in
test
int3
call
sbb
or
xchg
mov
mov
aaa
je
arpl
and
mov
std
cmp
fwait
mov
jo
mov
add
enter
scas
sahf
xor
pusha
fisubl
jp
testl
or
ret
jecxz
xchg
out
xor
push
pop
mov
nop
add
or
fs
and
imulb
ljmp
pop
in
push
inc
jbe
pop
in
sub
movsl
lock
or
mov
dec
inc
les
inc
lods
sbbb
mov
outsb
mov
pop
add
jno
and
dec
xchg
xchg
rclb
lods
pop
lret
test
fstpt
lret
xor
sti
stos
gs
sub
push
mov
lds
xor
add
mov
and
shll
movsb
sti
gs
mov
sub
jl
bound
mov
jae
ss
jmp
mov
add
and
loop
xor
leave
insl
mov
fwait
icebp
scas
cwtl
push
call
jp
push
insl
movsl
xor
mov
lret
mov
rolb
jmp
popf
out
pop
les
test
sbb
push
insb
or
cmp
cmp
inc
movsb
enter
mov
test
std
inc
test
sbb
shl
dec
xchg
call
mov
or
cltd
or
lds
ljmp
cmp
js
pop
adc
bound
jle
je
cmp
push
inc
loope
and
xchg
cld
and
lret
pop
js
dec
je
fiaddl
adc
push
pop
jl
gs
jmp
cmpsl
mov
add
mov
jae
xor
repz
je
cs
adc
jle
out
adc
cmp
test
in
cltd
mov
xor
push
pop
xchg
push
subb
dec
sub
sub
loope
pop
gs
popa
xlat
or
sub
in
dec
sti
pop
ljmp
xor
ret
sub
xorb
and
out
test
fs
xchg
xchg
mov
sbb
sbb
and
stos
mov
mov
dec
dec
mov
dec
icebp
xchg
inc
push
nop
je
mov
mulb
stos
sub
repz
out
jmp
data16
mov
ret
addr16
pusha
out
jns
test
pop
jl
mov
mov
push
mov
jmp
into
loop
mov
cmpsb
data16
das
dec
mov
xor
mov
xor
movsb
stos
xor
lea
fiaddl
andl
inc
add
cmp
pop
xchg
fs
lds
dec
mov
gs
jp
adc
push
iret
jge
mov
xor
out
pop
adc
or
inc
cmp
repz
sub
aam
in
jle
inc
dec
sbb
push
or
shrb
aad
in
cli
push
mov
bound
insb
jb
sbb
cmp
call
or
sar
xchg
arpl
xor
notb
mov
cmp
fs
ret
andb
fsubs
jno
mov
lock
scas
or
cmpsb
mov
adc
mov
or
fcomps
idiv
add
mov
bound
xchg
dec
add
ret
mov
hlt
popf
pop
add
push
movsl
mov
ds
testb
push
xor
adc
movsb
ja
jmp
push
adc
loop
arpl
jbe
test
jae
std
rclb
adc
shl
lock
mov
add
mov
cs
cmp
out
or
scas
fidivrl
xchg
inc
xor
test
jmp
das
cs
inc
xchg
je
loopne
and
dec
shlb
add
roll
jne
loopne
mov
xor
popa
inc
pop
rorl
outsb
aaa
push
push
pop
add
loopne
imul
pop
into
mov
push
xor
mov
pop
insl
lock
push
mov
dec
loop
js
leave
scas
shll
test
movsb
popa
cltd
pop
stos
cmpl
and
imul
ret
dec
push
shll
cli
mov
mov
cmc
dec
fwait
cmp
andl
sub
push
cmp
xor
sub
adc
sbb
xor
arpl
ss
xor
pop
cmp
add
mov
ja
mov
pusha
sbb
jbe
cmp
dec
xchg
ds
adc
jle
inc
pop
push
test
xchg
mov
pushf
nop
jbe
lret
xor
pusha
jle
scas
std
insl
sub
insb
add
data16
test
cmc
pop
pop
sbb
mov
jg
push
pop
xchg
call
cmp
add
stos
jmp
adc
sahf
int
in
popf
iret
rclb
push
test
sarl
scas
mov
xchg
aas
leave
movsb
out
out
cmpsl
aad
loop
add
movsl
mov
or
mov
testl
add
sub
mov
xchg
out
mov
aas
sub
iret
loopne
jno
jbe
push
cmpsl
push
call
outsb
mov
arpl
aam
andl
xchg
loopne
push
test
loop
inc
outsl
insb
js
fdivrl
or
xor
pop
push
int
mov
jl
mov
dec
out
test
sub
lds
cmp
add
mov
jp
in
pop
sub
das
in
aad
mov
or
sub
fldenv
fsubl
inc
push
mov
in
xor
dec
push
shll
or
in
jge
dec
sub
repz
push
xorb
jmp
out
mov
sarb
outsb
ret
jecxz
inc
shlb
xrelease
adc
lahf
xchg
imul
inc
xor
mov
outsl
arpl
aas
jmp
popa
or
mov
fcmovb
sbb
cmpsl
leave
inc
mov
add
adc
js
roll
xchg
cmp
xor
lds
lret
roll
xor
iret
loop
xor
xor
pushf
push
pop
jbe
fstpl
or
xchg
jmp
sub
in
adc
xor
mov
pop
xchg
addr16
push
push
cmpsb
in
add
mov
movsb
sahf
adc
pop
lea
cmp
sub
jmp
insb
jo
sub
mov
dec
ljmp
shrb
jb
out
mov
ficoms
imull
stos
mov
xorb
and
scas
jno
scas
fsubrs
in
sbb
mov
aam
push
out
pop
adc
jle
xor
ds
imul
and
or
scas
int3
xor
mov
cmp
movsl
sahf
in
push
je
xlat
jp
iret
aam
je
test
pop
mov
js
les
push
les
xor
cld
das
inc
int
test
xor
out
in
mov
movsl
pop
jg
pop
push
mov
sbb
loope
cli
fidivs
test
dec
cmpsl
scas
push
in
mov
dec
nop
inc
rclb
mov
sub
arpl
pop
in
frstor
mov
rol
mov
xor
mulb
mov
ljmp
fldl
xorb
inc
push
mov
mov
mov
js
adc
push
lods
jbe
stos
pop
jmp
dec
dec
pop
mov
fcoms
imul
mov
hlt
cmp
mov
icebp
loopne
sub
jecxz
dec
and
or
into
and
xchg
mov
jne
pop
and
std
mov
shlb
cmpsl
xchg
inc
scas
pop
lods
jp
mov
sbb
xchg
jne
shll
into
hlt
insl
scas
xor
push
push
pop
push
int
xor
sbb
dec
bnd
subl
mov
xchg
icebp
pushf
addr16
xor
lea
jns
stc
sbb
sub
dec
imul
popa
or
pop
push
test
lock
dec
imul
sub
faddl
stos
jb
jg
movsb
inc
xchg
sbb
dec
andl
leave
aam
xchg
and
push
pop
fisttpll
jecxz
data16
push
xor
push
xlat
mov
aam
cld
test
movsl
sub
or
mov
adc
mov
push
fstpl
dec
xchg
sub
mov
aad
jge
cli
sbb
xor
into
lea
das
jo
push
notl
pop
andl
jecxz
adc
rolb
fstl
add
and
jbe
mov
ss
fwait
cmp
xchg
sbb
repz
cwtl
and
mov
push
push
cmp
mov
adc
popf
shlb
gs
pop
lods
xchg
mov
fstl
jle
sti
test
test
stos
mov
mov
or
mov
bound
mov
cmpsb
jae
lds
movsl
jmp
sbb
cmp
cmpsl
mov
push
push
movsb
mov
jo,pt
mov
sbb
mov
test
bound
mov
and
cld
mov
xchg
int3
out
dec
adc
sahf
scas
push
cltd
jb
test
jnp
dec
fsubrl
imul
fcomp
ljmp
xchg
jge
insl
xlat
testl
xchg
lods
push
push
sub
xchg
pop
andl
cmp
xchg
mov
mov
sahf
jne
loop
xchg
out
cmpsb
das
cld
jecxz
scas
mov
mov
add
fcomps
lock
movsw
mov
arpl
out
clc
sbb
sub
xor
pop
push
lods
lahf
test
je
pop
icebp
ja
push
leave
dec
or
mov
dec
je
outsb
jmp
sub
das
in
push
add
pushf
fwait
sar
pop
push
arpl
ret
inc
les
mov
fnstcw
add
test
mov
test
cwtl
jo
nop
in
push
in
jle
mov
out
out
push
gs
fists
in
fisttps
fcomps
mov
popf
daa
test
mov
pop
out
shr
jle
mov
dec
sub
xor
jecxz
and
pop
push
loope
jp
xchg
int3
sbb
dec
and
inc
ds
mov
cltd
sbb
xor
int3
and
inc
das
fnstsw
jno
mov
cltd
idivl
push
or
push
repz
jo
js
fisubs
arpl
fiadds
mov
and
dec
stos
push
dec
js
inc
sarb
arpl
mov
add
sti
inc
and
lahf
aad
int
jnp
jb
pop
jge
mov
mov
fnstsw
jg
call
out
lods
pop
push
cli
in
gs
or
test
mov
jp
aaa
rcrb
in
or
and
testb
push
mov
add
inc
rcrl
inc
gs
inc
icebp
jecxz
xorb
push
sahf
xor
pop
dec
shrl
mov
dec
aam
sbb
jmp
jmp
aas
lea
dec
data16
stos
test
arpl
cmp
lret
dec
xchg
popa
mov
push
inc
xor
mov
jg
mov
adc
movsl
dec
je
adcb
repnz
daa
mov
mov
icebp
incb
lahf
lods
mov
repnz
movsl
cwtl
icebp
out
and
inc
jle,pt
sbb
in
outsl
cmp
add
inc
adc
rcll
lds
arpl
and
outsb
test
xor
cmp
movl
mov
int
and
sub
nop
cmp
pop
fld
mov
pop
push
mov
into
and
scas
mov
cli
and
sub
or
mov
xor
cmp
enter
pusha
mov
bound
ret
and
icebp
inc
add
sti
gs
jmp
or
mov
xchg
leave
ss
adc
inc
jge
lret
sbbb
adc
mov
cli
xor
roll
lds
cwtl
xchg
xchg
movsb
clc
ds
adc
hlt
stos
mov
hlt
sbb
pusha
xchg
mov
xor
lahf
mov
data16
shll
xchg
add
movl
aaa
xor
addr16
cs
push
inc
mov
lock
rcrl
out
inc
ja
or
jbe
pushf
fcoml
xor
push
ds
mov
mov
outsb
xor
jg
les
sbb
sub
mov
fstpl
cli
sub
shr
fimull
out
bound
inc
add
adc
xorb
in
movl
test
stc
pusha
aad
fcom
into
imul
mov
mov
adc
or
loop
subb
pop
fwait
movsl
jle
and
movsb
dec
jo
jmp
mov
xorl
jne
cmpsl
mov
fldz
movsl
stos
leave
sbb
xor
js
jb
pop
gs
aaa
je
jle
es
fucomip
loop
test
lea
and
test
and
sub
xchg
js
lret
das
enter
imul
push
jmp
mov
ja
cmp
mov
lahf
jns
sbb
movsb
mov
inc
inc
or
xlat
mov
in
jmp
sbb
xor
and
mov
xor
sahf
jae
stos
mov
lahf
lds
rcrb
int
imul
sbb
jb
lods
rcrl
movb
cs
pop
lahf
xor
mov
ret
and
xchg
aad
sbb
and
loopne
repz
outsb
xchg
enter
adc
pushf
pop
movsb
jbe
inc
sub
and
cmpsl
push
xor
push
in
xchg
jmp
sbb
inc
jmp
pop
into
cmp
or
dec
cmpsl
xor
sbb
sub
inc
or
cs
jne
pop
ror
mov
scas
lea
fidivs
or
lock
dec
fucom
push
lds
std
add
pop
test
ds
ds
cmp
in
popa
mov
pop
sbb
dec
adc
mov
cli
scas
sub
ja
lret
or
shrb
cs
dec
fidivs
orl
xchg
out
loop
and
fsubrp
daa
mov
movsb
xor
scas
jp
jae
xchg
adc
cmp
roll
add
xor
sbb
rclb
push
inc
insb
cmpsb
mov
iret
cmp
scas
lds
xchg
and
mov
pop
inc
mov
mov
jl
push
mov
jns
or
ret
sub
movsl
test
xor
out
jbe
jne
les
fiaddl
loope
jb
shlb
push
jb
fmull
test
in
jno
inc
or
or
pop
inc
fiadds
jb
sbb
sub
or
cmp
inc
cwtl
jle
push
push
jl
cltd
mov
pop
out
inc
sahf
xchg
ja
repnz
ds
fs
xor
mov
mov
arpl
sbb
jne
jp
mov
lea
sub
out
shll
push
lock
pushl
aad
mov
pop
pop
pop
push
cmpsl
dec
inc
addr16
popf
add
mov
mov
aas
repnz
repz
loopne
and
cwtl
fldcw
jno
jp
test
out
dec
cmpsb
inc
sti
xchg
in
and
sub
xor
mov
sahf
push
imul
dec
frstor
enter
inc
popf
mov
lret
mov
pop
push
cltd
push
cltd
sub
jmp
cli
mov
das
jmp
test
sbb
fisttpl
dec
sub
dec
into
dec
mov
jg
cmp
in
movhps
loope
imul
xchg
loop
and
int3
das
sarb
in
imul
ret
mov
or
push
out
test
push
mov
aam
push
int3
push
xchg
pop
stc
pop
test
jns
iret
cmc
icebp
lret
rclb
mulb
and
in
clc
int3
jo
or
mov
loop
sub
arpl
hlt
jns
push
popa
cmp
push
rolb
jo
loop
or
inc
push
xor
and
mov
fmull
dec
xchg
stos
mov
jecxz
lahf
add
nop
xchg
xor
in
sbb
dec
or
pop
mov
arpl
mov
and
pop
sub
in
or
add
pop
xor
mov
mov
pushl
mov
mov
jae
ds
push
sub
rorb
ret
jo
push
mov
repnz
cmp
push
subb
es
mov
cmp
shlb
mov
adc
pop
es
cmp
mov
and
lds
ss
data16
dec
adc
cmp
dec
mov
iret
movsb
jle
xchg
push
xor
or
daa
shrb
movsl
mov
mov
movsb
pop
clc
test
xor
adc
adc
push
lret
mov
xor
add
mov
outsl
int3
pop
jmp
bound
xchg
repnz
movsl
cmp
fwait
add
sbb
mov
jl
sbb
repz
pop
xorb
xor
cltd
mov
or
outsb
xor
jbe
fistpl
mov
call
in
sbb
push
jo
push
pop
sub
sti
jmp
add
lods
mov
push
and
ds
mov
sub
dec
pop
inc
sub
dec
idiv
mov
loopew
mov
lret
mov
pop
sub
test
movsb
scas
js
mov
out
mov
mov
push
test
or
mov
add
lret
ljmp
incb
dec
ror
pop
les
inc
enter
mov
push
cmp
sbb
loopne
push
mov
cmp
iret
leave
xchg
dec
cmp
jl
cmp
out
adc
sti
add
pop
cltd
mov
insl
or
adc
jno
cld
imul
stos
mov
cmp
ds
sub
mov
push
sbbl
outsb
out
jae
mov
xlat
in
pop
je
pop
push
movsb
and
insb
lcall
ljmp
pop
clc
inc
into
aas
cmc
repnz
sbb
negb
push
jge
int
call
fldl
mov
mov
stos
xlat
jo
sbb
sbb
cmc
and
inc
mov
adc
jno
inc
leave
lcall
dec
scas
inc
data16
jne
mov
cli
enter
loop
inc
fs
imul
andb
sub
xchg
and
push
xor
iret
dec
dec
sbb
push
adc
repnz
movl
sti
in
mov
mov
sbb
adc
jle
mov
and
jae
mov
or
inc
or
ficoml
mov
hlt
cmp
faddl
dec
xchg
dec
mov
mov
fwait
imul
lods
xorl
xlat
pop
sub
inc
aas
insl
xchg
add
mov
pop
ljmp
insb
pop
jp
mov
jg
adc
sahf
mov
pusha
repz
and
cmp
lahf
add
ret
repz
pushf
sbb
sahf
loope,pt
sbb
jle
cli
enter
push
lock
fisttpll
adc
xor
add
popf
lcall
mov
lret
fnstsw
test
add
jns
popf
cld
sub
dec
cmp
pop
adc
add
add
inc
pop
sbb
or
sahf
ret
adc
lods
pop
xchg
xor
xchg
imul
jnp
pop
fbld
sub
leave
adc
adc
mov
xor
hlt
push
jns
std
sarb
in
jo
insl
out
test
mov
int
xor
cwtl
push
cmp
je
push
mov
lock
mov
sub
mov
rolb
test
adcl
inc
testl
leave
and
int
sti
xchg
std
shl
adc
jb
sub
inc
fisubl
xchg
fadd
or
adc
fistpl
loop
push
jecxz
pop
stos
arpl
pop
ss
jg
push
daa
cltd
add
cmovbe
jbe
ficompl
xchg
push
testl
jp
dec
push
aaa
push
lcall
jmp
xchg
aad
jg
loope
sbbb
and
add
jo
mov
in
std
sti
in
sub
mov
mov
outsb
add
imul
test
movsb
inc
adc
stc
stc
bsr
cmp
stos
outsb
sub
mov
and
mov
mov
addr16
faddl
mov
pop
pop
adc
subb
add
arpl
add
enter
jbe
mov
and
dec
imul
shll
sub
jne
stc
mov
and
jne
nop
cmp
shr
add
jecxz
xchg
push
outsb
into
daa
pop
xchg
mov
in
subl
cmp
jmp
dec
mov
daa
and
je
fstpl
lods
inc
or
jbe
and
inc
enter
ljmp
insl
dec
in
sub
inc
xor
test
incl
mov
push
mov
sub
int3
mov
lock
or
xor
sbbb
cli
test
pop
dec
aaa
push
mov
pop
xchg
and
in
out
inc
iret
roll
popf
and
sbb
mov
mov
ret
push
les
iret
outsb
cwtl
clc
jl
inc
mov
loopne
cmp
leave
push
jae
pop
outsl
daa
dec
mov
ss
addr16
call
out
xchg
insb
mov
fwait
sbb
outsl
stos
shlb
movsb
pop
mov
pop
inc
or
dec
filds
fdivl
pop
jmp
lea
pop
test
in
imul
push
pop
adc
orb
mov
pop
push
cli
push
jge
push
ja
adc
mov
inc
enter
and
xor
cmp
ret
dec
cmp
enter
xor
inc
or
sbb
jmp
imul
outsb
jg
jne
push
pop
dec
xor
inc
dec
jb
in
decl
inc
test
sbb
mov
add
data16
stos
push
js
jae
out
pop
jnp
aad
mov
inc
push
jl
mov
cmc
int
dec
push
fsub
in
clc
push
dec
cmp
xchg
cmp
ljmp
rorl
jmp
js
xor
lods
insb
jbe
jne
xchg
imul
and
jp
or
sub
sbb
sub
inc
xor
scas
push
add
test
les
sbb
mov
daa
movsl
daa
mov
xor
cmp
shll
push
inc
es
notb
cmp
sub
xlat
mov
xchg
push
test
cmpsl
xlat
xor
xchg
push
mov
or
cmpl
and
popa
mov
xor
cmpsb
ja
jg
xchg
clc
bnd
sbb
mov
xchg
jg
adc
mov
xchg
pop
sub
lock
fisubrs
cmp
sub
dec
cld
xchg
imul
testb
fmull
xor
idivl
lods
incl
adc
fiadds
xchg
jne
and
adc
int3
inc
xlat
decl
xor
loopne
adc
movsb
sarb
push
jl
ss
cmp
lret
push
mov
cmp
andl
lock
aaa
dec
cmpsb
sbb
movsl
mov
cmc
sbb
test
bound
enter
sbb
jge
icebp
repz
xchg
or
and
jb
mov
fiadds
sub
ja
cld
ja
xchg
iret
pushf
jne
mov
lea
lahf
mov
shlb
notb
scas
sbb
cmp
xlat
fld
dec
mov
or
in
lcall
movsl
sahf
add
dec
adc
and
scas
cmp
in
push
mov
popa
rolb
jbe
nop
mov
inc
jb
fldt
xor
popf
orl
aam
test
xchg
mov
test
mov
pop
movsb
test
dec
sub
outsb
mov
lret
and
ret
and
jno
pushf
out
jg
addr16
fidivs
inc
jg
cmp
add
jecxz
imul
fildl
dec
popa
mov
fstps
and
lock
dec
movsb
jo
dec
mov
ret
cmp
in
mov
nop
iret
xor
out
cli
inc
and
xchg
sub
int3
sti
cs
xchg
fisttpl
inc
aaa
xor
mov
sarb
testl
enter
outsb
imul
adcl
movsl
lods
sub
mov
es
adc
into
push
repnz
sub
hlt
in
push
fwait
pop
inc
mov
and
add
cmp
fstpt
adc
xor
lahf
xor
sbb
mov
cmp
sub
aaa
sbb
icebp
ds
lods
xor
insl
xor
push
sbb
movsl
out
or
push
in
mov
pop
in
popa
mov
ret
cmp
mov
xor
push
int3
xor
mov
jmp
pusha
inc
aad
and
jmp
outsl
call
ds
xchg
push
dec
push
orl
xor
pop
cmp
and
movsb
std
aad
jae
adc
aad
loope
adc
jle
xchg
push
je
sarb
dec
into
cmp
stos
cmp
pop
mov
xchg
out
and
mov
dec
fsubrs
aas
in
popf
insl
stc
mov
inc
loope
add
lcall
or
cmc
mov
cmc
jae
lcall
bound
in
pop
sub
mov
jge
xor
lcall
jno
push
push
mov
repz
iret
jle
lret
inc
ror
adc
insb
and
in
insb
sub
aad
mov
or
jbe
insl
cmp
pop
jecxz
loopne
ss
repz
icebp
es
jge
jp
jbe
testl
loop
cmp
jbe
xor
gs
adc
stc
cmovne
mov
fists
mov
mov
iret
mov
mov
or
rcr
inc
jecxz
jb
lock
xor
inc
dec
fidivs
mov
lock
xor
mov
repz
mov
jno
addr16
pop
std
daa
xor
popf
push
mov
sub
jge
jecxz
dec
out
out
xlat
pop
lods
jp
add
addr16
scas
pop
and
lcall
sub
out
je
nop
dec
xchg
sarl
loopne
gs
outsb
xor
cwtl
test
push
pop
lcall
mov
inc
pop
push
mov
or
jno
mov
and
sti
iret
push
push
cld
adc
xor
es
mov
lret
jecxz
pushf
stc
mov
xchg
pop
scas
pop
xchg
psubusw
or
pop
push
shr
adc
xor
scas
sbb
mov
inc
cmpsb
sub
pop
movsb
pushf
sbb
sbb
mov
or
mov
outsb
fucomip
lahf
stos
pushf
fmull
fnsave
les
stos
lret
add
cmp
out
pop
mov
sbb
div
test
mov
cmp
lods
mov
cli
sub
mov
cmpsb
in
pusha
dec
pop
cli
sahf
xchg
imul
out
adc
push
inc
mov
arpl
int
mov
sbb
fidivrl
mov
insb
jmp
pushf
jecxz
adc
je
test
fildll
pop
cs
mov
aam
dec
fistps
mov
adc
xor
sbb
sahf
stc
arpl
out
xchg
mov
mov
fldz
push
jecxz
pop
jg
mov
ds
inc
adc
mov
jnp
int
adc
jae
cmc
gs
xor
dec
xlat
cmp
add
es
mov
movsb
test
mov
pop
sub
pop
sub
out
mov
jb
imul
dec
mov
movsb
adcl
dec
ret
mov
lock
cmovs
add
mov
xchg
xor
mov
push
fsub
sub
mov
loopne
js
cmp
shrl
test
push
jle
outsl
pushf
insb
xchg
scas
mov
test
push
lods
cmpsl
cwtl
int
insl
mov
outsl
loop
add
jne
lcall
pop
dec
jp
fstps
ja
push
adc
int
ljmp
fcomps
bound
push
adc
jle
xchg
push
sbb
mov
sbb
in
lock
outsl
bound
test
aad
mov
int3
xchg
sub
mov
inc
repnz
sub
js
jmp
ds
sub
in
stos
add
mov
jmp
push
jne
sub
outsb
mov
inc
lret
in
mov
adc
stos
xorb
and
repnz
inc
pop
fstpl
jb
in
sub
lret
lods
fs
adc
mov
sub
movsl
xor
push
into
sub
add
cli
std
mov
pop
int3
pop
or
or
mov
cltd
xchg
scas
push
jecxz
inc
call
mov
sub
lret
aam
test
fwait
imul
paddsw
xchg
sub
mov
jne
sti
jp
lods
dec
pop
repnz
mov
inc
push
mov
nop
mov
andb
arpl
daa
push
ljmp
push
cmp
sahf
lods
lcall
push
xchg
push
inc
xor
clc
hlt
xchg
jne
push
in
int
xchg
mov
imul
enter
inc
mov
cld
pop
cwtl
push
jno
pop
mov
scas
cmpsb
outsb
cmp
imul
outsl
cmpsb
les
inc
mov
and
mov
out
xchg
rcll
mulb
ror
add
lahf
dec
bound
push
mov
jnp
arpl
fistpll
rclb
or
fsubrs
push
js
imul
loop
sub
imul
inc
inc
aas
fsubs
adc
push
push
jle
out
bound
push
xor
mov
push
daa
mov
push
dec
mov
fsubrl
lods
mov
dec
mov
movsb
leave
dec
pusha
scas
or
inc
xor
daa
lcall
pop
pop
mov
push
adc
jle
xchg
inc
mov
inc
pop
clc
sub
push
ret
sub
xor
cmp
mov
mov
hlt
xor
push
stos
lock
push
orb
popf
fwait
mov
sti
aaa
int
adc
addr16
in
add
les
xchg
push
lret
gs
shrb
jmp
int3
fidivrs
mov
mov
fnstcw
pop
inc
loop
loope
jnp
mov
mov
nop
adc
icebp
mov
xor
sbb
das
mov
jp
aaa
inc
pop
stos
fistpll
sub
decl
push
cmp
pop
jg
insb
sub
inc
inc
push
and
mov
push
inc
outsb
mov
scas
lcall
xchg
fidivs
cli
out
xchg
loopne
cmp
mov
jnp
mov
pop
mov
fnstenv
stos
jns
adc
jbe
or
add
lret
sub
mov
fnstcw
inc
dec
imul
gs
test
and
hlt
clc
or
fisttpl
push
mov
mov
cld
sbb
inc
sahf
xor
cmovg
iret
ss
push
out
and
add
sbb
sub
dec
jge
add
shlb
and
stos
inc
jmp
adc
shll
jl
movsb
dec
cmp
loope
std
sti
fnstenv
stos
inc
test
mov
dec
push
fcompl
adc
xor
pop
scas
cld
lret
xchg
jp
inc
ljmp
push
jmp
cwtl
popa
fiaddl
out
add
inc
sarb
loopne
lods
jb
clc
outsb
scas
push
cmp
or
mov
in
mov
ljmp
test
inc
push
jo
or
scas
jg
sbb
mov
dec
add
addr16
and
push
ss
mov
jl
xor
sbb
ds
add
mov
pop
jmp
sub
pop
loop
mov
push
dec
pop
pushf
mov
mov
add
jne
mov
sti
adc
sub
jo
or
loope
lods
sti
cmp
adc
mov
pop
jnp
pop
and
repnz
or
cmp
jmp
ja
xor
std
int3
bound
cmc
lods
pop
cmp
sub
in
lods
inc
adc
xchg
loope
mov
jmp
jle
je
inc
pop
sub
rol
hlt
jno
mov
xchg
clc
repz
aas
xor
in
adc
jecxz
sub
sub
lea
jne
lahf
aas
or
in
xor
mov
jno
xor
jl
push
das
lods
fld
dec
xor
xor
xor
repz
rorb
mov
pop
lods
inc
leave
and
lea
add
jnp
mov
jnp
les
add
xor
cmp
jl
call
filds
ret
fistpll
ljmp
iret
cmp
jae
adc
lcall
jnp
push
out
repz
imul
cltd
popa
xlat
jge
cmpsl
fwait
push
rolb
mov
inc
fldcw
pusha
mov
fbld
or
jnp
jle
xchg
pop
cs
cli
dec
xchg
cmc
lahf
mov
pop
cli
pushf
fnstcw
mov
dec
mov
xor
jge
mov
jge
dec
nop
leave
inc
mov
psrlw
repz
push
test
stos
lea
ret
icebp
hlt
test
mov
mov
sbb
mov
pop
outsb
cld
ljmp
shll
mov
jae
ret
xchg
add
push
repnz
std
fwait
sbb
outsb
std
sub
mov
test
sbb
cmp
cmpsl
insl
cmp
hlt
test
push
jo
xchg
adc
cli
push
cmpsl
iret
jne
adc
jne
mov
and
mov
inc
icebp
outsl
cmp
pop
stos
add
mov
xchg
ja
dec
mov
pop
mov
push
lds
add
jne
sbb
les
insl
adc
insl
jge
sub
shrl
lea
sbb
xchg
jne
push
scas
jno
pushf
cs
movsl
pop
inc
or
inc
arpl
or
jle
or
or
outsb
ds
xlat
fdivrl
jno
andb
cvtps2pi
pop
dec
mull
or
dec
ret
icebp
mov
sub
rorb
cmp
mov
mov
pop
ret
outsb
cmp
add
test
mov
inc
dec
addr16
inc
lock
push
mov
or
rcrl
test
inc
xlat
mov
repnz
int
cmp
sub
daa
jmp
dec
mov
mov
add
fisubl
std
jne
cltd
cmp
ret
in
js
lods
int
mov
jnp
cwtl
scas
or
lock
lcall
mov
mov
push
sub
rclb
ss
pop
and
stos
shll
pushf
out
or
push
inc
clc
sub
jg
and
sahf
int
pusha
shlb
dec
scas
out
mov
lcall
sub
lret
cs
xchg
pop
daa
outsb
sub
dec
ret
shrl
imul
fmuls
ja
sbb
test
mov
cli
rcrb
xor
push
and
push
outsl
cs
loope
call
xor
out
or
sbb
mov
cmc
fidivl
fucom
loope
sub
inc
push
outsb
popf
ds
mov
dec
mov
fcoms
mov
mov
pushf
test
movsb
dec
rorl
inc
xchg
mov
in
or
mov
adcl
dec
sbb
mov
fcoms
jo
std
pop
test
pop
out
orl
push
mov
loopne
jae
sbb
ret
mov
dec
lahf
out
pop
xlat
mov
leave
or
dec
out
pop
lahf
in
cld
sub
imul
mov
pop
or
adc
and
imul
scas
mov
cli
aas
xchg
aad
jg
lods
mov
fisttps
push
and
push
fisubrl
mov
movsb
shlb
pushl
aaa
out
shlb
xchg
adc
jb
and
inc
fldcw
jb
and
ss
pop
mov
and
pop
sub
rorb
cld
out
adc
stos
lock
cmp
sbb
xor
jns
call
mov
ja
xorb
js
add
mov
xchg
pop
cs
sub
inc
insl
inc
int3
sub
inc
pop
adc
ljmp
mov
bound
add
std
mov
mov
int3
add
mov
mov
out
dec
pop
mov
sbb
fistl
bswap
push
dec
in
out
mov
mov
lret
rol
fcoml
cmp
pop
sbb
and
daa
int3
inc
dec
xor
call
or
stos
push
xchg
dec
xor
push
pop
sti
out
push
sbb
pop
pop
cmp
mov
insb
inc
jae
pop
das
int
enter
lods
sub
push
xchg
addb
repz
jbe
cmc
jno
jno
gs
dec
loop
xor
jnp
sahf
mov
add
sbb
cwtl
mov
repnz
dec
mov
jbe
cmp
cli
sub
sub
jb
adc
pushf
fwait
std
sbb
sub
mov
mov
aas
push
xor
ret
jecxz
pop
jo
imulb
jp
mov
jno
test
pop
jo
mov
hlt
xchg
fwait
ljmp
int3
fidivrs
insb
call
lods
stos
popf
shr
xchg
icebp
repnz
mov
cmp
stos
sti
dec
fidivs
xor
or
out
out
jb
dec
push
mov
xor
iret
ja
adc
adcb
mov
clc
jb
mov
xor
pushf
adc
xor
jno
fcoms
ja
test
pushf
into
ljmp
xchg
adcl
pop
daa
sbb
inc
xor
inc
mov
das
loop
mov
sti
test
mov
hlt
aad
das
pop
sbb
enter
push
push
ss
add
inc
mov
pop
sbb
scas
sti
push
loope
mov
pop
jae
push
add
push
call
fcmovne
movsb
leave
lock
jns
subb
or
roll
sub
cmp
in
imul
aaa
lret
int
imul
scas
decl
out
adc
or
adc
cmpl
xor
and
pop
or
push
sbb
push
mov
mov
aas
fidivrs
and
xchg
cmp
cmp
cli
fimull
out
loop
jnp
cmpsb
xchg
adc
xchg
mov
loope
add
push
pop
mov
imul
xor
and
fmull
sub
pop
lea
inc
jnp
pop
xchg
sub
leave
dec
cld
cmp
jne
addr16
cmp
fbstp
sti
fnstcw
lods
sub
popa
loop
in
imul
mov
pop
pop
xchg
mov
and
inc
sub
and
xchg
mov
push
adc
clc
mov
insb
cmc
add
in
imul
daa
fs
addr16
std
jne
nop
nop
aam
mov
or
les
mov
es
jbe
push
je
and
aad
fildl
inc
push
mov
mov
out
and
xchg
iret
adc
les
pop
mov
dec
pop
enter
fsts
jbe
push
repz
push
mov
adc
repz
lods
push
sbb
adc
jns
add
js
ss
pop
loop
fmulp
out
scas
mov
add
xchg
adc
pop
jmp
xor
repz
mov
dec
jmp
outsl
lcall
jecxz
jne
enter
jb
jmp
ret
lods
xchg
jle
in
repz
fldt
into
ja
in
movsl
ljmp
inc
cmp
ja
out
cwtl
xchg
andl
js
imul
shlb
cmp
or
fdivp
or
lods
out
shrb
imull
js
pop
sub
es
cmc
or
sbb
cld
and
pop
xchg
sbb
lods
shlb
data16
mov
adc
aas
icebp
sbb
test
jp
stc
push
ja
shrb
jne
mull
mov
mov
iret
xor
sbb
cltd
ret
lock
cld
mov
pop
mov
push
inc
dec
dec
nop
xor
mov
inc
out
ds
add
xchg
lock
adc
sub
loopne
jge
loope
jecxz
sahf
testb
adc
pop
aas
insb
inc
xchg
lahf
ret
cltd
inc
jmp
add
mov
std
es
mov
daa
pop
sub
shll
jecxz
dec
sbbl
je
bound
jge
push
lock
bnd
fcmovne
enter
mov
adc
cmp
pop
add
out
ret
pop
repz
pop
pushf
cmp
inc
cmp
xlat
fwait
pop
xchg
inc
call
pop
jne
out
gs
cmp
cmp
or
pop
add
xlat
test
pop
ja
xchg
cmpl
pop
and
fimull
jbe
hlt
iret
xchg
adc
scas
lods
inc
lret
out
sbb
shlb
loopne
sub
add
xchg
jne
push
xsaves
popf
sub
in
imul
mov
jb
rclb
xchg
std
inc
stos
repnz
adc
mov
lss
or
scas
sub
jg
loop
int3
enter
ds
xlat
push
pop
add
xchg
push
jno
fs
xchg
leave
pop
sub
sub
jnp
dec
ret
lods
pop
cmp
jne
pop
movb
pop
lods
aam
and
mov
pop
out
shl
jnp
xchg
enter
mov
sbbl
or
rclb
lock
arpl
add
jecxz
lea
dec
imul
and
ss
repnz
adc
roll
adc
lret
cli
sub
push
dec
cmp
ss
pop
cld
mov
cmc
push
out
int
and
add
and
cmpsl
iret
nop
mov
pop
cmp
into
mov
roll
mov
jmp
pop
jle
xor
js
push
push
iret
jle
adc
bound
xchg
imul
jmp
add
shll
lock
fnstsw
lds
jmp
sbb
pop
dec
xor
cli
andb
pop
outsl
les
mov
jg
inc
out
ja
out
jecxz
hlt
ret
pop
sahf
cmpsl
pushl
push
lret
lahf
xchg
xor
pop
mov
dec
or
loope
lcall
lds
incb
js
incb
pop
gs
insb
xchg
add
jmpw
ds
outsl
dec
xchg
into
xchg
out
in
dec
imul
popa
sub
mov
mov
adc
outsb
xchg
sub
cmp
into
and
loopnew
fucomip
or
push
mov
cmp
pop
push
sub
sub
dec
iret
inc
add
aaa
call
adc
sti
xor
xor
iret
sub
push
mov
and
push
jno
and
lcall
stos
movsl
and
dec
and
ret
fcmovb
out
test
stc
sub
ret
mov
push
outsl
mov
push
push
dec
aad
stc
sbb
lcall
jg
and
leave
gs
dec
aad
inc
lods
test
push
sub
jae
mov
xor
pop
jno
leave
mov
clc
sbb
xor
pushf
sbb
movups
arpl
mov
mov
shll
mov
in
adc
push
xor
or
pop
mov
lret
mov
int3
xchg
loopne
int3
cld
or
gs
xor
fdivl
popa
nop
mov
push
pop
inc
cli
insb
push
in
cmp
sahf
mov
sar
lcall
dec
daa
fs
or
rcr
mov
fcomip
adc
mov
pop
addb
pop
test
and
xor
lock
jmp
mov
fadds
mov
jl
dec
fnstenv
fwait
mov
pop
xchg
add
test
iret
inc
jg
lods
mov
ficoml
arpl
iret
xchg
xchg
std
or
gs
push
xlat
push
mov
rcl
stos
popf
call
push
or
mov
or
push
jae
push
push
jg
ficomps
in
int3
sub
insb
fs
fcoml
sub
imul
mov
lahf
adc
pop
in
push
push
jl
xchg
inc
mov
aas
mov
pop
bound
jle
jo
push
bnd
ficoml
xchg
fbstp
jbe
addl
aam
lret
lret
push
sub
push
mov
hlt
add
sub
pop
mov
jne
dec
shrb
sbb
dec
in
repnz
mov
out
or
je
and
out
mov
pop
aas
scas
data16
mov
xor
fmul
dec
sbb
into
sbb
sub
cmc
imul
in
and
in
mov
cmp
fdivrl
dec
lcall
sub
test
or
mov
xchg
lods
pop
fisttpll
pop
into
outsb
xchg
xor
push
xchg
lods
popf
cmp
ljmp
inc
and
inc
cmp
pop
pop
and
push
adc
ljmp
imul
jmp
fcomip
pop
mov
out
xchg
mov
dec
sahf
sub
and
mov
aas
xchg
repnz
push
out
mov
ja
nop
fwait
jmp
subl
aad
jge
lods
pop
mov
std
mov
sahf
ror
cld
xchg
jmp
lret
xor
cmp
inc
inc
xchg
push
repz
and
stc
lds
lahf
push
mov
rorb
test
lods
std
xor
push
add
iret
jno
aas
inc
hlt
enter
cmp
fwait
dec
adc
cld
push
and
and
ss
in
sbb
mov
int
jg
sub
add
sub
aam
outsl
adc
xchg
fstpl
dec
lods
lcall
cmpsb
mov
gs
aas
movsl
bound
and
mov
cltd
pop
mov
pop
out
push
push
xchg
sbb
outsb
cmpsl
insb
lods
popf
jno
aad
lds
movsl
cli
out
add
cmp
hlt
arpl
ret
jae
dec
mov
jo
sti
sbb
testb
fmull
pushl
sbbl
sti
lock
fcmovnu
cmpsl
mov
fiadds
pop
xchg
jp
mov
cmp
cmp
repnz
xor
cmp
sbb
in
mov
pop
repz
stos
xor
xchg
imul
push
inc
int3
jb
and
jne
scas
insb
cmp
mov
xchg
jno
cmp
movsl
inc
dec
cmp
dec
lods
adc
pusha
jno
mov
pop
push
mov
test
push
data16
adc
dec
repnz
rcrb
pop
ds
call
in
jg
jecxz
xor
and
pop
xor
jg
mov
sub
push
mov
xor
dec
roll
dec
inc
loope
sbb
stos
pushf
dec
and
enter
pop
xor
test
push
shlb
mov
lahf
pushf
fistl
jne
xchg
and
xchg
dec
ja
xchg
popf
cli
push
xlat
dec
loopne
mov
ficoml
lock
pusha
fs
and
out
adc
in
hlt
jbe
movsb
cmp
mov
mulb
mov
dec
add
mov
lods
pop
das
mov
push
ret
adc
dec
dec
and
push
mov
add
sbb
fdiv
and
adc
pushf
pop
mov
push
stc
adc
dec
movsb
pop
or
jg
mov
adc
repz
ffreep
mov
adc
hlt
jno
push
adc
mov
xor
jo
inc
fnstcw
stc
outsl
lret
mov
fdivrl
mov
and
mov
enter
in
pop
shll
and
push
and
rcl
and
jmp
inc
insl
add
nop
cmpb
adcb
idiv
das
cs
adcl
loopne
pop
sub
adc
enter
sub
and
mov
inc
jno
icebp
xchg
movsl
sub
and
movsl
ficompl
pop
xor
outsb
loope
imul
push
aam
or
divl
sub
sub
das
push
push
dec
jge
and
arpl
mov
mov
sub
inc
or
in
add
rclb
insb
dec
movsbl
mov
dec
cmp
lret
popa
pop
sbb
in
jb
jmp
mov
cmp
ret
lods
adc
rolb
test
das
dec
jp
shlb
cltd
in
push
or
push
bound
pop
push
sub
les
ja
push
test
push
aad
push
fwait
in
iret
jne
mov
popa
aaa
dec
sarb
stos
stos
lret
inc
inc
or
and
adc
jge
divb
pop
jne
add
lret
jno
pop
leave
inc
sbb
mov
andl
and
loope
rorl
sub
add
push
das
sarb
add
pop
adc
mov
or
xchg
xor
xor
cmp
inc
inc
fnsave
stos
loope
add
jb
repz
ja
rorl
test
dec
aam
fstl
adc
or
arpl
or
inc
adc
int3
inc
or
xor
call
inc
jecxz
fincstp
insl
cmp
inc
loope
out
lret
idiv
pop
stos
and
mov
xchg
xchg
scas
jp,pn
stc
jno
mov
aam
das
xchg
fsubrs
call
mov
dec
sub
xchg
jns
adc
rorb
mov
sub
xor
stos
movsl
sbb
jbe
pop
sub
mov
dec
loop
lea
push
xor
pop
outsb
das
adc
fistpl
dec
adc
mov
ljmp
adc
and
add
jge
mov
xorl
cli
pop
jmp
fisubrl
push
pop
inc
cmpsl
add
push
adc
in
add
xor
push
nop
mov
ror
loope
stc
into
xor
mov
lea
fildl
in
push
pop
push
mov
sub
int3
shll
xor
sbb
push
mov
mov
subb
pop
les
clc
push
dec
xchg
mov
or
fbstp
ljmp
cld
sub
adc
adc
in
popf
imul
cli
and
shrb
adc
test
sar
xor
add
sarb
in
sbbb
jnp
dec
subb
push
sub
sbb
mov
insb
cmp
into
out
dec
mov
fadd
ret
or
imull
ja
call
fsub
imul
cmp
and
xor
scas
stc
popa
lock
and
movsl
daa
pop
dec
and
jne
pushf
fstl
or
mov
fdivl
test
push
stos
jae
or
mov
test
jo
push
dec
push
sti
jp
xor
mov
cmp
and
flds
adc
cmp
xor
packuswb
mov
adc
add
pop
clc
sub
je
pop
daa
fcoms
cld
test
loopne
push
sub
or
jg
inc
shrl
pop
scas
jae
ficoml
mov
push
push
inc
pop
fiaddl
sub
lret
rcll
fdivrs
mov
insb
cmp
popa
cmp
movsl
dec
and
xchg
dec
push
dec
push
xlat
jle
loope
jae
xor
dec
push
adc
jne
fnstenv
mov
sbbl
sti
mov
lahf
aad
lods
cmp
sbb
cli
xchg
ljmp
sti
mov
or
repz
iret
popf
popf
fldt
das
scas
pop
imul
inc
fnstenv
lahf
push
mov
fucomi
sarl
pop
mov
add
pop
cmpsl
inc
and
adc
loopne
jae
out
xchg
aam
add
ret
in
inc
mov
lea
xchg
and
scas
addl
xlat
mov
xchg
xchg
fsts
addb
fmuls
inc
or
jp
js
or
jmp
in
lock
inc
push
dec
xor
dec
sar
ja
dec
jg
pop
push
scas
sub
xchg
dec
and
dec
dec
imul
xor
xchg
shrl
cmpb
xor
sti
sub
fsubr
mov
jns
jnp
hlt
add
lahf
pop
add
je
sub
lods
push
jmp
push
in
lcall
pop
sbb
ret
gs
into
ss
addb
add
inc
sti
shll
repz
add
leave
jb
sub
mov
pop
xor
orl
fdivrs
in
shrb
sub
ss
clc
or
inc
out
sbb
mov
mov
mov
lcall
lret
fcmovne
imul
jns
loopne
or
orl
test
aas
pop
jp
jb
ja
shrb
fldt
divb
inc
dec
das
add
or
shlb
clc
and
mov
iret
mov
shr
adc
xor
sub
dec
xchg
jb
adc
sti
push
addr16
sti
sti
cmp
ja
xor
es
mov
lods
jo
jmp
lods
aam
aad
rol
repnz
mov
inc
dec
mov
jae
xchg
fsubrs
pop
cmp
mov
sbb
xchg
mov
dec
and
paddd
rorl
and
loope
scas
mov
push
push
push
test
xchg
sbb
push
pop
fcoml
push
push
sahf
or
ds
pop
sbb
xor
in
bound
insl
rcrl
add
scas
test
push
out
push
pop
sub
filds
add
pop
stos
cmpsb
lcall
or
or
ss
imul
adc
fnsave
mov
stos
outsb
or
movsb
adc
mov
mov
loop
pop
add
jp
sub
call
and
cmpsl
cltd
subl
iret
fdivs
sbb
dec
jb
adc
add
sub
leave
sbb
lret
negl
call
test
arpl
insb
imul
roll
insb
pop
xor
jmp
xchg
loope
pop
ja
push
movsl
inc
jg
test
dec
out
loope
addl
and
ret
mov
lods
cltd
and
xchg
mov
mov
cld
xchg
xchg
cmp
pop
adc
mov
mov
lods
pop
push
lcall
xchg
inc
fmull
adc
scas
jge
fistpll
in
jmp
cmpsb
mov
clc
mov
push
jnp
call
imul
stc
stos
roll
sub
push
movzbl
sbbb
jbe
fcomps
lret
test
cmp
in
ftst
lods
mov
cmp
frstor
xchg
mov
aam
rcrb
dec
ret
fsin
out
int
jno
push
repnz
fcomp
arpl
dec
dec
xchg
jp
mov
pop
mov
pop
inc
ja
ret
arpl
mov
fbld
test
jbe
lahf
sti
dec
stos
sahf
daa
pop
inc
sbb
stos
push
cmp
jmp
sbb
push
int3
mov
ret
xor
xor
cmp
dec
int3
test
scas
js
ret
mov
loope
pop
pusha
mov
test
sub
pop
inc
fldt
fwait
neg
sti
mov
cmpsb
mov
inc
cmp
call
xor
std
int
cmp
out
sbb
and
xchg
jg
dec
mov
push
pop
sbb
test
sarb
into
pop
fwait
add
jo
jg
popf
pusha
adc
fdivs
lret
pop
pushl
repnz
push
pop
sbb
jbe
fdivs
rorl
jl
imul
jg
test
rcr
arpl
push
pop
xchg
cmp
xchg
lcall
adc
in
mov
les
into
sbb
jge
aad
ljmp
call
fcomip
sbb
cwtl
cmp
dec
dec
cltd
sbb
xchg
push
adc
daa
out
or
mov
fstps
mov
cli
mov
push
xor
pop
and
lods
cltd
sti
jbe
adc
cs
lods
and
pop
insl
push
xchg
adcl
mov
jecxz
mov
inc
inc
xchg
js
jnp
sub
sbb
mov
pop
insb
xor
pop
dec
repz
outsl
dec
push
in
or
stos
ss
cmpsl
xchg
ss
or
or
lret
mov
sbb
ficompl
mov
jne
lea
xchg
and
add
push
lock
mov
add
scas
or
adc
ds
repnz
or
and
xor
inc
loop
mov
mov
push
clc
lret
ret
mov
mov
cmp
les
fwait
and
mov
popa
aam
inc
adc
pop
mov
ds
add
pusha
dec
popa
push
les
jmp
movl
jnp
fmuls
cmp
add
shl
dec
push
rcr
xor
call
mov
stos
jb
sbb
outsb
inc
pop
jmp
add
or
jae
lods
in
dec
aam
push
mov
je
and
movsb
xlat
sub
movsb
inc
add
popa
ret
cwtl
inc
push
xchg
sbb
mov
mov
inc
xor
sahf
add
sub
mov
mov
push
roll
mov
xchg
sarl
ja
repz
out
cmp
sub
lret
imul
in
cli
push
pushf
cmp
xor
sub
xor
es
outsl
lods
push
cmp
jb
imul
pop
orl
loopne
lods
cs
clc
xchg
xor
sbb
jmp
ja
dec
pop
xor
lds
popf
mov
rol
add
xchg
aad
es
fiadds
xchg
insl
or
ja
fstps
push
sub
testl
pop
fisubl
aaa
cli
pop
sarb
punpckhwd
les
fwait
xor
js
scas
inc
mov
pause
cmp
pushf
dec
loope
popf
push
aaa
pop
aad
mov
xchg
in
xchg
or
lods
test
push
jb
lds
push
out
cmc
push
ss
out
mov
sarb
fcomps
lahf
mov
fistpl
in
pop
lods
insb
jg
jp
das
mov
adc
mov
cld
test
lds
roll
jnp
and
xor
pop
push
xchg
scas
pop
lret
dec
js
dec
adc
xor
repnz
lods
mov
sbb
cmpsl
xchg
cli
subb
ret
inc
fsubl
push
sbbb
sbb
scas
pusha
xor
adc
in
cmp
aas
fbld
divl
mov
jecxz
jnp
jbe
inc
ja
jp
lds
adc
sbb
and
jne
arpl
jmp
cltd
fldt
aas
into
jns
xor
inc
push
cs
out
xchg
push
xchg
rcll
test
cwtl
dec
pop
xor
fildll
sub
sarb
repz
inc
fldlg2
shrb
add
repnz
or
xchg
jnp
sub
enter
push
mov
pushf
push
gs
mov
add
div
push
sar
pop
jp
es
lret
fstl
stos
aaa
nop
int3
ds
lock
mov
loope
mov
inc
dec
pop
cmc
mov
outsb
sub
lock
mov
xchg
rorb
call
ret
inc
jb
mov
dec
jae
rorl
lret
add
fs
jnp
dec
in
cwtl
movsb
les
mov
pushf
cmp
in
in
mov
ss
jmp
mov
push
std
es
addr16
add
sti
lock
sbb
or
std
sbb
pop
dec
xchg
rcll
cmp
xchg
pop
mov
clc
jae
cmp
lock
clc
mov
fwait
outsl
or
pop
sbb
sub
inc
cmp
xor
push
push
popf
out
jmp
sbb
std
add
test
mov
aam
test
jne
cmp
cvtss2sd
movsl
mov
xchg
cs
lock
loop
cwtl
daa
roll
scas
dec
cmc
inc
out
cmp
mov
push
fcoml
out
cmc
bound
pop
mov
popf
mov
scas
pop
jge
jae,pt
orl
pop
xlat
test
push
scas
aam
fdivs
sahf
stc
add
mov
mov
ret
ja
shl
jecxz
out
fs
mov
xor
divb
scas
and
mov
insb
test
das
repnz
lcall
cwtl
lods
fiadds
aaa
fstl
cli
or
loopne
mov
sub
and
insl
mov
pop
jns
pop
or
push
insb
mov
out
mov
xor
cmc
and
mov
add
jns
mov
mov
cmp
sbb
jnp
mov
xchg
mov
cmp
cmp
dec
aad
in
push
sti
cmpsl
scas
hlt
sbbl
jle
jg
sub
mov
adc
popf
sahf
mov
ficoml
imul
xchg
fwait
or
lahf
pop
sbb
sti
dec
sub
mov
test
xor
sbb
sbb
fiaddl
sub
ret
or
push
shll
inc
sbb
push
popa
push
sbb
pushf
push
and
test
inc
insl
push
xor
push
push
test
test
lock
adc
xchg
int3
lods
adcb
sbb
xor
add
or
das
lea
lahf
les
int
test
cmp
out
je
fidivrl
lods
adc
in
pusha
push
mov
adc
pop
and
inc
push
or
jae
sbb
or
push
imul
leave
je
rcr
stc
mov
mov
pop
inc
mov
mov
mov
aam
sub
pop
pop
fwait
xchg
push
outsb
int
mov
outsb
stos
or
add
fcomps
push
or
jnp
insb
imul
jbe
enter
clc
aas
pushf
mov
fs
pop
ret
lock
out
imul
sbb
mov
sbb
fsubl
in
mov
pop
cli
jmp
add
popa
fnstsw
jmp
mov
xor
adc
data16
fcompl
sbb
stc
xchg
and
stc
inc
arpl
sub
lret
pop
arpl
shrl
xchg
fs
xor
add
out
sub
wrmsr
xor
mov
inc
dec
xchg
inc
push
out
subb
push
pop
xchg
push
popf
add
bound
testb
push
sbb
push
aaa
jb
push
daa
ret
mov
push
scas
es
in
xchg
in
js
aas
pushf
push
fwait
adc
loopne
adc
and
or
adc
jmp
ret
cld
inc
xor
cs
cmp
and
push
jle
mov
orb
cld
mov
arpl
fmul
rcrl
sub
xchg
int3
clc
shr
mov
std
popa
cld
jle
fs
testl
lds
fmuls
das
xchg
add
rorb
fsubl
lret
test
repz
aas
fimull
mov
or
pusha
ret
push
fwait
and
mov
mov
fdivrs
adc
mov
or
mov
ljmp
icebp
adc
xchg
stos
xchg
gs
or
and
int3
xchg
cmp
xlat
adc
and
sub
adc
adc
pop
mov
lahf
mov
out
into
dec
cmp
or
pushf
push
add
jmp
mov
mov
xorl
pop
loopne
mov
rorl
out
sbb
test
inc
pop
dec
jle
pop
repz
dec
fists
bound
ret
mov
shll
jns
ja
pushf
ret
pop
dec
sub
scas
ss
lods
sti
aad
add
push
scas
rcrl
mov
inc
cmc
jl
dec
ss
or
push
loop
cli
sahf
rorb
jb
inc
das
repz
dec
pop
stos
out
loopne
cli
pushf
outsb
sahf
js
es
lock
pop
jno
cltd
mov
inc
adcb
push
jb
cmc
mov
jmp
adc
je
rolb
pop
push
in
xor
xor
popf
xchg
dec
es
push
mov
std
xchg
imul
shl
push
push
lret
jmp
ret
push
jo,pn
or
insb
mov
xor
or
sub
or
lea
lret
sub
insb
repz
jo
ljmp
cmpl
mov
in
mov
shlb
push
sbb
jp
leave
dec
mov
push
mov
inc
mov
pusha
cmp
out
int
cmpsb
sarb
pop
or
cltd
mov
inc
jae
mov
inc
or
or
sub
insb
sub
cld
and
sub
sbb
mov
sti
imul
sbb
test
scas
and
in
or
sub
xchg
pop
sub
cmpsb
bnd
or
cmp
cmpsl
mov
push
xchg
daa
int3
mov
in
jp
mov
mov
imul
adc
mov
and
cmp
xor
lret
pop
test
inc
leave
fsubl
ljmp
in
stos
jae
jo
push
pop
push
cld
daa
cmp
cmp
repz
stc
lods
scas
cmp
mov
aam
adc
scas
cmc
hlt
loop
fwait
pop
mov
lret
imul
mov
xchg
clc
fisubrs
pop
and
movsl
dec
andl
push
lds
aam
and
idivb
mov
push
xorb
xor
rcrl
outsl
sub
push
repz
int
adc
aad
mov
cmp
push
mov
pop
mov
pusha
or
imul
ret
loopne
xchg
lret
ds
adc
xlat
std
lea
pop
shll
in
test
cmp
fldenv
inc
pop
movsl
das
leave
dec
push
xlat
ja
test
out
cwtl
out
lods
aaa
test
adc
dec
outsl
jmp
pop
xchg
mov
add
sbb
and
sbb
shlb
leave
cmp
mov
sub
std
jg
lods
and
cmc
mov
pop
sub
imul
iret
packsswb
push
lcall
add
pop
lret
lods
mov
adc
aad
pop
cmc
adc
xor
in
aaa
sbb
outsb
je
rclb
pop
pop
jg
ljmp
mov
std
lods
cmp
pushf
push
in
add
inc
mov
inc
adc
mov
movsb
out
pushf
mov
jge
negl
into
xor
fmuls
sbb
push
pop
orl
cmpl
cmp
in
call
jno
push
fdivrl
in
rclb
mov
sbb
pusha
popf
test
decl
inc
adc
and
lods
fsubrp
add
xchg
shlb
insb
adc
fs
jmp
lds
push
loopne
xchg
jns
xor
ljmp
jne
mov
mov
dec
sbb
and
imul
and
dec
test
sub
pop
addr16
hlt
push
inc
mov
repz
inc
mov
in
mov
stos
fmul
add
mov
lock
sbb
sub
fsub
mov
rcll
jns
jp
xor
mov
jg
lret
out
fdivs
and
ss
aam
arpl
call
jge
adc
sbb
fldenv
push
cli
and
sbb
jle
repnz
xor
mov
or
cwtl
cld
mov
cmp
mov
adc
iret
inc
sbb
addr16
inc
mov
cmp
pop
das
mov
rcl
in
adc
push
aaa
jno
lods
xor
cld
rolb
shlb
mov
loopne
out
lcall
stc
mov
cwtl
mov
xor
or
aaa
ljmp
cmpsb
jl
xor
and
xchg
shl
sbb
mov
push
out
add
cmp
fwait
pop
and
xlat
pop
call
adc
std
scas
in
add
jg
pop
cwtl
xor
sarb
imul
or
or
mov
in
xor
sub
test
fnstsw
lds
addr16
pop
das
xor
xor
test
push
sbb
stos
test
test
das
mov
push
push
movsb
hlt
lock
scas
lds
mov
lods
fisubs
ja
lods
arpl
addr16
lcall
ficoms
mov
or
cs
jg
inc
fbstp
call
dec
push
dec
and
out
shll
cmpsl
decb
jae
xor
mov
sti
not
shl
ret
mov
stos
pop
outsb
pop
cmp
xchg
pop
dec
mov
pop
iret
adc
cltd
push
fmuls
lcall
and
mov
xor
insl
sbb
out
mov
mov
iret
dec
xchg
arpl
dec
sub
add
mov
outsb
mov
lcall
dec
loop
cmp
ds
add
and
dec
outsl
add
push
push
loope
push
pop
and
pop
fldenv
lret
jle
mov
or
icebp
ds
aaa
push
cltd
outsb
dec
or
scas
dec
lret
cli
fldt
mov
or
xchg
sub
hlt
adc
pop
xchg
jne
mov
ja
push
es
jge
push
cmpsb
mov
das
adc
mov
out
lret
arpl
push
inc
xor
sub
imul
mov
cmc
mov
into
and
mov
cmp
jmp
loop
in
xchg
fists
jne
test
pop
mov
addr16
fadds
and
cmp
cmp
mov
das
mov
jle
stos
fidivrl
push
lahf
add
js
mov
into
lret
dec
sub
out
repz
push
leave
insl
push
dec
aam
aaa
popa
push
cmpsl
add
add
aam
xchg
imul
or
dec
xchg
mov
xorb
inc
jns
adc
pop
lret
fisttpll
pushf
mov
fmulp
js
leave
sbb
and
or
adc
fstl
xor
mov
mov
jb
and
mov
repnz
push
adc
mov
or
and
sbb
into
ret
or
stos
dec
out
mov
jns
jns
std
rcll
pop
mov
test
xorb
loope
jb
adc
push
jb
lcall
sbb
jnp
add
sbbb
sub
dec
in
mov
out
pop
push
xchg
xchg
pop
out
daa
push
mov
jp
push
push
stos
mov
mov
sub
cmp
ljmp
push
daa
movsb
add
mov
and
dec
frstor
movsb
mov
test
sub
imul
sbb
xchg
lea
add
insl
mov
les
int
xchg
adc
xchg
mov
shll
clc
push
outsb
xorl
mov
shrl
pop
pop
xor
mov
mov
push
pop
mov
cmc
lret
cmc
push
mov
mov
adc
lods
roll
pop
mov
imul
outsb
mov
dec
pop
sbb
out
iret
push
mov
dec
and
rep
ja
outsb
inc
outsl
clc
es
xchg
popa
mov
mov
adc
mov
sub
inc
push
shlb
aas
clc
pop
or
push
and
scas
mov
xchg
xor
push
or
ret
lods
notb
mov
int3
mov
pop
shll
jg
pop
dec
aam
gs
and
scas
in
dec
lock
int3
and
int
jnp
mov
sub
dec
mov
mov
or
mov
cmp
das
rolb
and
std
push
cmp
push
test
pop
push
aad
std
pop
cmp
scas
insb
jmp
jbe
dec
lds
mov
push
loopne
inc
insb
test
lret
fdivr
dec
popa
jl
xor
jnp
stos
cmp
fsubrs
outsb
xchg
mov
adc
push
lcall
xchg
and
scas
dec
and
pop
and
jmp
xor
and
data16
adc
lcall
nop
xorl
test
lahf
mov
xorl
pop
loopne
xor
jp
not
jl
sub
or
xchg
and
mov
rcl
xchg
ret
test
sarl
mov
adc
sub
outsl
test
sub
sahf
mov
jmp
jne
mov
jno
sbb
clc
jmp
jnp
dec
mov
js
sbb
cmovo
mov
nop
xchg
or
adc
stc
dec
je
repz
push
cld
jl
pop
xor
mov
in
daa
movsl
xor
sub
cmp
idivl
test
sar
xchg
push
lea
js
sub
mov
out
inc
scas
stos
add
rclb
pop
xor
dec
lcall
sbb
mov
aam
mov
arpl
xchg
push
dec
xchg
lods
out
pop
neg
cli
lret
ljmp
in
jne
aas
std
ljmp
orb
xchg
push
mov
movsb
sbb
sub
mov
adc
popa
mov
dec
in
or
lahf
int
popf
mov
lods
pmuludq
popl
test
xorl
mov
fsubs
add
jle
mov
mov
xor
dec
cmp
out
leave
testb
mov
inc
pop
push
into
jmp
sub
jne
mov
mov
cwtl
frstor
xor
add
mov
mov
dec
cmp
pop
xchg
out
leave
icebp
xchg
push
xchg
mov
hlt
aam
jne
outsb
adc
mov
pop
out
inc
pop
fstl
imul
xlat
pop
adc
mov
icebp
jmp
jno
fidivrs
cwtl
movl
scas
cmp
push
inc
adc
mov
adc
jbe
xor
xchg
push
je
xchg
xor
mov
adc
movb
cmp
sbb
mov
inc
scas
pop
dec
mov
adc
jbe
repz
out
inc
sub
or
pop
xchg
subl
rorl
rorb
leave
mov
push
aam
adc
in
and
test
stc
cltd
idivl
cld
jb
xchg
sub
mov
jbe
xor
nop
out
outsb
shrl
inc
fucom
fucom
cli
and
jg
jmp
jecxz
js
lds
shl
xchg
sbbl
mov
sbb
sbb
mov
jne
add
lods
mov
in
add
pop
cmp
enter
add
jmp
jne
ret
push
add
dec
fadd
scas
push
in
test
cmp
cmp
dec
mov
inc
pop
pop
xchg
in
ljmp
or
or
adc
out
push
mov
mov
loope
pop
mov
and
mov
test
adc
and
mov
fcmovnb
pcmpeqd
imul
test
mov
sarl
sub
mov
jno
inc
imul
lcall
push
inc
mov
and
cwtl
or
repz
cli
movsb
inc
in
fisubrs
xchg
mov
mov
push
adc
jge
sbb
pop
jg
jnp
std
lahf
das
arpl
fst
inc
cmpsl
in
dec
push
stc
lcall
in
sub
push
out
mov
push
adc
pop
cld
xor
repz
xlat
fwait
mov
rcll
pop
insl
cmp
cmp
icebp
dec
lcall
xor
or
les
ficoml
cwtl
outsb
xchg
sub
rol
mov
lret
sub
jl
dec
add
aam
add
dec
nop
rorl
addr16
test
mov
jno
fdivr
push
mov
sbb
or
mov
cs
pop
and
sbb
mov
cmp
add
lret
mov
push
pushf
and
std
addr16
lods
mov
jmp
and
fs
in
jecxz
jo
int3
movsb
test
pop
sbb
push
pop
jg
sub
inc
xlat
aad
arpl
notb
mov
jbe
jnp
fwait
mov
jl
mov
popa
ret
push
push
shlb
mov
or
pop
fidivrl
imull
jecxz
test
sub
sahf
mov
sbb
lret
push
push
sub
int
jecxz
shrb
insl
out
mov
mov
mov
insb
jo
cmp
sub
inc
repz
stos
push
lock
in
mov
dec
aam
int
aam
pop
dec
insl
push
pop
fucomi
cs
rorl
mov
sbb
rcr
iret
ret
or
inc
sarl
repnz
shrb
movsl
arpl
inc
pop
js
jg
iret
lds
and
aad
out
xchg
sarb
pop
daa
test
dec
or
pop
arpl
push
xor
aas
mov
jl
aas
push
jp
jne
sarb
sub
int
pushf
lcall
insb
outsb
pusha
jl
dec
and
imul
fucom
push
pop
out
pop
pop
adc
daa
jecxz
cmpsb
fsubs
jmp
mov
mov
push
inc
lods
jmp
or
mov
jbe
das
push
add
fidivrl
push
loopne
inc
pop
lahf
pop
scas
shlb
adc
or
cmpsl
fisttps
mov
scas
mov
mov
sub
pop
bnd
or
ret
rcl
lock
and
jne
inc
sti
cmc
sbb
dec
leave
popf
int
shll
dec
shl
dec
push
shll
dec
xchg
fcomps
mov
cmp
or
lods
int
lock
repnz
pop
or
mov
push
mov
pusha
cmpb
pushf
xorb
pop
insl
mov
mov
jo
mov
xchg
xor
shr
pop
xchg
xchg
aam
ja
out
fiadds
dec
stos
jmp
cmp
test
or
out
mov
ret
pushw
es
cvtps2pi
inc
pop
nop
add
push
xor
add
shrl
addr16
icebp
or
add
jg
jmp
sbb
hlt
dec
das
cmc
imul
inc
push
mov
pop
adc
rcrl
int3
jb
jne
mov
sti
ja
sub
in
sbb
pop
add
mov
popl
xor
xor
stos
mov
mov
iret
loop
dec
lret
mov
les
jae
mov
jp
mov
inc
out
fimuls
or
xchg
adc
stos
mov
pushl
cltd
dec
rclb
dec
mov
test
mov
xchg
xchg
inc
adc
rorb
adc
hlt
pop
insb
mov
push
add
cmpsl
jno
clc
loopne
lret
fnstsw
push
jecxz
divb
cmc
loope
imul
inc
cltd
imulb
push
pop
lcall
js
mov
test
push
andl
out
jnp
cmp
test
cmp
cmpb
out
sbb
test
icebp
or
xchg
sahf
push
fmuls
cwtl
jg
add
or
push
cwtl
dec
decl
push
in
sbb
xor
repz
lods
lret
xor
shlb
mov
ljmp
sbb
push
cli
loop
data16
test
pushf
lock
adc
mov
fistl
lds
in
subl
sub
jp
pop
enter
pusha
jns
in
lods
adc
das
or
add
pop
fdivrs
mov
push
pop
push
call
xchg
ds
adc
inc
sub
sbbb
dec
inc
cli
sbb
rcll
lret
jne
or
cmpsl
jecxz
inc
or
test
rcrb
jmp
ficomps
out
inc
or
test
aas
sub
sbb
cmp
inc
aas
fstps
and
inc
imul
out
rolb
rcrl
icebp
xchg
jecxz
sarl
loopne
lcall
inc
xchg
cmpsl
push
or
mov
cmp
xchg
arpl
jne
xor
lock
repnz
pop
clc
iret
cmp
call
stos
out
ja
xchg
scas
fdivs
lods
int3
sete
lcall
aad
int3
std
es
and
push
subb
aam
and
call
jae
xchg
rorb
call
fistps
rolb
outsl
mov
cmpsb
pop
out
mov
in
and
mov
mov
and
jb
sub
mov
inc
cmpsl
clc
imul
fwait
rcrl
outsb
subb
inc
xchg
shll
fs
fnstsw
movsb
pop
inc
jo
push
mov
dec
mov
fisubrl
adc
icebp
pop
in
fildll
std
mov
fprem
sub
gs
sahf
movsl
mov
in
or
bound
push
lds
lods
xor
xlat
dec
inc
dec
sbbb
pusha
push
mov
dec
sahf
pop
adc
adc
in
in
fistpl
lods
mov
inc
lods
pop
mov
or
test
dec
sarb
ja
and
hlt
div
sub
and
cld
mov
in
and
andl
mov
enter
push
out
and
fistpl
or
leave
loopne
out
lret
fdivrl
data16
dec
clc
jae
xor
repnz
add
mov
adc
add
pop
inc
jle
jns
lret
shlb
nop
aas
loopne
lock
xor
jmp
xor
pusha
xchg
rcrl
fstpl
sbb
adc
xchg
cs
jmp
mov
stc
push
jb
sub
and
lock
hlt
xchg
clc
adc
mov
mov
aas
and
mull
mov
sbb
push
into
add
mov
pop
sub
pop
fs
cmp
int
push
popf
mov
adc
jne
aas
mov
data16
dec
rcr
mov
add
pop
mov
mov
cmp
jge
pop
push
loopne
hlt
pusha
test
movsl
sbb
addr16
and
stos
nop
and
outsb
sub
in
lock
rcrb
dec
mov
fldl
inc
dec
aaa
inc
fmul
mov
push
arpl
cmp
es
daa
lret
pop
cltd
adc
pusha
das
movsl
leave
sahf
and
subl
pop
pop
inc
push
cltd
push
fdivrs
stos
test
addl
jg
adc
ja
mov
mov
jo
fldl
lcall
in
jmp
outsb
clc
jle
sbb
and
fidivs
and
fwait
push
xor
mov
jnp
and
sbb
in
sub
cmp
insb
rolb
push
inc
pop
rcr
fmuls
call
sbb
push
pusha
sub
inc
roll
jg
fwait
rolb
push
mov
aam
fldcw
add
jge
mov
and
call
and
xor
inc
repz
in
mov
rorb
mov
cmpsb
pop
add
jbe
jno
and
cmp
movsb
mov
dec
add
fsubrl
mov
scas
cmp
mov
pushf
rcr
xorb
les
add
mov
pop
sub
push
cld
lret
shl
mov
push
mov
cmc
cmpsl
jbe
ljmp
es
push
xchg
adc
mov
mov
push
pop
shrl
xor
ficomps
lds
insl
add
mov
dec
inc
aas
lea
push
or
negl
adc
sbb
or
jae
add
lds
subb
sub
rorb
dec
xchg
inc
dec
dec
cli
pop
pop
enter
aad
xor
cld
push
pusha
dec
fsubp
and
adc
cld
cli
add
sahf
and
fmuls
mov
rol
sbb
clc
mov
loope
pop
push
xchg
add
movsl
repnz
bound
push
lcall
mov
stos
mov
jmp
movsl
cmc
cld
push
mov
pop
insl
sbb
jle
aad
ficomps
or
into
mov
outsb
pusha
or
cmpsb
sbbb
data16
mov
stos
xorl
mov
es
call
jae
aaa
dec
les
push
mov
sub
inc
fcomip
fmul
loope
jge
arpl
mov
xor
push
les
push
ret
add
cs
cmpsb
arpl
inc
or
and
inc
mov
icebp
fiaddl
insb
mov
add
inc
idivl
jno
test
imull
cmp
cmp
lods
pop
push
scas
mov
nop
push
jae
sub
orb
roll
or
daa
sub
sbb
adc
jecxz
out
iret
adc
iret
lret
scas
mov
out
jbe
jbe
push
fistpl
daa
data16
pop
dec
roll
lds
addr16
mov
add
shlb
sub
pushf
mov
cmp
negb
imul
std
add
repnz
enter
mov
dec
jge
dec
mov
shlb
or
mov
xor
mov
xor
psrad
adc
pushf
and
inc
int
push
pop
lret
inc
jae
jnp
pop
pop
rol
fimull
xor
fwait
jle
loopne
xor
aas
push
enter
jnp
inc
lock
and
leave
in
pop
jne
mov
outsl
lods
sub
test
arpl
test
inc
xchg
sub
cmp
pop
inc
add
add
or
enter
and
icebp
mov
les
je
dec
jae
push
lea
dec
pop
pop
ret
loop
push
out
xchg
and
sub
les
adc
mov
push
jmp
lock
imul
pop
inc
frstor
and
leave
fcoml
adc
into
cld
mov
mov
in
xor
inc
scas
std
jne
pop
xchg
in
loop
mov
je
sbb
pop
cld
cmp
rclb
sub
push
and
jp
inc
adc
jp
jl
pop
rcrl
push
dec
adc
out
push
push
jp
add
int3
lods
sahf
xor
test
cmp
mov
push
mov
jo
aas
inc
icebp
xor
push
xor
pop
inc
pop
pop
or
and
stc
mov
mov
addb
aas
aaa
subl
fstpl
shrb
and
dec
pop
scas
ss
jbe
call
xlat
mov
into
xchg
adc
in
daa
in
mulb
mull
cs
ficoml
pop
ss
sti
xchg
ds
fisttpll
jmp
fstpl
pop
mov
das
repnz
pop
push
lds
sub
xchg
in
sti
cmp
cltd
sbb
rclb
xor
daa
jb
int3
call
addl
adc
in
xor
fldcw
add
cs
sarb
sbb
adc
das
dec
iret
out
jmp
xchg
rcrl
xchg
pop
jae
dec
enter
mov
or
cmc
add
adc
pop
es
xlat
inc
enter
je
fxam
cmc
xchg
and
mov
call
loop
push
push
mov
out
cmp
inc
jns
cmpsb
pop
or
test
adc
psubusb
pop
shl
movd
jg
ret
repz
and
int
leave
sbb
cmp
jb
mov
shrl
test
dec
jle
or
push
xchg
out
xchg
xor
sbb
or
fisttpll
jns
clc
sahf
xor
mov
ljmp
sbb
push
mov
es
xchg
mov
add
notw
call
pop
popf
xor
sub
lea
scas
repz
xchg
sbb
adc
out
pop
mov
icebp
mov
xchg
int3
or
xor
aad
jge
loopne
dec
fsubs
ret
mov
leave
lahf
xchg
fmul
mov
add
cmp
push
lds
push
sti
xchg
add
xlat
push
sahf
jg
xchg
dec
and
lods
mov
sub
sub
fdivl
mov
enter
mov
out
lcall
incl
lods
icebp
mov
mov
jb
cltd
fildl
pop
jge
in
add
adc
xlat
lock
mov
sbb
jo
mov
mov
push
push
adc
out
xor
sbbb
dec
push
aaa
lods
daa
inc
mov
adcb
xchg
aaa
cmp
sbb
sub
push
and
xchg
push
dec
lds
jns
out
jo
pop
int3
mov
das
ret
cmp
add
add
jo
daa
imul
pop
sbb
jp
sub
xchg
mov
rorb
gs
dec
sbb
jno
js
test
and
push
cmp
outsb
inc
xor
dec
mov
inc
insb
mov
ds
push
jge
xchg
and
pushf
ret
sub
mov
ficoml
adc
aad
or
addl
shl
adc
pushf
scas
sarb
inc
cmp
add
inc
pop
in
add
daa
dec
xor
sbb
in
add
test
xchg
shlb
into
scas
int
ret
pushf
movsb
lea
or
push
mov
aas
outsl
hlt
data16
mov
and
or
push
stos
jae
int
pop
in
mov
das
xchg
cmpsb
inc
insl
in
sbb
push
jnp
shl
fistpll
sbb
bound
testb
add
xchg
outsb
mov
mov
pop
cmpsl
xchg
insb
xor
adc
adc
mov
push
add
cltd
ds
sarb
neg
je
fildl
xlat
cli
xchg
xchg
fldl
sbb
incl
push
xor
cmp
fisttps
inc
mulps
les
inc
popf
sbb
or
push
sub
js
notb
lret
mov
jae
addr16
test
add
scas
push
sbb
cmc
mov
xchg
out
faddl
rorl
or
outsb
nop
mov
push
inc
jbe
jg
jnp
orb
dec
pop
hlt
pop
out
add
aad
push
sbb
movsb
or
cld
cmp
and
and
sbb
jne
mov
fisttps
das
fcoml
mov
ss
fisubs
insb
filds
clc
adc
insb
pushf
mov
sbb
je
shr
cmp
int3
or
rcl
cmp
mov
pop
sub
xchg
or
sub
xchg
cld
xchg
mov
aas
out
sbb
call
jbe
aaa
je
add
xor
imul
notl
pop
sbb
sbb
jnp
in
ficoml
mov
scas
add
mov
sbb
mov
push
xlat
aam
dec
nop
and
mov
sbb
mov
adc
stc
aaa
movsl
imul
in
cwtl
push
adc
cmp
ja
xor
jne
cmp
adcb
sahf
std
addr16
loop
sbb
add
jbe
jle
pop
or
sub
or
push
pop
add
data16
mov
fs
divb
pop
dec
mov
mov
nop
loope
and
fdivrs
scas
jmp
mov
dec
lret
or
or
adcl
ljmp
cmpsb
fsubs
and
lea
inc
push
add
xchg
add
pushf
push
cwtl
xchg
xchg
insb
std
call
insl
jmp
and
mov
aam
cld
imul
scas
sbb
inc
repnz
or
sbb
jecxz
mov
jb
add
lret
push
cltd
fidivrs
pop
pop
jl
jns
xor
ja
cmp
stc
fsubp
fdivl
shrl
jl
push
lret
xchg
inc
rclb
std
inc
ljmp
je
mov
inc
xchg
jl
scas
pop
ret
lock
sbb
adcl
mov
xchg
or
arpl
jae
daa
in
scas
leave
push
mov
fldenv
sahf
or
shrb
xor
jmp
mov
test
stos
je
cmc
sub
or
stos
das
fwait
push
pop
call
add
pushf
dec
adc
xor
scas
jl
fs
push
sahf
ss
stos
pop
jmp
divl
in
mov
notl
daa
loop
lret
in
xor
jns
ret
jns
icebp
pop
fsubrs
xor
inc
test
cwtl
cmp
adc
jne
sbb
loope
push
lret
andl
mov
pop
int
dec
jae
sub
xchg
popa
fdivr
cld
leave
ds
call
push
mov
or
movsb
push
hlt
push
pop
mov
and
lret
lahf
das
pop
cmp
jecxz
shl
xor
frstor
mov
gs
cwtl
pop
shll
pop
push
sbb
push
push
in
fldl
add
aam
and
aas
mov
jne
vpsrlq
jl
mov
repnz
enter
mov
mov
xlat
je
jmp
adc
gs
js
ds
repnz
cmpb
mov
mov
mov
mov
adc
popf
in
pop
stos
out
sub
lret
mov
lea
sbb
xchg
and
mov
hlt
sbb
pop
cs
pop
jp
mov
add
inc
add
adc
bound
push
cmp
dec
out
in
xor
shll
xchg
pop
sbb
mov
or
or
jl
out
sub
shll
and
fldl
daa
fdivl
lock
call
pop
inc
mov
lcall
inc
out
int3
out
je
push
jo
test
pusha
xor
inc
out
xor
pop
jge
cmp
adc
cmp
movups
daa
out
fs
fwait
lods
pushf
mov
loop
dec
sbb
std
pop
pop
mov
hlt
cmp
aam
call
add
lahf
mov
lret
sub
out
mov
ret
jecxz
and
je
repz
cwtl
xor
adc
addb
dec
jbe
push
repz
mov
cld
mov
push
movsb
push
pop
mov
xor
and
mov
mov
cmp
and
and
sub
xchg
icebp
int
mov
mov
xchg
frstor
call
mov
pop
popf
cmpsb
mov
add
xor
ljmp
sti
mov
sbb
mov
gs
adc
jp
sub
mov
movsb
pushf
into
xor
push
daa
test
fptan
adc
bound
in
add
inc
and
push
pushf
mov
dec
into
push
loop
shlb
les
adc
jp
mov
testl
push
call
cmp
mov
inc
jbe
jae
ret
cmp
je
xchg
scas
push
jo
ljmp
mov
les
cmp
lcall
fisubs
mov
dec
lret
add
jnp
or
scas
loop
jnp
mov
lods
fs
gs
and
pop
insl
adc
cmovae
or
dec
sub
lods
jp
pop
mov
xor
mov
jae
ja
jnp
pop
negb
in
loopne
inc
xchg
rcll
rcrb
sbb
in
mov
cli
int3
pop
in
lock
les
imul
andb
pop
divl
cmp
sub
and
cmp
xchg
xor
fs
xchg
sub
insl
cmp
in
movsl
arpl
popf
testb
cs
adc
enter
jp
xchg
jl
pop
xor
or
loope
jg
jns
sub
mov
dec
enter
hlt
cmp
addb
sbb
jo
xchg
fstps
jl
sbb
popa
mov
xchg
cmpsl
rcl
jmp
or
pop
sub
mov
pusha
ret
jne
lds
cmp
pop
shl
in
cmpsb
in
scas
dec
sbbl
dec
int
data16
clc
push
rolb
xchg
test
sahf
fs
inc
xchg
jb
adc
sbb
subl
nop
lock
sub
arpl
jno
fadd
int3
popf
iret
jp
es
or
fistl
push
jbe
add
std
fisttps
mov
fimuls
in
xchg
cmp
filds
mov
jmp
addr16
test
cmp
repz
jns
lds
xlat
add
lds
xor
xchg
dec
stc
and
int
lahf
enter
andb
leave
icebp
mov
pop
add
pop
call
xor
add
call
and
daa
mov
or
iret
pop
jl
mov
arpl
lret
dec
loope
push
arpl
js
dec
outsl
in
mov
or
add
mov
push
mov
mov
adc
xor
call
xchg
dec
cwtl
xor
sbb
cmp
ja
es
cmpsb
mov
test
stos
or
and
dec
hlt
inc
xchg
in
push
inc
sub
rolb
cmp
or
jg
fiadds
in
ss
imul
jmp
sub
dec
icebp
push
pmulhuw
dec
fcom
inc
lret
call
subb
inc
aas
movsl
mov
lea
and
hlt
or
cltd
jne
dec
pop
js
mov
loope
cmp
sbb
adc
subb
lcall
bound
test
mov
jno
jno
std
inc
push
iret
cmp
push
mov
addr16
xchg
push
arpl
jne
loope
stos
jmp
xchg
adc
in
ja
aad
mov
dec
mov
les
xchg
push
je
les
std
leave
add
out
les
push
sub
ret
add
pinsrw
add
lods
js
push
pop
add
pop
sub
mov
insb
imul
jge
pushf
xor
lea
lahf
inc
add
mov
and
mov
jge
arpl
and
out
aas
adc
mov
sbb
lods
pop
mov
stc
xchg
insl
repnz
clc
gs
loopne
in
add
inc
ljmp
loopne
arpl
mov
xchg
pop
orb
shrl
inc
stc
aaa
fldz
add
sub
idivl
pop
or
outsl
mov
sbb
jmp
subb
ljmp
and
or
inc
mov
fistl
ficoml
into
enter
cmpsl
jmp
inc
cmp
push
fidivl
int
inc
out
out
das
xchg
outsl
in
ret
js
insb
mov
call
ja
les
jns
cmp
aad
xchg
loopne
push
jmp
je
pushf
popa
lcall
xchg
adc
jp
sahf
jns
fsub
lret
dec
lods
es
es
int3
movl
pusha
add
xor
sub
mov
orl
mov
mov
andl
dec
gs
jns
add
cltd
sbbl
push
lahf
or
dec
es
push
mov
xchg
lcall
mov
cmpsb
mov
mov
and
test
lea
mov
aaa
adc
rcrl
jmp
sub
add
dec
je
push
out
pop
xchg
or
sub
lret
pop
push
push
mov
dec
adc
fldl
xor
pop
stos
pop
push
stos
outsb
cmpsb
push
cmp
pusha
fistpl
andb
cmpsb
jge
pop
push
mov
bound
sahf
mov
dec
cmp
mov
jl
lcall
test
cmpsb
sbb
fistps
leave
jp
cmp
jns
jne
mov
mov
pop
fcoml
negl
rcrb
jge
push
sub
int
xlat
dec
mov
mov
jge
cltd
push
stos
ds
test
add
mov
or
ljmp
xchg
dec
ja
jns
cld
scas
mov
jecxz
out
popa
hlt
in
and
stos
aas
std
into
scas
test
mov
imul
rcrl
pop
sbb
sub
xor
sahf
or
sub
pop
inc
repnz
mov
cmp
les
lds
js
push
popa
push
add
mov
ljmp
adc
push
xchg
jne
jb
jns
insb
jno
push
loop
pop
out
xor
out
cmpsb
xchg
cli
repnz
cmc
fidivs
xlat
test
add
test
push
out
cmpsl
sti
out
xlat
addr16
or
sbb
in
add
int
xchg
jl
shr
lds
and
lret
mov
xlat
notb
xlat
test
lret
push
popf
mov
sub
or
xchg
std
sbb
inc
rcll
pop
fcoms
lret
jo
in
mov
shrl
push
add
out
inc
leave
ds
es
cmp
sub
cmpsb
outsl
xchg
mov
xchg
clc
stc
xchg
or
add
mov
or
popf
pop
lock
jecxz,pt
mov
cmp
ss
dec
jo
das
les
rcrl
das
shrl
pop
std
and
and
dec
scas
testb
inc
mov
pop
leave
inc
sbb
and
lods
jbe
fs
push
divl
mov
pop
mov
in
outsl
fldenv
sub
pop
je
and
cmp
adc
cmp
sbb
shr
xchg
jl
xchg
icebp
aaa
shr
je
outsb
je
or
sub
int
popf
xor
dec
xor
add
xor
xor
notb
or
std
xor
stos
mov
push
inc
sbb
pop
push
decb
push
insb
js
jb
std
jg
andl
add
hlt
mov
xchg
inc
adc
push
add
notb
test
xchg
xor
out
ljmp
les
ret
scas
inc
hlt
mov
push
adc
lcall
cs
movsb
ljmp
xchg
lcall
jne
mov
adc
movsl
or
clc
mov
sbb
adc
lock
fidivs
push
rcll
pop
popa
jnp
js
or
push
loope
sub
sbb
adc
add
ja
adcl
jne
or
outsb
adc
push
in
popf
push
stos
sbb
sbb
mov
add
inc
mov
out
and
xor
jbe
add
lahf
and
subb
mov
sbb
jecxz
gs
pop
jnp
popf
pop
or
or
mov
xchg
lcall
jb
pop
mov
jl
jns
pop
int3
int3
call
hlt
testl
push
mov
dec
mov
xchg
add
aaa
lret
inc
mul
add
mov
inc
scas
icebp
xor
loop
adc
addb
pop
xor
sbb
add
mov
mov
ret
jmp
jg
shrl
cmpsl
sbbb
fcmovu
data16
stos
adc
pop
rclb
add
dec
adc
test
dec
adc
repz
negb
out
outsl
fldt
call
mov
xchg
xor
mov
mov
jae
sbb
inc
inc
mov
push
cmp
pop
int3
test
mov
aas
inc
adc
std
ret
adc
push
mov
sub
sarb
enter
pushf
sub
mov
inc
pop
push
push
es
out
decb
push
lcall
jl
outsl
and
inc
xor
push
dec
sti
or
push
cltd
shl
pop
daa
mov
push
lods
jl
cmp
shll
imul
fisttpll
cs
jae
cmp
push
movsl
popa
ds
lret
pop
push
mov
clc
push
fdivrs
inc
scas
pushf
push
mov
fnstenv
mov
in
push
sbb
xor
cmp
sbb
push
push
rcrb
mov
subb
lods
jge
std
jle
out
scas
subl
cli
sbb
mov
inc
test
xchg
or
in
or
mov
leave
das
sub
xlat
xchg
xor
jp
add
jecxz
xchg
fucomip
xchg
jno
fwait
std
cld
dec
push
or
pop
out
pop
mov
enter
cld
xor
add
jb
mov
imull
xchg
stc
push
dec
push
sbb
cmp
jns
inc
outsb
std
pmullw
fldcw
in
mov
mov
je
push
aas
dec
enter
xlat
xor
mov
fwait
mov
xchg
lahf
inc
pop
imul
and
pop
movsb
mov
mov
mov
rolb
or
xchg
sbb
jmp
movsb
rol
in
xor
int3
call
cld
fwait
lret
cltd
into
inc
popf
pop
pop
jl
outsb
cltd
shll
popf
add
arpl
xchg
std
xor
sub
std
mov
push
xchg
stos
dec
mov
cs
dec
stc
inc
mov
cmp
popa
mov
cmp
xchg
push
sbb
sbb
mov
popf
cmp
adc
dec
jle,pn
push
cmp
call
mov
push
push
mov
cmp
sub
repz
lahf
jg
jb
in
shl
rcll
fsubrs
jl
test
addr16
xor
jo
cs
rorb
dec
outsb
rcl
dec
shrb
push
scas
mov
lods
in
cs
push
icebp
jbe
pop
push
xchg
and
xor
fwait
xor
or
mov
aad
repnz
cmp
into
mov
xchg
push
ljmp
out
imul
mov
cmpb
pop
ret
xchg
cmp
insb
sub
pushf
sub
rol
repnz
ficomps
jae
fstpl
jb
xchg
push
jnp
loopne
arpl
xchg
sbb
cs
jne
dec
sub
lds
imul
scas
adc
jg
mov
inc
in
or
add
push
add
notb
fbld
rorl
xchg
mov
outsb
push
inc
push
mov
pop
adc
lods
aaa
loop
mov
sub
adc
inc
repnz
sbb
call
rol
pusha
jmp
add
sarb
mov
dec
sbbl
nop
std
push
data16
or
ss
mov
pop
xor
loop
push
xlat
in
movsb
std
dec
mov
mov
leave
int
testl
jns
pop
jl
add
aas
cmp
cs
outsb
and
lcall
les
or
hlt
pusha
push
shrb
ret
mov
sub
ret
pop
lcall
add
pop
loope
fdivrl
loop
lock
or
mov
fisubrs
cwtl
jns
mov
dec
push
outsl
sub
jae
dec
dec
mov
sbb
imul
mov
enterw
stc
cmp
mov
dec
adc
or
xchg
cli
call
mov
push
sbbl
jns
std
mov
test
mov
shl
xor
add
adc
dec
pop
mov
lods
xchg
jo
mov
jl
and
scas
test
add
andl
xchg
jno
adc
push
add
adc
fdecstp
inc
inc
mov
sub
inc
xor
lods
xchg
aas
call
inc
insb
fdivrs
jns
or
ret
in
dec
pop
pop
sahf
mov
lret
repz
sahf
jne
add
lds
xchg
pop
adc
cmpsl
dec
cld
test
es
jp
cli
xor
insl
ficoms
cmp
in
adc
adc
cmp
rcll
mov
icebp
dec
mov
mov
jns
mov
mov
jb
xorl
fcoms
popa
sub
sahf
frstor
mov
jne
test
or
movsb
mov
adc
ljmp
xor
jno
icebp
fcoml
jecxz
mov
mov
into
shll
fdivr
sbb
addr16
push
and
popf
mov
or
aaa
push
scas
jbe
int
add
jge
jmp
xchg
sbb
ret
cli
xorb
adc
push
xchg
insl
or
dec
les
lock
rcrl
pop
add
add
aam
fwait
mov
popa
adc
into
push
adc
fdiv
addr16
repnz
in
std
push
xlat
hlt
or
repnz
xchg
lods
adc
test
push
hlt
subl
aam
mov
stc
cmp
dec
push
inc
repnz
aad
xchg
push
mov
sub
mov
pop
sub
mov
notb
sbb
xor
or
mov
cmp
push
jl
aad
scas
mov
push
or
dec
aam
dec
mov
clc
inc
test
insl
push
xor
mov
in
fisttpl
sbb
and
mov
and
test
jecxz
cmp
sub
pop
out
int3
bound
das
inc
pop
adc
push
dec
iret
push
mov
stos
lock
inc
xor
pop
mov
clc
cmp
cmp
in
pop
xchg
pop
mov
fmulp
cwtl
xor
jl
jp
and
int
jmp
mov
lret
insb
mov
push
jne
jne
xor
dec
or
outsb
in
pop
jmp
div
sbbl
mov
sub
test
pop
dec
dec
sbb
sub
inc
test
lods
lahf
and
inc
sti
sub
das
test
push
jp
jge
stc
adc
sub
mov
cmpsl
cmc
push
popf
ret
jg
cmpsb
jmp
or
xchg
cmp
ds
fwait
jns
aad
inc
push
hlt
mov
movsl
insb
jnp
mov
jg
je
cltd
movsl
cli
fsubs
in
stos
aam
neg
xchg
cwtl
mov
adc
fisttpl
xor
popf
mov
mov
sub
mov
pusha
or
fnstsw
jle
out
sti
push
lcall
out
and
int
rclb
mov
pop
out
out
arpl
stc
loopne
dec
int
movsb
repnz
ffree
mov
inc
jae
pop
je
and
jne
cmpsb
mov
aad
scas
orl
std
dec
sbb
rcll
push
pop
stos
cmpsb
lret
iret
popf
ret
lods
test
add
xlat
out
xlat
ficompl
daa
or
sub
lahf
lea
jmp
mov
sbb
mov
rolb
daa
sbb
stc
leave
call
jg
aas
adc
jp
bound
gs
and
shrl
jae
xchg
pop
xor
das
push
mov
mov
stc
testl
shr
adcl
loopne
test
aad
mov
inc
push
inc
dec
rclb
fdivs
test
fst
into
leave
daa
and
push
ret
mov
mov
imul
test
mov
mov
mov
sbb
popa
mov
call
sub
mov
out
adc
push
leave
push
mov
stos
push
orl
jo
int
mov
sub
rorb
ja
mov
lea
cmc
cli
incb
aaa
mov
ret
push
add
inc
ljmp
sub
ds
pushf
shl
xchg
sub
push
call
cmp
ja
pop
push
push
leave
jae
xor
shlb
xchg
mov
adc
les
mov
dec
in
sbb
repnz
js
jns
push
mov
pusha
and
push
jbe
scas
xchg
daa
movsb
mov
add
hlt
pop
out
shlb
test
icebp
stos
divb
iret
inc
add
dec
lret
out
jg
movsb
pop
mov
xchg
push
popf
jmp
sub
mov
out
out
xchg
aam
inc
add
mov
std
lcall
xor
pop
stos
mov
or
xor
sub
in
popa
or
ljmp
fdivs
rcrb
sub
and
xor
xlat
dec
adc
mov
xchg
stos
sub
test
lret
mov
les
mov
mov
cmp
sbbl
loope
fcmovb
divb
shll
push
mov
sub
jecxz
imul
stos
jnp
test
xor
lea
stos
adc
fs
push
mov
inc
pusha
test
mov
pop
clc
mov
insb
fldcw
movsb
out
popa
jl
push
in
stc
repnz
bound
cmp
cli
cmpsl
ds
mov
sub
fwait
mov
ja
sti
fcom
push
mov
dec
adc
insl
aaa
scas
or
xchg
out
adc
enter
pop
shl
pop
inc
mov
sbb
jge,pt
mov
ffreep
loop
dec
jbe
mov
imul
lret
add
pop
hlt
lret
xor
push
js
dec
pop
sub
jne
movsb
lahf
fwait
xchg
dec
nop
cmp
sbb
pop
loopne
fisubl
pop
cld
mov
imul
sti
scas
add
add
pop
fsts
das
push
mov
cli
xor
cmp
cli
jmp
pop
enter
into
fsubrl
add
je
lret
pop
aaa
and
adc
jmp
sbb
das
push
es
stos
and
or
insb
jl
out
jno
push
inc
inc
mov
mov
mov
xor
sbb
sbb
pop
inc
xorl
jbe
shl
ficoml
cmpsb
adc
xor
jl
inc
enter
fbld
ret
pop
aad
jl
testl
cbtw
dec
lret
adc
push
push
pop
stos
jo
cltd
or
push
cmp
dec
jbe
pop
fwait
dec
dec
jle
mov
adcb
or
and
out
mov
popa
hlt
push
sub
xorl
adc
mov
and
mov
mov
out
mov
test
cmp
mov
or
jl
test
push
push
dec
mov
xor
in
cmpsl
xor
mov
and
daa
ljmp
enter
lret
fiaddl
or
rcll
rcr
pop
aas
jge
negb
add
push
or
and
and
mov
mov
adcl
xor
dec
mov
scas
in
int
sarl
cltd
jns
add
mov
scas
xchg
jo
lock
orb
jno
setg
pop
mov
adc
adcl
lock
add
xlat
add
scas
and
xchg
and
stos
loop
sarb
jecxz
loop
in
cli
leave
xchg
add
icebp
aaa
xor
sub
sub
pop
int
push
and
mov
mov
movsl
sbb
aas
shlb
xchg
pop
insb
fsubl
jb
mov
outsl
and
mov
or
test
or
insb
mov
pop
mov
pop
mov
enter
in
xchg
dec
lahf
iret
fnstcw
mov
pop
in
jne
xchg
xlat
stos
jge
sub
and
adc
xor
jne
leave
sub
lret
ljmp
push
jnp
aaa
rorb
xchg
hlt
icebp
imul
iret
mov
inc
sbb
cli
pusha
adc
sub
and
fmull
call
lret
daa
dec
lea
or
ja
dec
aas
dec
xor
jae
les
out
inc
push
push
movsb
leave
xor
push
xor
jecxz
push
xor
mov
push
add
mov
cmp
ror
lcall
popf
or
inc
lods
push
aam
push
push
pop
sahf
push
ds
rorb
mov
jae
push
aam
xchg
andb
loop
jecxz
adc
lods
daa
mov
jl
add
cwtl
fs
lcall
out
sub
call
fwait
iret
push
jns
aam
jns
pop
rcrl
sbb
cltd
int3
xchg
adc
leave
shll
jge
sub
adc
fs
sbb
and
in
sbbb
clc
add
mov
sbb
dec
stos
lea
dec
mov
mov
and
mov
pop
pop
loopne
jae
or
data16
ja
imul
testb
and
sbb
mov
mov
sahf
pushf
inc
pop
or
aam
gs
jg
insl
xchg
out
mov
push
daa
out
hlt
mov
pop
lahf
daa
dec
jns
aam
xor
pop
add
neg
rclb
lock
je
jmp
frstor
cmpsl
add
das
fwait
aam
aaa
or
push
aas
lock
test
daa
out
adc
add
aas
test
loop
pushf
dec
sbb
mov
cs
push
jo
sub
jns
fistpl
sub
test
repnz
or
push
push
scas
sub
and
aaa
aam
cmpsb
mov
push
adc
and
cmp
insl
jbe
lock
dec
and
mov
mov
push
inc
aaa
movsl
out
add
and
scas
int
jnp
pusha
leave
imul
mov
jmp
inc
sahf
mov
mov
cmc
dec
loope
cmp
mov
pop
jmp
jo
ljmp
xor
push
mov
push
push
std
xchg
test
lea
pop
inc
inc
jns
pop
inc
ja
push
cmp
insl
jno
add
ja
add
jmp
cmpsl
and
jns
jae
in
les
mov
jno
je
lahf
stos
pop
sbb
adc
push
jl
ljmp
test
dec
sti
fldenv
dec
enter
dec
push
xchg
fisttps
sub
inc
cltd
push
mov
aad
dec
jns
shrb
in
pushf
mov
aam
sub
cmc
mov
adc
ror
mov
fwait
loopne
ds
nop
xchg
mov
pop
addb
into
scas
and
out
xor
dec
cmp
outsb
dec
and
fdivs
cmp
in
push
gs
popf
inc
fsubr
movsl
mov
sarb
inc
mov
imul
mulb
adc
fadds
adc
push
xchg
and
rolb
in
inc
pop
in
inc
adc
cmpsl
dec
sbb
out
inc
inc
push
adc
push
cltd
stos
push
aam
test
mov
inc
ljmp
fidivl
lret
test
push
aam
call
add
xchg
cmp
lock
mov
or
int3
xor
imul
jno
and
out
out
xchg
sbb
std
sub
jle
jb
adc
insb
out
xchg
xchg
and
rcrl
mov
loop
sub
mov
adc
out
mov
xor
xor
outsl
mov
jecxz
xchg
and
cltd
cmc
mov
add
cmp
test
add
cld
pop
in
dec
icebp
sarb
cmp
lret
sbb
push
mov
mov
lds
add
jge
out
lods
push
push
or
mov
test
cmp
cmp
inc
loope
mov
hlt
in
loopne
xlat
imul
shll
push
pop
loope
insb
ja
lods
xor
jg
mov
cmc
inc
add
mov
lea
lock
jae
stos
adcl
mov
pop
xor
popa
push
adc
xchg
and
stc
lret
test
outsb
pop
sahf
nop
into
shlw
push
pop
inc
cmpsl
push
negl
jae
and
dec
aam
shll
jbe
add
fimull
fnstsw
imul
inc
lods
cwtl
cmpsb
in
fldl
orb
lock
sub
push
push
out
and
hlt
icebp
dec
mov
mov
jbe
sbb
xchg
xchg
insl
xchg
mov
rorl
sub
cmc
mov
xchg
les
add
inc
in
das
mov
pop
pop
jg
inc
test
mov
push
or
leave
jl
fisubs
push
out
sbb
inc
xchg
dec
mov
adc
in
adc
je
jae
mov
pop
je
mov
and
jge
add
sub
add
mov
cmp
mov
and
aam
notb
mov
test
bound
mov
cltd
push
add
xor
xchg
mov
ja
std
dec
and
mov
stos
call
sbb
dec
sub
jb
adc
mov
add
mov
xor
inc
jp
jno
xor
addl
add
cmp
adc
cmp
insl
out
fsubs
into
sbb
mov
jle
mov
je
or
into
push
cmpsb
pop
pop
adc
add
aam
jl
mov
xchg
test
jl
ror
and
pushf
jmp
adc
push
out
unpckhps
lret
cmpsb
mov
xchg
xor
adc
xchg
repnz
test
cmpsb
push
in
cmc
sub
pop
xchg
out
push
icebp
je
loope
cmpsl
mov
insb
or
xchg
lcall
out
mov
add
faddl
lret
xchg
ret
ret
fdivl
loopne
ljmp
pop
sub
xchg
cmp
xchg
jb
dec
and
loop
push
outsb
repz
jl
in
mov
pop
pop
or
dec
jnp
cmp
dec
movsl
mov
cmp
popa
dec
sub
outsb
in
push
orl
adc
dec
lret
mov
pop
push
mov
ret
xchg
lock
insb
stos
aad
pop
push
lcall
pop
mov
mov
add
sub
sub
dec
cmc
push
loop
xor
xchg
pop
pop
lea
push
fidivs
inc
cvttps2pi
sbb
cmp
loope
negb
mov
lret
and
fdivs
push
out
les
mov
cmpsb
scas
cmpsb
cmpb
pop
xor
subl
sarl
test
aam
xlat
add
push
inc
loope
imul
arpl
jns
outsl
test
mull
sbb
cmp
push
int3
pop
mov
pusha
xchg
sti
pop
aad
jg
dec
in
sub
inc
ss
push
mov
stc
mov
inc
jnp
mov
push
or
sbb
mov
or
jb
push
std
lods
add
or
push
mov
jns
in
or
movb
sbb
imul
or
mov
addl
insb
test
xlat
or
and
nop
adc
xchg
icebp
cltd
insl
xchg
pop
pop
in
cmp
inc
inc
lcall
lcall
cmpsb
subb
int
clc
ficomps
pop
cmp
rep
test
dec
stc
sbb
dec
adc
subb
mov
cli
push
sub
mov
popf
je
ja
lock
test
cs
pop
bound
sub
bound
xor
in
mov
xor
mov
and
dec
adc
mov
cmpb
sub
and
or
cld
data16
ret
sbb
pop
movsb
mov
xchg
lret
push
push
sub
das
or
stos
xor
out
mov
lcall
les
inc
pop
loopne
xor
mov
jno
gs
xorl
cwtl
inc
push
and
iret
pop
dec
adc
or
mov
lahf
cmp
mov
jb
test
and
lods
cmc
ja
xor
sbb
leave
es
outsb
xchg
addl
sbb
jne
add
mov
xor
in
or
andl
dec
cmp
mov
outsl
sbb
push
js
loopne
or
mov
pop
mov
fsubs
or
imul
sub
jbe
or
cmp
mov
inc
in
and
les
adc
fwait
sti
sub
loopne
test
or
mov
cmp
push
add
test
imulb
insl
cmp
jmp
dec
pop
test
imul
push
jg
sub
jg
loop
lcall
mov
ja
pop
scas
mov
xor
cmp
mov
aaa
aaa
test
std
enter
and
sti
adc
aaa
es
out
pop
jmp
sbb
pop
push
push
inc
pop
sub
out
add
test
xchg
or
inc
sub
sbb
push
inc
add
inc
out
rolb
rorl
mov
mov
jne
mov
xchg
adc
ja
jo
in
mov
jns
or
call
jo
nop
dec
cmp
lds
jnp
imul
jecxz
ds
cmpsb
pop
adc
dec
data16
pop
shrb
js
das
adc
mov
test
dec
sub
call
and
mov
icebp
mov
out
call
cmp
rorb
ficoms
dec
sub
stc
aaa
lods
scas
dec
mull
mov
xor
mov
and
enter
and
lahf
jnp
ffree
add
lret
fwait
jae
hlt
mov
icebp
insl
push
pop
daa
pop
dec
loop
movsl
fistpl
aaa
mov
movsb
mov
bound
mov
int3
pop
decb
into
das
insl
sub
dec
bswap
cmp
ud1
scas
cmp
pop
aaa
cwtl
jne
stc
lods
xlat
lret
adc
dec
pusha
fs
add
addb
enter
out
jne
sahf
dec
adc
aas
push
outsb
jne
or
mov
mov
loop
xchg
es
ljmp
test
and
sbb
jne
ret
sahf
dec
mov
push
cli
sbb
or
pop
jae
mov
pushf
in
and
mov
or
and
dec
adc
xor
je
enter
notb
aas
xchg
test
mov
lahf
pop
sbb
sahf
mov
adc
cmpsb
lea
cltd
stc
sbb
sub
jnp
cltd
lcall
std
pop
jl
mov
repnz
mov
push
stos
pop
fists
or
jb
jb
fstpt
pushf
je
int
adc
jecxz
in
dec
out
movsl
push
cmp
jg
xchg
es
add
and
add
push
int3
inc
fisttpll
lods
inc
hlt
and
and
in
jecxz
dec
adc
push
gs
dec
jns
sub
push
xor
sbb
jb
pop
int
js
jns
pop
jno
out
sbb
xchg
stos
mov
mov
fs
or
clc
pop
stc
fsubrs
fdivrl
fildll
es
jl
lahf
mov
and
mov
adcl
mov
inc
clc
or
lods
popf
jg
stos
cmp
mov
outsb
mov
push
testb
or
dec
cmp
movsw
jae
ret
fwait
mov
cli
mov
aad
and
cmc
inc
and
test
adc
xchg
daa
ss
xchg
sub
mov
ja
add
cltd
insl
and
nop
pop
push
out
stos
aad
in
xor
xchg
in
or
xchg
por
in
testw
push
and
in
stos
or
or
cmp
jg
adc
test
cmp
filds
jo
pop
fmuls
pop
cmp
jb
inc
stc
pop
scas
lret
mov
ljmp
js
sarb
out
cmp
jmp
sarb
dec
sahf
div
jmp
xor
jnp
jecxz
xchg
dec
les
jecxz
dec
lods
ja
sbb
push
cmp
mov
inc
dec
sub
jbe
test
int
or
aam
inc
push
in
mov
andl
fisttpll
mov
sub
mov
std
call
cmp
add
cmp
std
cmp
jae
out
test
mov
xchg
int3
lock
data16
xor
lods
gs
cmp
sub
or
lock
movsb
and
push
inc
imul
pop
cli
repnz
shlb
cltd
adcb
frstor
cmp
xchg
ret
je
inc
lds
pop
mov
jmp
stos
out
cwtl
in
addr16
xchg
lock
sub
fldt
xlat
rcrl
in
lret
mov
cmpsl
pop
fldenv
jo
lds
push
xor
sub
adc
xchg
repz
xchg
movsb
push
les
icebp
sbb
mov
rolb
lret
push
push
fdivr
push
rcll
outsl
lods
add
cmpsb
mov
adc
lahf
mov
add
shll
loopne
mov
mov
cmp
test
or
in
mov
inc
dec
cld
dec
fwait
jle
and
xchg
mov
cmc
mov
add
xchg
adc
and
rcl
push
mov
jae
adc
aam
mov
fiaddl
xchg
jle
cmpsl
mov
pop
arpl
push
adc
ljmp
jecxz
pop
test
dec
jb
ljmp
inc
push
cld
cmp
inc
arpl
sbb
xchg
sbb
adcl
movsb
fisubrs
push
rcrl
add
int3
add
dec
and
or
je
push
pop
cmp
mov
icebp
xor
icebp
adc
dec
loop
lds
lods
mov
mov
sub
daa
repz
addr16
shll
xor
repnz
sub
and
int
rclb
or
mov
or
popa
js
inc
fwait
push
jne
dec
fcomps
in
rclb
fimull
inc
sub
add
cs
inc
inc
aaa
inc
xchg
imul
mov
pop
lods
adc
or
sbb
pop
outsb
mov
int
mov
adcb
lret
mov
inc
shr
mov
xor
push
mov
or
push
sub
add
popf
xchg
xlat
or
add
mov
mov
insb
mov
mov
shrl
inc
jle
or
pop
in
scas
cmp
add
js
inc
dec
das
mov
push
xor
enter
dec
ss
and
in
mov
dec
xchg
clc
in
or
add
addb
xor
int
sbb
daa
std
fisubrs
loopne
inc
xor
jb
movsl
sub
sbb
inc
mov
add
dec
sbb
clc
dec
cltd
aaa
lcall
and
or
fisubs
inc
fadd
pop
icebp
enter
xchg
rorl
xchg
lret
cmp
push
in
cmp
mov
xor
mov
outsb
scas
xchg
loopne
jle
xor
sbb
stos
jge
jns
mov
pop
test
adc
es
outsb
cwtl
push
sub
inc
insl
inc
pop
add
aad
ljmp
fld
dec
inc
jmp
add
sub
push
pop
pop
push
xor
and
mov
lret
add
xlat
jp
stc
int
xchg
mov
pop
clc
insb
or
lds
cmp
cmpsb
cmp
mov
mov
call
repnz
push
aas
and
out
jl
xchg
adc
hlt
sub
cld
add
or
or
sti
mov
sti
jno
push
pop
dec
xchg
xor
movsb
xor
rcrb
pop
fwait
pop
sub
or
das
ret
fdivr
subl
fs
jle
sbb
xchg
adc
lods
xchg
dec
push
dec
add
addr16
adc
sbb
lds
shlb
mov
addr16
xlat
mov
out
popf
jne
enter
inc
sbb
out
roll
dec
xor
insb
cli
mov
inc
leave
pop
rcrb
xchg
pop
subb
movsl
orb
mov
adc
cmp
mov
pushf
adc
inc
jae
add
push
or
mov
jg
rorb
add
add
leave
or
pop
pop
pop
mov
int3
cltd
nop
ret
sbb
jecxz
loope
popf
int3
add
xchg
jbe
inc
inc
pop
lods
jge
outsb
cmp
push
fiaddl
mov
jno
mov
push
leave
cltd
insb
inc
imul
sbb
sti
scas
xchg
add
pop
out
adc
xchg
sbb
lods
inc
dec
push
repz
add
mov
scas
pusha
sub
imul
aaa
inc
mov
je
dec
mov
xchg
push
sub
xor
stos
and
inc
xchg
lret
push
add
or
pop
mov
pusha
push
and
movsl
out
add
enter
jmp
inc
jmp
sub
test
or
xor
or
dec
jne
les
addr16
shlb
cmpsl
popa
dec
int
outsb
rcr
std
loopne
out
test
and
repz
les
movsl
popa
stc
das
aam
cltd
fisubl
pop
sub
mov
cmpsl
arpl
push
xchg
enter
cmp
push
mov
xorb
lret
shrl
mov
stc
sbb
push
out
outsb
cwtl
fcomp
push
jmp
cmp
hlt
mov
cmp
popa
inc
sub
jb
popf
fisttps
add
ret
inc
add
mov
xor
mov
insb
inc
out
cmp
cmp
adc
and
mov
lret
sahf
ljmp
mov
dec
icebp
loope
daa
xlat
rorb
fwait
xchg
pop
mov
enter
js
flds
add
arpl
jnp
iret
sub
and
pushf
xlat
mov
add
in
cli
jp
mov
sbb
notb
lea
fptan
adc
push
enter
jns
push
jae
or
daa
iret
jl
testl
jecxz
stc
push
out
xchg
mov
aaa
and
pop
sbbl
stos
xchg
stos
add
cmp
aas
rcl
ds
faddp
insl
pop
repz
push
sbb
sti
and
cmpsb
cli
cmpsl
jmp
inc
mov
int
in
push
mov
cmpsb
sti
inc
jnp
jb
xor
popf
fbstp
mov
pop
adc
jb
insl
add
push
xchg
mov
inc
pop
js
push
pop
xor
xor
or
xchg
je
stc
rorl
call
sub
jbe
push
int
aam
xor
mov
pop
mov
sbb
rcr
xor
pop
xor
gs
inc
cmp
sarb
or
and
pop
mov
popf
push
pop
bound
xlat
fcoml
stos
sbb
and
das
mov
test
out
dec
fadds
jnp
jno
rorl
or
xor
aam
mov
shl
pop
movsl
mov
lahf
push
sub
bound
inc
cmpsl
add
pop
xor
or
sub
hlt
fdivrs
mov
mov
in
sbb
and
shll
shlb
mov
adc
enter
leave
addr16
dec
ret
shrb
jge
dec
jno
xchg
enter
push
lock
cwtl
inc
xchg
js
sub
aam
mov
stos
sbb
mov
clc
push
les
sbb
xchg
ror
xor
mov
cmp
push
xchg
addr16
rep
pop
adc
cltd
cltd
test
test
push
es
mov
fidivs
jl
ljmp
pop
dec
and
out
in
movl
jne
jge
test
nop
test
push
adc
cmp
mov
aaa
in
imul
stc
test
sub
dec
adc
mov
xchg
stc
jle
fninit
nop
imul
sti
sub
loope
xor
int3
jg
ja
orl
js
fmuls
in
push
xchg
mov
pop
xchg
inc
jno
inc
lcall
xchg
add
xor
call
inc
aaa
mov
pop
inc
cltd
and
lcall
insl
add
scas
pusha
imul
jp
sub
stos
addr16
pusha
pop
repnz
pushf
inc
or
es
mov
mov
aad
in
sub
out
ret
push
add
loopne
popa
shll
jg
or
ja
call
jae
dec
lcall
pop
sbb
inc
adc
add
sbb
jge
ljmp
rcrl
pop
in
mov
rclb
push
mov
adc
test
pusha
sbb
lock
mov
out
inc
test
adc
add
or
lea
fistl
add
xlat
shll
outsl
fmuls
inc
sbb
sarb
dec
inc
dec
call
lret
sub
pop
mov
ljmp
pop
cwtl
rorb
subl
and
adc
mov
cmp
sub
lret
mov
lret
push
adc
std
popf
into
in
push
adc
add
mov
push
mov
xor
in
mov
lcall
iret
iret
add
cltd
sarb
push
popa
xchg
push
push
jne
mov
and
dec
icebp
sub
popf
xchg
pop
out
aad
mov
fwait
mov
arpl
or
fsubl
dec
in
dec
inc
out
sbb
arpl
add
lahf
cwtl
cltd
loop
push
cmp
sub
cmp
jmp
jns
push
lods
push
xchg
sbb
mov
push
movq
pusha
outsl
cmp
push
addr16
pop
in
cmpl
outsb
aam
mov
and
xor
mov
lcall
rcrb
movsl
and
addr16
cmpsl
es
pushf
fs
scas
iret
cwtl
aam
jmp
cltd
inc
out
mov
mov
je
fmul
jno
nop
push
ret
clc
lret
mov
loope
jmp
repnz
pop
add
stos
xchg
add
push
adc
inc
pop
outsl
data16
push
and
mov
jmp
add
inc
mov
sti
aad
jae
dec
adc
sbb
pop
pop
xchg
and
ja
push
subb
in
pop
sbb
mov
shl
gs
inc
and
rcl
ja
xchg
mov
subb
loope
arpl
mov
out
xchg
into
push
ja
call
inc
and
inc
or
xchg
lret
in
imul
xor
sub
jp
or
sub
fbstp
adc
das
repnz
xchg
test
xor
jbe
pop
sub
addr16
sbbl
fwait
lret
aas
dec
xchg
jnp
pop
and
xchg
push
ja
mov
les
push
inc
jg
xor
ss
sarb
xchg
and
mov
cmp
dec
jl
mov
xchg
pop
cmp
sub
out
js
in
enter
or
add
into
aam
pop
shlb
lret
push
mov
cmc
push
inc
mov
cs
cmp
mull
popf
push
mov
mov
fidivrl
jmp
mov
pop
daa
mov
push
xchg
lds
pop
add
arpl
enter
pop
pop
movsl
dec
inc
dec
mov
sub
fs
test
or
rol
sarl
lock
mov
sbb
xchg
jmp
mov
push
and
bound
pop
movsl
loope
lds
inc
dec
movsb
inc
popf
ds
xchg
imul
popf
movsb
xchg
jg
inc
jo
push
roll
jae
das
ja
pop
push
movsb
sti
xchg
sbb
jge
mov
xchg
and
sub
int
sbb
mov
sbb
cltd
xchg
sub
ret
repnz
and
pop
add
aaa
fwait
int
inc
insl
pop
int
add
add
roll
fidivrs
imul
mov
pop
cmp
leave
jp
lret
push
outsl
loope
and
dec
icebp
dec
nop
cmp
loopne
roll
movsl
movsb
and
push
cmp
inc
aad
sbb
cmpsl
cmp
lahf
adc
mov
lret
popf
clc
cmpsb
inc
lds
into
sub
addl
inc
ljmp
enter
in
mov
cmovl
cmpb
popa
dec
mov
jns
test
nop
jge
cmp
push
cld
out
mov
jbe
out
xor
in
enter
in
mov
insb
test
jmp
xor
add
push
fistpl
inc
loopne
outsl
sahf
dec
xchg
inc
in
mov
jmp
cwtl
or
testb
lcall
or
inc
mov
mov
movl
lret
pop
aas
or
xchg
in
mov
out
inc
and
jbe
cmp
out
sbb
fisubl
xor
leave
lcall
cld
sbb
mov
and
xor
outsl
add
outsl
mov
xchg
inc
rorl
ja
pop
mov
add
mov
out
adc
fadd
ja
popa
arpl
std
push
sti
mov
mov
pop
out
adc
aam
enter
pop
and
add
mov
or
xchg
lods
out
cld
imul
mov
arpl
cltd
jne
idiv
sbb
add
dec
outsl
scas
testb
mov
cltd
mov
jmp
mov
pop
repnz
pop
leave
out
push
mov
inc
jge
adc
xor
cmpsl
ljmp
jge
inc
push
out
xchg
ucomiss
fadds
lret
push
imul
dec
inc
out
dec
adc
lcall
mov
dec
movsl
xor
ja
insb
adc
fsubs
repz
in
mov
cmp
adc
inc
in
js
repnz
leave
adc
es
mov
fsts
pusha
pop
adc
mov
inc
mov
adc
pop
pop
andb
inc
jbe
in
pusha
mov
addl
sub
push
pop
out
mov
nop
sar
mov
mov
xchg
sahf
aaa
xchg
cmp
mov
dec
mov
testl
push
push
cmp
push
cmp
mov
hlt
gs
in
sbb
lret
cmp
ja
loopne
xor
lds
mov
push
lods
popf
mov
fmull
jne
mov
cmpsl
dec
xchg
movsb
jle
sbb
sub
shrb
xchg
add
bound
test
es
clc
test
imul
xorl
rcll
add
mov
push
mov
mov
shll
fnstsw
mov
xor
incb
xor
pop
push
push
add
mov
outsb
lcall
enter
mov
scas
xor
stc
cmp
mov
mov
clc
loope
dec
inc
aaa
ret
add
mov
sub
pop
adc
and
stc
loope
mov
repnz
rcrl
dec
and
iret
loop
mov
out
lcall
xchg
int
or
sub
cwtl
push
test
mov
cmp
sub
push
add
cmp
fists
out
cmp
or
sub
sub
pushl
sub
pop
cmp
cmp
clc
repz
mov
shlb
mov
push
cld
aam
push
ret
mov
jns
pushl
fcoml
fdivrs
int
fisubrs
adc
push
mov
test
andl
pop
jnp
shlb
ljmp
mov
leave
push
pop
clc
out
xor
in
std
loope
hlt
mov
mov
sti
clc
mov
daa
outsb
inc
mov
mov
adc
xchg
in
lods
aaa
push
fisubrs
fbld
dec
ljmp
mov
int
mov
inc
xor
sub
negb
shll
adc
inc
push
std
or
jmp
xchg
or
inc
adc
push
or
add
sub
bound
fsubs
mov
shr
stos
pusha
cs
cmp
add
adc
sub
cs
sub
dec
sbbl
push
in
dec
add
out
and
add
cmp
daa
orb
push
test
shl
cwtl
xor
dec
faddl
lock
mov
add
outsl
sub
pop
popf
int3
sbb
xchg
mov
adc
inc
xor
daa
imulb
and
shrl
mov
dec
pop
js
xchg
mov
out
adc
sarl
mov
sarl
rolb
jp
adc
cs
sbb
cmp
test
jp
lcall
mov
mov
xor
mov
pop
pushf
out
push
pop
fcomip
sbb
fwait
jmp
in
sti
test
xchg
push
sub
pop
out
leave
cs
cmp
jns
insl
add
in
lock
cmp
or
adc
testb
mov
push
mov
lods
mov
out
imul
xor
inc
sbb
xor
inc
xchg
dec
jmp
add
cmp
out
notb
mov
push
mov
icebp
mov
fistl
and
and
cmpsl
pop
dec
xor
push
xor
cmp
ret
or
xchg
mov
dec
mov
lds
cmp
lods
aam
std
jo
push
lea
aad
jp
mov
or
mov
sub
push
je
test
xor
lods
scas
jbe
lret
insb
xchg
lret
test
ljmp
leave
sub
imul
mov
adc
arpl
push
mulb
mov
lock
imul
insl
mov
scas
aas
fldl
inc
xchg
pop
push
psubw
gs
jbe
fdivs
mov
call
add
mov
rcll
xorb
andl
xor
mov
aaa
aam
aaa
mov
addr16
mov
ficomps
aam
std
insl
cli
pop
int
mov
fnstcw
bound
loopne
popl
hlt
push
sub
sbb
std
xlat
stos
pop
cmp
lods
sbb
test
scas
popf
mov
sub
test
nop
mov
adc
sahf
iret
mov
js
mov
aam
xchg
jae
cltd
sub
mov
jnp
xor
sub
dec
adc
inc
lods
ret
cmp
push
call
fldenv
pop
aad
jae
push
gs
cmp
out
adc
dec
pop
or
popl
add
clc
ja,pn
repnz
cmp
not
and
add
popa
or
and
cwtl
or
push
or
insb
mov
xor
in
iret
shrl
add
rcl
loopne
add
mov
add
or
adc
cltd
hlt
push
aam
loopnew
cmp
ret
mov
mov
sub
decl
dec
out
mov
dec
mov
or
fisttpl
xor
outsl
ljmp
xlat
xor
inc
jl
movsl
test
lahf
fisttps
shl
test
test
push
data16
aad
xor
sub
or
mov
arpl
clc
fcoml
push
dec
adc
sbb
outsl
icebp
int3
or
xor
sbb
in
xchg
lahf
cwtl
aas
mov
incl
fwait
inc
mov
inc
sbb
nop
push
xchg
fwait
mov
push
push
pop
icebp
mov
mov
mov
insb
outsl
cltd
mov
incl
loopne
sbb
mov
imul
pushf
nop
jl
mulb
dec
or
push
cmp
pop
pop
test
iret
mov
pusha
push
pop
mov
ss
out
jmp
push
test
ljmp
test
push
mov
and
shll
xchg
cmp
or
push
icebp
scas
jo
repz
pop
or
outsl
mov
les
add
gs
or
jns
dec
or
stc
aas
ljmp
adc
add
ss
and
enter
stc
jae
imul
mov
adc
xor
add
outsb
shrb
cwtl
fs
lds
push
fidivrl
xor
xorl
dec
aam
sbb
xlat
hlt
pusha
pusha
mov
outsb
sub
push
add
cmp
dec
mov
sub
jo
icebp
cmp
xchg
inc
nop
lods
add
xor
popa
and
mov
adc
cmp
pop
pop
fistl
push
loope
pushf
roll
xor
add
xchg
inc
jns
push
repz
out
into
es
test
loope
cmp
lds
push
or
fimull
sbb
por
jnp
lods
je
sub
jb
shll
enter
cli
icebp
sbb
cmc
shlb
in
add
out
stc
jbe
fnsave
decl
mov
xor
and
mull
sahf
popa
cmp
cmp
pop
or
xchg
and
jecxz
stc
xor
ljmp
add
mov
inc
cli
jg
and
test
inc
jg
jno
sub
inc
sahf
mov
push
popf
adc
cmp
clc
jmp
in
mov
dec
inc
fistl
pushf
cmp
dec
scas
out
sbb
outsl
push
cmc
pop
test
sub
xchg
push
out
stc
sbb
xchg
sbb
lods
leave
lret
mov
cmp
aas
fldl
mov
add
xor
push
in
shl
dec
adc
mov
mov
pop
xor
mov
jl
outsb
out
xchg
mov
mov
pop
into
add
and
push
stc
jo
ja
push
lds
adc
in
scas
xlat
jecxz
xor
add
lcall
add
cmp
aas
and
and
xchg
or
sbb
fdivrs
add
dec
sbb
fcomps
sub
or
mov
or
cwtl
cmp
testb
arpl
test
cld
rcrw
out
jbe
pop
inc
pushf
push
push
fisttps
lahf
icebp
ja
cmp
cld
cmp
fnsave
and
das
enter
sbb
xlat
lods
imul
imul
loope
and
stos
out
or
xchg
mov
clc
adc
mov
sub
mov
stos
jle
cmp
es
sbb
lret
in
call
adc
mov
xorb
xlat
je
xor
sbb
aad
pop
aas
cmp
outsb
or
shll
icebp
jb
cmp
iret
pop
sub
adcb
fcmovnb
test
cmpb
scas
inc
adc
rclb
jns
and
ljmp
inc
sub
mov
mov
ret
cld
fcoms
dec
das
imul
mov
out
mov
loopne
push
clc
add
push
mov
xchg
mov
mov
into
and
subb
dec
jne
loop
cmp
hlt
lods
and
jb
leave
jnp
je
xor
gs
loopne
ljmp
imul
mov
sbb
mov
test
fnstsw
xlat
xchg
rcl
and
mov
adc
cwtl
lret
into
adc
mov
or
sbb
xchg
icebp
push
sub
push
dec
je
pop
mov
je
sub
rcl
and
data16
repz
int
push
fnstenv
nop
add
pop
sub
aas
mov
subb
mov
and
iret
inc
out
push
mov
fisubrs
dec
xchg
or
add
xor
repnz
jmp
out
sub
mul
mov
hlt
fwait
jge
and
das
pusha
jne
test
xchg
out
or
or
inc
sub
cmp
sub
mov
push
aad
jb
push
sbb
add
sbb
jb
push
dec
loope
mov
jp
scas
sti
mov
jmp
lods
pop
rolb
in
dec
stc
fnstcw
jg
and
fs
iret
sarl
mov
pop
xchg
xor
and
mov
call
mov
testl
in
pop
adc
pusha
bound
test
repnz
jne
or
ljmp
in
lret
inc
inc
cli
inc
mov
test
out
vmovdqa
loopne
mov
dec
movb
loope
mov
jo
xorb
xchg
ja
out
jb
iret
inc
mov
mov
clc
repz
mov
pop
xchg
xchg
loope
push
dec
cmp
lcall
xlat
ret
cmp
cmpl
inc
jle
ss
pop
xchg
cmpsb
sar
cmpsb
sti
and
sbb
sbb
out
pop
lahf
fstl
cwtl
jae
cmpsl
push
sub
lods
inc
dec
add
cmc
mov
aas
lods
sub
into
test
into
adc
insl
pop
pop
xchg
push
or
ljmp
adc
mov
mov
repnz
dec
inc
lods
mov
insl
rolb
jne
outsb
mov
es
mov
inc
ret
cmc
negl
xchg
jg
cmc
jae
sarl
dec
aad
fistl
out
jne
dec
mov
pop
xchg
test
sahf
mov
sbb
bound
push
es
mov
add
dec
mov
cmpsb
inc
mov
repz
dec
loope
cmp
lods
lahf
sbb
xchg
cmp
xchg
xor
ss
std
movsl
and
xchg
lock
rcll
fcoml
in
int
xor
lahf
lret
xor
sahf
arpl
mov
cmp
lcall
je
and
jbe
mov
stos
xchg
jmp
jno
cli
loopne
in
mov
and
xchg
mov
pusha
mov
or
int3
xor
cmp
xchg
rcrb
int3
es
and
mov
jnp
outsl
mov
std
rorb
rorl
in
std
mov
nop
mov
test
cmp
jo
xorb
mov
sub
sbb
jp
push
icebp
mov
mov
rcrb
lea
sub
inc
or
dec
scas
imul
and
or
push
push
xor
arpl
adc
ror
adc
cmc
fsts
inc
jbe
dec
xor
fildl
fisubs
lods
xchg
xlat
push
pop
scas
repz
insl
mov
in
test
jb
push
popf
xchg
pop
aaa
push
xchg
outsb
lods
cmp
mov
leave
inc
and
sub
add
and
xchg
mov
into
adc
movsb
mov
pop
push
test
out
js
ret
lods
xchg
jl
faddl
xchg
fdivl
sbbb
push
add
inc
sbb
movsl
lds
xchg
and
hlt
jle
sbb
jg
cld
in
pushf
push
add
pop
fcomps
or
mov
push
fldt
and
add
test
jno
pop
in
lret
cmp
jbe
inc
push
lds
jecxz
and
mov
sub
adc
dec
adc
subb
lods
out
sub
adc
or
dec
cmp
adc
rcll
pop
popa
scas
push
inc
add
cmpsl
clc
mov
adc
xor
sub
mov
stc
cmp
mov
ljmp
pop
or
pop
loopne
js
jecxz
loopne
and
push
enter
js
cli
ret
pop
xor
mov
insb
dec
mov
and
and
cmc
add
aam
aam
js
jne
shlb
cltd
add
mov
ret
test
jne
inc
ja,pn
stos
gs
lahf
mov
pop
enter
jg
add
push
pop
push
scas
cmp
sub
sbb
shll
in
mov
pop
icebp
out
mov
or
mov
dec
test
lea
xchg
or
push
push
mov
es
outsl
inc
pop
mov
xor
mov
jg
mov
and
jge
add
test
and
xchg
es
sub
in
xchg
inc
jle
jno
aas
out
mov
push
insl
cmpsb
mov
sub
repnz
mov
mov
inc
mov
aam
jmp
gs
js
jb
pop
add
int3
mov
into
roll
inc
loop
lods
jno
stc
movsb
mov
mov
leave
sbb
in
mov
icebp
out
out
cmp
mov
pop
outsl
mov
loopne
and
adc
xor
nop
repz
sbb
push
movb
jle
push
in
jle
mov
jnp
cmp
inc
fwait
rorb
dec
fistpl
add
pop
fistl
dec
inc
push
js
pop
jge
push
popa
test
popf
dec
sub
jl
imul
and
mov
xlat
insb
pop
sub
adc
push
xlat
sub
cmp
mov
xchg
xor
pop
lock
push
fwait
push
pop
push
pusha
rcrl
add
daa
and
jb
mov
inc
fldl
lock
or
and
mov
hlt
pop
and
les
or
cmpsl
cli
and
jmp
lahf
cld
xor
xor
push
outsl
cmp
and
mov
xor
mov
mov
mov
xchg
mov
adc
jge
out
pop
and
mov
fnstsw
xor
adc
sbb
fnstenv
clc
std
mov
mov
jb
pop
shlb
mov
imul
stos
int
call
push
daa
jb
fcompl
mov
dec
cmp
xchg
aad
inc
jmp
and
cmpsb
pop
mov
mov
shrb
dec
or
adc
lahf
lret
loop
inc
std
push
mov
dec
aam
mov
dec
mov
mov
mov
leave
jns
cmp
or
rcrb
stos
aas
cld
mov
scas
sti
in
lcall
fbld
fldcw
out
push
nop
cld
xor
fbstp
insb
icebp
jne
mov
and
filds
loope
ret
add
lods
and
xchg
jb
dec
fidivs
pop
jae
jnp
shlb
dec
popa
add
stc
sbb
push
mov
mov
cmpsl
sub
ja
popa
xor
add
and
xlat
cmp
xchg
repz
test
adc
push
jmp
loope
push
sahf
push
dec
inc
ret
movsl
add
fcmovnu
loopne
fdivl
dec
ret
out
insb
add
cmp
data16
or
mov
aas
shrl
sub
sub
leave
or
mov
hlt
sbb
fnstsw
fsubrl
test
daa
or
push
lds
fisubrl
cmp
pop
mov
arpl
jb
movsb
cmp
int3
test
outsl
adc
lcall
sub
pop
mov
lods
addr16
aaa
dec
sub
push
pusha
dec
pop
in
dec
dec
dec
mov
int3
nop
std
cwtl
psraw
aam
dec
jl
xchg
data16
ja
mov
sqrtps
push
mov
enter
cmpsb
stc
aas
mov
in
stos
xlat
cmp
push
mov
dec
push
cmp
cwtl
lock
push
mov
jle
mov
jge
dec
or
jne
movsb
pop
pushf
jne
loop
jbe
fistpl
pop
shlb
pop
out
jmp
rcrb
mov
lock
push
cmp
and
pop
sub
cmp
pop
mov
mov
dec
les
sti
stos
or
stos
adc
pop
test
ja
sbb
mov
push
xchg
mov
jge
test
arpl
xor
cmp
inc
inc
test
or
fildll
shl
ret
in
push
int3
aas
mov
xchg
mov
rcrl
cmc
xchg
fiadds
outsl
or
fistps
sbb
push
dec
add
dec
jle
out
push
mov
loopne
dec
adc
xchg
mov
or
xchg
popa
cli
daa
enter
dec
js
mov
push
jne
lods
and
sbb
dec
pop
dec
pop
les
adc
add
sahf
ss
mov
std
out
lret
ja
xchg
xchg
stos
in
pusha
mov
daa
sbb
jno
les
inc
nop
push
inc
lea
xlat
jg
fld1
andl
pop
icebp
xor
mov
lret
dec
jnp
push
or
cmp
in
sub
in
insb
mov
out
jns
fisubrs
cwtl
sbb
imul
and
dec
insb
pop
pop
rolb
stos
push
mov
sahf
jle
outsb
aam
aas
sbb
mov
push
mov
xor
cmc
sub
fs
cmpsb
push
fbstp
push
sbb
mov
test
mov
or
ja
fnstenv
xchg
fidivs
imul
cmc
outsb
xor
push
inc
fnstcw
dec
mov
jg
cs
es
sahf
adc
into
mov
addr16
cmc
xchg
enter
mov
outsl
pop
hlt
cmp
ret
enter
pushf
cltd
stc
cmpsb
mov
insb
xlat
jno
aam
xor
clc
mov
inc
jge
sub
push
add
aaa
and
shlb
cmc
pop
aad
lods
lret
jmp
xor
nop
mov
aaa
mov
cmp
xlat
mov
repz
addl
movntps
mov
mov
xor
and
add
sub
jo
inc
push
lds
std
fistpl
ljmp
aas
fcomps
insb
push
outsb
lret
xor
or
and
std
ljmp
or
pop
in
cli
inc
xor
fscale
adc
push
lock
dec
push
jne
xor
shrb
sahf
cmc
clc
nop
jle
mov
xchg
sbb
lahf
cmp
fadds
adcl
fldl
call
jb
or
mov
xorl
mov
mov
inc
push
and
sub
jne
push
addr16
mov
outsl
push
je
test
int
in
inc
pop
jae
adc
scas
ret
sahf
addr16
inc
dec
sbb
movsl
in
jae
scas
ret
jle
rorb
test
fists
out
fistpll
push
or
insb
push
rclb
imul
in
xchg
ja
ds
xchg
mov
ja
jg
push
lods
xchg
movsl
cltd
repz
ljmp
inc
add
mov
adc
sbb
int3
js
movsl
inc
sbb
jl
xchg
mov
sbb
mov
insl
pop
lahf
cmc
test
jne
jb
shrb
adc
xor
pop
stos
mov
adc
pushl
sbb
sbb
adc
add
add
lcall
ret
testb
and
dec
push
jns
mov
sub
loope
inc
or
sub
and
cmp
es
test
xchg
jns
and
dec
nop
in
sbb
dec
movsb
fwait
or
pushf
mov
icebp
jbe
mov
arpl
dec
pop
gs
ficoml
xchg
add
idiv
jne
sbb
in
js
loop
cmp
js
repnz
ljmp
xlat
fcom
imul
jle
jmp
mov
outsb
dec
mov
jns
jl
and
dec
imul
add
xor
cmc
scas
mov
clc
dec
cmp
mov
popf
js
movsb
shrb
push
loope
pop
push
outsb
in
lods
divb
orl
std
jnp
ficomps
test
test
js
add
lret
addr16
out
fwait
aam
dec
and
fldcw
test
push
cmp
int3
jmp
das
xor
sub
lcall
jne
repz
mov
add
cmc
xchg
or
loopne
imul
jne
das
mov
sbb
hlt
cltd
int
enter
lods
push
in
dec
ficoml
fs
cmp
mov
inc
out
adc
int
jecxz
lock
loop,pn
inc
insb
xchg
inc
add
mov
push
sbb
jl
cmp
xchg
aaa
pop
add
pop
outsb
mov
xor
imul
lea
jns
mov
dec
lods
lea
jbe,pn
xchg
aas
mov
add
lahf
nop
into
js
aas
mov
popa
push
xchg
in
push
cmp
cmovae
mov
pusha
in
popf
fbstp
sub
mov
push
pop
mov
mov
insl
adc
sbb
enter
mov
je
in
jp
std
pop
adc
mov
sbb
jecxz
cmc
fdiv
pop
adc
xor
mov
sbb
dec
call
sub
adc
cmp
packssdw
in
dec
and
dec
popf
and
jb
mulb
cmp
mov
sbb
adc
adc
cmp
pop
sub
cmp
lea
sahf
inc
stos
fs
in
push
incl
pop
adc
sub
lcall
dec
mov
shlb
xlat
imul
or
arpl
and
scas
mov
cmp
inc
lods
les
and
sbb
sub
insb
jl
mov
iret
mov
addb
loope
icebp
pop
mov
xor
inc
cmpsl
stos
jo
repz
js
sub
push
jnp
hlt
adc
pop
cmp
pop
scas
out
mov
jo
popa
test
pop
in
idivb
sbb
lahf
adc
icebp
jns
insb
lcall
pop
or
int
jmp
push
dec
loopne
aam
mov
dec
insb
mov
repz
pop
dec
xor
orl
out
mov
dec
cltd
test
push
xor
and
hlt
mov
mov
das
lds
mov
mov
mov
mov
test
mov
pop
mov
out
stos
daa
outsl
dec
add
fimuls
inc
shrb
rcrb
test
xor
test
push
icebp
cmp
dec
cmpsb
sbb
testb
nop
icebp
xor
cmp
mov
ljmp
dec
leave
mov
dec
xchg
xor
fadds
sbb
js
cmp
fmuls
incl
out
js
sbb
mov
test
adc
push
ss
adc
mov
jp
xor
mov
cmp
iret
andb
jne
adc
stos
loopne
sarl
jl
insl
sbb
dec
test
sbb
jo
movsb
aas
add
adc
hlt
cs
cli
pop
cmp
sti
lea
fidivs
jp
pop
or
and
lock
adc
in
lcall
xor
mov
push
xor
mov
aad
subl
fs
les
cmp
stc
or
cli
ss
ds
mov
cmp
or
mov
dec
jp
loope
jge
out
lds
lcall
sar
ja
lods
mov
stos
popf
js
js
mov
pop
bound
xchg
out
out
cwtl
lret
js
sbb
or
push
jecxz
scas
sarl
cmp
leave
fsubrl
dec
sub
pop
dec
lahf
mov
and
in
mov
push
gs
fstl
imul
jecxz
mov
ror
pop
rorl
xchg
mov
out
lds
jo
push
push
pop
adc
xchg
cmp
mov
aaa
mov
sbb
jmp
jg
inc
ficoml
xor
scas
pop
mov
pop
adc
xor
js
sub
incl
dec
das
inc
pop
ss
push
cmp
jnp
stos
mov
aad
stos
std
xor
stc
mov
pop
add
daa
cmp
pop
fidivs
sbb
fwait
imul
pop
push
lock
mov
xchg
shl
sbb
movsl
xchg
and
scas
divb
ret
pushf
pop
sub
shrl
xchg
cmc
cld
imul
cmp
pop
xor
xchg
decb
mov
sbb
pop
dec
std
sub
repz
jge
adcl
aas
cltd
cwtl
pop
leave
push
add
mov
imul
sbb
lret
mov
and
out
push
jmp
inc
scas
sti
popf
fsubrs
jge
ljmp
pop
test
js
xchg
fwait
or
and
adc
cmp
xor
aam
cmp
add
jno
les
movsb
cli
mov
test
cmc
push
jl
mov
mov
add
xchg
inc
mov
loope
xchg
or
push
aad
sbb
pop
pop
push
lret
je
fistl
daa
push
arpl
jb
loop
je
arpl
aad
and
lea
bound
cmp
clc
aaa
hlt
jae
stos
out
mov
shrl
dec
cli
adc
in
pop
cli
inc
push
or
cmp
sbb
push
and
mov
aaa
test
adcb
jg
and
je
aaa
in
jns
sbb
mov
clc
inc
movsl
cwtl
ret
or
add
int
xchg
sar
stos
repnz
lret
jmp
or
lret
test
sti
adc
sub
std
xor
xchg
pop
std
idiv
sub
pop
xchg
fwait
and
fistps
popf
mov
sub
jl
cmp
cmova
cmp
mov
push
in
das
mov
fsubr
ljmpw
fiadds
int
mov
cmp
repz
ret
fdivrp
btcl
cmpsl
mov
movsb
and
push
subl
nop
fiadds
xchg
popa
bound
imul
and
push
clc
pop
jg
pop
or
jb
mov
in
pop
push
fwait
add
test
cmp
loop
push
cmp
sti
rcll
in
pop
inc
push
mov
in
or
xor
inc
mov
sahf
push
mov
and
cmp
or
jle
jle
add
test
jecxz
mov
into
push
out
je
lods
sahf
mov
xor
enter
jns
jb
fisttpl
cmp
mov
cwtl
stos
xor
xchg
xor
mov
pop
cmpsb
push
push
inc
aas
and
mov
mov
add
sbb
mov
lods
xor
xor
shlb
xlat
lods
or
sarb
sub
push
inc
movsb
loop
add
fs
sub
lods
sub
js
enter
in
enter
aam
out
or
test
mov
lds
mov
xor
out
inc
and
test
test
cmp
cltd
std
add
out
decb
mov
jne
sbb
xor
inc
pop
out
and
das
das
sbb
cwtl
bound
fiaddl
xor
adc
xchg
and
outsb
mov
subb
inc
pop
dec
mov
sti
cmp
stc
mov
jmp
pop
dec
mov
fidivl
jae
insl
roll
lods
ds
jmp
inc
jg
int
dec
jns
cmpsl
pop
push
and
int
daa
inc
and
sbb
ljmp
pop
pop
call
mov
mov
pop
out
loope
test
sahf
aaa
jne
mov
fistpll
jmp
icebp
movsl
and
je
mov
test
mov
subb
lods
sarl
fistps
jmp
sub
jno
xchg
sbb
mov
out
pop
sbb
add
mov
dec
cmp
scas
jnp
inc
add
sti
pop
add
clc
cltd
adc
push
dec
jmp
incb
mov
dec
xchg
pop
sbb
lock
push
mov
das
ficoml
push
pop
icebp
dec
cs
inc
jge
rcrb
out
pop
mov
xor
or
cwtl
addr16
pop
aam
xchg
or
and
in
int3
loope
fs
adc
adcb
and
push
je
push
push
fwait
mov
xchg
leave
sub
jmp
xchg
addr16
sub
jge
inc
or
out
push
inc
and
sbb
adc
es
psrad
inc
test
lods
sub
mov
leave
mov
fsubs
lock
jecxz
mov
adc
inc
mov
mov
xor
and
xchg
int
int3
mov
cltd
mov
sbb
jl
xchg
into
mov
xchg
jge
mov
sbb
lret
lret
add
push
shl
icebp
jns
cmovns
adc
lahf
loopne
mov
push
in
mov
daa
mov
lea
push
and
out
mov
jmp
mov
xor
sub
mov
and
sti
mov
sbb
xchg
push
adc
aas
mov
add
adc
dec
gs
scas
in
and
xor
es
xchg
inc
dec
inc
dec
icebp
incl
syscall
dec
mov
mov
adc
xchg
iret
js
xchg
out
sbb
cmp
cmc
cmpsl
add
mov
mov
sbb
mov
jp
lret
jbe
cmpsb
jne
lahf
pop
aas
xor
sbb
fists
fidivrl
cmp
es
scas
or
sub
lret
decb
mov
xor
stc
mov
fwait
lock
cld
imul
or
loop
out
pop
xor
and
int3
stos
stc
fdiv
dec
stc
movsl
jo
add
xorl
fs
xchg
ljmp
sti
loop
sub
and
fsub
jae
jnp
fidivs
mov
testl
repnz
add
movsl
mov
jmp
jne
inc
stos
movsb
in
mov
dec
jns
mov
fs
int3
rcrb
movsl
test
fldl
inc
pop
sub
mov
shlb
or
fists
mov
aad
fbld
push
jecxz
adc
xlat
inc
sbb
jmp
popf
leave
jnp
adc
ja
fimull
test
movsl
mov
mov
movsb
cmpsl
jnp
push
inc
push
pop
pop
sub
cmp
mov
arpl
repnz
adc
fwait
test
mov
aaa
and
ja
push
test
mov
or
add
mov
lahf
pop
mov
push
dec
rolb
sbb
nop
jns
adcl
xchg
in
lock
mov
or
add
popf
pop
xchg
add
loope
in
rolb
call
xchg
sbb
push
repz
test
test
and
mov
inc
cs
hlt
pushf
and
inc
xor
sbb
repz
leave
and
mov
inc
jne
je
imul
jp
jbe
hlt
cltd
data16
xor
cmp
add
xchg
out
rorb
in
je
cli
in
andb
and
out
fmull
push
or
lods
fucomp
inc
mov
and
lds
sahf
jle
adc
mov
add
arpl
sahf
daa
sub
test
mov
push
jbe
add
ret
jl
jne
inc
jbe
call
aad
in
lods
subb
aas
push
xor
inc
test
xor
push
repnz
in
mov
je
iret
xchg
mov
or
in
xlat
xlat
enter
movsl
sub
adc
jecxz
xchg
leave
sahf
cmc
xchg
sub
push
xchg
rclb
and
lods
cli
rclb
or
sarl
lret
subb
inc
or
cmp
mov
ror
pop
ret
stos
icebp
add
stos
fdivl
rcrl
fsubl
dec
hlt
int
negb
sbbb
mov
sbb
mov
sbb
jne
sbb
lock
jmp
in
or
adc
int
ret
lcall
int
push
mov
xor
test
dec
dec
test
divb
mov
pop
mov
cmpsb
jg
xor
out
aaa
in
imul
mov
add
sub
test
xor
imul
in
cld
sbb
rorb
mov
stos
fwait
and
and
add
mov
sbb
sbb
rcr
sub
enter
mov
leave
test
mov
arpl
pop
cmovne
xor
mov
cmpb
ds
call
mov
jae
stc
xor
add
push
imul
pop
jl
or
divb
jmp
dec
mov
cld
cld
jno
jle
fnstcw
add
lock
or
push
pop
mov
cmpsl
jne
lds
bnd
imul
inc
cmp
rclb
or
push
sub
push
or
dec
inc
and
sub
cmp
or
dec
in
pop
mov
pop
pmullw
pop
aam
mov
mov
cltd
jl
ja
adcl
cmp
xor
lret
ficompl
dec
jl
mov
cmp
sbb
addl
cld
scas
pop
sbb
adc
aaa
jne
lahf
or
hlt
dec
xchg
cmp
lods
testl
nop
nop
sti
push
and
mov
in
gs
xchg
push
sbb
pop
out
ret
inc
cmpsb
mov
add
sbb
inc
push
mov
mov
loope
fwait
shlb
out
movsl
push
fwait
gs
jl
inc
sbb
xchg
mov
fnstcw
cmpsb
inc
jp
mov
jae
and
xor
sbb
pop
inc
test
xor
jnp
orb
push
std
mov
ljmp
xchg
and
ret
imul
jne
rclb
xchg
sbb
in
xchg
xchg
inc
jle
arpl
and
int
cld
mov
xor
fadds
xchg
jecxz
mov
push
lcall
xlat
mov
enter
aad
or
test
push
push
ret
loope
bsf
or
pop
lret
in
shll
stc
imul
cmpsb
jmp
inc
jb
sub
or
push
and
pop
mov
fsubrl
jbe
sub
mov
cmp
mov
sbb
sti
aaa
iret
pop
sub
lds
out
push
outsl
es
inc
out
xchg
fsub
data16
lret
je
fimull
shll
or
jmp
subb
adc
aas
pop
fdivs
xor
mov
clc
cmp
lods
sub
dec
xchg
push
cmp
push
lahf
sbb
clc
xchg
push
lahf
sub
fsubrl
test
cmc
ffree
push
xchg
dec
add
lods
xchg
and
and
lods
data16
mov
push
push
sti
dec
xchg
lret
push
mov
outsb
cmc
bound
clc
or
dec
jne
adc
push
aaa
test
and
push
aad
ror
arpl
and
dec
inc
test
sub
mov
movsb
stos
out
enter
push
loop
xor
sbb
mov
pop
mov
jno
mov
in
jo
push
sbb
push
xchg
xchg
cli
loopne
mov
lcall
jae
and
ret
aad
mov
cmc
fldt
xchg
loope
pop
lea
dec
mov
mov
xor
ret
push
arpl
aas
cli
inc
mov
ljmp
and
in
and
stc
push
ret
cmp
orl
cmpl
cmp
jl
mov
pop
mov
pop
jno
pop
mov
enter
dec
sub
mov
outsb
fisubrl
arpl
daa
cltd
mov
mov
lret
test
les
xchg
inc
icebp
inc
pop
std
mov
mov
filds
inc
dec
sbb
jmp
mov
cmp
dec
pop
mov
xchg
mov
cld
xor
ds
shrl
inc
cld
or
pop
popa
adc
sarb
lock
outsb
xor
lret
leave
xchg
jg
outsb
push
iret
lret
mov
scas
cwtl
xor
xlat
adc
jp
mov
pop
or
fdivrp
jg
push
inc
gs
sub
jno
xor
rclb
inc
insl
test
rcll
inc
sbb
scas
sbb
out
jl
rcrb
sti
cmp
rcl
cmpsb
dec
mov
scas
inc
mov
adc
dec
inc
insb
scas
nop
and
cwtl
mov
lret
int
cmp
cmpsl
pop
xchg
xchg
xchg
mov
dec
jb
push
push
xlat
hlt
sub
mov
mov
cmpsb
mov
mov
pop
inc
out
and
and
and
sbb
pop
shr
stos
push
sti
mov
lret
nop
out
pop
ja
in
pop
divb
add
fistpll
inc
xchg
mov
inc
stos
jne
inc
push
cltd
dec
arpl
scas
mov
cmp
jl
adc
addr16
xchg
mov
cmp
push
jns
and
sub
mov
jl
lcall
fstpl
add
add
divl
dec
sarb
leave
arpl
xchg
and
fidivs
iret
jnp
stos
lds
and
negb
fisubl
xor
dec
add
sti
mov
jb
or
out
out
inc
lcall
sub
jecxz
xchg
mov
pusha
cmp
fldt
popf
mov
mov
inc
jne
in
clc
sub
push
dec
mov
cmp
sub
mov
int
push
aad
dec
mov
jge
jo
jb
pop
movsl
arpl
out
clc
push
push
jecxz
scas
lret
notl
jo
cmpb
pop
xor
mov
push
lahf
xchg
orl
fistps
fidivl
or
push
iret
mov
scas
sub
inc
out
pop
out
xchg
and
fstps
push
mov
lret
orl
sbb
ss
sub
loop
push
inc
mov
int
sbb
sub
jne
lcall
bound
pop
outsb
fimuls
xor
jmp
push
push
test
imul
sbb
add
mov
jo
sti
dec
jne
rcll
pop
movsl
lea
ja
cmpsl
shll
push
sbb
js
jge
mov
and
sbb
popf
ret
pop
not
mov
adc
sub
inc
in
and
ljmp
out
push
xchg
data16
clc
cmp
add
push
notb
or
jb
inc
pop
jg
add
xchg
jmp
pop
or
or
mov
ffree
dec
enter
frstor
sub
adc
lods
jae
scas
inc
and
xor
push
lret
pop
shlb
pop
int3
pop
into
andb
sbb
leave
pop
mov
dec
in
push
push
cmpsb
fbld
and
or
jg
and
int3
xorb
add
xor
fbld
outsb
es
hlt
jge
dec
or
loope
out
subb
js
fdivl
and
lahf
and
lock
cmp
xlat
loopne
xor
pusha
xchg
xor
add
push
lret
push
cmp
iret
sarb
and
arpl
push
mov
mov
repz
ret
dec
lret
addr16
sti
and
xchg
xchg
push
inc
jge
inc
inc
mov
int3
xorb
test
jns
dec
push
adc
jnp
sti
mov
lret
and
mov
in
pop
push
test
fwait
gs
push
insl
fidivrs
pop
xchg
lcall
lahf
fcmovnbe
lock
jg
inc
stos
pusha
out
hlt
cli
loop
jle
int
pop
push
push
arpl
in
lds
mov
mov
mov
inc
pop
mov
mov
jbe
out
aas
xlat
ret
add
int
push
mov
cld
add
lods
stos
arpl
xchg
es
bound
lahf
sub
scas
fs
lods
shl
fnsave
fdivrs
inc
push
cmp
mulb
stos
in
cwtl
cltd
pushf
leave
dec
sbb
or
dec
mov
leave
ret
and
push
in
or
flds
andb
hlt
inc
in
iret
roll
or
aaa
cmp
sub
or
scas
mov
shl
push
in
mov
mov
and
scas
jle
repz
dec
xchg
dec
inc
or
and
js
jmp
dec
mov
mov
inc
pop
dec
adc
test
loopne
mov
jae
pop
lods
iret
pop
and
mov
sub
xchg
ja
xchg
xor
out
out
add
scas
jle
aaa
add
sub
mov
adc
ja
push
jmp
rcrb
xchg
push
out
mov
mov
push
adc
inc
mov
cmpb
xor
jecxz
arpl
daa
or
test
fldl2t
aad
dec
fwait
jp
dec
or
lods
icebp
jne
cmp
push
xor
adc
dec
dec
mov
jge
js
and
push
js
xlat
inc
shr
jnp
adc
cmpl
push
pop
and
jo
mov
xor
pushf
cmp
mov
pop
xchg
movsl
adc
push
mov
jb
cld
movsb
je
fcmovnbe
sub
adc
loope
popf
lret
adc
fxch
shll
jmp
xchg
int3
test
sub
mov
out
inc
insb
ret
pop
jl
lcall
mov
dec
int
call
add
jne
push
push
lea
mov
xor
jl
add
fs
cltd
pop
leave
dec
jecxz
xchg
push
jnp
ret
mov
out
paddusw
push
loop
das
pushf
addl
cmp
inc
in
iret
divb
sbb
pusha
jnp
sarb
cld
push
stc
jnp
in
sbb
call
or
dec
lret
inc
xchg
add
imul
dec
cmp
mov
imul
xchg
fildll
fwait
cltd
push
cltd
js
rolb
js
lds
pop
arpl
js,pt
push
push
or
cmp
es
addr16
hlt
sti
neg
jo
dec
mov
mov
jmp
or
jno
imul
xor
pop
popa
jnp
ljmp
in
xchg
das
mov
push
mov
add
pop
pop
icebp
dec
imul
xchg
inc
dec
daa
ret
adc
mov
inc
pusha
clc
pop
clc
mov
int
push
jecxz
fisttpl
jmp
inc
outsb
nop
out
jg
shlb
push
jl
rolb
jle
repnz
lods
ljmp
add
mov
outsb
mov
hlt
mov
mov
repz
popa
cmp
xchg
xchg
adc
pushl
add
fwait
mov
pop
jmp
adc
in
lods
mov
stos
add
stos
aam
push
push
jp
inc
enter
cltd
out
or
or
pop
push
sub
lock
imul
notl
std
data16
lds
test
or
mov
fldcw
sub
stos
dec
xor
push
in
or
stos
mov
mov
lret
pop
dec
jge
and
in
fstpl
push
loopne
xchg
lcall
sbb
divl
lds
mov
pop
hlt
pushf
lcall
inc
push
daa
imul
dec
or
xchg
popf
lcall
pop
and
jge
les
loopne
ret
ja
cmpsl
jmp
sbb
and
repnz
sub
or
inc
inc
pop
push
cmc
sub
push
mov
enter
aas
sbb
cmp
pop
xchg
cmc
pop
cmp
xor
das
mov
mov
inc
dec
sbbl
adc
adc
sub
ds
out
adc
shlb
pop
mov
lods
mov
cmp
inc
dec
inc
test
jo
inc
cmp
jecxz
xor
ss
xor
pop
cmpsb
or
fxch
sub
decl
fistl
sub
addr16
les
imul
jo
data16
xor
cmpsb
jne
dec
outsl
insb
adc
sahf
ret
push
scas
cmp
outsb
or
in
fnstsw
fwait
or
pop
lock
pushf
and
sub
lret
cwtl
jnp
jb
push
xor
into
aam
xorb
xchg
inc
mov
add
jle
popa
jp
clc
ffreep
lret
outsl
jbe
sbb
stos
jle
mov
popf
aas
fists
outsl
rolb
loopne
jne
add
fcoms
imul
jmp
cmp
aad
pop
jb
stc
xchg
mov
push
scas
int3
popf
adc
shrl
push
mov
sub
repz
xchg
lahf
push
ljmp
cwtl
and
ss
sbb
cld
cmc
and
test
pop
in
lret
subb
adc
or
std
iret
inc
std
add
insl
movsl
jnp
pop
stos
sub
popf
mov
add
lahf
iret
in
adc
sub
pop
stos
jecxz
adc
xlat
adc
cmp
xchg
pop
enter
and
repz
rorl
sbb
fcompl
int
xchg
push
push
cmpsb
and
stc
mov
sbb
xor
movsb
outsb
mov
int3
out
push
adc
pop
ror
sbb
cmpsl
jmp
jl
add
mov
js
sbb
xor
jne
std
arpl
ss
aam
daa
adc
pop
pop
mov
test
mov
pop
push
pop
sbb
jb
sbb
pop
insl
cli
and
loop
xchg
outsl
bt
js
cmp
or
add
push
stc
jb
es
repz
jmp
loopne
adc
mov
shlb
push
test
scas
outsl
scas
daa
jge
imul
sub
inc
or
add
xchg
arpl
jb
stos
dec
inc
enter
or
jl
hlt
lret
test
adc
fadds
fs
dec
stos
fsts
mov
push
mov
add
dec
cld
mov
mov
rolb
fwait
nop
scas
dec
pusha
les
shrl
xor
push
pop
mov
dec
rcl
sub
jmp
push
imul
jl
popa
scas
cmpsl
xor
mov
push
je
xchg
jo
lret
or
cmp
lds
fiaddl
sbb
cmpsl
pop
jg
cmpb
popf
stos
das
lret
xchg
jge
mov
sbb
mov
and
cmp
lods
insl
cmpsl
cmp
scas
sub
mov
in
ss
out
insl
out
push
adc
add
stc
jo
mov
push
insl
mov
nop
xchg
sbb
push
arpl
in
add
sub
mov
mov
mov
cmpsb
pop
out
add
and
mov
divb
xchg
popa
pop
add
fstl
outsb
ljmp
and
mov
inc
bound
push
daa
mov
mov
cmp
adc
jl
xchg
inc
stos
lcall
addb
inc
jle
dec
jnp
test
jb
cmpsb
dec
xchg
sub
outsl
xor
xor
mov
in
adcb
aam
lods
jge
push
add
inc
xchg
pop
xor
jnp
gs
sub
insb
sbbl
xchg
shrd
sub
add
adc
clc
lcall
loop
push
dec
xchg
xchg
push
in
les
pop
out
jg
push
aaa
push
ja
out
mov
not
dec
pop
pop
mov
xor
popa
push
imul
sbb
cmp
lods
out
andl
dec
xchg
out
iret
imul
mov
imul
out
lahf
cmpl
mov
mov
mov
cwtl
xor
pushf
sub
rorb
pop
scas
adc
pusha
xchg
insb
dec
sbb
jbe
rol
lcall
cltd
movsb
dec
cwtl
inc
imul
dec
sub
mov
stc
call
adc
mov
test
cmp
in
iret
sti
jg
jg
mov
call
lods
mov
dec
pop
cmc
cmp
inc
inc
or
push
lcall
int
aad
imul
xor
jnp
negb
roll
ficompl
cmp
and
cmp
stos
jmp
xorl
std
ja
es
aad
push
mov
dec
stc
imul
push
aas
ficoml
adc
sub
sub
mov
outsl
sub
push
inc
mov
and
shr
cmpsb
lock
or
and
mov
xchg
mulb
push
int
scas
cli
mulb
push
arpl
or
pusha
ss
ret
push
repz
sbb
cmp
out
jl
jo
pop
data16
xor
sbb
out
mov
in
mov
xor
test
insb
push
mov
movsl
stos
xor
jns
test
insl
sbb
dec
xchg
dec
fs
imul
in
sbb
inc
mov
add
not
push
js
jge
push
outsb
jge
adc
xor
data16
mov
cmp
in
pop
inc
ret
orl
jle
sbb
lds
push
add
shrb
testl
sbb
and
ja
dec
imul
lret
dec
adc
pmulhuw
cmp
fistpl
xor
pusha
lods
daa
lods
cs
push
jmp
or
bound
jmp
dec
jmp
loope
test
pop
mov
cmc
push
mov
cwtl
lahf
cmp
xor
ss
jbe
movsb
jns
add
and
lret
pop
sbb
pushf
sub
test
std
push
ss
cmp
inc
add
sbb
ss
mov
xchg
or
dec
jge
xchg
test
nop
repnz
mov
inc
sub
aaa
sti
shlb
adc
lods
ja
mov
jno
insl
roll
and
add
pop
ficoml
sbb
ror
mov
mov
lret
add
jle
in
movsb
push
loope
pop
cmp
fadd
rol
lret
sub
adc
mov
fs
into
jle
cmp
push
push
mov
addr16
lds
pop
inc
stos
xchg
sub
cmpsb
fstp
jle
mov
add
out
movsl
leave
popl
aad
cmp
call
mov
fs
sub
stos
mov
jge
mov
imul
jge
outsl
repz
outsl
imul
insb
inc
popf
jbe
mov
cmc
xchg
ss
push
mov
shl
pop
jns
and
repnz
jnp
les
xor
xor
in
jg,pn
add
bound
pop
fildll
sbb
test
xchg
inc
or
loope
jl
cmpb
cltd
mov
ja
scas
push
shll
jp
arpl
cmp
daa
jne
int
ja
pop
pop
scas
xchg
fiaddl
mov
adc
cmp
push
jns
and
mov
and
and
xchg
inc
push
imul
dec
xor
mov
arpl
rorb
aad
dec
and
jne
cmp
inc
sub
cs
sub
scas
dec
icebp
in
cmp
mov
pop
dec
lcall
incb
lret
jb
in
xchg
xchg
in
cltd
movsb
repz
scas
or
punpcklwd
loope
jo
es
jne
mov
dec
dec
cmp
bound
mov
mov
fsts
jl
movsb
dec
mov
ljmp
sub
mov
loope
lret
sar
das
add
add
lea
add
mov
sti
rcll
xlat
mov
stos
aaa
icebp
inc
and
rcrb
or
popa
mov
push
sbb
cmpsb
lahf
andb
lods
sbb
std
in
into
mov
ja
push
dec
cli
in
push
add
test
mov
adc
sub
mov
mov
scas
lcall
sbb
mov
sub
cmpsl
dec
sahf
jg
test
loope
mov
pusha
stos
popa
std
negb
push
jno
lahf
into
push
in
popf
outsb
je
lahf
cld
ret
inc
scas
frstor
movsl
inc
pop
roll
or
adc
pop
mov
dec
int
mov
jns
leave
sti
cmc
sub
icebp
subb
jmp
mov
out
sbb
xchg
rcll
push
mov
je
and
cwtl
test
lods
fdivs
sub
lea
fisubrl
imul
outsb
dec
test
sub
sbb
je
sbb
xchg
loope
push
xlat
push
dec
aad
gs
inc
faddl
cltd
xchg
xchg
and
pop
or
inc
cld
sub
cmpl
shr
mov
inc
shlb
hlt
dec
pop
lds
int3
ficomps
xchg
fs
xchg
stc
adc
jp
inc
dec
pop
cmc
jo
movsb
and
js
jnp
mov
sub
pop
roll
add
cmp
andb
scas
mov
test
pop
out
and
loope
pushf
cld
jb
arpl
and
xchg
shrl
das
lahf
xlat
dec
dec
inc
jg
rcrb
rcrl
mov
cmc
xor
pushf
and
mov
push
push
sbb
call
mov
jbe
jnp,pt
data16
add
movups
js
push
xor
cmpsb
mov
mov
xchg
xchg
xchg
sbb
fbld
cmp
dec
jle
dec
rclb
sarl
aaa
adc
cs
jmp
ds
adc
int3
lods
in
lret
in
ret
fcomps
pop
xor
rcrb
add
mov
test
dec
ja
test
pop
sub
stc
cs
cmp
push
pop
lret
pushf
xor
je
movsb
cmp
dec
xchg
push
fdivrl
lds
mov
orl
xchg
adc
pop
inc
or
xlat
ljmp
cmp
mov
jmp
inc
test
xchg
adc
jb
and
and
cmp
lods
fpatan
int3
cmp
add
mov
sub
fwait
stos
add
aas
scas
cmp
lret
mov
and
insl
leave
mov
cmpsb
inc
inc
pop
xor
ror
cs
scas
dec
push
int
mov
add
pop
pop
inc
ja
mov
gs
jmp
sbb
leave
inc
mov
fistpll
inc
inc
outsb
mulb
movsl
sub
in
mov
aam
cmpsl
push
mov
pop
in
int3
outsb
out
sbb
pop
sub
mov
int
imul
scas
pop
cmpsb
xchg
ss
pop
inc
jg
mov
xchg
outsb
pop
adc
rorb
and
add
pop
aam
or
ret
pop
or
fimuls
ja
mov
fisubrs
sbb
call
mov
and
arpl
mov
out
jo
int
sub
mov
push
xchg
rcr
dec
repnz
je
imull
lret
cmp
out
popf
scas
sbbb
rcrb
cmc
shrb
or
in
hlt
jo
mov
jb
loope
pop
push
das
add
cmp
jecxz
dec
scas
xchg
test
dec
sbb
and
xchg
fs
shrl
cmpsb
mov
sbbb
pop
inc
fisttps
and
gs
shll
adc
mov
int3
sub
jge
fdivl
pop
dec
xor
fldcw
pop
dec
aam
pop
jmp
lock
fwait
call
subl
mov
mov
mov
arpl
mov
imul
mov
jecxz
imul
ds
mov
bsf
arpl
pop
add
xor
in
daa
push
or
sub
push
mov
jns
adc
in
das
inc
jmp
mov
push
and
pushf
ds
outsl
or
pop
addb
adc
jmp
sbb
es
cld
or
inc
lret
xor
sarl
push
push
pop
mov
shll
adc
or
add
xchg
shrl
stos
outsl
and
lods
icebp
sub
aas
mov
enter
insl
je
adcb
jecxz
insl
dec
mov
xor
rolb
and
inc
mov
je
pop
push
xchg
jl
daa
movsl
fnstenv
push
inc
inc
jbe
stc
cmpsl
xor
cmpb
ljmp
or
push
or
mov
jle
dec
clc
hlt
mov
xchg
mov
adc
jp
decl
pop
pop
push
aam
lea
pop
mov
cmp
xchg
inc
aaa
mov
and
sarb
movsb
xchg
and
jne
insb
cmp
pop
pop
sbb
sbb
push
cmp
adc
psubw
sub
mov
loop
es
sub
mov
bound
hlt
push
xchg
and
cld
sub
sub
sub
mov
cs
dec
and
and
aam
popa
ja
js
mov
imul
loop
rcrl
and
pop
enter
mov
ret
insl
cmpsb
mov
adc
in
sub
movsl
mov
icebp
popf
jl
sarb
pop
ror
dec
mov
lds
xor
in
outsb
lret
jne
sub
push
movsl
lds
adc
sub
and
in
mov
ss
cltd
xor
dec
or
shlb
fdiv
popf
add
mov
cmp
adc
icebp
add
xchg
jns
lret
mov
outsb
test
mov
adc
addr16
xlat
dec
mov
pop
ret
push
dec
rcl
pop
mov
xchg
mov
xchg
xchg
pop
cltd
adc
bound
loopne
push
insb
mov
mov
gs
inc
or
mov
sbb
jmp
mov
push
sbb
mov
adc
pop
loop
dec
sbb
lret
jg
outsb
pop
movsl
dec
shr
stos
xchg
pop
cwtl
xchg
inc
cmp
cmp
bound
mov
pop
cs
loopne
jge
cmp
ror
mov
lods
call
stos
dec
pop
scas
sub
fstpl
rcr
ja
fdivrl
testl
int
mov
into
dec
aas
jp
adc
fs
pop
inc
cmp
add
les
adc
sbb
int
repnz
sbbl
mov
loopne
pop
mov
stos
cli
lahf
lds
lods
mov
xlat
div
rolb
xchg
notl
jl
gs
roll
js
and
in
inc
aad
in
mov
mov
adc
in
mov
jg
pop
mov
push
push
cs
cmc
add
cli
pusha
test
icebp
sbb
adc
sti
jp
insl
ja
jecxz
xor
xchg
adc
fisubl
pop
pinsrw
and
outsl
dec
fidivl
add
cmp
lret
adc
push
lods
pop
lret
insb
lret
add
xor
fisubrs
mov
out
xchg
fsubs
dec
andl
cmpl
mov
loop
cli
testb
iret
mov
mov
xor
jle
testl
xor
ret
push
mov
or
idiv
aas
cmpsl
lahf
xor
or
or
dec
dec
test
pop
dec
add
mov
sbb
push
lea
rcrb
xor
mov
xor
jl
and
mov
mov
lcall
in
arpl
and
jmp
xchg
jno
sub
lods
and
pop
pusha
pushf
stos
mov
push
and
jb
xchg
test
xor
scas
cmc
mov
mov
daa
js
xchg
adc
inc
push
mov
inc
ret
push
mov
mov
cltd
push
imul
hlt
insl
movsl
xlat
inc
std
jns
ret
lcall
push
sbb
cld
xchg
push
lea
aaa
inc
icebp
adc
or
mov
dec
inc
icebp
and
hlt
ret
mov
and
jmp
push
push
push
lods
test
jnp
inc
enter
mov
mov
mov
cs
mov
sub
push
adc
push
enter
mov
test
fisttpll
pop
xchg
adcb
divl
filds
add
fistps
scas
jbe
xchg
mov
push
fisubs
push
add
cltd
pop
mov
rep
push
push
in
jb
cmc
push
ret
ljmp
xor
stos
mov
or
lods
movsl
add
xchg
test
jo
fcoml
xchg
xchg
addb
pop
mov
clc
adc
pop
jg
adc
rcr
lret
enter
add
ret
sbb
push
push
stc
rolb
adc
or
in
jbe
cmp
loope
test
jbe
fwait
scas
adc
insb
scas
pushf
xorb
std
test
mov
adc
pop
cmpsb
cmpl
xchg
adc
pop
jae
cli
adc
pop
dec
dec
xor
dec
mov
and
scas
jl
xchg
mov
jmp
cmp
out
cmc
orl
mov
mov
xchg
out
mov
test
inc
fdivrp
das
push
je
js
popf
nop
test
mov
mov
into
sbb
int3
and
movsl
sbb
adc
pop
and
scas
fldenv
loope
cmp
fwait
mulb
sub
out
add
jae
lods
and
sahf
hlt
pop
dec
mov
xchg
inc
push
mov
les
xor
movsb
xchg
mov
loope
movsb
xchg
mov
lock
dec
or
inc
fistpl
and
pop
jb
add
mov
jbe
xchg
fstpt
sbb
pop
pop
sub
add
sub
nop
xchg
adc
push
adc
loope
leave
out
movsl
pusha
and
cwtl
adc
pop
aaa
lods
ss
jmp
jbe
ret
xlat
pop
or
outsb
inc
clc
or
andl
roll
jmp
sbb
jbe
mov
lods
stc
out
mov
les
xchg
shll
xchg
icebp
jno
and
xor
test
lcall
add
inc
or
ss
roll
cmpsl
pop
xor
insb
push
push
aas
push
inc
push
jo
fs
mov
fildll
testl
mov
inc
sbbb
sbb
lock
jo
adc
jb
insl
imul
mov
xlat
jbe
sbb
lret
in
std
sbb
pop
cwtl
js
xchg
jle
jmp
mov
push
add
mov
pushf
cwtl
and
lods
or
xorb
adc
js
imul
movsl
sub
or
inc
mov
roll
lahf
cli
fsubrs
or
jnp
subb
add
adc
or
ds
jns
mov
cmpsl
leave
push
jae
pop
and
mov
push
clc
xchg
rcrb
stos
lds
mov
aaa
dec
out
test
xchg
ret
cwtl
inc
xor
xor
mov
mov
push
mov
sti
xlat
cmp
and
idivl
lcall
cmpsl
adc
out
pop
cld
int
mov
push
out
pop
xchg
lods
aas
mov
scas
xor
not
iret
lods
pop
sbb
clc
inc
sub
out
addr16
push
iret
xor
pop
fs
in
mov
xchg
test
movsb
inc
dec
xor
mov
jnp
mov
inc
cmp
nop
andl
hlt
xchg
lret
fidivs
add
adc
imul
inc
sbb
aam
push
stos
lock
adc
pop
aas
mov
loopne
or
pop
adc
push
push
xchg
xor
xchg
push
fwait
fwait
clc
shll
js
out
data16
roll
and
mov
add
int
xchg
pop
and
adc
jmp
push
test
dec
das
jmp
xchg
std
lock
loop
in
test
loopne
jmp
inc
in
loope
xchg
adc
and
xorl
pop
shlb
mov
adc
scas
lods
stc
iret
mov
and
outsl
mov
xlat
jge
sti
inc
inc
lods
inc
adc
pop
sbb
xlat
push
addr16
adc
ja
ret
lock
hlt
adc
push
sub
mov
mov
jle
arpl
jne
enter
inc
sbb
jp
push
mov
mov
cmc
fbld
mov
negl
push
xchg
and
rcll
xor
xchg
mov
adc
xchg
pop
inc
mov
stc
orb
xlat
inc
lods
jae
mov
mov
outsb
stos
out
ret
mov
fidivs
testl
push
adc
sbb
mov
lret
fsub
jecxz
fwait
mov
sbb
pop
jo
sbb
lcall
and
push
into
inc
pop
sub
sub
and
mov
out
imul
xchg
cmp
mov
dec
stos
mov
inc
push
sbbb
ret
inc
outsl
jmp
out
mov
mov
sub
out
mov
cmp
aas
bnd
add
call
notl
sub
pop
or
leave
inc
jmp
mov
xchg
mov
or
xchg
lea
shr
in
dec
mov
mov
rcrb
ret
mov
mov
aam
adcl
movsl
adc
mov
jns
arpl
loopne
cmpsb
jns
push
ss
shlb
bound
inc
xchg
js
mov
mov
data16
sub
sar
cmp
pusha
imull
shl
fsubrs
and
movsb
pusha
jle
loope
xchg
sbb
dec
push
mov
cmp
arpl
loope
lret
add
fbld
mov
adc
inc
jmp
sub
mov
popa
push
and
inc
mov
sub
aam
fst
inc
fbld
out
sahf
fdivp
aam
adc
xor
fldt
stos
inc
mov
stos
aad
leave
adc
xchg
adc
inc
mov
or
pop
test
gs
add
or
sub
incl
popa
mov
mov
xchg
mov
pop
ljmp
mov
pushl
loopne
andb
sbb
into
ret
dec
or
push
or
psrlw
clc
cmpsb
xor
mov
ficoml
mov
push
imul
ja
aaa
ret
add
sbb
out
out
hlt
mov
push
cmc
shlb
fwait
in
adc
xor
sbb
and
mov
js
xchg
or
ljmp
adc
add
and
repnz
adc
add
std
repz
fbstp
pop
mov
inc
and
push
push
inc
adc
out
mov
mov
popf
mov
shrb
push
pop
xchg
fstps
dec
rol
arpl
xchg
or
adc
and
lods
cmp
mov
daa
in
fwait
mov
stos
or
sbb
mov
sbb
cld
and
lret
gs
and
in
adc
dec
sti
aaa
jo
xor
jg
xor
nop
xchg
xlat
out
xchg
in
xor
into
cmp
fstpt
jle
loop
push
adc
sbb
in
sbb
rcrl
add
sub
mov
jae
push
adc
popa
cmp
and
jmp
dec
push
lds
repnz
lea
mov
mov
xchg
pusha
dec
lret
repnz
add
cmp
cwtl
xchg
push
mov
loop
das
loop
inc
jno
inc
and
xor
jno
sub
push
mov
nop
cmpsl
mov
ds
dec
lods
stc
call
push
lds
mov
aam
rorb
cmp
mov
mov
pop
lahf
dec
jle
insb
out
pop
into
lret
mov
add
adc
adc
sbb
pop
dec
sbb
inc
fidivrs
imul
imul
enter
sbb
ret
xchg
adc
pop
into
sub
and
mov
pop
outsl
xor
cmpl
cmp
mov
dec
mov
adc
jb
inc
pop
fiaddl
mov
sbb
add
push
loope
cmpl
jns
rcrb
popa
cmpsl
jg
xor
adc
inc
sar
or
sub
shl
negb
mov
test
cs
pop
enter
fnstenv
fcomps
scas
cmp
jmp
pop
xchg
sub
pop
xchg
lock
mov
