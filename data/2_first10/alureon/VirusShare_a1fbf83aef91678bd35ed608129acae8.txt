push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
push
jmp
lea
jmp
push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
movsl
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
mov
nop
xorps
nop
sub
nop
xorps
nop
xor
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
call
jmp
pushl
jmp
mov
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
mov
jmp
xor
jmp
push
add
pop
nop
xorps
nop
inc
nop
xorps
nop
je
nop
xorps
nop
sub
nop
xorps
nop
jmp
nop
xorps
nop
add
nop
xorps
nop
movl
nop
xorps
nop
xor
nop
xorps
nop
lea
nop
xorps
nop
lea
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
push
nop
xorps
nop
lea
mov
jmp
mov
jmp
mov
nop
xorps
nop
mov
jmp
pop
jmp
mov
nop
xorps
nop
push
jmp
push
jmp
xor
jmp
push
das
pushf
mov
jmp
xor
push
ficoms
fists
ficoms
inc
add
inc
nop
xorps
nop
push
nop
xorps
nop
addl
nop
xorps
nop
push
nop
xorps
nop
addl
jmp
outsl
jo
push
jmp
cmp
mov
nop
xorps
nop
call
nop
xorps
nop
add
nop
xorps
nop
mov
nop
xorps
nop
lea
nop
xorps
nop
nop
nop
xorps
nop
nop
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
call
nop
xorps
nop
xor
or
nop
xorps
nop
nop
nop
xorps
nop
cmp
jmp
test
jmp
jmp
nop
xorps
nop
dec
nop
xorps
nop
cmp
nop
xorps
nop
je
nop
xorps
nop
add
nop
xorps
nop
nop
nop
xorps
nop
push
nop
xorps
nop
subl
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
pop
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
pushl
nop
xorps
nop
pushl
nop
xorps
nop
push
nop
xorps
nop
movl
nop
xorps
nop
call
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
jmp
cmp
jmp
pop
nop
xorps
nop
add
nop
xorps
nop
mov
nop
xorps
nop
add
nop
xorps
nop
pushl
pop
jmp
inc
jmp
sub
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
mov
nop
xorps
nop
add
nop
xorps
nop
cmp
nop
xorps
nop
jb
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
push
nop
xorps
nop
pop
nop
xorps
nop
xor
jmp
push
jmp
mov
nop
xorps
nop
mov
nop
xorps
nop
movzbl
nop
xorps
nop
movzbl
nop
xorps
nop
push
add
pop
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
add
sub
nop
xorps
nop
xor
or
nop
xorps
nop
cmp
nop
xorps
nop
jb
nop
xorps
nop
xor
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
inc
nop
xorps
nop
mov
nop
xorps
nop
cmp
nop
xorps
nop
jb
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
xor
nop
xorps
nop
pop
nop
xorps
nop
test
nop
xorps
nop
jbe
jmp
add
jmp
movzbl
nop
xorps
nop
mov
nop
xorps
nop
movzbl
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
xor
push
add
pop
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
dec
nop
xorps
nop
jne
nop
xorps
nop
mov
nop
xorps
nop
mov
jmp
jne
jmp
jbe
nop
xorps
nop
sub
nop
xorps
nop
movzbl
nop
xorps
nop
mov
nop
xorps
nop
movzbl
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
lea
nop
xorps
nop
mov
nop
xorps
nop
nop
jmp
add
jmp
mov
nop
xorps
nop
mov
nop
xorps
nop
nop
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
movzbl
nop
xorps
nop
xor
nop
xorps
nop
inc
nop
xorps
nop
dec
nop
xorps
nop
jne
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
jmp
sub
jmp
pop
nop
xorps
nop
add
nop
xorps
nop
push
nop
xorps
nop
ret
nop
xorps
nop
xor
add
nop
xorps
nop
shr
nop
xorps
nop
mov
nop
xorps
nop
shl
nop
xorps
nop
mov
nop
xorps
nop
mov
jmp
push
jmp
push
nop
xorps
nop
xor
nop
xorps
nop
xor
nop
xorps
nop
mov
nop
xorps
nop
add
jmp
pop
jmp
je
nop
xorps
nop
sub
nop
xorps
nop
jmp
nop
xorps
nop
xor
nop
xorps
nop
pushl
pop
nop
xorps
nop
lea
nop
xorps
nop
lea
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
lea
nop
xorps
nop
add
nop
xorps
nop
xor
push
add
pop
nop
xorps
nop
add
nop
xorps
nop
ret
add
aad
leave
lods
in
mov
sub
xlat
leave
sbb
and
nop
xchg
sar
out
adc
push
movsb
cmp
xchg
adc
ret
loop
insb
addr16
popa
xchg
cli
adc
dec
enter
dec
push
xor
mov
push
pop
xor
jae
cli
fstps
mov
jecxz
jne
jnp
push
lahf
test
and
or
dec
jae
ljmp
inc
std
daa
xor
stos
fcoms
in
data16
cmpsl
pop
pop
int
pop
adc
adc
mov
inc
jne
or
mov
mov
mov
dec
cwtl
jge
lcall
sub
mov
xor
popa
push
out
pop
ficoml
sub
dec
popa
jmp
mov
mov
shlb
jge
and
sbb
outsl
aas
ficoml
push
jb
cmp
mov
popf
and
dec
fisttpl
jb
push
into
aaa
xor
sub
or
mov
cmp
fstpl
scas
test
lret
mov
ss
sbb
fldenv
push
sbb
mov
shll
mov
sbb
sbb
and
repz
das
scas
cmp
push
fiadds
push
cmpsl
adc
jns
int
dec
les
add
sub
or
pop
fcmovbe
sbb
insl
xor
add
scas
or
push
pusha
loope
insl
mov
fcomps
in
dec
stc
jo
push
incl
xchg
stos
xchg
cmpsb
orb
int3
add
das
data16
mov
dec
inc
jge
out
sbb
push
pop
pop
aaa
cmpb
sbb
cmpb
jp
push
shll
cli
jb
movsb
shl
sbb
andb
loop
pop
adc
xor
mov
sbb
push
aas
cld
push
cmp
jecxz
add
aaa
call
mov
adc
xlat
stos
sub
movsb
cwtl
pop
dec
hlt
fldenv
pop
jg
inc
jnp
pop
lcall
pop
out
dec
rcrb
jp
fcomps
test
xchg
ds
pop
push
sar
cmpl
push
cmpsl
or
repnz
jb
imul
je
jae
lock
pop
imul
jp
into
in
mov
imul
sub
mov
xchg
pop
add
or
dec
inc
sbb
add
rcl
pop
mov
mov
mov
int
shll
ficoml
cmp
mov
imul
jmp
lea
and
int3
cmp
out
aaa
call
fwait
xchg
mov
and
cmp
test
add
or
sub
sub
pop
jno
pop
cmp
lds
aaa
decl
call
rcll
arpl
jns
dec
mov
adc
sbb
scas
je
adc
xchg
xor
inc
adc
test
sub
pop
jae
sbb
jne
dec
adc
mov
cltd
jnp
out
cli
and
jmp
add
xor
in
dec
int
add
push
pop
push
punpcklwd
stos
jge
add
pusha
and
out
loope
shr
std
pushf
jge
js
ret
nop
loopne
shll
cld
pop
repz
cmp
jbe
dec
or
mov
ret
mov
test
out
out
fwait
xchg
sbb
scas
adc
mov
and
inc
fiadds
inc
push
cltd
add
mov
rorl
push
data16
mov
jnp
sti
jns
daa
or
dec
cmp
mov
push
cmc
mov
jp
cmpsb
data16
mov
xor
xchg
push
repz
xchg
push
test
outsl
flds
ds
fistl
mov
jnp
js
pop
sub
jne
shlb
and
adc
test
adc
cmp
mov
pop
sub
stc
xor
push
mov
pop
leave
std
and
or
xchg
adc
xorb
rcrl
mov
dec
lcall
dec
mov
add
push
in
adc
push
mov
push
push
mov
or
out
test
jo
push
or
pop
sub
lock
adc
add
iret
or
lea
fnsave
mov
out
xchg
pop
pop
das
cmp
repnz
adc
cmp
mov
push
loope
pop
cs
lods
cmp
or
pop
fcomps
mov
mov
fcomip
xchg
cmp
dec
jne
or
pusha
dec
rcl
mov
mov
lods
push
xor
jmp
je
jecxz
jp
mov
pop
dec
jl
out
popf
push
fildl
iret
cld
aam
repz
cmpsl
jnp
mov
sub
xchg
int
hlt
push
shl
sti
dec
gs
or
popf
mov
mov
sub
and
dec
insl
jmp
pop
xor
push
sbb
loopne
out
insl
insb
ret
ss
sub
dec
xchg
push
fiadds
xchg
stos
cwtl
xchg
xor
mov
mov
in
lret
sbb
cmp
ljmp
lea
and
sarb
or
mov
xchg
test
mov
icebp
xchg
mov
cwtl
xchg
pop
enter
xchg
mov
cmp
stos
adc
and
cmp
nop
cmp
mov
xchg
and
add
iret
lods
lahf
mov
and
iret
mov
lods
jmp
lock
aaa
xchg
fisubl
mov
in
ja
dec
sbb
bound
lock
mov
pop
push
jno
movsb
inc
divb
ds
sbb
shrl
inc
xor
xchg
lret
rcr
add
dec
inc
sbb
sub
dec
xchg
xchg
lcall
pop
jmp
aas
jnp
xchg
cli
daa
cmp
popf
inc
and
sub
mov
pop
push
dec
imul
pop
sbb
divb
jnp
outsb
add
inc
and
cwtl
xor
test
pop
lods
lods
inc
xchg
adc
fildll
cli
mov
cmp
and
adc
adc
inc
andl
pop
mov
daa
dec
sub
adc
mov
and
adc
shr
jo
dec
sub
int3
imulb
repnz
lock
divl
inc
and
xchg
pop
rclb
data16
movsb
sub
xor
jg
insb
ret
xchg
aam
mov
sub
and
xchg
mov
inc
add
out
loope
ja
out
lods
cmpsl
in
fwait
test
clc
loop
lret
out
xchg
orb
ret
lods
cmc
add
inc
cmp
mov
ljmp
orl
pop
lahf
inc
insl
mov
add
loopne
mov
sahf
dec
mov
and
ret
and
sub
xchg
push
shrl
ds
pop
push
push
out
movsb
imul
shl
or
fnstsw
jmp
aaa
jle
repnz
mov
scas
sarb
pop
xchg
cmc
inc
rclb
dec
pop
cmp
pop
mov
cmp
adc
test
int
adc
into
mov
sub
sub
jl
jnp
repz
pop
in
push
cmpsb
std
pop
das
shrl
out
stos
in
and
mov
std
xchg
jne
cmp
jmp
sub
rcr
out
sub
xchg
outsl
test
push
loope
jae
lock
xor
and
mov
arpl
sub
push
mov
mov
into
jge
inc
mov
xor
xchg
inc
out
sbb
xor
push
pop
push
adc
pop
jo
test
stos
pop
enter
mov
call
leave
sbb
sub
jge
stos
add
leave
fs
mov
adc
aas
movsb
and
enter
xchg
mov
popf
insl
mov
lret
pop
cmpsb
out
sub
pop
mov
mov
lea
les
test
popa
sbb
cmpsb
or
js
xchg
sub
jmp
loopne
clc
lods
repz
je
mov
inc
mov
inc
mov
mov
cmp
out
xlat
mov
fcompl
xchg
jmp
outsl
lock
out
ret
mov
mov
inc
push
push
pop
in
lret
push
enter
repz
fmull
fisttpll
sbb
jae
sub
cmp
pusha
pop
pusha
xorb
inc
fdivs
mov
add
ss
inc
jo
and
mov
add
subl
sbb
cli
loop
pop
xchg
mov
or
push
or
jae
mov
and
add
mov
cmp
push
mull
call
ror
xchg
xchg
inc
adc
adc
js
stc
adc
pop
ret
in
mov
inc
repnz
rclb
dec
push
shlb
add
cwtl
and
cmp
lahf
flds
cld
int3
push
fnstcw
sub
js
scas
popf
pop
sbb
mov
lock
add
mov
jp
popl
bound
xor
fdivp
sarb
nop
cld
rorl
mov
xor
cld
hlt
xor
pusha
lret
dec
xlat
sbb
loopne
iret
cmp
sbb
push
and
or
sub
ja
in
add
outsl
test
pop
cmp
jge
int
sub
push
ja
sub
xor
add
das
in
loopne
movsl
lret
ret
shl
cli
pop
lods
fmull
push
je
cmc
xchg
mov
ss
out
fs
addb
lcall
and
mov
push
outsb
pop
mov
add
dec
mov
xor
xchg
rcr
sbb
loopne
push
ret
xor
jne
sbb
add
pop
xor
fmuls
jecxz
mov
fwait
xor
mov
mov
popa
cli
popf
pop
inc
or
das
adc
fldpi
iret
in
roll
or
mov
fnsave
pop
cmc
pop
push
or
and
fcmovbe
testl
mov
inc
cmp
add
sbb
jb
push
les
xchg
pusha
into
xor
jbe
fsts
cmpsl
loop
shrl
or
hlt
sbb
lcall
js
or
jo
pop
hlt
xchg
push
fisubrs
out
sub
sub
jne
mov
pop
and
push
push
jb
xor
sub
push
dec
push
cmp
out
add
xor
fdivrs
pop
lods
push
sbb
and
inc
sbb
fwait
call
xlat
sti
hlt
mov
lods
mov
jg
repz
call
cmpsl
jne
fisttpl
xchg
repnz
and
push
sahf
pop
jne
or
and
mov
js
addr16
xlat
ret
fs
pop
dec
jbe
das
jo
mov
mov
push
sub
out
ja
inc
or
xchg
fistpll
fcomi
insb
inc
push
mov
and
sti
dec
mov
out
div
outsl
sub
fistps
mov
xchg
bound
xor
std
insl
aam
cmp
push
dec
lcall
scas
in
pop
dec
jmp
mov
xchg
cmp
dec
or
add
xlat
jnp
lret
jne
addb
mov
popa
xchg
mov
aad
fdivs
leave
pushf
imul
sbb
xlat
cmpsl
pushf
push
jl
out
jl
dec
pop
sub
fwait
mov
lods
pop
xor
cld
jns
cmp
cli
mov
aad
imul
aaa
aam
fwait
inc
push
jae
or
sub
lret
sub
xor
inc
add
pusha
cmp
outsb
xchg
bound
daa
xchg
es
ja
xchg
enter
push
push
mov
mov
and
and
cmp
enter
and
outsl
fidivl
lret
push
mov
pusha
xor
xchg
test
cmpsb
clc
push
sub
add
inc
jle
jae
push
leave
pop
push
jl
mov
cmp
sbb
and
adc
out
lahf
jne
enter
out
scas
outsb
sub
and
fidivrs
and
mov
icebp
sbb
lods
out
out
cmpsb
pop
nop
or
cmpsb
dec
lret
mov
repnz
cmp
test
mov
inc
into
mov
adc
ret
sbb
mov
pop
fcmovbe
js
lods
in
mov
push
or
sub
pop
mov
fstl
shlb
jb
data16
sub
mov
cmp
jmp
push
shl
adc
ror
xor
test
jb
je
das
adc
mov
in
inc
les
test
jnp
push
and
call
dec
sar
repz
mov
int
sub
push
out
xchg
test
imul
cmp
pop
negb
loope
push
push
mov
mov
inc
popf
filds
pop
dec
adc
mov
andb
insb
aas
pop
js
les
iret
mov
push
icebp
pushf
and
repz
fsubs
in
xor
or
and
cmpsl
xchg
xchg
sub
cmp
mov
jae
test
mov
lods
adc
jno
xchg
out
lods
add
push
int3
int3
lret
int3
jge
clc
ret
jne
pop
sbb
je
adc
lret
inc
fidivs
xor
mov
cmc
rolb
jne
in
xchg
in
jl
cmc
and
js
adc
int
xlat
push
lahf
in
or
add
sub
fwait
addr16
lods
insb
adc
inc
or
lds
insb
dec
aas
inc
cltd
push
and
js
and
cli
pop
test
mov
add
mov
jge
inc
aas
push
scas
dec
and
pop
cmpl
das
cltd
inc
loopne
jo
aad
cmp
ror
jle
rolb
cli
sub
adc
sbb
ror
push
mov
pushf
dec
js
ficompl
test
or
or
dec
test
xchg
int
orb
cmp
or
or
mov
nop
jl
pop
mov
outsb
shr
mov
adc
je
sub
pop
std
addb
inc
popa
lock
stos
add
or
imul
push
addr16
push
push
inc
test
nop
icebp
cmpsl
xchg
enter
xor
mov
add
in
dec
incb
pop
mov
popf
or
sub
pusha
fldl
mov
cmpsl
sbb
jmp
adcl
xchg
push
mov
mov
ja
mov
inc
pop
enter
add
movsb
js
jne
scas
push
iret
mov
repz
stc
int3
in
mov
stos
inc
out
repnz
mov
shlb
imul
loopne
jo
mov
mov
dec
mov
inc
pop
ss
and
fsubp
daa
int
fwait
mov
in
push
fldenv
scas
inc
jle
ljmp
lods
inc
call
lods
lahf
sub
scas
cld
and
sbb
std
rcr
xor
pop
xchg
subl
and
push
adc
mov
jns
in
sub
std
adc
mov
push
sub
or
lahf
jl
cmc
mov
pop
or
in
pop
inc
dec
push
cmp
inc
mov
ljmp
addr16
cmp
jo
ja
and
lods
xor
sub
sahf
dec
iret
or
inc
mov
mov
outsl
int
rorb
pop
and
int
pusha
pop
pop
test
dec
ss
hlt
adc
lods
mov
les
cmp
cmp
add
out
or
lea
sbb
mov
mov
sti
and
pushf
push
sti
adc
outsl
test
jo
inc
dec
ss
sarb
xchg
aaa
xchg
call
pushf
adc
cmp
ljmp
push
into
xorl
outsb
gs
jbe
sarl
sub
xchg
sbbb
cmp
cmpsl
mov
lret
mov
pop
jecxz
in
dec
sbb
int3
cmpsb
jo
sub
bound
ror
cmpsb
dec
rolb
sti
aad
and
ss
je,pt
mov
mov
push
mov
mov
add
jbe
sub
out
dec
add
mov
enter
xchg
aaa
insl
inc
pop
xor
aad
loopne
jns
in
sti
pop
sbb
and
or
pushf
fidivl
sbb
or
pop
sbb
and
fwait
loope
mov
das
cmpsl
inc
xchg
fldt
cmc
bound
iret
inc
and
insl
fsub
xchg
sub
leave
sbb
cwtl
movsl
mov
mov
adc
lahf
jmp
fistl
push
loopne
mov
lods
out
inc
pop
add
xor
int
dec
inc
daa
sub
adc
daa
mov
cmp
jbe
rcll
aas
arpl
cld
insl
mov
rcr
xlat
jnp
xor
jns
popa
add
fadds
js
loopne
inc
sub
insb
enter
enter
cmpsl
push
fstp
jmp
xchg
and
push
xchg
test
test
add
sbb
ret
aas
fidivrl
mov
sub
nop
push
mov
dec
test
lret
jl
inc
jns
lods
clc
push
cld
pop
es
mov
xor
xor
clc
mov
iret
clc
jle
and
adc
jno
lock
jp
mov
fdivr
insl
inc
loope
out
movsb
or
cmpsl
andb
or
out
inc
fdivs
mov
pop
jno
sbb
add
aam
pop
movsl
fdivrl
pop
outsb
fs
pop
out
mov
ja
inc
fnstenv
lret
mov
and
int3
sbb
push
lret
loope
xor
popf
dec
flds
cmc
mov
xchg
fisttpl
jno
sbb
in
mov
aas
adc
fldl
clc
aam
fdivrl
push
stos
and
xchg
in
sbb
gs
cld
cld
std
cmpsl
add
int
jb
fcomi
dec
sub
test
insl
adc
dec
call
mov
sub
jg
in
int3
lret
jns
push
dec
and
and
daa
test
xchg
shlb
pop
push
xchg
stc
xchg
and
add
or
std
int
std
pop
pop
xchg
push
pop
pushf
sbb
xchg
jmp
inc
inc
loopne
sub
out
bound
mov
fwait
add
fdivl
mov
cld
pushl
outsb
or
cs
repnz
cwtl
and
lds
fidivs
jbe
in
adc
adc
pop
aad
and
mov
xchg
xchg
mov
insb
jo
insl
test
jne
popa
push
mov
cmc
lahf
adc
pop
pop
sbb
mov
adc
pop
jmp
popa
repnz
shrb
stos
push
and
push
imull
fdiv
cltd
jbe
jmp
popa
ds
push
and
stos
popf
xchg
jb
mov
push
orl
inc
inc
nop
sub
jbe
aas
sub
icebp
push
mov
lcall
adc
adc
mov
add
pop
clc
insb
and
mov
lret
mov
push
push
xchg
xchg
movsl
sub
aaa
fcoml
daa
jb
not
adc
jecxz
outsb
insb
decb
jb
test
nop
mov
outsl
je
sbb
mov
sbb
mov
fmull
rorb
das
outsb
pushf
dec
clc
subl
xchg
mov
sub
pop
sub
pop
dec
fsubrp
mov
hlt
cli
push
stos
clc
ss
mov
jns
sub
xchg
adc
mov
cmpsb
aad
cmp
jo
jmp
sbb
shrb
cmp
add
cmp
lds
js
push
stc
cmp
loope
insl
lahf
cli
stos
fnstenv
cmpsb
lahf
inc
leave
repz
shlb
dec
jae
xchg
mov
push
rcrb
jle
xor
mov
std
cmp
sbb
ja
mov
xchg
stos
in
fidivl
mov
movsl
mov
xchg
sub
loope
lods
adc
loopne
adcb
das
mov
adc
and
mov
cmp
scas
rorb
imul
jno
sar
sub
es
and
mov
cmp
repz
out
mov
cmp
loop
out
rclb
lods
adc
fdivl
mov
dec
rorl
adc
in
rcrb
fsubs
jb
orl
pop
pop
push
fsts
add
in
add
roll
insl
pop
imul
mov
nop
test
xchg
cmp
xchg
cmpb
test
sbb
inc
sahf
leave
push
cmp
rclb
sub
mov
add
mov
cltd
cmp
or
pop
pop
lods
inc
push
mov
je
or
stos
mov
std
fnstsw
mov
jns
les
or
xor
or
loope
lret
inc
jg
push
inc
out
adc
sti
xchg
push
outsl
scas
xchg
pop
call
mov
pop
fldenv
movsl
and
cs
je
int3
inc
xchg
inc
daa
mov
sub
xchg
jb
jp,pn
test
mov
mov
nop
pop
inc
cmpsb
out
jmp
cs
sub
icebp
push
mov
lret
pop
aaa
xor
into
cmp
out
mov
push
jno
push
cmp
repz
movsb
and
xor
or
sti
push
stc
add
push
and
mov
rolb
pop
fdivl
not
lret
sbb
jns
std
and
xor
mov
test
jno
outsl
test
pop
xchg
cmp
inc
movsl
mov
test
push
ficompl
or
cmp
cmp
mov
popa
add
mov
mov
cmp
or
dec
aas
hlt
sahf
cmp
pop
mov
mov
mov
pop
sbb
in
cli
xchg
mov
dec
inc
xlat
fwait
clc
fxch
xor
test
je
pusha
jle
shll
adc
xor
fnstsw
sbb
aaa
jno
pop
pop
xchg
push
dec
push
ret
lcall
pop
xlat
movsl
push
jle
jne
and
ret
scas
out
jmp
das
iret
fsub
inc
or
mov
sti
lret
xor
movsb
pop
mov
popa
mov
popa
outsl
pop
and
pop
jb
rcll
ret
mov
lock
cli
jmp
xchg
xor
shlb
mov
push
push
out
mov
adc
into
adc
mov
rorb
push
jns
xchg
aad
push
dec
or
inc
movsb
pusha
andb
bound
movsb
jle
aas
lock
xor
movsb
xlat
jb
test
outsb
push
and
rep
or
mov
std
cs
insl
pop
movsb
call
repz
movsl
add
shufps
mov
dec
fisubrl
lods
clc
jns
mov
addr16
jnp
mov
push
cmp
jmp
cmovno
or
xor
orl
pusha
push
out
daa
pop
cmp
mov
cs
shrl
jecxz
aaa
stos
sub
sub
loope
mov
mov
push
xchg
and
push
ljmp
cmp
dec
dec
iret
cwtl
mov
pop
xchg
mov
andl
movsl
push
rcr
repnz
sahf
pop
cmp
pop
cli
sub
sbb
dec
cmp
xor
rcr
fisubs
mov
fstl
in
jecxz
dec
dec
push
dec
mov
movsb
mov
dec
jb
cmp
sbb
cmp
dec
push
iret
rcrl
and
dec
aaa
pop
or
imul
and
fcmovne
sub
out
xchg
xor
pop
pop
popf
mov
jno
aad
mov
stos
adc
cmp
pushf
faddl
and
or
xlat
cmc
push
pop
pushl
and
sbb
mov
subb
mov
fmull
mov
sti
lea
ja
lds
mov
into
xor
xchg
push
mov
cmp
aas
mov
sbb
notl
cmc
xlat
sub
ret
mov
int3
rolb
aaa
sub
inc
mov
enter
inc
pop
adc
push
xchg
mov
mov
outsl
in
les
outsb
xchg
cmp
inc
orl
mov
out
dec
arpl
adcb
xor
add
bound
test
jmp
cwtl
mov
ficompl
sbb
ljmp
ss
xor
daa
lret
repz
xor
popf
inc
mov
dec
and
mov
jmp
loope
jae
xchg
lcall
aad
fisttpll
dec
iret
mov
xor
fidivl
cmp
push
cmp
ficomps
cmp
repnz
popf
push
mov
sbb
mov
lock
pop
push
push
loopne
rorb
out
test
inc
stos
sbb
pop
sarb
cmp
aas
es
sub
adc
sbb
cld
jg
aaa
aas
dec
mov
push
mov
ficomps
imul
std
pop
daa
mov
rolb
xor
cmp
sbbb
dec
cmp
push
std
mov
addb
loop
fcompl
xor
jno
sahf
jnp
enter
outsl
add
fidivl
push
sub
adc
mov
fsts
nop
inc
cmp
scas
imul
mov
arpl
push
js
add
testb
jg
popf
xchg
cmp
jle
pop
loope
dec
popa
jnp
in
jnp
cmpsb
mov
imul
in
xchg
xchg
mov
paddusw
dec
mov
xchg
jo
jle
lods
cmp
push
nop
stc
push
sbb
push
enter
bound
push
or
jno
inc
sbb
mov
jo
xchg
rorl
pop
jp
icebp
mov
xor
mov
outsb
mov
mov
aas
pop
add
aad
mov
nop
sub
testb
jnp
sahf
test
outsb
inc
stos
push
les
xor
insl
xchg
cli
aas
add
pushf
jb
adc
mov
xorb
push
hlt
push
dec
adc
jecxz
sbb
push
popf
inc
inc
jl
cmp
test
mov
push
mov
or
pop
ds
popa
test
scas
pushf
xchg
or
sbb
mov
cmpsl
cltd
scas
and
push
add
cmp
mov
sub
movsb
lods
and
rolb
fs
xchg
lods
fwait
jle
bound
mov
jo
mov
dec
xchg
loop
cld
sub
cmp
out
jle
add
lret
mov
or
mov
stos
push
jno
push
ljmp
aas
aas
mov
hlt
mov
ds
adc
xchg
dec
push
xor
sub
add
data16
push
mov
mov
and
mov
enter
xchg
cmc
lock
pop
and
inc
loop
shlb
outsl
push
cli
mov
xor
sarb
test
dec
in
pop
test
dec
fbstp
into
adc
push
jno
adc
jno
mov
fnstenv
inc
lock
xchg
inc
call
arpl
mov
jns
in
jmp
test
lock
outsb
loope
fdivrs
inc
dec
fldt
mov
add
fsubrl
loope
jb
scas
fists
fcom
cmpsb
fsubrs
push
fadds
clc
insl
lea
pop
xchg
inc
xchg
rcrl
sbb
jne
mov
mov
and
push
int
mov
pop
in
ja
mov
cmp
pop
and
daa
dec
cld
nop
mov
loope
ljmp
cld
cld
push
leave
mov
scas
push
lods
repz
dec
dec
jae
dec
xchg
xor
aad
sbb
outsb
and
add
mov
push
cmp
pop
mov
xchg
clc
out
loopne
add
or
pop
and
jo
lret
fsubp
push
sub
shlb
icebp
and
dec
cmp
xor
jl
pop
sbb
adc
jp
fidivrl
cmp
jns
repnz
sub
ret
push
xchg
push
jne
loope
jecxz
sbb
test
icebp
jno
arpl
or
js
lea
mov
insb
int3
cmp
daa
ret
dec
adc
mov
fs
mov
add
aaa
mov
out
jns
adc
