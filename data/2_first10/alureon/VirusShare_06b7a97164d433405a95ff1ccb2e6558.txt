push
mov
push
mov
add
mov
push
xor
mov
cmp
je
add
sub
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
pushl
push
mov
call
test
je
mov
add
jmp
cmp
je
push
add
pop
mov
test
jne
jmp
mov
lea
mov
mov
sub
add
cmpl
jne
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
add
cmp
jb
pop
pop
pop
pop
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
add
add
sub
cmp
jb
pop
pop
ret
push
mov
sub
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
push
mov
add
xchg
sub
push
push
push
push
xor
lea
push
push
mov
call
add
sub
push
push
push
lea
push
mov
push
push
push
lea
push
mov
call
cmp
jne
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
mov
cmp
je
mov
jmp
push
mov
call
push
lea
push
push
mov
push
mov
mov
call
push
pop
push
pop
push
push
push
mov
call
mov
mov
call
cmp
jne
cmp
jne
push
push
push
push
mov
call
mov
lea
push
mov
mov
mov
push
sub
add
push
push
mov
call
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
addl
push
pop
rep
mov
mov
mov
add
add
add
mov
mov
movzwl
push
add
pop
cmp
jb
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
add
push
lea
push
call
mov
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
push
mov
call
jmp
push
pushl
pushl
jmp
push
mov
call
xor
pop
pop
pop
leave
ret
push
mov
mov
add
mov
sub
xchg
add
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
sub
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
push
add
pop
mov
add
add
mov
mov
not
mov
add
xchg
add
not
shl
imul
sub
add
imul
push
add
pop
decl
mov
jne
pop
mov
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
add
not
add
not
shr
add
push
mov
add
add
push
lea
push
mov
call
add
add
mov
mov
mov
mov
push
popl
sub
sub
lods
xor
stos
sub
add
sub
sub
rorl
sub
add
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
sub
xchg
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
add
decl
mov
jne
addl
xchg
subl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
sub
lods
xor
stos
sub
add
add
sub
rorl
sub
lea
test
jne
pop
pop
pop
ret
push
mov
push
push
xor
push
mov
call
mov
nop
push
add
pop
jne
push
push
lea
push
push
mov
call
mov
xor
lea
test
cmp
jne
push
push
pushl
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
call
push
mov
jmp
push
push
push
push
push
push
mov
call
test
je
push
mov
call
xor
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
lea
test
cmp
jb
pop
pop
xor
lea
test
ret
mull
add
add
add
push
sub
es
lock
arpl
xchg
xlat
push
jmp
xchg
xlat
cmp
push
addr16
aam
sbb
out
mov
hlt
std
jg
call
mov
out
adc
jns
cmpl
stos
mov
sbb
mov
add
dec
fcmovbe
push
push
and
in
push
cmpsb
test
stc
cmp
cmp
or
push
xor
mov
mov
mov
lods
addr16
inc
imul
pop
movsb
pop
les
mov
mov
and
int3
inc
out
push
push
mov
stc
test
int3
push
movsl
dec
ret
inc
xchg
fsubs
in
inc
stos
in
and
nop
stc
add
loop
ficompl
xchg
xor
std
out
cmp
cmp
xchg
xchg
movl
loope
mov
aam
fisubrl
call
sub
dec
fidivrl
rorl
xchg
stos
pop
ss
mov
inc
fistl
pop
inc
or
movsb
and
jg
ret
pop
shll
adc
pop
scas
push
pop
sahf
xor
sbb
and
mov
movsl
hlt
je
imull
push
inc
add
push
out
or
and
call
cmp
lahf
insb
or
mov
cmc
lock
and
adcl
add
cld
adc
mov
jecxz
sbb
xchg
lods
ljmp
mov
cmp
jl
xchg
cmp
mov
out
aas
mov
scas
pop
orb
cmp
lcall
xchg
dec
and
adc
push
pop
out
mov
inc
or
lods
mov
cmpsb
lock
lods
sub
jmp
xlat
sbb
rcr
pop
in
clc
mov
js
push
les
dec
pop
pop
mov
popf
in
sub
mov
repz
mov
loopne
ficompl
pop
pop
mov
hlt
aaa
in
das
ret
test
icebp
je
jno
sub
adc
xor
mov
mov
hlt
dec
jo
cltd
fcoml
clc
jecxz
loopne
dec
mov
push
fnstsw
cwtl
and
scas
aam
add
ds
mov
cli
frstor
inc
or
push
insb
pusha
sub
xchg
sub
xor
or
inc
add
test
add
pop
add
jno
mov
movsl
xlat
mov
jno
dec
inc
dec
ja
mov
notl
sub
sub
iret
mov
cmp
out
daa
je
mov
lret
jmp
add
shrb
push
push
and
ficomps
aaa
cmc
lahf
hlt
xchg
pop
fwait
mov
push
movsb
call
stos
push
jns
repnz
repnz
push
xchg
xor
lea
lahf
test
out
fbld
mov
iret
bound
or
inc
enter
add
xchg
cwtl
and
int
mov
lret
pushf
xchg
jge
mov
mov
outsl
adc
popa
pop
cmp
jp
shll
sbb
ret
scas
push
imul
ret
in
and
sbb
dec
int
xchg
decb
mov
xchg
mov
and
or
loope
push
jbe
and
inc
jno
aaa
sub
xlat
xor
pop
inc
sbb
cltd
xchg
sub
pop
fists
outsl
iret
movb
cmp
fistpll
pop
xchg
mov
adc
sbb
imul
mov
push
xlat
fldt
outsb
loop
daa
jb
jne
or
sbb
imul
jns
jo
into
adc
adc
daa
mov
pop
filds
popf
pop
scas
add
push
or
add
xor
jns,pt
add
outsl
push
call
mov
or
xor
or
insb
fwait
ret
push
xor
mov
sti
les
sub
roll
cmp
mov
sub
cli
aas
jl
scas
ss
shlw
imul
and
jecxz
scas
sahf
mov
xchg
inc
and
in
or
jmp
leave
pop
lods
xchg
inc
fcomip
loop
or
sti
push
aad
lea
cmp
inc
icebp
xor
xor
lret
dec
xchg
mov
enter
int3
push
jl
aaa
out
loop
movsb
inc
push
sub
jnp
dec
nop
pop
les
mov
xchg
adc
daa
mov
mov
dec
daa
ret
jg
scas
movsb
ret
mov
adc
jl
xchg
xlat
fisttpll
rcl
pop
dec
popf
divl
push
loopne
loopne
jnp
xchg
ret
inc
pusha
lods
dec
imul
ljmp
fidivrs
mov
fs
inc
aaa
or
in
cmp
pop
cli
stos
into
sbb
sbb
push
cmp
mov
hlt
push
jg
nop
enter
idivl
and
and
rolb
mov
stos
js
shll
popa
insb
or
xchg
dec
add
imull
cmpsl
xchg
sbb
dec
lea
xor
movsb
sbb
ljmp
ja
subl
stos
ficomps
arpl
in
das
int3
mov
adcl
cmp
out
pop
cmp
xchg
jle
enter
int3
inc
cs
jnp
cmp
xchg
dec
mov
dec
cmpsb
addr16
mov
das
scas
dec
sub
xchg
nop
mov
andl
add
xchg
mov
in
push
push
rcll
loope
adc
mov
loope
in
mov
das
leave
sub
mov
in
out
jle
sbb
cld
mov
loopne
mov
mov
cmp
lret
push
subl
cli
mov
lret
dec
mov
pop
pop
addr16
mov
pop
cwtl
xchg
adc
hlt
push
cmp
imul
cltd
push
xchg
jbe
sbb
mov
ljmp
jbe
test
shl
aam
pop
test
mov
adc
loop
add
addr16
mov
inc
scas
stc
push
std
add
ret
mov
mov
sbb
out
fdivrs
xor
fcomps
std
and
push
jne
ljmp
xor
ret
adc
xchg
mov
popf
test
sbb
jle
pop
enter
jno
icebp
inc
addr16
or
dec
mov
pop
sbb
pushf
fldt
les
mov
call
aas
test
dec
fbstp
adc
out
test
pusha
loope
dec
fsts
mov
insl
in
sbb
inc
pushf
mov
pop
jnp
jmp
pop
push
pusha
mov
and
in
sti
ss
aas
test
movsb
ret
add
scas
movsl
mov
into
push
iret
mov
leave
repnz
pminsw
out
mov
out
inc
rcr
sbb
insl
testl
sahf
add
sahf
jno
shll
cmp
popf
mov
cmp
push
fst
cs
scas
mov
xchg
mov
cltd
cmpsl
push
jge
mov
testb
sti
pop
add
adc
inc
pop
mov
stc
popa
aaa
fsub
das
push
jnp
xor
or
sbb
jge
mov
push
test
push
fldenv
sbb
xchg
pop
int3
push
pop
or
outsl
jl
in
fidivl
sbb
loopne
test
mov
ret
xor
mov
xor
mov
out
push
mov
pop
popa
clc
sarb
call
daa
mov
adc
mov
push
mov
sbb
sub
pop
dec
imul
insl
data16
xchg
repnz
lcall
sahf
sub
out
xlat
pop
add
jp
out
mov
jl
adc
imulb
shlb
lret
inc
ja
nop
dec
gs
out
or
mov
unpcklps
mov
pop
cmpl
mov
push
xlat
sbb
mov
pop
lds
mov
subl
cs
fiadds
ret
jne
inc
cmpsl
insb
adc
loop
xchg
mov
mov
stos
pop
mov
outsl
inc
sub
mov
mov
jle
dec
out
jo
shlb
test
mov
pop
mov
pop
jl
dec
xor
cmp
adc
xchg
imul
popf
inc
hlt
mov
repnz
mov
enter
mov
jnp
dec
adc
hlt
add
push
push
and
insb
pop
fists
shll
fistpl
addr16
mov
insb
pop
xor
stos
shlb
or
adc
dec
jo
add
inc
aad
mov
cmpl
lods
mov
mov
sbbb
sahf
scas
fbstp
mov
rol
or
rolb
mov
cmp
stos
sbb
das
test
jns
xor
adcb
lret
leave
adc
mov
push
jae
es
xchg
mov
arpl
and
stos
jge
daa
add
xchg
mov
adcl
pop
xorl
jg
iret
arpl
jg
hlt
mov
cld
jl
scas
iret
lcall
test
and
sbb
rclb
sarb
pop
insb
loopne
decl
sub
mov
push
adc
dec
jnp
fdiv
or
xor
pop
xchg
push
mov
enter
pop
ljmp
lahf
jg
mov
dec
xchg
mov
add
sti
jp
push
lret
nop
adc
stos
cmc
fdivl
add
shl
out
inc
inc
subl
mov
jg
sti
cmpb
cmp
enter
push
lds
mov
popf
fistpll
leave
xor
sub
out
push
xor
xchg
mov
fwait
ja
stos
mov
pop
ja
jno
daa
mov
shr
fsub
dec
or
and
xchg
mov
imul
mov
push
shrb
xchg
push
mov
push
flds
cmp
xchg
xchg
jae
sbb
ret
push
fidivl
fildll
arpl
movsb
inc
bt
xor
pushf
ret
paddq
xchg
xchg
mov
dec
sbb
mov
jns
fmull
push
inc
push
test
in
bound
test
imul
clc
mov
mov
dec
das
movl
rcll
call
or
stos
mov
lods
inc
arpl
mov
push
scas
sub
in
jbe
divl
push
lock
jb
fucomi
stc
je
fstpt
hlt
mov
fsubs
jp
inc
stos
aam
inc
or
push
clc
xchg
in
mov
pop
mov
adc
and
sbb
aas
jns
push
rcll
xchg
pop
and
in
and
in
pop
jo
jecxz
test
leave
pop
and
je
add
lret
int3
addr16
ret
or
divl
mov
pop
das
push
fldenv
jbe
ljmp
xchg
push
sahf
add
out
pop
and
iret
jmp
jne
push
ret
mov
xor
cs
sbb
orb
or
cwtl
cltd
or
ret
push
push
je
fildll
jne
pop
ficoms
xchg
jge
out
cltd
stos
std
nop
or
into
fldl
sub
pop
cmpsl
loopne
pop
add
in
cmp
cmpl
xchg
sub
clc
stc
push
adc
inc
hlt
jmp
lock
push
stos
lds
popa
jmp
push
dec
aas
les
sahf
pop
test
lea
mov
lcall
insb
lods
or
jg
jne
cmpsb
sti
jb
mov
test
test
ficomps
mov
loope
mov
xlat
or
jbe
sti
lock
add
adc
fcmove
insl
push
sub
outsl
ret
push
scas
pop
jecxz
xor
mov
inc
pop
jbe
sub
in
or
mov
jno
and
outsl
cli
inc
or
jle
outsl
iret
in
jle
test
cmp
add
dec
pop
pop
popf
lcall
xlat
enter
neg
test
mov
cmp
out
incl
push
add
jno
sbb
adc
or
xchg
push
jae
cs
xor
inc
xchg
xchg
inc
xchg
and
arpl
pop
aas
and
sub
aam
sub
std
or
mov
in
cmp
fiadds
pop
jmp
je
xchg
fdivrs
sbb
int
and
imul
hlt
aad
inc
or
mov
jmp
pop
insb
call
and
mov
xor
jnp
test
clc
jge
xor
jns
and
jg
in
jmp
into
cli
daa
mov
daa
add
sub
mov
dec
rcr
sub
lods
pop
add
outsb
mov
or
adc
push
mov
sbb
dec
sub
stos
mov
jae
add
jnp
ret
sarb
movsb
mov
push
fisubl
int
xorl
lods
icebp
lret
inc
neg
xor
cmp
or
mov
enter
ds
jle
add
shlb
mov
ljmp
cmp
ret
jo
clc
gs
jecxz
pop
mov
fadds
scas
std
ljmp
pop
test
ljmp
and
cs
and
inc
jnp
outsl
pop
pop
jp
mov
sub
mov
cmpsl
lock
inc
push
cld
call
jg
mov
lahf
fidivl
inc
or
imul
xchg
add
sub
xlat
xor
add
jecxz
int
inc
mov
in
mov
cli
add
or
fdivs
add
fdivl
sahf
lods
xor
mov
or
pop
js
call
pop
in
nop
mov
mov
loope
adc
addl
pop
hlt
jae
push
xchg
pop
adc
jge
ret
mov
clc
out
fs
pop
mov
inc
sub
cwtl
jp
mov
test
call
adc
cmpsl
mov
popf
mov
icebp
mov
hlt
cmc
sub
lcall
push
fcmovnb
inc
or
mov
push
sbb
repz
mov
ret
dec
jo
adc
pop
fsubrl
jp
aad
test
cmc
cwtl
jb
add
push
outsl
pop
imul
xchg
adc
sahf
adc
cmpsl
inc
sbb
push
enter
out
or
jno
or
mov
dec
or
out
dec
call
aas
mov
scas
loop
fcomp
sbb
in
cmpsl
jge
lret
adc
add
pop
mov
repz
mov
adc
cmp
fs
or
jns
add
and
lret
adc
pop
je
dec
sbb
mov
or
fs
dec
xlat
in
sbb
xor
cltd
jmp
imul
jne
add
in
xor
jg
inc
or
popa
fisubrl
push
mov
push
inc
add
inc
xchg
add
adcb
test
sbb
xchg
outsb
jno
daa
mov
fcoms
pop
int
bound
fwait
pop
pop
cmp
push
in
jle
popa
lea
loopne
and
icebp
mov
mov
or
push
aam
cmc
xchg
rcr
xchg
adc
inc
pusha
lods
outsb
xlat
fnstsw
xchg
adc
adc
mov
mov
iret
aaa
dec
movsl
imul
sub
lret
dec
arpl
pushf
xchg
lds
test
inc
or
xchg
sub
xor
xchg
test
xor
dec
dec
ja
mov
mov
xchg
cmp
clc
sub
xchg
loopne
lods
lahf
push
mov
or
mov
fnstcw
sahf
mov
push
into
sbb
or
push
add
push
sub
cwtl
call
addr16
cld
in
jno
or
sbb
push
mov
loopne
nop
push
es
mov
xlat
sbb
pop
dec
xchg
or
xchg
push
notl
es
or
int
mov
mov
std
xchg
push
push
imul
jecxz
movsb
mov
fwait
cwtl
xor
dec
popf
in
mov
scas
push
out
fimuls
cmp
push
cld
xchg
dec
clc
fidivs
mov
xor
arpl
sbb
test
mov
pop
or
fcoms
xchg
test
in
jle
push
pop
aas
cmp
jg
or
daa
xchg
int3
inc
add
enter
pop
xchg
sbb
rcrl
cmp
adc
push
aad
fmuls
test
mov
add
insb
je
mov
sarl
mov
pop
mov
pop
aas
ljmp
or
es
mov
es
repnz
insb
jmp
imul
add
inc
lret
test
mov
sbb
mov
repz
mov
js
jmp
push
in
fiaddl
mov
mov
repnz
add
push
mov
and
mov
popa
push
mov
jecxz
scas
das
jo
cmpsb
nop
adc
xor
cld
add
scas
out
aad
pop
aas
xor
cmp
mov
or
aas
ljmp
jae
and
xor
adc
pushf
dec
lods
popf
mov
cmp
mov
cli
mov
push
xchg
imul
dec
sti
pop
jns
idivl
adc
add
test
scas
dec
outsl
jg
std
inc
push
aad
fwait
loope
pop
jnp
xchg
adc
mov
aas
adcb
rclb
mov
xchg
dec
pop
cmp
push
fbstp
test
pop
cmp
shlb
adc
lahf
out
mov
sub
pop
loop
pop
inc
mov
leave
pop
ror
fidivrl
rclb
popf
adcl
ret
add
ljmp
mov
sar
into
mov
xchg
pop
xor
ja
scas
cmp
stos
out
jne
sbb
xlat
movsl
std
or
dec
jnp
sbb
dec
lods
push
push
xor
adc
out
das
mov
out
in
cmp
in
push
cmp
sub
std
fs
adc
and
pop
xchg
mov
push
mov
js
mov
imul
cli
std
or
cwtl
sar
xchg
mov
dec
cltd
rorb
dec
mov
pop
jb
in
inc
or
stc
clc
sub
jo
push
es
out
mov
xor
roll
inc
push
adc
xchg
outsl
fstps
ss
sahf
or
scas
mov
sub
dec
negl
jns
jns
mov
sub
pushf
xchg
adcl
mov
scas
sahf
fisttpl
ljmp
bound
mov
sbb
sbb
fs
xchg
fs
js
lock
mov
mov
andb
pop
subb
and
les
std
xlat
push
clc
ficoml
in
sub
insl
pop
push
dec
sub
cli
icebp
fnstcw
cwtl
adc
jnp
jge
call
pop
sbb
mov
popa
inc
rcll
inc
popf
ljmp
lock
cwtl
inc
push
sbb
and
popf
je,pt
mov
out
cmp
mov
ds
arpl
fnstsw
idivl
sub
loop
mov
loope
adc
fldt
fcoms
xchg
popa
aad
bound
orb
xchg
lret
adcb
dec
xchg
jle
push
mov
add
mov
and
jecxz
in
fs
cs
pop
push
stos
fnstsw
inc
sub
jmp
jg
sbbl
cld
cmp
daa
jle
mov
and
mov
pop
test
sub
stos
sbb
int
pop
or
sbb
enter
ret
aas
jge
sub
popf
mov
inc
mov
add
ljmp
bound
dec
and
jl
mov
notb
lods
and
adc
aad
dec
fs
inc
in
loopne
mov
dec
lock
mov
xor
add
sub
in
jecxz
sbb
jns
in
jmp
shll
and
sarb
or
xchg
ljmp
xchg
xor
mov
ficoms
adc
push
pop
rcrl
addr16
fidivs
sarl
dec
jnp
leave
subl
insb
jmp
and
aam
xor
push
lods
jae
cmpsl
ret
mov
cli
pop
pusha
or
cmpsl
int
repnz
inc
jb
xlat
clc
std
sbb
cwtl
pop
inc
dec
mov
daa
add
std
lahf
add
dec
push
arpl
cmp
push
mov
mov
clc
cltd
push
add
pop
shl
fwait
jo
xchg
pusha
adc
fld
push
daa
sub
xchg
inc
test
repnz
or
or
out
ficoms
mov
ret
pop
xchg
jp
xchg
ss
mov
out
add
dec
xchg
push
mov
xchg
data16
pop
icebp
dec
push
mov
nop
dec
mov
pop
add
in
scas
je
push
inc
inc
adc
pop
out
push
adc
out
cld
rcrl
cmp
jg
das
jmp
inc
push
mov
std
out
jl
stos
nop
adc
pop
push
push
cmp
xor
dec
mov
mov
jnp
fwait
mov
sub
dec
dec
dec
insl
dec
mov
call
and
frstor
cmpsb
dec
jg
add
daa
pop
and
mov
dec
lods
ds
mov
pop
hlt
ds
mov
scas
push
in
pop
sbb
outsl
imul
aas
mov
std
push
out
cltd
inc
in
pop
inc
sub
mov
cmp
lret
cltd
add
fsubr
sub
push
fistps
cwtl
cmp
movsl
ja
mov
add
mov
loop
icebp
pop
dec
fwait
mov
sub
pop
iret
mov
jo
xor
inc
dec
lea
data16
cmpsb
push
dec
add
lods
pop
or
adc
lretw
imul
call
jb
push
mov
pushf
sub
in
ja
cmp
lcall
in
jnp
lret
cwtl
xchg
mov
pop
push
cmpl
sub
sti
movl
mov
fcmovb
sub
shlb
sub
je
mov
in
popa
loope
in
xor
in
lods
pop
mov
add
pop
mov
lret
mov
jp
xchg
test
clc
aas
ret
ret
orb
pop
popf
fxch
dec
dec
mov
fcompl
outsb
imul
lret
mov
in
je
mov
leave
xor
pop
movsb
jl
ret
inc
lock
div
xorb
or
mov
pop
dec
mov
int
pop
xchg
or
stos
jg
mov
imul
cmpl
mov
mov
jmp
stc
cmp
pop
or
mov
in
test
pop
inc
pop
ret
or
adc
pop
pop
mov
inc
add
ss
xlat
loop
mov
cmp
decb
fmull
push
mov
outsl
loop
jmp
push
pushf
scas
cmp
popf
add
sbb
mov
xor
add
jge
add
aam
xor
pop
das
inc
sbb
out
cs
push
adc
pop
mov
sahf
mov
adc
jb
loopne
fs
pop
loopne
dec
sub
shlb
mov
das
jg
dec
ljmp
loop
ret
sub
cs
fcomip
pop
clc
rorl
cmp
insb
mov
pop
mov
pusha
in
jnp
sub
scas
icebp
mov
inc
orb
in
mov
cmc
push
mov
in
add
inc
sub
sahf
push
sub
test
jmp
xor
xlat
scas
lret
movsl
jo
push
sub
cmp
pop
shlb
movsb
push
adc
or
dec
mov
loop
pop
inc
stc
mov
test
loop
nop
cmp
aas
or
lea
cmc
mov
hlt
mov
mov
nop
adc
add
mov
cmp
pop
inc
repnz
mov
leave
inc
sahf
sahf
jmp
or
push
add
inc
icebp
sbb
fwait
in
lret
shl
insb
xor
mov
movsl
adc
jmp
inc
popf
in
pop
jns
cmpsl
lahf
test
pop
jle
jge
mov
dec
pop
out
in
add
bnd
add
dec
pop
mov
jl
lcall
cmp
imul
inc
mov
push
dec
mov
and
sub
sub
outsb
imul
mov
pop
test
pop
and
xchg
jnp
int
shrb
jbe
sahf
inc
das
in
pop
insl
or
int
popa
cmpsb
cwtl
and
push
sarb
xchg
add
test
dec
or
pop
or
ljmp
jne
pop
mov
add
jmp
in
daa
mov
nop
xchg
cld
cmpsb
aam
fcomp
pop
cli
add
andb
sub
xor
cmp
mov
ret
push
sub
rcrl
push
or
out
fwait
inc
clc
mov
mov
jmp
or
jmp
subl
push
cld
sbb
cmp
sub
xchg
jmp
and
daa
sub
call
cmpsb
adc
jb
mov
or
xchg
ds
push
jge
mov
dec
test
in
jno
inc
cwtl
in
andl
jg
test
push
shlb
cmp
xor
lock
pop
or
cld
movsb
inc
inc
jb
ljmp
imul
xlat
push
adc
add
ja
in
sbbl
int
jnp
mov
xchg
pusha
mov
pop
sbbl
xchg
cmp
jg
xchg
enter
lcall
outsl
pop
ja
lahf
in
or
cltd
frstor
andb
loop
and
nop
es
adc
mov
das
and
out
inc
inc
scas
pop
and
push
gs
mov
mov
jl
mov
mov
mov
lcall
cmp
push
out
mov
gs
push
jbe
pop
mov
fs
mov
xchg
sub
jb
pop
icebp
pop
lock
aam
sbb
xchg
imul
aam
sti
enter
add
rcrb
loop
jbe
xchg
movsl
int3
sub
popa
dec
push
out
loope
pop
mov
in
add
add
mov
stos
cwtl
test
in
fiaddl
vcvtss2si
mov
ljmp
push
test
dec
mov
pusha
push
mov
dec
outsl
insl
stos
mov
pop
mov
mov
mov
mov
jae
and
cwtl
xor
shlb
jns
hlt
adc
cmp
out
cwtl
mov
xlat
pop
mov
cmp
adc
loope
frstor
mov
shl
sbb
xchg
cld
xor
sahf
mov
aam
xchg
das
das
jmp
lods
sbb
pushf
mov
je
pop
mov
mov
stos
lods
or
jae
jmp
les
and
shll
add
inc
shr
mov
pusha
xor
divb
xor
pop
into
fcmovb
out
test
cmp
pop
popa
xchg
mov
and
jmp
mov
inc
loop
xchg
adc
push
hlt
sub
ja
loop
xchg
hlt
test
mov
sub
jo
arpl
cwtl
addr16
stos
movsl
mull
call
mov
add
mov
push
mov
in
fwait
shrl
inc
test
pop
and
mov
lock
add
dec
pusha
gs
jo,pn
xchg
stc
fnsave
lret
dec
test
jg
pop
sub
rcl
and
mov
enter
mov
sbb
or
mov
fnstenv
mov
or
pop
loope
sub
jae
push
pop
mov
mov
pop
xchg
xor
sbb
hlt
sub
pop
push
and
cmp
inc
sub
or
and
sub
cmp
pop
push
sbb
in
or
dec
mov
fbstp
xlat
loope
aas
stos
test
fmull
ds
sub
xchg
jg
les
jns
and
pop
fildll
and
add
cmp
es
out
push
inc
insl
push
mov
mov
in
dec
insl
out
pop
cmpsl
dec
cltd
inc
int
sub
mov
sub
lods
xchg
pop
push
clc
and
addr16
lods
stos
inc
clc
in
or
insl
in
inc
in
sarb
pushf
dec
lea
sahf
mov
scas
loope
xor
lock
mov
xor
insb
repnz
lcall
xchg
adc
mov
fdivl
lcall
sbb
or
push
sbb
or
lret
js
sub
jno
push
mov
cmpsb
add
xchg
sub
negb
xchg
mov
ret
fistps
inc
xchg
pop
stos
pop
cwtl
sbb
sbb
xorl
mov
pop
stos
adc
add
cwtl
sar
adc
lret
int
mul
iret
mov
push
cmp
loop
xor
dec
iret
scas
fildll
cld
sarb
push
xrelease
push
enter
pop
inc
test
sbbl
out
sub
not
adc
xor
popf
mov
test
lods
cli
sbb
and
xorl
aas
xchg
mov
dec
or
jno
add
or
test
enter
stos
mov
stc
and
jmp
movsl
add
std
in
mov
lret
sub
addr16
inc
jp
xchg
loopne
adc
pop
mov
std
shl
push
out
push
dec
push
xchg
adc
out
rcrl
mov
xchg
mov
mov
lods
shr
adc
jnp
or
pop
push
fcomi
sbbb
das
push
sub
cmp
jl
add
jg
pusha
bound
xchg
pop
mov
push
dec
std
scas
mov
jnp
dec
push
pusha
lahf
jl
inc
rclb
mov
jl
jp
or
xor
adc
mov
mov
rclb
std
mov
inc
shufps
les
push
adc
outsb
int
or
and
sub
movsb
fistpll
and
add
lret
mov
pushf
sub
es
pusha
or
jg
and
std
or
test
jnp
xchg
popf
lods
add
jle
es
sub
push
jo
loop
xchg
stc
cmpsl
dec
sbb
aad
pop
pop
out
iret
arpl
lods
mov
mov
mov
xorb
pop
pop
dec
xchg
out
rorb
dec
push
ret
fwait
xchg
out
daa
inc
shr
jno
xchg
ds
adc
lcall
ja
stos
mov
dec
aaa
nop
push
imul
push
in
repz
outsl
xor
pop
adc
gs
xor
out
sub
and
in
lds
cmp
mov
mov
jmp
scas
inc
iret
xor
testl
scas
inc
int3
mov
mov
ss
add
and
push
xchg
xchg
cmc
bound
mov
mov
leave
imul
rcll
add
jp
jbe
rcl
pop
clc
mov
pop
push
jns
ss
jns
jp
adc
pop
push
sub
movsb
sbb
inc
sbb
add
inc
push
stos
mov
sbb
popf
pop
iret
ja
rcrb
or
add
test
pop
sbb
xor
fcomps
movsb
xchg
sar
repz
arpl
pop
mov
xchg
cmc
push
xchg
cwtl
ud2
addr16
push
mov
push
adc
in
or
xchg
mov
push
mov
sbb
jp
inc
mov
add
add
or
test
sub
mov
xor
loope
or
and
daa
jmp
je
aas
mov
ljmp
push
adc
call
sahf
call
stos
pop
dec
sbb
lret
xchg
push
sbb
lahf
sub
sarl
pop
cli
jbe
and
cmp
les
pushl
cmpsb
sub
rclb
xor
jmp
or
sub
pushf
fs
fs
xor
mov
divl
js
xor
xor
pop
dec
push
rcrl
stc
xchg
movsb
adc
pop
sub
xchg
iret
xchg
stc
sahf
xchg
cmc
into
fisubrl
call
aas
loope
cmp
push
pop
jg
add
cmpsl
jno
sbb
adc
sub
insl
outsl
ljmp
fnstenv
adc
subps
sub
pop
popf
sbb
jge
rcl
nop
push
lcall
aaa
xchg
fcmovnb
dec
and
adc
mov
shr
addr16
iret
xorl
repnz
dec
cmp
xor
rcll
nop
pop
mov
insl
test
repnz
iret
in
cmp
dec
mov
in
sahf
bound
and
outsb
scas
add
add
pushl
push
ja
pop
sub
mov
in
mov
pop
std
shll
push
cmp
or
daa
out
int3
outsl
ljmp
aad
inc
in
or
data16
aad
inc
jne
lods
inc
xchg
pop
xor
xor
push
jns
fiaddl
out
pop
imul
mov
and
adc
mov
mov
xlat
jmp
insb
test
sub
jne
mov
icebp
call
popl
push
popa
push
pop
sub
mov
bound
test
fcompl
andb
xor
shll
sbb
push
xchg
jae
in
sub
movsb
roll
in
in
add
and
dec
adc
rorb
pop
adc
adc
popa
stc
js
in
and
jmp
mov
je
sub
repnz
xor
push
pop
stos
pop
jnp
cmpsl
jmp
and
xlat
incl
shl
shrb
jg
sbb
dec
ret
cli
pop
pop
push
cmp
test
push
ds
outsl
and
push
fcomp
or
filds
imul
shlb
and
xor
mov
sub
add
hlt
pop
fidivs
nop
xchg
mov
inc
cmp
cld
dec
xchg
mov
addl
xor
iret
test
jnp
in
push
arpl
in
mov
sub
mov
rcr
sahf
jns
add
sbb
push
ror
xchg
push
xchg
leave
pop
push
fwait
add
jmp
iret
jnp
pop
sarl
mov
movsl
push
scas
addr16
or
movsl
out
mov
sbb
jbe
jb
inc
mov
jle
inc
mov
xchg
adc
ja
xor
jae
xchg
insl
leave
cmc
aam
xchg
shlb
xor
lds
fsubrs
nop
push
or
push
sarb
mov
mov
push
inc
xchg
int
ret
dec
mov
and
insl
cli
jno
push
mov
and
nop
xchg
sti
adc
in
addr16
or
sub
subl
sbb
mov
insl
xchg
jae
and
and
cmp
cwtl
mov
pop
cmpsb
xor
xor
out
imull
mov
sub
test
fldl
dec
add
inc
test
test
inc
jno
test
jle
or
mov
lock
aam
jae
scas
xor
and
adc
faddl
jae
call
push
test
jl
pop
inc
lcall
dec
std
neg
pop
aaa
xchg
jp
dec
pop
fildll
mov
mov
and
jg
gs
fnsave
push
in
cmp
ljmp
xlat
inc
push
xchg
sub
push
pop
dec
jmp
add
or
lcall
roll
mov
subb
rcrb
xlat
pop
pop
cmp
mov
test
push
add
jbe
mov
dec
jmp
fcomip
add
or
icebp
ficomps
call
dec
mov
mov
punpckhwd
xchg
pop
cmp
jae
mov
pop
mov
insl
xor
jbe
aas
pushf
cmp
add
outsl
pop
int3
cltd
nop
jae
mov
jns
dec
pop
idivb
cmpsl
mov
cmp
fildl
fstps
in
lcall
pop
mov
ror
add
lods
loopne
sbb
mov
mov
dec
repz
test
pop
das
aam
and
sub
sbb
push
lahf
leave
and
mov
and
or
adc
in
lahf
loope
rolb
addl
ret
sahf
ljmp
mov
push
mov
aaa
ret
out
or
std
cmp
sub
sbb
dec
mov
inc
hlt
std
and
inc
mov
add
xchg
mov
mov
xchg
pop
aas
push
xor
adcl
sub
call
mov
test
cs
cmp
push
in
cmp
sub
cs
push
jno
sub
inc
enter
pop
push
cmp
or
xchg
clc
inc
bnd
cmpsb
mov
or
fsts
xchg
enter
mov
insb
imull
ja
jb
and
add
push
pop
imul
lcall
dec
data16
sub
push
sub
sbb
lods
adc
and
jp
cli
stos
aas
fdivrs
push
mov
test
aad
test
mov
js
pop
or
pop
push
out
push
repnz
lods
push
pushf
movsl
arpl
jnp
xor
pop
loopne
rdtsc
adc
push
mov
cmp
out
ljmp
je
cld
adc
jne
jl
js
push
pop
cs
or
rorb
add
add
mov
xchg
adc
sarb
inc
insl
sti
nop
adc
cmc
sbb
dec
inc
popa
dec
pop
mov
pop
in
push
lret
in
addr16
xor
jae
les
scas
mov
xchg
dec
fisttpl
std
add
jo
aam
pop
jl
push
out
add
movsb
arpl
popa
xor
call
movmskps
lods
cmp
xchg
jg
bound
xchg
xchg
xor
mov
sahf
in
in
or
iret
repnz
pop
mov
ljmp
mov
push
in
push
ja
mov
add
xchg
movsb
mov
das
dec
add
fsubr
pusha
insb
lcall
fbstp
sub
seta
std
mov
xor
call
push
push
adc
mov
sub
dec
hlt
mov
ds
cmpsl
fcoml
shl
jno
and
outsb
mov
pop
push
pop
xchg
js
ss
adc
add
dec
bound
mov
jl
mov
test
gs
or
gs
cmp
icebp
adcb
rclb
sbb
push
jl
jnp
lcall
sahf
dec
mov
dec
add
or
dec
popa
lock
inc
push
or
jl
and
jns
fwait
sub
push
mov
adc
cmpsl
lret
inc
mov
xchg
sarl
call
movsl
or
inc
jns
mov
mov
adc
rcl
lcall
pop
iret
enter
mov
das
xor
sub
ss
or
xor
add
in
and
and
iret
cmp
lods
pop
divl
scas
pop
cmp
sub
inc
gs
fs
jno
hlt
out
in
sbb
cs
stos
js
pop
imul
xchg
ljmp
dec
cmp
push
inc
in
in
push
fsubp
jno
adc
jl
and
popf
into
loopne
js
aam
ja
repnz
fst
sti
xor
or
jge
or
xchg
es
and
mov
sahf
jp
data16
testb
jg
fsubrs
mov
dec
fs
lods
cmpsb
popa
nop
outsb
insb
jge
mov
push
xchg
xchg
add
inc
jle
jnp
xlat
jmp
fstpt
cld
shlb
xchg
xchg
adc
add
loope
fdivl
pusha
shlb
lds
sti
or
push
jl
mov
test
cmpsl
pushl
arpl
dec
or
sub
lods
jg
xor
dec
push
rolb
std
lods
stos
cld
mov
lods
jge
inc
and
mov
pop
cmp
adc
add
mov
mov
ss
or
sbb
popf
sub
test
mov
scas
addb
roll
jg
ljmp
das
aaa
mov
popa
sar
sti
test
sub
jl
push
xchg
mov
into
dec
psllq
andl
orb
xor
lahf
cmp
mov
insb
sbb
adc
jle
inc
jnp
cltd
incl
lods
sahf
sahf
or
push
xor
out
inc
and
sarl
iret
pusha
data16
fs
cwtl
cmc
jnp
rclb
out
inc
mov
jmp
icebp
and
xlat
lods
hlt
test
sub
sub
cmp
icebp
inc
mov
push
push
arpl
mov
sti
int
ljmp
jbe
stos
in
fisubrl
adc
mov
repz
int
xchg
fdivs
bound
pop
js
ret
cltd
iret
stos
fxtract
std
sbb
adc
cmp
mov
frstor
xor
outsl
hlt
xchg
and
cmp
cs
hlt
xor
sbbl
cmp
pop
mov
aad
ja
subw
add
and
pushf
in
lods
decl
jae
ret
rol
scas
cmp
fwait
cmp
xor
and
jp
mov
fldenv
xor
adc
cmp
xchg
mov
inc
subb
pop
pop
pop
jne
rcll
push
sub
cli
repnz
sub
pop
inc
dec
sbb
orb
jg
ljmp
int3
fcmovnb
icebp
and
lret
pop
ljmp
cmp
adc
shrl
mov
test
adc
add
popa
mov
add
sub
lcall
sub
popl
add
push
and
lds
push
cmp
dec
pop
roll
stos
dec
ret
mov
in
cmp
bound
es
pop
inc
jnp
test
cmp
or
mov
push
push
dec
shll
push
es
scas
mov
xchg
inc
cltd
mov
scas
xor
xor
mov
push
int
sbb
insl
jg
fs
outsb
lret
xchg
add
pushf
push
loope
and
pop
push
or
lds
xchg
mov
xor
sahf
pop
mov
in
inc
imul
fmull
aas
jbe
lea
icebp
rcrb
popa
scas
cmpsl
and
xor
adc
in
lods
das
leave
or
pop
adc
sub
jp
or
inc
mov
loop
inc
stc
in
xchg
jae
in
pop
rcrb
fneni(8087
aad
mov
xor
pop
repnz
repz
lock
scas
and
out
mov
test
jg
pushf
loop
adc
mov
pop
out
movsl
xchg
pop
mov
arpl
iret
cmp
nop
cmpsl
popf
jp
mov
inc
xchg
aaa
pop
outsb
jle
mov
sub
cmpsb
outsl
pusha
mov
repz
sahf
fisubrs
and
mov
jge
pop
es
cs
ss
inc
or
cltd
xchg
pop
out
pop
xchg
mov
push
jae
jge
aas
add
mov
ljmp
ret
imul
cmp
fdivl
ljmp
push
pop
jmp
data16
cli
add
pop
dec
rcrb
scas
arpl
addr16
stos
sarl
stc
push
jne
jno
js
xchg
or
cmp
in
js
jnp
pop
cwtl
sub
jecxz
sarb
and
pop
push
ds
or
cs
pop
pop
stos
inc
or
xlat
shrb
xor
pop
enter
cmpsl
mov
xchg
scas
fwait
jae
in
pop
mov
pop
out
test
leave
pop
and
push
pop
das
ret
push
inc
push
xchg
sub
sub
jb
pop
icebp
int
xor
clc
loop
ret
movsb
mov
cltd
mov
rcrb
pop
rcrb
lret
and
mov
mov
mov
icebp
call
scas
mov
cmp
mov
mov
daa
bound
add
in
andl
shrb
jg
xor
popa
andl
scas
iret
out
jecxz
cmp
jecxz
xchg
cmp
mov
xlat
and
ret
sbb
mov
stos
push
jne
dec
nop
aad
mov
mov
das
sbb
popa
inc
pusha
imul
adc
orl
loop
mov
mov
ret
push
test
flds
lods
and
xchg
ja
cs
sub
sbb
sub
insb
out
jge
int3
stos
inc
incl
xchg
rcrl
lods
lret
sub
enter
in
loope
jl
movsl
lret
divl
push
xchg
xchg
pop
cwtl
imul
xor
or
sub
mov
sub
stos
push
mov
das
and
sub
jl
cs
push
add
jnp
xor
in
jp
cmp
push
push
mov
add
mov
iret
sarl
popa
movsl
push
mov
or
inc
into
insl
mov
jle
xchg
add
adc
xchg
out
hlt
inc
pop
inc
lea
lret
and
xorw
in
push
xchg
mov
adc
testl
stos
jp
cli
in
cli
repz
aas
outsl
push
leave
and
and
push
add
scas
push
imull
subb
out
hlt
into
sbb
bound
or
mov
clc
and
xchg
dec
outsl
and
jmp
lahf
mov
xchg
repnz
jne
cmp
incb
sbb
adc
rcrb
and
je
pop
adcl
mov
negl
std
sub
loope
mov
add
pop
jnp
fnstenv
push
jae
ds
inc
mov
rorl
inc
inc
fwait
lahf
int3
shll
lea
in
xchg
imul
repz
imul
push
push
or
popf
mov
mov
out
add
sub
in
je
in
push
cld
insb
mov
imul
cmp
xchg
test
fcoml
jnp
pop
repnz
pop
dec
sub
fdiv
mov
out
out
sbb
pop
sbb
in
xchg
xorb
daa
aad
rol
add
cwtl
aaa
popf
or
mov
roll
mov
mov
or
fs
movsl
inc
jecxz
mov
and
xor
gs
cmp
xor
sbb
pop
add
popa
cmc
insl
repnz
popf
xchg
mov
fdiv
sub
bound
stos
push
es
je
fisubs
sub
scas
sub
mov
aad
jmp
pop
jns
repnz
cli
jnp
test
negb
fsubr
xor
insb
add
xchg
test
fnsave
cli
test
push
jge
mov
or
mov
out
sub
mov
push
jge
inc
mov
test
and
jns
cmp
shll
xor
push
arpl
int3
das
push
fwait
inc
push
mov
and
jbe
mov
sbb
test
inc
fs
frstor
sub
jb
push
mov
mov
cmp
pop
xchg
mov
hlt
lret
adc
sub
xchg
aas
mov
inc
xchg
pop
mov
notb
nop
cld
add
movsl
pop
and
cwtl
jae
adc
jbe
aad
mov
adc
xchg
xor
cmp
and
notb
arpl
xchg
pop
sub
test
sbb
and
es
push
aad
fsubrs
int3
loopne
mov
or
je
test
cmp
lock
xor
dec
adc
cltd
pop
xlat
cmp
add
mov
pop
push
inc
scas
imul
rcll
push
xor
push
test
subl
outsl
jns
mov
inc
dec
ret
jg
or
and
daa
inc
xchg
popf
pop
xchg
and
and
mov
add
mov
mov
data16
int
or
js
call
std
fdivs
sub
cs
pop
enter
adc
cmpsl
pusha
adcb
lea
cmp
inc
scas
in
out
adc
aad
sub
loope
popf
jecxz
in
std
mov
mov
push
js
cs
aam
and
test
xor
lret
ss
clc
cli
inc
lcall
mov
iret
stos
or
lret
xor
xor
icebp
push
jecxz
imul
jp
jae
jge
cmp
xor
test
add
xor
hlt
jno
mov
or
sbb
arpl
out
std
inc
mov
or
cwtl
pop
addr16
out
mov
enter
imul
fwait
inc
jmp
dec
push
mov
and
fsub
and
test
mov
stc
or
jle
pop
shrl
xor
aam
jo
fcomi
push
scas
ret
cmc
rcr
dec
popa
jnp
test
out
rcrl
sub
imul
cmp
ss
jne
into
push
mov
mov
or
stos
or
ljmp
into
push
pop
outsb
cld
push
in
or
dec
sub
jbe
jns
je
test
aad
pop
push
or
xor
xor
dec
sbb
sbb
into
imul
jg
nop
pushf
lret
std
in
mov
inc
mov
xlat
push
cwtl
in
es
mov
sub
mov
jb
scas
test
jo
xor
pop
stos
or
out
xor
in
jl
outsb
dec
fwait
test
shlb
rcr
lret
fisttps
jnp
xor
or
mov
repz
inc
xchg
cs
mov
test
adc
mov
ffree
js
push
cmpsl
and
push
xchg
mov
jl
sbb
xor
or
test
lret
test
cltd
nop
dec
or
aaa
pop
inc
icebp
fcmovnb
adc
xchg
pop
out
scas
in
push
and
insb
into
nop
xchg
xchg
fnsetpm(287
loop
int3
std
iret
lock
ds
shlb
int
imul
push
jle
popf
movaps
xchg
fcmovnb
rol
inc
dec
xor
popf
insl
test
xchg
hlt
sbb
mov
add
dec
adc
sbb
loop
add
and
sub
adc
xlat
and
dec
mov
mov
pop
insb
daa
imul
sbb
cmp
popf
xchg
lea
les
push
fdivl
in
arpl
movsb
pop
xor
rcl
stos
jecxz
mov
fs
mov
cmp
add
hlt
cwtl
cltd
push
std
mov
push
shlb
add
popa
sahf
lahf
scas
xor
dec
movsl
outsl
sbb
test
filds
lahf
xchg
pop
cli
push
xchg
sbb
aam
testl
sets
icebp
rcrl
loope
or
mov
lds
popa
cmc
xchg
xchg
pop
xlat
js
push
loopne
lods
movsl
add
call
into
pop
adc
sub
push
fwait
add
cmp
scas
inc
stos
fstpl
and
clc
fldcw
not
rorb
xchg
out
stos
sarl
dec
in
cmp
shll
fs
ja
clc
rorl
nop
icebp
push
push
call
xor
fwait
cmpl
test
jl
mov
xchg
xchg
and
pop
mov
lahf
ds
scas
mov
cwtl
push
rol
push
mov
test
jae
mov
mov
jg
xlat
mov
lret
into
popf
leave
dec
mov
mov
test
leave
mov
outsl
es
scas
mov
arpl
dec
stos
cltd
mov
mov
jp
insl
div
dec
dec
ret
fcompl
insb
in
push
out
js
jg
adc
in
push
xor
xorb
sti
imul
jne
pop
cmp
ret
adc
shlb
stos
lahf
sbb
fs
int3
push
imull
pushf
lods
or
loope
pusha
jp
pop
or
pop
pop
in
mov
add
lret
sub
and
lcall
cmc
stos
jnp
cs
ficoms
jns
mov
fidivrl
and
repz
pusha
jecxz
test
sbb
ljmp
fisubl
add
mov
shr
icebp
roll
out
xor
dec
dec
pop
jbe
mov
pop
or
mov
mov
xchg
jns
out
mov
fcos
push
popf
pop
in
jb
xor
aaa
adc
cmp
pop
or
lret
rcrl
pop
notl
out
int
mov
jmp
xor
mov
cmp
mov
xor
loope
shll
call
cld
pop
outsb
dec
adc
fnstsw
or
in
jo
inc
les
mov
mov
pushl
add
jg
test
add
test
or
repz
push
mov
divb
mov
sub
popf
icebp
pop
add
mov
or
sbb
push
dec
sbb
add
sbb
icebp
cmp
add
andl
xlat
mov
sbb
jmp
pop
movsb
sub
inc
mov
int
and
ret
iret
mov
testl
lea
xchg
inc
adc
test
adc
jne
or
dec
lret
add
push
xchg
jb
jge
jnp
rcll
pop
and
inc
enter
das
mov
dec
jbe
insb
cmp
add
sbb
lcall
push
or
clc
pop
jmp
jns
jmp
shr
loopne
in
faddl
xchg
mov
push
dec
mov
loop
shll
sbb
sbb
cmpsl
cmp
mov
dec
out
dec
or
jp
jecxz
fwait
and
jne
jne
ja
sub
xchg
lahf
cld
adc
push
fistps
jmp
jnp
push
mov
add
mov
shll
mov
pop
jno
lret
test
and
mov
pop
jne
int
add
add
fildll
js
rolb
aad
fiaddl
sub
mov
js
lock
aaa
cmc
sub
sbb
jo
loop
adc
arpl
mov
iret
push
fidivrs
and
in
push
push
jg
aas
sub
sub
sub
pop
mov
lcall
mov
ljmp
ljmp
test
test
cmp
sub
popf
add
in
sub
stos
movsb
pop
push
push
xor
sub
lahf
sbb
mov
push
mov
clc
xchg
fmul
jns
or
lea
jp
sbb
dec
add
sbb
stos
sub
fs
sbb
cmp
lock
into
cmp
sbb
inc
push
pop
or
dec
push
sub
shrb
outsb
mov
movsl
xor
and
add
test
push
mov
bound
cmc
rcrb
popa
adc
flds
pop
push
cmc
adc
adc
push
dec
jnp
out
jle
or
xchg
daa
mov
in
xlat
sti
xor
mov
in
cmpsl
aas
ja
push
mov
cli
andl
clc
loope
stos
sarl
ficoms
mov
loope
jb
shr
adc
pop
aad
jns
or
push
adc
inc
das
and
xor
cvtdq2ps
loop
sub
xor
inc
loop
setb
pop
dec
lock
fisubl
jo
scas
push
and
xchg
mov
mov
xchg
rclb
mov
jle
sub
mov
fildll
push
outsl
data16
mul
and
mov
pop
stos
jl
dec
repnz
or
icebp
add
cld
fistpl
int3
push
xchg
mov
icebp
add
fdivrs
mov
fists
and
lret
lret
cmp
push
sub
outsb
lods
dec
fnsave
pop
ret
xchg
fsubl
pushf
cli
add
and
or
push
ja
xor
pop
getsec
pop
outsl
inc
sbb
sbb
jns
movsl
pop
add
fidivs
test
adc
sbb
movsb
xor
pop
in
imulb
pushf
popa
cltd
cmp
in
push
addr16
out
cld
jae
inc
sub
lahf
pop
pop
mov
jecxz
push
and
icebp
and
mov
ds
inc
mov
sub
test
fisubrs
push
das
inc
lcall
lret
adc
leave
lods
fwait
lods
dec
mov
in
xlat
lea
sbb
xchg
dec
jle
ffree
pop
movsl
lret
push
jle
adc
mov
into
aaa
xchg
and
test
ljmp
test
in
aas
push
or
adc
dec
ja
dec
and
imul
mov
lahf
xchg
imul
cmp
es
les
ss
aaa
leave
xchg
mov
adc
lods
repnz
test
or
push
sub
lret
jnp
add
jp
xor
mov
adc
pushf
popf
jo
inc
jno
outsb
insb
cmpsl
mov
loope
cld
pusha
mov
aad
cld
lcall
test
mov
push
sarb
imul
es
call
addr16
push
fdivs
and
mov
sbb
mov
pop
and
aaa
jbe
push
jle
lahf
lods
jle
lods
cmp
pop
dec
gs
imul
xor
adc
pop
pushf
daa
dec
or
loop
mov
scas
pop
adc
xor
xchg
in
repz
mov
jg
dec
fisubrl
inc
imul
cmp
cmp
mov
xchg
shlb
fwait
cs
mov
cli
xchg
mov
pop
test
lcall
adc
pop
xor
mov
jp
adc
fwait
add
clc
push
mov
mov
js
sahf
fwait
outsb
lret
xchg
int3
add
popf
dec
cmp
js
out
xchg
push
mov
mov
sub
push
mov
cltd
nop
das
jl
mov
pop
clc
jp
les
in
pusha
xor
jecxz
jno
push
movsl
jg
in
mov
ret
xchg
pop
popa
ss
push
and
jl
imul
loope
inc
inc
in
dec
jns
dec
lea
loop
xor
dec
subb
mov
addb
and
fs
mov
pop
ret
jo
mov
stc
xor
pop
mulb
clc
repz
daa
imul
int
or
inc
lret
sub
cmp
lods
clc
and
bnd
and
in
popf
lret
lret
lret
inc
jle
and
push
sbb
mov
mov
frstor
mov
sahf
adc
jne
subl
int3
das
xchg
pop
hlt
inc
dec
or
maxps
xchg
xor
jg
cs
lock
cmpsb
cmp
iret
outsl
mov
push
and
shll
out
jg
or
roll
cs
and
loopne
sbb
mov
pop
cmp
xor
xor
stos
iret
add
aas
test
adc
xchg
sbb
jmp
lahf
mov
clc
ljmp
dec
xor
scas
shr
movsl
push
and
insb
cmp
fnsave
fbld
adc
push
cwtl
mov
and
xlat
sbb
loop
aaa
push
push
mov
lcall
lcall
shrl
andb
insb
and
or
pop
cmp
mov
xor
inc
dec
imulb
shrl
imul
mov
stos
mov
pushf
add
lcall
inc
pop
imul
mov
in
dec
and
xchg
repz
fiaddl
in
shlb
into
sbb
pop
mov
popf
mov
mov
js
cmp
adc
pop
push
sub
fwait
xor
add
ficoml
and
fucom
inc
xchg
push
fwait
rcrb
and
inc
and
sti
lods
jmp
mov
insl
mov
cld
cmp
xor
sahf
jl
add
dec
aaa
jns
icebp
lock
iret
into
jle
pusha
into
mov
enter
jns
xchg
xor
test
sbbl
cmp
ljmp
and
mov
fsubrs
pop
jmp
inc
lret
adc
lock
fsubr
or
mov
pop
fcomp
stos
cld
fsub
jle
scas
xchg
movsb
adc
aas
or
in
mov
or
loop
out
scas
in
mov
hlt
ja
mov
fsts
shr
das
xchg
jbe
jnp
mov
push
shrb
call
or
adc
das
xor
mov
int
jno
sti
jge
pop
cld
into
loopne
xor
add
adc
inc
out
fsave
lods
adcl
ficompl
aad
lods
sbb
mov
out
jg
je
stos
push
out
jne
push
jns
fucomp
xchg
fidivrs
and
leave
loop
mov
in
ljmp
dec
in
ljmp
mov
adc
or
adc
xlat
dec
das
sbb
loop
and
call
ss
add
loopne
jle
sahf
fcomp
test
inc
sbb
cld
jg
outsb
stc
jnp
leave
add
cmp
mov
pop
pxor
pop
stc
sbb
cld
mov
shl
out
dec
inc
loopne
sysret
jb
shlb
scas
cmp
aas
mov
stos
movsl
fwait
lcall
jb
and
and
out
lret
ffree
pop
or
leave
cmp
pop
scas
jns
inc
pop
popf
jns
lret
loop
inc
lcall
test
dec
mov
mov
lret
fcmovnb
ss
inc
shld
mov
fldt
or
lea
cmp
jno
mov
dec
nop
jno
stos
into
jnp
ljmp
adc
mov
andl
or
daa
mov
and
lahf
and
negb
shll
sub
cmp
mov
xor
lahf
adc
mov
call
xchg
divb
cs
jge
shr
sbb
mov
dec
test
incl
adc
mov
fbld
sub
in
jecxz
in
adc
xor
xchg
xor
push
sub
repz
mov
inc
into
sbb
ss
push
in
sahf
call
jbe
fadds
ljmp
jno
inc
pop
adc
ret
sub
ja
push
jbe
jmp
mov
enter
xor
inc
push
je
pop
dec
dec
add
jecxz
xchg
ja
sub
jbe
mov
jae
repnz
xor
jl
and
mov
dec
mov
mov
mov
leave
mov
pop
mov
mov
js
cmpsl
xchg
jp
mov
and
es
mov
fstpl
stc
jb
xchg
cmpsl
fdivrp
test
cmpsl
push
mov
mov
sbb
adcb
andb
js
mov
inc
adc
push
fisttps
push
mov
push
dec
into
movsl
aaa
loop
cltd
pop
mov
add
cmpb
pop
dec
pop
cmp
dec
fists
add
aas
inc
es
shrl
inc
xchg
daa
pop
mov
lock
aas
imul
out
cltd
dec
add
adc
inc
xor
cs
repz
fldenv
jmp
dec
or
adc
and
sarb
ss
rorb
movsb
mov
mov
out
mov
inc
imul
stc
push
jb
sub
iret
in
je
or
cli
cmp
rcr
xor
ret
and
jecxz
loopne
adc
aam
decb
pop
mov
in
mov
aad
lods
cwtl
sbb
add
sub
adc
in
or
mov
addr16
or
les
jl
inc
ds
js
cmp
lcall
pop
inc
sbb
fnstenv
outsb
sbb
inc
xchg
push
xchg
mov
lea
sbb
cltd
mov
in
add
inc
cld
mov
xchg
or
les
jno
sub
pop
and
inc
mov
test
subl
mov
test
mov
adc
rcrb
push
add
mov
fsubrl
cmp
in
dec
fmull
lcall
call
movsl
adc
push
rorb
jae
dec
inc
out
ss
ror
dec
andb
test
sbb
ret
rol
inc
out
test
push
ja
out
cmp
icebp
push
mov
and
and
faddl
push
cmp
icebp
mov
idivl
xchg
cwtl
jo
and
xchg
inc
pop
mov
cmp
sbbl
add
mov
pop
pushf
lods
fcompl
inc
orb
xchg
outsl
ret
aaa
daa
mov
cmp
and
add
and
mov
cmp
lea
ret
sub
adc
into
mov
or
mov
rcll
push
pop
outsb
cwtl
sub
or
fs
rorl
in
mov
and
pop
ret
adc
push
adc
js
mov
ss
pusha
aaa
jae
fwait
repnz
mov
jge
out
sub
mov
pop
lahf
push
adc
mov
dec
outsb
cmp
ja
xchg
xchg
std
xor
hlt
shlb
stos
insb
push
cmp
dec
orb
cmp
data16
scas
jae
xor
call
es
push
cmp
in
jg
xchg
popf
daa
push
mov
nop
cmp
jge
outsb
mov
imul
sbb
or
dec
in
out
mov
xor
aam
idivb
jo
jno
hlt
arpl
lret
lcall
ds
orb
jl
mov
inc
je
aad
and
push
les
mov
cmp
roll
out
sbb
mov
leave
mov
inc
mov
mov
sahf
out
cmp
mov
and
adc
cmp
fwait
jge
mov
cli
clc
leave
or
mov
or
xchg
push
sbb
mov
jmp
mov
sub
stc
stos
mov
inc
out
adc
push
and
lcall
jnp
adc
lock
xchg
repnz
out
cmp
mov
mov
xchg
or
inc
inc
push
push
std
test
mov
mov
leave
test
mov
incl
xor
jnp
push
cmp
mov
pop
les
outsl
rclb
cli
push
fucom
fstl
aam
loopne
push
stos
jecxz
addr16
shll
jg
cli
pop
or
je
stc
test
pusha
inc
pop
or
mov
leave
popf
pop
in
or
or
mov
repnz
sahf
inc
cmp
push
mov
data16
shll
adc
lret
outsl
gs
lea
xor
xchg
rol
lods
fs
sub
or
loopne
repz
jae
mov
sub
or
lods
mov
testb
xor
in
movsb
or
xlat
push
sub
stc
ss
pop
ss
mov
mov
nop
std
mov
sti
push
cmc
pop
jbe
jl
hlt
lret
nop
xchg
mov
movb
dec
push
or
sub
icebp
or
adc
mov
xchg
mov
cmpsl
loopne
popa
push
cwtl
and
push
cwtl
fucomip
xchg
cwtl
cmc
sub
push
cmc
js
lret
adc
loopne
aad
inc
sti
movsb
jae
sub
in
jmp
lods
sub
cmp
subb
in
mov
adc
push
cmp
int
dec
mov
inc
inc
lock
ret
pop
push
lods
fs
or
stc
fwait
jg
push
pop
sahf
xchg
lret
xchg
rol
xchg
sti
cld
xor
sahf
adc
sahf
rcl
rorl
add
inc
stos
dec
cld
enter
push
pop
jb
imul
mov
mov
cmp
jns
sbb
mov
jmp
fldenv
add
inc
cs
fsubr
fidivl
imul
mov
xchg
inc
mov
jp
pop
repnz
mov
lret
std
sti
fstpt
lods
inc
or
push
ja
leave
cmp
addr16
sub
stos
orb
push
sti
pop
fbstp
dec
sub
cmpb
out
lea
in
pop
adc
add
inc
ds
sub
sub
cmp
fdivp
cmp
push
sbb
inc
push
xchg
gs
xorl
imul
ljmp
loope
enter
sbb
jge
lods
jl
xor
push
sbb
loop
mov
xchg
adc
in
lret
lahf
cltd
cltd
push
ret
jo
stos
jp
imul
dec
loope
adc
int3
into
int
or
pop
es
adc
cmp
xchg
jp
and
jp
cli
mov
sub
adc
in
iret
push
xor
lods
cld
test
lods
outsl
shl
movsb
xchg
pushf
call
insb
inc
test
je
dec
push
out
xchg
adc
sub
lahf
push
mov
pop
dec
out
rclb
xor
in
inc
mov
mov
mov
xchg
ret
sbbb
mov
mov
jl
xor
mov
leave
push
in
xor
mov
lret
loope
inc
pop
lds
cs
outsl
pop
insb
pop
test
lods
aas
ret
scas
xor
mov
aam
loope
pop
xlat
jnp
push
add
pop
into
stos
jns
in
je
out
or
loope
xchg
sbb
aas
ja
cmp
mov
icebp
sbb
sub
mov
ds
mov
lea
insb
scas
pop
faddp
and
inc
fists
mov
scas
pop
push
sub
loope
push
inc
sbb
xchg
outsl
jne
fnsave
decl
enter
roll
push
cld
and
arpl
or
jnp
scas
dec
fnsave
jne
clc
sub
int3
mov
js
sub
add
frstor
lea
fidivl
mov
pop
lret
repz
pop
lret
jle
sbbb
fdivr
sbb
jle
lock
xlat
mov
inc
int3
xor
inc
enter
mov
push
scas
mov
cld
adc
xor
sbb
sub
cli
mov
add
outsl
jne
cltd
fidivrl
popa
mov
and
jle
lret
xchg
inc
mov
fistpl
ffreep
jmp
inc
sti
mov
pop
fidivrl
pop
sbb
movsl
pop
insl
sub
les
stc
add
push
fisttpll
pop
sarb
movsb
scas
mov
cwtl
adc
mov
mov
pop
add
sbb
mov
xor
ds
fdiv
insl
aad
mov
nop
insl
pop
jnp
adc
rcrl
js
sub
and
scas
xchg
sub
rcl
lds
jmp
xor
xor
xchg
mov
mov
cmpb
subl
push
xor
push
movl
leave
sbb
xor
and
fcomps
shl
mov
adc
mov
or
rclb
push
popa
aaa
fstpl
subl
sub
pop
and
push
in
insb
iret
cld
addb
clc
add
cmp
dec
sbb
int
idivb
mov
fcoml
sbb
ss
add
sti
aam
mov
dec
fnstcw
jle
inc
push
lret
xor
cmp
xchg
or
pop
push
cmp
fwait
sub
fs
ficomps
and
mov
jnp
das
mov
insl
js
dec
loop
sub
xchg
xchg
ror
push
lret
lcall
sahf
jmp
pop
lret
pushf
sbb
sub
sub
jp
cld
psubb
mov
test
jbe
sub
outsl
adc
cltd
mov
sbb
out
vcvttpd2dqy
sbb
rorb
and
pop
sub
adc
aam
xor
rol
mov
scas
pushf
aam
dec
mov
mov
and
scas
pop
jp
loope
sbb
jl
mov
int3
push
or
cmp
pop
std
adc
jno
orb
push
pushfw
mov
dec
fs
les
ret
pop
lcall
loope
sub
out
outsb
popa
pop
sbb
xor
lret
pop
orl
inc
gs
hlt
cld
into
push
in
aad
push
test
sub
std
or
arpl
xor
pop
cmpsl
test
jle
outsb
adc
aam
shll
pushf
aaa
lcall
dec
mov
cmp
in
lods
leave
and
out
lret
xchg
movl
cmpsl
hlt
cmp
cld
sbb
sti
cmpsl
sti
imull
adc
ja
enter
shl
shlb
push
mov
jne
sbb
add
mov
sbb
or
xor
mov
mov
ss
das
xchg
aas
adc
and
pop
inc
mov
mov
xchg
fisttpll
add
cmp
pop
sbb
int3
pop
lret
pop
xchg
mov
pushf
pop
cmp
outsl
lret
data16
inc
in
inc
adc
into
mov
addb
xchg
pop
mov
shlb
testb
sahf
pop
push
xchg
pop
leave
adc
or
mov
sbb
pusha
adc
inc
push
shll
movsl
in
movsl
jbe
pop
jl
mov
stos
scas
cli
push
lahf
sbb
jbe
pusha
push
adc
mov
mov
sub
mov
ss
and
dec
pusha
call
loopne
aam
rcll
or
mov
mov
cmp
jp
or
cmp
cmp
iret
mov
rcr
cmpsl
lea
loop
insw
dec
data16
push
push
xor
cwtl
xchg
mov
dec
add
add
or
inc
mov
int3
out
inc
iret
insl
in
andl
lcall
sub
call
rcl
push
repz
in
shr
out
dec
lods
cmp
movsl
aas
push
imul
xlat
stc
jmp
jle
rcll
out
mov
ljmp
cmp
sti
push
pop
mov
mov
cmc
aaa
rcll
mov
jl
sub
cs
or
add
stos
xchg
jg
arpl
dec
xor
fcmovnu
sahf
nop
sbb
sub
movsb
sub
mov
mov
xchg
xchg
sub
pop
and
inc
lods
mov
sbb
pop
std
cmp
call
stos
mov
into
mov
mov
jbe
in
sahf
imul
bound
or
data16
call
xchg
xchg
addb
xor
movsb
xlat
test
dec
xchg
out
lret
rorl
jno
cmp
mov
inc
mov
ja
mov
inc
and
fadds
pop
mov
sahf
push
inc
mov
mov
cmpsl
xor
and
sbb
lcall
idivl
out
popf
xor
ss
cmp
or
pop
popf
and
test
xchg
sbb
aaa
xor
mov
int3
mov
cmpsl
mov
test
dec
pop
dec
decl
mov
and
test
dec
pop
or
or
pop
ror
fildl
jo
out
and
xor
imul
push
test
dec
add
sbb
sarl
pop
sub
cmpsb
and
mov
xor
into
or
in
scas
andl
mov
sub
cmpsl
jle
cmpl
push
lods
sub
inc
mov
jo
shll
add
stc
sarl
pop
sbb
into
pop
int3
fsubrl
add
in
dec
push
sbb
or
lock
push
xchg
pop
fcomps
sbb
hlt
cmp
mov
je
sbbb
mov
mov
pop
cmp
sbb
in
pop
mov
pushl
dec
add
lods
idivl
cmp
inc
fbstp
cmp
push
aam
sub
and
jo
dec
and
pop
push
mov
cmp
push
in
arpl
xor
pop
jg
mov
ret
xor
cmp
out
jbe
lahf
inc
mov
or
push
insb
push
push
dec
and
pop
ja
dec
test
daa
mov
movsl
sub
or
insl
enter
cmpb
mov
inc
xchg
sbb
fidivl
pop
sbb
pop
lret
add
ret
scas
icebp
fsubl
cmp
es
je
add
or
dec
mov
jmp
ret
jle
lds
pushf
out
push
andb
mov
in
mov
cmp
out
mov
daa
movsl
cmp
push
mov
decb
mov
push
xchg
stos
cld
bnd
mov
and
ds
push
imul
jp
repnz
lds
out
push
jle
cmp
jl
xchg
push
fdivrl
dec
sbb
xchg
sbb
inc
ret
div
add
push
lea
movsb
mov
cmp
and
inc
icebp
test
pop
sub
loopne
data16
xchg
sbb
push
pop
pop
mov
xchg
outsl
dec
stos
dec
adc
inc
xor
and
dec
xchg
mov
adc
xchg
imul
fsubrp
adc
rcrb
push
or
push
add
iret
shll
outsl
adc
loopne
mov
fildll
icebp
in
add
xor
xchg
adc
ds
sub
adc
and
in
test
and
adc
jb
testb
xor
in
stc
adc
sti
fiaddl
ljmp
aad
in
jnp
add
mov
xor
aad
jae
dec
mov
lahf
rorb
std
sahf
push
adc
adc
dec
and
pop
mov
jbe
cwtl
out
int
das
and
pop
iret
mov
cmp
sub
test
roll
dec
sub
out
pusha
or
lds
int3
out
addl
mov
out
aad
imul
adc
or
lret
or
sbb
shll
repz
cmpsb
ja
sbb
test
sahf
adc
sub
cld
xor
xor
lret
xchg
jmp
cs
push
cmp
lods
sar
andps
add
push
imul
in
inc
enter
push
testl
push
mov
mov
mov
or
mov
ljmp
inc
push
in
adc
int
cmpsl
repz
dec
repnz
sub
cmp
and
repz
call
inc
mov
cwtl
inc
mov
pop
daa
fidivl
aaa
jns
sub
dec
adc
sbb
pop
add
les
sbb
sahf
xchg
push
xchg
adc
shlb
and
sbb
add
push
and
int
mov
pop
popf
xchg
les
rcrl
push
in
xchg
mov
add
cwtl
aas
test
loopne
sbb
addr16
scas
negl
ret
lods
in
add
roll
pop
sbb
dec
data16
lea
mov
dec
push
pop
sahf
into
lcall
test
jge
fbld
adcb
push
pop
rclb
movsb
cmpsb
mov
jns
inc
mov
push
adcb
xorb
dec
adc
add
xor
test
jge
mov
outsb
jae
push
jbe
mov
loop
fs
mov
testl
imul
in
les
mull
add
pop
add
mov
jb
push
mov
xor
leave
adc
lahf
xor
xor
and
cmp
jmp
xor
inc
or
add
xor
ficomps
rcrl
and
push
dec
enter
or
cli
mov
lods
sbb
push
add
je
mov
push
xchg
pop
insb
xchg
xor
dec
ja
loope
sub
sbb
cmp
mov
jge
fldcw
lcall
dec
lea
cmpsb
pushf
cs
xor
nop
aad
addr16
push
adc
add
lods
sbb
jecxz
add
notb
xchg
sbb
sbb
xchg
push
inc
sbb
xchg
cmpl
sbb
mov
mov
dec
push
test
jns
aaa
sub
mov
xchg
roll
insb
push
and
pop
pop
aam
mov
aam
mov
jle
repz
cmpsl
das
daa
out
dec
adc
std
mov
notl
fbstp
add
int3
dec
xchg
adcb
pop
mul
dec
cmpsb
pop
dec
and
cli
sub
rcrb
imulb
mov
lret
pushl
jbe
cmp
sbb
std
xchg
or
xchg
mov
fucom
shrl
ficompl
cmp
mov
push
sbb
addl
scas
aam
xor
jns
push
cmp
push
loopne
pop
shlb
pop
imul
loop
lods
mov
sarb
sub
sti
mov
ljmp
jo
int
mov
xor
cli
xchg
inc
shlb
repnz
aam
aaa
add
push
inc
lret
mov
int3
outsl
pavgw
mov
mov
js
sbb
aam
dec
shll
dec
out
xchg
pop
and
mov
xchg
xchg
push
jb
out
lods
add
scas
mov
out
lock
jp
inc
cmp
cld
outsl
insl
jg
mov
movsl
pop
sbb
data16
ds
jl
cmpsl
sub
jg
xchg
stos
loopne
jecxz
pop
push
aad
push
sub
shrl
add
jl
iret
loope
lods
jmp
lahf
push
dec
out
es
call
pop
cmpsb
mov
les
xor
inc
jne
and
push
mov
push
je
je
xchg
cmc
xchg
sub
dec
js
std
pusha
xchg
sarb
test
lods
movsb
int3
shll
and
jmp
mov
imul
pop
mov
dec
mov
xorb
push
shll
push
pop
mov
ficompl
ret
sub
add
pop
push
in
mov
loopne
inc
add
roll
and
xlat
push
stos
dec
into
fndisi(8087
push
dec
cmp
pusha
sub
pusha
jmp
les
stc
lahf
jle
cmpl
push
test
into
add
popf
adcb
test
xchg
mov
xchg
lahf
xor
fwait
jg
mov
dec
xchg
xor
xchg
test
stos
fcompl
sub
and
dec
cltd
lahf
jmp
fxam
jae
scas
inc
mov
stos
adc
pop
cmpsb
jns
mov
push
mov
andl
sub
sub
daa
es
addr16
mov
movsb
in
ficompl
ret
gs
insb
adc
in
fcoms
loope
and
cmp
jmp
ds
add
cmp
inc
stos
aaa
inc
mov
xchg
mov
mov
dec
jle
push
shll
in
mov
mov
pop
iret
push
int
pop
mov
iret
add
push
inc
jo
xchg
pop
push
mov
xchg
inc
in
loop
dec
frstor
aas
in
and
mov
mov
ficoml
lea
pop
mov
fidivrl
mov
jmp
push
out
jno
push
pop
add
les
push
add
xchg
xor
dec
mov
mov
mov
repz
adc
and
jb
mov
out
or
xor
mov
xorl
lds
push
mov
les
ja
ljmp
cmpsb
mov
das
and
pop
xor
int
inc
rcll
cld
cltd
xchg
sbb
xor
iret
pop
mov
xor
cltd
push
or
cmp
jns
int
movsb
fsubrl
mov
shlb
cwtl
xchg
fiaddl
sbb
mov
sub
push
jae
cwtl
jp
imul
in
stos
mov
sahf
xlat
jmp
mov
pop
push
in
cmpsl
shll
loope
repnz
aam
rolb
es
and
adc
not
jecxz
insl
pop
jns
insb
mov
jb
push
clc
and
dec
popa
push
out
int3
movsl
pop
push
dec
mov
xchg
sbb
fdivr
sub
sub
xor
adc
loope
cmp
push
mov
repz
push
jne
lea
aas
dec
push
call
mov
and
jb
jnp
inc
aaa
int
dec
outsl
jl
pop
jnp
lds
pop
push
arpl
or
adc
scas
lds
repz
in
int
lods
xor
mov
jge
mov
fisubs
sub
cmpsl
sbb
xor
outsl
mov
xchg
dec
mov
fstl
arpl
pop
ss
fbstp
cmpsl
out
into
push
mov
mov
xchg
pop
daa
mov
push
mov
out
lods
in
popa
in
pop
adc
loopne
leave
xor
add
mov
dec
lret
pop
mov
in
cmc
fwait
cmp
loop
inc
gs
xchg
clc
lds
popf
fildll
cmpsb
test
rorb
rclb
or
shr
lods
cmc
mov
imul
jmp
jle
jecxz
fiaddl
or
inc
stos
cmp
sbb
sub
rol
mov
pushf
dec
mov
fcmove
nop
jne
adc
or
fs
outsb
int3
or
pop
lea
mov
ret
pop
imul
push
incb
sahf
fsubr
popa
push
out
cmp
sub
add
push
jmp
dec
cmp
cld
mov
xor
loope
jne
daa
jae
cmpsl
sbb
push
push
jnp
ss
xor
syscall
xchg
fistpll
or
rcrl
scas
xchg
ljmp
fimuls
cmp
sbb
adc
movsl
mov
add
test
sub
ss
mov
mov
sub
xor
jge
lds
nop
xchg
xor
aas
test
or
popa
add
pop
push
cmp
dec
test
jae
aaa
or
js
inc
outsl
sbb
adc
or
jl
jb
jbe
test
lret
mov
xchg
call
fldl
push
mov
out
or
jecxz
in
aam
mov
pop
and
fwait
mov
insl
xchg
mov
cmp
sbb
jnp
dec
pxor
shr
add
mov
mov
adcl
loopne
mov
daa
jmp
sbbb
or
mov
addr16
xor
call
inc
mov
mov
fs
mov
adc
push
pop
lods
lds
mov
loope
addr16
in
nop
add
sarb
mov
aaa
or
push
aam
dec
divl
jp
outsb
push
add
fnstenv
mov
mov
jnp
push
popa
push
dec
aad
push
movsl
mov
xchg
pushf
in
sbb
cmp
dec
sbbb
push
pop
xchg
xor
iret
ss
repz
shlb
icebp
test
jb
in
mov
mov
fs
mov
cs
xor
jmp
sub
lcall
stos
leave
mov
xchg
dec
sbb
dec
jecxz
and
and
pop
sti
or
out
jbe
in
xor
loop
int
mov
xchg
hlt
sbbl
cmc
pop
xlat
out
adc
leave
adcl
popl
into
sub
fwait
dec
push
mov
ret
in
daa
js
xor
xchg
adc
jp
add
pop
or
sar
or
add
das
lock
xadd
and
inc
clc
dec
inc
add
enter
mov
ds
push
sbb
fidivrl
push
cmp
dec
adc
xor
les
xor
icebp
adc
mov
ljmp
xlat
call
arpl
mov
jl
lcall
pusha
sbb
xchg
mov
sbb
push
push
icebp
mov
xor
jg
loop
push
pop
push
rclb
sti
jbe
or
pop
push
gs
xor
mov
add
or
xchg
in
mov
push
add
and
sar
test
push
in
jge
push
adc
cmp
jns
cmpsl
pop
jl
push
scas
cld
filds
push
stos
fwait
lods
sti
jno
push
test
xchg
call
pop
cmp
bnd
sbb
jne
mov
xchg
lret
push
jbe
and
dec
in
jecxz
test
xor
inc
sbb
sub
rcr
lds
xor
fistps
es
pop
dec
ja
popf
mov
add
mov
ret
scas
cli
mov
mov
mov
dec
mov
stos
dec
push
mov
inc
faddl
mov
sub
jp
add
rolb
mov
xchg
enter
inc
xor
es
hlt
aam
lods
outsl
mov
jnp
mov
xchg
shlb
shll
filds
mov
cmpsl
add
outsb
xor
mov
dec
iret
dec
and
jns
jge
lahf
popf
lods
xor
testb
xchg
xchg
pop
xrelease
das
pop
add
leave
jle
and
pop
fcomi
ss
mov
inc
sub
xor
shl
shrb
push
push
aad
sbb
dec
sar
in
movsl
pop
stos
or
roll
add
dec
pop
aas
push
faddl
shr
les
jns
and
lods
pop
inc
add
sub
pop
add
mov
jle
cmc
cmc
movl
adc
arpl
push
dec
clc
sub
cmp
pop
add
iret
dec
insb
fistl
pushf
mov
fldl
nop
sub
or
frstor
fbstp
loopne
push
mov
and
ffreep
insl
mov
lods
pushl
test
lret
and
adc
pop
inc
sbbb
fidivrs
add
cmp
mov
ljmp
jge
inc
cli
adc
xchg
lock
xor
outsl
xor
pop
cmp
repz
dec
scas
lds
fcoms
adc
add
in
sub
or
jo
xchg
push
nop
rcrb
xor
sbb
dec
sbb
icebp
scas
ficomps
lock
mov
and
loop
dec
push
leave
loope,pt
mov
test
hlt
mov
mov
sahf
or
add
enter
and
mov
sub
dec
jnp
fs
lahf
jae
push
sbb
clc
out
sahf
mov
in
pop
imul
sbb
cs
addb
aas
or
imul
rcrl
sti
test
inc
dec
aaa
std
mov
orb
rcr
xchg
jno,pt
ficoml
pop
fbld
or
gs
jp
and
stos
jb
aas
cmpsb
add
sbb
and
pop
jne
ret
xchg
push
dec
dec
xor
inc
lock
dec
pop
mov
xchg
arpl
adc
xchg
pop
lock
or
xchg
or
jecxz
dec
jmp
shrl
push
shlb
dec
gs
clc
adc
cli
adc
out
fsubrl
push
in
shrb
dec
inc
mov
and
sbbb
jne
fstps
inc
and
pop
mov
sub
cli
pop
mov
fsubrs
jge
push
push
sbb
fucomp
push
mov
jne
movsb
inc
jp
gs
icebp
sub
fldcw
aad
pop
adc
test
add
fwait
shl
mov
popa
sarl
or
fwait
xchg
and
cmp
es
sub
dec
xor
popf
mov
xchg
cltd
scas
shlb
scas
push
adc
cmp
mov
pop
mov
push
daa
jg
bound
adc
cmp
add
jg
cwtl
jp
mov
popa
jge
sbbl
lds
stos
insb
push
xchg
or
adc
or
sbb
xor
mov
rcr
push
dec
insl
mov
and
or
mov
loopne
or
pop
ret
or
and
adc
lods
cmc
jge
sti
push
push
daa
insb
xor
adc
dec
xor
hlt
stc
jl
loope
dec
sahf
mov
cmp
inc
fisubl
movsl
adc
pop
sahf
pop
hlt
negl
fstl
fiaddl
adc
xchg
mov
aaa
inc
push
leave
les
fstpl
jo
push
ss
dec
jecxz
mov
imulb
or
fisubrs
lcall
mov
jge
icebp
jmp
mov
fsubl
xor
mov
daa
bound
negb
mov
int
adc
xor
cltd
inc
and
add
lods
js
mov
insl
ss
out
add
and
sbb
jno
in
in
pusha
dec
inc
cmp
repnz
sbb
or
sbb
aas
call
xchg
push
sub
mov
out
adc
mov
adc
lds
pop
push
movsb
pop
ds
loop
dec
rorb
xor
ljmp
mov
js
cmp
fisttpl
stos
lea
mov
cmc
pop
pop
sbb
test
mov
repz
rcrl
fisttpll
add
int
rcll
mov
loopne
and
pop
bound
sahf
mov
or
mov
int3
aad
fst
repnz
xchg
pop
mov
pusha
pop
std
lret
lock
cli
xor
cmc
jl
and
rorb
xchg
add
mov
nop
mov
decl
pop
repnz
sub
popa
lret
aaa
sub
and
sti
cmpsl
lret
pop
or
rcll
or
fldt
in
pushf
test
inc
mov
xor
cmp
mov
loopne
lods
int
push
cld
out
xor
out
pop
stc
dec
push
xchg
jns
mov
test
std
outsb
testb
in
sbb
jb
out
jbe
aam
mov
cmp
rcrl
cmp
jmp
pop
mov
sub
ljmp
push
mov
cmpsl
mov
repz
cmpsb
adc
sbb
cmp
iret
orl
jb
and
push
xor
mov
movsl
lds
rcll
adc
jnp
sub
daa
and
add
and
pop
aas
leave
push
inc
xchg
xchg
aas
das
outsb
xchg
dec
xchg
roll
lcall
into
in
das
xchg
sbb
and
arpl
cmp
push
or
data16
fistps
cwtl
popf
test
jle
inc
inc
fucomp
lret
jmp
inc
loopne
std
test
int3
test
inc
xchg
js
icebp
dec
push
ja
xchg
add
sub
xchg
xor
stc
ljmp
add
inc
movsl
out
adc
loope
movsl
adc
inc
out
mov
aam
mov
inc
xor
repz
and
dec
ljmp
mov
inc
and
lods
out
fidivrs
mov
js
cmp
lea
aaa
dec
vmwrite
outsb
cmp
cmc
or
rol
sub
pop
push
pop
dec
movsl
cmp
cwtl
sbb
pop
lret
gs
pop
outsl
sti
mov
mov
stos
sub
jmp
inc
or
aad
add
mov
and
shlb
adc
xor
xor
xchg
lret
pop
mov
inc
into
mov
imul
pop
dec
cs
insb
inc
or
push
xor
sub
sahf
je
and
test
shrl
mov
int
sub
or
adc
push
gs
add
xchg
jno
xchg
push
ljmp
outsl
lods
popa
fucomip
push
pop
xor
xchg
addr16
lret
sub
xchg
fstpt
iret
repnz
adc
pop
jo
xorb
mov
fisubs
mov
pop
rcrb
arpl
stos
mov
mov
sarl
js
bound
adc
subb
fldt
jns
pushf
mov
pop
aad
add
mov
test
adc
xchg
sbb
fmull
test
ja
sahf
lds
imull
mov
in
jmp
out
adc
xchg
repz
cmpsb
dec
fimull
sub
dec
testl
sbb
push
and
addr16
sub
aad
ret
jecxz
mov
xor
fmul
ja
pop
sahf
mov
jae
pop
push
imul
sub
or
icebp
cs
subb
cltd
xlat
sub
pop
jo
call
adc
fnstcw
test
inc
add
or
jecxz
cmp
push
xor
mov
xor
add
insb
clc
pop
frstor
fs
sbb
push
lods
flds
and
jg
inc
lea
ret
sub
outsb
sbb
dec
stc
mov
sub
and
push
frstor
dec
lds
in
cld
rol
sub
das
mov
lcall
daa
std
pop
lahf
out
mov
jb
xor
and
cmpsl
inc
xchg
pop
mov
out
rcr
test
lea
jb,pn
or
lret
push
das
pop
or
mov
hlt
inc
lcall
jno
pop
add
scas
sbb
mov
out
fildl
es
fiadds
mov
mov
or
test
xor
push
push
xchg
sbb
push
popa
scas
xlat
lret
add
fidivl
add
mov
test
mov
add
repz
xchg
popa
dec
andl
jne
insl
or
adc
movsb
or
mov
das
pop
shl
pop
loop
orb
pminsw
movsb
ss
add
mov
lahf
mov
adc
and
outsb
cmp
push
in
jbe
fstps
mov
cmpsb
aam
fisttps
std
push
scas
add
sbb
sub
stos
subl
push
aas
mov
jb
int
mov
mov
and
addr16
sbb
sbb
dec
std
jbe
push
sbb
or
out
mov
arpl
fistps
fiaddl
mov
int
outsl
shll
imul
shl
push
push
fimull
andb
ja
int
pop
adc
shr
loop
add
rcrl
je
out
ljmp
push
xor
mov
leave
iret
es
jg
add
fcomps
daa
xchg
data16
jnp
inc
cli
into
rcrl
pop
shll
cmp
dec
inc
out
cmp
sub
xchg
inc
das
fldcw
les
push
jl
nop
mov
adc
out
lods
mov
in
mov
test
fstl
xchg
das
loope
add
pop
pop
sub
pop
mov
or
push
mov
call
xor
or
cmp
fdivl
bound
stos
cmp
lahf
shll
imul
cli
mov
pop
push
enter
sbb
and
jnp
jmp
jl
jle
push
xchg
jb
push
out
xchg
ret
mov
inc
cmc
jl
inc
and
mov
scas
imul
push
gs
mov
push
xor
insl
repnz
popa
mov
push
xchg
inc
adc
xchg
or
daa
cmpsb
sub
in
or
std
lret
cmp
jns
pop
outsb
clc
fwait
ja
ret
int3
xor
add
or
lods
dec
push
pop
lret
fmull
sub
xor
xchg
pop
mov
gs
cli
mov
or
jb
in
jl
mov
dec
sbb
les
jno
loope
sbb
xchg
push
insl
mov
repnz
loopne
mov
fstl
ret
inc
add
loopne
push
rep
out
jno
aad
es
fiaddl
jne
repz
jbe
sub
add
arpl
sbb
add
mov
lcall
pushf
imul
add
jno
jg
xchg
test
jecxz
divb
cmc
jge
jne
ret
ds
inc
push
cs
mov
jmp
adc
pop
push
xchg
popa
jmp
popa
pop
lods
movsl
cltd
push
popa
shl
sarb
jnp
orl
dec
sub
stc
lahf
add
cmp
idivl
pop
mov
shrb
in
jge,pt
push
sub
adcb
jecxz
sbb
mov
or
incb
mov
fimuls
call
outsl
push
fwait
mov
cmp
or
leave
sub
lret
ret
ret
lock
cs
pop
xor
iret
jo
mov
inc
add
mov
mov
jo
loop
mov
jecxz
lock
cmp
push
and
inc
adc
rcrl
adc
mov
hlt
ja
push
fidivrs
loop
mov
fildl
lock
dec
and
push
div
xor
inc
iret
in
stc
inc
mov
ss
pop
xchg
sub
cld
jns
scas
mov
out
cmp
fs
xor
les
out
mov
in
into
mov
cmp
adc
mov
or
roll
dec
cmp
gs
add
cmpsb
cmp
es
es
mov
and
pop
jmp
int
mov
lods
push
ljmp
sbb
out
hlt
jb
or
shll
and
cld
pop
cld
mov
dec
cmp
lret
out
mov
adc
xchg
fisttpl
daa
xchg
repnz
imul
jle
adc
pop
push
fwait
outsl
in
push
outsb
inc
sub
test
fucomip
mov
cli
movsb
daa
cmp
jp
add
jb
in
cmpsl
sbbb
mov
pop
lods
dec
and
jne
and
sbb
popa
xor
push
fisttps
and
mov
cmovo
pop
jl
cwtl
lods
pop
imul
popa
imul
into
inc
mov
sbb
lods
mov
movsl
in
ret
and
mov
sbb
dec
bound
sub
dec
jmp
sahf
int3
lods
fsts
inc
icebp
cmp
xchg
and
cs
dec
mov
sbb
fcmovnb
aaa
sub
cld
test
clc
push
out
es
movsl
mov
jb
mov
cwtl
addr16
xchg
lods
pop
mov
inc
pop
fadds
lret
mov
rcrb
mov
fcmovbe
and
pusha
sub
gs
xchg
aam
loopne
inc
test
les
ret
test
adcb
cwtl
sbb
mov
sub
mov
daa
movsb
dec
and
jp
leave
insb
adc
sub
push
popa
fs
sbb
stos
sub
cwtl
push
lods
mov
sub
mov
addl
mov
cmp
jnp
xchg
dec
cmp
mov
ja
std
incl
jb
pop
push
jp
xchg
sahf
push
aaa
and
inc
pushf
mov
inc
clc
fsts
adc
jnp
icebp
pop
cli
adc
sub
loopne
aaa
repnz
or
arpl
imul
fs
icebp
xor
push
popf
inc
aam
dec
mov
addr16
adc
fnstcw
sbb
pushf
clc
call
jg
or
mov
mov
dec
in
nop
or
ja
mov
cmp
lock
sub
cmp
xchg
or
dec
repnz
and
add
add
push
add
push
scas
mov
cs
loopne
xor
cs
pushf
in
sub
or
add
movsl
cld
pop
mov
ret
adc
push
out
call
fstps
movsl
xchg
movsl
das
dec
ficomps
pop
mov
add
int3
nop
jo
adc
jns
pop
adc
sti
xorl
loopne
push
pop
lds
faddl
ret
shrl
in
add
loope
cs
jno
rolb
sar
mov
dec
push
mov
lds
mov
fwait
daa
sub
mov
sub
icebp
sahf
into
lds
scas
push
mov
scas
neg
ja
mov
cltd
mov
jno
orl
xchg
lock
mov
cltd
jne
cmp
mov
jnp
adc
icebp
adc
aam
xchg
push
push
pop
dec
icebp
pop
ds
negb
or
and
and
fdivrs
shr
cmp
sti
es
jecxz
xchg
jle
cli
notl
inc
sub
das
into
data16
jge
jno
push
mov
xchg
js
jo
fsubrs
es
inc
sub
mov
mov
and
sbb
xchg
adc
dec
pop
xchg
leave
sbb
dec
or
or
popf
sbb
xlat
cli
pop
fwait
mov
or
int
and
popl
jb
stc
sbb
dec
lcall
cli
sub
stos
inc
invd
mov
daa
popa
in
mov
rcrb
sahf
rolb
sahf
xor
cltd
in
jp
roll
add
sti
xor
stos
aaa
push
jl
push
ss
ss
xor
pop
test
push
leave
rorl
out
dec
push
xchg
jge
and
int
out
stos
xor
sub
jmp
jge
out
into
aas
sbb
leave
enter
mov
mov
cmp
cmpsl
pop
pop
sarl
call
out
enter
mov
pusha
xchg
inc
sub
invd
sub
jg
ffree
pusha
push
not
jecxz
pop
ja
mov
faddp
jb
adc
cld
xchg
sti
jbe
ret
jb
lret
sbb
lds
faddl
testb
testb
cmpsl
or
xor
das
sub
stos
push
xor
pusha
xorb
test
lock
sub
scas
pop
popf
or
xchg
inc
call
lcall
mov
leave
xchg
ss
stc
lret
cmp
jg
jno
in
mov
sbb
mov
scas
lea
stos
mov
cli
and
daa
pop
fsubr
jg
xchg
adc
ds
mov
sti
cmp
and
xor
xor
cmpsb
inc
ss
repnz
fldcw
cld
loope
stos
jmp
fdivl
sbbl
mov
hlt
pop
hlt
pop
and
inc
add
dec
negb
dec
xor
fnstcw
pop
adc
ret
push
mov
insl
inc
outsb
dec
lods
add
je
es
cmp
adc
mov
testb
push
xchg
dec
outsl
sub
insl
mov
addr16
fnstcw
or
popf
jecxz
mov
fildll
add
sub
add
and
add
push
mov
call
adc
adc
push
pop
arpl
sbb
test
sarb
subl
cmc
jae
imul
sbb
pop
cs
pop
test
cmc
subb
fisubs
pushf
fsts
or
jnp
inc
sub
lea
xchg
in
jl
das
js
mov
fadds
stos
xor
cltd
iret
das
mov
xchg
call
popf
movsb
sub
dec
icebp
sub
icebp
cmp
and
and
push
jmp
cli
frstor
hlt
mov
adc
pop
mov
lret
sub
pop
or
jo
arpl
das
mov
inc
jns
sahf
mov
leave
ret
dec
mov
add
push
lret
mov
jp
adc
arpl
adc
or
lahf
popa
jbe
lret
fwait
mov
pop
ja
jae
out
inc
cwtl
mov
xchg
push
sar
dec
clc
ljmp
dec
or
call
cld
outsb
test
mov
rclb
pushf
xor
sarb
ret
test
loope
adc
dec
jne
fildl
ret
shlb
int3
jne
les
or
dec
xchg
ljmp
add
push
push
add
faddl
fcoms
das
pop
int
or
push
out
das
jp
push
inc
mov
out
les
cmpsb
nop
ret
lret
daa
int3
jg
cltd
hlt
notl
icebp
and
inc
icebp
xchg
cmp
jge
pop
incb
inc
or
outsb
adc
sbb
or
sub
out
pop
adc
push
mov
and
adc
ljmp
adc
push
rorb
test
jmp
sub
addr16
std
stos
xchg
movsl
enter
xchg
push
jmp
add
jns
ja,pt
in
dec
mov
ss
mov
adc
xchg
aaa
mov
pop
mov
mov
lahf
sub
cld
adc
inc
lahf
jb
jnp
jns
jbe
pop
mov
sti
xor
mov
add
mov
js
sbb
int
sbb
andb
cmp
mov
repz
ja
pop
cli
lcall
push
cli
clc
popa
xor
rclb
xlat
scas
loopne
pop
mov
gs
pop
arpl
seto
mov
pop
xchg
testb
dec
inc
sbb
int
fdivs
sub
aaa
xchg
loopne
shll
hlt
fcoml
push
test
mov
inc
out
mov
or
cld
sbb
fidivrs
inc
pop
push
xlat
push
sub
sub
push
aas
test
or
out
loope
push
mov
pop
push
ss
stos
out
loop
mov
cld
into
movsb
cld
into
out
outsl
daa
adc
pop
lods
mov
test
adc
sti
int3
jae
adc
lahf
xor
xchg
mov
sbb
jmp
enter
push
jb
cmp
inc
mov
lahf
movsb
loope
mov
lods
lret
frstor
xor
cmc
inc
inc
js
add
movsb
inc
lret
push
adc
jp
mov
jne
repnz
mov
daa
lret
dec
movb
or
into
add
jmp
inc
inc
inc
repnz
mov
test
call
inc
pop
scas
mov
fimull
push
jne
push
addb
and
rorb
and
pusha
jmp
cmc
xor
mov
in
sbb
out
aas
ja
lea
cmp
imul
mov
xor
or
aam
adc
in
or
jle
fnsave
out
add
xchg
pop
pop
das
dec
xchg
rcrb
jae
and
mov
into
lods
test
jp
icebp
add
inc
pop
out
push
jl
les
cmc
push
mov
in
mov
pop
lret
aam
mov
xchg
mov
sbb
sti
lods
inc
pop
pop
mov
lods
add
adc
idiv
mov
cmpsl
jno
xorl
mov
cmc
fs
scas
inc
dec
cld
sahf
rorb
arpl
fmuls
jge
adc
ja
hlt
lods
mov
repz
lds
outsb
arpl
jl
jbe
shlb
ret
cli
lea
arpl
push
ss
cld
sub
int3
ljmp
nop
mov
xor
push
pop
push
pop
sbb
shll
dec
jo
inc
sub
cmc
popa
or
les
jbe
push
outsl
movsb
pop
andb
bound
adc
fldl
cli
imul
popf
adc
cwtl
cmp
jg
adc
cmp
sbb
iret
cmp
aaa
pop
arpl
leave
jne
mov
or
mov
fmull
push
ficomps
fidivl
and
mov
arpl
fs
leave
sub
sbb
fucomip
mov
or
and
movsb
and
add
pop
xor
lcall
mul
push
sub
mov
fcoml
cmc
pop
adcl
jns
je
jns
mov
inc
sbbb
sti
std
stc
mov
pop
decl
lcall
mov
sbb
and
push
cmp
inc
test
cmpsb
outsb
pop
insl
movsl
lret
scas
xchg
pop
add
out
aam
loope
and
xor
sub
frstor
sub
filds
xchg
ret
jno
mov
lds
out
inc
xchg
stos
gs
fstps
add
stos
xchg
ret
insl
mov
pop
fstpt
mov
mov
std
or
js
lret
dec
fwait
insb
or
scas
sbb
sub
xor
lds
loope
mov
fs
pop
push
hlt
mov
xchg
pop
inc
out
stos
pop
mov
sub
scas
push
xor
sub
les
mov
pop
sahf
sar
cmp
aas
ljmp
push
fisubrs
clc
xor
es
movsl
popf
popw
push
mov
ljmp
mov
jno
dec
mov
mov
sub
sbb
cltd
xchg
cmp
dec
inc
pop
adc
adc
mov
clc
jmp
scas
mov
popf
js
dec
inc
bound
jne
push
jns
add
add
push
add
outsb
add
add
jae
add
add
add
popa
insb
insb
add
arpl
outsb
cmp
popa
imul
imul
add
add
push
add
add
add
add
add
add
add
add
je
outsb
add
data16
add
popa
add
outsl
add
sub
add
jo
jb
imul
je
add
fs
jb
outsl
data16
jb
push
add
jae
popa
jns
add
add
add
add
jb
add
imul
bound
imul
jae
push
add
add
add
add
add
add
jae
imul
insb
add
popa
addr16
add
gs
outsb
add
popa
add
add
add
je
outsl
jne
add
add
add
ja
add
imul
je
push
bound
jb
imul
je
add
jo
jb
outsl
add
outsl
add
outsb
add
add
add
add
jae
add
add
outsb
add
imul
push
add
add
bound
jb
imul
je
add
jae
imul
add
add
add
arpl
popa
add
add
imul
inc
outsb
add
add
je
outsl
jne
add
add
jb
outsl
add
outsl
add
outsb
add
add
add
imul
outsb
add
sub
add
insb
gs
outsl
jae
add
jb
add
push
add
arpl
insb
add
popa
add
sub
add
push
add
add
add
jae
imul
add
