outsl
xor
jno
pop
inc
push
sub
mov
aam
cmpsb
mov
xchg
sbb
out
push
inc
dec
pushf
fisubrs
inc
inc
out
loope
pop
ja
shlb
repz
jmp
ljmp
fnstenv
shlb
push
push
and
or
cmovg
dec
mov
push
cs
data16
in
cmc
mov
mov
cmpsb
fmuls
dec
xor
aad
icebp
inc
dec
cwtl
mov
orb
push
es
and
enter
rclb
mov
mov
cmpsb
mov
cmp
into
pop
sbb
push
int3
popf
jns
and
push
mov
xchg
addr16
jae
mov
xor
gs
pandn
dec
notb
in
cmp
jle
mov
lahf
sbb
sub
mov
push
idivb
aam
cmpsl
ret
int
lcall
xchg
xor
pop
or
adc
leave
push
cmp
ret
addr16
jne
in
ror
call
cmp
dec
inc
sub
push
xor
pop
popl
int
mov
mov
sbb
sub
js
jp
push
push
scas
enter
dec
int3
imul
xchg
pop
mov
popf
mov
mov
lds
ss
cld
push
es
adc
dec
inc
sub
adc
xor
sub
sub
add
mov
mov
or
insl
idiv
fdivrs
push
adc
jae
jbe
xlat
pop
out
in
arpl
inc
loopne
je
scas
push
dec
inc
pusha
mov
fistpll
ds
loop
pop
dec
pop
sbb
dec
add
mov
xchg
xchg
clc
and
cld
pusha
or
in
jne
push
icebp
dec
je
mov
push
sbb
push
jbe
imul
xchg
mov
ja
sbb
jge
and
aaa
pop
scas
mov
add
xchg
mov
xor
pop
sub
or
sub
sub
imul
inc
das
stos
inc
shl
sti
mov
xor
shlb
lock
repz
jns
dec
mov
test
mov
sbb
dec
or
sbb
mov
aaa
in
mov
jne
rcrl
mov
std
repz
pop
dec
adc
xchg
ficompl
ret
cli
mov
lcall
lea
js
aad
mov
ret
xchg
hlt
cld
push
lret
daa
cld
sub
nop
adcl
or
inc
push
nop
xor
mov
sub
std
push
std
pop
in
leave
xchg
lahf
push
out
fbstp
repz
adc
mov
jp
lret
scas
scas
pop
push
lea
lock
pop
xchg
pop
mov
pusha
stc
pusha
mov
pop
sbb
repnz
sbb
enter
ss
xor
xchg
adc
add
xor
pop
popf
int3
int
out
popa
xor
js
subl
out
adc
je
clc
pop
cmpb
fsubrl
xchg
add
movsl
push
test
xor
in
ljmp
xor
and
out
add
mov
inc
pop
mov
xlat
xor
push
xor
addr16
mov
bound
push
pop
mov
or
dec
sbb
and
sbb
cld
mov
bound
das
push
push
cmovb
arpl
xchg
sbb
jl
aaa
aaa
xor
roll
cmpsb
stos
mov
xor
inc
inc
test
and
sti
adc
mov
jne
jne
or
xor
mov
xchg
jbe
sbb
push
xchg
xor
insb
loopne
jle
repz
mov
jge
fnstenv
repnz
push
in
sbb
jmp
or
int
enter
push
xor
mov
icebp
arpl
xchg
notb
add
roll
xor
dec
push
loope
jno
ud0
mov
jmp
lea
in
aaa
jecxz
mov
call
jnp
xor
scas
out
cmp
movsl
xchg
mov
cmp
push
cli
adc
or
lods
cltd
sbb
dec
fbstp
sbb
add
jecxz
aaa
lds
scas
mov
mov
nop
dec
cmpsl
ret
jmp
imul
popa
fimuls
outsl
dec
or
jp
dec
xchg
xchg
in
stos
sub
pop
cmc
add
xor
jmp
adc
adc
aas
in
clc
xchg
fcmovb
ja
fdiv
sbb
daa
mov
lea
rcrl
xchg
mov
call
into
and
push
cmp
lds
insb
fcomps
inc
shlb
out
sub
repz
js
enter
xchg
inc
insl
fisubrs
push
imulb
cltd
mov
aam
test
and
into
mov
lock
aam
jecxz
or
es
cwtl
jne
dec
xor
sbb
push
mov
sbb
popa
cmp
std
mov
add
fsubrs
pop
add
in
mov
outsl
jae
int
xor
dec
aaa
movsb
and
enter
loop
movsb
inc
ret
lock
jbe
push
mov
add
fnstenv
mov
jae
inc
bound
mov
mov
mov
sti
test
rcr
mov
shll
jge
in
xchg
ds
sbb
fstl
xor
lock
into
test
dec
out
iret
sbb
push
sub
push
sar
gs
popa
fwait
or
fsubs
or
stc
mov
rcrb
mov
push
sbb
or
and
subps
popa
jmp
mov
aaa
fmuls
and
jne
mov
addr16
sub
imull
movsb
mov
cmp
movsl
repz
test
cwtl
test
and
stc
ljmp
mov
jmp
fidivrl
gs
dec
dec
mov
js
pop
decl
xor
movsl
inc
repnz
out
cmp
add
mov
and
or
popf
in
dec
lods
daa
addl
dec
fsubrl
fidivs
insl
add
iret
push
aaa
mov
mov
xchg
ret
rolb
xor
fmull
outsb
cmp
dec
adc
add
mov
add
dec
cmc
test
insb
test
add
push
mov
pop
xchg
push
adc
clc
xchg
ja
div
inc
or
push
add
das
aaa
push
inc
add
jp
orb
fcoml
aas
out
mov
mov
jae
fcmovu
enter
aaa
cmp
add
and
pop
sbb
sub
adc
movsb
add
imul
mov
adc
ret
pop
mov
ret
sub
int3
aam
inc
push
call
aaa
jl
mov
iret
in
xchg
into
nop
call
idivl
test
or
gs
call
adc
and
adc
ljmp
or
push
in
jb
inc
jge
loopne
jns
sub
sbb
inc
push
inc
jg
and
cmpsb
mov
mov
cli
dec
ljmp
inc
outsl
js
jne
pop
call
push
mov
or
gs
xchg
jmp
arpl
xor
fildll
mov
xor
or
adc
pop
fsubrl
lret
lods
add
sub
push
jnp
or
into
or
rorb
dec
dec
or
jns
mov
cmp
es
outsb
fcomi
arpl
pop
jmp
or
sub
dec
test
pop
es
push
dec
push
imul
enter
outsl
fs
jmp
jmp
pop
add
xchg
mov
adc
jns
add
shll
or
xchg
clc
in
sub
ljmp
and
pop
inc
nopl
xchg
dec
icebp
fcomi
rcl
inc
outsb
xor
dec
mov
out
pcmpgtw
xchg
lods
inc
pop
inc
inc
add
sbb
or
iret
adc
inc
sub
inc
mov
and
mov
and
pop
xchg
int
push
push
fcoms
xchg
scas
mov
add
dec
push
outsb
add
push
filds
inc
pop
movsl
or
mov
fcoms
loopne
addr16
movsb
or
and
and
daa
loopne
and
xor
mov
push
lock
outsb
or
jmp
icebp
xchg
rcrl
jbe
jne
ss
xchg
lret
add
fisttps
aam
xchg
push
stc
or
shrl
cli
ljmp
stos
cmp
mov
lea
scas
jo
and
rorb
xchg
or
rcrb
or
mov
stc
pusha
or
insl
dec
xchg
mov
cmp
fstl
arpl
movsb
push
repnz
lret
scas
dec
or
cltd
xorl
and
pop
jo
or
jle
mov
stos
and
or
das
xchg
pop
push
sahf
cltd
jne
mov
add
aas
nop
add
mov
scas
pop
fdivs
inc
fldt
sti
jno
xor
out
fisubs
jnp
dec
xchg
stc
sahf
mov
sbb
jno
cld
sbb
push
ret
xor
mov
popa
test
adc
sbb
sbb
dec
dec
xor
sbb
scas
imul
pop
cwtl
adcb
jmp
inc
inc
mov
pop
xor
mov
lds
adc
cmp
ja
outsb
call
mov
jns
add
add
insl
int
decl
cmpsl
loop
shll
subl
add
roll
push
inc
push
jo
push
inc
xchg
xchg
scas
rorl
jno
cmpsb
mov
sbb
pushl
jg
xchg
aaa
dec
cmp
xchg
pop
xor
adc
enter
sbb
add
and
pop
ss
mov
sub
push
mov
movsb
aaa
dec
enter
xor
jge
fidivrl
sti
sahf
inc
cwtl
add
test
lods
sub
std
sbb
adc
lock
hlt
movsb
popf
leave
jl
popf
clc
je
pop
sbb
outsl
push
inc
sub
sti
inc
bound
mov
xor
shr
out
lock
fsubs
fistl
jne
adc
lret
push
lcall
mov
sbb
cmp
ret
sub
mov
push
bound
and
xchg
fsubrs
or
test
mov
jle
insl
ljmp
std
or
fisubrs
sbb
les
into
mov
cmp
pop
adc
sub
jnp
inc
cmp
or
inc
cmp
adc
xchg
pop
mov
cmc
testl
idiv
mov
imul
mov
xor
sbb
loopne
adcl
sub
test
jbe
mov
fdivrl
or
mov
lods
mov
push
mov
dec
push
push
jae
icebp
ljmp
popa
dec
fdivrs
dec
jmp
jmp
repz
dec
push
jno
sbb
xor
jl
test
push
xor
inc
stc
cmp
add
sub
and
outsl
xchg
mov
inc
aad
call
aam
add
out
jnp
mov
cmp
add
or
std
gs
dec
cmp
push
jnp
out
in
xor
scas
movsl
mov
sub
mov
pop
cmp
mov
sbbb
outsb
mov
cwtl
jns
mov
scas
out
int3
arpl
fwait
out
xor
mov
cmpl
lcall
leave
jne
mov
mov
jl
ret
or
pop
sbb
mov
jbe
push
inc
xorl
stos
ret
int
out
and
dec
das
cld
rorb
pushf
inc
ret
sub
loope
aas
in
cmc
enter
cmpsl
inc
pop
adcb
push
shr
les
xchg
or
decb
push
jge
jnp
pop
test
or
dec
mov
mov
xor
outsl
and
mov
inc
les
adc
movsb
js
push
inc
xor
pop
repz
pop
xchg
pop
aam
jb
aad
fdivl
daa
movsw
cmp
adc
pop
nop
jmp
sbb
sbb
mov
repnz
push
push
sub
repz
mov
jp
pop
xchg
or
add
pop
cmp
adc
addl
test
sub
dec
movsl
adc
dec
inc
lret
ljmp
into
sub
inc
lock
or
xor
loop
cmp
rorl
fbstp
out
inc
nop
scas
adc
imul
inc
mov
sbb
shrl
xor
xchg
sbb
push
lcall
setbe
inc
lods
xorb
push
xor
xchg
call
movsl
ficomps
je
xor
fwait
xlat
loope
ds
mov
jg
jno
lret
xlat
sbb
or
sahf
inc
inc
xor
or
mov
test
xor
and
sbb
mov
data16
mov
or
xchg
lock
ror
xchg
in
leave
jle
cmpsl
pusha
mov
push
or
jle
xor
sub
mov
sti
orl
bound
mov
add
inc
cmp
push
xchg
popa
sbb
xor
hlt
lock
sahf
push
lahf
xor
xchg
sbbb
and
fadd
jl
out
ljmp
inc
cmp
adc
pushf
push
pop
mov
cmp
loopne
clc
or
add
push
out
sub
dec
or
call
sbb
inc
popf
push
push
jge
ljmp
or
data16
lss
dec
pop
xor
sub
mov
outsl
roll
sahf
in
jae
subl
mov
and
mov
add
pop
in
outsl
dec
in
js
loopne
xor
jae
out
cld
pusha
lds
inc
and
test
cmp
pop
arpl
adc
or
ja
je
cwtl
and
adc
pop
imul
orl
xor
rcll
add
orl
mov
xor
adc
cmp
xchg
out
xchg
mov
shll
aad
cmp
fwait
std
pop
push
and
pop
rorb
adc
mov
jl
fldt
icebp
jae
outsb
lds
inc
fisttps
jns
or
add
mov
je
dec
mov
push
or
fsubl
or
repz
in
jecxz
push
mov
insb
in
xor
jno
stos
je
std
std
cmpsb
fidivl
jmp
cs
xor
and
outsb
lcall
cmp
add
rep
cmpb
orl
ds
das
push
xchg
lods
sub
xchg
ds
les
pop
clc
adc
mov
ret
push
test
pop
test
sbb
call
cwtl
or
mov
adc
push
inc
fdivs
mov
popa
xorb
mov
outsl
and
call
aad
xor
cmpsl
arpl
popl
inc
in
pop
mov
pushf
test
jp
jmp
je
pop
mov
add
fisubs
aaa
pop
adc
and
xor
adc
ret
jecxz
cwtl
out
loope
pop
and
push
or
jg
and
loope
aas
imul
xchg
or
sub
cmpsb
sbb
mov
dec
das
ss
and
inc
cmp
xchg
xor
gs
pop
test
arpl
scas
divb
sub
mov
sbbb
and
jl
and
out
xchg
jle
xchg
cltd
stos
sub
popa
js
outsl
lods
cmpsl
pop
imul
rorl
dec
ret
and
sub
and
pop
cltd
and
shl
push
adc
aas
push
cltd
or
add
sub
fnstcw
or
inc
sbb
stos
inc
in
lcall
stos
mov
subl
or
pop
mov
jge
lret
jmp
imul
fwait
sbb
cmc
out
add
sub
mov
inc
sbb
insb
jecxz
mov
int
mov
or
cli
pop
mov
das
sarl
mov
inc
or
rclb
and
inc
stc
pop
push
dec
bound
cmpsl
xlat
idivl
jg
xchg
pop
repnz
sahf
scas
sbb
nop
sbbb
dec
mov
test
jle
call
test
test
xchg
lods
fisubl
mov
fidivrs
jle
push
imul
icebp
stos
push
rdtsc
sbb
dec
cli
xchg
inc
jns
jno
jne
fistl
sub
fsubrs
mov
sub
sti
outsb
mov
mov
sahf
sub
aaa
xchg
push
enter
pop
les
fsubl
jecxz
les
lahf
in
icebp
loop
or
out
cmp
enter
mov
push
adc
inc
xchg
dec
cwtl
push
or
pop
and
out
jl
mov
push
data16
cmp
repz
push
jge
xor
outsl
lret
popf
imul
mov
mov
cmpsl
rclb
fisttpl
add
pushf
stos
sarl
sqrtps
insl
fmull
jg
test
das
out
cmpsl
std
notb
push
jbe
or
sbb
and
lock
push
push
bound
inc
mov
mov
orl
insl
sub
inc
add
cmp
sti
scas
jo
into
mov
cmp
cli
mov
out
sub
lahf
pop
fwait
in
stos
out
ret
ret
cmpl
pop
scas
pushf
push
add
mov
fs
fcom
cmp
in
xor
sub
in
jno
fisubrl
jl
sub
outsb
inc
adc
push
pusha
imul
stos
mov
int3
adc
leave
dec
fsubrl
fwait
pop
sbb
std
fstl
sub
hlt
push
movsl
ds
push
push
jnp
lods
mov
cld
add
jnp
pop
loopne
sub
push
xor
adc
mov
inc
mov
push
xor
dec
push
int3
fprem1
push
dec
push
out
xchg
inc
jnp
call
xchg
insb
std
ret
shlb
sarb
imulb
xchg
les
aaa
testl
mov
outsb
cmp
xor
aad
mov
in
out
adc
into
dec
enter
or
push
es
lods
push
sti
adc
mov
aas
push
mov
ljmp
add
inc
inc
test
enter
js
cli
xlat
xor
or
push
sub
and
cwtl
cmpl
sub
and
adc
mov
xor
mov
jbe
xor
orb
out
test
aad
adc
ror
mov
loope
sub
mov
scas
out
mov
ja
cmp
lar
jno
add
loop
das
aad
dec
loop
sbb
mov
cmpsb
fsubs
dec
xor
mov
cmp
jo
aaa
or
add
sub
imul
mov
hlt
jmp
movsl
sbb
adc
lock
imul
shrl
push
outsl
mov
xchg
ficoms
lahf
fdivrs
insl
fdivrl
mov
andl
outsb
adc
ss
push
add
das
mov
or
xchg
fstps
insb
adc
pop
sbb
xchg
or
gs
sub
pop
mov
ds
xchg
lea
sahf
shll
shl
add
mov
jle
push
sarb
inc
xchg
xchg
sahf
loope
or
lret
or
lea
in
push
insb
pop
sarl
push
loopne
mov
ret
fs
pop
lds
jge
fistpll
outsl
sbb
dec
shll
pop
jno
inc
dec
cmpsl
les
fs
mov
lahf
cmp
jae
add
insb
stc
pop
adc
aad
xor
xorl
cmc
into
fsubrl
jb
pop
push
int3
shl
outsb
lods
fld1
les
lods
and
mov
adc
jl
rcpps
movsb
inc
rorb
xor
jb
add
mov
fs
push
test
imul
jnp
ljmp
or
sbb
xchg
in
add
mov
xor
scas
jnp
test
es
and
xlat
inc
leave
shl
lret
pop
jno
notb
push
fstpl
cmp
xchg
nop
lods
sti
ss
jne
push
inc
int
cmp
stos
sub
pop
in
mov
xor
mov
sbbl
outsl
int
sahf
sbb
nop
inc
adc
stos
ds
push
sbb
into
sbb
insl
push
jmp
xchg
dec
fistps
gs
mov
push
lret
lods
push
jmp
sahf
push
add
out
jl
and
pop
addl
addb
dec
and
pop
push
jge
push
psadbw
mov
jmp
sbbl
lcall
sar
mov
ret
stc
stc
sahf
inc
dec
repnz
fcoml
push
pop
jg
icebp
lods
pop
aaa
pop
or
sti
cli
sbb
outsl
xor
aam
repnz
lahf
xorl
push
out
fwait
and
cmpl
mov
inc
mov
aas
sub
dec
movhps
icebp
dec
aad
push
mov
jo
test
js
xchg
jbe
mov
xor
cmp
lahf
jmp
pop
cld
fcmovnb
jle
xor
adc
inc
daa
or
push
ljmp
jns
inc
flds
mov
cld
mov
pushf
xchg
xchg
mov
pavgb
aad
fsts
jne
pop
cmp
es
gs
popa
and
rolb
jge
ljmp
insb
cmp
into
sbb
pop
jp
pop
mov
mov
add
cmp
xor
push
push
xchg
shlb
pop
fwait
cmp
pop
xchg
paddw
inc
ficomps
icebp
out
inc
mov
pop
mov
lcall
pop
aaa
jno
dec
lds
pop
mov
outsb
and
push
fisubl
out
in
clc
mov
or
jbe
aaa
pop
pop
jle
push
or
cmp
gs
push
mov
mov
pop
gs
mov
pop
push
rcr
insb
lods
dec
xlat
scas
fimuls
xor
call
fadds
hlt
scas
es
test
out
inc
or
mov
mov
das
jecxz
pushf
inc
mov
and
inc
add
inc
inc
lret
fbld
mov
adc
add
lods
cmp
js,pt
push
movsb
and
push
cli
enter
dec
fmul
sahf
lods
bound
jns
imul
mov
scas
jg
je
cmp
cmp
pop
lock
jno
fcmove
fwait
xchg
lahf
icebp
mov
push
je
sbb
pop
out
or
sarl
clc
cmpsl
out
stc
mov
decl
jb
orl
push
adc
adc
iret
adc
outsl
pop
push
push
or
cmp
add
push
jecxz
push
leave
mov
or
cs
imul
fwait
mov
xchg
mov
in
gs
xchg
fisttpll
aad
enter
push
push
inc
mov
push
fcmovnbe
or
xor
xor
lret
push
mov
inc
add
int
je
icebp
in
jns
xor
adc
sub
xor
das
sub
adc
mov
cmpsb
stc
divl
push
aad
push
jno
fdivrs
out
xor
fists
call
push
mov
push
loopne
sbb
cwtl
pop
adc
xor
adc
sbb
rcrl
mov
lock
popf
jecxz
aas
mov
jmp
sbb
inc
je
fldcw
jmp
sub
ljmp
xlat
outsb
mov
xchg
cwtl
lahf
add
ret
scas
cmpsb
mov
push
mov
out
jle
std
inc
stos
rcr
mov
idivl
data16
shlw
mov
in
lea
shll
mov
add
mov
jne
mov
or
dec
inc
ss
cmpl
data16
xor
addl
aaa
xchg
cmp
adc
sbb
fnsave
imul
sbb
xchg
mov
incl
int
lcall
jge
pop
push
xor
ja
and
xchg
aas
cmp
fldt
insl
in
enter
out
fstpt
in
mov
mov
mov
stc
dec
repz
ljmp
icebp
inc
ljmp
movsl
lahf
xchg
dec
pop
xchg
lds
sub
fists
inc
mov
in
or
icebp
cmp
pop
test
push
test
fcoml
enter
and
cltd
xchg
sub
jo
jns
outsb
lds
mov
xchg
rcrl
out
dec
in
inc
mov
push
xlat
or
jb
dec
shll
pop
adc
int3
push
jne
data16
adcb
loope
xor
push
push
cli
pop
push
pop
jae
and
sub
add
jle
xchg
and
adc
and
sbb
lea
sbb
sub
xorl
fnsave
aad
das
mov
gs
push
fwait
sub
pop
dec
out
add
repnz
push
cmp
cmp
inc
shlb
jae
xchg
test
xchg
mov
sbb
lds
pop
daa
push
mov
imul
and
rcl
je
out
add
xchg
lea
dec
scas
adc
or
pop
sub
sbb
jle
sbb
inc
imul
pop
mov
dec
dec
and
xchg
popl
and
sub
outsb
andl
call
mov
loope
jge
pop
adc
jnp
testl
adc
cmp
inc
xchg
mov
movsl
mov
ja
lahf
and
cmp
loopne
dec
mov
cmp
dec
or
popa
add
fcomp
push
push
and
pop
mov
push
or
test
cltd
test
sub
cmpb
mov
scas
cmpl
jbe
push
outsb
int3
push
xchg
adc
test
loopne
orps
iret
sub
and
out
loopne
or
fisubrl
test
inc
mov
mov
icebp
nop
inc
lock
ljmp
ds
insb
jae
pusha
mov
inc
lret
xchg
sahf
into
lods
das
sub
call
pushf
js
xor
fildl
jno
pop
mov
pop
imul
cld
mov
xchg
sub
push
in
stos
mov
sbb
adc
rcrl
jmp
outsl
dec
xchg
push
and
sbb
int
mov
push
mov
or
aam
fucomp
cmpb
mov
push
shrb
pop
cwtl
push
loop
jne
jle
aas
clc
test
xor
sbb
cld
or
add
or
mov
jno
inc
cmpsb
fnstcw
mov
mov
push
int3
lret
test
in
jp
ss
int3
jg
inc
pusha
xlat
xchg
jb
mov
xor
mov
sub
or
sbb
outsb
push
pmulhw
adc
ret
jmp
mov
outsb
mov
scas
mov
xor
shl
jae
sbb
push
pop
mov
inc
dec
stc
test
subb
jl
push
imul
push
stos
clc
jecxz
jae
out
sub
mov
mov
fwait
js
into
push
pop
in
das
movsb
xor
push
mov
push
pusha
fadd
mov
js
pop
lcall
das
rcrl
lcall
push
rorl
lahf
mov
les
sbb
push
xchg
loope
push
lods
mov
call
mov
arpl
int
push
es
cs
dec
xor
xor
xor
push
adc
into
mov
je
je
mov
iret
mov
pusha
jo
mov
mov
pop
and
int
loope
xchg
lds
mov
push
popf
mov
insl
fsubrs
mov
mov
mov
shrl
sbb
push
dec
add
sbb
fwait
mov
mov
es
mov
inc
xchg
inc
sub
loopne
ficoms
pushf
je
mov
add
and
jb
out
cmpsb
repnz
nopl
xchg
fnsave
loope
rcll
add
out
movsb
pusha
sub
mov
push
lahf
arpl
divb
mov
loopne
jp
push
daa
mov
xchg
add
add
jnp
imul
insb
int3
lock
leave
jecxz
out
dec
push
das
lock
sbb
ret
daa
and
out
jecxz
jecxz
out
testb
test
out
mov
stos
aas
loopne
popl
fmull
adc
mul
jecxz
inc
jns
xchg
xchg
inc
mov
mov
gs
add
in
jecxz
lea
imull
imul
fwait
cmp
aas
push
jge
jp
sahf
test
dec
jge
test
mov
push
in
pop
dec
sbb
pushf
and
jns
pop
adc
iret
lret
cmpsb
sub
pop
fsubs
cwtl
scas
in
jbe
shl
push
add
cmp
pop
jo
pushf
jnp
inc
aas
lds
cli
setae
adc
or
mov
imul
stc
jp
aam
popa
sbb
dec
push
cmpsb
subb
mov
or
dec
pop
mov
pop
sub
mov
int3
mov
rolb
imul
rcrl
cld
jne
int3
push
test
inc
pop
mov
fs
stos
xchg
inc
mov
push
sbb
cmc
rclb
add
clc
adc
sbb
out
scas
mov
movsb
aaa
clc
mov
es
and
loop
jne
jp
fildl
adc
sub
or
fiaddl
stc
mov
xchg
subb
js
jnp
xchg
lods
xlat
clc
pop
fs
cwtl
call
jo
sub
mov
push
aas
jmp
push
cs
jle
in
lret
xchg
aam
inc
aaa
and
sub
sub
pop
sahf
rclb
std
pusha
rorb
cltd
jae
cmpsb
add
xchg
pop
or
push
add
mov
mov
dec
mov
repnz
add
out
loope
pavgb
add
dec
push
and
mov
pop
push
jne
or
bound
stos
pop
pop
push
popf
subl
incb
xchg
ret
outsb
mov
fs
int3
das
add
xor
cmp
sub
and
push
ja
popf
adc
popa
inc
iret
outsl
fstpt
sarl
push
mov
dec
mov
push
adc
cltd
rclb
push
cmp
lods
outsb
push
jbe
js
popa
shll
cmpsl
lods
ss
xor
xor
filds
push
push
or
popf
cltd
sbb
clc
jg
sub
push
inc
in
lcall
icebp
push
sti
xchg
shll
out
push
lcall
xor
test
xlat
push
and
mov
dec
cltd
movsb
into
lret
scas
xchg
pop
sub
xor
pop
in
subb
in
cmp
jl
popa
adc
xchg
or
push
sbb
mov
sub
push
hlt
xchg
mov
les
nop
xchg
and
sub
jge
sti
dec
rorl
dec
xchg
outsl
jno
push
jo
int
insl
dec
add
add
and
or
adc
cmp
pop
iret
stc
fsubl
add
xor
and
aas
or
loopne
in
push
jns
rcl
dec
ja
mov
dec
inc
in
icebp
pop
sub
jo
fnstcw
cmp
mov
pop
imul
insl
mov
add
aam
ja
ror
cmpl
cmpsb
stos
xchg
lods
adc
sti
push
and
or
add
icebp
std
push
repnz
dec
push
mov
daa
fisttpll
fnstenv
stos
lret
xlat
shrl
fwait
inc
loope
shl
mov
in
pop
jns
and
inc
xor
xchg
xchg
inc
insb
cmp
insl
adc
lcall
jo
nop
dec
pop
js
rcr
mov
add
pop
popf
nop
repz
cltd
sub
sarl
and
push
sub
pop
mov
xchg
lret
pop
xchg
xchg
jbe
and
pop
out
gs
push
add
inc
insb
jnp
jl
mov
inc
outsl
fucomp
das
test
shll
lds
add
filds
pop
fstpl
ds
adc
stos
sub
es
cmp
pop
pop
das
xor
xchg
clc
cmp
mov
push
scas
jecxz
jl
imul
push
xchg
cmc
int
pxor
jle
inc
adc
cmp
les
sub
gs
pop
dec
aam
mov
and
mov
mulb
jp
jnp
bound
out
xor
ss
lret
lods
lods
dec
sbb
cmp
js
inc
adc
nop
popf
mov
xlat
xor
push
add
sub
xor
mov
stc
imul
cmpb
and
fs
xchg
sahf
neg
les
adc
add
subl
jno
push
mov
lret
in
push
adc
dec
cs
xchg
xor
sub
xchg
mov
sub
inc
jge
mov
jge
jb
push
ja
cli
ret
cmp
cmpsl
or
aad
and
dec
dec
icebp
js
leave
add
cld
clc
nop
mov
push
jae
inc
nop
jmp
sub
cld
cmp
clc
push
mov
js
data16
stos
out
dec
cmpsb
lods
lods
xchg
sub
jle
iret
add
mov
ja
add
cmc
mov
xlat
pop
ret
lods
mov
pop
repnz
mov
jnp
test
ljmp
repz
fisttpl
sub
cmp
mov
jecxz
movlps
mov
outsb
mov
ja
jmp
xchg
ret
mov
or
out
or
mov
call
dec
mov
cmp
stc
add
mov
fdivl
fwait
xor
push
sub
das
fucom
push
rcll
mov
xor
pop
addr16
nop
cltd
xor
sahf
sub
push
sbb
inc
push
movb
push
imul
les
in
pushw
dec
add
sub
outsb
into
lret
pop
fldenv
outsl
or
dec
push
pop
mov
mov
iret
dec
push
mov
into
mov
out
shlb
push
jmp
sub
xchg
ret
xor
mov
add
xchg
pop
int
or
sub
mov
mov
insl
lock
or
in
mov
shrl
and
icebp
or
cmp
cs
pop
pop
inc
xchg
cmp
xchg
mov
into
adc
test
xchg
and
adc
pop
leave
aad
insl
insb
adc
push
dec
andl
ret
jle
mov
push
lret
lret
xchg
and
mov
fstpt
or
add
ret
mov
loop
push
or
push
xchg
aaa
fcos
mov
addl
xor
cmp
shll
in
push
mov
jge
std
out
inc
aad
arpl
mov
push
in
or
ficoms
in
in
and
lret
gs
scas
adcb
and
popf
in
sub
fidivl
xchg
mov
mov
mov
shlb
data16
xor
inc
or
addr16
sti
cmpsl
add
ljmp
dec
movsl
sbb
repnz
pop
xor
dec
test
icebp
aas
leave
jmp
fsubrs
jnp
cmp
inc
cmc
mov
mov
std
bound
and
xchg
mov
push
inc
jne
xor
inc
mov
sahf
push
lret
notb
in
call
std
cmp
mov
ret
push
inc
fidivl
ficoms
fs
sub
insb
inc
int
pop
or
movsl
rorb
add
push
mov
movsb
dec
cld
cmc
mov
push
mov
xor
iret
inc
scas
dec
lods
test
hlt
lods
repnz
adc
das
incb
pop
pop
bound
xchg
jmp
cmp
xchg
xchg
cld
sub
mov
ds
add
sub
adc
xchg
repz
mov
pop
shll
test
movsl
scas
mov
fnsave
lea
testl
pop
fs
jne
sbb
pop
je
sub
pop
pop
push
daa
and
jecxz
pushf
mov
loop
dec
mov
test
lea
adc
jmp
xchg
push
in
popf
imull
lret
fs
test
dec
fwait
inc
cwtl
cmpsb
and
clc
cmp
lcall
in
out
leave
imul
clc
pop
in
and
pop
inc
xchg
out
add
jg
jge
jne
imul
jecxz
es
mov
cmp
movsl
int3
or
xchg
xchg
loope
xlat
adc
xor
mov
repz
int3
shll
lds
dec
jo
adc
pop
insb
leave
mov
mov
fidivs
adc
or
fsubs
and
pop
sbb
sub
inc
cmp
fimull
fisubl
js
push
popf
mov
cli
cmp
bound
arpl
push
mov
jmp
int3
das
inc
leave
dec
jbe
test
and
shr
cmp
mov
pop
dec
xchg
mov
bound
inc
sub
pop
ret
lret
lret
int3
sbb
test
dec
mov
cltd
js
sets
out
fisttpll
in
xchg
xor
and
cld
push
mov
mov
decb
pop
jmp
daa
pop
jo
mov
les
in
pop
adc
add
xchg
pop
pop
push
lods
bound
inc
push
in
insb
xor
rorl
stos
cmc
lret
fdivs
cwtl
mov
jb
pushf
jbe
pop
aaa
sbb
insb
aas
bound
mov
imul
scas
dec
lret
scas
mov
rcr
js
mov
cwtl
lret
mov
mov
jge
pop
rcl
xlat
jne
addb
cmp
jmp
popa
xchg
add
pop
jge
inc
jo
mov
cld
mov
cmc
test
in
mov
cmpb
stos
aam
pop
cmpsl
pop
inc
push
mov
loopne
pop
shl
push
out
repnz
fsub
dec
add
test
push
mov
push
cmpsb
sbb
xchg
cmp
xor
add
aad
mov
dec
andl
ret
push
and
push
mov
lds
lcall
imul
xor
fidivrs
jge
inc
stos
adc
mov
xor
adc
push
sbb
in
ds
jmp
or
cmp
call
cmp
mov
out
rcrb
sub
sbb
lock
mov
push
sbb
or
lret
mov
sbbb
sbb
mov
repz
idivl
pop
lret
mov
xchg
idivl
scas
xchg
and
xor
hlt
pushf
out
jecxz
sbb
mov
add
or
pop
pusha
enter
out
mov
popf
popl
mov
xchg
add
out
cli
xchg
lods
lock
cld
and
les
pop
leave
mov
mov
out
in
fsubs
mov
mov
sti
mov
les
xlat
inc
xchg
adc
jmp
aaa
lret
ret
xorl
add
mov
gs
push
shll
scas
sub
lcall
push
fcmovu
enter
ret
jg
lret
add
pop
mov
pop
mov
sub
mov
add
ret
fsubrs
js
ds
lret
cmp
add
mov
scas
aad
in
sbb
mov
int3
ud0
vorpd
mov
popa
jmp
adc
loopne
lds
rclb
lock
add
adc
cmpsl
incb
dec
pop
inc
jg
and
xor
sbb
sti
cld
mov
mov
andl
dec
sbb
neg
pop
out
add
in
mov
mov
mov
xchg
iret
aas
and
rolb
cltd
jl
cmp
sbb
pop
js
daa
in
inc
test
xchg
repnz
mov
push
fcmovnu
add
loop
jno
out
xchg
sahf
fs
or
inc
test
roll
sub
sbb
mov
xchg
push
sbb
add
dec
andb
add
mov
sbb
ljmp
dec
add
stos
and
insb
sbb
jns
or
xor
fwait
jbe
push
pop
inc
xchg
sub
out
lea
mov
std
sub
sub
inc
push
dec
lock
xor
loop
aam
lret
loop
inc
les
sub
adc
mov
mov
cmp
mov
imul
test
cmc
dec
leave
push
test
lods
and
imul
and
cltd
or
in
fidivrl
inc
int
mov
mov
and
rolb
out
push
sbb
push
test
inc
xchg
daa
push
out
and
xchg
push
mov
call
out
jle
enter
test
push
ss
and
jg
movsb
push
rolb
mov
pushf
scas
out
xchg
aam
adc
sahf
sarb
xchg
mov
out
push
xchg
leave
les
aaa
pop
test
lods
mov
mov
aas
mov
xchg
pushf
pushf
or
sbb
sbb
shlb
cmp
xor
insb
outsb
loope
fsubr
and
aad
les
lcall
xlat
jbe
xchg
mov
js
inc
addr16
test
adc
pop
lea
ret
lcall
lret
test
call
daa
daa
add
cs
xor
sbb
push
or
pop
mov
imul
mov
mov
test
xorl
das
aas
xchg
push
sti
mov
div
arpl
or
addb
cli
loop
in
dec
jg
push
out
test
inc
push
je
outsb
sarb
push
scas
ljmp
and
out
mov
rolb
es
shrl
stc
cmp
mov
dec
inc
pop
ljmp
and
movsl
sub
pop
mov
pop
jbe
pushf
pop
cli
orl
shl
mov
fwait
cmp
je
push
fidivrl
int
dec
dec
clc
and
outsb
sub
mov
fidivrs
xor
mov
in
cmp
das
mov
cmp
jae
lahf
or
ret
or
cmpb
xor
mov
add
dec
cmp
popf
xor
or
mov
add
test
das
icebp
xchg
jo
sbb
aaa
or
xchg
jge
push
int3
xchg
stos
inc
dec
jle
and
or
sbb
add
addr16
cmpsb
jae
xchg
mov
out
lds
push
loopne
ds
dec
rcrl
call
pop
pop
inc
jmp
jp
add
icebp
mov
loope
sbbl
push
cmp
mov
lods
push
and
push
sub
xchg
lret
jecxz
pop
rcll
fildl
add
jnp
or
pop
sbb
mov
adc
pop
fdivrs
jmp
mov
xor
sub
js
dec
sarl
cmpsl
jo
mov
mov
pop
fdivs
xchg
lock
cmp
pop
loope
loopne
sub
setg
jnp
frstor
daa
add
scas
xchg
das
cltd
call
stos
add
lret
add
cltd
out
sbb
dec
sbb
cmp
repnz
cs
adc
push
in
dec
sub
aam
add
scas
femms
xchg
and
sarl
cltd
insl
xor
add
jmp
nop
adc
aas
cmp
test
pop
push
pop
and
cmp
push
jno
sub
inc
loopne
loopne
data16
jnp,pn
add
xor
pop
dec
xchg
add
pop
in
repz
sahf
inc
clc
jmp
fsubl
mov
push
inc
aas
call
mov
xor
xlat
xor
mov
push
insl
cmpsl
clc
xchg
pushf
sahf
movsl
pop
xor
push
dec
cmc
gs
test
xlat
pop
lret
or
in
jmp
out
mov
push
int3
xchg
out
xor
roll
or
lea
mov
push
iret
add
xchg
rol
pop
jle
aaa
jne
cmp
dec
inc
or
insl
sbb
mov
sub
pop
mov
mov
and
dec
sbb
jmp
cwtl
or
in
push
xchg
sub
sub
add
cli
sub
ret
in
rorb
cmp
dec
and
pusha
call
pop
mov
mov
stc
jb
addr16
push
scas
dec
dec
in
mov
xlat
cwtl
scas
ret
xchg
xchg
mov
or
jle
xor
dec
mov
out
push
mov
dec
mov
push
adc
fsubrl
arpl
adc
daa
shrb
push
inc
or
jno
out
mov
inc
pop
cmp
sub
lods
or
add
xor
xchg
mov
xor
das
mov
lret
pop
std
mov
pop
jge
pop
cmpsl
dec
sub
in
mov
inc
jle
pop
js
sub
xor
rep
lods
xchg
push
pop
and
mov
out
in
addr16
stos
mov
in
mov
mov
lcall
jno
vmovaps
mov
adc
inc
or
in
sub
imul
and
insl
cmp
pop
xor
rclb
adc
dec
mov
xor
dec
stos
je
loop
xchg
lret
or
jmp
push
dec
push
out
inc
lcall
test
mov
int3
xchg
aas
mov
ret
mov
jo
and
inc
push
call
mov
mov
dec
cld
sbb
in
inc
jb
jge
lret
rcll
inc
adc
mov
push
repz
inc
pop
inc
mov
jo
cld
test
mov
loopne
loop
ret
ret
xor
sbb
sbb
jns
ret
cmp
lea
inc
cmpsb
mov
mov
out
cmpb
stos
movsl
adc
sahf
icebp
mov
call
fistpl
mov
outsb
push
jno
les
xor
push
inc
leave
aas
mov
fidivrs
adc
or
push
sbbl
adc
loope
pushf
stos
add
xor
data16
fwait
xchg
imul
rolb
pop
mov
aas
cltd
add
icebp
je
push
imul
jb
xor
push
int3
mov
pop
and
push
mov
mov
mov
push
sbbl
sbb
xor
xor
xlat
rcrl
int
mov
imul
push
mov
jmp
scas
jecxz
jb
sbb
lea
xchg
jne
fcmovu
jl
xchg
outsl
mov
push
push
inc
xor
adc
add
xchg
mov
movsl
cmc
gs
xor
mov
jns
sub
mov
xor
fldl
ds
lcall
popa
iret
and
pop
mov
mov
jecxz
testb
adc
pop
inc
testb
das
adc
and
xchg
es
stc
outsb
fldl2e
bound
adc
add
push
mov
mov
sbb
in
arpl
loope
xor
mov
enter
pop
scas
mov
push
cmpl
or
xlat
dec
dec
adc
aam
mov
addr16
fwait
stos
and
ss
das
cmp
negl
out
mov
fmulp
stos
leave
jo
negb
jno
mov
loope
mov
rorb
jne
popa
push
mov
in
inc
xchg
xchg
jbe
pop
out
leave
loop
out
repnz
les
popa
test
push
inc
cmp
push
and
ficomps
or
imul
lock
loopne
movsb
out
cmp
push
pushf
mov
sub
aad
test
jno
jne
rcrl
mov
jnp
ljmp
pop
mov
add
push
icebp
mov
imul
negb
cmp
decb
jg
push
mov
fsubl
in
fisttpll
push
fisubrl
add
add
fistpll
daa
mov
and
nop
js
setae
test
cmc
jle
fwait
jecxz
adc
jle
mov
cmp
mov
jb
arpl
sbb
adc
shl
sahf
mov
xor
and
pop
mov
fnstenv
js
jbe
sar
dec
adcl
sub
outsl
and
arpl
dec
pop
pop
divl
addr16
pop
or
cmp
popf
pusha
fmull
aad
sbb
inc
jno
cli
dec
and
cwtl
xor
sbb
pop
ja
iret
ret
sbb
mov
sub
push
popa
sbb
sti
pop
add
add
movsb
push
int
leave
enter
cmp
pop
decl
xor
push
gs
mov
jno
fs
das
inc
int
push
fdivl
jg
mov
cmp
jmp
push
xor
adc
xchg
or
loope
cli
xchg
inc
loopne
insl
fimuls
mov
jns
mov
lods
dec
and
and
dec
insl
push
cmpl
and
mov
cmp
mov
gs
cmp
fnsave
push
scas
push
es
call
inc
xchg
xchg
lret
push
addr16
das
push
es
push
fidivs
sti
test
mov
cmp
nop
das
lret
xchg
pushf
jmp
xor
inc
inc
fimull
pop
lahf
testb
mov
je
call
dec
cmp
mov
lret
fwait
cmp
mov
push
mov
out
insl
xor
stc
xor
insb
bound
aam
pop
pop
adc
aad
cs
and
mov
pop
scas
cli
sahf
xchg
inc
leave
in
lcall
jl
pusha
xchg
mov
or
mov
rcrl
pushl
gs
mov
add
push
sub
test
or
jno
jp
jg
in
sbb
push
lods
stos
lods
fcmovbe
pop
popa
in
mov
lods
imul
cmp
sbb
test
xor
insb
cmp
ss
push
sub
cmpsl
inc
sbb
push
cltd
jp
pop
rclb
test
lcall
sbb
cmp
mov
jmp
sti
decb
add
pop
in
xor
jle
add
scas
jecxz
sbb
push
and
push
hlt
cmp
aad
rcrb
ds
cmpsb
pop
fistpll
dec
xchg
das
push
ret
aaa
pushf
and
and
xchg
sbb
or
jns
mov
sarb
mov
out
mov
xor
insl
push
rcl
stc
loope
mov
lahf
ds
stc
xlat
sub
movsb
inc
cmp
mov
cmp
xchg
ljmp
dec
ret
ljmp
jecxz
arpl
push
stos
pushl
cmp
sbb
mov
fdivl
and
movsl
cmp
xchg
stos
pop
jae
or
mov
jae
push
mov
pushl
jae
rolb
inc
mov
rolb
in
xor
pusha
movsl
jmp
sub
lds
cli
push
je
dec
or
dec
jle
jmp
test
insl
popa
push
and
int
pop
into
call
inc
addr16
lock
sub
imull
push
roll
out
rorl
int3
lret
call
test
insl
sti
testl
test
mov
les
xchg
aam
stc
int
mov
je
jnp
cmpsl
lods
inc
aas
fisttps
out
dec
pop
rcl
sub
jp
popa
cmp
xchg
mov
sub
sbb
into
inc
sub
sbb
push
pop
dec
pop
push
jge
test
jbe
jmp
stos
dec
xor
dec
xor
add
fdivrs
push
pop
jp
push
pop
sub
test
flds
mov
or
push
jns
sub
mov
push
shrb
dec
mov
mov
push
ret
imul
test
jle
in
stos
stos
xor
and
cmp
sbb
sub
lahf
in
sbb
push
je
mov
xor
into
pop
inc
adc
mov
test
enter
loopne
test
push
ret
imul
ljmp
sahf
inc
fldl
rcr
push
fwait
loopne
ret
leave
mov
jmp
mov
lock
aaa
inc
in
out
gs
aad
jmp
mov
sub
leave
call
enter
xor
sub
sub
lock
mov
jecxz
xchg
jecxz
cmp
imul
in
fwait
bound
inc
aaa
sbb
pop
out
xchg
xor
add
aad
or
lods
lret
out
xor
pusha
xchg
or
add
xor
lcall
test
inc
mov
mov
aad
icebp
arpl
cmpsb
outsb
mov
push
test
push
mov
sbb
sbb
sbbl
cmc
xlat
cmp
cltd
mov
jmp
das
cmpsl
mov
dec
sub
ja
mov
icebp
test
inc
dec
add
sub
int
mov
or
pusha
bound
fists
es
mov
xchg
mov
aas
xor
inc
stos
mov
mov
mov
sub
test
or
xor
push
xchg
frndint
mov
sub
mulb
out
daa
xchg
iret
push
sbb
push
fimull
addr16
gs
out
mov
inc
xor
push
dec
xor
popw
loope
push
push
aaa
bound
loop,pt
int
out
xchg
nop
pushf
fdivs
push
cld
xchg
test
sbb
in
dec
push
fstpl
xor
mov
dec
aaa
test
mov
ja
sbb
xlat
notl
sbb
mov
xchg
pop
inc
and
inc
jb
mov
xlat
sub
call
repz
pop
mov
sahf
and
or
cmpsb
leave
cmp
es
mov
in
imul
inc
xchg
ds
es
and
mov
mov
cmc
in
sbbb
jae
insl
les
outsb
add
jecxz
xor
cmpsl
scas
rcrl
fdivp
cmpsb
push
loope
mov
rcll
push
lcall
pop
pusha
mov
cmp
cmp
sahf
jnp
mov
jbe
dec
dec
mov
insb
insb
inc
adc
mov
in
outsb
mov
or
mov
ss
and
rclb
xchg
lahf
dec
cmp
inc
dec
hlt
nop
sbb
stos
out
shll
leave
push
aad
and
push
hlt
add
inc
mov
sbb
lret
mov
stos
movsb
push
dec
sub
xorl
mov
lds
jle
sub
and
idivb
scas
cmp
dec
xchg
int3
pushf
lods
imul
sbb
jmp
nop
andl
ret
out
fcmovnu
imul
cmp
mov
and
sub
mov
sarb
fwait
ja
stos
adc
mov
inc
mov
dec
mov
adc
sub
es
jmp
imul
cmpsl
add
cmp
test
xchg
in
leave
das
sbb
or
mov
sti
mov
into
outsl
sub
aaa
pop
stos
addl
fcmovu
loop
mov
addr16
mov
xchg
add
call
es
rorl
jne
outsb
outsl
cli
rorb
sahf
fwait
cmp
ja
xor
insb
outsl
sarl
cli
jnp
sub
cltd
ljmp
mov
xchg
call
imul
inc
sbbl
fwait
add
scas
outsb
ja
mov
test
xchg
xchg
xchg
xchg
or
out
nop
sbb
sti
testb
adc
sub
movsl
push
mov
enter
mov
xchg
cld
cs
inc
mov
fwait
jnp
in
repz
cmp
cli
xchg
lcall
cmpsl
add
push
sar
push
mov
stos
and
aas
sbb
mov
hlt
xchg
fwait
add
test
das
into
outsl
adc
addr16
dec
outsb
loopne
sub
add
test
mov
pop
xlat
cmp
fsubrs
sti
cmpsb
mov
outsb
std
daa
das
pop
lods
cmp
divl
mov
movsb
pop
decb
test
lods
fimull
movsb
ljmp
nop
and
sub
push
fdivs
mov
aas
shrl
dec
repnz
push
xchg
xlat
jae
dec
aam
mov
ds
icebp
push
cmp
push
aas
cmp
imul
push
loopne
insl
cltd
pop
bswap
movsb
xor
xchg
xchg
ja
rorb
enter
out
pop
or
lahf
inc
sbb
inc
repnz
mov
pop
fsubr
mov
lcall
xchg
push
ljmp
add
out
scas
adc
dec
cmpsb
xchg
cld
mov
xor
cmp
mov
dec
test
dec
movd
add
cmpsb
push
out
mov
push
dec
jg
rcll
add
xchg
fcoms
mov
push
enter
int3
mov
sahf
notl
gs
mov
sbb
mov
cmpsb
xor
scas
mov
mov
lods
subl
pop
repz
shl
inc
mov
adc
les
int3
dec
enter
enter
sub
push
xchg
add
fcoms
lret
mov
shll
mov
sub
pop
outsl
mov
sub
pop
clc
sbb
push
filds
sub
cmpb
or
nop
mov
imul
es
movsb
cli
dec
shlb
subb
jecxz
out
lds
dec
repnz
flds
jge
mov
dec
ret
pusha
push
mov
lret
push
ret
xor
mov
adc
fsubrl
cmp
xor
mov
adc
xlat
repz
and
and
jl
insb
pop
mov
mov
push
mov
insl
jno
inc
es
test
pop
pop
or
ljmp
push
test
sbb
add
inc
shlb
aam
sbb
rcr
mov
repz
mov
lret
push
lret
lahf
std
or
dec
mov
pop
rol
push
sub
mov
lods
lret
jne
add
lret
jge
xchg
std
popf
add
ss
div
dec
jge
mov
aad
pop
xorl
cmp
mov
loop
and
hlt
sub
pop
inc
aad
and
push
and
dec
xchg
xor
lret
outsl
sahf
ret
nop
sbb
sub
insl
push
inc
inc
js
dec
es
mov
inc
mov
dec
mov
and
pop
outsl
push
subb
push
lock
adc
inc
dec
or
ss
dec
ud1
pop
or
aam
test
adc
or
xor
mov
push
mov
pop
in
test
andb
mov
arpl
pop
cmp
lock
or
fdivrl
lret
fildll
xchg
jb
inc
movsl
jo
addl
dec
jecxz
daa
cmp
fsubrs
add
adc
cmc
add
movsb
lods
insb
mov
mov
call
cmp
and
and
jecxz
in
lods
call
std
loopne
out
xchg
cmp
aas
bound
loop
andb
cmpsb
in
push
ja
adc
fnclex
adc
mov
cmp
fldcw
pop
bound
push
mov
adc
push
inc
mov
std
push
inc
or
mov
sahf
mov
lret
aad
xor
mov
xchg
inc
inc
pop
pop
and
mov
push
imul
arpl
xchg
js
scas
pop
push
xchg
int3
gs
and
cmp
data16
adc
sub
aas
and
pop
int3
outsl
je
mov
mov
cmpsb
mov
mov
xchg
imul
jbe
dec
xor
ret
std
mov
mov
rolb
lcall
dec
and
pop
fwait
or
sub
mov
inc
arpl
sbb
fidivrs
bound
mov
into
push
jge
fisubrs
imul
in
inc
div
mov
inc
xchg
mov
lock
pop
out
mov
ficompl
cmpb
int3
shrl
cmc
mov
push
rol
and
mov
inc
xor
mov
aas
aad
fucomi
cmp
xchg
ss
mov
xchg
ret
pop
cmpsb
sub
imul
and
rorb
jne
pushf
cmp
mov
sti
mov
mov
dec
xchg
xchg
mov
mov
inc
add
push
loope
jns
pop
jb
jge
loop
inc
mov
shll
mov
stc
ret
jns
movsb
or
mov
jl
popa
jbe
les
gs
cmpsl
movsb
sbb
or
negl
xchg
adc
jne
pmulhuw
insb
daa
xlat
insl
ss
out
pusha
xchg
mov
sub
cmpb
add
shl
inc
in
dec
xchg
xchg
pop
ret
pop
ljmp
sbb
pushf
jo
jb
adc
imul
in
sbb
mov
mov
cmpsl
jbe
cmp
mov
push
pop
cmp
push
dec
sbb
jl,pt
adc
ror
dec
and
dec
add
push
in
fs
cmp
mov
pop
xor
clc
repz
mov
or
pop
push
add
mov
inc
outsl
out
sbb
adc
sti
cld
arpl
loopne
add
mov
mov
mov
sub
dec
stos
insb
xadd
into
pusha
dec
in
outsb
js
mov
int
jmp
aaa
in
test
xchg
sbb
in
in
outsl
je
xor
aaa
adc
pop
pop
add
mov
mov
or
mov
aaa
and
mov
loopne
ja
dec
aad
call
lcall
outsl
aad
lods
xor
int
jmp
or
adc
mov
js
mov
pop
push
cmp
pop
cmp
in
iret
xor
fadds
adc
push
insl
rcll
xchg
lods
jecxz
in
xor
sti
mov
dec
test
mov
sti
pop
adc
and
cs
jp
imul
mov
je
bound
jg
daa
sahf
fistpl
pop
xor
addr16
and
jle
mov
fnsave
push
push
mov
dec
mov
pop
cmp
fcom
pushf
dec
cs
pop
xchg
adc
cmp
int
jp
daa
push
dec
jbe
mov
xchg
mov
push
stc
rclb
pop
test
rolb
cmp
icebp
push
orb
mov
and
pop
outsl
jge
cwtl
enter
push
cmpsl
pop
insl
jmp
adc
sahf
leave
repnz
cmpsb
cmpsb
jg
popa
mov
xchg
test
pop
mov
cmp
pop
mov
sub
mov
arpl
push
out
xor
ljmp
jmp
lods
jge,pn
dec
mov
adc
push
lret
pop
add
fidivrl
insl
pop
inc
cmp
jne
mov
dec
adc
fildll
sbb
xchg
cmp
sub
cwtl
dec
sub
out
mov
icebp
inc
add
pop
xor
inc
mov
mov
sbb
and
mov
in
rolb
push
push
mov
cmpsl
leave
loop
xor
inc
mov
xor
jmp
mov
fstl
mov
sbb
xor
sti
mov
push
mov
jae
sbb
sbb
mov
sub
lds
jb
test
or
xor
in
or
mov
mov
cmp
cmove
or
loop
sti
sbb
ficompl
addr16
int
clc
mov
out
fbstp
jo
test
mov
pop
inc
add
nop
xor
test
incb
and
cld
cmpsb
jle
push
or
lret
test
test
push
rclb
jp
push
adc
pushl
jb
xor
lods
mov
fs
movsl
inc
pop
pusha
lret
cltd
rorb
dec
decb
adc
in
cmpsb
xor
fimuls
cld
int3
imul
mov
imul
fucom
adc
dec
add
fucom
mov
push
jns
popl
mov
mov
mov
xor
sarb
movsb
xlat
loope
pop
pop
js
pop
xor
xorl
pop
pop
ss
enter
mov
mov
mov
push
in
nop
jb
lods
dec
mov
call
adc
popa
rorb
out
aad
mov
inc
addr16
push
movsb
or
xor
test
inc
test
sbb
in
jae
push
movsb
xor
out
enter
fwait
mov
into
out
jge
fwait
push
jb,pt
jns
push
imul
rcrb
shl
inc
sub
mov
or
subl
bound
inc
lods
daa
mov
stos
xor
jl
add
pop
sub
xchg
inc
xor
push
call
xchg
rcl
fidivl
cltd
std
mov
xchg
sbb
test
xlat
loop
stos
clc
jnp
ljmp
xchg
ljmp
xor
shrb
in
out
movsl
inc
sub
push
or
ret
lcall
mov
ret
fldl
loop
mov
ja
loop
clc
sbb
out
shlb
popa
push
xchg
inc
in
popa
pop
mov
cmp
std
push
xchg
dec
daa
out
adc
popa
dec
xor
xchg
inc
mov
sub
fstl
pop
sahf
movsl
or
imul
inc
shrl
nop
fcoms
jae
and
push
aas
adc
cltd
sbb
adc
jo
enter
cmc
fwait
inc
lahf
ret
xor
lods
cld
pushl
orb
add
ret
xchg
or
xchg
mov
xchg
mov
push
call
ljmp
lods
jmp
inc
loope
mov
das
loopne
inc
mov
jno
imul
add
sub
shrl
jl
sub
jbe
pusha
ss
mov
and
xlat
in
jae
out
push
leave
sub
pop
dec
out
sbbb
mov
add
xor
push
cmpsb
adc
jno
idivl
lcall
daa
call
and
jo
icebp
push
in
jge
lcall
adc
enter
adc
int3
nop
sbb
lret
mov
mov
adc
add
mov
insl
or
pushf
out
cmpsl
pusha
sti
je
mov
xor
int
inc
xchg
lret
fwait
adc
cli
xchg
xor
mov
mov
push
cmpsb
pop
mov
ret
cld
jo
xchg
adc
cmp
and
mov
jl
insb
pop
xchg
scas
jle
shl
lahf
xor
les
popa
mov
or
andl
lahf
jae
insb
cwtl
ds
das
loop
xor
adc
pop
inc
lahf
mov
mov
addr16
fcoml
xor
xchg
scas
push
push
sub
out
pusha
subb
mov
ds
fs
dec
or
lret
fwait
mov
insb
add
popa
fisubrl
out
push
cmp
or
out
add
mov
pop
fisubrl
repz
cmp
insb
mov
sti
stc
jb
fwait
imul
jg
leave
dec
std
aas
ret
outsb
shrd
push
pop
inc
in
cmpsl
lahf
into
adcb
std
jb
aad
sbb
testb
mov
test
hlt
pop
movsl
push
lods
mov
mov
or
sbb
jb
mov
inc
in
pop
xor
not
into
not
gs
and
bound
mov
adc
pop
inc
pop
push
sahf
mov
pop
popf
sub
out
xorb
mov
idivl
divb
iret
int
lods
or
rclb
push
mov
lock
cmpsb
dec
jge
fwait
jnp
idivl
filds
int3
pop
xchg
xchg
jmp
add
add
lret
jle
cmp
repnz
pusha
sbb
and
hlt
loopne
push
push
add
adc
inc
mov
jns
mov
mov
mov
xor
adc
inc
jae
mov
xor
sub
sbb
adc
jb
mov
sub
int3
mov
sarb
push
jne
test
mov
push
pop
std
add
stc
lret
xor
out
leave
xchg
or
push
paddusw
xchg
je
shr
jae
cmp
push
std
dec
dec
and
pushf
int
pop
mov
mov
sub
cmc
clc
sbb
fbld
js
mov
sti
mov
or
lret
jno
icebp
call
nop
inc
xchg
pop
and
jbe
inc
rcl
rcll
testb
in
loopne
lock
or
add
aas
dec
lcall
repz
mov
aaa
xchg
fisttpl
gs
jns
pop
mov
sub
stos
xchg
pop
es
incb
js
dec
sbb
xor
mov
or
pushf
push
push
repnz
push
fmull
mov
jmp
bsr
push
xor
dec
cmc
sub
inc
inc
dec
clc
jae
or
or
push
pop
test
jecxz
cmpl
dec
sbb
shll
pop
js
sbb
rcrl
icebp
jnp
jb
and
lock
ss
add
add
jg
in
mov
jo
push
pop
ret
arpl
je
out
cmp
sbb
dec
jmp
int3
mov
in
in
mov
ret
mov
adc
xor
sbb
jne
xlat
mov
aam
xor
rol
xor
loope
push
aam
stos
shl
repnz
scas
dec
sti
push
mov
cmc
fs
adc
pop
dec
popf
jmp
adc
mov
ror
faddl
lea
or
sahf
into
or
rclb
lret
mov
sub
mov
and
fwait
mov
lret
sub
dec
je
scas
sub
popf
pop
popf
movsl
pop
sub
clc
mov
cld
mov
enter
in
pushf
ljmp
add
fimuls
call
test
jl
cmp
aam
aad
xchg
jge
xchg
sbb
out
inc
mov
out
scas
inc
push
mov
inc
shl
add
repz
xorl
mov
mov
mov
sub
enter
cmp
mov
jns
ret
fcmovnb
stos
js
lret
add
add
mov
ja
mov
add
cmp
addr16
sub
add
sub
push
fdivs
xor
add
sub
and
jge
push
jne
mov
shlb
out
rolb
push
fists
sbb
mov
add
icebp
sub
cmp
adc
insl
mov
xor
mov
mov
mov
xor
daa
mov
popa
gs
test
and
in
rclb
data16
pop
ret
pop
mov
cmp
test
fwait
lea
push
jecxz
push
and
inc
jbe
xor
mov
fwait
mov
jge
enter
pop
mov
push
pop
sbb
add
dec
inc
pop
test
and
test
loop
bound
int
ja
in
lea
js
addr16
cwtl
fldl
sarb
in
inc
push
iret
adc
mov
mov
ss
pop
andb
jns
sti
test
bnd
jp
or
cmovbe
add
iret
gs
mov
addl
xchg
movsb
mov
test
xor
adc
or
jmp
scas
or
xchg
js
dec
outsb
lcall
push
dec
stos
mov
int
sub
inc
push
mov
cltd
mov
test
insb
repnz
adc
xor
mov
outsl
lcall
outsb
pop
and
inc
aas
lds
mov
mov
sbb
push
ja
mov
fisubl
addr16
in
xor
jg
es
adc
imull
add
jle
pop
leave
push
leave
cmp
enter
cmp
jb
ret
call
mov
loop
inc
push
and
pushf
dec
inc
xchg
lods
divb
add
mov
sub
xchg
bound
push
stc
aam
xor
dec
push
dec
cmp
xchg
push
dec
cmc
aaa
nop
jo
lds
and
in
xchg
ja
test
in
das
fdivrl
ds
clc
mov
jo
push
lods
nop
pop
sbb
jbe
and
mov
push
xor
add
fs
js
je
sbb
push
mov
pusha
roll
pop
adc
sti
into
push
adc
cmovae
mov
popf
pop
jle
pop
dec
dec
cmpsb
lahf
popf
pop
sub
pushf
out
aaa
pop
orb
sub
mov
pusha
mov
xor
gs
je
lods
test
mov
jg
push
imul
lods
inc
inc
call
addl
pop
pop
ret
mov
and
popa
mov
int3
lcall
fcomi
xchg
aaa
add
cs
inc
dec
push
call
gs
and
cwtl
xor
inc
jge
jo
jge
hlt
icebp
mov
jne
add
inc
stc
and
imul
dec
push
lea
add
adcb
aam
bound
clc
pop
pushf
sar
cltd
out
sub
outsb
mov
inc
mov
jb
cmp
out
mov
shlb
or
xchg
aaa
xor
fldl
or
push
cmpsl
xchg
cmpsb
cmpb
pop
mov
xor
push
mov
fldcw
jp
adc
outsb
dec
inc
mov
cld
xorl
adc
shl
sbb
cmc
xor
mov
ds
dec
out
sbb
iret
ret
xchg
pop
inc
enter
dec
mov
daa
inc
cmp
sbb
xor
aad
hlt
jg
add
popf
inc
xor
iret
xor
pop
out
mov
sbb
popa
sti
aaa
andl
movsl
xchg
dec
add
inc
pop
lahf
and
decb
out
je
lods
call
pop
xchg
mov
xchg
lods
cmpsl
push
dec
scas
or
xchg
test
or
or
mov
dec
push
cmp
cmp
jp
cwtl
jbe
call
int3
mov
popa
imul
sbb
aad
test
ret
int3
dec
aaa
icebp
enter
xor
repnz
rol
push
subl
dec
movsb
data16
and
mov
out
and
repnz
or
jnp
jg
mov
jle
pop
push
popa
lret
mul
into
lahf
insb
dec
lret
js
int
test
outsl
push
fs
inc
out
push
adc
xor
clc
inc
push
cmp
cmpsb
push
leave
int
pushl
mov
or
loope
loop
pusha
scas
nop
add
or
gs
inc
or
shr
xchg
ss
imul
push
jmp
add
scas
in
dec
sub
test
mov
add
sbbl
mov
repnz
jnp
mov
popa
push
out
xchg
pop
push
sub
lcall
je
dec
fs
sbb
ret
mov
lahf
sub
sarl
push
pop
sbb
inc
es
jmp
pop
incb
sbb
mov
int3
sub
scas
mov
xor
pusha
out
jecxz
mov
xchg
out
insl
lcall
jle
sub
push
mov
or
sbb
cmpsl
cmp
fmul
shrb
mov
repz
int
stc
sbb
lahf
fidivrs
call
fldl
xchg
mov
cmpsl
xor
lcall
mov
ja
pushf
out
mov
shlb
xor
xor
xchg
xor
pop
negl
orb
cli
cmpsb
cwtl
insb
sub
pop
out
jge
adc
fidivrl
fistps
adc
fsubs
inc
mov
fldcw
push
sub
shr
push
push
outsl
cwtl
lea
stc
adc
xor
dec
dec
sbb
call
outsl
pushl
loopne
sub
aam
lret
lods
aaa
ret
dec
sub
andl
sbbl
add
xchg
mov
outsb
mov
xchg
pop
int3
hlt
or
jb
dec
push
cltd
aam
or
jmp
mov
loopne
sbb
push
ljmp
cmpb
mov
std
lahf
push
add
or
dec
addb
std
sti
xor
les
repnz
pushf
cmpsl
mov
jecxz
adc
add
sbb
mov
outsb
out
jo
cmp
ret
aas
xchg
out
mov
das
xor
daa
int
popf
loope
fldt
push
cmp
cmp
enter
imul
fcmovbe
xor
scas
add
add
inc
mov
or
popa
jnp
jmp
pop
pop
push
dec
mov
mov
psubw
stc
sbb
movsl
mov
mov
fidivl
and
cmp
cmp
mov
pop
jge
adc
push
push
lcall
adc
sub
testl
mov
subl
nop
fdivs
pop
push
lock
mov
ljmp
cmp
cmp
aas
jle
lahf
add
imul
inc
push
cli
sbb
jae
loope
hlt
lret
fwait
hlt
push
cmpsl
fwait
xor
xchg
scas
inc
jl
andl
pop
sub
cmp
add
and
push
addl
mulb
je
xchg
dec
push
or
std
xchg
aam
aam
and
mov
mov
pop
pop
adc
xlat
cmp
cli
jb
in
gs
out
lds
and
in
gs
mov
sub
push
mov
cmp
pop
push
and
inc
nop
data16
cli
xor
out
xor
mov
out
push
mov
mov
subb
mov
push
cmp
fnstsw
fwait
icebp
jg
imul
xor
mov
cli
and
adc
pop
push
lret
test
push
mov
hlt
out
push
rcr
jp
pop
test
lock
lods
out
cld
mov
rolb
inc
sarb
outsl
xchg
aad
notl
inc
add
out
ljmp
mov
jmp
add
ja
movsbl
orl
push
je
ret
mov
adc
mov
lods
xchg
dec
or
push
sub
inc
loop
pop
scas
fildll
roll
packuswb
loope
in
outsl
daa
mov
sbb
sbb
cmpsl
cmpsl
mov
adc
insl
mov
gs
mulb
push
dec
dec
lds
fmul
fcoms
mov
sahf
push
or
or
aad
pop
test
fcomps
or
inc
addr16
test
push
testb
int3
mov
rcl
xchg
push
lret
sub
popf
jecxz
xchg
add
es
sbb
mov
inc
fbld
pusha
sbb
xchg
add
bound
pushf
pop
in
dec
in
and
daa
ret
adc
xlat
xchg
dec
jo
and
xchg
pop
add
add
cltd
pushf
add
mov
mov
ss
jg
into
pop
jo
sbb
int
lds
xorb
mov
jmp
xchg
ljmp
sub
pop
loope
popa
mov
data16
or
xchg
cmp
adc
mov
lock
xor
mov
loope
push
xor
dec
dec
mov
jmp
jae
and
or
xchg
jae
mov
ss
or
test
lods
not
test
and
aaa
xlat
out
dec
fsubr
and
or
sahf
push
shrl
mov
xchg
sarl
lds
dec
pop
and
test
ds
pop
cmp
jns
pop
pop
loope
popa
jno
or
iret
adcl
mov
mov
call
push
repnz
shlb
mov
add
mov
mov
push
mov
mov
cmp
aad
cmpsb
adc
pop
das
repz
gs
jbe
mov
cmp
repnz
lcall
fwait
add
test
sbb
push
cs
jne
popa
xchg
enter
cmp
pop
ds
data16
mov
test
fsub
cmp
lock
adc
or
test
fisttpll
sbb
mov
or
dec
rcrb
icebp
scas
sahf
mov
and
fbstp
jle
shl
stos
stos
ss
jb
lods
mul
negb
les
ret
lea
mov
inc
lock
xchg
in
push
jbe
mov
aam
jmp
adc
popf
xor
lock
mov
push
or
dec
sti
or
gs
adc
push
sahf
hlt
rcrb
insl
es
outsb
push
sbb
sbb
jbe
mov
mov
adc
pop
cmc
ret
outsl
mov
stos
outsl
sti
xor
fdivl
fsts
or
push
jno
jecxz
das
pop
cmpsl
lret
das
cmp
mov
ret
inc
jns
das
ja
out
loopne
popf
add
cmp
and
jecxz
mov
jne
cwtl
repz
xchg
jnp
mov
ljmp
popa
test
jge
xchg
and
jmp
rorl
inc
jmp
loope
inc
scas
pushf
sub
iret
inc
aam
sub
int3
daa
cmp
sub
iret
lahf
mov
sub
test
pop
xchg
lock
add
ja
negb
cmpl
int3
xchg
xor
test
lods
push
jle
xchg
into
push
xor
cwtl
ficoms
push
xchg
xor
mov
inc
pop
mov
jge
int
decb
cs
pop
mov
stos
adc
mov
and
and
cwtl
clc
push
jo
inc
and
push
pop
mov
mov
sahf
rclb
mov
jns
mov
fwait
rcr
xlat
enter
and
lods
out
outsb
addl
xor
sub
dec
pushl
pxor
cmp
mov
ss
lds
imul
jbe
or
or
cmc
ja
adc
mov
jae
and
pop
and
jl
mov
push
push
mov
sub
dec
lret
test
cltd
gs
cmp
lds
arpl
adc
cwtl
xor
lret
sub
nop
imul
or
sub
stc
mov
scas
daa
outsl
test
stos
cmpsb
adc
inc
or
pop
movsl
sub
pop
icebp
sub
cmp
aam
mov
loopne
mov
int3
adc
dec
notl
jno
push
mov
push
mov
in
popf
in
ljmp
xor
loopne
sub
xor
das
cli
repz
sahf
fiadds
push
mov
in
int3
dec
outsb
xchg
jb
sub
fstl
mov
or
and
sbb
cltd
and
pushf
xchg
mov
popf
int
xlat
pop
adc
jecxz
sbb
rcll
pop
jle
ret
popf
out
lock
mov
or
jmp
jg
xor
cmp
xchg
inc
dec
inc
mov
xchg
push
sub
inc
fcoml
xchg
lods
adc
jne
jge
ljmp
shll
sub
dec
mov
aas
add
inc
lea
and
int
xchg
add
lcall
mov
lret
rorb
divb
xor
and
mov
jb
mov
adc
movsl
add
xchg
mov
js
sbb
frstor
mov
insl
js
rcll
mov
dec
xchg
mov
lock
call
imull
shl
repnz
add
in
outsl
inc
fisubs
insl
mov
cmp
icebp
inc
aad
jns
daa
adc
pop
adc
clc
lods
fldenv
dec
xor
cmpsb
xor
jns
sub
xor
sub
pop
testb
loope
push
inc
sub
add
xchg
stos
or
ror
arpl
xchg
pop
setle
jmp
jnp
ret
push
or
or
in
sub
sub
sbb
push
int3
loope
mov
pop
xor
adc
mov
jmp
inc
sbb
cmp
ror
sarb
sti
lock
adc
sti
lock
rorb
xor
dec
mov
lret
lahf
addl
jo
push
testl
clc
jl
mov
scas
xchg
test
fists
jle
daa
xchg
dec
pop
gs
pop
xor
mov
xchg
add
add
push
fldl
gs
xchg
into
int
mov
sub
push
fsub
outsb
inc
test
xor
mov
sbb
cmc
mov
xor
int
clc
mov
inc
pop
mov
fwait
jbe
xchg
xchg
and
lahf
hlt
add
or
inc
subb
loope
mov
xchg
lahf
push
sbb
xor
clc
repnz
jmp
dec
push
in
add
mov
cmp
mov
jns
sbb
mov
scas
lods
gs
lods
adc
dec
jmp
dec
out
xchg
xchg
out
sbb
nop
outsb
mov
push
jo
sahf
lods
jl
ret
pop
adc
xchg
sbb
mov
popl
loope
scas
out
dec
xor
mov
int3
nop
aaa
dec
push
gs
loope
bound
leave
adcb
mov
fiadds
insb
xchg
adc
cmp
xchg
in
inc
stc
mov
sti
bound
outsb
xor
shll
loopne
mov
lahf
sbbl
ret
xchg
out
cld
xor
and
outsb
sbb
mov
lea
jg
dec
mov
ds
pop
mov
fs
fwait
or
ja
insl
dec
test
idivb
std
loope
mov
cwtl
cmp
mov
pop
sub
push
adc
jge
je
dec
adc
pop
add
cmp
jge
jp
mov
fiaddl
loopne
or
inc
sbb
xchg
mov
shl
rcll
daa
pop
jl
dec
addr16
sub
fmuls
dec
sbbb
sti
je
xchg
sub
mov
lock
mov
in
dec
int3
clc
xor
scas
add
test
mov
lock
add
xchg
mov
xchg
push
adc
cmp
sub
inc
lahf
push
insl
push
pop
cltd
cmp
lods
add
test
dec
add
xchg
mov
loope
fsubp
xchg
and
push
loopne
or
xor
dec
mov
in
test
pop
cmc
mov
mov
mov
push
and
or
sbb
and
ss
dec
pop
sahf
mov
pop
xchg
fldt
in
scas
add
xchg
mov
mov
mov
stos
stos
ja
jbe
inc
xor
pop
stos
rcrb
push
push
sbb
sti
pop
out
sub
jecxz
mov
mov
cmc
lds
pop
stos
cmp
lcall
xchg
sub
and
out
xorb
adc
sti
cmp
insl
jno
lds
clc
pop
lahf
mov
jbe
stos
mov
addb
subl
insb
push
sbb
pop
cltd
iret
xchg
clc
ret
lds
out
push
push
mov
lods
es
sub
cmp
int3
lret
mov
sub
cmpsb
aad
mov
cs
lock
cmp
fsubrs
test
mov
jle
imul
jp
push
in
jo
xchg
test
push
enter
mov
add
ret
in
push
test
je
out
pop
inc
bswap
add
fnstsw
cs
flds
mov
jg
mov
cmp
cmp
add
pop
scas
gs
jae
or
ss
fwait
int
jbe
rcrl
fsubs
cmp
mov
repz
add
and
fldt
mov
xor
dec
dec
adc
dec
jo
xchg
idivl
in
fneni(8087
and
incl
pop
rcll
loopne
imul
out
add
jecxz
arpl
mov
mov
push
mov
push
sub
aad
sbb
cmpsl
fprem1
mov
add
leave
adc
ret
loop
adcb
or
mov
jmp
enter
aaa
push
fnstcw
sub
jb
lods
movl
aaa
or
dec
rolb
or
out
xchg
inc
xchg
mov
je
sbb
movsl
mov
test
push
orb
mov
inc
aas
mov
lahf
push
mov
jne
add
ror
xor
inc
push
repnz
loopne
or
imul
ffreep
add
sub
or
push
push
rcr
mull
loope
xor
cmp
mov
pop
adc
lcall
jp
and
dec
jle
fwait
rcr
dec
stos
or
xor
and
push
pop
adc
scas
shlb
inc
or
cmp
mov
stos
or
lret
test
xchg
imul
movd
push
push
pop
das
pop
pop
outsb
add
loope
inc
fcoms
dec
xlat
sub
and
sbb
lahf
cmp
add
sbb
stos
in
ret
jle
pop
lea
clc
or
mov
xor
call
push
mov
inc
xor
mov
fsubp
ljmp
mov
sbb
lahf
push
mov
out
in
out
push
and
add
in
testb
sbb
stc
lret
jne
xchg
mov
add
imul
in
mov
mov
sbb
in
mov
inc
imul
dec
mov
push
ret
in
jne
sbb
dec
push
movb
push
and
frstor
or
xchg
cmpsl
add
sbb
xor
test
cmp
xchg
shlb
mov
push
and
pop
jo
cli
test
mov
mov
fisubs
lea
xlat
inc
inc
dec
dec
sub
cmpb
bound
frstor
dec
clc
mov
xchg
add
push
jae
js
je
mov
lret
sbb
popa
lods
add
mov
cmp
pop
mov
movsl
xchg
sub
lock
nop
and
push
adc
mov
pop
fdivrl
cwtl
test
test
outsb
pop
xchg
ljmp
ss
lahf
hlt
mov
mov
aad
divl
pop
bound
dec
cmpsl
lock
cmp
adc
push
clc
dec
adc
call
popa
lds
leave
cmp
add
ds
das
mov
jmp
xchg
fisttpll
mov
xchg
imul
bnd
mov
scas
sub
test
inc
pusha
cmpsb
sbb
ss
sub
stos
and
xor
mov
push
mov
or
mov
xor
outsl
in
into
or
shlb
sub
mov
subb
adc
outsb
mov
jmp
es
movsb
jle
mov
outsl
ja
mov
xchg
cmp
adcb
ret
int3
out
ss
sub
sti
mov
movsl
sbb
fwait
out
or
jb
into
xchg
jp
inc
das
jg
or
and
hlt
int
add
lea
ret
push
sti
jb
inc
out
ficoms
fcmovb
imul
les
in
sub
lea
sar
or
stos
ljmp
cmc
repz
inc
pop
inc
hlt
lahf
ljmp
pusha
sub
pop
jmp
jmp
out
cmp
xchg
xor
fcoml
jae
xchg
inc
shll
daa
add
pop
mov
scas
fiaddl
pusha
dec
bound
mov
es
and
mov
push
repz
into
xor
cmp
cmp
fldt
push
jnp
mov
push
jne
int3
jmp
loop
push
cmp
outsl
popa
cmp
daa
push
pop
jge
dec
dec
mov
loope
ret
adc
cmp
jge
shrb
mov
inc
jnp
out
daa
sub
add
xchg
pop
fxch
scas
push
jg
sub
pushf
add
je
mov
sub
mov
mov
or
and
mov
test
sub
mov
jo
cltd
repz
clc
test
sub
scas
loope
sbb
jne
dec
test
xchg
dec
lcall
movsl
addl
dec
imul
xchg
mov
icebp
pop
data16
mov
mov
sub
lret
xchg
dec
lahf
enter
aad
hlt
xchg
lock
dec
inc
leave
mov
sbb
rsqrtps
rcrl
mov
je
xlat
xchg
outsb
sahf
mov
scas
clc
sbb
sbb
add
or
lret
jo
inc
ljmp
jns
sub
rclb
sti
dec
pusha
out
adcl
inc
mov
mov
in
mov
xchg
push
lahf
scas
shll
data16
inc
add
scas
movsl
mov
xchg
fistpl
mov
subl
and
or
rorb
mov
lret
mov
outsl
jmp
leave
test
xchg
sbb
push
dec
iret
cmp
push
es
dec
sbb
sub
push
mov
and
ret
aad
mov
sbb
aaa
sub
test
inc
repnz
enter
nop
scas
stos
mov
pop
shl
mov
mov
inc
je
mov
les
in
jecxz
mov
imul
aas
or
fwait
pusha
xor
xor
push
push
add
test
cld
adc
xchg
cmp
incl
push
xor
pop
rcll
xchg
dec
pop
fs
ret
mov
mov
rclb
xchg
fiaddl
cltd
loop
lods
scas
push
cmp
cmp
cmp
std
jb
mov
icebp
icebp
adc
mov
push
mov
jl
leave
and
das
stos
std
adc
push
sbb
jo
fildll
cmp
adc
rcrl
sbb
orb
push
jne
mov
bound
lock
int3
push
mov
push
inc
imul
mov
fmull
mov
xchg
lahf
int3
jge
cmp
enter
jnp
stc
inc
aad
jne
ja
mov
inc
in
push
push
xlat
and
leave
andl
ljmp
filds
pop
rcrl
jno
scas
cmpsw
push
pop
pop
imul
lcall
mov
sysexit
mov
sbb
sbb
inc
leave
adc
jo
fldt
pop
or
ret
pop
mov
movsl
sbb
adc
js
out
mov
jb
dec
xor
mov
imul
xor
aam
and
testl
jle
loope
push
ret
rolb
sbb
lcall
fists
xchg
or
dec
pop
sti
mov
mov
adcb
adc
daa
dec
test
mov
lods
or
cld
hlt
cltd
and
pop
rorb
mov
jmp
outsb
test
orb
rcrl
push
xchg
loope
and
push
ja
xor
cld
mov
push
inc
shll
adcl
rcrl
xor
movsb
or
cmp
push
push
xor
movsb
aad
push
cmp
shll
xchg
sahf
mov
test
mov
mov
jp
cltd
xor
pop
jae
dec
push
sub
les
dec
loopne
nop
mov
imul
cmp
sahf
sbb
and
pop
push
mov
loop
scas
cmp
dec
dec
jae
and
and
cli
sarl
mov
or
jno
inc
lea
in
imul
or
aam
xor
sbb
jecxz
jge
xchg
mov
stc
in
xor
lret
jl
je
sub
stos
std
es
cmpsl
jecxz
hlt
outsb
out
and
psubw
jl
inc
dec
insl
mov
shll
jg
movsb
xchg
cmp
mov
ljmp
dec
iret
mov
xchg
add
ret
lds
scas
fildll
int
xchg
ds
push
out
or
mov
push
in
cmpsb
mov
pusha
sti
cld
mov
lds
jbe
lods
pop
lea
rcrb
jne
xchg
adc
jns
mov
imul
xchg
pop
out
out
mov
mov
mov
cmp
cs
aaa
in
cmp
repz
pop
push
push
pop
add
lcall
decb
sub
adc
mov
jbe
test
sahf
cli
push
mov
inc
ds
pop
pop
aas
lahf
jmp
mov
dec
xchg
and
fmuls
jecxz
fisttpll
in
sub
fwait
inc
dec
push
mov
lock
pop
inc
or
add
jae
call
push
jns
in
sbb
mov
movl
xor
jp
shrb
xchg
xor
push
or
pop
les
pop
cs
enter
aam
push
xchg
cmc
popf
js
jp
pop
mov
jnp
fimull
fcomps
inc
xchg
insl
jl
mov
nop
mov
mov
mov
dec
gs
lret
into
mov
data16
out
mov
scas
jb
adc
bnd
enter
mov
jnp
sbb
mov
out
leave
push
sbb
jmp
jl
std
stos
sub
xchg
xlat
lods
push
sub
aas
jl
jle
ljmp
rcll
or
shr
add
pop
xorb
jg
fs
shr
ss
xor
addr16
mov
mov
scas
or
mov
daa
cltd
xchg
dec
push
push
adc
std
pop
pop
dec
dec
or
pop
push
outsl
or
mov
inc
fnstcw
and
leave
mov
inc
enter
mov
rclb
mov
mov
pop
ret
xlat
push
incb
cmc
xlat
mov
arpl
dec
push
out
add
xchg
xchg
cmp
lock
inc
xchg
xor
out
sub
jg
xor
ds
dec
and
inc
mov
sbb
pop
mov
pushf
adc
arpl
inc
arpl
mov
jnp
xchg
loopne
popa
fidivrl
testl
cmp
sarb
outsb
addl
add
jl
sbb
js
arpl
add
xchg
pop
gs
fwait
in
shlb
mov
push
rcll
mov
xchg
stos
sub
mov
mov
and
stos
in
ret
repz
out
aad
loopne
jnp
in
mov
and
sarl
jg
dec
push
imul
jecxz
test
fidivs
jl
sbb
cmpsb
bsf
ret
ds
daa
sti
push
popf
out
jecxz
pop
push
rcrb
pop
adcb
mov
cs
xchg
nop
dec
out
cmp
das
cmp
nop
push
jb
sbb
inc
lods
outsl
pop
adc
cmp
out
aaa
lea
adc
notl
les
dec
xor
mov
movsl
out
mov
rol
cmpsb
pop
and
add
sarb
cmpsl
movsb
ljmp
sbb
mov
lock
js
imul
xlat
cmp
pushf
mov
leave
andb
sub
jg
shll
movsl
test
fisubrl
push
addr16
pop
je
xchg
jge
push
loopne
dec
sbb
mov
xlat
sub
push
into
and
mov
adc
lahf
into
adc
rclb
lahf
jle
testl
mov
scas
push
clc
mov
jb
inc
bound
inc
ja
add
repnz
jbe
in
pusha
fistl
lahf
xchg
lahf
dec
in
insl
jmp
cmp
xor
imul
ret
int
fdivrs
std
and
out
aaa
lock
pop
enter
pop
or
pop
call
adc
add
xchg
outsl
adc
mov
testl
shl
xlat
sbb
les
pop
sub
aad
pop
out
sub
lret
push
xor
inc
add
and
je
xor
push
xor
push
sbb
cli
aas
fidivs
xchg
sbb
cmp
sarb
cmpsb
sbb
mov
into
enter
sub
das
xor
push
add
add
mov
popa
andb
fdivs
insb
sub
xor
lss
or
add
daa
mov
or
jmp
pop
pop
cmc
mov
dec
cmp
jb
sbbl
clc
add
test
dec
aaa
fwait
jg
jnp
or
repnz
and
imul
pop
mov
sub
das
adc
cltd
sub
mov
xchg
popf
cmp
xor
or
ds
jo
sbb
aad
push
mov
test
repz
rcr
push
adc
sub
lea
loope
dec
inc
inc
outsb
add
cmp
insl
fisubrs
lret
lret
shlb
xchg
stos
dec
movb
loope
cli
repnz
in
jecxz
or
insb
inc
push
test
jmp
push
insl
dec
adc
mov
cmc
dec
loop
faddl
mov
jge
sti
cli
repnz
pop
sub
fwait
push
adc
cmp
aam
ss
mov
mov
push
or
lahf
jno
leave
xlat
push
clc
dec
out
sub
add
orb
dec
xor
push
cmpb
pop
add
std
fiadds
push
shrl
stos
insb
inc
or
pop
pop
inc
repz
mov
xchg
mov
jl
sbb
int
adc
adc
inc
in
and
push
aam
rcrl
addr16
leave
add
lds
jecxz
adc
pop
pop
lahf
scas
jo
mov
stc
add
fidivrs
mov
mov
push
mov
xor
mov
pop
repnz
fdivs
add
fucom
lds
cld
xor
sbb
xchg
cmp
inc
hlt
into
cld
mov
cmpl
in
and
adc
xor
jmp
pop
shlb
cmpsb
sbb
jmp
movsb
cmp
mov
arpl
jno
insl
add
stc
sarl
subl
cmp
inc
scas
inc
cmpl
mov
out
fistpll
mov
xchg
je
push
idiv
fwait
sbb
imul
int3
repnz
cmp
incb
gs
lea
jne
fstps
scas
idiv
in
icebp
adc
movsb
mov
fs
dec
test
push
ja
test
bound
push
stc
movsb
or
je
mov
notb
shll
pop
call
jmp
cmpsl
nop
adc
sub
jb
mov
insb
push
imul
dec
inc
dec
jecxz
push
hlt
mov
pushf
xchg
adc
xor
inc
mov
jl
pop
cmpsb
imul
sbb
pop
lods
and
loopne
and
sbb
fwait
add
decb
mov
mov
out
cwtl
mov
cmp
add
push
mov
inc
not
shrl
add
aas
mov
push
das
mov
add
adc
fs
jne
sbb
das
pop
lret
xchg
imul
lock
andb
stc
cmp
in
inc
sub
dec
outsb
cmpsb
ficoml
mov
push
ja
sbb
jp
cli
push
dec
int
repnz
pop
mov
xor
int
mov
int3
rol
inc
lock
js
pop
iret
xchg
mov
aaa
iret
cmpsl
add
movsl
cmpsl
std
out
not
mov
lds
xchg
push
cltd
xor
lret
adc
push
mov
out
lret
dec
adc
mov
xor
dec
jl
jno
dec
ljmp
mov
mov
fstpt
pop
xchg
popa
jnp
cwtl
scas
sub
sbb
test
in
les
aaa
cmp
repnz
loop
dec
das
xor
ds
movsl
pop
scas
push
lods
xor
aad
orl
mov
sub
ja
jecxz
add
outsl
ss
loopne
mov
and
incb
mov
push
jno
fimuls
xor
cld
mov
int3
jo
jmp
sahf
inc
jbe
inc
cmpsb
pop
xor
lret
cmc
mov
mov
push
mov
rcrb
push
and
xor
xor
cmp
mov
lds
cmp
mov
push
mov
pop
stos
mov
fmul
adc
jne
xor
jbe
mov
outsl
das
sarl
cmp
dec
mov
push
jmp
stos
sub
push
imul
je
fnstcw
rorb
push
rorl
inc
xchg
outsb
or
cmpsl
clc
into
push
push
fdiv
testl
sub
xor
ja
movsb
repnz
shrb
cmc
dec
dec
movsl
filds
lea
xor
bound
mov
mov
cmp
inc
cltd
dec
jg
testb
clc
adc
sub
scas
push
loope
lods
mov
xchg
xchg
daa
bnd
or
mov
mov
pop
jp
bound
add
ss
pushf
test
xor
fwait
cmpsb
inc
out
xchg
push
sbb
dec
sbb
sub
mov
and
ds
add
outsb
ljmp
sbb
lret
cmpb
adc
pop
shr
aad
pop
jg
pop
scas
stos
and
fimuls
mov
int
cmpsb
jns
daa
cmpsb
mov
adc
packsswb
xchg
mov
icebp
stos
jne
call
mov
add
pop
mov
jl
lds
inc
nop
jbe
xchg
scas
repnz
dec
out
popa
xchg
mov
and
cmp
xchg
stos
or
aad
popf
xor
ret
push
int3
xor
sahf
jge
sbb
sub
out
add
loop
push
jge
movsl
sub
jg
popa
xchg
dec
mov
mov
dec
sbb
test
cmpsl
outsb
xor
cli
sub
test
xchg
fcompl
sahf
mov
xor
xchg
add
popf
ss
hlt
xchg
xchg
mov
sub
jae
ds
cmp
pop
adc
ror
popf
jnp
jmp
fwait
test
mov
lcall
ss
ret
lret
fucomi
fs
call
or
sbb
iret
lods
dec
fcmove
jbe
dec
inc
mov
inc
cmp
xchg
pop
repnz
push
xchg
mov
mov
mov
stc
mov
cltd
mov
imul
movsb
add
pop
jne
push
sub
fcmovnbe
sti
jno
add
lcall
loopne
pop
not
mov
icebp
mov
sbbl
call
lcall
stos
sub
or
cwtl
lea
testl
jns
add
jle
dec
inc
ficoml
adc
push
or
jp
mov
sub
addr16
adc
fdivrs
mov
hlt
ljmp
bswap
inc
outsl
jbe
shl
gs
pop
enter
inc
add
and
jnp
sbb
push
std
pop
in
sbb
push
adc
jno
jns
jbe
xchg
push
cmp
js
inc
xor
cld
rorl
mov
lods
ss
aad
fwait
add
xorb
mov
add
add
lea
pushf
mov
out
dec
addr16
xchg
int
pushf
outsb
insl
out
sbbb
ss
push
and
inc
sbb
shrb
mov
cmp
add
mov
inc
loope
cmpsl
imulb
subb
test
cli
loop
dec
repnz
cwtl
outsl
sbb
call
mov
cmp
pop
pop
mov
loop
xor
add
mov
fldcw
or
pop
inc
cmc
out
cld
inc
fwait
popa
and
adc
xchg
jmp
mov
mov
sbb
stos
mov
jns
jmp
xor
mov
bound
mov
test
mov
fdivrp
sbb
ds
pop
adc
jns
xlat
xlat
std
add
adc
or
aaa
in
mov
mov
mov
push
imul
xchg
fsts
icebp
xor
and
je
lds
dec
jnp
fs
popa
jmp
cmp
loopne
lock
fs
inc
cmpb
xchg
jne
cmpsb
dec
mov
fistl
cmp
loope
out
lahf
in
out
push
in
sbb
shlb
cli
das
daa
jp
push
orl
or
mov
loope
xor
sub
aas
push
imul
movsl
mov
sub
push
push
inc
lret
fbld
mov
xchg
lods
fcomps
repz
or
sbb
cmc
iret
pushf
sub
push
sub
jecxz
loopne
popf
fcomi
xchg
subl
dec
mov
mov
mov
fisttpl
jge
inc
xchg
xchg
movsl
loop
aam
mov
cli
sub
ds
mov
mov
in
pop
and
pop
inc
add
xorb
fmull
pushf
cmp
mov
popa
add
xor
sub
push
cmpsb
js
sbb
rcl
loop
out
xor
jae
cld
daa
pop
pop
mov
jno
in
push
outsl
fsubs
xor
jge
repnz
and
mov
stos
jnp
aaa
jg
into
clc
lcall
push
sti
xor
jns
ret
sbb
dec
fmull
dec
out
push
into
mov
lahf
lahf
sub
ljmp
outsb
nop
sbb
sub
push
addb
xor
out
pop
xchg
sub
jns
inc
sbb
xor
lods
bound
fpatan
ljmp
or
or
clc
mov
sub
add
cmp
inc
sbb
in
add
push
fmull
and
inc
ret
xor
push
jmp
js
movsl
mov
xor
adc
out
pop
cmp
insl
dec
data16
iret
adc
push
cwtl
popf
cmp
lods
stos
sbb
add
dec
cmp
mov
ljmp
pop
mov
add
pop
gs
inc
jp
or
or
mov
mov
shrb
stos
mov
loop
call
lods
ret
out
mov
pop
pop
push
js
inc
fcomps
push
outsl
mov
jnp
inc
test
insb
arpl
jecxz
dec
sbbb
cli
push
aam
sub
insl
and
aad
lock
mov
lret
fsubrs
sbb
jle
add
outsl
or
rorl
xor
outsb
and
xchg
pusha
pop
adc
cwtl
adcb
cmovg
adc
cli
mov
push
sbb
jb
push
cli
inc
iret
mov
mov
daa
fsubr
in
cmpsl
mov
xor
push
cmp
lods
lea
ds
mov
mov
clc
rclb
sub
shll
or
sub
jl
enter
xor
mov
pop
mov
lret
sub
mov
insb
iret
sub
cmc
sub
shlb
in
sbb
mov
and
das
pushf
xchg
mov
leave
mov
sbb
cwtl
loopne
pop
outsb
out
mov
loop
movsl
fyl2xp1
icebp
mov
add
cmp
sub
int
or
outsw
push
sub
test
arpl
or
adc
mov
push
xor
sbb
popf
mov
or
add
push
push
call
pop
pushf
pop
repnz
clc
sbb
dec
pop
mov
and
xchg
pop
test
in
dec
pop
adc
xchg
mov
xor
dec
cmc
aad
pop
add
out
cmpsb
push
mov
cmp
loop
sub
mov
jbe
mov
push
dec
ss
negb
and
scas
adc
ja
rorl
lock
clc
xor
add
push
sbb
subb
mov
mov
ljmp
fbstp
fstp
scas
mov
je
insl
enter
push
or
dec
add
imul
and
jecxz
stc
and
mov
inc
fsubl
adc
push
mov
cmp
mov
inc
sbb
movsl
jbe
xchg
popa
xchg
inc
movsl
push
ss
mov
insb
xchg
and
mov
in
out
xchg
add
rcrb
add
ret
mov
sbb
in
mov
sub
jne
dec
adc
jbe
sbb
add
or
fucomp
scas
ret
scas
ret
sbb
cmc
sub
fnstenv
push
jae,pn
mov
pop
lock
scas
adc
cmp
or
icebp
mov
mov
cmc
shl
cmp
test
sub
sti
pop
sub
jg
nop
in
scas
mov
lods
js
pop
lds
dec
out
mov
shrl
lret
xlat
xchg
mov
lcall
loopne
sub
or
in
mov
pop
add
imulb
mov
xor
testb
in
fsubs
aad
in
shll
mov
push
aam
subl
stos
insl
std
mov
sti
pop
test
xlat
push
imul
stos
call
ja
mov
inc
std
cmpl
cwtl
push
add
adc
dec
sbb
outsl
inc
les
xor
or
jle
aam
pusha
and
xor
les
fcom
cmp
push
mov
repnz
xchg
lret
loopne
out
xchg
popa
push
adc
sub
jg
stc
mov
xchg
and
sbb
jg
aad
sarl
add
repz
pop
mov
jb
in
jno
dec
inc
sarl
insl
sti
sbb
mov
fcmove
xlat
cltd
xor
dec
je
mov
in
push
xor
aad
divb
ds
lahf
and
aam
mov
xor
roll
sub
ret
cmp
addr16
and
es
mov
std
nop
loopne
iret
cmp
lock
and
movsb
addr16
into
sarb
mov
sahf
push
fstpt
pop
popa
lods
mov
fldl
clc
pop
mov
sbb
mov
fnstenv
xchg
shll
aam
mov
and
mov
sbb
pop
xchg
repnz
stc
xor
fildll
mov
lock
push
push
cmp
out
test
jge
sarb
cmpl
movb
cltd
aam
cmp
mov
enter
jbe
jp
fiaddl
cmpsb
adc
pop
mov
andb
loope
sbb
testl
push
or
data16
fistpll
jns,pn
inc
aam
fists
inc
sbb
sbb
in
sbb
mov
push
xor
xchg
cmpsb
cmp
xor
xor
dec
xor
sbb
dec
mov
aad
cmpsb
xchg
pop
ret
sub
dec
mov
xchg
stos
and
push
sub
iret
xchg
lcall
cltd
xchg
mov
sbbl
sub
leave
ret
leave
pop
test
iret
xor
add
sbb
cli
cs
in
and
in
mov
xorb
test
dec
ret
pop
popf
inc
shrl
and
sbb
mov
pop
and
xor
orb
stos
add
inc
xor
pop
mov
mov
cmp
fmulp
cld
jle
or
mov
push
or
test
pop
push
xor
pushf
fwait
or
pop
das
xor
xor
subb
cli
int
testb
inc
pop
mov
push
and
call
sbb
push
mov
pop
flds
xchg
loopne
add
out
in
test
xchg
stos
dec
xor
andb
inc
clc
imul
or
rorl
inc
ljmp
bound
scas
jne
xor
stc
pusha
dec
fs
pop
fnstenv
ret
push
xchg
or
and
push
icebp
dec
stos
sbb
push
or
lods
sbb
jae
test
jns
push
mov
mov
rorl
jecxz
mov
cwtl
imul
sbb
out
aas
sti
loopne
pop
hlt
das
aaa
push
movsl
jne
repnz
jle
xor
pop
stos
inc
ljmp
arpl
inc
int3
sarl
add
pop
xor
jmp
or
fsubrp
mov
xor
in
pop
incb
or
push
movsl
jg
sbb
loopne
push
mov
xchg
lock
and
xlat
mov
mov
add
push
pop
lcall
mov
push
sbb
dec
mov
ss
daa
out
lret
push
add
dec
and
dec
or
push
ja
xor
scas
xor
push
iret
push
cmp
adc
lds
out
fistpll
cmc
mov
xchg
idiv
bound
scas
or
repnz
mov
shlb
jp
xchg
mov
fistpl
cwtl
in
and
push
xchg
out
daa
xchg
pop
xor
mov
popf
xchg
leave
test
cs
lret
out
cwtl
mov
inc
shrl
and
inc
aas
out
sar
push
clc
in
sbbl
std
add
xor
call
bound
cld
mov
in
ja
jge
jp
ja
sbb
mov
lret
jl
scas
test
test
xchg
push
inc
ja
mov
jbe
xchg
pusha
xchg
inc
sbb
test
lock
push
arpl
adc
jle
std
push
adc
pop
mov
gs
mov
test
pop
and
outsl
outsl
and
mov
xor
loope
cli
mov
arpl
inc
jg
cmpsb
leave
mov
addr16
mov
cmp
jne
mov
in
rcl
imul
dec
inc
rcll
sub
cmp
and
cmp
outsb
clc
faddl
cmp
xchg
fcompl
dec
lock
pop
iret
dec
scas
mov
jle
push
into
addb
scas
push
sti
dec
pushf
nop
dec
sbb
sahf
xlat
jbe
clc
in
pop
enter
xor
loop
cli
xchg
mov
cmp
test
lahf
outsb
jnp
cmp
jne
cmp
mov
cwtl
loopne
in
cmp
mov
lds
inc
pop
jl
sbb
ds
mov
test
ret
fwait
lret
cmc
rclb
in
dec
mov
cmp
pop
arpl
jl
loope
jg
xchg
inc
jns
call
addb
mov
enter
aam
cld
mov
jnp
push
fwait
roll
sub
jb
jae
imul
push
lds
fldcw
push
movsb
movsb
stos
push
pop
and
cmp
invd
xchg
ljmp
or
pop
divb
out
mul
mov
mov
ret
pop
inc
test
inc
xor
andb
cld
or
imull
sti
mov
or
and
pmaxsw
gs
sahf
jecxz
xor
shl
adc
sbb
stos
mov
cwtl
imul
inc
movl
sbb
push
jmp
push
push
sahf
push
std
popa
dec
icebp
repnz
scas
out
sub
xor
ret
mov
xchg
cmp
pusha
xor
cmc
and
lea
fildll
call
shlb
jmp
rcl
ret
push
dec
pushf
shr
ret
daa
jecxz
pop
push
in
mov
bound
cmp
cmp
inc
push
push
jecxz
jne
scas
aas
sbb
daa
mov
dec
or
cmc
dec
pop
sbb
lods
xchg
scas
jmp
mov
xor
xor
jg
mov
ss
or
sub
dec
xor
push
xlat
mov
imul
adc
mov
push
xor
repnz
jb
arpl
xor
inc
inc
sbb
adcl
inc
test
les
xchg
lea
sub
pop
pop
jnp
mov
pop
pop
jl
outsb
pop
and
inc
int
or
pop
fldenv
inc
mov
xchg
scas
pop
inc
stc
dec
xor
fnstcw
ss
dec
pop
ss
clc
adc
test
out
adc
lods
xchg
and
lcall
push
std
inc
jl
xor
pop
pop
sbb
pop
add
aas
popf
je
cmp
add
loopne
addr16
and
js
ljmp
cs
shrb
mov
cld
xchg
xchg
push
mov
mov
lea
insb
call
push
pop
enter
rcrb
dec
adc
incl
fdivrl
mov
pop
fcmovb
xor
and
std
test
inc
inc
ja,pn
xor
mov
mov
fcompl
cmp
inc
jnp
scas
inc
jne
sbb
dec
mov
and
and
aas
jle
mov
out
call
aaa
dec
arpl
xor
xchg
pop
cmp
nop
cs
inc
icebp
fdivrs
movsb
pop
lahf
jge
jae
xlat
sub
mov
xchg
inc
ljmp
mov
mov
xchg
imul
and
addr16
daa
mov
sub
lahf
mov
lods
xchg
inc
cmp
jbe
dec
mov
scas
inc
in
cmp
loope
jg
add
xor
sahf
xchg
cmpb
adc
cmp
inc
jno
jmp
mov
les
out
lahf
lea
and
arpl
sbb
sbb
sbb
mov
imul
insb
add
xor
mov
xor
jle
inc
xchg
inc
lret
insl
sub
nop
int3
je
notl
nop
push
popf
adc
lods
sub
out
cmpxchg
push
outsl
iret
mov
push
jo
inc
fcoms
pop
dec
cld
push
mov
lds
in
mov
inc
or
cmp
sbb
outsl
cli
xor
add
add
or
leave
sbb
mov
pop
xor
xchg
sbb
xchg
inc
ret
push
cmpsb
add
test
xchg
call
push
pushf
movsl
ja
mov
push
inc
xchg
sbb
dec
lds
or
xchg
cmc
adc
das
cmc
ret
pop
rclb
cli
lahf
lods
shlb
test
pushf
arpl
clc
nop
insl
mov
mov
and
xor
leave
in
mov
push
stos
lds
int3
in
mov
add
sbb
jmp
xor
testb
leave
cld
stos
push
testb
push
xor
sub
cmpsb
fldenv
adc
insl
mov
inc
cs
ljmp
and
add
jecxz
lea
fmull
scas
sub
rclb
and
in
nop
xor
dec
scas
cmpsb
mov
cmp
sbb
add
adc
lahf
loopne
test
aad
rclb
sub
xor
push
xor
sbb
cli
inc
sti
xor
sahf
adc
int
out
and
icebp
sub
subb
push
xchg
insb
scas
cmp
out
mov
gs
add
fstpl
mov
cmp
fdivl
sub
fnsave
fs
push
in
push
xor
lds
mov
jecxz
mov
or
mov
and
sbb
std
add
aas
xchg
push
sbb
es
loopne
cmp
adc
mov
repnz
aas
inc
int3
dec
inc
xor
xor
mov
push
sbb
or
xor
shr
pop
inc
push
adc
sub
or
test
lahf
fsts
shll
inc
jle
or
cmp
sub
fiaddl
push
sahf
imul
fimuls
sub
jae
insb
push
ja
dec
push
stos
movsl
sub
inc
and
or
push
lret
fsubrs
sbb
mov
and
xor
mov
movsb
call
adc
or
fists
imul
pop
mul
jmp
clc
cs
popa
leave
jl,pn
xchg
adc
int3
and
adc
sti
push
pop
inc
je
sbb
add
cmc
mov
push
pusha
fs
repz
test
insb
add
call
rclb
je
xor
add
cwtl
out
js
push
fildl
ja
ja
jecxz
pop
xchg
and
pop
scas
mov
stos
lods
ret
push
mov
mov
xor
out
jae
push
or
dec
rcl
mov
enter
sbb
pop
fisubrl
icebp
mov
inc
jae
add
and
sub
xor
xchg
cs
cmc
push
scas
ss
sub
push
in
loop
shll
dec
adc
xchg
mov
dec
jb
mov
mov
mov
pop
mov
xchg
mov
out
fs
stos
dec
inc
fldenv
test
les
sub
and
inc
ss
xor
rol
cli
or
lock
scas
push
push
fstp
or
dec
int
test
hlt
clc
mov
clc
adc
or
mov
cmp
cmpsl
fisubs
dec
adc
pop
mov
pop
movsl
jle
std
test
call
mov
iret
iret
je
push
push
jbe
pop
xchg
mov
lret
jne
cmc
sbb
sbb
jle
cmc
mov
int3
sahf
jno
xchg
into
mov
cmp
jle
mov
iret
or
lock
and
mov
ss
bound
push
or
jbe
decl
insb
gs
sub
lock
add
sbb
jnp
xchg
xbegin
cmc
dec
xchg
mov
add
aam
inc
push
and
scas
fcmovu
mov
imul
out
inc
add
cli
or
sub
dec
and
xor
ficoml
in
adc
cs
je
push
cmp
mov
outsl
mov
mov
mov
in
stos
mov
dec
adc
dec
xlat
sbb
pop
fldenv
inc
fwait
loope
push
ljmp
or
gs
adc
jg
setae
xchg
testb
mov
cmp
mov
sbb
hlt
jecxz
xchg
mov
or
stos
dec
ret
in
push
cmc
ret
out
in
sbb
movsl
cmp
mov
rorb
add
cmp
xlat
mov
add
or
xor
add
dec
mov
jae
sub
jecxz
mov
mov
pop
rcrl
push
or
clc
in
cmp
cmc
push
mov
mov
out
xchg
mov
movsl
cli
mov
pop
and
ret
pop
enter
flds
jnp
ret
cmp
cltd
pop
lret
mov
arpl
imul
imul
mov
push
jmp
push
inc
fstpl
bound
scas
outsl
sub
outsl
jl
clc
fnstenv
test
push
out
mov
mov
cltd
sbb
ja
xchg
inc
jo
pop
xchg
hlt
dec
decl
jge
push
cmpb
sub
push
int3
add
sbb
adc
loope
in
inc
fs
cmpsb
out
fsubs
ss
adc
mov
icebp
pop
clc
lret
push
add
xlat
dec
xor
mov
and
and
cmpsl
nop
data16
jle
aam
in
stc
xchg
jae
test
popa
jb
fxch
ja
or
mov
stos
push
testb
inc
loope
inc
jns
sbb
fsubp
pop
negb
or
xchg
adc
repz
mov
inc
push
xchg
inc
bound
ficompl
cmp
repz
call
push
jmp
rol
cs
push
rcll
ficomps
jns
cmp
lock
movsb
xchg
jnp
cmp
outsb
loop
jo
pop
dec
or
sub
xchg
jns
loop
clc
addr16
movsb
ja
sub
loope
jmp
push
inc
insb
addr16
test
mov
mov
push
sub
fcomps
push
mov
add
sti
loope
pop
dec
imul
sbb
stc
push
adc
test
jnp
dec
inc
cli
repnz
fsub
push
fdivrl
cmp
mov
xchg
in
test
and
imul
ret
or
icebp
fwait
mov
xchg
lahf
ret
jg
in
leave
and
out
xor
repz
push
add
ror
into
adc
cmpsb
aas
mov
in
pop
sbb
hlt
popa
pop
pop
add
stc
cwtl
push
ret
lret
fsubr
fs
and
add
insb
sbb
push
mov
testl
vandnpd
jnp
pop
pop
or
testb
mov
adc
jecxz
pop
cmp
mov
dec
xchg
push
adc
cwtl
pop
fmull
push
popf
or
hlt
pop
leave
pop
sbb
sub
or
xchg
lahf
imul
jbe
mov
mov
adc
insb
clc
dec
pop
andb
shl
xor
and
cwtl
adc
pop
mov
jl
mov
jecxz
ss
add
jp
in
movsl
push
xchg
shl
push
aam
jnp
sti
clc
clc
jle
push
in
sbbl
dec
dec
mov
pop
outsb
adc
lods
hlt
shl
shl
cmpsb
je
lret
loope
lock
sub
pop
pop
push
pushf
mov
iret
cli
inc
push
and
push
jne
je
inc
jbe
jae
nop
outsb
lock
in
mov
cmp
sub
jne
sbb
scas
popa
push
mov
cmc
xor
jne
das
cmpsb
fcomip
fs
loope
popf
adc
push
cmp
repz
inc
je
lods
cli
ror
xlat
xor
add
xchg
sarb
mov
cmp
lock
hlt
add
bound
imul
pop
orl
push
rolw
xor
inc
jne
push
idivb
scas
bound
lahf
aas
icebp
jp
js
popf
sub
cs
imull
mov
mov
mov
shrl
movsl
jle
mov
dec
pushf
inc
cmp
pop
ss
sbb
sbb
dec
mov
xchg
mov
pop
push
pop
push
sub
lcall
sbbl
in
fbld
mov
test
je
int3
xchg
fistps
mov
inc
pushf
jl
hlt
dec
daa
adc
loop
cmp
add
or
xchg
ss
arpl
fnstenv
cmp
mov
fisubrs
ret
dec
mov
sbb
add
cmovns
or
adc
outsb
mov
iret
dec
and
sbb
lds
ret
das
jmp
test
out
mov
push
or
push
cltd
insb
hlt
int3
ss
mov
xor
ljmp
pop
lea
loope
cltd
push
add
jg
push
jmp
sbb
fs
cld
andl
sbb
pushf
pop
out
arpl
std
insb
scas
lret
bound
shr
cmp
mov
mov
sub
and
fdivrp
dec
inc
dec
out
mov
test
dec
cld
rclb
add
mov
cmpb
mov
or
push
xchg
mov
and
es
jecxz
fcoml
sub
and
sub
in
fdivrl
adc
cmp
sub
pop
xchg
stc
cmc
mov
add
sahf
fsts
fsub
mov
stos
pushf
test
xchg
adc
cmc
push
dec
stos
mov
mov
sbb
stos
dec
mov
mov
cli
mov
push
xchg
or
mov
aam
add
add
aam
push
jp
jne
jp
push
mov
syscall
lock
mov
lahf
dec
les
dec
lock
push
add
subl
cmp
mov
ficompl
mov
xchg
dec
push
mov
rorl
mov
mov
xorw
mov
mov
or
fs
mov
cmp
adc
pusha
dec
mov
push
xor
sbbl
subb
lcall
gs
ret
insl
je
enter
lret
mov
mov
push
jl
out
inc
loopne
or
push
dec
dec
lahf
xchg
stos
sti
in
fisubs
aam
mov
icebp
push
inc
rcrb
nop
and
in
sbb
jmp
inc
divb
sbb
dec
jnp
cmp
jecxz
imul
imul
repnz
les
dec
pop
nop
pushf
sahf
mov
cmp
fnstsw
push
test
mov
mov
pop
push
cmp
sbb
loope
notb
fs
dec
dec
cmp
mov
data16
repnz
mov
inc
cmc
push
jle
push
dec
fildll
and
add
or
addb
aad
in
xor
leave
nop
popa
or
adc
mov
jbe
mov
push
mov
jns
ja
pop
jno
push
pushf
add
pop
call
fadds
mov
xor
and
cwtl
mov
pop
leave
xor
xorb
std
pop
jl
lock
push
mov
jl
cmpb
shll
sub
push
mov
addr16
mov
xor
imul
cmpsl
aam
cmpsl
mov
mov
cmp
cmp
popa
imul
pop
repnz
notl
xchg
mov
mov
loop
jnp
inc
lds
mov
pop
ss
dec
movsl
lods
push
cmp
xchg
loop
aaa
adc
dec
fsubr
adc
in
or
adcl
push
cmpb
cmp
xchg
lahf
and
push
or
inc
lds
lds
iret
push
dec
int
mov
insb
out
fsqrt
xchg
or
adc
mov
xchg
cmp
sbb
mov
lcall
xor
dec
loope
movsb
add
pushf
daa
sahf
sahf
in
enter
lret
fucomip
mulb
scas
push
push
fs
in
rcll
cltd
sbb
femms
bound
fsubrs
cmp
or
cmc
out
dec
xor
sbb
jae
inc
xchg
lea
add
mov
inc
pop
mov
cld
cmp
push
inc
icebp
lods
imul
daa
jg
and
fwait
lret
loope
push
je
sub
push
push
dec
sbb
lods
add
and
loope
push
push
jb
sbb
imul
pusha
ss
int
aas
jne
adc
js
loope
push
dec
inc
jecxz
mov
sub
mov
push
pop
xchg
daa
cmp
aas
fsubl
mov
push
mov
push
bt
dec
jp
add
popa
mov
hlt
movntq
dec
sbb
mov
inc
testb
and
or
stos
push
mov
ret
jae
mov
push
jmp
in
sti
cmp
sub
mov
fmull
cmp
int3
sbb
stc
cmp
loopne
scas
push
popf
fwait
add
dec
dec
or
js
stos
push
lcall
test
push
and
rorl
and
mov
ror
daa
fldt
inc
sbb
pushf
movsb
mov
pop
arpl
cmp
lock
dec
push
push
mov
clc
xchg
aad
jb
mov
dec
mov
int3
insl
mov
jecxz
cwtl
add
dec
xchg
sarb
ret
push
test
mov
mov
pushl
out
sbb
jb
scas
test
daa
inc
js
dec
xchg
stos
fs
xchg
push
pop
pop
or
inc
sbb
ret
mov
adc
xchg
lret
xchg
sub
fstpl
xchg
pusha
dec
jnp
pop
jno
mov
dec
xchg
int
sbb
push
lret
dec
fs
xchg
fs
mov
and
je
mov
push
push
in
repz
mov
pusha
fwait
sarl
mov
icebp
aas
pop
mov
fcoms
dec
xchg
and
movb
iret
fbld
out
cmpsl
orb
call
add
or
xchg
mov
test
or
call
mov
fsubr
sub
xchg
sub
push
adc
sbbb
push
push
call
cmpsb
mov
out
fwait
xchg
negb
cmp
push
push
pop
in
ret
repnz
cmp
push
out
pop
add
stos
lock
ret
jle
test
in
mov
push
jno
xchg
xchg
cmp
xchg
das
xor
stos
lahf
inc
imull
pop
jge
sub
cwtl
pop
inc
push
pop
add
lock
in
je
xor
rdpmc
push
cs
les
js
inc
in
jnp
and
jns
jg
ljmp
loop
test
das
mov
movaps
cwtl
dec
out
xor
add
pop
add
jle
out
push
aam
rorl
sub
imul
lods
neg
addl
add
idivb
mov
outsl
aad
dec
mov
mov
mov
jg
scas
dec
sbb
lea
imul
and
and
mov
sub
stc
lret
jb
mov
scas
jp
mov
clc
adc
sub
dec
pop
call
out
leave
adc
push
ja
std
cld
loopne
and
sub
xchg
lahf
ljmp
subl
push
and
outsl
add
aaa
nop
rcll
dec
push
leave
mov
daa
dec
js
push
or
test
aas
mov
in
jo
in
mov
jo
xlat
and
xchg
mov
jno
xchg
adcb
out
nopl
call
xor
jo
movsl
ds
or
int3
sub
rclb
in
ja
aad
mov
les
lcall
add
adcb
out
push
pop
adc
lcall
pusha
sbb
rorb
std
push
pop
call
mov
test
stos
sbb
xchg
add
aas
fucom
dec
mov
push
mov
push
test
sti
inc
movsb
mov
out
test
mov
or
pop
loope
loopne
dec
movsb
shlb
push
aas
cltd
imul
adc
xchg
xor
icebp
popf
or
mov
in
xor
stos
test
push
jae
xor
fcomip
mov
dec
adc
lea
sahf
lahf
call
addr16
stos
lods
outsb
add
jmp
fcomp
push
jp
lahf
out
xor
xor
adc
mov
xchg
ljmp
in
adc
clc
jbe
incb
sub
movsl
xchg
dec
popa
icebp
lea
lret
ja
hlt
jmp
ljmp
test
fldenv
pop
addr16
ds
sub
mov
ds
gs
test
hlt
dec
sbb
xchg
add
out
adc
mov
inc
cmp
mov
mov
adc
loopne
or
lods
cmp
mov
in
hlt
push
pop
cmp
ret
mov
cmp
das
shrl
mov
in
or
iret
add
loopne
xchg
clc
testl
fs
push
mov
mov
mov
int
xchg
push
jecxz
out
sbb
and
or
test
fwait
dec
insl
inc
ret
das
push
js
stc
pop
push
jmp
mov
adc
fcmovnbe
or
cs
jnp
sbb
outsl
adcb
adc
jnp
sub
push
das
test
jno
mov
pmaddwd
ficomps
mov
sbb
test
jns
dec
movhps
pop
lret
or
push
mov
pusha
mov
pop
ret
ja
jb
adcb
lock
adc
ret
xchg
lds
out
in
es
mov
loop
paddq
sbb
cmc
aad
cwtl
xlat
xchg
enter
out
rol
pusha
dec
in
aas
xor
inc
mov
in
lahf
cmp
imull
mov
das
xor
ja
or
xchg
pusha
cmc
and
and
jle
cmp
pop
filds
adc
pop
divb
jmp
jg
push
dec
cld
stc
leave
add
cmp
pop
adc
pop
daa
adc
and
inc
ss
jne
fsubs
jmp
inc
dec
add
push
int3
vandnps
mov
scas
stc
lea
and
adc
std
pop
aad
mov
mov
pop
cwtl
stos
insl
lods
xor
cwtl
movb
bound
cmp
das
xrelease
cmp
and
aas
inc
arpl
es
fmul
in
mov
xor
xchg
sbb
test
or
xor
push
push
mov
jae
mov
sbb
dec
jo
popf
mov
xor
leave
sahf
std
shll
or
mov
gs
and
rclb
and
jns
in
mov
jo
jnp
mov
sub
adc
push
ds
or
gs
cmp
adc
lcall
xor
inc
fstpl
ja
cmp
mov
ret
sbb
mov
or
jecxz
sbb
rol
sub
inc
jae
adc
inc
movsbl
dec
ja
rcrb
arpl
xchg
sbb
push
cmc
cmp
outsl
loopne
bound
cs
movb
xchg
and
jne
rcll
push
lret
scas
xlat
cmp
data16
add
sub
mov
ds
mov
sbbb
icebp
imul
incl
inc
lods
sbb
mov
je
mov
out
pop
and
popf
stos
jmp
test
aam
inc
int
mov
xchg
cmp
movsl
cmpsb
test
adc
js
xor
pop
imul
adc
ljmp
lret
iret
jg
test
enter
sub
test
adc
jns
dec
sbb
scas
loop
clc
test
sbb
fwait
imul
cs
or
cli
xor
mov
mov
out
out
xchg
mov
xor
out
jge
stc
sahf
and
ffreep
in
or
sub
call
mov
fisubl
ror
inc
mov
out
das
add
in
cs
mov
mov
ljmp
push
xchg
sbb
int3
stos
mov
and
loopne
lea
mov
adc
aaa
xchg
jo
in
and
mov
addr16
out
mov
icebp
pop
sub
cltd
fwait
pushf
mov
jmp
push
and
sub
rclb
imul
jo
icebp
jle
pop
or
or
mov
and
in
hlt
sub
xchg
jae
int
divl
pop
or
xchg
sub
clc
out
add
ljmp
test
enter
ret
push
lods
lahf
loopne
xor
adc
out
mov
stos
xchg
cltd
andb
fsubs
push
adc
push
xchg
mov
imul
arpl
es
sti
fbld
lods
mov
insb
xor
pop
inc
int3
or
icebp
dec
cs
sbb
rol
mov
xchg
sbbb
push
adc
lock
in
mov
cmp
jmp
into
add
jge
lahf
dec
jns
mov
scas
movsb
jl
xchg
xchg
cld
stc
adc
lock
lods
sbb
jge
add
in
mov
ret
add
mov
lods
ret
mov
adc
fwait
in
scas
jl
push
pop
movsb
fildll
cmpsb
pusha
ret
pop
and
je
aad
in
push
inc
cmp
pop
sub
les
sbb
mov
idivl
outsb
cmp
mov
lahf
sub
mov
mov
jbe
mov
dec
cmc
push
jmp
sub
jne
xchg
test
xchg
ja
repz
push
mov
sub
cmp
in
bound
jb
idivl
loopne
pop
les
ja
and
in
pop
push
push
shr
decb
lret
xor
dec
cmc
lock
in
ja
or
addr16
repz
cmpsb
lods
dec
das
xor
jne
xchg
pop
leave
lcall
pop
pop
and
aad
adc
fs
mov
sbb
mov
and
scas
cmpsl
fists
pop
push
push
lcall
mov
and
lods
out
gs
sub
mov
xchg
jecxz
mov
mov
fistpll
outsb
adc
cmp
xor
mov
rcl
popf
sahf
shlb
and
test
cmp
pushf
rol
mov
adc
mov
scas
cmp
add
adc
fistpll
and
mov
and
or
dec
inc
dec
xor
adc
adcb
daa
out
popl
and
lahf
cltd
test
add
cwtl
ljmp
ret
rcrb
fld
fisttpll
into
dec
cmp
push
pop
test
and
mov
fbstp
sbb
aam
arpl
pop
and
cmc
and
fsubl
out
imul
gs
dec
xor
mov
fdivp
pop
xchg
or
iret
fildll
mov
idivb
mov
xchg
sub
xlat
roll
loop
scas
add
mov
or
lret
adc
shrl
addr16
into
xor
fbld
push
fcoml
test
adc
ds
and
inc
in
pop
cmp
arpl
inc
push
fcoml
push
mov
pop
inc
lret
rolb
dec
and
mov
sahf
nop
in
jp
inc
mov
test
std
and
ret
icebp
xor
adc
mov
stos
xlat
lods
daa
notb
bound
jns
pop
repnz
dec
jno
dec
xor
xchg
fistpl
mov
mov
hlt
mov
dec
mov
outsb
jle
je
popf
lret
sbb
fstl
ret
aaa
fidivrl
fimull
add
jle
xchg
js
cltd
sysenter
cwtl
mov
add
imul
lcall
loope
xchg
andl
mov
loope
call
das
cmpsb
out
movsb
fbld
xor
mov
push
push
push
lea
pop
imul
mov
inc
jo
dec
xor
in
mov
inc
popf
xchg
mov
mov
adcl
pop
jnp
shl
adc
jae
orl
rcrl
or
lods
adc
xchg
movsb
inc
mov
imul
jecxz
mov
jmp
adc
loopne
lahf
stos
xchg
mov
adc
stos
mov
jae
out
add
insb
fdivrl
std
stos
enter
mov
xor
xchg
and
not
mov
in
loop
dec
cmpsl
pop
outsb
rclb
ja
subl
xchg
xchg
lcall
pop
adc
cmpsb
sub
stos
out
incb
dec
fldenv
ja
jns
mov
cmp
jb
rcrl
mov
imul
cwtl
xchg
sti
imul
mov
arpl
pop
pop
xor
enter
mov
ret
int
stos
iret
out
xor
inc
gs
fcomps
dec
xor
jns
sub
mov
sub
push
xchg
outsb
sbb
ret
scas
jge
mov
sbb
xchg
imul
pusha
test
xor
aaa
sbb
pop
xorl
aam
subl
xchg
sub
adc
in
mov
hlt
push
jnp
subl
jg
mov
stos
into
cld
test
repnz
aaa
test
sbb
into
sub
adc
push
push
and
data16
cmc
mov
mov
cwtl
xchg
dec
push
loop
mov
and
outsl
xor
ds
addr16
cmp
fnstsw
call
adc
jo
fld
nop
push
xchg
cs
xchg
lret
imul
cmpsb
cmp
outsl
xchg
test
ret
fdivl
and
mov
add
xchg
xchg
cs
mov
ret
push
jge
sbb
inc
sbbb
add
out
ja
mov
lret
test
jge
sbb
jns
inc
jg
cmp
mov
pusha
out
fadds
adc
push
mov
sbb
and
cmpsb
daa
rcrl
insb
jmp
enter
dec
mov
ljmp
xor
leave
mov
clc
adc
add
shlb
test
fsub
outsl
rorb
cmp
out
push
ret
mov
test
sbb
pop
popf
dec
ret
test
sbb
nop
ret
fmull
adcb
sbb
xchg
adc
pop
je
mov
fldcw
insl
lcall
jno
push
mov
jnp
notb
roll
add
jg
stos
in
in
test
addl
das
lcall
fsubs
pop
dec
cld
sti
aad
dec
adc
or
andl
lahf
xor
mov
pop
mov
filds
addr16
or
fbstp
test
add
jg
push
xchg
std
popa
leave
dec
push
fdivr
in
das
jle
popa
mov
mov
push
test
scas
andb
push
mov
dec
add
push
xor
pop
sarl
icebp
mov
sbb
mov
push
push
sbb
leave
scas
jno
push
test
fsubl
fdivr
aad
daa
stos
cltd
sub
xchg
add
nop
inc
ret
movsl
or
lds
ljmp
mov
adc
and
sub
xor
or
imul
les
lret
ficompl
cmpsb
xor
pop
les
ficompl
adc
sbb
stos
fidivl
xor
shll
cmpsl
jmp
pusha
mov
jnp
push
xor
movsb
and
mov
mov
sbb
jecxz
fwait
add
mov
xchg
mov
sarl
iret
mov
sti
mov
mov
sti
dec
in
mov
and
mov
push
sub
ja
mov
inc
adc
and
icebp
aas
xor
movsb
arpl
rclb
cli
mov
pop
mov
int3
xor
pop
and
jne
shll
test
inc
adc
jmp
add
ss
addr16
dec
mov
imul
xchg
in
jmp
sub
mov
in
movsl
js
je
jmp
out
jmp
pop
push
adc
cmp
pop
lods
push
push
outsb
sub
aam
insb
inc
xchg
sbb
add
cmp
lds
flds
lret
pop
mov
sub
mov
cltd
adc
dec
cmp
lea
cmp
leave
int3
dec
js
daa
pop
cmp
pop
fsubr
push
lret
pop
lret
int3
aad
adc
dec
inc
cltd
and
mov
mov
sub
loopne
cmp
cwtl
cmpb
xchg
lret
clc
xor
in
add
mov
jnp
push
mov
cmp
pushl
mov
les
inc
in
sub
or
add
xchg
mov
lret
sar
mov
push
into
sbb
push
lds
in
cltd
mov
loopne
jmp
xchg
loope
ja
aam
jae
scas
js
mov
xchg
inc
out
inc
pop
mov
mov
ficompl
xchg
pop
jmp
lds
fisubrs
repz
mov
subb
negl
ret
sbb
jp
or
sub
xor
mov
jg
bnd
and
add
mov
mov
sbb
ficoml
iret
dec
iret
addr16
paddusb
js
adc
push
sbb
and
in
dec
adc
jne
dec
lahf
leave
dec
push
jmp
fwait
and
xor
lcall
fiaddl
lcall
and
loop
xchg
adc
jecxz
mov
rcrl
rolb
push
jge
notb
lds
push
popa
jge
xchg
push
mov
push
clc
adc
jle
push
fs
cmp
mov
arpl
sbb
call
sub
adc
fdivr
scas
sahf
mov
sar
mov
sub
les
fstp
lret
loopne
dec
add
out
outsb
mov
xchg
inc
sub
in
push
fldenv
sbb
test
leave
int3
push
cli
mov
dec
adc
test
fs
test
cmp
jg
pop
push
jmp
xor
mov
jo
inc
popf
jbe
or
mov
dec
popa
mov
jnp
mov
lahf
jecxz
leave
pop
pop
mov
loopne
or
cs
xlat
mov
in
add
push
jns
popf
sti
lds
into
daa
mov
aas
sub
jo
mov
out
arpl
ficompl
leave
fwait
daa
aas
sbb
das
lods
inc
popf
cmp
pusha
sub
fildll
outsl
mov
sti
cmpsb
add
stc
pop
mov
add
roll
aam
xchg
or
imul
sbb
repnz
cmp
jnp
imul
fmulp
cltd
lret
push
fmull
mov
and
arpl
dec
or
adc
xchg
dec
pop
ja
out
dec
out
add
scas
add
jo
mov
dec
lea
ljmp
push
xchg
cli
test
mov
lcall
stos
pop
cmp
dec
addb
pop
lds
test
pop
repnz
gs
pop
sbb
lret
pushf
repnz
int
lea
mov
test
push
mov
and
inc
wbinvd
stc
adc
push
fstl
dec
ss
fsubp
lds
jge
gs
and
push
mov
xchg
adc
xchg
pop
movsb
add
std
pop
cltd
lret
pop
ljmp
out
xor
jne
leave
push
sbbb
and
xor
or
xchg
inc
inc
add
jp
shlb
imul
mov
inc
push
movsb
and
cltd
cmp
nop
mov
sbb
cmpl
lods
adc
pop
in
sbbl
mov
sub
in
jae
inc
mov
lret
insb
push
js
mov
dec
jmp
inc
cmpsl
pop
dec
hlt
movsl
jmp
rcll
inc
adc
popf
or
ret
leave
negb
cltd
jle
lret
into
dec
dec
xor
inc
mov
cmpb
loop
add
bound
push
xor
push
push
sti
int
push
inc
cmp
jp
fdivrl
lret
rcrb
lods
cmp
lods
or
fs
sbb
cld
mov
insb
aad
dec
or
outsb
xor
incl
sbb
sbb
aaa
push
push
scas
fstps
jmp
jbe
lods
mov
pop
xchg
std
out
dec
adc
out
les
jns
add
jl
ds
sbb
adc
into
nop
mov
leave
push
jle
mov
mov
xchg
enter
mov
jnp
test
adc
pop
xchg
fwait
xchg
and
xchg
lock
loope
cmp
xchg
mov
mov
aas
into
inc
int
aaa
lds
push
mov
leave
push
add
andl
insb
enter
repnz
sbb
aas
lods
mov
sbb
nop
icebp
pop
pop
xor
push
mov
jno
mov
mov
cwtl
jge
cmp
jp
aam
jns
sub
mov
movsb
sub
fistl
jmp
xor
dec
orl
mov
xchg
lods
pop
shr
popa
nop
and
icebp
adc
xchg
add
xchg
std
xchg
push
sub
push
clc
push
das
xchg
out
push
iret
and
ror
pop
andl
adc
test
lret
mov
loope
das
into
push
in
pop
or
add
addr16
stos
inc
pop
jno
pop
out
and
scas
adc
xchg
enter
aad
mov
in
pop
imul
or
xchg
jo
jg
jbe
lahf
push
xchg
add
xor
mov
out
mov
int
loope
daa
push
iret
mov
xor
sbb
mov
pop
stc
sub
add
mov
pop
add
pop
cmp
sub
jmp
push
in
push
inc
or
adc
jp
fisubrs
sbb
jle
jmp
aaa
or
sub
push
mov
mov
mov
pop
clc
roll
fstps
sbb
xor
xor
add
add
mov
mov
aas
cltd
sub
sti
sbb
pop
orl
sbb
sbb
inc
pop
scas
sbb
lock
fdivrs
popa
add
jp
shlb
mov
and
xor
movsl
repnz
mov
add
fsubr
sahf
jle
mov
inc
sarl
jle
jp
push
addr16
dec
or
pop
push
cmp
sbb
mov
adc
dec
mov
loopne
in
rcl
cmp
pop
mov
push
ljmp
push
jl
push
jp
pop
adc
loopne
adc
rcll
dec
inc
mov
frstor
stc
mov
lcall
lods
mov
fisttpl
mov
std
mov
mov
mov
xorl
mov
push
mov
adc
rcrl
mov
xchg
roll
in
jmp
out
adcl
dec
sbb
imul
push
popf
jo
fsts
push
arpl
repz
mov
lcall
aad
dec
jmp
stc
jmp
fwait
sbb
adc
sti
scas
arpl
andl
sbb
jb
xor
mov
daa
iret
clc
mov
mov
arpl
ss
xchg
push
std
insl
mov
stos
and
xchg
cmc
xchg
movsb
pop
les
loope
cwtl
arpl
js
xchg
cmp
jns
pop
sbb
ja
cmpsl
sarl
bound
xchg
mov
push
cmpsb
test
dec
fnstenv
jnp
push
mov
shr
flds
mov
sub
mov
repnz
ret
cld
je
fistps
sahf
cs
adc
movsb
loop
jb
add
test
ja
cltd
mov
jp
je
push
xchg
outsb
bound
mov
cmp
nop
mov
mov
insb
out
mov
xchg
fsubl
pusha
sub
mov
out
push
cmp
cmp
pop
movsb
add
cmp
rorb
dec
mov
fiaddl
sbb
inc
adc
xchg
nop
movsl
sbb
jge
mov
jle
adc
add
mov
aaa
in
pushf
or
xor
push
jp
shll
ret
xchg
dec
clc
pusha
jmp
movsb
xchg
mov
sub
inc
sbb
rcl
popf
mov
clc
and
int3
pop
roll
sbb
sub
dec
scas
lods
xor
outsb
sub
sbb
dec
movntq
out
call
repz
cmpsb
cmpsb
addr16
or
sti
jbe
jmp
test
fistl
or
pop
out
cmpsb
aad
ss
dec
movsb
dec
jmp
xlat
and
xchg
mov
xchg
mov
aam
movups
or
or
stos
ss
inc
test
shll
jmp
sbbb
std
push
adc
add
int3
cld
dec
mov
jmp
cmpsl
iret
mov
fprem
xchg
and
mov
sarb
jge
jb
sbb
bound
and
ret
out
dec
xor
int3
sub
sub
dec
sbb
cmp
pop
lcall
rep
cld
adc
add
mov
push
sbb
bound
add
xor
scas
call
inc
dec
lret
lock
int
and
ds
insb
nop
sbb
int3
stos
cmpsl
push
pop
pop
inc
fildll
pop
lahf
jmp
and
mov
sbb
push
sub
adc
mov
lods
subb
cmpsb
dec
add
sbb
mov
andl
std
fidivs
repz
leave
lret
int
xchg
sub
scas
adc
scas
outsb
mov
loopne
push
mov
mov
xor
insl
js
adc
les
pop
cld
jne
mov
clc
dec
lods
xchg
inc
sbb
clc
push
leave
ds
fistps
mov
test
notb
xor
pop
jne
pop
adc
out
test
cmp
rcll
sar
ret
ss
movsb
les
and
into
push
push
ret
mov
adc
and
mov
scas
mov
insb
mov
adc
sbb
sub
pop
add
inc
push
add
loopne
loope
xcrypt-ecb
cmpsl
mov
sub
push
push
cwtl
sti
movsb
cmp
arpl
loop
ja
pop
push
sub
cmp
in
call
lods
roll
push
dec
out
lret
pushf
or
ret
push
sub
out
xchg
xchg
jb
idivb
mov
mov
jo
ss
rol
sbb
push
gs
mov
dec
out
repz
jbe
xor
cmp
mov
cltd
jmp
aas
mov
dec
rcrl
xchg
jl
and
pusha
aaa
mov
pop
imul
push
popa
cwtl
subl
ret
mov
jbe
outsl
je
stos
xlat
les
and
das
sti
or
jae
cmp
xchg
fidivl
mov
or
push
jle
xchg
out
push
xor
push
sti
jnp
dec
mov
leave
fsts
js
adc
fwait
xchg
push
mov
fcoms
pop
int3
add
dec
call
call
pop
xor
je
loop
add
jo
xchg
lock
add
push
iret
sbb
jne
pop
fldt
push
dec
mov
push
mov
scas
mov
out
push
daa
sbb
leave
pop
pushf
scas
jbe
mov
mov
and
lcall
push
jb
std
pusha
xchg
cltd
rorl
outsl
xchg
fsub
xchg
or
lcall
aas
outsb
jns
jp
mov
ficomps
jge
push
xchg
fld
inc
inc
cltd
loopne
add
loop
or
mov
push
pusha
test
in
out
sahf
add
mov
leave
stos
xor
mov
leave
mov
jge
jle
iret
adc
fxam
mov
sti
out
call
shrl
dec
mov
xchg
inc
or
mov
jmp
lahf
cmovp
jle
jp
push
les
cltd
int3
xchg
test
sbb
sar
sbb
hlt
clc
xchg
sbb
pop
pop
xor
xor
cmp
in
out
cwtl
es
or
pop
js
das
xor
imul
fnstsw
orl
jle
roll
imul
fs
push
push
fisttps
jecxz
outsb
sbb
inc
pop
in
dec
sub
mov
std
dec
push
pop
mov
aaa
mov
hlt
xchg
xor
jne
aad
in
dec
mov
and
sbb
dec
and
mov
sbb
adc
or
lea
outsb
xchg
int
sbb
rcrb
andb
push
pop
sahf
mov
and
int
mov
xor
jl
sub
mov
push
jno
gs
bnd
xchg
xor
in
arpl
inc
cmp
in
mov
xlat
jne
adcb
mov
cmp
fs
xchg
pop
orb
mov
mov
aas
adc
jb
mov
ljmp
lock
xchg
int
lods
imul
adc
out
daa
test
out
into
sbb
pop
jp
ret
leave
mov
adc
dec
fsubr
add
sbbb
fisubrs
dec
sbbb
mov
add
dec
mov
or
dec
mov
outsl
inc
imul
mov
and
add
add
adc
ficoml
arpl
jmp
ret
jns
dec
dec
pop
and
and
mov
mov
sti
bound
xor
jb
sbb
insl
cmp
or
sub
xchg
xchg
fs
ljmp
jae
xor
fcomps
xchg
lods
sub
jle
shl
pusha
ja
arpl
subb
xor
push
jne
test
dec
mov
sub
popl
pop
lahf
mov
mov
push
pop
push
inc
ds
push
test
loop
repz
xchg
sbb
pop
fwait
cmpsl
movsb
negb
mov
js
into
xchg
xchg
scas
inc
mov
sub
enter
stos
pusha
xchg
ud1
jbe
cmc
mov
inc
mov
dec
jb
and
stc
adcb
ret
jecxz
xor
and
lock
je
fistps
aad
movl
shr
jge
push
pop
sub
fwait
or
or
daa
pop
inc
loop
es
or
cmc
imull
lcall
dec
pusha
negl
push
notl
adc
sbb
xchg
inc
mov
jmp
jno
addr16
sub
aam
fwait
mov
test
push
test
sub
push
int3
negl
pop
inc
test
js
add
fdivrl
add
mov
ja
stos
xlat
and
pop
add
adc
mov
mov
test
dec
fdivs
jmp
xchg
leave
mov
fistps
jno
pop
cld
xchg
mov
sub
cmp
or
sub
mov
or
ror
jne
dec
lock
cmp
add
xor
mov
jbe
push
cmpsl
std
lret
sbb
vmwrite
int3
rcrl
sbb
fwait
pop
mull
test
imul
leave
xchg
mov
push
xchg
sub
push
cmpsb
xor
ss
outsl
sbbl
icebp
and
lods
les
mov
mov
adc
sbb
fs
jns
pop
fnsave
jge
movsb
mov
pop
mov
pushf
pop
push
sbb
add
pop
push
pop
mov
fistps
mov
jns
cmpb
xor
repz
adc
imul
push
lods
add
inc
lcall
out
push
shl
gs
dec
icebp
dec
je
popa
scas
sbbl
sbb
arpl
sbb
pusha
cmp
test
xchg
ja
inc
fwait
mov
bound
xor
movsb
mov
cmp
mov
pop
lahf
lcall
gs
icebp
pop
adc
push
push
stc
sub
pop
or
insl
mov
ss
fnstcw
xor
dec
in
dec
ret
push
mov
cld
push
cs
fldl
or
sbb
shll
insb
mov
std
mov
imul
test
xor
outsl
add
add
js
and
and
into
xor
mov
sti
insl
ljmp
mov
loopne
mov
stc
xchg
shrl
inc
jle
addl
xchg
mov
mov
in
test
andl
or
jg
faddp
jb
pop
inc
in
fsts
out
dec
xchg
xchg
cmp
add
ljmp
adc
or
mov
es
or
jae
cmovge
and
test
out
aad
jno
mov
cmp
or
outsb
or
scas
imul
pop
pop
es
dec
mov
xlat
xor
xchg
add
mov
cmc
mov
aam
cmp
leave
cmp
dec
inc
lock
or
dec
mov
jno
scas
push
jb
insb
loop
sti
int
aam
mov
lds
cmp
data16
adc
int3
lods
std
movsb
lds
rcl
mov
xchg
mov
jns
cmc
cld
sub
movsl
mov
out
push
cmp
inc
out
and
adc
fistps
pop
test
lahf
push
aaa
jmp
or
mov
adc
mov
xor
cmp
insb
cli
mov
ss
inc
adc
shlb
sbb
in
enter
and
inc
xor
sbbb
and
jecxz
jg
xchg
mov
int
aas
orb
les
pop
mov
notl
pop
add
and
out
jmp
lret
add
frstor
hlt
lahf
push
fsubl
xchg
lret
sbb
pushf
jnp
sbb
imul
je
inc
mov
mov
movb
pop
or
ret
jo
dec
insb
cltd
outsb
cmp
scas
ss
sbb
jno
pop
sbb
repnz
mov
lret
jae
pop
inc
mov
push
xchg
imulb
cli
pop
xor
xor
mov
add
loopne
popl
mov
lea
ficomps
je
or
xchg
xchg
lds
mov
stos
xor
lds
sbb
stos
xchg
out
sbb
jl
insl
jge
movl
lret
and
movsl
sub
dec
sub
jno
popa
sub
data16
lret
cli
add
mov
cmp
pop
outsl
pop
std
xchg
push
ret
lss
fsubr
mov
sub
inc
xor
mov
into
lods
or
mov
adc
aaa
pop
and
cmp
lcall
popf
mov
push
loope
jb
out
loope
data16
fdivr
loopne
push
xor
mov
cmp
sub
push
xor
xor
or
mov
push
add
aaa
cltd
and
push
dec
pop
ds
lret
mov
repnz
loope,pt
mov
mov
add
jne
lods
dec
mov
movsl
pop
lret
dec
mov
pop
jle
inc
jns
sbb
scas
out
xchg
adc
xchg
inc
outsb
pop
nop
push
jo
es
xchg
pop
int
insl
and
loop
and
jle
in
xor
loop
mov
je
inc
sbb
stc
mov
subl
aam
stc
jno
and
mov
repz
shll
xor
test
sbb
inc
jns
or
cmpsb
sar
xor
in
loope
adcb
cli
mov
cpuid
or
mov
mov
out
push
pusha
mov
je
push
xor
xchg
or
addl
out
xchg
cli
and
add
mov
xchg
push
les
in
insl
pop
cld
pop
ret
inc
push
mov
inc
sub
add
add
je
push
pushf
leave
mov
add
std
adc
mov
pop
lea
lds
jmp
xor
cs
sub
sub
add
insl
test
popa
cwtl
xchg
bound
cmp
inc
mov
retw
jmp
jne
sbb
cld
je
and
fisttps
das
movsl
xor
push
adc
add
jl
sub
or
fstps
mov
idivl
rorl
push
dec
pop
test
mov
je
and
push
out
add
imul
mov
mov
out
inc
cmp
je
dec
xchg
lret
call
cltd
adc
mov
repnz
imul
jge
sub
test
cmpsb
fimull
jo
or
sub
xor
sbb
bswap
es
cmp
mov
lea
gs
test
mov
dec
fsubrs
pop
fisubs
mov
jle
xlat
xchg
fcom
data16
bswap
ret
arpl
mov
dec
in
pop
push
cs
mov
add
subb
mov
adc
mov
mov
add
std
clc
xor
jg
mov
in
dec
mov
xor
aaa
cmp
sub
std
pop
dec
cmp
adc
sub
mov
aad
ds
sahf
mov
jbe
lock
shlb
dec
dec
ss
adc
mov
lock
cmp
or
nop
in
rolb
adc
movsb
pop
int3
add
mull
inc
adc
insb
into
jnp
lods
push
xchg
adc
lock
sbb
sub
jp
push
inc
dec
add
push
rcl
imul
cltd
mov
xor
dec
inc
jae
fidivs
popa
inc
pop
jmp
jmp
sti
mov
push
sbb
mov
mov
inc
mov
mov
push
repnz
inc
sbb
repnz
std
sbb
jae
sti
cmp
mov
andb
jp
jbe
test
inc
cmpsl
pop
xchg
mov
hlt
fsubrs
xor
ficoms
inc
xchg
scas
jl
mov
mulb
leave
mov
add
mov
push
lcall
jo
push
into
fcoms
icebp
push
mov
aam
dec
sbb
jge
loop
xchg
movsl
dec
xor
pop
movsl
sub
fnstenv
adc
and
jp
jns
cli
xchg
inc
xor
out
cmp
stc
repz
scas
sbbb
inc
push
add
dec
ja
push
test
scas
dec
dec
add
mov
jbe
or
subb
pop
mov
adc
and
hlt
add
or
dec
jns
imul
aad
mov
in
mov
out
push
xor
mov
push
push
xchg
add
outsb
sbb
dec
aam
mov
outsb
dec
xorb
sbb
cmc
push
sbb
jae
xor
push
aad
push
or
sub
fcoml
es
cmp
loop
push
pop
fildll
insl
stos
mov
xchg
imull
mov
mul
out
sbb
roll
aaa
ljmp
out
fsubs
cmovge
cli
inc
insb
cltd
lea
ja
sub
pop
push
popf
push
mov
adc
int
and
ss
and
arpl
lahf
imul
or
stos
test
jb
lret
sbb
add
fildll
mov
popa
pusha
outsl
and
rol
mov
es
sub
xchg
es
mov
loopne
sbb
add
insl
push
mov
test
xor
adc
mov
xchg
test
xchg
cmc
push
push
push
and
inc
xchg
xchg
dec
fcompl
in
jge
adc
jp
shr
dec
ds
sbb
mov
pop
jge
fcoml
inc
jmp
rcr
int3
dec
sub
iret
sub
cmp
nop
sub
loop
in
stos
sub
xor
rolb
cmp
mov
mov
adc
xchg
int
std
xchg
sbb
add
xchg
mov
xchg
push
clc
dec
push
sbb
leave
adc
arpl
nop
jno
lret
jns
cmp
nop
jns
jmp
adc
int3
sub
xor
add
xchg
jb
cmp
add
jo
gs
outsb
lahf
daa
add
pop
cmpl
inc
dec
sub
clc
out
xor
es
jae
push
jp
loopne
fwait
in
jp
shrb
loopne
sub
rorl
lcall
cmp
pop
ficompl
push
xchg
das
pop
mov
repz
inc
xor
push
rcrb
mov
inc
cltd
int
int3
mov
push
push
out
sbb
arpl
cmp
lds
jp
dec
negb
push
jne
cltd
and
adc
inc
xchg
sub
bound
inc
adc
cmpsl
test
rcr
inc
test
data16
add
push
jne
xor
mov
sub
in
mov
pop
mov
dec
sub
mov
add
addr16
fcompl
scas
loopne
fstpt
fisubl
test
flds
shll
pop
sbbb
imul
mov
inc
push
arpl
jb
ret
sbb
out
mov
and
mov
shrb
lods
lods
test
inc
stc
std
push
push
push
pushf
iret
mov
jb
or
iret
ds
cltd
push
jge
dec
pop
pop
lret
pushf
repz
jne
push
adc
dec
xchg
nop
mov
dec
test
test
mov
cli
cld
jge
fidivrs
pop
psrlq
cmp
sahf
clc
mov
lahf
mov
dec
mov
addl
pop
dec
inc
push
sub
or
fwait
repz
adc
push
test
cli
jns
stc
outsb
test
movsl
jg
lock
sub
push
es
iret
mov
add
pop
or
push
dec
cmp
xor
mov
or
sbb
pop
cmp
xlat
leave
lret
faddl
xchg
sbb
add
adc
prefetchnta
fmulp
fcmovne
sbb
add
mov
push
icebp
mov
dec
xchg
les
aaa
cmp
popf
into
jo
inc
inc
gs
jle
cwtl
mov
xor
outsl
sbb
cltd
iret
push
in
dec
out
aaa
mov
cmp
cmp
sahf
jae
jecxz
rcrb
pop
push
adc
mov
scas
test
sub
add
push
xor
sub
mov
inc
test
in
push
push
in
addr16
or
shrl
insl
pop
clc
push
mov
jge
in
cltd
shlb
decl
jge
xor
mov
dec
sub
jne
xor
lret
sbb
mov
or
test
dec
bnd
mov
fsubrs
ja
and
xchg
xchg
sbb
test
pop
aaa
sub
bnd
or
repnz
imul
sahf
lcall
adc
dec
enter
test
cmp
test
data16
xchg
sbb
mov
mov
pop
mov
sbb
cmp
add
test
xor
pushf
cmp
adc
mov
clc
cmp
in
pop
adcl
js
or
inc
cmp
sub
and
mov
aas
add
jno
push
pop
push
aam
inc
pop
mov
dec
mov
adcl
mov
repz
stc
mov
jnp
mov
mov
andl
scas
mov
push
xorb
cmp
out
and
dec
daa
mov
jle
sbb
stos
xchg
int3
ss
popf
cld
dec
push
jbe
insb
les
add
leave
setae
fsts
inc
imul
call
pushw
push
mov
mov
and
aas
jp
imul
pop
lahf
outsb
fcomps
rclb
daa
add
and
out
jge
pop
movb
xchg
addr16
lahf
rolb
jb
mov
or
popf
xchg
arpl
loop
daa
stos
cltd
aas
pushf
push
xor
push
sub
sub
jl
xor
push
stos
mov
repnz
fcoms
decl
jno
push
jmp
mov
popa
push
decl
xlat
push
inc
ljmp
pushf
pop
mov
and
test
sub
sub
cmp
and
mov
xchg
in
dec
xchg
xor
cmpsl
das
jb
mov
xor
in
jo
lods
loopne
icebp
xor
pop
mov
mov
fs
jmp
bnd
cmpsb
popa
shll
sbb
enter
cltd
push
mov
xchg
dec
outsl
neg
iret
or
iret
push
shlb
mov
push
cltd
cmpsl
push
adc
xor
ret
mov
xor
out
mov
out
mov
std
lcall
mov
stc
mov
xchg
movsb
jnp
mov
inc
xchg
nop
lret
enter
int
std
ficomps
push
xor
int
jge,pn
loope
cmp
arpl
mov
int3
stc
adc
adc
push
sbb
in
push
pop
cmpsl
lea
dec
push
repnz
movsl
pushf
sub
fsubrs
addr16
in
push
xor
mov
mov
shll
out
cld
sahf
adc
push
xor
and
cmp
inc
out
xor
pop
mov
sub
lret
call
mov
adc
add
pop
jae
stos
push
gs
sub
push
es
sbb
inc
imul
dec
inc
daa
pop
imul
jb
push
adc
je
rclb
sub
call
mov
pop
ficoms
or
jae
jp
add
pop
lret
pop
ret
sbb
cmc
aaa
loopne
xchg
pop
decb
cmpsl
add
cmp
or
ret
xchg
cmp
sbb
icebp
adc
jle
shrl
push
out
into
mov
dec
ficoms
imul
adc
or
data16
sbb
clc
mov
xchg
aas
lret
movl
in
mov
jne
arpl
xor
sbb
mov
adcl
arpl
dec
mov
fistl
adcb
jg
popa
or
lahf
push
mov
shl
dec
clc
mull
jbe
or
xor
std
mov
cld
cmp
mov
cmp
gs
cli
ss
push
inc
add
shlb
sbb
clc
gs
dec
mov
roll
sbb
mov
ret
popf
ds
mov
xor
push
into
call
cmc
inc
add
sbb
pop
testb
adc
iret
sti
adc
or
xchg
xchg
cmpb
inc
xor
xlat
mov
adc
mov
mov
xor
cmp
scas
and
stos
fisttpll
dec
lea
shr
inc
std
ja
arpl
and
push
andb
sbb
les
cmp
popl
sbb
inc
repz
mov
inc
stos
insb
push
loopne
and
lds
jne
jbe
push
sbb
push
jge
cmp
adc
mov
stos
pusha
mov
jg
cmp
cmovle
lods
test
cltd
dec
fistpl
fsub
jmp
lock
mov
scas
lret
xchg
loopne
pop
add
xchg
ja
out
push
lea
xchg
repnz
mov
aam
cmp
sub
cmp
or
mov
leave
nop
hlt
xchg
test
aaa
repnz
out
clc
jo
dec
inc
mov
loopne
dec
addr16
call
push
sub
add
sbb
inc
jo
sbb
rorb
scas
mov
jl
mov
adc
mov
jp
pop
popa
cs
cmp
jle
and
ret
or
repnz
push
in
mov
out
leave
sub
or
fwait
ljmp
xchg
mov
push
gs
adc
les
mov
daa
or
test
dec
jo
fldenv
jecxz
test
inc
xor
ret
lcall
les
cmpsb
jo
aam
addb
loop
push
xchg
and
mov
test
daa
dec
mov
aam
lcall
ja
out
and
int3
inc
xchg
ljmp
push
jle
dec
mov
insl
sbb
add
pop
clc
decl
mov
rcr
fildll
add
jg
imul
sbb
adc
mov
stos
cmp
movsb
push
scas
cmpsb
xchg
cli
test
test
imul
mov
mov
mov
cmp
sub
sbb
into
in
push
ja
jno
jecxz
imul
xchg
js
xor
mov
cwtl
and
mov
imul
clc
xchg
filds
insl
fiadds
push
jbe
and
adc
js
call
and
sbb
iret
jns
dec
inc
push
ficoml
jne
xor
mov
jmp
insb
inc
into
cwtl
decb
mov
sbb
daa
push
nop
xchg
adc
xchg
in
jmp
in
daa
pop
popf
mov
rcrl
dec
adc
xor
cmc
and
pop
gs
push
add
out
mov
dec
jg
jge
test
fadds
adc
xchg
movb
sbb
ror
and
int
push
shll
pop
sbb
mov
or
or
inc
das
aad
icebp
lret
mov
xchg
push
pop
mov
pop
shrd
inc
ret
xchg
jb
mov
sub
aam
sbbl
repnz
pushf
mov
ja
lahf
dec
pusha
mov
and
xchg
sub
add
mov
push
ret
inc
jae
sub
cmp
hlt
xor
push
out
xchg
push
dec
lock
jg
jae
or
push
rcrl
pop
movsb
scas
das
jne
and
xor
mov
sahf
mov
sub
jecxz
into
in
mov
jns
pop
jmp
push
sub
call
mov
in
mov
adc
outsl
inc
in
mov
and
sub
xchg
xchg
stc
call
iret
or
imul
pop
jg
jmp
iret
push
aaa
lahf
aam
push
jge
sarl
mov
jle
sbb
mov
aad
xor
xor
les
mov
inc
pop
rcrl
sbb
or
xchg
negb
jmp
dec
inc
pusha
rcr
movsl
sahf
mov
push
imul
loope
push
sub
stos
pop
and
scas
adc
mov
mov
pop
inc
out
xchg
pushf
mov
gs
or
sub
mov
sbb
adc
cmp
stos
sti
in
or
fucomp
je
xor
mov
fwait
out
test
inc
scas
jg
std
push
push
outsl
scas
cwtl
sub
pop
lret
gs
pop
dec
in
mov
sub
clc
cwtl
loopne
xor
lret
out
mov
movsl
int
sbb
call
pusha
frstor
stc
add
add
dec
jmp
jecxz
mov
and
aad
rolb
test
int
sahf
nop
cmp
popf
push
pop
psrld
inc
mov
js
fisubl
leave
cs
pop
xchg
push
out
cltd
lret
jb
pop
xchg
pop
loope
jp
push
jae
push
jp
sbb
rol
cmp
xchg
sarl
jp
inc
jle
jns
leave
aas
cmp
sbb
add
nop
mov
in
inc
mov
dec
loopne
fbld
mov
stos
cmc
push
pushf
mov
inc
outsl
or
xchg
mov
scas
inc
int3
and
xor
jbe
mov
leave
into
mov
dec
add
arpl
sub
shlb
enter
and
cmp
add
mov
cmp
das
sub
cmp
mov
cmp
cltd
std
or
loopne
jl
pop
xchg
jbe
jne
adc
aam
fldl
repnz
mov
pop
daa
xor
ds
push
push
jl
nop
aad
xor
inc
adc
ss
mov
mov
fwait
xchg
fwait
inc
pop
and
ss
test
jb
push
decb
inc
sub
ss
cmpl
int
xchg
jmp
dec
xor
pop
leave
lods
enter
jbe
inc
xchg
push
cmpl
xchg
mov
sbb
push
and
jnp
adc
mov
inc
mov
add
fimuls
jnp
sahf
inc
mov
jns
jg
mov
pop
sti
clc
cwtl
xchg
movsb
mov
sub
dec
mov
or
js
or
and
cmp
mov
cltd
jbe
pcmpgtw
xchg
mov
dec
rolb
and
xchg
inc
add
call
les
xchg
inc
es
rep
cmpl
and
je
movsl
pop
pop
add
mov
add
or
sbb
sbb
dec
int
call
insb
aam
sbb
mov
xor
inc
es
fistpl
cmp
sbb
xor
mov
push
aam
inc
xchg
mov
or
call
icebp
xor
jns
rclb
pop
sub
sub
insb
insl
dec
cmp
dec
inc
jb
nop
xor
pop
test
push
out
je
jnp
xor
test
int
dec
jbe
xchg
push
fdiv
sbb
sub
inc
inc
shlb
cltd
data16
pushl
lock
add
pop
sub
or
or
sbb
jle
and
ja
adc
rorb
lods
lret
mov
mov
daa
cmp
add
fiaddl
push
pop
jmp
mov
mov
mov
stc
mov
out
push
pop
jp
pop
jg
push
cli
or
outsl
fmull
js
nop
xchg
jnp
ficoml
call
pushl
nop
ror
outsl
popf
pop
mov
add
outsl
jns,pn
sbb
mov
or
inc
out
or
pop
xlat
lcall
add
ja
push
ret
in
cmp
adc
mov
pusha
xor
pop
mov
ret
xor
sbb
or
lret
leave
test
sub
popf
test
pop
cmp
mov
sbb
leave
fprem
and
loopne
dec
push
cli
pusha
or
lea
fstps
push
pop
cs
pop
mov
jne
pop
inc
mov
sbb
mov
sub
mov
cmp
int
xor
mov
xchg
mov
sbb
ljmp
lods
jb
or
cmc
leave
out
jb
pop
lods
out
lock
sub
dec
les
aas
nop
push
xchg
decl
aaa
idiv
inc
xchg
dec
lods
add
pop
fsubrl
sti
mov
stos
cmp
push
ffreep
pop
mov
inc
sub
inc
sti
mov
add
push
les
imul
pop
jge
mov
jns
addr16
sub
idivb
in
sub
adc
dec
pop
les
sub
in
loop
push
mov
ljmp
sbb
je
testl
pop
ja
repz
imul
mov
jmp
mov
insl
in
mov
mov
mov
mov
test
pop
mov
out
daa
xor
mov
xor
decb
pop
dec
testb
and
cli
lret
fs
ds
sbb
push
jl
pop
out
mov
xchg
pop
dec
or
insl
loopne
xchg
sbb
das
loopne
xchg
mov
cmp
sub
test
popf
xchg
in
mov
loope
mov
lds
sti
imul
xor
add
push
or
mov
mov
and
sti
mov
outsb
out
lcall
adcl
sahf
pop
xor
lahf
inc
test
into
scas
leave
nop
adc
xor
pop
mov
sbb
lcall
fwait
mov
cmp
hlt
rorl
add
and
pop
inc
lcall
fbld
sub
ljmp
push
jmp
insb
cmp
inc
sbb
pop
cwtl
icebp
jp
pop
xor
jbe
mov
les
jp
flds
enter
loopne
push
mov
add
push
jmp
xchg
cmpsl
adc
ljmp
xchg
pop
mov
sub
cmp
jno
imul
movsl
int
jbe
test
fs
call
sbb
adc
dec
inc
jge
mov
jb,pn
in
into
fildll
cltd
pop
adc
test
jge
pop
jge
insb
push
std
cs
mov
loopne
int3
xchg
int
pop
push
jae
data16
ret
loop
jo
cltd
or
jp
je
repnz
sbb
sbb
or
lock
mov
pop
xlat
sub
stos
repz
scas
mov
insb
pop
lret
sarb
cmp
ret
mov
sbb
jmp
shll
cmp
mov
xchg
and
pop
fnstsw
dec
lods
add
jge
jp
adc
jns
mov
idiv
popf
std
sub
pop
mov
mov
or
je
sahf
xchg
pop
scas
pop
cmpsl
loopne
lret
std
sbb
pop
pop
sbbb
and
sub
cmp
pop
and
add
cs
sarl
mov
xchg
pop
test
cmp
icebp
data16
pop
jnp
xor
fldenv
lahf
icebp
aas
es
test
out
or
add
jae
pop
out
dec
mov
out
outsb
aam
out
pushf
pop
test
out
pop
fs
mov
popa
aaa
bound
push
stc
inc
xchg
ss
cli
push
lea
xor
xchg
js
pop
inc
sub
xchg
loopne
lret
std
sub
loope
push
addl
in
xchg
sub
leave
fwait
outsl
stos
xchg
js
sti
mov
or
cld
jnp
les
test
adc
lret
xchg
xor
jb
data16
daa
testl
mov
into
pop
les
nop
push
mov
adc
pop
cmc
leave
xchg
mov
sti
adc
aad
push
xchg
pop
iret
pushf
mov
mov
scas
rcrl
mov
pop
xorb
xchg
mov
jp
out
and
jge
test
icebp
sbb
sahf
and
cmp
and
lods
arpl
test
divb
scas
fildl
hlt
lods
pusha
sbb
lcall
jbe
add
adc
jp
and
inc
aas
push
or
add
in
loope
mov
xchg
arpl
jmp
fwait
add
mov
lods
pop
lret
adc
xchg
cmp
arpl
and
imul
int
xchg
add
mov
mov
or
fldcw
mov
fs
arpl
arpl
out
xor
cltd
sbb
push
mov
push
stos
dec
xchg
inc
add
adc
sbb
fisttps
loope
push
jmp
xchg
out
pop
pop
jmp
add
minps
ret
in
movsb
xchg
out
mov
push
or
int3
inc
das
pand
or
iret
cmpsb
jle
daa
sub
test
mov
add
fidivrl
test
xor
jge
fucom
lock
xorb
add
pop
inc
sbb
push
test
fldenv
mov
adc
mov
neg
xor
and
xchg
fsubl
repnz
je
jbe
jmp
jmp
test
mov
test
mov
sti
rolb
js
adc
mov
lcall
fisttps
pop
cmp
pop
es
test
mov
dec
lretw
aam
pop
sub
pop
lret
mov
and
repz
sub
mov
pushf
xchg
push
or
xorb
clc
mov
push
lds
std
icebp
inc
mov
fcmove
xor
xchg
iret
pop
xchg
outsb
mov
out
outsb
in
add
stos
clc
jnp
dec
sub
mov
test
mov
test
aam
xchg
inc
dec
stc
cmpsl
push
dec
jmp
lods
test
xchg
pusha
sar
lods
arpl
call
insb
call
add
xchg
negl
inc
push
out
sbb
jns
repnz
subl
push
addr16
sbb
les
mov
mov
push
les
mov
movsb
fiadds
jl
ret
dec
mov
gs
out
or
imul
es
outsb
lods
mov
jle
push
shl
loop
cmp
mov
jl
iret
scas
jns
push
sub
scas
inc
mov
adc
std
pop
nop
or
arpl
icebp
add
adcb
lea
add
ljmp
mov
mov
pushf
loope
sub
movsb
loop
mov
cmpsb
lret
pop
fwait
lods
sub
mov
fwait
and
jb
movsl
sub
dec
add
loope
cmp
pushf
lret
enter
add
jecxz
sahf
fsubr
imul
subb
push
xor
and
popa
add
inc
or
lret
inc
iret
sub
mov
ja
and
sbb
imul
sub
hlt
lcall
movsb
subl
and
pop
jnp
pop
inc
inc
frstor
mov
adc
imul
adc
int
adc
jne
icebp
repz
push
add
fneni(8087
or
aas
and
into
iret
jmp
mov
jmp
mov
inc
push
fsubrl
leave
jle
adc
in
sti
pop
mov
test
pushf
popa
push
in
movq
ret
cltd
xchg
fildll
jno
std
or
lcall
fildl
mov
or
cmpsl
ss
and
dec
icebp
mov
sub
arpl
js
es
loop
repnz
cmp
je
call
adc
es
mov
jmp
out
sbb
pop
push
cmp
push
loope
loope
arpl
sbb
popa
imul
movsl
pushf
inc
sub
xor
std
in
pop
out
test
or
dec
movsl
or
stc
xor
movsl
add
lds
gs
xor
pop
and
pop
icebp
sbb
test
mov
jae
sbb
fucomp
push
clc
adc
or
push
out
adc
and
xor
cli
and
out
lahf
pop
jne
xchg
jp
cmc
loop
dec
lds
push
subl
mov
and
inc
rol
cmp
lcall
mov
test
xchg
scas
dec
ss
test
movsl
inc
subb
push
js
movb
jbe
out
inc
lock
jl
cwtl
je
das
std
push
lret
subl
sarl
test
pop
mov
jb
xchg
mull
call
push
das
pop
mov
cs
notb
ret
inc
and
add
test
or
mov
mov
scas
or
cli
sahf
ljmp
lods
mov
jbe
lods
add
ret
mov
je
pop
pop
lods
shrb
push
aas
mov
in
jns
cmpsl
sbb
xor
push
sbb
gs
outsl
nop
xchg
and
or
in
lock
jbe
sti
inc
cmp
fnstcw
js
add
mov
xor
mov
push
dec
xor
adc
daa
shr
repz
mov
adc
pop
out
aam
inc
xor
hlt
or
mov
pop
push
pushf
in
cmp
pop
sub
jnp
int
adc
cltd
jnp
adc
loopne
mov
inc
imul
lcall
inc
pop
insl
xor
cltd
push
divl
mov
xchg
dec
call
xor
dec
add
dec
addb
imul
fadds
gs
xlat
adc
ja
dec
sub
orl
mov
add
sub
imul
fistpll
mov
aaa
jnp
ljmp
xorb
fcoml
in
fld
inc
sub
les
push
shll
jp
popf
pop
shll
sub
adc
inc
and
aad
pop
jp
fisttps
je
xchg
xor
mov
js
jbe
cmp
adc
push
outsl
cs
push
mov
pop
push
gs
sub
dec
jp
pop
xchg
pop
loope
jae
push
mov
inc
adc
xor
sbb
cli
and
xchg
xchg
fstpt
push
test
or
adc
das
in
sub
jmp
push
mov
jae
clc
dec
and
popa
les
mov
push
mov
lret
xchg
cli
mov
jno
loopne
mov
sub
shlb
lea
idiv
rcl
cli
or
dec
es
shll
xchg
xchg
push
in
lret
les
mov
and
pushf
add
lds
sbb
dec
ss
mov
in
stos
pop
outsb
stos
sbb
lahf
cltd
adc
movsl
in
ds
rcrb
mov
jns
insb
testl
jns
and
sahf
cmpl
mov
cmp
inc
daa
sahf
cmp
add
std
std
xor
or
mov
jp
fs
xor
adc
imul
sub
cmp
xchg
mov
mov
imull
add
sbb
push
mov
jmp
xor
sahf
mov
mov
dec
arpl
add
xchg
test
lcall
xchg
mov
pop
iret
add
movsl
pop
jno
push
sahf
shll
shlb
mov
mov
xabort
mov
lods
fdivs
sbb
loopne
gs
push
mov
fstl
jno
inc
sti
adc
mov
fcompl
cltd
sbb
mov
cmpsl
xchg
lcall
cwtl
call
loope
mov
imul
leave
outsl
mov
cmp
inc
jg
mov
add
inc
rolb
cwtl
stos
dec
in
imul
pop
add
data16
jl
hlt
inc
jne
or
inc
scas
jl
xchg
xor
xchg
jnp
xchg
sbbl
inc
dec
jl
sub
xor
ficoms
sub
in
push
jp
push
fs
xchg
leave
push
mov
cmp
out
rorb
data16
scas
cs
dec
adc
mov
shrb
movsb
adc
hlt
mov
xchg
cmp
fsubs
mov
push
lret
pop
pop
dec
test
stos
daa
push
push
cmp
imul
dec
add
jecxz,pn
dec
xor
or
jmp
xor
sub
lret
cltd
and
adc
lahf
mov
sahf
inc
cmpsl
fdivp
xor
iret
es
int
jb
rcrb
nop
adc
dec
xor
das
mov
sbb
pop
insb
jo
sub
scas
mov
aad
jae
push
into
or
mov
inc
movsl
xor
xchg
xor
cld
push
mov
arpl
cltd
inc
fbld
es
and
jecxz
inc
xchg
faddl
outsb
cmp
out
xchg
mov
sub
lods
pop
xchg
pusha
imul
int3
and
int3
mov
and
push
cmp
sbbl
dec
scas
lcall
or
xor
mov
push
push
xchg
fbld
mov
lret
lahf
vmread
adc
repz
movsb
pop
in
dec
adc
pop
hlt
gs
push
movsl
xor
call
out
jge
and
leave
ja
sbb
mov
mov
xor
mov
cmp
push
jp,pn
std
jbe
dec
add
inc
repz
jae
push
aad
loope
pop
push
adc
pop
mov
mov
sub
and
stos
mov
xchg
and
inc
jle
cs
test
int
mov
jg
mov
cmp
xchg
arpl
xor
out
jae
rcr
data16
sarb
repz
sub
jb
in
jecxz
fs
lods
sar
inc
ljmp
lret
call
test
pop
cmpsl
in
mov
or
mov
pop
nop
xor
iret
lcall
xor
mulb
call
pushf
mov
ljmp
in
movnti
pushf
out
mov
add
inc
pop
outsb
es
dec
xchg
inc
cwtl
sub
ja
lods
sbb
jno
int
outsl
xor
cmp
loope
mov
add
call
mov
jbe
test
push
out
jmp
fsts
pushf
and
bound
mov
aaa
xorb
ss
in
xchg
add
sub
sub
or
mov
or
addr16
subb
mov
mov
mov
add
inc
popl
ror
call
pusha
jmp
es
test
push
pop
and
mov
out
add
fs
out
pop
leave
bound
cvtps2pd
and
and
cld
lret
call
in
add
hlt
push
adc
mov
and
scas
dec
push
adc
lcall
xlat
pop
push
mov
jge
sub
pop
sar
sub
cmp
call
and
enter
sbb
stos
inc
bnd
adc
jmp
in
movsl
scas
xor
inc
int3
jns
rcrl
pop
addr16
enter
mul
mov
lahf
lcall
adc
mov
cmp
dec
ret
dec
mov
test
and
push
out
mov
out
xchg
mov
test
mov
pop
rcrl
dec
popf
fcoml
popf
xor
imul
out
fwait
rorl
xchg
xor
pushf
stos
jge
scas
mov
addl
push
mov
mov
mov
loop
rcll
xchg
das
inc
mov
fistl
mov
test
xchg
imul
dec
push
pop
xchg
nop
sub
loope
cld
ss
dec
test
ss
mov
movsb
xchg
push
int
sbb
jbe
mov
lea
pop
cmp
in
sub
pop
inc
jae
lds
or
inc
sub
adc
mov
ja
in
pop
fcomip
sub
fiaddl
sbb
sub
mov
push
loope
adcb
and
or
movsb
pushf
icebp
out
scas
cmc
fsubl
cmpsb
mov
popl
outsb
or
sub
xchg
in
push
mov
aaa
pop
mov
ror
add
aad
mull
aad
sbb
dec
mov
lods
mov
push
or
sahf
push
outsl
pop
arpl
push
dec
call
lea
cmp
fcmovb
pop
inc
out
loop
inc
je
cmp
add
cmpsb
jg
cmp
xchg
sbb
jecxz
nop
mov
or
sbb
pushl
movups
js
cmp
add
imul
push
scas
aas
data16
jg
jge
loopne
fmuls
inc
mov
int3
add
adc
pop
pop
repnz
cmp
push
imul
and
out
rcll
mov
aaa
push
jecxz
lods
push
out
movsl
imul
cmc
or
mov
mov
out
lods
push
adc
int3
out
pop
jmp
push
and
rolb
inc
in
push
adc
dec
and
mov
pop
push
sbb
sbb
rolb
in
mov
pop
daa
mov
cmc
hlt
cld
push
test
jno
stc
xchg
stos
pop
and
icebp
in
mov
inc
subl
pop
mov
lds
sbb
or
jge
push
mov
movsb
sub
shll
xlat
mov
mov
es
dec
outsl
push
inc
mov
fcmove
xchg
adc
push
xlat
push
hlt
cmp
je
fadd
cs
popf
xchg
xchg
fwait
or
fisubrl
movsl
dec
sbb
hlt
ret
and
adcl
popa
jb,pn
rclb
cmpsb
pop
mov
lods
cmp
icebp
push
lret
bound
and
pop
adc
insb
or
jg
sti
test
gs
inc
movl
mov
or
outsb
and
inc
andl
daa
sbb
adc
je
lcall
push
loop
addr16
cwtl
outsb
cmp
mov
ficoml
testb
or
leave
loop
idiv
sti
mov
ret
cvtps2pi
scas
and
mov
xor
mov
and
jb
mov
push
push
stos
in
xchg
pop
jmp
daa
jne
cmpsl
std
idivb
xor
adc
bswap
or
add
sahf
dec
stc
lret
mov
sbb
and
add
shlb
push
inc
lret
lret
jne
lret
scas
stc
sbb
sub
lock
xor
out
inc
in
mov
adc
mov
inc
fnstsw
les
mov
dec
xchg
xor
cmp
cwtl
jg
xor
lret
xchg
dec
cld
lea
ret
jmp
movsl
push
cmpsb
push
sbb
rcll
jl
mov
in
lock
test
in
outsl
sarl
xchg
daa
fneni(8087
inc
adc
jp
shrl
aaa
sbb
pop
add
mov
or
pop
hlt
test
inc
cmpsb
imul
xor
or
movsl
mov
popf
dec
mov
popf
in
dec
nop
mov
push
cmpsb
dec
out
jmp
pusha
adcl
add
mov
sub
and
repnz
and
je
stos
dec
xor
and
cmp
push
mov
out
and
pop
repz
shlb
addr16
xchg
or
mov
les
fwait
sub
cmp
add
ret
mov
sub
aaa
sub
sub
out
and
jno
push
dec
int
xchg
or
cmp
push
icebp
shll
in
sbb
jae
adcl
adc
cmp
shufps
lahf
add
lock
out
mov
lods
insb
or
sub
icebp
mov
pop
stc
pop
je
cs
fcomip
push
jmp
xchg
scas
lods
outsb
jb
scas
outsb
lcall
pop
lret
pop
adc
leave
insb
mov
rcrb
clc
scas
shll
push
lret
adc
jne
gs
xor
cli
sub
in
fistpl
ja
hlt
mov
bound
loopne
outsl
in
mov
bnd
pop
aam
inc
xchg
mov
int3
popa
or
and
mov
add
sub
xor
aas
pop
cwtl
cmp
mov
lods
lahf
mov
xchg
sub
xchg
fwait
xchg
into
mov
mov
add
iret
mov
mov
enter
cmp
sbb
push
sub
push
xor
rcrb
popa
xchg
push
jnp
test
or
xchg
add
mov
adc
cwtl
cmp
xor
cltd
adc
jae
cmp
fisubl
test
add
in
loop
fdivp
das
scas
jno
mov
arpl
sub
jge
xor
gs
dec
sti
mov
test
cs
rorb
xchg
cli
popf
add
mov
lds
and
rclb
dec
cmp
imulb
jg
push
fimuls
test
jne
test
fimull
cmp
loopne
sbb
out
les
inc
or
out
test
aas
rcl
les
push
add
sub
jg
pop
pop
push
cvtps2pd
sub
xchg
xor
mov
cld
xchg
adc
js
add
in
mov
imul
sbb
fidivl
cmp
xchg
inc
xchg
dec
xor
xchg
clc
dec
adc
shr
test
scas
xlat
mov
stos
outsb
sub
pop
addb
pushf
jne
push
fxch
in
loopne
out
loope
sub
inc
inc
mov
iret
push
out
into
xor
js
ds
test
dec
shll
fldt
dec
xchg
sbb
dec
dec
mov
mov
shll
in
mov
cld
xchg
sti
aad
lods
stc
es
sub
xor
imul
pushf
rorb
sbb
js
add
addl
dec
stos
daa
pop
xchg
lea
push
and
pop
ds
and
mov
push
push
mov
in
pop
test
fnstsw
scas
xor
sub
daa
inc
insl
mov
ljmp
aas
dec
fs
xchg
and
mov
movsl
mov
insb
sub
jae
in
push
mov
aas
lret
lret
cmp
jmp
addr16
jle
enter
add
out
xorl
xchg
scas
xchg
mov
gs
or
jae
js
pusha
adc
adc
clc
out
and
rclb
ljmp
out
xor
std
push
inc
xchg
sti
mov
fsubl
add
mov
pop
rcrl
lret
mov
movl
and
xor
xchg
xor
mov
xor
pop
and
and
into
xorl
andb
out
sahf
ret
in
sbb
jl
stos
dec
pop
xor
dec
lods
sti
dec
jno
fdivr
xor
and
xor
pop
inc
cmpsb
call
or
dec
xchg
movsb
xchg
cmp
jno
jecxz
loope
in
js
vhsubpd
cwtl
lods
xchg
push
aas
pushf
pop
push
mov
cmp
into
jnp
lea
inc
push
lock
iret
cmc
pop
and
lods
add
scas
sahf
sub
xor
mov
adc
mov
out
xor
sahf
adc
cmpsl
xlat
data16
bound
jmp
mov
push
mov
pop
scas
sub
pop
add
shll
sub
arpl
stc
inc
test
mov
std
pop
hlt
mov
je
mov
stos
fdivl
mov
pusha
out
jg
mov
sub
std
dec
or
movl
rorb
movsl
fs
jg
and
es
mov
or
mov
movsb
pop
outsl
sbb
dec
imul
mov
pusha
or
sti
sub
cwtl
dec
jle
fnstsw
xchg
xor
sarb
pushf
out
ss
clc
jns
push
mov
pusha
stc
arpl
cmp
xchg
rclb
in
mov
inc
mov
push
mov
inc
xor
push
ss
jb
insb
js
pop
mov
nop
add
mov
mov
lcall
lahf
mov
cmp
mov
popf
cmpsl
test
das
gs
adc
mov
outsb
fnsave
gs
neg
sti
outsl
lahf
testb
adc
adc
scas
and
repz
cld
sub
jmp
js
filds
jl
cltd
outsl
jns
lods
lods
inc
pop
fistl
lcall
add
popf
ds
mov
jbe
adc
sbbb
loope
arpl
push
jg
mov
mov
das
xor
adc
fildl
movsl
rol
iret
jp
fabs
shrb
addr16
cmp
lret
cmpsb
decl
cmp
cmp
sub
jbe
jg
or
inc
std
pop
mov
pushf
push
cld
fdiv
lcall
xchg
or
cmpsl
sbb
sub
in
sbb
jg
pop
jg
js
cmpsl
stos
add
or
pusha
mov
dec
call
lret
fbstp
sbb
les
dec
js
fidivrl
sti
out
cli
push
pop
inc
lret
icebp
jge
jg
mov
rolb
xchg
jecxz
lret
inc
fnstenv
bound
clc
jg
insb
mov
jae
cwtl
clc
jns
lea
fadd
scas
aas
or
shlb
lods
pop
insb
mov
pusha
jecxz
out
mov
adcl
lods
sti
mov
in
cli
jne
adc
mov
xchg
das
rolb
cmpsb
pop
inc
nop
es
aam
inc
mov
mov
adc
adc
test
push
and
sub
xorl
add
fidivrl
pop
cli
jns
jne
sbb
sbb
movsb
jno
repz
aam
dec
mov
pop
mov
loop
jge
loope
call
xor
rcr
iret
adc
jnp
mov
outsb
cmp
fdivs
stc
call
test
push
rcrb
mov
rclb
add
inc
call
sub
mov
xchg
mov
enter
iret
psrld
sbb
loopne
mov
daa
add
push
pop
sub
data16
aam
pop
cs
xor
jmp
sbb
ds
sbb
add
rclb
loop
jne
clc
cmpsb
outsb
ret
les
jae
mov
sbb
mov
xchg
fs
adc
stc
mov
pop
cmp
sub
aas
mov
mov
jno
push
xchg
and
inc
sti
jle
xchg
mov
or
andb
or
insl
clc
mov
pop
inc
out
fucomip
or
cmp
aas
pop
jmp
sub
arpl
adc
cld
cmpb
inc
xchg
xor
fsub
jne
xchg
pop
pop
ret
xor
sbb
int3
mov
dec
xlat
loopne
test
das
sub
cli
mov
pop
pop
inc
inc
push
les
aas
xchg
or
cmp
lahf
lods
push
push
lea
mov
xchg
je
pop
repz
clc
mov
into
fmuls
pop
in
dec
test
jmp
sbb
fsubl
icebp
xchg
mov
pusha
bound
fbstp
int3
and
test
pop
xchg
ret
cmp
rorb
dec
jns
ret
mov
ljmp
dec
jns
xchg
mov
aas
outsb
call
int
xchg
adc
cvtps2pd
jl
mov
mov
mov
mov
mov
mov
pop
lahf
xchg
xchg
inc
pop
cs
loop
pop
mov
inc
iret
icebp
aas
adc
test
stos
cltd
mov
dec
jae
loop
and
sti
scas
adc
xchg
push
cmp
xor
jbe
dec
cli
dec
cli
cmp
test
rorb
sub
imul
das
jns
jnp
rolb
and
mov
shl
push
ds
popa
jne
pushf
fcoms
xchg
add
mov
cmp
shlb
inc
jb
fidivrl
repnz
cmpsl
lds
pop
fsubr
rclb
adc
mov
cli
xchg
mov
or
aad
and
mov
jecxz
push
cld
stc
mov
xor
es
add
arpl
pop
in
data16
mov
mov
xor
and
cmpsl
movsl
outsb
int3
mov
dec
or
daa
adc
pop
xlat
jno
jno
int
gs
mov
and
cwtl
movsl
arpl
ljmp
adc
ret
aad
cmpsl
push
inc
push
ret
pop
fcomps
gs
aas
shrl
cmp
call
push
push
enter
and
cmp
mov
cltd
push
in
jecxz
cmp
xor
dec
imul
ret
sti
pop
xchg
xlat
jbe
cmpsb
bound
push
mov
xchg
inc
adc
jge
jno
or
inc
mov
add
cmc
xchg
add
test
xchg
insl
das
jns
lret
xchg
mov
in
xor
mov
jmp
sub
mov
cmp
rcr
mov
insl
addl
and
outsb
jmp
sahf
vpsubsb
cmp
inc
adc
sub
fwait
fs
cmp
into
addl
mov
mov
insl
pop
and
pop
lods
pop
ret
mov
ret
cmp
mov
into
lds
scas
mov
inc
and
scas
stos
mov
inc
xor
inc
aas
push
iret
push
push
sub
andb
pusha
in
pop
mov
imul
adc
pop
mov
out
inc
mov
movb
into
out
push
mul
and
pop
scas
and
ds
jae
pop
and
pop
xchg
mov
loopne
push
xor
mov
xchg
or
mov
test
fcomp
mov
repnz
insb
jecxz
shrb
push
inc
movsb
pop
out
push
jnp
sti
dec
mov
add
clc
jge
lret
push
xlat
push
lcall
mov
mov
fwait
cli
mov
les
jle
inc
ficompl
cmp
pop
jns
clc
pop
fidivs
arpl
cld
push
mov
xor
mov
jecxz
sbb
inc
jno
call
lret
outsb
adc
insl
cmpsl
or
sar
into
xchg
nop
pop
sub
int3
scas
or
out
or
idivb
xchg
pop
js
mov
scas
ret
pop
sbb
cmp
push
pop
fwait
jns
lea
cld
xor
test
mov
cmp
scas
js
mov
enter
inc
or
mov
lock
fistl
adc
cmp
div
ret
add
dec
jb
mov
pop
adc
sbb
mov
mov
fdivl
xchg
push
mov
mov
or
dec
or
daa
cmp
inc
cwtl
iret
add
lock
pop
inc
insb
sub
adc
mov
inc
es
fimuls
sub
jne
jae
les
hlt
mov
pusha
mov
inc
nop
lret
imul
test
call
xor
addr16
fcomps
ljmp
fucomip
sti
aad
scas
jp
push
cwtl
mov
mov
push
out
adc
cltd
or
cmp
push
loope
xchg
inc
fnstsw
scas
popf
fwait
jo
push
ljmp
mov
and
xor
xchg
cmp
or
ds
imul
pop
sbbb
push
fistl
jmp
into
fisubl
shrl
inc
or
and
inc
xor
call
adc
insb
sub
imul
cmp
mov
clc
pop
push
ret
sub
nop
and
into
inc
jge
sub
add
cld
push
loope
push
shrl
cwtl
mov
mov
add
pop
push
mov
clc
xor
mov
sub
imul
add
cmpb
test
dec
and
mov
mov
cli
xor
lock
in
mov
inc
sub
repz
cmp
mov
sub
jle
mov
nop
inc
pop
dec
stos
xchg
adc
fimuls
or
sbb
push
jns
aad
mov
mov
leave
stos
cmp
inc
push
movsl
popf
inc
jne
out
mov
movsb
cmp
fucom
push
mov
popf
pop
cmpsl
insb
xor
mov
add
scas
stos
insb
and
addr16
hlt
xchg
loope
out
xor
out
add
sbb
jb
jbe
adc
pop
mov
push
inc
lret
mov
mov
xchg
enter
fisubrs
rcll
mov
mov
mov
mov
dec
decb
jl
add
and
push
jno
push
pop
ss
jno
inc
repnz
das
mov
pop
jb
imul
adc
jbe
test
mov
add
mov
loope
movsl
aad
fdivl
push
into
sbb
push
inc
shll
out
ja
push
mov
loop
xor
or
and
mov
sbb
push
imul
ss
xor
int3
push
mov
inc
call
pop
sbb
fwait
inc
dec
aad
fsubp
jne
fstpl
mov
jle
xchg
or
ror
shrl
xor
fstps
imul
or
jl
sbbl
mov
push
pop
pop
pop
mov
aam
dec
ret
out
add
int
sbb
mov
jne
imul
mov
mov
scas
out
outsb
faddl
adc
cmp
mov
ret
add
ss
dec
cwtl
inc
sub
mov
shrb
addr16
lret
stos
xchg
mov
pop
mov
test
lcall
ret
or
xor
xchg
mov
popf
dec
xlat
push
add
jl
dec
shlb
mov
ret
mov
in
and
je
mov
test
je
pop
sub
pop
ja
movsb
adc
and
subb
mov
add
loop
sbb
mov
push
pop
jge
cmpsl
add
cmp
aas
sub
sub
test
cld
mov
popf
jbe
inc
push
cwtl
mov
jbe
nop
sub
popa
movsl
push
jecxz
push
mov
cmp
dec
jecxz
mov
push
cmp
int3
sbb
mov
fisubs
sub
in
jge
add
rorl
divb
es
sahf
sbb
mov
out
idiv
stos
mov
xchg
ljmp
aam
push
call
in
inc
push
jo
shrb
lcall
inc
jge
and
stos
js
std
pop
das
pop
mov
inc
jecxz
je
mov
xchg
sbb
dec
pusha
leave
pop
adc
leave
stos
xchg
sbb
jmp
int
push
xorps
add
or
lock
xlat
push
adc
dec
test
out
int
push
and
xor
adc
faddl
add
scas
out
in
shrl
inc
stc
adc
sub
lret
pop
daa
faddp
test
sbb
stos
mov
cmp
cmp
push
out
pop
pop
jecxz
adc
jmp
ret
int
fcmovne
jne
out
adc
hlt
push
iret
mov
push
fucom
or
add
ja
sbb
jb
jne
mov
xchg
out
mov
mov
dec
call
push
out
inc
push
pop
push
dec
repnz
or
ret
push
pop
data16
push
arpl
xor
xor
pop
and
adc
leave
scas
daa
sbb
cmpsb
push
mov
or
call
mov
js
out
jmp
mov
test
cltd
out
xor
mov
or
pop
es
xchg
cwtl
js
mov
lds
test
pushf
and
aas
mov
in
mov
cmp
outsl
int
and
sub
xor
add
lea
jb
add
inc
bt
scas
inc
aaa
rclb
or
add
pop
adcl
popa
test
cltd
add
sub
dec
inc
push
mov
cmc
xor
aad
test
and
rolb
inc
mov
add
mov
hlt
cmc
es
adc
nop
ficompl
push
mov
sub
jb
jns
lret
add
hlt
jns
clc
xchg
fsave
push
mov
test
cmp
mov
bound
fwait
inc
sbb
bound
cmp
clc
sub
mov
xchg
adc
push
adc
iret
pop
sbb
inc
and
enter
push
stos
hlt
cwtl
mul
test
lods
cs
jge
scas
pusha
cmp
in
sub
inc
or
mov
lret
dec
aam
push
sbb
aas
add
std
mov
lahf
fwait
mov
dec
loopnew
call
jae
and
repz
cmovp
dec
sbb
outsl
gs
jle
mov
hlt
ja
adc
mov
sub
sbb
lret
adc
out
lods
pop
xchg
clc
xorl
lods
ror
xchg
inc
mov
gs
push
mov
call
jae
shl
test
movsb
add
mov
mov
mov
mov
push
mov
or
cmp
push
popa
stos
mov
in
dec
and
test
cmp
cmp
test
insb
xor
iret
jp
mov
mov
jne
test
scas
outsl
jns
jl
imul
pop
push
outsb
in
cld
imul
cmp
jb
inc
sub
ss
jle
test
fdivs
push
sub
inc
rclb
mov
shl
andl
pushf
or
sub
dec
push
fadds
fsubs
aaa
rcr
xchg
mov
loop
addl
dec
jne
and
xchg
sbb
mov
pop
adc
ss
mul
ret
pop
fcomps
lret
mov
add
out
mov
jbe
mov
or
scas
xchg
add
push
aad
movsl
and
in
push
xor
lcall
jo
inc
sub
jno
outsb
das
mov
jo
stc
repnz
jno
push
loop
das
cwtl
mov
push
sub
mov
push
push
mov
pop
test
daa
call
out
shlb
mov
xchg
pop
out
xchg
test
out
dec
xor
and
xor
jb
aam
lock
cmc
test
jge
movsb
pusha
xor
enter
sahf
xor
outsl
mov
push
leave
push
inc
sub
mov
xor
sub
or
out
mov
xchg
mov
jge
mov
lock
inc
sbb
add
stos
arpl
lret
or
test
jbe
push
nop
adc
movsl
jae
mov
lret
fs
adc
imull
rcrb
imul
imul
insb
das
xchg
push
sbb
push
adc
adc
xchg
pushl
dec
lahf
insl
cli
lret
add
mov
leave
xchg
pop
mov
rcl
test
adc
jmp
mov
push
pause
inc
xchg
mov
sub
loope
adc
mov
ffree
sbb
xor
xlat
dec
push
sar
push
or
or
iret
xlat
loopne
test
inc
pop
cs
leave
mov
ja
mov
enter
mov
jge
adc
outsb
push
sarb
test
jne
dec
into
push
insl
cmp
pushf
sbb
xor
mov
imul
jmp
cmp
ljmp
push
dec
pop
lret
adc
test
sbb
inc
lahf
jmp
sub
scas
cli
in
lahf
std
imul
enter
jg
pop
dec
xchg
ficomps
sub
pop
inc
bound
add
loop
push
loopne
dec
xor
mov
sub
fldl
or
jno
jecxz
daa
hlt
test
sub
mov
in
mov
fwait
pop
dec
cmp
add
dec
sub
push
icebp
sub
push
loop
popa
hlt
pop
in
das
adc
jno
adc
xor
call
into
sub
ror
cli
cltd
hlt
icebp
pop
xlat
pushf
outsb
jge
xor
push
das
cwtl
xchg
inc
push
or
push
sub
mov
das
pop
push
xlat
jmp
add
mov
fdivl
adc
imul
pushf
cmp
test
out
aas
out
in
xchg
mov
or
dec
lcall
movb
incb
loop
push
inc
lds
cld
lahf
loopne
pusha
int3
mov
xlat
sbb
mov
dec
sbb
dec
and
and
sbb
sub
test
or
mov
and
mov
jae
push
fwait
repnz
hlt
rclb
dec
inc
xor
into
add
and
jbe
in
test
push
pop
pusha
cli
xchg
out
mov
iret
xchg
sbb
jbe
adc
cpuid
mov
jo
ret
lret
sub
xchg
rorb
ret
icebp
adc
pop
pop
jl
cmpsb
out
aaa
push
lcall
xchg
mov
xchg
cld
and
add
mov
repnz
push
mov
aad
in
test
mov
cmp
test
fistps
iret
mov
fbld
adc
sti
push
andb
add
aaa
and
push
xor
aad
sub
pop
inc
sahf
push
and
inc
mov
push
pop
fldenv
sahf
fldt
in
and
jl
mov
mov
test
xchg
xor
xor
incb
pop
bound
jno
jno
xor
cmp
or
or
inc
pushf
or
add
stos
add
lods
jb
sub
cmc
pushf
addb
ficompl
sbb
mov
fiaddl
and
or
sub
push
fsts
xor
xor
cltd
ljmp
pop
stos
imul
jae
aaa
mov
or
jb
mov
jp
xlat
ficoml
test
pop
push
mov
cld
sub
jns
dec
cmpsb
cmpsl
outsb
add
mov
pop
daa
fisubrl
icebp
lds
inc
dec
ret
cmc
xchg
stos
pop
xchg
mov
aad
and
out
sbb
or
outsl
test
push
or
dec
add
or
or
or
mov
cltd
or
mov
fsub
scas
jno
jp
test
pop
popa
xor
inc
mov
les
mov
inc
xchg
dec
mov
jns
addr16
pop
cs
push
ja
loopne
loopne
lret
rclb
xchg
loop
sbb
adc
ja
or
pop
sahf
pop
imul
xchg
imul
addr16
xor
pop
notb
ds
dec
es
in
clc
dec
fisttps
push
test
shl
jg
mov
sbb
sbb
stc
mov
push
cli
addb
popa
push
addb
int3
into
or
push
jge
dec
aas
ljmp
out
stos
call
mov
xor
ja
or
mov
sbb
scas
movsl
mov
pusha
jns
mov
xchg
push
mov
mov
mov
pop
loope
jne
sti
push
dec
add
fildl
cmp
insb
push
sub
xchg
add
lock
jns
xchg
xlat
or
adc
lock
mov
cmp
or
add
adc
fdivl
cli
adc
and
push
mov
sub
je
imull
add
cmp
iret
repnz
sbb
call
jecxz
dec
inc
ffreep
imul
mov
imul
xchg
test
scas
jmp
repz
aaa
add
pushf
fldt
mov
mov
aas
cli
mov
sbb
ljmp
jp
outsl
mov
inc
in
orl
arpl
mov
or
inc
cmc
sub
xchg
push
getsec
insl
lods
rcrl
cmp
or
inc
aaa
xor
adc
mov
sub
loop
jp
push
xchg
or
inc
cmpsl
add
push
and
pop
mov
lods
je
sub
sub
test
sbb
add
mov
add
cmp
es
int
rcrl
lahf
cld
mov
daa
scas
xchg
xchg
movl
sti
repz
cs
and
push
pop
push
pop
pushf
les
cli
int3
sub
mov
pop
mov
or
jne
adc
mov
subl
sub
iret
add
sub
iret
int
sub
push
sub
add
sub
sub
in
mov
fimull
fisubs
cmp
daa
jo
inc
mov
mov
int3
jmp
jne
loope
fildll
add
ds
aas
xor
and
and
test
or
push
xchg
jnp
inc
enter
pop
jno
lods
jmp
adc
lahf
cmp
imul
jp
daa
mov
imul
or
cmpl
jb
mov
xor
dec
sbb
int3
add
xchg
in
sub
call
test
dec
mov
mov
scas
mov
xor
addb
adc
jnp
imul
push
mov
icebp
dec
push
imul
loop
inc
xchg
and
pop
loope
in
push
icebp
pop
sub
or
ljmp
xchg
xchg
xor
fwait
sbb
and
ficoms
test
push
push
add
popf
jns
pop
mov
jmp
cmovns
adc
sti
jge
mov
jmp
mov
fisttpl
sbb
and
into
sahf
xor
aas
xchg
mov
jp
sbb
and
cmp
and
cli
addl
bound
mov
add
outsb
xchg
jge
push
sbb
pop
lock
movsb
xchg
mov
ja
cmpsb
mov
cltd
mov
daa
icebp
mov
jbe
sub
and
or
int
cmp
mov
jp
mov
and
mov
frstor
mov
jg
jno
and
std
inc
cmp
lods
ret
in
mov
stos
fisttps
pop
sub
sahf
cmp
or
insb
jno
popf
jnp
and
mov
push
ljmp
xor
dec
addr16
scas
call
add
lea
imul
ja
aas
js
pop
mov
sub
out
mov
gs
mov
mov
pushf
sbb
std
mov
adc
jle
shrb
outsl
add
sub
mov
mov
in
sub
jno
cmp
inc
out
mov
ljmp
sahf
leave
mov
add
adc
lcall
push
push
fdivl
or
arpl
ds
subb
push
int3
inc
adc
mov
pushf
add
popf
jecxz
or
push
int
insb
ja
or
adc
popa
mov
addl
out
sub
stos
out
js
in
addb
sub
clc
rorb
or
sub
or
push
sub
test
out
into
pop
shr
xor
sarb
pop
jne
sbb
fcmovu
or
inc
mov
pusha
pop
jne
div
jp
mov
jmp
xchg
push
xor
test
test
push
shrl
push
jmp
xor
pop
dec
lret
lret
cmp
aas
pop
das
movsl
or
divb
pop
stc
push
dec
dec
shl
and
int3
jbe
adc
imul
into
das
inc
dec
or
test
adc
repnz
out
sbb
adc
dec
scas
mov
out
fstpt
stos
add
xor
mov
and
imul
xchg
pop
add
pop
fistl
and
mov
les
in
inc
adc
cmp
mov
xor
stc
outsb
add
inc
mov
lcall
std
add
fisubl
jge
pop
ficoms
int3
jnp
pop
push
dec
mov
jb
pop
pop
mov
imul
test
fucom
jb
out
ds
jo
loopne
xchg
add
andb
aas
inc
xchg
lcall
push
mov
sub
scas
sub
jmp
sti
jge
lods
xor
loop
inc
xchg
jmp
loopne
in
cmp
mov
ds
lret
sub
repnz
loopne
mov
add
test
fs
add
out
xor
outsb
dec
push
clc
dec
popa
jne
outsl
mov
pop
mov
mov
sub
lcall
lret
loop
mov
clc
movsl
inc
lret
fisttps
cmp
xchg
cmpsb
mov
leave
xchg
mov
pmaddwd
mov
jge
outsl
loop
sahf
xchg
cmp
cltd
ss
mov
loope
xor
sub
ss
cwtl
cld
or
push
sbb
cmc
dec
movsl
mov
lods
xchg
outsb
repz
mov
out
or
sub
push
sbb
and
aam
xor
inc
cmp
gs
lret
stc
push
jle
ret
mov
loop
pop
push
push
adc
mov
fwait
add
inc
mov
shl
popf
xchg
dec
xor
lcallw
pmullw
lods
fmuls
sub
cmp
mov
test
sub
mov
and
test
pop
add
mov
scas
fldt
cltd
hlt
mov
es
dec
vcmptruesd
mov
or
popa
rorb
xchg
add
cli
jecxz
mov
scas
out
jmp
iret
and
repnz
gs
xchg
and
or
aaa
xlat
mov
imul
cmpsl
shlb
xor
popf
or
adc
pusha
mov
das
mov
test
lcall
xor
lret
cmpsb
insb
cmp
adc
andb
dec
iret
insb
dec
sub
pop
sub
mov
or
fsubrs
xlat
push
insl
leave
mov
jge
test
xchg
dec
xchg
out
add
mov
inc
fld
xchg
addr16
decl
xchg
dec
pop
adcb
dec
add
mov
and
into
pusha
or
and
mov
loopne
jp
inc
xchg
pushf
push
pop
xchg
cmp
sahf
pop
loop
add
in
push
ret
ss
imul
es
jb
in
xlat
mov
xchg
in
rcr
into
push
ss
loopne
inc
and
into
jbe
pop
testl
pop
and
mov
or
xlat
jae
les
lahf
fimull
in
dec
repz
mov
pop
lahf
lahf
fstpl
jo
sub
pminsw
in
sbb
out
lea
push
push
pop
nop
fsubp
inc
punpckldq
ss
mov
dec
pop
push
aaa
add
mov
jnp
xchg
mov
add
xchg
mov
push
loope
jo
cmp
mov
push
ds
loope
negb
stos
fcoml
repnz
dec
fidivs
fdivrp
movsl
ja
jne
or
cmpsl
xorb
in
popf
gs
sahf
mov
add
scas
outsb
stc
xchg
popa
repz
outsl
xor
arpl
mov
bound
js
add
pop
aaa
and
into
ror
add
jmp
xchg
cltd
jb
xor
jo
ja
mov
dec
ja
lea
mov
xor
outsl
sbb
cmp
test
movsl
sbb
pop
clc
xchg
in
mov
or
in
mov
xor
push
fimull
hlt
mov
dec
test
cmpsl
push
rcr
cli
pop
adc
xor
pop
push
loopne
stc
jo
pop
mov
loopne
repz
and
inc
ds
test
xor
pop
imul
xchg
scas
fcoml
inc
pop
inc
ficoml
repnz
push
add
mov
inc
xchg
jbe
shlb
xor
in
lods
xor
pop
cwtl
push
dec
xchg
arpl
or
xor
rcrb
fsubl
lret
in
push
jp
addr16
mov
sub
out
in
imul
lret
adc
push
push
mov
jns
insl
xor
lret
mov
loopne
cmp
aad
pop
in
xlat
cli
jbe
sbbl
and
xor
imul
idivl
aam
stos
rorl
lea
push
cmp
sbb
in
ffree
mov
test
pop
fisttpll
dec
sbb
push
pop
push
xor
fstl
add
add
xor
lods
test
pop
inc
out
in
cmpsb
sub
cltd
or
lock
mov
cli
dec
lods
or
cmpsb
add
add
cli
imul
imul
in
imul
leave
mov
jne
ss
mov
in
pop
push
das
aas
dec
inc
push
repz
push
or
fstpl
sub
dec
mov
mov
popf
sub
pusha
xor
shll
adc
xor
stos
popf
ljmp
cmp
push
mov
out
fsubrl
and
sahf
repz
xor
xchg
es
and
sub
sbb
adc
clc
addl
call
repz
sub
std
cmp
sub
adc
fidivrs
outsl
mov
adc
sbb
inc
mov
fs
jecxz
subb
fidivs
dec
add
aad
xor
pop
jae
mov
mov
fimuls
and
sti
sahf
mov
or
dec
adc
ret
xor
mov
mov
inc
jle
xor
dec
adc
aas
cmp
aam
mov
push
xchg
and
or
lea
fprem1
xchg
gs
js
add
fcomi
jbe
int
lret
shll
xchg
fbstp
pop
fiadds
jo
insb
insb
sbb
xor
loop
push
ds
lods
mov
lods
aad
ja
or
mov
pop
ret
lret
loope
push
sub
jbe
cmp
pop
mov
xor
xor
jbe
sbb
movsb
hlt
idivb
mov
xor
out
es
out
popa
icebp
mov
pop
test
in
xchg
mov
sbb
lret
inc
lret
popa
testb
fidivrs
fmuls
lock
orl
and
jae
jg
roll
sub
adc
xchg
lcall
push
shlb
inc
xor
pop
or
xor
imul
sbb
mov
ret
enter
or
enter
adcl
adc
test
mov
push
mov
mov
out
inc
mov
jne
xchg
fcomi
pop
cmp
xlat
xlat
and
mov
mov
jb
xchg
js
mov
sarl
or
ds
gs
pop
mov
mov
mov
aas
hlt
push
out
and
add
iret
pushf
mov
inc
sahf
pop
mov
push
jmp
push
jbe
icebp
fwait
dec
adc
xchg
adc
out
aas
adc
shr
ja
popa
sbb
lods
inc
pusha
mull
or
shlb
insb
ret
mov
xchg
mov
popf
int
sub
ja
jle
insb
xchg
mov
rclb
pop
add
lret
and
nop
lahf
and
ficompl
adc
les
mov
inc
sub
lock
aaa
cmp
je
or
and
or
cwtl
adcb
xchg
push
pop
inc
enter
imul
cld
or
movl
xchg
sub
adc
lods
mov
jbe
test
xchg
or
pop
adc
inc
jecxz
adc
add
inc
es
sbb
fidivl
mov
adc
push
daa
mov
lods
inc
ret
les
sub
push
pop
pop
inc
pop
repz
pusha
cmpsl
pop
push
dec
aas
test
xchg
mov
mov
fnstsw
mov
add
shlb
fsubr
inc
lahf
mov
mov
int3
push
stos
imul
je
sti
sahf
cmp
movsb
jbe
push
jl
mov
and
and
addr16
push
jno
push
loop
insb
mov
lahf
bound
pop
cmp
push
mov
pop
pop
into
dec
jmp
xlat
out
mov
in
adc
jmp
inc
mov
inc
ja
enter
push
imul
cmc
stos
mov
pusha
dec
and
sub
mov
pop
or
shrl
imul
pop
push
push
pop
js
mov
outsb
call
into
test
adc
xchg
out
ljmp
movsl
es
and
test
sub
add
ret
test
jbe
outsl
xchg
test
jle
xor
rcrl
aaa
je
add
imul
pop
test
push
mov
xchg
enter
pop
mov
push
and
or
insl
daa
lods
cmc
out
sub
adc
inc
dec
cmc
in
add
mov
push
mulb
js
icebp
divl
ljmp
cltd
cmp
add
dec
je
xchg
sbb
xchg
mov
test
jae
cmp
sub
dec
sahf
jmp
mov
loope
pusha
dec
movsb
sub
ret
popf
dec
pop
int3
les
push
iret
mov
xor
push
pop
int
cmpl
out
and
and
je
push
dec
test
fisubrs
test
stos
adc
jns
push
mov
lcall
cmp
inc
or
dec
adc
xlat
maskmovq
aam
daa
mov
jle
push
test
inc
popa
push
push
push
sub
and
rcr
das
loop
clc
outsl
pop
lret
fdiv
mov
jnp
loop
push
movsl
push
cmp
push
jmp
add
icebp
push
imul
add
xchg
in
add
out
mov
xor
sbbl
clc
mov
jecxz
jnp
aam
mov
lahf
cmp
mov
mov
ja
and
fistl
in
imul
sahf
arpl
jae
sbb
pop
push
adc
sub
xlat
addr16
arpl
xchg
inc
pop
pop
fstpt
stc
clc
mov
arpl
fisttpll
enter
jb
pop
mov
out
shl
paddq
mov
pop
ret
pop
mov
pusha
rolb
mov
mov
test
out
pop
mov
adc
xor
cmp
jecxz
shlb
mov
xor
and
stos
iret
call
or
mov
in
rcr
adc
push
cltd
scas
sbb
pusha
cmpsb
push
popf
cmc
sarl
adc
aad
jmp
pop
jne
xor
fsubrl
stos
push
push
mov
enter
sbb
sbb
jno
out
pop
pop
fstpl
xorl
cmp
pop
lods
mov
ds
cli
sub
xor
adc
xchg
mov
and
sarb
push
xchg
mov
popa
sbb
adc
loope
cmpsl
mov
aad
jns
mov
lods
das
jecxz
mov
and
and
nop
stc
hlt
insl
in
adc
fsubrl
test
xor
jg
dec
leave
leave
cld
jb
rcll
test
add
dec
push
jl
and
xchg
mov
pop
data16
sub
arpl
pop
cmp
or
lret
sbbb
leave
push
jo
loopne,pt
sti
out
jecxz
sub
dec
jecxz
dec
cmp
cmp
push
out
fbstp
jmp
and
jne
stos
and
aaa
mov
pusha
cmp
inc
cmp
movsw
or
test
data16
stc
ret
pop
xlat
cli
fwait
cmpsl
in
mov
and
cmc
adc
pop
mov
shlb
outsb
jne
loopne
fwait
arpl
add
xor
call
adc
shrb
jg
aad
movsl
sbb
lcall
loope
shlb
lods
xor
outsb
movsb
or
aad
les
imul
mov
adc
add
loope
aad
cld
loop
lods
cwtl
notb
enter
aaa
mov
stc
and
cmp
insb
aaa
shrl
mov
jae
sbbb
xor
or
and
push
std
hlt
ret
ret
cmp
push
dec
stos
pop
add
mov
pop
iret
pushf
or
mov
ja
mov
fcompl
adc
pop
sbb
adc
or
loopne
ljmp
data16
movsl
cmpsl
mov
xor
scas
movsl
ret
dec
jmp
cmpsb
mov
pop
xor
in
jo
sub
or
ljmp
shll
or
lock
pop
dec
aam
inc
adc
jnp
xor
cpuid
hlt
jno
xchg
mov
xor
insl
dec
push
mov
cld
jno
imul
sbb
jae
inc
adcb
shlb
jae
rol
mov
xor
xor
mov
jbe
jg
test
adc
scas
sub
xor
mov
setbe
push
call
and
fldl
jmp
push
mov
sbb
cld
mov
es
in
out
dec
lods
push
xor
sbb
cmp
adc
mov
add
stos
jae
jae
fdivl
mov
clc
icebp
push
fidivs
gs
lret
cltd
adc
cwtl
adc
cmp
and
mov
or
das
mov
in
inc
sbb
mov
adc
push
ret
and
add
inc
sahf
cmp
loopne
push
push
xor
subl
inc
hlt
out
lds
sub
mov
jmp
scas
iret
shll
loopne
aad
lea
out
dec
jb
loopne
inc
dec
jo
push
pop
mov
addl
cli
mov
xchg
js
adc
mov
fstp
inc
es
dec
ss
out
add
lock
popf
xchg
cli
inc
sub
test
jns
sub
dec
jnp
mov
pop
ljmp
cmp
mov
pop
je
mov
sub
lret
jnp
mov
push
jl
imul
mov
aaa
and
inc
xor
cmp
xor
sbb
rolb
loope
jmp
pushf
in
jg
aad
hlt
int
and
inc
dec
std
mov
fldl
push
in
inc
fldl
xchg
test
push
in
mov
gs
xorb
pushf
mov
push
incb
js
push
or
sub
pop
in
stc
cmp
in
add
fldl
pop
sahf
and
loopne
cmp
mov
inc
mov
into
sbb
mov
fs
push
in
xlat
jnp
sub
jg
imul
movsb
gs
cmp
adcb
imul
test
lea
adc
push
jo
cmp
add
push
iret
dec
or
fistpll
test
scas
filds
jmp
cmp
insb
jle
int3
mov
push
fsubrl
lock
faddl
push
pop
stos
or
das
xor
push
stc
mov
leave
cmc
mov
xor
push
cltd
lods
cmpsb
das
stos
add
gs
imul
leave
jnp
je
imull
gs
arpl
in
inc
repnz
movsl
repz
dec
js
push
sub
rolb
adc
subb
mov
cmp
push
outsl
ret
ss
adc
sub
stos
push
mov
push
inc
or
loope
add
xchg
mov
imull
xchg
cmpsl
xor
sbb
cmpsb
pop
xchg
bswap
xchg
jecxz
sbb
shrb
push
add
mov
jmp
cld
call
insl
call
imul
loopne
lcall
inc
insl
push
ja
fsubl
pop
sqrtps
cmp
adc
jmp
rorb
mov
jge
fadds
cmovp
and
fdivrs
pop
jg
push
dec
hlt
mov
mov
add
sub
mov
push
fdivl
or
loopne
pop
mov
popa
mov
jecxz
mov
add
or
out
mov
push
rcl
cmc
jmp
idivl
and
adc
or
dec
addr16
adc
das
out
mov
gs
inc
loop
in
pushf
inc
dec
stc
iret
ja
xchg
or
cmp
pop
test
pop
imul
sbb
stos
xor
imul
clc
imul
xlat
dec
sbb
sub
dec
les
pushf
inc
test
fucomip
mov
and
or
stos
cmp
cld
cmpsb
push
xor
sbb
sahf
mov
jl
or
jbe
icebp
mov
dec
icebp
mov
shrb
leave
add
mov
push
push
icebp
js
push
xchg
out
push
dec
popa
les
add
sbb
sbb
adc
push
sub
xlat
add
arpl
int
fidivs
sbb
dec
mov
mov
and
push
or
insb
mov
bound
xchg
aad
ficompl
and
xchg
xor
movsb
cli
sbb
popa
out
icebp
test
icebp
xchg
mov
sbb
into
sbb
scas
mov
lods
xchg
fistps
sbb
mov
sahf
std
cltd
push
mov
mov
cmp
sub
aas
pusha
mov
and
int
xchg
outsb
jecxz
cmp
fs
stc
subl
sahf
pop
stos
inc
inc
test
out
mov
fcomip
aam
aam
or
ret
es
mov
mov
pushf
sub
ds
jmp
pop
bnd
shll
xchg
dec
xchg
ror
mov
decl
pop
roll
pop
inc
or
insl
mov
stc
add
xchg
aam
pop
lock
lea
bound
into
pop
gs
cmpsb
loope
push
pop
cs
pop
mov
addl
mov
jbe
jns
pop
sbb
jp
insl
adc
movsl
gs
pabsd
sub
stos
xchg
pop
stos
incb
pop
jo
in
sbb
stos
xchg
dec
mov
sbb
xor
aaa
loope,pt
xchg
shll
lds
dec
push
fimull
test
rorb
ret
enter
and
shrb
and
lods
add
repz
pop
mov
xor
fld
mov
push
jne
ffreep
inc
mov
cmpsb
push
push
mov
push
mov
sahf
cmp
and
insl
imul
ja
pop
xchg
pop
jb
sub
mov
les
mov
cltd
int3
fsubr
push
movb
pop
xchg
jbe
lods
in
data16
fs
and
cwtl
cltd
imul
into
dec
ja
push
jo
dec
mov
shll
fwait
xor
add
or
cmpsb
repz
imul
out
jbe
stos
lock
movsl
hlt
jl
sbb
lahf
cmp
add
call
insl
call
sbb
aaa
mov
leave
cli
into
loope
xor
xchg
lock
fisubrl
jne
lret
in
ljmp
add
dec
cmpsl
or
cs
nop
pop
jbe
and
dec
cs
or
or
insb
sbb
push
mov
inc
out
cli
shll
gs
pop
cmp
pop
les
movsl
mov
mov
sbb
and
adc
sub
mov
inc
pop
daa
mov
jbe
xor
loopne
mov
repz
daa
dec
xor
and
rorb
push
lcall
loop
cmp
dec
push
fldenv
stos
cmp
into
push
out
icebp
jb
popa
pop
cmp
push
mov
mov
or
mov
lahf
pop
adc
xor
cmp
pusha
repnz
inc
mov
pop
push
out
or
mov
jne
mov
lcall
fnstcw
adc
orb
mov
rcrb
and
lahf
jecxz
push
cmp
test
mov
int3
jg
in
cltd
add
jmp
sub
cmp
mov
aam
icebp
idivb
js
cld
dec
roll
and
xchg
out
aas
jecxz
sbb
pop
in
out
adc
dec
in
fbld
aaa
stos
loopne
pop
lea
mov
shll
mov
test
lock
repnz
or
jbe
xchg
push
imul
add
fiaddl
mov
or
xchg
dec
daa
roll
vhsubps
sub
push
xchg
outsb
push
push
add
pop
ficoml
pop
in
mov
or
repnz
xchg
pusha
push
and
inc
cltd
sbbl
mov
sub
jo
add
sub
jmp
xor
rcll
cltd
inc
sub
jmp
data16
sbb
fidivrl
sub
sub
mov
mov
dec
imul
lcall
ljmp
sbb
mov
std
jge
mov
aaa
bound
dec
or
pop
mov
lea
insl
scas
fwait
adc
xor
jle
pop
pop
adc
ljmp
aaa
jecxz
mov
mov
push
stc
sub
sub
aas
mov
iret
jecxz
sbb
addr16
add
add
jb
cli
ret
push
roll
sbb
cmpsl
adc
xlat
in
sub
adc
push
lret
xor
popa
popf
ds
loope
jnp
lret
jbe
cmp
mov
popf
rorl
and
jno
scas
cmp
mov
jns
cwtl
flds
ret
jns
in
xchg
out
jnp
push
cltd
mov
fbld
sbb
mulb
stos
dec
and
ret
pop
and
dec
sarb
cmp
inc
cmp
mov
jae
bound
cmp
lods
mov
bound
mov
cmp
xchg
dec
mov
sub
adc
sub
jnp
sub
icebp
loope
add
fs
inc
stos
lcall
inc
xchg
test
or
fisttps
pop
xorb
mov
dec
cmpb
fucomp
rcrl
xor
xchg
rclb
in
lret
lcall
clc
outsb
sbb
cli
push
fnsave
adc
push
sbb
repz
out
sub
and
mov
cmpsl
das
jmp
ret
jbe
push
fcomps
push
dec
das
scas
loopne
cmp
mov
cmp
ja
xor
mov
add
pushf
cltd
lea
out
sbb
push
jbe
cmpsl
and
pop
leave
cwtl
xchg
sub
in
ficoms
aas
xchg
jmp
mov
and
mov
pop
std
scas
jmp
push
inc
inc
imul
and
dec
xor
dec
add
fucomi
out
lret
nop
les
sub
aam
icebp
enter
adc
jge
sbb
sub
pop
dec
jae
sbb
ret
mov
arpl
mov
iret
inc
inc
mov
jo
ja
xor
push
ss
mov
pop
ret
xchg
cld
mov
lahf
jl
lret
mov
outsb
add
inc
xor
in
loopne
shlb
dec
sub
dec
popf
xor
xchg
jg
adc
lcall
in
xor
pop
lret
clc
cs
mov
loope
cmpsb
ja
in
add
pop
dec
cmp
sbb
push
rcll
push
jg
aas
call
mov
adc
mov
dec
or
jmp
ljmp
addr16
imul
mov
sarl
or
adcb
insl
lcall
inc
into
inc
lods
mov
jg
mov
sahf
rcl
into
xchg
hlt
out
push
in
and
sarl
fildl
or
and
push
insb
jo
adc
loopne
scas
push
std
cmp
jnp
xor
insl
rolb
or
fcmove
popf
cli
push
sub
dec
fcoml
mov
xor
sub
outsb
xlat
call
mov
data16
out
cmp
repz
dec
cs
les
lcall
das
pusha
insl
lea
push
scas
ret
xchg
fimull
jge
xor
cmp
jmp
jg
sbb
jo
adc
faddp
lock
out
fcomps
clc
jge
and
out
sbb
mov
and
cmpsl
push
add
jne
lahf
rcl
cmpb
adc
leave
out
push
sti
xchg
repnz
cmp
add
xchg
in
pop
addr16
or
lahf
adc
loopne
insb
inc
int
in
cs
std
push
xchg
jo
sub
int3
pop
xchg
sub
stos
jge
in
xchg
sahf
insl
jno
dec
mov
testl
addl
into
push
inc
insl
outsl
data16
in
hlt
shll
jo
cmp
in
cmp
mov
and
xchg
jp
adc
sub
mov
pop
in
jno
movsl
insl
mov
push
mov
out
aam
xor
daa
jmp
out
and
jle
sbb
fdivl
cmpsb
in
repz
jmp
mov
test
insl
ja
aaa
loop
xchg
or
jmp
jle
inc
mov
cli
push
or
adc
or
mov
pushf
xchg
sub
dec
ja
sub
hlt
sub
insl
jno
sub
adc
mov
js
sub
xor
cmp
inc
jns
sub
nop
jl
push
sub
lods
rol
pop
scas
cmp
add
or
ret
cmp
mov
imul
repz
addr16
inc
add
dec
fisttps
and
push
cmp
and
xchg
inc
pop
push
ja
sub
ret
mov
and
dec
or
dec
bts
outsl
jno
leave
dec
shll
fdivl
and
cmp
xor
push
or
and
mov
outsb
cli
lods
and
movsl
pop
jno
sbb
fldcw
clc
daa
lcall
dec
jnp
push
mov
cli
mov
loop
test
pop
inc
jle
fs
dec
mov
lahf
sarb
mov
lret
dec
pop
fistpl
hlt
adc
sbb
inc
mov
iret
iret
loopne
outsb
loop
pop
nop
into
cmp
imul
test
dec
dec
dec
xchg
jge
cltd
xlat
je
jp
mov
iret
cmpsb
inc
lcall
inc
cs
mov
cmp
sub
aad
mov
nop
frstor
sub
test
loope
add
sarb
mov
shrl
cmovbe
jg
xchg
shrb
jecxz
mov
gs
mov
inc
jle
mov
test
stos
push
repnz
sbb
sbb
jmp
pop
jmp
cmc
and
push
cmp
outsb
fbld
hlt
test
mov
outsl
dec
inc
sub
jo
mov
xor
add
add
mov
xchg
dec
add
xlat
outsb
imul
inc
mov
inc
push
dec
and
xchg
nop
rol
push
push
add
mov
outsb
call
add
push
mov
xor
ret
dec
jle
inc
mov
and
adc
cmp
jmp
pop
mov
fwait
xchg
and
test
add
sub
push
pop
adc
push
mov
out
repz
idivb
ja
bound
cmp
outsl
jb
jg
or
inc
lcall
cmc
in
addr16
fwait
js
push
ret
les
sbb
or
in
cwtl
fbld
sbb
or
test
inc
pop
mov
cmpsb
add
pop
push
mov
and
stos
inc
ret
fstps
mov
xor
nop
dec
sbb
test
cmc
and
fisttps
rol
xchg
cmpsb
addr16
pop
test
mov
dec
scas
adc
add
pop
or
outsb
fldl
clc
inc
fwait
mov
jno
shll
adcb
dec
addr16
lahf
pop
stos
mov
adc
in
push
mov
jle
les
add
or
fnsave
aad
jg
adc
shlb
jmp
inc
push
fcompl
push
insb
shll
in
add
dec
repz
inc
jg
push
push
sti
popl
dec
lahf
sub
adc
pop
sub
adc
adc
pop
mov
cmp
ret
xrelease
rcr
add
fistl
loope
icebp
out
repz
cli
adc
mov
push
mov
or
jmp
push
xchg
and
mov
push
fs
das
std
ja
cmp
pop
lcall
fs
int3
movhps
fcoms
and
or
xchg
push
add
sub
xor
cmpsl
jb
mov
cmp
lcall
cltd
xor
jae
jae
push
int
fucom
repz
jmp
les
fiadds
lret
fwait
scas
jl
orl
jae
cmp
mov
stc
push
shrd
adc
dec
mov
sub
movsl
out
cmp
gs
push
xor
scas
mov
sub
cmp
xchg
aaa
sbb
pop
jno
int
mov
ret
lret
bound
mov
scas
jle
jmp
imul
enter
xchg
pop
mov
push
fnstenv
into
jb
test
int
out
arpl
stos
jno
ret
lret
and
mov
popa
test
mov
fwait
in
mov
loopne
mov
adc
or
insb
inc
inc
in
std
andl
adc
sbbb
pop
xor
loopne
sub
into
dec
outsl
ja
test
jecxz
jno
lea
adc
pop
stc
push
popa
push
lods
bound
ja
aad
mov
dec
movb
adc
imul
ret
cs
and
ljmp
inc
sub
or
cmpb
jns
mov
int
sbb
pop
jle
jnp
in
sarb
pop
mov
imul
adc
pop
pop
add
sub
mov
push
in
jle
sahf
ds
cs
lods
cwtl
cmc
les
sub
push
xorl
sub
jg
cld
push
jl
push
cmp
imul
jae
dec
iret
stos
cmp
sub
mov
mov
aam
adc
mov
insb
or
je
ret
sub
lcall
stc
push
dec
addl
jbe
adc
mov
stos
inc
test
push
daa
mov
test
mov
mov
fdivr
pop
pop
bound
cmp
sbb
stc
pop
push
hlt
movsb
mov
cmp
cmp
int3
add
loop
sub
jne
mov
mov
cmp
icebp
cli
push
cmp
mov
js
xchg
vmread
mov
dec
xchg
insb
xor
and
mov
mov
mov
imul
fadd
xor
sbb
loope
jmp
sub
add
fwait
sti
int3
mov
fildl
push
iret
jne
std
push
sub
sbb
xchg
inc
fs
mov
push
dec
pop
outsb
mov
xor
aad
outsb
cli
push
std
or
jmp
xchg
push
ss
nop
je
xchg
das
jge
mov
scas
lods
fmuls
sbb
repz
pop
fs
or
arpl
out
pcmpgtb
dec
push
push
in
xchg
pushf
stos
dec
add
push
lea
stos
sti
insl
scas
cmpsl
xchg
xchg
sub
and
bound
imul
xor
xchg
call
mov
add
icebp
test
out
xorl
shl
cmpsl
mull
cmpsl
data16
adc
or
cmp
sub
pop
jbe
sub
ja
fstl
in
test
mov
aad
nop
stos
mov
daa
jp
sbb
aas
push
dec
xchg
pop
loop
test
test
jne
jg
push
bnd
jge
icebp
push
sbb
adc
outsl
push
aam
and
jmp
sbb
mov
outsl
adc
xchg
xchg
icebp
and
mov
std
dec
jecxz
int3
cmp
fisttpl
inc
xor
xchg
mov
mov
xor
xchg
dec
shl
aad
sub
jns
jp
push
mov
bound
lret
out
mov
mov
lret
mov
adc
jmp
fmul
fwait
and
js
lea
push
mov
adc
push
sbb
lea
rorl
mov
mov
sub
mov
sub
dec
out
jecxz
call
add
sbb
dec
jns
sbb
mov
dec
jno
xchg
adcb
in
cmp
lods
outsl
lea
lret
pop
in
movsb
fiaddl
xchg
es
sbb
sub
dec
mov
dec
adc
outsl
cli
sub
pop
sbb
mov
cmc
into
add
sub
incl
xchg
dec
out
jns
shl
or
inc
xchg
pop
into
xlat
ficoms
lds
xlat
out
es
clc
mov
sti
ficompl
fidivrs
insl
xor
jmp
sbb
mov
das
lods
jb
push
lea
inc
dec
repz
scas
sub
dec
scas
mov
jo
stos
mov
and
push
aad
decl
out
dec
loope
jb
sub
arpl
jae
mov
mov
push
mov
fsubrl
pop
jmp
test
adc
hlt
add
outsb
cltd
inc
aam
out
loope
stos
adc
fists
pop
jl
dec
stos
sub
icebp
mov
mov
std
mov
or
and
in
movzwl
pop
jmp
pop
in
aad
lret
jbe
push
loop
mov
mov
insb
mov
xchg
bound
fldt
or
into
sub
sub
icebp
mov
insb
sub
push
inc
mov
pop
xchg
push
cmp
addb
es
pushw
ret
jnp
mov
mov
fimull
pop
inc
mov
insl
mov
adc
mov
repz
push
and
pop
inc
dec
pop
xchg
shl
inc
aam
jno
outsb
jecxz
push
inc
push
mov
insl
test
out
lods
mov
sbb
and
jmp
cmp
cltd
xor
outsl
push
and
cmp
adcl
test
mov
mov
xor
pop
hlt
xchg
or
fstpt
test
ret
push
and
push
sti
in
add
leave
cs
adc
ljmp
and
rcrb
cld
or
mov
pop
lret
fnstsw
in
clc
aad
pushf
outsl
cmp
xor
inc
mov
xchg
ds
and
mull
je
mov
fldl
sub
popa
fldenv
mov
and
jl
dec
push
dec
add
jnp
adc
push
mov
hlt
cmp
mov
push
dec
sbb
jge
push
xchg
cmpsb
mov
sub
imulb
fsubrs
lods
dec
xor
fwait
push
js
cmpb
popf
ret
mov
movsb
and
mov
adc
push
or
jae
fwait
dec
mov
pushf
incb
push
popf
sbb
mov
sub
out
or
stos
sub
cs
inc
xchg
mov
cmpsb
fistpll
lods
dec
icebp
nop
push
call
arpl
rolb
and
test
mov
into
rolb
rolb
out
mov
and
push
imul
xor
fisttpl
pop
ss
gs
out
adc
adc
or
jne
rcll
in
push
jge
xor
lods
cs
loop
xor
fdivrl
aas
js
mov
scas
adc
out
cmp
mov
icebp
dec
adc
cld
out
ja
lds
mov
adc
and
xor
mov
dec
add
cld
cltd
mov
mov
lods
and
jmp
popf
ret
xorb
dec
dec
jp
and
in
lods
sti
push
sub
fcmovbe
pop
xor
cmpsl
push
add
outsl
inc
mov
mov
mov
outsb
cwtl
sbb
push
sti
test
repz
mov
das
xchg
arpl
aad
imul
xchg
popa
lcall
push
cmp
lea
xchg
cmp
data16
xchg
daa
and
inc
pop
mov
sub
outsl
jle
mov
adc
xor
aaa
in
fwait
loop
scas
dec
or
neg
fildll
lret
jbe
sbb
scas
pop
and
aad
push
insl
dec
mov
int3
xor
subl
test
mov
and
or
lods
push
cmpsb
cmp
movsl
lcall
adc
adc
ds
inc
jmp
fwait
inc
daa
or
sti
and
adc
outsb
sbb
fdivl
jge
mov
sub
sub
repnz
bound
or
sbb
push
push
dec
test
cs
aad
or
cli
in
pop
in
fnstsw
rolb
mov
in
xor
mov
imul
fcmove
addb
sbb
mov
add
add
jle
gs
pusha
pop
or
pop
test
gs
or
dec
sti
mov
popa
pushf
loope
imul
pop
lock
mov
cld
ss
xchg
popa
into
sarb
fimuls
fstl
mov
shll
loope
pushf
or
daa
lcall
jmp
cmp
loope
lods
dec
test
and
loopne
pop
jle
lahf
ljmp
cmpsl
out
inc
adc
and
sub
mov
cltd
mov
cld
mov
mov
jbe
lock
std
mov
cmc
and
jno
stos
int
in
gs
cmp
arpl
mul
cmp
fdivs
cmpl
lds
addr16
jp
pop
inc
jne
xchg
mov
leave
test
insl
and
out
or
mov
cmpl
xlat
int
outsl
dec
xor
inc
inc
sbb
lods
or
mov
dec
dec
jb
jecxz
int
or
jne
sti
cmp
pop
sbb
loopne
pop
xchg
stos
mov
add
adc
and
cmp
cmp
leave
scas
mov
addb
js
pushf
cmp
pushf
repnz
sub
movsl
cmp
in
jge
xor
pop
outsl
ret
stos
mov
fbld
sbb
popf
cwtl
xchg
dec
pop
cmpsb
scas
lds
dec
clc
jecxz
arpl
pop
lods
call
xchg
dec
lahf
aaa
ret
scas
sub
or
jne
adcb
mov
add
cld
inc
inc
call
pop
lock
adc
shrl
loop
dec
pandn
sub
xchg
bound
je
in
sub
loop
xchg
inc
into
xor
xrelease
sbb
jns
jns
stc
jne
imul
sub
scas
add
and
xchg
shll
iret
mov
je
in
xchg
push
mov
mov
pop
test
test
std
rorb
xchg
mov
inc
shlb
sti
out
adc
xchg
test
mov
mov
push
into
lds
in
fwait
cmp
mov
ret
lahf
fcoml
xorl
inc
pop
push
jmp
sub
push
test
call
jb
push
xchg
sbb
ficoml
push
or
aam
icebp
pop
mov
mov
jne
in
pushf
xchg
mov
jns
out
movnti
jmp
mov
call
jge
mov
sbb
cmp
xor
leave
inc
pop
mov
adc
cmp
in
out
fstl
cmp
push
in
jg
jmp
xchg
loop
insb
in
mov
lods
cltd
jnp
adc
leave
lret
int
lods
jbe
mov
orl
popf
lret
clc
enter
in
int3
adc
std
adc
frstor
rclb
xchg
mov
addr16
xchg
call
push
cli
faddp
push
pop
xchg
cmpsb
nop
inc
push
je
jbe
cwtl
je
out
xchg
cmp
pop
aam
and
movsb
mov
push
lret
and
into
and
xchg
aas
lea
xchg
fmull
dec
movsb
jo
fwait
xlat
aas
ljmp
icebp
fnstcw
dec
xor
mov
cmp
test
mov
dec
out
mov
xlat
push
hlt
inc
mov
inc
push
popf
inc
rorl
gs
and
aam
sbb
aas
idivl
pop
mov
ds
inc
or
dec
daa
negb
in
push
mov
ret
jbe
pop
es
popf
xchg
sbb
cmpsb
pop
fisttpl
inc
xchg
loopne
sub
fs
pop
dec
mov
int3
push
push
setnp
add
add
insl
sub
mov
push
jb
sub
sub
outsb
mov
push
mov
mov
add
lret
repnz
ficoml
xchg
hlt
test
int3
outsb
xor
or
dec
fiaddl
test
jbe
or
jge
dec
in
sahf
lds
dec
addb
lods
dec
cmp
and
sub
loopne
enter
fildl
lods
ret
bound
popf
push
jne
jb
into
push
inc
mov
xlat
sbb
sbb
in
sub
imul
add
in
pop
push
out
adc
adc
push
xchg
sub
sbb
sbb
pop
lahf
cld
push
cmp
popa
sbb
push
jecxz
movsb
mul
fwait
jl
pop
cmpsl
jge
add
cmpsb
insl
jb
imul
push
and
jns
das
push
scas
insl
hlt
daa
mov
leavew
push
out
int
xor
inc
sub
push
test
in
dec
and
dec
mov
pusha
ja
clc
jnp
mov
inc
scas
cmp
in
mov
cltd
xchg
in
sbb
jecxz
ficomps
cli
or
lods
ret
ja
mov
sub
imul
imul
rorb
sbb
mov
test
loop
sbb
icebp
adc
mov
jecxz
imul
adc
sub
jg
bound
sub
popa
push
or
xorb
push
adc
jns
dec
cmp
outsl
cwtl
xchg
jge
fcmovb
aad
mov
enter
push
les
jg
mov
imul
or
pop
jmp
sbb
out
push
push
mov
inc
cmp
push
sbb
neg
shrl
xchg
xchg
sti
xlat
pop
test
adc
xchg
lret
mov
xor
stos
lahf
cwtl
dec
xchg
inc
inc
or
decb
fucom
andb
shr
jecxz
in
cmp
mov
cli
mov
push
push
push
imul
inc
mov
push
mov
fsubs
cmpsb
sbb
sbb
pop
mov
or
sbbl
cmp
mov
add
mov
pop
popf
cld
das
in
ja
popf
stos
ret
sub
ja
scas
xchg
sarl
sbb
mov
and
inc
push
pop
xor
mov
in
sarl
push
adc
push
mov
push
cmp
xlat
das
xchg
xor
jg
test
sbb
fisttpll
inc
loop
ljmp
and
fwait
and
js
lds
jno
in
jbe
sbb
jo
daa
xchg
jg
out
imul
shl
pop
sbb
or
mov
bswap
jl
sub
add
xor
push
mov
pop
mov
jae
rorl
jnp
sub
add
aaa
je
xchg
or
arpl
std
ret
icebp
push
pop
mov
lea
mov
movsl
ljmp
push
outsb
dec
push
dec
cmp
jnp
arpl
mov
pop
in
insb
mov
les
ret
xchg
adc
mov
mov
bound
push
iret
test
mov
sub
lret
ficoms
push
dec
mov
scas
pop
cmp
mov
and
mov
or
fcomp
cli
cmp
sarb
cmp
jo
fldl
pop
adc
lahf
cmp
add
jno
aas
out
incb
adc
dec
mov
jl
mov
loop
mov
das
adc
gs
mov
adc
cmc
loop
stos
adc
js
dec
pop
mov
scas
es
addl
pop
sbb
push
mov
pop
sbb
aaa
or
jns
mov
js
xor
add
sbb
xor
popf
xlat
cwtl
sahf
dec
les
or
int3
movsb
and
movsl
sub
lret
mov
jnp
sub
push
out
mov
or
cld
or
aam
daa
lock
ja
push
shrb
mov
data16
jecxz
cmc
cmp
push
ret
pop
dec
pop
aas
rcll
mov
aaa
imul
sbb
or
out
sahf
pop
pusha
push
int
dec
loopne
cli
fistl
xchg
ljmp
push
dec
call
push
push
mov
mov
jl
dec
imul
gs
adc
lods
call
into
add
ret
jl
mov
out
icebp
jo
mov
cmp
cmp
vfnmsub213pd
call
outsb
push
inc
ljmp
push
add
lock
inc
or
rcll
pop
sbb
cmp
jne
fnstcw
fistpll
les
ja
xchg
loopne
movsl
aas
xchg
dec
mov
test
pushf
add
jne
dec
sahf
add
leave
iret
push
adc
or
mov
jb
outsl
lret
pop
xchg
aaa
push
mov
mov
pop
test
repnz
pop
or
loope
push
sub
and
inc
xchg
mov
sub
pop
mov
lret
leave
jne
add
inc
cwtl
bound
pop
pop
or
adc
mov
mov
cltd
test
leave
mov
inc
mov
clc
fmull
lret
shll
stc
das
test
mov
and
mov
std
aaa
ret
add
or
push
mov
daa
or
ret
das
jae
mov
jne
pop
sub
pop
enter
xorb
fdivrs
adc
and
sub
jl
cld
out
icebp
sub
out
jp
sbb
cs
jo
sarl
loop
lods
xor
push
movsl
add
or
test
or
fsubs
scas
jp
fsubs
inc
stos
rclb
stc
pop
and
and
xor
jge
mov
xchg
xchg
ret
dec
push
and
mov
hlt
xchg
cmpsb
dec
push
xor
jle
clc
stos
pop
adc
ret
outsb
mov
add
inc
shl
pop
or
inc
or
iret
jbe
loop
jmp
mov
mov
cmpsb
cmp
push
dec
or
mov
cmp
lahf
sahf
cld
cmp
movsl
andl
mov
and
adc
add
popf
dec
popf
iret
inc
jnp
cmp
ds
loop
jmp
add
es
jge
mov
push
pusha
js
cmp
pop
mov
repz
xchg
push
add
fnstsw
in
and
test
movsb
movsl
xchg
insl
jno
mov
push
xchg
pop
arpl
hlt
xor
in
imul
aam
xchg
bound
push
mov
dec
sub
or
cmpsb
push
or
repz
mov
arpl
std
bound
push
sub
push
bound
repz
stos
jno
scas
sub
pop
adc
mov
test
pusha
scas
movb
shll
or
mov
pop
in
test
sbb
std
andb
jmp
and
mov
movl
fnsave
rcr
xor
cld
ret
xchg
in
dec
mov
shll
and
fsts
dec
fdivr
xor
out
cmpsl
rolb
cmp
das
icebp
je
jb
mov
aaa
jbe
rcrl
jmp
in
or
test
clc
popa
cli
aam
jmp
push
pop
dec
mov
sahf
out
pop
imul
inc
add
jns
lds
or
loope
push
repz
fstpl
mov
fucomip
pop
pop
out
adc
mov
push
out
jmp
imul
lcall
adc
das
pop
mov
enter
jno
fwait
pop
jne
lods
fmuls
lahf
sbb
adc
dec
add
lcall
dec
jmp
push
pop
mov
inc
xor
push
pop
test
loope
icebp
and
xchg
shll
mov
add
xchg
dec
or
fstps
cmp
add
jnp
ljmp
and
imul
push
loope
lret
pop
xor
mov
sub
rcrl
out
cli
inc
imulb
mov
gs
dec
mov
loope
sbb
pop
rorl
pop
movsb
push
mov
mov
int3
add
gs
add
mov
mov
lods
int3
push
mov
pusha
pusha
ss
cltd
cs
lds
jmp
cmpb
cmpsb
push
adc
dec
lods
fdivl
sub
jb
cmp
aaa
sub
mov
add
jnp
test
push
xchg
jge
adc
add
arpl
test
push
in
inc
sbb
lea
jnp
push
fidivs
jge
cs
or
inc
scas
pusha
lods
xchg
fisubrs
mull
jl
adc
ret
push
xor
cwtl
add
das
hlt
mov
mov
stc
mov
or
mov
add
cmp
xchg
cvtdq2ps
pop
push
push
sahf
lcall
mov
xor
call
pop
push
and
mov
movsl
adc
lret
outsl
aaa
xchg
ljmp
or
enter
in
lcall
inc
test
mov
iret
xchg
in
loop
push
mov
pop
sub
mov
loope
mov
xor
hlt
repnz
xchg
xchg
push
mov
ret
rol
sbb
or
mov
arpl
std
lods
inc
mov
sub
mov
lret
into
shufps
fdiv
and
cmpsb
jg
push
pop
fcoml
jmp
rol
nop
pop
movsb
pop
jmp
push
xchg
mov
mov
movsl
xchg
mulb
std
arpl
aam
sub
add
subl
pusha
test
jnp
inc
lcall
popa
mov
enter
fists
jne
push
addb
lods
cld
pop
push
in
sub
mov
or
or
lods
fcoml
das
dec
add
lcall
cmp
inc
outsb
xor
add
push
jle
gs
or
imul
sbb
push
mov
mov
cmp
insb
fimull
out
xchg
in
lds
sbb
aad
or
mov
stc
push
mov
aaa
hlt
insl
push
xchg
jb
fcomi
push
jmp
xchg
sub
and
adc
nop
sub
mov
gs
push
in
jnp
into
and
sti
mov
cmc
push
mov
test
aam
movsb
or
sbb
jmp
jl
push
cmpsb
add
jbe
push
xchg
pop
xchg
std
lret
mov
xchg
jle
jns
mov
mov
scas
push
test
out
and
mov
pop
rcrl
cmp
adc
xor
dec
faddp
das
cmpl
inc
test
aaa
fisubrs
arpl
loop
rcll
pop
mov
mov
lds
or
jnp
sub
aam
mov
imul
ret
inc
cwtl
fs
xchg
mov
sub
mov
enter
insb
stos
arpl
xorb
int
inc
mov
andl
jo
jmp
inc
pusha
negb
sti
dec
pushf
jae
xor
adc
xlat
mov
dec
into
push
lret
in
pop
fcmovb
inc
mov
push
or
add
xchg
mov
aas
arpl
xchg
repnz
pop
dec
ret
cmc
lret
inc
lea
adc
sbb
adc
and
add
dec
je
adc
pop
pop
sbb
mov
loopne
test
call
ja
add
or
negb
mov
aam
adc
arpl
add
stos
hlt
add
sarl
fadds
vorps
xchg
push
cmp
mov
fdivr
rclb
or
ja
roll
adc
sub
clc
adc
xchg
into
pop
sbb
pop
mov
adc
push
adc
movsb
outsb
xchg
das
push
jb
sub
mull
lea
mov
and
movsb
cmpsb
fisttpl
arpl
or
pop
and
insl
adc
lcall
pop
cmp
lds
lods
cmp
andps
cs
lcall
addl
jge
outsb
jmp
pop
pop
insb
out
dec
or
pop
aas
sbb
lret
insl
stos
jle
sbbb
inc
lods
jno
add
fmul
pop
pop
in
cmp
jae
hlt
fwait
dec
push
pop
lds
adc
or
rcll
jp
or
sbb
fs
loope
fistl
jne
dec
xchg
addb
inc
jp
ret
adc
jmp
icebp
push
cs
dec
pop
xchg
in
push
roll
dec
cmp
jbe
dec
popa
outsb
mov
push
sub
in
cmpsb
sub
cmp
or
push
pop
and
and
mov
shll
dec
es
in
xlat
inc
mov
test
pop
pop
call
xor
mov
adc
mov
fstps
add
jg
sbb
xlat
sub
cmp
insb
push
fldcw
or
stos
jp
jg
sub
lret
push
rcll
into
mov
push
int3
pop
es
js
push
popl
inc
add
insb
inc
dec
jbe
imul
int
imul
andl
lahf
arpl
test
inc
mov
icebp
mov
and
jnp
clc
mov
jmp
push
bound
sbb
mov
mov
pusha
push
or
pushf
xor
imul
add
leave
jo
mov
hlt
xchg
clc
je
jne
aam
mov
mov
push
add
andl
xor
fiaddl
xor
or
jno
es
mov
test
inc
in
jne
dec
data16
ret
cltd
push
push
fwait
shl
pop
loopne
les
push
xor
adc
mov
dec
or
pop
mov
xchg
jmp
icebp
inc
sub
push
sub
in
jbe
adc
cmp
sub
xchg
les
inc
mov
push
mov
out
add
cld
mov
push
rcll
loope
insb
out
shl
jo
outsl
lds
push
jge
xor
ds
pop
fdivs
inc
dec
fs
and
push
repz
dec
hlt
cmp
inc
aad
popf
mov
pop
mov
scas
push
push
rol
and
loop
adc
push
in
imul
je
fdiv
xor
adc
jmp
and
mov
or
loopne
xchg
sbb
and
lret
nop
or
fbld
insb
jo
jp
js
cmp
jle
movsb
push
sub
divb
rclb
inc
xchg
dec
adc
pusha
std
push
mov
daa
outsl
cs
dec
mov
xchg
xor
in
mov
push
xchg
loope
gs
stos
adc
dec
mov
je
or
enter
imul
nop
lock
fcoms
popa
repnz
rorl
sub
test
sbb
sub
mov
enter
fimull
or
mov
pop
gs
adc
mov
mov
push
jge
jle
adc
pushf
and
ss
cmpsl
jno
mov
and
sbb
sub
xchg
mov
push
addl
test
xor
gs
mov
pop
push
or
scas
dec
je
in
bound
scas
mov
inc
sub
cmp
sbb
xchg
nop
xor
pop
inc
and
or
lods
dec
in
mov
mov
fs
pushf
jmp
push
cmp
cmp
mov
pop
flds
es
add
mov
mov
out
orb
fndisi(8087
jae
ret
inc
push
nop
or
mov
in
imul
lahf
rorb
sbb
ret
popa
xor
add
mov
cli
enter
or
push
fwait
inc
pop
mov
stc
gs
cmpsl
outsl
aam
sbb
popf
add
lcall
nop
insb
jb
clc
and
filds
jae
jns
lahf
cmp
out
inc
les
xchg
cmp
fwait
xchg
lcall
ljmp
popf
cs
mov
lret
mov
in
ret
and
push
imul
dec
add
and
jae
jg
mov
xor
nop
fsubl
mov
adc
xlat
jge
pop
in
das
js
mov
inc
je
test
adc
dec
adc
xchg
jp
mov
vcvtss2sd
jne
ret
fwait
jg
adc
adc
and
lcall
jno
aaa
movsl
idivb
mov
div
pop
mov
cltd
cmp
pop
inc
push
sub
stos
out
in
arpl
lret
pop
popf
xor
pop
scas
fisttps
mov
cmp
scas
mov
in
lea
fs
idivb
ds
ss
jno
and
push
and
std
enter
mov
or
out
pop
outsb
fistl
jg
sbb
xlat
and
scas
xor
adc
ss
ficomps
cltd
sbb
leave
adc
fistpll
aaa
inc
jne
negl
cmp
ret
cmc
out
add
mov
sub
cmp
aaa
aad
inc
lods
aaa
das
repz
int
dec
mov
push
dec
inc
mov
popl
mov
jbe
dec
testl
je
fbld
jecxz
jge
or
daa
jae
push
xchg
stos
sahf
adc
jo
cwtl
data16
add
mov
movsl
sub
adc
dec
adc
and
shl
adcb
lahf
js
or
or
scas
shrb
pop
dec
add
cmpsl
ja
in
sbb
clc
sbbb
imul
call
cmp
lcall
leave
sub
out
fmul
mov
mov
dec
mov
adc
xlat
sbb
shl
aad
push
mov
pop
mov
adc
jecxz
adc
add
stos
add
add
js
stos
in
add
addr16
sbb
insl
pop
xlat
jle
imul
dec
aas
fistl
or
xor
mov
test
xchg
or
add
in
jno
or
lahf
stos
jne
sub
dec
inc
cwtl
lods
insb
leave
lea
jle
pop
xchg
push
and
inc
lret
ds
jo
rcll
pusha
movsb
inc
mov
lret
xchg
fdivrl
repnz
jno
loopne
jns
inc
div
fidivs
or
add
lods
arpl
and
push
loope
push
leave
pop
sbb
aaa
ja
in
inc
lds
repz
mov
add
jmp
fimull
jae
jecxz
mov
cmpb
inc
cwtl
cmpsl
fnop
pusha
sbb
pop
pop
push
jne
mov
pop
or
jl
inc
jnp
push
cmova
aad
push
dec
sub
out
push
jmp
int3
ljmp
jno
cmpsl
push
push
mov
movsb
gs
push
add
add
jnp
das
mov
inc
aad
jecxz
or
js
fdivr
rorb
inc
outsb
pop
shll
push
jno
pop
xor
push
faddl
out
pop
aam
fsubs
mov
mov
dec
stos
xor
inc
shr
aas
add
xchg
xlat
orl
and
ret
mov
adcl
jne
mov
js
cmpsb
sti
iret
fnstenv
dec
adcb
jle
jle
fiadds
push
pushf
jmp
outsl
mov
cld
lods
inc
fs
or
mov
sbb
leave
fldenv
adc
add
iret
fmuls
out
xchg
dec
adc
xchg
js
push
dec
cltd
scas
sbbl
mov
call
push
fldenv
add
push
adc
cmovs
dec
stc
jae
and
ss
cli
cmp
mov
dec
push
sahf
int
nop
clc
xor
test
aaa
mov
or
xor
xchg
lods
push
jns
mov
mov
imul
jmp
fstl
xchg
ljmp
bound
hlt
sbb
decl
test
out
sbb
pop
mov
and
rorb
sahf
mov
hlt
movsb
xor
sti
pop
jne
sbb
inc
jp
add
aad
or
adc
movsl
not
jmp
mov
mov
inc
das
shll
adc
add
and
in
lahf
xchg
add
xchg
mov
aas
dec
mov
pop
cwtl
pop
scas
clc
push
dec
add
jnp
repz
leave
mov
add
push
rolb
inc
cmpsb
mov
int3
dec
and
jecxz
std
or
xchg
out
nop
pop
dec
xor
stc
push
or
arpl
or
fs
cwtl
mov
jmp
cmpsb
mov
pop
pop
into
pop
cwtl
testl
popa
adc
and
mov
or
mov
sarl
aaa
mov
aad
inc
fisubrs
add
pop
addb
add
jle
clc
mov
es
cmp
sbb
and
fcoms
test
push
pop
and
or
sbb
neg
hlt
push
lret
das
movsl
lock
ror
ds
mov
addb
lahf
cltd
ja
and
add
xchg
js
sub
in
xor
jne
ds
mov
adc
imul
jae
xchg
ret
pusha
outsb
mov
in
les
xchg
mov
scas
adc
in
sub
rorb
pop
or
push
mov
cmp
dec
shr
push
cmpsl
mov
mov
and
imul
mov
scas
mov
sub
xchg
jecxz
add
jns
insb
sbb
pusha
stos
push
add
add
shll
repnz
pop
stos
mov
add
mov
push
adc
bound
add
adc
or
jb
jno
out
jb
add
or
adc
imul
cmp
js
mov
inc
ljmp
nop
cmp
dec
std
mov
fwait
jg
add
lret
xchg
mov
add
jle
loop
xchg
fcmove
adc
int
and
fxam
cld
hlt
mov
repz
inc
subb
push
movsb
add
rcll
cmp
movsl
call
cmp
xchg
loope
sbb
adc
inc
int
std
in
lret
je
mov
fucomi
cltd
mov
jecxz
mov
xor
or
pusha
jae
xor
sbb
movsl
enter
inc
jnp
cmp
lcall
ds
hlt
xor
mov
cwtl
jmp
lret
hlt
inc
cmp
mov
cli
arpl
inc
push
or
sti
ficoms
mov
pop
and
mov
or
test
cltd
add
ret
dec
add
jmp
mov
ds
sub
mov
and
enter
insl
iret
xchg
outsb
lret
jae
adc
icebp
das
inc
fdecstp
sub
ficompl
roll
mov
push
movsb
mov
cltd
or
cld
pop
fcmovnu
out
imul
test
jnp
jecxz
nop
adc
jmp
loope
in
ds
add
mov
cmpsl
cmp
adc
mov
js
add
dec
cmpsb
rorl
js
xchg
pop
jmp
out
add
xchg
pop
adc
pop
addr16
mov
gs
xlat
gs
movsb
filds
or
xlat
mov
xor
loope
sbb
mov
das
in
movsb
xchg
dec
or
pop
xchg
or
rol
add
inc
xor
adc
les
add
out
jo
iret
fdivrs
mov
pop
adc
mov
sbb
pop
mov
ret
imul
mov
punpckhwd
jg
inc
scas
movsl
mov
iret
lcall
mov
cmp
inc
pop
cmp
pop
movsb
stos
adc
add
test
mov
inc
stc
mov
push
xor
mov
adc
imul
out
push
mov
sti
ljmp
movsb
popf
fstps
jecxz
xor
jle
add
inc
dec
leave
rcrb
imul
xor
add
xchg
pop
js
imul
jnp
mov
mov
mov
popf
push
ss
sub
jo
and
dec
mov
sbb
dec
int3
jo
out
xor
clc
xor
xor
mov
enter
add
adc
mov
xchg
enter
cmp
xchg
cmpsb
bound
dec
mov
xchg
lret
xchg
shlb
lods
jbe
sarl
or
std
pop
inc
outsl
sbb
mov
inc
mov
xchg
sti
jbe
or
xchg
add
push
es
rorl
es
daa
ret
mov
lcall
push
mov
arpl
add
loope
loopne
dec
bound
add
xchg
mov
ljmp
fcmovne
cli
pop
jmp
cmp
ss
jno
lock
add
repnz
push
test
test
cmp
cmp
js
fistpl
mov
mov
fcmovb
jmp
ret
out
popa
adc
cs
lods
xor
jno
add
pop
adc
lods
push
jnp
and
cwtl
imull
fstps
data16
dec
add
in
add
in
lcall
es
aas
nop
jle
push
imul
lods
out
clc
pop
repz
lds
in
sbb
test
jp
inc
adc
fs
cltd
push
lods
mov
pop
sub
fwait
push
mov
addr16
fadd
mov
xchg
fsubrs
sbb
nop
fidivrl
repz
daa
add
dec
inc
imul
sub
sbb
repnz
addr16
aas
dec
or
cmp
cli
push
lea
mov
sbb
inc
clc
and
mov
jmp
cmc
fcompl
repz
cmc
mov
imul
jp
sbb
stos
insb
scas
cltd
movsb
add
push
mov
mov
pop
mov
push
mov
xor
pop
or
and
push
sarb
decb
inc
xor
gs
ret
mov
mov
jp
stc
xor
iret
std
loope
int
repnz
jmp
int
mov
sub
icebp
lea
dec
mov
pusha
and
push
ret
mov
insl
fnstenv
or
mov
cmp
add
xchg
iret
iret
add
jne
loop
test
mov
adc
mov
mov
arpl
jae
sbb
sbb
pop
outsl
jb
outsl
lods
fiadds
inc
test
jmp
mov
lahf
aas
and
inc
dec
cmp
pop
xlat
sbb
jle
or
sbb
imul
inc
outsl
mov
sub
addl
ljmp
in
cli
cmp
or
xor
cwtl
lahf
andb
xchg
out
mov
dec
add
cld
inc
jecxz
rorl
outsl
ret
fs
jbe
fistl
sti
pop
cmpl
adc
jb
jo
stos
xor
imul
sbb
push
xor
mov
xchg
push
jle
xchg
lret
lret
mov
sbb
popf
pop
mov
lea
mov
insl
mov
shrb
loopne
jbe
shlb
push
add
xchg
xor
sub
adc
out
icebp
lcall
dec
cmp
xchg
xor
in
in
add
inc
adc
inc
push
iret
subb
test
in
mov
rorl
and
fnstenv
lcall
push
lods
inc
add
push
aad
daa
mov
bound
cli
xor
push
mov
aam
inc
test
mov
aam
fucom
pushf
das
sbb
std
mov
pop
nop
scas
pop
fs
mov
jl
cmp
inc
aam
mov
sahf
mov
mov
mov
adc
sbb
adc
push
lret
hlt
cwtl
stos
mov
sub
std
inc
hlt
sbb
cmpsl
adc
add
cs
mov
push
inc
popa
shlb
cmc
scas
dec
neg
mov
mov
xchg
fisubrl
mov
push
insb
adcl
or
mov
movsb
test
ret
push
sub
lret
and
and
cmp
xchg
gs
lahf
sub
je
add
pop
add
popa
push
hlt
fadds
cli
sub
lcall
ljmp
popa
adc
adc
enter
pop
orb
push
enter
xor
push
popa
jae
fsqrt
jp
and
icebp
insl
pushf
or
aad
sbb
popa
insl
aad
je
lods
fisubl
or
iret
adc
inc
int
xchg
clc
sub
xor
or
sbb
xorl
std
pop
dec
lahf
stos
push
sarb
repz
popa
mov
testb
and
cwtl
dec
mov
and
bswap
popa
clc
jge
xlat
lods
mov
test
pop
insl
cmp
loopne
sbb
push
xchg
adc
mov
fwait
shr
jb
cmp
in
stos
dec
xchg
xchg
jl
loopne
xor
xlat
dec
xor
stos
pop
std
pop
mov
and
pushf
shrl
ja
int
jnp
das
xor
test
stos
call
mov
or
pop
aaa
sbb
addr16
outsl
dec
dec
cltd
scas
out
add
fnstsw
mov
add
shll
mov
jne
fcoml
sti
jno
sub
jae
arpl
cmp
pusha
mov
sbbb
sbb
push
ljmp
push
lods
mov
mov
mov
add
scas
insb
sub
and
repz
fisttps
stc
ret
push
fnsave
sbb
aaa
mov
int3
pop
push
in
push
mov
das
cmp
adcl
sbb
leave
into
xchg
pop
aaa
push
push
scas
cmp
jge
push
inc
xor
inc
ds
nop
bnd
adc
lcall
int3
dec
lds
xor
push
roll
imul
leave
dec
aam
pop
pop
cmp
xor
sbbb
stos
mov
mov
in
mov
cli
push
ficoml
push
pusha
xor
stos
lock
fsubp
push
jbe
pop
pop
push
icebp
ljmp
push
jecxz
jle
push
push
cmp
lcall
stos
fs
cmp
jns
inc
xchg
jne
and
mov
dec
sub
cli
fsubs
pop
scas
insl
xor
rolb
jae
sub
mov
sub
mov
andb
or
fistpl
cmp
in
mov
divb
mov
cmp
lret
cmp
loope
jge
mov
sbb
lock
daa
out
pop
push
mov
cmp
and
inc
pusha
cmp
mov
ss
fmul
sbb
lret
pop
inc
adc
movsl
xchg
cmp
arpl
mov
imul
fldpi
pop
pop
and
push
jge
mov
es
or
movsl
mov
fists
or
fdivr
addr16
lods
insb
sbbb
fld
outsb
xor
js,pt
outsb
shl
mov
add
pop
jb
test
fdivrs
xor
add
cmp
out
jb
gs
sub
repnz
ret
cs
mov
scas
dec
pop
cmp
loopne
xor
pushf
dec
add
or
fcomps
fcomip
pop
in
shlb
fs
lds
daa
xchg
mov
rolb
jne
in
lds
add
test
and
les
jecxz
addl
jmp
cs
aam
shlb
subb
les
add
fwait
push
mov
mov
pop
cmpsb
int
lods
mov
repz
fnsave
popa
inc
or
les
out
pop
cmp
aam
cli
jge
xchg
ror
popa
or
adc
into
push
cmp
in
clts
inc
cmovl
lea
flds
sbb
cli
push
pop
sbb
push
cmpsb
lret
cmp
mov
outsl
ficompl
add
cpuid
push
lods
sub
jg
mov
pusha
xor
cwtl
adc
cld
pop
push
insl
jl
in
sbb
das
sbb
inc
cmpb
js
adc
xor
xchg
lret
movsl
sbb
jp
mov
stos
add
jbe
mov
sbb
sbb
and
cmp
sti
mov
dec
test
aas
pushf
inc
lods
inc
hlt
push
sub
xchg
sbb
inc
cmp
call
adc
mov
ljmp
cmp
insb
fdivr
sbb
iret
pushf
ret
adc
push
xor
push
ss
inc
and
pop
imul
arpl
data16
xchg
jns
inc
lcall
mov
divb
jnp
xchg
jae
mov
mov
shll
outsl
sub
iret
stos
int
test
lods
add
sahf
test
inc
pop
cmp
mov
syscall
push
push
adc
roll
lds
ja
sarl
fs
clc
mov
mov
add
cltd
pop
pop
daa
dec
xor
cmp
or
mov
sub
movsb
je
in
push
sub
add
inc
push
fidivl
mov
jno
rcr
pop
int3
jne
in
cmp
jl
push
cmpsl
add
lock
inc
pop
dec
ja
jb
movsb
lds
into
pop
into
xor
xchg
xchg
inc
add
cmp
inc
sbb
add
push
or
test
mov
stos
lds
mov
xor
inc
fldcw
mov
sub
cmc
adc
adc
in
punpcklbw
cmp
rcrl
nop
cmpsb
in
lret
out
mov
loope
mov
lds
dec
je
mov
pop
pop
call
add
inc
inc
cs
out
cmp
inc
push
inc
pop
and
sahf
and
into
int3
mov
pusha
xchg
repnz
mov
ret
or
inc
mov
lock
push
pop
lods
sti
jg
xor
mov
sub
inc
xor
ret
cmp
cltd
std
push
dec
insl
mov
lods
mov
loope
dec
lea
imul
push
dec
push
sahf
pop
addl
inc
cmpsb
dec
nop
adc
adc
push
dec
data16
cmp
icebp
dec
stos
lock
lds
xchg
js
jecxz
fisubrl
repz
shrl
test
or
jnp
cmpb
xor
bound
mov
cmp
mov
push
in
mov
jo
cmp
dec
sbb
mov
ret
pop
mov
mov
jns
jg
loop
scas
cmp
xor
cmp
daa
mov
sbb
sbb
rclb
pop
or
stc
jmp
ds
mov
xchg
jb
fwait
pop
xor
mov
inc
mov
popf
xchg
xor
mov
in
cli
sub
sbb
mov
nop
xchg
int
jecxz
das
mov
mov
xchg
adc
shll
test
mov
stc
sub
mov
fadd
lea
mulb
jo
daa
mov
mov
negl
fisubs
ljmp
lret
jle
push
inc
data16
pop
dec
add
mov
sbb
inc
gs
stos
add
inc
sbb
xor
ret
mov
ljmp
mov
push
idivl
and
or
mov
lock
mov
mov
in
xor
xchg
adc
cmp
sbb
cld
inc
js
xlat
push
add
test
sbb
dec
fistl
insb
xor
cltd
out
cltd
repnz
cltd
lret
jns
xchg
das
or
notb
popf
sar
xchg
pop
jmp
fsubrl
xchg
cltd
cmp
lods
flds
outsl
ja
mov
test
lret
out
and
or
sub
imulb
cwtl
mov
push
push
loopne
aam
int
ret
and
xchg
fcom
mov
testb
lcall
and
into
sbb
rcl
cmp
lds
insb
call
add
push
aaa
inc
rcr
scas
cltd
mov
ret
mov
xor
in
mov
call
fxch
scas
push
mov
cmp
movsb
in
mov
sbb
pop
pop
fstl
mov
xchg
cmc
cmpsl
lock
inc
cs
lods
mov
dec
pop
xor
and
in
jl
fs
shll
fists
and
inc
push
out
jl
or
das
sub
mov
xor
mov
pop
sahf
jnp
cmovl
add
add
mov
or
int
mov
pop
rolb
lock
and
xchg
pop
fs
push
fimuls
mov
or
mov
fldcw
clc
icebp
loop
and
sub
cmpsb
lahf
shll
xor
xor
mov
xchg
inc
pop
sub
lahf
test
sarl
mov
or
mov
jg
add
cmp
adc
fidivl
aad
dec
gs
out
or
mov
or
call
xchg
in
jns
test
cmp
sub
jle
adc
dec
add
sar
jmp
repz
std
inc
mov
ja
clc
popa
sbb
sti
mov
bound
mov
adc
in
mov
push
lea
inc
fimuls
rorl
into
nop
mov
into
icebp
mov
or
bound
xchg
jno
mov
jns
in
mov
data16
imul
or
repnz
mov
inc
icebp
mov
es
mov
mov
sbb
pop
mov
adc
loope
and
and
inc
iret
jp
pusha
out
cli
xchg
xchg
mov
mov
addr16
sbb
adc
push
stos
lret
sbbb
push
rcrb
add
push
push
test
outsl
fistl
jbe
test
jl
xchg
jne
or
mov
lods
push
push
jns
push
in
in
fwait
rcrb
cmpsl
sub
lods
dec
cmp
sub
xor
into
rcll
jge
sub
sbb
fists
push
mov
inc
movsb
xchg
aas
mov
cmpb
add
jp
out
orb
pop
or
jnp
insb
jp
lods
enter
lods
iret
bnd
outsl
fwait
inc
cmc
imul
adc
enter
shl
xor
movsb
inc
cmp
dec
push
aas
push
imul
out
insl
pop
mov
loope
sbb
pop
popf
pop
lahf
xor
aam
ret
xor
jp
xchg
pop
adc
lds
fisttpl
cmp
data16
fdivl
movsl
stos
inc
icebp
dec
xorb
cmp
jecxz
add
xchg
mov
pop
aam
js
pop
xchg
mov
cmp
les
or
test
in
add
push
test
push
or
das
scas
lock
mov
outsl
mov
outsb
push
jmp
fistpl
ficompl
fistps
scas
pop
and
sti
data16
sub
mov
dec
sub
insl
ja
sub
sbb
lret
fisttpl
mov
add
inc
lcall
lods
cmovs
lds
push
fcoms
and
push
outsb
and
imulb
fldcw
push
mov
adc
dec
jmp
adc
mov
sbb
fcmovbe
scas
dec
test
push
faddl
push
pop
pop
pushf
xchg
push
jg
stc
cmp
std
inc
mov
mov
xchg
adc
or
dec
jb
repnz
xlat
imul
mov
nop
pop
pop
leave
or
jle
fisttpll
imulb
aaa
push
cmp
cld
mov
or
shlb
dec
or
push
cmp
sbb
mov
mov
enter
repz
mov
jle
lret
add
into
int3
std
jecxz
xchg
xor
in
loope
iret
jb
and
push
mov
push
decl
push
sti
into
lock
shrl
stc
ss
jg
or
fistpll
xchg
push
repnz
dec
dec
lahf
push
adc
shr
dec
cmp
sti
cmp
fistpll
and
dec
xor
push
mov
dec
ds
int
push
stc
sbb
aam
add
jp
aaa
int3
mov
mov
pushl
mov
inc
add
in
jne
stos
fldcw
aas
xchg
call
lock
or
testl
add
adc
pop
or
xchg
mov
jle
pushf
dec
psubd
dec
cli
mov
and
dec
add
aas
or
sub
jg
inc
push
mov
pop
inc
psllq
mov
xor
push
in
cmpl
lret
in
mov
mov
or
xor
data16
push
pop
mov
fistl
mov
mov
fwait
ljmp
or
inc
rcr
sub
push
and
adc
sbb
or
nop
test
imul
insb
sahf
pop
negb
std
ds
das
dec
imul
test
mov
dec
aaa
inc
int
sti
pop
cmp
mov
adc
dec
lods
movsl
sub
mov
out
pop
jno
ds
cmp
test
cli
movsb
cmp
xlat
push
fwait
jo
and
sbb
mov
inc
je
mov
sub
sbb
xlat
cmp
lahf
stos
xchg
fwait
push
rcll
mov
or
sahf
push
lret
sbb
ja
mov
jb
mov
ja
loopne
arpl
add
xor
jg
sub
or
fidivs
dec
in
popa
add
inc
ret
addr16
and
dec
imul
fistpl
dec
ret
repnz
jmp
mov
jle
pminub
jmp
stos
ss
add
das
cli
fisttps
add
cmp
ret
push
fsub
pop
out
sbb
add
les
jnp
stc
rcr
mov
cmp
jl
fildl
inc
jl
js
dec
lret
and
mov
lret
jns
mov
sub
ljmp
cmp
mov
cmove
ret
sbb
loope
repz
outsl
sub
shl
push
sub
and
or
sbbb
inc
adc
xchg
pop
push
lret
lods
jb
int3
jge
das
sbb
rol
inc
push
pop
cmpb
push
jmp
fidivl
sub
xor
int3
push
int
mov
call
push
stos
mov
dec
mov
bound
adc
pop
movsl
sub
sahf
movsl
jge
es
jb
xor
imul
mov
loop,pt
or
cmpsb
xor
lret
push
or
repnz
pop
repnz
pop
addr16
mov
mov
sbb
es
jl
push
cmp
or
or
pop
jnp,pt
std
pop
inc
stos
fcoms
xchg
mov
add
jbe
bound
or
dec
js
leave
ljmp
scas
data16
sbb
test
cmp
sub
xchg
and
outsl
inc
ret
add
aaa
clc
ja
mov
mov
out
fdivs
jbe
sub
dec
adc
cs
aam
test
adc
add
inc
push
call
lock
push
in
mov
test
arpl
stc
je
test
hlt
pop
inc
dec
mov
mov
sub
pop
inc
mov
rcrl
mov
shl
push
mov
les
lcall
icebp
dec
outsl
inc
outsb
mov
add
fisubrl
cmp
cmp
push
xor
push
cld
dec
push
scas
frstor
insl
xlat
movsb
push
mov
add
mov
enter
les
mov
mov
mov
cli
sbb
popa
loop
lods
aaa
loopne
adc
imul
jo
nop
addb
lock
sub
pop
pop
jle
mov
pushf
adcl
idivb
mov
pusha
mov
mov
cmp
jb
add
mov
int
imul
popa
jbe
adc
cmpsl
out
xor
ljmp
ud2
xor
insb
imul
and
out
jp
mov
mov
pop
lea
fimull
sub
or
pop
mov
adc
mov
idivb
inc
adc
xchg
jae
loope
outsl
add
mov
int
orb
push
push
sub
ds
outsb
cs
xor
mov
mov
shr
sub
dec
xchg
jle
ret
and
repz
jae
int3
xor
mov
adc
jmp
cmp
mov
jg
test
push
fnsave
inc
fistl
mov
xor
out
sub
xchg
fldt
loope
jbe
mov
test
lods
sub
int3
adc
mov
leave
jp
mov
cmp
stos
das
inc
dec
pop
lret
ljmp
sub
mov
sbb
imul
stos
xchg
adc
cmp
or
mov
dec
mov
std
or
rcll
add
or
mov
clc
sarl
xchg
lods
inc
cmp
mov
adc
hlt
fucomip
push
add
inc
fstl
in
dec
or
in
cmp
repnz
loopne
pop
adc
sub
xor
and
add
push
pop
jg
push
test
mov
dec
and
adc
mov
subb
xor
test
inc
std
xchg
fildll
xchg
adc
in
cs
in
mov
test
add
mov
cmc
mov
arpl
inc
negb
cmpsl
mov
mov
fildll
es
sub
jo
ret
pop
mov
inc
sbb
gs
jmp
lea
in
shrb
rol
aaa
movsl
and
and
hlt
iret
lods
ljmp
mov
test
fsubrp
adc
rcll
out
xor
in
movl
cmp
test
daa
leave
in
push
dec
sub
cli
fidivrs
lods
sbb
xchg
iret
jno
shlb
ja
jge
pop
or
stos
inc
orl
mov
in
xor
push
xchg
fldl
mov
jne
pop
popa
lcall
add
insb
jmp
sahf
jns
ljmp
add
data16
or
call
fsubp
sbbb
xchg
mov
pop
lock
add
xor
pop
push
xor
leave
fidivrl
push
filds
scas
adc
mov
adc
jae
jmp
jle
pop
test
xor
push
fiadds
outsl
ret
pop
fucom
movsl
xchg
jno
xchg
adc
rcll
sbb
fsubl
or
jl
dec
lods
fimull
pop
shlb
xchg
or
or
sub
ja
push
lahf
push
or
testl
add
cmp
lds
pusha
pop
push
movsb
fldcw
gs
pop
xchg
nop
outsl
ror
fisubrs
nop
je
cmp
adc
mov
dec
add
pop
jo
add
arpl
jnp
lcall
sbb
mov
xchg
shlb
mov
fwait
nop
jno
sarb
xchg
fildl
popf
out
loopne
int3
sbb
in
and
sbb
mov
in
xor
sub
sub
incb
add
ds
mov
push
mov
jge
sub
in
xchg
sub
repnz
int3
cmp
outsl
shlb
shlb
sahf
jecxz
push
sbb
mov
push
mov
xchg
mov
and
mov
cmp
fadd
mov
or
add
ficoms
jnp
dec
pop
xchg
jge
das
cltd
clc
lret
es
in
xchg
jo,pt
clc
ja
ds
and
sbb
dec
xchg
arpl
or
lock
pop
xor
fisttpl
mov
cmp
dec
mov
mov
or
and
mov
out
out
adc
lock
shrl
push
inc
adc
lahf
mov
mov
inc
lock
mov
push
push
jp
pop
mov
jns
clc
adc
or
clc
mov
das
mov
out
pushf
xchg
cmpsl
add
std
ja
pop
lock
cwtl
sub
inc
cltd
sub
in
sub
xlat
clc
lea
xchg
push
push
xor
loopne
daa
push
push
es
cmp
or
dec
inc
out
sbbb
jl
and
pop
mov
insb
dec
sub
inc
repnz
adc
popf
sbbb
in
sub
in
popf
sbbl
inc
es
mov
mov
jmp
push
pop
mov
mov
adc
xchg
push
xchg
sub
fisubrs
lock
jo
mov
pop
mov
push
xor
mov
mov
dec
into
add
adc
inc
daa
repz
adc
xchg
mov
daa
repnz
adc
xor
fwait
xor
aas
dec
test
push
jns
dec
in
inc
jle
add
fiaddl
fwait
cmp
es
dec
loope
shl
cmpsl
dec
stos
pop
mov
push
or
fstpt
daa
imul
mov
ja
mov
insl
mov
xor
jb
sub
mov
int3
loop
jno
or
pushf
insl
je
jg
cmp
loope
push
mov
test
mov
sarl
dec
xor
mov
add
aad
movsb
aas
les
jecxz
mov
cwtl
add
inc
inc
dec
insb
faddp
jne
mov
sub
cmp
in
bound
iret
dec
lret
jle
sub
sti
mov
aas
cmp
and
fisubrs
xor
pop
insb
mov
mov
mov
imul
out
sarb
lods
xor
inc
lcall
cs
pop
std
push
aas
jno
cli
out
call
adc
andl
dec
xor
in
jecxz
inc
jbe
jg
setg
es
nop
lds
popf
fistpll
or
in
push
mov
adc
jne
jbe
pop
fcompl
inc
pop
call
mov
add
cmpsb
jp
jne
xor
dec
or
cmp
es
outsb
enter
push
push
rclb
mov
add
adc
or
push
sti
testl
xor
ret
imul
inc
aas
cmpsb
dec
jb
push
adc
repz
popa
outsb
sub
addr16
test
and
out
or
push
clc
repz
stc
jbe
scas
scas
lock
sbb
pop
sbb
iret
xlat
and
lock
push
or
fs
ss
into
sub
sbb
cmp
add
cs
jg
xchg
mov
jne
stos
addr16
inc
add
and
test
int3
xchg
push
add
or
xor
jp
pop
int3
ret
push
scas
ret
jmp
jo
fmul
adc
sbb
push
push
push
push
ds
push
dec
lds
xor
jl
enter
pop
mov
cmpsl
test
mov
xchg
test
in
cmp
rcr
mov
xor
add
add
daa
rcl
sbb
pop
jmp
xor
mov
add
inc
xlat
lcall
pop
adc
xor
add
aam
pop
sbb
adc
and
scas
aam
bound
pop
cmpsb
sub
sahf
ret
in
push
arpl
repz
add
cli
mov
daa
mov
lcall
and
cmpl
lcall
add
mov
aaa
in
xorb
push
roll
pop
add
push
hlt
xor
mov
xchg
imul
jno
insb
outsl
xorb
insb
mov
xchg
xchg
dec
mov
cld
and
mov
mov
push
push
and
mov
mov
fisttpll
mov
push
dec
jge
repnz
xor
xchg
xchg
ret
dec
mov
adc
mov
jo
lret
or
push
mov
cmp
mov
rcrb
mov
mov
xor
repz
fwait
add
xor
out
cli
mov
in
fldcw
xlat
outsb
inc
cs
outsl
dec
add
fists
aas
arpl
testl
xlat
inc
cltd
decb
ljmp
lahf
loopne
mov
push
xor
xchg
inc
mov
stos
mov
jns
int3
repz
movl
push
ds
mov
lds
in
dec
sbb
jecxz
pusha
xor
pop
push
out
jmp
scas
sbb
fldcw
push
neg
mov
in
mov
scas
or
push
and
jg
std
jnp
pop
mov
cli
insb
sar
mul
sbb
jns
or
pop
and
ret
cltd
cmp
das
push
mov
shl
lock
push
inc
or
mov
push
or
scas
je
lcall
fidivl
js
xor
arpl
mov
cmp
fisubs
add
lcall
mov
in
pop
popf
push
ja
icebp
jne
int3
add
xor
or
in
mov
and
pushf
dec
sub
clc
xchg
cwtl
push
sub
mov
sbb
hlt
pop
xor
cs
mov
pop
mov
in
jne
lret
pop
pop
in
adc
cmp
mov
mov
test
inc
ret
in
inc
outsb
cltd
cmc
ljmp
jmp
push
sub
lds
inc
and
scas
cs
cmp
call
fidivs
test
sbb
add
inc
sbb
in
mov
shr
hlt
pop
mov
cmpsl
push
gs
mov
arpl
into
add
sbb
pop
inc
scas
fs
scas
xchg
push
pop
mov
and
xor
or
mov
add
mov
out
out
pushf
or
inc
adc
pop
mov
in
inc
std
inc
aas
push
arpl
popf
sbb
lret
jo
add
xchg
and
xchg
subl
mov
fmul
insl
std
iret
sbb
les
insb
lret
push
and
lds
mov
shlb
mov
mov
xor
testl
add
cmp
aam
inc
jbe
mov
mov
mov
adc
rcll
sti
fstp
sbb
rcl
stos
out
loopne
testb
outsl
jnp
xlat
test
mov
xor
pusha
or
daa
jo
add
cmpsl
sbb
push
mov
mov
mov
arpl
adc
jp
inc
fnsave
cmp
dec
in
cmpsl
add
in
or
add
addr16
pop
sbb
cmc
das
lea
sbb
push
xchg
cmpsl
cwtl
roll
shlb
and
pop
shl
insb
xlat
push
iret
out
sub
pop
movsl
push
pop
outsl
popa
les
movb
inc
mov
pop
cltd
insb
out
mov
mov
fs
mov
mov
push
lds
push
in
add
xchg
cmp
jne
add
cmpsl
jl
mov
leave
xchg
xchg
mov
sbb
mov
mov
xlat
dec
push
cmc
xchg
cs
insb
jge
and
mov
mov
xchg
fnstenv
sbb
pop
or
daa
bound
cmp
test
dec
jnp
mov
lods
xchg
xchg
int3
xchg
pop
ffree
sbb
lds
ljmp
ds
adcb
mov
movsb
icebp
pop
push
inc
loop
ljmp
mov
pusha
lods
dec
adc
jb
mov
repz
leave
pop
or
rcrb
les
lret
mov
and
mov
aad
stos
xchg
icebp
add
cwtl
lahf
ss
out
adc
push
loopne
adc
int3
jmp
mov
mov
outsl
jne
and
cmp
stos
iret
jmp
int3
pop
arpl
leave
jbe
xchg
jnp
or
sti
push
outsl
pop
popf
hlt
repnz
sub
add
out
push
mov
push
cmp
adc
jl
out
shlb
cmpsb
icebp
or
rcr
rolb
aas
into
dec
mov
popf
daa
cmp
sti
inc
stos
cmp
add
shl
mov
push
scas
lock
pop
pop
shl
pop
mov
push
dec
repnz
stos
enter
shlb
in
out
int
fcmovu
ret
or
mov
push
fsubl
or
ja
repz
call
stos
lock
mov
test
pusha
adc
push
or
cmp
sub
movsl
mov
xor
jo
dec
pop
shrl
mov
clc
adc
test
popa
sbb
pop
inc
outsb
loopne
dec
xor
fnsave
and
adc
iret
mov
repnz
adc
outsl
ljmp
xchg
xchg
ret
mov
sbb
test
fdivl
pop
sub
cmp
outsb
dec
lods
mov
test
sub
test
mov
int3
imul
mov
cs
popa
cmp
mov
mov
push
std
ss
movsl
movsl
mov
and
imull
int
es
ljmp
stos
jp
add
lds
xor
cmp
push
arpl
mov
xor
dec
jle
mov
loope
and
out
sub
mov
stos
cmc
adc
test
pop
pop
sub
inc
sti
adc
mov
adc
dec
cwtl
fnstenv
mov
mov
rorl
adc
orb
pop
stos
in
adc
into
fsubl
scas
scas
imul
add
mov
and
loopne
mov
xchg
xor
jecxz
outsl
aam
fcoml
and
cmp
xor
in
push
mov
add
lret
outsb
pop
and
inc
lcall
ds
cmpb
mov
push
adc
fs
mov
outsb
imul
mov
lds
push
sub
pop
stc
or
in
aad
fadds
adc
into
popa
cmpsl
loop
adc
ja
inc
add
mov
xor
shrb
ret
out
mov
outsb
das
fdivs
sarb
out
data16
sbb
ja
ret
pop
fwait
leave
xchg
ret
xchg
inc
fists
decl
fimull
pushl
jns
in
mov
dec
push
popf
aaa
lret
sub
xchg
push
xor
fmuls
sub
scas
xchg
jns
cltd
scas
dec
mov
and
aaa
mov
pop
ds
pop
addl
pop
push
idivb
gs
repnz
aad
mov
jne
push
pop
xchg
not
inc
aad
adc
add
imul
je
dec
ficoml
xor
jbe
fcomps
testb
sbb
lret
ret
fwait
sub
cmp
jae
out
xchg
mov
clc
xor
pop
mov
fistl
pushf
test
dec
daa
in
filds
inc
add
lret
lods
bound
repz
fs
cmp
stos
stos
clc
push
or
out
int
andb
hlt
les
mul
inc
dec
lea
faddp
adc
jb
addr16
dec
xchg
dec
push
shlb
lcall
bsf
mov
mov
xor
xor
das
or
jge
call
in
sub
fwait
dec
cmpsl
lret
lea
xchg
fidivrs
dec
scas
mov
fdivrl
inc
movsb
inc
add
xor
lret
or
push
pop
adc
clc
jbe
fldz
cmp
rcrb
std
lret
xchg
push
in
loopne
loopne
push
leave
loop
cld
xor
xchg
addr16
jmp
pop
lods
mov
adc
mov
inc
cs
or
fidivrl
and
addr16
push
jle
push
pop
shrb
and
mov
and
jae
mov
cmp
cwtl
fwait
jp
rolb
adc
cmp
mov
mov
cmpsb
add
xchg
shll
decl
push
cltd
cmp
scas
bnd
mov
or
mov
shlb
sbb
aas
cmp
pop
scas
push
repnz
sbb
pop
sbb
push
roll
jnp
cmpsl
negb
in
sbb
push
sub
or
lods
cmp
fadds
mov
mov
in
jge
push
mov
dec
ret
aaa
dec
lcall
dec
cmp
or
cmp
psubd
xor
inc
xchg
out
jp
mov
scas
inc
add
sub
push
fwait
jmp
xchg
insb
scas
pop
test
jmp
scas
shlb
loope
scas
jb
ror
je
negl
mov
mov
fldenv
test
call
jo
mov
xor
and
push
sub
dec
in
mov
pop
xor
xchg
popf
aas
pop
jbe
adc
lock
adc
ret
mov
mov
sbb
sub
mov
mov
mov
andb
pop
mov
push
fsubl
mov
es
xor
dec
imul
mov
std
sub
pop
aad
nop
fisubrs
cmp
jecxz
fdivrp
icebp
jae
mov
aam
and
cmc
arpl
test
dec
out
push
mov
out
jno
mov
push
in
xchg
gs
xchg
mov
pushf
pop
scas
dec
test
ljmp
inc
repz
stos
lods
es
loop
sbb
xorl
subl
mov
pop
gs
outsb
dec
lea
aaa
shrl
lahf
mov
mov
pop
pop
xchg
fs
insl
call
push
jno
pop
or
mov
cmp
imul
pop
sahf
fnsave
scas
daa
loope
dec
cld
outsb
dec
dec
sbb
arpl
xchg
popa
mov
rolb
cld
lret
sbb
or
lahf
fidivl
je
sbb
mov
mov
sti
popf
pop
sbb
cmp
shll
or
std
lret
ja
lcall
pop
into
adc
outsb
sbb
inc
inc
add
adc
mov
mov
dec
fnstsw
addl
cmp
movsl
jl
icebp
out
ljmp
test
aam
mov
fcmovbe
xchg
lcallw
and
das
mov
jg
inc
xor
inc
scas
loopne
insb
cmp
stc
pop
add
dec
dec
insl
hlt
mov
inc
or
loope
fnstcw
xchg
pusha
pop
data16
data16
mov
jl
cld
inc
lret
gs
adc
or
loop
sbb
lock
xor
in
dec
cltd
pop
cmpsb
mov
testb
js
push
mov
mov
push
push
dec
movsb
lret
mov
in
cwtl
mov
mov
jne
sub
xor
push
xchg
into
nop
pop
jb
sbb
lea
mov
cld
in
popa
pop
ret
push
out
jb
gs
or
inc
idivb
fwait
out
dec
mov
clc
repnz
ja
pop
imul
shl
iret
cmp
inc
lahf
sub
adc
pop
or
repz
jns
xchg
pop
cmp
out
sub
jae
inc
mov
mov
fwait
lcall
das
add
inc
hlt
arpl
mov
cwtl
mov
je
cld
pop
inc
scas
outsl
or
jnp
jo
ret
push
xchg
rep
out
push
jae
arpl
cmp
xor
pop
mov
add
dec
xchg
sti
loopne
mov
lods
push
xchg
loopne
lods
pusha
mov
clc
xchg
test
adc
stos
pop
jbe
lahf
aad
sarb
mov
xchg
xor
jg
jbe
jns
sbb
mov
imul
sbb
mov
cs
sti
cltd
mov
out
call
or
jo
dec
ret
jle
jb
dec
sbb
dec
lahf
imul
inc
dec
mov
clc
mulb
mov
xchg
incb
xchg
sbbb
loope
lods
out
xor
jge
sbb
in
jno
daa
lods
daa
and
push
loope
sub
mov
stos
pop
sub
inc
in
cmpsb
inc
arpl
mov
sahf
xchg
ret
mov
cmp
movl
fs
fdivl
lret
xchg
mov
xor
push
or
mov
adc
sub
sub
adc
push
ror
push
xor
mov
loopne
jl
repnz
jae
or
dec
fimull
lods
jno
sbb
mov
cmc
or
outsl
popa
ss
add
outsb
jg
fdivl
add
dec
aas
mov
push
or
mov
fwait
in
pop
into
mov
cli
in
cmpsb
iret
je
cmp
jne
jl
and
ljmp
inc
test
mov
popf
xorl
mov
shrb
icebp
jge
hlt
lods
add
pop
cli
cmp
push
lret
dec
xchg
cs
popl
mov
nop
loopne
xchg
or
jns
push
jmp
mov
mov
xchg
jl
sti
jle
jae
sarb
insb
dec
add
sub
testl
or
xchg
repnz
jmp
addr16
int3
dec
je
fistpll
mov
jns
pop
mov
xchg
lods
loopne
dec
cld
mov
fsubs
jp
mov
mov
pop
sbb
sub
mov
mov
and
jns
xchg
push
inc
inc
dec
cmp
pop
out
stc
pop
mov
shlb
js
and
sub
push
mov
or
push
jno
jl
insb
insb
push
fisubrs
scas
out
mov
push
aad
cld
inc
pop
shl
jmp
loop
mov
std
int
dec
push
popa
sti
mov
or
lods
add
fldt
loopne
seto
push
jns
hlt
xor
in
js
xchg
jge
or
pop
fidivl
add
in
popf
aad
fiadds
sub
mov
leave
popf
sbb
std
shl
cmc
rcrl
js
xchg
rcll
shrd
pushl
mov
out
mov
sbb
mov
lea
or
mov
mov
repz
add
pop
hlt
fldl
xlat
aad
mov
loope
sti
or
mov
push
test
add
or
xor
lods
mov
shrb
repz
sbbb
lea
pop
outsl
arpl
mov
adc
mov
ljmp
mov
xchg
xor
mov
lcall
jle
jmp
je
adc
sub
mov
pushf
subl
dec
sub
lods
push
jle
negl
jecxz
pop
and
pop
cwtl
stc
loopne
sub
inc
pop
xor
push
fstl
mov
in
xor
mov
jae
mov
shll
push
and
inc
sbb
mov
sti
mov
aas
pop
lcall
mov
xchg
test
movsb
in
dec
mov
add
lea
flds
add
sbb
movzbl
inc
lea
xchg
add
lea
mov
xor
xor
movswl
lea
inc
lea
inc
mov
and
dec
jne
mov
mov
dec
or
pop
inc
dec
pop
or
inc
pop
dec
add
mov
add
mov
inc
inc
inc
mov
mov
imul
add
ret
push
push
dec
sub
push
dec
movsbl
lea
mov
dec
add
push
sub
lea
lea
mov
push
movswl
lea
mov
lea
imul
dec
or
push
imul
mov
lea
push
mov
mov
xor
movzwl
mov
push
lea
mov
push
inc
lea
pushl
add
call
sub
add
mov
inc
inc
mov
lea
dec
xor
pop
ret
mov
lea
mov
cmp
jb
imul
xor
inc
mov
mov
sub
mov
sub
sub
inc
inc
and
add
mov
sub
dec
cmp
jb
dec
pop
lea
dec
xor
imul
add
lea
add
inc
movsbl
add
inc
inc
mov
xor
inc
dec
xor
add
mov
sub
mov
test
jbe
mov
dec
sub
mov
add
inc
movswl
mov
mov
mov
add
inc
and
and
mov
mov
dec
lea
movzbl
add
dec
add
xor
add
and
mov
inc
mov
add
sub
mov
or
mov
mov
lea
add
mov
inc
sub
lea
dec
sub
dec
dec
jne
dec
mov
lea
mov
dec
dec
sub
imul
movzwl
sub
add
mov
mov
dec
dec
add
mov
mov
inc
inc
mov
mov
inc
test
jbe
imul
lea
movzwl
mov
lea
or
sub
sub
sub
add
dec
dec
sub
lea
mov
inc
movzwl
dec
mov
imul
movzbl
mov
and
mov
xor
mov
or
mov
movzbl
add
dec
add
lea
sub
and
sub
imul
mov
or
dec
movzbl
sub
dec
mov
dec
lea
mov
sub
mov
movzbl
mov
add
add
dec
jmp
push
mov
sub
sub
mov
mov
inc
inc
lea
dec
sub
mov
mov
mov
mov
sub
imul
inc
mov
lea
inc
mov
inc
lea
inc
mov
lea
add
dec
mov
dec
imul
xor
dec
imul
mov
movzbl
lea
dec
or
cmp
je
imul
mov
mov
push
mov
call
call
add
imul
call
call
dec
or
add
mov
mov
and
dec
ret
dec
add
pop
lea
ret
push
xor
mov
mov
mov
mov
push
inc
dec
push
imul
push
dec
push
mov
mov
xor
inc
dec
call
dec
push
mov
mov
xor
lea
sub
dec
neg
add
inc
dec
mov
lea
inc
mov
add
mov
mov
mov
inc
inc
mov
lea
dec
je
mov
mov
mov
mov
lea
inc
mov
add
add
add
sub
repnz
sub
xor
add
lea
jmp
dec
and
lea
mov
inc
imul
inc
movswl
inc
imul
and
add
add
dec
jmp
push
xchg
jl
push
mov
sbb
das
mov
mov
je
push
inc
flds
jp
dec
lds
and
mov
filds
cli
xchg
or
push
ret
dec
adc
pop
xor
mov
int
aad
ds
add
mulb
icebp
andb
iret
fcompl
inc
mov
out
push
int
xchg
popa
push
jmp
mov
mov
repz
scas
ljmp
add
cmp
lcall
xor
or
js
sbb
int
mov
insl
cwtl
negb
shll
aas
daa
or
push
jle
in
dec
pop
mov
dec
add
xor
pop
adc
mov
lcall
pop
mov
aam
dec
xchg
sub
mov
je
inc
imul
iret
sub
iret
xlat
ja
lock
test
jl
lret
popf
stc
bound
push
outsl
fdiv
test
outsb
jecxz
dec
gs
mull
jno
ss
inc
push
scas
jge
loope
mov
pop
outsl
fs
cmp
outsl
xor
movsb
les
lods
lahf
daa
out
cmpxchg
mov
mov
fidivrl
xor
lods
pop
xchg
add
stos
cmp
cmpb
jmp
and
ljmp
rcr
xor
loopne
mov
pusha
push
add
movsb
sub
lock
test
jmp
inc
xchg
ja
out
sbb
pop
or
fbstp
mov
xor
outsb
dec
gs
cmp
aaa
or
popa
push
sti
stos
mov
or
lods
push
pushl
inc
cmpsb
aam
arpl
xchg
sbb
inc
scas
push
mov
mov
adc
push
das
movl
es
sbb
leave
xor
cmp
mov
push
xor
testb
pop
adcb
inc
mov
iret
push
rorl
es
mov
jp
ret
jp
loop
mov
push
inc
ret
cwtl
xchg
rcl
lock
jmp
daa
out
xor
mov
dec
sub
mov
fidivs
xchg
mov
mov
jbe
jg
mov
push
push
inc
loop
test
fldenv
cmp
push
inc
outsl
mov
outsl
loop
out
mov
xchg
jbe
daa
add
movsb
out
fwait
aad
push
aam
and
loopne
imul
stos
clc
mov
inc
push
pop
imul
sahf
or
mov
jno
in
shrl
mov
mov
push
es
cmpsl
fsubr
fstpt
jp
scas
popf
push
das
jl
insb
push
dec
push
cmc
ljmp
jmp
aas
and
mov
xchg
jmp
jnp
lret
out
cmc
es
xchg
das
mov
shl
insb
dec
pop
xchg
sahf
out
jge
push
lcall
inc
out
leave
ss
pop
lea
xchg
add
xchg
ret
add
mov
inc
mov
sti
rorb
xor
mov
adc
xlat
jle
popf
xor
std
mov
mov
testl
cmc
popa
out
sbb
insb
repnz
movsb
jg
fcomp
rorb
add
xlat
leave
and
js
push
or
inc
test
jns
xorl
or
jne
inc
xor
push
mov
test
lea
dec
fisubrs
sbb
mov
into
fdivrs
jbe
cmpsb
mov
out
hlt
dec
dec
push
ljmp
repz
xorb
pushf
or
sbb
cmp
cmc
fwait
test
ljmp
push
push
sub
mov
loop
mov
push
mov
test
pop
cmp
int
mov
enter
cmpsb
sbb
cltd
sbb
adc
mov
xchg
inc
jmp
cmp
sub
into
pop
mov
in
and
xor
push
lea
pop
cmp
dec
insb
into
iret
jmp
stos
nop
out
lret
pop
imul
fwait
test
and
jbe
mov
outsb
outsl
jns
movsb
andb
in
push
jno
jb
movsl
ja
lds
mov
idivb
jle
lods
push
xlat
pop
mov
gs
jecxz
loope
lock
imull
jb
jnp
loopne
vmwrite
mov
loope
and
loope
sub
rcll
das
out
sbb
push
add
dec
jge
icebp
mov
pop
sbb
add
lock
out
aad
ret
jmp
popa
ljmp
inc
fs
in
sbbb
sbb
pop
xchg
mov
aad
jp
jecxz
xor
xchg
lcall
xchg
lea
imul
push
cmp
and
push
adc
mov
stos
and
scas
or
pusha
dec
mov
xor
leave
jne
adc
lock
into
dec
jl
stos
jno
add
mov
flds
mov
inc
push
stos
inc
mov
mov
mov
pushf
cli
or
mov
sbbb
mov
loope
push
clc
test
int
add
mov
rcll
adc
mov
push
or
pop
push
xor
push
dec
add
rclb
push
dec
leave
push
pop
xchg
ljmp
jmp
cwtl
and
sub
xor
dec
push
movb
int
push
in
cmpsl
stos
stos
sbb
fisubs
and
dec
jle
dec
rcrb
mov
sbb
jl
out
in
pop
ficoml
pushf
mov
jae
inc
cmp
in
out
pop
out
psrlw
test
mov
cmpsl
sbb
inc
adc
dec
fistpl
filds
adc
sbb
xchg
stos
rcrb
add
xor
outsl
mov
pop
mov
lahf
icebp
xor
sub
and
andl
push
mov
or
mov
add
xor
mov
dec
shlb
cvtdq2ps
addl
dec
push
sbb
fdivrl
cmp
dec
test
fmuls
jp
imul
mov
inc
leave
jmp
loope
cli
mov
jno
push
adc
dec
xchg
inc
adc
inc
push
stos
mov
sub
sbb
imul
xor
jl
ja
sub
xchg
ret
mov
lds
push
jnp
mov
adc
push
jo
cwtl
xchg
jbe
sarl
dec
pop
popf
enter
mov
mov
mov
push
push
xchg
popa
cmp
sbb
add
sti
lahf
inc
arpl
filds
aas
xchg
lahf
aam
out
add
lahf
fisubrl
into
rcl
jo
or
bswap
and
filds
fdivrl
in
loopne
xchg
inc
cld
and
mov
sub
ror
adc
rorl
ret
out
ret
aas
jmp
inc
mov
lods
push
mov
sbb
repz
ret
xor
loopne
cli
es
mov
stos
cmpsb
ja
jle
lods
xor
outsb
inc
clc
fsts
mov
sarb
pop
insl
jbe
sub
shlb
inc
stos
repnz
or
into
or
sbb
les
xor
mov
cmp
test
add
sub
outsl
sbb
sbb
mov
sub
push
outsl
pusha
aaa
in
jl
and
jne
sbb
das
mov
mov
add
pushf
daa
push
test
test
and
movsb
stos
xchg
comiss
insl
push
or
mov
adc
mov
daa
cmc
mov
fdiv
daa
icebp
into
mov
mov
mov
add
into
mov
lods
inc
cwtl
js
out
test
and
pop
outsb
imul
ror
jge
push
inc
jb
push
test
orl
cmpsb
pop
sub
mov
pop
testl
xor
mov
into
adc
sub
xchg
mov
imul
push
pushf
push
stc
xor
dec
fdivs
push
or
jge
mov
idiv
mov
cltd
lea
and
pop
movsb
into
jne
lahf
xor
jge
or
pop
push
mov
aas
call
rsqrtps
mov
in
inc
pop
sbb
fwait
adcl
push
push
imul
mov
cmp
icebp
mov
outsb
mov
shrb
andl
nop
and
inc
sub
push
lret
lds
dec
mov
repz
or
fwait
sbb
inc
mov
push
mov
jp
imul
cmp
adc
ljmp
int3
mov
sti
xchg
ljmp
mov
fwait
mov
add
add
mov
add
mov
dec
aas
jne
jb
es
pop
jecxz
loope
ret
xchg
inc
inc
ljmp
adc
cmovb
outsb
in
out
and
rcrb
mov
ret
sub
xchg
imul
mov
andb
cmp
shll
sub
dec
xor
sahf
jp
mov
mov
mov
pop
xchg
insb
sbb
enter
outsl
insb
push
or
test
notl
fdivrl
mov
and
pop
nop
out
sbb
mov
adc
add
out
adc
mulb
dec
adc
test
lods
xchg
mov
xor
movsl
add
sbb
shrb
pop
dec
dec
push
mov
roll
xchg
mov
xlat
sub
sbb
das
cmc
lcall
lock
push
aad
pop
std
mov
dec
or
xor
or
xchg
fsubr
sbb
sub
in
pushf
fisttpl
aaa
sub
lret
xchg
adc
mov
repnz
jl
cmpsl
jle
fs
out
dec
mov
or
outsl
fsubrs
int3
mov
xchg
pop
cmp
loope
cwtl
daa
xor
jnp
testb
repz
inc
in
and
pop
xor
rolb
test
mov
pushf
jbe
inc
aam
fistps
xchg
imul
inc
test
add
cld
xchg
test
test
jg
sub
and
inc
lret
sub
jmp
insl
dec
imul
std
jg
adc
fnclex
push
mov
repz
add
ljmp
ss
aaa
sbb
ja
in
lods
cmp
jmp
and
push
jecxz
lcall
mov
sbb
and
aaa
addr16
dec
dec
pop
adc
rcrl
xchg
jnp
cwtl
lcall
xorb
test
mov
cmp
lcall
iret
mov
sti
jle
lds
dec
mov
ss
aaa
inc
mov
in
outsb
int
cmp
cwtl
mov
inc
or
and
fwait
inc
and
mov
sub
mov
enter
cmp
aam
test
sbb
and
fistps
sbb
jo
xor
xchg
adc
or
pop
pop
and
movsb
movsb
fpatan
add
clc
xchg
negb
and
sbb
dec
xor
sarb
lret
push
and
inc
inc
rcrl
scas
inc
out
push
lret
int3
mov
xchg
xlat
and
add
xchg
hlt
nopl
add
mov
mov
in
cmp
inc
push
or
cmp
adc
dec
sub
add
sysenter
fs
xor
ja
mov
jl
fildll
mov
jb
sbb
add
stos
adc
inc
push
mov
scas
pop
sub
hlt
and
mov
iret
xchg
mov
jecxz
dec
xchg
push
outsb
mov
stc
imul
ljmp
iret
bound
mov
ret
mov
fidivl
and
sbb
mov
xchg
push
adc
jo
int
dec
rcrl
cli
mov
leave
fsubrs
jo
and
fcoml
mov
insl
add
fcmovnbe
daa
lea
add
xchg
cmpsl
xchg
jp
imul
loopne
add
mov
into
sub
mov
insb
adc
cmp
and
mov
mov
sbb
mov
sub
push
push
testl
pop
rcll
js
aaa
mov
mov
stc
inc
shl
loopne
icebp
xchg
and
popa
iret
xor
cmpsb
lods
sbb
mov
popl
shll
mov
loope
jl
lret
mov
lahf
cmp
lock
push
lock
mov
or
cld
mov
fwait
cmp
mov
adcl
dec
xor
mov
repz
iret
lock
iret
imul
filds
xchg
mov
mov
in
lret
mov
bound
or
test
int3
fisubs
xor
lea
loopne
adc
movsl
jae
sub
mov
int3
mov
inc
fwait
int3
push
call
push
popf
pop
dec
ja
cwtl
xlat
mov
dec
test
js
hlt
add
lods
out
inc
inc
mov
mov
lret
mov
pop
sbb
ss
js
sbb
xchg
lcall
xchg
in
cltd
mov
ret
sti
xchg
iret
add
and
push
lahf
pop
aam
xorl
lods
xor
int3
adc
lods
jg
mov
hlt
sub
jne
leave
jae
int
rcr
sbb
adc
gs
jl
jo
fstp
fsqrt
or
adc
call
jmp
pusha
pop
jl
push
mov
mov
dec
xchg
add
add
push
lods
aad
mov
lds
sti
and
add
in
aaa
sub
cmp
jnp
pop
clc
int
inc
lds
rorl
inc
push
lods
popaw
mov
fimuls
shll
sbb
jg
or
dec
repz
stos
aad
gs
loopw
jns
xlat
mov
adc
int3
push
stos
rclb
movsb
sbb
outsl
leave
pushf
mov
push
setne
lret
fucomp
and
xor
testl
and
sbb
idiv
mov
push
mov
dec
xor
call
lea
imul
call
dec
push
call
imul
mov
inc
lea
dec
add
call
lea
dec
lea
sub
xor
inc
inc
inc
dec
lea
inc
inc
movzwl
call
or
add
inc
dec
mov
call
add
mov
call
add
mov
sub
mov
sub
add
lea
mov
lea
pop
imul
dec
imul
add
lea
pop
mov
mov
pop
mov
or
xor
imul
pop
mov
lea
inc
dec
mov
lea
mov
add
pop
mov
mov
pop
dec
mov
mov
lea
dec
call
sub
movzbl
and
dec
ret
mov
inc
push
lea
mov
push
inc
push
sub
mov
push
inc
lea
push
mov
inc
mov
lea
push
dec
ret
push
inc
push
imul
dec
mov
sub
push
lea
or
call
pop
ret
jmp
or
imul
pop
pop
ret
push
movzwl
imul
dec
lea
lea
lea
mov
movzbl
dec
xor
mov
sub
or
lea
mov
xor
movsbl
inc
lea
imul
mov
mov
dec
add
dec
imul
xor
imul
pop
ret
sub
or
mov
mov
dec
mov
inc
dec
mov
imul
sub
mov
lea
mov
xor
movzbl
imul
mov
xor
dec
inc
movsbl
imul
movzbl
imul
add
xor
cmp
jb
sub
push
lea
sub
push
mov
mov
push
inc
sub
xor
inc
dec
xor
imul
dec
xor
movsbl
dec
push
add
movzwl
push
dec
mov
pop
inc
sub
sub
add
add
sub
inc
mov
inc
xor
and
mov
add
dec
mov
mov
dec
movzbl
lea
inc
add
add
add
add
inc
movzbl
dec
add
dec
movswl
inc
imul
movsbl
or
inc
add
inc
mov
imul
movsbl
xor
jmp
add
inc
add
add
mov
add
inc
add
mov
add
rdmsr
inc
add
add
and
add
fs
xchg
jl
fsubl
lahf
inc
ss
and
lock
dec
mov
mov
mov
mull
jmp
mov
pop
es
mov
arpl
push
push
and
shlb
pop
mov
xlat
xor
and
pusha
inc
mov
aas
xchg
sbb
cmc
push
shl
es
cmp
in
mov
adc
xchg
js
aaa
mov
mov
aaa
dec
fisubs
repz
jecxz
inc
sub
cmpsl
jg
notl
or
dec
pop
popa
pop
lcall
sub
cmp
into
push
xchg
in
nop
pop
pop
or
fcmovne
xchg
or
jae
push
mov
sti
inc
test
ss
push
jg
loopne
jg
lock
or
push
inc
or
int
cli
dec
idivl
frstor
insb
cmp
push
xchg
imul
pusha
leave
jp
imul
dec
frstor
push
adc
rcl
lods
push
sub
dec
sti
cmp
cmpb
lock
out
pop
aad
sub
or
inc
dec
mov
sbb
add
imul
push
daa
sub
jns
das
int3
shl
xor
fs
je
sbb
mov
pop
xchg
inc
jg
lock
inc
sub
push
xchg
es
lods
loope
mov
insl
dec
pop
sub
xor
mov
mov
rcrl
pop
pop
or
in
mov
daa
pop
aas
mov
inc
dec
in
int
pop
add
xchg
and
add
inc
int
jmp
mov
pop
inc
jle
cmp
lods
xchg
inc
xor
cs
ror
shlb
sahf
mov
sbb
adc
inc
mov
dec
imul
adc
popa
mov
sti
jg
add
sbb
adc
lahf
movsb
rcrb
jl
mov
cwtl
xchg
bnd
lahf
les
lcall
in
sub
xlat
pushf
sbb
decl
leave
repz
adc
and
mov
and
out
insb
out
xchg
and
dec
xchg
adcl
mov
fwait
sub
daa
popf
push
jecxz
pusha
mov
outsl
fcomps
and
push
cmp
int3
imul
shrb
movsl
imul
xchg
shll
cmp
inc
push
test
dec
jp
adc
ja
fxch
push
and
loop
mov
mov
movsl
sbbb
sbb
mov
sub
sbb
dec
sub
cltd
push
scas
fwait
rol
ja
and
cwtl
nop
adc
adc
sub
fnstenv
xchg
cmp
call
cmp
jns
inc
mov
push
dec
pop
jo
movb
push
lock
jns
js
out
out
sti
in
mov
mov
mov
repnz
das
out
add
pusha
mov
sub
add
rcr
or
and
shlb
dec
lahf
jnp
mov
mov
push
das
es
add
outsl
ljmp
or
dec
roll
ret
mov
rorb
ret
mov
jl
into
repnz
ret
cmp
shl
push
es
dec
lods
into
shl
orb
cltd
push
stos
push
cmp
mov
xchg
jecxz
loop
setne
xchg
fwait
pusha
enter
andb
jle
test
pop
sarb
sub
icebp
sbb
loopne
or
push
or
shll
add
stos
or
xchg
mov
cli
test
jne
in
adc
aad
ss
mov
lret
cmp
shl
jno
scas
js
add
jmp
mov
mov
shl
pop
aas
mov
bound
es
popa
or
jno
sbb
test
push
outsb
sub
scas
movsl
lea
inc
pop
jg
in
push
inc
mov
call
push
popf
jbe
lret
faddl
repnz
jecxz
mov
sbb
mov
push
in
mov
outsl
std
out
xor
jne
pop
jns
pop
or
add
mov
xchg
rclb
adc
xor
xor
leave
call
cmc
out
cmp
mov
push
xchg
add
shll
pop
push
loop
and
mov
and
jmp
cmc
dec
fucomip
inc
repnz
aam
sbb
mov
jmp
cmp
xchg
mov
mov
rcll
ja
jmp
flds
pop
jno
lahf
insl
je
loopne
int3
test
push
ret
mov
insb
push
ds
xor
imul
mov
push
sbb
outsb
adc
push
andb
aad
and
jge
dec
test
in
pushl
dec
sbb
inc
or
xchg
cli
mov
cli
xchg
push
rorl
pusha
dec
rcrb
iret
aas
aaa
mov
mov
jne
dec
ret
push
stos
push
in
int3
push
add
nop
test
outsb
and
push
or
test
push
mov
add
and
cld
push
mov
jnp
icebp
cmpsb
jg
add
aas
icebp
test
sub
cmc
pop
fildl
add
jecxz
jle
jp
in
mov
lret
mov
inc
rclb
push
inc
lods
scas
fcompp
out
repz
call
ja
sbb
inc
fsubrs
mov
or
mov
cmp
ljmp
std
sbb
and
or
jbe
dec
hlt
jb
lock
adc
mov
incb
mov
out
clc
pop
dec
fneni(8087
stos
xchg
fstps
insl
insl
inc
push
jmp
push
lcall
negb
sbb
cmp
sahf
jb
push
sbb
lcall
roll
dec
push
dec
daa
cmp
clc
push
dec
mov
lahf
pusha
test
inc
xchg
sub
repnz
mov
aas
mov
inc
xchg
lds
sbb
xlat
js
sub
inc
sti
jl
testl
mov
es
push
xchg
jecxz
jns
push
test
nop
orb
push
push
jb
std
fnstsw
fnstcw
xchg
or
arpl
add
cwtl
jae
ret
sub
sub
xorb
mov
mov
lret
mov
xor
cmp
sub
jmp
xchg
inc
hlt
inc
and
shrb
jmp
sbb
sub
jmp
pop
mov
sti
push
xchg
cmp
and
icebp
iret
outsb
xlat
mov
cmpsl
xchg
subb
popf
mov
and
in
daa
dec
fildll
jmp
dec
out
add
xchg
ja
cmp
sub
addr16
mov
adc
mov
scas
mov
sahf
gs
mov
mov
push
dec
out
cmp
add
fmuls
std
out
ss
shrb
pop
cltd
in
jg
shr
lock
xchg
sbb
cmp
into
fadds
jp
loope
push
mov
int3
loopne
xchg
movsb
stos
insb
dec
je
loop
xor
jns
decl
jae
cs
sub
inc
pop
js
dec
loopne
fcomip
cmp
cmp
fucom
aam
stc
aas
add
adc
repz
cli
icebp
push
xor
aaa
cld
bound
sub
test
movsl
jle
push
fcompl
cmpsl
jle
roll
dec
sbb
cmc
mov
mov
mov
xchg
test
fmuls
shll
jae
adc
mov
adc
or
mov
test
jmp
movsl
xor
in
mov
xor
fstpt
xor
inc
fnsave
popa
and
into
repz
pop
dec
xor
fwait
dec
sub
push
mov
gs
fidivs
in
rorb
lea
mov
pop
or
sarb
xchg
std
pop
adc
xlat
lret
sahf
aaa
mov
mov
daa
loope
add
mov
pushf
ss
mov
cmpsb
hlt
pop
sbb
and
dec
arpl
mov
add
add
pop
cmp
test
stc
or
mov
popa
divl
mov
cmp
jo
lret
sbb
mov
adcl
int
pop
hlt
pop
out
arpl
mov
adc
or
add
popa
adc
sub
lea
fnstcw
or
adc
cwtl
or
mov
iret
mov
sub
mov
cmp
cmp
add
fdivp
ljmp
mov
push
ljmp
fstpt
repz
jae
dec
xlat
jo
test
jae
mov
mov
xchg
sub
inc
inc
push
shrl
cs
inc
setge
sahf
mov
mov
or
push
push
mov
loope
loope
je
lods
mov
lcall
push
data16
dec
cltd
fisttpll
mov
xchg
insl
std
push
jae
and
mov
test
pop
pop
xor
scas
cmp
mov
shll
inc
test
movsb
push
or
loopne
fisubs
sbbl
mov
mov
fsubrl
lds
pushf
mov
gs
stos
lea
jnp
push
jo
xchg
mov
dec
dec
aam
sub
pop
div
dec
pusha
mov
xchg
mov
sub
in
cmp
adc
aad
mov
lahf
arpl
xchg
add
dec
inc
test
out
xchg
cmpl
dec
js
adc
pop
aas
xchg
xchg
mov
cli
sahf
pushf
jno
jnp
dec
stos
mov
mov
cmp
shl
inc
pushf
dec
sbb
fs
xor
sub
mov
ds
inc
sbb
xor
xchg
movsl
fistpl
in
or
cmpsb
jle
and
inc
sub
iret
or
inc
cmp
mov
cmpsl
fs
add
xchg
aas
jg
xchg
jnp
jl
cld
inc
sarl
dec
or
add
push
add
jle
test
sbb
jge
push
adc
pop
pusha
int
push
int
outsb
mov
jle
rcrl
sub
es
lea
shlb
nop
or
cmp
dec
pop
xor
fs
enter
inc
scas
jp
cmc
cs
rorl
xchg
adc
cmp
dec
imulb
pop
mov
int
jg
roll
mov
xchg
mov
icebp
ret
sahf
xchg
mov
test
pop
cmp
mov
loop
aam
addl
sbb
mov
imul
movsl
push
out
and
push
push
sub
xor
sti
fdivs
add
lea
jb
cmp
sti
mov
jge
mov
sahf
or
out
stc
inc
mov
dec
xchg
and
add
jae
lds
cld
fs
std
or
jge
nop
enter
aad
push
xchg
std
mov
aas
enter
ja
ret
fcmovne
pushf
nop
sti
sahf
mov
mov
sahf
jns
stos
jnp
dec
adc
mov
push
add
jnp
aad
sbb
xor
xchg
mov
sti
push
sbb
std
int3
es
push
stc
mov
xchg
repnz
movb
cmp
push
mov
push
mov
mov
jp
jmp
cmp
jbe
mov
movsl
lret
das
pop
xor
inc
leave
cli
ljmp
clc
lahf
inc
pushf
and
aaa
fstpt
insb
das
dec
push
xor
test
sub
ret
sbb
fmuls
jp
push
outsl
jmp
imul
lcall
outsl
or
loopne
bound
addps
or
mov
aaa
fimull
cmp
xchg
adc
cmc
push
and
inc
xor
fcoml
mov
jmp
push
lds
out
jle
cwtl
mov
dec
xchg
je
inc
cmp
out
pop
pop
pop
aad
add
movsl
and
mov
pusha
mov
int
push
fistl
adc
inc
push
jp
call
cs
ss
dec
insl
push
push
jnp
je
pop
mov
test
push
ja
addb
xor
std
inc
sti
xchg
addb
inc
dec
out
ja
gs
jb
int3
push
jge
push
sbb
roll
scas
and
mov
sbb
xor
ss
sarb
lds
pushf
mov
out
and
sub
inc
icebp
ret
outsl
mov
loopne
sarb
and
dec
mov
adc
mov
xor
scas
in
sbb
popa
ds
fs
sbb
xchg
mov
and
push
push
add
repnz
in
aas
sbb
jbe,pn
lahf
mov
stos
pop
mull
shl
adc
mov
cwtl
stos
dec
out
lds
mov
fdiv
neg
pop
daa
enter
iretw
push
hlt
jae
addr16
ja
and
pusha
jb
gs
roll
cli
insl
inc
lcall
pop
icebp
fbld
call
sbb
inc
inc
push
xchg
push
jecxz
pop
push
push
stos
rolb
mov
cltd
push
movsl
push
jp
decl
sbbl
adc
dec
push
jae
mov
sbb
or
rol
call
mov
mov
cmp
nop
mov
cmc
repnz
sub
dec
jbe
in
daa
nop
dec
cmpsb
inc
xchg
add
xchg
cmp
pop
cmpsb
pop
sbb
jge,pt
lret
jg
lahf
cmp
jo
and
xor
loopne
or
mov
mov
lret
movsl
push
adc
cli
push
arpl
sbb
and
mov
pop
sti
int
cmp
out
pmullw
sar
xor
test
xchg
fildll
add
pop
push
jnp
addl
fcmovne
xchg
scas
das
adc
push
mov
adc
mov
dec
sarb
jno
mov
nop
xchg
dec
pop
xchg
data16
mov
mov
mov
imul
xor
lock
out
shlb
pop
push
cmp
sbb
neg
jecxz
jle
test
popa
cmc
lea
out
push
sub
std
mov
mov
scas
push
mov
jne
pusha
outsb
fs
shl
pop
cmp
add
scas
hlt
dec
jle
and
lock
lcall
sbb
xor
jmp
pop
cmp
adc
push
jns
mov
xchg
sbb
add
sti
add
jno
pop
inc
xchg
xchg
sub
mov
neg
je
popl
xchg
ja
hlt
sub
pop
test
adc
jnp
mov
ja
cmp
in
les
xchg
jo
push
pop
das
xchg
rcll
ljmp
and
pushf
dec
adc
inc
fninit
pop
daa
mov
std
stos
dec
nop
loopne
divl
xchg
in
mull
rcr
ja
les
push
sub
loopne
pop
push
sbb
outsl
mov
loope
add
outsb
sub
mov
dec
inc
fwait
sbb
mov
mov
jns
rcrb
xchg
xor
bound
mov
outsb
pusha
cmpb
stc
sub
inc
mov
es
mov
lods
pop
or
dec
inc
cmp
outsb
idivb
cltd
movsb
pop
jmp
xor
mov
in
mov
mov
stos
pushl
jnp
pop
jge
sbb
mov
adc
inc
pop
mov
push
jl
or
or
ljmp
fsubrs
lock
movsl
mov
lret
aas
les
inc
fs
push
cltd
mov
pop
lret
mov
mov
test
sbb
push
xchg
jle
sahf
push
sbb
push
xor
je
cltd
or
pusha
push
call
pop
andb
scas
jle
xchg
shlb
in
pop
fwait
mov
ss
push
fsubp
mov
and
aaa
popa
mov
dec
sub
push
and
lea
andl
call
xor
in
sub
popa
dec
js
xchg
sti
or
popf
xchg
jne
lahf
push
or
xchg
adc
xchg
inc
cs
jg
cmp
sbb
lock
or
xchg
frstor
adc
xor
stc
jle
hlt
jl
movsl
pop
cs
arpl
xchg
icebp
outsl
mov
cmp
xchg
sahf
rcrb
or
scas
testl
in
aad
lods
dec
fnsave
lahf
jmp
divb
sub
stos
and
cmp
fwait
sti
and
ret
mov
and
jecxz
mov
shl
ljmp
lea
sbb
dec
sahf
call
mov
add
popf
jmp
push
lods
int3
ja
xlat
jp
fimull
xlat
into
mov
sub
cmpsl
iret
jge
iret
lret
je
mov
jb
xchg
mov
gs
push
adc
cmp
jl
xchg
mov
fldenv
cs
les
sti
je
pop
push
outsl
and
mov
jno
add
call
xor
jae
in
sub
sbb
cli
testl
lds
ljmp
in
pop
or
add
jo
cld
adc
test
xchg
sbb
dec
push
pop
lods
pop
dec
aas
dec
in
sub
jae
xchg
adc
or
and
jmp
cmp
sub
dec
outsb
mov
repz
mov
mov
js
cmp
xchg
ficompl
insb
cmpsb
pop
das
popf
jp
lea
push
pop
pop
jmp
mov
stc
lods
push
pop
cmp
es
enter
add
jmp
int3
jns
mov
out
outsl
push
xchg
mov
ret
cmp
repnz
lahf
test
or
fcmovnb
idivl
jbe
push
test
addb
jae
mov
add
stos
aad
xor
sub
push
add
loopne
fisubrs
xchg
into
stos
mov
sub
xlat
fisttps
shl
rcrl
mov
test
outsl
int3
or
inc
lods
loope
push
mov
push
xor
or
push
push
jge
xchg
bound
adc
mov
test
xlat
mov
inc
pmaxub
das
lods
icebp
push
mov
pop
outsb
insb
mov
lcall
nop
pop
sbb
cmc
lods
js
xor
out
sub
test
jns
popf
fimuls
int3
mov
movsl
clc
dec
je
sub
push
pop
aad
in
shrb
mov
je
jl
inc
inc
xor
in
sbb
xchg
jns
push
xlat
mov
xchg
shll
pop
enter
push
xlat
mov
mov
and
push
fs
call
ja
fnstenv
pop
mov
in
push
or
dec
inc
push
test
orb
aas
mov
je
cmp
jle
neg
xor
lea
rcrb
cmc
xchg
ret
pop
out
sub
push
xor
mov
cmp
sub
or
hlt
ja
jbe
push
nop
or
popa
xchg
bound
arpl
jg
aam
lcall
call
sbb
lea
sbb
mov
adc
jbe
and
mov
mov
dec
mov
in
rclb
movsl
repnz
pusha
xor
loopne
shl
adcl
add
repnz
or
xchg
dec
and
mov
cmc
push
pcmpeqb
mov
call
js
ljmp
jg
pop
loop
fsubrp
les
pop
das
iret
push
cs
xchg
inc
xor
out
lea
push
jmp
push
movsl
dec
loope
repnz
shll
out
test
jle
or
xor
aas
cmpb
push
push
push
fwait
pop
addr16
test
mov
add
sti
outsl
das
lahf
cmp
imul
divb
mov
daa
mov
xchg
push
sub
leave
cmc
or
repnz
push
adc
pusha
sarb
popa
arpl
ja
cmpsl
stos
mov
inc
leave
or
int3
lock
fcmovnu
and
fsubs
test
push
lods
and
push
addb
movsl
mov
stos
nop
lods
xchg
push
nop
pop
or
xchg
jne
mov
and
lds
fsub
adc
pop
rol
cwtl
or
adc
stc
dec
push
rcrb
cmp
repnz
fwait
adc
ficompl
push
jnp
in
xchg
test
aam
ret
lds
mov
call
int
add
mov
jno
mov
shlb
nop
nop
and
and
js
icebp
and
stos
movl
pop
pop
ss
imul
add
pop
cmp
out
xchg
lds
idiv
pop
in
clc
popa
jnp
les
mov
and
sub
fsubrp
fwait
loope
sar
ror
arpl
fcmovnbe
popf
lcall
hlt
fwait
inc
adc
lcall
loope
pushf
imul
mov
push
pop
in
fimull
popa
data16
idivb
fcoms
and
sbb
or
das
inc
aad
mov
arpl
jns
pop
push
das
adc
iretw
loopne
xor
jge
ds
icebp
or
decb
mov
sbb
loop
xor
push
in
lahf
jns
lods
test
lahf
mov
cmp
xchg
clc
jne
addl
push
cmp
and
pop
sbb
xchg
mov
jae
inc
out
xchg
cmp
mov
das
orl
int3
mov
inc
int3
adc
sbb
sub
fldl
jecxz
xor
mov
push
and
sahf
pop
imul
push
je
clc
movntq
lods
cmpsl
jge
fwait
lahf
stos
rorb
sub
mov
jb
add
into
adc
cmpsl
insl
xor
cmpsb
lods
and
mov
adc
sub
push
lcall
xlat
inc
dec
test
test
outsl
ja
dec
sub
adc
in
xlat
ja
xchg
hlt
cld
xor
subl
sti
add
inc
cltd
pop
and
xchg
sbb
xchg
push
lcall
sbb
pop
push
imul
push
inc
dec
and
shll
mov
dec
insl
mov
sbb
and
lods
dec
in
jb
pop
cmpl
cmp
fs
out
movsb
sarb
mov
push
xchg
lret
out
mov
mov
adc
int3
mov
push
pop
or
addb
mov
inc
clc
sahf
add
sbb
mov
jle
lea
jno
push
cs
adc
jg
jne
jg
jo
adc
mov
clc
push
sub
fsubrl
outsb
push
jmp
scas
mov
clc
daa
pop
mov
dec
jnp
pop
add
push
cmpl
inc
sbb
add
out
divl
stos
ss
loop
adc
adcb
pop
mov
pop
pushf
dec
ja
mov
mov
scas
xor
aaa
addl
dec
sub
or
clc
adc
mov
xor
pushf
ds
pushf
jmp
push
jle
xchg
jbe
sub
fldt
lahf
dec
or
ror
mov
push
loopne
outsl
sahf
add
mov
xchg
sbb
xorb
imulb
loopne
mov
movsb
arpl
sub
xchg
xchg
lds
mov
jb
fimull
jnp
popf
xor
push
cwtl
or
aam
pop
mov
in
fidivl
inc
mov
cmp
nop
pop
ja
scas
pop
orb
aam
add
dec
aas
aam
mov
or
jns
fbld
bound
jae
jg
clc
outsl
mov
mov
fnstcw
ret
gs
xor
fiaddl
jge
push
add
pop
push
adc
in
push
ss
inc
sti
mov
loopne
stc
test
push
test
push
push
push
lret
lcall
jl
inc
test
mov
push
jnp
pop
xor
xchg
or
fnstsw
fildll
jge
or
scas
pop
fisubrl
sbb
mov
mov
jecxz
mov
dec
xorl
xchg
xchg
ret
rolb
ss
pop
aaa
in
scas
arpl
cmp
xchg
push
imul
adc
xor
out
mov
sbb
call
mov
in
push
jno
xor
cmp
or
dec
scas
data16
xchg
ljmp
xorl
shll
ja
fcomi
inc
jae
inc
mov
jg
rcrb
sti
adc
je
stos
sti
mov
sahf
dec
dec
jns
xorl
push
mov
mov
inc
call
add
or
loop
sub
movsl
xchg
pop
dec
jg
aaa
std
sbb
and
loop
ds
adc
je
fstp
inc
in
mov
pop
sub
mov
or
out
jne
lock
inc
mov
iret
and
xchg
dec
xorb
nop
jns
jmp
xchg
jge
icebp
xor
aas
cmpsb
push
sbb
cmp
test
shll
in
mov
mov
repz
sbb
int
dec
lds
fstl
dec
loope
cmp
pop
sbb
push
cld
mov
fwait
ss
outsl
dec
test
ss
into
xor
push
add
xor
cwtl
lret
mov
and
rcrl
mov
mov
cmp
pop
out
pop
aam
push
sti
inc
loop
mov
ret
adc
cld
add
sub
sbbl
cs
or
pop
out
gs
adc
jno
jmp
inc
pop
adc
in
mov
inc
jp
scas
push
sbb
or
pop
mov
xchg
push
sbb
daa
or
mov
pop
cmp
pop
test
push
ss
dec
push
jge
test
pushf
fs
test
imul
fisubrl
out
inc
cmp
into
out
xor
pop
sub
aaa
js
push
sbb
aad
sub
fwait
mov
out
insb
dec
push
std
mov
add
cmp
jl
iret
mov
ret
jne
dec
mov
mov
outsb
adcl
push
stc
pop
scas
in
mov
add
mov
add
pusha
mov
jecxz
sahf
pop
xor
cmp
dec
pop
cmp
clc
mull
sarb
adc
int3
cmp
loopne
outsl
xchg
xchg
rcrl
add
aad
or
mov
mov
mov
cmpsb
adc
addr16
shll
push
mov
sbb
cmp
inc
push
dec
scas
jle
push
mov
jae
push
cmpsb
inc
bnd
or
jle
sub
sbb
lods
push
sub
test
inc
test
or
fnstcw
xlat
pop
mov
mov
sbb
jo
sub
push
ss
loope
pusha
adc
std
or
jnp
sub
call
mov
mov
jmp
das
inc
mov
lock
daa
mov
inc
xor
icebp
mov
pushl
insb
sbbl
out
adc
xchg
xchg
xor
fcomps
or
cltd
jne
fstpl
mov
sbb
mov
and
jecxz
mov
enter
bound
xor
notb
js
mov
lock
sub
xor
aaa
dec
lock
push
leave
push
ret
add
mov
cmpsb
fwait
out
cmpsl
mov
dec
cmpsb
jne
arpl
push
sbb
int
cmp
repz
ficoml
add
mov
push
push
jae
jo
popa
add
dec
popa
xchg
xchg
or
jg
pusha
loopne
cmp
lea
fsub
dec
add
call
inc
aas
call
mov
jle
aaa
mov
push
pop
mov
in
push
stos
dec
jl
or
cmp
or
cmpsl
jle
mov
push
out
lea
dec
mov
cwtl
dec
cmpsb
adc
or
jae
repnz
or
daa
je
dec
test
in
inc
jo
sub
sbb
inc
jmp
push
into
dec
dec
daa
repnz
and
aas
xor
mov
mov
imul
js
push
in
flds
leave
pop
lds
add
or
cmp
rol
shll
cmp
mov
mov
and
test
lods
shrl
xchg
pop
add
adc
std
sbb
jo
cwtl
loop
lods
arpl
or
xchg
data16
jae
jge
or
in
inc
hlt
lahf
add
clc
pop
hlt
sub
add
sbb
test
push
call
lods
dec
push
jno
inc
mov
xchg
or
dec
test
icebp
lcall
sub
jo
and
enter
jl
sbbb
pusha
inc
jl
adc
push
cli
ret
fnstenv
cmp
fildll
dec
in
rcll
outsb
pop
push
cmp
shll
dec
rorb
jb
ljmp
pop
enter
jl
push
mov
jnp
push
jg
imulb
mov
sub
lret
or
mov
ja
dec
std
bound
lds
mov
nop
push
fcompl
imul
pop
push
jle
ficomps
jge
jns
out
pop
jmp
test
xchg
sub
adc
decl
insl
cld
mov
loope
mulb
repnz
sbb
ss
and
pusha
test
rorb
sub
sub
imul
xor
loopne
dec
add
jp
outsl
xchg
sub
addb
mov
nop
testb
sub
bound
and
mov
xchg
and
mov
sub
or
inc
aaa
cltd
cld
mov
adc
adc
imul
mov
pusha
int
push
jb
and
mov
fstl
aad
pop
sbb
cltd
repnz
jmp
sub
sub
leave
test
in
lods
loop
mov
jp
push
outsb
add
jg
jne
cmpsb
add
in
xchg
repnz
push
mov
add
adc
and
cwtl
xor
adc
div
mov
inc
mov
mov
ja
dec
pop
pop
sbb
ret
cld
or
stc
xchg
das
or
sub
imul
add
in
int
adc
inc
pop
sub
mov
ja
ds
sub
jns
sbb
out
test
mov
movsb
popa
iret
imul
pop
ret
and
jnp
cmp
jne
or
shlb
enter
daa
or
div
lret
sahf
or
xchg
js
movsl
popl
mov
inc
push
xor
in
ss
mov
cltd
cltd
das
push
das
xor
pop
negl
testb
dec
cmp
jbe
mov
push
jae
jnp
ret
xchg
ss
fldl
in
jb
out
outsl
or
or
scas
fisubrs
arpl
mov
popa
stos
imul
or
mov
mov
pop
push
cmpb
push
cmpsl
mov
dec
mov
out
das
mov
cwtl
nop
imul
stos
popa
rorb
ja
mov
lret
adc
arpl
nop
je
xchg
push
pop
insl
out
jns
xchg
std
cmc
dec
mov
pop
adc
add
mov
push
inc
xor
lock
sahf
sahf
je
loope
lcall
sti
xor
xchg
sbbl
gs
push
sub
leave
cmp
movsl
xor
inc
and
sti
pop
mulb
lcall
mov
stos
dec
lds
in
mov
cmp
popa
lret
dec
cmp
in
popa
jmp
in
push
xchg
push
pop
shlb
fwait
testl
fs
fnstsw
test
out
pushf
stos
mov
jle
dec
jne
enter
movb
mov
cmpsb
flds
push
flds
pop
mov
adc
push
cmc
sbbl
lods
ficoms
je
cwtl
das
dec
cld
scas
hlt
xor
aas
repz
lret
rcrl
lea
shll
nop
dec
mov
xchg
cmpb
sbb
mov
pop
repnz
push
inc
pop
mov
in
test
jmp
pop
xorb
fiaddl
testb
js
test
dec
mov
push
cmp
cwtl
mov
mov
jmp
ret
mov
fs
pop
inc
sbb
cmp
movsl
repz
es
mov
gs
test
push
pop
rorb
mov
pusha
lds
or
cmpsb
pushf
shll
push
xchg
jo
notb
jbe
movl
in
stc
jmp
and
mov
inc
cmc
cmp
pop
push
push
cmp
xchg
mov
ret
add
in
ja
cmp
adc
xchg
push
jb
jb
mov
add
jecxz
inc
iret
mov
ret
rep
pop
pop
movl
mov
iret
lods
subb
fld
mov
sbb
jg
loope
inc
mov
sti
es
mov
je
dec
mov
clc
jmp
or
decb
sar
ja
jbe
mov
aas
pop
dec
scas
and
insb
dec
test
arpl
aaa
pop
or
mov
pushf
out
sub
pop
xor
lock
je
dec
xchg
stos
sbb
repz
and
jl
sahf
insb
jae
cmp
daa
cltd
inc
mov
add
test
adc
cltd
pop
insl
jle
nop
pop
ljmp
aas
jl
shl
shlb
out
stos
and
call
jmp
cltd
pop
sub
out
lahf
cmc
repz
mov
scas
pop
popa
mov
int
ror
out
mov
xor
dec
mov
test
pop
cmp
js
cmc
enter
aad
cmp
ret
hlt
rolb
jp
pop
sub
mov
movsb
cmp
sub
cmc
ret
sub
repnz
fsubs
in
ret
inc
xchg
xor
sub
movsb
js
xor
adc
or
sbb
mov
out
inc
cmp
ret
xor
shrb
lock
pop
xchg
stc
mov
mov
pop
adc
call
fnsave
jge
mov
iret
sbb
jmp
aas
gs
sahf
es
adc
xor
lret
sub
add
sub
jle
push
push
jae
add
je
movsl
pop
adc
fwait
leave
ret
pop
inc
mov
ds
ret
cmpsb
and
push
in
fnstcw
subl
lret
mov
mov
pop
test
addr16
fwait
pop
pop
imul
sub
fmul
nop
cmp
pushw
popf
sti
or
stc
scas
mov
add
mov
outsl
pop
lods
popf
push
xchg
xchg
jno
push
ret
mov
ss
xchg
inc
or
sar
aam
cmp
cltd
or
mov
icebp
add
addr16
push
bound
xor
pop
jno
pop
shl
sbb
int3
push
sub
outsb
leave
cmpb
in
sub
push
mov
lret
xchg
mov
insl
xchg
ljmp
xchg
xor
stc
shr
cmp
stos
xor
outsb
sub
sub
dec
add
pop
mov
dec
xor
adc
insl
sti
mov
bound
xchg
std
and
sahf
out
sub
push
adc
pop
shll
mov
inc
inc
or
das
icebp
addr16
dec
mov
aad
and
lcall
pop
push
or
adc
jmp
fiaddl
sub
aas
ror
iret
out
dec
fwait
cmpsb
pop
push
inc
push
call
sbbl
cmp
mov
adc
pusha
in
das
or
add
jnp
outsl
or
mov
mov
inc
bswap
add
adc
test
cltd
lret
ja
inc
fabs
xchg
sub
pop
xor
and
jbe
test
jmp
aam
rolb
xchg
push
mov
icebp
jns
lea
sub
cmp
loop
fcompl
lret
jmp
sti
adc
jns
push
or
scas
mov
sti
add
add
stos
movsl
adc
out
aam
xor
push
lret
inc
outsl
inc
or
into
adc
push
push
sub
fistps
sbb
sbb
xlat
sub
sbb
shl
movsb
jle
ficoml
jnp
rorb
dec
push
and
sbb
and
add
mov
test
jne
cld
imul
out
daa
test
fistpl
mov
jbe
push
jmp
inc
mov
pop
popa
mov
mov
loopne
addr16
mov
aad
jg
sbb
sbbl
cmpsl
cld
add
adc
mov
scas
dec
scas
xchg
iret
mov
nop
inc
nop
xlat
mov
mov
xor
icebp
or
pop
hlt
adc
sub
test
out
negl
scas
stc
xchg
cld
cwtl
pop
xchg
cs
mov
pop
and
xchg
flds
repnz
mov
fucom
and
mov
and
stc
outsl
dec
and
in
jecxz
mov
test
lods
dec
or
movsl
pop
inc
popf
and
movsb
adc
push
pop
sbb
lods
std
mov
sbb
or
dec
adc
push
in
mov
dec
jl
sub
mov
int3
and
pop
mov
sbb
sub
jp
or
mov
cwtl
cmp
pop
ljmp
xchg
int3
pop
jecxz
pop
cli
adc
int3
adc
rcrl
push
mov
push
cli
push
jns
mov
mov
mov
std
or
xor
add
mov
and
sbb
and
dec
fsub
mov
hlt
xor
sbb
adc
push
push
dec
fisttpl
cmp
loopne
rep
dec
insb
mov
xor
ret
ret
cmp
shll
jno
jo
xchg
push
ficomps
insb
xchg
dec
lahf
clc
dec
loope
xlat
sbb
fiaddl
fsubl
lret
dec
sbb
insb
iret
sub
jge
dec
mov
les
iret
jb
cwtl
dec
pusha
pop
cmpsl
adc
daa
jae
mov
adc
sarb
lods
test
and
std
jp
pop
lahf
push
repz
out
jbe
sub
mov
testb
cmpsb
mov
inc
xchg
mov
dec
mov
bound
icebp
adc
mov
cmp
pop
and
add
mov
jmp
into
pop
addr16
xchg
rorb
mov
or
pushf
xchg
outsl
add
dec
inc
out
and
inc
jne
add
pushf
subb
mov
rorl
mov
mov
jecxz
jl
sbb
adc
pop
and
push
pop
aad
add
shlb
mov
ficomps
inc
jns
mov
sbb
jnp
rcr
jmp
adc
clc
rcrl
out
addl
cmc
arpl
cmp
test
jb
gs
cld
notb
and
dec
gs
movsl
jp
test
data16
cmpsb
mov
ret
add
or
mov
mov
out
sub
xchg
sub
push
pushf
in
or
and
fcomi
ffreep
clc
hlt
int3
rolb
mov
and
out
jl
xor
inc
adc
xorl
je
popa
lods
out
fnstcw
aad
mov
xor
pop
sub
andl
cmp
add
mov
jb
es
dec
sub
mov
outsl
loopne
xchg
popf
and
inc
outsl
xor
mov
dec
inc
adc
jmp
xchg
cmp
into
sub
out
stos
sub
pushf
adc
mov
xor
xchg
out
dec
and
cmpsb
add
arpl
lcall
sbb
in
lret
jne
jnp
and
fwait
out
mov
mov
cmc
cmp
pushl
dec
dec
sbb
jl
lcall
test
mov
test
xchg
sbb
ds
cmp
das
xchg
repnz
push
mov
mov
andl
outsl
lcall
cmp
fsubr
cmp
mov
lret
pop
xchg
repz
mov
lods
outsl
pusha
arpl
test
loope
xchg
push
inc
lock
repnz
shlb
xchg
xchg
scas
jge,pn
repnz
arpl
pop
xor
mul
add
add
or
test
pop
test
out
xrelease
icebp
xchg
out
push
cmp
jns
das
xchg
loopne
push
push
repz
int
ljmp
into
mov
lods
dec
adc
xchg
xchg
xor
push
dec
xchg
push
ret
mov
test
mov
dec
outsl
xchg
sbb
je
mov
or
lret
out
and
mov
adc
rolb
sub
std
imul
push
jecxz
pop
cld
lcall
mov
fnstcw
xor
dec
mov
shl
push
in
ds
inc
mov
hlt
roll
outsl
sbb
push
lds
pusha
ficoml
or
enter
sub
push
clc
cmp
cwtl
movsb
lcall
jo
sbb
xor
mov
cmp
add
out
pop
sub
push
xchg
lcall
dec
repz
call
jl
xchg
cmc
fidivs
sub
dec
add
aam
mov
push
push
incb
mov
fst
outsl
arpl
mov
cld
movsl
push
mov
adc
mov
pop
test
repnz
xor
adc
hlt
xchg
jo
xchg
fdiv
int3
sbb
cltd
xchg
inc
int3
jb
xchg
cs
in
fidivl
test
aaa
jle
pop
neg
mov
test
cmp
out
mov
lods
jmp
out
mov
fdiv
sub
cmp
aad
aaa
push
jge
sahf
push
mov
bound
push
xchg
aaa
dec
mov
mov
xchg
repnz
jns
xor
or
adc
lcall
fs
cmp
ret
mov
jae
jne
dec
mov
pop
push
xchg
ja
jno
arpl
mov
adc
fdivr
push
jbe
ret
push
xor
into
stc
pop
test
mov
out
popf
jbe
clc
lea
push
lret
cmp
cmp
xchg
sbb
movsb
xlat
neg
hlt
scas
mov
sarb
jg
xchg
or
sub
pop
out
sub
pop
ljmp
mov
or
jno
sub
and
push
mov
or
jecxz
aam
std
int
sbb
lods
fcmove
jae
ret
add
xor
jae
mov
jecxz
ja
jmp
sti
ja
out
cmp
mov
aad
leave
rcrl
out
pop
movsb
mov
xor
sbb
in
adc
xchg
into
idivb
lahf
daa
adc
fstpl
jecxz
dec
lcall
or
jno
xor
and
je
in
add
fwait
adc
cmp
out
jo
iret
push
push
rcrb
and
jo
nop
pop
or
add
dec
mov
and
cld
inc
insb
add
dec
aam
lret
xchg
imul
out
arpl
addb
flds
mov
push
pop
imul
lahf
mov
push
xor
bound
mov
out
and
jmp
jg
sub
push
xor
xchg
xchg
cmpsl
stos
jbe
add
pushf
jb
mov
aaa
test
pop
cmpsl
ja
lret
sub
in
mul
cmp
je
mov
mov
mov
and
jl
stc
cltd
iret
test
push
adc
mov
aad
push
ret
lret
in
lcall
or
sub
sbb
cmp
bound
xchg
insl
add
pop
stos
jo
sub
jmp
or
jbe
pushf
mov
push
arpl
int3
xor
pushf
add
jmp
outsb
insl
movsb
aas
cmp
dec
testl
movsb
dec
add
jl
and
cmc
xchg
imul
mov
dec
icebp
negb
repnz
fildll
pusha
imul
cmc
popf
jle
ljmp
insl
or
and
aas
ja
test
into
or
rcrl
lret
or
leave
mov
movsl
jecxz
jmp
cmpsl
f2xm1
jb
fiaddl
test
pop
xchg
in
inc
fcompl
fmull
je
icebp
xchg
cmp
sbb
mov
das
add
and
movsb
mov
inc
loopne
pop
clc
fwait
negl
cwtl
add
push
adc
xchg
mov
mov
or
out
je
dec
xchg
and
jnp
push
cs
insb
inc
push
call
out
pop
push
push
xchg
test
pop
or
cmp
mov
loope
mov
adc
cmp
push
loopne
push
testb
jecxz
sahf
xorb
push
jo
xchg
mov
fmuls
mov
mov
out
scas
pop
inc
mov
or
xchg
dec
out
dec
sub
aas
inc
pop
les
outsl
xchg
jmp
int
stos
pop
adc
rcrl
imulb
ret
lret
push
notl
jae
mov
jmp
jecxz
test
das
sbb
sbb
inc
fldcw
movb
pusha
outsb
dec
adc
sub
mov
adc
adc
inc
int3
cmp
push
popa
xor
dec
adc
inc
xor
push
jmp
popa
arpl
sbb
xor
int
dec
pop
fsubr
movsl
and
jg
ficoml
xlat
test
scas
flds
pop
out
out
dec
push
mov
nop
mov
ljmp
inc
push
cmpsb
cltd
mov
xchg
pop
repnz
je
out
in
xor
jecxz
shll
inc
jecxz
cltd
add
dec
inc
lods
mov
xor
push
nop
fsubrl
cmp
aam
push
xor
mov
clc
or
cmpsl
cmp
jo
sub
fnstenvs
xor
adcb
aas
push
cmp
dec
xor
and
fs
mov
push
das
dec
sarb
mov
test
out
jne
fdiv
in
daa
mov
sahf
cmp
adc
nop
sub
cld
sub
adc
jns
fnsave
cltd
mov
push
pop
cmpsl
sub
fidivrl
enter
inc
add
add
xchg
mov
ret
sub
divl
in
insl
mov
ret
std
xchg
pop
or
movsl
cmc
aas
mov
cmpsl
hlt
push
add
cli
jbe
jge
negb
pushf
jmp
dec
mov
arpl
lret
addr16
push
inc
dec
into
pop
flds
mov
je
jno
or
ror
push
hlt
adc
sub
dec
push
fimuls
push
clc
sub
pop
or
and
push
insb
loopne
decb
in
lods
movsb
pop
scas
divl
jecxz
or
xchg
jmp
add
call
fildl
dec
cs
sub
and
pusha
aaa
test
inc
mov
pop
adc
ljmp
jle
jnp
dec
aaa
mov
and
cmp
push
test
ljmp
and
cmpl
pop
and
lret
or
push
in
mov
mov
and
adc
cmpsb
rclb
inc
movsl
std
push
shr
mov
mov
push
push
or
or
sub
dec
addb
es
add
inc
shl
mov
push
fldl
sbb
pop
cmp
mov
shrb
add
and
add
pop
xchg
loope
je
das
add
das
cmp
sbb
das
inc
sar
and
add
adc
pop
push
jp
or
repnz
in
push
arpl
xor
cli
or
cbtw
and
fwait
push
cmp
scas
cmp
mov
loop
sub
cmp
ret
insl
pop
enter
hlt
mov
push
lods
jecxz
add
fdivp
test
fwait
xor
mov
jae
push
lods
pushf
mov
sbbb
adcb
ja
test
cmp
fdiv
fwait
scas
adc
adc
int
add
repnz
in
xchg
pop
mov
pop
pusha
add
sarl
aas
cmp
mov
add
cld
test
xchg
rclb
xchg
ljmp
rcrl
mov
or
shl
jp
repnz
sarl
inc
repz
or
jbe
add
out
mov
pushf
sbb
les
sbb
and
testb
xchg
xor
scas
aad
mov
cld
sbbb
daa
fs
fwait
push
jl
and
repnz
push
xor
jb
push
jo
pmullw
test
jmp
or
mov
inc
cs
adcl
xchg
push
in
call
xor
popa
xchg
lods
mov
cmp
push
jp
jo
fiaddl
aam
or
jno
mov
pop
inc
push
xlat
or
pop
imul
popa
aam
jp
inc
mov
sbb
test
mov
mov
cli
cmp
je
inc
jbe
dec
aas
xchg
dec
aaa
dec
mov
mov
pop
push
and
add
arpl
cltd
cmpsl
cli
movsb
xor
xor
loope
adc
add
outsl
xchg
dec
pop
jo,pt
mov
sahf
inc
xchg
bound
jns
in
lret
sub
ret
mov
ret
dec
adc
pop
and
lods
sbb
adc
sbb
ljmp
sbb
mov
sbb
push
in
shrl
push
repnz
cmp
or
les
adc
pusha
sub
mov
out
push
fistpl
push
lea
xchg
cld
inc
mov
sahf
lock
arpl
loop
es
or
stos
out
inc
jb
lods
xor
mov
lock
repz
pop
lods
loope
pop
fldenv
inc
or
faddl
dec
push
out
shrb
in
ret
push
mov
enter
lret
mov
mov
xchg
fwait
outsb
jns
test
xchg
loope
lds
mov
push
iret
xor
mov
lahf
jg
mov
call
loopne
inc
idivb
in
mov
imul
cs
xor
mov
xor
cmpsl
dec
int3
dec
out
push
div
js
sbb
outsl
loope
add
adc
mov
sbb
inc
sub
ror
rcrl
xchg
les
jo
aas
sbb
mov
fdivs
push
push
add
and
repz
push
xchg
mov
add
pop
and
inc
stos
in
call
or
xchg
jp
adc
insb
sarb
push
sub
xor
mov
fcmovnbe
fdivs
outsb
imul
dec
pop
xchg
pop
aaa
nop
cmp
sbb
loop
xchg
out
ret
fcmovu
fisttps
or
sub
dec
arpl
mov
fidivl
cltd
rolb
fs
pop
out
bound
into
xor
popf
push
inc
les
fldt
test
pushf
lret
xor
das
add
insl
mov
dec
inc
mov
iret
xchg
fsubl
push
jmp
jmp
sub
outsb
mov
dec
cmc
mov
cmpl
inc
es
scas
fdivrp
fnstenv
into
leave
mov
push
enter
mov
outsb
mov
or
std
lods
xchg
imul
pop
lret
dec
in
jmp
sti
movb
dec
lods
inc
mov
and
loope
or
push
shll
faddl
mov
and
mov
xchg
mov
pusha
dec
sbb
add
jge
push
mov
jbe
aaa
mov
mov
dec
lahf
or
jns
movsb
aaa
or
adc
in
push
rol
andl
sub
hlt
jnp
pop
pop
ss
ret
mov
lret
xorl
jl
inc
ja
dec
rcrb
push
fwait
into
cmp
xor
ja
lds
cmp
jb
push
or
sti
ja
scas
and
divl
jl
lret
jbe
out
add
inc
jns
lcall
adc
inc
int3
pop
sub
lret
mov
shlb
sbb
xor
adc
mov
mov
pop
pushf
lods
lcall
sub
add
test
push
insl
push
data16
adc
pop
test
xchg
sub
mov
mov
sbb
or
cmp
mov
movsb
divl
push
lret
loope
rcrb
xor
decb
ljmp
jecxz
mov
fistps
inc
adc
mov
add
call
pop
or
cmp
testl
leave
sbb
cltd
leave
inc
out
jmp
pop
sub
add
add
or
sub
inc
inc
and
popf
jp
inc
push
pop
mov
out
mov
or
cmc
cmp
adc
rcrb
js
jge
pop
scas
add
inc
or
cmp
ss
cld
testb
leave
cmpsb
lahf
sahf
movsb
out
dec
je
dec
cld
cmp
mov
mov
imulb
lret
adc
push
call
lea
lock
ljmp
push
test
mov
popf
dec
cwtl
fwait
push
les
loope
ret
dec
jno
dec
xchg
pop
jns
mov
fwait
ret
dec
push
cld
and
sub
xchg
stos
dec
push
and
mov
mov
xchg
ja
cs
mov
pop
out
test
pop
aas
test
lods
pop
mov
and
xorl
lock
fldcw
add
outsl
aaa
in
jbe
cmc
pop
jno
orb
test
pop
loop
xlat
nop
rcll
mov
subb
pop
leave
lahf
jp
xchg
mov
pop
pop
jns
or
sub
xchg
leave
jmp
js
pusha
imul
add
pop
iret
loop
out
adc
jge
outsb
adc
or
mov
add
sbb
daa
out
rorb
fcomip
stos
gs
cmp
mov
and
mov
ljmp
jne
sbb
mov
mov
loopne
imul
movsb
jbe
add
cmp
pop
xor
push
negl
addr16
sbb
std
je
pop
add
lcall
dec
dec
or
sub
push
pop
pop
dec
dec
movsl
jl
jge
pop
push
imul
mov
addr16
jg
ljmp
mov
mov
movb
jmp
push
ret
pop
sub
mov
mov
js
in
movsb
loop
mov
cmp
mov
adc
int
xchg
aam
inc
and
inc
fsave
mov
ljmp
out
aas
push
jp
ds
shrb
fsts
cmp
jae
cwtl
in
addr16
mov
ret
in
cmp
push
into
lret
push
xor
mov
fisttpll
sub
or
lret
pop
adc
js
out
mov
imul
dec
rolb
mov
cmpsb
jo
btcl
aas
and
cmpsb
je
lahf
js
jmp
lock
test
push
inc
or
hlt
push
adc
stos
or
ror
xor
push
add
sahf
cmp
in
push
insb
in
cwtl
xchg
pop
adc
sti
xchg
push
aad
mov
xchg
ret
push
rol
lahf
lahf
jge
push
xorl
mov
addr16
call
sti
mov
in
and
xchg
subl
xchg
ss
mov
adc
cli
sbb
stc
dec
ficoml
pop
sbb
sub
add
xchg
test
lcall
and
lret
push
cmp
aam
popa
ds
inc
rol
mov
sbb
add
and
cld
xchg
mov
lods
inc
cmc
jo
in
xchg
inc
leave
add
cwtl
in
add
jo
fildll
xor
mov
push
sub
and
jecxz
lcall
aaa
jo
test
xor
daa
cmp
rcl
dec
inc
pop
test
inc
das
fs
in
fdivs
push
sub
sarl
or
push
ljmp
mov
jbe
ljmp
adc
adc
leave
dec
xchg
push
pushf
mov
push
repnz
ja
leave
sub
cmpsl
leave
repnz
imul
fisubrs
cmp
jp
test
scas
daa
cli
mov
call
aad
call
dec
or
js
insl
cmp
cltd
push
adc
out
xchg
mov
lea
add
adc
hlt
jbe
mov
xchg
std
test
loope
repnz
mov
mov
xchg
paddsb
xchg
mov
and
data16
repz
bound
gs
cmc
mov
lock
sub
or
and
mov
rolb
lds
push
aad
push
mov
sub
jecxz
pop
and
test
sbb
aaa
add
mov
lods
jne
fstl
enter
jne
in
push
sub
push
enter
ficomps
repz
mov
jmp
enter
shl
divb
jno
sub
notl
inc
ss
jle
mov
cmp
adc
xor
mov
cli
mov
push
int3
or
ljmp
cwtl
jl
lea
push
pusha
jmp
in
push
mov
icebp
mov
sbb
fnstcw
add
sbb
test
int
stos
push
mov
sbb
xchg
and
cmc
pushl
out
scas
mov
ret
call
xchg
pop
mov
lcall
pop
or
cli
mov
xchg
int
xchg
icebp
xchg
mov
xchg
andb
pop
mov
sub
lods
push
rcrl
shlb
pop
ftst
xor
shrb
push
adcb
mov
add
adc
ds
dec
inc
cmpsl
ljmp
ret
mov
or
js
js
lds
dec
inc
push
stos
mov
imul
cmpl
fsubl
cmp
les
cmpsb
popf
pop
movsl
sahf
jmp
or
lcall
dec
or
enter
cmpsl
push
add
hlt
mov
and
cmpsb
jne
push
div
cmp
cli
jl
ret
add
cld
push
mov
mov
push
iret
push
scas
test
lret
dec
cmpsb
inc
cltd
fcmovu
repz
popa
pop
hlt
and
dec
jge
push
test
in
stos
clc
mov
shll
fnsave
jle
sub
dec
outsb
push
push
les
xchg
pop
push
cld
jnp
or
popf
mov
je
pop
out
push
flds
imul
mov
mov
shlb
xor
or
ja
and
lret
mov
les
pusha
sti
jp
xor
test
aas
xchg
jmp
adc
jg
mov
lahf
fs
mov
or
push
orl
stos
adc
test
push
es
fs
adc
imul
movlps
adc
fldt
sbb
test
inc
fsubr
jg
lahf
push
out
pop
inc
or
sahf
push
inc
loope
xchg
nop
sti
int
and
jge
mov
jmp
add
cmp
mov
xor
mov
idivl
enter
xchg
sarl
sub
mov
test
xor
adc
leave
cmp
and
jo
mov
lar
xor
rorl
aad
push
insb
dec
adc
inc
mov
cmpsl
lret
and
mov
pop
push
movsl
cmp
cmpsl
movsb
mov
push
fstpl
dec
xchg
and
mov
leave
in
push
jbe
jge
inc
lock
xchg
or
lret
shll
mov
divl
outsb
mov
jb
imul
iret
cmp
imul
mov
sub
lea
insl
xchg
pop
dec
and
inc
jl
test
cltd
push
mov
fcomi
packuswb
stos
mov
lods
loope
loop
pop
icebp
jl
test
mov
jb
test
into
cltd
rclb
jecxz
aad
lods
fwait
std
mov
mov
mov
scas
and
dec
push
inc
jbe
mov
inc
lret
sbb
cmp
push
and
lea
imul
lea
sub
xlat
mov
mov
dec
adc
out
int3
cwtl
xchg
aad
insl
jbe
sar
adc
lods
or
es
xlat
std
inc
and
imul
shll
xor
nop
rorb
outsl
hlt
aam
adc
gs
imul
sbb
and
aas
cltd
fnstenv
insl
jb
or
pop
nop
jg
cmp
repz
out
cmp
sbb
and
mulb
test
mov
mov
repnz
jmp
aad
in
out
pop
xchg
out
fcoml
negl
jp
mov
mov
jbe
out
jge
pop
ljmp
mov
fidivrs
lcall
and
mov
lcall
or
ds
stc
adc
imul
sarb
cltd
pop
pop
push
popf
imul
add
addr16
mov
xchg
xor
sar
daa
test
fcompl
insl
pusha
mov
loope
addb
out
mov
in
stos
cmp
mov
leave
mov
lret
lahf
js
mov
inc
sbb
sub
add
sti
jnp
data16
inc
add
mov
mov
inc
leave
or
flds
rolb
adc
icebp
adc
lret
hlt
int
loopne
xor
aad
insb
ja
ret
cli
sub
push
mov
jg
pop
mov
xchg
lea
jmp
jp
cmp
xchg
dec
xchg
and
mov
push
mov
pop
mul
aam
xchg
jo
jle
repz
or
shr
dec
xchg
leave
loopne
mov
push
cmp
inc
test
shlb
test
mov
aas
pop
jb
mov
pop
add
or
mov
xor
seto
stos
sbb
cmpsb
adc
xlat
movsl
jns
out
addb
push
push
lcall
lret
stc
clc
inc
outsb
jmp
popa
sti
repnz
aam
lock
sub
out
fdiv
dec
and
mov
arpl
clc
aam
cmp
and
mov
or
pop
or
outsb
leave
push
mov
subl
pop
ror
fisttpll
cmc
sub
sub
mov
jnp
mov
and
xchg
fcompl
shll
sub
jp
inc
xor
data16
repnz
leave
xchg
mov
mov
jg
shr
mov
adc
pop
mov
mov
cmp
adc
push
jb
sub
cmp
int
ljmp
sub
shl
in
aaa
lea
bound
lcall
push
jae
jns
mov
jge
dec
or
outsl
outsl
and
lds
cmp
adc
cmp
mov
ror
cs
psubsb
xchg
jo
inc
sbb
in
dec
sti
inc
fidivs
pop
insl
outsb
ss
loope
clc
lea
aaa
imul
dec
jbe
sarl
mov
and
rcll
fwait
std
enter
std
push
imul
loope
rclb
lahf
push
andb
sub
jne
pop
jne
xlat
mov
js
sti
scas
iret
xchg
test
push
mov
sub
imul
test
dec
leave
popf
pop
pop
fsubl
out
adc
push
sbb
fcoms
pop
in
sbb
mov
repnz
jne
jle
call
jle
jle
cltd
cs
imul
inc
pusha
add
ja
mov
test
xor
incl
into
test
loop
dec
adc
sbb
mov
pop
out
ret
lods
mov
jno
leave
sub
call
aas
lock
cld
movsl
scas
jnp
int3
sub
out
out
sahf
xorb
sbb
cmp
data16
xchg
jae
mov
into
lods
jl
rorl
mov
sub
mov
pop
cmpsl
or
call
pop
ljmp
fdivrl
shrb
jmp
xchg
int3
movsb
imul
pop
or
in
sbb
shll
jne
addr16
testl
pushf
jbe
cmc
sti
add
lea
gs
notb
je
cmp
and
mov
test
push
push
cmp
ljmp
imul
dec
cld
addr16
and
cmpb
loopne
ljmp
addr16
outsb
cmc
sub
in
popa
dec
fdivl
movsb
imul
clc
sub
mov
test
jp
outsb
pop
and
lock
sub
es
add
mov
movsl
sbb
pop
stos
loope
sub
mov
push
cli
daa
cmp
jle
xlat
into
cmp
fcoml
mov
and
rcl
fistps
fldt
fnstcw
mov
orl
and
sbb
sbb
out
pop
pop
mov
pop
sub
mov
inc
or
dec
xor
out
test
icebp
mov
sub
mov
cmpsl
addr16
add
iret
push
mov
ds
add
inc
imul
imul
push
mov
sub
ret
cmc
sub
es
clc
or
mov
adc
push
lret
movsl
mov
pop
iret
out
int
insl
push
sub
iret
stos
push
sar
aam
jb
in
xor
popa
sub
str
orl
hlt
repnz
and
in
out
mov
sub
cmp
pop
bound
adc
shlb
push
fiaddl
adc
aaa
mov
xor
or
pop
outsb
mov
fs
pushf
imul
mov
or
push
push
repnz
add
and
out
and
cmp
and
call
adc
dec
cltd
test
adc
rol
outsb
icebp
fsubrs
jecxz
xchg
les
cld
cld
adc
icebp
cmp
mov
add
sbb
repz
mov
mov
mov
sbb
add
insl
lock
ja
mov
jb
outsb
sbb
stos
mov
lock
mov
cmpsl
adc
pop
nop
inc
or
fimuls
popl
mov
fdivs
jge
adc
mov
lret
and
outsl
jle
fwait
sub
fbstp
jl
arpl
add
jge
add
test
in
or
test
in
adc
pop
stos
fmul
pop
lret
mov
in
jl
or
jmp
es
in
xchg
adc
dec
movsb
aam
fisttpll
push
shl
push
mov
cmpsb
and
iret
shlb
xchg
into
and
ljmp
mov
pop
or
icebp
fsubr
cmpsb
push
movsb
and
out
jl
data16
push
ja
arpl
jge
inc
testl
dec
push
jae
hlt
inc
int
push
out
push
mov
lret
mov
fisubs
mov
add
pop
inc
adc
lcall
or
daa
orl
jl
sub
data16
or
les
call
jmp
arpl
xor
jo
ss
pop
repnz
call
inc
mov
dec
fwait
repz
pushf
daa
ss
scas
push
pop
xor
in
mov
cmc
cwtl
inc
outsb
or
arpl
bnd
pop
addb
mov
dec
dec
loope
std
xorl
xchg
or
pop
pop
test
lea
xchg
cmp
cmc
pop
sbb
lahf
cld
stos
js
fistpll
push
lods
adc
cmpsb
cmpb
pop
xor
stos
movsb
not
pop
jmp
xor
in
popf
jl
inc
je
adc
xchg
cld
cmpsb
sub
sti
and
add
xchg
mov
aas
dec
fcmovne
sbb
add
gs
pop
mov
test
push
mov
lock
scas
scas
mov
cmp
sub
xlat
movswl
or
lea
mov
push
stos
iret
mov
push
sti
mov
mov
mov
insl
stos
into
or
imul
int
mov
mull
out
aaa
sub
pop
hlt
xchg
sbb
pop
int3
xor
rcrb
mov
outsl
push
adc
mov
mov
in
test
outsl
mov
mov
lock
jp
aad
scas
and
icebp
add
and
sub
arpl
or
dec
das
mov
cmp
adc
nop
jb
cmp
lods
jne
lock
push
shl
dec
add
xchg
stc
jae
jecxz
shll
and
in
sub
adc
mov
sub
and
fbstp
dec
or
jb
sarb
add
xchg
jne
jg
mov
lods
data16
adc
dec
enter
fcomps
cltd
push
add
incl
and
push
ljmp
int
std
addr16
loope
pop
sub
test
cwtl
jo
mov
lods
jg
jle
jmp
lret
xlat
fistpll
and
push
sbb
or
pushf
out
jmp
mov
or
push
jns
mov
sbb
jbe
cmp
iret
xlat
ss
adc
shll
scas
fsub
inc
outsb
in
push
push
or
imul
imul
syscall
mov
jns
loope
enter
loopne
aaa
stos
pop
mov
inc
test
mov
mov
rcl
leave
std
adc
jp
inc
xchg
jmp
in
xor
add
push
xchg
mov
mov
and
jp
dec
fcompp
xor
jae
and
adc
into
gs
lret
andl
push
and
insl
test
pop
or
or
adc
dec
outsl
push
fisubs
mov
rol
push
jne
dec
push
mov
out
jo
xor
mov
push
popf
scas
mov
dec
mov
dec
fnstenv
loope
aad
jge
jecxz
mov
out
stos
iret
not
mov
cltd
gs
or
lods
mov
sar
cmc
stos
jo
or
ljmp
mov
cmp
fs
push
xchg
push
dec
xor
adc
out
movl
and
jp
mov
xchg
sbb
repnz
out
aam
add
fistpl
and
mov
jle
push
mov
test
sahf
fldcw
arpl
and
adc
xchg
cmp
xor
mov
or
aad
call
or
daa
xor
mov
dec
daa
cs
js
mov
jecxz
decl
sbb
bound
popf
ljmp
in
push
imul
mov
rcrl
adc
dec
dec
push
leave
sbb
push
leave
and
xchg
inc
outsl
loopne
pop
call
mov
icebp
pop
cli
pop
inc
xor
inc
mov
scas
popa
jp
fndisi(8087
int
jmp
dec
icebp
sub
push
pop
add
pop
cmpsb
pop
lret
push
jmp
and
mov
sub
xchg
sarl
inc
push
in
ret
movsl
stos
mov
lcall
negl
xchg
mov
xchg
xlat
js
mov
ds
adc
neg
ret
push
push
jle
xchg
lret
push
hlt
stc
lahf
movsl
adc
adc
negb
lea
push
xor
cmpsb
pop
sbb
sbb
mov
jge
jp
dec
dec
dec
ljmp
cld
in
inc
cmpsb
adc
scas
scas
les
ret
fsubrl
hlt
leave
ret
aad
ss
pop
es
xor
pop
xchg
adc
push
sub
jo
pop
bnd
or
mov
pop
roll
xor
pop
std
mov
shll
or
xchg
xor
ljmp
mov
insl
push
or
and
jae
out
sarl
out
lods
jmp
jmp
sahf
jne
lcall
dec
outsb
popa
aam
test
adc
sbb
lods
xchg
int
inc
dec
stos
xchg
addr16
addl
add
xorl
test
push
sbb
in
je
cmp
test
ret
xchg
fisubrs
dec
sub
das
in
lods
and
pop
sub
lcall
mov
inc
repz
mov
flds
push
in
adcb
stc
add
cmc
ret
nop
xchg
add
lds
push
push
sub
sub
mulb
notb
inc
je
push
pushf
icebp
std
cmp
jmp
lcall
cli
out
popf
test
jns
cmp
push
add
jb
rcl
scas
cli
movsb
fimuls
push
lcall
mov
or
inc
repnz
jmp
mov
lods
mov
mov
outsb
fisubl
lret
jle
popa
lds
ds
pop
adc
movsb
nop
xchg
dec
inc
mov
mov
and
imul
dec
clc
pusha
and
pop
mov
sub
add
lea
adc
cmp
mov
adc
dec
rol
jecxz
mov
ret
notl
mov
int3
fwait
aad
mov
push
sub
cwtl
cmc
cltd
out
sub
fcmovnbe
sti
int
repz
loope
mov
or
add
sub
jp
push
iret
add
xchg
sub
fdivp
mov
jl
push
sar
xor
fidivs
loopne
dec
dec
ret
movsb
adc
mov
mov
jecxz
push
out
leave
push
pop
in
mov
jns
loopne
cmp
push
mov
pop
sub
scas
mov
push
xchg
lcall
rorb
mov
push
popf
jge
rcll
enter
std
pop
push
pop
std
lcall
cmp
xor
subb
mov
push
cmp
push
mov
xchg
call
xchg
std
dec
xor
cmp
fsubrs
jl
outsl
cmp
sub
add
sub
test
iret
mov
gs
or
cwtl
pop
std
mov
lds
pop
out
inc
pop
mov
das
daa
negb
in
lds
xor
add
stos
inc
push
repz
in
cwtl
rol
inc
es
movsl
incl
jb
ja
cwtl
cli
mov
xchg
pop
repz
sub
mov
into
jg
mov
shl
jnp
imul
xchg
je
sti
mov
or
aad
icebp
mov
imul
cwtl
out
push
sub
jns
mov
jp
mov
in
lret
sbb
sub
push
push
sahf
pop
dec
mov
adc
pop
int3
lods
mov
orb
shll
lret
cmp
stos
xlat
clc
mov
pop
cmp
cli
jecxz
xchg
cltd
das
pop
test
loopne
sub
fdivrp
repnz
enter
xchg
out
pop
xchg
js
push
rcrl
insb
mov
scas
mov
cli
jecxz
xchg
sbb
jb
dec
das
dec
inc
and
mov
daa
std
push
fcom
push
or
stos
in
xor
or
jns
sub
js
adc
mov
fildl
loope
sub
cld
xchg
and
out
sub
mov
xchg
adc
and
cmp
push
aad
in
int3
int3
pop
cmpsl
xor
adcl
cmpsl
stos
mov
cmp
jle
mov
sub
das
fdivrp
cmpsl
int3
inc
imul
mov
popa
lock
jl
adc
jae
mov
dec
jnp
lret
mov
adc
pop
push
test
aaa
mov
lock
scas
lcall
sub
inc
pop
pop
mov
cld
nop
cmpsl
es
cwtl
jae
bnd
adc
pusha
dec
inc
mov
sub
test
or
imul
xchg
jae
adc
dec
xor
insb
hlt
imul
js
mulb
jle
int3
imull
cmp
test
cld
adc
jecxz
pusha
jl
pop
call
repnz
or
lock
call
pop
cmp
jae
fildll
sbb
repnz
add
mov
aad
ret
leave
pop
cmp
jmp
lcall
hlt
dec
cmp
cltd
dec
jp
sbb
movsb
push
sbb
push
xchg
test
and
loopne
and
pop
int
xchg
test
jg
imul
jl
cmp
movsl
sbb
cmpsb
jne
dec
call
ret
jns
pop
mov
sbb
sbb
test
lock
push
push
xor
cwtl
pop
bound
insb
sahf
push
xor
outsl
addr16
rorb
mov
inc
mov
negl
inc
stos
test
xorb
mov
xor
or
ret
leave
fcmovb
push
pop
iret
pop
lods
leave
inc
and
cwtl
mov
std
push
lods
pop
sub
notl
and
mov
stos
pop
ljmp
mov
int3
dec
pop
mov
nop
mov
sub
jb
in
push
aad
jbe
jbe
imul
das
xor
or
stos
inc
mov
popf
mov
mov
mov
inc
mov
incb
test
data16
sub
jnp
lock
std
aas
std
mov
je
jge
stc
or
mov
ret
inc
test
es
adc
pushf
insb
es
fwait
pop
xchg
xlat
lock
adc
xor
mov
btc
mov
js
cs
sbb
aas
stos
xor
cmpl
lods
aaa
and
inc
movsb
in
outsl
loopne
ds
sbb
mov
fs
aaa
ja
pop
sbb
sbb
in
adc
jne
and
inc
fists
inc
je
xor
pop
push
dec
and
push
mov
ret
push
and
pop
repz
pop
or
xor
sahf
cmp
jecxz
push
mov
in
fs
sbb
push
in
lea
mov
outsl
in
adc
mov
dec
je
mov
scas
es
ljmp
movsl
inc
jecxz
mov
nop
rcl
lcall
jo
and
stos
jb
mov
jnp
pop
fsubrs
mov
rcrb
adc
bound
pop
out
mov
aas
mov
jb
aad
push
sbb
pusha
inc
jmp
es
in
mov
inc
sub
iret
bound
pop
mov
test
stc
fwait
scas
push
jo
daa
mov
shl
cld
dec
loopne
int
out
xchg
jmp
or
or
mov
push
out
dec
loope
mov
rol
adc
mov
adc
pop
mov
nop
or
mov
or
jmp
pop
add
inc
mov
das
cmp
jge
loop
or
insb
or
push
jmp
in
mov
jle
jmp
or
rolb
push
in
mov
in
pop
in
jg
shlb
out
sarl
incl
fs
fs
and
stc
or
sti
sbb
fucom
mov
cmc
loop
inc
orl
movnti
iret
fiaddl
mov
mov
lahf
pop
mov
pop
ljmp
ficoml
mov
bound
lea
xchg
and
xchg
imul
or
inc
fists
jp
mov
mov
mov
mov
in
movsl
jmp
es
outsl
jecxz
leave
mov
jo
inc
cvtps2pi
nop
frstor
iret
adc
lcall
push
data16
bound
jns
mov
or
or
mulb
ss
adc
out
nop
scas
mov
add
cmp
enter
sahf
dec
dec
pop
ja
sub
orl
scas
pop
gs
mov
mov
adc
push
jmp
pusha
in
mov
dec
pushf
movsl
test
movlps
and
or
dec
test
imul
imul
jge
mov
fwait
adc
ja
xor
shrl
les
stos
mov
cmpl
mov
cmp
js,pt
outsl
mov
pushf
int3
inc
jle
inc
sbb
je
lret
int
popa
test
cmp
dec
inc
mov
bsf
mov
fstps
incl
lret
jge
loopne
adc
sub
xchg
push
out
into
lret
or
dec
leave
or
stos
jecxz
out
mov
or
into
sti
and
adc
sbb
xchg
fsubs
cmpsb
scas
pop
xor
mov
mov
hlt
mov
inc
push
ffreep
jo
sub
popf
iret
cmp
dec
lahf
adc
ja
pusha
xor
mov
sahf
fnsave
inc
pushf
outsl
dec
jns
arpl
imul
and
add
mov
out
out
jp
imul
jae
std
aas
fnsave
push
icebp
or
mov
or
fiaddl
or
pop
dec
mov
jnp
fld
pusha
dec
mov
call
hlt
lahf
jb
icebp
xchg
or
inc
pop
repz
push
sub
add
mov
outsb
push
add
fdiv
insb
repz
insb
add
xor
aas
in
jge
mov
cmp
out
pusha
mov
xchg
adc
jne
daa
in
in
sbb
or
mov
sub
nop
test
bsr
into
mov
mov
jne
pop
xor
inc
repz
adc
mov
pop
add
jge
sarl
xchg
fucom
lods
call
ret
cld
into
into
das
shll
cmp
fistps
mov
pop
xchg
pop
or
out
out
lods
pop
xchg
imull
imul
addl
push
fnstsw
test
out
push
jbe
test
push
add
test
dec
sub
orl
nop
mov
jne
js
imul
cmp
sti
ljmp
cs
leave
jnp
test
daa
aaa
bsr
outsl
sub
inc
jmp
jg
xchg
cmpsl
sti
mov
adc
idivl
test
dec
int3
enter
or
test
nop
fsubrp
xor
and
xor
pop
fnstcw
mov
das
out
cmp
loope
xor
clc
xchg
mov
push
popf
mov
out
inc
aam
dec
or
lret
int3
xor
clc
jb
clc
xchg
repz
aas
rep
lea
and
mov
cltd
ljmp
adc
and
icebp
call
test
shlb
cmp
lret
jg
cmp
push
sbbl
ret
fbstp
repnz
pop
iret
jbe
dec
push
repz
sbb
xchg
pop
jne
dec
popf
mov
jne
jle
daa
push
and
cmpl
sarb
lods
icebp
xor
repz
scas
lods
loope
mov
push
scas
ds
aas
and
sbb
enter
inc
push
ds
mov
mov
mov
dec
outsb
mov
and
mov
bound
push
inc
xchg
lods
aaa
push
sub
subb
arpl
mov
leave
out
mov
addl
dec
jmp
ja
in
dec
iret
das
rorl
or
dec
shrb
mov
adc
shlb
icebp
fcompl
mov
iret
iret
test
int3
add
push
sbb
or
arpl
in
jb
out
test
cmpsl
xor
sbb
pop
mov
mov
inc
and
inc
inc
loopne
jmp
pop
pusha
sub
add
insb
mov
adc
mov
movsb
mov
test
fsts
into
inc
xchg
xchg
call
mov
mov
hlt
cmp
popf
mov
or
add
out
mov
jl
jnp
xlat
out
pop
pop
out
or
inc
adc
testb
les
pop
adc
dec
xchg
dec
dec
cmp
or
lea
ss
shlb
jnp
jns
andl
adc
fldt
mov
sbb
jge
mov
clc
ret
popf
add
out
cld
fisttpll
cmp
out
cmp
inc
fs
push
sti
sub
out
addr16
push
add
jne
fnstsw
add
cmp
popf
aas
fcoml
or
outsl
mov
lahf
add
dec
push
icebp
and
sub
add
jae
scas
dec
mov
xor
dec
sbb
or
pop
push
div
in
xchg
pop
out
jge
or
in
imul
addr16
lds
jns
popf
adc
int
jb
cmp
popa
dec
dec
lds
loopne
pop
push
dec
aam
test
push
or
push
add
lret
shll
jb
cmpl
xor
adc
add
xchg
jne
ljmp
incl
fxch
jg
shlb
xlat
or
cwtl
inc
mov
push
jb
dec
call
xchg
pop
stos
or
jmp
das
xchg
lea
movaps
push
mov
xor
out
cmpsb
mov
gs
test
cmp
negl
cld
movsl
push
sbb
mov
adc
mov
shr
repz
cli
sbb
and
xor
jl
mov
jecxz
sub
inc
jecxz
lahf
icebp
das
cmp
imul
jmp
repnz
push
adc
in
inc
inc
loop
scas
add
mov
mov
addb
sbb
insb
mov
xlat
sbb
xchg
sbb
in
mov
subb
adc
mov
cmp
cmp
add
jns
inc
cmp
inc
xlat
popf
ss
xchg
rol
test
into
jns
mov
dec
pop
lds
test
insb
cli
mov
xor
xor
pop
hlt
test
cmpl
and
push
xor
cwtl
and
in
lods
add
stos
sbb
int
jnp
cmp
sub
inc
enter
test
pushf
aaa
push
icebp
in
loopne
dec
sti
add
pop
mov
xor
sub
pop
ficompl
dec
dec
imul
decb
mov
xchg
mov
jns
popf
in
loopne
xchg
mov
sub
lea
loope
fidivl
subb
pop
insb
or
mov
xor
add
mov
xchg
add
imul
mov
xchg
or
xor
add
test
in
mov
add
mov
cmp
cmp
and
sub
fmuls
add
jl
mov
adcl
inc
sub
jne
sar
push
push
mov
pop
push
sbb
in
adc
rcll
xchg
cmp
mov
xor
stos
cmpsb
lahf
mov
out
shll
negb
mov
pop
jl
faddl
xor
lds
xchg
jae
add
mov
xchg
mov
addb
out
inc
mov
push
pusha
imul
sahf
repnz
rolb
pop
test
mov
mov
sub
mov
icebp
fwait
jnp
ja
clc
enter
mov
lds
ret
jecxz
dec
xor
subb
and
inc
cmp
out
pop
push
popa
adc
scas
popa
dec
or
stos
loopne
push
jbe
into
inc
cmp
push
mov
dec
jns
xor
sbb
jecxz
ret
outsb
pop
ret
mov
cli
sub
and
inc
icebp
das
xchg
mov
sbb
movsb
aam
into
jge
das
mov
push
addl
sub
lret
inc
call
adc
outsb
sahf
cmpsl
mov
sbb
inc
push
fcomp
fldenv
mov
cmc
ret
call
cmp
imul
lahf
out
dec
jle
shlb
xlat
repnz
sbb
or
nop
mov
lock
scas
mov
sub
and
mov
icebp
add
push
jbe
and
xchg
sub
outsb
and
adcl
data16
dec
outsl
clc
into
fs
inc
scas
and
test
cmp
sti
pop
aad
int
mov
push
mov
jl
push
ret
jae
dec
or
xchg
cmpsl
std
sub
pop
sarb
add
insb
or
pop
aad
mov
mov
ss
shrl
dec
xlat
les
xor
cmc
jo
jo
and
xchg
adc
xor
jae
ja
std
adc
ret
ds
add
lods
xor
jl
jne
push
hlt
push
inc
mov
scas
imulb
in
push
sti
inc
nop
fs
add
negl
mov
or
cli
jp
cwtl
pop
cmpl
rcll
lods
xor
push
ret
or
sub
loopne
cmp
lret
popf
xor
cli
dec
inc
mov
dec
test
cmp
sarl
ud1
mov
icebp
lret
cmpl
jmp
mov
xor
ds
je
jb
lret
xor
mov
mov
mov
dec
and
gs
sbb
or
jne
clc
mov
sub
xor
shrb
jns
xchg
ss
cmp
ret
and
scas
pop
inc
jg
inc
gs
cmp
dec
push
jmp
call
push
xchg
outsb
push
cmc
dec
cltd
lret
popa
imul
movsb
shrl
scas
dec
scas
sti
scas
cld
pop
cmp
iret
outsl
inc
ja
push
jns
cmpsl
test
int3
sub
mov
jne
mov
sub
repz
cmp
pop
adc
sahf
ret
mov
pop
adc
ficoml
inc
out
pop
int3
comiss
add
pop
push
mov
push
mov
inc
jl
fldcw
mov
or
aas
js
push
jno
shlb
lret
fwait
lods
sub
loope
mov
fs
fcom
dec
pop
int3
ficoml
sbbb
jge
call
add
out
pop
stos
aad
mov
pop
stc
xor
test
lods
mov
add
sub
adc
mov
movsb
inc
push
sbb
mov
add
mov
pop
imulb
dec
cmp
shll
mov
xchg
pop
xor
test
xchg
mov
and
aam
pop
inc
add
hlt
loopne
inc
jbe
mov
inc
insb
out
push
mov
cltd
fsubrs
mov
out
jbe
sti
repnz
lcall
outsb
ret
fcoms
cld
stos
pop
arpl
jb
repz
movsb
lea
into
mov
jmp
sbb
push
jg
sbb
jae
sub
js
lret
imul
ret
test
addr16
and
push
pop
lcall
mov
dec
and
icebp
push
lds
in
cli
clc
out
push
fs
mov
outsl
jo
aam
cmc
xchg
sbb
mov
shlb
sbb
and
mov
je
or
push
xchg
sbb
roll
xchg
sar
nop
int
push
into
mov
ds
repnz
mov
scas
cmp
lods
movsb
jo
imul
inc
stos
mov
rclb
popf
mov
push
daa
mov
mov
push
inc
fiadds
in
mul
jno
pop
sti
pop
jbe
dec
mov
mov
test
xchg
cmp
xchg
push
psubd
mov
mov
sub
addr16
cli
lds
pop
adc
sarb
maskmovq
testl
dec
push
add
pop
mov
sarb
adc
inc
mov
roll
cltd
lods
push
jns
mov
push
insb
jne
sar
adc
daa
add
jmp
lret
pop
sub
jno
imul
mov
xor
inc
aas
rolb
sub
dec
push
idivb
mov
bound
movsl
dec
notb
fidivrl
jmp
mov
mov
jb
adc
jmp
mov
iret
push
inc
cld
pop
je
xorb
sub
imul
push
mov
fnstsw
stos
sbb
ljmp
dec
xor
test
cmpsl
ss
ljmp
mov
hlt
adc
scas
xchg
lock
add
adc
shlb
std
sub
jne
cmp
mov
loopne
xchg
pop
pop
mov
in
sti
push
stos
insl
xor
imul
sbb
mov
mov
xor
outsl
je
dec
out
sub
lods
mov
out
xor
add
jo
cs
sub
dec
inc
loop
and
loopne
adc
push
popa
outsb
out
jne
mul
test
call
insl
push
mov
mov
inc
popa
pop
pop
pop
cli
and
mov
adc
cmp
add
or
pop
movsb
lods
xchg
mov
sub
xchg
int
add
push
jne
pop
insl
xor
dec
lret
in
sub
jns
repz
icebp
sub
fiadds
imul
mov
push
outsb
dec
aaa
mov
sti
cmc
ds
sub
inc
sub
in
or
mov
sbb
out
stos
xor
daa
add
aad
dec
lahf
push
leave
loopne
fwait
mov
mov
or
inc
bound
push
imul
cmp
outsb
stos
xor
nop
stc
dec
or
fldcw
or
imul
insl
cmp
addr16
js
lods
sub
inc
insl
push
or
adc
stos
mov
sub
lods
mov
cmp
xchg
std
outsb
sbb
inc
or
insb
out
xchg
int
shll
loop
hlt
jecxz
mov
scas
out
test
push
jo
add
cmp
mov
jle
lods
mov
stc
jne
and
xchg
xor
pop
mov
xchg
pop
and
cmc
dec
and
fsubl
ret
xor
mov
dec
imul
sbb
jbe
pop
push
push
xor
dec
dec
fucomip
scas
out
cmp
fiaddl
es
sub
and
jg
std
movl
jmp
xor
xor
jle
and
sbb
pop
outsl
xchg
inc
lret
lret
sbb
jl
jg
jmp
gs
fwait
dec
cmp
call
push
mov
loope
sub
and
adc
popf
imul
mov
jno
pop
mov
out
xchg
popf
push
je
xchg
arpl
gs
sbb
cmc
or
daa
pushf
dec
jnp
movl
or
xlat
mov
or
xor
mov
out
push
cmp
popa
jmp
xchg
mov
pushf
mov
scas
sub
add
mov
pop
mov
pop
bound
xor
mov
ljmp
sub
push
jge
ljmp
xchg
int3
fs
loope
dec
outsb
aad
cmp
sub
push
xor
imul
xor
imul
sub
pop
inc
mov
cmp
mov
icebp
hlt
adc
inc
xchg
es
arpl
dec
mov
pop
mov
mov
loop
pop
leave
std
adc
push
in
mov
popl
dec
push
mov
sahf
mov
and
xor
push
out
push
add
addl
dec
imul
mov
cltd
test
push
lea
push
xor
lea
movsl
cmp
loope
or
rcl
ret
jp
loope
int3
push
pop
and
jle
pusha
pop
cmp
jb
jmp
data16
mov
mov
sahf
cld
xor
test
repnz
imul
data16
jno
xchg
mov
call
or
cmp
out
mov
xchg
cmp
inc
pop
test
lods
xor
shll
cmp
dec
adc
xor
movsl
movsl
and
mov
dec
sahf
inc
xchg
xchg
mov
sbb
jle
dec
scas
mov
ret
imul
adc
mov
mov
jnp
test
sarb
mov
jecxz
call
mov
sbb
mull
ffree
rcr
mov
ds
and
push
cmp
imul
mov
cmpsb
add
sub
pop
loope
hlt
sub
shr
out
test
sub
cmp
add
adc
push
loop
in
mov
into
call
cmp
insb
in
repz
xor
mov
repnz
add
dec
adc
xchg
add
aam
fs
inc
fld
shl
sbb
pop
popf
movsb
xor
std
imull
and
rcr
sahf
sahf
mov
cwtl
nop
jns
pop
subl
mull
and
xor
push
xor
aas
sub
adc
mov
push
lods
mov
sbb
fs
dec
jmp
mov
cmp
push
mov
add
testb
mov
pop
mov
push
xchg
dec
xorb
jno
lcall
inc
outsl
mov
xchg
sbbb
mov
outsb
mov
lea
xchg
xchg
arpl
out
test
fs
ficomps
adc
int3
cwtl
fsubrl
push
fsubl
insl
cs
and
out
into
sbb
cmp
and
jb
sarl
loope
repnz
fsqrt
push
aad
push
xor
pushl
movsl
sbb
or
test
cs
mov
cli
cwtl
out
xor
movsl
scas
cmp
jae
mov
add
cmc
pop
movsb
ljmp
xchg
enter
dec
inc
mov
test
sub
enter
cmpsl
decl
pop
push
pop
aas
fucomp
imul
mov
sub
lock
test
cmp
fisubrs
cmc
mov
xchg
ret
jne
repz
int
mov
mov
cmc
sub
mov
imul
je
cmp
dec
push
xor
mov
dec
mov
jle
push
dec
inc
or
in
mov
jo
lods
sarb
dec
hlt
andb
icebp
les
clc
mov
lods
decl
js
les
in
sub
arpl
adc
stos
xchg
pop
jmp
push
addr16
scas
mov
xchg
test
jl
sahf
daa
push
bound
hlt
jmp
lods
cmpl
in
pusha
nop
imul
roll
fdivrl
and
jno
dec
mov
xor
xchg
addr16
dec
jmp
push
loop
xor
push
int3
jle
setp
jbe
add
call
mov
jmp
add
roll
out
aas
mov
es
out
ret
pop
loope
ret
icebp
dec
cld
js
dec
mov
movsb
lods
sbb
int3
bound
outsb
jns
dec
jne
add
xlat
aam
ret
cmp
add
sbb
icebp
mov
sahf
cld
roll
and
test
push
std
mov
in
mov
xchg
lods
mov
insb
sbb
and
jne
stos
in
inc
iret
add
das
lds
sbb
jnp
in
push
pop
mov
or
sbb
inc
push
mov
mov
incl
sub
lcall
daa
xchg
ret
sub
mov
jns
push
cmp
mov
inc
sbb
cmp
sbb
xchg
stos
loope
movsb
and
pop
scas
fs
das
or
shlb
pusha
bound
jbe
daa
out
mov
fisubl
adc
dec
jnp
inc
test
mov
dec
jb
imul
pop
cmp
into
ds
ss
mov
or
iret
pop
and
mov
push
lahf
into
out
cmp
push
andb
imul
pop
test
je
mov
hlt
hlt
mov
inc
mov
cmp
lret
xchg
xchg
add
inc
arpl
fsubr
fmulp
mov
stc
insb
cmp
ds
inc
inc
ja
loop
sbb
iret
xchg
mov
push
imul
and
dec
cmp
movsb
cmp
dec
adc
pusha
hlt
sbb
mov
adc
repnz
inc
mov
js
jp
out
pusha
aas
into
mov
dec
jno
mov
xchg
xchg
add
stos
cmp
dec
inc
push
movsl
leave
inc
inc
push
out
cmpsl
inc
cmp
jl
cmpsl
mov
inc
mov
or
fcmovne
sub
or
test
pop
fadds
rep
jmp
push
xchg
test
ds
lods
and
stos
sarb
pop
mov
cmp
xchg
sbb
test
mov
sub
test
repz
fucom
dec
push
sarl
testl
sbbb
or
daa
aad
mov
insb
into
testl
cli
pop
sahf
or
les
add
arpl
mov
push
mov
pop
cmpsb
xor
jae
and
dec
outsb
xor
in
cmpsl
in
in
and
shl
pop
inc
loopne
dec
mov
jge
lcall
or
outsl
fmuls
out
imul
scas
les
pop
rorb
int
stos
scas
jecxz
cmp
ljmp
dec
addl
mov
adc
mov
jg
paddusw
pop
and
dec
adc
sbb
xchg
arpl
push
xchg
cltd
dec
or
les
fbld
in
mov
bound
clc
cmpsl
sub
mov
sbb
sbb
xor
adc
pop
sbb
inc
cs
pop
cmpsl
mov
outsl
xchg
addr16
repz
mull
xlat
pop
gs
rorb
xor
inc
test
mov
lds
cmp
hlt
mov
mulb
or
xchg
cltd
jg
adc
and
clc
adc
lret
push
out
push
out
mov
out
insb
out
mov
jns
or
sub
xchg
mov
sbb
pop
sbbb
push
adc
daa
cmp
fwait
enter
xchg
adc
jp
cmp
dec
incl
add
or
xchg
and
lods
add
or
add
subl
jb
sbb
jp
shlb
and
or
nop
adc
lahf
jle
cmp
rolb
ret
int3
jno,pt
jmp
push
cmc
jns
mov
icebp
nop
fmuls
xor
lods
dec
push
sub
xchg
add
fisttps
fwait
in
out
push
cmp
xchg
bound
inc
lods
notl
xor
and
fadds
fwait
inc
jmp
dec
xchg
cmp
hlt
jnp
insl
imulb
hlt
jle
les
push
xchg
js
aas
ljmp
xchg
lock
push
outsl
and
dec
jnp
cld
fisubrl
insb
fnstsw
in
pop
inc
xchg
push
inc
insb
mov
je
mov
cmc
fsubrp
sub
lahf
jle
dec
cmp
fs
jge
xchg
dec
cmp
out
xor
xor
and
inc
fnstsw
sbb
je
cmp
mov
fwait
fwait
addl
jg
ficoms
mov
cs
adc
movsb
sahf
mov
loop
mov
mov
call
test
imul
dec
jno
test
mov
jecxz
jge
pop
das
je
ds
sub
mov
inc
xchg
lds
imul
mov
fildl
sub
inc
paddusw
cltd
pop
into
aad
cmp
stos
add
push
or
sub
pop
xorb
jo
xor
lret
divb
and
and
outsb
adc
and
jg
sbb
insl
pop
pop
clc
sub
outsb
imul
adc
cmp
dec
ficoml
fsts
daa
arpl
mov
xchg
les
pusha
movsb
jmp
cmp
and
fimuls
sbbl
push
sub
mov
fwait
xchg
cmp
aam
mov
jl
pop
sub
push
pushf
sbb
and
pop
push
test
push
ljmp
leave
js,pt
adc
xlat
sahf
jno
mov
mov
pop
inc
sub
icebp
enter
fdivp
decb
add
cld
fwait
cmp
lock
movsl
adc
icebp
iret
jnp
sbb
adc
and
and
cmp
lcall
mov
shr
pop
faddl
adc
and
jnp
xchg
jnp
sbbl
dec
movsb
inc
adc
dec
fnstenv
pop
jge
rolb
adcl
xlat
movsb
stos
arpl
adc
stos
jmp
arpl
arpl
gs
daa
sti
insb
es
pop
or
and
ficompl
fisubrl
jl
dec
mov
out
adc
xor
jnp,pn
neg
in
xchg
loope
or
js
push
xlat
fmull
cli
ror
xlat
sub
out
mov
adc
and
mov
jno
ret
cmpsl
outsl
sbb
xchg
dec
mov
movsb
filds
sub
fistpll
or
ret
jp
jb
and
enter
mov
aas
jg
ret
and
mov
xchg
ret
pop
and
mov
xchg
mov
loope
mov
pop
outsl
add
stos
out
ret
gs
push
enter
or
lahf
icebp
fs
sbb
lods
adc
pusha
inc
fstpt
xor
aas
insb
loop
pop
std
mov
rcll
jmp
mov
les
mov
ljmp
cmp
mov
ss
addr16
incb
xchg
cmpsl
adc
push
inc
push
push
pop
xchg
mov
fistpll
push
scas
jg
test
outsb
jecxz
jle
mov
push
push
rorb
sub
cmc
in
adc
sbb
mov
push
xchg
push
int
rorl
fucom
fwait
cmp
cs
in
sub
sub
push
jnp
fs
rorb
jp
dec
xor
add
insl
jno
xor
in
pop
data16
scas
xchg
or
mov
and
shll
stc
cmc
icebp
insl
push
test
getsec
sub
imul
push
aam
loop
loopne
sub
popa
fstl
push
ret
jae
or
inc
rcrl
scas
dec
and
arpl
fsubr
xchg
xor
imul
addb
or
or
je
jo
lcall
jb
xor
sub
movsb
dec
sub
cli
and
xor
pop
je,pt
cmp
inc
cmp
mov
in
insl
cmpsl
push
scas
in
lcall
add
lods
xchg
ja
cmp
pusha
repnz
subb
inc
or
shlb
cmp
mov
test
mov
cltd
add
scas
jmp
rcl
sar
fs
xor
add
fwait
out
push
xor
rdtsc
sub
mov
cmp
fisubrl
push
int
sbb
pop
or
mov
in
xor
movsl
rcrb
out
pop
inc
sbb
jle
icebp
jne
popa
mov
jns
ljmp
sub
jb
lock
mov
sbb
add
scas
idivl
cmp
icebp
sub
out
scas
mov
in
inc
inc
popa
int3
cmp
lea
mov
sub
cld
into
mov
push
cltd
mov
daa
addr16
sub
inc
xchg
xchg
add
lret
jl
in
aam
les
scas
cmc
mov
sbbb
insb
add
dec
ds
dec
mov
xchg
pop
adc
xchg
adc
fists
xor
dec
xorl
sub
test
sbbl
xchg
mov
or
push
xor
bound
out
imul
or
fs
hlt
pop
lods
cmp
inc
inc
jge
aaa
dec
pop
cmpsb
inc
testb
into
adc
adc
in
adc
xor
add
rclb
jecxz
mov
sti
lock
shr
clc
int3
adc
iret
xor
adc
jnp
jno
lcall
mov
push
mov
sub
test
call
add
mov
les
shlb
push
add
insl
jp
dec
push
cmp
in
mov
mov
sub
pop
fs
mov
jge
cmp
push
adc
dec
jb
inc
outsl
pop
std
arpl
in
jge
nop
iret
fcmovb
push
pop
push
jnp
fidivrs
test
inc
push
jno
addr16
or
movsl
jno
lods
adc
lods
lds
pop
push
in
das
push
sbb
adc
mov
xlat
outsl
lods
and
mov
icebp
pop
lahf
fadd
mov
add
and
pop
cltd
fidivrs
cmp
inc
mov
pop
sbb
stos
psrlq
jle
leave
movsb
xchg
and
hlt
mov
cmp
cli
mov
or
movsl
andb
fstpt
hlt
aam
push
movb
mov
sub
dec
fucomi
push
loope
add
pmulhuw
lea
negb
cmp
loop
push
data16
les
mov
cmp
outsb
mov
xchg
jecxz
dec
mov
or
xchg
sbb
in
pushf
adc
cltd
cmp
loope
pop
in
push
dec
push
inc
out
aas
mov
outsb
das
movsl
cmp
lahf
out
test
cwtl
adc
mov
inc
ficomps
mov
data16
lods
xchg
mov
sbb
mov
adcl
test
mov
push
mov
or
or
lret
data16
push
lods
mov
test
lret
xchg
pop
int
ds
imul
loope
bswap
inc
andl
test
rcrl
cmc
adc
xor
test
je
cmp
mov
xchg
nop
cmpsb
jecxz
ds
stos
sarb
push
or
or
fwait
mov
shll
and
push
mov
inc
das
push
in
dec
es
jg
inc
xchg
sti
add
imul
sub
sbb
inc
mov
int3
mov
outsb
arpl
pushf
adc
sub
daa
ja
stos
hlt
mov
push
sbb
adc
xchg
jle
imul
add
adc
mov
mov
pushf
popa
pop
aad
and
bound
fs
stc
insb
iret
adc
mov
fldenv
dec
notb
sub
and
cli
cmp
cmp
pop
mov
sub
movsl
mov
repnz
daa
jecxz
mov
pop
sbb
shlb
xor
pop
jns
mov
or
ss
leave
and
xchg
fs
gs
addr16
add
cs
rcll
aaa
xchg
movsb
cmp
dec
cmp
rcr
loopne
test
jl
sub
sbb
pop
jno
js
sub
test
or
ja
sbb
pop
sub
mov
shlb
pop
cmp
or
xor
idiv
loop
hlt
xchg
popf
add
sub
outsb
rorl
imul
ss
stc
and
push
and
or
subb
enter
popf
cmp
inc
sbb
fucom
js
xchg
mov
mov
loope
ds
pop
lea
mov
dec
movl
aam
es
add
add
pushf
xor
sbb
cmpsl
inc
repz
inc
add
pop
outsl
or
shr
jo
in
sub
js
mov
fcomip
sahf
push
sbb
mov
test
and
jne
aad
int
std
xchg
shrl
inc
shlb
jp
push
inc
xchg
adc
daa
aas
mov
iret
xchg
push
sub
sbbb
or
push
cld
add
sub
ss
fsin
lock
dec
pop
mov
lods
inc
lea
and
push
sbb
lretw
xchg
mov
push
pop
xor
mov
and
stc
jmp
dec
mov
push
cmpsb
adc
mov
ss
ret
inc
push
adc
and
je
clc
lock
pop
daa
sahf
aad
push
mov
loope
push
add
jbe
push
or
and
pop
jmp
outsb
lock
pop
pop
xchg
ljmp
jne
push
outsb
xor
mov
sub
mov
adc
jo
jg
out
fisttpll
xchg
xor
mov
bound
jbe,pt
push
lds
push
adc
mov
out
test
sub
daa
cwtl
in
aaa
add
sbb
inc
dec
sub
jmp
pop
mov
xor
dec
fistps
clc
pop
adc
add
cmp
mov
mov
push
or
popa
lret
push
push
mov
or
sahf
das
xchg
in
js
jg
dec
sub
aaa
into
xor
mov
rol
jns
addl
out
dec
inc
ficomps
outsb
iret
pop
adc
gs
pop
shrl
pop
test
mov
cmpsb
push
test
jae
lret
mov
clc
orb
adc
mov
out
and
aas
subb
inc
inc
cs
outsb
cld
mov
add
jle
cmp
xor
mov
pop
sub
das
mov
mov
and
std
mov
loopne
pop
cmp
loope
outsl
jecxz
add
lds
dec
inc
insb
adc
cltd
call
cmp
inc
fyl2xp1
sbb
fwait
ror
or
or
cmpsb
outsb
out
mov
xor
and
pop
aad
test
pushf
xchg
in
pop
bnd
fistps
jae
dec
cmp
dec
int3
lea
and
shlb
push
dec
daa
jbe
das
push
loop
les
nop
fsubs
xor
dec
jge
xchg
stc
or
ret
ss
std
xor
xchg
xor
xor
out
fcomps
sahf
mov
pop
dec
xchg
pand
shl
leave
or
stc
adc
imul
mov
loop
loop
sbb
push
aad
pop
add
cltd
adc
adc
cmp
pop
out
mov
inc
push
leave
cmp
lret
loope
repz
mov
push
inc
jbe
out
sub
ret
adc
cmp
jle
gs
iret
pusha
in
jle
jb
xor
sub
fsub
jl
adc
flds
jae
cmc
jg
imul
ficoms
adc
lcall
jg
add
xor
cmp
addr16
push
xor
mov
cli
dec
out
mov
sbb
stc
cmpsb
out
add
test
js
movsb
loopne
outsb
sarl
jecxz
add
xor
push
sbb
je
hlt
or
jo
mov
sbb
jl
or
insl
test
dec
jl
and
into
xlat
sbb
fisttpll
dec
cmp
arpl
mov
pop
dec
insl
in
in
lea
insb
jl
pop
jp
push
je
dec
stos
add
add
repz
dec
repnz
les
repz
pop
jle
add
das
inc
in
mov
aad
push
fstl
mov
jbe
test
or
push
mov
jmp
clc
pop
dec
pop
insb
dec
into
adc
xor
outsl
ficoms
cmp
gs
test
out
push
imul
sub
xor
mov
xchg
rclb
xor
in
mov
mov
or
mov
bound
lea
mov
and
les
loopne
test
mov
movsl
mov
ss
shrb
lds
add
jle
lock
adcb
cmp
into
iret
imul
pop
cmp
or
ret
adc
cmpl
sub
lcall
movsl
shll
js
mov
movsb
sub
adc
popf
cmpsl
aad
push
rolb
iret
movsb
es
dec
cli
fucomp
sub
repnz
cld
mov
mov
and
mov
in
repnz
rorb
gs
pop
jle
in
or
ljmp
mov
ss
call
push
mov
xchg
loop
pop
cwtl
out
clc
xchg
push
inc
dec
cli
push
jns
sub
subl
loopne
in
xchg
mov
xlat
push
mov
daa
mov
push
mov
lret
and
dec
pop
mov
pop
add
mov
dec
xor
pop
mov
dec
xchg
xor
jp
mov
dec
iret
leave
hlt
mov
and
push
xchg
roll
mov
xlat
cmp
cmpsb
mov
cmpsb
sub
or
ss
mov
push
mov
push
lret
jbe
pop
adc
jp
adc
adc
stc
mov
mov
psubw
inc
dec
or
mov
or
sbb
jg
sub
addr16
xchg
jbe
into
mov
dec
nop
movsb
or
popf
mov
cmc
push
sbbl
xlat
add
addb
push
pop
popa
hlt
jne
push
test
ljmp
andb
jno
jg
cmpsl
xchg
das
push
call
and
test
js
mov
xchg
test
lea
mov
insl
or
sub
xchg
fists
add
xchg
stc
cmp
sbb
adc
in
in
jbe
pop
mov
pop
mov
mul
mov
ror
pusha
arpl
insl
mov
cmp
dec
sub
lock
cmp
dec
repz
adc
mov
es
push
test
sub
jo
jb
or
xchg
pop
xlat
inc
pop
dec
jg
add
add
lret
test
or
xchg
dec
add
sub
imul
dec
cmp
scas
dec
xor
cmp
inc
xor
stos
cmp
dec
addr16
push
mov
add
jg
mov
aad
pop
mov
pop
xor
aaa
icebp
add
adc
or
mulb
int
mov
xor
in
scas
rep
fmull
mov
pop
in
push
sub
pop
in
jne
pop
sti
ja
jo
iret
adc
test
sbb
add
jmp
gs
out
fsubl
cmp
loope
ja
test
sbb
inc
lods
inc
test
cli
mov
pop
mov
xor
inc
xchg
shrb
stos
jmp
push
push
mov
jo
lahf
lods
mov
push
lahf
jle
sub
mov
popa
and
call
inc
jmp
hlt
and
or
mov
inc
xor
addr16
insb
cli
loope
xchg
out
fstpt
jl
xor
stos
mov
inc
sub
dec
jb
mov
outsl
es
dec
loopne
xchg
inc
adc
sbb
gs
mov
out
mov
adc
jmp
push
xlat
adc
daa
push
std
jb
out
shlb
adc
mov
dec
mov
jae
mov
icebp
push
cmp
sub
inc
and
cs
sub
addr16
jb
and
dec
push
push
xchg
sub
insb
xchg
fidivrs
mov
mov
sbb
adc
xchg
or
and
jge
and
imul
dec
xchg
pop
arpl
mov
movsb
and
adc
mov
push
sahf
in
push
test
jmp
mov
dec
jb
add
hlt
insb
mov
mov
shlb
jecxz
push
popa
clc
sbb
push
xor
xchg
add
int3
push
push
and
mov
sbb
fs
dec
jb
push
cltd
call
add
xchg
shl
out
rolb
xor
xor
std
mov
pop
stc
adc
js
scas
lock
fbld
cmp
fstl
add
test
lds
push
imul
test
push
fsubl
jle
mov
outsb
jge
idivl
sub
cmp
rcrb
out
loop
pop
inc
jbe
push
cli
jo
movsl
bound
stc
mov
out
cld
stos
cmp
cmp
xor
js
ret
mov
push
rdtsc
pop
ja
cmp
std
dec
cmpsl
sbb
idivb
push
sbb
adc
lock
lcall
pop
stos
cmpsl
ja
cmp
adc
jle
pushf
dec
mov
inc
pop
out
les
xor
int3
xor
cmp
and
cmpsl
pop
xchg
mov
mov
pop
cmpsb
arpl
in
xchg
punpcklbw
cmp
push
add
push
or
cmp
out
icebp
xor
les
or
push
adc
andb
out
mov
sti
push
mov
adc
jle
dec
into
inc
stos
xor
cli
je
mov
test
addr16
dec
in
mov
and
aas
jmp
jne
je
adc
sbb
shll
insb
fdivl
daa
fmulp
sub
jae
jns
fcmovnbe
mov
outsb
or
or
push
add
iret
sbb
mov
sbb
push
faddp
add
cmp
shr
and
push
scas
xchg
scas
outsl
loope
sbb
sub
adc
out
xlat
add
dec
or
adcl
clc
stc
rorl
push
jns
loopne
and
or
loop
fwait
aaa
mov
mov
ja
out
sub
mov
pop
data16
mov
mov
and
sub
sub
adc
movsb
dec
xchg
daa
jle
dec
mov
popf
ret
pop
jne
ds
lcall
push
in
rcll
or
cmp
sbb
rorb
push
jno
dec
loope
int
stos
xchg
inc
enter
xlat
lcall
add
in
icebp
fldl
leave
adc
jecxz
xor
pop
mov
shll
dec
add
out
faddl
adc
out
mov
aaa
sbb
sbbl
ret
ret
push
subl
pop
daa
and
pop
cmp
test
ret
fldt
push
orl
mov
mov
test
call
sub
jle
repnz
pop
mov
mov
xor
arpl
inc
sti
jne
pop
jne
sub
lret
pop
sti
mov
sbb
data16
sub
push
sub
nop
push
add
es
sarl
or
xor
pop
js
scas
adc
mov
sbb
xchg
pop
jg
jl
pop
pushf
add
adc
or
pop
shlb
cwtl
cmp
addl
ret
lea
imul
pop
icebp
loope
pushf
cmp
stos
pusha
mov
jecxz
btc
flds
addl
pop
ficoml
movsb
aaa
pop
in
sub
jnp,pn
inc
push
faddp
fists
adcl
repz
fimull
jae
fistpl
xor
adc
loope
stos
in
das
inc
ret
int
and
xor
mov
or
mov
data16
push
jno
lret
adcl
adc
dec
icebp
in
push
push
jecxz
mov
jecxz
cwtl
mov
xchg
sub
flds
call
arpl
sub
mov
stc
push
cmp
stos
shlb
jl
jl
loope
inc
push
jae
out
ds
push
pop
inc
dec
add
cs
sbb
rcrb
cs
scas
xchg
pop
mov
pop
fldlg2
les
push
sti
sub
xchg
jne
call
data16
cltd
std
mov
dec
fst
lret
inc
cwtl
xchg
test
cli
fisubs
inc
jo
je
cmp
loop
mov
movsl
mov
sti
jae
mov
mov
mov
test
ds
test
enter
adc
in
arpl
cmc
mov
loope
mov
push
adc
sbb
mov
into
loopne
aad
cmp
or
pop
push
cmpsb
sbb
arpl
xor
mov
rol
push
xchg
test
int
pop
mov
cmc
adc
xchg
xchg
xor
inc
sub
insl
out
jmp
das
ss
mov
stos
out
sti
shlb
jb
lret
out
test
imul
mov
mov
inc
jl
call
lret
xchg
shrl
pop
adc
nop
lret
cmp
subl
mov
or
xor
test
pop
loope
lods
test
iret
lds
cld
lret
fucomi
int3
cmp
xlat
mov
jle
and
push
test
arpl
fdecstp
jg
pop
dec
mov
loopne
add
clc
and
arpl
and
add
add
adc
bound
jmp
xorb
mov
shrl
jl
loop
mov
mov
and
cmp
or
xor
jle
dec
fisubs
out
xchg
jns
add
repz
aam
jmp
dec
mov
imul
test
addr16
repnz
xor
cld
sti
push
pop
mov
ljmp
imul
fcmovnu
push
mov
les
ljmp
mov
inc
clc
into
imul
xchg
inc
mov
adc
cmpsl
iret
pop
mov
hlt
dec
mov
jp
push
jno
bound
in
testl
jae
cmc
pop
inc
ret
imul
test
sarb
mov
sti
in
xchg
push
lea
adc
nop
pop
mov
push
xchg
and
mov
std
push
or
pop
adc
mov
cmp
js
inc
test
lret
mov
and
lds
mov
dec
pusha
xchg
test
sti
fsubrs
leave
in
pop
pop
ljmp
adc
mov
xchg
lods
mov
cmp
mov
mov
out
je
push
lcall
ja
outsb
mov
in
fisubrl
add
inc
mov
fwait
icebp
sti
cltd
enter
mull
repz
lcall
jnp
imul
popa
sbb
lods
mov
popf
lea
lock
sbb
add
rol
mov
aaa
imul
cmpsb
jl
xchg
dec
pushl
movsl
movsb
stos
jne
stos
fdivrl
pop
add
add
adc
shll
jne
sub
fisttpl
push
jnp
and
push
adc
inc
popf
push
mov
mov
lods
push
insl
mov
xchg
repz
xchg
in
or
or
cmp
mov
mov
sub
gs
popf
mov
push
outsl
xchg
lds
and
dec
push
int
and
dec
xchg
out
inc
in
lret
stc
in
jo
rcrl
sarb
push
cmp
sbb
es
test
imul
ljmp
out
std
loop
mull
jae
inc
fmul
xchg
fidivrl
pop
cld
mov
ss
mov
mov
int
in
jb
push
sbb
in
push
pushf
and
ret
push
loope
or
xchg
int
sub
or
test
and
addr16
xor
or
fcoml
mov
inc
mov
test
jmp
cmp
jno
push
loopne
cld
sbb
xchg
scas
dec
sti
add
rclb
sbb
push
dec
xor
test
subb
mov
add
in
scas
sbb
and
and
mov
push
mov
dec
insl
cltd
push
pop
push
adc
jmp
popa
add
in
adc
fdivrs
xchg
sar
sub
adc
xor
dec
xchg
fdivp
cs
mov
sarl
jb
je
repnz
mov
arpl
cmp
in
mov
hlt
ja
scas
xchg
fs
js
jg
or
cmp
mov
loopne
xchg
shrl
int
cmpsb
or
ret
int
adc
xchg
loop
jle
lret
mov
sub
jg
pop
mov
jmp
sub
fmull
mov
sub
jecxz
ret
push
adc
sbb
adc
mov
cmpsl
push
push
sbb
out
adc
cwtl
in
cmp
mov
mov
inc
aam
bound
rcll
jge
arpl
imul
push
cltd
add
fstl
into
out
mov
push
dec
sub
nop
sbb
inc
or
out
or
mov
xchg
sahf
mov
mov
sahf
mov
stos
jg
lret
cmp
jno
xchg
mov
push
jp
test
jge
nop
jecxz
mov
cwtl
call
icebp
mov
add
scas
sub
dec
sbb
inc
lahf
popf
cmpsl
and
ja
in
push
gs
popf
adc
add
and
cs
insl
dec
jle
lret
std
mov
leave
inc
adc
ret
jb
in
popf
mov
inc
jae
test
popf
dec
testl
xchg
adc
in
add
stc
jmp
add
cmpsl
push
arpl
call
aas
push
dec
rorb
xchg
mov
loopne
ljmp
pop
loopne
fcoml
or
das
ret
mov
das
cld
scas
nop
rcr
iret
xchg
xchg
xchg
loopne
cli
sbb
je
dec
setge
jb
push
mov
sti
adc
and
popa
adc
scas
ds
cmp
xchg
lods
dec
call
jb
out
or
pop
pop
jg
jg
dec
jg
jmp
fcomip
cs
xchg
test
mov
sbb
into
aas
pop
mov
xor
xchg
insl
mov
mov
mov
pop
push
sbb
mov
mov
cmp
cmp
mov
jb
inc
stos
dec
test
mov
pop
out
shlb
or
je
or
daa
daa
sbb
test
lds
out
mov
sti
push
rclb
jle
and
dec
mov
add
mov
cmpsb
fdiv
add
and
mov
xchg
int3
outsl
les
mov
sbb
push
leave
inc
pop
movsl
xor
cwtl
stos
push
jns
or
sbb
xor
mov
xor
mov
xchg
das
jb
jp
and
out
popa
cltd
loop
mov
mov
push
ss
jb
pop
inc
into
cli
or
and
sub
xchg
jp
mov
and
add
push
fs
push
jecxz
mov
xor
jnp
mov
inc
jl
mov
loope
pop
push
and
cmp
in
cmp
outsl
lods
jg
jne
cmp
push
roll
ja
in
fsubl
mov
mov
push
rolb
adcb
mov
dec
jns
pop
ljmp
ja
push
xchg
pop
sub
push
es
fidivrl
pop
ficoms
mov
stc
adc
popf
and
pop
out
cltd
loope
jp
cmp
mov
push
cmp
lock
ret
xchg
xchg
dec
ret
mov
add
xor
movsb
popa
idiv
pusha
js
and
lcall
sub
aad
out
sbb
and
test
dec
or
out
inc
enter
addr16
xor
inc
mov
inc
dec
add
sti
lahf
pop
jl
pushf
sbb
inc
lret
lock
aam
cwtl
add
mov
and
enter
cmp
enter
mov
ja
fstl
sbb
cmovnp
lret
mov
xchg
lods
and
mov
inc
sti
cmc
test
cmp
xchg
xchg
jecxz
or
cs
cltd
sbb
bound
jp
arpl
lahf
iret
out
shll
fsubs
and
insl
rorl
fwait
jle
mov
sub
mov
or
jb
pop
loope
mov
outsl
cmpb
jmp
int3
inc
stos
dec
test
out
mov
les
pop
dec
dec
out
movsb
add
cmpsb
ror
jno
loop
push
es
ret
popf
clc
call
js
xchg
inc
repz
cmp
aad
movsb
lea
inc
xchg
mov
and
mov
ret
enter
mov
xor
inc
jo
orb
stos
popa
in
mov
ds
enter
imul
shlb
mov
xchg
enter
shl
sub
or
pop
faddp
dec
fdiv
cmp
add
xor
out
in
cmc
inc
enter
xchg
scas
fs
sbb
cmc
aad
pop
cmp
inc
adc
fidivrl
add
shll
xchg
inc
dec
push
imul
icebp
cmp
and
nop
outsb
iret
and
sbb
sarl
jnp
dec
mov
shrb
dec
cmp
xchg
mul
leave
add
mov
cwtl
fucomp
fnstsw
fldt
jbe
lcall
stos
les
icebp
xchg
jecxz
dec
and
sti
cmp
push
cmc
mov
scas
imul
push
stos
pop
adc
fwait
movsb
mov
adc
jae
cwtl
jbe
mov
inc
mov
aad
jecxz
sub
or
in
mov
mov
stos
pop
mov
dec
mov
mov
ret
flds
lahf
adc
mov
cwtl
popa
fst
sbb
data16
push
stc
test
push
add
and
jg
jns
pop
or
ljmp
and
or
data16
mov
push
xor
lret
push
push
add
xor
push
icebp
in
add
pop
cmpsl
imul
cmpl
jge
cld
xorl
test
scas
out
lods
stos
sbb
ljmp
je
aas
movsl
and
push
pop
jne
insl
sub
sti
dec
hlt
popaw
aam
push
aaa
xor
xchg
dec
cmp
sub
jb
sub
mov
dec
flds
jno
scas
rcll
pop
ficomps
push
stos
and
jns
nop
mov
pop
pop
aad
imul
or
pop
push
cs
xchg
mov
pop
jne
sub
add
xchg
mull
push
or
mov
pop
pop
addl
push
fsubrs
mov
xor
xor
das
jns
daa
sub
std
pop
js
adc
adc
sub
mov
pop
xchg
scas
push
fs
mov
push
pusha
mov
int3
fmul
mov
lret
ljmp
xor
inc
test
ja
xchg
adc
xchg
and
jb
ror
mov
jmp
push
das
sub
jecxz
adc
lods
dec
shrb
push
hlt
mov
loope
cmp
popa
stc
and
rcrl
lret
lahf
pusha
int3
lret
addr16
mov
arpl
adc
out
jno
loope
and
sub
mov
mov
pop
mov
insl
ds
aad
int
imull
pop
add
hlt
je
and
pushf
add
js
fbstp
xor
cli
sbb
mov
add
ret
adc
mov
lret
cmpsb
jge
dec
in
movsl
mull
jp
mov
mov
addb
rcrb
pop
subl
dec
ficoml
mov
mov
push
js
int
pop
xor
adc
fisubrl
add
shlb
imul
xor
inc
sub
xchg
js
into
fwait
dec
or
mov
es
out
fisttpll
xchg
aas
dec
pushf
repz
adc
cli
arpl
push
ja
cmp
aas
lea
mov
test
adc
cmp
lock
decl
and
push
aam
sbb
inc
pusha
in
xchg
insl
icebp
sarl
lcall
mov
adc
xchg
gs
add
cwtl
out
push
int
lods
cli
mov
xor
or
fsts
repz
popw
bound
adc
cs
cltd
aam
adc
adc
icebp
pushf
je
add
jno
xor
je
clc
pop
and
push
fs
push
ja
pop
pop
jo
sub
cmp
bound
sarb
in
push
mov
sub
mov
mov
insb
iret
pop
cmp
fldt
insl
xchg
fdivl
popf
inc
in
imul
cmpsl
outsl
int
fs
sub
mov
push
pop
mov
ljmp
loop
shlb
xor
ss
add
stos
or
jg
std
lret
push
rorb
loop
scas
and
movq
stc
rolb
mov
sub
mov
jns
push
sarb
jl
je
jne
inc
add
jge
cltd
mov
mov
or
xchg
or
call
and
subl
mov
cmp
inc
jne
std
mov
add
sub
insl
mov
adc
push
out
push
leave
sbb
int3
ljmp
or
fnstenv
and
mov
mov
cmpl
inc
jecxz
adc
call
cmpsl
push
sbb
mov
ja
mov
add
popa
lods
shl
pop
insb
and
lock
mov
or
dec
xchg
ja
add
sub
aas
cld
lcall
jmp
mov
inc
jecxz
int
mov
xor
add
xchg
popf
or
inc
enter
push
nop
xchg
out
into
aam
add
movsb
push
stos
xor
mov
pushf
jb
test
leave
xlat
fwait
pop
jae
sbb
xor
rorl
or
pop
pop
add
ljmp
inc
mov
imul
adc
xor
pop
loopne
movsl
vprotq
and
push
rol
jmp
out
stos
xor
popf
adcl
sahf
fs
nop
jecxz
xor
dec
rolb
mov
mov
pop
pop
ss
sub
shrb
pop
pushl
push
push
dec
loop
sahf
dec
je
ds
jne
xor
daa
and
push
negl
fsubrl
fisttps
stos
sub
out
arpl
in
sbb
or
ss
cmpsl
and
inc
push
or
or
lds
jmp
xchg
data16
or
fisttpl
icebp
or
push
mov
stos
dec
dec
lods
bound
dec
repz
and
mov
mov
sbb
js
lds
out
aad
sbb
or
cmp
adc
sub
das
rolb
jo
mov
cmp
pop
fbld
nop
xor
nop
cld
vprotb
ss
mov
fcompl
push
mov
sub
xor
addr16
loope
dec
mov
sub
mov
lds
or
test
adc
adc
sbb
xlat
cwtl
insl
pop
dec
push
cmp
jbe
mov
mov
push
movsb
orb
ret
lcall
aas
add
lahf
ljmp
xor
outsl
fs
clc
jl
rcrb
pop
stos
jno
rcl
iret
fiadds
ret
and
icebp
sti
test
ret
enter
repnz
xchg
or
stos
push
lock
lahf
push
inc
mov
inc
sub
repnz
xchg
add
loopne
cmp
mov
push
rcll
adc
in
sbb
les
rorl
mov
or
pop
orl
in
arpl
ja
push
aam
call
xchg
cwtl
or
sbb
push
or
repz
xor
mov
in
xchg
aas
shll
xor
fs
mov
pop
cmpsb
fs
and
mov
mov
jecxz
lahf
lret
sbb
xlat
scas
inc
xchg
je
cmpsl
jo
sbb
mov
and
jne
sbb
jns
mov
loope
cmp
clc
nop
test
xchg
mov
mov
cltd
mov
push
jp
inc
out
mov
mov
lods
xchg
outsb
inc
cwtl
repz
es
repz
lea
rsqrtps
or
fs
jae
pop
fst
lods
xchg
mov
cmp
or
scas
int3
jmp
mov
in
xchg
dec
jno
sbbb
fs
out
xchg
enter
push
xchg
push
stos
aaa
mov
sbb
jmp
insl
push
or
cmpl
push
test
dec
jns
push
movl
sbb
xlat
cmc
ret
test
dec
dec
xchg
xor
fsubl
pop
test
cwtl
movsl
mov
sbb
and
mov
fiadds
jg
lcall
inc
nop
enter
sub
ret
and
test
test
outsb
and
push
pop
mov
dec
sbb
fisttps
jb
pop
repz
sbb
mov
sub
jmp
jns
mov
cmp
bnd
test
xchg
cmpsb
cmc
fwait
or
mov
jg
cmpb
push
xor
ja
loopne
hlt
repnz
push
ss
adc
xchg
repnz
dec
mov
test
jne
push
fs
scas
rolb
arpl
xchg
fcmovu
push
cmp
std
mov
sbb
jns
rcrl
inc
cmp
mov
or
loopne
adc
cwtl
adc
scas
inc
add
ja
imul
push
in
sub
xor
hlt
pop
gs
push
pop
pop
cmpsb
jecxz
mov
and
sbb
mov
in
or
clc
jno
cli
mov
mov
mov
sub
insl
lods
sbb
mov
xchg
push
imul
mov
cmpsb
and
int
pop
cs
sbb
pop
out
je
and
pop
jbe,pt
arpl
insl
add
mov
sub
add
popa
enter
in
push
jecxz
cmp
shll
jbe
test
pop
xor
stos
out
shrb
and
clc
and
ret
or
data16
or
orb
test
push
movsb
into
imul
mov
pusha
push
lods
cli
inc
out
rorb
or
adc
cmp
cltd
negb
jle
mov
lret
cmp
jnp
mov
jo
ljmp
daa
push
cmp
jmp
clc
jns
jge
add
dec
iret
test
cltd
dec
andl
imul
mov
js
mov
add
or
dec
jb,pt
inc
or
pop
jg
scas
fcmovnbe
movsl
js
add
in
jne
hlt
popf
xchg
xor
out
pop
adc
xchg
popf
and
mov
dec
push
insl
jl
mov
scas
lock
push
sub
nop
adc
arpl
call
mov
cs
sbb
sarl
cmp
add
subb
adc
pop
adc
sbb
bound
clc
bnd
mov
lods
or
cmc
push
and
mov
jae
cmp
add
xchg
mov
xlat
push
sbb
hlt
lods
adc
push
imul
and
popa
xchg
jns
mov
xchg
icebp
shlb
xor
xor
xor
stos
or
cli
les
jo
stos
stos
dec
sbb
cltd
push
adc
fdivrl
mov
int3
fsubs
bnd
aas
sbb
mov
loop
aam
or
outsb
xchg
dec
lds
mov
stos
pop
xchg
inc
push
jecxz
dec
xor
sbb
pop
xchg
test
mov
jo
push
cwtl
or
daa
or
push
ret
loop
adc
adc
mov
or
or
inc
jno
lea
inc
lods
cmpsb
setbe
cltd
pushf
xor
xchg
out
adc
adc
add
das
mov
pusha
xchg
jg
fidivrl
fsubl
scas
xchg
xchg
addl
and
mov
outsl
pop
jne
insl
insb
xor
popf
push
out
cmp
pop
mov
add
filds
pop
shll
pop
push
and
lret
out
and
test
or
cs
add
dec
cwtl
sub
enter
mov
lea
mov
jo
out
adcl
mov
scas
mov
mov
lret
in
popf
mov
shlb
das
xchg
xlat
or
xchg
cmpsl
sub
test
and
fistl
outsl
pop
and
xchg
sub
and
jle
js
out
stos
sahf
mov
sarb
jl
popf
cmp
ja
push
std
aas
ljmp
iret
lret
sbb
xlat
into
cmp
mov
pop
test
movsb
out
or
mov
repnz
into
inc
and
ss
and
into
mov
mov
call
adc
lret
pop
inc
mov
scas
jp
lahf
je
mov
call
nop
fdivrs
hlt
loop
jb
mov
mov
sbb
in
cltd
movsb
push
popa
inc
movsb
call
cmp
xor
aaa
adc
ror
or
cli
dec
push
jno
jl
lahf
in
inc
jae
or
or
pusha
lods
mov
lock
aad
rcl
cwtl
jo
bound
rolb
jns
stc
adc
js
shrl
imul
xchg
mov
sub
in
loope
leave
loope
call
push
int3
subb
xchg
sub
outsl
test
out
sahf
dec
ret
sbb
jno
test
jne
xor
push
push
arpl
ret
mov
adc
pop
push
fs
sub
lret
mov
pop
cli
pop
lret
loopne
sbb
rcll
cmp
push
xchg
sbbl
xchg
xchg
mov
dec
adc
lods
mov
push
imull
lret
mov
adc
or
lea
out
ss
fmull
lds
dec
pushf
and
adc
mov
dec
lods
adc
das
push
mov
test
test
fwait
jb,pt
sub
int3
call
jne
pcmpgtw
in
inc
scas
mov
out
xor
movsb
dec
push
enter
jno
enter
pop
and
xchg
mov
jbe
inc
mov
ffreep
pop
xchg
cmp
cmpsl
outsb
fildll
xchg
int
adc
in
stos
lret
dec
in
xor
cltd
pop
shr
subb
adc
lret
mov
mov
cmp
add
cmp
xchg
popa
mov
mov
rclb
xchg
pushf
fiaddl
fnstenv
dec
rcll
iret
shlb
cli
xchg
mov
xchg
push
cmp
outsl
test
xchg
sbb
adc
int
cmp
push
adc
je
es
xor
sub
sbb
and
outsl
jg
scas
xorb
adc
and
das
mov
xchg
mov
aas
push
mov
insl
hlt
int
nop
mov
mov
or
and
dec
gs
aad
rcrl
push
sub
push
hlt
sbb
jmp
imul
and
lret
mov
pop
inc
push
push
inc
xchg
jp
pop
xor
pop
shll
sbb
mov
jnp
insb
dec
jb
pop
mov
in
movsb
popf
and
fcmovb
popa
jl
outsb
imul
push
or
xchg
jp
ds
push
pop
pop
stos
icebp
outsb
jle
sarl
sbb
jp
sbb
xor
push
sbb
daa
faddl
and
add
cmpb
sbb
pop
pop
sbb
adc
mov
mov
in
loopne
and
xchg
xlat
lcall
inc
pushf
pop
mov
mov
fidivl
jle
stos
pusha
and
dec
lods
xor
mov
lea
es
sbb
mov
idivb
popf
out
in
cli
xchg
sbb
mov
fstl
dec
jg
std
adc
jge
nop
aam
loope
stos
call
sub
push
or
in
in
xor
and
sbb
popa
jnp
testb
and
cmpsb
lods
inc
add
ret
xorl
cmp
cmp
inc
jl
xchg
inc
jbe
cmc
xor
pop
addb
ret
jecxz
int
jo
lods
arpl
push
pop
sahf
jnp
mov
pop
cmpsl
adc
into
fdivrl
out
push
xchg
stos
out
les
push
and
pusha
xchg
test
mov
jge
fidivs
rolb
push
bound
adc
dec
or
call
das
lcall
mov
idivb
and
cld
cmp
and
iret
aaa
dec
xor
pop
movsl
mov
movsb
mov
mov
pop
xchg
data16
repnz
jp
jle
mov
jmp
sbb
and
cmp
sahf
add
push
jne
push
or
roll
sar
dec
js
jge
pop
fidivl
test
out
xchg
movsb
lock
mov
aad
cmp
test
int3
ss
cmc
push
dec
dec
jle
hlt
sub
jnp
dec
mov
rclb
mov
xchg
mov
adc
cltd
lret
lret
and
push
loopne
cld
or
inc
pop
or
popa
shrb
mov
call
std
pop
mov
mov
cmp
pop
and
cli
ret
adc
repnz
jl
fnstenv
out
out
dec
notb
hlt
pop
inc
addl
rcll
rcrl
mov
nop
mov
add
mov
popa
add
inc
cmpsl
iret
fstl
lods
and
popf
xor
loop
cmp
mov
xchg
or
or
fmuls
aad
xlat
xchg
push
xor
negb
scas
repnz
iret
cmp
sti
popa
jno
add
data16
outsl
fnstsw
mov
imul
push
dec
aas
mov
mov
fwait
add
dec
mov
fnsave
mov
movsl
lods
int
or
fidivrl
cmp
xchg
je
std
lock
rorb
push
loopne
sub
test
ret
jno
int
xor
mov
xchg
loope
sbb
inc
flds
pop
pmulhuw
daa
in
out
imulb
xor
push
jbe
xorb
lock
and
test
pop
jno
pop
pusha
call
mov
mov
xor
cmpsl
outsb
insl
jl
out
addl
out
or
dec
adc
in
leave
aaa
jno
or
sbb
mov
fwait
push
ja
out
jg
imul
cmc
ja
adc
lret
xor
push
xchg
mov
pop
jmp
sub
push
xchg
lret
repnz
lahf
jl
mov
pop
lcall
lret
jmp
and
outsb
icebp
push
dec
xor
rcrb
xor
sub
in
ret
or
add
pushw
mov
mov
cwtl
hlt
insb
arpl
mov
sub
xchg
cmp
or
jge
and
jo
add
xor
push
xor
cmp
loop
mov
mov
xor
out
sbb
in
lods
jbe
adc
fisubrl
mov
push
jnp
pop
das
cmp
sbb
aas
mov
test
adc
lods
notb
idivb
cmp
sbb
add
pop
mov
aas
adc
pop
pop
push
mov
xor
scas
int
mov
mull
mov
sbb
and
lahf
push
jmp
repnz
inc
js
add
popf
stos
push
mov
mov
mov
jne
fnsave
inc
xchg
jno
shl
cmp
jno
hlt
add
push
fs
leave
push
sbb
repnz
insl
xchg
ret
inc
in
push
mov
in
pop
lahf
leave
call
fnstenv
adc
popf
and
icebp
iret
mov
push
inc
insl
clc
int
xor
sbb
adc
mov
and
cmp
loopne
lahf
leave
xchg
aam
push
pusha
bound
loop
ret
adc
sbb
shrl
int
jae
aad
jb
inc
adc
inc
xchg
jns
les
mov
std
mov
clc
jns
jns
xlat
stc
add
pop
jle
push
xchg
inc
fs
sahf
mov
ret
arpl
fsub
sbb
pop
add
jle
or
mov
mov
pop
and
jecxz
adc
xor
xor
cltd
cwtl
mov
adc
jo
int
dec
xchg
test
pop
sbb
pop
loope
xchg
js
cmp
pusha
stos
add
mov
xchg
pop
push
push
movzwl
dec
js
fisubrl
out
inc
cmc
fnstenv
pop
sti
or
jge
push
loop
jnp
loopne
push
adc
movsl
test
repnz
push
mov
adc
jle
mov
call
fidivrl
out
pop
fnsave
addl
int3
lret
fimull
test
out
pusha
addr16
aad
mov
inc
movsl
pop
les
xor
fldpi
xchg
mov
fidivs
inc
cli
pop
sbb
pop
pop
mov
mov
add
gs
jle
addr16
aad
sub
jl
sub
jmp
lcall
jmp
add
jmp
hlt
pop
sbb
cli
mov
fiadds
jge
push
cwtl
popf
add
ds
xor
jno
mov
imul
xrelease
mov
push
lcall
pop
lock
std
jl
cwtl
inc
adc
cmpl
cmpb
cli
cmp
dec
pushf
mov
sub
test
mov
filds
cs
mov
clc
xor
ficompl
pop
adc
sub
mov
adc
add
movsb
fisttps
pop
jnp
jecxz
adc
fsubs
dec
xor
ror
xor
call
inc
cmp
je
scas
inc
sbb
in
jg
xchg
je
sbb
out
movsb
fcom
rcrl
cmc
lcall
push
add
loopew
lcall
jbe
pop
dec
rorb
mov
and
cmpl
or
stc
adc
ficompl
or
mov
dec
inc
jmp
aad
fsubl
xor
in
fidivs
dec
xchg
and
mov
in
xor
inc
inc
sub
xor
xor
jecxz
jne
dec
inc
xchg
mov
mov
xchg
mov
xor
push
daa
sbb
or
mov
mov
cli
mov
mov
adc
sbb
std
out
xor
mov
aaa
pop
xchg
push
push
xlat
outsb
arpl
pop
sbb
cmp
test
dec
mov
lods
outsb
lcall
mov
pop
push
fstl
sub
adc
aas
fnstsw
cli
das
imul
scas
arpl
pop
mov
cld
add
xchg
pop
add
addb
sti
into
dec
ljmp
or
jns
cli
inc
test
jg
imul
push
xor
add
out
lock
inc
cwtl
sbb
jno
inc
or
cmp
mov
inc
push
ret
lods
xor
mov
adc
mov
daa
lcall
push
movl
xchg
xchg
test
or
inc
mov
das
sub
addr16
sub
imul
pusha
fldcw
or
jmp
xchg
sub
jno
aaa
ret
mov
adc
fstpt
pop
lock
sbb
sahf
adc
mov
sbb
xchg
push
xchg
mov
or
lods
iret
pop
and
or
test
cmp
mov
cmp
outsl
pop
adc
sahf
push
fbstp
icebp
jge
add
or
pop
mov
fisubl
and
ds
rorb
repz
pop
sahf
insb
test
pop
xchg
jl
lret
out
shlb
movsb
imul
int
rorl
mov
dec
ds
pop
inc
jmp
and
cmpsb
test
shl
xchg
mov
mov
ss
sub
icebp
pop
fnstenv
adc
push
insl
insl
dec
rorb
pusha
mov
pushaw
loope
addr16
mov
pop
es
aaa
loop
jecxz
jo
push
enter
div
mov
sbbl
xchg
adc
mov
jnp
add
dec
mov
es
mov
popa
call
push
or
jecxz
inc
cmpsb
xor
jnp
lock
lods
mov
mov
push
push
xor
xchg
cmpb
mov
fisubrs
aaa
lock
ljmp
xchg
mov
inc
push
sbb
xchg
cmc
jns
pop
shr
stos
push
ss
fadds
add
in
lds
pop
imul
and
daa
cltd
inc
jle
xchg
mov
add
sahf
out
hlt
hlt
ficoml
add
stos
and
mov
rep
jmp
out
pop
xor
push
xor
dec
push
lods
ror
sbb
scas
cmp
insb
mov
xchg
fs
xor
adc
and
jecxz
and
mov
fs
add
dec
hlt
xchg
mov
sub
pop
xchg
sbb
pop
imul
and
ja
ja
jmp
into
pop
or
sub
or
fimuls
jo
cmp
scas
lahf
push
notb
jns
cmp
sbb
sub
mov
jmp
shrb
orb
mov
jno
sub
js
push
and
fwait
fwait
imul
dec
fmull
adc
lock
mov
push
jmp
cmpsl
in
jne
loope
jp
sbb
jge
sub
dec
mov
stc
movsl
push
adc
test
or
xor
ss
in
xor
jmp
test
dec
pushf
test
std
nop
fs
int
test
mov
or
test
daa
test
push
jbe
jmp
sti
xchg
loopne
cmp
xchg
dec
repnz
ss
int
adc
xor
jb
dec
js
lret
xchg
sti
int3
subl
insb
rcll
repz
out
push
jno
pop
jmp
jb
call
xor
adc
mov
clc
loop
or
cmp
adc
in
xlat
test
aad
jle
add
xchg
xchg
push
int
pushf
jo
push
cltd
cmp
in
test
xchg
push
mov
ret
jbe
fmull
scas
test
mov
xchg
enter
push
push
aam
mov
jns
popa
adc
mov
mov
lcall
xlat
pop
fwait
cld
push
loopne
mov
and
iret
mov
dec
lret
nop
adc
inc
fs
imul
sbb
rcll
lahf
fisttps
inc
subl
dec
clc
sub
push
adc
test
outsb
test
adc
fs
gs
jle
jmp
xchg
imul
fbstp
push
jo
outsb
arpl
cmpsl
jne
inc
imul
ret
test
or
addr16
dec
push
ret
test
fwait
aam
test
sub
and
fstl
sti
mov
cli
ficompl
xchg
in
cs
sub
shll
lret
mov
les
mov
cmp
xchg
inc
mov
xchg
mov
aam
jbe
and
push
dec
cmp
std
jbe
stc
inc
in
cmpsb
in
add
mov
mov
jae
lahf
inc
cld
add
inc
push
cmp
arpl
lret
lods
xorb
lcall
mov
jmp
mov
pop
sbb
sbbl
shld
sub
adc
mov
int3
jae
push
mov
push
mov
cmp
lods
and
sbb
mov
push
lcall
and
mov
pop
pop
decb
pop
mov
das
xor
pop
call
push
mov
mov
testl
or
lcall
jp
adcb
lahf
push
popf
adc
enter
mov
mov
lcall
mov
les
push
stc
insl
test
fisttpll
xchg
fidivrs
repz
shl
cmpsl
sub
iret
mov
aad
add
movsb
and
rcl
fldt
cmp
imul
clc
int
scas
jo
mov
add
lea
rcrl
mov
pop
fimuls
insb
sti
push
les
cmp
cld
in
push
lret
inc
adc
insb
jge
mov
jo
jbe
mov
fistpl
lret
sar
dec
outsl
dec
pop
test
int3
cs
or
in
add
or
pop
jl
loope
jno
lods
push
test
inc
xchg
inc
out
cmp
out
inc
jno
scas
mov
pop
mov
push
aam
std
jno
mov
rolb
es
cmp
lds
into
mov
pusha
imul
or
rcr
and
pusha
or
add
shrb
fisttps
or
mov
or
xchg
adc
mov
push
js
push
jecxz
aaa
jl
mov
sub
and
cmp
popf
dec
cmpsl
adc
in
mov
sub
push
fs
jle
sub
or
pushf
pushf
outsb
insl
dec
pop
ljmp
sbb
rcrl
mov
clc
test
mov
jge
in
inc
cmc
adc
add
arpl
mov
xchg
call
add
sub
cwtl
add
ror
mov
sti
mov
cmc
sti
je
mov
push
fbstp
cli
or
dec
lea
inc
xor
sbb
mov
adc
adc
mov
cmp
std
repz
out
ljmp
idivl
movsl
fdivrs
adc
pusha
xor
dec
sbb
orl
xor
mov
and
fstl
and
pop
cmovb
mov
push
or
mov
out
jle
mov
pop
push
icebp
lods
mov
push
inc
add
jb,pt
xchg
jo
push
scas
and
mov
and
mov
xchg
and
lock
xor
add
dec
mov
sti
repnz
add
xchg
mov
repnz
xchg
mov
mov
dec
fildll
out
out
xor
lods
cmpl
call
pop
and
fwait
enter
xor
pop
call
mov
fcomps
aas
add
test
cmp
inc
mov
push
dec
adc
mov
jle
mov
mov
pop
cmp
jnp
mov
inc
pop
fildll
mov
aas
xor
ficomps
ja
mov
mov
jno
adc
pusha
and
mov
mov
mov
xchg
sti
bound
dec
popf
in
in
ror
jno
movsl
leave
arpl
xlat
ficoms
lret
dec
cmc
outsl
addr16
cwtl
andl
adc
popf
dec
shlb
roll
icebp
dec
clc
fdiv
jge
xchg
pop
sub
jo
insl
mov
xchg
imul
clc
xor
lods
vmovd
mov
iret
out
push
je
jle
xor
sub
inc
iret
add
adc
bound
jecxz
inc
out
fwait
ljmp
jl
push
int
jbe
push
insb
and
and
pop
xchg
mov
sub
or
and
push
test
mov
jl
and
or
dec
out
jnp
add
int3
push
fcompl
inc
and
xor
xchg
inc
jno
xor
clc
xor
add
dec
sub
fnstenv
or
fdiv
jb
stos
int3
cmc
inc
inc
clc
pushf
add
and
jo
push
daa
ret
lcall
fscale
daa
adc
or
sub
inc
and
pusha
in
cmp
or
mov
jno
mov
test
mov
dec
add
jo
test
push
xchg
mov
mov
mov
sbbb
out
out
aad
sbb
sarb
pop
dec
push
int3
push
and
ljmp
lahf
in
rcr
inc
rcrl
cmp
pushf
or
add
jge
or
in
push
xchg
sub
pop
inc
fucomi
pop
xchg
jnp
addr16
gs
fnstcw
or
das
pushf
adc
pop
dec
adc
clc
aad
insl
cld
push
push
lcall
jne
lods
and
es
pop
cmp
ret
mov
ja
xchg
daa
push
xlat
push
out
stos
ret
jp
xchg
jmp
movq
push
sub
sbb
jl
jl
in
je
dec
add
xchg
push
xor
push
daa
push
push
movsl
pop
and
xor
and
ficoms
sahf
pop
imul
lcall
pop
test
loop
add
subb
nop
or
add
and
inc
push
pop
scas
insb
loop
das
pop
push
cmp
sbb
sbbl
jnp
jl
je
jp
and
xor
popa
jg
inc
push
pop
imul
dec
ficoms
movsb
sbb
addl
push
xor
addr16
dec
mov
leave
sub
lcall
sbb
mov
sti
cmpsb
imul
lods
jl
lea
sub
mov
cmpsb
pop
cmp
push
sub
pop
loop
in
test
cwtl
iret
notb
cli
pop
xchg
adc
test
fcoms
das
ret
jbe
xor
mov
ds
lahf
push
sub
xlat
mov
out
lret
adc
stc
cwtl
xchg
push
pusha
popf
cltd
rcrb
lret
cs
cmpsl
aaa
xor
add
sbb
jae
pushl
imul
popl
loop
inc
dec
int
xlat
ret
jb
cmp
add
jecxz
mov
adc
popf
dec
mov
repnz
rclb
fisubrl
rorb
call
adc
pop
adcb
test
add
fimuls
sarl
cmp
cmpsb
pop
jecxz
push
mov
dec
cld
cs
rcrl
lret
cmp
adc
sub
jmp
adc
or
ficomps
rcll
daa
push
dec
xchg
clc
das
xchg
andl
inc
pop
sub
mov
jg
sbb
mov
cmc
lds
or
ja
pop
icebp
and
fldlg2
lods
xchg
into
int3
aaa
adc
fidivrl
fprem
ja
jge
sahf
imul
cmp
dec
sub
adc
frstor
mov
sub
movsb
rol
out
push
scas
aam
loop
rorb
and
fisttpll
lods
jmp
push
in
xchg
jno
mov
jb
sub
in
and
adc
je
les
std
test
faddl
stc
iret
les
or
jmp
imul
data16
jmp
pop
xor
mov
dec
push
push
push
mov
adc
enter
sub
xorl
sub
rcrb
mov
xchg
jne
dec
add
outsb
sbb
dec
xchg
or
jmp
push
call
rolb
push
sub
mov
insl
pop
test
shll
int3
jne
jo
xchg
mov
fldt
in
std
and
sarl
xor
xchg
jns
pop
add
test
test
andb
or
xor
cmp
loope
icebp
xor
mov
fidivs
ficompl
xchg
pusha
pop
xor
dec
mov
lret
andb
mov
jp
lds
shll
cmc
push
int
jo
loope
pop
or
mov
cltd
dec
cmp
adcb
call
int
push
push
outsb
pushw
lahf
or
push
adc
out
mov
popf
ret
fs
aad
je
outsb
jmp
cmp
fisttps
dec
lahf
cmp
fnstenv
push
cltd
stos
int3
fcoml
dec
jne
xor
xchg
lahf
loop
aaa
jno
cli
ret
and
lea
je,pt
jns
pop
popf
jmp
mov
jg
hlt
mov
pop
or
lds
add
sbb
add
dec
mov
roll
sbb
mov
mov
cmpsl
pop
sub
push
push
push
or
pop
jb
scas
xchg
or
adcb
mov
jle
or
incb
mov
cmp
test
cmp
jmp
mov
jns
sbb
std
jmp
ret
cli
pop
inc
mov
fidivrs
pop
mov
xchg
pushf
loop
mov
xchg
movsb
cld
sahf
jge
xchg
dec
push
gs
xchg
sti
icebp
and
sub
das
mov
xchg
sar
pusha
dec
jb
mov
movsb
push
outsb
pusha
outsl
push
pop
addl
xchg
adc
hlt
fldenv
inc
mov
jp
mov
test
gs
push
aam
jbe
sahf
xchg
jno
lods
pop
faddl
fwait
sti
mov
xchg
pop
sbb
inc
iret
mov
cmp
sub
addr16
inc
jg
inc
mov
jge
inc
test
repnz
or
inc
add
jecxz
cmpsl
stc
clc
adcb
add
jno
mov
jg
jmp
clc
jle
sub
in
inc
dec
fwait
loope
pop
xchg
enter
or
sub
push
les
jl
arpl
mov
or
pop
rcl
mov
decb
sub
pusha
nop
and
cmp
push
cmp
mov
loop
add
iret
into
cmpb
cmp
stos
js
cmp
mov
cld
idivb
mov
xor
stos
ret
sub
out
sub
mov
mov
sbb
adc
inc
inc
divl
ficomps
icebp
enter
aam
add
les
call
sub
xchg
pop
adc
dec
pop
sub
push
aam
pop
and
sar
lret
lds
test
leave
ror
aas
add
mov
pop
popa
lds
movsb
mov
xchg
pop
out
dec
xor
adc
aad
pop
push
push
iret
lahf
cmpsb
mov
xchg
pop
aas
pop
xchg
sub
cmc
std
inc
xchg
pop
dec
inc
cld
pusha
adc
push
or
test
test
pop
xchg
popa
enter
aam
out
daa
pop
rolb
mov
fldenv
sub
jo
das
and
ljmp
mov
cmp
rcrl
pop
mov
shlb
jns
pop
scas
or
out
jle
scas
out
scas
dec
pop
push
scas
stos
cmc
sub
lahf
mov
inc
imul
insl
sub
xchg
fadd
xor
inc
pop
jbe
lods
fcompl
dec
int3
test
sub
adc
daa
jg
out
cmp
movsb
lret
lods
pop
shlb
push
jbe
pusha
ret
jmp
and
sub
adcl
imul
or
inc
testb
lock
arpl
mov
movsb
mov
js
imul
cmp
nop
xor
pushf
inc
mov
pop
mov
mov
and
adc
dec
or
lret
xor
js
lcall
jp
sbb
add
inc
xchg
je
or
jnp
dec
pop
sarl
leave
out
mov
jp
sub
aas
daa
cmpsl
int3
add
and
xor
cli
das
shll
mov
lret
ret
xor
dec
mov
add
sarb
lods
or
sbb
je
divb
jb
mov
or
popf
jp
repnz
mov
xchg
nop
ja
mov
xchg
divb
push
into
test
loope
decl
insb
in
aaa
pop
js
mov
movsl
sbb
pop
push
imulb
adc
cld
aas
imul
lret
or
mov
test
aad
push
in
cmpb
xor
repz
push
jmp
sub
dec
push
mov
leave
inc
fbstp
mov
and
insb
imul
out
out
add
aad
xlat
sti
mov
inc
orb
sti
xor
add
or
jle
negb
mov
inc
mov
pop
mov
bnd
inc
stc
cmp
lret
mov
jecxz
xor
add
int
adc
rcrb
xor
inc
push
mov
sub
pop
outsb
and
sub
aam
int
rorl
dec
loope
fstpl
dec
push
subl
mov
popf
xchg
adc
mov
adcl
fdivs
fcmove
stos
sub
mov
lcall
inc
adc
jl
push
in
call
shl
push
inc
jp
dec
rorl
mov
jmp
xor
mov
jnp
xchg
lea
jle
sub
js
fstps
in
into
mov
xlat
loop
lods
xor
fstpl
gs
inc
dec
pop
xorb
fwait
in
add
xor
aas
adc
mov
push
pop
inc
arpl
mov
scas
dec
mov
cmpsl
out
imul
minps
sbb
out
pop
push
ret
call
cmp
inc
int3
stos
add
fildl
sbb
cmp
mov
das
das
sub
iret
movsl
and
pop
out
fisttpl
call
or
rorl
stos
int3
les
dec
cmpsb
inc
popa
mov
jle
shll
jae
out
js
dec
dec
jbe
and
xchg
insl
fwait
mov
lods
cwtl
pusha
jno
adc
ss
nop
and
mov
loope
pop
add
mov
and
sbb
lea
pop
mov
andb
insb
cmpsb
lret
ljmp
or
loopne
inc
dec
pusha
rorl
xchg
pop
cmp
push
jbe
rcrb
mov
scas
xchg
adc
or
inc
cmp
add
out
js
lods
decb
xchg
push
sub
das
ja
cli
sahf
emms
push
ja
and
inc
push
insb
xchg
mov
pop
dec
loope
adc
or
dec
xor
stc
add
push
lret
mov
in
adc
addr16
addr16
loopne
add
xchg
insl
sbb
push
mov
out
jmp
stos
fists
mov
fmuls
and
sub
movsb
and
cwtl
inc
sbb
and
or
cmp
mov
sub
adc
in
fwait
test
cmp
push
fsubrl
lcall
ficoms
and
sbb
clc
out
je
sub
movsb
inc
gs
ds
push
enter
imul
add
push
jl
cmp
cmp
hlt
dec
jp
jge
jmp
ds
int3
inc
pop
jb
lea
stos
sub
sbb
aam
adc
mov
sbb
loopne
mov
cmp
pop
jmp
loopne
jns
push
push
push
xor
jbe
loope
int3
outsb
pop
xchg
sbb
lea
mov
push
mov
xor
cmp
adc
daa
repz
fwait
lret
mov
std
pop
jg
cmp
pop
lods
sbb
dec
pop
es
or
scas
cmp
je
test
pop
fildl
jmp
imul
adc
cmp
mov
cmpsl
inc
sbb
and
push
xor
pusha
lea
andl
and
sbb
int
aas
pop
sub
dec
mov
test
in
push
mov
leave
mov
ret
xchg
mov
out
cmc
mov
push
test
lock
aaa
cmc
sub
mov
mov
cmp
xchg
popf
adc
bnd
rcrl
sbb
mov
mov
fcomp
addr16
mov
mov
pop
iret
mov
xchg
xor
mov
fsubl
xor
push
jmp
jl
aad
and
or
movsl
iret
call
movsl
gs
pop
clc
mov
out
aam
sub
gs
dec
push
add
movsl
mov
mov
lods
push
bound
jae
ss
xchg
mov
push
decl
mov
lret
dec
sbb
and
sti
test
clc
or
xchg
push
lods
and
test
cmp
sahf
fcmove
das
xchg
adc
sbbb
movl
jmp
scas
cmpsb
lahf
stos
stos
outsl
es
dec
inc
jnp,pt
in
sub
mov
dec
xlat
fsub
jno
lock
fisubs
out
and
or
mov
lret
ds
inc
out
cmp
sbb
lods
add
leave
sbb
stos
mov
and
mov
and
or
jg
popa
lcall
xor
jae
push
xor
sub
das
ret
dec
mov
add
push
push
and
incb
xor
test
sbbl
pop
jo
sbb
lds
xchg
leave
or
cmp
stos
dec
cs
es
test
or
push
sub
nop
call
in
icebp
and
ret
mov
lods
sub
out
jne
push
add
pop
xlat
dec
and
push
jae
lea
nop
push
pop
lods
int
aaa
outsl
xchg
mov
jo
rolb
mov
and
loope
jmp
adc
inc
sub
pushl
test
or
inc
jmp
sbb
jae
dec
insl
in
lods
ret
cmpsb
jae
jbe
aas
enter
sbb
movsl
sti
mov
push
roll
or
xor
pop
push
mov
stos
xchg
stos
jl
cmpb
cmp
int
enter
mov
dec
cmpsl
mov
imul
and
ficoms
xor
test
cmp
in
imul
mov
pop
arpl
jae
push
mov
inc
insb
jl
mov
mov
arpl
sub
and
adc
dec
rcrb
lcall
dec
push
push
jno
lea
inc
and
shlb
gs
xor
adc
shl
mov
mov
sub
in
arpl
jne
adc
mov
cld
push
sahf
add
ficoml
xchg
imul
loopne
sub
dec
aas
mov
inc
clc
push
enter
jnp
mov
push
sub
ds
mov
outsb
mov
mov
bound
cmp
test
ss
sub
inc
mov
fdivrl
loope
pushw
jns
mov
or
loope
mov
mov
mov
xor
aad
cmp
pop
aaa
loope,pn
fimull
imul
adc
icebp
and
add
lods
sub
mov
movsb
enter
add
mov
mov
and
push
xor
cmp
xchg
mov
and
push
xchg
or
bound
jns
js
and
xor
nop
mov
stos
inc
cmp
xchg
xchg
cli
dec
addr16
add
stos
stc
xlat
ja
push
loop
xor
in
xor
mov
cmpsl
dec
push
pop
bound
pop
cmp
std
sub
push
in
xor
std
inc
fdiv
push
cmc
xchg
cmp
dec
ss
jmp
test
jmp
aas
mov
test
xchg
mov
test
adc
clc
cmp
in
push
dec
dec
cmp
xor
jmp
jge
xchg
les
dec
mov
imul
xor
jmp
adc
xchg
iret
mov
sub
cmp
js
int3
mov
mov
cwtl
loop
subb
fucompp
mov
shr
mov
sbb
aad
jns
mov
movsb
cmp
xchg
cmc
popf
adc
insb
dec
pop
or
nop
xchg
repz
repnz
das
addr16
stc
mov
inc
sub
rorl
pop
cmp
sub
and
pushf
daa
adc
in
mov
bound
pop
lock
sub
imul
ljmp
sbbl
stc
movsb
pop
ljmp
adc
mov
sub
pop
imul
add
andb
dec
mov
movsl
cli
movsb
push
popa
mov
ja
mov
sbb
mov
pop
and
gs
int
sub
out
in
push
sbb
fwait
cwtl
dec
loop
push
insl
adcl
sahf
xor
test
inc
xor
dec
out
test
fwait
hlt
jne
mov
sbbb
pop
pop
push
xchg
stc
packsswb
aas
push
mov
adc
ss
push
inc
cli
mov
bound
fisttpl
repz
push
inc
xchg
mov
add
cmp
stc
xchg
dec
push
sbb
or
xor
cmp
mov
inc
filds
jmp
call
jle
xor
mov
mov
jmp
sbb
lods
xchg
lds
pop
jl
jecxz
sub
data16
mov
or
in
scas
or
cmpsl
or
jbe
decb
cmc
add
fwait
cld
lods
ret
scas
inc
xchg
push
inc
test
rorl
xchg
pop
and
inc
dec
xor
fwait
inc
dec
popf
mov
test
adc
sbb
lahf
fucomip
push
jno
out
gs
pop
arpl
dec
shrl
sub
and
sub
movsl
cwtl
insl
jecxz
loop
dec
and
bound
ret
cmpl
dec
loope
add
mov
mov
lcall
std
les
xor
pop
push
shrb
outsl
hlt
add
mulb
lock
xchg
or
push
jle
adc
jmp
mov
mov
push
adcb
subl
xor
cmpsb
aam
add
sbb
ret
and
fiadds
jmp
mov
push
inc
mov
push
test
mov
and
sbb
fldcw
and
push
push
mov
arpl
sbb
push
jno
mov
adc
and
sub
cltd
xchg
lret
push
jp
ljmp
sbb
xchg
jl
mov
icebp
cmp
mov
test
bt
imul
lret
out
push
jno
imul
outsl
and
jecxz
jbe
imul
test
aaa
out
xchg
mov
dec
aaa
int3
adc
clc
mov
or
cmp
bound
sbb
fistpll
sub
cmp
mov
cmp
ss
xchg
add
outsb
or
clc
out
iret
push
jo
sub
insb
xchg
and
mov
mov
mov
dec
push
jmp
mov
or
repz
stos
sub
or
mov
jecxz
inc
neg
clc
fsubrs
ja,pt
jecxz
xchg
es
icebp
push
jns
js
push
fsubs
idivl
iret
pop
jne
mov
jl
mov
btr
pop
mov
jecxz
sti
jno
xor
data16
dec
inc
scas
cmp
dec
mov
call
push
fwait
aas
inc
fxch
adcb
pop
cmp
lea
pop
loope
mov
es
nop
push
movsb
jne
add
out
notb
add
aam
add
icebp
fidivrl
mov
mov
xchg
fs
mov
test
into
fidivrs
gs
sub
sub
jns
stos
mov
lock
sbb
aas
popa
fwait
adc
inc
je
lret
popf
mov
pop
push
sbb
push
inc
or
jne
pop
xchg
xchg
inc
insl
pop
cli
push
daa
sbb
mov
in
push
cli
aas
sub
mov
fptan
gs
jb
ja
xchg
cmp
dec
add
out
sbb
jae
mov
jb
inc
shlb
xor
mov
xchg
shll
xchg
fldl
xchg
mov
arpl
out
xor
addl
ss
jno
inc
in
mov
dec
ja
add
in
loope
jmp
or
repnz
sub
push
andb
mov
packuswb
cmp
mov
mov
push
xor
sbb
inc
xor
cs
ja
dec
mov
fs
push
fscale
shll
outsl
addr16
aad
enter
cmp
push
shl
jno
and
mov
dec
add
leave
dec
xchg
cmp
inc
fidivs
faddp
xor
sbb
mov
adc
cmp
cmpsl
mov
mov
mov
jp
imul
and
sahf
mov
mov
mov
jmp
test
or
iret
and
cwtl
repnz
jle
mov
dec
sbb
popa
aas
hlt
loopne
inc
sbb
xchg
mov
push
and
fnstcw
rol
icebp
sbb
mov
pop
lea
pop
cwtl
gs
mov
mov
mov
and
or
pusha
mov
int3
xor
icebp
decb
das
mov
pop
lods
aad
cmp
ljmp
sub
mov
xor
scas
and
mov
aad
mov
sbb
js
push
jmp
jle
xor
push
in
leave
sbb
mov
sbbl
gs
lret
out
adc
popf
xor
lret
push
inc
mov
daa
inc
add
imulb
enter
push
inc
out
add
es
sbb
in
cmp
mov
jl
pop
mov
lds
aaa
shlb
in
sbb
xor
addb
in
les
pop
fbstp
and
push
shr
leave
xchg
sub
inc
xchg
add
jb
outsl
cli
aam
dec
je
dec
xchg
aaa
ds
outsl
adc
inc
aaa
or
jecxz
fimull
shll
int
out
cli
movsb
mov
mov
out
int
cmp
sub
das
or
lock
kmovw
sbb
jno
mov
sub
xor
das
sbb
loop
mov
aam
sub
or
lahf
or
rorb
xchg
jl
or
and
mov
fdiv
stos
sub
out
mov
sub
nop
mov
mov
jge
test
popa
sti
out
dec
mov
test
and
loop
jmp
pop
into
mov
mov
sub
mov
roll
or
fsubp
aam
xchg
xor
fsts
stos
push
aas
mov
ja
lds
cmp
mov
sub
rcll
jge
mov
das
pusha
movsb
loope
adc
lods
aaa
shl
jmp
jae
mov
adc
lret
mov
add
les
insb
test
push
xchg
and
mov
and
lret
rcr
daa
mov
popa
into
ljmp
and
in
jl
xchg
enter
pop
or
sub
adc
stos
pop
in
sarb
insb
xor
xchg
std
xchg
jno
inc
add
pop
js
hlt
loop
fstpl
dec
es
cmpsb
xchg
repz
jnp
loope
inc
jg
ret
mov
jb
cs
out
jnp
fadd
jg
xor
push
loope
data16
out
and
push
or
call
je
jmp
in
adc
sub
stos
mov
adc
dec
jo
inc
stos
pop
mov
les
test
jb
mov
mov
mov
movsb
lds
or
pop
add
pushf
jl
mov
jecxz
sbb
and
bound
jmp
push
nop
rcrb
cs
ficoml
ret
xchg
sub
add
loop
lea
fdivr
jns
in
xchg
dec
pop
out
jecxz
lea
cmp
xor
lea
mov
xor
mov
lea
push
mov
fstp
out
mov
cmc
fprem1
sbb
das
mov
data16
mov
loopne
add
and
cld
popa
mov
mov
cmc
stos
divl
movsb
pop
les
jg
cmpsb
popa
push
fldenv
inc
iret
xlat
jecxz
out
jp
inc
jo
xor
push
inc
test
or
mov
flds
mov
sub
pop
push
or
mov
repnz
loop
xchg
in
fdivrs
das
data16
jb
and
inc
mov
cli
loop
mov
jno
pop
inc
mov
mov
sub
xor
push
insb
popa
popf
jecxz
push
ss
xorb
arpl
popa
sahf
mov
pushf
inc
cmp
into
adc
xor
scas
and
popf
cmp
inc
imul
mov
jo
xchg
in
test
cmpsl
ds
jecxz
in
mov
mov
pop
arpl
fstpl
push
cmpsl
push
add
sahf
xchg
rclb
jb
test
xor
adcb
leave
es
cmp
inc
out
rolb
mov
iret
stos
cmpsb
push
cltd
push
push
nop
fmull
test
or
enter
or
scas
ss
mov
in
push
inc
aad
mov
mov
ljmp
mov
sbb
push
hlt
mov
mov
std
pusha
ret
fwait
mov
hlt
mov
es
mov
xor
push
xchg
push
je
sbbb
pop
sub
pushf
jle
lods
and
sbb
pusha
test
pusha
push
jecxz
outsl
insl
andb
cmp
push
icebp
inc
out
lods
outsl
clc
sbb
pop
inc
and
mov
xor
aas
push
xchg
daa
pop
jmp
mov
sbb
cli
push
out
mov
subb
mov
dec
fldcw
loop
iret
mov
call
nop
xlat
sub
in
hlt
js
mov
xor
adc
or
cmp
xchg
inc
insl
sbb
inc
mov
sub
pop
in
mov
lods
cmp
cmc
inc
outsl
and
in
mov
sbb
out
enter
inc
fidivrl
mov
inc
subl
out
cltd
cs
call
sbb
xchg
rolb
mov
add
xchg
shrb
stos
iret
mov
dec
inc
gs
std
into
mov
inc
or
and
fisubrl
fistl
mov
xor
and
or
aam
jbe
in
mov
mov
outsl
sub
adc
daa
xchg
add
cmp
xor
pop
push
sub
jns
fcmovne
pop
and
pop
movsl
adc
push
push
cmc
inc
mov
inc
enter
mov
pop
push
pop
std
out
adc
mov
mov
mov
or
out
sbb
or
cmp
mov
inc
mov
push
data16
leave
gs
cmp
cwtl
mov
jo
adc
sbb
mov
adc
pop
push
es
lds
inc
cwtl
mov
and
int
xchg
in
push
imul
or
pop
in
inc
mov
shlb
aam
loop
or
in
in
dec
xchg
inc
jnp
or
mov
test
cwtl
call
pop
cmp
fsubrs
mov
rcl
stc
imul
test
into
out
xor
or
cmp
scas
call
xchg
push
push
sub
jecxz
mov
je
xchg
lea
stos
fldenv
les
mov
nop
adc
inc
dec
in
xor
mov
roll
xchg
inc
mov
aad
pushf
aaa
notl
aaa
pop
xchg
jecxz
xchg
pop
pop
js
or
arpl
xor
mov
mov
mov
inc
test
outsl
ljmp
idivb
clc
mov
test
stc
movsl
outsl
and
out
cmc
icebp
fnstenv
or
scas
inc
sub
mov
andl
shrb
or
std
je
stc
add
dec
lods
in
cli
outsb
hlt
enter
loope
inc
decl
push
push
xchg
fstcw
jo
lods
pop
mov
insl
sub
pop
inc
xchg
test
dec
int
pop
sarb
sub
add
dec
xchg
mov
loope,pt
mov
inc
into
push
sub
xchg
sbb
shld
mov
push
add
pop
pop
adc
iret
or
adcb
xlat
pop
ja
push
in
cmp
adc
or
stc
outsl
add
aas
inc
es
jp
sub
inc
in
pop
push
xchg
stos
fdivr
mov
xchg
mov
enter
sbb
cmp
add
jb
aad
inc
addr16
pop
jecxz
out
xor
xor
pop
das
lock
sti
jb
adc
xchg
mov
adc
ja
icebp
push
push
sub
cltd
btc
jb
xchg
or
stos
fwait
cmp
adc
inc
scas
xor
cmc
mov
je
cmc
mov
add
lret
in
ds
cmp
pop
and
ror
lods
popf
and
sbb
and
add
enter
jecxz
inc
jg
mov
lods
pop
sbb
pop
xor
repnz
sbb
iret
aas
mov
sbb
mov
jl
jo
shlb
push
ljmp
jl
dec
pop
dec
mov
cmpsb
movsb
adc
dec
dec
dec
cmp
ds
mov
fstpl
sbb
dec
icebp
add
repnz
js
xchg
mov
mov
sub
in
es
fsubp
jns
clc
test
mov
inc
cli
lods
inc
loope
cli
js
dec
icebp
enter
push
nop
inc
imul
int
push
arpl
fildl
gs
imul
fdivr
in
adc
clc
and
mov
cmpsb
mov
inc
jo
jno
adc
pushf
sbb
inc
enter
pop
fwait
push
negb
out
or
lock
sub
pusha
xor
dec
adc
mov
out
aaa
cmp
xor
sub
ja
pop
ds
loope
sti
gs
and
pop
test
fcomip
ds
and
fs
jbe
outsb
outsl
negb
jmp
aas
insl
cmp
mov
movsl
stos
xchg
notl
in
mov
mov
jno
and
aas
or
mov
xor
cmc
cmp
test
push
mov
dec
xchg
cmpsb
outsb
bnd
sub
sbb
xchg
cmovl
movsl
dec
pop
icebp
lock
cmp
inc
and
inc
xor
out
fildl
xorl
outsb
in
fucom
and
push
inc
or
stos
jge
cwtl
push
sbb
imul
fs
outsl
mov
mov
cmp
or
or
mov
mov
add
mov
jle
push
mov
adc
stos
inc
adc
sbb
int3
mov
xchg
fcoml
stos
sub
jbe
popa
dec
inc
adc
xchg
adc
test
mov
mov
fmul
ljmp
pop
push
and
cmpsl
call
jnp
mov
jno
iret
pop
icebp
fldln2
sbb
imul
adc
xor
push
xchg
pop
test
add
in
adc
fcomp
dec
cmpsl
sbb
pop
jb
mov
dec
sbb
lret
cmpl
inc
sbb
jl
add
gs
psubd
push
enter
mov
insl
sbb
mov
and
andb
aaa
sub
xchg
mov
hlt
and
add
fwait
ds
fs
xor
pop
adc
and
dec
jge
repz
and
push
sub
popa
cmp
jecxz
sub
dec
and
js
into
out
ret
xchg
dec
cmpsb
in
xor
xor
aas
push
pop
cmpsb
daa
push
les
outsb
push
movsb
mov
test
shlb
js
jecxz
dec
jbe
push
push
fidivrs
inc
int3
mov
xchg
outsl
sub
out
movsb
mov
xchg
stos
rorb
mov
adc
xor
lcall
cmp
fistpll
cmpsb
enter
das
insb
dec
sbb
jae
insl
mov
pop
sub
jo
clc
sbb
aad
in
call
xchg
cltd
in
mov
sbb
pop
test
cwtl
or
lcall
imul
sub
scas
movsl
cmp
xor
aaa
jns
cmp
fisubl
lods
adc
in
push
imul
pop
and
mov
out
and
jno
aaa
icebp
jnp
mov
jbe
les
push
loope
stos
repnz
decb
jns
jmp
std
sti
out
inc
ss
add
shrb
mov
cmovs
das
ficoml
int
jnp
mov
fdivrp
jnp
inc
les
xchg
stos
loopne
in
add
dec
div
add
shr
and
xchg
xchg
pop
fstpt
jne
dec
enter
sbb
mov
int3
mov
pop
adc
subl
adc
in
mov
push
cmpsb
sbb
mov
fdivr
adc
fsubs
and
hlt
and
cmp
and
adc
and
test
sti
sti
out
fxch
mov
pop
mov
fwait
icebp
loopne
push
dec
pop
dec
pop
sub
insl
gs
inc
or
std
xor
or
fildl
sub
jle
ret
rorl
rep
pop
jnp
gs
stos
push
push
sub
por
push
rcll
fdivr
cs
popa
fcmovnb
and
jns
or
ficoms
xchg
fldt
clc
ljmp
mov
pop
xchg
pop
data16
std
pop
cmpsb
and
sbb
push
vaesenclast
sbb
fistps
fcmovb
dec
push
dec
cmp
jns
add
push
test
push
das
inc
sub
mov
xchg
push
jno
sbb
mov
in
int
mov
repz
cwtl
fists
sub
das
aaa
iret
jge
sub
sbb
and
mov
negb
imul
in
jb
cwtl
movsb
or
mov
fcomi
mov
adc
mov
mov
push
in
or
sub
outsb
jecxz
daa
xchg
inc
ds
iret
mov
mov
xorl
daa
leave
push
pop
mov
insl
adc
mov
pusha
jp
call
jg
jbe
out
fsubrs
dec
xchg
aad
andb
xor
bswap
jne
stos
cmpsl
mov
gs
cmc
adc
movsb
aad
xchg
dec
mov
add
mov
cmp
cmp
cmpsl
xchg
and
ffree
scas
jae
dec
mov
sub
dec
pushf
shll
insl
mov
adc
leave
fs
ficomps
xor
xchg
aaa
repz
sbb
pop
dec
sarl
in
add
pushf
pop
sub
mov
mov
rcll
insl
sub
mov
push
adc
imul
fwait
mov
jle
xchg
bound
xor
fsubrs
lds
xor
lods
sbb
xor
lea
popf
clc
les
aaa
cmc
adc
cmp
enter
lods
aad
cmp
call
lock
mov
pushf
dec
sbb
push
mov
sub
jge
sbb
push
sti
push
xor
mov
sbb
lock
mov
pop
pop
mov
aam
sbb
into
filds
jg
sbb
jp
xchg
mov
dec
pop
sub
testl
push
or
cs
cld
mov
cltd
ja
or
xchg
shr
ficomps
jno
jl
mov
adc
or
jns
push
int
dec
xchg
cltd
or
or
pop
xlat
push
inc
adc
test
pusha
ret
outsl
hlt
sbb
je
insl
mov
adcb
dec
enter
sbb
arpl
aas
jmp
test
inc
and
jle
xchg
pop
mov
mov
testb
dec
jae
mov
cli
jno
fstpl
insb
aam
arpl
jmp
mov
sub
inc
dec
inc
out
loop
setne
je
push
stos
and
fwait
xchg
call
movsb
mov
dec
insb
and
loope
sbb
jecxz
test
imul
fsubrl
test
jb
outsl
into
adc
or
into
xor
xchg
sbb
jp
imul
aas
fadd
loope,pt
popa
aas
mov
loop
js
rorb
adc
mov
sti
sub
mov
sti
add
fidivrl
jecxz
mov
lret
pop
leave
mov
add
cmpsl
mov
inc
out
jno
pop
scas
push
rcr
inc
and
movsb
mov
cmp
stos
push
pusha
ja
and
andl
sahf
repz
xor
fimull
sbb
int
add
fsts
add
pop
aam
jo
and
dec
mov
push
scas
sub
mov
into
sbb
loope
jbe
testl
repz
lock
sub
and
fs
mov
jecxz
out
mov
int
dec
or
lods
enter
push
std
outsl
jb
enter
fstpl
adc
mov
mov
push
push
mov
xor
aaa
ret
out
cmpb
sub
data16
jmp
flds
cli
idivb
jmp
into
out
dec
ja
jmp
xchg
adc
pusha
pusha
pop
inc
jno
inc
push
cmp
add
cmp
mov
test
cmc
lahf
cli
fisubl
mov
pop
nop
pushf
test
xlat
xchg
pop
xlat
scas
xlat
add
add
mov
jecxz
stos
movsb
out
in
dec
insl
das
mov
mov
adc
mov
and
add
fwait
lret
sbb
add
mov
jl
fstps
push
in
je
jge
imul
or
sbb
jmp
imul
push
sahf
dec
icebp
dec
mov
cmp
pop
mov
hlt
push
add
xor
test
mov
movsl
dec
cli
push
push
xchg
xchg
pop
mov
test
jmp
cmp
sahf
cmp
adc
int
out
lock
ja
int3
mov
aad
cmp
hlt
fsubrp
sbb
cmp
lock
fs
pop
and
pop
in
repnz
push
jl
rcrb
cli
popf
add
adc
pop
sbb
mov
jo
mov
mov
jne
and
lahf
lea
outsb
sub
ljmp
stos
mov
xor
dec
xchg
mov
push
inc
mov
imul
data16
in
mov
enter
cwtl
sbb
mov
and
xlat
sahf
xchg
jno
out
mov
lcall
out
loopne
push
jns
xchg
getsec
iret
cmpsl
out
jno
sbb
mov
lds
cltd
aaa
or
adc
xor
pushf
mov
arpl
cltd
mov
mov
sarb
insb
pop
mov
lods
loopne
and
cltd
or
je
jmp
stc
bound
mov
cli
xor
test
cwtd
jnp
dec
pop
jp
push
dec
mov
mov
ret
or
jo
xchg
mov
xor
cwtl
lock
mov
or
out
popf
enter
xchg
daa
mov
and
mov
inc
mov
pop
fimull
inc
sbb
pop
mov
inc
jno
dec
xchg
inc
divl
mov
adc
popa
add
lret
add
xchg
arpl
lock
inc
cli
push
in
dec
push
int3
xor
sbb
jl
mov
lret
inc
xchg
lods
stc
xchg
jb
ss
js
das
call
into
add
xor
sarl
adc
insl
incb
fisubl
sbb
hlt
je
cltd
inc
mov
dec
sbb
testb
ljmp
mov
stc
enter
into
push
pop
scas
repnz
add
jne
rcll
ds
cmp
push
or
push
ljmp
mov
pushf
mov
lods
and
jle
push
inc
call
mov
cmp
movsl
aad
out
sbb
lcall
iret
mov
sbb
jmp
adc
iret
push
jmp
fdivr
mov
sbb
mov
xorb
adc
mov
xchg
jge
je
mov
call
ds
imul
push
movsb
pop
imul
popa
lds
cmpsb
movsl
xor
idiv
cmpsb
loope
jb
push
mov
adc
sbb
jo
aas
shll
xchg
test
ss
push
xor
push
fsubrs
mov
sbb
movsl
fdivl
scas
adc
inc
rcl
xchg
jo
adc
push
pop
arpl
daa
movsb
icebp
inc
fimuls
shrl
icebp
adc
mov
mov
pslld
push
sub
insl
or
ret
pop
sbb
scas
cmpsl
icebp
int3
fwait
addb
or
xchg
and
or
out
lahf
fistps
dec
movsb
int3
cmp
dec
xor
adc
subb
insb
mov
sub
xchg
fsubr
cwtl
not
or
mov
lea
fstpl
pop
dec
and
add
cltd
fldt
xor
fidivrl
aad
sbb
jmp
in
xchg
adc
xor
testb
stc
jl
fnsave
pop
lret
fildl
sbb
adc
pop
push
hlt
mov
scas
and
in
push
call
pop
sbb
cmpsl
sbb
xor
mov
lahf
ret
fcompp
push
xor
xor
mov
sbb
jp
add
dec
add
scas
pushf
sbb
out
xor
mov
out
mov
dec
sub
add
or
mul
arpl
or
lretw
sarl
arpl
mov
outsl
fsubrl
jp
std
mov
faddl
inc
pushf
xor
in
sbb
adc
push
sbb
xchg
mov
fwait
or
arpl
cmc
lds
lods
inc
sbb
bound
xor
test
push
shrl
and
xlat
push
loop
cwtl
dec
xor
in
cltd
stos
loop
aaa
xchg
lret
push
sbb
int3
or
idivl
jl
sbb
lock
shlb
jns
xor
in
jp
cmpl
orb
mov
cli
out
outsl
jae
inc
adc
imul
lcall
mov
adc
in
cmc
xchg
or
xchg
mov
add
and
push
call
rol
xor
sti
out
fwait
push
xor
movsl
test
imul
loop
orb
sub
pop
aad
in
loope
xchg
rcll
mov
cltd
cli
in
or
xor
stos
sbb
loope
outsb
mov
mov
adc
mov
adc
mov
mov
mov
pop
pop
push
test
jnp
xchg
fwait
test
flds
std
fdiv
pop
cli
mov
xchg
outsl
out
repnz
xchg
int
and
xchg
dec
push
pop
xchg
add
fcoms
loop
sbbb
sti
jo
xacquire
nop
xlat
cmp
in
sub
pop
pop
popa
xor
dec
pop
repnz
or
mov
mov
and
inc
xor
or
rcrl
sbb
adc
sbb
sarb
rolb
jnp
out
jnp
xor
nop
push
idivb
dec
pop
dec
movsl
stc
sbb
roll
in
cltd
cmp
xchg
push
stos
cmp
sub
mov
fidivs
iret
adc
and
leave
daa
xchg
out
dec
aas
sub
es
cli
adc
mov
adc
mov
mov
arpl
das
and
mov
or
dec
int3
cmp
scas
int3
shll
or
sub
push
call
pop
push
or
cld
dec
push
xor
dec
shlb
nop
dec
lret
imulb
and
mov
or
lods
out
pop
mov
dec
cmpsb
dec
shlb
jbe
pop
mov
and
jmp
fimuls
aaa
add
dec
movsl
jg
and
xor
iret
mov
xchg
test
mov
nop
sbb
or
inc
mov
clc
ds
push
ds
mov
cli
inc
cmp
pop
xchg
mov
dec
add
pushf
movsl
movsl
cld
xchg
cmpsl
nop
rclb
or
out
fcmove
and
jne
xlat
inc
std
inc
lea
xchg
scas
mov
xchg
or
out
and
mov
inc
mov
jns
xchg
xor
gs
cmp
adc
das
mov
adc
scas
xchg
jg
stos
scas
mov
mov
hlt
and
mov
pop
enter
adc
aas
mov
out
lods
je
sti
sub
push
jle
stc
dec
fmull
push
popa
sub
ljmp
push
jle
mov
stos
adc
add
cmp
imul
inc
fmuls
cmp
xchg
sub
jge
out
scas
out
mov
mov
jne
push
xchg
idiv
rcrb
jle
aad
clc
cmpsl
xchg
comiss
test
inc
fsts
movsl
add
out
pop
in
dec
out
call
imul
ret
cmpsl
inc
das
inc
inc
leave
icebp
inc
lahf
js
cld
int
dec
out
iret
jg
cltd
adc
xchg
add
push
stc
pop
fcompp
pusha
or
push
cmp
cld
and
mov
pop
pop
inc
out
mov
enter
sbb
imul
adc
in
fiaddl
mov
mov
dec
pushw
dec
dec
leave
inc
fistps
fwait
adc
pusha
jle
fmuls
mov
outsl
sub
xor
cmp
sub
push
je
and
pusha
jecxz
aas
outsl
mov
loopne
lret
testl
into
cmp
mov
divl
outsl
and
xchg
popf
pusha
lods
insb
or
pop
jb
push
push
dec
in
mov
mov
push
cmpsl
jnp
inc
sti
mov
adc
cld
arpl
push
stc
add
loopne
add
mov
nop
sahf
outsl
mov
xchg
nop
push
pop
xor
loope
cmp
js
idivb
and
pop
sub
or
mov
pop
loop
cmp
ret
out
mov
sub
add
cmp
jno
push
inc
mov
mov
sub
xchg
push
arpl
movsb
inc
test
and
loopne
jl
cwtl
test
mov
and
js
stos
dec
and
sub
leave
cld
lods
xchg
movsb
mov
test
xor
lret
dec
mov
repnz
xlat
ss
je
mov
sbb
imul
push
sub
push
test
inc
jmp
pop
xor
ds
xchg
ret
movsl
jp
jmp
xchg
mov
xchg
inc
int
mov
loop
jae
mov
stos
mov
das
into
add
lret
ds
jae
push
in
aas
adc
mov
jp
xchg
mov
sahf
iret
push
lds
inc
mov
sbb
inc
lea
icebp
loope
sbb
add
and
in
jecxz
jl
add
test
movsb
and
cmpsb
jp
data16
mov
mov
and
loop
scas
cmc
je
ljmpw
sub
fnstcw
out
pushf
mov
in
pop
push
out
pushf
xor
jmp
pop
cmpl
cmc
je
add
popa
mov
jg
repnz
or
dec
ret
movl
imul
mov
repz
mull
adc
or
dec
push
push
pop
repnz
pop
lods
shll
cmp
dec
cmpsb
jmp
pxor
repnz
cld
pop
ja
in
mov
mov
mov
mov
jmp
repz
inc
mov
ror
cmp
lahf
cld
fnstenv
mov
add
les
cmp
sub
ficoml
icebp
jns
or
fsubs
and
pusha
push
mov
mov
jecxz
adc
fcompl
fnstcw
roll
add
jp
ljmp
add
mov
mov
xchg
or
mov
in
test
loop
mov
pop
pop
addl
dec
in
dec
cwtl
cltd
mov
mov
sti
imulb
push
bound
cwtl
aad
dec
xor
fnstenv
pop
push
jp
cmp
mov
bound
pop
xor
rorl
out
xchg
fnstsw
lea
mov
sub
pop
push
sbb
sub
out
popa
push
out
rol
fwait
mov
mov
push
fwait
rolb
dec
sahf
sbb
rol
mov
add
ficoms
push
add
and
int3
das
xchg
mov
rcl
xor
dec
push
add
mov
subl
push
cmp
and
shl
icebp
rcr
or
mov
add
mov
adcb
in
jmp
aam
xlat
push
mov
pop
lahf
jae
lahf
push
data16
mov
inc
imul
pop
mov
adc
jnp
hlt
push
fucomp
cltd
inc
cmp
dec
outsb
lcall
pusha
rol
jmp
cmc
fnop
rcrb
cmp
lods
mov
push
adc
push
fsubr
int
mov
ret
xchg
mov
pop
dec
sarl
inc
loope
sub
jo
jne
xor
cmpsb
pushl
insl
push
xor
lret
insl
push
stos
pop
jg
mov
mov
enter
sbb
fiaddl
call
addr16
push
orl
and
pop
test
mov
aad
xor
push
loopne
imul
scas
mov
popf
pop
xor
scas
lahf
das
jge
xorl
cmp
or
test
sub
int
and
jg
lcall
filds
lahf
bound
xchg
cltd
cld
lods
subl
push
shl
icebp
inc
jmp
mov
sbb
xlat
movsb
clc
dec
ss
push
or
sti
lods
jmp
mov
mov
mov
sbbb
clc
inc
leave
lock
xor
xorl
std
add
pop
inc
les
mov
lea
pop
pop
lret
in
fildll
push
insb
xchg
push
mov
stos
je
xor
aad
and
cmp
pop
sub
pushf
pushf
add
push
pop
and
push
dec
mov
loope
sub
jnp
dec
jae
popf
divb
or
push
rclb
jmp
mulb
ret
add
push
repnz
out
and
sbb
scas
mov
push
pop
sysexit
das
mov
jmp
cli
lahf
cld
lahf
mov
ljmp
mov
jecxz
rcl
jnp
out
or
subl
cmpsb
mov
xor
mov
cmp
dec
mov
mov
push
ret
flds
or
mov
or
xor
push
mov
pop
adc
dec
xchg
jg
sbb
inc
xchg
add
mov
test
mov
mov
lahf
es
mov
sbb
mulb
mov
popf
pop
sub
lods
mov
adc
push
pop
out
mov
comiss
mov
ljmp
mulb
cld
test
outsl
and
xor
int3
dec
mulb
add
mov
jge
stc
insb
loope
cs
lods
lahf
push
ficoms
jbe
insb
xchg
movsb
mov
mov
adc
clc
test
pop
out
push
nop
mov
enter
add
pop
popa
xchg
xor
mov
or
jp
out
jmp
push
add
mov
pop
imul
stc
cmp
das
loop
ja
addr16
divb
sbb
ret
mov
std
mov
rolb
iret
add
hlt
loope
mov
or
loopne
fcomps
jecxz
lret
mov
mov
inc
aam
mov
in
adc
imul
push
jno
stos
arpl
sbb
mov
scas
jo
inc
and
loope
mov
mov
mov
pushf
xchg
mov
xor
leave
cltd
hlt
xor
ret
mov
shr
sbb
fiadds
jae
add
in
jb
cmp
lods
inc
sub
add
add
xchg
outsb
ss
xchg
gs
scas
dec
rcll
lock
jno
mov
in
mov
and
ret
cmp
loop
sbb
lods
test
lds
stos
bound
inc
icebp
jo,pt
sbb
push
in
jnp
out
icebp
cs
pop
in
mov
add
mov
ret
pushf
add
sti
push
cwtl
lds
xor
sbb
mov
hlt
inc
call
cmp
push
add
fistpl
loopne
out
dec
lea
sub
das
imul
pushf
push
jg
into
xor
aad
or
jns
ja
and
and
xor
stc
test
jb
out
pop
jnp
pop
movsl
mov
mov
xor
mov
jae
cmpsl
xchg
cmp
mov
mov
fwait
test
xor
pop
mov
shrb
sub
sub
add
int3
adc
sub
sub
inc
mov
mov
dec
push
cmp
imul
push
bound
xor
fwait
insl
inc
loop
mov
add
test
sub
cli
add
dec
es
int3
faddl
jnp
dec
push
imul
dec
cmp
cmp
and
fldl
cmp
inc
leave
call
dec
and
icebp
push
stos
ds
gs
push
outsb
jmp
out
lea
mov
push
es
add
fidivl
movaps
inc
inc
pop
add
xchg
leave
dec
bound
inc
and
fdivl
andl
xchg
ljmp
or
mov
aaa
xchg
jmp
in
xor
dec
pop
mov
arpl
out
inc
mov
aad
aam
adc
cld
or
nop
sbb
mov
cmpsl
hlt
outsb
fistpl
repnz
flds
mov
jno
sub
std
sbb
pop
lahf
icebp
std
andb
sahf
test
sbb
dec
sbb
out
or
cmp
jb
cmpl
xchg
dec
and
jl
xor
jae
mov
lret
sbb
ja
mov
add
mov
aad
scas
inc
adc
add
sbb
pop
add
inc
repz
fs
and
xchg
push
adcb
xor
outsl
je
setae
mov
ss
adc
aas
xchg
adc
add
movb
cld
nop
lods
repz
push
xchg
ja
fs
outsb
cmp
test
sbb
xchg
pop
cmpb
sahf
addr16
outsb
ja
arpl
sub
jb
mov
enter
push
mov
cmc
ret
cmpsb
stos
push
lea
cmp
mov
mov
inc
jmp
adc
test
test
popa
insb
mov
mov
iret
mov
arpl
xchg
push
aam
xchg
dec
or
mov
add
xor
mov
pop
mov
xor
cmp
iret
add
ds
pop
mov
icebp
pop
cmp
mov
int
loopne
insl
xchg
pop
ss
lods
fisubl
test
arpl
lds
imul
sub
adc
xchg
fiaddl
lret
adc
xor
inc
ss
int
mov
xchg
test
mov
clc
xchg
cld
adc
lret
adc
cmp
jle
mov
cwtl
inc
movsb
xchg
leave
movsl
das
or
push
scas
ss
cli
inc
int
test
pop
pop
or
arpl
repnz
out
fnstsw
cmp
dec
mov
loop
sbbl
fildll
ja
jl
inc
dec
in
push
out
rcr
data16
push
push
xchg
and
dec
lods
lret
sub
movsb
mov
push
jge
das
and
inc
fwait
jns
inc
cmpsl
xchg
ret
mov
jg
jo
xchg
mov
sbb
ljmp
push
je
movsl
inc
test
clc
fs
das
hlt
popf
pushf
les
pop
andb
into
popf
fmuls
sbb
mov
insl
cwtl
xor
jo
mov
lods
int3
jl
push
mov
testb
lcall
adc
lock
cmp
std
shrl
fmul
pushf
jmp
sub
sar
inc
jae
and
pop
push
sub
cs
scas
mov
std
ja
sub
loop
ds
pop
leave
aam
xchg
cltd
lock
push
jmp
clc
out
jle
mov
jns
add
mov
mov
pop
pop
add
hlt
cltd
and
push
push
sti
jge
ret
int
cmp
je
push
pop
lret
sbb
loopne
or
push
xchg
or
push
inc
rcl
pop
add
add
lret
movb
subb
or
mov
sahf
outsb
nop
xchg
add
mov
hlt
jae
arpl
xchg
stos
es
add
add
aad
icebp
push
cmpsb
pop
das
adc
imul
mov
xchg
sub
xor
pop
repz
push
lcall
jmp
insb
jp
lods
gs
cmp
test
xchg
xchg
das
loope
xor
popf
mov
jne
aad
dec
shlb
lret
push
push
in
outsb
or
adc
in
pop
adc
jne
and
mov
pop
xchg
dec
xchg
xchg
outsb
cmc
jne
scas
scas
mov
push
jge
lret
ss
or
inc
test
in
stc
pop
inc
push
mov
add
pop
jno
push
lahf
and
mov
push
pushf
lock
pop
dec
push
stc
pop
aas
fwait
in
test
das
and
xchg
jmp
push
fwait
xchg
adcl
cmp
cmc
fdivl
shr
add
out
sub
pop
mov
orb
lcall
dec
and
and
out
ds
outsb
push
jmp
cmp
mov
jp
push
in
push
mov
shll
sub
push
popa
mov
pop
xchg
les
testl
mov
pop
pusha
push
fldt
xchg
cli
cmp
jecxz
std
ret
lea
sarb
adc
popa
addl
cs
or
sbb
xchg
inc
enter
or
mov
cmp
clc
dec
cli
bound
add
or
xorb
mov
mov
mov
inc
mov
mov
dec
adc
int3
and
mov
hlt
shlb
test
mov
js
jp
shlb
pop
xlat
mov
popl
in
xchg
andl
sti
pop
fwait
and
cmp
lock
mov
dec
mov
or
out
andl
mov
in
ret
lds
fstl
cmp
insl
mov
pop
push
leave
insl
sbb
rol
jmp
cmp
rorb
adc
jg
mov
stos
cmp
fildll
in
in
pop
xor
xchg
pop
fidivl
lock
inc
pop
push
xchg
popa
add
out
pop
jge
xor
cs
scas
sbb
pop
cwtl
adc
and
mov
idivb
test
je
daa
lahf
mov
sub
ret
mov
cltd
test
test
push
std
jle
ds
int
hlt
push
adc
aad
pop
mov
xor
add
hlt
fisubrl
orb
repnz
movsl
test
push
gs
cmp
push
aad
sbb
sbb
add
out
sbb
or
ds
shlb
popf
xor
mov
sahf
dec
les
dec
fidivs
adc
mov
pop
mov
cli
pusha
dec
scas
push
jle
stos
out
push
divl
sbbb
pop
adc
fadd
subl
mov
ret
addr16
ret
inc
push
insb
or
or
and
inc
push
push
dec
push
mov
imulb
jae
cmp
stos
stos
mov
pushf
inc
sub
fs
fwait
incl
cmp
or
pop
scas
or
testb
pop
mov
icebp
xor
rcll
int3
stos
and
lods
aad
or
movb
sub
xchg
mov
les
loopne
rolb
jle
pop
mov
jne
es
imul
insl
push
push
dec
jmp
int3
sbb
pop
addr16
mov
jg
sbbl
fbstp
xlat
ret
sbb
rolb
aaa
ret
and
pop
jb
pop
scas
daa
adc
outsb
mov
lds
jmp
xor
mov
xchg
dec
xchg
add
mov
ds
arpl
push
clc
pop
sbb
push
xor
pop
out
and
push
cmc
sbb
or
sarl
ret
sub
out
xchg
das
repz
enter
aas
push
out
les
add
aam
sub
loope
test
mov
jp
xor
out
jmp
fcoms
in
pop
nop
xchg
dec
adc
std
mov
stos
popf
movsb
mov
sub
inc
cmpsl
dec
mov
cmp
test
and
dec
pusha
adc
mov
pop
cwtl
dec
addr16
sbb
lods
or
or
xchg
push
out
nop
in
cltd
push
call
mov
int
bound
out
std
scas
jno
mov
or
jne
jnp
andl
push
cmp
mov
fisttpll
mov
dec
lock
cmpsl
cmpb
jle
xlat
mov
shlb
les
mov
cmp
popa
cmp
sub
loopne
rep
outsb
sub
pop
xor
clc
test
and
mov
xchg
cld
jb
into
add
rdtsc
cs
in
jno
clc
fwait
movsb
ss
pop
out
mov
mov
inc
adcl
ret
in
and
inc
mov
fisttpll
jecxz
icebp
xchg
cmp
xor
adcl
push
insb
andb
push
movsl
sbb
xor
sbb
out
pop
sub
and
push
das
cltd
mov
fsubrs
xchg
stos
out
dec
lret
inc
out
push
stc
push
cmp
add
sbb
ja
ja
pop
push
into
sbb
adc
data16
pop
lret
add
pop
test
pop
adc
jmp
pop
sti
mov
aam
test
mov
rolb
inc
cmc
in
cmpsb
mov
mov
add
imul
add
lea
femms
hlt
addr16
or
out
sub
test
mov
mov
sahf
sub
jnp
cwtl
adc
push
xchg
fldl
imul
or
addl
mov
cmp
add
out
clc
dec
sbb
pop
fbstp
shlb
ja
cmc
loope
inc
ja
cmp
mov
jle
mov
orb
in
jp
xchg
mov
lahf
rcl
lahf
test
mov
xor
add
sahf
cmpl
pushf
test
mov
and
push
cmp
lcall
xchg
dec
jp
inc
or
mov
sub
sbb
stc
push
std
test
pop
repnz
icebp
daa
adc
pop
das
jle
popa
cs
dec
sbbb
insl
jle
movsb
jne
aam
sbb
sarl
jne
in
mov
xor
pop
mov
xchg
fisubrs
mov
lods
leave
imul
ja
shlb
push
push
cmpsw
cs
sbb
pop
sbbb
adc
pop
adc
mov
xor
cmp
rolb
adc
adc
push
add
ret
xor
cld
imul
fadd
or
push
sbb
xor
cltd
pop
xchg
jo
xchg
lock
xor
aaa
aam
xor
push
cmp
xchg
pushf
insl
sbb
loope
idivb
arpl
lret
outsl
shrb
int
dec
leave
or
fidivrl
pushf
and
into
lcall
stos
rcl
enter
cmpsl
ljmp
xor
shr
rcll
or
xchg
inc
jne
jle
jb
insb
xlat
jb
xchg
call
jp
mov
cs
adc
push
scas
mov
sbb
push
loope
dec
insl
ret
and
xor
in
sub
cmpsb
pusha
ja
sbb
lcall
mov
sti
xchg
add
ds
test
lds
inc
xlat
mov
popf
inc
mov
out
xchg
pop
jecxz
mov
pop
cmp
frstor
pop
xor
in
das
cld
and
insb
xor
cs
cmp
xor
andb
xor
out
rorb
outsb
fists
js
subb
sbbl
mov
jecxz
fwait
jnp
push
pop
xchg
pinsrw
pop
lahf
jl
push
scas
ret
adc
into
mov
out
or
dec
push
xchg
mov
enter
xchg
mov
jns
movsl
push
int
dec
movsb
ss
in
xor
gs
sti
jl
lcall
scas
mov
scas
cmpsb
xchg
mov
xor
fcmovbe
jno
fdivs
in
ljmp
pop
mov
sbb
fimuls
inc
jae
fisubrs
add
add
xchg
sbbb
arpl
addr16
jg
das
cmp
jae
pusha
pop
inc
add
or
xor
cwtl
mov
mov
push
mov
daa
sbb
sarl
jge
imul
jb
push
push
mull
push
pushl
and
rolb
repnz
movl
lea
xchg
sbb
and
mov
jno
lods
test
popf
cld
into
jg
cmpsb
cmpsl
add
inc
sbb
inc
cmpsb
aas
cmp
and
or
fsubrs
cmp
xchg
push
jge
rorb
xchg
pop
pop
jg
cmp
cmp
add
in
sub
hlt
outsb
movsl
ret
aaa
or
push
aas
jmp
jnp
sarw
lcall
movsb
inc
das
push
cmpl
xchg
xor
outsl
mov
js
fistpl
dec
push
adc
mov
hlt
inc
test
and
call
xor
lds
mov
mov
push
lret
rcll
rclb
icebp
lock
fisubrs
cmp
mov
xor
loop
les
shrl
xor
pop
test
sub
sub
pusha
mov
push
mov
xor
inc
xor
push
sbb
xchg
aam
pop
ss
out
xorb
pushf
sbb
rorl
icebp
stos
and
in
shll
decl
test
in
mov
pop
inc
jae
pop
jmp
and
stos
je
push
jle
popa
and
dec
fs
sub
pop
mov
xor
xchg
mov
fyl2x
inc
xchg
leave
sub
push
xchg
sbb
ja
cmp
aaa
stc
fildll
mov
dec
sbb
adc
mov
icebp
or
outsb
loope
lods
loop
mov
ret
cmp
or
test
rcll
or
addr16
vmwrite
enter
or
fstpl
je
lahf
cmc
add
dec
xchg
mov
add
lods
scas
lret
dec
ficompl
xchg
jp
mov
movsb
inc
stos
nop
pop
in
xor
test
mov
ljmp
jmp
ljmp
aas
leave
dec
jno
js
pop
adc
xchg
xor
push
sbb
scas
pop
xor
dec
xlat
cli
dec
andl
rcr
xchg
aas
jecxz
aam
lock
mulb
mov
inc
pop
cmp
mov
stos
shl
xlat
xchg
mov
rcr
cmpb
scas
and
dec
cmpsb
sbb
inc
stc
push
out
loopne
pop
adc
pushf
cmp
mov
cltd
leave
out
mov
aam
mov
sub
mov
jecxz
inc
adc
call
add
sbb
mov
push
ljmp
icebp
aam
or
fcoml
hlt
lahf
add
rclb
mov
movsb
cmpsl
int
test
mov
fistl
out
add
add
mov
mov
push
jnp
push
sub
dec
and
fsubrl
sub
jnp
cli
cli
push
mov
out
sbb
pop
mov
or
add
sub
cld
mov
cld
adc
xchg
cmpsb
lock
fs
test
dec
decb
cltd
jne
mov
push
dec
sbb
int
aam
mov
sbb
loop
rcrl
in
cmp
lahf
adcb
push
jp
dec
mov
pop
xor
test
dec
fwait
sbb
push
xacquire
enter
lods
subb
mov
stos
lock
lahf
push
xor
stos
push
fwait
ret
jle
ja
cs
leave
cltd
cltd
mov
mov
lahf
pop
push
lds
movsl
rcrb
sub
inc
cmp
je
daa
ja
inc
leave
and
lock
jnp
fldt
data16
dec
rolb
mov
in
decb
mov
dec
scas
lock
mov
jbe
fimuls
cmp
lds
fidivs
movsl
sub
mov
pop
push
inc
fldt
jne
popf
dec
fcmovne
orb
adc
xor
cs
pop
mov
shll
push
mov
je
push
ss
jne
push
push
xor
js
sub
in
aaa
adcl
idiv
jecxz
xor
sbb
pop
leave
pop
icebp
mov
mov
push
fs
xchg
fcoml
in
sbb
sti
movsb
xchg
cmp
insb
ss
roll
cwtl
ret
rcl
pop
inc
jp
out
pop
adc
out
jnp
test
lahf
in
xor
xchg
loopne
mov
adc
out
fld
ret
and
push
mov
and
lock
pop
cmp
data16
iret
shll
and
push
mov
xchg
adc
shl
test
sbb
inc
dec
cmp
push
cmp
call
fdivr
or
aaa
test
movsb
jo
out
fsubl
daa
int
mov
pop
cmp
jle
or
nop
and
push
das
sub
imul
or
in
aad
cmpsb
jns
sbb
push
scas
mov
mov
fs
or
nop
nop
aas
or
adc
cmp
cmpsl
fsubrs
cmc
xchg
mov
push
out
pop
adcl
xor
popa
test
mov
leave
fs
in
negl
mov
loope
les
cmp
xor
cmp
push
aas
das
pop
xchg
mov
pushf
cmpsb
mov
insl
int3
inc
rclb
or
les
inc
jns
sub
jmp
sarl
bnd
cmp
xchg
mov
pop
inc
fbstp
sub
jb
add
pop
mov
es
cmp
ss
mov
xlat
jnp
shr
sbb
ds
sub
arpl
add
es
sbb
rorl
adc
std
sub
adcb
orl
sahf
mov
jmp
mov
sarl
out
fbstp
cmp
mulb
dec
sbb
dec
orb
and
in
fwait
ja
push
cwtl
aad
jle
mov
push
in
push
ss
push
cli
imul
cs
xchg
nop
add
fldt
xchg
pop
and
sbb
outsb
jb
xchg
mov
pop
jne
mov
mov
xorb
cltd
jnp
xor
les
and
fmul
loop
sti
std
data16
fadds
ds
xchg
pop
enter
mov
and
leave
lods
cmp
add
push
das
push
or
jae
subb
aam
mov
loop
mov
mov
push
inc
pop
ficompl
mov
add
fistps
jle
test
mov
jg
das
adc
jbe
popa
stos
or
cld
das
xchg
push
fiaddl
mov
inc
faddl
add
popf
test
cwtl
add
and
mov
leave
loopne
outsb
ss
jmp
add
test
mov
insl
push
xchg
js
push
pop
push
subl
cmp
xchg
jnp
sbb
nop
stos
aam
fcmovb
call
lods
xor
adc
add
sbb
and
or
pushf
stc
push
mov
sahf
imul
mov
loop
xor
fldt
dec
cmp
stc
mov
push
or
imulb
jns
xor
nop
pop
jns
or
cmp
imul
clc
dec
das
aaa
iret
aas
cmc
push
xchg
insl
jb
inc
add
mov
in
clc
jno
push
scas
push
mov
mov
je
fninit
add
mov
cmp
jb
stos
insb
outsb
pushf
in
into
ret
aaa
out
cltd
cwtl
xchg
jbe
outsl
mov
and
pop
into
mov
lods
scas
bound
cmp
insb
icebp
sub
mov
nop
stc
loopne
xor
pop
out
xchg
pop
pop
shll
fdivp
mov
mov
xor
adcb
cmp
xor
jno
stos
stos
insl
repz
push
sarl
cli
mov
inc
movsb
in
pop
mov
sub
mov
out
sub
lds
mov
fsubs
ja
push
or
fmull
pop
push
mov
cmp
addb
mov
mov
loope
ficompl
call
xor
jge
push
jbe
adc
mov
fwait
scas
or
sahf
pop
cmp
inc
jmp
pop
mov
mov
push
pop
add
adc
test
and
insl
call
mov
mov
jg
imul
or
test
mov
jae
add
xor
fcompl
cmc
ja
fdivs
and
push
scas
lar
sbb
cs
lods
call
testb
cmp
addl
lds
fiaddl
push
pop
inc
sub
les
inc
outsb
push
mov
icebp
loope
enter
cmp
add
les
sub
cli
stos
xchg
bound
int
subl
enter
pop
pop
sub
inc
out
out
inc
sbb
hlt
and
movsl
call
dec
cli
add
sub
adc
insb
inc
ffreep
insl
mov
bound
jg
fimuls
test
xchg
jmp
in
cmpsl
stos
xchg
xchg
test
xchg
movsb
pop
sbb
imull
or
scas
outsb
imul
jp
and
pop
inc
popf
cmp
xchg
sub
stc
stc
jae
cs
daa
inc
push
mov
sub
mov
xchg
cmpsl
and
or
xlat
sbb
push
xchg
mov
jae
out
stos
dec
dec
stc
sub
xor
aad
jne
mov
mov
mov
mov
imul
fdivrp
arpl
sub
addr16
add
add
cmp
fcoms
mov
js
pop
xchg
orb
cmpl
jl
jecxz
jno
test
pusha
jo
sub
ret
icebp
push
mov
adc
inc
xor
mov
mov
dec
mov
fs
testb
mov
rcrb
inc
popf
inc
out
ljmp
mov
mov
loop
jmp
push
mov
in
sbb
ret
dec
mov
into
and
jne
fisttpl
adc
lret
arpl
test
jns
leave
loope
xchg
iret
aas
push
mov
lret
std
cmp
fimull
adc
add
inc
mov
adcb
mov
aas
mov
dec
out
xor
test
pusha
xchg
inc
cltd
pop
repnz
sub
push
in
lcall
xchg
add
dec
loop
fstl
clc
decl
mov
enter
sub
into
ret
out
sarb
gs
inc
cmpb
mov
aam
fadd
lods
jb
rcr
in
cmc
push
xchg
dec
cmp
cli
mov
testb
fsubr
mov
mov
sbb
out
popa
mov
int3
lahf
xorl
push
cmp
filds
jo
fisubrs
xchg
and
addr16
mov
and
jmp
scas
xlat
pop
cwtl
jne
ja
sbb
push
andl
shl
aaa
hlt
sarb
mov
mov
mov
scas
test
insb
xchg
push
adc
sbb
mov
or
jb
lods
test
imul
int3
mov
mov
js
stos
push
dec
mov
clc
pop
mov
mov
sub
and
hlt
je
bswap
push
mov
sbb
jns
push
ja
std
cld
adc
mov
pop
insw
pop
imul
fwait
or
in
test
fiaddl
push
les
push
cmp
aas
fildll
mov
ja
imul
shrl
imul
add
push
movsb
push
mov
into
sbb
adc
andb
jae
pop
ljmp
adc
pusha
dec
jg
stos
push
mov
fwait
jcxz
jnp
lods
inc
pop
stos
scas
xchg
cmpsb
out
out
pop
ret
lahf
mov
pop
cmc
enter
loope
mov
mov
mov
inc
jp
sub
xchg
js
cmp
cmp
loopne,pn
adc
loope
lcall
fcoms
mov
imul
sbb
jp
xchg
sbb
push
mov
xchg
xchg
fsubp
cmp
inc
sub
pop
ret
int
jno
xor
les
in
mov
adc
imul
add
iret
pop
out
cmp
mov
xor
mov
aaa
push
cmpsb
stc
jbe
mov
mov
cmp
test
xor
push
lcall
dec
out
xlat
hlt
and
sarb
test
popf
xor
mov
sbb
shl
adc
test
pop
cmc
cwtl
mov
cli
mov
and
pop
je
dec
xchg
xchg
jne
int3
loope
shlb
lods
sbb
cli
ror
jns
mov
lea
inc
or
push
hlt
sbb
xor
pushl
sbb
std
mov
rcrb
push
lds
addl
fstpt
shll
sbb
outsb
adc
enter
cmp
xchg
insb
negb
or
js
clc
scas
push
lahf
push
push
adc
lret
xor
rcl
sbb
pop
dec
outsl
mov
mov
sbb
in
repnz
xchg
inc
int3
push
out
mov
popa
mov
xchg
sti
out
pop
sub
add
lahf
sbb
push
sbb
mov
mov
test
outsb
and
sbb
xchg
adc
jg
xor
stos
aas
add
pop
out
rorl
push
and
neg
adc
xchg
mov
aaa
mov
sahf
pop
test
mov
ja
mov
sahf
fsub
dec
mov
divl
mov
ret
lock
mov
test
loope
lock
inc
mov
lret
mov
cwtl
movsl
out
rorb
adc
dec
sub
mov
repz
xchg
dec
lods
mov
add
jne
scas
leave
cmp
push
sub
imul
test
dec
mov
pop
sahf
mov
idivl
ss
xlat
adc
rclb
adc
movsb
in
mov
pop
add
scas
or
jle
sarb
sbb
push
stos
aad
fbld
mov
rcl
inc
lods
neg
push
movsb
push
aas
shr
insw
mov
sub
orl
push
push
mov
stos
xchg
mov
test
mov
and
rolb
pop
mov
mov
push
lcall
xchg
sbb
call
jne
push
rcrb
mov
dec
lahf
aad
clc
pop
lods
scas
dec
xchg
add
aad
mov
lds
add
mov
sbb
stc
mov
nop
enter
sub
in
xchg
das
pop
in
call
aas
sub
lods
insl
jp
xor
xor
sbb
sub
push
lock
push
push
lods
shlb
pusha
adc
jb
push
adc
xchg
xor
sahf
dec
jno
dec
mov
push
cmpsl
stos
jmp
repz
sbb
daa
leave
into
ret
loop
dec
adc
xor
mov
mov
mov
popa
cld
jecxz
aaa
fst
cmp
lods
xchg
clc
or
pop
adc
sub
pop
inc
lea
xor
push
and
sbb
inc
ret
inc
out
cmp
push
hlt
sbb
sub
or
adc
xor
inc
push
mov
sub
cmpb
push
jecxz
ja
inc
loope
xor
rorl
in
nop
mov
or
jbe
sbb
sahf
pusha
cld
mov
jge
fsubl
pop
push
or
adc
xlat
adc
into
mov
jae
jbe
jo
es
enter
aad
out
sbb
dec
xchg
mov
fistps
in
movsb
sbb
fiaddl
jecxz
jnp
jno
xchg
fsubp
dec
lahf
cmc
pop
push
xor
fstl
cmpsl
sub
xor
jmp
popa
out
leave
mov
cmp
xchg
inc
cld
adc
ljmp
xchg
mulb
test
mov
mov
ficoml
arpl
in
push
dec
sub
cmp
roll
rcll
arpl
xchg
push
icebp
fwait
jg
jmp
and
cmp
or
enter
lahf
sub
jo
push
pop
ret
pop
pop
insb
adc
fiadds
mov
ds
mov
mov
add
xchg
loop
sahf
xor
in
sti
popa
push
inc
lods
inc
fdivl
inc
jecxz
cli
sbb
aaa
icebp
ja
js
pop
dec
aaa
xchg
aam
mov
js
and
mov
imul
xor
inc
lret
mov
mov
das
sbb
mov
sti
xchg
inc
arpl
cmp
dec
mov
mov
out
hlt
xor
es
call
xchg
sahf
lret
mov
sarl
sahf
push
jne
test
adc
push
mov
xchg
addl
ds
pushf
sub
mov
fnstsw
inc
into
dec
out
cmp
imul
xor
adc
pop
bound
mov
dec
jle
xchg
xchg
into
daa
das
sub
cwtl
cmp
imul
jp
inc
rcr
shlb
ficompl
sub
inc
or
hlt
sub
ja
mov
push
push
clc
mov
shlb
jmp
inc
mov
push
mov
movsl
mov
jp
arpl
add
jmp
pop
outsl
mov
rcll
mov
lcall
xor
jno
dec
mov
dec
test
movsl
and
adcb
mov
push
xchg
cmpb
mov
adcl
sub
fbstp
rolb
push
and
mov
int
shlb
xor
mov
adc
test
push
mov
adc
push
cmpsl
xchg
sbb
xchg
lds
pop
das
mov
fisubrl
in
xor
mov
pop
jmp
arpl
xchg
nop
scas
sbb
hlt
js
sbb
cmc
push
sub
mov
mov
cmp
sbb
sti
mov
add
insb
ljmp
into
les
mul
pop
in
outsb
ret
and
out
shll
pusha
cmp
and
push
into
push
mov
dec
sbb
in
mov
call
mov
and
lods
and
mov
test
mov
and
mov
adc
fwait
sbb
adcl
push
adcl
ret
xor
aam
xchg
dec
bound
ljmp
mov
mov
fdivs
dec
jne
pop
xchg
cmpsl
repz
mov
mov
subl
xor
jmp
push
movsb
xchg
dec
enter
je
jmp
pop
adc
fdivl
cmp
pop
insl
xchg
movsb
push
mov
sbb
and
push
lret
and
inc
stos
sub
cmp
test
xchg
ja
cmp
inc
pop
jne
xlat
iret
shrl
cwtl
mov
push
sti
mov
mov
xchg
sti
xchg
sahf
and
xchg
mov
faddl
inc
out
and
lret
out
sbb
push
sbb
mov
adc
lods
loopne
jg
pop
and
stc
pop
fbstp
mov
cltd
cltd
inc
addl
sub
inc
insb
leave
inc
rolb
push
inc
lret
inc
push
aad
flds
adc
mov
popf
mov
mov
dec
push
xorl
push
popf
arpl
add
int3
dec
daa
fsubrl
jg
push
iret
jns
xchg
xor
xorb
std
lcall
cmp
jle
lea
scas
mov
push
adc
std
pop
xchg
mov
popf
mov
emms
sbb
cltd
cmc
push
fcomps
pusha
xchg
pop
dec
out
iret
mov
or
mov
add
ljmp
into
pusha
xlat
dec
xor
mov
xor
push
arpl
clc
inc
clc
push
cmp
dec
stos
nop
or
in
cld
movsl
es
pop
mov
pop
out
pop
ss
adc
adc
por
xchg
cmp
loop
je
or
sbb
fcmovne
movsl
pop
popf
mov
or
enter
sbb
in
lcall
stos
pushf
inc
leave
push
ds
ret
and
out
pop
out
push
popf
sar
sahf
push
in
leave
pop
mov
xchg
insb
or
pop
adc
inc
test
pop
push
push
enter
mov
cmp
dec
lods
sub
mov
inc
pop
xchg
rorl
xchg
aaa
sub
fimuls
clc
jne
xchg
fsub
xor
dec
icebp
add
adc
push
xchg
pop
ljmp
or
sub
ret
lods
jnp
repz
jno
lods
xchg
insl
roll
mov
subl
cmp
pop
arpl
rorb
jp
xor
outsb
rol
ljmp
and
inc
stos
add
inc
cmpsb
mov
ret
filds
push
stc
dec
mov
stc
cmpl
test
sbb
dec
ret
and
jle
sub
sbb
clc
fwait
dec
ret
icebp
inc
dec
or
lahf
loopne
xor
add
cmp
in
dec
inc
dec
add
mov
cmpsb
sub
test
les
xchg
test
loop
or
dec
lods
fstps
outsl
stos
or
stos
fs
jno
pop
adc
cwtl
push
fcmovb
push
aas
or
push
lods
js
adc
sbbb
cmpl
push
cwtl
sub
adc
or
daa
pop
mov
or
push
mov
mov
mov
push
es
and
push
frstor
sub
pop
push
adc
divl
xchg
or
push
push
stos
add
int
or
push
xlat
mov
xabort
lods
hlt
jge
sub
cmpsl
and
push
ror
cmpsb
pop
js
mov
in
data16
aad
cmp
imul
sbb
sbb
cwtl
sub
rorl
and
xor
mov
xchg
xor
mov
cmp
dec
dec
lahf
sbb
fnstcw
add
mov
imul
mov
pop
lret
lock
pop
dec
sahf
mov
test
pop
lds
pop
xor
aaa
decl
fidivrs
adc
and
inc
jo
rcrb
jge
test
out
mov
push
sub
rolb
mov
mov
in
mov
dec
std
xchg
push
sbb
out
mov
mov
and
push
mov
loop
cmc
rorl
add
cmp
repnz
aaa
jno
mov
dec
int3
cmpsl
xchg
mov
mov
pop
add
imul
arpl
and
incb
rcll
xor
mov
lret
adc
int3
sahf
ljmp
mov
psubusw
mov
jae
fdivr
cld
push
nop
std
sbb
xlat
outsb
xchg
pop
hlt
mov
xchg
loopne
cwtl
ds
loop
xchg
push
js
mov
repnz
sub
aad
repz
xchg
xor
jae
sub
iret
in
aad
cli
cmp
mov
scas
in
aad
fidivl
sub
sub
std
pop
jae
test
cmp
inc
mov
dec
shl
gs
repz
pop
sbb
pop
popf
btc
xchg
jbe
pop
lock
inc
sarb
loopne
imul
mov
movsb
ret
jb
fildll
in
ret
pop
mov
or
add
cmpsb
aad
popf
jecxz
cmpsl
fdiv
test
fsubl
repnz
lods
outsl
cmp
pushl
or
ret
or
dec
add
into
mov
movsl
mov
aas
push
in
pusha
add
cmp
imul
xchg
mov
inc
dec
sbb
mov
ss
ret
mov
cmp
xor
mov
nop
fdivl
dec
pop
cmp
xchg
mov
lcall
outsb
aaa
je
mov
add
pop
mov
lock
fistpll
insb
addr16
xor
mov
xchg
push
outsl
pop
dec
pusha
out
mov
inc
xlat
push
test
pop
jnp
cmp
cli
and
xchg
mov
pop
xchg
pop
cltd
mov
lret
mov
pop
cmp
and
or
cmp
fsubs
mov
jge
fdivl
push
ss
jmp
inc
push
je
or
xchg
sub
lret
xchg
push
adc
cmp
fwait
enter
mov
aam
repz
mov
lods
leave
sub
push
push
mov
xchg
jle
stos
out
xor
mov
mov
sbb
sub
insl
and
jns
imul
jns
flds
test
mov
xor
aaa
test
movsb
dec
in
popf
out
push
xchg
insb
cmpsl
sub
adc
sub
data16
shll
push
es
mov
lahf
cld
jl
hlt
enter
add
mov
xchg
int
ss
arpl
cmc
cmp
mov
mulb
inc
inc
sbb
and
mov
jle
or
or
movsl
adc
cs
pop
insb
adc
xchg
push
dec
scas
jbe
sarl
jne
xor
push
adc
scas
pushf
icebp
out
repz
push
push
cltd
sub
and
int3
dec
mov
mov
inc
xor
dec
sub
ljmp
cmp
xchg
in
jno
pop
pop
adc
mov
popf
pusha
mov
mov
pop
or
mov
and
lea
cmc
or
add
mov
repz
sahf
sarb
negb
add
out
rclb
ja
into
stc
jl
dec
js
es
dec
hlt
or
imul
jne
dec
mov
mov
add
xchg
rol
iret
dec
adcb
scas
xorl
repz
and
cmp
arpl
lds
jae
pop
iret
fwait
lret
popa
mov
push
mov
inc
repnz
mov
icebp
mov
sub
mov
xor
test
pop
jne
xchg
jmp
sub
add
ss
in
ja
lds
cmc
cmp
cmp
aad
movsl
cmpsb
sahf
ret
mov
mov
pop
dec
pusha
add
sub
ret
aaa
inc
push
cs
xor
dec
outsl
mov
mov
push
mov
out
mov
ret
xchg
sub
fwait
mov
jmp
cltd
xchg
nop
inc
in
inc
pop
mov
gs
scas
sub
inc
mov
lods
stos
and
push
sbb
add
add
sbb
in
xchg
push
nop
push
push
and
jnp
push
cltd
aas
push
mov
mov
ja
cld
mov
lock
mov
clc
xchg
sbb
je
sub
sarl
mov
out
jl
pushf
cmc
and
push
dec
jae
cmpsl
dec
sbb
adc
xor
cmpsb
add
aas
add
dec
xrelease
mov
insl
or
sub
and
fbstp
jnp
test
inc
jmp
in
ja
les
pop
nop
dec
adc
jns
mov
inc
sbb
adc
mov
add
fsubl
push
gs
ret
push
out
mov
push
loop
fcoms
aam
repnz
rorb
inc
imul
arpl
and
shr
sbb
push
gs
ret
das
fcoml
xor
inc
mov
xchg
sbb
push
inc
pushf
fidivs
cwtl
sbb
inc
repz
dec
sahf
xchg
stos
rol
popf
data16
shl
pop
add
outsl
loope
cmp
loopne
shrl
add
rclb
sbb
dec
push
push
xchg
dec
xchg
cmp
xchg
cmp
shrl
jb
into
mov
dec
push
test
int
aam
pop
jl
adc
xchg
mul
xlat
cwtl
cwtl
aam
inc
mov
fucom
inc
mov
test
sbb
pop
testl
mov
jecxz
mov
mov
inc
or
rcll
aam
icebp
dec
or
pop
sti
clts
js
xor
sbb
mov
pop
cmp
push
ror
hlt
into
cli
cmp
inc
test
mov
mov
pop
add
pop
pop
iret
and
ret
lret
pop
stos
cmp
or
fildll
jne
stc
sub
mov
lret
jns
andb
dec
jae
test
js
and
sub
vpmulhw
xor
daa
rcl
sti
aam
jecxz
lds
test
push
mov
xchg
call
mov
int
jb
in
rorb
lds
bound
adc
cmp
enter
dec
imul
loope
iret
sub
fidivrl
addb
mov
andl
iret
and
inc
fstl
or
lods
mov
iret
push
daa
fisttpll
mov
push
rcll
jo
addl
sahf
mov
jp
push
push
out
ror
into
sub
ret
hlt
or
mov
add
enter
mov
push
mov
mov
addr16
outsb
sub
outsl
fldcw
mov
xchg
xchg
lods
ds
fcmove
or
push
scas
mov
dec
stc
testb
pop
push
mov
xor
ret
cltd
sbb
sub
in
jecxz,pt
add
mov
mov
fisubl
push
cs
lcall
fdivr
and
mov
stos
push
bound
fs
ret
outsb
cld
fisubs
loopne
or
jnp
xor
out
jl
cwtl
ret
pop
pop
ret
pop
idivb
mov
out
pop
lret
mov
sub
push
in
pop
jb
inc
push
xor
xorb
movsb
adc
cld
mov
cld
push
mov
in
mov
nop
call
ret
xor
xchg
add
jl
mov
ljmp
mov
jecxz
test
out
clc
dec
subl
int
dec
ret
loope
cmpsl
lret
int
cltd
xchg
sub
cmpsl
adc
leave
mov
cwtl
loope
sahf
jae
in
sahf
mov
sub
mov
dec
ret
mov
in
adc
mov
sbb
push
fcmovnbe
mov
int3
sub
push
in
adc
jecxz
rclb
push
hlt
push
inc
inc
mov
pushf
inc
outsb
adc
int3
dec
cmc
pop
sub
pop
mov
hlt
xlat
or
push
jae
fisubs
sub
inc
insl
lret
in
out
sub
mulb
insb
inc
sahf
scas
jnp
insb
push
mov
into
ss
ds
aad
pop
jge
pop
xorb
xchg
sbb
xchg
push
out
inc
movsb
and
cltd
sub
dec
enter
pop
xchg
pop
mov
std
orb
pop
outsb
jnp
xchg
dec
jg
mov
test
sub
nop
insb
push
in
out
loopne
jmp
inc
dec
es
mov
jne
inc
fnsave
and
outsb
xor
jns
sbbl
inc
jne
xor
mov
bound
clc
aad
popl
setg
lahf
xor
test
mov
cmp
push
lock
ret
loopne
or
add
adc
mov
ret
push
fs
setae
addb
addr16
mov
sbb
mov
push
pop
fcom
dec
adc
jns
jp
dec
jge
jge
push
xor
test
outsl
or
jne
jg
cltd
sbb
rcl
lret
cli
mov
nop
push
adc
aad
test
nop
jno
inc
insl
pop
ja
loopne
push
mov
ljmp
adc
pop
test
mov
cwtl
xchg
aas
imull
sub
clc
aam
lock
stos
mov
sub
int3
repnz
or
cmc
mov
and
fistl
faddl
jl
sub
inc
mov
movsb
jecxz
push
jge
cmpsl
push
lods
aad
or
ret
jbe
sub
fildl
aam
bound
iret
add
jno
orl
pop
outsb
aas
jno
in
xor
fs
lcall
jg
inc
cmpsl
test
bound
stc
repz
scas
insb
mov
push
sub
dec
bound
shll
sub
jbe
jae
push
jecxz
inc
stos
push
xor
sbb
scas
push
adc
into
jl
xchg
and
and
add
and
pop
push
leave
dec
pop
repnz
fildl
stc
or
pushf
jle
hlt
push
or
lods
aas
jns
les
cmc
movsl
dec
iret
sub
mov
ficoml
in
mov
dec
ret
movsb
mov
cmc
push
cmp
fs
jo
cmp
push
mov
shlb
repnz
push
leave
in
adc
adc
adc
pusha
add
xchg
js
popa
cmc
xchg
rorl
pop
ljmp
jp
arpl
xor
js
fs
sbb
stos
popa
xchg
xor
ret
lds
jg
inc
xchg
fsubl
repz
outsb
mov
out
pop
dec
or
pop
mov
repnz
shr
fdivs
push
loopne
in
inc
shrb
sub
jno
out
cmp
inc
push
ret
hlt
sbb
mov
mov
in
sbb
push
test
xchg
sub
cmp
mov
imul
inc
loop
cmpsl
xor
or
daa
pushf
repnz
push
mov
inc
cmp
inc
xor
add
test
dec
inc
aad
xor
stos
jbe
das
dec
test
into
inc
stc
mov
and
popf
dec
out
cmpsb
scas
or
xchg
mov
pop
push
cmc
aaa
mov
pop
stc
pop
push
fistpl
pop
icebp
inc
sub
cs
jnp
mov
add
fsub
sub
je
test
xor
mov
out
arpl
fucomi
xor
xchg
movsb
popa
mov
xor
and
dec
xchg
and
movsb
out
shlb
or
stos
and
mov
sbb
dec
mov
jo
jbe
adc
arpl
pop
add
pop
push
fs
lods
fistl
dec
add
xchg
or
loopne
addb
fsubs
adc
mov
or
out
iret
sbb
insl
dec
dec
out
adc
cmp
out
pusha
loopne
adc
and
lods
sbb
dec
mov
sub
out
les
fldenv
mov
nop
sti
pop
mov
cwtl
sub
lret
or
push
stos
cmp
cmpsl
or
lcall
mov
scas
inc
and
sub
dec
repnz
clc
xchg
mov
test
aaa
pop
xorl
enter
clc
push
dec
inc
addr16
add
ss
jno
or
and
or
pop
arpl
test
xchg
and
stos
orb
in
ds
mov
mov
push
cs
fdivr
jbe
sar
sub
test
fs
sbb
mov
fisttpl
imul
frstor
imull
xchg
enter
cmp
lcall
repz
movsl
xor
decl
and
and
push
xchg
leave
je,pn
mov
clc
pop
sbb
mov
fwait
ljmp
out
and
jge
cmp
dec
xchg
js
inc
and
dec
jo
test
and
ljmp
enter
or
xor
nop
ret
out
pop
lcall
add
lret
mov
pop
loop
rcll
aad
scas
mov
pop
mov
aaa
add
rolb
test
sub
fsubrl
push
add
push
sub
xor
mov
mov
sarl
xor
repz
mov
sub
jl
jo
out
pop
dec
iret
xchg
neg
test
sbb
mov
and
fmuls
jmp
mulb
mov
and
ljmp
shll
shl
sub
jge
jae
mov
movb
push
rcl
into
sub
cmp
mov
adc
nop
imul
fisttpll
mov
xchg
enter
idiv
cmp
icebp
test
gs
fistps
scas
stos
out
sub
cmpsl
ret
arpl
add
sbb
in
repnz
bnd
out
push
out
clc
jecxz
add
adc
fsts
inc
xchg
and
push
in
imul
ficompl
aas
aad
mov
xchg
lcall
xchg
add
and
or
mov
loopne
lods
xor
jle
push
lahf
xor
or
test
or
jo
mov
mov
add
mov
lods
pop
cmc
fsubrs
sbb
dec
mov
ret
les
jecxz
into
pop
repz
mov
sbb
loop
pop
insl
sbb
xor
dec
das
or
lock
js
fildl
mov
and
aam
sbb
mov
and
movsl
sbb
cld
dec
aas
aam
aam
aas
and
cmp
or
jge
mov
div
mov
jl
out
popa
imul
sahf
or
dec
rcl
push
xchg
mov
pop
lcall
bound
insb
mov
lcall
ret
out
and
testl
mov
cmp
jp
or
xor
out
pushf
pusha
or
inc
dec
jmp
popa
or
pop
outsl
sti
pop
mov
xchg
pop
ja
push
addl
push
dec
ret
xchg
jp
xor
and
xlat
add
xor
mov
mov
push
mov
mov
movsl
movsb
jb
add
movsb
mov
push
pop
xor
pop
pop
inc
pusha
mov
jae
fs
push
add
test
clc
jl
outsl
test
or
imul
je
inc
pop
push
push
jb
ss
xchg
daa
imul
outsb
jl
inc
shlb
test
cmp
popa
xchg
aas
pop
add
lds
jns
adc
mov
jnp
xor
outsl
jbe
inc
push
push
arpl
jnp
jno
out
cmp
and
clc
sahf
push
lret
addr16
and
xor
adc
add
xchg
dec
and
cli
fnstsw
push
pop
adc
mov
dec
and
addl
jl
repnz
stc
lods
sub
es
jge
lcall
inc
hlt
jb
xchg
cmp
iret
adc
mov
nop
fdivs
div
fiadds
pop
push
lock
pop
pop
xor
push
mov
call
and
push
or
and
and
cs
pop
cmp
jo
sbb
add
cltd
pop
mov
in
inc
pop
sub
dec
adc
jb
imul
or
add
sbbb
andb
push
shlb
cmp
push
and
push
pop
outsb
enter
sbb
fsubs
push
loop
mov
mov
add
sub
test
cwtl
add
xor
or
dec
pop
dec
push
popf
in
lods
sub
fcmovb
jo
xchg
mov
mov
pop
idivl
mov
mov
xchg
and
jle
push
cs
sbb
jnp
scas
sbb
sub
and
push
mov
xor
xchg
mov
test
out
sahf
shrl
mov
aam
push
test
mov
cld
or
xchg
sbb
dec
int
outsl
mov
enter
jl
enter
sub
test
aad
dec
mov
xchg
mov
es
jb
jecxz
xchg
sub
int
aaa
pop
jmp
and
andl
cmpsb
out
sbb
lret
jne
les
rorl
pop
in
mov
nop
pop
test
mov
jns
out
stos
stos
dec
mov
mov
xor
lock
or
inc
jno
add
loop
lods
aad
mov
js
xchg
adc
mov
scas
cwtl
pop
jmp
ja
fcoms
or
xchg
addr16
jb
pop
push
jg
cmpsl
les
cmp
popf
cld
jecxz
cmp
mov
mov
jg
and
push
push
in
call
lcall
sbb
pushf
sbb
adcl
pop
fbld
out
mov
push
mov
cs
inc
xor
lret
shlb
fwait
jge
fs
cmp
mov
sub
mov
or
ljmp
adc
jno
ja
outsb
rol
and
or
push
popf
movsb
mov
mov
aas
lock
test
and
lea
out
mov
cld
mov
scas
or
lods
out
inc
xor
inc
call
sub
test
jno
sbb
xor
clc
mov
negb
xchg
pushf
mov
jbe
out
xchg
xor
movsb
aaa
sub
mov
lods
xchg
lcall
out
gs
call
sub
filds
xlat
pop
and
pushl
adc
sti
dec
mov
xchg
cmp
xor
adc
pop
test
dec
add
test
inc
mov
and
mov
idivb
jge
hlt
mov
cmpsb
pop
cli
push
movsl
mov
push
fiaddl
inc
sub
pop
xor
dec
or
push
in
push
sahf
fcmovne
fs
and
out
cwtl
mov
xchg
lods
cmpsb
pop
mov
xor
mov
adcb
lcall
cmp
mov
xor
cmp
aaa
sbb
das
mov
mov
fstps
enter
std
push
fwait
dec
repz
lret
fiadds
icebp
aad
jb
int3
das
xchg
addr16
cmp
and
repnz
cmp
push
push
mov
pop
negl
xor
popf
pop
mov
ds
lea
es
lret
cmp
jp
xor
lods
mov
pop
das
pop
popa
xchg
mov
sbb
shlb
int
out
lock
mov
imul
pusha
mov
jp
inc
das
push
imul
push
xor
push
dec
sbb
shlb
or
push
das
ss
jl
lret
addl
jl
fisubrl
and
aad
movsb
xchg
jno
aam
add
mov
push
adc
sub
push
in
sbb
in
lods
jle
xlat
mov
pop
inc
sbb
sarb
and
push
xchg
mov
popa
and
xchg
ret
lret
mov
mov
mov
or
jbe
adc
lret
imull
sub
dec
in
lods
ljmp
xchg
subl
idivl
and
mov
push
int
cmpsl
xor
in
test
ficompl
daa
mov
mov
dec
and
pusha
or
out
sub
cs
mov
jg
orl
int
and
mov
xor
sbb
ret
cmp
jge
sbb
dec
xor
add
cmp
iret
sub
mov
mov
push
imul
adc
mov
or
xlat
hlt
add
xor
sub
js
loope
movsb
sti
cld
adc
add
add
pop
aam
add
leave
adc
inc
mov
pop
cmp
movsl
xchg
mov
push
call
push
sti
mov
outsb
outsl
mov
fistpl
dec
push
or
sub
ja
es
adc
pop
test
in
cwtl
and
and
xor
lahf
out
xchg
enter
cmp
mov
sub
in
sar
es
into
mov
out
push
adc
pop
enter
mov
es
mov
sahf
loope
sbb
loopne
sbb
imul
jnp
aam
movsb
jnp
lds
push
mov
dec
outsl
or
es
sbb
jae
push
push
sbb
dec
mov
shll
es
pop
sub
jo
cmpsl
stos
and
push
jne
out
pop
push
sahf
int
pop
cs
add
adc
sbb
decb
jne
dec
popf
scas
lock
fists
arpl
sub
lcall
nop
push
ss
or
int
xchg
push
pop
movsl
insb
push
push
mov
dec
stos
icebp
lret
jne
aas
cmpsl
aad
cmp
rol
xchg
adc
lods
leave
xor
mov
push
mov
push
pop
and
cld
xchg
cltd
imul
and
es
dec
mov
imul
pop
xchg
pop
decl
xor
sub
icebp
std
adc
push
or
pop
mov
pop
add
xchg
cmp
dec
icebp
xor
xchg
dec
jne
insb
mov
ds
js
test
and
and
jnp
mov
fldl
xor
call
push
ret
setg
push
jae
and
xchg
ret
in
inc
cmp
cli
pop
mov
ret
cmpsb
jae
mov
jae
pushf
int3
int3
push
fdivs
mov
pop
imul
add
or
lock
ret
xor
outsl
and
mov
cmc
cmp
jp
sbb
divl
push
call
scas
push
loop
fidivs
daa
cmp
xor
cs
fsts
pop
in
cs
rcll
test
es
xchg
add
add
rorl
xor
or
test
mov
std
rcl
cs
sbb
in
mov
fwait
mov
push
testb
lds
insb
xchg
or
cwtl
add
xchg
xor
rorb
cwtl
xlat
dec
and
cmp
jb
mov
sbb
inc
adc
outsb
test
xor
jle
xchg
push
inc
ds
ret
aad
add
push
pop
and
out
ljmp
adc
sub
out
xor
mov
sbb
lret
cltd
mov
out
ror
bound
mov
nop
cmpsl
cmp
xor
mov
dec
out
push
pop
test
scas
data16
xor
aad
std
xchg
or
jecxz
std
inc
xor
jecxz
int
ds
cwtl
cmc
cld
dec
scas
test
jnp
cmc
cmpsb
push
push
arpl
fdiv
xlat
fisubs
dec
dec
test
pop
dec
fisttpll
mov
dec
xchg
popf
lcall
pop
xorl
push
enter
subb
ret
adc
pop
xchg
cmp
or
sub
sbb
enter
cmpsb
movsl
insb
push
int
pop
jl
push
inc
pop
mov
cld
ss
cmp
ja
push
xlat
xor
adc
push
testl
xchg
cmp
mov
xchg
mov
lret
scas
xchg
sbb
lcall
sbb
clc
jecxz
xchg
iret
ja
shr
repz
call
sbb
sbb
data16
sbb
sarb
push
push
pop
adcl
xchg
out
lods
cmp
xchg
ret
repz
inc
nop
jle
data16
jmp
push
jge
idivb
lock
xchg
rolb
aad
out
jns
sub
popa
in
adc
push
faddl
out
mov
sbb
jne
stos
jb
jecxz
pop
xchg
icebp
and
lret
mov
cmc
fxam
sbb
pop
sti
jl
jo
repnz
mov
int3
mov
xchg
mov
sub
cs
js
sbb
inc
addl
xor
out
loope
mov
lea
push
in
xor
or
mov
icebp
cmp
jmp
pop
mov
sub
faddl
push
cmc
stos
sub
jbe
adc
push
dec
shlb
inc
cmp
xor
push
out
aaa
inc
shll
hlt
movsl
stos
sub
or
jns
fidivs
out
and
setp
and
xor
leave
pusha
or
daa
push
popa
push
mov
cmp
adc
sbb
sub
in
mov
fisubrl
in
dec
jmp
or
mov
cmp
into
push
push
sahf
jge
cmpsb
pop
dec
mov
pop
pop
cmc
out
jne
imulb
pop
jp
ss
mov
and
pusha
pop
pop
js
lcall
aas
sbb
mov
jno
stc
cltd
popa
xchg
jle
in
xchg
xlat
inc
pop
add
fsts
or
out
mov
shr
daa
mov
dec
xchg
aad
jg
leave
jno
sbb
hlt
jmp
in
ret
xchg
xchg
ljmp
je
jg
and
stc
sub
dec
arpl
std
rcrb
movsb
and
cmpl
clc
push
repz
adc
mov
fs
dec
das
in
inc
insb
mov
and
fstl
movsb
leave
cmp
data16
mov
cli
xchg
xchg
es
insl
or
hlt
inc
ds
mov
in
xor
outsl
pmulhuw
and
jge
shll
push
cli
and
inc
xchg
xchg
xor
fidivrs
or
dec
gs
and
adc
and
lcall
test
mov
cmp
xor
loop
jmp
lret
mov
xchg
sti
mov
stos
sarb
fmulp
arpl
jns
cmpsl
fwait
cmp
xor
inc
aam
loopne
flds
push
push
inc
push
daa
pop
lods
pusha
std
and
icebp
stos
mov
dec
lock
lods
movsl
adc
cmp
lret
dec
fbld
lock
sub
cmp
cld
lret
leave
jne
fdiv
xor
push
popf
inc
call
fldl
cmp
shll
js
lock
adc
movsb
test
ss
adcl
pop
fnstcw
cmp
add
and
adc
sbb
xor
xorb
into
push
mov
xchg
sbb
loop
xor
iret
and
dec
jno
mov
xor
pop
arpl
notl
out
jle
jbe
adc
pop
rorb
loope
dec
jp
sbb
xchg
xor
rep
shr
or
jecxz
test
push
ljmp
mov
jnp
inc
add
dec
sub
mov
aaa
into
jg
dec
ja
and
movsl
pop
out
add
push
lds
rcll
sarl
adc
mov
xchg
out
jb
push
mov
mov
js
jmp
jae
add
mov
scas
hlt
sbb
rcrl
out
xchg
push
shrb
out
imul
sbb
pop
test
scas
jns
mov
scas
nop
mov
clc
sbb
dec
dec
lret
insb
push
jle
aas
fisubl
repnz
ljmp
lret
shl
dec
out
loop
stos
mov
jb
popf
lahf
pop
dec
xchg
or
test
pop
pop
mov
push
and
es
mov
xchg
dec
dec
dec
sbb
pop
mov
mov
js
mov
repnz
shll
jge
imul
pop
sub
das
test
push
push
cltd
fnstsw
push
xchg
push
repnz
push
dec
rcll
or
sub
icebp
sub
int3
push
cmp
mov
es
pop
addr16
sbb
je
inc
pop
dec
inc
pop
xchg
pusha
cmp
in
cmp
insb
mov
pop
out
adc
cmpsl
dec
daa
movsl
out
xorl
loopne
and
fwait
lret
mov
nop
mov
les
adc
rolb
xchg
sarb
aas
pop
cmp
daa
testl
pusha
incl
xchg
and
ja
arpl
jne,pt
lret
test
mov
adcl
jmp
imul
out
inc
or
cmpl
or
cld
call
subb
push
mov
dec
add
jbe
pushf
das
in
stos
std
in
into
cmp
sub
add
dec
incb
iret
dec
addr16
xchg
int
pand
sub
dec
jnp
xchg
adc
lods
pushfw
test
aas
sub
or
cmc
call
or
leave
fldt
cmpsb
mov
and
dec
or
or
loope
adc
xchg
add
cmpsb
inc
push
pop
aaa
sbb
mov
add
pop
pop
cmp
mov
mov
mov
xchg
jb
sbb
subl
jo
mov
jg
cmpsb
xor
xor
mov
and
mov
adc
xor
push
adc
push
xchg
pop
stos
mov
jecxz
fsubr
or
mov
xchg
outsb
xlat
cmp
popa
xchg
lods
pushf
and
push
test
jno
mov
dec
inc
sbb
out
in
adc
stos
test
inc
pop
pop
xlat
adc
dec
shll
push
inc
pop
sbb
mov
enter
rolb
mov
push
icebp
stos
adc
xchg
ficoml
sbb
stos
loopew
jecxz
out
adc
nop
es
xor
pop
adc
cli
fwait
mov
lahf
add
in
inc
mov
xchg
inc
mov
jl
sbbl
inc
repnz
push
mov
sti
xchg
xchg
adc
shlb
adc
pop
ljmp
xchg
pop
jns
mov
roll
sub
cwtl
cli
dec
push
hlt
stc
and
insb
addl
notl
iret
pop
cmc
jmp
testl
leave
sbb
xchg
scas
add
xchg
mov
stos
pop
adc
add
or
xor
repz
lret
mov
dec
dec
lret
out
aaa
outsl
test
inc
mov
test
jbe
sub
arpl
ret
sahf
out
inc
xchg
or
mov
imul
aad
in
adc
pusha
popa
sbb
ds
push
sbb
bound
insl
stos
adc
dec
cld
lret
dec
dec
repnz
adc
fdivl
aam
cmpsb
test
push
xlat
and
mov
xchg
iret
dec
cli
or
and
shr
mov
sbb
iret
pusha
pusha
mov
push
xchg
mov
mov
cmp
sbb
pop
push
aad
or
adc
jge
push
out
xchg
lahf
push
lds
movsb
outsl
push
je
call
rorb
das
cmpsl
mov
or
cmc
shll
add
xchg
mov
fstl
pop
hlt
mov
mov
test
xchg
adc
adc
cmp
and
cmpsl
xchg
test
add
scas
add
cmc
sbb
or
popf
xchg
xor
in
and
sbb
pop
push
add
xchg
mov
scas
ror
xchg
sub
mov
adc
loope
mov
popa
scas
xorl
pop
adcb
mov
mov
dec
notl
test
cs
or
ja
pop
cwtl
cmpsl
aas
jno
das
loope
outsb
inc
xchg
add
push
sahf
xlat
cmp
div
xchg
loopne
cmp
lods
loop
pop
out
out
xor
push
mov
loopne
xchg
and
and
jl
pop
fldenv
outsb
add
pop
scas
pop
loope
add
mov
xchg
jl
mov
xlat
sub
adc
cmp
rcll
pop
fadd
fs
dec
and
in
push
leave
xor
inc
adc
mov
in
dec
sub
mov
inc
and
sbb
or
rclb
mov
rolb
nop
in
das
aas
adc
sahf
xchg
insb
or
sbb
pop
in
sub
fwait
push
adc
jbe
sub
daa
mov
mov
push
mov
dec
ret
out
or
in
in
xor
setl
inc
fisubrl
mov
stc
loopne
int3
fistps
jg
push
cmp
clc
cmp
inc
mov
push
jecxz
mov
pop
sar
out
daa
pop
xchg
lods
adc
pop
xor
xchg
in
jg
rcl
inc
pushf
sbb
aaa
leave
fs
sub
outsl
and
dec
jns
mov
sub
jp
imul
xchg
arpl
out
ss
jno
and
stos
movsb
nop
mov
divb
adc
call
stos
loop
sbb
ret
pop
mulb
sub
mov
push
leave
adc
pop
fs
scas
fisttps
stos
jp
imul
xor
mov
das
lcall
fcoml
xlat
out
inc
aad
jns
inc
les
xchg
mov
mov
stc
notl
adc
shrl
leave
mov
pop
popa
mov
leave
xor
test
lret
mov
and
pop
or
mov
jmp
imul
xchg
addr16
mov
inc
popa
mov
insl
rol
int3
inc
outsb
ret
sub
aas
aad
in
pop
dec
push
ret
jo
or
lock
jg
divb
xlat
pop
es
sti
dec
mov
test
pop
sbb
add
mov
mov
fwait
adc
push
xor
inc
sbbl
dec
pushf
mov
lret
pushf
shrl
jge
pop
mov
pop
mov
mov
ja
icebp
or
std
lea
mov
jns
dec
adc
or
jge
xchg
push
push
jecxz
iret
cli
out
data16
mov
psllw
in
data16
and
mov
movsl
xor
jbe
mov
movsl
push
pop
movsl
jb
es
push
lds
cltd
outsl
cltd
mov
push
xchg
mov
shl
jecxz
pop
sahf
jae
shr
push
ljmp
shlb
add
test
ficomps
inc
movsb
test
bndstx
mov
mov
rol
popa
int3
pushf
das
arpl
jg
out
loop
pop
popf
aas
mov
xor
iret
add
dec
fcoms
sub
cwtl
mov
adc
in
jnp
sub
add
lds
or
aam
sbb
mov
sbb
push
stc
xchg
insl
mov
insl
orb
jno
sub
pop
sbb
js
push
xor
mov
ret
ret
aaa
and
sbb
or
inc
and
fs
xchg
dec
rorl
mov
ret
cmp
push
add
add
out
jmp
test
cli
fsin
push
jno
mov
add
shrb
movsl
cmp
imul
jno
or
out
lret
fwait
call
push
fbld
jl
nop
mov
cmp
fnstcw
lret
push
mov
push
dec
insl
cs
ror
cmp
jl
jecxz
mov
rcll
shrb
js
jnp
fcomi
adc
shll
leave
gs
out
mov
sahf
pop
fwait
push
adc
popa
movsl
jp
cli
arpl
cmpb
fdivrs
roll
cmp
repnz
push
bound
repnz
fisubrl
cmpsb
mov
or
xchg
dec
iret
sbbb
push
enter
dec
pop
mov
std
jb
addl
inc
jae
imul
pop
rorl
xchg
mov
xor
jecxz
aaa
or
icebp
push
dec
push
jp
lods
dec
sbb
inc
dec
inc
push
add
aad
push
pop
mov
push
std
inc
jmp
gs
add
jmp
adc
in
jb
in
arpl
inc
test
vmwrite
mov
dec
mov
mov
push
leave
cltd
adc
fst
lods
inc
scas
mov
andl
neg
aaa
enter
lea
mov
data16
cmp
adc
cmp
or
repz
call
pop
xchg
imul
sahf
sub
fsubl
cmp
fcmovnbe
ret
pop
or
test
xchg
daa
mov
jmp
pop
cltd
mov
test
aam
in
xchg
add
pushf
mov
sahf
jnp
adc
ror
sbb
addr16
push
push
pop
and
add
jl
mov
lods
xchg
sub
push
scas
ret
pop
pop
ret
cmp
dec
sbb
imul
xor
test
andl
sar
and
stos
dec
add
mov
cmc
loope
lods
xor
xlat
lods
lock
lret
loop
shll
cld
js
nop
mov
jmp
jo
jo
into
ret
jb
cmp
xor
insl
or
mov
jns
sbbl
outsl
and
mov
dec
fidivrl
je
in
scas
push
or
mov
mov
rorb
outsl
test
aas
push
mov
xor
lock
int
pop
pop
and
inc
mov
jg
jecxz
mov
adc
cld
out
mov
add
nop
scas
imul
mov
les
cmp
cmc
push
or
cmp
cmc
push
repnz
lock
cmpb
adc
lock
push
rorl
jl
test
push
xlat
cmp
jno
jp
jecxz
jb
add
iret
dec
pushf
push
dec
push
mov
xor
xchg
sub
push
push
fcoml
test
adc
test
je
pop
pushf
sbb
aas
cld
repz
mov
in
add
jae
aaa
and
stos
dec
mov
lret
dec
cmc
insl
setl
push
leave
add
popa
in
testl
nopl
and
pop
insb
bound
clc
movb
pusha
loopne
pop
mov
cmpsl
repz
aaa
test
int3
mov
dec
jmp
test
test
pop
pop
mov
out
bound
fdiv
enter
add
jbe
mov
cmp
imul
mov
jl
fs
xchg
or
fldt
cmpsb
aad
pusha
test
adc
in
sub
mov
les
faddp
mov
push
hlt
add
inc
ficoms
xor
adc
fstps
mov
repnz
jle
xor
or
or
inc
fwait
dec
sahf
or
call
and
mov
mov
jl
sarb
inc
adc
cmc
fxch
out
fwait
dec
stos
repnz
mov
mov
adc
xor
mov
add
out
es
cwtl
cwtl
int
cmp
mov
test
jbe
mov
push
mov
dec
pusha
push
movsl
fdivrp
adc
sub
cmp
adc
cmpsb
cmpsb
in
xchg
fisttps
fadds
push
push
xor
or
sahf
mov
xchg
mov
scas
mov
inc
adc
or
and
or
jmp
push
movsl
mov
imul
cmpsl
lods
adc
adc
sub
xor
jae
pop
outsb
test
mov
cli
jmp
adc
push
cmp
and
mov
pop
mov
mov
lahf
sti
inc
int
sbb
xlat
or
pop
js
lea
test
addb
leave
lret
aad
imul
shll
ja
mov
xchg
xor
xor
and
stc
and
or
outsb
mov
mov
sbb
lret
xchg
subl
cli
gs
add
mov
adc
xchg
ss
jno
or
fwait
push
test
sbb
cli
cwtl
movsl
mov
decl
out
xchg
ja
mov
adc
mov
add
fimuls
in
push
pop
inc
mov
repnz
das
push
loopne
imul
call
jo
mov
dec
ss
into
dec
test
out
pop
aad
prefetch
or
insl
mov
test
xor
cmp
pushf
cli
adc
inc
adc
pop
xchg
jno
xor
and
xchg
cmpsb
cwtl
lret
sar
shrb
sbb
mov
push
test
movsl
dec
dec
out
inc
mov
pop
cmp
inc
iret
adc
repnz
sbb
aam
cwtl
push
popf
ja
ljmp
pop
pop
cmpsl
rolb
aas
mov
ficomps
insb
pop
imul
cmp
popa
jle
mov
aas
mov
popa
pop
mov
cs
leave
divb
in
and
jmp
fptan
lods
sbb
mov
nop
mov
movsl
cli
dec
dec
aam
cld
xor
test
imul
mov
mov
stos
add
cmp
addl
out
rcr
sbb
aaa
lret
dec
data16
sub
fsub
xor
popf
inc
sarb
shll
pop
sub
fs
mov
mov
cmpl
or
cmpsl
pop
out
mov
jbe
mov
push
xor
addr16
mov
sbb
add
mull
in
pushf
xchg
ret
push
and
jge
jnp
or
repz
insl
sub
cltd
sub
mov
inc
ret
test
xor
ja
movsl
int3
hlt
push
cmpsb
cmpsb
cmp
mov
cwtl
push
cmp
cmp
cmpsb
inc
xor
pop
shr
imul
or
lds
leave
test
std
leave
adc
mov
xor
leave
jo
std
cmp
pop
scas
ret
push
pop
fxam
or
test
scas
push
jl
push
inc
sub
outsb
inc
mov
or
imul
rcrb
out
dec
and
mov
mov
sbb
faddl
mov
scas
pop
mov
jge
cwtl
xor
push
out
lds
and
push
pushf
dec
imul
cli
add
mov
lret
insb
negl
and
insb
arpl
stc
and
test
jp
dec
pushf
adc
dec
sbb
cmp
cmpl
mov
lret
rorl
mov
push
lods
jle
xchg
aad
fmull
dec
scas
push
fstpl
sbb
pop
xor
scas
jp
mov
pusha
sub
inc
fmull
push
out
xchg
inc
into
cld
xchg
dec
test
pop
bound
flds
ret
add
lock
outsb
lods
mov
xchg
in
mov
outsb
sub
pushf
cmpsb
daa
out
shrb
mov
out
push
inc
inc
movntq
repz
xor
dec
fstps
test
incb
mov
call
inc
mov
xor
xchg
pop
gs
out
bound
jmp
insl
mov
hlt
lahf
mov
cmp
lret
fst
into
ror
mov
ret
mov
inc
and
clc
sbb
cli
inc
jle
jne
jo
inc
cltd
and
adc
jno
inc
rol
insb
dec
sbb
fdivrp
enter
into
adc
divb
fisubs
into
insl
icebp
cmp
lahf
pop
jg
or
dec
adc
iret
ret
fwait
add
add
movsb
xlat
sahf
and
jl
test
lods
jl
daa
pop
sbb
xor
fnstcw
mov
fistpl
jno
into
repnz
or
lcall
jl
fcmovbe
shl
stos
aaa
aas
repz
add
mov
lahf
cmp
mov
dec
push
cmp
sub
jg
repnz
aas
adc
aad
fstpl
xor
xchg
aad
fsub
loopne
push
inc
ja
rcrl
mov
jg
and
fldt
daa
sbb
cmp
inc
mov
jns
sbb
jns
cltd
push
mov
ret
xchg
fidivrs
loope
lret
push
inc
cmp
fldenv
mov
pop
cmpb
ret
push
lret
push
and
adc
shlb
xchg
loopne
dec
xchg
sub
insl
shl
pop
in
mov
popa
js
adc
push
xchg
and
mov
inc
dec
addl
enter
movsl
or
inc
out
cmc
fsubs
clc
sbb
mov
mov
jne
insl
test
mov
sub
pop
lea
mov
sub
lods
xlat
pusha
shlb
push
call
push
pop
or
leave
leave
scas
and
cld
insb
jp
and
add
loope
scas
fistpl
mov
and
iret
mov
lods
push
pop
stc
xor
mov
les
or
das
sbb
movsb
or
jp
test
sbb
dec
test
push
lret
lods
ljmp
or
jne
ret
loop
sbb
xchg
dec
mov
std
xor
adc
jae
mov
ljmp
add
in
and
inc
ficompl
dec
adc
scas
pop
rcrl
push
and
mov
cmc
out
sub
in
dec
movsl
stos
jle
lret
in
cmp
pushl
push
mov
idivb
xor
cmp
je
cltd
add
ficomps
fnstsw
loop
adc
dec
push
insb
clc
shll
mov
xchg
lcallw
int
mov
inc
adc
inc
cmp
fidivl
rclb
in
inc
cltd
pop
push
xchg
pop
stc
insl
lds
cmp
fsubrl
in
div
pop
imul
loope
xchg
notb
fdivs
inc
xchg
push
movsb
xor
fwait
xchg
pusha
mov
scas
sbb
fists
cs
shrb
mov
push
add
push
cltd
inc
jecxz
ja
call
jg
pop
xor
icebp
cli
mov
enter
std
shrb
or
cmp
pop
loop
pop
pop
mov
insb
push
adc
popf
ret
sbb
adc
add
scas
push
lcall
ss
stos
repnz
es
lea
aad
xor
cmp
pushf
inc
fcom
cmc
or
and
push
pop
jns
mov
mov
sbb
fxtract
adc
scas
jge
pop
mov
push
dec
add
mov
sub
xor
dec
ucomiss
mov
mov
rcll
add
and
xlat
fisubl
pusha
pop
sti
testl
jp
mov
sub
popa
es
js
mov
testb
mov
test
mov
test
lock
call
jo
pop
jno
xor
les
ret
rol
inc
mov
test
je
unpcklps
lcall
mov
das
scas
sub
out
pop
dec
fistps
sub
movsl
pusha
jge
jbe
jg
xchg
sub
jne
and
cmp
mov
or
mov
popf
roll
and
rcrb
jns
dec
mov
inc
sub
cmp
call
adc
push
mov
lods
outsb
push
mov
add
imul
sub
push
insl
in
jecxz
mov
mov
popf
mov
mov
leave
loope
xlat
and
jle
nop
insl
mov
jns
or
inc
daa
adc
test
les
or
xlat
adc
mov
xchg
jne
push
or
shrl
adc
lods
sbb
fucomi
in
pop
stos
popa
inc
cmc
adc
sahf
cmp
xorb
add
and
insb
test
jbe
adc
clc
push
data16
test
cwtl
sub
cmp
pop
jb
pop
shrb
ffree
mov
in
add
xchg
lret
rorb
aas
push
gs
scas
dec
lock
fwait
int
adc
pop
mov
divb
mov
loopne
push
fwait
lods
jns
mov
add
iret
push
xor
cmp
icebp
sbb
push
push
jnp
inc
js
divl
movsl
pop
and
ret
pop
daa
dec
popa
jo
int
sub
fcoml
pop
xchg
pop
shll
lea
add
cmp
or
mov
xchg
cmp
movsl
pop
clc
ret
outsb
int
pop
mov
divb
and
outsb
cmp
mov
cmpb
xchg
sbb
das
call
dec
pop
mov
mov
xchg
ljmp
sbb
lock
fiadds
dec
jo
xchg
pop
xchg
jg
mov
fadds
test
mov
std
inc
or
lods
pop
in
jg
shrb
lcall
int
fdecstp
clc
and
xor
jg
adc
arpl
mov
pop
jbe
mov
inc
into
imul
cld
inc
jge
mov
lods
out
inc
addl
push
sub
test
dec
cmpsb
outsl
enter
inc
push
cmpsl
int3
es
out
leave
iret
insl
jo
mov
into
fldl
push
in
std
mov
mov
mov
pop
add
mov
adc
cmpsl
sub
loop
outsl
daa
in
adc
xlat
lock
jo
jbe
jle
sbb
testb
adc
aaa
xor
lea
xchg
in
and
cmpsb
inc
xchg
or
jb
loop
loopne
dec
inc
push
test
mov
pop
fsubl
push
rclb
jle
mov
xchg
jg
xor
or
pop
dec
xchg
xor
ja
jo
cmp
jp
into
mov
and
mov
adc
bound
xor
popf
inc
sub
add
sub
pusha
in
jmp
arpl
pop
cmp
or
mov
lods
jns
mov
clc
sub
je
hlt
jg
mov
fsub
or
cs
add
insl
movaps
loope
jecxz
pop
repz
xchg
test
das
inc
daa
fdivrs
push
or
xor
flds
icebp
or
mov
lds
jecxz
inc
arpl
pop
rcll
cmpsl
pop
and
ss
incb
sarl
sbbb
inc
sti
dec
hlt
stc
mov
and
push
idivb
iret
popf
in
imulb
xchg
mov
mov
inc
outsb
imul
mov
add
es
xchg
mov
and
xorl
neg
aaa
jbe
outsb
jno
adc
or
in
nop
fiadds
mov
xor
cltd
mov
sbb
jne
fsubrl
ljmp
sti
jecxz
call
mov
aaa
mov
xchg
stos
clc
push
icebp
mov
movsl
adc
cltd
cs
push
ja
mov
shl
lds
xchg
sub
add
lods
and
adc
sbb
or
mov
jmp
adc
adc
jno
jns
popf
in
push
push
jno
mov
les
or
aad
enter
cmp
mov
test
andb
push
add
jo
xchg
pop
inc
mov
push
jmp
cmp
mov
mov
mov
daa
call
repnz
mov
rcrb
add
jecxz
adc
das
sti
in
pop
and
xor
mov
ljmp
cmp
pusha
mov
lret
int
jmp
aaa
mov
jl
dec
mov
jge
and
jle
cltd
rep
add
and
jg
stos
nop
xchg
lea
lret
mov
shlb
mov
jmp
data16
and
das
movsl
mov
push
lret
mov
aaa
testb
and
dec
pop
sti
subb
inc
arpl
sbb
fstl
dec
inc
push
add
push
ja
mov
sbb
pop
sbb
dec
aas
dec
push
add
jle
push
sbb
jg
mov
movsb
mov
mov
dec
lods
test
loope
loopne
push
sbb
dec
fistl
or
fcmove
into
ret
or
adc
je
mov
inc
dec
cmp
stc
add
ja
mov
adc
outsb
test
add
and
sbb
repz
sbb
cmp
dec
scas
pop
dec
and
or
out
xor
xchg
sbb
test
into
gs
shll
hlt
movsl
mov
mov
loopne
xorl
repz
and
sub
into
jae
arpl
lret
int3
cltd
xchg
mov
dec
adc
or
add
pusha
adc
imul
dec
loope
imul
dec
addr16
xchg
test
add
inc
cmp
test
and
imul
mov
cli
js,pn
dec
xchg
psubsb
adc
jmp
stos
movsl
push
xchg
arpl
push
mov
aad
add
cmp
nop
jo
aam
jge
pop
fiadds
mov
lret
scas
sbbb
sahf
xchg
jg
xlat
es
pop
lea
or
test
cmp
push
push
push
inc
std
inc
xor
ret
push
cmp
or
adc
nop
jl
test
scas
fiaddl
inc
or
mov
jmp
or
mov
aaa
inc
and
sub
mov
mov
mov
es
sub
xchg
shl
adc
lcall
add
out
dec
sub
inc
or
out
jnp
mov
data16
adc
into
in
icebp
or
add
leave
jno
loop
outsl
and
sbb
adc
dec
dec
clc
xchg
push
nop
les
sarb
push
mov
scas
dec
pop
pop
pop
addr16
xor
or
xor
std
mov
shlb
cld
sarl
and
mov
adc
stc
repz
and
jmp
sbbl
jmp
lcall
imul
and
sbb
xor
pop
inc
push
fistl
jno
scas
adc
test
das
inc
fs
inc
outsl
adc
in
sbb
and
jne
add
pushf
sub
jo
cmp
test
mov
xor
adc
pop
stos
ror
push
mov
push
xchg
push
sub
js
or
inc
jne
cmpsw
push
mov
lds
sbb
push
xchg
pop
dec
repnz
incl
mov
sbb
leave
push
inc
enter
gs
pop
scas
jge
mov
adc
jnp
loopne
scas
xor
push
cmp
xchg
add
mov
int
icebp
insb
jo
push
mov
adc
inc
sar
xchg
std
jne
out
incl
fisttpl
insl
push
or
faddl
dec
sub
das
push
jae
add
shll
jae
sub
pop
sarl
pop
mov
nop
out
das
repz
and
sti
jno
add
and
push
stc
fldt
imul
imull
stos
lock
iret
repz
out
jl
lahf
dec
mov
add
ja
add
notl
sub
dec
repnz
adc
ds
call
push
dec
in
mov
and
jno
xchg
lret
out
loope
lds
in
sub
mov
aad
push
or
fadds
aad
lea
xor
and
dec
rclb
jle
ret
pop
jle
lret
sub
out
mov
add
xor
inc
xchg
call
dec
xchg
pop
out
les
jb
arpl
inc
idiv
cmp
mov
popa
enter
pop
mov
mov
dec
pop
les
out
mov
sbb
inc
lcall
push
call
sub
pop
xor
mov
add
and
imul
sub
bound
out
enter
stos
test
mov
jge
and
cmpsl
sahf
cmp
adc
stos
in
in
sub
inc
out
cltd
cwtl
icebp
mov
ficoms
adc
sub
inc
outsl
dec
jnp
sbb
cmp
pop
mov
roll
mov
cmp
fdiv
js
addl
gs
pop
fldl
adc
mov
stos
or
xor
adc
mov
les
sub
test
jge
push
pusha
int3
lea
bound
mov
dec
rorb
arpl
movsl
sub
sub
insl
cmp
insl
in
push
push
sub
dec
imul
or
add
xor
out
mov
mov
fadds
sub
xlat
jo
inc
inc
mov
jmp
fldl
pop
cmpsl
cmc
sbb
adc
jae
mov
add
mov
cwtl
pop
mov
lret
mov
sbb
movsb
icebp
jl
sub
sahf
inc
ficoms
push
xorb
loopne
or
shrl
addr16
and
pop
adc
jne
xor
jbe
pusha
mov
push
das
lcall
cli
hlt
xor
testl
mov
data16
inc
cmp
cltd
sub
sbb
inc
cltd
jmp
sahf
xchg
loopne
add
je
aam
notb
mov
pop
xchg
lahf
test
fs
fcmovne
xchg
mov
push
pop
mov
cmp
negl
add
sbb
fucomip
bnd
and
lret
ja
gs
mov
mov
mov
xor
out
daa
int3
xchg
adc
jnp
pop
pop
or
mov
and
outsl
jg
ret
sub
stos
add
or
mov
and
add
add
pop
fildll
inc
cs
rcl
dec
and
orl
pop
lret
jmp
cmpsb
mov
sahf
adcb
je
dec
jp
dec
in
xor
ret
ret
push
sub
or
pusha
aam
mov
sbb
movsl
je
jno
mov
sbb
mov
push
or
xchg
and
loopne
mov
xchg
and
enter
jle
cmp
rorb
push
shlb
pop
or
xchg
sbb
imul
inc
call
sbb
mov
popa
stos
jo
cli
into
rorl
fimuls
mov
mov
or
leave
or
int3
push
inc
rcrl
fistps
lds
cmp
fcmovnb
add
das
ret
mov
ja
jecxz
xchg
mov
sub
fs
leave
movsl
fldt
imul
inc
mov
mov
jl
icebp
push
xor
or
mov
stc
faddp
mov
jg
aas
out
push
inc
push
push
daa
pusha
pop
xchg
out
out
fdivr
out
shll
mov
mov
cmpsb
jmp
cmp
inc
faddl
and
fldenv
scas
das
lea
push
aas
movsl
cmp
xor
xchg
mov
push
arpl
test
xor
jmp
push
xor
aas
jno
movsb
loope
popa
lods
fwait
pop
inc
adc
mov
or
pop
adc
mov
jae
cmpsl
js
mov
jbe
xchg
outsl
shlb
ds
scas
xor
xchg
pop
fcompl
xchg
cmp
pushf
or
dec
lods
xchg
ret
mov
add
cmpsb
sbb
pop
sbb
aas
fiadds
adc
aaa
add
xor
loopne
jle
leave
jno
jmp
pop
and
mov
mov
jae
mov
xlat
or
daa
test
pusha
dec
in
lret
jle
fwait
pop
jnp
sub
pop
shrb
jne
jl
and
inc
filds
add
pusha
pop
inc
movsl
jl
mov
pop
cmp
je
cli
pop
mov
leave
popa
iret
loop
out
sbb
dec
lock
lods
jmp
dec
add
cmpsb
ret
insl
sbb
xor
cwtl
call
sbb
cmp
cmp
sub
adc
xchg
shl
dec
lcall
adc
pop
inc
stos
jns
lret
push
mov
xchg
fcoms
hlt
fs
fidivs
jae
xchg
and
sarb
scas
xor
mov
loopne
xchg
enter
int
fisubrl
out
sub
cmp
inc
cmpsb
dec
in
movsb
dec
leave
push
out
sbb
mov
in
lds
mov
shrl
adc
sahf
jae
lret
std
inc
aas
repz
xchg
xchg
mov
push
shr
rolb
push
mov
scas
inc
fbstp
insl
out
cmc
push
mov
test
add
jge
xor
dec
mov
xchg
aaa
sbb
stos
ja
jge
xor
loop
mov
sub
call
pop
jb
popl
mov
or
mov
ds
xor
in
and
scas
pop
inc
pop
cmc
lods
add
aam
ss
jno
test
jb
int3
jnp
test
add
fmuls
sbb
mov
jg
mov
xchg
xchg
inc
jns
dec
or
mov
add
bnd
aas
and
ja
mov
ret
aad
sub
xor
mov
pushf
in
mov
ret
jp
pushf
xchg
mov
jb
inc
mov
bound
mov
add
in
test
data16
jmp
lahf
mov
mov
and
fstpt
pop
ds
push
movsl
cmp
push
xchg
repnz
shlb
sub
and
sbb
xor
loope
or
cmp
cwtl
aas
cmp
and
dec
mov
outsl
lds
negb
ret
mov
or
lret
ffree
fwait
push
nop
insl
adcb
mov
add
mov
jg
inc
ds
enter
popa
jb
mov
imul
into
mov
xorb
js
mov
data16
and
adc
mov
sub
sbb
mov
or
xchg
jb
jp
call
cmp
icebp
movsl
es
jmp
add
pop
xor
mov
push
lret
mov
js
cmp
pop
xor
and
sub
jb
stc
jbe
add
enter
or
shl
sub
mov
pop
lcall
push
lods
xchg
inc
lock
adc
in
push
jo
add
cld
push
inc
or
into
mov
adc
cmc
sahf
call
inc
and
push
int
fisubrs
cmp
rcrb
sar
fs
scas
lds
pop
std
dec
xor
add
repz
data16
ss
jg
sbb
aam
dec
xchg
ds
cmpsl
inc
adc
iret
push
cmp
arpl
loop
sub
dec
test
sub
cmp
xabort
lds
pop
mov
cmp
lret
div
cmp
add
addr16
inc
hlt
lret
mov
jmp
xor
pop
jno,pn
fadds
pusha
icebp
mov
inc
mov
fcompl
emms
hlt
imul
popl
mov
movsl
inc
loope
xchg
and
lret
inc
jne
jae
cmpl
shlb
incb
jmp
popf
mov
mov
std
jp
fwait
dec
inc
adc
out
jno
ds
movsb
sbb
mulb
pushf
cli
push
fisubl
hlt
dec
push
in
jmp
aam
lahf
movb
int
js
loop
mov
push
mov
add
cmc
xchg
mov
inc
mov
aaa
test
mov
data16
fadds
fs
fwait
loope
into
sub
add
pushf
xor
xchg
inc
pop
rclb
test
and
push
lods
sub
xor
test
adc
je
fdivl
arpl
rorl
dec
pop
push
mov
mov
mov
xor
jp
call
and
bound
sub
scas
mov
daa
sbb
push
outsb
ja
icebp
mov
mov
into
push
call
insl
push
push
and
cmpsl
lahf
lds
mov
clc
push
dec
nop
mov
addl
jno
jbe
lret
mov
clc
mov
mov
pop
out
lcall
daa
rcll
addl
push
mov
insl
mov
movsl
sti
xchg
lods
xchg
bound
test
fwait
add
ret
arpl
aad
mov
jbe
jge
inc
divl
pop
pop
pop
mov
xchg
sub
js
hlt
inc
pop
fs
sub
inc
inc
sub
mov
repz
jnp
out
mov
loope
or
cs
lds
popa
sbbl
dec
mov
stc
insb
xchg
test
lock
hlt
push
dec
push
mov
or
mov
icebp
inc
lahf
inc
cmpl
mov
cmp
pop
jns
inc
cltd
pop
outsb
loope
pusha
lahf
adc
in
pop
ss
js
mov
inc
popl
jno
insl
ret
pop
xor
sbb
pop
sbb
fsts
sbb
inc
sub
mov
jnp
aam
out
push
mov
push
or
mov
pusha
shrl
sub
call
ja
mov
xor
int
xor
ret
inc
call
mov
popa
pop
inc
sub
cli
std
cmpsb
sub
sub
lods
xchg
sar
sbb
sarb
xor
shrl
jecxz
sub
pushf
scas
pop
jnp
push
pop
push
mov
sbb
imul
cli
jmp
dec
jge
cmp
push
sub
mov
lret
jmp
add
in
test
sub
pop
or
push
push
fwait
test
cmp
push
xchg
rolb
push
clc
inc
rclb
cmp
mov
int
sub
mov
ret
lahf
xchg
mov
inc
pop
call
stos
aad
dec
sub
or
lret
pop
ljmp
in
fisubs
aaa
jne
js
dec
sub
dec
add
dec
jecxz
int
xor
sub
test
cmp
int
mov
fstl
mov
iret
lret
sub
mov
pop
dec
mov
xchg
inc
pop
test
dec
ss
mov
pop
outsl
movsb
sbb
inc
aas
or
lret
js
pop
cs
int
pop
pop
sub
push
lea
inc
je
ja
mov
imul
hlt
imul
iret
sub
imul
or
stos
pop
xlat
and
pop
out
sar
out
shlb
pop
cmp
cmpsl
mov
inc
mov
dec
cmc
scas
mov
sbb
add
test
jnp
jb
and
cwtl
jnp
fdivrl
jae
lods
push
adc
daa
cwtl
cmpsb
sub
push
and
inc
scas
fsubl
xchg
adc
dec
out
dec
rcl
fwait
addl
clc
add
jne
jb
or
mov
mov
cmp
pusha
mov
rcrl
out
mov
ja
cmp
nop
sub
sbb
iret
jo
mov
cmpsb
js
xor
sbb
lret
or
pop
mov
stc
and
mov
push
repz
jne
ficoml
ljmp
jo
movsb
loopne
call
fmuls
cmpsb
xor
jle
loop
punpckhwd
dec
fidivl
rorb
rsm
imul
test
dec
test
or
arpl
mov
adc
inc
mov
inc
scas
cmp
in
push
push
pop
mov
scas
es
add
cmpsb
iret
ss
scas
mov
dec
dec
xchg
add
pop
clc
iret
out
jns
aam
mov
leave
ja
ljmp
xor
jg
sbb
outsb
xchg
dec
fs
scas
xor
scas
add
stos
mov
rorl
xchg
xlat
sbb
cmp
bts
push
xor
filds
push
inc
ret
cmp
iret
inc
scas
add
and
stc
pop
mov
pop
adc
mov
lcall
xor
cs
cmpsb
hlt
pop
dec
dec
adc
rorb
ja
xor
push
es
not
add
sarb
push
leave
les
mov
mov
lcall
sub
aad
subl
xchg
xlat
adc
and
call
push
gs
xor
push
add
mov
aas
bound
sbb
iret
jae
cmp
shll
inc
add
aam
enter
xor
or
push
shll
aas
jecxz
mov
sti
scas
pop
movsb
sahf
loopne
cmp
fcompl
xchg
cwtl
shl
mov
sub
fs
mov
enter
nop
pusha
pop
mov
dec
lds
jg
cmpsl
or
push
sbb
xor
xchg
push
cmp
pop
fsubr
dec
inc
push
mov
fdivrl
jp
cmp
inc
rclb
arpl
mov
in
push
stos
xor
addb
add
add
pop
mov
mov
xor
aam
jns
in
dec
outsb
cli
lds
fwait
sbb
test
loop
mov
jge
dec
jl
add
sub
push
aad
enter
adcb
test
jns
ret
ja
rolb
iret
pusha
inc
fsubrs
cltd
rcrl
mov
cld
xor
stc
cmp
ret
xor
sbb
mov
pusha
mov
sbb
xlat
les
xlat
sbb
daa
add
or
sbb
push
mov
xchg
popf
dec
dec
popf
inc
sub
inc
int3
inc
aam
mov
cli
adc
call
xchg
scas
mov
fstpl
mov
fisttpll
inc
xor
mov
mov
cmp
adc
xchg
movsl
xor
jnp
push
lahf
int
testb
jnp
push
ret
pop
adc
mov
lret
mov
ret
int
mov
jno
sbb
mov
in
test
mov
adc
std
out
out
cmp
cwtl
push
imul
ljmp
ret
xchg
movsl
loop
lds
add
stos
loope
test
jmp
mov
or
insl
jnp
bound
movsb
adc
test
pop
jno
fwait
and
sbb
add
or
xor
mov
mov
call
mov
leave
sahf
fisttps
or
and
fs
aaa
out
dec
pop
xor
cwtl
sti
sbb
jno
out
mov
mov
xchg
es
sbb
lret
xchg
xchg
sub
jnp
xchg
cmpsl
lods
test
out
std
rcll
pusha
cli
mov
int
jbe
push
jb
cmpsl
pop
mov
imul
inc
pop
std
dec
shlb
push
xor
cmp
jmp
jmp
cmp
add
mov
mov
bound
punpcklbw
aas
cmc
es
lcall
sbb
ja
mov
icebp
sbb
aaa
pop
out
pop
stos
dec
xor
add
ss
imul
lret
fdivl
adc
enter
mov
in
hlt
jecxz
fs
cmp
ss
bound
add
sbb
cmpsb
adc
aad
ja
cmp
iret
cs
xlat
jnp
fsubs
adc
and
xchg
aaa
fld
cmp
mov
pop
mov
xchg
lock
push
cwtl
popa
cmp
out
mov
sahf
fidivs
xchg
sub
xchg
incb
push
push
mov
push
repnz
loop
sub
push
jns
jne
and
daa
dec
or
jp
pop
insl
dec
fisubrl
xchg
xchg
daa
ss
sbb
inc
mov
pop
loop
push
shrl
mov
pop
and
pop
stc
push
sbbl
xchg
mov
inc
adc
dec
jp
push
adc
jae
xchg
cmp
dec
xchg
fmuls
inc
fbstp
jno
les
inc
add
push
fnstenv
test
mov
adc
sub
push
push
mov
movl
fs
mov
movsl
imul
lahf
jecxz
je
mov
inc
and
push
mov
aam
mov
xchg
sbb
inc
cmpsl
test
ret
cmp
push
aam
lret
and
ss
pop
pop
test
sub
pushf
loop
inc
outsl
jne
xchg
pop
fs
sti
std
test
add
mov
jo
in
in
fsts
test
cmp
push
daa
xor
icebp
xor
dec
leave
testl
jge
outsl
sbb
sbb
cmpsl
jnp
mov
inc
fstpt
ficoms
jl
loop
inc
insb
fwait
stos
xor
sub
push
jo
jo
adc
xchg
mov
xchg
dec
jge
dec
lock
enter
jae
cmp
mov
or
aad
push
inc
ljmp
sub
xor
sti
sub
inc
fimuls
pop
inc
fldcw
push
inc
mov
xchg
movsl
cwtl
fmulp
dec
sbb
inc
test
jp
cs
xor
repz
ja
mov
mov
mov
cmp
and
out
lods
sar
es
imul
ss
inc
inc
ret
cmove
push
shrb
jmp
sub
movsb
dec
js
call
sub
dec
test
jmp
arpl
pop
std
fdivrp
sub
or
sub
dec
jmp
dec
orl
fwait
mov
xchg
rolb
test
push
in
jb
adc
push
mov
jo
mov
and
bound
sahf
test
dec
outsl
int3
ja
push
dec
outsl
or
xchg
int3
inc
jecxz
call
cmp
mov
xchg
mov
fsubrl
jae
pusha
mov
push
and
jne
adcb
in
jno
push
inc
adc
pusha
lahf
imul
mov
pop
cmp
popf
fstp
test
pop
inc
push
jo
daa
scas
outsl
dec
mov
or
sub
lock
add
xchg
mov
cmp
push
in
sti
hlt
adc
mov
loope
add
dec
sub
xchg
cmc
cmp
jp
push
in
popf
rcrb
andl
mov
mov
stos
in
push
sub
jb
test
sbb
jmp
mov
clc
and
test
mov
jle
gs
dec
fistps
cmp
jg
push
pop
popf
mov
pop
adc
add
jg
cwtl
imul
pop
xlat
sub
sar
push
insb
dec
xchg
sbb
dec
mov
shrb
xchg
pop
loopne
add
jbe
in
xchg
jo
xor
aaa
call
fcomps
jbe
aaa
jns
fsubrs
loop
divl
mov
mov
mov
mov
arpl
fld
int3
in
or
dec
idivb
cmp
addl
fisubl
mov
mov
sbb
xchg
push
mov
sahf
js
lock
xchg
scas
test
xor
sahf
aam
inc
xor
inc
add
jno
add
stos
inc
ret
pop
pop
cmp
jne
inc
test
pop
add
out
outsb
xchg
test
aas
loop
cs
adc
pop
cli
xchg
adc
jae
outsb
adc
cmp
jmp
cmp
enter
xor
pop
jno
frstor
mov
lcall
cmp
in
inc
aad
mov
fiaddl
outsb
loop
add
int
loop
mov
cmp
push
sub
subps
pop
push
or
psraw
jbe
mov
or
cmp
jmp
cmp
mov
popa
lods
mov
stc
out
pop
div
pop
lahf
out
mov
mov
pushf
xchg
jb
push
cmp
or
insb
inc
cs
mov
xchg
test
cmpsl
insb
push
or
jl
cmp
repz
mov
inc
pushf
jo
fmuls
enter
out
dec
pushf
mov
insl
inc
je
mov
into
loop
pop
cs
mov
sti
lock
call
int3
push
cmp
test
add
clc
fwait
or
jg
push
mov
or
mov
fcmovu
rcll
fldenv
scas
mov
adc
sub
dec
daa
dec
inc
into
aaa
adc
and
arpl
test
test
xchg
inc
cli
sub
push
fisubs
call
rcr
mov
add
call
cmpsb
loop
adc
faddl
jg
jns
das
jp
out
dec
shlb
lock
mov
add
fmull
inc
cld
testl
shlb
sbb
cmpsb
jne
push
lahf
sub
adc
inc
jbe
xor
divb
lcall
loopne
and
pusha
adc
inc
clc
sbb
std
sub
outsb
ret
lea
xorl
dec
fsub
sbb
nop
add
xchg
mov
orb
cmp
and
and
in
lret
lahf
daa
add
sarl
shr
out
adc
push
jae
cwtl
inc
aaa
aad
movsb
jp
por
shl
mov
xor
lret
adc
lock
data16
pop
leave
repz
cmp
into
lcall
movsl
fcmovnbe
or
movsl
mull
dec
xchg
xchg
sti
iret
jecxz
jl
mov
pop
pusha
movsl
xor
add
scas
add
sahf
popa
movsb
movsl
enter
sbb
dec
push
bound
addr16
adc
mov
shll
and
xor
push
push
mov
lds
lret
ljmp
pop
cmpsb
bound
dec
int3
cmc
inc
iret
scas
out
mov
push
or
pop
add
cli
mov
mov
jno
lods
xchg
outsl
aam
out
fiaddl
ljmp
clc
aaa
cs
out
iret
dec
xchg
cmp
lods
test
xchg
pop
pushf
mov
mov
sbb
movsl
mov
add
fimull
pop
in
ds
mov
stos
shlb
shll
out
or
adc
cwtl
repz
iret
sub
jge
add
and
ficoml
xor
outsl
pop
mov
mov
fists
divl
insl
and
inc
outsb
lds
mov
jg
mov
and
ss
lret
ljmp
cmp
cld
rclb
mov
sbb
in
mov
mov
jno
loopne
adc
or
dec
xchg
clc
and
mov
inc
pop
mov
in
push
stc
inc
and
xchg
jl
js
pop
mov
sbbl
mov
pop
pop
inc
stos
test
mov
push
xor
and
imul
dec
mov
or
lods
xlat
add
inc
getsec
inc
in
movsl
enter
pop
shlb
sub
cmp
inc
xchg
xor
aaa
xor
mov
dec
and
cmpsl
aas
add
sbb
push
inc
inc
fwait
nop
addr16
pop
sub
lods
jg
pop
mov
cwtl
dec
popa
lock
insl
sbb
dec
lea
mov
repnz
test
out
scas
pop
cmc
inc
cwtl
out
aaa
push
ret
movzbl
das
lods
dec
xor
lods
inc
mov
cmp
mov
mov
fists
shll
inc
push
je
add
sub
push
pop
sub
fbstp
jnp
mov
jnp
je
and
aas
mov
arpl
pop
cwtl
out
fstps
lcall
ss
mov
lds
int
inc
fadds
lret
pop
mov
cmp
adc
cmpsl
jmp
outsb
stc
xor
out
daa
jge
in
repz
push
sarb
fwait
and
nop
add
popf
or
cmp
ret
cmp
or
mov
dec
outsl
push
or
out
add
xchg
sti
adc
stos
sub
adc
mov
pop
push
jle
or
xchg
lea
mov
int
jg
pop
and
or
idivl
out
sub
popa
dec
fisubs
jl
cmc
faddl
inc
int
icebp
sti
vmread
das
mov
pop
jg
hlt
stc
xor
out
sub
pop
cmp
ds
add
push
outsl
int
mov
cmp
mov
jns
and
mov
cmc
cld
cmp
cltd
mov
pop
pop
xor
sub
mov
adc
es
sbbl
xor
jg
cmp
xorl
mov
sub
jp
shl
outsl
out
std
cmp
or
mov
scas
movsl
daa
pop
inc
imulb
in
cmp
sbb
cmp
xchg
mov
xchg
out
repz
pop
mov
add
frstor
cmpsl
jg
lcall
cli
xchg
push
and
pop
push
cmpsb
std
les
mov
roll
leave
cmp
fdecstp
sbb
inc
sbb
fwait
push
js
call
mov
lea
mulb
loop
and
aam
pop
sbb
fwait
ret
pop
mov
mov
loop
jbe
dec
in
ss
push
pop
sbb
ret
mov
lock
cmp
or
push
cmp
hlt
cli
add
lods
gs
jb
sbb
push
jle
jmp
dec
mov
stc
push
lahf
mov
adc
xor
xor
pop
shr
dec
mov
nop
mov
or
les
dec
stos
pop
orb
sbb
xchg
cmp
outsl
mov
push
dec
mov
push
cmp
sbb
stc
or
clc
js
xorl
adc
adc
cmp
xor
fcomp
push
test
jae
enter
dec
mov
scas
jmp
fisttpll
cmpsb
mov
in
fists
mov
or
mov
sahf
adc
lods
ja
mov
shll
jg
outsl
mov
push
out
adc
inc
jno
sbb
aam
lret
push
cmp
testl
pop
je
in
xor
popa
dec
hlt
fnstsw
sbb
xor
cmpsl
shrb
aas
mov
dec
add
inc
and
xor
adc
mov
sub
cmpsb
bound
inc
out
or
je
mov
jae
iret
stos
shll
push
jle
xor
inc
adc
jbe
inc
sub
xlat
fsubrl
ret
lret
pop
enter
inc
mov
add
aam
ret
loop
xchg
rcrl
push
shlb
xor
out
pop
xor
xchg
je
ss
enter
outsl
mov
add
pop
xor
sbb
out
pop
cmp
daa
mov
cli
cli
jmp
sbb
jmp
jo
stc
pop
and
call
adc
in
inc
jne
call
mov
in
mov
psubusb
cli
xchg
jp
sub
nop
in
xchg
dec
in
les
add
leave
test
pusha
xchg
lock
dec
ret
movsl
je
cmc
push
pop
sbb
mov
cld
mov
lods
in
push
in
mov
movsl
in
andb
in
sbb
ror
lahf
int3
shlb
fsubrl
iret
lret
sub
sbb
or
repnz
adc
push
scas
int3
fcompl
mov
mov
jmp
and
and
stos
inc
pop
arpl
jnp
ds
loope
push
push
dec
mov
das
dec
into
push
pop
movsl
faddl
jecxz
js
xchg
mov
pop
xor
cmp
loopne
pop
mov
cmc
in
mov
shrb
pop
ljmp
data16
mov
pushf
cmp
inc
jbe
push
addr16
xor
jge
rol
jne
les
xor
mov
add
mov
pop
sbb
adc
sub
mov
mov
inc
int3
fdivrs
and
aad
pop
push
add
cltd
mov
subb
popf
cmpsl
jo
js
and
repnz
and
adc
xchg
mov
inc
cmpsb
xor
inc
in
loop
popf
mov
sbb
inc
or
test
mov
sub
lahf
test
ss
xorb
push
lcall
lret
imul
jae
and
cmp
mov
push
cmp
repz
stc
hlt
push
mov
dec
cmpl
fadd
push
sub
push
pop
js
incb
mov
adcl
sub
push
fdivr
cmp
pop
ror
inc
cmpsb
je
aad
and
mov
icebp
movsl
sub
call
mov
std
push
and
jg
mov
leave
int
mov
mov
push
pop
dec
int
or
and
lret
movsl
aaa
mov
lcall
mov
xchg
and
daa
pop
jb
dec
jne
or
or
test
add
sbb
popa
scas
popa
inc
shlb
mov
sti
add
fiaddl
mov
sahf
sbb
fisubs
dec
push
adc
mov
ja
push
mov
mov
pop
and
and
ja
mov
cld
pop
or
xor
cwtl
cmpsb
cmp
cmpsl
subl
out
xor
stos
lcall
mov
pusha
lcall
mov
or
repnz
mov
xchg
icebp
or
imul
insl
adc
cmp
jecxz
cmp
xchg
inc
mov
sbb
sti
in
iret
fisubrl
js
loopne,pt
pop
std
push
mov
inc
cmp
loope
in
rcrl
pop
add
hlt
push
sbb
pop
test
jnp
sbb
mov
pop
sti
fstpt
out
sub
je
pop
xchg
into
lcall
xlat
aas
ljmp
mov
xchg
sub
ja
dec
lret
je
mov
dec
loopne
adc
or
lret
sbb
mov
mov
push
xchg
cmp
lret
sbb
jno
dec
ret
bound
bound
ret
shll
dec
repnz
lret
fcos
les
pop
inc
push
aad
jle
test
add
test
insb
fbstp
sahf
sahf
and
and
xchg
orl
push
push
test
mov
aam
cmp
aam
stos
lahf
pop
dec
sub
fadds
loop
push
fsubl
xchg
cmp
ret
and
jecxz
test
fstps
or
xchg
ret
repnz
jo
icebp
cltd
movsw
jbe
cmc
mov
loopne
in
sub
ss
or
sbb
mov
in
xchg
adc
stos
inc
aas
mov
push
sbb
lahf
out
cmp
sbb
cmpsb
ficomps
stc
cld
push
xor
pop
and
pushl
das
test
hlt
sub
mov
mov
xor
sub
icebp
addr16
xchg
adc
stc
lods
imul
adc
adc
mov
clc
mov
hlt
push
loop
fstps
arpl
mov
xlat
cmp
inc
mov
ret
pop
sbb
mov
jo
mov
push
icebp
sub
cmp
ficomps
push
adc
mov
jne
cmpl
push
mov
mov
cld
cmp
repnz
inc
mov
dec
popa
jle
sti
jge
xchg
fiaddl
and
sti
je
and
dec
mov
out
imul
imull
popf
mov
xchg
popa
std
stos
xor
or
adc
jbe
xor
dec
in
int3
shr
cmp
lea
dec
xchg
jge
in
scas
fadd
test
rcll
fisttps
dec
mov
cld
xor
fs
cltd
inc
mov
jp
ljmp
aam
popa
aam
mov
mov
ss
sub
push
and
sbb
mov
cmp
mov
cmc
sbb
ja
stos
jp
idivb
sti
scas
out
cmp
pop
and
mov
mov
mov
outsl
aad
icebp
sub
dec
fisttpll
sbb
dec
xchg
nop
ret
cmp
adc
and
shlb
push
adc
dec
xchg
sub
inc
ffree
rorb
xorl
outsb
int
fistpl
test
lret
aad
adc
out
sbb
xchg
es
add
and
xchg
mov
rcrl
mov
in
iret
cld
sti
movsl
fisubl
jl
test
popf
rcl
add
fildll
call
shlb
out
roll
je
and
sbb
sbb
sub
cmp
cmp
or
inc
aaa
mov
xchg
xor
add
mov
jne
and
daa
pop
cmp
and
data16
push
push
iret
jg
pmulhw
loope
loopne
inc
mov
cwtl
pop
pop
add
imul
lods
sbb
clc
cmpsl
dec
mov
enter
add
mov
rolb
dec
fdivr
mov
aad
xor
out
cld
pushf
add
xlat
add
inc
imul
test
xor
nop
pop
insl
jbe
imul
dec
sub
inc
insl
xchg
xchg
shl
jne
add
mov
icebp
adc
and
leave
jge
push
scas
imul
mov
cmc
shrb
inc
data16
scas
shr
test
fistps
and
clc
nop
push
sbb
dec
out
jbe
stos
pop
nop
jo
out
mov
repnz
pop
jno
ds
sarb
arpl
inc
dec
mov
ret
pop
rolb
int
aad
inc
sub
jmp
xor
push
xor
xchg
lods
xlat
cli
fimuls
cmp
inc
jge
repnz
or
sarb
fwait
pop
inc
jl
pop
sahf
shr
daa
sbb
jg
repnz
testb
adc
cmpsb
movsb
push
inc
pop
xchg
xchg
mov
jp
and
xor
inc
stos
fwait
scas
sub
lods
adc
fs
cmp
add
lods
push
dec
jp
cli
pop
aam
pop
jge
pop
lock
jne
cli
leave
imul
sti
sbb
ss
ja
pop
jecxz
add
push
push
shrb
je
push
jae
xchg
les
outsb
inc
dec
and
jnp
mov
mov
js
insl
add
neg
arpl
movsb
inc
das
pop
and
int
imul
jno
jns
xchg
sbb
mov
lahf
xchg
popa
pop
cmp
push
xor
push
cmpsb
imul
sbb
xchg
and
or
int
sub
les
or
or
and
and
jp
sbb
sti
cmp
cwtl
xor
in
pop
sbb
jmp
add
or
xchg
je
or
pushf
push
sbb
aas
stos
dec
jnp
jge
rorl
gs
pop
stc
or
mov
cmp
jbe
scas
stos
sahf
bound
xorl
xchg
addr16
and
jl
xor
sub
lret
push
mov
sbb
rcr
mov
es
sysenter
repnz
jnp
mov
push
gs
xchg
sbb
aam
pusha
lock
leave
dec
imul
xorl
mov
cmp
xchg
test
or
adc
xor
mov
lahf
push
or
or
or
icebp
mov
imul
lret
mov
push
lahf
jg
filds
outsb
xor
pop
lds
aas
xor
jae
or
mov
scas
dec
xor
test
ficoms
inc
out
add
xchg
pushl
dec
std
sub
in
popf
push
xchg
lds
push
cmp
pop
sub
movsl
gs
movsl
lods
test
outsb
jo
movsl
inc
inc
arpl
adc
bound
jne
mov
out
divl
icebp
sub
add
jg
push
jne
pop
das
mov
add
int3
repnz
push
sub
mov
jne
push
add
int3
outsb
jge
mov
fwait
sub
adc
pop
push
sub
push
cmpsb
xor
aaa
pop
jle
hlt
xor
lds
add
mov
xor
scas
aam
push
nop
rclb
test
test
inc
out
dec
or
loop
and
mov
or
mov
movsb
xor
fnstsw
jno
rcrb
les
decl
dec
subb
stc
adc
inc
push
and
cmp
mov
aam
mov
stc
mov
les
daa
mov
popf
xchg
cli
jp
push
push
lock
adc
mov
and
push
add
gs
out
pop
out
gs
xor
cmp
ret
sahf
and
rcrb
aaa
push
stc
mov
imul
loope
lock
lock
xor
aas
sbb
pop
inc
int3
shl
xor
inc
lcall
nop
movsb
lods
sub
inc
xchg
xchg
in
jle
out
negl
or
add
out
sub
lods
jg
adc
loope
faddl
iret
sbb
scas
push
int
pop
xchg
addr16
lea
push
out
sahf
fidivl
dec
xlat
lahf
sarb
pop
add
call
jmp
push
out
test
xchg
aas
dec
and
fdivrs
cmp
in
arpl
jne
arpl
xchg
pop
mov
hlt
cmp
test
mov
outsl
out
mov
test
jecxz
testl
in
in
es
arpl
cmpsl
idiv
in
cmpsb
in
cltd
stos
imul
and
icebp
sub
les
pop
cli
mov
or
push
mov
stc
imul
xchg
cmc
fcoml
cmc
cld
outsb
xsha256
cmpsb
xchg
xlat
in
fwait
pop
mov
xor
mov
ret
cmc
into
dec
mov
cld
cmp
inc
and
jmp
outsb
inc
std
mov
mov
adc
movsl
mov
mov
mov
cmp
fwait
mov
out
or
icebp
test
out
add
sbb
addr16
sbb
lahf
out
xchg
jb
decb
fbstp
adc
push
lret
iret
out
je
and
repz
cmp
rorb
xchg
or
out
sbb
push
inc
sbb
test
mov
pop
leave
xor
into
push
aas
jp
xchg
pop
sbb
lds
lcall
aas
test
cmp
popf
imul
mov
lods
or
mov
mov
xchg
pop
fisttps
popa
lock
fisttps
ret
sub
inc
popa
mov
and
jl
push
imul
lock
dec
inc
cli
pop
xchg
pop
ret
dec
cmp
icebp
das
lret
aam
push
daa
mov
popa
cltd
leave
jl
mov
pop
sahf
mov
call
rcrb
jge
lea
mov
lods
shrl
xor
inc
jle
pusha
mov
pop
adcl
and
dec
lret
mov
gs
hlt
std
daa
inc
divb
icebp
das
fs
push
mov
mov
xchg
add
shll
adc
pop
ja
test
subb
aas
jb
aam
pushf
mov
pop
add
jae
lock
arpl
jno
stos
clc
fucomi
mov
and
dec
test
in
push
jnp
repz
mov
std
mov
lock
daa
xchg
inc
int3
addr16
pop
mov
mov
or
in
xchg
lret
cmp
mov
sbb
pop
nop
vmovdqa
jno
xor
test
loopne
or
movsb
hlt
add
in
movsl
out
cmp
fidivs
out
daa
loope
pop
inc
mov
mov
sub
jo
cmp
add
lcall
dec
pop
out
imul
push
mov
mov
out
call
sub
mov
std
test
xchg
inc
cmp
out
cmp
mov
push
lahf
sbb
andb
mov
shrd
ljmp
shl
jae
and
adc
ret
mov
xor
popf
cmpl
out
orl
sbb
jl
jle
xor
pushl
lds
imul
sub
adc
push
fnsave
inc
xchg
sub
imul
push
testl
mov
sti
sbb
cwtl
pop
out
test
imul
insl
add
mov
jbe
inc
xchg
add
push
and
bnd
test
movsb
loop
lret
xlat
inc
mov
add
sub
mov
ror
jecxz
fcompp
rcrl
xchg
hlt
lret
xchg
test
and
int
mov
or
jmp
nop
ss
in
jne
dec
out
xchg
lods
push
xchg
out
loope
jmp
sub
xlat
out
pushf
sub
mov
mov
inc
jecxz
and
pop
and
aad
jle
lods
push
or
dec
insl
sub
add
imul
mov
pushf
pop
gs
scas
and
sahf
or
or
pop
xchg
inc
jge
pop
aam
fdivs
stos
push
and
outsl
test
fcoml
push
nop
mov
add
sbb
mov
xor
addr16
sbb
mov
iret
xchg
aam
xor
sbb
push
sar
and
mov
movsl
sbb
inc
jb
out
cmp
jnp
popf
test
inc
mov
mov
xchg
addl
sarl
aam
shlb
cmpb
jge
lret
outsb
out
mulb
decb
or
clc
push
mov
inc
int
add
sub
dec
xchg
in
stc
insb
popf
sahf
fs
repz
xchg
jo
fdivrs
outsb
cmc
in
pushf
cmpsb
or
enter
daa
lods
inc
sbb
cltd
gs
in
aas
rorb
repnz
cs
daa
lea
int
mov
xor
call
ret
mov
inc
es
push
test
out
aad
xlat
fprem
bound
icebp
mov
jmp
pop
inc
or
dec
pushf
pop
cltd
inc
fisubrs
pop
popl
xor
ljmp
mov
or
sbb
mov
scas
fwait
cmp
push
cmp
jg
mov
test
aad
fdivr
adcb
mov
cmpsl
outsb
jge
push
dec
cmp
cs
lods
das
bound
adc
inc
jns
xor
mov
pushf
jmp
lods
les
test
mov
jmp
pop
sbb
in
xor
stc
mov
popa
hlt
sbb
ja
jg
insl
jo
pop
sub
dec
push
jo
or
daa
jge
cmpsl
inc
sub
pop
rcrl
cltd
es
xor
cmpl
idiv
insl
lods
mov
push
icebp
or
cltd
mov
xchg
shll
sub
fnstenv
stos
fildl
adc
xchg
and
inc
orl
cmpsb
cmp
dec
jp
into
rcrb
pop
xchg
adc
jne
je
pusha
or
dec
cwtl
movsb
xor
add
xchg
xor
insl
pop
pop
mov
sbb
movsl
jg
in
push
cmp
xchg
es
and
divb
sahf
sbb
jmp
movl
cli
fdivrl
shll
jle
lea
add
mov
inc
sti
mov
test
iret
add
mov
out
loope
sbbb
mov
loopne
out
push
push
outsb
xchg
int
xchg
cmp
pop
xor
icebp
add
or
in
xchg
adc
ds
ret
pop
imul
and
cmp
jge
xchg
in
lods
je
xor
push
test
pop
add
filds
cs
jmp
les
mov
rcrb
and
xchg
xor
jle
xor
sbb
dec
into
das
arpl
loope
lret
bound
leave
mov
push
cmp
mov
push
nop
rolb
sti
mov
lods
dec
cld
into
mov
lock
mov
sbb
data16
bound
and
fimuls
clc
repz
add
dec
push
xor
aaa
adc
lds
std
push
out
popf
stos
stos
out
push
lcall
cli
out
repnz
add
push
lods
lahf
sub
pop
in
pushf
outsl
cmc
mov
repz
clc
xchg
pop
in
inc
mov
or
and
enter
push
xor
nop
enter
test
jmp
mov
mov
ret
inc
push
dec
negl
jns
push
int
cmp
dec
xchg
mov
cmp
sub
pop
add
lret
cmpsl
das
mov
and
cmpsb
xor
dec
lret
fnstenv
insl
icebp
into
or
pop
mov
xlat
jp
scas
scas
loope
or
dec
je
jo
int
ret
jle
lcall
std
fsts
mov
cmova
mov
inc
subl
adc
jle
jmp
and
in
or
loop
lods
out
sub
mov
adc
iret
outsb
lods
mov
cmc
push
lea
sub
clc
dec
ficoml
sub
cmc
scas
mov
mov
push
mov
and
lahf
aas
xor
ffree
push
daa
les
cmpl
mov
cmpsl
test
mov
sub
jp
xor
test
in
fwait
sub
fsubr
jmp
pop
fidivrs
ja
ljmp
add
fwait
cmp
mov
jae
iret
cli
movsb
test
call
mov
insb
pop
inc
push
enter
or
push
dec
adc
pop
jmp
test
sub
adc
sbb
sub
push
aad
out
jp
push
and
fnstenv
je
xchg
xchg
sub
dec
mov
fcompl
sub
mov
mov
ss
lock
add
or
sbb
jmp
lods
mov
stos
sahf
add
pushf
ja
mov
arpl
jb
mov
mov
cmpb
mov
mov
in
orl
imul
xor
push
inc
in
fstpl
out
pusha
add
mov
cli
pop
xchg
mov
test
mov
pushf
out
jae
mulb
pop
fstpt
ret
aam
dec
mov
icebp
mov
repz
pop
movsb
mov
sub
xchg
out
nop
xchg
mov
pop
adc
xchg
cmp
enter
cld
sub
sar
mov
or
xchg
mov
sub
js
cmc
jnp
xchg
pushf
dec
repnz
insl
fstl
xchg
xchg
lcall
xor
stc
shrb
push
les
xchg
mov
jl
jmp
add
mov
xor
rcr
incl
cli
pop
imul
loop
mov
add
insb
pop
js
imul
mov
jmp
dec
push
push
cmpsb
bound
int3
inc
pop
xchg
cmpsb
jae
subl
in
ja
loopne
xor
add
push
cld
test
inc
test
divb
jne
cltd
dec
mov
pop
dec
popf
outsl
pop
jg
shrb
mov
mov
ss
movsl
cltd
add
outsb
jmp
repnz
sub
in
stos
ljmp
repz
out
sub
adc
lods
lods
ficompl
xchg
dec
or
mov
out
imul
xor
add
ret
movsl
jp
repnz
aas
inc
mov
rcrl
popf
xchg
popf
rcrb
sub
out
test
sub
lods
adc
mov
fildl
fistpl
pop
dec
imul
imul
ret
and
mov
sbb
lea
sbb
adc
and
es
mov
xor
into
cmp
cs
mov
jp
jb
push
push
or
ret
jge
out
mov
pop
gs
adc
and
lods
bnd
mov
mov
mov
dec
dec
popa
mov
outsb
add
inc
pop
insl
mov
or
es
mov
mov
push
in
xor
ficoms
or
fs
xchg
cmc
js
cltd
mov
test
mov
xor
jecxz
divb
jmp
repz
add
es
cmp
pusha
fldcw
mov
addr16
mov
xchg
mov
sbbl
mov
out
jnp
inc
mov
jbe
push
fwait
inc
pushf
push
mov
push
mov
pop
daa
mov
adc
nop
mov
sub
rcrb
sub
addr16
xlat
daa
inc
das
jne
pushf
dec
shlb
and
cltd
lock
sbb
insb
mov
inc
sbb
xchg
out
cmpsb
loope
fmuls
mov
sub
fs
aas
shlb
sbb
mov
xchg
unpckhps
mov
out
mov
mov
xlat
push
pop
xchg
cmp
scas
aaa
ret
sbb
mov
popl
push
and
or
dec
jle
adc
mov
xchg
dec
andl
fcmove
pusha
shll
je
ret
sbb
outsb
push
insl
movntps
mov
aam
inc
mov
xchg
fstpl
out
push
dec
jge
popa
cmp
fwait
nop
mov
stos
add
xor
mov
xchg
fldt
jmp
ret
mov
mov
ret
in
dec
sub
pop
in
xchg
jno,pt
test
stc
xchg
shrb
xor
and
xor
xor
mov
mov
scas
sbb
pop
add
jg
rolb
sahf
push
in
popf
xor
je
push
inc
jle
jb
inc
std
jge
add
sbbl
pushf
sti
push
pop
cmp
ss
outsl
adc
and
xor
sbb
jno
orb
push
mov
mov
xchg
jp
orb
add
dec
ret
mov
sbb
bound
ljmp
sub
pop
fsubs
xor
mov
mov
fldt
loopne
ret
movsl
aas
or
insb
jecxz
add
push
mov
or
iret
in
xor
or
das
cmp
leave
leave
mov
rcr
sbb
xchg
add
adc
cmpsb
jne
push
sub
jp
add
or
ss
push
aam
jg
inc
sub
push
mov
mov
push
xchg
js
test
jmp
jo
mov
mov
ficomps
jmp
fistps
cmpsb
icebp
ret
mov
jns
in
ret
insl
adc
pop
pop
mov
outsb
mov
dec
add
push
repz
mov
rcl
mov
jnp
and
out
push
popf
cmp
dec
cmpsl
rcrl
add
idivb
dec
daa
or
out
jmp
shr
mov
jb
out
and
jle
jl
in
mov
cmpsl
stos
shl
scas
xlat
stos
jmp
jae
inc
mov
cmc
in
icebp
lahf
repz
leave
icebp
adc
push
mov
mov
mov
shr
fnstenv
arpl
sbb
sbb
mov
adc
sbb
push
adc
adc
jl
nop
add
jnp
and
adc
sbbb
jb
call
cmp
arpl
pop
or
rolb
aam
dec
sub
sbb
rcl
loope
ret
or
inc
sub
repnz
in
inc
std
mov
sub
sarl
sub
popa
sti
hlt
out
pusha
test
aad
js
aaa
bound
jne
add
cwtl
mov
aas
xchg
dec
inc
rolb
repnz
sub
jbe
mov
sahf
hlt
inc
das
sub
loop
pop
and
xor
jmp
lret
push
sbb
add
adc
addr16
xchg
mov
sbb
mov
cltd
lcall
push
shlb
andb
xchg
stc
lea
cmp
add
xor
fbstp
inc
lods
cmp
xchg
pop
push
xor
fbld
jno,pt
jmp
mov
mov
int3
fistl
xchg
xor
test
dec
pushf
mov
push
cs
test
push
enter
repnz
push
fdivl
in
or
das
mov
jge
in
fwait
mov
addps
mov
cmp
cmp
dec
mov
aam
insb
push
push
cs
mov
inc
adc
xchg
iret
sbbl
mov
push
adc
xor
pusha
mov
or
jp
and
outsb
inc
mov
mov
push
int
sbb
mov
inc
cmp
sub
pop
jle
int3
bound
jl
pop
sub
mov
mov
add
jg
bound
mov
mov
mov
and
mov
addb
and
negl
mov
into
dec
aam
nop
andb
inc
push
cs
les
cltd
xchg
adc
fsubr
std
sahf
inc
mov
push
neg
sbb
in
cmp
call
xorb
jno
xor
orb
call
outsb
xlat
sbb
jmp
mov
inc
dec
jl
mov
ds
or
call
cmc
xor
mov
leave
mov
in
mov
sti
xchg
shl
fadds
pop
pop
mov
push
xchg
push
xor
dec
fdivp
lock
stos
js
lcall
add
repz
sti
in
mov
scas
mov
les
outsb
sub
jae
xor
std
dec
mov
or
sbbl
mov
insl
das
jno
jno
push
and
mov
adc
aaa
cld
shll
nop
jle
cwtl
push
stos
push
mov
xchg
mov
jne
popf
imul
inc
sub
insb
rolb
xor
shlb
sub
push
movsl
imul
push
fiadds
inc
xchg
lods
mov
jp
or
inc
ret
out
jecxz
and
cs
mov
int3
sub
mov
lcall
mov
dec
rol
xchg
sbb
or
and
or
sti
fadds
cmpsb
insl
xchg
clc
cs
add
push
fsubs
fsubs
pop
aad
les
rcrb
push
jge
xor
cmp
addr16
ret
xlat
push
push
or
repnz
stc
push
cs
cmpsb
fists
rcr
sub
push
hlt
mov
cli
mov
shl
mov
imul
cmpsb
or
daa
out
xchg
xor
aaa
sbb
arpl
dec
push
bnd
bound
mov
cs
mov
push
and
and
jne
add
adc
and
cld
rcr
les
pop
out
icebp
ficompl
sbb
mov
inc
add
bound
lods
add
sti
add
andb
sub
jp
pop
add
xor
xchg
sub
sti
xchg
xlat
jo
ret
insl
xor
and
and
bnd
jns
mov
mov
mov
inc
gs
mov
test
std
jns
idivb
and
xor
hlt
daa
inc
push
cmpsb
push
insl
mov
dec
fistps
pop
stos
ds
cwtl
add
rcll
dec
movl
loopne
rcrb
push
lods
rorl
adcl
push
mov
sbb
fdivl
sarl
test
mov
push
mov
add
jge
aaa
mov
gs
fstpt
mov
mov
repnz
sub
xor
lret
sbb
xor
jbe
or
and
sbb
imul
xor
pop
pop
push
addr16
mov
dec
dec
lods
xor
jl
jbe
movsb
mov
add
shll
in
xor
xchg
xor
xchg
nop
lea
mov
push
loopne
mull
ret
add
push
cmpb
xchg
cmpsb
pop
test
cmp
lahf
xor
imul
js
fmull
mov
mov
mov
pop
push
sub
scas
jl
mov
in
cmp
jnp
out
aad
fisubs
cmp
pop
add
adc
out
push
fcmove
out
mov
cltd
rolb
shl
pop
imul
scas
out
mov
imul
sub
sbb
in
outsb
mov
jae
or
and
xchg
mov
movsb
or
cli
fidivrl
push
repnz
dec
pushf
mov
repnz
scas
mov
push
sbb
jne
in
pop
or
loop
inc
add
xchg
scas
popa
rcrb
or
xor
mov
imull
pop
jmp
pop
push
adc
cmp
dec
mov
cmp
jae
xorb
aaa
push
mov
sub
test
aaa
mov
pop
insb
xor
lret
shrb
test
das
or
jge
into
clc
mov
xchg
mov
sub
push
in
mov
popf
pop
jle
jge
fwait
cmc
mov
add
pop
dec
loop
push
sbb
mov
imul
ds
sub
mov
pop
sub
aad
and
nop
push
mov
xlat
fdivr
mov
outsb
dec
push
icebp
push
push
repnz
xor
mov
push
loop
jle
cli
lods
lahf
sub
sahf
push
sahf
dec
push
popa
aad
mov
outsl
inc
jbe
aad
aam
lret
mov
outsl
push
adc
sahf
out
push
xchg
test
and
test
push
outsl
pop
std
pop
inc
jbe
lods
cmpl
ret
movsb
fstp
dec
adc
loopne
jbe
sbb
shlb
push
add
ret
jae
push
inc
xchg
icebp
push
mov
fistl
mov
mov
pop
mov
in
sbb
gs
jb
pop
fstps
faddl
adc
stc
pop
cli
adc
add
dec
test
cmp
and
pop
push
fs
int3
int
sub
push
sub
adcb
testl
out
mov
ja
leave
sbbb
out
fiaddl
movlps
test
mull
stc
icebp
push
xchg
or
lahf
dec
mov
mov
mov
sbb
call
mov
call
aam
inc
xor
fdivp
pop
mov
gs
movsl
leave
cmpsb
test
push
xchg
insl
mov
not
jno
je
shll
adc
jge
ret
daa
sbb
or
xor
daa
lahf
push
pop
pop
test
in
loop
fisttpl
movzwl
mov
int
or
xchg
push
dec
in
cmc
hlt
cmp
and
mov
out
xchg
ss
ja
inc
insl
add
or
jae
push
adc
lods
dec
mov
push
test
inc
xor
add
lds
scas
les
scas
and
dec
lock
divl
fstpl
cwtl
test
ljmp
rcrb
lahf
loope
aad
xchg
mov
enter
hlt
jb
sbb
jecxz
aad
and
movsb
inc
ficompl
jge
xlat
jg
movl
xchg
dec
jp
jle
jae
lret
int
std
mov
js
mov
add
jne
icebp
pushf
inc
cmpsb
fs
je
xchg
aam
adc
inc
imul
mov
pushf
push
aam
in
jge
jb
sub
fnsave
mov
cmpsb
int3
jmp
xor
mov
mov
jp
mov
inc
xor
lods
lock
test
imul
cmp
rcll
rcrl
ja
jne
cmp
cld
adc
mov
cmp
cmp
cmpsb
jmp
in
cmpsl
ud0
enter
das
stos
jnp
bnd
shrl
cmp
ret
mov
sbb
xchg
push
or
cwtl
xor
xor
xchg
enter
dec
fiaddl
ret
dec
jne
xchg
jge
push
xor
das
out
out
shll
pushf
or
xchg
jle
and
ds
les
dec
pop
sbb
xchg
mov
cmpsb
push
test
mov
bound
and
outsl
xchg
pop
dec
movsl
jns
div
sub
push
sub
mov
sbb
test
sub
mov
mov
push
sub
mov
mov
movsl
lcall
or
xor
cmp
mov
lahf
jb,pn
inc
xor
xorb
cmp
pushf
mulb
addr16
xchg
out
inc
jmp
inc
mov
push
das
add
lcall
test
and
adc
stos
pop
jbe
repnz
test
or
mov
lcall
out
push
xchg
xchg
lret
call
fiadds
push
cli
pusha
clc
fs
or
and
mov
sti
pop
fdivrl
imull
movsb
push
aam
add
mov
jecxz
xor
inc
or
imull
cmpsb
in
jns
push
loop
cwtl
es
mov
lcall
mov
push
into
adc
shlb
movsl
and
adc
jno
inc
les
lock
clc
aad
jne
cmp
and
cmp
cmp
rep
ret
sub
iret
jp
les
loope
bound
lods
daa
stos
inc
shlb
xor
lret
sbb
inc
je
cltd
icebp
nop
or
jb
lods
push
adc
sbbl
ss
lods
fsubs
adc
rcrb
test
insl
jbe
lea
fadds
mov
pop
out
xor
dec
cmp
lret
mov
scas
fistpl
in
fistpll
rorl
mov
das
test
jb
cmp
mov
fildll
cmpsl
mov
xor
jge
add
jb
insl
lcall
jae
mov
out
popa
loope
es
fnstenv
push
int
jmp
fisttpll
shl
insb
mov
icebp
adc
dec
fldl
cld
jg
pop
adc
inc
and
and
inc
mov
gs
movsb
inc
and
dec
dec
mov
pop
js
sub
pop
ret
and
aad
arpl
in
push
fcomps
rol
jb
add
cltd
movups
nop
add
mov
lea
in
scas
mov
jae
pop
xor
dec
xchg
cmpsb
push
cmp
push
aas
xchg
pop
or
xchg
fcmovb
adc
lock
fwait
xor
hlt
dec
fxtract
xchg
enter
push
jns
ret
mov
xchg
loope
and
sbb
arpl
sub
test
movsl
add
in
cmp
jns
das
mov
sahf
ds
lods
dec
mov
cmp
jg
xchg
mov
pop
ret
popf
ljmp
int3
or
sbb
loop
lods
fisttpll
or
ja
scas
mov
push
mull
ds
arpl
scas
scas
cmpsb
jne
bound
inc
mov
fstl
insb
sarb
jo
lcall
movsb
divl
or
jns
mov
pop
dec
ficompl
iret
aaa
negl
lods
aas
pop
popf
mov
idivl
cwtl
rcl
rclb
mov
jne
push
les
icebp
mov
imul
jle
xor
dec
sub
pop
les
mov
and
outsl
mov
lahf
out
mov
jle
lahf
ds
adc
clc
mov
mov
mov
xchg
leave
bnd
pop
bound
jge
das
or
dec
or
out
push
daa
call
add
pop
or
sbb
out
nop
xchg
push
cld
add
testl
add
icebp
movl
loopne
je
mov
lock
lods
ljmp
xchg
inc
test
rorl
lea
adc
pusha
repnz
out
pxor
loope
jne
loopne
sbb
adc
inc
adcl
cwtl
mov
cltd
pop
inc
or
or
cmpsb
mov
movsb
pop
fld
and
cld
sbb
pop
jne
mov
lods
lock
cmp
jmp
aas
sti
fiadds
sbb
mov
cld
fnstenv
mov
sub
lods
sub
xlat
das
fildl
jns
mov
mov
dec
adc
jno
test
sub
pop
jmp
ljmp
es
bound
outsl
jmp
lret
add
mov
arpl
movb
loop
je
mov
mov
xor
xchg
lret
fdiv
pushf
sarb
lds
lcall
xchg
xchg
sub
xlat
loope
mov
sbb
stc
mov
addr16
push
in
adc
mov
push
push
push
add
mov
mov
inc
imul
int
testl
or
push
pop
shr
lods
pop
lret
sbb
adc
aas
inc
fcoms
sub
and
out
sub
insb
and
adcl
hlt
mov
scas
jns
mov
rclb
add
test
cld
push
and
repnz
ljmp
gs
cli
xchg
fs
sbb
or
adc
mov
cmp
or
nop
ds
dec
lods
mov
daa
ret
sub
inc
sbb
pop
xchg
add
sbb
jmp
pushl
icebp
xor
xor
cmc
test
repz
ret
and
add
shll
aad
je
lret
into
inc
add
dec
fld
mov
lcall
push
test
jg
cltd
in
push
xchg
ret
xor
lcall
and
fcomps
cmpb
pop
and
or
in
ret
lret
and
in
cwtl
lds
inc
fdivrs
jecxz
cld
inc
rol
outsl
mov
clc
and
subl
mov
mov
sbb
fsub
dec
adc
in
hlt
jnp
cld
pop
out
dec
jecxz
and
jecxz
inc
loop
mov
xor
jge
and
fiaddl
rclb
int3
mov
cld
or
inc
cmp
loope
lret
pop
cmc
cmp
cmpb
sub
lret
adc
les
adc
loopne
out
in
movb
and
notl
notb
pop
outsl
dec
cs
call
fisubrl
ja
xor
arpl
xor
lret
scas
pushf
je
jb
lods
xchg
add
and
and
mov
adc
lret
mov
cmp
xor
test
out
adc
subb
adc
popf
outsb
decl
xchg
inc
ss
das
icebp
xchg
dec
out
and
in
mov
or
ja
aas
sub
push
mov
rcrl
and
packssdw
cmp
pop
dec
jp
lds
pop
xor
dec
pop
fldenv
sbb
gs
push
rcrb
mov
loope
ficomps
push
mov
stos
jg
lcall
out
das
scas
stc
mov
push
enter
fdivrl
cld
mov
ds
mov
mov
mov
sub
xchg
je
negb
bound
jmp
je
mov
les
mov
gs
data16
stos
insl
clc
xchg
push
arpl
roll
xchg
shlb
dec
adc
movsb
and
call
add
jecxz
mov
in
sub
xchg
lret
scas
and
pop
adc
lock
pop
mov
fsts
push
or
ret
add
pushf
inc
jge
or
lret
jnp
or
mov
cmpsb
adc
or
fldt
aas
jns
pushf
dec
jmp
cmp
rcrb
pushf
mov
imul
push
cli
adc
pop
test
insb
mov
and
insb
fmuls
cmp
mov
or
pop
stos
test
cld
push
movsb
jge
sub
and
xor
cmpsl
mov
mov
rolb
mov
sbb
notl
add
mov
ljmp
adc
xorb
pop
dec
sub
idivb
dec
daa
lret
mov
mov
scas
fistl
mov
cmp
xlat
pop
out
or
add
out
outsl
xor
out
clc
popf
lock
xchg
mov
cmp
pusha
stc
sub
cwtl
mov
and
in
es
xor
mov
xchg
jl
notl
mov
sbb
leave
mov
dec
jns
mov
pop
ss
lods
arpl
mov
mov
out
outsl
ss
pop
pop
fsubr
sahf
aaa
push
push
sar
lret
dec
cmp
adc
mov
lahf
cltd
jecxz
push
push
jns
xchg
pop
mov
pop
sahf
icebp
std
mov
dec
add
push
push
iret
or
int3
aad
mov
push
cs
dec
adc
pop
cmp
mov
insl
lcall
add
fwait
mov
mov
stos
cmp
cmp
fists
lcall
enter
add
inc
push
mov
js
pop
fadds
dec
jb
jl
inc
add
jbe
fdivrl
test
push
fildll
rclb
add
push
cmp
jecxz
sti
jcxz
ljmp
cmpsb
or
xor
lea
ljmp
xchg
pop
addr16
xchg
aaa
rol
xor
mov
push
cmp
mov
xchg
andl
xor
inc
jns
xor
in
scas
das
scas
dec
daa
test
clc
sub
imul
mov
insl
jmp
pop
jge
push
cmp
and
fldcw
pop
cmpsb
fcoml
add
jp
nop
lock
out
pop
push
cwtl
push
int
xchg
addr16
cmp
ret
sub
xchg
push
inc
inc
sbb
mov
ja
data16
cltd
fiaddl
sahf
add
inc
sbb
das
cmpsl
ret
outsl
xchg
mov
pop
dec
lret
aas
cmp
push
sbb
das
jl,pt
sbb
jno
mov
mov
inc
pop
inc
test
scas
pushf
mov
dec
xor
and
mov
dec
inc
or
pop
aad
test
test
inc
mov
add
add
fs
aam
pop
out
lods
aad
lahf
cld
cld
xor
notb
xchg
jne
xchg
push
mov
sbbl
add
shlb
mov
xchg
stos
imul
lcall
sbb
sahf
cmc
xor
mov
jo
sub
mov
push
push
xchg
data16
push
lret
in
out
cmc
stc
icebp
jge
das
mov
aad
jns
sub
mov
movsb
xchg
mov
sub
cli
lahf
pop
gs
and
ss
xchg
repnz
rolb
sahf
aad
test
jl
mov
in
mov
ja
insl
pop
push
sub
mov
mov
loopne
aas
mov
mov
mov
stc
lcall
out
inc
stos
sahf
rep
mov
enter
das
int
inc
fisttpll
sti
add
lea
mov
adc
lea
cmp
cld
enter
sub
test
fucomi
call
add
push
pop
cmp
lret
push
pop
ss
and
sbb
pop
mov
mov
jl
mov
fwait
stos
sti
push
sub
in
mov
ljmp
add
cmp
sbb
aaa
out
push
jo
mov
out
push
data16
sub
jmp
ret
neg
push
jo
shl
xor
repz
or
decb
aad
pop
movsl
stos
dec
cmp
pop
fnstcw
pop
cmc
sbb
sbb
rorw
mov
push
jns
aam
sbb
xchg
or
mov
adc
rcl
mov
test
sub
jbe
adc
adc
loopne
jg
stos
mov
icebp
and
mov
movsl
stos
cmpsb
xchg
jmp
movsb
lret
repnz
jle,pn
push
xchg
push
outsb
fistpll
scas
fstpt
inc
popf
jmp
fistl
scas
and
pushf
orl
jno
ljmp
fbld
sub
add
xlat
adc
jno
adc
ret
sub
push
loope
shr
test
inc
ja,pn
mov
adc
sbb
mov
iret
pushf
pop
faddl
push
out
fxam
cltd
adc
pop
mov
jl
notl
mov
clc
jo
es
dec
and
mov
pushf
sub
int
or
jle
into
clc
jle
mov
ret
rol
adc
mov
fdivr
test
ret
add
cmp
fdivs
outsl
adc
sar
sub
pop
aad
ss
fildl
nop
ret
ffree
mov
in
sarb
push
xchg
push
cmpsl
out
add
inc
sbb
pop
sahf
push
bswap
mov
sbb
js
cli
andb
popa
push
and
stc
mov
push
es
push
mov
fimuls
sbb
lds
shrb
push
in
and
xor
jge
fs
pop
xchg
dec
mov
mov
pop
adc
sbb
mov
pop
loopne
pop
test
inc
shrb
movsb
into
loopne
mov
lods
fwait
and
je
int
lea
pushf
into
sbb
pusha
xchg
pop
nop
push
pop
ja
sbb
insb
in
cmp
pop
shl
jle
jg
sub
lock
cmpsl
ret
mov
xlat
dec
add
lods
and
daa
pcmpeqd
int3
xchg
cwtl
dec
call
inc
cmp
mov
mov
in
and
daa
add
xlat
push
les
jnp
jne
add
push
mov
sub
jbe
jae
jg
rol
xchg
mov
gs
jmp
clc
or
inc
ficompl
adc
sub
dec
aam
mov
sub
out
mov
adc
jne
aaa
in
and
xchg
cli
jge
and
adc
popa
xor
xor
pop
aad
push
lock
int3
adc
sub
jle
ljmpw
jae
fisubl
xchg
jg
push
mov
les
push
into
lock
scas
fsubs
xor
pop
pop
add
push
lock
lret
jns
mov
jns
add
divb
jns
mov
in
adc
imull
sbb
imul
cmpsl
pop
cmp
adc
push
or
imul
mulb
push
pop
inc
loop
cmp
xchg
mov
or
sbb
adc
nop
icebp
cmp
pop
in
or
mov
pop
dec
xchg
xchg
inc
sub
push
pop
ljmp
push
mov
pop
arpl
dec
sub
popl
test
imul
cltd
fistl
sbb
xor
aas
stos
cmpsb
cmpsb
in
shl
mov
pop
gs
hlt
les
rclb
aad
adc
inc
xlat
sub
out
inc
leave
pop
rcrb
ret
add
test
fbld
dec
mov
push
popa
add
les
cmp
adc
call
dec
push
mov
push
xor
lahf
sbb
pusha
pop
mov
test
sbb
jo
xor
jp
sti
and
inc
jo
push
pop
movsl
icebp
in
in
repnz
jae
push
xchg
dec
pop
ret
cmpsl
or
pop
nop
cmp
jo
outsl
and
cltd
mov
lea
adc
insl
and
add
mov
xchg
idivl
shr
test
mov
pop
push
lret
or
or
aam
or
mov
dec
ja
loopne
int3
push
imul
jp
jle
fisttpll
into
iret
cmpsl
jl
cmp
pop
push
dec
xor
shlb
sub
push
popf
push
mov
lods
out
push
mov
mov
push
xor
inc
mov
aad
jecxz
aad
sub
out
fsub
or
pushf
sbb
push
test
ds
mov
and
dec
outsb
pop
andb
insb
jl
ljmp
mov
inc
xlat
mov
add
push
add
iret
or
cmp
add
push
add
or
out
pop
mov
and
nop
xchg
cmp
jge
addr16
mov
push
xlat
scas
pop
pop
add
lahf
aas
fs
push
lods
jne
add
and
jge
movsl
ret
mov
fimull
jnp
fdiv
out
pop
pushf
movsl
mov
testl
xor
mov
rorb
dec
cwtl
sub
jns
icebp
mov
xchg
mov
aam
mov
fmul
icebp
xor
loop
ffree
in
dec
outsl
roll
adc
cmp
pop
fwait
adc
pop
data16
mov
js
test
dec
push
jl
test
pushf
sbb
xchg
sbb
adc
lahf
or
xchg
xor
add
ret
in
cmp
dec
mov
add
les
out
pop
jo
aad
in
inc
sti
xchg
adc
jle
jae
and
lds
std
push
or
leave
sti
cmpsb
lods
movsb
adc
jle
add
push
push
jns
push
sti
daa
hlt
lock
inc
shlb
xchg
dec
and
mov
call
jae
cwtl
push
cmp
or
shll
mov
xor
roll
sbb
push
adc
sub
lcall
mov
push
mov
jmp
xor
push
pop
je
aaa
pop
jae
push
inc
xchg
xchg
xchg
pop
jb
cmpsl
lock
cltd
and
sub
les
arpl
adc
jecxz
ss
cmp
adc
mov
pop
inc
or
out
xlat
lods
das
leave
lock
rolb
repnz
cli
clc
cmp
movsb
push
lods
mov
push
mov
js
mov
dec
cmc
rclb
inc
loope
insb
dec
fistpl
mov
shll
in
jmp
jne
mov
jmp
pushf
xchg
sti
jnp
adc
das
cli
mov
cmpsb
and
sub
jb
fidivs
fld1
sub
jg
fadds
xchg
insl
lock
pop
mov
and
jmp
xor
jnp
repnz
jne
arpl
sarl
or
inc
lds
fisubrs
inc
ss
and
mov
lods
dec
pop
das
sbbb
push
pop
cmc
in
loopne
xchg
xchg
xchg
aad
pop
xchg
cmc
jno
or
jmp
or
mov
jl
inc
fwait
loop
inc
adc
pushf
roll
stc
push
adc
push
jb
inc
cmp
add
inc
inc
dec
lock
data16
add
sub
cs
insb
inc
pusha
lea
push
fbstp
fbstp
jg
mov
pop
mov
loope
dec
mov
scas
mov
lahf
or
push
jmp
rcrl
pop
mov
fldz
xchg
lcall
pop
rcll
test
dec
jge
adc
cmp
fwait
pop
aam
xorb
les
cmp
mov
xchg
scas
incl
subl
hlt
jg
sti
adcl
dec
aam
mov
cmc
mov
jnp
call
insl
inc
sbbb
test
xor
incl
cmp
adc
sub
pusha
sarl
aad
inc
xchg
mov
add
out
mov
imul
rcrl
dec
push
stos
push
mov
test
xchg
cmpsb
mov
or
lret
pop
cwtl
popa
add
hlt
fmull
add
js
rcll
testl
inc
out
ds
jno
push
loope
cli
ret
pop
xchg
icebp
adc
pop
cmp
out
fwait
bound
js
sub
fsubs
mov
xchg
xchg
stos
mov
mov
lods
or
out
and
pop
cltd
cmpb
in
cmp
pop
pop
cmp
or
adc
dec
scas
in
rolb
fstpl
xchg
subl
aad
aas
adc
xchg
xchg
in
fcmovnu
xchg
pop
movsb
popf
or
shrb
xchg
jp
inc
jl
mov
jno
jae
fcmovbe
sub
pop
jnp
jo
aam
mov
push
fnsave
ja
mov
fnsave
add
push
push
aad
pop
fwait
and
jmp
ljmp
mov
mov
add
pushf
cmp
lods
mov
je
es
les
out
loope
pop
mov
mov
pop
pop
push
pop
fwait
push
dec
inc
stc
lds
dec
in
sub
add
inc
aas
adc
out
or
xor
movsb
in
or
xchg
jb
and
add
fnstenv
inc
idivl
sub
and
in
sbb
aas
out
stos
repz
push
fcomps
jp
pushf
and
pop
cmp
out
icebp
mov
arpl
inc
or
add
movsl
fistpl
out
out
xor
inc
das
xlat
cmpb
cmp
mov
aas
js
adc
jl
xor
cli
sarl
cmc
notb
leave
and
mov
in
inc
or
sub
add
dec
xchg
push
je
popa
ja
nop
ficoml
pop
je
scas
in
jg
and
shrl
test
dec
bnd
jnp
in
or
dec
cld
inc
scas
ret
pop
xor
and
sub
call
add
and
adc
cld
fistpl
loopne
aas
lea
int3
stos
repnz
pop
mov
lret
insl
mov
push
in
pop
mov
and
jne
cld
jo
popf
jo
inc
shlb
sub
or
aam
jp
mov
js
jae
jle
aam
and
stc
dec
fstpl
hlt
hlt
and
and
and
loop
add
das
rcl
loopne
insb
fdivrs
jecxz
outsb
mov
shll
roll
int
mov
or
pop
insl
orl
and
fcoms
cwtl
in
xlat
dec
mov
jbe
arpl
enter
rclb
std
or
cmp
lods
pop
inc
stc
add
mov
push
lock
es
jp
in
push
cmc
add
jno
push
xchg
cmp
rcrl
es
testb
out
xchg
sbbl
jns
dec
add
inc
mov
adc
push
sub
or
lds
mov
dec
fs
dec
mov
dec
stos
adc
xor
mov
inc
mov
inc
arpl
jb
out
jnp
mov
cmp
in
cli
mov
cld
mov
int
cmp
sarl
ficoms
repz
pusha
mov
xor
and
subb
icebp
arpl
cmp
dec
push
push
pop
popa
into
loopne
mov
xor
loope
sub
repz
cli
test
arpl
push
add
cmc
hlt
test
std
sbb
mov
or
adc
sub
fisttps
push
bound
adc
adc
inc
aas
call
xchg
cmp
jle,pn
cmp
push
in
in
js
les
mov
xchg
repnz
mov
mov
fstp
loop
cltd
sbb
mov
in
push
stc
adc
jne
add
iret
dec
push
leave
into
cmp
lret
jg
imul
inc
cmc
push
pop
lods
fcomp
cmp
mov
dec
fsub
mov
xchg
bound
scas
xor
imulb
dec
inc
outsl
or
fimuls
dec
or
push
push
loope
mov
lds
fucomp
xlat
dec
out
jecxz
into
sti
pusha
dec
fildll
insl
andb
pop
jl
and
ret
inc
mov
fmull
outsb
jns
pop
ss
mov
sbb
out
imul
stc
shll
xchg
in
dec
lods
aaa
xlat
sbb
pop
mov
fucomip
adc
lea
xchg
xchg
mov
cmp
stos
push
cmp
pop
adc
add
sbb
sahf
ja
jmp
loopne
jg
rcrl
fimull
cld
or
xchg
dec
and
xlat
clc
pop
pop
jb
adc
negb
inc
mov
dec
sbb
in
sbbb
loope
mov
xor
adc
mov
cmp
fmull
testb
push
mov
and
clc
cld
out
int
mov
inc
add
lods
jl
mov
int3
mov
mov
push
shr
pop
xor
dec
xchg
mov
orl
nop
mov
mov
dec
inc
mov
in
shrb
xchg
push
rolb
ljmp
fs
imul
pop
jle
push
jns
scas
mov
loope
rcrl
std
xchg
daa
mov
call
das
aas
ret
fs
pop
pushf
cmpsb
cmp
mov
lods
mov
in
ja
addb
sbbl
rcrb
dec
lahf
in
pop
imul
jl
add
jecxz
cmp
jb
or
xchg
push
xchg
mov
dec
xor
push
mov
bound
mov
mov
roll
add
inc
mov
or
pop
subb
daa
mov
xor
push
std
dec
imul
jne
inc
and
pop
push
daa
mov
push
lea
shr
shlb
dec
push
fiaddl
and
imul
out
scas
fldenv
inc
jp
mov
lret
repz
cmc
sbbb
xchg
jbe
outsl
mov
mov
lds
aaa
push
and
pop
roll
pop
rclb
add
mov
enter
ret
adc
xchg
cli
lods
mov
in
inc
ljmp
mov
or
jne
fstl
sahf
pusha
incl
orl
push
mov
or
loop
jnp
mov
fcoms
lea
out
lret
mov
add
push
mov
inc
fidivrl
pop
rcll
lods
pop
sahf
mov
cltd
lds
sbb
or
iret
inc
mov
xchg
cmp
aam
inc
mov
mov
fistpl
xlat
or
jae
sbbb
ljmp
adc
jae
inc
cmp
mov
bound
cmp
sub
hlt
orl
in
outsl
mov
mov
fidivl
or
xchg
stos
orb
fld
ret
call
imul
dec
sbb
es
sbb
jp
dec
lcall
dec
fwait
cld
test
sarb
pop
cmpl
push
jg
js
ja
push
sbbb
xchg
sbb
or
pop
mov
xor
jne
cmpb
fisttps
popf
xor
cwtl
mov
cmp
xchg
shl
in
out
add
lahf
pop
fstpl
roll
icebp
dec
xchg
cmpb
jae
jecxz
imul
loop
mulb
bound
sbb
adc
out
mov
movsb
icebp
add
mov
mov
pushf
xorb
mov
cli
jg
cmc
pushf
mov
xor
mov
out
dec
mov
enter
push
adc
pop
lea
clc
repz
inc
mov
xchg
insl
aad
mov
in
lods
pop
inc
into
stos
enter
int3
arpl
mov
add
push
push
std
negl
push
popa
divl
xchg
pop
outsb
repnz
loope
push
shll
push
negl
orl
aas
jne
daa
aad
xor
mov
jnp
jns
mov
xchg
pusha
aam
cwtl
adc
loopne
gs
roll
loop
xor
xchg
or
dec
rorb
xor
mov
pushf
mov
xor
rclb
and
and
sbb
mov
test
cli
aas
pop
cmc
fnsave
sub
xchg
arpl
inc
sub
loope
add
lock
icebp
rolb
fwait
icebp
outsb
mov
push
lcall
push
xlat
stos
xchg
xlat
push
mov
adc
xchg
add
fucomi
xchg
enter
das
xchg
loopne
pop
pop
sbb
loope
or
xor
dec
cmp
iret
scas
fstl
ret
push
addr16
andb
lcall
pop
out
daa
out
sahf
addr16
pop
sbb
lods
dec
scas
adc
mov
inc
push
inc
pop
sub
inc
in
sbb
cmp
fucomip
fldl
not
int3
dec
nop
sub
sahf
stos
int
and
cmp
xor
leave
cmp
mov
movb
add
mov
lods
aas
mov
mov
int3
dec
fnstenv
pop
jns
in
gs
nop
mov
iret
inc
mov
dec
ds
sbb
push
xchg
cmp
inc
sbb
outsb
popf
loop
sarb
push
movsb
les
inc
lret
pushf
pop
lret
mov
jno
es
lds
ds
and
cli
push
sbb
and
pop
call
jae
mov
xchg
rcrb
xchg
sub
xchg
scas
xor
jb
mov
inc
jg,pt
jge
cwtl
mov
inc
mov
xlat
loop
lret
out
pcmpgtd
je
dec
shlb
inc
fldl
daa
jle
lcall
mov
jmp
iret
icebp
xchg
mull
inc
jl
push
sbb
lret
mov
push
clc
push
pop
stos
or
xchg
insb
popa
jmp
mov
cmp
std
stos
and
push
mov
mov
add
stos
std
iret
aam
scas
in
push
loope
jecxz
cmp
out
jg
mov
das
iret
sbb
das
mov
pop
xchg
ret
mov
mov
lret
push
or
mov
pop
sbb
imul
repz
dec
int3
jecxz
add
fdivl
in
or
fistps
decb
in
leave
fmul
add
std
sbb
pop
ss
lock
jle
mov
cs
arpl
and
or
loop
xchg
inc
adc
fidivs
fcmove
stc
iret
mov
aam
insl
movsb
inc
mov
pusha
mov
or
ss
xlat
cmpsl
sti
push
push
mov
rcrb
jl
out
testl
orl
loopne
out
jnp
adc
int3
dec
or
out
clc
push
mov
xchg
sub
xlat
dec
mov
or
adc
push
jge
dec
clc
xchg
push
sbb
cmp
xlat
test
ror
push
add
mov
cmc
sub
sub
fs
jp
dec
sub
sbb
xor
cmpsb
cmp
push
pop
fsub
fwait
xchg
subb
sbb
test
rcrb
popf
mov
adc
leave
sub
dec
mul
adcl
shll
jae
bnd
mov
addl
push
sub
imul
cs
sbb
bound
out
mov
enter
pusha
sahf
cwtl
lea
jecxz
and
insl
xchg
xchg
ret
test
mov
pusha
xchg
xor
push
mov
mov
scas
outsb
mov
jae
shlb
xchg
xor
mov
movl
add
clc
cmp
jne
jl
add
rcl
in
lock
or
xchg
xchg
push
loop
xor
mov
inc
xchg
push
test
xchg
cld
and
sub
clc
dec
cmpsb
xchg
xlat
lret
aaa
xlat
mov
test
or
addr16
lods
rcrb
shrl
push
pushf
push
inc
pop
ret
lret
or
pop
mov
mov
in
icebp
movsl
mov
xchg
sbb
fadds
jb
in
and
jecxz
test
jb
jns
jae
fnstsw
lahf
adc
xchg
lret
adc
mov
mov
and
fdivl
and
ret
leave
hlt
cmp
insl
nop
mov
loope
sbb
aas
sbb
xor
shlb
and
or
jne
fists
aad
pop
popa
mov
nop
in
in
dec
clc
jle
sub
jge
sub
cmp
addl
enter
ss
add
adc
jg
cld
fwait
xlat
call
stc
push
mov
ja
adc
jb
sar
mov
sub
sub
in
add
jne
and
adc
fisttpll
aam
mov
test
rcll
hlt
inc
cld
test
jecxz
inc
lahf
sbb
push
hlt
mov
push
cmpsl
sbb
dec
out
xor
pop
mov
inc
js
adc
insl
inc
daa
adc
mov
daa
push
enter
mov
fdivs
xor
cli
jp
jo
lcall
in
sub
test
mov
push
xchg
xchg
pop
lret
scas
idivl
rol
push
pusha
mov
cmc
jno
mov
and
into
lods
xor
cmpsb
mov
xchg
nop
dec
inc
repz
push
int
dec
sub
mov
iret
xchg
push
xor
pusha
push
fwait
aam
je
pop
fwait
sub
lahf
push
mov
xor
push
shlb
inc
push
jp
mov
and
sahf
repnz
push
inc
pusha
inc
popa
push
std
fs
or
scas
jae
in
mov
fcomp
fisttps
or
pop
push
loopne
mov
jae
xchg
push
and
push
and
inc
scas
ret
lahf
cmp
push
decl
cmp
cmp
fildll
sub
leave
imul
cmp
pop
loop
int3
sbb
sbb
mov
insb
dec
dec
ljmp
push
lcall
jg
cmp
dec
inc
lea
jmp
cmpsl
scas
adc
jno
cmp
adc
js
xor
inc
stos
sti
push
inc
cmpsl
jp
shll
jae
pop
out
ss
test
xor
repz
add
std
pop
lods
mov
add
adc
and
jb
jmp
adc
test
xchg
fwait
cmp
mov
inc
fwait
int3
adc
mov
outsb
pop
sub
jg
or
pop
out
out
add
jg
insb
mov
prefetch
or
ds
or
push
ja
pop
leave
and
out
sbb
leave
leave
subb
xor
dec
loop
sbb
fstl
je
xor
test
mov
fs
sarl
cs
in
adc
push
and
adc
in
sub
mov
sub
aas
jbe
dec
inc
sub
dec
insl
cmp
sub
testb
leave
lods
shrb
or
daa
cmpl
sbb
adc
xchg
fcoms
ret
pop
fbld
or
mov
addr16
xchg
insl
sub
imul
xchg
sub
and
icebp
mov
jae
mov
adc
push
cmp
jns
xchg
jno
inc
xlat
mov
mov
jle
sarl
scas
jecxz
fistpll
arpl
jl
cmp
in
cmp
popf
lret
out
mov
hlt
cmp
and
cli
scas
jae
out
fisubl
push
test
push
pop
adc
addr16
xlat
lods
loopne
jo
jne
cltd
ret
mov
push
jle
inc
and
or
pop
fmul
xchg
adc
aad
jbe
je
loopw
or
data16
out
xlat
lds
out
xchg
xor
fimull
dec
and
or
movsb
imul
sub
out
test
adc
leave
cmc
shll
mov
adc
dec
repz
das
scas
adc
test
jmp
lds
js
loopne
mov
fisubrs
dec
pop
xorb
test
jb
pop
xchg
popa
xchg
mov
cmp
lock
das
test
test
and
add
movsl
out
ja
mov
and
gs
sti
mov
xchg
push
fwait
pop
xchg
int
xlat
clc
inc
adc
stc
fmul
pusha
mov
push
lods
push
cmc
nop
xchg
dec
mov
arpl
data16
movsb
mov
jp
mov
jns
xchg
fdivr
lock
ret
in
stc
cmpl
push
sub
inc
fdivrp
repz
sbb
scas
mov
movsl
leave
les
ljmp
aas
pop
or
insb
jno
sbb
push
or
ljmp
or
mov
or
call
add
mov
jae
imul
mov
mov
adc
add
sub
mov
pop
int
mov
imul
test
pop
add
dec
mov
std
mov
cltd
jge
mov
inc
jmp
add
mov
movsb
in
jo
sbb
inc
psubw
das
and
and
inc
xchg
imul
pusha
xchg
jg
push
jmp
or
or
loope
cs
jl
lock
popa
pop
adc
xchg
mov
int3
mov
mov
pushfw
cmp
leave
jge
int
adc
das
push
shll
sub
in
sub
lea
push
popf
dec
fidivrs
jae
mov
push
sbb
fyl2xp1
sub
jl
pop
adc
movsb
xchg
aas
testl
xor
outsl
js
mov
or
lock
sub
mov
repnz
rcr
push
adc
incl
lods
pop
stos
icebp
sti
adc
jno
enter
movsl
scas
negb
dec
dec
pop
inc
sahf
gs
xchg
add
popa
cld
jne
pop
aad
jp
in
cmpsl
mov
sub
xor
pop
sub
call
int3
xchg
xor
sub
mull
pop
xchg
jge
insl
imul
aaa
add
sbb
add
push
out
push
lods
mov
mov
sub
add
arpl
stc
ljmp
fmull
imul
pop
aas
enter
test
sbb
sahf
icebp
movsl
ja
dec
lods
dec
ljmp
adcl
aam
adc
xor
mov
gs
push
aas
scas
fidivl
inc
int
lahf
cltd
xchg
or
test
jnp
xchg
call
call
stc
loopne
and
in
adc
add
imul
lock
rorl
dec
sub
cltd
in
adc
roll
mov
sub
sbb
add
arpl
mov
stos
bound
hlt
fcoml
mov
jl
mov
mov
cli
movsl
jle
leave
loop
out
sbb
fidivrl
sub
ret
cmp
jle
addr16
mov
adc
and
sub
in
stc
cld
and
xchg
cltd
mov
xchg
and
mov
xchg
or
cmp
mov
cltd
pop
dec
aas
int
cmp
mov
inc
adc
cmpl
and
jns
ficompl
jae
xchg
pop
dec
nop
pop
loope
ja
add
cmpl
and
sbb
mov
adc
xlat
clc
ret
dec
dec
pop
jl
sbb
stc
movsb
or
addr16
insb
test
addl
cs
aam
cmp
mov
sti
push
inc
xlat
cmp
xchg
sbb
jns
pop
dec
sbb
jp
cmc
and
mov
xchg
aad
adc
mov
add
imul
loop
inc
ds
mov
test
les
xchg
push
rcl
xchg
mov
cltd
popa
loop
xchg
jo
mov
mov
dec
loop
cmp
fxch
sti
sti
std
pop
jl
subb
mov
enter
inc
ja
mov
rdpmc
test
sahf
and
js
inc
ss
xchg
hlt
pop
scas
or
xor
jge
outsb
out
push
neg
bnd
aam
xchg
pushf
jne
add
loope
addr16
outsb
inc
loop
scas
sbb
lds
leave
pop
push
and
and
inc
ljmp
out
adc
adc
jmp
mov
mov
add
push
iret
shl
jmp
fsts
push
test
pusha
popa
out
mov
cmp
mov
jnp
sbb
mov
inc
loop
inc
sbb
push
mov
ret
cs
sub
popf
lods
fs
inc
cmpsl
sbb
mov
pushf
sub
mov
mov
ss
addr16
cmc
test
or
stos
fwait
cli
jo
pop
jecxz
mov
iret
std
xchg
mov
in
nop
sti
or
scas
dec
addb
cwtl
nop
cmp
and
addr16
xchg
xchg
cmp
xor
mov
adc
jl
gs
cmp
das
sbb
xchg
or
add
mov
or
mov
lret
jb
mov
test
insb
mov
cs
stc
inc
mov
insb
call
inc
lods
sbb
dec
cmp
push
aas
xchg
push
pop
sarl
jle
push
bound
call
dec
adc
add
insb
and
call
dec
or
mov
mov
ds
in
cmp
daa
fsubr
push
cmp
adc
lods
pop
out
dec
popf
mov
or
or
or
sti
cmp
jne
mov
adc
mov
mov
mov
notb
push
aas
mov
pop
jno
inc
jns
push
dec
lret
imul
mov
cmp
pop
sarl
mov
jg
lret
mov
mov
xor
clc
repnz
aas
xor
pop
mov
sbb
mov
test
aam
sti
and
jns
mov
fcompl
fs
dec
inc
dec
jecxz
ficompl
movsl
sub
mov
and
call
mov
push
xchg
cmp
outsb
and
cld
nop
jl
in
jp
sahf
jb
xor
in
fidivl
pop
mov
adc
sub
es
pop
mov
fisubs
xchg
xorl
mov
mov
scas
inc
add
sbb
or
dec
or
out
jg
imul
sub
dec
add
xor
inc
pop
xchg
push
adc
jns
dec
fcomp
xchg
sub
vmwrite
imul
scas
shrb
inc
daa
push
mov
icebp
imul
mov
mov
loopne
and
in
cmc
lock
add
adc
aam
cmp
sti
sub
cltd
popf
mov
sarb
in
int
xlat
rorb
push
mov
sub
xchg
inc
cld
sbb
mov
into
sub
and
aam
clc
adc
xchg
push
lock
xorb
add
fimuls
loopne
xor
xchg
xchg
cmp
sub
cmp
nop
cmp
pop
in
cmp
aam
inc
mov
push
mov
lcall
xchg
cmpsb
icebp
es
mov
out
lahf
sarl
mov
iret
or
xor
jge
gs
mov
inc
pushl
ds
and
push
jno
pop
hlt
in
out
mov
push
iret
cmp
repnz
mov
mov
nop
adc
xorl
adc
xchg
arpl
test
aam
or
push
test
pushf
push
xchg
aas
inc
mov
sub
out
pop
lcall
lret
mov
das
rol
cmp
sahf
mov
adc
or
dec
lods
mov
jecxz
sbbl
jne
cmp
and
enter
in
cmp
jmp
ret
adc
pop
fisubrs
cli
pop
into
idivl
ss
arpl
cwtl
or
push
in
cli
jl
out
fiadds
out
jmp
hlt
out
test
test
sarl
divb
mov
push
enter
stos
mov
jbe
adc
pop
fmul
jmp
stos
mov
ljmp
push
and
mov
outsl
mov
and
or
push
test
dec
dec
iret
inc
sub
or
mov
in
inc
xor
loop
and
mov
pop
inc
mov
loop
pop
dec
stos
stos
mov
insl
sub
pop
cli
sub
fcmovnu
ds
xlat
xchg
pop
call
test
sbb
pop
setns
jbe
lods
or
mov
cmc
fstl
and
mov
push
ja
mov
test
pusha
xchg
pop
mov
xchg
mov
lret
xchg
sub
add
in
sbb
addl
subl
jmp
xchg
subl
add
dec
test
mov
inc
or
rorb
sbb
add
xor
xchg
out
mov
popf
imul
outsl
mov
lods
repz
xor
jecxz
cmp
out
imul
xchg
mov
push
ret
fdiv
int3
sbb
aad
cmp
mov
aam
cmp
xchg
pop
imull
cli
dec
pop
xor
sub
or
and
mov
enter
adc
ljmp
xchg
sahf
jb
stos
sbb
es
out
push
in
mov
sub
pushf
jmp
mov
jbe
or
jp
daa
or
jb
or
fildl
imul
add
in
outsl
mov
stc
notl
mov
scas
cltd
cmp
in
mov
mov
jo
add
xchg
pusha
dec
mov
lret
mov
mov
cmp
out
mov
fbld
jp
add
lock
sbb
dec
adc
outsl
in
mov
stc
cmpsl
sub
mov
arpl
dec
into
pop
push
int3
sar
pop
stos
or
xor
pop
sbb
clc
lock
lds
lahf
xlat
lahf
mov
adc
xor
imul
testl
cmp
aad
loope
aad
enter
inc
lret
jo
push
out
sub
cs
pop
in
test
scas
mov
jbe
movsb
test
add
into
cli
and
inc
pop
jmp
pop
fstpt
dec
addr16
stc
xlat
cltd
xchg
sub
or
jl
mov
cld
adc
ret
mov
or
jnp
and
mov
push
ret
or
pop
add
push
repz
mull
or
mov
mov
push
pop
enter
and
cmpsl
push
fisttpl
testl
aaa
adc
pop
ret
mov
sub
movsl
cmpb
adc
sbb
and
sbb
push
jnp
adc
std
imul
in
inc
push
daa
push
adc
js
lock
dec
arpl
mov
and
lret
fs
adc
ljmp
enter
pop
shlb
aam
push
sub
rcll
cmp
push
pop
and
and
mov
fdivl
stos
inc
cs
adc
in
stc
mov
mov
xchg
scas
rcrl
sbb
pop
aad
push
mov
jp
pushf
jp
stos
mov
std
mov
aas
imul
pop
mov
scas
jae
inc
je
xlat
mov
lret
mov
imul
pop
pushf
or
addr16
sbb
dec
mov
insl
cmp
cmp
mov
jg
inc
jnp
imul
int
outsb
push
inc
inc
push
lods
push
mov
mov
aaa
rcll
fs
adc
mov
sbb
lods
pop
mov
push
or
aad
mov
mov
dec
sub
mov
in
and
pop
dec
xchg
jle
lcall
lcall
or
aad
movsb
or
aaa
movsb
mov
inc
push
or
js
cwtl
sbb
mov
and
ja
mov
push
stos
scas
loope
mov
inc
in
pop
outsl
jae
sbb
and
or
jmp
inc
add
mov
idivb
push
xchg
xor
inc
xchg
int3
mov
or
and
stc
mov
cmpsl
jle
loope
push
push
or
sbb
mov
xor
mov
outsl
insb
int
dec
pop
pop
sbb
hlt
scas
pop
sub
fcomp
push
or
dec
push
add
in
xchg
dec
fidivs
imul
dec
dec
mov
push
daa
fistpl
mov
lahf
pop
push
lods
cltd
push
inc
lret
daa
mov
gs
in
dec
mov
mov
xchg
rolb
jns
iret
es
and
ja
pusha
fnsave
ss
stc
cli
ret
das
aaa
inc
inc
adc
loopne
push
inc
popa
xchg
mov
xor
mov
in
pop
into
enter
outsl
jle
ss
stos
lahf
pop
inc
vcvtps2pd
add
xchg
scas
mov
in
xchg
jae
and
pusha
push
and
mov
adc
and
push
hlt
scas
xlat
or
fs
iret
mov
fldcw
adc
aad
insl
subl
outsb
pop
inc
jl
push
dec
mov
and
jo,pn
pushf
fsubr
mov
or
stos
mov
cmp
xchg
xchg
ss
sti
dec
popf
loopne
out
pop
adc
hlt
aas
pop
out
lods
adc
add
scas
mov
jmp
cmp
xor
fisttpl
ret
pop
mov
test
test
add
dec
ljmp
shlb
leave
iret
test
or
add
jbe
add
xchg
mov
xchg
pop
or
mov
push
pop
push
cld
pop
lret
cmp
jmp
test
test
stos
and
inc
inc
and
sbb
dec
cmp
xorb
mov
mov
cmp
or
and
fsubs
rcrb
xchg
mov
ljmp
pop
lods
je
push
fldl
mov
pusha
dec
cmp
hlt
jge
repz
sbb
in
out
pop
mov
adc
sub
xchg
push
shll
xor
inc
mov
sbb
mov
cmp
stc
dec
add
repz
jo
add
outsl
push
lcall
jbe
and
dec
pop
jne
adcb
adc
and
jp
mov
adc
in
mov
add
les
jp
aaa
shlb
data16
rol
push
jno
adc
aad
inc
sub
lcall
movsl
lret
pop
pusha
adc
leave
inc
mov
fisubrl
rorl
mov
push
rcll
andb
movsb
mov
inc
cmp
xor
out
int3
roll
add
clc
scas
int3
sbb
add
out
inc
and
imul
push
pop
lock
cs
jnp
xchg
sub
sbb
not
xor
inc
and
imul
push
push
inc
les
push
or
jnp
jmp
cltd
sbb
inc
and
or
mov
test
mov
mul
mov
jg
sbb
add
sbb
adc
push
shrb
sub
inc
and
mov
and
dec
lds
xlat
imul
test
jae
xor
cmp
insl
scas
or
nop
mov
aam
lds
xchg
mov
or
xchg
xchg
mov
fdivl
pop
dec
fstpl
xorb
inc
je
pop
das
dec
pusha
pop
pop
sbbl
aaa
mov
dec
adc
or
dec
sub
inc
pop
xchg
insb
mov
fdivs
inc
dec
addl
mov
arpl
jp
mov
mov
insb
cmp
cmp
or
push
push
mov
xor
jle
cmp
jmp
mov
or
cmp
mov
xorl
jbe
pop
xor
aas
mov
sbbl
xchg
sub
or
mov
xchg
jo
lods
xchg
or
mov
inc
mov
xchg
repnz
bound
mov
pop
or
daa
inc
push
or
push
cmpsb
andl
stos
jecxz
leavew
dec
jl
je
lods
arpl
loopne
push
rclb
fwait
jl
jno
dec
ljmp
lret
aad
cmp
and
push
stos
push
adc
push
add
push
cmpsl
lock
ds
xchg
mov
sahf
js
add
sub
cmpl
add
notb
or
push
mov
sub
lcall
leave
gs
roll
mov
jmp
cmp
insl
jbe
hlt
cmp
xchg
cmpsl
inc
jp
jmp
adc
cmpsb
sbb
and
and
mov
rcl
fs
and
jb
xchg
dec
aas
call
outsb
adc
inc
cmc
push
jbe
repz
mov
test
mov
gs
xor
lahf
ja
jns
pop
fbld
mov
or
xchg
push
mov
movsl
pop
das
cmpsl
call
xor
lret
ljmp
lret
dec
scas
sbb
aad
dec
popa
imul
xor
adc
jge
scas
inc
adc
dec
adc
je
loopne
cmp
cli
pop
jns
mov
popl
daa
or
dec
sti
xchg
mov
inc
mov
decl
jne
mov
and
ret
mov
add
nop
enter
repz
outsl
inc
pop
xor
je
int3
scas
imul
mulb
push
aam
mov
das
jbe
aas
fstp
aaa
orl
outsb
jge
mov
cmpsl
mov
mov
inc
sub
sub
add
sti
aam
sahf
xchg
test
push
outsb
idivb
pushl
test
scas
lea
push
pushf
or
or
dec
lods
outsb
push
push
xchg
lock
mov
sub
pop
add
dec
lea
hlt
adc
popf
sub
in
mov
imul
or
jl
subb
jb
fldcw
out
xor
das
out
dec
xchg
outsb
jecxz
adc
imul
int3
mov
inc
mov
roll
adc
pushf
push
out
push
xlat
inc
or
xor
push
mov
push
pop
xor
shl
dec
push
or
mov
fdivrl
mov
data16
adc
sbb
insb
lods
sbb
pop
aad
push
xor
add
xor
xlat
sub
jno
or
mov
in
or
xchg
add
jnp
pop
insb
sarl
pushf
and
adc
in
fmull
xchg
mov
sub
xor
in
lahf
repnz
and
mov
cwtl
test
cmpsb
xchg
xor
mov
jg
pushf
inc
dec
cmp
leave
adc
xor
jno
jo
lahf
gs
jge
fsts
aas
push
mov
movsb
add
add
push
js
ss
hlt
sub
adc
push
add
mov
shlb
cmc
mov
enter
mov
gs
ret
mov
sbb
add
mov
pushf
jne
inc
jns
push
and
out
pop
icebp
shl
or
jmp
push
sub
xor
lods
and
lret
jmp
pop
sub
stc
pushf
fnstenv
and
shll
sub
xchg
sub
mov
jo
out
or
jg
lcall
arpl
rcr
movl
and
sub
sub
iret
or
mov
inc
loope
stos
movsl
jp
inc
pop
sub
scas
aam
sub
xchg
mov
jl
and
arpl
pushf
addr16
pop
mov
daa
lahf
jno
mul
add
mov
mov
mov
mov
push
lahf
les
lods
popa
mov
sbb
sti
pop
push
jns
add
add
pop
data16
adc
sti
add
test
jbe
mov
jnp
call
push
lods
inc
pop
outsb
shll
movups
xchg
pushf
adc
sub
push
jnp
shlb
mov
dec
lock
dec
xor
pop
stos
xor
dec
ja
inc
xor
fists
sti
or
repnz
fistpl
xor
push
xor
fiaddl
aad
jle
out
enter
gs
out
or
test
subb
mov
sub
fs
cmc
jge
xchg
sahf
in
lret
adc
div
gs
aam
or
mov
lock
test
stos
cmpl
mov
or
jne
sbb
lods
movsb
and
ds
add
mov
push
push
rolb
inc
and
adc
loop
jle
in
add
xor
mov
loopew
movsb
fistps
pusha
jbe
mov
cltd
imul
xor
cmc
aas
pop
jne
mov
mov
mov
sete
inc
push
xor
pop
mov
sti
pop
out
lock
mov
outsl
add
inc
loope
sti
sahf
jnp
ds
nop
pop
mov
jle
daa
ret
lea
mov
lret
hlt
mov
pop
mov
fstps
ljmp
out
inc
add
fnsave
imul
or
mov
lea
pop
ss
adc
shlb
call
mov
lcall
cmp
daa
jno
or
or
jl
cltd
pusha
test
cmp
xchg
xor
adc
fcoml
xchg
mov
jecxz
mul
cmp
jmp
fs
repz
imul
and
sti
push
pushf
cmp
inc
movsb
imul
addr16
movl
mov
je
or
xor
push
xchg
daa
add
jle
cli
push
pop
inc
ds
aas
adc
sbb
jae
iret
and
popf
stos
jl
dec
xchg
push
sbb
js
mov
xor
sbb
dec
mov
or
pop
scas
add
in
pop
dec
movsl
loope
push
sub
xchg
adc
jne
push
mul
or
push
cwtl
das
aam
cwtl
shrb
sbb
mov
sub
jb
es
lret
mov
cmpsb
sub
sub
fidivs
adc
ljmp
out
pop
div
fsubl
pop
cld
ja
movsl
add
add
cld
popf
cmp
adc
mov
icebp
or
lea
add
shll
jnp
cmpsb
dec
push
jl
aas
cmp
das
xchg
insl
cli
mov
mov
das
mov
test
push
stos
mov
lret
mov
fstl
call
xor
adcl
and
fwait
dec
popf
repnz
mov
stos
inc
jmp
or
xchg
push
std
inc
loopne,pt
sbb
and
or
mov
icebp
je
cmp
sub
or
cwtl
inc
movsb
fisubrl
enter
es
push
sbb
fidivrs
stos
sub
mov
sbb
xorb
movl
fstpt
lods
cmp
mov
mov
int
fwait
cltd
inc
jnp
mov
inc
mov
stc
pop
lahf
mov
mov
jecxz
pop
adc
enter
mov
out
mov
scas
test
popf
cltd
lods
or
push
fimuls
inc
lods
test
call
push
lahf
pop
push
loopne
xchg
out
addr16
test
ljmp
sub
add
in
repnz
jbe
ljmp
and
rorl
loopne,pn
and
cmp
ds
je
xchg
or
shlb
jecxz
out
xor
cwtl
mov
sbb
jmp
pop
cmp
inc
mov
push
fildl
pop
data16
ss
mov
je
fsubrl
push
fiaddl
dec
out
cld
scas
add
loop
cmpsl
in
xor
out
mov
mov
idiv
mov
popa
into
adc
clc
inc
mov
enter
mov
or
lods
mov
xor
inc
or
sub
push
ljmp
subb
fincstp
adc
pop
out
ret
xchg
dec
shlb
dec
mov
pop
cmp
mov
xchg
dec
js
test
je
pop
adc
mov
lret
roll
movsb
xchg
ds
dec
jp
mov
hlt
js
or
push
insb
js
xor
or
mov
mov
xchg
ljmp
aas
push
dec
sub
or
aam
push
lcall
push
mov
dec
into
hlt
dec
fldt
inc
and
xchg
mov
bound
ffreep
push
pop
cwtl
or
push
inc
movb
xor
mov
bound
dec
jmp
inc
and
push
jno
rclb
jne
jns
and
push
or
xchg
mov
sahf
adc
enter
aam
jnp
aas
and
mov
popa
xorb
ret
mov
stc
pop
clc
push
icebp
mov
add
movsb
popa
jge
jns
xor
and
faddl
push
loop
fdivs
mov
loopne
scas
dec
lret
loopne
ds
out
pop
xsave
xlat
adc
mov
mov
xchg
jp
test
xchg
loopne
sbb
loopne
mov
dec
les
arpl
and
jle
fsubl
sub
loope
stos
or
gs
jle
inc
push
shll
or
frstor
or
mov
and
pop
cld
daa
dec
aas
sbb
rolb
nop
lret
mov
jp,pn
xchg
sub
insb
cld
sub
fmull
lret
inc
bound
jmp
leave
xor
mov
into
xor
or
mov
xchg
outsl
pop
outsl
je
xor
cli
xchg
loope
jae
cmpsl
jp
push
sbb
xchg
icebp
push
loop
ror
push
jne
adc
xlat
xchg
xor
push
lods
into
enter
testl
fimull
dec
in
clc
ja
add
stc
repz
adc
icebp
xor
test
push
inc
shrl
jbe
jg
pop
ret
adc
lret
or
or
mov
cli
xchg
out
subl
pop
mov
out
xor
aad
aas
nop
aaa
mov
pop
xchg
jae
pop
je
push
aam
and
xlat
adc
sub
hlt
lods
push
push
lcall
xchg
stc
ret
scas
addr16
icebp
sub
das
push
jne
pop
in
aas
mov
adc
fxtract
inc
or
jo
cmc
xorb
push
call
inc
push
test
xlat
inc
or
rolb
push
and
add
dec
mov
mov
mov
adc
sti
dec
jg
es
pop
repnz
repnz
mov
stos
fimull
pushf
dec
pusha
pop
adc
xor
adc
mov
inc
les
loop
loopne
mov
jb
stos
cwtl
lds
jmp
std
jmp
rorl
imul
pop
aas
rcr
xchg
jbe
fincstp
mov
sti
jbe
lret
mov
cmp
sub
jl
add
dec
sub
inc
fisubrs
jmp
test
ds
inc
jg
rcrb
in
pop
out
or
pusha
push
stc
nop
lret
mov
test
movsb
pop
xchg
mov
leave
sarl
xor
xchg
sti
arpl
jb
adc
inc
jns
xor
or
out
jg
lods
cmc
int3
adcl
mov
and
je
lock
test
inc
pop
orl
mull
dec
cli
in
sbb
sbb
xchg
cld
and
fisubrl
mov
sub
aaa
add
subl
cmp
bound
xor
push
xchg
cltd
sbb
stos
push
pop
and
inc
rorb
out
inc
cli
je
out
into
mov
loop
pop
pop
or
shlb
and
movl
cmp
stc
pop
mov
movsb
push
push
cmpsb
add
sub
mov
mov
fldcw
ss
jo
ret
jmp
sub
imul
or
sub
xor
leave
pusha
mov
sbb
iret
mov
sub
push
cli
xchg
dec
push
xor
dec
xchg
jb
mov
push
or
mov
outsb
push
mov
mov
ret
cmpsb
fwait
pop
mov
ljmp
sub
jno
mov
imul
jecxz
cwtl
clc
aad
test
mov
movsb
push
sub
iret
lods
pop
xchg
inc
push
sarl
ljmp
and
dec
in
sbb
mov
in
push
mov
sbb
arpl
cld
jle
fwait
pop
lods
xlat
xor
sbb
adc
das
fcoml
cmp
stos
imul
scas
mov
int3
icebp
push
jns
dec
and
sub
xlat
push
mov
and
js
stos
aam
add
lock
jb
cmp
mov
cmpsb
xorps
inc
pop
sub
lds
sahf
pop
pushf
mov
cwtl
jnp
mov
loope
pop
cmp
sbb
cltd
imul
push
pop
or
int3
movsb
popf
mov
shrl
and
es
add
test
lcall
es
xchg
bound
push
pop
leave
or
fadds
lods
fs
mov
sarb
pushf
xchg
ret
dec
adc
sti
push
add
pop
xchg
mov
cmp
pop
xor
mov
xchg
jae
loope
sub
inc
lea
mov
fcomip
sahf
dec
push
cld
jnp
xchg
imul
mov
jo
cld
inc
and
xor
and
dec
lret
nop
mov
aas
pop
adc
jne
loopne
int
add
dec
mov
dec
mov
jnp
into
mov
leave
xchg
mov
aas
dec
adc
gs
add
insl
cmpsb
leave
jmp
lret
sub
sti
add
stos
and
lods
lods
test
cvtps2pi
ja
jnp
mov
stos
mov
push
mov
inc
lods
leave
xor
jp
pusha
pop
aam
jbe
and
adc
std
aam
cwtl
ret
fwait
jo
fsts
sub
sbb
fstl
movntq
mov
fwait
cli
in
push
xchg
pop
sahf
or
hlt
mov
jle
sub
sbb
out
mov
insb
and
inc
or
into
and
sub
int3
inc
or
not
arpl
adc
popa
movsb
sub
dec
cmpsb
stc
or
rol
ljmp
aas
pop
mov
jns
inc
lods
mov
mov
dec
mov
adc
arpl
cmp
or
push
inc
and
mov
call
xchg
out
std
stos
xchg
cmp
stc
mov
ljmp
rol
sti
jmp
loop
je
lds
call
das
pop
xchg
xor
xchg
cmpsb
cmpsb
mov
sub
outsl
stos
scas
std
aam
stc
inc
std
loopne
into
sti
ljmp
push
orb
cltd
fnstcw
fidivl
or
repz
cmp
mov
lods
fsts
cmp
stc
pushf
je
push
sub
stos
movsb
cmp
push
or
gs
ficomps
push
xor
shll
sbb
inc
cwtl
mov
lcall
pop
jp
je
dec
js
dec
ret
sub
adc
fstl
fcompl
or
push
js
icebp
push
divl
gs
jg
test
ss
ljmp
sub
and
or
aas
cli
testl
and
pusha
mov
rclb
ja
les
hlt
pop
mov
lds
ret
xchg
cmpsl
pop
pushf
clc
push
out
or
jno
adc
sarb
scas
sbb
xor
or
push
iret
adcb
imul
call
inc
out
sarb
adc
scas
fadds
and
push
test
cltd
jno
jbe
dec
cltd
jmp
test
lods
dec
cmpsb
fs
dec
mov
rclb
xrelease
dec
ja
and
push
xor
mov
ja
mov
loope
lahf
out
push
lds
jmp
add
insl
jae
sarb
jns
into
clc
imul
out
mov
xor
hlt
popa
fsubrs
dec
xor
dec
mov
dec
cmp
xor
mov
test
xchg
xor
adc
xchg
pop
std
js
pushf
repnz
or
loope
add
lahf
dec
sub
jecxz
or
pop
rorb
stc
jnp
or
lret
xchg
inc
jecxz
lods
dec
dec
jnp
pop
nop
mov
mov
jb
cmpsl
cmp
lods
mov
call
sbb
or
xlat
pop
sub
fildl
mov
xor
cwtl
cwtl
adc
imul
daa
dec
add
and
dec
pusha
dec
fldenv
push
test
add
out
nop
js
jne
test
fbld
jmp
sbb
xor
xchg
test
ljmp
adc
sbb
lea
out
or
stos
cmp
and
jbe
mov
movsl
sbb
xchg
das
push
rcl
ds
outsl
popa
sub
mov
jmp
outsb
into
and
add
rol
push
popa
xchg
out
aaa
test
clc
ficomps
orl
and
add
sub
add
jno
push
cmc
dec
popf
push
loop
sti
sbb
out
sti
aas
add
sbb
lret
cmc
xor
inc
jge
fnstsw
in
add
xchg
icebp
fidivs
inc
mov
sbb
mov
repnz
jo
lret
mov
xchg
xlat
push
push
xchg
dec
loopne
imul
hlt
test
pop
test
push
jge
dec
inc
nop
pushf
add
popa
outsb
sub
enter
cmp
xchg
jl
sbb
arpl
adc
push
mov
shll
call
dec
shl
testl
sarl
test
mov
mov
cld
inc
push
pop
faddl
aam
pop
jge
cmp
stos
aam
lods
adc
cmp
xchg
push
fisttpl
cmp
nop
test
mov
inc
add
or
dec
outsl
test
int
out
add
push
mov
cld
imul
gs
push
mov
test
lds
test
push
xchg
fnsave
cs
mov
xchg
sbb
outsl
gs
inc
mov
clc
lcall
jmp
or
in
nop
xchg
cmp
icebp
push
test
sbb
and
mov
ljmp
mov
jbe
and
test
out
cmp
repnz
sbb
push
xlat
das
or
in
adc
or
call
fwait
add
inc
xchg
adc
mov
dec
xor
or
mov
push
pop
mov
sub
push
hlt
jae
jge
out
inc
jnp
xor
mov
add
test
sub
push
insb
mov
fcmove
dec
sbb
addr16
aam
repz
ds
xchg
out
lods
je
add
adc
pop
xor
in
or
mov
pusha
add
lds
ret
or
xlat
fs
mov
scas
sbb
mov
iret
push
mov
xchg
rcrb
pop
neg
cmp
mov
push
pop
pop
and
mov
push
out
dec
mov
outsl
cmpsb
xchg
test
xchg
inc
and
jl
sbb
imul
sbb
nop
outsl
pop
popf
gs
stos
sub
call
jge
mov
rcl
lock
or
std
dec
lea
xor
inc
sbb
clc
push
jo
xor
sub
ret
sub
bound
sbb
mov
movsl
mov
dec
cltd
dec
sub
into
or
sub
jp
in
sti
sub
jge
dec
pushf
aad
test
pop
mov
ds
sti
push
jp
shll
pop
test
in
in
gs
lcall
sub
adc
cmp
push
decl
mov
data16
sbb
push
inc
lds
mov
mov
hlt
pop
sti
add
jecxz
sub
push
loope
sub
mov
push
mov
push
jl
nop
rcll
jo
std
divb
jmp
cltd
push
jbe
lea
int
sub
loop
repnz
cmp
push
in
inc
sbb
jb
jg
push
ds
sub
jae
jecxz,pn
pop
mov
dec
pop
mov
xor
xlat
dec
insl
pop
cld
jnp
xor
cmp
fidivl
push
in
inc
pop
int
dec
push
mov
pop
arpl
pop
sbb
dec
mov
cmc
jecxz
into
sub
lret
mov
pop
push
pop
cmp
inc
int
push
subl
test
mov
mov
xor
rorb
dec
xor
faddl
arpl
mov
mov
inc
adc
and
ljmp
xchg
mov
adc
cmpsl
lcall
test
roll
arpl
dec
inc
call
add
ds
pop
cmp
push
ss
in
mov
xchg
loope
jnp
xor
in
inc
in
lcall
lds
gs
std
pusha
rcl
pop
xchg
fmuls
pop
rorl
mov
scas
inc
sub
push
inc
push
inc
cli
xlat
xchg
out
ret
and
iret
js
xor
adc
dec
loope
push
add
jbe
adc
jle
jl
xchg
pop
cmpsb
cltd
xchg
es
or
xchg
gs
rorl
sbb
into
aas
add
add
bnd
push
call
cld
xchg
outsl
icebp
cmpsb
jae
fldl
jbe
negb
xchg
xchg
xchg
mov
pusha
push
out
movsl
push
les
adc
mov
repnz
sub
fcos
aaa
dec
pop
and
aas
xchg
insb
repz
cmp
test
cs
popa
outsb
push
aas
xchg
mov
dec
lock
outsb
add
sub
test
mov
push
jp
iret
sbb
arpl
idivl
dec
mov
loopne
and
mov
or
add
cmpsl
pop
xor
fbstp
test
ficoms
add
cwtl
adc
add
dec
shlb
dec
cmpb
xchg
pop
add
push
sbb
jbe
mov
fisttpll
outsb
sbb
or
stos
pop
in
fimull
pop
cmp
in
fs
out
cmp
clc
addr16
bound
addl
rcrl
nop
xor
gs
sbb
pop
enter
sbb
mov
in
and
jnp
popa
cltd
xchg
inc
add
in
mov
and
and
mov
sbb
jp
lock
jmp
mov
insl
fildll
loop
sarb
push
cs
dec
mov
adc
mov
cmp
jne
jns
int
mov
mov
push
jge
pop
xchg
mov
mov
xchg
je
jbe
dec
outsb
stc
cmp
jge
loope
mov
aam
or
test
lea
mov
pusha
test
lahf
sbbb
sub
cld
scas
adc
iret
in
lea
inc
mov
mov
divb
inc
fwait
ret
xlat
iret
jp
ja
lods
into
mov
dec
adc
push
add
add
sbb
inc
mov
cmpb
inc
jns
js
bound
adc
push
and
fsubp
pop
sub
mov
jl
push
xor
and
or
and
scas
testb
ret
xchg
mov
sub
stos
or
mov
pop
in
loopne
mov
xchg
les
repz
xchg
pop
ret
jmp
lock
lret
adc
pop
sub
adc
icebp
sub
jb
loop
in
or
mov
jecxz
cmp
push
sub
xchg
mov
ret
orb
adc
mov
mov
insl
test
in
dec
fdivrs
jnp
repnz
hlt
dec
cltd
dec
in
sub
mov
sub
js
nop
mov
std
jle
insl
repz
dec
cmp
xchg
jns
into
mov
inc
orl
test
and
xchg
pusha
sbb
dec
xchg
jb
jmp
mov
jo
add
int
jns
nop
push
fwait
cmc
sbb
mov
sbb
call
cmp
add
pop
and
add
jbe
inc
mov
in
jnp
aad
xchg
mov
xor
mov
cmp
pop
outsb
or
adc
and
mov
movsl
xor
mov
jns
pop
dec
xor
pushl
jno
pop
add
or
mov
mov
out
int
scas
comiss
loope
jns
xor
add
xlat
outsl
pop
int3
mov
jle
testb
pop
adc
mov
cld
jae
add
and
int
xor
mov
and
andl
mov
imul
popa
adc
xor
pop
cmp
rorb
xor
les
aam
daa
add
pusha
xchg
mov
add
jns
jge
mov
pop
divl
je
cmp
into
sub
pop
adc
fsubl
jno
or
and
push
fbld
xchg
nop
movsl
mov
stos
shl
int3
push
push
sbb
or
jne
shr
sti
iret
jp
mov
inc
mov
push
sarb
test
addr16
dec
test
shrl
dec
jbe
popf
fnstcw
icebp
fwait
xor
popf
push
mov
cld
notl
xchg
xor
xchg
faddl
movsb
mov
fsubrl
mov
insl
aaa
add
xchg
push
inc
ret
push
inc
call
out
pop
pop
scas
inc
outsl
pusha
daa
adc
or
jmp
out
xor
push
in
mov
lcall
push
jb
out
insl
lock
std
roll
push
lcall
icebp
xor
fisttpll
rcll
mov
loope
lods
popf
cmp
stos
sbb
inc
push
hlt
dec
shr
or
pop
es
mov
ret
dec
sub
nop
sbb
mov
or
push
mov
imull
mov
inc
jne
in
jg
pop
cmp
push
pop
lods
pop
sbb
insl
adc
pop
je
aad
push
xchg
ds
icebp
xor
icebp
dec
mov
je
aam
pop
adc
push
shll
jne
outsb
pop
stc
pop
pop
pop
or
push
pop
cmp
hlt
aad
mov
push
out
int3
cmp
sbb
lret
jae
fdivl
js
es
cmc
bound
or
stos
push
mov
pop
jnp
mov
dec
dec
push
push
inc
inc
fadds
inc
repnz
iret
test
lret
bound
scas
sahf
sbb
lds
pusha
inc
int3
mov
and
aam
and
repnz
js
jbe
fwait
std
cmpsl
sub
xor
js
icebp
adc
scas
insl
inc
xchg
cmc
lds
push
lock
cmp
negl
in
fwait
jmp
jnp
sbb
or
shlb
add
cs
pop
sub
add
fs
and
stos
loopne
popf
repz
aam
int
loop
cmc
cltd
xor
int
mov
ljmp
repz
cld
test
add
push
lock
cld
test
lret
jns
and
mov
lcall
add
mov
ret
and
mov
cli
ficomps
mov
icebp
dec
mov
xchg
pushf
jg
lret
fwait
sub
out
jl
sbb
sub
or
mov
dec
adc
sub
lcall
aaa
dec
lods
push
pusha
int3
gs
dec
sub
pop
out
mov
pusha
ds
and
or
sbb
bnd
int
mov
lret
or
jnp
hlt
gs
out
shrl
inc
sub
jb
sub
mov
rclb
inc
in
outsb
jb
sub
pop
mov
enter
jmp
repnz
or
loope
xchg
bswap
jb
jge
mov
cltd
ret
fidivl
cmp
hlt
cmp
test
cmp
int
jns
adc
test
cltd
sub
cmpsb
mov
xlat
test
scas
mov
pop
jecxz,pn
push
fld
jmp
sub
dec
sahf
loope
int
and
mov
xor
dec
push
sbb
cs
xchg
add
lds
mov
jge
add
add
xchg
dec
sbb
icebp
add
fmul
loop
xchg
loope
push
fs
pushf
and
push
push
inc
pop
sarl
scas
clc
das
jecxz
jl
sub
out
inc
lock
and
push
xchg
dec
leave
insb
inc
inc
inc
jecxz
pop
xor
xor
mov
popf
fdivp
mov
pop
push
lret
mov
std
sbb
sbb
xchg
scas
and
inc
sub
test
cmp
mov
mov
adc
xchg
fwait
mov
fs
pop
in
xor
adc
cmpsl
and
xor
sub
add
jno
xchg
mov
mov
frstor
arpl
aaa
inc
and
cltd
jecxz
cmp
insb
lret
loope
push
ret
pop
outsl
sub
mov
popa
out
or
loop
sub
fstps
or
adc
in
xchg
imul
jns
mov
xchg
pop
movsl
outsl
inc
mov
js
dec
scas
mull
pushf
xlat
scas
enter
sti
push
ljmp
inc
cwtl
sub
cli
call
cwtl
add
push
xchg
arpl
aaa
je
fidivs
add
testb
mov
scas
sub
arpl
mov
jbe
call
popf
sbb
shll
lods
outsb
sub
insl
jge
arpl
mov
in
mov
lods
mov
jl
popa
xchg
imul
or
les
ds
ret
cmpsb
dec
enter
push
mov
rcrb
mov
test
sarb
das
in
inc
inc
jae
or
hlt
clc
pop
mov
push
gs
xchg
dec
and
or
jbe
mov
loop
daa
lea
push
mov
test
cmc
mov
inc
and
jno
rorl
sahf
mov
movsl
ja
or
out
insl
push
or
lret
loope
dec
icebp
rcrb
push
mov
lds
orl
ljmp
and
adc
mov
xchg
aad
xor
hlt
or
cmp
pop
cmp
jge
push
push
inc
xchg
in
test
or
stos
rorl
aas
jbe
sbb
cmp
or
dec
push
xchg
test
adc
fsubp
shrl
cmc
int
jns
rolb
cmp
push
inc
inc
adc
insb
flds
inc
cmc
mov
and
sbb
xchg
sbb
fwait
add
mov
imul
leave
aam
jle
sbb
inc
cmp
mov
cs
push
xor
push
fwait
cltd
sub
cmc
fsubrl
ret
jl
cmp
test
js
push
push
adc
lds
addl
sub
inc
cmp
mov
sub
push
xor
aaa
pop
lret
mov
ljmp
jmp
push
push
out
fists
incb
mov
jge
dec
test
mov
fwait
repz
mov
sbb
pop
shr
push
divl
xchg
xchg
adc
fisubrl
pop
add
mov
cli
outsb
lods
scas
cs
push
stc
pop
mov
push
addr16
and
aaa
fistl
cmc
jbe
movsb
insl
add
pop
ret
lret
xchg
mov
adc
add
xor
in
repnz
mov
mov
iret
sub
and
mov
xlat
jbe
adc
fisubrl
xchg
mov
and
aas
inc
cwtl
mov
sarl
les
dec
push
test
call
jecxz
mov
scas
push
repz
lahf
xchg
bound
sbb
pop
rolb
sub
dec
push
xchg
loop
out
jne
sub
cmp
xchg
rol
fildl
ror
test
or
pop
pop
mov
mov
pop
xchg
or
fistps
add
sbb
sub
sarl
aaa
cmc
sbb
popf
xorl
sub
sbb
outsb
push
mov
repz
lahf
cmp
testb
sub
shll
xlat
jl
inc
dec
ret
aad
aas
das
xchg
jp
in
xorb
out
mov
xchg
mov
aam
mov
fistps
xlat
inc
mov
fcoms
xor
xor
and
dec
lea
or
movsb
xor
jns
enter
xchg
lds
dec
sbb
movsb
xlat
pusha
es
mov
insb
arpl
bound
fcomp
or
fcmovu
loopne
sbbl
xor
test
into
cmp
mov
das
lret
stos
jp
mov
popf
xor
jne
or
lahf
mov
pop
std
sbb
in
in
cmp
shl
push
and
hlt
mov
dec
cmpl
and
push
jmp
adcb
mov
bound
shrb
addr16
xchg
lret
sbb
inc
add
or
and
adcl
icebp
pusha
push
pop
in
adc
and
movsl
mov
jb
pop
jecxz
pop
jno
jecxz
pop
jl
movsb
out
xor
inc
inc
call
cltd
mov
sti
pop
test
sub
mov
sbb
sahf
sub
imulb
icebp
arpl
in
scas
mov
adc
fistl
lods
movsl
aad
dec
jns
orl
les
arpl
inc
xchg
fmulp
sub
sbb
cmp
xorb
push
fmull
inc
and
ficoms
mov
pop
jle
jbe
xchg
outsb
fiadds
xchg
inc
fwait
push
mov
cld
push
out
pop
jno
dec
outsb
push
xor
lret
and
mov
lret
std
mov
daa
leave
mov
sbb
xorb
sbb
nop
daa
lea
add
pop
push
jno
enter
sbb
out
cmpsl
cmp
clc
test
jg
aas
or
add
stos
mov
imul
in
lea
inc
add
fisttpl
xchg
out
stc
call
push
dec
cmp
xchg
push
lahf
stos
imul
or
or
push
fwait
mov
cs
out
in
bt
lds
ljmp
aaa
mov
push
in
add
ret
add
sbb
jne
stos
hlt
pusha
mov
add
dec
xchg
daa
aam
jp
cmp
xchg
jae
cltd
sub
imul
loope
inc
inc
icebp
popf
pop
inc
and
cmp
popa
lock
dec
xorl
cmpb
jb
in
repnz
stc
outsl
inc
out
xlat
mov
push
add
dec
test
repz
mov
and
dec
xor
scas
dec
lea
sbb
mov
push
aas
mov
push
std
xchg
dec
shll
fildl
bound
cmp
insb
icebp
fdivrl
cmp
mov
pop
mov
inc
xchg
in
dec
jnp
imul
mov
incb
aaa
jae
mov
jmp
shlb
pop
sbb
jecxz
inc
push
inc
xor
pop
aad
fstp
pop
dec
adc
into
mov
ja
jne
mov
xchg
xchg
xchg
das
repz
pop
cwtl
mov
lock
ret
or
cmp
add
sub
es
stc
fwait
mov
xchg
imul
cmp
adc
dec
mov
test
int3
out
lods
sbb
adc
es
mov
sub
mov
push
pusha
mov
loope
push
idivb
mov
jecxz
lea
scas
cmp
or
mov
xchg
push
push
fiadds
xchg
xchg
and
dec
or
out
ficoml
and
mov
jae
out
call
mov
clc
dec
mov
cltd
js
sub
mov
es
dec
jne
js
mov
cs
cmp
data16
ss
lock
pop
jl
push
mov
lds
insb
in
imul
jmp
xchg
fadds
scas
adc
add
sbb
xchg
and
sub
mov
sub
inc
push
aam
cs
mov
push
mov
ret
or
std
push
dec
rcrl
add
mov
fwait
mov
push
es
jg
into
mov
mov
ret
pop
mov
ss
into
mov
addb
test
cmp
lods
inc
inc
sbb
aaa
push
negb
push
sub
sbb
mov
dec
pushl
mov
push
lds
inc
sub
test
into
and
popf
mov
xchg
imul
shll
std
jae
cld
dec
inc
stos
les
mov
adc
mov
bound
movsl
iret
mov
js
arpl
push
daa
or
lds
arpl
jbe
lret
mov
cmp
xlat
push
cmp
push
hlt
pop
fwait
mov
sub
adc
jl
adc
lret
loopne
pop
push
push
sahf
rcrl
pop
imulb
inc
shlb
adc
cmp
and
fldl
mov
pusha
lcall
movl
or
rcrb
scas
pop
pop
roll
or
pop
loope
sti
mov
cmc
fisttps
jp
xchg
ficoms
add
mov
std
mov
test
cmp
xlat
gs
cmp
leave
jg
sbb
add
and
lds
mov
jnp
out
dec
cmp
adcb
xor
loop
stos
jo
sbb
lahf
inc
loope
les
pushl
adc
mov
sbb
data16
mov
cwtl
and
sbbl
in
xchg
mov
jmp
iret
fmuls
movsb
mov
ss
loop,pn
jne
test
push
mov
pop
inc
int3
add
inc
mov
xchg
adc
jbe
ljmp
cmp
mov
std
mov
jmp
je
std
aaa
test
and
sub
or
ds
mov
popf
cmp
pushf
inc
data16
ja
pop
lea
repz
or
lret
mov
lock
pop
int
xor
sarl
sbb
jae
out
shll
jns
xchg
jg
out
jg
out
test
pop
mov
pop
decl
outsb
push
rcll
sti
xchg
mov
into
add
mov
xor
call
cmpsl
popf
int3
movsl
dec
loope
ljmp
push
jg
aaa
rclb
jbe
movsb
mov
inc
lret
and
xchg
sub
xchg
je
cmp
mov
leave
push
sub
lods
arpl
dec
or
dec
movsb
xor
add
xlat
push
decb
push
add
xchg
aad
test
adc
jbe
ja
jecxz
pushf
lods
and
push
mov
loope
sbb
pop
jae
test
sbb
incb
imul
test
adc
push
push
dec
loop
or
xor
lret
fwait
push
mov
cmp
in
push
dec
nop
mov
andl
lods
dec
inc
dec
out
idiv
cmp
leave
pop
lds
mov
sbb
outsb
daa
stos
inc
and
mov
inc
hlt
sbb
jae
std
iret
push
mov
lret
loop
sub
mov
movsl
popl
aad
push
push
add
inc
sub
mov
fwait
adcl
fsubl
lret
ficomps
pop
xchg
xlat
inc
dec
mov
jmp
pop
hlt
icebp
fs
int3
addl
push
push
adc
jp
add
dec
xchg
iret
out
pop
push
mov
mov
imul
push
jbe
std
jg
lret
mov
out
sbb
jbe
dec
cmp
loopne
shll
add
add
add
xchg
pop
push
pop
push
gs
cltd
cltd
movsl
inc
sbb
sbb
push
data16
ret
xchg
jae
mov
lret
cmp
xchg
sub
cmpsl
insb
or
imul
emms
inc
pop
inc
aad
test
fsubrs
in
dec
imul
and
push
add
mov
pop
adc
jo
xchg
xor
xor
mov
xchg
mov
aam
int
repnz
mov
pop
fnstcw
pop
ds
bound
cmp
xor
or
mov
pop
aaa
jmp
or
mov
and
lds
inc
scas
fisttpl
sub
cltd
xchg
push
dec
test
adcb
mov
cmpsb
andb
push
inc
add
out
pop
add
mov
lcall
mov
or
dec
std
fimull
ds
sbb
jl
andb
sahf
mov
add
or
rcrb
jns
adc
jo
addl
cs
cmp
sti
or
jmp
ljmp
push
ss
jnp
mov
sbb
and
push
insb
scas
lods
mov
or
or
push
fcmovu
mov
out
add
pop
mov
out
ja
aam
jnp
out
add
test
mov
cmp
aas
roll
dec
sahf
loop
rcrl
xchg
shrb
fldl
mov
mov
sbbb
ror
bound
xchg
popa
push
loope
sub
jmp
mov
in
cmpsl
aaa
push
xchg
bound
jp
imul
cmp
std
mov
xchg
mov
ficoml
inc
lahf
mov
cltd
dec
je
dec
stos
xchg
mov
sbb
sub
mov
arpl
insl
in
or
repz
outsl
test
lea
pop
lods
mov
xor
mov
ret
stc
ss
nop
add
cmpsb
icebp
dec
adc
pop
mov
subl
movsl
das
push
mov
xor
push
xchg
jmp
lock
mov
jmp
cli
and
les
push
movsl
insb
outsb
repz
jmp
adc
imul
lahf
sbb
adcb
jno
push
cltd
push
je
sub
hlt
or
jns
fcompl
and
jecxz
repz
sbb
add
and
rcrl
xchg
popa
aaa
and
adc
cmp
inc
ficoms
popf
inc
fisttpl
decl
push
mov
cmp
stc
out
insl
xchg
fldt
or
loope
sbb
sti
pop
clc
sub
popa
sub
ljmp
xchg
jecxz
push
lock
call
mov
cmp
cmp
mov
in
fnstenv
mov
jae
mov
add
in
push
lcall
iret
lcall
jo
psubsb
shrb
data16
lods
and
adc
mov
and
jns
and
inc
sub
negb
push
xor
das
pusha
push
add
nop
adc
test
out
mov
jle
push
xchg
adc
clc
lea
enter
mov
aaa
add
mov
jl
movsl
or
out
push
pop
cmp
xlat
cld
test
sub
sub
popa
pop
mov
mov
cmc
sbb
aas
xchg
adc
scas
in
jecxz
in
ljmp
imul
inc
sub
fcoml
dec
xchg
loop
and
mov
inc
cmc
xchg
jns
sbb
loop
and
cmp
mov
mov
and
or
lods
cmp
out
out
test
push
fcmovnb
and
mov
roll
mull
lcall
in
or
lea
imul
stos
and
int3
movsl
bound
addr16
push
test
sub
jne
sub
sbb
iret
lods
push
bound
mov
fists
xor
idivb
xchg
scas
lods
outsb
inc
cmpsl
pop
gs
mov
ja
cmp
xchg
cs
loopne
out
mov
ss
popf
pop
sbb
mov
scas
outsb
aad
xor
movsl
pop
jbe
mov
push
cli
pop
out
or
pop
call
mov
movsl
push
jbe
dec
ljmp
in
dec
mov
addr16
bound
adc
xchg
scas
push
xchg
ja
gs
test
negb
add
sbb
ljmp
or
das
lock
lock
cmpsb
xor
imul
in
jne
sbb
lods
ss
dec
into
lods
mov
int3
cmpsl
pop
xor
xor
push
ds
fldcw
and
rorb
je
push
add
pop
ljmp
les
fsubr
rclb
xor
std
addr16
jecxz
imul
xlat
ret
jge
js
and
add
xor
das
loopne
mov
cmp
pandn
push
iret
adc
sub
pop
lcall
jo
sub
inc
nop
xor
movsb
cmpsl
cmpsl
test
mov
mov
into
out
push
inc
fwait
cmpsb
push
mov
into
mov
mov
shll
xor
loope
insl
std
cmp
sahf
les
jecxz
lds
in
jbe
xlat
and
and
loop
push
cmpsl
lods
pop
test
lea
sbb
inc
add
cwtl
mov
pusha
loopne
mov
add
inc
xchg
jge
pop
sub
fdivr
jns
adc
mov
ja
int3
sub
xchg
les
rorl
lds
xchg
dec
addr16
mov
int
in
mov
mov
in
imul
push
movsb
inc
imul
xchg
cmpsb
add
mov
dec
mov
jp
out
xchg
and
add
xchg
or
xchg
and
sbb
pushf
inc
adcb
rorl
or
jns
scas
dec
push
es
es
xchg
xor
pop
jne
call
negl
push
rclb
xchg
pop
mov
iret
mov
test
dec
jns
insl
xlat
movnti
mov
pop
cmpsl
mov
rcrl
xor
push
outsl
jno
sbb
xchg
mov
stos
jg
insb
lods
inc
sarb
push
push
cmc
pop
mov
ja
or
jb
dec
mov
pushf
sub
cmp
inc
xor
push
mov
inc
pop
xorb
iret
rep
les
ja
test
out
cmpsl
push
ljmp
sub
inc
divl
add
leave
push
inc
cmpb
rcrb
lods
xor
inc
pop
jl
les
js
ja
sbb
fldcw
pop
ss
insb
dec
cli
dec
stos
add
ficomps
pop
push
stc
movsb
push
sbb
or
je
testb
cmp
out
pop
andl
push
insl
jmp
das
std
adc
js
add
and
and
ds
in
ficompl
push
jmp
mov
aad
aas
mov
push
test
jne
or
cmpl
jecxz
lret
push
xor
ret
in
cmp
push
mov
test
loope
pop
xchg
nop
arpl
adc
cmc
jno
lods
pop
rorb
and
fwait
shrb
repnz
les
xor
addl
notl
add
adc
sbb
or
jecxz
in
outsb
adc
mov
push
sbb
bound
jo
jge
and
in
lock
loopne
addl
arpl
popf
jno
ror
ror
ljmp
dec
loop
sarb
in
push
sub
or
jns
out
cmpl
subl
push
ljmp
nop
push
clc
movsl
arpl
xchg
lret
js
mov
ljmp
and
or
sbb
ret
cmpsb
mov
jp
push
clc
dec
int
or
pop
jns
pop
mov
push
adc
xlat
adc
orl
jne
add
dec
jle
jle
aas
mov
repnz
es
and
push
cmp
inc
in
mov
and
mov
rolb
push
jmp
bound
cmp
test
jg
or
mov
jae
adc
aaa
push
shrb
test
cmc
adc
push
loopne
pop
aas
push
idivb
pop
sub
xorb
sbb
dec
xor
jae
xchg
mov
push
add
pop
adc
jne
xchg
loopne
jns
ss
lock
push
dec
fs
jns
clc
push
xchg
insb
push
mov
jl
js
icebp
fwait
jns
push
cmpsb
jmp
push
add
xor
mov
repz
loope
ffree
int
jmp
stos
imul
stc
int
sbb
sahf
dec
push
popa
cmpsl
rorl
mov
xlat
jp
inc
out
adc
out
sbb
xor
jmp
mov
or
call
add
jae
lret
int3
test
cmp
mov
sub
cmp
jb
lcall
mov
cmp
scas
and
pop
insb
xor
icebp
push
pop
test
push
aad
inc
out
in
out
ret
push
sub
adc
aad
lahf
pushf
push
cmp
imul
lahf
jp
sbb
lret
lret
cmp
and
sub
das
or
cmp
std
sarl
mov
xor
data16
inc
jno
cmpsb
scas
loopne
les
ja
inc
enter
jbe
add
xchg
xor
bound
cmp
push
and
cmc
jg
adc
bound
and
pop
stos
xlat
jnp
pop
jg
adc
mov
lods
pop
or
cmp
fisttpll
sbb
mov
xor
imul
cmp
sub
iret
dec
aas
mov
and
inc
mov
popa
pop
lock
js
leave
lods
lea
leave
dec
lcall
jae
ret
push
jge
js
mov
mov
add
cli
subb
sti
push
mov
ljmp
repz
iret
and
ljmp
jmp
adc
push
xchg
loop
adc
imul
aam
sub
nop
in
insb
int
push
mov
jl
mov
sahf
insb
mov
and
xlat
lahf
mov
mov
popa
shll
pop
cmp
or
es
js,pn
mov
jmp
sub
mov
mov
lods
adc
and
cmp
mov
jmp
lcall
rcrb
xchg
push
add
test
leave
xor
imul
jg
push
scas
dec
clc
out
fucomip
hlt
cmp
sub
fimull
mov
or
jbe
lcall
sbb
and
dec
js
jmp
mov
xor
movsl
sbb
sub
mov
cmp
imul
aaa
sub
mov
push
in
in
push
es
adc
test
jnp,pt
or
push
push
es
mov
mov
fldenv
adcb
jnp
out
out
push
push
imul
fidivrl
insl
mov
mov
dec
lahf
xor
dec
cmc
icebp
sub
xor
jb
scas
outsl
inc
sub
fsts
cli
and
dec
adc
pmullw
jbe
fsubr
pop
or
dec
cmp
fidivs
mov
pop
jge
inc
mov
stc
mov
shr
xchg
lret
cmp
fcomip
push
fsincos
mov
xchg
rolb
xor
mov
cmpsb
and
out
jae
outsl
flds
xchg
mov
mov
in
jae
cmc
aaa
inc
fldenv
cmp
adc
stos
xor
jmp
xor
or
sbb
shrb
ret
sti
icebp
adc
test
aas
and
insb
add
repz
ss
aad
addr16
dec
fists
fisttpll
adc
cmpl
pop
in
cld
cwtl
xorb
xor
sub
adc
cmpsb
and
stos
push
jbe
ret
xor
xor
cmpsl
clc
fnstenv
insb
test
js
vpaddq
iret
cmp
mov
mov
sahf
clc
pushw
sub
mov
cmp
mov
fs
jecxz
cmpsb
cmp
into
fdivs
push
dec
int
dec
in
xor
pop
pop
int3
leave
lret
xlat
add
ret
mov
xor
inc
insl
js
sbb
sub
add
out
les
add
shlb
cs
bound
fisubl
inc
xchg
and
divb
push
loope
pop
lahf
dec
inc
lods
pop
xchg
fsubrs
add
mov
stos
sub
add
loopne
mov
call
fisubs
or
mov
xchg
int
and
lahf
jg
dec
adc
adc
xchg
add
pop
cmp
push
adc
lret
test
or
xchg
jge
dec
sbbb
test
jle
mov
sti
cmp
or
pop
lea
mov
xlat
push
mov
or
pusha
leave
negb
mov
mov
bound
xor
int3
sbb
lahf
add
sub
es
mov
mov
cmp
cmp
testb
pusha
pusha
iret
lods
gs
shl
pusha
in
jnp
sbb
rolb
popa
rclb
add
test
int3
mov
xchg
icebp
bound
setns
jae
cmovl
xchg
mov
sqrtps
xchg
int
add
or
icebp
lahf
inc
adc
pop
jo
in
cmp
xchg
fwait
jmp
or
std
mov
xchg
ja
or
insl
xchg
or
ss
dec
dec
sub
sti
daa
aam
mov
mov
dec
cmc
pop
roll
std
divb
xchg
aaa
jnp
insl
mov
rol
jmp
dec
xor
daa
clc
fstl
ljmp
and
pop
popa
jle
fs
iret
mov
mov
mov
dec
jnp
add
popa
sbb
je
sbb
jge
pop
pop
push
xchg
out
push
xor
push
shll
shll
mov
aad
xchg
popa
popa
gs
xchg
push
hlt
jbe
lock
mov
test
fs
mov
xchg
or
inc
add
mov
cltd
push
fcmovu
inc
and
pusha
lods
leave
in
jbe
pop
ljmp
mov
mov
push
imul
jl
mov
or
pop
popf
das
stos
add
popa
xor
std
test
jno
add
sub
lea
push
into
scas
pop
push
les
cmp
sub
pop
cmp
mov
mov
mov
shlb
rolb
mov
outsl
pop
sbb
mov
cwtl
xor
push
mov
mov
stc
out
cmp
push
mov
jp
jg
outsb
loope
adc
pop
inc
mov
xor
sbb
loopne,pt
cmc
js
imul
mov
pop
mov
test
jnp
adc
sub
mov
or
sub
pop
incb
cld
adc
sbb
mov
fsubrs
jl
mov
push
ljmp
in
inc
fld
out
mov
outsb
add
xor
and
push
sbb
imul
popa
subl
xlat
outsl
clc
es
mov
jmp
mov
inc
pop
inc
or
jo
mov
jae
iret
mov
movb
inc
lahf
mov
test
popf
xor
mov
sbb
cmpsl
push
dec
dec
sbb
or
scas
mov
push
xchg
int3
xor
xlat
cld
loope
call
jl
mov
ja
lahf
dec
jp
cmp
bound
aaa
dec
rcll
pop
jbe
fcoms
in
sub
scas
repnz
xor
and
imul
cmp
jae
outsb
cmp
jmp
mov
scas
xchg
jp
sbb
cmpsb
mov
xlat
jle
push
hlt
jg
iret
loopne
dec
push
mov
pop
mov
test
mov
cvtdq2ps
cltd
addl
adc
mov
adcl
jmp
insl
sub
push
outsl
mov
inc
mov
les
xor
and
xlat
inc
xor
cmp
fwait
mov
in
cltd
ljmp
outsb
lds
jb
pop
push
add
sti
pop
lods
cmp
pop
js
jmp
bound
jg
inc
pop
ss
insb
repz
xchg
inc
jne
stos
std
and
cld
push
enter
adcl
mov
dec
dec
mov
dec
jb
sub
jnp
pop
rdpmc
cmp
push
cmc
nop
mov
sbb
lahf
movsb
es
mov
insl
jmp
loope
inc
pop
insl
pop
xchg
inc
jb
mov
jb
pop
ja
sub
mov
jle
fcomp
cmc
sbb
loope
adc
in
push
and
and
loopne
stos
cmc
cmpl
pop
inc
pop
movsb
xchg
jecxz
jp
jg
nop
jl
xchg
test
sbbl
pop
push
test
inc
pop
in
sbb
insl
mov
inc
aam
sti
jae
push
mov
into
test
mov
xchg
ret
rorb
rcrl
fiaddl
shl
xor
pushf
and
pop
repnz
or
hlt
cmpsl
aam
pop
ficoml
push
lahf
lods
and
lret
push
repnz
scas
pop
sbb
lea
mov
sub
data16
mov
pop
sub
clc
fs
mov
in
sbb
lahf
sbb
nop
ret
and
out
adc
lcall
hlt
mov
add
aaa
sub
sbb
pop
inc
popf
test
mov
stos
inc
enter
mov
aad
cmp
ffree
add
insb
mov
jns
mov
arpl
jl
push
and
sahf
pushf
idiv
lahf
fists
mov
fisttpll
xor
test
iret
add
mov
or
hlt
cmp
xchg
and
out
xchg
fwait
in
int3
cmp
fsubs
subl
cmp
cmpl
sti
out
arpl
add
int3
int
mov
mov
pop
ret
cmp
js
jmp
pop
dec
out
enter
mov
cmpsl
ret
loopne
pop
leave
push
and
cli
mov
and
movl
add
cli
inc
sbb
popa
and
mov
push
jg
jecxz
jns
cmpb
mov
inc
or
sahf
movsl
repnz
jno
ss
mov
mov
sub
jle
cmc
and
imul
dec
inc
pop
pop
xor
leave
ficomps
or
aam
pop
loop
lods
xor
sub
daa
pop
jno
add
out
inc
and
out
dec
pushf
cmp
add
cli
add
inc
mov
sub
jmp
stc
and
popf
mov
nop
lret
hlt
loopne
ret
and
mov
int
sbb
push
in
mov
lahf
andl
adc
pusha
mov
dec
int3
dec
cs
lret
sarb
push
daa
ret
sbb
lahf
lea
daa
push
sub
sahf
dec
int3
int3
mov
sahf
std
cltd
mov
clc
jae
pusha
xchg
adc
mov
dec
mov
ljmp
cmp
ret
js
shlb
leave
test
cwtl
stc
call
or
adc
data16
and
and
mov
aas
or
push
fistl
jge
add
mov
or
imul
stos
fstps
sbb
sbb
jo
push
lret
mov
mov
clc
push
push
push
or
sarl
mulb
pop
sbb
inc
pop
leave
addb
cmp
adc
aas
mov
into
jecxz
imul
and
popf
inc
fmuls
shll
das
adc
adc
xor
je
sbb
leave
mov
popf
sub
adc
mov
test
mov
or
jno
jo,pt
lret
jmp
shll
scas
cmc
xchg
mov
stos
push
jle
mov
xchg
leave
addr16
es
fisttps
jmp
or
dec
fs
or
scas
mov
jecxz
pop
movl
or
adc
aam
mov
fildl
mov
testb
mov
aad
int3
lea
movsb
or
mov
cmpsb
mov
outsl
int
dec
pop
jmp
jo
push
out
loop
arpl
imul
push
pop
imul
jle
sbb
sub
inc
test
or
cmp
mov
push
xor
loop
lcall
sub
adc
shlb
push
sbbb
fidivrl
arpl
loopew
and
inc
pop
mov
or
ficoms
imul
jmp
scas
ret
push
ret
lods
push
inc
sbb
stos
xor
mov
and
mov
jle
aam
or
adc
push
mov
arpl
jne
addr16
inc
cmp
sub
js
pop
inc
push
jge
movsl
cmc
inc
loop
aaa
inc
or
jno
movl
test
les
xchg
nop
jne
push
imul
je
mov
lss
movaps
jbe
lods
adc
mov
push
dec
push
xchg
repnz
and
inc
xor
adc
inc
cmp
loopne
cmp
das
xchg
pop
adc
dec
out
or
aad
sub
jmp
xor
push
mov
mov
sahf
inc
pushf
orb
outsb
xchg
cs
stos
in
call
aad
fimuls
push
xor
lret
outsb
inc
cmp
mul
add
lret
pop
sub
mov
mov
iret
in
sbb
pop
pop
notl
fisubs
movsl
pushf
jmp
mov
cmc
sbb
aam
dec
cmp
sbb
add
fs
sub
punpcklbw
fwait
pop
add
push
lahf
dec
xor
icebp
hlt
add
sti
jae
push
sbb
push
jns
mov
daa
xchg
push
imul
jns
add
cmpsb
xor
add
jb
inc
cmp
push
push
push
int3
jae
push
sub
jp
and
fldpi
js
pop
jmp
mov
hlt
loopne
sbb
push
cmp
popa
mov
je
aad
xchg
jae
loopne
dec
mov
dec
pop
adc
enter
inc
inc
inc
xchg
add
fisubs
adc
std
lods
sub
dec
inc
cmp
mov
out
sub
push
js
mov
leave
mov
lcall
mov
add
aad
cmp
push
sub
and
add
dec
push
sbb
stc
lcall
or
dec
shlb
pop
clc
mov
jmp
adc
pop
cld
cltd
ds
fsubl
rolb
les
idiv
adc
xlat
shlb
jae
mov
sbb
inc
out
popf
push
and
adcb
push
push
sbb
js
and
push
scas
and
hlt
rcll
aam
aaa
or
popf
mov
ds
cld
out
sub
stos
add
push
je
adc
andnps
jmp
xchg
and
arpl
sub
push
outsb
loopne
inc
mov
dec
fs
mov
jl
xchg
mov
and
jae
push
adcl
popf
scas
push
rorw
subl
dec
jge
in
out
xor
mov
lahf
mov
xlat
mov
test
adc
inc
push
mov
shl
xor
aaa
lahf
scas
mov
and
aas
test
push
push
sbb
add
pop
mov
mov
test
mov
cmpsb
inc
popl
and
xchg
dec
movlps
movsl
push
divb
pop
lods
loopne
push
push
inc
xchg
sahf
xchg
outsb
movsl
push
shrb
sbb
mov
cltd
nop
imul
ss
stos
push
mov
push
inc
das
into
lea
js
pop
dec
push
test
and
fbld
push
jnp
sbb
cmp
lret
data16
sbb
or
cmp
dec
jns
jecxz
push
cld
add
cmp
jno
pop
decb
ficomps
pusha
pusha
mov
and
fdivp
sub
js
dec
mov
xor
or
scas
xchg
mov
cmpsl
xor
stos
pop
inc
pop
mov
add
dec
inc
dec
xchg
out
dec
cmc
lss
aam
sbb
std
xor
add
sarl
ret
xchg
shrb
push
push
and
mov
dec
arpl
aas
jge
out
cmp
fwait
aad
leave
fcompl
mov
fistpll
sbb
lahf
push
and
mov
nop
cmp
inc
mov
and
testl
xchg
data16
lods
pop
lods
mov
push
test
repz
in
cmpsl
push
xchg
cmpsl
jp
enter
push
inc
orb
fimull
sahf
jl
pop
pop
dec
inc
aam
xchg
mov
data16
sub
popf
movsl
push
dec
mov
lds
pop
rorl
jmp
cmp
repz
add
sbb
or
inc
loopne
dec
aas
pop
mov
mov
lahf
bndldx
les
jmp
jecxz
movl
lock
stc
and
sbb
mov
and
jecxz
xchg
les
mov
xor
call
mov
xchg
shll
mov
cltd
cmp
or
dec
mov
mov
xor
cmpb
inc
xchg
in
popa
stos
leave
jnp
mov
jns
mov
or
jnp
xor
xor
sbb
mov
jle
pop
mov
inc
cmpl
pop
xchg
outsb
inc
daa
mov
rorl
enter
push
dec
test
add
dec
shlb
pushw
ja
mov
incl
sbb
stc
cmp
dec
lcall
mov
ss
and
fcom
mov
jmp
sbb
cltd
repz
ret
test
push
call
jnp
testl
iret
pop
ljmp
push
pop
mov
mov
pop
pop
cltd
scas
outsb
xor
imul
cmp
ds
cld
test
popa
insl
inc
mov
xor
cli
test
jl
add
add
add
scas
xor
ret
ljmp
std
sub
push
aaa
or
sub
mov
pop
fldt
mov
arpl
pop
fnsave
pop
jl
xchg
inc
imul
out
pop
xchg
cmpsb
xlat
jae
setl
and
mov
inc
and
inc
xor
je
pop
xorb
daa
push
cmp
jo
and
mov
xlat
in
add
out
or
fwait
nop
push
cmp
imul
inc
cmovg
aad
pop
jmp
incb
jnp
cmpsb
lods
sub
fdivs
cmp
xchg
popa
leave
cmp
inc
inc
aam
fcoml
inc
dec
inc
and
add
push
push
jne
cwtl
movsb
fwait
icebp
iret
pop
sbb
lcall
jle
mov
sub
loope
xlat
mov
cmpl
mov
push
mov
mov
out
add
jmp
lret
xchg
fdivl
mov
movsb
test
mov
popf
popf
pop
mov
stc
out
push
pop
xchg
mov
cmp
addr16
xor
inc
fidivrs
andl
stc
lea
int
lea
dec
mov
inc
mov
inc
ret
mov
pop
cmp
rcrb
hlt
or
out
leave
jecxz
fcom
je
lea
xlat
xor
jg
mov
jmp
or
inc
shlb
push
xchg
xchg
inc
pop
popa
mov
xor
std
out
sub
into
xchg
xchg
sbb
aaa
stc
insl
xchg
mov
lock
out
adc
xchg
imul
sbb
xor
ja
inc
popf
or
add
pop
push
mov
int3
sahf
clc
pop
dec
sbb
shr
dec
ret
pop
or
ret
div
out
cmpsb
push
arpl
mov
out
mov
push
push
xor
or
std
and
in
sahf
cmp
mov
xchg
cmc
out
cmpsb
jecxz
or
sbb
insl
inc
xor
ss
jge
pop
sarb
sbb
in
jno
dec
aad
and
mov
jg
rcrl
testl
pop
mov
lods
push
cmp
mov
fwait
out
jnp
mov
adc
inc
pop
pop
inc
in
add
sub
lock
pop
sbb
lds
sub
mov
inc
xchg
xchg
sarl
cwtl
xor
rcr
jns
mov
mov
pusha
sbb
cmpsl
add
xchg
mov
repnz
or
je
popl
dec
mov
jmp
xchg
lds
sbb
jb
mov
sub
dec
or
mov
sub
jg
and
push
out
fcmovbe
dec
push
scas
mov
or
jne
mov
cmp
stc
mov
cld
or
push
inc
and
cmpsb
adc
lret
or
gs
cs
pop
movsl
bound
lods
add
cli
leave
mov
inc
or
xchg
test
jle
cmp
shl
and
icebp
inc
xrelease
or
dec
xchg
mov
add
pusha
js
daa
and
dec
insl
mov
int
loop
sbb
and
jns
ljmp
inc
cmc
xor
jg
shl
push
xor
jae
or
inc
leave
ficoml
dec
aas
adc
testb
fcoms
mov
scas
bsf
lahf
shlb
outsl
dec
fists
mov
add
lahf
leave
mov
inc
out
data16
aam
daa
cmp
cs
inc
pop
leave
notb
dec
mov
mov
repnz
loop
in
shlb
xchg
jno
stc
lods
mov
xor
mov
jo
and
pop
jecxz
sbb
and
or
jnp
scas
in
inc
ds
jp
ljmp
or
push
jo
add
fsubs
ret
and
push
mov
das
jle
cmp
or
xchg
div
fcmovb
imul
inc
repnz
mov
xor
adc
imul
sarl
mov
call
movlps
repnz
lret
mov
fdivrs
int
xchg
insb
mov
push
test
inc
icebp
xor
movsb
xchg
stos
jle
loopne
dec
xor
dec
stc
push
and
and
xchg
lret
fiadds
inc
xor
cwtl
push
push
and
ror
scas
idiv
add
jg
pop
rcrl
cmp
js
push
mov
fsubl
jle
cld
mov
jle
test
xchg
nop
neg
and
in
add
pop
addr16
shlb
sysenter
sub
lret
mov
sbb
mov
xchg
mov
lcall
cmpsb
mov
movl
inc
loop
jl
sbb
mov
out
jo
fstl
pusha
and
push
bound
cltd
loope
xor
adc
push
dec
and
pop
sub
negb
adc
pusha
fnstcw
outsl
pop
inc
cmp
push
jno
loop
std
insb
jmp
pop
rolb
js
fdivp
lock
icebp
ja
jnp
or
cmpsl
xchg
inc
daa
sar
xor
push
inc
add
push
in
and
mov
sti
jge
inc
pop
lods
mov
mov
push
xchg
stos
cs
ss
jnp
jmp
push
cmc
andb
pop
dec
xchg
adc
cmp
shrl
or
jo
xor
nop
das
das
mov
jno
pusha
ret
jl
out
pop
add
pop
mov
pop
xor
movsl
pushf
mov
dec
inc
ret
xchg
daa
sub
fildl
mov
mov
ficomps
cmp
add
jmp
insb
mov
jbe
fidivrl
test
mov
mov
jecxz
sub
xor
pop
push
and
mov
sahf
jmp
jo
sub
dec
add
cmpsl
shlb
fsubs
sub
test
insl
mov
ss
in
jo
cmpsb
stc
lds
in
ds
xlat
mov
push
mov
fisubl
outsb
and
xor
rcrl
mov
cmp
adc
jecxz
cwtl
xchg
cmp
jmp
mov
lods
in
mov
pushf
jnp
cli
into
outsl
adc
inc
aas
jle
clc
sub
daa
ljmp
add
std
loopne
nop
popf
mov
and
and
sbb
fsubrl
dec
mov
stos
gs
scas
lock
rorb
notb
bound
fst
fidivl
xor
lcall
cmp
xchg
xor
push
rcrb
leave
dec
mov
cmpsb
lahf
adc
subl
cmc
outsl
ffree
sbb
mov
or
pop
dec
lret
test
mov
lret
pop
repnz
pop
ss
std
pop
repnz
mov
loop
xchg
std
int3
sahf
jecxz
xchg
aas
or
xchg
mul
mov
icebp
stos
mov
out
inc
jno
lods
add
push
fsubr
cmpsl
scas
aam
test
jp
cld
sbb
hlt
fs
adc
add
popf
jne
adc
dec
mov
fsubrl
les
push
dec
ret
push
lret
cmpsl
clts
xorl
jle
divl
shrl
or
dec
sub
jb
mov
sbb
mov
inc
aaa
jl
xchg
and
mov
push
mov
mov
imul
cmp
cli
jb
inc
pop
fs
nop
push
push
mov
in
rorl
in
imul
shll
js
sbb
cltd
jo
mov
add
aas
and
aad
xor
mov
jnp
inc
mov
repnz
inc
out
shl
test
out
inc
dec
lds
push
push
es
and
push
ss
pop
or
inc
xchg
xor
pop
or
insb
inc
popa
into
aam
push
lock
push
mov
loope
jg
insb
xor
fstpt
add
js
xor
sti
pushf
inc
setl
fldlg2
fisubrl
jecxz
cmp
adc
sub
pusha
sti
jnp
shlb
addl
inc
mov
js
sti
test
ljmp
inc
mov
mov
add
shrl
dec
and
adc
add
xchg
cmpsb
ljmp
jmp
insl
iret
icebp
jo
js
push
cmp
sbb
into
sbb
xchg
jmp
jae
pop
push
sub
or
xor
dec
dec
in
sbb
out
mov
int
cs
mov
fs
movsb
cmp
xorl
lea
push
dec
sbb
sar
stos
dec
dec
jns
mov
stos
mov
mov
int
test
outsl
add
xor
mov
fiadds
movsb
fwait
decl
das
push
inc
inc
add
fwait
outsb
sub
adc
test
fwait
xor
lret
jnp
xchg
dec
nop
arpl
clc
push
mov
xor
cmp
sbb
and
mov
xchg
ja
add
pop
sarb
ja
sbb
jg
add
or
sub
shlb
aaa
jne
pop
jb
and
add
mov
into
popf
xchg
call
xchg
push
mov
dec
sub
rcrl
cld
adc
xchg
xchg
jecxz
mov
out
jo
ja
xchg
movsb
pop
arpl
xor
cmpsb
pop
leave
shrl
loope
cld
mov
insb
sbb
sbb
mov
add
imul
call
jne
add
clc
clc
and
dec
pop
lock
mov
int
arpl
vcvtpd2dq
fcmovnbe
xor
pop
cmp
sarl
or
lea
in
scas
es
jbe
mov
sub
mov
sbb
jl
push
inc
mov
repz
je
sub
in
pop
in
cltd
fs
mov
fistpl
dec
xchg
cmp
aad
std
fistpl
sbb
imulb
cs
fdivrl
popa
outsb
mov
test
outsb
jmp
fnsave
test
push
sbb
mov
lods
mov
mov
stos
movsb
cmpsl
popfw
pop
push
mov
dec
fiadds
or
sbb
and
fisttps
fcoms
loop
inc
dec
add
xor
add
stos
jg
inc
pop
cwtl
movsl
xchg
sub
pop
out
mov
cmp
cmpsb
xor
out
sub
leave
xor
or
in
jno
mov
xchg
les
dec
jne
dec
and
jge
enter
push
xchg
or
dec
xchg
into
mull
dec
adc
ja
mov
jno
shll
pop
je
fldt
and
loope
lods
xorb
xor
dec
xor
cmpl
sbb
sub
fs
push
cmpsl
jg
add
adc
mov
dec
ror
xorb
lods
fildl
mov
xor
es
repz
sbbl
lcall
fbstp
jne
jg
and
das
sahf
or
dec
popf
xor
xlat
jb
hlt
inc
add
or
je
and
imul
cmpsl
out
cmpsb
lret
fdivr
sub
gs
dec
jo
sbb
rcr
dec
sbb
lock
jo
repnz
nop
cmpsl
xor
lods
and
imul
or
sbb
xor
lret
or
xlat
in
sbb
mov
je
lret
sahf
gs
xor
outsb
pop
gs
push
int
pop
push
stos
fs
jg
nop
in
call
add
sti
movsb
fistpll
push
movsb
pop
pop
mov
mov
std
jmp
sbb
cs
rcrl
fs
mov
rolb
fs
js
xor
adc
cmpl
xor
mov
ds
outsl
test
jne
rolb
inc
or
out
xchg
cltd
addr16
roll
pushl
loop
test
jmp
ret
xchg
or
aas
addr16
dec
jb
imul
and
mov
insb
adc
movsb
lret
fs
imulb
hlt
sub
scas
mov
sbbb
lods
xor
clc
jle
and
push
shll
sub
sahf
fsubl
out
or
mov
lret
xchg
inc
mov
fistps
lods
pop
sub
mov
mov
inc
mov
lds
xchg
mov
test
pop
push
pop
in
mov
imul
cmpsb
subl
mov
mov
pushf
xlat
adc
loope
lock
mov
add
sbbb
out
aam
sbb
mull
cmc
xor
int3
mov
inc
fst
xor
les
or
mov
call
es
subl
lods
out
sbb
adc
dec
dec
inc
xchg
dec
shlb
out
mov
in
or
push
loopne
sbb
in
or
jb
mov
sub
cwtl
gs
jae
imul
jg
xor
sub
inc
mov
xchg
jg
fisubrl
int3
scas
mov
dec
add
cmpsl
jp
add
enter
outsl
test
movsl
sarl
inc
mov
dec
int
fistpll
test
loopne
xchg
dec
adc
ljmp
cld
and
lcall
or
out
fldcw
pop
ret
mov
xchg
adc
insb
mov
sti
jb
inc
dec
or
xchg
cmc
dec
lcall
and
cmp
ja
mov
sbbl
adc
sbb
outsl
insl
lret
xchg
out
lds
jp
sub
aaa
or
jg
subb
stos
inc
push
shll
or
and
insb
cmp
mov
push
add
dec
jecxz
cmpsl
jecxz
xchg
adc
cwtl
push
or
xchg
adc
mov
movsl
cmp
pop
cmp
mov
mov
and
mov
imul
jnp
pop
popf
dec
in
fcomps
imul
mov
xchg
push
and
popf
or
fistl
cltd
pop
test
mov
ret
ljmp
mov
loope
out
es
mov
jne
mov
xor
sub
pop
push
mov
icebp
pop
movsb
mov
movsl
pop
test
shlb
and
icebp
loope
lret
lea
pusha
testl
push
scas
fidivs
stos
adc
push
lds
xlat
insb
and
int
rol
or
je
mov
stos
mov
into
into
sub
mov
mov
lock
fucomip
lret
and
bound
dec
jno
decl
add
rorb
xchg
jp
dec
push
nop
arpl
dec
cmp
in
xrelease
dec
xchg
sbbl
jb
and
jmp
pop
ret
sbbl
inc
nop
ret
cwtl
mov
loop
cltd
imul
lock
lea
lcall
out
xchg
dec
mov
imul
dec
push
push
imul
fsubl
cmp
rol
filds
jl
lea
cmp
je
call
xor
mov
cmc
andb
mov
mov
popf
mov
scas
add
adc
adc
hlt
mov
push
int
xchg
jle
push
cs
loop
lret
daa
mulb
push
push
loope
push
arpl
jle
lcall
jp
xchg
pop
jns
xchg
fsubs
dec
iret
adc
sbbb
dec
mov
sbb
mov
mov
test
adc
aad
aad
mov
mov
test
cmp
xor
pop
cwtl
test
add
push
push
loopne
cmpsl
leave
into
shl
dec
pop
adc
aad
mov
or
or
mov
dec
dec
mov
xor
stos
push
fst
jecxz
and
les
jno
sti
xchg
jle
or
test
cmp
inc
inc
fwait
mov
and
out
test
adc
lret
lea
cmp
imul
xor
or
rcr
shrb
ret
push
inc
add
sub
adc
mov
out
sahf
pop
pop
es
jle
loope
arpl
cld
popf
sbbb
mov
fmuls
inc
ret
lahf
aad
adc
sub
xchg
xchg
jno
inc
jecxz
xor
or
sbb
repnz
dec
xchg
jo
add
sub
popa
sarl
sub
and
sub
ds
mov
inc
inc
repz
xchg
lods
cs
sub
mov
adc
hlt
push
or
mov
adc
and
adcb
xchg
sub
mov
inc
ljmp
xor
push
push
xlat
pusha
jno
addr16
in
dec
shlb
stos
mov
cmpsb
jp
cwtl
or
pop
or
lods
sbb
loop
and
daa
cmp
push
mov
xor
xchg
xchg
test
fcmovnb
out
mov
or
sbb
or
rolb
loop
cmp
mov
sbbl
adc
mov
push
jo
cmp
test
xor
iret
dec
fadd
and
pop
in
aaa
dec
jno
dec
and
iret
jbe
mov
cmc
push
scas
pusha
mov
or
pop
shll
adc
jg
inc
add
mov
js
mov
sub
push
mov
scas
repnz
cmpsl
push
in
xchg
pushf
sub
adc
movsl
lods
push
rcrl
gs
push
in
push
jge
sub
lcall
lea
inc
jmp
loop
nop
mov
push
xorl
mov
dec
lock
add
dec
imul
add
pop
inc
movsl
push
jmp
cmpsl
out
inc
inc
imul
fnstsw
jae
test
mov
pop
xlat
pop
pop
aas
jmp
sbb
pop
enter
mov
repnz
add
cmp
adc
iret
push
divl
push
mov
xchg
pop
rcrl
ss
movsl
jg
push
dec
aam
mov
rcll
lret
inc
or
push
inc
mov
adc
sub
arpl
jb
and
and
int
movsb
pop
xorl
xor
ljmp
pusha
out
jns
in
mov
xor
dec
adc
add
test
mov
sbb
idiv
jmp
xchg
mov
out
mov
jle
inc
out
scas
lret
mov
push
ret
pop
icebp
bound
or
repz
add
clc
js
call
popf
cmpsb
and
clc
add
and
adc
ds
jmp
mov
xchg
js
sub
xchg
addr16
pop
fs
xor
les
push
lock
push
or
sub
cwtl
jno
scas
or
mov
dec
scas
movsb
loopne
push
mov
push
and
test
add
jo
sub
inc
popf
jnp
shrl
imul
das
pop
or
outsb
in
pop
es
pop
or
in
pusha
pop
jo
imulb
cmpsl
loopne
mov
addr16
cmpsl
or
mov
cmp
lahf
sub
dec
jb
movb
sbb
or
outsl
dec
lock
mov
xchg
iret
cmpsb
jg
mov
mov
sub
insl
fwait
outsl
mov
jge
cmc
dec
sbb
cmpl
push
xchg
pop
add
test
sub
test
pop
adc
gs
jnp
loopne
jbe
lret
xchg
ret
pop
rorb
push
ljmp
insl
loop
outsb
or
adc
fldenv
cmp
push
inc
adc
popa
scas
dec
xor
repz
lock
xchg
sbb
add
int3
and
jns
xchg
jne
loopne
and
mov
pop
add
lea
cltd
les
shufps
test
add
rorl
lret
xchg
adc
cli
notl
imul
sub
mov
inc
repz
pop
mov
cmpsb
and
mov
mov
push
xor
scas
mov
xchg
xchg
lds
jecxz
mov
cmp
lret
jno
fs
lcall
idivb
das
mov
aaa
loopne
mov
sahf
test
adc
inc
in
cmp
cmp
mov
mov
movsl
mov
cmc
pop
pop
cmp
pop
nop
add
icebp
mov
cmpsb
loop
lcall
lods
pop
in
sub
dec
sub
mov
call
fisubl
jns
jp
stc
xor
or
jno
dec
cmp
dec
repz
xor
push
cs
imul
lods
out
sbb
fisttpll
hlt
jae
mov
dec
test
sbb
pop
ret
and
enter
loope
xchg
push
inc
out
mov
lock
mov
cmp
pop
stos
adc
cli
adc
test
xchg
enter
push
fdivl
mov
adc
xchg
fimuls
testl
stos
cmpsb
decb
enter
js
inc
sbb
das
mov
test
dec
mov
mov
mov
test
mov
test
mov
pushf
cmc
adc
fisttpl
orb
pushf
dec
inc
xacquire
push
jae
and
xchg
xor
pop
mov
shr
and
push
add
push
push
or
fildll
xor
jg
push
pop
xor
out
pop
mov
sahf
jmp
clc
mov
pusha
mov
das
rcl
movsb
aas
push
jg
jle
sub
popa
jo
and
pop
in
movsb
in
movsb
adc
xchg
push
ja
es
pop
inc
add
adcb
cmp
jno
fstl
cmpsl
mov
lods
dec
fisttpll
out
fwait
dec
lret
mov
fwait
pop
mov
push
sub
jp
or
mov
xor
xor
lods
call
ss
out
push
rorb
daa
js
mov
xchg
dec
in
xor
push
and
and
cld
loop
stos
jns
in
in
jb
mov
mov
insb
xor
xchg
outsl
ss
mov
adc
xor
rcrb
into
cmpb
cmp
mov
dec
sub
loopne
mov
pop
jae
arpl
xchg
nop
aad
dec
mov
popa
jo
aas
adc
sub
xchg
aad
mov
xchg
outsb
xchg
mov
test
lds
push
imul
lahf
jbe
mov
sbb
cli
pusha
adc
ljmp
jns
roll
sbb
jp
pop
loope
jo
xchg
loope
or
test
movsb
in
repz
push
lock
sti
sarb
adc
fwait
int
pop
jp
lret
xchg
rorl
mov
mov
iret
jns
leave
fptan
mov
xlat
mov
outsl
jecxz
jp
ds
jbe
inc
xor
and
inc
xor
or
push
mov
xor
dec
mov
adcb
bound
xchg
adc
in
push
or
popf
test
sub
mov
pop
mov
inc
pop
xor
jmp
lods
sub
xlat
pop
adc
xchg
ret
rol
outsl
int
nop
stc
push
lahf
aad
fisttpll
dec
cld
push
aad
xchg
push
mov
fistpl
movsl
call
out
cmpsl
out
sbb
sbb
sub
fwait
lods
pusha
je
out
push
mov
popa
pusha
xchg
mov
push
cmp
jb
daa
pop
pop
dec
add
es
ss
cld
popa
jle
negb
xchg
pusha
fistl
sub
fwait
xor
fcomip
xchg
inc
push
mov
add
mov
push
loope
out
mov
jae
test
pop
movsl
mov
mov
mov
jge
push
in
test
push
imul
cmpsb
mov
pop
test
loope
xor
call
push
adc
mov
dec
or
or
xor
sbb
push
push
or
sbb
push
loop
xchg
jle
sahf
dec
repnz
pusha
xchg
push
cmp
and
popa
aas
arpl
jg
icebp
cmp
pop
sub
in
and
sbb
aam
push
xor
xor
push
pop
mov
outsb
adc
nop
nop
mov
add
popf
sbb
inc
add
push
lea
add
mov
cltd
xor
jne
mov
enter
loopne
mov
adc
push
lret
or
mov
or
sub
push
cwtl
cli
test
push
decb
pop
jne
sahf
mov
scas
data16
pop
inc
mov
cmp
inc
jmp
in
sbb
lcall
jno
data16
lock
in
rcl
fnstcw
shl
sti
fiaddl
pop
or
cmp
cwtl
xor
ret
push
xor
cmpsb
fucomp
mov
movsb
pop
cld
fists
cld
pop
int
lea
cmp
and
pop
cmp
pop
sar
adc
pop
and
mov
outsl
mov
ret
cmp
inc
pop
xorps
and
pop
rcll
int3
mov
push
lds
add
adcb
jge
push
inc
sbb
pop
jle
inc
mov
rcl
mov
jbe
inc
movsl
xchg
pop
cmp
arpl
xchg
stc
adcb
mov
test
cmp
clc
mov
jb
pusha
mov
push
scas
or
sbb
add
push
push
test
xor
ficoml
pushf
xchg
xor
sti
jl
scas
ja
or
jmp
std
jae
jle
jge
sbb
mov
js
fs
sub
or
les
dec
cmpsb
cmp
cmp
or
test
sub
xchg
jg
mov
mov
lock
mov
fwait
imul
je
sbb
sahf
xchg
mov
pop
jle
jnp
dec
dec
mov
hlt
es
dec
mov
and
sbbl
stos
pop
ss
std
push
ljmp
mov
in
mov
fbstp
xchg
push
sbb
inc
fidivrl
mov
jae
ss
int3
imul
pusha
dec
jae
mov
xor
jne
xchg
insl
dec
push
push
jo
mov
dec
sub
leave
push
and
jb
ret
xor
sbb
mov
jmp
mov
pusha
or
mov
adcb
clc
pushf
ljmp
push
and
push
jb
xchg
mov
sub
daa
cltd
stos
js
cmp
sub
or
mov
inc
inc
movsb
loopne
test
call
fstpl
cmp
xchg
fimull
jge
cmpsl
add
xor
mov
dec
fwait
repz
call
les
adc
out
in
js
and
or
icebp
mov
stos
or
mov
leave
mov
rcr
test
xchg
lock
cmp
xor
mov
push
mov
mov
mov
ss
mov
jge
int
xor
xor
adc
pusha
out
and
sahf
mov
arpl
scas
hlt
fstp
sub
scas
scas
pop
inc
ret
sahf
inc
test
mov
pop
sub
mov
add
jb
lahf
pop
jbe
dec
mov
mov
sbb
scas
inc
fisubrl
rolb
adc
adc
enter
inc
stc
ret
mov
fcomps
lods
pusha
lret
mov
mov
xor
rcrl
adcl
sbb
inc
mov
ljmp
das
cmp
xor
iret
mov
and
cli
aad
and
sbb
mov
dec
add
mov
dec
and
addr16
mov
fsts
or
adc
sub
inc
xchg
jmp
stc
jne
lods
shl
mov
xor
stc
andl
jmp
fwait
dec
cmp
pop
mov
test
sbb
mov
inc
jb
or
dec
sub
nop
divl
cld
xchg
pop
push
loop
cmpsb
in
adc
mov
jno
mov
test
jmp
cmpsb
test
lcall
repnz
popf
out
sarb
add
push
mov
mov
jns
aad
jmp
sahf
mov
mov
jne
cld
clc
or
mov
std
cmp
mov
fisttps
clc
xor
ret
mov
add
outsl
jmp
cmp
mov
pop
shlb
sti
cld
xchg
mov
and
xlat
dec
inc
add
ret
psllq
cmp
pop
mov
push
dec
adc
adc
rolb
jnp
or
sbb
xor
mov
pop
push
cwtl
push
outsl
mov
pushf
fcoms
and
adc
movsl
or
in
xor
pop
cmpsb
shlb
mov
in
stos
inc
lods
int3
out
xchg
jle
or
in
fidivs
icebp
nop
jmp
lahf
mov
push
sub
shlb
popf
inc
fwait
inc
subb
mov
mov
cmp
stos
mov
insb
push
repnz
in
pop
mov
jb
nop
mul
data16
addr16
inc
in
xor
int
push
dec
add
arpl
mov
lods
xor
mov
rol
mov
sbb
xchg
mov
cmp
sub
dec
das
jo
ja
cmp
ret
pop
insl
lock
push
xor
ljmp
xchg
addr16
inc
lods
sarb
and
sbb
jg
out
mov
fs
and
or
pop
push
or
sub
push
cmp
insl
callw
jne
gs
jb
sub
xor
pop
fldenv
loop
iret
add
jne
cs
test
daa
movsb
inc
mov
loopne
out
adc
xchg
out
incb
mov
jo
push
ds
or
aaa
pop
shrb
repz
in
mov
std
cltd
shlb
xchg
fs
mov
shlb
test
stos
jo
cmp
xchg
xchg
inc
stos
or
jne
fwait
adc
pop
js
pop
popa
mov
pop
sub
mov
mov
xchg
dec
adc
cld
adc
imul
mov
aad
out
push
sbb
pop
inc
idivl
gs
out
jb
pushf
shl
xor
lock
xchg
mov
xor
add
mov
xor
mov
add
xchg
cmpsb
leave
cmpl
xchg
ficoml
inc
std
jp
adc
fimuls
mov
pop
das
icebp
push
add
ds
movl
jge
testl
jae
das
pushf
fidivs
mov
ror
xchg
jbe
mov
jle
cmc
enter
std
out
jb
mov
fld
arpl
sbb
shll
out
xchg
mov
sbbb
psrlw
cli
pop
sub
jns
out
sub
dec
lret
rcrl
fwait
xor
leave
ja
outsb
out
jb
xor
mov
std
or
adc
nop
pop
push
out
inc
pop
orb
cs
orb
mov
push
fcompl
out
lock
sysexit
enter
addr16
push
mov
inc
jne
mov
push
outsb
scas
les
mov
in
mov
in
ret
pop
lahf
scas
xor
rcrl
ret
sub
les
mov
inc
mov
int3
jnp
lea
xchg
add
fldcw
ret
mov
fidivs
cmc
cld
ret
out
sbb
lock
adc
add
jns
pushf
cmp
shlb
adc
adc
xchg
inc
sti
pop
jb
lea
into
push
cmp
mov
lcall
jp
repnz
into
mov
stc
mov
ret
or
mov
bound
dec
cld
adc
xchg
dec
fdivs
rorl
std
lret
xchg
inc
and
in
xchg
mov
jge
xchg
loope
int3
cmp
cmp
movsb
scas
es
dec
jae
repnz
sbbl
mov
int3
cmp
jg
outsb
mov
je
sbb
mov
or
sbb
repnz
xchg
outsl
nop
push
mov
out
dec
cmp
out
push
ffree
test
push
lods
rcll
out
shll
add
movsb
xchg
shl
pop
xor
and
dec
and
aam
inc
cltd
and
inc
mov
jmp
xchg
lea
xorb
leave
mov
push
jae
popa
xor
jb
rorl
sbb
sahf
or
idivb
xor
push
sahf
std
sub
ret
addr16
or
loop
and
loope
cmp
insl
cmp
loop
sahf
stos
lock
mov
or
xor
movsl
pusha
mov
xor
and
faddl
popa
sbb
into
dec
cmpsl
daa
shl
jge
ret
xor
xchg
fisttpll
add
pop
loopne
mov
ret
xor
loope
mov
or
adc
xor
rcrb
push
int3
dec
insb
mov
das
xchg
sbb
cmpsl
paddw
cs
push
push
inc
loopne
inc
xchg
clc
and
mov
arpl
int
mov
jb
adc
test
repz
addl
inc
int3
push
sahf
ss
xlat
sub
insb
push
out
dec
scas
pop
stos
js
aam
and
and
jae
jge
inc
ret
call
sbb
lret
and
stc
sbb
adcl
in
mov
jb
cmp
mov
popf
dec
xchg
scas
fnstenv
adc
mov
sbb
cwtl
shll
arpl
mov
fistpl
and
mov
dec
cmpsl
dec
vpminsw
pop
sbb
rcrl
les
gs
mov
xchg
xchg
and
repnz
cmp
xchg
insb
xchg
dec
sbb
dec
pop
lret
imul
fdivl
es
bsf
test
insb
mov
nop
cs
xchg
mov
nop
divl
movsl
push
negl
and
insl
mov
jae
and
add
jo
movb
push
clc
adc
xor
stc
mov
aad
shrb
repz
sbb
jecxz
mov
cwtl
cmp
jnp
popf
pop
xchg
mov
push
dec
sahf
add
dec
push
inc
push
cmp
ret
inc
mov
test
gs
iret
fcmovnbe
xchg
pusha
mov
adc
stos
int3
pop
or
or
dec
pop
or
sarb
mov
mov
je
pushf
cwtl
cltd
adc
stc
gs
add
dec
ret
outsb
scas
inc
into
mov
mov
pop
sbb
jae
sarl
ficomps
mov
mov
aaa
notb
cwtl
cmp
mov
inc
popf
lea
cli
je
call
pop
andb
jle
ret
mov
imul
scas
test
mov
inc
negl
pop
pop
shll
sub
fst
mov
shlb
jecxz
dec
repz
test
leave
sahf
push
jno
lods
and
cli
jle
push
bound
iret
jl
or
sub
into
into
adc
push
mov
cmp
dec
inc
arpl
pop
pop
sti
pusha
test
push
jae
pslld
xchg
jnp
in
push
clc
fldenv
stos
leave
leave
mov
jle
call
repnz
jl
xor
dec
xchg
xchg
jle
dec
mov
push
mov
jb
cmp
rcr
jne
loop
mov
lds
ret
inc
xchg
js
test
repz
mov
push
adc
lock
cmpsl
mov
stos
dec
aad
and
jge
mov
push
mov
dec
mov
jecxz
mov
ret
mov
es
lock
dec
mov
pop
cmp
cmc
icebp
jl
jo
dec
lods
dec
addr16
xchg
push
push
popf
mov
dec
popa
xor
les
cs
or
adc
inc
lret
mov
add
aad
add
mov
mov
pop
mov
pop
push
or
lods
add
lock
or
iret
roll
xchg
mov
rolb
lret
mov
mov
icebp
mov
test
sub
mov
insb
dec
xchg
jg
popa
lret
repz
pop
ljmp
or
hlt
loopne
psrld
add
mov
decl
mov
pop
or
es
or
test
icebp
sub
xchg
aaa
cs
jg
sbb
insl
ljmp
pop
sbb
cld
pushl
mov
cmp
icebp
cmp
xchg
dec
aam
mov
lock
test
and
jmp
pop
mov
lods
int3
sbb
mov
pushf
xchg
std
lret
jb
fcoms
cmp
roll
mov
pusha
mov
xchg
lods
mov
cmc
imul
or
out
push
rcr
mov
xor
mov
pop
mov
jno
pop
ret
and
xor
jo
push
das
scas
popf
mov
sbb
outsl
cmpsb
test
pop
xchg
sub
sub
xchg
inc
or
rolb
rclb
gs
adc
icebp
imul
out
sub
das
and
adc
sbb
and
outsb
push
push
mov
ds
sbb
pop
mov
or
ret
inc
and
and
mov
jle
jne
push
pop
dec
loope
push
icebp
push
jle
les
inc
rclb
mov
lock
mov
aas
or
das
jne
ret
sbb
stc
mov
lods
test
jmp
push
add
cmp
cmp
loop
inc
iret
jns
cmp
loopne
cltd
sbb
mov
jge
push
push
and
ret
pop
push
xchg
into
pop
sub
loopne
mov
js
iret
pop
cmp
clc
cmp
loop
in
pop
jae
std
pop
mov
in
out
fucomip
scas
outsb
xchg
dec
mov
cmp
or
shl
out
cmp
pop
lock
aas
daa
jmp
push
ljmp
jnp
dec
add
and
mov
jge
call
daa
fstps
or
cld
dec
mov
test
std
aam
incl
mov
pop
jb
jnp
hlt
fwait
loopne
adc
xchg
repz
fisubl
stos
add
jnp
call
sub
popf
pusha
scas
enter
aas
xor
push
inc
mov
add
sub
fsubp
sbb
mov
pop
sbb
add
scas
test
add
jg
dec
and
xchg
addps
jbe
xchg
test
and
xchg
in
lods
pop
inc
leave
loop
imull
push
jbe
lods
loope
mov
push
test
mov
mov
sahf
movsl
cltd
jp
iret
xor
out
sti
pop
movsb
push
pop
mov
or
stos
pop
dec
jo
shll
aaa
push
gs
sub
scas
or
mov
mov
clc
gs
icebp
sub
outsb
int3
xchg
cmp
nop
into
jb
or
subb
mov
enter
das
adc
push
shrl
inc
and
or
mov
das
xor
and
sti
jp
or
scas
dec
dec
inc
xlat
mov
aas
scas
add
xor
stos
dec
mov
clc
aad
lods
pop
fadds
mov
int
mov
rcl
addr16
jle
mov
lcall
ja
movsl
jge
push
pushf
jnp,pt
mov
addr16
mov
xchg
mov
in
and
loop
or
xor
inc
push
mov
outsb
dec
jo
stos
pop
movsb
mov
mov
fucomi
push
adc
sub
sbb
dec
test
rcrb
movsl
push
sub
adc
repnz
lods
pop
sub
pop
mov
pusha
lret
jp
xchg
mov
mov
dec
sbb
cmp
lcall
and
lock
push
cmpsl
mov
or
jns
mov
les
jle
sbb
incl
popa
bound
xchg
xorb
aad
jle
and
xor
loopne
stos
or
mov
std
and
cmpsb
add
stos
lods
or
insb
cmc
pop
fbld
lods
push
popa
cs
cmpsl
jp
ret
push
mov
sbb
jecxz
add
mov
fwait
inc
push
std
and
push
mov
mov
int
mov
mov
mov
stc
inc
int3
test
mov
dec
lds
jge
imul
call
xchg
inc
pop
sbb
lret
fdivrl
ja
jne
jb
lods
loope
adc
push
ds
ror
lods
jge
scas
test
movsb
xchg
scas
mov
push
sbb
ret
out
cmc
mov
in
nop
test
inc
ja
in
xchg
cmpsb
cmp
call
inc
ret
mov
add
roll
xor
inc
xchg
loop
mov
les
gs
movsb
movsl
enter
push
out
cmp
movl
add
out
ficoml
fwait
adc
add
push
push
sahf
test
jg
movsb
les
dec
mov
dec
test
inc
das
out
hlt
sti
arpl
sbb
push
fidivs
mov
or
and
cmpsb
mov
mov
das
mov
ret
lods
fcmovnb
pop
lea
scas
insl
fwait
mov
push
int
adc
add
dec
iret
das
sbb
cmp
jmp
dec
push
adc
xor
insb
xor
movsb
adcb
div
jnp
add
sub
cwtl
add
and
xchg
xchg
dec
in
sbb
inc
and
sti
nop
leave
jns
mov
dec
fcoml
sbb
push
fsubrl
cltd
mov
addr16
fmulp
aaa
add
add
scas
mov
mov
das
sub
mov
mov
stc
fldt
in
js
and
cs
or
frstor
xor
cmpsl
xor
jbe
jb
stos
xchg
fucomi
adc
cmpsl
inc
push
daa
cltd
nop
mulb
xor
sbb
ja
jmp
popa
mov
aas
out
outsl
enter
adc
inc
inc
call
and
sbb
pop
cmpsb
dec
icebp
lahf
mov
movl
and
add
mov
mov
dec
cmp
cli
in
xchg
jl
and
cmp
icebp
fmuls
es
sub
mov
div
icebp
mov
lea
jecxz
pop
iret
mov
push
add
lock
sub
mov
xchg
in
push
repz
push
test
inc
jo
fldenv
mov
and
sub
mov
orl
push
xor
imul
or
pop
dec
sub
add
adc
test
dec
add
inc
andb
pop
cmc
imul
sti
aam
mov
jb
das
adc
push
inc
push
js
mov
test
adc
faddl
mov
aad
xchg
insb
push
xchg
sarb
add
out
jne
fmuls
cld
dec
data16
fcmovnb
outsl
outsb
ljmp
or
imul
fdivrl
outsb
scas
push
sar
or
mov
mov
jmp
lahf
std
sbb
jle
testl
test
mov
fisubrl
cmp
sti
std
xlat
adc
cltd
rcll
cwtl
jmpw
push
cmp
int3
mov
mov
mov
jmp
sbb
pop
cmp
mov
stos
cmp
cmp
dec
test
mov
lds
adc
mov
adc
lods
outsb
in
outsb
stos
pop
push
adc
int3
stc
movsl
lea
and
in
int
xorl
insl
into
inc
xor
les
mov
es
mov
dec
fisubrl
mov
mov
test
cmc
std
cltd
adc
imulb
lds
or
push
pop
fsubl
mov
inc
inc
mov
mov
xchg
xchg
mov
mov
inc
push
jo
lcall
fwait
lock
test
cmp
cli
int
cli
jb
push
pop
mov
or
sub
popa
call
addr16
mov
cmc
sub
jns
and
ficoms
ss
jo
push
mov
or
outsb
cld
or
rorb
jge
inc
mov
jo,pt
fidivrs
jne
outsb
int
dec
pop
push
sub
cmc
jnp
xchg
mov
je
test
cmp
jmp
lods
fbld
push
mov
dec
movswl
cmovle
sub
loop
push
fcmovbe
cwtl
hlt
cmpsb
xlat
mov
pop
cmp
idivl
inc
push
shrb
and
loop
add
jecxz
lods
int3
sub
push
lods
fwait
mov
xchg
xchg
lret
sbb
dec
lret
mov
add
sbb
lock
or
inc
scas
ljmp
mov
aam
cmc
mov
enter
adc
test
lcall
icebp
mov
leave
push
sub
test
mov
das
cli
inc
loop
jle
lcall
shrb
mov
sbb
cmpb
cmp
and
les
in
pop
pop
leave
sub
mov
pop
fadd
stos
test
inc
push
push
xchg
or
imul
xor
xchg
pop
and
fnstsw
fisttpll
pop
mov
jo
cmp
loopne
add
pop
pusha
int
mov
jae
xchg
cmp
jge
js
add
mov
mov
stc
adc
or
push
int
inc
cmp
adc
pop
inc
ret
movsl
mov
pop
adc
push
scas
mov
mov
ljmp
push
int
loope
insb
or
ret
jge
cmp
in
rsm
inc
or
push
hlt
jo
cld
imul
ret
cmp
aam
ds
xchg
xchg
testb
push
adc
dec
xchg
xor
cmpsb
and
and
xor
out
loop
loopne
jle
pop
adc
shrb
push
int
in
icebp
mov
cmp
pop
aad
mov
mov
adc
mov
xchg
pop
dec
sub
out
jb
pop
stos
mov
sti
pop
push
or
repnz
outsl
sub
lods
lea
adc
push
stos
lret
dec
pop
pop
clc
daa
jmp
sub
scas
sarb
lods
pop
mov
lods
std
mov
fildl
lock
sub
iret
into
jns
push
mov
daa
sahf
push
xchg
jo
mov
imul
add
js
xor
mov
pop
je
xor
adc
sub
mov
xlat
mov
pushf
sarl
rolb
stos
sarl
xchg
xlat
xchg
mov
iret
inc
dec
cli
jle
sub
xchg
mov
sub
sbb
cmp
or
daa
lods
fsts
and
mov
push
adc
xor
push
adc
xchg
jp
nop
inc
mov
inc
jl
fdivrl
pop
dec
xchg
pushl
jns
ds
sahf
filds
pop
in
int
loope
data16
cltd
and
out
push
cwtl
scas
xchg
sbb
xchg
std
push
sub
pop
mov
mov
push
sub
or
pop
mov
fists
dec
rorb
inc
lea
cmpsb
shll
dec
mov
lods
ss
or
dec
sub
js
ret
or
mov
cmp
clc
inc
cli
dec
cwtl
out
scas
sub
jg
test
sbb
push
jl
add
push
clc
aaa
icebp
or
sbb
jbe
int3
inc
sub
sbb
imul
fst
push
loopne
fmull
push
ljmp
sub
add
add
cld
xchg
inc
stos
mov
mov
popa
aas
aaa
pushf
pop
mov
add
xchg
int
jl
mov
sahf
jae
std
insl
arpl
xor
add
dec
rcl
lret
xor
jecxz
xchg
push
jne
stos
int
pop
add
xor
test
pop
jecxz
loop
mov
cmpsl
jne
push
jnp
out
outsb
pushf
or
cmc
push
in
pop
and
xchg
cmp
fsubrl
xor
xchg
pop
adc
stos
ljmp
dec
xchg
lret
dec
push
add
xchg
and
ljmp
cmpsb
mov
push
stc
xchg
mov
adc
je
sbbl
sub
push
shrl
orb
adc
fldenv
in
negb
dec
je
sub
add
cmc
xchg
sbb
lret
pop
xchg
nop
jp
outsl
cltd
or
test
aas
testb
jle
pushf
fs
stos
cwtl
pop
push
and
imul
iret
cli
mov
enter
dec
movsb
mov
jne
stos
sbb
aad
scas
mov
mov
in
xlat
in
lods
push
aaa
inc
negb
mov
icebp
fsub
fstl
sub
mov
xchg
mov
arpl
and
loope
call
loopne
pushf
imul
dec
inc
arpl
imul
lea
xchg
stos
mov
cmp
push
xchg
lods
dec
daa
jle
dec
stc
sub
xlat
push
adc
jno
popa
and
mov
mov
fsubp
xchg
add
in
sub
insb
out
push
cmp
fdivl
mov
cmp
jge
lret
jno
push
and
push
adc
and
or
sbb
das
mov
xor
test
cltd
mov
pusha
dec
jp
jne
xchg
push
imul
mov
mov
sti
stc
jne
sub
sbbb
dec
jbe
mov
in
xor
xor
shll
or
insb
scas
fistps
dec
lock
out
dec
cmp
and
mov
or
jno
fst
dec
cmc
aas
and
sbb
cmp
cs
sbb
fwait
push
cmpsl
in
jns
ret
jp
xchg
gs
mov
dec
shr
or
adc
sti
scas
mov
pop
inc
add
call
push
in
cs
loopnew
push
cld
or
mov
hlt
push
fstl
adc
sub
test
movsb
lods
mov
icebp
adc
fimull
push
xchg
pop
nop
adc
std
cmp
cmpsb
lret
outsl
mov
add
mov
jmp
mov
push
inc
icebp
loopne
and
dec
pop
aaa
jmp
pop
sub
push
push
xchg
push
pop
cwtl
xor
in
imul
addr16
fidivs
les
jp
push
in
inc
push
or
and
or
repnz
sub
ret
ja
pop
test
fsubrl
and
cld
std
lahf
xorl
lahf
clc
lods
xchg
mov
inc
out
and
aam
dec
int3
or
cmpsb
pusha
and
andl
movsb
cmp
clc
cmp
jae
mov
popa
pop
cmp
mov
frstor
mov
push
js
sub
rcrb
lahf
add
aam
lret
and
shll
imul
fstpl
cmp
dec
fistpl
and
repz
clc
mov
mov
arpl
mov
loopne
loope
inc
sti
adc
dec
or
pushl
sub
xchg
cltd
test
mov
into
jl
mov
mov
lods
loop
das
insb
std
int3
test
dec
sbb
or
in
or
popf
sahf
loopne
cmp
stos
inc
jnp
jmp
repnz
jecxz
int
jae
in
jl
lods
imull
popa
out
push
fwait
cwtl
dec
fldt
and
pop
enter
jl
adcl
in
out
jne
push
lods
mov
int
hlt
pop
push
mov
shrl
cmp
mov
adc
into
test
shlb
les
xchg
add
outsl
jg
adcb
std
loope
mov
and
clc
aad
or
inc
adc
pop
sub
xchg
test
je
inc
and
cltd
enter
mov
in
ret
jb
mov
rorl
and
jbe
cltd
std
mov
fsubl
in
test
test
mov
insl
sub
loope
test
unpcklps
fs
add
jmp
mov
push
sti
out
sbb
imulb
cwtl
xchg
cmpsl
adc
dec
fildll
outsb
jb
scas
jle
add
rclb
jne
add
push
fisubl
adc
je
sti
lods
xlat
sbb
add
out
subl
xchg
in
cmp
jbe
pop
test
sbb
or
inc
or
loope
pop
cmpsl
jl
pop
mov
ljmp
mov
std
inc
mov
cmpsl
bound
fidivl
push
and
xor
pop
add
inc
adc
push
or
jb
lods
push
pushf
xchg
sub
ds
and
out
push
and
cmp
dec
and
or
push
push
inc
cwtl
arpl
mov
and
sub
inc
out
cmpsl
bound
cltd
das
rcrl
or
int3
push
adc
ret
sbb
xchg
pop
adc
or
into
mov
ret
popa
push
sbb
insl
outsl
or
jns
fcomps
lcall
adc
add
dec
movsb
mov
cmpsb
mov
jne
sbb
lahf
imul
cld
fldt
dec
and
pop
loop
adc
and
out
push
loope
jno
lods
jns
popa
mov
fs
mov
sbb
xor
dec
dec
mov
jl,pn
pop
xchg
xchg
sbb
jge
into
in
inc
mov
cmpl
ljmp
bound
into
jecxz
inc
dec
inc
dec
insb
lea
or
add
sbb
popf
hlt
or
sub
mov
popa
sahf
cmpsb
sub
bound
xchg
jo
xchg
pusha
add
push
out
jb
aad
cwtl
jb
in
dec
pop
mov
fdivrs
dec
jb
ret
shll
stc
pop
and
fucomip
adc
sub
sahf
outsl
nop
div
loopne
repnz
shlb
add
movsb
adc
jmp
jbe
xor
loopne
and
jecxz
cwtl
rclb
mov
pop
notl
sub
nop
cltd
mov
cmc
addr16
aas
jp
cmpsb
test
pop
xchg
jp
out
cmpsb
negl
cmp
mov
xchg
out
mov
insb
ljmp
push
adc
mov
lret
push
jnp
mov
sarl
mov
mov
shlb
cmp
cmp
fistps
dec
add
aaa
lsl
push
int3
ljmp
sbb
pop
inc
jno
stos
push
stos
pushf
jecxz
loop
cld
sub
cmpsl
imul
lret
push
or
insb
sti
mov
sub
pop
lcall
xchg
push
push
mov
adcb
jg
js
xchg
cmpb
sbb
scas
adc
dec
in
sub
cld
roll
xor
daa
lcall
aas
xchg
fildll
loopne
out
into
xor
push
lret
cmp
pop
jp
mov
ss
and
shl
je
hlt
cmp
mov
jne
outsl
inc
lock
stos
rcll
sarl
popf
cmc
je
mull
jne
inc
sub
push
loop
jg
pop
int3
jecxz
das
loopne
pushf
mov
cmpsl
dec
xor
jmp
mov
mov
dec
cmpb
or
das
push
pop
sub
call
add
adc
test
negl
int3
mov
or
adc
std
cwtl
mov
movsb
push
pop
adc
out
das
in
cltd
pop
pushf
rcll
jg
fiaddl
adc
dec
fs
imul
test
add
mov
mov
pop
sbb
scas
inc
idivl
xchg
xchg
mov
mov
jp
add
inc
push
xchg
cmp
mov
imul
in
mov
cmp
adc
inc
test
pop
xor
mov
in
gs
fldenv
mov
xlat
mov
aam
lods
push
sbb
adc
adc
lea
dec
call
aad
mov
push
push
jmp
cld
gs
call
inc
xchg
sub
mov
hlt
inc
flds
stc
int
jecxz
cmp
std
nop
lds
jne
daa
int3
jbe
cs
adc
xchg
add
mov
xchg
mov
lods
std
mov
sub
adc
ret
fsubrs
inc
inc
testb
ret
add
dec
outsl
adc
shlb
mov
sub
cmp
out
stos
or
stos
stos
cmc
push
add
pop
imul
cmp
loop
call
stc
pop
subb
ds
das
addr16
mov
sbb
pop
and
jge
leave
lcall
clc
and
push
jle
loop
movsb
pop
inc
orb
insb
cmp
mov
xchg
dec
sub
jb
inc
test
ret
xchg
mov
lds
repz
shlb
test
movsb
lcall
test
xor
dec
popl
nop
gs
add
add
fcoms
and
pushf
or
fisubrs
mov
stos
xor
mov
adc
stc
shlb
push
ljmp
mov
fildll
inc
lods
mov
repz
rclb
or
test
add
adc
sbb
das
popf
fdivl
call
mov
push
jne
jbe
sub
push
push
stos
mov
cs
repz
push
jno
clc
outsl
sub
int
sbb
insb
mov
add
popa
inc
outsb
mov
dec
pop
inc
lcall
mov
mov
fprem1
shlb
add
mov
or
daa
push
push
mov
mov
ss
mov
cmpsb
int
sahf
sub
test
ret
sbb
lret
fadds
repz
jnp
movsl
fwait
pop
bound
xlat
fcmove
insb
je
xor
push
ss
in
jl
sub
andb
xlat
sub
mov
test
insb
sub
fs
xor
pusha
jge
push
dec
pop
xor
sbb
push
inc
xchg
push
push
cmp
imul
shrl
mov
repnz
mov
lods
sub
fistpl
dec
roll
or
cmc
les
sbb
pop
aas
scas
pop
sbb
pop
pop
sub
and
jp
cmpsl
in
ja
js
xchg
loopne
jns
mov
mov
jns
das
dec
or
adc
lahf
cld
imul
xchg
icebp
mov
out
adc
iret
movsl
lretw
sbb
add
js
mov
ds
mov
out
leave
fcoml
in
jae
jo
sahf
adc
mov
inc
or
adc
pop
loop
icebp
cltd
out
xchg
sub
neg
jecxz
stos
cmpsl
sub
and
shr
fsubs
pop
or
sub
repnz
lods
outsb
stc
shl
xchg
subl
xchg
loopne
pop
dec
or
les
xor
int3
cld
inc
test
mov
nop
insb
jmp
ljmp
sub
pop
inc
pop
pop
xor
jne
xchg
lods
sbb
cmpb
adc
out
lret
test
mov
lahf
ljmp
mov
sbb
call
sub
sbb
sub
mov
sub
loopne
jp
pop
xor
movsl
cmp
mov
or
pop
inc
ror
and
mov
pop
test
mov
jns
inc
fstl
mov
push
imul
pop
std
push
sub
mov
pusha
in
xchg
loope
xchg
mov
pop
mov
adc
dec
pop
jmp
mov
sti
push
add
inc
xchg
pop
imul
addl
int3
lds
and
push
dec
mov
negb
cltd
adc
inc
test
imul
int
and
pushf
outsb
insb
in
push
adc
repz
xor
scas
ret
add
rol
movsb
pop
fsubl
das
cmc
mov
sbb
ja
leave
pop
mov
cmp
arpl
xchg
add
add
and
pop
push
sbb
mov
push
pusha
lods
aad
mov
mov
scas
gs
movb
aam
add
mov
sbb
add
jo
int
or
sub
jne
addr16
int3
movsb
data16
hlt
repnz
push
mov
cmp
stc
xchg
inc
xchg
sahf
push
psubb
repnz
dec
repz
and
adc
int
and
jne
ret
in
pop
fnstcw
into
or
xor
hlt
xchg
call
ret
je
push
popa
sbb
mov
jmp
sub
mull
jb
jo
push
push
sbb
xor
movb
popf
inc
loopne
in
mov
je
call
outsl
xchg
mov
push
adc
ss
outsl
iret
adc
out
pop
shrb
or
les
cmpsb
mov
arpl
pop
aas
xor
xchg
pop
fisubs
xchg
bound
push
jnp
dec
jno
xor
cmp
and
mov
inc
lods
sbb
and
dec
xchg
cmpsl
sbb
jge
or
or
clc
gs
add
jge
or
frstor
lahf
scas
jl
insl
mov
mov
es
cmp
test
es
mov
inc
push
movsb
fstps
add
js
mov
pop
aad
lods
fs
push
out
aaa
jbe
adc
in
pop
sbb
fbstp
mov
lods
icebp
fs
cmpsb
pop
xlat
das
inc
ljmp
mov
sbb
scas
push
sbb
dec
loope
add
ficomps
fiadds
outsl
jno
insl
sub
cmp
test
or
dec
cld
or
das
pop
sbb
daa
mov
push
lods
rcrb
stc
lcall
scas
jg
out
push
sbb
fldenv
popf
add
leave
mov
sbb
filds
out
sub
mov
push
push
js
adc
ss
mov
mov
rolb
cmpsl
lret
xchg
jg
push
push
mov
js
xor
in
cmc
enter
mov
mov
js
push
pop
or
or
cmp
es
pop
mov
mov
xchg
mov
lahf
movsl
sahf
dec
jno
mov
aaa
jne
aam
add
pop
insl
jge
sbb
and
call
jecxz
adc
dec
mov
pop
enter
mov
add
dec
mov
push
je
xchg
insl
mov
clc
jge
sar
pop
add
inc
mov
shr
addr16
cwtl
dec
xlat
adc
int
sub
mov
add
das
mov
lds
jl
cwtl
insl
shrl
xchg
adc
lods
jmp
pop
add
fidivl
int3
fsts
add
insb
lret
push
mov
movsb
sub
pushf
lods
push
add
call
inc
shrl
imul
cmp
jl
push
js
push
jmp
aad
mov
adc
xchg
pop
mov
insb
stc
cmp
jnp
fmull
jno
push
xchg
inc
mov
loope
adc
and
mov
ds
inc
xor
add
jg
arpl
cmp
jg
jg
dec
inc
orb
out
dec
pop
aaa
aaa
sub
scas
pop
scas
add
stos
or
xlat
xlat
or
and
stos
lods
mov
or
dec
int
mov
in
pop
mov
xchg
imul
pop
mov
aam
mov
adc
test
pushf
test
pop
fprem1
cltd
pop
je
orl
ficoml
hlt
mov
sar
cmp
dec
ds
mov
popf
pop
mov
jae
mov
cmp
inc
test
lcall
xor
cmpsb
sbb
mov
fimull
dec
sahf
js
imul
pushf
add
mov
jne
fisttpll
nop
adc
cltd
xorl
cmp
mov
pop
test
inc
inc
push
insb
out
mov
cmpsb
outsb
add
clc
arpl
or
testb
inc
add
aad
mov
out
scas
shlb
adc
inc
in
idivb
adc
add
movsl
adc
mov
xchg
cmp
fstps
pop
mov
repz
jb
sub
pop
movsb
loop
jne
cmp
cltd
push
clc
stos
sub
mov
cmpsl
ljmp
ljmp
inc
daa
fwait
popf
dec
sub
inc
hlt
cmp
mov
sahf
iret
xor
lods
mov
outsb
cmc
insl
fcom
pop
add
or
in
test
xchg
cmp
std
mov
cmpsb
leave
lea
mov
call
push
sbb
mov
adc
fisubl
lods
notl
lret
jo
mov
or
mov
cmp
fcomps
mov
cs
test
sub
shlb
mov
popa
in
push
mov
addr16
and
lret
stos
lcall
jnp
gs
mov
mov
fstl
ja
xor
mov
rcll
call
fcompl
notl
rclb
fstpt
lea
cmp
pop
inc
popa
mov
mov
je
repnz
jl
xor
xlat
pop
inc
push
jle
or
iret
clc
cmp
stc
xchg
adc
scas
xor
cmpb
sub
pushf
xor
push
mov
mov
mov
dec
inc
sahf
jnp
ds
jg
test
cmp
sarl
or
jb
pop
adc
mov
nop
mov
insb
stos
outsb
jb
mov
rorl
lds
cmpsb
adc
gs
das
mov
sbb
push
je
sahf
aam
data16
xlat
add
pop
movsl
mov
xchg
lods
mov
out
inc
inc
leave
out
mov
adc
mov
ljmp
jmp
add
dec
add
mov
cmp
or
dec
in
inc
jecxz
lods
repnz
stos
adc
rcrl
mov
loopne
jne
cmp
in
addr16
pushf
insb
mov
and
addr16
jmp
addr16
ja
dec
fisttps
fnsave
movsl
leave
xorb
push
sub
fimull
xchg
xor
push
xchg
sub
jmp
cmp
or
xchg
mov
and
xor
mov
shlb
lret
xlat
mov
fisubl
inc
fucom
bound
xor
pop
stos
xchg
in
lock
test
mov
inc
shrb
daa
and
jg
push
in
in
scas
dec
sub
popf
imul
pop
pop
dec
push
imul
sbb
lret
cld
aad
xchg
lods
mov
popf
pop
ja
dec
pop
in
sbb
push
lds
icebp
aas
and
push
pushf
sub
les
sub
roll
add
add
push
lock
lahf
sahf
call
out
ret
cmpsl
push
mov
in
stos
xchg
pop
andb
or
clc
ret
mov
mov
out
adc
inc
lods
push
lea
push
in
lods
insb
jge
mov
les
push
clc
scas
or
inc
aam
inc
xor
dec
lods
in
push
or
cmp
nop
and
jp
sbb
adc
pop
mov
mov
mov
jle
cld
or
and
jns
inc
les
mov
jnp
xchg
mov
adc
insl
cmp
xchg
or
icebp
push
stos
sbb
lcall
xor
jmp
mov
sub
mov
jne
dec
dec
jge
sti
inc
fisubrl
test
leave
add
or
and
mov
mov
fs
mov
fbld
aaa
mov
shll
or
dec
sub
insl
jne
sbb
lret
and
ficomps
data16
popf
addl
repnz
cmc
add
sbb
incl
aaa
push
jmp
mov
ja
mov
aas
mov
out
dec
push
movsl
mov
sub
test
xor
xchg
dec
xchg
push
and
dec
int
test
push
jmp
push
cmp
push
mov
ret
imul
inc
jle
ljmp
in
testb
cmc
aas
test
mov
enter
push
xchg
repnz
inc
jl
mov
mov
pop
fs
sbb
out
cs
je
and
insl
sbbl
in
aad
xlat
dec
xor
rol
inc
mov
add
clc
cwtl
outsl
or
out
jbe
mov
cmpsl
mov
loop
stos
and
insb
adc
jge
cld
adc
jmp
xor
dec
xchg
adc
sub
mov
mov
lods
insl
testl
add
rorb
in
pop
xchg
sub
das
inc
movsl
fstpt
lahf
or
fwait
mov
test
lds
push
mov
xlat
adc
mov
lods
gs
fldz
inc
sbb
das
and
mov
xor
mov
sub
adc
cmp
jmp
jo
iret
popf
testl
and
inc
insl
subl
lret
xor
cmp
adc
or
xchg
sub
mov
cmp
sub
mov
outsb
cmpl
ss
fs
call
incl
shl
daa
pop
arpl
out
outsl
sub
fidivs
push
xchg
dec
add
jno,pn
scas
xchg
inc
dec
sbb
aam
pop
inc
cmpl
add
xchg
inc
cmpsb
or
rclb
jge
scas
das
mov
pop
clc
cmp
pusha
shlb
into
cmp
push
mov
xchg
fldt
gs
push
and
inc
mov
sub
dec
ljmp
movsl
cmp
fs
jl
cli
aad
and
dec
xchg
fxtract
idivb
mov
sbb
ficoms
imul
and
insb
icebp
repnz
int
pop
and
adc
in
push
mov
movsb
xchg
adc
cmpsl
lds
mov
les
test
push
cmp
pop
inc
into
aaa
inc
jp
inc
mov
inc
jp
mov
or
pop
mov
push
add
xlat
daa
idivb
icebp
inc
in
lds
jmp
adc
pop
je
mov
mov
or
fisubs
mov
adc
cmp
cmpl
in
into
adc
dec
or
sbb
mov
cmp
pop
xchg
lods
sub
iret
jb
jmp
icebp
fs
in
mov
aam
lds
decb
sbb
insl
adc
ret
add
lret
icebp
cmpb
mov
lret
ficoml
add
pop
arpl
repz
imul
ljmp
sub
or
cmp
je
dec
std
xchg
pop
pop
fsubs
lret
mov
jecxz
mov
xor
lock
sub
fidivs
and
cmp
insb
call
inc
out
repnz
loop
call
add
scas
xchg
mov
fisubrl
cmp
js
dec
shl
hlt
cmp
cmpsl
les
or
cmpl
pop
lods
pushf
xor
sbbl
inc
enter
pop
ret
inc
sbbl
push
div
xorl
mov
mov
xchg
fwait
in
sub
scas
mov
ljmp
push
push
dec
or
sub
sub
xor
cmp
sbb
testb
cmc
push
mov
cmp
xor
lahf
push
cmp
mov
int
dec
lods
dec
pop
jl
mov
xor
imul
mov
mov
jge
sub
cmp
ret
push
pop
push
iret
xchg
push
mov
ljmp
scas
hlt
movsb
ficomps
cs
mov
in
clc
mov
mov
dec
or
sub
lret
imul
cmp
xlat
ss
jmp
and
ss
divb
dec
jle
mov
sbb
out
fbstp
into
inc
push
xchg
mov
adc
cmp
out
popf
imul
or
mov
jl
fldcw
movswl
stos
sub
orl
inc
sub
xor
shrb
xchg
xchg
adc
fsubrl
fimull
nop
imul
out
mov
push
fstps
repz
cmpsl
dec
cltd
lds
jbe
bound
mov
mov
lods
pop
ljmp
add
sub
mov
push
idivb
mov
xchg
inc
loopne
jne
mov
inc
imul
in
cld
cltd
out
cmc
loop
xchg
push
in
lods
sbb
jb
pop
fs
roll
cmp
inc
idivl
out
mov
lods
xor
test
mov
adc
pushf
scas
enter
out
lock
roll
sub
and
rcrl
or
fs
pop
dec
mov
cmp
cmpsl
out
into
fisubs
add
jno
mov
jge
bnd
cmc
mov
push
inc
out
jge
mov
or
dec
mov
inc
inc
or
cs
adc
movsb
xor
stc
push
ja
idivl
lea
mov
enter
xchg
sbb
mov
push
mov
pop
jnp
mov
mov
dec
outsb
cltd
xor
iret
xor
jae
ss
xchg
nopl
push
xor
add
inc
insl
dec
jl
cli
es
sub
cli
jne
into
stc
incb
xor
popa
pop
push
pop
xlat
shrl
cmpl
cmpsb
jmp
hlt
outsl
pop
int3
int3
in
xorl
xchg
add
push
mov
std
mov
add
xchg
sbb
pop
add
xor
out
xlat
jo
lret
repnz
add
jl
nop
scas
leave
jmp
push
mov
or
sub
stos
pop
mov
jle
mov
add
scas
clc
es
and
sti
imul
arpl
mov
jno
inc
fsubl
lock
mov
clc
jbe
in
mov
push
cmp
pop
loop
nop
dec
fidivs
pop
jmp
cmp
and
iret
jg
arpl
clc
ja
call
stos
scas
hlt
cltd
fstps
ljmp
mov
loope
adc
daa
test
jg
in
adc
ss
inc
xchg
dec
mov
gs
pop
cvtpi2ps
push
shl
push
or
pushf
jecxz
cmp
mov
jbe
jnp
mov
xchg
sbb
lcallw
jge
in
inc
adc
loop
scas
out
push
lret
pop
and
aad
push
cs
dec
adc
jae
adc
sbb
mov
push
outsb
mov
add
mov
jno
aaa
in
mov
pop
adc
mov
mov
popf
sub
bound
jmp
repz
cmp
push
loopne
mov
in
xchg
scas
out
inc
dec
outsb
inc
mov
pusha
fwait
stos
dec
adc
loope
or
movl
scas
in
cmp
dec
mov
mov
fisubl
push
or
mov
ficoms
out
aad
lea
test
popa
repz
cmp
mov
add
iret
mov
rcr
scas
mov
data16
pop
ljmp
pop
add
xchg
test
cmp
and
adc
lock
add
leave
leave
add
mov
xchg
aas
cmpsb
insl
ficoml
push
ret
adc
rdmsr
imul
mov
pop
fistps
and
xor
mov
mov
iret
pop
jg
jo
sbb
jb
sbb
push
fiaddl
aad
movsb
add
xchg
push
xchg
sub
leave
ds
add
dec
dec
mov
lahf
leave
jl
xchg
xchg
sub
dec
pushf
inc
push
inc
cmc
jnp
and
aad
push
xchg
sbb
jno
mov
push
and
in
xor
in
in
jmp
jbe
out
ret
faddl
rcrl
jp
push
jb
add
xor
mov
cmpsl
imul
jg
js
fsubrl
inc
or
lcall
stc
mov
loope
sub
push
xchg
add
sbb
inc
add
popa
pop
xchg
nop
popa
aam
mov
sahf
jmp
mov
gs
jmp
push
fisubl
popa
rorl
dec
cmp
rolb
imul
pop
addr16
pop
std
lea
mov
push
sub
and
jae
mov
faddl
das
movsb
sub
mov
stos
outsl
or
push
loope
cltd
fcmovnb
push
xorb
das
sub
out
int3
ljmp
adc
arpl
sbb
arpl
shl
cmpsb
xchg
subb
xlat
idiv
mov
pop
inc
ret
xchg
insl
pop
mov
cmpsb
xor
add
icebp
test
daa
cmp
push
sbb
sub
mov
rorb
jecxz
mov
xlat
imul
rolb
and
push
dec
cmpsl
sti
dec
int
inc
or
adc
push
imull
mov
jns
pop
lea
adc
jne
inc
mov
insl
xchg
outsb
or
mov
loopne
lods
je
dec
dec
and
sub
lret
std
out
add
jbe
and
pop
in
xchg
hlt
push
fisubl
fs
jnp
je
adc
imul
and
stc
out
cwtl
and
shlb
clc
push
mov
xchg
ret
loop
mov
inc
sub
inc
mov
pop
push
and
mov
fildl
shlb
rclb
jle
es
add
hlt
push
inc
adc
insl
testb
imul
call
mov
cs
dec
mov
roll
and
push
iret
ret
arpl
sbb
pop
pop
push
movb
pop
stc
and
imul
lea
out
or
mov
out
jbe
aas
ja
aam
dec
outsl
sub
fcomip
lea
adc
sbb
out
enter
andb
rclb
out
inc
push
stos
push
jmp
rorb
ret
cmpsl
mov
mov
scas
loopne
es
inc
pop
shll
pop
cmpsb
cmc
xchg
sub
and
jns
jecxz
test
std
aad
mov
jne
shl
mov
xor
sbb
mov
adc
and
xchg
cmp
xor
jmp
jbe
bound
daa
add
jno
in
xor
aad
out
adc
adc
imul
movsl
or
or
int3
mov
aas
scas
add
mov
push
mov
pushf
or
cmc
and
cli
jmp
inc
add
rorl
push
popa
mov
adcb
xor
lgs
enter
cmp
jne
push
jg
aam
xchg
sbb
mov
jecxz
dec
or
mov
sub
outsb
dec
test
mov
in
jp
mov
pop
cs
adc
xor
jns
subl
push
rorb
outsl
out
fistl
out
mov
pop
jno
out
jno
lahf
cli
dec
xchg
in
rcll
aaa
lds
or
lret
test
insb
xor
addr16
add
repnz
xchg
out
lahf
ficomps
shll
loopne
add
repz
inc
inc
test
dec
jp
mov
mov
xor
pusha
pop
dec
cmp
adc
mov
std
std
icebp
and
sbb
rcrb
cwtl
out
xchg
jp
or
mov
xchg
pop
insl
and
mov
pop
sub
mov
pop
shr
push
les
xlat
mov
adc
aaa
imul
mov
dec
test
lock
adc
fs
test
dec
cmp
sub
jbe
pop
dec
pushf
and
mov
aad
rcll
inc
add
pop
sbb
or
fcmovnb
add
sbb
in
xchg
sarb
mov
add
cld
aad
jns
shlb
fists
sub
ficoml
mov
mov
cwtl
ret
push
mov
jnp
push
xor
push
add
icebp
lds
addb
enter
jae
jmp
mov
cltd
cld
or
les
and
enter
mov
jne
stos
pop
mov
movsl
adc
push
inc
inc
mov
jg,pn
inc
fcomps
xchg
mov
mov
ja
mov
cmp
aad
sbb
inc
leave
pop
iret
mov
sub
fldcw
xchg
outsb
mov
std
js
mov
ljmp
iret
push
gs
push
mov
leave
adcb
push
mov
push
iret
dec
xorl
mov
faddl
std
adcb
and
ljmp
scas
inc
add
inc
xchg
lea
pop
and
mov
mov
clc
call
call
int3
icebp
in
jno
lods
movsl
and
lret
sbb
push
ss
rorl
inc
jl
xorb
sbb
sarl
or
bound
or
xchg
shrl
sub
shlb
lods
lea
jns
pop
lds
ret
mov
pop
inc
ljmp
ret
call
lcall
pushf
leave
push
push
add
dec
leave
rorb
adc
cmpsb
shll
push
nop
movsl
mov
lahf
dec
shll
sub
fxam
xor
pop
sub
inc
xchg
dec
loope
xchg
adc
out
inc
stc
lock
scas
rclb
shrb
xchg
mov
push
adc
push
lcall
bound
cmp
push
mov
int3
faddl
jecxz
and
es
xor
mov
scas
int
inc
cmp
pop
mov
repz
cwtl
push
cmpsl
xor
inc
aad
cmp
stc
push
add
xor
in
sti
outsl
test
push
mov
in
addr16
xor
pusha
sbb
rep
in
add
aam
std
xchg
out
cld
lds
aam
mov
sbb
xchg
loope
dec
lds
mov
gs
pop
out
pop
icebp
test
fldenv
stos
cmpsl
sbb
jb
mov
vmread
or
out
lock
dec
dec
dec
adc
sub
scas
or
jo
mov
xchg
mov
xor
test
adc
enter
xor
xor
imul
adc
repz
adc
xor
js
nop
nop
mov
inc
mov
pop
test
xchg
mov
ljmp
jnp
lds
fsincos
stos
jae
shrb
add
sbb
cld
mov
jge
clc
sbb
mov
pop
es
popa
adc
inc
and
test
xor
sbb
movsb
outsb
mov
aaa
movsb
outsb
pop
jg
int
arpl
xchg
mov
sahf
hlt
js
xor
mov
lret
pop
fidivs
pop
iret
pop
pop
inc
sub
mov
ss
shll
cwtl
jge
ss
pop
cmp
pop
inc
sub
mov
jp
testb
dec
or
dec
rorb
lahf
cmpsb
movsl
mov
sbb
pop
pop
pushf
jae
xor
or
inc
stos
cmp
jmp
mov
push
inc
jo
test
sub
out
arpl
inc
push
call
ljmp
and
pop
inc
scas
adc
fildll
jecxz
inc
lods
jns
pop
or
imul
push
pop
cld
popf
ffree
cltd
xchg
inc
mov
and
inc
mov
ret
ret
adc
jb
add
sti
sbb
inc
shrl
push
hlt
nop
sbb
xchg
movsb
pop
iret
les
out
lds
pop
push
testb
mov
in
sbb
mov
or
jnp
mov
scas
stos
sub
lods
jbe
inc
cmpsl
test
cltd
cmp
out
daa
adc
clc
rcll
mov
shr
xorl
push
pop
or
aas
mov
xor
dec
cmp
shr
loop
dec
lcall
dec
push
pushf
dec
lcall
lret
mov
xchg
mov
lock
test
lret
sbb
test
insl
es
push
dec
lahf
inc
and
dec
cmc
dec
mov
in
lds
jge
jno
fsubl
mov
fs
sbb
push
mov
outsl
sbb
inc
scas
pop
faddl
and
addr16
fnstsw
push
loopne
jae
inc
mov
sub
inc
les
ljmp
ja
enter
leave
pop
adc
in
mov
stc
cmp
mov
sub
iret
ds
jl
insb
sbb
fildl
mov
gs
jbe
mov
add
xchg
push
add
scas
ds
fwait
inc
lods
mov
mov
gs
sub
subl
imul
inc
imul
xor
roll
jge
lods
sbb
mov
cli
popfw
push
repnz
iret
jge
lcall
add
cmc
sub
jp
iret
out
movsb
sti
and
dec
stc
mov
insb
test
cltd
out
push
pop
bound
jle
add
sub
mov
mov
xchg
gs
jge
inc
out
icebp
inc
jp
lock
and
mov
inc
xor
js
cmp
out
frstor
ja
stos
ds
push
ss
jmp
pop
pop
stos
lods
cli
xchg
pop
hlt
adc
mov
hlt
inc
in
movsb
in
into
movsl
xor
frstor
aas
in
adc
pop
rclb
xlat
movsl
push
popa
out
mov
je
lcall
inc
movsb
fisubs
enter
pop
jg
or
pop
lock
and
mov
addr16
cmp
mov
arpl
mov
and
and
mov
pop
or
jle
cwtl
xchg
pop
aaa
jns
sub
or
in
jp
outsb
in
scas
cmp
add
cwtl
cli
lcall
mov
or
cmc
imul
cmpsb
dec
push
sbb
std
push
xchg
into
pushf
popa
and
push
or
ja
std
adc
sub
xchg
lahf
aam
pop
inc
dec
nop
insl
mov
lds
jne
push
notb
test
into
mov
cmc
jae
cmpsb
andb
aam
mov
jg
ret
lods
roll
jnp
fwait
sub
arpl
aas
gs
mov
pop
jno
mov
jbe
inc
pop
pop
push
out
xchg
cs
test
out
sbb
icebp
in
jb
pop
hlt
repnz
outsb
sub
je
clc
inc
mov
jbe
push
cwtl
lahf
lods
pop
xchg
sbb
xchg
xchg
fs
add
ja
xor
pop
iret
xor
test
push
sub
sbb
mov
movsl
shll
wrmsr
xchg
mov
add
test
iret
rorl
jns
lcall
mov
movsl
jmp
pop
adc
and
rep
cmp
hlt
cmc
sbbl
call
stc
cmp
xor
icebp
mov
pop
popl
ljmp
mov
and
or
push
stos
int3
adc
sub
cmp
inc
cmp
loope
push
jo
stos
insl
mov
roll
int3
cmpsb
jmp
dec
aaa
data16
jns
jecxz
sarb
and
dec
das
dec
leave
push
int
pop
insl
cmp
adc
xor
sub
testl
lahf
pop
sub
cmc
mov
dec
cmpsl
aad
xchg
xor
fldenv
ficomps
fdivs
les
cltd
fadds
cmp
push
dec
adc
or
mov
adc
xor
push
jmp
ljmp
gs
sub
imul
dec
adc
mov
or
fbstp
and
ss
adc
hlt
shlb
sbb
shll
div
nop
inc
pop
xchg
arpl
sbb
je
cmpl
or
sti
out
pop
mov
push
jle
dec
xchg
mov
movsl
pop
wrmsr
xchg
pop
test
jns
stos
lcall
and
jne
sub
xor
xor
cs
shlb
out
inc
jp
mov
test
adc
inc
dec
adcb
xchg
hlt
xchg
ja
mov
adc
or
arpl
dec
sbb
jne
xor
imul
inc
clc
xchg
pop
clc
fistpll
adc
negb
bnd
sub
inc
sub
inc
clc
fistl
xchg
mov
pop
mov
sub
or
clc
enter
cmp
fnstsw
jecxz
clc
cmp
aad
imul
jle
int
movsl
cmpl
sub
dec
sub
mov
sti
add
xchg
xlat
pop
push
or
mov
outsl
jae
mov
xchg
sub
mov
sub
push
stos
adc
in
jl
movsb
dec
dec
pop
xchg
sti
loop
stos
dec
sbb
adc
add
and
fmuls
popa
jae
push
fisubrl
or
or
imul
lea
insl
xchg
fwait
rolb
stos
and
or
mov
in
push
fcmovnu
in
imul
inc
jle
es
sbb
jle
xor
data16
lods
movsb
and
or
sub
and
and
pusha
divl
mov
addl
push
push
and
test
ret
inc
adc
arpl
add
rorb
sbb
mov
jmp
fidivrs
cmp
push
cmpsl
movsl
icebp
imull
xchg
xor
push
cmp
push
fadd
xchg
push
pop
int3
jecxz
inc
cli
and
dec
icebp
in
mov
pop
push
push
mov
in
leave
sahf
sbb
pop
push
inc
enter
dec
or
mov
imulb
xchg
sbb
in
ds
push
loopne
jp
push
sbb
mov
aam
xor
jp
add
jno
fimull
and
cmp
imulb
mov
add
mov
and
cli
jmp
dec
cmp
adc
popa
lods
test
fucomp
dec
scas
sbb
adc
cmp
push
ret
cmpsl
stos
jb
mov
fcomps
into
or
lcall
ret
xchg
fadds
aad
outsl
cli
ljmp
test
mov
mov
lods
repz
and
sub
sbb
jne
pushf
xchg
pop
mov
test
xor
mov
clc
xor
cmp
iret
movsl
sbb
or
dec
xchg
out
scas
mov
jbe
les
jb
xchg
xchg
insl
sbb
subl
aas
cmpsb
or
iret
mov
pop
dec
pop
test
xchg
cmp
popf
cmp
jle
lods
cs
jnp
jno,pt
idivb
ljmp
sti
inc
add
imul
cmp
rcrl
arpl
xchg
xchg
dec
stos
in
xor
dec
mov
xlat
int3
loop
orl
bound
pusha
xchg
mov
push
mov
jbe
inc
pop
es
sub
inc
mov
cmp
adc
addb
insl
ljmp
dec
test
push
call
in
sub
lea
push
mov
orb
bound
push
fwait
dec
add
add
cld
xor
or
ret
out
or
aaa
f2xm1
mov
push
inc
in
test
or
out
scas
push
out
xchg
cmp
aad
fldenv
pop
add
xchg
dec
icebp
out
mov
pop
lock
inc
scas
outsb
out
fs
stc
inc
sbbl
xlat
pop
popa
enter
push
insl
bound
clc
jbe
pop
jno
inc
and
outsb
das
gs
in
and
outsl
and
pop
lcall
aas
or
std
insb
jae
mov
or
mov
jae
mov
pop
cmp
and
test
jecxz
call
dec
imul
cmp
push
loope
mov
push
ss
mov
ret
negl
jb
das
mov
cmp
adc
xchg
hlt
in
pop
lods
mov
aaa
pop
ja
jmp
or
jne
jl
shlb
sbb
mov
sub
xchg
fisttpll
mov
or
jb
mov
je
test
mov
scas
inc
das
jecxz
mov
popf
std
icebp
jnp
sbb
push
push
cwtl
and
das
pop
out
imul
mov
inc
inc
scas
xor
mov
fmuls
lds
mov
or
xor
mov
and
loope
pop
xor
push
jnp
adc
jns
push
add
out
cmp
pusha
push
loop
mov
sub
pop
cmp
movsl
jbe
xor
jnp
sub
jg
add
jno
cmp
gs
out
das
xchg
fisttpll
call
xchg
popf
and
icebp
nop
es
loope
adc
pop
gs
test
xchg
addr16
sub
jmp
mov
jne
fadds
fmull
in
stos
mov
dec
das
pushf
insl
xor
insb
sbb
insb
inc
and
lcall
loop
mov
popf
outsb
sbb
mov
jnp
push
xchg
and
and
pusha
and
or
add
out
add
mov
sub
pusha
roll
cmp
cmp
xchg
pop
mov
cmc
test
in
cld
outsb
push
popf
pusha
sbb
testb
test
mov
addr16
aad
mov
push
adc
aas
hlt
jecxz
xlat
cmp
adc
pop
adc
andl
pop
std
mov
adc
pop
rolb
push
test
js
test
mov
jo
ror
push
xchg
lret
into
inc
xor
pushf
add
sbb
aad
enter
idiv
xchg
mov
and
je
scas
pop
mov
adc
pop
pop
add
sbb
adc
stos
pop
sub
popf
push
mov
outsb
les
pop
jecxz
mov
divl
sub
leave
sbb
sub
stos
inc
dec
pop
push
pop
shlb
mov
or
pusha
ja
pusha
or
int3
pop
lret
leave
rcll
ret
ss
sub
cmp
int3
push
push
jg
push
push
add
insl
mov
pop
movsl
push
xor
jge
mov
das
sub
xor
cmp
movb
mov
adc
lods
mov
mov
daa
aas
jns
pop
mov
je
je
push
and
cs
xchg
push
xor
popf
adc
out
xlat
int3
adc
dec
rcl
aam
dec
jmp
orl
dec
and
inc
fnstenv
push
sti
adc
out
divb
xchg
or
mov
int3
test
fnstsw
mov
test
mov
push
xchg
push
ficoml
pop
sbb
cmp
gs
inc
ficomps
push
mov
sbb
flds
lret
lahf
fadd
xorps
arpl
sub
int
dec
push
js
sbb
or
fcomps
dec
push
mov
lds
pop
fnstenv
add
and
ret
mov
mov
arpl
jo
aam
andb
or
pop
mov
mov
ss
add
fnstenv
lea
sub
fldenv
jne
xchg
jl
test
xchg
sbb
lods
mov
add
mov
into
push
loop
push
iret
sbb
or
les
mov
add
popa
push
xor
testb
mov
or
inc
cmp
jb
out
fiaddl
pop
scas
jle
jno
sti
sub
pop
sbb
or
js
dec
repnz
into
or
pop
insl
fstl
xorb
js
push
ss
test
or
leave
leave
jb
jecxz
inc
sarb
inc
sub
or
out
push
dec
jl
clc
aaa
adc
push
ret
inc
add
enter
push
cld
dec
in
outsb
in
add
dec
sbb
pop
jb
jbe
push
outsl
test
pop
stos
iret
enter
xor
clc
inc
pop
sbb
add
mov
lods
pop
cmpsb
adc
adc
cld
pusha
and
xor
lret
lods
pop
data16
mov
fdivs
push
lds
pop
jmp
ss
xchg
ficomps
add
out
dec
mov
cmc
aam
xor
bound
dec
pinsrw
jp
push
sbb
xchg
sti
adc
pop
cmpsb
sbb
ret
imul
and
nop
ss
jle
out
mov
xor
sub
dec
pop
mov
inc
js
popf
pushf
fstl
movsb
test
mov
push
jnp
stos
add
int
or
lock
cmp
ficoms
aad
idiv
pop
cmp
mov
aam
add
jbe
jmp
xlat
subl
mov
fidivrl
dec
ja
mov
fsubrl
mov
pop
stc
xor
jmp
les
push
adc
mov
test
movsb
sbb
imul
mov
adc
pop
fnsave
cmpsl
pop
subb
jo
mov
mov
mov
fistps
jl
or
inc
incb
pop
cld
mov
pop
inc
lcall
sti
test
repnz
pusha
xor
pusha
stos
leave
sbb
sbb
add
mov
add
xchg
sub
mov
subb
mov
jno
cmpsl
push
faddp
xor
in
dec
xor
jbe
std
fadd
movsb
stc
outsb
mov
inc
jb
sbb
negb
mov
and
and
mov
cmpsb
and
loopne
xor
sub
out
add
dec
and
mov
dec
or
faddl
or
sub
lds
jns
pop
out
movsl
xchg
out
ja
fcompl
xchg
js
jns
ljmp
dec
dec
out
popf
mov
adc
cmp
repz
fists
movsb
dec
imul
mov
xor
iret
sub
push
es
add
jecxz
gs
pop
test
hlt
icebp
ja
xor
pop
or
xchg
xchg
call
sbb
in
jecxz
int
mov
cld
fs
test
outsb
mov
xchg
jmp
icebp
out
popf
push
hlt
cli
pushf
sub
pop
xchg
sub
xor
pop
pop
jle
rep
sub
loope
cli
imul
dec
add
mov
push
sub
cmp
shrl
sahf
cmovo
sti
stos
push
xlat
stos
je
cmp
cmpsl
pop
in
add
lret
sub
jo
clc
test
add
or
jg
test
out
push
dec
add
mov
sahf
cli
lcall
push
cmp
mov
test
mov
inc
repz
cli
push
lea
imulb
fucomip
pusha
or
loop
call
mov
push
inc
cmp
pop
cmpsb
lcall
not
pop
arpl
sub
rcrb
sub
shll
enter
out
jae
dec
ss
scas
adc
add
loop
lahf
into
int3
jns
lea
xchg
push
add
pop
sub
mov
adc
and
fsubrs
xor
sbb
or
sub
andb
in
add
pushf
aas
cs
cmp
aad
aaa
fidivs
inc
fists
push
fstpl
pushf
push
fdivl
adc
pop
xor
popa
hlt
and
cmp
pop
push
ja
push
and
sub
or
jns
fs
cmp
add
xchg
out
shl
dec
js
inc
mov
divl
push
mov
cmp
mov
jmp
sub
cmp
pop
and
mov
stc
lret
add
xor
add
repnz
mov
jg
pop
fadds
imul
or
ljmp
vunpckhps
cld
mov
inc
xor
mov
shlb
fs
and
jp
out
adc
sahf
popa
test
jo
xlat
ret
xor
scas
jl
pop
xchg
mov
adc
mov
insb
inc
aas
cmp
sub
std
jae
mov
popf
add
int
cli
int3
and
aas
clc
das
lods
mov
xor
test
stc
aaa
mov
ds
mov
inc
xor
dec
and
popf
push
in
mov
jnp
in
mov
pop
jge
push
and
nop
shll
cltd
in
add
push
add
jno
inc
je
mov
jge
out
mov
xor
aaa
fidivrl
ret
lea
frstor
push
fisttps
xlat
adc
sub
ffreep
stos
cld
and
mov
sbbl
in
shl
mov
mov
call
pop
fldt
pop
mov
js
adc
pop
fstps
xchg
push
add
mov
and
add
jle
jo
fcomps
lds
mov
push
push
js
xor
mov
add
int
xchg
jmp
addr16
jecxz
adc
dec
inc
mov
jb
testl
fildl
push
icebp
movsb
xor
ljmp
out
xor
dec
lds
mov
fdivr
js
sbb
jne
mov
jne
jmp
jae
cmp
cltd
xor
insl
mov
mov
dec
in
clc
cmc
lock
loope
inc
inc
sub
cmp
jo
jb
or
pusha
cmp
push
mov
sub
fisubs
mul
out
mov
cmp
pop
mov
call
and
mov
push
lret
xor
jno
push
inc
and
cli
jbe
pop
add
sub
jl
inc
daa
stc
in
lods
mov
adc
cmp
out
xchg
push
jmp
inc
pop
aad
pop
or
dec
mov
sub
stos
mov
aas
jge
cmp
mov
mov
and
lods
call
xor
dec
sti
cwtl
popa
and
jle
lea
xchg
cli
xor
cmp
xor
xor
arpl
inc
xor
mov
sbb
push
fmulp
push
cmpsb
adc
adc
add
cs
xchg
xchg
xchg
push
inc
mov
mov
ret
cmpsl
sarb
iret
dec
imul
test
lea
sti
push
jp
adc
lret
int3
aad
ret
test
mov
cmpb
mov
pushf
dec
xchg
insl
shl
outsl
iret
mov
inc
pop
les
mov
push
jns
lods
pop
cmp
xchg
rolb
jno
push
out
jno
mov
cmp
push
nop
adc
mov
fldlg2
pop
in
fimuls
xchg
clc
jo
scas
inc
xchg
mov
pop
adcl
mov
mov
push
xchg
mov
enter
lea
data16
mov
inc
idiv
dec
push
add
jle
or
and
fildll
push
ja
arpl
push
test
push
and
pop
daa
xchg
js
cwtl
int
imul
mov
pop
fstl
and
shll
pop
cmp
test
lret
add
xchg
adc
js
iret
call
sub
popa
jg
push
and
iret
sbb
lods
mov
loopne
dec
xchg
insb
pop
das
dec
xchg
fldt
dec
push
cltd
bound
cld
adc
popa
push
jno
lea
sub
dec
addb
cmc
mov
andb
ljmp
sub
lds
sbb
jbe
add
and
push
dec
lret
inc
adc
pop
out
sub
repz
mov
jbe
mov
pop
lret
mov
jo
xor
jbe
cmc
mov
mov
imul
sbb
aas
sbb
bound
sub
mov
out
or
lret
jmp
push
mov
ret
cmc
lock
lret
dec
mov
into
popa
les
iret
dec
mov
mov
pop
fwait
pushf
pop
and
mov
imul
lret
pusha
push
fs
sub
sbb
mov
outsb
mov
jecxz
add
pop
inc
push
in
stos
cwtl
out
inc
iret
xor
das
rorl
push
ljmp
aam
movsb
mov
outsl
cli
mov
popf
das
xchg
test
mov
pop
jo
pop
inc
hlt
mov
mov
dec
mov
cmp
mov
add
movb
push
cltd
or
clc
das
mov
add
push
mov
js
cs
call
xor
xor
mov
adc
lahf
mov
inc
pop
mov
cmc
mov
loope
sbb
stos
cmpsl
iret
fwait
in
pop
dec
ja
scas
js
test
push
jp
mov
push
dec
jb
fidivs
jns
movsl
in
mov
mov
movsl
adc
push
enter
push
push
imul
mov
popf
adc
inc
arpl
add
push
sbb
cmc
mov
test
daa
outsb
add
popa
repz
inc
arpl
fsubs
notl
mov
fs
pop
cld
mov
sub
iret
xor
cwtl
ja
cmp
cmp
jecxz
cwtl
xchg
jnp
repz
xor
adc
aas
dec
daa
and
push
lcall
icebp
mov
test
cmp
add
mov
dec
dec
cmp
nop
xchg
imul
shlb
sbb
cmp
in
ret
cmp
mov
mov
ret
lds
mov
out
in
xchg
mov
or
inc
shll
ret
mov
mov
cmpsb
pop
test
enter
popa
mov
dec
sbb
cmp
lea
ret
mov
push
mov
cmp
test
and
dec
jge
ss
aaa
rorl
and
dec
jl
ljmp
icebp
pop
xor
cmp
call
fwait
leave
pop
cmp
and
call
gs
jmp
call
xchg
inc
out
xchg
add
fs
not
pop
xchg
push
adcl
ja
outsl
loopne
pop
push
clc
popa
cld
aad
fldlg2
and
adc
mov
xchg
sbb
jns
orb
add
xchg
dec
shrl
ret
enter
fs
mov
scas
cmpl
inc
loop
xchg
cli
in
lahf
stos
cmp
int3
lock
rep
jg,pt
push
mov
jbe
add
add
dec
in
adc
or
xchg
cmc
mov
aas
shll
sbb
mov
out
sub
mov
fcoml
test
lock
xchg
mov
or
lret
xor
jbe
shl
sbb
mov
mov
or
jns
mov
ret
mov
push
jecxz
xchg
shl
push
jo
xchg
cmpsl
outsb
in
std
push
int
pop
jp
and
xor
arpl
dec
and
xor
and
into
inc
aad
outsb
nop
ljmp
xchg
stos
sub
test
inc
sarb
mov
data16
enter
mov
dec
dec
js
insb
fildll
xchg
cmp
jb
adc
das
push
sub
int
movsl
lds
iret
ret
xor
call
lahf
cli
in
scas
cld
mov
jg
addr16
iret
test
pusha
imul
shl
cmpsb
jmp
and
jns
ds
in
lret
cmpsl
push
xchg
push
jecxz
dec
push
sub
addr16
mov
sub
dec
or
fs
fists
xchg
sub
jo
mov
pop
push
daa
mov
mov
mov
push
popa
mov
jle
dec
jbe
enter
inc
das
sarb
push
test
jl
inc
femms
sti
iret
mov
test
fcmovnbe
mov
fisttps
jno
lcall
mov
push
cmp
je
lock
dec
xchg
jmp
mov
cmp
or
inc
and
mov
jp
in
push
push
popa
loopne
push
cld
xor
mov
inc
int
imul
mov
in
cmp
inc
cwtl
jo
addr16
push
pop
jmp
adc
daa
push
outsb
sti
push
es
sbbb
ret
adc
imul
add
cmc
jns
dec
sbb
dec
test
pop
push
mov
mov
mov
push
enter
mov
or
js
inc
lods
cltd
sbb
dec
das
adc
add
stos
rcl
imul
addb
pop
ret
inc
fs
adc
xchg
in
push
jg
dec
mov
or
mov
negb
ljmp
jo
int
fwait
xchg
lea
adc
lods
mov
push
add
cmp
mov
sbbb
push
or
in
int
pusha
js
jo
test
jecxz
cli
and
stos
mov
xchg
out
pop
mov
outsl
out
mov
dec
filds
mov
sbb
mov
cmp
cmp
cs
or
and
fidivs
in
xchg
stc
clc
ss
inc
imul
and
xor
stc
jae
mov
cmovo
dec
das
pop
jecxz
push
push
cmp
jle
icebp
pop
repz
cmp
sub
mov
and
bound
pop
sbb
dec
popf
test
iret
xor
mov
sbb
js
scas
cmp
push
fs
adc
mov
sbb
pop
test
clc
nop
das
mov
movsl
xchg
jbe
outsl
pop
call
inc
sub
push
jno
mov
das
cmp
and
mov
mov
fdivr
adc
jae
stc
xchg
sbb
incb
fwait
dec
leave
inc
jmp
lret
sbb
rcrb
or
add
out
int
imul
repnz
xchg
clc
mov
nop
pusha
jno
dec
dec
inc
inc
ficoml
jno
in
push
ljmp
xlat
dec
idivb
inc
push
addr16
imul
sbb
repz
inc
ljmp
pusha
aam
lods
in
mov
xor
or
pop
xor
arpl
test
out
and
mov
push
dec
scas
jmp
orl
sub
add
adc
rcrl
mov
loopne
sub
or
push
xchg
jmp
lds
ds
adc
cltd
xor
imul
test
lcall
mov
push
gs
xor
sub
jmp
jle
adc
jle
fcompl
dec
jns
xlat
push
in
imul
sbb
mov
ss
pop
mov
or
in
stos
pop
inc
xchg
daa
add
imul
insl
test
jge
aaa
dec
mov
mov
cltd
cmc
movsb
jp
scas
pop
lret
pop
repz
rclb
or
das
stos
and
pushf
in
cmp
mov
sub
cs
and
and
jns
in
hlt
in
je
stc
das
cs
in
sahf
cmc
or
lahf
and
in
frstor
add
xor
dec
lods
ljmp
mov
push
iret
mov
testl
or
xor
add
dec
mov
xor
xor
outsl
pop
lea
xor
fnstsw
mov
jns
push
nop
inc
add
xlat
repnz
xor
ror
mov
bound
xor
and
inc
cli
xchg
call
inc
dec
insb
adc
sbb
mov
rolb
pop
mov
aaa
int
xchg
jle
inc
mov
loop
dec
mov
xor
push
std
mov
lcall
sub
ljmp
add
pop
push
mov
jb
xchg
push
push
sbb
repz
jecxz
insl
mov
cltd
add
xchg
scas
pop
ja
cltd
popl
push
insl
add
loopne
pop
popa
ja
lret
bound
pop
push
testl
xchg
jp
popf
adc
sbb
dec
ffreep
shrl
dec
or
pop
jae
inc
jne
xlat
cs
inc
pop
mov
push
daa
leave
filds
call
out
add
cmp
or
sbb
sti
push
js,pn
mov
push
mov
test
cmpsb
push
pop
lret
or
jae
dec
and
cld
inc
dec
sahf
call
adc
pop
xor
shll
lods
mov
movsl
sbb
lock
and
roll
call
pop
mov
inc
xlat
sub
imul
jg
sti
sbb
push
or
jbe
or
cmp
cmpsb
lcall
mov
outsb
outsb
lds
sub
mov
jno
adc
fdiv
and
in
xor
lret
cs
jae
adc
adc
dec
xchg
addb
cmp
repnz
sbb
and
cltd
push
loopne
rcrl
mov
jb
jge
out
lea
xchg
aam
cmpsb
adc
mov
loopne
jp
jecxz
add
and
cmpsb
dec
xor
xchg
xchg
jle
mov
mov
sub
xchg
ljmp
ror
in
shl
cli
jle
pop
add
adc
sub
dec
scas
gs
xor
jecxz
test
mov
sti
and
xchg
dec
sbb
and
pop
stos
dec
sub
addb
inc
fxch
rorb
lcall
mov
ds
in
repnz
in
ja
rcr
xor
mov
int3
add
jnp
jge
loop
add
loop
popf
add
daa
jmp
stc
popa
mov
inc
test
jge
stc
out
fisttpll
and
aam
lahf
push
lret
jbe
js
mov
lods
or
xor
bound
pop
imul
cltd
jns
adc
mov
jge
jo
adc
dec
arpl
mov
push
mov
jmp
out
enter
or
jge
add
sub
outsb
lret
adc
cmp
mov
jle
decb
dec
push
bound
mov
inc
loop
xchg
mov
cmpsl
xchg
fsts
andps
push
cmp
jmp
add
mov
aaa
shrb
popf
cmpsb
fwait
into
sbb
xor
push
sub
lods
stc
pop
add
shlb
out
dec
cltd
pop
mov
fisttpll
and
bound
jp
call
jl
xchg
xor
popa
mov
inc
pop
sbb
je
push
imul
fisubl
jg
inc
insl
and
jl
dec
pop
mov
adc
test
lret
sbbb
je
jl
popa
cmp
mov
bound
insl
stos
addr16
xchg
pop
inc
sbb
in
lock
cmp
adc
dec
push
pop
cmpb
iret
or
xchg
xchg
mov
mov
mov
leave
pop
gs
mov
rol
mov
dec
inc
cld
pop
adc
outsb
add
inc
dec
adc
movsl
jb
lea
cmp
mov
movsb
movsl
dec
push
mov
ret
push
sti
xor
lock
es
fldcw
mov
mov
jge
movsb
xor
push
mov
mov
insb
xchg
adc
incl
outsl
xor
pushf
dec
adc
pushw
popf
es
mov
mov
push
pusha
cltd
ret
jecxz
sahf
jb
je
adc
shll
inc
add
cmp
sub
xchg
cs
jl
mov
mul
mov
dec
je
or
pop
add
xchg
sub
xchg
xchg
cmp
or
mov
add
scas
xchg
faddp
jns
loop
push
fs
call
adc
push
pop
lds
add
mov
ret
pop
ret
push
imul
outsb
fimuls
add
test
pop
repz
xchg
cld
dec
stos
ret
add
daa
push
xor
sub
pop
loope
outsb
nop
and
cwtl
mov
int3
mov
jne
push
scas
inc
in
sub
adc
push
dec
lods
shl
sbb
bound
sbb
sub
cmp
fisttps
push
xor
and
cmpsl
add
ds
mov
loopne
insl
movsb
sbb
mov
hlt
sub
dec
and
mov
push
add
in
xlat
shrl
stc
mov
in
pop
fcmovnb
xchg
push
call
repz
fsubrl
rcrb
sub
pop
cmc
sub
adc
scas
inc
sub
jae
pop
mov
add
sub
js
notb
push
fistl
jle
pop
inc
cltd
jmp
pop
cli
aas
inc
jmp
lods
adc
pop
test
or
dec
out
add
or
ret
lahf
gs
or
mov
les
imul
cmp
popa
out
fbld
xor
push
stos
add
push
aaa
sub
in
fisubrs
fimuls
mov
in
clc
outsb
pop
jae
xchg
jno
ret
fcmovne
xchg
mov
or
fs
mov
lods
mov
mov
roll
das
icebp
pop
and
pop
pop
add
sub
adc
shlb
xor
inc
add
enter
idivl
jo
test
cmpsl
pop
xor
test
xlat
subb
cld
inc
pop
pop
mov
lods
push
loopne
ficoms
popa
cmp
mov
push
jno
or
cwtl
push
sub
ficomps
xor
dec
push
pop
jmp
inc
scas
into
pop
mov
in
mov
cmpsl
out
dec
push
insl
and
or
xchg
popa
push
scas
push
stc
fs
lock
pusha
in
push
xchg
add
arpl
aad
add
dec
mov
pop
pop
fcmovb
jge
movups
and
insl
int
repz
mov
shlb
and
mov
push
push
mov
push
fcomps
inc
pop
movb
icebp
jp
mov
sbb
int3
add
pop
add
xchg
jne
push
ret
xor
leave
pop
sahf
fbld
ret
add
mov
cmpsb
rorb
jmp
jne
mov
movnti
xchg
or
mov
jo
shrb
movsbl
leave
mov
push
cmp
inc
xor
push
xchg
mulb
cmp
mov
xor
sbb
lret
dec
sbb
jmpw
push
mov
data16
push
out
out
sti
sbb
xchg
jne
imul
shl
stos
loope
je
in
cmpsb
std
incb
cmp
and
fldcw
jnp
stos
or
mov
sbb
xchg
push
mov
xor
lods
and
bound
lock
or
and
xor
xchg
enter
adc
sub
dec
lea
and
adc
jnp
dec
jns
jno
sbb
push
sub
in
inc
fstpl
enter
loopne
mov
add
or
shr
mov
mov
test
push
xlat
sbb
and
les
mov
repnz
out
andb
fistl
pop
test
xchg
cmp
mov
mov
push
fistpl
adcb
cwtl
push
and
jle
push
mov
sub
adc
int3
pop
pop
xchg
loop
adc
inc
cmp
clc
and
cmpsb
rcrb
mulb
test
lods
mov
iret
push
dec
and
test
inc
stos
sbb
pop
xor
and
or
movsb
xor
mov
sub
cmpsb
push
pop
fwait
in
inc
mov
insb
cli
sbb
push
xchg
mov
out
out
cltd
hlt
xchg
sarb
or
ja
and
clc
movsb
mov
pop
pop
cmc
inc
mov
mov
jnp
cmp
xchg
jecxz
test
mov
iret
inc
inc
cmp
call
push
dec
loope
push
mov
adc
jbe
divl
or
lods
sahf
dec
shll
pop
leave
andb
adcb
cwtl
loop
xchg
lds
std
xor
imul
and
repnz
dec
iret
lods
lcall
xor
or
jmp
out
bound
and
mov
add
fiadds
rol
add
lods
cmp
adc
pop
jp
insl
add
outsl
mov
movsb
jns
jno
test
bound
sbb
movsb
iret
rcll
cwtl
ss
sbb
cltd
cmp
xchg
les
inc
bound
or
das
pop
pop
jmp
iret
in
mov
add
test
js
push
orl
mov
push
adc
ljmp
and
mov
pop
cmp
xchg
and
movzbl
fs
xchg
pop
divb
pop
jg
mov
jg
inc
mov
arpl
jnp
sbb
inc
adc
lret
dec
mov
popa
fisttpl
push
dec
pop
cmp
in
mov
lcall
divl
dec
mov
cmc
sbb
pop
enter
cmp
xchg
not
fmul
push
ror
jno
mov
push
dec
and
fnstsw
pushf
and
pop
movsl
sbbl
jg
jl
xlat
std
pop
outsb
pop
jne
cmp
push
inc
xchg
in
cmp
test
mov
popa
sbb
stos
dec
sti
leave
cmp
ds
mov
dec
adc
jnp
hlt
outsl
fiaddl
push
out
cmpsb
fistl
mov
jle
sub
sbb
insb
dec
inc
and
sub
inc
lahf
ja
adc
sub
pushf
in
repz
arpl
andl
adc
xor
add
aas
repz
mov
aam
adc
xchg
mov
outsb
add
cmp
test
iret
pop
xor
push
jge
call
and
dec
pop
je
xor
xchg
mov
mov
in
fstpl
clc
shlb
xor
inc
push
or
out
jl
mov
inc
jbe
jbe
cmc
sti
mov
sbbl
and
add
out
js
fiadds
and
ja
dec
adc
popf
int
js
xchg
les
adc
mov
shll
xor
inc
fmull
test
in
fwait
and
mov
or
daa
jb
int
mov
sub
pushf
push
mov
sbb
push
push
jns
bound
mov
fistpl
cmpsb
hlt
lret
scas
xchg
adc
ja
fs
lock
mov
sbb
pushf
test
pop
pusha
sbb
cltd
lret
stc
push
xlat
aas
mov
popf
add
bound
mov
push
add
ret
xor
jns
sub
xchg
xorb
arpl
cmp
inc
xor
out
mov
insb
xlat
out
pop
pushf
sub
xor
aam
cmpsb
bound
pop
xchg
mov
sbb
in
lea
inc
cmp
mov
and
aad
rorb
xor
adc
mov
cwtl
xchg
in
leave
mov
and
fildl
jo
aaa
xor
clc
sbb
mov
std
push
and
lahf
enter
xor
addr16
sti
cwtl
push
jp
lret
mov
pop
fwait
hlt
mov
pop
mov
mov
inc
mov
mov
and
jbe
mov
scas
push
inc
scas
cli
pop
daa
gs
xlat
popl
test
test
sub
push
arpl
lret
cmpsb
call
cmp
pextrw
mov
aam
lock
jmp
adc
or
inc
xor
lret
xchg
or
pop
mov
add
jae
ja
push
push
mov
loope
test
mov
xlat
lahf
and
mov
lret
mov
add
jbe
jecxz
sub
notb
and
outsb
cmp
jl
xor
push
pop
call
xchg
inc
mov
jmp
mov
pop
mov
aas
imul
in
outsb
dec
jg
repz
sbb
jno
adc
inc
mov
sub
lds
jecxz
dec
imul
adc
pop
add
stos
sarb
fwait
jp
popa
pusha
test
arpl
or
push
cmpsb
sub
repnz
push
les
xchg
xchg
jecxz
icebp
pop
ficompl
or
cmpsb
pop
cmp
mov
scas
aam
repz
mov
push
inc
sub
in
xor
cmp
mov
js
adc
jb
scas
mov
add
fists
push
adc
mov
imul
inc
rolb
aas
pop
inc
lods
dec
lock
adc
dec
jno
mov
cmpb
dec
jge
cmp
shlb
pusha
inc
xor
in
mov
clc
xchg
add
mov
xorl
cmp
jp
stc
cmp
inc
dec
lods
sbb
xor
bnd
div
mov
push
insb
jbe
addr16
out
adc
mov
xchg
mov
in
ss
in
cwtl
xor
adc
cmpsl
pop
std
or
xor
mov
push
pop
mov
xor
mov
ficompl
pop
popa
mov
bnd
cmpsb
in
pop
jecxz
outsb
bound
lods
mov
sbb
fs
add
loop
cmc
add
adc
xor
cmpb
cmpsb
or
and
dec
cld
fnstcw
cli
hlt
add
das
mov
fsubs
pop
testb
xor
lods
xor
ljmp
repnz
push
push
cld
pop
lods
lods
mov
push
push
dec
xchg
mov
dec
add
push
enter
add
xchg
mov
nop
pop
lcall
insl
inc
sub
out
push
stc
lret
mov
lods
add
loopne
mov
test
jecxz
push
jl
lods
dec
popa
std
stos
fsubs
jmp
lahf
test
and
adc
iret
cmp
gs
pusha
pop
test
dec
imul
ja
out
movsl
fs
pop
dec
nop
fmull
test
cmpb
push
inc
xchg
loop
inc
scas
adc
sub
cmp
aam
pop
loopne
les
out
mov
cld
and
sbb
rol
adc
into
ret
xor
out
inc
fildl
dec
fistpl
add
and
loop
sub
icebp
add
jle
das
fidivrl
mov
sub
cmp
shl
repz
fdivs
adc
xchg
cmc
movsl
push
sub
and
sub
lret
nop
rcll
jp
dec
mov
jl
sahf
shr
and
adc
mov
push
sub
add
mov
inc
add
cmp
pop
or
push
into
icebp
mov
pop
xchg
rol
mov
fiaddl
mov
push
out
or
or
and
js
pop
negl
mov
and
mov
mov
aam
mov
jnp
sti
or
push
subb
adc
cltd
fistpl
pop
ret
icebp
insb
xchg
fildll
pop
icebp
or
inc
ficoml
adc
lret
jns
jl
sbb
fidivs
popf
dec
cmpsl
inc
dec
lods
cmp
adc
cmpsl
arpl
mov
jmp
or
bound
jae
jmp
lods
dec
mov
bound
test
mov
sub
sti
or
orb
inc
mov
int
std
lret
jle
sbb
jnp
arpl
cmpsb
or
mov
ficoms
push
inc
mov
dec
test
fldcw
incl
fs
mov
aam
stos
or
cmp
sbb
popf
sbb
mov
mov
lret
fistpl
jle
add
mov
fld
add
pop
sub
jp
and
aad
and
sub
inc
pushf
add
pop
mov
cltd
mov
je
loop
aam
pusha
jmp
loope
push
or
dec
mov
jno
xlat
arpl
mov
out
xchg
cli
popf
sbb
sub
jns
push
jge
xlat
cmpsl
aam
pop
mov
xor
inc
loop
pushl
pop
sbb
cli
das
fs
mov
lahf
jge
jno
repz
xchg
ds
in
push
ja
add
decb
fisttpl
adc
out
sbb
and
cli
or
ljmp
jno
outsb
push
insl
dec
repnz
push
dec
fisubrl
cmp
mov
xor
lcall
cltd
test
cmp
fcompl
clc
or
ja
stc
mov
inc
dec
popa
dec
mov
mov
mov
js
negb
cmp
lahf
pop
iret
xchg
nop
ss
cmp
or
add
jg
icebp
ljmp
xchg
in
sub
mov
mov
hlt
pop
mov
ds
rclb
test
stos
dec
pop
into
jbe
or
std
sbb
es
fs
pop
insl
push
rol
push
int3
fs
arpl
fidivrs
dec
imul
repz
cltd
jge
cs
enter
jae
add
out
pop
or
dec
add
js
push
stos
loop
stc
xchg
nop
sub
pop
pushf
rcl
mov
pop
sbb
xchg
add
cmp
inc
and
xchg
mov
mov
aaa
xlat
add
xor
cmp
dec
dec
in
or
mull
push
add
popa
test
push
out
add
adcb
mov
push
sub
pop
push
out
or
sbb
fwait
stos
jle
into
xchg
fldl
pop
out
xchg
xor
cwtl
add
scas
lock
movsb
pop
mov
fdivs
imul
jg
cltd
pusha
jbe
mov
dec
ja
out
push
dec
fsts
in
scas
stc
int3
cwtl
push
cltd
loope
mov
icebp
jl
ja
scas
mov
pop
lods
inc
mov
jl
cs
mov
aad
popf
lahf
xor
sub
xchg
test
hlt
xor
or
mov
xor
insl
std
or
push
push
imul
jne
in
scas
inc
mov
mov
push
je
es
je
lea
pop
or
aas
shrb
bound
push
adc
outsb
xchg
push
lods
adc
sti
add
push
out
sti
pushf
push
jo
inc
xor
stc
mov
add
push
rcrb
cmp
adc
stos
imul
int
mov
adcl
fistps
es
psrlq
mov
sbb
loopne
