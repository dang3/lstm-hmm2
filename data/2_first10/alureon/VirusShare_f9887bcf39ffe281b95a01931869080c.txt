push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
in
mov
inc
mov
lret
test
xor
mov
jle
xor
into
gs
in
fldt
arpl
cmp
cmp
rcrl
inc
cmp
add
fildl
mov
xchg
enter
sarl
sub
xchg
in
aaa
popf
repz
enter
sub
ss
mov
sub
aad
hlt
xor
in
rolb
xor
add
repz
pop
jg
je
mov
sbb
aad
sbb
pop
cmpsl
mov
js
ds
add
xlat
sub
shlb
sti
mov
add
add
fs
or
dec
popf
in
stos
movsb
xlat
iret
xchg
mov
cmp
sbb
rcll
cs
and
xchg
sarb
fdivr
jg
xchg
cwtl
loopne
jg
jo,pt
in
inc
and
sub
xor
mov
aad
cmc
lret
idivl
mov
adc
std
pop
push
hlt
sbb
cmpsb
or
sub
mov
mov
sub
call
xchg
push
mov
mov
inc
dec
lock
dec
pop
push
mov
inc
fistps
inc
fcompl
movl
mov
call
jle
fisttps
pop
xchg
cmpsb
mov
aad
rclb
mov
dec
mov
jle
lock
fwait
iret
les
jg
int
sbbl
fucomi
inc
sbb
mov
mov
in
mov
mov
add
add
xchg
sbb
dec
xlat
jne
mov
and
call
push
test
int3
pop
cwtl
mov
mov
cmpsb
and
in
xor
xchg
and
sbb
loop
or
adc
and
rorl
daa
add
pop
and
arpl
fcom
ljmp
dec
push
iret
dec
lret
stc
push
mov
insl
or
push
out
jne
adcb
add
sti
xor
jle
lahf
sbb
adc
push
and
cmpsl
adc
js
sbbl
mov
fmul
and
cmp
leave
xchg
cli
fbstp
push
sahf
into
scas
stos
pop
dec
inc
cwtl
sub
adc
mov
movsb
cmc
popa
and
lock
ret
sar
xor
sbb
das
mov
test
mov
mov
imul
rcrl
inc
dec
pop
std
movsl
push
rcrl
orb
add
mov
enter
push
cmc
cli
negb
dec
xchg
jle
sub
or
leave
pop
flds
dec
mov
pop
test
xor
xchg
jg
cmpsl
lds
or
sub
inc
iret
pop
popa
cli
out
lahf
xor
inc
jae
sub
inc
gs
mov
xlat
notb
stos
lock
push
aam
call
mov
and
daa
push
push
or
arpl
xchg
popf
lret
add
mov
mov
std
fs
lds
mov
xor
in
and
jne
sbbl
pop
aad
subb
mov
movsl
cmp
add
pop
mov
and
ljmp
add
fistps
jmp
inc
inc
popf
sahf
movsl
neg
fstpt
adc
inc
xchg
sbb
cmp
sahf
fs
add
pop
mov
dec
cld
fucomi
pop
imul
cmp
int3
mov
pop
mov
xor
test
or
dec
push
or
jmp
scas
mulb
inc
mov
xor
add
mov
mov
sub
sbb
sub
and
jne
pop
xor
test
popa
test
fnstsw
aaa
jbe
fnstenv
xchg
sub
add
inc
stos
inc
dec
pop
aam
addr16
and
and
lret
or
imul
pop
dec
push
push
jl
mov
mov
dec
or
or
imul
xor
inc
mov
lods
xchg
jb
ret
mov
push
int3
or
sub
jae
mov
js
jbe
jle
das
mov
cmc
add
dec
popa
jl
sahf
stos
mov
cmp
mov
mov
in
mov
and
pop
in
das
dec
iret
add
std
and
lods
jb
cmp
adc
loopne
insl
mov
movsb
insl
fisttpl
cmp
xchg
mov
pushf
sbb
and
cld
lea
jne
push
outsb
inc
inc
xchg
out
lock
or
imul
adc
aas
clc
push
inc
cwtl
loop
inc
sbb
sti
mov
scas
mov
sbb
sub
out
cmp
dec
xchg
movsb
xchg
dec
sbb
fisttps
dec
sub
add
je
add
dec
jp
arpl
fwait
mov
mov
loope
or
idivb
je
pop
lret
sti
ja
insb
sub
mov
hlt
rorl
bound
add
sub
xlat
mov
scas
das
or
pop
pusha
cmp
repz
sbb
or
sbb
sbb
test
mov
fisubrs
insb
inc
shrb
add
mov
sbb
cmc
in
mov
cmp
sarb
or
sub
pop
push
mov
lea
mov
fwait
add
call
test
jle
in
jecxz
mov
cmpsl
push
ret
jl
sbbl
data16
adc
rcll
shll
jne
cltd
addr16
lret
in
out
xchg
fs
or
and
mov
inc
push
sub
adc
mov
mov
pop
fwait
icebp
add
outsb
mov
sbb
fstp
adc
imul
sbb
mov
movsb
gs
nop
hlt
in
push
jmp
sbb
xor
std
push
sbb
or
mov
pop
cmp
test
shlb
or
out
jmp
insl
add
js
clc
arpl
testb
stos
adc
arpl
rcr
push
add
mov
xchg
or
ljmp
dec
cmp
sti
push
lds
mov
out
add
cld
adc
push
ljmp
push
pop
sbb
mov
movsb
mov
jge
sbb
ljmp
adc
lods
test
jmp
dec
scas
adc
adc
add
mov
mov
mov
push
insl
movsl
sbb
dec
cmp
mov
dec
rorl
inc
lret
add
insl
out
mov
loopne
outsl
arpl
cwtl
ljmp
jl
inc
dec
out
sbb
cmc
jb
dec
fcmovu
aad
inc
push
pop
mov
sub
xchg
mov
rclb
or
add
mov
into
add
lods
mov
add
test
jo
outsl
mov
int
mov
xchg
dec
int
loopne
mov
xor
jge
test
xor
repnz
lock
stos
mul
in
and
push
sub
shl
jmp
roll
push
jo
xchg
pop
cmp
add
mov
daa
in
sti
jecxz
pop
repnz
rcll
cmpsl
cmpsb
mov
je
cmp
inc
inc
outsb
adc
imul
aam
pop
in
outsl
pop
or
xor
in
xor
cmp
in
ret
dec
ss
jo
repz
gs
lods
sbb
movsb
cmpsl
dec
adc
push
inc
xchg
lcall
int
push
stos
xor
sub
pop
loop
in
dec
outsl
add
js
or
jb
loope
in
push
sub
push
insl
enter
jl
loop
call
cs
rcrl
arpl
test
xor
cmpsl
inc
jnp
mov
aam
dec
in
xor
rolb
xor
push
mov
out
jecxz
dec
sbb
inc
push
out
dec
nop
aas
fwait
xchg
and
popa
shlb
in
ds
sub
adc
arpl
add
xor
into
test
xor
lahf
stos
cwtl
push
jmp
sbb
mov
adc
and
in
or
popf
jb
mov
aad
dec
dec
jp
dec
addr16
mov
mov
leave
xor
cltd
fwait
mov
mov
arpl
pop
mov
or
vpcmpgtb
repnz
xor
fwait
ss
mov
dec
cltd
sub
rcl
lret
rcr
pop
addr16
xchg
arpl
ss
jne
aaa
mov
add
mov
fiadds
pop
mov
inc
loopne
je
scas
mov
pop
push
sbb
adc
decb
les
in
dec
xchg
rcrl
sbb
push
xchg
inc
pop
cmp
jns
sbb
ret
fcoms
test
cmc
pop
shl
inc
movsl
push
dec
sti
add
and
insb
mov
lcall
mov
add
add
and
and
lret
mov
or
mov
test
test
enter
mov
aam
sarb
jmp
dec
stos
mull
mov
push
lods
setge
cmc
mov
mov
xchg
in
ja
and
lcall
sub
rclb
mov
sbb
dec
mov
dec
push
sahf
adc
dec
data16
sub
add
cmp
mov
addl
pop
in
lods
mov
mov
aam
jne
add
aad
push
sbb
lods
iret
jge
mov
cmp
das
fmuls
lock
or
inc
jo,pt
jae
idivb
push
or
mov
push
inc
icebp
shlb
filds
xchg
inc
out
cmp
dec
dec
or
pop
add
popf
push
push
dec
and
repz
or
push
mov
pop
xchg
mov
pop
add
or
in
xorb
pop
push
xchg
mov
pop
xchg
dec
mov
movsb
add
inc
out
loopne
call
cmc
mov
sub
ss
test
sbb
or
pusha
mov
sub
divl
push
push
cli
nop
xchg
ja
mov
addb
cmp
aas
adc
jl
push
inc
out
xchg
sbb
sarl
mov
lret
cmpsl
mov
inc
cmpsl
add
add
fstpt
or
push
jmp
push
xor
das
xchg
add
in
stc
push
jnp
lea
jecxz
jle
js
pop
push
shrl
out
ja
jnp
sub
xor
test
out
cmc
pop
rcrl
jnp
adc
push
push
mov
in
push
jp
xlat
loop
imul
ljmp
xchg
push
push
in
dec
add
stc
push
popf
inc
xor
mov
add
xchg
sbbb
pushf
in
jl
repnz
add
loopne
xor
mov
or
add
jl
inc
int3
sahf
vmovdqa
and
pop
fmul
subb
sub
jl
js
push
and
mov
cmp
and
repnz
cli
cli
xchg
cmp
enter
je
nop
pop
ror
sti
jb
inc
pop
gs
xchg
sub
out
xchg
sbb
or
pop
ja
je
xchg
jo
sbb
movsb
pop
dec
loope
out
daa
or
sbb
mov
jne
mov
jge
mov
dec
cmp
add
int
subl
fisubl
pop
dec
pushf
dec
dec
and
pusha
mov
mov
jmp
imul
repnz
fisubrl
push
jl
mov
jne
js
inc
dec
gs
mov
rolb
shll
or
inc
jo
flds
sbb
fsubr
add
jmp
sar
or
mov
fldcw
nop
das
fiaddl
and
dec
cld
int
shlb
stos
push
jmp
xchg
repnz
mov
mov
loopne
mov
and
out
movsl
jns
cmp
or
xchg
inc
cwtl
testl
icebp
jmp
in
mov
fdivr
xor
xchg
lret
int3
jg
sub
push
sbb
inc
in
mov
aas
cmpsl
add
mov
dec
pushf
or
mov
mov
neg
das
push
es
popa
ds
xchg
mov
jo
push
lods
or
cmp
pop
pop
inc
inc
jbe
sbb
lock
sbb
cmc
daa
inc
test
push
jle
mov
add
xlat
cmp
jmp
imul
dec
push
loope
mov
jnp
test
call
fcompl
lahf
sbb
add
sarl
or
ljmp
sbb
or
jae
cmc
nop
cmp
and
mov
lea
gs
loopne
mov
inc
daa
mov
sbb
jne
adc
aaa
and
pop
xor
or
sbbl
cmpsl
stos
aad
in
je
jb
xchg
mov
stos
mov
adc
loope
jnp
add
jecxz
ljmp
push
inc
push
mov
lret
add
imul
out
sub
pusha
lock
push
subl
adc
test
xchg
add
push
movsb
ja
and
pop
out
mov
mov
mov
mov
mov
mulb
repnz
pop
adc
sub
rcll
mov
add
int3
clc
or
push
scas
fsubrl
add
add
or
mov
outsb
enter
shr
xlat
fs
cwtl
cli
mov
cmpb
rcr
pusha
gs
pop
sub
int3
fcoms
dec
mov
outsb
stos
and
testl
in
js
mov
dec
mov
dec
add
arpl
jecxz
mov
and
inc
outsb
inc
sahf
and
sub
ljmp
sub
push
push
jno
xor
add
xor
jl
jb
xchg
arpl
and
cld
mov
les
mov
mov
push
add
sub
in
push
out
pushf
movsb
imul
cmpsl
std
repz
icebp
dec
int3
adc
movsl
fcomps
xchg
xor
hlt
dec
leave
dec
xchg
sbb
xlat
or
adcb
mov
mov
add
fcoml
xor
push
jle
cmp
lods
mov
fdivl
add
xor
in
xchg
out
jnp
xor
je
outsl
aaa
cmpb
cmpsb
lods
popa
jnp
test
stos
lock
jl
jbe
outsl
sbb
cmp
cmc
jg
mov
or
push
js
aam
cmp
ja
sbb
pop
xor
out
loop
add
sub
pop
into
cmpsb
mov
pop
jge
xor
arpl
in
fdiv
in
sub
sahf
sub
push
gs
push
xor
pop
xchg
imul
xchg
xlat
xor
sbb
int3
lret
inc
mov
xor
aam
push
mov
jle
lods
mov
xor
dec
jp
stos
mov
rep
pop
jo
aad
hlt
or
cmc
insl
das
lret
nop
lahf
lahf
cmp
pop
outsb
xchg
repnz
in
pop
lods
mov
call
add
add
das
pop
das
mov
push
xor
mov
cld
nop
add
pop
es
test
mov
pop
gs
and
dec
push
jle
push
pop
mov
xchg
cltd
xchg
mov
repz
xchg
outsl
xchg
push
jecxz
cmpsb
pop
xor
in
jbe
dec
jae
shll
or
ja
mov
shr
mov
pop
mulb
fldt
cs
mov
or
fsubrs
clc
add
add
popf
cmp
mov
imul
daa
mov
leave
sub
imul
mov
test
dec
pop
cmp
das
shlb
pop
ret
cmp
sub
iret
sbb
jmp
jmp
out
ss
test
test
daa
aas
and
mov
add
add
fsts
or
test
sub
rcrb
call
pop
fists
lods
dec
outsl
jle
jbe
in
aas
or
xchg
jnp
xor
mov
jecxz
or
add
movsb
ds
dec
sub
fwait
dec
mov
inc
push
jno
lcall
jg
test
jbe
pop
sub
mov
cmc
fbld
xchg
jnp
divl
add
cmp
mov
add
add
gs
jg
cmp
pushf
lock
es
xchg
pop
sub
mov
fsubr
mov
repnz
jb
jle
and
and
xchg
lret
or
jbe
sbb
inc
leave
scas
pop
jmp
icebp
mov
mov
mov
mov
or
sub
pop
sti
loop
add
js
cmpsl
push
sub
push
addr16
mov
aam
leave
roll
sub
clc
dec
notl
bound
xchg
push
sti
add
test
clc
mov
inc
jno
push
push
sub
js
lret
or
insl
popa
data16
sub
mov
insb
out
jp
pop
stos
mulb
and
lret
push
push
sahf
jns
rcrl
push
add
inc
out
nop
dec
jge
mov
xlat
lods
dec
mov
push
imul
pushf
pop
jp
and
xchg
stc
subb
enter
prefetchwt1
or
fadds
or
adc
add
lods
or
and
and
jne
pushf
mov
iret
lock
aad
xchg
inc
pop
ss
out
sahf
mov
test
js
cmp
dec
sti
xor
test
data16
mov
mov
add
ljmp
xchg
or
push
inc
push
mov
jae
add
std
aad
sub
xor
mov
lock
inc
adc
je
cmpsb
loopne
jecxz
fiaddl
add
fisubrs
mov
push
in
mov
fwait
mov
gs
xchg
xchg
mov
enter
adc
rcrb
and
push
mov
jno
lahf
out
in
xor
xor
movsl
enter
out
xor
movsl
fucomi
lods
data16
or
inc
dec
scas
ds
loopne
push
mov
lahf
imul
mov
push
mov
filds
add
outsl
adc
pop
cmp
ja
push
ret
mov
repnz
sub
cmc
into
fcmovnu
mov
mov
lock
into
mov
jnp
dec
sbb
cmp
xchg
mull
std
scas
or
scas
and
mov
loope
das
jecxz
gs
jl
inc
movl
shll
into
fnsave
aad
push
dec
push
lods
stc
mov
inc
sahf
and
pusha
arpl
adc
and
in
xchg
dec
and
xor
cltd
mov
add
jg
aam
xor
mov
shlb
adc
lods
imul
call
imul
lcall
mov
push
mov
and
adc
xorb
adc
enter
out
add
hlt
cmp
rorb
testl
aaa
dec
mov
fcoml
add
push
sarl
sub
add
add
add
xor
ficompl
mov
xor
and
push
xor
mov
or
stos
xor
xorb
enter
out
repz
mov
mov
and
int
outsl
xchg
hlt
inc
sub
push
loope
movsb
dec
push
je
mov
clc
add
cmp
push
add
xchg
add
dec
mov
jo
push
movsl
add
ud0
xchg
adc
nop
jge
hlt
mov
iret
out
aas
jne
ror
cmpsb
sbb
dec
sbb
push
mov
std
aam
mov
je
std
popa
mov
pop
mov
enter
push
dec
fistpll
inc
sub
adc
loopne
mov
dec
leave
lods
imul
mov
add
add
popa
fdivr
aad
sbb
dec
repz
xor
inc
fisubs
dec
cmpsl
sbb
shlb
std
pop
test
ffree
cmc
rep
stos
data16
jae
push
add
fstl
sarl
outsb
sahf
lods
loop
jle
inc
cmp
cmp
xor
shlb
sbb
icebp
jae
aaa
adc
or
popa
gs
dec
push
inc
add
add
mov
mov
je
andb
adc
pop
pop
rolb
mov
sub
mov
aas
in
sub
dec
or
dec
aad
mov
cld
cmpsb
dec
daa
inc
test
data16
out
rcrl
xchg
jnp
imul
cmp
cltd
cs
sahf
xchg
pop
mov
cmpsl
jle
mov
pop
xlat
jecxz
dec
in
jae
outsb
cmp
fimull
fcoml
xor
jb
inc
pushf
aad
add
xor
repz
push
je
les
or
mov
insl
xor
push
in
mov
outsl
push
cmp
fimull
fwait
adcb
test
push
push
adc
cmp
push
and
sti
push
cmp
adc
sub
adc
mov
push
arpl
inc
sbb
jmp
and
dec
daa
lahf
and
mov
or
daa
jp
adc
cmp
imul
mov
xor
add
or
or
push
or
rolb
inc
xchg
test
mov
stos
push
data16
cmp
jecxz
dec
mov
fstpt
arpl
xlat
es
xchg
and
leave
inc
push
iret
mov
xor
std
add
pop
repz
mov
gs
push
imul
testl
add
dec
call
mov
push
ljmp
inc
mov
mov
add
inc
push
test
fidivl
xchg
sbb
das
pusha
add
scas
icebp
shll
andb
enter
push
xchg
mov
dec
xchg
xchg
sbb
and
es
xor
test
aam
loop
jl
lret
into
mov
inc
fnsave
xor
pop
xor
sbb
outsb
add
push
xlat
outsw
outsb
push
jge
xchg
and
push
movsl
std
cmp
and
jb
push
lds
push
out
lret
ja
inc
adc
xor
push
out
stos
xchg
sahf
mov
stos
movsl
mov
in
cmp
or
cld
test
lahf
push
mull
rcrb
outsb
mov
mov
sbb
xorb
les
int3
xchg
and
pop
push
in
mov
aam
sbb
in
nop
addb
xor
repnz
js
popa
cmp
enter
lcall
add
adc
dec
lret
mov
xor
mov
mov
adc
outsl
and
xchg
and
fs
movsb
cli
cmp
in
sti
jecxz
add
inc
mov
dec
out
xchg
sbb
and
xor
push
rcll
shr
pop
mov
mov
xchg
ror
dec
push
jo
shr
lahf
mov
ljmp
xchg
cmp
add
fdivs
inc
gs
xchg
test
fldl
add
pop
hlt
add
add
mov
test
pop
lcall
sbb
push
push
popf
loopne
pop
adc
shlb
icebp
sbb
adc
dec
sar
ja
inc
movl
cmp
mov
mov
fmull
xlat
jge
xor
xchg
jle
sbb
add
pusha
xchg
cmpw
ljmp
dec
ja
xchg
mov
jno
jno
jnp
sbb
push
jo
sbb
sub
ds
or
xchg
push
sbb
dec
nop
push
pop
sarl
mov
lea
xchg
and
pop
or
iret
push
dec
mov
cmpsl
call
sahf
xor
and
xor
mov
loop
jp
add
xchg
jo
pushf
ljmp
ret
stos
loope
cmp
sarb
sub
xor
lret
nop
sub
xor
inc
sub
test
pop
mov
sub
insl
ljmp
stos
arpl
std
and
inc
and
push
jno
xor
inc
cmp
ret
sahf
scas
pop
mov
pusha
clc
jmp
in
out
add
jge
out
scas
dec
movsb
pop
loopne
mov
sbb
nop
lcall
out
pop
and
and
mov
push
adc
popa
pop
sub
sub
jbe
jbe
mov
imul
gs
pusha
dec
jecxz
or
ret
and
lret
ffreep
fs
test
xor
lds
jae
ds
push
push
sub
mov
mov
cmp
and
push
mov
movl
add
add
jo
scas
aad
addr16
push
or
mov
nop
flds
imul
sub
jge
leave
ret
cld
add
mov
je
jb
enter
sub
add
flds
inc
out
ss
jmp
jbe
mov
stc
sbb
sub
xor
mov
fs
sbb
lcall
cltd
adc
push
inc
dec
cltd
orb
add
add
mov
mov
loop
inc
lcall
and
arpl
stc
jl
mov
xchg
sti
xorl
or
test
outsl
out
outsb
lock
div
addl
dec
loop
popa
xor
xor
jb
lds
jmp
aad
xor
pop
stos
fildl
xor
xchg
jle
inc
pop
or
insb
push
lret
ret
fmul
xor
adc
mov
fisubl
cld
lods
movsl
dec
xchg
push
pushf
lcall
enter
arpl
xor
out
les
outsl
daa
into
mov
jp
mov
add
pop
loope
mov
inc
insl
lret
imul
sbb
pushf
pop
mov
fs
xor
leave
aaa
lds
dec
mov
fdiv
out
or
ret
pop
pop
lcall
leave
inc
aaa
stos
push
lahf
es
cmpsl
mov
add
clc
or
cmp
mov
pusha
sbb
stos
movsb
and
and
sub
mov
push
lds
cltd
mov
push
test
scas
sbb
dec
push
add
mov
push
pop
fwait
pusha
stc
addl
adc
dec
and
fistpl
mov
push
cmp
sahf
xchg
xor
dec
lods
mov
sub
sub
mov
int3
cltd
push
jp
and
test
fistpll
mov
jns
out
aad
mov
outsl
ss
in
sbb
shll
nop
in
lret
or
or
js
sub
pop
mov
int3
xor
inc
inc
xor
hlt
fs
fcompl
xchg
dec
mov
cwtl
cmp
mov
xchg
test
cmpsl
push
and
mov
jo
movsb
pop
out
outsb
jp
add
ficoms
sub
mov
inc
lods
arpl
ret
stc
out
jecxz
stc
mov
pop
sahf
fidivrs
lds
bound
sbb
sbb
fs
xchg
ret
xchg
cmp
and
xchg
test
call
lods
inc
pop
imul
loop
std
mov
lods
ret
call
push
inc
cmc
test
fistpll
add
add
adc
cmp
mov
call
pop
xor
xor
and
pop
jmp
push
data16
push
sub
arpl
pop
inc
gs
xor
jecxz
mov
xchg
shlb
out
sbb
mov
es
gs
lcall
shll
repz
inc
sub
int
push
hlt
lds
inc
sahf
xchg
cmpsl
mov
xlat
push
loope
dec
mov
push
ret
mov
add
add
movsl
sbb
or
dec
lret
subb
inc
sbb
xchg
push
clc
mov
add
mull
mov
or
repz
push
out
mov
mov
into
sti
xlat
xor
sbb
add
pop
dec
fbld
movsb
mov
mov
xchg
aam
mov
xchg
gs
sbb
es
mov
mov
insb
xchg
in
and
into
jae
jns
shll
lods
lods
test
add
jle
mov
in
inc
ja
fistpll
aas
dec
clc
test
push
inc
rcrl
shlb
jmp
push
adc
sahf
push
push
movsl
push
jp
rcr
insb
mov
push
mov
movsb
xchg
xchg
push
repz
test
fistl
cmp
cmp
xchg
push
ret
repz
cmpsb
xor
cmp
cmp
std
cmpsl
cmpb
add
add
pop
popf
xchg
test
jge
leave
movsb
mov
pop
push
cld
mov
popf
ljmp
xor
fdivrl
in
cwtl
and
sbb
sub
push
push
sub
jmp
sbb
ret
sub
leave
fdivl
add
cmp
jle
popf
cmp
insb
fwait
popf
add
enter
lret
movsl
inc
pop
mov
jno
pusha
arpl
into
fmull
add
arpl
clc
jne
add
mov
in
dec
mov
lcall
dec
hlt
jmp
icebp
jbe
ljmp
sbb
ja
adc
cmp
popf
push
xor
jo
cmp
arpl
sbb
inc
mov
repnz
mov
into
mov
mov
repz
fsubrl
cmpsl
scas
inc
inc
cwtl
int
call
mov
