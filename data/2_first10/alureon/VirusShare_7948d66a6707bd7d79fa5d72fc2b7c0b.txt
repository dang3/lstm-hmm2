mov
movsb
sbb
add
rorb
and
mov
outsb
sbb
aad
loop
push
shrb
pop
or
sbb
sub
adc
or
pop
jae
test
lcall
dec
in
stos
sub
fcoml
in
addr16
push
mov
pop
mov
mov
or
lods
push
or
std
push
jmp
mov
jno
jle
inc
icebp
in
pop
xchg
sbb
aam
add
xchg
sarl
sarl
sub
das
or
hlt
adc
mov
ljmp
sub
aam
or
punpckhbw
roll
push
daa
xor
mov
jo
sbb
cmpsl
fdivrs
and
sub
inc
cltd
loopne
cmpps
movl
popf
jp
or
fwait
test
scas
rdmsr
ss
inc
mov
pop
das
or
stos
pusha
mov
mul
pop
fadds
cmpsl
ret
fcomi
mov
cmpsl
das
mov
mov
jbe
nop
decl
and
loop
shl
filds
inc
add
dec
mov
pop
movsl
ret
sbb
mov
jmp
jbe
in
sbb
sarl
xor
clc
popa
push
and
add
sbb
adc
push
inc
imul
subl
sub
shrl
dec
orb
loope
outsl
mov
ljmp
je
inc
ss
cmp
or
adc
dec
enter
jg
in
sbb
cmp
pop
shll
mov
lret
or
or
pop
or
add
fisttpll
movsl
and
orl
dec
fwait
and
add
pop
pop
pusha
lret
add
into
mov
fildl
imul
mov
mov
cmp
xchg
mov
into
aaa
xchg
xchg
push
xchg
out
or
idiv
cs
push
sub
pop
loop
loop
dec
mov
mov
cmp
add
mov
adc
sbb
addr16
das
outsb
sub
ljmp
adc
cmpl
jns
mov
faddl
cltd
inc
pop
mov
pop
jno
xchg
mov
push
dec
mov
dec
movsl
mov
inc
pusha
leave
or
addr16
mov
bound
mov
xor
fistps
or
and
stos
and
lcall
outsb
mov
scas
mov
pop
lds
mov
mov
ljmp
adc
nop
aad
ja
sub
idivl
ss
ds
adc
sahf
out
dec
push
cmp
xchg
xor
xchg
shrl
stos
ljmp
mov
add
sub
push
clc
sub
je
push
cwtl
decb
mov
xor
popa
mov
test
cwtl
stos
xor
jmp
inc
cmc
cvtdq2ps
push
pusha
jle
std
jns
add
xchg
or
sbb
nop
mov
js
les
cltd
ss
dec
sub
mov
cmpl
xchg
outsl
pushl
cmp
xor
gs
pushf
outsl
add
int
adc
or
adcb
dec
dec
insl
scas
test
xor
cmp
test
pop
dec
data16
dec
fwait
clc
and
sbb
mov
xchg
outsb
mov
inc
les
sbb
sar
popa
inc
cmp
sti
pop
xor
xchg
xor
out
aad
cmp
fnstsw
mov
mov
or
enter
sbb
fmuls
les
je
cmp
and
push
int3
sbb
or
cmp
dec
arpl
sbb
mov
in
ret
mov
pop
add
sbb
loopne
xchg
mov
sbb
inc
mov
addr16
neg
sub
cwtl
in
sub
cmpsl
pop
and
cmp
outsb
arpl
cmpsl
sbb
inc
fidivl
loop
inc
push
aad
mov
scas
lret
fldcw
add
scas
mov
dec
fcoms
mov
push
aaa
sub
int3
and
int
int3
cmpsl
lock
and
inc
sbb
int
leave
sbbb
std
mov
iret
sub
insl
push
mov
jbe
push
inc
mov
data16
getsec
xor
jb
insb
and
xor
aam
test
call
hlt
aas
shll
cld
pop
outsl
xchg
add
dec
jg
pusha
and
mov
push
mov
mov
dec
call
dec
inc
call
call
inc
add
xor
call
call
lea
add
mov
inc
dec
inc
add
xor
lea
add
call
dec
push
dec
inc
add
call
lea
mov
call
sub
dec
inc
dec
sub
lea
mov
inc
dec
pop
dec
add
and
add
lea
pop
mov
dec
pop
inc
inc
sub
add
pop
lea
mov
inc
sub
sub
inc
or
lea
pop
mov
sub
pop
inc
inc
mov
sub
sub
call
lea
mov
add
dec
ret
dec
add
push
and
lea
push
mov
dec
push
inc
add
push
inc
add
push
lea
imul
mov
add
sub
push
inc
ret
push
sub
push
or
lea
push
mov
add
push
dec
call
pop
ret
jmp
xor
inc
lea
imul
inc
inc
inc
inc
and
lea
imul
dec
dec
jne
inc
mov
inc
inc
pop
and
lea
pop
imul
inc
pop
inc
dec
dec
xor
lea
imul
dec
sub
inc
dec
add
add
ret
push
lea
mov
inc
add
inc
dec
add
lea
push
push
push
push
mov
dec
add
push
inc
sub
add
lea
mov
dec
dec
add
sub
mov
add
push
lea
imul
xor
dec
add
push
inc
sub
push
or
lea
pushl
mov
call
add
add
inc
sub
inc
xor
lea
mov
inc
pop
ret
lea
inc
mov
add
inc
inc
inc
or
mov
lea
movswl
cmp
jb
dec
mov
sub
dec
xor
sub
xor
xor
lea
imul
pop
dec
inc
test
jbe
inc
sub
xor
lea
mov
dec
dec
inc
inc
add
lea
mov
inc
dec
add
dec
and
inc
lea
movswl
sub
inc
inc
dec
and
and
lea
mov
imul
sub
movzbl
dec
inc
add
dec
and
and
lea
imul
mov
add
inc
mov
dec
inc
mov
and
lea
mov
movzwl
dec
inc
add
add
xor
dec
jne
lea
mov
imul
inc
dec
dec
inc
xor
lea
mov
sub
inc
mov
dec
sub
sub
lea
mov
dec
dec
inc
mov
dec
or
test
jbe
lea
imul
add
inc
inc
dec
sub
lea
imul
inc
dec
add
dec
sub
lea
inc
imul
inc
add
dec
inc
xor
and
lea
imul
mov
inc
dec
movzbl
dec
inc
add
xor
lea
and
movswl
dec
mov
inc
inc
movzbl
inc
or
mov
lea
mov
mov
inc
dec
movzbl
dec
sub
add
or
lea
and
mov
dec
movzbl
add
inc
xor
dec
jmp
push
call
inc
xor
sub
add
xor
lea
mov
inc
add
add
inc
dec
add
xor
or
lea
shl
imul
dec
xor
sub
dec
inc
or
lea
imul
push
inc
add
inc
call
inc
pop
add
lea
mov
dec
dec
inc
inc
add
cmp
je
lea
inc
mov
inc
add
dec
sub
inc
xorl
dec
sub
ret
lea
imul
add
sub
inc
sub
pop
or
ret
push
lea
imul
add
inc
sub
push
dec
or
push
lea
push
mov
push
dec
dec
push
add
dec
sub
lea
mov
call
dec
push
inc
push
dec
pop
sub
and
mov
lea
mov
mov
dec
sub
inc
dec
dec
dec
je
or
lea
mov
dec
inc
inc
dec
add
lea
mov
imul
dec
mov
add
sub
add
or
repnz
lea
imul
add
inc
jmp
dec
dec
dec
add
lea
mov
dec
inc
dec
dec
sub
lea
mov
dec
inc
add
pop
pop
ret
jmp
push
add
or
lea
imul
add
dec
dec
dec
or
lea
add
dec
add
add
xor
lea
imul
inc
add
inc
inc
and
lea
mov
inc
dec
add
pop
ret
sub
dec
mov
or
lea
mov
mov
sub
mov
dec
dec
mov
sub
xor
xor
lea
mov
mov
dec
add
inc
add
dec
sub
lea
mov
dec
cmp
jb
dec
push
inc
dec
push
and
lea
push
movzbl
inc
mov
sub
add
xor
sub
and
xor
lea
imul
xor
inc
inc
push
add
dec
xor
add
lea
mov
add
mov
inc
dec
movzbl
add
xor
lea
imul
add
dec
inc
add
add
dec
movzbl
xor
lea
mov
inc
inc
dec
inc
add
inc
lea
mov
inc
inc
add
dec
sub
lea
cmp
jb
mov
xor
add
inc
mov
inc
inc
mov
or
jmp
aaa
push
sbb
lahf
pcmpgtb
and
mov
mov
inc
rcr
stc
pop
ja
sbbl
push
push
mov
stos
movsb
jmp
faddl
sub
pop
notl
push
lret
mov
sbb
dec
mov
cld
push
mov
or
mov
in
ljmp
fadd
test
mov
or
jp
xchg
mov
push
pop
mov
or
pop
jmp
jns
mov
fistpl
into
scas
lods
add
out
clc
sub
xchg
fisubs
xor
in
add
sub
push
das
cmp
repnz
xchg
outsb
shl
sub
mov
cwtl
push
add
aaa
icebp
repnz
cltd
lods
sub
call
dec
jmp
ljmp
push
fstps
push
xor
lahf
pop
add
movsl
outsb
or
sbb
je
jecxz
stos
int
lahf
out
mov
push
inc
ret
out
adcl
movsl
jecxz
xchg
mov
push
pushf
xchg
rcr
push
xchg
call
add
js
rolb
pop
rclb
popf
mov
mov
outsb
aaa
dec
adc
jno
pop
gs
js
mov
push
lds
sti
or
enter
ret
out
jns
test
pop
or
sbb
arpl
mov
push
ds
lock
or
jmp
sbb
push
mov
sbb
jge
add
cmpl
jae
sarl
mov
jecxz
loopne
outsl
adc
mov
in
push
lahf
addr16
jg
test
orb
clc
xor
negb
in
lret
and
xchg
iret
push
je
mov
jl
or
adc
mov
dec
sub
sbb
inc
cs
cmp
push
sbb
fmull
lods
scas
es
push
insb
mov
inc
xchg
jmp
mov
dec
dec
sarb
push
mov
add
out
pop
imulb
loope
dec
push
xchg
rorl
adc
add
adc
jmp
push
test
add
test
pop
pop
jbe
or
pushf
jecxz
ret
mov
sub
sbb
inc
or
jg
ret
xchg
cwtl
mov
and
pop
inc
pop
xlat
mov
sub
push
mov
cmpsl
xchg
ret
inc
les
jne
incl
lds
adc
sti
pop
mov
push
iret
inc
cmpsb
mov
bound
les
push
mov
imul
arpl
fnsave
or
add
push
push
lds
cmpsb
xorl
pop
xchg
adc
rolb
cltd
jecxz
sbb
sahf
out
lret
add
sbbb
or
in
mov
in
mov
ja
lods
mov
or
outsl
fcompl
repz
xor
push
les
mov
iret
inc
lahf
out
push
out
xor
call
push
and
add
mov
jp
ficomps
and
and
idivl
das
sbb
xor
out
add
jmp
cmc
dec
lahf
xorb
mov
push
adc
les
and
movsb
cmp
inc
mov
mov
inc
inc
jb
push
xor
push
insb
std
pop
dec
mov
xor
lret
movl
or
jp
mov
psrlw
fwait
rorl
in
fildll
gs
add
scas
imul
push
nop
loope
xor
push
or
fildll
and
cmp
xchg
cwtl
cmp
xor
sub
inc
popf
out
hlt
push
jmp
not
ret
cmp
mov
fdivrl
out
pop
jmp
xchg
mov
sbb
mov
popf
xor
mov
in
jmp
pop
xor
jae
aad
and
aaa
inc
or
mov
inc
fldt
stos
cwtl
add
add
shrw
adc
inc
fists
add
sbb
cmpsb
xchg
data16
insl
mov
rcl
pop
and
sbb
cmpsl
out
fwait
xchg
jnp
jnp
in
pop
bound
mov
fcomps
push
pop
dec
sti
dec
hlt
xor
je
rorl
movsl
test
pop
xor
jns
insb
or
jl
jo
sub
aas
cld
mov
push
in
inc
clc
inc
mov
pop
cli
mov
push
cmpsl
mov
pop
adc
pop
push
jno
test
adc
adc
popa
jmp
or
imul
xlat
add
dec
cmp
test
dec
adc
daa
mov
flds
sub
lret
mov
bound
jo
in
or
ret
xor
out
scas
dec
mov
mov
adc
int
fnstsw
mov
sarl
lahf
sti
fsubs
cs
loop
sbb
xchg
mov
mov
dec
mov
pop
mov
cmp
cltd
into
fisttps
adc
cmp
test
test
mov
shl
test
js
aad
pop
xchg
and
fdivs
cmp
push
jnp
sbb
mov
shr
out
pop
aas
arpl
push
out
dec
fmull
push
push
std
cltd
push
pop
je
aad
jb
insl
mov
pushf
repz
sar
fisubs
lods
inc
aas
add
sbb
xchg
cmp
sbb
add
test
cmpl
cs
icebp
push
scas
mov
mov
jnp
fwait
sub
push
dec
fnstcw
das
lds
push
popa
fdivr
jmp
cld
lret
into
cmp
test
push
les
inc
fstl
popf
cltd
cs
or
xchg
mov
mov
je
nop
sbb
loopne
mov
or
push
int3
pop
movsl
repnz
sub
fsubrl
sbb
xchg
dec
push
ljmp
fsubrp
mov
fdivrl
sub
or
pop
sub
test
fadd
lock
call
or
push
mov
in
inc
call
jge
push
xchg
mov
scas
je
jns
pop
sbb
inc
xor
shlb
xchg
out
je
and
lahf
insb
mov
fildl
and
jns
repnz
sub
mov
pop
push
cmp
mov
pushf
int
or
movsl
pop
ficoms
pop
sub
jbe
out
sbb
jl
inc
rcrb
aas
lret
and
nop
cmp
or
xchg
outsl
xchg
mov
sti
insl
ret
sarb
je
jns
sub
pop
cwtl
xlat
scas
xchg
or
faddl
push
cmp
loop
or
mov
je
xchg
aad
mov
mov
push
pop
les
rclb
xchg
xchg
adc
int3
adc
pushf
std
scas
pusha
sub
imul
dec
adc
test
ljmp
mov
add
adc
scas
cwtl
xchg
cmpsl
dec
adc
das
test
sbb
cmp
push
jecxz
mov
cmp
mov
mov
xor
ficompl
divl
xchg
pop
adc
mov
and
pop
lcall
fists
movsb
aad
and
les
jg
jno
cwtl
jbe
dec
cmp
adc
ss
sarb
lahf
leave
sub
push
into
xor
xrelease
or
inc
mov
test
lcall
sbb
adc
movsb
jle
inc
push
and
xchg
jb
cld
test
push
fldt
test
outsl
mov
add
xlat
adc
stc
loope
pop
stos
stc
shrl
mov
clc
hlt
push
jno
cmp
or
push
ss
clc
and
jbe
in
dec
mov
inc
cmp
mov
mov
cli
ret
cmp
pop
lock
ss
aas
jno
mov
clc
ret
push
lods
ret
xor
cld
pop
cmp
xchg
in
push
std
sub
xchg
xchg
mov
leave
ds
lret
cmp
int3
mov
fistps
jge
dec
divb
sbb
xchg
int
imul
xor
inc
adc
xchg
out
and
inc
mov
cltd
add
xchg
xchg
lea
insl
push
jecxz
stc
xlat
dec
ret
idiv
pop
add
loope
cmc
sbb
sbb
pop
mov
add
sar
stos
xchg
sbb
mov
sub
addr16
lahf
out
push
xchg
cmc
cs
outsl
jmp
fs
daa
je
mov
fnsave
mov
jne,pn
iret
idivl
subb
aam
fcmovu
lds
mov
js
sbb
mov
mull
mov
mov
dec
add
mov
and
in
jnp
repz
outsb
sub
xor
cmp
lods
inc
in
leave
scas
cmp
cmp
sub
dec
inc
fdivrl
es
pushf
push
imul
and
aad
out
sub
sub
jle
xchg
bound
mov
adc
leave
movsl
cwtl
rcr
push
dec
daa
xchg
or
and
xchg
push
dec
xchg
push
mov
mov
cmp
adc
cmp
stc
fisubl
sub
aad
lcall
fstpl
mov
filds
push
je
push
jns
sbb
fwait
push
or
dec
xor
mov
cld
fimuls
push
xchg
xor
cmp
mov
sbb
sbb
movsb
lods
lahf
je
in
movsl
gs
add
shll
pop
xor
lret
jnp
xor
ret
nop
clc
mov
rorl
jg
imul
ret
mov
and
push
stc
adc
imul
popa
push
ljmp
jns
pop
idivl
cmp
sub
shll
adc
lea
sbb
or
idivb
imul
nop
sub
fldenv
adc
push
mov
fldl
or
es
sbb
imulb
out
aas
and
add
lret
repnz
mov
and
out
outsl
jge
mov
jo
sbb
xor
movsb
das
inc
jge
lahf
pop
ret
xor
sbb
ja
loop
cmp
dec
mulb
imul
lea
cmc
cli
jno
sub
mov
mov
outsl
into
shlb
and
inc
dec
mov
das
pop
mov
pop
mov
adc
pop
xchg
sbb
inc
in
inc
push
dec
pop
es
inc
xor
shl
gs
hlt
int3
sub
sbb
sahf
push
add
add
add
add
push
ja
cmp
addr16
cmpsb
and
and
add
and
sub
push
xor
int
pushf
dec
shl
add
sbb
fidivs
dec
addr16
mov
out
lahf
cli
cwtl
and
jl
les
push
jne
push
les
outsl
mov
fs
and
rclb
jns
enter
inc
inc
push
pop
sbb
sub
fdivrs
fists
rclb
sub
cmp
xor
add
lret
cmc
add
es
neg
add
enter
push
sub
cmpsl
sbb
lock
dec
xor
fimull
mov
sahf
sahf
data16
jmp
loop
divl
xchg
test
js
stos
fidivs
rcll
cmpsl
mov
sbb
mov
nop
add
cmp
fstps
stc
mov
dec
mov
and
adc
ds
movsl
lock
xor
pop
mov
ffreep
dec
add
push
lret
sarl
das
icebp
xchg
jg
xlat
in
mov
rcrb
xchg
push
push
sbb
addr16
cltd
ljmp
pop
fwait
lods
movb
out
int
push
sti
jbe
dec
and
int3
or
and
pop
lds
icebp
xchg
jl
sub
add
daa
mov
aad
push
mov
and
sbb
punpckhbw
jle
xchg
sbbb
or
mov
test
aas
aas
cmovle
cmp
call
lock
sub
scas
mov
cltd
out
ljmp
repnz
neg
lods
or
in
imul
jecxz
loope
push
lds
pushf
xchg
mov
cmp
fs
lods
sbb
cmp
sbb
ret
push
sbb
inc
fdiv
mov
xlat
addr16
loope
inc
and
mov
cmp
jo
mov
push
xchg
and
inc
pop
jmp
fwait
sbb
incb
fnstcw
fsubrl
pop
mov
nop
jle
daa
cmp
pop
mov
jae
test
ss
insl
push
fmull
xchg
mov
bndldx
xchg
mov
xor
push
std
lahf
outsb
mov
ret
inc
in
jecxz
pop
ljmp
pop
pop
pop
rcrl
cmp
jmp
fdivrs
insb
adc
xlat
testl
rcll
movsl
mov
insb
pop
add
test
xchg
arpl
popa
dec
orb
adc
fs
addr16
mov
insb
mov
out
inc
jae,pn
gs
jns
mov
inc
cli
pop
mov
xor
negl
mov
imul
jmp
test
mov
add
or
jecxz
hlt
nop
pop
ret
sbb
jae
or
adc
out
adc
and
jg
loope
roll
sbb
mov
gs
lahf
into
and
jmp
dec
loopne
cs
sbb
fldl
sbb
rcl
or
ja
lret
dec
call
mov
clc
popa
sahf
pop
jae
into
fwait
dec
iret
sahf
jge
cltd
bound
mov
mov
cmp
ret
ja
pop
sub
mov
out
cmc
int3
out
jp
adc
xor
pop
test
push
scas
add
push
or
inc
pop
popa
xor
and
lahf
mov
sbb
pop
lods
jb
cwtl
sarb
sarb
pop
int3
xor
aaa
dec
cmpsb
lods
stos
cltd
xlat
lret
flds
sti
mov
jmp
sbb
fisubl
inc
cli
mov
in
xchg
es
jb
xlat
jns
aad
fwait
adc
mov
or
stos
mov
gs
cltd
aas
xor
dec
sub
fdivrl
in
pop
mov
sahf
xchg
stc
dec
mov
cli
or
in
out
int
and
adc
sbb
sbb
fdivrp
adc
lock
pop
roll
sbb
call
add
pop
dec
mov
xor
out
inc
testb
jge
add
cli
imull
xchg
adc
push
test
test
aad
jbe
js
das
sbb
mov
mov
or
cmp
xchg
mov
dec
mov
arpl
pop
dec
adc
pop
pop
dec
push
cmp
inc
loope
or
adc
mov
xchg
inc
cmc
andl
jnp
pop
push
sbb
adc
pushf
cmp
int3
xlat
int3
add
pop
in
fnstenv
inc
stos
push
scas
push
addr16
fisubrl
cmp
xchg
jg
mov
fnstenvs
mov
pop
movsl
in
inc
mov
aam
jne
sahf
and
pop
jbe
inc
or
mov
and
sub
mov
mov
ja
std
cltd
hlt
pop
xchg
fdivr
pop
push
jle
clc
inc
repz
and
adc
xor
jb
imul
mov
dec
stos
or
scas
sbb
outsl
and
cmc
stc
lahf
je
ljmp
out
test
xor
fwait
inc
or
pop
pop
scas
mov
mov
xchg
add
fmuls
dec
mov
cwtl
cwtl
pop
add
lahf
jo
jno
icebp
lds
jo
aam
es
stos
shlb
std
hlt
dec
sti
aam
jle
push
fs
int
divps
xchg
mov
push
xor
push
in
lods
xchg
imul
aaa
cmp
push
repnz
divl
adc
test
clc
repnz
mov
popf
inc
mov
mov
fs
cmp
sub
ss
loop
lcall
cmc
pusha
jne
mov
mov
cs
mov
cmp
sbb
mov
incb
push
pop
or
xchg
add
xorl
sti
adc
movsb
jno
add
and
or
and
movsb
pop
sbbl
mov
je
ret
and
xchg
xor
push
mov
lret
stos
inc
mov
lea
xor
xchg
xchg
mov
sbb
fiadds
lods
ljmp
pop
add
cmp
in
fidivl
andl
shl
icebp
imul
dec
sbbl
test
dec
jp
mov
or
sbb
sbb
sbb
out
jno
lods
iret
sbb
xor
subb
pop
or
inc
and
mov
mov
xchg
sub
push
arpl
in
jl
aad
addr16
lock
xorl
fsub
adc
leave
gs
pop
mov
addr16
jo
ja
pop
repz
push
dec
test
mov
jle
add
cmpsb
xchg
pop
leave
fcomps
add
xchg
mov
int3
cli
mov
jmp
inc
jno
or
xchg
mov
ficoml
adc
fs
in
mov
mov
pop
das
xor
pop
adc
push
stc
sub
andb
mov
mov
jnp
arpl
leave
mov
inc
mov
test
push
cmpsb
arpl
stc
dec
loope
sarl
jmp
sub
and
sub
aam
add
fwait
xchg
push
popf
movsl
sbb
adc
out
lcall
xchg
cmp
ljmp
loope
or
jecxz
das
shr
cmpsl
sub
test
gs
jae
imul
push
filds
iret
push
or
cmpsb
xchg
mov
out
test
in
pop
pop
dec
push
jl
repz
push
fmull
xor
pop
xor
cli
cmp
sub
xchg
shrl
push
rol
cmp
push
inc
mov
mov
xor
pusha
aad
popa
insb
or
push
sbb
loopne
daa
ja
xor
dec
test
ret
xchg
lock
sub
leave
add
sbb
fsubs
jne
push
xchg
subl
loope
js
sti
fs
lds
cmp
jle
out
out
xor
cli
in
xchg
enter
faddl
push
mov
mov
cmp
push
mov
sahf
fwait
inc
jmp
xchg
test
rorl
or
mov
xchg
push
and
notl
adc
sbb
sub
lea
xchg
lret
push
inc
jbe
dec
repz
sub
rorb
push
push
adc
add
clc
test
into
sbb
int3
call
xor
div
adc
inc
mov
cld
icebp
cli
popa
daa
jae
out
test
push
loope
scas
cmp
push
fstl
mov
dec
ret
xchg
popf
lods
es
mov
sbb
movsb
nop
xchg
xchg
dec
scas
shrl
insl
jo
mov
pusha
es
dec
cmpsb
adc
pop
jle
adc
adc
pop
sbb
mov
shrl
aas
imul
pop
fsubrl
xor
mov
js
pop
fstpt
fbstp
sti
std
es
lcall
int
fmull
stc
and
incl
cmc
push
dec
or
xchg
fisubs
fcomp
mov
test
and
mov
inc
xchg
sahf
stos
fnstcw
mov
mov
andb
and
jge
rorl
outsb
nop
ret
int
xchg
aas
dec
jg
loope
cmp
mov
cmp
dec
jle
shrb
sub
lods
xor
dec
mov
ljmp
inc
ja
jl
jp
sub
cmpsb
movsb
mov
pop
jmp
nop
adc
iret
xchg
gs
jp
pop
adc
mov
outsl
pop
insl
ret
pop
and
push
mov
push
jae
mov
mov
inc
stc
sub
cmp
pop
cld
jmp
aad
sub
xlat
push
fwait
mov
mov
push
add
push
sbb
xchg
sbb
filds
adcl
scas
sbb
jbe
dec
mov
dec
adc
xor
test
and
mov
imul
call
or
leave
dec
push
or
xchg
mov
and
cltd
pop
and
aad
fsubr
xor
dec
fistpl
stos
sub
adc
ss
in
aas
mov
adc
xor
std
ret
inc
jns
xchg
cmpsb
cs
outsb
push
lds
add
adcl
enter
popf
xchg
mov
sti
aaa
lret
mov
ficoml
sbb
in
gs
xchg
fisubrl
out
sub
dec
sbb
add
or
jno
nop
je
rorl
inc
xchg
sub
clc
call
dec
mov
imul
fwait
mov
imul
es
xchg
cli
xchg
daa
int
imul
xor
xor
push
clc
and
sub
pop
inc
and
jo
and
pop
xchg
insb
sub
sbb
mov
sbb
add
cmpsb
ja
mov
testb
pop
mov
jno
sar
jmp
mov
out
clc
push
xchg
pusha
icebp
and
add
sarl
sub
mov
sub
push
fwait
jg
outsb
leave
sub
test
or
add
gs
mov
or
mov
dec
dec
imul
cmc
addl
jne
hlt
fsubrl
mov
xor
push
mov
clc
jo
out
push
or
mov
je
mov
mov
dec
mov
add
inc
push
jmp
into
rolb
adc
in
push
out
jmp
pop
test
xchg
pop
outsb
mov
push
ficompl
and
scas
fs
scas
mov
add
or
xchg
jp
sub
stos
push
pop
push
insb
add
xchg
pop
arpl
stos
mov
dec
rorl
les
enter
and
orl
sti
ds
sub
shlb
ror
mov
jbe
jge
push
scas
mov
nop
std
popa
pslld
jb
rcrl
scas
mov
lock
sbb
je
bound
test
adc
out
in
push
jmp
dec
xor
adc
les
clc
mov
lahf
call
lods
add
cmp
lea
xorb
push
fbld
sti
out
mov
ljmp
and
call
mov
or
xchg
adc
and
xor
call
test
push
fistl
insb
in
add
fstsw
inc
and
sbb
idiv
mov
xor
call
jnp
sahf
push
jle
lods
mov
pop
xchg
sahf
mov
std
ds
xchg
push
dec
ds
aas
cmpsl
xor
mov
add
push
arpl
hlt
aam
fnop
bound
adc
cwtl
inc
in
cli
mov
call
xchg
mov
jae
mov
mul
ljmp
mov
jmp
push
rorl
sbb
jne
scas
mov
cmp
jle
sbb
pop
fisttpl
or
or
xchg
popa
or
shll
cmp
call
test
add
es
fsub
mov
mov
into
test
rclb
cwtl
jne
leave
push
or
dec
jb
cmp
sbb
loopne
jne
lret
inc
dec
stos
repnz
test
pop
xor
mov
pop
cmpsl
rcl
lcall
lret
inc
mov
or
xor
in
unpcklps
jb
movsl
cmpb
mov
aaa
cmp
mov
jo
stc
mov
mov
pop
jmp
popf
cwtl
xchg
inc
jae
adc
inc
fisttps
into
jnp
or
testb
fs
fnsave
sti
aas
lods
test
dec
jmp
outsb
in
nop
cmp
loop
pop
inc
movsb
push
pusha
clc
std
mov
jge
and
shl
inc
aad
cmpsl
mov
or
xor
push
ret
push
cli
jmp
jecxz
adc
sbb
xchg
pop
or
jecxz
mov
pop
pop
mov
movsb
cmp
adc
insl
push
adc
mov
mov
fldcw
lods
lahf
cmc
cmpsb
pop
or
lcall
jns
cld
aad
mov
pop
or
pop
push
mov
repz
in
pop
cld
mov
pusha
lods
aad
cmpsb
cmp
adc
dec
nop
push
cmp
popa
lock
test
arpl
pop
popf
xchg
out
repnz
xor
pop
mov
jp
sbb
out
cli
test
pop
and
dec
and
and
aam
js
mov
or
in
iret
sti
mov
mov
jge
mov
mov
sub
sarl
lcall
in
mov
lds
add
and
mov
jne
push
scas
test
mov
cmp
or
fsubr
fdiv
leave
cmp
or
lcall
mov
sbb
les
je
flds
mov
out
popl
mov
adc
movsb
pop
push
xchg
mov
push
test
sub
mov
test
inc
xchg
cmp
cmp
xchg
pushf
aas
or
xor
mulb
scas
je
lret
out
fs
inc
out
dec
or
jne
mov
pop
repnz
fidivrl
fldcw
mov
outsb
popf
repz
pop
sbb
scas
dec
pop
pusha
sub
cmp
mov
imull
jg
lea
dec
lock
scas
sbb
lods
jbe
repz
dec
je
mov
mov
fidivl
pop
pop
sub
mov
adc
pop
test
shrl
fsubp
jge
sahf
push
imul
sbb
ljmp
mov
pop
xchg
fs
push
or
jecxz
xchg
cmpl
ljmp
popf
mov
popa
cmpsb
cmp
icebp
cmp
stos
call
and
xor
js
fwait
das
mov
jno
add
ret
out
mov
and
lods
les
push
test
rcr
ja
gs
out
out
lret
mov
jnp
mov
stos
gs
pop
xchg
dec
inc
sahf
xor
pushf
mov
adc
enter
test
xchg
aas
ja
dec
and
pop
inc
dec
push
pop
mov
mov
popl
xchg
les
sbb
mov
sub
stos
cmpsl
aaa
cmc
ret
fcompl
adc
mov
test
clc
mov
out
xchg
in
sahf
stos
push
push
loope
fdivs
mov
sub
mov
jecxz
mov
lcall
jmp
out
and
shrl
sbb
in
cld
ret
test
mov
fdiv
fs
cs
push
imulb
jbe
jecxz
lcall
sub
and
xor
cmp
push
xor
xchg
in
mov
dec
jae
dec
xchg
cmpsl
das
loope
aas
jo
test
adc
jmp
div
jb
push
in
push
cmp
mov
adc
dec
mov
insl
imul
xor
mov
push
xchg
shrb
xor
loop
popl
jle
sti
push
addr16
out
pop
movsb
jg
pop
sbb
movl
inc
add
bound
daa
push
cs
and
push
lret
cmp
xchg
sahf
push
movsl
lret
adc
stos
and
jbe
sbb
jle
pop
lahf
xchg
cmpsb
push
cmp
hlt
pushf
les
test
lds
dec
adc
pop
in
mov
mov
iret
jp
mov
adc
mov
scas
inc
call
pop
dec
pop
into
and
xor
insl
and
cs
sub
or
ret
aam
inc
cmp
dec
add
xchg
std
outsl
xchg
gs
popa
fsts
pusha
or
repnz
cmc
dec
cmc
pop
test
and
sub
shll
adc
lret
pusha
cmpb
jno
mov
arpl
sub
scas
mov
out
xchg
xchg
mov
arpl
icebp
aad
add
mov
sub
fsts
push
outsl
movsl
data16
stos
mov
sbb
dec
mov
aaa
imul
iret
mov
adc
xchg
cmpsb
out
aad
pop
mov
fistps
repnz
inc
xor
mov
adc
repz
sub
adc
push
lock
pushf
or
xorl
sbb
loopne
dec
nop
mov
lock
ret
movb
hlt
inc
cmp
mov
std
mov
jno
sbb
arpl
addl
push
jle
outsl
xor
fdivr
pushf
nop
aas
cmp
dec
adc
and
push
cmp
mov
scas
mov
mov
stos
das
jb
jle
out
imul
xor
iret
xchg
adc
aas
pushf
imul
jg
jae
inc
push
aad
or
shr
cld
data16
stc
jp
sub
adc
clc
mov
and
lods
dec
pop
adc
in
dec
ret
jb
mov
pop
enter
cmp
std
push
pop
pop
fnstcw
xchg
dec
push
pop
sub
mov
pop
jg,pt
not
mov
mov
es
jo
loopne
mov
ds
fisttps
imull
add
imul
lret
pop
mov
and
cs
cmp
add
mov
sbb
fwait
adcl
push
test
stos
ljmp
push
in
cmp
ljmp
mov
lea
xchg
push
push
cmp
mov
lahf
push
inc
or
mov
arpl
stc
xchg
cmp
andb
or
fxch
xchg
ret
pop
in
das
popl
mov
inc
aam
jb
sbb
add
in
lcall
cmp
stos
jns
fsubrs
fistpll
je
punpckhbw
inc
mov
jne
loop
subb
push
sti
adc
aas
jns
xor
fs
sub
sarl
std
dec
and
xchg
pop
lds
mov
mov
dec
outsl
add
fildl
push
jo
fsubr
gs
jne
mov
jae
cmc
lcall
mov
ds
fwait
sub
mov
mov
jne
ja
fbstp
sub
cmp
inc
sahf
mov
mov
fnsave
push
jns
pop
mov
pop
outsl
rcrl
pop
push
sysexit
ja
lock
rcrl
rcl
pusha
pushf
xchg
sbb
inc
push
mov
repz
mov
lds
sub
jbe
shrl
adc
inc
testb
pushf
cmp
or
sub
jne
xchg
outsb
push
or
cmp
dec
pop
dec
jno
cmp
cltd
push
aaa
call
pop
movsb
or
pop
cmpsb
cmpsl
jns
int
popf
xlat
mov
and
cmp
xor
jno
add
pusha
in
or
aaa
jg
ss
mov
jbe
pop
mov
inc
adc
popf
jmp
cmp
out
scas
push
xor
or
fisttpll
xor
mov
pop
pop
test
xlat
and
push
sub
jg
mov
data16
push
addr16
pop
jmp
jnp
inc
ss
call
lret
jp
inc
das
aas
cs
dec
leave
inc
sbbb
arpl
popa
xor
mov
mov
out
pop
add
xor
dec
mov
icebp
inc
mov
cltd
arpl
adc
testb
aas
sahf
dec
movsl
out
ljmp
sub
int3
popf
popf
cmc
addb
push
push
add
lret
or
enter
inc
das
inc
outsl
psubq
sub
fisttps
xor
lret
xor
cmp
repz
in
adc
xlat
and
push
pop
js
add
sub
movsl
jecxz
xchg
out
adc
in
icebp
fnstenv
fisubrl
sbb
mov
add
mov
sbb
sub
pusha
insl
cmp
dec
pop
jb
lods
rclb
dec
sub
xchg
pop
ss
push
pop
jae,pt
xchg
xchg
sub
repnz
cmp
mov
std
fadds
xor
popf
xlat
pop
jns
pushl
adc
adc
fdivl
pop
int
movaps
imul
pop
pop
movsb
mov
stos
push
or
in
ret
jns
js
filds
push
mov
loopne
inc
iret
inc
push
adc
mov
push
jns
pop
lods
add
pop
cmp
loope
movsl
push
inc
fcmovb
pop
xor
pusha
pop
test
mov
sub
sbb
sub
jl
sbb
repz
ja
jb
add
mov
mov
pop
lahf
adc
mov
lret
aas
sbb
inc
cli
xchg
sbb
jl
ja
out
xor
mov
repz
mov
sub
outsl
mov
jns
mov
or
dec
aam
data16
test
sub
mov
loopne
or
andb
push
pop
and
sub
repz
enter
mov
dec
lea
scas
sub
hlt
lds
mov
outsb
cmp
adc
arpl
rcl
lods
or
inc
lods
lretw
and
adc
cli
xor
repnz
sahf
imul
xchg
daa
cmpsb
inc
mov
notl
inc
mov
mov
fnstsw
sub
arpl
les
cwtd
in
sub
rcll
ja
push
stc
fidivrl
jecxz
out
or
push
dec
xor
mov
and
jbe
jp
ds
jne
fisubrl
cli
xchg
outsb
adc
gs
cmc
iret
fwait
incl
hlt
cmpsl
mov
lea
xchg
sub
adc
sub
ror
fxch
add
jb
arpl
sbb
mov
sbbb
popf
subb
mov
mov
in
sbb
cmc
mov
das
jae
sbb
pop
mov
test
stos
inc
sbb
mov
push
mov
roll
je
mov
inc
sahf
mov
adc
dec
mov
adc
xchg
scas
lods
std
hlt
fdivrl
out
mov
in
stos
mov
cmp
js
lea
cld
ja
loope
sub
fisttps
stos
sbb
or
xchg
ds
daa
xor
inc
sbb
sub
out
data16
outsl
in
inc
pop
decb
mov
cmp
jno
pop
sar
xchg
int3
fldt
inc
jmp
or
lock
outsl
mov
test
flds
lret
xlat
and
movaps
cltd
sahf
inc
mov
add
inc
out
push
push
jg
imul
loopne
jns
push
daa
add
jae
insl
es
stos
stos
cmp
sbb
je
divl
mov
cld
fcomip
cli
jge
and
das
popa
test
lods
jae
mov
xor
scas
inc
scas
adc
lret
out
in
pop
les
xor
and
ficoml
test
mov
mov
pop
insb
mov
adc
lahf
cmp
test
outsb
mov
inc
mov
sarb
and
icebp
mov
push
imul
push
and
and
add
lea
and
cmpsb
add
jo,pn
adc
mov
dec
cmc
inc
add
mov
mov
xchg
jnp
sbb
test
mov
xchg
pop
xor
pushf
inc
or
scas
lods
out
or
mov
mov
or
loop
in
xchg
and
dec
dec
xchg
cwtl
dec
je
scas
inc
xor
jg
push
negb
cmp
jne
incb
dec
fwait
pop
inc
or
mov
arpl
ja
cmp
mov
cmp
lds
jmp
cmp
push
push
jb
pop
cltd
fs
or
ret
sarb
push
jge
xchg
fidivs
das
invd
lret
in
shll
leave
inc
mov
jmp
xor
aad
in
pop
clc
push
subl
cmp
pop
cwtl
mov
push
add
jmp
sbb
roll
push
jg
rcr
adc
lret
cmpsl
xchg
mov
nop
mov
add
push
rolb
movsb
push
adc
mov
jns
test
ja
gs
push
jp
cmpsl
fildll
mov
cli
jbe
rorl
imul
aas
aad
in
and
mov
ljmp
push
push
gs
cmpl
mov
scas
pop
insl
mov
xlat
dec
js
fistpl
mov
pop
lock
mov
jp
or
nop
xchg
inc
dec
mov
mov
jecxz
decb
lcall
movsb
outsl
sbb
mov
push
sbb
xor
push
fadds
mov
xor
push
mov
dec
pop
into
push
out
fwait
enter
ljmp
jge
in
loope
or
out
out
cmpsb
aam
loope
dec
push
clc
loope
push
jno
or
lock
pop
mov
imul
add
xchg
or
insb
loop
push
jle
sti
and
cld
jmp
push
leave
xchg
ja
std
aad
out
cmp
out
leave
sub
mov
and
sahf
andl
jecxz
sbb
sbb
and
adc
adc
loope
fdivrs
stos
xchg
and
xchg
ss
ljmp
lcall
sbb
in
bound
fsubrs
fdivrs
xchg
dec
adc
inc
pop
cmpsb
test
lret
jae
jns
mov
push
aas
push
les
cmp
cmp
or
sbb
roll
ja
les
push
adc
imul
mov
cmpsl
jb
nop
pop
add
enter
stc
dec
bound
pop
dec
add
ret
adc
in
sbb
jne
outsb
push
jne
inc
push
imul
or
mov
xor
loop
pop
stos
xchg
mov
in
inc
pop
fbld
add
cltd
pop
icebp
cld
jle
lret
in
pop
repnz
mov
and
push
dec
mov
stos
ret
xorl
scas
hlt
lret
in
test
mov
scas
pop
dec
push
popf
ret
push
sahf
xchg
mov
fwait
subb
ljmp
loope
movsb
fcmovne
jo
int
xor
ds
repnz
jbe
movsb
call
xchg
mov
test
jns
gs
pop
pop
lcall
cmpsb
aas
mov
adc
enter
loope
mov
pop
jns
sbb
int3
push
sarb
shrl
xor
jl
inc
mov
jne
test
cmpsb
fcmovne
push
lds
jmp
mov
adc
pop
pop
int
scas
pop
pop
dec
pushf
cmpsl
cmp
dec
out
fs
lds
jg
int3
pop
in
xor
cmp
sbb
dec
orl
in
inc
xchg
dec
insb
fisubl
popf
dec
push
sbb
mov
add
cmpsl
pop
push
outsl
pusha
sarb
lods
dec
adc
adc
fs
lret
into
sahf
icebp
push
pushf
mov
fxch
jns
sub
push
mov
cmpsb
shrl
inc
jg
scas
or
push
pop
pop
dec
sbb
test
inc
jecxz
insl
out
dec
pusha
push
inc
push
cmp
xchg
inc
and
xchg
mov
push
fdivrp
xchg
push
dec
adc
int
xor
cmp
xchg
icebp
sbb
pop
mov
adc
sub
xor
in
sub
dec
pop
adc
repz
mov
xchg
mov
push
mov
cmp
movsb
test
push
jnp
sbb
jle
sbb
jne
dec
cmp
cmpl
scas
sub
dec
or
add
cmp
sub
inc
cli
clc
mov
inc
adc
mov
cmp
cli
inc
cmp
push
test
xor
jno
ljmp
mov
insl
shlb
test
mov
cmpsl
and
sub
dec
mov
ficomps
sbb
jno
jle
das
dec
out
sub
sub
in
sbb
movsb
sub
or
outsl
and
push
sbb
lret
sarl
repnz
mov
in
icebp
push
mov
add
xor
addr16
js
adc
inc
andl
mov
cld
mov
imul
mov
pop
pop
cmp
xchg
xchg
xchg
lods
and
mov
popa
and
lret
arpl
inc
js
andb
sub
lret
sbbl
xchg
lahf
xchg
and
cmpsl
xchg
mov
scas
subl
rcr
cwtl
hlt
cmpl
mov
je
data16
cmp
cwtl
int
dec
mov
add
gs
outsl
push
jmp
xorl
lods
mov
and
lock
mov
cmp
xchg
shlb
mov
mov
stos
mov
sbb
sub
add
pop
in
cmp
out
inc
stos
inc
lret
insb
xor
outsb
ret
or
movsl
sbb
stos
mov
js
ljmp
jbe
imul
inc
dec
cmp
xor
push
cmp
loope
pop
push
cltd
push
pop
icebp
dec
hlt
xor
sub
pop
sar
shlb
cmp
testb
imul
das
les
xchg
mov
inc
hlt
into
xor
stos
sub
aam
or
adc
fs
sbb
and
add
sub
imul
inc
cwtl
jb
xor
dec
and
nop
addb
sbb
xchg
test
push
jae
sbb
stc
mov
sti
dec
adc
in
dec
mov
push
lret
std
es
pusha
out
cmc
xchg
fnsave
femms
push
call
orl
clc
sbb
lret
push
stc
std
call
icebp
xor
mov
add
mov
mov
cli
cmp
mov
pop
scas
imul
je
test
mov
in
sbbb
cmp
fcmovne
pop
pop
nop
or
push
xor
call
inc
test
popf
sub
adc
mov
dec
fimull
xor
movsb
inc
iret
sbb
push
fsub
pop
std
mov
lret
and
dec
or
mov
scas
xchg
push
out
ss
iret
xor
popf
popf
adc
cmc
cld
mov
inc
cld
addb
fs
pop
mov
addr16
sub
sbb
add
movsb
pusha
fcoms
inc
mov
test
jg
cmp
sbb
leave
lret
push
adc
rolb
loope
dec
pop
mov
xor
call
insb
mov
inc
push
into
cmpsb
and
mov
enter
int3
pop
aaa
mov
sti
fnstcw
pop
pop
repnz
sete
stos
cltd
mov
rcrb
imul
fldl
out
xchg
andl
fwait
mov
xor
push
ret
pop
xchg
cmp
outsl
insl
lcall
outsb
cmp
push
pop
dec
fistps
fildll
or
pop
sub
cld
hlt
cs
imul
mov
das
rorb
dec
mov
cmp
cmp
rcrl
and
mov
imul
mov
mov
add
push
pop
imul
cltd
adcb
push
pop
in
pop
enter
sbb
and
stc
xor
push
cmp
sub
dec
mov
xor
pop
dec
sub
xchg
add
das
xchg
lock
sbb
pop
or
pop
cld
pop
push
rclb
or
sub
push
stos
push
jns
sub
mov
sbb
rolb
and
notb
outsl
mov
sti
addr16
sub
pop
aad
jae
jae
push
dec
mov
and
in
insl
fs
enter
mov
mov
bnd
jg
mov
sti
mov
cmpsb
ret
out
jecxz
cli
xor
xor
rol
jmp
xchg
out
jle
and
xor
xlat
inc
cmp
pop
pop
xor
cmp
test
das
jo
inc
pop
mov
icebp
daa
test
and
xorb
jne
mov
cmpsb
cltd
jbe
fldenv
mov
inc
mov
aam
sub
mov
jne
insl
mov
js
imul
in
or
mov
mov
add
stos
xor
pop
adc
ss
pop
pusha
jae
push
jmp
mov
shrl
cltd
int
or
pushl
mov
mov
enter
test
xlat
inc
call
fsubl
inc
and
jne
cld
mov
rcrb
lods
push
or
stos
dec
or
or
test
or
mov
movsb
jae
hlt
add
imul
in
leave
movsb
loop
pop
jbe
pusha
inc
mov
mov
sbb
jb
mov
in
and
dec
dec
notb
xor
adc
imul
das
dec
hlt
cmpsl
rcr
mov
lret
dec
xor
into
loop
or
xor
pop
ds
mov
flds
orb
cmp
adc
cmc
call
outsb
sbb
sbb
adc
add
mov
push
cmp
lds
inc
data16
pop
scas
inc
sti
psubq
ljmp
mov
lds
arpl
inc
push
push
fldl
clc
push
sub
outsb
mov
daa
pop
jmp
mov
clc
test
movsl
sub
in
push
xor
mov
stc
push
or
jp
push
leave
add
adc
push
push
enter
ss
jecxz
sub
sti
cmp
and
sbb
xchg
aaa
pop
jge
inc
repz
inc
insl
faddl
pop
dec
aad
adc
ret
mov
shl
inc
or
adc
repz
inc
or
inc
mov
push
fisttpl
lods
movsl
lods
and
cmc
nop
fidivrs
lahf
jl
dec
jge
dec
roll
pop
adc
inc
adc
sbb
xor
dec
add
mov
sahf
xchg
jl
aaa
addr16
sbbb
sub
dec
push
arpl
out
aad
mov
xor
and
and
out
adc
pop
pop
push
adc
jmp
icebp
dec
xchg
mov
xchg
aam
mov
setb
cmpsb
sub
or
aad
stc
int
add
lods
sub
stos
add
mov
sti
push
push
aad
xlat
int
sbb
jp
fldl
or
mov
lea
sub
insb
inc
push
adc
stos
and
data16
push
or
fdivl
xchg
sub
mov
movsl
add
roll
pop
std
sahf
ljmp
mov
insl
lods
push
cmpsl
shlb
mov
gs
cmpsb
jo
loop
push
xor
add
mov
ja
int
jno
cmc
idiv
push
mov
jge
aad
aas
in
push
mov
cmp
loope
jmp
add
mov
call
nop
sub
cli
mov
test
adc
ss
push
jb
mov
dec
addb
ret
outsl
push
pause
dec
inc
mov
adc
adc
popl
pop
fistpll
jl
out
fldl
or
push
mov
xchg
push
movb
push
cwtl
scas
pop
cmp
jbe
xchg
fisttpll
es
push
icebp
test
push
loop
xchg
and
add
mov
stc
push
push
adc
jmp
cmc
fmulp
js
fcompl
lahf
push
mov
ds
lahf
mov
add
insl
cmc
hlt
push
pusha
add
xor
test
aam
addb
out
movsl
test
insl
daa
std
jle
sbb
jae
mov
adc
scas
aam
and
mov
gs
pop
mov
arpl
jno
vxorps
jbe
jb
jns
roll
fwait
xlat
hlt
fs
call
test
enter
mov
jle
cmp
sub
jnp
push
fdivrs
sahf
xor
mov
fstpl
or
xchg
pop
popf
insl
push
aaa
sbb
add
push
mov
nop
jmp
mov
add
inc
outsb
jecxz
dec
adc
jge
inc
inc
fwait
cmp
jno
sti
addr16
lods
ds
mov
add
mov
mov
dec
mov
mov
ffree
xchg
std
aad
iret
cmp
inc
inc
scas
mov
ret
sbbl
pop
push
lock
mov
scas
mov
testb
adc
pop
inc
int3
xlat
orl
xchg
outsl
call
jl
adc
add
sbb
jno
pop
clc
mov
mov
loop
adcb
xor
sbb
arpl
dec
pop
cmp
pop
or
dec
dec
dec
imul
xor
clc
into
mov
jb
out
xor
cmp
or
movsl
or
adc
clc
sub
mov
xchg
std
fisubrl
nop
xor
dec
gs
mov
dec
adc
mov
imul
jnp
xchg
es
mov
jb
xchg
test
divl
sbb
sbb
in
bound
in
push
sahf
mov
ret
daa
pop
shll
add
mov
pop
mov
xchg
jmp
push
dec
xchg
les
lock
push
out
mov
out
lock
cmp
daa
std
push
cwtl
cwtl
xchg
xchg
sti
pop
fwait
push
rcrb
and
popa
jmp
jne
and
sub
addr16
mov
dec
es
jg
push
sub
cmp
fildl
adcb
mov
sbb
ret
add
xor
enter
jnp
stc
push
xchg
fincstp
jno
ja
je
inc
inc
rclb
mov
jl
sbb
add
out
lea
test
rcr
je
sub
mov
test
dec
lds
cmp
sub
mov
pushf
test
mov
fmull
push
ja
dec
lret
dec
int
xchg
test
adcb
jge
mov
mov
inc
cli
test
outsl
push
dec
pushf
inc
cmpb
pop
mov
push
scas
pop
cmp
mov
inc
sbb
repnz
lods
stc
push
scas
mov
pop
push
dec
stos
test
add
push
int3
dec
jo
xchg
inc
in
push
pusha
push
sub
xor
test
repz
outsl
pusha
aam
adc
outsl
mov
fwait
adc
push
jb
insb
cmpl
xor
pushf
repnz
movsl
aaa
imul
sbb
jno
mov
jecxz
out
sbb
jb
pusha
in
mov
mov
std
stos
and
bound
test
xchg
int
mov
add
in
clc
mov
adc
mov
xchg
outsb
shll
sbb
mov
sub
ds
xchg
fidivl
daa
out
jecxz
xor
adc
stc
push
and
int3
mov
push
aam
cwtl
mov
ljmp
jmp
adc
fwait
gs
fimull
adc
lret
es
rcr
xchg
imul
cmc
jmp
xor
and
cld
aad
imul
inc
and
rclb
add
inc
jge
decb
fmull
jbe
sub
inc
insb
jb
mov
jnp
mov
mov
mov
dec
dec
lret
ss
dec
aaa
mov
xchg
adc
cwtl
imul
adc
scas
daa
repnz
adc
aad
cltd
stos
cmp
iret
jecxz
mov
xor
jne
xchg
xchg
and
inc
leave
lds
jo
cmc
je
mov
sub
push
ret
pop
inc
push
fsubrp
add
decl
xchg
sub
inc
mov
dec
jp
fsts
movsb
pusha
out
add
and
repz
add
fdivs
in
jbe
vpmuludq
pop
fstps
dec
mov
sub
lds
test
cmp
mov
shl
xchg
add
outsl
jns
sbb
out
and
jns
cmp
cmpsb
push
ljmp
lret
imul
mov
push
xchg
pusha
gs
jno
stos
push
jbe
cmp
lock
sub
add
aaa
out
cmpb
enter
jge
pop
sbb
ja
int3
push
add
fildll
dec
push
dec
cltd
and
repnz
and
hlt
in
dec
popf
rcrb
movsb
xchg
push
push
data16
je
jae
das
addl
sub
push
sbb
imul
inc
pop
punpcklwd
fnstsw
sub
push
pop
push
cli
in
sub
or
hlt
dec
jae
std
shrb
repz
rclb
jb
adc
mov
xor
push
arpl
je
ds
push
pushf
push
mov
sub
xchg
jp
push
cwtl
mov
pop
fnstsw
fld1
jnp
dec
imul
movsl
xchg
loopne
xchg
pushf
daa
fiadds
jp
sbbl
mov
in
xchg
or
mov
push
adc
lret
rorl
xchg
mov
xchg
inc
sub
dec
push
icebp
dec
add
shrb
mov
cwtl
xchg
enter
fldln2
pop
push
xlat
mov
ret
smsw
gs
mov
jecxz
sub
mov
push
or
sbb
dec
fs
fistps
inc
fcompl
enter
out
pop
iret
xor
push
cmp
sbb
fimuls
fistpl
jno
push
and
std
xchg
leave
mov
mov
mov
xor
mov
ja
mov
addr16
cmc
rcr
xchg
mov
loopne
fisubl
insb
aaa
ds
jecxz
jg
lea
mov
nop
jge
pop
push
xor
dec
loope
psrlw
pop
inc
das
cmp
mov
or
out
popw
push
dec
insb
sub
push
mov
cmpsl
sbb
decl
das
lea
and
or
mull
movsb
popf
imul
insb
push
pop
adc
jp
dec
hlt
sti
incl
push
sbb
lret
dec
sub
xor
inc
add
adc
bound
push
mov
or
cmp
push
cmp
mov
stos
imul
fdivl
aam
std
rcll
push
arpl
nop
test
popa
sbb
adc
roll
and
inc
jb
in
lret
mov
xchg
pusha
lods
js
mov
sub
dec
add
lds
repz
dec
pushf
popf
xchg
repz
push
push
xchg
lahf
jmp
gs
jge
add
out
adc
popa
lock
and
dec
data16
mov
or
insb
or
inc
imul
sub
cs
fwait
push
adc
and
push
dec
push
dec
pop
add
xchg
mov
ja
mov
cmpl
jg
adc
sub
loop
add
mov
mov
popa
pop
dec
lds
jmp
xchg
jb
aas
hlt
jg
push
or
xchg
iret
xchg
cmc
out
data16
jmp
xchg
mov
testb
add
ja
jge
pop
ret
cli
insl
fsts
push
repz
fucom
mov
push
sarb
mov
mov
mov
xchg
dec
jge
inc
cmp
ljmp
add
xchg
in
add
sbb
push
push
push
and
int
add
jl
into
pop
add
fisttpl
pop
andl
dec
pop
inc
push
hlt
mov
mov
jb
jmp
rorl
jge
pop
shll
dec
test
inc
nop
das
cld
mov
testl
jbe
cmp
pop
jae
cmp
cmc
mov
icebp
dec
inc
rol
rsm
daa
cli
or
cmp
addr16
rcll
out
jnp
pop
push
rorl
mov
mov
shl
mov
sub
test
xchg
ss
adc
scas
mov
mov
pop
lock
pop
sbb
stc
sub
stos
or
dec
and
cmp
push
ds
test
andb
xlat
jns
out
cmpsb
sub
ret
add
jmp
mov
popf
inc
fidivrl
in
ja
in
jne
mov
push
into
sub
sub
jnp
pop
mov
jae
and
bswap
in
addl
mov
jl
int
mov
sub
xchg
jno
fsubrs
xorl
mov
cltd
ja
mov
cmpsb
dec
repnz
push
jmp
insb
xchg
lods
into
inc
and
inc
sub
aas
push
jle
dec
dec
aaa
adc
or
mov
mov
and
ds
sbb
sbb
fsubs
pop
jae
into
jmp
add
sti
xchg
sub
arpl
push
fmulp
test
ss
scas
and
stos
flds
jnp
push
sbb
mov
adc
aas
insb
jo
adc
adc
bound
int
inc
test
sahf
imul
stos
mov
es
sub
jne
jne
jmp
inc
jo
sub
ljmp
out
add
add
push
push
pop
pop
test
lcall
ss
pop
call
sbb
xlat
fcompl
enter
inc
aaa
js
leave
mov
add
hlt
push
insb
fldt
or
jle
cmp
mov
lds
mov
or
mov
xchg
push
mov
das
inc
push
push
vcmptrue_ussd
xor
jl
inc
stos
fwait
sbb
inc
inc
sarb
cld
into
enter
push
xchg
fidivl
mov
jp
jns
dec
mov
pop
adcb
jge
int3
stos
stos
push
sub
mov
mov
clc
test
enter
loop
or
and
adc
ljmp
arpl
testl
rep
lahf
mov
adc
sub
lock
inc
sti
int
xchg
sub
out
in
sub
rcrb
sub
sar
stos
inc
or
pop
lahf
movsb
stos
aaa
xor
addb
sbb
bound
xor
sahf
xor
add
addl
divb
lahf
andl
fimuls
test
sbb
shl
inc
xor
insb
stos
inc
inc
or
stos
cmp
repz
jnp
and
mov
leave
imul
add
data16
add
das
mov
mov
sbb
jbe
pop
dec
test
sarl
sbb
jbe
aam
scas
jl
cmp
pop
push
in
mov
cltd
mov
mov
int3
adc
jge
xchg
frstor
lods
shll
lret
dec
cmp
and
xor
orb
dec
in
inc
cwtl
push
mov
jbe
inc
fidivl
cmp
cmp
push
cmp
subl
dec
loop
push
sub
cmc
data16
js
inc
pop
sub
iret
pop
mov
jo
arpl
cmp
dec
movb
mov
lea
ss
ja
jg
clc
sbb
imull
aaa
sbb
pusha
enter
es
outsb
and
loopne
adc
jmp
mov
shrb
iret
mov
dec
rorb
out
cli
sub
adc
pop
gs
sti
lret
mov
lahf
std
xor
mov
lret
cmp
int
outsl
jg
in
jl
adc
insb
cmc
push
out
movsl
lods
in
adc
and
mov
out
mov
sub
fists
imul
lcall
arpl
pushf
sub
aas
call
sbbb
into
pop
dec
fmuls
xchg
push
in
sti
es
inc
lcall
dec
xchg
push
jnp
jmp
push
push
aas
int3
jmp
mov
jg
dec
imul
and
dec
mov
fcoms
push
in
aad
jno
adc
cmpsl
cmp
cmp
adc
and
sarb
cwtl
scas
repz
adc
dec
sub
cmp
sbb
sbb
gs
add
xchg
scas
mov
mov
pop
push
add
mov
push
pop
inc
cmpsb
fldt
push
jg
adc
jne
sub
rolb
mov
loopne
outsb
ds
push
lods
mov
leave
negb
inc
inc
adc
jmp
push
dec
pop
and
inc
scas
jmp
jb
ja
push
out
fwait
test
scas
pop
dec
dec
add
rcr
mov
mov
xchg
dec
repz
fistps
adc
decl
int3
sbb
fisubrs
hlt
push
scas
sbb
popa
fs
imul
in
push
gs
xor
jmp
inc
fidivl
in
mov
arpl
sbb
shr
pop
popa
cltd
aas
testb
mov
push
jbe
jae
pop
xchg
mov
cs
jmp
aaa
cltd
jo
dec
inc
xor
loope
or
sub
adc
cmp
dec
es
cltd
gs
mov
sub
adc
scas
into
push
popf
xor
pop
popa
movsl
and
pop
leave
gs
int
add
sti
out
add
aad
dec
sahf
fwait
jae
push
push
adc
xor
dec
pop
mov
mov
cmp
nop
xor
arpl
aad
push
push
fstl
daa
add
addr16
pop
fsubl
in
jmp
btr
dec
jb
cld
push
fs
and
sub
cs
enter
js
jecxz
sub
mov
leave
cltd
adc
out
in
add
cltd
adc
add
jno
push
clc
and
sahf
ljmp
xchg
cmpl
sahf
dec
enter
and
insb
sti
xchg
xlat
jae
dec
aaa
cmp
xchg
xchg
mov
mov
into
ss
jnp
mov
pop
mov
lret
push
xor
sti
dec
lds
lea
arpl
jbe
xchg
dec
mov
push
sub
push
icebp
jb
cmp
jl
popa
aad
jmp
sbb
dec
lahf
mov
and
daa
loope
lds
xchg
or
adc
xor
pop
fwait
rol
das
neg
out
clc
add
sub
movsb
in
pop
mov
popa
mov
add
fs
dec
ljmp
xchg
daa
repz
xchg
xchg
out
inc
inc
cli
xchg
adc
lahf
and
adc
in
jbe
lret
inc
aaa
push
movsb
sbb
add
sbb
insl
jae
andb
cmpsb
cmp
add
mov
adc
pushf
xlat
jmp
out
inc
setge
dec
out
jbe
pop
test
decl
ljmp
loope
mov
cltd
push
mov
jmp
jbe
lcall
popf
mov
push
into
fistl
cltd
addr16
cwtl
xchg
shr
inc
lea
repz
nop
push
packssdw
clc
jb
add
push
movsl
jno
xchg
mov
test
es
test
ja
sti
jle
xchg
ss
inc
dec
mov
adc
push
inc
pushl
jle
inc
sbb
fabs
ja
adc
push
and
push
add
sbb
cwtl
out
int
pusha
jge
push
inc
loopne
sahf
cs
rcrb
inc
add
dec
push
sub
pop
faddp
mov
fcmovu
or
cltd
insl
loopne
push
add
mov
rolb
lret
or
lahf
cmp
inc
test
sub
lret
pop
jl
sbb
inc
ret
pusha
push
icebp
add
inc
ficompl
int
jmp
push
and
inc
xchg
adc
cmp
jmp
loope
sub
adc
pop
pusha
dec
push
mov
int
out
mov
mov
mov
insb
cmp
cmpsl
sti
mov
add
loopne
push
cmpsl
or
cs
nop
orl
mov
mul
imul
shr
bound
pop
sbb
pop
test
xchg
inc
or
out
push
hlt
dec
mov
fs
jb
sbb
sbb
insl
movsl
push
insb
into
push
ja
test
lcall
pop
les
into
xchg
fsubrs
push
rcrb
pop
imull
and
dec
cmc
push
sbb
dec
sbb
adc
mov
sbb
xor
test
fcmovnb
or
mov
push
sub
popa
icebp
into
popf
test
sbb
shr
mov
inc
jp
xchg
lahf
jno
dec
pop
adc
cmpsb
jp
mov
data16
dec
adcb
scas
and
lods
test
and
jmp
ljmp
adc
jo
roll
inc
dec
jle
call
sbb
pop
add
xchg
xor
pop
std
fisubl
int3
xlat
mov
push
adc
sub
dec
incb
xor
xorb
mov
add
xchg
js
mov
ss
xchg
xor
popa
bound
dec
cmp
cli
or
fcomps
mov
xchg
sub
in
int
mov
or
dec
leave
cmp
xchg
and
ret
lods
lock
cmp
outsb
lods
in
in
ror
insl
out
cmp
nop
pushf
mov
dec
mov
push
and
dec
scas
jg
scas
gs
stos
adc
jae
mov
ret
fwait
mov
cmp
das
bound
mov
js
imul
movsl
mov
enter
xor
xchg
or
cmp
cwtl
movsl
cmpsb
mov
in
adc
decb
jb
mov
xchg
mov
xchg
daa
and
insb
lods
fdivrs
xchg
out
rorl
ss
mov
incl
fistpl
imul
mov
popa
movsl
test
push
jns
or
xchg
pop
add
and
xlat
out
das
idivl
pop
fdivrs
jge
cli
sub
inc
outsb
push
sbb
sub
in
jbe
out
repz
xor
cmp
jge
stos
shrb
mov
or
inc
into
jne
or
int3
pushf
into
push
mov
popa
je
lock
xchg
data16
das
test
fiadds
xor
push
fcompl
loopne
push
xchg
jecxz
out
and
mov
std
in
and
sbb
cmpsb
stc
dec
movb
sti
sbbl
popf
aaa
xchg
pop
iret
out
sub
mov
lret
call
and
nop
daa
mov
push
cmp
cli
inc
cld
xchg
enter
mov
rcll
loope
mov
mov
scas
lods
divb
pushf
das
inc
in
adc
sbb
cld
cltd
dec
push
mov
push
cwtl
lods
fcompl
sub
or
pop
push
nop
int
fnstenv
xor
xchg
gs
mov
jne
movsl
aaa
in
add
mov
lahf
inc
sub
and
lahf
mov
add
ds
incb
insb
jae
and
out
and
mov
lods
je
fbstp
push
sti
cmp
sbb
jle
call
mov
leave
fcmovnbe
lret
mov
addr16
pop
popf
or
adc
repz
cmp
xor
andl
fstps
mov
mov
sbb
daa
xorl
loop,pt
mov
sbb
mov
xor
dec
xor
imul
pop
dec
sub
inc
std
cmp
xchg
lods
lea
cmp
stc
mov
cmpsb
mov
out
dec
jb
movsb
dec
into
sbb
jo
and
cmp
jecxz
jb
mov
adc
sbb
sub
ss
inc
es
lods
dec
aaa
insl
mov
pop
push
push
dec
xchg
cmpsl
lods
out
test
ret
loope
xchg
movsb
and
jecxz
push
mov
js
jl
lods
loope
and
pop
add
mov
mov
inc
xchg
arpl
fwait
jno
or
test
push
jl
mov
rorb
cmp
cmpsb
adc
pop
cmp
xchg
adc
jno
mov
mov
inc
in
xchg
hlt
push
pop
cltd
mov
fwait
leave
jmp
lea
ss
jecxz
cmp
ret
faddl
inc
adc
sbb
int3
mov
dec
inc
repnz
sbb
cmp
inc
cld
mov
gs
adc
ja
lods
mov
pop
repnz
movsb
pop
and
lcall
push
sub
dec
enter
cli
jg
jge
adc
mov
out
int
data16
iret
cmpsb
jnp
stos
mov
loop
jne
jbe
insb
cmp
into
leave
inc
in
ja
imul
outsl
pop
lods
jns
ss
push
mov
jne
fistpl
jnp
cmp
jp,pt
push
out
cmpsb
lahf
add
jnp
dec
daa
pushf
rclb
fst
xor
bound
or
mov
rolb
jno
mov
push
sub
mov
pusha
lods
shrl
std
xchg
cltd
lahf
add
inc
push
loope
ja
cmp
xor
enter
cmp
mov
xchg
inc
push
test
pusha
lods
in
iret
mov
or
mov
daa
cld
addr16
push
ss
aam
in
sbb
mov
dec
cli
popa
and
divb
clc
jo
sub
lods
pop
push
cmp
arpl
data16
das
sub
stos
dec
les
jb
xchg
cmpl
sbb
cmp
lods
xor
dec
add
in
hlt
jl
adc
inc
int
xlat
aad
pop
daa
lods
xlat
xchg
sbb
sarb
push
pop
mov
sbbl
sbb
mov
loope
ljmp
adc
addr16
mov
mov
or
pop
pop
pop
push
push
call
pop
jns
sub
icebp
pop
movsb
push
in
nop
sarb
add
add
test
dec
jne
sub
fists
jl
dec
jnp
enter
xchg
mov
gs
jae
pop
adc
inc
cmpsb
mov
inc
aad
xchg
push
lret
cmp
inc
cmp
inc
je
push
inc
push
pop
jnp
sub
sub
or
pusha
mov
sub
cmp
xor
sub
cld
loope
popa
cwtl
sbb
push
xchg
lods
sbb
sbb
ja
ss
inc
xchg
pop
pop
mov
negl
mov
out
mov
push
cmpsb
mov
repz
popf
dec
enter
js
mov
and
jnp,pt
cmpsl
sbb
inc
or
xchg
loop
hlt
scas
jne
ror
xor
xor
mov
outsb
cs
sti
add
test
and
test
inc
mov
inc
mov
lds
test
lahf
notl
jno
pop
cmpsl
mov
jns
insl
out
push
mov
iret
jb
std
cmp
ret
mov
addb
leave
jp
mov
adc
cmpsl
sub
sti
adc
and
xchg
push
rorb
pop
and
sub
xor
sbb
push
out
out
arpl
adc
xorb
popl
dec
add
mov
rcrb
and
push
dec
push
cmpsb
adc
scas
inc
lret
bound
inc
xchg
outsb
push
in
scas
add
loope
das
pop
add
inc
aas
out
cltd
inc
sub
shrl
inc
scas
jmp
mov
sbb
ds
inc
pop
sahf
lret
push
movsl
pop
decb
ror
pop
mov
aaa
jno
adc
imul
push
aad
jle
xor
aad
cmp
or
addl
loope
jmp
pop
fwait
sbb
out
in
xor
mov
loopne
xchg
sarl
add
arpl
iret
jae
ljmp
out
mov
adc
dec
push
mov
xchg
add
stos
sbb
xchg
lea
bound
inc
lods
cs
pusha
sub
mov
xchg
sub
scas
or
jno
xchg
bound
xchg
dec
or
cmc
pop
stos
mov
movlps
mov
test
mov
inc
popf
xor
fs
sub
adc
mull
mov
stc
cmp
and
add
outsl
pop
insb
pop
cmp
cmpl
outsb
push
icebp
sahf
aaa
stc
idiv
and
ret
lcall
out
pop
mov
ret
outsb
inc
mov
lods
insl
out
out
lcall
cmp
movsl
mov
mov
add
jle
jb
mov
mov
xor
cmp
jmp
loop
mov
data16
or
shll
mov
sub
sbb
pop
mov
push
inc
pusha
cmpsb
stos
or
lret
jns
scas
jno
or
std
xchg
shrb
add
mov
sbb
push
jns
mov
xor
rcl
jge
fdivl
inc
lret
scas
outsl
add
jo
movsb
test
shlb
push
call
cmp
data16
sub
add
sbb
mov
lock
or
insl
pop
out
sbb
jg
inc
xor
cmp
stc
mov
cmc
xchg
je
sub
ja
pop
jb
arpl
daa
xchg
fisubl
jg
mov
add
mov
pop
and
fcoml
dec
fwait
test
xor
je
xchg
adc
pop
imul
jo
and
jae
hlt
mov
fisttpl
mov
imul
push
inc
mov
sub
adc
insl
push
and
dec
es
mov
pop
cmp
mov
out
cs
sbb
scas
xchg
mov
add
test
pop
cmp
outsb
pop
outsb
test
mov
dec
mov
pusha
inc
jecxz
ljmp
dec
stos
shlb
xchg
mov
popa
fcomi
mov
jbe
test
cmpsb
dec
insl
sahf
xor
movsl
mov
mov
aad
cmp
mov
mov
sub
lcall
dec
movsb
xor
stos
pop
ja
dec
out
roll
aam
push
scas
cmp
push
mov
jnp
int
cmpb
push
or
mov
dec
lods
add
cld
lret
mov
sbb
les
push
dec
push
js
cmpsb
fdivs
in
add
test
lahf
mov
pop
lea
lret
repnz
and
fildll
xchg
outsl
add
jno
imul
push
mov
push
hlt
xor
xorl
cmpsl
cmp
sbb
fsubr
insb
or
jmp
fildl
cmp
xor
incl
jge
pop
es
or
lock
hlt
cmpsb
ja
mov
xor
jb
popf
mov
jbe
jl
mov
or
mov
cs
pop
popa
stc
int
xchg
xchg
aam
mov
popa
dec
cmc
scas
into
xchg
or
out
pop
test
xchg
or
inc
mov
loop
xchg
cs
jecxz
inc
adc
or
mov
add
jnp
adc
adc
push
test
push
loope
xchg
jmp
ljmp
dec
jle
cmpsl
xchg
popf
in
xchg
xchg
int
enter
icebp
mov
dec
notb
aad
inc
jbe
ret
or
pop
mov
dec
push
scas
jge
dec
fadds
daa
add
fnsave
iret
mov
push
in
sbb
add
dec
movsl
ja
push
iret
out
mov
mov
or
sbb
push
add
clc
arpl
jl
js
xchg
iret
movsl
jne
fstpl
inc
enter
xchg
stos
outsb
mov
xchg
nop
cmp
or
sbbl
inc
mov
mov
repnz
int3
sahf
popl
adc
sub
jno
push
jb
xor
inc
or
mov
imul
add
sub
mov
cwtl
shl
and
je
mov
jne
pop
fcmovu
fistpl
fldenv
loope
jno
je
ret
insb
ror
sti
pop
lahf
fsubr
pop
stos
sub
aad
add
push
xchg
mov
inc
xchg
enter
mov
add
xchg
add
jecxz
pop
test
stc
ss
test
lock
std
dec
shl
mov
pop
cmp
dec
repz
sbb
add
out
xor
leave
les
xor
fimuls
and
pop
fs
lods
adc
or
lods
jns
sar
jno
insb
mov
push
cmp
jmp
loopne
inc
insb
pop
xchg
xchg
outsb
aaa
pusha
dec
jle
call
out
xchg
mov
mov
out
fwait
std
lret
fucomip
mov
pop
xor
mov
clc
test
push
ret
jo
xchg
adc
jns
push
and
mov
test
and
push
out
jns
cmp
mov
in
pop
push
insl
call
add
sahf
dec
sbb
mov
add
fimull
nop
shrl
addb
and
adcb
jo
arpl
mov
mov
cmc
cmpsl
in
pop
or
shlb
or
mov
repnz
add
fcmovnbe
clc
fisttpll
je
in
push
mov
adc
testb
push
out
xchg
inc
repnz
es
jo
dec
mov
add
rclb
mov
add
or
sbb
sbb
push
mov
fs
loope
and
stos
out
std
les
std
fsts
and
in
add
xchg
test
enter
or
scas
jp
in
mov
xlat
or
hlt
iret
inc
and
roll
shrb
jl
js
pop
test
xor
pop
test
jmp
aam
pop
gs
sbb
pop
aas
hlt
sub
sahf
pop
xchg
cmp
outsb
inc
push
scas
test
and
cmc
push
fimuls
cli
addl
sbb
push
lahf
push
lods
mov
jo
mov
imul
insb
add
adc
jae
mov
cmp
jg
dec
ret
pushf
orb
bound
add
xor
and
lea
shl
out
dec
mov
ljmp
or
dec
mov
popa
movsb
mov
and
lcall
inc
fsubs
dec
lods
mov
and
ds
xor
and
mov
jns
push
inc
outsb
rcrb
inc
gs
int
mov
dec
or
mov
pop
cmp
mov
inc
in
inc
or
mov
stc
js
sbb
adc
cmp
daa
and
andb
clc
mov
andl
jl
fisubrl
inc
imul
jp
adc
xchg
dec
push
cmpsl
and
pop
lahf
rorb
ja
dec
loopne
mov
sarl
xor
add
stos
jae
inc
sub
fldl
ja
jp
fwait
shll
cltd
rorb
and
adc
repnz
xor
xchg
in
mov
sub
rcr
xor
add
mov
in
and
xor
pusha
add
mov
sub
cmp
mov
fcoml
push
in
cmpsl
fists
addr16
jl
xchg
xor
adc
mov
mov
outsl
fdivr
icebp
xor
ds
ficomps
and
aad
push
mov
sbb
rorb
xor
mov
scas
in
dec
cmp
mov
dec
ret
mov
mov
xchg
test
out
jb
and
outsb
das
clc
or
adc
mov
movsl
jb
das
jle
pusha
icebp
mov
data16
dec
and
adc
jp
test
movsb
mov
xchg
ja
dec
mov
vminps
in
nop
mov
lods
je
xchg
inc
jns
icebp
loope
mov
mov
mov
sub
cwtl
add
adc
pop
ds
push
pop
popa
jae
insl
js
xlat
movsb
movl
loope
daa
rclb
jne
mov
inc
js
cmpsb
call
cltd
fs
dec
cmp
xor
ljmp
fsubl
lahf
das
xor
mov
sbb
push
aad
pop
mov
xor
add
xchg
xor
mov
js
lds
ja
loop
faddl
sub
gs
sbb
dec
int3
add
add
add
inc
push
fcompl
mov
enter
dec
push
add
aam
push
cmp
inc
fadd
and
or
jns
std
push
call
push
pop
xlat
mov
push
sbb
rclb
cli
push
psrlq
out
leave
in
out
fwait
mov
shll
xchg
divl
fistpl
cmp
jp
in
cmc
nop
cmp
dec
dec
push
mov
mov
sub
mov
test
pop
dec
adc
movsl
mov
loop
jecxz
jp
notl
loope
cmp
dec
in
and
sahf
or
add
pop
pop
pop
inc
pop
sbb
jg
sti
shlb
push
cmp
xor
and
jge
mov
sbb
xchg
mov
and
jp
mov
ja
jae
adc
mov
and
xor
lock
fdivs
int
gs
mov
jl
dec
push
or
inc
push
sub
inc
xor
jmp
mov
enter
inc
dec
shlb
mov
push
out
es
dec
shlb
out
push
rorl
mov
jmp
mull
jb
incl
mov
fwait
subb
lcall
xchg
pushl
sub
lret
cmp
sbb
das
stc
aaa
gs
andl
fisubs
lcall
mov
sbb
xor
jle
sub
in
and
dec
push
jnp
lcall
mov
adc
jecxz
cmp
push
imul
mov
insb
cs
jl
test
push
xchg
mov
mov
inc
mov
or
ret
add
and
lret
inc
mov
in
mov
std
or
in
addr16
xchg
call
aas
outsl
cwtl
mov
gs
sub
mov
jge
loopne
mov
enter
inc
repz
mov
or
pop
jne
sti
or
rclb
testb
incb
push
xor
or
mov
add
pop
leave
outsb
sbb
imul
outsl
pop
pop
fdivrl
out
pop
pop
add
dec
pop
cmp
in
out
fildll
decb
stos
mov
imul
repnz
fsubrl
jp
test
orb
jge
cmp
push
jbe
pushf
stc
out
pop
lret
or
or
cmp
pop
stc
cmpsb
iret
cli
push
xor
xchg
stc
repz
lods
mov
pop
cmpsb
insb
cmp
inc
inc
inc
push
repnz
out
and
sub
adc
pop
sub
ljmp
and
scas
or
dec
push
sub
ret
mov
fildl
push
xchg
xlat
push
push
xor
lret
ja
cmpsb
lods
push
sbb
pop
pop
negl
outsl
sarl
js
cmp
lods
mov
sbb
mov
inc
mulb
out
sub
ljmp
rcrb
jmp
xchg
add
in
ljmp
sub
xchg
inc
aad
das
xchg
mov
lahf
cwtl
pushf
mov
inc
jae
xchg
xchg
fcompl
push
ret
sahf
pop
mov
sbb
xor
adc
jmp
fsubp
push
xchg
repz
fdivrl
mov
pop
inc
mov
sub
mov
jecxz
push
mov
xchg
enter
cltd
xchg
sbb
les
jg
mov
dec
add
out
adc
popf
xor
movsb
fsubrl
jo
int
lret
sahf
mov
stc
cmp
jle
or
jmp
jno
stos
lds
xchg
cmp
jl
xchg
popa
in
inc
mov
push
decl
cld
xchg
mov
repnz
std
push
popa
adc
in
inc
lret
jecxz
ja
jno
fbstp
idiv
xchg
and
pushf
inc
sbb
les
and
adc
inc
mov
movsl
add
xchg
cs
scas
mov
movsl
add
mov
pop
cmpsb
test
fistl
in
xor
pusha
xchg
fbstp
jecxz
jnp
gs
inc
mov
jo
inc
xchg
popf
pop
sub
aad
pop
outsl
fdivrl
adc
mov
cwtl
mov
inc
xchg
shll
aam
cli
dec
mov
leave
xchg
je
push
pop
call
fwait
and
xor
std
jno
sbb
or
add
xlat
and
xchg
mov
lcall
push
inc
sub
scas
dec
fs
jae
cwtl
mov
out
push
inc
dec
mov
sbb
in
or
mov
or
or
aam
adc
fucompp
fldt
stc
sbb
call
or
dec
out
mov
leave
fstp
sahf
int
sbb
jmp
aaa
rcll
mov
repz
jb
or
mov
pop
pop
xchg
xor
je
mov
aaa
pop
in
mov
ljmp
sbb
sbb
ljmp
jmp
pop
dec
fldl
push
or
sbb
sub
mov
inc
sbb
xchg
xor
pushf
jno
dec
sbbl
mov
mov
jnp
js
bound
mov
sbb
push
mov
xor
shl
push
fldt
push
jecxz
mov
add
push
xchg
ds
xchg
sbbl
xlat
lds
mov
out
and
push
mov
std
mov
out
fcmovbe
inc
stos
sub
outsb
mov
and
mov
nop
adc
ss
lahf
xor
addr16
js
out
shrb
sbb
push
sbb
dec
xchg
cmpsb
mov
jae
cwtl
jno
xchg
cmp
mov
loope
clc
gs
fmul
jmp
scas
xchg
fadd
stos
and
xor
push
pop
add
aad
in
dec
pop
jmp
pop
out
mov
mov
push
mov
jecxz
fists
test
ud2
adc
std
dec
insb
clc
movsb
xchg
mov
cmpb
add
mov
push
mov
ljmp
sub
cs
or
daa
jno
adc
mov
xchg
cmc
and
or
xor
lahf
inc
fsubrl
add
mov
jnp
jmp
clc
cmpsb
mov
arpl
jg
out
add
add
xor
sbb
xchg
jg
inc
scas
dec
push
xor
shll
insb
pop
popf
insb
push
mov
mov
mov
out
cltd
mov
inc
push
mov
mov
sbb
fdivrs
inc
cmp
jae
adc
push
add
dec
inc
jmp
lock
aaa
push
aam
cmc
or
inc
sub
fs
mov
aad
loopne
or
dec
ret
imul
bound
int
and
pop
aas
decb
out
in
cmp
inc
dec
lahf
and
adc
pop
int
ljmp
pop
mov
push
test
pop
and
adc
insb
pop
decl
imul
cltd
xor
push
inc
notl
pop
imul
cs
testl
aas
nop
jmp
ljmp
scas
xchg
ss
xor
sub
sti
nop
xchg
mov
pop
repz
cmc
push
shll
mov
push
and
loop
xor
out
outsb
mov
add
scas
int
xchg
xchg
cmp
fcompl
ljmp
pusha
aam
loope
gs
mov
adc
sbbb
push
xor
sub
push
cmpsl
stos
push
mov
add
pop
out
adc
sub
xchg
pop
mov
push
mov
into
push
mov
mov
mov
pop
mov
lods
ss
jle
sbbb
dec
mov
test
lret
cmpsb
insl
cmp
outsl
test
or
ret
jne
xor
xchg
dec
jae
in
add
push
pop
inc
mov
xor
sti
pusha
int
out
js
xchg
jmp
pop
scas
sub
push
cmc
scas
subl
pop
test
cmc
mov
jne
inc
xor
shll
mov
jno
mov
sbb
xor
das
push
xor
scas
dec
mov
dec
pushf
mov
inc
jb
ja
mov
pop
ret
les
xor
insl
mov
xchg
mov
sub
or
mov
sbb
js
xor
in
fwait
push
pop
push
and
stos
ljmp
cmp
xor
lock
clc
stc
xor
clc
add
in
insl
ljmp
xchg
xchg
xor
lahf
shr
add
testl
push
fbstp
mov
jno
test
sub
adc
cltd
lea
jg
in
rcrb
aad
dec
or
movsl
movsb
ja
mov
mov
inc
jns
pop
xchg
sub
cli
repz
ret
mov
cmpsl
call
push
adc
into
out
cmp
xchg
cld
aam
mov
popf
test
pop
mov
mov
jne
mov
mov
movsl
fnsetpm(287
adc
mov
add
add
sub
jmp
xor
xchg
or
ret
in
insb
inc
das
test
sbb
inc
sbb
mov
mov
xchg
rolw
jle
cwtl
popa
xchg
push
les
repnz
fwait
push
imul
or
dec
stos
push
aam
shll
inc
leave
jmp
adc
lods
jbe
fwait
int3
lret
cmp
push
repnz
pop
dec
mov
jge
pminsw
add
ss
mov
pop
pushf
pop
ja
cmp
popf
mov
push
fisubs
test
or
xchg
push
les
setnp
or
popf
mov
mov
scas
das
push
jge
and
testl
push
sbb
add
push
lahf
adc
jae
add
icebp
out
push
jg
mov
push
jne
rol
mov
sbb
into
mov
lods
inc
pop
iret
adc
cmp
data16
and
addr16
iret
mov
xor
loopne
jb
lret
cltd
and
xchg
xor
gs
scas
cmpsb
sbb
xor
das
sarl
sub
sbb
mov
lahf
cmp
fdiv
loope
pop
jmp
pop
cmp
jl
test
sub
and
in
xor
lcall
loope
sub
and
cmp
hlt
dec
mov
or
xor
sub
loopne
fistps
cmc
aaa
jl
xchg
xchg
das
inc
sbb
jno
inc
adc
or
cmp
dec
adc
insb
jge
nop
dec
sbb
add
outsl
mov
mov
xchg
mov
adc
in
outsl
fldcw
mov
out
xchg
fcomp
bnd
call
jne
dec
and
pop
push
stc
xor
in
cmp
iret
ja
jecxz
rolb
push
push
test
mov
lds
xor
cmp
xchg
popa
hlt
jle
push
mov
stos
test
add
mov
cmc
or
jb
sbb
dec
cld
bound
shl
jae
ss
out
and
or
inc
cmp
xchg
fbld
bound
nop
insl
adc
xor
aad
mov
or
pop
bound
or
scas
cli
inc
call
mov
lock
push
cmp
xor
push
push
push
shll
sub
repnz
pusha
lods
cmp
and
adc
jg
test
fisttpl
cmp
pop
inc
push
dec
xchg
jecxz
push
pusha
bound
pop
mov
jns
scas
jne
ss
push
aam
int3
scas
pushf
and
xchg
sbb
fistpl
fdiv
in
xor
cmp
mov
pop
mov
andl
mov
push
xchg
xor
inc
stos
jecxz
add
cwtl
shll
add
lahf
into
cmp
lods
jnp
pop
push
jnp
xchg
aad
pop
mov
fwait
mov
in
mov
stos
lcall
test
mov
push
jb
cmp
mov
push
gs
add
inc
mov
pop
in
js
jl
out
fs
sbb
mov
xchg
insb
adc
sub
or
loop
inc
push
add
subb
cltd
add
inc
mov
xchg
or
subl
inc
inc
mov
in
sub
and
stos
in
aaa
movsb
mov
in
mov
fldl
xlat
icebp
ret
mov
push
mov
jnp
and
stos
sti
sub
xchg
dec
push
xchg
mov
outsb
fistps
faddp
ficoml
cmp
mov
ljmp
ficoms
mov
push
inc
add
xchg
cwtl
cmp
arpl
lds
test
cmp
orb
inc
pop
inc
mov
imul
inc
push
sub
jne
sbb
dec
divl
lea
loope
mov
outsb
jbe
cmpsl
scas
outsb
inc
jp
in
gs
cli
pop
push
jo
rclb
dec
and
or
aas
pop
lock
lcall
push
enter
xor
lcall
sbb
xor
aas
jmp
mov
insl
fistpll
es
push
ret
sbb
sbb
lea
and
sbb
pop
rcl
lock
xlat
cmc
insb
sub
rcr
cli
cs
test
stc
mov
cwtl
sti
pop
adc
aam
mov
stos
sub
sbb
jb
hlt
sbbl
pop
das
fsubl
aad
and
rclb
bound
gs
gs
or
repnz
inc
ffree
mov
jne
cmpsl
into
mov
inc
sbb
lahf
gs
andl
mov
cmp
fbld
in
out
stc
lods
insl
or
jns
dec
mov
mov
xor
push
sbb
inc
in
clc
xchg
frstor
and
xorl
push
outsb
pop
les
add
jne
xlat
adc
repnz
out
lret
lods
push
int3
xor
lock
test
add
cmp
inc
mov
in
pop
nopl
xchg
push
filds
push
cmpsb
pop
sahf
or
std
enter
mov
sub
add
pop
pop
add
mov
in
test
notb
jmp
mov
push
adc
mov
xchg
in
outsb
and
leave
xchg
cmp
ss
pop
loope
mov
or
rcrb
lock
push
or
mov
mov
mov
shl
push
aaa
push
hlt
mov
jb
pop
mov
mov
sub
mov
dec
stc
and
push
dec
popf
push
lret
sar
adc
out
adc
dec
lds
jle
das
jg
data16
and
and
mov
push
inc
cwtl
sbb
lret
mov
add
movsb
push
mov
mov
inc
mov
andb
jecxz
pushf
out
add
les
aam
xchg
jbe
and
jmp
lods
int
mov
or
je
pop
int3
rol
movsb
cmp
jmp
out
adc
jo
sahf
push
inc
jp
pop
or
iret
pop
sub
and
aaa
imul
lock
lret
rcrl
stos
mov
sub
loop
fstl
push
lcall
mov
clc
loope
sbb
xorb
and
fistps
and
jle
cmp
arpl
inc
or
mov
cwtl
lds
ret
pop
xchg
lock
xchg
sub
cld
mov
cmp
or
adc
fdiv
aaa
insl
lods
pcmpgtb
test
dec
std
bound
jnp
movsl
or
mov
pop
inc
rorb
sahf
jnp
negb
push
rorb
push
inc
fwait
or
mov
pop
push
push
cltd
xchg
jg
scas
inc
push
aad
add
call
incb
out
nop
jl
popf
imul
stc
rcr
mov
stos
push
dec
sbb
adc
xor
xchg
jge
xchg
lret
aad
stc
ss
jb
test
jae
fwait
clc
jle
insb
addr16
das
cmc
cmp
jge
lcall
xor
cmp
jmp
iret
mov
push
and
iret
pop
cmp
sub
lahf
test
mov
pop
push
test
xchg
aad
mov
js
cmp
push
in
sub
stc
inc
clc
jnp
inc
sahf
add
test
outsb
mov
cltd
adc
mov
mov
lds
jne
fsubl
fcom
cmp
test
cli
sub
insl
push
pop
adc
ret
stos
xor
push
insl
es
mov
cmpsb
loopne
iret
ljmp
outsl
in
push
mov
sub
adc
mov
and
jle
icebp
ret
or
inc
imul
test
jo
pusha
sub
neg
ljmp
inc
dec
sub
lods
push
jmp
in
pop
stos
fisubrl
pop
sub
out
call
inc
int3
adc
add
inc
negl
cltd
scas
pop
jae
inc
test
dec
push
inc
fstp
enter
in
fisttpll
in
aaa
dec
pop
mov
inc
in
stos
xchg
leave
cmp
add
insl
loope
cmpsl
dec
and
fdiv
pop
sub
push
bound
push
sub
mov
stos
dec
mov
dec
adc
ret
adc
fldt
pop
mov
sub
pop
jbe
loope
mov
sti
leave
sarb
mov
mov
push
lods
xorb
fs
push
pushl
pop
xchg
shl
inc
fidivrl
push
sub
rclb
test
mov
bound
aad
ret
push
mov
mov
inc
ja
ja
pop
loope
scas
mov
cmp
xor
std
cmp
iret
push
add
mov
fcompl
or
cmp
imul
test
scas
outsl
ds
push
out
cwtl
jmp
jae
and
je
jl
pop
cmp
xchg
cld
nop
ja
lret
out
int
enter
data16
das
scas
daa
in
inc
push
jp
sbb
aam
loop
pop
push
stos
push
adc
jmp
cmp
mov
enter
dec
fsubs
sbb
jno
fwait
mov
decl
loope
dec
xchg
mov
mov
and
push
mov
pop
call
xor
inc
dec
cs
sub
add
ud0
mov
lea
dec
xor
or
inc
movsl
dec
pop
cmp
in
xchg
or
inc
repnz
push
or
adc
fisubs
or
push
fs
test
je
outsb
repz
imul
pop
xchg
or
mov
addr16
jl
push
pop
and
leave
pushl
add
fcmovu
ror
rorl
mov
sarb
jb
pop
mov
adc
mov
movsl
jmp
xchg
int
imul
pushf
xchg
mov
add
in
xor
jge
or
add
xchg
gs
fsubr
das
add
pop
adc
ja
jp
xor
test
sbb
lock
mov
and
fs
iret
jo
daa
popf
repnz
rorb
lods
mov
pop
cmc
imul
mov
lahf
jmp
jno
mov
out
fmull
mov
arpl
mulb
out
inc
pop
in
jo
dec
sbb
sarb
push
inc
pop
fsubl
iret
repnz
sbb
inc
cli
jg
stos
jns
movsl
and
sub
mov
add
add
jae
pop
gs
pushf
jg
incl
lods
popa
pop
lods
aas
les
xlat
mov
out
dec
loope
push
or
ja
outsb
test
jg
lcall
cmpsl
mov
fldl
pop
lds
cmp
lds
leave
out
call
test
push
out
mov
scas
cld
cmpsl
lea
int
add
outsb
and
cmpsl
inc
jne
jo
int
data16
icebp
jl
out
imul
pop
je
rcrl
in
gs
add
orb
or
jb
mov
pop
aaa
and
rclb
sahf
push
stc
lods
inc
jecxz
cwtl
cwtl
arpl
jo
stos
insb
int3
sub
outsl
jbe
loopne
cltd
movsb
pop
pop
push
popa
test
ret
in
cmp
movsl
cld
mov
inc
and
rcrl
push
or
fbld
dec
sbb
and
push
in
shl
and
les
andl
mov
rcrb
xchg
add
jecxz
inc
scas
test
lds
and
and
jle
jmp
cltd
pop
hlt
jne
cwtl
fs
mov
or
mov
cmp
dec
sub
xor
in
enter
lret
sub
roll
outsb
or
ja
and
ja
in
ret
arpl
cld
inc
sbb
mov
mov
dec
sbb
div
xchg
jns
pushf
inc
pop
pop
repnz
shll
or
inc
cmpsb
and
mov
adc
mov
dec
sub
popa
repnz
ret
mov
and
fidivrl
or
mov
pop
fwait
jg
mov
imul
mov
fwait
shr
pop
call
mov
adc
mov
mov
rorl
sbb
ljmp
mov
or
dec
imul
and
cwtl
pop
sbb
jmp
fcomps
nop
jmp
sub
mov
xchg
adc
xor
push
inc
adc
loop
xchg
pusha
mov
xchg
add
sarl
inc
or
and
dec
or
mov
add
in
and
xor
in
in
mov
adc
add
mov
push
sbb
and
jmp
lock
xchg
pop
aas
lret
push
push
jmp
push
cmp
push
cmp
out
push
sub
nop
cld
mov
popa
pop
xlat
ds
lahf
cltd
aaa
andb
pop
out
scas
aas
pop
push
cli
subl
xchg
rolb
popf
cmp
xor
sub
sbb
push
iret
lcall
jnp
movsl
adc
adc
stos
push
out
addb
mov
xchg
stos
dec
lret
stos
out
dec
xor
mov
int
ja
and
jb
ret
inc
pop
xchg
std
pop
outsb
pop
jecxz
cmpsb
test
ds
jne
repnz
xchg
jg
dec
cmpl
sbb
mov
lea
mov
sbb
lret
add
inc
jbe
sbb
xlat
xchg
cmp
mov
push
jg
popf
orb
dec
or
js
add
xor
or
lcall
enter
push
cmpsl
int
xchg
out
jno
cmp
rcll
pushf
xor
jns
dec
rcrb
xchg
and
jb
dec
sbb
es
out
ret
adc
and
push
push
rolb
fldenv
stos
rorl
aad
das
stos
mov
cmc
sbb
inc
adc
xor
sub
dec
sub
sbb
and
xchg
pop
push
push
pop
data16
or
mov
dec
mov
lea
mulb
sbb
cmp
cld
shll
fcoms
testl
das
clc
lea
lods
ds
push
jl
mov
jno
push
mov
inc
and
stc
mov
push
or
dec
mov
sub
xchg
dec
popf
and
inc
jmp
sub
addb
and
mov
sub
jle
das
xchg
pop
adc
insl
push
and
leave
imulb
jle
lds
cmp
sub
shlb
mulb
adc
adc
jge
call
imul
xchg
dec
dec
mov
aam
popa
loop
fstpl
pop
test
leave
mov
push
leave
push
jbe
loop
stos
xor
fldt
cmp
xchg
loope
in
leave
add
fildl
lods
inc
movsl
mov
xchg
arpl
and
loopne
lods
movsl
dec
mov
repnz
fwait
and
dec
filds
in
and
push
sar
jbe
out
test
jno
fisubrs
xchg
xchg
fcmovnbe
pop
mov
add
sub
xor
xchg
jle
mov
bnd
mov
mov
out
push
fcmovnb
xor
inc
and
in
sbb
adc
mov
sbb
mov
das
cmp
or
mov
adc
adc
insb
pusha
mov
jle
leave
push
xor
mov
cmpsb
sbb
cmp
popa
lds
arpl
movsl
nop
loope
jg
jnp
cmp
cmp
xor
dec
xchg
mov
addb
fimuls
loopne
dec
cmpsl
jnp
ljmp
cmp
cmc
outsl
stos
inc
ret
mov
shl
mov
int
in
bnd
and
inc
mov
out
cld
movsb
dec
or
xlat
push
push
andb
scas
jecxz
adc
adc
lock
rol
in
nop
lcall
mov
push
insb
jmp
pop
jno
add
jle
cmp
xlat
sub
push
or
mov
add
mov
sub
or
jmp
lcall
ljmp
jo
dec
in
lds
xor
sub
adc
pop
movsb
cmp
xchg
pop
jo
je
inc
es
mov
rclb
mov
push
lret
mov
adc
cmovb
int3
mov
cmpsb
and
clc
dec
push
aaa
mov
stos
mov
lods
pop
pushf
test
sbb
mov
cmp
dec
ficoms
cmc
push
insl
stos
mov
bound
cmpsl
mov
add
pop
aas
aas
push
jne
aaa
icebp
xchg
pop
xor
test
test
xchg
and
dec
sbb
fnsave
xor
daa
repz
fcomps
xchg
sbb
mov
push
inc
pushf
cli
bswap
mov
leave
push
cmp
xchg
sbb
shlb
scas
mov
loop
cmpsb
stc
ja,pt
or
inc
cmp
inc
mov
popf
mov
xlat
dec
mov
loope
dec
pop
pop
sbb
adc
jbe
popa
ljmp
xchg
rcr
and
insl
rorb
or
pop
imul
xor
lea
mov
pop
insl
pop
jnp
dec
sbbb
jle
nop
push
je
cs
mov
pop
pop
sbb
jecxz
push
pop
sbb
rcll
lds
pop
mov
mov
inc
ret
cmpsb
pop
push
dec
pop
adcb
loope
dec
sti
fwait
inc
stos
jge
adc
out
pop
test
jecxz
xchg
adc
popf
pop
shl
aad
mov
out
mov
mul
in
inc
orb
shlb
in
dec
in
enter
cmp
adc
aad
push
fdivr
add
push
mov
pop
arpl
jp
push
xchg
or
in
cs
lock
mov
mov
cmp
mov
dec
jp
das
jmp
pop
loopne
cs
xchg
insl
mov
out
xchg
push
cmp
scas
inc
lcall
aam
imul
shl
sarb
js
jmp
outsl
out
jmp
inc
rcr
daa
inc
sub
scas
dec
rorl
xorb
pusha
pop
in
push
jnp
shlb
in
cmp
cmp
push
mov
lock
jnp
push
pop
push
cli
int
mov
icebp
andl
nop
scas
jg
adc
sub
xchg
test
mov
subb
lcall
shrl
jnp
inc
mov
xor
lock
out
mov
lcall
aaa
adc
add
outsl
mov
fwait
in
mov
mov
icebp
jne
loope
ljmp
mov
loope
mov
mov
shlb
mov
or
cltd
test
test
int
jne
pushf
cltd
push
adc
jecxz
xchg
jbe
inc
sbb
xor
stos
pop
int
lds
push
pop
or
add
push
fldcw
adc
popf
dec
mov
adc
mov
sub
jae
sub
gs
aad
jb
add
sbb
leave
addr16
es
xor
mov
dec
into
jecxz
popa
out
sub
add
pusha
dec
scas
mov
loopne
push
data16
mov
sub
jae
push
pop
cltd
cwtl
hlt
jno
movsl
xchg
lahf
popa
jle
sbb
pop
xlat
in
sahf
mov
lods
scas
jnp
xchg
add
and
mov
lahf
xlat
stos
ljmp
fidivs
xor
cmp
pop
dec
fidivs
repz
loope
jmp
std
push
imul
addr16
test
sahf
push
pushf
jns
lods
xlat
fcmovb
loope
or
add
lret
adc
lret
mov
in
pusha
psubsb
jbe
aas
repz
and
iret
dec
aam
out
inc
mov
xor
push
test
pop
xchg
sbb
addb
gs
test
bound
stos
das
sbb
pop
mov
fadds
inc
sub
rcl
popf
dec
inc
pop
adc
test
push
and
xor
imul
ja
lret
jecxz
adc
std
je
inc
jo
push
stos
dec
xlat
adc
imul
adc
leave
test
test
xchg
push
std
mov
jge
xchg
std
popa
mov
xchg
addr16
push
scas
jl,pn
inc
push
call
jnp
mov
adc
cmp
mov
call
dec
cltd
pusha
sub
repz
adc
sti
scas
cmpsl
repnz
icebp
and
js
add
and
cld
ret
stos
jl
idivl
sbb
enter
mull
jae
scas
ljmp
jge
and
in
pop
sbb
add
pusha
outsb
bnd
push
push
jecxz
inc
jmp
xchg
mov
fwait
cmpsl
jnp
imul
loopne
cld
loope
xorl
inc
add
out
sub
sub
jle
popa
cmp
in
sub
cmp
fildll
xchg
mov
lea
adc
popa
in
sub
cmc
jb
scas
or
pop
mov
loopne
sub
mov
xchg
dec
adc
mov
sbb
xchg
push
sbb
test
sub
fs
rcr
std
loopne
movsb
sbb
ror
push
jns
pop
jmp
sub
push
inc
popa
or
pop
ffreep
xchg
movsl
rcrb
jb
mov
fildll
xchg
andl
int3
push
xor
lods
xchg
arpl
jb
mov
dec
mov
test
aaa
jecxz
xchg
jl
jo
or
sub
fildll
or
jle
pop
mov
xor
xor
mov
pop
pop
test
cs
sub
cmp
and
data16
fimuls
fcmovnb
sub
push
cwtl
in
inc
les
outsb
ret
cmp
and
notb
jno
sub
das
mov
add
repz
in
push
adc
pop
hlt
js
dec
and
cli
clc
imul
mov
test
mov
or
and
dec
sub
sub
lahf
pop
jg
push
mov
xor
jno
inc
mov
xor
mov
xchg
xchg
mov
lea
pop
in
push
dec
xchg
lock
push
xor
jb
adc
push
inc
dec
mov
mov
dec
mov
adc
push
stos
mov
mov
and
push
xchg
xor
out
sbb
sti
xchg
inc
inc
outsl
sbb
repz
adc
outsb
and
lods
sbb
push
inc
pusha
sti
push
scas
mov
adc
lods
fldt
ret
mov
xor
mov
cmpb
xchg
les
jo
es
xor
jp
pop
sti
sbb
movsl
dec
adc
movsb
xchg
jecxz
mov
cmc
mov
std
xlat
insl
shlb
sbb
jo
fdivrs
inc
add
stos
out
sahf
and
fcoms
sub
shll
inc
mov
sbb
mov
and
lret
jnp
scas
je
xchg
bound
adc
fcomps
and
fstp
fiadds
clc
or
xchg
sbb
popf
test
out
ret
aaa
mov
cmp
out
ret
xchg
jae
sub
outsl
push
mov
mov
dec
jge
adc
add
addr16
out
mov
sti
xchg
loop
jl
jge
xor
pop
lock
testb
pop
lock
lahf
adc
push
xchg
cmp
xchg
inc
movsl
lods
mov
fs
fs
addr16
scas
sarb
pop
xchg
pop
adc
pop
xchg
add
scas
ret
stc
enter
push
fistl
mov
pop
cmpl
insl
xor
cmp
jmp
aaa
pushf
dec
xchg
dec
push
xchg
outsl
arpl
inc
imull
mov
cmp
fstps
into
out
xchg
mov
mov
std
incl
test
lea
push
sbb
xchg
jo
pusha
addr16
insb
mov
in
pop
xor
pusha
jb
dec
scas
lods
jge
sub
adc
test
sarl
cmp
dec
push
scas
inc
mov
into
mov
aad
loop
je
sbb
lock
sub
test
loope
mov
in
sbb
add
mov
popa
jge
xor
push
add
mov
mov
mov
jae
push
mov
cwtl
mov
cli
xchg
movsl
pop
sbb
dec
out
popl
test
and
sbb
shlb
or
fnstcw
inc
push
pop
ret
push
dec
je
fs
dec
add
popa
or
xchg
mov
cmp
cmp
insl
jmp
xchg
je
add
fcompl
mov
adc
push
xor
mov
push
test
outsb
add
lds
sarb
cmp
in
insl
aam
push
mov
mov
push
jno
ljmp
out
cmp
jl
arpl
gs
pop
dec
daa
scas
test
pushf
jno
fucom
test
sbb
shll
xchg
stos
addr16
jae
lret
fbstp
fisttpl
pop
adcl
and
and
xchg
insb
sbb
lods
ss
xor
xlat
sti
add
fs
inc
nop
aaa
sbb
stc
in
and
inc
and
xor
mov
movsl
push
jg
xchg
ret
push
ja
add
jo
xor
ret
sti
push
aam
sbb
ds
or
js
mov
jmp
mov
jecxz
loope
lea
push
xchg
jns
pop
push
insb
xor
pop
in
stos
scas
gs
sbb
sub
jecxz
mov
jno
push
cs
or
cli
outsl
dec
mov
jmp
xchg
xor
jmp
cmp
hlt
push
pop
fcoml
pop
mov
ljmp
push
sbb
and
adc
jmp
push
and
mov
mov
cmp
inc
dec
push
mov
and
adc
sahf
nop
icebp
cmp
mov
je
jmp
adc
sbb
inc
jne
and
inc
adc
xchg
inc
nop
jl
sarl
in
popa
xor
lret
and
jge
rcr
or
pushl
xchg
pop
rcrl
ret
stos
push
aas
ljmp
inc
mov
sub
gs
test
jnp
xlat
mov
test
out
outsb
or
cmp
scas
rorb
mov
cmp
fisubl
cmp
ja
xchg
pop
push
xor
xor
and
sub
add
pop
xorb
mov
lcall
lret
mov
xor
add
enter
mov
fstp
pop
mov
fstps
mov
sbb
or
pop
or
clc
dec
nop
sbb
jnp
fisubrs
call
dec
shrb
push
fiadds
das
add
data16
loope
pop
mov
mov
fmuls
outsl
push
imull
rclb
mov
movsb
stc
cmp
pushl
jle
fisubrl
loope
and
fwait
addr16
and
and
jl
push
add
subl
out
ss
lods
jae
lret
pop
and
xor
inc
add
jmp
sub
inc
les
adc
es
push
jg
aaa
das
gs
mov
or
push
int
jg
sub
cli
movsl
fsubl
dec
push
add
mov
jne
loop
jmp
add
mov
sbb
and
cmp
jne
inc
xchg
jno
cmp
scas
xchg
mov
pop
mov
and
rolb
pop
add
sub
int3
inc
pushf
sub
addb
sbb
ljmp
mov
test
sub
adc
sub
and
movsb
imul
xchg
push
adc
lahf
insl
jne
rorb
and
icebp
fxam
ret
inc
jbe
aad
sub
sahf
xchg
push
and
imul
mov
mov
jno
adc
cmpsb
mov
add
addr16
push
fisttpll
out
fdivr
imul
ja
and
adc
jp
ds
rorb
mov
jbe
jae
inc
xor
fcoms
push
sbb
call
push
xchg
pushf
or
scas
mov
out
jle
pop
test
jle
fsubrp
and
push
dec
pop
int
lret
inc
inc
sbb
lea
xchg
sbb
add
push
pushf
jns
dec
loopne
mov
andl
jnp
mov
or
ljmp
adc
repnz
pushf
sti
cmc
push
adc
push
ljmp
mov
add
mov
inc
andb
lock
lcall
and
rolb
cmp
movsl
push
sbb
and
orl
shr
arpl
aas
repnz
insb
scas
dec
and
imul
leave
jmp
adc
xchg
andb
popa
cmp
insl
mov
negl
clc
rcll
or
ret
mov
daa
inc
push
fnstenv
std
loop
in
subl
es
lcall
mul
or
pop
mov
push
xchg
cmc
and
out
imul
mov
mov
lahf
sub
out
dec
ret
sub
icebp
xchg
inc
or
scas
pop
addr16
pop
pop
shlb
outsl
ret
ret
addr16
cld
ja
ficoms
jb
enter
repz
mov
add
inc
fidivs
xchg
div
and
adc
mov
mov
push
jae
jecxz
sti
or
pop
or
pop
pop
imul
inc
jae
loope,pt
add
pop
pop
or
sbb
ja
cwtl
mov
jecxz
loope
rep
sbb
mov
add
mov
mov
push
xchg
repnz
jnp
hlt
mov
dec
fstpt
inc
out
inc
and
imul
pop
decb
inc
pop
push
les
out
xor
mov
fwait
xor
stc
inc
loope
xchg
in
lahf
les
jge
ss
mov
adc
dec
dec
repz
mov
add
xor
jb
inc
mov
fnstsw
mov
dec
js
in
pop
sub
sbb
xchg
sub
lcall
out
cmc
cltd
add
jnp
xor
popf
call
mov
enter
lcall
xor
test
adc
mov
jns
test
fmuls
jecxz
rcrl
outsb
sbb
jae
add
jg
mov
je
xor
push
repnz
and
push
lretw
icebp
dec
in
mov
cmc
xchg
xchg
jo
mov
pushf
loopne
fmuls
dec
or
insl
sbb
mov
cmp
ret
stos
inc
jo
xchg
mov
or
mov
mov
lcall
jmp
dec
mov
push
cmp
push
movsb
inc
adc
loope
scas
dec
cltd
lcall
inc
xchg
mov
test
add
imulb
xor
pop
scas
loopne
pop
xchg
and
jae
jno
xor
out
imul
or
mov
push
xchg
lret
pop
dec
mov
loop
fs
lock
push
mov
push
insl
pop
mov
ss
pop
or
ret
dec
dec
loope
pop
or
outsl
cmp
push
xor
cmp
ret
mov
sub
pop
nop
pop
push
mov
xchg
mov
xorl
push
ljmp
inc
cmp
mov
movsb
or
sbb
pop
andl
hlt
rclb
insb
das
jp
repnz
repz
push
pushl
push
ret
pop
inc
outsb
add
mov
jne
lock
jl
pop
sahf
lods
pop
jo
pop
arpl
and
mov
inc
out
out
xorb
sbb
sbb
add
and
lahf
lods
push
push
mov
into
jg
insl
xlat
and
cmp
pusha
pop
cwtl
js
daa
cmp
leave
je
xchg
xchg
inc
sub
stos
pop
mov
cmp
add
or
xor
scas
bound
mov
std
pop
stc
adc
mov
add
cmp
xchg
cmpsb
cld
adc
in
insl
jb
mov
cs
xchg
ficompl
push
sub
sbb
pushf
enter
ret
sub
dec
cs
push
cmpb
sahf
or
fs
push
sahf
xchg
imul
shrl
jae
fidivrl
adc
lea
into
call
inc
lods
loopne
lret
xchg
xchg
dec
mov
mov
jbe
ret
roll
mov
jbe
mov
sbb
icebp
mov
mov
mov
nop
addb
push
js
xor
push
add
notl
mov
pop
and
pop
inc
mov
dec
sub
pop
cmpsb
sub
les
insl
mov
push
outsb
sbb
stos
scas
scas
xchg
dec
into
std
push
test
and
bound
xchg
mov
dec
int
movl
mov
sub
mov
xchg
mov
lret
repz
jno
and
inc
xor
mov
test
arpl
dec
mov
dec
pop
cmp
xor
push
hlt
pop
aam
loopne
lahf
mov
adc
push
adc
std
xchg
dec
sbb
jbe
cmp
adc
mov
jb
xor
push
xorb
pushf
xchg
outsb
insl
pusha
jp
push
pop
mov
xor
cmp
xor
add
pop
pop
arpl
or
test
lods
out
xchg
imul
push
in
cmpsb
fildll
in
jg
icebp
inc
insl
cmp
mov
mov
in
mov
insb
mov
repnz
bound
lods
and
mov
mov
test
stc
je
ja
cmp
das
insb
mov
iret
movsb
outsb
data16
mov
imul
leave
xchg
and
pushl
sbb
xchg
push
dec
pop
sbb
icebp
ret
pop
xchg
outsb
cmp
addr16
stos
adc
push
add
out
add
dec
rcrb
ljmp
cmp
pusha
test
lods
mov
push
push
out
outsb
jnp
sub
or
inc
mov
mov
inc
stos
scas
call
es
dec
pop
cmp
xor
xchg
loop
insl
or
adc
cwtl
jne
xchg
jb
mov
mov
loopne
cltd
add
nop
push
hlt
ret
cmp
mov
gs
and
fcom
xor
stc
jbe
or
pop
das
sbb
in
aam
push
jle
outsb
jl
push
pop
dec
mov
pop
fiaddl
lcall
outsb
or
rolw
add
cmpsl
jo
out
and
push
pop
mov
repnz
xor
aas
pop
and
dec
cmc
and
push
sub
insl
in
bound
add
cltd
add
ss
insl
xchg
mov
jne
popa
in
adc
fidivl
sarl
mov
dec
stos
pop
fcoml
push
jb
jge
pop
dec
mov
shlb
lea
sub
pop
mov
sbb
fdivrs
sbb
orl
imul
mov
sbb
push
das
jb
and
sub
adc
ja
outsl
mov
mov
aas
add
or
pop
xrelease
xor
mov
xlat
add
les
rcll
test
es
dec
mov
mov
daa
mov
pusha
inc
pop
vpshab
push
dec
cwtl
push
clc
cmp
fstp
mov
call
pop
mov
fwait
lods
or
xchg
mov
push
cmp
adc
mov
adc
push
arpl
jb
mov
sahf
mov
push
mov
sub
cld
sub
sti
enter
and
clc
jge
repnz
mov
mov
dec
ret
stos
or
xchg
push
sub
inc
or
sar
lret
ds
cmpsl
sbb
xor
je
stos
dec
call
loopne
insl
sar
stos
push
pushf
mov
repnz
push
lods
mov
mov
mov
out
or
lea
scas
fistps
mov
insb
outsb
scas
test
cmpsl
xor
lret
add
xlat
or
sbb
jo
mov
and
lds
dec
cmp
adc
icebp
pusha
xchg
jge
insb
push
nop
xchg
loop
sbb
imul
std
mov
and
in
cmovbe
bound
jo
mov
movsl
xchg
rcl
push
mov
ret
adc
ret
in
mov
test
mov
mov
push
pop
push
pusha
dec
inc
jp
fcmovbe
mov
adc
and
js
lret
push
sbb
nop
je
test
or
cmpb
xor
xchg
into
std
cmp
arpl
jb
dec
fnstsw
lcall
fmuls
pop
jo
das
mov
movsb
out
add
je
aaa
aaa
xchg
inc
addl
cmpsl
scas
lret
xchg
repz
pushf
es
dec
in
scas
or
idivb
mov
ficompl
sarl
sub
cmp
push
out
stc
xchg
mov
dec
xor
scas
repnz
dec
in
lcall
loope
lcall
dec
loop
push
mov
dec
nop
out
mov
add
aad
gs
add
cld
stc
insl
sbb
dec
lcall
dec
iret
dec
pop
sub
add
insb
xchg
rorb
nop
dec
push
sbb
lods
add
cmp
jne
mov
sbbl
or
and
ret
pop
adc
das
cli
loopne
mov
xor
scas
adc
dec
xchg
xchg
icebp
xchg
jecxz
arpl
adc
xor
mov
xor
outsl
inc
out
adc
mov
notb
sub
sub
imul
std
mov
sub
call
push
gs
test
inc
cmp
sbb
pop
cmp
dec
or
add
adc
nop
je
ja
mov
add
shrb
daa
and
add
dec
sbb
sahf
dec
xchg
cmp
out
jo
xor
lock
inc
xchg
jle
pusha
cwtl
je
repz
add
inc
add
add
inc
add
adc
add
sub
adc
inc
add
add
int
inc
add
jne
add
pop
jbe
sbb
fldenv
aas
sbb
inc
xchg
ja
ss
fcoms
out
roll
xchg
jno
scas
sbb
jle
jl
clc
fidivs
mov
sahf
xor
mov
jno
pop
inc
dec
cli
inc
fcompl
lds
jge
lahf
jge
dec
js
test
fs
xor
cmp
inc
push
inc
adc
mov
cmpsl
jnp
bound
pop
mov
shrd
lret
cmpl
out
adc
mov
xor
sti
sub
rorl
or
aas
out
adc
icebp
xor
lods
fiadds
pusha
loope
out
push
mov
cmpb
stos
gs
xchg
nop
adc
pop
dec
stos
jo
loopne
sbb
mov
dec
shlb
push
cmpl
mov
cmc
jno
jnp
dec
in
cld
loope
nop
imul
idivb
ret
sarb
sti
popf
cmp
push
inc
icebp
xorb
xlat
mov
dec
lahf
push
push
dec
cmp
fdivrs
mov
jecxz
imul
jg
xor
js
fdivrs
mov
int
rclb
test
push
clc
mov
mov
sub
lahf
hlt
xchg
les
push
sbb
jg
dec
cmp
push
jae
fnstsw
scas
gs
stos
adc
movsb
loope
jb
subb
int
cli
adc
addr16
shrb
es
jne
pop
scas
mov
mov
push
enter
orb
cmp
mov
adc
into
xlat
ficoms
aaa
in
sbb
repnz
sub
and
xchg
aaa
lods
xchg
or
pop
and
imul
mov
jmp
ljmp
pop
xor
nop
cmp
sarl
cmp
or
mov
aad
orl
enter
mov
fldcw
ror
push
mov
mov
mov
fidivl
in
xchg
mov
sbb
sbb
hlt
ficoml
std
sub
inc
pop
xchg
psubusb
xchg
dec
cli
inc
pop
aas
icebp
mov
mov
sbb
inc
filds
in
mov
adcb
daa
mov
outsb
loopne
jns
push
iret
mov
add
or
push
cmpsb
push
mov
bound
aam
mov
jp
cs
in
mov
gs
pop
xchg
mov
pop
inc
mul
mov
pop
hlt
sbb
jmp
or
lea
movsb
sub
pop
mov
inc
in
aas
inc
rcrb
scas
pop
cli
cmp
push
and
outsl
test
jmp
ljmp
xor
xor
adc
enter
lret
xchg
pop
mov
pop
ja
and
mov
push
addr16
movsl
out
or
xchg
jnp
pop
std
imul
sbb
fscale
icebp
in
icebp
cmp
add
jle
mov
lahf
xchg
sub
push
fistl
xor
in
lea
jns
bound
adc
dec
mov
cmp
cltd
mov
adc
out
jmp
shl
pop
cmc
dec
xchg
xchg
or
adc
push
push
cmp
cmp
es
sub
lcall
and
push
cmp
or
lahf
add
jb
enter
sbb
push
stos
push
cmc
ss
sub
in
push
push
inc
jp
in
fcomps
push
pushf
inc
xor
pop
ss
out
jo
xchg
inc
sub
mov
xchg
xchg
sub
addr16
jbe
fs
mov
inc
hlt
aad
pop
clc
inc
cmp
std
adc
lods
mov
insl
js
pop
jp
mov
out
lcall
jne
push
xlat
in
icebp
push
jno
test
imul
enter
cmc
mov
mov
cmpsb
inc
aaa
mov
lea
out
push
loope
mov
dec
fildll
xor
scas
pusha
inc
dec
cmp
ds
repnz
xor
andb
mov
lret
aam
outsl
gs
leave
or
arpl
sbb
sub
pop
push
ffreep
dec
in
mov
mov
mov
call
mov
dec
pop
rolb
iret
ret
icebp
add
jns
out
sbb
sti
sub
test
jge
mov
cltd
cmp
or
xchg
cmp
repz
xchg
das
cmp
mul
or
pop
mov
nop
mov
mov
add
jbe
test
pop
pop
int
xchg
pop
shl
shl
and
aad
rcr
pop
push
movsl
test
js
cld
inc
inc
sahf
sub
cld
in
ja
pop
or
sbb
movsl
fwait
xor
jae
mov
push
dec
pop
outsl
dec
lahf
int3
cld
repnz
xchg
sbb
dec
xor
or
push
mov
push
es
bound
mov
test
cltd
pop
dec
mov
mov
stos
sbb
jns
insb
inc
cmc
mov
sar
stos
scas
or
xor
and
cltd
lock
imul
or
pop
push
inc
aaa
push
mov
mov
cmc
xchg
mov
and
and
or
add
pop
sub
js
cmpsb
repz
fisubs
jae
pop
pop
fisttps
popa
cmovge
les
add
pop
push
out
mov
mov
fsubr
push
cwtl
cli
inc
push
sahf
push
cmp
add
pop
arpl
xchg
xchg
imul
xlat
cmp
push
cmp
adc
inc
popf
shrb
mov
inc
int
mov
hlt
cmp
test
scas
jbe
in
mov
das
mov
popa
push
sahf
jns
jnp
or
nop
es
in
pop
unpckhps
mov
cmp
sub
push
lea
sahf
rolb
movsl
std
stos
push
call
in
add
xchg
add
dec
andl
xchg
leave
in
scas
fdivl
ffreep
sti
rorb
faddl
jmp
rcrb
push
testb
ss
call
pop
sub
in
xchg
aad
push
pop
fistpll
cmp
in
mov
and
xor
cli
stos
das
js
lock
shl
imul
and
orl
icebp
movsl
mov
push
mov
dec
mov
xor
jae
mov
leave
and
adc
sbb
adc
mov
movl
jno
lock
add
mov
mov
ja
mov
scas
fsts
mov
push
fimuls
jns
fs
jp
push
test
mov
sub
adc
adc
idivb
add
jo
aas
fwait
clc
movsb
ds
mov
xacquire
ljmp
enter
test
shrb
adc
mov
arpl
jae
adcb
ficomps
insl
cs
nop
cltd
push
and
xor
sub
std
testb
sbb
xchg
imul
mov
xor
ficoms
sarl
jp
mov
push
test
clc
push
cmc
out
mov
jns
push
jle
test
clc
test
out
push
sub
insb
data16
loope
pop
sbb
cmp
mov
pop
cltd
adc
vmovshdup
ret
xor
push
in
sbb
fdivrs
fstpl
in
jp
pop
jmp
mov
add
leave
sbb
fwait
inc
popf
test
push
stos
mov
pusha
and
adc
pop
mov
mov
popf
test
add
scas
loopne
push
call
and
dec
orb
push
pop
xor
pop
imul
sbb
scas
or
and
adc
add
popa
push
das
mov
jecxz
scas
scas
stc
sub
or
push
fbstp
push
push
add
jnp
pop
inc
jno
pop
pop
xchg
popf
mov
mov
iret
sub
add
sbb
push
and
cmc
push
je
cltd
pop
push
fdivs
ds
push
out
out
sub
xchg
in
test
into
das
subl
cltd
arpl
loop
loope
mov
ss
rcll
jno
lcall
aad
mov
sub
sbb
popf
jmp
xor
lods
stos
pop
dec
dec
les
mov
add
inc
xor
or
jmp
mov
and
fmull
mov
jg
pop
push
ds
pushf
push
popf
arpl
fwait
lods
stos
mov
repz
xor
mul
mov
add
push
adc
dec
xchg
cld
ja
add
mov
jo
test
aaa
sbb
pushf
js
into
push
out
jmp
sbb
gs
mov
adcb
std
mov
adcl
outsb
aad
xchg
arpl
dec
aas
cmpsb
add
mov
notb
push
lret
das
xchg
aas
ret
adc
out
and
mov
imul
test
push
inc
insb
pop
dec
pop
xchg
push
ss
xor
dec
xchg
das
out
sarl
jno
int
out
push
mov
xor
mov
jp
add
lret
push
jo
jge
push
nop
jg
inc
sbb
cmp
test
push
sar
cs
add
daa
dec
dec
rcrb
jg
xchg
rcrl
test
outsb
and
int3
cmp
mov
sbb
sbb
fwait
lods
out
jae
mov
scas
lret
out
add
fstpt
pushf
sti
scas
data16
mov
hlt
mov
enter
cmpsl
xchg
jne
mov
sub
adc
js
stos
outsb
ficoml
sbb
addr16
sbb
xchg
fucomip
fistl
ret
mov
ds
jns
pop
sbbb
enter
enter
push
sub
lock
cs
in
popf
cli
outsb
mov
jno
dec
es
cld
mov
scas
jg
addb
pop
sbb
inc
xchg
mov
or
int
test
and
and
push
mov
dec
mov
es
mov
mov
loopne
adc
or
outsb
test
clc
ja
inc
insb
aam
fadds
mov
fwait
mov
jecxz
dec
imul
ret
std
in
add
dec
xchg
pusha
sub
rol
add
mov
fcmove
out
mov
push
sti
stos
or
mov
ret
test
ja
jp
pop
jnp
mov
insl
inc
xchg
imul
ret
inc
inc
push
sub
cmp
ret
dec
xchg
jecxz
push
cmp
adcb
mov
cmovg
jns
test
leave
cmc
daa
push
ret
loope
jno
je
stos
ds
add
xor
xor
push
int3
or
adc
cmp
inc
xor
cmp
jge
adc
js
xchg
fdivrl
lahf
cwtl
pop
mov
and
test
xchg
dec
mov
sbb
fists
mov
jp
jge
add
dec
das
pop
popa
or
or
lahf
daa
das
mov
jl
mov
daa
loopne
adc
push
mov
add
sub
or
push
sbb
and
mov
cmc
adc
adc
xchg
pop
decb
in
popa
es
vmulpd
inc
pop
lds
mov
adc
ja
fstpt
jmp
push
bound
subl
imul
xchg
and
test
not
int
scas
lcall
xchg
mov
arpl
jle
cmp
sub
sbb
dec
repnz
notl
cmp
pop
addr16
orb
push
adc
inc
jp
mull
lds
xchg
cmp
pop
mov
in
scas
mov
sub
out
inc
push
pop
adc
outsl
mov
or
pusha
into
sbb
lret
sbb
add
out
mov
lahf
jne
icebp
arpl
xchg
sub
jo
push
cli
xchg
xor
lret
sbb
mov
inc
push
or
mov
xor
cmc
pusha
adc
xchg
or
pusha
inc
xlat
lock
imul
dec
mov
adc
or
mov
mov
ja
lock
aad
push
sub
cmpsl
in
out
mov
inc
push
push
xchg
cmp
xor
enter
dec
scas
icebp
xor
inc
enter
add
scas
add
std
in
push
add
jae
pop
sti
sbb
fdivrl
in
js
jnp
fcmovnu
idiv
jbe
or
aaa
test
cld
movsl
outsb
cltd
stos
or
jg
pop
ljmp
sbb
aas
cld
das
sbb
xor
in
push
dec
or
mov
cltd
add
cmp
cli
sarl
notb
ja
divl
or
sarb
push
rcrb
je
rclb
dec
dec
cmp
cltd
out
cmp
lds
mov
add
mov
loopne
xchg
push
push
sub
outsl
cmpsl
fimuls
lock
mov
out
mov
dec
mov
pop
cli
or
mov
jne
and
sbb
in
outsl
jl
mov
inc
in
push
inc
jl
dec
inc
cmp
and
filds
xchg
xor
in
leave
cmp
addr16
in
les
xchg
jl
add
int
push
and
mov
jle
and
sub
pop
inc
push
test
lret
mov
xor
rcl
popw
pop
mov
fmuls
out
loop
cs
mov
inc
xchg
mov
add
cmp
or
out
mov
outsb
test
imul
aad
inc
xchg
jge
jo
jno
mov
cmc
cwtl
dec
pop
aaa
insb
cld
mov
or
xchg
jne
mov
mov
push
dec
adc
mov
xchg
jge
lahf
int
loop
cltd
popf
and
pop
in
arpl
jp
jecxz
add
mov
mov
pop
es
lahf
imul
cmp
sub
and
imul
sub
sbb
pop
in
ret
hlt
mov
adc
push
sub
enter
sbb
clc
adc
mov
mov
mov
cmp
inc
or
leave
pop
lea
ja
cmp
loopne
cmp
and
cs
push
arpl
cmp
jbe
fcomi
cmp
add
dec
lods
popa
add
test
xlat
inc
inc
loopne
shll
xchg
push
adcb
xchg
loop
inc
push
and
js
insl
xchg
in
orb
xor
cld
push
lock
jo
pushf
pop
mov
xor
xor
stc
pusha
incl
lahf
movsl
bound
pusha
push
fsubrl
jle
jne
rorb
test
jno
or
mov
adcb
mov
aam
fiadds
sub
adc
loope
sbb
adc
jnp
push
incl
mov
jle
mov
in
cmp
inc
pop
outsl
cmp
pop
scas
addb
iret
movsb
setns
rclb
jle
pop
add
mov
inc
mov
fwait
sub
xor
in
inc
loop
add
fldt
cmp
adc
mov
push
jbe
inc
divb
xchg
cmp
js
test
sbb
mov
lret
cmp
xchg
fldenv
or
fcomip
sub
xor
cmpsb
mov
popa
ficompl
fadds
fs
loopne
test
inc
fdivs
mov
cmc
pop
dec
xlat
out
pop
mov
out
out
push
add
add
and
dec
mov
and
dec
stc
jg
nop
es
jne
ret
es
or
dec
aam
xlat
add
rclb
call
xor
into
mov
sbb
pop
add
jne
xor
enter
in
adc
push
cmp
out
mulb
and
dec
mov
mov
or
cwtl
add
pop
insl
shlb
adc
or
or
xchg
xchg
test
cmp
inc
inc
fldcw
push
test
clc
sti
pop
xchg
or
aad
xor
jmp
inc
push
cmc
xchg
cmp
out
test
sub
cwtl
incl
add
js,pt
jge
pop
pop
inc
xor
in
daa
imul
sub
or
add
push
shr
stc
or
mov
xchg
cmpsb
xchg
in
add
cmp
call
sbb
aam
mov
stc
fidivrs
cltd
add
cmp
add
xchg
adc
pop
xchg
xchg
add
jge
loope
cmp
lods
popf
scas
sbb
mov
fwait
out
xchg
popa
and
add
call
loopne
add
cmp
imul
sti
sbb
arpl
pop
sahf
adc
lock
and
rorl
adc
pop
test
les
pushf
divb
cmp
ljmp
call
pusha
push
out
mov
push
lahf
pop
scas
cwtl
add
cmpsl
cmpsl
aam
push
dec
mov
push
lock
sbb
jl
es
dec
xor
popf
stos
sub
scas
ret
mov
cmc
sbbl
stc
out
stos
das
lea
push
outsl
or
dec
call
pop
jg
rorb
add
pop
mov
pop
sub
jnp
fucomip
dec
sub
dec
stos
mov
mov
xor
inc
mov
ja
test
out
pop
dec
push
fstl
ljmp
shrb
xor
adc
ficoms
jmp
ds
jge
fucomip
test
adc
and
xor
aad
push
jle
mov
inc
stos
out
jg
push
je
or
mov
dec
pop
cmp
dec
push
adc
jecxz
movsl
mov
sub
std
pop
repz
dec
repnz
mov
jge
cmpsb
dec
push
rcll
orb
cmc
dec
jge
and
lea
add
pop
cmp
or
bound
xor
out
mov
into
sbb
xchg
mov
aas
bound
das
mov
cli
test
mov
lock
adc
movsl
outsl
and
leave
test
shlb
dec
cmp
clc
test
jno
add
gs
stos
movsl
cmp
xchg
xchg
fldcw
sbb
jae
or
jle
cwtl
jp
lahf
dec
xchg
std
or
ficoms
pop
adc
push
insl
sbb
ljmp
fidivrs
lea
imul
jmp
pop
int
mov
and
lock
adc
adc
outsb
sbb
pop
and
loop
popf
scas
sbb
enter
call
xor
fsts
test
mov
repnz
into
or
in
xchg
test
insb
sub
inc
mov
dec
cmp
cltd
sub
and
int3
cmp
insl
cwtl
mov
mov
jecxz
jne
std
and
test
mov
movsl
jecxz
mov
in
jns
js
dec
mov
rorb
adc
or
popf
cmp
xchg
cli
repz
stos
push
std
jns
loop
and
adc
sub
es
sbb
test
pop
mov
inc
push
std
push
cmp
and
sub
arpl
inc
jno
out
cmp
add
sub
adc
or
mov
scas
mov
fwait
xchg
test
push
add
xchg
add
cmpps
inc
int
insl
adc
xchg
adc
adc
cmp
test
out
jne
lret
outsb
add
leave
rclb
lock
mov
sub
lahf
push
je
fsubrl
fsubs
xchg
orl
std
pop
add
xchg
ds
mov
das
jne
push
movsb
incl
pop
sub
adc
cmpsb
xorb
mov
pop
and
mov
mov
jo
call
sub
clc
scas
cli
inc
mov
in
xchg
xchg
cmc
pop
test
loop
mov
adc
lret
cmp
pop
and
insl
adc
add
adc
movsl
add
inc
or
lods
popa
fwait
outsb
and
jnp
and
daa
mov
out
sub
pop
add
out
adc
movsl
into
lods
jge
stos
sub
add
cmpsb
inc
push
jg
adc
mov
es
inc
ret
inc
iret
push
arpl
xchg
rolb
jb
enter
nop
adc
cmc
faddp
lock
out
cmpsl
adc
sub
jp
sbb
jmp
sbb
pop
mov
repz
jl
jnp
aam
rorb
push
imul
cmpsl
mov
pop
ds
jg
gs
inc
mov
add
mov
test
into
in
pusha
cld
fisttpll
movsb
arpl
cmp
inc
add
and
int
int
xor
mov
sbb
or
or
fwait
pop
int
fwait
ds
fs
jecxz
mov
mov
xchg
cmp
or
ds
in
sub
loope
loopne
movsl
in
sarb
cmpb
stos
adc
outsl
fucomip
pop
les
test
fwait
stos
scas
sub
imul
mov
aaa
lock
js
bound
lret
push
scas
stc
call
push
loope
push
mov
cltd
mov
std
in
xchg
aad
push
dec
sub
inc
std
cmpsb
aad
iret
jecxz
or
inc
jo
fisubrs
inc
test
jecxz,pn
fwait
ljmp
nop
jnp
movsl
out
int
cmp
sub
cmpl
xorl
pop
repnz
xchg
dec
mov
sub
les
inc
or
jg
mov
loope
sub
and
sbb
dec
gs
dec
sbb
mov
fdivp
jge
rcl
mov
fldl2t
or
cs
xchg
idivb
addl
popf
adc
or
aad
and
dec
imul
jo
test
xchg
aas
push
push
inc
in
es
fidivrs
pop
or
dec
jno
mov
xor
mov
popf
insl
daa
lret
ljmp
mov
xor
repnz
push
in
push
repz
cmp
sub
test
cmp
insl
insb
add
cli
adc
repnz
fwait
data16
icebp
outsb
ljmp
cmp
in
out
inc
mov
bound
cwtl
xor
test
xor
ljmp
jnp
mov
mov
cli
sahf
in
lret
pop
pop
insb
mov
or
jo
xchg
pop
out
mov
imul
sbb
and
jne
je
int3
data16
or
xor
and
daa
sbb
xchg
mov
cld
sub
push
cmp
pop
jb
mov
clc
ljmp
aad
bts
mov
jmp
out
sbb
notb
mov
jg
dec
fdivrp
aas
subb
cli
insb
jnp
fnsave
xor
movsl
int
enter
inc
jge
sbb
enter
in
bound
sub
ror
adc
cmpsl
fldl
pop
negb
ret
xchg
sub
mov
xlat
data16
clc
scas
xchg
jb
sub
es
cmp
sbbl
dec
lcall
aam
mov
and
or
add
xchg
push
push
cmp
push
push
cmpsl
dec
movsb
add
cs
dec
pop
pusha
dec
dec
int3
add
inc
cmpsb
or
add
jnp
movsb
xchg
inc
je
push
jae
xor
outsb
adc
cmp
mov
push
jmp
inc
shlb
cmc
sbb
dec
cmp
roll
movsb
adc
or
pop
daa
stos
mov
jne
sub
aam
sub
or
and
push
sbb
leave
stos
bound
xor
jno
shr
ljmp
adc
lret
pop
dec
push
das
adc
cs
jl
sarl
fsub
shrl
mov
mov
sbb
cmp
sbb
lahf
hlt
cmp
jg
sub
cmp
jecxz
sbb
sarb
and
imul
xchg
push
add
fsts
pop
mov
push
adc
insb
lds
shrl
outsl
filds
loopne
shl
jl
daa
dec
out
or
and
fimull
lret
imul
sub
std
xchg
mov
sti
movsl
pop
jle
sub
xchg
ret
fs
addb
stos
xor
sub
jo
sarb
and
fwait
inc
xor
test
out
and
jge
mov
jge
inc
rclb
popf
call
or
or
sub
out
cld
dec
sbb
out
xchg
lcall
icebp
stos
mov
lock
push
add
stc
repz
cmp
and
pop
push
outsl
mov
mov
cwtl
enter
lahf
inc
cmpsl
inc
inc
scas
out
ret
or
imul
test
cmp
push
mov
fisttps
loope
flds
pop
stc
nop
jle
cmp
push
movsb
add
inc
pop
mov
dec
shl
lods
xor
movsl
pop
lods
aaa
mov
sbb
mov
das
sbb
mov
xchg
dec
andb
jmp
sbb
gs
sbb
jbe
fstps
sub
dec
ret
ss
jno
sbbb
sti
lods
js
lock
dec
xchg
hlt
pushf
sub
jle
pop
lret
pop
ds
aam
xor
sbb
pop
inc
das
or
lds
pop
cld
xchg
mov
jle
fs
dec
jle
shl
loopne
add
and
lods
pop
and
pop
fisubl
sub
or
pop
dec
jo
enter
add
cmpsl
pop
fsts
cmpsb
jbe
mov
mov
mov
adc
inc
rolb
pop
jmp
outsb
pushf
push
push
push
lret
inc
adc
int3
add
sti
mov
cmp
jnp
xchg
je
and
mov
setge
xor
xor
or
inc
inc
and
insb
jo
sbb
pop
xchg
sub
lds
xchg
jmp
out
out
pop
scas
fwait
dec
pop
clc
mov
mov
aaa
adc
mov
out
dec
pop
popf
int
inc
and
and
ret
ficoml
insl
jae
enter
pop
mov
cli
add
inc
out
daa
scas
dec
incl
push
cli
push
sbb
addr16
jbe
sub
lds
fisubrs
int3
sbb
jae
in
addl
xchg
cld
push
mov
cli
mov
roll
sub
cmp
and
mov
outsb
push
out
fcoms
and
sbb
xor
push
ret
es
add
jecxz
dec
xor
cmc
pop
push
or
repz
push
jne
push
lahf
add
add
repnz
out
xchg
bswap
out
mov
sbb
mov
sub
popf
xlat
imul
lods
aas
push
popa
xchg
popa
add
cmp
push
das
mov
xor
out
lock
mov
stos
scas
in
test
cmp
outsl
rorb
sub
inc
sub
lahf
fdivl
mov
out
inc
jl
dec
sbb
mov
mov
icebp
sub
xor
arpl
rcr
rorb
pop
lods
mov
daa
pop
adc
add
xorl
and
xchg
bound
jo
repz
sbb
scas
adc
jno
sub
call
dec
jnp
in
mov
inc
jo
idivl
xchg
shr
cmp
lea
test
and
sti
aad
push
push
lods
jae
push
jbe
out
xlat
jno
inc
xor
and
ljmp
cli
faddp
scas
cmp
inc
cmp
aaa
or
jo
sahf
push
nop
je
push
and
push
js
test
push
inc
mov
sbb
ficoms
pop
iret
mov
mov
int
sub
fcomi
push
cs
clc
fwait
shlb
addr16
cmpsl
fiaddl
xchg
ljmp
lahf
sbb
jnp
enter
mov
movsw
ret
lcall
fwait
test
sub
fstl
xor
mov
out
lea
mov
sti
cmp
pop
test
cmp
xlat
or
jbe
dec
sub
orl
nop
and
hlt
xchg
int
test
push
mov
mov
repnz
add
shlb
adc
inc
loop
jbe
inc
stc
pop
pushf
insl
out
gs
mov
daa
cwtl
std
or
mov
sbb
or
mov
divb
test
pop
imul
pop
jecxz
xchg
outsl
push
and
push
fsts
lods
or
jle
cli
popa
pop
xor
xchg
lcall
imul
dec
push
js
stos
imul
mov
push
fsubl
repnz
push
xor
outsl
dec
mov
mov
adc
mov
rclb
fucomp
or
adc
scas
pop
mov
lret
in
push
xor
xor
pop
ds
fildl
mov
lcall
inc
add
cwtl
wrmsr
cmp
loop
fs
cmc
and
xchg
data16
jns
xchg
mov
lahf
jae
xchg
xor
sbb
or
mov
cmpsb
ljmp
shl
add
icebp
mov
mov
jecxz
xchg
xchg
rcll
push
rcll
jle
fcomip
popa
and
sub
mov
es
ret
test
hlt
mov
push
out
cld
ldmxcsr
add
jns
push
imul
mov
pop
mov
add
jl
xlat
xchg
aaa
leave
push
add
mov
cmp
xor
rcr
add
sbb
sub
sahf
out
pop
ss
iret
jle
cmc
mov
rorl
dec
mov
pushf
in
sub
lret
jecxz
fnstcw
pushf
subl
lods
mov
fcmovu
add
arpl
enter
mov
cmpsb
inc
out
in
push
insb
sub
testb
iret
aam
js
mov
inc
test
xchg
jae
push
cwtl
test
jnp
jg
cmp
or
test
cwtl
cli
repnz
xchg
push
int3
aad
mov
add
out
int3
movsb
dec
and
fisttps
scas
clc
daa
cwtl
addl
push
push
xor
xchg
add
dec
cwtl
ja
pop
mov
mov
jl
repnz
call
lods
jge
shlb
cmp
jle
mov
mov
stos
xor
xor
push
fcoms
negb
int3
push
push
mov
jns
sahf
lahf
cmpxchg
xchg
xchg
lahf
pop
je
inc
aaa
lock
movsb
pop
pop
pop
pop
ror
mov
cmp
ss
pop
pop
pop
insb
inc
out
push
sub
test
mov
ficomps
mov
insl
mov
popa
xchg
lcall
jle
fisttpll
mov
inc
fdivr
add
pop
pop
pop
sub
testl
xchg
in
cmp
ljmp
xchg
movsb
lahf
in
fdivs
in
mov
mov
mov
int3
test
jne
iret
in
cmp
mov
mov
inc
imul
sbb
lock
cmp
cs
dec
outsb
xor
xchg
cmp
sub
add
dec
loop
xor
pop
addl
in
std
lods
mov
movsl
fsub
jnp
xor
mov
pop
inc
push
jbe
les
daa
mov
mov
jge
testb
mov
mov
xor
or
outsb
dec
pop
cmpsl
xor
pop
sub
mov
mov
or
call
add
in
mov
insl
in
sbb
ret
das
or
pop
or
xor
out
mov
pop
jle
mov
loop
add
pushf
mov
nop
mov
mov
in
or
mov
adc
pop
jbe
push
and
loop
or
es
or
adc
daa
jmp
bound
cmp
and
pop
jmp
push
mov
enter
addr16
pop
and
imul
inc
jecxz
inc
jg
sbb
xchg
mov
lock
fsubrs
inc
iret
push
mov
lahf
cmp
das
mov
lds
sbb
push
cmp
and
dec
lret
sub
xor
push
sbb
pop
leave
scas
fbld
ljmp
pop
mov
loopne
or
dec
mov
cmp
aas
mov
inc
ret
jns
int3
iret
or
inc
clc
aam
xor
mov
nop
push
loope
adc
xchg
inc
jae
gs
add
fcoms
adc
xchg
cli
dec
pop
out
les
fstpt
test
mov
add
in
inc
push
jmp
adc
inc
xor
inc
inc
adc
popa
and
call
leave
fwait
lds
mov
mov
sbbl
test
sbb
fstpt
or
in
fstpt
jae
jle
test
popa
sub
mov
mov
cs
leave
pop
pop
ret
sub
adc
lret
xchg
mov
push
adcb
leave
pop
xor
and
inc
sbb
cmp
and
pushf
mov
imul
fisttpll
sub
fdivr
shll
dec
arpl
and
push
gs
and
ljmp
jnp
pop
pop
inc
iret
out
cmp
mov
dec
scas
loop
jle
out
xchg
pop
js
into
xchg
scas
inc
mov
clc
sbb
xor
lods
in
push
dec
dec
roll
lcall
dec
xor
cmp
ss
scas
pop
or
fsubrp
lds
add
push
out
insl
bound
xor
nop
bound
inc
xor
lcall
ljmp
adc
cmp
lcall
je
stc
xor
sahf
inc
adc
add
nop
int3
jnp
ret
arpl
cmc
xor
push
repnz
and
or
imul
or
push
scas
xchg
es
sub
add
push
repz
out
xor
sbb
jbe
add
int3
call
sbb
jno
cltd
movsl
pop
int3
data16
dec
sbb
adc
lock
mov
stc
movsb
mov
fwait
leave
inc
xchg
xchg
mov
jmp
shl
sbb
pop
test
xor
cwtl
aas
inc
jp
add
xchg
int
xor
mov
sbb
das
add
ret
stos
inc
icebp
pop
xor
jl
enter
in
push
mov
iret
ret
sbb
push
push
sub
add
iret
test
leave
cmp
out
pop
xor
lret
shll
xor
fs
mov
mov
mov
cmpsl
ljmp
cmp
out
xchg
push
mov
add
jecxz
push
or
inc
add
nop
cmp
mov
cli
push
push
cmpsb
aam
xchg
les
stos
outsl
in
push
test
xor
inc
jo
add
jle
scas
mov
leave
push
sub
fwait
stos
jbe
push
movsl
lcall
jne
leave
nopl
pop
jae
jns
and
cmc
arpl
in
jbe
loopne
cs
rorb
cmp
out
addr16
outsl
inc
mov
and
push
push
lock
inc
out
cltd
test
pop
cmp
inc
dec
imul
xchg
add
and
sbb
cmc
cltd
mov
fdivl
sarl
arpl
lahf
pop
cmp
and
lret
movsb
aam
jno
shr
pop
inc
fisttpl
inc
gs
push
movsb
movsl
add
iret
mov
mov
shrd
das
inc
sarb
push
xor
lds
daa
sti
cmp
pop
mov
repnz
sbb
sarb
int
mov
sub
jno
inc
sti
pop
xchg
sbbl
and
xchg
xor
cmp
mov
mov
cmp
out
mov
and
inc
es
mov
in
data16
mov
adc
cmc
std
or
int3
xchg
cli
lcall
pop
sub
shll
xor
insl
shll
mov
ret
inc
scas
cltd
sub
pop
cmpsl
lock
xchg
or
outsl
lcallw
and
add
mov
rcll
je
jmp
adc
sub
arpl
push
sti
or
lods
sub
loopne
mov
mov
cmp
insl
mov
or
push
push
xchg
lea
ss
sbb
aam
mov
cmp
jecxz
test
jo
aam
lods
mov
lock
xchg
lds
jae
stos
daa
jmp
js
adc
push
ljmp
cmp
jecxz
into
lret
xchg
xchg
out
mov
call
jl
dec
sub
aam
inc
sbb
test
lret
jbe
repnz
stos
fbstp
xchg
dec
stos
push
pop
pop
sbb
scas
dec
cmpsl
ficoml
inc
jecxz
push
imul
out
imul
jno
or
jmp
pop
mov
jge
add
sbb
out
out
int3
mov
or
dec
pop
xchg
lock
test
imul
sub
pop
out
lock
test
pop
idivb
or
pop
sub
push
iret
into
and
daa
push
outsb
mov
cli
outsb
xlat
jo
push
pop
cmp
scas
inc
lea
lcall
and
shr
mov
aam
sahf
cmpsl
xor
ljmpw
nop
pushf
inc
ss
and
push
int
insl
jae
ret
push
outsb
aas
das
in
inc
adc
jg
lea
ret
pop
out
mov
int
into
enter
movsb
out
jmp
or
push
sti
mov
sub
out
movsl
gs
fwait
lods
push
pop
pushf
repnz
loop
adc
pop
lods
mov
cwtl
sarl
xchg
jle
scas
daa
stos
xor
sub
or
outsb
call
addr16
hlt
movb
push
cmp
es
adc
inc
fstps
adc
jb
sub
and
pop
cmpsl
pop
cmp
inc
mov
scas
nop
fsubrs
sub
testl
xchg
loope
adc
xor
push
dec
sbb
addl
cmp
mov
pop
lcall
pop
lock
push
je
jae
dec
movb
repz
ret
mov
ja
ja
and
stos
movsb
std
push
jmp
jns
scas
lcall
jp
and
xor
jmp
leave
adc
push
jg
xor
pop
fs
fs
insb
pushf
cmp
xchg
fisubl
icebp
rorl
in
mov
ret
subb
stos
out
lea
loope
fsubr
into
push
fisubl
inc
fs
mov
jg
sub
movsl
cmp
push
data16
mov
popf
cmp
ret
hlt
or
stos
pop
mov
cltd
mov
fsub
cmc
pop
dec
rclb
xlat
lret
ds
inc
jns
std
or
aaa
adc
ja
mov
inc
jmp
jno
sbb
inc
mov
jp
sbb
repnz
mov
mov
sbb
loopne
dec
cmpsl
and
add
nop
mov
xchg
xor
stc
cwtl
add
sub
inc
loopne
mov
jo
push
mov
fwait
mov
jmp
lods
jmp
in
cs
mov
in
jecxz
mov
addr16
push
or
jge
dec
sbb
push
jo
jl
push
cmp
adc
pop
leave
add
lods
shrb
int3
lcall
stos
and
xor
arpl
lock
push
lock
mov
cmpsl
test
repz
lret
adc
jp
je
fisttpll
xchg
xchg
mov
ss
pop
rorl
aaa
fists
dec
rcl
adcl
repz
add
and
sbb
jg
rcrb
mov
iret
sbb
push
out
xchg
clc
dec
loopne
add
rorl
sub
nop
int
mov
fnsave
inc
cld
pop
ret
dec
scas
jae
mov
xchg
ja
inc
push
not
mov
mov
lcall
fisubl
mov
xor
push
sbb
fwait
shlb
jo
mov
xor
jmp
out
adc
in
fnstcw
stos
sub
inc
mov
cmpsb
push
cld
hlt
mov
mov
dec
scas
push
jae
lods
inc
call
sub
shrb
outsl
cmc
fs
pushf
mov
xchg
test
adcl
mov
test
push
mov
movsb
mov
scas
bound
leave
nop
fsubs
clc
fadd
sti
rolb
push
and
fdivp
mov
dec
into
movsb
sti
in
dec
jnp
xchg
dec
mov
sub
movsb
and
lods
aam
xor
sbb
cmp
rolb
mov
shlb
mov
sbb
xchg
jecxz
std
cmpsb
psubusb
adcb
adc
and
in
jb
xchg
imul
decb
cmp
mov
inc
popf
or
and
xchg
mov
shlb
cmpsl
out
inc
movsb
push
jbe
xchg
add
pop
aaa
lret
fiaddl
add
mov
test
fimuls
add
shrl
scas
in
jmp
fistps
pusha
push
dec
pop
cwtl
aam
loope
xchg
popf
adc
and
xchg
addr16
push
popa
dec
lock
shll
xor
fimuls
adc
nop
mov
shll
xchg
sub
inc
sbb
inc
push
xor
sbb
add
adc
push
and
dec
cmpb
pop
mov
jle,pn
jg
xlat
shlb
outsl
shlb
cli
push
push
pop
push
xor
dec
xor
out
add
or
sub
sbb
scas
wrmsr
ret
lahf
adc
push
add
out
cmc
jl
pop
mov
xor
jae
enter
push
sub
bound
aad
mov
lahf
clc
xchg
rcl
push
pop
xchg
fsubl
stc
insb
or
aad
repnz
cs
lds
pop
fldl
cwtl
add
xchg
and
aaa
cmp
sbb
je
daa
jae
xor
pmullw
adcb
adc
push
popa
cmp
inc
add
add
cwtl
mov
push
or
mov
rorb
lock
push
daa
aad
mov
jno
movsb
daa
in
jp
and
add
nop
sub
lret
cmpsl
xchg
xchg
test
mov
mov
idivb
in
les
push
lods
adc
jl
sbb
std
rorl
imull
mov
cmp
and
dec
neg
nop
dec
xchg
pop
push
loopne
sbbl
leave
mov
adc
xchg
imul
xor
pop
sbb
ja
mov
push
ss
sub
stos
das
fistl
or
sbb
push
sub
jbe
cli
add
dec
arpl
test
mov
add
inc
dec
rcr
mov
dec
push
mov
jmp
mov
jmp
mov
pop
pop
mov
jl
mov
cs
mov
cmpsl
jne
andb
adc
xchg
out
push
jo
pop
hlt
jge
inc
dec
mov
jp
scas
test
imul
flds
fsts
js
popa
xor
outsl
sub
or
and
adc
push
loop
popa
ss
or
lods
dec
shrl
mov
pop
dec
stos
ficomps
aaa
xor
dec
je
in
add
add
repz
lock
push
or
cs
mov
ficoml
and
inc
int3
pop
daa
lds
arpl
jmp
sbb
mov
cmpsb
inc
mov
jle
xor
jg
push
pop
fdiv
aad
cmp
outsl
push
mov
mov
aas
int3
aaa
add
test
add
fidivrl
or
shll
jecxz
sub
fildl
mov
add
cli
jmp
xchg
mov
or
cmc
pop
lds
arpl
cld
inc
imul
push
pop
aad
xchg
jno
psraw
adc
xor
mov
stc
sub
out
xchg
mov
xchg
sbb
scas
int3
leave
lret
dec
dec
les
cmc
cmp
cmp
jle
cltd
lock
dec
frstor
sbb
inc
xor
rep
sahf
into
int
repnz
jge
mov
leave
jg
push
and
pop
notb
das
ret
imul
pop
lret
adc
imul
xorb
mov
pop
test
mov
mov
test
pop
and
dec
pusha
sub
add
das
pushf
pop
cwtl
jg
in
jo
js
mov
cmpsb
or
lods
fimull
jne
popa
hlt
jecxz
fs
loop
leave
add
repnz
es
les
jmp
loop
or
inc
ljmp
push
stos
out
scas
cmp
cmpsb
lret
and
popl
pop
jne
xchg
bound
fldl
pushf
mov
xlat
js
fnstsw
cwtl
add
ljmp
pusha
les
add
jmp
and
popf
xor
loop
push
cmpsl
mov
mov
jp
ret
enter
adc
inc
jp
fisttpll
push
push
cmp
push
cs
stos
pop
dec
push
stc
outsl
sti
xor
jns
jl
int3
and
cmp
test
dec
arpl
orl
movsl
shl
push
test
into
xor
test
push
lock
and
mov
jo
in
in
popf
test
mov
shrl
inc
jg
test
cltd
test
push
repnz
mov
pop
dec
sti
xchg
pop
xchg
xchg
or
fstpl
cmc
pop
xor
dec
sub
mov
test
aam
cmp
inc
sub
xor
ret
sbb
dec
ss
popa
imul
enter
mov
add
enter
xor
adc
lea
lret
icebp
adc
std
cmp
rorl
mov
or
scas
nop
and
and
xor
and
movsb
sub
inc
out
fnstenv
add
std
bound
aas
and
jle
adc
sub
cmp
inc
popf
push
pop
push
pop
aad
xchg
add
push
lds
xchg
add
cmp
mov
das
push
sub
test
sbb
lret
arpl
scas
jmp
and
movsb
adc
xchg
push
sbb
test
icebp
pop
test
xlat
js
xchg
sub
int3
sbb
or
clc
push
scas
fistpl
lret
inc
loop
push
dec
sbb
insb
adc
imul
push
enter
je
int
jb
cmpsb
jl
xchg
in
out
sub
xchg
mov
data16
sbb
sbb
push
in
mov
or
adc
loope
sub
adc
aaa
cli
icebp
sbb
mov
lods
adc
push
call
sub
stc
mov
in
pop
xchg
fstpl
xchg
mov
mov
sub
mov
inc
scas
out
mov
fldcw
push
roll
sub
cmp
sbb
js
cmpsb
test
mov
cmp
jbe
stos
mov
aad
xchg
testl
mov
or
cld
sub
push
sbb
mull
nop
jge
dec
add
daa
fnstenv
push
imul
ds
dec
pusha
mov
popf
clc
rcrb
and
shlb
add
or
or
cmp
nop
adc
push
adc
addr16
cli
stos
call
push
out
push
pop
dec
dec
cs
int
bound
push
jecxz
in
and
das
push
sahf
mov
daa
push
xchg
sbb
call
xchg
out
mov
or
cmpsl
call
inc
stos
das
stos
sbb
adc
cmp
fsts
push
xlat
in
outsb
mov
xor
inc
mov
fwait
in
sbb
inc
imul
cwtl
sti
and
inc
in
adc
aaa
cmpsb
lods
push
inc
rol
js
int
push
cwtl
lods
imul
cli
imul
aas
rol
mov
inc
rdtsc
inc
rolb
or
ficoml
mov
xor
rcrl
imul
mov
shll
mov
xor
pop
lods
or
jg
adc
fcomps
cld
pop
mov
xchg
inc
mov
and
lret
out
mov
and
or
std
outsb
cltd
cltd
aam
jmp
call
cmp
lcall
pop
clc
aaa
cmp
xchg
sub
cmp
or
js
sbb
pop
stos
pop
jbe
jp
inc
xchg
pushl
push
xchg
cmpsl
lea
inc
adc
xor
add
sbb
stc
sub
fists
lea
and
in
pop
lock
das
pop
lcall
mov
arpl
sub
mov
andb
push
mov
xlat
push
rclb
rolb
push
lods
divb
lds
add
or
divb
lds
adc
mov
sbb
inc
sub
shlb
call
xor
cmp
mov
dec
ror
test
or
cmp
shrb
mov
cvtps2pd
push
rorl
mov
lock
cmpb
andl
lods
test
xchg
imul
mov
mov
aaa
andb
out
ficomps
enter
sti
and
mov
sub
add
cmp
mov
mov
cli
cmpsl
nop
jg
jg
and
push
mov
mov
fwait
shlb
cmp
inc
xor
or
adc
inc
jg
mov
fcompl
xchg
iret
inc
inc
push
les
test
xor
or
dec
stos
sti
pop
std
xchg
cmp
jo
cmc
jmp
xchg
ret
je
lcall
aas
fsubr
mov
pop
pop
push
add
fst
clc
or
or
lcall
andl
movsb
mull
lods
jo
add
pop
pusha
lcall
push
xor
push
mov
aad
mov
inc
add
js
or
ds
orb
lock
fwait
jno
rclb
clc
pop
stc
out
or
add
add
popf
out
daa
call
or
add
adc
gs
test
fcoml
insb
daa
sub
mov
neg
into
cmp
or
nop
ret
lock
shlb
repnz
fidivrl
insl
pusha
andl
leave
ljmp
int3
pop
adc
pop
aas
std
pop
pop
or
cli
lret
jecxz
mov
inc
insl
frstor
push
jp
data16
insb
out
daa
int
lahf
xor
pop
clc
jmp
test
inc
sbb
and
pop
cmp
loop
ss
mov
add
lds
cltd
cltd
dec
test
stos
outsb
push
mov
scas
pop
in
xchg
imul
fcmovnbe
fistl
je
inc
int3
pop
out
out
data16
mov
daa
fsub
mov
xor
pusha
ja
lcall
pop
lret
test
sub
mov
xor
mov
push
mov
cwtl
outsl
add
or
or
out
test
inc
dec
mov
inc
les
xchg
pop
and
out
arpl
mov
repz
xor
cmpsl
fnsave
xchg
mov
dec
mov
dec
or
or
inc
imul
fldcw
aaa
pop
push
xchg
cmpl
aaa
sub
aad
sub
aaa
in
push
lea
sbb
je
adc
fldt
lea
jns
cmp
ds
mov
hlt
mov
mov
ss
repnz
xchg
cltd
sub
sbb
pushf
jp
and
xchg
hlt
jbe
scas
push
cmp
pop
icebp
or
pop
insl
mov
insl
insb
icebp
out
push
lds
iret
iret
inc
ret
jmp
mov
cmp
lahf
cmpsb
into
lret
test
push
add
or
mov
out
fcoms
jne
fidivrl
sub
xchg
stos
rcrl
out
movsl
sbb
or
test
ret
hlt
out
stc
mov
jns
mov
stc
inc
or
out
sti
mov
xchg
jge
push
fidivs
enter
lods
lret
xor
dec
fnstenv
addr16
xchg
and
shll
enter
push
pushf
adc
cmp
sti
mov
or
ljmp
mulb
dec
sub
or
dec
das
and
lock
cld
pop
mov
leave
pop
push
aaa
sub
repz
scas
fnstenv
xchg
ja
add
sbb
mov
pushf
sbb
lea
fs
repnz
mov
adc
leave
ret
into
xor
adc
mov
push
push
sti
push
pop
sbb
jmp
pop
push
xor
ror
xchg
jp
sbb
loop
shrl
or
es
es
pop
xchg
dec
out
cld
repz
mov
or
xchg
rorl
mov
or
pusha
cmc
int3
cmp
xchg
fwait
daa
xor
fsubl
xchg
adc
in
dec
mov
or
pop
and
push
ljmp
out
scas
cld
mov
arpl
mov
dec
inc
push
jb
into
xor
and
repnz
pmulhuw
mov
popf
int
pop
cmp
mov
orb
and
pop
test
xchg
push
mov
sar
stos
xchg
push
xor
or
xor
mov
iret
mov
push
push
inc
and
addr16
sub
mov
or
cmp
push
pop
cmpb
sar
sbb
shlb
sbb
cmp
scas
push
stos
jmp
push
and
cmpsb
imul
sahf
mov
add
daa
repnz
jno
cmp
jne
push
fnstcw
std
mov
lea
jmp
imul
and
lock
cs
daa
xor
dec
jae
jle
or
test
imul
jbe
imul
mov
fidivrs
loope
loop
jg
fbld
pusha
pop
xchg
popf
sbb
pop
jecxz
pop
leave
add
xchg
xlat
add
and
jnp
adc
jmp
xor
mov
push
mov
xchg
or
or
loopne
add
lret
cmp
and
pushf
sub
mov
nop
stos
sub
lret
inc
mov
in
arpl
mov
mov
add
sub
int
arpl
push
ret
inc
mov
adc
test
mov
push
push
bound
sbb
pop
scas
add
lods
lret
push
shll
mov
fwait
popf
lcall
mov
and
mov
cmpsl
or
subb
int3
cmp
push
lahf
in
movsb
insb
sbb
subl
push
cmp
mov
pop
out
aad
jne
pop
aaa
arpl
jg
pushf
rcrb
xchg
test
xchg
cmpsl
cwtl
add
mov
fsubs
mov
jmp
jae
test
push
insb
push
push
repz
sub
std
cld
rcl
movsb
test
sub
ja
add
mov
fcomps
cmp
pop
pop
pop
es
cmp
dec
ds
clc
push
push
aaa
in
insb
adc
cwtl
enter
shrb
or
push
ljmp
rcrl
mov
xchg
roll
shl
mov
or
out
stc
ja
cmp
jecxz
pushf
or
orl
jb
mov
ljmp
mov
rclb
sub
pushf
push
adc
pop
fisubrs
sbb
out
popf
xchg
mov
nop
aaa
mov
lods
cmpsl
into
and
cwtl
dec
inc
sbb
xchg
pop
popa
cmp
pop
jmp
mov
leave
decl
dec
fdivl
outsl
mov
and
sbb
jecxz
push
or
rcrl
xchg
scas
stos
aam
mov
inc
mov
add
in
and
and
xor
scas
push
xchg
xorps
mov
dec
hlt
repz
insl
movsb
push
and
repz
dec
dec
mov
xchg
test
lods
xor
mov
movsl
push
jecxz
or
inc
dec
sti
fimull
stc
push
jmp
xchg
das
cmpsl
sbbl
je
jae
add
jo
lock
jg
leave
cmp
and
mov
cmp
pop
cltd
lret
jge
sbb
int3
jl
js
fadd
stc
sub
add
movsb
mov
insb
fbld
negb
ret
cmp
mov
sbb
into
rorb
lock
call
xchg
subl
inc
shlb
aaa
stos
mov
push
enter
pop
jle
xor
loopne
outsb
inc
test
lods
fs
cmpsb
aaa
sub
push
jb
test
push
sarl
cmc
push
into
mov
rol
inc
jmp
sub
sbb
cmp
push
adc
vmwrite
sbb
lea
push
dec
stc
sbb
je
stos
push
cli
in
repnz
xor
ljmp
or
cmc
inc
inc
cmp
scas
in
lods
in
adc
inc
repz
popf
xorb
jle
and
cmp
dec
addr16
sub
ret
mov
xchg
sbb
out
xchg
in
insl
adc
or
imul
or
fbstp
pop
fadds
pop
xchg
loope
or
mov
icebp
ljmp
cmc
add
cmp
mov
cli
icebp
dec
inc
sarl
mov
fisttpl
cmp
cli
roll
xor
jg
jecxz
fdivl
pushf
ret
jnp
jbe
inc
out
mov
sbb
jne
pop
adc
xor
in
ffree
cmpsb
adc
out
xchg
daa
cltd
lret
inc
jnp
jecxz,pt
pop
js
inc
cmc
jg
mov
and
cmc
lea
mov
mov
stos
push
cmpsb
cmp
mov
xor
mov
cmpsl
popw
in
mov
or
mov
data16
and
stos
or
rcrb
mov
enter
jg
fnstsw
movsl
xlat
sbb
pop
std
push
out
mov
pop
aas
cmp
jmp
pop
xchg
fmul
cmpsl
into
lret
mov
jl
jbe
adc
push
xor
cwtl
sarb
jno
outsl
shrb
fstl
test
pop
mov
mov
lret
ret
or
add
scas
adc
mov
push
pop
pushf
aad
sar
mov
or
repz
std
fisubl
push
mov
into
sbb
into
in
mov
into
fmul
push
jecxz
xchg
testl
pop
jnp
sub
ja
shll
cli
jbe
je
pop
clc
arpl
addb
fidivl
shrl
and
mov
loopne
lahf
inc
xor
test
fisubrl
out
daa
push
or
imul
aam
ds
mov
mov
cltd
pop
mov
mov
jmp
dec
adcb
xor
in
adcl
and
sbbb
add
push
fists
in
outsb
cld
inc
push
lock
inc
fldt
loop
test
mov
fbstp
shl
lods
sti
push
out
lods
testl
je
les
dec
jecxz
inc
test
shr
xchg
push
frndint
out
or
jbe
cmp
jge
nop
outsb
icebp
daa
jmp
mov
sub
cmp
mov
xor
scas
sub
and
xor
std
mov
or
add
aam
sub
mov
inc
test
dec
int
into
jae
jns
and
add
jnp
aad
mov
jmp
pushf
push
in
inc
inc
lock
lea
push
xchg
jae
dec
pushf
mov
lock
adc
cld
int
cmp
pop
jg
xor
and
nop
fs
push
push
ret
movsl
xchg
mov
dec
aad
inc
push
popa
mov
ret
into
cmp
dec
outsl
inc
xchg
imul
inc
cltd
aam
nop
mov
or
cs
jg
test
cmove
arpl
test
xorb
adc
mov
pop
add
xchg
leave
lds
mov
xchg
xchg
ds
ret
push
mov
or
or
pop
pop
sahf
sbb
ss
inc
xchg
mov
ja
xchg
mov
fs
aaa
dec
push
cmp
jle
or
pusha
outsl
cmc
outsb
xorl
or
xchg
iret
outsb
jl
add
dec
frstor
sbb
xchg
xor
in
dec
fucom
aaa
cmc
or
mov
and
mov
push
xor
cmpsl
cmp
sub
ficompl
cmp
insb
repnz
das
xor
mov
pop
cmp
aas
ds
jge
add
xor
out
xlat
js
inc
mov
aaa
test
jbe
mov
int3
into
push
jg
decb
outsl
shrb
in
test
jae
cmp
sbb
dec
pop
lods
jne
jle,pn
in
mov
xchg
test
pop
iret
popf
roll
lcall
ret
clc
jp
inc
pop
test
lock
push
mov
enter
popa
mov
xor
inc
and
push
xor
out
inc
mov
cmp
daa
pushf
ljmp
sbb
mov
lahf
mov
imul
xchg
test
adc
cmpb
pop
or
xor
jo
sarb
add
rcrb
dec
jecxz
jno
xor
mov
les
mov
outsl
inc
lahf
sbb
lods
pop
pop
das
bound
test
pushf
sbb
xchg
push
fcmovnb
mov
js
inc
test
cld
jne
cmpsl
sarb
test
jbe
lahf
divl
jb
push
adc
mov
cmp
push
sar
rclb
xor
push
xchg
mov
cmp
push
mov
cmp
gs
aaa
aas
adc
movb
jnp
jne
sahf
shlb
mov
cwtl
pop
int3
push
adc
and
divl
push
call
mov
xchg
int3
sub
push
test
add
shll
push
and
test
movsb
mov
mov
and
lret
fidivrl
push
pop
cmpsb
adc
and
cmpsb
dec
icebp
aam
popf
xchg
test
push
fisubl
jl
faddp
jnp
popf
mov
rclb
es
cld
sub
jbe
pushf
mov
imul
inc
ss
cs
pop
je
hlt
dec
shll
cmpsl
cld
cli
test
repz
mov
mov
sub
outsl
movsl
in
clc
push
xchg
xor
jae
xchg
divl
jne
xor
addr16
repnz
jnp
mov
pop
and
subl
adc
es
adc
or
cli
mov
and
gs
mov
dec
and
sub
andb
adc
testl
push
jg
xor
sti
scas
dec
cld
or
repz
out
orb
std
and
xor
push
mov
mov
pop
fistpl
cmp
fldenv
and
dec
jns
mov
or
and
popa
sbb
cmp
fwait
enter
repz
xor
daa
and
into
xlat
das
loope
outsb
lcall
inc
ret
xor
cmp
mov
int
push
mov
out
call
mov
xchg
jnp
jp
jge
lods
addr16
pushf
cmp
push
lret
or
mov
sub
xchg
mov
rolb
inc
sub
rcrl
mov
inc
jno
ljmp
leave
fdivl
push
rcr
sarl
lret
add
mov
sub
imul
repz
xor
or
push
mov
xor
bound
je
xchg
and
add
xchg
lcall
stos
mov
rcll
and
decb
xchg
xchg
int
das
sbb
mov
mov
lahf
stos
popf
jne
mov
std
repz
jae,pt
mov
imul
xchg
ss
cld
sar
push
stc
shll
cld
out
outsb
clc
insl
cs
hlt
out
add
lods
pop
in
mov
adc
inc
mov
xchg
lea
sbb
and
jbe
loopne
nop
xchg
dec
incl
lcall
rorl
push
push
mov
mov
mov
ljmp
cmpsw
xlat
cmp
jl
into
sub
mov
dec
pop
insl
inc
sub
inc
jge
mov
xchg
or
and
pop
xor
es
lahf
ret
daa
sahf
int
lods
cs
int
push
sahf
jle
sub
repz
add
xchg
jle
popa
lock
fsubrl
xlat
bound
fdivrl
imul
das
mov
ret
mov
dec
dec
jbe
adc
lds
outsl
push
xchg
push
lock
out
js
test
pop
fcomps
outsb
inc
addr16
arpl
or
push
sbb
test
push
xor
aam
in
sbb
push
sbb
or
ficoms
pop
jmp
loopne
dec
xor
inc
iret
sub
push
loope
sub
lret
aas
andnps
dec
cmp
ret
clc
mov
fistpl
popf
push
gs
cld
ds
jp
es
dec
jl
pop
fsub
loopne
addr16
clc
ja
inc
js
iret
es
mov
cwtl
mov
scas
add
add
adc
add
and
lea
jno
clc
mov
adc
shrl
xchg
loope
enter
dec
in
inc
iret
jle
lret
pop
and
out
xor
push
xchg
fwait
notl
insl
push
cmp
add
push
test
mov
add
mov
shrl
and
out
xchg
sub
xchg
sub
inc
test
cwtl
sbb
cmp
inc
pusha
insw
fisttpll
fistpll
inc
loopne
repnz
imul
mov
fs
sbb
pop
cltd
mov
test
cmp
lods
mov
pop
sbb
insl
sub
jg
ficompl
sbb
add
nop
pop
add
test
mov
out
lret
fisubrs
pop
decl
add
stos
shll
push
loope
mov
subl
jae
inc
test
xchg
stos
xor
repz
fmull
mov
pushf
fldenv
popa
inc
cmp
and
pop
lods
inc
mov
push
pop
fcoms
sbb
dec
mov
out
pop
cmp
pop
sub
cmp
daa
sbb
icebp
icebp
pop
jge
icebp
fldcw
sub
imul
mov
test
jo
cmp
iret
mov
mov
pop
mov
xor
jmp
lcall
sub
imul
js
jae
mov
je
and
stc
inc
sub
or
je
pop
jecxz
cmp
adc
cmc
pop
out
mov
push
xor
fcomps
add
dec
add
push
ljmp
push
lea
mov
and
push
iret
fwait
sbb
xor
stc
imul
clc
popl
dec
add
mov
inc
dec
cmp
inc
or
mov
pop
xor
jbe
xlat
pop
or
movsb
fs
popf
cmc
mov
aaa
mov
cmpsl
jnp
fwait
and
mov
xor
jmp
pop
mov
add
movsl
sbb
out
cmpsl
pop
add
lahf
rorb
jle
mov
adc
inc
nop
scas
jp
sub
pop
xchg
adc
cmp
lock
mov
push
add
pusha
test
pop
jne
cli
lea
in
test
daa
pop
call
lcall
js
ret
push
dec
jno
fidivs
cmp
stc
insb
test
jg
add
jne
ret
test
scas
ret
pop
lret
into
push
fwait
add
sbb
mov
push
testl
mov
sbb
imul
and
cmpsl
cli
mov
inc
xchg
or
lret
inc
or
lea
dec
fwait
mov
loop
cmp
mov
or
outsb
push
test
add
mov
repnz
leave
outsb
xchg
cld
daa
and
xor
cwtl
sahf
mov
mov
sub
xor
pop
xchg
out
shll
pop
mov
adc
insb
cs
adc
mov
rcrl
and
int3
jecxz
mov
fstpl
loopne
pop
ret
stc
adc
xor
xlat
insl
sub
insl
hlt
lahf
mov
inc
loopne
mov
inc
jl
adc
xchg
out
int
mov
pop
jo
rorl
rcrb
lcall
mov
lea
stos
jb
cmpsb
add
out
std
mov
and
mov
xor
lahf
rorl
cmpsb
cmp
add
inc
pop
movups
divl
mov
movsl
out
imul
dec
mov
adc
out
loop
jmp
cltd
fisubrs
hlt
fimull
mov
push
dec
test
call
gs
fcoms
test
push
in
call
and
adc
mov
notb
loope
arpl
xor
sbb
xchg
mov
inc
sbb
out
shl
stos
cld
cmp
mov
test
std
add
fiadds
pop
repnz
lcall
lahf
mov
or
test
pop
mov
jmp
out
adc
adc
mov
es
cmp
pop
dec
xchg
mov
popf
aaa
repnz
xchg
cmc
sbb
fwait
dec
xor
dec
insl
js
lods
push
xchg
inc
mov
test
pushf
roll
data16
push
bound
xor
mov
js
test
jge
push
aam
sub
jns
adcl
fcom
push
out
aaa
rcrl
mov
std
or
movsl
and
jge
push
sbb
nop
mov
push
ficoms
dec
sbb
dec
mov
pusha
loopne
lret
pop
add
inc
dec
ror
mov
sbb
into
pop
fmuls
loope
pop
mov
cmp
es
ljmp
das
sub
xor
xchg
stos
mov
jne
push
jp
mov
sbb
inc
imul
jl
jg
inc
lcall
xchg
jo
pop
adc
fcmovbe
xlat
call
shrl
mov
push
lcall
xchg
aaa
imul
popa
mov
rorb
pop
mov
icebp
mov
jno
mov
and
or
push
testb
sub
pop
mov
push
cmp
or
push
push
pop
cltd
fstl
adc
stos
and
jg
jbe
and
popa
mov
push
add
lcall
fisubrs
jg
push
or
mov
push
sbb
sbb
or
bound
push
jg
sbb
psubq
fs
pop
movsl
pop
jno
and
sub
xor
add
dec
mov
fmul
mov
xor
pop
scas
adc
jno
dec
sub
das
and
and
fstl
mov
mov
fs
push
std
jns
inc
test
mov
dec
mov
mov
cmp
pop
mov
adc
aas
push
cmp
add
cs
movsb
scas
sti
scas
jecxz
or
xor
test
test
sbb
sbb
ss
sahf
and
pop
sub
repz
cmp
fcmovnbe
leave
lds
and
leave
outsb
rolb
sti
popf
cltd
xor
or
repnz
add
mov
insl
fs
xchg
test
loopne
test
add
mov
sahf
mov
scas
cli
out
insl
stc
scas
jne
inc
mov
lock
push
mov
loope
push
pop
cld
pop
add
jmp
xchg
arpl
mov
orb
fnsave
inc
xchg
xchg
xorb
jne
xchg
push
mov
push
cmpsl
andl
imull
jns
dec
xchg
push
ret
push
je
hlt
out
out
je
lahf
into
movsl
cmp
dec
inc
in
aad
popf
lea
xchg
popa
popa
sbb
sub
push
fs
push
xchg
fnstcw
mov
pop
sbb
mov
cmpsb
jge
mov
and
pop
fldenv
jl
sahf
hlt
insb
push
inc
mov
fists
adc
cmpsl
sahf
push
call
jmp
fstpl
jecxz
or
ljmp
js
je
je
shll
or
or
mov
ficoml
or
mov
aam
jno
push
pop
pop
lcall
jp
cmpsb
fiadds
cmpsb
dec
sarl
test
inc
inc
bound
int3
cmp
sbb
dec
fxch
mov
jge
daa
lahf
out
call
mov
fists
test
mov
xor
and
sbb
add
mov
jl
push
bts
and
adc
sbb
lock
das
out
inc
xchg
sub
test
or
pop
outsl
int3
cs
and
sets
xor
fwait
inc
dec
dec
shrb
pop
mov
and
fwait
xchg
sub
pop
xchg
daa
pop
roll
mov
fstp
jle
loop
adc
xchg
out
mov
sar
cmpsl
xchg
mov
pop
fbld
jb
mov
std
or
lcall
mov
adc
adc
mov
mov
jno
ljmp
lock
pop
mov
inc
mov
js
xor
pop
add
pop
sub
and
ljmp
add
jbe
jnp
stos
cltd
std
pop
mov
pusha
adc
mov
or
pop
pushf
rolb
sarb
ds
cmpsb
mul
int3
pushl
int3
dec
outsb
ffreep
push
sbbb
rol
out
mov
jb
push
cli
jmp
pushf
mov
lret
ds
pop
lods
insb
jmp
mov
mov
add
xchg
sub
push
pop
sahf
pop
jb
test
mov
xchg
mov
xor
imul
xchg
icebp
stc
pushf
aad
lds
jl
repz
cmc
rcrl
mov
mov
cmovno
cltd
js
imul
xchg
push
test
push
bound
mov
cli
sbb
mov
sub
or
jns
out
shlb
dec
mov
push
lret
xlat
movsb
pop
mov
bound
iret
enter
pop
and
out
mov
xchg
cmp
mov
mov
xor
data16
in
loop
pop
mov
repz
rolb
mov
sub
iret
imul
cmpsl
mov
jns
loop
pop
jle
pop
mov
lea
adc
push
dec
sub
cmp
jecxz
in
cld
add
les
fcoms
adc
gs
xor
add
pop
hlt
call
mov
jecxz
mov
mov
add
pop
inc
jl
lret
mov
mov
lahf
daa
addr16
fiadds
loop
in
mov
or
ja
cmc
lahf
insl
lods
jecxz
lods
adc
rcrb
adc
and
js
cmova
notl
mov
arpl
cmpsb
dec
test
mov
cmpsb
stos
ds
ds
repz
sbb
hlt
push
mov
cltd
sahf
cmp
or
dec
into
das
mov
ret
inc
push
je
adc
je
cmp
fsts
imull
inc
aas
xor
cld
lret
ror
sti
rol
pop
xor
jnp
popa
rcrl
cwtl
push
push
aad
movsb
jge
inc
pop
mov
cwtl
es
fsubrl
mov
inc
sub
inc
sbb
arpl
pop
dec
mov
repz
scas
js
push
pop
fldl
aaa
xor
or
pop
inc
test
insb
jl
js
cs
in
stos
rclb
cmpsl
mov
xchg
jl
stc
jp
stc
lods
inc
mov
xor
xorb
loop
inc
dec
mov
jle
mov
movsl
leave
psubq
imul
gs
js
cmc
fisubs
in
scas
imul
cmpsb
lret
shlb
lcall
imul
push
lret
iret
loop
repz
adc
popa
icebp
loop
jp
mov
xchg
mov
or
mov
adc
jg
xchg
xor
xor
xchg
fdivr
sti
jae
adc
int3
outsb
cmp
mov
mov
sub
sbb
sarb
jno
push
mov
leave
stos
fsts
xchg
pop
jae
sub
ror
xor
popa
sti
insb
test
sub
inc
adc
popa
jnp
xor
jge
out
in
adc
xchg
mov
incb
xchg
lret
xor
mov
add
fiadds
and
or
add
sbb
sbb
or
mov
ds
test
pop
in
or
cmova
jb
xchg
mov
dec
lcall
inc
xor
divl
adc
out
adc
call
imul
mov
sub
and
jnp
mov
xchg
insl
xor
enter
add
jns
push
sahf
rorl
enter
mov
in
out
or
loopne
test
jbe
in
dec
mov
gs
rol
jnp
loopne
sub
popa
push
cmp
push
cmpsl
pop
pushf
cmp
cmpsl
xchg
push
inc
dec
and
fwait
adc
sbb
mov
lret
pop
push
xor
dec
in
icebp
pop
sbb
ja
ffree
subb
jecxz
or
movsb
aad
add
sarb
cmpl
lock
imul
ret
arpl
mov
repz
out
inc
in
out
sahf
repz
or
add
and
icebp
addr16
inc
leave
cmpsl
mov
and
ret
dec
enter
daa
shlb
push
xchg
pop
xchg
testl
les
test
or
pop
sbb
xchg
testb
ficoms
pop
mov
add
add
xor
test
push
sbb
mov
stos
mov
lret
sub
mov
int
cmpsl
mov
in
mov
scas
sub
js
stos
loopne
mov
add
sub
clc
aad
and
mov
add
jg
fdecstp
mov
dec
dec
inc
push
xchg
fisubrs
test
adc
mov
mull
cmp
and
add
test
loope
cmp
adc
xor
iret
jno
or
fdivrl
addr16
call
addr16
cmpsb
loope
lods
adc
pop
rcr
adc
mov
pop
leave
mov
cmpsl
fdivrl
fdivrl
push
and
jae
mov
imul
les
or
or
dec
inc
iret
test
jns
insl
ljmp
test
jecxz
jmp
push
inc
rolb
hlt
rcrl
out
test
popa
mov
addr16
mov
fsubrs
clc
mov
push
js
xchg
mov
xchg
dec
mov
mov
push
push
into
sub
or
mov
push
push
dec
push
mov
sbb
jae
out
sbb
cmp
movsl
jae
xor
pop
cmp
push
and
cmc
pop
aas
add
fmuls
popa
daa
je
mov
out
daa
fcoms
dec
addl
test
push
pop
mov
add
inc
mov
popl
adc
xor
stos
add
stos
sbb
leave
mov
push
mov
jmp
mov
and
or
jle
ja
imul
push
jb
mov
aaa
sbb
push
xchg
mov
xor
adc
mov
cmp
adc
fsubrl
lock
lds
ret
push
push
loop
dec
dec
pop
sbb
pop
mov
cli
pop
push
pushf
fldl
pop
mov
inc
jmp
and
xor
stc
fwait
and
cmp
lea
push
pop
xchg
xchg
fadd
roll
and
test
imul
rcr
mov
out
cmp
xchg
sub
mov
clc
frstor
in
sarb
fstl
mov
adc
mov
fisttps
rol
sbb
rorl
fstpt
insb
int3
mov
rclb
jge
out
pop
sahf
pop
stos
jo
xor
add
pop
inc
push
cmc
adc
sbb
or
mov
ljmp
dec
ret
out
sbb
cmpb
aad
dec
stc
mov
mov
sbb
push
lods
xlat
stos
mov
xchg
test
aaa
insl
stos
addr16
lds
sbb
dec
dec
ffree
sub
mov
cmp
cli
adc
cmp
fmulp
xchg
cmp
push
add
push
mov
rcrb
adc
mov
mov
mov
enter
push
mov
xchg
mov
pop
int
pop
cmpb
inc
stc
mov
add
dec
mov
sbb
and
in
pushf
test
push
fiaddl
adc
fstpl
lea
and
fcom
xchg
and
in
sbb
mov
xor
and
xlat
out
mov
mov
xchg
dec
inc
sub
ror
mov
sub
stos
ja
repz
lea
cli
iret
shrl
test
xchg
movsb
push
push
pop
xor
gs
stos
jbe
jb
scas
push
icebp
std
dec
inc
pop
mov
in
test
loope
cmp
aad
lahf
mov
jo
sub
xchg
iret
pmuludq
xorb
push
scas
outsl
js
cltd
push
out
mov
mov
adc
rcll
jl
out
sarb
jge
or
xchg
lahf
outsb
jne
jno
dec
add
shll
dec
push
fistl
imul
pop
inc
rep
cmpsl
jmp
loopne
pop
mov
into
ret
out
mov
push
fwait
out
and
sarl
adcl
fstl
ja
es
enter
push
jnp
cs
lahf
mov
sbb
stos
insb
pop
sarb
jmp
addb
lds
xor
daa
or
jecxz
fsts
mov
int
pop
and
rorl
xchg
cmc
popf
jno
sbb
in
mov
ftst
movsb
cltd
ds
cld
mov
and
or
xor
cmp
loope
pop
int
flds
in
jns
jecxz
adc
xor
pop
push
incb
mov
or
sub
js
push
add
dec
xchg
mov
xor
jle
push
pop
lds
sti
cmp
out
test
inc
inc
pop
movsl
faddp
sbbb
push
or
cmpsl
push
mov
insb
inc
out
jbe
xlat
lds
scas
fcoms
jb
inc
fsubp
mov
aad
pusha
jbe
sbbb
bound
push
ror
pop
cmp
fs
jg
push
and
and
in
arpl
int3
fdivl
sahf
lcall
mov
lea
insl
inc
in
enter
stos
cmp
push
rolb
dec
cmpsl
inc
out
mov
or
pop
jmp
and
push
in
in
pop
fs
adc
adc
add
das
push
push
fidivs
ret
std
out
daa
and
ficomps
ja
xor
int
pop
dec
pop
adc
mov
and
push
mov
xchg
sti
and
pusha
xchg
lds
add
mov
loopne
cmp
aam
push
imul
mov
clc
push
je
mov
push
jne
rcl
in
sub
loope
xchg
mov
fs
pop
inc
cli
push
jo
xchg
mov
cwtl
jecxz
inc
lea
rcll
lods
je
fisubrs
or
dec
xchg
in
jecxz
loope
fcmovne
mov
rcrl
popa
in
test
ss
iret
pushl
sbb
out
xorl
push
lret
sub
fidivrs
or
leavew
mov
cmpsl
jl
pusha
xchg
test
orb
inc
fistl
xchg
cmpsb
and
and
enter
mov
dec
data16
mov
sbb
mov
push
out
adc
add
sub
dec
or
add
sub
das
addl
pop
cmp
jg
push
xchg
push
push
xchg
je
pop
sbb
mov
push
repz
out
cwtl
add
mov
inc
adc
sub
lods
cli
es
fstpl
jne
cmovo
shll
jo
pushf
pushf
scas
lret
xlat
ds
sub
add
sbb
jne
mov
pop
sub
fiaddl
push
cmpsl
mov
inc
faddl
push
mov
cmp
xorb
stc
pop
loope
je
xor
fldl
imul
test
pop
dec
xchg
ret
cwtl
lods
push
or
sub
inc
test
dec
mov
pop
xchg
sbb
mov
aad
loop
jb
sbb
push
sub
out
inc
xchg
inc
out
xor
insl
xchg
push
std
add
push
fsubs
pop
lea
test
mov
testb
out
nop
push
pusha
fcomip
movsl
jbe
xor
std
jno
push
sub
ds
pop
cmp
dec
dec
xchg
jbe
sti
jno
or
clts
cmp
cmp
test
push
rcrl
fists
pop
out
and
call
push
cli
lret
mov
les
cmc
ret
out
rcrl
test
movd
fwait
nop
in
faddp
shrl
mov
imul
pop
mov
push
mov
xchg
int
shlb
mov
shll
out
sbb
adc
js
mov
xchg
push
mov
lods
pop
lahf
inc
shll
out
out
push
stc
rorl
lds
out
sub
imul
ja
mov
mov
addl
leave
leave
pop
gs
cmc
pop
ja
fsts
scas
pop
rorl
out
pushf
adc
add
cmc
icebp
pushf
incl
pop
dec
test
or
inc
dec
cltd
rcr
pop
fs
sbb
lcall
imul
xchg
mov
mov
mov
add
jmp
std
mov
outsb
and
cmp
into
adc
in
and
fwait
in
dec
xor
pop
push
sarl
fucomip
add
test
add
add
fsts
jns
in
sub
and
mov
rcrl
fdivl
notl
xor
mov
ret
dec
xor
jne
aad
jp
insl
pop
or
notl
mov
mov
scas
xor
lcall
and
mov
add
xchg
mov
xchg
sbb
pop
aaa
xchg
sub
cmc
xchg
lret
sbb
dec
push
fistl
mov
js
mov
insl
adc
lret
xchg
dec
lret
test
or
cmp
leave
xlat
cmpsb
repnz
mov
dec
fidivs
outsb
sbb
sbb
dec
push
pop
lds
aas
std
scas
xchg
out
and
add
or
ss
shr
inc
icebp
sbb
adc
shrl
clc
mov
xor
inc
inc
mov
pop
test
pop
mov
nop
xor
jb
and
dec
jns
ret
xchg
daa
sti
testl
stos
mov
mov
flds
mov
sub
or
cltd
pop
loop
movb
scas
add
and
push
push
mov
or
push
fwait
repz
pop
add
xchg
mov
mov
dec
out
pop
adc
mov
inc
out
stc
pop
sub
add
inc
pop
dec
ljmp
enter
aam
test
jg
sub
xor
push
lcall
cmp
inc
shl
add
test
push
je
inc
mov
sub
in
ds
push
xor
cmp
jmp
ss
aaa
movsb
sub
stos
sbb
out
sbb
clc
mov
aas
aad
mov
lea
loopne
and
nop
rcll
add
leave
fs
data16
fwait
add
dec
xchg
pop
orl
xchg
and
scas
pop
inc
nop
xor
sub
sub
das
aaa
lea
aas
ljmp
jns
ss
out
lods
jmp
jne
clc
lea
cmp
or
sbb
mov
cmp
das
sahf
pop
pop
jbe
inc
sbb
mov
pop
dec
sbbl
or
mov
or
js
out
add
fdivr
jo
jge
mov
mov
pop
into
cmp
pop
ja
sbb
div
mov
mov
cmpsl
dec
leave
jge
xor
mov
xor
xchg
or
pop
adc
add
xchg
dec
fs
outsb
inc
fwait
xchg
leave
pushf
int3
mov
cmp
inc
sub
arpl
ficompl
pop
fdivr
or
bound
inc
xor
pop
jbe
jp
add
cmp
call
lock
jb
mov
test
push
icebp
je
sub
lods
fsubs
inc
fsubp
jge
pop
scas
cmpsb
arpl
out
cwtl
mov
or
adc
cmp
aas
jns
data16
push
scas
out
ret
iret
ljmp
das
cs
loop
sub
xor
enter
lea
jg
xchg
sub
movsb
fdivrl
mov
lea
outsl
test
adc
inc
pop
test
idivb
lds
pushf
xchg
sbb
cmp
cmp
mov
mov
lret
sub
xor
push
sar
je
outsl
sub
pop
in
push
les
mov
pop
jo
xor
xchg
mov
in
fimuls
clc
scas
sti
mov
sub
xor
or
enter
call
fdivl
xchg
mov
imul
xchg
bound
sbbl
les
jbe
nop
mov
test
nop
mov
xchg
jno
in
mov
jge
scas
sub
jmp
fs
push
push
pop
outsl
in
mov
push
scas
pop
jne
adc
xchg
test
jb
inc
xchg
cltd
int
jmp
fsubrs
jp
fbld
dec
add
andb
sarl
jns
mov
jg
gs
js
rdmsr
movsb
inc
xchg
fcoms
sbb
out
testb
and
cmp
mov
xchg
dec
push
jmp
out
cmp
adc
push
mov
pop
dec
int3
in
je
add
mov
push
ja
popa
lahf
inc
cli
repnz
and
add
in
es
and
add
mov
inc
mov
jg
cmp
jns
xor
movsl
imul
push
vandps
aas
int3
daa
pusha
mov
mov
sbb
pusha
lret
lcall
pop
push
adc
dec
test
lahf
stos
lods
mov
dec
and
sub
dec
addb
push
shlb
jecxz
pushf
jmp
mov
and
ljmp
movsl
aaa
jo
mov
xchg
lret
arpl
mov
mov
mov
mov
ror
or
sahf
mov
in
lock
jp
mov
sub
cwtl
cmp
jmp
or
lret
imul
fcoms
cmp
sti
and
mov
lods
push
imul
fdivr
add
sub
pop
bound
pop
mov
sbbl
jbe
test
out
imul
mov
inc
cli
je
pop
cmp
icebp
jge
sub
insl
insb
nop
push
aaa
outsl
ss
stc
lds
ret
imul
pop
loop
mov
dec
jo
jp
mov
and
movsl
push
cmp
push
jge
int
sbb
or
mov
test
imul
sbb
or
test
jnp
and
int3
jnp
jno
loopne
adc
mov
pop
fs
or
popf
xor
mov
mov
fistl
dec
sahf
js
mov
cmp
cwtl
mov
mov
in
insl
test
push
sub
jns
sub
fs
arpl
cs
lcall
movb
sub
aaa
jo
outsb
push
or
push
imul
fmul
sbb
stc
test
loopne
nop
push
lds
adc
rcrl
cli
fisubs
fisubl
lcall
dec
scas
pop
mov
movsb
test
mov
push
sahf
push
mov
push
in
aam
testl
cmp
lods
lock
xchg
mov
or
push
dec
lods
cld
nop
add
scas
xchg
ja
cmp
sub
mov
adc
nop
pop
cmp
cmc
dec
gs
ds
mov
mov
jecxz
cmp
fldl
and
dec
ljmp
outsl
in
fwait
arpl
sahf
addr16
pop
mov
mov
int
pop
ret
inc
enter
clc
mov
cwtl
push
rolb
pop
iret
jg
pop
sahf
fidivs
sti
jb
fldenv
fsubs
jne
hlt
mov
or
scas
xchg
or
pop
mov
and
pop
and
pushw
cltd
fwait
add
inc
push
cmpsb
or
xchg
rorl
mov
hlt
out
lea
xor
fsubr
push
adc
pop
cmpsb
push
lahf
mov
jecxz
test
pop
jae
pop
push
push
push
les
push
sub
rorb
stos
jp
test
loop
cli
divl
or
pop
mov
sub
push
mov
lahf
int
cmp
jle
adc
mov
pop
push
inc
inc
xchg
mov
sub
mov
pop
aaa
in
dec
loope
clc
adc
aad
jnp
test
and
push
pop
out
iret
and
mov
fwait
mov
mov
loopne
adc
xchg
jecxz
xchg
pop
xchg
notl
stos
negl
push
cmp
xlat
mov
xor
sbb
in
mov
adc
adc
dec
jnp
mov
xchg
ja
int3
sbb
dec
cltd
jb
inc
mov
add
aam
xor
outsl
inc
inc
mov
add
and
pop
xchg
add
mov
out
outsl
ljmp
insb
xchg
push
add
jecxz
xlat
repnz
enter
and
mov
mov
cli
aas
icebp
mov
fistpl
ret
aaa
jae
cmp
dec
daa
out
mov
mov
insb
dec
icebp
jb
test
sarb
bound
lods
lock
mov
xchg
pusha
out
and
sbb
mull
push
stos
sahf
mov
jnp
fsincos
jnp
aaa
cs
xor
inc
mov
dec
mov
pop
movsl
mov
xor
fistpl
cltd
fchs
lods
xchg
repnz
jbe
das
mov
push
dec
rclb
cli
jmp
cmp
sub
cmp
insb
std
movsb
popa
enter
cmpsl
in
and
xchg
jge
push
nop
loop
xor
and
popf
fldz
mov
add
shlb
sub
or
sbb
testb
push
orb
sbb
arpl
pop
loop
mov
idivl
mov
push
adc
cmp
mov
push
jge
mov
mov
or
stos
xor
lods
add
push
cld
ds
popf
in
xchg
inc
inc
rclb
pusha
dec
add
stc
cbtw
inc
inc
repnz
mov
jne
push
lret
inc
aas
add
and
sbb
adc
int3
lds
fstps
in
rcrb
pop
mov
xchg
dec
mov
fdivr
sub
stc
call
mov
mov
and
rcrl
mov
dec
xchg
orl
ret
jg
mov
outsl
daa
sbb
rcrl
mov
push
test
pop
cmp
or
mov
arpl
sbb
mov
subb
sti
arpl
pop
pop
mov
insb
xor
mov
sbb
ja
dec
mov
mov
in
mov
add
pop
jmp
ja
movsb
shll
push
pop
ret
fmuls
scas
js
xchg
xchg
push
lret
into
pop
fcomi
push
jl
push
and
mov
je
jmp
and
mov
scas
inc
mov
out
out
lret
mov
jnp
cmp
scas
cmp
cmp
mov
xlat
clc
outsl
mov
xor
addr16
jnp
jl
jae
aaa
popf
aam
aad
pop
out
js
scas
xor
push
xor
fiadds
dec
mov
mov
lahf
inc
lods
shrb
out
add
inc
ss
xor
cs
stc
xor
ds
shlb
pop
push
push
ja
icebp
loope
sub
mov
popf
jo
xchg
cmp
mull
sub
jmp
dec
dec
cmpsb
rcll
xchg
shrb
inc
mov
mov
lcall
and
mov
fstps
add
xor
adc
sub
xchg
xchg
lods
jmp
mov
insl
loop
adc
mov
lods
leave
mov
cs
lret
daa
pop
mov
sbb
jl
leave
std
pop
lret
test
and
frstor
adc
aad
pop
jecxz
jp
mov
mov
scas
mov
push
lods
add
cmp
ds
roll
ja
pop
filds
push
or
negl
popa
bound
out
mov
lea
mov
mov
ss
pop
scas
cmp
jnp
cwtl
out
push
jns
push
inc
pop
outsl
repz
clc
lcall
mov
jns
add
jne
lea
in
aam
imul
jg
pop
shlb
mov
pop
ret
stos
shll
cmp
pop
insl
push
add
pop
dec
sarl
sbb
and
xorb
xchg
fwait
jbe
adcb
outsb
cmp
sub
scas
mov
add
mov
testb
mov
jge
sarb
inc
loopne
push
insb
pop
out
enter
les
xchg
xor
sahf
inc
ror
divb
fbld
aam
out
jno
sti
sub
xchg
scas
addb
int
push
divl
sbbb
push
cmp
push
dec
jmp
sbb
test
xor
popa
xchg
addr16
loope
test
inc
out
aaa
nop
ret
lcall
into
push
jne
imul
or
cli
stos
outsb
pop
adc
icebp
pop
cmp
jo
scas
aas
stos
push
pop
repnz
sbb
push
inc
push
cmp
cmp
out
xchg
xchg
cltd
cmc
ljmp
push
sbb
popf
ljmp
test
testl
jne
jns
popa
cmpsb
aas
daa
xlat
in
andb
pop
jmp
or
mov
mov
push
xor
push
lahf
mov
fsubr
fildll
jecxz
repz
pop
aam
in
ret
and
stc
ret
inc
dec
ds
addl
xor
xor
mov
inc
cli
sti
aas
push
xor
mov
or
sbb
ret
sahf
push
aaa
leave
loope
sbb
or
loopne
fistpl
insb
mov
inc
cmp
shll
cs
dec
mov
dec
adc
popa
outsl
adc
sub
mov
lcall
inc
inc
fcompl
cmp
jecxz
nop
cmpb
mov
mull
pop
lods
lret
dec
sub
insb
inc
push
sub
mov
push
xor
mov
jne
xor
cmpsb
push
sub
repnz
arpl
sbb
inc
pop
call
xor
push
cmp
push
inc
popf
jno
add
lds
lds
movsl
movsb
cwtl
and
fldenv
nop
pop
out
loop
mov
and
sbb
adc
mov
fucomi
insl
aam
mov
mov
pop
cli
outsb
pusha
test
cmp
pop
adc
or
bound
mov
std
or
fcompl
add
mov
in
or
leave
fsts
mov
lret
mov
sbb
jle
imul
jg
inc
push
mov
lcall
js
stos
mov
int3
sbb
jmp
fs
fistl
outsl
sub
int
push
dec
add
jp
cwtl
or
mov
icebp
mov
sub
xchg
add
repnz
xor
gs
fimuls
jl
lahf
clc
movsb
mov
push
flds
lds
pop
mov
test
ds
aaa
lods
mov
xchg
pop
outsb
jno
xor
das
mov
jne
int3
xor
inc
mov
or
inc
mov
dec
add
jge
or
orl
enter
sbb
mov
cmp
out
pop
in
clc
xchg
push
rorl
or
in
jne
pop
dec
and
ds
lock
dec
mov
add
mov
adc
daa
jb
xor
pop
hlt
pop
cmpsl
mov
faddl
scas
xchg
imul
daa
jmp
xchg
int3
inc
das
pushf
hlt
jl
pop
leave
incl
testl
sar
icebp
loope
popf
xor
xor
cmp
lea
mov
sbb
xchg
adc
in
or
lret
add
mov
aad
adc
jmp
repz
bnd
cwtl
cwtl
mov
jnp
scas
push
inc
cmp
xchg
or
fildll
push
sbb
cmp
push
movsb
push
mov
je
jae
inc
sub
inc
mov
add
jb
sbb
je
inc
pusha
std
outsl
jmp
rorb
push
xor
subl
scas
out
sbb
xor
in
popf
pushf
cs
push
push
xchg
push
add
or
jecxz
inc
jl
pop
jo
xor
push
imul
stos
sahf
sub
jge
imul
cmpsl
add
add
xchg
pop
loop
push
cli
jp
sbb
push
shll
out
les
fs
in
mov
push
xchg
jns
nop
jns
push
sahf
jge
cmpsl
or
sbb
rcr
jge
xchg
and
adc
fsubs
jns
xchg
inc
mov
icebp
push
push
dec
sbb
or
push
das
test
insl
sub
data16
ds
add
jo
dec
jle
fucomp
xlat
xor
shll
pop
orl
xor
cmp
xor
xor
jg
mov
or
fists
stc
leave
sbb
xor
mov
push
or
and
add
and
orb
stc
or
mov
adc
insl
xchg
stos
xor
scas
xchg
movsl
sbb
mov
xchg
repz
sbb
jno
or
stos
cmc
jp
faddl
xchg
inc
pop
jbe
ret
cmp
cltd
and
fptan
pop
aaa
dec
push
push
sbb
outsb
aas
inc
dec
int
mov
jb
scas
push
pop
push
mov
jns
mov
insb
enter
out
sub
push
inc
xor
dec
mov
jbe
movsb
iret
or
adc
loop
mov
cmp
lea
jb
lds
test
sti
gs
dec
xor
dec
pop
jb
ljmp
jno
repnz
vpcmpeqd
or
push
js
scas
pop
push
ret
out
inc
out
xlat
jmp
daa
fsubrl
aaa
in
cmp
out
mov
sbb
rorl
shl
xchg
push
or
loop
out
into
pop
mov
cli
imul
inc
mov
cld
dec
push
xchg
dec
push
adc
sub
faddl
fbstp
mov
rorl
jecxz
cmp
aas
xchg
adc
mov
test
and
sbb
in
scas
mov
mov
iret
mov
mov
cmp
enter
dec
ja
js
pop
idivb
push
adc
std
pop
pop
imul
lods
pushf
xchg
cmp
jbe
loopne
jl
sbb
sbb
lea
add
push
mov
cmp
fiadds
negl
rcl
ljmp
hlt
sub
cmp
push
leave
ret
dec
add
adc
mov
fbld
cmpsl
aad
mov
push
mov
and
sti
aad
cmpsl
add
sub
jmp
repnz
icebp
cli
outsb
scas
inc
pop
cwtl
mov
out
adc
adc
mov
test
and
inc
dec
outsl
cmc
fsubl
cs
xchg
push
adc
jnp
pop
mov
adc
jmp
xor
mov
jmp
sti
out
cmp
adc
mov
mov
fsubrp
lock
popf
dec
ja
push
pushf
adc
sbb
xor
call
cli
push
jle
add
adcb
mov
pop
fadds
dec
stos
adc
lahf
in
mov
iret
jae
add
or
xchg
je
sahf
or
cmc
lea
add
test
xchg
imul
xor
push
or
shl
inc
sbb
or
sub
jo
movl
xchg
pop
sub
lcall
xchg
xor
push
inc
cmp
or
ret
imul
xor
cmpsl
shl
ljmp
xchg
jmp
std
and
lcall
in
sbb
ja
sbb
ret
cmp
cmc
add
sbb
sbb
adc
add
inc
sbb
pushf
aaa
stc
pop
sti
arpl
loopne
sbb
mov
fstpt
in
jmp
dec
sub
mov
sarb
ret
and
sub
fsubrl
mov
lcall
orb
xchg
lds
push
mov
push
sarb
xchg
mov
adc
jae
cli
xor
mov
jle
jbe
push
push
pop
inc
pop
movsl
inc
pop
mov
jmp
mov
jle,pn
jle
mov
cmp
and
adc
jl
fdivl
gs
inc
add
adc
cmpsl
dec
jge
and
pop
into
xor
lods
push
jbe
insb
imull
pusha
xor
sti
mov
in
add
pop
dec
mov
pop
sbb
mov
mov
dec
shll
mov
sub
cmp
jbe
js
js
es
lds
sbb
dec
imul
sti
jl
sub
mov
pop
fs
sub
cltd
adcl
movsb
or
push
test
mov
sbb
outsb
xrelease
shlb
ret
mov
mov
dec
and
cs
sbb
mov
mov
sub
test
pop
adc
leave
lods
jge
into
imul
popf
mov
sbb
idiv
pop
xorl
mov
aam
into
outsb
outsl
jge
insb
inc
mov
xor
or
cmp
testb
aam
xchg
jl
jnp
mov
sbb
inc
iret
and
cmp
and
out
push
jge
int
out
dec
fistl
insb
lea
xor
rolb
cmc
mov
test
adc
mov
or
lods
jae
sub
movsb
mov
jne
mov
or
xchg
movsb
jbe
ret
pop
orb
push
sarb
sbb
sahf
rcll
jno
push
ljmp
stos
mov
clc
in
pop
inc
int
sbbb
addr16
pusha
sub
pop
iret
ret
aaa
sbbl
adc
das
push
rorl
adc
mov
lret
lea
xchg
int
sub
call
loope
jnp
push
mov
lods
fld
inc
cmc
push
cmpsl
hlt
xchg
repz
mov
lods
xor
lds
push
dec
sti
dec
lods
shlb
jne
ljmp
loop
push
push
pop
subl
add
aaa
push
or
jmp
or
cmp
cmp
lret
sti
dec
jl
popl
mov
outsl
push
push
idivb
mov
stc
ds
cmp
loopne
pop
outsl
push
cmp
pop
inc
sub
cmp
mov
std
mov
jp
test
imulb
pop
sbb
or
daa
inc
push
mov
adc
shll
sbb
sub
loope
mov
jle
stos
pop
fbstp
sbb
movsl
insl
arpl
fstps
lahf
jb
push
fwait
mov
in
sarb
xor
xchg
dec
pop
pop
pop
xchg
sub
popa
xchg
loopne
jno
mov
xlat
xchg
imul
jbe
lock
lret
addb
outsb
fcmovbe
cmp
adc
or
js
cwtl
nop
cld
incl
in
daa
jl
in
inc
pop
pop
or
popa
mov
gs
int3
enter
push
mov
adc
mov
pop
or
sub
lret
jl
xor
and
arpl
adc
xchg
mov
insb
mov
xor
cli
mov
ja
adc
fistl
icebp
fs
ret
cli
cwtl
ljmp
pop
scas
push
fnstcw
movsb
loope
les
bound
push
ljmp
mov
je
jmp
or
mov
fmull
xor
push
insl
repnz
mov
inc
clc
and
rclb
lahf
out
xor
add
xchg
push
aad
jno
dec
cltd
mul
or
jp
push
pop
sub
xchg
mov
pop
push
xchg
mov
inc
cs
jnp
cmpsl
lea
es
mov
xor
cltd
ds
sbb
push
xchg
pop
cmp
jno
rcll
std
mov
sub
ja
mov
out
jp
fidivl
cmp
lcall
xchg
add
dec
fdivrs
xor
sbb
dec
xor
aaa
add
lret
cltd
sarl
into
imul
mov
lods
bound
lret
mov
mov
pop
add
data16
outsl
cmp
cmpsb
pop
cwtl
mov
mov
adc
sub
push
push
imul
or
mul
push
mov
scas
sub
push
add
int3
lds
cmp
insl
add
test
cmp
jg
ret
xorl
inc
fs
sbb
xor
cmc
jg
pop
xor
sbb
test
cmp
inc
dec
mov
ss
dec
add
fs
out
stos
dec
out
and
gs
jg
mov
fsubs
outsb
rclb
stc
scas
inc
fisubrs
aaa
int3
xor
imul
les
xchg
xorl
jbe
pop
push
outsl
jle
mov
fsubrs
test
lcall
cwtl
cmpsb
jb
dec
jnp
pop
inc
push
dec
jg
jge
or
pop
test
xchg
call
mov
mov
jae
mov
add
sbb
popa
cmp
scas
inc
scas
es
adc
test
lea
or
mov
imul
sub
outsl
add
fstpt
scas
cltd
xchg
add
inc
and
int3
cmp
sub
or
add
jno
loopne
mov
mov
xor
lret
inc
rcll
xchg
jmp
test
aas
mov
jecxz
mov
pop
clc
nop
or
jl
in
jmp
sub
addr16
push
dec
inc
mov
std
jmp
lods
testb
lods
insl
nop
mov
pop
es
pop
sub
and
mov
loop
sub
and
mov
cmp
add
or
xor
inc
cmp
loop
cld
nop
dec
loop
push
pop
mov
cwtl
adc
mov
or
int
inc
out
and
pop
sbb
inc
jge
je
call
inc
xor
jae
scas
adc
push
leave
mov
rolb
enter
lods
push
mov
in
add
outsl
jmp
dec
or
roll
int3
sbb
mov
enter
lods
lock
jb
dec
inc
arpl
inc
add
sub
enter
dec
aaa
fidivl
sbb
xor
xchg
inc
ljmp
xlat
arpl
data16
out
sbb
jbe
movsb
sbb
test
adc
int3
or
out
pop
inc
add
fdivs
pop
xlat
mov
mov
xor
pop
push
inc
and
add
push
fisttpl
ficompl
cmp
cmpsb
inc
mov
xchg
push
sub
test
mov
aam
lods
repz
jle
enter
loope
iret
std
sbb
cmp
mov
cmp
dec
lcall
adc
outsl
test
arpl
adcb
ret
adcl
xor
add
ret
nop
jecxz
push
mov
pop
int3
loop
jmp
fs
mov
adc
pop
sub
notb
lret
test
aad
xor
gs
xor
jp
adc
mov
and
push
insl
and
jb
loopne
mov
outsb
dec
push
xor
neg
int3
and
push
pop
sti
xchg
adc
dec
mov
inc
js
test
dec
aam
mov
stc
call
sti
mov
pop
and
imul
ret
inc
hlt
dec
pop
or
imul
cwtl
dec
lea
xchg
inc
popf
pop
pop
sub
ret
sub
jne
imul
hlt
mov
add
shlb
popf
popf
out
cmp
data16
dec
psubusb
aas
pop
cmp
gs
nopl
cmpsl
mov
push
repnz
imul
xchg
imul
jb
aaa
mov
and
outsb
inc
pop
cmp
push
imul
aad
xor
mov
call
outsl
jb
lods
mov
enter
lcall
mov
aas
inc
adc
xchg
adc
cmp
sub
fs
pop
test
or
jno
sub
sbb
cmp
nop
sbb
fdivl
gs
mov
add
in
fisubs
mov
jae
add
inc
das
popa
shll
aam
mov
subl
insb
lahf
dec
into
imul
sub
cs
add
add
xchg
movsl
xor
stc
loopne
and
ret
lock
pop
inc
dec
shl
jne
push
jge
ja
scas
sub
cmp
into
jp
pop
sub
push
sahf
movsb
mov
inc
and
popf
pop
dec
cmp
icebp
adc
adc
lahf
test
aam
fucomip
fldl
aaa
pop
fistps
jae
orb
xchg
push
xchg
mov
dec
xchg
clc
fmulp
push
inc
adc
jno
or
sub
and
pop
repz
xor
or
lods
dec
mov
push
in
out
push
fmul
cmp
push
fwait
out
xchg
xor
mov
xor
jo
out
jle
int
ror
mov
pop
enter
jmp
jl
fbld
ja
lods
into
aaa
jl
lock
daa
xor
jne
movsl
test
xchg
cli
incl
lock
fstps
sbb
push
pop
lock
fildll
jns
mov
popa
cli
loop
dec
imul
lds
sub
hlt
stos
dec
push
sub
sub
aaa
or
pop
sub
fucompp
mov
jno
stc
arpl
mov
sbb
cltd
fimull
xchg
xchg
das
clc
sub
aaa
xchg
inc
inc
mov
xchg
ror
lock
lret
add
lret
cwtl
fwait
dec
aam
inc
adc
lds
mov
or
inc
fwait
test
mov
aad
fimuls
dec
xor
stc
push
scas
enter
mov
aad
xor
xchg
adc
xor
xor
ss
pop
sub
in
sub
test
fmull
push
dec
and
daa
invd
add
enter
dec
push
sarb
sub
lret
inc
adc
ds
nop
xchg
nop
sbb
es
ret
fwait
sbb
dec
sub
mov
cld
ljmp
fcmovnu
dec
ret
adc
leave
adc
xor
inc
cmp
xchg
out
adc
and
mov
sub
mov
das
inc
fisubrl
loopne
jle
xor
test
and
mov
icebp
rorl
and
sub
add
shll
adc
sbb
add
addr16
mov
or
pop
cmp
pop
cmp
jo
xor
xchg
adc
xchg
aas
xor
mov
std
pop
pop
jnp
sar
lds
fcompl
cmc
aad
clc
mov
push
cwtl
mov
xchg
pop
dec
xchg
cli
cmpl
lret
into
mov
xlat
cli
inc
and
imul
testl
xchg
enter
arpl
xor
xchg
cmp
cmpsl
sbb
inc
mov
aam
xchg
ret
aad
xorb
out
push
pop
cmpsb
loope
push
mov
ficomps
popa
fcomp
ss
in
fsts
popf
push
hlt
shrl
ljmp
xchg
pop
mov
cld
add
fsubs
in
inc
notb
flds
ja
jge
adc
mov
adc
into
icebp
fisubs
dec
test
or
mov
xor
adc
push
adc
testb
cmpsl
adc
lret
call
pop
iret
cmp
add
test
sete
mov
lods
push
mov
xchg
sbb
repz
es
push
adc
insl
push
lret
out
sti
popa
cltd
mov
lods
vdivsd
enter
mov
add
lahf
lcall
jb
insl
bound
pop
push
jle
test
inc
sub
sub
cmp
enter
insl
push
mov
xor
inc
or
in
xlat
les
adc
in
enter
sub
and
push
std
sbb
sbb
cmp
push
add
add
push
jmp
cld
cmpl
dec
inc
bound
bound
jae
fcoms
mov
mov
stos
mov
mov
or
sbb
mov
push
cmp
sub
lahf
aad
or
lods
jecxz
add
je
mov
inc
jmp
aaa
aaa
push
mov
xlat
nop
gs
sbb
xchg
push
sbb
out
pop
xchg
fidivrs
ss
dec
add
xchg
sub
xchg
test
gs
sub
pop
stc
call
or
adcl
mov
fucomip
push
mov
adc
push
jle
ja
hlt
xor
xor
push
cs
mov
push
or
cmpsl
xchg
movsb
xor
mov
fiadds
fnstcw
idiv
loop
xchg
mov
or
xchg
loop
das
mov
repz
rclb
inc
and
push
mov
outsb
sarb
mov
xor
cld
addb
std
dec
lods
test
xor
icebp
lods
or
mov
cmc
add
add
ljmpw
ss
fistpll
push
or
cli
repz
xor
mov
and
push
cmp
div
mov
add
pop
jg
jno
push
jp
add
or
in
cmp
fsubr
mov
jns
sub
roll
int
fidivrl
jmp
test
lods
mov
push
lahf
mov
hlt
and
dec
push
ss
add
aas
pop
mov
push
dec
xor
jp
ret
pop
mov
jno
mov
xchg
dec
outsl
pushf
cwtl
stos
out
in
jae
add
cmc
mov
roll
cs
push
sahf
ret
xchg
or
call
pop
movsb
cs
mov
push
xor
fsubl
add
call
je
stc
cmp
cmc
ss
jmp
inc
xchg
into
ffreep
push
mov
je
cmp
mov
sar
cmpsl
fsubrl
push
adc
in
scas
lcall
xchg
pop
mov
sbb
mov
sbb
pop
les
push
cltd
sbb
mov
les
call
out
sbb
cltd
pop
sub
xor
out
adc
xchg
or
xor
add
sti
test
mov
clc
std
fstl
lcall
dec
daa
stos
sub
mov
xor
fdivrs
orl
and
mov
cmp
notb
mov
push
push
movl
mov
inc
cwtl
adc
call
or
sub
test
push
subl
mov
push
xor
stos
imul
and
sub
in
mov
imul
jns
xor
mov
pop
repnz
mov
and
and
outsl
frstor
testl
pop
test
movsb
insl
movsb
stos
and
add
xor
dec
test
or
sti
iret
popf
push
and
mov
in
sub
das
pop
mov
loope
pop
aaa
push
adc
mov
outsl
mov
jae
cli
scas
lea
inc
cltd
sbbb
int3
out
pop
cmp
jge
hlt
aaa
and
lcall
and
sbb
mov
push
add
out
push
cld
arpl
and
ja
mov
sbb
or
jns
push
push
mov
insb
xchg
sti
dec
in
dec
mov
sahf
insb
lock
jo
rclb
ss
mov
mov
pop
jle
movsb
pushf
pusha
xor
dec
adc
xchg
jmp
jecxz
insl
cmc
cmp
and
popa
loope
iret
sub
xor
outsb
inc
test
lcall
pinsrw
lret
push
test
push
inc
fnstenv
add
pop
popa
into
cmp
xchg
ret
mov
fldpi
shl
dec
stos
shlb
insl
cmpsl
sub
sbb
movsb
mov
and
push
push
fwait
fs
js
sbb
inc
push
arpl
mov
insb
in
add
adc
cmpb
jl
ret
lods
cmp
sbb
adc
je
insb
fcoms
inc
add
ja
dec
cmp
cmc
cmc
aad
inc
push
je
dec
add
lahf
mov
mov
lahf
jmp
ret
mov
pop
in
and
xchg
nop
dec
inc
gs
and
mov
jl
je
lahf
jmp
inc
inc
test
ds
mov
int
jg
push
testl
xor
mov
repnz
adc
xchg
mov
mov
inc
stos
push
push
mov
sahf
pusha
inc
push
cmpsl
xchg
mov
sbb
outsl
pop
aam
mov
or
lahf
pop
pushf
push
fwait
std
jmp
fadd
xchg
xor
inc
dec
pop
pop
rcr
stos
xor
mov
insb
jno
mov
lock
push
jl
and
jae
lock
cld
adc
pusha
jecxz
movsl
repz
pusha
mov
dec
test
stos
std
and
mov
lret
sbb
sbb
fstpl
or
inc
jecxz
out
idiv
pop
ljmp
jge
add
stos
push
lret
dec
insl
mov
int3
pop
pop
adcl
inc
incl
cwtl
xor
add
jmp
mov
add
sub
xor
inc
mov
push
int3
inc
into
rorl
fdivrs
push
cmp
movsb
inc
dec
and
popf
inc
xlat
lahf
lret
arpl
mov
add
cs
push
mov
bound
or
mov
adc
cmp
popa
push
and
jnp
sub
cltd
les
in
fcoml
pop
mov
xor
mov
mov
out
pop
add
push
inc
push
js
es
sbb
gs
adc
lea
cmp
fstpl
pop
push
aam
mov
jge
sbb
call
jmp
push
testl
test
call
jbe
dec
pusha
test
rol
or
bound
xor
sbb
je
or
xchg
and
push
mov
jmp
xlat
mov
fnsave
jae
outsl
push
aas
sbbb
loope
or
jne
cmpsb
push
adc
xchg
cmc
adc
fstpt
push
mov
or
push
fistl
andl
xchg
sbb
imul
and
test
mov
mov
daa
xor
icebp
jle
sub
cmp
adc
cmp
popa
out
lret
mov
pop
cmp
or
inc
stos
add
pop
xor
mov
add
shlb
inc
mov
sbb
and
data16
iret
imul
imul
mov
jmp
bound
fcomps
stc
cmp
and
xor
addr16
pop
mov
lock
outsb
jo
mov
rcll
push
xor
fldl
data16
sbb
mov
aam
add
adc
les
cli
jecxz
inc
push
repnz
xor
xchg
in
push
enter
push
out
dec
in
enter
sub
adc
cld
push
cmc
loopne
xor
push
xchg
xor
aad
fdivrs
pop
sti
sbb
inc
mov
test
popf
and
cmp
repnz
jne
je
loope
jmp
pop
lods
jg
neg
adc
fists
mov
lret
jbe
add
jb
cli
rol
xchg
inc
push
pop
loop
mov
loop
adc
adc
daa
jno
adc
call
sbb
jg
fcomip
test
daa
push
mov
mov
je
cmpsl
fadds
fcompl
cmp
mov
mov
lods
add
imul
ud1
hlt
cmc
daa
mov
iret
stc
push
mov
jle
jnp
popf
sbb
pop
push
ljmp
jmp
add
mov
ds
pop
mov
push
shl
fwait
lcall
clc
stc
test
hlt
mov
popl
mov
cmpsb
push
sarb
scas
mov
lcall
dec
jne
fwait
scas
mov
scas
hlt
mov
daa
mov
gs
sub
mov
popa
add
stos
xor
sub
push
enter
in
pop
xor
into
int
aam
dec
mov
hlt
fdiv
lods
jno
pop
push
movsl
je
in
mov
push
das
push
mov
outsl
cmp
pop
shlb
add
sar
pop
clc
fnstcw
or
fimull
mov
mov
push
jae
insl
outsb
cmp
dec
add
and
lods
xchg
xlat
clc
test
fimuls
test
xchg
jge
out
jb
mov
and
int3
stos
mov
mov
adc
push
lods
sbb
mov
jo
notb
cmp
daa
inc
push
pop
pop
cli
xchg
arpl
cwtl
jns
clc
clc
out
inc
or
movsl
out
or
pop
xor
sbb
xor
xor
xchg
pop
and
push
fidivrl
and
sbb
cmp
fdivs
push
mov
inc
loope
mov
aas
nop
sbb
add
ret
sbb
xchg
xchg
pusha
pop
fiaddl
push
sub
mov
dec
mov
jg
test
les
pop
mov
cmp
mov
mov
call
lds
sbb
div
xor
hlt
inc
inc
dec
scas
gs
sahf
xlat
cmp
and
or
jne
sbb
pop
js
lock
mov
xor
mov
push
pop
mov
cmpsb
jb
dec
mov
fldenv
sub
sub
mov
mov
adc
fs
outsl
mov
sub
sub
mov
scas
xchg
dec
push
packsswb
leave
jbe
jne
add
loope
xchg
mov
popf
or
sbb
lds
movsb
cmp
xor
jbe
lahf
and
mov
loopne
cmc
and
aad
fstpt
test
into
bound
cltd
movb
mov
stc
iret
mov
push
int3
popf
inc
dec
xlat
dec
pop
mov
push
std
ss
pop
cmp
xorb
shlb
mov
pop
sub
test
out
mov
push
mov
xor
pslld
add
and
jae
movsl
insb
pushf
ficompl
ficomps
in
jnp
sbb
add
enter
js
inc
movsb
sub
pop
jecxz
sbb
dec
lahf
jge
xchg
out
jl
add
pop
mov
jns
scas
dec
mov
or
aaa
les
jne
je
add
js
hlt
mov
in
pop
sahf
xlat
int
call
je
pop
sub
cmp
mov
jl
xchg
arpl
stos
inc
aas
cmp
mov
pop
in
out
add
sbb
xchg
add
insb
mov
call
outsl
mov
pop
movsl
shll
mov
sbb
mov
sbb
call
add
ljmp
subl
sub
int3
ds
or
sbb
xlat
insl
cwtl
xchg
notl
mov
out
aad
sub
bound
sub
aaa
iret
mov
arpl
addl
cld
push
decl
cwtl
inc
mov
jmp
mov
inc
fidivrs
daa
adc
sub
gs
out
popf
xchg
aam
pop
mov
mov
lock
mov
jnp
sbb
mov
test
clc
fwait
mov
mov
xchg
nop
cmp
inc
daa
movb
jecxz
out
pop
adc
ret
lds
fisubrl
bound
insb
repz
sub
mov
push
or
sub
push
and
add
imul
push
cltd
in
cld
xchg
iret
ret
fiaddl
sbb
xor
sub
push
and
mov
mov
in
lret
sub
cmp
repz
flds
ja
sbb
in
sub
push
imul
inc
pop
jg
mov
sub
push
test
mov
out
xor
scas
cmp
xor
call
xor
dec
into
adc
xor
imul
inc
inc
and
and
nop
lods
pop
aam
xchg
mov
xchg
testb
and
inc
mov
je
push
jae
sub
int3
mov
push
sub
and
inc
pusha
add
push
stc
lods
fwait
out
mov
push
fwait
lcall
scas
shr
loop
ror
sarl
jmp
cmp
and
shlb
sub
adc
or
mov
push
negb
and
xchg
stc
xor
push
inc
dec
outsl
repz
mov
lock
push
test
mov
xor
aad
jo
xchg
stos
push
xor
jb
iret
mov
ds
xorb
pop
fnstenv
jl
addr16
pop
push
jae
xchg
cli
daa
xor
inc
mov
pop
ja
mov
pop
or
or
cmp
movsl
imul
roll
sbbb
imull
or
pop
sub
movsb
adc
pop
mov
xor
xchg
mov
decb
gs
adc
divps
or
pop
mov
add
enter
jbe
imul
lahf
cmc
popa
or
sub
out
dec
pop
mov
cld
rcrl
stos
daa
lret
aam
adcb
adc
lods
or
push
imul
inc
lds
pop
jb
jns
cmp
xchg
sub
outsb
in
inc
push
and
xchg
push
es
push
arpl
push
jne
pop
xchg
and
shr
fldt
dec
repnz
into
sub
jo
xchg
xor
xor
lods
inc
pop
icebp
out
jmp
insb
sbb
shl
out
add
aad
les
dec
ds
mov
dec
mul
jle
mov
dec
or
pop
das
clc
cmpsb
add
adc
xor
lahf
lea
ret
and
push
or
push
cs
push
pop
cs
jge
out
repz
cmpsl
iret
cmp
push
addr16
cmp
dec
sbb
pop
fcoml
or
aas
jns
imul
or
mov
insb
cmc
out
test
add
adc
mov
pop
rcll
jle
inc
add
mov
push
test
lods
iret
cmp
addr16
push
fistl
scas
xchg
rdmsr
mov
aad
pop
add
xor
je
push
inc
mov
jne
sahf
insb
push
rcl
scas
pop
fwait
je
shlb
cmp
iret
cli
push
adc
adc
xchg
dec
iret
xchg
inc
xchg
push
xor
mov
cwtl
repnz
jg
xor
es
testb
push
or
std
scas
mov
gs
addl
ret
stos
sbb
clc
xchg
bnd
pusha
andl
xchg
mov
inc
dec
push
or
jmp
pop
jno
xor
es
cs
movsb
sub
cmc
pop
out
xchg
dec
adc
call
clc
mov
mov
cmpsb
in
or
inc
sti
sarl
xchg
jb
mov
orb
xchg
test
shll
dec
mulb
push
dec
test
daa
sbb
cwtl
xlat
in
inc
roll
mov
scas
xlat
test
jg
push
sbb
sbb
jb
icebp
movsl
jl
cmpsb
jne
cmc
mov
loop
jnp
mov
scas
mov
aas
fs
cmp
mov
inc
or
inc
add
xchg
sarb
ret
mov
and
bound
mov
inc
add
inc
sbbb
imul
mov
and
jp
fstp
adcl
fcomi
cmp
addb
iret
ja
push
push
xor
fistpl
dec
mov
cwtl
addl
adc
fstpl
repnz
movsb
jbe
mov
ret
mov
aad
iret
sbb
sbb
add
dec
aad
pop
push
add
sti
int3
sarl
insb
dec
gs
pop
jecxz
adc
cmp
aad
push
out
or
adcb
inc
jecxz
mov
decb
mov
nop
push
test
mov
ror
ret
sub
jle
sbbb
fwait
push
enter
rolb
cmp
pop
inc
pop
sbb
jmp
pop
std
imul
mov
into
dec
lahf
das
mov
xor
jge
jns
adc
lcall
lods
fwait
sbb
add
rcl
jne
in
in
sub
xor
pop
shrb
stos
push
push
fidivs
lods
sarb
xor
mov
add
rcrb
test
xchg
jmp
popf
cmp
into
or
adc
rorb
movsb
jle
scas
xchg
test
sub
inc
or
xlat
xchg
push
fs
mov
mov
lahf
mov
cmpsl
in
dec
xchg
xor
pop
outsb
sbb
mov
scas
test
jp
int
pop
mov
addr16
aaa
insb
sub
lock
gs
jno
pop
cmp
xor
scas
push
jb
xlat
cmpb
movsb
sub
inc
ret
cs
push
and
icebp
push
jecxz
pop
cmp
mov
jno
pop
jmp
cmp
insb
mov
test
mov
push
adc
push
int
xchg
xchg
jbe
fcompl
adc
fisubrl
leave
inc
sbb
fimull
out
idivb
mov
pushf
adc
out
out
adc
aaa
inc
cmc
sub
pop
imul
xchg
les
inc
xor
in
or
pop
xchg
in
icebp
mov
cs
mov
sub
adc
add
pop
loop
bound
ficoms
adc
cmp
dec
sub
outsb
movsb
mov
cwtl
popa
scas
and
aam
jns
lock
and
cwtl
xor
flds
xor
adc
dec
and
xor
pop
scas
fcoml
fidivs
fidivs
or
aam
leave
and
dec
movsl
push
leave
lock
pop
lods
inc
daa
mov
sub
cwtl
xchg
mov
shl
popf
pop
jae
or
or
adc
lds
clc
or
or
xor
decb
fs
addl
mov
frstor
mov
mov
notl
mov
cmp
out
mov
das
lods
ret
jg
mov
les
es
lret
lret
dec
loopne
mov
iret
imul
and
mov
mov
fs
push
jno
jl
inc
fbld
pop
lods
stc
add
repnz
sbb
sbb
and
mov
mov
ret
daa
jne
inc
aas
out
add
jecxz
pop
mov
dec
loope
cvtdq2ps
mov
jb
mov
sub
cmpsl
aam
stos
xchg
cmp
xchg
test
int
cmp
cmp
subw
push
push
push
stos
lods
sub
and
mov
ret
xlat
popf
and
mov
daa
loopne
lret
out
adc
dec
xchg
in
add
loope
jno
push
sub
xchg
dec
sbb
cmc
pusha
pop
mov
mov
mov
stc
test
outsl
push
pop
out
cwtl
js
cli
fwait
xchg
push
push
jle
outsl
cwtl
cmp
pop
cmc
inc
adc
hlt
insl
xchg
ret
test
xor
cmpb
push
or
pop
pop
in
in
xchg
cltd
push
cltd
pop
mov
xchg
adc
xchg
popa
xchg
push
out
push
test
push
lret
cmp
sub
nop
or
xchg
inc
daa
xlat
mov
ret
sbb
add
clc
aaa
mov
pop
cmpsl
xchg
mov
push
mov
cmp
push
inc
push
loope
sub
sbb
aam
into
stc
sub
dec
sbb
test
adc
cmp
pop
or
xchg
jmp
lahf
jnp
stos
adc
mov
mov
cld
pop
sbb
or
mov
pop
mov
xchg
jno
cmp
lds
fldt
test
jg
lods
cmpsl
insl
imul
push
mov
jbe
movsb
push
xlat
dec
dec
inc
loope
pushl
adc
and
sbbb
dec
iret
cld
ds
adc
sar
bound
in
out
js
rolb
dec
jns
xor
xor
push
jae
sub
xchg
add
test
sbb
sbb
lea
xor
aaa
push
sbb
int
cmp
jge
mov
pop
dec
inc
xor
test
gs
out
pusha
or
clc
xor
mov
adc
movsl
insb
and
sarb
sbb
rcrb
out
leave
sbb
lock
ret
js
adc
add
or
mov
sti
and
pop
ret
pop
pop
int
dec
mov
roll
xor
cmpsl
sbb
pop
or
cmpsl
dec
mov
jo
jns
push
and
insb
sbb
fnstcw
cmp
mov
xorl
orl
mov
fs
sti
test
or
add
lret
daa
sub
in
dec
cmc
xchg
loope
or
pop
inc
dec
cmpsb
push
fimull
xor
repz
mov
lahf
mov
ds
sahf
aaa
or
xchg
cmp
mov
pop
mov
arpl
bound
test
shll
or
pushf
idivl
add
xor
pop
fstl
icebp
dec
and
xlat
dec
iret
sub
jp
dec
imulb
lods
sub
sbb
push
outsl
scas
jae
jns
and
mov
add
dec
shll
lcall
mov
aaa
dec
shlb
pop
adcl
fwait
cmp
stos
dec
mov
out
add
sahf
imul
xorb
mov
roll
pop
ds
mov
cld
push
int3
push
xchg
jno
lods
rcr
inc
fwait
stos
jno
push
jo
push
mov
sub
mov
fdivr
loop
push
loopne
adc
ret
mov
popa
xchg
subb
mov
adcb
add
imul
mulb
xor
mov
jmp
xlat
jb
pushf
cld
cwtl
daa
dec
mov
jle
inc
jae
mov
cltd
xor
inc
in
cltd
addr16
aaa
and
xchg
cmpsb
mov
adc
outsl
sub
sub
mov
mov
pop
jmp
lcall
jbe
xor
ret
or
and
inc
outsl
cmpsl
cmpsb
sbb
lods
pop
std
inc
orl
loopne
mov
cmc
pop
adc
or
scas
add
lcall
sahf
add
sub
data16
orl
iret
or
xor
ja
mov
xorb
push
push
and
in
xor
stos
push
jle
fdivrs
pop
dec
aam
stc
adc
out
fs
outsb
inc
fdivs
pusha
and
movsl
mov
cmp
xor
pop
or
pop
push
mov
add
push
jl
xchg
lret
mov
fidivl
sub
sub
push
mov
and
mov
push
mov
fwait
int3
mov
inc
xorb
jb
icebp
aaa
mov
push
xor
leave
mov
add
dec
pop
mov
xchg
pusha
add
sbb
cmp
rcll
jo
add
push
inc
dec
imul
sub
out
subb
xchg
rcll
cmp
sub
xor
add
test
fld
lret
shll
addr16
push
or
xchg
mov
mov
or
out
std
das
push
mov
sub
jl
in
dec
lahf
ret
xchg
repz
fcompl
push
cmp
inc
fldz
leave
aas
mov
fnstenv
aas
pop
je
lods
in
xchg
push
sahf
add
je
lahf
sahf
repz
shlb
lret
mov
fmull
out
xchg
lret
cmp
ljmp
pushf
pop
inc
sbb
out
xchg
fisttpl
lods
pop
pushf
mov
pop
lods
xlat
xchg
sub
and
arpl
mov
sbb
mov
dec
sbb
fs
xor
fistl
cmp
and
cmp
pop
popa
loopne
fwait
and
mov
cs
cmp
cli
lcall
cmp
add
xchg
cmc
cli
push
dec
mov
add
scas
inc
xor
adc
cmp
test
test
pop
cwtl
push
test
inc
push
rolb
mov
pop
jge
dec
cwtl
icebp
mov
int3
mov
jmp
xchg
add
mov
cmp
shrb
or
pop
mov
in
xchg
pop
xor
sub
out
mov
lods
mov
mov
scas
pop
hlt
sbb
jbe
mov
mov
add
inc
add
mov
mov
nop
sub
push
das
jle
es
mov
inc
test
test
addr16
daa
std
push
mov
xchg
out
push
or
xchg
int3
dec
test
cmpsl
pop
movsl
pusha
jecxz
mov
xchg
repnz
add
add
call
ja
inc
xchg
cmp
pusha
fsub
jne
in
pusha
outsl
jns
aad
les
hlt
in
daa
jl
cmp
cmp
push
sar
and
pop
shrl
xchg
cmc
sbb
xor
sar
push
data16
in
cli
pop
sub
fcmovbe
cmp
into
cs
cmp
sub
fists
repz
stos
dec
jle
lods
and
add
or
dec
stos
addr16
mov
add
pop
les
sbb
inc
mov
movsl
lret
test
les
cltd
mov
test
adc
add
xchg
sbb
movsl
xor
jle
adc
inc
enter
pop
push
ret
fwait
scas
mov
xchg
jo
sbb
adc
lret
jl
adc
out
jo
pushf
adc
dec
test
bound
and
stos
shrb
and
je
lret
sti
lds
ret
data16
push
pop
sti
dec
sahf
push
jbe
aas
xor
jae
pop
mov
fadd
dec
stos
or
nop
mov
adc
and
movsl
shlb
pop
stos
add
mov
inc
cmp
xchg
xor
sahf
testl
pop
mov
pop
mov
mov
mov
push
ljmp
out
jbe
sbb
cmp
scas
imul
ret
mov
jmp
xchg
jb
cmp
mov
les
push
inc
add
add
jae
and
or
xor
or
jp
jp
popf
push
or
cli
stos
or
mov
sti
cmp
cmpsl
mov
mov
daa
push
cmpsb
jp
adc
lea
xor
mov
mov
dec
jo
mov
dec
sbb
call
or
lret
jbe
inc
adc
sbb
fstps
xchg
dec
insl
mov
mov
les
stos
mov
push
mov
or
lcall
inc
xchg
mov
addr16
insb
nop
pop
xchg
ss
ret
repz
adcb
mov
out
and
clc
mov
xchg
ret
loopne
pop
lahf
out
imul
pushf
jl
pop
jmp
cmpsb
les
enter
mov
mov
int3
pop
ret
xchg
in
jl
adc
arpl
int
scas
test
push
fldl
push
outsb
lods
lret
xor
loopne
repnz
std
mov
not
pop
jle
and
cmc
jo
and
in
inc
jbe
cwtl
jbe
push
and
pusha
loopne
pop
inc
adc
push
inc
jge
sti
mov
mov
icebp
test
mov
add
aad
dec
cmpsb
push
scas
cmp
cli
dec
pop
lea
mov
enter
jo
lahf
pop
fistl
add
xchg
stos
push
push
mov
cld
mov
mov
pop
hlt
pop
aaa
sub
sbb
in
adc
mov
fsubrp
test
pop
xchg
movsb
out
adc
xor
fsts
push
or
and
sahf
mov
xor
or
cmp
mov
pop
sub
cmp
icebp
mov
stc
dec
repnz
shll
sub
cld
aam
scas
or
lcall
adc
xchg
mov
xor
push
sub
adc
inc
cmpsb
sbb
lret
jmp
inc
lock
int
mov
add
movsl
std
jo
out
mov
cltd
gs
repz
xor
dec
mov
sbb
cmpsl
xchg
in
cld
or
add
push
pop
enter
ret
lahf
test
mov
vpsrlw
insb
jne
cmp
ret
xor
ljmp
jno
cltd
stc
mov
bound
cmp
inc
mov
inc
inc
or
dec
mov
sub
test
dec
mov
popa
lods
daa
aam
aaa
js
or
out
rorb
push
push
in
lock
xchg
xor
xchg
lock
or
jle
div
mov
push
sbb
dec
dec
pop
inc
mov
roll
je
int
inc
hlt
ja
ror
outsb
dec
pop
in
lods
scas
xchg
dec
or
xchg
sub
push
pushl
and
mov
imull
lret
jg
cmc
sub
cmpsb
xchg
xlat
clc
mov
out
cld
lock
sbb
add
gs
and
rorl
leave
popf
js
jbe,pn
mov
sar
lcall
pop
or
sbb
aad
cwtl
aad
es
cli
push
dec
pop
and
add
lret
scas
movsl
int
adc
xchg
testl
push
and
xlat
sbb
in
into
pop
push
in
push
sub
and
inc
nop
mov
mov
in
dec
mov
add
rep
ja
jmp
pop
add
call
data16
jle
mov
jmp
and
cmp
cmp
lods
jnp
adc
dec
mov
xchg
pop
sub
jne
stos
test
sbb
lock
adc
imul
jmp
xchg
push
dec
out
stos
lock
add
cmp
daa
lods
ror
test
out
sbb
push
jnp
lods
jle
jle
dec
ret
stos
pop
jae
cmp
mov
xchg
inc
mov
negl
or
inc
jl
hlt
test
aam
popf
xchg
cmpsl
cmp
pop
pop
mov
loope
sarl
add
test
test
stc
enter
divb
xchg
mov
outsl
mov
or
push
add
dec
xchg
pop
adc
mov
movsl
jp
or
cld
dec
or
testb
inc
mov
cmp
jl
mov
and
push
fs
enter
fimuls
xor
stos
lcall
add
leave
sbb
insl
dec
repz
xor
insb
cmp
add
pop
mov
xor
and
mov
add
sub
daa
sub
cmp
test
daa
or
pop
xor
adc
addb
mov
outsl
lds
hlt
movsb
loopne
cmc
imul
and
xchg
dec
int3
jb
dec
add
jne
pop
mov
cmp
mov
ret
mov
pop
je
ja
sbb
inc
mov
imul
xchg
sbb
jp
sbb
jge
dec
lds
inc
fnstsw
mov
pop
pop
inc
leave
mov
jbe
mov
ds
pushf
gs
cmp
and
jle
cs
or
sub
test
pop
xchg
add
or
add
add
jbe
jne
insl
add
mov
in
xor
sub
lds
jo
lods
or
fnsave
mov
fsubrl
adc
pop
mov
mov
cmc
jg
sbb
sbb
sbb
bnd
arpl
lock
popf
shlb
pusha
sbb
repnz
cmp
pop
rcrb
push
pop
mov
jb
int3
cli
push
pop
fwait
dec
and
in
stos
bound
add
sub
mov
cmp
push
test
loop
push
jbe
pop
lods
sbb
xchg
inc
or
adc
mov
xlat
lcall
or
data16
arpl
push
jmp
sub
fwait
and
mov
insb
call
and
and
and
loopne
jl
xor
in
push
js
out
fidivs
fwait
std
lahf
jecxz
repnz
ja
add
rcrb
mov
push
movsl
fisttpll
jns
fidivrl
mov
dec
adc
sub
pop
sub
enter
push
push
out
cli
adc
bnd
in
mov
inc
test
shll
mov
sub
ret
cmp
mov
mov
pop
dec
dec
xchg
stos
in
mov
xchg
sbb
xor
adc
mov
sti
bound
lea
mov
test
cmc
or
push
dec
mov
cmc
jge
mov
subl
lcall
xor
sti
ds
cmp
shl
out
sahf
mov
cwtl
dec
fstp
lock
popa
das
gs
mov
xchg
adc
inc
or
adc
lret
pop
jns
mov
push
call
hlt
pop
and
xor
cmp
xchg
mov
in
into
fldcw
es
mov
cld
and
imul
fdivp
xlat
daa
mov
mov
push
repz
mov
sub
lods
cmp
into
roll
rclb
mov
lea
inc
sub
mov
sbb
adc
jecxz
lcall
jmp
lcall
andb
cwtl
xchg
pop
inc
mov
adc
shrl
or
sub
repz
mov
sahf
cmp
cld
cmp
add
adc
adc
les
dec
andl
cmp
jle
sti
cmp
pop
and
jno
es
mov
pop
adc
int
bound
pusha
rcrb
les
js
cld
pop
mov
insb
in
loopne
je
decb
aaa
jg
inc
rcrb
jbe
xchg
shrl
in
clc
adc
cltd
mov
loop
int3
fstl
cmp
push
shll
add
lret
mov
rcrl
iret
mov
mov
mov
mov
mov
hlt
pop
aaa
and
aad
imul
push
les
stos
outsb
arpl
mov
daa
fcmovnb
sti
cmpb
add
es
xchg
push
cmpsl
inc
mov
inc
adc
in
jbe
dec
or
add
mov
lea
mov
popf
jle
imul
xor
dec
sbb
cmp
scas
es
mov
pusha
inc
or
inc
fwait
in
movsl
lahf
inc
rorl
cld
xchg
std
sbb
clc
insb
push
mov
lcall
pop
test
add
pop
mov
mov
sub
popa
add
dec
shr
pop
mov
mov
jnp
lods
sahf
in
push
mov
fwait
mov
addr16
fwait
das
sahf
jmp
lds
mov
jae
pop
mov
pop
mov
cmpsb
sbb
mov
lods
test
pop
in
dec
dec
sbb
bound
push
daa
adc
data16
xchg
push
adc
stos
out
fidivrl
popa
addl
sbb
iret
adc
jnp
xchg
add
push
xchg
jge
pop
mov
jb
mov
jnp
xor
loope
lahf
das
sub
adc
push
pop
xchg
js
rcrl
int
clc
mov
inc
rcll
test
push
xchg
xchg
fistps
mov
inc
mov
iret
out
inc
faddl
xor
bound
ficompl
out
repnz
sti
or
dec
jmp
sbb
push
test
jg
cmp
idivl
ss
fimuls
inc
out
jge
jge
add
mov
jbe
xchg
subl
sti
dec
call
fisttpll
cmpsl
push
lcall
adc
rcll
jnp
inc
enter
decb
pop
fs
mov
pop
cmp
aas
cltd
outsl
rcl
add
sub
ret
clc
dec
xchg
fdivl
mov
mov
lods
jecxz
ficoml
mov
pop
mov
xchg
push
adc
testb
leave
cs
aam
test
das
jecxz
leave
pop
mov
ss
ficoml
mov
scas
push
fsubs
or
inc
or
repnz
xor
and
movsl
in
fwait
in
pop
cwtl
repz
out
push
maxps
xchg
cltd
jmp
cwtl
ror
add
imul
push
mov
jo
gs
dec
fcompl
repnz
shlb
std
andb
mov
lea
cmp
stos
jge
cmpl
jne
insl
mov
scas
aad
je
xor
pop
sbb
and
das
mov
xchg
sbb
fst
adc
mov
push
movsb
insl
sub
push
xchg
inc
andb
mov
dec
ret
shll
lods
pop
filds
sarb
insl
lods
mov
and
pop
push
loope
aad
test
iret
xor
lahf
mov
into
sbb
xchg
js
fistps
in
cmp
push
lcall
mov
repnz
call
ret
jno
in
mov
int3
cltd
out
cmp
inc
in
cmp
adc
jmp
icebp
pop
fimuls
popa
adc
sti
outsl
je
jp
into
cmc
push
push
pop
xchg
and
sub
pop
mov
mov
or
int
xor
mov
pop
jecxz
jl
cmp
mulb
and
cwtl
fldl
in
adc
ret
adcb
jl,pn
outsl
xor
xor
xchg
les
cmp
push
pop
mov
stos
and
push
push
cli
aas
xor
adc
pop
ja
cmp
jo
sar
call
sub
sub
fldpi
fnstsw
fwait
adc
cmpl
in
in
insb
pushl
imul
daa
repz
pop
dec
pop
call
cmc
decl
push
or
xor
test
sarb
inc
inc
lock
push
fsubl
lods
cld
pusha
les
lea
ficomps
bound
or
inc
cmpsl
ljmp
push
rolb
and
movsb
je
adc
jno
mov
call
pop
stos
inc
push
pop
or
or
push
in
rorl
xor
push
call
out
sub
jne
rcll
sub
pusha
or
pop
xchg
ds
aad
xchg
jno
and
push
fldl
sub
push
popf
js
fs
mov
xlat
push
test
sahf
adc
test
aam
sbb
imul
mov
stos
cmp
xorl
xchg
sysexit
sahf
ret
push
sbb
or
and
mov
jg
adc
jl
dec
ss
mov
popf
popf
sbb
lods
sub
mov
ficompl
loop
lock
pop
xorb
sub
imul
cli
adc
pop
pop
sbb
arpl
testl
jbe
xor
stc
or
divb
out
jecxz
jb
or
outsl
xchg
pop
mov
push
daa
cmp
adc
int
inc
inc
decb
cs
add
push
enter
mov
add
or
inc
add
fists
cmc
pop
sarb
in
fimull
push
lea
mov
pop
mov
stos
int3
inc
sahf
xor
std
lret
lds
sub
sbb
adc
popa
sbb
add
or
mov
jmp
idivb
mov
or
inc
xchg
cli
and
loope
outsb
pop
pop
dec
outsb
pop
in
test
jne
push
icebp
hlt
movsl
sub
xor
push
aam
rcr
mov
jbe
cmp
cmp
push
je
and
inc
jno
mov
dec
inc
jl
pop
add
mov
pop
xor
je
mov
jl
jne
je
outsl
fsts
push
pop
jbe
ss
or
jns
mov
inc
sub
popl
pop
push
mulb
mov
test
add
fs
push
fwait
push
mov
mov
xchg
inc
cmpsl
and
psrad
cs
pop
cmp
sub
loopne
out
scas
je
dec
lcall
lret
mov
dec
jmp
sub
or
andl
pop
add
movsb
jmp
push
fsts
das
xchg
or
lcall
cmp
pop
dec
fs
inc
shll
insl
mov
pop
pop
loopne
loop
bound
das
mov
ret
insb
ja
movsl
rorl
in
adc
fldcw
in
push
jbe
and
jmp
jmp
xchg
mov
adc
addl
push
mov
ret
int3
outsb
jmp
andb
dec
lret
push
pushf
jmp
bound
dec
sbb
notl
pop
inc
lods
cs
jge
xorb
fidivl
loopne
pop
push
outsb
faddl
jo
and
insl
icebp
lock
je
cmc
pop
loope
pushf
pop
ds
cmp
mov
out
and
cwtl
or
mov
inc
sbb
xor
mov
inc
fbld
mov
inc
or
mov
aad
mov
inc
mov
or
mov
add
in
add
adc
adc
adc
mov
push
inc
or
es
popf
daa
lcall
repnz
cmpsl
add
xchg
sub
xor
inc
ss
popf
fcoml
inc
mov
out
jae
outsl
cmc
xor
fwait
aas
dec
jp
popf
data16
es
sbb
fidivrs
inc
cmpsl
xor
xchg
or
pop
aas
xor
addr16
mov
les
fs
pop
ljmp
fistpl
and
shlb
rolb
movsl
dec
ret
pop
mov
in
adc
mov
mov
jns
xor
jecxz
sbb
push
cmp
fnsave
mov
jmp
xor
cmpsl
scas
unpckhps
xor
sbb
adc
ja
mov
jmp
xor
xchg
push
mov
in
imul
dec
push
aas
cmp
sbb
or
stos
inc
ret
mov
or
std
in
pop
cmp
adc
stos
pushf
jno
int3
test
lds
xchg
and
iret
dec
push
in
adc
jmp
mov
test
lock
mov
dec
pop
outsb
add
xchg
dec
cmp
movsb
xchg
mov
pop
jae
shll
sti
jb
insl
sub
dec
js
mov
fwait
rorl
cs
shlb
jbe
pop
negb
add
addr16
lods
movsl
mov
imul
arpl
sub
out
in
mov
gs
pop
ja
dec
mov
pop
jae
dec
sbb
xor
mov
pop
ret
test
or
out
dec
mov
dec
jns
das
aas
bound
test
out
xor
xor
inc
push
cltd
adc
sub
inc
mov
sbb
ret
dec
xchg
push
inc
cld
out
mov
pop
out
mov
negl
test
int3
out
mov
fdivrs
push
adcl
inc
std
mov
out
add
push
movsl
orb
cmpsb
ret
sahf
jecxz
test
sbb
sub
insb
dec
xchg
pop
iret
and
cli
mov
mov
in
sbb
mov
ds
rcrl
and
inc
xchg
push
testb
fwait
leave
rorb
xchg
sub
inc
add
clc
xor
aam
jo
stos
push
daa
je
idiv
mov
ficoms
adc
mov
lahf
xor
or
mov
imul
leave
or
aad
cmp
inc
add
daa
fcmovne
and
mov
or
idivb
clc
jnp
pop
test
adc
xchg
pop
inc
jbe
fldl
inc
cmp
mov
and
in
stc
add
xor
mov
clc
lahf
sub
pop
int
enter
jp
movsb
mov
ret
fs
fwait
sbb
test
xchg
mov
cmpsl
pop
sbb
and
pop
std
jmp
mov
ljmp
pushf
ja
fdiv
aam
cmp
aad
sbb
or
jg
test
adc
dec
xlat
in
mov
inc
mov
fadds
add
enter
int
xchg
es
and
or
aad
and
pop
xrelease
pop
fwait
cld
cmp
imul
push
lret
mov
sub
jg
mov
and
xchg
xchg
rorb
mov
adc
fimull
mov
or
cmc
xchg
push
mov
fwait
stos
add
add
or
pushf
sub
test
pop
iret
mov
xchg
push
mov
test
jo
daa
cld
outsb
push
mov
insl
jo
jbe
xchg
icebp
xor
mov
rorb
shll
cmpsl
mov
sub
jne
je
jg
xchg
jns
leave
mov
movsl
inc
ds
in
jecxz
dec
jno
out
je
push
cmpl
xchg
dec
lds
mov
nop
or
int3
push
fbld
add
cmp
std
aam
push
movd
sbbb
sbb
test
int3
add
xchg
cmp
add
push
fnstenv
cmp
aad
sbb
sti
call
popa
lock
xchg
jmp
cmpsb
push
mov
pop
or
jne
in
dec
clc
cmpsb
test
ljmp
sbb
mov
iret
pop
sbb
js
shrb
jp
adc
out
push
xor
repz
mov
and
rolb
ds
fisubrl
inc
cmp
cmp
addr16
pop
add
leave
mov
sti
int
imul
cltd
cmp
mov
out
xlat
mov
push
stos
nop
mov
out
int3
cmp
mov
sub
call
pop
imul
mov
push
into
dec
fs
sti
outsb
mov
mov
out
das
imul
fsubr
fcmovbe
rorb
jns
outsb
negl
jecxz
fldcw
add
xor
mov
fisttps
es
mov
roll
imul
rcrb
in
sub
push
stos
xchg
das
adc
les
xchg
divl
sbb
pushf
pop
fisttpll
jmp
ja
fs
sub
push
mov
sub
mov
enter
and
movsl
out
inc
cmpsl
mov
mov
push
popf
movsb
mov
arpl
mov
mov
jbe
clc
add
cmpsl
sbb
adc
jmp
stos
pop
sti
aaa
lcall
add
fcoms
pop
adc
dec
and
push
iret
dec
pushf
adc
mov
push
mov
jg
sbb
mov
mov
insl
and
shll
mov
adc
xchg
into
push
je
mov
shll
arpl
in
add
jg
jnp
xor
fistps
insb
sahf
lds
pop
jae
fldenv
inc
int3
hlt
xor
mov
stc
clc
iret
sub
dec
jl
dec
jg
in
nop
fs
ret
lea
xchg
adc
xor
cmc
or
rorb
add
movsl
icebp
jl
adc
gs
cmp
sbb
push
pop
jbe
add
jno
inc
pop
or
push
call
dec
cmc
cmp
out
mov
cld
aam
leave
mov
das
repz
ret
pop
jb
push
aas
mov
push
pusha
jns
das
jnp
div
mov
sbb
mov
arpl
daa
test
xor
mov
lds
cmovle
nop
movsb
vmovaps
sti
scas
loopne
stos
sbb
adc
dec
sahf
test
not
xchg
or
pop
push
jle
outsb
cmp
pop
pushf
popa
sahf
inc
xchg
fsubr
push
dec
inc
push
dec
sub
inc
call
pop
adc
mov
adc
mov
icebp
nop
or
cmpsb
lret
sbb
xchg
pushf
mov
movsl
xor
sbb
cmpsl
int3
pop
lahf
jne
andb
into
xor
outsl
lahf
pop
add
xlat
cs
push
loopne
dec
enter
push
mov
sbb
ljmp
xchg
sbb
xor
and
popf
pop
or
mov
decb
inc
dec
jns
mov
xchg
call
mov
sarb
pop
and
dec
mov
iret
ja
mov
stos
adc
adc
or
fs
push
xor
loopne
jge
icebp
push
adc
loop
mov
push
pop
dec
addb
xchg
and
lods
dec
decb
addb
out
inc
fwait
ret
je
icebp
test
out
fcmovnb
in
lahf
aad
push
pop
xchg
inc
pop
lods
push
int
mov
mov
call
sbb
dec
add
jnp
stc
push
and
jmp
lret
mov
dec
push
inc
cmpsb
sub
stos
mov
sub
mov
loope
enter
cmp
push
sub
lret
ficoms
cmp
aad
imul
lds
subl
lea
push
dec
or
es
popa
cmpb
push
cmp
hlt
js
pop
gs
lds
pop
fcoms
jno
insb
mov
and
sub
stc
jge
cltd
dec
mov
insb
push
vpmaxub
dec
or
mov
ret
stc
jb
dec
mov
sub
loopne
mov
popa
mov
pop
lods
out
jmp
addb
pop
dec
mov
ret
fnstsw
sub
mov
pushf
push
fucom
add
and
outsb
cmp
adc
push
hlt
and
cs
xor
push
mov
in
push
mov
movsb
mov
cmpsl
mov
lds
xchg
xchg
xchg
xorl
pmulhw
add
cltd
rcr
rcr
xchg
xchg
out
mov
mov
mov
fimuls
push
jae
loop
dec
adc
js
add
test
test
jo
xchg
lds
xchg
int3
sbb
enter
movb
das
sub
cmp
cmpsb
jmp
adc
test
inc
jae
mov
cld
and
dec
inc
rorb
mov
test
adc
loopne
sbb
movl
dec
pushf
out
cmc
stos
out
and
sar
mov
js
ja
or
xor
call
inc
dec
mov
xor
imul
ds
add
jae
sbb
sahf
int3
jge
pushf
cmpsl
in
jecxz
iret
mov
repz
jecxz
mov
fisttpll
jecxz
pushf
mov
popa
ficomps
ss
cmp
lds
lock
mov
movsl
jge
xchg
ficoms
fldcw
adc
gs
fcmovb
jp
and
mov
mov
mov
fsubl
pop
adc
fiaddl
fs
inc
insl
mov
sar
pop
xor
dec
imul
sub
movsl
popa
dec
cmp
cltd
leave
es
rorb
lods
daa
lods
cli
cmpsb
icebp
sbb
jg
push
hlt
movsb
shlb
dec
inc
outsb
cwtl
es
xchg
pop
mov
sbb
jae
movsb
mov
xchg
jae
insb
not
das
je
inc
inc
in
pop
add
fwait
sub
outsb
inc
dec
ret
dec
sbb
mov
add
dec
and
sar
add
pushl
dec
notl
scas
leave
add
cmp
dec
cmp
sub
int
push
jmp
mov
fcomps
rcrb
aaa
xchg
pop
jge
mov
adc
mov
dec
es
lret
and
lea
fs
pusha
cmp
mov
int3
mov
enter
pop
hlt
out
jmp
xchg
adc
popf
aad
mov
sarl
sub
test
or
mov
aas
mov
sub
pop
fldl
and
cmp
mov
ss
scas
call
imul
ret
scas
and
out
push
ljmp
nop
ljmp
push
orb
scas
rcll
xor
test
out
push
cmp
aad
ret
sbb
test
push
es
sarl
mov
inc
xor
cmpsl
jg
xor
cmpsl
mov
scas
orl
lods
push
dec
xchg
sub
mov
test
loop
cld
es
push
outsb
xchg
dec
pusha
bound
into
jb
in
psubsb
xchg
fidivl
sti
out
out
aas
or
lock
xchg
ds
add
sbb
and
mov
push
ret
fstpl
and
add
bound
in
cltd
mov
inc
jge
adc
int3
iret
jae
in
push
cwtl
sbb
fnstsw
iret
and
push
xchg
xchg
outsl
leave
adc
cs
mov
loope
or
mov
movb
inc
xchg
out
dec
mov
cltd
push
and
fcoms
push
les
cmp
jo
jmp
mov
sub
pop
sbb
and
mov
adc
xor
aam
xchg
pop
fs
cmp
fadds
stos
dec
lods
and
xchg
jmp
stos
faddl
lahf
mov
pushf
shlb
lahf
mov
insb
mov
sbb
mov
xchg
repz
cmp
into
repz
scas
mov
aaa
xchg
dec
enter
mov
xor
sub
lret
jle
test
fwait
pop
mov
xchg
pop
call
pusha
cmpsb
outsb
rcll
loopne
stos
xchg
pop
pop
pop
and
test
cmp
icebp
sbb
roll
fldcw
add
inc
insl
xor
push
inc
cmp
outsb
inc
or
rorb
std
sarb
push
js
xor
es
sti
sahf
roll
and
lds
xor
imul
mov
xor
clc
push
les
clc
and
inc
sub
loopne
xchg
pop
dec
mov
mov
push
fsubl
inc
sbb
mov
js
mov
jmp
aam
dec
mov
ficoml
fs
push
inc
dec
sbb
addl
ljmp
xchg
out
addr16
xchg
sub
test
mov
ss
popa
mov
dec
pop
or
popa
push
sub
out
dec
jge
stos
pop
xor
insl
sbb
push
sub
mov
loop
dec
add
adcl
lds
dec
push
movsb
inc
pop
pop
sbbb
test
popa
out
shl
gs
repnz
xor
xor
or
jge
xchg
jb
and
test
out
add
int
xor
shlb
stc
lea
ljmp
ret
pop
aam
or
mov
pop
push
lret
lcall
sbb
andl
pop
pop
sbb
roll
push
mov
aam
dec
jmp
sbb
ret
add
es
repnz
fcomp
cmp
shll
cmc
push
xorb
lahf
pop
es
je
dec
arpl
add
xchg
and
jae
sbb
pop
sub
mov
je
xchg
mov
dec
or
cwtl
mov
shll
xor
push
arpl
push
mov
cmp
mov
adc
inc
xor
pop
sbb
and
pop
xor
out
pusha
sub
into
dec
subl
sub
pop
xor
cs
filds
les
push
sub
dec
and
xchg
pop
sbb
adc
cld
and
ljmp
lock
flds
xchg
stc
sbb
mov
pop
fcoml
in
and
pop
negl
dec
jge
mov
xor
out
inc
pop
popf
dec
movsl
jo
inc
ja
arpl
mov
ds
pop
sarb
fdivr
stos
mov
sbb
pop
push
push
movsl
jp
mov
pusha
cli
adc
in
fisubrl
jbe
mov
and
jnp
mov
dec
repz
outsb
mov
rclb
stc
sub
fdiv
rolb
mov
lods
fsubl
push
rcl
mov
sbb
rcl
mov
sub
mov
add
jle
and
rolb
dec
xchg
cmp
xor
pop
jmp
jp
push
ss
int3
xchg
enter
mov
pushf
sub
xor
js
int
pop
jg
shlb
add
dec
insl
mov
xchg
in
mov
cld
ljmp
mov
in
test
addb
rolb
sub
sub
lcall
pop
cli
out
mov
mov
test
cltd
leave
or
cmpb
push
sub
leave
push
push
and
fildll
pop
mov
or
mov
mov
lock
lret
aas
outsl
test
push
push
in
jbe
imul
and
ja
jbe
adc
aas
and
mov
imulb
ret
and
sbb
dec
subl
add
rcr
dec
pop
jns
rcll
or
popa
inc
in
xor
mov
and
xor
or
mov
shll
or
mov
mov
popf
leave
xorb
movsl
js
push
mov
xor
je
fsubl
mov
sti
jle
pop
cmp
outsb
push
sahf
xchg
sbb
or
adc
inc
sbb
mov
sub
fnstsw
xchg
in
mov
cmc
xor
out
xchg
push
cmc
cli
ljmp
inc
shrl
sbb
mov
aas
ret
out
xchg
push
push
or
mov
and
push
xchg
pop
in
leave
je
dec
lock
movsb
sub
imul
shlb
sahf
mov
mov
push
jo
push
dec
idivl
dec
stos
jo
cmpsb
or
mov
cmpsb
loopne
loopne
jae
jge
mov
mov
jb
jg
mov
insb
inc
and
jb
cmp
jle
sbb
in
outsb
xchg
adc
xchg
lea
cmp
ljmp
xchg
lds
xor
jo
arpl
bound
lock
add
inc
out
or
inc
cmp
lds
push
dec
adc
cmp
hlt
add
cwtl
jbe
loope
and
fwait
inc
inc
jp
movsb
mulb
sbb
outsb
xchg
and
push
mov
jo
mov
or
andb
pushf
cmp
ret
adc
in
lret
sahf
adc
jmpw
push
cwtl
sbb
imul
push
call
repnz
push
jmp
out
mov
pop
hlt
and
nop
mov
into
ss
sbb
iret
jno
dec
lock
jle
and
int
xchg
lods
dec
add
pop
mov
inc
sbb
mov
jo
int3
mov
imul
mov
out
leave
push
or
gs
adc
dec
aad
and
or
pop
shl
push
cmp
scas
mov
adc
pop
sub
add
cltd
rol
sub
adc
mov
aad
sub
pop
add
shlb
andb
pusha
mov
sub
lds
subb
stos
cmc
mov
scas
add
nop
rol
insl
dec
sub
in
repz
jmp
cli
pop
pop
fildll
stc
xor
cwtl
mov
mov
arpl
insb
int3
int3
xchg
jae
lret
mov
aam
and
mov
dec
xchg
add
inc
jne
mov
xorl
sub
nop
cld
int3
dec
in
shll
aas
or
dec
lods
es
ret
jne
cmp
or
popf
mov
inc
xor
jp
jb
mov
adc
xor
fnstenv
dec
loope
test
fwait
loope
arpl
es
arpl
rcll
test
gs
mov
and
fidivl
out
xor
mov
lods
icebp
mov
dec
sub
jle
leave
inc
or
scas
loop
pop
add
fcoms
cmpsl
filds
push
jmp
sub
add
and
jge
mov
repz
cs
int
add
in
sbb
pop
lret
fs
leave
or
pop
mov
sti
fcomi
neg
seta
add
inc
and
mov
jno
mov
jae
imul
fbstp
and
es
mov
sbb
mov
test
push
cmp
jno
cmp
leave
in
iret
sub
jne
stos
out
mov
pop
mov
stos
jno
add
mov
xor
mov
shlb
xorb
fwait
sub
pushf
push
dec
sub
sub
mov
dec
decb
jae
xor
test
adc
mov
xchg
dec
insl
iret
enter
and
les
lahf
jno
stc
jmp
int
cmp
inc
push
dec
push
insl
jg
in
aam
xchg
enter
cld
inc
jge
cld
insb
gs
adc
cmp
xchg
adcb
ret
mov
cld
mov
int3
push
xchg
add
rorb
xor
jnp
aam
push
or
ret
or
mov
mov
cli
outsl
or
movsl
aas
dec
pop
and
cmp
lcall
mull
loope
pop
mov
das
push
enter
stos
dec
cwtl
dec
lods
clc
xor
cmp
scas
xchg
lret
in
stc
inc
incb
sub
dec
or
xchg
sub
sbb
fdivrp
cmp
xor
mov
loope
orl
xchg
pop
cmc
fdivs
sbb
mov
fnsave
loopne
inc
cmp
in
mov
push
test
xchg
and
and
sub
dec
push
dec
aas
pop
sti
inc
and
out
mov
or
mov
ja
in
mull
lods
rorb
dec
es
fdivrs
cwtl
xor
fdivrl
shlb
negl
in
loopne
popf
push
pop
xor
repnz
pop
insb
sti
inc
insb
in
cmp
arpl
adc
imul
cmp
imulb
lret
leave
in
inc
or
call
lahf
xchg
jbe
mov
popa
mov
in
and
inc
sbb
add
pop
data16
mov
rcrb
xor
fmul
inc
jb
enter
pop
cltd
sbb
jo
nop
pop
mov
std
cmp
fiadds
push
cltd
int3
in
loop
xchg
lods
pop
sti
iret
cld
cwtl
cmc
repnz
jg
jge
add
mov
mov
test
mov
neg
mov
aas
xchg
pop
ret
adc
hlt
jb
enter
dec
pop
sbb
mov
mov
iret
call
jp
lods
sub
and
push
inc
pop
insb
cmp
xor
sub
mov
cltd
int3
sbb
dec
enter
ds
pop
fdivrp
sti
mov
pushf
mov
aaa
xchg
nop
adc
jnp
scas
negb
cmp
mov
add
cltd
cmpsl
sub
mov
lahf
mov
movsl
lds
enter
cmc
jno
mov
inc
sbb
mov
and
imul
xor
aaa
pop
dec
jb
and
xchg
sbb
sti
jnp
sbb
adc
mov
adc
gs
jnp
sub
sti
pop
lock
push
addb
push
hlt
dec
cmp
lock
mov
lock
xchg
fnstenv
cmp
xchg
dec
mov
popa
sbb
pusha
and
bound
push
icebp
push
test
scas
jle
subl
loopne
sub
adc
rcrl
fxch
push
lret
mov
loope
addr16
mov
test
ds
dec
push
pop
cmp
add
push
cltd
mov
test
jb
hlt
and
test
cmpsb
or
sbb
enter
pop
mov
rcrl
in
push
xor
lcall
pop
scas
push
push
xchg
cs
inc
inc
lret
pop
cltd
mov
add
mov
out
outsb
cmp
repz
loope
jae
out
xchg
add
shlb
push
lret
jmp
fstl
xor
pusha
mov
cmpsb
insl
jns
mov
sbb
and
push
in
sbb
and
and
pop
sbb
push
movsl
jns
cmpsb
lcall
movsb
rol
pop
std
mov
mov
cmpsb
movsl
push
jl
dec
pop
leave
push
dec
adc
push
nop
inc
pop
push
and
fisubrs
inc
stos
lcall
or
dec
sahf
icebp
or
mov
mov
test
xchg
scas
push
mov
into
sbb
pop
or
imul
bound
jmp
test
jl
mov
or
je
ss
jne
notb
inc
aaa
jnp
mov
divb
test
scas
mov
mov
mov
sbbb
mov
pop
mov
xor
dec
popf
jne
ds
ret
pop
push
bound
pop
jmp
popf
nop
mulb
insb
das
inc
inc
pop
push
xchg
std
rclb
stos
sbb
lds
mov
jp
rcrb
movsl
xor
xchg
xor
or
mov
add
add
jns
out
je
mov
mov
jo
rolb
or
inc
xchg
mov
sub
dec
jecxz
mov
data16
mov
pushf
js
ret
adc
aad
ds
add
mov
scas
adc
xchg
and
cmp
cmc
mov
push
outsb
insl
popl
test
fldenv
in
jmp
cmc
jno
call
cmp
push
dec
xchg
out
data16
cmp
inc
push
pop
jl
aas
jecxz
jle
iret
popa
inc
movsb
mov
fisubrs
std
imul
stc
lods
ss
andl
xlat
sub
adc
dec
xchg
in
mov
clc
faddp
and
xchg
repz
pop
sub
mov
call
inc
lods
test
mov
xor
push
xor
push
xor
xor
xlat
sbb
arpl
cmp
bnd
or
sti
sbb
rcrb
push
pop
xor
sbb
mov
adcb
stos
scas
sbb
and
or
neg
movsb
test
push
xlat
mov
adc
repz
cli
push
xchg
fcoms
je
out
sub
idivb
faddl
push
mov
and
in
pop
push
xchg
add
xor
push
out
clc
jecxz
orb
jp
or
push
push
das
in
out
rcrb
jl
mov
xchg
push
cmp
xorb
xchg
movsb
sub
cmp
mov
ss
daa
add
lds
mov
push
dec
in
mov
in
cld
lcall
sbb
outsl
inc
shll
push
test
pop
rcll
popf
jnp
ss
add
loope
xor
pushf
outsb
xchg
cmp
shl
lods
push
mov
jne
push
dec
adc
cltd
addr16
repz
bound
pop
outsb
cltd
mov
sbb
ss
clc
cmp
out
repnz
mov
jne
cmp
push
jl
mov
daa
repnz
xchg
and
xchg
xor
adc
adc
stc
aas
jecxz
addr16
icebp
sahf
jnp
movsb
push
pop
xchg
lock
mov
cmp
sbb
pop
outsb
pop
pop
movsl
testb
dec
test
stc
mov
mov
pop
je
sbb
es
out
ds
jmp
fldpi
aas
hlt
xor
sarl
cmpb
cmc
movsb
mov
jbe
movsb
nop
sub
in
cmp
push
lret
sbb
xchg
aas
mov
sub
push
push
loope
push
scas
dec
or
inc
in
inc
xor
push
out
xchg
lea
pop
sbb
push
jg
cmp
andb
mov
sub
jo
stc
inc
out
adc
std
or
mov
mov
aad
mov
daa
lods
out
jne
aas
sbb
dec
jmp
jno
hlt
addb
add
add
imul
ret
pop
cmp
and
outsb
jp
pop
in
lock
cmp
sbb
pop
push
push
ret
sub
int3
cld
mov
aas
popf
sbb
popf
jge
xchg
shrl
movsb
pop
lods
sub
sub
sbb
pop
nop
cmp
or
aam
and
pop
dec
sub
xlat
test
jmp
pop
jno
rcrl
notl
mov
dec
sbb
dec
lock
scas
pop
inc
inc
in
pop
pop
mov
nopl
dec
or
inc
ds
pushf
mov
mov
aad
sub
lock
in
out
sti
fnstenv
push
sub
xor
std
pop
push
test
stos
cmp
insb
popa
jg
fs
icebp
inc
mov
push
lods
inc
push
add
clc
fcompl
cmp
mov
popf
sbb
sub
pop
dec
hlt
loopne
cmp
dec
mov
test
pop
cmp
andb
jo
jno
gs
jnp
mov
and
lahf
outsl
xorb
loopne
pop
xchg
call
into
push
lods
rcrb
fldl
sahf
mov
mov
scas
cmp
repnz
and
movsb
test
lods
pop
test
mov
mov
loop
jnp
inc
in
push
jmp
orb
idivl
push
jns
enter
or
inc
xchg
popl
pop
xchg
nop
repz
sbbl
adc
push
fstps
inc
xchg
jmp
aaa
stos
add
icebp
aaa
out
shrl
test
les
in
or
fsubr
jg
jecxz
call
mov
mov
xorb
das
and
idiv
cmp
sar
inc
fisubrs
adc
mov
cli
mov
pop
mov
vmulss
mov
int3
and
push
movsl
dec
add
popf
sub
inc
sbb
sbb
into
addr16
fcomi
repz
stc
or
loopw
pop
movsl
lock
cmpsb
ljmp
js
push
frstor
jp
daa
xor
xor
cmc
sub
adc
cmp
and
movsb
and
xchg
mov
sub
aad
inc
rcll
cmpsb
cs
adc
fcoml
fnstsw
test
dec
fists
jne
jns
xchg
adc
cmp
mov
inc
ss
push
leave
xor
sbb
aam
sti
xor
add
cltd
frstor
shl
or
mulb
int
push
lahf
mov
push
xor
mov
imul
pushf
sub
mov
sbb
movsb
sbb
pop
mov
xchg
notl
lcall
jno
in
lret
fwait
xlat
jo
xchg
stos
push
add
dec
mov
or
sbb
dec
call
jg
mov
dec
xchg
mov
add
cmpsb
inc
xchg
pop
mov
repz
inc
leave
mov
pop
mov
clc
dec
jo
push
enter
or
je
mov
data16
mov
imul
jp
icebp
sub
int3
lret
movsl
cmp
push
mov
aas
mov
leave
adc
lods
and
push
mov
mov
dec
pop
sbb
xchg
pop
adc
pop
mov
or
or
mov
test
pop
and
mov
pushf
jmp
iret
ds
dec
in
mov
fxch
add
xchg
lods
mov
arpl
iret
pop
xchg
mov
mov
pop
sbb
xchg
popa
dec
test
pop
push
push
or
cli
xor
adc
movsl
add
mov
cmp
jo
fldcw
lret
pop
cld
push
stos
xchg
mov
sub
pop
clc
mov
xchg
push
nop
outsl
xchg
aas
loopne
or
lahf
je
es
jg
je
mov
jbe
ljmp
xchg
lcall
pop
shlb
out
jle
mov
outsb
inc
mov
mov
daa
push
fdiv
mov
stos
out
inc
and
pop
xor
add
stc
or
shlb
addl
imul
add
testb
and
insb
inc
inc
inc
scas
sbb
in
lret
test
xorb
dec
repz
or
mov
sti
cmp
ljmp
dec
loopne
iret
mov
fucomip
mov
pop
int
loope
xchg
mov
xchg
xchg
pusha
es
loopne
mov
or
fdivrs
scas
pop
cs
mov
outsl
leave
push
addr16
add
mov
cltd
js
xlat
lods
jno
mov
dec
and
stc
push
push
aaa
jo
jnp
mov
cmp
mov
lds
mov
inc
sbb
adc
es
and
shrl
aaa
ljmp
int
jg
and
dec
jno
add
or
and
mov
int3
add
sub
cmp
sbb
dec
inc
push
fmuls
rol
stos
push
mov
pop
xchg
addr16
add
push
sbb
push
inc
jge
cld
cltd
mov
push
pop
dec
push
pop
outsl
data16
lods
inc
cmp
int
test
mov
mov
aad
fiadds
inc
jmp
xor
pop
mov
pop
test
in
push
push
fsubs
mov
xor
pop
or
aad
cmp
add
ret
add
testl
mov
cmpsb
jo
mov
mov
test
jnp
fcomip
fcmovnu
popa
mov
movsb
pop
insl
aas
stc
push
push
add
fwait
test
inc
mov
xchg
loopne
shr
lret
mov
xlat
xor
nop
shr
mov
in
test
in
pop
sbb
or
jmp
add
mov
addl
lods
push
in
jo,pt
jp
add
shlb
or
and
rcll
pop
dec
gs
jnp
xor
mov
pop
cmp
insb
xchg
in
dec
xchg
test
mov
loop
mov
sub
mov
sbbl
loope
mov
xchg
roll
inc
je
and
inc
sub
int3
lret
cwtl
lret
arpl
mov
mov
ss
jge
rcl
jmp
adc
pop
jo
adc
cmp
push
lret
loop
xchg
or
mov
xorl
push
cmc
and
jl
test
add
mov
sbb
in
dec
push
loopne
shrb
das
and
test
jmp
fstpl
sbb
mov
add
lods
cmpsb
cmp
sahf
jno
movsb
popf
jno
dec
cmpsb
loope
push
in
movsl
rorb
pop
sub
rcr
mov
rcrb
lock
addb
movsl
jb
jne
and
sti
lods
mov
xor
mov
es
or
dec
gs
mov
push
dec
sbb
push
inc
daa
out
sub
fidivs
adc
les
loop
xchg
or
sbb
popf
int3
sbb
imul
gs
mull
hlt
lock
mov
ja
xchg
scas
movntps
js
loope
mov
out
pop
pop
add
and
cmp
jne
lret
mov
dec
data16
pop
ja
push
mov
jecxz
enter
push
daa
inc
pop
adcb
jg
dec
pop
xchg
frstor
lods
or
dec
ret
mov
and
cmp
fcmovnbe
mov
add
into
xlat
xchg
in
sub
xchg
sbb
mov
sbb
xor
adc
push
out
lret
jno
aaa
test
popf
push
mov
xchg
into
jno
xchg
mov
out
iret
fcmove
lds
adc
fstps
stc
sbb
jae
push
sub
dec
adc
cmpsb
dec
ljmp
aas
push
inc
sub
shlb
cmp
adc
test
jp
mov
fistps
mov
jecxz
jmp
jne
adc
xor
or
outsl
ss
rclb
lahf
pop
cld
lods
dec
outsl
sub
or
iret
sub
in
mov
or
in
pop
push
andl
jmp
es
repz
dec
ljmp
outsl
aaa
clc
lahf
adc
adc
fidivs
jmp
pop
sbb
xchg
push
fistl
push
addr16
push
pop
lret
lret
out
cli
test
hlt
daa
mov
int
test
sti
adc
xor
mov
ficomps
xchg
mov
jecxz
sbb
movsl
mov
fwait
pop
rclb
xchg
jge
rcll
inc
or
cmp
jge
jno
xorl
ss
insl
loop
jne
loop
xor
adc
jb
adc
adc
ret
jg
sbb
pushl
xor
mov
or
xchg
lods
jp
std
fisubl
dec
or
xor
shll
inc
call
dec
push
jl
xor
popa
fisubrs
sub
aas
jo
pop
jp
arpl
stos
inc
inc
cwtl
dec
xchg
push
out
pop
push
sub
pop
inc
ret
mov
ja
test
mov
push
lret
in
shll
sub
int
push
and
jg
cmp
or
mov
mov
dec
mov
push
push
fdivs
mov
lds
and
mov
cmp
xchg
std
jg
roll
jno
pop
push
clc
sub
jmp
or
inc
cmp
mov
ret
mov
into
inc
ds
and
xchg
inc
addr16
mov
jl
loop
fs
lcall
push
mov
xor
aam
and
push
jbe
popf
push
dec
sub
imul
mov
jp
icebp
mov
int3
bound
jae
sub
test
inc
mov
push
xchg
leave
leave
rcl
ja
jmp
add
dec
shl
mov
loopne
dec
add
repnz
arpl
dec
pop
inc
enter
popf
push
adc
cltd
pop
sub
mov
mov
and
inc
add
sbbl
cmc
popa
int3
mov
cmp
out
dec
stc
and
rorl
aaa
cmpsl
xchg
ds
mov
js
inc
xor
rorl
loope
jp
ja
test
ror
jl
fcmovbe
mov
mov
or
push
sti
mov
push
pop
sbb
adc
in
jp
add
imul
addb
stos
sub
les
push
cmc
outsl
hlt
push
repz
jbe
test
jl
sub
pusha
test
dec
push
or
and
int
pop
or
mov
mov
mov
leave
pop
mov
icebp
mov
fwait
dec
not
pop
jecxz
cmpsb
outsl
dec
imul
inc
mov
mov
pop
lret
jbe
push
pop
push
cwtl
sub
push
lcall
or
mov
fildl
shlb
pop
push
xchg
add
mov
jno
pop
popf
dec
and
lahf
xor
fildl
std
adc
stos
adc
inc
jbe
outsb
pusha
clc
mov
and
out
sti
push
inc
jle
mov
jno
outsb
push
roll
leave
rol
test
insl
cmpsl
or
inc
test
out
dec
jl
test
dec
sub
jmp
outsb
lret
lahf
loope
jb
ret
dec
push
fistps
pop
xchg
leave
xchg
cmp
xor
jbe
ret
loop
nop
movsl
jecxz
test
ds
pop
imul
sbb
push
bound
imul
nop
cmpsl
mov
ljmp
enter
xor
xchg
jle
pop
imul
xchg
outsb
sbb
loope
inc
adc
mov
mov
bound
xchg
aas
pop
sub
in
dec
sbb
lds
inc
mov
ret
inc
mov
sbb
inc
mov
pushf
adc
inc
sub
xor
and
loopne
lcall
das
enter
xchg
test
jne
andb
mov
jl
mov
or
mov
sbb
mov
xchg
or
pop
popf
or
insl
xor
inc
movsb
loop
cld
inc
jecxz
testb
fwait
ja
cltd
out
cs
sub
mov
jae
jns
ret
mov
call
xor
adc
mov
mov
add
pop
shlb
int
fcmovnu
outsb
outsl
mov
negl
ret
enter
popa
dec
dec
dec
inc
mov
inc
int3
xchg
cs
test
in
mov
mov
lods
mov
xchg
fwait
push
jnp
fsubrl
mov
in
loope
push
inc
in
js
inc
jge
push
orb
adc
loop
xor
js
mov
enter
mov
in
leave
testl
xchg
mov
rol
out
dec
or
push
xlat
lds
sbb
mov
js
mov
cmp
cltd
jnp
xchg
mov
sub
jp
jns
jae
pushf
inc
pop
jno
or
in
add
or
pop
pop
sbb
adc
into
mulb
mov
mov
cmp
movsl
rcrl
mov
rcl
inc
bound
pop
push
sub
int
popa
and
cmovb
es
sub
mov
subb
rol
mov
adc
fidivrs
scas
xchg
sbb
cmp
inc
movsl
cli
js
push
outsb
dec
dec
lea
fisubrl
lods
ljmp
dec
mov
hlt
add
add
movsl
lea
movsb
adc
lret
subb
fsubrs
mov
push
lcall
sahf
aaa
out
movb
stos
fsubrl
jns
and
mov
jmp
mov
incl
or
sbb
aad
add
pop
pop
and
imul
inc
test
pop
mov
jp
rol
gs
out
adc
mov
push
cltd
push
push
xor
inc
neg
gs
push
andl
hlt
jno
sti
pop
cmp
fistpl
sbb
icebp
movsb
push
sub
lret
push
fwait
jecxz
pop
pop
pop
xchg
adc
scas
inc
ja
insb
push
mov
mov
cmp
cld
pusha
fwait
adc
imulb
es
loope
pop
xchg
mov
or
sub
adc
sti
dec
jbe
xchg
jecxz
or
lret
test
add
push
mov
pop
adc
jo
xchg
js
mov
lea
mov
ljmp
mov
cmp
push
dec
icebp
repnz
std
into
xlat
pop
inc
or
fsubl
cmp
xchg
sub
aas
sub
mov
mov
sbb
cmc
jmp
orb
movb
or
fcoml
mov
rcl
in
arpl
sbb
popa
mov
mov
daa
stos
arpl
or
dec
nop
adc
lret
xlat
dec
std
push
test
mov
popf
mov
fbld
scas
pop
cld
cmovnp
test
inc
push
into
or
push
xor
push
std
ljmp
lea
mov
bound
cltd
int
aad
cs
sbb
outsb
addr16
mov
xchg
pop
cmp
clc
rorl
lret
dec
mov
push
pop
inc
sbb
push
add
xor
sub
and
in
call
mov
cmp
lret
sub
imul
xor
into
mov
shr
dec
ret
lret
sub
pop
and
or
sbb
out
jg
mov
clc
shlb
mov
in
cltd
mov
fisubrs
cmp
jge
aad
jne
pop
jbe
push
pusha
gs
xor
arpl
add
cmpl
jmp
fs
push
popf
xchg
add
add
and
or
dec
outsb
ja
pushf
mov
push
cmp
mov
lret
jge
decb
mov
andl
and
inc
cmpsb
push
xchg
inc
cmp
jmp
rcr
push
flds
cmp
fneni(8087
in
push
mov
adcb
inc
sub
fwait
data16
test
xor
out
and
xchg
or
fsubrs
in
and
jbe
cwtl
aad
sbb
stos
bound
pop
fldt
lret
popa
daa
pushf
ljmp
jae
sbb
mov
mulb
mov
xor
mov
fdivs
scas
mov
ret
jg
adc
mov
push
cmp
mov
in
jns
js
adc
xchg
dec
in
decb
popa
mov
and
or
sbb
and
xor
pop
inc
mov
mov
and
in
jae
jge
lods
xchg
cmp
enter
sbb
pop
jle
lret
stos
sub
scas
out
outsl
sub
sbb
mov
insl
ret
pop
pop
mov
pop
or
xchg
or
pop
sahf
sub
push
push
mov
sub
cmp
sub
xchg
sbb
aaa
outsl
addr16
jnp
push
mov
jl
sbb
xchg
int
lea
lea
jp
cld
in
fdivrl
cwtl
lods
or
xchg
and
xchg
push
dec
xorb
popa
cld
out
xchg
pop
jbe
in
std
adc
sbbl
mov
dec
lret
rcll
or
mov
cmp
xor
add
jle
dec
fwait
clc
mov
xchg
inc
adc
dec
adc
inc
cs
sub
shll
xor
cmpsb
rcrl
mov
adc
dec
jno
mov
mov
cltd
aas
and
ljmp
insl
xchg
loop
in
fldt
lahf
push
cmp
mov
in
in
mov
loop
adc
push
movsl
add
movsb
push
push
jnp
cs
mov
dec
dec
loop
inc
add
cli
or
push
lds
cmp
sub
dec
scas
cmp
sub
repnz
sub
jl
je
add
imul
in
int
mov
jmp
ljmp
insl
repz
mov
pop
lods
jl
outsb
lds
mov
adc
and
cmp
add
mov
sub
jbe
mov
lahf
fwait
ljmp
xchg
xor
aad
add
testb
loop
pop
iret
arpl
mov
pop
inc
add
das
popa
sbbl
push
or
pop
and
inc
les
iret
xchg
xlat
or
mull
or
sub
push
mov
lret
push
xor
addr16
xlat
or
out
cld
loope
cmp
mov
addr16
ret
pop
das
lahf
push
and
loop
mov
mov
push
mov
inc
adc
pop
sub
clc
jae
push
lahf
fadd
aas
in
lods
test
sbb
dec
mov
mov
pop
xor
xor
das
sbb
pop
mov
lret
insl
ljmp
fs
mov
cmpsl
mov
dec
adc
sti
mov
xchg
das
push
cli
sbb
xor
cmpsb
and
add
mov
adc
mov
inc
or
xor
ret
add
and
inc
std
and
sahf
cli
sub
mov
mov
adc
xor
or
cmp
lods
cld
or
push
jmp
into
mov
sub
jge
jnp
leave
fdiv
das
mov
cmc
movsl
cmpsl
into
dec
inc
and
ret
bound
imul
mov
and
in
int3
jo
cli
jmp
xchg
cmp
sub
cmpsl
and
loop
jle
in
xchg
jbe
xor
xchg
add
inc
shll
add
inc
test
movsb
test
push
in
jno
jl
subl
in
outsb
lret
inc
push
or
dec
popf
in
lods
or
pop
scas
xor
int3
data16
ret
pop
and
test
int3
pop
xchg
out
add
xor
push
ret
ds
add
hlt
and
sub
aas
jnp
inc
clc
jecxz
outsl
ljmp
sti
or
inc
test
insb
push
pushf
movsb
push
inc
lahf
push
sti
xchg
pusha
outsl
lea
cmp
pop
sbb
aam
mov
jbe
js
mov
pop
or
mov
add
imul
jmp
sbb
dec
adc
add
outsb
cmpsb
add
cmp
mov
adc
bnd
inc
aam
stos
fisttps
stos
les
xor
jns
mov
ret
jb
bound
and
inc
cld
mov
and
lahf
cmp
insl
out
jno
sub
sarl
add
ficomps
push
idivb
dec
roll
ss
out
xchg
mov
roll
sub
sub
idivb
pop
adc
pusha
mov
jge
mov
mov
mov
push
in
adc
adc
arpl
fcmovnb
mov
sub
fldl
pop
xchg
mov
mov
lods
jbe
push
jp
hlt
jge
popa
fs
cmpsl
ja
xchg
push
lds
or
std
mov
cltd
mov
add
daa
ret
pop
repnz
xchg
imull
hlt
addr16
aas
adc
sbb
mov
pop
in
lds
sub
pop
sbb
fcoml
pop
mov
es
js
mov
add
popf
clc
inc
ret
xchg
pop
adc
dec
jno
outsl
dec
fisttps
repz
sbbl
xor
test
sbb
call
jnp
sarl
mov
mov
jne
sti
pop
cmp
push
dec
inc
xchg
push
int
or
daa
mov
into
adc
sbb
push
xchg
test
mov
scas
mov
sbb
cli
dec
jae
jbe
fwait
repnz
dec
xchg
mov
xchg
adcb
lret
jg
xor
mov
mov
std
enter
push
ss
mov
add
mov
fs
or
rol
mov
into
imul
ret
mov
add
sub
cmp
adc
mov
xchg
adc
loopne
sub
mov
das
rcrb
cmp
scas
scas
jno
jne
push
dec
cli
sbb
mov
or
push
adc
adc
stos
jbe
add
std
sbb
mov
pop
loopne
xchg
dec
xlat
lock
push
ret
xor
jns
cmpb
outsb
adc
in
fstpl
in
pop
lret
repz
xchg
rclb
jl
xchg
jns
int
mov
icebp
iret
out
loop
outsb
lcall
jbe
sub
in
push
mov
outsl
and
xor
cmp
sub
dec
add
cmp
es
xchg
test
adc
add
push
int3
les
or
pop
push
fcoms
add
add
mov
jb
mov
ret
sbb
stos
xchg
and
or
mov
mov
les
fists
scas
dec
gs
and
out
icebp
or
shl
pop
sahf
loope
pop
icebp
sahf
rorl
xchg
sbb
mov
daa
jmp
mov
inc
xchg
pop
out
push
shll
stos
popa
push
xchg
ja
adc
pusha
xchg
nop
lods
or
xchg
lods
jae
ss
mov
loop
jne
pop
pop
clc
mov
aad
xchg
loope
rorb
loopne
jb
pop
mov
in
jo
cmp
pop
jge
pop
fnstsw
leave
pop
fisttpll
dec
out
sar
data16
loop
imul
loop
lcall
cmp
sub
mov
movsb
adc
loope
mov
or
xchg
xchg
les
mov
pop
mov
pop
shll
push
loope
loop,pn
push
and
xchg
aam
and
cmp
mov
and
nop
out
dec
cmp
mov
jnp
stos
push
aad
mov
outsb
sbbl
insl
mov
add
aaa
test
out
les
add
push
mov
popa
cmp
cli
dec
mov
ds
in
mov
sub
repnz
mov
pop
int
mov
pop
movsb
scas
mov
fcomp
ficoms
push
cld
jecxz
mov
xor
mov
add
push
leave
push
outsl
jp
in
std
fnstsw
mov
pop
mov
mov
aam
mov
pop
mov
sub
nop
inc
lock
push
test
adc
loope
jne
pop
inc
sbb
xchg
mov
or
push
fs
add
stc
fcomp
nop
mov
out
rcrl
ret
sub
rcll
pushf
lea
sub
repnz
dec
dec
sti
pop
sqrtps
mov
addr16
adc
mov
loope
add
fbld
cld
push
jle
inc
pop
xchg
xor
mov
in
out
sbb
rclb
stc
aaa
hlt
js
mov
fsubrl
pushf
push
test
sahf
jp
xchg
andl
mov
sbb
test
mov
sbb
stc
inc
fs
adc
clc
push
mov
mov
and
aad
enter
outsb
fsubs
fwait
imul
rcl
push
mull
testl
cmp
mov
popf
mov
ljmp
loope
pop
mov
mov
aaa
jb
leave
push
popf
inc
aam
pop
daa
jo
xchg
lea
outsb
adc
outsl
mov
out
xor
and
enter
icebp
and
adc
push
mov
jecxz
in
adc
cwtl
adc
iret
jo
hlt
int3
dec
xchg
cwtl
fldl
cmp
xor
and
and
imul
add
mov
cld
and
insb
jmp
xor
pop
xchg
iret
push
mov
mov
xor
push
push
jecxz
xor
xchg
or
leave
mov
pop
and
mov
and
or
xor
cltd
pusha
comiss
movsb
lods
cmp
jb
jmp
push
cmp
pop
repnz
push
sahf
mov
out
arpl
std
and
loop
xchg
mov
sub
dec
fprem1
cmpsl
mov
jb
shll
sbb
xor
inc
cltd
addr16
std
inc
mov
test
ror
sbb
xchg
sub
add
push
jb
push
repnz
sti
loope
mov
lcall
push
cwtl
push
sahf
leave
dec
add
in
adc
jmp
out
inc
out
jmp
inc
cltd
out
outsb
insb
movsb
cmc
arpl
ret
pop
outsb
pop
addr16
mov
mov
rolb
sub
sti
insl
test
enter
add
adc
dec
mov
pushf
idivl
xor
movsb
call
inc
cmpsl
shrl
mov
or
mov
sub
rolb
push
cmp
inc
es
and
inc
xchg
mov
jl
jb
mov
lret
insl
out
adc
out
mov
or
dec
sub
pop
lcall
scas
ret
fdiv
pop
mov
andb
and
test
push
pop
rorl
icebp
jo
clc
cmpsl
jmp
add
push
ficomps
mov
cwtl
fcmovnbe
pushl
mov
jne
test
or
dec
addr16
inc
enter
addr16
mov
insl
movsl
inc
cwtl
hlt
sbb
xlat
cltd
jnp
sahf
outsb
psrad
call
clc
es
add
inc
xchg
lods
test
imul
imul
sub
mov
xchg
cmp
test
cltd
jle
push
xchg
cmp
sub
iret
das
aas
jle
fdivrp
enter
fcmovnu
cli
or
clc
xchg
sub
sbb
aad
jge
mov
test
in
lods
ljmp
sub
lahf
loopne
int3
adc
gs
push
data16
pop
cmpsb
int3
jl
mov
pop
daa
roll
adc
xor
sbb
arpl
and
jle
inc
cld
js
push
out
mov
leave
int3
jne
xchg
sbb
add
inc
aaa
dec
or
fsubs
xchg
enter
or
lcall
or
jns
iret
push
rcr
insl
aam
test
push
adc
or
mov
xchg
aaa
adc
imul
icebp
jmp
test
mov
jb
cmpsl
push
dec
sbb
aas
ss
stos
je
push
jl
add
cmp
ret
jns
mov
cmp
push
xor
fcoml
push
jmp
inc
xchg
xor
pop
xchg
clc
in
fcom
cmp
jae
mov
mov
leave
mov
push
and
rcll
inc
mov
arpl
jecxz
negb
jmp
std
pop
test
cmp
mov
in
fisubs
repz
jp
or
jle
and
sub
test
shll
lahf
pop
xor
xchg
bound
inc
in
stos
cmp
mov
int
repz
adc
xor
adc
aad
push
dec
lock
addb
into
xchg
lock
cmp
push
sbbb
sub
sub
ja
xchg
jp
pusha
gs
cmc
xchg
mov
xor
sbb
cmpsl
mov
jg
push
adc
sbb
ficompl
imul
xlat
xorl
mov
in
outsl
std
jbe
mov
in
pop
dec
test
popl
add
js
lcall
push
popf
jbe
pushf
stc
sbb
faddp
dec
mov
and
pop
pop
test
jnp
sub
inc
fwait
cmp
out
sbb
add
adc
push
cmp
fadd
or
mov
fcoml
in
push
aam
sub
xor
scas
inc
test
dec
sbb
sti
lock
out
lock
mov
out
and
roll
mov
lods
into
int
ret
shlb
cld
push
sub
mov
int
insl
cmp
popf
mov
popa
fsubrs
jnp
lcall
and
cltd
fmul
test
cli
dec
adc
arpl
xor
gs
fsubrs
and
cmpsl
fbstp
add
jo
mov
outsb
xlat
cmpsb
popa
jne
adc
mov
bound
insb
faddp
sbb
mov
mov
adc
clc
scas
xchg
or
js
jae
ficomps
add
cmp
out
mov
das
sbb
xchg
add
fdivl
leave
pop
push
adc
dec
cmp
aaa
xor
cmpsb
imul
pop
sahf
mov
sub
xchg
pop
xor
or
push
or
pop
daa
sahf
push
pop
sbb
push
movb
cli
dec
inc
add
dec
xchg
ret
cs
call
inc
push
outsb
xchg
imul
cmpsb
idivl
or
pop
and
jmp
addb
int3
pop
in
pusha
loopne
inc
shrl
nop
mov
shlb
test
les
mov
push
or
cwtl
cltd
gs
push
fwait
imul
in
bound
imul
fsubs
pop
movsl
push
cmp
popf
pop
add
ror
in
fldt
rolb
mov
mov
test
xchg
mov
loope
sub
mov
std
fildl
xor
pop
mov
cld
add
push
sub
shll
loopne
mov
jge
cli
ret
add
pop
mov
push
or
cmpsb
cld
test
ret
and
cwtl
das
fs
or
ret
jp
push
sbb
mov
jb
js
push
idiv
aam
les
stos
ret
inc
pop
repz
xor
test
cmp
add
sbb
rorb
outsl
shll
cwtl
ss
add
rcrl
mov
daa
sti
push
cmp
mov
test
loopne
repz
and
mov
cmpsl
xorl
mov
or
pop
cmc
inc
push
into
addb
mov
mov
xchg
rcrl
mov
sbb
movsl
sub
sbb
mov
cmp
inc
mov
or
cli
mov
mov
arpl
stc
add
stc
loop
mov
ja
negb
sub
pop
pop
inc
call
popf
fmull
lock
jno
out
xor
xor
ss
jmp
sbb
add
test
popf
push
push
push
out
scas
or
ret
sbb
fistpll
out
ret
dec
jbe
cwtl
xor
stos
iret
jb
out
xor
and
and
and
imul
jp
lea
jecxz
in
inc
or
je
fstps
and
ss
fbstp
sub
add
test
jnp
dec
les
rorb
jnp
cmp
addl
loope
or
sbb
aas
outsb
mov
test
add
xor
sub
aad
jnp
fsubs
and
pusha
xchg
mov
cs
push
dec
inc
adc
popf
sbb
dec
int
cmp
mov
jmp
or
dec
pop
imul
and
paddd
sub
pop
sub
aam
xor
mov
inc
jo
popa
sub
negb
mov
lock
add
je
arpl
dec
sub
dec
cmpb
jecxz
lea
jecxz
out
sub
mov
lock
cmp
mov
loope
nopl
dec
jecxz
sbb
repz
loope
and
loope
or
out
jge
rorb
in
shll
and
mov
cmc
sub
mov
icebp
sahf
push
mov
int
sbb
mov
inc
stos
mov
lret
loope
adc
push
mov
mov
mov
fdivs
vrcpps
mov
and
cltd
enter
sbb
fdivl
push
dec
mov
fdivrp
sahf
fstpt
fbld
add
roll
pop
mov
repz
js
adc
pop
jns
ficoms
scas
pop
inc
jg
clc
pmullw
jo
dec
hlt
loope
icebp
pop
into
imul
mov
scas
fcomps
sub
imul
dec
out
push
jb
arpl
cmp
xchg
cmp
pop
mov
inc
or
mov
mov
popa
adc
scas
pop
cli
orl
shrl
into
mov
mov
xchg
sti
inc
sub
push
cli
push
sbb
jle
and
cmp
xorl
xor
sbb
lcall
push
jle
pop
xchg
in
jecxz
pop
popf
push
in
rclb
inc
mov
jno
pop
dec
cmp
mov
sub
clc
gs
pushf
stos
push
xorb
leave
cmp
movsl
pop
mov
cmp
add
jle
or
outsl
int
xchg
call
adc
leave
flds
mov
pop
pop
imul
aaa
nop
inc
scas
xor
mov
mov
pop
repz
sbb
cmp
inc
cmpsl
cld
or
adc
clc
sti
xchg
xchg
pop
mov
fstpt
in
sbb
leave
push
int
push
cmpsb
add
les
fcoms
enter
inc
sub
mov
push
scas
fldl
jno
mov
cld
inc
cld
or
mov
icebp
sahf
pushf
fnsetpm(287
mov
jle
add
and
mov
std
in
popf
pop
push
or
and
mov
mov
data16
shll
popa
and
out
xor
xchg
repz
ja
ret
aad
in
push
cmp
mov
rcll
nop
and
lahf
cmp
lret
pushl
mov
pop
bound
pop
inc
imul
xchg
xchg
jb
cwtl
xchg
pop
rcpps
adc
push
out
stos
pop
adc
sbb
loopne
mov
mov
xor
incl
rclb
jecxz
dec
orb
inc
sub
inc
daa
inc
imul
mov
pop
cmpl
xor
sbb
sub
mov
outsl
jno
ja
xchg
out
mov
lahf
std
test
adc
cmpsb
add
pushf
lret
and
mov
sub
push
jbe
xor
and
mov
mov
push
imul
data16
call
movsb
es
sub
xor
stos
inc
mov
sub
ds
mov
mov
lods
js
jl
cld
sahf
mov
dec
mov
push
xlat
or
mov
mov
mov
or
clc
xorb
mov
adc
insb
mov
adc
dec
jo
mov
sbb
int
adc
int
inc
add
aad
ds
push
pop
sub
push
pop
rcr
ja
bound
popa
xchg
or
iret
in
lods
fcomps
aam
data16
addr16
adc
fildll
cwtl
les
pop
inc
out
mov
jne
gs
cmp
stos
xor
out
and
ja
outsl
push
xchg
daa
scas
daa
test
ds
jecxz
ljmp
mov
dec
leave
lahf
or
push
sti
cmp
mov
adc
push
std
mov
out
inc
iret
add
aaa
enter
push
test
lret
pop
or
dec
xchg
xchg
push
mov
dec
in
flds
stos
movsl
and
mov
fsts
mov
mov
jmp
mov
in
dec
and
xchg
push
insb
in
out
test
adc
int3
and
push
adc
hlt
sbb
add
fisubs
mov
and
mov
push
sti
repz
sub
into
mov
jmp
sti
lods
pop
push
mov
dec
xlat
mov
jecxz
push
xorb
jmp
lcall
test
xchg
pop
mov
xchg
xor
mov
test
in
mulb
sahf
scas
fbstp
dec
enter
and
xchg
or
push
rcl
mov
pushw
and
cmp
pop
fs
fisubl
inc
movsb
out
stos
inc
dec
adc
fidivrs
inc
fildl
jns
sti
cmp
je
sub
mull
sub
sub
dec
mov
mov
loope
cmp
popa
movsb
ficomps
std
fldl
xor
mov
pop
lock
or
mov
jmp
sbb
jmp
dec
and
or
test
mov
xor
pushf
xor
movsl
or
push
shll
xor
sub
popf
out
aas
pop
mov
cmp
jnp
pop
pop
addr16
add
int
mov
push
movsb
pusha
or
setno
inc
mov
cld
sbb
sub
push
jb
mov
pop
jnp
jb
jmp
rclb
jmp
jge
inc
cwtl
pop
mov
fadd
in
mov
dec
loopne
pop
in
out
push
mov
pop
dec
adc
push
push
jge
mov
sti
xchg
push
sub
sbb
mov
cmpsb
or
pop
push
push
jl
shrb
cmp
lret
sbb
ret
push
dec
dec
push
ds
fadd
orb
sbb
in
mov
cmc
ror
leave
inc
scas
std
mov
je
jb
xchg
fisubl
push
ds
movl
shr
imul
fs
xchg
jb
jae
push
lock
cmp
daa
shll
aam
aas
out
orb
filds
xchg
incb
sarl
int
das
outsl
and
fwait
shr
sbb
in
ds
int3
pop
add
inc
push
push
mov
mov
int3
adc
pop
sub
shr
out
pop
mov
sbb
filds
adc
lahf
daa
mov
pusha
loope
fs
movsl
pop
inc
fs
rcrl
and
sbb
mov
jnp
xchg
jmp
jae
cmp
aaa
movsl
dec
je
and
pop
mov
xchg
stc
cli
push
ss
sti
dec
push
inc
fwait
gs
mov
xchg
mov
cmc
fcoms
add
int3
push
mov
leave
pop
bound
xor
push
or
mov
cmpsl
inc
das
cltd
mov
btr
lods
and
inc
pop
add
adc
ret
add
scas
inc
fmul
mov
gs
dec
gs
gs
dec
in
dec
adc
imul
lock
stc
rcrl
imul
lret
sbb
adc
jecxz
fcmove
test
xchg
xor
xchg
lock
lahf
mov
ret
cmp
push
into
sbbb
push
pop
jge
ja
fs
sbb
fcomps
sub
rol
outsb
stos
and
sarb
out
aam
int3
std
xor
or
jg
cmp
mov
xchg
pusha
mov
js
push
aaa
cmp
inc
ficoml
inc
jmp
daa
or
out
or
and
jle
xor
mov
cmpsl
push
pop
and
adc
dec
aad
mov
lds
cmp
xor
adc
pop
outsb
adc
jnp
popa
out
jge
scas
arpl
shll
cmp
xor
jne
scas
fsubrp
pop
cmp
rcll
in
imul
in
cmp
inc
je
or
fiaddl
add
or
or
push
xchg
sbb
xchg
add
daa
cmpb
pushf
ja
push
rcl
lret
in
sbb
rcl
fdivrp
outsl
and
jb
sub
push
jo
call
push
mov
push
movl
stc
into
sbb
roll
mov
inc
sarl
loope
and
adc
scas
push
pop
shlb
clc
sub
rcrl
js
sub
sbb
jge
sbb
mov
sbb
xor
and
pop
idivl
test
sahf
adc
outsl
sub
add
push
mov
js
fcmovnb
es
and
js
xor
rcl
rcrb
lahf
fsts
pop
push
fnstenv
in
call
xor
fidivrs
sbb
xchg
test
mov
adc
push
cmp
mov
inc
icebp
sahf
xlat
jnp
xor
call
or
adc
or
cmp
or
or
and
push
xchg
nop
add
xlat
popa
pop
scas
ljmp
push
repz
out
ret
imul
inc
notl
out
xor
subl
or
and
enter
push
mov
roll
loop
push
jmp
inc
mov
test
inc
xlat
mov
mov
xor
pop
pop
mov
mov
mov
aam
xchg
rcll
jmp
adc
mov
pop
ret
and
scas
xor
sti
xchg
rorl
sub
ret
cltd
jns
or
cmpsb
out
test
xor
icebp
test
jecxz
sbb
aas
and
addb
inc
jge
fsubrp
imul
add
xchg
sbb
xor
adc
sbb
or
pusha
outsl
pop
rclb
xchg
inc
std
or
jnp
and
mov
jp
mov
cmp
mov
out
push
cwtl
imul
xor
lcall
push
rep
cwtl
std
add
test
ret
push
out
jo
add
mov
or
mov
jae
ds
fisubrs
andl
sbb
out
repz
test
stos
out
and
sbb
daa
icebp
jl
push
push
push
ret
mov
sbb
mov
in
pop
add
and
pop
adc
sbb
fdivl
and
out
adc
jb
arpl
lock
pushf
aas
xchg
cmp
jno
rol
pop
xchg
fdivrl
leave
fcomps
insl
xor
ds
stos
popf
les
aad
nop
in
jno
xchg
and
call
mov
cmpsb
mov
fwait
incl
sarl
xor
jmp
push
pop
loop
imulb
push
pop
addb
adcb
mov
call
xor
ficoml
jmp
pushf
lret
aas
outsb
xor
inc
icebp
sub
add
sahf
xor
jmp
or
adc
pop
jo
mov
cmp
es
into
inc
or
or
popl
sti
hlt
and
jmp
pop
push
sub
mov
cmpsb
dec
pop
outsb
out
sbbl
test
or
cwtl
mov
mov
cmp
out
adcb
sbb
sub
dec
loopne
iret
pop
add
cmp
adc
xor
inc
push
jb
sbb
fistl
mov
mov
int3
pusha
add
sub
pop
enter
sbb
shlb
outsl
mov
in
lds
push
adc
aam
insl
std
fcmovne
mov
mov
into
lret
sub
hlt
fwait
ljmp
dec
dec
sbb
add
cs
xor
jno
push
jg
ret
cwtl
jno
sub
mov
lret
sbbb
inc
xchg
dec
nop
cmp
mov
cld
sub
push
sub
fisubs
aad
rorb
mov
or
fidivrl
lcall
cld
pop
popf
jae
pop
std
inc
int
mov
insb
repnz
mov
stc
es
sub
popa
imul
jnp
fmull
inc
push
adc
inc
int3
mov
inc
lahf
adc
dec
int
clc
xchg
push
out
sub
clc
mov
fprem1
out
xorl
outsb
jle
dec
out
movsl
inc
push
int
or
inc
or
pop
fsts
push
jecxz
inc
mov
jecxz
notb
test
or
out
cltd
push
push
cli
mov
lret
mov
test
fadd
pop
xor
jno
jbe
out
fists
test
stc
sbb
lret
jmp
inc
imul
mov
sub
in
pop
data16
mov
fildl
adc
movb
add
lcall
sbb
test
cmp
loope
pop
mov
mov
pop
insb
scas
loopne
fcmovnb
push
ret
sub
and
mov
decb
movsl
in
test
xchg
subl
lret
fistpll
scas
shll
pushf
push
xchg
cpuid
jecxz
in
pusha
jno
sti
push
sbb
pop
sbb
insb
cmp
movsb
jb
cmpsb
cli
std
repnz
mov
daa
sahf
mov
popf
movsl
inc
cmp
lret
mov
xor
sahf
pop
shl
jae
push
pop
in
popf
jp
xchg
push
stc
mov
xor
sbbl
lods
mov
dec
xor
lods
ret
cmp
loopne
loop
mov
cltd
and
adc
orb
push
push
or
pop
out
cmc
gs
dec
jecxz
mov
enter
cmp
mov
pop
clc
arpl
cmp
push
dec
in
ljmp
jbe,pt
mov
push
ja
ret
stos
sbb
ret
es
rcll
and
inc
mov
into
push
jle
cmp
cltd
push
sub
loopne
mov
or
inc
dec
lock
xchg
addb
cmpsl
icebp
add
out
cmc
and
push
shrb
rorb
outsl
xor
dec
outsl
inc
ret
cmp
out
xor
incl
enter
inc
lds
mov
or
adc
mov
jo
xor
pushf
imul
fidivrs
or
cmp
adc
imul
clc
ret
mov
cmp
jp
xor
adc
icebp
int3
enter
push
cmp
push
ret
out
in
lahf
data16
cmp
mulb
int3
imul
dec
call
xchg
pop
mov
clc
fisttps
daa
xor
leave
insb
ret
lcall
pop
hlt
inc
sbb
nop
movsl
cwtl
bound
testl
inc
dec
gs
mov
pop
xor
mov
lods
scas
inc
sbb
ds
popa
lahf
and
mov
out
popl
sbb
mov
push
test
push
js
bound
leave
push
xchg
or
push
out
cmp
hlt
je
mov
xchg
pop
pop
and
notb
icebp
test
xor
mov
popl
movsl
dec
and
lret
add
cmp
sarl
jmp
mov
cli
pop
lahf
lods
imul
cmp
sbb
cmp
in
add
jns
xor
fstp
add
in
add
pushw
fsts
mov
and
scas
inc
sbb
lahf
push
mov
dec
ret
ss
mov
ja
push
mov
or
and
jns
adc
shlb
cltd
sbb
mov
adc
sbb
pop
xor
testb
lahf
or
lcall
jecxz
adc
xchg
cmpsl
ret
out
das
or
pop
lods
movsl
inc
stos
out
out
push
lahf
inc
mov
pop
mov
push
dec
mov
jmp
inc
sub
sbb
sub
outsl
cmp
mov
pop
clc
or
mov
and
sbb
test
loopne
pop
jb
push
mov
pop
shll
int
call
inc
push
jns
in
daa
cli
pop
divl
mov
sub
out
scas
or
jne
ror
js
xor
mov
sarb
add
adc
in
push
and
rcll
push
push
sub
push
and
sub
pop
scas
shlb
in
inc
pop
mov
dec
jb
adc
adc
mov
pop
leave
bound
mov
jp
mov
decb
sub
leave
scas
jbe
icebp
sarl
xorl
cmp
xchg
or
lock
pop
or
nop
stos
adc
out
pop
fmuls
inc
je
push
sbb
into
subl
dec
mov
lcall
jge
or
sub
jnp
adc
cli
clc
scas
scas
les
push
iret
and
add
lds
sub
pop
jle
adc
dec
imul
sahf
enter
cmpb
mov
es
int3
pushf
and
fnstcw
out
test
jbe
es
cmpsb
xor
aam
lods
lcall
add
ficomps
std
dec
inc
iret
fisubs
pushf
es
insb
scas
mov
push
adc
inc
and
repz
jae
sahf
aad
cmp
decb
imul
lret
test
test
lods
stos
adc
xor
inc
test
ffreep
fadds
mull
rcll
notb
insl
scas
or
jmp
push
mov
dec
lret
push
sub
cld
adc
fs
ds
mov
cmp
lods
xlat
mov
push
clc
aas
mov
lcall
loope
rclb
cld
nop
cmp
mov
inc
and
lods
xchg
inc
adc
cld
enter
pusha
popf
jb
shll
mov
call
mov
test
fwait
inc
fwait
mov
sbb
test
popf
adc
pop
xor
pop
mov
cmp
pusha
and
sub
add
push
adc
dec
vorps
sub
mov
xor
cmp
mov
mov
jae
dec
xchg
loope
stos
std
pop
push
adc
lahf
or
pop
mov
int
push
fidivrs
jb
fimuls
mov
xchg
lods
jno
and
in
adc
add
xchg
fs
push
mov
in
movsb
pop
xchg
pop
leave
jl
cltd
xor
bound
subb
and
xor
inc
icebp
jl
ret
imul
int
xor
cmp
xor
pop
shll
xor
add
movsl
call
imul
mov
mov
add
test
outsl
push
ret
and
push
dec
lods
negb
imul
in
cmp
in
mov
jl
fsubp
fwait
sbb
stos
push
int
filds
push
popa
jmp
jmp
iret
lods
scas
sub
stos
pushf
sub
mov
pop
jb
sbb
and
scas
loop
dec
xchg
and
clc
ret
push
dec
push
and
loopne
shlb
mov
mov
loop
jle
cld
dec
into
sub
enter
mov
in
pop
inc
jo
loope
not
mov
stc
ret
add
push
pop
shr
push
inc
push
mov
push
ret
std
push
and
and
add
outsl
cmp
outsl
aas
insl
mov
ja
cmpsb
sub
sbb
mov
out
inc
and
outsl
adc
push
adc
mov
mov
leave
sbb
popa
outsl
dec
xchg
aad
test
shll
adc
xorb
push
jl
xchg
add
and
daa
xchg
sub
pushl
loope
add
nop
xchg
inc
testl
pop
mov
pop
push
pushf
mov
lcall
sbb
xlat
test
cmpb
mov
insb
or
dec
xchg
ret
out
fwait
shl
cmp
pushf
push
add
test
xor
ljmp
and
mov
ljmp
sti
out
jge
les
ja
mov
scas
scas
push
fs
mov
out
jb
add
dec
mov
mov
or
mov
jg
ficompl
xor
mov
ljmp
sub
into
popl
hlt
test
inc
decb
aam
stos
or
pop
fsubl
outsb
fidivrs
es
mov
mov
into
mov
add
pcmpeqb
sub
push
add
add
pop
shlb
jp
out
sub
sub
pop
lods
inc
jae
add
arpl
jns
fwait
stos
mov
roll
fstpl
mov
hlt
adc
nop
jne
cmp
adc
clc
pop
push
rolb
sub
ret
enter
std
cmc
lret
mov
outsl
imul
xchg
mov
test
mov
mov
push
std
gs
cltd
xor
lret
aad
mov
ds
mov
leave
adc
jo
jno
cwtl
test
loop
push
mov
outsb
pop
add
mov
les
fs
mov
mov
cmp
mov
adc
push
test
adc
mov
xor
pushw
jl
stc
je
fsubr
lret
lds
cltd
mov
sbb
lea
ror
mov
dec
cmp
in
mov
sarb
imul
mov
rclb
fcmovnb
fwait
ds
xchg
mov
mov
jbe
jns
mov
lock
pop
push
sarl
adc
subl
outsl
sub
xor
pop
mov
test
and
iret
xchg
imul
adc
cmpsb
ror
mov
inc
in
adc
or
inc
xor
jmp
out
das
cmp
mov
sub
mov
lock
sahf
mov
push
dec
imul
rorl
mov
stos
test
cmpsb
inc
adc
cmp
and
pusha
cli
scas
fstp
push
xchg
pop
ss
pop
dec
jbe
pop
cmp
pop
movsl
fsubs
aad
mov
pop
mov
rcll
pop
lea
inc
loope
push
mov
push
lock
cmpsb
xchg
rcr
divl
and
scas
dec
sbb
add
mov
push
xor
inc
mov
int3
xor
push
and
ja
mov
ds
xchg
adc
jge
popf
lahf
stos
jmp
or
in
movsl
and
mov
mov
jg
pop
jns
fwait
es
lock
loop
outsb
mov
mov
and
enter
pop
dec
adc
inc
sbb
lret
movsb
lcall
jmp
mov
mov
pop
fildll
stos
arpl
xchg
add
cmpl
jne
mov
jmp
adc
mov
pop
dec
shrl
icebp
mov
ret
push
ret
hlt
push
aas
into
xor
shrb
or
xor
push
sahf
pusha
test
mov
dec
rcl
xor
adc
test
push
fists
imul
push
mov
aad
movsl
add
mov
scas
adcb
frstor
pop
mov
push
rclb
scas
xchg
dec
fistps
sub
adc
fscale
jmp
shlb
mov
mov
movsl
sbb
push
mov
mov
into
loop
daa
ficompl
jae
incl
mov
mov
or
add
cmp
mov
mov
sub
jbe
pop
jle
std
lods
jns
bound
mov
xchg
jle
movsl
in
add
add
add
sub
pop
daa
xor
sub
arpl
sub
mov
inc
ljmp
es
aam
xor
enter
mov
hlt
push
test
dec
cmp
and
inc
mov
shrl
hlt
nop
sub
pop
cmp
push
sbb
lahf
std
loop
rolb
jmp
int
pop
popa
mov
fcompl
or
int
inc
insb
bound
push
iret
test
dec
add
adc
dec
testb
insb
fisttpl
fdiv
cwtl
shl
push
push
inc
ret
icebp
lods
jns
fsubl
xor
lahf
cltd
in
mov
xor
and
hlt
xchg
inc
mov
pop
adc
out
and
lret
mov
cmp
xchg
xor
xchg
push
adc
stos
cli
or
int
or
xor
mov
mov
sub
dec
testl
xchg
ret
jb
es
das
popa
jbe
lock
fidivrs
fmuls
stc
add
mov
inc
popf
ja
sti
call
dec
mov
mov
adc
mov
cmp
insl
ljmp
dec
xchg
out
jle
insb
xor
jg
rolb
jge
or
mov
and
dec
repz
mov
insb
xchg
dec
rcrl
push
cmpsb
pop
cmp
jmp
adc
lea
mov
xchg
roll
xor
and
stc
mov
fiadds
loop
jb
enter
cmp
mov
xor
out
add
mov
fbstp
jbe,pn
int
es
mov
scas
out
ret
ret
std
daa
push
incb
mov
or
pop
cld
push
mov
sub
testb
js
imul
icebp
xchg
add
xchg
es
cmp
pusha
loopne
je
xor
aas
or
sub
bound
test
sub
xchg
bnd
cmp
sub
imull
or
jno
hlt
ds
jno
cmp
mov
jo
bound
fcmovnbe
imul
mov
fisttpl
mov
adc
adc
mov
push
out
add
lds
sub
mov
or
aam
or
xorl
insb
add
mov
jnp
aaa
mov
mov
sub
mov
test
jp
jecxz
jge
push
mov
xchg
xchg
int
sub
mov
cmp
push
dec
add
sub
in
add
add
mov
pop
xchg
mov
mov
xorl
lret
jecxz
xor
sbb
inc
mov
pop
xchg
pop
daa
push
jmp
xor
jg
loope
jmp
add
xor
fwait
sub
and
push
sahf
dec
ret
mov
fstpt
out
xor
aas
rorl
movsb
jns
add
xadd
jp
adc
lcall
pop
adc
mov
inc
xrelease
test
adc
xor
sbb
jge
fsubrl
popa
test
xchg
mov
cmp
push
sahf
sarl
scas
mov
push
mov
out
xlat
das
cs
sbb
pavgb
rolb
cmp
lfs
mov
or
mov
cli
mov
lahf
pop
pop
test
outsb
cmp
ss
sbb
aas
jno
add
mov
aas
mov
jbe
test
or
xor
sub
ret
adc
add
stos
mov
ss
sbb
je
jae
in
lock
xchg
inc
bound
lretw
pop
mov
nop
sub
mov
popf
orb
sti
jp
add
mov
push
sub
inc
sub
bound
rclb
and
add
mov
stos
sbb
test
pop
insb
cmp
push
xor
adc
fimuls
add
adc
outsl
pop
rcl
nop
or
es
test
jnp
xchg
pop
cmp
test
out
sbb
add
and
jnp
sub
cli
dec
jl
or
js
mov
xchg
cmp
add
test
push
jnp
outsb
jle
lods
mov
mov
loopne
pop
das
cld
dec
sbb
dec
sbb
inc
fs
sbbb
sbb
arpl
andb
push
insl
push
jb
arpl
inc
xor
roll
push
add
pop
notb
cmpsb
pusha
aam
mov
aaa
xchg
dec
and
xchg
lds
movsb
aaa
shl
pop
cld
mov
push
loopne
fistl
rolb
lods
sub
addr16
adc
xchg
cli
jnp
push
jecxz
hlt
mov
bound
arpl
push
pop
daa
aad
adc
mov
jbe
lcall
daa
lock
mov
jne
mov
xchg
mov
in
jmp
icebp
stos
fsubrl
lods
jmp
ss
dec
add
add
cltd
xchg
es
mov
mov
decl
push
mov
push
repz
lahf
and
push
mov
das
lcall
adc
