push
xor
mov
dec
jb
adc
mov
and
clc
lahf
or
int3
and
jb
nop
xchg
out
mov
jmp
xlat
les
test
sub
mov
mov
adc
test
push
cmp
cmp
add
aas
jl
enter
and
jns
and
je
addr16
inc
movb
and
add
je
jb
hlt
cmpl
dec
mov
mov
cmp
arpl
xchg
push
out
jecxz
mov
xor
pop
push
mov
add
add
jle
aad
mov
pop
adc
push
add
mov
xchg
pop
dec
fcompl
stc
dec
xchg
pushl
xchg
test
js
fucom
cmovns
fs
stos
into
stos
inc
cmc
in
fsubrl
jne
cmpsl
push
adc
mov
jmp
scas
sub
js
out
test
dec
mov
movsb
jno
and
add
mov
dec
xor
jp
loope
imul
mov
out
xor
mov
insl
push
mov
mov
aas
test
xchg
mov
pop
rorl
mov
xchg
mov
call
adc
outsb
shlb
mov
dec
call
dec
pop
out
icebp
add
and
lea
pop
stos
outsb
push
ss
xchg
in
rorb
dec
cwtl
xchg
cmp
mov
in
popa
mov
mov
mov
jae
bound
ds
aas
mov
jl
fwait
pop
push
ljmp
addr16
mov
jl
addb
cli
ficompl
pop
jae
in
mov
sub
ret
lock
enter
pop
xchg
mov
stos
test
mov
push
std
and
xlat
out
rorb
xchg
cmpsb
cld
lds
fidivrl
inc
sub
aas
lret
loopne
inc
sub
or
ret
push
ljmp
jmp
shl
adc
xchg
dec
data16
add
scas
cwtl
test
jnp
or
call
scas
jbe
mov
mov
pop
in
xchg
in
or
jp
jbe
xor
das
lea
jecxz
shll
iret
mov
mov
add
insb
pop
pusha
insb
jbe
inc
jb
mov
jns
cmp
aam
dec
xchg
fwait
popa
scas
dec
bound
fdivr
shrb
imul
out
push
ljmp
shrb
out
out
xor
outsl
popf
jecxz
push
pop
sub
mov
sahf
mov
bound
idivl
cmc
les
call
add
adc
int
loop
leave
outsl
or
insl
jb
sub
push
loop
mov
das
mov
sbb
je
sub
shl
pop
aam
jbe
bound
xchg
fisubrs
push
cld
xor
arpl
mov
ret
aam
pop
or
cmc
je
lahf
out
sar
sarl
jo
add
dec
popa
mov
jbe
pusha
sbb
push
repnz
and
mov
insb
push
loopne
into
or
outsl
es
sti
sbb
mov
mov
jmp
inc
xchg
aaa
psrld
data16
imul
inc
popf
mov
xchg
mov
mov
in
mov
call
mov
or
je
add
lods
dec
hlt
popf
in
cltd
xchg
add
sarl
pushf
mov
jnp
outsb
ljmp
or
inc
mov
sub
mov
cmp
inc
loope
loope
subb
jmp
fstp
push
iret
mov
movsl
out
in
mov
inc
mov
ror
hlt
lret
cmp
adc
dec
popa
xchg
fiaddl
je
jmp
inc
insl
push
sti
mov
subb
mov
test
push
test
pop
addl
dec
pop
testb
jns
jecxz
hlt
shl
inc
inc
mov
popf
xor
jecxz
imul
loopne
fbld
pop
cmp
nop
je
jge
mov
fmuls
mov
lcall
or
xor
or
test
and
mov
popa
mov
outsb
iret
mov
pop
fmuls
pop
sbb
scas
xor
jne
jns
pop
ja
or
jl
pushf
loope
popa
adc
and
pop
ss
fnstsw
enter
xor
dec
ret
incl
and
pop
xchg
fldenv
inc
mov
andl
leave
add
jmp
iret
sahf
flds
mov
push
dec
push
mov
xor
pop
mov
pop
int
imul
test
mov
mov
fistpll
inc
sti
inc
and
xor
fidivs
inc
lcall
fstps
cmp
xor
mov
ss
mov
pop
ss
push
sbb
movsl
mov
and
sbb
pop
std
sbb
dec
pop
jmp
jns
stc
ljmp
shr
in
fxch
and
sub
push
push
push
sub
in
insb
dec
sub
pushf
jp
inc
lcall
inc
and
pop
add
dec
stos
das
pop
and
or
lds
jge
out
addl
aad
cmp
jmp
mov
jo
sarb
sub
add
push
sar
stc
mov
adc
fistps
and
std
cmp
jge
int
cmp
fldcw
movb
xchg
jge
loop
jo
and
xchg
out
clc
dec
scas
sub
jno
pop
jb
ljmp
aas
test
loopne
loop
dec
push
sbb
push
loop
cmp
divb
ds
call
mov
repz
or
xchg
movsb
andl
lcall
mov
repz
data16
std
xchg
data16
mov
stc
sub
and
cmp
fstpt
adc
cs
mov
inc
enter
nop
mov
dec
dec
adc
enter
fbld
jecxz
enter
add
mov
orb
pop
das
mov
pop
sub
insl
les
stos
inc
adc
gs
sbb
out
push
inc
fistl
jae
je
and
in
xor
gs
shlb
cmp
mov
into
mov
push
gs
hlt
adc
jecxz
insl
mov
sub
adc
cmp
pop
add
inc
ljmp
lods
cwtl
jge
mov
lea
scas
cmp
subl
jb
inc
ret
and
pop
addr16
jns
dec
sbb
push
mov
cli
ret
xchg
sbb
inc
aam
jmp
cmp
cmp
stc
cmp
enter
loop
xor
inc
aas
test
inc
fwait
sub
push
pushf
xor
push
cmp
cmpsl
enter
dec
mov
mov
jmp
int3
mov
inc
in
stos
lods
sub
add
cltd
cmpsb
jmp
push
ljmp
out
mov
cld
and
and
shr
pusha
aad
push
mov
mov
mov
call
inc
inc
call
sub
push
movzwl
call
mov
dec
mov
movzbl
mov
mov
call
dec
mov
mov
mov
dec
lea
sub
add
imul
dec
mov
dec
inc
call
add
add
sub
sub
add
call
inc
lea
call
imul
lea
mov
movswl
mov
lea
imul
mov
inc
pop
mov
add
inc
add
add
pop
mov
inc
pop
lea
inc
movsbl
and
pop
or
lea
mov
dec
inc
lea
dec
mov
pop
mov
mov
pop
dec
mov
mov
lea
lea
call
mov
sub
lea
sub
ret
xor
xor
push
mov
imul
push
dec
add
push
sub
inc
push
dec
inc
push
add
mov
dec
push
sub
ret
push
imul
mov
movzwl
movzbl
add
movzwl
mov
push
sub
add
dec
call
pop
ret
jmp
movswl
mov
inc
dec
movzbl
xor
mov
add
imul
mov
and
lea
xor
movzbl
dec
add
xchg
imul
dec
inc
mov
xor
add
imul
mov
imul
inc
mov
mov
dec
jne
lea
mov
mov
imul
pop
xor
mov
pop
add
xor
pop
dec
mov
and
sub
dec
inc
mov
inc
sub
sub
dec
add
ret
push
inc
imul
mov
lea
imul
lea
mov
add
push
push
push
push
mov
lea
dec
push
sub
or
movzwl
inc
inc
dec
inc
dec
mov
mov
dec
push
mov
imul
xor
imul
mov
push
mov
inc
push
lea
mov
pushl
mov
call
xor
add
lea
add
add
dec
add
inc
or
pop
ret
add
mov
dec
lea
add
dec
xor
cmp
jb
inc
xor
mov
mov
movsbl
movzbl
mov
lea
dec
inc
add
dec
and
imul
xor
dec
mov
cmp
jb
add
pop
dec
dec
add
sub
or
movswl
movzwl
inc
sub
add
sub
inc
dec
xor
add
add
xor
lea
imul
mov
movsbl
test
jbe
inc
mov
and
inc
inc
inc
or
or
movsbl
lea
lea
and
inc
dec
mov
inc
movzbl
mov
or
add
mov
inc
and
imul
movzwl
mov
inc
mov
inc
mov
dec
lea
mov
mov
mov
inc
lea
imul
imul
dec
jne
inc
mov
inc
imul
lea
add
add
add
dec
movzbl
inc
mov
mov
dec
xor
inc
dec
dec
lea
dec
mov
add
mov
test
jbe
mov
add
add
and
dec
mov
imul
xor
and
mov
add
imul
and
mov
or
inc
dec
add
mov
sub
dec
sub
and
dec
inc
mov
mov
mov
movzbl
inc
mov
add
dec
movzbl
and
xor
dec
mov
add
lea
movzbl
movsbl
inc
mov
inc
jmp
push
mov
dec
inc
inc
mov
inc
add
xor
add
imul
add
inc
movzwl
lea
add
dec
sub
lea
add
sub
and
lea
xor
mov
inc
imul
inc
dec
xor
lea
movzbl
add
movzwl
lea
xor
movswl
mov
and
mov
cmp
je
call
call
dec
imul
inc
dec
movsbl
movswl
inc
lea
mov
add
dec
dec
sub
dec
call
call
imul
ret
mov
dec
pop
imul
ret
push
inc
sub
add
add
lea
push
mov
lea
push
mov
push
mov
push
mov
mov
dec
sub
mov
movzbl
mov
add
mov
call
inc
push
imul
push
dec
pop
add
sub
mov
mov
add
mov
mov
and
inc
mov
mov
dec
je
and
inc
or
mov
xor
dec
dec
movzbl
lea
mov
lea
mov
mov
inc
inc
imul
mov
repnz
mov
inc
add
and
jmp
movzbl
dec
jmp
xor
movswl
mov
lea
mov
sub
lea
dec
mov
dec
lea
mov
mov
sub
pop
pop
ret
push
and
mov
dec
dec
inc
sub
or
add
xor
imul
mov
dec
add
lea
inc
dec
lea
mov
dec
movzwl
mov
or
mov
inc
pop
ret
sub
add
mov
inc
dec
mov
lea
mov
mov
add
inc
mov
lea
inc
xor
inc
dec
mov
dec
sub
inc
add
inc
mov
xor
imul
dec
cmp
jb
and
push
movswl
lea
push
add
and
push
lea
lea
xor
imul
movsbl
xor
dec
lea
xor
mov
dec
push
movsbl
movsbl
mov
lea
xor
sub
mov
inc
lea
mov
dec
movzbl
sub
mov
lea
add
lea
inc
add
inc
inc
movzbl
mov
add
mov
and
add
imul
dec
inc
add
jmp
mov
dec
pop
xor
xchg
pop
dec
and
adc
bound
add
mov
roll
pop
fs
jecxz
lods
fisubs
add
inc
push
insb
cwtl
loope
dec
std
shl
popf
xor
pop
mov
jnp
and
xchg
mov
imul
aam
mov
and
mov
jo
dec
push
pop
lret
js
xchg
movsl
push
shlb
sub
roll
movsb
adc
stos
pop
dec
rclb
cmpsl
arpl
jns
rorl
xchg
xchg
push
leave
jns
fisubrs
inc
jnp
xchg
inc
cmpsb
sub
or
pop
lea
xlat
jb
jp
and
sahf
mov
add
lsl
pop
jns
mov
cmp
inc
insl
mov
lock
mov
pop
xor
jmp
dec
stc
ljmp
fisubrl
push
pop
in
mov
insb
data16
xchg
mov
xor
dec
das
test
xchg
int3
dec
sbb
sub
in
sbb
test
rcrb
andl
mov
fiadds
mov
fbstp
mov
xor
stos
sbb
movsl
aaa
andb
jge
and
mov
jo
imul
add
dec
and
bound
aas
pushf
dec
stos
movsl
test
push
and
xor
adcl
or
das
mov
adc
mull
in
cmp
mov
fsubr
xor
shrl
push
xchg
inc
les
cltd
fwait
iret
sub
jecxz
clc
jecxz
outsb
pop
jg
cmp
and
xor
cmp
push
insl
out
popa
repz
xchg
fcomps
sub
add
xchg
pop
push
rorl
nop
in
call
js
stos
rclb
jno
adc
mov
in
jne
push
inc
mov
aad
fldcw
push
cmc
mov
insb
and
push
jmp
mov
ror
sbb
mov
add
and
stos
add
adc
xlat
jecxz
icebp
fdivrs
mov
loope
mov
cmp
mov
inc
sub
bound
sub
jns
lahf
mov
fwait
aad
outsl
lret
mov
enter
das
stos
leave
jae
shlb
stc
xor
pop
add
add
and
rclb
in
lahf
xchg
inc
icebp
outsl
fadds
xorl
mov
cmpsb
std
mov
out
adc
mov
and
notl
cmp
repnz
dec
mov
jecxz
repnz
xor
pop
dec
ret
dec
jp
cmp
icebp
arpl
decl
lods
movsb
push
push
sub
jbe
push
pop
cmp
loopne
sub
push
ret
fcompl
pop
xchg
nop
mov
mov
fwait
push
pop
and
cmp
adc
lcall
jp
mov
popa
or
cltd
repnz
cs
pop
cmp
jb
gs
scas
stc
je
mov
sub
repz
xchg
and
mov
jge
leave
adc
sbbl
mov
xor
enter
xchg
or
push
jecxz
inc
arpl
incl
lcall
xor
mov
fildll
sub
cmp
out
adc
es
shll
jle
insl
xor
cmp
scas
push
or
sbb
cld
sub
or
and
repnz
push
mov
stos
insl
repz
aad
jo
mov
addb
dec
test
pop
insl
cli
adc
outsb
pop
and
or
jl
push
sub
in
jg
loop
ljmp
push
dec
outsl
fcmove
cmp
jno
or
xorb
adc
gs
ret
mov
xor
push
pop
stc
incb
je
mov
test
inc
pop
stc
lea
loope
mov
loope
mov
ret
in
and
out
cmpl
push
push
or
add
mov
inc
lcall
pop
add
lods
or
imull
add
dec
sub
jge
jle
xchg
pop
cli
cmpb
inc
mov
ret
pop
adc
jge
notb
std
stos
stc
imul
and
jl
lret
adc
mov
in
mov
and
mov
in
cmpsb
xchg
xchg
sub
fsubl
or
xor
lcall
adc
mov
push
sub
push
push
xor
mov
je
test
mov
adc
mov
ds
mov
sbb
mov
test
jmp
jnp
icebp
xor
std
xor
call
xor
pop
lods
ficoml
push
lods
push
inc
icebp
fisubs
lret
mov
or
das
jno
and
xlat
inc
arpl
mov
notb
add
adc
sub
jmp
fdivrs
cmp
sub
sbb
xchg
sbb
mov
ret
inc
icebp
andb
push
sbb
ret
and
xor
scas
sbb
mov
adc
push
push
insl
push
jmp
je
mov
and
adc
insl
jmp
xor
jno
call
lret
mov
xor
sbb
ja
arpl
push
xchg
adc
insl
inc
push
dec
sahf
rcll
sahf
xchg
pop
sti
lds
push
shl
and
cwtl
rorb
xchg
pop
xchg
rclb
adcl
inc
fmull
xor
mov
cmpsb
pop
mov
sahf
mov
ljmp
mov
test
push
into
bound
repnz
add
jge
test
mov
ret
pop
xchg
mov
outsl
testl
enter
ja
mov
ret
xchg
iret
jae
add
ja
xor
ret
inc
sub
mov
inc
jg
xchg
mov
adc
fisubl
sbb
hlt
repz
mov
add
je
push
ret
inc
push
sub
out
mov
stc
mov
push
in
lret
pop
arpl
mov
cmpsb
lods
xchg
int3
pop
mov
cmp
pop
push
in
sahf
lods
xchg
inc
mov
shrl
shr
icebp
adc
daa
xchg
lcall
add
sub
leave
push
jle
jb
inc
add
push
inc
sbb
mov
test
aad
repnz
and
xorb
sbb
add
nop
jle
aaa
jmp
inc
dec
shrl
pop
ret
cmp
jecxz
lret
movsl
or
fs
fiadds
push
lret
mov
pop
icebp
or
dec
push
jo
dec
aam
add
jo
cld
dec
popa
mov
pop
adc
ret
pop
or
mov
daa
pop
scas
les
and
adc
jmp
inc
dec
popa
pop
nop
ficomps
and
in
fisttpll
test
pop
or
divb
dec
stc
ficoms
arpl
dec
ljmp
jns
scas
int
sarb
cwtl
inc
leave
insl
or
rcl
cmp
fildll
mov
maxps
rolb
insl
xlat
xor
mov
cmp
icebp
adc
xchg
mov
xchg
xor
sbb
fnstcw
fnstsw
fnstcw
out
arpl
outsb
dec
mov
jmp
xchg
sbb
fistpl
mov
sti
repnz
lock
and
cmp
xor
fsubrl
dec
aas
leave
inc
cmp
ffree
mov
ret
or
out
lea
dec
inc
adc
test
inc
es
push
scas
mov
pop
ret
in
lds
popa
mov
outsb
add
push
lods
mov
pushl
jg
ficomps
cmp
jnp
or
lahf
pushf
cld
lea
inc
push
xchg
sbb
xchg
cltd
adc
stos
bound
or
jb
xor
lods
rcrb
aam
add
or
das
xchg
inc
mov
sahf
sub
sbb
dec
mov
adc
ret
test
movsl
and
mov
mov
outsl
enter
mov
xchg
bound
fcompl
imul
das
faddl
nop
mov
scas
push
mov
push
mov
call
out
mov
adc
popl
outsl
and
pusha
push
js
mov
sarb
leave
xorb
cmc
decb
jo
sub
xchg
and
xchg
scas
rcr
pop
xchg
xor
xchg
inc
ljmp
mov
mov
inc
out
pop
ret
xchg
pop
stos
fldt
stos
pop
das
push
adc
pushf
adc
xor
sub
push
mov
fldl
divb
push
pop
pusha
lds
mov
imul
aam
test
jg
pop
lock
leave
push
testl
and
lods
or
adc
pop
cltd
out
stc
dec
add
idivl
popa
mov
xrelease
pop
cs
fildll
pop
cs
cwtl
inc
mov
sbb
mov
adcl
fst
ss
xor
xchg
push
pop
pop
push
das
ds
mov
mov
shll
in
ret
xor
mov
jo
pusha
cmp
add
sahf
std
out
movsl
pop
mov
stos
sbb
pop
clc
pop
in
aam
ret
sbb
outsb
sti
testl
movsb
add
inc
lods
and
cmp
jnp
pusha
lret
mov
pop
cmp
pop
xor
scas
movsb
mov
inc
sahf
popa
repz
adc
pusha
mov
sbb
out
pusha
in
loopne
mov
xor
popa
mov
cmpsb
jns
push
jle
xchg
sti
ficoms
or
lods
loopne
lahf
fdivr
loope
lds
and
mov
pop
xor
test
inc
nop
xor
ret
xchg
lret
adc
push
xchg
cmp
xorl
push
enter
stos
loopne
mov
pushf
push
out
jg
pop
shll
je
nop
add
bound
test
pop
data16
dec
sub
clc
jns
fs
hlt
stos
movsb
xchg
adc
cli
fildll
jmp
out
ret
pop
out
cmp
adc
ja
sti
ds
pop
add
fs
and
mov
push
adc
hlt
ljmp
repz
dec
adc
jno
inc
sub
sub
dec
cmp
mov
sub
imul
in
test
inc
inc
daa
shlb
mov
mov
inc
pop
popa
mov
jle
mov
repnz
mov
repz
mov
loop
push
and
push
loope
aad
popa
insb
mov
mov
xchg
cmp
sub
pop
gs
arpl
jmp
imul
bnd
push
sbb
call
xor
out
xor
std
inc
mov
and
call
mov
add
ja
stc
sub
es
push
or
into
call
push
add
and
adc
mov
lcall
inc
inc
jae
mov
or
iret
sti
or
xor
imul
or
aaa
adc
inc
mov
cli
push
sub
mov
mov
test
cmp
iret
decb
xchg
cmp
push
shll
or
divl
sub
arpl
jo
jbe
in
gs
xlat
dec
xchg
fidivs
mov
xchg
xor
sub
cmp
test
aas
and
fistpl
rcr
test
add
leave
mov
mov
insb
sbb
loopne
repnz
stos
or
jns
jo
adc
lods
adc
mov
scas
jnp
adc
into
testl
mov
xchg
jp
or
lea
inc
out
scas
lods
cmp
sbb
subb
mov
inc
or
movsb
loope
and
sbb
adc
mov
call
outsb
xchg
not
cli
movsb
mov
stc
insb
fwait
lds
int
mov
pop
pushf
xchg
in
lods
jnp
shll
xlat
mov
add
mov
pop
xor
insl
cmp
lret
sbb
jne
mov
jne
jmp
jnp
ja
xchg
dec
js
movsl
xchg
inc
sub
mov
and
pop
cmpb
ret
mov
pop
mov
arpl
dec
rorb
ljmp
mulb
arpl
cmp
lods
ds
out
fs
scas
mov
mov
add
daa
pop
and
out
bound
add
pusha
inc
leave
mov
mov
cmpsb
js
fcos
or
popf
xchg
jecxz
mov
cwtl
mov
and
cwtl
jo
outsl
mov
pop
loopne
dec
pop
call
add
icebp
lock
pop
je
xchg
out
mov
xchg
dec
add
and
and
xchg
mov
sbb
cld
pop
xlat
xchg
jecxz
std
push
sbb
jne
test
scas
jne
add
stos
push
mov
push
jne
out
jne
inc
in
fstpt
mov
mov
leave
mov
fmulp
pop
loop
xchg
mov
scas
fnstenv
and
xor
cmp
and
mov
cmp
xor
imul
pop
mov
jae
decl
outsb
fsubr
ss
dec
inc
cld
dec
popa
dec
addb
iret
sahf
mov
scas
sbb
les
hlt
or
ja
push
adc
loope
cs
push
fisttpll
repz
adc
neg
xchg
or
sbb
in
ret
rclb
fwait
ljmp
adc
xlat
xchg
adc
bound
ret
add
xor
lahf
sub
lret
fidivrs
xor
cmc
and
shll
jg
adc
daa
jle
push
hlt
push
das
sti
shll
cmp
nop
adc
aam
adc
insb
jmp
sub
sbb
icebp
push
test
sbb
dec
sub
sbb
xor
push
adc
pop
mov
shll
pop
mov
pop
outsl
pop
enter
int
mov
inc
mov
loop
mov
cmc
cmp
cmpb
and
xchg
xchg
repz
dec
or
jp
fdiv
push
das
or
outsb
out
fldl
cld
fadds
gs
pop
adc
fimull
jg
lock
addr16
adc
imul
sbb
popa
mov
inc
cmp
gs
out
addb
or
cs
sub
test
jns
stos
ret
add
mov
divb
sbb
mov
outsl
jl
or
xor
add
xchg
sub
mov
and
lods
pushl
aam
leave
jns
cmc
inc
sub
push
mov
add
mov
push
call
add
ljmp
xchg
jnp
pop
loop
jbe
pop
sbb
sbb
push
dec
out
or
dec
inc
pop
push
push
popf
push
arpl
sarb
mov
shrd
insb
lock
test
fs
mov
jl
test
out
xor
jns
dec
sub
sub
push
xlat
mov
popf
mov
add
hlt
xchg
push
cld
push
mov
aad
out
outsl
mov
or
addb
rorb
cmp
cmp
hlt
jp
ss
push
xchg
ja
mov
inc
push
cltd
push
dec
fdivrp
jmp
xor
add
das
repnz
inc
sub
mov
push
bound
xor
mov
data16
cwtl
out
aam
pop
cmp
jl
fwait
xchg
js
in
mov
xchg
roll
jp
shl
out
xor
push
fldt
imul
jbe
test
cltd
data16
dec
adc
inc
xchg
adc
insl
or
fwait
insl
cmp
aas
jb
mov
and
pop
dec
cli
cli
add
int
cltd
push
lods
testb
leave
cmp
jl
lds
mov
mov
movsl
mov
mov
lret
lcall
cwtl
and
pop
jne
xor
cltd
push
daa
int
mov
cmp
and
stos
iret
lods
imul
adc
lock
mov
aad
roll
pop
push
enter
fwait
mov
sbb
mov
addr16
adcb
mov
dec
fldln2
pop
testl
lea
push
add
pusha
dec
cmp
xor
in
rcr
ljmp
mov
add
add
neg
aaa
ror
repnz
loop
pop
jnp
repz
inc
aas
pop
mov
xor
into
in
mov
gs
cld
dec
sti
fmul
pushf
outsl
push
cwtl
inc
mov
test
aad
das
jbe
jne
mov
lret
jns
das
push
mov
mov
mov
daa
out
mov
adcl
jmp
sbb
push
push
cmpsl
cld
or
shrb
scas
and
stos
xchg
cmp
movsb
mov
cmpsl
mov
jb
into
addl
fwait
mov
mov
push
cmpsl
pop
dec
out
test
dec
add
xchg
shrl
jbe
sub
xor
in
hlt
lret
or
les
ret
lahf
add
push
xor
jmp
dec
int3
dec
je
fsubl
pop
loop
jmp
iret
mov
push
push
repz
fsubl
inc
cli
fstps
dec
insl
add
push
loope
mov
xlat
rorl
xor
dec
rclb
int3
add
mov
rol
push
mov
cmp
cltd
lcall
in
or
mov
in
or
js
addr16
jbe
inc
pushf
push
inc
and
orl
mov
out
loopne
shr
dec
jno
pushf
cmp
ja
push
pop
xchg
adc
flds
inc
mov
mov
aam
mov
es
mov
push
insb
or
cmp
inc
mov
imul
push
pop
lock
or
mov
test
addr16
lcall
icebp
sub
neg
adc
ds
int
cmp
xchg
insl
into
jmp
add
pop
pushl
int3
sbb
shr
inc
in
push
mov
mov
inc
push
lret
addb
cli
cli
jno
dec
sahf
je
loopne
dec
push
cli
daa
sbb
rol
pop
clc
loop
fs
out
lods
sub
or
mov
rol
sbb
or
push
jmp
out
adc
outsl
dec
or
repnz
xor
jb
dec
inc
popf
pop
dec
mov
test
notb
pop
push
negl
cmpsb
rcl
shlb
in
cmpb
pop
popa
fistl
cltd
mov
mov
jmp
or
sti
stos
jno
lahf
xor
mov
push
adc
jg
inc
loopne
das
sbb
cmp
insl
fnstcw
mov
jnp
adc
mov
mov
jle
bnd
mov
pushf
fadd
dec
div
pop
scas
push
mov
test
ret
jnp
ss
push
arpl
std
pop
mov
fs
rcrl
jnp
test
out
cmc
xlat
in
les
jmp
loop
std
mov
jecxz
in
mov
mov
adc
adc
daa
das
ss
sbb
mov
and
das
cwtl
mov
lahf
xchg
adc
stos
xchg
enter
movsl
xchg
xchg
sub
inc
add
idivl
push
jbe
adc
nop
out
pusha
scas
jbe
hlt
pop
shlb
bound
mov
pop
xchg
cmp
mov
jle
lahf
lods
xor
fdivrs
mov
xor
fldcw
push
mov
loopne
push
cmp
shrl
mov
shr
arpl
icebp
xor
xor
dec
mov
loopne
mov
addr16
repnz
mov
stos
sarb
dec
push
sbb
xchg
dec
or
or
movsl
and
cwtl
mov
push
mov
and
mov
stos
lock
in
mov
xor
and
inc
lcall
repz
xchg
cmp
push
xchg
cld
sub
push
je
jo
sub
fisubs
daa
clc
dec
dec
enter
scas
ja
cmc
adc
mov
push
cmp
stos
jb
or
jnp
shl
lcall
pop
leave
repnz
dec
out
test
push
xchg
add
pop
push
int3
lcall
andl
imul
pop
std
sub
xorb
or
rcrl
unpckhps
f2xm1
xchg
xchg
gs
adc
mov
sbb
mov
and
xchg
pushf
out
dec
sbb
dec
fwait
aad
push
fcomps
push
outsl
adc
pop
roll
rcl
adcl
in
cmp
pop
jae
jno
imul
flds
mov
stos
icebp
push
icebp
out
les
sbb
in
es
push
cld
and
aas
push
dec
sbb
shrl
mov
push
cs
repz
xchg
dec
pop
dec
add
fwait
sarl
enter
out
xchg
pop
nop
cmc
inc
mov
pop
jns
jmp
nop
fdivs
loope
lock
aaa
cmovbe
add
stos
add
cmc
or
loopne
cmp
in
cmpsb
imul
outsl
aam
mov
adc
sub
push
cmpsl
mov
mov
inc
push
enter
dec
ss
mov
nop
in
lock
mov
push
data16
jmp
xchg
addr16
and
xchg
repz
in
test
int3
xchg
insl
mov
dec
add
pop
xchg
inc
mov
out
test
out
or
in
iret
push
push
and
fidivl
sub
inc
adc
dec
fwait
scas
cmp
pusha
out
xor
fmulp
das
pop
xor
fistl
dec
test
dec
pop
jecxz
adc
adcb
add
dec
loop
daa
mov
loop
outsb
pop
movsb
das
sub
dec
pop
xor
lods
xchg
pusha
xchg
pop
pop
dec
test
int3
xchg
cmp
cmpsl
leave
mov
or
pop
jbe
jle
cmpsl
mov
xchg
insl
xor
add
jae
shrl
fsubs
pop
dec
aaa
sar
add
xor
xchg
cmp
mov
xor
lock
iret
inc
or
and
out
fstpt
sbb
les
sahf
stos
mov
xchg
pop
testl
cmp
gs
or
outsl
out
ljmp
sbb
pop
nop
into
repnz
cltd
jg
inc
lret
call
push
mov
imul
mov
inc
cltd
imul
add
jno
mov
jecxz
pop
gs
pop
insb
jge
dec
pop
sbb
jle
pusha
leave
push
outsb
xor
push
xor
xorb
cmpsl
sub
fcompl
lahf
clc
pop
jns
or
and
and
imul
out
shr
std
xorb
mov
mov
xor
xchg
out
into
sti
lcall
sahf
inc
out
mov
add
jbe
mov
add
decb
addr16
fmuls
fistpll
test
cmp
push
into
xor
pusha
cld
cmp
and
mov
dec
inc
sub
cmp
sbb
xorl
adc
in
outsl
inc
and
push
fs
xchg
mov
call
dec
mov
pop
jae
adc
dec
mov
or
push
pusha
sub
daa
adc
subl
pop
sbb
cmp
notb
and
lcall
sub
dec
imul
xor
lods
loope
jmp
lods
popa
pop
sub
and
popf
jb
pop
ffreep
das
pushl
mov
jle
pop
adc
push
dec
mov
mov
mov
adc
fwait
add
cli
jo
jo
dec
insl
fdivs
pop
adc
cld
mov
jge
pop
add
push
push
add
or
dec
daa
sbb
sbb
push
push
into
cmp
mov
cwtl
fidivrl
xchg
shll
jno
leave
cli
ljmp
push
hlt
ds
cmpsb
push
sbb
aaa
popf
or
adc
mov
fucom
add
xor
out
mov
sbb
xchg
fs
testb
fadd
cmp
cli
lcall
xchg
scas
push
mul
lock
lret
movsb
insl
dec
jb
movsl
nop
into
xorb
fildl
pop
or
fcoms
adc
mov
mov
out
cmc
mov
sbb
insl
xchg
scas
or
mov
test
xchg
test
xor
lds
mov
pop
jb
leave
or
mov
stc
add
int3
sub
arpl
bound
inc
lret
mov
ds
fisubrl
aaa
lds
gs
fwait
cwtl
or
out
cld
mov
mov
push
jge
sub
add
adc
xchg
les
dec
jle
insb
mov
fwait
cli
shlb
jnp
xor
mov
imul
test
es
xlat
jns
dec
cmp
xchg
test
mov
int3
mov
incl
pop
ret
ss
out
in
pop
jmp
jg
xchg
jecxz
test
mov
push
mov
popa
ret
dec
inc
imul
dec
sbb
xlat
rolb
push
aaa
mov
and
ja
lcall
test
cwtl
ss
cmp
pop
push
shrl
mov
mov
and
xchg
mov
lret
pop
pop
add
mov
pop
test
dec
xor
xor
scas
out
lret
das
adc
aas
fisttps
cltd
add
iret
popf
ja
inc
xor
fnstcw
dec
jb
scas
pop
in
das
sbb
into
xorb
dec
daa
ja
jnp
jp
pop
cmp
shrb
mov
xor
in
mov
or
and
or
xor
aas
ds
jl
loopne
add
les
je
sub
inc
movsb
add
out
pop
in
out
jmp
inc
stos
push
xchg
call
push
aad
xor
and
out
push
jg
sbb
ret
loop
cmp
dec
cmc
cmp
jmp
out
ret
xor
repnz
or
popa
mov
notl
cmp
inc
cmp
pop
xor
aaa
jno
jnp
mov
dec
push
dec
jne
stos
test
loopne
and
cmp
jle
inc
push
cmp
roll
or
aam
fwait
mov
xor
push
enter
cli
cmpb
xchg
jbe
jno
mov
push
mov
xchg
repnz
pop
dec
sub
and
mov
jmp
jno
cmpsl
mov
and
fs
mov
mov
out
pop
mov
loop
je
aad
mov
cmp
or
or
fidivrl
pop
js
nop
aam
adcl
andl
pop
nop
push
insl
mov
addr16
adc
ljmp
icebp
add
mov
xchg
movsl
pop
pop
scas
jle
push
iret
cmp
jmp
xlat
bound
add
mov
test
jp
loop
lds
nop
jl
dec
fsts
sbbl
sub
xchg
adc
jns
ds
jmp
scas
and
inc
test
out
and
sub
inc
sub
mov
sub
pop
xor
pop
pop
fcmovnu
lret
aas
pop
aas
or
popa
es
pop
mov
push
sub
mov
push
jle
mov
push
inc
sub
divl
xor
pop
jo
outsl
shll
adc
and
xor
dec
xor
jp
int
jge
nop
push
stos
jle
xchg
mov
mov
sahf
dec
jmp
lahf
cmpsl
mov
inc
les
ja
arpl
enter
loopne
pop
mov
movsl
or
push
sbb
mov
and
jp
int
stc
xor
shlb
xchg
jo
lcall
pusha
int
push
mov
data16
sahf
xor
shlb
or
scas
insl
add
mov
adc
ds
xor
bound
add
push
inc
cmp
push
and
mov
dec
xor
rclb
sbb
ja
mov
fistps
xlat
scas
sub
add
aad
pusha
cmp
and
push
leave
mov
scas
fdivr
jmp
xchg
in
sahf
pop
xchg
imul
out
pop
xor
leave
dec
mov
sbb
push
sbbb
sub
sbb
mov
xchg
test
out
mov
push
stos
fcoml
sbb
lret
cmp
push
loope
inc
out
arpl
enter
mov
jo
mov
pop
ds
iret
pop
mov
cmp
and
outsb
js
sar
icebp
fdivl
in
sarl
inc
jecxz
adc
mov
pop
cmp
inc
mov
aaa
fpatan
mov
jno
dec
ds
dec
aam
pop
cmc
in
movsl
pop
jns
cmp
lret
pop
sbb
cmp
mov
add
leave
xchg
jno
ja
outsb
pop
sub
mov
and
addr16
jmp
decb
enter
sbb
mov
sbb
sbb
pop
jp
test
add
sub
mov
jle
call
mov
cli
push
adc
cmc
jno
js
icebp
test
pop
mov
add
int
dec
adc
popf
sbb
mov
pop
ss
jbe
adc
dec
sti
push
into
je
leave
push
loopne
mov
ret
icebp
loope
jmp
push
je
inc
push
push
adc
mov
inc
data16
xor
adc
movsb
push
movsl
mov
cmp
idiv
dec
into
popf
push
sub
jae
scas
mov
ss
add
or
lret
ljmp
addr16
adc
fwait
push
or
ds
sub
xchg
les
push
mov
xchg
test
pop
fildll
scas
fsubrs
jp
call
xchg
pop
mov
jbe
pusha
cmp
adc
jae
or
inc
je
nop
push
mov
jbe
fmul
xchg
loop
mov
aad
mov
add
loope
mov
or
into
repnz
loop
imul
cwtl
out
dec
stos
in
adc
mov
mov
jnp
push
mov
inc
or
jle
repz
or
nop
cltd
jne
pop
fucom
movsb
xchg
movsl
jp
aad
es
and
or
jl
rolb
mov
mov
mov
push
movsb
imul
arpl
inc
mov
cmp
or
adc
cmc
sub
das
call
mov
push
mov
push
iret
fdivrs
shl
and
cltd
gs
cmp
fdivl
aad
lret
cmp
push
push
call
sti
jns
cli
rol
leave
repz
test
and
nop
test
jle
ret
popa
adc
or
inc
xlat
pushl
mov
lea
adc
mov
jge
jg
xlat
pop
adc
and
repnz
imul
fsts
lods
inc
int
cmpsb
adc
add
xchg
and
xor
repnz
dec
inc
push
outsb
mov
cmp
testb
add
sub
inc
pop
lods
sub
pushf
test
sbb
inc
push
jns
andb
pop
fistpl
cmp
bsf
inc
cmp
inc
or
dec
mov
mov
and
mov
or
adc
jmp
daa
jae
insb
push
mov
iret
jno
lcall
bound
sti
inc
dec
cs
mov
clc
sbb
pop
cli
mov
add
mov
mov
push
outsl
jae
xor
sbb
ffree
icebp
fiaddl
shrl
inc
xchg
test
or
pop
loope
sbb
xchg
clc
clc
xor
int
cmp
mov
push
mov
outsl
mov
cs
cmpsb
push
adc
cmpl
adc
xchg
mov
cmp
inc
xchg
mov
push
icebp
or
jl
cmpb
dec
sub
les
ret
insl
add
int
in
mov
xor
xchg
popf
dec
dec
lods
mov
mov
pushf
inc
cmp
xor
ss
cltd
into
call
jno
dec
scas
mov
add
add
sub
cmp
js
insb
scas
and
ja
leave
imulb
dec
scas
mov
pop
movsl
insb
jge
adc
xchg
out
jne
js
xchg
cwtl
sahf
pop
popa
movsb
inc
adc
and
push
dec
dec
pop
xorb
fwait
in
jge
push
aad
or
xor
data16
enter
pop
sbb
sub
fs
ss
push
ja
fisubs
outsb
xlat
cmpsl
subb
leave
fadd
jbe
out
das
or
pushf
lods
subb
xchg
mov
jg
mov
fiadds
icebp
and
push
cmp
cmp
sub
push
push
rorb
mov
pop
or
enter
add
push
pop
fsubr
aaa
adc
xorl
pop
dec
push
je
fistl
sbb
xchg
jg
ss
adc
psubusb
mov
adc
mov
in
sahf
sub
jge
divb
mov
or
leave
in
jecxz
leave
lcall
dec
mov
aas
cmp
or
dec
push
pusha
inc
fsubl
movsb
fsubs
addl
and
subb
ret
insb
push
add
push
xchg
push
faddl
movsb
js
inc
dec
jns
in
lods
out
push
inc
js
xor
sti
into
dec
inc
sahf
xchg
sti
test
pop
ljmp
ss
loope
xor
ljmp
repz
xor
adc
jecxz
xchg
or
lret
fs
mov
rcrl
stos
jp
rcll
stc
popf
dec
inc
cld
add
ret
fcompl
in
xor
orb
outsl
fwait
xchg
jecxz
and
xchg
pushf
pop
shlb
adc
sbb
xchg
roll
ret
cmp
jge
dec
xchg
fstpl
mov
lret
mov
mov
out
push
lds
or
pop
icebp
hlt
jg
jns
adc
mov
mov
cmp
call
rcrb
fadds
ret
push
outsb
push
pop
sbb
fsubr
add
push
jg
pop
data16
sbb
cltd
dec
xorl
xor
mov
pop
sub
addr16
call
cmp
pushf
xor
ja
sub
xchg
stos
jle
jle
adc
cmp
sarb
ds
cmp
dec
dec
fxch
sbb
scas
lock
mov
jle
sbb
sub
inc
insl
sbb
adc
mov
mov
pop
mov
enter
lea
fldl
loope
xchg
imul
dec
mov
xchg
stos
sub
add
jne
sub
xor
sub
int
out
or
aaa
mov
mov
mov
mov
test
lea
sbb
arpl
push
xor
jno
xor
cld
insb
sub
dec
daa
dec
into
pop
mov
hlt
je
pop
cmc
push
in
movsb
stos
lds
aad
cmp
push
mov
push
in
daa
fwait
ret
sub
fildll
movaps
mov
out
lret
cs
xchg
fwait
add
pop
mov
push
std
mov
cmp
push
inc
xchg
scas
add
jbe
xlat
add
in
cwtl
push
and
inc
pop
cmc
mov
inc
cmpsb
jo
pop
leave
xchg
mov
adc
inc
mov
or
push
sahf
lcall
clc
jmp
push
fsubrp
js
mov
ficoms
jbe
out
mov
mov
cmp
mov
mov
xor
inc
push
xor
pop
scas
dec
std
mov
mov
xchg
add
xchg
xor
mov
xor
add
in
adc
iret
and
xchg
cld
cltd
lcall
sub
shll
popa
sub
pop
mov
and
int
xchg
xor
js
adc
inc
inc
and
sub
subb
xchg
inc
mov
ret
ffree
mov
je
add
xchg
mov
xchg
dec
insl
pop
les
jl
fs
fnstsw
ret
jae
mov
iret
add
fxch
push
mov
loopne
mov
outsl
jmp
dec
push
notl
loope
into
cmc
add
movb
dec
insl
icebp
jb
pop
movb
pop
jg
and
cmpsb
push
pop
cld
mov
out
jae
insl
xlat
clc
ljmp
push
daa
fwait
or
push
sbb
sbb
arpl
ret
adc
cmp
xlat
push
or
mov
mov
and
aam
or
mov
in
lods
or
mov
inc
mull
rol
xor
xchg
adc
inc
repnz
arpl
in
lahf
pop
clc
pushf
sub
imul
inc
and
cmp
dec
push
jmp
repz
ret
jo
stos
xor
jne
sub
push
jae
inc
sbb
ljmp
pusha
pop
ret
or
ret
mov
movsl
das
dec
sbb
xchg
cmp
and
mov
inc
icebp
adc
mov
pop
aaa
shlb
fdivrl
mov
jno
mov
lea
mov
lea
aas
xchg
pop
mov
sti
jbe
cmp
ja
in
sub
in
int
jecxz
adc
rclb
inc
data16
pusha
aaa
sub
fcmovu
pop
fimull
insb
adc
mov
pop
subb
dec
sbb
aas
mov
jns
xor
call
mov
aad
ss
cmp
out
stc
mov
jns
mov
in
mov
lahf
cmp
call
out
pop
adc
scas
fs
inc
insb
ret
lea
adc
mov
mov
jle
pop
push
popf
inc
fisubs
scas
mov
pop
lock
jb
pop
mov
sub
bound
into
xchg
mov
scas
fwait
fwait
jo
push
sub
les
mov
pop
mov
cmpsb
pop
or
fwait
fwait
enter
sub
sbb
cmp
pop
cs
xor
inc
mov
push
leave
mov
insl
stc
outsl
mov
xchg
cltd
jg
xchg
xchg
out
jmp
and
decb
pusha
outsb
aad
es
aaa
mov
rcrb
stc
cmp
xchg
xorl
fmull
iret
xor
cmp
mov
sbb
pop
jecxz
and
adc
xchg
mov
rolb
sti
repz
test
mov
pop
hlt
jae
dec
xor
loop
mov
in
insb
mov
sbb
in
hlt
popf
int3
into
lret
in
xchg
cmp
imul
scas
add
mov
mov
inc
xchg
hlt
sbb
hlt
dec
insb
adc
ss
call
lret
dec
lahf
xchg
pop
imul
xchg
sub
ds
or
aam
mov
fs
mov
fdivrl
jge
dec
pop
and
in
xor
xor
add
lea
push
icebp
cmpsl
aam
enter
cmpsb
cld
adc
inc
mov
push
jmp
nop
sahf
adc
lret
incb
add
mov
xchg
push
sbb
cmp
xchg
fldl
imul
xchg
cmp
lods
lahf
mov
loop
sbb
jo
cmp
fsubr
sbb
mov
pop
insb
inc
jmp
pusha
add
fldt
imul
sub
xor
mov
jo
es
and
das
mov
mov
movsb
or
out
xchg
xchg
pop
and
scas
aaa
insb
xor
add
inc
or
xor
and
out
dec
and
popf
sbb
sub
cltd
hlt
sub
ds
jmp
mov
xor
adc
data16
arpl
sti
les
jnp
or
fwait
ret
xor
xchg
insb
pushl
fs
aad
push
adc
sbb
sub
scas
mov
jecxz
jmp
out
xchg
pop
fists
pcmpeqb
aaa
es
jnp
ss
dec
ss
fnsave
hlt
xchg
arpl
push
cld
shr
sbb
mov
shrb
pop
lods
dec
cmp
test
and
out
iret
in
jno
xchg
or
in
mov
cmp
orb
iret
dec
inc
aas
cmp
cmp
xor
arpl
dec
cs
aaa
fs
movsb
outsb
ret
mov
imul
int3
mov
adc
cmp
or
pushf
sbb
xchg
rcr
inc
jno
lret
xlat
xor
inc
pop
filds
push
cmpsb
jno
ud1
add
push
jl
xchg
mov
add
repnz
adc
lahf
jo
jecxz
outsb
fsubs
shl
push
xchg
scas
push
push
pop
adcb
add
out
xor
ss
das
mov
sarl
popa
xor
or
pop
mov
xchg
lods
and
cmpsl
and
int3
or
pushf
repz
mov
cmc
fsubs
or
popa
jo
dec
and
and
out
leave
xchg
pop
je
stc
rorb
or
xor
cmc
lock
inc
mov
je
add
lret
jl
jne
pop
sbb
in
xor
jmp
dec
add
cld
sub
movsb
test
adc
mov
mov
mov
mov
mov
sbb
mov
inc
cmc
push
jb
js
call
mov
xchg
rcrb
scas
popf
push
sti
lods
aam
lret
sbb
sbb
lds
popa
rcrl
sub
gs
and
pop
mov
int3
fnsave
mov
adc
jl
and
int3
push
xor
sbb
sub
push
mov
inc
test
mov
jle
adc
cmp
mov
pop
adc
repz
js
jmp
jnp
std
inc
data16
sbb
mov
dec
push
and
mov
jmp
lea
fdivs
repnz
test
push
xchg
jb
xchg
inc
jbe
pop
sbb
ror
push
push
cmpsb
les
dec
inc
shrb
insb
jne
stos
movsb
fdivp
movl
add
and
inc
or
cmpsb
mov
xor
jg
pop
push
sub
test
rol
test
clc
cs
bound
add
mov
in
xor
test
mov
lret
sub
rorb
mov
out
cld
cmpsb
mov
std
or
push
test
lret
xor
fst
push
dec
int3
push
adc
xchg
mov
lcall
insb
add
cmp
pop
fldpi
inc
andb
aas
pusha
mov
adc
notl
mov
jle
outsb
decl
jo
iret
or
xor
dec
push
rorb
cli
rep
lret
shrl
int3
mov
dec
pop
jae
xor
jge
pop
pop
ffreep
sahf
jnp
dec
inc
jo
loop
cmpsw
xor
inc
and
test
fwait
dec
push
jecxz
xchg
les
std
or
movsl
aaa
gs
sub
sbb
mov
and
pop
in
stos
out
mov
sub
les
inc
ss
push
movsb
add
inc
lcall
stc
es
rcl
mov
sbb
cltd
mov
push
popa
pop
test
mov
adc
xchg
pop
xor
dec
data16
cmp
adc
sub
je
mov
aad
subl
xchg
test
fs
or
pop
imul
mov
push
test
push
sbbl
mov
jmp
out
daa
pop
push
das
pop
lods
dec
dec
xchg
mov
int3
imul
or
sbb
push
jge
sub
sub
push
iret
dec
test
lret
les
push
bound
imul
loopne
sahf
inc
sbb
inc
or
das
cmovge
imul
dec
xchg
dec
lods
movsb
pop
mov
sbbb
insb
mov
cmp
dec
cmp
in
les
push
xchg
es
jns
dec
xor
push
pop
pop
sbb
int
xchg
add
mov
sub
cmp
or
add
jnp
ds
out
lahf
push
mov
mov
sbb
cli
cltd
push
pusha
or
outsl
pop
pusha
clc
adc
stc
out
xor
inc
or
bound
pop
fmul
jnp
cmp
ret
mov
mov
mov
add
stc
inc
inc
movsb
xchg
sbb
jne
xorb
test
push
dec
cmp
outsb
or
mov
pushf
lock
hlt
push
mov
popa
aam
or
jecxz
std
cmp
cmp
jae
cmp
imul
mov
sub
loopne
cmpsl
xor
scas
cmpsl
out
repnz
jnp
mov
ja
je
ja
xchg
daa
push
fisubrs
mov
loopne
dec
xlat
and
int
sbb
iret
decb
arpl
cmp
aad
push
cld
jne
push
fs
push
mov
jp
dec
popfw
add
testl
addr16
mov
pop
out
mov
test
js
pop
js
dec
xchg
lcall
mov
jge
mov
mov
jg
fldcw
mov
jnp
mov
popf
cmp
dec
inc
loop
mov
sub
pop
daa
rol
pusha
nop
aas
sbb
pop
mov
and
sarl
pop
pop
aas
scas
and
and
xor
xchg
add
addr16
cld
dec
xor
jmp
push
sbb
mov
aad
ja
mov
pushf
aam
out
push
mov
daa
mov
add
movsl
test
dec
lock
ret
jg
popf
aam
in
push
mov
lods
aas
mov
divl
ret
dec
fisubrs
push
and
in
xchg
and
into
xor
cmp
xchg
jmp
std
loopne
out
nop
sub
or
arpl
mov
test
sub
fsubl
push
jae
les
jns
pop
mov
out
sub
outsb
movsb
pop
mov
test
mov
out
lret
mulb
loop
add
sbb
pop
xchg
out
push
dec
sub
dec
xor
mov
popl
push
xchg
jne
into
mov
jbe
aad
push
inc
rorb
out
jl
std
arpl
xlat
outsl
je
insl
sub
aad
iret
dec
test
or
add
jge
fisttpll
fwait
clc
inc
push
mov
xlat
xchg
movsb
mov
mov
push
xchg
or
repnz
mov
aaa
mov
lods
insl
bound
jge
xlat
jp
or
js,pt
lods
mov
cmpsb
jmp
or
out
insl
shrb
into
dec
fs
inc
out
daa
fsubl
nop
pop
push
fwait
call
idiv
push
xchg
jb
adc
inc
fldcw
mov
cmpsb
std
dec
dec
repz
je
les
mov
cmpsl
and
ret
jae
subb
push
sub
or
dec
and
ret
jl
repnz
or
enter
fidivs
add
sub
sbb
in
repz
std
pop
xlat
outsb
mov
inc
mov
cmpsl
loop
xchg
test
jns
inc
sti
lcall
xchg
insb
xor
adc
or
xchg
jge
or
or
rclb
out
enter
lods
mov
mov
ljmp
in
repz
add
fwait
into
inc
cmpsb
xor
pushf
idiv
lods
mov
daa
outsb
push
das
sub
aad
xchg
jns
add
pop
adc
lret
out
scas
sub
mov
out
aad
orl
in
sbb
rorb
out
rcll
or
loopne
lods
xchg
xor
rol
inc
and
jecxz
add
iret
test
es
int
lea
sub
imul
test
daa
jg
pop
inc
scas
in
js
insl
rcll
sbb
sub
lahf
cmpsb
mov
sub
add
xchg
out
insl
popf
ja
icebp
mov
cli
mov
jmp
xchg
pop
mov
sub
data16
out
jg
cmp
cltd
xor
cmpsb
sbb
ljmp
notl
push
dec
inc
lock
mov
enter
setns
jb
push
leave
cmpsl
add
int
sub
xchg
pop
xor
sbb
mov
mov
mov
cmc
gs
idivb
mov
decl
dec
daa
adc
jl
outsb
jb
and
enter
sub
das
iret
pop
test
aaa
dec
xchg
dec
lods
sub
dec
ja
cmp
in
jecxz
xor
iret
ret
and
loope
bound
test
or
lods
pushf
push
jo
or
repnz
xchg
loopne
in
sub
mov
cli
cld
cmp
int
push
push
leave
jp
scas
push
iret
in
js
cmpsb
lcall
sbb
adc
bound
xorb
fwait
push
sub
movsl
mov
iret
popf
xor
es
fs
es
mov
in
push
add
lods
jbe
mov
dec
stos
ja,pn
sahf
sti
jno
stos
sbb
movsb
adc
add
in
sbb
movsb
scas
jge
mov
mov
xchg
pop
mov
sbb
out
inc
jbe
repnz
adc
mov
out
mov
add
push
int3
mov
lods
mov
inc
iret
xor
lock
mov
or
add
sub
sahf
mov
pop
or
dec
mov
jmp
mov
jo
scas
xchg
inc
movsb
mov
inc
int3
jo
and
xor
xchg
daa
nop
push
ja
jge
sub
jne
into
pop
cmp
fisttpl
pop
mov
ret
add
scas
jge
add
js
rcr
or
sub
xor
sub
pop
adc
inc
arpl
mov
movsb
aam
jge
xor
mov
popf
inc
add
repnz
add
icebp
pop
mov
sbb
cmpsl
push
insb
lret
and
inc
dec
scas
xchg
dec
ljmp
sub
and
and
gs
shlb
lcall
std
xchg
xor
cwtl
jmp
fbld
daa
push
mov
jae
xchg
and
gs
stos
jae
jb
lods
js
xor
mov
jmp
addb
push
xchg
mov
notb
and
and
jge
pop
dec
inc
call
add
pop
add
arpl
enter
cwtl
cmp
ljmp
setns
cmp
push
jmp
add
or
xchg
jno
or
bound
fisubs
cmc
xchg
dec
movsb
jae
mov
jb
iret
scas
call
mov
arpl
sub
cli
xchg
mul
enter
push
inc
iret
add
push
cmpsb
dec
pusha
push
push
add
mov
roll
xchg
adc
push
rolb
stos
roll
add
mov
jl
push
addr16
test
repnz
cmpsl
outsl
xchg
cmc
hlt
cmp
jae
mov
daa
scas
jge
dec
push
and
mov
in
cmpsb
stos
or
outsb
jp
xchg
in
or
or
mov
scas
jecxz
gs
xor
pop
mov
movsbl
cmp
mov
addr16
pop
adc
scas
aam
mov
sub
ds
pop
fcompl
xor
arpl
xchg
icebp
jb
ret
stc
cmpl
mov
out
add
mov
push
jno
jg
stos
dec
aad
arpl
push
scas
test
test
xor
inc
mov
jbe
decb
ss
call
rorb
cltd
mov
mov
or
push
scas
push
orps
stos
js
or
mov
mov
addl
push
fmul
mov
or
popf
pusha
lds
sahf
andl
imul
inc
dec
in
inc
jbe
inc
mov
mov
pop
popa
inc
mov
sbb
cwtl
lods
fistps
ficomps
sbb
faddl
repz
mov
clc
jno
and
lret
inc
xor
sarb
jmp
dec
adc
les
fidivs
or
aas
mov
leave
pushf
std
repz
xchg
sub
imul
inc
add
pop
cs
sahf
cwtl
xor
add
sbb
adc
dec
jo
inc
insb
fstl
aaa
lds
int3
xor
mov
jb
mov
and
cs
repnz
pop
neg
rcl
lock
and
test
jb
inc
loope
ss
inc
lret
sbb
fsubr
fiaddl
xorb
or
lret
pop
cli
jns
leave
cmp
out
xorb
mov
popa
sub
sbb
jnp
xchg
cmp
sub
bnd
xor
shrl
ljmp
imul
les
dec
enter
bswap
ret
imul
jg
jmp
sti
inc
cmp
dec
repnz
into
xchg
pop
fwait
xor
mov
out
cmp
pop
movsb
addl
les
or
xor
test
jns
call
andl
cmp
inc
sahf
jmp
in
aaa
mov
fwait
cltd
dec
push
daa
aad
negl
and
mov
push
out
mov
mov
xchg
pop
adc
loope
movlps
in
mov
outsb
pop
mov
test
xor
ljmp
out
leave
sub
push
or
out
loope
lock
pop
dec
out
mov
xchg
test
pop
cld
loope
push
ret
clc
scas
cmovo
push
mov
push
aam
lret
mov
mov
mov
xchg
frstor
jmp
inc
dec
fucomp
lcall
lret
adc
mov
sub
xchg
push
stos
pop
ljmp
push
or
iret
ficompl
fsubrl
in
pushf
pop
mov
push
or
xor
ss
sahf
bound
cmp
jmp
call
xlat
dec
int
or
inc
and
push
and
in
dec
adc
addr16
jg
cltd
lods
dec
sub
aaa
lret
es
popa
xchg
sbb
xor
jnp
orb
insb
pop
pop
lahf
insl
enter
out
mulb
pop
mov
sub
sbb
sub
ds
push
fmull
xchg
add
or
and
imul
xchg
js
shll
les
nop
cmp
or
inc
sub
sbb
mov
xor
clc
jno
sub
repz
mov
pop
jae
jbe
xor
repnz
sub
mov
mov
sub
fsubrs
pop
and
jns
add
dec
push
stos
xor
mov
out
push
push
jbe
test
gs
lods
loope
pop
jo
mov
lahf
je
roll
dec
mov
inc
ljmp
imul
cmp
xor
dec
ss
shl
push
enter
xor
jle
cmp
and
stc
pop
xchg
mov
mov
lds
mov
sbb
xor
mov
js
pop
lahf
jle
loop
pop
divb
fld1
lcall
dec
inc
hlt
out
pop
adc
repnz
js
testb
dec
bswap
xor
fimuls
pop
mov
outsl
jno
outsb
lds
imul
pop
push
cmp
fisubs
in
add
inc
push
push
stos
xlat
cmp
xchg
jge
push
xchg
sub
push
sub
sub
jnp
repz
jp
out
sbb
sarb
repz
mov
cld
cli
fcoml
xchg
xor
addr16
jp
mov
mov
cmp
jl
or
xor
sub
sahf
mov
adc
jae
jmp
mov
pusha
imul
movsb
andl
mov
or
dec
mov
js
daa
push
push
lret
jb
orl
orb
out
or
mov
repz
push
push
fwait
mov
stc
rcl
xchg
ja
dec
lret
sbb
mov
aas
push
jecxz
dec
xor
adc
lds
rolb
aad
pop
cmp
add
add
mov
mov
mov
add
ficoml
lods
test
test
roll
in
cmc
cmp
jbe
xor
ret
pop
std
push
in
testl
aaa
xor
imul
std
sbb
inc
mov
inc
sub
inc
or
push
out
lods
push
ljmp
jne
sub
insl
adc
pop
mov
je
sti
xor
jg
stos
adc
cmp
mov
sub
lret
inc
testb
mov
pop
dec
add
cmp
xor
mov
mov
cmp
call
mov
incl
int
xchg
notb
push
mov
and
jne
cltd
rorb
or
fprem1
pop
jb
pusha
in
test
in
stos
mov
clc
jnp
pop
dec
jo
cmp
or
stos
popf
lds
cmp
pop
pop
sbb
cli
push
dec
inc
mull
gs
hlt
stos
jbe
mov
adcb
lods
jnp
jns
jge
cmc
sbb
aaa
push
int
shll
or
insb
ret
xchg
jo
jecxz
repz
dec
sarb
jecxz
pop
out
cmpl
outsb
repz
mov
jp
jns
in
adc
add
scas
cwtl
lret
lods
mov
rclb
push
test
icebp
and
jecxz
aas
dec
dec
push
pop
call
inc
ljmp
fs
roll
mov
adc
lods
pop
pop
xor
aas
insb
xchg
out
jl
mov
js
sbb
out
mov
iret
shrb
xchg
mov
xlat
xor
mov
jg
pop
or
movsl
xchg
nop
mov
loopne
repz
jg
xchg
jbe
dec
xor
and
pushf
inc
dec
aad
divb
inc
test
cmp
mov
push
inc
int
sub
ficomps
in
das
in
push
add
enter
pusha
xchg
adc
push
loope
lods
sbb
jns
fildl
dec
test
dec
cld
cmp
jge
stos
fcomps
lds
or
jp
mov
dec
mov
xchg
push
pop
stc
or
push
lcall
mov
into
xchg
ljmp
jnp
xor
pop
loopne
mov
hlt
push
pop
adc
test
imul
pop
dec
pusha
shl
xchg
or
xchg
sbb
and
in
and
mov
jnp
cltd
enter
push
pop
andb
jns
xor
push
add
jb
lcall
adc
mov
popa
jmp
test
cmc
mov
or
lcall
pop
idivb
add
das
out
xchg
sub
pop
lea
insl
pop
lcall
mov
or
lret
inc
aad
mov
aas
jb
cmp
mov
daa
push
push
mov
in
mov
aam
inc
scas
cmpsb
sbb
aaa
xor
loope
mov
xchg
mov
jecxz
jge
mov
daa
aas
xor
jne
sub
out
movsb
mov
push
fcmovb
add
call
push
sub
imul
dec
popl
cmp
jmp
push
and
push
pushf
fimull
xor
loop
push
sbb
xchg
fwait
stos
pushf
repnz
ljmp
int3
inc
xorb
outsb
insb
xor
leave
sahf
pop
loopne
adc
mov
sbb
stos
shrb
sbb
jge
mov
push
add
mov
frstor
shll
mov
pushf
mov
and
xchg
push
sub
aad
pop
aam
mov
sub
xchg
and
jg
push
mov
out
pop
outsl
pop
dec
repz
sub
add
ret
mov
cmp
sub
push
je
jb
ffree
iret
cwtl
stos
cmp
insb
rcll
cmpl
xchg
push
push
cmc
mov
pop
and
mov
xor
mov
dec
imul
pop
fsubrs
movsl
pop
inc
data16
xchg
mov
hlt
push
ja
mov
mov
aad
pop
jno
stc
push
outsl
mov
pop
outsb
hlt
adc
ficompl
xlat
mov
incl
call
add
call
mov
loopne
or
sbbl
mov
lret
and
lock
nop
shl
loopne
pop
push
movsl
adcl
daa
test
ficoml
mov
pop
jp
push
jl
ret
movsb
push
jl
movsl
pop
movsl
cmp
stos
imul
inc
in
lock
mov
dec
inc
mov
pushf
adc
pop
enter
out
mov
push
scas
sahf
addr16
movsl
call
or
fsubrs
or
in
rclb
inc
pop
jecxz
outsb
jp
in
shrb
mov
pusha
icebp
mov
mov
jge
cmp
sbb
js
mov
lret
inc
jge
inc
cmp
daa
jb
push
cmpsb
fsub
adc
push
mov
add
out
push
inc
mov
inc
add
or
orl
sub
in
scas
xchg
mov
out
pop
xor
fidivl
stos
in
outsl
ret
adc
ret
out
cmpsl
mov
jnp
aad
sbbb
xchg
js
mov
out
sbb
pop
cmp
mov
test
dec
cs
jae
adc
pop
aas
sub
cmp
rcl
hlt
rcr
repnz
mov
cltd
sbb
ljmp
call
cmp
test
pop
adc
imul
push
test
dec
fs
xor
fdiv
cmp
stc
or
lods
testl
xrstors
push
jnp
mov
pop
or
add
xchg
adc
ss
in
jecxz
jle
gs
cwtl
rorl
icebp
mov
jp
popl
push
pop
jbe
test
insb
outsl
mov
add
mov
shrb
push
mov
jg
jbe
stc
xor
in
daa
dec
xor
sbb
movsb
push
in
shl
fs
jmp
fdivrs
push
pop
jbe
adc
push
jle
inc
js
flds
xlat
lcall
sub
push
xchg
and
xchg
insb
in
movsl
aaa
sbb
or
add
xchg
and
adc
inc
mov
dec
inc
ret
xchg
loope
push
jge
out
cmpsb
fisubrl
jo
out
xchg
orl
add
add
mov
and
test
and
test
push
insb
dec
push
lods
sub
cmp
daa
pop
hlt
sbb
addb
push
xchg
in
jecxz
test
jbe
pop
and
ljmp
dec
inc
mov
xchg
or
xchg
test
mov
data16
mov
jg
ficoml
cmc
movsb
and
sub
fildl
dec
dec
push
int3
push
es
mov
mulb
mov
jb
add
inc
loopne
out
jb
push
pop
fnstcw
mov
jbe
add
pushf
jl
push
inc
out
inc
movsl
sti
fmuls
push
stos
pop
lret
loope
sar
sbbl
mov
es
xchg
xchg
pop
push
push
insb
mov
push
mov
cmp
lock
out
ret
les
lret
xor
adc
adc
dec
xchg
pop
mov
jb
das
cltd
mov
test
orl
clc
mov
xor
push
or
add
cmp
push
loope
hlt
and
iret
jbe
push
pop
jnp
mov
ds
mov
push
jae
bound
xor
popa
inc
mov
mov
mov
xchg
and
mov
pop
sti
clc
jns
jp
mov
sbb
loopne
int
mov
jb
sbb
aam
jge
xchg
cmpsl
bnd
mov
fnstenv
in
in
add
mov
clc
mov
jmp
xchg
loop
inc
lret
xchg
xlat
stc
sahf
xchg
lret
loopne
unpcklps
and
dec
dec
loope
out
add
in
bnd
dec
dec
aam
or
ja
shll
mov
inc
sbb
fnstsw
push
mov
mov
sbb
adc
mov
pop
insl
in
xor
clc
mov
testb
adc
sub
lcall
mov
sub
xchg
pop
sahf
or
mov
adc
out
dec
es
push
in
push
sbb
cmp
scas
or
cwtl
push
mov
cwtl
test
fdivr
ret
and
sbb
dec
lret
pop
les
arpl
pop
push
xor
jp
je
adc
enter
pop
stc
and
xchg
jb
inc
lock
xchg
xchg
shlb
xchg
mov
in
out
or
iret
cmp
mov
cmp
rcl
adc
lea
out
adc
pop
mov
por
and
mov
iret
popf
mov
fstl
pop
or
js
or
and
popf
push
test
movsl
js
cmp
mov
jge
pop
pop
xchg
icebp
lahf
adc
nop
dec
lods
add
xchg
add
aas
cmc
das
sbb
xchg
cltd
ljmp
xor
sub
push
mov
xchg
sub
xlat
cmp
ja,pt
mov
cwtl
mov
mov
bound
pop
inc
stos
ljmp
xchg
lcall
int3
xor
adc
xchg
popa
dec
lea
or
fbld
lods
std
push
sbb
in
dec
xor
cmpsb
enter
int3
sub
sbb
cmp
popa
nop
lods
sub
int
or
dec
push
imul
loop
jg
mov
in
push
aad
aaa
insb
nop
ret
into
xchg
shl
and
gs
in
jnp
jno
xor
dec
push
add
add
stos
imul
mov
jle
das
js
cwtl
call
add
xchg
inc
mov
test
mov
ss
sbb
pop
fsubl
fsubrl
loopne
outsl
icebp
xor
test
jl
mov
pusha
scas
int3
fsubrs
xor
inc
and
pushf
addl
data16
into
dec
rolb
stos
in
push
sahf
fistpll
adc
mov
repnz
mov
inc
daa
inc
add
lock
mov
test
stc
xor
scas
sub
out
xchg
push
adc
adc
inc
in
mov
or
sbb
cmpsb
mov
pop
cmp
aad
sub
lahf
cs
add
leave
insl
cmpsl
mov
mov
fnstenv
mov
mov
movsl
call
pusha
mov
lds
nop
in
sbb
outsb
xchg
cmp
xchg
dec
pop
mov
add
jge
pop
xchg
pop
stos
inc
cmp
and
ja
xchg
mov
ss
sbb
xor
popa
jb
pop
sarl
pop
mov
pop
push
hlt
mov
xchg
xchg
push
jbe
add
mov
sbb
dec
sbb
scas
cmp
add
repz
mov
adc
add
inc
cld
dec
cmc
aam
outsb
ss
js
cmpl
icebp
shl
fstl
sbb
shl
or
jg
adc
push
xchg
xchg
mul
scas
sbb
arpl
push
std
lds
inc
dec
xor
xchg
imul
jb
dec
and
push
in
popa
ss
cmp
push
movsl
cmp
cmp
mov
pop
test
ja
pop
test
repnz
push
jo
fsubl
movsl
xor
add
int
popa
xor
into
imul
sub
aaa
adcl
push
xor
jecxz
cmp
mov
adc
leave
push
es
fistpll
popa
shl
sahf
mov
lahf
add
push
adc
push
orb
dec
int3
pop
std
out
mov
das
aas
jnp
jo
and
int3
in
ss
and
mov
jg
aaa
iret
into
dec
jbe
and
test
stc
mov
jmp
stos
imul
pop
sahf
lcall
nop
cmp
xor
mov
dec
or
mov
mov
test
jle
gs
xchg
addr16
jne
jmp
stc
lods
mov
popf
ss
pop
sub
rorb
out
push
add
dec
aad
or
mov
jg
add
inc
lock
in
xchg
mov
shlb
pop
mov
imul
je
adc
pop
loop
mov
test
cmpsb
mov
jp
inc
or
jmp
out
pop
mov
cmp
jae
dec
xchg
scas
in
mov
push
loope
nop
fldz
test
push
in
xor
incl
or
add
pop
stc
xchg
or
mov
xchg
push
insb
inc
sbb
cltd
jle
and
xchg
dec
pop
cmp
dec
adc
stos
sub
sub
jb
mov
or
cmpsb
mov
test
mov
cld
hlt
cmp
or
mov
lret
int3
loop
mov
cltd
dec
out
push
inc
shl
sub
aaa
arpl
mov
mov
pop
sbb
call
or
sub
pop
and
pushw
sahf
jmp
jb
lahf
adc
cmc
test
xor
fbld
inc
mov
insl
lods
and
dec
pusha
mov
sar
mov
and
xchg
pop
push
sbb
ret
scas
sti
pusha
mov
push
mov
jecxz
bswap
pop
or
mov
in
jle
stos
or
popa
clc
and
mov
loope
xor
hlt
dec
mov
repnz
out
lock
mov
std
in
mov
add
movsb
mov
mov
repz
ljmp
add
in
rorb
jp
mov
lock
mov
mov
dec
inc
cmpsl
lods
adc
inc
xor
push
or
aad
insl
sub
add
int
push
mov
xchg
add
xchg
or
mov
xchg
or
test
dec
fsubl
repnz
ja
mov
or
jge
cmp
pop
and
pop
stc
fsubr
repnz
leave
outsl
dec
mov
ss
jo
mov
test
dec
cwtl
stos
push
xchg
in
dec
xor
mov
insb
out
adc
cltd
pop
pop
cmpsb
lea
lcall
clc
andb
addb
sbb
push
adc
jno
adc
inc
push
pop
sbb
add
je
popf
int3
rcrl
orl
mov
xor
and
jp
sbb
xchg
ret
adc
pop
mov
sub
xor
mov
cmp
out
sub
std
lret
add
loop
cmp
mov
push
jmp
sbb
sub
push
mov
test
cmpsl
push
rcrl
fnstcw
pop
sub
mov
fs
mov
mov
les
inc
test
test
jnp
push
test
rcrl
arpl
pop
push
mov
test
cs
repz
jbe
or
wbinvd
rcll
xor
mov
fisubrs
push
jle
sbb
push
add
call
push
add
xchg
and
ds
into
push
xlat
jae
mov
fildl
repnz
je
add
data16
fisttps
push
clc
inc
mov
mov
mov
movsb
imul
inc
sub
mov
cmp
andb
jae
inc
mov
movsl
push
loope
mov
add
dec
hlt
mov
cmp
mov
fnstenv
rcrl
in
popf
mov
cmp
arpl
cmp
sub
jmp
fistpl
xor
cwtl
pop
jo
jle
add
add
xor
push
mov
push
add
pop
xchg
lcall
jg
loope
shll
jl
aad
or
mov
dec
fwait
dec
lcall
push
ds
xchg
sti
sbb
mov
sbb
dec
xchg
dec
jno
cld
sbb
pop
inc
aam
fwait
sbb
push
push
dec
enter
jg
mov
into
aad
outsb
cmp
es
inc
add
lock
push
scas
icebp
aaa
jle
lea
dec
or
jmp
jmp
test
cmp
ja
daa
orb
fisttpl
in
jbe
mov
repz
xlat
movsl
das
stos
push
js
push
lret
aas
push
jmp
test
mov
mov
mov
adc
loopne
sub
push
jo
xchg
imul
inc
mov
js
arpl
jp
adc
je
dec
je
or
cli
jle
push
or
pop
adc
push
mov
sbb
shl
popf
lds
dec
cmp
jbe
addr16
mov
or
lods
sbb
mov
decb
pop
jb
cmp
inc
inc
mov
shlb
outsb
popa
push
pop
gs
lret
ret
push
test
cmp
scas
das
std
xor
mov
sub
rcll
sbb
xor
scas
push
test
xchg
scas
and
xchg
jnp
and
lock
test
ret
push
or
arpl
inc
cli
testb
daa
adc
imul
sti
mov
pop
in
rol
mov
pop
js
pop
mov
jle
push
or
sbb
mov
xchg
cli
ret
xchg
stc
mov
je
or
or
lret
lahf
jl
sub
cltd
shll
mov
push
ret
test
addr16
loop
push
shlb
push
mov
std
jge
cmp
roll
xchg
jne
das
aaa
cmp
jp
fisttps
fs
xor
fwait
push
imul
lods
pushf
jge
repz
xchg
jo
aam
mov
dec
bnd
or
out
push
cmp
out
fcompl
int3
or
std
jg
cld
mov
shlb
push
xchg
cmp
hlt
sbb
lret
inc
insl
ja
pop
sbb
ror
dec
mov
cmp
cmpsb
lods
mov
aaa
arpl
or
pop
es
mov
sbb
add
adc
push
fwait
mov
stos
xor
jp
in
sbb
cmp
iret
lahf
jl
ficomps
jg
fwait
mov
icebp
cmp
adc
repnz
mov
pop
inc
mov
shlb
pop
or
dec
xor
or
aaa
ljmp
mov
inc
jbe
pushf
dec
dec
lcall
repnz
sub
push
daa
adcb
lea
pusha
lods
lret
dec
mov
sbb
jno
jnp
mov
adc
sahf
and
fimull
cmp
cmc
gs
and
mov
cltd
jmp
negl
mov
pusha
loop
ret
into
addb
mov
cltd
rclb
popa
cmp
mov
xor
pop
lock
daa
bound
mov
in
leave
or
adc
dec
and
cwtl
imul
dec
out
addr16
call
mov
mov
fcmovb
lock
outsb
cs
mov
jns
cmp
pop
or
mov
adcb
add
sbb
fidivrs
fmulp
cmp
mov
lret
ljmp
hlt
mov
adc
enter
rolb
test
jo
push
lcall
adc
jecxz
and
rcl
nop
mov
or
gs
push
int
jo
mov
jmp
call
pop
imul
xor
lret
roll
inc
adc
popf
std
mov
cmp
bound
andb
nop
push
pop
js
adc
cmp
pop
sub
idivb
pop
pop
jnp
stos
fsubs
push
imul
mov
jl
scas
movsb
call
adcl
sub
mov
in
adc
push
mov
xchg
div
aaa
out
sar
fcoms
jae
int3
mov
dec
popa
dec
dec
in
dec
cltd
fistpl
lods
mov
jns
mov
in
mov
in
inc
iret
adcl
and
stos
int3
pop
push
scas
sbbb
cli
test
inc
push
loopne
mov
clc
or
jge
fbld
mov
repz
mov
inc
xlat
shrb
fmul
mov
cmp
adc
and
daa
scas
fld
add
pop
mov
ret
mov
push
pop
mov
fnstsw
notb
roll
bound
adc
or
pop
pop
dec
dec
jns
stos
fstps
ss
jp
lcall
pop
sbb
lea
and
sbb
outsb
movsl
popf
push
inc
sarl
out
pop
mov
mov
subb
fiadds
in
jmp
dec
and
mov
in
and
in
scas
adc
lods
lock
rolb
sti
cli
sbb
das
lds
mov
pop
lahf
dec
sbb
xchg
sub
add
mov
sbb
xchg
stc
xchg
lds
andb
lret
sbb
ror
inc
dec
lods
xchg
jp
mov
cld
mov
pop
pop
das
sub
sbb
mov
fdivrl
cwtl
cmp
out
fxch
sahf
or
ds
mov
sbb
int
nopl
pop
ret
cmpsb
sar
jae
mov
adc
xor
dec
or
jne
rorl
rorb
ss
fistl
mov
gs
inc
mov
out
loope
cld
addr16
xor
xchg
jne
fcoml
inc
sub
xchg
inc
pop
mov
lcall
sbb
push
orb
repz
cmp
xor
cmp
or
cmpsl
cltd
dec
loopne
fwait
dec
mov
orb
dec
es
test
ljmp
popf
adc
xchg
inc
stos
popa
imul
xor
mov
mov
jmp
in
js
lret
in
out
test
popa
ss
leave
shrl
jecxz
std
add
sub
mov
dec
inc
insb
mov
jge
fdivs
sub
cmp
clc
lcall
mov
aam
and
push
test
repz
inc
aas
mov
push
std
stc
lock
negl
shlb
popa
movsl
adc
movsb
push
jle
add
cmp
dec
scas
es
loope
out
jae
jnp
mov
inc
arpl
jmp
add
cmp
das
loopne
fbld
dec
jp
adc
adc
fwait
test
xor
and
loope
das
jns
mov
sbb
sbb
cltd
mov
scas
repz
frstor
ljmp
mov
testl
popf
or
inc
int
xchg
subb
addr16
pop
inc
mov
cmp
and
pop
sub
pop
repz
sbb
addr16
and
in
mov
scas
stos
lret
lret
jecxz
into
jle
cmpsl
ds
xorb
dec
cwtl
je
sbb
add
sbb
lock
pushf
stos
lahf
xchg
js
mov
mov
je
jmp
lock
cmp
cmpsl
sbb
insl
in
out
sub
sub
cmc
repnz
lds
cmp
test
aaa
in
cmpsb
int3
inc
sub
push
hlt
sub
or
pusha
sub
sub
lods
dec
mov
and
mov
mov
dec
cli
out
in
in
dec
icebp
or
out
mov
adc
pop
pop
push
sahf
jbe
cmp
pushf
pop
jb
sti
arpl
loope,pt
push
ret
mov
ljmp
xchg
adc
inc
cmc
jb
push
fsubl
cmp
jno
pop
aad
sub
clc
xlat
fwait
add
push
inc
daa
sbb
movsl
sbb
lret
cmp
cmp
rclb
in
sarl
bound
lcall
and
push
fmull
cmc
addr16
xor
test
data16
dec
sarb
arpl
inc
jecxz
inc
lds
mov
ss
and
rcl
xchg
jg
jmp
xchg
fdivr
lods
gs
sub
sbb
adc
fcoml
sbb
pop
in
xor
jmp
jmp
push
rolb
xor
movsl
sar
popa
lock
out
mov
sbb
push
jnp
int3
sbb
fcomip
ja
inc
mov
push
pusha
inc
add
push
mov
mov
push
add
jle
inc
ss
add
jo
addl
lret
dec
sub
test
cmp
mov
jae
xor
into
add
or
loope
cmp
mov
inc
mov
mov
adc
icebp
push
adc
push
adc
xchg
outsb
mul
out
pop
mul
jb
xor
mov
cld
loopne
push
lea
xor
jmp
xor
mov
insl
jge
imul
in
jp
pushf
lock
subb
inc
imul
adc
js
enter
movsb
lret
lods
mov
mov
mov
outsb
mov
xchg
andl
mov
jns
sub
scas
es
cmpsl
sbb
sub
cltd
jno
fwait
inc
popf
fistl
adc
roll
push
loop
xchg
test
sub
and
inc
push
mov
dec
int
shlb
lods
xor
add
mov
mov
push
stc
jg
xor
out
ljmp
mov
subl
imul
inc
iret
push
mul
fisubs
jne
movsl
scas
daa
out
sub
cs
aaa
mov
out
stc
aaa
sub
cld
cmpsl
dec
xor
sbbl
or
addr16
ret
adcb
adc
mov
in
jp
je
cmc
push
adc
cmpsb
int
sub
jle
add
inc
or
cltd
add
mov
std
sbb
sbb
xor
ds
call
push
fbld
ja
mov
mov
stos
std
rol
out
cmp
addb
outsb
jns
das
rorl
les
inc
scas
jg
nop
cmpl
cmpsl
cmp
fists
cmc
nop
xchg
ret
imul
xor
add
mov
sbbl
xchg
push
in
mov
cmp
into
cmp
xor
call
addr16
shl
and
movsl
imul
jge
mov
sub
add
popf
inc
movups
addl
arpl
js
or
cmp
aas
rorb
out
jo
adc
jnp
imul
push
or
inc
sbb
add
add
ja
nop
xor
cmp
inc
mov
sub
jae
faddl
sbb
je
ret
jbe
inc
pop
fnsave
or
pop
and
jo
xchg
test
imul
inc
out
cmp
je
mov
add
loope
test
pop
inc
test
lods
pop
sub
imul
sti
jo
sahf
negl
aaa
push
mov
das
rorb
gs
adc
jle
repnz
bound
lret
jo
push
push
dec
sub
jmp
addr16
cld
xchg
shrb
sbb
inc
dec
or
dec
repz
jae
push
push
pop
cmp
fstps
out
sbb
add
dec
inc
sarb
xchg
push
sbb
fwait
cmpl
dec
fcmovne
scas
imul
xor
xor
mov
xor
adc
daa
ret
or
mov
sbb
sbbl
aas
xchg
mov
aad
and
idivb
add
mov
repz
push
loop
out
out
call
lods
sub
enter
gs
mov
mov
and
lock
iret
pop
lcall
mov
pusha
aas
out
xchg
das
cmp
lea
xor
aaa
mov
lea
imul
jmp
repnz
pop
in
jb
xchg
jb
sub
cs
cmpsb
jecxz
pushf
jmp
mov
adc
out
fstps
popf
les
and
dec
sbb
pop
aaa
jge
lcall
inc
dec
push
ds
jo
dec
lods
cmp
test
call
fisttpl
jbe
sarl
enter
push
adc
push
lahf
iret
cmpl
adc
add
and
cmp
mov
cmp
jl
fdivrl
xchg
icebp
in
pop
jo
in
outsb
fdivrs
int
out
adc
fwait
mov
call
push
mov
xor
mov
push
pop
or
sti
mov
xor
xor
mov
mov
popf
sub
shlb
sub
clc
and
cli
push
hlt
dec
sar
es
das
outsl
add
push
inc
test
sbb
sub
push
mov
ljmp
push
pop
xor
sbb
scas
xchg
sbb
scas
jne
add
fwait
cmp
test
pusha
lret
or
jnp
inc
das
cmc
lret
xchg
ljmp
or
sarl
sub
repnz
pusha
push
test
mov
movsl
add
ds
push
loope
jae
out
outsl
mov
stos
xchg
mov
sbb
mov
cmp
mov
xchg
adc
das
mov
add
or
test
test
pop
jno
sbb
repz
pop
fwait
dec
pop
xorb
out
out
jns
add
mov
dec
int3
fdivrs
icebp
test
cmp
push
xlat
movsb
les
sub
xor
cmc
stos
sahf
jbe
or
insl
lods
cwtl
pop
pop
cmp
call
jge
shrb
lods
sti
mov
loopne
xchg
int3
movsb
jno,pn
in
sbb
outsl
std
movl
cli
call
xchg
daa
and
mov
fs
or
inc
out
stc
lock
aam
movsl
xlat
pop
popa
lahf
inc
xchg
and
iret
pop
push
jecxz
loope
daa
inc
ds
test
lock
pop
fwait
les
jecxz
in
ljmp
aas
push
unpckhps
xor
std
dec
fldl
into
insl
in
cwtl
hlt
jmp
sbb
mov
popa
dec
push
out
jmp
push
sub
jo
neg
rorb
aad
int3
hlt
mov
int3
sub
int3
xor
jge
popa
mov
movsl
lahf
leave
bound
in
jo
jae
out
jo
jnp
or
add
jae
pushf
repnz
xor
push
scas
aaa
push
test
mov
filds
fimull
push
imull
mov
push
add
mov
inc
mov
pop
out
sarl
aad
repz
pop
inc
pushf
shl
sbb
add
pop
lods
and
cmc
inc
fcoml
mov
inc
lods
jne
xchg
cltd
push
push
notb
push
shlb
sbbl
jbe
hlt
push
call
lahf
sarl
lods
pop
xor
fisttpll
lahf
jns
cmp
and
pusha
push
sbb
dec
pop
jnp
cmp
jmp
mov
shr
xor
mov
call
movsl
scas
orl
rcrl
lret
mov
push
mov
dec
es
xor
filds
outsl
xorb
pushf
xor
dec
sbb
jge
push
cmp
js
or
sub
addl
xor
ret
testb
fnstenv
jg
fwait
sti
push
cwtl
sbb
lea
shrb
pop
out
test
jle
fwait
in
sahf
push
loope
outsl
sub
ret
lret
add
in
mov
insb
inc
cld
into
test
lods
add
and
dec
or
arpl
cltd
or
inc
in
bound
loope
mov
hlt
adc
fs
icebp
sti
or
pop
sbb
xchg
loope
fadds
xchg
or
xor
imul
fimull
mov
je
fcomi
adc
inc
xor
ret
mov
cmp
fsubrl
aam
or
mov
out
out
ds
outsl
stos
test
and
fcomp
pop
or
mov
jmp
ret
mov
enter
xchg
lock
pop
jmp
pop
lcall
xor
data16
mov
ss
inc
jecxz
sub
stos
jae
xchg
mov
popf
lret
sub
xchg
lret
jl
in
sub
ljmp
call
inc
fwait
dec
sbb
push
inc
sbb
mov
jl
ljmp
roll
mov
cmp
ret
push
jmp
ret
sub
mov
dec
push
add
sbbb
imul
and
in
mov
outsb
test
hlt
mov
push
fstps
stc
push
fnsave
mov
dec
dec
jns
cmp
cmp
jo
iret
int
add
aad
dec
xchg
rclb
cs
xor
iret
movsl
inc
aaa
test
adc
movsl
cltd
rorl
or
sbb
int3
xchg
sbb
cmpsl
cmc
sti
add
and
pushf
test
lds
adc
cmp
fcmovb
cmc
loope
pushf
rorl
mov
sbb
xlat
push
test
mov
inc
xor
push
cmp
scas
lcall
xchg
fwait
addl
sti
add
adcb
adc
ds
das
mov
pusha
inc
pop
lock
lods
mov
mov
cmp
xor
fidivrs
pop
xor
insl
xchg
cmp
mov
sahf
push
loope
dec
jbe
shll
in
daa
lcall
push
sbbl
into
mov
jo
jnp
clc
pushf
pop
dec
arpl
loop
lret
xchg
jo
test
les
fisubrl
sbb
jg
xchg
or
pop
jno
cmc
dec
fidivrs
movsb
lret
mov
lds
and
lds
stos
les
add
pop
mov
mov
xor
repnz
jp
pop
rcrl
mov
cmp
call
test
lea
insb
notl
push
mov
jmp
cmp
jb
inc
dec
xlat
cmp
xchg
popa
hlt
inc
scas
incl
lods
gs
dec
and
jns
out
add
fdivs
imul
shll
fldcw
mov
xchg
sbb
sub
fcoml
std
push
ja
xchg
lret
jnp
mov
movsb
aaa
in
mov
testb
xor
lods
adc
push
scas
je
fcomps
xor
cs
cwtl
cmp
sub
dec
pop
inc
xchg
movsb
or
lret
mov
and
pop
add
fstl
fstpl
xor
scas
and
movsl
jne
fldz
popf
and
inc
pop
xor
or
sub
in
in
testl
inc
xchg
adc
sub
xor
and
aas
mov
gs
sub
addr16
bound
ds
sti
or
pop
cs
negb
outsb
cmp
scas
lds
movsb
xlat
imul
lods
or
outsl
mov
imul
sbb
jae
sarl
pop
jl
and
pop
aas
jl
mov
std
dec
xor
xor
nop
shll
mov
xor
cmpsb
lahf
xchg
push
xchg
hlt
inc
sub
cmp
push
ret
repnz
sbb
les
cmpsl
cmp
sub
cmp
jg
test
fs
repz
mov
adc
dec
sub
dec
int3
mov
inc
inc
sbb
xchg
mov
pop
out
pop
es
jmp
shr
inc
pop
roll
imul
in
push
jmp
cmp
addr16
int
adc
mov
icebp
pop
shrb
jecxz
out
xchg
cmp
loop
out
std
cmp
push
fdivl
xor
aas
adc
loop
cld
inc
inc
call
imul
adc
xor
add
pop
jg
call
add
dec
xchg
sub
pop
out
or
or
mov
jbe
lret
adc
add
add
xor
add
xlat
dec
pop
ljmp
in
cmp
add
lock
repz
adc
jl
add
add
sub
sub
adc
xor
loope
xchg
cltd
fdivp
jge
sub
pop
test
imul
jmp
ljmp
hlt
mov
pop
insb
pop
xchg
shl
cmp
stos
repnz
inc
xor
or
mov
sbb
ds
notb
cmp
push
xchg
lret
jne
mov
into
stos
enter
aaa
fldt
in
lret
sub
ja
jne
jecxz
jns
xor
xchg
adcb
pushf
iret
movb
sub
ds
mov
testb
test
lds
imul
lretw
dec
mov
inc
imul
jbe
sub
clc
xor
lods
cs
in
shrb
xchg
mov
adc
push
xor
mov
add
xor
test
mov
test
insl
xorb
adc
pop
incl
or
out
mov
adc
test
movsb
xchg
or
jecxz
rorl
jge
rcl
aam
push
jl
pop
out
mov
pop
sbb
mov
call
test
arpl
andl
lea
jge
movsb
push
mov
in
lea
cmp
jo
mov
es
fdivs
push
stos
cld
mov
or
loope
les
xchg
dec
xchg
fldl
nop
adc
ds
fisttpl
adc
mov
mov
aaa
jno
dec
test
and
leave
aas
push
or
pop
stc
outsb
loopne
lods
mov
dec
pop
hlt
mov
dec
xchg
inc
adc
dec
outsl
and
stc
jmp
xor
shrb
jnp
ja
outsl
inc
push
jecxz
mov
add
mov
mov
in
mov
int3
ret
adc
das
call
push
xor
shll
icebp
jnp
mov
sbb
adc
pop
daa
mov
xor
xchg
cltd
mov
cmovge
mov
cli
and
jb
sar
jnp
fbstp
icebp
xchg
push
popf
sub
push
lock
inc
movsb
stos
xor
sarb
test
jne
push
mov
mov
fistps
jmp
push
movsl
jmp
xor
cmp
xchg
mov
lds
sub
xchg
mov
scas
or
mov
or
jl
cld
push
fists
add
int3
repz
xchg
insb
mov
cld
cmp
cmp
sti
out
or
xchg
rolb
pop
cmp
xor
mov
js
mov
dec
add
jle
mov
sbb
mov
loop
jl
fcoml
testb
pop
push
fidivrl
mov
dec
sbb
cld
cmp
push
arpl
repnz
je
pop
and
adc
sub
push
pop
xor
add
sbb
or
outsl
pop
push
xchg
and
mov
push
aaa
mov
iret
test
jle
test
cwtl
inc
mov
sbb
call
mov
jg
or
inc
add
cmp
pop
std
mov
inc
add
jno
mov
jmp
and
jne
jmp
adc
or
and
int3
or
icebp
rorl
lods
pop
push
cmp
adc
lods
dec
pop
es
addl
xchg
in
pushf
add
in
hlt
dec
outsb
mov
cwtl
mov
insl
les
into
mov
add
ret
fisubs
push
das
enter
insb
dec
mov
jg
adc
xchg
mov
ret
out
movsl
push
repnz
orl
jb
imul
ficompl
leave
add
inc
loop
and
xor
popf
mov
xor
mov
enter
and
daa
pushf
add
xchg
fnsave
push
dec
jle
fwait
dec
cli
scas
and
fwait
mov
xorb
adc
push
int3
dec
jmp
mov
arpl
imulb
inc
mov
sbb
add
js
int
push
inc
sahf
dec
jg
subl
or
shlb
pop
dec
mov
dec
loop
rolb
jne
data16
xchg
or
cs
push
mov
sub
rolb
cs
dec
pop
push
ds
pop
mov
add
ja
push
or
lods
mov
mov
gs
cmp
cmc
sub
xor
sub
inc
push
pushw
inc
fisubrs
nop
sub
jecxz
mov
in
shr
mov
jmp
sahf
cld
pop
aaa
sbb
jnp
sub
ds
roll
xchg
adcl
lds
call
push
adc
push
scas
mov
aam
nop
pusha
xchg
add
cmp
mov
cmp
mov
dec
jnp
shr
adc
push
xchg
and
xlat
andb
sub
mov
inc
lods
js
gs
push
mov
xchg
cmc
lret
push
xchg
jno
and
or
sbb
dec
lahf
pop
mov
shll
push
or
iret
jne
jl
or
int3
arpl
push
mov
ret
jl
inc
and
mov
push
mov
sub
or
cmp
pop
ret
inc
rcll
sbb
mov
xchg
adc
insl
mov
bnd
pop
push
inc
pop
cmpsl
int3
pusha
and
pop
sub
popa
sbb
push
sbb
sbb
and
shl
fcmovbe
xchg
push
popa
push
sub
and
sbb
jecxz
movsb
xor
lret
daa
dec
sub
inc
or
movsl
outsb
lahf
xor
mov
jae
fisubs
adc
adc
and
push
mov
inc
cwtl
shlb
jno
and
leave
test
push
cmpsb
addr16
stos
push
sub
fs
out
xchg
test
imul
mov
sbb
in
mov
and
nop
mov
and
push
pop
addb
inc
scas
cwtl
xchg
loopne
or
xchg
testl
inc
jno
push
cmp
lret
push
faddl
int3
daa
cld
pop
mov
cwtl
test
sahf
rcrl
cmp
fisubrl
imul
xchg
cmp
popf
cmp
adc
pushf
arpl
je
mov
pop
or
dec
xor
adc
or
shl
sbb
aad
push
inc
aad
or
neg
add
or
or
xchg
push
data16
lret
pusha
imul
jno
adc
jg
mov
jno
incb
sbb
and
mov
or
adc
out
xor
fbld
cld
and
push
dec
add
xchg
inc
sub
mov
ss
cmp
dec
insl
mov
add
or
dec
push
mov
stc
mov
data16
push
cld
fimuls
inc
inc
mov
std
adc
leave
shll
lret
inc
cmpsl
in
pop
pop
lods
js
fwait
or
fistps
aaa
sub
cmp
fsubr
dec
icebp
dec
xchg
ret
stos
out
in
hlt
in
mov
mov
cwtl
lock
int3
loop
dec
jns
aad
mov
daa
scas
pop
cwtl
ds
std
cwtl
daa
mov
sub
cmp
fisubrs
cmp
dec
mov
mov
shll
sbb
adc
add
and
lock
test
cmp
in
ljmp
scas
sarb
push
cmp
push
lods
xchg
and
shlb
scas
imul
sub
mov
cld
fwait
daa
or
pop
jo
stos
cld
mov
int
lea
mov
push
fwait
hlt
loop
stos
neg
adc
or
adc
test
sub
int
adc
stc
dec
das
jnp
push
rcrl
pop
clc
jns
jb
stos
repz
ds
mov
jbe
sbb
rorl
inc
aaa
mov
xor
in
jecxz
dec
fldcw
ror
push
rcrb
xor
fsubp
fisubl
mov
pop
add
andl
sub
push
add
push
fsts
jecxz
popa
fidivrs
jns
loop
nop
test
sub
frstor
stos
xchg
addb
rorb
push
and
add
daa
adc
lods
inc
dec
xchg
fadd
mov
stos
pop
xor
xor
mov
mov
dec
xlat
xchg
sahf
lock
jmp
clc
pop
xor
sbb
mov
inc
in
inc
dec
arpl
push
into
inc
cmp
cli
mov
aas
pop
mov
mov
and
xlat
jo
dec
xchg
adc
xchg
xchg
jle
push
xchg
insl
sbb
es
lea
push
dec
mov
push
adc
dec
mov
xchg
outsl
fstpt
jb
xor
outsl
push
andb
sbb
pop
push
push
mov
dec
out
push
cmp
loope
pop
aaa
mov
lret
or
loopne
add
inc
sbb
lock
or
inc
repz
inc
negb
loop
cmp
repz
iret
pushf
mov
outsl
loop
sarb
push
xor
incb
cltd
mov
adc
repz
jge
stos
in
mov
push
ja
pop
ds
ret
or
xor
jb
nop
call
inc
mov
dec
push
cmp
movsb
loopne
out
fwait
test
add
gs
mov
cmp
fsubp
xchg
ljmp
xchg
adc
sbbl
mov
mov
cmp
ret
pushaw
dec
push
cld
add
mov
call
jl
shrl
repz
dec
and
pushf
in
mul
pop
into
jmp
in
add
pushf
rolb
push
xchg
sbb
push
lcall
aad
cmc
int3
in
and
out
out
movsb
cli
push
test
and
les
pop
bound
and
jl
sbb
jle
shl
jmp
aas
andl
mov
xchg
cwtl
dec
cbtw
pop
push
jle
xchg
icebp
dec
fistpl
cmp
add
push
mov
cld
xor
popf
xchg
out
pop
lods
dec
pmaxsw
cltd
jl
jbe
les
loopne
mov
dec
repz
ss
call
jmp
jnp
shll
scas
ja
add
daa
pop
inc
sub
fisttpll
loope
pop
inc
xchg
dec
ds
jae
shrl
xchg
int
pop
loope
sub
adc
fsubrl
mov
or
cmp
jns
pop
sub
sbb
in
pop
shll
mov
out
stos
out
mov
fsubl
add
arpl
mov
add
jg
ss
cmc
xchg
stos
hlt
stos
mov
push
adc
out
mov
insl
cmpsl
push
lret
mov
stc
xchg
mov
push
push
push
push
ret
xor
jmp
notb
add
xchg
sub
fs
add
repz
xor
xlat
add
mov
mov
fmuls
out
arpl
data16
repz
pmulhuw
pushl
add
sub
add
jns
imul
sbb
jge
fnsave
icebp
sub
push
inc
mov
call
xchg
repnz
decl
rcr
and
pushf
push
inc
mov
data16
jge
movsl
or
rcrl
sahf
jl
shlb
push
in
addr16
or
int3
sahf
jle
stos
mov
xchg
les
into
out
mov
movsl
sub
cmp
sbb
pop
ss
scas
repnz
sub
in
add
xor
pop
enter
mov
stc
jns
jb
adcl
enter
popa
inc
add
add
or
out
dec
xchg
bound
inc
cli
mov
out
lea
jmp
test
pop
xchg
pop
dec
mov
inc
and
shr
inc
add
faddl
cmpsl
sbb
xchg
cwtl
jno
out
pop
ret
idivl
pinsrw
add
add
negb
inc
rorl
add
cli
mov
inc
dec
inc
sub
cs
std
cmp
in
cmp
lret
inc
fistl
inc
or
repz
in
jmp
inc
cs
fs
and
push
push
push
xchg
jae
dec
mov
inc
pop
ret
jb
bound
push
cwtl
or
enter
ffreep
fnstsw
jle
std
popf
push
mov
inc
push
insl
xor
dec
and
jg
test
pop
dec
mov
inc
xchg
mov
or
insb
fcomps
adc
adc
sbb
pop
jb
inc
jge
outsb
mov
adc
les
add
pop
jno
fldl
sub
imul
push
repnz
sti
shr
test
push
lods
rorb
add
or
outsl
mov
push
mov
and
inc
xor
mov
push
mov
sbb
fnsave
xorl
dec
push
lea
jp
sub
test
mov
enter
testb
adc
lcall
or
add
cmpsl
sbb
jg
sarl
mov
imul
pop
ret
das
inc
xchg
int
lahf
popf
mov
jp
out
cmp
pushl
xor
inc
not
jle
pop
push
and
lods
mov
adc
movsb
insl
loope
scas
mov
cld
jnp
sub
and
sub
mov
call
mov
es
psrld
stos
inc
cmp
aam
dec
cld
or
inc
out
in
ffreep
int
scas
cmp
cwtl
ljmp
xchg
ds
jae
imul
jne
std
outsl
push
pop
xor
out
xchg
adc
dec
ret
inc
dec
imul
insl
aaa
jb
dec
pushf
fadds
arpl
pop
mov
sarb
jno
xchg
mov
out
mov
sub
xchg
mov
mov
sub
inc
or
and
les
cmp
dec
dec
push
push
xor
popf
sti
sub
leave
aaa
push
adc
adc
lcall
nop
adc
pop
push
pop
cs
sbb
jge
sub
pop
ret
xchg
daa
sub
xor
mov
pusha
ret
cmc
push
and
add
mov
jle
in
mov
mov
pop
int3
push
jbe
jl
sub
pop
ret
sbb
push
icebp
pop
sarl
movsl
mov
and
fisubs
movsb
aaa
adc
in
inc
sub
ret
adc
sub
adc
out
pop
dec
mov
mov
cmp
cmp
xchg
inc
mov
ret
out
inc
shrl
and
lock
ret
inc
push
aaa
dec
mov
std
fwait
in
push
or
insb
es
and
loopne
push
cmpsb
dec
mov
mov
jg
adc
push
and
mov
mov
pop
js
repz
push
popf
das
jg
jecxz
and
pop
insb
cmpsb
int3
cltd
test
es
inc
ljmp
test
daa
lods
jle
popa
adc
mov
clc
out
push
jnp
cmc
iret
jge
cmpsl
cltd
outsl
ja
mov
lret
fsin
addb
sbb
std
jp
aam
sub
push
in
rcrb
mov
test
stc
mov
inc
adc
mov
jo
jle
jns
lret
xor
rol
jae
adc
andb
leave
sti
pop
xor
sub
jbe
adc
fs
jno
loopne
pop
mov
adc
sbb
arpl
ret
faddp
mov
test
jno
sbb
inc
cs
arpl
pop
xchg
push
ja
dec
out
test
daa
out
jae
mov
push
pop
add
xor
fs
push
jmp
mov
fbld
lods
xorl
leave
inc
flds
jmp
mov
mov
mov
pop
mov
cwtl
mov
aad
xorl
mov
pop
push
hlt
cmpsb
sub
daa
pop
rcr
jno
mov
mov
mov
cwtl
aas
cmpsb
negb
cmp
add
push
mov
mov
mov
pop
pop
iret
push
test
int
inc
adc
xor
mov
xchg
inc
in
cld
pop
mov
shrl
xchg
out
popa
das
mov
loopne
and
adc
or
pop
aaa
xchg
inc
mov
cmp
mov
xchg
ja
dec
pop
jns
xor
inc
cmpsl
imul
popa
sub
jmp
pop
sti
scas
adc
add
mulb
xor
fcmovnbe
rclb
mov
in
divl
movsb
dec
xchg
xor
xchg
rcrl
ljmp
xchg
dec
push
sti
pop
pop
cmp
or
movl
and
pusha
lock
cwtl
push
jae
insb
mov
inc
scas
bnd
cmp
aas
cmp
pcmpeqb
push
mov
insl
icebp
xor
xorb
hlt
mov
inc
frstor
adcl
adc
fisubl
sarb
push
sbb
or
cmpsl
cwtl
xor
xchg
cmp
jge
icebp
in
popa
mov
adc
mov
push
xadd
mov
ja
adc
or
pop
adc
call
fisttpl
iret
pop
and
loope
in
xor
xchg
mov
adc
orb
fwait
adc
pusha
bound
scas
pop
test
movsb
inc
adc
stos
ret
inc
inc
in
imul
cltd
insb
mov
mov
xor
jg
cs
sarl
and
hlt
sub
ljmp
xor
add
mov
cwtl
idivl
aam
cmovg
and
insb
cmp
cld
mov
and
repz
pop
aas
add
test
dec
jnp
ss
push
fidivl
in
mov
shrl
icebp
pop
inc
inc
add
ss
fldenv
lahf
pop
jne
rolb
mov
adc
jne
dec
test
sarl
push
mov
mov
cmp
lret
dec
sub
mov
push
adc
sahf
jmp
shl
cmpl
int3
clc
sbb
into
stc
xor
mov
int3
daa
mov
dec
inc
pop
loop
and
ljmp
add
ja
int3
add
inc
add
pop
add
pushf
cmp
add
add
in
sub
add
sbb
nop
add
fnsave
add
scas
lahf
enter
xor
add
push
sbbl
in
out
fsubrs
mov
xchg
iret
add
test
stos
and
movsb
push
mov
adcb
fcomip
sub
dec
mov
je
jo
push
adc
iret
mov
je
cmp
xchg
cmp
add
and
ss
dec
sub
div
push
xorl
dec
into
jp
xchg
mov
mov
out
sub
pushf
mov
test
les
xchg
push
fwait
bound
ljmp
je
js
fcos
jbe
enter
addr16
adc
xchg
pop
pop
repz
orl
in
aam
pop
lods
mov
fists
push
mov
fwait
sub
and
lret
jno
lcall
pop
xor
lock
outsl
adc
mov
adc
pop
dec
push
cmp
mov
or
stc
jecxz
movsb
test
add
sbb
xor
ret
imul
adc
ja
mov
push
sar
inc
roll
nopl
js
cmpb
pop
test
sub
lret
cmp
push
cltd
jecxz
insl
or
hlt
out
loopne
pop
pop
or
in
cmp
fstpt
ret
movsl
sbbl
xchg
test
ret
sahf
std
scas
inc
jecxz
out
lcall
ja
lea
lcall
and
xor
imul
mov
hlt
or
xchg
loop
jg
nop
mov
lea
cmp
fdivs
mov
repnz
mov
inc
je
push
mov
stos
xchg
or
stos
daa
push
jge
clc
rorb
lret
loopne
cli
or
xchg
sti
in
sbb
sbb
lcall
xchg
xor
inc
cmpsb
ds
inc
test
mov
cmp
or
movsl
lcall
adc
adc
mov
and
inc
or
rol
push
mov
cli
jne
mov
mov
jno
ljmp
inc
cwtl
dec
inc
mov
jle
inc
pop
xchg
mov
jno
mov
scas
xchg
sbb
movsl
popa
dec
inc
je
dec
mov
call
dec
xor
or
cmp
pop
mov
call
inc
rcrl
dec
jle
push
scas
test
add
xor
fdivrl
fldpi
ss
push
fwait
or
shrl
push
test
pop
or
sub
or
xor
mov
and
xchg
pop
mov
lods
push
push
stc
mov
mov
outsb
dec
push
adc
jl
je
std
mov
and
jp
dec
data16
repnz
fcomi
xor
iret
sbb
stc
ljmp
lds
xorl
ss
dec
nop
pop
pushf
xor
mov
pop
jno
js
and
into
pusha
pop
push
jnp
xchg
negb
jbe
inc
out
dec
scas
and
jg
mov
xor
or
push
xchg
xchg
xlat
xchg
jp
popf
jp
mov
stos
cmc
mov
push
cld
sbb
xchg
inc
cmp
and
cmp
scas
xor
add
int3
mov
inc
fwait
add
ja
inc
shlb
iret
iretw
push
rol
cmpsb
lods
cmpsb
stc
sub
inc
loopne
pop
sti
push
lret
scas
mov
popa
lock
push
sbb
fs
mov
sbb
xor
adc
jns
aam
fdivrl
data16
std
aas
jnp
shrl
pop
aas
clc
mov
sahf
fidivrs
push
fbstp
outsb
jb
outsl
cltd
xchg
sbb
sahf
push
add
mov
jecxz
rcll
sbb
lods
inc
cld
lcall
shlb
xor
icebp
addr16
jne
test
dec
push
lahf
mov
in
push
add
or
lock
mov
js
jle
pusha
adc
mov
or
mov
or
sbb
leave
push
cmp
pop
mov
mov
xchg
test
mov
cs
subb
fs
fildl
push
pop
push
pop
sub
imul
fnstcw
test
movsl
mov
jmp
dec
insb
mov
out
sahf
add
cwtl
inc
mov
rcr
lahf
sub
sbb
dec
into
mov
or
cmc
pushf
dec
add
ljmp
les
dec
add
test
xchg
dec
loope
jge
sarl
out
pusha
imul
or
push
ss
enter
mov
xchg
sub
mov
mov
mov
add
adcb
cmp
jle
jne
movsb
push
mov
inc
mov
je
rolb
lcall
cli
cmp
das
stos
sar
jg
mov
cltd
shlb
in
sub
pop
mov
jns
cwtl
out
mov
xor
stc
jo
imul
clc
and
add
or
mov
mov
outsb
dec
adc
xchg
cmp
pop
xchg
fnsave
shll
sub
aas
int3
and
fs
lahf
outsb
fimull
sub
xlat
mov
adcl
imull
mov
mov
lahf
les
fldenv
and
cmc
ret
and
ljmp
or
insb
mov
sbb
inc
or
popf
jp
add
sbb
in
mov
in
pop
cld
jle
mov
add
nop
jmp
inc
adc
stos
push
sub
sbb
mov
dec
adc
in
inc
lahf
mov
mov
mov
jp
lock
sub
pop
push
and
sbb
dec
sbb
cvtdq2ps
les
and
int3
sub
jecxz
int
add
pop
add
aam
stos
mov
in
fists
mov
ds
pop
sahf
das
ds
push
scas
mov
dec
imul
mov
mov
cmpsl
lods
data16
mov
jmp
jnp
clc
arpl
mov
jbe
adc
sbb
lods
pop
sbb
outsb
test
out
xorb
or
or
mov
pminub
gs
cmp
lods
jge
inc
sbb
imul
xor
sub
lods
cli
sbb
inc
lahf
sbb
jo
mov
lcall
mov
pop
shrb
adc
jp
xor
lods
xlat
ja
ds
jo
sub
movl
and
adc
fstps
jno
xor
cmp
push
fnstsw
pcmpeqb
imul
repz
push
std
jno
icebp
add
lea
cmc
sub
fsubr
adc
pop
jmp
mov
dec
test
pop
test
mov
ds
subb
test
sub
xchg
adc
in
repz
push
mov
mov
test
jno
inc
repnz
pop
sbb
test
or
outsb
mov
das
es
dec
and
mov
jge
mov
adc
and
jmp
repz
fwait
mov
push
adc
into
push
cmp
out
lcall
jle
outsl
cmp
dec
xor
xchg
insb
inc
push
stos
loopne
sub
out
lret
mov
push
loop
push
aad
out
or
data16
stos
mov
cmp
les
or
lods
flds
pop
or
dec
lods
push
frstor
aaa
std
clc
in
repz
dec
in
adc
lds
fisubs
add
dec
xlat
push
mov
dec
icebp
bound
es
subl
popa
in
pushf
lcall
mov
outsl
es
inc
pop
or
xchg
adc
hlt
out
cmp
repz
pop
movsb
xchg
xchg
and
cmp
loop
notl
dec
test
cld
sti
pop
fadds
adc
loopne
stos
jge
jle,pt
int3
je
cld
jne
and
dec
jg
lahf
icebp
add
repnz
mov
leave
cmp
lock
aam
cmpsb
mov
mov
xor
mov
lds
and
out
cs
mov
seta
xchg
mov
sbb
adc
sbb
cmp
add
faddl
add
xlat
sahf
pop
mov
call
pop
xcrypt-cfb
cmpsl
movsb
sbb
push
and
ret
inc
in
in
dec
push
in
mov
aam
ror
mov
inc
leave
xchg
mov
les
cmp
pop
jbe
idivl
pop
mov
cmp
mov
int
pusha
cmp
and
rep
shr
mov
adc
mov
ja
pop
add
clc
mov
or
iret
jbe
ss
push
loope
jle
jo
dec
jne
sbb
add
mov
arpl
popf
mov
push
es
pop
pop
pop
dec
popa
and
add
ror
gs
lods
mov
mov
push
out
push
std
adc
adc
xlat
ds
sub
sub
and
cmp
xlat
imul
jb
add
and
test
sti
lods
push
push
test
sub
icebp
notl
sub
das
fldcw
fs
adc
stc
and
cld
in
sbb
pop
pop
mov
jge
xchg
sub
pusha
shll
jg
ret
pop
sti
pop
test
mov
add
pop
cmp
dec
fsubl
arpl
sbb
pusha
xchg
fsubrs
mov
jae
xchg
pop
ret
sub
gs
iret
dec
pop
mov
sub
pop
dec
lahf
pop
jp
jecxz
and
lds
xor
inc
lock
inc
cltd
add
and
int3
dec
jle
int3
enter
pusha
sbb
out
insb
xchg
inc
imul
inc
stos
inc
dec
push
in
mov
pop
cwtl
push
lea
fs
aad
cmp
pop
scas
cmp
in
pop
jns
jo
jl
pushf
dec
rcll
sar
outsb
or
dec
out
mov
xchg
idivl
mov
js
aam
out
mov
or
test
mov
stc
test
jns
sub
or
rorl
jle
xor
sub
addb
mov
fldl
es
addr16
pop
out
fsts
std
enter
add
push
cltd
cli
dec
out
jbe
scas
and
pop
pop
jo
push
and
sbb
add
xchg
adc
into
js
mov
insl
pop
add
push
ret
es
push
pmulhw
cmp
shll
mov
jne
out
sbb
test
xor
add
xchg
jns
xor
sahf
test
out
sbb
push
iret
push
imul
fisttps
in
mov
enter
dec
pop
fisubrs
aad
incl
pop
sbb
aad
dec
mov
cmp
int3
mov
shr
imul
mov
push
lea
imul
out
fucomi
lock
push
xchg
arpl
ret
mov
test
ja
insb
inc
dec
out
or
movsl
or
xor
sub
jl
iret
dec
lods
lret
xchg
sahf
mov
inc
jge
stc
cmp
adc
jae
mov
mov
mov
and
out
je
repnz
xor
repnz
sbb
lret
fistpl
xor
pop
push
sub
push
jb
mov
test
cmp
mov
cltd
mov
imul
dec
jb
and
out
cmc
jae
lahf
jno
dec
movsl
push
pusha
mov
repz
ret
jle
and
pop
cmp
fisttps
icebp
dec
test
mov
mov
fiadds
loope
or
fldcw
push
rcr
jg
aad
cwtl
cltd
pop
das
mov
jb
xchg
pushf
jbe
pop
popf
scas
xor
cmp
movsl
adc
push
pop
scas
int
jb
inc
inc
sti
test
mov
daa
jle
inc
mov
mov
push
pop
lcall
xchg
int3
in
mov
ja
push
adc
clc
mov
aad
inc
adc
test
push
nop
sahf
xchg
std
and
push
dec
adc
repnz
testb
mov
mov
adc
sbb
aaa
add
hlt
fstl
mov
mov
loop
imul
aaa
stc
pop
lods
mov
addr16
xchg
and
mov
aad
cmp
dec
sti
fwait
es
and
test
int3
xor
repnz
sub
cmp
dec
lea
pop
inc
fs
enter
outsb
push
fisubrl
cmp
cmp
adcb
in
jl
push
sahf
leave
xchg
xor
add
jae
pop
mov
inc
sti
mov
and
xchg
xchg
jecxz
lahf
movb
push
cwtl
test
lret
dec
or
outsb
lock
imul
and
add
sbb
jl
pop
lods
adc
ljmp
mov
das
ffreep
mov
lret
xor
and
outsb
shrl
shll
mov
jmp
inc
movl
add
jno
and
xchg
adcb
pop
fnstenv
pop
jnp
cmp
sbb
es
sub
sub
jmp
int
lods
fcom
mov
jno
dec
mov
push
inc
xor
or
push
call
cmc
mov
cmp
jl
out
enter
insl
and
testl
fwait
jecxz
loopew
cmpsb
clc
jne
inc
pop
enter
fs
out
ret
pop
mov
inc
imul
je
popa
pop
leave
fsubs
int3
lret
jl
jnp
pop
bound
sbb
sub
and
cmpl
cltd
cld
sar
mov
orl
mov
jg
add
inc
jo
xchg
mov
leave
std
ret
xor
mov
pop
xchg
lods
push
popa
inc
ss
sti
repnz
pop
ret
jmp
pop
fnstsw
ret
inc
adc
hlt
dec
jb
mov
jg
add
push
pusha
jp
or
or
dec
shrl
fs
push
iret
dec
pop
jb
je
insl
mov
out
and
ss
add
cmc
push
jmp
test
cmp
xchg
adc
test
mov
bound
add
sbb
mov
mov
in
xchg
push
sbb
mov
in
loopne
sub
data16
outsb
add
stos
inc
inc
icebp
enter
push
adc
mov
scas
test
test
mov
push
mov
add
xchg
into
lea
push
sbb
popl
jl
out
inc
pop
adc
in
sbb
outsb
repz
push
jb
and
dec
push
jle
mov
outsl
loop
into
push
mov
or
inc
jl
dec
lods
fs
mov
adcb
xchg
or
or
insl
ret
or
cltd
jmp
cmpb
sub
hlt
jbe
stc
call
mov
jno
jp
ss
movl
mov
fcom
xchg
test
inc
arpl
cmp
xor
pushf
test
outsl
dec
dec
jmp
adc
push
ds
fwait
aad
or
rcll
mov
lahf
xchg
sub
mov
dec
jp
pop
sub
add
nop
mov
fistl
mov
jle
lea
loope
pusha
out
mov
or
inc
testl
add
rclb
mov
movsb
in
add
repz
or
inc
xchg
add
cmc
pop
mov
sbb
or
fadd
repnz
pop
in
adc
fsubr
cmp
adc
out
cs
push
imul
inc
into
mov
fdivr
add
xchg
lret
fidivs
loopne
or
and
and
and
andb
jbe
lock
push
xchg
mov
mov
gs
mov
sub
imulb
jge
dec
xchg
jb
mov
jno
xor
iret
push
push
js
inc
inc
sub
shrl
xor
in
mov
xor
pop
sbb
imul
clc
jb
xchg
stc
mov
inc
dec
adcl
sbb
and
jle
js
add
addb
cwtl
inc
pop
mov
inc
push
fidivl
push
or
xchg
mov
clc
fdivrs
lock
sahf
out
and
stos
int3
push
mov
jg
inc
nop
push
fdiv
push
lahf
mov
rolb
sub
loope
jae
fs
push
bound
sub
xor
mov
int3
push
jno
cmpsb
and
adc
sub
and
daa
jo
inc
out
pop
pop
jg
es
lcall
fsub
xor
add
xor
and
push
out
add
sbb
mov
cmp
jae
cmp
mov
sub
mov
ret
sbb
imul
mov
pop
movl
movsb
push
sbb
out
in
xchg
pop
sbb
add
pop
fnsave
push
or
shrb
in
repnz
outsl
stos
into
rcll
push
test
fxch
sti
adc
cmp
jge
adc
fs
or
iret
sub
loop
test
shr
adc
aam
iret
pop
adc
adc
lds
pop
aaa
or
xlat
mov
push
aad
push
push
pop
mov
mov
push
enter
and
dec
cmp
push
decl
or
and
push
mov
adc
jle
push
fcomps
dec
push
and
dec
xor
adc
pop
ds
std
sbb
jnp
sbb
outsl
test
pop
and
loopne
lahf
loopne
inc
sbb
xchg
mov
repz
push
lods
jge
sbb
in
mov
stos
inc
scas
ss
in
pop
xchg
and
cs
xor
cmp
or
mov
jbe
not
mov
js
out
aam
dec
xchg
fcompp
stos
jbe
aaa
push
into
repnz
push
xor
roll
inc
xchg
popf
rcrb
imul
dec
dec
dec
insl
sbb
sub
lret
xor
das
loope
out
icebp
add
adc
push
jle
rolb
cmp
lods
popa
adc
repz
pushf
or
add
push
and
clc
fmull
out
out
bnd
movsb
in
jge
jge
test
push
and
mov
jge
gs
mov
xchg
cld
xchg
lea
aaa
movsl
cmp
ljmp
lds
and
push
xchg
inc
fnstenv
pop
testb
mov
es
mov
lods
call
or
cld
mov
out
sub
enter
xor
imul
inc
mov
sarl
dec
imul
loop
push
movsb
push
popa
stc
leave
dec
mov
ja
rorb
pop
clc
in
movsb
xor
clc
pusha
pop
mov
cmc
lret
xor
call
clc
lcall
or
xchg
xchg
out
inc
fs
mov
pop
jne
fwait
sub
aam
in
out
sbb
add
xor
data16
mov
and
jl
xchg
mov
xor
int3
shr
stc
imul
or
fisubl
add
stos
pop
push
lds
cmpsl
xor
mov
andb
mov
xchg
jmp
inc
and
and
scas
jl
push
gs
leave
mov
xchg
xchg
scas
or
into
cmc
mov
cltd
mull
into
or
mov
leave
pop
dec
push
jno
cmp
repnz
sbb
stos
lds
sti
aaa
pop
sub
fbld
movsb
mov
mov
dec
rdpmc
add
iret
jns
push
scas
sbb
ficoml
inc
sahf
jbe
jbe
add
sbb
sbb
shrl
insl
sub
jne
sbb
adc
add
mov
and
roll
dec
ljmp
lahf
cmp
out
es
cs
and
sub
xlat
adc
loope
les
rol
in
dec
pop
dec
idivb
and
cwtl
int3
dec
inc
xchg
pop
pop
cmp
xchg
mov
fmuls
or
mov
xor
in
or
mov
mov
dec
cli
mov
sbbb
clc
adc
mov
add
jle
cltd
mov
dec
mov
dec
ljmp
pop
rorb
cwtl
aad
and
cmpsl
push
cmp
jle
lea
das
jns
sbb
fdivs
cs
insb
sbb
cli
xor
fidivrl
rorb
inc
insb
pop
aaa
stos
sub
fisubrl
dec
iret
repnz
ja
jae
iret
mov
push
mov
leave
pop
push
mov
in
add
push
sub
aad
inc
pop
loop
lock
dec
lret
cmp
mov
dec
mov
mov
loope
sbb
pop
pop
mov
push
push
aad
mov
push
pop
add
jge
sub
outsb
test
popa
mov
rol
test
sub
int
dec
sub
or
pop
jmp
aam
loopne
pop
scas
rorl
and
add
cwtl
cmp
or
adc
dec
pop
adc
aad
arpl
jnp
cld
rorb
lret
xchg
xchg
mov
aad
mov
lods
sbb
add
adc
lds
imul
mov
scas
ret
mov
mov
bound
repz
mov
adc
mov
out
mov
popf
xor
les
lea
hlt
ficomps
mov
inc
cmp
lret
sbb
fdivl
inc
jecxz
jge,pn
jle
enter
iret
add
cmp
scas
rorb
loop
out
jl
push
mov
adc
add
dec
adc
mov
pop
in
jge
lods
and
bndldx
loope
and
mov
add
mov
out
xor
push
ss
add
pop
movb
in
out
je
sub
and
in
cli
adcb
jae
mov
daa
mov
sub
cmp
sahf
mov
xor
pusha
sub
int3
test
lock
pop
mov
mov
pop
cmp
adc
xor
mov
cli
cmpl
lahf
mov
sub
push
lea
inc
movsl
sub
mov
mov
pop
scas
test
in
add
add
scas
lods
add
add
les
rclb
xchg
dec
xchg
mov
shlb
push
fsubrl
sbb
shlb
add
xchg
sub
mov
adc
mov
cli
out
sub
scas
jg
add
xchg
cmpsb
das
cmc
mov
cmp
dec
int
mov
movsb
add
jo
bound
adc
xchg
lret
lods
cmp
call
sub
push
leave
and
rclb
push
jnp
mov
out
jae
inc
pop
jg
fistps
pop
or
cld
cmp
dec
cwtl
das
push
adc
insb
scas
cmp
notb
paddsb
fldl
bound
movsl
pop
mov
jae
lcall
cmpsb
pop
or
roll
xchg
clc
loop
dec
inc
enter
mov
push
mov
or
push
mov
mov
ljmp
addr16
rorb
pushf
js
add
icebp
movsl
hlt
jno
sub
lea
cmpsb
cmpsb
mov
push
filds
sbb
scas
test
sub
stos
jno
arpl
sbb
ljmp
push
inc
push
inc
in
sub
lea
loopne
xchg
cli
rolb
in
adc
icebp
inc
repnz
mov
ret
dec
mov
popa
adc
mov
cld
mov
xor
inc
jb
and
sbb
inc
mov
dec
jo
sarb
jo
ror
or
jge
add
ljmp
sbb
adc
ret
push
mov
stc
scas
adc
mov
divb
addl
mov
fsubs
icebp
or
fidivrl
repz
shrl
and
push
jno
mov
jae
adc
out
mov
rclb
bound
mov
shlb
daa
pop
push
aad
fldcw
ret
cmp
mov
cs
xor
js
fidivl
nop
mov
and
addb
mov
cmp
dec
add
imul
jle
add
xchg
sbb
repz
push
sub
lcall
mov
cmp
sbb
mov
push
adc
sbb
jmp
lret
dec
mov
lock
aad
mov
push
mov
sbb
cwtl
mov
rcll
lret
fxch
pop
or
std
sbb
dec
scas
imul
icebp
test
or
sub
and
jo
sub
inc
rcll
rol
sbb
mov
and
jmp
das
jae
cmpsl
mov
jb
mov
and
jge
pop
jo
cmpb
and
stos
jg
sahf
loop
inc
jmp
faddp
fs
shll
lahf
stc
lret
jns
lahf
sbb
cmpsb
nop
icebp
sub
mov
lahf
push
mov
mov
fdivrs
in
mov
aas
jbe
fsincos
xchg
push
push
scas
and
sub
bound
pop
jle
enter
sbb
leave
jo
jl
push
or
loope
sub
insl
add
js
pop
fwait
iret
iret
cli
mov
test
popl
and
jge
push
sahf
pop
aam
repz
stos
repnz
inc
jmp
scas
xchg
cmp
sbb
roll
addr16
jns
mov
imul
dec
pop
lods
fwait
mov
scas
daa
mov
dec
push
and
popf
insb
cs
sbb
lahf
inc
push
xor
aaa
xchg
es
push
pushf
mov
adc
icebp
lahf
mov
in
ficompl
bts
shrl
xorb
fstpt
cmp
cltd
ret
mov
add
cld
pushf
mov
fistpll
clc
jecxz
or
clc
sbb
fstpt
mov
xorb
pop
or
xor
andl
pushf
mov
inc
fcoml
mov
bound
adc
dec
inc
jo
mov
scas
mov
mov
notl
push
add
adc
lahf
inc
movups
add
jne
rclb
pusha
push
mov
xchg
jmp
xchg
cmp
cli
jne
or
xchg
loope
aad
cmp
push
aas
iret
mov
pop
cli
fldenv
push
testb
dec
mov
xchg
setnp
test
sbb
xor
roll
jg
push
aam
push
mov
pop
ds
test
mov
lcall
lods
imul
popa
mov
lret
sbb
ljmp
cmpsb
lods
inc
dec
push
mov
out
popf
test
jnp
shl
jp
out
outsb
es
sbbb
add
je
bound
mov
xchg
sub
mov
add
into
in
loope
jne
mov
gs
sub
data16
cli
sbb
push
push
or
pop
frstor
pushf
sahf
adc
pop
notl
int3
or
jne
xor
dec
out
push
or
test
call
daa
xor
in
and
stc
sbb
sbb
dec
mov
rolb
jae
rclb
pop
add
mov
lret
xor
out
jl
lret
loopne
mov
add
fisubl
jg
pop
mov
push
repnz
out
or
adc
scas
dec
or
or
clc
icebp
mov
cld
or
mov
add
adc
mov
jg
mov
aas
jb
xor
loope
inc
movsb
lock
push
mov
push
adc
inc
lock
or
addb
sbb
les
enter
sarl
adc
imul
stc
shlb
in
lods
add
jns
sub
pop
pop
xor
adc
out
ds
push
sub
dec
fcoml
les
mov
cmp
jge
roll
mov
fadd
in
fcoms
data16
mov
and
xchg
shll
das
mov
gs
adc
jge
mov
sbbb
dec
xchg
mov
decl
dec
mov
mov
jge
cmp
inc
pusha
fbstp
popf
lret
les
shll
flds
mov
xchg
and
push
or
addl
jno
ss
out
sbb
pop
rclb
jno
jmp
and
shrb
mov
stos
lahf
ret
lcall
jnp
mov
inc
inc
xlat
inc
arpl
mov
addr16
mov
add
sbb
stos
popf
into
add
fprem1
out
std
mov
sbb
nop
test
lea
mov
push
mov
xchg
push
adc
nop
xchg
int3
lret
push
sahf
into
call
icebp
sub
gs
pop
out
mov
les
aas
inc
cli
adc
hlt
into
pop
pop
or
and
pop
push
addr16
jo
loope
push
pushf
dec
xchg
mov
mov
cld
lock
andb
jno
jne
in
lret
idivl
adc
inc
mov
pop
dec
push
push
jnp
or
xchg
xchg
mov
inc
xchg
incl
push
push
adc
mov
je
icebp
xchg
rol
pop
shrb
add
loop
and
in
loope
mov
data16
sahf
jns
add
pop
sub
mov
aad
mov
jns
addr16
fnstsw
xorb
rorl
mov
adc
pop
popa
in
insl
mov
dec
adc
imul
cmp
xlat
inc
push
sub
pop
pusha
popf
jns
ds
imul
das
push
cmp
cmp
mov
mov
add
inc
xchg
add
or
int3
arpl
leave
dec
sub
fcmovnb
or
mov
xor
icebp
mov
fucom
ret
lret
jl
mov
and
test
adc
or
mov
mov
fisubrl
xor
inc
mov
or
jg
push
clc
test
push
pop
lret
sub
sbbl
sub
jle
test
sub
mov
jnp
jo
push
or
cltd
mov
ficoml
int
mov
xchg
mov
mov
xor
lods
addl
push
pop
push
mov
dec
pop
ret
sbb
pop
test
mov
int3
cltd
xlat
cwtl
sbb
dec
aaa
sbb
repz
and
jo
test
push
frstor
mov
sub
fdiv
xchg
and
fidivrl
or
lret
mov
mov
leave
mov
mov
jb
scas
xor
repnz
insl
in
jl
mov
sbb
ret
mov
gs
lock
fucomi
inc
or
mov
mov
mov
xchg
jno
call
sbbb
icebp
adc
into
add
or
in
xlat
insb
test
and
xchg
sbb
sub
mov
jmp
je
sub
into
aam
fcomip
rcrl
je
outsl
mov
and
js
xor
daa
sbb
jne
fisubrl
ss
fisttpl
xchg
jg
repz
push
sbb
and
xchg
mov
or
inc
adc
mov
sub
leave
ja
aaa
hlt
mov
push
xor
shll
sbb
mov
fistpl
mov
jno
push
mov
int3
mov
xlat
xchg
adc
rcrb
push
in
add
cs
sbb
pop
jmp
mov
insl
lods
arpl
scas
cld
xchg
sbb
dec
insl
es
mov
aam
aam
mov
cmpsb
jl
dec
fs
pop
mov
inc
xchg
add
cmp
jnp
pop
add
insl
dec
shrl
push
inc
add
pop
mov
sbb
mov
pop
fldcw
aaa
mov
repnz
and
inc
cmp
inc
adc
lcall
jno
flds
daa
pop
cld
loope
ja
jne
rol
pop
dec
popf
mov
daa
cmp
and
mov
popa
jo
jl
mov
clc
out
ret
sub
int
jg
rorb
pop
jnp
adc
insl
cld
and
add
hlt
adc
push
cmpsl
or
adcl
adcl
xor
lahf
pop
inc
jp
adc
xchg
mov
mov
in
je
repnz
dec
cmp
add
leave
inc
jns
or
xchg
cmpsl
xchg
loopne
daa
cmpsl
cmpsb
rcrb
sbb
sub
pop
stos
lock
mov
jp
add
dec
mov
mov
jb
cmp
outsl
jnp
sbb
inc
sahf
add
roll
jg
out
sbb
push
adc
push
xchg
cmpsl
lret
dec
mov
mov
mov
add
enter
xor
imul
in
jp
jmp
outsl
fstpt
stos
fwait
aad
andb
or
shll
ss
cmpl
gs
inc
sub
movl
mov
je
insl
loopne
nop
rcrb
jns
mov
cld
sub
data16
incb
ret
enter
or
int
mov
sahf
xlat
cmp
xchg
mov
shrl
mov
sbb
hlt
cwtl
mov
incl
adc
cmp
das
rcl
popf
mov
test
lret
push
movsl
das
loope
pusha
push
mov
js
ds
stos
mov
and
iret
ljmp
pop
pushf
inc
insl
dec
pusha
pop
ljmp
jl
icebp
xchg
repnz
xchg
imul
push
inc
loopne
sub
stos
lcall
mov
fisubrs
pop
ret
ljmp
mov
cmp
jge
mov
popl
fdiv
fnstcw
dec
xlat
in
pusha
in
sbb
ficompl
pop
stos
pop
dec
cmp
sub
jmp
out
stos
ret
pushf
xor
iret
sbb
cmp
cmpsl
outsb
fs
xchg
mov
dec
jg
jae
cmpsl
nop
lcall
pop
sbb
sbbb
pushf
rcr
xchg
lea
sbb
mull
xchg
mov
sub
jecxz
lds
and
pop
sar
fs
cmp
lds
push
in
and
jb
and
out
xchg
or
jmp
int
scas
add
sbb
out
dec
pushf
popa
or
inc
mov
and
mov
sbb
cltd
mov
jae
mov
in
sub
mov
in
push
fstps
aas
mov
mov
mov
and
das
jle
or
cmpb
int3
or
je
es
xchg
cmp
mov
es
adc
jmp
sub
xchg
adc
xor
int3
mov
adc
push
adc
mov
add
mov
movzwl
pusha
and
mov
xchg
xchg
xchg
cmc
xchg
jnp
push
push
shl
or
xchg
leave
mov
or
test
std
aam
or
sbb
pusha
popf
push
or
adc
into
pop
lret
jmp
xor
cli
inc
inc
jecxz
and
add
jle
sub
pop
outsb
rclb
pusha
cwtl
dec
xor
jg
xor
xor
gs
ljmp
adc
mov
sarl
leave
pop
sahf
jle
and
mov
pop
sarb
das
in
xor
jne
jmp
test
sub
out
sub
jp
push
es
push
std
mov
add
sti
ds
mov
insb
inc
and
xchg
lea
sbb
test
subl
mov
popf
inc
mov
mov
jns
pop
mov
xchg
es
in
jl
in
pop
jns
cmpb
sub
or
scas
lahf
pop
mov
xchg
and
icebp
jb
jmp
addl
icebp
not
mov
cmpsb
subb
push
cmpsl
inc
dec
xor
repz
jb
xchg
or
mov
dec
or
add
dec
cs
or
outsb
lock
push
sbb
sub
test
sbb
or
fcomp
sub
push
arpl
xchg
in
not
pop
and
out
mov
sbb
xchg
out
lods
mov
rcll
xchg
dec
icebp
stos
cmp
mov
lods
daa
mov
pop
jae
cmp
and
shll
jge
cmpsl
pushf
pop
sahf
dec
mov
mov
mov
fcoml
push
pusha
pop
aam
es
lret
jae
xor
jmp
jmp
jae
push
scas
inc
fisubrl
inc
xchg
pop
or
sarl
nop
std
cmp
in
cmovge
xorb
inc
ljmp
xchg
shll
movd
aaa
rorl
clc
mov
mov
outsb
cmp
cmp
icebp
loope
xor
and
lea
aad
test
jne
arpl
dec
mov
adc
arpl
pop
mov
loopne
dec
movsb
dec
icebp
arpl
mov
stos
movsl
xchg
xchg
mov
shll
dec
mov
xor
adc
leave
inc
add
fprem1
xorl
jne
and
leave
dec
or
or
pop
dec
shrb
fisubs
out
sbb
inc
pop
or
popf
testb
minps
xchg
add
xor
mov
repnz
mov
mov
lea
mov
gs
cmp
cli
push
nop
inc
xor
rcll
jmp
das
sub
mull
iret
test
pop
xchg
xor
dec
scas
mov
aad
test
mov
push
out
push
or
enter
jbe
lret
mov
adc
int
in
mov
or
inc
xor
and
ret
xor
fs
popf
xchg
loope
push
rcl
frstor
adc
fisubl
and
and
or
out
mov
flds
rclb
mov
sub
inc
stos
loop
mov
add
aad
aas
xor
mov
adc
call
rclb
and
in
int
sub
push
fisubl
lock
inc
bound
lret
push
mov
lea
xor
mov
stc
fcompl
mov
inc
out
mov
rcll
cmpsl
xchg
pop
into
pop
out
pop
std
stos
mov
pop
fcmovnb
repz
sbb
leave
scas
mov
lock
push
and
jne
out
or
mov
popf
loopne
int3
cmp
out
mov
mov
xchg
mov
jp
dec
mov
add
mov
sub
pop
lahf
or
clc
fimull
inc
dec
je
repz
filds
into
lcall
push
cs
ljmp
insb
scas
mov
mov
sbb
push
and
lcall
sbb
cltd
xchg
push
jle
mov
mov
js
icebp
sbb
leave
xchg
in
cmp
adc
in
xor
rcll
push
ss
mov
sub
dec
stc
jle
mov
and
hlt
negb
xchg
lret
jb
shl
adc
sbb
add
andb
and
push
outsl
jbe
mov
dec
add
ret
hlt
lea
cltd
mov
dec
or
inc
rcll
inc
jmp
inc
dec
jno
lods
lahf
fnstsw
or
fsubrl
cmpl
mov
xchg
mov
jno
or
jns
cmp
jge
lret
fs
cmpl
aam
repz
mov
movb
jge
adc
pop
or
inc
fsubl
mov
jmp
mov
cmpsl
dec
dec
stos
mov
mov
lahf
into
stc
sbbb
ljmp
popa
nop
xor
fcoms
in
cmp
ficompl
movsb
and
sub
rcrl
ja
pop
fmull
sub
enter
add
sarl
ss
and
pusha
imul
add
cs
cmp
aam
and
sub
fnstcw
push
push
push
and
aaa
dec
lcall
call
movsl
int
lods
jnp
std
pop
sbb
xchg
push
jl
mov
mov
mov
adc
and
scas
inc
dec
or
pop
inc
xlat
mov
shll
cld
stos
fwait
pop
add
into
jne
mov
fidivs
cmpsb
dec
pop
jno
adc
xor
xor
mov
dec
xor
sub
cli
xchg
mov
dec
mov
jnp
sub
xorl
mov
lcall
jb
add
daa
outsl
ficomps
cmpsb
scas
je
push
mov
add
dec
lret
pop
and
dec
adc
in
clc
test
xchg
mov
dec
mov
lcall
mov
mov
scas
pop
leave
pop
sahf
leave
inc
inc
out
cmp
into
inc
ss
pop
xor
cmp
add
sub
fbld
pushf
imul
fistps
nop
mov
xor
add
jbe
aas
js
inc
dec
mov
sub
push
cmpsb
imul
jmp
fidivl
add
jb
mov
aaa
outsl
ja
bound
jge
pop
addl
ss
cltd
jg
loopne
mov
cs
jne
xor
out
loope
pop
mov
adc
dec
fwait
cmc
adcb
fists
add
inc
adc
ljmp
xchg
insl
sbb
out
sahf
add
push
fisubs
test
out
clc
dec
push
mov
ljmp
mov
lock
or
cmpsb
push
into
pop
add
push
je
mov
aas
gs
daa
je
xchg
mov
xlat
mov
ds
pop
stos
mov
das
adc
inc
xor
mov
scas
sub
xor
dec
hlt
je
pop
adc
nop
and
scas
testb
or
addb
mov
jnp
xor
push
mov
cwtl
fldt
inc
mov
aam
jne
fidivrs
and
jecxz
lds
xor
aad
add
xor
out
mov
testb
data16
ret
rcr
push
jmp
in
mov
lea
sbb
sahf
pop
xor
sub
sbb
hlt
shr
or
pusha
iret
loopne
mov
add
fdivs
jb
add
loop
pop
insl
xchg
xor
xor
mov
sub
insl
jge
mov
mov
fisubs
adc
push
cmp
push
aam
roll
sub
imul
dec
rcrb
adc
sub
fnsave
pop
mov
jmp
popf
mull
mov
cmp
add
sti
pop
ljmp
xchg
mov
cmp
enter
adc
sub
dec
add
jae
call
jg,pt
jnp
push
inc
xor
push
ds
shl
lea
jns
jecxz
in
mov
stos
sub
pushf
jns
xchg
xchg
inc
mov
lret
mov
insl
mov
xchg
cmp
movsb
fsubr
mov
sbb
subl
fistl
fiadds
pop
pop
mov
pop
stos
add
mov
mov
push
enter
in
aas
mov
sbb
jle
stc
mov
fisubrl
out
pop
and
xor
jae
mov
mov
aad
push
gs
cmpsl
loop
imul
sbb
lcall
xor
rclb
fs
jecxz
mov
lods
inc
movsl
int
call
mov
daa
daa
sub
in
ret
mov
and
sbb
cltd
js
aam
mov
movl
push
mov
mov
mov
imul
mov
add
xor
push
pop
dec
lcall
mov
out
pop
mov
xchg
push
adc
sub
xchg
cmp
sbb
pop
mov
lock
adc
ficoms
sbb
jo
add
mov
mov
cmp
or
hlt
sub
fwait
ss
sub
insl
xchg
jns
mov
fcmovne
dec
jae
repz
leave
or
nop
jp
pop
inc
add
lods
mov
add
addr16
mov
aam
jmp
fnstsw
sbb
cmc
rclb
mov
inc
lock
adc
cmc
gs
pop
pop
int
jnp
sbbl
dec
pop
rclb
dec
test
test
and
in
xchg
inc
pop
jb
in
add
icebp
dec
cmp
dec
jg
mov
fadd
jnp
shlb
fwait
push
jb
adc
lods
sub
fdivrs
pop
fiaddl
pop
and
inc
ret
aad
shlb
jg
in
cmp
test
pop
mov
nop
insb
imul
sbb
or
insb
aam
pop
sahf
dec
or
das
pop
cs
or
jl
loope
pop
testb
cltd
and
jns
repnz
cltd
rclb
jno
mov
pop
les
dec
in
mov
adc
pop
sub
mov
add
out
inc
outsl
mov
adc
inc
in
das
pop
jbe
scas
and
and
daa
addr16
mov
hlt
push
stos
or
lcall
inc
ror
adcl
jns
lods
inc
cwtl
jg
push
mov
sub
mov
aaa
popf
sub
xor
dec
lret
mov
enter
cmp
or
fstpt
rcrl
sub
xor
add
xchg
xchg
out
insl
sbb
adc
mov
pop
mov
int3
xchg
pusha
cmp
pop
andb
mov
sbb
xchg
sbb
jle
dec
and
lret
aad
insb
outsb
aas
sbb
xchg
cmpsl
mov
and
push
cmpsl
lcall
push
mov
or
push
push
jo
or
int
jg
add
xchg
mov
movsl
xor
pop
mov
addr16
in
mov
pop
aam
loopne
arpl
fstpt
jecxz
mov
mov
pop
pop
clc
jle
add
jle
insl
rorb
adc
push
and
pop
mov
sbb
pop
loope,pt
fcmovu
bound
xor
clc
movsl
lret
adc
mul
pop
add
fnstcw
push
jmp
or
jmp
cwtl
inc
lds
and
add
cmp
dec
inc
jno
out
out
inc
jp
mov
and
call
push
data16
fwait
dec
insb
notb
xchg
sbb
mov
rcll
jmp
push
adc
inc
push
cmpsl
mov
push
push
xor
mov
int
aad
xor
out
cmp
mov
in
popf
mov
jecxz
adc
lds
pusha
mov
orb
and
pop
shll
sub
lock
mov
lahf
jge
testb
dec
or
insb
adc
cmp
inc
mov
lcall
fcmovnbe
mov
fcoms
ljmp
xchg
es
movsb
pop
call
mov
inc
sbb
loope,pn
add
mov
and
push
mov
sti
xor
sbb
les
sub
inc
mov
adc
popa
add
shll
dec
cmpb
enter
andb
cmp
and
cmp
mov
push
inc
push
dec
push
std
pop
ja
sbb
lcall
dec
mov
adc
sub
nop
bound
adc
sbb
imul
adc
and
and
cltd
imul
adc
jl
push
sbb
adc
mov
xchg
sub
fisttps
and
xchg
ljmp
fisttpl
fwait
div
div
jp
and
fisubl
daa
push
mov
popf
jmp
lods
mov
insl
xchg
xor
ja
rcrb
imul
mov
lcall
cld
push
fmul
jl
xchg
push
lock
jns
nop
cli
add
inc
xor
dec
outsb
xor
out
jo
or
clc
jmp
popl
dec
adc
arpl
fimull
add
jns
outsl
mov
or
push
and
insb
add
jecxz
inc
mov
or
push
cmpsl
shlb
and
xchg
andb
icebp
ja
popa
jge
jb
cmp
iret
pop
fistpl
pop
push
dec
push
ljmp
xlat
dec
dec
xlat
mov
push
xchg
scas
lods
movsb
inc
jae
jns
aad
jge
xchg
inc
cld
idivl
stos
jb
adc
push
adc
mov
pop
cmp
shlb
and
push
addl
jne
int3
and
pop
stc
out
cmp
or
fildll
jno
fdivrl
insb
stc
push
mov
ja
xlat
push
pop
xor
mov
sbb
mov
jbe
sbb
cmp
push
rcll
insb
mov
addr16
outsb
sub
adc
xchg
cmp
int3
outsl
call
aam
out
push
test
adc
inc
pop
std
outsl
frstor
sbb
fldcw
jae
enter
cmp
ret
into
test
outsl
cwtl
out
mov
mov
aad
push
or
push
inc
lock
add
insb
sub
in
fidivrl
push
sub
mov
ja
inc
pop
jge
and
lcall
cmp
fistps
pop
push
lea
lcall
xlat
in
pusha
fildl
filds
stc
or
jge
mov
sbb
xchg
sbb
jmp
pusha
mov
addr16
pop
fsubrl
cltd
and
add
and
dec
ficompl
pop
and
mov
xor
or
je
in
pop
push
mov
scas
mov
fisttps
dec
add
fs
enter
sti
faddl
std
imul
mov
xor
xchg
outsl
jg
mov
cmpl
push
lds
push
sbb
jle
add
rcl
mov
neg
out
lcall
push
cmp
push
mov
pop
xchg
test
test
sub
cwtl
adc
and
sub
inc
das
sbb
pop
rclb
adc
leave
xor
ret
shll
pop
mov
dec
imul
push
shlb
and
inc
mov
nop
dec
pushf
pushf
xor
mov
cmp
enter
aaa
inc
push
pusha
shrb
ret
pop
cltd
aad
jbe
inc
orb
or
das
lret
xlat
add
scas
cmpsb
mov
push
pop
inc
jns
mov
out
xchg
jnp
out
testb
sub
lea
sub
in
incl
scas
cmp
sub
sar
and
pop
push
mov
call
es
push
push
add
push
cmp
stos
pop
out
and
and
insl
call
sbb
mov
add
bound
sar
xor
aad
popf
cmp
ja
cmpl
and
sbb
inc
push
mov
sbb
mov
inc
sub
nop
movsb
jo
jg
cmp
das
and
mov
movsb
hlt
mov
jp
sbb
cmp
sahf
lock
divl
test
push
add
out
lcall
cli
adc
mov
das
inc
stos
jecxz
sub
das
adc
arpl
arpl
xor
xchg
pusha
repnz
adcb
inc
dec
es
iret
and
mov
adc
mov
cmpb
mov
test
and
xchg
daa
pusha
push
mov
ja
dec
xchg
xchg
xchg
mov
shll
mov
mov
into
fdivrl
fs
fsubr
rcrl
das
adc
loope
cmp
sarl
jmp
aaa
inc
adc
cmp
dec
dec
sub
inc
divb
xchg
mov
ja
push
sbb
in
subl
push
not
arpl
adc
popf
in
mov
mov
cmp
inc
xor
loopne
clc
mov
xchg
repz
sub
movsb
push
popa
mov
into
adc
insl
cmpsb
and
adc
add
insb
mov
xor
popa
cld
popf
push
into
sub
ds
jb
mov
jns
fisubs
clc
out
sbb
and
mov
mull
or
xor
loop
add
push
test
fdivr
mov
shll
fnstcw
in
cmpsb
test
jecxz
out
dec
leave
pop
insb
sbb
pop
xor
ss
mov
or
mov
sbb
add
int3
mov
dec
pop
subb
js
mov
adc
out
rcrl
xchg
lret
insl
fdivs
xchg
insl
cmp
pextrw
ss
add
cmp
pusha
add
xchg
add
insb
ret
pop
cs
fstps
ljmp
adc
repz
inc
fistl
add
mov
dec
push
sbb
data16
fs
in
fsubl
push
jns
dec
fnsave
mov
fnstcw
shll
rorl
rcr
mul
test
fs
stc
mov
pop
shrb
mov
test
or
ss
mov
out
popl
xlat
xlat
sbb
sahf
gs
mov
outsl
cmp
or
jnp
mov
out
sbb
or
adc
mov
mov
sahf
adc
and
and
loope
inc
leave
popf
imul
aad
inc
xchg
jge
pop
mov
mov
rolb
and
sti
adc
cli
adcl
call
fistpl
cmpl
stos
jecxz
stos
fsubs
lds
mov
and
clc
push
in
imul
inc
jg
sub
sbb
outsb
push
sbb
mov
or
sbb
or
out
test
leave
data16
jg
int
incl
test
enter
add
adcb
mov
jno
stc
js
pop
enter
cmp
cmpsl
sub
sbb
and
aam
test
rcr
movsb
mov
dec
out
addr16
subb
inc
int
clc
movsb
scas
jae
loop
jns
loop
xor
inc
or
pop
testb
inc
xor
push
mov
mov
mov
jno
stos
inc
push
mov
add
sub
push
je
popa
loop
add
inc
les
fldcw
fnstenv
loope
add
jp
mov
lahf
pop
rcl
sbb
movsb
add
pusha
adc
sub
in
inc
insb
and
add
push
lret
aas
cltd
je
in
gs
fiaddl
es
ret
or
fwait
xor
add
and
mov
and
outsl
sub
jmp
aaa
xchg
fcoml
icebp
dec
shlb
pop
jmp
std
inc
or
jmp
sbb
dec
cmp
flds
and
push
das
xchg
lret
sub
mov
pop
cmpsb
cwtl
dec
push
adc
lods
je
lahf
das
dec
pop
enter
out
mov
xchg
adc
rclb
jmp
dec
and
lods
cltd
jns
aam
cmp
cmpsb
or
pop
fcoms
pop
dec
jecxz
adc
jnp
iret
aam
movsb
mov
xchg
dec
xor
ficoms
xchg
push
cmp
fiaddl
les
add
ljmp
idivb
or
xor
aas
push
and
jo
add
xor
shlb
and
adc
sahf
fstl
push
cmp
cmp
in
imul
xchg
mov
cmp
inc
inc
adc
sub
sub
movsb
or
sbb
xchg
mov
jmp
lret
or
dec
ret
cmp
or
mov
mov
mov
jne
test
loope
jae
repz
je
pop
mov
push
shll
push
mov
mov
clc
or
xchg
sahf
mov
mov
pop
sahf
sarb
stc
adc
add
sbb
cmpsb
icebp
lods
inc
lods
mov
fsubrl
lret
gs
cltd
mov
sub
addb
jnp
cmp
movsl
xor
jo
icebp
sbb
xchg
shr
pop
xchg
xchg
outsl
in
pushf
sub
jecxz
dec
ljmp
jecxz
or
xchg
ds
lahf
lahf
add
adc
inc
xchg
mov
xor
mov
pop
dec
lret
scas
lods
xor
cltd
mov
sub
lahf
roll
push
aas
mov
inc
sub
test
mov
mov
adc
push
push
cmp
xor
in
or
inc
inc
bound
push
imull
les
mov
repz
inc
test
cmpsb
into
in
mov
xlat
mov
adc
mov
bound
pop
and
dec
in
cmpsb
or
mov
out
dec
cltd
or
jecxz
movsb
push
xchg
minps
js
into
decl
popf
gs
cmp
push
inc
mov
lods
inc
sbb
cwtl
stc
das
sub
push
mov
inc
test
adc
lds
dec
jmp
sbb
stc
in
push
xchg
jbe
stos
add
icebp
pop
inc
mov
adc
imul
or
test
and
mov
and
stos
add
jge
fsubl
sub
and
divb
incb
inc
inc
subl
xorl
scas
mov
jl
push
adc
xchg
jp
pop
and
push
cs
adcb
lock
out
xor
xorl
push
adc
push
xor
push
add
mov
inc
fdivl
inc
fisttps
adc
icebp
mov
mov
sbb
push
push
mov
sub
sbb
push
testb
push
insl
scas
leave
cs
and
nop
fildl
xor
fnsave
test
dec
scas
mov
adc
je
cmp
lods
sbb
mov
mov
sbb
scas
enter
jbe
inc
xor
push
cmp
cmp
pushf
sub
loope
idivl
aaa
sbb
jg
repz
js
addr16
xor
mov
test
shll
mov
pop
mov
xchg
adc
insl
xchg
sbb
scas
xchg
jg
sub
pop
das
add
xrelease
stos
xchg
xchg
inc
out
mov
es
mov
test
js
xor
pop
xor
xlat
lret
cmp
outsb
dec
or
leave
xchg
sbb
call
jl
lods
leave
lds
pop
int
jl
je
adc
in
cmp
js
sub
jmp
test
lock
xlat
and
pop
jae
xor
or
mov
cmp
add
mov
xor
frstor
adc
mov
or
push
cltd
dec
frstor
dec
cmp
xchg
aam
xlat
repz
inc
dec
mov
ss
adc
push
stc
sub
push
pushf
ret
pop
push
jmp
imul
mov
les
xor
fucom
scas
xor
or
pop
stos
imul
inc
ja
pop
dec
xor
inc
jp
adc
negl
jo
inc
imul
sbb
fdivl
push
ret
sar
or
xchg
testb
sub
sub
pop
push
jb
add
pop
mov
dec
lret
xlat
dec
mov
mov
push
daa
leave
sbb
subl
mov
imul
inc
jae
subb
iret
lret
data16
repnz
cmc
inc
adc
aad
sbb
add
adc
std
hlt
inc
es
andb
fwait
mov
jg
sti
sti
inc
cmp
cmc
hlt
sbb
or
mov
xor
pop
int
dec
pop
mov
push
inc
add
mov
insl
and
daa
ret
cmc
sub
xchg
ja
mov
add
idivl
mov
outsb
pop
pop
or
inc
mov
ds
sub
xchg
mov
mov
dec
rcll
ss
pop
mov
mov
pop
pop
jge
inc
push
mov
push
or
mov
mov
imul
xor
sub
adc
int
int3
cmp
in
enter
lahf
inc
push
push
fcomps
cmp
mov
popa
lock
clc
mov
mov
fdiv
push
in
inc
mov
xor
dec
push
pop
xchg
dec
call
insb
es
and
mov
imul
xor
pop
fisttpll
and
adc
mov
pusha
dec
es
sarl
aad
outsb
fstpt
lods
xchg
and
mov
imull
push
insb
mov
loopne
inc
add
movsl
mov
sub
fstp
mov
mov
lods
adc
inc
inc
shrb
adc
and
adc
lahf
shrb
movl
fisubs
shlb
insb
loope
push
or
mov
jmp
lret
xchg
outsl
out
cmpsb
or
insl
jl
mov
jg
popf
push
es
adc
inc
es
pusha
push
lret
jge
xor
js
mov
inc
add
subl
mov
xchg
push
in
jle
inc
push
and
mov
mov
dec
fidivrs
and
js
scas
outsb
jo
inc
leave
and
gs
pop
jl
fnstcw
push
dec
jns
sahf
or
test
ficoml
inc
dec
inc
sbb
push
sub
mov
out
arpl
in
leave
mov
cmc
sbb
fmuls
xor
push
jns
and
push
dec
repnz
les
mov
mov
xchg
inc
xor
sbb
pop
leave
scas
jl
movsl
inc
fwait
add
jbe
js
and
pop
fcomps
out
popl
cltd
jmp
std
mov
or
push
mov
scas
daa
jl
movsl
fcompl
fcmovb
sub
fs
cmp
push
sub
int
nop
mov
test
mov
mov
sub
mov
dec
sbb
cli
adc
mov
push
sub
lods
arpl
ljmp
inc
ja
sbbl
jge
mov
pop
jb
or
test
xchg
inc
push
adc
mov
fmuls
push
xchg
das
into
add
jle
pop
mov
xchg
dec
lret
enter
push
xlat
jmp
mov
pop
cld
and
mov
mov
lea
mov
hlt
pop
cmc
jp
mov
imul
and
push
cltd
orl
mov
jmp
lret
mov
push
jg
jg
cmpsl
jmp
in
lock
sar
repz
xor
sbb
xchg
pop
cmp
int
cmpsb
pop
test
cmp
inc
fildl
cmp
pop
push
mov
rcl
test
nop
or
icebp
pop
xchg
stos
cmc
mov
repnz
mov
outsb
pop
pop
rorb
mov
inc
pop
icebp
in
jns
ret
cmp
fildll
int
add
pop
ret
xchg
adc
ljmp
ret
push
shlb
pop
pushf
sbb
xlat
arpl
pop
mov
mov
shll
test
dec
lahf
dec
lods
cwtl
jmp
add
outsb
jg
sbb
in
ja
shrb
js
dec
aas
lds
fistps
jecxz
adc
push
or
add
push
adc
cli
xchg
es
rolb
fidivs
push
pushf
leave
fldt
push
je
or
insb
dec
and
mov
mov
popa
out
fimull
xchg
lds
loop
cli
outsl
inc
sahf
jno
and
mov
mov
pop
and
aas
aam
mov
ret
call
cltd
aaa
mov
mov
dec
jp
pushf
cmp
mov
pop
cli
mov
nop
rcll
xor
mov
xor
outsb
xor
mov
imul
daa
inc
aas
mov
fnsave
sub
mov
out
mov
jg
push
loope
cwtl
jo
dec
or
ss
jno
cmpsb
hlt
jmp
mov
push
adc
dec
leave
add
popa
stos
sub
jae
rorb
cmp
push
add
out
mov
or
cmp
mov
stos
popa
gs
jbe
fbstp
push
insl
leave
lods
mov
mov
push
rorl
inc
fdivrs
adc
mov
rorb
mov
cmp
push
mov
in
stos
aad
sub
into
imul
cmp
dec
movsl
andl
lock
aas
aam
push
jp
or
pop
xlat
loopne
pop
lock
cld
aaa
enter
cli
mov
out
mov
jg
mov
inc
cwtl
pop
bound
cltd
test
pop
popf
push
mov
and
insb
mov
pusha
loope
adc
ja
xchg
jne
out
jge
lahf
iret
pushf
lods
xchg
pop
fs
data16
je
rcrb
cmc
lret
cmpsl
xchg
xchg
push
jle
lcall
push
or
fadd
ret
cmp
shlb
les
aam
int
dec
mov
dec
aad
mov
imul
repnz
ja
lahf
xor
push
dec
rolb
int
pop
sub
cwtl
mov
xlat
pop
ret
cltd
push
inc
nop
sarl
in
fsts
movsb
cmc
sub
push
loope
inc
in
jecxz
or
mov
xlat
xor
xorb
mov
lcall
and
gs
mov
cmpsb
mov
andb
jmp
sub
int
loop
jmp
sub
mov
call
mov
mov
or
cmpsb
js
jecxz
and
pop
mov
cli
test
push
repnz
mov
lea
mov
cmpsb
push
pop
out
inc
aam
jnp
std
dec
rcrb
pop
inc
pop
sbb
push
js
add
push
pop
movsb
cld
fisttps
mov
mov
insb
pop
xor
pop
mov
xor
xchg
xchg
insb
loopne
das
and
add
mov
leave
loop
xor
sbb
xchg
addr16
or
subl
pop
int
dec
and
and
push
movsl
js
lret
test
jge
add
lea
add
repnz
testl
sub
jp
rorb
dec
push
cmp
push
add
testl
and
push
gs
iret
stos
push
push
jne
cmpsb
cmpsb
sbb
pop
enter
fwait
cmp
fidivs
ret
aaa
sbb
xchg
movsb
mov
xlat
jmp
jbe
mov
lret
xchg
add
fbstp
cmp
xchg
fistpl
jle
mov
popf
push
sbb
jns
sahf
ja
cmp
js
and
in
repz
pusha
and
sub
rorb
pop
mov
adc
push
mov
loopne
dec
rorl
cwtl
test
push
scas
dec
mov
imul
addb
sub
pop
test
insb
aas
pop
push
xor
js
rcll
lods
dec
pushf
push
push
dec
cmpsb
xchg
sub
mov
test
daa
jl
add
xchg
adc
xchg
rcr
and
inc
inc
ror
fs
aad
fldcw
lods
push
lock
es
mov
and
pop
mov
fstpt
ss
mov
fcompl
ret
inc
lret
aaa
pop
sub
repz
dec
stc
jns
bound
lret
aam
shlb
xchg
aas
adc
popf
fsub
dec
mov
inc
ds
clc
mov
sti
add
std
rorl
sub
addb
movsb
fisttpll
fidivs
xchg
jo
repnz
cmp
lret
xchg
mov
adc
out
fsubrs
inc
push
jb
call
sahf
fcomi
scas
mov
pop
popa
data16
ret
mov
xchg
shlb
jbe
addr16
ja
cmc
xor
mov
dec
xchg
scas
push
xchg
stc
dec
mov
jge
jo
xchg
sti
cmpsl
in
pop
cmp
jae
sahf
inc
pop
mov
out
cmc
lret
xchg
sahf
in
inc
leave
fdivrs
and
in
negl
xchg
pop
mov
or
jne
adc
cld
adc
fisubrs
lods
jnp
push
mov
test
inc
inc
ljmp
sbb
mov
lods
mov
xchg
stc
mov
outsl
lret
mov
loop
or
dec
xor
cltd
jp
fadds
xchg
fsub
and
adc
loope
pop
mov
fists
cltd
ja
xor
mov
fisttpl
ret
dec
enter
xchg
cs
adc
pusha
jl
lea
bound
sub
push
and
push
test
sub
push
arpl
push
push
dec
fistpll
inc
lea
push
mov
bound
pop
imul
je
repz
jg
ror
pop
das
pop
out
add
or
push
test
mov
loopne
stos
cmp
repz
rcr
mov
js
test
sub
inc
and
movsl
xchg
lret
loope
xor
loope
shlb
mov
rorl
sub
idivb
pop
push
aad
add
mov
jle
pushf
or
or
cli
arpl
ljmp
fists
inc
das
pushf
mov
pop
cwtl
inc
and
add
push
cmc
leave
pop
mov
aaa
jnp
into
mov
out
push
fwait
sbb
adcl
add
ss
jno
inc
adc
sbb
xor
lea
std
mov
movb
jmp
jmp
or
adc
push
fcomi
mov
sub
repnz
jae
cmp
pop
fsubs
gs
insl
cmp
out
enter
mov
xchg
icebp
dec
push
sti
nop
sahf
jmp
or
loopne
inc
xchg
xlat
or
pop
lea
mov
gs
sbb
mov
aas
add
dec
jg
jp
push
sub
icebp
jp
cmpsl
adc
cmp
movsb
fimull
loop
shl
sbb
mov
pop
push
icebp
lcall
sbb
inc
repz
add
jp
lcall
out
jns
aam
mov
lret
sbbl
mov
cmp
cmpsb
cwtl
int
insb
int
fists
inc
out
adc
adc
sbb
mov
inc
sbb
adc
dec
xchg
cwtl
test
loope
push
sbb
lahf
stos
negb
dec
pop
dec
fdivrl
repnz
repz
adc
inc
imul
jge
mov
lock
jp
mov
imull
adc
pop
cltd
aam
inc
std
vmovsd
call
xchg
adc
xchg
or
jg
xchg
fmuls
xchg
enter
mulb
pop
std
scas
fwait
sbb
or
ljmp
repnz
and
in
je
mov
dec
cmp
dec
mov
mov
sub
fistl
adc
test
int3
lret
pop
test
dec
loop
add
pop
insl
shlb
lahf
push
es
dec
fsubrs
insl
mov
push
xchg
pushf
jne
mov
out
mov
decb
pop
fmull
dec
int3
sti
aam
cwtl
jmp
into
dec
dec
mov
push
inc
cmp
pusha
out
mov
xchg
cwtl
and
sbb
stos
jnp
dec
xchg
jge
mov
jg
dec
out
dec
xlat
movsb
out
cli
jb
jl
pop
ret
push
jmp
lock
repz
inc
leave
sub
ret
mov
jae
pop
pop
jae
and
mov
jecxz
sub
notl
sti
mov
or
cwtl
cmp
lods
test
ror
adc
test
fildll
in
xor
ja
gs
in
icebp
shll
cmp
mov
cmp
xchg
cwtl
andb
cmpl
leave
hlt
repnz
push
popa
movsb
repz
pushf
lahf
pop
iret
repnz
movntps
mull
inc
addr16
xor
repnz
mov
lret
insl
test
fwait
dec
pop
add
inc
rolb
ja
xchg
push
jb
mov
pop
in
xor
mov
mov
push
mov
out
out
xor
xchg
frstor
inc
lret
aam
pop
dec
dec
fcompl
mov
and
cs
mov
jns
or
fistpl
cmp
mov
mov
in
shrb
loope
xor
scas
rcl
xchg
imul
mov
and
sub
insl
outsb
loop
push
fs
pop
stos
fisubrs
loope
push
push
push
dec
xor
jmp
add
std
pop
mov
in
sbb
push
inc
mov
sub
add
dec
mov
scas
or
ja
fadd
pcmpeqd
mov
call
iret
mov
insl
in
inc
mov
fcoms
xchg
mov
dec
adc
adc
dec
shrd
pop
ljmp
mov
adc
in
adcb
arpl
das
sub
cwtl
gs
add
cmp
les
mov
fisubs
mov
sar
es
dec
lret
xorb
xchg
repz
add
adc
adc
inc
adc
fcomps
mov
ds
and
inc
lea
mov
xchg
movsb
iret
add
cmp
jne
cmpsb
sarl
pop
fdivrl
sbb
ret
movsb
or
cwtl
in
dec
out
repz
jle
dec
jbe
lahf
jns
shlb
in
mov
leave
xor
xchg
je
repz
movsl
mov
stc
and
push
dec
mov
mov
cld
imulb
mov
sahf
pop
mov
xchg
gs
jno
adc
mov
xchg
enter
mov
or
jl
addr16
xchg
data16
jb
in
push
adc
sbb
pushf
lahf
push
ffreep
fwait
insb
mov
into
adc
les
fldenv
ficoml
adc
jmp
insl
mov
or
loop
test
out
sbb
into
lds
jne
or
mov
mov
push
repnz
push
das
rcrl
shlb
and
ret
divl
arpl
adc
ret
sbb
mov
cmp
gs
or
and
flds
hlt
sub
loope
js
movsb
jl
insb
inc
inc
out
orl
fwait
mul
lods
test
incl
cmp
push
es
aam
outsb
jp
push
popf
gs
out
or
jb
dec
leave
mov
loopnew
lcall
mov
adc
out
mov
mov
iret
les
xchg
push
stc
or
insl
xor
ljmp
pop
adc
aad
pop
into
sbb
test
shl
scas
jge
and
popa
lods
std
nop
mov
inc
subl
ss
out
repnz
mov
and
fidivrs
push
sub
inc
dec
jnp
jo
sbbb
int
fmull
test
std
adc
and
jg
sub
push
push
jmp
xchg
pop
push
dec
sahf
push
ja
bound
and
popa
mov
ficoml
push
push
xlat
xchg
jnp
pop
cmp
or
pop
enter
mov
mov
popa
push
inc
shl
loop
movsl
pop
jg
sbb
sbb
xor
or
adc
or
cmpsb
sbb
pop
sti
add
or
sbb
sti
jl
jp
xchg
es
mov
mov
cmp
jo
fimull
fsubrp
xlat
or
add
xor
cmp
xchg
mov
in
roll
or
mov
lods
cmp
adc
loope
int3
lahf
lock
sbb
ja
ret
rorb
dec
dec
and
add
fcoms
sub
enter
test
out
in
jmp
nop
add
push
adc
mov
dec
inc
cmp
fstpl
aam
dec
jmp
add
or
iret
and
jp
fimuls
inc
cld
je
into
inc
mov
dec
iret
fstl
dec
add
frstor
mov
adc
ret
shrw
jge
mov
fnsave
fstpt
mov
pop
adc
aaa
xchg
sub
dec
in
pusha
lds
push
stos
xchg
mov
jge
in
ret
lods
or
push
cmp
arpl
xchg
ljmp
js
add
je
bound
call
cwtl
stos
popa
jecxz
xchg
lret
dec
arpl
xchg
into
cmpb
jmp
sahf
pop
repz
call
lret
rcrb
icebp
out
pushf
test
jl
push
and
push
xchg
push
lds
dec
sub
mov
scas
inc
leave
popa
jae
and
fadd
mov
mov
dec
je
mov
shr
push
ds
inc
scas
push
mov
outsl
fsubs
jo
xchg
imul
jae
push
xchg
xchg
push
inc
jnp
pop
pusha
ljmp
test
enter
mov
and
call
andl
test
jae
dec
push
ficomps
sbb
cli
add
add
stos
sahf
xchg
aaa
out
and
push
lret
ret
sub
adc
orb
mov
nop
jle
xor
jl
icebp
push
insb
dec
cmp
arpl
inc
mov
or
scas
movsb
jmp
sbb
jns
fmul
leave
aad
mov
ret
sahf
popa
call
cmp
shlb
aas
inc
and
repnz
aaa
aaa
sahf
ja
ja
push
cmp
xchg
pop
js
mov
lret
ljmp
leave
enter
dec
ljmp
jmp
repz
test
setl
dec
sub
insb
jmp
je
pop
dec
mov
imul
fwait
xor
jecxz
ljmpw
scas
jae,pn
mov
mov
pop
iret
mov
pop
repnz
mov
inc
out
jecxz
push
inc
jns
cmp
test
gs
mov
adc
test
xchg
pop
mov
lret
mov
jecxz
in
mov
fsin
mov
hlt
daa
mov
inc
notb
sbb
or
out
inc
dec
inc
push
and
outsb
mov
je
xor
es
aas
pop
dec
dec
in
xor
es
mov
lods
int3
pusha
cmp
loop
pushf
stos
lret
int3
in
or
xchg
dec
pop
push
and
aad
xor
jno
aas
add
je
pop
cmp
fcomps
loopne
cli
jns
in
in
jg
mov
test
aad
mulb
or
xchg
shr
xchg
push
test
andl
dec
jb
mov
stc
rcll
sbb
jne
dec
cmc
das
or
mov
repz
mov
push
aad
xor
mov
aam
ret
rclb
push
dec
jecxz
mov
inc
inc
cmp
das
pop
adc
add
pop
sub
jo
pushf
pop
mov
jnp
pop
mov
xchg
mov
int
mov
cld
sbb
or
dec
ds
push
or
jmp
and
arpl
add
fistpl
ud0
enter
loope
aaa
push
in
rcr
pushf
inc
adc
mov
popf
rorb
out
push
xchg
lods
sahf
push
mov
sbb
mov
lock
cmp
pop
aaa
data16
out
call
gs
mov
iret
pop
repnz
dec
imul
adc
inc
or
lea
sub
mov
outsb
idiv
fisubrs
js
and
rcl
pop
mov
jne
gs
fists
je
sub
pop
mov
jle
and
stc
add
rorl
ljmp
pop
cmp
sub
push
add
shrb
stc
rolb
mov
inc
les
stos
je
dec
sub
in
pop
sti
loopne
pcmpeqb
xchg
xor
in
mov
push
cmc
push
ja
add
xor
mov
add
fwait
jns
jp
sbb
jns
cmp
das
pop
in
sahf
and
cmp
mov
push
mov
aam
push
jo
notb
out
das
aaa
cmp
cwtl
subl
push
sub
cmc
pop
inc
mov
test
add
mov
pushf
push
fcomip
dec
outsb
xchg
xor
sub
cwtl
jb
mov
push
out
ret
ds
sbb
rcll
gs
and
adc
test
mov
cmc
pop
inc
mov
mov
xorl
sub
push
cli
psrlw
mov
jne
es
js
outsl
in
vorps
and
cmp
bound
icebp
and
hlt
test
fdivl
mov
dec
jns
xchg
push
dec
push
cmp
or
movsl
sarl
push
enter
sahf
mov
add
rorl
sub
repnz
cmc
cmp
into
mov
or
notl
xchg
jae
add
jmp
sub
ds
dec
mov
in
data16
clc
push
and
push
in
xorb
fldcw
je
pop
hlt
subb
push
jns
psubusb
scas
gs
call
mov
dec
mov
mov
aam
jnp
lods
push
ret
loopne
std
mov
pop
mov
sub
xchg
test
mov
mov
ljmp
aam
fdivrs
push
ret
mov
dec
jle
cli
shrl
and
imul
jl
cmpl
mov
and
jae
mov
jne
mov
mov
mov
xchg
or
ljmp
lcall
dec
je
mov
sbb
sub
insb
adc
arpl
add
inc
cmp
cwtl
mov
cmp
mov
mov
adc
inc
jmp
iret
sbb
or
and
mov
pop
popf
lcall
sti
add
ffree
fwait
add
adc
dec
fsts
xor
adc
stos
adc
adc
jns
push
mov
loop
pushf
push
insb
cmp
pop
xchg
movsb
in
and
stos
add
shrb
repz
inc
in
adc
in
sub
std
sbb
xor
pop
jo
bound
adcb
dec
mov
imul
add
dec
lods
das
stos
jmp
mov
in
mov
lock
rcll
insb
mov
fwait
xor
sbb
add
and
data16
test
test
into
imul
pusha
mov
repnz
or
gs
fcmovu
mov
xchg
ror
ja
and
xor
jne
hlt
sub
les
fimuls
jg
mov
std
sbbb
jne
jno
push
icebp
xchg
add
mov
rolb
xor
jnp
imul
je
insl
adc
xchg
pusha
frstor
fldenv
sbb
cmp
inc
adc
leave
cmp
ret
sub
sub
hlt
push
cld
dec
mov
sbb
orl
or
add
jmp
mov
cmp
jae
pushf
cmp
sbb
mov
cld
incb
or
das
lods
lahf
xor
pop
clc
pop
ret
pop
sahf
inc
aad
and
enter
mov
mov
xor
test
insb
jge
aas
and
inc
notl
or
xchg
mov
pop
push
aad
jae
sarb
mov
mov
push
insl
fidivl
pushf
xchg
pop
mov
iret
lods
out
xlat
and
pop
fld
pop
pusha
out
jg
test
loop
sti
stos
jbe
dec
push
push
xor
sbb
sbb
xor
mov
cmp
fs
inc
movsl
xchg
or
hlt
iret
daa
jecxz
into
out
int
adc
mov
fisttpll
mov
mov
add
mov
repz
and
sahf
into
mulb
mov
cmp
insb
cmp
rclb
mov
xor
bound
mov
add
popa
pop
pop
jl
imul
adc
cmp
repz
inc
sub
pop
insb
repz
subl
mov
add
and
rol
and
mov
lock
xchg
out
cmc
fldz
xor
cmp
pop
jl
inc
mov
mov
shr
sub
mov
aam
dec
cmpsb
daa
loopne
out
sbb
and
push
mov
add
sub
jmp
sti
dec
out
mov
mov
in
fistpll
bound
lods
mov
and
pop
fwait
enter
jbe
cwtl
add
push
sub
and
or
into
lret
in
les
sahf
xchg
push
inc
sub
sbb
nop
jmp
out
bound
roll
jp
rcrb
cmp
pop
and
sub
mov
leave
sbb
push
sarl
iret
jnp
roll
fs
lcall
cmp
nop
add
sahf
enter
repz
test
nop
push
jae
js
mov
xchg
aas
mov
popf
icebp
insl
dec
jne
cmc
mov
push
dec
in
mov
sbb
mov
cli
fcom
or
es
jmp
cmp
xor
pop
xchg
lahf
icebp
orb
push
inc
lret
ss
in
adc
add
add
outsb
jge,pn
out
icebp
jmp
adc
mov
lea
imul
pop
xchg
push
bound
popa
sbb
inc
std
test
xor
adc
add
mov
repnz
sbb
cmc
inc
inc
ds
xchg
pop
das
adc
hlt
push
jp
push
xor
add
cmpb
add
and
mov
pop
aad
cld
insb
cmpsl
scas
insl
mov
fwait
fs
mov
mov
pop
enter
ds
and
cli
and
jo
loopne
pop
and
mov
xchg
sbb
mov
lret
mov
sub
mov
sbb
enter
cltd
popf
dec
mov
cli
cmp
hlt
mov
xchg
inc
insl
pop
shll
push
xchg
rorl
jmp
ljmp
dec
xor
movsl
inc
jb
dec
mov
cmp
mov
in
repz
lahf
inc
sbb
insl
into
ja
sub
add
enter
cwtl
iret
outsl
out
addl
pop
fsubl
sarl
aad
inc
stc
stos
mov
nop
jle
shrb
sbb
add
add
push
dec
xchg
inc
lfs
shl
int3
sub
fs
sub
test
xchg
lea
lock
sbb
pop
stos
xor
jae
aas
sti
sbb
push
js
pop
push
in
adc
scas
leave
or
stos
int3
scas
inc
sbb
movsb
sub
sub
and
adc
lret
pusha
js
dec
cmpb
shll
push
cmp
push
or
rcrb
repz
mov
popa
cmp
mov
inc
sub
enter
cmp
daa
loopne
movsb
jl
arpl
in
mov
jg
mov
dec
in
sbb
sahf
xlat
pusha
bound
subl
sti
xor
sarl
mov
push
or
jecxz
add
push
dec
lds
or
push
into
mov
leave
gs
jmp
fnstsw
aas
adc
bound
jecxz
adcb
scas
gs
scas
push
scas
sbb
pop
cmp
or
or
push
mov
hlt
dec
xchg
lock
push
ljmp
sbb
cld
xor
and
repz
frstor
pop
xor
jecxz
aam
stos
stc
fsubrl
ret
push
inc
fnstcw
loope
dec
adc
push
movsb
pop
sbb
xchg
cmp
adc
das
adc
cmp
mov
outsb
out
dec
mov
stos
test
push
mov
mov
mov
adc
divb
out
mov
mov
mov
imul
and
inc
in
jo
outsl
ds
inc
popa
dec
sti
bnd
aad
sti
aaa
aad
push
xor
jl
jbe
cmp
xchg
js
stc
leave
sub
adc
fsubl
xlat
fidivrs
sbb
je
push
cmp
sub
sub
sub
jns
cli
lahf
dec
ret
adc
cmp
sub
adcl
mov
xchg
jbe
loop
adc
inc
stc
mov
cmpsb
je
rol
sti
popa
jmp
sbb
pop
cmp
mov
mov
xor
or
cmp
or
sbbb
fnsave
inc
mov
adc
xor
ds
pop
add
xlat
arpl
roll
fstpl
push
inc
push
pop
adc
test
rcrb
lahf
nop
xor
fbstp
inc
push
add
jge
adc
mov
jae
or
cld
fisttpll
sarb
push
xor
ret
or
and
fcompl
ret
jbe
lret
xor
jbe
rep
nop
cli
insb
inc
push
cmp
test
adc
mov
cmp
mov
jb
mov
xor
adc
dec
test
inc
cmpsb
movsl
inc
cmp
inc
xchg
adc
jno
repnz
inc
pop
sahf
jo
or
push
jge
pop
cmp
mov
mov
or
and
mov
arpl
jns
inc
mov
xchg
shlb
cmp
jno
lods
jmp
sub
jnp
pop
lock
nop
pop
fidivs
pop
xchg
lcall
sub
mov
mov
daa
ja
or
jecxz
sub
mov
dec
lock
dec
sbb
pop
mov
scas
lea
outsb
fs
cmp
test
dec
pop
bound
out
or
mov
cmp
mov
mov
ss
or
xchg
repnz
or
in
add
push
xchg
fdivp
movsb
push
mov
out
sub
mov
sub
mov
push
sti
movsl
cmp
push
jp
movsb
jbe
imul
dec
in
pusha
push
jns
adc
add
mov
sbb
out
mov
dec
mov
js
xor
xchg
rcr
add
mov
sbb
arpl
xor
ds
xor
adc
jb
les
cmp
mov
outsb
push
mov
mov
js
outsb
add
adc
or
pop
enter
push
push
mov
arpl
mov
insl
js
movsl
insl
out
dec
je
dec
pop
imul
dec
inc
pop
pop
fsubr
mov
mov
or
and
iret
push
clc
mov
mov
ror
imul
cltd
bound
mov
xchg
jne
sub
lock
pop
scas
ss
movsl
shlb
cmpsl
sbb
das
jno
icebp
in
cmp
ficompl
add
dec
push
movsb
cli
addr16
push
mov
push
sub
pop
ret
mov
mov
loop
mov
fwait
pop
add
roll
ret
jo
adc
imul
loopne
loop
push
lcall
ljmp
push
inc
dec
test
xor
js
jb
xor
or
rcr
out
pop
ret
jg
and
in
addb
rolb
sub
test
mov
movsl
jbe
aas
add
in
push
mov
jle
icebp
ret
jo
call
add
insl
ret
lret
sbb
lret
fstp
push
and
mov
pop
xchg
pop
std
jo
push
sbbb
clc
fstp
push
je
cmpsl
lahf
ds
ret
push
push
push
sahf
fisubrs
and
mov
adc
or
xchg
out
call
push
fbstp
pop
pop
xchg
xchg
loope
xchg
adc
dec
sub
fcomip
or
fildll
rorl
or
mov
adc
mov
punpckhwd
fldenv
pop
mov
dec
mov
lods
cmp
mov
sub
pop
jne
mov
pop
inc
popa
pop
repnz
inc
rorb
cmp
or
inc
add
jae
jno
jge
fs
fisttps
push
add
cwtl
cmp
xor
daa
push
add
mov
test
adc
jl
fimull
push
inc
sbb
and
pop
ficompl
movsl
loope
mov
mov
add
sbb
clc
push
scas
movsl
pop
push
mov
pop
mov
stos
inc
int
insl
xchg
push
mov
xchg
dec
mov
push
stc
jge
sbb
and
dec
mov
xor
cmp
adc
ljmp
mov
repnz
xor
mul
sti
pop
dec
add
push
daa
pop
cs
mov
enter
out
outsl
and
cmp
pushf
scas
std
jno
sbb
cs
cmp
dec
mov
add
ret
mov
stos
pusha
and
lds
push
pop
and
cmpsl
xchg
popf
push
add
mov
pop
js
ljmp
pushl
jle
popa
std
insb
inc
addr16
test
test
xchg
or
mov
aaa
adc
jne
in
push
xor
out
mov
repz
jge
adc
pushf
cltd
jmp
cs
push
leave
cmc
inc
lods
mov
sub
mov
inc
and
mov
mov
scas
inc
inc
pop
loopne
xchg
iret
sub
push
mov
fcmovb
addr16
lds
xlat
out
sti
fisubrl
scas
out
dec
dec
jmp
dec
mov
stc
dec
xor
inc
ror
enter
bound
and
xchg
push
loope
mov
sub
ds
enter
jge
cmp
pop
xchg
pop
and
shrl
sub
adc
dec
mov
dec
test
bound
add
dec
sub
std
stos
icebp
cwtl
cmp
xor
sti
stc
enter
imul
jl
xchg
sbb
je
pop
adc
push
push
iret
mov
int
int
stos
in
pushf
lock
ret
cltd
shrb
popa
or
sub
jecxz
jno
ja
jno
daa
and
or
adc
mov
movsl
xor
xchg
cmpsl
int
and
lea
out
mov
mov
push
xor
pop
lea
sti
dec
or
jne
rcrl
shl
lret
adc
in
mov
sbb
inc
and
shr
mov
jno
repnz
cmp
jae
adc
in
dec
push
std
push
ss
push
push
and
push
icebp
repz
lret
aas
es
mov
sarb
sbbb
out
fistps
push
jmp
test
repnz
mov
test
mov
test
adc
sbb
xchg
out
adcb
aas
dec
dec
mov
push
fcomp
xchg
inc
xchg
xchg
push
or
ss
test
dec
mov
or
jmp
ret
cmp
aam
adc
pop
cltd
xchg
clc
xor
sbb
fdivrl
ret
xchg
sbb
cld
fcompl
push
sbb
cmc
push
out
mov
inc
add
jo
sub
jmp
cmp
rolb
cltd
jecxz
mov
andl
mov
lods
sbb
lret
or
cmpsl
fs
inc
pop
and
adc
pushf
inc
sub
dec
mov
inc
outsb
add
mov
xor
pop
xor
mov
push
lahf
xchg
cmp
ljmp
jne
ret
cld
popf
sbb
cmp
xchg
pushf
enter
dec
sbbb
jns
adc
lea
pop
pop
jo
sti
cmp
popa
mov
adc
mov
std
dec
jg
mov
ret
pop
push
push
mov
xchg
sbb
aas
int
sbb
sbb
mov
out
jns
and
mov
lret
jne
loope
test
mov
cltd
pop
mov
mov
mov
out
and
bound
xor
xor
mov
inc
mov
mov
pop
inc
fidivrs
mov
out
cltd
fmuls
movsl
in
inc
shlb
ret
mov
sbb
jb
xchg
stos
lds
les
insl
mov
fdivl
jg
ret
push
hlt
mov
icebp
iret
push
dec
aad
mov
or
and
xor
add
dec
js
jb
adc
in
repz
int3
sbb
mov
mov
dec
cmp
sub
movsb
sub
add
inc
add
or
cmp
outsl
mov
test
repnz
adc
jp
mov
sbb
mov
popl
ror
add
inc
cmpsb
mov
xor
sub
and
mov
cmp
movb
add
push
add
mov
rorl
fists
rcr
xor
jl
inc
mov
push
sbbl
inc
mov
sub
cmp
mov
mov
ds
mov
inc
push
inc
lds
push
popa
or
in
mov
push
leave
in
dec
out
push
fcomp
jo
insb
lock
mov
aam
mov
mov
inc
pop
mov
das
xchg
mov
adc
lahf
cmp
rcll
leave
repnz
sub
inc
or
movsl
pop
pop
das
ret
push
scas
add
loopne
sub
mov
nop
adc
push
cs
daa
stc
punpckhwd
repz
bound
popa
lcall
mov
push
shl
ret
mov
mov
in
xor
adc
out
aaa
inc
repz
mov
das
repz
cmp
mov
inc
ret
mov
cs
pop
sub
jb
rorb
push
jnp
lds
movsb
mov
sahf
xchg
mov
pop
xor
mov
mov
jno
mov
mov
jnp
jns
leave
insb
cmp
fsubrs
int3
adc
pop
sti
lods
mov
and
es
movl
lea
push
cmp
xor
mov
add
test
xor
fwait
add
xorb
pop
adc
mov
pop
lret
jnp
inc
rorl
xchg
aad
jle
jge
cmp
xor
jmp
sub
test
lcall
aaa
mov
mov
inc
mov
dec
insb
int3
sbb
inc
es
inc
and
mov
out
push
jo
lods
les
pusha
jg
rcrb
mov
mov
xor
cmp
pop
lods
sub
cmp
aad
inc
jno
adc
jl
xchg
je
loope
or
jne
mov
xlat
push
push
inc
pop
dec
sbb
xchg
jecxz
sub
das
mov
cwtl
fcomps
iret
mov
test
nop
mov
inc
lcall
fstpl
ja
stos
mov
in
cmp
aam
dec
sti
and
mov
mov
xchg
inc
jae
jge
nop
out
fiadds
stos
jno
or
pop
xlat
and
or
movsb
and
push
mov
jle
mov
inc
clc
jmp
push
and
fistpll
jo
add
int3
test
mov
imul
aaa
loopne
mov
pop
stc
jno
ds
xor
aad
out
or
push
pushf
rcrl
and
loope
rorl
jmp
cmp
xchg
loopne
and
push
or
ror
pop
push
and
pop
enter
in
jnp
inc
insl
pop
jbe
push
jbe
mov
insl
mov
or
sarl
fnstcw
imul
sahf
pop
ss
cmp
mov
push
xchg
push
push
adc
pop
mov
in
adc
xor
and
xchg
pop
push
popa
pop
pop
int
jmp
push
mov
push
outsb
xlat
mov
gs
add
mov
push
stos
pop
mov
push
xchg
cli
xorl
mov
mov
dec
push
stos
jp
or
in
lods
loope
cmp
sbb
je
jno
addb
inc
xlat
mov
pop
dec
inc
mov
jp
pop
ret
adc
aaa
fistpl
shrl
xchg
inc
clc
push
mov
xor
repnz
pop
or
or
minps
mov
stos
push
pop
dec
stos
adc
out
aas
add
sbb
lahf
jnp
pop
movsl
daa
sbb
pop
shl
pop
loope
mov
mulb
dec
repz
add
mov
jo
addl
inc
and
xchg
lods
push
lret
sahf
jno
inc
mov
pop
into
jbe
pusha
mov
push
ficoms
je
jecxz
sarb
inc
inc
jne
adc
and
pop
testl
or
mov
out
test
jne
les
enter
jl
dec
imul
cmc
mov
xlat
push
mov
daa
and
in
dec
or
outsl
sbb
gs
mov
and
test
pop
sub
test
sub
aas
mov
aam
pusha
negl
cmp
int3
push
and
es
clc
dec
sub
insb
xchg
outsb
push
into
push
insl
push
sarl
out
sub
mov
lcall
adc
je
push
push
lods
add
mov
lods
push
adc
repnz
or
repz
sbb
inc
outsb
cs
mov
mov
movb
test
jg
xlat
inc
les
adc
jge
push
push
and
test
and
cmp
jl
mov
mov
push
out
stos
mov
pusha
rolb
aam
movsb
mov
inc
stc
ds
call
repz
push
push
fs
fildl
stos
inc
outsl
and
sbb
pop
test
imul
cltd
shlb
bound
push
test
and
xchg
aas
mov
push
cmpsb
ds
pop
nop
imul
xchg
js
mov
rclb
je
inc
mov
addl
ljmp
insb
ret
cmc
ljmp
outsb
orb
pop
push
inc
and
jp
int
inc
flds
int
pop
jo
hlt
jnp
or
lret
push
iret
insb
mov
shrl
pop
lahf
popf
jno
pop
aaa
mov
pop
jne
xor
xchg
cmovb
jne
ljmp
sbb
cmp
or
in
in
xchg
push
fwait
adc
cmp
aad
push
pop
ljmp
mov
and
loopne
mov
repnz
mov
inc
jp
andl
inc
pop
adc
ror
icebp
sbbb
cli
fwait
mov
clc
jbe
cmp
adc
mov
in
movsb
aas
sbb
mov
adc
out
cmc
inc
jle
pushf
vshufps
cmc
push
and
test
rol
mov
xchg
hlt
loopne
and
inc
dec
xor
push
fsubr
lods
xchg
ret
fs
push
rorb
aaa
icebp
inc
pop
call
or
push
cmp
add
pop
push
ret
sbb
test
cmp
shrb
stos
xor
xchg
push
xchg
xchg
or
lret
aas
stc
jb
xchg
xor
xchg
add
jmp
mov
fs
test
pop
jl
cmp
pop
jnp
pushf
xor
cli
xchg
daa
mov
or
inc
add
arpl
push
or
ds
sub
inc
sbb
add
or
sbb
in
pop
int
sbb
mov
push
das
push
aas
dec
adc
sbb
sbb
sbb
fldenv
push
aad
lret
push
pusha
in
outsl
mov
xchg
lods
push
mov
mov
cltd
mov
mov
jno
arpl
mov
dec
xor
jmp
xchg
sbbb
sub
push
fnstenv
insl
jle
fucomi
pop
pop
push
xor
rorl
shrl
pushf
sahf
mov
sbbb
imul
rcr
cli
repnz
lock
xor
hlt
xor
fmuls
xor
mov
arpl
adc
mov
xchg
mov
mov
sbb
mov
push
jb
sub
and
adc
mov
lahf
jae
mov
mov
sub
mov
xchg
pop
push
call
test
imulb
lock
popa
jl
add
aaa
xchg
sub
or
lret
loopne
pop
xchg
xchg
adc
xchg
mov
insb
int
cmc
pop
roll
jo
rorb
push
jbe
dec
inc
xchg
mov
push
shrb
clc
sbb
in
addl
xchg
std
adc
dec
out
mov
lods
std
and
mov
sbb
pop
imul
xchg
in
cmp
add
inc
lret
fsub
cmp
outsl
fidivrl
lret
js
xor
pop
arpl
fadds
js
aas
jb
mov
xchg
mov
push
sbb
push
addr16
scas
dec
or
ss
cld
pop
sbb
xor
sbb
inc
mov
mov
lcall
mov
push
pop
insl
lea
out
lret
xor
jo
pop
xor
in
pop
mov
pop
ficoml
imul
mov
out
ficompl
mov
lret
push
adc
or
fimuls
sub
jg
arpl
inc
daa
inc
ss
push
mov
inc
rcr
xchg
push
rcrl
insb
sbb
xor
jp
stos
in
jnp
add
mov
push
loopne
xchg
mul
inc
push
test
jne
idiv
push
rcrl
stos
mov
pusha
inc
outsb
repz
add
mov
and
pop
lock
mov
push
pusha
scas
imul
jne
sub
sbb
out
jo
ja
cmp
loop
fsubl
pusha
lahf
enter
mov
mov
in
ljmp
out
in
ds
popf
out
mov
jmp
dec
jb
inc
or
aad
xchg
pop
jmp
dec
xchg
fcmovnbe
and
aaa
mov
add
bound
js
dec
xchg
pop
pushf
inc
adc
push
pop
movsb
add
dec
out
imul
int3
in
repz
mov
xor
sub
cli
mov
das
orb
jno
jo
loopne
arpl
lds
push
mov
add
fsubrs
xchg
leave
call
adc
enter
push
cmp
sub
iret
out
loopne
cli
call
cmpsb
sbb
gs
call
cmpsl
es
scas
fdiv
add
push
lods
je
jecxz
xor
dec
shlb
xor
xor
out
mov
push
lods
ficoms
sbb
fcomi
insl
in
push
xchg
cmp
push
adc
push
out
scas
jmp
mov
mov
hlt
fdivrl
pop
std
mov
inc
fcmovnu
jl
popa
sub
mov
rcrb
xor
jge
les
sbb
daa
int3
add
pop
cmpl
pop
inc
imul
rcl
fstpl
fsts
jle
xchg
inc
mov
data16
out
pop
sti
dec
loop
out
loopne
mov
iret
lret
lds
mov
scas
adc
ljmp
icebp
cwtl
xlat
xor
mov
iret
xor
sub
loop
push
lcall
push
mov
dec
add
fisubs
or
pop
repnz
pop
mov
bound
in
fmul
jnp
push
decb
je
xchg
fldcw
mov
dec
mov
inc
cmp
ret
pop
ds
scas
call
out
pop
std
sbb
adc
and
dec
sbb
inc
aas
insb
int3
sub
jo
inc
cmp
mov
fimull
dec
mov
mov
outsb
cwtl
jmp
mov
or
into
test
cli
ret
aad
cmpsb
inc
inc
idivb
notl
adc
cmp
jnp
cmp
sahf
js
sub
sbb
lea
or
sahf
arpl
insb
sub
bswap
sub
gs
div
cli
dec
sbb
mov
cmc
mov
cmp
xchg
xchg
push
fisttpl
and
cwtl
mov
or
movsl
outsb
cmp
repnz
pop
rcrb
idivl
and
mov
adcl
adc
fldenv
js
shlb
cld
sahf
sbb
or
pop
daa
pop
sti
inc
jge
dec
and
hlt
insb
jnp
sbbl
out
out
mov
lods
pop
xchg
ss
fwait
sub
pop
lods
hlt
mov
add
aam
loopne
pop
repnz
sbb
jle
pop
test
cmc
xor
xchg
xor
pop
jle
cmpsl
mov
and
loope
cmp
jmp
cwtl
pop
icebp
test
bound
and
ret
push
into
xor
sub
jb
inc
lret
clc
cs
nop
gs
into
insb
cmpsb
mov
add
jge
dec
mov
mov
js
mov
and
stos
dec
ja
lea
add
sbb
shll
mov
jmp
pop
jns
xchg
pop
notb
in
sarb
jp
mov
rcrb
lds
lret
data16
mov
rol
xor
adc
mov
ret
fdivr
fdivrp
dec
inc
aad
imul
mov
fs
sbb
rorl
xor
pop
js
xor
push
mov
sbb
das
adc
std
mov
mov
inc
add
mov
xor
jmp
rcll
sub
pop
fistpl
lock
inc
pop
jge
jge
push
fadd
mov
cmpsl
push
incb
xchg
out
jns
cli
loop
cmp
jl
int3
icebp
test
int
dec
ljmp
pusha
xor
jnp
ja
movsl
clc
rcr
loope
add
dec
push
in
inc
adc
cmp
jnp
jecxz
fiadds
push
std
lahf
mov
xchg
clc
cmp
xchg
gs
fisubs
jo
das
pushf
test
sbb
mov
mov
int
jnp
out
add
icebp
adcl
mov
lret
pushf
mov
mov
or
and
je
mov
xor
mov
jo
in
neg
push
lret
ja
mov
push
pushl
adc
mov
push
cmpsl
xchg
mov
repz
mov
scas
adc
xchg
leave
lods
inc
hlt
mov
xchg
push
or
or
xchg
mov
popl
insb
sahf
ljmp
out
jecxz
repnz
idivl
jns
aas
ffreep
movsl
xchg
out
adc
pop
iret
dec
cs
out
mov
fdivrl
ja
imul
into
xor
in
icebp
or
aam
add
dec
shl
fcomps
mov
push
push
or
jbe
popl
xchg
push
insl
cmpsb
push
incl
sub
pop
mov
pushf
mov
mov
scas
and
push
stc
mov
outsl
dec
or
leave
jp
or
xor
out
xorb
mov
lcall
xor
imul
mov
sub
test
rcl
mov
xchg
mov
lods
pop
orl
and
test
mov
jbe
and
movb
or
leave
inc
dec
loope
jno
adc
clc
jnp
push
mov
pop
sbb
movsl
cld
je
push
loop
sbb
and
lods
adc
lret
xor
in
lcall
addr16
cmp
lret
sbb
adc
push
inc
cmp
mov
mov
push
orb
sbb
mov
mov
cmp
and
cmp
and
testl
movsb
add
inc
jnp
xchg
jecxz
jb
mov
sbbb
insb
aam
xchg
xchg
push
sbb
mov
xchg
loopne
decb
and
or
mov
xchg
ljmp
cmp
dec
adcb
sub
and
lods
out
inc
lock
call
into
jl
xchg
mov
out
lods
addr16
scas
movsb
fdivrs
cs
idivb
leave
test
jl
jl
test
sar
imul
mov
insl
mov
sti
les
in
and
push
mov
xchg
push
movsl
mov
push
dec
and
cwtl
jno
idivl
in
xchg
mov
and
sarl
push
lods
pop
dec
push
pop
sahf
sub
sbbb
loopne
jbe
fsubrl
cmp
nop
inc
push
push
insl
fildl
pop
subb
mov
inc
jmp
popa
jl
jbe
and
sbb
push
inc
les
and
fs
mov
mov
or
or
ret
add
das
call
adc
stc
and
cmp
mov
and
xor
mul
out
in
or
test
xor
sbb
stos
lods
addr16
fdiv
out
fidivs
dec
mov
adc
or
xchg
sbb
inc
mov
cmpb
jge
fistpl
rcl
insb
shr
cld
jecxz
or
insl
dec
jns
sahf
rcrl
insb
pop
in
pop
push
sub
pusha
sub
int
xlat
lods
push
sbb
mov
iret
in
add
aaa
cs
jl
pop
or
nop
push
mov
xor
jecxz
xor
je
cmp
in
dec
or
out
dec
sti
lcall
movntq
out
movsb
xchg
sbb
sarl
jmp
add
push
aaa
in
pop
aaa
mov
inc
lods
inc
jmp
mov
aad
or
adc
pop
mov
jbe
inc
xorl
icebp
pop
scas
dec
push
xorb
add
mov
mov
xchg
cld
mov
test
adc
shl
lret
daa
ja
fs
pop
dec
inc
leave
stos
add
fnstcw
cmp
jne
test
int
xchg
repz
cmp
jge
repnz
mov
xor
andb
fwait
dec
xor
jns
lahf
shl
sbb
ret
dec
in
xor
cmp
test
insb
pop
inc
adc
xchg
sub
adc
jno
mov
loop
mov
shll
push
pop
xor
cs
or
pusha
or
inc
jge
pop
xchg
sti
push
stc
mov
push
loopne
cmp
aam
push
sbb
inc
rol
and
fsubp
mov
or
test
xor
mov
sbb
in
into
out
mov
lock
out
push
pop
clc
popf
data16
and
or
fisttps
stos
mov
clc
cmc
lea
cmpsb
adc
arpl
or
sub
icebp
push
mov
out
repnz
cmp
mov
cmp
lds
fisttpl
mov
dec
mov
and
mov
xor
mov
push
lret
loopne
sarl
fsubp
adc
rclb
mov
mov
sub
iret
add
adc
int
push
push
push
das
pop
sarb
jbe
insl
add
repz
pusha
stos
cmc
insl
inc
jae
loopne
xor
jae
out
mov
and
aam
sub
dec
aaa
inc
sub
in
lods
aad
test
stc
sub
mov
cltd
jne
lret
fildll
je
jmp
addr16
mov
adc
mov
aas
add
sbb
mov
sub
jae
popa
scas
or
ss
loope
push
cmpsl
out
call
test
pop
push
push
mov
mov
jns
sbb
cmpsb
mov
out
push
lock
push
es
daa
and
nop
out
popa
mov
nop
or
into
ret
pop
mov
lods
mov
sbb
pop
sbb
xor
sbb
in
xor
jae
xchg
cmp
jp
and
adc
mov
sbb
mov
push
arpl
jecxz
jnp
pusha
filds
inc
push
fildll
push
shlb
cmp
sarb
jge
cmp
jmp
add
adc
cmpsb
bnd
imul
mov
scas
mov
enter
movsl
es
frstor
scas
in
cld
xchg
sbb
push
jge
and
outsl
xor
adc
jl
pop
shl
sbb
aam
test
push
jp
push
das
dec
jge
imul
push
lds
xchg
or
aad
int
int3
loop
dec
cmp
outsl
in
jp
cmp
pop
xor
lret
test
or
nop
daa
sbb
lods
pop
xchg
dec
xlat
les
cltd
das
mov
add
enter
es
add
mov
xchg
or
and
jl
or
xlat
jo
xchg
add
movl
lods
ret
or
fnstsw
loop
push
dec
testb
arpl
jo
aam
stc
int
mov
jb
mov
iret
icebp
mov
ret
and
pop
mov
lahf
es
fsub
daa
cmpsb
xor
out
xchg
loop
adc
les
inc
mov
or
xchg
lods
cmp
mov
out
repz
or
aad
add
push
cmpl
movsl
xor
mov
lock
shll
sahf
rcl
jecxz
out
dec
dec
mov
pop
divb
cmc
add
sub
sbb
in
test
jge
push
inc
popa
and
mov
push
dec
daa
stc
bound
outsb
dec
shlb
jle
jecxz
cli
pop
pop
mov
stos
push
inc
gs
ljmp
dec
push
dec
arpl
or
jbe
shll
xchg
hlt
inc
jno
addr16
mov
ja
cmp
jnp
or
fstpl
mov
nop
ds
dec
pop
mov
push
pop
arpl
mov
lret
add
pop
mov
daa
test
stc
int3
jo
test
inc
fwait
nop
inc
push
stos
adc
lcall
mov
or
push
mov
scas
cmp
mov
push
xchg
repnz
jmp
cld
xchg
dec
int
dec
mov
mov
scas
adc
rolb
inc
pushf
int
out
data16
xchg
mov
mov
lret
cmp
mov
mov
adc
pop
ss
in
mov
data16
jne
jge
inc
fdivl
cmp
ret
xor
ret
imul
pop
test
dec
iret
push
test
clc
jle
fiaddl
cli
cmc
dec
imul
mov
xor
sar
sub
popf
or
dec
cltd
add
roll
test
sub
sub
int
in
sbb
jmp
bound
sbb
sbb
in
and
xchg
xor
push
xor
cmp
mov
in
sub
pushf
aam
mov
lahf
and
in
test
jmp
imul
dec
and
xchg
dec
sub
push
xchg
sub
dec
jl
cld
lret
mov
xorb
fldenv
xor
fsubrl
mov
jbe
movsb
push
pusha
inc
shll
lret
repnz
lret
pop
push
sbb
rclb
and
dec
push
push
mov
sbb
jns
in
mov
insl
dec
inc
pop
ja
mov
clc
xchg
shlb
cmp
std
jbe
int
scas
fcompl
sub
pop
sti
jne
sub
cmp
add
fldenv
inc
xor
pusha
in
cltd
pop
aad
aaa
and
lahf
mov
pop
iret
sub
xor
pop
pop
mov
lea
pop
fcoml
lock
fldt
test
inc
filds
xor
pusha
xor
and
mov
aas
fwait
mov
adc
stc
je
cmp
rcll
insl
mov
repz
mov
ja
cmp
mov
pop
xchg
lcall
mov
addl
int
pop
and
mov
movsl
fbstp
cmpsb
gs
outsb
jbe
popf
xchg
cltd
cmp
pop
mov
filds
out
shrl
lret
sahf
adc
jbe
stos
fstps
or
stos
inc
shrl
inc
xchg
jl
into
cmpsb
test
scas
mov
in
or
inc
shl
in
ss
jmp
xchg
add
shrl
cmp
loopne
ds
imul
aam
enter
inc
jg
mov
jecxz
sbb
sbb
sbb
xlat
xor
sti
push
sbb
repz
jmp
pop
pop
outsl
arpl
arpl
sbb
dec
ficomps
xchg
out
into
ficompl
jl
or
jbe
dec
ds
daa
pop
stc
push
jne
negl
xor
push
adc
cs
sub
clc
ficomps
repz
xor
lcall
je
mov
xchg
das
in
cmpsl
or
cmp
in
jg
or
sub
idiv
ja
adc
pop
jp
jmp
mov
adc
and
mov
movsl
push
scas
dec
cmp
sub
lods
push
dec
mov
int3
test
push
xchg
ror
lds
popf
cmp
je
pop
mov
stos
hlt
cld
mov
mov
lods
mov
xor
jno
push
mov
pop
shrb
call
and
push
push
pop
push
inc
push
fsub
jmp
inc
push
sbb
mov
pop
jb
invd
jno
mov
imul
dec
xor
and
mov
ds
jge
out
lods
sbb
inc
pop
or
loopne
and
add
out
sti
and
mov
mov
jno
xchg
push
cld
sti
leave
jge
hlt
imulb
xor
add
das
sbb
jae
jnp
fdivs
aad
and
or
xor
dec
push
andb
adc
push
in
sbb
or
arpl
pop
loop
push
mov
pop
xorl
xchg
mov
add
hlt
es
xor
mov
dec
rolb
fwait
pop
bound
mov
out
xchg
sbb
leave
mov
pop
sub
sub
decb
mov
into
jo
push
mov
sbb
inc
adc
and
loope
lret
add
xchg
outsb
jl
fisttps
mov
js
sbb
outsl
or
and
cli
or
int3
pop
mov
out
int
jmp
hlt
std
dec
outsl
and
mov
or
es
sahf
mov
popf
stos
add
out
cs
lock
iret
stos
sbb
cmpsl
js
and
pop
fcmovu
push
ret
push
daa
xlat
sub
out
push
repnz
mov
nop
roll
popf
jbe
cmp
js
push
and
loope
fiadds
inc
hlt
in
xchg
mov
mov
add
xor
std
dec
emms
fwait
mov
shl
sbb
mov
insb
adc
lds
popa
push
dec
cmp
dec
lds
sbb
mov
mov
push
out
loop
and
leave
mov
push
xchg
mov
movsl
xor
mov
lods
push
jg
sub
dec
push
cmp
sbb
pop
push
jg
push
cwtl
aas
sarb
popa
mov
inc
testb
dec
cmp
xor
inc
mov
push
out
test
xor
daa
inc
jmp
popf
daa
dec
push
push
push
mov
rcrb
xchg
rcrl
fnsave
lods
imul
ja
cmp
mov
insl
mov
mov
outsl
lret
test
movsb
fnsave
test
std
cmc
jb
out
xor
pop
stc
mov
mov
mov
mov
sub
out
rcrl
push
outsl
xor
cwtl
pop
or
add
fdivrl
out
or
mov
and
ss
lret
sbb
sub
hlt
xor
sar
aas
cld
push
lret
cltd
scas
cld
ficoml
sbb
popa
stc
arpl
pop
in
jecxz
xchg
cmp
mov
fisttps
mov
mov
jns
sub
cltd
mov
mov
jl
sti
int
sbb
inc
pop
setbe
mov
mov
inc
aas
sbb
mov
scas
adc
and
stc
mov
dec
repz
jb
cmp
mov
outsl
sub
stc
cwtl
shl
outsl
movsl
lret
dec
sar
xor
inc
insl
sar
dec
ljmp
pop
cmpsl
dec
mov
out
pop
xchg
mov
sub
xlat
ret
bound
ret
dec
xor
xchg
mov
sbb
dec
ja
mov
loop
movsb
xchg
mov
sbb
sub
add
mov
xchg
mov
mov
icebp
mov
mov
aad
push
dec
loopne
in
out
dec
clc
or
xchg
inc
add
xchg
aaa
mov
pop
add
xor
cmp
mov
out
cmp
pop
imul
in
movsb
out
insb
adc
fmull
inc
jp
mov
aas
pop
pop
add
xor
lods
lcall
ljmp
sarl
imulb
sar
mov
sub
push
out
xchg
mov
xor
ljmp
sahf
mov
inc
inc
xchg
push
lret
lea
push
mov
and
add
mov
dec
cmp
jo
popf
mov
or
cli
sar
add
push
or
sbb
jle
cmp
clc
imul
test
xor
sarb
das
out
mov
popf
stos
popf
data16
lret
or
or
fsubr
enter
push
sti
jb
frstor
sar
sub
sub
cmp
lret
xchg
fstps
sti
iret
push
and
repz
fwait
js
iret
pop
mov
sub
test
stc
ljmp
or
add
jg
dec
sub
jl
cmc
std
in
adc
shll
leave
dec
sbb
test
adc
fdivrl
cwtl
fwait
and
dec
jp
jb
sbb
iret
outsb
xor
lret
mov
out
fabs
push
shll
inc
cmpsb
xor
sbb
fdivl
xchg
stos
in
push
lahf
insl
fcoms
jbe
mov
cmpsb
mov
or
push
fisttpl
aad
jmp
push
std
jno
jp
fldenv
or
les
mov
mov
or
fnstsw
mov
js
mov
ljmp
dec
inc
cli
xor
and
pop
bound
mov
dec
stc
and
cld
filds
jg
sbb
pop
cmp
test
sub
mov
xor
stc
ret
mov
xor
std
in
mov
jge
daa
pop
call
insb
pop
mov
push
loope
jns
mov
sub
mov
and
leave
jle
frstor
rclb
cmp
es
mov
jg
sub
xchg
pop
cld
inc
lcall
cmpsb
jne
daa
arpl
aad
cld
ds
push
jl
cmpsb
jbe
pop
or
and
and
dec
repz
jp
pop
imul
test
lret
mov
sub
xor
xchg
cmp
pop
dec
test
dec
dec
into
inc
jle
cmpsb
out
mov
or
and
rcrb
or
in
adc
push
insb
pop
sub
pop
push
sub
dec
and
cmc
inc
and
stos
inc
sysret
sarl
inc
xchg
add
andl
ficoms
in
pop
rcll
ss
aaa
mov
sahf
jp
adc
nop
popa
leave
psrlw
nop
enter
xchg
adc
je
rcrb
lods
adc
push
dec
xor
fistl
je
cmp
inc
fwait
push
ret
mov
out
and
pop
sbb
addr16
mov
gs
sub
iret
add
les
loopne
add
sub
dec
add
scas
cli
lret
lea
gs
aam
pop
dec
or
xor
adc
idivb
sbb
out
sbb
nop
lahf
lods
mov
add
je
insb
fimuls
and
jmp
sub
and
fcmovnb
test
xlat
sbb
lods
and
fimuls
int3
cltd
mov
and
add
insb
add
aad
icebp
cmp
loope
push
xor
jl
test
adc
dec
xchg
sub
adc
dec
cltd
aas
repz
je
jg
mov
dec
adc
mov
push
jo
cmpsl
out
sbb
imul
or
xchg
add
mov
nop
mov
mov
jnp
scas
jle
lea
cmp
dec
pop
xor
outsb
lods
inc
in
leave
in
mov
cmp
pop
cmp
dec
popf
sub
jae
dec
jnp
push
cli
jmp
es
cwtl
fimull
mov
add
push
ljmp
out
leave
scas
pushf
cwtl
and
sub
push
adc
push
es
dec
fnstcw
xor
and
add
fcoml
les
fstl
mov
call
push
mov
fisubs
dec
adc
std
or
orl
fadds
xor
push
in
pop
int
xorb
pop
cltd
inc
jg
xchg
sarb
dec
jp
ja
jge
and
mov
test
je
mov
pop
jp
js
sahf
clc
or
jne
push
test
inc
clc
mov
adc
jae
lahf
out
inc
test
cmp
and
cltd
sub
fwait
ret
out
sti
jp
ja
les
pusha
add
jns
push
or
imul
mov
stos
adc
lret
xor
xchg
sbb
jle
movsb
scas
xor
or
mov
daa
testb
dec
outsl
mov
push
cltd
pop
pop
cmp
stc
setl
mov
popa
sub
pop
add
jge
xchg
int3
and
xchg
jb
cmpsb
mov
pop
lcall
push
into
push
sbb
pop
mov
inc
out
jmp
push
shrl
push
and
cltd
jne
test
xor
sarl
shl
pop
int3
fsubl
es
in
jns,pn
lret
aam
fisubl
das
sub
jne
add
jge
fsubrs
test
scas
add
sub
jecxz
ficoml
xor
out
inc
lods
aam
subb
stc
mov
lock
xor
popf
aad
and
aad
cli
movsb
xchg
shlb
inc
cld
fcmovnu
stos
cld
xchg
int3
dec
ret
pop
loope
test
inc
movsb
add
push
dec
push
fisubrs
data16
adc
cmp
enter
movsl
sbb
icebp
js
nop
andl
sub
jge
pop
rcll
jb
popa
push
out
arpl
or
mov
mov
repnz
out
loop
ja
rcll
stc
sub
xchg
mov
insb
mov
inc
adc
popf
test
xor
mov
add
mov
pop
or
jno
ljmp
mov
cmpl
hlt
xchg
cltd
ficomps
adc
lret
ret
fists
lahf
sbb
jo
xor
inc
lcall
jge
lock
push
jbe
cmp
test
jle
dec
loopne
dec
sub
mov
imul
add
vmptrld
sub
xor
movhlps
cmc
xor
mov
test
adc
jo
loopne
hlt
xor
das
sti
and
ds
mov
imulb
sub
lcall
scas
sub
add
push
std
xchg
cmc
or
dec
jmp
repnz
inc
aaa
enter
popf
fs
fisttps
xchg
cmp
or
movsl
test
mov
addr16
dec
lds
bound
push
pop
mov
mov
and
les
sti
jo
mov
jg
or
int3
sub
xchg
xchg
add
xchg
inc
call
pusha
push
sbb
repz
sbb
adc
sbb
xor
scas
xlat
cmp
test
int3
sub
aad
popa
mov
xor
xor
cli
mov
fmuls
lods
cltd
and
and
inc
jae
divl
xchg
cmp
loopne
imul
loope
out
loopne
cld
mov
cmp
pop
sbb
fisttps
xchg
arpl
pop
sub
mov
sbb
adc
mov
xlat
dec
in
push
dec
mov
xchg
mov
cld
push
push
dec
dec
or
and
xchg
inc
jo
sub
fstl
lods
mov
int
jne
mov
jo
adc
inc
push
jb
sub
inc
popf
push
imul
mov
pop
fwait
pop
dec
shl
jge
imul
lret
rolb
rolb
dec
sbb
mov
mov
push
loopne
cmp
je
sahf
jl
je
faddl
push
adcl
das
js
and
subl
sub
mov
mov
stos
or
or
sub
adcl
inc
dec
divl
sub
leave
pop
outsb
cmp
dec
mov
lods
gs
xor
mov
dec
fistpl
cmp
aas
mov
bound
out
mov
inc
or
inc
xchg
into
hlt
ss
mov
mov
pusha
pop
jnp
push
dec
lcall
js
fistpl
in
clc
and
or
cli
out
pop
int
arpl
jmp
je
imull
sbb
or
inc
les
aas
popa
fucomip
outsb
add
aam
stc
cli
shr
xor
std
cltd
xor
imul
push
sub
xchg
imul
or
adc
sbb
fimuls
aad
int3
mov
outsl
pop
clc
sbb
lahf
call
push
add
gs
and
loope
pop
lds
cmp
cli
add
mov
jecxz
fsubr
aas
push
sbb
pop
adc
test
movsb
call
insb
in
cmp
test
out
nop
pop
test
popf
xor
loopne
push
mov
shll
mov
popl
cld
fs
sbb
and
shrl
fcmovnbe
iret
adc
cmpsl
pop
cmp
push
and
mov
pop
cmp
test
pop
les
jl
stos
pushf
jp
test
xchg
mov
pop
add
cmc
adc
popf
arpl
push
xor
sub
enter
inc
out
or
xchg
fcoms
push
add
lret
movsl
or
or
pusha
push
leave
shlb
addr16
pusha
pop
lods
enter
int3
push
fidivrs
cltd
rcrb
pop
add
or
push
push
inc
inc
sbb
mov
add
outsb
aam
incb
mov
fs
aas
fwait
test
jg
jp
popf
rcrl
call
push
cmc
faddl
lea
mov
cmp
xchg
insl
add
mov
data16
inc
aaa
dec
and
mov
data16
daa
mov
out
cmp
mov
pop
test
add
push
lcall
xchg
out
cmp
rcrl
pop
je
jl
jns
add
xor
ds
aas
movsl
fiadds
push
mov
mov
movsb
xchg
out
fidivrs
xchg
push
ljmp
pop
push
cwtl
sbb
test
xchg
jae
repz
imul
inc
arpl
cmpsb
cmpsb
xchg
arpl
loope
int3
mov
stos
popa
adc
pop
mov
ret
inc
out
cs
dec
dec
add
aas
mov
add
in
incl
shll
cmp
out
js
mov
push
and
or
test
lahf
adc
jbe
push
mov
or
mov
psraw
push
mov
pop
ja
push
xor
jb
mov
push
xchg
adc
mov
je
out
adc
jne
add
dec
jno
test
pop
icebp
sbbl
aaa
roll
ja
scas
pop
pushf
arpl
dec
sub
or
nop
and
xor
mov
cs
popf
insb
and
sarl
rolb
xchg
adc
mov
sbb
fcoml
call
iret
dec
jge
push
sbb
xor
xchg
dec
cmp
aam
int
xlat
sub
lret
adc
or
mov
ret
sahf
lock
jle
out
jb
clc
mov
leave
push
jp
sti
inc
push
jo
adc
ret
divb
stos
jne
xchg
cmp
xchg
mov
pop
pop
out
or
aas
push
rcrl
in
sbb
xchg
sub
lds
add
inc
testb
ret
aad
pop
pop
and
mov
lods
lcall
cmp
incb
enter
adc
outsl
dec
jmp
mov
sub
insb
ja
leave
mov
sbb
movsl
mov
test
inc
mov
aam
mov
adc
loopne
pop
cmp
mov
fistpll
cmp
test
add
addr16
or
std
stc
xor
pop
pop
iret
loopne
mov
cmc
aas
jne
or
int3
rol
lahf
shrl
popa
fidivrl
dec
lods
dec
mov
push
int
xor
iret
add
adc
dec
testb
mov
fsubl
or
jns
imul
mov
push
mov
inc
mov
mov
pop
sbb
cmpsl
pop
test
dec
pop
sub
repnz
movsl
syscall
lret
and
sub
inc
dec
pop
xorl
xchg
jb
out
fstpl
inc
in
std
cltd
xlat
clc
inc
addr16
dec
rorl
jle
push
and
repz
pop
sub
fildl
mov
cmpl
push
sbb
mov
or
xlat
shlb
sbb
inc
mov
adc
jg
int3
mov
pop
xchg
cltd
push
dec
lea
in
fbld
ja
inc
lock
adc
inc
pop
dec
in
fdivl
insl
or
out
lds
shll
enter
mov
cli
fwait
xchg
fstl
mov
jo
fcompl
mov
out
lea
jmp
xchg
add
rcrb
cmp
xor
mov
push
xchg
std
add
mov
inc
bound
mov
pop
hlt
lods
jmp
scas
sub
icebp
cmp
xor
xchg
rcrl
movsl
dec
mov
in
sub
je
aam
inc
pop
daa
push
paddw
lret
sub
xor
mov
data16
mov
mov
dec
pop
dec
icebp
pop
cmpsb
xor
and
out
test
ljmp
cli
ljmp
xor
sbb
das
dec
pop
ds
fwait
push
mov
pushl
loop
enter
inc
lds
cs
push
and
xor
pop
sub
test
dec
test
shlb
dec
fldenv
stos
test
shl
dec
xchg
into
or
sub
mov
pop
in
push
js
iret
shl
into
sbb
dec
inc
das
iret
mov
push
dec
adc
repz
mov
jo
jno
sub
aad
aam
stos
xor
xchg
pop
jmp
icebp
in
lock
mov
in
dec
xor
add
sbb
cmc
out
fidivl
fnstsw
xchg
cmpsb
mov
popa
cwtl
add
jl
repnz
sar
pushf
std
add
or
dec
cmpsb
aaa
rcr
lods
sbb
adc
mov
jg
inc
lds
int
adc
mov
gs
nop
mov
pop
add
popa
xchg
lcall
es
adc
pop
pop
jecxz
sbb
mov
mov
fistps
add
xchg
popa
mov
mov
inc
int
dec
insl
fstpt
jbe
fstpl
sub
adc
inc
xor
dec
scas
mov
test
adc
mov
jne
dec
enter
je
lods
cmpsb
cltd
or
enter
pop
push
xlat
inc
sub
aaa
imul
orl
mov
stc
je
pushf
sbb
test
jge
xor
addb
sarl
stos
leave
and
jle
mulps
test
mov
xchg
orb
aas
cmpsb
push
outsb
lcall
loop
and
sbb
incb
mov
test
mov
cmp
adc
pop
mov
clc
and
gs
dec
jg
rol
push
and
mov
cwtl
int3
jnp
jp
push
pop
push
stos
jl
dec
mov
jae
fsubp
rsm
lret
and
add
out
adc
orb
clc
imul
std
aas
mov
cli
sbb
stos
or
mov
and
insb
xchg
cmp
fists
mov
mov
lahf
pop
daa
push
fwait
pop
div
leave
movsl
xchg
in
je
fbstp
aaa
push
pop
xchg
xor
or
in
push
or
cld
sub
sbb
js
lret
push
fcompl
jno
push
or
ss
loope
mov
mov
lods
jl
fnstenv
pop
paddw
shrb
test
push
fbstp
sbb
arpl
pop
and
loopne
inc
rol
je
adcl
pop
loop
push
sbb
inc
mov
lds
sti
inc
add
and
fs
add
dec
mov
popa
addl
mov
data16
jae
or
cmp
gs
mov
xchg
idiv
sub
xor
andb
cmp
pop
inc
push
xor
xor
push
mov
das
hlt
inc
dec
inc
push
out
adc
cwtl
jae
rorb
ret
or
lds
aad
cltd
inc
jl
data16
into
pop
add
gs
fsub
xchg
or
and
lcall
insl
jbe
fiadds
xchg
jnp
leave
insl
cmp
inc
loope
pushf
xor
jmp
mov
cmp
outsl
mov
jg
lcall
xchg
cmp
xchg
and
sbb
pop
or
ret
jl
into
inc
inc
dec
ss
loope
mov
xor
hlt
inc
push
sti
out
dec
sbb
arpl
jnp
out
sub
xlat
mov
inc
or
push
ror
push
jle
cmpsb
loop
data16
fiaddl
mov
jp
push
jecxz
std
xor
adc
ret
addr16
and
mov
mov
mov
or
or
sub
lods
pop
dec
cmp
lret
stos
inc
push
xchg
in
jp
xchg
iret
mov
rorb
jbe
pop
lahf
sbb
jmp
xchg
sub
add
xchg
jle
xor
sub
or
mov
dec
sub
shl
push
or
add
cmc
dec
xor
mov
shr
pop
mov
outsl
fwait
sti
hlt
lret
clc
and
jmp
mov
into
idivl
stos
movsl
xor
cli
testb
aad
loopne
inc
mov
fcoml
push
mov
jecxz
dec
cwtl
add
pop
cmc
jb
sbbb
cld
jns
mov
sub
sbb
ret
inc
cmp
hlt
and
xor
loop
or
icebp
aam
in
lods
mov
aas
sbb
mov
pop
mov
out
adc
ja
jmp
xor
pushw
xchg
inc
inc
and
sarb
add
insb
xchg
mov
xor
mov
push
ds
push
xlat
fdivrs
jmp
add
rol
arpl
push
mov
pop
sub
push
ds
jns
mov
movsl
stc
mov
cmp
xor
push
or
in
add
jne
loopne
nop
cs
jns
xchg
sub
inc
popf
push
mov
xchg
in
mov
sub
or
out
sbb
adc
jmp
fmull
jmp
xor
pop
pop
xchg
lock
outsl
rcll
shrb
or
les
adc
inc
push
mov
cmc
popf
movsl
fldenv
xchg
pop
jg
ret
mov
jp
ret
shll
lods
in
cmp
in
push
fnstcw
lret
gs
dec
fldl
pop
jo
lret
add
call
dec
xchg
jp
and
inc
and
push
fadds
jg
rol
fdivs
adc
xlat
ljmp
jo
clc
mov
and
mov
adc
add
sub
sbb
or
mov
push
sar
cld
cmp
pushf
and
or
ret
aaa
add
jbe
es
inc
call
mov
rcrb
sti
and
pop
cmc
fnstenv
das
pop
or
cmp
mov
cs
cmp
addr16
push
in
in
fadd
push
sub
sub
enter
popf
pop
mov
adc
pop
int
pop
out
lock
xchg
dec
divl
cltd
lea
jl
cwtl
add
mov
adc
mov
push
xor
sti
dec
repz
in
add
scas
add
mov
ja
mov
mov
call
dec
pop
push
insb
scas
inc
mov
sub
push
cmc
scas
xor
pop
cwtl
int3
xor
sbb
mov
jecxz
dec
dec
cmpsb
cli
addr16
cmp
out
xor
mov
xchg
push
add
out
push
lcall
inc
fstp
jno
and
fdivs
and
jg
ljmp
in
ja
inc
lret
cmp
popa
jp
ficomps
pushl
les
and
ret
dec
add
jno
push
or
shr
jp
fistpl
pop
sub
std
jp
mov
pop
jecxz
loop
ss
inc
mov
sub
mov
cmp
xchg
xchg
sti
xchg
inc
int3
movsb
push
dec
pop
ljmp
dec
int
rorl
push
cli
jmp
cmc
push
add
mov
mov
fsub
dec
out
imulb
add
in
sbb
push
mov
pop
dec
jbe
inc
out
add
sub
lea
adc
stos
xor
insb
stc
sahf
int
fiaddl
pop
bound
cld
adc
out
and
addr16
or
inc
mov
mov
mov
mov
in
shll
insl
add
inc
arpl
shrl
pop
inc
dec
test
mov
dec
insb
xor
mov
mov
hlt
into
call
inc
or
lahf
inc
out
pop
dec
rorb
pop
movsl
ret
outsb
adc
jp
ss
sub
add
xchg
ret
in
test
xor
stos
push
cmp
sbb
les
imul
ret
pop
fidivrs
stos
cmpl
addr16
aaa
fists
sar
lea
nop
or
mov
jp
ficomps
adc
movsb
jns
mov
cmpsb
in
sbbb
jle
xor
fadds
lcall
xlat
movsb
or
repz
mov
rcl
mov
dec
fxch
js
sub
sub
subl
out
cwtl
cmpb
mov
jle
xchg
inc
das
fldcw
ficoml
or
sti
push
or
or
xchg
jle
iret
inc
pop
stos
mov
mov
add
ljmp
sub
lock
push
jp
shll
notl
pop
mov
lds
push
and
jg
sbb
cltd
or
adc
xor
mov
xchg
int
mov
pop
dec
arpl
cli
stos
test
lret
out
push
xor
mov
sub
sub
outsl
xor
mov
xor
lock
scas
mov
adc
out
pop
mov
outsb
stc
scas
or
mov
sbb
jno
pop
fsubr
in
lds
call
mov
cmp
lea
rcl
push
xchg
jecxz
mov
das
cmp
push
xchg
add
pop
sbb
xchg
sub
mov
sbb
jb
ljmp
cli
cmc
hlt
cmpsb
add
sbb
dec
pop
pop
jecxz
jmp
inc
clc
imul
repz
les
repnz
imul
aas
in
mov
and
mov
mov
sub
pop
ja
mov
inc
scas
lret
jns
in
mov
cltd
xchg
jae
pop
push
sub
fadds
lea
push
dec
cmp
and
mov
mov
iret
into
cwtl
adc
cli
pop
mov
push
jg
jb
or
iret
pop
and
mov
icebp
into
shrl
cmpsb
lods
add
cmpsb
rol
shll
jecxz
sti
ret
xchg
fisubrs
jl
sbb
and
xor
push
outsl
popf
iret
sub
and
nop
cltd
arpl
jb
stos
ss
add
in
add
fldcw
xchg
insb
test
xor
cltd
mov
int3
shrl
push
mov
stos
lret
mov
push
dec
ljmp
sbb
repz
lock
dec
and
lahf
mov
and
cmp
xlat
stos
jne
cmc
loope
xor
mov
xor
ret
das
push
imulb
insb
fwait
or
je
mov
dec
je
pop
push
mov
jne
jae
pop
push
in
outsb
ret
add
scas
mov
push
pop
xchg
push
or
popf
cli
cs
sub
fwait
xchg
cmpl
out
pop
in
insl
daa
or
adc
loop
dec
add
sub
mov
daa
inc
mov
push
push
rorb
or
dec
jb
out
cmovb
add
mov
ja
das
pop
dec
bound
sbb
mov
sub
xor
in
loopne
rorb
into
cmpsl
xor
xorl
pop
mov
or
test
sbb
loopne
sub
push
stos
jae
negb
mov
lahf
sti
mov
flds
jle
push
fbstp
cltd
repz
mov
mov
out
aam
or
adc
sub
mov
sbb
scas
lahf
jae
add
push
mov
pop
xor
call
ror
divl
ret
stos
fsubr
add
sub
outsl
add
dec
iret
jnp
cmp
sarl
pusha
jns
jecxz
pop
cmpsl
push
add
in
nop
add
mov
int3
fsubrl
pop
ljmp
mov
adc
pop
dec
mov
inc
push
push
pop
lea
cld
fbld
jp
popa
nop
adcl
pusha
inc
leave
jg
cmpsb
jae
mov
or
push
xorb
outsb
dec
mov
jbe
inc
add
xor
cmp
push
and
ljmp
popa
xchg
mov
out
pop
cmpsb
push
rorl
or
jb
lcall
mov
rol
bound
jbe
lret
xchg
imul
jae
mov
scas
scas
adc
scas
pop
std
cmp
das
ljmp
popf
jbe
andb
in
in
push
rorb
adc
add
test
fdivr
push
lock
dec
rclb
or
dec
lods
insl
ror
inc
xchg
movsl
adc
ret
sub
cmpsb
iret
movsl
enter
shlb
mov
mov
adc
ret
andl
mov
inc
mov
add
sub
mov
lret
in
mov
movsb
rcrl
adc
loope
insb
xor
mov
mov
jl
mov
cmpsl
adc
cmpsb
inc
out
in
je
mulps
cmp
mov
jge
sub
aam
test
popf
jnp
pop
das
in
scas
movsb
add
pop
add
hlt
out
ret
mov
pop
mov
jae
bound
or
xchg
fcomp
cmpsl
inc
and
mov
jmp
jno
pop
sbb
shlb
scas
push
jmp
or
sbb
dec
jno
sbb
xlat
clc
stos
add
jmp
stos
xchg
call
aam
mov
push
insl
rcrb
push
jno
leave
lds
push
lret
add
sbb
xor
jge
pop
and
add
int3
mov
xchg
movsl
pushf
push
or
fdivs
mov
orb
adc
lods
aad
or
mov
iret
ret
in
dec
mov
jge
inc
xor
enter
xchg
test
daa
dec
dec
pop
data16
test
inc
in
in
aad
jno
addr16
inc
inc
sti
adc
inc
arpl
shlb
jno
jb
adc
lahf
cmpb
out
add
xor
fisubrs
xchg
jo
jl
xor
mov
sub
test
aas
out
std
clc
xor
cmp
test
addb
mov
xor
jns
jo
in
nop
stos
nop
andl
mov
jnp
negl
cmpsb
add
sub
or
adc
pop
rorl
or
test
jmp
adc
rolb
jp
loopne
sarl
sbb
movsb
rorb
lret
enter
inc
ror
addr16
cmpsl
andb
ret
fnstsw
pop
in
mov
addr16
cltd
xchg
sbb
int
pusha
sbb
jbe
sub
xchg
xchg
arpl
fs
mov
cld
std
out
into
mov
inc
shrl
and
lea
outsb
jns
jecxz
and
mov
mov
dec
movsb
and
push
mov
pop
jae
push
mov
mov
stc
aas
push
jne
mov
mov
cltd
out
xchg
mov
cwtl
fwait
addr16
loope
sbb
mov
pop
in
and
lret
sarb
pushf
mov
or
jge
fstps
test
fidivrs
and
dec
adc
mov
movsb
int
cmpsl
push
jo
call
int
out
pop
pusha
adc
ret
or
jp
cltd
jns
shlb
sbb
sar
lds
pop
cmpsb
negb
pop
daa
dec
pop
pop
cli
add
xchg
mov
ficoms
popa
sub
cmpsl
pop
adc
add
or
roll
jo
imul
pop
sbb
mov
addr16
push
loope
mov
mov
and
outsb
xchg
push
mov
push
dec
loop
cs
fisubrs
mov
xchg
lahf
cs
and
fbstp
fbld
jg
push
xor
inc
fstpl
vpaddd
fsubrs
inc
lret
roll
scas
cmp
push
push
fsubl
mov
or
or
inc
add
or
cmp
in
lret
xor
add
adc
push
idivl
ret
jecxz
mov
test
sbb
push
in
ljmp
push
loopne
stc
mov
push
imul
shrl
pop
mov
cmp
lahf
lcall
and
in
jg
lds
inc
out
xor
push
and
das
xchg
das
sahf
fstpl
pop
test
jl
lret
iret
mov
pop
test
inc
and
jo
imul
inc
cmp
sbb
outsb
or
test
dec
pop
jbe
call
sbb
sbb
mov
sub
or
lods
mov
dec
dec
loopne
dec
popa
or
mov
sub
lods
push
addl
outsl
adc
or
pop
mov
hlt
testb
test
mov
stos
pop
or
cmp
pop
xchg
xor
bound
mov
and
fwait
cmp
mov
outsl
repnz
xchg
loop
xchg
sbb
sahf
je
and
jno
fdivrl
les
stos
push
or
cmpl
xchg
test
out
sub
clc
lret
lea
mov
sbb
dec
cmovnp
aad
xlat
xchg
hlt
rolb
fcoms
mov
xor
xchg
call
icebp
test
add
bound
ds
mov
mov
or
fldl
mov
stc
lds
and
imul
jl
sub
or
inc
jmp
outsb
xchg
push
in
loope
sahf
or
neg
pop
enter
sub
fisttps
or
jb
repnz
mov
and
rcr
hlt
pop
in
mov
jbe
bound
fs
or
gs
pop
pusha
lds
shll
in
iret
test
mov
push
pop
cmp
and
sub
pop
jb
jne
mov
add
lods
mov
xchg
or
out
sahf
inc
int3
dec
sub
mov
test
mov
int3
xchg
xchg
test
pop
lock
into
and
dec
retw
jnp
pop
cltd
shlb
mov
outsb
lods
decl
popa
cld
and
dec
clc
mov
test
push
dec
in
lea
lahf
jg
sbb
inc
jmp
lahf
cld
loopne
sub
and
push
sub
jg
add
pop
rclb
push
and
jge
in
mov
loop
insb
out
int
cli
jl
pop
sar
gs
ret
add
cmp
push
popf
test
or
dec
shll
and
pusha
ret
mov
mov
in
push
stos
xchg
dec
mov
add
push
fldt
shlb
jne
push
xor
lret
aaa
cwtl
out
cmpsb
adc
pop
mov
jbe
and
or
sbbb
jp
and
sti
imul
mov
sbb
mov
icebp
mov
pop
dec
lret
scas
dec
lock
push
pop
daa
mov
sti
add
in
test
push
sbb
push
scas
jne
rol
dec
les
movsl
push
xor
rcrl
or
repnz
shr
les
flds
int
in
lock
aam
into
aas
xor
sti
mov
push
out
lds
inc
sbb
arpl
loop
jg
sub
stos
mov
pushf
or
cmp
dec
jecxz
dec
pop
insb
push
mov
adc
loope
cmp
stc
push
imul
scas
xor
adc
nop
popf
loopne
mov
mov
or
mov
std
push
push
fnstcw
test
mov
or
arpl
divl
mov
das
adc
scas
decl
pop
xchg
cli
iret
out
out
mov
test
push
inc
or
cmp
cmc
vmaxsd
dec
cmpsb
aam
jmp
std
jne
aaa
or
cli
out
dec
sbbb
lahf
xor
repnz
rclb
pop
push
mov
push
sbb
inc
shlb
repz
orl
lds
mov
ret
sahf
push
addr16
cmc
call
fsubrs
mov
mov
mov
out
sub
inc
adc
inc
adc
jge
and
insl
mov
fwait
test
pusha
dec
push
jno
hlt
ficomps
cltd
in
dec
out
add
roll
pop
stc
test
mov
sub
insl
andl
push
lock
ja
icebp
inc
aam
aam
sbb
test
flds
dec
pop
adc
xchg
lea
mov
fs
and
push
lods
ror
push
jbe
xchg
push
shlb
lcall
pop
insl
mov
push
push
nopl
addr16
jmp
negb
dec
sti
mov
outsl
mov
push
lods
sahf
push
sbb
cmpsb
pop
mov
je
xor
push
pop
dec
repz
jle
out
lret
ja
inc
ja
mov
stos
jae
imul
xchg
testb
fimull
and
mov
call
push
sub
icebp
add
dec
ret
cmp
out
in
dec
and
xor
push
ror
mov
stc
shlb
pop
cmp
sub
lods
test
sub
cwtl
fwait
outsb
jl
fwait
add
xchg
pop
sarl
add
jb
mov
mov
movsb
xor
stos
and
or
push
and
or
repz
not
pop
clc
shrb
push
sbb
xchg
aaa
pusha
cs
sbb
pushf
popf
enterw
or
sahf
lock
lock
imul
shl
in
dec
jecxz
pusha
push
in
add
inc
stos
mov
popf
dec
in
xchg
mov
popf
aad
insb
es
mov
add
leave
imul
aaa
imull
mov
mov
in
jecxz
cmp
out
insb
gs
pop
mov
sub
scas
movsb
sbb
jle
adc
mov
inc
sbb
loope
pop
xor
in
mov
add
push
idivl
sahf
pop
push
mov
inc
rorl
mov
lret
sarb
or
and
ficomps
xor
push
call
mov
mov
cwtl
jae
dec
inc
insb
sbb
out
inc
outsl
fisubs
sub
lock
ja
mov
cs
jg
stc
or
addr16
insb
jl
add
adc
adc
stos
ss
inc
lcall
lds
sub
cs
push
cmpsb
out
or
imul
cmc
adc
mov
or
and
jge
fmulp
int3
push
jae
scas
dec
ret
pusha
hlt
sbb
push
mov
test
mov
imul
insl
enter
and
mov
addb
sbbl
fxch
test
adc
sbb
mov
adc
mov
jmp
cli
decb
jge
adc
std
sub
dec
pusha
and
gs
dec
sbbl
popf
sbb
fwait
inc
push
cmp
inc
or
push
aaa
lds
jle
dec
pop
push
and
dec
mov
pop
lea
jne
test
insb
loope
cwtl
dec
and
pop
or
or
leave
xchg
insl
enter
stc
or
cmpsb
in
popf
inc
and
setb
or
mov
pop
and
or
cmp
inc
dec
inc
mov
rorl
mov
mov
cmp
ss
xor
xor
data16
sub
pusha
cmpsb
xchg
or
dec
cmpsb
nop
pop
adc
mov
jno
std
loope
int3
rcrl
aam
mov
xchg
or
fwait
pop
outsb
mov
xor
or
mov
add
pop
int3
jp
cwtl
or
fnstcw
inc
xor
ss
lock
push
lcall
xchg
pop
lahf
sub
dec
xchg
mov
rol
xchg
lods
cmpsl
les
cmp
ret
imul
shrl
inc
push
and
daa
xchg
xor
jno
mov
ja
pop
push
imul
inc
xchg
mov
push
mov
sub
and
add
ret
outsl
pushf
jecxz
push
adc
pop
stos
sbb
arpl
mov
aas
movb
pop
rolb
in
fnstsw
cmpsb
pshufw
test
add
xor
xlat
cld
es
int3
subps
fldl
bound
mov
push
mov
cmp
out
dec
pop
enter
fdiv
ja
fdivr
and
sahf
and
test
pop
hlt
sbb
ret
xchg
movb
scas
cmp
nop
inc
leave
inc
inc
push
cld
insb
push
mov
inc
stc
sbb
cli
lahf
xor
cmp
push
cmp
sarl
jecxz
lods
ret
adc
jne
stos
push
in
enter
cld
out
push
lea
xor
xor
add
dec
mov
jnp
js
int
outsb
dec
or
ret
aam
iret
jle
mov
cmp
cld
sbb
aam
cwtl
mov
push
dec
gs
sbb
out
fwait
popf
es
sbb
jmp
xlat
in
adc
in
and
clc
push
loop
inc
shrb
sub
xor
inc
enter
sti
mov
bound
ljmp
sub
dec
pop
fsts
push
out
and
lahf
ret
loop
outsl
inc
jg
jmp
sbb
cs
dec
adc
ficoms
test
ret
and
cmc
jg
xor
mov
lcall
pop
cmp
pop
iret
jo
xchg
jp
sub
inc
insb
scas
lcall
sub
out
cs
mov
daa
adc
rcll
jge
test
dec
shll
loop
and
lock
into
jl
insb
mov
test
into
insb
movsl
inc
lock
imul
push
outsl
stos
ljmp
push
iret
and
or
xchg
aas
sub
push
test
stc
mov
rolb
jo
out
out
sbb
lret
lods
add
ds
pop
sub
mov
idiv
add
or
jmp
sbb
movsl
sahf
jp
aam
pop
into
fidivl
cwtl
xlat
hlt
sbb
lahf
leave
or
or
sbb
xor
push
aad
adc
inc
push
mov
insb
xchg
rcll
push
cmc
out
std
mov
mov
add
sbb
mov
arpl
sbb
in
pop
push
jno
lods
std
imul
push
cmpsb
lods
xor
in
fdivrl
push
ficoml
mov
ja
ljmp
ss
cld
mov
aas
adc
mov
mov
cmp
cmp
cmp
mov
mov
xchg
rcrl
xor
in
inc
rolb
imul
xchg
mov
mov
xchg
lock
cmp
test
out
xor
call
xor
repz
aaa
pop
rcrl
bound
jae
mov
nop
sbb
insb
push
adc
je
cwtl
je
in
adc
lahf
mov
test
cs
fwait
push
sbb
int3
insl
cmp
push
or
jge
sub
outsl
pop
inc
push
lret
cmp
mov
push
sbb
aad
xchg
notb
sahf
lods
sahf
in
mov
pop
ret
push
jno
sarb
push
mov
and
adc
inc
jae
aaa
push
dec
adc
aam
pop
orl
or
movl
pop
faddl
in
mov
mov
int3
into
xchg
aam
jp
bound
sub
mov
dec
pop
fst
pop
enter
aad
or
jl
mov
sub
popf
jb
push
bound
js
jmp
inc
or
lods
inc
cmpsb
mov
outsb
stos
xor
push
push
pop
mov
xlat
push
in
xchg
or
stc
stc
call
dec
and
das
mov
mov
mov
cltd
ret
dec
jno
inc
fisubrs
sub
sub
stc
push
jno
repz
jae
pop
inc
mov
out
pop
lds
xor
inc
mov
lret
repnz
add
imul
icebp
inc
dec
mov
xchg
rclb
cwtl
dec
mov
push
dec
sub
pop
fsubrl
es
aam
movsl
jmp
enter
mov
das
clc
pop
and
rclb
sub
jge
ret
push
sub
sbb
out
xchg
push
inc
rclb
sub
mov
bound
in
xchg
mov
iret
jg
insl
inc
pushf
xlat
loop
sub
mov
dec
pop
sub
ret
scas
push
out
aas
jmp
fbstp
in
int
mov
push
cli
xor
lcall
idivb
dec
jg
inc
das
mov
std
pop
std
inc
adc
fisubs
push
repnz
cli
movsl
aam
add
andl
lret
ja
fcmovu
dec
fdivs
rorb
adc
aas
iret
in
cmp
negl
push
inc
and
iret
mov
mov
push
shlb
add
mov
sub
adc
adcb
mov
and
sub
ds
sub
fistl
pop
xchg
sub
jecxz
pop
and
aas
fistpll
mov
outsb
dec
mov
daa
les
inc
cltd
mov
bound
pop
jmp
je
jg
mov
xchg
cmp
push
loope
mov
mov
lcall
lds
repz
dec
push
les
out
inc
mov
aad
pop
lods
push
add
lods
call
lret
sbb
pusha
and
imul
xchg
ret
jmp
mov
xor
jno
aaa
jns
gs
fwait
loopne
jl
mov
insl
xor
pcmpeqw
bnd
mov
popa
enter
mov
inc
ljmp
negb
lods
hlt
push
sbb
push
andb
cmpsl
mov
lahf
ret
adc
cwtl
mov
xor
pop
xor
lods
insb
fs
inc
fistl
pop
jbe
testl
gs
ret
mov
fwait
jmp
adcb
mov
iret
add
leave
fld
sub
lret
pop
imul
add
xchg
push
in
addb
jbe
add
addr16
pop
fisubl
lock
mov
jns
mov
cmpsb
testb
push
stc
cmp
cmp
mov
push
jg
movb
enter
dec
rclb
sbb
push
xchg
mov
mov
cmc
pop
xor
movsb
popa
sbb
add
int
mov
loopne
pushf
out
mov
and
cmpsb
adc
xchg
clc
xor
add
cli
int3
lods
add
fldcw
cwtl
push
ss
jnp
dec
fldenv
jo
push
jno
test
fwait
pop
pop
sub
cld
cmp
ss
jns
push
sub
push
ss
sbb
add
inc
nop
clc
loope
jg
je
lahf
cmp
add
hlt
inc
inc
out
and
clc
push
cmp
in
mov
pop
shrl
mov
mov
add
push
and
js
je
nop
mov
push
in
or
repnz
inc
fxch
out
shlb
loope
out
or
add
notl
iret
xchg
into
ja
sub
xor
and
pop
mov
int
xor
mov
pop
stos
in
mov
push
in
mov
xchg
aas
inc
or
push
pusha
mov
push
pop
int
mov
fwait
and
and
dec
mov
ficoml
inc
in
add
and
adc
xor
test
sub
mov
aaa
nop
sbb
shl
xorl
test
xor
xor
mov
push
enter
jle
cs
xchg
or
push
ja
sbb
fs
or
fnsave
pop
in
out
nop
jb
mov
mov
sbb
jge
mov
cli
push
and
mov
mov
push
xchg
call
fisttpl
sub
fidivs
dec
sbb
jmp
inc
leave
ret
mov
lods
cmpsl
fbstp
cmpsl
aas
into
xchg
rorb
push
jae
dec
fsubrl
push
or
fcoms
dec
les
xchg
adc
push
dec
sub
imul
flds
and
stos
cltd
xor
cli
sbb
adc
sti
test
mov
jg
push
sahf
fcompl
sub
int3
cmp
mov
cwtl
je
mov
sub
sub
xor
lret
fwait
cmp
lods
push
sbb
popa
adc
pop
and
add
std
mov
cltd
push
fldcw
or
aas
or
repnz
popf
sub
sbb
cmp
adc
xchg
mov
push
xchg
mov
mov
and
cwtl
mov
outsl
cmp
mov
les
jp
lahf
sbb
sbb
sub
cmpsb
add
adc
rdpmc
test
pushf
mov
mov
xchg
dec
popf
es
mov
xor
cmp
sub
mov
out
sub
cltd
xchg
stc
fcmove
cmp
lds
xor
cmc
mov
jle
pop
out
or
mov
jnp
ss
sub
pop
iret
and
ja
in
sbb
adc
push
icebp
stos
ss
rcl
mov
pop
pop
insb
cmp
scas
sub
dec
pop
jae
fcmovnu
cli
fs
xorl
mov
ja
mov
je
dec
xor
pop
jae
cmp
xchg
mov
ret
popa
xor
pop
stos
leave
es
imul
cli
pop
jle
add
filds
outsb
fs
xchg
stos
push
fdivrs
fisttpl
lea
xlat
jae
and
loope
and
and
push
mov
mov
or
dec
cmpsl
popa
inc
outsb
mov
sbb
lret
repz
fxch
inc
shlb
insb
push
lods
lea
push
cltd
imul
loop
js
push
mov
dec
std
push
scas
mov
push
test
push
hlt
mov
out
stos
adc
pushf
add
imul
cld
pop
jle
test
mov
dec
cmp
in
addr16
lcall
data16
mov
sbbl
mov
outsb
dec
rorl
sub
xor
adc
adc
gs
std
lahf
or
arpl
das
insb
sub
or
es
lea
adc
les
lea
jne
stos
sbb
and
addr16
xchg
lret
push
bound
mov
sbb
out
sbb
sbb
inc
inc
pop
add
fisubrl
fimull
xor
push
jp
sub
sub
out
loopne
rclb
push
xorl
inc
add
sahf
arpl
orb
xorb
into
jne
xchg
sbb
fidivl
or
or
cltd
jbe
in
jg
and
fdivr
dec
test
pushf
mov
clc
adc
mov
push
test
cmpsl
adc
jge
sbb
jo
cmp
imul
rorl
add
push
adc
stos
cmp
sub
lea
fwait
cld
sub
daa
scas
enter
hlt
outsl
adc
cli
jbe
xchg
mov
in
inc
push
adc
shll
mov
in
movsb
pop
nop
test
out
es
enter
cmp
mov
ss
ror
pop
ror
push
xor
sbb
loope
jecxz
jle
sti
ss
in
push
mov
ss
sbb
add
and
mov
jp
push
jle
imul
or
outsb
ficoml
neg
sti
xor
mov
mov
ret
sbb
adc
jge
add
sbb
or
aaa
mov
neg
sub
mov
out
divl
sub
cmp
cmp
add
jle
push
rclb
xor
and
fstpt
enter
aas
out
mov
insb
test
es
cmc
mov
cmp
fwait
cmpxchg
mov
jecxz
adc
std
cld
es
mov
lds
xchg
pop
xchg
pop
mov
push
in
outsb
pop
sbbl
adc
call
fdivl
pop
enter
jp
dec
das
mov
cmp
mov
and
stos
ds
inc
xchg
jl
mov
sbbb
int
arpl
stos
cmp
xchg
xchg
das
mov
jl
mov
aad
inc
int3
xor
mov
bound
adc
fs
push
cli
pop
dec
sub
mov
aad
inc
mov
adc
je
das
movsl
or
frstor
push
push
jle
add
test
or
mov
xchg
shrl
dec
mov
xchg
jl
mov
out
mov
lea
int
popa
in
jns
pop
into
incb
sahf
adc
aaa
pop
or
and
sub
push
icebp
dec
sbb
jge
mov
jl
ja
testb
out
movsb
icebp
adc
lret
ss
dec
mov
sti
inc
test
fs
daa
add
dec
mov
adc
nop
mov
sbb
push
pop
aam
cmpsl
cmp
js
jp
adc
cld
outsl
div
repz
out
xchg
push
add
mov
add
dec
ret
ljmp
out
dec
shll
ds
jo
orl
addr16
ljmp
jne
mov
cmc
insb
xor
sbb
sub
call
add
daa
outsl
fnstcw
repnz
cmpsb
imul
cmp
lea
sub
into
arpl
add
pop
sbb
cmpsb
inc
pushl
iret
push
mov
jae
imul
jmp
mov
inc
sbb
dec
loopne
mov
ret
bnd
hlt
adc
sbb
cld
test
divb
loop
sarl
or
fstpl
cwtl
imul
std
orb
stos
ja
inc
pusha
xchg
jne
int3
call
pop
push
int3
shll
pusha
in
jmp
cmp
xor
int
lods
xor
dec
shll
test
pop
fwait
cltd
add
mov
xchg
sarl
mov
dec
add
in
mov
dec
ficoms
jns
adc
sbb
loopne
mov
xor
mov
push
sbb
push
sbb
cmp
jmp
jne
ret
clc
test
test
idivb
arpl
movsl
data16
adc
mov
adc
test
sbb
movups
in
daa
xchg
adc
pop
sbb
dec
cmpsl
and
push
pop
pop
lds
mov
loope
test
lods
mov
icebp
xor
stos
les
rcrl
popf
dec
movsb
mov
inc
mov
xchg
mov
push
add
ja
inc
int
lret
pop
loope
sub
fimull
rolb
dec
adc
pop
cmp
add
push
and
mov
js
pop
xor
push
fmull
cmp
sbb
lcall
cmp
icebp
daa
mov
dec
inc
loopne
push
dec
adc
xchg
mov
pop
rorl
dec
inc
notl
addl
pushf
cmp
inc
cmpsb
daa
inc
loope
shl
test
insb
enter
add
stos
iret
mov
mov
std
sub
inc
xchg
inc
mov
lahf
daa
sbb
pop
xchg
fwait
out
mov
mov
dec
cmpsl
movl
jmp
cmc
pop
dec
ficompl
aaa
xor
pusha
out
mov
inc
paddsb
or
push
sbb
inc
loope
jg
cli
or
repz
das
mov
sub
jp
sbb
push
add
gs
ss
imul
xor
jnp
add
dec
dec
dec
jle
cwtl
mov
pop
lods
lret
dec
fisubs
adc
or
push
xchg
cmpsb
int
outsb
imul
fcomps
mov
aaa
mov
mov
mov
movsl
ljmp
sahf
mov
mov
mov
adc
int3
and
enter
pop
lret
adc
rorb
push
test
mov
imul
sbb
push
xor
loop
fcmovu
iret
pop
enter
push
in
pop
ss
push
sbb
add
ds
xchg
sahf
sub
pusha
cs
pop
ret
dec
lret
pop
test
jae
aaa
lret
push
add
add
mov
ret
push
xor
mov
and
jae
add
xchg
cld
icebp
xchg
sbb
inc
ljmp
sub
dec
cmc
xchg
sbb
lcall
inc
xchg
xchg
and
or
jmp
icebp
inc
clc
das
in
imul
je
xchg
nop
aas
mov
adc
jbe
jbe
xchg
mov
pop
push
jg
cmpl
adc
inc
je
jmp
add
xor
sbb
fcoms
mov
nop
jbe
roll
lods
int
ljmp
add
mov
mov
or
cli
mov
and
jmp
mov
nop
pop
es
scas
cmp
fimull
mov
mov
cmp
sarb
scas
shrb
push
insl
fmuls
adc
lahf
js
pop
dec
in
mov
lock
popf
cli
sahf
insb
lock
into
push
test
sbb
inc
mov
inc
xchg
test
mov
mov
sbb
sub
into
lds
push
mov
add
hlt
das
pop
fwait
aas
pusha
jns
xchg
or
sahf
les
xorb
cld
cmc
push
mov
lds
popa
popa
push
std
ss
push
mov
mov
or
adc
cmp
mov
push
add
xchg
lret
mov
jb
adc
ss
outsl
jo
jge
mov
iret
scas
cmpsl
int3
xlat
add
push
ss
das
dec
cmp
and
jno
cs
adc
lock
mov
or
fwait
pop
gs
jp
jmp
adc
cmpsb
call
or
test
adc
test
loope
add
lea
bound
sbb
add
out
outsb
gs
fiadds
push
scas
fwait
mov
jne
push
or
sbb
and
xor
loopne
sub
pusha
pop
add
jns
out
push
outsl
fnstsw
adc
lahf
out
scas
jnp
cwtl
mulb
pop
loopne
adc
inc
lahf
dec
mov
jmp
xchg
in
lock
xor
mov
bound
lods
hlt
add
pop
pop
cmp
xor
push
dec
jbe
xchg
out
sbb
loope
les
jnp
pop
mov
add
add
fnstsw
aas
mov
inc
jg
dec
sbb
in
push
hlt
cmp
bound
lret
loop
call
jae
aas
test
rcll
sbb
inc
pop
in
loop
outsl
mov
in
xchg
popa
out
xor
cmc
xchg
push
ret
test
mov
mov
mov
out
sub
pop
loop
pop
sar
jmp
inc
dec
sub
data16
test
inc
push
xchg
dec
push
mov
fdivl
xor
jo
mov
adc
jno
icebp
jge
or
inc
pusha
jne
fs
mov
inc
sub
xor
imul
push
or
xchg
mov
jns
cmp
out
cmp
scas
mov
add
push
pop
jge
sub
stos
fistpl
lahf
lods
jmp
xlat
pop
out
lods
jns
mov
or
jmp
lret
adc
mov
dec
cmp
in
icebp
stos
fwait
adc
test
les
jo
xchg
mov
test
push
aad
adc
iret
xor
jns
adc
sbb
clc
fwait
mov
or
push
flds
cvttps2pi
jle
or
arpl
fildll
xor
xor
sbb
repnz
mov
sub
or
cs
or
pop
cmpsl
mov
jle
shlb
es
dec
sub
add
fwait
jp
icebp
and
cmpsb
and
fistpll
test
pop
jle
scas
call
push
push
dec
lods
mulb
push
cmc
jno
lret
cltd
jnp
inc
pop
jmp
xor
and
xchg
push
xor
cld
push
ss
mov
add
inc
lret
test
fcmovnbe
and
jo
jne
cmp
aaa
sbb
test
jle
mov
adc
pop
sahf
adc
popa
sbb
adc
int
push
imul
mov
cmp
call
gs
fs
in
data16
jae
push
in
sbb
stos
xchg
data16
ficomps
fs
ret
jns
popf
jno
xor
out
mov
popa
aam
mov
inc
sbb
fmuls
cltd
xchg
cmp
shlb
adc
jbe
dec
lcall
jp
dec
or
jnp
cmpl
sub
pop
xor
xchg
dec
sbb
dec
testb
ret
adc
subl
mov
mov
sbb
and
xor
shlb
mov
push
sub
mov
std
dec
shr
or
into
addr16
test
shll
adc
testb
adc
pop
fsubrl
test
pop
mov
adc
test
xchg
lahf
fldcw
fwait
aam
faddl
es
nop
sub
lock
mov
push
loop
repz
jns
xor
mov
dec
mov
jmp
iret
clc
shrl
jbe
mov
imul
in
inc
mov
je
iret
push
int3
or
pop
mov
pop
sub
repnz
movsb
in
jo
mov
loop
addl
fsubp
dec
pusha
mov
mov
cld
inc
repz
mov
ds
sahf
xchg
sub
loope
push
add
test
lret
movsb
xchg
aas
push
pop
sbb
popl
shrb
and
pop
xchg
fistps
ds
out
filds
lahf
stos
push
inc
test
add
mov
mov
jl
cmp
sarl
and
pop
aad
mov
push
adc
adc
inc
lods
call
push
in
mov
inc
add
jecxz
sarl
andb
test
movsb
add
gs
xchg
lock
pop
sahf
mov
out
pop
or
xchg
adc
in
int
arpl
jp
out
pop
push
mov
insb
insl
dec
repz
das
and
pusha
lods
pop
push
bound
ja
xchg
push
xor
ja
stc
out
dec
stos
mov
aas
inc
sti
daa
addl
inc
stos
fsts
mov
mov
mov
test
and
pop
cmc
adcb
sbbb
fldenv
loope
sbb
popa
mov
pop
mov
cmp
add
and
fnstenv
shlb
mov
push
adc
xorl
xrelease
add
jns
xor
inc
or
pop
pop
pop
sahf
add
into
pusha
repz
sub
and
ds
insb
pop
mov
pop
nop
jo
ljmp
and
divl
sbb
mov
xchg
add
cmp
scas
lock
rolb
dec
adc
dec
sub
pusha
movsl
nop
and
pushf
cmp
mov
jns
sti
lahf
mov
inc
mov
sarb
frstor
rcll
aad
adc
movsb
lea
scas
and
adc
mov
and
sbb
pop
adc
in
add
push
hlt
outsl
sbb
push
rorb
push
xchg
std
add
cli
inc
enter
icebp
mov
rclb
out
add
icebp
and
aaa
push
int
push
inc
int3
xchg
pop
mov
insb
pop
jne
ds
mov
cmp
pop
jmp
add
xor
repz
lcall
jmp
repnz
bound
add
push
dec
push
xor
sub
addr16
mov
cs
jle
lahf
ljmp
dec
adc
insb
and
pushf
call
in
test
out
push
hlt
push
andb
push
push
jl
mov
fs
ds
jle
xor
pop
pop
pop
clc
int
and
sti
hlt
insl
mov
dec
dec
cmpsl
jg
add
mov
fs
in
or
inc
ljmp
mov
into
leave
push
stos
js
mov
push
dec
mov
pop
call
xlat
xrelease
and
or
shrb
lret
inc
xchg
xlat
lahf
rolb
mov
mov
adc
in
stos
mov
push
test
mov
pop
loop
adc
jp
inc
inc
insl
js
fdivr
cmp
aaa
sbb
push
lret
cli
gs
xchg
sub
je
mov
cmp
clc
rorb
jnp
dec
jnp
sub
ljmp
lcall
dec
dec
pushf
stos
clc
daa
shlb
adc
xchg
mov
insl
jns
cwtl
mov
inc
mov
pop
push
or
imul
jne
pop
and
add
jno
xor
fmull
mov
std
add
xchg
movsb
cmc
nop
mov
fisubrs
dec
gs
inc
mov
or
xor
cmp
fdivrl
scas
mov
dec
xor
lods
pop
push
aad
sbb
mov
xchg
inc
jge
test
sti
or
mov
or
adc
cmpsb
aaa
xchg
pop
inc
testb
xchg
push
lcall
xchg
jne
xchg
mov
xchg
xchg
or
pop
out
inc
call
lods
stc
ret
jp
adc
adc
cmp
repnz
lcall
or
icebp
lret
mov
or
mov
mulb
pop
stos
and
in
pop
nop
std
jl
or
stos
hlt
push
mov
out
jmp
pushf
push
fistpl
jo
inc
sarb
es
scas
add
inc
fadds
mov
int3
push
ficompl
adc
mov
jbe,pn
jle
insb
loope
cmp
inc
add
xor
or
mov
std
mov
mov
jo
inc
cmc
adc
pop
aam
rcrl
ret
or
add
dec
add
pop
add
pop
sbb
icebp
xchg
rolb
aad
call
cmp
cmc
sar
lahf
dec
js
sbb
fldt
dec
ret
push
add
and
jns
les
out
movl
movsl
sbb
rcrb
enter
mov
dec
cltd
jno
lret
sbb
cli
sbb
pop
mov
sbb
hlt
sub
mov
loop
dec
std
pop
adc
mov
jb
cmpsb
jne
mov
add
push
sbb
cld
mov
pop
les
rclb
pusha
data16
push
push
pop
xchg
sbb
and
mov
inc
les
inc
lret
xor
jp
pop
test
and
test
adc
fcompp
sbb
cwtl
xchg
arpl
sti
xchg
fisubrs
outsl
pop
mov
jno
mov
fcompl
mov
jbe
add
mov
sbb
fdivs
ficomps
ss
jp
mov
pop
sahf
jle
pop
sub
popa
ret
in
push
iret
iret
xchg
inc
dec
gs
xchg
jle
or
pop
lods
and
pop
inc
cmpsl
xor
adcb
xorl
outsl
inc
adc
xor
lods
ljmp
rorl
in
jno
ss
inc
mov
int3
imul
lods
aam
xlat
test
mov
and
lcall
sbb
xor
mov
jecxz
mov
push
aad
pusha
addb
mov
push
hlt
sub
fdivl
jbe
imul
mov
jge
add
sbb
jbe
jmp
clc
add
fucomp
out
daa
test
cmpsl
fildl
inc
stc
sahf
push
mov
inc
scas
repz
bound
dec
cmp
xor
sbb
xchg
add
jge
xor
and
sub
mov
push
jp
xchg
jmp
enter
nop
inc
rcl
sbb
or
sbb
aad
mov
xchg
add
jne
xchg
cmp
std
mov
xchg
mov
pop
repz
in
hlt
cmp
xchg
int
in
adc
lods
sub
or
xchg
mov
or
xchg
dec
or
adc
xchg
rorl
mov
push
inc
lds
ds
push
dec
addr16
mov
adc
adc
nop
jnp
jne
addr16
rol
or
mulb
xor
push
fistpll
push
out
or
mov
addr16
cmpsb
inc
push
mov
pop
fildl
and
xchg
out
lods
add
filds
jge
mov
idiv
cmc
jbe
mov
out
insb
rcll
cltd
push
loop
jge
imul
mov
or
mov
movsl
in
sub
and
pop
insb
mov
insl
lcall
testb
mov
add
mov
cs
cmp
sub
std
xor
lret
jne
adcb
sub
dec
insl
leave
push
rolb
inc
xchg
rclb
mov
push
push
cld
dec
add
jg
test
hlt
mov
test
sbb
ja
rolb
lcall
dec
mov
jmp
pushf
push
lret
roll
cmp
pop
jle
adc
push
mov
int3
cs
pop
incl
cmpsl
inc
pop
xor
out
inc
inc
inc
sub
mov
push
fucomi
insl
cmpsb
jb
out
dec
sbb
cwtl
or
dec
sbbb
pop
mov
popf
leave
cmpsl
sbb
shrl
cld
stos
xor
aaa
inc
add
imul
aam
imul
addl
movsl
sar
movsb
xor
out
js
mov
xor
dec
pop
enter
in
jae
pop
mov
mov
out
mov
jmp
notb
call
maxps
push
jnp
rcll
es
das
sbb
push
popf
cmpsl
cld
aam
ret
notb
mov
movsb
orl
imul
mov
add
mov
or
pop
fdivp
cs
mov
clc
xor
daa
adc
ljmp
adc
or
jb
gs
addl
and
sub
scas
dec
sbb
lods
adc
xor
int
jno
lods
dec
push
les
push
imul
xchg
mov
lret
sbb
sarl
fimull
imul
jg
jge
xchg
pop
or
dec
mov
cmp
push
inc
in
inc
leave
test
jmp
iret
add
icebp
fcomps
jnp
sub
movsl
dec
hlt
fwait
or
das
xchg
xchg
ficompl
mov
rclb
mov
test
dec
mul
sbb
adc
adc
cwtl
mov
push
mov
and
xor
enter
ja
push
pop
jl
mov
mov
stc
decb
pop
stos
nop
sub
mov
push
mov
data16
mov
aaa
jno
sbb
inc
xchg
stos
cmp
dec
inc
fdivr
fstl
sub
js
mov
xor
adc
jecxz
dec
fistpll
mov
mov
test
scas
rcrb
sub
scas
rcll
sbb
in
orb
test
flds
fstpt
scas
adc
js
enter
int3
imul
sub
add
aas
lds
in
lods
sub
outsl
ds
cli
lds
sub
pushf
mov
push
aad
mov
repnz
mov
imul
insl
cmp
cmpsb
mov
and
lret
lret
push
push
fdivrl
ljmp
std
loopne
sarl
in
aas
jns
clc
xor
sub
inc
test
xchg
cli
test
pushf
jg
pop
mov
icebp
lahf
push
push
push
mov
cmp
xor
jecxz
fwait
mov
xlat
mov
push
lret
mov
or
cmp
imul
xchg
sub
ja
jno
sahf
imul
fisubs
scas
aam
cli
and
outsl
rcrb
jge
inc
or
das
mov
sarb
push
xchg
ds
and
push
insl
outsb
and
pop
mov
loop
cli
mov
jbe
scas
cmp
addb
sbb
idivl
test
popf
cltd
dec
fs
xchg
dec
scas
pusha
stc
sbb
add
mov
test
push
sub
jecxz
cwtl
scas
jl
mov
jl
pop
fisubs
lcall
popa
jle
xchg
jae
push
inc
xchg
daa
jge
scas
test
xor
or
aad
mov
xchg
xorl
mov
push
pop
test
leave
xor
repnz
add
or
xchg
pop
js
mov
mov
lds
cld
or
test
int
cmp
add
out
es
cmp
lcall
xchg
pop
out
inc
mov
stos
clc
les
inc
add
iret
inc
aas
lods
mov
push
scas
push
movsl
idiv
sbb
sbb
aaa
xchg
and
xchg
mov
mov
in
adc
inc
aas
and
outsl
mov
xchg
loop
mov
test
mov
push
jle
es
aam
ret
and
test
cmp
jns
sbb
aaa
push
push
mov
cmc
mov
das
pop
sbb
and
jae
cmpsb
outsb
sub
arpl
mov
dec
or
add
sub
adc
lods
mov
sbb
sub
add
inc
jnp
mov
daa
lods
xchg
inc
es
leave
and
add
sbb
xchg
mov
xchg
add
push
or
xlat
out
rcl
pop
sub
mov
ljmp
lods
xor
popa
xor
jae
pusha
xchg
push
jne
ja
ljmp
daa
data16
sbb
leave
call
mov
jns
xor
dec
xchg
mov
mov
ja
mov
int
xor
xchg
and
mov
daa
push
lods
mov
xchg
rorl
xlat
or
adc
loop
inc
loopne
cmp
pop
mov
ja
cmc
out
in
out
cltd
sbb
aas
out
jno
dec
mov
pop
int
cmc
dec
pushf
xchg
inc
dec
sub
in
jge
imul
shll
cmpl
into
xchg
cmpsb
pop
jg
add
test
mov
mov
add
std
sahf
mov
xor
lods
repz
mov
out
scas
adc
cmp
out
repnz
cltd
shlb
icebp
in
push
data16
or
lcall
lock
add
inc
cmp
pop
mov
xchg
push
adc
mov
lcall
add
mov
or
lea
jl
ds
test
mov
jne
addr16
lea
rclb
imul
arpl
aas
mov
pop
repnz
mov
cld
and
mov
cli
push
mov
xchg
insb
imul
push
rep
sub
bnd
cwtl
enter
add
mov
jne
or
popa
outsb
push
fwait
ja
inc
cmp
or
mov
mov
aad
pushf
cltd
jg
movsb
xchg
cwtl
lcall
jecxz
xchg
icebp
sbb
into
jnp
lods
fisubs
mov
fnstcw
lret
pusha
mov
sbb
jge
popl
mov
addr16
jmp
mov
xorb
movsl
hlt
faddl
stc
add
lret
and
cmp
sub
add
sub
push
repnz
adc
or
idivb
jmp
ljmp
je
inc
cmpsb
rolb
add
jle
jns
and
cmp
jle
les
pop
mov
test
push
adc
jmp
popf
idivb
sub
les
int
mov
cmp
mov
je
jl
les
jb
fld
pop
js
mov
cwtl
dec
fs
dec
outsb
dec
lcall
fisttps
loope
sub
setg
popf
cmpsl
sub
lock
add
mov
add
clc
iret
and
cmp
xchg
sub
repz
jnp
lcall
neg
adc
repz
mov
sti
lahf
inc
rcl
aam
addr16
paddq
lret
sti
nop
fst
adc
jne
mov
out
xchg
cmp
or
fbld
add
aam
popa
cmp
mov
mov
mov
dec
xchg
mov
std
orb
clc
or
test
cmp
int3
stos
push
jb
into
dec
mov
jne
xor
sbb
mov
mov
mov
jae
dec
adc
pop
cmp
xchg
in
dec
popa
add
sbbb
test
sahf
fld
cmpsl
add
repz
sub
ret
in
jns
dec
inc
cld
ljmp
test
jp
cmp
nop
std
sub
add
lahf
xlat
mov
mov
dec
mov
mov
and
xchg
adc
and
cld
test
adc
mov
stc
cmc
pushf
out
ret
icebp
and
scas
iret
repz
jb
cmp
adc
loope
sbb
or
push
imul
cmp
sub
pop
inc
roll
and
inc
movsl
in
or
arpl
cmp
decl
sbb
xchg
repz
fdiv
stos
inc
xchg
sbb
sub
dec
rol
jnp
add
test
ret
sbb
scas
popa
jmp
fdivr
dec
xchg
sub
shl
into
pop
movl
push
fcomi
jne
cmpl
clc
pop
pop
loope
mov
inc
pop
and
out
cmpl
jp
imul
xor
sbb
stos
fisttps
mov
push
jns
dec
mov
repz
mov
cmp
lds
ret
mov
das
xor
add
movsb
stos
in
cmp
sbb
mov
pop
mov
mov
bound
test
fisttpll
push
mov
in
arpl
ljmp
add
shrb
mov
mov
lea
or
and
push
adc
gs
lcall
dec
mov
daa
sarb
ror
movl
push
int
or
add
inc
js
pop
pop
ret
test
jae
add
and
xor
or
jmp
xchg
xor
pop
adc
mov
nop
pusha
cmp
xchg
repz
test
xchg
inc
inc
push
inc
dec
ja
xchg
mov
and
add
cld
fiaddl
push
movsl
xor
add
testl
sbb
adc
cli
or
lret
xchg
in
pop
aad
sub
arpl
ja
ffreep
outsl
imul
and
fcompl
xor
xchg
rorl
bound
fs
ficomps
mov
sbb
fwait
mov
stos
sarl
inc
and
cmp
in
adc
adc
sub
dec
mov
pop
ret
ficomps
outsb
xchg
mov
subl
mov
or
test
fwait
bound
shrb
lock
adc
pop
sti
xchg
cmp
lret
cmpsb
popf
inc
sbb
push
jnp
bound
loopne
mov
repnz
xor
aas
sub
es
mov
outsb
dec
ds
fldcw
mov
xlat
sbb
dec
mov
pop
xchg
push
mov
out
call
movb
inc
filds
fdivp
cmp
mov
mov
fldt
leave
sbb
fldenv
push
jb
test
mov
xchg
test
scas
mul
inc
xchg
popf
movsl
lret
iret
pop
jns
mov
jno
cmc
lcall
scas
xor
fadds
in
dec
aaa
ja
mov
fmul
cmp
icebp
jne
jle
xor
push
jb,pt
repz
dec
sbb
or
bound
jle
add
pavgb
mov
aas
loope
push
fidivrl
cs
mov
push
jg
add
mov
mov
or
inc
push
or
push
pop
cmpsl
outsl
pop
or
cmp
jmp
push
test
aas
fisttpl
sbb
lds
mov
xor
leave
adcb
xchg
sbb
bound
xchg
and
fdivp
sbb
dec
loopne
lcall
sub
sub
cmc
push
pop
sti
fs
adc
mov
incb
jecxz
stos
jl
incl
jns
rorl
or
ss
push
sarl
aas
imul
jo
insb
xchg
lcallw
mov
jle
add
xchg
lahf
xor
inc
add
adc
call
and
test
andb
xchg
xchg
loopne
sti
dec
inc
inc
pop
nop
sub
inc
add
cmpsb
pop
ss
cmpsl
xchg
fldcw
lods
ret
mov
dec
lret
loopne
lret
mov
dec
test
cmp
in
mov
and
gs
sti
pop
nop
sbb
ds
mov
jno
imul
in
int3
dec
icebp
iret
push
dec
addr16
popa
sub
pop
dec
in
pop
add
pushf
shlb
popa
push
lret
xchg
jge
push
pop
sbb
sbb
pop
xchg
pop
movsb
add
arpl
or
push
and
mov
sbb
lret
dec
add
dec
sub
outsb
xor
scas
into
mov
add
fnstenv
or
aaa
out
inc
mov
test
movsb
mov
movl
inc
std
sbb
stos
fwait
cld
add
fwait
ret
int
addr16
jle
lret
mov
out
clc
std
ss
ss
mov
icebp
adc
jecxz
ljmp
xor
in
or
push
ljmp
imul
jne
cmp
pushf
rclb
lret
mov
and
sbb
fstpl
jle
lods
mov
push
push
out
aas
push
mov
inc
sbb
outsb
mov
sub
pop
mov
jg
out
and
cmp
xorl
adc
nop
inc
jmp
cltd
aam
shll
je
push
hlt
loop
push
into
xor
adc
mov
adc
in
jnp
push
and
mov
mov
bound
jmp
xchg
pop
loop
push
addr16
push
rclb
cmp
jmp
mov
add
loope
mov
lods
xchg
and
mov
jno
out
add
aas
mov
inc
xor
sbb
fcompl
test
rcll
xchg
inc
mov
lret
cmp
and
xchg
jmp
jbe
pushf
and
pop
icebp
insl
fmul
adc
cmp
pop
ret
jp
cltd
insl
call
xor
inc
lret
mov
test
popa
adc
sarl
fsubl
push
lods
add
sbb
pop
add
mov
mov
sbb
hlt
popa
in
fstps
ficompl
and
or
lret
imul
mov
jg
mov
decb
cltd
adc
mov
dec
imul
lret
shlb
dec
pop
inc
ret
xchg
adc
insl
mov
in
fistps
pusha
lret
dec
xor
test
pusha
dec
sbb
add
scas
shll
sbb
pop
in
mov
iret
and
adc
in
aas
pusha
or
lret
mov
inc
mov
inc
xor
sub
andnps
mov
mov
loop
push
js
add
sub
call
pop
jbe
mov
call
bound
adc
mov
jge
shlb
mov
imul
imul
mov
sahf
ss
push
gs
popa
lea
mulb
fdivr
jl
sub
xor
xchg
leave
cwtl
inc
pop
or
aaa
sub
outsb
sbb
xchg
jle
arpl
xor
add
ds
lcall
push
mov
xor
sahf
inc
pop
mov
sub
sub
in
push
and
or
repz
xchg
pushf
jne
aad
jns
ret
fcmovu
sub
pop
mov
cmc
sbb
jl
loopne
js
pop
dec
inc
loope
adc
enter
test
cmc
lods
sub
add
movsb
insb
enter
cli
or
or
outsl
fstpl
xor
outsl
testl
mov
inc
jnp
mov
xor
cmp
jns
push
repz
mov
int3
lret
rcll
in
xchg
dec
or
push
adc
xchg
inc
xchg
cwtl
lcall
pusha
outsl
xor
jae
dec
push
jns
mov
je
adc
imulb
in
push
or
push
daa
pop
aaa
orb
jge
push
arpl
sbb
mov
jge
adc
cmp
or
gs
xchg
mov
idiv
add
and
mov
or
jo
mov
jle
pusha
mov
xor
dec
lret
mov
push
and
push
sbbl
add
arpl
add
cmp
and
pop
xor
sbb
jo
stos
ret
sub
sahf
push
sbb
popf
inc
into
les
mov
es
sbb
pusha
loope
and
roll
inc
mov
aam
cwtl
mov
lcall
fldenv
mov
or
dec
xor
adc
test
scas
shl
dec
pop
cwtl
test
ror
jle
sbb
mov
ja
add
sbb
mov
cwtl
adc
mov
out
rclb
xor
sub
das
lds
or
out
jp
push
and
add
sbb
dec
pop
mov
je
inc
out
imul
outsl
jp
pusha
idivb
pop
add
in
test
adc
je
loopne
mov
mov
inc
xorb
adc
jp
in
mov
or
fnstsw
mov
loope
aaa
xor
add
enter
push
push
fcompl
mov
popf
mov
loop
mov
leave
in
pop
xlat
sbb
sub
ss
xchg
rorb
xchg
sahf
leave
adc
clc
or
gs
xchg
in
mov
adc
push
push
push
mov
mov
hlt
enter
jno
xor
out
lahf
fdiv
mov
pop
sbb
dec
sahf
xlat
sub
mov
imul
mov
fistpll
sbb
xor
subb
mov
int3
inc
inc
clc
inc
rcll
sbb
into
jbe
in
xchg
ds
je
mov
icebp
movsb
xchg
cmp
inc
sahf
bound
ljmp
cmp
inc
mov
or
lret
jmp
gs
and
inc
call
fs
scas
jno
jge
inc
mov
enter
xchg
jo
mov
adc
mov
fs
lock
pop
stos
ds
arpl
dec
xor
xchg
cs
sbb
pop
jge
pop
add
adc
dec
xor
dec
hlt
mov
jnp
sarl
inc
iret
jmp
xchg
or
pop
dec
or
xchg
push
sub
adc
inc
sbb
add
pushl
add
mov
dec
dec
mov
mov
sbb
jbe
inc
cmc
test
mov
pop
popa
aaa
push
ljmp
dec
xorl
adc
add
mov
push
push
dec
enter
in
mov
jl
mov
sbb
mov
gs
xchg
and
in
in
sbb
pop
sbb
cmpb
or
jle
sub
jne
dec
xlat
inc
mov
pop
mov
mov
ds
mov
pop
cmp
xchg
fsts
sub
mov
sbbb
xchg
add
xchg
pop
les
or
mov
fcompl
jns
inc
xor
add
sub
in
movsb
fisubl
mov
mov
fstpl
sbb
push
inc
add
fwait
gs
jmp
sti
sub
pop
shrb
fwait
gs
cmc
mov
aaa
test
xor
mov
pop
mov
cmp
dec
out
push
mov
push
xchg
push
sub
mov
add
dec
icebp
popf
pop
dec
loope
or
jno
test
jl
lock
aam
out
ficoms
and
sbb
repnz
imul
mov
xor
mov
mov
dec
inc
cli
mov
jle
shrl
mov
or
push
mov
sub
mov
leave
mov
in
mov
in
inc
xchg
lret
imul
add
fdivrl
repnz
jbe
negl
xor
in
clc
mov
fs
lods
inc
cmp
mov
sete
xlat
xchg
out
mov
cmpsl
mov
dec
adc
jo
loop
push
sbb
dec
hlt
jge
hlt
jo
sbb
cmp
lret
or
sub
pop
test
xor
aas
fidivs
jno
push
dec
iret
xchg
jle
jp
pop
std
inc
lret
fs
mov
or
xchg
add
jp
pop
mov
mov
and
je
mov
cmp
in
mov
pop
pop
cmp
add
movsl
mov
dec
jle
ljmp
push
mov
scas
addr16
or
sbb
shll
pop
mov
cmp
int
nop
cmpsb
lea
xchg
adc
cmp
orl
cmp
outsl
mov
xchg
fstpt
std
loope
fsubs
add
lds
mov
lahf
cmc
pop
stos
cmc
pop
out
outsb
xor
std
xchg
push
push
testl
sub
out
xchg
lret
js
outsb
add
je
hlt
das
hlt
dec
icebp
dec
pop
add
adc
cmpsb
adc
cmp
dec
xor
lea
push
dec
dec
add
mov
insb
jge
sbb
pop
loope
mov
dec
loopne
stos
cmp
daa
mov
ficoms
xchg
push
jns
or
add
ret
int3
adc
out
fucomi
push
inc
add
ret
add
sub
add
popf
lcall
xor
sub
ret
test
roll
mov
push
adc
mov
das
sbb
xchg
stos
inc
sub
pop
outsb
adc
std
addr16
adc
adc
fbstp
adc
ja
and
add
mov
cmp
jecxz
mov
popf
hlt
movsb
mov
js
dec
movsb
jge
stos
xchg
inc
mov
cmp
push
inc
int3
add
sti
cltd
push
or
lock
jo
les
out
sbb
lea
pop
repz
xor
imul
dec
sbb
cmp
mov
push
popf
mov
cwtl
ret
and
scas
or
xor
sbb
sti
push
scas
mov
ret
cwtl
xchg
sti
mov
push
sub
add
sub
push
adc
lods
jecxz
es
out
fwait
push
in
adc
and
or
cmp
lock
dec
mov
xchg
push
lahf
inc
jle
dec
jns
sbb
dec
inc
pop
sahf
je
jb
inc
bound
xchg
pop
pusha
fwait
cmp
int3
daa
icebp
ja
ficompl
dec
lea
mov
and
push
data16
and
cmp
push
icebp
cmpl
int3
mov
adc
mov
repnz
fisubrs
push
pusha
out
pop
add
arpl
jno
outsb
sbb
shll
or
cmp
cmp
push
push
cmp
mov
and
test
push
lods
or
mov
in
mov
adc
js
mov
les
jmp
inc
jne
dec
jmp
add
rorb
in
push
pop
in
xchg
ja
or
cmp
movsb
outsb
dec
mov
lret
mov
inc
mov
fimuls
dec
scas
roll
mov
incb
ret
xchg
stc
push
or
pushf
mov
loope
xchg
lods
push
fsubrl
shll
lods
add
scas
or
sub
push
or
jmp
jbe
pop
mov
xchg
lods
das
or
add
scas
xchg
push
cmp
icebp
fisubrl
xchg
mov
adc
mov
imul
jb
das
mov
in
out
loopne
fcoms
pop
ret
or
xor
inc
pop
xchg
mov
pop
nop
cwtl
add
std
cmp
xlat
es
outsl
in
xchg
push
iret
pop
iret
dec
jg
iret
popf
xor
imul
gs
mov
shl
rcl
xor
inc
mov
pmovmskb
std
push
aam
lret
les
sub
jno
ret
adc
pop
jle
pop
jle
rcrb
in
test
pop
or
xor
lea
rcrl
jb
xchg
xor
fcoms
inc
mov
sbb
jp
gs
imul
cs
push
stos
mov
sub
aam
sbb
mov
in
imull
test
scas
jecxz
mov
pop
add
addr16
jg
popf
mov
mov
test
cwtl
mov
cmp
xchg
inc
aad
pavgw
mov
in
lret
add
or
xor
std
outsl
and
test
dec
mov
loope
cmc
and
ret
add
inc
sahf
and
jmp
jmp
sbb
jp
into
jbe
pop
cli
mov
pop
subl
xor
fmul
mov
pop
sub
call
mov
pop
in
sbb
mov
mov
pop
outsl
inc
popa
xchg
out
dec
and
push
int3
pop
mov
and
les
fcoml
pusha
fcmovu
add
mov
cmc
mov
mov
inc
sarl
cmp
mov
xor
out
sbb
std
ss
xlat
ret
jne
nop
xchg
dec
stos
push
not
pop
cmp
fcomip
and
loop
xor
mov
aaa
push
ret
xor
mulb
xor
in
ja
daa
jnp
faddl
inc
mov
ljmp
or
mov
xor
mov
inc
lds
repz
xchg
jns
sub
fucom
sub
cltd
ret
or
mov
sbb
add
xor
ret
sti
jnp
adc
loopne
out
sub
dec
pop
xor
insl
loop
mov
cmpsb
and
mov
or
daa
xchg
arpl
or
loop
imul
lds
cmp
push
mov
pop
shr
sbb
in
mov
dec
lods
scas
ljmp
aam
mov
idivl
imul
adc
cmp
cmp
dec
cltd
mov
add
mov
jns
jmp
inc
mov
repnz
fidivl
push
cmp
addl
arpl
fwait
clc
inc
mov
out
ljmp
lds
orb
sub
std
test
inc
jle
pusha
nop
or
movsb
faddl
daa
dec
fsts
daa
xchg
sahf
cmp
popa
loope
fnstsw
mov
mov
mov
lahf
dec
fs
or
jb
inc
rorl
jae
and
je
pop
imulb
xor
xchg
es
arpl
pop
in
enter
ret
mov
inc
jmp
lcall
rcrl
pop
in
shlb
aaa
fnstsw
xlat
insl
fsts
lret
inc
mov
in
ret
dec
outsb
mov
cmp
dec
movsl
stos
test
mov
xorb
mov
lods
cmp
pop
push
push
aaa
mov
test
smsw
xor
fiadds
scas
cmp
push
aas
cmpsb
xchg
inc
pop
add
je
addr16
cmp
and
sbb
ret
lahf
into
sbb
in
cmp
in
adc
leave
and
xchg
cld
mov
jmp
andl
fwait
sahf
test
outsl
jns
mov
pop
jp
mov
loope
xor
push
stos
or
stc
adc
add
in
rsm
fcmovnbe
lcall
mov
test
shll
or
lcall
in
cs
sbb
adc
shll
dec
mov
insb
scas
les
imul
jae
fmulp
mov
xor
cmc
test
xorb
int3
out
jne
ljmp
xchg
out
pop
jne
mulb
mov
mov
sbb
jns
popf
xor
jo
out
and
mov
dec
ja
xorb
pop
mov
js
icebp
sub
in
jmp
sub
jb
mov
cmp
dec
jne
push
mov
or
push
fisubl
mov
lods
xchg
push
test
mov
aas
adc
fwait
repz
inc
xor
sub
inc
in
push
mov
in
repz
xor
jb
jo
xchg
in
pop
ficomps
xchg
pusha
fsubrl
sub
dec
pop
pop
jg
lret
mov
in
pop
pop
fmulp
dec
jmp
xchg
jae
je
ret
imul
lds
jecxz
iret
rcr
ret
lret
sub
movsl
sbb
sbb
add
pop
jecxz
push
fs
and
aam
sub
test
adc
jl
sub
cmp
cmp
xchg
jp
mov
icebp
or
outsb
fstl
lret
dec
jle
test
push
mov
rcrl
loop
lahf
pop
xor
dec
mov
mov
pop
dec
jo
mov
rcrb
dec
xchg
xor
fdivl
fstpl
rep
lcall
scas
mov
pushf
inc
insl
fistps
or
jle
scas
lcall
aaa
and
or
push
icebp
mov
fisubl
clc
pop
xchg
inc
test
sarl
mov
gs
or
push
scas
loop
repnz
or
push
mov
ror
lcall
mov
or
std
into
push
js
lds
sbb
popa
hlt
les
insb
mov
ret
add
leave
mov
pushf
cmpsb
daa
std
mov
and
xchg
scas
jg
ret
xchg
sbb
mov
cmp
add
popa
sbb
pop
stc
mov
push
add
adc
orl
sub
ljmp
cltd
mov
dec
xchg
and
pop
adc
scas
mov
jecxz
into
dec
int
push
cmpsl
mov
das
mov
nopl
es
inc
fldl
mov
rcrl
das
pop
fwait
mov
test
pop
sbb
data16
adc
mov
xlat
jbe
loopne
ljmp
push
and
mov
mov
pushf
push
sarb
addb
out
mov
lea
ss
clc
adc
push
jno
push
push
jo
pop
psrld
xchg
or
jb
inc
shlb
clc
jmp
push
shlb
enter
jg
and
xchg
cltd
xchg
jg
pop
push
popa
sbb
mov
jecxz
stc
xchg
jns
push
and
std
mov
movsb
test
out
repz
xlat
shrl
aaa
cmp
mov
or
gs
push
gs
lcall
dec
push
xchg
rolb
ja
inc
cmp
push
and
mov
dec
out
mov
xor
xchg
popf
dec
mov
jmp
xor
loopne
xor
aaa
pop
pushf
mov
and
cwtl
or
js
add
push
mov
or
jne
xor
dec
xor
jmp
fmull
push
jge
rolb
dec
mov
adc
xlat
negb
mov
dec
xchg
pop
and
ret
imul
not
mov
xor
adc
inc
testl
inc
mov
mov
sbb
fwait
push
jbe
insl
xchg
nop
ljmp
rorl
scas
adc
mov
jo
jecxz
loopne
jns
pusha
mov
xchg
sub
scas
push
mov
lods
push
adc
inc
lea
fisttps
pop
data16
xchg
inc
and
xchg
mov
sub
sub
mov
mov
pop
cmp
cmp
dec
fiaddl
adc
and
or
das
xchg
adc
push
repnz
jno
pop
sbb
fcoml
add
jae
mov
jge
mov
ret
dec
push
sub
dec
add
mov
in
icebp
sub
es
aas
imul
adc
fcmovu
mov
roll
shl
sub
mov
jnp
into
shrb
pop
add
filds
jecxz
xchg
mov
lds
stos
and
addr16
enter
push
push
arpl
test
jns
sahf
les
int3
shll
orl
cs
mov
test
mov
or
jp
cmp
add
and
bound
adc
loopne
les
pop
xlat
ljmp
mov
fsubl
mov
or
pop
bound
cmc
inc
lret
ficomps
push
cmp
xchg
pop
lret
daa
sbb
sbb
leave
cmpsb
sbb
push
mov
test
lods
ljmp
dec
pop
push
add
and
arpl
mov
xor
movsl
and
je
xchg
xchg
adc
mov
lock
inc
jne
add
pop
mov
pop
sub
or
or
lods
ds
mov
mov
adc
mov
ficoms
into
push
pop
or
mov
fisttps
push
gs
jo
sub
andl
adc
fs
shll
jo
incb
and
cld
jne
aad
lea
push
jbe
fbld
fisttpll
mov
mov
inc
leave
scas
sti
cmpsl
movsb
popf
ret
lret
jecxz
incl
test
and
jae
aas
mov
jmp
sbb
and
and
pop
imul
iret
test
or
push
leave
out
stos
xchg
lods
inc
pop
ds
mov
adc
ret
fs
push
jg
add
sbb
imul
test
jno
stos
mov
mov
push
xchg
repnz
dec
fadds
out
mov
pop
inc
push
mov
imul
fisttps
pop
mov
psubb
dec
je
xor
outsb
pop
jmp
cli
sbb
loope
push
roll
jno
ret
sbb
mov
jl
enter
lock
sarb
ret
push
jo
ret
mov
sbb
pop
in
jo
xchg
push
mov
incb
or
fisubrl
push
ja
aas
pop
inc
adc
sbb
push
push
mov
pop
lock
jl
cmpsb
mov
lret
add
loope
pop
push
lahf
lahf
dec
jp
xchg
jle
inc
or
in
or
cs
mov
pushf
xlat
ljmp
mov
out
xchg
xor
push
in
ret
mov
jbe
ds
cmpb
xlat
call
aam
out
lret
rcl
xchg
fnsave
mov
and
pop
imul
mov
cmpsl
repnz
mov
inc
and
xor
xchg
shll
lret
call
adc
shll
and
jg
sub
jp
fwait
jle
fists
sub
jp
adc
pop
mov
push
scas
mov
mov
mov
gs
add
dec
jnp
imul
js
fnstsw
push
inc
stos
mov
hlt
test
decb
push
movsb
jmp
push
add
in
or
cld
xor
test
dec
stc
xchg
std
and
push
lahf
jae
dec
cmp
push
push
jecxz
into
in
cld
test
xchg
jns
cmp
dec
mov
jp
add
in
ds
and
dec
faddp
fs
jecxz
push
pop
cmp
test
fdivr
cmpsb
data16
jmp
shll
xchg
xor
xchg
mov
mov
push
icebp
out
xchg
popf
pop
rcrb
jnp
mov
insl
adc
insl
jecxz
cmpsl
cmpsl
das
xchg
jle
ficoms
lcall
bound
lret
push
pushf
inc
sahf
mov
int3
mov
adc
and
shr
mov
sti
xorl
cli
push
push
loope
mov
test
sub
into
jecxz
stos
inc
and
cmp
mov
outsl
lea
pop
jl
xor
xchg
gs
adc
inc
mov
push
sbb
sbb
pushf
mov
cld
loop
ror
gs
sbb
dec
lds
xchg
dec
sub
mov
dec
and
xacquire
sti
dec
fwait
popa
adc
mov
repnz
nop
enter
xchg
ljmp
shl
cmp
inc
cmp
jno
lds
mov
rcrb
adc
fnstenv
outsl
in
sub
data16
addb
and
nop
adc
adc
inc
mov
fnstenv
aas
jns
mov
rcll
inc
inc
mov
push
sbb
cwtl
dec
movsl
insb
pop
mov
inc
xchg
imul
aas
subl
popa
mov
leave
cmp
push
jae
cmp
aaa
int
sub
inc
inc
cmpsb
sar
jp
push
scas
test
rcll
cli
mov
push
inc
inc
pushf
mov
fsubrp
cmp
mov
adc
mov
out
stos
push
je
push
das
rcrb
and
lock
test
rcr
add
jb
cli
mov
in
push
outsb
inc
std
and
negl
lock
push
fistps
pop
repnz
jns
xor
mov
mov
mov
test
sbb
stos
test
int
lods
nop
gs
das
out
scas
rolb
cwtl
and
mov
inc
cmp
imulb
xchg
jg
out
xor
shl
inc
aaa
fldt
cmpb
jne
mov
pop
sub
push
cltd
dec
cmp
pushf
cld
sbb
mov
mov
cmp
in
or
inc
orb
mov
add
movsb
rcrb
and
jl
jae
mov
aad
adc
lods
cmp
adc
adc
sub
leave
xchg
les
sub
push
out
adc
xchg
out
int
and
push
addl
sub
fwait
lods
out
out
mov
daa
adc
adc
sub
dec
and
sbb
lea
mov
ljmp
setl
call
adc
or
cld
pop
dec
imull
hlt
mov
pop
push
sahf
in
mov
push
int
lock
das
scas
mov
pop
sub
jae
xor
shlb
fsubrs
loope
inc
sub
and
bound
jmp
adc
jge
cli
ljmp
ret
mov
mov
sub
xorl
xchg
gs
std
and
sar
pop
sti
fwait
mov
repnz
mov
jns
pop
dec
sbb
dec
xor
int3
mov
xor
sbb
pop
idivb
mov
mov
loopne
in
pop
arpl
sbb
inc
pusha
pop
and
nop
or
mov
mov
stc
jbe
pop
fldcw
mov
jp
adc
mov
cltd
aam
sti
sbb
cmpsl
inc
sbb
mov
cmc
inc
test
leave
add
or
call
mov
ficomps
xlat
stos
test
out
mov
and
mov
sub
pop
pop
repnz
push
mov
cmp
push
bound
sub
hlt
xor
stc
pop
rcll
addr16
ss
push
stos
arpl
jns
stos
xor
ss
jb
lds
inc
lret
pop
and
les
inc
ds
ret
jne
pop
mov
xor
mov
fcmovu
or
adc
mov
xor
fdivr
or
cli
andl
out
ljmp
repz
and
pop
and
fs
sbb
mov
dec
lock
in
xor
sbb
mov
rcll
or
lahf
fimuls
pushl
lods
mul
add
jne
and
mov
cs
cmp
jmp
lods
push
sub
jge
rcrb
addl
sub
std
pop
mov
sbb
stos
and
cli
fnstenv
cmp
inc
sarl
and
cmp
xchg
sub
push
cmp
aam
lcall
inc
mov
movsb
sahf
jno
cs
push
testb
xchg
inc
pop
pop
push
insl
subl
out
push
dec
jl
ljmp
lret
mov
push
pop
mov
jae
scas
daa
fcomps
xchg
sbb
cwtl
push
test
js
aas
call
les
jmp
pop
pop
stos
sahf
cmpsl
inc
out
arpl
push
and
xor
inc
xchg
pop
data16
push
es
jmp
sub
aam
in
nop
andl
mov
pop
dec
int3
sbb
je
cmpsl
add
mov
test
xchg
fcomi
pop
orb
cmc
in
dec
bound
arpl
lods
add
xchg
mov
pop
jg
into
ret
jge
dec
pop
add
data16
test
int
mov
or
cmpsb
imul
cld
xor
jecxz
inc
sarl
push
rclb
pop
cmp
xor
outsb
stos
jno
repz
add
push
ret
sti
movsl
test
nop
pop
or
inc
push
jmp
lret
aad
aam
dec
das
jno
pop
add
test
sub
mov
out
mov
gs
and
jbe
dec
into
fs
int3
pusha
jle
xlat
fistps
lea
bound
jmp
insl
jle
into
xlat
into
add
or
xor
jae
xchg
fdivrs
iret
jae
pop
loope
mov
stc
mov
jge
dec
ror
jns
lods
xchg
call
idivl
imul
inc
push
lea
in
or
imul
movsb
xchg
je
negl
dec
cli
fistpl
fstl
xchg
xor
mov
mulb
nop
call
jl
xchg
add
adc
cwtl
dec
lret
mov
pop
in
cmp
nop
add
jle
subl
jne
mov
sbb
sub
jmp
jmp
xchg
call
js
test
sbb
or
jbe
mov
inc
cld
into
or
inc
imul
rorb
mov
push
mov
mov
loopne
lds
push
and
jae
fistpll
and
pushw
shrb
mov
decb
dec
in
add
adc
push
mov
ds
pop
cld
subb
and
fwait
sub
xchg
sub
push
add
addr16
cli
cmc
stos
divb
outsb
or
sub
aas
jo,pn
shll
pushf
cmp
adc
nop
cmpb
loope
rcll
lods
push
push
int3
leave
ret
cmpsl
and
setg
sub
imul
pop
xor
push
outsb
or
push
movsb
mov
xchg
in
mov
pop
pusha
adc
adc
pop
fisttpll
mov
repnz
clc
jp
lds
and
test
push
mov
push
pop
ja
push
push
mov
and
icebp
cmp
adc
push
aas
outsb
mov
ja
ret
cltd
sbbb
cmp
and
sbb
jnp
pop
and
mov
jbe
adc
fdivl
mov
jo
dec
push
or
aad
movsb
push
or
popf
daa
pop
jb
mov
fwait
adc
dec
lods
imul
movsb
mov
and
stc
sbb
lods
xor
jno
je
rclb
and
mov
mov
add
push
gs
xor
pop
mov
or
or
xchg
xchg
inc
and
mov
ror
aaa
mov
adc
fdivrs
movsb
repnz
rol
pop
loopne
and
lods
and
clc
xor
call
cmc
mov
jbe
scas
inc
dec
rcrl
in
adc
lock
imul
fnstenv
sub
aaa
push
pushf
fiaddl
dec
ret
dec
pop
shrb
sub
sub
mov
imul
jg
ret
daa
pop
mov
insl
mov
add
imul
aam
xchg
dec
js
adc
dec
mov
test
adc
test
or
mov
call
jb
mov
jp
je
jl
aam
movsl
push
and
push
pop
push
imul
aaa
inc
clc
addr16
mov
out
repnz
int3
inc
ds
add
in
jmp
and
fisubrs
in
push
sub
adc
xchg
or
fisttpl
push
rorb
push
aam
pop
mov
adc
sbb
orb
shll
mov
jmp
pusha
int3
pop
lock
dec
xor
shrl
mov
inc
mov
mov
xchg
out
xor
aaa
or
loopne
sbbb
xor
cmp
or
jle
dec
sbb
lcall
jo
jp
dec
mov
das
aas
in
jne
pusha
adc
shrb
lds
mov
mov
or
mov
cwtl
aad
jmp
lret
add
icebp
fwait
cmpsl
insl
inc
xor
sub
gs
jo
jmp
fs
jo
sub
lea
push
dec
and
pop
xor
xor
adc
dec
push
loop
sub
cmp
push
or
subb
push
mov
lods
inc
repz
outsb
inc
into
mov
or
adc
setb
mov
adc
ret
xor
jno
jmp
or
mov
adc
and
xchg
sti
bound
adc
popa
push
sub
xor
lret
jae
inc
xor
mov
les
pop
sbbl
inc
ja
fimull
sti
dec
les
jmp
notl
add
ljmp
push
cwtl
add
movb
mov
mov
insl
scas
addb
or
mov
jb
pop
cmp
xor
test
sbb
mov
pusha
mov
mov
sub
pop
push
loopne
lret
xchg
cwtl
test
and
inc
push
int3
inc
iret
out
push
pop
rolb
lea
mov
ljmp
cmp
inc
jle
lock
lock
icebp
test
out
stos
mov
clc
sub
test
add
pop
jnp
sub
lret
push
shll
movsb
or
mov
imul
lss
xor
sub
shll
mov
inc
lret
test
test
mov
xor
pop
data16
pop
mov
in
popa
jne
and
mov
inc
adc
bound
mov
sub
push
mov
inc
fwait
scas
push
in
pop
rclb
xlat
into
fldl
pop
leave
dec
rcr
mov
mov
pop
push
push
in
cmp
mov
fstpt
repz
xchg
mov
icebp
scas
sbb
mov
sbb
test
add
jge
mov
ds
adc
and
pop
add
out
adc
cmp
push
push
stc
enter
test
cmp
push
and
cmpsl
push
inc
mov
ds
ss
mov
xchg
addr16
xchg
jmp
bound
pop
jno
lahf
ljmp
push
cltd
mov
sub
jge
repnz
sub
xchg
dec
inc
movsl
fnstcw
psubb
lahf
dec
pop
fnsave
popf
in
push
adc
pop
js
adc
sub
or
add
adc
mov
leave
ror
cmpl
shl
mov
fsubl
jmp
pusha
pushf
stc
imul
xchg
lret
mov
jno
xor
int
mov
jecxz
mov
fistpll
scas
jmp
inc
in
jmp
push
cmc
add
outsb
inc
pop
test
loope
sarb
inc
scas
jg
pop
xchg
jb
ss
xor
std
iret
test
xchg
popf
cmp
je
loop
inc
and
push
je
or
cltd
fdivrs
mov
loopne
adc
fwait
pop
jns
jle
call
mov
push
dec
jl
cmp
in
cmpsb
jne
imull
mov
xor
in
inc
or
pop
fstpt
ljmp
imul
stc
sar
add
dec
mov
xchg
rcll
push
mov
jle
sub
aam
les
and
dec
imul
aam
and
cmp
mov
outsl
pop
stos
int
in
psrad
dec
or
push
divl
test
sbb
jno
data16
mov
loop
push
jecxz
inc
xor
es
cmpsl
xchg
adc
and
ljmp
xor
sbb
sub
push
in
out
stos
mov
iret
cld
divb
jne
adc
push
push
fisttpll
jae
mov
std
sbb
aam
or
cli
push
pop
mov
pop
shl
xor
inc
hlt
or
call
push
or
mov
xchg
push
loope
shr
setns
shr
das
test
push
mov
mov
hlt
mov
or
pop
xchg
inc
sbb
out
pop
fdivl
loopne
jle
sbbl
cld
sub
jb
je
call
lahf
lret
add
dec
push
imul
stos
and
xor
mov
pop
mov
cmc
ret
push
fidivrs
push
mov
mov
lcall
fstpt
push
bound
jne
lea
xor
mov
add
add
in
xor
sub
mov
scas
stc
stc
das
lcall
es
test
ret
xchg
jo
or
xchg
ljmp
int
call
add
push
nop
sarb
jg
xor
mov
repnz
mov
push
and
jnp
sub
cs
inc
repnz
adc
sbb
pop
es
ret
js
jnp
popa
jb
sbb
jmp
xchg
lds
mov
sti
dec
mov
scas
out
pop
test
xchg
push
mov
sbb
xchg
stc
and
cli
jne
out
cs
xlat
cmp
lds
add
mov
mov
pusha
mov
push
cmp
cmp
xchg
sbb
hlt
pushf
and
xchg
and
adc
mov
stos
loop
sbb
in
cs
mov
outsl
mov
pushf
stos
mov
push
push
lahf
lcall
xchg
pusha
das
in
lods
jae
mov
push
imul
ss
cld
iret
sbb
mov
xor
and
dec
pop
pop
pop
imul
xchg
pop
and
imul
mov
in
int
lock
clc
pop
or
pop
leave
push
cmpsb
repnz
hlt
imul
jmp
ljmp
enter
enter
rclb
popf
sub
lret
rorl
adc
out
push
mov
cli
mov
mov
lea
incl
push
icebp
mov
or
mov
adc
jmp
imul
lcall
sub
cwtl
pop
iret
aaa
mov
mov
push
lahf
or
ja
dec
popf
ret
add
bound
aam
call
leave
scas
ret
xchg
les
jg
lods
adc
mov
push
mov
add
adc
or
xchg
imul
xor
das
push
add
divb
in
sti
xchg
and
test
stc
or
adc
cmp
mov
dec
outsl
push
ja
mov
aam
cmp
icebp
inc
loopne
scas
or
movsb
push
cmp
movsl
sarl
push
stos
cmp
pop
sub
xor
adc
ljmp
jnp
adc
in
gs
xchg
mov
ljmp
xor
push
sbb
or
pop
mov
xchg
aam
ljmp
pop
push
loop
dec
ja
loopne
dec
insb
dec
pop
ret
lea
mov
imulb
jge
cs
lret
jne
arpl
daa
in
inc
scas
sbb
mov
sti
and
aas
cmp
lds
popa
jo
leave
xchg
out
push
test
imul
les
adc
mov
lods
xor
adc
add
ficoms
push
pushf
cld
fcmovne
mov
jb
xchg
or
sbb
xchg
xor
outsb
aaa
xor
mov
mov
je
sbb
lret
rolb
data16
stos
sbb
clc
aaa
or
push
mov
iret
mov
xor
stc
out
adc
out
jo
sub
and
int3
push
lods
insb
inc
push
fs
push
sbb
sub
push
fcoms
jae
sub
and
pop
stc
mov
cmp
xchg
lea
mov
and
loope
shrl
push
xchg
jmp
js
push
fwait
shlb
xor
inc
leave
and
aad
pop
dec
andb
gs
adc
sbb
repnz
fs
fs
push
cld
sub
lcall
icebp
and
out
fidivrs
insb
push
xor
movsl
sbb
incb
popa
daa
mov
stc
lahf
dec
or
mov
jae
shrb
data16
sub
test
test
repnz
xor
mov
stc
xor
lods
call
icebp
mov
test
inc
call
in
push
mov
mov
jecxz
cmp
rcrl
cmp
aaa
xchg
cmp
sti
cmpsl
xchg
ds
lock
into
fisubl
and
das
scas
pop
in
scas
dec
mov
pop
inc
outsb
aaa
mov
lret
lahf
xchg
mov
aam
ret
js
insl
rcrl
mov
and
cmp
je
mov
add
lds
mov
jecxz
adc
add
cld
add
enter
inc
jg
daa
out
and
xlat
inc
insl
mov
add
testb
imul
hlt
cmp
or
sbb
jp
fs
mov
add
in
cld
jns
or
jne
and
bound
imulb
fs
scas
lock
xchg
mov
pusha
add
lret
fiadds
imul
repnz
and
adc
mov
ss
jnp
lods
in
xlat
xchg
add
rolb
shrb
push
pushf
dec
in
mov
xlat
add
test
ror
leave
xor
les
mov
add
jge
rclb
shrl
add
mov
arpl
adc
pop
mov
aas
pop
push
inc
out
cwtl
xchg
sub
shrl
insb
leave
in
xor
jge
xor
int3
aas
adc
xchg
dec
stc
imul
ror
ljmp
shrb
push
fmulp
leave
jbe
out
push
adcb
adc
push
cltd
das
lock
xchg
repnz
fdivrs
leave
xor
jl
in
xor
imul
gs
imul
mov
and
fwait
xor
fmulp
inc
call
lahf
pop
jo
jl
enter
hlt
pop
out
fneni(8087
mov
sbb
ret
sbb
cmc
lcall
test
mov
scas
sbb
out
scas
ljmp
mov
add
xor
call
stc
mov
and
in
repz
roll
call
push
insb
xchg
decl
jb
xor
pusha
sbb
shrb
fsub
loopne
leave
xor
sbb
lret
jns,pn
or
and
ljmp
or
test
jo
outsl
dec
and
xchg
aas
ret
rcll
scas
lret
shll
mov
cwtl
sbb
arpl
mov
mov
and
push
mov
std
outsb
add
or
fnstsw
out
scas
cmpsb
fisttpll
cmpsl
adc
or
es
lcall
repz
iret
mov
jo
mov
punpckhdq
jecxz
cmpsb
js
xor
lret
idivb
test
mov
ja
fwait
pop
js
sub
test
push
mov
shrl
int3
stc
divb
lods
dec
jno
add
lret
cltd
rclb
leave
cmp
iret
and
push
dec
movsl
mov
xchg
gs
ficompl
enter
je
data16
cmc
orl
jecxz
nop
xor
bswap
insb
push
xor
pop
je
pop
push
pop
mov
test
sbb
xlat
outsl
xchg
mov
add
or
sbb
adc
xlat
int3
or
and
xchg
ret
jp
lock
loope
das
xor
push
fisubs
mov
subl
int3
push
test
adc
xchg
fnsave
mov
pop
jg
mov
xor
out
pop
adc
add
cli
push
and
es
jl
add
stc
stos
jb
cmp
movsb
in
inc
out
dec
jo
jl
jo
into
stos
rcll
push
xor
std
into
and
out
mov
adc
xor
mov
push
adc
jne
push
out
xchg
repnz
into
or
cmp
or
mov
loope
inc
out
int3
mov
sbb
and
shr
int3
and
lock
dec
out
sub
leave
cmp
mov
fisttps
mov
inc
mov
xlat
lret
cmp
lods
dec
fucomi
inc
icebp
mov
cmp
jnp
sbb
add
jp
xchg
mov
popl
jb
roll
fadds
mov
cwtl
sub
mov
repnz
ret
pusha
xchg
dec
jge
imul
sahf
addl
xchg
mov
sbb
loope
pop
mov
mov
jg
mov
in
sbb
xchg
mov
sub
dec
cmp
les
cmp
push
les
pop
cmp
leave
push
hlt
cmp
sub
lahf
dec
hlt
cltd
sahf
das
ret
sub
lret
fmul
fs
stos
xor
jb
cmp
insl
testl
fdivrl
add
or
fwait
mov
cmpsl
mov
fnsave
ss
int
gs
xchg
cmc
arpl
int3
push
lcall
push
push
pop
les
movsl
mov
jno
inc
mov
fwait
in
and
sbb
inc
dec
sbb
inc
adc
test
mov
test
dec
cltd
push
sbb
roll
mov
mov
js
out
movsl
int3
mov
ss
fsubr
sbb
loop
fwait
mov
pop
jne
stc
xchg
stos
sbb
or
mov
rcrb
enter
xchg
les
cmp
clc
pop
mov
cmpsb
fwait
into
fcmovu
movsl
mov
mov
orb
cmp
mov
divps
push
mov
mov
cmc
cmp
adc
mov
pop
sbb
add
popf
xorb
jno
inc
mov
enter
ret
dec
loopne
and
xchg
add
pop
xchg
nop
xchg
test
daa
pop
jbe
rorl
out
inc
inc
sub
pop
cmpsb
mov
outsl
cmp
dec
cmp
ret
xor
adc
mov
xchg
pop
lret
mov
dec
and
ss
cmpsl
and
cmp
loop
sub
adc
pop
xor
cmpsl
dec
movsb
xchg
jbe
mov
hlt
and
lret
jp
imul
stc
jb
lret
addr16
mov
xor
sbb
xchg
adc
or
mov
dec
out
push
dec
push
lret
cs
pop
pop
dec
and
imul
pop
in
push
adc
push
xchg
mov
pop
fcoml
and
adc
roll
ret
push
dec
sub
into
mov
icebp
nop
hlt
mov
aaa
xor
mov
bound
mov
or
jae
jecxz
fsub
test
lcall
ljmp
into
jae
dec
pop
fmuls
push
fmulp
fs
std
sub
popl
mov
and
pop
ljmp
fwait
stos
cmc
sbbb
xor
cmp
scas
lock
cltd
mov
das
out
test
mov
hlt
pop
mov
jge
shlb
mov
ret
mov
jo
cwtl
nop
sti
dec
add
jb
cltd
test
addb
jg
lgs
mov
cs
ret
cmpsb
notl
xor
cli
mov
lock
pusha
lcall
test
cmp
add
movsb
sub
out
cmp
outsl
push
push
fdiv
push
addb
jg
cld
int
ja
pop
inc
inc
sub
std
fsubrl
dec
movsl
inc
mov
fmul
jb
mov
xor
mov
add
int
scas
add
leave
cmp
push
shl
or
rclb
pop
push
sub
lcall
sbb
ficoms
shll
xor
cmc
adc
sbb
lret
add
pop
jmp
mov
adc
lahf
push
mov
jecxz
xor
shlb
xor
test
sbb
mov
jp
ret
push
std
mov
int3
jbe
sarb
sbb
push
rclb
mov
inc
aaa
fimuls
loope
jae
je
test
rcrb
aas
pop
cmpsl
pop
xchg
cltd
into
xor
cmp
sbb
enter
and
pop
jge
fwait
inc
out
xchg
ret
lods
in
add
mov
sub
in
inc
lcall
aam
sbb
pop
push
and
lea
dec
push
ds
xor
out
incl
pushf
mov
fbld
xchg
mov
push
xchg
xor
push
addr16
popf
sbb
leave
dec
mov
out
adc
pop
xchg
sub
aas
lods
dec
cmpsl
pop
and
sub
leave
roll
enter
dec
addr16
dec
pushf
hlt
cmp
mov
cmpsb
push
fidivrl
and
ds
sub
push
inc
mulb
stos
adc
push
adc
cwtl
or
add
and
jns
dec
rcll
iret
mov
sarb
lcall
lods
pop
mov
adc
push
xor
scas
cs
cmp
loop
imulb
adc
push
mov
and
stc
sbb
bound
out
jge
dec
lcall
loopne
or
test
add
out
push
adc
sbb
adc
xchg
xchg
imulb
pop
movsb
stos
fimuls
iret
lret
push
cltd
or
stos
lods
push
cmp
push
xchg
push
push
jp
ret
pop
dec
mov
mov
mov
outsl
and
or
imul
xor
cmp
movsb
aas
aas
inc
inc
test
and
inc
movsb
leave
daa
mov
ja
mov
jb
in
sbb
mov
pop
xchg
cltd
imul
lds
testl
in
jo
loopne
ss
testb
or
ja
hlt
mov
pop
aad
rcrb
and
test
popf
fsubrs
push
iret
negl
or
sbb
mov
rcrl
adc
aam
xor
ds
add
jo
push
into
out
xchg
flds
cmp
cld
fcomp
and
iret
dec
cmp
or
pop
pop
sub
int3
push
dec
pop
xlat
mov
or
mov
bound
enter
out
mov
push
xchg
adc
stos
clc
pushl
scas
pushf
jp
dec
mov
sub
mov
lods
ljmp
or
into
cmp
pop
adc
sbb
adc
mov
sbb
mov
and
cmp
and
setno
push
test
loope
or
stc
xor
fisttpll
sub
add
mov
mov
orl
loop
or
fidivrl
bswap
push
fisubl
movsb
rolb
in
pop
in
or
out
rcr
adc
data16
mov
daa
mov
and
cmc
push
add
dec
inc
mov
es
js
xchg
push
scas
frstpm(287
sbb
mov
sub
fwait
pop
insl
xchg
sti
mov
subl
fildl
inc
loopne
xchg
hlt
dec
inc
cs
test
adc
shll
xor
add
popa
insb
jnp
lods
das
xchg
adc
mov
rorl
hlt
leave
cmp
jle
jo
inc
adc
inc
mov
inc
mov
in
pcmpgtd
jl
push
sbb
push
ja
in
pop
pop
jmp
inc
inc
fs
mov
mov
insl
cmpsb
mov
cmpsb
out
or
shlb
inc
xor
icebp
int3
adc
adc
push
push
and
fidivl
add
inc
push
and
xchg
or
sbb
jns
lahf
sbb
sahf
cmp
xchg
or
test
fsubrs
int
push
mov
mov
lds
sbb
mov
repnz
add
adc
pop
pop
aas
pushf
mov
pop
leave
inc
jp
fbld
setns
lea
enter
xchg
out
stos
divb
mov
cli
and
xchg
loop
cmp
aaa
divl
add
repnz
fucomi
adc
adc
cmp
push
into
lcall
lock
or
xor
outsl
jl
xor
add
lahf
jnp
int3
add
ret
dec
jb
das
popa
push
pushf
jns
or
push
imul
mov
div
and
sub
sub
rol
aam
push
fisttpl
ss
jbe
xchg
mov
lahf
popa
dec
add
cmp
and
stos
outsb
and
sbb
shlb
cmpsl
shll
sbb
inc
mov
jmp
out
mov
inc
loope
loop
and
fbstp
outsl
mov
lcall
sti
mov
ret
dec
arpl
int3
dec
out
in
xchg
fists
mov
dec
cli
adc
pop
mov
add
push
jp
jae
dec
in
cld
aad
sbb
scas
pop
notl
pop
push
push
pop
and
je
daa
xorb
pop
dec
in
bound
pop
cmpsb
adc
dec
ljmp
dec
into
xchg
outsb
rorl
mov
in
jge
leave
jge
cmp
xchg
arpl
insb
in
scas
pop
aam
idiv
push
push
rcr
mov
dec
cmpsl
jle
int3
adc
mov
cli
loope
or
ret
and
movsl
ljmp
xor
stos
int
sbb
jg
cld
and
imul
in
lock
mov
push
push
int
data16
or
subl
adc
mov
shl
insb
mov
clc
or
xchg
ljmp
mov
lahf
and
mov
or
out
ret
sbb
popa
loop
test
adc
jno
stos
fxch
inc
xchg
push
sub
shl
xchg
mov
xchg
in
jnp
les
and
pop
cmp
sti
mov
les
mov
lret
or
test
test
cs
mov
jmp
dec
lcall
rcrl
or
jp
int
call
jne
ljmp
push
dec
enter
xchg
adc
mov
cwtl
dec
mov
jns
inc
aam
bound
ja
stos
out
sbb
push
sub
inc
mov
and
icebp
cmp
mov
stos
dec
mov
out
pop
in
jnp
cmp
inc
cwtl
or
sbbb
jnp
xchg
addr16
push
pusha
imul
adc
pop
inc
xchg
imul
shr
imul
mov
sbb
out
mov
fldl
repz
pop
loop
rcrb
out
outsl
push
bound
mov
lods
jp
aad
ret
mov
adc
xor
push
aam
xor
rorl
and
shl
xchg
push
and
out
es
lods
pop
dec
fistpll
bound
sub
clc
pop
xorl
push
mov
dec
jmp
pop
js
out
or
sbb
mov
cmp
enter
std
mov
movsl
jecxz
cld
mov
repz
mov
nop
push
push
imul
insl
outsl
adc
pop
dec
push
fcomip
and
ja
add
ret
aad
adc
xchg
pop
out
mov
lods
scas
inc
dec
loopne
test
in
push
inc
xlat
cmp
jg
sub
aad
pop
xchg
shrl
mov
ljmp
pushf
aas
inc
jge
adc
lock
fistl
mov
pop
mulb
jg
shrb
pop
lret
sbb
fidivrl
xchg
stos
dec
or
jns
push
stc
xchg
sbb
push
in
movups
leave
xor
jmp
jne
xor
cld
add
pop
sti
dec
jmp
pop
fadds
out
repz
mov
or
mov
mov
xor
int
jecxz
mov
sbb
xchg
dec
stos
xlat
mov
xorb
or
mov
rolb
cmpsb
inc
inc
cmc
outsl
das
inc
fstl
jne
mov
insl
mov
pop
mov
and
add
xchg
icebp
cmp
cmc
jecxz
es
fnstsw
or
jmp
dec
xchg
jle
ret
mov
sbb
aas
mov
jae
mov
sub
cmp
jmp
aam
mov
jmp
das
jns
aam
sbb
xchg
sar
push
lahf
fsubrl
sahf
popa
dec
test
sub
mov
xlat
shlb
or
out
shrl
test
stos
inc
fxch
scas
fstp
or
cltd
pusha
rorl
sbb
adc
imulb
mov
bound
or
dec
aad
xor
cmp
loop
push
xlat
mov
or
push
shl
in
movl
cmp
push
xchg
cmp
test
dec
inc
jg
cwtl
mov
bound
cmpsl
jns
push
cld
mov
sbb
lock
mov
add
pop
cmp
js
adc
mov
repz
xchg
lahf
lea
gs
iret
sub
test
cli
pop
mov
lcall
jo
mov
sti
in
mov
jle
add
xor
xchg
aad
add
ret
cs
aad
lret
jbe
outsb
mov
xor
sbb
and
out
leave
or
sahf
mov
sbb
and
dec
sub
imul
push
outsb
cmp
out
stos
jmp
or
aas
fwait
int
push
and
cld
fs
outsb
aas
push
jbe
movsb
mov
mov
inc
insb
fistpll
and
lret
xchg
enter
cmovno
jo
adc
outsb
sbb
cltd
xchg
aam
sbb
popf
ret
movsb
jno
das
je
mov
jb
fucomp
xchg
pop
jns
sub
lret
adc
sar
sub
fistl
or
sbb
repnz
shll
inc
inc
xlat
and
addr16
jecxz
lahf
mov
jno
lahf
sub
sahf
xchg
rcrb
lcall
ret
cmp
jno
lret
adc
mov
aaa
sbb
dec
sub
and
sub
jo
cli
cmp
iret
cmpsb
pop
and
pusha
bnd
mov
jbe
pop
xchg
popa
mov
iret
scas
loop
loop
cli
xor
popf
pop
lcall
or
lds
mov
pop
xor
outsl
sahf
hlt
adc
stos
stos
jle
fcmovnb
fcmovnu
cmpsl
mov
sbb
das
clc
into
mov
rcrl
rcl
cmp
push
lock
hlt
jb
imul
mov
int3
jae
push
mov
ficompl
jae
add
mov
jle
sub
aam
fmulp
imul
sbb
gs
ljmp
je
js
ss
daa
adc
int
push
xor
xlat
push
std
and
rcrb
mov
mov
add
stos
sahf
daa
sarb
clc
jge
push
mov
dec
imul
mov
adc
lcall
jno
dec
add
mov
or
fidivrs
sbb
jno
lock
out
xor
push
push
jmp
cmp
xor
sti
out
mov
mov
bound
or
or
or
mov
leave
mov
ret
inc
outsb
sahf
sti
sub
sub
jns
fistpl
testl
js
lods
adc
xchg
pop
bnd
and
les
push
jmp
adc
xor
ret
stc
or
fdivrl
jmp
dec
negl
lods
shll
and
xlat
and
sub
mov
ss
ret
cmp
fucomip
enter
jg
mov
adc
hlt
test
scas
xlat
inc
jmp
mov
rclb
pop
dec
xchg
and
sub
in
loopne
adc
xchg
test
sbb
or
xrelease
mov
jge
jae
and
mov
test
push
jp
pop
arpl
mov
cmp
mov
lret
bound
and
iret
pop
pop
test
fwait
adc
arpl
pop
jmp
in
cmpsl
cs
mov
push
stos
pop
mov
jle
ja
ror
cmpsl
xlat
xchg
rcl
push
adc
xor
