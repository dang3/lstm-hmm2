push
push
or
push
push
neg
pop
lea
lea
xor
xor
add
add
lea
lea
mov
sub
inc
pop
xor
pop
and
sub
movl
and
xor
movl
bswap
and
and
add
mov
xor
inc
mov
movl
lea
mov
push
and
mov
lea
push
lea
sub
mov
mov
mov
or
push
and
xor
and
mov
shll
mov
xor
xor
and
mov
push
and
call
mov
lea
sub
mov
mov
mov
add
add
mov
ss
neg
mov
sub
dec
add
lea
and
dec
or
bswap
mov
sub
lea
sub
sub
lea
add
lea
lea
and
imul
inc
or
xor
sub
mov
mov
mov
mov
lea
inc
movzbl
lea
lea
inc
mov
push
not
push
or
lea
push
sub
mov
add
and
add
movsbl
add
and
or
not
add
and
sub
xor
push
movzwl
addl
add
mov
add
mov
neg
not
add
lea
push
push
mov
mov
add
push
and
push
push
movzwl
push
mov
lea
inc
sub
push
movswl
movzbl
xor
mov
add
lea
add
lea
and
movl
neg
movzbl
push
add
lea
push
mov
add
push
mov
and
push
add
lea
push
or
lea
push
not
inc
push
add
add
sub
mov
mov
and
mov
lea
and
and
sub
or
inc
and
sub
mov
add
add
push
inc
lea
sub
xor
lea
mov
add
lea
lea
inc
add
and
push
bswap
bswap
sub
mov
sub
imul
lea
and
movsbl
inc
mov
lea
sub
lea
mov
inc
and
lea
push
xor
lea
and
and
xor
mov
and
and
sub
and
sub
xor
bswap
xor
inc
mov
sub
inc
add
lea
xor
lea
add
add
sub
add
mov
mov
sub
movzwl
lea
add
imul
add
addb
movzbl
inc
or
mov
inc
xor
sub
lea
mov
inc
lea
push
lea
add
inc
inc
and
and
movsbl
not
lea
imul
and
mov
sub
and
sub
imul
and
and
lea
sub
imul
sub
inc
and
lea
add
mov
call
lea
and
mov
neg
and
mov
lea
bswap
mov
cmpb
je
mov
mov
sub
imul
xorl
sub
mov
and
sub
mov
add
sub
lea
sub
xor
mov
sub
inc
shl
and
add
mov
not
inc
push
lea
and
lea
mov
add
popl
inc
and
and
inc
lea
and
sub
lea
xor
mov
add
mov
and
pop
inc
jmp
or
push
add
and
push
add
mov
push
movzbl
mov
push
and
lea
pushl
sub
inc
pushl
add
and
mov
sub
lea
movsbl
add
bswap
sub
call
lea
imul
lea
inc
add
and
inc
pop
lea
add
pop
lea
lea
pop
movsbl
add
sub
mov
xor
mov
add
inc
mov
or
xor
mov
lea
and
mov
lea
add
xor
and
movzbl
dec
movzwl
or
mov
xor
lea
add
not
and
mov
and
sub
sub
movzbl
add
mov
mov
neg
lea
inc
add
mov
xor
inc
lea
inc
incb
mov
inc
imul
sub
inc
inc
inc
or
mov
cmp
jb
bswap
inc
inc
sub
and
push
or
sub
push
mov
inc
push
add
sub
lea
mov
lea
mov
mov
add
xor
and
imul
xor
xor
inc
xor
lea
inc
push
mov
and
lea
mov
sub
sub
mov
mov
inc
mov
lea
mov
movzbl
and
xor
push
not
inc
movzbl
not
xor
add
lea
add
add
and
sub
pop
mov
imul
movzbl
lea
not
inc
and
sub
mov
neg
add
cmp
jb
lea
xor
mov
add
mov
and
mov
inc
add
add
push
add
lea
lea
movswl
add
mov
and
sub
lea
neg
mov
mov
mov
mov
mov
inc
inc
pop
movswl
lea
mov
not
lea
test
jne
xor
inc
lea
add
inc
sub
sub
and
and
inc
inc
mov
lea
not
inc
xor
lea
and
xor
lea
mov
pop
and
lea
mov
or
not
mov
lea
inc
test
jbe
lea
inc
lea
and
movzbl
mov
imul
pushl
lea
bswap
pop
add
bswap
movzbl
inc
bswap
add
and
and
movzbl
sub
lea
mov
mov
and
mov
inc
movsbl
add
add
xor
add
mov
mov
movb
and
movzwl
dec
mov
not
sub
mov
sub
mov
and
and
and
sub
sub
or
sub
inc
lea
and
mov
movb
inc
or
mov
bswap
lea
and
movswl
and
sub
and
not
lea
xor
inc
and
or
mov
lea
add
xor
lea
movzbl
lea
not
lea
add
and
movzbl
add
lea
push
mov
or
xor
lea
and
dec
inc
lea
mov
or
bswap
inc
lea
neg
inc
sub
bswap
and
and
imul
pop
lea
xor
inc
xor
and
dec
jne
and
pop
inc
xor
pop
inc
sub
pop
or
movsbl
add
not
sub
pop
lea
and
add
sub
add
push
and
ret
lea
and
movzbl
mov
mov
inc
bswap
lea
add
inc
or
sub
mov
lea
lea
movswl
lea
sub
movswl
and
bswap
xor
inc
xor
lea
lea
add
not
inc
not
mov
or
mov
mov
lea
mov
or
sub
pushl
add
xor
push
and
mov
xor
bswap
bswap
mov
mov
add
add
or
add
cmp
je
mov
add
mov
jmp
sub
xor
movzbl
add
mov
sub
mov
lea
mov
add
lea
sub
imul
mov
lea
mov
mov
lea
or
lea
and
inc
push
and
sub
mov
xor
lea
pop
lea
bswap
mov
mov
add
cmpb
je
add
push
inc
or
pop
mov
lea
push
and
movswl
push
add
add
push
lea
or
push
lea
and
push
inc
sub
push
bswap
lea
push
add
add
call
sub
xor
push
movsbl
bswap
push
sub
and
pop
lea
sub
lods
movzwl
add
pop
sub
add
mov
lea
inc
sub
je
or
push
sub
lea
call
mov
imul
call
mov
and
call
mov
mov
iret
xor
inc
bswap
sub
and
or
iret
xor
and
and
movswl
add
movsbl
inc
mov
and
lea
call
lea
add
mov
mov
movswl
ret
imul
inc
add
sub
add
ret
mov
lea
lea
inc
xor
lea
or
add
ret
mov
dec
and
add
inc
jne
add
add
add
cwtl
outsl
cwtl
sahf
sbb
ret
jp
mov
cld
shll
jns
in
dec
std
push
xor
push
sbb
or
bound
sub
mov
int
cmc
nop
es
hlt
cltd
mov
mov
aas
and
push
push
pop
xor
orb
xchg
cmp
dec
pop
dec
lahf
xlat
in
js
mov
pop
mov
inc
cmp
jb
inc
bound
mov
inc
outsb
popa
jbe
cwtl
test
inc
and
clc
add
dec
xchg
lahf
loope
test
les
add
pop
or
adc
rcl
dec
jmp
sarb
shll
inc
repz
out
aam
in
aad
mov
lcall
ror
cmc
in
lret
out
jp
rcll
ljmp
hlt
sti
adc
fstl
inc
aas
movsl
inc
imul
ds
jg
jl
cmc
jl
fnstcw
aas
dec
ja
ljmp
push
fwait
popa
daa
ss
jle
out
push
sbb
out
cmp
outsl
mov
jl
lahf
sbb
and
xor
xchg
inc
scas
adc
inc
jbe
pop
out
add
mov
pusha
loop
int3
insl
loopne
add
add
cmp
sbb
add
pop
int
mov
mov
inc
or
xchg
xchg
push
outsb
jnp
fistpl
jl
inc
inc
push
fmuls
sub
lret
rclb
adc
sub
out
mov
ds
icebp
mov
fs
push
enter
jb
cmp
orl
call
mov
out
sbb
mov
jmp
push
ret
cmp
lea
cmc
pop
imul
aam
sbb
sar
fisttpll
clc
mov
fbstp
sahf
subl
mov
xchg
xor
jb
jno
fdivl
in
ljmp
rcr
cmp
test
jp
repz
adc
jl
cmp
fisttpl
in
cmp
jno
cltd
and
call
int
xor
inc
cli
aas
call
mov
int
push
xor
pop
inc
lods
and
cmpb
and
dec
mov
pop
lds
pusha
std
mov
sub
and
lods
iret
push
mov
enter
pop
xor
pop
stos
pusha
inc
in
mov
push
outsl
aas
pop
push
fdivp
lds
ja
add
enter
shrw
outsl
mov
aas
outsb
cmp
push
out
mov
adc
pop
inc
xor
jg
xchg
jae
mov
in
les
gs
pop
jb
push
popa
addl
cltd
sahf
and
or
add
test
or
lds
hlt
icebp
mov
fisubrl
jns
and
push
cltd
sbb
push
pop
mov
pop
and
dec
test
rcrl
mov
stc
or
testl
jecxz
gs
aaa
xor
adc
in
pusha
fnstcw
sub
pop
test
daa
xor
pop
arpl
idivb
mov
push
xor
stc
inc
push
and
push
cmpsb
add
jo
outsb
movsl
stos
popf
in
xchg
fldenv
aaa
pop
push
inc
outsb
fldcw
xchg
bound
pop
dec
adc
or
jle
shrl
cmp
cli
add
pop
out
and
xchg
xchg
inc
inc
bound
push
fsubp
add
movsl
imul
dec
add
pusha
insb
cltd
or
cmpsl
fmull
ss
incb
xchg
cmp
clc
push
jnp
outsl
hlt
inc
mov
sti
stc
mov
clc
or
clc
xor
fldt
adc
mov
pop
push
mov
dec
das
and
test
lret
pop
sub
roll
mov
xchg
jp
outsl
addb
lahf
clc
cmp
cmp
cmpsb
outsl
mov
insl
lods
push
mov
jecxz
cwtl
or
cmp
inc
pop
arpl
pop
sbb
jge
sahf
inc
inc
rcrl
idivl
mov
or
test
xchg
xor
dec
jb
sbb
daa
push
dec
cmp
dec
inc
adc
cmc
call
aam
adcb
or
ret
sti
or
xchg
cmp
cmp
xor
jnp
loopne
jns
sub
testl
pop
jle
imul
out
aam
or
lea
cld
aaa
inc
add
dec
mov
jmp
xor
and
add
sti
xchg
jle
xchg
and
lods
push
loope
cltd
hlt
nop
mov
icebp
ret
cmpsl
cltd
inc
jns
cmp
jbe
enter
pusha
popf
lcall
dec
mov
dec
mov
popf
and
cmpsb
fcmovnbe
push
cmp
gs
mov
adc
fxch
das
fimull
mov
loope
pop
xor
push
pop
pop
dec
push
nop
inc
imul
hlt
pop
loopne
sbb
bound
dec
ja
addl
aaa
cld
or
jg
add
cmc
mov
sbb
js
test
das
mov
and
cmp
nop
adc
mov
in
mov
out
add
inc
movsl
imul
imul
jbe
adc
dec
fdivrs
adc
int
add
mov
ljmp
mov
mov
sbb
scas
xor
pop
jb
dec
xor
jb
sbb
push
cmp
and
in
out
aad
es
cmpsb
sub
mov
xorb
jmp
cld
ja
ret
icebp
test
subb
ret
loop
scas
ss
enter
jb
push
sub
xchg
ss
movsb
or
loopne
sbb
adcb
mov
in
push
mov
or
pop
or
adc
sub
pop
fldt
jo
dec
dec
rcl
sbb
std
inc
sub
movsb
sbb
mov
leave
int3
dec
popf
repnz
xlat
out
dec
in
jae
jl
hlt
sbb
jp
out
test
mov
push
aas
scas
js
nop
insl
gs
push
pop
push
movsl
hlt
lahf
add
test
cmp
divb
push
popf
mov
xchg
mov
push
shl
lret
jg
mov
je
stc
xor
sbb
jns
add
sbb
adc
adc
add
add
popa
fwait
xor
and
inc
icebp
into
mov
test
nop
sub
jae
std
inc
jo
rol
cmpsb
add
mov
fwait
pop
out
in
out
call
test
imul
or
repz
jecxz
loopne
lods
mov
xor
mov
mov
arpl
or
iret
es
xchg
and
stos
shll
ret
mov
mov
ss
push
fwait
mov
aas
jno
out
lock
loope
scas
arpl
xor
enter
in
dec
sbb
push
cld
sub
gs
xor
jne
pop
xchg
dec
divb
add
shrl
sub
pop
mov
stos
std
stc
gs
ret
clc
jbe
jecxz
push
mov
ret
int
push
pop
xchg
sub
dec
pop
jo
fisubl
jns
call
sbb
cmpsl
inc
in
shlb
push
sbb
ljmp
or
push
mov
mov
in
add
mov
mov
adc
ret
or
rcrl
rcl
push
sub
rolb
mov
scas
add
pop
push
inc
cmp
push
mov
or
add
jl
xor
mov
mov
pop
sbbb
sbb
data16
ret
in
cmp
sbb
lds
into
inc
fisubrl
hlt
add
push
adc
or
cmp
jle
in
jne
mov
xchg
sbb
jecxz
dec
lea
pop
xor
push
cmp
imul
ljmp
xchg
pop
cs
jmp
test
adc
movl
pop
enter
int
fisubrl
xorl
xor
dec
sub
inc
mov
pop
push
fwait
add
dec
fistpll
popf
push
pop
and
push
and
and
push
jle
arpl
loop
dec
mov
push
push
mov
inc
aam
xchg
push
pop
addr16
and
iret
xor
std
jecxz
test
sbb
xor
ds
stc
fwait
in
mov
sahf
movsb
dec
scas
push
out
mov
or
dec
inc
and
bound
pushf
xchg
jl
or
ret
aam
jae
mov
sub
push
jae
aam
mov
cmpsl
xchg
xor
ret
mov
mov
aad
nop
pop
loope
sub
sti
mov
decb
jecxz
inc
clc
fistl
testl
mov
es
push
adc
jb
mov
imul
jns
out
cmp
int
clc
and
xchg
pop
outsl
scas
pop
es
fdiv
rolb
stos
pop
ret
clc
shrb
ja
mov
sbb
mov
push
xor
xchg
or
jg
jmp
stos
int
popf
add
std
fnstenv
test
lret
cld
mov
fwait
insb
pop
mov
jo
and
adc
in
pop
test
iret
inc
sub
or
mov
mov
out
or
inc
push
stc
inc
mov
stos
data16
fs
ljmp
pop
xchg
cmpsl
pop
bound
mov
ret
popf
test
and
and
sub
xlat
mov
cmp
jne
lret
jnp
fdivs
pop
test
xchg
fdivs
pop
dec
mulb
leave
jo
mov
mov
xchg
mov
sbb
addr16
mov
in
lods
add
cmp
mov
outsb
scas
outsb
addr16
pusha
mov
inc
lahf
xor
or
fs
dec
mov
pop
or
arpl
dec
dec
cmp
and
lret
icebp
dec
mov
sub
xchg
sbb
mov
sub
pop
xor
dec
xchg
push
mov
cmp
cmpsb
xor
fstpt
dec
in
repnz
js
jo
mov
imul
loop
mov
xor
shlb
faddp
sbb
push
push
or
push
into
outsl
out
inc
and
sbb
test
movsb
mov
mov
mov
enter
and
cmove
jne
xor
pop
adc
sarb
cmp
das
mov
add
and
cmc
mov
and
pop
aas
add
repz
add
sbb
