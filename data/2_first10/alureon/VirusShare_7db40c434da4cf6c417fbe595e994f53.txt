daa
out
ss
cmpsb
call
add
inc
and
test
or
sub
pop
repz
test
dec
addl
push
je
or
stc
push
push
pusha
call
fwait
dec
fsubl
or
ljmp
push
jbe
jnp
in
mov
loope
xchg
ds
out
inc
fsts
mov
cwtl
mov
out
movsl
and
push
test
lret
stc
scas
lea
popa
push
cmp
insb
fsubrs
or
adc
movsl
mov
movsl
or
xor
iret
dec
inc
test
and
push
popf
test
repz
fwait
dec
or
jmp
and
mov
stos
ss
jne,pt
es
push
push
add
xchg
or
pop
bound
mov
xor
pop
outsb
xchg
mov
xor
pop
fdivrs
jnp
pop
stos
in
out
xor
xchg
sbbb
mov
jno
pop
neg
pop
mov
lods
nop
sub
les
mov
xchg
int3
mov
stc
adc
aam
push
out
data16
testl
scas
je
jo
shrb
mov
xor
mov
inc
cmpl
xchg
pop
stos
push
inc
mov
push
fstpl
sbb
mov
cld
mov
out
jb
xor
mov
pop
sbb
and
and
xor
call
add
bound
outsl
and
movsl
mov
add
or
insb
addr16
cmpsb
adc
filds
shrl
xor
push
mov
lock
or
dec
xchg
ficoms
jl
lcall
outsl
es
jns
or
cs
ds
rcl
sbb
inc
nop
sbb
dec
add
push
bndldx
mov
dec
dec
stc
notl
inc
add
movsl
xchg
jg
dec
xchg
repnz
or
rcll
add
stos
pop
ljmp
shr
add
fstl
adc
aas
xchg
or
mov
mov
sbb
inc
sbb
loopne
jmp
mov
inc
cmc
xor
mov
push
add
rcll
clc
inc
adc
jle
push
push
push
adc
loopne
fcoms
jbe
jp
fisubl
out
out
in
xchg
and
jb
cmp
inc
mov
mov
leave
call
aas
jbe
xchg
lods
sub
or
dec
test
and
roll
pop
jg
scas
jae
ja
shlb
and
call
outsl
icebp
or
push
gs
shrl
lret
cmp
dec
and
movsb
xor
mov
shll
les
shl
es
xchg
in
or
lods
mov
push
push
cwtl
das
push
push
shl
or
int3
ja
mov
idivl
shlb
and
mov
dec
adc
adc
add
shl
test
movsl
xchg
xor
mov
sbb
lahf
divl
pushf
cmc
mov
std
mov
dec
pop
ficoms
jmp
push
setae
sbb
push
cmpsl
xor
pop
cmc
out
mov
dec
sbbl
sbb
loope
sbb
push
push
negb
add
add
fmull
lods
cmp
pop
stos
dec
or
mov
inc
leave
test
ret
sbb
lods
insl
test
mov
lds
rcrl
cmpsl
add
cmp
and
mov
aam
aas
sbb
mov
mov
std
out
sti
les
lret
aad
or
add
cmpsl
pop
cltd
xchg
fbld
push
stos
inc
pop
jb
xchg
add
or
adc
fucom
xlat
mov
cwtl
pop
mov
xchg
mov
add
ret
mov
adc
push
or
and
jae
cmpsb
in
cmpb
dec
add
scas
gs
test
icebp
cmp
roll
pop
test
xlat
inc
mov
out
movsb
mov
lret
xchg
mov
push
loop
lea
mov
adc
fldenv
mov
imul
push
test
cmp
scas
push
pusha
and
jnp
clc
imul
xor
cltd
iret
jge
pushf
mov
push
adc
or
cmp
sbb
popf
and
cmp
inc
stos
fucomi
push
nop
imul
xchg
cmpsb
lock
imul
lods
scas
xchg
add
test
adc
mov
cli
movsb
ret
ss
add
test
repz
mov
sbb
or
ss
mov
fisubs
mov
cld
xor
dec
div
out
or
xchg
ljmp
fbld
xor
movsb
ja
dec
inc
call
pop
loope
and
in
js
lods
scas
dec
cmp
aaa
in
notl
mov
lahf
inc
sbb
fadds
frstor
cmp
xchg
jns
dec
mov
sub
pop
pop
mov
pusha
ds
test
mov
cld
push
fsubrl
jmp
pop
pop
add
mov
or
popf
iret
ja
ja
lods
dec
and
mov
mov
fwait
xchg
insb
mov
lahf
xchg
mov
les
pop
dec
jnp
xlat
xlat
xor
shrl
add
hlt
stos
xchg
int3
jmp
pushf
xchg
adc
push
sbb
movsl
in
inc
cmp
sub
mov
aad
mov
lret
cmpsl
and
aad
lods
inc
xchg
bswap
mov
popa
push
scas
cwtl
or
jl
daa
outsl
repnz
inc
mov
inc
fsubs
sbb
pop
sub
xchg
dec
cmpsl
jns
push
nop
add
jb
and
mov
ret
cli
xchg
xchg
or
loop
cmp
cmp
stc
int
shll
cmp
insl
fld
jns
cltd
icebp
cld
dec
add
test
stc
in
addb
in
and
cli
xorb
cmp
jle
int3
scas
cwtl
lods
sub
cmp
and
mov
cli
mov
inc
inc
adc
push
pusha
inc
mov
cmp
in
push
lcall
rol
sub
jecxz
ljmp
fucomp
add
or
pop
dec
jb
mov
cmp
gs
fsubs
ficoms
loop
cmp
inc
xchg
jge
ljmp
rcl
repz
cmpsb
ja
jg
push
cmc
fimull
xchg
out
push
or
jg
outsb
incb
lea
jb
orb
testb
std
das
stos
cli
dec
in
and
inc
mov
adc
test
jmp
ds
lret
cmpxchg
push
in
xor
in
cld
fwait
sub
sbb
cmp
test
add
adc
nop
push
gs
fs
jg
test
scas
popa
cmp
test
dec
push
mov
fldl
lods
adc
lret
into
mov
test
lods
jbe
sub
and
mov
aaa
ja
sub
cmp
mov
push
cltd
and
in
and
xlat
out
test
add
mov
frstor
dec
xor
lods
nop
jae
add
hlt
sbb
shrb
ja
push
sub
cltd
test
lea
add
and
out
mov
and
outsl
xlat
aam
xchg
push
lret
mov
xor
jnp
sbb
loop
cmpsb
test
orl
ds
scas
mov
cs
sub
mov
aam
dec
xchg
aam
add
enter
sbb
cld
out
sub
sbb
pop
jbe
outsl
nop
mov
inc
loope
cmp
jmp
sbb
ret
mov
and
push
pop
cld
pop
lods
or
jb
test
test
sub
or
xor
push
mov
mov
test
outsl
xchg
leave
xchg
mov
xchg
mov
mov
fmuls
dec
insb
fldl
mov
sti
stc
loope
rcrb
push
rcr
adc
jbe
push
dec
sti
fmuls
xor
xchg
xor
pop
push
lods
pushf
sti
bound
mov
sbb
add
aaa
lcall
std
negb
jmp
jmp
out
pop
loope
pop
data16
sti
dec
icebp
mov
xchg
aas
fidivrl
xor
push
daa
or
movsl
push
aad
cmpb
mov
dec
fistpll
hlt
inc
in
push
sti
mov
dec
movsb
rol
dec
sbb
and
and
shrl
or
frstor
das
pop
ja
orb
jecxz
clc
dec
sbb
call
cwtl
dec
in
cmp
add
mov
stos
test
test
repz
push
xor
pop
pop
aaa
data16
test
ror
sub
pop
sub
mov
pop
stc
outsb
dec
icebp
shll
add
cmc
into
insb
adc
ja
lds
or
imul
mov
xor
enter
int
inc
aas
jo
andl
daa
jo
mov
orl
int3
iret
xchg
sub
scas
lahf
sbb
or
lahf
mov
pop
ss
mov
adc
xchg
lret
jne
push
shll
mov
xorb
adc
cmp
xor
mov
mov
test
push
pop
or
incl
pusha
xchg
lods
jmp
cmp
pop
jle
fists
add
lret
xor
adc
sub
jns
or
pop
and
xor
jl
fistpl
xor
pop
sub
mov
sub
xor
cmc
mov
int3
and
jmp
aaa
mov
icebp
jecxz
dec
sbb
pop
arpl
out
xor
dec
iret
stos
mov
shl
pop
enter
in
cmp
negl
std
scas
pop
jmp
popf
dec
and
movsb
std
cmp
and
cli
sti
fstp
xchg
addr16
fstpt
push
and
sub
enter
and
decb
andl
iret
add
cmpb
andb
jnp
mov
mov
sub
cs
std
jbe
jb,pn
stos
sub
mov
add
push
xchg
shr
stc
xor
dec
test
mov
inc
xor
mov
push
mov
dec
cmc
js
jo
imul
mov
outsl
lea
cmpsb
or
mov
dec
dec
pushw
push
mov
ret
or
inc
add
inc
sub
xchg
dec
mov
push
jmp
xor
adc
sub
push
dec
and
xor
adc
push
push
push
push
pop
out
mov
mov
add
orl
dec
sub
mov
pop
push
leave
add
icebp
mov
push
dec
mov
jl
xchg
scas
mov
sbb
mov
jg
es
jno
out
mov
jb
cmp
jae,pt
lds
lods
sbb
iret
push
sbb
fs
arpl
inc
push
aas
iret
repz
loopne
push
mov
adc
sub
sbb
pop
push
cli
dec
inc
xor
insl
add
sub
xor
mov
cmpsl
xor
lret
sbb
pop
and
notb
vphaddubw
add
shrb
push
js
add
pop
cld
push
or
cmpb
int
test
adc
int
mov
or
mov
xchg
imul
fisttps
ret
xchg
popf
cmp
test
inc
push
daa
idivb
lret
das
jbe
sub
add
jne
and
push
sub
add
sti
ljmp
add
sbb
or
jmp
test
lods
xchg
int
adc
int3
dec
sbb
loopne
xchg
scas
test
mov
int3
xor
into
sahf
mov
push
jo
div
pop
adc
out
rorl
in
shlb
stos
into
lcall
pop
dec
dec
dec
jae
sbb
sbb
dec
ljmp
adc
movl
sub
jge
ja
mov
sahf
inc
sub
cmpsl
daa
and
fucomip
popa
pop
into
adc
not
in
jp
scas
fwait
mov
shl
push
xchg
pop
mov
xchg
call
ljmp
mov
mov
sub
xchg
sti
xor
pop
inc
movsb
inc
mov
push
sbb
movsl
inc
nop
cmc
cmp
arpl
js
cltd
jg
call
clc
bound
mov
je
mov
sub
ds
int
jns
xchg
jbe
ljmp
and
scas
out
mov
sbb
jo
jae
sub
outsb
push
leave
mov
sub
jae
aam
push
jae
jp
jl
mov
inc
stc
movsb
jmp
gs
mov
lea
ret
dec
and
mov
sti
adc
ja
jmp
mov
mov
stc
cmpsb
sub
imul
outsl
clc
clc
sbb
push
cld
ja
lldt
into
sbb
repnz
ljmp
aas
sbb
bound
jmp
or
test
dec
xchg
inc
aad
cmp
orl
sbb
pop
test
jbe
aaa
push
leave
loopne
fwait
test
loope
call
lods
push
sub
push
insl
cs
add
add
ficoms
fwait
mov
pop
icebp
mov
sbb
jecxz
inc
mov
push
mov
call
push
bound
xchg
ljmp
xchg
push
andb
jne
bsr
jg
sub
int
xchg
lcall
fbstp
adcl
rcr
shrb
pop
and
pop
sbb
pop
mov
push
pop
testl
aas
jbe
dec
add
inc
in
xor
notb
scas
add
and
push
lock
mov
xchg
in
jb
movsb
arpl
lcall
xchg
adc
fisubrl
out
sbb
mov
mov
rcr
clc
arpl
xorb
divl
dec
jo
pop
inc
mov
or
repnz
or
loop
dec
mov
js
add
mov
aas
pop
mov
jl
push
rcll
out
pop
shll
in
xchg
jp
pushf
in
sti
push
mov
or
mov
fisttpl
shlb
pop
inc
mov
inc
cmp
or
out
outsb
xor
nop
mov
sbb
cld
sub
push
imul
cs
nop
mov
fmuls
sbb
notb
pop
lods
pop
mov
ds
mov
orb
adc
pop
fwait
pop
push
testb
push
pop
out
clc
adcl
loopne
sbb
pop
out
mov
aas
in
and
sub
cli
cltd
sub
adc
inc
leave
jnp
sub
sub
cwtl
rorl
cmpsb
nop
mov
jecxz
popa
jno
jb
or
cmp
insl
lahf
xor
sub
loop
cli
adc
dec
shll
or
imul
jmp
xchg
repnz
mov
sti
push
adc
cld
xor
ja
sahf
jl
mov
xchg
pop
sub
int
add
and
lcall
mov
addr16
mov
xor
push
shr
jmp
inc
enter
mov
rclb
jnp
jge
adc
push
inc
sub
shrb
or
nop
and
test
xor
ja
in
out
ds
lret
cmp
sbb
xchg
cmp
call
or
mov
int3
xlat
adc
jmp
and
pop
inc
mov
jnp
jp
pop
lds
or
filds
mov
lods
xchg
and
shll
mov
xchg
arpl
leave
mov
fistps
lret
xchg
sub
dec
repz
pop
or
or
xor
test
sbb
and
or
jae
jne
mov
fsubrp
nop
in
push
repnz
pop
in
repz
pop
ret
out
mov
xchg
and
out
or
xchg
or
addr16
fbld
in
ja
in
jb
aas
mov
mov
sbb
xor
in
sbb
test
mov
outsb
popf
jp
je
cmc
sub
lock
mov
sbb
sbb
pop
dec
xchg
jo
int
jae
out
inc
mov
and
call
cmpsl
out
ucomiss
cmpb
mov
gs
aad
les
nop
aaa
mov
mov
xchg
jp
adc
nop
and
lds
in
imul
mov
js
daa
movsb
loope
filds
loopne
push
inc
and
mov
scas
xchg
xchg
in
add
loop
jb
mov
movsl
cs
mov
xor
push
inc
cwtl
sahf
push
test
test
dec
mov
dec
cmp
xor
push
jbe,pt
mov
push
test
enter
lcall
or
sub
add
nop
mov
pushf
mov
sarb
arpl
adcl
scas
push
or
fadd
inc
push
rcl
and
out
pop
int3
ss
fnstenv
dec
jp
jne
hlt
mov
jle
or
sub
subl
cwtl
push
dec
mov
xlat
mov
stos
lret
sbbl
data16
xor
enter
and
lods
sub
lahf
or
insb
es
shr
pop
jo
scas
xor
test
sub
aam
and
cwtl
nop
in
loop
lods
std
mov
mov
dec
sub
je
sub
push
xor
jle
fcos
xlat
scas
je
xor
or
mov
mov
arpl
stos
add
xchg
cmp
stos
outsl
leave
xchg
into
outsb
aas
add
repz
sarb
cmpl
mov
push
mov
pop
pop
jmp
mov
mov
mov
repnz
or
fidivs
enter
adc
add
inc
pop
pop
daa
lret
sub
xor
imul
in
popa
sbb
cwtl
call
iret
out
push
xor
pop
sti
push
pusha
sub
adc
loop
or
push
outsl
scas
je
and
and
adc
push
inc
push
inc
sub
xlat
xchg
or
pop
mov
jmp
imul
mov
jge
mov
mov
mov
sub
or
test
adc
or
scas
mov
enter
mov
inc
pop
mov
mull
imul
bound
popf
inc
and
addr16
xor
xchg
or
imul
jl
cmp
and
enter
xchg
popa
pop
ds
adc
shll
stos
test
arpl
xor
test
cmp
mov
and
pop
pop
jl
pop
stc
dec
mov
xchg
dec
sti
adc
mov
out
ret
dec
mov
pop
scas
add
mov
and
mov
mov
pusha
sbb
je
fbld
pop
ret
mov
sub
lds
aam
jecxz
adc
xchg
shlb
mov
stc
jne
outsb
jns
xor
rcr
add
in
repz
aaa
popf
icebp
scas
js
mov
sbb
ss
xorl
stc
mov
les
and
test
fbstp
imul
fidivrl
jb
mov
shll
pop
push
add
movsb
not
pop
dec
fs
dec
sbb
pop
cmp
sbb
clc
cmp
sub
lret
stos
lea
push
inc
cltd
adcb
mov
aaa
aas
jb
fisubl
dec
mov
movsl
xchg
or
insl
jae
jno
cli
xor
pop
mov
fadds
inc
out
stos
pushf
or
push
mov
jbe
addl
pop
pop
jmp
sub
call
aad
sub
mov
ds
scas
inc
cmc
lahf
jns
inc
jae
outsb
fwait
std
fsubr
out
lea
or
iret
adc
enter
pop
jmp
enter
mov
insl
cltd
jo
cwtl
and
and
mov
cmp
xor
lds
imul
cmp
call
insb
outsl
popaw
jecxz
cmp
mov
xor
jmp
push
cwtl
int3
jl
adc
shlb
mov
sub
pmaxub
outsl
outsl
out
xchg
pop
mov
mov
xor
mov
jp
je
test
push
xor
sbb
fwait
enter
sbb
rep
js
inc
les
pusha
in
shrb
push
push
mov
in
out
mov
adc
cwtl
and
outsb
lret
mov
mov
lret
imul
pop
cmpl
negl
dec
repnz
push
fnstenv
xchg
inc
loope
xor
ljmp
fcmovne
fdivrs
sub
sbb
push
int
popf
mov
jns
fwait
xchg
loope
cmp
int
mov
mov
icebp
popa
xor
cld
mov
sahf
leave
aaa
ss
sub
sub
out
mov
addl
add
push
ror
xchg
repz
and
cld
xor
and
pop
and
jle
xor
xlat
mov
inc
imul
dec
pop
jns
mov
adc
pushf
cmp
lahf
xchg
lods
sahf
outsl
data16
jnp
or
mov
jb
cmp
out
cli
xor
mov
mov
ss
adc
clc
xchg
adc
int
shr
and
lods
movsl
inc
inc
cmp
sub
push
out
push
cmp
xor
and
xchg
cmpsl
bound
dec
into
scas
cmp
jle
ret
jl
fsubrs
inc
pusha
xlat
sbb
pushf
je
loope
mov
jmp
mov
int
das
fiadds
push
icebp
fsubr
lahf
inc
push
or
push
incb
ret
mov
aas
pop
lock
jno
cmp
jno
xlat
test
in
and
jne
mov
leave
imul
push
inc
stos
mov
cli
pop
aas
xor
nop
jge
mov
xor
xchg
cmpb
repnz
adc
pop
xor
inc
inc
out
aam
and
ss
cld
aaa
sub
dec
hlt
lock
jl
adc
jle
dec
mov
add
or
sbb
inc
or
cmpsb
stos
cmp
adc
ljmp
xor
fsubrs
nop
push
sbb
push
push
in
outsl
lock
pop
lahf
mov
dec
sub
mov
jo
add
jle
push
adc
or
add
out
arpl
lcall
pop
sbb
pop
scas
fimuls
in
andb
or
push
lds
bound
pop
inc
jae
inc
rorl
cli
in
jbe
inc
insb
in
and
push
inc
jbe
cmpl
mov
push
or
cmp
sahf
loop
mov
mov
arpl
rclb
icebp
xchg
jecxz
popf
xchg
adc
inc
mov
pop
les
test
jge
call
and
daa
mov
lahf
xchg
testb
push
nop
lods
jmp
std
outsb
pop
inc
jae
bound
ja
sub
es
ret
xor
jle
outsl
sbb
shlb
mov
push
push
mov
push
mov
adc
xchg
mov
addb
push
sahf
or
adc
dec
cmp
mov
xor
fcoml
mov
stos
outsb
out
dec
and
mov
pop
cltd
test
mov
cmp
push
sti
pop
fisubrs
xor
or
movsb
sub
jmp
adc
sub
adcb
andb
stc
int3
dec
scas
lods
stos
mov
inc
jae
sub
cmp
push
push
mov
in
mov
sub
mov
jb
mov
pop
repz
cmp
test
jmp
xchg
xor
cwtl
es
jg
fsubrp
pop
mov
mov
movsl
enter
daa
ss
mov
lea
sbb
sbb
sub
and
bound
loope
xor
xor
pop
mov
cmpsl
cmp
outsl
cld
aas
and
in
das
xor
jns
mov
pop
jp
mov
nop
add
add
rorl
mov
inc
dec
sub
jo
idivl
pop
inc
jle
or
inc
mov
aad
and
cltd
and
inc
sub
mov
sub
enter
adc
outsl
jbe
lcall
int3
mov
dec
pop
push
aam
aam
push
mov
sub
test
js
and
sbb
adc
adc
imul
inc
mov
out
push
pop
mov
int
out
or
inc
pusha
sti
movsl
pop
popf
mov
and
out
xchg
adc
imul
insb
jmp
sub
les
push
lahf
mov
daa
outsb
inc
jb
pop
pusha
std
out
lret
mov
sbb
adc
bts
lret
aam
arpl
jo
cmp
inc
leave
js
jp
push
cmpsl
adc
xchg
sub
iret
pop
adc
pop
test
repnz
add
enter
mov
xor
mov
insl
inc
nop
imul
or
pop
adc
popa
xor
pop
lds
shlb
pop
pop
mov
sbb
aaa
daa
popf
jp
jo
das
inc
aad
stos
mov
xchg
fisttpll
mov
adc
dec
leave
stc
mov
adc
mov
sub
shl
leave
mov
stc
clc
rcr
pusha
dec
mov
xlat
je
es
loop
cmpl
inc
popa
push
popf
xor
lcall
mov
xchg
mov
xor
js
loope
mov
in
pop
inc
jp
fidivl
insb
sub
lock
ficompl
pop
push
ss
aam
test
cs
inc
pop
jl
xor
fisttpl
call
or
call
and
push
jmp
xchg
cmp
mov
xor
dec
sbb
or
mov
adc
je
icebp
jg
orb
dec
shlb
jmp
in
and
test
ret
mov
dec
mov
dec
js
adc
sbb
test
popa
sub
xor
iret
mov
and
dec
fmull
push
mov
fistl
loopne
imul
adc
adc
cmp
cmp
sub
add
inc
jecxz
mov
add
xor
adc
dec
cmp
adc
fbstp
pop
mov
hlt
mov
or
pop
outsl
std
mov
inc
adc
xorb
shlb
jge
mov
out
sarb
sub
push
jne
test
inc
sti
xor
inc
test
push
xor
sti
rep
sbb
dec
aas
sub
sub
sub
pmulhuw
xchg
sbb
or
push
cmp
aad
stos
lcall
in
mov
addr16
ljmp
push
scas
cmp
arpl
dec
mov
mov
jl
mov
enter
push
imul
fmull
dec
or
nop
mov
mov
outsl
stos
pop
mov
mov
inc
xchg
fnstenv
pop
mov
adc
decl
xor
fs
xor
pop
mov
repnz
xchg
cli
ret
xlat
mov
fnstenv
push
xchg
imul
hlt
mov
cmp
shrb
mov
and
push
lret
sbb
cmpsl
movsl
lock
dec
ds
and
or
lock
rorl
lods
addr16
push
xchg
sub
fwait
jg
push
xlat
cmc
stos
inc
cvtpi2ps
lods
int
sahf
push
fiaddl
daa
sti
cmc
jl
mov
jmp
push
fsubp
adc
mov
mov
lods
inc
fsubs
insl
outsb
or
push
test
jp
fldz
jbe
adc
out
and
jbe
sahf
pop
jae
mov
and
movsb
pop
pop
adc
aaa
clc
fidivrl
in
rcrb
xor
inc
dec
adc
sahf
pop
shll
stc
jl
sbbb
int3
mov
cmp
out
lods
in
push
rcrb
dec
bound
push
fbstp
push
loope
call
mov
fcoms
dec
xchg
stos
cmc
xlat
aas
or
pop
in
les
jmp
stc
mov
insl
mov
mov
mov
and
mov
xor
jl
iret
int3
xor
push
dec
adcb
fstps
loopne
dec
adc
test
cmp
lods
int3
mov
ljmp
fcmovu
movsb
insb
into
repnz
lcall
je
dec
js
je
mov
add
mov
js
icebp
xchg
push
mov
dec
xor
jns
into
cmp
clc
aad
and
sbb
push
cmp
mov
lret
into
outsb
mov
xor
jb
sub
mov
push
jns
insb
jp
and
aad
mov
jbe
mov
mov
movsl
lahf
int3
es
ret
pop
test
sub
pop
cmp
jmp
mov
stos
fnstcw
mov
adc
jp
add
jnp
mov
in
stc
fsubl
or
outsl
mov
pop
stos
or
stos
popf
push
stc
pop
sub
xorb
adc
shlb
push
and
jg
xor
or
jbe
pop
sahf
xchg
bound
ret
mov
flds
orl
jecxz
jecxz
push
mov
push
enter
push
aas
mov
scas
inc
in
stos
jnp,pt
daa
test
pop
or
adc
mov
push
ljmp
dec
sub
mov
jle
jns
jle
push
je
mov
test
xchg
xchg
pop
push
lock
push
mov
pop
test
pop
cmpsb
pop
testb
push
mov
fimuls
mov
and
or
popf
bound
sub
inc
pop
sti
jb
mov
mov
jmp
fwait
mov
adc
jo
ss
sahf
shll
xor
mov
pop
in
mov
mov
xchg
call
je
push
jp
jns
inc
xor
mov
fidivl
lret
xchg
mov
inc
xor
cmpsl
sbb
shl
sbb
rclb
lahf
sbb
imul
or
push
dec
mov
pop
outsl
les
fdivrs
mov
fsubrs
testl
fdivrs
test
pop
mov
cli
mov
movntps
std
fbld
xlat
adc
mov
sbbb
mov
repz
in
stos
hlt
insb
or
arpl
mov
andl
sub
lock
or
mov
repnz
fiaddl
cwtl
cli
pop
push
pusha
into
jo
jmp
sti
sti
movsl
ds
mov
jns
push
lret
dec
mov
es
daa
pop
cmc
adc
movsl
int3
insl
push
aad
pop
mov
mov
js
bound
scas
sub
lds
mov
outsb
pushl
ljmp
outsb
aad
aam
mov
jp
mov
mov
fs
xchg
cs
sub
sub
push
jp
pop
iret
les
out
hlt
jle
lods
ljmp
imul
push
test
push
mov
rorl
es
dec
xor
adc
cmpb
popa
lods
das
jns
jno
cmp
es
int3
mov
loope
hlt
lahf
pop
mov
inc
xchg
fidivl
sub
pop
icebp
adc
addb
inc
nop
outsb
add
mov
pop
pop
bound
xchg
mov
fiadds
lock
or
xor
mov
pop
movsl
repz
mov
mov
pop
mov
fsub
xchg
mov
and
std
gs
out
inc
mov
shrb
sahf
adc
pop
and
add
ret
movl
push
inc
jmp
sarb
xchg
xchg
add
inc
aas
jp
arpl
cld
dec
je
mov
cmp
inc
and
ficoms
add
jmp
add
fidivl
push
bound
jl
xorps
xchg
loopne
out
jge
mov
mov
lcall
inc
jmp
and
test
sahf
push
loope
in
dec
pop
mov
mov
mov
add
mov
add
lods
ficoml
fsubrs
mov
outsb
lods
pop
fs
js
loopne
inc
or
pop
scas
jo
das
sub
fmul
dec
mov
je
inc
ret
ljmp
ret
rcrb
fpatan
mov
and
jns
movsl
push
cmp
pop
cwtl
shll
sub
sub
adc
xchg
mov
mov
dec
cmpsb
pop
cli
mov
or
jb
cmp
push
mov
fdivrl
roll
scas
sub
out
loope
xor
cmp
mov
dec
push
fcoml
jnp
orl
pop
push
jg
inc
jecxz
or
cltd
testl
mov
push
shll
mov
and
jmp
add
bound
push
xchg
pop
mov
mov
mov
test
iret
in
cmc
sub
ljmp
push
cmpsl
add
cmp
mov
data16
imul
jmp
popa
mov
fdivl
aas
xor
fimull
or
mov
xchg
ss
les
std
insb
add
xchg
or
xor
cltd
jae,pt
sub
pop
cwtl
in
mov
mov
lock
mov
jmp
sbb
and
xor
inc
pop
xor
sub
adc
shrl
cmp
test
and
sarb
add
xchg
sub
jge
sbbl
push
jle
pop
mov
push
jmp
xor
loopne
sub
dec
arpl
add
jbe
dec
and
inc
sub
or
jecxz
sub
sub
mov
fbstp
test
cs
jg
lret
mov
adc
insb
imul
lea
in
xlat
out
sbb
es
fwait
xchg
add
mov
ret
notl
add
scas
sahf
dec
jg
rclb
mov
loopne
aaa
and
jno
xor
sbb
int
into
cmp
fwait
mov
push
es
and
into
loop
test
xchg
movsb
pop
lret
jb
jp
addb
stos
bnd
push
and
cwtl
mov
sub
js
inc
and
mov
movsb
shr
cmpsb
mov
or
movl
je
xlat
cmpsb
test
call
int3
bound
outsb
pmaxub
adc
cld
inc
xlat
adc
jb
adc
int
int
jbe
mov
mov
sahf
aad
cmp
out
in
push
pop
sbbl
xlat
push
in
daa
loopne
mov
sub
std
into
pop
lret
int
testb
add
sub
out
pushf
sub
cmpsl
fmull
push
lret
push
jb
pop
popa
push
in
ds
cmpb
nop
push
mov
insb
jne
fwait
jp
dec
pushf
mov
and
cli
xor
jno
jne
lret
pop
hlt
sub
inc
sbb
pusha
jno
leave
xor
mov
push
jmp
iret
cmp
xor
icebp
out
mov
mov
leave
pop
dec
out
loope
rcll
xchg
insl
ret
push
sbb
in
dec
addr16
adc
lock
stos
mov
repnz
mov
in
subb
xchg
fs
cmpsl
mov
sub
push
add
jl
daa
gs
push
push
stc
cmp
mov
mov
fdivs
push
arpl
xchg
les
jle
popa
and
movsl
frstor
imul
jb
inc
adc
and
inc
xchg
fdivrl
sub
dec
and
ja
jbe
enter
ljmp
pop
lret
adc
aas
in
cld
xchg
jmp
nop
aaa
and
lods
scas
xchg
mov
fwait
or
das
je
outsl
sub
mov
sahf
fisubrs
addr16
sbb
aas
fs
sti
xlat
dec
xchg
cmp
data16
cmpsb
inc
dec
jmp
sub
or
cmp
or
sbb
sbb
popf
int3
cmp
push
pop
fisubrs
ficoms
mov
or
xor
loope
clc
inc
adc
adc
or
cmpsl
dec
in
stos
xchg
xor
frstor
mov
jge
or
aam
adc
xchg
add
add
sbb
pop
adc
cmp
mov
fnstcw
daa
and
adcb
shrl
dec
and
inc
cltd
les
pusha
adc
in
xorb
inc
push
movsl
mov
out
fisttpl
stos
and
xchg
sti
test
hlt
ret
ss
sub
cmpsb
repz
cmp
into
loope
add
or
into
lock
pop
lock
sahf
xchg
dec
push
inc
or
lods
loope
sub
cmc
fwait
nop
shl
lret
push
dec
outsb
loop
dec
or
test
in
add
imul
lock
cwtl
adc
fdivp
cmp
jl
dec
repnz
mov
outsl
and
test
repnz
jb,pn
mov
mov
es
fldt
and
jmp
push
sahf
xchg
push
mul
movb
dec
xchg
je
test
ffreep
repnz
outsb
rclb
lret
clc
enter
nop
ret
fbld
in
xchg
sub
sbb
mov
aas
xchg
sub
popf
outsb
push
add
and
and
xchg
pop
push
mov
leave
addl
sub
xchg
and
scas
stos
push
and
push
in
xchg
push
jae
cmp
mov
hlt
xchg
sbb
rcll
ja
xor
je
sti
ja
cmp
mov
xor
nop
jge
addr16
ds
in
push
int
push
test
or
stc
sub
sbb
orl
push
rcll
jg
out
pushf
and
cmpsb
outsl
in
dec
fwait
xchg
es
lcall
sti
pusha
sarb
jns
fwait
lods
and
push
pop
jg
push
test
icebp
rolb
adc
mov
outsl
repnz
mov
cmp
je
inc
neg
mov
inc
out
xchg
loopne
dec
jge
xchg
inc
jl
jmp
pop
push
cwtl
mov
fcoml
enter
jecxz
imul
btc
sub
or
lods
shll
push
sahf
dec
mov
mov
xlat
xchg
jne
dec
xchg
and
xchg
inc
pusha
leave
mov
mov
cltd
add
out
adc
jle
add
jp
push
jno
mov
scas
movsb
hlt
fidivl
mov
int
pop
ds
mov
jl
jl
dec
es
ds
jb
jnp
into
sbb
sub
adc
test
adc
hlt
dec
imul
jno
shl
sarl
push
pushf
out
sti
add
lcall
scas
push
rsm
outsb
adc
cld
inc
cwtl
and
in
aad
cmp
mov
and
mov
inc
stos
fbld
fmuls
addb
ss
lret
loopne
sub
das
into
aad
mov
lds
push
cld
test
frstor
loope
popf
add
push
xchg
add
pop
push
xor
xorb
rclb
cmc
scas
mov
insl
fidivl
js
xchg
fimull
cli
sbb
fs
push
adc
insb
cli
pop
out
push
icebp
mov
sbb
mov
js
xchg
idivb
mov
test
sbb
pusha
mov
sarl
cmc
jne
add
shl
push
movsb
je
sub
adc
shlb
mov
or
cltd
iret
adc
cmp
jecxz
jae
fisubrs
sahf
cmp
pushf
or
rcll
push
into
pop
scas
mov
adc
push
stc
lcall
adc
dec
push
add
jle
sub
les
in
shlb
clc
test
pop
xor
adc
stc
test
pop
clc
stc
sbb
cltd
cltd
lea
ds
sahf
jl
cli
lods
cs
testl
fstpt
add
xchg
cmc
pop
dec
testl
push
xchg
add
fisttpll
popf
sbb
in
test
lods
jmp
xor
fldenv
push
aaa
outsb
dec
popa
or
pop
mov
xor
popf
rcll
imull
inc
fyl2xp1
adc
and
sub
hlt
stc
jecxz
mov
sbb
jmp
adc
push
mulb
sub
lods
adc
inc
ds
lahf
cmpsl
sbb
lret
push
and
leave
adc
sbb
lds
xchg
iret
mov
cmc
jl
adc
into
std
in
inc
outsb
dec
cmc
mov
pop
push
inc
inc
fwait
jp
adc
sub
mov
lock
mov
xor
repnz
push
cli
out
sub
jecxz
xor
mov
mov
add
leave
out
test
scas
sub
call
mov
cmp
rcl
inc
test
loopne
icebp
pop
cltd
out
xchg
sub
rcll
sub
popf
std
xor
outsb
push
hlt
mov
in
jle
daa
mov
stos
pop
setne
call
test
pop
cmp
mov
fsubrl
sub
enter
mov
rolb
mov
cmp
test
pop
pop
mov
push
jle
cmc
shll
aam
mov
je
jp
lret
inc
pushf
test
shlb
adc
imul
mov
jno
int
mov
in
push
icebp
pop
or
ds
fcomps
pop
pop
jle
sub
push
pushl
cmp
imul
stos
das
test
sarl
mov
das
sub
mov
outsb
int3
in
lock
sarl
jo
cmp
lahf
test
lret
cmpsl
fadds
jp
push
outsl
sbb
pop
and
inc
scas
add
and
mov
push
outsl
fs
jg
or
cmp
jo
sarl
int
lock
push
mov
mov
pop
movsb
push
shll
movsl
jge
mov
mov
push
lea
int
cmp
jbe
sbb
cmp
les
int3
pcmpeqw
jae
mov
or
fmuls
dec
ret
push
leave
and
test
imul
nop
je
fcoml
lret
es
pop
into
scas
jmp
aaa
or
inc
shr
jl
inc
push
push
inc
and
lret
test
push
fsubrs
dec
insl
push
push
xchg
sti
push
cmp
sub
inc
cmovb
mov
mov
insb
loope
and
enter
lret
sti
dec
and
sbb
push
in
adc
jge
pop
add
jp
xchg
mov
xchg
fnstenv
ja
out
test
sub
mov
jl
jo
xor
adc
out
popa
inc
iret
mov
mov
cmp
inc
das
es
das
pusha
cmc
int
or
mov
and
rolb
xchg
jle
mov
rcll
add
push
dec
inc
sbb
pop
xchg
pslld
mov
imul
nop
mov
xlat
mov
dec
dec
aam
rorl
repz
movsl
addl
arpl
xor
jmp
mov
sbb
insb
add
addr16
and
push
mov
inc
inc
lcall
mov
pop
rcll
mov
aad
roll
in
xchg
roll
cmp
outsl
mov
out
mov
sbb
cmp
push
adc
gs
call
scas
push
in
rcr
or
mov
lods
stc
xchg
and
in
out
lods
bound
jl
rclb
sub
loop
jge
into
jne
push
pop
or
mov
imul
in
xor
mov
lds
pop
xchg
cli
addl
fnsave
ficomps
jle
push
push
jp
push
inc
arpl
mov
cmp
push
cltd
pop
arpl
push
push
cmp
adc
jo
or
adc
jae
add
iret
push
movsb
ret
mov
sbb
add
xchg
ljmp
jb
sbb
push
iret
and
fbld
out
mov
inc
dec
sbb
mov
pushf
repz
lcall
pop
push
push
mov
jecxz
jge
je
gs
xchg
xchg
cltd
clc
dec
push
and
mov
mov
xchg
dec
jo
sub
imul
faddl
scas
jge
xchg
ljmp
fs
mov
out
idivl
das
push
jo
adc
lret
leave
sbb
loopne
outsl
subl
lahf
jbe
es
sbb
shl
pusha
sbb
lahf
sub
or
in
sub
lret
enter
ja
outsl
jmp
loop
or
mov
push
insl
mov
lahf
xchg
arpl
or
ja
call
rcll
imul
int3
jp
cmp
cltd
jmp
int3
pop
jmp
push
clc
jae
ret
jb
in
repz
lret
or
pop
test
xor
shl
lds
in
rorl
add
lds
push
arpl
or
adc
inc
sbbl
adc
push
xchg
je
or
pop
jae
dec
shll
icebp
pop
gs
test
lret
sarl
jno
push
or
in
add
mov
xchg
out
sub
dec
dec
adc
jmp
push
mov
add
push
pop
mov
jae
out
fcomps
repz
adc
enter
les
adc
xchg
mov
test
hlt
lret
push
mov
lahf
dec
and
outsb
add
dec
push
addb
push
movsl
lcall
inc
insb
pop
insl
nop
imul
mov
mov
pop
call
xchg
push
je
cltd
dec
and
xchg
scas
rorl
shll
movsb
pop
jae
mov
push
xchg
pop
int3
cmp
mov
in
enter
inc
dec
in
and
ja
dec
pop
inc
sub
shl
clc
push
ss
cmc
in
jecxz
mov
or
jb
mov
xor
bound
dec
mov
leave
je
or
pop
inc
int
std
les
add
mov
xor
jg
addr16
adcb
stos
add
dec
mov
or
ficoml
dec
sub
jge
xlat
aaa
icebp
push
imul
int
xor
jg
in
aad
hlt
add
sub
int
insb
push
or
jp
jge
pushf
xchg
push
push
je
push
sub
sub
xorb
pop
or
faddl
pop
adc
fiaddl
je
xchg
test
pop
cltd
cmp
shrb
mov
out
pop
dec
xchg
icebp
and
push
or
pop
jae
test
pop
jo
div
pop
xlat
inc
and
push
lcall
mov
push
jno
pop
and
jno
dec
out
mov
mov
mov
lods
lock
lock
push
jne
xor
imul
xchg
jmp
mov
shll
and
imul
or
and
dec
xchg
xor
dec
jmp
into
mov
inc
pop
push
mov
bswap
pop
scas
jl
mov
scas
add
testb
xor
arpl
dec
mov
jmp
outsb
loop
pop
jmp
lock
out
mov
mov
push
fs
adc
adcl
test
fnop
xchg
jb
lods
shlb
jb
sti
ficomps
fsts
shll
jnp
lods
popf
insl
insl
enter
sbb
mov
push
sub
push
jno
add
lahf
shlb
mov
outsl
jne
in
sub
test
xchg
nop
int
mov
jo
xorb
cmpsl
hlt
inc
mov
scas
std
push
jbe
insl
dec
cmp
fld
es
lds
inc
add
loop
sub
sub
loopne
and
fists
ret
add
adc
or
pop
xor
loope
leave
inc
adc
push
aaa
and
test
imul
ja
in
inc
test
leave
in
aaa
push
std
jo
dec
test
lods
fcompl
sub
mov
sti
cltd
fisttpll
lahf
mov
push
sbbl
or
cmp
dec
dec
out
lahf
sub
stos
pop
jg
enter
loope
cmp
test
shl
aas
inc
mov
mov
enter
adc
xor
mov
fwait
dec
and
test
add
cmp
outsb
roll
incl
sub
add
inc
mov
in
sbb
cmp
lea
and
mov
adc
xchg
or
lahf
sahf
sbb
fisubs
dec
pop
out
fmuls
inc
pop
sbb
mov
mov
cmc
xchg
ret
and
sarb
lock
notl
rolb
mov
xchg
mov
xchg
iret
cmp
jecxz
test
pop
inc
sub
cmpsb
jnp
mov
inc
sbb
push
inc
mov
stos
pushf
cmp
jmp
sub
int
xor
mov
fmuls
jmp
outsb
mov
xor
dec
mov
sbb
lret
inc
sbb
pop
and
loopne
sub
cltd
int
sub
mov
sub
daa
jl
jmp
mov
cmp
add
sub
dec
push
dec
in
lods
or
jmp
jmp
outsl
ficompl
repz
lahf
shr
mov
jp
jmp
scas
pop
sarl
jmp
pushf
test
shrb
das
fwait
mov
sbb
lods
mov
adc
add
add
and
xchg
enter
rcr
push
push
repz
and
mov
sti
adc
push
cmp
leave
shlb
add
movsl
loope
sub
iret
das
jle
cld
jle
sub
jg
hlt
dec
std
icebp
negb
mov
push
mov
nop
repnz
aam
push
pop
pop
and
sbb
loopne
and
mov
aad
out
rorb
je
mov
jne
fists
ljmp
pop
rolb
jnp
adc
into
stc
jne
pushf
test
lods
xchg
popw
out
sub
hlt
mov
jmp
jecxz
adc
add
cmp
cmp
loopne
icebp
aas
int3
and
dec
shl
dec
arpl
scas
test
jp
ss
loopne
and
and
inc
adc
mov
int3
inc
add
div
loope
jo
ljmp
sub
pop
cld
stos
xor
adc
aaa
stc
xchg
pop
aad
rclb
xchg
pushf
loope
xchg
xchg
xor
test
xchg
stos
adc
out
icebp
es
mov
leave
cmp
movsl
js
inc
push
das
jo
test
in
mov
int3
std
cmp
out
or
repz
shr
fidivrl
stc
in
pop
stc
xchg
loopne
or
xor
and
sahf
xlat
pop
jle
jns
sub
mov
out
ja
jb
sbb
xchg
fdivrl
pop
ret
adc
enter
jg
out
mov
in
push
das
xor
notl
push
sub
das
loope
aas
or
sbb
add
xchg
sbb
iret
xchg
xor
fwait
outsb
inc
cmpsl
push
incb
mov
push
pop
sbbl
cmp
jl
mov
mov
pop
jl
rorl
and
mov
mov
mov
push
lock
popf
jnp
or
lcall
ljmp
xor
into
ja
pop
cmc
iret
add
shrl
mov
loop,pt
xor
inc
xchg
xchg
jbe
sub
and
ret
iret
popf
dec
mov
loope
pop
push
push
or
push
sbb
negl
add
mov
repnz
pop
jl
mov
cmpsl
mov
loope
jae
js
or
push
inc
stos
addb
and
pop
inc
sub
mov
fsubrl
push
and
sub
shr
jbe
add
rcr
mov
ret
cld
push
std
xor
inc
fwait
push
cmc
test
test
jne
out
call
rcl
orb
xchg
dec
push
jns,pn
mov
repnz
gs
testb
xchg
add
lock
lcall
cmc
int
jmp
adc
and
fwait
in
sbb
lret
push
mov
imul
push
dec
inc
loope
cwtl
push
xchg
int
jno
or
call
das
mov
insl
es
mov
xchg
dec
dec
cmp
inc
cli
addr16
test
jmp
add
jecxz
hlt
mov
push
and
pop
lahf
insl
divl
sti
loop
sub
cmp
in
in
or
into
push
movl
mov
fistl
ds
pop
mov
stos
jle
stc
int3
imul
xor
xchg
push
lds
lret
push
lcall
add
out
mov
pop
push
mov
jo
jb
mov
or
cmp
sahf
notb
mov
fisttpll
cmp
shrb
das
or
pop
push
fisubl
pusha
cmp
hlt
mov
rorl
icebp
test
adc
mov
inc
shrl
adc
inc
sbb
addr16
or
jb
mov
cmp
pop
neg
and
xor
inc
fdiv
test
cmp
repnz
jecxz
sbb
mov
pop
mov
cs
push
icebp
mov
in
stc
shll
sub
setle
mov
into
mov
scas
pop
sti
shr
pop
mov
lods
dec
lods
andb
dec
loopne
adc
lret
fucomp
ss
pop
push
imul
xchg
and
loope
adc
pop
lret
jnp
lock
sbb
outsb
movsl
pop
cmp
mov
cmp
dec
mov
xchg
fucomip
inc
clc
jnp
andl
or
enter
test
xor
sub
lea
fisubrl
push
inc
rcrb
fmulp
mov
cmpb
cld
es
rclb
mov
jo
or
or
inc
push
xchg
popa
cli
inc
divl
repnz
sbb
roll
adc
lods
addl
cmp
push
lds
enter
fwait
lods
shl
aaa
pushf
gs
test
iret
jae
push
push
scas
dec
iret
xor
pop
add
sub
lret
pusha
add
aaa
fwait
cltd
pop
out
es
das
pushf
testl
or
mov
dec
cmpsl
cs
iret
push
in
fstpl
hlt
or
out
xchg
xlat
mov
mov
or
insb
add
inc
dec
sub
mov
mov
or
adc
sbb
clc
imul
jno
jb
ret
cmp
test
sub
pusha
push
loop
add
cmp
jg
ljmp
or
xchg
shl
loope
insl
sub
aas
jns
sbb
jne
push
sub
out
nop
popa
mov
or
mov
in
jns
cwtl
jmp
outsl
fsubr
outsl
jne
mov
dec
or
fwait
cltd
jg
aam
addl
out
aad
xor
ret
shlb
imul
xchg
sub
ljmp
shlb
push
andb
sbb
and
in
das
in
push
mov
stc
rcrb
lret
jge
mov
dec
and
aad
inc
outsl
cs
pop
fninit
mov
jge
mov
testl
pop
call
outsb
repz
sbbl
lahf
add
add
sarb
dec
and
sub
and
fwait
lret
shl
xorl
mov
mov
iret
lods
adcb
or
cmp
pushf
shl
stos
cli
stc
lea
jne
lret
test
push
dec
adc
fs
repnz
int
lea
in
sub
and
mov
aaa
aad
mov
push
and
dec
rclb
push
and
cli
mov
push
push
out
push
or
pushf
jne
and
test
jns
std
sub
add
push
jae
js
push
add
cmpsb
cmp
or
jo
mov
xchg
cmp
data16
in
cmc
add
dec
xchg
sbb
aad
cmp
aas
shll
clc
mov
cmp
and
test
mulb
sbb
mov
test
jne
xchg
imul
sub
jo
jne
aas
scas
into
cmp
mov
xchg
cmp
std
xor
mov
loope
outsl
mov
ja
pop
push
mov
ret
ret
ficompl
dec
cwtl
fldcw
fdivrl
or
pop
add
dec
jle
dec
sti
outsl
in
mov
leave
pop
repz
out
jl
inc
icebp
pop
xor
icebp
in
lods
js
mov
clc
imul
das
dec
xor
int
mov
pop
mov
mov
or
mov
ljmp
cmpsb
in
pop
jne
sub
xchg
out
aad
add
cmp
aam
dec
into
push
xchg
js
pop
cltd
xchg
push
mov
push
xor
adc
std
sbb
add
pop
dec
push
or
loopne
jnp
insl
mov
inc
and
pop
insb
xorb
js
sub
test
out
popa
and
pop
or
and
push
cmpsb
sbb
and
mov
aaa
inc
stc
nop
mov
adc
pop
dec
adc
jecxz
ljmp
jo
or
int3
shll
dec
in
iret
dec
test
add
imul
pop
jmp
xor
push
mov
lcall
rcll
push
push
aad
daa
scas
mov
icebp
pop
dec
or
fistps
into
adc
or
jae
inc
mov
xlat
lret
and
aas
mov
dec
cmp
dec
inc
fsubs
xchg
loop
xor
push
push
xor
mov
pop
add
lret
sbb
lds
repz
jge
sbb
mov
inc
imul
cmp
xchg
pop
shl
pop
andl
pop
pop
jb
cwtl
mov
in
cli
test
adc
sbb
jecxz
jmp
jle
lahf
or
outsl
lret
cmp
ficomps
scas
bnd
mov
xlat
xchg
dec
inc
rcrb
sub
fsts
mov
notb
cmc
adc
pop
adc
jno
movb
mov
jge
add
mov
fidivl
call
outsb
or
adc
xchg
pop
aas
mov
xchg
lds
test
adc
mov
mov
dec
jle
sub
add
test
xchg
stc
iret
movsb
xchg
jl
out
lcall
test
jl
inc
fildl
cld
mov
dec
cs
and
das
sub
or
jns
cli
or
dec
jb
cs
and
mov
push
inc
int
mov
out
test
pop
inc
xchg
add
inc
jecxz
call
std
jmp
push
adc
or
jecxz
pusha
arpl
adcb
scas
popa
inc
jecxz
sbb
out
jno
fwait
popf
pushf
or
xchg
inc
pop
icebp
push
nop
int
leave
or
sbb
jle
call
inc
add
jne
popa
cld
in
or
int3
lret
xchg
xchg
jmp
mov
and
jb
inc
jne
mov
imul
push
aas
push
in
push
aaa
dec
out
inc
cli
fstpl
mov
popa
xchg
divl
jo
mov
push
and
mov
pop
jo
jne
sbbl
sbb
fbstp
dec
out
jbe
shl
mov
add
pop
and
xchg
fistl
movsb
mov
test
push
jge
add
cmpsl
mov
andb
xchg
mov
dec
cltd
push
shrb
mov
jae
adc
push
mov
push
xchg
ret
mov
adc
popf
mov
sbb
cmpsl
fcmovbe
out
adc
mov
dec
cmpsl
mov
push
dec
mov
mov
daa
pop
push
dec
cwtl
lcall
ja
pop
test
pop
lret
pop
add
iret
pusha
xor
lret
nop
mov
pop
inc
icebp
add
scas
pop
sub
push
adc
push
pop
jle
lods
or
dec
out
jl
lret
insl
jno
imul
push
cmpsl
and
cli
rclb
int3
or
out
inc
mov
add
push
inc
fucom
subb
into
data16
push
aad
repz
push
enter
les
sbb
ret
jg
lret
or
or
outsb
arpl
or
adc
insb
gs
inc
test
sbb
sub
adc
shll
adc
xchg
inc
xchg
ds
jae
les
cvttps2pi
xor
sub
scas
inc
mov
lods
popa
iret
arpl
xor
and
add
jl
aam
icebp
jecxz
xchg
in
inc
cmp
rcrb
mov
sub
scas
ds
je
sub
data16
cmp
fcoms
xor
and
clc
inc
nop
sub
inc
dec
call
push
sbb
sbb
cmp
xchg
pusha
pop
dec
ja
repz
jne
add
imul
lds
bnd
sbb
jno
sbb
jae
mov
jb
adc
push
fldcw
ret
sub
push
lea
mov
cmp
sbb
sbb
add
lret
xchg
sub
dec
pop
popa
loop
push
lcall
mov
mov
jle
sbb
sbb
loope
stc
dec
or
xchg
rcrb
clc
in
popf
jb
aaa
fcomi
xor
adc
mul
cmpsl
mov
mov
call
rcrl
pop
jecxz
outsb
pop
cld
or
dec
test
adc
inc
add
sti
xchg
pop
aas
lock
arpl
dec
adc
mov
rolb
stos
dec
xchg
fs
add
adc
dec
aad
bound
sub
out
mov
jnp
mov
and
lods
dec
dec
out
shll
sti
and
adc
scas
cmp
dec
inc
xor
ljmp
pop
xchg
xchg
sahf
ret
mov
outsb
repz
pushf
xlat
pop
cmpsl
cli
mov
int
fwait
insb
dec
sbb
faddl
clc
ret
sahf
sub
cwtl
pushf
mov
jmp
mov
and
orb
xor
rolb
push
mov
fmuls
dec
and
sbb
cwtl
and
dec
mov
notb
or
dec
inc
jnp
or
daa
mov
testl
loopne
pop
mov
in
push
rclb
int
out
scas
dec
out
mov
jbe
dec
sbb
add
xor
mov
dec
in
jbe
test
pop
outsl
nop
aam
rcll
leave
xchg
xor
mov
cli
xchg
inc
in
dec
jle
je
mov
sbb
je
mov
sbb
ss
xchg
js
xchg
iret
cs
dec
dec
sub
push
loope
xlat
push
hlt
clc
test
add
fsubrl
aas
mov
push
push
out
pushf
cmp
jl
or
jle
sub
push
stos
dec
inc
mov
stos
mov
nop
fs
bnd
or
repnz
sahf
lcall
xor
ja
out
adcl
das
fnstenv
add
mov
or
fwait
jbe
jne
daa
in
xlat
arpl
in
hlt
or
dec
in
dec
mov
pop
push
inc
imul
sbb
js
cmc
dec
enter
jnp
lret
mov
push
add
sbb
mov
addr16
fwait
in
cmp
pop
mov
mov
sbb
hlt
subl
jecxz
mov
iret
dec
pop
cs
dec
lahf
lret
scas
or
std
sub
mov
sbb
cmp
fwait
cmc
outsl
orb
mov
mov
inc
lods
in
out
xor
adc
jp
outsb
jmp
lds
shll
push
or
lods
inc
jge
int3
sub
stos
xor
push
push
rcrl
or
mov
test
sti
jecxz
ja
divb
fcomps
push
mov
dec
jecxz
outsl
xor
stos
outsb
pop
outsl
push
cmp
iret
scas
je
in
in
mov
shrb
and
loop
fmull
jmp
rcrb
dec
rclb
aaa
sub
shlb
fs
fwait
sbb
into
stos
sbb
mov
xchg
das
and
cmp
lods
test
xorl
add
and
inc
mov
dec
stc
dec
add
mov
add
les
enter
subb
stos
dec
jne
xor
xlat
dec
jo
and
or
lret
lret
push
inc
int3
cld
xor
jge
mov
arpl
shrl
xor
mov
rol
stos
insb
fiadds
mov
ljmp
hlt
sbbl
xchg
pop
xchg
dec
sahf
insb
jmp
mov
push
fdivl
bound
int
jmp
xchg
data16
xchg
icebp
push
out
int
mov
fdiv
push
inc
adc
orb
sub
ret
push
in
mov
cmpsl
and
sbb
mov
std
pop
aas
stc
or
adc
lods
inc
xlat
sahf
negb
jb
jno
jae
mov
js
push
push
lods
ljmp
sysret
cli
and
cwtl
sbb
loope
iret
and
dec
cmp
jae
xchg
jge
or
dec
push
push
xchg
ret
cld
iret
icebp
mov
xorl
cltd
loopne
add
imul
xchg
xorl
popa
jge
xchg
dec
add
out
xlat
cmp
fiadds
bound
shll
sub
and
cmp
sub
add
std
lcall
loope
cld
fwait
test
repz
fcoml
cmpsb
je
movsl
popa
test
mov
cmpsl
call
rclb
ficoms
test
push
xor
fisubl
out
mov
fs
cmp
xor
fcoms
scas
cltd
leave
outsb
adc
lds
ljmp
sahf
jecxz
lea
push
mov
in
movsl
push
ds
xchg
das
lods
xlat
pop
test
and
xchg
enter
add
hlt
and
push
ficoml
stos
cs
or
jo
jb
in
adc
gs
pmullw
orb
rcl
in
inc
and
ret
xor
lret
in
in
and
fwait
sub
sub
inc
test
fisubrs
jns
lahf
mov
xor
testb
pop
or
and
add
fsts
clc
fcmove
mov
mov
test
pop
mov
in
sbb
movsb
scas
xor
jnp
repz
int
in
aad
inc
adc
jns
adc
xchg
insb
pop
pusha
jl
addr16
outsb
cmpsb
mov
cmp
js
jnp
dec
push
test
andl
int
and
movsb
dec
push
in
sbb
data16
pop
cmpsb
adc
movsb
xchg
daa
mov
and
push
jg
adc
out
xchg
in
cmp
fildl
jne
sbb
repnz
loopne
push
test
push
dec
inc
push
fscale
cmpsb
inc
dec
jno
pop
xor
or
inc
or
test
sarl
pop
fsts
mov
or
rcrb
mov
pop
out
stos
inc
call
pop
daa
mov
jo
es
jmp
cmp
pop
out
pop
mov
loop
out
mov
dec
jns
ds
fwait
mov
xchg
add
mov
mov
js
mov
scas
int3
rcll
cwtl
xlat
scas
fadds
imul
ljmp
xor
pop
clc
or
std
and
inc
adc
pop
loope
dec
rclb
sub
pop
or
push
inc
cli
divl
push
cmp
and
or
fwait
jl
pop
cmp
fists
jmp
adc
xchg
ret
jns
lret
in
xor
mov
cli
dec
pop
sub
and
int3
adc
xchg
mov
lret
sub
dec
int3
jb
sbb
add
scas
out
xlat
mov
jp
mov
or
lods
daa
mov
add
insl
fimuls
mov
mov
dec
testl
add
or
sahf
aam
aam
push
ja,pn
pop
sbbb
dec
and
adc
inc
pusha
mov
call
in
xor
xchg
in
ret
adc
sbb
dec
aaa
sbb
jmp
sahf
xor
cmp
and
pop
fnstcw
xor
xchg
out
das
inc
in
add
jne
cltd
cmpsb
rcrb
pop
or
jne
xchg
and
pop
repz
xor
push
xchg
test
scas
mov
popa
jl
xlat
xchg
cmp
add
in
mov
stos
mov
into
icebp
mov
xchg
mov
mov
out
in
xchg
and
xchg
push
icebp
mul
xchg
dec
shlb
scas
push
pop
xor
xor
imul
jb
stos
inc
shl
inc
loope
mov
aam
and
pusha
sub
inc
mov
or
shlb
jo
out
sbb
xchg
int3
shrl
test
lock
or
mov
sub
mov
ret
out
repz
push
les
mov
fsubrs
xchg
add
xor
outsb
inc
or
mov
shr
mov
dec
lods
rcr
imul
cltd
adc
ret
xchg
pusha
mov
sti
dec
notl
jecxz,pn
cmp
loope
fldl
or
dec
into
push
lods
or
int
out
push
ds
xchg
push
movsl
jmp
sub
inc
test
jb
repz
lock
ror
cmp
xor
push
in
push
inc
mov
xchg
jne
fs
and
add
lret
adc
sbb
sahf
jp
mov
dec
xchg
stos
sub
inc
jecxz
enter
xchg
cltd
and
lds
shll
cli
add
push
xor
mov
and
cmp
push
jns
adc
push
push
jne
aaa
mov
int
mov
daa
je
dec
ds
mov
jnp
mov
mov
jecxz
sbb
mov
pop
xor
dec
in
jge
cmp
sub
pop
or
repnz
inc
cmpl
jmp
jae
xor
jl
cmpsl
jl
pop
push
ja
aad
dec
dec
xchg
test
repz
es
cwtl
inc
lret
hlt
xor
fsub
mov
and
sti
xlat
add
addl
dec
fs
dec
fstpl
adc
std
mov
movsb
into
lds
int3
ret
xchg
enter
jnp
push
ja
adc
repnz
jo
in
xchg
lahf
sbb
out
sbb
fnstcw
test
jmp
or
jne
nop
ret
out
out
jge
mov
mov
std
fsts
inc
out
push
sub
test
mov
mov
mov
xchg
test
jecxz
add
insl
dec
cmp
push
mov
adc
mov
xchg
cmp
ss
je
sarb
arpl
shrl
out
js
lock
xor
pop
adc
outsl
add
jl
push
out
mov
pop
mov
lcall
insl
jg
adc
ds
dec
xchg
add
std
aam
adc
aaa
jmp
js
mov
push
jecxz
js
dec
sbb
repnz
pop
push
mov
or
mov
arpl
dec
mov
insl
stos
xor
dec
push
adc
sub
xor
repnz
add
mov
mov
jmp
jnp
sbbl
cmp
gs
pop
push
popf
mov
jb
add
mov
sahf
mov
test
fwait
add
sbb
ret
imul
fisttps
movsl
xchg
jne
int
cmp
stos
and
mov
stc
mov
loope
leave
das
outsb
pushf
adc
frstor
mov
std
xor
xor
dec
fidivl
pop
pop
in
jle
mov
sub
jbe
test
inc
jge
ret
out
icebp
and
push
filds
out
adc
mov
orl
mov
xchg
pop
sub
dec
push
pop
lret
gs
jp
movsl
repz
popa
xchg
dec
pop
push
into
lods
test
repnz
push
xor
cmpsb
je
bound
cmp
loop
bound
aaa
shll
sub
adc
or
cmpsl
fs
movsl
jbe
lahf
lahf
xchg
sar
js
jne
mov
sti
xor
mov
test
adc
call
clc
mov
xor
dec
mov
push
sbb
mov
mov
push
mov
pop
dec
dec
xor
xchg
test
mov
jb
in
scas
iret
shll
flds
inc
lock
jg
shlb
lds
pushf
iret
outsl
push
push
test
ret
inc
ret
cmpsl
add
jge
ljmp
lcall
cmp
mov
push
shll
cmp
dec
sahf
ss
daa
push
pop
sti
xor
inc
negb
add
mov
test
dec
sbb
or
test
sbb
mov
and
push
popf
jmp
xor
pop
push
xchg
push
test
sbb
inc
xlat
and
jp
orb
gs
cmp
jnp
sbb
dec
lds
mov
push
mov
mov
push
pop
dec
stc
pop
sub
add
jge
lods
xor
adcl
aaa
xor
gs
fs
scas
cli
sahf
addr16
adc
clc
loop
data16
ds
xlat
scas
pop
popa
sarb
and
pop
sti
in
inc
aam
mov
jnp
jne
sub
mov
xor
inc
test
adc
lret
cltd
pusha
loop
sub
push
jp
movsl
jp
push
mov
ja
fnsave
mov
fucomi
push
js
pop
sbb
sub
mov
pop
mov
subb
jmp
rol
inc
mov
sbb
sub
xor
sbb
cmp
pop
xor
xor
sbb
jp
roll
mov
xor
cwtl
pop
mov
rcrb
mov
test
insl
mov
pusha
leave
pusha
pushf
sub
dec
lret
cli
imul
mov
add
sbb
pushf
jnp
jmp
sub
fiadds
out
cmp
mov
outsl
sub
aad
push
sub
dec
int3
and
insl
mov
cli
mov
sub
adc
cmp
bound
outsl
sti
xchg
sbb
sub
and
out
ret
je
mov
pop
ljmp
and
jp
xchg
cwtl
mov
mov
imul
pop
sub
clc
fs
mov
shll
and
dec
iret
push
test
int3
push
lea
xor
push
sarl
pushf
mov
popa
cmpsl
enter
out
sbb
je
push
subl
in
stc
jb
cli
mov
xor
xchg
fsts
jb
dec
mov
shlb
sub
fisttpll
mov
js
inc
mov
push
mov
mov
xchg
push
jns
sub
and
movsb
mov
push
outsb
push
je
xchg
jg
cmp
xchg
mov
mov
sub
jo
mov
push
out
popa
pop
outsb
das
hlt
xor
pop
popa
mov
int3
cld
mov
xchg
cmp
adc
gs
fistps
xlat
sbb
adc
dec
imul
sub
imul
gs
pop
cmpb
leave
in
mov
int
enter
adc
pop
hlt
dec
dec
sub
ljmp
lcall
loope
sahf
test
stc
xor
shrb
cmc
iret
mov
dec
sub
fwait
add
bsr
js
cmp
cs
dec
mov
sub
scas
pop
ja
stos
lods
jmp
dec
mov
clc
shlb
sub
and
cmp
dec
inc
fbstp
and
mov
mov
imul
xor
mov
loope
jge
insl
push
push
outsl
xchg
mov
inc
das
inc
je
or
mov
shll
adcl
xor
sbb
out
adc
inc
or
push
or
add
bswap
arpl
jge,pt
cmp
jbe
inc
jae
sub
cmp
sbb
jbe
mov
subl
psllq
adc
scas
jnp
xchg
xchg
jecxz
bound
das
cmp
jb
xchg
lahf
andb
stos
lods
adc
xchg
sti
lods
aas
icebp
dec
xorb
mov
das
push
sar
mov
ja
inc
dec
pop
jg
daa
decb
add
adc
iret
xlat
xchg
jbe
test
in
pop
sbb
mov
jbe
push
nop
mov
adc
or
fnsave
mov
adc
outsl
es
out
or
xchg
lods
sub
mov
cld
inc
nop
mov
or
adc
jg
loope
mov
repnz
data16
jmp
fnstsw
hlt
iret
and
fstpl
sub
inc
fnstsw
xor
pop
fwait
ss
je
rolb
xchg
pushf
add
jne
inc
pop
mov
mov
dec
inc
push
aas
scas
push
dec
jge
popf
into
xchg
in
push
xchg
sub
addr16
push
lahf
loop
stos
and
loop
test
cs
xor
rclb
insb
cli
into
insb
jg
dec
inc
push
push
cmp
pop
dec
and
xchg
jle
rol
sbb
and
or
jp
dec
lds
pop
add
dec
mov
sti
pop
scas
inc
jp
push
adc
jp
xor
in
cmpsl
gs
dec
xchg
shrb
je
xor
std
jno
sti
sub
adc
shrl
movsb
aad
test
mov
push
pop
adc
jne
imul
hlt
cvttps2pi
mov
jno
mov
in
xchg
enter
sbb
and
lods
test
or
dec
adc
insb
sbb
push
mov
repz
fisttpll
adcl
sub
sub
sbb
scas
mov
jge
inc
xchg
filds
jae
incb
dec
int
xor
push
sti
pop
imul
fisttps
xchg
or
aam
dec
aaa
cmp
xorb
ss
mov
jne
in
cmp
outsb
scas
bound
adc
mov
add
rcr
xchg
in
dec
in
lods
outsl
xchg
jne
test
mov
loopne
rorb
out
rclb
fdivrl
sub
jp
lock
movsl
mov
test
aaa
xor
fmull
dec
push
sbbb
mov
clc
ja
fldt
and
or
out
dec
mov
mov
mov
in
push
std
xchg
pop
loop
mov
jge
push
test
fistpll
mov
aas
call
in
leave
adc
stos
jbe
cmpsl
mov
pop
cmp
into
lds
das
mul
aad
dec
data16
pop
rcll
je
adc
fisubs
stc
test
xor
xor
add
bound
cld
sarb
into
rcl
mov
shl
mov
int
jo
stos
test
sti
ret
arpl
lods
test
push
sub
cs
push
sbb
mov
mov
mov
enter
dec
xchg
clc
jbe
xlat
add
pusha
movsb
mov
dec
insl
or
ss
sahf
movsl
in
xchg
pushf
out
dec
bound
mov
es
movsb
cmc
clc
inc
mov
fdiv
loopne
and
cmp
mov
fs
rorl
inc
lret
sbb
out
test
pop
push
ljmp
mov
mov
adc
adc
sbb
mov
cmp
xchg
mov
cld
aas
xchg
add
lahf
and
mov
xor
lods
fcmovb
repz
fs
push
adc
push
cwtl
pop
adc
mov
jmp
pop
fchs
xchg
mov
cmpsb
xchg
push
mov
xchg
adc
testl
xor
mov
pop
lods
push
mov
cmp
xor
fmulp
pop
jnp
pop
xchg
adc
lahf
es
sbb
push
inc
xor
cmc
in
icebp
in
ret
popa
fstpl
add
dec
loope
jb
jnp
fcomps
sbb
loopne
cli
inc
push
cld
out
pusha
ret
ja
push
test
pop
xchg
add
inc
inc
and
lret
inc
sub
sbb
xor
insb
mov
hlt
loope
xchg
les
lahf
and
gs
pop
mov
add
insb
pop
pop
sbb
dec
lret
inc
mov
sub
adc
movsl
inc
movsb
add
adc
cli
ret
add
pop
addr16
vunpckhps
orl
pop
fsubl
lahf
pop
stos
enter
xchg
cs
push
sbb
aas
outsb
ljmp
sarl
fsubl
cmc
andb
movsl
jns
lret
icebp
daa
hlt
sub
cmp
dec
add
scas
lds
mov
sub
push
lret
mov
jb
lea
ret
dec
lock
lds
lcall
fpatan
inc
adc
xchg
insb
xchg
out
push
xor
shll
xlat
aam
mov
and
cmp
fildll
jnp
insb
xchg
test
out
nop
dec
add
sbbl
xor
insl
rorb
xlat
iret
mov
jmp
add
push
loope
pop
inc
cmc
xchg
aaa
inc
les
inc
push
push
js
mov
fs
xchg
hlt
pushf
xchg
adc
xchg
mov
mov
mov
mov
std
sub
jae
mov
loopne
ret
je
mov
shlb
mov
pusha
cmc
mov
outsl
pusha
adc
mov
pop
loop
xor
pop
aas
xor
mov
lcall
lcall
inc
mov
mulb
cmp
les
jg
mov
push
cli
repz
mov
mov
pop
adc
sub
lahf
dec
jne
sub
mov
frstor
mov
dec
sub
mov
cmp
pop
imull
sbb
cmpl
ss
mov
inc
xor
icebp
call
cmpsl
pop
rolb
je
test
ret
mov
mov
rclb
xchg
and
lret
xchg
cmc
and
iret
sbb
xchg
jp
scas
test
mov
pop
xchg
push
adc
sbb
stos
dec
or
mov
mov
sbb
xchg
sub
mov
popa
jae
insb
cmp
getsec
mov
int3
shll
mov
ds
lock
pusha
adc
test
call
jb
insl
call
cmp
aad
xchg
push
ja
pushw
call
das
and
cmc
sahf
push
sub
punpcklbw
loop
rorl
rolb
out
adc
xor
pop
inc
hlt
xchg
and
mov
xchg
push
das
xchg
mov
mov
push
jg
roll
inc
cltd
or
or
into
das
mov
addr16
xor
mov
jle
mov
cltd
and
jo
dec
dec
in
mov
xchg
lret
out
xchg
sub
scas
stc
sar
mov
mov
orb
aas
push
jl
mul
fnstcw
rolb
mov
sbb
scas
push
rol
adc
loop
xchg
rcrl
or
xchg
jp
arpl
xorl
ss
mov
or
or
sub
mov
inc
mov
dec
jg
fisubs
lock
cmp
iret
add
jns
je
jmp
cs
ret
insl
stc
inc
aam
aas
fwait
pop
gs
xor
fnstsw
push
cs
mov
fdivrs
jo
xchg
mov
xor
xorl
cmc
add
inc
arpl
test
call
es
adc
cmc
movsl
stos
dec
mov
mov
mov
mov
inc
mov
push
lea
roll
sub
hlt
jae
stc
test
xor
mov
ljmp
stc
nop
cmp
into
jnp
pop
mov
shlb
push
repz
aaa
xchg
hlt
and
inc
xchg
mov
out
aad
jp
or
inc
sbb
pop
inc
sub
add
stc
push
cli
clc
xlat
xchg
nop
in
mov
lods
js
jo
push
cmp
sahf
sbb
lock
push
stc
sahf
es
jmp
aad
add
mov
in
jae
popa
pusha
insb
inc
inc
add
or
sbb
fdivs
ret
mov
mov
mov
jb
jne
xchg
test
in
icebp
dec
mov
or
xchg
rorl
jae
shrb
shll
dec
fwait
or
mov
cli
pop
push
pusha
das
dec
push
lahf
mov
jb
jb
ja
cmp
mov
hlt
lds
inc
sarl
adc
lods
stos
cli
or
cltd
sti
mov
loop
repnz
in
pop
inc
outsl
pop
mov
jb
pop
adc
mov
mov
dec
push
and
inc
fbstp
xchg
loope
mov
fcmovb
or
mov
test
jnp
addl
insl
ja
and
xor
mov
sarb
inc
mov
add
push
push
icebp
push
bnd
clc
xchg
orl
sub
ret
xchg
shl
call
sbb
mov
pushf
xor
lods
cmovne
cmpsb
fwait
or
subb
iret
add
sbb
lea
cltd
pop
fmull
mov
mov
xchg
int3
xchg
movsb
sahf
or
pushf
cmp
out
jmp
ret
sahf
mov
jmp
es
mov
xchg
adc
or
cltd
mov
std
push
cld
sub
push
xor
fs
add
mov
xchg
push
push
mov
into
adc
daa
dec
dec
mov
fisttpl
adc
out
inc
arpl
test
rcll
scas
cwtl
sbb
pop
push
sub
sub
sub
popa
adc
lcall
les
and
mov
hlt
insb
fs
sbb
add
ja
jnp
fsubrl
sbb
ret
jg
call
mov
sub
lods
pop
xchg
adc
in
add
les
mov
cli
loop
das
les
mov
push
xchg
pop
arpl
fwait
addb
dec
lods
test
cs
popa
shrb
daa
psubb
clc
stos
xchg
add
add
cwtl
stos
js
xor
lds
push
cmpsl
icebp
insl
mov
test
mov
fwait
jnp
cltd
mov
xchg
push
mov
std
jg
add
fidivl
lods
das
sub
mov
repnz
les
cli
rcl
repz
sbb
aaa
inc
push
dec
mov
jno
inc
loopne
or
mov
push
divb
rorb
cwtl
jmp
mov
shr
sbb
lods
iret
insb
dec
xchg
or
xor
lock
push
divb
mov
incb
loop
mov
ret
sub
leave
mov
cli
push
jbe
and
push
dec
fwait
adc
mov
cmp
mov
pop
mov
inc
ljmp
sahf
ja
in
adc
adc
jno
lahf
mov
cwtl
pop
aaa
inc
cwtl
mov
inc
pop
cwtl
dec
dec
inc
add
cmp
orb
mov
jp
insl
xor
icebp
xchg
nop
shlb
mov
cmc
cs
add
jae
jmp
add
repnz
test
iret
iret
jbe
ficomps
iret
push
cmpsb
pop
outsl
cmc
cli
mov
inc
addl
sarl
mov
sahf
loopne
jge
popa
test
sbb
push
hlt
mov
pop
fdivrs
xchg
or
mov
cmp
repz
fs
ljmp
pop
jbe
and
xor
ja
nop
fistl
sub
daa
fldcw
mov
nop
fcomi
lock
out
push
jo
lcall
dec
sbb
adc
mov
das
mov
ja
mov
jecxz
push
ja
out
addr16
popa
scas
and
xor
std
xlat
test
imul
ret
jmp
or
mov
test
mov
inc
sbb
jp
jmp
mov
xor
or
mov
outsl
sahf
loop
clc
ja
sub
ret
scas
mov
and
adcb
and
pop
jle
or
jbe
mov
push
mov
je
xchg
jb
jmp
enter
push
leave
and
jecxz
and
out
out
add
or
add
cmp
popa
in
cltd
das
mov
sub
or
xor
aas
jne
int
mov
cld
sti
addb
fdivs
sbb
jecxz
xorb
jle
repz
call
inc
rorb
add
scas
cli
jnp
xor
pop
fistpll
cltd
sahf
jg
je
lahf
enter
movsl
pushf
das
adc
add
mov
bound
cmp
push
xchg
push
cmpb
pop
ljmp
xor
jb
push
hlt
push
xlat
fwait
movsb
pop
sub
int3
push
jge
mov
pop
dec
rclb
xchg
push
add
imul
fmul
test
fisttps
sub
xchg
enter
xchg
push
mov
stos
ret
dec
in
xchg
dec
pop
xchg
loopne
jo
push
lock
lcall
xchg
roll
cmpsb
fwait
jb
pop
fcmovne
outsb
fistpll
xchg
xchg
push
dec
inc
xchg
arpl
repz
sub
push
ret
mov
sub
out
xchg
lea
sub
fldt
jno
dec
push
push
jbe
jle
pop
lret
andl
lods
arpl
lock
cmpb
pop
dec
dec
dec
out
in
xor
std
pop
push
dec
mov
insb
fs
adc
add
addl
pusha
xchg
dec
imul
dec
dec
cmp
aaa
sbb
jp
iret
pop
pop
fwait
inc
fadd
push
adc
pop
sbb
sbb
call
clc
push
xchg
scas
push
loopne
or
xchg
lods
mov
hlt
xor
arpl
sub
movsb
mov
repnz
mov
rcr
leave
je
push
in
sbb
jl
test
jns
pushf
cmp
sbb
add
sub
sub
outsb
into
popl
scas
push
sub
pop
shll
xor
mov
repz
xor
cmp
les
lcall
mov
loop
push
cmp
fwait
xchg
leave
arpl
mov
stos
xor
out
add
mov
ret
std
dec
add
and
fistl
test
mov
js
cs
mov
lgs
dec
aaa
data16
je
pop
addl
sbb
movb
or
rep
mov
cmp
dec
stos
sub
outsl
mov
jl
inc
inc
stos
fisubrl
stos
sbbl
xorl
adc
push
je
pop
sub
push
pop
arpl
sbb
sbb
dec
icebp
sahf
jmp
insb
mov
cwtl
dec
dec
jmp
les
xlat
test
out
add
cmpsb
inc
bound
int
mov
mov
and
or
fwait
pop
cmp
ljmp
stos
enter
adc
xor
inc
mov
or
lea
lahf
insb
add
push
push
sahf
jae
xchg
sbb
enter
jne
imul
dec
xor
add
adcl
add
jge
jnp
mov
call
in
in
push
mov
add
pop
std
sub
fldcw
mov
lcall
jmp
add
inc
or
dec
jg
inc
mov
or
rcrb
sbb
popf
test
sub
adc
mov
jl
test
ss
mov
shl
sahf
mov
push
lahf
mov
outsb
gs
xchg
xchg
lcall
cmp
dec
fcmovnb
popa
call
inc
aas
cmp
xor
mov
mov
push
push
shll
push
push
jb
ror
scas
jno
mov
cwtl
pop
imul
xor
imul
pop
mov
push
mov
or
andb
ficoms
add
cmpb
jecxz
into
daa
or
out
push
add
or
mov
mov
xchg
insb
inc
cmp
pop
nop
cmpb
daa
outsb
outsl
aam
stc
out
loopne
in
std
add
jge
aad
fwait
or
out
jnp
gs
ret
fimuls
movsl
sbb
mov
out
xor
inc
dec
je
cmp
fst
mov
adc
cmp
add
mov
dec
ret
sar
adc
pop
popa
shlb
and
cmp
loopne
movsb
cltd
jae
xchg
sub
movsb
shrb
push
or
lahf
movsl
mov
jle
stos
das
mov
fsubl
add
pusha
loopne
outsb
nop
rorb
iret
bnd
cs
or
adc
arpl
mov
call
mov
xchg
xor
ds
xchg
jnp
stos
pop
ja
and
sub
cli
bound
dec
push
mov
adcb
jne
push
mov
je
das
jge
stos
dec
fldcw
test
xchg
jbe
decb
xor
jb
lret
loopne
andb
cmp
fs
mov
scas
fsts
data16
aaa
jnp
in
out
mov
mov
jae
xchg
fs
adc
loop
adc
fisubrs
push
ljmp
shl
xchg
jg
push
cmpsb
mov
xchg
sbb
mov
sub
cmp
push
adc
int3
mov
icebp
push
out
call
and
xor
cmpsl
aaa
imul
adc
pop
es
dec
les
stos
inc
push
fcompl
es
xchg
loopne
sub
add
jno
in
enter
jnp
ficomps
cmp
ds
adc
lea
cwtl
data16
adc
jge
les
mov
jbe
mov
sub
mov
fmulp
movsb
out
pop
int
data16
loope
inc
pop
xchg
push
loope
xchg
stos
insl
cmpsw
loopne
stc
enter
cltd
push
notb
das
ss
sub
ja
mov
pop
jbe
add
jp
push
mov
call
and
loop
imul
pop
jmp
sub
in
or
int3
shrd
lods
test
add
lock
pop
jns
push
ja
dec
out
scas
scas
xor
cmp
fistpll
and
das
test
mov
mov
cmp
push
dec
shll
ret
mov
out
sub
and
sti
es
sbb
cs
icebp
lock
sbb
bound
lock
fdivr
and
outsb
inc
out
repz
scas
ja
add
sub
sbb
stc
stos
loop
mov
out
inc
filds
lock
mov
ret
xchg
push
mov
out
push
into
imul
xchg
andl
mov
push
push
dec
pop
push
int3
push
ja
fwait
lods
mull
cmp
or
and
add
xor
xchg
fcoms
mov
popf
test
mov
cmp
mov
loop
or
lea
cmpsb
test
stc
ret
jns
sub
cli
movsl
or
or
push
std
xor
out
insl
jl
sub
lahf
js
stos
mov
inc
mov
sub
inc
dec
and
push
adc
clc
pusha
aam
jl
mov
jnp
enter
daa
repz
sbb
mov
push
mov
cmp
negl
mov
xor
movsb
sbb
fwait
mov
mov
inc
jge
xor
push
aad
push
sbb
scas
mov
or
rcrl
call
mov
fadd
cmp
mov
cld
xchg
nop
stos
add
sbb
imul
xchg
push
fnstsw
jo
mov
push
push
inc
das
or
jns
dec
sbb
fs
mov
xor
adc
dec
add
cmp
clc
pop
lock
pop
and
iret
push
lock
scas
inc
lret
inc
rcrl
pop
sub
ja
push
push
fldt
mulb
push
in
imul
pop
inc
push
adc
mov
mov
inc
mov
push
add
insb
aaa
inc
xlat
inc
and
xchg
sub
dec
xor
push
dec
loop
jge
lock
inc
or
dec
dec
mov
xor
mov
inc
xchg
test
out
push
adc
cmp
roll
jmp
or
mov
add
jns
or
int3
mov
out
xor
in
mov
fcmovnu
insb
sti
push
stc
insl
xor
leave
into
cmp
popf
and
cltd
push
shlb
aam
lret
sub
adc
xchg
cmp
mov
jo
rcrb
push
popa
fisttpl
mov
dec
dec
test
iret
loop
mov
and
sub
jno
xchg
loopne
aam
rcrl
scas
icebp
and
in
repnz
lds
lcall
sub
mov
jge
sbb
mov
lcall
ds
pop
push
inc
pop
dec
inc
xor
jo
lock
divb
inc
pop
mov
les
pop
sbb
push
mov
push
sub
aam
or
or
test
xchg
test
mov
test
dec
mov
inc
dec
add
aam
mov
out
out
popf
push
jl
popf
pop
lods
pop
cld
fcomp
loop
adc
sbb
outsb
shr
movsb
data16
mov
push
movsb
out
sub
pusha
jno
push
push
pop
std
movsb
and
mov
dec
sbb
cmp
and
pop
rcrb
aad
pop
sbb
push
pusha
sti
repnz
xchg
test
mov
jbe
inc
addb
mov
in
insl
mov
int3
ljmp
jb
sub
test
inc
shlb
cmpb
ret
push
xor
mov
punpcklbw
sbb
lcall
xor
je
test
outsl
ret
xor
sub
jle
jl
inc
ljmp
dec
pop
and
mov
and
repnz
scas
push
lahf
sahf
cmp
ljmp
je
sbb
and
xor
fmull
xor
dec
mov
rorl
inc
cmc
jp
pop
aam
loop
sub
mov
iret
cli
push
or
int
jno
ret
repnz
jbe
xlat
orb
push
dec
addl
movsl
jl
add
inc
sahf
lret
iret
in
inc
sub
loopne
adc
pop
mov
notl
movsl
xchg
jo
mov
inc
pop
movsb
je
mov
aam
je
pop
inc
pop
std
pop
stos
push
mov
fwait
cwtl
and
adc
fcoml
lods
out
xchg
mov
or
daa
mov
lods
hlt
cmp
notl
jmp
xor
mov
clc
adc
mov
nop
fisubl
loope
sets
mov
mov
cwtl
cwtl
inc
or
imul
jl
mov
cmp
inc
sub
rcl
inc
enter
divb
nop
jo
loopne
popa
pop
out
jb
jo
push
popa
sahf
adc
sahf
jle
adc
sahf
fs
sub
xchg
repz
mov
mov
outsl
and
jg
lods
int
aaa
int3
xchg
repz
cmp
lds
lods
pop
dec
in
push
sbb
stos
stos
std
add
push
or
push
add
pop
cmp
lock
add
adc
mov
add
mov
and
xchg
xor
and
arpl
mov
inc
imul
jmp
fisttps
pop
inc
sub
out
sub
in
pop
cmc
add
jo
sub
jge
repz
jnp
fisttpl
test
lock
xchg
dec
jecxz
and
dec
inc
jns
inc
mov
faddl
rcll
lret
dec
pop
inc
and
mov
cmp
push
scas
out
push
jb
cmp
sbb
mov
xor
ficoml
ja
and
sbb
clc
mov
aaa
ret
sarb
jle
push
or
cmp
mov
gs
in
sbb
test
pop
pop
std
shll
dec
ja
fucomp
outsb
repz
cmpsb
dec
and
arpl
divl
cmp
push
push
and
fmul
aaa
mov
push
in
and
mov
add
mov
ss
repz
stos
loopne
aam
in
or
sub
ret
sarb
in
mov
iret
vmread
push
and
add
mov
aas
jns
add
jp
hlt
shrl
fwait
mov
in
sub
js
xor
jecxz
stos
dec
int3
fiaddl
push
insl
into
mov
adc
jbe
scas
leave
iret
out
arpl
cmove
xchg
xchg
adc
jns
fwait
pop
repnz
pop
sbb
arpl
inc
push
sbb
imul
dec
xchg
add
popa
inc
std
cwtl
xchg
movsl
jp
call
sbb
aam
mov
inc
add
clc
iret
int
mov
xchg
sbb
stos
mov
cli
pop
mov
in
icebp
adc
mov
jecxz
dec
rorl
jb
aas
nop
mov
addr16
lods
pop
jle
iret
push
mov
mov
pop
outsl
in
lock
and
movsb
loopne
push
jl
cmp
mov
js
pop
inc
movsl
aaa
sbb
test
or
cltd
js
mov
sbb
xlat
jp
loop
gs
loop
cs
and
mov
mov
inc
xor
iret
inc
imul
pop
jecxz
push
mov
cmp
int3
and
movsl
stc
jno
push
prefetch
xadd
or
xchg
sbb
pop
dec
cltd
sub
int3
idivb
add
add
mov
lods
mov
and
sarl
icebp
sbb
jne
mov
jne
and
push
and
shrb
andb
adc
loope
push
cmp
xor
stos
mov
pop
mov
jg
loop
divl
aam
mov
xchg
lods
or
dec
in
push
shll
cs
cmpsl
jg
pop
mov
lea
lret
add
mov
mov
mov
daa
mov
icebp
and
add
push
fistpll
gs
frstor
cmp
paddb
jecxz
mov
xor
cltd
push
mov
push
add
push
data16
je
pop
in
mov
cmp
sbb
sub
pop
sarb
loopne
jmp
cmp
cmp
add
in
adc
call
pop
dec
mov
add
add
mov
bound
aaa
dec
dec
notb
adc
jb
xor
mov
js
mov
mov
mov
lahf
addb
xadd
popf
dec
pop
and
out
shr
das
andb
sub
sub
adc
dec
inc
push
mov
icebp
dec
ret
jle
cmp
sbb
cld
aam
jg
xor
stc
jne
int
lods
lret
xor
xchg
gs
cmpsl
ja
cmp
jae
iret
mov
cmpsb
xor
jecxz
xchg
ss
movsb
mov
mov
stc
sbb
in
sub
mov
icebp
iret
pushf
push
fstl
in
call
jl
fsubl
es
jbe
sub
add
xor
or
lods
dec
out
mov
mov
faddp
cwtl
outsb
repz
mov
cmpsl
push
push
push
mov
ret
or
push
or
jecxz
mov
sub
lcall
and
xor
dec
sbb
mov
or
xchg
mov
test
out
mov
push
rclb
inc
cld
or
out
sbb
js
sbb
jnp
adc
mov
sub
push
out
fs
ret
add
sar
and
jle
fldenv
and
repz
add
pop
pop
pop
add
and
push
rcll
inc
mov
cltd
sahf
out
sub
leave
imul
in
mull
push
xor
push
repnz
jg
and
or
shlb
cld
rorl
jg
outsl
pop
pop
cmc
and
je
pop
stc
pop
into
sbb
repz
dec
or
xchg
mov
stos
icebp
pusha
icebp
or
sbb
nop
dec
xor
cltd
mov
jne
pushf
xor
and
loopne
bound
testl
aas
scas
xor
inc
xchg
cli
imul
fstpl
adc
mov
mov
mov
pop
outsb
loope
ljmp
dec
clc
cmc
cmpsb
rcrb
add
cmpl
imul
jns
jl
pusha
test
xchg
je
dec
mov
xlat
subl
xchg
daa
outsb
xchg
xor
test
and
cmpxchg
pop
imul
into
js
adc
and
lods
out
push
in
sbb
mov
ret
repz
cmp
xlat
xchg
icebp
xchg
inc
jge
out
mov
dec
mov
notl
enter
js
cmpsb
shlb
fsubrs
mov
mov
mov
pop
mov
repz
scas
pop
stos
mov
pusha
or
pop
xor
and
das
popa
test
jno
inc
inc
fidivrs
xor
mov
push
jl
mov
mov
xchg
push
inc
sbb
notl
and
push
jl
test
add
daa
daa
mov
stos
repnz
push
push
dec
mov
adc
push
jnp
sbb
fsubrs
insb
push
cli
popa
push
pop
xchg
xchg
rcl
adc
inc
adc
pusha
add
cmpsl
xchg
call
sub
sbb
std
mov
add
or
jmp
enter
add
jmp
mov
lcall
jae
outsb
pushf
jnp
push
jmp
mov
or
jne
pop
rclb
in
sub
je
daa
inc
push
xchg
or
add
xor
mov
push
mov
out
daa
insl
pop
mov
pop
imul
adc
mov
or
fwait
sbb
dec
jmp
aad
icebp
mov
xorl
mov
mov
jl
pop
repnz
enter
jb
insb
sbb
mov
sbb
mov
jb
xchg
sahf
gs
cmp
sahf
sbb
das
xchg
popf
sub
fwait
cmp
mov
sbb
inc
inc
data16
push
cli
xchg
xchg
fiaddl
push
push
std
imul
sarb
sbb
mov
lea
insb
cmp
js
ss
in
add
xchg
stc
fimull
ret
addr16
insl
int
pop
scas
cmp
push
mov
dec
cli
insb
xchg
add
ret
iret
cmp
mov
cmp
push
or
test
ljmp
sbb
add
fiaddl
cmp
mov
mov
int3
jp
add
dec
sahf
sbb
stos
ljmp
ds
aas
subl
jne
fwait
aas
push
sub
stos
sub
fdivrl
test
dec
aaa
xchg
adc
fcoms
ret
negb
enter
je
mov
cmpsb
cmp
mov
aad
pop
fucomp
mov
fistpll
imulb
fcmovne
sub
xchg
mov
add
out
pop
rcr
into
or
xlat
cmp
adc
lods
mov
cli
and
fwait
ljmp
add
jns
shll
fidivrl
int3
or
xlat
das
fsts
sbb
orl
and
push
and
or
push
push
loope
push
push
int3
cld
sar
aam
es
in
clc
pop
xorl
cs
mov
push
fmull
in
jne
mov
es
stc
xchg
sub
push
xlat
xchg
scas
loop
jmp
mov
xchg
cmc
loope
lods
push
cmpsb
inc
stc
mov
sbb
mov
gs
xor
and
sbb
fimuls
nop
lcall
and
adc
or
stc
lock
hlt
dec
jno
xchg
ss
xchg
push
cmp
push
aam
in
insb
xchg
mov
ds
bnd
add
add
xchg
and
shrl
mov
je
sub
roll
addr16
sub
mov
or
cld
push
push
jns
jno
js
leave
leave
adc
out
fdivs
xor
sbb
fistps
addr16
inc
or
ret
repnz
cmp
fdivrp
mov
push
lods
mov
mulb
into
mov
pop
ljmp
adc
iret
inc
sub
xchg
js
mov
mov
mov
mov
pop
and
dec
shlb
mov
leave
inc
cmp
xor
std
push
pop
xor
fistpl
xor
mov
push
out
mov
mov
and
lret
and
orl
xchg
pop
mov
ja
sbb
xchg
pushf
lock
jne
lock
pusha
xor
mov
pop
adc
lret
cwtl
fldcw
clts
imul
jo
jae
jmp
lea
pause
test
js
xchg
aam
sbb
push
pop
nop
jnp
fadds
cmp
sub
and
pop
adc
fsubl
sbb
dec
and
pop
shlb
jle
pop
jnp
es
jb
sahf
xchg
bound
xchg
out
mov
daa
idivl
cwtl
shlb
inc
dec
jnp
add
push
jae
add
jp
vmwrite
mov
rep
pop
or
outsb
jecxz
pop
xor
je
inc
pop
dec
or
adc
testl
jp
mov
out
cmpsb
icebp
fsubrs
stos
adc
ds
pop
inc
ljmp
insb
bound
and
into
dec
iret
sbb
in
pop
xchg
mov
imul
cmp
jns
or
stos
ret
cmp
mov
stos
xchg
sbb
pop
and
out
cltd
fisubrl
int
pop
or
in
cmp
mov
and
mov
rcl
inc
xlat
sbb
movsl
lcall
dec
data16
daa
ret
js
popa
insb
xchg
dec
mov
dec
les
mov
clc
mov
daa
lahf
aad
in
adc
xchg
loope
jle
pop
stc
mov
movsb
or
test
jns
and
pop
mov
jle
dec
or
lods
sbb
or
popa
adc
adc
inc
dec
pop
in
nop
idiv
or
mov
jne
inc
or
outsl
pop
mov
out
js
imul
cmpsb
and
xchg
int
outsb
or
xchg
push
test
and
cli
xchg
add
lcall
popa
xorb
out
and
mov
les
lds
sub
pavgb
testl
out
bound
lods
ja
xor
push
pop
bound
inc
lods
movsl
jbe
je
jae
push
or
lahf
aad
fs
mov
pop
mov
mov
ficompl
dec
stos
cmp
popa
rolb
cld
mov
mov
xlat
addr16
in
repz
dec
xchg
add
jg
pop
das
stos
mov
mov
stos
adc
es
add
std
push
dec
cmp
fldcw
push
mov
test
fisubrl
jae
dec
in
fsubs
sub
les
xor
jns
xchg
adc
in
mov
sub
mov
cmp
dec
xor
xlat
push
ljmp
loope
xchg
mov
mov
les
mov
inc
daa
jge
jo
mov
cmp
andb
or
jmp
jp
shlb
and
adc
movsb
dec
sub
ss
cmp
sti
inc
and
dec
push
fwait
scas
cld
adc
ds
arpl
addb
pop
adc
or
jp
aad
inc
aad
pop
inc
and
xchg
dec
jecxz
push
shr
cmpsb
movsl
mov
jl
pop
packssdw
push
fwait
lds
fdiv
xor
ss
add
jp
or
test
aad
cmpsb
xor
pop
mov
ja
jbe
cmp
mov
inc
stos
xor
dec
ficoml
pop
lock
nop
pop
idivb
sti
add
ret
sbb
and
inc
jg
mov
push
and
inc
push
pop
xor
jmp
mov
adc
and
push
test
popa
sahf
push
jne
andl
jmp
pop
leave
insl
mov
outsl
loop
mov
inc
movsl
jmp
test
sub
pop
cli
or
xor
push
jmp
lods
scas
out
fwait
imul
out
dec
movsl
lods
dec
cmp
test
and
push
adc
dec
fcom
in
mov
dec
mov
das
pop
rcr
pop
pop
mov
mov
je
pop
mov
push
adc
lret
scas
out
sbb
arpl
sbb
pop
add
mov
jle
mov
rclb
push
push
dec
mov
push
js
das
in
jnp
inc
inc
lods
insl
push
jmp
lods
pop
test
addr16
inc
insb
mov
addr16
notb
ljmp
sbb
dec
loop
push
sbb
adc
xchg
roll
or
scas
mov
jmp
imul
mov
push
and
rcrl
and
cmp
pushf
pop
sub
iret
stos
xchg
test
fucom
sbb
cmp
xlat
inc
xor
std
scas
ffreep
and
adc
sti
mov
lods
pop
sub
mov
xor
in
cli
sahf
pop
xor
lods
pop
and
jb
inc
xor
mov
sahf
ficoms
xchg
scas
mov
and
test
dec
inc
xor
and
sub
or
fimull
xor
hlt
sbb
inc
cmpsl
stos
cmp
xlat
jo
cmp
mov
adc
rclb
movsb
mov
fnstcw
testb
sub
je
lods
mov
movsb
sbb
pusha
nop
mov
push
mul
dec
stos
xor
jg
insb
xchg
jo
mov
inc
cvtps2pi
xchg
mov
mov
daa
mov
cld
mov
jae
sbb
sub
lcall
and
hlt
arpl
xor
mov
push
cmpsb
sbb
aas
stos
jns
int
ss
push
mov
pop
xor
dec
mulb
outsb
xor
pusha
mov
data16
ret
das
out
outsb
clc
mov
xchg
sbbb
aad
xor
pop
jne
sahf
xor
inc
jns
push
mov
fwait
add
rclb
leave
movsl
ret
mov
mov
cmc
inc
stos
pop
imul
inc
fsub
fcmovu
js
inc
cmpsl
mov
enter
dec
outsl
out
pop
test
imul
mov
jge
pop
cmp
inc
adc
icebp
inc
adc
cmp
call
aam
jmp
repz
insb
mov
inc
clc
cltd
fsubl
mov
pushf
or
in
cs
lahf
in
sbb
jb
adc
lcall
cmpsl
icebp
leave
repnz
test
dec
jge
sti
xchg
rolb
pop
xchg
mull
jmp
loopne
cmp
or
scas
mov
movsl
in
add
sub
cmc
daa
or
pusha
sbb
jmp
aas
cwtl
movsl
lret
jmp
cmp
in
enter
test
nop
dec
push
movsb
jbe
mov
sti
clc
mov
mov
mov
add
jecxz
pop
sbb
xor
movsb
xchg
push
cmp
testl
xlat
pushf
mov
test
rclb
nop
sbb
mov
aaa
cmp
imul
lock
mov
jl
nop
data16
cmp
xchg
sti
lock
inc
iret
sbb
lcall
sub
xlat
ds
xchg
jp
dec
and
mov
dec
js
subl
xchg
hlt
je
push
inc
clc
je
icebp
gs
je
cmpsl
or
stc
add
loop
in
lods
and
xchg
imul
cmp
out
mov
xchg
sub
ja
cwtl
pop
add
mov
lea
int3
ss
pusha
clc
call
or
fstl
flds
lods
js
sbb
adc
pop
fisubrl
divb
notb
je
fwait
arpl
pop
xor
sub
orb
pop
pop
lods
mov
hlt
mov
lret
sbb
fsubrl
mov
jp
rcll
hlt
push
addl
pop
push
sti
mov
adc
sbb
push
add
bndstx
or
jle
add
enter
and
and
dec
icebp
cmc
xor
sbb
sahf
mov
xchg
add
arpl
mov
les
ret
inc
out
repnz
mov
frstor
int3
pusha
fs
iret
and
scas
sti
dec
xor
test
push
ja
or
cwtl
sbb
loope
or
popf
out
cmc
fldl
fnstcw
ret
cli
subb
iret
aad
dec
fiaddl
outsl
inc
iret
inc
jno
dec
xlat
adc
popa
ljmp
inc
data16
das
dec
fldenv
xor
adc
rolb
popa
push
sbb
shll
cmp
movsl
lcall
aam
arpl
cmp
cmpsl
je
ret
stc
sub
xchg
or
insb
lods
mov
dec
ss
inc
loopne
jmp
jp
xor
sti
inc
popa
hlt
pusha
les
iret
aad
das
push
inc
fdivr
les
add
push
jle
mov
fsubrp
scas
lods
in
daa
jae
jno
orl
pop
movsl
xor
push
sti
inc
cmp
roll
mov
ret
movsb
and
mov
ds
daa
mov
aam
add
mov
xor
jno
or
insl
sarb
out
lods
push
fiaddl
sbb
inc
jnp
or
mov
sbb
aas
test
repnz
adc
sbb
jo
fisttps
or
cmc
repnz
xchg
xor
xor
push
jp
dec
inc
sub
mov
or
testl
jnp
inc
jns
loopne
xchg
call
sbb
xchg
pop
mov
popf
setl
mov
ret
popf
and
mov
and
pop
adc
cmp
mov
push
shll
pop
mov
jecxz
mov
ds
test
jmp
cs
inc
stos
cmpsb
bound
sbb
repnz
push
es
out
pop
sub
imul
xchg
sbb
push
push
push
aaa
aaa
push
cmc
inc
xchg
daa
jnp
das
ror
notl
int3
dec
add
adc
loopne
jns
mov
stc
aas
fwait
push
sbbl
mov
xor
mov
rsm
stc
pop
add
jne
imul
dec
test
mov
cs
pop
aad
xchg
jnp
std
push
hlt
repz
lgdtl
std
sub
lods
mov
sbb
shl
rcr
jle
mov
adc
es
arpl
adc
or
xchg
or
xchg
sbb
dec
cmp
push
cltd
ljmp
cmp
mov
pop
push
push
roll
sub
cmpsb
adc
inc
push
jae
mov
icebp
push
push
pop
pushf
push
dec
lret
mov
push
mov
cltd
xchg
imul
gs
in
jg
shl
addr16
pop
mov
cld
xchg
jg
inc
mov
lods
icebp
mov
mov
jmp
push
loopne
fisubs
stos
mov
mov
inc
xchg
sarb
cmpsl
std
ja
adc
sub
sbb
xchg
sbb
add
loopne
mov
loop
add
lea
mov
les
ret
inc
in
jb
test
mov
addb
add
jo
sub
scas
dec
mov
sti
daa
stos
xorb
lahf
mov
shrb
jg
inc
mov
out
push
jns
dec
and
mov
push
je
push
pop
pop
mov
sbb
cli
dec
incl
mov
icebp
cmpsl
iret
push
cmp
dec
loope
mov
hlt
inc
xchg
dec
iret
jl
adc
test
xchg
pop
mov
repz
cld
xchg
out
cli
std
mov
mov
push
test
jmp
sahf
nop
inc
push
jge
or
cmp
cmp
iret
push
mov
popf
xchg
ljmp
jl
sbb
dec
push
push
mov
mov
push
adc
add
cmp
leave
loope
mov
sub
push
sbb
in
outsb
pop
or
pop
dec
out
mov
inc
fldt
mov
jle
icebp
arpl
jecxz
pop
push
insb
lret
jge
xor
scas
hlt
enter
push
cld
addr16
jge
lods
push
dec
fldenv
and
dec
cmpl
xchg
loopne
in
repz
ds
iret
jp
aad
leave
fisubl
cmp
cmp
ja
jno,pn
dec
stc
in
push
sar
mov
mov
into
mov
add
stos
repz
shl
sub
lret
hlt
cwtl
stos
adc
imulb
sbb
lahf
pop
push
aam
add
push
fldcw
mov
repz
jp
in
adc
test
jnp
pop
dec
sbb
xchg
stc
nop
std
or
mov
cmp
cmp
cmc
xor
jmp
fisubrl
pushf
add
test
cli
fwait
ja
repz
sbb
sti
cld
notl
push
cmpsb
popf
out
sub
adc
sbb
repz
lret
cmp
cmp
lcall
aad
pop
pop
mov
idivl
jae
jb
dec
loopne
and
and
pop
sub
xor
mov
or
js
fstpt
in
imulb
jl
and
cmp
or
outsl
sbb
sbb
fisubrs
pop
js
cltd
dec
and
jbe
mov
mov
ja
iret
push
ljmp
aam
mov
pop
adc
mov
mov
and
inc
adc
mov
lds
dec
loope
push
jle
jne
xor
dec
add
pop
mov
cmp
xchg
bound
xchg
lds
lds
bnd
fdivrs
dec
outsb
cs
adc
rcr
mov
xchg
jo
les
and
add
aaa
repz
mov
inc
icebp
push
pop
xor
repnz
pop
outsb
sub
in
gs
mov
sar
or
into
ljmp
cli
inc
cmovg
leave
and
xchg
mov
adc
stos
jns
fidivl
cmp
hlt
pop
call
mov
cli
lock
imul
sbb
or
push
add
mov
int
sbb
or
int3
mov
or
sbb
pop
test
cmpsl
add
es
add
adc
cmc
xchg
out
jl
imul
jb
shll
aam
xchg
fsubl
fsub
clc
data16
rcrl
jne
dec
sub
cmp
fnstenv
pusha
mov
fmul
cmp
adc
adc
inc
jg
cmovle
cwtl
call
dec
jmp
in
int
outsl
fcomps
jmp
lahf
push
adc
add
outsl
sub
in
inc
or
xor
mov
rcrl
cmp
aam
mov
and
add
outsb
dec
cmp
cmp
clc
jbe
jl
pop
jecxz
fsubrl
sarb
lea
mov
jmp
or
push
scas
cli
push
addr16
roll
hlt
and
orl
fcom
fcomp
xchg
mov
ret
jl
and
xchg
sti
push
push
dec
jecxz
fsubrs
and
cmp
shrl
jg
rorl
in
fldenv
hlt
pushf
cmp
in
add
mov
push
ss
ds
aaa
push
je
lcall
mov
cmp
imul
aad
add
sub
add
sub
imul
mov
sub
ret
push
mov
xor
enter
lret
arpl
push
and
push
aam
addr16
das
rcr
add
iret
lds
popa
out
ret
arpl
cmp
fistl
dec
push
lret
pop
inc
jo
rclb
add
xlat
outsl
pop
jb
in
push
dec
xor
pop
jmp
es
pop
aad
insl
jne
jae
and
xchg
or
scas
jae
fstpl
or
jae
imul
lea
add
int
test
adc
sbb
imul
sbb
pop
inc
jl
das
lret
push
leave
push
ja
loopne
test
and
adc
in
pushf
enter
mov
adc
dec
cmp
mov
cmc
adc
inc
sub
in
xchg
mov
cmp
ss
lahf
add
cltd
stc
mov
lret
dec
xor
pusha
mov
iret
ret
insb
lcall
xchg
mov
mov
push
repnz
mov
mov
mov
nop
int
cmpsl
outsl
xor
adc
clc
aaa
sub
or
xchg
out
cmp
fmull
xor
jp
sub
xchg
bound
add
jge
pop
int
hlt
stos
enter
mov
or
enter
mov
jmp
test
hlt
adc
mov
movsb
out
outsl
mov
lods
popf
xor
xchg
lret
xor
fdivrs
cmc
xchg
sub
cld
dec
imul
call
push
mov
fbstp
cmp
pushf
fistpl
mulb
fwait
xchg
sti
fstpt
scas
and
mov
cmp
dec
rolb
out
pop
test
out
loop
jl
lds
repz
mov
xchg
mov
cmpsb
mov
jno
insb
out
sbb
sub
mov
insb
xlat
pop
jnp
nop
bound
pop
sbb
add
jl
imul
mov
arpl
push
frstor
jae
jb
int3
gs
maxps
arpl
mov
mov
popa
in
incb
hlt
es
imul
xorb
in
rorl
ds
sub
dec
inc
fstps
movsl
pop
std
je
in
es
xor
push
adc
imul
cmc
repnz
jge
jl
push
dec
movsb
imul
sbb
inc
adc
in
jecxz
sbb
cmp
pop
xchg
inc
rclb
je
sbb
dec
fiadds
mov
mov
and
int
sbb
mov
stc
dec
addr16
data16
adc
mov
sbb
repz
decl
add
pop
out
and
sbb
ret
and
lods
icebp
icebp
dec
or
mov
cmp
push
jge
dec
sub
mov
inc
xor
loop
js
cmp
mov
jl
in
jl
inc
adc
adc
sub
sub
insb
ss
and
daa
push
js
mov
lea
test
sub
jle
call
pop
pop
loopne
sub
js
fdivs
fsubrl
clc
stos
dec
fdivrl
jb
adc
xchg
xor
popf
das
call
mov
inc
movsb
std
test
push
stos
cmpsb
xchg
pop
adc
pop
jno
pop
jne
inc
adc
and
xor
iret
fmull
sti
jmp
fstps
leave
fnstcw
jns
cmc
xchg
lock
push
inc
movsb
movsl
vorpd
mov
flds
fimull
pop
outsb
outsb
ss
popf
pop
and
push
pop
mov
outsb
orb
mov
push
mov
scas
aaa
fldenv
ljmp
stos
addr16
cmp
js
xor
or
pop
test
shrb
mov
test
mov
pop
les
shl
sbb
fmul
sub
sbb
les
add
cld
fwait
loopne
int3
jecxz
add
les
jecxz
and
cli
xor
jle
sbb
out
push
pop
pop
movsb
lcall
in
cwtl
mov
sub
jmp
mov
pop
lcall
ja
ja
lcall
xchg
pop
and
cltd
xchg
sub
cltd
fmuls
adc
rol
sbb
lahf
je
pop
ss
test
or
lcall
sti
sbb
or
and
sbb
cld
fmul
push
sbb
negb
loopne
xor
add
jo
ficomps
and
lea
sti
inc
mov
popf
pushf
mov
xchg
cmp
ss
sahf
dec
sbb
aaa
jo
cmpsl
loopne
loop
aaa
or
sub
cmc
jno
je
dec
stc
xchg
ret
mov
outsl
jecxz
push
mov
jp
cli
fistpl
xchg
xchg
fstpt
adc
adc
adc
addr16
out
pop
mov
dec
add
int
fisttpl
sbb
mov
std
je
mov
xlat
dec
cltd
and
sarl
int3
sub
cmpsb
push
add
lret
cmpsl
sar
mov
mov
arpl
mov
clc
or
cld
push
aas
dec
fstpt
xor
cmpb
or
and
xchg
xchg
int3
repnz
in
in
test
adc
fs
fcmovbe
jg
xor
test
shl
sti
movsb
push
push
and
adc
scas
sub
sbb
push
adcl
push
mov
add
xlat
mov
stos
adc
xchg
addr16
mov
test
lfs
aad
inc
cli
dec
pop
sahf
int
in
xor
and
push
pop
dec
aam
sbb
xor
dec
fs
xchg
mov
xorb
push
lods
push
mov
lret
daa
add
jnp
cmp
jge
lret
outsb
pop
andb
loopne
cli
mov
xchg
inc
hlt
jo
dec
cmp
out
push
sbbb
fwait
pop
aaa
and
xchg
je
fwait
es
pop
cwtl
cmp
lret
adc
and
push
into
shl
aaa
mov
adc
out
pop
dec
jmp
mov
in
call
inc
pop
stos
movsl
or
sti
fistpl
inc
pop
pushf
xchg
cmp
mov
test
dec
pop
add
cs
pop
cmpsb
js
adc
push
mov
stc
or
adc
jmp
std
imul
sahf
mov
lret
jl
or
test
sub
aam
leave
and
jnp
inc
int3
xchg
pop
movsb
adc
or
jns
mov
loop
dec
xchg
lcall
fistl
scas
jmp
lock
add
cmp
pushf
or
pop
xchg
adc
sarb
loopne
mov
inc
pop
cltd
sub
push
loop
imul
sub
add
mov
negb
adc
xacquire
aam
mov
xchg
test
push
stos
adc
inc
sti
scas
inc
std
cmp
pusha
or
insl
imul
push
add
mov
int3
lds
and
int3
add
jbe
pop
pop
mov
repz
out
push
repz
repz
xchg
xor
shll
inc
mull
push
xchg
imulb
sub
sbb
dec
jmp
lods
push
leave
sub
sbb
fcomp
jne
out
test
adc
test
gs
stc
sub
pop
inc
mov
xchg
fcoms
mov
nop
rcrb
in
cli
jmp
and
test
shlb
ret
cwtl
int3
push
dec
mov
jae
lcall
test
lods
daa
lcall
aam
mov
ja
fnstcw
sbb
scas
lret
js
fcmovnb
test
lods
xor
xchg
dec
jnp
out
ja
adc
popa
or
push
js
cmp
cltd
jge
and
mov
xchg
outsl
mov
fbstp
fcmovnu
gs
mov
push
sbb
add
loope
outsb
push
or
shl
mov
mov
mov
daa
cltd
mov
ljmp
mov
punpcklbw
add
inc
adc
mov
xchg
pop
lret
out
mov
fldcw
dec
sub
clc
in
js
jnp
movsl
xchg
push
pop
sbb
sub
push
push
lea
inc
shrl
fidivrs
xchg
js,pt
repz
iret
xor
inc
cltd
dec
lea
pop
xorb
inc
xor
sbb
ret
fildl
pop
mov
fwait
outsb
mov
test
xchg
xor
pop
sub
and
popa
movsb
aad
cmp
fstps
data16
push
fidivrl
pop
cwtl
pushl
lea
mov
out
mov
mov
xchg
cltd
xchg
cld
push
enter
xor
test
sahf
xchg
int
ficoml
into
cs
les
scas
adc
add
loop
dec
add
sub
sbb
jbe
and
or
ljmp
sbb
js
xor
push
fwait
jo
adc
mov
lds
test
jg
ja
mov
xorb
jp
push
sub
int3
lret
mov
push
insl
push
inc
lcall
fbstp
cmp
idivb
jo
das
scas
add
aad
aam
into
xchg
into
pop
jp
mov
xchg
ret
fs
jle
jmp
outsl
xchg
add
fistl
sahf
inc
mov
es
fmuls
arpl
fs
jbe
std
lcall
lahf
sahf
or
les
out
rol
mov
fwait
mov
add
loope
andl
cltd
test
xor
mov
call
adc
addb
push
pop
es
cmp
incl
xor
jecxz
inc
push
arpl
dec
jb
and
push
push
dec
int3
rorl
mov
hlt
outsl
mov
push
scas
lods
mov
scas
imul
push
xor
stos
xchg
mov
mov
outsb
mov
sarl
or
mov
in
jae
mov
or
cmpsb
sarb
rol
cmp
insb
clc
mov
jl,pt
jne
adc
fmull
dec
jmp
aaa
int3
sub
inc
and
lcall
mov
outsb
dec
mov
and
push
inc
inc
test
sahf
push
sbb
aaa
push
call
in
call
ja
push
or
xchg
ljmp
sbb
das
push
pop
movsb
je
mov
mov
fdivrl
pop
jecxz
xor
xor
int3
sbb
in
call
inc
mov
jbe
push
dec
cli
mov
rcrl
in
cs
je
and
lahf
rcr
pop
cmp
lret
add
cmp
cmpl
mov
movsl
push
adc
cmp
sub
int3
push
popa
icebp
inc
int
neg
ret
jmp
cli
push
enter
jmp
sbb
pop
add
pop
test
and
inc
pop
mov
icebp
lock
cli
jnp
incl
lds
into
movsl
cltd
fists
inc
mov
out
push
js
xchg
js
cltd
fistps
shr
sti
xchg
les
pushf
sbb
ffreep
movsb
add
jae
sti
xor
pop
stos
ficoms
mov
fistl
movsb
and
cmp
test
cmp
sar
xor
jmp
adc
xchg
stos
cs
call
sub
int3
cs
push
fwait
mov
addb
cmp
dec
inc
popa
mov
inc
sub
es
cltd
das
xchg
fists
jb
jp
inc
cmp
xchg
jno
out
sbb
imulb
lcall
loope
mov
or
sbb
ss
test
push
mov
cmp
bnd
jne
mov
inc
mov
shrb
je
movsl
cmp
inc
xchg
xor
aam
lcall
cmc
push
adc
call
push
arpl
xchg
pop
add
jne
jae
rorl
adc
inc
or
pop
jp
scas
xor
push
cwtl
lret
fsin
lret
lret
test
pop
sbb
scas
xchg
int3
inc
fmull
xchg
ss
or
in
mov
mov
add
jo
or
xchg
jle
sub
mov
mov
int
test
stos
sub
mov
pop
ljmp
ffree
jno
xorb
ds
xor
xchg
adc
or
and
incl
push
mov
mov
pop
les
pop
inc
mov
je
add
mov
std
sub
adc
xor
xlat
inc
fidivl
jg
lahf
shr
cltd
js
int3
dec
aas
pop
icebp
dec
pusha
inc
jmp
test
cli
stos
mov
sub
aam
into
jle
pop
js
pop
push
mov
xchg
mov
or
rcrl
arpl
push
in
add
mov
mov
push
fisubrs
in
adc
inc
lahf
and
dec
not
or
push
or
movsb
sub
mov
fwait
movsb
sbb
sahf
cmp
inc
cmc
dec
dec
jge
loopne
inc
clc
std
cmp
test
out
mov
in
and
imul
sub
aas
lret
enter
pop
inc
xor
xor
sub
push
jae
ljmp
aam
or
xchg
adc
arpl
jbe
dec
fs
shll
or
jp
pop
or
int
cmp
cld
bound
ss
jae
mov
lods
in
push
dec
mov
mov
hlt
add
ffree
rcll
mov
rorl
mov
ljmp
sub
dec
push
outsl
or
cmp
and
lock
xor
mov
nop
push
data16
fcoml
inc
mov
dec
mov
fsts
not
xorl
outsl
in
or
hlt
insl
pop
sahf
jmp
cmpps
ficoml
shrl
pop
clc
scas
pop
cmp
into
dec
popf
cmp
out
imul
in
es
push
xchg
push
movsl
cli
mov
shrb
mov
jnp
ret
cwtl
lea
test
push
daa
aad
pushf
or
and
pusha
ret
rclb
rcl
push
clc
popa
insb
add
fsubrl
in
aas
js
fiaddl
push
lcall
arpl
jge
or
push
or
lock
dec
xor
fcomip
inc
mov
pushf
jle
shlb
out
lret
out
mov
int3
xchg
xchg
adc
xchg
pushf
inc
mov
xchg
xlat
jmp
popa
xchg
and
fldl
movsl
or
and
adc
mov
movaps
push
xor
testb
leave
ljmp
ljmp
push
fcoms
and
cmovg
or
pop
cmpsb
mov
leave
sbb
or
dec
xchg
push
sti
neg
inc
and
xchg
and
xchg
dec
lret
mov
outsl
inc
mov
lret
sbb
gs
jnp
jg
inc
std
test
add
jecxz
push
es
lahf
xchg
outsb
dec
fwait
icebp
cs
nop
pop
adc
jno
xchg
mov
fwait
leave
pop
xchg
mov
mov
fildl
sub
cmc
test
sarl
adcl
cmp
pop
mov
mov
popa
and
or
fnstsw
jg
leave
cmp
das
divb
lds
jge
xor
sub
mov
adc
mov
es
cld
jnp
mov
in
cltd
lods
nop
push
ja
mov
movsl
movsl
sbb
xchg
shlb
sub
xor
mov
into
cld
sbb
push
cmpb
push
jl
or
xor
push
sub
dec
and
dec
loop
xchg
pushf
call
imul
add
dec
xchg
test
orb
nop
daa
pushf
mov
pop
or
out
xor
xchg
jle
ret
insb
movsb
xlat
lret
arpl
shlb
loop
mov
adc
out
mov
clc
sub
inc
push
popf
cltd
shr
sti
xchg
sti
jae
addr16
js
jg
xlat
fdiv
bnd
std
shrb
push
rcr
mov
add
cs
and
lsl
xchg
or
lods
ficoms
adc
clc
in
dec
mov
daa
jecxz
add
sbb
and
mov
xorb
cmp
mov
lahf
outsb
sbb
stos
sbbl
pop
movsl
pop
bound
xor
arpl
adc
mov
imul
inc
mov
test
pusha
nop
ret
int
arpl
xchg
repz
and
fchs
add
lods
lcall
xchg
jne
push
push
test
jp
std
inc
ljmp
out
xor
push
mov
imul
sarl
inc
mov
push
cs
pop
jg
repnz
mov
ja
mov
xchg
cmc
sbb
lods
stos
es
push
mov
sbb
lahf
adc
mov
hlt
mov
pop
mov
movsb
jo
sbb
pop
xor
insl
xor
push
add
jns
dec
cli
dec
add
out
test
jecxz
add
mov
or
aas
mov
xchg
clc
xor
dec
xchg
inc
gs
jnp
fstl
pop
mov
adcb
xchg
cmp
jns
jp
sub
push
idiv
cs
xor
js
jge
lret
outsb
das
xlat
add
ret
add
test
fcomi
or
arpl
shll
in
push
in
lret
pusha
mov
jle
loope
dec
inc
insl
negl
lods
out
rcrb
jle
mov
mov
addr16
inc
sbb
adc
push
out
jnp
sub
or
pop
andl
cmp
add
lods
and
scas
pop
loope
imul
cltd
enter
jne
pop
push
xchg
sbb
mov
mov
pop
mov
fwait
aas
pop
sub
and
sub
cmpsl
dec
lock
test
hlt
add
imul
in
lahf
loopne
movsl
push
push
insl
in
test
cmc
scas
sub
jns
out
mov
jbe
repz
push
xor
push
dec
cli
movsl
inc
cmp
xchg
sarl
mov
dec
sbb
arpl
test
outsb
mov
or
adc
jge
or
out
xchg
fs
jns
fdivrp
in
push
and
adc
mov
fisttps
cmp
jge
pop
pop
clc
mov
lret
inc
nop
jo
push
lds
xor
push
adc
jl
fbstp
pop
and
mov
decb
mov
js
fmuls
mov
push
or
xchg
cmp
je
mov
cmp
int
pushf
pop
sbb
or
aam
addr16
cli
clc
push
xor
jle
test
addb
jl
jle
cwtl
pop
rcrl
loope
fcmovb
inc
mov
shll
dec
add
orl
repnz
cli
scas
dec
xchg
push
out
mov
or
inc
mov
jmp
sahf
insb
movsb
push
leave
push
fdivs
jge,pt
fucomip
es
xchg
pop
xchg
test
cltd
or
mov
mov
push
cltd
jo
push
sub
inc
fwait
lds
pop
nop
sbb
loopne
mov
pop
mov
or
mov
imul
cmp
xchg
out
cmp
mov
lods
cld
sti
inc
ret
and
dec
inc
inc
push
pop
jge
mov
push
pushf
jp
adcb
mov
mov
pop
imul
jle
sbb
xchg
mov
insl
push
test
jge
cwtl
test
adc
mov
movsb
fstpt
test
stc
mov
xchg
add
aaa
xchg
dec
xor
aas
sub
repnz
sub
call
jns
fs
mov
lret
and
dec
aas
fidivl
add
mov
cmp
jecxz
inc
and
stc
scas
mov
bound
dec
cmp
mov
outsl
push
and
push
push
lret
loopne
frstor
shll
cmp
mov
mov
cltd
pop
cld
cmpsl
fstpt
shlb
xorl
scas
sbb
xor
repnz
scas
push
iret
adc
xchg
mov
xchg
int3
test
out
cmp
mov
and
mov
gs
add
and
lock
fisttpl
cmp
jns
negl
or
mov
scas
addb
shrl
dec
jo
jg
pop
adc
xchg
cs
push
add
or
push
inc
inc
xchg
cmp
fmuls
test
rolb
aam
call
mov
dec
push
pusha
or
popa
cmp
notb
adc
jge
subps
out
stos
fdivs
sbb
mov
clc
lahf
test
test
pop
push
pop
repz
push
aam
loope
loope
xor
cmp
mov
pop
pop
dec
or
pop
stc
pop
mov
aad
sbb
icebp
push
and
fdivr
cmpsl
sub
xchg
arpl
xlat
push
push
sub
jge
pusha
or
loop
mov
mov
dec
test
lea
sbb
ds
out
clc
sbb
add
xlat
jp
jns
or
dec
sti
movsl
jecxz
sub
stc
mov
mov
insl
mov
mov
jno
es
pop
pop
mov
lods
dec
stc
dec
fisubrl
jl
dec
and
mov
mov
mov
out
es
iret
push
loop
mov
outsl
ds
inc
subl
mov
sarb
adc
unpcklps
cltd
rcpps
sbbb
jle
fwait
sbb
scas
mov
lret
hlt
cmp
cld
sbb
je
inc
in
call
xchg
jge
int3
scas
int3
andb
pop
jmp
sbb
bound
enter
cmp
sub
fsubrl
pop
mov
lea
seta
sbb
repz
or
testl
les
cli
aas
mov
ret
or
fcmovu
icebp
fists
dec
nop
lret
js
mov
pop
or
stos
loop
std
inc
sub
sub
imul
jecxz,pn
clc
movsl
pop
out
pop
outsl
jge
jne
push
jne
lock
int
insl
inc
mov
hlt
cs
imul
pop
fdivrl
or
ss
arpl
popa
pop
push
xchg
add
cmp
or
add
mov
jo
pop
arpl
bound
jnp
ljmp
sbb
xchg
xchg
loop
movsb
mov
test
adc
outsb
pop
clc
stc
jns
dec
out
es
cmp
bound
jae
mulb
mov
lods
dec
mov
mov
lret
push
shlb
sub
or
mov
fcom
insl
ds
cmpsl
xchg
cmc
fnstsw
fs
movsl
mov
stc
nop
into
push
cmp
pop
inc
divl
dec
out
xchg
xor
movsl
cmpb
add
lock
mov
add
xchg
pop
adc
outsb
cmp
shrl
je
cs
pop
test
aaa
adc
mov
jmp
and
mov
mov
cmpb
test
jns
popf
test
jbe
or
nop
cli
enter
cmp
roll
add
addr16
arpl
ficoms
or
jnp
fcoms
insb
gs
in
push
inc
sbb
and
dec
gs
jne
cmp
mov
push
pop
data16
lods
rcrl
stos
mov
jbe
push
icebp
mov
out
clc
fstp
stos
mov
pop
adc
xchg
cmpsl
mov
sub
cli
insl
cwtl
decb
pop
inc
lcall
rcrl
mov
xchg
mov
push
sub
add
out
or
sub
lcall
mov
mov
mov
pushf
or
rcl
test
push
and
push
and
mov
mov
lock
insb
mov
div
call
scas
lods
inc
mov
ja
in
cmp
sub
jno
int
mov
sahf
stos
test
adc
xor
les
test
das
sub
or
push
ds
inc
jle
cmpsb
mov
cltd
flds
fld
push
in
sbbb
es
cmp
cmp
jno
call
jl
and
cmp
mov
or
xchg
adc
mov
inc
pop
ret
mov
sbb
xchg
dec
cwtl
mov
mov
mov
cmpsl
sahf
cwtl
negl
sbb
negl
movsb
mov
mov
inc
or
andl
idivb
outsl
mov
rcr
pop
roll
out
mov
and
and
aas
cltd
call
add
inc
mov
out
stos
ret
enter
adc
xchg
bound
adc
mov
js
sbb
cmp
or
dec
adc
bnd
lods
dec
or
and
ficoml
dec
int3
enter
mov
sbb
rorl
shlb
cmpsl
mov
bound
shl
mov
mov
data16
lods
ljmp
lret
jecxz
xor
jp
dec
dec
cli
mov
xchg
add
lahf
fsubrs
mov
jne
bound
sbb
or
xor
div
sbb
orl
jle
arpl
shll
or
push
inc
popf
push
sub
cvtps2pi
scas
jae
mov
dec
jnp
mov
add
loope
fcomps
xor
or
xchg
movsb
out
sbb
mov
sub
sbb
xor
add
fmull
es
movsl
rep
sub
subl
int
xchg
shlb
or
jo
inc
mov
or
loop
or
dec
mov
dec
out
add
movsb
sahf
movsl
dec
xchg
or
inc
mulb
dec
orl
sbb
ret
mov
sbb
mov
subl
xchg
xchg
sahf
rcrb
imul
fnstcw
addr16
repnz
ja
cli
push
cmpb
aad
push
in
nop
push
and
push
outsl
dec
lea
pop
loop
add
popa
pop
pop
lock
adc
mov
popa
jge
sbb
sbb
and
mov
jp
mov
movsl
imul
push
movl
or
loopne
push
stos
dec
mov
inc
cld
rorb
xchg
pop
xor
pop
std
jns
in
test
cwtl
jbe
push
fdivr
dec
xor
fucomip
xlat
jne
cmp
notl
sub
imul
icebp
mov
nop
mov
addr16
pop
hlt
insb
movsb
dec
int
push
lods
js
adc
cmp
cmp
or
les
outsb
add
filds
adc
jl
movsb
dec
adc
push
shll
rclb
and
idivb
mov
jns
pop
mov
add
cld
lock
push
add
xchg
jmp
dec
lea
push
inc
cmp
xchg
or
cmp
xchg
jnp
and
jg
dec
outsb
sub
pop
inc
push
mov
popa
aas
aad
lea
pop
or
test
pop
decb
mov
and
jne
or
pop
icebp
sbb
aad
cli
psubw
adc
cmp
sarb
sbb
adc
sub
sti
mov
xchg
stos
pusha
push
fisttpl
dec
adc
clc
fsubs
push
adc
loop
and
add
mov
push
leave
cmpsl
cmp
sub
in
push
cld
jmp
pop
cs
jl
cmp
dec
iret
movsl
ss
stc
mov
xor
shll
shll
pop
stos
mov
jp
mov
dec
xorb
sti
cmpb
test
movsb
arpl
loope
sti
insb
sbb
in
jp
int3
xor
mov
xchg
ja
loopne
add
pop
dec
sub
and
mov
int3
mov
lcall
sahf
shufps
mov
jmp
scas
pushf
cmp
jne
je
repnz
movsl
xchg
loopne
stos
mov
fldt
fisubrs
xchg
xchg
out
lret
or
sti
jb
pop
or
push
sub
mov
cmp
sbb
sbb
and
pop
pop
and
rcrb
mov
imul
jecxz
pusha
mov
cmp
popa
ja
xchg
xor
cli
clc
push
dec
in
arpl
mov
and
sbb
xlat
repnz
sbb
mov
imul
add
loopne
cmp
add
popa
lods
mov
xchg
test
daa
aam
adc
add
mov
jne
fstpt
insl
test
mov
lahf
and
imul
pop
pop
aad
rcrb
movsb
add
pop
add
jge
dec
js
cmp
mov
nop
nop
sarl
dec
sub
pop
lods
ds
adc
mov
icebp
loop
imul
cmc
jle
dec
fstps
xor
enter
mov
and
gs
inc
pop
or
mov
mov
aam
das
jne
and
in
lds
adc
xchg
add
mov
mov
arpl
loopne
fucomp
jno
outsl
sbb
xor
test
jge
push
lahf
aaa
shlb
aam
add
push
out
pop
pop
xchg
enter
rcll
movsl
addr16
scas
ret
rolb
push
bound
pop
pushf
les
cmp
mov
or
adc
jmp
int
icebp
sbb
fstps
push
sbb
push
push
jecxz
push
loopne
push
or
lds
xchg
outsl
push
aaa
xchg
mov
sub
cmp
aaa
stos
sbb
mov
lds
xchg
fdivrs
imul
sti
into
pop
dec
push
mov
sti
mov
pop
sbb
sti
outsb
into
lcall
fists
dec
test
sbb
into
stos
mov
in
es
xchg
and
loop
in
add
into
mov
adc
xchg
fdivp
enter
divb
and
call
lods
sub
out
and
add
xor
insb
sahf
dec
pop
sub
cs
sub
sti
push
movsb
xchg
into
mov
fldl
jge
pushf
dec
mov
outsl
pop
fs
dec
inc
out
btr
in
push
iret
sub
out
and
mov
xchg
stos
pop
xor
out
ret
adc
jmp
faddl
jp
inc
or
xchg
inc
ret
and
loope
and
inc
fnstsw
pop
xchg
scas
push
and
shlb
nop
sbb
js
push
cwtl
mov
add
imul
lret
stos
rorl
popa
scas
mov
fisttpl
gs
ds
fisttpll
xchg
inc
lds
imul
mov
repnz
inc
cmp
jae
repnz
int
mov
jg
mov
mov
mov
sahf
inc
test
inc
pushf
testl
outsl
cmp
push
add
cmp
std
sbb
adc
xlat
shll
sti
dec
imul
ljmp
cmp
sub
scas
mov
cmpsl
loope
push
shll
dec
lods
aam
pop
and
gs
sbb
push
cmp
fmuls
out
bound
lods
out
and
je
add
mov
pop
push
into
xor
stc
push
mov
jo
bnd
add
test
xchg
add
push
std
pop
push
cmp
xorb
inc
mov
or
xor
fmul
fstps
in
dec
pop
stos
sub
shl
xor
das
imulb
add
or
lret
jge
leave
dec
dec
leave
or
sti
pop
sbb
sub
lods
mov
lock
dec
faddl
xor
fcomps
jl,pt
out
in
dec
mov
std
arpl
int3
shl
or
lods
xchg
and
xor
add
pop
stos
dec
sbb
push
push
cmp
lahf
sub
inc
jae
pop
test
inc
out
stos
mov
and
sub
or
push
ret
add
add
es
sbb
imul
mov
bnd
rcrb
pusha
push
xchg
mov
inc
inc
cltd
fisttpl
mov
mov
into
adc
add
loope
dec
icebp
repnz
lahf
lret
daa
lret
mov
sbb
hlt
jmp
outsl
hlt
add
inc
sub
lock
notb
mulb
cwtl
jmp
sbbl
push
push
pushf
sub
pop
mov
icebp
xor
stos
or
jmp
mov
fistpl
mov
xchg
jmp
sbb
jl
xchg
test
jno
and
sti
sub
mov
shrb
inc
stc
std
push
loopne
cmp
out
lock
fsubl
jb
movsl
inc
insl
push
loope
and
jmp
fs
xor
dec
push
mov
mov
and
insb
mull
int
add
dec
into
mov
jns
movsb
sub
xor
out
test
repz
add
add
inc
in
fmuls
lock
mov
outsb
xor
stos
xor
dec
push
sbb
and
int
add
imul
mov
pusha
fsubrp
clc
aaa
xlat
rcl
xchg
aam
or
outsl
mov
cmpb
mov
mov
sbbl
lock
nop
scas
test
cmp
lods
dec
lret
lcall
fsubrl
fimuls
movsb
lret
push
inc
inc
sbb
mov
pop
mov
insl
je
scas
fdivrl
mov
pop
lcall
adc
mov
pop
xorb
xchg
sbbl
dec
mov
sar
out
cmpsl
mov
daa
ret
repz
aas
pop
sbb
mov
fs
ret
enter
imulb
out
mov
in
arpl
pop
mov
rorl
out
pop
dec
pop
aad
push
out
outsb
sti
fnstsw
mov
in
push
icebp
es
xor
iret
inc
push
jnp
xor
jns
sahf
aad
movsb
mov
jae
sub
lods
mov
fldt
and
aas
xchg
dec
fwait
push
pop
jns
and
lahf
es
int
stos
and
imul
test
test
lcall
jl
jns
jae
dec
adc
add
ret
cmp
mov
push
inc
mov
cmp
and
out
add
daa
sub
adc
inc
push
mov
xchg
cmp
movsb
sbb
movsb
and
dec
mov
pop
xchg
adc
je
and
mov
lock
push
fdivr
outsb
xchg
xchg
mov
add
xchg
adc
stos
cmpsl
rclb
call
jmp
cmp
jl
xlat
pop
mov
mov
scas
xor
sbb
dec
mov
pop
xchg
jle
push
out
iret
mul
lds
cltd
inc
mov
mov
insl
mov
int
xor
ficoms
fistl
int
push
and
std
dec
daa
mov
pop
inc
sub
test
aad
inc
inc
and
jmp
pop
push
cmpsb
and
xor
ds
mov
frstor
xchg
ret
js
nop
test
insl
cmp
test
dec
fisubrl
xlat
mov
push
lock
mov
and
mov
pop
arpl
subl
pop
jb
xor
pop
pop
dec
movsb
aam
xchg
push
xchg
and
ret
mov
sub
jle
notl
imul
cmp
dec
mov
outsb
les
pop
inc
push
mov
or
push
popa
add
cltd
jp
hlt
mov
mov
in
push
fcomps
popa
xchg
pusha
cmpsl
jo
data16
xchg
in
xor
popa
mov
daa
jbe
xchg
jmp
or
adc
mov
pushf
xchg
dec
lret
sbb
mov
xchg
mov
sahf
and
push
sbb
sub
mov
stos
aas
out
cld
push
dec
cltd
arpl
inc
inc
loop
jecxz
popa
in
fidivrs
sahf
sti
xchg
xchg
inc
out
in
clc
popa
add
sbb
pop
outsl
mov
pushf
loopne
mov
add
icebp
in
movsl
mov
sub
pusha
or
add
cltd
ss
lea
sbb
scas
xchg
mov
mov
faddl
int
push
mov
mov
fmuls
xchg
inc
loope
or
jne
into
pop
xchg
push
mov
mov
enter
jne
and
sub
es
inc
imul
ja
call
sbb
out
int3
fists
inc
inc
fldz
pop
dec
cltd
cmp
adc
sub
sbb
aad
add
or
pop
fs
vcvtss2si
ds
jae
fistpll
pop
mov
add
in
ja
mov
push
push
jge
adc
sub
mov
mov
jnp
es
xchg
pop
push
lret
add
push
shrl
push
fldcw
sbb
or
jne
std
mov
jo
iret
jns
push
mov
cmpsb
mov
push
xchg
scas
jno
push
stos
dec
imul
xchg
scas
jg
mov
inc
mov
push
adc
shl
xor
fimull
std
cmp
addr16
sub
cs
and
notb
imul
xchg
pop
pop
imul
rorb
push
xor
xchg
cmpsl
add
xor
jae
add
pop
jbe
cmp
scas
add
cmpsb
js
cmp
bound
shl
inc
xor
jl
lods
das
jbe
es
mov
mov
inc
or
sti
das
xchg
sbb
jmp
pop
insl
mov
leave
loope
pop
fldt
mov
sti
pusha
jmp
divl
sub
test
jae
inc
into
add
movsl
cs
mov
imul
call
call
int3
inc
sbb
mov
xchg
lretw
dec
jns
das
loop
sti
nop
push
sub
mov
aaa
dec
imul
fwait
outsl
push
lret
adcb
insl
cmp
sub
nop
add
sti
rcll
lea
lea
enter
imul
stos
loope
ficomps
pop
mov
inc
mov
movb
lock
pop
or
ficoms
aaa
xor
pop
cmc
xor
pusha
mov
cwtl
jmp
jbe
or
sbb
mov
xor
add
push
cmpsl
and
push
imull
mov
fidivl
outsb
in
cmp
xor
gs
ss
jbe
leave
movsb
inc
mov
lret
sub
pop
fadd
dec
jno,pt
setp
in
push
pop
jl
xor
mov
mov
mulb
out
pushf
mov
fsubrp
ja
aad
cmpsb
sbb
jp
outsb
jp
xor
and
sbb
popf
test
pop
test
test
sbb
pushf
scas
rol
in
and
out
aam
test
push
fidivs
pop
movsb
dec
adc
xor
sbb
mov
push
in
cmc
push
movl
mov
mov
sbb
pop
in
stos
cmp
ret
aaa
cs
xor
cmp
jbe
lret
push
xchg
jb
out
stos
ljmp
push
xchg
hlt
push
pop
iret
lcall
jp
inc
xor
push
cmpsl
and
out
cmc
cmc
icebp
loope
dec
fmul
clc
outsb
inc
stos
ret
movsl
insl
inc
push
cmpsl
mov
add
xor
cmp
loopne
popa
push
ljmp
pop
jmp
out
push
lock
faddl
outsl
add
push
ljmp
mov
rorl
es
jle
test
adc
in
cwtl
ret
xchg
or
lods
test
push
out
adc
add
inc
fbld
pushf
inc
sarb
gs
out
adc
ss
fcoms
fidivl
imul
push
inc
xchg
push
sub
rorl
sbb
inc
pop
les
mov
pop
aad
inc
ret
cmpsb
jnp
pop
cmp
inc
hlt
mov
inc
pop
mov
xorl
ljmp
jno
repz
fwait
cmp
jle
fbld
cs
sub
adc
pop
movsl
lea
sub
cmc
lea
mov
mov
fadd
cmp
inc
jbe
adc
out
mov
ficoml
daa
lods
xor
add
mov
dec
push
call
out
pop
stc
pop
rcl
popf
fs
clc
ret
push
xchg
aaa
adc
add
sub
aam
ret
push
push
xchg
and
mov
addl
aaa
movsl
push
std
mov
insl
fsubrp
out
cltd
xchg
sbb
ret
inc
add
sub
xchg
lcall
je
je
sub
cwtl
cli
outsl
insb
adc
inc
jne
adc
addr16
ljmp
jmp
push
xchg
aad
pop
nop
mov
call
rcrb
sub
sub
xor
jne
je
orb
pop
inc
lcall
cmp
out
push
jle
mov
push
nop
lock
in
push
mov
xor
pop
xor
adc
xor
inc
fs
inc
cmp
jl
out
add
roll
dec
adc
out
lods
out
clc
inc
inc
inc
xlat
cmp
shll
iretw
push
push
jp
pop
sbb
sbb
ret
xor
sub
xor
jle
mov
enter
enter
bound
scas
adc
jg
fcoms
and
xchg
dec
cmp
fs
sub
xlat
incb
aaa
xchg
and
xor
jle
mov
ja
std
jbe
jae
dec
int3
xchg
sbb
in
mov
lahf
mov
movb
roll
add
xchg
lahf
jp
mov
mov
xchg
jne
push
stos
mov
mov
ficoml
mov
push
scas
enter
jl
rcrl
push
or
add
mov
xchg
arpl
pop
inc
cld
mov
pop
push
shrb
xchg
rcll
pusha
ja
dec
popf
test
mov
sbb
jne
cmpl
inc
inc
lds
rcll
add
and
das
das
lahf
and
gs
inc
pop
imul
shrl
lahf
in
lret
aam
sbb
in
jmp
jne
mov
sub
imul
xchg
jmp
sbb
sub
xchg
sti
jmp
pop
mov
daa
xchg
sbb
enter
lcall
test
enter
push
ljmp
imul
rcrl
xchg
aad
inc
sub
arpl
pop
mov
int3
xor
inc
popa
xor
jge
mov
adc
sbb
and
fs
int
mov
mov
in
xor
lahf
cltd
push
movsl
inc
das
les
inc
jbe
test
cld
jno
and
leave
mov
in
out
push
cmp
es
mov
int3
in
xchg
add
sub
lock
add
test
sub
out
mov
pop
dec
scas
xor
daa
hlt
fwait
xchg
xchg
dec
push
aaa
test
mov
mov
scas
iret
xchg
loop
repz
push
pop
notl
sbb
push
or
fcoms
clc
out
test
jl
enter
enter
sahf
fildll
mov
cmp
cmpsb
fbstp
notl
cmpsl
dec
jl
ss
mov
xor
ja
fwait
enter
jmp
jge
cld
roll
cmp
adc
and
sti
sti
jns
pop
mov
int
xlat
adcb
jmp
add
xchg
push
shll
insl
arpl
sub
sub
stos
sbb
inc
add
dec
adc
lods
sbb
add
loopne
mov
stos
mov
cld
xchg
xchg
jno
mov
sbb
icebp
and
jmp
dec
lds
sbb
jnp
jle
fdivr
cmp
pop
ret
mov
std
scas
pop
enter
dec
jo
xor
inc
adc
bound
lds
mov
mov
in
push
pop
sti
jbe
inc
lods
ja
pop
cmp
xorl
adc
cltd
push
subl
fdivrs
cltd
clc
dec
lahf
loopne
pop
xchg
mov
shl
into
lahf
scas
stos
push
dec
in
movsl
jo
fwait
push
out
lds
and
sbb
rolb
mov
pop
jle
testl
and
pop
or
in
jmp
insb
dec
mul
stos
add
int3
and
and
mov
es
mov
adc
mov
fisttpl
bound
es
aad
insb
fs
icebp
sub
cmp
mov
mov
push
inc
test
aas
dec
pop
outsb
cwtl
pop
jno
dec
out
inc
jbe
xlat
pop
xchg
sbb
inc
mov
lods
add
pop
jge
test
jge
or
cs
stc
out
sub
mov
in
pop
into
xchg
scas
adc
and
dec
lods
sbbl
cmp
push
icebp
pusha
xor
pop
mov
xchg
sub
je
pushf
push
call
dec
mov
or
dec
sarl
xlat
mov
test
add
fnstsw
push
add
add
out
push
les
and
xchg
xchg
cmp
out
cli
pop
pop
iret
sahf
inc
jg
cltd
push
ja
cmp
xchg
jno
dec
stos
pushf
sbb
movsl
mov
test
cmp
out
ss
sbb
imul
sbb
mov
lret
push
loopne
out
add
fcompl
xor
add
or
enter
jecxz
xor
cmp
nop
test
leave
divl
rolb
add
ja
mov
pop
pop
sbb
lahf
incl
mov
icebp
mov
sarb
dec
xchg
mov
rcl
adc
es
or
jns
sbb
std
repnz
push
push
insb
mov
insl
or
push
movsl
loope
int
push
or
shl
pusha
ja
adc
pop
outsl
jp
inc
mov
adc
mov
jb
repnz
sub
insl
cmp
hlt
pop
fnstsw
mov
fnstsw
notl
call
dec
loop
xchg
insb
std
lcall
fst
lock
xchg
mov
pop
sbb
or
mov
icebp
and
sub
jmp
inc
sahf
test
popa
daa
loopne
jecxz
add
dec
in
mov
repz
test
lods
xchg
scas
fwait
imull
xor
push
adc
movsl
xor
push
jne
cmpsl
push
lea
dec
xchg
imul
and
jae
mov
cld
enterw
mov
mov
push
mov
cmpl
ljmp
mov
dec
into
cmp
push
dec
xchg
fisubl
clc
movsl
dec
repz
mov
int
sbb
xchg
lds
xchg
mov
inc
mov
jo
push
mov
push
xor
push
push
or
and
cmc
loop
cmp
popf
mov
cmpsb
mov
shlb
das
jb
cs
cmpsl
or
enter
test
dec
adc
add
mov
cmp
sub
xchg
mov
inc
pop
addl
das
rol
add
cmpsl
cmpsb
and
push
stc
and
push
mov
adc
dec
and
sbb
xchg
int
loopne
sbb
xchg
or
xorb
test
pushf
pop
sub
cmp
sub
lret
mov
mov
mov
in
push
fldt
push
mov
xor
jg
pop
pop
scas
ret
repnz
mov
outsl
ljmp
sbb
xor
cld
mov
inc
imul
loop
push
mulb
sbb
inc
sbb
cmpsl
movsb
movsb
xor
loope
cmp
mov
mov
aas
loope
test
jmp
xor
mov
sar
mov
jmp
pop
insb
sub
xor
jbe
cmp
mov
std
sti
stos
mov
insl
push
fistl
add
xchg
lods
out
into
xor
pop
stos
dec
pop
stos
mov
sbb
pop
rorb
mov
je
bound
dec
decl
xchg
lock
xchg
sub
push
xor
out
sbbl
cmp
jns
jmp
mov
flds
pop
dec
gs
outsb
dec
int
std
sbb
inc
cmp
pop
or
lds
jle
in
cmp
jnp
mov
cmpsb
mov
ret
and
lcall
xchg
and
mov
hlt
and
aad
aas
rclb
push
dec
inc
insl
out
jmp
repnz
and
mov
daa
push
push
fisubl
mov
jmp
jns
lahf
inc
adc
xchg
add
jp
cmc
pop
sbb
pop
push
dec
popf
dec
lea
scas
push
inc
xchg
pop
mov
jg
loope
cmpsb
cmp
and
fs
nop
mov
outsb
pop
xorl
xchg
rcrl
dec
dec
lret
dec
xor
or
inc
scas
mulb
xchg
adc
je
mov
push
lock
shrb
in
std
loope
jl
push
dec
xor
fistpl
adc
das
cmp
test
sub
ret
imul
mov
call
das
sbb
or
inc
cmp
jbe
pop
lret
cmc
adc
into
test
shl
jbe
jno
test
mov
fdivs
les
mov
pop
xlat
stos
mov
lcall
push
testb
sub
scas
pushf
setae
mov
cld
or
push
sbb
xlat
and
arpl
jge
insb
or
decb
push
in
stos
fstpt
sbb
xchg
insl
out
dec
or
sahf
xchg
push
inc
rol
pop
sbb
imul
rcll
in
pop
mov
pop
shll
movsb
outsl
pusha
test
rcr
sub
cli
mov
jmp
iret
pop
mov
int3
xor
dec
repnz
xchg
mov
push
xsavec
mov
lods
xlat
jb
mov
sbb
push
cmp
fsub
lret
fwait
scas
out
add
call
inc
mov
addl
mov
xchg
repnz
inc
lahf
cmc
push
les
xor
dec
pusha
cmp
xchg
and
jne
mov
jecxz
aam
inc
or
jmp
out
adc
add
imul
inc
dec
fidivrl
pop
insb
shl
es
mov
jb
cmp
arpl
ret
rcrl
mov
jge
sbb
pop
lret
mov
cld
in
add
outsl
pop
sub
aad
movsl
std
lods
outsl
cld
xor
pand
and
scas
test
insb
xor
jo
inc
mov
pop
jno
sbb
push
or
pusha
add
fbld
mov
push
mov
outsl
add
xchg
pop
xor
jnp
aad
cld
fldcw
xor
mov
rorl
add
sbb
out
or
lds
fwait
mov
out
mov
test
mov
cmp
pop
int
dec
xor
or
add
mov
test
dec
sahf
aas
push
loop
lret
and
das
cs
lret
dec
dec
xor
dec
stc
mov
or
stc
and
xchg
inc
mov
xchg
notl
andb
push
sbb
inc
pusha
or
jae
ret
nop
jno
pushf
jns
mov
mov
sbb
test
out
inc
or
enter
push
iret
adc
mov
inc
push
sub
and
or
cld
in
ss
xchg
push
jle
push
je
out
stos
out
mov
lea
mov
loope
orl
dec
mov
sbb
mov
jno
cld
sbb
dec
incl
mov
push
pop
mov
iret
pop
dec
adc
aaa
adc
popl
in
push
scas
bnd
adc
xchg
incl
insb
sti
aas
repz
or
sbb
enter
adc
jb
stos
mov
ja
mov
xchg
mov
repnz
in
cld
scas
bound
cmp
xchg
jo
loopne
daa
pop
addr16
or
shrb
jne
pop
hlt
xchg
das
and
jg
nop
dec
sti
cld
out
dec
outsl
test
xor
and
in
sub
sbb
push
pop
pop
jmp
movsb
icebp
xchg
pusha
loop
shll
adc
sub
add
cmpsb
add
stos
stc
add
jmp
fisubrl
ret
pop
add
sahf
mov
adc
xor
shll
mov
repz
mov
pop
push
rcl
loope
cmp
dec
insb
sbb
push
pop
dec
fisubl
int
jle
sti
and
lret
inc
jo
mov
fwait
insb
shl
daa
pop
shrl
ret
in
in
jle
daa
sbb
or
pop
rorl
push
mov
mov
inc
ret
movsb
outsl
xor
xchg
hlt
leave
orl
jo
jns
inc
jno
les
rorl
out
mov
sub
cmc
mov
in
and
jnp
pop
jbe
popf
stos
movsb
xor
add
cmp
pusha
in
push
mov
out
lods
pop
fnstenv
pop
or
loopne
push
add
sti
cltd
cmp
xchg
int
jae
lea
push
push
xchg
adc
rcrb
xchg
dec
fs
lahf
frstor
insb
pusha
xchg
sbb
mov
movsl
mov
iret
xor
cmp
jne
jbe
scas
sbb
imul
movsb
ret
xchg
out
xor
inc
iret
adc
arpl
mov
in
cmc
movsb
mov
pop
loopne
mov
mov
fwait
or
bound
clc
jg
inc
sbb
xchg
cmp
dec
lock
cmpl
arpl
js
cs
into
jge
lahf
adc
shr
inc
mov
xorl
cmp
mov
out
push
dec
cmp
mov
adc
imul
sbb
out
dec
out
sbb
jmp
mov
pop
aam
fwait
mov
pop
add
xchg
or
fs
shlb
mov
xchg
stos
xlat
xor
adc
test
pop
or
xchg
xchg
fcompl
inc
jo
ss
push
pop
clc
fnsave
cmpsl
movsb
std
mov
loop
xor
lahf
pop
enter
cs
xchg
cmp
mov
adc
daa
leave
push
cmp
sbb
lock
repnz
xchg
sbb
xor
testb
fidivl
in
rcll
scas
sbb
ljmp
push
pop
movsb
jp
dec
adc
xor
add
push
jo
xchg
cmp
fldt
or
insb
fiaddl
scas
jns
xchg
lcall
mov
mov
sarb
inc
push
mov
mov
mov
or
xchg
ja
mov
push
insl
push
std
mov
adc
mov
cld
rcll
imul
stc
imul
loopne
jge
dec
stc
into
fadd
mov
fsubs
aam
push
ss
ficomps
enter
add
xchg
aam
mov
xchg
dec
stc
or
or
lds
and
push
imul
into
and
pop
add
push
jl
pop
pop
fwait
jnp
xchg
lcall
gs
in
les
lret
cmp
mov
pop
roll
hlt
push
xor
mov
stos
jmp
push
loop
xor
and
sahf
ficomps
pop
cmpsl
fwait
cmp
sub
mov
xor
sbb
mov
stos
insb
test
mov
push
into
add
xchg
mov
sbb
cmc
pusha
das
cmpsb
test
xor
fs
out
lods
inc
xlat
push
mov
pop
pop
push
pop
sub
mov
dec
and
stos
jge
xor
lock
stos
fwait
aas
dec
push
adc
jl
jle
pop
push
cpuid
pop
popf
jmp
cmp
in
int3
mov
stc
mov
pop
fsubrs
hlt
push
dec
das
inc
push
xchg
mov
test
push
mov
dec
in
out
mov
mov
loop
add
inc
int
xchg
das
cld
shll
adc
ja
outsl
cmp
inc
jle
adc
sbbb
arpl
sti
xchg
out
dec
cli
xchg
pop
xchg
or
in
loopne
js
jne
xchg
adc
adc
repz
std
cmp
pop
mov
loop
in
jnp
add
xor
pop
loop
add
cmp
mov
cmp
or
call
adcl
inc
mov
lods
sbb
push
and
aaa
pop
mov
in
sbb
ds
stc
orb
push
outsb
outsb
pop
push
inc
dec
or
lods
jns
sbb
cmp
icebp
icebp
out
cmp
pop
dec
add
pop
push
pop
and
lahf
dec
scas
mov
xchg
cmc
push
sbb
xor
movsl
xchg
pop
xchg
shr
push
popa
stos
sbb
insl
fnstsw
iret
imul
fdivrl
xor
push
sbb
xorl
test
dec
rorl
or
xor
push
out
cmp
subb
into
aad
pop
xorb
jl
sbb
in
mov
xchg
mulb
sbb
arpl
data16
jo
stos
jne
xchg
stos
inc
sbb
rorl
es
inc
or
repnz
add
xor
lret
mov
sahf
jle
jae
adc
arpl
notb
pop
or
cmpsb
in
add
dec
adc
xor
fidivrl
sar
push
aaa
les
callw
ja
aad
setnp
inc
lods
fs
mov
jle
and
xchg
enter
xchg
xor
aas
or
mov
pop
lods
loope
and
mov
cmp
mov
stos
or
jmp
je
pusha
sarl
addl
xchg
dec
ds
out
in
lock
lret
test
bound
sub
fdiv
dec
test
pushf
aad
or
sti
in
mov
sub
movsb
adc
in
daa
pop
mov
sub
call
mov
cmp
mov
mov
add
popf
pop
shrb
pop
cmp
into
push
dec
jne
imul
inc
gs
xor
pop
cli
into
inc
out
adc
in
int
das
xor
pop
in
sbb
fmull
flds
push
xor
jnp
insb
inc
jae
and
jo
int3
call
xchg
mov
jb
and
inc
mov
cpuid
mov
pop
pop
sub
xor
jo
enter
int3
insb
cwtl
mov
mov
jbe
test
loopne
mov
movsb
xchg
sarb
lods
or
ficompl
xchg
inc
xchg
mov
ret
lahf
test
add
inc
xlat
dec
sub
das
inc
mov
xchg
and
call
rcrb
mov
and
ss
popf
sub
pop
adc
xor
xchg
jmp
ljmp
imul
mov
dec
push
bnd
mov
jmp
div
jae
cmpsl
inc
mov
push
das
pop
push
das
dec
adc
push
xor
repz
xchg
daa
lahf
mov
popf
adc
xor
insl
frstor
mov
out
mov
add
pop
jbe
and
push
ret
or
repnz
stc
je
addl
cmc
pop
mov
call
lock
insl
rcr
jno
adc
pushf
adcl
xor
and
inc
push
cmpsl
pop
std
jbe
cmp
loope
dec
mov
jp
inc
push
or
mov
repz
stos
push
scas
sbb
xchg
ljmp
lahf
mov
xor
pop
out
cmp
lret
mov
jne
out
pop
test
cmp
enter
xchg
and
pop
pop
jle
pop
xor
sbb
sub
ror
mov
fldt
sub
in
lret
inc
in
xor
popa
loope
outsl
lret
add
or
jp
cmc
adc
mov
and
imul
sbb
out
clc
dec
xchg
das
jp
bound
pop
inc
stc
stos
insl
mov
cld
jmp
cltd
pop
add
push
dec
pop
insb
xchg
subl
loopne
push
mov
movsb
cmp
shll
neg
and
xchg
pop
jmp
push
imul
lds
in
mov
dec
test
mov
stc
jecxz
ss
lcall
push
popf
push
sarl
mov
pop
clc
sub
sbbb
add
add
push
mov
jmp
add
and
mov
out
out
ja
fcomps
fcmovb
sbb
movsl
mov
ret
mov
sbbl
stos
cli
sub
loope
cltd
jge
les
push
je
lret
into
hlt
scas
sar
mov
jno
out
inc
inc
sbb
adc
sbb
push
fiaddl
adc
mov
push
les
ffreep
push
lods
xlat
scas
std
out
inc
push
sbb
mov
mov
sti
sahf
pop
pop
rorl
stc
shl
push
test
pop
mov
jle
js
jp
dec
jns
xchg
sbb
and
in
jl
test
lahf
icebp
mov
addr16
decl
pop
shr
mov
push
xor
add
orb
int3
insb
and
sbb
dec
lods
dec
mov
out
lock
jmp
and
outsb
jnp
mov
xorb
jg
pushf
iret
mov
jecxz
and
das
and
gs
adc
ret
adc
fcoml
iret
enter
orl
out
insb
pop
push
mov
fwait
cld
sbb
push
xchg
mov
xor
xor
lahf
popf
cld
iret
jp
inc
inc
frstor
mov
push
jmp
popa
add
das
sbb
and
cli
dec
inc
inc
in
push
out
jae
js
mov
popf
mov
or
inc
mov
out
xor
imulb
and
mov
ja
movsl
push
sahf
adc
daa
call
lret
sbb
pop
js
in
into
sbb
imul
dec
push
leave
inc
mov
hlt
imul
jmp
repz
pop
mov
inc
xchg
sub
jp
sub
dec
dec
inc
sbb
nop
cmpsb
int3
mov
sub
rorl
js
fwait
adc
xor
popa
cmpsb
sbb
jbe
std
xchg
pop
add
rcll
or
hlt
sbb
push
test
pushf
xor
inc
ljmp
or
pop
adc
add
sbb
push
and
and
sbb
pop
pop
lret
and
das
aad
imul
xchg
lahf
adc
popf
arpl
push
jns
test
ljmp
loope
out
mov
in
push
negl
sub
lea
mov
std
adc
pop
jne
loopne
xor
out
xorb
add
push
imul
mov
repz
mov
and
and
ja
popf
xchg
movsb
in
cmp
xor
test
test
popa
dec
adc
notb
sahf
dec
mov
lods
mov
push
xchg
dec
repnz
inc
xchg
and
mov
adc
adc
arpl
sti
jb
shrl
jle
cmpsl
adc
xor
arpl
test
fsubr
pop
or
scas
pusha
fwait
lock
adc
ss
sbb
divl
sbb
lock
nop
aas
loop
xchg
sub
add
aaa
jno
imull
insb
popa
aad
or
xchg
xchg
loope
ja
mov
in
sbb
jp
arpl
jg
xorl
mov
xchg
sti
mov
cmp
mov
jle
test
int
pop
cltd
addr16
dec
dec
cmpsb
leave
push
pushf
sub
arpl
sub
mov
xor
mov
inc
orb
int
cmpsb
dec
outsb
out
rorb
xor
inc
sbb
mov
xchg
out
lock
data16
test
inc
jecxz
jnp
and
push
or
es
sbb
jae
stos
insl
scas
jecxz
mov
push
mov
xchg
popfw
lea
cmpsb
or
outsl
lahf
je
and
nop
mov
setne
insb
mov
jbe
mov
lods
call
imul
out
pop
sbb
xor
dec
fildl
mov
xchg
pop
push
sbb
pop
shr
sbb
sbb
pop
xchg
jmp
outsb
faddl
and
test
ss
testl
jne
fsubrp
push
mov
repz
js
mov
bound
jge
jmp
inc
mov
push
fs
pop
sub
hlt
into
mov
sbb
bound
fdivrl
daa
enter
mov
fsts
js
sbb
cmp
xor
hlt
cmp
add
into
ficompl
arpl
js
orb
ljmp
mov
jge
jl
fsubr
mov
or
and
add
mov
outsb
mov
ret
out
stc
mov
dec
movsb
inc
and
in
pop
rcrb
or
and
push
xor
enter
cmpsl
test
mov
xor
ja
lret
xor
sbb
outsb
lock
adc
jno
jmp
dec
inc
inc
mov
mov
cmc
stc
in
pushl
insb
je
lret
std
mov
sub
cmp
lea
xchg
cmpsl
fwait
adc
mov
xor
push
pop
jbe
mov
stos
adcl
inc
filds
jns
or
jno
cmpsl
lret
fwait
mov
pop
pushf
je
iret
scas
sbbb
clc
mov
fmulp
data16
ljmp
lret
addr16
adc
cld
xchg
pop
push
xor
pop
mov
hlt
mov
xchg
pop
popa
cld
call
stos
sub
dec
cmp
ja
aad
adc
scas
xchg
adc
outsl
push
dec
mov
dec
push
out
push
call
dec
jo
pop
sbb
mov
gs
movsl
pop
xchg
loop
jb
js
jae
jg
daa
pop
call
jb
mov
mov
xor
mov
stos
mov
mov
pop
call
jno
fmuls
rorl
scas
repz
mov
dec
lea
in
push
inc
ja
ja
jnp
testl
jg
fs
in
pop
addr16
subl
add
lret
adc
inc
jae
jae
rolb
inc
and
cld
inc
das
shrb
cmpsl
nop
test
push
pop
subb
add
movswl
mov
jmp
shl
and
push
daa
add
jmp
pusha
mov
xchg
jmp
sbb
pop
add
or
mul
or
xchg
jbe
sub
pop
pop
add
xor
sbb
inc
sbb
and
and
sub
pop
out
xor
mov
adc
imul
addr16
movsb
mov
cmp
fidivrl
sub
jle,pt
movsb
sbb
xchg
scas
shlb
flds
fimull
addr16
call
inc
lock
hlt
call
out
bound
pop
and
daa
jno
mov
mov
fwait
addl
in
imul
cmp
inc
mov
xchg
inc
dec
sti
ret
push
subl
xor
dec
lcall
rcll
scas
push
xchg
xor
popf
xchg
out
mov
mov
fnsave
push
outsb
out
xchg
jle
sub
arpl
mov
mov
pop
lret
push
movsl
sahf
rol
cld
or
xor
fdivrs
fwait
std
push
cmp
scas
dec
cs
mov
cld
fidivrs
pusha
int3
in
mov
decb
out
jl
sarl
mov
jmp
cli
test
fnsetpm(287
mov
int3
mov
and
in
jns
adc
sbbb
cltd
inc
pop
push
cs
aam
xor
sbb
jo
fcmovbe
div
stc
gs
cld
add
jnp
movsl
adc
mov
fisttpl
sbb
enter
dec
andl
xchg
push
fcmovb
outsl
sti
and
ret
mov
loopne
push
xlat
mov
cmp
test
xchg
and
dec
mov
inc
sbb
pop
repz
ficoml
add
inc
mov
outsl
ss
add
adc
mov
pop
lcall
mov
sbb
pusha
pop
shl
fcmove
dec
insl
sbb
pop
lods
repz
xchg
imul
mov
scas
idivb
or
test
push
outsb
mov
lret
icebp
lds
or
sub
out
aaa
dec
fbstp
sub
xchg
add
pusha
push
jge
in
pop
xlat
xchg
adc
mov
gs
sub
jo
or
pop
push
hlt
shrb
jb
cld
inc
push
or
jp
int3
fcmovu
mov
sbb
repnz
sub
gs
hlt
add
push
mov
jne
pop
rol
inc
inc
test
cld
add
pop
sarb
push
cmc
out
cmp
mov
mov
add
outsb
jl
xchg
sbb
rcrl
sub
cmc
push
frstor
jmp
pushf
lea
mov
jb
pop
sub
dec
rol
shr
mov
mov
mov
insb
sub
push
add
loopne
push
sbbl
dec
mov
jne
push
cmovb
aaa
daa
dec
jg
inc
dec
aad
cmp
sahf
mov
das
call
movsb
xchg
and
or
push
out
out
and
shrl
inc
push
lods
and
or
xor
push
cmpsl
mov
loopne
sub
push
repnz
rclb
out
out
sub
lahf
and
adc
enter
add
dec
jno
add
lret
shll
sbb
mov
iret
jb
dec
subb
jge
ss
stc
jle
in
stos
out
movsb
sbbl
call
mov
sub
sti
addr16
hlt
pop
cwtl
andb
jns
daa
ljmp
xchg
movb
dec
dec
dec
sbb
fsubs
pop
sbb
clc
adcl
push
pop
fimuls
jl
setp
ret
adc
jmp
lret
aam
sub
test
jp
int3
mov
test
sub
std
orl
mov
stos
inc
das
rorb
jg
dec
pop
add
subl
mov
in
outsb
call
daa
push
inc
mov
mov
cmpsl
mov
les
mov
js
aaa
push
inc
sbb
mov
sub
idivb
or
pop
aad
rolb
imul
cmp
pop
test
int
jns
pop
cmp
orl
sub
inc
addb
sbb
mov
jmp
stos
push
sbb
inc
dec
scas
cmp
and
mov
arpl
cmp
or
mov
xchg
sbb
adc
mov
push
inc
in
mov
call
daa
nop
inc
in
xor
insl
dec
mov
stc
xlat
mov
mov
nop
daa
mov
fcmovnbe
pusha
or
push
jl
mov
xor
adc
sbb
cmp
call
sbb
push
inc
push
push
xchg
je
dec
imull
inc
sti
push
pushf
insl
jns
mov
pop
sub
sub
dec
mov
pusha
in
mov
push
xchg
adc
xor
mov
mov
xor
mov
xchg
sbb
push
mov
xchg
cltd
sbb
test
popf
in
mov
or
mov
inc
loopne
mov
adc
adc
aad
add
cmpsb
std
xchg
fcomps
pop
cmc
fimull
jle
fwait
inc
xchg
dec
mov
inc
jg
daa
sub
jmp
fdivp
mov
out
xor
pop
mov
in
fwait
arpl
add
jmp
out
ret
call
outsb
mov
mov
aad
lea
lea
stc
sub
adc
test
repnz
sahf
inc
xchg
cwtl
ljmp
mov
adc
sbb
dec
xor
out
jns
mov
add
jmp
pop
inc
push
sub
stos
stc
cmp
addr16
adc
mov
fcmovnbe
test
cmp
mov
mulb
mov
test
sub
icebp
mov
je
daa
shll
xchg
popf
dec
sbbl
jo
outsl
out
jae
int
jmp
jns
orb
jne
into
sarl
popa
dec
outsb
mov
xchg
addl
push
fmul
js
pop
pop
lret
or
shll
xchg
xchg
cld
sub
rorb
fwait
outsb
sub
imul
inc
add
cld
push
jbe
sar
add
mov
sbb
icebp
test
and
repz
int3
js
imul
dec
inc
daa
jl
add
clc
outsl
mov
push
fcmovnb
dec
jno
pushf
mov
cmpl
adc
aad
push
adc
popf
test
iret
addl
sarb
pushf
pushl
ret
les
xor
aaa
test
mov
pop
popf
es
pop
fldcw
std
clc
lds
mov
cld
into
es
std
shll
inc
lds
jmp
fwait
cltd
aad
loope
das
sub
cmp
out
inc
xor
mov
out
shlb
push
outsb
sub
fcompl
ja
ljmp
or
pop
xor
dec
pop
lret
lret
xor
cmc
jb
sbb
fidivl
in
inc
jae
adc
jno
aas
xor
mov
lods
jge
adc
and
xor
and
xor
add
push
inc
sub
push
mov
jecxz
push
popf
fsts
sahf
test
aam
rolb
add
test
lcall
xchg
pop
js
jno
cmp
mov
scas
xchg
push
cmc
leave
sub
je
mov
pop
ljmp
sub
adc
jbe
push
sbb
push
push
add
into
call
js
mov
outsl
sbb
icebp
mov
out
lods
or
jp
adc
roll
addr16
lock
cld
inc
inc
cs
in
test
not
das
sbb
icebp
and
xlat
inc
fdivrp
jg
ficoms
andl
jbe
mov
sbbl
daa
jge
dec
xchg
fstp
mov
pop
lcall
jns
xor
lods
adc
shrl
cmc
cmp
int3
addr16
nop
clc
dec
xlat
repnz
mov
cli
mov
push
sahf
idivl
jp
dec
ss
adc
fdivrs
out
roll
stc
in
ret
or
in
test
inc
xchg
jne
shlb
inc
or
imull
jl
jne
fcomp
imul
jle
jle
sbb
jmp
dec
shll
mov
inc
mov
imulb
jecxz
clc
cmpb
and
cmpsl
dec
dec
mov
dec
cli
out
mov
testb
cmpsl
subb
jge
enter
xor
push
les
aaa
dec
jae
std
xchg
rcrb
arpl
xlat
xor
dec
lods
jb
push
fistl
mov
cs
imul
outsb
cmp
and
push
sub
shrb
scas
movsl
test
outsl
test
jo
pop
adc
out
lea
sbb
cmpsl
cmpsl
ss
lds
mov
in
and
jnp
add
jbe
mov
sub
mov
ss
push
stc
dec
dec
hlt
adc
pop
cmp
lret
out
push
adc
mov
inc
add
pusha
imul
outsb
scas
in
xor
xlat
outsb
popf
scas
jb
dec
mov
dec
frstor
mull
movsl
lahf
repnz
adc
jecxz
pop
cli
and
mov
pop
mov
shlb
or
lock
mov
pop
add
das
push
iret
pop
dec
loopne
fildl
xor
mov
orb
lds
stos
inc
mov
push
inc
dec
push
mov
fsts
xchg
xchg
sbb
sub
and
adcl
lea
mov
ja
xchg
mov
dec
dec
test
xchg
lock
outsl
scas
lds
and
xchg
push
mov
xchg
test
xor
push
mov
stos
inc
outsl
sti
jg
mov
jnp
pop
push
popa
adc
xlat
mov
shlb
clts
dec
jecxz
lahf
mov
add
dec
dec
test
ret
rclb
in
jae
cli
mov
in
in
add
icebp
mov
inc
stc
mov
adcl
lods
cmpsb
push
push
std
lret
lods
dec
sub
testb
fnstcw
sub
cmpsl
cmp
jl
repnz
fldenv
push
sbb
scas
jne
push
dec
loope
aam
pop
xor
xor
andl
jnp
sbb
adc
popa
mov
sbb
mov
add
push
dec
jbe
mov
enter
lds
pop
ljmp
test
test
out
cltd
mov
lcall
popf
repz
or
sbb
jmp
pop
into
sub
xlat
aad
icebp
fsts
and
pop
jl
stc
out
mov
aaa
xchg
fwait
dec
jg
inc
aam
cltd
jmp
inc
lret
jp
sub
mov
cmp
dec
mov
jo
push
mov
sub
ds
dec
imul
dec
adc
xchg
aas
insl
inc
aam
mov
ret
in
pop
call
movsl
jge
pop
push
mov
sbb
sub
xor
or
sahf
lock
popa
cmpsl
dec
in
inc
test
cmpb
sbb
adc
inc
or
sub
mov
push
dec
int3
cld
fildl
xor
sub
push
push
cmpsb
mov
fisubl
or
test
aas
xchg
repz
stos
es
lcall
jg
andb
cmp
and
and
std
data16
xor
sbb
cmp
xchg
daa
inc
xor
adc
push
xchg
shrb
icebp
mov
jae
shll
fwait
enter
mov
push
push
sarb
lret
push
nop
pop
fwait
mov
into
mov
insb
dec
out
mov
lock
pop
xchg
and
lods
scas
dec
sahf
push
mov
or
lods
and
mov
xchg
repnz
push
inc
daa
cmc
dec
mov
push
iret
or
xchg
int3
inc
ss
repz
inc
push
fiaddl
sub
inc
shrl
cmp
lret
add
push
xor
or
cmp
sbb
xchg
mov
adc
dec
add
push
mov
sti
inc
inc
subl
les
sarl
jnp
push
inc
sub
test
pop
mov
test
cmp
jp
xchg
jp
push
dec
cmpsl
mov
stos
jbe
out
roll
call
mov
mov
push
add
sti
mov
mov
hlt
xchg
fwait
cmp
jno
pop
stos
push
xor
fisubl
jle
shlb
jb
cli
stc
les
ljmp
ret
xchg
mov
stos
add
ret
cld
mov
push
pop
xchg
add
test
sub
jmp
inc
jns
mov
pop
mov
xchg
loopne
jecxz
fiadds
adc
and
dec
xor
xorl
or
add
mov
stc
enter
lcall
inc
ret
mov
mov
inc
sub
mov
pop
cmp
sbb
test
jnp
adc
mov
xor
push
out
cli
mov
cltd
jb
sbb
mov
adc
orb
xor
ja
stc
or
mov
and
int3
adc
arpl
adc
push
lret
ficoml
lcall
push
add
scas
imul
mov
int3
dec
inc
cmp
sarl
enter
movsl
mov
aam
or
pop
lea
lcall
inc
mov
inc
xor
add
popf
mov
mov
out
and
cltd
iret
xor
test
mov
out
test
push
mov
adc
fildll
mov
push
int3
insl
xchg
aad
cwtl
adc
or
in
int
add
cmc
xor
negb
and
or
or
testb
fmull
lahf
dec
add
xchg
clc
xchg
hlt
pop
xor
adc
push
shlb
fs
push
nop
lds
neg
int
andl
aaa
cltd
lods
jb
adcl
and
jae
clc
insb
lock
adc
pop
mov
mov
test
mov
xchg
iret
add
sbb
out
insb
and
xchg
loopne
sti
or
xor
xchg
inc
lds
pop
rcl
shrl
jbe
andb
mov
mov
sub
adcl
adc
repnz
xchg
adc
cmp
das
mov
adc
lods
cmp
jne
adc
std
and
mov
push
xlat
stos
xchg
inc
cld
add
cwtl
mov
mov
aam
aad
xor
leave
bound
or
adc
pop
das
fldenv
xchg
es
mov
mov
add
xchg
add
mov
cmp
push
ret
js
test
mov
into
test
into
insb
leave
cmpsl
add
shrl
xchg
sahf
jbe
iret
push
ljmp
adc
sub
in
dec
aaa
fs
dec
out
pop
add
sub
lods
jb
shr
cwtl
sbb
xor
out
mov
adc
jmp
movb
cmp
dec
jns
in
xor
mov
das
mov
bound
adc
mov
test
sub
mov
addl
outsb
mov
adc
test
sbb
notl
jo
xchg
stc
rcrb
adc
or
daa
adc
pcmpgtd
scas
jae
jne
mov
ljmp
xchg
mov
xchg
mov
inc
cs
lock
cmp
mov
icebp
or
push
mov
clc
iret
lret
insb
pusha
inc
fs
cltd
lods
mov
mov
push
vpcmpeqw
out
and
je
add
adc
sbb
jne
iret
cltd
dec
mov
js
mov
xchg
repz
in
mov
aad
sub
or
cmp
inc
mov
mov
je
and
sub
jnp
push
repz
mov
mov
sbb
test
stos
cmp
dec
lcall
xchg
and
in
mov
cmpsb
push
mov
adc
xchg
in
out
xchg
jg
imul
shll
testl
fistl
push
xor
ss
addr16
imul
pop
mulps
jnp
loop
xchg
cmp
nop
loope
mov
into
jl
sbb
stc
movsl
scas
jg
add
iret
and
loopne
pop
fstpl
lret
dec
loope
sti
jbe
mov
ret
dec
pusha
lahf
in
test
in
xchg
add
je
mov
stos
xor
ds
pushf
stos
push
fidivs
push
das
xchg
xor
imul
sub
pop
scas
je
adc
movsl
fstpl
fldenv
pop
movsl
jmp
scas
jp
and
jae
aam
pop
sbb
arpl
pop
sub
or
rclb
jo
movsb
add
fisttpl
mov
testl
mov
mov
lods
out
adc
sbb
mov
dec
ror
ljmp
repnz
mov
mov
lea
inc
push
push
fistps
cld
sbb
lret
inc
cmc
adc
mov
lcall
cmc
add
stc
fcomps
or
fcmovnu
pop
xchg
xor
or
shrl
fidivl
lret
pop
test
and
inc
test
mov
insl
sbb
out
xchg
mov
stos
xlat
push
inc
sahf
push
cwtl
int
adc
sbb
cli
push
or
cmp
fs
dec
mov
je
ficomps
mov
inc
lahf
cmc
test
rolb
mov
or
mov
outsb
bound
movsb
js
pop
fldl
add
xchg
aas
cli
jbe
pop
out
xchg
popa
test
add
pop
mov
mov
sbb
subb
pop
adc
cwtl
out
add
xor
outsl
mov
lods
jmp
xchg
push
arpl
stc
imul
subl
adc
rcll
test
sub
daa
dec
ljmp
aam
or
subl
test
jnp
std
adc
clc
xor
xchg
adc
pop
imul
aas
cmc
popa
jle
stc
cmp
jbe
xor
sarl
inc
xchg
xchg
push
jmp
and
mov
xchg
test
or
mov
sbb
pop
aas
xor
push
cmp
shl
sbb
fsubrl
fmuls
pushf
lods
adc
fimuls
xchg
or
xchg
pop
shrb
lods
loop
inc
jecxz
mov
ror
fstps
pusha
mov
scas
and
stos
sbb
push
idivl
push
inc
mov
imul
out
addl
aam
push
mov
sbb
shll
sub
je
inc
ss
jb
xor
add
cli
mov
xor
rcr
daa
mov
ljmp
das
fs
mov
cmpsb
adc
shr
sub
jmp
daa
sub
int
lock
sub
shll
mov
stos
adc
ss
test
push
enter
fildl
cmp
test
inc
dec
ret
push
or
lods
xchg
repz
movsl
scas
aas
sahf
pop
mov
mov
push
push
mov
sbb
out
adc
adcb
jne
daa
mov
cmc
push
pop
inc
inc
or
mov
add
fildll
movsl
leave
mov
insb
sarl
mov
jb
jge
mov
popa
in
pop
sbb
mov
fsubrp
lods
dec
mov
mov
imul
sbb
jns
mov
rcll
cld
mov
out
xchg
test
jle
lods
and
cmp
scas
xchg
mov
and
int
adc
data16
sub
outsb
jecxz
push
clc
aaa
rorb
adc
ja
fstl
jns
mov
push
push
pop
imul
movsl
push
test
outsb
test
out
in
js
adc
out
jbe
lahf
add
dec
jge
sub
rcrl
daa
and
or
or
add
inc
imul
cwtl
cmc
sub
add
int3
insb
mov
test
adc
imulb
dec
mov
jo
outsl
stc
jg
sbb
jg
pop
outsb
xchg
jl
add
stc
sahf
or
lods
jb
shl
orb
ret
outsl
cli
pop
sbb
call
jmp
pop
adc
adc
int3
fmull
mov
jbe
mov
movsb
mov
test
jo
movb
or
in
je
cmpsl
and
jg
popf
out
loopne
loop
jmp
or
cmc
lods
stos
mov
jo
push
or
fwait
mov
dec
icebp
mov
clc
mov
xor
call
int3
push
pop
int3
int3
pop
ljmp
test
hlt
lock
mov
and
add
leave
add
mov
push
test
pushf
gs
sub
daa
loop
jne
jnp
in
add
mov
xor
cld
mov
fisttps
cli
outsb
repnz
rol
aaa
call
cltd
push
dec
repz
jnp
js
insl
addr16
mov
mov
fistpl
int
repz
int3
imul
stos
ljmp
shlb
ret
pusha
cmc
xchg
popl
xchg
sbb
ficoms
lahf
jl
mov
gs
pop
or
pop
mov
inc
ret
and
push
shr
fiadds
pop
sbb
adc
inc
mov
imul
stc
add
addr16
imul
lods
cs
mov
sarl
shlb
jmp
jmp
daa
outsl
nop
jns
jl
ficoms
adc
dec
lock
jecxz
cmpsl
scas
mov
fs
pop
das
push
hlt
stos
and
mov
out
imul
push
add
dec
jno
push
idivb
pusha
int
mov
sahf
clc
test
xchg
in
stc
mov
jp
mov
je
rorb
js
add
jns
adc
mov
sub
adc
pop
inc
pop
push
lods
jle
call
mov
fcmovnu
orl
jge
dec
imulb
inc
mov
sahf
adc
insb
test
bound
stc
jmp
in
push
mov
xor
mov
negl
jbe
pop
mov
add
xchg
fnstcw
aas
repnz
adc
xchg
insl
out
sbb
jae
pop
push
inc
sbb
jecxz
lahf
pushf
pop
fneni(8087
jmp
xchg
aam
jl
clc
lods
data16
jno
push
scas
mov
ds
test
mov
sarb
xor
pop
adc
pop
mov
cmp
js
es
imul
ret
push
out
mov
xchg
pop
mov
push
push
xchg
or
insb
iret
xor
clc
pop
sti
popa
lret
jg
mov
pop
xor
hlt
xchg
pushf
data16
jno
adc
jnp
mov
roll
push
pop
nop
jns
inc
jne
shll
scas
push
pop
pusha
stos
mov
dec
outsl
mov
dec
mov
imul
test
push
fstpl
jecxz
aam
mov
movsb
cltd
and
sub
and
ficoms
dec
out
out
fdivr
imul
mov
sub
hlt
cmp
push
popf
dec
mov
popa
es
aaa
jg
mov
mov
mov
xchg
stos
pop
scas
rcrl
loope
inc
xor
repnz
pop
lahf
push
mov
mov
inc
sub
add
or
pop
mov
cmp
inc
out
jp
out
cltd
xchg
dec
pusha
sub
xor
cmp
mov
jecxz
sbb
or
inc
test
div
push
shll
test
mov
mov
mov
sub
mov
xor
int
test
aad
sub
add
cltd
adcb
aas
das
ds
std
xchg
xchg
pop
push
mov
fistpll
sbb
mov
cmpsb
enter
iret
jbe
out
out
mov
pop
loopne
xor
sbb
xorb
cmp
pop
call
sbb
neg
xchg
popa
pusha
sbb
andb
inc
in
cmc
loop
cmpsb
xchg
sti
adc
pop
jle
je
dec
cwtl
fcmove
mov
mov
scas
or
sub
sti
adc
mov
fwait
and
hlt
jne
and
jne
arpl
mov
test
mov
je
pop
sti
mov
test
loope
ret
dec
test
les
std
nop
cmc
and
aas
pop
xchg
stos
push
inc
xchg
insb
stc
lock
movsb
sub
and
fmull
int
push
jg
hlt
stos
cmpsl
imul
sti
and
sub
fwait
addr16
pushf
cmc
aad
in
dec
jl
pop
call
int3
mov
adc
and
pop
jo
insb
or
sbb
mov
fimuls
inc
jns
nop
dec
in
sbb
xor
sub
xchg
flds
stc
or
sub
mov
jge
cmp
dec
ljmp
push
adc
jo
pop
ret
mov
fists
insb
into
cmp
lahf
aad
add
imul
shr
sarl
dec
out
icebp
outsl
xchg
les
cmp
hlt
add
lock
mov
push
or
jp
xchg
and
sub
stos
and
lcall
inc
outsl
inc
sub
pop
insb
enter
aas
xor
xor
mov
xor
or
divb
add
mov
in
dec
mov
insl
dec
in
adc
fnstcw
inc
inc
or
mov
inc
mov
mov
jbe
xchg
ss
arpl
scas
jmp
gs
xchg
daa
xchg
sub
jbe
add
movsl
mov
icebp
push
bound
nop
cltd
cmp
mov
adc
and
and
fiaddl
inc
pop
dec
dec
xor
ljmp
cmp
dec
adc
orl
jmp
fists
loopne
outsl
inc
mov
in
dec
sahf
lock
sahf
push
sahf
fsubl
pop
sub
xchg
icebp
mov
lds
add
divb
sahf
and
js
add
movsl
jnp
cmp
or
push
xchg
push
sub
mov
sbb
adc
sub
lea
pop
sub
adc
add
pop
xchg
sub
loop
pusha
cmp
movb
in
pop
cmpsb
sbb
sub
add
xchg
jmp
mov
sub
clc
mov
push
jl
pop
add
jae
in
orb
xchg
repnz
out
rol
xor
sbb
fisttpl
mov
fisttpll
gs
mov
mov
add
out
mov
cmpsl
dec
dec
jmp
push
es
jl
fcoml
in
push
push
in
ret
and
mov
imul
scas
cwtl
and
movsb
lods
aad
loop
xor
pop
lret
sub
addb
push
xlat
call
fwait
imul
enter
shlb
dec
outsl
jns
adc
aas
data16
inc
outsl
or
jl
scas
repz
dec
mov
outsl
pop
or
mul
imul
std
loopne
jge
rcl
push
pop
scas
and
xchg
test
push
and
jb
jae
sahf
sbb
pop
and
in
push
mov
pop
and
pop
or
inc
xchg
lods
mov
sti
mov
sub
mov
lods
cmp
jo
inc
sbb
sbb
push
inc
mov
sti
inc
outsl
inc
mov
jge
int
test
mov
aam
pop
add
sahf
enter
lock
dec
leave
dec
mov
ret
cmp
sbb
std
ljmp
push
jecxz
ljmp
cmp
lahf
enter
pop
xor
or
cmpsb
or
movsl
push
mov
push
lods
and
fs
lods
adc
pop
and
sbb
cmp
shlb
rdpmc
lcall
mov
adc
inc
es
mov
inc
xchg
lds
adc
nop
jp
pushf
stos
loope
icebp
call
rcpps
push
jae
cmpsb
mov
out
and
dec
into
int3
push
push
in
gs
mov
adc
xchg
sub
push
adc
ja
in
xchg
inc
push
cs
mov
mov
movsb
push
pop
inc
xchg
hlt
add
or
jbe
mov
ds
pop
in
loope
lods
es
mov
hlt
sahf
das
test
or
rep
or
out
sahf
out
push
fistl
ret
xchg
or
js
pop
push
shll
popl
out
inc
cmp
punpckhwd
shl
jl
cltd
fcompp
pop
ljmp
xchg
push
movl
imul
lods
add
test
dec
or
ds
aad
xlat
enter
lahf
das
arpl
jo
gs
pop
xlat
mov
fwait
mov
inc
sbb
xchg
add
fmul
dec
pop
push
push
stos
jmp
inc
loopne
mov
clc
mov
jns
js
leave
adc
or
and
mov
cmp
stc
ljmp
cmp
mov
push
sbb
cmc
xchg
jp
push
xchg
ljmp
mov
cmp
cmpsl
adc
xor
daa
cwtl
push
iret
movsb
push
int3
adc
pop
push
lea
adc
dec
jbe
or
jae
das
pushf
and
pop
pop
andb
jns
mov
fsin
loope
push
lods
subl
sub
stos
dec
xor
jne
stos
push
adc
sub
pop
insl
xchg
int3
loope
cltd
es
mov
inc
mov
sbb
lret
sbb
jmp
and
enter
jg
daa
ror
jp
push
pushf
in
cmp
scas
scas
xor
and
test
push
jg
adc
and
or
jb
cmp
or
movsb
test
jae
stos
aas
js
arpl
cmp
pop
jl
xchg
clc
sbb
ret
rol
or
jae
push
or
mov
iret
sub
pushf
push
adc
adc
or
sahf
data16
fbstp
enter
sbb
in
adc
mov
mov
aaa
insb
mov
es
xor
xor
out
cmpsl
sti
pop
popa
push
in
and
into
xchg
insb
addr16
lret
repnz
pop
cs
jmp
insl
popf
sub
in
getsec
push
xor
nop
mov
lahf
mov
and
dec
mov
xchg
cmp
les
cli
sbb
xchg
jp
or
jp
or
mov
cmp
cli
inc
mov
arpl
testb
in
lods
push
and
notl
cltd
loop
adc
inc
adc
pop
dec
or
mov
mov
sti
cmp
xchg
int3
jb
in
enter
rcl
push
lock
lock
pop
lea
jns
dec
pop
push
iret
dec
scas
mov
clc
nop
xor
jl
mov
push
data16
cmp
repz
adc
xor
imul
fdivr
pop
decb
lods
call
adc
or
add
sahf
dec
call
or
repnz
fstpl
mov
stc
cmp
push
xor
jne
loopne
in
cmp
and
les
lods
mov
xchg
js
and
adc
mulb
jg
jae
insb
pop
rcl
pop
pop
decl
mov
cmp
sub
and
fidivl
clc
dec
push
dec
addr16
es
and
ljmp
xchg
mov
dec
out
imul
pop
imul
rorl
dec
or
lds
or
inc
push
jge
pop
out
lods
negl
jmp
pop
lods
dec
fs
outsb
lock
fcmovnb
mov
push
mov
add
jae
notb
std
mov
sub
aam
daa
sub
dec
cmpsb
push
pop
sub
arpl
and
inc
xlat
or
sahf
push
fsubl
hlt
add
mov
pop
inc
insb
inc
cmp
push
jle
sbb
push
test
adc
pop
mov
sahf
add
daa
cmp
mov
mov
dec
push
mov
pusha
dec
lcall
pop
subl
inc
daa
add
outsl
lcall
dec
movl
stos
jp
mov
inc
jp
add
or
push
repz
or
dec
mov
pcmpeqd
scas
jle
idivb
test
xorl
repz
dec
es
push
incb
cmp
ret
jns
xchg
fs
or
push
les
mov
fucomip
inc
push
jnp
xchg
mov
pushl
shlb
or
xor
in
sub
jae
fcoml
adc
push
add
pop
or
push
daa
jno
add
mov
adc
cmp
sub
and
inc
sbb
std
and
push
and
sbb
dec
andl
cmp
enter
or
mul
mov
arpl
loopne
jnp
rcrb
ss
ret
xor
mov
call
mov
fimuls
jb
hlt
xchg
ljmp
sub
sbb
ss
jmp
or
jno
ja
jmp
inc
call
push
adc
mov
dec
pop
es
lock
or
lcall
jne
push
xchg
sbb
fdivs
pusha
dec
push
dec
and
xchg
loopne
sbb
enter
cmp
aas
insl
in
lock
inc
scas
in
dec
xlat
jmp
test
ret
xor
rol
sbb
ljmp
aad
mov
sahf
jo
fsts
ds
mov
jge
xor
je
xchg
adc
xchg
lea
rorb
push
test
mov
push
or
incl
sub
xor
into
xchg
jl
ds
fcomps
dec
popf
cld
cmp
mov
psrlq
lret
mov
insl
inc
mov
je
xlat
mov
dec
pushf
in
sbb
sbb
dec
lea
jns
repz
movsl
and
dec
dec
les
inc
ljmp
ss
test
outsl
lods
adc
les
popf
jecxz
mov
push
add
xlat
out
add
jge
lret
repnz
cmp
xchg
in
cld
mov
xor
jp
adc
into
mov
out
adc
imul
hlt
fbld
push
mov
movsb
mov
cmpsl
popf
out
push
add
fsts
and
adc
push
fmuls
or
movsb
jno
lcall
push
dec
push
sbb
imul
testw
test
mov
push
inc
cmpsl
testb
ds
stos
dec
inc
call
push
dec
mov
jbe
daa
push
lea
push
cmp
lret
pop
iret
rcl
mov
fstl
and
dec
mov
add
or
push
in
nop
fadds
add
dec
fists
movsb
dec
pop
leavew
mov
jbe
scas
in
in
inc
push
mov
and
fs
sbb
dec
sbb
rclb
aaa
pop
rcrb
mov
das
mov
aam
push
sbb
cmp
stos
addr16
inc
jg
ss
popa
jno
mov
mov
cmpsl
jg
or
repnz
stc
test
arpl
imul
or
lods
pop
mov
xor
aam
js
loope
out
mov
addb
push
mov
out
jle
jnp
xor
push
les
je,pn
das
lods
mov
and
and
and
jge
sbb
lock
jno
mov
addb
mov
mov
testl
or
mov
into
pop
add
xchg
pushl
dec
jnp
daa
mov
int3
ss
iret
mov
sub
imull
mov
jo
mov
aaa
mov
pushf
push
outsb
jmp
push
inc
dec
loop
push
mov
mov
mov
add
js
pop
fwait
je
cld
adc
fwait
test
cs
or
ljmp
ljmp
insl
adc
dec
cmp
andb
and
mov
add
fnstsw
mov
sub
cli
or
pop
sbb
ret
dec
sub
mov
dec
push
dec
cmp
mov
pop
push
or
in
test
push
xchg
sbb
jnp
leave
lods
test
stos
and
fmuls
mov
and
push
sub
mov
xor
test
ficompl
nop
xor
imul
xchg
pop
outsb
sahf
iret
jecxz
jl
xor
nop
orb
add
call
ja
lret
sub
mov
mov
orl
cmp
xchg
dec
dec
pop
ret
pop
inc
cmp
xchg
testl
stos
xor
cmp
icebp
or
test
jb
ss
lods
scas
or
mov
xorb
and
mov
push
aaa
mov
jne
push
fiadds
sbb
dec
push
mov
lock
push
mov
pop
inc
dec
xor
inc
movsl
push
mov
push
call
test
jae
xchg
icebp
or
adc
pop
lret
aaa
test
and
xor
repz
loope
insl
lds
fs
jl
imul
rcl
lahf
xor
lcall
dec
sbb
dec
add
or
out
mov
and
je
sbb
into
push
pop
rorb
inc
aaa
test
cmp
sub
cltd
sarb
hlt
adc
daa
xor
sub
pop
sbb
mov
scas
xor
stos
aaa
inc
int
aaa
jecxz
jle
ja
out
in
push
mov
sbb
dec
pop
mov
lahf
leave
jne
out
mov
jmp
xlat
mulb
mov
dec
jbe
lds
mov
cmp
dec
push
icebp
int
mov
or
xor
push
movsb
and
pusha
xor
pop
mov
int3
lods
ud2
insl
insl
repnz
cmp
jns
mov
iret
out
fdivrs
adc
sahf
es
fldl
in
sahf
sbb
sti
adc
sub
push
adc
mov
adc
fucomip
fs
test
jecxz
and
out
mov
xchg
stos
adc
outsl
add
cwtl
xor
xchg
enter
add
filds
testl
in
push
xor
lret
mov
jmp
mov
adc
jmp
lret
adc
test
adc
adc
movsl
pop
in
lods
popa
add
pushl
dec
mov
jp
rclb
hlt
scas
push
sbb
fucomip
mov
cmp
test
inc
xor
adc
push
divl
push
outsl
data16
dec
fldcw
adc
or
mov
fmull
sub
dec
ror
rcrl
nop
test
adc
jne
movb
addr16
cld
xor
fs
aas
popf
push
mov
lods
cld
sbb
rol
addl
mov
std
push
inc
mov
sti
dec
js
sub
pop
test
sub
sbb
inc
sar
push
add
jmp
lods
data16
sarb
pop
cmpsl
adc
pushl
std
cmp
loope
in
mov
adc
sub
mov
int
xchg
xchg
cmp
push
inc
out
cmpb
in
das
push
ljmp
jnp
mov
loopne
jecxz
xor
pop
sub
cmp
fxch
dec
je
notl
sub
adc
into
aam
rcrb
js
and
pop
and
inc
cmp
jbe
inc
inc
pushf
sbb
jb
mov
add
arpl
cmc
sbb
sub
div
popf
imul
shll
push
mov
ljmp
bnd
mov
sarl
andl
pop
test
sub
scas
add
inc
and
test
imul
mov
in
pop
into
or
pop
dec
es
mov
mov
fucomip
sub
ja
xchg
cli
insl
fs
int
popa
fistps
rclb
imul
popa
pushl
cld
push
mov
push
cs
sbb
push
ficomps
sbb
pop
xor
mov
push
push
in
jae
mov
push
out
adc
inc
int
shl
sbb
clc
push
jp
cwtl
push
dec
pop
inc
aaa
mov
mov
mov
or
xorb
or
sahf
jno
cs
xor
inc
xor
fisttps
dec
mov
cltd
dec
or
sbb
xor
test
inc
push
or
je
ret
pop
dec
out
adc
mov
test
fldenv
fnstenv
cwtl
inc
mov
gs
push
fadd
or
jne
inc
fnstsw
pushf
xchg
mov
cwtl
cmp
pop
inc
ror
jbe
ret
mov
jnp
push
push
mov
sbb
mov
push
int
pop
push
push
in
cmp
jge
inc
mov
cld
mov
cmp
dec
and
jmp
shll
push
xchg
xchg
pop
scas
in
fnsave
data16
push
xor
xchg
xor
sbb
xor
nop
scas
clc
jns
ja
cmp
mov
lret
cmp
mov
and
call
cmpsb
cmp
jnp
push
test
push
mulb
daa
enter
push
repnz
outsl
inc
pop
sbb
push
cmpsb
xor
notb
xor
pop
or
sub
aaa
imul
out
stos
sub
sbb
imul
mov
out
push
and
fwait
testb
addr16
negb
cld
sbb
shl
mov
mov
mov
loop
adcb
cmp
push
les
ja
and
movsl
and
data16
mov
sti
out
je
sub
lret
gs
jno
lahf
sub
outsl
ss
repnz
mov
sti
xor
adc
xchg
sarl
daa
ds
daa
aas
aad
fcom
out
adc
sbb
les
push
mov
and
mov
adc
dec
popa
inc
dec
setle
gs
cwtl
setno
out
or
popf
jo
repz
jmp
jl
lea
loope
les
cwtl
stos
push
pop
pop
addr16
jb
popf
test
mov
mov
sbb
jecxz
cmp
xchg
sahf
loopne
or
orb
aas
in
cmp
outsb
sub
scas
call
or
cmpsb
fistl
in
mov
das
push
lret
sub
mov
xchg
inc
loop
loope
pushf
sbb
pusha
popf
or
pop
push
data16
addr16
sarb
jmp
inc
hlt
repz
scas
scas
adc
cmpsl
cltd
mov
ss
icebp
xchg
sbb
dec
dec
inc
out
lahf
xchg
mov
pushf
shl
stos
push
enter
mov
mov
jno
fucomip
mov
popf
or
scas
mov
out
add
dec
jae
dec
cld
push
cmp
outsb
in
mov
jge
into
jb
outsl
jbe
add
aad
ret
lds
rcl
in
scas
mov
pop
mov
jb
stc
stos
imul
and
inc
jb
jb
add
inc
add
std
push
xlat
sarb
rcl
in
fwait
jmp
jnp
ficoml
push
push
fisubrs
pop
rol
adc
pusha
mov
gs
and
inc
cs
add
ret
xchg
or
out
and
data16
call
scas
popa
icebp
fdivl
fidivl
adc
fdivr
push
mov
or
cltd
cmpb
loop
out
mov
xchg
mov
xchg
mov
andb
xchg
seto
insl
ficoms
dec
and
int3
jae
dec
stc
mov
in
movsb
and
push
pop
leave
mov
imul
xor
enter
cmpsb
in
pop
das
adc
sbb
test
loopne
push
setb
pushf
inc
jge
mov
imulb
mov
data16
adc
insb
movsl
cmp
cwtl
pop
dec
hlt
pop
jo
cli
jno
rorl
dec
inc
push
xchg
repnz
pushf
divl
push
lahf
popa
jmp
shrb
mov
into
adc
rol
sub
dec
ret
jle
dec
pop
dec
decb
aas
sbb
and
mov
pop
xchg
mov
add
fs
xchg
jge
sub
outsl
out
pop
inc
movsb
mov
leave
pop
lods
shl
mov
pop
jb
cmp
fidivrl
lcall
aas
adcb
je
xor
jmp
mov
mov
push
mov
arpl
cmpsb
testb
sub
ror
mov
mov
adc
mov
pop
lock
lea
mov
icebp
adc
dec
and
ret
imul
cmp
scas
push
cmp
sub
jge
test
mov
xor
xchg
in
cmp
jecxz
jmp
mov
jmp
mov
jl
pop
testl
xor
sbb
push
popa
inc
adc
mov
popa
leave
push
clc
cmp
addl
push
mov
sbb
pop
push
shl
clc
mov
pop
popa
insb
jp
sahf
pushf
push
sub
lock
aaa
adc
leave
xchg
outsl
outsb
jb
fdivs
je
dec
test
mov
mov
mov
mov
cmpsl
dec
shlb
ja
outsl
pop
add
fs
and
push
addr16
xor
les
cmp
lods
cmpsl
adc
dec
stos
jne
in
pop
pop
add
adc
es
js
lret
push
insl
test
int3
push
push
or
mov
repz
cli
mov
dec
xchg
xor
movsl
mov
repz
lods
mov
lret
scas
sbb
xchg
or
push
mov
jmp
mov
push
loopne
cmp
addl
pop
add
popa
or
push
daa
insb
push
fwait
xchg
fsubl
xor
ret
insl
mov
cld
cld
or
mov
rorl
call
dec
loope
mov
push
jmp
and
pusha
mov
pop
ficompl
pushf
mov
adc
jb
imul
les
push
pop
es
inc
inc
pop
mov
lahf
ficoml
lcall
in
imul
and
add
jnp
notl
testl
dec
outsb
movsb
dec
jae
cmp
test
dec
sbb
jae
and
or
cld
outsb
xchg
test
pop
rorb
lea
sub
lds
in
sub
jmp
test
ffreep
inc
add
jb
popf
jae
and
lcall
xchg
inc
fstps
lods
or
in
out
cmpsb
outsl
mov
mov
icebp
push
mov
push
and
push
cmp
std
jge
sub
dec
push
dec
stc
out
std
inc
add
jbe
bound
pop
adc
sbb
jb
addb
stc
movsb
shll
mov
dec
imul
sbb
repz
cmp
fs
movsl
and
adc
mov
fadd
notb
mov
andl
clc
jne
adc
mov
bound
or
mov
cmp
or
xchg
daa
cltd
jmp
and
xchg
dec
ret
popaw
mov
jle
sbb
sbb
movsb
and
ja
divl
xchg
or
call
push
mov
push
push
cmp
adc
pop
cmp
cli
cmp
lock
in
icebp
xor
and
pop
push
add
xchg
pushf
inc
mov
jecxz
les
inc
dec
icebp
push
add
xchg
mov
jae
repnz
inc
fiaddl
lcall
cmp
sub
adc
sti
cs
cmp
pop
mov
movsb
int3
mov
add
lock
mov
sbb
cli
add
sbb
fistpll
push
nop
inc
sbb
adc
movsb
push
ret
sbb
iret
inc
cwtl
dec
mov
enter
cmp
sarl
jnp
data16
sub
insb
adc
dec
sub
sub
icebp
call
xor
push
je
sub
sbb
cmpsl
sbb
push
pop
mov
adc
fcoml
jp
mov
cmp
jl
iret
sti
xor
lret
add
ja
sub
clc
cmp
fsubs
cmovs
clc
nop
mov
mov
test
and
adc
dec
loopne
mov
sbb
insl
gs
fs
jmp
loopne
inc
or
inc
fists
testb
outsl
dec
pop
mov
or
fwait
inc
cmp
jno
lds
push
push
add
cmp
loopne
cmpsb
jnp
add
xlat
cli
sub
out
dec
out
test
and
sbb
adc
push
jl
lahf
mov
mov
sub
xchg
pop
sub
xor
aas
jle
mov
pop
inc
movsb
out
jp
ss
inc
out
jmp
add
jb
iret
adc
ja
ret
lock
dec
adc
inc
inc
inc
fwait
pop
adc
stc
push
pop
adc
scas
fcmovnu
ret
xor
ss
aas
adc
and
out
or
stos
xchg
sbb
flds
xchg
jo
cwtl
sub
movsl
push
xor
and
movsl
inc
inc
out
xor
fsubrs
ret
rcrb
sbbb
gs
push
push
imul
loop
sti
mov
xor
mov
fildll
popf
jmp
sbb
mov
arpl
decl
inc
xor
push
add
xor
mov
cwtl
mov
sti
pop
loop
stos
mov
lock
test
dec
add
hlt
and
fcoml
std
or
sub
repnz
popf
mov
lea
cmp
jmp
sub
into
ds
jl
mov
jno
push
mov
mov
and
or
loopne
clc
not
and
xor
adc
cwtl
jne
movsl
mov
jb
aad
repnz
fsubp
and
pop
mov
dec
popa
aam
push
mov
and
mov
enter
daa
cmp
mov
fidivrl
mov
mov
cmpl
pop
mov
shll
jbe
imul
data16
shr
clc
pushf
dec
loope
fiaddl
fdivr
insb
inc
adc
jns
sbb
je
inc
fucomp
xchg
shll
sub
xor
inc
aaa
sub
lahf
cmc
call
popa
or
mov
cmpsb
scas
mov
and
mov
adc
xorps
test
int3
and
mov
imul
sbb
dec
movsb
adc
xor
jnp
rorb
pop
gs
jecxz
imul
jg
cmp
xchg
loop
jp
out
test
test
pop
cli
dec
iret
push
sub
out
clc
xor
cmp
push
dec
mov
fisttpll
push
popf
or
cli
xor
lcall
jl
mov
sub
rorb
inc
dec
out
inc
mov
jp
push
rorb
testb
test
or
pushaw
fs
mov
fcoms
mov
dec
inc
sbb
test
xor
or
lods
out
movsl
stos
test
jp
dec
icebp
mov
sbb
mov
jns
pop
mov
test
pusha
adc
test
xchg
xchg
int3
mov
cmp
cli
bound
xorb
lea
cmpsb
dec
or
sahf
add
fdiv
inc
iret
popa
inc
test
cltd
xchg
pop
in
leave
vpaddb
lahf
mov
mov
jmp
add
imulb
mov
cmp
pop
test
push
out
repnz
cli
or
pop
cmp
rcrl
hlt
adc
movsl
or
adc
jge
xor
jge
testb
push
cmp
sub
mov
jbe
inc
outsl
andl
rol
dec
xchg
loope
adc
push
or
pop
and
int3
inc
jno
mov
adc
pop
mov
push
and
or
dec
mov
mov
dec
ret
pop
repz
jno
dec
inc
aaa
cmp
inc
sahf
and
inc
cmp
add
add
sti
add
enter
imul
mov
mov
pop
inc
in
pslld
inc
ja
mov
jns
sbb
sub
aaa
push
cmp
xchg
sub
mov
adc
idivl
out
push
daa
mov
cmp
sbb
jp
push
jns
rcr
add
outsb
jno
pop
repz
sbb
cmp
push
sbb
lret
jns
pop
mov
ror
pand
dec
and
push
loope
jmp
dec
dec
push
inc
mov
xchg
mov
in
pop
stos
mov
jno
mov
lahf
lds
cmpb
and
fbld
and
adc
shll
dec
mov
lcall
pop
jle
xor
test
cltd
push
sub
imul
loope
bound
and
shr
or
sarl
dec
fwait
mov
push
xchg
into
pushl
lcall
and
fcmovnu
jle
ds
popa
popf
cmp
shlb
pop
in
jp
pop
mov
jp
test
fwait
pushf
outsl
dec
bnd
jmp
shrb
or
lcall
pop
dec
cwtl
aad
add
and
or
addr16
dec
test
pop
push
hlt
test
out
fnstenv
dec
popf
push
fs
mov
mov
stc
movsb
or
sub
sbb
scas
lods
mov
cmc
jp
js
repz
push
jg
mov
lret
add
add
lods
mov
test
xchg
incl
jmp
pop
inc
test
adc
push
lock
dec
and
dec
cmpsb
subl
mov
mov
ret
and
xchg
xchg
cld
ja
mov
inc
das
sbb
das
push
ret
repnz
jle
jl
addr16
mov
jl
pop
adc
xor
jbe
add
daa
dec
pop
sub
mov
rcr
sub
frstor
xor
mov
ljmp
mov
cltd
in
sarl
int
jp
rorb
sahf
xor
or
push
xor
xchg
gs
int
or
hlt
mov
imul
mov
pop
test
and
cs
mov
nop
xchg
loop
push
fwait
lods
es
xchg
int
pop
cmpsl
cwtl
jl
add
sahf
pop
add
imul
push
dec
inc
in
pusha
xor
lret
adc
je
rcrl
test
js
pusha
push
xchg
iret
mov
inc
push
push
ret
or
xor
adc
dec
xor
arpl
cmp
or
dec
sbb
mov
xor
and
ljmp
push
or
cmp
aam
aad
in
inc
les
add
repnz
div
in
les
cmp
insb
adc
pop
inc
cmpl
inc
pop
cmpw
lret
ret
cs
decl
sbb
add
imul
ss
dec
movsb
jo
jb
dec
push
clc
outsb
jo
jae
out
inc
mov
jle
in
jmp
mov
rcrb
xor
jbe
fdivrp
mov
in
dec
or
jg
rclb
arpl
call
pusha
mov
leave
lods
jns
fdiv
sbb
lret
mov
out
mov
adc
jnp
xchg
dec
faddl
nop
jnp
push
mov
pop
scas
inc
or
leave
push
push
push
cmpsb
aaa
das
mov
or
cmp
lcall
mov
leave
mov
div
mov
push
mov
in
sub
mov
adc
xor
jp
or
adc
or
cmc
adc
dec
fidivrs
insl
lret
xchg
mov
or
sub
jnp
add
mov
andb
fwait
inc
fucom
test
and
xchg
popf
lahf
push
repz
imul
or
fsubrl
repnz
jb
mov
mov
scas
push
test
inc
hlt
fsubrl
lret
or
pop
dec
jecxz
stos
add
xchg
test
ret
test
pop
ficoms
fldl
inc
lcall
daa
cltd
add
lds
jb
sti
aad
or
cmp
in
test
sbb
pop
push
sbb
dec
cli
or
push
adc
sbb
xlat
repz
bound
xchg
add
dec
jbe
fdivr
aaa
sub
out
icebp
push
sub
lods
adc
mov
and
sbb
negb
imul
mov
loope
scas
neg
cmp
sarl
cmp
movsl
inc
mov
dec
mov
insb
and
xchg
repnz
adc
pop
insl
or
popf
cmp
xor
mov
in
xchg
sub
push
inc
stos
rcl
test
xor
and
push
js
mov
in
pop
inc
fmuls
cltd
cmpsb
cmp
stos
rclb
jmp
mov
push
mov
and
int3
sub
sarl
cmpsl
add
aad
or
mov
shlb
in
sub
int
sub
test
leave
inc
sub
int3
xchg
frstor
or
pop
ret
int3
sarl
mov
fcompl
xor
mov
andl
xchg
cmp
pop
add
das
inc
call
ss
adc
fildll
cmp
sbb
pushf
cmpsb
mov
clc
dec
or
rolb
mov
and
insl
iret
shlb
push
xor
jne
in
int3
stos
aad
imulb
push
mov
xchg
mov
fsubrl
push
ss
loop
cmpsl
mov
dec
repnz
xor
test
xchg
inc
push
repz
ficoms
mov
mul
loopne
shll
pushf
mov
div
mov
dec
jg
inc
xor
insb
test
popa
syscall
sbb
push
add
push
jae
sub
xor
dec
or
mov
add
dec
jge
inc
cmp
mov
mov
ss
fldenv
and
sub
fisttps
inc
xor
and
sbb
popl
mov
push
test
popa
cltd
lods
stos
idivb
mov
mov
jno
or
and
sahf
sub
orb
es
arpl
jno
mov
xchg
pop
fmuls
mov
leave
jle
jns
scas
ret
pop
inc
loop
dec
repz
sbb
das
lea
push
lcall
insb
push
es
imul
repnz
cwtl
sub
adc
push
aaa
ja,pn
sbb
sti
sbb
rcrb
xchg
sarl
push
mov
aad
dec
mov
ja
iret
mov
das
cmp
or
cli
mov
push
push
popa
mov
sbb
jle
mov
popl
outsl
sarl
fsubp
divb
in
mov
aas
xchg
mov
fildl
push
dec
test
dec
mov
in
nop
iret
fucomi
shr
outsb
lea
sbb
cmp
sahf
jecxz
imulb
loope
andb
xchg
out
add
fwait
add
sub
adc
pop
incb
dec
push
scas
mov
sti
mov
ja
fcmovb
in
jns
inc
and
imul
push
aaa
dec
in
int
jecxz
pop
add
pop
mov
add
mov
ss
sbb
lret
in
add
je
fstl
fbstp
jno
sbb
lcall
mov
mov
popa
fildl
sbbl
cltd
shll
and
ljmp
lods
lea
sub
mov
jo
sbb
mov
inc
sbb
lahf
mov
jbe,pn
ss
frstor
xorb
mov
sub
mov
xchg
test
jl
cmpsb
xor
in
inc
mov
and
or
xor
test
adc
scas
add
push
out
dec
cltd
push
nop
jns
popa
cltd
scas
mov
mov
rep
sahf
and
jle
pop
cmp
addb
jmp
dec
jl
xor
insl
xchg
rcr
cmp
pop
and
inc
ror
arpl
out
outsb
imulb
xor
loope
jnp
cmp
insl
aad
adc
cmp
dec
cli
adc
push
lods
inc
mov
and
enter
xor
xor
popa
imul
dec
pusha
in
sub
xchg
pop
sub
mov
outsb
or
dec
and
fbld
push
test
aaa
mov
js
test
out
push
int3
aas
insl
adc
push
clc
or
cmpsl
ret
mov
and
cmp
or
xor
arpl
insl
mov
dec
out
insl
pop
jne
dec
mov
ljmp
jns
sub
inc
adc
or
in
cmp
test
les
and
xchg
or
sbb
xlat
jmp
xor
in
add
xor
int3
push
xor
cmp
fiadds
jmp
adc
mov
fsub
int3
add
in
scas
mov
lock
jecxz
push
jle
push
pop
punpckhdq
fs
lret
mov
hlt
inc
loopne
scas
mov
filds
push
mov
xor
pop
mov
dec
dec
in
out
add
loop
xor
dec
xchg
je
out
rorb
mov
mov
mov
inc
xchg
lcall
mov
ds
clc
sub
cs
clc
mov
sbb
mov
aaa
sub
jns
pop
decb
xchg
out
inc
imul
add
dec
mov
xor
cltd
jne
adc
mov
test
in
pusha
mov
add
ds
dec
shll
aas
pop
add
lods
xor
inc
xor
jb
sbb
nop
mov
mov
jno
mov
push
aad
adc
int3
or
dec
out
iret
xchg
lret
xor
add
inc
lods
orl
and
cmp
mov
in
out
sbb
pushf
mov
xchg
mov
sbb
jg
outsl
aaa
out
xchg
repnz
xchg
imulb
es
dec
pop
mov
jge
cmpb
mov
or
aad
leave
jle
lods
iret
popa
fsts
leave
lods
cwtl
ljmp
mov
inc
cmp
adc
push
jo
stos
stos
inc
xor
clc
adc
xchg
mov
sub
mov
jecxz
add
jmp
lea
test
scas
std
cmp
mov
in
test
dec
lock
mov
aas
fldl
inc
hlt
rolb
test
inc
mov
cld
add
push
xchg
movl
icebp
or
lcall
scas
inc
add
repnz
shr
mov
xor
jno
call
adc
mov
mov
or
pop
push
frstor
push
inc
mov
das
dec
enter
data16
jb
sbb
sub
mov
and
xchg
js
mov
sub
cmp
cmp
push
enter
outsb
pop
neg
clc
jo
jp
jo
les
mov
testl
pop
add
dec
in
mov
cld
pop
push
call
sub
stos
bound
test
sti
jbe
outsb
xor
mov
in
enter
mov
push
aas
jp
cld
aam
lret
mov
sbb
or
out
sub
push
jo
lret
inc
mulb
push
cmc
adc
fiaddl
outsb
inc
test
pop
cli
jae
test
push
ds
aas
loop
jbe
inc
fdivrl
fldl
mov
jl
mov
push
inc
fs
lcall
ret
stos
jnp
pop
mov
push
add
cmp
push
sub
sbb
fldcw
ret
pusha
insb
jns
pop
rorl
fptan
mov
dec
mov
out
into
push
mov
int
fwait
push
xor
push
mov
aaa
xchg
dec
sub
iret
enter
stc
push
add
or
push
mov
das
lock
ja
push
adc
out
mov
adc
call
arpl
fsts
inc
push
aas
fistl
jbe,pt
jbe
jmp
or
cmp
out
jge
mov
loopne
out
out
iret
push
sti
jo
nop
mov
in
int
sbb
cmp
xchg
mov
push
add
and
sub
xchg
cmp
push
inc
imul
mov
cmp
dec
bound
iret
sub
push
jp
loop
aam
push
jnp
pop
cmp
sub
fdivrp
lret
pusha
or
gs
std
push
outsl
xchg
call
lahf
mov
inc
mov
std
nop
pop
imul
jecxz
jmp
popf
push
cli
xadd
and
sbb
in
cs
xor
ds
pushl
enter
pop
sub
hlt
sub
mov
sbb
jg
mov
into
add
dec
cli
add
test
std
push
scas
cltd
xchg
pop
notl
cltd
add
fmull
pop
loopne
xor
ds
lcall
fs
and
imul
jl
aad
mov
decb
mov
hlt
cs
dec
xor
popf
movsl
idivb
sbb
mov
sbb
dec
and
mov
or
cs
aas
xchg
jo
pop
push
test
sar
add
xchg
xchg
adc
andb
fwait
mov
test
lods
mov
pop
adc
sub
pop
mov
add
pop
fwait
adc
andl
cs
pop
pop
repz
subl
mov
shlb
pop
jecxz
stos
rcr
js
or
test
xchg
fwait
pop
and
cld
jmp
popf
adc
jp
mov
dec
push
jo
sti
dec
inc
ret
mov
fs
pop
and
jl
fnsave
pop
mov
test
call
cmp
imul
je
enter
popa
xor
sti
mov
dec
incl
xlat
adc
fsubrp
arpl
sbb
negl
pop
push
and
cmp
loope
test
std
test
rcrl
push
les
lds
outsl
ror
cli
or
mov
mov
push
inc
out
inc
aaa
dec
mov
orl
xchg
ret
cltd
sub
push
mov
popf
dec
mov
xchg
sbb
cltd
xchg
std
mov
addl
mov
subb
icebp
aaa
popa
std
es
shlb
mov
repz
les
inc
call
fs
pop
xchg
mov
shl
add
hlt
das
adc
filds
push
loop
add
icebp
lret
adc
popa
push
ficoml
push
test
add
xchg
xlat
mov
sahf
shrb
sbb
aad
cmp
cmp
jne
outsl
cmp
mov
repz
cmp
mov
in
sub
cli
ljmp
adc
adc
and
add
ret
stc
mov
arpl
lret
ja
sub
adc
add
or
sub
dec
add
fists
xchg
jg
jnp
push
dec
add
test
push
cmpsb
or
out
xchg
mov
sbb
ss
stos
cs
in
insl
adc
jmp
cwtl
repnz
inc
push
js
mov
movsl
js
or
mov
lods
mov
jo
xchg
int3
jnp
je
push
cs
je
cmpsl
out
std
adc
hlt
mov
test
sub
and
lcall
bound
sbb
clc
in
add
push
dec
xchg
and
and
out
sti
outsl
aad
stos
jns
repnz
mov
aas
hlt
xor
mov
push
fcomi
xchg
inc
js
sub
add
xchg
mov
sbbb
or
sahf
dec
mov
push
push
dec
push
dec
bound
jl
cli
or
cmp
dec
pop
push
js
and
lahf
lahf
push
sub
js
ret
sub
cltd
leave
jae
clc
pop
or
dec
cltd
pushf
aas
xchg
or
gs
and
std
in
sahf
mov
sbb
gs
cmp
cmp
shll
mov
inc
dec
pop
std
lea
les
adc
mov
call
adc
pop
addr16
stos
sbb
int3
jne
mov
pop
lret
mov
and
lret
aas
dec
lret
cmpsb
stc
add
mov
scas
push
scas
mov
add
dec
jmp
inc
xchg
mov
jnp
in
dec
push
mov
xlat
pop
inc
or
je
xchg
mov
mov
jno
mov
mov
or
and
lcall
daa
mov
ja
out
inc
lock
mov
inc
sub
out
jecxz
ja
inc
fstpt
insb
or
mov
jp
and
ret
mov
fincstp
out
rcr
xor
stc
cmp
sub
inc
jo
mov
popa
dec
addr16
sub
stos
ror
ljmp
stos
fnsave
and
and
scas
mov
mov
sbb
sub
pop
aam
push
or
inc
jae
icebp
insl
mov
pop
jg
sbb
maxps
lcall
hlt
mov
cmp
add
sbb
adc
cmpsb
jp
leave
lahf
out
xchg
fdivs
iret
pop
push
loop
add
jns
dec
test
xlat
inc
inc
in
xor
into
das
sub
push
xchg
shr
sbb
insl
cmp
fidivl
push
lcall
pop
int3
std
sub
adc
fiaddl
aad
push
push
or
xor
rorl
rcrl
aam
pop
add
lcall
inc
mulb
ret
xchg
mov
imul
sub
sbbb
fmull
lahf
fisttps
push
repz
scas
clc
fcmovnb
inc
fisubrl
jbe
loopne
or
test
imul
add
mov
and
hlt
mov
or
in
jae
dec
imul
adc
ljmp
dec
lahf
xacquire
rcr
ret
xor
clc
std
paddusw
test
lret
inc
mov
xor
xchg
mov
jno
jo
insb
out
xchg
and
ret
leave
inc
sbb
outsb
xor
pop
aaa
cmc
das
test
push
repnz
test
lret
in
dec
xchg
inc
stos
push
push
test
mov
lret
aas
mov
add
ret
xor
roll
cltd
daa
cli
xchg
xchg
rorb
rcl
js
push
pop
xchg
scas
sub
mov
sbb
sbb
push
push
outsl
lret
cmc
mov
mov
xchg
ljmp
sub
in
gs
rolb
movsl
add
inc
jae
xchg
test
jg
xor
sub
fildl
shlb
cld
jbe
dec
testl
cwtl
ss
mov
in
fs
push
cmp
out
movsb
mov
mov
sbb
pop
pop
sub
push
push
fiaddl
scas
shl
xor
daa
pop
and
pop
fists
insb
dec
inc
pop
adc
lods
fmulp
lea
push
les
sub
aaa
xor
and
add
jns
xchg
and
in
lea
xchg
ret
movsb
das
into
xor
sbb
vmwrite
and
pusha
dec
rcrl
out
lret
push
mov
dec
cmp
mov
loop
xor
fistpl
outsl
add
ficoml
shlb
jnp
jmp
and
repz
xor
adc
loop
inc
sub
pop
lcall
rcl
jo
add
and
sbbl
sti
leave
mov
dec
push
add
jno
les
jl
pop
sub
stos
popf
sbb
scas
shl
out
push
and
sarb
in
push
iret
pop
fmuls
mov
stos
sar
inc
pop
inc
das
cmc
mov
mov
movsl
xor
imul
xchg
lret
and
repz
jbe
cltd
mov
call
add
adc
fistps
ljmp
jo
aam
std
bound
adc
mov
insb
pop
mov
jnp
push
mov
out
andl
pop
cmp
dec
mov
arpl
orb
push
sahf
int
and
sub
xor
nop
stc
xchg
push
out
lret
sbb
incb
fdivp
test
dec
adc
mov
ja
xchg
xchg
rcll
mulb
les
iret
mov
or
push
cmp
fsubl
sbb
jp
jb
rcr
inc
mov
or
pop
sbb
jns
push
mov
mov
adc
push
aam
icebp
pop
sub
cmp
das
jp
popf
sub
xchg
jge
mov
push
pop
pop
push
jle
aas
dec
ja
jl
ss
xchg
jl
mov
xor
scas
pop
jl
push
jo
cs
int3
movsl
ret
popf
lods
and
pushf
out
sub
jle
xchg
pop
in
outsb
xor
nop
xchg
or
push
les
in
lea
mov
jle
ret
inc
sub
xchg
les
push
loop
xor
mov
scas
mov
popf
push
fadd
das
movsb
test
cmp
sub
repz
sub
outsb
cwtl
mov
mov
pop
adc
mov
inc
xchg
fldl
popf
in
cmpsl
cmpsl
push
mov
push
in
or
nop
leave
ss
xchg
test
in
nop
and
pop
iret
pusha
mov
fidivl
inc
xor
int3
test
xor
or
cmpsl
xor
inc
notb
inc
mov
imul
imul
mov
cmc
fnstsw
fldenv
loop
sub
inc
andl
xorl
fdivrp
jb
jno
jns
icebp
push
sbb
mov
dec
adc
daa
adc
mov
cwtl
mov
aaa
push
dec
dec
pop
dec
lods
dec
outsl
mov
jne
idivb
ljmp
imul
loope
and
mov
dec
add
mull
sub
ljmp
and
subb
mov
mov
cli
stos
xor
fcmovbe
mov
out
jmp
dec
repz
stos
fldl
or
in
mov
push
push
ljmp
mov
das
sarb
jno
lahf
in
mov
das
jo
cli
xchg
mov
xorb
cltd
sarl
ret
loop
cmpsb
loopne
dec
inc
xchg
fisubl
and
movsl
int3
xchg
add
or
sub
jge
daa
sub
adc
sbb
lcall
lods
mov
fidivrs
push
aad
loope
jae
cmp
push
sarl
lods
addl
mov
ds
and
mov
cmp
outsl
loop
orl
fsubl
dec
lcall
jbe
inc
aas
push
cmp
hlt
int3
jmp
push
addb
xor
repz
sub
cli
jb
das
std
xor
loopne
insl
repz
loopne
pushf
push
jae
or
aam
or
cmp
xor
dec
dec
das
ljmp
jns
and
sub
mov
or
pushf
data16
pop
adc
push
cs
sub
aam
cltd
loopne
popa
pop
mov
daa
mov
sbb
cmp
xchg
push
mov
mov
clc
lret
imul
add
mov
fs
cmp
mov
sub
xor
xchg
pop
jp
lret
xlat
jns
mov
ljmp
cmp
sbb
popf
mov
cmp
pop
out
shlb
mov
inc
mov
mov
mov
sub
xchg
or
insb
jp
jno
xchg
cmp
imul
fisubrs
rol
or
sub
adc
jb
push
aaa
dec
js
pop
mov
sahf
cmp
inc
cmpl
jns
loopne
fwait
daa
mov
iret
xchg
loopne
jp
cmpsl
daa
add
call
sbb
jp
inc
sahf
cmp
mov
std
inc
lret
fadd
test
xor
xchg
jns
sub
divb
stos
cmp
arpl
test
cmp
xchg
mov
mov
fidivrl
mov
mov
pushf
out
push
xchg
xor
lods
mov
add
in
pop
andb
pop
mov
xor
cmp
sbbb
sbb
jp
push
popa
sub
mov
xor
mov
mov
cltd
lret
cmp
inc
nop
rolb
dec
aad
iret
ds
cmp
push
inc
xchg
jo
stos
sub
cltd
or
pushf
jno
insb
mov
pop
divb
mov
stc
push
xchg
push
cwtl
sti
popa
sbb
and
push
mov
into
rcrl
cmp
mov
lret
les
xchg
mov
imulb
frstor
out
mov
and
jno
cwtl
xor
and
xor
enter
jmp
rolb
inc
ret
mov
sbb
jns
setae
out
cli
inc
loopne
in
pop
pusha
xor
mov
stos
fcomps
sbb
jo
xchg
mov
or
fcmovnu
push
cmpsl
stc
add
jb
push
xchg
jno
ja
and
jmp
jns
sbb
cmpsb
movb
addr16
jge
sub
adc
jecxz
push
mov
jnp
jp
mov
in
and
lea
outsl
jo
sbb
push
cmp
sbb
sbb
imul
imulb
cs
jmp
dec
xchg
popf
inc
mov
xchg
xor
mov
cmp
pop
in
cmc
mov
rclb
jmp
cmpsl
or
popf
negb
data16
rcll
jmp
mov
outsl
scas
mov
leave
or
mov
or
or
mov
push
pop
adc
iret
mov
push
lcall
or
movsl
ja
mov
or
mov
divb
outsl
div
pop
mov
scas
aas
inc
scas
int3
xchg
lret
js
in
into
call
mov
pop
mov
and
jg,pn
dec
inc
fwait
mov
stc
sti
fsubs
pop
mov
pop
dec
adc
jae
lahf
jecxz
aad
jp
imull
jb
mov
pushf
xor
mov
or
dec
pop
push
add
sarb
loope
fsubr
or
fsubrl
sbb
rclb
pop
cmpsl
mov
ret
cli
xchg
fldl
cmp
sub
adc
or
icebp
pusha
push
pop
iret
pop
in
test
rorl
xor
jge
nop
mov
inc
fidivrl
sbb
jmp
and
neg
jo
push
cs
fwait
push
addl
ds
lcall
jo
mov
inc
xlat
sub
add
test
lds
cmp
pop
push
arpl
push
push
sbb
lds
aaa
pop
mov
movsl
fwait
ret
mov
and
push
or
repz
out
sarl
sbb
data16
ds
or
adcl
xchg
mov
sub
mov
leave
and
inc
in
data16
and
int
mov
loopne
push
cmpsl
adc
fcomp
adc
aam
and
add
lret
jecxz
mov
fbld
mov
pop
mov
push
xchg
mov
gs
pop
pop
out
imul
and
ds
pop
ffree
adc
shlb
adc
test
add
jae
jb
mov
cmp
es
mov
xchg
gs
outsb
mov
push
ret
push
leave
stos
test
jo,pn
icebp
aam
int3
mov
xchg
mov
sarb
pop
cli
lret
lcall
rorb
imul
in
adc
pop
mov
dec
iret
adc
push
popf
jmp
call
int3
fstpt
push
xchg
bound
jbe
xor
fdiv
js
push
mov
mov
cmp
xchg
outsb
orb
pop
js
xor
inc
jae
mov
xchg
sub
clc
daa
pop
fcoml
xchg
insl
fs
dec
add
xchg
repz
pcmpgtd
xlat
mov
cmpsl
pop
xor
cwtl
jmp
fldcw
ja
jae
jle
xchg
negl
shlb
icebp
out
jmp
jne
and
or
adc
outsl
out
fldt
inc
gs
add
cmp
xchg
lahf
stc
mov
dec
jmp
sti
sub
xchg
push
pop
xor
mov
out
ss
dec
int
lret
test
mov
pop
int3
arpl
xchg
into
ss
mov
add
imulb
sub
popf
inc
iret
outsb
mov
xor
mov
or
push
adc
mov
gs
rorb
cmp
popa
xor
fcomps
or
sbb
dec
jl
dec
mov
and
mov
add
imul
mov
fadds
les
bound
addb
push
mov
popf
sahf
sbb
mov
test
lock
les
sub
inc
std
xor
pop
add
fsubrp
pop
out
dec
addb
je
pop
popl
inc
add
xchg
mov
cmp
daa
aas
je
xor
lds
jae
xor
pop
jecxz
add
in
lds
mov
xorl
push
adc
movsb
or
cmpsl
xor
jbe
jo
ret
enter
cli
roll
push
scas
push
and
sub
ds
pushf
int3
roll
and
push
outsb
mov
jg
test
mov
mov
mov
fbld
sbb
or
scas
and
imul
js
ds
and
loopne
xchg
xchg
ja
decl
stc
adc
and
push
cwtl
inc
cmp
jae
adc
push
aam
xor
or
jns
sbb
daa
sub
xchg
movsl
xchg
mov
out
lea
aam
js
push
xor
in
mov
dec
mov
xchg
ret
sbb
lea
mov
sti
in
mov
rorl
sbb
or
sbb
orb
jbe
mov
sbb
scas
daa
int3
into
mov
sbbb
imul
mov
sbb
adc
xchg
rorb
cmp
out
pop
pop
imul
arpl
call
fcompl
or
push
xor
out
cmp
pushf
stos
and
xchg
insl
lret
sbb
cmp
cmp
sub
adc
dec
xor
roll
loope
sbb
and
les
pop
test
test
ss
lock
int
lea
rorb
je
mov
into
jno
mov
bound
or
jae
dec
popa
dec
xchg
xchg
mov
push
cmpl
pop
mov
pop
mov
lea
add
lret
into
popa
xor
add
daa
xadd
lret
bound
lds
adc
xchg
outsl
push
sbb
js
insl
aam
add
movsb
sbb
dec
xchg
stos
lds
cmpl
outsb
mov
mov
mov
pop
mov
sahf
sarb
mov
sub
pop
xlat
daa
pop
cmp
in
arpl
and
xchg
call
insl
mov
lcall
cltd
sbb
out
sbb
fcoml
jg
and
sub
jg
lods
sub
jmp
pop
aad
adc
ds
lods
jmp
mov
negl
push
xchg
push
push
push
cmpsl
je
rcr
mov
dec
fstps
add
leave
xor
cs
les
jle
or
mov
test
repz
pusha
test
jne
sub
push
jne
into
into
xor
inc
lcall
ficomps
jp
ret
sub
ret
iret
push
sub
pop
lahf
push
sbb
es
ja
pop
repnz
jge
pop
pop
fdivs
pop
sub
pusha
imul
xchg
push
movsl
mov
sbb
mov
rorl
cmc
dec
pop
jecxz
inc
jo
inc
pop
jge
xchg
rcr
fsubs
sub
dec
jecxz
mov
adc
ljmp
fcmove
stos
mov
push
pop
movmskps
repnz
mov
daa
lcall
push
rcr
call
sub
movb
adc
add
loope
daa
cmpsl
cmpsl
adc
insb
scas
aaa
inc
dec
stos
popf
inc
jl
jp
jno
pminub
call
decb
das
in
addr16
notb
jge
rolb
lahf
sub
lea
out
xor
stos
mov
mov
sub
adc
jecxz
ds
mov
testl
inc
lcall
push
adc
jle
jge
pop
ljmp
push
mov
pop
lahf
push
pop
xchg
adc
cli
cmp
mov
pop
in
or
call
divl
jecxz
inc
icebp
movsl
xor
push
in
jecxz
and
mov
adc
or
cwtl
mov
loope
and
sbb
hlt
in
jecxz
and
cli
shlb
and
arpl
jp
xor
push
in
repnz
jno
shll
cmp
cmpsb
call
cmpsl
subl
sbb
outsl
sub
popf
jae
lea
push
mov
xchg
inc
aad
mov
and
xor
repnz
inc
int3
pop
inc
mov
pop
add
mov
fbld
dec
repz
add
lcall
pop
push
cmp
cli
pusha
adc
loope
sub
ret
pop
adc
out
xchg
pushf
inc
cs
and
pop
or
cwtl
xor
div
stos
jo
push
add
rolb
adc
push
aas
inc
out
dec
mov
adc
movsl
out
sub
jbe
xor
mov
dec
jl
repnz
mov
mov
mov
pop
daa
mov
mov
xchg
test
adc
xor
iret
or
cmp
jecxz
adc
lahf
adc
sti
testb
push
cltd
xchg
ds
jb
std
mov
clc
pop
dec
je
ja
imul
int
mov
inc
scas
jg
imul
cmp
sub
js
pop
inc
xchg
repz
int
aad
es
mov
adc
push
mov
xor
dec
test
and
sub
pop
out
push
xchg
in
out
jle
adc
and
xchg
call
rclb
iret
enter
or
pop
lds
or
sbb
xor
mov
out
fstpt
scas
rorb
sub
add
adc
add
push
xchg
pop
loopne
lods
lock
and
repnz
jnp
push
stos
lds
dec
mov
loope
dec
popf
add
mov
dec
dec
sbb
and
aaa
lahf
iret
mov
dec
fs
lods
pop
outsl
cli
cmpsb
fdivrp
leave
loope
jb
mov
inc
leave
dec
int
adcb
das
sbb
popf
addr16
icebp
mov
testl
fdivr
popf
pop
insb
and
and
pop
inc
and
out
mov
sbb
adc
ja
jl
and
ret
add
aam
sub
in
std
push
fidivrs
in
dec
into
xor
sub
mov
sub
out
pop
outsl
add
gs
movsl
bound
xchg
push
aas
jae
dec
adc
in
lret
mov
mov
jae
cs
sub
outsb
inc
lods
xchg
inc
add
inc
outsb
sbb
dec
mov
jp
push
mov
iret
or
mov
mov
sub
nop
roll
mov
daa
in
or
stos
fs
or
mov
scas
sub
cli
out
inc
and
pusha
cmc
sbb
and
shrl
call
push
xchg
xchg
fisubs
pop
jg
and
mov
mov
decb
lock
imul
adc
popa
rcr
push
icebp
or
in
aam
jno
leave
and
mov
arpl
adc
sbb
test
bound
dec
mov
icebp
dec
and
loopne
ja
cwtl
push
push
mov
sub
cmp
imul
les
cmpsb
sub
or
mov
jbe
pop
mov
inc
inc
mov
imul
dec
jmp
loopne
out
test
rcl
xchg
stc
outsl
int3
dec
fisubrs
mov
mov
enter
add
rcll
cli
fwait
add
fs
enter
fsubrp
or
mov
cmp
shlb
mov
cmpsl
jo
or
pop
iret
int3
jle
or
repnz
fisubs
jnp
gs
xchg
cmp
lcall
std
or
das
cmpl
inc
mov
subl
mov
mov
add
push
cli
daa
int3
cmp
ljmp
add
dec
inc
out
insb
pop
add
insb
xorl
scas
jmp
fwait
movsb
dec
dec
shll
lods
or
mov
or
ds
sub
mov
dec
mov
dec
data16
shlb
mov
enter
mov
ja
adc
cli
enter
dec
sub
or
pop
fidivs
and
inc
cmpsb
js
js,pn
jb
stos
popf
jno
and
stos
subb
xchg
xor
lahf
dec
insb
jp
test
in
adc
insl
fucomip
sbb
mov
bound
mov
push
ja
add
fld
leave
aam
push
insb
xchg
out
jle
fwait
shlb
je
adc
jge
adc
stos
pushf
ret
lcall
lret
mov
push
mov
cmp
scas
push
cmpsl
lahf
or
and
fdivr
xchg
mov
fistpll
movsb
add
call
xchg
jae
lods
cmc
jne
inc
js
cmp
cmpsb
or
nop
adc
test
inc
scas
sub
repz
xchg
lret
jo
addb
and
sub
mov
es
xor
shll
sar
aaa
add
addl
cs
jl
jp
stos
in
sub
stos
in
xchg
and
fistpll
ja
fildll
mov
lea
sbb
mov
setl
cmpsb
cli
add
dec
ja
mov
sub
andl
into
adc
xor
std
push
adc
ss
lahf
sahf
fwait
repz
xlat
outsl
xlat
mov
xor
mov
jb
jb
fsubrs
xlat
nop
sub
and
xchg
mov
das
jp
and
add
cmp
scas
sbb
mov
popa
push
xor
ds
test
and
clc
sub
add
dec
test
jne
push
test
mov
cmc
mov
pop
into
jge
repz
pop
mov
cmp
popa
nop
pop
loope
sbbl
fisubrs
cmpsl
fidivs
notb
lds
popa
pusha
test
dec
push
xor
mov
jge
dec
clc
insl
dec
loope
cld
out
std
ds
adc
sbb
loop
push
add
test
or
adc
pop
out
add
push
pushf
dec
inc
sbb
std
mov
pusha
dec
lods
or
and
outsl
ljmp
push
sbb
lea
dec
sbb
hlt
cli
jp
bound
dec
outsb
ficomps
cmp
stos
fimuls
mov
call
mov
xchg
cli
lods
ret
mov
jnp
cmp
or
dec
dec
push
out
cld
imul
push
mov
dec
cmp
and
push
addr16
jmp
sbb
addr16
shll
jp
jnp
imul
or
xlat
mov
push
mov
add
push
into
push
pop
pop
dec
icebp
xor
jb
test
adc
hlt
adc
je
cmp
and
cmp
in
into
cs
mov
lret
cmp
mov
insl
pop
push
sbb
and
insb
mov
aam
mov
pop
lods
inc
sub
push
in
fildll
jns
iret
popf
faddl
lods
adc
cld
adc
push
and
rcll
fcompl
pop
add
scas
mov
sbb
xchg
dec
daa
cli
out
sahf
mov
je
fisttpll
pop
adc
and
and
or
jbe
int3
or
sub
mov
lods
leave
into
add
or
and
bound
inc
fldl
lods
or
push
iret
inc
aam
cmp
sbb
push
js
mov
cwtl
jecxz
and
ss
mov
sub
push
and
jge
fsubl
inc
pop
imul
and
add
repz
sbb
push
movsb
sub
popf
fistl
fldenv
cwtl
repz
idivl
adc
push
xor
testb
push
lods
pusha
xchg
cmp
push
dec
es
mov
push
mov
add
outsb
pop
adc
icebp
pop
sar
dec
call
je
mov
push
xor
cmp
and
insb
xor
jmp
cld
fstcw
push
jg
or
jmp
ljmp
orb
sbb
data16
mov
pop
jge
inc
xor
ret
loope
test
pop
hlt
mov
cmpl
adc
notb
or
push
pop
pop
inc
xchg
push
lock
loop
and
jle
shlb
aaa
push
cmp
xchg
add
dec
loope
clc
mov
jb
sbb
inc
xor
add
dec
mov
fsts
pusha
fnstsw
inc
leave
in
xchg
jb
mov
in
outsl
pop
outsb
out
mov
in
test
in
pop
adc
dec
sbb
xchg
adc
imulb
into
cmp
ss
fwait
xor
pop
mov
out
jb
fsubr
push
pop
pop
addl
and
or
rcrl
sbb
mov
ds
push
sti
or
insb
jle
mov
inc
xchg
dec
inc
jg
js
das
shrl
inc
ret
dec
xor
cwtl
inc
in
or
or
aad
rorl
outsb
or
push
sub
or
adcb
jae
pop
aad
cmp
arpl
jne
sahf
or
jg
in
jae
cmpsb
mov
cmp
loopne
aam
xchg
jg
mov
in
mov
jbe
aaa
add
jno
cmpsl
imul
repnz
loopne
int3
mov
adc
mov
xchg
mov
push
es
pop
repnz
imul
mov
and
mov
jne
mov
dec
testb
jno
sarb
mov
xchg
and
sarl
lret
mov
into
jnp
insb
rorb
mov
repnz
mov
inc
and
lahf
or
std
in
dec
jb
or
fwait
jbe
enter
add
movsl
lods
jg
mov
xor
fidivrs
jge
mov
xchg
rcr
pop
mov
cwtl
mov
jbe
mov
clc
dec
nop
aas
jo
fwait
dec
mov
outsl
hlt
and
mov
lahf
jle
cmpsb
push
clc
mov
leave
xor
je
push
daa
aas
clc
and
fistpll
gs
rorb
mov
loop
push
rcrl
ljmp
jge
fisubl
sbb
mov
xchg
fcmovnb
jne
pop
repz
fdivs
xor
push
jp
add
jp
jo
cmpb
jbe
xor
dec
inc
ss
sub
xor
ror
sub
ret
jae
int3
mov
js
test
mov
pop
out
out
mov
add
or
mov
xor
js
and
or
gs
dec
add
cs
roll
imulb
cmpsb
jge
or
stos
lds
outsb
xchg
ret
xor
add
movsb
lds
add
dec
fs
fistl
out
inc
in
xchg
fistpll
and
push
pop
push
dec
or
int3
pop
fcoms
push
out
std
mov
movsb
das
mov
pop
or
lock
pop
hlt
cmpsb
pop
inc
mov
push
cmp
pop
stc
fnstsw
and
js
cltd
mov
mulb
hlt
xlat
adc
mov
push
xor
jbe
out
mov
sbb
mov
lock
push
jg
mov
xlat
mov
stos
or
or
fldl
mov
loope
call
xor
insb
addb
add
ja
xor
fsubrs
arpl
xchg
fldl
xor
xchg
mov
or
test
decb
lods
push
adc
xlat
popl
lock
xor
fcmove
cwtl
insl
cld
cmpsl
push
popa
fsub
mov
data16
popa
xor
or
jbe
inc
xchg
jmp
add
jnp
popa
jecxz
mov
pop
push
out
push
ljmp
out
enter
adcb
fstps
xorb
adc
pop
mov
sbb
scas
push
xor
dec
jmp
cwtl
test
adc
mov
cmp
add
fcomps
adc
daa
adc
aas
xor
add
xchg
lcall
cmp
cwtl
pop
push
ds
lret
push
gs
dec
cmp
sub
pop
or
sbb
push
inc
testb
insl
divl
push
sub
loopne
fucom
addr16
add
outsl
mov
push
mov
fsubl
pusha
arpl
push
xchg
ds
fwait
ljmp
push
imul
xchg
lret
fstps
push
cmc
sbb
inc
mov
rcll
sahf
mov
rcrl
leave
clc
xlat
sub
adc
xchg
lds
sub
inc
pushf
pop
jbe
lcall
lock
outsl
icebp
fwait
scas
xchg
sbb
push
pusha
fadds
mov
mov
pop
leave
shrl
dec
faddl
push
test
pop
lret
pop
aaa
ss
mov
mov
popf
and
push
adc
jecxz
fldenv
jo
mov
popa
bound
out
icebp
cli
adc
test
cmpl
mov
adcb
sbb
and
aaa
or
jo
fmuls
stos
adc
jle
inc
mov
std
add
sti
jo
and
adc
iret
fistpll
fwait
adc
outsb
lds
xchg
cmp
sub
pop
imul
xchg
nop
xor
sub
ljmp
ret
test
in
xor
sub
out
sbb
arpl
psllw
push
movsl
and
push
dec
movsl
push
popf
adcl
push
dec
sahf
and
movsl
lea
stos
inc
nop
inc
lds
arpl
mov
cmpsl
data16
icebp
flds
ds
pop
insl
xor
data16
sub
pop
jne
add
mov
das
xor
cmp
loope
imull
ss
mov
sahf
cmp
into
lret
xchg
addr16
imul
mov
sub
push
out
lcall
insl
shlb
jle
inc
ss
push
mulb
push
stc
mov
push
sti
sub
mov
pop
sub
xchg
mov
ds
fwait
mov
pop
adc
in
or
pop
stos
xor
movsb
cmpsl
fcompl
xor
ret
sub
inc
inc
sub
in
and
cmpsl
ret
or
cli
xor
inc
pop
adc
lea
xadd
xor
add
xchg
ljmp
mov
cld
mov
pop
out
xor
add
mov
cmp
mov
mov
mov
sbb
push
dec
aam
mov
shrb
dec
mov
lret
jae
in
sahf
jbe
aaa
imul
cwtl
fldenv
pop
jbe
push
mov
dec
mov
jo
movl
arpl
daa
outsb
pushf
mov
je
es
lock
cmp
adc
pop
push
in
dec
stc
xchg
clc
add
pop
cmp
ret
jecxz
pop
xchg
sti
in
sbb
ja
inc
jg
stos
cwtl
aad
call
outsl
cli
jecxz
ret
inc
shlb
adc
out
add
dec
test
or
cli
loopne
jmp
xchg
cmp
lcall
jo
xchg
cmc
fcmovbe
push
loopne
mov
lods
fidivrs
xchg
fstpl
dec
fdivl
cld
or
test
int3
fistpll
or
xchg
out
shrl
cmpsl
sbb
pushf
dec
mov
inc
test
clc
cmp
insb
and
inc
mov
sbb
add
pop
adc
mov
call
mov
mov
dec
mov
fs
sbb
sub
and
add
arpl
ds
or
cmp
mov
mov
add
cmpsl
jbe
jo
add
js
nop
out
jo
push
xchg
sub
stc
or
or
jnp
ficomps
lret
aad
cli
fildll
pop
inc
rsqrtps
inc
orl
punpckhwd
ret
push
or
int
addb
andb
loopne
inc
mov
and
or
insb
xchg
les
cld
adc
mov
sbb
lods
cmpsb
inc
cs
testl
scas
adc
and
test
add
lret
test
cmp
push
pop
xchg
pop
in
sub
inc
movsb
divl
mov
xchg
mov
out
rorl
out
ljmp
outsb
jbe
inc
mov
xor
or
xor
test
pop
and
xor
int
xor
pop
repz
jmp
mov
mov
mov
mov
int
or
jno
scas
inc
pop
inc
push
inc
aad
mov
cmp
cmpb
adc
inc
lret
mov
clc
push
pop
mov
sahf
xor
mov
mov
jmp
addl
scas
stc
xchg
into
jbe
in
jg
jmp
ret
xor
dec
sbb
push
inc
lret
mov
subl
cmp
jmp
leave
adc
cmpsl
pop
push
cs
cld
sbb
jg
adc
mov
scas
mov
sahf
dec
or
pop
inc
mov
jle
aam
ret
mov
scas
in
iret
jg
pop
loopne
lcall
movsl
mov
mov
shrl
push
cmp
loope
mov
shl
daa
rep
repnz
in
xchg
cltd
loope
je
cmp
mov
jge
inc
mov
xor
mov
leavew
mov
dec
sar
dec
push
mov
pop
fmul
fiadds
push
rolb
mov
add
sbb
cli
outsl
cmp
pop
nop
roll
and
pcmpeqb
sbb
and
icebp
test
jne
mov
inc
sbb
les
btc
push
xchg
stc
mov
xchg
std
cmpsl
jge
aad
push
cld
inc
test
or
decb
test
daa
xchg
lahf
push
xor
and
orl
lods
pop
adc
pop
es
icebp
loopne
les
mov
inc
cmpsb
cmp
and
mov
bnd
adc
inc
into
inc
inc
xor
xor
pop
pop
in
imul
cmpsb
mov
pop
mov
or
test
stos
fs
sub
adcb
or
lcall
adc
popf
cmpl
adc
rorl
jmp
ror
or
fists
sbb
mov
sbb
and
xor
sbb
sar
sbb
fidivl
ret
scas
in
cmp
sbb
mull
or
adc
icebp
mov
and
lahf
jbe
icebp
loopne
sub
insl
addl
dec
sub
frstors
jne
jg
imul
andb
adc
shrl
cwtl
sbb
mov
jecxz
dec
mov
xor
pushf
jle
and
imul
pop
sbb
icebp
and
vzeroall
stos
lret
xor
push
mov
xor
jecxz
stos
lahf
add
jle
leave
or
mov
sbb
int
das
inc
jb
dec
cli
or
movl
aam
nop
xacquire
mov
je
lahf
into
movsl
fld
cld
cmp
fstpt
movsl
pop
inc
push
jb
les
sbb
test
dec
out
cmc
lcall
js
inc
ja
mov
aam
stos
ljmp
pop
mov
sbb
add
shll
jmp
sysenter
icebp
int
cmp
push
lcall
ret
or
cmp
jmp
ja,pt
or
outsl
js
repnz
xchg
xor
inc
mov
mull
jne
popa
add
xchg
enter
jne
cmp
pop
fdivrs
inc
daa
mov
rcrb
imul
clc
out
scas
fsubr
mov
mov
mov
insb
cwtl
in
mov
jmp
xlat
mov
dec
sarl
outsb
and
push
or
xor
mov
xchg
sub
adc
mov
ja
pop
addl
mov
add
cmp
adc
push
mov
and
or
std
shlb
mov
jb
shlb
jno
jecxz
push
aad
fdivrs
mov
bound
adc
sti
mov
inc
jecxz
mov
je
push
mov
stos
lret
sbb
jge
dec
mov
jbe
xchg
mov
dec
push
pop
xor
jg
and
jle
push
mov
cwtl
push
imul
aas
decb
and
sbb
addb
dec
sbb
cmp
add
dec
add
adc
aad
lods
jno
xorl
aas
lret
pop
sbb
popa
inc
pop
push
inc
and
add
loop
and
outsl
fdivp
aad
test
xchg
cmpsb
pop
insb
outsl
sti
int3
in
aas
mov
rcr
jp
jo
mov
xor
pop
inc
add
pop
adc
sbb
ret
sbb
loope
xlat
jecxz
cmpsb
dec
push
sbb
inc
in
xchg
mov
mov
mull
mov
fwait
mov
mov
rdmsr
dec
mov
cmc
mov
sbb
adc
test
adc
and
fnsave
test
in
bound
xor
xor
mov
jmp
mov
or
push
or
fwait
add
in
mov
push
inc
jecxz
pop
add
jg
inc
imul
cmp
imul
aam
cmp
mov
out
loopne
out
dec
mov
mov
lcall
xor
mov
in
cwtl
lods
jno
test
xor
add
push
mov
inc
mov
pushf
sbb
add
jmp
adc
mov
cltd
xorl
in
movsl
pop
cmpsl
je
adc
int3
adc
insb
xor
mov
push
cmp
push
add
in
movsl
lcall
fldt
mov
sbb
insb
inc
pushf
sarb
mov
stos
call
and
fisttps
pop
rcrl
mov
dec
xchg
push
xor
fsubrs
in
pushf
or
nop
cmp
dec
insb
or
mov
jb
dec
repz
out
add
or
iret
adc
xchg
mov
mov
dec
movsb
inc
push
jne
pushl
sbb
lret
mov
xchg
aas
lods
aas
pop
dec
mov
aaa
add
jg
jns
int3
sub
insl
adc
mov
cs
cltd
test
jmp
repz
cmp
mov
jns
push
jo
sub
push
lret
cs
aas
pop
sub
filds
lret
call
mov
nop
mov
xchg
dec
push
rorb
xor
outsb
outsb
xor
aad
jns
insl
sarb
fidivl
out
arpl
xchg
in
out
push
hlt
nop
adc
sar
in
cmp
push
inc
or
pop
test
push
icebp
outsl
jae
pop
xor
cmp
cltd
loopne
scas
or
add
stos
imul
repz
push
push
lret
adc
outsl
cmp
out
mov
popf
fdiv
scas
mov
sub
pop
mov
or
and
popa
repnz
icebp
hlt
das
aam
jo
xbegin
inc
pop
lret
or
adc
push
fcompl
and
dec
sub
mov
les
test
outsb
pop
int
mov
fcmovb
mull
and
adc
lds
fs
jge
xchg
adc
shlb
xor
call
in
pop
das
pop
pop
stos
test
push
adc
push
mov
out
dec
in
lock
mov
leave
sbb
clc
clc
ret
scas
pusha
and
push
dec
lahf
shlb
dec
cmp
scas
xor
mov
fisubrs
inc
pop
in
or
jecxz
xchg
dec
jle
ret
sub
xchg
mull
daa
lcall
add
imul
sub
fisttpl
loop
jg
inc
sbb
xchg
stos
icebp
xorl
aam
cmpsl
je
test
sarl
cmp
xchg
jecxz
popl
jle
hlt
inc
sbb
jb
mov
popa
mov
shlb
int
adc
or
daa
test
in
and
dec
retw
out
xor
popf
hlt
jmp
je
outsl
xchg
addb
mov
jae
fnstcw
jne
or
cwtl
xor
add
adc
incb
mov
ds
push
clc
std
mov
sub
pop
into
xor
pusha
jl
jns
cld
mov
outsl
in
mov
pop
pop
xchg
loopne
push
lahf
loopne
mov
xchg
xchg
imul
xchg
pop
mov
shrb
mov
cs
fcomps
xor
iret
cmp
call
jge
rcll
pop
aaa
jmp
or
imul
inc
addr16
inc
dec
inc
sbb
add
xor
pop
testl
fnstenv
out
and
sbb
aad
fmull
push
lret
push
enter
es
and
mov
push
adc
mov
fistpll
stos
inc
loopne
inc
aam
pop
adc
and
add
jmp
fildll
jle
cld
dec
jbe
cld
outsl
adc
out
aad
repz
xlat
sub
stos
mov
inc
loopne
lret
pop
testl
push
and
insl
insb
loop
inc
mov
pop
scas
stos
stos
imul
xor
lret
push
pop
sub
fmulp
cmp
push
int3
mov
loope
movsl
pop
mov
and
hlt
or
int
cmp
adc
popf
in
pop
in
sbb
dec
adc
push
pushf
std
ljmp
or
pop
pop
aad
xor
or
dec
cwtl
sub
cld
addr16
insl
cmpsb
mov
aas
add
mov
fldcw
sbb
mov
fst
mov
addr16
out
fwait
or
mov
outsb
scas
cmpl
loopne
dec
data16
and
xlat
mov
add
cltd
fstpt
pop
xchg
iret
xor
outsl
sub
jns
movsl
mov
mov
bound
jg
sbb
add
cltd
xor
cmp
pop
imul
dec
mov
call
cmpl
shl
xchg
outsb
sti
loop
jmp
sub
jns
shll
xor
dec
adc
fidivl
outsb
mov
xchg
test
ss
xorl
cmp
test
cmp
jne
imulb
push
cmpsl
pop
bound
sbb
mov
adc
cld
je
sbbb
mov
sbb
and
arpl
mov
mov
dec
mov
xchg
and
inc
xchg
clc
push
clc
faddl
and
pushf
pop
sub
lahf
push
outsl
add
test
mov
rcl
fchs
pavgb
enter
push
int3
mov
add
nop
sub
bound
xor
int3
pop
rcrb
es
sub
js
inc
js
sub
jb
jle
out
ss
and
adc
dec
popf
mov
sub
add
push
out
shlb
adc
xor
addl
mov
insb
sbb
mov
je
icebp
xchg
xor
dec
mov
clc
mov
sub
bound
sub
jg
jnp
in
fwait
enter
push
movsb
sbb
jmp
rcll
dec
mov
mov
movsl
pop
push
jne
aad
sti
test
pop
ss
cmp
mov
pop
inc
adc
sbb
inc
mov
xchg
les
push
int
and
cmp
fiaddl
inc
pop
cld
jne
mov
int
jnp
or
cwtl
push
scas
cmpsb
and
mov
bound
xchg
inc
xor
je
jmp
push
pop
push
stos
js
out
dec
inc
jmp
popf
xchg
mov
pusha
inc
les
mov
pusha
data16
cmpsb
aad
lock
sahf
sub
rep
adc
push
leave
dec
pop
inc
shll
pusha
xchg
sti
xor
dec
mov
sbbb
mov
mov
or
std
leave
imull
add
sub
mov
lret
and
xchg
adc
pop
add
ret
addr16
fbld
xchg
xchg
mov
dec
aam
adc
jle
popa
loope
mov
push
out
paddd
mov
cwtl
out
lahf
out
shl
pushl
jb
out
xor
inc
mov
pushf
out
xchg
jb
call
cld
cltd
push
push
adc
lret
js
or
stos
add
fwait
adc
dec
outsl
aad
bound
sbb
hlt
jns
jae
sub
fs
imul
jnp
dec
jns
dec
sbb
in
pop
ror
hlt
add
mov
jle
sahf
fcoml
lds
xchg
sbb
in
xchg
adc
pusha
or
sbb
fs
sahf
cmc
out
sub
pop
sbb
mov
clc
rol
fcompl
sti
or
sub
arpl
aaa
jnp
pop
or
xchg
or
daa
icebp
mov
dec
sbb
js
in
mov
sbb
sti
jge
call
mov
jl
dec
cmp
push
mov
dec
stos
xor
add
ret
movsl
dec
mov
mov
rcll
xor
ficompl
pop
push
cld
scas
inc
push
push
fdivrs
pop
lods
or
inc
adc
mov
mov
pop
jbe
push
lods
cmp
bound
andb
xchg
mov
push
movsl
fldt
inc
jo
lea
fldcw
and
add
hlt
cmp
ret
daa
imul
sets
std
icebp
test
fcom
xchg
movsl
leave
inc
jg
cmpsb
mov
pusha
inc
popf
das
or
fs
enter
push
sbb
mov
push
test
push
ret
and
fbld
cmc
lods
aad
nop
rcrl
mov
dec
sub
jmp
adc
icebp
add
push
fadds
xor
xchg
push
pop
fdivs
push
je
sbb
aam
inc
fistps
or
addr16
inc
xchg
dec
adc
and
idivl
lock
std
ss
stc
scas
pop
add
push
das
xchg
dec
je
cld
cli
inc
divl
cmpsl
ret
stc
cmp
sbb
addl
mov
sti
pop
fs
fimull
push
push
mov
sbb
jmp
subb
mov
mov
push
xor
iret
mov
daa
mov
mov
or
mulb
push
push
leave
je
mov
ljmp
loope
sub
stos
mov
cmp
adc
jnp
add
shr
push
pop
cld
and
xchg
out
into
or
popf
xorl
push
jb
fnstenv
ficoms
push
jge
jne
pop
rcl
jno
insl
xor
outsl
clc
sbb
cmpsl
push
aad
sub
pandn
shrb
or
lcall
ret
mov
cli
shlb
mov
insb
mov
ficoml
jae
jg
int3
mov
mov
push
lds
aas
jb
push
or
loope
nop
popf
xor
mov
fdiv
clc
movsl
cmpsl
pop
hlt
mov
es
xor
mov
test
mov
add
xor
lds
push
sbb
dec
pop
leave
lahf
rcrb
in
ss
stos
pop
add
jp
int
mov
jg
in
shll
mov
aam
pusha
sbb
or
stos
dec
out
mov
dec
in
pop
mov
push
pushf
test
test
mov
in
std
mov
lock
dec
jne
xor
or
lret
shlb
test
mov
jne
lock
mov
jecxz
and
mov
jae
adc
cmp
mov
adc
pusha
push
dec
mov
aas
movb
inc
xchg
pusha
lret
sbb
insb
add
nop
je
lea
dec
rclb
imul
nop
gs
and
data16
ljmp
aam
loope
nop
cmpb
xchg
shl
push
cwtl
sbbl
xor
adc
jge
scas
xor
mov
adc
mov
imul
mov
nop
inc
add
jo
movsl
xchg
mov
push
inc
shlb
push
cmp
popl
lret
pushf
leave
into
pop
out
or
sahf
jae
stc
stc
sbb
xchg
xor
push
jecxz
loope
fisubrl
ret
sbb
push
es
fisubrl
repnz
pushf
jge
stc
stos
test
push
je
bound
js
dec
lock
xchg
jl
mov
sbbb
dec
push
mov
or
movsl
jmp
jle
mov
sbb
xor
test
pop
fisubs
insl
imul
adc
add
pop
shl
xchg
lret
pop
scas
and
std
lds
rclb
lock
mov
int3
add
dec
movsl
arpl
rolb
movsbl
mov
push
pop
shrl
fldl2t
mov
ss
test
adc
sbb
sti
xor
iret
inc
insl
inc
jnp
arpl
add
pop
mov
shrb
push
add
cmp
jbe
mov
mov
mov
jl
cli
add
cmp
mov
push
add
arpl
sbb
xlat
mov
xor
lret
adc
stos
int3
pop
ss
pop
movsb
push
mov
sub
test
shll
pop
sub
mov
sbb
cwtl
add
cmpsb
xchg
mov
aam
sti
or
jge
rcrb
mov
ret
imul
dec
aaa
shll
addb
mov
jg
adc
mov
push
in
inc
push
fidivrl
mov
mov
inc
mov
mov
sbbl
dec
int3
push
es
adc
xchg
sub
out
mov
dec
jmp
int
xchg
jo
cmp
xor
xchg
add
rcrb
inc
mov
ret
shl
aas
mov
flds
jp
mov
imul
push
clc
std
add
out
nop
mov
push
shrl
data16
jle
lods
aaa
rolb
mov
mov
pop
lods
fmull
pop
add
inc
add
stc
inc
repnz
mov
cmp
mov
dec
mov
mov
sub
dec
dec
int
movsl
mov
fadds
and
push
or
mov
inc
bound
jp
inc
push
inc
inc
lods
adc
sbb
pop
adc
stos
aas
pop
push
sbb
lret
inc
dec
sub
fadds
push
xchg
into
or
mov
ret
in
in
or
xchg
and
mov
or
ret
popf
shlb
fcmovu
xchg
ffree
stos
test
mov
jp
mov
sbb
ffreep
loopne
fnsave
lahf
or
pop
mov
ret
lret
mov
outsl
pop
inc
push
push
fs
push
mov
inc
jae
mov
pop
cld
insl
dec
mov
jg
jge
adc
es
mov
imul
ds
xor
cmp
ret
mov
movsb
sbb
iret
in
mov
xchg
xor
push
or
adc
mov
mov
nop
adc
and
sbb
mov
xchg
jns
add
pusha
sub
ret
into
xchg
jo
or
and
sbb
into
pop
fsubrl
xor
xchg
ret
test
sub
fildll
prefetcht0
lahf
mov
ret
dec
cmc
loope
pop
int
stos
and
fstp
fsubs
add
jmp
sub
xchg
subl
jge
mov
loope
adc
mov
jo
scas
cmp
scas
push
les
sahf
lods
jb
mov
js
leave
insl
and
and
test
and
xor
mov
mov
push
clc
adc
add
icebp
jo
aaa
or
pop
fmull
mov
out
mov
repnz
pop
jnp
sub
testl
test
mov
stos
fildl
xchg
test
ljmp
and
adc
nop
mov
mov
inc
or
sbbb
add
add
mov
xchg
jo
fidivl
lret
andl
inc
test
popf
inc
mov
add
adc
mov
xchg
adcb
push
add
jg
jg
and
loop
and
inc
adc
lret
inc
dec
sub
cmp
out
inc
dec
dec
adc
in
scas
push
mov
dec
imul
loope
in
pop
jl
adc
testl
scas
fisubrl
pusha
leave
cmpsb
push
xchg
cmpsl
rorb
bound
test
jne
pusha
push
mov
sbb
arpl
shl
xchg
nop
arpl
fcoml
inc
aad
push
jae
ret
ljmp
cmp
pop
push
inc
stos
insb
dec
add
mov
jo
out
lcall
loop
pop
in
pop
mov
jp
sbb
icebp
push
packsswb
sbb
ljmp
xchg
fcmovne
repz
push
mov
push
jne
adc
cmpsl
outsb
add
fldcw
rcrb
iret
xchg
test
mov
and
mov
cmp
push
ret
dec
dec
nop
bsf
push
in
pop
call
ja
rcl
cld
cltd
outsl
xor
bnd
sub
in
mov
push
aaa
cli
jg
imul
fcoml
pusha
xchg
pop
stos
cmp
je
xor
icebp
pop
jp
xchg
push
jg
fs
pop
iret
mul
adcb
jo
xor
movsb
shrl
adc
sahf
push
cltd
stos
int
mov
mov
popa
icebp
jb
jno
inc
sbb
jmp
pop
test
and
andl
push
inc
out
sbb
loope
or
push
push
pop
shlb
aaa
imul
addl
nop
mov
pop
imul
pop
inc
sahf
push
mov
dec
add
in
sbb
cmp
mov
mov
std
sbb
and
adc
nop
ret
outsb
dec
stos
outsb
mov
ficompl
fstpt
gs
daa
cmp
mov
or
pop
gs
std
sub
sub
jp
mov
imul
xchg
sbb
dec
jae
mov
test
loope
xlat
cli
shlb
ror
test
xchg
les
enter
jnp
int
lods
lock
push
loop
jle
fldcw
and
push
js
push
or
popa
push
aam
inc
rorb
inc
outsl
cmp
cld
mov
loopne
adc
xchg
shrl
inc
pop
scas
mov
cmp
cltd
sbb
andb
xchg
add
ljmp
cmp
pop
cmpsb
dec
fstpt
in
cmpsl
out
loope
inc
out
cltd
add
adc
inc
es
in
cltd
xchg
adc
lcall
xchg
pop
jbe
jns
cmpsl
clc
je
je
js
lds
test
into
loopne
lfs
and
cmc
out
inc
out
fdivl
iret
inc
or
inc
inc
outsb
idiv
mov
scas
cmp
dec
push
or
inc
xlat
fbld
int3
and
sti
les
movsb
inc
scas
xchg
pop
nop
lods
mov
shrl
inc
sbb
inc
insl
cwtl
lock
mov
loop
jge
xchg
inc
test
mov
sarl
fstp
into
mov
imul
es
mov
sbb
testb
rclb
idiv
outsb
mov
lret
sub
dec
stos
xor
mov
das
or
cwtl
xchg
outsb
les
push
pop
ljmp
inc
xchg
or
js
jbe
xchg
adc
pop
mov
movsl
dec
mov
sbbb
fwait
insl
fcoms
xor
pop
mov
cmp
add
sub
fistl
or
and
dec
or
outsb
mov
xor
jbe
sub
test
inc
andl
dec
repnz
xchg
ja
dec
out
dec
jae
add
xor
jmp
xchg
add
cwtl
mov
out
and
jae
mov
fbld
sbb
mov
js
xchg
fdivl
icebp
les
fs
lock
inc
stos
std
sbb
int
clc
popf
testl
stos
mov
sub
mov
cmp
sbb
push
xlat
pop
lock
aaa
push
push
jg
or
sbb
jmp
insb
xor
ret
test
repz
cmp
js
pop
movsl
push
xchg
xchg
push
cmp
in
push
cltd
jno
adc
clc
icebp
push
lcall
ret
lock
repz
mov
add
xorb
jl
or
mov
mov
push
inc
sbb
movq
lahf
scas
dec
repnz
jo
cmpsb
bound
pop
shll
xor
cltd
cltd
popf
dec
insl
ljmp
leave
jo
adc
movhps
push
inc
cmp
push
sub
inc
int3
xchg
or
outsb
pop
std
and
mov
cmpsl
sbb
xor
dec
jbe
xchg
fbld
insb
sahf
dec
cmp
sbb
or
mov
lock
inc
imul
popa
test
inc
mov
and
out
jmp
pop
icebp
movsl
fdivrl
std
es
mov
stos
jge
rol
call
xor
or
fpatan
xchg
mov
ret
mov
aaa
test
xor
sbb
mov
add
roll
adc
aaa
dec
fldl
pop
fst
jp
sub
rcll
jg
pop
cmp
push
sbb
mov
push
or
mov
adc
insb
add
ficoml
push
mov
nop
cli
dec
loop
mov
and
scas
jne
mov
mov
adc
lcall
iret
leave
adc
and
or
xor
out
sbb
adc
rcr
in
repnz
and
insl
cmp
imul
xchg
subl
mov
iret
or
into
out
inc
add
test
in
fiadds
push
inc
push
out
ds
scas
in
mov
hlt
mov
aam
pop
ja
inc
je
into
lcall
loope
aad
jnp
std
dec
stos
push
ljmp
inc
jmp
mov
fstpt
mov
lret
mov
fcmovne
mov
mov
daa
and
mov
lcall
bound
movsb
cmp
sti
adc
jne
data16
jp
pop
out
hlt
call
sub
mov
sbb
sub
cmpsb
mov
inc
cmc
fwait
or
faddp
and
out
mov
out
fstps
cltd
jne
adc
sub
xchg
or
adc
jmp
mov
jle
jne
loope
pop
push
pop
mov
adc
pop
pop
rcll
push
push
jns
mov
mov
mov
ds
sub
out
adc
cs
gs
push
dec
xor
push
add
enter
push
imul
in
repnz
nop
outsb
outsb
aaa
mov
out
push
fdiv
mov
jnp
and
fwait
cmp
mov
mov
push
andl
jae
js
dec
adc
mov
lahf
popf
or
sbb
jo
jg
jp
dec
insb
idivl
inc
or
mov
test
cmp
cmp
idivl
sub
xchg
cmpsb
jge
add
push
push
test
adc
mov
test
mov
xchg
out
cs
push
xor
ds
mov
addr16
pop
add
arpl
mov
ret
and
loope
jno
mov
lock
aaa
stos
add
pop
dec
aad
sub
mov
icebp
mov
stc
hlt
rcrl
xlat
sahf
gs
add
into
push
movsb
xchg
enter
cli
xchg
xor
imul
jne
pop
mov
pop
stos
pop
dec
pop
aas
push
stos
cwtl
stos
mov
int3
dec
popf
sub
xlat
in
popa
xor
adc
jb
xchg
pop
imul
push
call
stos
xchg
push
std
lock
pop
js
dec
das
inc
sbb
add
cwtl
xor
arpl
sub
xchg
imul
jo
cmp
loope
push
or
je
or
lods
and
jae
sbb
pop
or
xchg
fucomp
int3
aam
subb
movsl
nop
cmp
mov
pop
fwait
add
push
sarl
mov
das
movsb
cmp
cmpsl
push
jb
movsl
inc
out
mov
sbb
int3
ficoml
and
jecxz
dec
ror
jns
mov
xlat
lea
out
in
test
xchg
pop
mov
jge
mov
mov
mov
adc
add
cs
icebp
mov
cmp
sbb
pop
jmp
mov
add
sub
into
bnd
popa
cs
sub
ljmp
mov
and
ja
ret
mov
enter
push
aad
sbb
dec
std
push
mov
pusha
das
aad
fisttpll
lret
xchg
mov
mov
jo
lods
adc
dec
jns
mov
pop
cmovns
jg
cmpsl
cmp
adc
shlb
fs
movsb
pop
cs
inc
shr
arpl
stos
mov
and
inc
mov
sbb
cs
mov
jmp
mov
xchg
inc
call
stos
xor
sbb
out
movb
fimull
stc
mov
sbb
push
in
cmpsb
xlat
add
dec
sub
sahf
ss
and
jns
lcall
adc
fs
and
xor
fnsave
nop
push
mov
ss
repnz
andb
pop
inc
cmc
inc
inc
daa
or
jl
add
add
mov
xchg
sti
pop
sti
and
xchg
test
insb
mov
lock
loope
mov
push
xchg
data16
mov
lcall
push
lret
jae
mov
out
add
stos
pop
fcompl
push
jmp
pop
mov
icebp
mov
add
push
hlt
cli
mov
xchg
fisttpll
ficoms
jbe
sub
xchg
pop
or
push
sbb
sahf
add
dec
jnp
dec
ror
jb
add
push
jg
cmp
gs
flds
sbb
clc
pop
fstl
sbb
fs
decb
shlb
std
mov
jae
push
mov
sub
inc
stos
ror
int3
push
repz
popa
arpl
or
fwait
jno
idivb
ljmp
je
adc
sbb
das
jl
xchg
mov
and
sub
loopne
ss
and
testb
xchg
call
in
or
stos
lahf
and
mov
fisttps
insb
ret
jns
jl
push
push
sub
faddp
rclb
pushf
cwtl
jle
jge
insl
aas
je
pop
xlat
bound
and
pop
mov
inc
movb
out
xchg
int3
cmp
add
cmp
leave
rolb
ret
jb
test
ret
push
push
or
mov
xor
fadds
pusha
in
fistl
jmp
pop
out
mov
out
mov
ds
lods
fucomip
shll
mov
test
cmp
mov
xor
mov
xchg
scas
jg
lret
xchg
ficompl
fldl
jne
xchg
lods
mov
jno
sti
pushf
push
inc
jns
hlt
sub
das
rcrb
test
and
repnz
data16
adc
mulb
pop
fldt
cwtl
inc
sbbl
cld
fldenv
mov
addr16
jp
jmp
inc
std
stc
and
shrb
out
pop
out
push
inc
lock
lret
bound
sub
fsubrl
adc
cmp
rcr
leave
movl
lea
lcall
cmp
adc
test
mov
cmp
pop
or
fnstsw
sub
dec
call
mov
inc
out
push
inc
mov
mov
movsb
cmpsl
sbb
in
mov
sub
mov
mov
push
adc
cwtl
insl
and
cli
shll
jge
pop
int3
dec
lods
or
fisttps
in
cmp
sbb
dec
mov
mov
mov
sbb
test
jae
cld
fsubl
jae
pop
mov
test
gs
es
adcl
cmp
jns
orl
sbb
cmp
call
pusha
gs
ljmp
cmp
je
add
or
sbb
xor
cmc
cmp
test
mov
out
sub
ljmp
sbb
dec
rcrl
add
and
inc
mov
pushf
out
xor
es
incb
inc
pop
mov
dec
ja
or
jl
enter
sub
mov
push
addr16
sub
aaa
pop
test
aad
pop
xchg
bound
aad
das
mov
insb
mov
mov
imul
mov
inc
inc
fimuls
xchg
mov
push
in
ret
and
into
scas
mov
mov
and
out
cs
lret
ret
pop
ss
mov
push
cltd
leave
sub
inc
stos
sbb
fucom
sbb
pop
scas
into
jne
and
lahf
sub
sbbl
inc
cmpsl
mov
xchg
inc
ja
push
lods
add
push
mov
sar
xor
dec
int3
test
aaa
jecxz
add
jne
add
sub
adc
jnp
lock
rorl
or
fxam
mov
and
shlb
pop
inc
leave
aad
inc
movsb
adc
jne
pushf
mov
mov
cmc
sbb
movsb
mov
sub
mov
mov
add
les
cwtl
sub
movsb
lock
popa
icebp
sbbl
adc
push
sub
mov
and
xor
fisubrs
mov
xchg
inc
test
push
mov
lcall
or
addr16
jle
add
xchg
ret
in
dec
int
pusha
jg
mov
stc
cld
sbb
xor
pop
arpl
mov
mov
sub
pop
loop
jae
adc
je
cmp
or
lahf
xor
insl
inc
loope
push
shlb
cs
mov
jmp
push
adc
or
and
xor
ja
ljmp
add
adc
andl
fmulp
loope
mov
jmp
insb
mov
loop
fiaddl
sub
mov
ds
mov
jp
sub
cwtl
testb
imul
aad
push
cmp
dec
test
inc
dec
adc
dec
xor
jo
fwait
dec
pop
or
inc
mov
xchg
aad
popa
les
mov
gs
mov
repnz
and
cmp
jnp
stc
lods
jmp
into
arpl
sub
call
push
add
inc
and
add
or
adc
adc
subb
sub
std
jne
stc
fistpll
mov
ds
lock
and
leave
mov
pop
push
imul
or
dec
sub
mov
outsb
add
mov
dec
mov
xor
mov
and
push
aad
adc
and
push
test
mov
imul
negl
ds
gs
mov
sbb
mov
les
jp
lahf
sub
fcomps
leave
sbb
cmp
in
mov
scas
seto
mov
xchg
cld
dec
jb
inc
arpl
hlt
add
dec
jmp
scas
add
sub
mov
mov
stc
popf
cld
sub
insb
sbb
push
mov
sti
mov
xor
loope
fdivs
adc
jbe
cmp
cltd
test
cwtl
aad
fstpt
loopne
les
push
or
test
pop
out
movsb
test
pop
cmp
xchg
mov
enter
jecxz
mov
roll
adc
cmpsb
add
outsl
dec
call
pop
loopne
sbb
and
arpl
mov
scas
movsl
xchg
xor
cmp
jecxz
scas
fldenv
or
push
loop
add
sub
in
ja
outsb
pop
ljmp
jno
shl
xchg
push
sbb
rcr
sub
sub
cmp
push
out
mov
push
jecxz
xor
cmp
mov
cmp
sub
pop
adc
xor
xchg
idivl
leave
iret
cltd
cwtl
xchg
jno
pop
cmp
push
xchg
adcb
and
pop
mov
xchg
int
loope
cld
sti
test
mov
and
outsl
loop
or
addr16
addl
mov
adc
inc
aam
loope
xchg
adc
pop
dec
je
test
les
test
out
or
ret
fucomp
xor
mov
sarb
mov
test
mov
sbb
jge
mov
cltd
div
pop
mov
mov
nop
inc
push
clc
push
bound
movsb
adc
rorb
adc
stos
aad
sub
push
jne
shrl
sub
inc
inc
jmp
mov
test
outsb
movsl
fdivr
inc
mov
movsl
pop
out
into
mov
mov
or
sub
cli
pop
sbb
mov
iret
jp
lcall
pop
in
aad
fstpt
sar
sub
sbb
daa
sti
imul
mov
ret
fidivs
fdivp
mov
cmp
leave
dec
adc
fwait
outsl
pop
or
cmp
xor
xor
into
jl
movsl
jae
sub
inc
and
pop
adc
adc
inc
mov
cmp
mov
rcll
cmp
pop
mov
fstl
dec
mov
lods
and
mov
sub
test
outsl
ss
push
pop
or
xchg
jl
and
push
lret
leave
push
das
mov
imul
and
mov
cmc
push
test
cmp
mov
dec
push
btl
jg
inc
shrl
jmp
jl
pop
ret
inc
or
inc
mov
push
pop
outsl
cltd
movsb
pop
out
or
cmp
ljmp
mov
adc
xor
add
lds
fisttpl
out
or
fildll
cmp
push
sbb
sbb
adc
in
push
jle
out
add
and
test
sbb
jmp
hlt
push
cmp
roll
pop
adc
sbb
das
dec
sbb
loopne
test
movsb
push
sub
jnp
cmpl
insl
es
scas
and
shrl
stos
movsb
popf
xchg
jbe
daa
add
bound
std
negl
pop
inc
shlb
dec
push
popf
dec
mov
mov
push
js
sti
pop
mov
fbld
stos
outsl
je
out
xchg
sbb
or
xor
xor
sti
andl
jp
in
rcll
mov
jg
mov
push
sub
sbbl
xchg
pop
gs
call
jl
enter
xchg
push
inc
enter
in
pop
in
mov
sub
mov
inc
push
add
lret
adc
mov
sub
stos
mov
mov
add
adc
aam
push
pop
shll
rorl
faddp
pop
and
insl
je
sbb
clc
cmpsl
mov
add
jle
pop
add
cld
inc
jne
sbb
out
xor
push
pushf
stc
pusha
repz
jb
int
fidivrs
pop
sar
in
mov
inc
sbb
mov
mov
lret
add
sbb
jge
int3
scas
ds
ja
shll
adc
in
mov
daa
loop
ljmp
mov
divb
and
xchg
adc
mov
movsb
dec
adc
negl
call
js
mov
and
ret
dec
cmp
shll
xchg
adc
cmpl
je
hlt
inc
sarl
fidivl
lahf
xchg
push
add
xor
cmp
out
mov
jle
sahf
pusha
mov
lock
inc
adc
cmp
outsb
adc
inc
mov
cmp
jns
subl
push
adc
or
xchg
jmp
mov
ds
pop
stc
adc
xor
inc
loopne
mov
mov
cmp
ficoml
aam
popa
sti
mov
out
pop
ja
xchg
xchg
cmc
pop
in
and
std
xchg
mov
rcrl
xchg
cmp
inc
push
in
add
push
ja
lods
mov
jo
sub
scas
outsl
fidivrl
mov
movsb
rol
mov
xor
sub
testb
outsb
inc
mov
adc
pop
mov
into
mov
inc
and
push
insb
gs
imul
mov
jnp
nop
cmp
cmpsb
inc
fisubrl
xchg
jp
loop
scas
ja
cli
jo
dec
pop
outsl
loope
jle
out
scas
xor
push
pusha
pop
mov
jecxz
jnp
pop
call
fucomip
jo
fdivr
in
imul
pop
lods
insb
xchg
repnz
sbbb
sahf
ficoml
pop
xor
mov
rol
mov
xor
or
test
add
and
or
push
cmp
out
mov
push
cli
push
mov
jge
or
sbb
jl
data16
sub
jge
mov
aas
and
repnz
jle
fiadds
xlat
dec
xchg
mov
int3
pop
sub
daa
scas
dec
lahf
jl
dec
fistpl
scas
push
cmp
ret
aad
mulb
push
out
lahf
jns
xchg
ret
iret
jp
jmp
inc
push
jmp
sbb
rcl
imul
pop
sub
sbb
call
pusha
movsb
bound
push
mov
test
adc
mov
sti
xchg
sub
xor
arpl
lret
rcl
and
add
bound
mov
lretw
mov
add
in
mov
stos
movsb
gs
std
lds
adc
gs
inc
push
lods
scas
popf
out
pop
movsb
dec
fsts
bound
bound
das
cld
arpl
jo
aaa
jecxz
fucomip
and
loope
pop
inc
cmp
aaa
push
push
in
dec
sbb
orl
fstpl
sahf
jno
arpl
dec
mov
lods
xchg
popf
or
enter
gs
jb
inc
in
push
lds
mov
push
or
enter
mov
shll
ljmp
dec
jl
inc
xlat
jne
fsubl
push
call
test
leave
mov
rolb
add
xchg
test
pop
push
mov
xchg
mov
fistpl
dec
push
lahf
pop
and
and
das
icebp
mov
test
out
imul
imulb
testb
stos
sbb
adc
xchg
push
and
lea
cli
sbb
cld
and
adc
add
daa
add
inc
insl
pop
test
mov
repnz
das
adc
pop
pop
jo
xchg
add
mov
pop
jg
es
jne
cli
clc
cwtl
sti
cmpsl
in
lret
push
add
js
or
inc
pushl
jg
into
test
push
aam
lea
inc
xchg
pop
pop
test
sub
cmp
cwtl
inc
inc
xchg
sub
movsb
xchg
hlt
jnp
stc
push
inc
mov
xchg
pop
xor
repnz
xchg
jmp
adc
fistpll
add
lahf
push
dec
xchg
jl
mov
mov
aad
rorb
call
or
pusha
lock
fstpl
mov
jo
fwait
dec
adc
sub
mov
stos
ljmp
sti
add
sub
sbb
leave
mov
iret
jp
cli
and
mov
rcll
loope
fs
ret
jbe
popf
insl
out
cs
bound
aas
mov
pop
fmuls
mov
scas
xchg
leave
shrl
jne
rcrl
dec
rcll
orb
jecxz
dec
imull
les
dec
jne
xor
fisttpl
inc
subl
cmpsl
je
outsl
and
enter
sbb
pushf
mov
push
ds
inc
pop
inc
fwait
jne
les
sub
sub
pop
xchg
jne
inc
add
out
xor
mov
dec
fwait
ds
das
repnz
jg
add
cmpl
icebp
mov
sub
push
xchg
scas
mov
and
lcall
adc
cs
xchg
jns
xor
lods
mov
inc
push
jns
add
add
add
je
stos
aad
push
out
pusha
lea
adc
or
jecxz
fs
dec
iret
int3
xchg
insl
into
sub
rcr
xlat
test
xor
push
mov
rcrl
jnp
adc
insl
mov
jecxz
nop
test
sub
arpl
gs
fcomps
or
pusha
in
fsubrl
cmp
pop
fists
mov
test
mov
mov
sbb
ljmp
stos
lret
xchg
dec
xchg
mov
roll
mov
push
push
fistpl
pop
insl
sti
and
sbb
test
std
mov
xor
cli
push
cmp
pop
push
dec
and
jnp
cmp
and
and
adc
out
sub
jo
xor
inc
mov
imulb
sbb
fcoms
mov
cmp
xchg
push
jg
xor
inc
movsl
inc
cmp
mov
popf
add
ss
rcr
pop
notl
sti
add
outsl
mov
add
jns
mov
jecxz
mov
lcall
adc
mov
scas
mov
into
xor
ret
mov
pop
mov
and
mov
push
cwtl
jecxz
adc
pushf
subb
inc
test
repz
das
outsb
adc
xchg
cli
popf
or
cmp
xchg
add
jo
cs
mov
jo
jl
lods
addb
fldl
icebp
dec
je
imul
jl
scas
adc
repnz
inc
or
scas
jns
mov
iret
nop
push
inc
jmp
adc
pop
mov
addl
jg
scas
mov
add
dec
ljmp
out
add
icebp
jbe
dec
jno
cmp
lea
mov
or
pop
std
cmp
xchg
ret
mov
stc
mov
xor
rclb
mov
shlb
jno
pushf
lcall
in
loope
dec
js
cmp
adc
and
ljmp
testb
es
sti
sub
sti
push
add
inc
adc
inc
xor
pop
add
mov
mov
or
insl
mov
testl
mov
fisubrl
ja
in
dec
pop
jecxz
pop
or
movsl
sbb
push
xor
cmp
pop
aad
ja
jp
les
add
push
or
sub
xchg
push
cmp
sbb
idivl
xchg
cmpsl
sub
out
stos
fisttpll
jns
outsb
inc
mov
push
mov
loope
repnz
addr16
clc
mov
adc
gs
arpl
jle
int3
mov
cmp
sbb
add
xor
jne
mov
add
mov
or
repnz
jno
rolb
ds
push
mov
pop
insb
or
adc
nop
xchg
mov
rcrl
int
push
stos
dec
stos
push
or
in
sbb
xchg
jp
cwtl
mov
shl
aaa
xchg
sbb
out
cmp
mov
sbb
lods
mov
mov
ljmp
rcrb
jae
aas
push
mov
jmp
outsb
xchg
push
sbb
fdivr
inc
cmp
mov
dec
mov
gs
cmp
gs
add
jp
pop
loopne
jbe
xchg
cs
ja
sbb
pushf
fisubl
js
mov
and
adc
loope
test
scas
xor
add
push
or
out
adc
mov
aaa
repnz
movsb
rcll
js
sub
mov
es
mov
jmp
into
and
outsb
test
lock
sahf
loopne
mov
ja
pop
dec
jns
roll
repnz
iret
into
jge
inc
xlat
pop
ds
rorb
pop
xchg
outsl
pop
aas
cmp
popa
rcrb
aad
cmp
cmc
push
inc
movsb
adc
cmp
divb
sub
inc
mov
aaa
daa
and
and
inc
les
push
pop
int3
test
mov
repnz
pop
shrb
push
xor
push
sbb
testl
decl
hlt
pushf
xor
jo
lds
cmp
xchg
js
adc
in
rolb
sub
and
mov
sbb
pop
push
loop
aad
sbb
xor
sub
in
enter
out
pop
lcall
insl
sbb
push
out
lcall
xchg
mov
subl
pop
inc
insl
xor
sub
jge
push
push
nop
in
jb
outsb
adc
adc
stos
xor
cld
subb
mov
xchg
js
sbb
dec
and
fistl
outsb
stc
mov
enter
pop
jmp
jns
hlt
bound
push
icebp
jle
in
mov
test
add
inc
stos
sbb
js
and
das
test
aam
mov
xchg
xchg
out
scas
je
dec
push
mov
push
adc
aas
sub
push
movsl
sahf
add
stos
xor
inc
xchg
js
inc
out
pop
shlb
stos
mov
lods
pop
mov
outsb
call
lods
scas
fisubl
les
hlt
push
in
je
iret
inc
cltd
dec
aam
inc
repz
movsb
fsubrs
jg
int
pushf
inc
mov
sarl
mov
pop
push
insl
pop
xchg
mov
dec
and
jmp
dec
jl
je
data16
adc
push
sub
mov
pop
jmp
push
push
mov
sbb
cmpsb
mov
and
sbb
sub
push
adc
or
add
mov
loop
jne
rclb
pop
in
dec
or
push
pusha
stos
inc
pop
adc
clc
ljmp
lret
ljmp
push
out
fcom
fs
out
popa
mov
sub
je
inc
outsl
sar
ds
frstor
mov
mov
mov
jnp
sti
jle
clc
in
lods
cwtl
cltd
mov
inc
pop
and
push
jae
xchg
std
addl
pop
push
subl
dec
mov
jmp
stc
jb
and
aad
jmp
xchg
and
adc
out
mov
mov
add
inc
outsb
add
and
lods
mov
sarb
xor
test
sti
and
and
pop
jnp
add
cli
dec
pop
pop
add
xchg
loopne
or
rcrl
andb
inc
mov
inc
nopl
xchg
pop
push
sarb
push
mov
dec
inc
sahf
pop
and
je
stos
and
in
pop
das
mov
cwtl
push
idivb
int
mov
hlt
hlt
ss
jl
mov
xchg
or
test
xchg
jbe
mov
scas
fildll
cmp
ret
inc
sbb
jle
adc
fadds
mov
gs
mov
sub
fcoml
sti
xchg
sbbb
xlat
call
mov
test
fbld
push
mov
push
sub
es
movsb
dec
mov
xor
push
imul
loopne
inc
mov
jae
mov
addr16
fidivs
or
popf
loope
push
aas
sub
jo
cmc
adc
leave
xlat
test
pop
pop
push
cmp
adc
ret
ud2
dec
stc
stc
and
jbe
jl
xchg
icebp
mov
jne
push
iret
xchg
pop
pop
push
aas
dec
fldl
cmpl
dec
leave
insl
mov
xchg
movsl
lahf
cmp
in
xor
das
cmp
lds
movb
push
shll
sub
pop
jne
push
pop
push
jno
push
or
fldt
insl
lea
lods
divb
inc
int3
shll
inc
in
inc
cwtl
jle
addb
dec
or
sub
int3
cltd
sbb
fmull
cwtl
int
push
outsb
mov
pop
scas
add
xchg
loope
cmp
xchg
mov
out
into
jnp
xchg
xchg
out
jp
loope
nop
pop
cmp
icebp
jae
mov
xor
out
mov
jbe
jne
cmpsl
jnp
test
or
cmc
std
mov
outsb
mov
sub
push
out
shlb
dec
xor
sbb
lods
test
push
movsb
subl
push
sub
push
aas
stos
cmp
ficompl
adc
in
fchs
mov
scas
jl
and
or
int
xorb
xchg
jo
add
iret
movsb
clc
mov
push
hlt
pop
jns
jo
fistpll
inc
icebp
pop
lcall
les
lcall
dec
movb
xchg
int
pop
adc
loope
call
mov
stc
sub
roll
ret
mov
xor
mov
add
dec
xchg
dec
dec
movsl
rcll
sbb
stc
mov
fstl
push
push
and
sbb
push
and
aam
sbb
and
jecxz
mov
cmp
push
test
aam
into
aad
mov
testl
inc
gs
cmp
mov
cmp
add
cmp
orps
sbb
sub
out
push
push
das
cmpsb
xor
inc
and
dec
sub
js
and
insb
mov
outsb
mov
push
push
cmpsl
sbb
insb
pop
add
push
es
mov
jo
pop
or
clc
sbb
xor
cli
movsb
gs
xchg
or
cmp
arpl
add
cmp
mov
sub
jmp
xchg
dec
imul
xor
sbb
mov
jecxz
jecxz
adcl
lahf
hlt
mov
push
sbb
jl
test
push
pop
mov
xor
stc
addr16
loope
jae
pop
cmp
add
mov
xor
in
jae
mov
xor
jb
and
cmpsb
and
lock
xchg
pop
test
aam
xor
or
insb
divl
insl
pop
jle
sub
sub
push
pop
ss
lods
nop
das
aaa
adc
rcrb
mov
clc
cmp
aas
into
imul
sti
inc
repnz
test
insb
inc
mov
xor
imul
andb
in
add
out
adc
sbb
sub
clc
subb
jmp
jbe
add
mov
scas
push
sbb
jno
or
test
out
cmp
inc
pop
mov
outsl
dec
arpl
rclb
cltd
pop
ds
pop
sub
adc
fwait
loop
dec
fsubs
or
cmp
fidivrs
xchg
or
cmp
inc
and
adc
and
in
insb
mov
inc
test
rorl
jmp
or
mov
sti
sbb
lock
jmp
mov
scas
jno
insb
lods
popa
sub
iret
outsb
cmp
mov
mov
pop
dec
cmp
iret
and
push
stc
es
lods
mov
mov
pop
or
jae
cmp
fsub
pop
cmc
addr16
sahf
adc
cmpsb
pop
repnz
push
loope
mov
jecxz
scas
xchg
sbb
xor
and
mov
push
xlat
lods
rol
jo
fsubs
add
pop
scas
cs
popf
cli
vmovhpd
mov
mov
test
insl
aas
sub
push
jle
mov
loopne
popa
cmp
cmp
jl
xor
push
mov
inc
stos
call
cs
mov
and
adc
out
sub
fsub
lods
jmp
push
loop
fildl
or
pop
mov
insl
fadds
dec
fisubrl
sbb
add
aaa
dec
cmp
add
lea
push
addr16
xchg
inc
add
lods
orl
xchg
call
xchg
push
test
pushf
push
pushf
out
or
outsb
cmp
adc
ljmp
shll
dec
sub
jmp
loopne
xor
mov
lret
mov
aaa
mov
movsb
cmpsb
test
inc
pop
or
xchg
pop
xchg
inc
jno
sbb
xor
or
jbe
dec
aad
lock
xor
xchg
repz
mov
xchg
repnz
icebp
fld
push
xchg
movsl
lock
out
mov
cmp
jbe
jb
push
pop
mov
stc
call
inc
or
mov
sub
mov
or
jbe
add
jecxz
test
arpl
cmp
jno
scas
push
push
repnz
fmulp
aam
jbe
fwait
jmp
out
push
in
popa
mov
lock
xlat
push
jbe
dec
stos
rclb
mov
mov
jae
jl
int
daa
jno
lods
sbb
cmp
or
jbe
stos
push
jo
jnp
and
shrl
add
xor
rorb
paddw
aad
in
sti
push
icebp
or
cltd
bound
in
sub
fdivrl
or
lcall
mov
mov
inc
mov
cli
and
lods
push
jmp
or
push
push
cld
es
add
mov
add
test
add
in
or
in
mov
lea
pop
lock
ss
mov
push
outsl
and
sarb
xchg
aaa
mov
lock
int
sbb
stc
and
mov
test
add
in
fcoml
xchg
sbb
sub
pusha
xchg
and
imulb
pop
mov
pop
test
data16
push
sub
inc
fstl
test
mov
add
aam
in
mov
lock
jmp
fst
fidivl
ja
lret
ds
shll
and
xchg
mov
push
xor
jg
xor
mov
ret
ja
test
jb
push
test
push
mov
cltd
inc
dec
cmp
cmp
mov
in
jae
shll
sub
in
call
incl
lods
add
test
mov
lret
mov
out
ret
or
push
pop
pusha
pop
das
popa
dec
daa
sub
adc
shrb
stos
xchg
jmp
jae
xchg
sub
movsb
pop
rolb
std
dec
cltd
mov
imul
sbb
push
in
out
sub
sub
push
mov
arpl
mov
jp
inc
inc
pop
repz
les
xchg
das
dec
lahf
inc
lds
imul
add
mov
add
and
or
es
jp
mov
cmp
test
sub
cmp
inc
add
mov
outsb
out
xor
cmp
pop
lret
push
std
push
mov
jge
ja
cwtl
loop
pushf
sbb
aaa
bound
pushl
sbb
inc
push
mull
or
and
sub
add
jmp
fidivs
pop
inc
sub
ficoml
or
pop
sbb
sbb
mov
orb
add
sbb
inc
lock
ficoml
fstps
subl
leave
xor
push
dec
xchg
pop
lds
sbb
call
adc
add
shrb
push
mov
pushf
push
cmp
ljmp
stc
stos
cmc
ffreep
cs
or
dec
xor
stos
dec
or
gs
cmp
subl
dec
push
test
push
jmp
mov
fsts
adc
sbb
icebp
push
hlt
movsl
rorb
stos
cmp
inc
and
in
pusha
test
mov
sbb
inc
mov
repz
mov
dec
imul
jecxz
jae
loope
addr16
jp
mov
inc
int3
arpl
sbb
mov
dec
lea
cmp
pop
popa
dec
inc
dec
cli
jb
in
pop
cld
popf
aad
push
in
jg
add
pop
add
aad
and
cltd
aaa
dec
jp
jne
xor
iret
test
imul
inc
push
movsl
cwtl
in
data16
jns
sbb
cmp
mov
jecxz
aas
dec
ljmp
sub
fstpt
inc
out
inc
add
adc
inc
cs
nop
les
shll
mov
mov
scas
in
inc
jne
lods
xor
cwtl
push
sub
xor
pop
inc
sub
push
cld
ficoms
mov
lret
or
adc
push
int
xchg
cmp
xchg
rep
push
mov
gs
loope
cmc
imull
fisttpll
int
fcmovbe
cmp
lods
inc
ljmp
cmp
mov
cmc
and
xlat
data16
fndisi(8087
mov
xor
cmpsb
xchg
bound
and
ljmp
icebp
adc
cmpsl
sahf
out
fincstp
jecxz
cmp
pop
imull
lret
cmp
push
stos
and
pushf
fisubrl
lahf
inc
scas
div
push
add
pop
pop
xchg
jg
popf
jp
and
push
jle
mov
testb
mov
les
jnp
std
dec
xor
test
loope
int3
pop
stc
or
mov
xchg
repnz
cmpsl
jmp
push
dec
bound
inc
xor
adc
mov
mov
rcr
dec
dec
and
jmp
lods
push
lcall
sbb
sbb
push
cmp
movsb
outsb
out
sub
pop
or
inc
pop
leave
rolb
loope
jae
xchg
loop
out
clc
sub
stos
jbe
or
insb
lods
loopne
std
pop
hlt
cmp
inc
dec
lcall
and
mov
shll
push
outsb
rol
xchg
cmpsl
popa
push
outsb
loopne
in
and
aad
xchg
inc
scas
rorl
cmpsl
push
faddl
sub
outsl
sub
mov
rcrb
adc
bound
mov
xchg
stos
lahf
inc
dec
push
es
data16
repnz
shlb
adc
test
ds
icebp
push
call
ffreep
cltd
fsub
mov
test
xchg
jl
int3
lds
loopne
mov
and
aaa
out
loopne
imul
faddl
mov
out
insb
idivl
push
orb
lcall
sbb
push
jg
rcrl
xchg
xor
push
fnstsw
jl
and
das
aas
lock
insb
or
xchg
sahf
pop
xchg
mov
incb
push
dec
bnd
and
pop
mov
mov
jne
cmp
push
cwtl
loopne
cmpb
sahf
shrb
fstpt
mov
xor
fldt
ds
xor
rorb
insl
leave
pop
or
out
cmp
inc
stc
push
and
stc
cmpsl
arpl
in
push
repz
sar
push
int
insl
loope
mov
popa
mov
jnp
sbb
jl
push
aas
aaa
or
inc
sbb
divb
js
movsl
add
stc
lock
jle
ljmp
out
xchg
loopne
jne
jmp
cmp
xchg
mov
mov
ja
dec
push
in
inc
fisubl
mov
addr16
popf
or
or
sub
xor
outsl
add
inc
or
ror
mov
ds
sub
sbb
mov
insl
test
out
sbb
ss
sub
rcll
xchg
leave
dec
mov
insb
mov
adc
mov
or
push
stc
adc
dec
mov
jns
dec
hlt
sar
adc
adc
fsts
ret
add
aas
mov
xorl
movsl
jg
xchg
jns
hlt
jl
popf
sbb
ret
xchg
hlt
jnp
inc
jmp
test
sbb
pop
sarl
cmp
xchg
jp
dec
sub
pop
push
add
dec
roll
fidivl
fmul
stos
call
stos
shlb
dec
js
sbb
push
out
ja
jae
xchg
inc
adc
mov
imul
xchg
sub
in
bound
iret
cmpsb
jbe
inc
movsl
sub
cld
inc
stc
inc
aad
xor
les
mov
adc
loope
repnz
or
gs
movsb
pop
xor
int
xchg
dec
push
jp
adc
das
jl
sbb
cmp
je
mov
cmp
sbb
mulb
jns
mov
lcall
cli
xor
call
stos
xchg
loopne
mov
idivb
fwait
roll
xor
pop
data16
in
insl
insl
movsb
lods
arpl
sub
js
adc
inc
pop
sub
cmpsb
insl
mov
jnp
inc
ror
mov
or
cmp
icebp
cmp
mov
in
decl
mov
mov
xchg
loopne
imul
cmc
cltd
adc
xor
push
imul
dec
add
loopne
push
aas
adcb
leave
sbb
lods
adc
sbb
out
mov
stc
mov
cmp
scas
jnp
push
gs
xchg
gs
test
leave
mov
cmpsb
cli
sti
adc
lret
aam
gs
lds
shlb
or
pop
out
cmp
call
mov
cmp
inc
cmp
cli
jecxz
add
cld
mov
fldcw
loop
scas
xor
inc
mov
jae
inc
add
adc
sti
push
push
adc
pusha
movsl
mov
out
std
arpl
xor
xchg
xchg
aam
aam
cmp
add
push
in
push
fs
lock
repnz
xchg
xorl
cmp
stos
jne
mov
mov
jp
sbb
pop
lods
insl
test
int3
lret
and
push
in
jg
mov
mov
ds
xor
jmp
sbb
sub
repz
stc
lock
dec
scas
mov
inc
xchg
lea
out
jp
popa
call
pop
mov
rcrb
mov
mov
mov
repz
mov
jle
fdivs
mov
mov
aad
mov
paddsw
mov
pop
in
xchg
shlb
es
outsb
mov
pushf
outsl
loope
sub
or
ret
and
hlt
sbb
out
dec
jo
xor
or
mov
inc
gs
sub
in
inc
sub
pushf
lcall
mov
fsub
jg
popf
aas
jmp
xchg
jge
mov
adc
mov
push
mov
cmp
mov
or
cmp
std
pop
xor
fisttpll
subl
insl
and
mov
cmp
mov
fcomip
mov
pushf
adc
adc
mov
insb
sbb
mov
outsl
imul
or
dec
xor
loope
mov
in
dec
push
push
movsl
sbb
mov
push
repz
pop
lea
lods
mov
mov
test
aam
dec
or
fs
loop
js
mov
lods
imulb
ja
dec
inc
push
jae
call
mov
ret
mov
cmp
add
add
add
repz
xchg
pusha
mov
or
roll
add
mulb
divl
sub
xor
pop
push
add
push
jmp
sti
jne
jb
aad
sub
push
out
iret
add
cmp
sub
cmpsb
or
mov
scas
jne
lahf
ljmp
cld
mov
repnz
pop
xchg
lds
dec
inc
clc
pop
lahf
mov
jbe
sub
jle
mov
mov
dec
outsl
in
data16
je
sub
push
xor
or
xor
xorb
cmpb
scas
cmp
es
lods
pop
icebp
rcll
pop
xchg
dec
sub
mov
sub
lahf
add
or
push
push
rolb
ficompl
jp
sub
pop
nop
dec
inc
add
enter
sete
inc
ret
lods
in
in
cmc
cmp
cwtl
mov
repz
xchg
mov
add
idivl
pop
mov
mov
daa
mov
xor
or
lock
inc
inc
scas
jnp
es
test
mov
xchg
in
and
lahf
and
mov
mov
ja
insb
pop
mov
bound
xchg
dec
jne
pop
cmp
cmpsl
or
xchg
fdivl
test
inc
xor
pusha
fnstenv
scas
or
xor
xchg
ret
cmp
pop
int3
inc
out
jne
dec
out
addr16
cs
add
sub
sbb
sbb
shlb
push
xchg
mov
imul
stos
arpl
mov
xor
mov
add
pop
mov
jp
mov
push
lods
into
je
pushf
xlat
add
add
movsb
loop
mov
xchg
scas
adc
je
aam
mov
fisttpl
lret
cwtl
mov
rcrb
xchg
push
fwait
push
cltd
loop
imull
cltd
sbb
loope
xor
out
mov
negb
cwtl
push
movsb
inc
xchg
pop
and
out
mov
dec
lea
mov
je
aad
or
fcomp
xchg
mov
dec
mov
sti
pusha
xchg
jns
xchg
xor
lret
repnz
stos
cld
xchg
mov
ret
xchg
jp
inc
test
add
mov
sub
push
decl
scas
dec
cwtl
push
jo
sub
mov
dec
lods
lret
mov
or
cmp
adc
loopne
xchg
in
cmp
xchg
xor
sti
push
xor
cmpsl
xchg
sbb
mov
negl
push
mov
xchg
dec
jnp
ror
addr16
push
and
xor
dec
aad
test
jbe
inc
pop
cmpsl
lods
aad
daa
rclb
adc
lock
jno
daa
aam
sub
pop
cli
mov
cmp
mov
mul
sbb
mov
lods
add
mov
dec
dec
bound
inc
pop
xchg
hlt
sbb
sbb
sarl
push
adc
mov
testl
mov
sub
out
jg
or
in
outsb
adc
cli
int
imul
out
jg
mov
pop
jno
pushf
push
icebp
lcall
fldenv
mov
lods
pushf
pusha
xchg
mov
in
jae
inc
bound
outsl
push
sbb
or
out
pop
xor
rcrb
pop
mov
push
or
leave
test
inc
adc
dec
aad
imul
push
rol
pop
lds
push
mov
fsubrs
sbb
test
jle
cli
inc
pop
sub
jo
push
aaa
xchg
lods
cli
imul
repz
pop
negb
sbb
cli
cli
sbb
push
ljmp
fwait
lret
fistps
out
add
inc
and
out
xchg
or
sarl
mov
xor
fistps
das
mov
popa
mov
push
hlt
leave
jbe
outsb
mov
sbb
sub
lods
movsl
shl
sbb
std
clc
and
jg
adc
call
cmp
das
xor
pop
pop
jae
mov
mov
loope
inc
movsb
mov
cmp
jbe
add
ss
dec
push
dec
dec
jmp
popf
pop
dec
pop
mov
mov
popa
mov
pop
cmp
imull
add
inc
enter
add
xchg
fiaddl
test
into
inc
out
shrb
daa
push
xor
scas
and
lds
add
push
jb
out
xchg
dec
push
push
pop
popa
test
pop
cmpsb
movsl
cwtl
mov
leave
jno
mov
lds
bnd
adc
mov
jge
orb
hlt
and
jle
loop
int3
xor
jae
fimull
ficompl
mov
jge
fstpt
mov
clc
out
arpl
sbb
sub
dec
adc
adc
pusha
push
pop
cmp
mov
ss
sub
mov
pop
lahf
leave
adcb
mov
sub
in
add
sahf
sub
adcb
cmp
pop
mov
adc
lds
inc
jns
inc
nop
fisttpl
jo
jmp
test
pop
mov
test
mov
lahf
popf
in
cmc
add
dec
dec
inc
clc
aad
fcmove
aam
mov
movsb
jae
cli
mov
or
inc
imull
push
or
arpl
mov
jb
pop
mov
adc
test
fbld
out
ud1
fiaddl
jmp
dec
xor
jmp
aad
push
push
stos
cmpsl
adc
in
movsb
and
push
cmp
jns
mov
push
inc
jb
ljmp
and
daa
hlt
mov
sub
mov
fstps
test
mov
loope
test
cmp
inc
cmp
adc
lcall
pop
repnz
aas
dec
imul
pushf
loopne
data16
mov
xchg
sbb
clc
mov
inc
stos
sti
dec
mov
cltd
scas
mov
imul
imul
add
push
scas
test
stos
int3
out
mov
xorb
test
es
imul
or
jo
out
cmp
lock
fists
or
in
jg
test
sbb
sbb
loopne
mov
ja
aas
data16
mov
into
addr16
fcompl
push
sbb
aas
vaddpd
add
cmp
sub
push
ljmp
dec
push
cmp
cmp
insl
push
dec
dec
inc
mov
dec
mov
aas
test
test
shrb
push
push
push
jo
int3
in
loope
sbb
cli
scas
cwtl
sbb
cmp
fimuls
sbb
xor
out
inc
add
out
test
outsb
aad
data16
hlt
xchg
cmp
fwait
loope
lods
fldt
enter
fwait
push
mov
inc
stos
mov
idiv
dec
jne
ljmp
cwtl
fnsave
popf
adc
js
stos
pusha
clc
add
dec
xor
mov
or
aaa
mov
push
add
pop
mov
push
jbe
cmpb
movsb
loopne
test
push
mov
inc
in
mov
mov
pop
adc
adc
jns
out
push
jmp
jp
dec
push
divb
cmpsl
std
mov
aaa
aam
gs
sti
jno
shll
gs
xchg
xor
jmp
negb
cmp
lea
inc
cmp
cmp
pop
cld
ret
aas
or
jae
adc
inc
bound
ffree
xor
sub
mov
and
push
rcll
sbb
xor
adc
mov
fldt
xor
or
shlb
or
sub
mov
movsl
dec
ss
jnp
ret
jb
cmp
arpl
std
loop
adc
loop
scas
adc
pop
outsb
mov
sub
adc
in
jae
add
in
pop
xor
imul
das
push
mov
std
lea
cmp
mov
lds
and
or
xor
dec
data16
insb
sbb
out
shll
ljmp
fisubl
jo
outsb
lods
ficoms
pop
loop
pop
into
xchg
mov
in
ja
push
sbb
xchg
mov
sub
js
aam
cmp
mov
addr16
stc
mov
out
pop
outsl
push
pop
xorl
ljmp
add
inc
ret
push
cwtl
ds
in
or
lds
xchg
xchg
mov
or
ffree
adc
mov
rorb
pop
lret
in
mov
in
lcall
icebp
rorb
packuswb
fwait
mov
mov
pop
insb
pop
push
mov
ret
std
sti
inc
fs
mov
movmskps
mov
int3
pop
out
dec
mov
xchg
adc
loopne
in
cli
stc
xor
les
insl
jge
xchg
or
mov
push
inc
xor
or
cmpsb
movsb
sub
stos
inc
cmpsb
test
push
cmp
sbb
test
fwait
mov
cmp
mov
je
pop
mov
shlb
loop
cmp
mov
ror
xchg
mov
xchg
mov
stc
testb
aad
cltd
roll
sub
sbb
push
lea
sbb
fsubr
xchg
into
loop
xacquire
lods
ljmp
adc
shll
imul
adc
lahf
jnp
mov
repnz
adc
aam
push
add
add
movsb
adc
add
jg
pop
test
push
and
orb
xchg
cld
xchg
lea
ljmp
pushf
inc
pop
xor
js
pop
aam
test
and
fsub
in
jae
mov
and
test
loopne
push
or
das
and
xchg
mov
push
inc
mov
xchg
cmp
test
or
stos
ds
lock
push
fstps
in
mov
mov
sub
pop
mov
pop
mov
out
daa
data16
ljmp
incb
int
pushf
lock
sub
add
test
pushl
pop
xchg
mov
adc
inc
int
dec
scas
loopne
jmp
outsb
divl
imul
push
inc
lea
test
mov
rclb
mull
add
roll
dec
pop
fs
adc
sbb
sbb
jecxz
std
or
push
sub
sarb
jb,pt
cmp
xchg
cmpl
xchg
fcmovne
pushf
fcomps
stos
ljmp
ret
aad
jne
fdivs
out
les
mov
stos
lret
loope
cmpb
or
and
fildll
bound
jnp
mov
adc
mov
lock
xchg
dec
mov
shll
in
nop
insb
pop
xchg
lea
mov
sti
les
stc
xchg
sub
dec
mov
or
mov
sub
sbb
in
push
or
sub
xchg
jle
and
cmp
inc
lods
cwtl
dec
sub
inc
rclb
mov
stc
jns
aas
clc
xlat
dec
sub
push
mov
stc
ret
pcmpeqb
out
subb
adc
cmc
or
pusha
ficomps
pop
cltd
jae
fstpl
mov
push
push
jbe
sarb
dec
out
pop
int3
adc
jle
int
in
or
data16
jae
mov
adc
mov
in
sub
repz
dec
xor
push
adc
test
cmp
dec
into
inc
and
lret
lea
dec
scas
lret
adc
and
insl
mov
pop
xor
mov
xor
aaa
pop
ret
leave
fs
sub
testb
mov
call
pushf
xchg
dec
mulb
jae
cmpsb
lcall
or
sbb
push
xchg
jnp
xor
inc
roll
cmp
jae
pop
pop
jl
mov
mov
jg
clc
je
les
mov
lret
vsubpd
and
scas
movsb
mov
push
in
push
lret
mov
fistpll
js
add
jge
insb
jge
lahf
dec
lds
mov
int
test
cmp
jg
or
test
sbb
fcompl
sarb
jo
mov
out
lods
mov
pop
rcrl
xor
push
fists
dec
inc
lcall
push
int3
jns
mov
inc
sub
add
jo
fistpl
or
add
mov
mov
clc
dec
cli
adc
insb
jle
insb
sub
xchg
lret
mov
or
daa
mov
xchg
mov
pop
data16
xchg
stos
in
rolb
jle
mov
mov
icebp
aaa
popf
pop
mov
shlb
xchg
xchg
ret
mov
push
cmp
push
popa
and
jg
fadds
pop
pop
sti
sub
das
adc
mov
insb
repz
insl
xchg
xchg
loop
sub
push
lods
inc
and
pop
shlb
jae
sarb
dec
lahf
aam
bound
mov
pop
jmp
inc
cmp
scas
and
in
aaa
jecxz
fstl
or
in
inc
push
and
jne
repz
bound
shrl
and
shlb
sti
mov
fs
inc
mov
out
or
pop
out
add
add
sub
push
out
add
push
ja
xor
pop
addr16
arpl
mov
mov
sub
cmpb
fistpl
lcall
fistpl
sti
enter
mov
lret
xchg
jno
rorl
int
or
pop
sub
xchg
addr16
ret
in
lea
call
fisttpl
sahf
shlb
mov
adc
fdivrs
fwait
repnz
ja
mov
shlb
fisttps
sti
mov
add
bound
insb
xchg
mov
jb
or
popf
dec
dec
int3
xchg
lods
icebp
icebp
repnz
lcall
mov
shl
jg
sbb
mov
or
inc
sbb
shlb
adc
pop
pop
test
jp
cmpsl
rol
lcall
shlb
xor
es
iret
out
popf
push
sbb
mov
mov
xchg
outsb
add
xor
shlb
push
inc
js
mov
jne
lock
mov
mov
xor
cmpsl
mov
hlt
out
jg
adc
mov
pop
sub
repnz
sub
jbe
rolb
loop
lret
jb
out
inc
cs
pop
lods
int
call
sub
out
cmc
sbb
mov
xor
arpl
fisttpl
aad
pop
mov
adc
mov
mov
jno
pop
inc
jo
dec
push
lock
inc
mov
sbb
mov
inc
cs
sbb
add
stos
push
enter
pop
inc
mov
fbstp
or
fisubrl
cmp
add
loopne
call
icebp
sub
insb
pop
sbb
or
cmp
jnp
xchg
mov
lods
gs
loop
adc
inc
xor
stos
or
and
cmp
pop
pop
xchg
jmp
mov
mov
in
push
or
repnz
aas
jecxz
cmpsl
cmp
adc
mov
icebp
push
psraw
pop
push
or
faddp
pusha
push
mov
sub
mov
mov
dec
jg
jge
out
adc
push
loop,pn
and
leave
insb
mov
aaa
sbb
call
xchg
in
mov
dec
rolb
jb
push
mov
je
xchg
pop
push
fucom
mov
jno
push
inc
xchg
or
pop
sbb
pop
xor
lods
cld
jns
or
data16
cmp
arpl
fs
arpl
mov
fnstsw
fwait
les
popf
pop
fwait
adc
cmp
cld
rol
adc
call
xchg
enter
pop
mov
ss
dec
int3
and
mov
ret
sbb
inc
xor
fldt
or
cmp
dec
mov
inc
dec
aad
pop
in
in
adc
adc
into
mov
ja
mov
cmpsl
and
scas
dec
mov
cmp
and
movsb
lcall
addr16
pop
ret
mov
js
push
orb
or
outsb
dec
xchg
cmp
pop
and
add
outsl
mov
jae
and
mov
icebp
aaa
rcrl
xor
mov
aam
cmp
pop
aad
push
lret
sbb
adc
loopne
jmp
js
add
mov
sub
ficomps
out
sbb
lahf
jecxz
inc
mov
in
pop
frstor
inc
jo
inc
mov
xchg
add
xchg
mov
add
mov
and
test
push
add
inc
pop
negl
hlt
jbe
cltd
jmp
mov
xor
inc
xorb
call
jg
mov
cmp
dec
sti
xchg
daa
mov
outsb
jge
in
xchg
xlat
cli
sti
or
or
inc
jg
cli
jp
aam
cwtl
add
insl
dec
inc
dec
bound
test
adc
sub
sbb
loope
enter
lret
insb
adc
mov
push
mov
sbb
lret
clc
jmp
and
mov
xchg
inc
hlt
push
fisttps
aad
adc
jnp
fistl
lods
inc
sub
ret
sti
sahf
pushf
and
push
popf
fwait
out
dec
sti
out
mov
ss
xor
ja
in
call
fimuls
push
pop
fstps
dec
flds
repnz
out
call
and
call
sub
pop
jo
aas
std
jbe
sbb
adc
jecxz
pushw
arpl
mov
nop
mov
jl
decl
adcl
jl
cmpsb
adc
inc
fwait
sub
cwtl
lret
xor
add
loopne
cmpsl
jmp
jmp
sbb
push
ret
scas
sbb
and
push
ds
sub
lret
jb
daa
dec
sub
sub
inc
outsb
dec
xor
dec
icebp
cltd
lret
insl
out
shll
or
fwait
mov
inc
push
out
ja
addl
je
cmpsb
lahf
adc
cwtl
xchg
push
mov
xchg
and
mov
jb
aaa
inc
daa
pop
dec
cmp
mov
ljmp
xchg
push
insb
dec
jb
loopne
push
pusha
jo
jl
cmp
ficomps
or
sti
sbb
outsl
mov
mov
mov
xchg
ja
add
lcall
repz
cmc
push
mov
sbb
or
pushf
cmp
fnstenv
jecxz
not
xchg
js
inc
ja
shl
lock
sbb
bnd
fs
cmpsl
cltd
loopne
fdiv
aaa
repz
ffree
add
push
lea
mov
das
push
mov
fidivrs
jl
pop
mov
loopne
out
pop
cmc
addl
stc
into
sub
inc
nop
sbb
movsl
rorl
fidivrs
movsb
mov
mov
dec
push
mov
dec
mov
adc
stos
mulb
fwait
push
mov
xor
testl
pop
cmp
cmc
inc
cmp
test
hlt
xchg
cltd
jb
mov
es
adc
ljmp
and
jge
xchg
dec
int
call
push
mov
sbb
daa
lods
or
mov
cmp
pushf
jp
out
jmp
or
xchg
imul
xchg
add
repz
les
outsb
aad
dec
cmp
sbb
xchg
aas
mov
popa
sbb
mov
dec
test
cmp
push
xor
adc
mov
rorb
mov
outsb
inc
mov
arpl
lds
lcall
push
aaa
imul
push
nop
insl
ret
mov
mov
out
xchg
mov
ss
aad
lods
xlat
js
and
mov
std
in
sbb
jle
xchg
push
lret
out
cmp
adc
aas
shlw
lods
es
sahf
inc
mov
cmp
clc
pop
mov
or
ja
push
add
movsl
sub
mov
andb
or
xor
ret
push
sub
adc
adcb
cli
push
add
in
inc
or
stos
dec
jg
shrb
lret
sbb
popa
mov
xor
sub
ret
fwait
cmpsb
xor
fcoms
and
call
rcll
pop
ljmp
lret
pop
mov
call
ja
hlt
fmuls
clc
imul
js
into
xchg
xor
sub
jge
aaa
repz
dec
loopne
sbb
cld
and
xchg
stc
aam
es
xor
adc
dec
mov
push
mov
movsl
fimull
testl
push
and
repnz
test
mov
push
pop
mov
mov
inc
test
inc
loope
mov
add
mov
jae
dec
pop
insl
rcll
lea
adc
clc
repz
pusha
lcall
cmpsl
outsl
in
cwtl
xchg
and
sbb
sahf
mov
jmp
and
cmp
cwtl
sarb
addb
jg
mov
adc
xchg
leave
rol
mov
inc
cmp
xor
or
ss
dec
cmp
cmp
xor
loope
xor
cmovb
mov
rcrb
mov
movsl
inc
pop
mov
icebp
aaa
mulb
sub
jae
lods
xchg
lret
out
js
test
jae
bound
xchg
repnz
xlat
jnp
cmpsb
and
mov
add
cmc
mov
xor
je
cmp
rorl
push
sub
mov
add
mov
subb
add
add
xchg
test
fwait
rorb
imul
and
fsubs
xchg
addl
lods
mov
dec
repz
mov
xor
cli
jmp
arpl
rorb
pusha
aaa
xchg
cmp
xor
push
or
sbb
jns
xchg
fcom
xor
add
sti
arpl
inc
ljmp
pop
inc
sarb
add
cmc
xor
idivl
jl
mov
push
faddl
sarb
push
out
mov
jo
mov
enter
rorb
pop
mov
shlb
add
mov
fdivr
dec
in
or
push
ret
inc
pop
adc
dec
cwtl
insl
das
lea
xor
jle
inc
jp
std
dec
cmp
andb
inc
fs
loopne
mov
adc
inc
lret
sub
mov
adc
lret
pop
add
cmp
push
sub
inc
add
stos
or
mov
jae
je
pop
or
mov
loope
cmpsl
ja
shrb
int
lret
test
pop
pop
pop
mov
aam
outsl
mov
in
sar
out
cmp
dec
mov
subb
sub
shrl
and
jg
push
pop
test
rcl
xlat
movsb
fwait
cmp
arpl
adc
divb
dec
call
mov
lret
dec
das
mov
fisttpll
mov
or
out
mov
xchg
pop
pop
xchg
or
lock
mov
fbstp
lds
loop
xchg
jecxz
iret
mov
xchg
push
dec
push
pop
fisttpll
xor
jno
sbb
ret
in
or
cwtl
and
shl
int3
stos
cmp
sub
mov
xchg
xchg
xor
xor
mov
mov
imul
push
and
mov
push
sub
ret
ss
add
jle
sbb
push
pop
fs
pop
stos
jb
stos
inc
out
daa
jl
mov
jae
push
popf
cli
mov
testl
dec
pop
iret
call
mov
sbb
sbb
cwtl
xchg
sarl
aad
scas
outsb
push
in
lret
sbb
and
jl
in
inc
fwait
xchg
mov
and
sbb
pop
icebp
xlat
ret
mov
rcr
int
push
xchg
fdiv
inc
lock
insb
lret
push
pusha
mov
mov
dec
xchg
in
cmpsb
push
cmp
and
dec
imul
into
mov
arpl
xor
add
mov
add
int3
jmp
ljmp
pop
mov
inc
int3
clc
in
in
fisubs
bound
push
daa
mov
jge
test
aam
sub
mov
mov
xchg
mov
jne
sub
mov
test
sub
cmp
lret
jb
inc
jb
aas
inc
orl
repz
mov
push
or
adc
fbstp
lret
xlat
jle
add
xor
ljmp
pop
pusha
aad
rolb
ja
fldenv
cmp
sub
jmp
adc
inc
iret
sbb
lods
daa
enter
inc
or
jae
mov
adc
lock
adc
pop
add
into
insl
jns
mov
imul
aam
dec
or
ficompl
mov
cmc
ret
cwtl
mov
push
pop
dec
testl
or
xor
xchg
scas
fisttpl
das
hlt
cmpsb
xchg
sub
jo
les
push
shl
lods
or
les
das
insb
mov
out
mov
cmp
je
sbb
movsb
cwtl
xchg
cmp
pop
mov
jbe
jecxz
andl
jp
in
xor
ret
in
sbb
fucom
jae
loop
dec
jno
push
imull
orb
pop
bound
adc
mov
sahf
push
mov
inc
and
xor
mov
push
popf
adc
mov
mov
insb
sbb
lock
cmp
pop
pop
mov
sbb
lcall
lds
lret
lea
sar
mov
push
xor
adc
fcmovne
leave
pusha
mov
cmp
dec
jnp
push
sbb
in
ret
xchg
fldt
cmp
mov
push
sbbb
push
pop
movsl
mov
aas
sbbl
fdivrl
cltd
jo
mov
daa
daa
ljmp
sbb
xor
negl
mov
in
push
nop
jae
subl
test
mov
insb
inc
test
adc
pop
adc
setp
addr16
pusha
or
fisttpll
lahf
sub
xchg
test
iret
lcall
mov
andb
mov
xlat
xchg
jmp
mov
imul
call
pop
sub
mov
jmp
xor
add
inc
fwait
shrb
dec
rcll
mov
hlt
sbb
mov
or
test
stc
pop
movsl
dec
adc
cmc
jmp
add
add
jg
divb
and
in
int3
pop
push
sbb
sarl
ret
adc
jle
aam
shl
lahf
lds
sbb
inc
pop
xchg
hlt
insl
push
pop
dec
pusha
js
pop
dec
sub
add
sti
fnstsw
mov
je
test
or
mov
push
test
andl
inc
gs
pop
out
dec
jbe
icebp
daa
and
mov
out
das
scas
or
into
je
data16
inc
cmp
in
push
xorl
cmp
shlb
sub
inc
push
bound
mov
insb
int3
push
sbb
mov
cmp
mov
iret
popfw
xor
or
hlt
lods
lods
mov
inc
lahf
mov
cmc
xchg
mov
fdivrp
cmp
repz
xchg
aam
rolb
xchg
jnp
ljmp
cltd
fstpt
mov
and
or
cmc
pop
fcoml
repnz
es
insb
jg
mov
or
xor
xchg
insl
lock
push
xchg
sbb
rcrb
stos
int3
divb
dec
adc
pop
int3
adc
hlt
stos
push
loope
ds
dec
scas
sub
les
pop
jmp
pop
dec
insl
jmp
push
rcrl
shr
fidivs
xchg
inc
dec
or
sbb
push
cmpsb
jne
pusha
int3
pop
adc
or
add
ljmp
test
test
mov
push
lret
lea
or
push
repz
and
arpl
cmp
in
inc
push
clc
leave
call
pop
shll
std
roll
lret
aaa
outsl
xor
sarl
adc
jne
es
push
xor
or
dec
pop
cmp
lock
mov
pusha
sbb
push
inc
cmp
mov
pop
cmp
idivl
test
mov
push
xor
push
or
fstp
jle
jno
in
inc
push
cmpsl
andl
lcall
into
clc
dec
lods
sarb
add
mov
push
out
xchg
lcall
mov
cmc
mov
xchg
cs
jl
push
jns
jp
adc
fistpll
cld
aad
or
scas
in
xchg
sbb
adc
rorl
mov
xor
push
inc
pusha
cmp
push
scas
ja
out
push
xchg
int
movsl
jg
cmpsb
lret
dec
enter
push
sub
aaa
int3
rorb
scas
icebp
out
sbbb
fldenv
adc
pop
jae
add
push
cmpsb
sub
xor
int3
fwait
pop
sub
and
mov
fsubrl
push
pop
sbb
ljmp
out
repnz
leave
xchg
sbb
shlb
pop
js
fldcw
mov
int3
mov
jno
cmp
push
popa
lahf
mov
add
into
mov
mov
mov
push
into
insb
dec
je
xchg
and
sub
sarb
sbb
sti
aam
lea
mov
fsubl
test
push
stos
mov
xor
cmp
xchg
test
fistpll
loope
xchg
call
icebp
and
test
jmp
cmpb
test
rorb
mov
xchg
cmc
mov
rcll
lock
jno
mov
stc
insl
shlb
sbb
pusha
in
lahf
jae
push
pop
mov
lods
jp
std
repz
insl
lahf
xor
pop
cmp
mov
adc
push
cld
jne
arpl
aaa
shlb
test
test
mov
fisubrs
cmpsl
xor
scas
sub
out
sbb
fadd
mov
cwtl
es
mov
pop
cmp
jns,pt
mov
push
push
sub
adc
call
or
iret
sub
popf
shll
adc
pop
cmp
orb
and
inc
cltd
cmpl
sbbb
stc
inc
lods
adc
in
or
and
adc
mov
mov
cmpsl
mov
jnp
xlat
mov
sahf
cli
mov
hlt
in
pop
adc
and
cmp
loop
inc
in
loopne
sub
dec
mov
mov
outsb
insl
mov
mov
mov
rcll
test
rcr
jbe
mov
lods
pop
push
loope
adcb
cmp
mov
sbb
mov
jge
cmp
and
mov
orb
pop
or
mov
sbb
mov
pop
pop
add
add
lds
adc
into
push
out
mov
xchg
pop
pop
jmp
fstl
aam
push
xor
pusha
sub
mov
jp
jecxz
cwtl
fstpl
push
ja
dec
inc
xchg
add
mov
stos
outsb
cmp
mov
mov
sar
cmp
push
xchg
inc
movsb
pop
out
dec
cmp
inc
pop
mov
shlb
xchg
lretw
addl
ds
cmp
data16
ret
add
mov
add
negb
stc
push
mov
adc
and
scas
dec
rcr
ss
dec
mov
jnp
push
cli
frstor
mov
xchg
sub
aad
inc
adc
xor
xchg
pusha
cmp
out
sbb
inc
call
sub
inc
and
mov
add
scas
pusha
gs
lret
add
mov
push
stc
mov
rclb
stos
xchg
add
jg
notl
mov
jg
push
adc
mov
cmpl
into
inc
cmc
psubusw
inc
fdivrl
xlat
push
sub
inc
loop
inc
jnp
cwtl
outsb
test
inc
cmpsb
push
mov
shll
iret
aam
stos
rolb
xchg
call
and
xchg
mov
call
adc
jns
je
add
rclb
xor
movsl
fistl
and
movsb
dec
mov
aas
pusha
jle
je
iret
mov
das
bound
lea
pop
and
mov
or
hlt
add
cmp
push
mov
sub
bound
scas
cs
add
jae
les
out
mov
mov
mov
sbb
sub
add
lahf
std
out
and
inc
push
jl
inc
mul
sti
mov
out
mov
ljmp
cmp
out
cmp
in
lock
adc
pop
sub
lock
sub
insb
xor
or
jle
mov
cmp
xor
icebp
jb
mov
jecxz
std
mov
dec
leave
cs
test
sti
or
lds
loope
lea
adc
aaa
fs
xchg
in
add
push
sbb
in
mov
pop
adc
lcall
jae
pop
imul
sub
push
mov
cmpsb
loope
andl
aaa
jecxz
jmp
imul
inc
div
push
mov
rcl
mov
lods
or
xchg
jp
ljmp
xchg
and
dec
ljmp
pop
mov
aam
xchg
jae,pn
jae
je
sbb
inc
xchg
ret
inc
fbld
jp
stos
xlat
and
pop
stos
sbb
nop
in
dec
fsubs
add
or
cmp
mov
mov
dec
jg
cmp
sbb
incl
xor
jne
pop
xchg
daa
jl
xor
jle
aad
shl
add
pusha
jae
subl
pusha
ror
cmp
js
adcl
negb
xchg
dec
out
in
cmp
xor
push
cltd
insl
jne
ss
mov
cmpsl
clc
push
mov
dec
inc
mov
add
mov
pop
loop
iret
je
pop
loope
xor
scas
adc
jp
ja
mov
and
movsl
movsl
cli
mov
sub
adc
mov
sub
loope
pop
bound
sub
inc
aam
pop
jl
icebp
mov
aam
xchg
addl
inc
scas
gs
nop
pushf
inc
push
aad
jecxz
add
adc
xor
scas
shll
sub
js
sub
ss
sub
cmp
sub
jle
loopne
in
sbb
aam
out
dec
push
iret
jmp
lret
jmp
mov
call
and
sti
cmp
test
rorl
fidivs
dec
jns
aaa
and
aad
fcoml
das
add
js
dec
lahf
fcomip
sti
jg
imul
xchg
jp
fldt
and
popa
add
cmp
or
gs
sub
fs
mov
sbb
daa
dec
fbld
jecxz
enter
mov
pushl
stc
mov
jb
inc
cld
popf
ret
mov
xchg
mov
hlt
cmpsl
jo
sbb
pop
cmc
push
rcr
fisubrs
jns
mov
daa
adc
mov
adc
sbb
push
fisubrl
gs
stos
pop
fidivrs
cmp
cmp
add
mov
pop
leave
repnz
inc
in
mov
mov
sub
and
bound
pop
shrb
and
out
sar
jae
mov
jge
mov
std
fisubs
push
stc
mov
filds
in
leave
sbb
jo
clc
cmp
in
push
jp
sbb
out
out
jge
adc
daa
jge
push
push
dec
mov
out
push
sub
test
flds
push
ret
aaa
fld
pop
enter
push
aas
fld
sti
stos
and
es
int
lahf
fnstcw
stc
mov
jle
sub
out
inc
and
loopne
push
dec
dec
lahf
pop
or
mov
sbb
push
ret
out
cld
xor
dec
popf
jo
sub
mov
mov
es
iret
bound
jnp
push
mov
in
add
mov
mov
mov
shl
sbb
in
rdmsr
add
sub
jnp
lods
ss
dec
pop
ret
in
xchg
das
mov
mov
insb
xchg
in
aam
jbe
icebp
push
lret
aas
pop
pop
ljmp
mov
add
adcl
adc
shlb
sub
movsb
and
sub
jmp
lret
pop
data16
jo
test
loopne
push
shlb
cmpsb
xchg
shrl
fsts
adc
adc
or
jmp
jne
add
jge
mov
test
cwtl
add
xchg
sbb
in
jnp
adc
std
out
jp
push
lret
add
or
xchg
sbb
xchg
jge
fmuls
xchg
ret
sub
pop
mov
inc
pop
out
lcall
popf
xor
and
push
jns
and
jge
jecxz
or
addl
add
cmp
ret
loop
ret
cltd
xchg
in
cld
fldcw
lcall
fcmove
cmp
pop
pop
test
rcl
dec
push
lods
jge
mov
jne
cmp
scas
cmp
sub
cmpb
jecxz
jo
mov
mov
sbb
mov
xor
jmp
xchg
outsl
pop
pop
popa
pop
mov
adc
daa
pop
iret
and
sbb
hlt
or
pop
addb
arpl
mov
fxch
xchg
inc
enter
hlt
lret
paddq
outsb
sti
imul
sbb
stc
jecxz
push
test
fldt
sbb
jl
ffree
outsl
push
and
test
xcrypt-ofb
cmpsl
das
mov
or
dec
lea
addr16
movsl
out
mov
cmp
testb
popf
pop
ss
lods
dec
lahf
dec
inc
xchg
xchg
mov
pop
out
mov
jge
iret
mull
or
out
and
inc
dec
pop
out
add
adc
push
cmp
mov
aaa
mov
dec
xchg
cmpsb
lock
mov
dec
cltd
mov
pop
sub
pop
lahf
pop
and
stc
mov
lock
xchg
hlt
fisubrs
push
cli
inc
lret
shrb
sbb
inc
sbb
xor
js
dec
lret
jnp
pop
shlb
adc
or
cmp
xchg
pop
pop
aaa
filds
rcr
mov
pop
lods
es
adc
jle
outsb
aas
or
jg
push
bound
test
test
stc
sbb
cmc
imull
ljmp
sarb
imul
cmpsb
xchg
scas
clc
cs
insb
in
mov
in
adc
inc
push
pop
pop
xchg
add
jae
xor
sub
rclb
inc
repz
movsb
ret
out
jb
cmp
jge
xor
std
cmpsl
jmp
jp
mov
in
xor
dec
mov
mov
sbb
arpl
mov
insb
stos
or
xchg
rcrb
shlb
mov
repnz
scas
nop
shrb
test
lret
addr16
pop
xor
les
stos
push
rcrb
jbe
jecxz
insl
or
and
js
push
jnp
sbb
stos
mov
inc
sub
sub
inc
call
cmp
push
loop
xchg
decl
sbb
and
mov
and
mov
mov
in
push
sbb
xchg
push
and
sub
or
dec
mov
push
mov
ret
pmuludq
xchg
arpl
popf
popa
cld
or
cmc
das
ja
cltd
dec
pop
nop
std
add
test
inc
jae
insl
mov
popf
iret
enter
stos
xor
addr16
and
cmp
push
xor
ret
notl
fidivrl
mov
frstor
jne
mov
bound
call
jl
xor
jge
inc
enter
dec
jle
repz
scas
std
or
inc
jae
inc
jno
dec
jbe
jo
cmpl
jle
shrb
jmp
sub
jle
cmp
add
and
add
out
mov
cmpsb
jbe
movsl
jb
mov
pusha
add
and
pop
mov
loop
jmp
mov
push
pop
and
out
insb
sub
je
int3
mov
adc
cmp
add
cmpsl
and
add
jmp
movsl
or
xor
jle
les
mov
sub
xor
pop
xchg
out
and
mov
sbb
add
cmc
mov
lds
push
or
mov
lods
mov
outsl
xchg
inc
push
rorl
insb
aas
in
sub
push
addr16
dec
mov
dec
iret
out
or
mov
inc
jae
mov
cmpsl
js
lcall
cmp
sub
adc
cmp
stos
fs
pop
rol
in
jmp
push
push
lods
jne
or
std
adc
mov
adc
xchg
jecxz
cltd
nop
scas
jg
adc
sbb
jecxz
cmp
mov
mov
or
mov
sbb
dec
inc
jg
cwtl
insb
adc
sub
jp
cwtl
sbb
lret
in
cmp
jg
fadd
bound
dec
pop
stos
out
call
cmp
notb
xchg
outsl
inc
jb
test
imul
popw
je
lds
mov
sahf
outsl
sbb
dec
ret
jb
xchg
dec
mov
pop
ficompl
and
sbb
xchg
in
cmp
and
xchg
lods
inc
mov
test
test
test
pop
or
aas
mul
inc
andl
mov
cmovbe
sti
jnp
sbb
xor
test
inc
dec
stos
mov
repz
decb
push
rorb
pop
jns
inc
xchg
inc
jno
adc
or
testl
dec
in
std
popa
jno
movb
imul
pop
adc
cmpsl
in
push
and
out
stc
dec
int3
test
xchg
mov
cltd
jae
mov
push
jno
pop
xchg
aam
sarb
xor
popf
sti
notb
idivl
mov
cmp
adc
mov
and
pop
in
cmp
lcall
or
cwtl
xor
std
mov
xchg
sub
add
mov
in
incb
into
sbb
js
int
filds
cmpsb
jbe
and
mov
xchg
pop
clc
aad
cmp
push
ss
jns
loopne
shlb
jae
push
pusha
lock
cmpsl
and
mov
jo
hlt
fstp
idivl
dec
mov
pop
xor
xor
push
xlat
jmp
inc
xor
daa
call
and
xchg
cmp
and
pop
push
cmp
orb
paddd
cmp
insb
cmpsb
sti
loope
loop
das
ret
inc
ljmp
push
jmp
sbb
enter
mov
add
clc
hlt
sbb
fadds
jno
mov
fisubrl
sbb
push
cmp
add
jns
call
mov
repz
fwait
dec
iret
dec
mov
imul
sub
imul
mov
adc
xchg
je,pn
les
jecxz
scas
or
hlt
pop
arpl
icebp
mov
pop
jnp
xor
mov
push
aaa
sbb
jg
xor
fistpll
and
loope
leave
pop
xchg
inc
inc
shr
out
jo
sti
or
outsl
adc
jecxz
in
xchg
cmp
inc
fldt
out
out
ret
sbb
les
in
dec
xchg
cmp
pavgb
mov
ss
loope
mov
insl
push
jmp
mov
jmp
arpl
dec
daa
std
in
push
cltd
and
outsl
notrack
in
pop
mov
test
enter
fidivrl
out
cmpsb
repnz
and
sbb
in
fidivrl
xchg
lods
je
push
xchg
push
add
add
scas
mov
lahf
mov
pop
es
test
stc
jb
ds
xor
xor
outsl
dec
sub
mov
enter
push
leave
cli
jge
xor
fadds
jnp
fmuls
cltd
jb
mov
cld
sahf
mov
lret
sub
jns
out
movsb
pop
lcall
lcall
adc
loope
daa
fldt
notl
dec
xor
mov
adc
into
pop
shll
das
mov
xchg
dec
imul
push
filds
inc
or
rorb
std
jge
rcrl
jne
ss
call
lret
lock
lods
mov
pop
sbb
sbb
sbb
xor
std
iret
jbe
test
fwait
orb
jnp
jmp
sbb
adc
add
mov
loop
aas
cld
jb
imull
int3
inc
jecxz
and
add
mov
mov
mov
je
and
lods
cmc
sbb
je
mov
shlb
mov
nop
push
push
insl
out
push
mov
adc
push
cmp
sub
or
pop
inc
cwtl
ror
testb
mov
mov
out
xlat
mov
inc
sbb
mov
in
ret
popa
xchg
test
sti
popf
test
dec
movsl
and
xchg
rorb
or
nop
int3
xlat
xchg
stc
xor
dec
dec
cmp
cmp
push
add
ret
sahf
or
lcall
movsb
jb
movsl
add
or
push
leave
in
push
loopne
pop
mov
leave
adc
jge
loopne
dec
or
or
lret
jle
push
sahf
add
mov
popa
rclb
mov
pop
dec
add
idivl
lods
aas
sub
sbb
fbld
xchg
je
loope
add
xor
repnz
rcrb
inc
mov
adc
lods
push
adc
sarb
xchg
je
xor
jle
imulb
add
adc
nop
insb
loop
cmp
cltd
sbb
clc
incl
out
repnz
cmp
add
cmp
pop
pop
cmp
les
jae
xchg
xchg
pop
js
fcompl
ds
sbbl
push
dec
movsb
pushf
out
ds
inc
fiaddl
xlat
mov
subb
clc
jae
push
cli
and
inc
inc
pushl
cmpb
sbb
pop
sti
pop
inc
fcoml
mov
xchg
in
dec
jo
xor
adc
xchg
xchg
xlat
pop
push
addr16
add
popa
shll
stos
xor
dec
mov
cmp
test
add
adcl
cmp
sub
push
push
aas
shlb
add
lcall
out
jle
mov
push
sub
scas
jns
scas
int3
ficomps
into
das
js
outsl
push
aas
lcall
sti
sub
in
int
xchg
cmpsl
add
shll
repz
add
xchg
int
jo
sti
push
sahf
es
loopne
aad
sbb
fstps
sti
test
sti
cltd
adc
xor
pusha
push
fdivr
pop
and
jl
shl
gs
rcr
lret
xchg
in
stos
scas
fimull
ret
push
test
ds
push
cmp
and
cmpsl
and
pop
cmp
mov
addr16
fdivp
push
adc
repz
pop
fs
mov
popf
sbb
add
jg
mov
test
mov
sbb
bound
and
sbb
cwtl
mov
or
repz
iret
mov
push
push
xchg
popa
pusha
pop
flds
jmp
cmp
sub
sbb
mov
jnp
and
cmpsl
and
dec
and
lret
leave
xchg
scas
mov
sti
sub
inc
test
insb
sub
mov
push
cmpsl
inc
mov
xlat
cmpsl
lods
and
paddsb
sub
enter
push
and
mov
sahf
mov
pop
test
in
add
lcall
sar
add
xchg
out
ljmp
fmull
cmp
push
mov
mov
jno
or
dec
sub
cmp
dec
push
mov
adc
push
dec
mov
pop
adc
inc
add
dec
pop
aam
loop
shl
imul
popa
pop
aaa
xor
xor
test
lret
or
addb
add
jns
fdivrl
xchg
inc
pop
inc
idiv
aaa
cwtl
jbe
mov
add
adc
dec
fstpt
movsl
or
inc
dec
push
mov
in
outsb
cmp
or
addr16
xchg
lahf
repz
jb
rorl
insb
mov
or
addr16
push
xor
xor
cmpb
xchg
andb
pop
orl
gs
shrl
jo
push
pop
dec
cmp
jns
pop
ffree
push
das
rorl
rcr
pop
out
es
dec
pop
jl
into
fildll
add
adc
into
popf
xchg
inc
ja
jno
orl
movsb
dec
mov
setae
in
jo
out
ret
sub
adcb
pop
mov
cmc
mov
pop
xchg
fninit
cmp
popf
mov
pop
in
lahf
adc
add
sub
lods
jg
fisubs
jno
lret
xchg
jecxz
sbb
je
push
inc
sbb
cmp
or
jmp
repnz
rclb
cld
popa
sti
in
mov
cltd
sbb
lret
xchg
cmp
jmp
lret
push
lahf
sbb
cmp
lock
in
inc
lea
sub
mov
adc
jge
fisubrs
jl
adc
aas
inc
shrl
jle
jg
js
les
xchg
mov
aad
pusha
outsb
xchg
push
xchg
mov
mov
pop
nop
aam
in
inc
mov
xchg
jge
cmp
pop
dec
pop
out
out
arpl
cmpsb
imul
mov
mov
pushl
cmpl
mov
mov
jb
xchg
xchg
jo
mov
mov
call
cwtl
in
pop
adc
and
aas
ljmp
mov
jmp
mov
pop
add
adc
jnp
jbe
cmp
xor
xchg
jnp
sbb
mov
loopne
sub
stc
add
subb
cmpb
repz
xor
out
mov
cwtl
jge
and
mov
ds
les
je
mov
sbb
mov
xlat
pop
enter
lret
or
les
sub
mov
aas
and
orb
scas
pop
into
pusha
call
orl
repnz
mov
push
ret
xchg
repz
das
sub
mov
push
inc
ret
sub
loope
mov
inc
shlb
pop
xor
cli
lret
ret
outsl
stos
mov
loopne
cmp
je
iret
shll
add
push
push
mov
loopne
add
inc
sub
and
add
cmp
add
and
movl
scas
lea
xor
in
popf
daa
sub
inc
dec
mov
sub
mov
outsl
std
or
cs
test
inc
cli
scas
jecxz
daa
sub
shlb
and
ret
sub
jno
lods
popf
sbb
sub
or
int3
cltd
sbb
rorl
pop
es
scas
jbe
sub
xchg
les
dec
sbb
shlw
jp
setle
cwtl
fwait
sbb
test
adc
arpl
out
mov
mov
add
mov
mov
aaa
dec
out
cwtl
shll
stos
jno
mov
xlat
jecxz
into
inc
movsb
jl
cmp
out
mov
arpl
dec
add
data16
fldcw
movsl
xor
push
push
insl
jg
and
cmovb
cmp
test
pop
jecxz
or
std
jmp
dec
loop
add
pop
mov
shl
in
out
dec
and
sub
mov
movzbl
imul
or
xchg
imul
dec
imul
mov
xor
imul
sub
lea
inc
inc
add
inc
dec
jne
add
mov
mov
add
pop
inc
dec
pop
imul
lea
pop
dec
mov
add
inc
inc
inc
inc
mov
mov
imul
mov
add
ret
push
push
lea
dec
push
lea
mov
add
dec
mov
movswl
push
mov
dec
lea
mov
push
imul
add
mov
movzwl
and
dec
mov
push
inc
mov
dec
push
lea
mov
xor
add
dec
push
dec
sub
push
imul
sub
pushl
mov
call
sub
add
add
and
imul
dec
lea
lea
imul
pop
ret
xor
mov
cmp
jb
dec
xor
and
inc
mov
mov
dec
mov
sub
add
inc
add
inc
or
inc
movswl
mov
lea
dec
cmp
jb
inc
pop
add
lea
mov
dec
sub
add
imul
add
inc
add
lea
dec
xor
dec
or
xor
inc
dec
mov
dec
xor
test
jbe
movswl
add
lea
movswl
inc
inc
lea
dec
lea
mov
mov
dec
and
inc
dec
mov
imul
lea
movzbl
add
movzwl
add
dec
and
and
inc
mov
sub
inc
mov
dec
add
mov
imul
movzbl
mov
inc
imul
dec
lea
dec
inc
dec
jne
inc
mov
movzwl
add
mov
inc
dec
inc
inc
inc
lea
mov
mov
dec
lea
dec
inc
mov
imul
inc
inc
mov
inc
add
test
jbe
imul
dec
and
sub
lea
and
mov
mov
mov
add
lea
mov
mov
dec
lea
inc
add
dec
sub
dec
inc
mov
and
sub
lea
mov
mov
mov
movzbl
sub
inc
add
or
mov
and
inc
mov
mov
xor
add
movzbl
sub
dec
mov
dec
dec
mov
inc
dec
movzbl
mov
imul
add
dec
jmp
push
mov
sub
mov
movsbl
mov
add
dec
mov
or
sub
mov
mov
xor
mov
xor
inc
mov
mov
add
dec
lea
dec
dec
lea
mov
inc
inc
mov
mov
inc
inc
lea
or
xor
lea
inc
inc
sub
mov
cmp
je
lea
mov
dec
push
add
call
call
imul
mov
call
call
sub
mov
movsbl
mov
movsbl
mov
mov
ret
xor
lea
pop
mov
ret
push
add
sub
sub
mov
add
push
imul
dec
push
inc
push
add
push
add
mov
add
dec
dec
call
mov
push
add
movzbl
xor
imul
sub
dec
neg
lea
lea
add
add
or
imul
mov
mov
dec
mov
mov
inc
inc
lea
dec
dec
je
dec
mov
dec
mov
sub
mov
mov
lea
dec
mov
imul
repnz
mov
movzbl
add
and
jmp
mov
dec
sub
mov
sub
add
lea
dec
mov
dec
dec
movzwl
dec
inc
jmp
loope
fcoms
imul
loopne
pop
mov
rclb
or
jmp
or
pushf
fs
pop
inc
lret
cmp
pop
adc
roll
mov
popa
rep
xor
xor
mov
addr16
and
inc
aad
mov
aad
mov
mov
xor
adc
lods
int
and
aaa
dec
imul
push
movsb
aas
jb
xchg
pop
stos
xchg
rorl
lods
mov
or
pop
stc
insl
ret
loopne
sbb
test
sub
add
or
jne
sub
popf
push
movsb
sub
push
mov
aad
ljmp
fcompl
jle
jnp
in
es
sub
dec
jp
inc
test
xchg
mov
cmp
ret
xor
inc
mov
inc
cmpsb
fwait
xchg
add
lahf
jge
les
or
mov
mov
jb
lea
jmp
loop
add
ja
movsl
rcrl
stos
and
clc
pop
hlt
adc
add
cmpsl
lods
mov
push
ljmp
pop
stos
stos
pop
loop
xor
cmp
mov
cmpsl
enter
xor
inc
mov
jnp
arpl
cmp
adc
stos
scas
lcall
pop
stos
and
and
pop
dec
push
les
ret
xor
push
cmpb
inc
push
lahf
and
inc
adc
mov
mov
hlt
out
mov
dec
fxtract
loope
cmp
movsb
cld
idivl
fwait
pop
cmp
imulb
mov
fiadds
in
cmpsl
sbb
pop
out
dec
out
mov
std
fldl
cmp
shl
cmp
jne
aas
loop
test
popl
loopne
xchg
aas
andnps
lock
jo
sbb
or
push
sbb
jb
dec
xor
fisttps
cmp
shlb
lcall
xchg
addr16
sbb
push
push
jecxz
push
insb
xor
xchg
gs
mov
loop
mov
jbe
push
mov
or
xlat
inc
enter
aaa
mov
cmp
inc
sbb
cmp
fcmove
pop
scas
mov
ss
mov
das
cmp
cmp
push
adc
arpl
and
or
xchg
mov
fbstp
mov
loope
js
xor
lods
hlt
lret
mov
testb
jle
sub
loope
mov
push
dec
inc
scas
xchg
add
xorb
mov
je
pop
test
pushf
scas
lock
sbb
xor
xor
lahf
fnsave
jb
movsb
test
fcoml
fistl
push
mov
mov
ret
and
bound
out
sub
and
mov
cmp
or
testl
mov
xchg
pop
inc
popf
cltd
aaa
fs
mov
int3
out
pushfw
adc
outsl
gs
xchg
into
cld
fdivrs
leave
or
adc
outsl
movsb
mov
jg
bound
call
sbb
lret
fadd
aad
psllq
dec
repz
cs
push
mov
dec
outsl
mov
dec
and
dec
inc
xchg
jb
addr16
lods
mov
push
cmp
int
mov
mov
fists
int3
stc
mov
idiv
inc
mov
cli
int
and
lods
stos
ss
xchg
pop
popf
cwtl
lods
mov
mov
fst
into
outsl
bnd
and
test
jae
add
mov
loopne
sbb
push
imull
xchg
cmp
pop
or
movsl
out
ljmp
push
outsb
sbb
gs
push
xchg
ds
jmp
lret
lret
sub
jno
dec
into
imul
cs
sbb
gs
cs
cltd
jnp
ret
xchg
lea
jp
dec
jbe
enter
or
add
lret
int
xchg
mov
jge
inc
hlt
mov
dec
into
pop
cmp
rolb
ljmp
es
sarl
push
xchg
push
movsb
hlt
xchg
pusha
in
mov
cmc
and
jns
call
lods
dec
xchg
xchg
pusha
stos
fimull
xor
shll
loope
jb
int3
pop
jp
test
neg
cmp
xchg
insl
cmp
inc
roll
pop
cmc
iret
inc
add
and
das
les
lea
incl
sub
nop
jne
rcrb
inc
and
mov
xchg
dec
adc
adc
dec
call
push
dec
add
sub
add
mov
and
mulb
mov
les
nop
pop
popf
pop
or
cmp
insl
stos
scas
arpl
stc
or
data16
push
inc
lea
dec
sub
push
loop
icebp
std
sbb
outsl
pop
inc
mov
outsl
cwtl
adcl
gs
int
cmp
cmpsl
push
lret
daa
out
imul
inc
xchg
push
stos
rcr
or
xor
inc
cmp
scas
mov
imul
xchg
leave
xchg
shll
daa
or
xchg
or
popa
stc
add
mov
hlt
test
push
jne
cmpsl
lock
lock
loope
insl
test
sub
std
xlat
mov
mov
mov
stos
dec
push
jnp
inc
sbb
lret
xchg
jmp
push
mov
std
test
push
pop
dec
ss
pusha
pop
add
iret
bound
imul
jnp
popf
xchg
addr16
xchg
push
leave
iret
push
mov
jp
add
push
fsubs
icebp
xor
testl
imul
xchg
aad
clc
test
cld
rorb
pushf
dec
cmpsb
jb
cmp
in
adc
into
push
mov
xchg
adc
jmp
into
shlb
mov
xchg
repnz
fnstenv
lea
adc
inc
xor
test
cmp
jnp
les
and
ss
sub
hlt
push
sbb
int3
call
idivb
loop
pop
int
xchg
dec
push
ds
daa
fs
mov
subl
fadds
mov
and
jp
lea
sub
icebp
test
fstpt
mov
in
add
lea
in
mov
pushf
adc
adc
cmp
dec
daa
add
jge
mov
stos
inc
jmp
dec
xchg
and
dec
push
in
dec
movsl
jl
sub
lods
jo
movsb
mov
ds
dec
lea
fmuls
sbb
xchg
insl
mov
sub
cmp
mov
xchg
sbb
xorb
sti
mov
xchg
ja
dec
jge
sbb
in
loope
lods
cmp
push
int3
inc
pop
cmp
add
mov
and
lods
push
or
mov
fidivl
push
jp
test
mov
mov
pusha
dec
jl
add
or
add
cmp
dec
cmc
ss
lods
sbb
movsl
jg
push
push
push
rolb
push
xchg
outsb
ds
scas
jae
fdivs
pop
add
aas
fisubl
inc
clts
xchg
jmp
add
jecxz
test
fnsave
adc
mov
xchg
movsl
addl
mov
in
mulb
cmp
add
cmpsb
shll
or
sub
add
scas
ret
cmp
xchg
jae
mov
xor
outsl
fsubs
or
mov
pushf
std
ret
dec
mov
inc
push
push
xchg
iret
leave
mov
ljmp
bound
mov
and
pop
push
add
data16
imul
cmpsb
cld
hlt
add
fwait
stos
nop
adc
xor
inc
or
jbe
pop
outsl
cmp
xlat
ret
xchg
pushf
int3
mov
enter
sti
aaa
pusha
into
push
push
dec
loope
ljmp
addr16
xor
test
push
imul
lahf
pop
jp
adc
adcb
inc
test
pusha
jno
mov
call
push
orl
mov
daa
fisubl
clc
pop
into
daa
in
sub
xchg
cmc
mov
pop
sbb
dec
dec
cmc
pop
mov
cli
sahf
jo
push
jo
push
sahf
xchg
push
int
shrl
xor
into
and
das
out
outsb
dec
mov
lret
xorl
lahf
jmp
push
lock
pop
push
call
push
mov
fimull
popf
xlat
inc
sub
add
push
aas
rcr
lock
imul
out
lods
sub
cmp
imul
ds
testb
pop
dec
mov
sahf
xchg
adc
out
fstp
jp
sbb
pop
adc
fadds
add
cmc
cmp
xor
xchg
fwait
iret
fcoml
pop
adc
fnstenv
ss
push
lcall
fwait
std
outsb
or
iret
mov
fldt
sub
mov
flds
fistpll
push
add
xor
movsl
cwtl
mov
sub
and
xor
mov
lock
add
sub
mov
jmp
xor
mov
mov
aas
std
sub
mov
or
cmpsb
lret
xchg
fnstsw
sbb
pop
cld
sbb
cmpsl
push
pusha
inc
rorb
in
je
push
add
xchg
xchg
xchg
dec
outsl
cmp
push
jo
xchg
loopne
cmp
add
cmp
and
rcl
fcmovne
je
inc
or
jnp
xchg
fdivl
clc
rolb
add
mov
and
sub
cmp
dec
pop
inc
mov
sbb
mov
loopne
xchg
jnp
fbstp
xor
mov
xor
pop
jb
or
fmul
mov
xor
bound
cmp
in
lea
imull
add
add
dec
lock
sub
out
xor
movb
ret
pop
push
xchg
ds
mov
test
push
rcl
popa
les
ja
daa
cli
imul
xchg
push
scas
sub
movsb
cmpsb
and
jmp
aas
test
out
movsl
push
lret
sbb
lret
cmp
xchg
cmpsl
xchg
jbe
add
xchg
mov
and
lret
xor
ss
and
into
adc
adc
jge
and
subb
in
mov
and
ds
popf
bound
cs
repnz
push
mov
orb
movsb
lret
mov
inc
and
sbb
sbb
xchg
push
outsb
mov
out
cmc
mov
jle
insb
fwait
and
add
pop
pop
push
lods
mov
fwait
sahf
call
repz
ret
into
sub
fs
test
and
dec
push
lods
push
negb
call
test
and
jo
popf
daa
push
inc
cmp
in
shlb
xchg
mov
cmp
jmp
stc
das
out
stos
call
cmp
mov
xchg
push
sub
adc
sub
mov
mov
ss
aad
js
jle
xlat
pop
jmp
imul
sbb
out
jo
shlb
fidivrl
je
pop
pop
fiaddl
fstl
pusha
mov
mov
mov
clc
adc
xchg
popa
sbb
scas
dec
or
push
dec
jns
scas
xchg
jne
icebp
jb
rcrb
mov
pop
jno
test
or
sub
enter
stc
imul
push
or
mov
jecxz
inc
out
xchg
cld
mov
repz
sub
loop
sti
scas
call
and
stos
mov
lcall
pop
mov
xchg
clc
cmpsb
insl
cmp
jge
inc
orl
adc
or
adc
mov
jnp
dec
clc
mov
cmp
jns
pop
dec
or
cs
mov
cmp
adc
imul
mov
inc
fimuls
inc
inc
push
inc
mov
enter
xchg
mov
or
jecxz
fcmovnb
movsl
sub
push
call
sti
jecxz
insl
mov
pop
repz
sbb
ljmp
fdivl
adc
out
insl
enter
out
in
lods
pop
pop
bsr
and
fsubl
mov
test
and
roll
js
or
dec
adc
push
test
loope
push
pusha
stc
push
test
fs
or
cld
sbb
jb
xor
fisubl
push
cmp
jge
lods
pop
push
adc
mov
cmp
arpl
dec
xchg
jl
arpl
push
out
in
dec
fimuls
fdivs
daa
jecxz
inc
push
add
cmp
cs
repz
pop
lret
lret
movsb
push
sub
ret
scas
mov
push
outsb
jge
jno
push
adc
xlat
shlb
jge
mov
jns
inc
and
dec
pop
sbb
xchg
rcll
jmp
sahf
adc
mov
jae
in
aas
fimuls
adc
push
arpl
insb
sbb
es
cs
cmp
mov
sub
sub
mov
push
movsb
aaa
sbb
enter
cmp
sub
cmp
stos
shrl
pop
pop
clc
loopne
shrb
fsubr
pop
icebp
insb
int
mov
subl
popa
pop
or
imul
inc
popa
pusha
loopne
cmpsl
loopne
push
xor
mov
xchg
cltd
jl
sbb
jmp
lret
jp
sbb
fs
fisttpll
loope
cmpsb
jecxz
dec
dec
repnz
dec
int
das
push
or
cmp
inc
cmp
jmp
sti
fsts
outsl
cltd
frstor
push
push
mov
cmpl
pop
sbbb
stos
mov
inc
lret
xchg
jns
mov
push
adc
test
pop
add
ror
fildll
mov
sbb
sub
test
push
jge
mov
mov
cs
insb
adc
clc
test
rclb
and
icebp
stos
fsubp
mov
lret
jo
sti
mov
inc
mov
ficompl
add
loop
sbb
in
int
mov
js
fbld
push
mov
ret
cwtl
shll
loop
sub
add
xchg
cmp
xchg
sbb
mov
xor
dec
dec
push
mov
cwtl
test
shlb
xlat
fdivr
neg
adc
mov
int
inc
dec
outsl
rorb
fistps
xchg
mov
mov
and
push
test
imul
les
cvtpi2ps
jb
jl
inc
mov
std
out
fnstenv
aaa
arpl
mov
push
mov
inc
dec
call
add
movzwl
call
inc
push
inc
call
movzwl
dec
dec
imul
mov
call
mov
inc
xor
inc
lea
inc
dec
and
mov
inc
movswl
and
dec
call
dec
add
lea
lea
lea
call
inc
inc
call
mov
dec
movsbl
inc
imul
sub
inc
imul
inc
pop
add
add
mov
pop
lea
lea
pop
inc
add
dec
inc
pop
and
dec
dec
inc
imul
and
movsbl
sub
pop
dec
mov
pop
mov
add
mov
mov
mov
call
inc
mov
dec
imul
ret
mov
lea
push
dec
movzbl
push
add
push
lea
and
push
sub
push
mov
lea
mov
inc
dec
push
dec
ret
push
add
push
lea
movsbl
mov
lea
push
mov
sub
call
pop
ret
jmp
dec
lea
pop
pop
ret
push
inc
imul
inc
mov
lea
inc
movzbl
dec
sub
inc
lea
mov
mov
mov
lea
add
sub
imul
mov
inc
imul
inc
dec
add
sub
lea
add
mov
pop
ret
sub
mov
mov
lea
and
mov
inc
add
mov
xor
dec
mov
dec
inc
xor
mov
movzbl
mov
add
sub
inc
mov
inc
movzwl
dec
mov
lea
cmp
jb
add
push
inc
mov
push
movswl
sub
push
add
mov
xor
movswl
mov
xor
or
xor
xor
dec
mov
push
lea
lea
push
inc
lea
pop
dec
mov
dec
dec
sub
dec
mov
imul
dec
dec
xor
lea
mov
dec
add
mov
dec
mov
movzbl
movswl
and
lea
xor
add
or
mov
add
add
xor
movzbl
mov
add
inc
dec
dec
add
inc
movzwl
inc
inc
or
mov
sub
lea
add
jmp
add
inc
add
add
shl
inc
add
adc
add
inc
add
or
mov
inc
add
jp
add
add
xor
xorl
jbe
arpl
sub
sub
jns
cld
jo
shll
fnstcw
xchg
adc
cmc
mov
inc
imul
push
subl
push
mov
mov
cltd
aaa
jo
rcrl
icebp
fbstp
push
ror
ficompl
jnp
jg
test
cmp
ljmp
jb
mov
sub
shrb
push
movsl
sub
sub
faddp
ret
xchg
mov
out
stos
xor
cmp
imul
ds
int
shr
adc
adc
push
sub
jae
push
in
jle
sahf
mov
mov
push
push
lahf
ja
cmp
push
pop
loopne
lods
pop
xor
lea
insl
or
xor
cltd
mov
test
nop
inc
xchg
imul
push
mov
outsb
or
mov
jo
dec
fwait
icebp
stos
scas
in
ljmp
push
xor
clc
add
imul
pop
out
ss
loop
push
insb
test
jecxz
pop
cmp
cmp
xchg
push
mov
adc
movsl
jb
callw
aad
dec
je
sti
cmc
in
pop
lea
dec
xchg
into
hlt
xor
aas
mov
dec
out
and
call
enter
aam
inc
dec
dec
adc
daa
daa
add
inc
lea
pop
dec
sub
sub
test
inc
cwtl
dec
jbe
xor
outsl
loop
adc
je
mov
sbb
out
movsb
mov
enter
add
or
sub
pop
mov
js
jge
xor
push
adc
mov
aas
das
mov
and
out
or
rcrl
cmpsl
aaa
icebp
jle
insl
js
xor
fsubrl
xchg
sbb
ret
testl
mov
int3
sbb
cmpsb
xchg
jmp
ret
pop
dec
clc
jae
test
fldl
pop
dec
fwait
rclb
addb
push
mov
js
mov
testb
sti
mov
scas
or
call
or
fucomip
cmc
mov
mov
sbb
loop
fiaddl
fstpt
push
lods
push
cmpsl
add
adc
les
clc
fisubrl
xor
int
cmp
sti
gs
sbb
push
jl
jp
data16
adc
into
push
leave
inc
leave
mov
jno
jb
and
cwtl
pop
mov
jp
rcrl
jbe
fmuls
ja
sbb
arpl
push
jge
jae
into
jl
fnclex
cwtl
mov
cmp
popf
adc
push
fs
out
mov
pusha
call
xchg
push
mov
aaa
sbb
outsb
dec
insl
fsubs
scas
xchg
mov
cmp
lods
das
push
aaa
dec
sub
andl
aaa
gs
adc
sub
cltd
gs
jle
xor
adc
lock
xor
insl
xchg
push
inc
ret
leave
xor
adc
int
jne
add
cmp
nop
shrl
push
int
popa
add
dec
inc
push
ret
adc
xchg
cmp
sub
rclb
mov
mov
loop,pn
mov
lahf
jmp
and
fistps
jle
movsl
mov
push
jne
arpl
jl
ja
xor
fists
mov
pop
or
and
mov
loope
das
pop
repnz
lcall
push
nop
jo
xchg
xor
mov
adc
lahf
inc
push
push
pop
inc
jns
push
test
xor
push
add
mov
mov
outsl
cmp
mov
pop
sub
inc
in
and
into
pop
mov
sub
je
push
dec
iret
push
pop
pusha
mov
inc
popa
shlb
dec
jg
inc
xor
outsb
rclb
into
nop
mov
into
and
mov
fisubrs
or
clc
or
mov
inc
mov
mov
cs
adc
xlat
loope
stc
xor
add
adc
xor
jo
mov
or
sahf
jbe
subb
loope
out
sub
stc
push
pushf
cmpsl
aas
pusha
aad
mov
pushf
xlat
les
popf
rorb
test
roll
mov
xchg
imul
jecxz
inc
push
pushf
test
adc
and
push
cs
pop
mov
push
lret
je
adc
push
pop
sub
lret
xchg
dec
sbb
lods
lods
or
mov
data16
inc
xrstors
pop
addr16
mov
mov
fisubrs
sbb
lods
cs
cmp
stos
das
mov
push
loopne
mov
ja
jl
or
cmpsb
aaa
aas
popl
xchg
push
loope
mov
das
stos
and
pop
fwait
add
das
out
test
push
mov
xchg
jo
test
popa
mov
xorb
xchg
loopne
jno
std
cmp
and
shlb
mov
stos
aam
jb
mov
test
mov
sbb
jbe
sub
sbb
mov
ljmp
in
cld
std
hlt
sub
mov
imul
divb
mov
ja
out
ja
xchg
add
shll
in
ljmp
rcrb
loop
cmp
ret
out
pop
imul
xor
push
mov
push
inc
push
sbb
icebp
cltd
mov
xor
repz
mov
jmp
push
sbb
and
mov
mov
fsts
repz
add
mov
pop
push
popa
scas
insb
mov
pop
mov
sbb
sub
pop
or
loop
test
mov
dec
bound
cmp
pop
sbb
xchg
daa
fisubl
cs
gs
subb
and
pop
cld
mov
mov
mov
shlb
pop
pop
xor
das
dec
int
in
lea
xor
arpl
outsb
popa
push
adc
sahf
adc
mov
int
jp
mov
aam
lea
add
pop
lea
add
mov
mov
enter
leave
rcrl
or
push
shl
mov
and
dec
mov
sub
adc
xchg
fisubrl
fcompl
insl
add
rcr
cmpb
stos
adc
inc
adc
fidivrs
lret
mov
cmp
fiadds
pop
out
sbb
mov
ret
jecxz
imul
xchg
jg
add
es
mov
cmp
into
inc
gs
imul
in
or
push
and
in
es
bound
sbb
cwtl
and
sbb
mov
sub
jo
lret
sbb
lahf
mov
aaa
sub
adc
push
lret
mov
mov
popl
mov
clc
mov
dec
rcrb
lods
das
mov
push
mov
cli
sub
mov
data16
bound
mov
jae
jnp
imul
pop
dec
cmp
dec
sub
dec
inc
icebp
loope
add
jg
mov
imul
cmp
or
pop
into
add
outsb
sub
xor
sti
adc
mull
call
ror
push
scas
arpl
clc
add
dec
xchg
inc
ds
jle
pop
lahf
sahf
lahf
dec
inc
cmp
adc
pop
into
rorb
or
scas
mov
xorl
movsl
jo
sub
jb
dec
rol
sub
nop
lods
mov
and
xor
mov
inc
dec
data16
out
fnstcw
jp
or
imul
cmp
xchg
sub
enter
and
hlt
sbb
mov
call
aaa
adc
push
cs
cwtl
gs
xchg
xchg
jno
sbb
fs
mov
lock
cmp
stos
xor
mov
jmp
or
dec
cmp
mov
lret
ljmp
mov
lcall
lret
das
push
sub
push
iret
dec
mov
push
mov
jmp
cmpsb
mov
or
shll
pop
gs
jno
mov
in
mov
xor
mov
mov
push
repnz
push
dec
fs
xor
jns
mov
in
jne
or
push
mov
xor
test
xchg
jl
pop
lock
mov
push
into
mov
pop
test
mov
pop
dec
frstor
xor
pop
aaa
das
mov
aas
sbb
ss
mov
test
and
mov
pop
mov
inc
or
flds
imul
cmp
sub
addl
daa
fidivs
cwtl
mov
mov
push
mov
shrl
xor
iret
pop
sbb
das
pop
outsb
cmp
sbb
out
push
xchg
cmp
cmpsb
inc
repnz
sub
jmp
add
call
enter
and
int3
xor
push
mov
rclb
in
cmp
adc
cmp
dec
and
push
movl
neg
jp
cmp
jmp
fistpl
in
mov
ja
mov
push
push
outsl
push
mov
addb
jg
xor
sub
push
and
in
jle
loope
inc
in
fs
push
paddq
push
jb
or
jmp
ret
sub
pop
ja
aaa
adc
loope
addb
xchg
repnz
inc
xorl
sub
mov
inc
movsl
jecxz
xor
jne
mov
cmp
sub
mov
das
int3
jns
jbe
loopne
cli
lods
jge
mov
lods
dec
mov
stc
ljmp
cmc
jne
lcall
mov
sub
pop
or
and
mov
aaa
mov
stos
sbb
repnz
pushf
in
out
loope
cli
sbb
cltd
iret
andl
pushf
sub
pushf
mov
add
mov
mov
js
fdivrp
cmp
cwtl
ret
sbb
mov
ljmp
jbe
mov
adc
stos
sbb
push
jl
insl
xor
xchg
je
lods
sbb
out
ror
mov
add
add
pop
in
js
in
aad
sub
js
xchg
jne
daa
add
sbb
push
jnp
jae
mov
inc
inc
inc
into
mov
mov
mov
ret
mov
push
sub
scas
xchg
jnp
popf
cltd
sub
add
dec
xor
mov
aas
sarb
movsl
cld
sub
xchg
cmpsl
cld
lods
push
xchg
outsb
cli
scas
mov
fxch
das
jae
dec
push
push
xchg
mov
xor
push
shr
push
or
stos
add
imul
sub
cltd
pop
push
les
mov
andl
pop
sub
sub
add
clc
jp
sub
xor
fcomp
aam
push
pushl
cmp
je
call
fadd
test
fnstsw
push
fdivrl
shl
sub
ret
lock
xchg
stc
mov
and
in
das
mov
enter
les
cli
loopne
xor
push
dec
sbb
testb
and
sub
stc
or
stos
call
adc
in
inc
ret
aas
fsubs
add
push
xchg
ja
inc
mov
sbb
cwtl
mov
or
xchg
scas
sbb
and
in
repnz
dec
jo
dec
div
clc
or
adc
clc
or
push
loope
into
pop
mov
add
sbb
out
jnp
arpl
arpl
jmp
cmp
lahf
mov
jp
loopne
cmp
shlb
loope
loope
mov
sbb
mov
cmp
xchg
inc
dec
fpatan
test
sti
stos
sbb
mov
dec
mov
push
mov
add
and
ja
jle
repz
rcrb
icebp
xchg
jl
jmp
test
in
sub
jnp
mov
arpl
pop
cld
loope
xlat
sarl
push
and
fs
mulb
outsb
jo
xchg
ret
or
add
mov
xor
pop
adc
mov
push
pushf
sub
mov
rcr
in
ss
in
inc
or
sti
in
lret
push
ljmp
dec
mov
sub
mov
cmp
mov
add
and
int
jae
imul
and
xchg
mov
das
js
jnp
mov
inc
js
inc
pop
enter
stos
ss
lcall
scas
push
dec
and
cwtl
in
sub
sti
out
xor
popf
xchg
mov
push
add
loop
fldenv
repz
cs
das
pop
frstor
mov
mov
pop
xor
jne
insb
mov
imul
std
fnstcw
adc
cwtl
js
inc
lods
aad
sbb
xchg
rclb
push
adc
xchg
cmpsb
sti
pop
mov
mov
inc
and
jno
out
mov
daa
dec
jge
inc
icebp
push
inc
jge
ja
icebp
jecxz
jnp
pop
lods
shl
inc
xor
mov
and
sbb
add
jle
add
sub
rolb
in
mov
jg
lea
fadd
lret
fwait
aas
or
xchg
xchg
ret
jmp
cwtl
cmpsb
pop
push
ret
inc
pop
pop
fimull
nop
ds
cs
dec
rcll
cmp
out
add
addl
add
mov
or
dec
cmpsl
jle
repnz
movl
push
dec
repz
aad
jb
imul
mov
out
out
loopne
pop
or
xchg
scas
mov
mov
jo
and
iret
shll
dec
mov
in
vunpcklps
add
sub
xchg
dec
loopne
ret
jecxz
fsubl
push
dec
or
lret
mov
inc
dec
inc
mov
mov
subb
ficoml
in
out
cmp
int3
out
insl
sub
xchg
cmpsb
and
ret
mov
mov
jb
bound
push
fldcw
cwtl
or
inc
in
xor
mov
mov
mov
lret
xor
add
int
xchg
push
xchg
mov
fldl
cmp
pop
sbb
adc
jo
inc
cltd
popa
outsb
fsubl
dec
push
mov
and
xor
inc
daa
add
outsb
xor
icebp
inc
mov
in
loope
push
sub
js
lcall
andb
or
repnz
pop
push
sahf
jno
pop
arpl
pop
fcoml
sbb
sti
incb
cltd
push
push
xor
xchg
sbb
dec
cmc
pop
or
mov
cld
loop
lds
pop
ja
pusha
ljmp
ret
pop
push
pop
sbb
push
push
add
fucomi
xchg
sahf
cmp
dec
out
les
pop
or
inc
data16
mov
adc
andl
cmp
mov
sbb
or
enter
mov
push
mov
pop
imul
decl
jp
or
dec
dec
mov
cmp
or
loope
xchg
push
mov
popf
cmpsl
mov
jbe
repnz
data16
add
loope
fisttpll
data16
mov
outsl
push
sti
add
add
jg
mov
shll
mov
sahf
in
dec
aas
icebp
fidivs
add
pop
fnstsw
sbb
dec
or
adcl
std
je
fisubs
int
dec
outsb
fwait
mov
fs
jne
scas
test
xchg
negl
xlat
push
jp
lahf
pop
sub
mov
daa
nop
lret
loop
sub
jbe
inc
sub
fistpl
or
int
pop
add
xor
insl
cmp
or
push
pop
popf
lock
sbbl
jbe
scas
adc
dec
ret
mov
cmp
mov
mov
jp
mov
mov
add
cli
inc
ljmp
mov
push
push
aad
mov
call
add
adc
cmpsb
xchg
neg
xchg
pop
clc
popa
and
dec
int
stc
mov
push
push
loope
push
fistpl
repnz
pop
mov
mov
jnp
dec
movsl
jmp
lods
push
lods
mov
pushf
lods
shlb
ficomps
popa
sbb
jmp
mov
pusha
sbb
inc
pop
ja
mov
into
pop
lea
out
pop
lods
inc
test
dec
clc
jge
pop
sbb
push
lds
push
mov
mov
pop
or
ficoml
insb
mov
mov
dec
push
jae
sbb
xchg
push
mov
je
mov
into
xor
aad
push
add
outsb
lret
mov
jmp
mov
mov
sbb
in
packsswb
xchg
fcmovnbe
xchg
mov
add
mov
pop
and
loopne
sti
inc
out
jns
popf
outsb
xchg
jns
or
sub
shll
mov
adc
negb
add
js
or
push
mov
subl
xor
insl
mov
jne
sub
xchg
inc
dec
out
cmp
sub
arpl
rcrb
jnp
mov
das
jp
je
aas
cltd
lea
movsb
sbb
mov
sbb
dec
sarb
in
out
or
cmp
mov
xor
std
test
push
pop
mov
ret
pop
sbb
inc
inc
mov
jb
leave
imul
mov
sub
fadds
imul
xchg
ja
xor
push
popf
loopne
cld
mov
cmp
adc
xor
mov
loopne,pt
ja
ror
mov
pusha
pop
adc
xchg
xchg
out
cmpsl
fisubs
fcomps
cmp
or
pushf
clc
mov
cwtl
sbb
test
movsb
sub
pop
outsb
ffree
mov
enter
sbb
cmc
shlb
je
nop
dec
xor
ret
jno
test
je
out
push
stos
movsl
lods
sbb
mov
movsl
movsl
sahf
addr16
dec
cwtl
and
add
sub
xchg
cmp
adc
aaa
adc
lods
repnz
push
pop
jae
dec
loop
and
jbe
in
adc
lods
pop
es
aaa
icebp
aad
imul
clc
insb
mov
xchg
fadds
sbb
sbb
cmp
loop
idiv
insb
xchg
stos
xchg
inc
test
fcomps
cmp
inc
add
lds
popa
scas
push
popl
jl
dec
gs
arpl
xor
push
add
adc
fidivrs
push
ss
out
ret
lret
cmpsb
push
cmpsb
cld
hlt
mov
mov
pop
in
inc
gs
stc
pop
fs
sub
out
std
pop
mov
dec
pand
push
jns
sahf
jmp
divl
pop
ss
cmc
push
sbb
cmpsb
cmpsb
clc
sahf
cld
ljmp
xor
sub
xor
in
fisttps
pop
test
adc
and
out
push
mov
out
jg
lea
add
cmp
notb
enter
in
inc
push
push
enter
mov
jl
movsl
bound
aad
stos
or
mov
cmpsb
into
mov
xchg
enter
imul
ret
div
cmpsb
out
fs
inc
jg
roll
jmp
lea
push
ja
aas
mov
cld
sti
dec
adc
dec
cmp
xor
mov
lret
mov
das
orl
loop
or
and
xor
scas
jge
mov
lock
xor
addr16
jp
and
cmp
test
das
pop
pusha
mov
ret
inc
jl
es
out
fucomp
clc
push
mov
mov
push
andl
sub
add
movsb
add
cmc
rclb
sbb
push
cmp
mov
imul
sbb
add
push
xchg
aaa
or
or
cld
sbbb
xor
lahf
mov
xchg
ljmp
xor
cli
imul
call
fdivrs
and
aaa
flds
sub
push
sbb
je
out
mov
push
cmpsb
push
fwait
sbb
mov
mov
ja
test
mov
inc
pop
lret
dec
dec
jnp
jl
push
pop
fcmovu
nop
in
cmp
testl
ss
pop
outsb
fcmovnb
xchg
fsubs
jecxz
inc
jmp
ret
mov
sti
mov
and
dec
jns
add
or
adc
xor
arpl
adc
push
sbb
scas
cmc
mov
popa
call
or
jbe
sub
insb
adc
push
mov
movsl
mov
jo
nop
mov
lods
xor
mov
mov
cli
jge
cmpsb
mov
pop
shlb
jge
pop
jne
data16
inc
adc
ja
stos
mov
sar
hlt
aad
cltd
loopne
fsub
cltd
repnz
mov
les
nop
pop
mov
xor
inc
mov
clc
lcall
testl
out
fcompl
movsb
jae
dec
pop
adc
jp
scas
or
jmp
push
gs
fsts
pop
push
stos
or
arpl
jg
mov
mov
pop
dec
mov
xor
mov
jmp
push
pop
out
cmpsb
shrl
pop
movsl
push
pop
or
mov
push
adc
icebp
xorb
jo
lcall
sub
jo
repz
and
xor
mov
pop
mov
clc
jge
leave
out
cvtps2pd
dec
nop
icebp
and
andb
popa
movsl
jae
out
xchg
dec
dec
js
movsb
adc
lods
sarl
cmp
mov
lcall
mov
xor
je
xlat
fisttps
jmp
add
pop
sub
push
out
mov
call
pop
shrl
into
inc
popf
dec
adc
cmp
push
pop
sbb
fisttpl
xchg
mov
mov
adc
or
inc
mov
lcall
jnp
shlb
xor
outsb
in
pop
pop
xchg
aaa
inc
repz
xchg
fdivl
or
xor
pop
shlb
pop
jae
and
out
hlt
dec
jl
js
add
sbb
je
and
in
out
cmp
fwait
xlat
mov
cmp
jmp
dec
movsl
rcl
in
mov
incb
mov
test
sub
jmp
into
jmp
cmp
rclb
ds
stos
inc
and
sub
or
pop
out
xor
push
roll
cmp
in
sub
xor
sbb
outsb
in
dec
xor
jbe
mov
mov
sub
mov
inc
je
mov
iret
push
mov
or
aas
push
push
test
enter
jp
xchg
push
int3
mov
inc
xlat
movl
hlt
pop
cwtl
adcl
orb
out
cmpsb
lret
adc
shrl
xchg
and
adc
ljmp
sti
int
popl
call
loope
aam
push
lods
mov
mov
into
ror
aam
ss
popa
mov
jmp
data16
push
add
mov
cmp
add
dec
lahf
fadds
jp
ljmp
mov
stos
fcmovnb
mov
ljmp
xchg
jbe
int3
loope
mov
fcompl
enter
cwtl
ret
pop
inc
shlb
adcb
sub
ss
sub
cmp
pop
aas
ficoml
xor
cmp
dec
out
push
pop
dec
cltd
popf
xchg
push
sub
dec
in
fstp
roll
faddl
lods
jg
mov
jae
jge
nop
in
out
rclb
addl
cld
inc
mov
arpl
inc
out
fldenv
and
sbb
call
sbb
dec
add
rclb
dec
iret
dec
stos
mov
push
popa
icebp
push
inc
sbb
add
test
xlat
in
xor
mov
test
pop
jp
fstl
jno
js
mov
dec
push
mov
pop
xor
cld
jne
push
inc
lock
dec
push
in
scas
shr
movsl
push
sbb
mov
in
les
mov
repnz
push
in
sbb
idivl
pop
repnz
jecxz
lea
daa
gs
clc
scas
inc
fsubrl
cltd
imul
jno
das
ret
pop
lret
mov
xchg
mov
lock
inc
pop
pushf
test
pop
dec
dec
jge
pop
sub
mov
cwtl
inc
xor
jbe
pop
jmp
mov
sub
movsb
lahf
cmp
cltd
fisubrl
jae
dec
scas
inc
jmp
pop
xlat
xlat
fwait
and
scas
das
lock
and
outsl
arpl
sub
nop
pop
sub
mov
call
dec
pop
jnp
pop
mov
test
xchg
shl
mov
xchg
push
lret
push
movsb
pusha
in
add
push
repz
movsb
push
dec
popa
cmp
leave
and
lcall
xchg
shlb
repz
xlat
lock
int3
push
aaa
mov
stc
mov
cmpsl
push
inc
xchg
add
rol
rcrb
dec
out
in
insb
xor
inc
sub
in
aaa
movsl
imul
mov
jecxz
out
lods
and
mov
mov
jbe
lret
mov
dec
ss
dec
sbb
aaa
jl
push
mov
fstp
and
cmp
movsb
mov
jnp
sub
cmp
lods
in
ss
add
loop
sub
mov
outsl
jmp
or
stos
and
sbb
or
cmp
mov
xchg
adc
mov
aad
pop
jne
jbe
sahf
or
test
insb
iret
test
sub
lods
adc
pop
xchg
jne
adc
orl
sbb
idivb
daa
fcoml
inc
xchg
ja
jne
jnp
inc
mov
loope
xchg
and
scas
in
sub
xchg
popf
push
or
push
fimuls
leave
inc
bsr
dec
cmp
push
out
cmp
ljmp
pop
hlt
and
faddl
inc
add
jge
adc
pop
push
repz
ljmp
mov
push
jae
mov
mov
cmpsb
stos
mov
cwtl
mov
mov
orl
add
lea
push
and
mov
aad
mov
pop
sub
sbb
or
adc
stos
addr16
lret
in
rcr
jb
pop
jmp
pushf
mov
insb
sahf
cmp
inc
pop
in
mov
stos
mov
into
xchg
int
mov
addr16
push
fmull
or
dec
cmp
mov
pop
cmp
adcb
jle
dec
fcompl
cmpsb
andb
dec
cmpl
movsb
pop
ja
test
out
rol
stc
popf
inc
test
fidivrs
rorb
mov
sbb
out
je
cmp
xchg
and
push
call
mov
xlat
jg
scas
mov
sub
arpl
loope
rcl
pop
mov
adc
cmp
and
push
mov
in
sbb
sti
dec
mov
dec
rcrl
inc
xorb
xchg
cli
sub
inc
test
cmp
sbb
sahf
aad
and
or
or
addb
nop
arpl
das
cmp
out
and
call
fldt
scas
jg
push
or
pop
jl
imul
pop
jg
inc
add
jecxz
inc
sbb
loopne
insl
add
fadds
in
test
jp
pop
pop
es
cmp
or
and
cmp
sub
jl
andb
stos
add
gs
jge
outsb
xor
lahf
aad
or
faddl
mov
in
and
idivb
test
adc
hlt
je
sub
ror
adc
shrl
jle
push
sub
push
cmp
decl
sub
clts
dec
aam
xchg
push
out
xor
dec
popf
adc
lahf
in
lock
lahf
mov
sub
adc
mov
jo
dec
aaa
push
sub
outsb
jnp
push
lcall
out
test
addr16
fldenv
and
adc
push
movsb
movb
lds
aaa
jo
dec
push
notb
lds
xchg
lods
jle
xchg
leave
lcall
repnz
jge
icebp
gs
xor
sahf
in
popf
rorl
mov
nop
push
out
fldlg2
outsb
push
push
pop
pop
out
femms
xor
push
xor
movsb
shr
sub
pushf
fcoml
adc
xlat
lret
mov
mov
test
fildl
scas
mov
lods
inc
out
dec
popa
imul
sbb
lods
adc
rolb
dec
cmp
int
sbb
ficomps
and
test
mov
lea
test
loopne
imul
push
xchg
loop
std
add
cwtl
mov
mov
out
jle
fistl
mov
sti
xor
fwait
mov
and
scas
int
adc
mov
jo
mov
or
inc
dec
pushf
mov
clc
dec
mov
pusha
lcall
sub
mov
jnp
rorl
mov
fs
ds
mov
dec
insb
add
pop
xor
loopne
cmp
cmc
pop
aas
pusha
clc
xor
add
xor
jae
jl
mov
jne
and
fs
mov
in
shrl
imul
addl
adc
movsb
and
pushf
cwtl
and
pop
mov
data16
mov
nop
xchg
cmp
adc
sti
xchg
mull
outsl
xorb
dec
ret
mov
inc
mov
jnp
das
push
xor
jecxz
cmpb
cmpsb
scas
add
mov
rorb
cs
jle
cmp
rcr
mov
test
jp
add
xchg
jne
dec
mov
in
inc
jno
mov
cmp
aaa
sub
mov
icebp
aad
and
mov
jecxz
inc
call
sub
dec
in
adc
leave
mov
push
push
loopne
fcompl
loop
ret
push
xchg
jl
test
xchg
or
and
push
dec
and
adc
xchg
add
jecxz
jo
mov
jle
icebp
push
es
push
sub
add
stos
mov
hlt
add
lods
mov
inc
test
add
jb
cmpsl
int3
jnp
and
movsl
lods
jmp
lea
out
or
icebp
sbb
pop
jmp
aas
sub
xchg
incl
imul
sahf
fsub
cli
int3
dec
cmp
lock
enter
addr16
dec
mov
adc
shl
int
testl
push
fidivs
std
test
or
cmpsl
add
mov
clc
stos
and
jne
mov
mov
iret
or
lahf
cmc
mov
mov
ror
dec
jle
and
icebp
or
mov
loopne
inc
or
jmp
jo
jle
sbb
inc
test
push
xor
in
mov
ror
cld
sahf
push
xchg
iret
insl
sbb
pop
int3
outsl
jmp
jmp
insb
outsb
push
xchg
mov
push
and
testb
mov
fnstcw
push
mov
or
adcl
insb
inc
pushf
mov
js
loop
sbbb
sub
scas
add
jl
cs
jb
xchg
out
push
mov
push
sbb
imull
push
neg
out
cwtl
shr
aad
hlt
insl
sub
flds
lock
gs
mov
mov
add
hlt
sbb
xor
jmp
lds
out
in
push
jle
cmp
bound
clc
fnsave
xor
hlt
inc
push
pusha
pusha
cmp
and
mov
je
sub
test
adcl
cld
cltd
sub
pop
inc
insl
movsb
mov
fst
pop
les
loop
popa
mov
adc
insl
outsb
jl
inc
and
mov
cld
mull
loopne
adc
pop
daa
sub
inc
stos
or
xchg
aam
jg
fcomip
add
xchg
cmp
pop
cmpsl
leave
push
xor
sar
jmp
dec
adc
rep
dec
cli
cltd
dec
jb
cmpsb
and
cmp
cli
test
xlat
stc
scas
lods
fwait
ja
test
movsb
sbb
push
iret
push
jbe
lock
xchg
dec
jnp
mov
push
mov
loope
mov
dec
jmp
fwait
fisubl
cmpsb
pop
jge
xchg
sub
xchg
icebp
sbb
rcpps
ret
cmp
pop
or
mov
fists
mull
out
fldl
stos
ljmp
jge
xchg
in
pop
insl
mov
in
mov
scas
push
push
mov
jns
aas
pop
pop
inc
push
mov
add
adc
push
sub
push
ja
cmp
in
pop
adc
lret
jne
pop
stos
sub
mov
xchg
ret
fs
cmpsb
movsb
neg
mov
jae,pn
inc
add
add
and
cmpsl
push
mov
fsub
add
shlb
lock
push
ss
popa
xor
in
js
cmp
jbe
or
addr16
ss
shl
sarl
xor
jle
daa
ljmp
push
outsb
lcall
shl
adc
adc
ffree
sub
sti
mov
dec
lret
es
clc
jb
cmc
mov
mov
js
aaa
or
pop
cli
mov
add
inc
sahf
push
or
mov
stos
dec
jne
lea
lret
mov
movsl
push
jb
int3
lods
iret
out
aam
ficomps
fiadds
les
insb
out
sbbl
sbbl
mov
out
add
xor
out
adc
cmp
dec
loope
aad
xchg
cld
sub
mov
cmovg
outsl
ljmp
leave
gs
addb
xor
lahf
in
mov
sub
movsb
rcrb
sarl
xchg
sahf
and
push
push
out
xor
mov
xchg
pop
cmp
mov
and
xor
sbb
faddp
fnstsw
push
decl
aaa
sub
sbb
add
daa
mov
mov
jnp
in
in
cmp
cltd
jo
cmp
lock
xlat
and
stos
lahf
pop
dec
adc
mov
insb
push
popa
jl
push
sub
js
bound
fsts
dec
mov
cmpsl
mov
sbb
adc
sub
or
pushf
movsl
mov
mov
aam
xchg
and
insb
iret
div
inc
lret
inc
xchg
push
adc
insb
xchg
rclb
ja
mov
mov
sbb
test
ss
dec
cli
es
rorb
dec
lret
shr
fldcw
pop
sbb
insb
test
xchg
daa
sti
mov
loop
jae
lods
leave
loope
and
inc
test
adc
jmp
xchg
idivl
inc
push
xor
dec
inc
mov
pop
inc
mov
fsubl
dec
mov
or
stc
sbb
fstl
pushl
sub
subl
lock
andl
mov
outsb
jecxz
sub
pop
cmp
leave
pop
aam
push
bound
dec
xchg
ss
mov
lret
fucomip
out
popf
data16
mov
pop
lahf
sub
sub
mov
cmp
sbb
inc
push
adc
stos
xor
cltd
sub
fisubrs
imul
pop
jmp
mov
call
scas
pop
ret
into
loopne
cmp
mov
add
sbb
pop
iret
fldenv
mov
clc
inc
inc
ds
leave
pop
jle
pop
xchg
inc
jl
add
cmc
test
xchg
aas
popf
nop
xor
sahf
jae
inc
outsl
and
mov
sub
sbb
inc
orl
xor
xlat
test
insl
sarb
arpl
push
scas
jp
in
and
sbb
pop
int
bound
rclb
push
push
les
jle
xchg
or
aaa
cmpl
push
sub
inc
fstpt
shrl
into
ret
adc
pop
jb
scas
insl
cmp
ss
dec
mov
jl
in
sbb
pop
add
insb
dec
lea
or
sbb
xor
xor
dec
aaa
aas
fisubrl
inc
mov
outsl
in
mov
cmp
std
dec
test
inc
stos
gs
xor
adc
rorb
subl
xchg
jle
call
out
rcrb
cmp
mov
aas
and
out
lahf
add
fmuls
dec
mov
bound
ret
inc
xchg
pop
and
pop
push
mov
fiaddl
and
scas
cmp
fldenv
cmpsb
cmp
clc
jae
or
xor
fnstenv
cs
cmp
mov
inc
cmp
js
pop
loop
mov
stos
testl
jae
gs
or
sahf
in
arpl
lock
pop
loop
es
mov
inc
lret
mov
popa
arpl
push
adc
testb
jno
daa
fs
xchg
cmp
mov
push
jne
fldt
sbb
gs
adc
ja
in
add
cwtl
cmp
imul
or
jne
pop
mov
outsb
or
daa
clc
in
int3
sub
icebp
and
frstor
jne
sub
mov
pop
repz
jmp
mov
cli
pop
add
sub
xchg
sbb
adc
push
adc
add
xchg
push
in
or
call
pop
sub
mov
jbe
dec
mov
fcmovb
cwtl
mov
test
lock
aad
shrl
mov
adcb
out
mov
pop
or
cltd
aaa
loope
dec
test
push
int3
add
int
push
mov
das
leave
rorb
mov
inc
adc
pop
add
mov
cmpsl
push
rcrl
sub
xor
pop
mov
aad
push
add
clc
fldl
pop
adc
mov
inc
lret
shl
aaa
push
or
mov
push
push
aaa
cmpl
jg
sti
sub
jnp
pop
push
push
outsb
aam
aas
fisubrs
jg
inc
ja
inc
lret
jne
dec
inc
inc
ficoml
jecxz
mov
jl,pn
gs
xor
mov
inc
imul
cmp
add
push
pop
int
and
jne
cli
in
cmp
addr16
inc
lods
lods
mov
adc
sbb
adc
int3
inc
shrl
jns
inc
and
sahf
pop
cmp
stos
mov
lea
jg
lcall
push
mov
insb
sbb
pop
xchg
sub
cltd
mov
cmp
stos
sub
mov
push
mov
jno
out
inc
cld
cwtl
dec
insb
adc
jge
mov
test
outsl
fchs
ret
fimull
inc
addr16
jmp
enter
pop
sti
xor
ret
sbb
js
cmp
lods
imul
dec
rol
lret
cmc
mov
ret
xor
xchg
loop
sbb
push
lock
hlt
mov
in
pop
adc
push
sbb
cmp
leave
mov
lods
mov
adc
ljmp
aas
or
unpcklps
jne
jae
rclb
add
in
lret
cli
mov
adc
iret
sbb
test
dec
ds
xor
inc
jge
and
stos
mov
in
jnp
cmp
mov
add
sbb
jbe
mov
andl
or
in
das
mov
adc
dec
mov
movsb
push
mov
jb
and
popf
cmp
xor
cmpsl
jle
les
in
and
popf
loope
and
js
push
adc
fcoms
or
aas
out
adc
es
jg
fbld
xchg
inc
sbb
pop
pop
stc
mov
rolb
fbld
in
not
sahf
popa
xorps
aad
xor
xor
mov
cmp
jnp
cmovl
and
jb
push
pop
cmp
mov
cmp
nop
inc
add
ds
and
mov
mov
test
fistps
call
lods
lds
test
sbb
jnp
adcl
sub
stos
mov
pop
push
int3
pop
insb
dec
lock
ficoml
fsub
bound
inc
hlt
jp
xchg
test
or
out
mov
mov
cmp
or
or
scas
lret
or
sbb
inc
pop
clc
das
sub
jo
or
add
repz
lods
cmp
cmp
pop
or
out
push
roll
pop
imull
repz
call
mov
pop
xor
lock
xor
cs
mov
jns
xor
pusha
push
call
mov
in
sub
mov
xchg
dec
test
pop
fadd
sti
jne
aam
sub
cs
hlt
mov
xchg
cli
mov
fucomip
dec
pop
mov
pop
mov
xchg
cli
and
lods
jle
and
fdivl
mov
lahf
mov
or
mov
sub
pop
xor
ja
sbb
cli
pop
imul
scas
mov
fsubrl
pushf
rclb
aaa
xor
movsl
popa
shrb
int
inc
or
mov
sbb
lretw
cmpb
cmp
push
cli
in
int3
movsb
adc
scas
loop
or
mov
sbb
iret
or
push
pop
loopne
in
lock
test
movsb
and
mov
adc
test
dec
dec
jecxz
pop
stos
adc
xchg
sti
mov
in
stos
out
xchg
imul
jle
out
xor
je
call
pop
enter
out
fwait
inc
pop
inc
arpl
sub
andb
jne
pop
sbb
adc
dec
flds
test
lods
lods
push
repz
inc
repnz
popf
lods
rcl
je
rolb
push
cwtl
pop
int3
stc
inc
aas
mov
test
sbb
lret
cmp
out
jne
inc
les
dec
mov
jmp
jg
mov
fwait
adc
stos
pop
dec
sub
add
idiv
in
fwait
push
push
inc
scas
addr16
ljmp
outsb
jle
fsubr
jo
mov
add
lods
les
int3
or
arpl
test
lea
aaa
cmpsl
or
fcoms
inc
and
adc
and
xor
cltd
pop
or
popf
divb
mov
clc
gs
inc
pop
movsl
gs
mov
mov
sub
icebp
dec
inc
or
sbb
jo
popa
aam
push
jge
sbb
movsb
lock
xor
pop
sub
fstps
lea
sbb
cwtl
sarb
inc
pop
sub
idivb
push
push
sbb
mov
imul
pop
push
and
fldcw
sbb
testl
push
fldt
inc
out
push
sub
and
out
push
push
adc
lcall
mov
in
jns
pop
jp
jmp
sub
clc
dec
lock
jno
xor
cltd
jns
lods
sbb
or
jo
addr16
cmp
xlat
lds
popa
xor
lock
add
lret
leave
imul
adc
mov
dec
ror
sbb
rorb
pop
inc
lods
sbb
div
out
stc
test
fsubl
mov
rcr
pop
inc
add
jle
lcall
push
mov
inc
imul
xor
push
sbb
cltd
in
cld
mov
outsl
shl
nop
dec
cmp
xlat
cmp
jge
add
cmp
loope
cmp
enter
or
dec
xor
or
xor
cs
add
out
push
jg
xchg
pop
nop
in
xchg
fld
sbb
stos
stc
sbb
xchg
push
rclb
int3
loope
ds
add
xchg
lcall
inc
je
xlat
es
xor
test
cld
inc
lcall
xor
in
addr16
imul
jbe
dec
cs
jo
sub
jmp
xor
push
frstpm(287
cmp
push
aaa
imul
das
lret
sarb
aam
xchg
mov
add
sub
into
arpl
int
aam
jns
jecxz
outsb
push
mov
filds
rcr
stos
bound
jbe
cwtl
into
cmpl
xor
cwtl
mov
lret
js
and
mov
inc
jecxz
int3
filds
es
push
adc
aaa
adc
dec
jb
loop
mov
mov
js
mov
fwait
mov
cli
dec
sbb
movl
sub
push
out
dec
rolb
fcompl
xor
repz
cmc
mov
add
std
shlb
data16
out
test
mov
dec
mov
jl
jmp
inc
addr16
cmpsl
pop
inc
push
aas
and
ret
sbb
imul
in
dec
jp
das
xchg
sbb
add
fcomps
mov
xor
aas
test
rcrb
push
cmp
adc
push
es
in
xor
andl
push
mov
sbb
call
mov
mov
lea
ret
add
les
mov
hlt
sbb
jge
push
negb
rolb
inc
je
cmp
test
insl
jmp
pop
pusha
negl
sub
jle
orl
fstpl
outsl
andl
pop
fisubl
call
stos
push
and
and
mov
insb
popf
push
and
aad
dec
fisttps
sarl
in
adc
jmp
in
lahf
xchg
cmp
xor
xchg
sub
push
lods
dec
fisubs
mov
scas
adc
test
aas
and
pop
or
lock
xor
in
xor
mov
dec
nop
inc
pop
clc
scas
mov
std
repz
pop
mov
push
in
xchg
dec
clc
xchg
xor
ud0
notl
int
out
dec
adc
popf
je
xor
lret
lds
jg
xlat
push
sbb
xor
mull
xor
mov
out
sbb
pusha
fmull
inc
xchg
iret
jl
xor
pop
imul
std
pop
mov
cmp
cmp
cli
adc
insl
gs
lcall
mov
call
mov
or
adc
aaa
fwait
mov
push
pop
jg
jl
mov
sbb
cmpsb
push
movsb
mov
and
jae
add
stos
je
icebp
push
add
or
inc
sub
or
xor
push
sub
into
xor
xor
push
stos
cmpsl
sub
jp
loopne
add
jp
jne
inc
sub
sbb
aad
outsb
mov
xorl
popf
std
push
inc
sub
mov
pushf
xchg
pusha
xchg
inc
int
fsubrl
lret
aad
lods
push
or
int3
mov
into
push
jne
or
add
xchg
in
popa
jne
aam
into
pop
test
sbb
jmp
xchg
xchg
mov
mov
mov
call
mov
inc
imul
loopne
imul
dec
mov
jg
in
hlt
insl
aas
mov
mov
clc
movsl
push
sub
repnz
and
mov
mov
ret
fwait
repnz
mov
out
test
xchg
push
pop
cli
pop
lahf
cmpl
iret
pop
fsub
fists
inc
out
repz
scas
sub
cli
out
in
jg
mov
inc
in
out
popf
cmp
mov
jb
push
out
fmull
mov
test
add
fwait
pusha
sarb
fists
add
ss
add
or
lahf
fimuls
dec
sub
es
ljmp
test
jmp
les
cmp
jl
das
xlat
divb
add
mov
mov
jg
xor
imul
mov
push
cwtl
xor
and
in
bnd
xchg
cmc
push
add
mov
jno
call
jl
inc
sub
lret
pushf
sbb
in
cltd
jp
push
mov
push
jle
pop
mov
jmp
jb
mov
ds
fdivs
mov
push
cli
xchg
lock
lods
adc
lds
add
fnop
push
in
call
mov
pop
mov
sbb
jbe
sbb
ficomps
xor
int3
fdivs
fistpl
jne
test
mov
mov
lods
out
mov
adc
dec
aam
push
xor
sub
push
pop
lret
pushf
fwait
sub
adc
outsl
leave
lahf
push
xchg
sarl
movsl
insl
jmp
loop
lahf
cs
int
lods
mov
inc
push
mov
push
sub
enter
hlt
aas
jnp
jns
pop
and
dec
sti
mov
mov
and
mov
push
aas
push
mov
insl
lcall
test
xchg
mov
sbb
movsb
jbe
clc
lcall
sbb
push
and
mov
shll
and
out
mov
cmp
aam
loopne
sub
cmp
imul
in
lds
or
fidivrs
je
ret
inc
pop
push
add
test
adc
leave
mov
mov
pushf
add
das
sub
test
mov
pushf
sbb
popa
inc
stos
dec
xchg
cmp
or
imul
rorb
stos
pop
shl
enter
pusha
sbb
fsts
repnz
pop
dec
sti
lret
inc
movsb
fbld
jae
mov
sbb
mov
cwtl
ja
jno
or
mov
das
sahf
mov
pop
mov
gs
xor
push
repnz
mov
and
jnp
push
ja
mov
xlat
sbb
leave
xor
mov
xor
jl
inc
and
sahf
rcrb
add
bound
fnstenv
jg
jl
rorl
jge
mov
push
push
sub
je
mov
js
fnsave
sub
adc
or
dec
push
in
jge
dec
push
movsl
cmp
push
pop
xlat
xchg
add
lods
enter
mov
cli
cmp
pop
jns
loopne
xor
lea
push
jb
jns
mov
std
ja
push
mov
sbb
or
pop
add
mull
cmpb
jb
aad
pop
mov
gs
inc
leave
outsl
add
fistl
in
mov
sbb
iret
out
shrb
popa
lahf
mov
jb
pop
aam
pop
stos
mov
loopne
enter
add
pop
out
cmovne
push
dec
gs
xchg
push
aad
push
jbe
movsb
sub
and
mov
inc
adc
sbb
stos
push
push
push
cmpsb
push
cld
mov
pop
pop
stc
mov
mov
mov
gs
adc
pop
xchg
adc
lods
andb
or
add
mov
lods
aaa
adc
test
jo
test
popf
cmp
sbb
lret
pop
outsl
ret
sub
inc
insb
add
pop
fstpl
sbb
dec
adc
dec
ficoml
xor
mov
into
pop
jle
imul
sub
cwtl
cli
xchg
mov
mov
lahf
lret
jp
hlt
pushf
fs
daa
repnz
cli
lret
push
and
pop
out
and
pusha
lret
sub
push
leave
cmpsl
idivb
sahf
push
arpl
xchg
add
arpl
push
adc
daa
rcrb
jle
cmp
lods
js
jle
dec
mov
sbb
pusha
std
test
sub
test
mov
std
xchg
jg
mov
push
pusha
jmp
aas
popa
lahf
aas
mov
jnp
ficoml
shlb
dec
xor
call
ds
adc
bound
repz
pop
fistps
cli
jp
jne
jo
cmp
pop
insb
cmp
sbb
inc
pushf
xlat
in
sbb
inc
and
add
fucomip
repnz
and
and
push
hlt
cmp
jno
inc
cmc
call
push
or
test
push
cmp
setp
bound
fbld
pop
mov
pop
push
xor
loopne
repz
dec
out
clc
or
xor
xor
mov
movsb
xor
push
mov
xchg
fs
cmp
test
sbb
mov
data16
sub
xchg
rcll
mov
push
fcomps
cmp
mov
std
push
pause
mov
pop
pop
sub
mov
sbb
dec
lfs
fldt
lock
pop
dec
in
lahf
cmp
decb
push
enter
jecxz
stos
mov
and
mov
mov
call
js
and
mov
cs
out
sub
push
or
pop
lock
sarb
push
push
je
in
bts
inc
sbb
nop
dec
jb
cli
inc
in
mov
sahf
cs
rcll
fcmovnb
test
ja
mov
sbb
xor
addr16
pop
nop
xchg
mov
and
fs
aam
lods
xchg
ret
jns
rclb
adc
dec
clc
cmp
mov
dec
pop
in
mov
les
in
dec
leave
xchg
pushf
mov
sahf
ret
je
fsubrs
rol
xchg
and
cmpsb
mov
test
fnstsw
fsin
sbb
je
roll
popf
xchg
enter
jp
addr16
push
xchg
pop
mov
xor
xchg
add
and
ljmp
cmpsb
mov
mov
ljmp
gs
mov
inc
or
cmpb
mov
pop
nop
cmpsb
shll
mov
sub
and
in
mov
or
and
imul
fwait
mov
sbb
dec
ficoms
inc
dec
lret
ljmp
sbb
sub
hlt
jl
cli
mov
fwait
mov
ror
data16
shrl
xchg
xchg
xchg
in
cli
rclb
add
loop
fistpll
xchg
xchg
push
int3
pop
insb
and
cmp
cs
inc
mov
add
pop
lock
sub
loop
xor
sbb
add
cmpsl
sub
scas
xchg
mov
pop
push
jp
sub
sti
ss
cmp
push
xor
and
clc
stos
jecxz
jecxz
adc
ret
push
adc
fisubrs
outsb
mov
lret
mov
push
lods
imul
call
push
sahf
pop
dec
cmp
sub
mov
add
pop
loope
stos
aaa
cli
adc
inc
add
aad
scas
push
loope
dec
mov
pop
int
pop
into
dec
cmc
ja
add
cmp
ja
popf
mov
adcl
scas
test
mov
mov
in
mov
pop
mov
mov
fldenv
dec
hlt
std
mov
and
iret
roll
push
aaa
jle
out
popf
inc
lcall
adc
mov
lret
dec
btc
fsubl
pop
mov
pop
sub
into
cltd
in
xor
mov
adc
insb
repnz
adc
xchg
xchg
or
pop
xor
or
sub
cmp
jmp
insb
xor
roll
pop
add
aas
mov
mov
fcoms
add
inc
push
inc
xchg
cmpsb
inc
fucomip
xchg
sub
sub
mov
repnz
arpl
shll
xchg
push
or
jge
adc
xor
fistpl
jmp
sbb
mov
into
push
cmp
imul
push
mov
mov
rclb
pop
shl
lahf
addr16
push
jmp
push
call
xchg
inc
nop
pop
out
js
mov
aad
jl
dec
out
int3
fmulp
mov
xor
mov
add
xchg
mov
cmp
scas
je
xchg
sbb
adc
ficoml
xorb
or
orb
jg
add
push
call
in
mov
jmp
enter
fimuls
dec
or
jbe
cmc
clc
addl
negl
movsl
das
cmp
sarl
and
cmp
mov
cmp
sub
pop
les
js
mov
or
xchg
mov
dec
mov
mov
repz
arpl
pop
test
jno
or
mov
inc
aaa
cltd
dec
sub
xchg
push
popf
and
daa
lods
add
inc
cld
cltd
ljmp
adc
in
lret
push
insl
pop
add
sahf
test
inc
das
cmp
cmp
outsb
cmp
adc
je
mov
in
sub
or
clc
xor
fmul
fwait
or
xchg
cmp
incb
js
ficomps
or
inc
shlb
pop
test
xorb
ret
mov
jl
inc
jb
sub
push
mov
jbe
lcall
sub
fwait
enter
adc
test
ret
add
jno
xchg
in
shll
fnstsw
arpl
xor
xor
sbb
cwtl
push
fists
rcrl
mov
jnp
add
pop
push
mov
and
and
dec
lods
movb
lret
and
pushf
mov
add
sub
mov
cltd
aad
repz
pop
add
add
mov
mov
iret
mov
and
out
dec
icebp
inc
int3
repnz
xchg
inc
movsl
mov
sbb
jae
and
fistpll
sbb
scas
or
cmp
pop
decb
xor
orl
stos
int
insl
repz
jge
rcll
test
xchg
sub
jbe
pop
cmp
insb
sbb
loopne
add
xor
xchg
mov
or
dec
cmp
xlat
lret
jno
in
jcxz
insl
call
cmp
pushf
xchg
push
movsl
dec
es
inc
and
push
gs
sahf
mov
es
push
nop
mov
popf
mov
aas
mov
fsubrl
sbb
sub
jae
push
sbb
stc
and
xchg
and
pop
and
lahf
popa
adc
jno
inc
das
jge
cmc
jbe
pop
push
mov
sub
les
jne
and
mov
push
aad
ret
stos
je
out
jns
daa
frstor
ds
push
fidivs
int
nop
mov
ret
mov
test
std
sbb
aas
aad
dec
push
inc
jbe
jae
adc
mov
push
pop
out
xor
out
cmpsl
push
es
and
dec
stos
or
bound
imul
fidivrs
test
loope
pop
icebp
sbbl
and
loopne
dec
mov
decl
cmp
inc
popf
or
scas
mov
jg
pop
dec
or
mov
push
in
das
cmp
pop
fbstp
enter
out
mov
xchg
and
mov
jne
ljmp
push
dec
jne
popa
inc
rcll
bound
leave
inc
sub
or
mov
nop
jns
adcb
pushf
testl
xchg
and
adcl
xchg
out
mov
add
movsl
aad
pop
iret
and
jnp
mov
cld
pop
loop
sbb
test
pop
fbstp
xorl
aam
cmp
pusha
movsl
jne
pusha
mov
pop
or
sub
ret
mov
pop
ja
mov
clc
push
cmp
pusha
mov
mov
jle
cmpsl
stos
mov
push
jp
jl
into
xchg
pop
sbb
out
and
jle
std
add
cmp
popa
ret
daa
rolb
dec
popa
mov
mov
pop
call
enter
enter
unpckhps
or
lods
or
mov
movsb
jno
cmp
jne
lcall
xchg
lea
jle
pop
fwait
mov
aam
fwait
xlat
ret
jmp
call
pop
dec
scas
lcall
std
mov
push
mov
cld
dec
sahf
pop
add
dec
insb
dec
xchg
xchg
cmpsb
sub
add
pop
pop
in
cmpb
mov
jle
or
add
and
fcoml
xchg
data16
and
push
push
test
add
inc
je
jp
jle
inc
test
fsubrp
xchg
sahf
push
xor
mov
mov
fwait
sbb
or
hlt
push
test
xchg
vphaddbd
dec
push
stos
add
mov
repnz
mov
mov
xchg
xor
push
ss
and
and
xor
pop
dec
sbb
mov
les
ret
cli
jp
fdivs
jns
call
aaa
mov
fistl
stc
rcl
in
xlat
movsb
jp
addr16
lods
xor
adc
js
pop
fistpl
mov
jne
mov
outsl
fmulp
push
movsl
cld
stc
pop
inc
add
sbb
jne
outsb
pop
loop
sti
shrb
adc
jg
mov
std
or
push
mov
cmp
dec
seto
push
out
cli
push
pop
shll
repz
mov
mov
ds
inc
testl
imul
push
movsb
imul
xor
cmp
dec
mov
add
fs
jg
jl
js
pop
stos
push
fadds
loop
xchg
dec
ss
xchg
mov
scas
ret
int3
jbe
jecxz
mov
jnp
xchg
jecxz
jnp
add
mov
dec
in
or
push
jge
mov
rolb
dec
ja
jo
dec
sub
sub
jns
jge
jmp
idivl
stos
daa
dec
pusha
fidivrl
lock
xchg
test
mov
mov
bound
addr16
add
jg
in
xlat
pop
mov
movsb
dec
push
es
mov
int
xchg
mov
xchg
imul
adc
aad
shll
and
test
sub
or
outsb
cmp
iret
or
aam
push
xor
in
xchg
sarb
dec
and
test
cld
jecxz
data16
cmp
mov
xchg
mov
nop
pop
mov
push
adc
testb
sbb
xchg
sub
push
out
jle
outsb
pop
xchg
cld
dec
div
mov
divb
cmpl
xchg
lahf
pop
inc
mov
jae
jmp
push
push
daa
aas
in
sbb
adc
loope
xchg
push
fidivrs
and
imul
rcrl
aad
add
rcr
mov
fwait
cmp
push
insl
dec
arpl
jo
dec
lret
stos
leave
ror
mov
fs
push
js
dec
xor
ds
cmp
push
sub
dec
xchg
mov
and
dec
dec
push
xchg
adc
cmp
pop
dec
fsubrl
int3
xchg
aad
add
xchg
sbb
pop
adc
out
jbe
cmp
repz
movsb
adc
mov
xchg
or
aad
js
cmpsl
add
subl
mov
call
popf
and
fnstcw
outsb
inc
pushf
pop
pop
push
movsb
sub
pop
arpl
cmp
mov
test
filds
xor
lods
std
ss
xor
sub
ret
cmp
mov
add
movsl
or
out
lcallw
je
mov
rcrb
jg
inc
int3
xchg
ja
sbb
xchg
pop
pop
mov
icebp
jnp
std
in
stc
es
lds
pop
pushf
sbb
imul
rol
aas
out
pop
pop
cmp
mov
pop
push
mov
dec
push
dec
test
mov
outsl
xlat
jge
daa
and
clc
xor
test
sub
enter
xchg
gs
les
fsubs
sub
pusha
ret
jnp
mov
sub
scas
test
push
test
lods
xor
in
sbb
push
cmp
jge
in
popa
clc
addl
das
xor
outsb
lds
push
ds
mov
repnz
jnp
mov
je
ds
sarb
stos
and
iret
push
inc
mov
mov
pop
loope
xlat
push
sbb
cmp
jo
repz
lret
scas
inc
cld
mov
repz
sub
sbb
test
jp
adc
pop
push
imul
sub
xchg
adc
sbb
ss
jnp
dec
xchg
daa
jge
sbb
out
shr
sbb
aaa
cmpb
stc
mov
ret
mov
mov
stc
lds
lds
flds
ljmp
or
jmp
xchg
mov
mov
movsl
mov
push
adc
push
mov
sbb
or
jnp
test
call
mov
xor
pop
or
movsl
fmulp
push
xor
lods
stc
or
sbb
xor
mov
xchg
push
and
fstpt
jle
xor
mov
dec
mov
insb
sub
sbbl
fnstenv
jne
data16
mov
rolb
add
lret
sti
lret
lock
inc
pushf
xchg
pop
and
pmuludq
jo
inc
pop
out
popa
aaa
sbb
aas
mov
sbb
stos
popa
inc
js
sbb
ud0
cmp
mov
dec
fstl
jp
in
mov
and
fcoms
mov
add
add
int3
sbb
xchg
in
pop
ljmp
mov
iret
jle
jnp
adc
pop
int3
fbld
fcmove
fwait
cmp
mov
inc
test
stos
add
mov
jp
cltd
mov
lea
add
loopne
scas
sub
cmp
xlat
jns
cmpsb
ret
into
loopne
mov
adc
sub
shlb
pop
roll
stos
fsubrl
or
sahf
cmp
in
adc
imul
idivl
lcall
daa
cmp
notl
rcrb
cmp
pop
jg
xchg
mov
inc
or
mov
xchg
incb
mov
jl
insb
sbbl
add
jg
jb
sub
cmc
cmc
xchg
add
mov
lret
mov
or
imul
jmp
shrb
xchg
xor
pop
popa
mov
or
int3
sti
movsl
orl
jb
mov
or
call
mov
repz
std
arpl
call
repnz
shlb
dec
push
pop
jle
pop
aas
pop
insl
scas
mov
sbb
dec
nop
fstl
mov
ret
jnp
mov
ss
pop
xchg
adc
add
aad
rolb
or
shll
xchg
xlat
mov
test
and
pop
inc
sbb
push
or
xchg
fwait
inc
addr16
inc
dec
mov
decb
mov
sub
jle
bound
mov
add
dec
jno
xchg
out
imul
jp
xchg
pop
xchg
add
bound
jp
stos
sbb
mov
pop
dec
xchg
or
lcall
pop
lods
pop
das
sbb
or
cltd
dec
pop
test
lahf
push
dec
jl
cltd
scas
rclb
pop
mov
mov
aas
mov
pop
pop
mov
adc
adc
jno
std
into
dec
out
adc
push
leave
addb
adc
sub
xchg
push
fsub
imul
and
dec
pop
adc
or
push
xchg
jge
pop
adc
mov
aaa
test
dec
pop
and
es
cmp
cmovbe
les
mov
jo
shll
popf
mov
aas
into
ret
adc
ret
rcl
test
cmpsl
adc
mov
insl
in
aad
popf
jecxz
push
add
mov
and
dec
imul
arpl
xchg
add
sub
xor
movsl
adcb
stos
test
or
cmp
es
mov
dec
jno
nop
aaa
mov
push
dec
mov
or
repz
outsb
mov
mov
test
pushf
in
cwtl
pop
and
pushf
inc
xchg
sub
mov
rcr
cmovg
xor
ficomps
and
jns
out
cltd
adc
fcoml
test
out
sarl
push
faddp
lret
insl
loop
fimull
lods
mov
ret
inc
and
scas
push
mov
dec
cmp
fbstp
rcr
cmpsl
xor
int
andl
js
pop
dec
and
jae
push
add
aad
popf
lock
outsb
adc
push
aam
test
mov
stos
bound
pop
loop
int
ss
sarb
lcall
stos
and
in
lret
data16
rcr
cmovl
popa
mov
lds
mov
rol
xchg
jne
adc
inc
xorb
jns
inc
pushf
mov
or
adc
mov
inc
adc
sbb
jmp
mov
jno
sbb
push
in
jp
or
jmp
jmp
push
inc
pop
lods
mov
sub
das
push
mov
clc
loopne
aad
dec
nop
aad
and
mov
clc
int3
scas
dec
sti
jp
repnz
sub
out
in
jbe
rclb
jle
aas
js
sahf
xor
jo
inc
adc
mov
sub
inc
add
xchg
mov
mov
clc
or
mov
push
push
push
push
roll
xor
mov
out
or
loop
fisubrs
inc
cmp
add
adc
cmp
jo
mov
aam
inc
push
sbb
jl
adc
jg
push
mov
rorb
xor
jb
aam
shll
and
int
jecxz
fldcw
imul
mov
xor
pop
pop
sbb
xchg
cmp
sbb
dec
mov
sub
xor
cld
mov
fmuls
cltd
fstpt
insl
aad
inc
mov
inc
test
mov
loope
nop
adc
arpl
popa
sbb
dec
jae
mov
iret
cld
ret
aas
mov
pop
lret
push
cmp
mov
mov
cmp
shlb
mov
stos
call
out
out
and
lahf
jecxz
dec
outsb
and
mov
mov
popa
inc
mov
loope
adc
stos
out
cmp
and
xchg
fisttps
out
leave
lret
int3
lds
enter
out
mov
je
dec
pusha
pop
aas
daa
adc
push
aas
pop
repz
out
mov
pushf
fcoms
lods
cmpsl
or
pop
sbb
push
mov
push
jae
cmp
cmp
jge
scas
add
sub
scas
out
pop
inc
imul
jg
in
mov
inc
and
inc
cmp
pop
pop
cmp
fldenv
es
add
arpl
in
fsubrs
dec
sarl
or
aam
lock
test
mov
stos
fimuls
sti
cmc
mov
sub
xchg
std
cli
cmp
arpl
notb
imul
sbb
cmp
mov
sub
shlb
int3
ret
mov
mov
sahf
nop
test
mov
fwait
pop
mov
dec
lods
int
js
mov
sub
sarb
push
mov
xor
fs
xchg
cli
add
aad
inc
inc
mov
into
jge
xlat
aaa
sbb
sbb
pop
lret
mov
andps
aad
mov
mov
lcall
jne
sbb
xchg
mov
and
sub
or
push
push
sarb
pushf
pop
pop
ljmp
repz
cmpl
adc
test
push
sub
cmp
xchg
cmp
aas
shrb
cltd
inc
loop
imul
mov
adc
mov
xchg
add
int3
mov
xchg
leave
cli
ljmp
and
ficomps
enter
jae
dec
mov
and
outsl
sub
add
das
sbb
cmp
mov
mov
inc
repz
mov
dec
in
in
enter
mov
sbb
mov
arpl
xor
addr16
inc
out
outsb
push
jmp
mov
xor
and
dec
push
loope
into
pop
and
xchg
scas
xchg
ret
movsb
sub
in
or
cmpsb
mov
sbb
scas
and
cli
jbe
stos
scas
std
adc
in
pop
bound
movsl
lods
outsb
xchg
lret
mul
jmp
outsl
pop
outsb
sbb
test
pop
mov
movl
mov
mov
xlat
clc
outsl
in
imul
fcompl
cmpb
mov
pop
pop
adc
loope
jg
hlt
test
mov
or
je
cld
sahf
dec
test
push
adc
push
aaa
in
ror
add
push
pop
jo
mov
cmp
mov
fildll
pusha
sbb
aam
xchg
mulb
pop
dec
inc
fld
cltd
and
and
fistps
jle
icebp
push
stos
push
adc
add
pop
pop
sbb
lods
mov
mov
push
push
fistpll
sbb
data16
add
add
or
movsb
test
in
inc
gs
sbb
fldenv
or
ljmp
or
gs
lods
lcall
fiaddl
rcrb
inc
outsl
or
inc
das
insb
imul
pop
cmp
add
insb
mov
xchg
pop
inc
mov
enter
add
mull
sbb
in
rorl
xchg
xchg
loop
in
ret
mov
jl
std
nop
test
jns
sbb
jmp
inc
fs
out
jno
sbb
rorb
lods
adc
fmuls
or
pop
or
lcall
mov
pusha
cwtl
pop
pop
mov
nop
push
mov
ja
shl
or
mov
inc
mov
mov
dec
jmp
cmp
pop
cltd
dec
xchg
xlat
dec
lea
ds
icebp
sbb
sub
lods
pop
mov
cmp
push
test
mov
shlb
mov
das
inc
push
addr16
arpl
mov
clc
das
pop
cltd
clc
les
pusha
aam
pop
adc
cmp
negb
mov
or
push
inc
ss
push
dec
divl
jne
mov
cmpsb
mov
and
push
repnz
jg
or
fsubr
sbb
iret
mov
cwtl
std
gs
shlb
sbb
scas
outsb
push
pop
out
xchg
pop
mov
lods
cmp
orb
and
mov
stos
pop
adcl
stos
mov
sub
stos
movsl
or
popa
lret
pop
shll
adc
test
or
cwtl
jnp
lods
xchg
lret
loop
pop
push
and
jnp
mov
js
push
sub
repnz
add
cmpsb
jge
jae
xchg
lea
idivb
add
popf
jmp
sub
jne
pop
aaa
mov
repnz
add
aaa
mov
mov
jae
icebp
adc
es
mov
xchg
push
pop
loopne
sub
xchg
xor
repz
push
push
aad
xchg
jns
lret
data16
mov
ret
adc
jo
stc
idivl
or
mov
mov
in
cmpsb
popf
outsb
in
pop
sbb
shrb
sbb
mov
push
mov
mov
fcomi
mull
sbb
inc
or
push
xor
sbb
jb
push
xor
xchg
mov
mov
cld
fistpl
add
cmpsl
and
aad
roll
lds
paddusw
fs
in
push
inc
adc
inc
cli
daa
lcall
scas
mov
pusha
icebp
divl
mov
sbb
leave
mov
add
iret
mov
test
sarb
je
hlt
cmp
fdivrs
mov
or
xlat
cmp
shr
mov
push
dec
js
mov
fwait
stc
xorl
clc
movsb
push
clc
dec
mov
push
sbb
insb
cld
or
push
inc
push
inc
mov
std
dec
popf
inc
cltd
mov
pop
call
and
adc
add
lods
mov
jp
out
outsl
ss
adc
aam
loop
add
loope
xchg
cmp
loopne
jae
ss
aad
cmp
fwait
push
push
out
pushw
stc
add
fsubs
jecxz
std
dec
outsl
bts
adc
mov
sbb
add
jecxz
add
mov
pop
movsl
neg
fcomps
jg
imul
inc
insb
out
adc
in
mov
pop
xchg
dec
aad
test
cwtl
xchg
enter
jecxz
push
push
call
es
jl
push
jns
dec
nop
imul
imull
xor
push
bnd
fcomps
jg
jo
add
jge
or
xchg
sbbb
test
push
cli
fs
cld
lods
stos
call
in
enter
popa
stos
sub
dec
stos
sbb
test
or
es
sbb
or
out
ret
pop
dec
jp
sub
fidivs
lret
jg
test
add
mov
add
sbb
mov
or
popf
dec
push
xor
mov
lods
xchg
mov
pop
adc
jg
lret
mov
fdivrs
dec
ds
pop
test
cld
dec
xchg
mov
mov
jnp
jmp
sahf
in
in
into
aam
es
push
add
loopne
mov
xchg
lods
out
call
imul
adc
push
xlat
or
mov
cmp
out
adc
fcoml
imul
in
int3
jp
push
inc
push
aaa
jbe
stos
loop
hlt
lret
adc
sbb
push
sbb
push
xchg
or
pop
rcrb
mov
jp
aam
ficomps
scas
pop
sti
mov
mov
scas
xor
xor
aas
loope
fucomi
push
mov
ret
sbb
and
scas
push
xorb
stos
xor
adc
out
shll
pop
dec
mov
fisubl
jmp
and
push
addr16
out
scas
mov
out
dec
xor
dec
mov
daa
add
mov
sub
jecxz
scas
mov
or
mov
icebp
imul
lock
pop
dec
xchg
mov
aaa
mov
test
xlat
fisubrs
loopne
pop
add
adc
pop
sub
mov
cli
push
neg
lods
adc
enter
dec
out
dec
mov
mov
xchg
xor
popl
push
lahf
aad
adc
xlat
aad
inc
cmp
cltd
ret
sbb
loop
sub
jno
mov
sub
in
shrb
push
mulb
ret
mov
and
lods
movl
imul
mov
pop
or
roll
shrl
lret
xor
pop
jmp
add
mov
outsb
jnp
loopne
pop
popa
mov
mov
jno
jge
mov
mov
jo,pn
sub
adc
xor
mov
loopne
cmp
lret
xor
adc
push
repnz
enter
fisttps
lds
and
loope
lret
sbb
pushf
movsb
and
adc
adc
sub
cmp
imul
inc
sub
pop
stc
aam
cld
repz
in
cmp
into
fsubl
enter
pop
push
inc
addb
loopne
mov
xchg
scas
cs
xchg
and
arpl
shl
and
out
push
lods
mov
cmp
xchg
shlb
xor
in
mov
test
ret
pusha
xlat
push
lock
mov
mov
and
mov
cmp
out
add
cmp
mov
cmpsl
imul
sub
rcrl
mov
push
sub
repnz
mov
flds
lret
ret
addr16
stc
popf
testl
sub
adc
fs
add
test
sub
or
add
les
mov
mov
xchg
add
in
adc
jno
mov
imul
push
les
sbb
mov
and
xchg
stos
loopne
sub
lds
cld
dec
test
dec
mov
das
sub
mov
jb
es
push
cmp
cli
shll
pop
xchg
sahf
mov
sub
aas
add
loope
mov
lods
fistl
fidivl
dec
mov
mov
and
out
data16
inc
repnz
stos
pop
faddl
sub
movsl
outsl
jae
sbb
cmp
mov
outsl
push
std
cmpl
lahf
imull
insl
inc
call
hlt
push
push
xor
ss
dec
xor
movsl
lods
mov
adc
out
lds
popf
adc
adc
sub
test
hlt
and
mov
pop
push
imul
sub
xorl
test
mov
push
pop
push
jne
sub
xor
sub
hlt
pop
lret
xor
cmc
mov
cmpsl
jle
scas
cltd
mov
or
outsb
dec
dec
fstl
inc
mov
push
or
incl
sub
addr16
ss
fs
jnp
and
xor
pop
pop
dec
fimull
cmp
test
clc
xchg
repnz
sarl
scas
ljmp
push
jge
dec
out
mov
mov
push
push
hlt
dec
shrl
and
mov
or
cwtl
aaa
ret
stos
imul
dec
orl
push
mov
mov
sub
or
mov
pushf
ja
ficompl
call
add
repz
out
push
add
sbb
shl
incb
lret
dec
pop
inc
test
mov
repnz
lods
cld
testb
sub
aaa
add
pop
pop
push
stos
movsl
outsb
adc
shll
fsts
inc
push
lea
adc
icebp
fistps
cli
fmull
in
cmp
jl
add
mul
pop
aaa
xchg
cmp
jo
and
mov
jmp
xchg
ja
fcompl
nop
mov
fcmovne
push
mov
xchg
pop
leave
push
sbb
jno
add
enter
adc
sbb
push
cli
lahf
push
adc
xor
push
nop
clc
enter
arpl
mov
dec
inc
repnz
jo
arpl
pop
adcb
jo
lret
shlb
stos
push
mov
loope,pt
fnstsw
cs
cmp
jns
xor
loope
setle
movsb
jge
pop
cmpsb
mov
mov
cmpsb
mov
fwait
and
cltd
negl
fwait
adc
les
ret
pop
add
data16
mov
stc
aad
test
insb
test
push
ret
frstor
cmp
daa
add
adc
inc
xchg
int
mov
jns
incl
mov
ret
sbb
std
push
mov
insl
clc
mov
scas
outsl
xor
out
mov
movsl
bound
pop
push
je
ljmp
mull
inc
fst
imull
cmp
pop
dec
and
xor
fnsave
mov
in
lock
jmp
pop
mov
or
aaa
mov
fdivp
xor
and
jno
nop
in
xor
or
xor
movsb
scas
cmpsb
enter
mov
xchg
data16
loop
adc
or
jecxz
dec
loop
rcrl
jne
mov
pop
sbb
dec
push
add
xchg
movsb
pop
fadd
sbb
mov
lds
and
in
in
jb
aam
les
in
loopne
lahf
sbb
pop
jne
sbb
xchg
lods
or
xchg
ret
or
push
gs
jno
insb
jne
sarw
xor
cmpsl
in
push
sbb
or
mov
inc
inc
push
cli
sbb
mov
aad
adc
pop
mov
sub
or
lcall
aam
pop
mov
mov
enter
nop
sub
push
cmp
push
add
cli
dec
and
inc
outsl
inc
fldl
lcall
and
in
adc
xlat
icebp
mov
sub
cmpsl
pusha
sub
push
xor
shr
sarl
arpl
daa
fimuls
mov
sub
imul
pusha
push
mov
out
in
add
lods
sub
icebp
mov
in
arpl
sbb
loopne
ret
pop
pop
xchg
ljmp
dec
mov
imul
movsb
leave
sti
or
mov
fdivp
sar
sub
sbb
icebp
outsb
movsl
fiadds
loopne
or
inc
and
adc
daa
inc
cmpsb
push
cld
stos
daa
rorl
enter
inc
cmpsl
cmpsb
cmp
jne
and
add
pop
sub
jmp
jp
das
push
lahf
cwtl
orl
pop
push
dec
add
test
sbb
movsl
and
test
outsb
aas
test
hlt
jmp
add
pusha
mov
mov
lret
insb
or
sbb
pop
mov
pop
jecxz
sbb
pop
in
xchg
es
adc
sbb
popa
lods
adc
mov
inc
cmp
sbb
push
gs
imul
sbb
pop
sahf
stos
out
dec
push
mov
mov
mov
push
fadds
push
xchg
mov
pop
xchg
mov
pop
pop
and
lret
fisubrl
pop
lods
sbb
mov
push
in
xor
pop
cmc
setg
out
inc
and
ja
es
aaa
xor
mov
cwtl
test
pop
lea
mov
mov
push
stos
out
cmpb
xor
daa
mov
pop
dec
in
cmp
popf
mov
push
and
daa
andl
xor
cli
sub
jb
shl
xor
mov
arpl
std
xor
cmp
cli
rorl
add
idiv
mov
inc
inc
push
insl
shl
sti
shl
mov
ret
sub
in
out
xor
sub
mov
sbb
push
fidivs
adc
push
stos
lock
sbb
popf
push
cmp
outsb
in
jne
rclb
and
and
pop
repz
push
xchg
xor
sti
adc
push
mov
faddl
sarb
imul
sbb
dec
arpl
mov
mov
call
push
cmp
pop
scas
les
sub
addb
cmpsl
or
xchg
cmp
jb
xor
jl
sbb
mov
cs
out
shll
scas
imul
push
add
mov
fdivl
loope
test
scas
pop
psubw
aad
xchg
sbb
pop
jge
mov
roll
fnstenv
push
les
data16
das
mov
dec
jno
in
mov
pop
adc
out
jne
jl
in
popa
push
lahf
mov
into
add
fmulp
sub
int
cmp
xchg
shll
stos
fidivrl
mov
jnp
outsb
adc
xor
cs
addr16
testb
outsb
pop
scas
lock
and
lret
pusha
sub
jg
xchg
cmp
pmuludq
insl
sar
adc
dec
sbb
and
sarl
ljmp
cmp
fxtract
imul
aas
xor
adc
mov
pop
or
scas
mov
mov
fnstenv
xchg
mov
add
xchg
inc
out
pop
popl
sti
movsl
and
or
and
in
outsb
andl
in
xchg
ds
test
sti
scas
call
cmp
adcb
rcr
mov
cwtl
fidivs
mov
bnd
xor
popf
and
push
jl
ret
cld
loopne
pop
cwtl
push
outsl
pop
bound
and
push
leave
pop
fidivrs
pop
jge
pushf
stos
dec
xchg
inc
sub
push
inc
out
cmc
cmp
out
pop
icebp
cmp
lret
sub
xlat
lods
ja
fldt
push
jno
inc
repnz
shrb
out
push
test
aas
lods
aas
jp
jp
rcrl
xchg
dec
mov
add
sbb
mov
push
and
jns
in
decw
ret
sbb
cmpsb
xchg
pop
xchg
out
mov
push
push
sub
decl
push
push
stc
and
pop
jo
dec
inc
repnz
jge
xchg
rcrl
xor
out
sahf
xchg
or
fsubrs
dec
dec
fsts
pop
and
out
jne
sub
and
mov
sub
push
and
mov
insl
jmp
sarl
sub
xlat
and
push
imul
jmp
scas
js
inc
lods
out
inc
lcall
leave
or
inc
mov
push
dec
decl
sbb
repz
push
test
sbb
jg
icebp
test
cmp
aaa
push
mov
jle
hlt
adcb
repz
push
inc
outsb
inc
fiaddl
mul
jne
jne
mov
push
sahf
or
mov
lahf
out
cs
shll
push
mov
mov
dec
test
clc
xlat
xchg
shlb
cwtl
cmp
jbe
adc
test
test
xchg
dec
mov
sub
lock
mov
add
int
adcb
jb
jnp
mov
fsubrs
jecxz
enter
popf
jle
sarl
lret
adc
lea
or
adc
fs
clc
pusha
ret
push
sarb
fisttpl
add
shrb
insl
and
sbb
mov
jbe
and
adc
pusha
dec
xacquire
clc
addb
jae
jecxz
jae
icebp
jns
inc
nop
stos
push
sbb
sbb
mov
sub
stos
loopne
insb
and
mov
adc
movsb
insb
pop
jno
hlt
lea
push
sbb
movsb
pop
sarb
and
inc
and
adc
xchg
cwtl
xor
loope
aas
push
enter
negl
mov
jnp
les
sbb
jb
jl
and
mov
je
test
adc
pushf
insl
jae
incb
xchg
scas
xchg
push
push
out
stos
mov
adc
jmp
imul
outsb
and
xchg
mov
push
cmc
loop
push
mov
je
xchg
dec
push
fists
dec
sbb
inc
xchg
pushf
sbbl
push
mov
mov
dec
jns
in
cmpsb
mov
cs
call
dec
xchg
push
scas
or
call
cli
and
pop
getsec
mov
xor
jbe
arpl
pop
push
imul
pop
icebp
in
mov
arpl
incl
aam
arpl
stos
cmp
inc
dec
mov
pushf
clc
bound
div
lcall
jns
insb
mov
movsl
aas
pop
notb
out
push
sub
xor
in
mov
popf
cmp
mov
inc
xor
mov
out
fcoms
jae
dec
test
pusha
jmp
cli
aaa
mov
ss
addl
push
and
and
js
test
adc
pop
imul
fwait
insb
or
loopne
repz
push
cmp
pop
dec
cmp
cmp
xchg
fwait
iret
test
or
sub
fldenv
pop
cmpl
movl
js
sbb
scas
mov
or
or
outsl
jmp
adc
cli
gs
inc
sbb
sub
xchg
dec
addr16
sbb
mov
es
loopne
inc
inc
pushf
out
daa
sbbb
sbb
mov
lret
std
fsts
loope
inc
js
in
es
je
and
push
inc
or
loopne
je
insb
inc
push
xchg
cmp
mov
fnstenv
in
mov
cmpsb
mov
xor
xchg
or
mov
pop
aas
mov
push
popf
dec
pop
push
inc
orl
xchg
scas
jge
cmp
sbb
mov
pop
out
pusha
mov
push
mov
repnz
dec
ljmp
mov
or
mov
push
out
pop
push
add
arpl
mov
stc
mov
sti
mov
aas
ffreep
xchg
sub
lods
lods
ljmp
sbb
xor
adc
push
enter
popf
cmp
and
stos
cbtw
out
bnd
pusha
bound
xor
and
add
xor
jmp
fisubs
je
lds
jb
out
pop
mov
and
ja
js
push
out
jno
leave
push
iret
scas
mov
repnz
in
dec
imul
ds
testl
or
sbb
cmp
dec
mov
int
popl
imul
cmp
mov
jg
mov
repnz
or
mov
jne
in
push
mov
in
rol
dec
adc
ror
lret
push
and
mov
xchg
and
xor
cmp
sbb
mov
insb
dec
dec
fstl
add
subl
push
incl
pop
inc
roll
push
sbb
push
fwait
xchg
mov
shl
xchg
jmp
and
lds
roll
sub
icebp
lahf
cmc
in
shlb
mov
fisttpll
inc
or
bound
xchg
push
mov
cmp
mov
sahf
xchg
push
sbb
add
lret
jle
add
pop
mov
mov
cmp
dec
cltd
pop
sbb
repz
sbb
or
inc
adc
in
xchg
sahf
inc
test
scas
sbb
in
push
cmp
jmp
test
sbb
pop
mov
aaa
ret
jl
and
enter
in
nop
outsl
push
pop
test
push
pop
shl
les
fwait
mov
add
mov
mov
mov
lret
sbb
jl
jmp
std
in
stos
lret
cmpsb
xor
ja
mov
add
psrlq
aad
push
call
mov
cmpsl
xchg
mov
mov
sbb
pop
inc
jns
mov
ret
jo
push
push
add
or
and
push
sub
mov
add
dec
pop
enter
leave
fnstsw
es
lea
call
and
inc
scas
test
cld
mov
std
push
add
addl
aam
xor
cmp
aam
movsb
push
mov
inc
cltd
lcall
xchg
sbb
je
and
push
cltd
mov
das
mov
mov
bsf
mov
dec
jp
mov
adc
or
cmc
les
adc
inc
adc
dec
mov
sub
inc
loope
fistpl
or
add
sub
hlt
xor
jno
in
pusha
jne
sub
sbb
dec
add
imul
mov
cltd
outsl
and
push
movsb
daa
jecxz
popa
adc
in
jmp
fistpl
stc
xchg
outsb
jnp
mov
imul
cmp
in
aam
mov
jno
mov
cmpsl
and
jg
cmp
out
addr16
scas
outsl
into
push
inc
imul
fistl
leave
out
sbb
jne
outsb
scas
fs
cli
jl
jl
in
lock
mov
pop
aas
xchg
lret
dec
mov
imul
push
ret
xor
jb
xor
cltd
enter
pop
pop
mov
add
stos
pushf
adc
fidivrl
lret
sbb
jmp
xor
sbb
je
push
cld
popa
pop
js
repnz
jbe
or
xchg
cwtl
ret
movsb
adc
jne
sbb
xchg
add
sbb
adc
loope
cmp
add
cld
xor
aad
xchg
fstl
cmpsb
gs
or
push
pop
cmp
push
int
cmp
mov
push
lds
loopne
fwait
in
dec
jecxz
add
jmp
sarb
shrb
das
xchg
cli
xchg
sti
movsl
and
xchg
xor
lea
fldt
clc
arpl
js
imul
leave
call
dec
xchg
gs
shl
arpl
jle
incb
test
rolb
push
mov
adc
push
and
mov
ds
hlt
loop
sbb
or
pop
cmpsb
mov
arpl
repz
cmp
das
aas
fs
push
xor
xchg
dec
push
int3
and
test
ret
mov
je
test
lret
loopne
or
or
aas
ret
adc
repz
jnp
popa
pop
jo
fs
mov
test
pcmpeqd
mov
out
xchg
insl
jne
xor
neg
jnp
dec
dec
xchg
adc
arpl
inc
pop
ret
inc
imul
dec
idivl
imul
push
mov
lret
sbb
rcl
flds
and
lret
mov
xorb
mov
lahf
mov
rclb
das
sbb
scas
mov
adc
stos
int
jne
xchg
ja
jp
push
fs
and
pop
pop
inc
fdiv
inc
and
fcmovnb
jae
lea
hlt
sbb
pop
std
inc
add
and
push
cmpsl
mov
mov
call
sub
jnp
push
out
mov
int
xor
dec
mov
pop
in
pop
into
stos
cld
js
shr
and
xlat
je
add
push
popf
lea
jb
push
or
fwait
insb
mov
add
mov
mov
ja
dec
adc
lret
test
cmpsl
out
cmpsb
add
gs
lret
xchg
mov
out
mov
mov
dec
fs
movsb
js
xchg
inc
add
mov
dec
pop
sbb
cmp
push
icebp
fnsave
jns
outsb
mov
or
fwait
stos
and
mov
mov
xchg
movsb
ljmp
lcall
jmp
mull
fisubs
mov
daa
inc
cmp
lods
cmc
inc
and
push
dec
pop
jge
mov
outsb
sbb
add
insb
out
bound
testl
lock
push
dec
arpl
ja
movsb
xor
loopne
repz
push
arpl
jecxz
jo
jae
ror
pusha
push
daa
cwtl
mov
shll
pop
xchg
scas
mov
xor
mov
jl
mov
mov
setg
mov
push
xchg
daa
dec
inc
call
sub
lret
sbb
nop
mov
or
aaa
mov
mov
data16
pop
cmp
pop
or
mov
pop
loopne
xlat
loope
xchg
push
cltd
imul
xchg
imul
je
and
sub
mov
mov
and
mov
and
arpl
dec
fs
out
add
pop
dec
test
push
negl
cmp
sbb
lds
cmp
lock
or
enter
inc
into
aas
cmp
dec
mov
insb
pushf
testl
fsubrp
fsts
scas
mov
push
aad
pushf
dec
loopne
add
lds
push
leave
inc
scas
loopne
cltd
insb
ret
out
sbb
add
sub
adc
scas
lods
pop
xchg
xor
in
int
enter
dec
xchg
push
bound
imul
in
fmull
outsl
sbb
push
push
xor
dec
add
jns
adc
xorl
add
in
cmp
das
inc
and
mov
push
popa
mov
add
xor
inc
sbb
icebp
xlat
scas
scas
ret
inc
inc
jmp
mov
cmpsb
shlb
int3
mull
and
sbb
dec
jae
push
in
insl
inc
ljmp
cmp
mov
or
pop
mov
rcrl
icebp
add
dec
std
mov
jns
mov
out
jmp
mov
arpl
mov
push
mov
add
ret
into
pop
std
int3
cmp
mov
movsl
cmp
jg
scas
ffreep
stos
cld
or
sbb
jl
outsb
mov
jmp
and
in
and
pop
inc
xor
int3
mov
je
lcall
xchg
xor
fidivl
shl
push
out
mov
or
mov
push
rcl
cmc
bound
cwtl
jecxz
mull
and
jmp
stos
repz
stos
insb
testb
pop
mov
mov
push
mov
inc
rcrb
in
idivl
call
and
pop
out
add
mov
dec
stc
fistps
lock
addr16
movsb
pop
sub
icebp
xchg
lock
test
in
inc
lahf
pop
repz
cmpsl
jl
or
ljmp
add
pop
iret
negl
imul
stos
mov
frstor
xor
push
shlb
jbe
adc
addr16
or
shl
xchg
cs
int
lahf
dec
jns
push
or
mov
lret
sbb
loope
jmp
in
and
xchg
clc
push
mov
push
pop
shll
out
ficomps
push
ljmp
xchg
inc
out
aaa
lret
mov
xchg
imul
dec
fs
or
in
and
inc
out
adc
push
mulb
fidivs
push
sti
adc
int3
call
inc
cmp
loop
xlat
xor
cmpsl
adc
adc
add
push
leave
mov
xchg
addb
stos
push
std
mov
jbe
cld
push
sub
sbb
addl
lods
call
jnp
int
int
shrb
mov
pop
out
repz
imul
ja
ret
xor
sub
fstl
jne
push
into
cmp
mov
xor
out
je
jmp
fists
xchg
add
push
mov
sub
or
cmp
pop
stos
sti
js
ds
adc
pushf
inc
addr16
ss
ljmp
dec
sbb
inc
xchg
das
stos
cmp
jno,pn
push
out
pop
pop
dec
pop
push
lret
sbb
aaa
or
fcoms
mov
bswap
les
loope
insl
cli
dec
rorl
ret
or
in
je
jbe
mov
mov
jg
adc
pop
push
add
out
mov
xchg
sub
test
imul
js
shrl
adc
xor
inc
hlt
and
xchg
push
daa
pop
dec
pop
repnz
clc
jns
add
jl
or
sbb
xor
cmp
lods
jge
loope
ljmp
or
add
push
in
xor
lock
sub
loop
add
sub
test
cltd
fcmovb
sub
pop
ret
nop
cmp
mov
imul
mov
in
xor
jmp
sub
pop
in
push
ja
test
mov
xor
cmp
ds
xchg
push
or
xor
rcrb
dec
stc
scas
outsb
imul
imul
push
ficoml
ret
jae
je
cltd
stos
clc
movsl
lcall
or
mov
push
mov
mov
jge,pt
mov
mov
lods
mov
call
lds
popa
or
inc
xlat
cltd
cmc
jg
fs
adc
fcmovnb
pop
sub
dec
sub
inc
clc
pop
jge
cmpsb
into
sub
push
jmp
ret
xchg
jnp
jo
xchg
sbb
xor
lret
mov
imul
mov
cli
mov
popf
mov
rclb
ds
add
mov
gs
mov
hlt
scas
xchg
dec
hlt
in
int3
xlat
or
test
lds
test
xor
push
ljmp
icebp
mov
icebp
ficompl
mov
push
or
mov
adc
push
ljmp
imul
jb
mov
loop
cmpsb
mov
push
lock
jmp
add
aaa
out
mov
lods
sub
sahf
mov
ret
sbb
jecxz
jb
dec
adc
and
jnp
mov
nop
and
lods
xchg
xchg
aam
aas
add
mov
cmp
lods
rcr
mov
fiaddl
xchg
outsl
int3
jne
into
mov
cs
add
push
inc
jge
imul
decl
xchg
and
popl
sbb
xacquire
adc
test
mov
popf
jo
mov
xor
outsl
jl
inc
mov
ret
mov
out
icebp
mov
lods
les
jae
fnstenv
push
pop
fmulp
push
cltd
mov
stc
xor
fdivl
fsubrl
or
mov
fadds
pop
cmp
inc
scas
pop
xchg
jb
sahf
push
jmp
int3
lods
cli
out
nop
and
push
jge
stos
stos
cwtl
aad
inc
mov
addr16
or
and
lret
shl
push
adc
pop
jp
inc
ja
xor
ficoml
fwait
fwait
jo
mov
lds
push
xchg
lret
out
enter
notb
enter
mov
scas
scas
mov
mov
pop
mov
popa
pop
mov
std
sub
fiaddl
lret
daa
or
dec
nopl
int
mov
fidivrl
cmp
xor
out
adc
dec
push
loopne
shlb
dec
sbbl
push
add
je
pop
nop
jle
sti
fldl
lock
push
sub
push
cmp
mov
pop
inc
aaa
inc
cmp
into
or
insb
movsb
out
jge
mov
inc
dec
das
xchg
hlt
movsb
nop
and
out
mov
rsm
adc
loope
xor
cmc
inc
cmp
mov
inc
xchg
or
and
sbb
sub
int
sbb
ss
out
mov
out
push
mov
add
mov
adc
iret
cld
jge
fs
fistps
jns
out
jp
rcrb
lds
push
push
lret
and
inc
xchg
jecxz
leave
mov
sbb
mov
lahf
lret
adcl
inc
dec
lret
pop
inc
push
push
in
inc
cltd
add
stos
mov
in
scas
cmp
popa
stc
out
xchg
adc
loopne
cmp
pop
fwait
sub
sarl
sbb
repnz
xchg
inc
pop
xor
lret
mov
xchg
flds
xor
jg
movsl
sbb
lahf
int3
arpl
cli
cmp
xchg
fldl
pop
fwait
into
mov
dec
sub
shr
aad
leave
push
xchg
je
and
cmp
call
mov
inc
int3
jmp
loop
lret
dec
sbb
or
lock
das
test
lcall
jl
lcall
mov
jne
lea
ret
leave
lea
aaa
outsb
jmp
pop
sub
ficoml
jle
out
adc
jl
rorl
testl
pop
data16
shrb
push
pop
mov
and
test
sbbl
inc
mov
jl
dec
inc
mov
cmp
into
clc
es
mov
ljmp
and
in
and
loopne
mov
andb
pop
mull
xbegin
in
enter
xchg
push
mov
rclb
dec
outsb
jno
inc
jg
test
int
push
sub
scas
dec
mov
out
jp
ret
dec
sahf
addb
ja
mov
and
add
mov
out
xor
add
les
xchg
lahf
jb
fcoml
arpl
xchg
xchg
add
addl
jns
mov
js
push
mov
into
pop
pop
xchg
enter
int
loop
popf
push
cltd
test
hlt
movsb
jp
inc
jp
fistps
inc
fidivl
ficoms
xchg
seto
out
mov
sub
dec
jae
xor
insb
cmpsb
mov
xor
movsb
jno
or
iret
out
jnp
and
test
test
xchg
inc
cmpsb
leave
pusha
dec
lahf
jg
inc
mov
imul
ret
fs
push
xor
mov
cmpsb
ret
popl
xor
mov
xchg
icebp
dec
lods
sub
mov
cmp
mov
ficoml
dec
lods
or
push
push
and
imul
test
mov
add
adc
cltd
push
idiv
xorl
sbb
je
push
dec
lcall
into
dec
sub
testl
mov
push
add
fldl
jnp
loop
mov
ret
xchg
mov
lock
and
cmp
enter
fs
test
outsb
fwait
ss
mov
outsl
loope
pop
das
in
jge
mov
fcmovne
mov
arpl
pushf
rolb
clc
dec
fimuls
fs
xor
mov
cmp
inc
cs
cmp
xchg
jb
aas
cli
pop
sub
cld
aaa
or
adc
inc
dec
pop
aam
jg
xor
fbld
cmpb
sub
xchg
push
xchg
sbb
adc
adc
sbb
xor
sub
in
xlat
mov
push
or
in
dec
pop
inc
ss
in
jmp
in
aaa
xchg
gs
dec
jb
and
jns
sbb
inc
sub
fstpt
and
sbb
lcall
in
pop
mov
sub
in
pushf
sbb
loopne
mov
insb
jne
cmp
in
mov
iret
pushw
sbb
and
cmpsl
or
cmpsl
lds
roll
inc
sub
mull
pushl
xchg
mov
cld
dec
xlat
imul
loope
fisubrs
sbbl
stos
adc
scas
push
jl
mov
into
mov
push
es
jecxz
mov
stos
insb
inc
mov
fstl
out
movsl
and
mov
ret
xchg
je
mov
jp
dec
pop
scas
mov
pushf
mov
jle
test
or
push
lret
jp
hlt
xchg
sbb
jno
jbe
jge
iret
jp
ljmp
add
sub
pusha
xchg
dec
cmpsb
ss
cltd
inc
orl
or
std
popl
leave
mov
push
ja
fucomp
insl
mov
aad
scas
xchg
mov
ss
loope
sub
mov
sub
je
mov
aam
inc
push
adc
jnp
divl
or
mov
mov
stos
dec
sti
into
orb
jo
std
sub
iret
mov
inc
out
psrlq
lea
sbb
lock
jnp
xor
cmpb
stc
imul
inc
bound
stos
dec
or
inc
test
lret
mov
ret
ja
sub
jecxz
sub
push
mov
and
inc
pop
cld
jg
divl
cmp
mov
out
ds
ret
mov
arpl
std
sbb
mov
int
iret
dec
decl
imul
sbb
das
push
ds
fsubrl
pop
enter
jo
lods
sbb
fs
sub
push
or
xor
lahf
outsb
mov
mov
mov
sub
int
push
dec
jbe,pt
xchg
xlat
and
jg
jns
lods
add
sti
push
cld
call
sub
lea
repz
xor
dec
in
jecxz
mov
mov
loopne
lds
push
lret
rclb
fbld
xchg
push
in
cld
insb
pop
xlat
pusha
pusha
or
dec
repnz
cmpsl
pushf
pop
sub
fs
mov
sbb
sbb
jmp
mov
arpl
aam
pop
ds
repnz
mov
lds
sbb
sbb
add
in
mov
push
daa
repnz
and
daa
pushf
mov
out
fcmovb
xchg
out
dec
loop
inc
push
orb
es
push
scas
push
inc
xchg
push
mov
out
adc
cs
ret
adc
rcll
jp
sub
imul
ja
adc
cmp
adc
adc
pop
pop
adc
xchg
lea
mov
xchg
daa
sbb
adc
enter
mov
fsub
cwtl
movsl
jmp
jmp
mov
sub
mov
mov
enter
loope
dec
adc
out
add
xchg
add
xchg
scas
pop
lret
bound
lcall
push
rolb
subl
dec
addb
adc
xchg
jle
dec
dec
adc
jo
push
cld
and
mov
out
and
das
imulb
mov
cltd
pop
test
xor
arpl
fwait
outsl
cltd
mov
jnp
lahf
and
cmpsb
cs
mov
enter
lret
popa
inc
inc
shlb
es
imul
push
outsb
aaa
sub
cmp
fwait
add
add
lahf
sub
xlat
js
cmp
adc
mov
stos
jg
addr16
pop
daa
rcrl
or
fs
je
inc
sub
add
adc
xchg
sub
mov
fnsave
inc
mov
mov
xchg
xor
in
mov
sub
cld
add
sarl
sub
inc
jmp
ja
rcrl
fcmovbe
dec
test
mov
sbb
in
push
and
iret
jle
fisttpl
jmp
mov
mov
lret
jl
into
mov
dec
mov
or
inc
dec
xchg
xor
mov
popa
mov
dec
jb
xchg
sub
inc
cli
xchg
xchg
dec
ficoms
jnp
add
inc
and
pop
push
push
and
or
nop
xor
mov
insl
inc
push
inc
fsubr
sbb
std
adc
lea
push
mov
int3
daa
dec
mov
xchg
fcmovb
cld
aad
sbb
sti
inc
dec
out
sti
dec
cmpsb
cwtl
xchg
call
int3
xchg
arpl
sub
inc
cltd
cmc
xor
pop
addr16
test
jae
ret
mov
clc
lock
icebp
sahf
aaa
dec
add
imul
mov
sub
add
scas
mov
sahf
and
cmpsl
mov
xchg
adc
sti
jbe
xchg
jmp
call
lea
adc
lahf
add
sub
das
add
pop
push
iret
loopne
inc
cltd
lret
sub
adc
adc
movsl
mov
mov
and
cmp
push
xchg
mov
add
pop
movsb
cli
mov
sbb
add
flds
adc
out
stos
daa
negl
xorb
cmp
inc
sub
and
adc
mov
pop
jp
scas
xor
cmp
arpl
jns
dec
into
insl
fisubrs
hlt
div
daa
pushf
adc
jbe
mov
and
cltd
sahf
stos
lret
arpl
insb
sbb
inc
or
sub
notb
xor
sub
sbb
test
pop
pop
jbe
lea
pop
popf
nop
fsubrs
mov
mov
sub
mov
adc
lret
dec
jge
or
xchg
cmp
je
cmp
dec
ret
popf
push
pusha
mov
cs
dec
imul
jmp
cmp
sbb
jae
pop
andl
mov
out
pop
mov
cmp
lcall
flds
enter
pop
mov
mov
and
orb
pushf
cmp
xor
xchg
es
add
fwait
dec
push
les
or
push
aaa
clc
push
enter
test
push
addb
sbb
or
xchg
lds
test
flds
jns
adc
sahf
aam
mov
js
mov
mov
andb
mov
adc
sbb
sbb
mov
shll
es
loop
jle
rcr
lahf
mov
jno
mov
pop
je
push
gs
stos
in
sbbb
mov
push
mov
imul
xchg
jno
or
mov
ljmp
aad
movsb
nop
jne
jns
inc
push
insb
xlat
sarb
lods
inc
clc
adc
dec
adc
mov
repnz
fimuls
add
xor
lret
fwait
sahf
inc
sti
xor
and
xchg
loopne
jne
hlt
mov
jl
in
jg
ds
xor
lods
into
push
test
dec
fldt
adc
mov
pusha
push
sub
xchg
mov
mov
and
adc
loopne
dec
sub
leave
sahf
ficomps
jne
fstpl
mov
xlat
pop
inc
xor
mov
push
test
push
mov
imul
xchg
fmul
aam
jg
sahf
push
jge
or
xchg
stc
or
jno
jbe
rcll
sbb
xor
adc
jbe
sbb
jne
add
pop
mov
xchg
mov
into
dec
mov
or
sbb
notb
sub
dec
pop
divl
aam
push
sbb
adc
mov
out
hlt
aas
loope
rorb
and
pop
hlt
adcb
pop
sbbl
mov
xchg
cmpsl
xlat
push
xchg
bound
dec
data16
sbb
add
mov
mov
jnp
and
mov
adc
xchg
insl
push
cs
xchg
jl
jmp
sub
cmp
fbld
sahf
iret
mov
jmp
mov
cmpsl
shrl
dec
push
test
popa
mov
cwtl
fchs
clc
negb
shrb
in
sub
scas
aam
adc
mov
mov
cmpsb
int
ret
mov
aad
xchg
je
push
scas
sbb
xor
xchg
dec
xor
adc
cwtl
fs
fisubs
sahf
loopne
mov
adc
test
jg
mov
xor
pop
das
adc
in
sbb
test
add
cmp
xchg
add
sub
inc
test
cmpsl
mov
jo
cmc
pushf
imul
xchg
jne
mov
sub
fisubs
mov
mov
das
mov
ret
push
mov
inc
mov
sbb
sarl
xchg
cmc
pop
outsl
xlat
test
adc
cwtl
adc
popa
push
or
je
repnz
out
sarb
cmp
test
lcall
cmp
adc
or
sub
ss
adc
fstl
das
jo
mov
js
dec
subl
adcb
pop
mov
or
stos
xchg
rcrl
cli
and
mov
mov
into
pop
push
cwtl
adc
xchg
ret
cmp
jae
movl
dec
cwtl
dec
mov
out
in
dec
xor
xor
cmp
clc
cmp
popf
sbb
jl
jbe
insb
jmp
arpl
push
repnz
cs
pushf
roll
nop
jb
mov
fdivs
pop
sbb
xor
xchg
loopne
je
lods
push
filds
and
cmp
stos
dec
jno
mov
scas
fidivrs
mov
mov
in
aam
jnp
fisttps
popf
cmp
push
sbb
cltd
xchg
cmpsb
inc
sbb
popf
mov
xchg
and
ja
sub
stc
mov
sbb
fst
xor
aam
leave
mov
sti
repnz
pusha
jl
call
inc
call
jbe
cmpsl
push
xor
jbe
inc
sub
lcall
rcll
and
and
arpl
int
jns
push
add
sub
fs
jno
mov
mov
push
out
bound
aam
adcl
jl
xor
popf
daa
lea
lea
data16
testb
mov
sbb
jbe
loopne
fnstenv
js
pop
loopne
xor
xorl
mov
addr16
push
fs
jle
sub
mov
xor
mulb
mov
sbbl
mov
sarb
fwait
icebp
in
pop
outsl
jne
addr16
mov
jle
addr16
jb
mov
and
pop
dec
notl
popa
sti
ja
icebp
pop
pusha
lods
dec
mov
adc
and
mov
mov
xchg
scas
push
aam
sbb
xor
sbb
jae
push
imul
push
sbb
mov
int
sbb
xchg
addr16
cs
and
shlb
cmpsl
cmp
test
sub
xchg
into
jmp
jp
cmc
xchg
mov
stos
std
lods
jp
int3
imul
adc
mov
and
inc
movsl
pop
stc
xor
lock
movsb
cltd
in
and
hlt
jge
mov
int
data16
mov
inc
pop
push
push
loopne
js
ret
rol
jle
or
std
scas
out
data16
pop
hlt
mov
loope
dec
dec
addr16
out
scas
pop
imul
xor
js
pusha
jae
bswap
ret
sbb
ja
idiv
mov
mov
mov
jge
add
movsl
sbb
repnz
mov
push
in
stc
mov
in
mov
cmp
push
scas
sub
sub
xor
pop
popa
loopne
jbe
fidivs
mov
das
in
xor
pushf
adc
push
dec
mov
aad
cmp
pop
fiadds
dec
pop
pop
fdivrl
pop
jne
mov
jns
cli
lods
and
data16
jecxz
mov
push
and
lds
scas
je
js
push
jge
sbb
lret
mov
stc
pusha
cltd
xchg
push
sbb
repz
icebp
xlat
pushl
nop
mov
mov
aaa
pop
xor
xchg
ret
mov
gs
xchg
loop
mov
mov
aas
xchg
fidivl
repnz
sahf
out
adcb
or
mov
and
push
in
xor
cmc
jbe
repnz
imul
call
into
add
in
popf
imul
pop
jl
ret
cmovle
jne
pusha
outsb
xor
dec
xchg
int
ficompl
sub
add
cli
mov
pop
inc
insb
mov
mov
dec
out
cmp
sbb
inc
pop
insl
mov
xchg
sbb
adc
push
xor
push
cmp
mov
mov
sbb
add
insl
jmp
fcmovnbe
fstpt
jnp
pop
pop
imul
repnz
mov
add
daa
push
xor
add
lcall
sbb
sub
fisttpll
xchg
outsb
and
cli
arpl
bound
push
mov
mov
xchg
and
stos
outsl
enter
mov
in
and
les
jne
loope
ljmp
andb
mov
add
pushf
pop
mov
cmp
ljmp
inc
adc
cltd
stos
stc
add
mov
call
je
add
insb
int
and
fcmove
popf
or
pushf
mov
sub
jno
mov
push
adc
xor
out
loopne
arpl
scas
push
inc
add
and
jnp
xchg
lock
cmp
lret
gs
pusha
inc
gs
out
incl
xchg
add
ss
icebp
and
xor
stos
add
outsl
movsl
inc
or
sub
fucomip
scas
jle
sbb
or
pop
mov
dec
movsb
sbb
jmp
sbb
dec
lret
lret
movsl
clc
aam
faddp
lods
imul
ficoms
sbb
and
movsb
sub
dec
dec
out
mov
cmp
leave
scas
sahf
pop
mov
mov
lahf
mov
in
adc
mov
add
dec
mov
shll
pop
in
popf
into
pop
test
dec
gs
insl
mov
icebp
movsb
jne
shll
movsb
test
stc
jmp
orl
in
push
test
inc
inc
sub
aad
das
or
mov
nop
pop
mov
push
mov
mov
pop
cs
iret
das
xor
leave
nop
xchg
stos
mov
sub
cmp
sbb
dec
inc
fisubrs
jo
push
jmp
fsts
xor
push
ljmp
push
test
jbe
mov
loop
sub
in
je
test
scas
mov
push
sbb
pop
movd
fdivp
jecxz
mov
pop
pop
push
dec
popf
cmc
xchg
add
xchg
jl
push
ss
in
and
add
negb
pop
cld
sbb
jne
repz
xchg
lcall
in
pop
test
test
leave
sbb
sti
fldenv
push
mov
ljmp
xchg
dec
xchg
push
jo
sbb
fwait
and
push
mov
mov
mov
sub
adc
out
and
nop
and
lcall
outsb
or
xchg
pop
test
mov
and
stos
or
add
ljmp
jno
ds
repnz
pop
int
sbb
gs
or
or
into
adc
dec
js
mov
cmp
cwtl
ret
cs
cltd
in
dec
cld
dec
cld
and
dec
pop
jno
test
loop
mov
outsb
aad
inc
addl
stos
pop
jecxz
mov
xchg
pop
je
scas
pop
ja
decb
cli
in
cli
push
sbb
mov
dec
cmpsl
inc
adc
js
sbb
dec
nop
loopne
lahf
jl
mov
jmp
sub
fcmovu
xor
or
and
mov
push
sub
gs
mov
sbb
xchg
sti
pop
mov
push
xor
sub
or
mov
push
jl
inc
gs
loopne
push
push
pop
in
cltd
fdivs
push
rcrl
xorb
mov
push
sbb
dec
std
stos
sbb
cmp
xlat
ucomiss
loop
jecxz
repz
sub
roll
mulb
or
mov
pop
out
ret
mov
dec
notl
and
jae
pop
lahf
mov
push
xor
sbb
rcll
shl
out
idivl
nop
ret
movb
jmp
out
xor
mov
lods
mov
pop
jge
cmp
pop
outsl
imul
adc
addr16
lret
add
stc
adc
or
aad
sti
cmpsb
adc
stos
xchg
and
in
inc
or
add
mov
push
jle
adc
and
sbb
into
in
adc
jno
loop
dec
inc
sbb
ss
pop
aaa
sti
mov
in
mov
xchg
ret
mov
add
jmp
bound
dec
dec
inc
push
rcl
and
lock
xchg
sti
cmc
icebp
mov
stos
ljmp
push
popf
into
cltd
push
dec
call
and
jmp
lret
add
push
inc
jne
mov
and
adc
fs
addr16
hlt
xor
sub
and
or
mov
nop
xlat
sub
cmp
dec
adc
and
lods
adc
ljmp
mov
inc
fwait
in
pop
inc
stc
dec
aam
iret
inc
test
or
cmp
pop
push
addr16
mov
nop
inc
movsl
mov
int
insb
pop
add
gs
lods
sub
lds
push
hlt
fistl
shrb
es
xchg
rcl
mov
mov
jmp
lret
mov
ja
sbb
cmovno
ds
xlat
or
mov
fstpt
aaa
aam
stc
mov
into
subb
loopne
jnp
scas
cmp
sub
repz
and
push
jmp
cmp
les
rol
xor
xor
fldenv
ja
loop
and
jne
jle
mov
addb
dec
rcl
lret
lea
pop
fs
mov
pop
dec
pop
mov
mov
mov
lahf
iret
push
push
dec
scas
xlat
jno
rorb
lods
scas
fcoms
jl
cmpsl
test
sub
sbb
pop
inc
xlat
jp
js
js
gs
dec
jb
loope
pop
cmp
inc
loope
ret
hlt
jbe
sahf
clts
sbb
iret
and
mov
ja
sbb
mov
sbb
sub
sbb
pop
lock
jae
add
rolb
inc
and
int
les
cli
add
out
sub
cmp
mov
out
mov
sub
jno
xor
dec
imul
dec
mov
jmp
cli
and
mov
mov
nop
pop
notb
and
stc
aaa
xchg
out
sbb
gs
aas
rcr
mov
pop
push
pushf
and
div
orl
lock
jmp
das
flds
jnp
xor
jae
inc
xor
fucomp
xor
pop
sbb
adc
jno
int
stos
mov
mov
lea
loopne
idiv
into
addl
fdivl
daa
pop
mov
xor
je
stos
lods
mov
enter
sbb
rcrb
call
mov
or
jne
jg
xchg
mov
cmp
sbb
cmp
test
push
mov
xchg
mov
jne
sahf
push
pop
testb
les
pop
jno
dec
jmp
cli
int3
popf
pop
xchg
jae
cmp
hlt
fidivrl
mov
mov
mov
stc
push
adc
inc
jle
mov
add
in
cwtl
mov
test
sub
andl
imul
dec
sahf
inc
mov
xchg
mulb
int
xchg
sbb
pop
clc
iret
test
and
sti
hlt
sub
sbb
sbb
cmpsl
jo
pop
adc
cwtl
xor
push
push
lret
int3
xlat
cmpsl
mov
push
popa
push
insl
xor
rcr
fidivrs
or
inc
mov
inc
mov
add
loope
mov
add
pushf
jmp
lods
xchg
addr16
loop
adc
adc
or
sub
mov
push
and
fistpll
mov
pop
dec
mov
sbb
mov
negb
dec
enter
clc
adc
mov
pop
sbb
sbb
cmp
jo
pop
pop
jmp
cmp
sbb
jg
cltd
jnp
test
mov
add
mov
mov
push
ret
lcall
ljmp
mov
mov
jecxz
jg
fcomi
stos
roll
inc
shrb
pop
add
scas
push
aas
lea
pop
out
sub
lods
jae
mov
jae
mov
mov
add
cmpsl
cld
fists
shl
insb
push
add
dec
test
lret
mov
xchg
jne
in
jns
popa
jnp
insl
xor
xlat
jle
jnp
test
xchg
out
imul
outsb
jp
or
rclb
jmp
push
dec
ds
or
in
inc
sbb
nop
popf
repz
sbb
aam
sbb
sub
and
not
inc
xorb
cmpl
dec
inc
and
push
or
js
pop
sub
or
pop
out
jo
cmp
xchg
push
andb
add
loope
adc
out
pop
imul
adc
push
shll
test
dec
fnstsw
sbb
lock
sbb
dec
dec
or
aam
jmp
fmuls
popa
mov
cs
in
std
int
and
jmp
fcmovnb
sub
xor
jns
jae
ret
push
push
jo
jo
jge
jp
xchg
jle
jecxz
mov
rcrb
out
adc
scas
imul
sub
clc
pushf
push
cmpsb
test
xor
fldt
pop
cwtl
mov
je
sbb
addr16
pop
xorb
jno
xor
mov
ljmp
lcall
xchg
js
or
xor
sti
jo
pop
mov
clc
pop
adc
sbb
pop
ljmp
mov
jp
bound
mov
mov
jns
leave
cwtl
cmp
sbb
mov
pop
ret
adc
in
in
test
xchg
fnop
scas
pop
sti
add
pop
pop
ret
push
mov
ret
sub
in
mov
or
stos
xor
movaps
sbb
rcl
cmp
out
add
jbe
add
int
jns
lea
jmp
xorl
pop
dec
inc
int3
and
pushf
pop
add
addr16
lea
je
fisubl
xlat
jg
lods
sub
or
sahf
sub
or
stos
mov
adc
xchg
scas
pop
xor
lahf
popf
xchg
xchg
or
and
sbb
adc
lret
hlt
fmull
lods
push
stos
clc
lcall
aas
or
dec
mov
jo
mov
and
imul
mov
cwtl
testl
test
aad
shrl
jae
add
js
jnp
jmp
pop
xchg
and
pop
push
cmp
cmp
jge
jmp
ror
andl
sbb
xchg
inc
mov
inc
mov
cli
dec
inc
push
push
sbb
shll
xchg
sbb
add
cmpsl
lds
aaa
add
bound
in
lock
sbb
push
jne
fst
ror
add
std
or
cmovb
inc
pusha
sbb
mov
pop
inc
push
aaa
in
bnd
xchg
cli
and
cld
imul
pop
out
es
add
mov
mov
lret
imul
mov
mov
stc
xchg
jecxz
mov
gs
push
and
mov
frstor
cmp
imul
shll
stos
ficompl
rorl
scas
sbb
test
cmp
and
addr16
and
mov
aaa
das
scas
std
cmp
xor
sbb
test
adc
xlat
hlt
lods
cmp
movsb
inc
or
aad
ret
jnp
out
sub
lods
sub
es
pop
adc
or
xchg
xor
bound
and
cld
fs
roll
scas
mov
xchg
mov
xlat
push
add
loop
dec
push
sbb
inc
and
cmp
xor
aas
sbb
pop
cli
movsb
add
and
xchg
hlt
stos
push
aam
xor
mov
stos
mov
jg
andl
mov
xchg
mov
mov
push
and
jge
dec
sbb
dec
in
xchg
xor
push
mov
fdivrl
dec
mov
fdivr
lea
pop
loope
sub
xchg
aas
mov
mov
ss
jecxz
fs
bound
hlt
mov
inc
out
dec
lahf
fs
and
jp
push
xlat
push
adc
inc
hlt
xor
sbb
js
mov
jnp
and
mov
mov
pushf
les
cli
adc
lea
pop
leave
fwait
xor
jmp
mov
pop
xchg
les
add
xor
test
imul
sbb
pop
jle
xor
insb
inc
mov
add
adc
inc
ret
mov
std
repz
xor
sub
xchg
sti
xchg
or
stc
xchg
xor
dec
cmpsl
cli
or
rolb
add
sarb
test
mov
repz
and
stos
divb
inc
xor
xor
sub
je
dec
out
and
or
dec
bound
push
cli
push
aad
in
mov
push
fsubrs
jne
prefetcht1
push
mull
xchg
sub
fidivs
mov
jns
mov
dec
movsl
jbe
cmpsl
sbb
mov
xor
lcall
into
push
jns
jne
dec
push
test
nop
mov
fs
aam
ljmp
enter
fnstsw
inc
jp
or
adc
mov
adc
mov
dec
adc
mov
add
sti
pop
lret
pop
roll
mov
scas
pop
adcl
lock
lcall
jns
pop
cmp
pop
jg
mov
movsl
loop
imul
cmp
inc
imul
and
pop
pop
xor
aam
ss
loop
inc
stos
outsb
xor
xor
bound
std
sarb
mov
lods
cmp
mov
testb
push
jp
movsb
std
cli
xchg
repnz
popa
sbb
or
sub
call
popa
or
dec
adc
insl
dec
int
inc
repz
mov
sbb
xor
push
pop
sub
mov
movsb
addr16
fucom
bound
rorl
add
cli
mov
pop
mov
adc
lret
xchg
mov
addr16
xlat
pop
mov
mov
mov
ret
push
popf
jno
lcall
in
ret
jns
pop
lret
stc
cmp
dec
xlat
test
movsb
loop
in
addb
not
xor
je
inc
jmp
cs
jge
sub
or
in
popa
mov
mov
shl
mov
repnz
fdivrl
sahf
xor
inc
fidivrl
sub
sarl
bound
mov
mov
mov
mov
out
mov
push
inc
or
or
mov
scas
fwait
pop
clc
insl
outsl
cmp
inc
mov
sbb
aad
xchg
icebp
int3
imul
sbb
sahf
rcl
add
push
sbb
or
insl
sbb
jg
dec
fwait
mov
arpl
mov
inc
xor
imul
push
sub
dec
dec
inc
jp
sbb
shlb
xchg
ljmp
clc
fdivs
xchg
xlat
sbb
pop
mov
pusha
jle
sbb
movsl
mov
les
sub
loope
aas
loope
fimuls
test
mov
popa
in
stos
ljmp
movsb
inc
xor
stc
lret
mov
loopne
in
stos
dec
aam
mov
push
sub
lret
jbe
popf
aam
jle
xor
lcall
and
popf
xchg
mov
loopne
jecxz
hlt
xchg
stos
xor
jmp
nop
aaa
std
sub
pop
sbb
pop
cwtl
xor
mov
inc
imul
je
xchg
mov
mov
shll
mov
out
imul
mov
movsl
js
pusha
inc
pop
sbb
call
jo
jle
mov
dec
xlat
ss
pop
aaa
inc
xchg
or
and
in
mov
dec
mov
push
xor
push
mov
repnz
and
mov
stc
cmpsl
test
pop
testb
fsubrs
xlat
pop
cltd
icebp
orl
pcmpgtb
jle
pop
test
cmp
jo
lods
movsl
mov
and
lods
jle
xchg
sbb
adc
aaa
push
mov
mov
push
mov
sbb
sub
cli
sub
arpl
adc
xor
push
mov
jmp
push
cmp
push
mov
cmp
cwtl
mov
sbb
xor
cld
movsb
js
loope
jae
or
add
jg
rcl
mov
jmp
pop
and
sti
add
jmp
fnop
test
loope
cli
jb
mov
ja
std
dec
ftst
lcall
xor
xor
test
out
and
out
jne
mov
fst
add
jmp
pop
pop
xchg
xor
cli
iret
stc
daa
dec
pause
jp
jmp
xchg
sub
and
xor
or
or
sub
jbe
cli
adc
adc
adc
aas
mov
pop
daa
and
jmp
mov
call
or
fs
mov
pop
cmpsb
inc
rorb
stc
cs
stos
cmp
mov
jmp
push
ds
adc
loop
and
xchg
cli
addl
movsl
cld
scas
and
mov
adc
pop
mov
push
loope
shlb
jns
out
out
cmp
ss
jnp
lret
stc
out
lret
mov
shr
jb
adcb
xchg
add
push
movsb
inc
mov
cwtl
stos
int3
add
or
popf
stc
jg
lea
add
mov
scas
sub
pushf
shlb
add
daa
lret
lahf
inc
je
inc
dec
add
mov
fldl
pop
repz
sub
mov
pushf
mov
nop
pop
repz
mov
xadd
or
xchg
xchg
lret
dec
sti
aam
xchg
sbb
jns
shlb
jmp
in
lcall
scas
in
jae
ret
jmp
negl
loopne
jge
mov
mov
xchg
clc
xlat
mov
jns
cmp
jns
xor
push
add
push
mov
outsl
pop
pop
pop
sbb
inc
insb
hlt
sbb
mull
jbe
sub
mov
xchg
mov
fs
je
mov
pop
shlb
fisubs
jne
rcl
pop
ljmp
decl
push
aad
jnp
out
jmp
fdiv
je
add
pop
xor
arpl
out
cs
sahf
pop
adc
adc
shlb
arpl
push
cwtl
mov
js
pop
push
ficoms
clc
and
repz
lods
sub
mov
sbb
repnz
test
xorb
push
mov
push
xchg
out
push
sarl
and
inc
out
jecxz
pop
loope
movsl
inc
xor
cmp
rcll
adc
fstl
hlt
mov
sub
aad
mov
mov
lods
movl
ret
es
sub
int
outsl
adc
pop
aam
leave
aad
mov
pop
out
insb
icebp
test
outsb
aad
add
ret
fmulp
xchg
mov
loope
test
inc
jge
repz
push
mov
imul
add
jl
add
xchg
shlb
xor
ljmp
popa
lock
or
pop
lea
or
hlt
mov
in
sti
inc
out
sbb
std
out
test
adc
sahf
pusha
loopne
gs
lods
in
jge
leave
mov
pop
jg
test
fbld
lods
and
sbb
xchg
sti
or
sbb
ret
jnp
push
add
popa
repnz
sbb
js
fdiv
aad
lcall
enter
push
mov
mov
jo
mov
out
and
xor
out
cwtl
lea
icebp
inc
popa
and
and
jne
test
int
and
insl
inc
or
sub
in
test
ds
les
frstor
pop
xchg
xor
insl
xchg
sub
scas
scas
fildl
push
es
iret
cmc
push
fwait
xchg
pusha
lret
push
sub
repnz
pushf
aam
ret
or
xlat
imul
les
icebp
arpl
cld
mov
out
rcrb
in
shl
lds
xchg
lock
inc
jb
add
mov
xorl
jle
mov
cmp
pop
pop
jle
push
push
repnz
inc
push
lods
jl
xor
mov
xor
mov
or
add
and
lahf
int
lock
out
dec
testb
inc
pop
add
mov
dec
sbb
adcb
sub
push
or
and
or
out
xor
pop
jne
in
push
in
addr16
icebp
xchg
mov
and
std
pushf
imul
push
sub
ds
sbb
mov
bnd
xchg
popf
push
sbb
outsl
xchg
mov
xchg
jnp
jle
mov
or
hlt
imul
push
cmp
or
loopne
fisubrs
sahf
push
rclb
and
aam
mov
push
inc
dec
ret
or
or
les
stos
jo
mov
insl
test
jge
icebp
add
repz
push
popa
mov
sub
sbb
fadds
xchg
sub
sti
leave
mov
insb
popf
ret
mov
sbb
jge
push
inc
test
out
rorb
cmp
lock
lods
or
push
fadds
inc
sahf
gs
movsl
leave
aam
fcoms
sbb
mov
aas
ljmp
fwait
jne
mov
addr16
jge
into
adc
xor
sbb
out
lret
xchg
cmc
js
and
ljmp
xor
xor
sti
int3
push
ss
mov
int3
loopne
mov
lret
pop
fs
xchg
xchg
jp
imul
fisubrl
ds
mov
xlat
and
sub
insl
ret
scas
cmpsl
jne
sub
mov
sub
add
sbb
xchg
nop
add
push
popa
sbb
jns
outsl
inc
sub
add
repnz
add
in
push
inc
cwtl
xor
in
jno
push
inc
sub
sub
xchg
out
cld
ss
in
xlat
mov
dec
rclb
in
and
dec
jo
test
movsb
ljmp
mov
aas
sub
pop
loop
pop
inc
mov
sub
dec
or
aas
xchg
jle
pop
outsb
sub
test
push
ds
scas
in
and
rclb
push
xor
adc
movsb
imul
mov
sbb
enter
mov
int3
data16
mov
mov
pop
mov
xchg
popa
dec
sbb
mov
scas
lret
inc
pop
scas
sbb
dec
sub
fcomps
push
cmp
jge
pop
xchg
or
xor
cmc
data16
mov
sub
outsl
out
sti
daa
arpl
pop
dec
adc
aas
shlb
call
xchg
lods
mov
dec
inc
sbb
push
jl
inc
jp
sbbb
adcl
gs
rcl
jo
pop
add
mov
jae
xchg
xchg
dec
in
push
stos
movsb
adc
fwait
cli
or
fwait
lods
jo
mov
adc
xchg
loopne
outsb
adc
std
xchg
jno
pusha
cmp
nop
shl
adc
sub
pop
mov
mov
pop
lret
aad
mov
mov
mov
pushf
adc
mov
cmp
es
add
mov
xlat
in
out
sbb
push
inc
mov
mov
xchg
repz
shlb
mov
or
inc
cmp
push
mull
aam
jge
in
adc
mov
arpl
cmp
movsl
push
movsl
in
fsubrl
adc
outsl
push
sub
pop
fs
outsb
cs
mov
pop
pop
fiaddl
xchg
loop
and
in
orb
test
fwait
shl
stos
movsb
jne
insl
jns
cmpsb
xchg
into
xor
ud0
into
lods
jno
aam
shlb
push
clc
out
xchg
xchg
jbe
and
inc
shrl
mov
lea
push
insb
mov
mov
aaa
mov
mov
dec
fstpl
test
mov
repnz
jge
cmpb
add
sub
mov
cmp
out
and
mov
pusha
pushf
es
mov
jbe
ficoml
ja
push
push
mov
lock
fdivrl
rcll
add
cwtl
and
mov
mov
mov
fs
jecxz
sahf
lods
cmp
shrl
mov
jae
xchg
push
jbe
or
rolb
jno
lock
sbb
add
lahf
inc
movsb
arpl
dec
loope
inc
mov
push
sub
inc
outsb
jbe
xor
inc
in
adc
pop
movaps
aam
or
push
leave
or
ror
xor
xor
gs
push
test
cli
mov
int
dec
jge
adc
lret
jp
and
mov
xchg
ss
scas
and
movsb
pop
add
mov
add
int3
sbb
mov
shlb
xchg
dec
pop
jmp
ret
push
sahf
pop
xor
and
out
fld1
jp
pop
lods
out
or
xchg
mov
out
push
or
sub
adc
jo
dec
das
push
rorl
loop
out
clc
sahf
jmp
lds
mov
pop
or
ret
leave
mov
dec
xchg
mov
jae
ret
xchg
insl
inc
jno
call
out
not
and
push
mov
dec
push
lahf
test
dec
sahf
xor
push
cmc
lcall
mov
push
mov
in
cmp
xor
cmc
and
outsb
lret
pop
xor
ja
dec
xchg
movsb
shll
loop
pop
arpl
or
loope
out
xchg
push
js
adc
int3
pop
cmp
xor
dec
scas
mov
xchg
rcll
and
mov
test
icebp
sub
push
imul
xor
mov
cld
pop
cs
inc
stc
or
enter
mov
jnp
mov
jae,pn
jle
arpl
lcall
aam
hlt
ja
add
les
dec
add
loop
mov
cld
mov
mov
or
mov
mov
stc
std
addr16
call
je
and
movsl
add
es
inc
mov
pop
add
lret
repnz
or
pop
push
hlt
mov
cs
dec
sub
iret
xor
sahf
aad
lds
std
sub
inc
imulb
sbb
into
cmp
and
dec
sbb
fs
jb
subb
xor
xchg
rorl
mov
and
add
mov
inc
xchg
fists
jo
mov
mov
xchg
jb
cltd
adc
ljmp
dec
inc
es
pop
daa
inc
in
adc
and
in
xchg
imull
fs
dec
lock
mov
popf
xorl
stos
les
xchg
add
shlb
or
mov
add
andl
dec
repnz
sub
cmp
dec
aam
stos
sub
mov
adc
rcll
inc
dec
loopne
enter
sub
loop
jo
mov
xor
xchg
adc
push
sbb
cmp
fildl
ljmp
mov
pushf
notb
scas
sub
push
nop
testl
adc
in
sub
scas
shll
js
insl
ss
stos
push
jo
loope
test
lret
pushf
xchg
mov
aam
and
dec
ficompl
mov
and
out
mov
xorb
mov
sahf
dec
jb
push
mov
pop
pushf
inc
and
inc
cwtl
out
lds
rcr
or
fldenv
dec
es
or
jne
andps
repnz
pop
sbb
stc
loope
inc
test
and
or
push
sahf
repz
pop
sbb
cmp
pop
sti
xor
pop
jecxz
pop
pop
je
int3
shll
pop
and
xor
push
fstps
outsb
in
add
ror
je
xor
loopne
aas
loopne
mov
ret
enter
mov
mov
mov
push
and
imul
mov
push
arpl
movsb
imul
cmp
pop
test
insl
jae
pop
jae
ret
rcrb
mov
js
xchg
mov
mov
push
dec
dec
adcb
test
dec
jecxz
inc
icebp
push
inc
push
xor
add
es
mov
push
mov
inc
and
jbe
test
pop
pop
imul
loop
or
dec
in
js
push
pop
sbb
enter
cmp
inc
jnp
jo
mov
nop
mov
fidivl
sbb
sbb
cli
dec
loop
add
andb
inc
notl
or
cmp
fwait
push
lret
in
sbb
test
into
mov
dec
ds
std
dec
cmp
dec
ret
sbb
push
xchg
cwtl
aam
mov
leave
test
cmp
sti
xor
stc
mov
jae
lock
test
stc
pop
jge
cltd
add
aad
jle
aas
pusha
adc
inc
mov
push
cld
sbb
lea
pop
xor
imul
lea
lret
mov
out
bound
sahf
mov
loop
ficomps
or
xor
call
mov
xchg
push
and
or
mov
xchg
rorl
push
xlat
mov
mov
and
or
roll
inc
or
icebp
stos
gs
lcall
inc
mov
call
cmpsl
xorb
xor
sbb
aaa
arpl
inc
aad
add
dec
inc
mov
fcoml
pusha
mov
add
outsb
lods
adc
imul
cmp
arpl
cmp
and
rclb
das
sub
iret
fs
dec
cmp
les
jns
ds
in
orb
shll
mov
mov
xor
xor
xchg
and
adc
pop
imul
outsb
push
mov
jmp
in
fistpl
aam
enter
lret
add
add
inc
push
mov
mov
sub
les
mov
dec
ret
daa
cmpsl
xchg
adc
mov
stos
rcr
fs
mov
mov
lods
nop
sub
testl
lcall
mov
movsb
lods
mov
pop
or
cmp
fstpt
loope
stc
jbe
mov
or
adc
jo
pop
cmp
dec
leave
outsb
mov
ret
loop
inc
test
xchg
repnz
mov
outsl
pop
roll
push
pop
mov
out
cld
adc
mov
mov
enter
jno
pop
clc
adc
js
rolb
testl
lods
cmpsb
cmp
adc
push
dec
mov
dec
leave
adc
dec
pop
insb
inc
adc
sub
out
std
inc
shrb
int3
mov
rclb
mov
push
xorb
mov
inc
jbe
jp
in
mov
lods
lods
addr16
mov
inc
mov
outsb
mov
push
jg
popa
sub
pusha
out
and
lods
inc
jg
pop
out
dec
fs
dec
pop
leave
or
add
jge
call
xor
pop
adc
push
adc
negl
cld
rcrb
xlat
xor
mov
imul
fisubs
gs
sub
out
and
fildll
sub
add
out
push
pop
loope
pop
addl
lods
jmp
and
cmpsb
xor
mov
or
pushf
mov
adc
or
adc
outsb
movsb
aam
and
icebp
addr16
clc
fildll
and
movsb
lcall
cmp
cli
fdivr
mov
fdivl
add
mov
inc
inc
and
mov
xorl
movsb
cmp
pushl
and
adc
or
stc
out
inc
sbb
xor
inc
ret
mov
stc
icebp
pop
add
jecxz
std
addr16
aad
and
or
js
mov
mov
mov
imul
push
cmp
jno
sub
inc
push
ja
adc
add
mov
rcrb
mov
adc
fistpl
out
or
sarb
and
inc
add
push
sub
test
sub
out
mov
lahf
cmp
add
xor
push
adc
andb
cld
test
test
mov
aas
sbb
sbb
jnp
clc
or
aaa
loop
pop
sub
addr16
std
xor
lahf
mov
mov
cmp
shlb
and
pop
and
jbe
das
jbe
adc
lods
pop
cmpsl
ret
inc
pop
pop
repnz
repz
psrlq
dec
dec
mov
xchg
push
mov
dec
dec
xor
dec
dec
cwtl
ja
out
imul
in
cmp
xrelease
les
call
or
fcompl
jae
add
cmpsl
adc
dec
add
gs
or
mov
daa
adcb
scas
mov
add
push
push
push
shlb
mov
mov
movsb
jecxz
cltd
cmp
xchg
push
ret
out
cmpsb
cltd
dec
std
mov
addl
xor
adc
xchg
out
fdivr
fwait
mov
bound
out
addb
loopne
mov
xchg
adc
fnstsw
andb
add
lret
lds
pop
add
into
pop
mov
out
push
aas
add
cmpsb
mov
mov
xchg
inc
mov
stos
or
mov
jge
xor
shll
ljmp
mov
push
jne
movsb
xchg
inc
ficoms
pop
imul
dec
push
loopne
xchg
xor
add
mov
sbb
fisubrl
movsb
push
jbe
inc
bound
push
pop
test
clc
xchg
imul
add
sbb
fmuls
mov
add
fsubs
out
pop
pushf
movsb
mov
test
adc
inc
enter
mov
repnz
jle
ss
out
test
mov
dec
sub
ret
andb
or
push
dec
or
jb
mov
inc
xor
sub
push
fimuls
loop
sbb
pushf
imul
cld
cmp
subl
lret
cmpsb
xchg
pop
xorl
mov
cmp
sbb
adc
xchg
xchg
popa
dec
adc
xor
pop
das
xor
xor
xchg
sub
hlt
cmp
dec
sbb
scas
mov
sub
mov
movsl
xchg
adc
fiaddl
dec
mov
imull
xorb
or
insl
cwtl
out
xchg
adc
inc
xchg
inc
mov
cltd
inc
mov
outsb
mov
test
sub
cltd
push
outsb
je
and
cwtl
out
addl
mov
movsb
in
cmp
cmpb
fildll
mov
popf
xchg
cmpsb
ja
add
sub
lods
xchg
fstpt
shlb
mov
jns
mov
cmpb
add
sbb
lock
mov
jbe
fisubs
fimuls
jl
call
push
pop
jns,pn
push
subl
push
mov
out
imul
outsl
into
fcomps
aaa
icebp
cltd
mull
rcrb
nop
pop
les
inc
or
iret
cmpsb
xchg
fldl
and
and
jecxz
cld
sbb
lock
ret
mov
push
jle
mov
ljmp
sbb
push
and
jbe
lcall
xor
popf
dec
in
mov
fisttps
add
outsl
popf
sub
aas
imul
ds
xor
popf
mov
movsl
loope
inc
insb
unpckhps
inc
xchg
leave
iret
imul
xor
stos
cltd
fildl
daa
xchg
iret
je
jo
mov
cmpsb
in
sahf
mov
leave
xor
pop
push
insb
cvtpi2ps
xchg
inc
fidivrl
pop
add
sbbb
and
into
xor
mov
or
icebp
sbb
cmpsb
fistpll
fdivl
cld
aas
in
jbe
xor
mov
pushf
stos
mov
xor
ret
and
test
add
cltd
movsb
push
dec
dec
call
cmp
test
and
loop
add
mov
stc
cmp
sub
mov
scas
in
scas
sbb
sbb
pop
jp
icebp
hlt
xor
jbe
fmul
adc
lock
inc
add
sti
sub
fsubrl
lret
xchg
lea
mov
push
rcrb
popa
fidivs
jle
les
dec
scas
jne
mov
or
fdivrs
pop
cld
pop
movsl
push
lcall
gs
sbb
ss
mov
jg
add
mov
xlat
mov
cmp
test
or
and
push
iret
xor
mov
rolb
xchg
pop
mov
aad
xor
out
testl
fwait
mov
fsubr
shlb
sbb
out
push
or
inc
or
testl
je
loopne
movsb
scas
aaa
jge
dec
mov
loope
mov
sub
dec
jmp
mov
lret
ss
add
ret
adc
cld
pop
inc
scas
cltd
jnp
sub
das
xorb
sub
cltd
jl
jg
or
xor
enter
pop
pop
iret
outsb
icebp
push
hlt
int3
scas
push
mov
cmp
or
leave
fcmovne
adc
jae
stc
orb
jl
pop
cmp
add
adc
shrb
cs
push
jb
test
and
sub
add
pop
paddusw
imul
xchg
mov
mov
dec
mov
inc
cmpsb
out
insl
mov
scas
and
add
loopne
pop
and
push
dec
je
stc
andb
mov
int
and
xchg
push
flds
leave
xchg
imul
iret
push
or
mov
ror
rorb
cmp
dec
cmp
repz
sbb
inc
xchg
xchg
sub
push
jno
repz
psubsb
push
mov
popa
push
push
mov
into
movsl
aas
sbb
xchg
mov
xchg
push
push
mov
mov
jno
cld
dec
fcmovbe
movsb
in
push
les
in
repnz
mov
repnz
inc
push
and
pop
popf
sub
cmp
std
je
call
xchg
stos
inc
inc
fsubrs
in
addr16
enter
lret
shrb
mov
mov
stc
xor
inc
mov
xchg
mov
fidivs
push
mov
jge
mov
cmc
stos
and
in
dec
cmp
sub
push
lods
rcrb
jp
jg
loop
neg
xchg
xlat
sahf
mov
aaa
mov
pop
in
push
jnp
xor
ljmp
xchg
jp
in
pop
xor
jl
mov
pop
ljmp
push
cmp
fnstcw
push
in
pop
xchg
xchg
add
jbe
sar
mov
rcrb
shll
cmp
and
fsubrs
mov
icebp
inc
push
jp
lea
mov
fmul
mov
or
in
jne
enter
imul
inc
movl
popa
repz
lods
mov
or
outsb
mov
and
sub
jmp
jp
insl
cwtl
xlat
in
les
inc
jp
lds
scas
add
scas
aad
xlat
adc
neg
xor
pop
dec
pop
divl
mov
mov
and
xor
outsb
jnp
sbb
lods
sbb
stos
stos
jae
fwait
adc
stos
push
pusha
in
jg
inc
std
and
sub
je
les
lcall
insb
dec
lods
icebp
into
nop
and
push
shrb
insl
lods
leave
and
fmulp
xor
sub
sbb
into
push
scas
std
roll
mov
adc
xchg
decl
sbb
ss
inc
adc
stos
xchg
cli
pop
mov
aaa
out
sbb
and
ja
fisubrs
jae
xor
mov
outsl
push
push
jmp
ja
aam
jg
sahf
jg
stc
dec
dec
stos
dec
dec
clc
xlat
xchg
mov
mov
aad
rclb
addr16
inc
cmp
pusha
adc
push
mov
adc
or
lods
pop
sbb
push
add
mov
jecxz
pop
out
fdivrs
imul
mov
shll
daa
pop
aad
dec
mov
and
cltd
and
imul
shl
and
stos
cmpsb
ret
sahf
dec
push
jecxz
popf
add
pop
fimull
xor
jne
cs
inc
inc
cmp
sub
mov
jmp
jp
jp
push
sub
test
mov
faddp
mov
xor
loop
rcll
test
decb
add
mov
in
sbb
jecxz
jl
sbb
xlat
adc
push
jp,pn
shl
iret
push
xchg
cmpl
xchg
mov
test
dec
mov
imul
pushf
cmpsb
stos
mov
rcl
add
rolb
xor
adc
push
leave
xchg
sbb
jno
lock
lret
cmp
lds
mov
in
inc
dec
add
cmp
ret
adc
iret
xor
mov
sbb
mov
js
lods
push
cs
push
test
dec
or
jl
jmp
jns
adc
arpl
lods
or
inc
sti
and
push
push
fdivl
push
and
and
std
rclb
and
mov
xchg
xchg
and
movsl
jp
or
jo
xchg
cmp
data16
xor
test
lahf
imul
add
test
fimuls
and
cmp
shl
ret
sbb
shll
push
outsl
adc
and
je
or
enter
test
sar
push
inc
scas
in
cs
xchg
movsl
cld
cmpsl
cld
outsl
jge
pop
call
dec
mov
mov
xor
mov
popl
push
imul
iret
js
repz
xchg
mov
roll
push
call
psubb
inc
lock
pop
xor
faddl
dec
inc
int
subb
jmp
inc
js
xchg
mov
xlat
push
cmp
sbb
arpl
pop
pop
aaa
mov
adc
mov
and
inc
sub
pop
cwtl
xchg
movsb
dec
xor
inc
cmp
pop
pushf
call
push
mov
stos
adc
fldcw
stc
or
push
mov
int3
std
mov
stos
mov
nop
and
aas
es
scas
push
pop
fstpl
mov
das
inc
sti
lcall
add
jne
loope
jnp
inc
jecxz
scas
push
pop
and
pop
push
jb
add
mov
sub
les
sub
jnp
ljmp
in
mov
sbb
test
mov
mov
imul
xchg
mov
add
in
andb
xor
cmp
popa
xor
cmp
jg
lock
out
mov
mov
push
and
cld
loope
rolb
test
decb
xchg
ret
clc
test
fnstsw
adc
adc
cmp
testb
inc
mov
int
pop
sahf
mov
and
mov
xor
sub
push
push
jnp
jnp
popa
jl
push
test
outsl
fisttpl
inc
rol
cmpsl
add
xlat
cmp
push
mov
and
xchg
fildll
mov
pop
jecxz
inc
leave
jecxz
lock
rcr
sub
xlat
inc
mov
push
nop
int3
fldenv
xor
adcb
mov
pop
lret
call
fdivs
mov
loopne
mov
roll
cmp
lea
mov
mov
and
loope
sbb
add
out
sti
gs
negl
mov
jp
in
jp
pop
test
loope
fcmovnb
es
add
mov
jne
sbb
movsl
sbb
sbb
clc
lahf
roll
push
cltd
xor
data16
adcb
stos
add
mov
inc
xor
push
add
jecxz
daa
cli
xor
sub
mov
roll
gs
push
add
popf
hlt
aas
test
jno
test
das
sbb
or
repnz
adc
ret
pop
jae
in
xchg
mov
fstps
xchg
test
pop
dec
xchg
pop
jns
and
push
dec
cwtl
mov
mov
ret
lds
movsb
popa
imul
dec
push
push
sbb
push
jne
or
insl
xchg
mov
or
and
lock
dec
idivb
mov
cmpsb
dec
aaa
insb
popaw
or
sub
das
int3
mov
in
xor
test
push
mov
xlat
jo
add
popf
sbb
sub
in
fistpll
cmp
in
jns
push
or
sbb
mov
test
ds
ja
repnz
mov
lcall
aas
outsb
xchg
inc
pop
pop
jne
aam
enter
push
and
in
pop
xchg
fmuls
cmp
adc
addl
test
mov
aam
push
enter
inc
loope
xchg
jnp
mov
mov
cmp
sub
repnz
loop
notb
ficoml
pop
sub
ret
sbb
clc
outsb
push
ljmp
mov
movsl
in
xchg
xchg
mov
mov
cmp
ja
jmp
pop
pop
and
in
dec
in
mov
fcmove
fmull
stc
fcmovu
loope
loopne
stc
add
aam
mov
enter
push
push
xor
js
cmpsb
mov
cmpsb
or
out
lock
jp
push
and
pop
imul
jecxz
xchg
cmp
movsb
loop
adc
push
cmp
mov
leave
sahf
imul
or
bound
shr
pop
pop
push
sbb
cmp
adc
inc
and
cmp
outsl
jp
rorb
rorb
adc
inc
dec
sub
dec
ret
mov
fistpl
xchg
adc
test
mov
std
jmp
out
and
fsubs
sub
dec
sbbb
cmc
pop
adc
fs
jne
cmpsb
jns
std
fcoml
das
mov
xlat
sar
in
fwait
push
sub
int
mov
jp
jno
jbe
outsl
out
int
or
cltd
push
jo
sarb
adc
dec
mov
out
xor
insb
xchg
data16
jbe
sti
or
and
adcl
xor
aaa
sub
ret
mov
rcrl
adc
cmp
lock
scas
xchg
mov
pop
xor
adc
leave
jg
inc
mov
and
cmp
in
adc
into
sub
add
repz
mov
shl
sbb
sbb
xor
into
jp
cmpsb
ret
mov
mov
aaa
cmpsb
jge
or
xchg
xchg
push
mov
insl
add
jb
mulb
out
push
mov
xchg
dec
fidivl
push
sbbl
xor
lret
insb
mov
mov
bound
sbb
pop
dec
dec
inc
mov
sbb
test
stos
pop
pop
aas
mov
shr
push
imul
add
fists
push
push
push
jecxz
pushf
out
mov
pop
arpl
sbb
pop
or
sub
dec
jecxz
lock
repnz
cld
in
nop
arpl
xor
ss
adc
add
mov
jg
cmpsb
inc
lahf
inc
dec
adc
inc
adc
inc
xchg
in
pusha
mov
insb
inc
push
dec
dec
into
test
stc
es
lea
cmc
test
xor
ds
mov
ret
ret
mov
stc
lahf
mov
es
jo
aaa
ds
adcb
xchg
jnp
in
pop
jle
out
into
inc
out
dec
inc
xorb
xchg
push
ljmp
inc
mov
and
imul
inc
loopne
aas
add
mov
pushf
int3
repnz
xor
sub
add
js
xor
sub
repnz
sub
sub
sub
into
dec
mov
xor
adc
rolb
aam
inc
dec
add
mov
neg
add
pop
nopl
movsb
in
scas
rorb
cmp
hlt
cmpsl
stc
gs
sbb
data16
pop
xchg
sbb
ljmp
clc
sbb
das
cwtl
mov
xchg
rolb
cli
loope
push
xor
xor
push
mov
mov
dec
pop
arpl
aaa
push
das
rolb
sub
jg
cmp
stos
xlat
outsb
fldl
mov
push
test
inc
aam
push
and
mov
pop
pop
push
aad
loope
loopne
hlt
add
ljmp
push
inc
mov
scas
cmp
mov
daa
or
arpl
je
sub
cmpsl
mov
clc
pop
xor
xor
es
cmp
inc
repnz
es
dec
les
or
ss
jp
inc
xchg
mov
bnd
lds
jo
push
cmp
adc
push
mov
shlb
js
add
xchg
jecxz
push
dec
xchg
insl
sbb
push
or
pop
dec
xor
adc
mull
and
mov
loop
mov
test
pusha
or
outsb
mov
jl
pop
dec
iret
adc
adc
sbb
pop
in
sti
inc
rolb
mov
incl
in
and
into
xor
jae
xchg
addr16
xchg
xor
xchg
fistpl
pop
imul
addr16
inc
mov
fstl
bound
sub
repnz
xor
lcall
lea
add
sub
mov
mov
push
out
cmpsb
push
xor
inc
push
popl
or
sti
mov
inc
cmp
jbe
xor
idivl
sbb
movsl
and
xchg
dec
mov
ret
xor
insb
lcall
push
lcall
mov
cltd
pop
sbb
lea
insb
add
sub
xor
sbb
sub
mov
push
arpl
sbb
lock
mov
mov
push
imul
sub
cmp
insl
and
sbb
jnp
or
cmp
call
push
nop
mov
inc
cmp
adc
test
int
mov
out
and
rcll
sahf
adc
out
push
and
out
lea
push
or
int
mov
inc
xchg
loop
jecxz
dec
xchg
inc
out
in
jns
scas
xchg
jnp
outsl
dec
jge
mov
adc
inc
into
fidivrl
das
xchg
mov
popl
test
dec
lock
jg
cmp
sub
lds
dec
mov
adc
mov
cmp
clc
imul
call
test
int3
or
rclb
mov
xor
sub
mov
in
out
jle
leave
inc
hlt
jo
sub
dec
in
push
stos
cmp
cmp
movsl
sbb
or
or
xchg
jns
stc
dec
rcll
pop
dec
das
or
xor
inc
and
mov
adcl
mov
loopne
sbb
lret
push
sbb
lret
inc
lahf
mov
mov
mov
lahf
test
add
adc
das
mov
xchg
or
outsb
mov
test
jl
flds
sub
movsl
jl
add
sbb
daa
push
jg
fadds
addl
dec
sbbb
add
xchg
int
std
xor
add
and
adc
sub
mov
mov
jne
or
xchg
aam
stos
pusha
xchg
call
sbb
test
sarl
pushf
mov
adc
test
push
push
inc
mov
add
xchg
lea
adc
adc
mov
adc
movsl
idivl
add
shlb
sub
push
jbe
pop
pop
aaa
out
fnstenv
inc
add
lock
in
and
add
mov
adc
out
shlb
fldl
aam
and
addb
imul
mov
inc
and
inc
shl
ds
fdivrs
jle
test
inc
dec
inc
nop
cld
mov
mov
ret
or
xchg
push
sbb
insl
mov
shl
in
cld
rcrb
test
sbb
xor
loopne
and
insb
and
jno
jns
push
jne
lcall
dec
ret
cwtl
dec
adc
jns
jnp
adc
out
sbb
and
mov
mov
fbstp
sub
pop
inc
inc
out
int
sub
jg
or
mov
pop
inc
dec
in
xchg
out
loope
add
sahf
xchg
dec
mov
ret
in
test
xor
pop
xchg
bound
andl
push
popf
insl
dec
mov
out
add
sbb
cltd
cmp
test
repz
lret
addl
arpl
clc
xlat
fildll
mov
pop
fwait
mov
shl
push
das
out
mov
mov
or
xchg
jecxz
in
jbe
xchg
shl
mov
shlb
mov
cli
pop
mov
fs
fcmovb
ret
jl
xor
push
sub
aam
fld
out
jae
inc
das
lea
and
scas
and
ja
out
push
lea
sbb
inc
cs
jecxz
dec
stc
inc
loopne
jae
add
jo
out
pushf
loopne
push
xlat
scas
or
test
xchg
fistpll
les
sbb
insb
push
mov
sbb
addr16
and
aam
mov
shlb
and
popf
cmpsl
mov
fistps
fbstp
stos
in
and
imul
xchg
adc
mov
adc
arpl
mov
frstor
and
pop
push
inc
sub
insl
fisubrs
das
hlt
jmp
sti
mov
inc
imul
fstpl
dec
or
xor
pop
in
jae
cmp
xor
rcrb
fadds
div
cmp
dec
scas
stc
cli
sbb
ss
out
les
push
jb
stos
pop
std
push
add
mov
cld
cmpsl
es
push
dec
or
or
fwait
xchg
out
push
iret
cmpsl
xor
xchg
jb
adc
add
inc
fcoms
repz
pop
lret
inc
fcmovnb
sahf
jl
push
mov
nop
push
push
data16
movsb
sbb
enter
fstl
popf
xchg
movsl
stc
call
mov
adc
ljmp
mov
shl
adc
pusha
jmp
out
jg
not
sbb
jb
cmp
sbb
xchg
dec
push
imul
jbe
mov
rorl
outsb
out
jbe
xchg
dec
cmp
or
addr16
scas
inc
sub
add
add
mov
xchg
out
push
push
push
jmp
push
add
push
push
enter
mov
xchg
ret
jnp
lcall
xor
je
cmp
call
imul
jmp
out
sub
cmp
dec
aad
push
mov
pop
jne
fsub
dec
pop
adc
add
xchg
dec
jne
or
mov
int3
subl
rcl
cmp
mov
cltd
std
fistl
adc
dec
lods
jle
arpl
mov
jecxz
out
imul
dec
mov
test
lea
cmp
popf
sub
mov
movb
adc
icebp
das
fcompl
in
outsb
pop
ds
mov
adc
loopne
cmpsl
rorl
add
mov
or
mov
xlat
push
ljmp
add
mov
imul
cmp
out
push
subb
mov
mov
inc
xchg
ret
fisttpl
into
add
mul
push
daa
ret
in
mov
and
push
jl
and
loopne
adc
loopne
jne
cmp
test
xor
or
push
and
ret
xlat
mov
mov
inc
int3
mov
push
xchg
mov
add
stos
jg
out
jns
in
popf
push
push
cmpsl
stc
add
fwait
jp
outsb
fcompp
jmp
inc
in
cltd
push
jb
pop
add
aad
into
out
out
cmp
js
push
sbb
push
jmp
push
add
dec
les
and
daa
mov
sub
flds
int3
cmpb
fimuls
xor
icebp
loop
dec
and
and
or
out
js
scas
mov
test
cmp
ds
mov
out
out
cmpsl
xor
bound
adc
mov
add
fistps
sub
sbb
pop
and
cld
sub
es
mov
pop
sub
sbb
test
lcall
out
and
sbb
jle
cmp
mov
aam
int3
cmp
add
pop
nop
in
popf
sbb
scas
push
cmpsb
pop
addr16
adc
roll
cmp
pop
shlb
push
and
push
test
push
dec
incb
sub
pop
insl
jae
js
icebp
das
popf
sub
std
ret
jmp
adc
in
sub
push
ret
xchg
insb
lret
mov
loop
pop
stos
pop
mov
shrb
jge
addl
inc
andb
test
xor
pop
leave
leave
scas
insl
fcoms
shrl
sti
sbb
lock
js
or
add
lcall
cmp
popa
lods
inc
insl
sub
xorl
negb
xchg
cltd
jecxz
test
loopne
xchg
pop
cli
jle
out
sbb
push
mov
cmp
xor
andl
and
mov
das
inc
fistl
or
push
jbe
mov
add
das
imul
loop
test
cmp
cwtl
pop
ss
sub
lret
adcl
push
mov
sub
sub
add
xor
mov
mov
jl
ret
scas
fstpt
and
pop
pop
aam
jb
outsl
in
je
fldl
repnz
gs
jmp
jno
mov
jbe
cmpsl
jl
or
movsb
adc
inc
loope
jg
adc
pop
imul
mov
xchg
daa
les
std
sar
movsb
adc
xor
jb
cltd
jmp
or
jbe
stos
cmp
dec
xchg
cmp
push
cmc
sarb
dec
out
jae
mov
dec
sahf
rcrb
in
mov
in
out
lahf
add
mov
adc
adc
xchg
dec
out
mov
ficompl
aam
addb
bound
xchg
dec
repnz
insb
insb
in
ds
xor
push
or
jnp
dec
jl
mov
xchg
enter
and
ljmp
cli
jb
lock
addr16
bnd
mov
dec
dec
mov
pop
sbb
sub
mov
shll
mov
pop
push
outsb
xchg
pop
fldcw
ljmp
cmp
push
imul
cwtl
out
call
loope
sbb
sahf
mov
xor
or
jmp
xchg
je
in
rcll
cmp
pusha
clc
in
adc
out
cmp
fcomps
daa
or
pop
mov
cmpb
dec
and
add
adc
jle
xchg
mov
popa
outsl
or
lret
jno
shl
mov
dec
shl
mov
mov
pop
das
cmc
adc
mov
aad
xor
ss
sbb
sub
mov
popf
fwait
mov
sbb
mov
mov
jo
xchg
rolb
popf
rcrl
xchg
cmp
hlt
cli
lahf
les
and
test
fcmovu
jb
mov
cmp
fs
dec
push
sub
out
pop
xchg
int
fidivl
cli
lret
lds
adc
outsl
cmpsl
cmpsl
mov
fistl
pushf
aas
dec
aas
gs
arpl
aas
sub
mov
loop
add
mov
sub
sub
and
add
js
pop
call
dec
mov
lock
sbb
jns
xchg
loop
dec
subl
push
icebp
imul
imul
nop
je
push
jl
xor
xor
add
addb
movsl
testb
push
adc
lock
xchg
sbb
imul
leave
inc
fucomp
cmp
into
push
lods
jp
mov
xor
sbb
test
jne
xchg
sub
js
mov
pop
pop
inc
into
aad
sbb
imul
sbbb
ss
in
sti
js
dec
negl
lret
outsb
shll
into
and
mov
stos
repnz
or
or
mov
inc
adc
mov
jle
notl
mov
and
pop
xchg
mov
mov
lahf
push
outsl
cwtl
es
inc
popa
ds
pop
sbb
idiv
pop
add
jae
mov
lock
push
dec
push
bound
lea
xor
add
push
sub
adc
adc
mov
pop
sub
jp
mov
adc
cmpsl
mov
ja
dec
lods
and
fnstsw
mov
out
cmp
in
mov
push
in
adc
dec
xchg
out
lret
stc
aad
push
pop
dec
add
sub
xchg
pop
insb
iret
lret
mov
pop
in
leave
jg
rorl
out
jno
les
sub
int
push
cmp
les
xor
pop
out
push
iret
pop
xchg
inc
inc
imull
popa
jge
push
lea
aaa
sub
cld
sarb
push
stos
inc
aam
inc
dec
jb
les
out
mov
lock
mov
push
push
cli
xchg
loopne
bound
dec
cmp
jle
mov
mov
mull
jl
mov
dec
ret
dec
pop
push
xchg
sbb
in
inc
enter
pop
push
inc
sub
mov
pop
fildll
xor
shl
sub
scas
out
cmp
faddl
push
mov
cmpsl
out
mov
adc
cmp
add
mov
jb
xchg
xorl
sbb
fidivl
or
arpl
fisttps
push
and
test
mov
loopne
sarl
inc
sub
insl
add
jne
push
ret
popa
xchg
mov
clc
lahf
sbb
mov
aas
ss
outsl
pop
xor
mov
hlt
nop
sti
inc
arpl
imul
in
lahf
lret
insl
idivl
xchg
inc
push
mov
outsl
pop
dec
mov
pop
fisttpll
add
xchg
dec
shl
jns
xchg
aaa
jno
fisubl
inc
adc
ljmp
sbb
add
or
and
push
mov
mov
bound
or
daa
xchg
push
jg
lods
fucomi
lock
insb
outsl
js
jns
out
xchg
repz
pop
popa
xlat
or
jns
clc
add
adc
mov
aas
mov
adc
push
aaa
xor
arpl
add
scas
les
sbb
cmp
ljmp
sbb
jle
add
fisttpll
jg
sub
push
push
add
mov
xor
xchg
mov
push
imul
lahf
shll
push
bound
cwtl
mov
pop
jg
repz
jle
mov
cs
dec
jno
insb
icebp
addr16
add
fbld
add
scas
dec
nop
mov
cmc
test
and
pop
stos
mov
inc
adc
or
and
xor
mov
shl
repz
adc
cmp
xor
aam
insl
jl
push
xchg
ficoms
aam
out
adc
testb
std
add
xchg
mov
loop
rcll
and
fsubrp
popf
sbb
fwait
and
flds
inc
test
jp
into
jae
in
ret
repnz
sbb
das
inc
dec
adc
dec
cmpsb
ljmp
xor
jns
adc
fldenv
enter
movb
xor
mov
fstps
sbb
or
xchg
hlt
push
push
je
pop
mov
sbb
xchg
push
rcr
out
ja
jne
mov
jns
sub
int
xlat
cmp
sar
daa
mov
mov
out
sbb
xchg
cmpl
pop
fwait
sub
adc
inc
mov
test
in
in
push
cmp
jl
push
in
bound
push
aaa
pushf
imul
shlb
fwait
xorl
aas
sub
out
lret
cmpsb
test
cmp
ds
out
out
sub
movsb
xchg
fimuls
fsubrs
sarl
inc
movl
sets
or
psubusw
cmpsb
dec
inc
mov
in
and
mov
inc
jecxz
js
mov
jno
lock
cs
jg
sbb
jg
mov
out
cwtl
sbb
addr16
pop
add
bound
xor
mov
xchg
rorb
sub
sbb
cli
test
stos
sbbb
xchg
hlt
popf
sbb
leave
fnsave
cmc
push
cmp
sbb
fdivs
fdiv
adc
ljmp
push
add
cmp
repnz
dec
mull
inc
inc
mov
push
cmp
cmp
mov
in
or
cwtl
outsb
shlb
mov
jmp
arpl
push
hlt
arpl
and
mov
mov
sbb
or
sarl
or
xchg
dec
test
mov
data16
jg
sbb
jne
jae
divb
pextrw
xor
sub
fs
jl
out
add
xchg
movsl
jnp
pop
enter
adc
scas
xchg
jl
xor
cld
fnstenv
xchg
sbb
icebp
int3
push
outsl
call
and
mov
out
ljmp
push
jle
mov
mov
aas
loop
sub
pop
and
or
dec
xlat
shll
pushf
in
in
mov
cmp
int
dec
mov
lods
fldenv
and
aaa
pushw
add
add
stos
cmp
pop
mov
mov
push
jne
mov
xchg
jnp
imul
xor
and
sti
xor
mov
ret
lcall
aaa
in
mov
sbb
mov
cltd
or
dec
jne
jl
int
in
dec
js
xlat
in
orl
js
shll
lahf
push
mov
lret
push
mov
sbb
cmpsb
lock
mov
std
repz
das
mov
test
mov
call
add
mov
jae
push
pop
std
inc
and
popa
int
or
ja
sub
push
lret
jns
cmpsb
push
ret
int
bound
push
or
push
push
mov
les
dec
xor
adc
jmp
xchg
enter
dec
fstl
push
fbld
mov
xor
loope
call
shlb
sbb
sub
sbb
xor
inc
gs
cli
lret
xor
add
and
push
mov
test
adc
cld
iret
dec
jno
stos
pop
add
pusha
adc
sub
int
scas
mov
lea
lret
push
nop
ficoms
ret
std
lahf
jns
pop
lods
or
mov
mov
or
mov
sarb
sub
mov
scas
mov
dec
xor
dec
cli
pushl
mov
or
adc
jae
andl
and
stos
dec
lds
clc
movl
enter
loopne
mov
iret
je
js
dec
repnz
insl
mov
mov
push
pop
popa
outsl
mov
enter
sub
out
pop
addl
xor
push
jg
pop
in
pop
pop
jbe,pt
ret
sub
add
mov
xor
mov
rcrl
popa
iret
pop
cmp
cltd
repnz
mov
imul
mov
dec
dec
mov
cmp
inc
lods
shll
out
push
shrl
and
pop
sbb
jp
stos
jb
push
fdivrl
in
xchg
stc
dec
mov
popf
cmc
data16
aad
fstl
movsb
inc
clc
or
call
mov
test
lret
mov
lcall
das
sbb
push
and
scas
jmp
xor
int
lods
icebp
stc
xor
out
popa
fisttpl
in
cmp
sub
enter
inc
push
out
loope
add
pop
jae
push
shll
andl
mov
sbb
in
dec
sub
mov
sub
sub
test
je
or
sti
inc
mov
pop
sub
pushf
sub
aad
mov
frstor
cld
icebp
xor
sub
mov
inc
push
adc
mov
sub
cmpsl
lods
aam
dec
cmp
or
or
stos
jno
and
push
rorl
arpl
sbb
push
sub
mov
mov
lds
mov
adc
fadds
fimull
jp
sbb
xchg
jnp
cmp
dec
sbb
xor
xor
dec
inc
push
mov
ret
xchg
or
fabs
jnp
pop
xchg
jo
xchg
ljmp
ljmp
jnp
lods
rcll
sbb
sub
dec
mov
fsts
enter
or
jmp
clc
inc
test
jmp
dec
mov
out
fnstcw
add
adc
out
ror
icebp
mov
in
out
push
mov
or
xor
sbb
or
add
andb
ljmp
mov
pop
mov
aaa
dec
ja
fstpl
add
mov
shrl
jns
adc
enter
fcoml
scas
je
in
mov
mov
test
cmp
int
frstor
push
xchg
mov
lret
add
pop
stos
jmp
iret
hlt
mov
xchg
mov
xchg
test
scas
jmp
lret
ficoml
jle
add
aam
mov
or
int3
sub
inc
in
filds
sub
or
int
testb
mov
push
pop
sti
lds
jne
roll
rclb
xchg
adc
aad
lock
shlb
test
ljmp
loop
or
lods
leave
jecxz
fiadds
orb
lahf
ret
stos
or
mov
lea
mov
push
repz
and
push
jecxz,pt
xor
jg
insb
iret
adc
pop
push
ljmp
inc
dec
addr16
xorl
cmpb
cmp
mov
loop
scas
push
jmp
mov
inc
lods
dec
mov
mov
cmpsb
movsb
scas
addr16
jo
shrb
pop
jns
inc
inc
push
push
lock
bound
sub
add
mov
rcll
or
mov
jl
insl
mov
pop
push
idivb
addl
scas
mov
iret
inc
jle
xchg
movsl
sub
mov
push
inc
pusha
pop
loope
movsb
dec
jg
push
enter
mov
xchg
inc
mov
xchg
cmp
xchg
cmp
xchg
cmp
repz
and
xor
jl
push
sub
jp
push
enter
add
mov
push
in
inc
xor
imul
jbe
repz
popf
data16
fiadds
jbe
xchg
or
xor
imul
sub
cmpsl
and
cmpsb
sbb
mov
outsl
dec
imull
stos
lcall
mov
clc
stc
sub
in
sahf
roll
adc
mov
or
cmpsl
push
sbb
inc
adc
lcall
and
jb
pushf
pushf
addr16
sub
mov
popa
add
pop
cmpb
mov
sbb
cli
aaa
xor
pusha
jo
aam
lods
fdivs
mov
mov
push
inc
stos
xor
add
test
enter
sub
test
ds
add
fldl
inc
jle
mov
ret
popf
sarl
mov
pop
sbb
ret
pop
pop
mov
jmp
sub
push
jo
imul
xchg
push
loopne
es
mov
pop
fidivrs
clc
adc
and
push
lahf
add
movsb
lcall
movsl
and
or
sti
add
or
fsubrl
loopne
and
add
rclb
lahf
push
mov
stos
xor
dec
or
mov
cltd
pop
out
cmp
dec
jno
dec
jo
cwtl
sub
movb
sub
pminsw
inc
sti
jo
xor
mov
mov
push
mov
xchg
es
stos
bnd
lock
adc
data16
mov
movsb
int
pusha
cld
and
insb
pop
or
pop
loope
sbb
test
jg
insl
sbb
xchg
icebp
aad
cmpsb
xlat
push
rclb
inc
mov
mov
jecxz
xor
ror
mov
or
cmpsb
mov
and
inc
mov
insl
adc
test
fcmovbe
jno
mov
cmp
sbb
adc
fadds
idivb
adc
test
fnstsw
xchg
xor
xchg
dec
repz
pop
adc
jge
stos
rorb
inc
repnz
dec
push
lods
push
in
push
gs
js
and
push
cmpsl
push
xchg
punpckhbw
jl
push
hlt
cs
mov
aam
push
mov
dec
int
sub
mov
movsb
dec
jecxz
dec
es
or
push
jns
cld
sbb
adc
rorl
les
pop
sarb
leave
mov
push
push
push
loope
xor
jo
nop
jns
xor
push
sbb
mov
jge
cmp
repz
orl
outsb
bound
add
fnstsw
frstor
push
in
jg
inc
sti
xchg
cmp
lret
sub
pop
mov
loop
clc
fmull
inc
aaa
xchg
xchg
popf
repz
or
xchg
xor
insb
mov
in
dec
jbe
push
aas
mov
xor
or
add
mov
mov
add
insl
xchg
inc
out
lret
jbe
jbe
adc
sbb
in
ja
mov
imul
sbb
scas
and
mov
aas
shrl
out
out
dec
push
mov
pop
insb
icebp
nop
mov
inc
addr16
or
lock
dec
push
xchg
jb
xchg
xchg
jle
lods
mov
cmpsl
pop
aas
bound
jb
mov
push
jle
cmpsl
outsb
and
or
cmc
push
adc
pop
scas
cmp
inc
xor
inc
and
in
je
mov
mov
xor
inc
mov
xchg
sub
fwait
pop
push
adc
inc
jge
jge
out
and
cmp
sbb
jns
mov
mov
jmp
dec
sub
ds
int3
xor
out
pusha
lock
popf
test
mov
bound
lock
fidivs
divl
cmpb
dec
add
mov
test
int3
scas
add
pop
or
mov
call
xor
inc
mov
in
mov
mov
and
or
adc
jo
mov
push
fcompl
cmp
or
jge
into
ljmp
lahf
jne
sbb
add
outsl
iret
ljmp
cmpsl
xchg
mov
adc
mov
add
push
push
rsm
in
fcmovnu
push
xchg
rcrl
sbb
call
mov
fidivrl
jg
ret
lods
leave
das
jle
in
xchg
xorb
aaa
mov
mov
inc
out
mov
inc
lcall
lock
push
lock
push
test
scas
push
xchg
hlt
or
cmp
arpl
or
lock
js
xorl
mov
ja
ja
fwait
rclb
aam
mov
push
movsb
xorl
pushf
and
pop
ret
push
pop
and
call
dec
gs
into
lods
rcrl
imul
cmpsb
testl
dec
cmc
xor
mov
pushf
dec
and
pop
pop
dec
xchg
lea
cmp
fiaddl
popf
arpl
pop
dec
and
add
test
cmpsb
stos
mov
in
cmp
popf
out
mov
sbb
dec
lea
jl
bound
or
scas
push
fwait
jmp
jg
pushf
xchg
sbb
pop
mov
fisttps
xor
push
cmp
mov
pop
ja
insl
xchg
jne
cmpsb
test
in
add
push
or
daa
fiadds
mov
and
lret
fimull
dec
mov
ss
add
mov
into
push
lret
jle
cmp
inc
inc
data16
sbb
addl
cmc
cmpsl
xchg
iret
pop
or
out
cmpsl
mov
jbe
pop
dec
push
leave
sub
test
cmp
fwait
add
push
jae
push
das
sub
jne
rcrl
mov
add
mov
adc
test
mov
cmp
jb
xor
pop
jne
test
sub
mov
xor
jp
jg
movsl
sub
outsb
dec
or
rol
loope
test
push
push
mov
pop
clc
mov
ss
mov
out
icebp
cmp
hlt
mov
cmp
adc
scas
mov
int3
imul
sahf
dec
scas
cmc
jns
xor
movsb
ds
imul
mov
pop
or
lods
cmp
lcall
pop
xchg
cli
xchg
or
mov
add
jp
adc
pop
lods
mov
xor
aaa
fdivs
fcmovnu
inc
cmp
add
mov
jmp
mov
cli
add
mov
xlat
movsb
and
fidivl
sar
cmpsb
xlat
sub
adc
xchg
loop
cmp
das
push
or
and
cmp
pusha
cmp
mov
ss
scas
in
sub
or
scas
repnz
aas
sbbl
out
scas
std
mov
mov
sbb
mov
lock
sub
push
xchg
mov
fs
mov
and
addl
push
adc
or
jbe
push
stos
adcl
test
movsl
ret
sub
mov
add
out
pushf
addr16
jnp
int3
stos
mov
inc
sbbl
mov
std
lods
cli
inc
pop
jbe
xchg
sbb
out
mov
hlt
pusha
push
adc
jae
adc
jp
adc
add
pusha
inc
int3
cmpsb
rorl
fisubs
mov
pop
pop
jo
mov
mov
fs
int3
test
mov
jmp
xchg
imul
and
cld
andl
stos
sbb
ror
dec
inc
fisubs
jno
add
jge
sti
cmp
sahf
pop
push
bound
mov
xchg
lock
push
sub
push
pushf
ret
pop
mov
mov
test
and
in
stc
jbe
xlat
sub
notb
popf
loop
sbb
addr16
push
mulb
lret
loopne
jne
and
add
daa
lcall
xchg
or
cmp
sbbb
mov
les
xchg
int3
imul
in
pop
sub
or
insb
or
xor
pop
lock
pop
dec
std
mov
add
repz
scas
cmpsb
sbb
arpl
or
roll
movsb
pop
dec
mov
mov
cmc
jae
das
gs
cmp
loope
lea
or
push
push
out
and
imul
inc
into
ljmp
hlt
cmp
dec
jle
push
daa
cmp
sub
adc
push
cmp
inc
shlb
jns
and
push
and
inc
mov
xchg
test
push
add
and
imul
cmp
lret
mov
cmp
push
dec
jnp
xor
psubusb
sarb
cs
int3
sub
cwtl
iret
jns
sub
ljmpw
jo
repnz
out
data16
dec
xchg
push
sbb
pop
shrb
sbb
push
cmpsw
cld
not
pushl
ficompl
cld
jb
push
sti
push
dec
popf
aaa
rcr
xchg
lret
inc
les
fstps
jo
xor
jne
jge
push
pop
jg
loope
mov
outsl
cld
lret
adc
cmp
mov
or
mov
xchg
mov
dec
adc
in
push
neg
fsts
xchg
fdivl
out
xor
cmpsb
loope
or
gs
ljmp
xor
add
das
pop
into
cmp
jae
sarb
dec
mov
cmp
stc
bound
dec
scas
jo
rolb
jns
fwait
shll
cmp
cli
mov
pop
int
test
or
popa
les
lahf
adc
sbb
jp
cmp
or
movb
popf
cmp
xchg
loope
add
jecxz
push
pop
addb
mov
stc
lret
popa
test
push
add
dec
shrl
test
lret
fbstp
pop
mov
jo
adc
outsb
leave
or
mov
cmpsl
jmp
cld
inc
cli
jb
inc
cmp
mov
cwtl
mov
fwait
mov
jmp
mov
cmp
jnp
pop
ret
sbb
mov
push
bound
dec
arpl
sbb
mov
jno
push
xchg
leave
nop
fstl
cmp
and
mov
adc
jp
jo
int3
test
adc
ret
rclb
or
hlt
xchg
and
imul
mov
mov
jl
cld
push
scas
xchg
lret
pcmpeqw
mov
pop
mov
xor
test
out
imul
inc
mov
outsb
pop
test
sbb
pop
outsl
stos
pushf
sbbb
gs
loope
ret
adc
mov
cli
jne
cltd
push
outsb
out
test
ja
hlt
sbb
jl
pop
stc
call
data16
jmp
incl
mov
repnz
or
fsubp
mov
sahf
pop
and
sbb
into
ja
paddq
xchg
xchg
popa
xchg
aad
or
and
out
mov
cwtl
xor
or
loop
hlt
mov
mov
jp
cmpl
and
xor
and
std
arpl
gs
xor
push
pop
int3
sbb
or
bound
dec
popa
out
mov
rorl
push
bound
or
push
lock
shll
and
loopne
mov
dec
loopne
fidivrl
or
fs
adc
fisubrl
mov
jmp
push
fcomp
or
jns
xor
outsl
dec
and
push
lods
xchg
pop
mov
pusha
push
test
xor
dec
sbb
aad
adc
stos
pop
jge
mov
jmp
push
jmp
or
jno
jo
sarl
in
bound
movb
xor
in
jno
dec
mov
ret
mov
inc
pop
cmpsb
add
test
out
test
out
hlt
out
dec
out
push
sub
jae
sbb
mov
cwtl
add
push
andb
into
rcl
jecxz
movsl
repnz
jecxz
call
in
add
je
jb
mov
cmc
pop
aam
adc
stc
mov
push
test
int
pop
iret
jno
cmp
idivb
sub
cs
fsubs
xor
adc
and
mov
xchg
sub
cmpsb
pop
fdiv
lret
stos
das
fildll
xchg
xor
pop
xor
xchg
push
and
jne
fisttpl
jbe
jecxz
jecxz
dec
outsb
cmc
xchg
push
sahf
push
xchg
cmpsb
movsb
pushf
dec
xchg
dec
jecxz
dec
in
clc
mov
stos
push
mov
lcall
sahf
xor
pop
or
jnp
mov
je
outsl
inc
fs
jns
nop
xor
xchg
mov
pusha
push
nop
xchg
add
cmp
shlb
out
test
lock
out
mov
fsubl
xchg
js
jge
xor
or
imul
sub
adc
in
cmp
leave
fucomi
push
pop
lods
in
xchg
adc
or
ret
in
cs
notb
dec
inc
lahf
ja
cmp
pushf
mov
je
popf
mov
cmp
push
cmpb
pop
rcrb
and
jae
pop
mov
loop
push
pop
fs
fistps
jno
rorb
xor
xchg
call
cli
jnp
jb
jnp
mov
and
sub
xor
jne
jnp
insl
outsb
xor
fstpl
shrb
daa
sub
mov
mov
pushf
fs
cmp
xchg
xchg
jno
push
jnp
push
mov
daa
je
add
add
iret
and
dec
xchg
nop
data16
icebp
lahf
push
mov
xor
pop
mov
and
iret
mov
push
jg
cmp
test
cmp
cli
mov
sbb
out
shrl
push
mov
mov
imul
inc
fsts
les
pop
sbb
sbb
cs
adc
test
fucomip
mov
fists
lcall
push
mov
fdivrl
mov
xorb
call
mov
iret
arpl
and
xor
pop
push
scas
insl
sub
out
ret
aad
outsb
jnp
cltd
fbstp
mov
divl
pusha
shll
int
fildl
loop
nop
push
mov
xlat
loopne
lret
adc
shl
adc
jns
mov
scas
out
test
outsb
out
add
in
in
jns
dec
push
or
leave
mov
xor
push
mov
jecxz
mov
push
and
add
dec
inc
loope
sub
xor
sar
lock
jae
lret
addr16
pop
or
lea
pop
sbb
inc
pop
or
call
aam
or
sbb
xlat
dec
xor
cmp
pop
fiadds
dec
mov
aas
inc
xchg
cmpsb
mov
outsb
js
mov
pop
jmp
cmp
icebp
push
add
aaa
sbbl
pop
movsl
adc
insl
mov
inc
leave
cmp
fcomp
add
popa
rorb
jmp
int3
adc
divb
insb
js
nop
jp
push
mov
push
in
mov
mov
jo
fidivrs
movsb
movsb
stos
addr16
js
fcomip
mov
ret
push
sbb
jno
dec
mov
jmp
cmp
mov
pusha
test
repz
hlt
cmp
mov
jae
xor
or
je
mov
jb
pop
dec
or
inc
loope
scas
push
popa
dec
inc
insl
inc
cmpsb
jno
mov
imul
xchg
pop
pop
mov
add
sbb
inc
lahf
push
pop
adc
mov
and
fld
icebp
push
mov
les
test
cmc
pusha
das
push
mov
sbb
outsl
jo
xchg
mov
mov
js
xchg
sbb
sbb
push
inc
loopne
xlat
lret
xor
lar
sbb
cld
adc
adc
push
shrb
sbb
dec
push
lods
mov
mov
packssdw
ja
jno
inc
roll
xchg
mov
lret
fbstp
pushf
out
add
in
incb
jecxz
pop
mov
add
popa
icebp
cmpb
dec
shl
ror
ret
cmc
or
mov
aas
fsubrl
loop
shr
clc
fnsave
sbb
out
fcmove
lods
mul
bound
pop
xor
shl
dec
dec
inc
out
push
bound
or
pop
xorb
cltd
js
gs
bound
push
icebp
fwait
into
dec
xchg
ret
mov
adcb
xchg
sbb
pop
mov
popa
lret
popf
cld
lea
mov
mov
inc
dec
jae
cmp
ret
mov
rorl
ficoml
xchg
xchg
dec
push
popa
or
int3
xor
insb
movsb
les
test
cmp
repz
les
adc
stc
std
push
cmp
repnz
popf
bound
fidivrl
xchg
subl
xor
mov
pop
mov
into
loop
mov
mov
xchg
sub
sub
lea
inc
sub
rolb
cmp
inc
aaa
lds
push
xchg
test
xchg
nop
cmp
sti
dec
xchg
adc
aad
push
push
and
push
shlb
add
xchg
test
inc
dec
and
adc
jge
cmp
test
dec
cmp
xchg
scas
imul
jmp
sub
inc
std
lods
movsl
adc
les
ror
leave
inc
sbb
arpl
add
ret
xor
movsw
push
add
stc
adc
js
jne
cmp
sbb
mov
orb
add
inc
mov
adcb
fs
push
loope
jecxz
mov
mov
out
pop
cmp
addr16
mov
mov
inc
icebp
inc
rclb
or
jns
and
dec
testl
int
xchg
lahf
sub
mov
sbb
add
stos
sbb
je
and
push
test
adc
sbb
fistps
pop
pop
dec
jg
xchg
popf
jle
xchg
push
pop
jl
insb
mov
add
sub
dec
aad
cld
jbe
xorb
aaa
mov
xchg
imul
test
cmpsb
mov
and
or
in
push
and
fs
inc
xor
xchg
or
cli
arpl
push
das
push
xor
jbe
push
fstl
int3
mov
jmp
out
loop
cli
mov
fcmovne
inc
mov
and
pop
jmp
aaa
lret
ja
mov
insb
mov
dec
outsl
jae
push
inc
cmc
leave
add
popa
and
mov
pop
cmc
adc
xchg
sbb
xchg
jmp
inc
stos
sar
or
xor
int
loop
gs
test
xchg
aaa
xchg
orb
lock
and
and
adc
mov
and
negb
jo
cltd
call
subb
and
out
jbe
cmp
or
sbb
inc
cwtl
ja
rorl
mov
xchg
mov
push
out
mov
mov
test
inc
pop
fldenv
outsl
out
frstor
jl
mov
xchg
jo
mov
sub
aad
add
dec
stos
and
cmp
enter
test
fs
push
mov
ljmp
adc
int3
and
pop
in
ss
jecxz
aaa
das
loope
jl
rcrl
int
popa
sahf
adc
in
pop
cmpsl
xor
cmp
repnz
imul
stc
dec
adcb
outsl
scas
testb
mov
roll
cmc
test
pusha
lahf
aaa
sub
mov
rol
inc
or
idivl
shlb
aaa
or
mov
fsub
adc
and
mov
mov
pop
daa
push
inc
sbb
jo,pn
arpl
enter
xchg
xchg
dec
jns
xor
fsubrs
fisubl
inc
inc
pop
add
test
sahf
inc
pop
int
jae
cmp
inc
jnp
jg
scas
aam
pop
jmp
sbbl
pushf
andl
jl
shll
inc
jecxz
lret
mov
mov
test
sti
inc
push
out
enter
stos
mov
pop
outsl
inc
mov
add
dec
sbb
xchg
pop
movsl
rclb
addr16
icebp
in
pop
inc
and
sbb
loop
inc
mov
jne
ljmp
pushl
adc
nop
test
pop
fimuls
xchg
inc
sbbl
push
rolb
shrl
push
int
sbb
mov
jns
rcrl
sti
xor
subl
mov
popa
mov
stc
hlt
mov
xchg
mov
jl
jae
cmp
in
cltd
les
lahf
or
mov
jg
test
cmp
adc
fs
in
xchg
iret
mov
jo
mov
xchg
fcomip
push
rolb
pushf
test
sbb
aaa
sbb
pop
loope
js
push
addb
add
test
jnp
mov
sbb
xor
xchg
mov
pop
cmp
cmc
outsl
in
sbb
sbb
divl
jmp
mov
jl
loop
mov
std
push
pop
push
ret
and
xchg
lods
jl
hlt
cwtl
test
pop
lea
imul
arpl
out
xor
and
popa
ss
out
mov
shlb
mov
negb
jns
ds
xchg
xor
sbb
jle
xor
jb
sbb
in
mov
stc
repnz
sub
dec
test
call
adc
int3
dec
in
inc
jno
pop
xor
jnp
in
mov
aaa
mov
push
jl
adc
sub
popf
mov
mov
scas
adc
testl
testl
lea
fdivrl
push
push
cmp
das
icebp
daa
or
ret
push
cs
and
sbb
or
add
inc
xor
push
and
stos
fsubrs
and
cltd
imul
cltd
mov
aas
daa
je
fstps
jg
imul
ficoml
sbb
push
mov
sbb
ds
cmc
mov
mov
rcrb
adc
fists
enter
cli
jp
dec
push
pop
cli
cmp
mov
rcrl
ss
scas
fwait
mov
mov
lea
jmp
push
and
jbe
mov
cmp
adc
push
jp
mov
mov
lahf
ds
mov
pop
push
sub
out
mov
rcr
pushf
into
lods
add
add
adc
xchg
xchg
pop
outsl
add
out
pop
scas
mov
ja
repz
mov
scas
aas
cwtl
int3
aam
ljmp
inc
pop
add
cmp
in
mov
aaa
cwtl
mov
mov
pop
lods
xchg
jle
stos
or
dec
inc
or
lds
add
sbb
daa
xor
mov
adc
aas
inc
jle
aam
sbb
incl
cmpsb
int3
pop
adc
and
or
loopne
mov
lcall
adc
cmp
mov
mov
call
data16
fcomps
inc
in
cmp
push
lods
adc
push
scas
sti
push
hlt
sahf
dec
push
daa
and
add
or
xor
fisttps
fcoms
dec
jne
es
mov
and
orl
stos
imul
add
dec
and
or
push
outsb
out
enter
adc
aas
push
cmpsl
jns
adc
pusha
cmpb
popf
int3
sub
mov
daa
inc
hlt
test
sarb
nop
pop
lods
sub
das
sub
shlb
loopne
mov
fsubrl
push
mulb
push
jp
mul
les
fcmovne
and
mov
into
negb
imul
repz
enter
cmp
cs
mov
sub
lods
call
clc
pop
cmpsb
xor
mov
loop
jnp
jg
iret
mov
ds
cmp
add
in
jl
add
or
movsl
pushf
fstpl
outsl
mov
mov
xchg
adc
inc
mov
imul
cld
xor
and
mov
dec
pop
es
insl
js
add
cmp
push
mov
ss
mov
mov
pop
pusha
fs
jp
sub
in
int
iret
pop
roll
sub
ret
sarb
adc
lods
ficoml
bound
dec
lods
int3
test
loopne
push
addr16
add
mov
test
pop
out
dec
jg
popa
cmp
clc
push
and
scas
lret
push
lret
and
int
jno
loopne
rclb
mov
popf
push
pop
movsb
or
out
sahf
fmuls
ds
sbbb
cmp
in
pop
sbb
ret
pop
std
xor
sbb
out
jp
inc
mov
push
pushf
or
adc
xor
mov
fcomip
lock
shl
popa
insb
xor
int
jecxz
or
sbb
mov
fwait
jne
inc
sub
sbb
xor
xchg
sub
cmp
repz
fsubs
adc
lcall
xor
fs
xor
cwtl
mov
lahf
mov
inc
mov
in
push
adc
sbb
insl
jge
cmp
cmp
mov
xor
out
stos
xchg
dec
dec
mov
inc
insb
out
xchg
jno
xchg
mov
lods
mov
ljmp
lret
sub
movsb
int3
or
fmuls
imul
test
cmpsb
sti
pop
cmpsl
push
sub
or
add
xor
ss
sbb
loope
inc
imul
cmpsl
pop
cmp
sbb
pusha
fimull
idivl
jmp
cmp
or
pusha
aad
mov
repz
jns
sahf
jnp
pop
mov
dec
cwtl
repz
negb
lea
push
dec
mov
gs
out
loope
lcall
xchg
push
push
jle
js
or
sbb
jae
mov
jo
test
cmp
movsl
mov
or
mov
ja
mov
mov
jge
sub
int
and
repnz
mov
push
fsubrs
iret
push
mov
aaa
pop
jecxz
sub
movsb
in
outsb
add
cltd
mov
scas
leave
jp
lret
stos
cmp
daa
or
in
testl
loope
ljmp
pop
ret
sub
loop
enter
sbbl
test
xchg
pop
lahf
imull
insb
cmp
and
in
or
mov
loop
ljmp
loopne
orl
addr16
movsb
xchg
add
popf
scas
sub
mov
dec
xlat
mov
jae
xchg
fsubrl
mov
xchg
hlt
mov
cwtl
lea
and
xchg
cmp
lock
subl
jmp
xor
and
scas
pop
aas
daa
sbb
or
pop
insb
xor
rorb
xor
scas
push
jmp
test
js
ret
mov
cmpsl
adc
xor
aas
pop
mov
mov
jbe
and
jg
in
cmp
jl
arpl
je
dec
adc
insl
and
mov
xchg
dec
out
pop
jne
mov
and
dec
gs
addr16
inc
and
mov
mov
pop
jmp
sub
lret
mov
mov
fsubs
pop
icebp
ds
dec
int3
test
outsl
push
faddl
push
inc
hlt
fs
jge
push
xchg
movsl
xchg
mov
gs
mov
movsb
dec
sbb
xchg
mov
out
loopne
add
insl
mov
mov
jno
repz
push
aam
xlat
in
fsts
add
test
adc
xchg
mov
push
loope
jge
ds
sbb
subb
mov
and
mov
push
inc
pop
pop
dec
and
push
icebp
push
lea
ds
adc
fadds
inc
jg
push
jl
adc
js
loopne
fnstenv
push
ret
das
or
and
or
add
lock
add
cltd
dec
mov
fmull
jmp
jno
ss
arpl
mov
in
mov
add
loop
repnz
pop
mov
lea
xor
pop
mov
inc
push
adcb
pop
push
adc
cmp
jb
test
mov
pop
or
mov
add
insl
add
lahf
push
lock
and
dec
cmpsb
or
shrb
xlat
dec
adc
into
mov
mov
imull
cmp
sub
lret
xchg
or
daa
sub
cmp
test
sbb
xchg
mov
cmpb
push
mov
sub
cli
mov
movsb
dec
xrelease
scas
inc
xor
sub
ds
adcb
pop
dec
hlt
lahf
push
sub
xchg
cld
inc
xor
jp
dec
inc
push
sbb
fstps
xor
push
cmp
hlt
sub
inc
dec
xchg
mov
mov
cmp
dec
mov
mov
mov
fistpll
mov
aad
push
inc
test
sub
aam
inc
mov
mov
push
cwtl
jmp
test
sbb
cwtl
data16
stos
outsb
jl
int
lods
sbb
xchg
or
subl
xchg
inc
js
pop
les
xchg
xor
mov
jecxz
pushf
scas
sti
mov
je
xor
xchg
rol
push
inc
jmp
sbb
stos
lock
roll
hlt
pop
cmp
mov
js
xchg
stc
in
push
mov
mov
dec
jnp
lahf
push
adc
jnp
shlb
push
mov
add
mov
mov
daa
mov
sarb
gs
mov
mov
xchg
add
jmp
and
fiaddl
sahf
cmpsb
andl
push
mov
dec
je
orb
cltd
mov
cmp
inc
daa
jge
mov
sbb
cmpsb
mov
push
inc
adc
mov
cmpsb
xor
jg
and
lcall
adc
or
mov
test
gs
scas
test
mov
stos
rcrb
clc
cmp
loop
cltd
in
rcrl
mov
aas
mov
fildl
sbbl
jae
push
pop
mov
or
add
pop
mov
mov
inc
cmp
dec
insl
lods
repz
pop
jmp
mov
push
xor
and
push
jl
push
adc
pop
mov
adc
enter
les
inc
int3
movsl
pusha
xor
sbb
adc
mov
das
repnz
sbb
push
push
jo
stc
mov
jp
cmp
mov
add
mov
push
or
std
orb
fldpi
frstor
sti
lods
xor
lods
mov
cmpsl
add
fbld
pusha
cmp
dec
arpl
mov
jae
cmp
push
jmp
stos
sbb
rcll
dec
sub
mov
add
outsl
cs
neg
decb
sub
ljmp
movsl
or
movsl
je
xor
dec
mov
mov
cmc
inc
mov
cmc
icebp
add
mov
stos
mov
setbe
movsl
and
sbb
inc
cmp
not
sti
addr16
mov
std
repz
mov
sub
inc
push
mov
std
add
mov
gs
stos
push
lds
push
sub
or
hlt
out
or
leave
mov
pop
xchg
dec
out
add
dec
js
sbb
test
les
mov
jbe
les
mov
aaa
mov
rcrl
roll
jle
sbb
ret
pop
mov
aaa
test
sub
push
notb
lcall
popa
aad
and
leave
sbb
lods
in
push
xlat
push
cmp
add
pushf
cmpsl
add
mov
movsl
pop
lods
ljmp
push
subl
inc
shrb
lds
xlat
mov
ret
and
sub
mov
push
mov
js
fistpll
mov
and
xchg
sub
xchg
fbld
inc
inc
enter
or
inc
xorb
jae
js
sbb
cmp
fildll
xor
or
sbb
roll
mov
sti
mov
stos
and
push
push
sarl
test
sub
cmpsl
pop
mov
pop
push
or
in
or
add
out
push
jo
xchg
pop
cmp
pop
push
xchg
jp
rcrb
sahf
adc
inc
adc
xchg
cmpsb
fisubs
adc
adcb
aad
push
aaa
xchg
sbb
pop
or
xlat
push
inc
xchg
fiaddl
cmpsl
sub
jns
push
sbb
repnz
dec
enter
cltd
popa
add
out
imul
or
fcompl
clc
into
int3
lcall
rcll
sahf
and
add
cmpb
lcall
pop
jne
push
fisubrs
cmp
outsl
sub
je
mov
push
mov
lcall
int3
bound
mov
cmp
ljmp
int3
int3
and
stos
imul
sbb
push
fisubrs
test
mov
in
outsb
addb
sbb
xchg
in
lods
mov
in
push
ljmp
add
loope
xchg
fstpl
sub
pop
ret
add
jae
adc
sbb
mov
fnstenv
sub
sbb
les
push
in
inc
xor
sarb
jg
sbb
nop
fwait
loopne
stos
idivl
mov
aas
shll
fcmovu
mov
scas
lods
push
xchg
pop
cltd
push
lcall
jb
gs
mov
pop
mov
iret
or
int3
mov
add
jb
xchg
or
mov
scas
loopne
insb
dec
push
dec
xlat
ljmp
les
dec
dec
inc
and
imul
mull
jp
cmp
pop
mov
loopne
xlat
sub
imull
or
filds
cmp
cs
adc
mov
movsl
add
xor
mov
cmc
push
mov
ds
dec
push
data16
scas
ds
cmp
icebp
pop
out
in
test
ficompl
loop
mov
lods
pop
ljmp
and
push
xchg
push
movsl
jo
rcl
mov
mov
cltd
inc
mov
pusha
xchg
call
inc
jb
sub
aas
xor
dec
pop
cmp
pop
jnp
pushf
push
lret
cmp
sub
jmp
mov
cmp
push
pavgb
inc
call
adcl
std
mov
lock
push
mov
fwait
in
inc
cmp
arpl
cmp
pop
sub
sti
fidivrs
jl
dec
movsl
test
pusha
addr16
enter
add
mov
dec
sub
pop
or
pop
adc
pop
lock
add
mov
jle
fnstcw
fdivp
lcall
dec
xor
scas
mov
xor
andl
aad
pop
jge
imul
cmp
int3
mov
cs
mov
js
lcall
sbb
loopne
repnz
push
scas
sub
adc
pop
ret
leave
xchg
pop
mov
vmulps
pop
adc
test
add
negl
add
mov
cs
mov
sahf
mov
leave
fwait
add
in
nop
mov
jp
ss
andl
in
inc
cmp
dec
notb
adc
js
in
xchg
add
add
ret
in
imulb
xchg
jecxz
xchg
sub
xchg
xor
inc
lods
mull
movsb
or
xchg
roll
enter
cld
push
adc
xchg
dec
das
mov
mov
test
ficoms
xchg
mov
mov
push
les
mov
cli
fldt
lods
mov
jge
and
popf
repnz
and
test
lret
adc
jo
mov
test
outsb
iret
sbb
icebp
aad
aas
sbb
dec
cwtl
and
pop
or
mov
into
int
push
lods
dec
lds
cmpsl
leave
pusha
or
test
es
dec
loopne
aas
bound
ss
ss
dec
or
roll
sti
xor
mov
ja
or
data16
addr16
dec
test
dec
dec
fistpl
stc
jne
outsb
sbb
pusha
xchg
or
insl
mov
mov
rcl
jns
aas
xor
clc
imul
and
test
inc
lret
testl
leave
sub
imul
cmp
xchg
jo
pop
iret
shll
adc
mov
pop
jns
movsl
popf
ret
sbb
jno
push
xchg
pop
aam
call
mov
mov
or
xchg
and
js
loope
sbb
cmpsb
aaa
adc
flds
push
pusha
xor
jns
test
mov
lods
add
js
cmc
rclb
cmpsl
lahf
pop
jbe
and
rcrb
xchg
jle
lock
jnp
aam
pop
daa
cli
dec
lods
mov
test
js
adc
lret
inc
jb
mov
mov
adc
lret
jge
mov
push
sbb
flds
fdivr
xchg
xchg
scas
cmp
daa
cmpsl
popa
jb
repz
js
dec
jecxz
int
xchg
pop
mov
mov
adc
sub
sub
or
bound
fstpl
cmp
cmpsl
stc
pop
xchg
pop
out
bnd
lock
lcall
repnz
jae
and
inc
mov
in
mov
sub
test
mov
ret
mov
popf
push
mov
adc
xchg
movsb
adc
les
xchg
jge
cli
cmpsl
pop
bound
jo
and
aas
mov
inc
push
mov
addr16
push
cmp
cmpsl
cmp
jae
lret
adc
xor
mov
clc
jg
and
jno
in
push
add
movsl
imul
test
pop
sub
add
cmp
stc
js
inc
loop
scas
push
pop
jge
cmpl
xor
add
sbb
into
das
mov
iret
xor
mov
shll
lahf
rolb
xchg
dec
inc
and
std
pop
daa
repz
in
jg
xchg
xor
gs
mov
pushf
fisubrs
loop
ja
lret
neg
mov
dec
mov
es
add
test
xchg
imul
rorb
add
jbe
lcall
out
mov
push
inc
dec
and
jno
stos
cmp
sub
sbb
inc
addr16
jbe
int3
push
and
ljmp
sub
jmp
push
jae
pop
cmp
xchg
mov
out
pop
shl
popa
stos
pop
in
sub
movl
mov
les
cmp
loopne
fsub
mov
cwtl
pop
cmp
popf
fisttps
out
popa
test
pop
and
mov
jecxz
lods
nop
or
in
imul
test
xchg
hlt
dec
mov
rcrl
out
shrl
push
cmp
addb
daa
aas
xlat
notl
iret
outsb
fidivrs
xchg
push
push
jnp
lcall
mov
add
mov
jnp
jno
mov
push
popf
and
cmp
loope
xchg
lahf
adc
je
fsub
adc
fdivrl
cmp
inc
xchg
fs
inc
movsb
int3
adc
mov
push
cld
pop
rcr
gs
xchg
sub
xchg
cli
stos
xchg
and
cwtl
test
sub
jnp
cmpsb
int3
cmp
mov
into
inc
inc
add
loope
push
adc
rcl
inc
leave
jbe
mov
and
dec
or
pop
lds
xor
add
loope
aam
cmc
js
pop
xor
subb
mov
pop
rcrb
hlt
dec
daa
pop
mov
addb
xor
inc
push
test
push
cmp
inc
aam
adc
jmp
jb
ljmp
imul
lahf
les
popf
es
xor
aas
fiadds
fcomp
leave
out
or
push
or
arpl
test
push
push
repnz
sbb
push
ljmp
xor
mov
in
and
push
pushf
jns
ret
call
fcom
and
test
clc
or
test
shlb
das
push
lcallw
test
sbbl
push
cmp
lods
idivl
scas
mov
ret
ss
cmpl
iret
push
out
cmc
jecxz
xchg
or
or
out
jmp
test
shl
sub
mov
pslld
lods
sub
pop
std
inc
xor
xchg
int
jno
scas
test
daa
divb
int
loopne
mov
clc
push
mov
out
iret
loope
and
aam
sub
xor
and
xor
jp
push
and
sahf
mov
mov
xchg
jge
fstl
out
hlt
lcall
sub
push
add
xor
fcmove
jle
pop
leave
cmc
mov
xchg
mov
mov
jo
xchg
cmp
ljmp
inc
cmpsb
push
pop
push
push
mov
add
xchg
sbb
pop
pop
or
repnz
fldenv
adc
lock
mov
push
frstor
xchg
mov
push
nop
jns
cwtl
and
aas
lock
cmp
jmp
pop
cmpsl
jne
adc
ss
jns
add
inc
lret
hlt
push
lahf
and
lret
imul
adc
lcall
xor
xchg
mov
loope
test
cmpb
lahf
push
inc
sub
ret
insl
outsl
and
pop
jecxz
sahf
popl
xchg
dec
mov
imul
hlt
sub
pop
nop
sbb
leave
mov
es
xchg
cmp
popf
cmova
lret
ret
dec
xchg
je
nop
pop
push
repnz
imul
lahf
cmp
xchg
push
aam
lds
jge
cmp
clc
push
test
ret
mov
pop
jno
and
sub
ret
mov
pop
pop
mov
push
aam
mov
mov
test
mul
xor
and
mov
leave
in
inc
lock
in
mov
les
test
sub
lock
push
in
cmp
or
and
push
inc
test
xchg
in
xchg
addb
pop
mov
testl
xor
inc
roll
dec
mov
andl
push
comiss
fldcw
out
mov
lods
mov
enter
push
adc
cmp
push
jo
cmp
sti
cmc
pop
stc
mov
fnstsw
sti
xlat
or
adc
cmc
inc
orb
repz
pop
pop
sub
repz
rorb
cmp
aam
mov
arpl
xor
or
ret
mov
outsl
popf
sub
call
sbb
xor
lock
loop
int3
out
inc
sbb
cmp
dec
dec
pop
sti
popa
shll
push
fwait
decb
out
std
fcompl
call
into
enter
lea
imul
sub
sahf
pop
cs
imul
dec
inc
lock
nop
mov
int
popa
data16
sbb
mov
jg
lods
dec
loopne
mov
jo
adc
pop
jb
movb
lret
push
out
sbb
xchg
enter
cmc
insl
jmp
ss
shr
test
cwtl
xchg
dec
push
xor
adc
sub
push
add
idiv
stc
movsb
or
pop
inc
adc
or
pop
dec
push
out
mov
pop
sub
ss
pop
insb
addr16
lcall
mov
mov
cmp
push
xchg
js
mov
ja
movb
hlt
aas
jle
or
or
andb
dec
push
dec
leave
popf
js
imul
pop
adc
sub
inc
movsb
cli
out
insb
jge
sahf
sub
inc
adc
pop
xchg
mov
or
icebp
mov
mov
xor
push
sub
shlb
jmp
jns
jg
inc
stc
aam
xchg
dec
dec
je
mov
das
jl
in
cmp
pop
aas
rclb
sub
push
pop
dec
mov
xchg
rolb
loop
data16
and
insl
sub
aaa
hlt
cmp
pop
jmp
jle
push
aad
xchg
mov
fldt
shll
xor
mov
push
movsb
add
addb
push
and
aam
cmp
dec
mov
lret
mov
pop
jg
sbb
xchg
pushl
in
mov
ss
int
pop
int3
dec
jmp
xor
and
sarl
test
mov
jecxz
popa
xor
ds
sub
adc
and
fsubp
or
mov
push
adc
pusha
xchg
inc
clc
aam
scas
jns
mov
clc
jno
lea
sub
and
leave
lods
data16
into
in
cwtl
pop
pop
dec
push
icebp
push
jae
subl
mov
mov
mov
xchg
cld
sbb
mov
dec
rorl
stos
xorl
jns
sbb
add
ja
push
fs
popa
add
adc
call
inc
ret
call
sub
inc
add
fstps
iret
cmp
decl
aam
mov
and
or
xor
rclb
sarl
dec
mov
lds
psrad
xor
xchg
dec
sbb
ror
and
ret
push
cld
adc
pop
dec
iret
dec
adc
jns
add
in
clc
inc
ds
dec
ja
jns
imul
mov
iret
test
mov
push
adc
dec
lcall
push
xchg
sbb
adcl
mov
xor
pop
pop
stos
popf
jg
pop
sub
and
enter
jnp
lock
pop
adc
jmp
rorb
jle
cmp
jg
dec
fs
mov
test
jnp
lcall
adc
jno
ret
lods
adc
mov
orl
fisttpll
das
adc
xchg
mov
sub
fmuls
lret
stc
pop
pop
pop
or
ja
add
mov
jbe
hlt
push
xor
sub
and
out
pop
push
mov
ss
out
aas
fnstenv
insl
scas
push
fcmovnbe
lea
inc
scas
jne
aam
lock
fstps
xchg
xor
sbb
lods
pop
adc
xchg
pop
stc
dec
or
mov
push
fidivrl
pop
sbb
xchg
outsl
push
cltd
sub
sbb
sbb
pop
daa
fsubp
out
pop
pop
add
inc
sbb
out
jge
movsb
xorb
mov
daa
data16
push
mov
cmpsl
hlt
enter
into
mov
mov
flds
add
outsb
sahf
add
es
xor
mov
mov
icebp
or
faddl
test
pushf
in
popf
mov
mov
es
xchg
imul
xchg
repz
sbb
fdivs
ja
sbb
dec
js
jae
mov
push
adc
mov
sbb
and
fidivrl
and
mov
sub
dec
jns
cs
add
sub
mov
mov
pushf
adc
adc
dec
push
int
and
movsb
iret
mov
cs
dec
aad
inc
pushf
xchg
lea
pop
push
out
shl
sub
xchg
pop
stos
repnz
mov
xchg
sub
fwait
rcll
aas
sahf
movsl
addr16
sbb
mov
mov
imul
xchg
pusha
enter
and
lret
leave
xor
or
jmp
hlt
shl
imul
jge
dec
jb
ret
xor
or
mov
es
xor
or
xchg
mov
cmpsb
mov
fmuls
ljmp
jo
aad
and
fcos
movsb
lock
adc
sbb
adc
fs
jb
sub
aam
adc
mov
dec
aaa
pop
aam
fs
xchg
imul
mov
adc
roll
out
adc
add
leave
push
ficoml
test
out
fs
sub
add
inc
cmp
and
cmp
icebp
inc
and
pusha
push
ds
lods
xor
jl
imul
test
mov
dec
cmp
pop
mov
loopne
cmp
xchg
jle
out
sub
pop
inc
jbe
cmp
push
inc
inc
cmpsl
shlb
lods
subb
add
pop
mov
mov
xchg
popf
mov
and
or
mov
dec
hlt
mov
dec
sbb
sbb
mov
push
idivl
mov
and
lahf
movsb
dec
rcrb
fsubl
enter
pop
ret
add
cmp
sbb
sbb
in
pop
or
jle
stc
das
adc
je
and
hlt
add
xchg
push
scas
sahf
add
lret
lahf
pop
push
inc
imul
push
dec
out
cwtl
adc
div
sahf
test
cmp
mov
sbb
cmp
adc
inc
pop
cmc
pusha
push
leave
xor
stc
pushf
pop
mov
jae
in
hlt
call
enter
faddl
push
popa
testb
add
out
subb
nop
test
clc
fwait
add
jp
fnstenv
leave
or
shll
fsubs
push
inc
xchg
imul
push
out
cwtl
cmp
jl
inc
cs
mov
pop
mov
mov
in
bound
mov
adc
mov
adc
push
jl
fst
test
rorb
movsl
shll
mov
or
adc
pushf
inc
orb
das
dec
mov
jmp
outsb
jns
bound
mov
mov
popf
pop
ja
imulb
xorb
call
jne
and
push
out
fs
sub
sub
sbbb
push
sar
pushf
mov
xchg
dec
mov
dec
jp
lods
subl
imul
or
stos
inc
std
push
call
out
cmp
inc
int3
pop
xorb
xchg
in
mov
mov
pusha
xchg
and
fnstsw
ss
mov
sbb
in
pop
xor
add
in
add
cmc
fisttpll
daa
push
add
mov
jmp
pop
push
jge
and
push
test
test
mov
int3
sbb
mov
mov
nop
insb
jo
sarl
cmpsb
mov
or
xor
das
lds
mov
mov
ljmp
mov
xor
jge
les
dec
ret
jp
das
repz
add
xchg
scas
lock
out
fldl
cld
lahf
mov
cmp
cmpsl
jo
jo
stos
sbb
sbb
roll
add
mov
jmp
xchg
sub
dec
inc
jo
push
jb
inc
mov
pop
adc
fbld
jge
popa
loopne
lds
sub
pop
xor
xchg
inc
cmc
iret
mov
push
call
xor
movsb
pop
das
out
mov
sbb
jecxz
sbb
popf
imul
in
mov
sbb
and
dec
mov
fcompl
daa
shrb
mov
icebp
pushl
pushl
inc
sti
adc
in
mov
push
cld
mov
cmp
loopne
movsl
add
aas
jnp
ljmp
jnp
pushf
lods
xor
lea
pusha
popa
cmp
sub
iret
jp
adc
in
add
aaa
sbb
sahf
aam
fnstsw
loopne
int
fbstp
out
repnz
jo
sbb
mov
ficompl
ds
out
xchg
jg
loope
sbb
stos
cli
ss
lret
fistl
jl
into
xchg
lds
add
aad
arpl
xor
push
jmp
sbb
dec
xchg
fists
out
imull
dec
and
jle
jb
out
xchg
jae
and
xchg
enter
aad
test
js
xor
xor
cld
mov
sbb
jbe
lock
or
notb
clc
scas
sub
cmp
xor
rorl
cmp
and
dec
cmp
out
icebp
ja
or
dec
sub
xchg
aam
pop
mov
lods
es
pop
test
xorb
pushf
pop
xchg
aaa
pop
sbb
lret
cmp
mov
add
jbe
pop
xchg
cmp
out
mov
push
popa
mov
or
xor
out
adc
repnz
jb
xchg
outsl
out
jns
xor
mov
mov
iret
rorb
imul
inc
pop
fdivs
push
sub
repz
ljmp
nop
stos
repz
ljmp
jne,pt
xchg
in
call
daa
das
jb
mov
xor
mov
adc
jno
add
rcr
add
jb
or
dec
jecxz
cmp
movsl
mov
ss
cmpsl
in
xchg
and
ss
stos
mov
aas
push
ret
es
add
xor
mov
mov
fidivrs
pop
ret
adc
scas
bound
adc
mov
mov
sbb
push
rorb
inc
mov
mov
pop
pop
cld
aaa
insb
pop
dec
cwtl
jg
out
mov
mov
loop
push
insl
fwait
cmp
test
test
jp
clc
into
dec
jg
scas
insb
mov
push
or
repnz
test
mov
imul
push
mov
stc
ficoml
mov
xchg
push
nop
aaa
push
mov
sub
and
inc
sti
mov
adc
dec
lahf
sbb
xor
mov
push
lods
in
xchg
roll
in
out
fisttpll
movsb
sbb
scas
cmp
fstpl
or
sbb
pop
push
pop
test
add
sahf
sbb
xchg
mov
stos
or
lret
inc
mov
mov
lods
insl
xchg
inc
ficompl
les
pop
mov
fyl2x
xchg
xchg
inc
lds
jmp
sub
pop
ljmp
bnd
stos
enter
int
sbb
jp
testl
fimull
mov
mov
mov
fwait
push
scas
in
xor
push
push
dec
mov
stos
cwtl
sub
loopne
xchg
mov
sub
cmp
nop
sub
stos
push
arpl
inc
sti
out
ds
in
xlat
push
sub
test
lahf
push
jl
fisttps
sub
pop
and
shl
repz
imul
dec
inc
or
lods
sub
into
ret
xor
pop
test
add
jl
dec
mov
sbb
inc
sub
or
adc
push
mov
mov
mov
loope
and
icebp
xorb
push
push
mov
ds
fstpl
lods
mov
call
movsb
mov
mov
xchg
fldcw
fiaddl
mov
hlt
push
pop
ficoml
mov
sahf
mov
push
out
in
add
mov
idivl
push
loop
loop
pop
sbb
add
cmp
aas
fs
xchg
pop
stos
push
ss
ret
sub
ds
sbb
push
jge
jge
lret
sub
sbb
mov
pop
add
xchg
pop
inc
lcall
mov
lcall
test
sub
cli
sub
cltd
inc
je
push
cmpsl
or
sbb
mov
js
inc
aam
nop
push
out
sbb
std
stos
aaa
jge
mov
add
fldl
addr16
stos
loop
test
xorl
cmp
sub
push
xorl
xchg
mov
jmp
and
adc
mov
mov
sub
pop
sbb
in
clc
dec
sbb
in
xor
daa
fldenv
std
and
outsb
fdivrs
xlat
ja
or
inc
jg
push
mov
mov
insl
xor
mov
mov
repnz
lret
and
aas
call
jae
sub
push
les
sub
mov
or
push
repz
fbstp
pop
repz
je
inc
aam
inc
sar
xchg
xchg
loope
and
leave
bound
ja
incb
sahf
or
repnz
test
pop
test
inc
adc
ss
fs
mov
sbb
and
movsl
pusha
mov
jo
push
scas
mov
outsl
inc
aam
rclb
lods
jge
imul
mov
cs
fwait
pop
imul
push
push
rolb
pusha
and
rcll
mul
inc
or
fists
sub
add
das
pop
mov
dec
faddp
and
xor
test
rcl
push
mov
xchg
mov
or
push
testl
inc
in
jp
popf
ja
xchg
mov
and
mov
dec
pop
xchg
test
clc
ss
or
pop
sub
inc
outsb
or
outsb
push
fisubrs
dec
ds
dec
leave
fmuls
xor
fisttpll
lea
lahf
xchg
lcall
roll
pop
bound
push
xor
sti
xor
and
cmp
xchg
mov
xor
popf
lods
pop
adcb
lcall
xor
addr16
outsl
jmp
loopne
iret
mov
pop
popa
jo
ret
sub
jp
in
dec
push
lock
pop
std
test
in
call
add
xchg
mov
add
lret
ja
clc
xlat
mov
sub
movsb
pusha
sub
insb
cmp
add
movsb
in
lods
addr16
dec
or
js
std
stos
out
test
adc
iret
lret
xlat
fimull
stc
inc
fldl
test
jle
and
dec
mov
xor
call
push
dec
mov
pop
mov
fcmovne
adc
mov
cmp
mov
fmul
pop
cltd
add
das
jb
sbb
jne
repnz
imul
cwtl
rclb
dec
pop
insb
jp
jno
or
test
mov
icebp
cmp
pop
lods
call
andl
ficoms
jg
mov
out
bound
dec
dec
cli
or
ja
add
jp
ds
push
hlt
test
scas
cmp
ja
addl
movsb
mov
cmp
mov
or
cmpsb
inc
nop
inc
push
mov
sarb
push
outsb
iret
scas
lcall
pop
push
jno
push
xchg
pushf
mov
jne
add
mov
push
cmpsb
sbb
fdivl
movsl
jmp
mov
fs
push
fadds
pop
xchg
in
inc
add
dec
test
xor
sbb
imul
jb
pop
in
mov
int3
add
cld
jg
rcrb
cs
daa
lret
xchg
jecxz
mov
stos
sbb
ja
fistl
pop
inc
sub
xchg
fstl
sti
sbb
push
insb
mov
mov
adc
test
pop
mov
jg
pop
cmp
rcr
pusha
test
jl
push
jp
sub
adc
xchg
pushf
fadd
push
adc
sbb
data16
and
xchg
outsl
rcrb
mov
outsl
fwait
test
adc
mov
punpckhbw
stc
pop
xlat
mov
imul
adc
dec
stos
dec
mov
push
push
out
add
movsb
sub
loopne
loope
add
mov
mov
enter
jbe
xor
mov
shlb
sbbb
push
pop
sub
pop
lret
sti
adc
pushf
pop
arpl
cmp
xor
stc
push
sahf
or
adc
push
fistpl
jo
loopne
mov
dec
xchg
mov
xchg
insb
push
or
inc
and
int
cmc
xchg
mov
mov
adc
push
jne
pop
adc
arpl
pop
jg
in
ljmp
cli
stos
jo
sub
xchg
in
pop
cmp
push
sbb
xlat
repnz
lret
lret
sub
sbb
call
loopnew
mov
aas
inc
aaa
jg
cmp
xchg
es
hlt
pop
jno
data16
jbe
test
data16
pop
insb
dec
mov
imul
pop
fisttps
into
or
inc
adc
jle
scas
push
sti
scas
xor
xor
popa
out
sub
out
or
inc
movsb
cpuid
cmc
or
in
stc
pop
inc
pop
and
je
addl
loopne
loop
and
enter
jne
jmp
xchg
pop
sbb
jl
pop
push
push
loope
xchg
inc
ds
inc
call
movsl
rclb
cmp
orl
adc
mov
mov
lret
sub
mov
pop
sub
jo
jne
imul
pop
and
mov
adc
jmp
outsb
fmuls
rclb
cltd
xchg
popl
jmp
jo
orb
ret
adc
imul
sahf
outsl
push
xorb
loope
push
push
push
jp
mov
insb
dec
std
inc
das
je
cmc
push
inc
jb
jnp
sub
mov
stos
shlb
mov
xor
xchg
cmp
je
pop
shl
test
push
add
sbb
lods
call
ja
test
or
pop
inc
dec
add
fisttpll
lods
mov
sbb
hlt
cmp
pop
mov
addr16
or
arpl
adc
adc
lods
arpl
inc
test
js
mov
push
aaa
jl
sub
sub
mov
jecxz
fsubrs
mov
push
arpl
push
pop
sahf
sub
sbb
jmp
mov
sarb
jp
popa
cmp
in
lds
fstl
mov
dec
lods
or
out
cmpsl
clc
push
xor
add
cmp
or
push
daa
les
mov
fdivs
xchg
cli
ja
arpl
sbb
sbb
cs
outsl
test
movsb
iret
sbb
fmulp
enter
aaa
push
inc
push
cwtl
in
arpl
sbb
dec
int
and
ljmp
iret
add
jno
inc
stc
mov
flds
xorl
cmp
call
and
sbb
jl
lret
lcall
in
int3
in
test
pop
insb
addr16
jg
or
mov
add
sarb
mov
sub
cmpsb
fisttps
jns
xchg
insl
mov
cmpsl
aas
ljmp
xchg
dec
outsb
adc
mov
mov
sarb
movsb
shll
dec
xchg
mov
ds
xor
into
cmp
sub
outsb
push
push
dec
repnz
dec
push
fnsave
stos
popf
inc
cmp
push
sbb
pop
rcrl
jno
lcall
out
sub
imul
add
cltd
pop
mov
stos
out
sahf
sti
adc
mov
push
mov
bound
pop
jae
bound
jl
in
mov
clc
sbb
sbbb
pop
mov
jno
rcrb
jne
mov
test
push
scas
dec
mov
ficompl
add
mov
sahf
jb
or
lcall
cmp
adc
mov
mov
jae
xor
sub
push
rol
sarl
ljmp
inc
xor
jecxz
cwtl
jge
dec
cwtl
cmc
aas
fs
das
push
adc
lcall
int
and
mov
mov
popf
fwait
stos
shrl
xchg
jnp
roll
sub
xchg
dec
rclb
pop
xor
mov
pusha
push
fst
nop
addr16
jmp
and
mov
mov
bound
add
in
loope
int3
lret
ja
lods
add
add
add
int
pushf
xchg
jns
dec
jnp
jne
jle
add
mov
sub
sub
cli
test
sbb
ret
cld
incl
and
mov
push
divl
pop
mov
ret
jbe
das
out
push
rcrl
sub
add
mov
dec
leave
fstpl
xchg
idivl
add
cs
test
icebp
mov
mov
jge
clc
lea
loopne
mov
outsb
jl
testb
mov
call
sbb
or
xchg
pop
adc
cmpsl
and
fistpll
sub
mov
sub
add
jl
sbb
fsubl
loopne
jo
js
sbb
aam
or
xchg
jle
push
sbb
je
adc
jmp
mov
lahf
add
mov
outsb
add
push
push
insb
stos
and
jle
mov
je
in
sti
cmp
sub
mov
and
dec
sub
adc
cmp
in
cmc
repz
mov
adc
sbb
rorl
les
mov
inc
jne
loopne
mov
ss
lret
rorb
mov
jecxz
sub
stos
bound
shlb
les
mov
inc
push
bound
lods
push
adc
mov
dec
mov
mov
dec
add
aas
rcll
mov
insl
popa
xlat
pop
cltd
mov
add
jns
xchg
sub
xchg
cwtl
cmp
push
mov
enter
sti
push
in
fldcw
jl
or
mov
addr16
popa
sub
repnz
xchg
mov
pop
mov
and
mov
push
xchg
data16
pop
and
add
ja
shrl
cmp
mov
repnz
cmc
mov
data16
mov
pop
mov
stos
mov
cmc
push
or
cmpb
or
ss
out
call
xchg
xchg
inc
test
int
add
pop
mov
mov
leave
fstl
pop
outsb
popa
pop
lret
lahf
jae
jl
sub
ficoml
xchg
dec
inc
pusha
sbb
xor
jge
test
addl
sti
and
jle
outsb
es
addr16
fwait
jbe
outsb
stc
fdivrl
and
mov
jmp
adc
lea
lret
bound
and
jb
dec
add
lahf
cmp
jmp
mov
adc
xor
mov
adc
mov
xor
mov
dec
daa
dec
ret
int3
iret
ja
mov
pop
pop
and
cmp
popw
divl
push
adc
lea
xchg
test
subl
ret
mov
out
or
cltd
mov
xchg
aas
in
and
sbb
into
jno
jns
cmpsl
dec
jge
jno
dec
sub
xor
mov
cmpsl
outsb
adc
cmp
mov
and
je
mov
outsl
inc
dec
or
insl
adc
cli
cmp
or
lcall
pop
dec
mov
ds
movsl
and
insb
jo
icebp
push
cs
shr
repz
loope
cmp
and
mov
pop
pop
stos
pop
cmc
adc
pushf
fstpt
enter
pop
xor
loopne
sarb
fs
adc
clc
pop
push
mov
mov
xlat
sahf
fsub
fisubrs
mov
or
adc
ljmp
jns
loop
add
push
adc
in
mov
lret
arpl
jne
pop
pop
enter
or
pop
cmpsb
inc
add
dec
sbbl
imul
js
arpl
daa
mov
pop
dec
xor
dec
pop
xchg
sbb
sbb
pop
mov
pop
mov
popf
sti
mov
xchg
pop
shll
ficoml
cmp
in
xchg
cmp
lret
arpl
ret
out
sbb
push
mov
sbb
pop
lcall
out
jno
pushf
sub
sub
orb
adc
xor
out
inc
jg
outsl
pusha
adc
mov
cli
push
cmp
push
out
mov
lds
xchg
pop
subl
mov
cld
adc
aad
sbbl
sbb
insb
push
out
or
jl
xor
mov
add
out
mov
pop
decb
mov
testb
ret
jecxz
mov
mov
fsubr
fcmovne
repnz
cmpsl
sub
push
nop
dec
sub
mov
int3
mov
push
and
enter
dec
mov
jnp
mov
ljmp
push
mov
leave
cmp
shrl
jne
adc
xor
notb
rorl
ficoms
icebp
mov
fs
rcr
js
jo
je,pn
xor
insl
jl
in
gs
cwtl
push
decb
pop
pop
or
xchg
int
xchg
dec
arpl
xchg
popa
ss
xor
add
or
in
inc
fs
daa
lcall
shrb
setns
xor
and
adc
mov
lahf
push
pop
jbe
mov
lret
sbb
or
push
xor
push
call
add
push
cmpsb
mov
inc
nop
ja
pop
jecxz
out
cwtl
mov
jns
jno
xchg
ljmp
pop
mov
in
lock
into
hlt
ja
mov
test
ds
iret
imul
icebp
add
fld
in
fisttpl
jmp
push
xorl
jle
lret
jp
in
iret
sahf
or
mov
iret
movsb
cwtl
je
aaa
push
cltd
addr16
inc
sbb
mov
sub
jp
notb
movsb
add
sbb
daa
adc
and
dec
and
mov
xchg
sub
dec
jmp
test
push
jae
or
adc
jne
inc
mov
xor
xor
jno
or
scas
subl
mov
push
push
cmp
stos
pushf
inc
pop
negb
xchg
loop
mov
inc
dec
sbb
mov
fnsetpm(287
shr
or
stc
sub
mov
test
mov
aad
and
sti
aad
les
std
repz
in
in
push
add
sub
stos
addr16
arpl
sub
cltd
ret
nop
dec
lcall
or
ds
cwtd
mov
jnp
repz
pop
xor
push
lcall
jge
mov
aad
push
mov
inc
call
inc
xchg
inc
scas
ss
or
cmp
jmp
mov
jg
aas
aaa
pop
fwait
int
mov
mov
and
sub
or
std
push
scas
jge
mov
es
out
hlt
js
jns
mov
aas
stos
das
dec
rcr
bound
adc
adc
out
int
out
lahf
lret
mov
xchg
aaa
adc
mov
movsb
inc
pop
jae
pop
sbb
lock
ss
push
inc
adc
stos
shlb
das
sbb
push
testb
push
xor
lret
ja
enter
inc
mov
xor
scas
mov
aad
dec
pop
mov
mov
rolb
repz
push
test
adc
fcomps
stos
scas
push
fs
aas
adc
jo
subl
iret
jle
cmp
inc
xchg
push
mov
lret
outsl
sbb
lret
cmp
mov
nop
dec
dec
mov
ljmp
clc
outsb
inc
addb
fcomip
cltd
int3
mov
arpl
jo
test
add
mov
lods
inc
xor
pop
iret
pop
mov
mov
movsl
lret
or
push
icebp
enter
imul
fsubs
cmp
xor
stc
test
mov
mov
add
jecxz
lahf
inc
xlat
scas
sub
adc
xor
test
ss
jp
dec
sub
stos
stos
in
xchg
adc
push
lds
stos
adc
pop
add
andl
insb
pushf
lcall
push
mov
jno
loopne
mov
imul
es
xlat
jecxz
add
xchg
aaa
jne
xor
fwait
mov
dec
jge
mov
or
clc
les
dec
pop
repz
adc
mov
cmp
xor
int3
dec
daa
jns
test
scas
clc
fildll
jne
jb
add
xlat
mov
cmp
mov
in
cld
in
and
inc
movl
mov
cmpsl
xchg
inc
nop
mov
xchg
test
and
jge
mov
mov
repz
add
xor
rorb
xor
ss
mov
sar
push
lahf
sti
xchg
in
cmpsb
sub
xor
push
pop
mov
test
mov
adc
push
addr16
dec
sbb
jmp
pop
adc
test
pop
lcall
cld
stc
mov
and
sub
sub
adcl
test
cmp
jle
push
cli
and
adc
daa
fnstenv
jb
cmpsb
lea
pop
and
dec
sahf
aam
mov
ljmp
test
mov
arpl
andl
popf
test
jae
inc
out
mov
add
inc
fnstenv
pusha
enter
sub
sub
loopne
mov
jl
cmp
push
mov
imul
shlb
popa
nop
loopne
sahf
test
and
jnp
and
or
daa
cs
cmp
rcll
mov
into
jo
mov
pop
and
movsb
jecxz
movsl
lock
leave
rol
mov
mov
inc
mov
xchg
flds
mov
vgatherqps
loop
rcll
xor
jno
in
imul
aas
insl
scas
jmp
pop
ror
mov
jle
lcall
mov
mov
mov
xor
in
mov
lahf
jmp
jo
and
xor
push
xor
sub
sbb
icebp
jmp
push
leave
popa
adc
outsl
and
jno
call
cmp
in
fildll
inc
insb
push
fldcw
mov
sti
jne
std
adc
or
insb
or
insb
ss
cmc
out
and
mov
js
pop
push
sub
mov
and
daa
push
mov
in
sub
sahf
push
inc
dec
xlat
push
push
push
xchg
andb
test
push
shr
fcmovne
shlb
movsl
xlat
test
outsl
jno
push
adc
rcrl
or
das
mov
fisubs
jp
lds
mov
sub
mov
sbb
pop
fdiv
rclb
fucompp
jecxz
cmp
loopne
pop
jnp
inc
mov
pop
aas
mov
jae
popa
ja
dec
or
dec
mov
repz
dec
mov
xchg
pop
xor
lcall
cmp
out
push
sub
lds
pop
fmul
imul
add
ss
xor
loopw
cmp
andl
cmp
jno
inc
push
lcall
and
sub
xchg
mov
add
mov
aam
mov
xchg
mov
sbb
pop
jno
jmp
dec
cmc
pop
les
lock
cmp
push
aaa
gs
xorl
in
loopne
stc
roll
xor
or
mov
nop
dec
sbb
popa
add
mov
pop
outsl
or
mov
fstpt
std
gs
repz
cmp
stc
jb
aad
sarl
cwtl
cmp
scas
jecxz
add
pop
dec
rcll
shlb
or
sub
mov
ret
jae
dec
mov
mov
out
cmpsb
jp
sub
ret
fs
inc
in
mov
dec
mov
das
lods
cmc
adc
jle
mov
inc
adc
xchg
sub
or
data16
xchg
lods
mov
das
fmul
sub
inc
jb
lcall
cmp
xchg
cmpsb
adc
inc
pusha
mov
mov
lds
xchg
repnz
andl
enter
and
pop
jnp
cmp
pop
jbe
mov
mov
jae
and
or
jle
mov
add
movsl
pop
int3
sbb
add
inc
add
pop
inc
jbe
hlt
sbb
movsl
push
xor
loopne
lds
jo
scas
xor
push
adcl
popa
push
pop
inc
or
mov
push
sub
mov
out
cmpsb
shr
add
shl
mov
xchg
xchg
mov
fisubl
testb
jno
loopne
outsb
adc
icebp
notl
mov
popl
outsb
inc
dec
cli
xlat
into
pop
leave
xchg
adc
xchg
adc
push
nop
sbb
mov
or
sub
mulb
enter
xor
popf
pop
push
mov
push
int
cmc
adc
mov
es
inc
inc
push
fwait
pop
and
adc
rorl
das
nop
shll
aam
pushf
nop
adc
inc
add
inc
mov
in
jns
dec
pop
aas
cs
add
add
setne
lahf
andb
fnsave
add
ret
fs
push
sub
lock
mov
jge
push
stos
xor
pop
lods
fincstp
insl
repz
lods
negb
or
loopne
xchg
sub
dec
lcall
in
in
repz
nop
xchg
sbb
push
push
hlt
aad
cmpl
dec
outsl
mov
mov
adc
pop
cmc
loopne
int3
daa
sbb
cwtl
mov
daa
jb
jg
test
bound
aam
ljmp
imul
mov
aad
enter
das
sub
sahf
sbb
xor
lods
gs
aad
mov
jmp
test
jo
andb
stos
inc
adc
xchg
add
and
jnp
das
lods
flds
xchg
fsubrl
jle
aam
inc
ret
data16
dec
ss
leave
test
inc
mov
cs
mov
icebp
lods
xor
sub
dec
movsl
xchg
int3
pop
xchg
test
mov
aas
js
out
lods
repz
arpl
sbb
inc
arpl
sub
test
jl
cli
xor
fcmovnbe
jge
fldcw
dec
adc
testl
outsl
cmp
shll
or
imul
dec
repnz
xor
stos
mov
jmp
pop
call
imull
idivb
int3
inc
sahf
lcall
cmp
xor
or
mov
xchg
data16
jmp
stos
push
movsl
add
pop
push
repnz
sub
sub
pusha
or
lahf
mov
push
ja
xchg
inc
addl
cmpsb
mov
mov
mov
jmp
push
js
and
popa
stc
add
jae
enter
jge
jp
push
dec
lret
jne
jge
out
es
in
cmp
and
bound
xchg
mov
inc
and
gs
mov
mov
sbb
test
test
fs
and
ds
rclb
rol
xchg
inc
dec
mov
mov
cmpsl
push
fcoml
lret
lods
pop
sti
lret
packuswb
add
aaa
xchg
loope
pop
repnz
cmpsl
aad
lods
xchg
ds
repnz
or
loope
adcb
ja
fidivs
loope
rcrb
insb
pop
stc
xchg
and
mov
mov
mov
iret
add
arpl
jns
fisttpll
dec
sbb
dec
xchg
mov
push
stos
add
mov
or
mov
lods
scas
imul
sbb
sub
sub
xchg
push
or
outsl
mov
push
in
cmpsb
adc
lock
addl
aam
jmp
push
arpl
daa
movsl
and
out
jbe
xor
xchg
fcomp
push
sub
movsb
push
cmpsl
stos
push
lret
into
push
add
xor
or
and
insb
enter
mov
cmp
out
xor
xor
jns
outsb
rcr
and
scas
aam
pop
out
xor
mov
leave
xchg
jmp
ss
enter
sahf
jmp
cld
lock
mov
data16
imul
pop
and
or
sbb
and
xor
loopew
ret
cmp
sarb
loopne
fs
add
movsl
scas
addl
or
push
cld
test
call
push
jmp
loope
cmpsl
mov
jp
in
xchg
xchg
sub
sub
xor
mov
dec
ret
push
pop
cmp
cli
lods
push
cld
mov
lahf
pop
push
lods
hlt
inc
int3
cmp
lret
jno
jg,pt
and
or
jl
pusha
into
rol
aaa
insl
ss
fidivrl
hlt
mov
addb
dec
mov
inc
mov
in
add
out
call
in
jp
xchg
xchg
dec
icebp
mov
imulb
int
in
movsb
mov
xchg
push
or
enter
insb
and
addr16
jns
pop
mov
mov
xor
dec
jb
ss
test
addl
inc
cmc
jecxz
sti
mov
pop
push
and
in
jge
imul
and
mov
inc
mov
ss
jle
and
xchg
xchg
and
xor
rclb
mov
sbb
cmp
insl
jno
mov
mov
pop
int
jp
mov
cmp
mov
ds
mov
pop
ljmp
mov
push
out
push
jle,pn
or
dec
insl
adc
mov
roll
jl
pop
rclb
hlt
jne
lret
pmaxub
jecxz
jb
jecxz
mov
lret
xchg
ds
sahf
jno
mov
push
jp
mov
cmc
stc
lahf
or
ret
xchg
imul
cmp
add
mov
pop
cmp
inc
or
mov
jbe
jecxz
in
jno
adc
bound
loopne
jp
fcmovu
jl
ja
xchg
and
leave
xor
out
pop
pop
into
adc
loop
das
cmp
dec
cmp
in
or
rcrl
sub
and
fisubrs
pop
jecxz
mov
push
mov
add
popf
xor
in
xor
mov
pop
test
mov
mov
test
adcl
popf
cs
or
xchg
cmp
mov
arpl
pop
lods
in
inc
push
xchg
adc
mov
mov
or
mov
or
dec
call
lea
test
mov
ret
xor
test
sub
cltd
mov
mov
lcall
add
cmc
mov
dec
adc
dec
ljmp
dec
sbb
test
xor
xchg
pop
leave
shl
jge
push
xchg
sbb
test
rorb
xor
sbb
fcoml
or
xchg
sti
insl
popf
xchg
adc
cmpl
in
mov
movsl
adc
mov
stos
fistpl
les
sub
cs
shrl
dec
imul
xchg
das
mov
sar
xchg
mov
sarl
inc
jmp
ret
pop
push
sub
lock
mov
xor
mov
cltd
pop
mov
andl
pop
inc
xor
fldcw
xlat
hlt
push
imul
cli
hlt
stos
ds
imul
movsl
sub
fadds
inc
ljmp
out
pop
pop
ret
add
divl
mov
test
je
sbb
pop
push
lea
jle
jb
fs
pop
lods
jp
decl
or
push
fnsave
insl
repnz
jecxz
xor
or
rorl
push
pop
popa
xchg
mov
repz
inc
pop
adc
lock
dec
test
fsubrs
mov
add
ljmp
mov
in
pusha
push
sub
pop
ret
mov
or
dec
out
inc
xchg
push
test
add
inc
icebp
or
ret
mov
sub
and
mov
mov
addr16
mov
mov
and
sub
push
add
xlat
pop
push
pop
push
adc
iret
shrb
xchg
xchg
dec
mov
test
repz
mov
movsl
push
inc
xor
jle
push
arpl
mov
jp
jecxz
mov
sub
nop
mov
test
mov
ljmp
mov
and
adc
sub
test
inc
xchg
and
inc
scas
mov
xchg
lahf
jmp
inc
rorl
fst
push
data16
pop
loopne
jne
xor
or
cltd
sti
sbb
xor
pop
push
into
xchg
jp
cwtl
dec
sahf
aaa
and
loopne
push
mov
add
in
shlb
and
mov
and
mov
pop
popa
jo
mov
inc
adc
pop
pop
mov
das
lock
shr
mov
jecxz
mov
sub
hlt
pop
cmpsb
sub
or
mov
jnp
out
cmp
dec
dec
xor
insl
sub
mov
imul
je
push
xchg
add
sub
fwait
sar
ds
cmpsb
jns
outsb
lock
xchg
jg
mov
sarl
fnstcw
or
aaa
rol
scas
jge
lret
lcall
mov
sbb
jo
popf
into
inc
xchg
divl
fistl
and
enter
dec
pop
popf
insl
add
movsb
imul
push
mov
lods
idiv
into
sbb
cmp
push
and
imul
add
fs
aam
fdivrl
movsl
or
stos
mov
addr16
mov
xchg
je
clc
cmp
call
push
pushl
mov
outsl
inc
sahf
sbb
sti
push
sarl
add
mov
mov
sbb
call
js
lret
adc
mov
ja
push
ret
sub
sbb
sbb
fadds
mov
pop
pop
mov
pop
jne
and
rcll
imul
es
xchg
mov
unpckhps
sahf
sub
nop
test
push
adc
lcall
pop
sbb
dec
xchg
xchg
mov
es
inc
mov
xor
push
or
xor
pop
or
das
sub
xchg
jg
lret
lahf
hlt
xchg
jae
xlat
in
imulb
or
insl
pusha
dec
test
std
cmp
mov
mov
xchg
jnp
push
mov
lret
cld
mov
sub
int3
ljmp
arpl
xchg
stos
cltd
fdivs
lods
in
sub
addr16
push
popf
shrb
adc
xchg
inc
mov
xchg
add
addr16
jne
pusha
leave
lret
popa
xchg
pushf
hlt
test
and
mov
mov
jg
in
repnz
pusha
out
mov
out
sub
jb
cmp
xor
ds
pusha
sbb
out
roll
int3
mov
sbb
and
ret
sub
call
adc
push
loope
bound
cltd
dec
xor
mov
lods
bswap
aam
xorb
loopne
push
jnp
jecxz
popf
xchg
nop
add
adcb
mov
fbld
scas
int3
mov
push
pop
push
data16
pop
or
pop
scas
xchg
iret
xor
dec
adc
add
sbb
andb
arpl
mov
and
fiadds
dec
std
sub
xor
xchg
jecxz
clc
arpl
add
push
aas
push
xor
out
out
imul
sarb
imul
imul
push
mov
scas
sti
ret
std
cli
std
push
jl
outsb
dec
in
or
pop
xchg
push
inc
push
sar
in
xchg
or
loope
mov
in
insb
jbe
je
rolb
cmpsl
fdivp
ja
adc
pop
adc
sub
add
insb
inc
jno
iret
shll
adc
lret
mov
call
mov
or
sbbb
jecxz
stc
fisttps
push
stos
mov
fists
pop
data16
xlat
mov
adc
adc
cwtl
sti
jp
ficoms
loopne
sbb
and
popf
popf
sbb
dec
je
ficomps
hlt
and
inc
lret
stc
mov
xor
cmpsb
cmp
sub
adc
xor
pop
icebp
add
sub
lret
in
xchg
sbbl
add
orb
popf
out
pushf
in
cs
pop
bound
out
mov
lds
xchg
call
dec
sub
fisttpll
pop
inc
fnstsw
movsb
cmpsl
btsl
adc
push
and
fadds
mov
pop
pop
push
icebp
jecxz
sub
mov
nop
gs
dec
jae
or
dec
sbb
mov
shll
add
mov
pop
dec
jnp
xchg
clc
push
dec
adc
or
iret
cltd
add
rorl
shrl
mov
mov
cmp
cltd
push
push
mov
add
cmp
cs
filds
cld
push
scas
mov
call
jns
push
and
in
lock
jne
dec
lahf
jne
test
push
or
cmpsb
cmp
dec
rcrl
jmp
jns
mov
xor
inc
pushf
mov
inc
xchg
mov
jnp
cltd
testb
push
lods
cmpsb
adc
out
movsb
jns
stos
cltd
mov
ds
push
dec
cmc
out
push
mov
mov
test
push
aad
incl
sahf
push
pusha
inc
push
mov
jp
cltd
imul
xchg
dec
or
jmp
jp
jle
xchg
pop
xor
cmp
std
ror
or
add
lds
outsb
adc
mov
sbb
mov
push
dec
fs
cmp
or
arpl
lock
into
cmp
hlt
inc
sbb
sub
stc
lret
dec
clc
cmp
inc
sub
or
sarl
add
inc
ja
sti
cmp
movsb
std
xor
mov
bound
clc
or
jae
add
shlb
insb
lcall
mov
dec
add
mov
cmp
and
jge
fmull
mov
push
cmp
je
sbb
mov
pop
pop
adc
je
xlat
test
jb
add
adc
and
dec
aam
mov
jmp
scas
rorl
leave
and
pop
mov
adc
adc
jl
add
xor
dec
dec
dec
jb
test
or
jmp
pop
mov
pop
xor
dec
insb
les
rcl
ja
push
and
out
movsb
and
and
das
sbb
xchg
dec
daa
mov
loop,pn
leave
mov
in
ja
push
repnz
xchg
cmp
arpl
loopne
aam
int3
lcall
pop
stc
ds
sub
adc
mov
ljmp
push
xor
cli
fisubrl
xchg
in
test
xchg
or
repz
imul
and
js
inc
out
adc
push
movsb
push
daa
and
idivb
insl
sbb
js
data16
xlat
aas
imul
mov
fldt
popf
mov
cmp
nopl
sbbl
loop
push
andb
dec
lahf
add
jbe
sbb
inc
jb
jge
xor
clc
push
test
movsl
dec
xchg
shr
fisttps
push
mov
sub
add
nop
mov
fdivl
mov
test
jl
repnz
push
shr
jecxz
push
fisttpll
inc
addb
jnp
pop
xor
sti
jne
mov
aaa
sbb
outsb
pushf
mov
repnz
mov
lds
jne
sub
mov
inc
mov
shl
or
and
dec
test
fildl
add
stos
sti
cmp
mov
xor
push
push
sti
xchg
out
xor
mov
mov
out
sbb
and
shlb
mov
mov
popf
push
sub
sbb
add
stos
xchg
loop
jmp
inc
out
arpl
jg
jmp
fisubl
lahf
ja
mov
iret
stos
dec
and
sub
mov
fildl
mov
sbb
pushl
push
loopne
sbb
jl
add
or
mov
data16
rep
inc
imul
mov
mov
push
mov
cltd
push
sbb
shrl
inc
mov
out
syscall
adc
and
add
mov
pushl
movsl
ljmp
inc
in
loope
loope
mov
rcl
mov
mov
idivb
mov
and
xchg
and
mov
fimuls
xor
and
push
shll
pop
addb
push
mov
mov
xor
pop
jb
adc
xlat
pop
and
insl
js
sbb
xorb
sahf
cmp
mov
aam
xchg
mov
sub
inc
shll
lds
fmulp
outsb
sbb
pop
jae
inc
sbb
ja
sarb
and
xor
ljmp
std
add
push
xchg
push
dec
sub
int3
ljmp
mov
mov
sbb
shl
xor
and
inc
dec
cs
movsb
fwait
in
inc
cmp
rcll
xchg
mov
xor
fldl
and
cltd
cmp
xorl
std
ficompl
xchg
xor
fwait
add
pop
adc
lcall
fcmovnu
add
pop
daa
mov
push
dec
mov
add
outsb
fldl
aam
inc
je
stos
pop
fistpl
out
ret
xor
outsb
mov
jl
push
mov
repz
shll
es
push
pop
dec
inc
in
shll
jne
pop
jbe
out
fcoms
out
cmp
push
xor
aam
or
jo
test
mov
dec
sbb
inc
int3
nop
inc
mov
push
ljmp
xor
outsl
cs
outsb
sbb
jp
jo
sub
ja
cltd
xchg
loopne
jmp
test
into
lds
adc
jl
push
sub
inc
mov
adc
and
sub
and
arpl
or
push
repnz
sub
xlat
mov
xor
push
dec
jo
call
scas
dec
test
pop
push
push
pop
add
or
or
lahf
shlb
sub
mov
scas
popa
add
mov
ljmp
pop
movsl
jo
pop
inc
icebp
add
mov
ficoms
fistpll
gs
dec
stos
mov
push
ja
filds
sbb
in
adc
ret
in
lcall
cld
xor
in
repz
mov
mov
jno
les
imulb
pop
mov
repz
sbb
mov
pushf
jb
jnp
ss
in
sti
or
neg
scas
icebp
fidivl
pop
lahf
mov
pop
cmpsb
and
xchg
sahf
push
aaa
mov
sbb
ds
sub
sbb
dec
in
idivl
scas
mov
jecxz
xchg
repnz
mov
bts
in
sub
xchg
lcall
xor
popf
scas
cli
test
xlat
sbb
lods
and
push
push
repz
int3
rcl
inc
inc
push
lret
out
in
int
scas
add
jecxz
sbb
add
jl
push
cmp
pop
frstor
ret
aam
mov
cltd
jbe
lret
pushf
inc
jnp
fdivl
inc
pop
aad
dec
xchg
adc
mov
lcall
shrl
mov
dec
std
scas
push
rclb
out
jne
push
loope
pusha
xor
mov
xor
cmp
fnstsw
push
push
jle
call
cmpsb
les
mov
pop
inc
neg
mov
ljmp
or
sub
in
je
fiadds
sti
push
push
rorl
imul
inc
dec
mov
es
xor
jae
js
movsl
pop
roll
aad
xchg
test
xchg
movsl
jmp
push
mov
shll
xchg
cmp
popa
xorb
add
ds
fdivrs
pop
mov
rorl
mov
mov
push
cmp
xchg
dec
fs
add
popf
int3
call
rolb
jb
mov
out
push
inc
cmp
mov
or
imul
cmp
loop
push
mov
imul
popa
test
mul
fs
jg
mov
adc
jb
andb
xchg
mov
orb
mov
mov
jecxz
scas
cmp
mov
lods
fbstp
in
cmp
dec
bnd
sbb
fisttpll
sbb
xchg
push
and
adc
sub
sbb
pop
mov
in
nop
lahf
lock
mov
add
lock
in
dec
jp
jb
xlat
shr
aad
idivl
mov
loop
cmpsl
sub
adcb
fidivrl
outsl
loopne
inc
adc
inc
mov
jecxz
je
aaa
rol
cltd
push
test
gs
loope
mov
inc
mov
fwait
sub
fwait
xor
or
popa
lahf
insb
jp
jb
mov
test
mov
xchg
mov
sub
movq
pushf
sbb
add
movsl
inc
pop
negb
popa
xor
xor
loopne
xchg
cmp
shl
jle
test
jae
adc
or
xchg
xchg
cmpsl
ljmp
fs
cmp
test
aad
jg
mov
lcall
or
and
add
cmp
out
sbb
fsub
loopne
scas
mov
arpl
adc
nop
fcmovne
push
orl
mov
ds
cmp
sbb
cmpb
push
inc
dec
jl
and
dec
ds
push
bound
jne
test
test
inc
or
pusha
mov
outsb
mov
repnz
xlat
imul
push
pop
sbb
add
cmp
jbe
xchg
rcr
xchg
lods
sbb
nop
add
popa
leave
jmp
mov
push
in
mov
inc
push
cld
pop
cmpsl
push
movsb
addr16
xchg
pop
push
inc
mov
inc
inc
mov
mov
aas
jno
xchg
push
adc
loope
jb
push
mov
mov
jecxz
sub
nop
scas
test
and
inc
adc
xchg
pop
mov
js
mov
aad
push
mov
sti
inc
mov
xor
sti
call
jns
faddl
add
test
push
imulb
xchg
cmpl
jg
mov
test
mov
mov
aam
cmp
or
or
adc
les
pop
adc
jbe
in
mov
cmp
mov
in
rcll
ja
mov
sbb
lcall
test
rcrl
sbb
inc
cwtl
pop
iret
loope
out
pushl
xchg
mov
jbe
in
mov
cmp
xor
push
ret
mov
jmp
mov
sbb
cmpsb
mov
pop
add
sub
xchg
loopne
les
bound
push
inc
pop
clc
cmp
inc
stc
or
push
mov
and
js
pushf
push
lock
add
mov
pop
idivb
mov
sub
jp
test
sbb
mov
or
outsl
das
sub
sti
inc
sbb
das
fiadds
in
imulb
or
scas
push
and
in
cmpsl
jl
push
jne
sahf
pop
xchg
push
mov
mov
lea
cmp
mov
dec
mov
jb
lahf
inc
sub
push
push
inc
mov
ret
sbb
mov
add
pop
pop
fldt
pop
outsl
pusha
loopne
loop
mov
cmp
bound
fstpl
and
cmp
cmp
sbb
arpl
sub
xor
subl
iret
lea
push
sub
clc
cmp
pop
call
pop
rcl
scas
fs
fisubrl
add
imul
rcll
push
sbb
fsubrs
adc
mov
jg
mov
or
cmp
ret
rol
and
mov
or
shl
xchg
mov
jno
xor
fwait
and
mov
inc
adc
cmp
out
jle
and
inc
or
std
jmp
mov
xor
adc
pop
xchg
inc
cmp
or
stc
dec
cmc
adc
rorl
out
ja
cmpb
mov
mov
xchg
jae
push
sub
rorl
mov
xor
shll
sti
jl
xchg
idiv
add
pop
dec
test
in
ljmp
inc
pop
mov
lods
into
fsubl
lea
add
mov
scas
sub
xlat
push
in
fistps
mov
push
push
xlat
pop
inc
push
in
dec
int3
push
test
fmull
push
clc
std
jnp,pn
ret
leave
rcrb
mov
insb
pop
inc
push
sbb
or
out
ja
cmp
dec
adc
mov
lahf
mov
add
idiv
mov
xor
jp
cmp
fstpt
cmp
mov
pop
pop
add
repnz
mov
cld
sub
mov
cmp
andb
sub
add
and
stc
lahf
in
and
inc
arpl
and
push
xor
scas
jno
pop
sub
jne
or
inc
je
dec
sbb
out
aam
mov
test
xchg
movlps
adc
ss
mov
jnp,pn
lock
push
push
inc
insl
loope
cmp
pop
sub
or
sub
movsl
loope
or
outsb
in
cmpsl
adc
and
sub
mov
jmp
mov
mov
xor
call
les
or
fs
and
sub
fs
into
call
insl
scas
cld
add
pop
pop
aaa
int3
jg
xlat
mov
cmc
xchg
push
cld
negb
pop
mov
iret
inc
arpl
pushf
addb
adc
xchg
aaa
jo
pop
lods
lock
out
push
mov
clc
dec
jns
leave
xor
pop
sbb
mov
fstps
std
dec
lret
imul
add
mov
or
cmp
and
or
and
cmp
setl
add
push
lret
jne
sub
icebp
out
repz
sbb
adc
pop
lods
add
lret
push
jae
call
jge
repz
ret
pop
or
fsubr
or
aaa
xchg
outsl
lret
jg
fs
std
mov
fbstp
mov
add
jle
dec
js
fildl
icebp
cmc
lods
inc
loopne
mov
int3
or
leave
cld
fsubl
insl
push
adc
clc
sbb
lea
adc
jle
xchg
das
xor
or
aam
and
sbb
repz
popf
cmc
or
mov
sahf
out
push
jecxz
pop
sbb
sub
icebp
and
mov
add
pop
in
sub
data16
fsubs
fidivl
int
cli
ret
sbb
adc
xor
lock
xchg
jne
dec
popa
inc
repz
jns
mov
insl
xlat
lret
jns
cmp
aas
pop
popf
dec
mov
add
mov
clc
dec
and
stos
push
inc
push
mov
mov
cmpsb
sub
cmp
xchg
fwait
das
mov
adc
shll
cs
add
insl
pop
enter
pop
dec
jbe
xor
xlat
jno
xchg
cmpsb
sbb
testb
or
cmp
aas
cmc
cmp
jmp
sbb
sub
fstpl
mov
jo
mov
lahf
not
push
sbb
mov
cld
shlb
js
pop
repz
aam
sub
test
insb
and
outsl
mov
or
imul
nop
repnz
cwtl
pop
daa
out
or
sti
imul
iret
push
and
sub
push
jge
mov
out
cmp
sbbl
jp
js
push
mov
loopne
pop
inc
mov
sub
adc
dec
sub
in
dec
mov
adc
jge
jle
and
mov
and
sahf
or
or
xor
add
in
mov
and
mov
jno
lds
mov
pop
inc
add
stos
inc
xchg
mov
or
sti
out
out
mov
sbb
ja
movsl
lret
pop
lea
les
push
and
inc
scas
mov
fisttpl
mov
xchg
ja
cmp
add
dec
rorl
leave
call
inc
icebp
inc
dec
js
cmpl
fadd
mov
inc
add
push
int
out
inc
stos
fwait
loopne
xchg
mov
pop
push
pop
mov
sbb
sbb
iret
jno
enter
dec
mov
out
hlt
xor
dec
dec
call
cmp
std
inc
scas
cmp
push
mov
pop
inc
or
add
insb
push
daa
sub
icebp
dec
mov
pop
mov
movl
scas
loopne
hlt
sub
fistpll
adc
pop
or
xchg
imul
fisttps
shll
aaa
push
mov
pushw
inc
scas
dec
push
or
gs
stos
push
cmpsl
in
inc
mov
mov
gs
arpl
and
pop
arpl
out
and
in
mov
out
les
leave
inc
lret
lea
dec
pop
arpl
xor
mov
mov
popf
adc
mov
movsl
jp
mov
mov
outsb
push
jge
inc
add
sti
in
lods
adcb
jnp
pop
sbb
std
and
nop
xchg
jno
ss
aas
sbb
cmp
cltd
scas
pushf
pop
aas
pop
imul
mov
sub
popf
and
sub
mov
ficoms
outsl
mov
mov
sar
push
mov
bound
xor
inc
cmp
fs
sbb
adc
pop
mov
mov
outsb
xor
push
push
ljmp
sub
xorb
add
mov
adc
xchg
dec
in
scas
adc
inc
inc
cmpsb
push
mov
insb
in
jb
fadd
adc
sub
pop
and
mov
adc
dec
aaa
or
outsb
nop
add
dec
fsts
pop
aas
outsb
int
scas
subb
sbb
jb
push
and
sbb
mov
lret
cmp
pop
dec
mov
insb
addr16
movzwl
lahf
adc
leave
mov
xchg
cmp
lret
mov
dec
mov
adc
push
pop
xor
fwait
push
mov
pop
lret
fxam
daa
jae
popf
inc
jns
sti
jae
dec
pop
fcoms
mov
and
mov
add
testb
mov
pop
fidivrl
jne
sbb
jns
mov
mov
xchg
xchg
andl
popa
mov
lods
xor
loop,pt
dec
dec
dec
das
divb
aaa
xor
popa
pop
ja
es
jo
outsl
mov
scas
mov
lcall
scas
sahf
int
pop
rcrl
mov
shlb
scas
jno
xor
cs
out
mov
repz
icebp
loop
es
outsb
call
push
push
mov
aas
jbe
sbb
mov
and
cmp
mov
cmpsl
adcl
dec
cmp
mov
je
cld
fbld
pop
movsl
ret
push
fs
pop
inc
xchg
rcrl
xorb
pop
mov
cmpsl
push
aad
push
pop
cld
xchg
jbe
mov
pop
cli
sti
mov
out
fdivl
ljmp
inc
cmp
add
mov
push
ds
in
jle
xchg
push
xchg
cmp
aad
jnp
pop
cmpb
pop
push
or
fsubr
sub
xchg
adc
ret
test
xor
add
cltd
out
outsb
outsl
mulb
sti
sub
cwtl
mov
pop
or
cs
and
mov
and
rorl
xchg
lods
add
xor
sar
lahf
imul
inc
sub
cmp
mov
orl
jne
cmpsb
mov
fcomps
pop
loopne
xchg
xchg
aaa
loope
cli
mov
jp
xor
and
iret
rcll
inc
pop
test
xlat
mov
cwtl
dec
or
clc
inc
dec
inc
adc
xchg
outsb
mov
push
fnstcw
lret
scas
in
les
xchg
mov
jl
sub
sub
lret
push
pop
and
sbb
repnz
data16
pop
adc
out
add
push
inc
shr
std
sbb
sub
dec
cs
popf
dec
or
mov
testb
xor
subb
cltd
arpl
fs
jno
aam
jge
or
sub
xchg
lea
out
and
mov
mov
scas
ret
pop
mov
pop
mov
imul
dec
movsb
ror
pop
je
sub
jo
outsl
sbb
and
sbb
int3
insl
push
push
mov
and
lds
push
push
repz
loope
push
test
cmp
and
and
addr16
jl
hlt
sub
pusha
in
popf
lods
mov
pop
fld
lret
adc
call
cmpsb
xor
mov
push
scas
movb
cwtl
jl
sub
mov
enter
adc
mov
dec
cmp
cmp
pop
mov
cmp
int
inc
icebp
and
adc
jnp
inc
enter
and
cmp
sub
ret
imul
dec
mov
xchg
lds
or
js
out
mov
repz
cmp
pop
mov
mov
mov
jmp
sub
jmp
push
iret
inc
mov
xor
test
inc
inc
das
lret
jl
xor
mov
leave
lods
clc
ljmp
shll
sbb
test
les
sbb
xchg
loope
sub
sub
jae
lret
jnp
fdivs
mov
fdivrl
add
mov
xchg
lods
jg
cmpsb
out
ret
inc
xchg
mov
pop
mov
pop
movsb
push
xchg
std
es
idivb
sbb
aaa
sbb
and
or
and
scas
sub
mov
sub
dec
add
andl
arpl
cli
and
sbb
gs
push
jge
stc
dec
leave
push
or
mov
pop
or
pop
fwait
cld
xor
stc
xlat
pop
mov
push
lods
jle
pop
pop
fwait
popa
out
cmpsb
sub
jbe
aaa
add
int
frstor
loope
arpl
ljmp
jb
stos
sahf
movsb
roll
mov
lods
mov
daa
xchg
mov
mov
icebp
cmpsb
stos
dec
mul
cltd
adc
lds
pop
mov
insl
dec
aad
or
inc
xor
dec
ret
std
ret
out
and
pop
jnp
adc
push
outsb
mov
dec
std
movsb
bound
jp
inc
insb
incb
clc
mov
call
push
xor
aad
addr16
and
jae
mov
jns
xchg
aam
push
add
xlat
push
cmp
mov
xchg
bound
push
call
and
insl
jb
or
lods
mov
add
xchg
pop
and
jle
jg
insl
into
jns
xlat
dec
xor
xchg
xor
cmp
lahf
iret
or
imul
mov
mov
adc
test
pop
repnz
pop
clc
sbb
cmp
sbb
mov
imul
rorb
and
bound
and
jbe
pop
rcrl
arpl
mov
fisubs
imul
clc
dec
cmp
mov
inc
insl
int
and
cld
stc
mov
dec
inc
inc
loopne
rcl
sbb
add
mov
pop
fmuls
cmpb
or
cmp
dec
pop
mov
gs
mov
shll
test
sub
cmp
outsl
pop
push
das
nop
push
outsb
fisttpl
mov
test
mov
imul
out
cwtl
cltd
cmpsl
and
push
bnd
push
cmc
pusha
insl
push
aaa
mov
pop
add
insl
xorl
es
or
inc
pop
rcrb
xor
mov
jne,pn
push
push
sbb
orl
fnsave
call
push
pop
mov
test
addr16
push
scas
and
jno
and
shrb
cmp
repnz
push
push
xor
fs
push
test
call
sub
in
lods
mov
push
test
enter
pop
mov
inc
adc
decb
adcb
into
sub
xor
out
dec
sub
adc
cmp
dec
aam
clc
or
and
ret
push
daa
cwtl
cltd
rcr
jne
inc
fs
jmp
pop
imul
sbb
mov
mov
sub
add
pop
and
mov
pop
pop
insb
pop
dec
ja
cmpsb
dec
in
sub
rorl
shrl
sub
cmp
or
cld
in
xorb
mov
test
push
jmp
xlat
test
mov
test
ja
jg
mov
fs
fldcw
sahf
insb
ljmp
js
loope
and
fistl
or
out
pop
push
add
jnp
cmp
in
jo
jnp
imul
mov
add
xor
inc
push
lods
jmp
xchg
mov
mov
jno
dec
push
sahf
jg
dec
fistps
xchg
dec
sbb
xor
sti
push
mov
xchg
daa
test
test
push
insb
jbe
pop
lds
xor
or
outsl
adc
shrb
pop
cmp
dec
sub
push
testl
fistps
inc
fisubl
cmp
imul
cld
pop
mov
jbe
jo
sahf
pop
inc
push
jbe
inc
aaa
and
cmpsl
sysenter
ds
xorl
mov
ficompl
mov
inc
leave
addr16
mov
out
imulb
test
lea
or
imul
sub
jbe
and
aaa
inc
add
cmp
in
xor
mov
fwait
add
jne
xchg
mov
pop
je
xchg
out
cmp
dec
out
shrb
jns
add
mov
std
js
push
dec
push
push
mov
or
mov
mulb
jne
push
push
inc
or
sbb
mov
mov
repz
data16
or
ret
dec
inc
je
mov
cmp
lcall
fimuls
xor
loope
or
lret
or
scas
xchg
stos
in
sbb
dec
jns
dec
filds
xor
std
jle
outsl
cmpl
xchg
lcall
stos
out
test
inc
mov
xlat
push
cltd
leave
inc
js
int3
std
push
adc
popa
cmc
adc
into
push
cmpsb
cwtl
sarl
jbe
stc
xor
add
inc
push
mov
adc
pop
xlat
push
aad
xchg
out
pop
iret
scas
mov
xor
dec
mov
cltd
cwtl
sbbl
ror
lcall
aas
bound
or
js
adc
in
mov
sub
add
mov
sti
dec
and
push
aad
std
adc
pop
aad
gs
sub
call
fwait
cli
fdivs
cmpsl
in
sbb
add
jnp
mov
xchg
outsl
icebp
dec
scas
push
insb
pop
fs
sub
lcall
es
out
cwtl
daa
hlt
cmp
inc
jne
notb
mov
jo
icebp
sbb
mov
cli
mul
data16
mov
outsl
mov
pop
mov
cmp
push
andl
aas
sub
dec
fdivs
outsb
mov
pop
mov
inc
popf
push
push
push
cmpb
out
inc
jmp
dec
int
cli
fildll
xchg
loope
mov
insb
jne
ror
push
jg
adc
adc
cmp
lock
push
mov
push
test
in
int
mov
pop
iret
add
xchg
xchg
jecxz
add
pop
mov
adcl
jp
hlt
fs
movsb
iret
pop
push
jl
jmp
push
pop
jbe
ja
jbe
mov
sahf
decb
mov
shld
rolb
popa
xor
lods
cmp
pop
inc
jp
mov
jg
push
xchg
push
scas
lods
cmpsb
jb
out
inc
sbb
call
xchg
push
and
adc
mov
das
insb
push
stc
scas
pop
dec
dec
mov
pushf
cmp
cltd
lcall
lock
ss
repz
das
cmp
inc
repz
jl
xchg
int
loope
xchg
cmp
or
addb
adc
pushf
add
mov
lret
dec
xchg
add
mov
in
stos
and
sub
xchg
addl
fistl
xor
sub
mov
cmp
fscale
sub
pop
xchg
cmc
pop
fnstenv
mov
pop
adc
xor
add
negl
inc
loop
fs
mov
mov
das
adc
inc
mov
ret
dec
sub
daa
leave
cmpb
push
ret
lcall
test
mov
int
ss
sub
shrl
pop
movsl
cpuid
adc
xchg
lcall
cli
push
orl
push
fs
jbe
enter
push
lcall
loopne
mov
pop
cli
mov
mov
xchg
insl
popf
jle
shrb
out
lcall
pop
iret
out
mov
int
subb
adc
sub
les
mov
jne
pop
mov
fnstenv
jp
dec
sub
dec
and
jns
add
lea
push
xchg
pop
mov
je
ret
add
cmp
int
inc
mov
cmp
scas
es
mov
xchg
test
jecxz
or
push
inc
mov
ss
aas
push
data16
adc
rolb
fstl
iret
xchg
int3
nop
and
pop
jmp
xchg
dec
mov
ss
aas
or
lea
adc
addb
clc
cwtl
nop
or
aaa
mov
sub
add
xlat
cmc
sub
inc
sbb
aad
leave
pop
insl
movsl
fmull
mov
push
aaa
or
shlb
jecxz
int3
movsl
sbb
rcr
xchg
js
scas
lea
xor
xor
aaa
push
fmull
les
xor
xchg
xlat
je
aas
aad
lods
mov
cmc
sbb
shl
mov
pop
cmp
mov
fbstp
add
push
jl
sub
mov
pop
dec
fsubrp
xchg
dec
dec
fwait
rol
sti
xchg
push
mov
jnp
scas
mov
rclb
and
add
inc
sti
push
fwait
inc
aam
sub
lret
cmp
xor
pop
inc
sbbb
test
push
js
lods
cmpsb
sbb
xchg
das
sti
in
enter
xchg
pop
jnp
add
pushf
inc
pop
adc
pop
sub
test
or
add
stc
stc
pop
inc
push
jbe
adc
pop
dec
cmp
cmp
inc
inc
aas
iret
xchg
ficompl
jg
in
ret
and
bound
or
out
adc
dec
sar
dec
xchg
faddp
or
push
mov
dec
loop
sub
or
insl
arpl
imul
js
int3
lret
bound
sarb
scas
cmp
dec
inc
pushf
sub
lcall
pop
xor
inc
inc
nop
jno
or
pop
fmuls
std
sahf
and
lock
xor
jno
jb
cmp
bound
lret
js
ljmp
xlat
jns
idivl
test
inc
mov
inc
in
in
ret
movsl
fisubl
and
mov
xchg
fs
adc
rep
mov
add
nop
fcmovne
stos
inc
jl
imul
popa
adc
mov
int
cmp
sbb
ds
repnz
lods
mov
inc
loope
sbb
cmp
push
shlb
sub
les
leave
pop
push
sbb
scas
mov
int3
sub
insb
add
cmp
push
jp
data16
shl
push
rcrl
in
mov
filds
aaa
decl
insb
cmp
stos
xor
inc
dec
out
repz
sahf
sti
pop
addr16
lods
mov
xchg
dec
xchg
sbb
js
lods
dec
inc
stc
fstl
push
mov
add
rolb
out
out
iret
jo
ret
mov
jbe
in
mov
jp
fs
add
push
xchg
cvttps2pi
test
sahf
clc
inc
mov
mov
add
aam
fs
mov
mov
fisubl
pop
and
mov
inc
je
insl
cmp
jne
es
test
xor
aas
inc
repnz
and
mov
scas
and
cmc
cmp
sub
out
mov
jmp
in
xor
fsts
mov
lahf
in
je
aaa
in
stc
sti
xchg
cmc
rcrl
add
dec
in
add
add
mov
cltd
pop
arpl
jg
pop
neg
aaa
in
leave
mov
adc
xor
mov
fcmovne
jno
mov
nop
push
repnz
xor
xor
mov
jb
dec
cmpl
xor
loopne
and
add
lods
dec
adcl
jbe
jmp
push
scas
dec
lret
cmp
jg
jge
neg
mov
sub
test
sahf
subb
push
mov
int
in
dec
into
and
ljmp
jmp
fldcw
repnz
shrb
gs
fiaddl
xor
sub
inc
pop
add
adc
test
out
fwait
loop
jmp
ret
lret
push
mov
mov
ljmp
pop
stos
sbb
inc
shlb
xchg
daa
paddb
outsl
popw
arpl
mov
sbb
xor
push
cmpsl
imul
in
sbb
scas
std
adc
mov
dec
nop
mov
fistpl
imul
scas
int3
pop
lds
sub
faddl
and
dec
dec
xchg
imulb
sbb
repnz
fisubl
or
enter
cmpsl
adc
rolb
loope
sub
add
mov
cltd
lock
push
sbb
cwtl
ljmp
scas
sahf
scas
dec
sub
adc
cmp
cmp
push
mov
stc
shl
xlat
roll
adc
aas
fisubrl
push
cwtl
in
test
adc
cmp
push
mov
xchg
inc
jns
pop
pop
aaa
mov
pop
fdivr
mov
jnp
push
nop
popf
scas
add
and
iret
je
and
push
jmp
xchg
and
xor
jge
iret
jmp
xchg
sub
inc
push
sub
pusha
xor
imul
and
push
adcb
sbb
sahf
faddl
bound
mov
dec
cmp
push
adc
fistpl
xor
je
pop
clc
in
mov
or
mov
insl
mov
sub
sbb
mov
mov
adc
push
or
scas
push
mov
test
mov
ret
push
pop
push
vunpckhps
push
and
popf
mov
push
xor
jp
repz
mov
pop
cmp
hlt
inc
sbb
je
adc
jge
mov
daa
inc
cmpl
pop
pop
pushf
lods
lret
sbb
bound
cmp
aas
adc
mov
int3
aam
mov
push
lods
add
jnp
and
nop
inc
xchg
push
and
mov
cmp
repz
roll
out
lret
out
mov
pop
sub
out
pop
out
stos
enter
in
pop
fidivrl
lret
and
scas
ljmp
cltd
dec
jp
lds
nop
pop
pop
fxch
aaa
shll
mov
pop
mov
push
jnp
scas
loope,pn
push
fsubrl
push
mov
mov
push
xchg
xchg
xchg
ret
ss
push
sbb
mov
pop
aas
in
add
loope
or
xor
pmaxsw
sub
push
add
mov
jnp
dec
push
push
cs
dec
pop
mov
mov
pushf
repnz
cs
fs
push
mov
test
mov
sarl
clc
out
sbb
ret
aaa
lret
xchg
add
es
roll
jno
dec
lahf
add
mov
adc
inc
lods
pop
daa
mov
dec
adc
or
insl
cs
mov
mov
xchg
ja
rol
push
mov
data16
pushf
xchg
mov
push
das
mov
sbb
ret
into
pop
nop
sbb
and
cmp
aas
inc
inc
imul
adc
cld
addr16
push
icebp
fs
fldcw
xchg
jae
xchg
mov
cmp
push
das
sub
xchg
cmp
xchg
movsb
push
pop
movsb
out
sbb
pop
repz
dec
out
mov
push
add
scas
add
pop
jne
push
lahf
addr16
icebp
push
iret
mov
dec
adc
add
xor
hlt
out
cltd
lret
popa
in
adc
repnz
jle
jmp
outsl
mov
pop
jmp
push
jl
adc
out
sahf
sub
lahf
ja
ret
rorl
xchg
push
hlt
in
pop
xchg
fsts
push
mov
or
cmp
xor
repz
adc
jae
pop
xor
ret
in
inc
mov
or
sbb
mov
xor
cld
scas
aas
shr
sbb
sub
sbb
les
mov
push
xchg
dec
sub
cmpl
ds
ja
out
dec
dec
cmc
push
push
cld
movsw
call
test
ret
stc
fs
jp
push
xlat
sbb
mov
inc
xor
sbb
inc
xlat
pop
push
pop
dec
fidivrl
cwtl
inc
test
cltd
loop
push
pop
ret
cmp
and
loopne
cmp
pop
xlat
stos
jp
or
dec
inc
dec
outsb
je
pop
pop
out
sar
popf
ret
pop
or
test
jnp
adc
lods
or
xchg
loope
shll
inc
call
outsb
jl
cmp
push
fs
gs
dec
das
xlat
mov
aad
scas
sbb
loopne
adc
test
in
pop
push
andb
or
jno
pop
repz
ds
add
popf
enter
into
outsl
inc
popa
push
cmc
imul
cmc
test
ja
pop
cmpsb
xchg
sub
inc
lock
mov
push
mov
and
jmp
adc
sub
add
dec
test
pop
xor
shlb
arpl
adc
xlat
and
imul
xchg
jmp
repz
arpl
push
lret
add
mov
jno
sub
add
push
test
inc
dec
insl
subb
mov
lods
pop
aam
dec
out
mov
sub
dec
add
fisubs
add
mov
enter
lahf
scas
inc
add
pop
mov
xchg
jb
lret
test
test
mov
mov
sarb
push
pop
sbb
and
add
pop
mull
es
ret
inc
test
int3
jg
push
stos
imul
in
jmp
inc
jge
adc
mov
insl
pop
adc
into
dec
or
fcom
ja
int3
pushf
push
fucomi
test
lock
cmc
mov
jbe
rolb
xor
cmc
bound
in
iret
push
jmp
mov
fcomps
pop
imul
mov
lock
xchg
mov
inc
mov
mov
and
repz
cmp
xorb
sub
dec
nop
ljmp
test
xorb
fistpll
or
pop
das
xchg
test
in
xor
adc
imul
add
jg
pop
dec
lods
and
mov
fimuls
sbb
push
and
pop
push
roll
daa
neg
test
ss
ret
loope
fistpl
lock
loop
inc
add
and
push
mov
orb
and
sbb
xchg
jecxz
into
ficompl
mov
cmp
bound
das
dec
cmpsb
xchg
les
cmp
sub
mov
jg
inc
adc
repz
inc
aad
sti
popf
scas
mov
pushl
cmc
add
clc
jo
or
test
or
mov
inc
sti
insl
dec
rolb
lcall
test
ret
inc
mov
sbb
imul
mov
ja
hlt
xor
sbb
cmp
negl
xlat
test
arpl
hlt
pop
int
pop
add
mov
mov
inc
jmp
or
cmp
inc
rolb
mov
inc
sti
out
pop
jnp
inc
fmul
push
or
stc
sbb
rcrl
enter
adc
stc
insb
xchg
adc
enter
data16
jmp
and
pop
pop
push
popa
shlb
mov
add
sti
adc
jns
mov
xorl
pop
xchg
and
mov
mov
pop
sbb
adc
push
dec
insb
push
push
in
sbb
in
push
mov
fidivs
mov
dec
and
rcr
js
add
fisttps
popf
es
mov
or
cmp
jbe
lock
sub
ja
fs
push
in
xor
mov
push
shlb
imul
or
fdivr
ret
push
mov
insb
cmp
in
mov
mov
fidivl
push
in
cmpsl
mov
xchg
int
in
mov
sub
es
cmp
ja
pushf
and
in
xor
mov
fnstsw
loopne
jb
outsl
xor
out
das
or
flds
add
in
add
jb
inc
mov
pop
and
pop
xorl
xchg
xchg
sbb
loope
add
pop
push
cmp
push
shl
adc
cmpsl
mov
ds
ret
in
pop
imul
xor
sbb
jecxz
pusha
mov
add
stc
std
xlat
add
adc
cmp
add
mov
mov
mov
pop
sub
adc
repz
in
sbb
fsubrp
js
add
push
lret
rorb
jge
test
data16
push
pop
sub
mov
and
and
add
aas
nop
mov
dec
test
jle
aas
adc
andb
jns
fcmovbe
push
addl
pop
fistps
lcall
jmp
pop
or
sub
mov
inc
mov
xchg
sub
push
and
sub
and
dec
fs
mov
mov
fwait
jle
roll
or
ja
out
test
in
xor
pop
mov
nopl
cmc
addr16
aam
repz
xchg
sti
aad
inc
pop
imul
dec
pop
negb
cmpsl
or
out
loop
dec
mov
push
pop
sbb
xchg
scas
fbstp
dec
and
jns
sbb
inc
xchg
imul
jb
sub
lret
dec
pusha
adc
data16
push
addr16
fidivs
fstps
and
or
lret
cwtl
int3
mov
and
div
lds
call
sub
out
and
movsl
pusha
loop
jmp
sbb
xor
sub
inc
stos
push
xchg
ret
add
cli
cmc
loopne
dec
dec
test
loopne
jle
xor
lret
sub
dec
xchg
inc
mov
fcoms
mov
pushf
imul
mov
adc
push
mov
jl
jmp
adc
es
int3
mov
xchg
rcr
filds
pop
xor
aaa
sub
xchg
jnp
loop
xor
cmpsl
idiv
in
mov
repnz
cmp
or
lret
fistpll
add
push
outsl
popa
icebp
aam
inc
mov
xchg
pop
jl
cwtl
ljmp
inc
jbe
jae
push
and
or
jp
out
lahf
jecxz
xor
loop
test
push
fwait
lret
push
sbb
out
or
xor
sub
movsb
je
adc
inc
sub
dec
lret
push
adc
pop
imul
add
pop
lret
xor
lcall
jg
and
jmp
rcrb
int
dec
aas
clc
push
xchg
fldenv
mov
mov
mov
pushf
dec
leave
sti
pop
outsl
cmpsl
pop
cld
les
imul
add
jne
sarb
jo
aaa
pop
lahf
dec
inc
scas
lret
pop
adc
lret
jecxz
or
jecxz
daa
into
test
add
pusha
mov
cmpsl
lret
fiaddl
jecxz
testb
rclb
jmp
xchg
sbb
rcrl
mov
mov
mov
sub
add
in
testb
pop
mov
pop
addr16
adc
sub
stc
sbb
outsb
cmpsl
or
repz
push
rcrl
xor
xchg
ror
lds
cmc
xchg
shr
inc
daa
sbb
or
and
aas
xchg
xchg
mov
lds
ret
int3
popf
lods
imul
xor
mov
sub
cmp
dec
aas
sbb
mov
xchg
icebp
inc
lea
in
mov
lea
shl
movsl
sub
sub
jg
sbb
nop
mov
add
imul
jns
addr16
mov
xchg
adc
sbb
fidivrl
aas
jo
fwait
inc
sbb
xchg
mov
cli
or
sbb
mov
stc
ds
mov
insb
adc
repz
cli
shlb
adc
push
jns
inc
inc
xchg
dec
lea
pop
or
int3
mov
sub
lahf
sub
fwait
pop
sti
dec
mulb
test
into
bnd
cmpsl
movsb
lea
rclb
loope
popf
aas
divb
int
sbb
int
push
negb
setp
sbb
sub
cmpsl
and
scas
cmpsl
mov
inc
adc
add
dec
out
jns
fs
or
sbb
jmp
lret
push
jnp
pop
mov
mov
adc
rcll
xor
mov
and
mov
rolb
mov
movsl
mov
insl
popa
push
out
push
repz
adc
shlb
in
stc
cmp
and
or
jo
dec
adc
ja
fwait
adc
jp
mov
sti
rorb
adc
les
push
push
cmp
pop
loopne
jg
cmp
adcl
push
sbb
repz
xchg
or
push
sub
loopne
pop
sahf
fists
arpl
popf
lds
ja,pt
pop
xor
adc
test
dec
mov
das
xor
lods
lret
scas
addr16
es
mov
xchg
ret
mov
add
test
test
xor
pop
aad
stos
lret
mov
dec
dec
sbb
fwait
cwtl
ds
jp
or
enter
sahf
pop
popf
mov
mov
ja
push
je
clc
mov
mov
push
and
mov
add
sbb
leave
gs
pop
push
jb
jecxz
adc
stc
scas
mov
xchg
fsubs
add
testb
adc
dec
sar
ret
incl
add
mov
aad
xchg
in
add
mov
sbb
pop
lret
rcll
dec
scas
jge
xchg
loopne
movsl
pop
xchg
outsb
or
lahf
fnstcw
adc
push
or
in
in
jns
pop
add
arpl
mov
pop
cld
sti
and
shlb
out
or
call
addr16
mov
pop
loopne
mov
mov
mov
cmpsl
clc
mov
cwtl
movsb
insl
mov
sub
das
push
inc
stos
daa
xor
cmp
loopne
sbb
sbb
push
stos
add
push
dec
test
popa
subb
dec
push
pop
out
sub
and
ja
xchg
movsl
sahf
push
scas
or
clc
push
pop
mov
or
ret
shrb
rol
mov
xchg
pushf
xor
jg
inc
iret
xchg
fsubs
test
lcall
mov
inc
test
or
mov
mov
fisubrl
nop
add
pop
ljmp
stc
sbb
pop
aad
xchg
je
xor
jns
roll
push
iret
ffreep
js
lcall
xchg
pop
mov
scas
mov
out
adc
ss
insb
sahf
xor
xor
movsl
lock
jp
add
sti
aas
xchg
adc
jg
cmp
repnz
rep
adc
lret
dec
out
mulb
jl
add
or
stos
and
add
iret
mov
jb
or
mov
cmp
mov
pop
movsb
push
sub
add
mov
jns
push
mov
sbb
and
pop
cmp
test
pusha
lcall
push
scas
lock
incl
dec
or
lret
sbb
push
jns
into
fnstsw
adc
and
cmpsb
lock
ds
mov
cmpsb
dec
add
push
inc
popf
and
pop
mov
inc
push
dec
fidivrs
sbb
dec
lock
subl
cmp
add
cltd
push
mov
fwait
sub
and
mov
dec
les
nop
sub
xchg
int3
inc
xchg
and
lea
mov
dec
xlat
rcll
xor
adc
or
sbb
loopne
bound
jne
fsubrl
pusha
daa
cs
inc
addr16
test
sbb
les
movsb
or
jmp
push
fbstp
repnz
sbb
xor
dec
add
push
out
movsl
insb
push
and
sbb
ja
xchg
test
lret
and
add
cmp
xor
cmp
sub
out
jle
xchg
inc
sbb
insb
addr16
rcrl
pop
push
inc
add
mov
jb
mov
scas
add
pop
and
or
sahf
mov
sbb
jnp
pusha
push
and
add
lcall
imul
loopne
iret
mov
xchg
data16
mov
dec
notl
push
and
and
mov
shrl
out
jge
xchg
mov
test
push
sbb
rclb
rcrl
pop
jb
lret
push
dec
stos
mov
fs
arpl
mov
push
push
sub
and
mov
or
push
pop
mov
pop
imul
push
pop
mov
mov
or
xchg
pop
popa
add
mov
data16
inc
movsb
fstp
lods
or
jnp
ljmp
push
outsl
jecxz
stos
dec
arpl
xchg
cmc
mov
jmp
ljmp
lahf
push
sti
imul
rcl
cmp
and
repz
lret
mov
and
repz
cmp
scas
iret
loop
pop
imul
nop
jmp
gs
pop
pushf
or
fwait
xchg
jl
mov
std
pop
repnz
shr
aam
dec
push
and
cwtl
cltd
mov
ljmp
pop
mov
mov
cmp
adc
sub
ret
imul
lds
push
cltd
hlt
sbb
cmp
jp
cltd
cs
in
ss
inc
scas
popf
lret
pop
sahf
aas
repnz
xor
dec
ds
mov
cmovp
xor
jl
loope
sahf
lods
mov
jae
clc
jae
pop
repnz
in
mov
adc
adc
sbb
mov
xchg
mov
mov
add
xor
add
enter
cmp
xchg
or
pop
add
xchg
in
xchg
jl
xchg
shll
call
mov
lcall
pop
mov
inc
hlt
ljmp
jecxz
rol
psubb
mov
jge
into
push
cmpsl
pop
fsubr
and
adc
test
adc
mov
push
out
fstl
imul
ss
sub
jecxz
jb
fs
incl
repz
inc
adc
add
shll
test
pushf
xor
fscale
mov
je
lret
lret
das
mov
xor
mov
cmp
cli
cltd
sahf
sbb
out
sbb
cmp
mov
inc
push
mov
lcall
fcomps
xchg
das
mov
hlt
mov
shl
inc
push
ljmp
pop
fwait
mov
jl
sahf
push
dec
jp
xchg
dec
dec
fsts
pusha
xlat
ss
mov
adc
in
out
lds
sbbl
mov
aas
subl
fdivrs
sub
shl
pop
dec
fisttpll
adc
mov
shl
fisubs
mov
jbe
sub
lcall
xchg
push
cs
jae
loop
in
jno
repz
call
mov
popl
ds
sbb
mov
gs
xchg
cmp
shll
mov
cmp
shrl
add
adc
cs
inc
sbb
push
mov
cmp
ja,pt
ljmp
add
push
mov
xor
dec
mov
stos
sbb
push
dec
inc
dec
pop
xchg
pop
or
in
xor
mov
adc
stos
cmp
jb
aad
and
sub
and
cmp
ret
xor
bound
fwait
cmp
lahf
sub
cmpsl
out
in
jne
imul
mov
xchg
jb
xor
aaa
jmp
sbb
inc
imul
push
les
cli
in
out
shll
ja
insb
inc
test
sbb
add
mov
inc
div
pop
icebp
push
mov
cs
dec
jl
mov
push
repnz
and
lret
or
cmp
aad
sarb
xchg
sub
mov
scas
pushf
cmp
ljmp
sub
roll
ret
insl
call
xor
sub
mov
int
cmp
xchg
mov
addb
fstpt
psubusb
or
je,pn
lret
adc
or
mov
daa
pop
mov
test
add
mov
sub
inc
mov
test
and
and
repz
scas
dec
add
xor
add
mov
jae
into
aaa
pop
mov
popf
xlat
insl
xchg
cld
cld
cs
push
jge
movsl
in
je
fnstcw
test
sub
adc
jmp
or
fwait
nop
cmp
or
adc
movsl
enter
inc
or
jp
daa
mov
outsl
or
or
clc
fcoms
cli
adc
test
mov
dec
or
jae
cmp
jl
and
ds
mov
mov
mov
xchg
pop
mov
pop
pop
xchg
out
std
pushf
or
stos
inc
sub
mov
fmuls
jg
ret
in
adc
es
fidivs
and
arpl
pusha
inc
push
mov
stos
aad
push
push
jmp
jmp
push
lcall
jp
aas
add
gs
adc
lahf
ds
sub
rol
or
call
jo
xchg
mov
arpl
aaa
out
out
sbb
pop
int
cmpb
mov
mov
xchg
popf
stc
lcall
ret
enter
xlat
out
xchg
mov
ljmp
out
push
shrl
pop
mov
cld
test
movsl
xor
jno
lods
mov
push
cmp
ds
mov
aad
ds
adc
aam
sub
aad
xchg
test
insl
insl
adc
xchg
fisttpl
mov
fmuls
jp
icebp
mov
add
mov
add
push
test
cmpsb
inc
mov
jae
push
push
add
xchg
mov
cwtl
enter
out
sub
loop
mov
ficoms
lahf
push
pop
mov
outsb
sub
push
ret
mov
fcmovne
in
xchg
repz
loop
test
and
pop
inc
std
repnz
mov
jne
xlat
mov
stc
outsb
dec
or
cmc
inc
ja
out
or
aaa
pop
mov
sbb
sub
jge
iret
push
roll
or
mov
pop
and
jle
testl
fs
shl
or
js
sti
cwtl
push
shl
addl
jns
cli
sub
scas
dec
fs
lods
xor
sti
push
mov
jge
repz
sub
jb
ljmp
fdivrp
lahf
pop
clc
insb
xor
lret
sbb
cmc
pop
push
jg
xor
pushl
mov
xchg
imul
push
jp
xor
scas
jns
cs
mov
mov
cmp
mov
pop
fwait
mov
mull
xbegin
lret
lods
int3
sbb
lds
sbb
fisttpll
sub
shl
xchg
add
and
popa
cmp
adc
int3
out
pop
jnp
dec
loope
mov
sbb
lret
mov
incl
andl
xorl
insb
stos
arpl
lretw
pop
push
popf
nop
sub
push
fucom
lods
fsubr
sbb
push
je
xor
inc
sbbl
iret
adcl
popa
pop
shrl
sbb
xchg
jp
pop
mov
add
adc
and
push
inc
pop
inc
xchg
daa
dec
push
into
xchg
clc
add
in
icebp
xchg
jno
push
lods
xchg
xchg
testl
pop
xor
xorb
mov
or
repz
aad
cmpsl
imul
sbb
mov
lods
js
lret
sbbb
stos
mov
mov
cmp
pop
jmp
repnz
add
leave
mov
sub
leave
mov
add
pusha
jbe
ds
stos
es
add
es
scas
inc
jae
leave
pop
in
outsw
push
sbb
mov
push
pop
in
jp
loope
insl
add
ja
loopne
hlt
mov
mov
add
inc
fistl
in
push
es
popa
in
icebp
test
sbb
sub
shlb
aas
int3
jmp
mov
jbe
cmp
inc
test
sbb
fdivrl
fistl
enter
popa
stc
cli
fsubl
in
dec
adc
aas
xor
mov
mov
rclb
movsl
jge
cmpsb
sbb
mov
adc
mov
lods
fs
js
adc
les
lret
idivb
push
cmp
andb
daa
cmp
adc
loopne
push
sysenter
xchg
inc
in
add
xchg
sub
jmp
jbe
dec
test
iret
or
out
adc
xor
imul
cmpsl
xchg
dec
jge
ss
mov
enter
scas
jle
ds
popf
das
out
fnstcw
cs
iret
pop
sbb
adc
out
and
jecxz
iret
cwtl
add
repnz
jp
or
in
andb
out
push
and
push
or
outsl
mov
push
out
add
or
stos
mov
dec
jle
mov
cmp
jno
xor
and
push
lret
inc
repz
scas
jp
inc
jg
je
sbbb
jo
lods
push
sti
cmpsl
push
pop
jle
dec
xlat
outsb
ret
outsl
pop
push
aad
cmp
mov
insl
movsl
je
lock
dec
outsl
xor
int3
mov
jae
shlb
mov
out
mov
sub
sub
ds
mov
stos
sbb
jnp
orl
mov
cmp
mov
dec
inc
lcall
push
pop
insb
jle
cs
aam
ficomps
testl
jnp
lock
pop
into
push
push
mov
pop
imul
inc
fsubrp
repnz
jns
insl
add
inc
or
add
push
add
jnp
mov
rcrb
xor
insl
je
decl
pop
out
je
pop
push
fwait
push
mov
jl
mov
stos
fsubr
lret
push
mov
push
lahf
sti
outsl
aaa
mov
adc
lods
mov
and
repz
fs
dec
ret
xchg
pop
test
aaa
sub
adc
out
jne
scas
pop
lods
arpl
scas
mov
pop
cmp
scas
scas
roll
xor
dec
and
loope
lcall
push
cmp
cld
outsl
mov
outsl
clc
in
jge
mov
inc
or
add
incb
dec
jbe
negl
adc
mov
rcrb
dec
xlat
and
mov
lods
xchg
mov
and
jno
mov
mov
push
sar
mov
sbb
mov
inc
dec
call
shlb
dec
mov
and
jne
add
ss
push
xor
test
cli
icebp
mov
lcall
testb
lahf
inc
test
cs
std
cs
or
cli
shrb
xchg
out
cli
adc
bound
pop
or
rcrl
mov
sbb
icebp
inc
loopne
mov
rol
xor
int
lret
xchg
dec
dec
or
stc
or
xor
adc
test
scas
fxch
add
inc
popa
call
cltd
add
pop
imul
cld
cs
pop
mov
ljmp
repz
cmp
pop
cmp
lods
lods
divb
and
mov
cmp
mov
sbb
and
xor
pop
add
mov
test
iret
mov
js
and
movsb
inc
pop
push
jecxz
mov
inc
push
and
xor
rcll
sub
neg
dec
adc
gs
mov
lea
push
push
out
mov
popf
add
cmp
dec
add
insl
ja
outsl
push
inc
or
aaa
sahf
test
sti
in
ret
ss
mov
adc
and
or
shrl
jg
jns,pt
mov
ss
scas
add
push
mov
sub
subb
inc
fcomip
insb
addr16
pusha
adc
repz
arpl
mov
mov
test
fsubrs
adc
decb
cmp
push
mov
inc
inc
fldt
sub
sti
inc
cmp
js
loope
aam
in
fdivp
or
adcl
aas
xor
std
std
dec
or
hlt
imul
pop
repnz
xor
jl
dec
insb
je
xchg
mov
in
cmc
adc
jl
and
mov
pop
movsb
enter
js
sub
shll
sub
aas
xchg
faddl
and
mov
arpl
idivb
and
aaa
mov
loopne
cmp
out
adc
aad
in
rolb
cmp
into
sbb
scas
nop
fs
pop
fcompl
in
or
and
xor
sbb
inc
pop
fdivs
test
idivb
cmpsb
addr16
popf
nop
dec
fsubrs
xchg
jo
scas
mov
mov
int
rorb
cmpsb
push
fsubl
int
int
mov
pop
xchg
cmp
cmp
lock
movsb
sti
adc
jmp
js
popa
push
or
and
insl
clc
pop
cmp
inc
or
cltd
pop
push
xor
js
adc
call
fnstcw
nop
pop
and
adcb
pop
xchg
movsl
push
nop
xor
mov
pop
cmp
fsubl
pop
adc
or
iret
push
outsb
cmp
sbb
adc
hlt
sub
mov
lahf
pusha
imul
int
repnz
cwtl
mov
pop
pop
push
xor
call
shll
push
je
cmp
fs
inc
or
movsl
push
sub
lods
jns
xchg
sbb
div
add
ss
and
test
add
icebp
fiadds
and
fsub
adcb
cmp
scas
test
sahf
cmp
jle
fdivp
test
aad
lret
pop
xchg
jl
test
mov
mov
loop
icebp
in
int
js
loop
adc
inc
shl
mov
adc
pop
xchg
mov
dec
fst
jbe
pop
fs
clc
sti
loopne
test
xor
or
lcall
packssdw
gs
dec
mov
pop
cwtl
test
mov
sbb
repz
inc
ljmp
push
inc
jne
scas
cmp
push
shr
cmp
fildl
xor
or
dec
xchg
dec
int
insl
sbb
jae
enter
das
adc
xchg
mov
test
adc
xor
xchg
into
xor
popf
pop
lock
push
fwait
aam
cli
int
xchg
sbb
mov
insl
enter
nop
ret
xchg
sbb
jle
neg
add
hlt
adc
fdivrs
push
cmp
sbb
sub
lcall
mov
out
mov
dec
mov
and
outsl
orl
jl
xchg
test
sub
ljmp
ljmp
or
in
dec
mov
lret
pop
dec
mov
mov
daa
pop
imul
dec
movsl
mov
push
aaa
pop
outsl
adc
adc
and
and
cmp
sbb
cmp
int3
lret
scas
mov
ds
xchg
mov
scas
lret
mov
leave
jp
or
jge
mov
ss
lock
dec
fdivl
pop
movsb
addr16
insl
xlat
mov
popf
outsb
and
mov
je
es
mov
sahf
sbb
repnz
sbb
mov
test
outsl
js
out
mov
insl
stos
shl
addr16
jmp
cmpsb
out
cmp
test
addb
mov
mov
or
dec
repnz
dec
sub
stos
dec
jg
inc
ret
xchg
lahf
repz
jo
dec
inc
push
cs
test
leave
jge
pop
popa
test
adc
rorl
pop
inc
mov
insb
push
pop
in
pop
jbe
lock
adc
sbb
fstpt
and
cmc
les
mov
gs
lret
testb
sub
pusha
mov
fwait
cmp
or
pop
push
xlat
sub
pop
dec
push
mov
sub
leave
dec
jns
aad
cs
jp
adc
les
fsubl
mov
xchg
movsl
in
mov
push
inc
and
pop
push
sbb
jno
in
test
dec
push
jg
ret
stos
ret
cmc
ljmp
jmp
int
mov
dec
imul
pusha
iret
jge
add
aam
popa
addr16
and
es
push
mov
push
imul
test
stos
decl
iret
mov
test
adc
push
push
imul
popa
cmp
xorb
cmpsl
fnstsw
loope
loopne
xor
xchg
lahf
idivb
repnz
fdivrs
leave
mov
add
xor
out
das
call
stos
js
add
or
cs
nop
and
jnp
shlb
xor
lret
jmp
popf
xor
push
out
loop
sbbl
arpl
inc
lcall
ds
ljmp
push
pop
cmp
cmp
mov
and
cmc
sub
sub
jo
or
aad
and
dec
pop
push
aam
push
mov
lods
dec
xchg
mov
jbe
mov
adc
int
xlat
std
test
pop
jecxz
dec
sbb
fsubp
vshufps
es
mov
aas
inc
sar
or
pop
jle
test
push
sahf
mov
leave
lret
repz
sbb
fnstsw
pop
lea
rol
je
jp
aaa
push
mov
jp
icebp
mov
js
roll
xchg
cmp
mov
shr
lods
out
cmpsl
mov
std
outsb
xor
xchg
int3
mov
out
cmpl
and
or
sbb
jns
cltd
mov
push
pop
mov
cli
mov
or
pop
out
mov
jne
imul
jecxz
aam
scas
cs
stos
icebp
fdivl
adc
mov
add
pop
xchg
dec
in
xchg
mov
enter
stos
add
cmpsl
sub
or
jnp
loope
cmpsb
clc
data16
call
movsb
adc
inc
xchg
imul
xor
adc
jb
push
fsubp
and
xor
mov
addl
and
loopne
int
adc
cmp
xor
ds
out
prefetchw
aam
ror
mul
fs
sub
dec
loop
fincstp
mov
xchg
pop
dec
sahf
int3
loopne
push
ja
lods
xchg
scas
jl
xchg
pop
ss
pop
sarb
inc
jno
xchg
gs
push
insb
jg
pop
push
aam
mov
aam
cmp
in
es
dec
xchg
push
or
adc
fcmovne
mov
lret
adc
imul
scas
bound
inc
lret
sti
mov
aam
pop
dec
mov
pop
mov
add
fldt
pop
insb
xchg
mov
into
fidivs
popa
in
pop
cmp
push
mov
xchg
pusha
fs
arpl
les
inc
or
stos
push
std
jle
ljmp
fisubrl
aas
mov
icebp
pop
or
inc
add
repnz
out
xchg
jle
sbb
mov
loope
or
jmp
fmull
adc
mov
xchg
xchg
push
lret
lret
packuswb
push
mov
fdivrl
ret
pop
imul
into
xor
or
jne
pop
mov
arpl
cmp
sub
in
push
stos
xchg
mov
jnp,pt
xchg
or
out
ret
nop
sbb
cmp
jle
cmp
mov
pop
lods
and
das
aas
mov
faddl
rorl
jnp
sbb
rol
and
int
ja
subps
push
fiadds
xchg
fwait
pop
clc
push
xchg
sahf
cltd
outsb
jecxz
and
lret
arpl
lret
adc
sbb
xor
mov
mov
lods
xchg
sub
pop
and
push
cli
outsb
cmp
repnz
int
je
xchg
jns
stos
out
imul
sub
lods
mov
cmpsb
lock
adc
pop
sub
cs
pop
fidivl
adc
push
jmp
int
aas
js
and
sub
add
testl
fisubl
test
rolb
aad
pop
sub
pop
xchg
push
push
dec
popa
fs
mov
sahf
test
fmul
addr16
and
cltd
mov
jle
jnp
leave
scas
std
and
mov
or
sub
dec
sub
pusha
cli
ss
sbb
out
and
mov
lcall
sbb
in
and
dec
mov
cmp
dec
dec
inc
sbb
adc
add
pop
stos
cmp
lahf
leave
arpl
call
adcb
sub
call
ret
pusha
mov
xchg
mov
cmp
mov
lret
fwait
jl
push
mov
insb
xor
mov
xchg
out
xor
mov
repz
lret
repnz
daa
ja
cli
mov
fwait
xchg
in
and
mov
mov
xchg
std
int
sub
out
call
aaa
push
cltd
adc
mov
dec
cli
cmpsl
fists
inc
cs
shl
mov
sbb
cmp
sub
insl
sub
jl
push
mov
insb
jb
sbb
loope
and
and
jns
sub
xchg
add
scas
xchg
cld
push
sub
mov
add
pushf
mov
inc
lret
jnp
testl
pop
mov
out
push
scas
insb
pushf
pusha
std
sub
movsl
mov
xchg
xchg
ja
fldl2t
fnstsw
pop
mov
and
adc
jns
mov
ficompl
cmpsb
mov
test
dec
minps
aam
lret
cmpsl
dec
dec
mov
cmp
mov
add
push
mov
pop
dec
mov
or
testb
sub
stc
and
movsl
insl
add
in
xor
pop
xchg
mov
inc
mov
out
aad
mov
push
inc
cmp
cmc
nop
push
ss
stos
mov
xor
mov
xor
mov
cmp
cmp
insl
inc
xchg
lock
sbb
in
mov
add
imul
cmp
insb
xor
mov
inc
lret
loopne
jmp
inc
out
or
in
mov
notl
push
mov
cmp
adc
mov
loop
les
test
cld
imul
outsl
sbb
jo
dec
mov
and
mov
rcll
inc
testl
fwait
jbe
mov
pusha
cli
jp
int3
xchg
pusha
xor
mov
dec
or
mov
lret
sub
ds
loope
inc
sub
adc
das
dec
adc
xor
sub
jne
fwait
out
or
jecxz
xchg
fcomi
xor
lret
pop
cmp
movsl
xchg
nop
pusha
mov
sub
mov
jl
fwait
es
xor
data16
mov
out
mov
sbb
sarb
xchg
pop
loope
addl
fwait
mov
stos
add
and
sub
mov
adc
test
ja
jae
leave
icebp
inc
fs
fwait
sub
repz
adcl
add
mov
lahf
xor
lret
add
mov
jecxz
cwtl
sbb
mov
es
jg
jbe
rorb
call
inc
cmp
aas
mov
fiadds
mov
pushf
pop
ja
fisttpl
arpl
scas
lahf
push
xchg
push
and
in
ljmp
mov
sbb
movsl
mov
in
cmpb
clc
push
repz
scas
inc
cmp
sar
adc
ds
ficoms
inc
pusha
xchg
out
inc
add
pop
ss
mov
dec
ss
test
data16
xor
or
imul
fmuls
cmc
insl
daa
cmpsb
data16
mov
mov
inc
mov
and
sbb
adc
sbb
sub
push
cld
data16
mov
xchg
shl
pop
pushf
push
xchg
sbbb
cwtl
inc
shlb
gs
and
jne
jbe
test
cmp
xor
fidivs
jle
cmc
pop
in
dec
sbb
inc
xor
addr16
into
lock
mul
xlat
iret
cltd
or
rorl
imull
adc
dec
mov
aam
mov
inc
fdiv
icebp
mov
lds
out
cmp
xchg
andb
mov
pop
dec
mov
mov
lods
jle
les
xchg
pop
push
lds
adc
mov
loop
xor
popa
outsl
stc
xchg
xor
sbb
scas
jmp
push
cltd
mov
cld
xorl
cltd
mov
and
or
and
hlt
adc
je
and
es
push
cmp
mov
ljmp
pop
jo
cs
in
dec
movsl
or
int3
adc
push
test
out
into
lea
imul
dec
push
jns
jl
inc
adc
cmp
push
cmp
les
add
push
mov
out
xchg
and
xchg
dec
les
out
mov
dec
sub
xchg
push
stos
jp
fldenv
mov
out
jns
jmp
loop
mov
cmovno
sbbb
or
aad
xchg
aad
cltd
xchg
in
cmovp
inc
dec
add
lock
lahf
adc
loope
loope
sbb
insl
xor
fucom
subl
mov
and
ljmp
xor
mov
inc
xlat
push
add
dec
pop
or
jns
mov
sub
push
mov
xor
gs
loopne
adc
fsubl
push
sbb
jbe
sbb
mov
hlt
add
cmp
pop
mov
or
test
inc
sub
lock
or
in
add
add
xchg
xor
test
adc
or
les
xchg
cmp
jle
pop
sbb
popa
movsb
imul
adc
jno
ret
mov
jo
stc
out
cli
ds
push
dec
and
pop
push
push
movsb
xor
repz
inc
add
stos
pop
das
add
jmp
inc
cwtl
pop
jnp
adc
pop
pop
int
mov
inc
negb
dec
and
cli
in
aam
imul
xor
cmc
lahf
pop
xchg
out
sub
into
sbbb
jecxz
xchg
and
xchg
sub
fdivl
adc
leave
mov
cltd
negl
cli
adc
mov
xlat
xchg
xchg
popa
mov
and
xlat
addb
mov
sub
push
cwtl
addb
sub
nop
fwait
adc
ljmp
cli
cmpsb
lods
inc
mov
fwait
cmpsl
sub
sbb
sbb
mov
dec
push
sbb
and
mov
incb
rol
iret
and
adc
jg
dec
sar
jae
stos
xchg
je
dec
mov
lret
push
das
sbb
cmp
movsb
sbb
push
mov
fwait
add
push
gs
aaa
pop
hlt
sbb
or
movsl
pop
insl
jecxz
sbb
mov
jmp
add
sub
xorl
arpl
in
test
sarb
pop
cmp
mov
mov
jno
data16
sbb
lods
mov
mov
dec
xor
mov
sbb
test
lods
test
ljmp
add
outsl
outsl
pop
sahf
scas
and
mov
aaa
dec
sarb
mov
dec
mov
out
and
cmp
inc
pop
fs
out
sub
scas
mov
jbe
popl
mov
sbb
fdivs
je
xlat
jmp
js
pushf
jmp
cmp
mov
mov
fsubrl
dec
xor
fdivs
mov
jmp
adc
cmp
pushf
outsb
aas
cs
ja,pt
sub
push
jb
push
cltd
inc
stos
cs
sbbb
sub
ficoml
sarb
fdivrp
fwait
inc
dec
leave
out
push
stos
sbb
push
cmp
nop
ret
rol
fists
sbb
loope
loopne
mov
cmpl
or
pop
fsubr
inc
jmp
push
loop
call
pop
inc
jmp
scas
lock
fcoms
pop
repnz
adc
dec
push
hlt
pop
cmc
sub
data16
inc
mov
jmp
push
add
cltd
sub
int3
mov
sbb
add
out
loop
popa
rclb
lahf
lret
int
rcrl
add
out
je
cmp
test
jg
lds
mov
rclb
call
inc
loope
outsb
xor
add
nop
sub
adc
cmp
push
push
sub
je
dec
and
mov
pop
xchg
add
sub
mov
mov
pop
mov
pop
int
fs
fs
data16
sbb
lcall
dec
test
aad
subl
sub
mov
aas
and
mov
lods
push
sub
into
dec
jl
sub
test
daa
lods
aaa
dec
insl
xor
jnp
pop
icebp
mov
mov
mov
clc
add
or
icebp
std
push
sbb
lahf
test
jp
pusha
pinsrw
add
gs
mov
pop
xchg
ret
rorb
cmp
mov
js
cmc
rorl
sahf
or
repnz
mov
in
adc
stos
daa
mov
add
xchg
adc
rorl
int
dec
mov
push
xlat
and
push
loope
add
add
ja
fidivs
loop
pop
jb
movsb
dec
xchg
jmp
xor
xor
pop
aad
pop
xor
jnp
in
cmpl
fsubrs
jl
inc
or
sarb
shlb
out
mov
push
jbe
jg
aam
lock
push
bound
fimuls
mov
pop
nop
vpaddsb
sbb
xchg
out
into
fdiv
pop
pop
pop
adc
sub
addr16
mov
xchg
enter
leave
or
leave
loope
in
cltd
filds
into
and
into
add
dec
dec
iret
fstpl
or
mov
inc
jmp
repz
add
loopne
cmp
dec
lahf
loope
enter
rorb
fcmovbe
pusha
jge
mov
test
and
xchg
adc
and
xchg
into
adc
pusha
xchg
xchg
mov
cs
ja
mov
fnsave
fcmovne
mov
xlat
sub
sub
cmp
int
out
cltd
sbb
mov
or
arpl
jge
inc
aam
mov
mov
je
bound
pop
push
adc
add
adc
arpl
xchg
mov
je
mov
sbb
xor
scas
popl
ja
out
lea
or
pop
xchg
or
loop
add
xor
stc
jmp
ss
call
lcall
adc
cmp
xchg
pop
mov
xchg
fidivrs
add
mov
ret
insl
das
ja
pop
mov
movsl
ret
shll
ds
cwtl
adc
jg
clc
mov
in
inc
psrlw
fistps
pop
bnd
pop
pop
and
xchg
or
dec
lret
roll
bound
scas
cmpsb
loopne
orl
pop
mov
ds
movsb
test
sbb
outsb
dec
xor
pop
mov
mov
mov
push
mov
jmp
lret
cmp
jp
and
into
add
pop
inc
aas
push
outsl
lods
fdivr
mov
mov
xor
std
mov
jno
out
in
sbb
mov
inc
shl
cmp
cmpsl
pop
jne
mov
mov
cmp
movsb
mov
inc
mov
movsl
lock
sti
push
imul
mov
stc
push
jo
jnp
mov
outsb
mov
fdivl
in
lret
xor
inc
lods
xchg
mov
test
push
lea
int
cmp
insl
sub
push
enter
stc
xlat
das
sahf
xchg
stos
int
in
mov
out
adc
in
in
out
cmpsl
mov
out
lret
xchg
mov
dec
ja
inc
xchg
sbb
pop
jnp
int3
icebp
adc
cmpsl
lret
add
push
adc
ss
lock
popf
mov
ja
cmp
cmp
stos
sbb
xchg
lds
in
cltd
movsb
pop
and
and
mov
inc
xor
jbe
mov
xor
fdivr
xchg
mov
icebp
stos
das
xchg
sub
enter
stos
xchg
fwait
hlt
cmp
sub
data16
sub
or
xchg
jne
and
add
mov
stos
mov
pop
ss
ljmp
mov
icebp
adc
inc
adc
adc
push
test
push
xchg
lret
rcrb
std
stos
xchg
leave
ficomps
pusha
xchg
imul
jae
scas
fcom
mov
xchg
adc
push
mov
int3
add
or
test
mov
push
add
cwtl
stos
in
es
dec
mov
enter
adc
sti
mov
push
mov
scas
and
xor
push
movb
add
repz
mov
jmp
pop
js
xor
add
sti
sti
sbb
cmp
insb
xchg
inc
push
fistl
movsl
pop
mov
or
ret
lods
mov
pop
in
jp
ljmp
subl
les
jno
inc
sub
push
mov
or
movl
out
clc
sbb
xlat
mov
mov
test
inc
cmp
inc
out
mov
jno
lds
sub
test
inc
dec
iret
and
push
mov
cmpb
push
and
clc
mov
mov
inc
add
mov
es
add
cwtl
sub
leave
outsb
cli
cmpl
mov
sub
call
repnz
push
mov
xchg
das
dec
adc
gs
cmp
lahf
imulb
nop
out
pop
cs
xor
dec
mov
xor
dec
stos
pop
mov
mov
loop
add
lret
cmp
out
out
dec
je
fisubrl
sbb
out
mov
dec
pop
incl
sar
xchg
lahf
gs
cmp
out
cwtl
out
mov
or
adc
out
xchg
insl
sbb
xchg
es
push
and
and
push
sub
add
inc
pop
enter
es
ljmp
les
js
push
sub
mov
adcl
aaa
inc
push
pusha
call
lock
fs
inc
js
xor
ret
clc
sub
call
fs
test
jne
enter
and
add
mov
stos
push
rol
fsts
sti
xor
cli
imul
xchg
lahf
sub
out
mov
call
cwtl
jp
xchg
scas
loop
jae
outsb
or
jl
lods
and
pop
mov
movsl
xchg
xchg
cmpsl
xchg
orl
clc
mov
imul
aas
mov
les
add
push
lea
mov
orb
outsl
jno
repz
cwtl
out
push
jmp
out
lahf
lcall
and
in
lods
lahf
cmp
setp
xor
addr16
pushf
or
gs
out
dec
add
or
inc
sub
inc
mov
movsb
mov
imul
push
mov
push
fistps
xchg
loope
test
outsl
mov
fidivrl
xchg
add
repz
lcall
mov
push
dec
imul
lcall
mov
adc
jle
out
add
sub
es
mov
add
xor
divl
int3
add
adc
and
mov
sahf
hlt
pop
fucomi
dec
data16
add
pop
or
aas
cwtl
pop
rcll
in
enter
movsl
fs
cld
lcall
dec
sbb
ja
arpl
clc
mov
pop
adc
insl
sbb
imul
inc
mov
add
call
je
aad
mov
ljmp
int
mov
jp
cwtl
decl
sub
pmovmskb
or
adc
jmp
sbb
jns
jmp
xor
dec
movsb
lcall
lods
in
sub
popf
inc
or
lea
mov
fcoml
mov
in
dec
dec
dec
fwait
cmpsl
cmp
loopne
clc
push
adc
imul
js
jle
mov
subl
dec
in
testl
ja
mov
paddw
xlat
fldenv
push
mov
ja
mov
push
pop
jnp
lcall
loop
or
xchg
insl
pop
add
push
jno
pop
leave
shl
jb
mov
fisubl
mov
ljmp
sub
movsl
dec
cmp
xchg
push
inc
sbb
mov
push
ss
pop
lret
adc
imul
add
sbb
jnp
jbe
cmpsl
js,pt
mov
pop
lock
mov
xor
or
in
mov
stos
inc
cld
mov
decl
stc
lret
and
lret
jp
icebp
sti
pop
mov
push
jno
push
xor
mov
cmp
or
mov
push
daa
fcmovnu
mov
mov
cmp
outsl
inc
orb
ljmp
fpatan
jl
leave
jle
mov
fimull
pop
push
xchg
sub
lock
lock
xchg
sbbb
mov
ss
in
adc
ret
push
mov
bswap
je
pop
scas
gs
xor
ja
ljmp
popa
cmpsl
jno
jo
hlt
stos
sub
push
mov
pop
xchg
loop
aam
lock
adc
cmp
push
pop
mov
bound
lods
enter
sbb
cmp
sub
pop
test
inc
lock
test
jbe
and
sahf
and
pop
jns
xchg
lods
cmp
mov
sahf
pop
xchg
enter
mov
jo
outsl
outsl
xorl
ss
cmp
gs
adc
daa
lcall
insl
stc
mov
fistpll
sub
jmp
mov
loope
mov
cmp
adc
fnsave
xorl
and
sbbl
xor
pop
pop
into
mov
jmp
mov
in
xor
add
push
leave
arpl
and
pusha
cmp
inc
cwtl
jo
sub
cmp
clc
push
cmp
adc
or
adc
movsb
addb
jge
cli
mov
repz
ret
clc
loopne
js
icebp
xchg
movsl
push
out
test
dec
mov
aaa
add
and
loope
int3
ljmp
in
jne
mov
scas
hlt
xlat
mov
ss
push
ss
popf
inc
push
inc
lock
rolb
icebp
xchg
jl
daa
repz
mov
add
lock
lcall
xor
lods
pop
rcl
jecxz
fisttps
jbe
popa
mov
mov
push
js
and
loop
mov
loope
push
and
sub
adc
fldt
mov
pushf
repz
cmpsb
repz
push
das
or
aam
das
xchg
aaa
and
mov
mov
aad
cmp
or
fsubs
sbb
pushf
push
ja
push
imul
xchg
jle
pop
repz
ret
push
dec
pop
adc
pop
orps
imulb
test
mov
mov
sbb
xchg
cmpsl
xor
in
dec
xchg
or
movsb
sbb
mov
mov
xor
ret
nop
xchg
inc
push
das
or
add
sti
pop
jae
jo
cld
das
aaa
andps
push
jbe
imulb
in
jmp
dec
addr16
test
cmp
adc
outsl
add
jg
bound
cmp
dec
jne
test
stc
xor
es
xchg
inc
shl
inc
cltd
xchg
dec
or
outsl
push
push
push
cltd
test
loope
inc
cmpsl
push
cmp
sbb
adc
pushf
hlt
lret
cmp
mov
cmc
lret
loope
stos
repz
lods
jno
inc
loope
push
mov
fimuls
mov
cmp
js
mov
sbbl
fld
lcall
dec
xchg
pop
xor
ljmp
mov
inc
stos
cmp
call
adcl
or
and
ds
ret
xlat
lret
sub
adc
adc
bnd
push
push
dec
out
lods
adc
jo
lds
xchg
add
idivl
pop
repnz
jae
jne
mov
ret
aad
mov
fildl
mov
pop
jno
jns
clc
jp
and
sbb
sub
jo
in
fidivs
jae
xchg
inc
fstpt
adc
outsl
cmpsb
sarl
insw
stc
inc
out
dec
jae
jo
and
adc
dec
nop
pop
push
mov
add
pop
mov
cmp
pop
popa
imull
mov
scas
inc
inc
and
mov
inc
adc
xor
shlb
or
repnz
sub
test
in
dec
insl
rcr
loopne
or
in
dec
cld
sub
inc
inc
xor
lret
arpl
rcrl
scas
xchg
jne
mov
loopne
rorb
push
sub
mov
test
adc
sti
gs
mov
lds
cmp
daa
or
call
or
scas
test
xlat
js
pop
sub
sub
mov
addb
filds
pushf
or
stos
add
lret
pop
or
inc
mov
and
pusha
push
test
repz
andb
repz
ljmp
cmpsb
mov
scas
or
inc
mov
mov
pop
cmp
mov
scas
inc
adc
sbb
xor
xlat
imul
mov
mov
sahf
inc
subl
inc
imul
mov
sub
std
and
outsl
clc
out
adc
cwtl
push
sbb
mov
andb
int3
mov
in
push
adcl
and
mov
test
push
aaa
jnp
xchg
adc
lods
cmp
shrb
inc
gs
test
pop
stos
sbb
das
ret
lret
mov
pop
test
test
adc
das
in
push
fs
divl
push
dec
and
dec
add
mov
jno
sbb
push
mov
pushf
jbe
jno
mov
bound
fwait
inc
aas
in
pop
rolb
or
loopne
filds
rcrl
adc
mov
outsl
mov
js
jne
dec
aaa
mov
xchg
mov
aam
or
sub
clc
cmp
imul
add
shrb
leave
testb
lahf
sbb
movsl
push
popa
sbb
lcall
lea
mov
roll
mov
or
jecxz
adc
fcomip
xor
scas
mov
sbb
insb
mov
xor
std
ficompl
stc
mov
pop
movswl
pop
dec
int
divb
jmp
ret
sar
xor
or
inc
out
mov
adc
xchg
out
jg
dec
outsb
push
xor
imul
bound
mov
jae
xor
inc
mov
aaa
sub
push
pusha
pop
or
enter
pop
push
xor
sbb
outsb
mov
sub
sbb
daa
mov
sub
je
je
push
dec
xlat
xor
dec
inc
in
mov
pusha
out
inc
mov
ljmp
push
or
addr16
clc
dec
mov
ja
ljmp
iret
xor
dec
mov
jge
jle
sarb
adc
orb
lds
jg
add
dec
mov
daa
shrb
mov
cmp
xor
jno
cmp
int3
mov
mov
fldt
test
insl
leave
lret
lea
lret
cmp
pop
mov
mov
dec
push
sub
sub
inc
loop
inc
fs
sub
push
sbb
cltd
inc
nop
inc
bound
xchg
dec
flds
and
dec
lahf
jno
sub
lret
inc
sub
xchg
push
pop
imulb
sub
enter
pop
sbb
adc
push
pusha
cs
jg
dec
xlat
fsub
and
cs
push
sub
les
cmp
xchg
mov
cmp
cld
outsb
int3
sub
ret
sbb
nop
js
mov
mov
out
and
repz
mov
jl
adc
sahf
or
pop
mov
jbe
sbb
das
jle
imul
jmp
push
inc
push
push
mov
xchg
dec
lcall
sub
pop
clc
xor
and
fiaddl
test
mov
add
out
fadds
inc
enter
dec
lock
inc
out
or
mov
dec
and
lret
lock
outsl
add
add
cld
shll
push
cwtl
nop
cwtl
int
add
and
xor
repnz
xchg
test
push
in
push
ficoml
imul
and
mov
sub
ret
mov
pop
inc
fisttps
ret
jne
adc
xchg
rcll
inc
fstps
mov
push
pop
out
adc
pop
movsl
jbe
xor
inc
sub
daa
arpl
in
xchg
pop
mov
scas
adc
js
push
xor
out
lea
les
jp
loop
lods
shlb
lock
mov
ja
mov
xchg
femms
adc
jmp
adc
rclb
jp
and
and
push
imul
xchg
mov
or
and
cs
test
sub
mov
mov
push
cld
dec
lods
jge
push
xchg
into
nop
push
rcrl
adc
fwait
sahf
sbb
daa
cmp
mov
mov
clc
leave
jg
xor
dec
cmc
popf
lods
mov
aam
jae
popa
pop
sarl
mov
jns
insb
jo
shl
out
xchg
sbb
stc
and
cmp
jnp
lds
xor
lock
sti
aad
cli
mov
popa
dec
mov
xlat
xchg
stc
fdivrl
mov
stos
lock
lcall
fsubrp
in
push
xor
mov
sti
testl
xchg
mov
inc
push
mov
cmp
xchg
les
xchg
and
shl
test
aam
jae
je
imul
dec
mov
loopne
andb
lahf
cmp
pop
push
adc
and
stos
jg
xor
test
imul
decl
aaa
fsubl
adc
push
into
lock
fldl
stos
outsl
mov
jo
dec
imul
aad
repz
nop
es
shl
push
jecxz
pop
js
stos
or
shlb
xor
jno
scas
int3
or
pop
jb
jne
loope
xor
aad
mov
sti
mov
mov
into
pop
push
sub
xchg
sbb
hlt
mov
inc
mov
mov
and
roll
nop
xor
das
imul
add
xchg
orb
push
cmpsb
sbb
inc
inc
xorl
fsubrs
data16
mov
mov
or
lcall
pusha
mov
das
push
jo
cld
lea
push
pop
scas
test
je
push
adc
mov
bound
pop
leave
and
dec
cmpl
mov
dec
lds
pop
push
xchg
push
sbb
stos
je
rcrb
pop
les
cmp
lds
xchg
lret
lret
cmpsb
xchg
mov
pop
ja
push
mov
leave
sub
sbb
and
mov
lea
mov
jne
sub
push
add
cmpsl
add
cmc
int3
inc
mov
push
add
enter
aaa
push
or
iret
xchg
add
or
shrl
push
pop
xchg
cmova
dec
and
inc
jg
xchg
jl
push
push
xchg
xchg
and
and
cltd
push
push
xlat
xor
sbbl
and
sti
test
xor
push
jns
lret
lods
adcb
jg
hlt
flds
aam
push
mov
rcl
jnp
cli
and
inc
scas
sub
jle
out
inc
pop
add
mov
adc
leave
in
add
popf
sahf
mov
add
pushf
mov
bound
mov
pop
cmp
stos
icebp
outsb
inc
mov
cmc
hlt
pushf
movsl
xlat
cmpsl
lret
sub
pop
and
test
into
out
push
popa
js
pushf
lret
dec
jne
ret
or
cmp
fldenv
arpl
pop
nop
pop
outsb
dec
and
jb
repz
push
push
bnd
ret
les
push
loop
jg
adc
lods
inc
sub
hlt
lods
cmpsb
pusha
mov
push
scas
adc
or
loope
push
lea
mov
xlat
pop
ret
mov
jns
divl
push
clc
pcmpgtb
push
hlt
mov
dec
mov
or
ret
loop
mov
xchg
ret
hlt
cwtl
in
sahf
stc
ljmp
dec
clc
sahf
and
mov
jbe
jecxz
xchg
cmp
test
dec
notb
inc
clc
cli
fbstp
sub
pop
xchg
adc
sarl
ror
cmp
repnz
adc
test
pop
jge
call
rorl
imul
xchg
hlt
mov
or
out
dec
and
std
push
push
inc
inc
sahf
dec
mov
test
notb
cli
push
sub
shrb
in
dec
lea
jo
ret
int3
pop
repz
jae
mov
imul
enter
sub
stos
jne
sbb
sub
test
push
aaa
mov
fmul
jg
mov
repz
dec
xor
insb
loop
jmp
imul
cmpl
inc
inc
test
repnz
cmp
jns
out
int
daa
fimull
push
fstpl
dec
jl
enter
bsr
lcall
cmp
or
fisubs
sti
rclb
pop
add
popa
incb
loop
sbb
adc
mov
icebp
fimull
cmp
scas
mov
lahf
jbe
int
pop
push
pop
sub
cmp
bound
ljmp
in
ds
les
jl
out
mov
add
addl
xchg
xorb
pusha
in
adc
fidivrs
add
ret
les
jnp
pushl
out
subl
pop
mov
push
xchg
ret
pushf
inc
mov
xorl
cmp
push
insb
shll
bound
rcrb
fnstcw
xchg
ds
fsubs
sub
xchg
or
clc
cmp
fs
push
rcll
shlb
aad
outsb
stc
jbe
push
das
dec
and
popf
mov
add
je
f2xm1
mov
addr16
add
jnp
xor
out
push
shrb
es
lret
enter
pop
in
scas
jae
hlt
push
mov
dec
add
rcl
and
test
hlt
in
rep
sub
push
lret
ret
jbe
ret
jb
out
mov
cli
and
inc
insb
inc
dec
add
cmp
xchg
call
xorps
loopne
add
and
cmp
movsl
jp
pop
add
ret
clc
add
pop
dec
inc
mov
sbbl
lods
sub
sti
cs
add
sahf
push
dec
outsl
sub
hlt
fidivl
lea
adc
add
cmp
es
pop
data16
and
ret
ret
fwait
or
jl
testb
sti
jne
sbb
loopne
sub
xchg
int3
fistps
lcall
repnz
pop
mov
xchg
push
lcall
cwtl
mov
mov
and
lds
mov
lahf
dec
mov
mov
loop
fisttpll
test
xchg
sbb
outsb
or
fsubs
xor
lret
stc
int
push
shl
xor
aas
fs
mov
sbb
in
cmc
dec
pop
and
ja
test
cld
xlat
imul
jg
xor
xchg
scas
pusha
out
xchg
fiaddl
xorb
jg
mov
jnp
inc
push
sbb
pop
popa
fildll
imul
ret
test
scas
mov
dec
cli
sub
mov
jae
dec
outsl
stc
sbb
mov
jecxz
and
hlt
dec
and
rorb
cli
ret
rcrb
mov
scas
or
hlt
shll
xlat
jg
mov
inc
int3
pop
mov
mov
adc
add
int
and
and
into
sti
mov
aaa
lds
pop
loopne
dec
out
loopne
fcoms
mov
jmp
lret
xchg
aaa
cld
jae
push
mov
adc
in
mov
inc
adcl
int3
inc
shl
adc
test
scas
in
test
out
jnp
sbb
push
cwtl
shl
xchg
pop
bound
fiadds
lcall
push
jb
dec
mov
mov
neg
or
and
cmp
inc
lret
test
mov
loope
pop
pushf
xchg
enter
sahf
sbbb
pusha
sub
pusha
dec
lret
cmp
lods
nop
push
push
or
test
data16
add
lcall
push
or
popf
fisubs
push
pop
cli
or
add
shlb
in
jae
or
sahf
cmp
adc
mov
mov
add
pop
xchg
test
nop
xchg
and
mov
jecxz
jne
inc
into
cli
enter
dec
inc
mov
cmp
mov
jo
test
xchg
mov
cmpb
fstp
sahf
push
and
std
mov
popa
mov
ds
aaa
fidivrl
shlb
or
sbb
fcom
data16
push
mov
add
mov
pop
sbb
mov
mov
sub
in
cmc
jne
pop
xchg
pop
data16
sbb
dec
scas
dec
xor
daa
lds
xor
xchg
into
mov
not
and
cmp
sub
push
push
push
adc
jae
popf
pop
pop
gs
inc
in
jecxz
mov
pop
inc
rol
xchg
bound
xchg
dec
mov
jmp
pop
sub
jp
imul
addr16
push
add
test
dec
nop
out
test
mov
nop
pop
nop
inc
popa
mov
fucom
dec
test
ljmp
mov
and
push
aas
fildl
mov
and
jecxz
dec
jmp
mov
mov
in
push
lahf
rcrb
pop
push
sub
sub
idiv
xchg
popf
aaa
and
xchg
fmul
subl
xchg
lock
inc
roll
mov
and
cmpl
pushf
roll
and
dec
and
sub
dec
and
xchg
or
repz
and
or
sbb
sbb
xor
push
mov
aas
int3
fsubs
pop
mov
fildll
fdivr
xchg
push
mov
adc
push
lret
cmp
ss
jge
mov
icebp
xchg
add
adc
sub
mov
in
mov
lods
cmp
jnp
cmp
push
and
cltd
cmp
push
lea
dec
movsl
ret
sti
jp
pop
dec
test
or
mov
lret
shl
lret
sub
cmp
ret
push
in
dec
sub
sbb
cmp
inc
mov
adc
mov
jno
xchg
lret
fdivrl
aaa
sti
cmpsl
movsb
push
mov
repz
mov
mov
jecxz
push
xor
inc
stc
sahf
fdivp
cltd
cmp
cmp
pop
popf
inc
mov
jns
jns
sbb
cs
dec
sub
dec
adc
mov
push
jb
jb
inc
dec
in
daa
rorb
sbb
cmp
lret
mov
push
mov
lahf
mov
jecxz
mov
std
in
inc
push
xchg
jmp
xlat
loopne
imul
int3
xor
cmpsb
dec
daa
pushf
jnp
sahf
rclb
cmp
vucomiss
add
and
imul
inc
pop
sahf
adc
out
inc
mov
xchg
or
jl
loop
sbb
imul
fimuls
std
jns
popf
fwait
pop
mov
test
dec
xchg
lahf
inc
jno
imul
das
inc
rcrb
or
push
push
shrl
filds
stos
cmp
scas
sti
jecxz
sti
adc
mov
inc
xchg
shrb
cltd
adc
rorl
sub
hlt
je
jmp
push
dec
fnstsw
ljmp
or
mov
jns
mov
adc
pushf
aad
adc
fst
jp
mov
mov
sbb
int
mov
jns
mov
mov
fwait
ret
adc
ret
and
adc
loopne
or
and
out
xor
mov
rcrl
push
stc
arpl
mov
jns
or
dec
mov
lret
mov
lea
std
mov
xchg
or
outsl
push
sarb
test
imul
arpl
mov
add
mov
or
ret
mov
into
fisubrl
das
sbb
adc
sub
fisttpll
dec
xchg
lcall
or
mov
rcrb
mov
add
test
add
mov
ficompl
out
lret
xchg
inc
or
in
pop
lds
jg
out
mov
lret
out
mov
es
mov
push
mov
loop
out
push
hlt
test
xchg
adc
sbb
loopne
roll
out
or
dec
xor
and
addr16
xchg
aaa
or
inc
cs
shl
mov
jo
mov
cmpsl
fistpll
sbb
leave
push
mov
arpl
cmpsl
xor
cmovg
xchg
arpl
cmpb
out
stc
mov
shl
jo
mov
addr16
jg
in
add
in
add
sarl
stc
sbb
xchg
xchg
sbb
ror
stos
mov
cmp
ret
inc
cmp
sbb
cmp
mov
shrl
and
popf
pusha
outsb
push
sti
cmp
in
fcomip
xchg
cltd
aam
xchg
xlat
cmp
outsl
adc
sub
lret
push
ljmp
push
cmp
adc
mov
mov
xor
mov
mov
lret
mov
and
into
and
out
sti
hlt
push
hlt
insb
xlat
int
jl
outsb
nop
xchg
cmpl
addl
or
sbb
mov
jo
int3
inc
roll
push
repz
lods
push
outsb
pop
push
xlat
call
push
loope
mov
outsl
inc
cmp
jae
pop
mov
sub
in
mov
dec
cmp
push
adc
int
jg
push
imul
mov
xchg
shl
xchg
sbb
ja
aad
pop
and
dec
cmp
jns
ficoms
imul
fmull
divb
mov
xor
lret
push
enter
sahf
push
xchg
xor
add
or
testl
sbb
cmp
arpl
popf
push
sub
adc
test
cld
mov
xchg
pop
cli
push
sub
pop
sbb
out
in
cmp
mov
lods
sub
xor
xchg
sub
mov
lock
sub
rcr
xor
lea
push
add
dec
ja
icebp
mov
inc
and
test
idivl
mov
pop
lret
loop
aas
sub
arpl
in
sbb
jae
mov
jno
cli
ror
mov
out
xchg
jecxz,pt
sub
inc
push
in
sbbl
test
cmp
mov
push
cmpb
sbb
xchg
push
sub
mov
pusha
test
arpl
mov
and
jl
lahf
push
inc
mov
mov
mov
mov
cmp
jo
fnsave
scas
cmp
mov
jge
das
out
sbb
and
fildll
bound
pop
sub
xchg
fsubp
icebp
sub
xchg
mov
sbb
sub
mov
push
mov
insb
push
and
mov
shll
cwtl
rol
das
inc
jg
arpl
test
sbb
cld
in
jmp
popa
xchg
cmc
mov
in
and
jns
push
movsb
aam
cmpsb
lods
shlb
xlat
ljmp
jmp
leave
add
jp
sub
lods
mov
rol
and
daa
aas
xchg
aam
iret
insb
mov
popa
sub
xchg
mov
cmp
insl
arpl
iret
fistps
sti
jmp
xor
inc
jo
out
inc
xchg
pop
js
test
lock
ja
dec
cmc
sub
add
xor
sbb
fadds
orb
dec
xor
arpl
xchg
scas
adc
cli
test
iret
or
shll
into
stos
adc
sbb
mov
into
xor
jecxz
ja
xchg
push
xchg
into
xorl
jl
mov
ljmp
stc
and
xchg
outsl
pop
push
add
and
adc
jmp
sbb
hlt
pusha
rcrb
scas
xor
cmp
fdivrl
popa
test
repz
cmp
nop
sahf
xchg
cmp
mov
pop
cwtl
jecxz
inc
insl
inc
jo
or
insb
jg
adcb
xchg
pop
insb
inc
je
pop
out
sub
adc
cmp
mov
sarb
loope
out
es
adc
and
movsb
aad
popf
loopne
push
add
jp
cmpsl
pushf
int
sbb
int3
cltd
call
mov
dec
add
jle
leave
sub
inc
mov
scas
pop
loop
pop
sub
jl
xchg
gs
adc
pop
cwtl
repnz
jp
add
mov
popl
sub
pop
push
or
rorb
aas
jl
and
pop
push
jmp
add
insb
mov
pop
movsb
pop
mov
loopne
test
xchg
ret
push
fsubrl
cmp
in
xor
adc
push
or
mov
mov
mov
stc
addr16
jl
int3
xor
int
fists
aas
add
xor
stos
stos
out
inc
push
fucom
push
pop
and
les
adc
loop
fildll
mov
cmpsl
jmp
mov
pop
dec
fwait
mov
push
pop
pop
ret
jno
in
fldenv
sbb
and
and
cmpsl
loop
inc
jb
push
cltd
and
jmp
lea
jae
or
fwait
cmp
rcl
push
push
jp
xchg
clc
or
andl
lods
inc
fisubrl
leave
pop
and
sbb
int3
sub
cs
and
xor
push
cmp
out
lods
fs
mov
cwtl
cld
inc
jl
sahf
jle
ret
int
sbb
sti
ficomps
xchg
cwtl
sbb
int
push
mov
xchg
call
jg
mov
repz
mov
movsl
inc
clc
jae
arpl
cs
jae
mov
ret
mov
push
rcl
xchg
das
dec
fiaddl
xor
loop
jmp
insb
fwait
sbb
ret
lahf
pop
dec
xchg
in
or
jb
sti
sub
pop
add
stos
lods
push
sub
rolb
sub
sub
insl
mov
push
lcall
push
inc
push
hlt
jnp
cmpsl
and
push
mov
pop
sarb
mov
repnz
addr16
pop
mov
or
sarl
fwait
sub
int3
js
testb
imul
lock
in
xor
and
inc
sub
cmc
adc
inc
lahf
push
stos
and
sbb
mov
mov
int3
sti
adc
dec
mov
cmp
outsl
or
mov
jmp
fs
test
cli
popf
imul
mov
cmc
sarb
cmpsl
push
lret
mov
leave
jo
xchg
sbb
rorb
mov
scas
dec
jmp
ret
and
negb
shlb
inc
divl
push
pop
sti
jle
mov
jbe
pusha
pop
xor
jns
fiadds
push
mov
jl
mov
pusha
les
out
pop
mov
daa
mov
leave
inc
pop
icebp
shlb
dec
xor
add
pop
rcll
fs
loop
repnz
repz
cmovge
xchg
mov
sub
mov
jge
cmp
ret
sbb
into
in
lret
in
fabs
jmp
pop
sub
repnz
sub
mov
or
fbstp
mov
sub
mov
addr16
cld
cmpsb
cmp
dec
pop
sbb
mov
shll
sti
inc
jnp
leave
mov
je
cmp
repnz
dec
add
xorl
jbe
cmp
pop
or
xchg
push
pushf
lahf
xor
mov
shrb
xchg
cs
test
test
adc
mov
jbe
xchg
in
ds
mov
sub
sbb
xchg
std
mov
push
scas
sbb
insb
cmpl
pushf
in
dec
sti
in
ljmp
cltd
mov
insl
sub
lods
and
and
aaa
and
ret
inc
cmc
xor
js
dec
mov
pop
cs
push
dec
sbb
mov
dec
cwtl
cmp
dec
pushw
mov
out
xchg
mov
loop
xor
add
fidivrs
loope
in
dec
dec
xor
sub
bound
movsb
fcoms
sbb
movsb
lcall
jnp
jns
movsb
imul
sbb
fisubl
ljmp
mov
xchg
inc
xor
xchg
push
cmpl
stc
xchg
icebp
mov
inc
mov
in
mov
xor
loopne
fists
in
mov
cmc
jbe
inc
mov
lods
mov
jge
mov
hlt
mov
ss
mov
jbe
insl
xor
popf
inc
and
dec
subb
cmpsb
adc
mov
jle
jae
lret
sbb
add
sbb
fisubrl
fwait
jbe
out
inc
mov
repz
mov
push
adc
outsb
es
call
stc
fidivrl
in
sub
cmp
pop
push
shll
pop
pop
push
add
xchg
jae
in
fsubp
xor
in
iret
sbb
inc
loope
jp
sub
xor
jecxz
cltd
jp
scas
loope
mov
mov
pop
pop
clc
inc
dec
mov
and
outsb
mov
or
and
std
inc
faddl
mov
mov
jle
int3
mov
mov
sbb
addr16
loop
idivl
dec
mov
lea
mov
fidivrs
inc
sub
ret
imul
pop
sbb
pop
xchg
xchg
mov
stos
aad
mov
pop
popa
std
jbe,pn
sarb
jo
shll
and
push
jmp
das
jo
lds
cmc
fwait
jp
jp
bound
les
jge
je
xor
jo
and
iret
mov
fisubs
sbb
adc
mov
xchg
aas
xchg
arpl
pop
jnp
into
lret
mov
shl
ljmp
aam
aas
mov
jle
movsl
adc
enter
xor
mov
mov
lds
and
into
inc
mov
xorb
mov
mov
push
xchg
mov
loopne
add
xchg
test
mov
adc
ljmp
cmp
jo
movsb
mov
dec
push
aaa
imul
fnstsw
mov
sub
pop
lods
lock
repz
lret
out
loope
xorl
pop
jp
cmp
dec
ret
or
xchg
add
sub
out
fcoml
test
mov
jecxz
test
xchg
movsb
sbb
pop
jmp
inc
sahf
jno
adcl
jne
push
out
pop
mov
mov
inc
lcall
inc
jo
mov
aaa
rolb
push
lock
or
dec
repnz
ja
inc
std
cmp
pop
mov
into
aam
and
inc
jge
mov
cmp
movsb
test
pop
push
mov
add
push
lret
jmp
das
sub
mov
cmp
ja
notl
insb
pop
or
orl
fstps
sbb
sub
dec
mov
or
mov
out
dec
pop
int3
fildll
lcall
cmp
push
add
in
cmp
sahf
test
test
out
fisttpll
mov
push
pusha
push
ret
sahf
lock
adc
mov
fisubrl
cmp
jbe
loopne
mov
cld
in
inc
stos
xchg
ret
xchg
pop
mov
loope
and
repz
and
pushf
sarl
jbe
popa
aaa
punpcklwd
ret
sub
and
adc
mov
inc
cs
dec
addr16
sub
leave
addr16
mov
push
call
addr16
mov
aad
into
push
jo
lea
cmc
lods
fisttps
lods
jecxz
and
and
cwtl
pusha
mov
lcall
mov
jecxz
xor
out
sbb
add
hlt
cmp
repz
jne
fucomip
or
fsubrp
mov
push
push
ret
xchg
movsb
in
ret
and
call
adc
sub
loope
lret
outsb
outsl
aas
orl
sbb
nop
jns
mov
add
dec
sahf
jle
addr16
sbb
add
cmpsb
popf
mov
sbb
pop
loopne
stos
js
or
adc
mov
in
jae
and
push
cs
push
loop
ss
push
dec
add
mov
inc
cli
add
dec
xchg
aaa
xchg
stc
cs
push
inc
mov
shll
sbb
je
push
push
mov
nop
mov
mov
inc
decb
sbb
rcrb
pop
push
repz
dec
add
outsl
mov
xchg
or
mov
adc
dec
mov
pop
out
fidivl
xor
lcall
loope
mov
les
xor
sbb
jle
aas
das
mov
push
loopne
or
or
jns
and
mov
enter
xor
out
cmpsb
sbb
inc
outsl
mov
xchg
cmpsl
adc
out
pop
add
mov
sar
or
dec
lcall
or
insb
mov
or
imul
aad
aaa
pusha
sub
push
das
pop
adc
out
cmpsl
xor
and
cmp
xor
cmp
ror
adc
dec
idivb
jp
leave
mov
je
jg
test
dec
pop
dec
stc
dec
or
inc
mov
fildll
add
imul
xchg
dec
sbb
push
pop
aaa
iret
lahf
cli
mov
je
mov
push
xchg
cwtl
fwait
jbe
fidivs
lret
pop
mov
ret
cmpsb
test
movsl
and
sahf
sbb
loopne,pt
aam
dec
dec
inc
and
xlat
gs
mov
in
push
mov
xchg
sub
std
jnp
enter
dec
popa
xchg
clc
cld
xchg
push
jp
jae
lock
jnp
push
cmpsl
inc
das
xor
negb
mov
pushf
mov
mov
call
sub
mov
pop
loopne
push
pop
jp
cmp
shlb
push
clc
subl
or
cmp
bound
jl
mov
mov
jns
stos
xchg
sahf
jns
add
mov
push
xchg
fwait
mov
xchg
js
aaa
aaa
iret
loope
cld
lret
repnz
cmpl
pushf
int
dec
cmc
xorb
pop
pop
pop
or
sbb
mov
andb
dec
daa
pop
fwait
push
cmp
push
xor
sahf
or
xchg
fidivrs
scas
or
mov
adc
mov
into
packssdw
or
xlat
flds
rol
fwait
push
sbb
lock
mov
jge
jae
inc
ljmp
xor
sar
push
call
stos
adc
cmpsb
mov
jo
mov
adc
dec
xor
jp
mov
xchg
js
nop
inc
cmp
inc
cmp
cmp
dec
in
or
lea
jbe
jo
mov
inc
push
je
inc
mov
stos
iret
pop
pop
push
sub
ja
divl
or
dec
cmc
data16
and
push
jnp
outsb
shrl
dec
push
and
loope
shl
sbb
out
out
sbb
and
aaa
in
xchg
add
scas
mov
dec
das
fcomps
cmpsl
pop
cmp
ljmp
leave
out
inc
push
or
outsb
pop
mov
dec
jns
mov
cld
scas
stos
sbb
test
out
push
rclb
outsl
bound
cli
inc
lods
cmpsb
cmp
cmp
dec
aaa
adc
push
icebp
loop
push
in
inc
pop
sbb
dec
push
mov
fincstp
xchg
sbb
fnstsw
rorl
sbb
sub
xor
js
scas
inc
xor
mov
lret
sbb
fildll
in
jnp
lcall
popa
jne
clc
mov
data16
scas
xor
ja
jne
daa
adc
add
cltd
xchg
call
sarl
pop
jle
mov
inc
js
addb
fistpll
jg
mov
xchg
lods
test
sbbb
outsl
mov
cmpl
sbb
xchg
mov
dec
push
lret
adc
imul
faddp
mov
xlat
xlat
daa
addl
enter
push
ret
xorb
je
jbe
cmp
std
test
or
inc
sti
add
or
f2xm1
ds
pusha
insl
cmp
outsl
mov
dec
sub
or
jl
xor
inc
inc
mov
shlb
leave
add
sub
int3
outsl
jmp
or
call
cmp
push
mov
sbb
repnz
mov
fwait
jmp
movsb
inc
lock
test
sbb
ljmp
ds
sbb
jbe
lea
mov
movsb
lea
pop
rcll
mov
xchg
into
icebp
icebp
pop
gs
push
cld
mov
xchg
fwait
inc
ffreep
add
mov
push
adc
add
inc
call
dec
daa
lret
pop
adc
fcom
push
sbb
popa
sub
daa
cmp
in
test
gs
daa
add
or
mov
aam
in
inc
xor
inc
push
add
inc
rcll
mov
cmc
out
mov
sbb
into
popf
mov
pop
or
insb
cmp
jl
pop
sub
lret
fcoms
int
das
add
add
and
xor
adc
lahf
out
add
or
xor
lcall
dec
filds
cmp
mov
lea
stos
cli
loop
stc
jl
in
sarl
sub
jle
lret
mov
jmp
in
dec
lock
jmp
icebp
mov
hlt
push
mov
fbld
outsb
into
icebp
cwtl
push
loop
mov
movsl
mov
sarl
xor
sub
add
int3
ficomps
fldenv
or
das
push
or
sti
div
sbb
jns
shl
aad
sbb
movsl
xchg
mov
mov
xor
inc
sub
pop
imul
adc
std
jle
sub
scas
mov
mov
test
and
mov
pusha
sti
or
enter
pop
jno
insl
sti
jbe
jle
test
xlat
pop
pop
or
stos
mov
fnsave
pop
or
jmp
pop
daa
and
dec
push
cmpsb
mov
out
enter
and
ret
adc
divb
fimuls
cli
jno
sti
mov
and
hlt
or
fistl
sbb
cmp
mov
je
scas
test
dec
jno
aam
addr16
mov
test
sbb
and
sti
std
pop
out
pop
shr
inc
fxam
aam
push
push
aam
sbb
aas
std
jno
xchg
outsb
outsl
xorb
and
inc
add
adc
fnsave
lahf
adc
stos
dec
ja
mov
mov
pop
jnp
mov
adc
dec
mov
sub
out
cld
push
inc
icebp
stos
sub
das
dec
pop
addr16
or
push
out
push
into
out
pusha
push
dec
sub
repz
mov
push
jae
stc
shr
aas
and
int3
in
fidivrl
popa
inc
adc
pop
mov
xchg
mov
and
stc
push
cmp
or
gs
leave
sub
adc
popa
bnd
jo
jae
out
mov
xor
shlb
loop
in
lret
xchg
xchg
adc
pop
inc
fdiv
insl
pop
xchg
shrb
in
popa
xchg
cmp
mov
push
arpl
hlt
mov
mov
mov
push
leave
mov
push
mov
imul
cwtl
push
aas
mov
out
push
ret
inc
and
adc
addr16
pop
cld
push
ljmp
int
mov
in
int3
mov
push
jns
mov
push
call
xchg
mov
loop
add
xchg
int
cmp
xchg
and
insl
or
xor
jmp
add
mov
jle
stos
add
cmp
pop
pop
iret
lds
jp
mov
scas
xor
shrb
lcall
stos
dec
orb
stc
xor
popf
pop
and
jb
mov
scas
cmp
sub
shll
out
mov
xlat
aaa
test
jmp
jo
test
push
lahf
jnp
push
fidivl
sub
mov
fidivrl
push
xorb
mov
hlt
cmpsl
push
or
sbb
cld
cwtl
push
inc
inc
loope
fistl
xor
push
jo
push
and
pop
cmc
test
or
popa
inc
xchg
mov
mov
or
clc
xchg
push
test
mov
push
stos
jg
cmp
lods
inc
adc
jle
mov
scas
sub
in
daa
xor
dec
clc
cmpsb
movsl
mov
int
cmp
dec
bnd
notl
lods
add
nop
insb
pop
rcr
xor
sub
flds
sahf
xor
ljmp
jle
push
jnp,pt
enter
or
insb
mov
addr16
pusha
jp
jne
push
ja
in
jne
or
cmp
cltd
leave
fnstenv
dec
addb
fistpl
adc
fstp
negb
lret
dec
and
mov
sub
daa
jns
cmpsl
cltd
and
inc
in
pop
lahf
mov
jno
inc
dec
xor
ret
orl
push
lods
loop
test
push
jne
lods
push
mov
jae
and
lock
imul
loopne
jle
add
sub
gs
xor
inc
out
xor
adcb
mov
add
push
stos
leave
outsl
popf
pop
xor
push
and
ret
mov
sub
mov
and
pop
push
lods
pop
inc
lcall
fldt
xor
pop
out
loop
call
xchg
cmpsb
dec
lret
mov
fcoml
mov
fidivl
jno
xchg
mov
jmp
dec
ds
xchg
fwait
movsb
cs
fcomp
dec
push
mov
stos
adc
sub
and
lahf
ret
and
push
mov
jo
bts
adc
popf
mov
test
in
in
xlat
inc
add
mov
cmp
mov
mov
jmp
out
xorl
mov
pop
idiv
aam
jno
adc
movsl
popa
push
les
push
pop
rclb
scas
push
nop
sub
push
push
push
out
jmp
scas
popf
and
jae
outsl
ret
repz
mov
paddw
cmp
insb
ret
mov
int
jmp
xchg
into
mov
js
push
stos
scas
aaa
add
add
je
and
fsubl
out
arpl
sbb
or
jae
mov
push
push
sub
stc
push
int3
lds
push
popf
bound
popf
push
xchg
xchg
pop
in
pop
lods
dec
out
out
mov
push
test
pop
idivl
mov
cs
popf
ror
dec
xchg
xchg
jns
pushf
mov
add
arpl
movb
sub
xor
insl
pop
mov
adc
sbb
pop
sub
shll
dec
mov
fisubrl
inc
loop
cmpsl
fidivs
mov
sbb
fists
add
pop
pusha
jge
pop
push
cltd
mov
stos
icebp
mov
xor
push
fcmovnu
movsb
stos
push
popa
icebp
push
cmpsl
jnp
cli
ret
je
pop
out
sbb
lds
add
xchg
or
lods
push
andl
xchg
push
xchg
inc
pushf
dec
repz
arpl
xchg
cmp
movswl
ret
in
jae
mov
push
adc
fiadds
jae
cmp
sahf
enter
pushf
xor
cmp
or
push
mov
imul
outsl
shll
cwtl
add
sbb
dec
es
jl
into
outsl
mov
xchg
rorl
test
imul
fst
and
cwtl
cli
out
je
sbb
mov
rorl
or
or
xchg
xchg
std
inc
dec
jbe
cmp
enter
stos
loopne
push
scas
or
mov
test
test
cs
movsl
lcall
fidivrs
lock
dec
leave
sti
mov
cltd
imul
xor
lea
imul
iret
pop
or
or
lahf
ds
inc
rorl
in
shlb
add
inc
adc
call
insb
xchg
jl
and
pop
mov
repz
or
xchg
cmp
cld
xchg
add
jecxz
sbb
ja
std
xor
jno
ret
lods
lcall
adc
sub
test
in
push
mov
jmp
jl
xor
and
pop
stos
add
stos
xchg
lahf
mov
les
sub
cmp
lcall
sbb
je
xor
in
push
je
cmp
sarl
xor
and
dec
or
loope
ss
inc
and
fisubl
jp
cmp
sub
dec
mov
mov
loope
add
inc
stos
aaa
rcll
xchg
cmp
addl
push
dec
xchg
and
idiv
out
and
cmpsb
roll
scas
push
or
fcos
inc
mov
pop
insl
repz
fisttpll
and
mov
lods
rorl
sub
outsb
pop
pop
push
or
jo
or
lret
adc
out
cmp
push
add
add
shlb
add
rolb
ret
loope
pop
inc
dec
dec
testl
shr
ret
sti
shlb
lods
jle
push
icebp
pop
dec
mov
xchg
in
or
dec
cs
inc
loopne
add
loope
ror
push
add
inc
lcall
cltd
fdivs
imul
jge
jne
aam
gs
out
xchg
xchg
int3
ljmp
mov
adc
insl
insb
push
fisttpll
inc
in
daa
sub
inc
pop
cmc
shl
jnp
or
adc
faddl
jns
mov
shlb
mov
push
aaa
xchg
orb
cmp
out
dec
cld
pushl
sub
sahf
mov
movsb
inc
das
sub
pop
xorl
pop
adc
push
cmpsb
jne
xor
sub
aam
fbstp
mov
jg
rcrl
lods
cmp
jbe
jnp
push
jg
lret
std
adc
mov
andb
icebp
and
rol
lret
dec
lds
pushf
jae
xlat
cmp
pop
cmc
in
add
out
mov
dec
pop
push
add
and
rolb
cli
cmp
in
add
push
daa
push
jmp
aad
repnz
sbb
mov
jae
dec
rcll
mov
xor
andps
mov
mov
fs
insl
pop
or
lds
xchg
xchg
test
adc
cmp
cmp
lods
inc
mov
nop
pop
cmp
sub
gs
xchg
cmp
push
add
mov
test
fwait
cmp
fwait
xor
mov
adc
push
incb
roll
lcall
lock
ss
daa
xchg
sbb
jp
push
dec
outsl
pop
sbb
hlt
paddsw
adc
sub
scas
cld
lea
push
mov
pusha
dec
cld
aaa
and
pop
adc
cmpsl
pop
movsl
or
push
out
or
sbb
rclb
pop
cmc
lds
in
adc
sub
mov
adc
mov
or
jge
ds
xor
mov
outsl
mov
nop
adc
es
sbb
jbe
and
call
fdivs
clc
das
sub
mov
mov
fwait
push
push
bound
cmp
push
popa
jge
loopne
sbb
out
sbb
cltd
dec
xor
pop
xor
aaa
test
test
jbe
xchg
shr
mov
pop
xchg
ret
jo
fsubrs
aas
mov
adc
out
ror
cmpsl
mov
aad
and
mov
sti
mov
sti
loopne
cmp
sub
mov
cltd
sahf
loope
mov
inc
and
push
sbbb
pop
and
xchg
stos
or
lret
lret
push
push
jl
add
inc
sarl
mov
jle
ficomps
fistpl
fildll
cmc
pop
lret
xor
orl
and
mov
pop
mov
cwtl
xor
aas
repnz
push
ficoml
jnp
out
scas
fmull
sbb
repnz
ljmp
aaa
add
or
and
arpl
faddl
lea
xchg
js
rcll
jbe
fsubr
sub
push
sarb
fdivr
mov
lods
xchg
subl
push
dec
rcrb
stos
mov
ret
cld
data16
arpl
cmpsl
xor
movsb
and
jno
sub
and
push
pop
fldl
xchg
xchg
dec
pop
or
call
and
mov
xchg
pop
aad
fwait
xchg
loopne
ss
fnsave
lods
sar
sub
mov
jge
clc
push
in
daa
sbb
and
inc
adcb
jns
sub
lea
xor
iret
cmp
push
call
xchg
fwait
imul
xchg
pushf
sub
mov
push
outsb
xor
pop
mov
cmp
push
dec
repnz
xchg
stc
or
out
fwait
std
pop
push
outsl
lahf
mov
pop
out
mov
add
mov
sarl
add
or
add
mov
lret
fwait
int3
std
xchg
jbe
push
cmc
in
pop
subl
or
and
add
adc
mov
nop
mov
addr16
test
in
jmp
pushl
mov
aam
lahf
or
jl
aas
lcall
sub
xor
jnp,pt
mov
ja
lods
sbb
adc
xchg
stos
sbb
test
fdivrl
cld
mov
xchg
std
fld
adc
dec
sub
rolb
jle
dec
int
pop
add
mov
cmp
or
cwtl
iret
add
pop
icebp
loopne
daa
repnz
mov
out
mov
pop
push
or
stc
fwait
xor
or
mov
int3
sbb
or
or
daa
dec
jns
push
mov
fninit
mov
cld
cltd
mov
xor
inc
mov
jge
pop
cmp
add
add
lods
adc
bound
subl
imul
cmp
pop
jmp
mov
ret
xchg
adc
bound
cmp
in
cmp
adc
adc
jle
movsb
rolb
pushf
mov
sbb
push
cli
fwait
ret
test
push
das
cmpsl
jne
mov
daa
cltd
mov
fcmovnu
push
je
dec
sub
jb
stos
scas
outsl
insb
es
xchg
inc
pop
dec
pop
in
jg
aas
add
cmpb
sbb
add
sub
inc
cld
sahf
cltd
sbb
das
test
rcl
lea
cmc
repz
adc
pop
lock
lods
and
jnp
pop
xor
int3
mov
and
cmpl
stos
insl
rol
repnz
fsubr
mov
in
and
cmc
mov
and
push
cs
sbb
mov
fmuls
push
add
test
lds
mov
jp
or
fistl
jle
pop
ret
jo
jae
in
and
jg
adc
fbld
mov
dec
lods
out
ret
cmp
push
jmp
cmp
out
stc
orb
jne
test
xchg
fnstcw
xor
lret
bound
mov
add
inc
aad
shlb
fcompl
jbe
push
push
incl
shrl
lea
pop
push
movsb
imul
sub
lret
lahf
push
stos
xchg
inc
xor
pusha
mov
shr
cld
adc
enter
push
cwtl
mov
dec
fcomp
call
and
jl
test
in
cltd
test
lods
adc
push
ret
sub
fisttpl
leave
mov
push
insb
iret
xchg
push
addb
lret
inc
sti
pop
mov
sub
mov
fsubl
cmpsb
fnstenv
xor
and
sbb
push
test
adc
mov
pop
and
gs
mov
fisubl
or
add
jo
or
jnp
and
xor
les
cltd
dec
out
mov
test
cmp
cmpsb
mov
inc
repz
push
pop
lret
add
mov
sarl
cs
mov
sbb
jnp
pusha
dec
jle
add
or
out
maxps
jno
pop
jbe
enter
or
push
mov
fwait
xchg
or
jmp
cmp
test
imull
daa
xorl
ja
mov
fnstcw
adcb
jns
jns
jle
test
push
addr16
stos
xchg
cmpsb
push
insb
pop
sbb
iret
sub
stos
cmpsb
stos
mov
mov
pop
stos
jle
mov
xchg
imul
out
jne
pop
or
pop
push
das
mul
sbb
cmpb
je
push
pop
mov
lock
mov
or
inc
ficoms
outsb
jmp
mov
and
inc
sti
loope
mov
shrl
test
out
cmp
sub
aad
add
xchg
mov
outsl
add
or
inc
inc
xor
nop
sub
mov
mov
add
xchg
adc
adc
xor
sti
dec
cmp
xchg
outsb
pop
insl
out
in
dec
sbb
jbe
or
imul
loop
in
sub
add
ds
xchg
mov
add
push
jmp
es
aam
lods
cmp
dec
test
xchg
jb
loop
fbld
add
and
lock
icebp
sub
pop
mov
jmp
imul
lahf
pop
sbb
movsb
xor
adc
mov
sbb
ret
push
inc
jnp
jp
push
mov
or
xchg
mov
xor
dec
fwait
push
popf
lcall
cs
aad
nop
push
push
dec
jb
mov
jnp
jno
addr16
xchg
jb
ror
test
xor
stos
mov
or
cmpb
push
xchg
mov
lret
sahf
imul
and
popf
enter
lods
cmpsb
movsl
xchg
es
fsubs
pop
pop
jg
add
ret
push
sti
xlat
or
add
shll
test
cmp
out
gs
pop
cld
cmp
lods
cmpsl
and
xor
and
xchg
xchg
in
or
ss
out
pop
mov
sbb
loope
and
ret
inc
cmpsl
test
xchg
sub
into
mov
pusha
inc
push
mov
in
mov
cli
mov
mov
movsb
dec
dec
dec
jne
mov
pop
sub
insb
pop
sub
sbb
inc
cmp
mov
sbb
mov
cmpsb
scas
adc
sahf
xor
shrb
addb
add
mov
outsb
adc
orl
pop
push
or
mov
sub
aas
fadds
lds
sbb
cmp
arpl
minps
add
mov
mov
lods
xchg
lret
sbb
data16
mov
jg
shll
mov
aam
hlt
add
notl
jnp
push
inc
push
pop
xchg
jbe
pop
add
ficoms
jge
in
popa
cwtl
sub
gs
push
mov
inc
inc
movb
push
daa
xchg
fidivrl
fstp
aas
subl
into
add
cmp
lahf
std
lds
lret
push
jb
fdivp
aad
bound
dec
xchg
add
mov
sub
xor
fsubrs
or
mov
ds
xchg
inc
sbb
and
enter
add
dec
jg
mov
xchg
or
and
mov
lds
mov
imul
cmpsl
testl
and
sbb
sbb
xchg
jne
or
shlb
xchg
outsb
movsl
xchg
mov
xchg
test
jp
outsb
fisubl
add
adc
iret
adc
insl
jns
mov
sbb
adc
filds
popa
divb
sub
pop
mov
push
mov
sar
cmp
jb
nop
push
int3
cmc
mov
cmpsl
cmp
nop
mov
dec
imul
outsb
imul
mov
mov
jecxz
popf
repnz
ror
std
jno
adc
ret
sbb
loopne
push
dec
imul
stos
loop
into
and
pop
mov
jbe
push
adc
sbb
inc
push
push
inc
es
ja
imul
sahf
loope
push
aaa
mov
push
add
cmp
mov
inc
aas
leave
cwtl
pusha
push
imul
push
and
jbe
pop
in
imul
add
jno
call
xor
popf
mov
cmp
jg
daa
xor
cmpsl
mov
stos
and
push
fdivl
mov
movsb
and
pusha
mov
push
push
insl
pop
add
imul
rcr
push
fsubrl
lret
dec
loopne
mov
xchg
pop
pop
loopne
push
dec
aaa
and
aam
movb
and
mov
je
daa
test
sbb
sahf
data16
mov
rcrl
sti
in
pushf
xor
fmuls
daa
mov
mov
xor
lcall
jns
imul
sbb
mov
pushf
and
pop
mov
mov
mov
xor
add
sbb
icebp
jl
ror
out
xlat
pop
xchg
fiaddl
jbe
mov
out
mov
or
popf
cmp
mov
inc
xor
cld
imul
jmp
stos
or
aaa
aam
in
pop
cli
mov
fisubrs
push
pop
cmpsb
push
rol
mov
mov
add
push
int
and
mov
idivb
cmc
mov
sar
or
lds
pop
shll
adc
jne
pop
arpl
sbb
lea
leave
outsl
in
in
pop
mov
dec
jle
cs
xchg
enter
loope
adcl
stc
jns
dec
xchg
lods
fldl
and
jns
fldl
fsubrp
or
sarb
jns
sbb
inc
movsb
xchg
pop
xchg
add
fsubrl
cmpsb
arpl
push
je
add
sahf
inc
lahf
xchg
icebp
or
jno
jge
pop
xor
imulb
hlt
or
insb
insl
addb
in
subb
inc
addr16
out
mov
shl
in
pop
cmp
fadds
or
adc
mov
iret
lret
sbb
mov
data16
dec
or
inc
sub
xchg
push
xor
inc
lock
add
les
sub
pop
inc
cltd
sahf
leave
and
mov
clc
dec
stos
popf
clc
cld
aaa
jle
cli
jae
sbbb
jp
and
ret
and
pop
mov
jne
lods
xchg
icebp
mov
jno
lock
fildl
jge
sarl
aaa
in
testl
lret
es
mov
out
jbe
add
iret
aaa
pop
mov
cmp
mov
stos
add
and
dec
add
es
xchg
xchg
arpl
ljmp
adc
idivb
int
cmp
out
jg
cmp
adc
aad
cmp
mov
mov
jmp
sub
cmp
push
cltd
loop
shl
push
idivb
xor
pop
add
and
cmpsl
out
sbb
fstpt
mov
jge
les
scas
inc
mov
loop
cmp
dec
out
mov
mov
stos
push
inc
lds
cmp
outsl
fidivrl
dec
movsl
mov
or
lcall
aad
mov
sar
inc
out
xchg
int3
sub
pop
in
rolb
cmc
push
sub
sbb
icebp
xchg
sub
lods
xor
add
outsb
dec
mov
js
inc
nop
inc
mov
cmpsb
push
mov
cltd
dec
sbb
and
cs
aam
adc
ja
cmpsl
adc
iret
scas
adc
pop
ja
shll
repnz
aad
add
rol
andb
ss
add
mov
lret
sbb
push
adc
xchg
sub
mov
jb
aam
cmc
pop
jl
popf
jp
lock
cli
mov
popa
es
daa
nop
pop
dec
push
out
xor
sbbl
xchg
mov
lcall
cs
enter
popf
xchg
out
mov
lock
test
out
je
mov
shlb
stc
es
in
loop
cmp
cmovge
rcrb
ficoms
sbb
mov
in
addb
mov
push
out
leave
mov
push
mov
test
test
dec
cmpsl
sar
rcr
and
sub
or
lock
jmp
push
lret
es
mov
and
rorl
inc
int
fdiv
sbb
cld
or
xchg
stc
ds
cmp
mov
rolb
pop
push
xor
shll
sbb
or
cmp
xlat
xor
lods
inc
js
mov
test
or
out
or
xchg
arpl
ret
cmp
inc
jle
lock
sub
or
push
jns
cli
dec
mov
mov
ss
lds
ret
stc
insl
or
enter
cmp
mov
icebp
push
out
repz
enter
data16
arpl
or
sbb
cmp
icebp
jge
xchg
repnz
mov
test
pop
cs
cmp
jp
sub
mov
jge
insl
push
sbb
pop
mov
jb
mov
daa
dec
mov
repnz
inc
je
pop
dec
lahf
stos
roll
test
fs
mov
fwait
mov
les
enter
push
xor
andl
and
jp
loope
inc
ja
adc
stos
mov
sbb
xchg
test
int3
in
cs
xor
or
xchg
jo
push
push
jno
jnp
out
jo
ret
std
mov
push
pop
cmp
xchg
push
aaa
mov
xor
repz
or
dec
negb
ja
leave
decb
out
shll
int3
cmp
sbb
dec
cmp
aas
lahf
pop
stos
sbb
out
pop
sahf
sub
push
test
mov
addl
fmul
jecxz
inc
lock
pushaw
aam
pop
and
jecxz
lahf
add
lahf
out
icebp
sub
lcall
insl
stos
cli
cmpb
jl
out
ret
cmc
mov
hlt
repz
cmp
pop
test
dec
ret
fldenv
push
push
es
dec
aaa
clc
rcl
int3
xchg
fcomps
fdivrl
out
xor
push
rorb
jl
lea
rorb
mov
rcrl
pop
in
xchg
movsb
inc
jne
mov
imul
jecxz
bound
xchg
stc
stos
mov
adc
andl
divl
jge
jns
daa
jo
push
pop
imul
sarb
mov
jecxz
pop
xchg
out
dec
ja
jne
shll
int3
jb
pop
dec
imul
xchg
addr16
jle
popa
rcrb
imul
ljmp
adc
xor
or
add
sub
inc
dec
testl
hlt
mov
jne
fwait
loope
sbb
mov
fisubl
aaa
por
mov
mov
mov
and
cmp
mov
or
or
and
in
sub
sbb
adc
std
inc
dec
jbe
aaa
xor
inc
subl
fistpl
sbb
loopne
xchg
push
sub
mov
push
pop
out
cmc
inc
add
loope
jge
shrb
adc
movsl
mov
sahf
cmp
int
inc
sub
pop
xor
jns
and
sub
popa
scas
std
mov
mov
mov
sub
pop
movsl
sti
insb
cwtl
pop
ficompl
cld
adc
mov
nop
cmp
loop
out
pop
cmp
xor
cmp
pop
scas
sub
scas
cmp
leave
outsb
add
xor
xor
jl
mov
ret
mov
enter
pop
daa
dec
adcl
push
cmpsl
dec
mov
mov
mov
out
cmp
cs
mov
sbb
add
hlt
jp
out
xchg
jge
hlt
lds
xor
push
xchg
enter
out
push
sbb
pop
push
pop
xchg
movsb
dec
pop
push
cmp
sbb
fmul
cmp
adcb
cmp
pop
xchg
push
jns
or
les
addr16
adc
fists
testl
ret
pop
outsb
insl
mov
movsb
je
push
xor
sahf
or
insb
pop
jge
push
mov
mov
sbb
push
bnd
rcl
out
xor
xchg
pop
push
clc
call
jnp
pop
fs
ficompl
pop
lcall
sub
inc
mov
sahf
jae
cmp
xchg
fcoml
loop
hlt
mov
push
mov
cmp
repnz
icebp
scas
pushf
mov
cmp
lahf
mov
in
lret
lcall
bound
jg
jl
ljmp
inc
icebp
mov
lahf
and
xor
cwtl
inc
les
icebp
sbb
nop
mov
movsl
or
fldenv
jno
add
jge
push
fwait
lret
xor
xor
mov
imul
sub
add
mov
xor
dec
repz
push
dec
loop
push
or
or
xor
mov
shr
sbb
cli
mov
pop
pop
pop
sarl
xor
xchg
or
inc
push
in
call
in
fsubl
sahf
xchg
shll
xlat
icebp
test
scas
loopne
sub
mov
data16
out
mov
bound
jo
xor
pop
inc
cld
sarl
xchg
movsl
jp
adc
jp
testl
jne
hlt
popa
icebp
ss
dec
out
sbb
repnz
aad
sub
fldenv
dec
adc
inc
arpl
pextrw
nop
jg
cmp
subl
addb
cmp
aaa
and
test
in
sbb
mov
test
rcrl
dec
cmp
or
test
bound
mov
inc
data16
arpl
rolb
mov
loop
xchg
je
int
mov
hlt
push
push
push
mov
out
ficompl
and
mov
lcall
filds
adc
cmp
stos
outsb
fildl
test
or
xor
cmp
and
push
cmp
dec
out
mov
and
mov
sbb
arpl
cs
repz
inc
sarb
add
add
stos
outsb
mov
dec
sub
pop
or
xchg
cmp
inc
pop
sahf
xor
insl
rcll
call
mov
scas
inc
xor
jge
nop
xor
int
sub
cmc
out
hlt
jns
test
rorb
inc
add
pop
repnz
ja
ret
push
xchg
inc
jle
cvtpi2ps
dec
inc
mov
sub
rcrl
mov
out
mov
std
and
int
subl
pusha
mov
sub
ljmp
imul
outsb
ret
xchg
popa
jg
cmp
push
pusha
imul
daa
sti
cltd
push
fdivs
adc
jge
add
jge
sub
es
shlb
dec
insl
dec
lcall
lahf
xor
stos
xchg
or
jb
jge
fstp
push
enter
inc
hlt
sub
adc
mov
push
ret
adc
mov
inc
sub
jmp
xchg
lods
xor
insl
inc
out
or
jbe
sub
sub
fimull
pusha
cmp
vaddsubpd
loope
arpl
lds
mov
jbe
add
dec
and
dec
cmp
jg
jmp
int3
andb
movsb
cli
sub
pusha
negl
cli
dec
addl
cltd
sbb
cmpb
and
out
andl
inc
push
shr
sbb
adc
flds
push
lods
pop
mov
mov
adc
loope
sub
lods
jne
cli
mov
push
cmp
add
push
jg
xchg
xchg
sbb
and
lret
pop
lret
mov
pushfw
push
aaa
cmp
jmp
enter
xchg
repnz
mov
fldl
popf
fadds
or
jne
mov
jno
shll
cmpsb
ja
mov
jnp
stos
bound
ss
jge
mov
pusha
xchg
shlb
je
pushf
push
ret
add
add
insb
shlb
loope
and
add
in
sub
dec
sbb
sbb
jb
aad
dec
push
testb
add
jl
iret
idivl
jb
loop
mov
ret
jmp
sbb
shll
adc
movsl
imul
pop
lods
int3
push
dec
das
ret
addr16
mov
dec
push
out
mov
dec
mov
or
fmul
push
push
cmp
dec
mov
xchg
popf
pop
mov
fbstp
mov
sub
or
pop
jno
sub
outsl
in
pop
jno
stc
inc
xor
scas
adc
jae
jg
push
out
sub
adc
and
fdivl
inc
pop
sahf
sub
lock
lds
pushf
push
stos
dec
lcall
icebp
testl
mov
scas
jg
icebp
jo
cmp
std
pusha
dec
dec
popa
pop
pop
dec
mov
xchg
mov
popa
movsl
jl
lahf
rcr
fidivrs
in
add
cltd
and
ret
popa
ljmp
jmp
arpl
daa
or
xor
jae
pop
adc
and
repz
std
add
sahf
push
repnz
mov
jne
in
and
xchg
pop
sub
aam
xchg
out
xchg
pop
xor
cmp
movb
imul
adc
ja
mov
inc
dec
fdivp
jp
mov
inc
lret
jl
out
popf
mov
mov
pop
jg
cmp
in
jg
jne
xchg
push
or
xchg
gs
mov
inc
pop
sub
cmovns
out
shrl
add
mov
jl
cmpsb
cmpsb
scas
pusha
and
add
xchg
sbb
mov
stc
xor
push
mov
lahf
sbb
scas
sub
jae
lds
xchg
jb
push
insl
inc
ds
lahf
es
mull
dec
sti
sbb
popa
push
mov
daa
pop
and
mov
and
je
test
insl
xchg
dec
lods
add
fs
call
pushf
fcmovnu
sbbl
mov
and
or
mov
add
dec
jae
pop
adc
push
lret
xchg
ret
adc
gs
in
aas
mov
mov
cltd
mov
xchg
jo
mov
xchg
jb
cmp
sub
jmp
xchg
rorl
in
pushf
into
xor
in
xchg
pop
movsl
outsl
or
cmpsb
addr16
out
cs
xchg
pop
clc
jecxz
xchg
cmp
push
mov
lods
loope
out
inc
and
mov
mov
cltd
test
mov
push
adc
std
je
inc
jnp
movsl
mov
push
cmp
les
ret
cld
data16
in
mov
adc
js
pop
leave
test
out
push
movsl
push
xchg
add
pop
fcomps
popa
divb
pop
mov
hlt
out
aaa
fadd
cmc
ror
sbb
sbb
xchg
lds
out
xchg
mov
cmpl
jecxz
icebp
lock
and
dec
inc
inc
sub
xor
iret
sub
cmp
mov
sarb
je
fbld
sbb
adc
pop
jp
push
adc
sti
lret
shlb
and
mov
add
loope
push
pop
out
mov
fisubrl
mov
pusha
adc
rcrb
jmp
cmp
popa
hlt
cmp
jae
pusha
mov
pop
pop
push
ljmp
inc
adc
movsl
add
jg
aas
pop
mov
rcr
pushf
aas
fisubs
insl
sarl
inc
and
mull
dec
jb
leave
rcrb
fs
inc
or
enter
sub
inc
mov
mov
popa
decl
pop
fstpt
or
jecxz
sub
loop
cmp
test
push
orb
sbb
out
and
cltd
pop
pop
gs
into
lock
int
mov
in
dec
add
mov
inc
sbb
lahf
xor
fldenv
xor
cmp
addr16
mov
mov
data16
cli
movl
icebp
and
mov
sub
sbb
dec
ret
lret
lock
mov
js
or
loope
cmp
stos
pop
mov
inc
push
mov
test
jp
popa
lea
leave
cmp
insl
in
cmp
loopne,pn
inc
test
mov
pop
inc
fsubs
lret
aas
outsb
sbb
sub
mov
sub
sarl
nop
cmp
cmp
jae
loope
iret
cmp
sti
mov
in
push
jp
ja
jl
std
clc
jmp
fiaddl
aam
inc
es
fs
inc
fs
push
mov
clc
mov
jo
adc
push
xchg
lods
imul
fisttpl
lret
adc
fdivr
lods
push
xor
jae
out
cmp
inc
imul
mov
hlt
hlt
mov
xchg
or
and
sub
mov
dec
jne
xchg
mov
fsubl
pop
push
inc
push
addr16
pop
mov
mov
add
jnp
mov
pop
les
and
inc
sbb
jb,pn
popa
into
repz
sbbb
xor
and
ficoml
daa
and
mov
xchg
and
ja
rcrl
pushf
pop
jne
mov
sbb
adc
out
aaa
aas
push
xchg
mov
or
pop
sub
cli
pop
dec
push
dec
adc
lea
lcall
push
mov
movsl
rol
aas
rol
subb
pop
adc
push
cmp
outsb
push
mov
call
xor
sarl
fldcw
sarl
pop
mov
lret
loope
imul
add
mov
xchg
pop
gs
cmp
arpl
cs
movsl
mov
add
cmp
addl
stos
mov
push
and
imul
xchg
xor
or
cmp
mov
fldlg2
xor
daa
les
in
leave
and
call
fcomps
cltd
mov
dec
xchg
and
mov
stos
aam
mov
or
ror
inc
xor
mov
das
push
pop
xor
pop
fdivs
pop
dec
mov
daa
int
pusha
pushf
jbe
outsl
shl
jmp
or
and
test
pop
outsb
push
push
popa
mov
gs
cmpsl
jo
inc
fwait
xchg
imull
xlat
cltd
shll
scas
sbb
ret
fs
xchg
inc
xchg
sub
fdivrs
leave
inc
push
mov
inc
sahf
push
push
jb
push
aam
in
mov
jle
divb
xchg
cmpsb
inc
dec
imul
cmp
xchg
pop
inc
and
or
push
fdivs
push
xchg
int3
xor
mov
fnstsw
jnp
frstor
xchg
or
cwtl
out
adc
inc
adc
les
mov
std
push
push
pop
int3
arpl
or
cmc
cmp
repz
ret
mov
mov
jl
add
lahf
inc
jae
cmp
pop
out
lret
mov
xchg
dec
jno
fiadds
mov
or
movsb
pop
cmp
pop
out
xchg
sub
movsl
push
popf
aam
in
int3
fldz
or
pop
dec
in
mov
push
insb
cmpsl
es
mov
inc
iret
inc
sbb
mov
sbb
mov
mov
cmovo
iret
sbb
xor
jle
push
jae
fcomp
sbb
cli
divl
test
dec
adc
sub
movb
xlat
fisubs
stc
aaa
ss
jb
sahf
push
jmp
jbe
ss
xchg
xchg
sbb
xor
jns
jle
adc
ss
pop
inc
pop
push
push
scas
movsl
and
stc
ret
repnz
pushf
xor
sub
pop
iret
dec
jno
mov
fsts
cmp
xchg
mov
bound
jle
or
xchg
subb
push
divl
js
leave
shrl
lea
sbb
inc
sbbl
popl
shrb
cmp
outsl
cltd
add
ds
subb
sbb
ja
lods
shll
mov
test
push
icebp
scas
out
cmc
pop
cmp
or
rcrb
subb
inc
and
jmp
push
inc
xor
aad
cli
bswap
adc
ds
stos
sub
push
adc
xor
cli
ja
mov
cs
insl
lods
ds
inc
pop
das
ljmp
int
pop
fldcw
fwait
and
mov
movsl
jno
inc
mov
adc
scas
pop
fidivrl
mov
mov
stc
cmp
insb
jmp
sub
mov
dec
adc
fbstp
dec
test
icebp
dec
ret
pop
fsts
cmpl
xchg
dec
mov
xchg
das
rcrl
lret
ret
inc
lahf
xchg
out
data16
mov
les
lret
mov
xchg
call
mov
mov
mov
aas
pop
out
mov
sub
xchg
lock
bound
sbb
shl
jg
add
xchg
cli
test
fisttpll
sbb
daa
ja
fst
pop
insb
mov
mov
adc
mov
or
xchg
add
cmpb
outsl
imul
nop
cld
jp
fs
push
popa
ljmp
inc
xchg
push
mov
xor
cmp
inc
jg
andb
push
pusha
out
mov
loopne
leave
cmp
fdivl
cmc
xchg
xchg
or
jns
xchg
cmp
xor
and
inc
xor
test
mov
and
test
xor
add
shl
in
mov
cwtl
cmp
int3
mov
mov
push
outsb
push
imul
nop
pop
leave
push
push
rcl
push
mov
mov
jmp
mov
mov
xchg
sti
jb
adc
push
adc
cmp
or
scas
cwtl
scas
jb
sub
addb
call
xor
fstl
test
jl
das
negb
dec
mov
push
cltd
in
jo
xchg
imul
fwait
sti
aad
mov
jecxz
adc
nop
mov
jmp
sbb
mov
cmpsl
and
test
xchg
jnp
sbb
and
jmp
cwtl
in
mov
dec
insb
aaa
add
push
inc
jnp
arpl
push
mov
aaa
test
or
std
jp
stos
loope
hlt
add
scas
sub
sbb
or
mov
ljmp
das
in
fisubl
cmp
adc
lcall
mov
pop
pop
or
out
mov
imul
xor
xchg
loopne
aam
outsb
xchg
jge
push
ja
sub
jnp
les
mov
sarb
jl
jg
pop
xchg
push
or
shl
cli
xor
add
dec
popa
popa
mov
cmpsl
fdivrs
clc
andl
aad
xchg
mov
fistpl
adc
nop
outsl
repnz
in
jl
rcrb
cmc
lods
xchg
mov
pop
sub
std
mov
cmp
xor
mov
pop
mov
loopne
enter
xchg
cmp
int
mov
or
icebp
lahf
dec
popf
sbb
leave
push
clc
les
sbb
xchg
push
cmc
sbb
shl
add
cwtl
jmp
adc
mov
cmp
nop
scas
int
orl
push
data16
lds
inc
xchg
in
xor
mov
rcll
dec
or
sub
addb
fwait
jmp
insl
test
jl
mov
aas
jno
push
push
jbe
and
lea
repnz
push
cmp
in
movsl
add
test
pop
mov
sbb
xor
or
fmull
stc
nop
jno
cmp
hlt
stc
cwtl
lahf
push
fwait
or
orb
adc
mov
mov
mov
movsl
dec
pop
sarb
mov
cmp
enter
outsb
cs
popf
mov
jne
out
mov
sbb
in
in
scas
dec
jg
mov
jns
jmp
xchg
jg
stos
je
repz
repz
es
sbb
out
mov
and
je
sub
push
inc
push
popf
mov
xor
xchg
out
clc
sti
lea
jmp
push
mov
dec
subl
sahf
out
push
fcmovu
fimuls
inc
je
xchg
and
adc
daa
push
pop
or
stc
int3
fwait
call
outsb
inc
and
stos
jge
cmc
mov
push
pop
xor
mov
push
push
cmpsb
rcr
sbb
sub
mov
and
jne
out
sbb
imul
adc
pop
pop
inc
std
mov
push
push
mov
and
mov
outsl
lcall
dec
xchg
les
add
inc
xor
test
decl
dec
iret
stos
cmp
outsl
xchg
out
mov
je
scas
sub
lcall
jl
jne
sbb
loop
shll
inc
pop
sbb
enter
jb
fxch
lcall
cmp
pop
and
sbb
add
jo
adc
fs
jle
leave
mov
jbe
pushl
inc
vsqrtsd
adc
mov
inc
adc
shr
nop
mov
imul
xor
inc
cmp
push
xor
dec
sti
jns
fistps
mov
push
jg
outsb
bound
fs
pop
stc
movups
push
dec
dec
js
inc
push
ret
ja
outsb
adc
mov
lahf
pop
cmpb
and
bnd
mov
xchg
mov
sbb
or
cltd
leave
in
mov
pop
dec
scas
cmp
push
or
pop
mov
or
fldl
call
xor
push
sub
mov
mov
stos
jecxz
jg
ja
in
lahf
xlat
lcall
or
test
push
ret
imul
mov
pop
in
int3
cmpsb
sbb
int
jb
mov
js
out
dec
sub
lods
sub
sbb
dec
adc
test
int3
jge
mov
int3
xchg
push
ret
xlat
aam
adc
scas
or
mov
ljmp
out
mov
scas
mov
cmp
fdivrs
jbe
mov
add
sub
lret
adc
lea
mov
xchg
push
call
and
repz
and
aad
jns
jae
aaa
jne
out
sub
orl
mov
pop
xchg
jnp
sahf
xchg
mov
test
pushf
insl
outsb
xlat
pusha
xchg
rclb
xlat
dec
xor
outsb
xor
popa
inc
jl
sub
push
mov
sbb
daa
rorb
rolb
call
mov
dec
repz
xor
inc
jmp
int
and
pusha
sbb
movsl
cwtl
or
pop
inc
test
pop
daa
data16
cmp
push
dec
arpl
les
popf
scas
jg
or
push
iret
les
movsb
push
shrl
sub
mov
xchg
sbb
dec
and
jns
pushf
sahf
iret
cli
shll
pop
jmp
fincstp
repnz
loop
cld
out
aad
mov
dec
aas
outsb
out
iret
sbb
shrl
cmp
sti
pop
call
sbb
xchg
repz
xchg
subb
vmovapd
jl
add
fstl
cltd
pop
popf
sub
push
dec
add
iret
ja
add
jbe
add
ljmp
push
add
cmp
inc
loop
pop
out
cld
in
pop
andb
xor
add
sbb
cmp
cld
pop
imul
aam
and
rcrb
dec
out
xchg
mov
adc
and
aad
call
rorb
orl
clc
sti
fdivs
imul
rol
int3
das
pop
jb
xchg
cli
stos
jmp
out
pop
iret
insl
rorl
int3
and
mov
xchg
add
add
jp
mov
lret
jb
das
lock
sbb
xor
test
cmp
out
cmp
lret
repnz
mov
mov
push
call
loopne
inc
fsubrs
and
fdivrs
sbb
icebp
repnz
sti
push
daa
jp
cwtl
inc
xlat
call
sub
jnp
insb
mull
inc
add
push
adc
out
into
xchg
in
movsb
addr16
bound
or
adcl
and
gs
rorb
xchg
subl
and
dec
sub
out
test
js
cmp
mov
loop
into
icebp
fwait
lea
xchg
add
repz
inc
adcl
cld
sub
jmp
sbb
sub
cmp
and
inc
pop
dec
mov
lods
ljmp
dec
jg
mov
popf
fcompl
sbb
dec
push
cld
sub
mov
aas
out
shrl
in
orl
repnz
inc
sar
pop
inc
test
and
mov
fsubrp
rorb
pop
mov
adc
cli
out
cmp
fcmovnu
push
enter
cld
pop
xchg
jl
icebp
add
pop
mov
mov
in
mov
jnp
in
insb
mov
ljmp
arpl
aad
jecxz
sbb
cld
in
xchg
pop
inc
dec
push
aas
mov
in
in
test
negb
jle
pop
push
cmp
mov
pop
in
or
movsl
xor
aad
push
jbe
lea
imul
mov
loop
aad
rcll
lcall
and
ret
addr16
mov
repz
sub
jnp
loopne
mov
cmp
aas
cmp
cmp
jmp
in
jbe
loope
ret
cmp
mov
cmpsl
xor
jge
or
ljmp
insb
push
mov
xor
popa
je
inc
out
adc
dec
jb
mov
mov
adc
lods
cmp
jecxz
enter
fildl
mov
inc
mov
mov
or
pop
lods
adc
cli
push
sbb
cld
sbb
push
dec
test
addr16
push
sbb
int
je
add
jp
test
popf
inc
pop
lods
jge
sarl
cltd
mov
iret
jg
lods
mov
adc
cld
outsl
ljmp
test
push
xlat
jecxz
mov
xorl
or
sub
push
imul
je
xchg
adc
mov
lods
xchg
cltd
mov
mov
cmp
dec
mov
fnstenv
sub
fstl
std
mov
shrl
jmp
cmpsl
xorl
and
jmp
cmp
jae
rcrl
popf
xor
dec
adc
xor
in
int3
inc
inc
pushf
pop
push
imul
push
push
outsb
dec
xchg
xor
rorl
and
xchg
dec
jle
mov
and
sub
jle
fdivr
push
aam
lods
fisttpl
lock
cmpsl
jmp
sti
jne
out
xorb
inc
xor
xchg
adc
jge
sahf
cmp
lahf
popa
inc
aad
clc
in
jg
jg
adc
jne
jae
aam
xor
test
imul
push
lahf
mov
sub
pop
inc
les
daa
add
cmp
xchg
cmp
xor
adc
lret
loopne
add
clc
iret
adc
inc
sarl
pushf
imul
push
rorl
sarl
xlat
mov
sbb
icebp
out
pminub
sub
movups
xor
mov
xlat
gs
push
js
lock
mov
cmpb
mov
stos
adc
jno
rcl
loopne
cmp
and
test
test
cmp
mov
fdivrs
into
or
inc
in
loope
stos
fstps
or
fcmovnb
into
push
cld
dec
push
filds
push
int3
inc
jle
xor
or
mov
xchg
scas
add
cli
add
sbb
mov
in
ja
mov
push
mov
xchg
add
test
scas
xchg
fwait
mov
or
cli
adc
cmp
rcrb
leave
sub
mov
pop
lods
shlb
xchg
inc
or
mov
mov
leave
pop
test
push
push
imul
add
mov
sub
pop
xor
pop
iret
dec
mov
shl
lahf
xorb
cmpsl
pusha
mov
cmp
push
imul
bound
mov
daa
mov
cmp
xchg
insb
daa
cmp
cmpsb
out
popa
pop
xor
inc
fst
dec
aad
out
xchg
sti
pop
xchg
sub
pop
xchg
jae
jge
out
rolb
mov
pop
cmp
xlat
push
inc
sbb
inc
pop
add
or
popf
push
in
xor
in
pop
add
push
add
jne
bound
add
xchg
dec
push
data16
xchg
jbe
gs
mov
scas
fsubp
mov
aaa
insb
adc
loope
mov
outsl
idiv
xorl
stc
lcall
mov
mov
daa
fcomps
ret
mov
into
inc
mov
cmp
xchg
loop
insb
lods
dec
lret
fsub
ror
insl
rclb
mov
lret
or
mov
movsb
cwtl
in
dec
push
xchg
in
pop
mov
test
stos
and
icebp
push
xchg
jnp
lods
mov
fisubs
or
je
or
xlat
and
jae
dec
xchg
and
cmpsl
mov
add
lods
xchg
jp
pop
fstl
inc
cmp
add
lods
push
xchg
xchg
push
xchg
sub
or
jle
outsb
fwait
mov
shr
insb
and
sti
imul
sahf
popa
inc
outsb
cmp
pushf
imul
stc
fstpt
push
or
mov
inc
fwait
ljmp
cmp
mov
add
mov
mov
je
sub
fdiv
push
dec
sbb
int3
xchg
movsb
cmpsb
inc
mov
in
xchg
or
dec
ret
mov
mov
pop
dec
aad
pcmpeqb
popf
lcall
cmp
mov
push
cmp
inc
loope
pop
sub
mov
xor
loopne
cli
addl
cwtl
outsl
and
iret
dec
loopne
adc
popa
pushf
push
cld
arpl
test
orb
aaa
in
imul
sbb
sbb
iret
int
sub
xlat
or
lret
fwait
push
xchg
mov
inc
cltd
cmpb
ja
lret
popa
xor
add
fadds
nop
mov
sbbl
xor
movsl
stos
jl
push
mov
int3
xlat
xchg
stos
push
push
shll
data16
inc
push
lret
mov
pminub
or
cmp
test
sub
mov
cld
dec
mull
mov
rcl
inc
mov
ja
jnp
cs
fsubr
or
or
sbb
aad
and
sub
push
xlat
jns
inc
jle
mov
xor
jne
negl
cmp
fistpl
sahf
mov
sub
js
testb
inc
adc
loopne
sub
pop
in
icebp
dec
fwait
sbb
push
mov
out
inc
je
shll
insl
dec
dec
mov
inc
jo
add
push
clc
jno
or
mov
insb
dec
or
mov
sarl
mov
rcrl
outsl
scas
divl
lods
das
addr16
aad
test
xchg
push
icebp
aaa
or
stos
mov
iret
call
inc
shll
lret
ret
fisubrl
dec
inc
or
xchg
sbb
mov
sbb
insb
leave
dec
stos
mov
into
aad
xorb
jnp
cld
and
cmc
jl
push
pop
ljmp
push
shl
lods
cli
lahf
jbe
mov
adc
popf
pop
jne
push
pop
dec
xor
xor
into
ljmp
aad
cmpsb
cmc
lds
and
es
enter
and
pop
aad
add
popf
cmp
arpl
das
adc
test
sub
fmuls
rcrl
pop
sub
cmp
adc
xchg
xchg
cmp
les
adc
fs
loopne
xchg
shll
divl
jmp
jo
fbstp
loope
imul
cmp
or
cmpsl
test
cmpsb
push
inc
mov
sbb
cmp
out
cltd
sub
popf
lods
mov
pop
rorb
xchg
or
xchg
das
inc
cmp
pop
lcall
adc
imul
stos
xchg
inc
xor
jns
scas
dec
push
fmuls
sbb
xor
inc
test
add
jg
dec
mov
xor
xchg
movl
push
lret
and
out
mov
adc
add
jg
or
jb
mov
loope
push
add
test
test
in
mov
sbb
mov
gs
mov
inc
stos
gs
or
and
cmp
pop
insl
push
jle
jmp
test
cmpsl
sbb
idivl
or
ja
mov
nop
iret
mov
out
mov
mov
scas
out
mov
cmp
gs
stc
xchg
pop
shl
andb
jecxz
xchg
cld
adc
cs
pop
cmp
pop
outsl
add
xorb
pushf
sub
mov
mov
sbb
shlb
xor
sub
imul
popl
sbb
mov
mov
mov
xchg
mov
shll
or
out
fimull
faddl
int3
fcmovb
inc
call
xor
lock
or
push
adc
cmp
cmp
or
or
lret
imul
into
ret
cmp
cs
cmp
or
mov
adc
clc
adc
insb
xchg
and
loope
ds
pop
pop
inc
flds
push
mov
push
xchg
test
mov
mov
shll
fsubrl
scas
mov
adc
add
dec
cmp
out
pop
insb
and
ds
mov
pushf
mov
fwait
cs
arpl
leave
sbb
mov
push
ja
push
add
rcll
cmp
shlb
leave
stos
jno
repnz
movsl
or
sub
out
popf
testb
mov
mov
sti
push
es
cpuid
jp
lds
cmp
mov
cmp
jae
dec
dec
lret
ret
jno
mov
mov
insl
popf
popa
jecxz
out
pop
pop
stos
mov
mov
movsb
jnp
mov
insl
sti
xchg
stos
test
jl
repz
jae
sbb
mull
dec
in
or
cmp
fs
decl
push
popf
cmc
inc
and
jmp
jne
stos
adc
cli
iret
test
test
pop
mov
aam
mov
test
stos
mov
daa
clc
mov
call
fwait
scas
and
jns
adc
or
cs
xlat
inc
insb
cmc
or
lcall
adc
xchg
xor
push
adc
jle
pop
jns
and
sbb
fwait
dec
sbb
and
jle
call
or
dec
repnz
stc
rclb
push
pop
aam
inc
or
mov
adc
cmp
and
mov
jle
mov
add
pop
repnz
dec
jne
mov
sahf
fstpt
lret
jp
daa
xor
xchg
lret
dec
aam
es
jae
outsb
clc
jmp
ja
jge
test
pop
sub
mov
mov
cld
push
lret
cwtl
push
push
cmp
and
jbe
fwait
addl
mov
mov
or
nop
jge
pop
mov
test
mov
push
jp
clc
cltd
push
mov
test
xchg
out
data16
int
hlt
cmpsb
adc
adc
lock
inc
xor
addb
inc
jno
daa
insb
pop
call
and
imul
push
mov
clc
mov
movsb
xchg
shl
mov
mov
inc
dec
popf
pushf
mov
dec
enter
je
rclb
mov
lcall
ror
inc
pop
cmp
or
push
dec
push
into
inc
adc
cmp
cmp
mov
jg
cmp
push
add
mov
aas
fsts
push
mov
dec
fmuls
lds
jl
je
das
cs
loope
aam
pushl
jnp
adc
in
inc
cmc
add
push
push
dec
push
sti
dec
sub
gs
hlt
mov
rorb
mov
mulb
cltd
cmp
jnp
movsl
les
fisubrs
adc
pop
sub
incl
jg
cmp
mov
mov
icebp
jo
notb
fcmovnu
jbe
inc
jbe
outsb
cmp
jmp
ss
jmp
aaa
stos
outsb
mov
or
aam
nop
ret
cmp
xchg
dec
xor
or
popf
add
outsl
sub
mov
push
dec
pop
fcmovnu
ljmp
pop
mov
and
ja
test
mov
adc
xor
test
mov
lcall
cmp
mov
and
add
movsb
mov
and
push
mov
cmp
and
add
cmp
cld
icebp
icebp
rorb
push
or
cmp
out
xchg
lea
rep
sub
mov
sub
stc
lock
int3
pop
mov
xchg
cld
xor
das
out
mov
lahf
jp
xor
std
movsl
inc
clc
or
inc
bound
arpl
imul
cltd
mov
cwtl
inc
push
push
fwait
xchg
cmp
mov
mov
dec
sub
pop
add
inc
ja
inc
mov
sahf
nop
adc
fbstp
movsb
data16
push
add
pushf
lock
ja
scas
or
cmp
loopne
loop
adc
std
push
push
test
jl
popa
in
mov
pop
out
xchg
mov
out
negl
jne
addl
dec
mov
pop
hlt
add
mov
xor
loopne
out
aam
adc
inc
push
xor
cltd
fisttpll
imul
mov
mull
pop
iret
sub
sbb
outsl
xchg
add
pop
imul
inc
jnp
sub
xchg
outsb
int3
push
lds
mov
ret
adc
cwtl
add
sub
aad
or
sbb
mov
cmc
scas
sub
jbe
cmp
hlt
lret
xor
cmc
shll
adc
std
add
or
fistpl
jl
and
or
dec
mov
insl
imul
in
mov
mov
sub
fwait
jge
rcrl
ds
add
mov
sti
out
into
out
inc
mov
push
cmpb
dec
xchg
pop
mov
out
outsb
subl
jne
icebp
inc
dec
sahf
outsl
scas
ja
mov
and
imul
xor
loope
sbb
jnp
fs
push
ret
push
xor
cmpsb
fnstenv
out
in
push
inc
push
cld
or
xchg
sub
mov
and
hlt
pop
loop
add
mov
and
adc
movsb
mov
lcall
insb
test
or
jp
or
add
pop
xchg
ficoms
xor
mov
out
cmpsb
sti
lahf
cmpsl
lds
call
cmpsl
scas
imul
xchg
out
lea
jmp
sarl
jmp
push
mov
sti
jns
pop
xchg
cli
or
sti
mov
js
push
cmp
lahf
sub
adc
mov
sub
xlat
das
jmp
ds
inc
loopne
cltd
pop
lahf
mov
xchg
rolb
dec
jo
cmp
les
mov
lret
sbb
arpl
sbb
sub
int
inc
push
push
rep
in
push
mov
cs
daa
loopne
sbb
xchg
xorb
ret
sbb
dec
mov
sbb
jp
stos
dec
lcall
shrl
cltd
and
aas
xlat
subb
lret
aad
pop
dec
push
aad
inc
mov
push
lcall
stos
cmpsb
push
jecxz
push
cld
and
insl
lock
sub
rcll
jle
fwait
pop
mov
xchg
mov
mov
fwait
test
inc
gs
pushf
cmpsl
test
jnp
std
mov
jecxz
inc
iret
addr16
in
sti
fdivrl
test
dec
and
sub
fistpll
inc
ljmp
sarb
sub
das
nop
xlat
clc
jnp
repnz
outsl
imul
and
aas
loop
fcoms
mov
stos
pop
jg
test
fsubs
daa
or
fcomp
mov
cmp
xchg
sti
pushf
add
inc
leave
daa
hlt
imul
sbb
iret
push
add
push
sbb
adc
cmp
or
adc
add
inc
mov
daa
and
inc
sbb
mov
dec
dec
andl
mov
jno
cld
mov
mov
enter
ret
popl
xchg
fsubrp
or
test
inc
mov
sbbl
lahf
and
add
xor
pop
dec
stc
daa
jnp
jno
nop
jg
repnz
dec
ds
pop
fcomp
jnp
mov
out
ljmp
sbb
mov
addr16
fnstcw
pop
movsl
jp
xchg
aas
inc
cmp
lock
or
lock
addb
mov
adc
and
mov
popf
outsb
dec
insl
lods
into
jno
mov
and
mov
or
aad
call
stos
push
push
shll
pop
pop
cltd
nop
sub
mov
push
pop
mov
and
fcmove
aad
mov
shl
jnp
pop
push
rdtsc
xor
imul
out
cli
sbb
repnz
mov
mov
ret
shrb
stos
ret
inc
repnz
sbb
mov
sub
aas
ret
dec
bound
xor
movaps
dec
add
cmc
xor
inc
iret
or
push
in
mov
or
jae
jg
out
or
mov
xchg
pop
je
aaa
xchg
push
and
jns
mov
xchg
inc
and
xchg
push
jl
push
lock
jle
out
iret
cmp
mov
mov
push
shl
push
hlt
xlat
push
and
test
inc
test
mov
lds
mov
mov
mov
std
pushf
mov
test
sub
out
idivb
stos
imul
ss
insl
and
xchg
jnp
popa
leave
jno
xchg
mov
aad
pop
xchg
push
subl
jmp
pop
push
push
in
in
pop
mov
shrl
xchg
dec
sbb
cmp
jbe
jne
mov
popa
sbb
cmp
orb
mov
cmc
mov
stos
or
rcrl
mov
pop
mov
inc
adc
pop
mov
fwait
dec
push
xchg
mov
test
cli
das
push
imul
push
nop
fidivrs
pop
mov
cmc
xor
mov
mov
xchg
jbe
sahf
pop
and
jp
mov
rorb
xor
or
mov
mov
imul
ret
pop
push
jnp
or
daa
out
daa
cmp
adc
fidivrs
sahf
cmc
std
cmpsb
jl
divl
aam
mov
inc
jb
sub
xor
pop
enter
xchg
fists
sub
repnz
dec
sub
in
mov
insl
lret
mov
ss
jl
loopne
sub
ja
lahf
dec
or
mov
and
jl
sub
mov
js
out
dec
dec
icebp
dec
mov
loope
mov
cmpsl
aaa
in
inc
mov
adc
add
adcb
pop
add
sub
lret
mov
mov
sub
fcomps
sbb
scas
sbb
decl
sub
sub
sbb
jo
jecxz
add
out
xor
sub
sbb
and
xchg
pop
jl
loopne
jmp
cli
dec
or
and
fisubs
scas
insb
jne
cmp
rcrl
cld
stos
add
or
inc
inc
mov
xor
mov
das
fidivrs
jecxz
sub
sarl
and
insl
and
xchg
sbb
sub
pop
in
lret
fwait
lcall
incl
sbb
cmpsb
sbb
push
push
cld
lock
rcrb
or
addl
adc
pop
sbb
add
scas
mov
xchg
adc
sub
scas
arpl
shl
cwtl
dec
lods
xor
lret
and
pop
outsl
shrb
push
mov
inc
inc
sbb
add
out
clc
call
faddl
push
lcall
xlat
cmc
les
inc
daa
and
push
mov
push
incb
mov
push
fistl
lock
ficomps
adc
ret
loope
adc
in
mov
push
insb
or
xchg
and
repnz
mov
push
jg
cld
ss
jecxz
sub
inc
cmc
jnp
aaa
push
lret
pusha
or
test
push
leave
sahf
sbb
push
je
lret
dec
pushf
add
or
loop
enter
jl
dec
and
dec
inc
and
cli
xchg
imul
popa
xor
cmp
aas
push
mov
fs
jbe
xor
mov
pop
and
jno
adc
pop
ja
and
cmp
add
push
adc
insl
mov
push
ss
sub
xchg
pop
arpl
jo
sbb
mov
es
pop
jne
sub
decb
xchg
in
push
and
jl
push
jl
sub
mov
daa
fcomi
cli
xchg
add
pop
clc
cmp
andl
insl
push
xchg
mov
ret
sbb
in
inc
add
dec
xchg
push
xlat
data16
jge
mov
mov
push
leave
sub
xor
mov
xchg
jecxz
shlb
daa
inc
add
push
mov
mov
cmp
jnp
or
mov
sarb
inc
adc
lods
lcall
push
int
inc
or
dec
or
into
mov
jge
add
sub
mov
rol
xor
dec
dec
insl
iret
pop
shl
lds
es
sbb
outsl
das
mov
pushf
and
outsb
pop
jnp,pt
jmp
ljmp
nop
adc
push
aam
int3
rcrb
push
mov
sub
in
xor
rcrl
push
pop
ret
and
lods
xor
push
xchg
shr
push
cmpsb
aam
int
ja
mov
mov
mov
xchg
mov
inc
scas
aaa
call
fnstcw
or
out
push
addr16
cmc
inc
shlb
push
xchg
ss
mov
int
adc
insb
push
sbb
addr16
rcl
inc
enter
jnp
mov
or
xor
repnz
push
mov
lret
ds
cwtl
mov
fdivr
int3
xchg
push
cld
std
clc
adc
repz
cmpb
mov
pop
dec
repz
lret
xor
add
stos
push
xchg
lcall
shlb
into
fsubl
or
dec
lods
std
xor
cwtl
scas
sub
xchg
mov
sti
xor
sbb
ja
mov
adc
mov
xchg
dec
aaa
ds
inc
leave
nop
ret
xchg
stos
repnz
test
lea
in
pop
pop
mov
ja
dec
orb
loop
xor
mov
push
add
decl
jno
push
xchg
lret
rorl
jno
xchg
jl
cmp
into
xor
adc
shlb
cmp
insl
popa
dec
cmp
push
js
jne
pop
inc
jl
push
xor
cmc
in
nop
inc
lea
mov
mov
cs
mov
jmp
fmul
int3
test
mov
push
in
pop
push
mov
sahf
push
xchg
adc
imul
mov
xor
push
and
and
sub
out
pop
mov
and
popf
dec
push
insb
sarb
shrb
bound
mov
cmp
and
iret
ja
mov
decb
fdecstp
push
out
std
push
dec
adc
mov
iret
testw
imul
inc
inc
test
cwtl
pop
adcl
aad
push
lret
cmpsb
sbb
xchg
dec
daa
and
lds
lret
or
and
cli
popa
push
scas
cmc
fisttpll
js
mov
push
scas
movsb
das
and
mov
push
stc
pop
into
aaa
xchg
pop
pop
std
mov
jp
popa
sbb
js
xor
dec
push
xor
aaa
shl
mov
mov
leave
inc
ret
xchg
mov
jbe
call
stos
mov
pop
ljmp
jmp
push
adcb
icebp
xchg
adc
in
jne
cli
int3
popf
iret
xlat
lock
bnd
leave
xchg
enter
xchg
repz
xor
lret
ja
into
push
jno
lret
js
shl
shll
sbb
adc
in
xchg
arpl
xor
in
pop
insl
dec
lahf
lods
popa
aad
pop
add
leave
or
pushf
loopne
sbbb
xor
jge
aaa
or
or
in
xchg
or
lods
jne
cmc
and
inc
push
adc
jae
cmpsl
sub
sahf
lds
or
movsb
push
jg
dec
lcall
inc
dec
lds
addr16
je
pop
stos
and
cwtl
fwait
ds
fidivrs
test
jne
cmp
mov
dec
shlb
add
imul
add
out
add
cwtl
mov
fldl
push
daa
repnz
mov
scas
or
insb
mov
add
lcall
pop
rcrl
cs
clc
hlt
dec
mov
xchg
test
jo
clc
mov
out
es
dec
mov
iret
mov
fimuls
divb
insb
jmp
mov
push
push
sbb
xor
mov
fchs
dec
and
movsl
jg
fnstenv
shl
fdivrl
and
sbb
lods
xchg
aaa
cmpsl
or
data16
jae
cmpsb
inc
ss
gs
dec
loop
xchg
pop
and
dec
cwtl
adc
pop
cmp
jnp
pop
push
add
ja
mov
insb
add
shll
faddl
dec
aas
ljmp
and
scas
je
push
les
inc
push
mov
sub
adc
into
jmp
push
or
lds
roll
pop
pusha
sbb
cmp
cmp
adc
loopne
sarl
in
ret
ja
xor
stos
or
cmp
rolb
fidivs
sub
mov
push
incl
mov
pop
push
js
scas
cli
shrb
jne
mov
mov
popf
mov
xchg
das
mov
xor
or
xchg
sub
push
pop
aad
push
mov
aam
arpl
lock
xchg
push
mov
or
in
cmp
xchg
fcmovbe
mov
addr16
cmpsl
mov
cld
testb
xor
ss
shrb
ror
mov
shrl
nop
dec
mov
sub
cmp
jle
popf
or
mov
inc
jmp
inc
jmp
jbe
shr
int
fldt
adc
xchg
mov
scas
mov
icebp
dec
test
mov
inc
inc
mov
pushf
xor
and
xchg
fdivs
or
movsl
add
cli
inc
mov
test
mov
xchg
aam
out
mov
cmp
fisttpll
icebp
pusha
int3
out
jle
cmc
ret
das
iret
sbb
pop
stos
mov
mov
out
stos
arpl
push
cmp
pop
cs
mov
add
jno
aam
cmp
sbb
movsb
outsb
xlat
dec
aam
sub
mov
mov
data16
leave
sbb
test
or
xor
shlb
fcompl
fisttps
nop
aas
sbb
pop
insl
and
js
adc
add
daa
in
cmpsl
mov
repnz
and
and
bound
jg
mov
xchg
orb
cmp
cld
push
mov
test
out
push
mov
sbb
sbb
jecxz
fstpl
xchg
mov
jb
inc
outsl
jb
adc
ja
xchg
jmp
xchg
inc
push
notl
rcr
roll
imul
adc
xchg
sti
push
sub
pop
daa
inc
jno
or
cmp
adcl
jg
mov
mov
lods
sbb
jecxz
lahf
xchg
clc
bound
inc
loopne
add
rorl
call
gs
mov
jae
subl
into
ficomps
gs
and
mov
jbe
xchg
jb
movsl
and
push
adc
mov
pop
xor
xchg
movsl
inc
mov
push
test
das
or
inc
jg
jl
into
cmp
sahf
imull
push
stos
aaa
push
dec
sarl
cmc
ja
inc
xchg
fildl
inc
jl
out
frstor
lock
test
mov
ljmp
jne
ret
mov
insl
sti
or
inc
mov
sbb
add
cwtl
fnstcw
orl
dec
out
fcmovbe
push
repnz
fldt
pop
inc
inc
mov
xchg
sbb
arpl
mov
fneni(8087
es
lret
enter
sub
imul
rcr
cmpsl
cmpsb
and
xchg
ret
push
test
daa
inc
cmpsl
sbbb
fists
mov
notb
push
test
jl
xchg
push
lds
mov
jo
mov
enter
cmpsb
inc
jge
add
outsl
cmp
or
push
movsb
ret
mov
cld
or
scas
jbe
push
rolb
loopne
mov
sub
popf
mov
aas
aad
mov
and
mov
inc
mov
pusha
sti
or
fmull
mov
repz
inc
cmpsb
lods
dec
or
cmpb
pop
int3
cmc
lock
mov
mov
dec
jne
in
in
dec
cmpsb
xor
pop
mov
and
fsubs
pusha
xchg
call
sahf
xchg
dec
mov
lretw
push
scas
dec
sar
sub
movsb
pop
or
pop
mov
outsb
pop
fdivrl
dec
fwait
imul
xor
xchg
es
shrl
aad
sub
stos
sbb
lcall
xchg
xchg
dec
mov
xchg
in
jg
inc
in
xchg
in
nop
push
addr16
ss
or
sbb
dec
int
mov
in
mov
out
addb
dec
sbb
add
cmp
push
push
pop
popa
stc
cwtl
xor
test
inc
iret
mov
movsbl
sbb
xor
xorb
jno
pusha
add
push
adc
push
mov
fs
mov
sub
repz
adc
out
mov
mov
ror
jb
inc
stos
filds
adcb
call
xchg
pop
cli
test
adc
push
dec
adc
test
insb
out
pop
push
inc
push
leave
stos
mov
imul
push
jae
mov
imul
cmp
add
mov
add
mov
mov
and
mov
pop
mov
fwait
and
mov
jbe
mov
xchg
jnp
call
add
stc
stc
or
pop
push
push
hlt
inc
pushf
mov
push
out
fdivrs
and
push
int
xchg
pop
aas
out
loopne
ljmp
xor
nop
sbb
xor
or
jbe
int3
stos
call
int3
mov
cmpsl
mov
shl
and
insb
jge
pop
mov
add
cwtl
push
jecxz
lods
inc
push
popf
mov
test
lds
into
orb
cli
xchg
stos
mov
mov
test
add
test
popf
ds
cs
into
and
out
clc
out
lahf
mov
testb
sub
leave
xchg
xchg
icebp
lods
movsb
or
lods
adc
orl
mov
icebp
fsubl
xlat
repnz
push
out
sbb
inc
notl
pop
pop
dec
movsl
lock
rclb
test
iret
lret
xchg
lea
xlat
sub
push
push
cmpsl
inc
adc
mov
andb
mov
pusha
adc
sub
cltd
mov
inc
bound
mov
mov
add
aam
add
jae
in
mov
js
mov
jns
fwait
sti
les
inc
push
xor
shlb
or
dec
fwait
lea
inc
mov
jg
idivl
xlat
pop
pop
outsb
push
or
dec
in
fldt
jmp
aad
dec
cmp
pop
out
test
mov
and
sbb
push
lea
add
add
pop
ja,pn
jle
sub
pusha
scas
jecxz
dec
jbe
or
cmc
int3
xchg
mov
rol
cmp
fcomp
inc
aam
mov
outsl
pop
lds
in
dec
xor
cs
mov
cld
in
les
inc
and
scas
mov
pop
out
dec
stc
mov
dec
arpl
pusha
mov
inc
sbb
sbb
ficoml
pop
jg
xlat
sbb
sub
mov
shll
stos
and
dec
ja
mov
pop
add
push
cwtl
int3
shll
sti
mov
dec
in
lods
dec
dec
ss
scas
icebp
mov
fwait
in
les
adc
dec
insb
xor
ja
gs
cmp
orb
mov
mov
or
fdivrs
mov
inc
pop
adc
je
mov
cmp
cmp
inc
test
push
mov
test
loop
mov
inc
pop
sub
cmp
inc
jmp
imul
cmp
fdivp
pop
sbb
popf
repz
inc
inc
mov
xchg
cs
sbb
test
push
js
lds
xor
dec
lods
add
xchg
shl
movsl
jnp
insl
jle
and
pop
insb
jecxz
cmp
call
mov
cwtl
jae
ret
inc
test
test
jg
int3
jb
stos
push
xor
aas
js
jne
sbbl
xchg
mov
jnp
outsb
imul
sub
xchg
movsb
or
loope
or
lock
fsubs
push
and
inc
cs
rcrl
fnsave
cltd
mov
repz
cmpsl
insl
subl
mov
mov
lret
and
or
xor
mov
mov
xchg
pop
dec
jbe
add
nop
xchg
mov
shrl
pushf
movsl
xor
ret
int
push
sub
adc
int3
mov
hlt
inc
mov
jns
call
insb
sahf
cmp
je
into
repz
stos
xchg
pop
in
mov
mov
pop
sub
cli
push
aas
xchg
stos
jae
sti
mov
test
mov
imul
xchg
adc
nop
adc
xor
add
int3
mov
clc
or
or
and
xchg
jl
push
adc
lcall
adc
and
mov
push
orb
out
add
fisubrl
sub
dec
cmp
pop
xorl
imul
in
mov
ficomps
cltd
pop
mov
mov
push
popf
or
call
and
dec
xchg
dec
push
lcall
cmp
cmp
into
push
inc
das
cltd
clc
cmp
call
leave
sbb
stos
fldenv
cld
lret
int3
mov
cmpsb
sub
out
adc
sbb
jns
ja
fstps
out
inc
dec
sbb
daa
pusha
dec
push
sbb
mov
mov
add
ljmp
inc
push
jb
xchg
ljmp
ljmp
mov
sar
nop
cmpsb
cmp
and
popa
cmp
lret
dec
repz
sub
push
dec
jo
sbb
les
sbb
enter
pop
sahf
cmp
sub
loope
sbb
push
mov
stc
and
cmpsb
and
lret
sub
aad
and
sbb
and
jl
loope
lcall
inc
push
in
jbe
lret
outsb
xor
out
test
add
sub
mov
inc
lahf
sub
sbb
cwtl
lods
out
push
pop
loope
cmp
shrl
xchg
adc
xchg
mov
ss
and
cwtl
sbb
inc
icebp
stc
pop
mov
inc
and
mov
leave
mov
mov
xchg
sbb
decl
loop
xlat
fmuls
push
pushf
fimuls
jp
lea
aaa
add
xchg
mov
add
addr16
push
in
mov
adc
test
scas
inc
and
jmp
icebp
in
xlat
je
or
inc
scas
rcll
mov
sbb
iret
mov
xchg
arpl
jg
and
int
ljmp
push
mov
sahf
and
dec
bswap
addl
imul
int
mov
cmc
rcrb
pop
mov
mov
inc
test
es
lret
jns
ds
bound
jmp
jns
lret
mov
pop
lds
xchg
mov
loop
fstpt
aaa
jnp
sbb
imul
mov
pop
mov
jnp
add
jl
sub
jmp
filds
outsb
cld
mov
or
or
cmc
sar
popf
sub
pop
adc
in
das
cmpsb
xor
popf
sub
push
repnz
jg
mov
movb
cmp
add
or
repnz
cmp
pop
aam
loopne
pop
pushf
cwtl
js
dec
lret
out
sbb
or
test
xor
mov
and
jae
test
xchg
addr16
cmp
mov
push
mov
ja
movsb
into
sahf
inc
int3
and
xor
mov
adc
test
cld
out
imul
andl
sbb
outsb
push
cld
sub
inc
in
cmp
repnz
mov
xchg
xor
xlat
inc
mov
cmp
aas
xchg
adc
push
sub
addr16
fsts
adc
mov
movsb
adc
dec
popa
popf
movsb
mov
mov
push
mov
push
inc
xor
mov
cmc
das
push
inc
fs
mov
xchg
sbb
inc
sbb
mov
insb
out
js
pop
lcall
filds
gs
push
data16
repz
push
add
pop
lcall
or
inc
mov
adc
lcall
icebp
sub
pop
in
stos
lea
push
mov
cmp
xchg
bound
pop
inc
xor
jl
mov
rorb
sub
stc
ret
sub
push
dec
push
outsb
int3
test
pop
xor
push
or
adc
jo
into
xchg
notl
test
add
aad
mov
pop
inc
data16
xor
iret
add
divl
sub
and
repz
ljmp
insb
sbb
imul
add
push
mov
lcall
lds
mov
xchg
rorl
mov
push
mov
ret
lds
jo
or
movsl
imul
loop
outsb
mov
jg
cmp
jecxz
je
push
jg
ljmp
sub
mov
mov
jne
inc
or
pushf
hlt
cmp
push
in
lahf
dec
dec
add
inc
je
outsb
sub
jbe
adc
js
aaa
adc
adc
daa
and
mov
paddsb
dec
mov
sub
dec
idivb
mov
add
bts
xor
add
jmp
sbb
mov
cmp
jb,pn
fimuls
pop
fldl
cltd
stos
and
dec
add
cmpsb
orb
dec
in
repz
test
mov
xchg
and
pop
mov
add
mov
sub
xor
pop
into
push
ja
negl
fidivs
add
daa
inc
push
pop
xchg
out
jle
xor
push
mov
lcall
arpl
fcmovb
xchg
adc
jecxz
addr16
mov
cmpsb
lods
xor
test
rolb
mov
mov
mov
cli
jp
movsl
pop
ret
sbb
pop
push
movsb
xor
xlat
mov
push
testl
imul
insl
test
mov
xchg
sahf
mov
fisubrs
mov
xchg
icebp
adc
and
jmp
push
adc
sahf
jecxz
sub
pop
xchg
xchg
xor
loop
adc
pop
loopne
gs
mull
in
mov
fadd
mov
nop
and
subb
mov
ds
test
mov
push
jmp
mov
les
xor
icebp
xor
out
mov
daa
push
jne
jecxz
sar
jle
jmp
xor
sbb
rcll
inc
jl
pop
xchg
mov
and
push
xor
dec
cmc
cmp
mov
inc
xor
pop
mov
fsubrs
inc
fwait
push
fadds
loope
adc
sbb
lret
lods
out
daa
aas
std
popf
adc
outsl
gs
xchg
cwtl
inc
mov
sub
sbb
push
or
and
jmp
ret
mov
into
jg
xor
incl
sbb
icebp
mov
fsubrl
pop
icebp
rcl
or
std
pop
xor
and
inc
add
andb
cld
mov
shll
inc
add
cli
dec
mov
adc
lret
sub
cmpsb
cwtl
sarl
and
jne
fmuls
add
popf
out
mov
adcl
sbb
lret
sub
add
mov
pxor
outsb
in
add
in
movb
inc
pop
cmp
enter
sub
push
or
icebp
sub
push
fnstcw
push
iret
cwtl
sub
lret
stos
mov
add
test
cmp
lods
call
cmpsb
adc
pop
jno
es
cmp
out
push
ja
mov
push
jo
lds
push
ss
jg
mov
call
mov
movsl
bound
cs
adc
or
push
aad
adc
js
aad
ljmp
pop
rcr
jbe
lods
sbb
lret
test
sub
jle
imul
inc
scas
gs
cmpl
sub
imul
mov
or
jns
enter
pushf
or
mov
mov
add
adc
loop
jnp
movsb
sub
cmp
xchg
push
cmc
xchg
adc
negl
pop
mov
imul
mov
jno
jmp
dec
sarb
cwtl
sti
inc
cmc
xchg
imulb
xor
xchg
pop
mov
xchg
dec
push
inc
dec
xor
imul
pop
sbb
dec
imul
or
adc
inc
ss
pop
sbb
sub
mov
push
cli
ret
push
push
or
adc
in
int
out
insl
lcall
sbb
out
jno
cmp
mov
lret
bound
mov
mov
and
dec
jns
cmp
xchg
add
int
scas
add
and
xor
sub
into
adc
sbb
xchg
mov
and
cli
into
cltd
xor
or
jp
jae
sbb
shlb
popa
fwait
iret
jge
or
in
cmc
mov
inc
sub
hlt
repz
xchg
push
lret
addr16
pop
or
mov
inc
push
jbe
shrl
cmp
mov
xlat
mov
scas
jns
or
mov
inc
loopne
jne
aaa
and
jge
movsb
xor
and
stos
ret
enter
js
daa
jp
xor
sarb
push
mov
jmp
cld
nop
out
dec
pusha
xchg
icebp
mov
xor
mov
cmp
inc
pop
sub
fisttpl
sub
repz
stos
and
jecxz,pt
aad
hlt
aas
xor
into
pop
fwait
jo
xor
out
cmpsl
push
ljmp
jmp
xor
adc
in
pusha
mov
dec
outsb
add
aaa
jno
jp
cli
jo
and
int3
and
fnstsw
push
imul
pop
andb
mov
cmp
push
cmpsl
mov
addr16
loopne
sar
pop
pop
cmp
pop
fs
pop
jnp
jnp
jmp
loopne
cmc
pop
arpl
out
sbb
mov
adc
popa
dec
push
aaa
out
out
sbb
stos
je
sub
arpl
mov
mov
jne
jg
pop
mov
inc
scas
icebp
test
aaa
adc
pop
or
popf
lods
xor
xchg
aam
out
call
sahf
cli
enter
sbb
mov
call
out
nop
ret
movsb
xchg
add
jp
cmp
iret
stos
fisubrl
xchg
scas
pop
sub
cmc
mov
push
inc
movsl
push
ror
pop
fisubrl
and
push
cmp
push
sub
xor
push
loop
test
int3
adc
dec
sbb
dec
fldt
cmp
data16
loop
addb
sub
stc
subl
xor
cwtl
fbstp
das
outsb
cmp
scas
rcl
outsl
in
mov
daa
mov
or
addr16
lcall
add
hlt
xor
cmpsb
mov
mov
mov
gs
daa
cmpsl
lret
xchg
enter
inc
cmpsl
xchg
cmp
in
leave
movsl
mov
pop
sbb
lret
mov
dec
xor
adc
jmp
dec
push
mov
ss
xchg
sub
mov
ficompl
cmp
or
out
out
jne
cmc
aam
lds
loopne
test
js
cmp
aad
bound
loop
jne
leave
repnz
mov
xchg
cs
mov
aas
xchg
inc
dec
mov
outsb
ret
loopne
mov
adc
mov
pop
je
popf
xchg
lcall
icebp
xor
mulb
inc
rcll
shl
fwait
or
repz
and
or
inc
jge
pop
jl
and
stos
add
push
ret
and
sub
and
int3
in
jae
lea
lret
shlb
and
push
mov
xor
xor
data16
lahf
dec
loopne
sub
out
adc
jae
je
sub
and
sahf
popa
dec
pop
xchg
sub
iret
add
xor
outsl
cltd
in
dec
cld
dec
in
daa
es
imul
fs
movsl
pop
push
add
xchg
repz
sub
adc
mov
cmpsb
fidivrl
inc
lods
dec
pop
dec
in
push
jns
fsubs
add
ficompl
mov
mov
sub
pop
lds
loop
sub
test
gs
dec
mov
outsb
andb
andl
xchg
dec
pop
aaa
mov
mov
mov
inc
sbb
dec
shlb
jno
bound
xchg
dec
std
xor
ja
xlat
int
ror
jnp
or
add
mov
fcoms
mov
push
xchg
and
jne
stos
gs
test
fimull
adc
lock
pmaxub
insl
mov
sub
sti
xchg
pop
aaa
sahf
js
fcmovnbe
dec
dec
xchg
es
shrb
inc
test
xor
mov
pop
test
inc
jb
xchg
push
push
xor
in
pop
lret
int3
popa
data16
mov
push
dec
cs
sbb
and
or
es
jmp
sbb
and
dec
addr16
cs
and
jle
and
mov
and
push
insl
jl
es
testl
ljmp
jbe
sbb
dec
add
mov
add
fstl
mov
std
fimull
push
clc
and
in
subb
cmp
or
mov
dec
add
adc
xchg
mov
pop
inc
jno
pushf
lds
xor
dec
jno
mov
dec
les
fcoml
and
or
test
int3
adc
or
sub
outsl
mov
mov
les
inc
rol
pop
scas
sub
test
jne
dec
cmc
cmp
xor
xchg
sbb
inc
fisttps
inc
out
xor
dec
mov
and
mov
push
xchg
mov
pop
xchg
shr
leave
sub
repz
scas
popf
xchg
pusha
and
adc
dec
sbb
clc
ficompl
push
fs
mov
xchg
dec
pushf
fstpt
pop
sub
scas
sti
cli
and
fbstp
cmc
repnz
mov
add
popa
data16
sti
ds
adc
inc
movsb
xor
mov
in
loop
fdivrs
sbb
sbb
xor
sub
loopne
pop
aas
and
push
xor
out
inc
cwtl
testl
ret
ljmp
pop
int3
mov
sarb
adc
adc
out
fidivrl
pop
mov
jns
cmp
cmp
lret
movsb
and
outsb
adc
fisubrl
outsb
js
repnz
in
lret
add
outsb
jns
es
jae
add
inc
jl
xor
jge
inc
jmp
inc
imul
dec
cmp
test
add
cmp
pop
mov
mov
xor
lds
lahf
idivl
cwtl
xchg
jae
in
push
sub
out
lods
mov
inc
in
lds
fistl
fildl
sbb
cld
pushf
imul
mov
stos
subl
mov
jge
loope
push
and
cld
js
int
fwait
xorb
aas
out
push
outsl
mov
push
cmp
nop
out
xlat
sub
jl
push
mov
or
jnp
sbb
and
adc
ret
adc
dec
sub
insl
hlt
and
mov
outsb
into
dec
loope
ret
jb
aas
sub
sbb
mov
mov
andb
arpl
xchg
data16
inc
add
jl
ret
fisttpl
out
loop
fists
pop
jg
mov
sub
clc
mov
loop
daa
sbb
shrb
mov
inc
stos
inc
repnz
xor
dec
push
sub
xchg
in
xchg
lods
aam
push
dec
pop
outsl
out
rclb
stc
fldz
adc
sbb
push
push
das
or
mov
sti
jge
arpl
fidivs
adc
dec
cmpl
xchg
mov
cltd
call
sbb
push
jge
bound
add
add
push
push
or
icebp
xor
pop
mov
inc
inc
cwtl
loop
rclb
push
cmpsb
in
inc
mov
sub
subb
iret
jne
cmp
sub
and
jl
inc
aam
dec
mov
add
and
xchg
mov
xchg
pop
or
sbb
mov
sbb
es
mov
jp
popf
scas
push
fbld
inc
push
out
fcoml
xor
lret
adcb
movsb
cmp
xchg
xor
add
imul
pop
jno
pop
pop
arpl
jns
push
push
jns
ljmp
shlb
mov
pop
dec
out
and
out
or
xchg
push
sub
lret
cmc
dec
dec
push
movsb
cmc
cmp
in
sahf
or
test
rolb
das
pop
gs
push
leave
ljmp
sbb
inc
add
fcompl
jle
insl
add
or
loopne
outsb
mov
cmp
test
push
pushf
push
mov
push
daa
and
lock
das
xlat
fimuls
jnp
es
jmp
adc
aam
adc
in
jecxz
jp
sahf
inc
dec
or
cmpsl
stos
pop
and
jne
push
es
ljmp
push
adc
mov
das
inc
mov
jmp
jo
lret
repnz
cmc
fucom
das
fcmove
mov
int3
lcall
sub
jmp
daa
mov
fnstcw
cmc
mov
insl
movsb
aam
or
mov
inc
in
andb
sahf
xlat
mov
cli
pop
xor
adc
int
scas
and
inc
pop
out
or
aaa
cmpsb
cltd
push
and
fs
pusha
inc
dec
push
cmp
push
and
cmpsl
jg
push
mov
xor
sbb
nop
add
and
push
xchg
mov
repnz
in
fwait
stc
cltd
mov
xchg
push
stos
inc
testb
jecxz
pop
mov
das
inc
clc
sahf
mov
cmpsl
mov
shl
cmc
inc
add
mov
add
xchg
lock
pop
mov
insb
push
cwtl
rorl
sub
and
inc
int
or
lret
mov
stc
fsub
loopne
test
insb
cmp
or
shlb
mov
scas
jle
jle
push
mov
add
out
mov
pushf
and
into
paddsw
push
dec
or
push
cmp
jo
adc
cmp
fists
movsl
lcall
pop
stos
and
mov
jge
aad
sbb
dec
insl
insb
or
xchg
sarl
movsl
jo
mov
repz
leave
and
push
loope
sub
mov
mov
sub
pushf
add
fistpll
andl
adc
sti
add
mov
xlat
aad
push
out
mov
sub
xor
inc
mov
aad
sar
or
pop
xor
jmp
in
ja
push
push
pop
fidivrl
push
lods
shll
sarb
cs
ret
cmpsl
cmp
mov
enter
mov
add
xchg
stc
pusha
cmp
inc
ds
inc
adc
lahf
aas
adc
inc
mov
jne
adc
loopw
pushf
pop
rcrb
or
mov
sahf
fisttpll
call
aaa
jns
adc
rolb
mov
xchg
sbb
cmp
cmp
pop
in
insl
push
adc
iret
xlat
dec
dec
das
std
push
fisttpl
imul
mov
sar
ficoms
outsb
sbbb
mov
add
pop
jp
inc
ljmp
mov
cmpsl
jmp
fnstenv
push
insl
aad
ret
addr16
out
inc
jp
dec
add
cmp
test
mov
inc
in
inc
insl
dec
jae
clc
jmp
mov
mov
cmp
pop
xor
daa
mov
push
xchg
push
mov
movsb
aaa
into
fisubrs
inc
daa
scas
cmp
or
cmp
int3
je
add
arpl
out
test
dec
je
jmp
dec
repz
hlt
pusha
loopne
movl
jl
mov
test
xchg
push
fucom
push
dec
cmpsb
je
imul
or
or
push
cmpsb
bound
outsl
fldcw
jge
ljmp
sub
dec
dec
movsb
or
ror
insl
xchg
fiadds
mov
inc
push
test
dec
mov
call
icebp
std
lods
mov
pop
sahf
arpl
leave
pop
ljmp
ret
mov
loop
ss
push
inc
and
and
jbe
cmpsl
xchg
punpckhbw
les
lods
outsl
jbe
leave
dec
shl
pop
cwtl
cmpsl
mov
inc
add
fwait
loope
xchg
jg
js
add
xchg
xor
sub
es
clc
sbb
sub
test
into
mov
dec
test
and
sbb
xchg
push
adc
adc
mov
dec
inc
shrl
sub
mov
js
ljmp
icebp
lock
push
sub
les
xchg
xor
xor
pop
pop
fistpl
mov
mov
idiv
lock
mov
dec
sbb
ret
jo
push
sbb
inc
sti
xchg
outsl
jle
in
bound
sbb
mov
jns
push
cmp
in
sbb
mov
mov
mov
loopne
cmp
das
je
jg
dec
push
sub
jae
pop
loop
outsb
adc
int
cmp
cmc
cmp
ficompl
nop
cltd
dec
xchg
push
mov
sub
ret
in
pushf
mov
fnstenv
xchg
leave
xor
push
or
inc
addr16
mov
or
and
loop
in
cmpsl
sub
sarb
dec
jnp
jae
mov
push
pop
dec
notb
fdiv
test
xchg
hlt
aas
mov
mov
loop
cmp
fisubl
es
inc
pop
sbb
cmp
push
fwait
add
repz
rolb
lea
xor
sub
xchg
rorl
cmp
push
sub
add
inc
sub
jge
mov
mov
mov
lods
cmpsl
les
or
es
lock
xor
push
xchg
dec
mov
hlt
xchg
sub
mov
in
inc
addr16
dec
sub
or
xchg
mov
arpl
in
add
inc
and
xchg
mov
das
mov
leave
in
adc
cmp
cltd
cli
lods
cmc
add
push
add
xchg
fwait
sub
mov
imul
loopne
test
addb
jl
pop
or
and
out
clc
push
xchg
imul
push
and
clc
and
idivb
cmc
aas
es
jp
stc
fstps
mov
or
xor
clc
sarb
popa
sub
push
orb
cmp
insb
bound
jno
or
fcmovnbe
jb
dec
andl
test
movsb
cmp
push
fstl
dec
pushf
gs
mov
sbb
sbb
loope
jo
aaa
iret
sub
push
movb
xchg
jg
daa
adc
push
dec
popa
movb
repnz
sbb
mov
addb
mov
sub
lea
sbb
jecxz
adc
sub
jge
testb
pop
ret
es
and
shlb
test
lahf
jg
mov
pop
pop
cmp
xor
jne
sub
mov
lock
fsubrs
fidivs
ficoml
adc
inc
ret
or
push
roll
mov
mov
pop
xchg
pop
adc
sbb
testl
mov
sarb
push
into
xlat
fistpll
and
pop
fwait
pop
scas
mull
sbb
mov
notl
icebp
jns
add
adc
mov
add
outsb
mov
clc
movsl
loop
add
xor
rolb
sbb
filds
clc
out
inc
push
mov
mov
ljmpw
add
xchg
adc
and
sub
out
insb
xor
mov
loope
xor
notb
mov
xchg
dec
fcmovnbe
adc
mov
rolb
mov
jecxz
or
xor
mov
in
rorl
cmp
xor
lea
jl
outsl
inc
xor
std
xchg
xchg
mov
adc
mov
pushf
dec
sub
rcll
fstps
scas
push
dec
outsb
or
pop
rorb
scas
lea
mov
imul
mov
xchg
mov
xchg
fld
or
lds
adc
testl
lds
ret
mov
xor
pop
mov
je
insb
mov
out
jb
shl
or
scas
add
pop
xchg
ljmp
cmp
imul
ret
dec
adc
pop
push
imul
ja
fsubrl
sub
cmpsb
xchg
loope
inc
xchg
dec
xor
push
mov
jnp
fdivr
sub
cmc
jnp
sbb
pop
mov
shl
push
push
xor
std
mov
aad
rorl
shl
rcr
lret
pop
pop
fbstp
cli
inc
or
pop
lock
adc
mov
mov
insl
push
iret
es
cmp
push
jbe
xor
xlat
mov
jns
jns
dec
jmp
gs
jmp
or
arpl
jp
mov
cmp
jo
jbe
sub
das
add
in
sbb
in
xchg
insb
mov
mov
push
jle
mov
pop
push
mov
in
mov
fldcw
or
cmp
cmp
pop
test
push
clc
test
adc
pop
push
jmp
jb
jno
dec
jle
fadd
pop
jne
int3
push
jo
divl
into
es
push
mov
dec
ds
mov
test
push
xor
pop
push
inc
sbb
fdivrs
and
dec
fcoms
loopne
mov
push
xchg
incb
pop
dec
mov
inc
xor
dec
fadds
push
jmp
jg
adc
pop
mov
imul
pop
pop
cmp
cmp
in
int3
xchg
push
sub
insb
shll
jbe
ret
lods
outsb
push
movsl
push
lahf
cld
xchg
das
std
mov
shlb
gs
xlat
jae
stc
mov
or
mov
sbb
mov
jnp
mull
dec
out
adc
repnz
xchg
in
mov
push
xchg
gs
mov
push
filds
cmp
lret
ret
lcall
inc
adcb
cmp
pop
jg
cmpsl
mov
shl
stos
pop
push
xor
dec
ja
adc
sbb
popa
sbb
mov
ja
scas
mov
push
mov
testb
sarb
decb
ljmp
loop
jmp
ret
inc
fs
out
cs
cmp
enter
and
mov
testl
cmpsb
sbb
jmp
test
fistl
aad
rcrb
jno
push
test
jne
cmp
push
dec
adc
ret
cmc
push
fldenv
sbb
or
xchg
cmc
shlb
test
mov
xor
mull
daa
cmpl
aad
fisubs
into
jecxz
cmp
add
vpunpckldq
subl
insl
mov
jecxz
adc
push
into
fwait
shrl
and
mov
xchg
jb
out
cmp
add
aaa
cmp
jnp
lret
jl
pop
pushf
pop
cwtl
rol
fistps
shl
lea
rol
test
push
pop
fadd
adc
in
repnz
or
out
sbb
out
daa
cld
dec
out
mov
inc
shrb
lcall
in
clc
movsl
xchg
pop
inc
xchg
sub
and
fs
mov
cmp
fistpl
rorb
roll
xor
nop
les
dec
adc
adc
rclb
out
mov
les
js
jb
fildl
sbbb
cli
aad
iret
in
nop
movb
dec
mov
inc
rorb
cmp
dec
mov
pusha
pop
pop
outsl
lods
mov
ds
push
stc
adc
sbb
dec
test
das
mov
lret
xchg
pop
cmp
mov
rcll
out
or
fs
inc
test
sub
cld
and
es
rcrl
cmp
ret
push
push
and
sub
in
inc
or
adc
lods
rorb
cwtl
addb
ljmp
stc
pop
jmp
mov
sahf
int
into
push
pop
fsubl
enter
in
in
mov
ljmp
in
lods
mov
mov
dec
stos
dec
sub
jmp
inc
scas
jae
or
pop
and
inc
pop
and
cmp
sub
mov
imul
dec
gs
xchg
jae
or
add
mov
jbe
mov
mov
fwait
xchg
int3
in
ss
inc
xchg
rorb
push
dec
int
or
aas
mov
inc
cmp
dec
cmp
pop
int
xor
jb
dec
out
das
add
filds
stos
lret
cmc
in
inc
and
addr16
mov
sbb
stos
stos
clc
cmp
ljmp
arpl
jecxz
movsb
cs
add
cmpsb
imul
xchg
push
outsl
movsl
xor
ss
dec
push
movsl
dec
or
outsb
jecxz
add
aaa
pushf
in
int
dec
sub
mov
or
cmp
sbb
jne
pop
popa
inc
pop
repz
pushf
clc
inc
test
jns
add
or
xchg
loopne
mov
push
mov
cmp
addb
inc
mov
jae
lods
inc
arpl
sbb
lock
mov
mov
push
sti
loop
xchg
xor
xchg
or
adc
lcall
fs
inc
lods
xchg
dec
xchg
pop
sbb
ret
out
cmp
adc
imul
test
fcom
test
ss
jp
push
inc
movsl
cmp
sub
xor
shrb
je
mov
mov
je
pop
jmp
sub
xchg
sbb
push
jnp
imul
push
std
aas
cmp
divb
mov
ja
lcall
jmp
ljmp
or
scas
mov
cld
inc
inc
inc
test
pop
in
dec
cmp
popf
mov
push
flds
dec
movsl
std
mov
push
das
fwait
mov
popf
pop
iret
xor
cli
sub
mov
add
add
xchg
stos
cmp
mov
jnp
push
push
cmp
adc
leave
mov
jne
sbb
test
xlat
out
adc
ret
daa
xchg
mov
jp
adc
clc
lds
mov
hlt
cltd
dec
xlat
inc
pop
dec
xchg
lock
push
sbb
sub
mov
ja
ljmp
xor
inc
xchg
dec
mov
push
jecxz
cmp
enter
add
sbb
andl
push
or
hlt
lea
js
add
iret
xor
imul
adc
arpl
pusha
mov
xchg
loopne
mov
adc
sub
push
sbb
mov
in
jmp
jp
and
and
add
inc
into
push
pop
sub
popa
xchg
aam
std
aaa
rcl
sbb
add
cmp
xor
mov
mov
fsubrl
pop
cmp
push
pushf
jne
cmp
xchg
xor
out
fsubp
mov
or
dec
repz
xchg
fwait
or
pushf
repz
and
dec
stos
push
ja
lods
xchg
adc
sbb
ljmp
sbb
pusha
hlt
adc
xorb
mov
xor
jg
mov
pop
jmp
leave
stos
fistpl
test
sarb
out
aam
adcl
cld
cltd
sbb
xor
xlat
fidivrs
stos
adc
icebp
aam
adc
jb
dec
roll
sti
sbb
xor
push
inc
cld
je
gs
nop
cmp
dec
push
scas
cwtl
mov
dec
mov
sarl
mov
ss
mov
stos
pusha
inc
mov
pop
ja
cltd
and
push
movsl
sbb
jno
push
mov
jno
xchg
jl
lea
popa
bnd
adc
fidivrs
mov
lods
xor
sahf
arpl
roll
lods
movsb
repnz
test
or
sbb
xchg
push
xchg
and
add
mov
movsl
cwtl
fisttpl
and
add
dec
pop
cltd
sub
ljmp
cmp
mov
cmp
sub
jo
and
or
stc
xchg
addl
xchg
fwait
aam
jbe
jle
mov
adc
jne
xorb
pop
enter
cs
call
push
push
push
rol
clc
xor
popf
push
jg
fmulp
ja
inc
int3
jbe
mov
pop
test
xchg
cmp
mov
lods
loopne
jge
sub
mov
and
jl
dec
out
movsb
insb
notl
mov
adc
es
pop
mov
add
add
mov
xchg
daa
jmp
js
sbb
or
test
js
cli
icebp
push
enter
mov
nop
push
std
pop
fcoms
int3
jnp
movsb
xchg
and
loope
pop
pop
gs
popf
data16
in
mov
and
sbb
and
push
int
lcall
push
and
lea
pusha
sub
lds
inc
add
xor
push
repnz
cmpsl
cmp
mov
lret
sbb
sub
xor
pop
or
les
or
arpl
hlt
popa
cmc
adc
aad
rorl
popa
test
fwait
and
in
add
cltd
pop
clc
push
push
cli
lahf
cmp
hlt
mov
loopne
int3
dec
ret
leave
pop
jecxz
mov
xorb
mov
sti
lock
mov
scas
mov
inc
or
cltd
fidivs
fwait
sbb
movl
or
and
outsl
mov
or
xchg
pop
mov
leave
push
xchg
cld
aaa
xor
idiv
sbb
clc
or
cmp
ljmp
stos
or
inc
aad
push
scas
ja
add
xchg
jl
add
icebp
scas
shlb
test
lods
out
or
fisubrl
xchg
into
xor
scas
sbb
adc
mov
outsl
popf
aas
leave
mov
int
insl
inc
fsts
cmp
mov
mov
std
mov
sbb
inc
leave
pop
lahf
adc
jmp
into
mov
push
hlt
insl
sbb
dec
sub
sub
and
pop
adc
jns
call
fdivrl
push
xor
hlt
inc
pop
push
out
mov
mov
lea
aam
fs
nop
jbe
inc
push
add
sbb
stos
mov
movsb
dec
popf
je
adc
and
and
xchg
scas
push
mov
jno
pop
adc
sbb
sti
test
xor
jns
loop
call
jg
xchg
cltd
cmpsl
inc
lahf
fcompl
gs
insl
cmpsl
mov
test
xor
aad
mov
fsub
mov
xchg
inc
inc
pop
inc
fwait
lock
sbb
call
in
mov
bound
fcoml
movsb
int
movsl
ret
fmulp
xchg
into
mov
inc
or
stc
bound
cmp
inc
adc
fnstcw
pop
or
jmp
mov
sbb
mov
lods
xchg
int
aaa
add
push
push
xchg
subl
push
fwait
icebp
mov
adc
in
xchg
mov
pop
cmp
loopne
inc
roll
movsb
push
cltd
mov
test
outsl
out
xchg
jne
xchg
aas
dec
inc
dec
ds
push
cmpsl
adc
pop
or
ret
xor
pop
add
or
xor
icebp
cwtl
repnz
pop
push
repnz
repnz
sbb
jge
lret
mov
jmp
out
cld
mov
rcll
sub
xchg
xor
mov
cwtl
sbb
sub
stc
sbb
add
xchg
sub
cmpsl
in
dec
lock
popa
mov
push
pop
stos
sahf
and
jge
ret
lea
out
insl
or
outsl
jo
xchg
jb
cmpsl
or
jae
fists
js
push
loopne
push
and
and
push
fnstenv
xor
inc
insb
cmpsb
push
mov
das
jg
fwait
or
sbb
xor
xchg
jne
xor
mov
stc
xor
adc
ret
loope
push
sti
fbld
xchg
push
mov
inc
inc
aam
aas
push
jecxz
sbbl
clc
lret
testl
and
pop
int
push
push
lret
add
shlb
and
adc
xchg
inc
mov
jmp
or
fsubrp
stos
pop
negl
mov
push
mov
dec
int3
pop
push
jnp
jnp,pt
out
cmp
cmpsb
das
test
sub
xlat
nop
flds
out
mov
shll
inc
jno
lcall
add
push
int
inc
push
std
shrb
divb
add
test
and
out
bound
sbb
xchg
std
popf
xlat
daa
push
das
jg
jp
rol
aam
dec
and
xor
imul
mov
shrl
insb
dec
sarb
adc
scas
adc
movsl
dec
mov
mov
es
sbb
pop
aas
shrb
sub
add
loope
sub
test
cld
js
popa
ficomps
jnp
xorb
and
mov
xchg
and
sub
jo
daa
loope
cmp
sbb
adc
lods
syscall
add
mov
sub
movb
lods
and
sbb
arpl
divb
scas
adc
test
mov
pop
jmp
test
pop
aam
push
outsb
push
test
mov
and
push
aas
in
sbb
inc
sub
fistpl
xor
dec
fidivrs
sub
push
ret
cmp
mov
insb
pop
test
inc
pop
jl
ss
movsl
cmp
and
xchg
shll
mov
jecxz
aas
mov
inc
lods
fwait
movsb
adc
lret
sub
mov
push
xchg
jo
adc
add
push
je
xor
jns
inc
xchg
int
push
mov
push
mov
pop
out
into
loope
int3
roll
in
lods
loope
scas
dec
call
xor
rorb
lcall
stos
psrld
fistpll
subb
and
sbb
sarl
push
or
pop
sahf
inc
std
jge
xor
aas
daa
jb
call
sbb
divl
loopne
out
adc
push
adc
xor
cmpsb
pop
mov
push
inc
xor
mov
mov
mov
stos
pop
shl
push
and
push
xchg
pop
mov
mov
jne
mov
and
adc
cmc
pop
dec
and
cs
mov
dec
cmpsb
outsl
push
add
cmpsl
addr16
pop
mov
inc
loope
pop
pop
push
pop
sub
sub
imul
mov
push
divb
sub
pusha
pop
out
ret
xchg
aas
lcall
mov
popa
bound
jo
cmpsb
fdivrl
xor
lret
sub
pop
jmp
dec
stos
add
int3
dec
xchg
mov
in
cmp
aaa
add
jae
mov
mov
out
cli
sti
sub
insb
fisubs
dec
divb
or
adc
insl
pop
rol
je
inc
insl
and
jbe
xor
in
sbb
leave
xor
xchg
adc
dec
mov
xchg
out
cli
inc
pop
stos
jl
lods
lahf
loope
cmpsl
push
call
mov
enter
pop
lods
push
out
push
stos
mov
jne
idiv
popa
add
js
jecxz
push
in
mov
mov
decl
dec
aam
and
dec
ss
jp
dec
xchg
xor
aaa
outsb
in
mov
cmp
push
arpl
adc
sbb
sub
mov
imul
push
andb
add
xchg
mov
sbb
in
xchg
imul
add
pop
shrb
jb
xlat
xchg
sbb
xlat
xor
mov
into
lods
cmp
mov
xor
push
loopne
jecxz
sub
mov
xchg
lock
iret
cmp
dec
or
sbb
mov
aas
add
add
sub
lods
cmp
dec
inc
push
dec
out
das
jl,pn
adc
push
xor
or
or
lret
out
xchg
out
jmp
xchg
arpl
flds
jne
cmc
mov
cmc
xchg
pop
adc
xor
insb
iret
mov
push
shll
lods
sbb
daa
out
fsubp
mov
xor
pop
mov
push
loop
shll
inc
adc
test
ds
imul
jne
ret
push
or
mov
mov
jnp
aad
fmull
mov
mov
cmpb
repnz
scas
shrl
stos
mov
fdivr
jmp
inc
notb
outsl
call
inc
movsl
pop
mov
mov
pmullw
sbb
sarb
aam
pusha
out
ljmp
dec
and
int3
jae
sbb
sbb
mov
push
pop
sub
mov
ss
xor
and
scas
mov
jne
mov
cmp
jb
into
ljmp
sub
mov
cmp
movsb
mov
jno
push
imul
das
xor
xchg
outsb
lea
xchg
mov
xchg
dec
jo
sub
add
fcomps
push
mov
lock
mov
std
fiadds
jne
je
hlt
stc
test
xchg
ds
mov
xchg
cmp
and
pop
jae
sarl
sub
jns
movsb
pop
cmp
jnp
jp
mov
movl
dec
int
enter
adc
cwtl
fnsave
pop
and
clc
test
mov
push
insb
or
add
std
pop
dec
jecxz
dec
add
scas
or
cmc
lock
test
pop
push
out
add
inc
sub
jg
loop
xor
in
adc
loop
aam
cmp
jle
xchg
or
icebp
inc
fsubrs
adcl
jle
std
sti
mov
stc
lret
xchg
inc
mov
jge
adc
insb
and
jecxz
dec
sub
jno
ja
arpl
xor
jne
sub
movl
mov
arpl
xchg
test
movsb
das
sbb
int
aaa
sbbl
jl
jne
fbstp
fwait
mov
xchg
jno
scas
dec
inc
out
fistpll
xchg
or
xchg
fisttpll
fidivrs
jno
cmp
repnz
icebp
or
aaa
jne
inc
mov
push
hlt
cs
pop
and
mov
fisubl
cltd
sub
push
lods
pop
and
mov
sahf
fiaddl
push
jo
mov
xor
cmp
push
lods
pop
mov
xchg
jmp
push
xchg
pop
and
js
sbb
mov
mov
mov
lods
fwait
imul
xchg
jp
inc
outsb
mov
dec
adc
fiadds
xor
lods
int3
xlat
data16
xor
sbb
pop
pop
xor
cmp
popa
xchg
cmp
adc
pop
lret
add
cli
inc
dec
test
dec
pop
mov
xor
jecxz
and
inc
movsl
fs
cmp
add
insb
mov
xchg
rcrb
fwait
jle
test
lret
repnz
or
loopne
je
lahf
cltd
imul
push
je
mov
add
xor
and
bnd
xchg
sbb
push
popf
lea
jbe
adc
dec
inc
and
adc
inc
scas
filds
inc
push
daa
or
jne
cmp
jg
hlt
test
jge
out
mov
sub
stos
push
sub
repz
push
xchg
fildl
aas
cltd
daa
fwait
mov
mov
sbb
mov
clc
sub
lret
and
lret
sarl
lods
loop
fidivrs
daa
clc
in
repz
insl
sub
aam
jp
mov
insb
loop
add
mov
or
movsb
mov
mov
idiv
sbb
jne
push
mov
mov
pop
out
out
sbb
pop
xor
imull
and
test
movsb
cmc
lds
out
pop
adc
push
xor
push
icebp
inc
jmp
enter
push
lret
pusha
fdivr
into
loope
mov
sub
xchg
xchg
jge
les
cs
inc
cmp
stc
insb
sub
loopne
ffree
adc
mov
dec
pop
loopne
mov
inc
punpckhbw
movsl
pop
bound
inc
repz
pop
icebp
mov
sbb
xchg
jl
jo
sbb
js
cmp
jg
add
in
aad
scas
jg
or
nop
sub
inc
jge
push
push
xchg
xor
outsl
xchg
xor
fbld
rcrl
int3
pop
movsb
cmp
dec
mov
insb
adc
mov
js
js
xor
in
and
mov
inc
mov
fisubrl
leave
jnp
mov
fcoms
je
or
in
mov
in
mov
imull
mov
and
cmp
ficoml
push
jne
rcrb
adc
mov
into
jmp
adc
mov
push
jbe
mov
or
orb
jbe
xchg
clc
jmp
mov
imul
je
in
fcmovbe
scas
jp
fsubr
stos
iret
lods
mov
or
push
mov
and
out
outsl
in
gs
jmp
sbb
push
or
xlat
push
jge
insb
mov
lods
mov
push
setno
inc
fisubs
cwtl
cs
stos
in
lds
xor
fists
mov
jbe
repz
mov
sub
jmp
hlt
sti
setbe
add
jmp
outsl
out
aam
lods
adc
leave
ds
jnp
bound
repz
mov
mov
pop
inc
push
pop
cmp
test
jb
fisubs
fbld
jae
sbb
xchg
mov
sti
ret
rcrl
lret
rcrl
stos
sbb
aaa
mov
arpl
pop
mov
mov
push
pop
loop
adc
lock
loope
insl
push
mov
mov
aad
rorb
push
mov
cli
leave
test
sbb
shlb
add
addl
push
ds
adcl
in
xchg
mov
pushl
popf
in
fimuls
cmp
hlt
out
sub
xlat
and
lret
es
cmp
jb
sub
add
sub
mov
shr
jbe
add
xchg
xor
outsb
stos
fstl
xor
jbe
xor
fisttps
mov
idivb
es
mov
dec
rcll
and
aam
or
pop
stos
xchg
and
rcrb
lcall
dec
lret
xchg
cmp
adc
sbb
xor
xor
jp
fdivs
ror
pop
scas
in
or
jge
inc
xchg
inc
ss
lahf
in
push
loope
mov
mov
addr16
add
inc
jg
mov
inc
dec
aas
inc
lods
or
scas
cmp
inc
and
pop
add
adc
xor
test
jecxz
or
pop
mov
ds
in
or
pop
int3
xchg
or
add
outsb
inc
cmp
dec
sub
test
xchg
stos
and
into
xor
and
pop
sbb
jge
or
dec
cmp
push
lds
lahf
ljmp
test
lret
test
mov
fcoms
or
negb
test
mov
push
jb
lret
inc
out
or
lock
sub
cmpsb
push
push
lock
jns
mov
inc
xor
mov
je
aas
repnz
dec
in
inc
xor
ret
dec
pop
xor
mov
cwtl
adc
imul
xchg
push
inc
pop
out
xchg
and
mov
xchg
testl
imull
int
mov
rcl
scas
xchg
jg
int3
sub
pop
cmp
push
scas
cli
idivb
xor
fistpll
pop
stc
lret
adc
inc
aad
lret
lret
popa
inc
clc
jge
lcall
leave
outsl
lahf
arpl
test
push
fdivl
push
fistpll
push
push
insl
repz
lret
push
jns
pop
sbb
andb
addb
jge
pop
adc
fisttpl
and
mov
nop
fldenv
andps
cmp
andl
pop
cs
lret
js
add
sti
xor
lods
jne
aam
int3
inc
push
or
insb
and
xor
out
stos
filds
jg
je
inc
les
popf
int3
fsubs
add
lret
xchg
add
pop
xchg
lcall
adc
adc
incb
lods
or
sub
dec
pushf
mov
inc
popa
sbb
pop
in
cwtl
dec
push
cs
shlb
scas
stc
xchg
sub
push
push
sub
pop
rcl
jmp
ret
lods
pop
push
jnp
jbe
or
cmpsl
fs
int3
addr16
xor
pushf
scas
mov
xchg
je
cld
cmpsl
loop
jbe
add
daa
adc
lods
mov
or
ja
dec
aas
cld
in
add
dec
andl
push
mov
gs
jnp
movsl
add
out
mov
nop
ja
sbb
loop
gs
inc
test
jb
scas
lods
adc
or
cmp
fstps
xchg
adcl
xor
outsl
test
cmpsl
ficoml
les
dec
cltd
ljmp
dec
mov
dec
stc
std
mov
imul
mov
stc
sbb
lahf
stc
cwtl
push
adc
pop
xlat
xor
sub
push
movsl
daa
aaa
aam
pop
insb
push
loopne
enter
imul
mov
fnsave
enter
or
dec
scas
fiadds
repnz
xchg
scas
mov
mov
lods
sbb
xchg
or
sbb
pusha
cli
sbb
clc
aam
mov
and
insb
add
test
loop
clc
test
in
imul
cmp
sarb
dec
xor
sub
xchg
mov
cmp
sub
jp
sti
lret
xchg
inc
or
push
in
dec
mov
adc
xchg
inc
movsb
enter
fdivrp
push
scas
xchg
int3
jns
add
orb
push
pop
aaa
inc
xchg
mov
pushl
popf
rolb
and
adc
inc
lock
and
push
jo
outsb
into
insl
sbb
cmp
int
pop
jns
movsb
repz
mov
jo
push
push
leave
mov
test
pop
push
loopne
data16
scas
dec
jne
test
mov
cmp
sub
mov
mov
enter
lea
ss
int
xor
outsl
popf
jns
xchg
xchg
lock
pusha
rcl
pop
mov
mov
outsl
in
adc
int3
dec
rcl
mov
push
test
inc
push
inc
pop
aaa
out
push
aam
out
mov
sbb
sbbb
stc
stos
sub
xor
cmpsb
or
and
pop
jnp
xchg
lods
cmp
cmp
fsub
and
or
les
pop
ljmp
mov
je
mov
imul
jp
lods
movsb
push
jne
filds
xor
dec
cltd
sub
xlat
cmpsl
cmp
es
push
or
jae
push
stos
pop
in
jg
lret
jg
sbb
mov
lods
add
fcompl
add
sarl
pusha
imul
test
push
test
inc
push
xlat
pop
sbb
pop
aaa
inc
aaa
rclb
push
outsl
je
out
cmp
dec
rcrl
scas
sti
mov
das
int3
sub
ret
fs
pop
cltd
add
push
jl
pop
xchg
ss
sbb
das
jns
or
xor
out
pop
adc
pop
push
clc
or
aas
adc
popa
cwtl
jne
sub
mov
cmp
dec
scas
push
bound
adc
nop
aaa
test
lods
cmpsl
dec
cld
ror
sub
test
insl
xchg
push
stc
jecxz
adc
sub
lods
and
dec
imulb
in
mov
xorb
pop
cmpsb
fwait
mov
mov
xchg
xor
lcall
jnp
sbb
in
pop
loope
xchg
insb
xor
lret
xchg
fcoms
fidivl
cmpl
pop
sti
adc
adc
outsb
pop
in
pushf
jg
in
cltd
clc
stc
lods
add
iret
cli
aaa
push
inc
and
adc
gs
dec
xor
inc
add
xchg
add
ret
ss
sarl
sub
lods
adc
jg
std
dec
cmp
push
xchg
jns
loop
or
inc
out
nop
or
xchg
lcall
cwtl
lcall
sub
mov
sbb
xchg
cmc
test
push
daa
aas
and
popa
mov
xchg
cli
fimull
pushf
inc
and
enter
out
jne
arpl
loope
add
jns
mov
aaa
and
xor
xchg
int3
xchg
das
popa
ljmp
addr16
cmp
lock
pop
jne
mov
xchg
mov
dec
loop
add
jmp
cli
fnstcw
adc
jmp
jmp
rol
add
dec
xchg
adc
inc
push
lods
pop
xor
rcrl
or
daa
cli
movsl
pop
mov
pop
or
cmpsl
fwait
mov
pop
push
sti
push
das
mov
dec
pop
mov
in
mov
sbb
cltd
fisttps
in
xchg
mov
push
stc
test
push
push
inc
stos
ret
sbb
lds
xchg
orl
cmp
or
pop
xchg
shlb
bound
jns
jmp
add
mov
inc
loope
mov
push
xchg
pusha
mov
jmp
cmpsb
stos
add
ss
call
shrb
subb
stos
push
pushf
adc
inc
dec
jle
dec
dec
aas
xor
ss
cmpsb
xchg
dec
imul
test
cltd
sbb
and
xchg
fstpl
cmpsb
jno
mov
nop
mov
or
dec
jge
sbb
add
call
mov
fiadds
loope
inc
je
rclb
mov
lds
dec
dec
stos
mov
cmp
jl
in
or
sbb
push
pop
cmc
lahf
push
int3
data16
dec
outsb
inc
mov
mov
cmpsl
inc
pop
inc
sbb
les
jmp
push
push
sub
jne
xchg
xchg
and
dec
pop
lock
rclb
adc
out
dec
xor
cmp
stos
loop
xchg
xchg
pop
dec
jp
lret
push
popa
jle
roll
inc
adc
adc
mov
jg
movsl
pop
adc
xchg
int3
mov
xor
pop
scas
jle
sub
push
adc
mov
xchg
fstpl
inc
nop
into
lcall
jp
fwait
xchg
insb
xchg
cmp
adc
ret
and
sub
int3
push
dec
pusha
dec
cmp
sbb
cmp
outsl
repz
aam
testl
xchg
inc
addr16
sarl
pop
jmp
out
data16
or
xchg
lock
fidivs
sbb
sbb
scas
push
pop
add
inc
pop
adc
cmp
fnstsw
cmp
add
mov
lahf
fistps
jae
mov
mov
jmp
push
push
je,pt
iret
call
cltd
jge
inc
xchg
iret
sahf
sub
and
shrl
and
cwtl
lea
out
scas
fucomp
cmpsl
mov
daa
pop
or
scas
stc
and
leave
sub
lods
xchg
fwait
inc
xchg
sub
add
movsb
sub
out
pusha
out
or
jo
xchg
add
mov
jbe
adc
add
sarl
push
inc
and
loop
aad
lret
jp
test
xchg
out
jb
insl
xchg
xlat
lcall
xchg
ss
int
out
out
push
lods
std
imulb
jns
stos
xchg
mov
outsb
lods
cmpsl
mov
mov
pop
into
adc
daa
push
jne
mov
mov
pop
loope
loop
xor
jbe
inc
and
fs
movsl
xor
push
adc
shll
js
sub
test
push
jge
lock
cld
cmpsl
ror
xchg
sbb
or
loope
jb
cwtl
in
xchg
adc
nop
sbb
insb
mov
lea
mov
lods
shlb
xor
push
pop
mov
jl
aad
outsl
adcb
shrb
sbb
std
jmp
mov
scas
lea
inc
in
xor
xor
jmp
loope
xor
fisttpl
stos
into
jne
mov
sbb
rclb
gs
push
cmp
jb
incl
cmpsl
pusha
or
fisubrs
jle
je
lock
lock
repz
arpl
dec
icebp
lea
imul
mov
in
jmp
lock
push
pop
mov
add
jne
fcmovbe
or
inc
fstps
inc
ljmp
push
aaa
sub
xchg
insl
lods
cwtl
pop
fidivrs
dec
test
xor
xchg
in
mov
ret
sbb
xchg
xor
fwait
mov
xchg
and
xchg
add
xorl
dec
fnsetpm(287
cmpsb
mov
push
jo
shrb
test
scas
mov
cmc
int3
enter
cmp
pop
outsb
nop
ud1
adc
fidivs
pop
jmp
xchg
push
inc
mov
test
pop
push
cmpsl
xor
pop
dec
nop
sub
fildll
outsl
mov
pop
mov
repnz
mov
jle
jne
mov
rcll
cmp
jns
or
pop
mov
fmuls
push
push
popa
fstps
pop
shr
sbb
push
hlt
stos
sub
dec
pop
mov
mov
shll
jns
dec
std
mov
mov
cmp
aad
scas
ret
lcall
inc
dec
and
out
mov
sahf
mov
mov
popf
aam
push
add
or
and
loopne
shr
repz
mov
fimull
inc
mov
inc
test
adc
sub
lds
sub
leave
mov
in
jl
sbb
fbstp
lret
roll
into
punpckhdq
fisttps
dec
xor
xor
out
mov
mov
cmpb
popl
jae
loop
orl
clc
add
xchg
outsl
and
inc
inc
sub
jp
into
xor
mov
into
sub
pop
adc
push
cld
hlt
shll
xor
aas
stos
xchg
and
and
hlt
sbb
scas
pusha
pop
insb
sub
push
xor
mov
mov
or
in
stc
dec
mov
sbb
pop
bound
fistps
test
mov
loope
xlat
scas
adc
loope
jge
into
pop
jo
pop
sbbl
sti
mov
sbb
pop
jnp
addl
jmp
pop
add
aad
fucompp
adcl
mov
mov
movsb
je
insl
xlat
xchg
adc
xor
clc
scas
aad
mov
or
divb
dec
mov
pop
inc
adcl
add
pop
mov
push
das
pop
push
fs
and
mov
jne
jne
aaa
insb
xor
add
lds
jg
inc
push
sbb
inc
mov
push
cmp
mov
movsb
or
daa
sub
xchg
lds
push
xchg
jnp
pop
pushf
jnp
inc
enter
dec
les
push
aaa
hlt
push
dec
or
into
fadds
mov
mov
test
rcrl
cltd
pop
inc
imulb
fists
jno
adc
push
mov
push
sbb
arpl
pop
sub
lret
loop
mov
popf
push
and
jbe
inc
mov
inc
sysenter
push
pop
daa
mov
jno,pn
xchg
mov
jp
ljmp
mov
sub
jnp
scas
xor
push
into
cltd
fsubrp
bnd
sbb
or
xchg
mov
leave
repnz
fwait
roll
adc
sub
cmc
or
int
xchg
push
cld
lock
call
jp
sub
insl
xchg
push
dec
and
xor
sbb
xor
push
shrl
or
addr16
xchg
cwtl
cmp
cmp
mov
xor
out
std
lds
cmp
mov
pop
test
test
inc
les
sub
push
sbb
inc
pop
mov
cmpsb
xor
and
sub
pop
jmp
popa
out
jbe
popf
or
mov
movsl
iret
sub
nop
rep
je
adc
addl
test
dec
pusha
add
orb
repnz
xor
dec
cmpsl
lock
shl
jp
filds
xlat
push
sub
mov
test
ds
mov
and
xor
adc
loopne
mov
icebp
ss
lret
push
les
ret
addl
pushf
inc
mov
cmpsl
sbb
cmovo
fldcw
cli
pop
cmp
outsl
test
jae
push
pop
mov
dec
sub
adc
outsb
stos
fwait
mov
jne
data16
pop
sti
shlb
in
stos
sub
shlb
out
mov
or
jae
jg
jae
in
test
sub
cmp
clc
daa
ficomps
xchg
clc
add
mov
xor
rorb
shlb
sbb
pop
dec
shll
or
cmpsb
mov
hlt
loop
and
je
pop
ds
add
mov
insl
dec
mov
pop
sbb
push
std
test
sub
push
mov
sub
addb
lods
clc
loop
sbb
sbb
insl
arpl
cli
imul
das
std
sarb
loop
cs
adc
push
aaa
mov
sarl
out
ljmpw
lods
jecxz
or
cmpsb
xchg
mov
jb
fcom
jle
pop
js
cmp
loop
pop
shrl
mov
jle
pop
mov
xchg
rorb
in
cmpsb
dec
mov
pop
add
clc
aas
negl
insl
mov
fnstenv
or
pop
out
aam
xchg
pop
cltd
pop
jno
mov
jae
push
es
stos
in
adc
push
xchg
and
xchg
xchg
cmp
mov
sbb
pop
popf
pusha
incb
push
in
aaa
ljmp
sbb
lock
pusha
aam
test
xor
mov
aad
sub
imull
fsubrs
cmp
mov
jmp
xchg
test
mov
dec
cmc
and
xor
pop
ror
push
mov
in
test
repz
inc
push
popf
fst
pop
pop
dec
leave
movsl
cmp
lock
scas
mov
and
add
xchg
loop
jne
mov
sbb
adc
jl
cltd
movsb
imul
adc
pop
mov
movsl
dec
mov
popf
mov
jp
lret
sbb
push
inc
call
push
mov
sbb
loopne
cltd
loop
mov
push
ja
es
mov
sub
xor
inc
jge
into
test
popf
insl
es
fidivs
nop
test
dec
mov
cmc
lcall
sahf
fmuls
das
jle
dec
mov
add
sbb
and
out
and
pop
data16
push
insb
btc
lock
and
mov
push
add
insl
cmc
mov
cmp
lret
push
pusha
sbb
icebp
and
gs
xchg
lret
xlat
jecxz
test
jns
push
clc
rcll
jecxz
mov
ret
out
push
jp
xchg
jp
jns
pop
lea
test
lds
iret
pop
inc
shlb
out
pop
bound
jbe
aad
fs
push
xor
fists
fnsave
testl
push
or
in
add
in
or
dec
xor
adcl
mov
mov
or
mov
mov
pop
mov
lods
and
hlt
mov
lcall
aaa
xchg
in
lcall
xor
sub
fcoml
insb
adcl
xchg
jo
pop
cmp
into
xor
mov
xor
notl
data16
in
movsb
jbe
add
xchg
test
or
mov
pop
scas
lea
mov
fwait
and
cmc
and
ss
adc
aas
xchg
cmp
sub
das
push
and
imul
adc
mov
push
test
loop
pop
mov
js
pop
and
pop
sub
push
xor
add
dec
add
cmp
ret
xchg
xor
inc
push
mov
adcb
scas
xor
loopne
cmp
mov
mov
mov
lock
mov
mulb
insb
cmp
sti
ljmp
cmp
scas
js
inc
mov
jmp
lods
data16
jo
inc
sete
orb
push
add
pop
adc
mov
push
mov
test
pop
fdiv
cmpsl
add
jno
sub
or
lret
cmp
xchg
mov
jne
lret
jne
nop
shrb
push
stos
and
cld
xlat
dec
mov
repnz
bound
shll
enter
mov
popa
out
icebp
push
dec
pop
mov
push
sub
and
adc
xchg
sub
test
in
sub
scas
mov
std
pop
cmp
add
jecxz
cwtl
push
or
add
lods
mov
fidivrl
sbb
fimull
adc
lods
addr16
add
push
andl
mov
leave
add
cmp
mov
mov
out
iret
cmp
mov
icebp
dec
sub
rcrl
and
push
mov
push
outsb
push
or
into
lods
pop
cmp
repz
leave
fwait
in
filds
or
pop
rorb
xchg
mov
xchg
loope
mov
mov
imul
sbb
xor
in
jg
sbb
jmp
sbb
mov
pushf
and
cld
sarl
mov
xlat
cmp
sbb
and
aam
cmpsb
out
mov
or
imul
hlt
jo
movsl
mov
je
inc
hlt
shrl
rcl
mov
dec
out
and
pop
mov
inc
leave
stos
mov
dec
scas
mov
and
cmp
sbb
jle
rclb
mov
ret
dec
sub
and
bound
popa
dec
xor
jmp
aam
imul
mov
jae
inc
mov
or
aad
leave
jno
incb
mov
cmpsl
clc
mov
icebp
sub
pop
dec
daa
nop
add
in
push
add
pushf
and
mov
cltd
add
fnstsw
imul
or
dec
in
stos
mov
lods
mov
lret
jge
or
std
jne
and
fldcw
adc
lcall
cmp
or
or
imulb
popa
jl
and
sub
mov
daa
mov
shlb
aas
adcl
pop
repnz
aad
mov
cltd
rolb
mov
and
and
inc
ret
out
les
or
jmp
cs
daa
push
repnz
dec
ljmp
pop
mov
sbb
mov
mov
xor
or
sbb
or
jbe
push
pop
jo
dec
cmpsb
out
mov
add
mov
add
mov
repz
setns
movsl
push
ja
or
xchg
call
inc
mov
or
inc
jl
pop
jbe
inc
mov
flds
mov
mov
leave
jmp
ret
mov
fwait
xchg
ljmp
rcr
cltd
or
imul
out
adc
inc
xchg
add
mov
jns
fmulp
dec
imul
push
ret
hlt
jo
xor
pop
lods
and
popf
add
mov
mov
cs
fsubrl
pop
add
push
orl
sub
js
cmpsb
xchg
add
lcall
push
or
mov
pushf
inc
adc
and
dec
jecxz
push
push
imul
rcrb
push
pop
jno
xor
cmp
sub
rolb
pop
cs
fcom
icebp
dec
int3
jae
sbb
pop
jo
xor
sub
cmp
pushf
imul
fwait
add
stos
add
mov
out
push
test
out
sbb
mov
insb
sub
int
or
cmp
push
lock
rorb
aas
rolb
nop
pop
mov
jecxz
pop
rcll
sub
xor
push
out
mov
test
dec
mov
or
pop
lds
fwait
sub
mov
dec
push
fnstcw
cli
in
xchg
push
sub
inc
stc
insl
mov
insl
mov
pusha
stc
push
jp
xchg
inc
in
mov
jnp
loope
repnz
inc
cmp
ljmp
mov
mov
jl
inc
in
lds
jno
shrb
push
aad
ja
jle
pop
fcoms
jae
fnstenv
push
incl
icebp
inc
mov
jno
xchg
mov
icebp
mov
jmp
data16
test
lock
jno
xor
cmp
cmp
lret
sub
xchg
mov
lret
leave
mov
mov
lahf
fldl
gs
pop
cmp
and
xor
adc
dec
int3
ret
pop
and
jae
pushl
sahf
repz
add
cmp
data16
sub
in
mov
movsb
push
mov
inc
push
es
jle
adc
mov
cmp
inc
test
in
js
inc
mov
das
and
imul
pop
outsl
notl
shrl
outsb
inc
stos
inc
pushf
mov
and
push
data16
pop
xor
lds
in
fwait
sbb
xor
pushf
stos
xchg
xchg
js
xor
push
out
xchg
dec
sti
inc
sub
mov
insb
dec
sbb
and
sub
and
xchg
add
imul
inc
pushl
outsl
pop
and
es
test
add
jp
aaa
add
mov
jg
pop
iret
add
cmp
in
adc
mov
cmpsl
pop
pop
push
xlat
inc
outsl
rorb
fstpt
dec
pop
push
xchg
or
hlt
push
push
add
push
test
dec
pop
pop
mov
lahf
mov
imul
mov
dec
addr16
daa
sub
fbstp
and
movb
cmp
push
mov
mov
ficomps
imul
mov
inc
gs
bound
cmpsb
aas
dec
test
ljmp
out
jne
pop
inc
mov
loopne
insb
pusha
mov
maxps
roll
xchg
ret
je
imul
insl
inc
add
loope
stos
pushf
outsl
out
das
xor
mov
add
mov
dec
push
fnsave
leave
xchg
shll
pop
xchg
cltd
sub
and
test
js
mov
push
sarb
repnz
rcrl
sub
cli
xchg
je
push
jns
dec
push
jnp
add
dec
xchg
mov
xor
mov
inc
repz
mov
mov
mov
jo
add
ret
adc
sbb
mov
icebp
dec
cmp
stc
push
jecxz
cmp
and
inc
ljmp
inc
ljmp
pop
ss
push
fwait
mov
movsb
lahf
pushf
dec
inc
mov
jge
lods
xchg
lds
lret
rol
mov
js
scas
insl
push
mov
es
pop
loop
jo
push
push
cs
lods
stc
in
mov
mov
push
xorb
jle
sti
imul
rcll
sbbl
dec
or
xor
mov
add
push
xor
xor
loopne
jo
xchg
mov
and
mov
mov
cmp
xor
dec
sbb
jp
or
xlat
mov
mov
pop
ljmp
stos
push
je
xchg
mov
out
ror
inc
js
enter
lds
push
in
mov
jno
mov
icebp
mov
mov
mov
addr16
popf
clc
outsb
jmp
repnz
or
fisubrs
push
or
hlt
push
js
mov
test
scas
divb
push
repnz
push
aad
ret
mov
loop
repz
jns
std
cmpsl
cs
repnz
data16
pushf
mov
imul
mov
sti
pop
jb
jmp
fisubrl
jne
xchg
loope
fstl
lock
and
xor
pop
jl
jns
scas
inc
inc
sub
jo
sbbl
enter
lea
mov
jnp
repnz
movsb
cmp
jle
pop
shll
and
cwtl
gs
or
mov
cmp
out
push
mov
fadds
adc
adc
push
push
mov
sahf
push
xlat
mov
cmp
orb
call
movsb
aaa
cmc
pop
jecxz
xor
pop
bound
pusha
dec
dec
shll
xor
push
inc
and
imul
pop
adc
into
pop
mov
dec
xchg
mov
or
ss
cmp
mov
pop
movsl
mov
mull
rolb
pop
int3
aas
mov
shl
dec
stc
scas
jbe
sub
scas
push
fsubrs
pop
repz
repnz
cwtl
and
xchg
push
mov
int
xchg
sahf
dec
scas
out
or
xor
add
ljmp
cmpsl
negl
or
jl
inc
inc
sub
and
cwtl
sub
prefetcht0
rcrb
js
jg
add
mov
mov
add
jo
push
cmp
je
call
jo
jbe
mov
mov
xchg
mov
pop
imul
jmp
pop
hlt
dec
jae
inc
mov
pslld
mov
out
dec
dec
clc
push
push
push
jne
mov
mov
imul
pop
mov
dec
push
add
xchg
out
and
cs
adc
dec
mov
fnsave
mov
mov
or
dec
sub
mov
xor
daa
jmp
pop
adc
push
imul
cmc
scas
mov
popa
xor
sub
ret
sbb
xchg
and
jge
popf
stc
rcrl
mov
sbb
mull
sarb
sub
adc
pop
fwait
ja
inc
xor
pop
sub
mov
stos
pop
jns
pop
xchg
jle
mov
clc
sarb
sub
jl
rorb
enter
push
imul
and
cwtl
xor
fcmovne
add
lret
fs
cwtl
push
pop
mov
lret
fdiv
pop
push
call
idivb
sbb
jge
daa
jnp
or
xor
or
roll
test
fistpl
div
lods
xorb
push
mov
inc
addl
inc
test
mov
inc
into
out
mov
xchg
mov
and
mov
andb
outsl
or
xor
scas
xchg
cmp
popw
xchg
inc
xor
add
jecxz
imul
sub
xchg
cmp
aad
push
ja
and
scas
je
mov
xorl
xlat
xchg
or
jecxz
xlat
cmp
xchg
adc
xchg
dec
stc
jge
cmc
in
ljmp
or
mov
push
out
lds
nop
push
test
shlb
nop
inc
push
out
es
in
xchg
aam
mov
jmp
mov
les
pop
test
inc
mov
push
lahf
clc
andb
cwtl
pop
xchg
scas
dec
cwtl
cs
push
ret
pop
add
mov
sbb
dec
popf
or
mov
lahf
rcr
repz
push
push
mov
mov
fbstp
jno
inc
pop
data16
mov
mov
aad
cmp
fstl
into
sbb
daa
sti
push
sbb
scas
scas
jne
push
movsl
mov
scas
add
movsl
nop
aaa
jmp
push
cmpsb
imul
ljmp
add
pusha
mov
pop
aad
loope
daa
sub
push
push
stos
jl
mov
sbb
popa
loope
xor
pushf
hlt
imul
inc
rcr
xor
push
pop
xor
icebp
sahf
lds
xchg
outsb
push
cmpsl
lret
loop
scas
enter
inc
sbbl
nop
dec
sbb
adc
xchg
test
and
mov
jns
push
arpl
pop
aas
clc
ljmp
or
imul
mov
out
adc
xchg
sti
jns
sub
mov
mov
stos
add
mov
int3
push
aaa
jns
lret
push
test
subb
push
outsl
loopne
sub
ret
pusha
sub
mov
out
fdivs
and
mov
stos
sub
stc
adc
es
inc
movsl
cmp
imul
mov
call
jecxz
mov
pop
fimuls
pop
or
pop
outsl
cld
cmp
mov
jno
mov
dec
cmpsl
scas
xchg
mov
pushf
adc
bound
out
out
cmpsb
mov
aam
idiv
sub
int
mov
push
pop
dec
xchg
mov
ds
in
adc
cli
mov
pop
or
test
loop
mov
lods
xorb
pop
push
jb
xor
push
aad
orb
incl
fisttps
xlat
daa
push
mov
loop
jl
lock
popa
mov
cli
arpl
mov
push
jmp
sub
sub
xchg
insb
pop
xchg
imul
push
or
in
and
sub
aaa
mov
mov
outsl
or
sub
jg
lret
or
lds
cmp
pop
loopne
push
sbb
aaa
jp
das
inc
fistpl
xchg
inc
sarl
enter
push
xor
mov
sbb
dec
test
jp
jnp
add
mov
cli
pop
and
out
ret
pop
inc
push
in
cmp
pop
jge
xchg
xchg
lods
fwait
ret
pop
add
push
dec
and
jbe
icebp
lea
sbb
dec
lret
jle
xchg
push
icebp
clc
incb
push
lock
psrlq
mov
sub
and
mov
add
sub
sub
jne
jbe
nop
pop
scas
leave
add
and
into
mov
pop
popf
sub
aaa
xchg
and
push
mov
repnz
out
mov
pop
in
fwait
xor
call
xchg
sbb
mov
mov
std
dec
div
mov
repnz
iret
rorl
int3
dec
jg
scas
add
lea
hlt
in
pusha
xlat
xor
mov
jae
and
inc
or
mov
aam
adc
pusha
jecxz
roll
sbb
pushl
jp
jmp
push
adc
je
lock
mov
xchg
inc
sbb
or
jle
ret
xchg
push
mov
mov
es
cmpsl
hlt
xor
mov
fiaddl
jmp
xor
xchg
jnp
jno
icebp
lods
adc
xchg
popf
inc
or
or
pushf
jo
sti
ljmp
and
mulb
sub
in
imul
push
and
sarl
loop
iret
lcall
inc
cmp
and
cld
or
aad
cmp
pusha
enter
scas
xchg
mov
sbb
mov
push
jns
ret
push
push
mov
stos
cmpsb
mov
dec
frstor
xchg
and
notrack
cwtl
lds
mov
addr16
and
xor
ret
pop
insb
shll
pop
push
ficoml
fs
rcr
jmp
lcall
mov
pop
loop
inc
data16
mov
jo
test
popf
xchg
out
mov
leave
mov
mov
or
jmp
adc
xor
cmc
cmpsl
fisubl
lea
out
cmp
hlt
cs
sub
mov
cmp
pop
dec
call
int
ret
lods
fsincos
xor
mov
pop
push
push
lcall
and
cmp
dec
loope
cld
mov
adc
pop
cs
push
add
pop
jns
sbb
xchg
test
in
lea
sub
cli
rcll
sbb
xlat
rcl
xor
xor
pop
mov
dec
push
ja
jle
jnp
pop
leave
bound
add
or
out
cwtl
testb
outsl
or
add
cs
adc
or
aaa
cmp
pop
push
mov
or
sbb
mov
jo
jge
lcall
xor
push
jnp
xchg
cmpsl
add
xor
daa
inc
cmpsl
stos
je
add
jp
stc
loop
add
adc
andb
sub
je
ds
mov
adc
sbb
movsl
jae
mov
and
outsb
mov
shr
ja
sbb
jmp
out
push
mov
andl
cltd
push
lock
sub
mov
data16
std
cmp
jno
push
fidivs
pop
pop
jno
mov
sbb
nop
mov
nop
nop
add
pop
cmp
lret
sub
addr16
adc
adc
loop
jnp
push
dec
mov
nop
xor
rolb
ljmp
fucomp
dec
lret
xor
push
sub
push
push
inc
sbb
leave
mov
cmpsb
mov
lret
adc
loopne
pop
and
aas
mov
sub
mov
aad
lds
mov
fiadds
and
frstor
push
in
dec
jo
dec
jnp
adc
dec
mov
adc
imul
jo
and
push
pop
mov
cmp
mov
or
xchg
test
inc
fs
icebp
xchg
repnz
dec
push
fistpl
push
xchg
xchg
inc
movl
in
cmpsl
js
adc
imul
sub
jae
fadd
lcall
sbb
roll
test
mov
jle
xor
mov
sti
jl
or
dec
pop
je
adc
xor
out
hlt
jno
sbb
xlat
test
sbb
iret
xchg
outsb
sti
pusha
jl
rol
fidivs
rcrb
adc
add
xchg
mov
hlt
lret
push
jmp
das
aam
in
push
inc
out
jno
es
xchg
mov
test
dec
outsb
and
into
xor
sbb
cmp
repnz
repnz
mov
std
outsl
sub
mov
movsb
int
add
stos
sbb
stos
and
xor
fisttpll
mov
cmpsb
std
inc
pushf
pop
mov
sti
push
lret
jns
cs
mov
push
adc
adc
dec
push
into
jl
mov
sbb
mov
out
adc
loop
adc
insb
mov
jns
imul
testl
sbb
les
lea
sbbl
leave
mov
iret
dec
loopne
aaa
aam
cli
mov
jg
test
imul
enter
int
inc
mov
dec
dec
adc
clc
sub
lods
add
pushf
dec
outsl
xor
xchg
adc
adc
cmp
mov
push
adc
jmp
and
mov
mov
mov
fisubrl
sub
out
add
lds
dec
xchg
xchg
sbb
jne
fs
sub
addr16
scas
clc
xor
pop
push
inc
mov
dec
pop
lods
aam
out
push
mov
mov
inc
mov
sub
test
push
filds
jg
shlb
clc
cmc
mov
idivb
cltd
push
xchg
fldl
jge
ficoms
repz
test
adc
aas
pop
fcoml
repz
pusha
cs
xor
daa
xor
aas
outsl
inc
outsl
push
adc
nop
pop
jne
cmpsb
cmc
stos
sub
movsb
mov
jbe
mov
movsb
xor
pop
mov
jmp
inc
mov
mov
cmc
xchg
push
adc
pop
orb
dec
mov
loopne
mov
ds
pop
mov
call
push
add
pop
jmp
mov
jbe
adc
inc
mov
jo
scas
inc
mov
std
ret
fdiv
mov
rcrl
pop
outsl
pop
sbb
and
imul
add
mov
in
adc
popa
xchg
ja
and
shll
repz
inc
call
es
adc
jmp
push
mov
or
push
add
adc
or
and
mov
xchg
adc
or
or
cmp
push
jbe
mov
add
xor
inc
add
lahf
xor
mov
jae
cltd
sar
inc
mov
lret
inc
mov
fnstcw
xor
sbb
mov
js
insb
cmp
push
mov
xchg
adc
fidivrl
sub
movsl
mov
jne
iret
movsb
xchg
mov
mov
loopne
push
and
gs
pop
into
jo
or
mov
mov
jbe
dec
lret
and
outsl
imul
cmp
lahf
jecxz
mov
je
in
test
push
icebp
mov
xor
push
dec
sahf
mov
mov
aaa
loop
jnp
sbb
lds
adc
jle
xlat
jae
fcmovnu
mov
sub
jb
pop
sub
fwait
cmp
loope
xchg
add
dec
xchg
sbb
lock
in
sub
fists
mov
outsb
lds
stos
mov
ror
aad
imul
and
sti
mov
stc
in
add
pop
repnz
cltd
out
das
sub
out
enter
xchg
bound
nop
adc
jle
or
and
push
dec
mov
cmp
dec
loopne
je
and
xor
mov
push
push
cmp
pop
scas
das
push
loop
lds
sbb
push
dec
les
dec
pushf
imul
mov
ret
je
filds
out
popf
cwtl
jl
lods
xchg
pop
ret
sbb
push
rolb
test
mov
jmp
push
orl
or
notl
add
add
xor
inc
sub
xorl
test
stc
ds
cmp
dec
test
bswap
jbe
mov
add
mov
push
push
lea
movsb
mov
pop
bound
xchg
jbe
fwait
dec
ljmp
lret
inc
icebp
adc
sub
cltd
outsb
xchg
nop
inc
in
and
std
ja
xchg
loop
mov
jle
lds
aad
out
fisubrl
popf
sbb
scas
daa
dec
push
out
push
push
jle
mov
and
subl
adc
lcall
test
push
loope
insl
je
loopne
pop
dec
repz
fwait
mov
lahf
mov
data16
pop
jnp
gs
jb
add
jl
push
push
cmpsl
test
mov
mov
xchg
mov
jbe
mov
cmovb
lahf
leave
dec
push
adc
xchg
mov
inc
into
rorb
inc
mov
or
test
jge
xor
test
rcll
pop
int3
inc
cs
adc
pusha
or
xor
movsb
int3
cmp
sarb
in
jmp
cmp
hlt
mov
cmp
adc
rorb
cmp
mov
lret
pop
loop
insl
jo
out
jmp
push
mov
sbb
icebp
jge
mov
push
lds
push
dec
aas
mov
ja
jge
or
mov
cs
popf
dec
pop
push
dec
imul
int3
mov
jnp
sbb
cmp
ret
mov
xlat
gs
mov
adc
fadd
adc
lock
movsb
cmp
iret
dec
add
jbe
js
mov
lcall
outsb
rorl
insb
imul
les
subb
pop
outsl
lahf
push
loopne
sarb
sub
inc
scas
jle
dec
cmp
mov
jns
loope
push
notb
xor
xor
jne,pn
dec
cmp
dec
adc
lods
test
xor
xchg
push
cmp
xlat
lcall
push
xor
cmp
addl
jecxz
sbb
pop
fnstsw
cltd
lea
mov
data16
vcvtsi2ssl
pop
les
enter
jp
jmp
cltd
push
jecxz
nop
inc
inc
adc
cltd
inc
cmpl
jno
imul
sti
xchg
mov
cmc
and
sub
mov
mov
sbb
dec
lahf
cltd
jns
insl
insb
pushf
fisttps
adc
or
inc
cs
push
int3
mov
fstpl
xor
ja
dec
sub
dec
sub
out
sahf
or
mov
or
cmpsl
mov
mov
dec
lods
outsb
sbb
cmc
fwait
cwtl
adc
aad
jo
cs
push
fwait
clc
movsb
pop
mov
bound
and
mov
sbb
mov
mov
clc
lods
aad
jo
out
fldcw
out
leave
pop
pop
mov
mov
fstpl
jnp
mov
and
leave
push
mov
pop
push
idivb
and
loopne
lock
add
sub
lods
jb
subl
subb
mov
push
push
jecxz
mov
mov
insb
add
clc
dec
cmp
ret
clc
add
inc
popf
popf
int
movsb
sarl
push
es
rcl
lods
inc
pop
fs
adc
dec
inc
jg
xorb
cmp
stos
or
dec
cmp
sub
inc
movsb
mov
sub
aad
mov
xchg
pop
push
add
jno
dec
rolb
into
sub
jae
jae
cltd
insl
in
sbb
sbb
mov
jne
and
xlat
and
jl
insb
fsubrl
jne
inc
xchg
or
ljmp
mov
mov
xchg
in
mov
jo
push
mov
imul
iret
aas
or
repnz
mov
jp
mov
jae
insl
mov
xor
sbb
mov
or
cli
sub
lds
negb
popf
repz
movsl
xor
push
mov
cmc
lcall
subb
and
mov
sub
pop
xor
hlt
aaa
leave
adc
icebp
xor
xlat
cmc
mov
xor
sti
adc
fidivrs
mov
ljmp
xlat
mov
arpl
add
jmp
adc
and
mov
mov
sub
cmpsl
and
gs
xlat
dec
cmpb
mov
push
lcall
mov
data16
adc
cmp
and
sbb
cmpsb
insb
mov
mov
xchg
fcomps
adc
sahf
dec
test
mov
loope
daa
insl
add
jns
inc
add
xchg
inc
xchg
cmp
rclb
jmp
or
dec
out
cld
push
and
jl
xor
adcl
mov
adc
addr16
xchg
movb
scas
sbb
mov
cmc
jecxz
dec
inc
cwtl
cmp
loop
xchg
push
sbb
sub
dec
push
mov
and
sbb
das
push
pop
mov
xchg
icebp
shll
scas
fnstenv
imul
dec
in
xor
into
jl
roll
mov
xchg
sti
stos
in
adc
fsubs
lcall
mov
sbb
lahf
sub
je
and
push
dec
mov
aas
hlt
mov
push
ret
in
mov
sub
cmp
xchg
outsl
jno
fadds
adc
pop
dec
adc
push
insl
subl
mov
std
xor
push
sub
call
and
int
mov
in
xchg
or
in
outsl
mov
hlt
loope
outsb
push
jnp
sub
add
jo
jmp
adcl
ljmp
jge
mov
cwtl
cwtl
mov
fisttps
loopne
push
cmpsb
pop
xor
in
sbb
out
push
inc
repnz
loop
jge
cmp
xchg
pop
lods
add
aaa
or
cmp
lret
lds
data16
or
iret
add
lock
lods
fbld
hlt
pop
imul
lods
pop
or
cmpsl
push
adc
pop
inc
rorl
pop
orb
hlt
in
mov
xchg
cmp
movsb
mov
mov
fidivl
xchg
lock
sub
dec
pusha
daa
cli
mov
add
push
mov
pop
jg
imul
fisubl
in
test
imul
mov
mov
or
dec
add
mov
in
imul
lret
scas
je
dec
sarb
push
sbb
ret
arpl
jmp
sar
jmp
rclb
cmp
jmp
bound
loopne
xchg
fisttpll
std
sti
dec
jns
es
clc
sbb
and
call
sbb
repnz
hlt
popf
mov
sti
or
mov
mov
add
mov
and
fdivrl
mov
pop
push
lahf
mov
cld
pop
cmp
push
adc
xor
jae
stos
fstl
jl
cs
ljmp
mov
add
out
xchg
sti
mov
mov
cmp
cmp
jno
les
xchg
pop
outsb
in
sub
or
dec
imul
pop
mov
out
cmp
mov
sbb
lahf
scas
out
xor
int3
cmp
movsl
adc
ja
mov
fs
call
push
or
sti
sbb
repnz
and
mov
movsl
sar
mov
lods
jmp
xchg
jne
inc
add
stc
inc
add
add
pushf
mov
mov
gs
loopne
cltd
lea
dec
inc
neg
xchg
xor
mov
or
mov
jecxz
cmp
mov
jmp
lret
aaa
fdivs
rolb
shll
movlhps
add
mov
cmp
aaa
push
mov
fsubl
sbb
stos
cwtl
inc
cmp
sbb
fwait
repnz
leave
outsb
push
inc
push
xlat
movups
shlb
out
into
jle
mov
je
addr16
dec
jle
jbe
adc
jbe
mov
aas
sahf
inc
push
or
enter
lahf
pop
in
rcrb
fisttpll
cwtl
xlat
es
pop
movsb
xchg
adc
mov
push
out
adc
jmp
popf
bts
mov
pop
in
xchg
fcmove
mov
jnp
xchg
cmc
or
jge
xor
lret
imulb
out
adc
imul
lea
ret
xor
test
in
add
or
lock
dec
mov
stc
xor
mov
ret
jns
or
pop
adc
int3
mov
mov
xor
mull
aam
test
out
mov
mov
xchg
les
rcrl
jnp
adcb
pop
arpl
jp
mov
shrb
loope
push
out
movsl
repnz
test
mov
push
cltd
xor
adcb
mov
inc
mov
repz
out
xor
call
pop
arpl
clc
fstpt
dec
jbe
adc
imull
js
aam
scas
mov
bound
pop
sahf
mov
fisubrl
dec
clc
idivb
xchg
or
mov
inc
mov
ds
outsb
addl
xor
fs
lods
mov
or
mov
push
cmpsl
stos
push
popa
orb
or
xchg
xorb
push
loop
cmpsl
mov
fbld
add
dec
ds
dec
pop
xor
icebp
sahf
cld
push
push
inc
jns
int3
nop
inc
cmp
add
add
and
xlat
cmp
sub
adc
xor
or
js
sub
xor
stc
stos
xchg
cmpsb
insb
push
fwait
mov
stos
xor
aas
sbbl
jno
sbbl
cmp
dec
sbb
sub
push
xor
rorl
cli
fidivrs
fbstp
in
sub
and
shl
imul
add
xor
cmp
aam
leave
cmp
mov
repz
mov
pop
test
sbb
cmp
mov
mov
sbb
jb
push
add
push
bound
loope,pt
inc
sbb
cmp
pop
lods
popf
insl
inc
mul
cli
fstpl
out
and
xchg
loop
fnstenv
mov
aad
dec
shll
sub
add
call
in
nop
and
pop
and
punpckhdq
in
cmc
cmc
xchg
sub
and
cmp
gs
imul
sbb
insl
fcomps
mov
xchg
out
add
sub
nop
mov
sarl
jle
lock
ljmp
aas
rcll
jge
movsb
lret
mov
daa
mov
outsl
inc
mov
outsb
inc
int3
dec
inc
leave
or
xchg
or
xor
dec
inc
mov
stos
pusha
or
and
mov
enter
shrb
mov
imul
enter
pop
sub
pop
jns
xor
daa
hlt
jae
addb
xchg
addr16
vandps
int
push
push
jne
pop
xor
lret
dec
pop
mov
inc
push
cmpsb
push
shlb
sub
inc
mov
addr16
pop
loopne
mov
in
and
push
int
rolb
lret
pop
pop
aam
cmc
and
out
fimull
xchg
pop
andb
xor
and
aam
pop
push
subb
cmp
push
into
or
fincstp
push
and
cmpsb
dec
in
mov
outsb
arpl
psrlq
lds
testb
cmpsl
test
inc
in
xor
xchg
cmp
push
mov
dec
mov
xchg
or
je
das
dec
psubusb
insl
cmp
fmulp
std
scas
fwait
aaa
aaa
mov
sti
sahf
out
cli
int
xchg
sub
scas
or
pop
dec
add
jg
mov
pop
out
loop
lods
push
sub
addl
movsl
xor
mov
add
mov
out
pusha
inc
cld
and
mov
enter
push
or
adc
gs
cwtl
mov
lahf
fnstenv
int3
xchg
bound
cmp
loopne
pushf
outsl
inc
loop
xchg
mov
test
nop
rcr
pop
mov
adc
jne
push
ficompl
sbb
inc
dec
or
subb
dec
jmp
aam
cmc
or
xchg
jbe
sub
movsb
add
push
jb
pop
inc
cli
ja
fcmovu
dec
ss
dec
adc
sbb
xchg
enter
push
mov
jle
lahf
dec
xchg
loop
xor
icebp
push
and
cmp
daa
faddl
lret
cmpsb
cld
sub
mov
ds
mov
leave
and
lds
insl
xor
xor
pop
push
mov
iret
jnp
aad
push
xchg
cmpb
mov
sub
cmp
imul
pushf
sbb
cld
in
out
and
rcrl
mov
add
cmpsl
push
fwait
call
js
push
dec
sbb
xchg
adc
fstl
hlt
dec
push
pop
xor
shll
xchg
jecxz
test
jne
fiadds
movsb
adc
push
sub
cmp
mov
pop
inc
push
test
sbb
sub
ljmp
sub
outsb
cmc
adc
lods
addr16
ficoms
xlat
lretw
push
xchg
stos
lcall
cwtl
ret
mov
sub
cmp
xchg
ret
mov
mov
popf
decb
xchg
cli
and
mov
es
test
rolb
jbe
orb
pop
sti
fcompl
outsl
clc
cmpl
nop
inc
pop
cwtl
dec
xchg
cltd
push
and
es
dec
jnp
sarl
lea
das
mov
fs
inc
sarb
orb
adc
inc
cmp
lret
fildl
push
repz
fistpl
push
int
mov
js
les
push
lods
jmp
mov
adc
inc
shlb
inc
mov
xchg
shr
jmp
add
sbb
loope
pop
loope
sub
loope
mov
sub
js
or
push
sarl
mov
pop
cmpsl
ja
scas
jl
flds
xchg
filds
leave
aas
mov
out
jle
mov
not
xor
fldcw
jecxz
pop
jne
fidivl
mov
decl
mov
mov
or
push
push
cmpsl
sub
xchg
pop
xchg
aas
ds
andb
jnp
fiaddl
push
sbb
fsubl
mov
mov
push
sub
mov
and
jge
pop
out
mov
adc
addb
or
bound
std
pop
int
push
xor
das
das
shlb
lds
pop
outsb
ss
xlat
mov
ret
je
mov
and
clc
lods
mov
cmp
cmp
adc
mov
sahf
xchg
sbb
dec
jp
insl
lock
out
cli
inc
push
rol
mov
xlat
mov
mov
enter
cld
pop
ja
lods
dec
jg
cmp
cwtl
sbb
insb
add
pop
loope
add
jl
dec
lods
fisubl
ss
inc
cmc
mov
pop
out
cld
test
mov
fwait
pusha
dec
ja
push
push
pop
sub
enter
shl
mov
adc
xor
push
mov
cmc
lea
cmc
mov
adc
sub
push
and
xor
ss
rcrb
out
sub
mov
stos
repz
dec
or
push
outsl
inc
mov
sbb
lds
loope
push
pusha
xchg
and
mov
dec
mov
dec
jmp
xchg
adc
cld
sub
mov
jne
notl
cmpsl
add
mov
and
add
cwtl
xchg
inc
test
loope
jecxz
negl
sbb
mov
add
sbb
push
cmpsl
push
adc
pop
push
pop
mov
popa
lcall
add
push
pop
int3
xchg
enter
and
jp
in
cmp
jge
stos
call
or
rorb
add
xor
clc
addr16
pop
inc
imull
cmc
rdpmc
hlt
xchg
xor
mov
add
shrl
mov
ficomps
ror
testl
jne
xor
dec
cmc
adc
mov
inc
enter
adcb
in
pushf
movsb
jne
mov
push
fidivrs
add
mov
out
loopne
inc
pusha
inc
clc
lods
jo
lea
mov
int3
jno
inc
dec
jbe
add
mov
jmp
mov
outsb
scas
pop
gs
fsubl
stos
sub
cmp
outsl
pop
int
mov
cmp
lea
mov
cmpsl
push
jb
stc
imul
dec
and
pop
rcl
aad
fdiv
push
inc
mov
repnz
sbb
pop
mov
sub
imul
push
push
cmp
test
notb
sbb
shr
dec
enter
xlat
pushf
push
int
and
ficoms
xchg
ja
inc
addr16
cmc
out
dec
fs
pusha
cmpsl
ret
dec
xor
and
push
sub
or
and
mov
addr16
inc
jmp
stc
mov
lods
cmpsb
test
mov
out
cmp
cmp
sbb
clc
cltd
sub
sub
fstps
std
scas
dec
sub
es
stc
ret
movsb
or
shll
rol
lods
dec
and
lds
mov
ljmp
push
mull
rorl
rcll
jl
inc
das
pusha
arpl
inc
mov
dec
dec
push
add
jmp
icebp
push
sahf
xchg
mov
sbb
mov
sar
movsl
rorb
adc
pop
or
adc
xchg
outsb
sub
or
mov
mov
int
sub
cli
cmp
mov
negl
pop
push
jecxz
sbb
inc
pop
lahf
xor
shll
jns
push
imul
sbb
mov
jo
shr
push
xchg
loopne
xor
cli
mov
jecxz
jge
push
lcall
mov
cmp
push
mov
or
sub
and
popf
outsl
xor
pop
dec
jg
lds
inc
lret
adc
adc
xchg
pop
push
popa
jl
mov
mov
cmpsl
std
lret
inc
test
push
mov
sub
lock
mov
push
test
mov
ds
dec
pop
dec
fs
cmpsb
sub
xor
lock
sub
cmp
inc
adc
dec
add
fstl
jnp
inc
movsl
lds
push
mov
or
push
cltd
push
dec
xchg
int
mov
mov
loope
ret
fiaddl
lock
xchg
fucom
push
dec
mov
pop
dec
dec
jbe
daa
inc
leave
sbb
or
nop
mov
xlat
movsb
pop
lock
lods
addr16
jge
lock
inc
cs
insb
mov
jnp
clc
mov
xchg
mov
push
mov
inc
int3
mov
ret
cmpsb
sbb
mov
bound
inc
pop
test
inc
or
pop
inc
shrb
pop
lret
lahf
loope
into
mov
shll
int3
push
stos
arpl
mov
loopne
aad
shll
xchg
call
sarl
je
icebp
mov
jbe
aas
popa
mov
scas
fisttpll
stc
ljmp
cmpsb
cwtl
push
out
and
mov
nop
lcall
leave
mov
fnclex
pop
mov
fwait
and
sbb
js
sar
pusha
inc
mov
xor
xor
insl
ss
aam
add
pop
stos
push
nop
adc
out
push
inc
sbb
mov
sub
imul
mov
cmp
xor
xchg
fildl
test
in
bound
lds
inc
cmp
inc
out
fwait
xchg
repnz
jg
outsl
jno
cwtl
mov
pcmpeqb
addl
mov
lods
repnz
or
cmp
mov
sbb
js
push
pop
dec
adc
mov
sbb
mov
mov
cmp
scas
push
push
dec
sbb
test
shll
inc
jp
mov
pop
outsl
pop
dec
xor
sbb
adc
adc
cmp
mov
pop
pop
shll
shll
xchg
mov
dec
icebp
jecxz
adc
aas
jb
in
mov
mov
mov
xor
mov
sbb
xchg
jb
dec
in
cmp
mov
shl
pop
call
jns
fidivs
sahf
lock
adc
and
addr16
je
ss
mov
lods
clc
dec
push
jb
js
lds
dec
sbbl
sbb
bound
popa
scas
enter
push
and
stos
cmpsb
test
inc
aaa
dec
adc
pop
pop
cli
lret
fstpt
js
xor
out
pushf
inc
out
fwait
mov
test
mov
add
daa
hlt
aad
sbb
pop
das
int
cmc
adcb
les
insl
aam
movhps
mov
jecxz
pop
xchg
test
adc
adc
mov
pop
icebp
fbld
inc
push
inc
fbld
xlat
and
call
mov
mov
push
adc
sub
notb
jmp
sbb
mov
jle
fistpll
xor
mov
mov
or
and
stc
test
shr
dec
xchg
add
mov
pop
imul
adc
fwait
push
mov
adc
add
lods
inc
jne
or
sub
adc
pop
out
xor
cmpsb
jbe
out
mov
stos
add
jmp
cmc
mov
das
xchg
mov
adc
stos
mov
pusha
adc
stos
jge
inc
xor
pop
add
xor
ljmp
mov
mov
icebp
fadd
pop
sbbb
pop
mov
push
stos
out
int
movsl
sbb
mov
push
into
test
adc
jbe
jnp
test
rcrb
lock
lds
xchg
mov
dec
adc
fidivrl
insb
pop
incl
xchg
test
inc
dec
mov
mov
inc
jp
xor
lock
enter
sbb
sub
ss
mov
sbb
sar
and
in
inc
scas
sub
leave
dec
sub
lds
cld
ret
inc
jp
les
add
cmc
push
insl
add
aad
in
ja
nop
add
sbbb
dec
jbe
or
addr16
arpl
mov
xor
dec
add
pop
sub
test
xchg
inc
loopne
ja
sub
sbb
pop
int
daa
lods
psubusb
aam
outsl
xlat
cld
iret
into
xchg
sub
inc
dec
inc
mov
iret
jbe
pop
xchg
call
push
pusha
jge
popa
or
int
jnp
pop
push
cmp
and
or
out
mov
push
mov
push
mov
jge
or
push
ja
scas
loop
cmpb
mov
faddp
mov
popf
in
add
idivl
cmpsb
mov
in
mov
xchg
inc
in
jnp
ret
mull
add
and
rcr
xchg
mov
pop
fistl
aas
cli
pop
cmp
mov
mov
fildl
dec
adc
cld
aas
cli
inc
scas
shlb
jl
lahf
add
xlat
stos
aaa
popa
and
movzwl
ror
sbb
sti
push
mov
out
fwait
movsb
je
les
pop
pushl
push
dec
cld
jp
sahf
int
sbb
mov
sub
jg
mov
jb
mov
inc
inc
sub
add
pop
cmp
ljmp
push
sahf
test
imul
jb
out
inc
pop
xor
lods
lock
jmp
mov
inc
mov
xor
clc
push
adcl
out
mov
jmp
xor
dec
mov
mov
mov
pop
movsb
jns
ds
jno
arpl
out
mov
add
lods
sub
mov
inc
jl
and
leave
int
arpl
cmp
je
xor
and
inc
mov
mov
jmp
xchg
fstl
aas
arpl
sub
cmp
test
cmp
es
out
data16
mov
xor
in
outsl
lock
call
aas
pop
js
ja
jbe
les
dec
cmp
push
movsb
insl
hlt
pop
hlt
push
adc
adc
pop
mov
das
in
into
enter
inc
test
cwtl
repz
call
movsl
dec
rcr
or
js
mov
push
xchg
shl
insb
ss
xchg
movsl
int3
mov
les
add
mov
ret
int3
or
xchg
inc
dec
leave
sub
fiadds
out
push
lock
gs
xor
and
lds
loop
stos
sbb
inc
cs
mov
in
and
dec
sbb
aam
cld
imul
mov
jp
fimuls
inc
xor
sti
loope
push
mov
cmpsl
mov
daa
mov
cwtl
cwtl
jge
rorb
ror
adc
stc
std
xor
ljmp
cmp
mov
xchg
mov
jl
add
aam
inc
cmp
fs
test
push
push
cwtl
sub
cwtl
cltd
pop
pop
mov
cs
lahf
fs
sub
cmp
mov
push
mov
or
imul
add
test
pusha
adc
push
popa
jno
xchg
and
mov
xchg
dec
rorl
or
daa
rcrb
xlat
push
jne
sarl
mov
hlt
mov
mov
push
jg
dec
fildll
jg
movsb
roll
and
cmp
xchg
sub
loop
je
insl
cmp
mov
pushf
sub
icebp
ret
in
leave
test
dec
lods
mov
jo
adc
lods
inc
ds
lds
outsb
mov
pop
jle
dec
and
jne,pn
inc
les
jge
imul
push
xchg
jmp
test
loope
inc
insl
mov
xchg
add
jmp
movsl
xchg
inc
leave
bound
addr16
inc
xchg
push
in
sbb
lods
cs
inc
push
into
and
sbb
push
cs
pop
in
lods
sbb
xchg
lods
daa
xchg
nop
sub
icebp
je
inc
xlat
fs
insl
movsb
inc
loopne
lock
roll
je
repnz
xor
icebp
push
ljmp
mov
lret
jno
ud2
ss
popa
loop
mov
mov
push
movsl
jg
stos
cli
mov
mov
inc
int
int3
cs
sub
inc
sub
imul
xor
pop
lret
mov
adc
inc
push
xchg
push
add
dec
std
cltd
daa
mov
fcomps
xor
mov
xor
mov
jb
and
data16
mov
vmptrld
movsl
mul
ret
and
imull
fdivrs
pop
xchg
push
cli
testb
push
loopne
fbstp
xchg
jnp
push
inc
adc
add
fcomps
jge
xor
inc
shr
push
ret
xchg
pop
xorl
jge
sbb
lret
xchg
adc
ficomps
mov
push
and
js
lcall
adc
pop
daa
mov
xorb
sarl
cmp
pop
inc
pushl
cmc
rolb
int
loopne
insb
shr
pop
add
je
pop
mov
icebp
or
dec
jg
adc
and
xor
and
ret
sub
ret
lret
test
inc
pop
adc
imul
pop
subl
sbb
lcall
pop
dec
xchg
outsl
push
push
insl
inc
sbb
int3
insb
cli
mov
loopne
or
mov
icebp
in
rol
icebp
sbbl
mov
sub
jl
push
mov
je
dec
pop
test
js
jl
fnsave
arpl
push
das
test
test
jle
mov
addb
stos
cmp
jecxz
pop
cmp
dec
or
daa
sub
pop
fisubrs
or
enter
sbb
push
xchg
cmpsb
jle
or
test
out
cmp
dec
dec
hlt
aam
cld
dec
dec
xchg
gs
cmc
inc
jo
push
inc
adc
add
dec
ret
cmpsb
fwait
xchg
adc
ret
fistps
jnp
push
int3
mov
std
fcompl
or
add
in
pop
mov
sub
iret
dec
dec
in
inc
lock
mov
flds
out
mov
jge
js
cmp
rorl
aas
out
or
mov
std
jmp
dec
mov
ficompl
or
loopne
outsl
push
cltd
jo
mov
sbb
xlat
cmp
jnp
je
fwait
mov
fs
pop
pop
push
je
or
mov
cltd
push
test
fwait
jne
cld
out
jecxz
stc
loope
stc
repnz
cmp
jae
push
sbb
xor
jecxz
movb
in
dec
fisubs
or
cmp
aaa
sbb
inc
cmp
arpl
jae
pop
jbe
arpl
int3
add
add
pop
sbb
jns
imul
pop
adc
mov
stos
push
xchg
ds
pop
pop
test
xorl
fidivs
neg
mov
mov
rcll
das
mov
fidivrs
cmp
out
test
add
lods
mov
cmp
mov
movd
js
test
shlb
or
enter
mov
fistps
fnstenv
ljmp
mov
cld
repz
cmp
push
xchg
daa
loope
icebp
clc
jmp
and
pop
jne
rclb
jns
dec
xor
mov
and
xchg
ljmp
fisttpl
mov
imul
lret
ja
adc
js
pusha
popf
test
scas
sub
xor
or
call
out
andl
dec
mov
dec
lock
pushf
in
and
in
adc
mov
inc
addr16
jbe
pop
sbb
clc
push
std
data16
pop
std
add
mov
cld
adc
mov
mov
sbb
push
out
mov
nop
loope
xor
into
push
sub
pusha
imul
fistpl
es
mov
mov
xor
dec
popf
push
cmp
and
fistpll
andb
xchg
jmp
adc
xor
adc
fwait
and
sbb
cmpsb
cmp
lcall
jns
xchg
loopne
mov
ret
and
lcall
xchg
cs
pop
mov
icebp
repnz
xchg
lahf
hlt
ljmp
aaa
jo
sbb
push
mov
rcll
pop
push
adc
pop
ljmp
cltd
into
les
add
push
das
or
cmpsl
outsb
cmpsb
movsl
es
movsb
push
jp
lret
adc
lret
call
mov
xchg
sti
repnz
dec
adc
mov
sub
and
aam
cmp
aam
mov
dec
lds
rcll
sub
push
orb
sub
inc
mov
mov
sbb
popf
inc
mul
std
inc
bound
adc
sbbl
leave
xchg
hlt
cmc
xor
test
leave
sub
lcall
jno
enter
jmp
pop
mulb
loope
mov
out
pop
out
push
aam
test
jg
std
repz
or
sub
loop
push
nop
push
cld
in
mov
sbb
xchg
in
cmp
pop
aas
out
data16
pushf
mov
jle
lods
xor
cmpsb
mov
dec
sbb
pop
rol
into
stc
decl
shl
in
mov
popf
cmp
sub
in
imul
dec
int3
fdiv
cltd
push
cmpsb
jae
pop
loop
sub
adc
outsl
aas
pop
and
cmp
mov
cmp
mov
mov
int3
add
lcall
sbb
sub
mov
fstps
enter
dec
jae
mov
pusha
pop
sub
xchg
xchg
mov
sub
sahf
push
fs
and
or
cmp
mov
xor
cmpsb
and
mov
cmpsb
stc
and
dec
xchg
into
rolb
sbb
add
out
cmp
les
or
js
repz
jmp
shlb
mov
insl
adc
cld
mov
mov
xor
dec
aas
ret
inc
adc
mov
shll
xor
pop
xchg
jns
pop
cmc
mov
jle
sub
cmp
xorl
or
dec
loopne
jge
mov
pop
popf
sub
sarl
mov
mov
sub
xor
cmp
fidivrs
gs
inc
ret
mov
sbb
xchg
push
mov
sbb
mov
or
orb
sbb
adc
call
aad
sub
fiaddl
mov
push
xchg
aad
push
in
push
adc
test
ljmp
insl
jge
popa
xorl
insl
push
mov
cmp
in
movsb
push
xchg
repnz
pop
insl
add
cld
fs
addb
sub
std
xchg
and
jl
mov
mov
movsl
xor
jle
or
std
insl
bound
mov
mov
data16
pop
je
into
xchg
mov
cmp
mov
cld
inc
ja
add
fdivr
fwait
loopne
add
xchg
loopne
adc
push
sub
rclb
inc
dec
inc
dec
jle
in
out
cld
mov
cmp
ds
repz
jae
mov
xchg
mov
push
inc
aad
xchg
push
sbb
sub
adc
sub
push
add
adc
imul
push
push
lds
sbb
rcrl
outsl
push
adc
ret
cmp
jae
jns
push
jns
push
jbe
shrb
or
adc
stos
mov
mulb
js
aam
es
push
adc
fwait
jecxz
add
pop
push
dec
pushf
jbe
dec
pmulhuw
jae
cmc
mov
rorl
xchg
xchg
loop
jne
cs
sub
dec
sbb
es
fsubl
rorl
sbb
pop
loope
addb
xchg
adc
mov
js
aaa
data16
lods
fcoms
push
pop
xor
xchg
in
cmp
js
add
icebp
xorl
aas
sbb
mov
mov
gs
mov
call
pop
jmp
or
xchg
inc
cmpsb
ret
jnp
sub
adcl
lock
xor
outsl
mov
push
fadd
adc
jl
fstl
aam
int
mov
gs
repnz
jo
int3
push
push
mov
add
push
mov
pushf
jge
nop
cmp
lods
add
sbb
lds
push
fimuls
test
js
mov
lret
repnz
cmp
push
stos
inc
lock
xchg
mov
insl
adc
lahf
sub
xor
add
jbe
addr16
mov
xchg
outsb
aam
jno
add
push
fidivrl
aad
lock
pop
fimull
mov
movsl
sub
filds
shlb
shrb
movd
or
lcall
ja
dec
jnp
lahf
imul
iret
insb
mov
xor
inc
sbb
daa
mov
in
xchg
dec
loop
cli
cwtl
inc
lea
push
lahf
shlb
sbb
xchg
or
xchg
jne
pop
mov
cld
decl
and
xchg
in
jl
sbb
mov
loope
dec
push
or
cwtl
das
cmc
iret
and
push
addl
or
leave
jo
pop
mov
hlt
stc
fldl
stc
jge
or
adc
mov
push
mov
push
dec
shll
sub
pop
cmpsb
jns
mov
and
mov
mov
xchg
std
adc
push
fstl
cmp
mov
icebp
ret
loopne
mov
aaa
pop
mov
jae
pop
addr16
lods
jb
or
xchg
and
cmp
mov
dec
sub
es
mov
js
popf
sbb
mov
outsl
call
lret
jbe
lods
and
arpl
sti
iret
pop
leave
sbb
pop
pop
inc
test
jne
mov
aam
pop
xchg
mov
cwtl
jl
pop
testb
jne
xchg
lret
mov
mov
into
shlb
xchg
in
xor
push
test
sbb
mov
es
xor
scas
adc
inc
repnz
leave
ja
push
mov
jo
out
sti
jle
mov
dec
cwtl
adc
sti
and
stos
cmpsl
mov
jae
mov
fs
sub
add
mov
fcompl
inc
sbb
mov
fldl
clc
push
xlat
jnp
test
loope
xor
popf
push
sahf
int
fsubrl
xor
cwtl
cmpsb
mov
mov
sbb
rorb
add
xchg
aas
enter
adc
stos
push
mov
jp
xchg
les
sub
fdivl
xchg
cmpb
aam
mov
test
xchg
scas
negb
xchg
or
jg
cmp
inc
xor
push
push
push
ljmp
sub
pop
add
cmp
fdivr
fst
push
jmp
sub
cwtl
nop
icebp
mov
pop
lret
fwait
test
popa
addr16
dec
or
push
lods
bound
mov
imulb
movsb
xchg
or
aam
cs
xorl
les
xor
into
iret
imul
popf
lcall
cmp
frstor
out
push
ror
jecxz
fdivs
dec
mov
push
fnstenv
xor
insb
xorb
insl
jle
rcll
add
cld
and
xchg
xor
pop
cmpsl
and
pop
cmp
xchg
sbb
inc
fistpl
bound
imul
mov
mov
fadds
in
cwtl
gs
adc
stos
jge
iret
lea
shr
leave
or
aam
cmp
mov
mov
iret
pop
ja
pop
or
jbe
sbb
mov
dec
mov
adc
subb
lock
outsl
dec
push
and
or
lods
pushf
xor
dec
push
mov
mov
or
out
inc
xor
xchg
iret
xor
mov
mov
jge
rcl
in
rcll
mov
fcomip
fwait
mov
movsb
je
dec
cwtl
mov
adc
je
jbe
mov
stos
push
or
sub
jo
cmp
add
addr16
jl
icebp
jp
jo
and
cltd
mov
cmp
dec
fsubr
or
fmul
add
aad
loope
xchg
scas
addr16
cmpsb
or
and
jp
std
hlt
pop
cmp
in
ljmp
cmp
jo
jecxz
sahf
jp
pop
mov
iret
cmp
mov
aas
cmp
fmuls
adc
jbe
adc
or
jbe
das
and
shll
inc
mov
movsb
lods
dec
xor
stos
outsl
les
js
clc
add
sbb
into
mov
xchg
roll
leave
icebp
sub
lahf
push
xchg
hlt
arpl
jo
lods
cmp
sbb
cmp
into
stc
repz
cmpsl
sti
jge
jle
sub
test
jb
call
xor
inc
mov
dec
gs
and
in
add
pop
ret
sub
sbb
pop
fistps
sarb
mov
mov
or
jo
mov
out
notrack
addr16
pop
mov
jno
scas
fdivs
jp
lret
add
dec
pop
imul
popf
add
adc
popa
adc
mov
inc
loopne
std
arpl
xchg
jae
jno
xor
mov
in
aaa
adc
out
iret
repnz
push
and
aas
push
jno
jecxz
inc
jle
mov
rcll
jmp
ljmp
mov
test
jecxz
fsub
pusha
js,pt
jmp
loop
dec
orb
into
jl
dec
lock
mov
add
fwait
or
mov
add
dec
rcll
leave
mov
jge
adc
popa
shl
pushl
mov
ret
sti
fidivs
movsl
scas
imul
adc
lcall
push
and
lret
cli
fwait
pop
mov
cmp
dec
pusha
scas
or
ret
addr16
or
jnp
push
xchg
jns
dec
pop
daa
lret
ss
mov
js
repz
cmpsl
cltd
pop
jl
add
mov
into
sub
fdivr
shl
sub
enter
add
or
sub
cmp
cmpl
arpl
push
mov
xchg
push
dec
popa
jne
daa
xchg
roll
push
in
mov
fnstcw
fstps
ret
fs
mov
cli
pop
leave
mov
lods
cmp
aas
inc
adc
mov
outsl
mov
xor
adc
call
in
cli
dec
iret
push
clc
mov
mov
sub
pop
mov
lock
jns
test
add
push
repz
or
xchg
stos
ret
stos
aaa
mov
sarb
pop
mov
insl
inc
jae
push
ret
xor
ljmp
sub
iret
inc
mov
cli
push
push
and
out
cmc
cld
stc
test
shlb
daa
pop
or
adc
mov
popf
adc
xchg
sub
fwait
add
or
mov
dec
movsb
iret
xchg
xchg
or
push
or
pop
call
lahf
jmp
push
mov
dec
pop
rcll
mov
pop
adc
dec
pop
call
mov
dec
xor
xchg
mov
shlb
or
push
adc
jno
dec
or
xchg
cmpsl
test
jecxz
repz
lods
mov
daa
test
lcall
mov
mov
jle
in
mov
jecxz
negb
push
repnz
mov
popa
adc
mov
flds
and
jb
stos
in
jnp
add
in
cmpsl
repz
jno
jecxz
ret
pop
sub
mov
jb
add
enter
out
push
mov
sbb
jno
mov
mov
int
add
pop
out
sub
jp
into
out
mov
cmp
add
out
roll
xchg
loope
add
or
mov
xchg
add
in
xchg
in
movsl
outsl
lods
inc
sub
push
sahf
inc
cwtl
sti
pop
inc
mov
andl
loope
push
mov
jl
sub
push
ljmp
fstps
aam
pop
sbb
adc
mov
adc
mov
cmp
aas
push
test
out
fimull
out
loopne
in
cmpsl
sub
xor
jp
orl
js
in
cwtl
popa
sbbb
pop
xor
nop
lcall
popa
data16
add
inc
sub
test
xchg
sub
ficomps
lret
cmpsl
mov
pop
push
push
mov
in
mov
mov
mov
push
xchg
lock
js
sbb
faddl
imul
adc
imulb
arpl
push
in
xor
test
sbb
push
aam
test
jne
ret
iret
pop
push
mov
and
pop
rcrb
test
pop
dec
mov
and
cmp
inc
cmpsl
cmp
aas
inc
jno
add
add
movsb
repz
cmp
jno
mov
mov
adc
cmp
fistps
lods
pop
ljmp
imul
daa
pop
daa
add
aad
xor
xor
sbb
cli
popf
adc
sti
xchg
jbe
cmpsl
fcoms
outsl
xchg
mov
mov
pop
xchg
call
pop
or
iret
and
mov
push
sub
out
mov
int3
sbb
mov
mov
stos
lcall
out
cmp
dec
push
mov
sub
jg
jl
push
mov
mov
and
lret
jno
insl
cmpsl
jns
fadds
stc
movsl
mov
rclb
dec
mov
push
arpl
push
hlt
int3
aaa
out
mov
jle
pop
stos
xchg
add
or
stc
testl
pop
sbb
cmpsl
sub
add
test
arpl
inc
jnp
call
in
cmp
xchg
rcr
sub
cwtl
pop
pop
jbe
push
enter
xor
push
or
adc
dec
pop
aam
cmp
into
icebp
cmp
adcb
aad
mov
les
sub
sbb
je
sarl
mov
aas
xchg
mov
or
cmp
push
ja
sti
int
cmp
ljmp
in
and
popf
aas
in
inc
popf
cmc
jl
push
xchg
pushf
xor
imul
mov
pop
and
sub
jge
in
pop
xchg
jp
out
sbb
adc
xlat
mov
popa
pop
cmp
cli
aam
stos
andb
push
rclb
movsl
cmp
dec
xor
push
fiadds
popf
xor
es
mov
ljmp
sbb
jne
xchg
push
popf
sbb
das
sbb
add
pop
stc
aas
and
cld
ljmp
cmp
pop
pop
andl
out
mov
mov
cwtl
lods
cmp
jne
mov
xchg
outsl
mov
jns
sbb
xor
fwait
clc
xchg
mov
mov
xlat
xlat
mov
loope
addr16
lea
iret
sbb
insl
pop
divb
xor
push
xor
loopne
jns
adc
mov
stos
sub
pop
mov
scas
push
sub
sub
add
test
mov
push
push
inc
mov
push
inc
pop
and
sub
test
shlb
std
cmp
repz
dec
sub
dec
jp
cmp
leave
inc
int
dec
js
rcrl
movsb
add
out
sahf
jl
adcl
test
sarl
mov
fmull
ds
std
hlt
mov
lods
pop
inc
insb
adc
push
dec
sbb
lret
daa
or
pop
jne
xor
add
adc
test
jecxz
add
std
inc
and
xchg
jns
lock
cmc
or
cwtl
in
cmp
frstor
inc
test
jae
movsb
outsl
lret
sbb
mov
mov
ficompl
mov
sub
sbb
aas
aam
dec
fdivs
loopne
adc
loope
andb
add
orl
stc
fcoml
jle
test
mov
mov
mov
mov
addps
xor
cmp
sahf
push
je
adc
pop
mov
jle
or
pop
movsl
fldcw
in
pop
call
fucomip
pop
cwtl
and
cwtl
into
mov
js
cmp
scas
sti
push
test
dec
fnstcw
fistps
das
rcrb
lea
sahf
adc
push
cmp
push
push
pop
dec
movsl
inc
push
cmp
jmp
std
inc
addr16
arpl
fstpl
je
cli
movsl
jge
pop
bswap
mov
mov
or
push
push
xor
repz
js
or
adc
movsb
add
andb
mov
or
clc
adc
cwtl
leave
xor
test
push
rorb
xor
and
jbe
push
mov
xor
cmp
jb
in
loopne
mov
lods
loop
das
cmpsb
cmpsl
adc
mov
scas
pop
push
xor
sub
insl
and
in
rolb
outsb
jo
or
loop
jl
pop
jae
cmp
sbb
push
jg
bound
add
push
push
aaa
incb
jae
push
xchg
movsb
lea
mov
orl
sbb
hlt
mov
insl
mov
dec
xlat
adc
flds
dec
or
jle
popa
mov
cs
lret
add
jns
push
xor
cltd
adc
jmp
sbb
jne
int3
fistps
pop
pop
insb
lahf
jecxz
xchg
inc
loope
hlt
sub
leave
dec
icebp
push
mov
and
addr16
and
imul
lods
fsubl
lock
daa
test
mov
stos
lret
or
rcrl
mov
xorb
imul
mov
cmp
ja
xor
pop
mov
out
pushf
je
push
int
insb
xlat
adc
dec
pop
adc
pop
or
cmp
sarl
cmpsb
dec
xor
xchg
stos
icebp
lcall
insl
test
mov
cmp
stos
dec
ss
jb
testb
xor
pop
pop
dec
aas
int3
int
arpl
movsb
in
jmp
in
out
test
jecxz
cmp
mov
xchg
xchg
or
movsb
jbe
outsb
or
or
dec
inc
mov
mov
movsb
inc
mov
sub
add
je
add
sbb
dec
or
mov
stc
in
add
leave
aas
jecxz
ffreep
enter
bound
push
push
or
enter
sub
mov
frstor
pop
push
into
addl
xcrypt-ofb
cmpsl
stos
add
mov
mov
pop
add
aas
pop
pusha
lret
adc
mov
push
sbb
rorl
and
fnsave
aam
push
add
mov
in
xlat
test
call
dec
push
jle
loopne
test
je
scas
add
dec
repz
cltd
dec
mov
or
add
out
repz
xor
stc
mov
loop
lahf
adc
inc
xor
scas
sahf
rol
dec
add
adc
adc
not
sbb
xor
mov
dec
mov
add
dec
call
mov
adc
sbb
je
test
xchg
dec
mov
incb
and
pop
stc
repz
stc
add
jmp
inc
xor
inc
mov
roll
ficoms
sub
push
dec
inc
add
int3
xor
mov
xor
pop
lds
push
loop
cmp
mov
sbb
faddl
cmc
cld
pop
sub
lahf
mov
dec
pop
mov
mov
sbb
jmp
jne
fwait
cmp
inc
mov
cld
fstl
xchg
mov
popf
push
add
rclb
nop
pop
dec
jp
add
inc
sbb
pop
test
jmp
mov
mov
mov
test
cmp
mov
in
dec
adcl
xor
cmp
inc
clc
pop
iret
adc
sahf
les
test
jno
add
jle
push
imul
das
cli
out
test
scas
mov
fwait
dec
je
hlt
jmp
js
dec
popa
mov
std
dec
sub
js
gs
cmp
sarl
js
lahf
push
test
in
sbb
inc
xchg
rcrb
cld
jno
shlb
cli
sbb
xor
inc
bound
scas
scas
cmp
dec
add
aad
movsl
outsb
xor
in
sbb
lea
icebp
xlat
outsl
es
inc
imul
mov
pop
test
mov
or
data16
xor
stos
cwtl
dec
and
pop
mov
push
xchg
add
test
rcll
sbb
mov
mov
jne
xor
xchg
add
sbb
gs
js
xorb
cld
or
orb
xchg
hlt
lods
cmp
or
and
mov
shlb
add
xor
or
sahf
ljmp
fwait
mov
insl
icebp
bound
sahf
push
dec
insl
jbe
gs
sbb
imul
loop
xchg
arpl
xchg
scas
xchg
pushf
lods
sbb
sbbl
mov
jg
addr16
jo
in
jge
in
gs
mov
stc
rcrl
adc
popa
xchg
mov
sbb
fcom
popf
imul
push
sbb
sub
test
int3
bound
ret
push
sub
repnz
idivl
add
pop
or
call
daa
mov
test
pop
roll
jl
cltd
sub
pop
push
fwait
jnp
adc
mov
leave
and
sbb
xchg
xchg
pand
mov
push
stc
mov
mov
test
xchg
in
dec
xchg
lds
cld
sbb
lods
jecxz
jg
ret
pusha
fnstsw
pop
xor
imul
into
jnp
or
gs
ss
jb
movsb
mov
mov
clc
cli
repz
subb
testl
mov
mov
dec
mov
xchg
push
dec
rcl
enter
fcoms
out
xor
cmp
dec
fwait
ds
lret
push
adc
lcall
cmpsl
nop
jge
jb
dec
jge
pop
xchg
setae
int
mov
dec
jne
fcmovnu
into
push
add
pop
shll
pop
and
mov
arpl
or
jg
xchg
xor
fbstp
dec
mov
js
cmpsb
adc
das
inc
subb
push
fnsave
idivl
pop
and
loopne
add
sub
dec
outsb
xchg
push
dec
mov
add
push
jle
fstl
and
imul
aaa
pop
mov
push
pop
mov
adc
pop
mov
dec
outsl
push
mov
cmp
je
nop
xor
xchg
or
icebp
arpl
xorl
jecxz
jns
into
push
jne
push
sub
mov
inc
sub
xchg
std
cmp
test
fbld
sub
dec
popa
fmulp
fcompl
add
cmp
lods
fwait
jl
cs
lods
mov
or
rcrl
je
jle
rcrb
daa
jnp
sub
mov
sahf
cmc
movsb
cmpsb
lret
fdivl
xor
sub
jmp
nop
lret
fmul
mov
push
rcr
xchg
adc
lods
pop
jae
ja
mov
cld
dec
ret
jge
imul
ss
pop
xchg
fwait
dec
cmpsl
pop
test
push
fadds
das
xchg
pop
mov
sub
or
inc
movsl
push
push
push
jmp
mov
enter
push
test
pop
sub
fdivl
pushf
jo
cmpsb
gs
xchg
ljmp
stos
jnp
mov
xor
andb
lds
sub
sahf
mov
stc
imul
or
or
dec
and
shll
sbb
insb
sahf
loopne
pop
sub
loope
in
adc
mov
push
inc
es
pop
es
push
and
jl
jo
cmp
test
scas
dec
pop
pusha
mov
sbb
sbb
lock
and
pop
sub
adc
fdivs
sub
inc
or
mov
test
icebp
in
push
inc
and
aaa
and
test
or
test
inc
push
sub
in
mov
mov
inc
xchg
jne
pop
or
lds
cmp
adc
mov
popf
xor
out
iret
je,pt
and
mov
mov
sti
jb
jle
push
add
lret
jo
jno
push
stos
cmp
aas
adc
dec
xor
inc
add
cmp
data16
out
shr
cs
and
sti
or
stos
pop
jg
ljmp
dec
add
loopne
and
imul
rorb
ficomps
into
dec
adc
sub
pop
movsl
ja
daa
sbb
das
mov
popa
xor
push
sbb
stos
sarb
imul
js
fdivrl
sub
inc
mov
mov
push
adc
cmc
sbb
jo
popf
dec
cmpsl
mov
lods
push
int
dec
cmp
jge
jg
sahf
pop
sahf
add
imul
test
das
mov
xchg
or
pop
arpl
jmp
shll
xor
fsubl
sbb
clc
es
adc
sub
jae
pushf
dec
cmp
adc
xor
add
daa
movsb
out
cwtl
or
pop
mov
pop
sub
ret
repnz
mov
pusha
mov
sbb
adc
push
push
push
or
jo
out
fs
out
xchg
out
mov
add
mov
sub
mov
xchg
mov
xchg
cmp
jnp
inc
sbb
lret
es
test
into
mov
insb
shll
ret
inc
jecxz
mov
pop
push
lret
mov
sbb
adc
sub
cmovb
and
test
push
cmpsb
inc
insb
add
outsl
push
sbb
inc
mov
xchg
push
ljmp
or
out
scas
lods
mov
adc
sbbl
lcall
pop
cmpsl
rcrl
nop
rcrb
cmp
mov
jnp
out
in
es
sbb
xor
cmp
pop
aad
pop
xchg
fs
cmp
scas
mov
jb
lods
lods
add
xchg
and
push
xchg
mov
inc
ret
sub
jne
and
add
inc
loope
inc
rcrl
add
rcrb
fwait
int3
cmpsb
scas
fisubs
pop
mov
and
mov
int
jmp
sbb
aad
ret
mov
xchg
push
jae
push
aad
es
rorb
insl
push
add
xor
outsb
movl
xchg
xchg
outsb
mov
scas
lock
jno
sub
push
adc
cmpsl
xor
arpl
jns
pop
bound
test
jnp
inc
cmp
add
rcll
in
orb
mov
push
xchg
sub
inc
and
push
in
inc
mov
xchg
and
pop
xchg
mov
cmp
and
fwait
cs
push
hlt
xor
sub
scas
nop
push
push
jne
push
dec
mov
or
lea
xchg
outsb
fsubrl
insl
je
push
jns
fmul
mov
out
lods
or
rcl
lcall
mov
movsl
and
sub
cmp
mov
fisubrs
data16
lret
add
outsl
xchg
cmp
add
inc
cmpb
mov
jecxz
pop
loopne
push
push
imul
lcall
aas
cmp
and
adc
dec
loope
push
test
fdivrs
push
rcl
lock
std
je
popl
gs
pop
mov
hlt
scas
cmpsb
repnz
jnp
aaa
je
out
mov
jno
jge
or
aaa
fcoml
in
fdivl
stos
push
xchg
icebp
xchg
push
xlat
jns
sub
pop
int
inc
repz
pop
imul
fs
push
fdivrs
xlat
lahf
sub
lcall
mov
pop
gs
pop
insb
xchg
cld
pop
push
cmpsb
arpl
mov
lea
or
mov
test
xchg
das
cmp
ljmp
imul
sbb
daa
test
testl
mov
out
mov
cli
lahf
cmc
rcll
sbb
mov
inc
push
int3
adc
std
adc
pop
ss
and
or
dec
cmp
movsb
loopne
xchg
test
fimuls
xchg
scas
pop
in
sub
cmpsl
test
sub
sqrtps
lods
sub
adc
mov
and
ret
push
test
jno
mov
inc
sub
fsubr
add
jbe
xorl
clc
pop
jp
mov
in
xchg
cmp
imul
mov
enter
add
out
popa
inc
jmp
mov
inc
pop
adc
cmp
or
mov
or
call
adc
loope
mov
cmc
cltd
jmp
scas
jmp
scas
inc
notl
imul
out
xchg
loop
sub
inc
push
adc
pushf
mov
pop
or
fadd
mov
mov
es
mov
push
xchg
add
xor
mov
push
adc
shll
int3
jnp
dec
mov
jnp
icebp
clc
push
addr16
into
popa
adc
int3
adc
scas
dec
inc
xchg
bound
jle
xor
or
test
pop
rcrb
jno
push
xchg
jbe
je
lret
frstor
dec
xchg
mov
mov
mov
dec
push
bsf
inc
ds
shrl
es
negl
lahf
cmc
repz
cli
data16
js
popf
or
insb
jl
push
cmp
sbb
movsl
inc
stos
xchg
jmp
adc
imul
addr16
arpl
arpl
jmp
int
cmpsl
setp
rcr
and
js
jnp
cmp
pop
jecxz
xor
test
sub
push
repnz
out
movl
int
sbb
shll
and
xor
or
adc
xor
xor
mov
fwait
xchg
stos
mov
leave
dec
mov
loopne
jo
cmp
or
sub
jle
rcll
add
adc
clc
hlt
sub
scas
mov
mov
stos
cmpsl
cmp
add
pushf
push
inc
and
rclb
mov
lret
sbb
mov
stc
cmp
flds
mov
repz
push
shl
adc
iret
test
and
ret
jmp
fs
push
xlat
inc
jg
and
fmull
scas
aad
les
pop
inc
cmpsb
cli
jge
mov
inc
push
push
ret
shl
fwait
ja
lcall
sbb
popf
insl
das
sbb
and
out
cmp
nop
mov
push
lock
pop
shlb
push
out
inc
inc
cmc
pop
mov
std
push
loopne
loopne
scas
fidivrl
sub
mov
aad
fnstenv
jno
and
imull
mov
cmp
push
leave
out
mov
add
xorb
xchg
jmp
jne
les
int3
mov
in
push
push
sub
dec
lods
hlt
or
aam
lcall
add
push
daa
jge
stos
jne
mov
mov
mov
jecxz
lock
mov
push
mov
cltd
dec
dec
cmp
and
fidivs
in
mov
adc
xchg
cwtl
jno
lods
int3
push
or
and
jo
cmp
or
lods
outsl
scas
js
dec
jae
jo
out
mov
out
xchg
mov
imul
mov
or
mov
or
enter
xchg
std
dec
mov
aas
scas
xor
ret
shll
sub
and
andl
dec
in
adc
mov
cmp
jecxz
mov
and
shrb
sbb
mov
or
xchg
mov
ror
jl
popfw
mov
sub
pop
lret
imulb
js
sub
pop
push
leave
data16
or
pop
mov
repnz
fistps
subl
push
flds
clc
cmp
inc
imul
inc
jl
sub
mov
enter
out
mov
push
jmp
sub
int3
js
inc
movsb
mov
pop
mov
cbtw
push
es
push
xchg
sti
inc
jbe
fdivrs
adc
pop
push
inc
jge
pop
andb
hlt
jne
mov
mov
cmpsb
push
inc
fimull
in
pop
sub
int
popa
xor
inc
popa
sub
mov
test
rolb
jbe
shl
adc
push
sub
aam
push
and
push
repz
jns
jge
je
mov
loop
adc
lcall
mov
cmc
fwait
outsb
int3
inc
adc
int
cltd
cmpsl
cmpsb
pop
mov
inc
and
iret
call
lahf
fstp
arpl
add
cmp
js
fs
push
adc
sahf
out
adc
iret
aaa
sub
push
mov
repz
sbb
mov
or
cmc
push
das
iret
imul
mov
sub
cmc
addb
int
gs
and
mov
nop
outsb
loop
into
call
and
jle
jbe
mov
fsubl
cmp
movsl
cs
dec
push
and
xchg
loope
xor
test
sub
pop
cld
fdivr
push
scas
repnz
mov
push
pop
pushw
adc
stos
das
iret
add
push
loope
dec
je
fldl
xor
not
clc
pusha
sub
cmp
or
filds
cltd
xor
iret
aas
sbb
imul
mov
jge
repz
sub
adc
jecxz
jns
mov
push
js
test
xchg
pop
xchg
mov
sbb
inc
jmp
cs
adc
push
outsl
out
mov
je
jne
jle
aad
aam
sub
dec
movsl
dec
lret
fisubrs
and
adc
mov
outsb
mov
neg
jbe
xchg
fisubrl
pop
dec
nop
mov
push
mov
fldcw
mov
push
jo
ret
fisttpl
xchg
add
sbb
das
adc
jge
sub
mov
push
xchg
int
out
mov
mov
pop
dec
pop
fcmovne
das
cmp
add
push
mov
add
adc
sbb
stos
jle
push
daa
pop
fistl
mov
adc
loop
mov
sbb
loopne
or
aaa
pusha
pusha
imul
insl
push
pop
and
fidivrs
push
enter
popf
lahf
pop
mulb
or
rorl
xchg
mov
loopne
mov
out
sbb
pop
xchg
mov
add
mov
push
dec
je
out
fs
dec
inc
rcll
cmpsl
cs
fwait
pop
mov
mov
aaa
jns
push
arpl
jmp
mov
js
push
test
jb
xor
jnp
ret
jns
into
lods
mov
rcr
int
pop
jnp
cwtl
fisttpll
jnp
into
cmc
cmpsb
pop
add
insl
pop
sbb
dec
insb
das
sahf
cmp
ffree
repz
aaa
xchg
mov
addr16
mov
scas
sarl
loope
cmpsl
sub
movsl
fwait
cwtl
outsl
adc
arpl
aas
lds
dec
aam
push
loop
cmc
int
sub
xor
movsb
stc
repz
lds
test
nop
sbb
je
inc
pop
insl
ret
bound
repnz
or
bound
adc
xchg
cltd
repz
push
imul
xchg
andl
sti
xchg
test
jno
xchg
iret
mov
fldt
rolb
push
fs
test
add
xlat
incb
ds
ficomps
dec
ds
arpl
mov
xchg
xchg
xchg
push
pop
jae
je
icebp
stos
daa
imul
pop
in
inc
out
cmp
fadd
push
shll
fs
xor
pop
ljmp
dec
dec
xor
aam
sub
sarl
gs
sub
fdivrp
jmp
cs
or
loopne
sub
lock
adc
loopne
pop
loope
pushf
outsb
xor
mov
stos
shrb
adc
and
mov
pop
cwtl
in
fisubl
in
inc
out
adc
and
or
les
and
test
xchg
movsl
mov
push
lea
fmul
rcll
aaa
xlat
add
scas
popf
mov
mov
mov
out
scas
jae
mov
out
loopne
inc
sbb
and
sub
cmp
or
and
inc
ja
sbb
xchg
movsl
sub
out
sar
push
xchg
scas
push
lds
and
popa
sti
in
cmpsb
in
pop
repnz
and
lret
sbb
jle
repnz
test
and
lea
imul
sbb
jno
adc
into
pop
mov
out
or
mov
sbb
xchg
hlt
cmp
in
stos
idiv
sbb
les
iret
mov
mov
cld
dec
mov
repnz
aad
hlt
test
notb
pop
pop
in
loope
mov
mov
repz
sbb
loope
ret
outsl
call
sub
aad
jnp
imul
mov
arpl
filds
cmp
lods
int3
pop
or
in
repz
inc
push
cmp
mov
inc
adc
sbb
mov
xchg
cmpsl
push
pop
pusha
int
jle
int
fmull
xchg
rcrl
xor
adc
or
mov
pop
pop
and
repz
out
inc
xchg
mov
adc
and
mov
bound
sbb
jecxz
jno
sbb
cwtl
xchg
in
pop
xchg
sbb
test
out
xor
and
and
in
or
ret
sti
cli
cs
mov
jbe
mov
in
fiaddl
inc
cld
notb
or
je
pop
pop
xchg
rol
movsl
mov
rcr
imul
inc
push
push
mov
bound
xchg
mov
push
and
mov
mov
push
and
rep
push
push
adc
daa
test
dec
shl
fldcw
cmp
test
lods
and
mov
inc
mov
dec
sub
and
mov
je
push
test
push
mov
or
jle
and
cld
scas
pop
mov
xlat
sub
jnp
xchg
cmpsl
fcomps
sbb
fisubs
cmc
mov
loopne
popa
push
lret
fs
sbb
in
cmpl
lret
popf
jge
int3
mov
sub
push
pop
mov
mov
cltd
stc
xlat
iret
popf
rorl
xlat
sub
inc
mov
stc
mulb
leave
push
not
pop
in
mov
xchg
mov
or
repnz
add
sbbb
jno
mov
xor
cmp
rcrb
mov
insb
inc
rol
pop
sbb
pusha
out
sub
inc
cmpsb
xor
mov
xchg
mov
out
xchg
fbld
adc
push
sub
sub
sub
das
inc
adc
adcl
test
mov
sub
dec
push
pop
outsl
cwtl
and
mov
fmull
cmp
add
addr16
mov
push
xchg
cmpsb
push
repz
inc
stos
outsb
aas
and
stos
popf
pop
mov
add
popf
sbb
xor
cwtl
mov
lea
xchg
scas
aad
das
stos
faddl
divb
inc
mov
jge
stos
notl
mov
leave
shl
add
std
mov
sbb
mov
sbb
leave
mul
add
mov
mov
lods
sub
pusha
push
or
xor
lds
es
mov
or
insb
add
ret
dec
ja
jbe
or
fs
fcompl
in
jo
mov
daa
sbb
adc
js
jecxz
xor
dec
mov
jne
test
stos
add
and
add
mov
fisubl
cmp
pop
cmpsb
xchg
jecxz
mov
mov
lock
mov
mov
testl
das
jmp
sub
imul
pop
repnz
test
mov
js
jae
mulb
loope
pop
cltd
push
loopne
popa
or
sub
adc
popf
push
xchg
push
shr
xor
dec
xchg
mov
mov
int3
movsl
stos
cmp
arpl
inc
jle
out
dec
adc
pop
jno
and
lret
jne
xchg
data16
imul
jbe
xchg
xchg
mov
or
clc
lock
dec
mov
lock
mov
test
pop
mov
test
xor
mov
outsb
push
adc
popa
mov
lcall
sbb
shrl
jmp
int3
or
cmp
lret
push
insb
mov
rcr
pop
dec
outsb
xchg
loope
xor
adc
mov
cmp
les
gs
jnp
cmp
repz
or
jno
inc
inc
jne
xor
mov
dec
xor
ss
jge
out
lea
xchg
pop
popa
xor
mov
sti
mov
sub
dec
shll
test
lcall
adc
push
inc
xchg
and
ret
cli
and
xor
xor
xchg
dec
inc
add
aam
rcrb
jb
daa
sub
sbb
add
push
xor
add
cmp
test
sarl
dec
inc
dec
push
call
sbb
mov
pop
out
aam
mov
or
adc
jnp
jns
push
es
xor
mov
scas
shlb
in
and
push
or
ficompl
filds
ret
xor
xchg
cmc
popf
sub
adc
push
cmpsb
fwait
adcl
leave
xor
mov
and
add
add
push
aaa
cltd
mov
mov
sahf
jb
leave
mov
pop
xlat
mov
stc
jmp
jp
stos
loop
hlt
mov
imul
and
popa
xchg
lods
adc
mov
jl
push
mov
jno
fldcw
xlat
lret
sbb
mov
dec
xchg
rol
jno
fxch
mov
mov
mov
dec
sbb
dec
lock
inc
inc
std
in
mov
jg
xlat
and
fiaddl
mov
call
adc
cli
add
add
mov
outsl
stc
lret
sbb
movsl
aam
pop
pusha
add
hlt
mov
in
daa
shl
js
xchg
shll
mov
je
or
mov
inc
das
xlat
or
push
xchg
mov
scas
push
andb
gs
and
xchg
movl
fstpl
mov
decb
inc
out
fwait
pop
inc
sahf
sbb
dec
mov
ss
xchg
add
mov
cmp
cwtl
pop
and
push
out
insl
hlt
fidivrl
pop
ja
push
scas
rcrl
and
fs
or
jne
cmp
test
imul
mov
cmc
outsb
and
xor
insb
out
or
xor
pop
or
inc
cmp
and
scas
xor
adcb
push
mov
inc
and
mov
popa
mov
xor
adc
dec
in
shl
dec
jp
push
ds
xor
push
mov
in
dec
dec
aaa
mov
movsb
loopne
cs
loop
pop
sti
inc
out
inc
push
popf
in
fbstp
hlt
pop
pushf
mov
in
cltd
sub
nop
pop
mov
leave
mov
add
dec
js
je
mov
and
pop
xchg
add
sahf
mov
mov
in
outsl
rcr
jno
addl
call
fcoml
cmp
movsb
sbb
lahf
jp
jmp
lret
icebp
daa
dec
mov
jle
xchg
pop
xchg
outsb
test
xchg
mov
jne
xlat
push
mov
xor
pushf
fistpl
popf
stos
clc
loopne
inc
pop
daa
inc
cmp
xchg
test
aaa
jp
mov
push
std
repnz
movsl
pop
dec
xor
push
jmp
mov
pop
shll
sub
adc
sti
int
mov
aaa
inc
dec
or
sub
cmpsl
out
imul
mov
in
enter
int3
movsb
mov
nop
outsl
fldl
adc
add
jmp
hlt
subb
ljmp
push
cmpsl
pop
mov
push
dec
sbb
dec
add
jg
mov
stos
mov
pop
pop
mov
push
jnp
mov
bound
decl
shlb
cltd
ror
sub
sarl
jl
push
rep
xchg
mov
fwait
sbb
ss
sbbl
sti
push
lock
sub
loop
jo
ss
in
pop
aas
and
pop
sahf
xor
cmp
fidivrl
adcl
adc
push
or
enter
mov
and
mov
or
jl
scas
pusha
mov
enter
stc
leave
icebp
flds
nop
dec
popa
ret
jo
stc
daa
mov
aad
cmp
out
out
popf
imul
mov
dec
psubsb
push
ret
and
cmpb
movsb
sahf
adc
bound
mov
jb
xchg
mov
mov
xor
shll
dec
and
aad
jge
enter
aas
mov
fisttpll
gs
push
inc
sub
adc
sbb
stc
push
lahf
mov
mov
inc
je
and
dec
and
push
int
ja
cwtl
fisubrl
pop
ja
mov
stc
xor
cli
jbe
pop
push
int
pusha
cmp
jg
jo
dec
adc
icebp
jmp
std
jl
lea
pop
mov
lea
and
iret
incl
xchg
shlb
jmp
push
mov
hlt
dec
and
pop
comiss
test
cwtl
mov
hlt
cld
cld
mov
bound
pop
add
call
popf
out
call
lods
roll
or
mov
sbb
xchg
loope
mov
lcall
xor
cmp
faddl
test
fneni(8087
les
push
shrb
dec
and
dec
outsl
sarl
adc
mov
les
call
sbbl
psubq
xchg
fsubrs
adcb
test
xor
pop
hlt
nop
mov
sahf
jnp
shrl
sbb
lods
push
scas
jmp
cmpps
sub
or
dec
pop
dec
imul
stos
mov
out
cli
ret
negb
in
push
shrb
push
jns
mov
int3
mull
faddl
dec
sbb
lods
jmp
jp
inc
mov
xchg
push
jg,pt
mov
enter
mov
pop
jl
daa
push
mov
test
cltd
popf
loopne
mov
mov
push
nop
add
les
jecxz
jns
daa
mov
dec
xor
xor
mov
pop
jb
mov
mov
and
or
mov
clc
cmp
mov
mov
arpl
fisubrl
push
addr16
hlt
xchg
push
sti
pop
das
ds
mov
add
addr16
push
inc
push
sub
outsl
mov
lds
jnp
dec
pop
xlat
ficoml
adc
sub
inc
daa
pop
scas
adc
jne
pop
stos
xor
jge
sbb
insl
scas
dec
or
add
or
int3
jae
push
mov
pop
outsl
and
in
cwtl
adc
mov
add
mov
cmp
jecxz
mov
cltd
icebp
add
int
pop
cmp
popa
stos
insb
jmp
jge
and
mov
movsl
mov
in
pop
or
push
pop
add
adc
in
add
sub
xchg
and
or
push
mov
lret
sub
dec
popf
pop
outsb
nop
ja
dec
add
add
popf
shrb
mov
xor
xor
jbe
mov
dec
bound
imul
xchg
sbb
xchg
mov
shrb
mov
arpl
inc
aad
add
cmc
inc
js
xchg
mov
cmp
mov
adc
jecxz
stos
fwait
jp
test
sub
popf
add
aaa
fadd
jp
pop
lcall
jle
adc
sub
xchg
outsb
cmpsb
popf
dec
adc
mov
dec
addl
jb
pop
adc
push
inc
cltd
mov
scas
pop
mov
inc
or
stos
push
inc
pop
dec
xchg
mov
xchg
addb
cmp
out
fstpl
push
sti
mov
scas
mov
mov
notl
push
mov
das
call
loop
xchg
lea
popa
popf
push
sbb
jecxz
or
les
push
out
cmpsl
xchg
les
mov
push
clc
int
out
adc
mov
jecxz
sti
mov
xchg
xor
lock
jnp
and
xor
sar
xchg
in
pusha
pop
xlat
xor
sbb
push
mov
sub
daa
clc
push
push
push
cli
mov
mov
jae
les
or
lea
repnz
ret
jp
pop
adcb
dec
cld
or
cmp
iret
sbb
mov
lcall
push
mov
push
imul
push
gs
push
lcall
roll
inc
mov
push
jo
jle
shlb
push
xchg
addb
fstenv
stos
dec
bound
sbb
mov
andb
fisttps
and
sti
xchg
xchg
push
mov
dec
test
xchg
mov
push
xchg
jle
xor
scas
mov
xchg
adc
outsl
xchg
mov
jbe
sub
rol
pop
xchg
pop
pop
call
jbe
add
aas
adc
add
jns
or
xor
out
xchg
pop
sub
ss
xchg
or
pop
xor
pop
popf
rol
lahf
icebp
movsb
notl
adc
xchg
or
pop
sahf
push
add
sahf
int3
sahf
push
shll
and
outsl
lock
jo
fdivs
pop
lret
jo,pn
in
fwait
addr16
xchg
dec
test
xlat
fs
mov
je
and
int
sub
add
test
mov
cmp
lds
jbe
inc
insl
add
and
mov
adc
arpl
lcall
xor
pop
xor
push
xchg
and
jmp
cltd
mov
imul
int3
adc
je
fcompl
ljmp
add
xor
fcomps
xor
xlat
sub
ffreep
popa
hlt
cld
push
idivl
notb
add
jno
xchg
sti
mov
out
inc
sbb
and
adc
daa
aam
mov
pop
aad
mov
xchg
dec
stc
add
jnp
es
mov
out
sbb
pop
xor
xchg
loopne
adc
xchg
jp
jne
push
imul
dec
pop
sahf
shlb
outsl
imul
lret
or
xor
in
mov
add
pop
adc
rcrb
cmp
lea
adc
ja
or
adc
fcom
fidivrl
sar
sub
push
loope
mov
inc
sbb
stc
aaa
or
adc
jae
push
xchg
and
push
idivb
jnp
out
sub
jg
push
add
jge
and
and
in
out
out
mov
mov
cwtl
jnp
addr16
add
inc
addb
ds
sub
syscall
push
mov
in
loop
mov
mov
push
dec
popf
and
out
test
xchg
jmp
sub
in
mov
jmp
dec
lret
flds
jno
fdiv
inc
ja
pop
nop
fcoms
ds
dec
adc
sahf
mov
or
xlat
jnp
jbe
les
jmp
pop
shll
sub
cltd
jmp
xor
push
test
out
push
xor
jle
dec
push
ss
pop
sub
or
sti
mov
dec
lea
cltd
repz
or
push
out
test
and
mov
cmp
sti
sub
xchg
xor
test
test
ds
fwait
cmc
mov
sub
stos
roll
jnp
and
mov
jecxz
adc
xchg
mov
cmc
dec
mov
inc
popa
mov
sbb
leave
cltd
mov
cmp
xorb
pop
cmp
jp
inc
xchg
out
xchg
mov
mov
or
fucom
fwait
rorl
mov
cmp
les
or
adc
pop
xchg
aam
dec
test
mov
scas
adc
mov
lret
xchg
mov
repnz
mov
dec
xor
wbinvd
dec
fistpl
mov
iret
jmp
sub
faddl
xchg
cmp
mov
push
clc
in
jae
fstl
mov
lahf
add
pop
pop
jns
dec
aam
xor
mov
sub
jle
inc
push
cmp
add
xor
mov
pop
shlb
jmp
mov
popf
rol
rcll
mov
lods
lock
cmp
mov
loop
fidivrl
shll
sahf
xchg
fisubs
test
pop
cmp
mov
mov
movsl
push
xchg
push
inc
popa
sar
mov
repz
inc
cmc
or
push
pop
jmp
jl
das
scas
cmp
push
insl
xor
jne
in
or
out
clc
lcall
aad
mov
mov
and
test
scas
sub
fidivrl
stc
jecxz
and
shlb
lret
call
lret
aaa
ret
push
int
adc
leave
sarl
fnstsw
mov
jno
mov
fs
bound
lcall
jmp
mov
daa
stos
test
jo
sbb
lds
xchg
cmc
mov
out
jns
cmp
push
push
lds
cmc
sbb
iret
mov
jecxz
pop
xchg
outsb
clc
clc
adc
cmp
aad
pop
mov
cmp
pop
out
xor
in
mov
mov
das
lock
lret
mov
mov
sahf
jbe
icebp
shr
or
push
pop
fistpl
sub
push
sub
movsb
fldl
sbb
mov
sbb
mov
cltd
mov
pop
imul
lcall
xorb
movsl
fsubrs
xchg
out
add
les
stos
test
pop
sbb
push
pop
ret
jae
add
mov
dec
xor
das
xor
or
stos
mov
fwait
add
dec
jmp
bound
mov
fmuls
insb
cld
cmp
mov
add
lahf
jecxz
add
xor
xchg
mov
add
dec
and
add
fnsave
addl
adc
test
movsb
stc
mov
out
test
cli
mov
dec
mov
or
ds
loope
xchg
dec
xchg
add
jns
sub
pushf
cmp
subb
lret
out
push
insb
in
scas
sub
push
mov
sub
sbb
lahf
pop
sbb
dec
mov
jb
push
jle
repnz
in
xor
out
mov
or
and
pop
add
jge
add
add
dec
daa
or
sub
cmp
mov
sub
adc
leave
pop
adc
jge
fisubrl
mov
mov
shlb
insl
stc
fstpl
push
lcall
out
movsb
sub
jnp
rcrl
adc
xor
sub
mov
jb
or
sbbb
cmc
loop
xor
cltd
iret
lods
push
xor
loopne
sbbb
xor
fimuls
lds
add
lock
pushf
dec
sbb
and
and
popf
pop
xor
jnp
pop
sbb
dec
mov
adc
cmpb
mov
jmp
ss
xchg
or
sbb
leave
jecxz
dec
adcl
add
push
into
mov
jbe
out
outsb
shlb
roll
sbb
inc
out
scas
movsl
fistps
sbb
mulb
ss
jg
xchg
adc
jbe
and
push
inc
stos
dec
stos
fistl
stc
jg
cltd
xlat
xchg
add
push
aam
pop
pop
outsl
mov
addr16
jg
add
push
cmp
pop
hlt
inc
push
mov
cmc
adc
mov
fnstcw
jmp
jbe
jne
ss
js
adcl
push
je
push
pop
push
dec
mov
jmp
aas
cmp
add
sub
mov
imul
xor
fs
pusha
jae
push
div
addr16
test
sub
cld
dec
and
dec
jne
pushf
dec
outsl
ret
lret
bound
in
imull
arpl
jnp
push
jne
inc
xor
mov
incl
ret
xor
in
loope
mov
or
pop
xor
cmpsb
and
leave
mov
dec
rolb
and
sub
call
adc
outsl
xchg
jl
push
adc
dec
and
cwtl
xchg
sbb
test
scas
pop
movsl
insl
mov
push
xor
ds
cmp
repnz
or
pop
jmp
shrb
enter
fisttpl
jp
mov
add
or
and
inc
jl
icebp
or
gs
cmp
test
cmp
and
jo
adc
mov
insb
dec
adc
je
inc
icebp
pop
shlb
jae
cmp
imul
sub
push
xchg
xor
rorl
mov
mov
mov
mov
in
xor
ficompl
mov
jmp
pop
add
setge
cmpsl
mov
ror
xor
repnz
or
sahf
dec
mov
lods
mov
mov
inc
addr16
cmpb
xlat
lock
pop
aam
add
push
orl
lcall
cmpb
popf
inc
addr16
adc
stos
bound
lret
stc
bound
push
test
xor
inc
and
or
cld
test
or
pop
inc
stc
xchg
push
fcmovnu
pop
enter
dec
inc
ss
aaa
xor
idiv
daa
roll
push
pop
cs
adc
lea
call
aaa
mov
test
sub
sbb
mov
je
cld
pop
inc
adc
std
sub
cmp
sub
insb
test
pushw
stos
sbb
push
aas
in
xchg
aam
loop
mov
ds
ret
sti
out
shlb
fchs
pop
pop
mov
sub
sbbl
gs
loope
shrb
fsubrs
movb
push
lret
pop
ljmp
stos
bound
or
jb
push
insb
icebp
jge
dec
push
imul
inc
pop
jle
in
xor
xor
lcall
ret
icebp
lret
cwtl
je
pop
add
jno
xchg
fildll
jae
iret
lcall
fisubrl
fnsave
jmp
dec
rcrl
stos
or
in
dec
jmp
pop
cmp
push
sub
add
xchg
std
add
pop
stc
sbb
pop
or
loopne
push
sbb
icebp
addb
push
ret
repnz
in
arpl
rcrb
fmull
lcall
loope
push
xor
daa
mov
pop
push
bound
test
les
xchg
in
maxps
push
hlt
add
and
call
in
sbb
fisubrl
cltd
sbb
push
xchg
cmp
jecxz
out
cli
push
dec
pushf
jne
xchg
cs
xor
add
inc
mov
inc
sbb
mov
int3
dec
loope
and
aad
jb
xchg
sub
mulb
ret
inc
push
ret
int3
sbb
mov
pop
mov
mov
mov
adc
fcmovnbe
hlt
mov
inc
push
mov
andb
hlt
mov
mov
jge
adc
mov
push
daa
fnstcw
pop
mov
jg
popf
fldcw
andl
add
xor
arpl
bound
jecxz
ret
fwait
bnd
and
fmuls
dec
fmuls
jp
xlat
inc
add
jl
jae
shlb
cltd
shll
imul
fisubrl
lock
and
test
not
rclb
loopne
sub
imulb
jle
lcall
ret
sub
add
in
pop
mov
jbe
rcrl
std
lds
inc
add
sub
insb
paddq
mov
adc
popa
jae
mov
out
loope
dec
stos
push
sub
xor
sti
adc
pushf
in
jecxz
int3
jne
outsl
fwait
add
arpl
shlb
frstor
ficomps
stos
shll
addr16
xchg
fwait
ret
ja
and
ljmp
dec
add
mov
push
and
jo
and
sub
andl
or
loop
ret
jns
int3
pop
mov
and
stc
enter
pop
out
xorl
mov
bound
addr16
cli
scas
dec
mov
cmpsb
add
hlt
inc
mov
push
in
inc
inc
les
and
pusha
or
or
dec
lret
cwtl
xchg
jp
mov
pop
and
mulb
insl
inc
jb
pop
loopne
mov
jb
xchg
xchg
push
and
ror
incb
repz
push
cmpsl
movsl
leave
sub
jb
xchg
rolb
fdiv
xlat
rolb
addr16
jne
lret
sub
mov
jb
rcrb
lds
aad
dec
das
mov
pushf
daa
int
dec
push
xor
fsubrs
das
std
inc
inc
pop
jecxz
jb
lahf
arpl
xchg
jae
jp
push
xchg
cli
inc
xor
rclb
lahf
call
jle
imul
cltd
fisubs
testb
push
push
movsl
rorl
push
loopne
shl
adc
cs
jecxz
dec
sahf
ljmp
adc
data16
icebp
outsb
jecxz
add
push
sarb
xor
pop
sti
dec
mov
or
gs
mov
push
adc
ficoml
aad
inc
push
lret
inc
jp
aaa
jo
cmp
xchg
in
xor
mov
scas
mov
sahf
arpl
sti
cmpsb
pusha
jae
adc
aas
sahf
xchg
adc
adc
fs
xchg
mov
pop
inc
fwait
daa
push
aam
fdivrs
xchg
in
add
xchg
mov
aad
xchg
repz
jge
lahf
popa
out
inc
inc
jge
cmpsb
aad
dec
push
test
mov
push
popa
sbb
sti
lods
add
mov
mul
xchg
cmp
out
shrb
loopne
xchg
lods
pop
cmpsb
xchg
mov
add
aaa
jb
xor
inc
sub
dec
lods
jne
mov
inc
loop
mov
repnz
hlt
cmp
cs
shll
scas
scas
pop
push
out
in
jnp
adc
or
and
inc
sbb
and
push
into
dec
xor
aaa
mov
sti
mov
loopnew
push
ret
pusha
pop
sub
ret
xchg
xchg
ljmp
mov
ficoms
lcall
jge,pt
andl
arpl
stos
inc
xor
imul
jb
jae
ret
pop
mov
outsl
rcrl
jno
leave
fldt
xor
int3
data16
shll
pop
jb
dec
cmc
jae
jno
cmpsb
stos
push
xor
popa
cli
jle
and
and
adc
scas
inc
add
fiadds
mov
inc
stc
push
stc
mov
fmulp
jb
in
cmp
sub
cld
xchg
cmc
mov
add
in
push
fcmovb
cmp
in
sbb
pop
mov
aad
sarb
sub
sahf
ret
or
mov
into
jecxz
ret
mov
jno
adc
adc
xchg
lea
mov
dec
jb
enter
xchg
mov
pop
out
jae
jnp
xorl
sbb
in
xor
fs
fists
sub
mov
sbb
mov
and
in
stos
push
jns
outsl
cmp
cmpsl
rcr
inc
dec
adcl
mulps
push
insb
mov
divl
test
ret
pushf
mov
lea
loope
in
lds
pop
xchg
int
shlb
pushf
scas
aaa
inc
movsl
push
sbb
pusha
xchg
xchg
cmpsl
js
and
xor
mov
arpl
push
lea
push
clc
mov
sbb
lret
xor
cmc
push
in
add
mov
fsubp
int
xchg
push
dec
xor
sarb
xor
mov
mov
cltd
sbb
inc
xlat
jg
lods
rcll
ja
icebp
pop
lods
or
sbb
mov
in
jmp
movsl
mov
stos
loope
mov
insl
mov
or
pop
add
or
lret
cmp
sub
mov
inc
rclb
fldl
sahf
push
ret
xor
dec
ret
jp
dec
mov
pop
sbb
or
movsb
cmpsb
fadds
test
insb
cmc
outsb
sti
hlt
dec
sub
pop
mov
or
xor
ja
add
xchg
jle
cmp
xchg
and
dec
xchg
cld
imul
inc
dec
mov
jne
dec
iret
dec
repz
insl
testb
and
dec
push
out
mov
cmp
aam
add
popa
lds
push
adc
popa
jo
mov
movsl
cltd
andb
fcmove
je
pop
sbb
add
leave
es
dec
shll
mov
movsb
xchg
dec
and
out
pop
mov
repz
mov
fildl
sub
cmp
sti
jo
fmuls
aam
mov
pop
lcall
cltd
pop
jnp
push
jp
mov
loopne
adc
nop
popa
xor
xchg
fistpl
inc
adc
cmp
sahf
test
or
lcall
in
cmp
jns
push
cld
mov
outsb
fnstsw
dec
push
jle
lcall
ret
pop
out
push
jp
test
add
addr16
js
mov
loopne
jae
ds
push
sbb
inc
out
push
ds
scas
inc
decb
mov
adc
inc
test
insb
push
mov
negl
mov
cli
or
push
inc
pop
aam
out
mov
loopne
xchg
cltd
test
ja
sbb
push
enter
jge
pop
mov
sbb
pusha
mov
or
xor
mov
push
jne
mov
xor
or
ds
xchg
rcr
and
dec
dec
fmull
data16
mov
test
jl
push
int3
outsl
jge
pop
lret
xchg
add
ss
mov
cld
cld
push
sub
addr16
iret
cwtl
dec
lret
sbb
sbb
jle
pop
lret
mov
data16
sbb
adc
pop
mov
dec
pusha
loope
jns
pop
and
xchg
repz
es
fcompl
outsl
cmc
mov
mov
adc
les
outsl
cmc
rcll
jl
push
push
stc
pcmpgtb
shll
je
ret
jbe
enter
add
xchg
roll
je
adc
in
xor
cmpsb
inc
stos
fdivl
loopne
fidivrs
mov
out
adc
loope
add
call
mov
cmpsb
nop
insb
sbb
out
dec
jns
push
inc
dec
repz
je
cli
or
iret
hlt
movsl
aas
clc
fistpl
mov
xchg
adc
mov
jmp
jo
xchg
inc
mov
aaa
or
divl
cmp
ret
xchg
outsb
dec
repz
cmp
lea
xor
mov
dec
adc
jge
sub
lcall
jl
divl
out
in
lods
in
imul
or
aam
je
dec
in
sarb
mov
inc
hlt
push
and
clc
adc
cmp
mov
lret
or
in
rcrl
out
lock
pop
jmp
into
push
pop
jp
shr
lods
popa
push
ljmp
pop
add
repnz
push
rorb
jg
push
add
call
dec
int3
mov
cmc
pop
cmpsb
sti
add
ret
hlt
sub
lock
lret
sahf
ljmp
ror
pop
in
dec
aaa
jge
sbb
adc
xchg
into
test
mov
sub
lret
mov
add
cmp
mov
pop
xchg
sub
mov
insl
or
xchg
arpl
push
dec
gs
mov
xchg
xor
jl
gs
dec
add
stos
lcall
and
call
cmp
mov
or
aad
sub
cmp
popa
pop
rcll
adc
imul
push
enter
lret
xchg
incl
xchg
fiaddl
addr16
add
xchg
int
sbb
mov
lret
hlt
adc
shl
test
push
sbb
mov
inc
add
or
push
mov
icebp
mov
into
jecxz
add
out
jb
mov
sbb
ja
push
lret
jp
pop
lea
inc
cmp
out
testb
outsl
out
jecxz
push
mov
xor
dec
mov
mov
outsl
mov
push
ljmp
jbe
mov
ficompl
or
call
arpl
dec
leave
icebp
fdivs
push
fdiv
loop
scas
inc
inc
mov
mov
xlat
sahf
dec
neg
enter
ss
and
hlt
repz
add
add
push
cmp
aas
or
mov
xor
and
adc
xor
stos
cld
popf
inc
add
mov
add
es
aas
mov
pop
roll
daa
jmp
lahf
jg
ss
xchg
mov
mov
sarl
sti
add
sbb
mov
pop
mov
pop
aaa
jmp
xor
inc
push
adc
sub
cmpsl
fstp
call
insl
ljmp
scas
add
push
or
cs
push
call
lcall
cmp
iret
outsl
js
push
outsl
jb,pn
fwait
xlat
mov
loop
adc
stc
mov
lods
dec
or
sahf
aam
xchg
cmp
fisubl
inc
mov
rcll
cwtl
cmpsb
out
adc
mov
cmp
push
mov
add
dec
sub
sub
pop
cmp
jp
mov
pusha
push
mov
stos
fiaddl
mov
xor
ret
adc
fs
fldt
mov
loope
ljmp
sbb
popa
pop
jns
xchg
mov
movsb
or
push
cli
cmc
rcr
popa
sahf
sti
cwtl
jle
lds
int3
inc
ss
add
add
xchg
enter
sbb
xchg
and
shlb
fstl
pushf
and
cli
sub
lods
dec
mov
mov
xchg
mov
adc
xchg
fisubrl
sbb
xor
faddl
pusha
and
mov
test
jl
sub
aam
aad
stc
insb
jns
jno
shrl
loope
xchg
xor
xchg
in
inc
std
aam
jne
hlt
or
cmp
out
sub
pop
dec
scas
cmp
lret
adc
push
subb
rol
aam
or
fwait
cli
cmpsb
enter
and
pusha
fildll
xchg
adc
fs
lea
inc
push
push
sbb
sbb
mov
cld
sub
fmuls
sbb
leave
jbe
sbb
notb
jg
push
xor
imul
das
mov
gs
shlb
test
xchg
push
mov
in
dec
movsl
inc
insb
subl
sub
inc
pop
int
std
sahf
cmpsb
popa
sub
aas
mov
ret
jb
shll
push
push
mov
or
rolb
inc
inc
jecxz
fisttpl
lahf
enter
xchg
add
test
std
dec
xchg
inc
test
xchg
pushf
inc
sarb
iret
imul
fistps
push
fwait
out
jg
shrb
into
std
imul
mov
mov
lcall
loopne
test
cmc
sub
cltd
xlat
fwait
shlb
lret
mov
mov
xchg
cwtl
pusha
cmpl
inc
rcl
or
pop
xlat
push
push
jnp
repnz
mov
dec
add
mov
faddl
push
enter
fdivs
cmp
dec
cmpsb
sbb
movsl
push
jae
js
inc
mov
hlt
iret
push
aas
nop
scas
test
cwtl
add
sub
jge
dec
popa
sub
add
dec
inc
pop
mov
sub
sub
sbb
test
xchg
arpl
sbb
or
repnz
stos
cld
aas
adc
outsl
pusha
in
mov
or
out
xchg
xor
push
fwait
jns
push
cmpsb
dec
jg
inc
in
dec
mov
mov
shlb
jns
ljmp
mov
inc
or
lea
in
cwtl
loope
push
lds
jp
inc
shrl
mov
sahf
outsb
xchg
movsb
adc
push
repz
push
pop
scas
test
mov
jb
inc
lock
mov
mov
scas
pushf
xor
test
cli
insb
cmpsl
mov
pop
dec
lock
push
ret
sub
nop
je
xorb
push
nop
std
insl
stos
adc
jns
dec
pop
subb
bound
into
mov
and
fisubl
nop
jo
stos
xor
and
sub
insb
adc
mov
sub
cli
push
pop
and
xchg
aad
into
mov
test
add
bound
mov
int
pusha
mov
xor
jno
push
subl
jp
pop
push
mov
out
cmp
sub
ljmp
mov
sbb
push
xchg
pusha
adc
jecxz
mov
jae
out
add
xor
mov
lds
data16
xchg
push
shlb
es
jmp
punpckhwd
out
gs
movsb
int3
mov
jp
pop
es
insl
outsb
pop
fwait
sub
ss
punpckhwd
das
dec
fsubl
cli
int3
push
cmp
es
dec
mov
stos
fisubl
mov
ds
sbbl
xlat
jecxz
and
fwait
sub
mov
std
pop
jle
repz
fcmovne
rcll
fisttpll
jnp
movsb
inc
xor
shrb
mov
or
cmpsb
inc
addr16
js
mov
aam
stc
loopne
xchg
js
testb
jp
popa
aas
in
xchg
mov
xor
rcrl
inc
shll
mov
pop
adc
xchg
jecxz
push
mov
out
fcmove
push
out
arpl
arpl
sbbb
jg
loop
add
ja
orb
mov
pop
int3
mov
or
fdivrs
test
inc
lods
jp
or
or
xor
in
enter
out
repz
mov
cmp
pop
cmp
pop
dec
out
mov
data16
sbb
xorl
fnstenv
lea
sub
cmc
adc
mov
out
add
mov
mov
fs
ljmp
notb
js
add
jge
adc
add
lahf
rcrl
xchg
pushl
sti
jge
adc
pop
dec
xchg
push
pop
in
add
and
movsl
dec
ljmp
out
popa
lods
sbb
mov
sbb
in
adc
icebp
jge
pushf
sub
popa
push
cmp
sbb
test
mov
iret
movsb
nop
push
add
jnp
paddw
adc
jbe
movsl
lcall
fmulp
mov
mov
mov
js
add
mov
dec
scas
and
inc
and
jp
mov
pop
loopne
das
fnsave
dec
rcll
in
vsqrtss
xchg
push
xor
std
add
push
sahf
xor
mov
shrb
dec
lds
sti
mov
stc
xor
inc
sahf
loope
sub
cvtps2pi
dec
pop
jmp
mov
or
mov
xchg
test
lods
jmp
imul
jae
imul
lcall
ja
inc
push
sub
cltd
adc
loope
cld
dec
xchg
jae
cmp
jne
outsl
or
popa
mov
sub
insb
jbe
push
test
and
popa
cld
or
pop
inc
clc
or
ret
fsubr
cwtl
push
repz
or
fnstcw
sbb
adc
sbbb
push
sub
es
mov
test
scas
xor
int
sbb
aas
xor
lea
mov
xchg
pop
dec
pop
cwtl
das
xor
movl
js
lock
mov
pop
dec
inc
or
dec
shll
push
stc
and
mov
jmp
fidivrs
mov
xor
nop
xchg
jae
inc
sub
bound
mov
push
fsubrl
sub
imul
lds
pushf
dec
jle
sbb
popa
add
adc
pop
std
mov
jb
fldenv
pusha
nop
jb
in
subb
adc
push
ret
shll
fimuls
movsl
mov
cmp
jo
pop
jnp
pop
rcrb
cmpsb
pop
sub
ret
pushf
mov
roll
add
aaa
or
jb
and
push
cmpl
mov
or
xchg
jne
mov
push
lret
je
dec
cmp
in
aad
mov
jmp
cmp
or
jo
test
mov
inc
sbb
int3
iret
cwtl
repnz
loopne
pop
add
sahf
lcall
xchg
dec
pop
mov
mov
mov
pop
lret
pop
xchg
test
lret
mov
and
sbb
sbb
jge
mov
pop
test
orb
fs
dec
sub
out
mov
sti
outsb
outsl
aas
hlt
lahf
xor
sbb
push
mov
cmp
inc
dec
fisubrl
in
jp
jns
loop
lret
sub
and
fcoml
cltd
jmp
inc
xor
iret
popa
push
in
call
es
iret
subl
test
arpl
lcall
mov
in
mov
jg
es
sbb
or
jle
jo
pusha
enter
inc
orb
dec
xchg
fbld
dec
scas
test
jae
cs
popa
and
inc
jae
pop
test
rclb
nop
push
loop
sub
xor
mov
cmpsb
fisubrs
mov
jge
mov
mov
loopne
jno
inc
daa
ficoml
lahf
adc
in
dec
jl
pusha
insl
rcrl
jg
jmp
int3
push
ljmp
xor
xchg
mov
fidivl
lods
sub
ljmp
in
cmc
push
sub
sub
call
xor
sbb
adc
bound
mov
lea
fwait
stos
push
jne
xor
ret
pusha
add
in
sbb
subb
xchg
mov
mov
and
cwtl
sub
push
dec
xchg
pop
xor
and
sbb
pop
add
mov
stc
sub
xor
loopne
lods
scas
mov
xor
sbb
ja
push
fwait
cmp
sti
scas
push
lahf
test
dec
bound
cwtl
xchg
aad
pop
adc
dec
adc
pop
jbe
pop
int
pop
addl
ljmp
lret
test
aam
addb
sub
inc
icebp
movsl
dec
sbb
mov
std
inc
mov
cmp
mov
cmp
or
and
int3
pop
mov
jo
xor
loopne
ret
mov
mov
movl
pop
xchg
push
mov
cmpsb
dec
pushw
xchg
cmpsb
jne
ret
mov
mov
popa
gs
test
adcb
inc
or
xor
pushf
push
ret
add
out
pop
lods
jge
ss
in
sub
mov
nop
lods
loopne
sub
ret
add
mov
mov
xchg
cmpsl
pop
and
in
lret
adc
fildll
mov
in
or
cmp
ss
push
pop
leave
push
jecxz
ss
das
jae
sti
aaa
dec
jo
inc
push
mov
cmp
sub
movsl
dec
stc
leave
loop
mov
inc
out
add
push
addb
insl
mov
dec
push
xor
and
xchg
push
sub
dec
mov
push
imul
jmp
push
in
pusha
sub
and
rolb
cltd
mov
push
sub
fidivs
int
shrl
push
sar
xchg
cli
mov
xchg
mov
in
sbb
jo
psllw
mov
pop
mov
aas
lcall
sbb
nop
mov
in
jge
xor
xor
int
inc
rorb
and
adc
mov
adc
or
sub
daa
scas
out
dec
cmp
in
push
or
mov
cwtl
xchg
and
push
jo
xchg
into
loope
sarb
faddl
fcompl
daa
in
lcall
leave
ret
mov
mov
in
jl
lret
pusha
clc
fwait
add
inc
sbb
pop
xchg
xor
add
out
repnz
repz
adc
cs
sbb
jbe
jns
bound
andl
inc
sub
lds
cmpsl
add
ret
sahf
jge
addr16
mov
or
dec
repnz
jne
rolb
in
cmp
mov
pop
xor
and
loope
repnz
mov
mov
xchg
mov
pop
dec
xchg
xchg
xlat
and
scas
aad
and
dec
gs
xlat
pop
pop
xor
fwait
jl
add
fwait
insl
sbb
lods
lods
pop
mov
dec
mov
dec
and
cmc
and
jo
mov
xchg
cltd
dec
xchg
aam
add
stc
insb
or
mov
push
adc
pop
adc
dec
add
je
les
inc
insl
hlt
std
out
in
mov
push
mov
int
xor
and
mov
mov
fistl
push
push
popf
xor
dec
icebp
je
std
sub
icebp
std
pop
lea
sbb
les
aad
jge
xchg
out
jae
and
dec
inc
mov
cmp
rorb
pop
leave
enter
stos
inc
outsb
or
dec
int
xchg
lock
pop
jmp
cmp
add
mov
cmp
mov
jns
scas
fistpll
jnp
jnp
sbb
cmp
push
add
sti
mov
pop
push
and
or
mov
sub
cmp
xor
loopne
cmc
mov
cmp
int3
xor
sbb
jp
or
add
push
inc
pop
pop
es
lcall
pop
les
push
lret
sarl
push
es
and
mov
sbb
cmp
push
sbb
dec
pop
xor
mov
cmp
lds
orl
lret
inc
and
ljmp
push
les
add
scas
ljmp
pop
outsl
into
inc
popa
xchg
pop
jo
addb
in
in
stos
push
cmp
xchg
dec
ja
fdivrp
or
dec
add
xchg
inc
mov
mov
mov
inc
jb
insl
lods
mov
push
push
or
cltd
pop
cwtl
jns
inc
into
repnz
mov
pushf
jmp
in
pop
push
test
dec
int
cmp
fisubrl
stos
hlt
dec
stos
lahf
pushf
sub
pop
das
sub
popa
sbb
aaa
xchg
loope
mov
out
test
push
pusha
outsb
xchg
cmp
sti
jne
cmpsb
movsb
subl
scas
inc
rol
out
pop
jno
pop
mov
pusha
dec
pop
filds
out
std
push
jno
adcb
int3
ljmp
push
jge
mov
xorb
fstpt
and
sub
sbb
xor
mov
push
mov
test
lahf
ret
rcll
add
mov
xor
mov
jb
imul
addr16
outsl
ds
insl
pop
inc
mov
xchg
cmp
mov
cltd
jg
push
arpl
and
jno
mov
mov
push
pop
cmpsl
fists
mov
mov
mull
pop
xchg
enter
adc
rorl
mov
fs
and
sub
adc
fnstcw
incb
int
mov
dec
lahf
or
mov
adc
and
cli
jbe
popa
xchg
sub
shll
pop
arpl
leave
mov
js
xor
mov
test
adcl
mov
icebp
js
xchg
or
das
mov
pusha
lods
out
je
test
push
pop
or
out
mov
mov
fdivrl
inc
sbb
add
xor
jg
imul
mov
mov
test
pushf
setl
test
icebp
imul
mov
and
xchg
dec
pop
xchg
cmp
or
jbe
jg
add
pop
or
mov
mov
push
and
xchg
mov
mov
xchg
push
xor
jecxz
cmp
xchg
xchg
and
test
jnp
xlat
out
roll
push
xor
xorl
mov
pushf
mov
push
inc
jbe
pop
xor
fdivrs
add
xchg
jbe
jecxz
js
daa
jge
mov
sbb
dec
push
fiaddl
les
addr16
pop
lods
movsl
dec
xchg
cmp
subb
rclb
jae
fidivs
mov
mov
leave
inc
mov
repz
jae
xchg
es
mov
aad
and
js
cmpb
push
lahf
sub
imul
sbb
pop
pop
inc
neg
pop
shrl
idiv
adc
repnz
mov
or
leave
xor
js
push
inc
push
ret
sub
mov
mov
push
addr16
andl
xor
cmp
push
mov
in
fwait
popa
mov
das
cmp
cmp
xchg
imul
les
jnp
xor
jl
iret
sarl
ja
iret
sbb
cmpsl
mov
gs
cli
shll
sub
es
dec
lds
add
mov
shll
loopne
bound
subl
dec
adc
mov
js
cld
imul
neg
es
bound
call
movsl
adc
cmp
push
sub
sub
ret
mov
out
pop
pop
mov
sbb
jle
fstpl
rorl
xor
add
lock
dec
in
mov
push
mov
xchg
xor
xchg
data16
jne
mov
popa
cwtl
cmp
cmp
and
cmp
imul
mov
sub
sub
insb
push
push
inc
std
inc
push
sbbl
or
lods
pop
jnp
out
push
cli
or
cmp
nop
add
or
pop
aas
dec
imul
inc
and
push
xor
pop
sbb
adcl
sub
clc
and
mov
jbe
pop
ja
lds
outsl
pop
popf
fisttps
add
dec
or
insl
iret
sub
insl
mov
movsb
fisubs
mov
mov
push
cmp
xchg
mov
push
jnp
jbe
mov
mov
push
jo
fldl
test
push
xorb
add
fiadds
adc
loope
sbb
mov
and
mov
xor
imul
xchg
xchg
pusha
jo
sub
inc
xlat
loop
mov
xor
adc
xor
push
sbb
cmpl
pop
cmp
xchg
test
fisubrs
fldcw
inc
cmp
mov
mov
aam
imul
dec
jne
sub
or
adc
movzwl
stos
iret
ja
jg
test
add
or
mov
jg
rcrl
sbb
rorl
cmpsl
xchg
mov
pop
push
rorl
jb
adc
pop
subb
xchg
outsl
ud2
xor
popa
cltd
mov
mov
rorl
fbld
lahf
out
cmp
std
add
jne
out
in
js
push
jl
lcall
push
addr16
das
or
inc
add
outsl
ret
ret
gs
sti
ret
lods
addr16
cmp
jmp
fxch
mov
dec
mov
pop
mov
xorb
jecxz
sbb
fldl
xchg
js
scas
loope
xchg
into
cmp
mov
pop
push
add
icebp
repz
add
fs
fbstp
pop
mov
divl
xchg
orl
decb
xchg
test
iret
xor
addr16
ja
inc
sub
testb
jecxz
cmpsl
aad
sar
cmc
xor
inc
xor
pop
sti
or
sbb
jb
or
movsl
sbb
js
popa
int
lcall
inc
add
pop
test
les
dec
pop
nop
xor
out
aaa
fdivrs
sbb
cmc
cmp
test
dec
fsubrs
and
sub
mov
mov
jmp
push
mov
adc
loope
or
into
sub
mov
xchg
jg
xchg
cmc
in
popa
outsb
aam
btr
into
push
cmp
adc
xlat
inc
popf
mov
aas
out
xor
pop
shlb
adc
xor
fwait
into
cli
xchg
add
fistl
add
mov
movsb
xchg
mov
adc
push
leave
mov
jae
or
outsl
xor
ja
sub
cli
mov
sbb
mov
mov
daa
call
cmp
aam
jmp
arpl
mov
repz
cmp
in
jg
ret
es
movb
rclb
push
mov
stos
push
or
loop
mov
in
data16
push
test
jo
cld
ds
ret
sub
jecxz
aad
mov
popa
ss
mov
sbb
add
testl
adc
outsb
sbbl
or
test
pop
mov
je
jno
inc
sub
gs
jecxz
addr16
dec
cmpsl
in
repnz
lea
jge
test
movsl
jne
rcrb
xchg
xchg
push
cltd
pusha
shrb
cmpsl
dec
and
mov
jmp
fisubrl
mov
lcall
loope
divb
dec
neg
lods
push
jns
outsl
pushw
jge
push
ljmp
push
cmp
arpl
xchg
outsb
xor
mov
jle
dec
sti
inc
repnz
inc
pop
scas
xchg
scas
jbe
scas
jle
hlt
mov
mov
adc
lods
or
jnp
mov
ret
pop
fisttpl
mov
daa
mov
decl
xchg
js
and
test
fisubs
mov
mov
int3
mov
mov
inc
cld
outsl
xchg
mov
dec
sahf
mov
imul
xchg
add
cld
cltd
push
arpl
addl
rolb
js
mov
inc
cmp
mov
cmp
repnz
mov
daa
cmp
mov
arpl
test
into
jae
nop
push
sti
inc
add
mov
movsl
cwtl
cmp
sbb
pop
add
int3
dec
pop
or
pop
dec
movsl
dec
xchg
out
xchg
adc
incl
adc
lock
push
and
push
ja
and
loopne
adc
xchg
mov
push
into
insl
cmpsb
inc
mov
mov
mov
ret
pop
decb
jns
push
insb
or
aaa
mov
jb
xchg
cmpsl
inc
rclb
push
movsb
push
inc
daa
mov
sbb
imul
add
jge
call
hlt
call
mov
jg
cli
lahf
les
movsb
mov
test
jo
xlat
sahf
movsb
cmpsl
ret
lahf
cltd
or
xchg
sbb
jns
inc
jbe
sbb
push
testl
mov
adc
in
cmp
mov
and
cmp
mov
push
in
push
call
mov
sarl
jnp
add
pop
xorb
inc
xor
psubb
aad
xchg
shll
jns
movsb
mov
mov
ficompl
sti
pop
jae
outsb
shlb
mov
cmp
aam
jnp
mov
sub
repnz
and
xlat
jbe
adc
cmp
dec
data16
push
es
enter
xchg
add
arpl
iret
pop
icebp
inc
add
inc
mov
inc
pop
jns
and
dec
xchg
add
push
xchg
insl
and
setg
loope
outsb
push
mov
movsb
enter
aas
mov
pop
sbb
inc
xor
ret
nop
ret
push
cli
cmp
enter
dec
cmpsb
ja
cmp
jmp
push
jae
and
cmc
dec
dec
push
and
mov
lods
push
into
mov
xor
andl
call
fcmovnbe
adc
dec
out
push
jno
dec
jmp
xchg
sbb
int
push
mov
or
rclb
shll
bound
fsts
loopne
add
adc
pop
sbb
dec
adc
int
into
cmpsb
movsl
xchg
insl
iret
sbb
mov
push
or
mov
icebp
cmp
out
int
aam
and
dec
push
xor
mov
xor
jnp
stc
int
dec
mov
shlb
adc
and
cmp
jmp
push
repz
inc
push
or
ja
pop
jge
pop
and
and
ret
mov
pop
and
or
fstl
scas
pusha
dec
pop
mov
xor
sub
sbb
jb
add
dec
mov
jne
mov
jb
cmp
rclb
xchg
xchg
lret
cmp
push
fldt
ja
mov
inc
mov
cmp
push
sub
jne
aad
movsb
push
aad
repz
or
inc
push
xchg
jno
nop
ret
mov
jmp
sbb
sahf
push
rorl
stos
lea
xchg
les
mov
cmp
fimull
je
mov
pop
repz
sub
sub
lock
adc
xchg
adc
sarb
add
test
xchg
xchg
pop
cmp
jnp
fldcw
ljmp
test
fld1
sbb
jmp
rep
or
std
mov
mov
xchg
add
das
and
outsl
shrl
jno
sub
pop
and
lock
or
xchg
sar
or
outsb
fldl
mull
add
in
sub
push
fnstsw
dec
aad
jle
scas
mov
add
int
jle
pop
or
jmp
test
test
lea
ja
cmp
sbb
mov
or
cwtl
dec
and
inc
or
iret
adc
inc
push
jbe
call
pop
jle
push
out
repz
jl
push
aad
roll
inc
cmpsb
jo
insl
nop
sub
push
leave
into
repnz
mov
dec
mov
adc
mov
iret
xchg
xlat
dec
out
push
cmp
fsubrl
xchg
fistl
fdivrp
enter
jl
loop
jns
sti
cltd
mov
gs
jle
mov
mov
inc
xchg
sub
mov
pop
test
push
lds
call
enter
cmp
dec
scas
loope
push
loop
pop
push
incb
loop
pop
mov
idivb
fsub
jmp
les
ja
jge
loopne
adc
sahf
sub
scas
aas
loope
jg
out
imul
in
rolb
je
fbld
fs
jp
and
inc
cltd
popf
jp
mov
or
add
fs
pop
push
push
cwtl
mov
iret
fildll
inc
pop
std
dec
int
push
sbb
pushf
fstl
pop
mov
js
ljmp
inc
fistpl
adcb
and
or
add
jb
dec
add
sti
cmp
out
pop
pop
mov
daa
rorb
in
shrl
test
or
inc
fs
stos
mov
pop
mov
add
mul
cli
adc
sub
push
pop
aaa
mulb
add
pushf
aaa
shlb
jnp
xor
sarb
addr16
out
sub
shl
movsb
xchg
adc
dec
sbb
xchg
jmp
mov
repnz
loop
push
inc
dec
push
jne
es
jae
enter
lods
sub
cs
sbb
jp
xor
out
xchg
daa
push
int
rcrb
call
xchg
dec
mov
xchg
in
bnd
fimull
sbb
outsl
hlt
or
sbb
or
sbb
push
rcrl
pop
and
and
inc
jl
pop
inc
mov
scas
adc
lret
scas
pop
sub
xor
stos
xchg
jo
mov
or
xor
and
dec
and
js
lret
mov
mov
dec
imul
clc
inc
pop
icebp
das
add
ljmp
js
or
mov
inc
fwait
adc
je
mov
jmp
mov
andb
adcl
sbb
lds
xchg
push
adc
sbb
stc
enter
inc
mov
and
addl
mov
loop
ret
stc
ljmp
mov
fwait
xchg
dec
jecxz
subb
mov
test
fbld
adc
negl
mov
push
add
or
add
inc
adc
in
adc
nop
inc
sub
mov
and
daa
mov
sbb
outsb
push
or
popa
jle
jge
pop
inc
pop
jecxz
call
jg
js
lret
lock
push
leave
in
pop
push
adc
aaa
push
sbb
sub
xchg
jno
jno
leave
mov
dec
xchg
and
jne
notl
pop
mov
jns
int3
pop
out
sbb
and
cmp
mov
lret
dec
ds
cmp
add
int3
jmp
pop
dec
sub
movsl
ljmp
push
mov
stc
jae
insl
dec
mov
out
adc
cld
call
or
shlb
loope
imul
repnz
das
mov
inc
ret
sub
jnp
jp
bound
es
aad
mov
pop
insb
in
and
push
jnp
and
mov
push
push
xchg
push
jle
jne
xchg
jge
mov
inc
add
cmc
js
mov
sub
sbbl
je
adc
sub
fdivs
movq
xchg
nop
sub
sub
cli
jg
dec
aas
aaa
cwtl
inc
jae
sarl
inc
xor
movsl
ds
adc
xchg
into
das
fmul
inc
sub
cli
loopne
cmp
dec
dec
fidivrl
jne
cpuid
and
jne
es
aam
test
and
repz
hlt
lods
xchg
add
iret
sti
imul
jg
testl
mov
xor
dec
loop
cmpsl
inc
iret
push
mov
inc
divl
add
out
jo
out
push
push
jp
mov
jl
pop
call
andb
jno
mov
iret
in
sbb
sub
sub
push
xor
xor
js
int
cld
ljmp
pop
repz
jnp
sbb
ret
or
or
pop
or
enter
lock
not
into
pop
loop
mov
jmp
adc
es
lods
into
call
inc
or
push
cmpb
add
in
stc
mov
jmp
test
cwtl
out
lret
pop
out
pop
mov
inc
lret
jg
adc
push
popa
xor
outsb
arpl
xor
pcmpgtw
int
and
aam
jns
shrl
sahf
ret
ret
sbb
sub
mov
mov
repnz
xchg
adc
mov
sub
out
sbb
adc
pop
dec
dec
and
push
in
out
movsl
fildll
movsl
cmp
into
mov
fst
out
test
push
imul
cmc
mov
mov
dec
shlb
loop
push
cmp
pop
xlat
add
cmp
and
shll
mov
add
add
int
cmp
ds
mov
inc
fmul
outsl
and
