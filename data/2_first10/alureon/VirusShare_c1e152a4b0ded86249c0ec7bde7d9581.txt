push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
add
adc
jp
repz
orl
ss
mov
fistps
gs
std
cld
or
pop
mov
loope
fimull
mov
sub
pop
clc
fisttps
pop
daa
and
leave
push
fimull
mov
cmp
add
or
insl
xor
cmc
je
lods
push
icebp
icebp
icebp
es
xchg
dec
push
in
add
push
push
lret
iret
orb
and
imul
xchg
imul
jno
mov
imul
add
mov
sub
arpl
sbb
decl
jle
fcoms
test
ds
leave
stc
or
cwtl
dec
stos
fdiv
push
cmp
icebp
pop
or
ror
addr16
push
rorl
call
test
jae
bound
jle
out
mov
mov
stos
cmpsl
das
insb
jno
mov
imul
sub
nop
mov
mov
imul
sub
add
fs
pop
fwait
push
hlt
push
and
in
mov
dec
dec
xchg
out
int
xchg
loopne
mov
xchg
andl
hlt
jle
enter
loop
negb
push
std
mov
pop
pop
fstpl
xchg
dec
into
les
mov
adc
xchg
dec
les
dec
sub
ljmp
xor
sub
jmp
adc
mov
xor
out
or
fistpll
adc
in
loopne
lods
test
jl
ljmp
ljmp
mov
or
scas
sbb
fidivl
int3
push
popf
jno
sbb
inc
xor
sbb
inc
ss
in
das
shlb
stos
mov
push
mov
or
cmp
fldenv
push
aad
aas
movsb
push
xchg
lods
pop
mov
cmpsb
mov
test
sbb
shlb
jne
jecxz
cmpl
lds
and
xor
dec
ret
add
add
fldcw
sbb
in
mov
adc
out
pop
xor
dec
imul
shlb
popf
fists
jge
cmpb
lods
mov
pop
or
ss
lret
or
clc
pushf
pop
ljmp
sbb
adc
fwait
sub
adc
cwtl
xor
sub
mov
pushf
dec
cltd
pop
xor
insl
aas
test
loop
mov
inc
mov
add
add
hlt
cwtl
rorl
lret
stos
push
push
cmp
xchg
shl
inc
insb
sub
xchg
data16
inc
aas
cwtl
and
add
lods
push
and
call
xor
in
fnstenv
test
cs
jo
mov
bnd
mov
xor
stos
lods
dec
adc
mov
fcoms
sub
rcrb
outsl
add
scas
aam
paddusb
pop
jg
fwait
jbe
lret
dec
mov
sbb
cld
fdivrl
jbe
cmpsl
arpl
fwait
out
xor
push
mov
jae
xchg
movsl
dec
mov
mov
sbb
lahf
mov
add
das
out
xchg
sar
cld
repz
mov
xor
aas
orb
adc
sbb
lods
cmc
xor
in
or
ja
cs
lcall
add
add
dec
mov
push
hlt
cmovns
leave
fwait
jne
add
aaa
imul
out
push
jb
aas
and
push
jae
jp
fisttpl
and
push
xchg
mov
and
ds
test
push
rorb
mov
mov
outsb
add
stc
and
xorl
dec
aad
xchg
lret
fidivrs
andb
fisttpl
xor
add
add
cmc
jecxz
dec
movsl
add
call
or
lock
xchg
jbe
mov
sub
xchg
sub
ds
or
loopne
lahf
mov
std
mov
loop
fnsave
in
inc
xor
stos
add
cmc
jne
mov
pop
shl
push
bt
mov
in
outsb
ja
xchg
mov
loopne
cmpsl
insb
inc
test
cltd
mov
aam
or
add
outsl
fadd
iret
adc
mov
fisubl
push
jo
cmp
gs
adc
xor
mov
push
cwtl
jbe
mov
xor
pop
mov
xchg
adc
lret
out
jle
xchg
in
xchg
sbb
imul
mul
pushf
pop
out
leavew
pop
pop
std
bound
xor
mov
mov
orb
xchg
cmpsl
inc
pop
leave
push
xchg
fisubl
call
add
pop
mov
mov
das
loop
mov
fidivl
dec
lds
jecxz
lock
mov
mov
xchg
mov
icebp
push
scas
js
adc
loopne
add
mov
jg
sbb
stos
int3
or
lds
add
inc
out
stos
jnp
and
frstor
rolb
ror
push
pushf
jno
fwait
or
mov
in
dec
dec
xchg
nop
push
push
jp
shlb
shll
pusha
imul
jmp
je
xchg
sbb
in
push
mov
cmpl
and
cmp
outsl
xchg
or
popf
mov
pop
adc
inc
mov
sub
xchg
sub
push
dec
push
lods
test
mov
inc
test
mov
popf
loopne
fwait
in
xchg
cmc
inc
loopne
lds
setp
add
add
add
pop
movsb
cld
test
or
lcall
fstps
or
scas
call
fwait
imul
ljmp
aaa
and
dec
leave
sbb
pop
sbb
movsl
jnp
push
cmp
dec
lret
insb
xchg
mov
gs
sti
lahf
es
lret
mov
or
or
cmpsl
aam
lcall
cmp
or
push
and
int
loope
push
and
mov
or
aam
lock
movsb
dec
xchg
mov
sub
or
pop
jle
jns
pop
test
pop
pusha
into
js
les
add
aad
xchg
popf
lock
inc
push
jbe
addr16
adc
dec
inc
dec
xchg
push
cltd
test
dec
adc
sbb
pusha
mov
sub
testb
add
xchg
mov
cmp
movsb
notb
dec
out
mov
sbb
adcb
dec
sbb
mov
inc
repnz
jne
mov
push
in
cmpsb
mov
in
dec
lret
and
imulb
mov
out
pop
sub
stc
shll
pop
fnsave
sub
scas
add
xchg
mov
pop
out
outsl
into
mov
pop
decl
iret
cmp
push
fcoms
in
mov
inc
incl
add
xlat
inc
in
js
cmp
fsubrl
cli
ljmp
out
mov
sub
mov
clc
cli
pop
hlt
and
pop
enter
jb
mov
jo
adc
cltd
arpl
ss
sbb
test
add
jmp
lret
xor
ja
and
xchg
pop
test
ja
push
jno
es
clc
sbb
xor
add
add
loopne
test
ds
hlt
mov
fisttps
inc
adc
dec
mov
loope
dec
mov
negb
inc
arpl
fidivrs
pop
mov
inc
in
lds
mov
mov
jge
icebp
call
leave
cltd
inc
loopne
insl
jecxz
sub
cmpsb
sub
jbe
sub
mov
leave
stos
or
xlat
shrb
lods
or
add
popf
mov
xchg
add
call
lea
mov
out
push
push
push
dec
cmp
dec
xchg
sbb
fcmovu
pop
or
je
dec
push
jb
cltd
xchg
popf
jecxz
xor
push
mov
mov
fcom
jecxz
out
mov
dec
daa
pop
inc
fisubl
rol
push
addr16
xchg
fists
add
dec
movb
dec
lret
xchg
adc
and
push
pop
cmp
mov
add
add
inc
inc
fwait
lods
add
sub
rep
ret
inc
inc
daa
pop
shl
xor
rclb
cld
enter
jo
or
decl
jmp
sub
imul
into
stos
cli
dec
dec
mov
mov
mov
xchg
sbbb
jne
std
dec
jge
or
or
xlat
cmp
sbb
lock
sub
insb
test
movsb
fistpll
in
in
xor
add
add
sbb
or
push
scas
sub
inc
arpl
rcr
adc
mov
in
bound
or
andb
sar
shll
aaa
outsl
mov
and
inc
mov
cmpsl
stos
bound
push
test
int3
inc
jno
aad
outsb
aaa
enter
rorb
lods
outsb
cmp
lods
ss
xchg
int3
pop
jmp
jne
fucomp
mov
test
add
push
in
mov
inc
lds
popf
or
inc
ret
pop
data16
add
sub
adc
dec
jg
repnz
rcrb
iret
jb
fldt
push
out
cmp
aad
fisttps
mov
and
or
jg
inc
out
je
call
test
dec
inc
push
jnp
xchg
mov
and
stc
jbe
xor
add
adc
into
outsl
mov
jg
mov
daa
addr16
push
pop
cmp
pop
outsb
adc
sbb
push
mov
call
es
imul
xchg
mov
mov
sbb
pop
cmp
and
add
add
mov
and
bound
int3
fdivrs
and
jnp
les
test
jo
enter
or
mov
add
imulb
leave
mov
mov
jae
out
pop
mov
pushf
mov
outsl
call
xchg
mov
fwait
jle
sbb
pop
mov
xchg
push
repz
add
mov
fimuls
out
push
movsb
xchg
jmp
test
out
mov
mov
aas
pop
or
push
and
cmpb
scas
dec
int3
mov
xchg
pop
sti
dec
jecxz
fmull
dec
lock
and
popa
sub
jns
xchg
aaa
xchg
cmp
add
xchg
mov
mov
push
jo
mov
push
xor
clc
dec
sbb
and
mov
outsl
ljmp
push
loopne
or
jne
mov
nop
daa
lret
lret
xchg
and
lea
cwtl
pushf
inc
push
movsb
jg
cmp
fldt
xor
mov
jno
daa
pop
xorb
jo,pt
inc
xchg
mov
das
rcrb
jae
ret
stos
loop
lret
pop
adc
setnp
dec
inc
jge
leave
and
int3
iret
dec
loopne
outsb
or
sub
mov
repz
push
out
cli
std
popf
lea
and
cli
push
dec
ss
aas
sbb
dec
pop
mov
mov
xor
into
push
inc
gs
or
jmp
inc
aaa
mov
loop
repz
loop
and
fmuls
inc
mov
add
jge
mov
movsb
test
xor
xchg
loop
mov
jb
repz
and
dec
push
cmp
or
mov
jmp
adc
dec
mov
cmp
in
dec
sub
andl
sub
fmul
inc
stos
cmpsl
jg
sbb
sub
inc
icebp
jae
add
sub
out
jbe
mov
data16
or
aam
das
imul
sysexit
call
add
cmpl
mov
push
je
and
and
add
mov
or
subb
mov
xor
adc
lods
inc
jae
push
add
jnp
sbb
add
inc
xchg
call
imul
lcall
dec
adc
pop
ss
xchg
fwait
lock
cli
insl
push
stc
mov
sbb
dec
out
not
pop
adc
sub
test
popa
jmp
out
cli
jp
insl
insl
push
int3
jno
mov
repz
orb
mov
sahf
insl
aas
in
sub
xchg
leave
lea
push
mov
inc
mov
test
lcall
adc
adc
enter
push
stos
lahf
mov
xlat
loope
inc
adc
sbb
push
cmp
insl
ljmp
imul
iret
cltd
inc
mov
lcall
xor
lcall
sub
les
lahf
or
and
xlat
lret
test
pop
fsubrs
test
push
shll
cs
sub
jmp
sti
mov
jle
movsl
mov
nop
push
movsb
lods
push
dec
sub
sbb
out
or
mov
xlat
or
ja
and
in
ret
mov
mov
imul
bound
mov
outsb
add
cltd
enter
adc
popa
rolb
push
add
pop
or
cmp
loop
cmpl
push
or
pop
add
pushf
stos
ret
lds
pop
ror
mov
scas
es
loopne
mov
push
ds
fisubrs
push
jne
les
fisttpll
int
lds
pusha
ss
cmp
jmp
and
add
xchg
xchg
mov
in
fs
jg
ret
xor
inc
ljmp
inc
faddl
jb
mov
leave
mov
adc
pop
ret
mov
repnz
out
aam
xor
in
scas
dec
ja
mov
and
fdecstp
ds
arpl
pop
adc
movsb
sbb
mov
inc
fbstp
cltd
data16
inc
imul
gs
sbb
cs
rcrl
cmp
dec
and
jmp
out
inc
repnz
add
add
sub
adc
iret
or
repnz
push
aam
cmp
fstpt
mov
jno
xchg
xor
mov
test
push
fstps
xchg
cmp
pop
jg
test
mov
lret
fldcw
sub
loop
xchg
inc
leave
in
jmp
cmpsb
outsb
stos
aam
pushf
sub
pop
mov
push
aam
jg
jno
dec
push
cmpb
ljmp
and
sbb
add
enter
xlat
cmp
sub
lods
stos
int
mov
aaa
pop
outsb
or
fidivrl
fs
stos
cwtl
pop
test
adc
cld
pop
jg
jge
push
or
or
push
mov
mov
adcb
and
pop
loope
loope
int
movsl
or
xchg
mov
jl
xchg
dec
fidivl
jo
in
aam
sub
roll
add
xchg
lock
xchg
pop
mov
add
shrl
xlat
cmc
push
or
icebp
sub
outsb
sub
mov
cs
mov
pop
ficomps
repnz
out
popa
mov
lret
fisttps
mov
jge
fld
or
gs
icebp
jl
mov
mov
xor
sub
xchg
push
divl
inc
int3
sarl
cmp
cld
into
cmpsl
push
testl
into
stos
and
mov
ljmp
mov
xchg
mov
mov
mov
mov
xor
push
mov
das
and
push
lahf
ds
xchg
adc
pop
jbe
test
ds
int3
inc
notb
insb
jno
mov
cli
inc
sbb
xchg
scas
mov
jne
outsl
out
mov
imul
cmp
jae
mov
add
inc
xchg
jnp
jae
ror
or
mov
cmp
nop
imul
cwtl
fdivs
xchg
outsl
or
das
out
lret
lcall
pop
and
sbbb
push
test
mov
push
jle
adc
cmp
dec
ljmp
and
les
sbb
pushf
push
outsl
or
inc
xorl
cmp
dec
sbb
dec
and
sbb
add
fs
test
cltd
in
outsb
in
in
xor
je
popa
mov
in
pop
imul
rorb
add
mov
pop
mov
xor
pop
mov
arpl
jmp
sti
cli
mov
lds
popf
push
out
jmp
push
xor
fbld
mov
lods
lret
xor
pop
jmp
mov
mov
int
setnp
jg
mov
jle
incl
add
push
int
mov
fcompl
lahf
jmp
outsl
xlat
jle
mov
dec
push
mov
pop
shll
xchg
mov
pushf
sub
in
std
adc
push
test
imul
push
lret
insb
pop
pop
rcl
add
mov
outsl
rcll
xlat
sbb
incl
jmp
lods
mov
dec
jge
mov
sbb
dec
jno
and
std
add
xchg
sub
xchg
add
add
popf
add
shlb
push
cmp
push
fmull
lods
rcll
mov
and
daa
out
repz
cmp
sub
cmp
daa
pop
and
push
or
add
ror
loope
sbbl
stc
adc
mov
vunpcklpd
cld
iret
add
icebp
int
sub
inc
repnz
ss
add
aaa
lock
rcll
ret
inc
jle
sbb
test
sub
fcomps
fsts
adc
in
xor
sbbl
pop
mov
test
imul
and
insl
xlat
into
data16
sbb
mov
dec
mov
mov
clc
inc
fiaddl
ljmp
out
xchg
xor
adc
xchg
aam
mov
das
adc
nop
push
jne
pop
inc
lea
pushf
int3
stos
cld
jecxz
add
xor
xchg
pop
bnd
rcl
dec
scas
in
cmp
inc
cmp
loope
sti
adc
adc
cwtl
ds
mov
push
insb
stos
movsb
sbb
push
push
ja
loope
lea
lods
aam
ret
adc
cltd
dec
inc
aad
das
push
push
fildl
nop
mov
dec
cmp
add
pop
xchg
popa
mov
rcr
mov
push
mov
repnz
mov
ds
add
stc
inc
popf
in
mov
jmp
test
xchg
gs
std
jle
aam
rcrl
lret
sub
xor
xor
insl
enter
ss
shr
xchg
dec
or
xchg
xchg
mov
pop
js
jne
mov
pop
popa
mov
stos
sub
push
jge
xor
cmc
mov
lret
dec
addb
mov
xchg
inc
mov
clc
ficompl
cmc
and
shrl
xor
and
cmp
xchg
push
xor
jns
test
int
popf
iret
pop
movsl
in
popa
popa
jmp
repz
sbb
mov
daa
push
sbb
or
cmp
jno
cwtl
cmpsb
imul
sub
xor
cld
outsb
lahf
mulb
in
incb
inc
and
fwait
int3
scas
adc
pop
mov
dec
pusha
es
lea
sub
lods
mov
jg
sub
mov
jae
inc
mov
sti
cmpsl
sub
ror
xor
push
mov
mov
inc
cmp
mov
push
jl
add
cmp
lds
and
lods
gs
call
dec
sub
add
mov
les
imul
mov
cmovbe
xor
add
test
incb
or
scas
push
dec
xchg
cmpl
adc
sub
dec
in
push
mov
call
and
and
pop
or
pop
in
loope
lahf
hlt
push
cwtl
inc
div
cmpsb
xor
xor
xchg
jle
push
jmp
loopne
mov
dec
out
popa
add
pop
add
ret
div
sbb
xor
xchg
sbb
xor
push
fwait
adc
movsl
or
lock
scas
xchg
sub
out
cmpsl
aam
sub
xchg
aaa
aam
adc
fucomi
fmul
cli
shll
pushf
outsb
xor
jg
aad
mov
mov
push
je
dec
mov
scas
sar
test
mov
jne
push
push
sub
or
adcb
xchg
pop
enter
add
std
or
or
dec
xchg
das
add
fs
cwtl
in
xchg
out
or
imul
cmc
ss
mov
call
mov
xor
shll
icebp
sbb
push
and
ret
cmpsl
ss
mov
bound
pop
insb
hlt
lock
inc
daa
test
adc
push
lds
xor
xchg
jns
add
add
add
test
and
push
pop
pusha
pop
xchg
rol
scas
in
add
jno
into
idiv
mov
mov
jmp
divl
pop
sbb
mov
dec
jl
addr16
add
cmc
lret
mov
js
inc
jecxz
push
divl
sbb
cs
ss
ror
sub
mov
outsl
shlb
arpl
jae
xor
mov
insl
fimuls
mov
aad
and
jecxz
dec
mov
dec
scas
jno
dec
ret
scas
pushl
mov
popf
ja
xchg
mov
fbstp
mov
adc
hlt
xchg
mov
add
push
xlat
icebp
or
adc
sub
mov
std
cli
ret
push
mov
mov
cmp
jnp
jp
lret
mov
int
pop
test
inc
leave
push
test
jecxz
notb
test
dec
ror
negl
mov
lea
jecxz
insl
adc
cmp
add
push
push
mov
xor
test
testb
pop
push
xchg
jno
mov
test
pusha
fistpll
fisubs
fisubrs
je
sub
cmpsl
xchg
data16
pop
lret
jle
mov
call
ds
push
jne
in
lea
cmp
fdivrs
mov
stc
dec
sbb
pop
mov
cs
nop
bound
into
enter
adc
sbb
nop
adc
mov
les
das
add
sub
mov
xor
popl
dec
sub
ds
scas
push
xor
mov
cmp
mov
add
outsl
movsl
jnp
xchg
pop
mov
lock
aad
xor
mov
std
dec
std
push
add
inc
sbb
sbb
arpl
repnz
mov
push
mov
in
add
adc
fisubl
addr16
inc
inc
mov
push
loope
jmp
fistl
std
scas
mov
js
dec
sub
adc
jns
stc
inc
gs
xor
xor
jmp
lahf
loopne
test
dec
out
pop
por
shll
enter
popf
mov
pop
jle
push
push
stos
das
outsl
out
popf
pop
mov
pop
and
mov
pop
jne
iret
sti
jl
adc
add
aam
fsts
sbb
sub
mov
or
push
jg
cmp
inc
add
xlat
loop
fistpl
rolb
stos
insb
cmova
insb
stos
stos
inc
push
orl
call
lock
dec
scas
push
add
dec
fsubl
shl
inc
cmp
adc
cmp
mov
and
mov
adc
dec
push
loop
xchg
test
pop
cmp
pop
mov
add
mov
dec
push
into
adc
call
pop
sbb
mov
pop
or
mov
xchg
pop
dec
in
aam
mov
pop
sahf
test
in
jp
push
xor
mov
mov
test
ret
xchg
out
or
adc
and
and
stc
ds
add
pushw
mov
jle
insl
ret
jmp
in
inc
add
pushf
or
xor
fnstsw
jmp
add
sbb
outsl
cmp
inc
sub
rcrl
xlat
xor
cli
lock
imul
inc
dec
dec
psubb
shll
sbb
ljmp
adc
xlat
ror
push
xchg
gs
call
scas
xchg
enter
jbe
pusha
test
mov
inc
inc
addb
dec
inc
pop
xlat
cs
sub
ljmp
mov
jmp
inc
sbb
cltd
lahf
pop
jb
add
insb
ds
call
sbb
lods
mov
inc
lods
pusha
cmp
xchg
mov
in
lods
or
add
push
pop
xor
push
jne
sbb
xor
fisubrl
cmp
adc
into
insb
jb
pop
push
fmulp
js
push
inc
add
or
cld
dec
cmp
imul
loope
xchg
inc
ret
inc
ficomps
loop
push
pop
mov
fsts
mov
cmp
add
add
ret
inc
and
cmpl
adc
adc
hlt
ljmp
sub
pop
out
test
lret
add
inc
mov
cmp
xchg
shlb
shr
push
and
cmp
inc
subl
iret
jge
and
test
mov
mov
mov
loopne
mov
or
movsb
test
in
test
push
test
add
or
push
mov
inc
mov
xor
sub
jge
mov
mov
jle
push
test
or
jns
lock
add
repnz
mov
jne
out
mov
lret
mov
sbb
aam
adc
aam
xor
pusha
cmp
cmpsb
jmp
mov
add
mov
mov
push
inc
push
mov
cltd
add
xchg
cmp
lret
cld
stc
sub
dec
mov
mov
add
mov
sub
xchg
test
cmpsb
out
sbb
dec
into
adc
popa
scas
push
test
pop
push
insl
and
mov
loope
rcrl
daa
jns
lret
movsl
xor
inc
rcrb
das
gs
push
ficomps
cs
fidivrl
cmc
hlt
rcll
sbb
call
imul
loope
addb
pop
inc
movsl
adc
inc
mov
inc
adc
mov
leave
add
imul
pusha
xor
add
mov
push
mov
stc
pop
adc
sub
pusha
lock
pop
jno
fdivr
into
mov
aas
pop
out
cmp
pop
cmp
mov
jae
ss
repz
jmp
arpl
jl
mov
add
xchg
adc
xor
repz
pop
dec
lret
push
mov
repz
mov
cmp
xchg
push
sub
enter
sbb
and
sub
pop
and
xor
test
push
mov
xor
mov
lret
and
repz
lods
jmp
sbb
inc
cmp
mov
add
in
movsb
inc
scas
xchg
jp
mov
add
leave
push
sbb
jne
cld
and
sub
xchg
cmpsl
sbb
xor
xchg
xchg
jno
dec
jp
shlb
imul
and
loopne
push
aam
cmp
mov
in
mov
jae
mov
dec
xlat
sti
pop
adc
inc
inc
mov
mov
mov
jae
jae
test
sbb
lahf
jnp,pt
mov
cld
loop
and
mov
mov
fdivrs
mov
pop
adc
or
imul
test
icebp
test
sub
sub
icebp
movsb
aaa
fnstenv
inc
jmp
iret
fldcw
adc
and
push
fiadds
pop
ret
lcall
sub
push
fidivrl
mov
add
in
popf
test
and
sub
into
mov
sarl
jl
leave
xchg
jns
add
add
or
in
mov
sti
dec
and
mov
fbstp
adc
mov
xor
or
dec
gs
xor
lods
popf
cmp
dec
jmp
mov
enter
jb
xchg
aaa
mov
sub
mov
pop
shr
inc
fsubrl
bound
lock
outsb
xor
std
mov
cmp
sub
jne
icebp
imul
mov
adc
shll
xchg
add
rolb
push
idivb
notb
sub
xchg
dec
lret
xchg
pop
mov
les
jnp
andb
push
dec
pop
hlt
js
xchg
jae
rorl
inc
outsb
lret
push
int3
xchg
daa
sub
sbb
sbb
int3
nop
pushf
insl
cmpsb
rcr
fidivl
jge
test
add
pop
push
fidivl
dec
jb
or
clc
pop
xor
push
dec
int
and
inc
jae
out
popf
or
aad
fimull
sbb
shll
lret
mov
dec
push
lock
arpl
mov
or
lods
jae
push
pusha
fldcw
adc
add
sub
mov
inc
loope
xorb
or
mov
add
pop
pop
fs
add
jns
pop
jne
aaa
sub
shrb
inc
loope
mov
pop
dec
or
data16
nop
sub
sbb
mov
cltd
xchg
fwait
and
xlat
dec
popa
and
addr16
add
int3
adc
insl
push
jns
fiaddl
inc
arpl
std
sbb
loope
inc
mov
add
pop
rsqrtps
inc
hlt
data16
adc
sbb
movsl
jo
dec
mov
dec
into
xor
jle
roll
add
add
mov
fistpll
cmp
mov
push
ljmp
mov
xor
nop
cli
jb
mov
sbb
popa
aad
pop
cmp
imul
lret
in
cwtl
stos
inc
mov
cwtl
sahf
popa
add
repz
dec
cmp
inc
xchg
ss
aam
jp
lret
jmp
repnz
loop
lret
jne
sbb
jnp
lods
scas
mov
enter
lock
add
add
dec
cmp
add
pop
pop
lret
pusha
sahf
pop
mov
sub
outsb
push
mov
jp
sbb
lea
hlt
out
rorb
aas
xor
lret
cltd
cmp
pop
shll
