push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
xor
nop
nop
lea
nop
mov
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
pop
jmp
push
jmp
sub
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
nop
lea
nop
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
call
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
jmp
int3
jmp
mov
jmp
lods
nop
nop
lea
nop
rol
nop
xchg
lea
xchg
lods
nop
xchg
lea
xchg
rol
nop
xchg
lea
xchg
pop
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
dec
nop
xchg
lea
xchg
nop
jmp
push
jmp
add
jmp
mov
nop
xchg
lea
xchg
and
nop
xchg
lea
xchg
mov
jmp
lea
jmp
push
add
pop
nop
nop
lea
nop
inc
nop
xchg
lea
xchg
je
nop
xchg
lea
xchg
sub
nop
nop
lea
nop
add
sub
nop
xchg
lea
xchg
jmp
nop
xchg
lea
xchg
add
nop
xchg
lea
xchg
movl
nop
xchg
lea
xchg
sub
nop
xchg
lea
xchg
lea
nop
xchg
lea
xchg
lea
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
jmp
add
jmp
push
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
add
jmp
pop
jmp
mov
nop
xchg
lea
xchg
nop
nop
xchg
lea
xchg
lea
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
inc
jmp
pop
jmp
addl
nop
xchg
lea
xchg
decb
nop
xchg
lea
xchg
inc
nop
nop
lea
nop
inc
nop
xchg
lea
xchg
push
nop
nop
lea
nop
addl
nop
nop
lea
nop
push
nop
xchg
lea
xchg
addl
nop
nop
lea
nop
mov
nop
xchg
lea
xchg
push
jmp
mov
jmp
add
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
lea
jmp
call
jmp
push
nop
xchg
lea
xchg
nop
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
call
nop
xchg
lea
xchg
movzbl
nop
xchg
lea
xchg
nop
nop
xchg
lea
xchg
nop
nop
xchg
lea
xchg
sub
nop
xchg
lea
xchg
jne
nop
xchg
lea
xchg
jmp
add
ljmp
jmp
nop
nop
nop
lea
nop
nop
jmp
pop
jmp
nop
nop
xchg
lea
xchg
nop
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
subl
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
mov
nop
nop
lea
nop
mov
nop
nop
lea
nop
pop
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
pushl
nop
xchg
lea
xchg
pushl
jmp
nop
jmp
movl
jmp
nop
jmp
pop
nop
xchg
lea
xchg
pop
jmp
pop
jmp
pop
jmp
push
jmp
add
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
add
nop
xchg
lea
xchg
mov
nop
nop
lea
nop
xor
nop
nop
lea
nop
sub
nop
xchg
lea
xchg
mov
jmp
call
jmp
mov
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
sub
nop
xchg
lea
xchg
cmp
nop
xchg
lea
xchg
jb
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
lea
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
xor
jmp
jbe
jmp
shr
jmp
push
nop
xchg
lea
xchg
movzbl
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
movzbl
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
push
add
pop
nop
xchg
lea
xchg
push
add
pop
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
nop
nop
xchg
lea
xchg
sub
nop
xchg
lea
xchg
mov
nop
nop
lea
nop
cmp
nop
xchg
lea
xchg
jb
nop
xchg
lea
xchg
xor
jmp
pop
jmp
mov
nop
xchg
lea
xchg
inc
nop
xchg
lea
xchg
lea
nop
xchg
lea
xchg
sub
nop
xchg
lea
xchg
movb
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
cmp
nop
xchg
lea
xchg
jb
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
pop
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
test
jmp
lea
jmp
add
sub
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
nop
nop
xchg
lea
xchg
push
add
pop
nop
xchg
lea
xchg
xor
jmp
inc
jmp
mov
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
lea
nop
xchg
lea
xchg
mov
jmp
neg
jmp
shr
jmp
mov
jmp
add
nop
nop
lea
nop
cmovne
nop
xchg
lea
xchg
shl
nop
xchg
lea
xchg
add
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
inc
nop
xchg
lea
xchg
dec
nop
xchg
lea
xchg
jne
nop
xchg
lea
xchg
pop
nop
xchg
lea
xchg
pop
nop
xchg
lea
xchg
pop
jmp
nop
nop
nop
add
jmp
nop
jmp
add
jmp
pop
jmp
ret
nop
xchg
lea
xchg
mov
jmp
xor
jmp
mov
nop
xchg
lea
xchg
shl
nop
nop
lea
nop
mov
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
pushl
nop
xchg
lea
xchg
push
nop
xchg
lea
xchg
xor
nop
nop
lea
nop
nop
nop
xchg
lea
xchg
mov
jmp
nop
nop
nop
add
jmp
cmp
nop
xchg
lea
xchg
je
nop
xchg
lea
xchg
sub
nop
xchg
lea
xchg
sub
nop
xchg
lea
xchg
jmp
nop
xchg
lea
xchg
xor
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
lea
nop
xchg
lea
xchg
lea
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
mov
nop
xchg
lea
xchg
lea
nop
xchg
lea
xchg
add
nop
xchg
lea
xchg
mov
jmp
mov
jmp
ret
nop
xchg
lea
xchg
push
nop
nop
lea
nop
mov
nop
xchg
lea
xchg
pop
nop
xchg
lea
xchg
ret
add
movsl
repz
arpl
or
mov
dec
mov
in
addr16
adc
push
sbb
sbb
jns
test
cmp
xlat
sar
aas
fcmove
rolb
inc
adc
xor
daa
and
pusha
push
out
popf
insb
movsl
mov
push
out
add
mov
cmpsl
push
es
or
out
dec
out
pusha
call
sub
fwait
and
push
out
out
enter
lods
cmp
hlt
sub
xchg
or
rolb
imulb
add
cli
jle
or
stos
stos
pmulhuw
in
fadds
daa
and
mov
pop
inc
shl
inc
jno
jno
xchg
cmpl
lret
xor
lds
inc
sub
ror
jns
adc
mov
xor
push
mov
pushf
add
xchg
fnstcw
and
les
or
inc
xchg
push
xor
jmp
mov
divl
and
dec
mov
mov
repnz
push
loopne
sub
testb
out
adc
ret
push
sub
xor
xchg
dec
test
jnp
imul
or
cs
or
mov
xor
lods
pop
rorb
xor
and
cmp
xchg
insl
jb
mov
movsl
addr16
sub
fwait
wbinvd
xor
cmc
mov
inc
sbb
nop
pop
mov
xchg
repnz
sti
sub
js
adc
mov
cmpb
sarl
sahf
outsb
flds
dec
iret
adc
aam
or
movsl
out
push
cmp
loop
adc
fnstcw
dec
push
adc
cwtl
clc
cltd
stos
ret
dec
xor
sbb
lret
mov
or
adc
shl
in
adc
cwtl
pop
dec
pop
rclb
mov
or
sbb
inc
adc
das
adc
cltd
adc
in
xchg
scas
in
sub
test
push
adc
test
sub
add
push
jb
mov
std
dec
dec
jns
jecxz
or
or
ja
cmp
mov
xchg
push
lcall
xlat
gs
data16
push
js
fucomi
pop
call
or
mov
ret
pop
inc
mov
jo
jb
jecxz
xorb
dec
pop
test
aaa
imul
mov
out
inc
cld
dec
pop
cmpl
push
jecxz
jne
fucomp
xchg
aam
mov
xchg
jmp
mov
in
jb
pop
das
aam
les
repnz
mov
xor
xchg
nop
cld
repz
and
sub
xor
movsb
insb
push
push
cmp
in
pop
jge
jp
out
mov
mov
adc
fistps
mov
hlt
jg
and
aas
loop
sbbl
push
neg
mov
xor
cli
push
js
add
lgdtl
addb
in
je
sub
lods
cmpsl
and
adc
and
adc
inc
jo
scas
call
cmp
outsl
cli
adcl
dec
jle
psubsb
add
mov
incb
js
out
jns
dec
cmpsl
xor
es
cmp
xor
fdivrl
mov
rep
rclb
ret
loopne
mov
cli
imul
icebp
mov
inc
mov
dec
cli
lcall
enter
xorb
mov
hlt
inc
in
addl
