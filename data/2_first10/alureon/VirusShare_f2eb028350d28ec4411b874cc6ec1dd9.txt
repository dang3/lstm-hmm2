jge
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
dec
adc
add
add
jo
add
test
add
pushf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
add
adcb
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
add
inc
dec
js
sbb
pop
les
jmp
and
pop
rsqrtps
cmp
lds
or
rolb
add
jmp
mov
mov
rcl
mov
stc
int3
in
repnz
pushf
and
int
sti
xchg
xchg
cmp
daa
add
mov
cmpsb
fwait
lcall
jo
enter
dec
mov
fbstp
pop
lret
mov
adc
lret
in
mov
push
add
clc
lahf
sti
or
fnstsw
sub
filds
lahf
xchg
ret
pop
adc
jbe
xor
jb
repnz
addl
lods
sbb
sarl
ret
mov
xchg
outsl
mov
lahf
or
push
jnp
jl
stos
mov
fadds
std
mov
call
or
dec
dec
push
adc
dec
aam
lret
mov
imul
leave
or
movsl
std
or
daa
pop
les
fidivrs
or
and
lcall
mov
stos
sub
inc
push
pop
nop
mov
cmp
dec
jle
call
mov
and
pop
push
sub
xorl
stos
inc
movsl
mov
test
sub
daa
std
xchg
cmp
cmpsl
pusha
jns
mov
test
fdivr
lock
cmp
call
movsb
fcmovu
add
pop
dec
lahf
rcll
cltd
insl
inc
mov
shrb
pop
cld
aam
cwtl
repnz
add
andb
xchg
lods
repnz
mov
sub
mov
cld
add
xchg
jb
scas
std
adc
sarb
cmp
add
fisubrs
mov
icebp
pop
out
mov
push
ljmp
inc
js
mov
xchg
xor
cmp
xor
out
loop
cmp
dec
arpl
lds
xchg
or
cmp
cwtl
cmp
and
jae
bound
icebp
imul
hlt
popf
push
popf
mov
inc
xor
mov
push
adc
out
test
jnp
add
in
js
push
stc
js
sbb
data16
dec
jbe
or
in
lcall
outsl
adc
add
jecxz
lea
and
nop
fcoml
cmpl
jge
cwtl
lea
lods
or
xor
push
xor
jno
fldz
sub
fwait
sub
or
jnp
cwtl
addr16
in
adc
dec
test
arpl
and
ret
sti
scas
mov
mov
push
sahf
shrl
ret
je
or
add
mov
jns
push
and
lcall
mov
push
jbe
sub
mull
mov
mov
adcl
insl
mov
addr16
bound
mov
xchg
aaa
and
scas
imul
cmp
pop
cmp
sub
sub
push
push
out
pop
loopne
std
cmp
sub
pop
lock
cmpsl
lret
pop
and
shll
mov
in
adc
aad
daa
pushf
fs
lods
jnp
sti
rcr
fimull
mov
lds
loop
out
sbb
mov
in
xchg
sub
jmp
add
cmp
mov
add
shl
sahf
push
std
ror
xchg
rorb
pop
mov
daa
loop
mov
sahf
jp
lret
dec
push
shll
mov
addr16
sbb
insb
aam
adc
and
arpl
es
xchg
addr16
or
or
mov
and
mov
ret
flds
test
add
pop
lahf
mov
dec
shrl
mov
addr16
rcrl
je
cltd
clc
sub
or
jmp
or
mov
lret
cmc
arpl
jmp
adc
pusha
loop
loop
push
push
sbb
xchg
ss
test
fistpl
rcrb
test
sarl
popf
add
fldcw
push
mov
sub
or
call
movswl
lea
call
lea
push
add
call
movswl
add
lea
mov
dec
movswl
call
mov
dec
mov
inc
inc
mov
imul
dec
dec
inc
dec
mov
inc
call
inc
add
mov
sub
call
lea
dec
call
sub
movzbl
add
imul
movzwl
and
lea
mov
mov
pop
add
mov
mov
add
inc
pop
dec
sub
pop
add
xor
dec
mov
pop
movswl
inc
mov
add
xor
movswl
sub
and
pop
add
mov
pop
imul
sub
mov
inc
movzwl
call
inc
lea
or
mov
ret
movsbl
mov
push
lea
add
push
inc
push
mov
inc
push
movzwl
inc
push
sub
imul
mov
dec
push
add
ret
push
mov
movsbl
imul
dec
dec
lea
dec
push
mov
dec
push
dec
call
pop
ret
jmp
inc
xchg
add
mov
lea
lea
xor
and
sub
mov
mov
inc
dec
mov
dec
jne
imul
mov
mov
sub
pop
mov
or
pop
add
inc
pop
inc
imul
dec
dec
dec
or
imul
dec
lea
and
mov
add
ret
push
mov
inc
add
dec
and
dec
dec
movzwl
push
push
push
push
dec
dec
xor
push
lea
inc
and
dec
mov
lea
movzbl
and
dec
mov
add
push
sub
lea
xor
add
inc
push
mov
dec
push
mov
lea
pushl
add
call
imul
add
mov
mov
inc
xor
add
mov
mov
pop
ret
mov
inc
mov
inc
inc
inc
add
add
add
mov
add
sub
cmp
jb
xor
mov
movzwl
add
xor
add
inc
xor
add
or
pop
dec
lea
test
jbe
lea
inc
movzwl
inc
mov
sub
inc
add
mov
imul
add
mov
or
sub
add
mov
sub
inc
mov
inc
dec
imul
inc
add
and
mov
mov
mov
inc
add
movzbl
lea
lea
add
lea
lea
and
dec
xor
mov
add
mov
mov
lea
movzbl
mov
movswl
imul
mov
sub
add
lea
inc
lea
dec
jne
movswl
mov
imul
mov
lea
inc
lea
xor
movsbl
add
inc
sub
mov
and
inc
inc
xor
movsbl
inc
mov
xor
mov
inc
movsbl
test
jbe
mov
mov
mov
inc
inc
add
inc
dec
mov
mov
add
movswl
or
mov
and
inc
add
lea
dec
dec
mov
mov
and
add
dec
mov
mov
dec
movzbl
sub
dec
add
mov
add
and
add
mov
mov
dec
or
movzbl
sub
sub
mov
mov
mov
mov
dec
add
movzbl
mov
sub
add
sub
inc
and
imul
inc
movzbl
dec
jmp
push
call
dec
xor
mov
inc
xor
and
mov
inc
mov
mov
inc
or
imul
xor
add
xor
mov
inc
shl
dec
lea
xor
add
lea
push
add
mov
mov
call
dec
pop
inc
movsbl
xor
dec
inc
and
inc
dec
cmp
je
call
call
mov
iret
add
movzwl
pop
add
ret
push
lea
mov
inc
dec
sub
push
inc
mov
push
and
push
mov
push
sub
and
push
inc
dec
lea
lea
inc
call
dec
push
dec
push
mov
pop
mov
mov
mov
lea
dec
mov
dec
sub
inc
and
mov
dec
je
mov
sub
sub
xor
mov
inc
sub
mov
inc
mov
dec
inc
mov
mov
inc
mov
movswl
repnz
dec
add
add
inc
jmp
dec
dec
sub
mov
sub
dec
mov
imul
mov
lea
add
mov
add
inc
mov
inc
pop
pop
jmp
ret
push
sub
xor
mov
dec
lea
lea
sub
dec
mov
mov
mov
inc
dec
mov
inc
add
and
sub
dec
or
dec
dec
mov
mov
sub
inc
and
pop
ret
sub
mov
mov
sub
mov
mov
movswl
dec
mov
add
inc
mov
mov
dec
xor
inc
inc
mov
inc
inc
inc
dec
imul
xor
lea
dec
dec
cmp
jb
inc
push
sub
movzbl
push
inc
mov
push
mov
lea
mov
add
sub
xor
mov
dec
xor
lea
imul
xor
imul
dec
push
or
mov
xor
inc
dec
mov
lea
and
mov
inc
inc
movzbl
dec
lea
add
imul
and
add
inc
lea
movzbl
and
inc
dec
dec
mov
imul
mov
mov
inc
movzbl
lea
mov
sub
dec
dec
mov
movswl
mov
cmp
jb
movzwl
xor
inc
sub
mov
jmp
xor
repnz
or
mov
in
je
cli
mov
jns
iret
jmp
adc
scas
pop
adc
mov
lea
and
inc
icebp
mov
add
leave
shlb
pushl
adcb
mov
dec
frstor
or
sub
icebp
gs
lret
bnd
or
mov
dec
adc
dec
push
lods
mov
and
adc
push
inc
int
inc
or
push
adc
add
jns
xlat
mov
cmp
insb
cmp
lock
jl
fcmovb
push
insl
push
jne
jl
jge
fimull
xchg
or
fidivrs
aad
cmpsb
movl
and
nop
mov
adc
in
mov
rolb
xor
mov
push
cs
lcall
lods
or
mov
mov
lods
dec
sbb
xchg
scas
sti
insl
or
into
int3
imul
mov
insl
fwait
add
cmp
adc
mov
xchg
fisttpll
cwtl
xor
test
fadd
popf
divl
enter
aaa
pop
outsl
nop
or
enter
mov
stos
test
push
pop
cmpsl
mov
adc
dec
adc
stos
dec
cmc
push
mov
fs
pop
addr16
mov
icebp
xchg
or
ficompl
dec
and
xacquire
loop
stos
adc
fists
and
mov
sbb
les
test
out
sbb
add
sbb
test
sub
ficomps
addr16
lods
movsl
push
push
dec
pmaxub
out
arpl
cmp
mov
out
leave
mov
mov
push
testl
inc
and
mov
jmp
cmp
mov
inc
sub
jg
ret
add
repnz
cmp
bound
inc
rorb
dec
std
push
mov
movsl
add
mov
push
mov
or
int
xchg
push
js
mov
xlat
inc
jecxz
stos
enter
ret
lret
mov
jmp
cmp
idivl
roll
jge
das
rolb
push
adc
sub
jge
mov
ja
aam
js
ljmp
decb
add
test
sbb
mov
push
sub
push
lods
jmp
adc
and
adc
sbb
shl
and
fiaddl
loopne
push
sti
sbb
push
mov
adc
fcomip
pushf
cmpsb
dec
mov
fcomi
cmp
std
adcl
adc
subl
xchg
jg
add
in
pop
daa
shl
test
jge
sub
es
fistl
out
jns
inc
repnz
adc
mov
movsb
lahf
inc
scas
adc
test
mov
dec
cmp
inc
imul
mov
cmp
les
and
mov
push
aaa
dec
daa
sbb
mov
mov
fldcw
push
popf
test
pushf
push
jo
shl
cs
xlat
xchg
cwtl
je
scas
loope
or
sti
mov
inc
jmp
int
or
cmp
stos
mov
xchg
xchg
stc
and
int3
push
jb
stos
push
push
xor
mov
xchg
xor
or
notl
jo
xor
cmp
sar
or
mov
sbb
jne
fldenv
sub
xchg
lods
mov
mov
push
adc
shlb
lods
xchg
cli
xchg
rcrl
jmp
dec
test
ror
add
push
cmc
outsl
aad
fisttpll
ret
jbe
push
aad
mov
aam
fdivrs
js
fwait
lds
dec
pop
repnz
arpl
xchg
xor
jb
mov
pop
scas
call
mov
repnz
mov
movsl
mov
scas
inc
dec
aad
jl
leave
xchg
pop
or
cli
add
vpshrdvq
outsb
xor
and
xchg
or
sub
xlat
jno
cld
dec
cmp
mov
adc
xor
pop
test
movsl
sahf
dec
add
cmpsb
loope,pn
shll
inc
inc
scas
jns
hlt
push
pop
icebp
filds
loope
xchg
lods
cmpsb
dec
or
adcl
mov
shr
clc
push
movsb
fisubl
mov
sbb
scas
enter
cmp
sbb
xor
lods
mov
push
xor
jno
mov
insl
xor
add
insl
insl
mov
mov
int3
mov
mov
aam
stos
mov
aam
popa
pop
jnp
js
dec
cmp
sbb
adc
lret
jne
jecxz
and
icebp
dec
popa
shr
scas
dec
adcl
lea
shlb
dec
xchg
cmpsl
fs
popf
icebp
cmc
pop
loope
cmp
jecxz
dec
js
cmp
lcall
sbb
dec
cmp
pop
sub
and
clc
movl
test
or
mov
loopne
adc
aad
daa
movsl
inc
and
cmpsl
adc
mov
add
sarb
and
stc
xor
pop
imul
stos
push
shr
loope
jne
cwtl
shlb
mov
xor
jmp
sub
fs
iret
or
popa
vunpcklps
int
mov
and
and
mov
fsubrs
lea
jg
pop
inc
dec
popa
adcb
lret
adc
nop
stos
or
iret
dec
sbbb
lcall
in
xchg
jg
orl
cwtl
pop
arpl
sub
push
xor
nop
push
mov
loope
mov
ret
loope
mov
jecxz
push
cmp
or
jnp
popf
or
or
sbb
add
xchg
lods
imul
and
jp
pop
nop
mov
pushf
sti
add
repnz
ds
fldcw
adc
mov
stc
loope
in
je
xlat
xchg
jmp
xchg
dec
xchg
sbbb
lret
scas
adc
bound
pushl
xchg
mov
nop
mov
nop
jge
jp
or
xlat
add
add
xor
mov
cltd
mov
daa
addb
aaa
daa
mov
and
lods
push
xor
sahf
nop
lock
or
xchg
rorl
imul
dec
das
addr16
lods
fcmovnu
ja
cmp
sbbl
aam
or
std
mov
inc
push
pop
js
push
mov
adc
jo
out
ret
and
mov
test
cltd
ja
inc
jne
repnz
xor
adcb
iret
fisttpl
int3
sub
imul
les
push
stos
or
ss
mov
pushf
stos
mov
outsb
sbb
mov
adc
jp
jg
ret
mov
ds
cmp
jle
leave
addr16
imul
popf
movsl
mov
mov
pushf
push
fs
rolb
leave
jecxz
jb
jecxz
add
adc
mov
addr16
sahf
in
lcall
sub
jge
ss
fildl
mov
cmp
cmp
jns
add
test
mov
ss
shll
and
pop
mov
dec
adc
add
sub
lahf
mov
lcall
cmp
jnp
xchg
stos
fildl
popa
aam
xchg
xorb
mov
loop
push
cmp
roll
pop
mov
cmp
cmpsl
jmp
je
push
in
dec
imul
insl
jnp
or
push
xchg
inc
xchg
push
mov
mov
push
jns
std
scas
dec
mov
test
shlb
mov
pop
add
cmc
xor
dec
add
mov
mov
insb
stos
adc
sub
das
sub
leave
sahf
cmp
ds
out
ret
lret
mov
test
push
sub
adc
stos
cmp
mov
xor
pop
aam
mov
push
iret
xor
adc
adc
arpl
imul
mov
pop
inc
incb
stos
push
inc
aaa
les
xchg
fucomi
ret
push
shrl
dec
xchg
jne
popf
outsb
mov
bound
or
testl
lahf
push
dec
xor
das
xrelease
sbb
sti
les
jg
sbb
imul
xchg
pusha
hlt
bound
lock
lods
mov
loope
out
sahf
out
xor
mov
ljmp
fistps
push
pop
lret
dec
arpl
fnsave
loopne
jns
data16
stos
pop
and
push
setle
xor
inc
fisubrs
lea
inc
int3
pop
sub
add
std
jne
or
mov
outsb
jbe
dec
mov
leave
mov
sub
mov
or
ds
jnp
mov
ja
mov
clc
pop
push
sbb
mov
xchg
mov
cmp
pop
sub
mov
cwtl
lds
pop
pop
adc
sbb
push
sbb
sbb
cmpsl
pop
fs
aaa
lahf
xor
jbe
sbb
int
mov
xchg
xchg
fldcw
adc
arpl
jle
addl
int
mov
mov
sahf
sbb
mov
mov
loope
cmp
insl
and
iret
or
aas
inc
call
sbb
and
push
jae
inc
mov
pusha
lock
in
sbb
leave
mov
hlt
data16
sbb
sbb
cld
movsl
cld
jae
aam
jb
sahf
sbb
sub
inc
iret
popf
sub
test
adc
mov
pop
fnstcw
or
int
sub
pop
aaa
dec
bound
lret
adc
mov
lods
cmc
mov
repz
pushf
fwait
mov
sbb
and
xchg
push
jl
push
scas
call
fdivrs
ret
fldl
es
pop
scas
inc
in
pop
not
stos
lock
mov
inc
sarb
mov
mov
insb
add
or
push
inc
pushl
add
and
ds
inc
xchg
sub
aaa
cmp
cmp
movsl
fnsave
lret
push
adc
sbb
cmpsb
inc
lcall
or
stc
test
pop
notrack
js
fadd
rorb
mov
sahf
mov
mov
mov
mov
sarb
lods
dec
adc
sbb
gs
push
lahf
push
cli
aaa
std
iret
xor
sub
sub
sbb
push
std
cmp
notb
scas
lock
cs
lods
jecxz
in
mov
rcl
test
leave
call
xor
sysret
out
fistps
popa
not
cmp
jno,pn
pop
add
adc
gs
jmp
shr
or
out
mov
mov
aad
mov
stc
inc
outsb
inc
faddl
mov
ret
stos
cmp
loopne
mov
hlt
jbe
imul
mov
adc
adc
bnd
orps
push
mov
mov
or
sbb
sub
cs
mov
pop
mov
and
push
mov
inc
pushl
lock
jl
jne
inc
lea
lret
mov
and
js
pop
push
adc
mov
jb
or
popa
xlat
cli
imul
ret
es
scas
push
in
aas
ds
das
fxch
and
mov
test
xor
jno
cmp
mov
adc
jmp
int3
xchg
mov
fucomp
or
test
shll
in
movaps
js
imul
inc
adc
adc
xchg
xor
pop
xlat
clc
inc
mov
cmpsb
xor
mov
cwtl
sub
imul
mov
or
jno
addb
rcll
aad
mov
cmpsl
jnp
pop
arpl
fwait
test
xchg
scas
lret
xor
sahf
push
inc
mov
scas
notl
in
mov
in
xchg
cwtl
andb
roll
sbb
add
rclb
mov
add
xchg
daa
add
mov
jno
gs
adc
ljmp
mov
sbb
push
push
jb
adc
shlb
lods
push
arpl
je
test
jo
cmp
xlat
xchg
adc
mov
dec
sub
mov
and
pop
cli
dec
stos
jg
xchg
popa
push
and
inc
mov
sub
pop
sub
pop
ficompl
or
in
in
or
mov
mov
popf
and
dec
loope
add
dec
ret
dec
mov
jbe
in
inc
or
sbb
repz
xor
inc
popf
push
jmp
popf
sahf
fcoml
lret
sub
in
xor
push
movsl
les
sub
aam
jno
dec
dec
push
cmp
inc
sub
cs
xchg
xchg
jp
xchg
adc
lahf
sbb
pop
mov
aaa
lcall
jmp
lods
stos
out
mov
sahf
adc
mov
sbb
xlat
or
bound
fs
mov
mov
and
add
popf
fstpt
push
pusha
lahf
aam
das
xchg
cmp
mov
stos
clc
mov
jmp
sub
jp
sbb
xchg
pop
and
ds
rcrb
adc
lods
je
mov
pop
int3
adc
inc
lcall
nop
hlt
loop
or
add
sbb
xlat
aas
out
sub
dec
out
xchg
push
andb
repnz
stos
inc
test
push
neg
push
add
mov
inc
cltd
add
loop
fdivrs
lds
ret
inc
nop
imul
mov
cmp
add
imul
jecxz
xchg
mov
adc
arpl
push
inc
aam
push
or
ret
xchg
xchg
mov
mov
pop
sub
ljmp
jp
loope
cmp
mov
cs
xlat
add
xor
addb
push
stos
adc
mov
add
xchg
adc
or
adc
jbe
int
cli
fdiv
and
xchg
js
mov
repz
sub
mov
out
pop
and
or
loope
or
loopne
xchg
insl
imul
int3
add
dec
sahf
aad
jno
or
test
mov
dec
movzbl
into
movsb
test
jno
testl
mov
sub
inc
add
cli
jp
sbb
rcll
loop
push
into
xchg
lret
push
xchg
cmc
push
mov
scas
pop
mov
loopne
in
add
sub
nop
dec
mov
clc
scas
and
add
adc
mov
inc
push
or
jb
in
cmp
movb
xchg
pop
clc
lods
lock
xchg
mov
fimuls
xchg
fcoml
cmp
mov
daa
mov
jbe
leave
cmp
mov
test
mov
dec
jg
jmp
mov
loopne
pop
ret
mov
adc
sub
fidivl
shrl
movsb
sbb
jae
and
sbb
loope
ret
fs
add
pop
add
stc
sub
push
out
pop
xor
inc
call
mov
fs
scas
pop
int
and
sub
icebp
cmpsl
insb
pusha
cmp
insl
inc
lret
pushf
lods
jle
fwait
js
pop
andb
scas
das
lahf
mov
or
jae
and
jnp
mov
scas
jbe
push
inc
nop
nop
xor
pop
lahf
jmp
orb
pop
std
stos
adc
loopne
test
xor
adc
mov
pop
xor
pop
inc
loope
mov
jns
push
jge,pt
cltd
cmp
jmp
imul
fs
xchg
inc
ljmp
adc
mov
pop
out
sbbl
imul
bound
sbb
mov
cmp
push
sbb
hlt
cmpsb
mov
shrl
jle
ret
mov
cli
sahf
inc
cmpl
and
fsubp
dec
arpl
inc
mov
mov
sti
push
aas
dec
jae
outsb
bound
jl
mov
aam
mov
pop
aam
les
mov
jae
and
mov
dec
hlt
or
dec
cld
bound
push
push
fbstp
sbbb
es
out
and
adc
or
push
xchg
xorb
faddl
lods
sub
lret
push
or
nop
loopne
push
jp
inc
ret
jns
sbb
jo
repz
mov
xor
pop
cmpsb
xchg
repz
daa
out
and
and
aam
or
mov
xchg
mov
push
push
mov
outsb
mull
sbb
addr16
and
jecxz
push
lods
jecxz
imul
jge
mov
lods
out
inc
ja
mov
shrb
add
daa
dec
loop
cli
cmp
incb
and
loope
xorl
out
leave
mov
push
mov
pop
mov
mov
or
xchg
cmp
cmp
lret
jns
cmp
mov
xchg
out
lahf
mul
fbstp
jg
mov
rcr
repz
lods
mov
dec
stos
inc
sub
sbb
cmpsl
ljmp
or
lea
xchg
mov
pop
pop
icebp
fcompl
cs
xchg
mov
rol
sbb
testl
stos
fists
fsubp
or
vmread
shlb
and
fsubrs
and
inc
scas
test
fnstcw
add
or
ss
xor
sbb
mov
sbb
or
xchg
fwait
cmp
xlat
lds
sbb
repz
mov
ja
xchg
repz
push
and
and
or
cs
mov
aam
and
inc
cld
test
mov
in
cwtl
mov
test
push
pop
std
mov
sub
pop
xchg
test
adc
loopne
imul
and
push
sbb
movsl
dec
addr16
sar
sbb
dec
scas
pop
cli
mov
ret
jmp
add
xor
push
sub
data16
les
aad
insl
xor
fisubrs
imul
addl
cmpl
test
notl
std
loop
cli
in
movsl
rolb
rcrb
outsl
and
aad
fs
out
ss
test
adc
cmp
mov
mov
pop
pop
push
je
add
sub
push
in
imul
js
icebp
add
cwtl
pop
cli
out
mov
pop
xor
pop
js
add
mov
mov
or
mov
test
pop
int3
mov
addl
xchg
popa
push
dec
lods
cltd
outsb
js
add
imul
mov
test
push
push
xchg
fldt
out
cld
inc
jecxz
insl
mov
filds
cmc
int
xor
sub
mov
mov
mov
in
pop
test
push
adcb
cmpl
mov
and
inc
leave
xchg
or
push
dec
xchg
out
scas
imul
pop
mov
jmp
mov
stc
mov
loopne
push
pop
fbstp
out
and
loopne
jns
in
cmpl
pop
or
sbb
cmpl
and
shrl
mov
xchg
js
jb
push
sub
push
cmpsb
insl
pop
imul
aam
sbb
jno
ret
inc
dec
xorl
jp
aaa
inc
stos
pop
cld
xlat
mov
jbe
push
sbb
roll
test
inc
and
mov
popf
add
cmp
movsl
negl
inc
push
push
mov
icebp
inc
mov
in
jae
arpl
mov
shll
test
adc
add
pop
fcompl
popa
outsl
sbb
push
insl
inc
pop
hlt
ja
mov
sarb
xchg
cmp
hlt
lret
js
inc
aam
jecxz
xchg
jne
int
push
add
sbb
push
divb
mov
insl
or
add
fidivl
fildll
mov
jns
adc
mov
dec
jge
mov
push
and
jmp
push
inc
insb
hlt
cld
dec
arpl
daa
hlt
mov
add
cltd
cmp
sbb
shlb
lock
js
mov
movsl
and
test
inc
push
and
pop
into
mov
maskmovq
idivl
cmc
int
insb
dec
push
frstor
sub
xor
fisubrl
or
aaa
fsubr
sub
stos
push
add
into
imul
scas
insb
and
xchg
dec
roll
mov
xor
movsl
lock
inc
lea
into
sbbl
fldl
jg
mov
mov
or
mov
pop
mov
test
push
inc
mov
sbbb
cltd
cs
dec
xchg
ja
mov
mov
xchg
fwait
inc
popa
xor
add
pop
xchg
cvtdq2ps
lret
mov
call
mov
dec
rclb
inc
ret
arpl
loopne
fsubs
aad
sub
push
imul
shll
or
pop
stc
inc
rcrb
loope
and
mov
jnp
aam
in
xchg
adc
lea
dec
xchg
outsl
sbb
in
add
mov
bound
add
add
incb
push
stc
adcl
pop
imul
fmuls
xchg
fcom
fwait
clc
sbb
cmp
jo
pusha
pop
jecxz
repnz
cmpsl
incb
add
dec
jo
stc
mov
adc
sub
sub
add
std
pop
push
inc
shr
cmp
imul
xor
rcll
or
rorb
mov
jp
jno
jo
clc
and
cld
lret
jbe
push
cmpsb
lea
fmulp
pusha
xchg
add
lock
mov
mov
fmul
jo
jnp
sbb
out
push
test
pop
jg
loopne
dec
cltd
xchg
popa
sub
mov
pop
adc
xchg
dec
dec
test
and
aam
xchg
scas
cwtl
and
sbb
insl
insb
adc
jnp
dec
je
sarl
aad
outsl
cltd
mov
jns
in
cld
test
mov
into
lods
aad
pop
xor
or
cmc
sbb
push
inc
sti
sub
xor
daa
notb
push
inc
jae
shrl
inc
push
icebp
mov
dec
jmp
shlb
nop
imul
push
lret
push
inc
aas
es
pop
cltd
in
sbb
imul
aad
aad
sbb
fcmovbe
push
into
shrl
testb
adc
adc
push
mov
stos
mov
inc
int3
icebp
fidivs
push
dec
add
aaa
call
xchg
call
adc
rorl
add
xchg
gs
lret
fnstcw
jg
sub
mov
xor
mov
adc
push
sti
push
je
xchg
mov
xchg
xchg
mov
jo
lods
add
dec
insl
call
dec
push
xchg
cmpsl
clc
push
cli
lock
test
movsb
in
or
int
lock
sub
jae
sbb
loop
inc
jl
inc
insb
ds
cmpsb
out
das
mov
add
fstpt
pop
inc
jno
shll
jg
dec
xchg
ja
aam
mov
xor
xchg
or
mov
cmpsb
js
dec
movsl
pop
sbbb
fwait
loopne
jg
fidivrl
inc
mov
pop
mov
push
stc
inc
sub
pushf
sbb
leave
sub
mov
test
mov
js
xor
sub
test
das
sub
mov
add
mov
push
shlb
push
sub
jecxz
jecxz
dec
sub
cmp
xchg
cmc
or
test
lcall
and
out
mov
fdiv
push
cmp
out
push
pop
data16
leave
sbb
out
mov
cwtl
xchg
mov
ss
pushf
js
mov
sahf
sahf
fists
xlat
dec
std
hlt
jle
cmp
enter
pop
dec
shll
mov
pop
inc
xchg
xchg
je
lds
lods
pop
out
cmpsb
and
dec
aam
push
jecxz
mov
pushf
sbb
aas
and
fisubl
jmp
shl
sbb
or
nop
push
dec
add
cmp
in
clc
and
jle
mov
jecxz
add
mov
js
adc
mov
mov
dec
cs
bound
fcoml
mov
sbb
sbb
ds
sbb
sahf
pop
jg
and
scas
add
xor
pusha
outsb
dec
imul
mov
loopne
shll
and
lods
test
dec
push
ja
sti
insl
dec
cli
cmc
icebp
xor
mov
add
jae
sub
push
mov
lods
push
outsb
jb
scas
dec
dec
sub
test
div
push
popf
inc
cld
jb
loop
xchg
cmp
and
sbb
xchg
lahf
jns
add
cmp
lods
mov
lods
iret
push
lahf
lods
repz
stc
dec
mov
push
clc
test
jmp
dec
sub
out
fwait
pop
shl
sbb
sub
nop
lods
add
xchg
addr16
sub
clc
adc
cmp
xchg
xor
pop
sbb
push
mov
sbb
repz
data16
cwtl
adc
pop
sbb
mov
sbb
out
sbb
dec
inc
or
jne
shll
push
add
cs
push
or
mov
int
js
cwtl
lret
movsb
pusha
cld
cmp
adc
rcll
sahf
shll
jbe
bound
sbb
out
push
jmp
lret
lods
jb
mov
lea
fcmovu
add
pusha
and
nop
or
jo
scas
xor
mov
pop
fdiv
out
pop
insb
sub
nop
int
mov
int
pop
lret
jl
mov
cmpl
jnp
mov
and
add
imul
sub
xchg
mov
cli
adc
stc
pop
mov
adc
mov
out
inc
loopne
push
pop
inc
in
mov
jmp
mov
or
adc
and
std
xchg
push
lahf
aam
mov
data16
fstps
cmpb
pop
jp
into
pop
xchg
inc
in
sti
pop
jne
sbb
frstor
pop
js
cmp
ret
add
rolb
rolb
or
out
ret
mov
movswl
mov
cmp
jae
gs
addr16
iret
daa
stc
rcrb
scas
pusha
adc
iret
fmul
jne
jno
inc
loopne
jmp
adc
ja
mov
subl
inc
pop
push
roll
xchg
cmp
adc
js
add
mov
mov
xchg
out
pop
add
lods
in
cmc
lock
jecxz
imulb
mov
stos
adcb
mov
lods
call
fwait
nop
xchg
sbb
xchg
fbld
adc
nop
mov
dec
fdivl
clc
pop
and
loope
sbb
mov
mov
dec
fstl
rcrb
mov
add
and
xchg
insb
scas
test
out
dec
das
stos
bts
and
xchg
jo
rorl
jnp
inc
cmp
std
xor
hlt
xor
scas
xchg
lods
inc
and
jle
fldl
jo
inc
enterw
xchg
fwait
sti
pusha
inc
sti
xchg
jo
fwait
adc
sahf
test
shlb
lret
test
out
pop
add
repz
add
ret
out
inc
push
int3
and
lds
jnp
add
mov
pop
pusha
and
pop
mov
xchg
dec
mov
and
iret
loopne
pusha
mov
setns
push
mov
dec
or
inc
pusha
xor
inc
xchg
ja
clc
push
and
out
cli
xor
xchg
inc
and
pop
dec
mov
fidivs
fxch
jg
addr16
xor
cmpsb
push
fdivs
scas
fwait
lock
jmp
mov
rorb
fldt
fildll
adc
pop
adc
enter
fiaddl
push
inc
xchg
lcall
mov
popf
fnsave
xlat
mov
add
seto
push
add
sarl
sbbb
adc
dec
mov
mov
jle
and
rcrb
in
aaa
mov
jmp
gs
sub
pop
shrl
dec
jbe
or
sub
lods
ja
lret
cmp
adcb
and
scas
lea
sub
mov
mov
inc
mov
xchg
mov
pop
jmp
sub
or
xor
push
xchg
xchg
je
outsl
das
lock
insb
shrl
mov
and
adc
adc
jne
add
xchg
mov
mov
mov
push
push
and
lcall
loop
mov
sbb
out
std
dec
clc
pop
shll
xor
sahf
jg
sbb
jbe
call
inc
xchg
mov
icebp
inc
and
sub
cli
shr
mov
cmpsl
in
popa
imul
imul
pushf
sbb
pushf
flds
pop
icebp
es
add
sbb
aam
xchg
push
mov
cvtps2pi
andb
sub
push
popa
add
imul
addr16
dec
icebp
fbld
out
clc
xor
mov
into
xchg
fchs
mov
and
dec
in
inc
jae
shlb
mov
mov
lret
mov
sahf
aam
outsb
into
mov
test
mov
nop
cltd
xchg
cmp
add
cs
xorb
aaa
stos
inc
push
rcrl
inc
divl
cmp
mov
xchg
cmpsb
mov
mov
add
sub
add
pop
fildll
jge
cmp
lret
lock
popf
jge
jne
inc
xchg
les
jmp
cld
pop
push
sub
and
hlt
mov
mov
mov
pop
inc
insb
iret
sub
xor
lods
aam
pop
pop
popf
insb
lods
push
out
cltd
loope
jno
stos
dec
mov
enter
dec
fisttpll
in
xchg
das
sbb
or
push
nop
cli
mov
add
sub
lret
xor
cmp
inc
pop
hlt
xor
sub
out
xor
and
scas
jo
lock
inc
jg
xchg
seta
sti
test
stos
call
popf
rclb
popf
cmp
rcll
sub
in
das
es
sub
push
push
aam
movsl
push
cwtl
jae
xor
jp
fbstp
into
sub
xor
pop
test
pop
es
or
orl
icebp
mov
sar
out
and
gs
sbb
sbb
stc
push
pushf
frstor
mov
and
loopne
in
in
jae
dec
sbb
pop
adc
hlt
push
inc
int
movsb
sar
pop
cmpsl
xchg
push
pop
pop
mov
or
mov
cli
leave
stc
mov
dec
loopne
test
mov
clc
cmpsb
fs
jge
repz
xor
jns
in
pop
pop
jns
or
inc
xchg
sub
mov
mov
pop
jle
add
daa
call
lret
add
inc
es
insl
aam
mov
dec
scas
pop
push
lret
rolb
hlt
shlb
ss
lret
mov
lahf
aad
cs
sub
aad
std
and
fiadds
jecxz
ja
mov
fcompl
jo
negb
sti
jb
repnz
int3
lcall
mov
popa
sbb
inc
sub
test
cmpsb
mov
out
divb
mov
icebp
push
mov
and
sahf
jnp
pushf
jae
add
push
or
popl
pop
mov
push
pop
sbb
mov
int
pushf
dec
dec
dec
cmp
sti
pop
shll
pop
jbe
loop
pop
roll
xor
jmp
adc
mov
sahf
sbb
mov
inc
pop
jmp
adc
or
enter
icebp
push
push
push
pop
jno
cld
push
xor
iret
push
mov
loope
or
outsl
lret
cmp
into
js
mov
test
push
icebp
fxch
pop
call
lds
arpl
sub
xchg
mov
daa
mov
jmp
rcrb
lods
jmp
loopne
cmp
mov
ljmp
add
cltd
cwtl
lret
and
sub
jne
inc
cmc
ljmp
movsb
scas
sahf
js
iret
lret
adc
stos
pushf
jb
out
out
test
es
rolb
shrb
in
mov
xor
push
and
test
hlt
mov
push
sbb
mov
xor
daa
jl
pushf
ss
pop
jge
dec
cmpsl
jle
int
movsl
pop
adcb
popf
ds
in
adc
jl
les
xchg
xchg
mov
adc
xor
xor
mov
mov
icebp
dec
inc
sahf
mov
xchg
lret
repz
mov
cmp
sub
int
push
mov
jl
cld
sub
inc
icebp
mov
ret
sbb
push
js
pop
push
and
add
pop
into
cltd
and
jne
adc
xchg
lea
rcll
loopne
lock
es
add
stc
test
jae
sbb
es
aaa
into
or
or
test
popf
andl
call
push
imul
pop
sbbl
sbb
js
jecxz
ret
dec
dec
mov
sub
fwait
bound
pop
lret
ljmp
push
push
or
jns
lret
in
and
and
dec
add
mov
add
mov
pop
push
fdivs
in
lret
es
test
dec
mov
mov
cltd
dec
mov
fistl
cmp
test
jecxz
inc
stos
movsb
or
mov
movb
xchg
pop
push
setns
ret
pop
int3
icebp
cmp
cmp
inc
gs
pop
incb
fcmovu
inc
push
loop
push
push
sti
test
push
idivb
pushf
xor
cmc
mov
jecxz
push
xchg
pop
outsl
push
inc
ds
pop
test
scas
mov
cmp
sub
insb
mov
ficompl
lcall
pop
push
push
xchg
pushf
ljmp
call
dec
cs
inc
mov
mov
xchg
xchg
sub
imul
lret
rolb
dec
inc
mov
pop
stos
xor
iret
ret
idivb
mov
add
js
xchg
test
fidivrl
add
sbb
pop
sbbl
lahf
push
pusha
dec
rep
push
rorl
in
daa
xchg
or
mov
imulb
loope
xor
push
flds
popf
das
pushf
sub
data16
jb
jle
add
pushf
mov
leave
and
in
pop
test
pusha
and
scas
mov
push
sub
test
mov
push
push
hlt
repz
pop
and
inc
dec
cld
call
ficompl
movsl
fsubr
cwtl
dec
jbe
push
dec
shl
pop
loop
inc
xchg
mov
dec
into
and
into
mov
lcall
mov
cmp
dec
ds
jg
mov
aaa
inc
sbb
and
jo
or
or
iret
push
ret
setne
scas
enter
sbb
ret
out
push
testb
or
dec
mov
popl
lods
jmp
adc
lret
push
sbb
push
fcomps
cmp
xchg
shll
mov
imul
or
insb
xor
bound
push
add
gs
xchg
pop
test
shlb
inc
dec
jmp
inc
pop
movsl
sbb
add
popf
rclb
mov
adc
add
add
pop
sbb
sub
mov
popf
repz
mov
cmp
scas
jmp
out
inc
out
mov
dec
cwtl
adc
pop
outsl
lahf
add
in
push
fwait
xlat
push
lds
or
sbb
sbb
pushf
cmp
out
cmp
and
in
xchg
adc
xchg
fisttps
jle
push
sub
jl
js
xor
push
movsl
or
push
loop
add
fildll
xchg
lds
les
push
test
dec
loop
jbe
push
push
dec
aam
mov
jo
mov
imul
and
div
loope
sbb
or
pop
xlat
adc
push
stc
push
push
std
cwtl
popa
dec
outsl
sbb
addl
outsl
pop
lahf
xlat
ja
ja
inc
push
jae
das
in
lahf
and
add
xorl
popa
xchg
daa
cmp
cmpsl
lcall
mulb
push
push
scas
xchg
sub
lret
movsb
shrl
mov
push
ljmp
dec
pushf
stc
add
or
inc
or
int3
push
and
xor
fnstenv
dec
xchg
and
mov
inc
daa
imul
je
fimuls
xchg
and
mov
repz
insb
les
jo
and
test
add
repnz
dec
ljmp
xor
into
xchg
in
inc
pop
lock
push
imul
out
rorb
and
add
or
shlb
test
and
cltd
jo
jg
out
xchg
jle
arpl
xchg
mov
aaa
adc
ja
inc
sub
xlat
cmp
adc
ljmp
mov
mov
scas
mov
adcl
in
pop
std
add
shlb
dec
mov
mov
aad
sub
adc
mov
ss
daa
mov
inc
pop
ljmp
mov
xor
bound
ficomps
inc
testb
pop
pop
xchg
cmpsl
and
mov
sub
les
add
into
dec
movsb
push
out
sbb
jno
push
jmp
test
sbb
push
fsts
enter
lods
sub
jno
push
jbe
jnp
ret
test
jg
in
pop
aaa
mov
js,pt
push
inc
arpl
cmc
int3
xor
sub
fs
xchg
inc
sahf
push
out
xchg
lea
ds
dec
ljmp
or
movsl
int3
xchg
ds
mov
lret
jp
fsubl
mov
and
out
je
jmp
pop
pusha
outsl
push
les
call
inc
cmp
mov
mov
std
mov
and
ss
mov
jb
das
dec
call
rorb
lock
dec
lods
outsl
push
sbb
sbb
shlb
xchg
pop
and
adc
xor
std
pusha
sarl
ja
cmp
xchg
sbb
test
mov
stos
inc
jmp
jge
push
add
pop
addr16
lds
jp
or
imul
and
outsb
repnz
cs
pop
xor
mov
pusha
scas
lods
cmpsl
adc
mov
out
pop
mov
test
xor
cmp
mov
int3
icebp
outsb
fidivs
pop
lea
pop
ss
mov
push
add
cmp
popf
in
xchg
mov
pop
insb
test
js
stos
clc
cmp
or
xchg
fdivrl
sbb
fcmovne
adc
mov
sbb
mov
ja
adc
mov
out
repz
jnp
mov
inc
into
mov
inc
xchg
push
add
sub
dec
fdivrl
les
sbb
mov
cmpsb
adc
out
call
adc
jne
scas
jns
jo
mov
movsb
cmpb
shr
dec
lcall
mov
cs
cmp
lahf
pop
mov
cmp
fstpt
jnp
jns
outsl
scas
out
xor
and
xor
clc
xor
clc
mov
cmp
lcall
xor
and
enter
repz
jo
add
ret
pop
jbe
hlt
jp
aaa
pusha
xchg
mov
xchg
and
mov
push
cmp
mov
popf
sub
mov
jle
test
stc
add
dec
mov
fwait
fldt
cld
icebp
inc
xchg
push
mov
and
pop
sub
jnp
jge
jge
jno
pop
test
fimuls
iret
pop
cwtl
pop
mov
xchg
mov
dec
imul
and
jle
in
fcoml
rcrl
shrb
push
xorb
aad
aam
jae
aas
shl
sub
scas
test
inc
cltd
inc
ds
fildl
add
nop
leave
ja
sub
inc
cmp
xor
ret
test
ret
std
in
jns
scas
ss
xorl
cs
insb
scas
jle
divl
testb
jbe
pushl
cmp
es
or
loope
adc
popl
pop
sbb
mov
insb
dec
dec
mov
mov
fbstp
lock
sub
adc
cltd
fmuls
xor
data16
lods
or
cmp
iret
xchg
call
lret
dec
and
gs
fs
cmc
sub
lcall
shll
loopne
sbb
fsubs
xor
xchg
andb
iret
outsb
popf
out
into
sti
fstpt
or
cmpsl
pop
add
adc
push
fisubrs
leave
cmp
stc
lret
stos
ficompl
xchg
in
outsb
call
push
notb
roll
push
popa
sti
xchg
loopne
out
call
mov
icebp
xlat
dec
lock
fucom
sbb
bound
stc
lock
mov
fistl
repnz
fiaddl
cmp
add
xor
aaa
scas
xchg
addr16
test
int3
loope
sbb
insb
ret
cli
popa
sarb
jbe
push
adc
xchg
fiadds
dec
jnp
xchg
lret
dec
popf
xor
roll
ljmp
cmp
imul
lds
dec
mov
dec
cmp
jg
roll
lcall
addl
dec
dec
faddl
inc
rorl
push
pushf
mov
frstor
inc
fidivs
push
mov
cmc
rcll
xchg
ljmp
pushf
mov
xor
pop
mov
lahf
jp
pop
push
cli
imul
or
psubsb
mov
inc
jae
xchg
mov
in
and
add
movsb
ss
push
pop
sub
add
xor
mov
dec
mov
imul
mov
sarb
lret
add
clc
mov
ds
je
mov
mov
pop
movsb
test
adcb
mov
pop
lods
push
jnp
sub
testb
jne
cmp
mov
lds
push
xchg
adcl
mov
mov
pushf
fwait
mov
and
sbbb
inc
cmpsb
mov
jge
or
add
test
adc
adc
dec
stc
dec
lods
inc
sub
bound
and
pop
cs
lods
mov
xor
out
lret
mov
and
cwtl
mov
pop
lret
xor
add
std
mov
jne
notb
xchg
aad
sub
fimuls
cmpsb
xchg
lahf
daa
out
jle
sub
pop
fxch
inc
push
xchg
lods
add
jg
pop
aas
fdivr
add
add
js
xchg
icebp
or
int
repz
dec
leave
mov
insl
cmc
imull
shll
outsl
adc
add
mov
adc
insl
mov
xchg
sti
and
ljmp
jg
push
inc
test
and
adc
insb
jno
aam
pop
or
jo
pushf
js
cmp
push
add
test
out
cmp
pop
dec
xchg
or
inc
mov
pop
mov
ret
cmp
xor
loope
movsb
mov
stc
in
jne
ljmp
push
pop
mov
jmp
loopne
lds
out
adc
push
leave
and
xchg
or
push
mov
ljmp
add
popa
cmp
mov
out
in
shrl
xchg
sbb
adc
cmp
xchg
stc
stc
fcompl
adc
and
das
cli
inc
ret
sti
sbb
adc
and
cld
loopne
cmp
ds
push
fxch
or
mov
ljmp
and
mov
fstpt
gs
sarl
xlat
test
lods
popa
sbb
add
fidivs
icebp
xor
decl
hlt
jne
cld
pop
jbe
aam
mov
sbb
fldenv
and
xor
jnp
in
xchg
push
adc
sbb
fists
jmp
xchg
loopne
mov
cmp
push
pop
sub
push
scas
insl
mov
adc
int
dec
imul
pop
sub
lods
push
xlat
jmp
sbb
adc
loope
inc
push
add
xor
cmp
xor
cmp
add
mov
fwait
xchg
movsl
cmp
aaa
mov
ja
pop
mov
mov
cmp
adc
mov
sarl
xor
hlt
xchg
daa
xchg
pop
int3
mov
mov
inc
in
sub
fs
clc
loope
jns
xchg
mov
gs
subl
and
test
ret
push
outsb
inc
rorb
leave
or
popa
test
jne
out
ficomps
pop
cmc
dec
arpl
xchg
add
outsb
jge
dec
test
jb
and
mov
dec
xor
pop
clc
or
jle
popa
iret
shrl
xlat
ja
test
inc
push
cli
addr16
sarl
stos
sub
nop
imul
repz
xor
fidivl
int
jb
xor
jecxz
aad
test
inc
inc
scas
mov
cmp
pusha
push
add
hlt
jnp
sbb
data16
fst
xchg
jbe
cmp
loope
sub
sbb
sub
jnp
cwtl
push
and
imul
daa
pop
xrelease
das
push
test
addr16
xor
icebp
and
mov
mov
cli
lcall
loope
fldcw
pushf
sub
leave
adc
xchg
fsubp
mov
jns
inc
mov
lea
dec
push
mov
fs
test
aaa
lea
ffreep
dec
fistpll
jmp
popa
sbb
adc
mov
jb
inc
and
cs
imul
das
pop
push
lods
push
incl
xchg
incl
pop
neg
imul
xchg
jne
std
fldcw
inc
hlt
stc
xchg
push
xchg
lea
mov
lock
mov
xor
mov
repz
loop
xchg
jg,pt
movsl
pop
push
testl
sbb
imul
xor
popl
jae
pop
cmp
inc
mov
out
ret
out
es
add
mov
rorb
test
push
roll
mov
push
add
jmp
es
fs
add
iret
xor
cmp
insl
bnd
jl
push
pop
xor
les
int3
fcomp
lods
aam
pop
inc
cmp
outsb
mov
push
test
and
jns
push
pop
mov
pop
dec
inc
fxam
lcall
fstps
in
mov
bnd
cli
lahf
mov
mov
xor
mov
mov
xor
sahf
je
push
lea
mov
imul
or
shll
xor
rcll
js
mov
int3
negb
ror
push
ds
std
addr16
cli
mov
jne
push
xchg
mov
mov
stc
and
pop
jb
movsb
out
scas
jne
mov
rcrl
mov
mov
in
popa
loop
lret
ljmp
push
lock
stos
inc
push
xchg
xorb
test
push
popa
cmp
iret
mov
pop
add
cltd
test
ljmp
inc
lret
into
sahf
movsl
dec
push
sub
mov
lahf
adc
aaa
lds
mov
pop
loopne
inc
clc
addb
sti
stc
call
jecxz
xor
data16
movsb
pop
cwtl
fwait
sarb
leave
sbb
repnz
jp
xchg
stc
xchg
jp
into
jg
push
in
popf
hlt
ss
adc
pusha
inc
loope
fsubrl
hlt
and
mov
add
or
aad
xchg
outsl
push
xor
jae
aad
test
lcall
lret
fbld
xor
pop
xor
pusha
adc
mov
dec
add
sarb
xchg
sbb
popa
push
adc
sub
push
jno
lret
xorl
push
cltd
mov
gs
mov
std
fldcw
adc
pop
gs
add
mov
dec
cmc
in
inc
fwait
shll
popf
mov
fiaddl
push
arpl
test
test
fcoml
cmp
push
cli
out
jecxz
into
sahf
jle
dec
cld
push
mov
cmp
pusha
outsb
movsl
das
mov
fnstsw
clc
sti
pop
int3
or
push
sub
jecxz
mov
in
mov
adc
cld
push
and
repnz
cld
add
jmp
cltd
inc
sahf
hlt
mov
jbe
and
push
push
adc
mov
cs
testb
in
lret
jns
movsl
and
fildl
fwait
or
ljmp
dec
jmp
push
sub
psubsw
xor
ds
push
cmp
jl
add
loope
xlat
dec
pop
or
fbstp
sub
popf
movsb
push
mov
cmp
ret
mulb
repz
ret
fmull
add
add
lcall
add
repnz
scas
add
cli
out
jne
movsb
sti
mov
out
mov
inc
pop
jge
cmp
aad
cmpsb
cmpsl
or
inc
sbb
fstpt
lods
cs
inc
addr16
in
jnp
movsb
add
outsl
arpl
out
and
xor
into
dec
and
mov
out
mov
or
mov
scas
mov
mov
jg
cmpsb
cmpsl
ja
ja
pop
aad
xor
add
repz
xor
outsl
xor
add
mov
xor
pop
and
lods
insl
mov
cld
add
jecxz
leave
sub
cmpsb
popa
mov
mov
cmp
adcl
inc
dec
xorb
loop
subb
jb
mov
jg
push
arpl
shl
jl
jno
loop
mov
not
ret
les
mov
xor
mov
cmp
hlt
lds
fldenv
mov
or
cmc
cmp
mov
jmp
mov
shll
mov
mov
ds
fwait
and
mov
adc
aam
jo
imul
inc
pop
sub
cli
or
imul
push
mov
in
push
aas
loopne
add
bound
jge
mov
jo
jae
mov
aad
add
cmc
sbb
lret
add
test
xchg
out
push
call
sub
jo
mov
pop
adc
iret
or
pop
adc
int
adc
jnp
xchg
pop
mov
push
je
push
lods
arpl
pop
pop
sub
xlat
xchg
movsl
lock
pop
xchg
daa
cltd
xchg
out
inc
sub
in
mov
sbb
mov
fimuls
bnd
or
mov
mov
xchg
jg
daa
push
insl
add
dec
push
fcmovnbe
js
fsubr
sub
sub
jle
sub
bound
jo
pop
repnz
jne
aas
fs
xchg
mov
out
cmp
nop
outsb
es
popa
xchg
push
dec
dec
les
cmp
add
scas
adc
lds
pop
clc
push
xchg
std
popa
xchg
cmc
test
addl
std
popf
movsl
sub
loopne
and
negb
xor
sbb
int3
sbb
rcr
jmp
push
andl
stc
dec
popa
push
mov
inc
inc
mov
and
sbbb
imul
divl
movsb
pushw
inc
cld
jae
stos
dec
cmpsl
push
xchg
in
xor
popf
jo
pmuludq
sbb
out
lahf
mov
sub
or
inc
shrb
jl
pop
lret
aad
and
popf
scas
lret
dec
daa
gs
test
xchg
pop
push
in
lods
cld
pop
jo
rorl
int
push
ret
popa
mov
loope
jo
sub
add
daa
fmuls
imul
pop
adc
mov
sbb
dec
bound
mov
push
dec
mov
pop
jns
adc
cmp
xchg
dec
jno
mov
and
in
mov
fcoml
inc
inc
adc
xor
daa
insl
test
or
pop
leave
pop
rcr
xlat
pop
ja
mov
shl
pop
mov
sub
mov
daa
jmp
push
cmp
enter
add
mov
mov
pop
aaa
xchg
mov
fldt
mov
jnp
scas
sbb
xor
in
xchg
add
jl
loope
sarl
lods
movsl
leave
add
xchg
xchg
mov
lcall
fcomip
loop
xchg
push
lret
je
ss
push
enterw
or
bound
jp
lahf
mov
inc
mov
xchg
push
push
fnstcw
test
icebp
idiv
ud0
mov
cmp
rcrb
ret
jbe
sub
int3
sbb
loopne
loope
popf
sub
and
push
arpl
mov
es
adcl
stc
sbb
mov
xlat
cmpsl
addb
jbe
and
arpl
jle
mov
sub
es
mov
lret
rolb
push
push
fsub
lods
add
adc
mov
sbb
imul
and
lea
mov
loop
test
test
pop
test
inc
mov
inc
lret
lods
inc
shrl
dec
adc
adc
cmp
adc
or
pop
jg
outsl
mov
in
into
data16
ja
sarb
out
mov
cmp
xchg
jo
ja
out
fisttpll
notb
mov
fnstcw
outsl
dec
or
or
dec
fnstenv
xlat
arpl
fisubs
rolb
adc
jns
mov
rclb
adc
lds
cmc
push
xor
adc
pushf
mov
loop
adcl
psubsw
ror
inc
xchg
and
loopne
mov
mov
les
imul
rcll
push
xor
outsb
mov
loope
cli
mov
inc
and
jno
jp
fs
jecxz
cmpsb
stos
cmp
test
pop
lea
cmc
mov
and
push
outsl
loopne
fdivrs
xor
repnz
cld
dec
mov
dec
in
pop
xor
add
repz
cwtl
scas
jl
push
xchg
jmp
int3
clc
jge
lods
movsl
lcall
fnstsw
cmpl
mulps
ja
xchg
jbe
mov
clc
ljmp
xor
and
mov
movsl
insl
push
mov
mov
loope
xchg
pop
xchg
and
adc
push
notl
xchg
cmp
pop
mov
xchg
xchg
push
insl
aas
subl
inc
ljmp
roll
mov
loope
aam
sahf
insb
mov
sub
adc
mov
pop
insb
xor
cmpsb
out
addr16
jl
addr16
jb
loop
inc
xchg
add
and
push
mov
sbb
dec
mov
in
jg
daa
jl
call
movsl
ja
je
xor
cmpsb
enter
dec
cli
mov
addr16
test
int3
pop
ret
in
stos
in
lret
jbe
mov
inc
out
out
jecxz
mov
add
xor
into
sub
sub
mov
scas
xor
jmp
aam
stos
sahf
fstpl
xchg
dec
xchg
pop
lahf
add
repnz
pop
mov
mov
jmp
push
push
ficoml
adc
mov
cmp
cmp
jae
aad
push
mov
xchg
cltd
js
jmp
arpl
jle
stc
cld
repz
cmp
mov
sub
dec
shrb
aas
adc
je
push
lods
notl
out
cmpsb
xchg
std
jg
pop
adc
stc
adc
fcmovnbe
adc
fidivrl
or
jp
pop
cltd
mov
sti
jl
and
sbb
sbb
or
enter
repnz
push
adc
outsb
or
pop
andl
sarl
xchg
pop
jnp
lods
aas
pop
jl
mov
pop
hlt
adc
outsl
shrw
mov
mov
out
jmp
aaa
sti
cmpsb
pop
adc
pop
insb
dec
sbb
mov
call
pusha
sub
mov
xchg
enter
sbb
inc
push
cwtl
jp
stos
add
add
or
imul
sbb
mov
adc
and
mov
stc
lods
and
mov
and
negl
icebp
addr16
stc
call
push
push
fistpl
mov
das
sub
rcr
mov
out
pop
adc
pusha
mul
das
dec
mov
sarl
insb
push
call
outsb
in
in
faddl
adc
sub
and
ret
das
insb
cmc
xchg
fsubl
adc
fdivrs
xchg
inc
cmpxchg
fdivrs
xor
pop
nop
inc
dec
lcall
sub
in
daa
ja
orb
mov
xchg
cmp
mov
andb
out
and
scas
aas
push
leave
mov
pushf
loope
adc
cmpsb
cld
push
bound
and
xor
push
inc
sub
lock
inc
push
shl
stos
mov
xor
pop
test
push
dec
and
push
xchg
jb
inc
test
fdivs
lea
test
fiadds
sub
jo
pusha
jge
dec
xchg
xor
xchg
or
add
and
sbb
fninit
dec
outsl
movsb
push
leave
mov
push
xchg
dec
lret
pop
lahf
and
sahf
je
fmull
in
adc
outsb
sbb
mov
and
addr16
mov
insl
cmp
add
dec
mov
xor
inc
outsl
scas
shrl
aad
mov
adc
mov
jb
sarb
ljmp
aam
xchg
mov
nop
sti
pop
movb
jecxz
mov
push
jo
loopne
in
inc
fmul
inc
mov
ret
sbb
rcll
cs
dec
jbe
cmp
lcall
mov
add
mov
cltd
inc
repnz
inc
push
jecxz
cmpsl
cmp
adc
pop
xor
ljmp
imul
clc
jns
dec
jbe
or
and
std
stc
push
into
mov
sbb
hlt
dec
loop
xchg
xchg
xchg
lret
xchg
loopne
push
fwait
adc
sti
adc
lods
adc
in
xchg
push
stos
pop
jp
xchg
sarb
push
mov
hlt
es
test
add
stos
data16
nop
xchg
xlat
adc
xor
pop
mov
pop
mov
jo
rclb
xchg
lock
in
dec
loope
mov
pop
sub
jmp
movsl
lret
mov
fstps
sbb
adc
and
pop
xchg
push
jl
cmp
cmpsl
shl
repz
into
xchg
add
push
insl
add
push
cmpsb
addr16
or
xor
stos
xor
push
cwtl
mov
mov
stos
lcall
js
sub
dec
sti
add
ret
pop
xchg
xor
dec
data16
test
lcall
cmp
push
dec
out
loope
cli
and
repz
nop
inc
mov
data16
adc
lds
movsb
jo
movsb
sahf
test
jns
adc
out
insl
mov
out
ret
pop
in
pop
shrl
sbb
addl
stos
mov
push
sbb
mov
insb
dec
rol
lahf
insb
inc
fwait
push
lea
js
inc
repnz
dec
insl
loopne
and
mov
sahf
xchg
fisttpl
xor
mov
popa
and
enter
ljmp
jle
pop
xchg
dec
stc
cs
dec
sti
dec
jge
test
jno
sub
mov
loopne
test
repnz
xor
cmpsb
rclb
cltd
les
call
fldenv
add
or
mov
xchg
sbb
jne
or
ljmp
je
int
mov
mov
and
jg
inc
mov
out
mov
mov
fildl
or
fstpl
push
subb
jmp
push
pusha
ss
cltd
push
inc
imul
fwait
pusha
scas
xor
sub
add
frstor
cltd
jmp
pop
daa
mov
dec
add
sbb
xor
pusha
jae
lret
into
cmp
js
mov
dec
push
data16
in
cmp
xchg
stc
test
xchg
rcrb
pop
add
xchg
cmp
pop
sub
rcrb
out
pushf
xchg
int3
mov
imul
cmp
pushf
mov
in
inc
adc
mov
sbb
pop
jg
repz
pop
andl
loope
fisttpll
mov
add
pop
fwait
adc
and
push
pop
mull
cli
inc
xlat
lret
icebp
out
aas
aaa
mov
mov
push
ret
add
sbb
dec
stc
or
lea
out
rcl
sbb
bound
lea
into
enter
mov
imul
xor
inc
adc
dec
cmp
mov
jno
icebp
mov
out
cmp
lea
je
push
mov
mov
imul
mov
shll
xor
jle
ds
mov
inc
jns
jb
test
jns
and
adc
mov
andl
push
nop
jg
fdivr
fbld
adc
pusha
fwait
stos
test
nop
int
movsl
loop
mov
call
jecxz
push
and
fnclex
xchg
adc
push
add
mov
repnz
xor
xor
aam
lods
imul
jb
ret
add
mov
clc
and
or
inc
adc
cltd
pop
sahf
mov
movsl
add
fldt
xchg
lock
movsb
xor
and
sub
sbb
or
js
popf
sbb
inc
fstl
cmp
mov
cmp
pop
adc
xlat
xchg
mov
outsb
jns
mov
lcall
fldl
addb
inc
loopne
ss
movsl
cmp
xchg
cmp
das
and
cs
stc
repnz
sarl
repz
fs
xor
popf
xchg
cld
ret
fcoml
popf
std
push
xor
outsl
mov
xor
or
push
inc
dec
test
adc
loop
icebp
jb
pusha
push
inc
insb
jmp
xor
dec
adc
insb
das
jae
aad
imul
sub
xchg
test
push
adc
and
lcall
or
mov
xchg
push
popf
iret
sbb
stos
incl
push
ljmp
xor
add
push
push
fistl
scas
out
ds
fldt
push
fwait
or
fsubrs
inc
mov
mov
imull
aas
mov
je
aad
sbb
xor
xchg
mov
in
std
pop
loop
pop
cwtl
inc
push
mov
popf
iret
mull
aam
fbstp
cltd
xor
cs
loope
jge
aad
pop
call
cld
mov
cmpsl
jge
sbb
dec
mov
inc
stc
pusha
aas
jle
in
push
xor
addr16
dec
nop
out
mov
in
mov
sbb
pusha
std
mov
icebp
rclb
cmp
push
fadds
cli
adc
fld
in
lret
pop
outsb
mov
xor
les
add
fs
push
test
sbb
inc
fistpll
es
mov
jo
push
xchg
js,pt
rcrl
sub
adcl
jb
mov
mov
push
push
stos
cmp
pusha
cli
sbb
jp
gs
push
rolb
mov
lret
sbb
nop
lods
and
lahf
mov
and
mov
sub
insb
inc
jns
daa
jp
dec
xchg
fistpll
cwtl
rcll
hlt
cmp
xorb
cmc
jg
loop
inc
mov
and
xchg
mov
jb
in
out
shr
xor
insl
cmp
outsl
and
xchg
or
mov
cwtl
adc
out
xor
ret
dec
test
stos
les
xchg
sbb
xchg
aad
push
int
mov
stos
enter
sahf
mov
int3
push
cmp
pop
fstpt
inc
inc
mov
fsubl
jne
call
sub
push
vpmulhuw
mov
out
mov
aam
test
cmc
sbb
and
mov
pop
lods
jecxz
mov
mov
pop
xor
inc
shll
cld
or
sahf
int3
push
cltd
outsb
enter
roll
dec
or
sub
mov
scas
insb
pop
out
testb
xchg
pop
ret
sub
jnp
add
xchg
jp
xor
or
dec
insb
mov
push
cltd
adc
push
xor
xor
push
mov
xchg
clc
cli
sbb
xchg
pop
faddl
jge
arpl
dec
lock
sub
cltd
sar
loop
iret
stos
adc
ficomps
fnsave
fwait
add
movsl
mov
gs
push
imul
stos
jo
fsub
dec
loop
jne
fisubl
js
xor
cltd
push
mov
jne
inc
scas
dec
cmp
andl
fimull
rorb
das
dec
test
inc
fcompl
outsb
cwtl
mov
ds
je
sub
inc
outsl
pushl
push
jns
pop
cmpl
jge
jne
cmp
xorl
sub
aad
out
mov
rcll
sub
call
loop
dec
js
push
out
test
xor
lret
and
mov
fnstenv
push
lds
testb
test
cli
dec
sbb
out
jb
subb
inc
cmpsb
jno
jg
nop
pusha
mov
push
dec
jl
daa
pop
cmp
cmp
stc
push
outsb
fmull
cmp
inc
aad
test
or
dec
popf
xchg
aaa
rolb
xor
arpl
jnp
stos
mov
mov
out
scas
add
jl
push
sub
fisttps
mov
pop
lahf
xor
inc
lcall
stos
jne
jp
mov
adc
mov
lcall
nop
fwait
xchg
inc
cmp
repz
cmp
dec
cmp
in
pop
scas
js
cli
inc
fldcw
out
pop
outsb
xor
sbb
jl
loopne
adc
daa
jb
mov
int3
jb
xchg
xchg
div
lea
addr16
lods
ficompl
fstl
loopne
xor
sbb
stos
mov
es
loope
sbb
fldl
dec
scas
test
adc
mov
mov
int3
or
nop
in
enter
lods
stc
xchg
inc
cmp
cmp
mov
cmpsl
loop
jle
imul
jecxz
rol
lcall
push
insl
sahf
push
and
mov
jns
stos
pusha
enter
dec
push
arpl
cmp
add
mov
es
jbe
data16
jl
jae
jnp
pop
dec
xor
clc
add
push
dec
jb
data16
jo
xor
adc
xchg
add
ret
in
stc
lea
in
push
jnp
addr16
add
filds
cwtl
cmp
xchg
in
lea
ja
xchg
adc
scas
mov
or
cli
into
add
in
push
xor
sbb
movsl
bound
popa
xor
lret
test
rcll
les
icebp
push
mov
roll
pop
pop
sub
sub
jecxz
jmp
stc
fidivs
shlb
jl
cmpsb
rclb
xchg
sub
or
push
cmpsb
mov
add
cmp
pop
shr
ljmp
pop
dec
test
es
scas
mov
iret
cmpsl
push
jo
sub
cmp
mov
stos
mov
les
jg
test
mov
scas
xor
aam
xor
test
fisubrs
rclb
xchg
ds
int
and
daa
sub
fcompl
sbb
in
into
stos
insb
loope
cmp
cli
pop
and
pushf
add
jl
out
mov
cmp
or
sub
adc
inc
mov
jge
aam
outsb
cmpsb
mov
gs
ljmp
popa
std
rorb
pop
sub
sub
jmp
cmpb
in
xchg
pop
sub
fbld
dec
mov
test
xchg
fiadds
ret
push
popa
loope
arpl
adc
jbe
outsb
ret
sub
icebp
ljmp
into
movsl
mov
add
mov
insl
aad
cld
or
add
or
mov
insb
imul
add
dec
ret
stos
dec
push
dec
xchg
inc
mov
adc
and
test
sub
sahf
jmp
fstp
mov
push
inc
ss
aas
jg
es
xchg
push
xchg
out
mov
push
pop
stos
in
movb
repz
mov
sub
jl
xor
pop
imul
idiv
ficomps
cmp
mov
int
cmpsl
xor
mov
call
sti
in
lret
adc
dec
or
dec
mov
mov
out
cwtl
call
mov
pop
jle
ficoms
fmul
int3
cmpsb
push
lahf
imul
movsb
imul
mov
dec
inc
dec
lret
push
enter
mov
fmulp
dec
xchg
mov
int
xchg
addr16
mov
or
mov
and
insb
scas
data16
jmp
es
ds
jae
aad
rol
repnz
cmp
arpl
pop
push
cmp
lock
jge
mov
mov
xchg
fildl
push
dec
pop
lea
scas
adc
loope
jbe
in
inc
add
ficompl
test
cli
insb
gs
jno
iret
pop
push
xchg
or
fidivrl
inc
fdiv
sbb
cmpsl
xchg
mov
mov
lret
ja
xchg
add
and
and
adc
stc
sarl
lods
mov
pop
andb
mov
inc
lods
pop
int3
inc
xchg
rsm
pop
mov
in
dec
lret
jmp
lods
dec
and
add
iret
xchg
test
pop
shll
rcrb
or
mov
in
inc
loope
mov
data16
pop
aaa
stc
lods
movsl
sub
mov
mov
mov
dec
jg
rorl
adc
fs
dec
mov
add
push
sbb
out
add
rcll
cs
push
add
cmpsb
sbb
pop
pop
out
lock
lock
sub
rcll
repnz
or
mov
and
pop
jecxz
shl
mov
jp
dec
outsb
stc
loop
lea
ja
addr16
mov
adc
into
rorb
rcl
sbb
sahf
imul
mov
cmp
iret
pop
sub
sub
or
fildll
lahf
psllw
mov
cld
scas
rclb
mov
test
mov
pop
jmp
les
std
mov
push
jae
movb
divps
xchg
dec
xchg
pop
aad
test
adc
leave
push
repz
push
lcall
fwait
or
push
cmp
jg
repnz
mov
add
ljmp
push
mov
jno
loopne
jno
mov
insl
dec
cmp
ds
ret
lds
jnp
call
shll
fbld
nop
sub
and
sti
sub
out
popf
pop
pop
cmpsl
mov
rol
or
idiv
mov
popf
push
loopne
cmc
lcall
push
leave
sti
in
outsl
outsb
cmp
dec
ss
ret
inc
mov
jp
aaa
loopne
rclb
pop
jne
lcall
dec
xor
jmp
arpl
loopne
inc
jo
adc
cmp
push
push
hlt
add
arpl
and
fstps
inc
and
shll
push
ljmp
pop
mov
push
stos
sbb
adc
rolb
pop
in
xchg
cwtl
in
test
inc
lret
ja
add
xor
inc
inc
popa
cmp
les
ss
es
repz
jae
int3
mov
mov
xchg
xchg
xlat
xlat
jmp
mov
aas
sahf
xlat
jae
jo
mov
mov
jnp
jnp
mov
mov
cmp
repz
mov
movl
ja
mov
xor
movsl
xchg
xchg
clc
pushl
jmp
loop
add
in
xchg
shrl
cli
push
mov
std
or
sub
push
push
push
lahf
add
shr
push
cwtl
fadds
cmp
cwtl
enter
xor
jbe
adc
xor
sti
test
jl
fldt
push
test
cmp
pop
pushf
pop
ds
cltd
aad
xchg
aam
mov
mov
adc
adc
std
mov
lcall
inc
loop
pusha
in
gs
xchg
cmp
cwtl
loopne
enter
inc
lret
roll
mov
fcomps
jp
lods
fmulp
xor
in
mov
jnp
adc
loop
test
sti
sub
adc
mov
adc
fnstenv
mov
mov
rcrb
and
mov
out
js
sbbb
sub
rcr
and
adc
jae
sub
ftst
je
or
pop
push
sub
dec
mov
dec
jp
daa
iret
outsb
xchg
sarl
jno
mov
add
divl
dec
dec
and
adc
push
movsb
test
sbb
in
mov
xlat
xchg
rol
ljmp
in
mov
jne
rcrb
adc
cmpsb
cmp
sbb
popf
or
fistpl
orb
sub
mov
imul
pop
in
movsl
sbb
pop
fists
rcll
mov
push
and
sbbb
push
icebp
xchg
call
mov
sbb
dec
enter
out
mov
test
xchg
sbb
push
aam
fildll
outsl
push
mov
imul
loope
mov
jle
jae
jp
inc
fsubrs
lcall
cmp
add
jl
jae
popa
dec
mov
or
in
jbe
mov
cmpsl
popa
xchg
push
lcall
mov
sbb
pop
or
cmp
stos
inc
rorb
jmp
lds
push
xor
or
inc
out
fs
daa
rclb
sub
imul
inc
mov
cmp
sbb
insb
call
adc
imul
xchg
scas
stos
jmp
leave
push
jge
mov
mov
call
clc
insl
jp
push
scas
aaa
jb
push
pop
sahf
mov
lds
hlt
adc
pop
mov
lods
inc
mov
lahf
mov
js
dec
ljmp
adc
lret
test
mov
pop
imul
pushf
aam
jne
stc
clc
add
inc
clc
or
out
pop
ljmp
mov
push
aam
jge
and
call
dec
pusha
out
insl
stos
es
test
jge
xor
and
mov
cmc
insb
cli
stos
jg
lret
pop
mov
pop
ret
iret
add
shll
and
adc
fcomip
aad
mov
push
repnz
cmpsl
lods
lahf
mov
inc
nop
or
xor
rcrb
insl
ss
dec
lret
pop
es
inc
adc
sbb
dec
jmp
leave
loope
push
push
in
in
xor
ret
push
dec
push
in
ljmp
jmp
outsl
mov
push
pop
test
cmp
subb
rcll
int
sti
adc
xor
out
and
push
aad
jno,pn
test
shll
sbb
and
xchg
xchg
mov
sbb
mov
sub
gs
ret
sbb
xchg
mov
mov
jno
add
fldt
push
andl
lea
or
mov
ljmp
lahf
pusha
loopne
push
adc
sbbb
lods
in
add
in
lret
pushf
dec
xchg
mov
dec
add
data16
mov
andb
sub
dec
push
pushf
dec
fstps
adc
lret
insb
jne
mov
push
insl
push
dec
xlat
dec
mov
mov
jae
xor
loope
es
mov
sarl
mov
jnp
mov
lahf
mov
mov
inc
int3
or
jecxz
ds
adc
pop
jne
mov
addb
cwtl
sub
xor
lcall
mov
xchg
sub
rcl
mov
mov
bound
push
xor
lret
mov
jle
mov
arpl
sub
jb
enter
aaa
xchg
stos
pushf
jp
fs
pop
sarl
lods
aas
movsb
push
movsbl
mov
hlt
cmp
sub
mov
inc
adc
add
pop
int3
in
std
ret
icebp
or
and
mov
rolb
jmp
inc
sbb
shl
loop
mov
repnz
ss
fiaddl
aad
mov
sbb
push
jecxz
xor
movsb
jp
test
in
in
push
add
add
mov
and
mov
and
push
imul
jne
insb
pop
and
jae
lret
fmull
jae
jb
cld
aad
xchg
adc
mov
cmp
inc
negb
sub
inc
stc
lret
sub
push
in
and
push
lahf
jb
scas
push
adc
sti
adc
loope
and
cmp
mov
jp
imull
popa
test
and
push
push
inc
push
lods
aam
cwtl
mov
ret
sbb
dec
inc
int
adcl
popf
cmpb
pop
xor
adc
scas
mov
inc
mov
inc
outsb
xchg
push
fcoml
jge
xor
push
arpl
mov
stos
pop
sbb
arpl
sub
jo
xchg
dec
notl
and
test
push
test
adc
mov
pop
int3
push
cwtl
inc
add
icebp
add
push
mov
daa
push
or
popa
andb
or
rolb
mov
icebp
aam
lcall
and
sub
xlat
inc
les
mov
cwtl
mov
cmp
shr
rorb
mov
dec
lret
popf
icebp
test
leave
add
shl
repz
jle
cmp
fstps
lcall
lods
pop
pop
shl
xchg
mov
mov
clc
push
jbe
inc
jne
xor
mov
popl
inc
cli
pop
out
and
sub
int
int
cmc
lret
lea
xchg
jmp
ret
push
xor
xchg
stos
shr
push
mov
adc
cmpsl
inc
inc
xchg
mov
and
mov
loope
mov
cmc
mov
adc
test
xor
xchg
neg
into
scas
jl
push
or
inc
sub
add
rorb
add
xor
in
out
mov
mov
sbb
sbb
mov
adc
sbb
fisubrl
mov
stos
xchg
out
hlt
adc
arpl
pop
pop
mov
inc
xchg
cli
push
daa
stc
jmp
sbb
cmpsl
add
std
or
stc
repz
push
sub
fwait
addps
adc
clc
lea
and
in
lods
mov
jae
rcrl
into
loopne
mov
inc
enter
inc
xchg
pop
ret
ficompl
cmp
pop
inc
xchg
fadds
fiadds
sub
push
pop
mov
pop
mov
push
test
and
or
push
jnp
js
in
jne
hlt
pop
cli
in
ljmp
mov
popa
out
shll
js
fiadds
lods
add
adc
popf
outsl
daa
inc
ss
and
test
mov
xchg
arpl
je
mov
mov
aad
and
pop
daa
push
mov
rorl
dec
push
mov
ljmp
icebp
add
or
mov
in
scas
cmpsb
ds
push
pop
data16
js
cli
movsb
pop
mov
inc
jne
in
loop
cltd
sub
xlat
mov
adc
aaa
mov
cmp
mov
jge
pop
and
insl
or
add
ret
insl
sbb
dec
cmp
pop
mov
sti
nop
cli
mov
icebp
push
test
add
sahf
adc
push
fsts
decl
rdpmc
outsl
push
mov
in
jmp
mov
mov
mov
scas
rolb
int3
loope
jno
dec
xchg
mov
and
adc
inc
or
arpl
push
aad
jmp
adc
divb
pop
les
lahf
or
sbb
adc
sub
push
das
adc
push
pop
cwtl
aaa
test
repz
pop
es
pop
and
push
aad
adc
add
mov
mov
rclb
lods
call
lcall
lods
dec
out
mov
icebp
cmp
jge
jo
sbb
push
insb
test
dec
popa
icebp
xor
loop
pop
adc
jecxz
aad
orl
adc
xchg
mov
int3
mov
fisttpl
sub
cwtl
xchg
out
sahf
imul
xlat
sbb
ficoms
mov
fldenv
pop
call
adc
xlat
lret
pop
test
or
adc
jo
sahf
mov
cmp
ja
outsb
dec
notl
adc
roll
push
lods
mov
or
mov
lahf
dec
outsb
mov
rorb
adc
sbbb
cmp
push
and
cmp
pop
and
outsl
add
sub
fs
cmp
cld
sub
ret
roll
bswap
sub
scas
sub
and
mov
fwait
mov
add
and
sarb
imul
push
dec
fldl
fwait
sbb
movsl
ss
lock
pop
cli
sub
loop
sahf
inc
mov
fiadds
dec
pop
push
dec
outsb
push
pop
push
rcl
inc
pop
cmp
cmp
popf
jne
aam
cmp
pop
xchg
data16
sub
inc
sahf
in
lcall
xor
xchg
fs
fsubs
imul
xor
fnstsw
xchg
sbb
sub
and
pop
test
xor
push
cmp
dec
stos
cmp
sbb
cmp
pop
fdivrs
inc
xor
imul
pop
and
popa
dec
fildll
push
mov
cmp
pusha
xor
mov
fmull
iret
fisttpl
add
cli
sub
call
addr16
and
lock
jge
loope
inc
stc
jno
fnsave
incl
adc
gs
mov
xlat
pusha
stos
and
pop
mov
mov
adc
js
pop
pop
cmpsl
je
pop
shr
outsl
jp
lock
gs
xchg
ret
adc
mov
scas
jns
shrl
adcb
pusha
loopne
fcomi
inc
andb
loope
stc
das
fldl
mov
xor
or
imul
in
jmp
aam
mov
lock
lret
dec
fldt
adc
push
lods
sbb
sti
stos
jbe
and
in
mov
push
xchg
xchg
mov
jge
mov
mov
pop
das
and
addr16
xchg
pushf
sbb
adc
adc
add
xor
mov
mov
xchg
sub
mov
ja
insb
call
jmp
inc
jge
popa
inc
mov
cmp
test
add
cld
iret
cwtl
jno
fwait
sbb
push
sub
dec
daa
into
pop
ds
js
jno
lret
test
sub
and
push
imul
bswap
mov
dec
jnp
ja
insl
and
stos
addb
add
push
ss
in
cmp
jl
mov
mov
xor
xlat
nop
dec
out
mov
out
mov
vpunpcklbw
aam
testb
js
xchg
inc
ds
lret
js
sbb
inc
mov
lds
ret
xor
movsl
adcb
or
pop
dec
daa
mov
sbb
and
jge
xor
jmp
aad
aam
clc
test
ret
imul
sub
ja
xchg
out
shlb
sub
adcb
std
pop
daa
ja
test
add
inc
clc
dec
scas
dec
orl
push
dec
jae
pop
jne
adc
lcall
into
cmp
sub
pop
loopne
sub
cmp
inc
jbe
sahf
fwait
mov
sbb
xchg
inc
cmp
lea
dec
jmp
mov
sbb
adc
inc
aaa
push
cmp
adc
es
mov
fwait
sub
sub
pop
rcrl
movsl
out
int3
sbb
in
mov
jmp
push
int
mov
lea
test
xor
pop
pop
cmc
rcrl
cld
and
stos
cmp
cmp
dec
adc
inc
xor
shl
dec
pop
das
jbe
js
inc
mov
jno
repz
popf
aaa
loop
xchg
push
xor
sbb
sahf
xchg
pop
add
and
mov
push
pop
or
sub
jno
gs
pop
ficoml
push
sub
jne
test
data16
add
bound
dec
mov
imul
add
ljmp
roll
xor
and
lret
push
rep
xchg
inc
jae
xchg
call
fcomps
jb
push
in
push
test
pop
test
cmp
jmp
lods
inc
jno
pop
scas
push
mov
jle
mov
dec
mov
push
out
pop
test
cld
scas
scas
mov
jecxz
clc
xchg
rorb
out
xor
xor
out
lcall
mov
push
cmpl
mov
mov
inc
fs
fistps
jl
das
movsl
repnz
fcompl
dec
or
data16
jb
jmp
and
fwait
pop
cmpsl
xorb
int3
lret
fmul
movsb
insb
inc
mov
push
jns
loop
fidivrl
add
xchg
cmc
xchg
sti
lret
pop
dec
and
imul
fdiv
addr16
popf
or
repz
dec
insb
push
shr
mov
xchg
test
inc
xor
xlat
lods
lds
sbb
xchg
xchg
lahf
popf
mov
adc
gs
ds
enter
sub
bound
je
andl
sbb
pop
scas
or
dec
xchg
push
xchg
mov
mov
test
int
fsubs
enter
cmp
mov
cmp
mov
pop
int
jns,pt
lcall
dec
out
mov
adc
pop
add
pop
test
stos
aaa
mov
lods
dec
in
hlt
push
les
dec
andb
std
adc
xor
inc
jmp
xchg
add
mov
adc
push
fildl
test
insb
xlat
jne
mov
cmp
pop
lcall
inc
cmp
push
pusha
pop
ffree
and
and
and
addl
lods
scas
movsb
das
icebp
test
cmp
repnz
loopne
xor
and
or
jl
sbb
scas
dec
adc
add
ljmp
xlat
inc
sub
pop
int3
test
pushf
test
and
xchg
xchg
jae
fstl
mov
cmc
pop
jmp
mull
push
bnd
stc
xor
push
dec
out
sbb
inc
mov
mov
xchg
xor
in
les
fisttpll
sahf
mov
ret
test
push
jne
push
fldl
mov
stos
test
insb
adc
mov
repnz
sub
sub
push
push
mov
out
arpl
out
lods
scas
pop
cli
and
dec
cltd
cmp
arpl
ret
sub
mov
cmp
inc
into
outsb
das
data16
and
fwait
push
xlat
test
mov
pop
mov
pushf
inc
daa
jo
roll
mov
or
mov
into
cs
int
loope
adc
clc
mov
fs
push
inc
mov
popa
xchg
and
shlb
cltd
push
xor
outsb
ljmp
push
cmp
dec
jecxz
xchg
cwtl
bound
js
xchg
cmp
add
push
pop
addr16
arpl
jne
out
push
adc
out
outsl
notl
jge
sbb
nop
or
cmpsb
pushfw
push
out
adc
mov
jne
cli
xchg
xor
xor
sub
mov
arpl
add
nop
sti
cmpsb
jecxz
imul
sub
add
mov
sbb
mov
gs
push
xchg
xlat
pushw
jecxz
cld
popf
pop
or
je
aam
int3
stos
or
shlb
cmc
mov
jbe
dec
rcr
xchg
sbb
call
mov
scas
mov
punpckhwd
out
es
xorl
loopne
dec
push
into
mov
inc
xchg
insl
xor
insb
xchg
int
or
add
lcall
arpl
sbb
nop/reserved
iret
mov
aaa
and
inc
xchg
pusha
push
mov
push
addr16
loope
loope
mov
dec
and
sub
pusha
out
dec
mov
pop
adc
pop
ss
mov
pop
testb
jb
inc
xchg
xlat
sbbl
mov
xchg
pop
cld
xor
int
fsts
pop
jne
jbe
adc
icebp
inc
pop
mov
and
mov
cwtl
mov
xor
push
jmp
mov
mov
scas
out
lock
es
rorl
or
pop
push
shll
pop
cltd
ja
inc
xlat
scas
adc
mov
and
rcll
fisubrs
and
cmp
mov
movb
jb
jno
cmp
in
adc
or
dec
sub
and
loop
xchg
mov
in
stos
shr
outsb
adc
jl
orl
cld
iret
mov
and
xchg
or
sbb
sbb
and
loope
push
xchg
out
xchg
mov
shll
sub
xchg
push
push
repnz
in
lret
scas
fwait
cmp
sub
sub
jns
and
adc
pop
xor
std
xor
pusha
inc
jns
jbe
sbb
test
mov
dec
gs
adc
sub
xchg
bound
fnstcw
mov
push
adc
sbb
loope
arpl
in
mov
movsl
mov
aad
pusha
xor
cmp
pop
mull
jo
pop
lret
das
shlb
test
mov
dec
xchg
cmp
fisubl
outsb
arpl
xor
jbe
jl
pop
orl
rcrb
push
mov
aaa
outsb
jo
jnp
adc
stos
not
adc
pop
jae
jno
push
and
mov
sbb
cmp
int3
lcall
cmpsl
push
cmp
fildll
rcll
insb
pop
xor
test
add
int3
iret
sti
dec
out
push
out
clc
sub
xorl
ljmp
sbb
js
and
fs
movsl
outsb
push
out
xor
mov
mov
xchg
mov
xchg
fldenv
call
cld
push
lret
sub
jns
repnz
pop
and
and
scas
xchg
hlt
pop
pop
jmp
add
test
pop
push
or
xor
xchg
shrl
push
std
in
pop
pop
stos
test
push
pop
and
in
pop
push
xor
in
mov
sub
push
out
xchg
push
shll
push
pushf
cmpsb
xchg
ss
and
mov
xchg
xor
rdmsr
arpl
push
faddl
inc
pop
inc
imul
xchg
push
cmpsb
adcb
ljmp
jle
mov
sub
call
std
iret
divb
mov
dec
push
aas
stos
bound
xlat
dec
jns
sbb
popa
cmp
call
pop
iret
push
xor
add
or
mov
pop
mov
das
add
or
and
inc
cmpsl
fsubs
mov
pop
pushf
ljmp
test
aad
mov
ret
mov
cld
sbb
pop
sbb
imulb
mov
sub
dec
cltd
jnp
or
cmpl
imul
cmp
or
pop
ret
out
and
or
push
frstor
mov
sub
or
pop
test
call
pop
pop
push
sbb
daa
add
or
push
and
and
loopne
inc
sub
sub
push
dec
xor
mov
setg
aaa
pop
stc
sub
fisubl
scas
pop
in
push
movsl
sbb
cmp
inc
mov
add
jmp
sbb
add
mov
imul
imul
icebp
xor
dec
push
xchg
xchg
jg
push
sub
in
dec
mov
pop
faddl
test
aam
dec
add
popf
jae
out
adc
mov
jbe
adcb
enter
inc
add
xchg
insb
testb
mov
imul
popa
xlat
xor
sbb
aam
mov
cmp
and
adc
sub
inc
jg
popf
pop
inc
in
jg
cmpsb
sbb
inc
popf
fidivrl
add
lret
idivb
aas
movaps
dec
sbb
sub
add
or
js
das
in
sahf
push
in
ret
add
mov
cmc
addl
imul
in
mov
or
movsl
vsubss
scas
sub
iret
jge,pn
daa
inc
push
divl
in
push
pusha
adc
jb
je
jp
sbb
mov
and
jp
test
sbb
lret
mov
push
inc
leave
mov
jmp
xchg
push
xchg
mov
dec
in
inc
pop
pop
dec
add
test
jg
fs
test
mov
xor
movsb
push
pop
test
test
cmp
push
mov
stc
mov
pusha
insl
mov
inc
aas
ss
inc
push
enter
push
js
leave
push
xchg
xchg
cmp
or
jmp
sbb
adc
lcall
pop
outsl
cld
pop
out
mov
ja
and
outsb
add
rcll
lds
inc
out
pop
ja
adc
jmp
ja
in
or
sub
add
pushf
jecxz
insl
lea
mov
push
and
lcall
mov
mov
mov
pop
push
lcall
fmul
xor
xchg
adc
add
xchg
fwait
adc
add
mov
and
mov
test
cmp
and
push
mov
out
insl
fcoml
lea
pop
imull
iret
mov
jbe
dec
arpl
mov
daa
iret
outsl
add
xchg
out
test
sbb
mov
add
mov
cltd
or
imul
sbb
gs
sub
daa
sti
xor
mov
subl
mul
scas
fwait
sbb
mov
out
sbb
das
inc
lcall
pop
pushf
xchg
stos
repz
aas
fmuls
inc
shll
repz
push
imul
jmp
adc
dec
sub
push
jo
dec
test
add
leave
inc
sub
or
adc
insb
and
jge
xor
ja
and
fcompl
insl
out
xorl
adc
inc
and
pop
lret
add
outsb
inc
push
in
addr16
jecxz
fnstcw
dec
test
xorl
mov
push
cmp
jnp
minps
les
fwait
xchg
sub
xor
sub
mov
pop
and
adc
pop
dec
and
repnz
inc
jo
adcl
loop
mov
bound
test
xchg
insl
mov
fisttpl
push
push
ljmp
aas
insl
mov
push
cmpsb
arpl
push
jns
cmp
daa
adc
data16
int3
push
xor
sbb
fidivl
fnstcw
inc
mov
bound
push
repz
loope
xorl
push
jp
dec
lahf
xchg
test
sub
adc
mov
pop
ss
mov
out
or
add
jnp
dec
lret
mov
jae
or
xor
add
inc
cli
lret
xchg
xchg
arpl
lods
mov
fadd
or
daa
fcmovnb
push
push
adc
imul
push
cmp
xchg
stos
cmpsb
je
je
xchg
ret
add
jbe
xor
xor
sbb
cpuid
mov
pop
sub
sbb
mov
lcall
repnz
xchg
mov
mov
fisubs
loope
xor
xor
and
loop
es
mov
sbb
aas
sbb
and
mov
pop
lahf
jo
push
inc
or
mov
jl
popf
sbb
fwait
jmp
lahf
pop
lcall
pop
loop
lcall
test
mov
test
mov
in
and
cmp
clc
jmp
in
sub
or
test
mov
addr16
dec
cmp
pop
das
nop
pusha
sbb
adc
jl
jo
rcr
addr16
and
mov
inc
dec
lea
mov
data16
xchg
pusha
cltd
out
test
outsb
mov
lahf
push
mov
sub
mov
test
lock
inc
sbb
pop
inc
mov
push
sbb
jmp
and
daa
es
or
leave
xor
or
mov
movsl
filds
xor
mov
ficoml
pop
popa
outsb
movsl
sti
lock
fs
inc
lahf
pop
cmp
arpl
mov
jp
inc
adc
and
jb
ret
push
mov
movsl
add
mov
mov
inc
mov
dec
sbb
jmp
cld
rcll
lret
cmp
dec
lcall
sbb
cmp
sahf
lahf
mov
sub
mov
out
xor
testb
cmp
daa
jae
int3
inc
lahf
movsl
pop
dec
inc
xchg
dec
pop
add
fidivrs
les
or
sub
daa
imul
mov
cmc
jecxz
cmpsb
xor
cmpsl
bound
dec
fstl
push
mov
nop
aas
pop
or
mov
lahf
pusha
mov
adc
jb
outsl
mov
lods
mov
int3
outsb
jno
jb
loope
push
jo
mov
mov
pop
arpl
roll
lcall
testb
out
mov
cmp
cs
mov
inc
lock
mov
xchg
dec
lock
adc
repz
leave
sub
xchg
inc
ficoml
mov
stos
or
scas
add
add
lret
insl
mov
stc
adc
xor
daa
jbe
ret
hlt
ret
cmpsb
xor
lock
out
dec
xchg
in
pop
ret
jnp
mov
push
shll
push
imul
ret
popf
in
ljmp
push
cld
gs
lods
push
push
xchg
subb
cmp
xchg
xor
dec
dec
sahf
addr16
fs
jmp
popa
and
adc
cmp
scas
xor
mov
fisttpl
outsl
add
sbb
sbb
push
andb
sbb
aad
jbe
xor
inc
jl
or
arpl
repz
inc
nop
popf
out
mov
add
cmpsb
into
cmp
inc
mov
xchg
pop
repnz
imulb
add
leave
jae
push
shll
repz
je
xchg
sub
mov
cli
aas
push
sbb
sbb
mov
adc
xor
incl
xchg
adc
inc
adc
cmp
popa
mov
imul
outsb
or
mov
out
jb
in
push
fiadds
addr16
int
in
lret
addl
pop
or
add
test
mov
jg
in
inc
dec
adc
mov
repz
pusha
sbb
inc
dec
jle
mov
je
xor
push
mov
out
push
jl
cmc
or
clc
mov
into
outsb
stc
sbb
test
xchg
sbb
out
inc
or
lds
push
test
jno
int
cmpsl
hlt
subl
or
aaa
repnz
xchg
pop
push
stos
mov
push
or
mov
jo
mov
movsb
insl
push
mov
in
rcrb
cli
idivl
inc
loop
xor
cltd
popf
pop
cwtl
test
cmpsb
inc
cmpsb
sahf
mov
fistl
lret
inc
leave
add
xor
push
in
push
psubb
jb
hlt
js
inc
xchg
lods
fsubrl
mov
add
ja
jne
cmp
faddl
jbe
iret
xchg
ljmp
and
or
jl
fisttpl
adc
js
xor
sub
dec
mull
lret
out
frstor
xchg
mov
cwtl
jmp
xchg
dec
sbb
push
push
int3
push
pop
push
pop
xor
xchg
mov
stos
push
jno
xlat
mov
jmp
in
aad
lds
pop
pop
test
aaa
outsb
mov
lret
jecxz
push
dec
push
add
cmpsb
negl
mov
mov
mov
jle
mov
xor
xor
or
add
sbbl
outsl
iret
sbb
das
into
or
jl
int
push
mov
out
xchg
sbbb
pop
call
pop
mov
pop
xchg
inc
push
js
js
fcomp
cmp
mov
and
add
aas
ret
lahf
aaa
mov
pop
dec
jmp
sub
ret
ja
mov
adc
sbb
insl
sub
idivl
scas
mul
rcll
loopne
andb
sub
or
and
ds
aas
and
cmpb
sub
push
lret
mov
jl
scas
inc
in
fidivl
lret
loopne
adc
and
fucomi
stc
fisubl
stos
jo
mov
dec
inc
call
xchg
mov
sub
inc
sub
movsl
cmpsb
setl
repz
enter
push
fdivr
cmpb
subb
push
test
cs
ficoms
pop
xchg
test
lds
push
daa
gs
jbe
push
es
jb
or
and
sbb
fidivs
xor
ffreep
jge
popa
push
xchg
dec
aad
push
mov
pop
fdivs
mov
sahf
jne
or
push
in
adc
lret
icebp
pop
sub
cmp
inc
xchg
xor
mov
pop
sbb
lret
out
and
jge
xchg
jg
mov
das
adc
inc
and
loopne
cmpsl
pop
push
les
or
jno
hlt
mov
pop
or
gs
std
sbb
lcall
inc
mov
adc
push
roll
jmp
cmpb
pop
lret
mov
pop
sahf
pop
lahf
stos
lods
sub
sub
lret
mov
or
arpl
inc
push
adc
lret
jb
mov
icebp
test
mov
adc
mov
jg
push
mov
movsl
out
repnz
mov
mov
mov
scas
xor
ljmp
cltd
outsl
mov
pop
xor
xchg
shll
fisubrl
out
or
jle
jp
aaa
pop
scas
mull
and
sbb
mov
pop
jno
mov
enter
stc
loope
std
adc
cmpsb
ss
pop
leave
or
xchg
push
pop
and
popaw
jecxz
xor
aam
push
xchg
adc
xchg
pushf
scas
imul
or
imul
xchg
mov
push
push
roll
in
imul
cli
adc
jbe
ficoms
cltd
adc
inc
sub
stos
shr
pop
inc
dec
nop
mov
fsubrp
mov
push
mov
enter
sbbl
cmp
mov
pop
or
mov
or
inc
sub
rorl
repz
lahf
inc
push
fldenv
scas
mov
add
sahf
in
xchg
rorb
and
lods
sbb
push
sahf
jb
mov
bound
clc
jl
fcomps
hlt
ret
adc
into
mov
and
xor
out
sub
push
add
cld
mov
test
dec
adc
lods
and
cmp
inc
adc
mov
xchg
aad
mov
adc
mov
subb
sub
int
or
div
es
lahf
sarl
sar
pop
scas
jns
pop
adc
repnz
cli
mov
push
loop
sub
test
adc
nop
loopne
outsl
add
mov
mov
xor
fisttpll
cmpsb
push
dec
mov
out
mov
adc
shlb
mov
cmpsb
xor
sar
lret
push
pop
adc
push
sub
cwtl
mov
orb
xor
xor
cmpl
push
lods
push
and
push
xchg
push
cwtl
out
sbb
pop
ja
aam
xchg
mov
imul
cld
push
test
testb
jae
pop
xor
mov
fwait
cli
jns
xchg
mov
mov
push
nop
imul
out
jmp
cmp
inc
pushf
punpckhwd
jg
mov
leave
outsl
adc
push
dec
pop
mov
adc
test
jnp
pop
fcmovnb
sbb
cmc
sbb
daa
add
fcmovb
push
pop
outsb
xor
jl
mov
inc
and
fdivp
loopne
pop
fisubl
repz
add
mov
push
xor
leave
sbb
lret
pop
xor
mov
stos
dec
jb
fildll
adc
out
and
inc
cmp
mov
fwait
inc
pop
fsubl
and
outsb
xor
sbb
cli
or
fistpll
outsl
sahf
sub
lds
aas
xor
negl
xchg
adc
adc
insl
add
sbb
xor
cltd
lret
xchg
in
pop
in
popa
cmp
add
push
pop
out
cwtl
fmull
add
jae
and
dec
or
dec
outsl
cltd
es
int
and
inc
push
sarl
sbb
and
push
pop
xlat
push
and
fstenv
push
jge
stos
jo
or
jns
je
and
lods
xor
lds
test
push
cmpsl
je
dec
jnp
mov
loope
out
push
xor
out
int
cmc
push
jnp
idivl
inc
add
jno
sti
in
cltd
cmp
adc
xlat
push
inc
cmp
daa
push
cwtl
in
jecxz
cmp
mov
mov
scas
xchg
test
fists
add
aas
mov
xchg
push
mov
jle
push
mov
sarb
mov
fiadds
xchg
sti
jnp
rcll
sub
xor
cmp
cs
les
mov
sub
xor
mov
lahf
movsb
adc
and
mov
sbb
xlat
push
shlb
dec
popa
fdivrs
cli
sub
popa
push
repnz
out
movsl
hlt
int3
adc
ja
aad
fdecstp
or
inc
cmp
mov
stos
leave
adc
sbb
or
xchg
xchg
inc
jo
or
and
enter
inc
shlb
leave
cs
gs
and
mov
data16
pop
mov
fists
leave
pop
data16
mov
iret
or
inc
andl
mov
fbstp
cmp
pop
mov
pop
lret
pop
mov
rcrb
mov
mov
inc
pop
add
inc
sub
daa
dec
inc
fwait
lret
aam
stos
pop
ficoms
insb
cwtl
mov
cmp
je
xor
psrlq
jne
test
jo
scas
jne
loope
pop
adc
mov
cmp
mov
mov
push
pusha
scas
mov
cmc
inc
andl
jge
mov
mov
js
rclb
lret
data16
fwait
pushf
inc
lods
jno
rcrl
mov
mov
pop
out
jge
xor
push
and
jo
fidivrl
stos
xor
ret
les
lret
icebp
cmp
lret
repnz
cld
mov
fldcw
cmpsl
outsl
gs
hlt
mov
int3
jo
roll
adc
jl
jecxz
frstor
pop
lret
xchg
mov
mov
push
mov
sbb
out
push
mov
jge
es
mov
leave
imul
mov
imul
mov
pop
fcmovnbe
dec
and
scas
sub
xlat
aam
push
sub
test
jno
lcall
push
es
and
daa
adc
lcall
insb
out
scas
sbb
sub
lds
xchg
mov
sub
arpl
xor
jae
cmp
fldcw
sub
push
lret
pop
mov
sbb
xchg
mov
enter
imul
rclb
xor
mov
jnp
cmpsl
sub
jp
imul
daa
js
out
fcomip
dec
aaa
fs
cltd
sub
lcall
daa
adc
out
xor
lods
xchg
ret
insb
in
pop
pop
outsl
rclb
subb
cld
inc
jb
add
fcompl
sbb
and
or
mov
sub
adc
dec
insl
loopne
sbb
aad
xchg
adc
in
sbb
movsl
aas
fwait
push
mov
nop
inc
sarb
jge
sarl
push
insb
hlt
aas
lea
test
notl
ficomps
stos
imul
push
add
in
jae
mov
push
int
add
jle
scas
nop
mov
sti
jecxz
test
push
or
or
jle
dec
std
fcomp
xor
aaa
in
cmpl
mov
cmp
arpl
push
mov
test
shrl
aad
arpl
cmpsb
and
fwait
jne
mul
ficompl
push
mov
nop
jns
aad
jno
add
mov
imul
lahf
sbb
in
jmp
dec
fildll
adc
aam
imul
mov
jp
insl
pop
xchg
sbb
mov
imul
mov
xchg
sbb
mov
lret
lret
cmp
push
aam
cmc
sahf
mov
nop
mov
pop
dec
lahf
cwtl
mov
xor
fidivrl
cmp
xor
xor
add
pop
repz
jns
fnsave
adc
incb
jecxz
jmp
xchg
jno
inc
cmc
mov
sbb
fdivrl
mov
fistpll
out
push
icebp
adc
sbb
push
lret
mov
dec
daa
mov
cld
in
nop
inc
adc
call
and
jbe
jne
xor
push
cld
sub
mov
mov
jbe
cmpsb
leave
xchg
sti
out
outsl
test
mov
je
insl
test
je
add
gs
and
lret
mov
out
xor
insl
enter
inc
mov
inc
test
clc
add
aam
ljmp
dec
mov
jle
jae
ja
iret
lds
mov
out
adc
in
dec
sub
outsb
gs
sbb
subb
push
dec
stc
jg
mov
cs
in
cmc
sbb
xchg
jecxz
fcmovb
push
cmp
out
daa
inc
mov
aaa
and
scas
cmp
mov
sahf
mulb
addb
mov
test
add
dec
xchg
adc
outsl
jbe
stc
or
lds
stos
mov
add
lea
sti
imul
cmp
cmpsl
push
xor
in
xor
decb
push
cmp
scas
adc
adc
mov
std
shll
sub
xchg
add
lods
inc
and
jge
dec
add
aam
movsb
cmc
xchg
sbb
mov
lret
fistps
fwait
int3
ljmp
inc
or
lea
ja
fsubl
push
add
xchg
mov
xor
lds
inc
mov
adc
sub
imul
inc
ret
fimull
adc
aad
cmp
jmp
mov
gs
xor
push
outsb
shll
aam
jo
xor
insl
daa
mov
mov
cmpsl
outsb
popa
call
or
loopne
xor
stos
aas
mov
out
push
xchg
outsb
pop
mov
xor
out
push
pop
or
mov
jecxz
js
test
call
out
test
mov
mov
pushf
lahf
jnp
bound
lcall
xor
test
in
jno
fcmovnb
adc
cmp
xor
roll
push
push
sub
xchg
xlat
jl
sbb
icebp
shlb
fisttpll
cmpb
jp
int3
fwait
lods
push
mov
cli
imul
or
jne
loope
pusha
jne
and
dec
xchg
dec
mov
cmp
pop
mov
adc
sti
iret
fwait
addr16
cmpl
stos
hlt
mov
sub
mov
pop
mov
movsl
pop
jl
cmp
pop
or
dec
mov
push
cmp
icebp
cmc
cs
cmp
cli
stos
ret
ljmp
int
outsb
cmp
adc
popa
movsb
ficompl
aaa
mov
daa
add
jne
pop
mov
mov
mov
cli
lods
test
sti
add
popl
std
addr16
cmpsb
jp
mov
pop
add
xor
pop
rcll
cmp
sbb
ljmp
mov
jae
aam
inc
pop
lods
test
inc
mull
sahf
mov
lahf
fcomps
outsl
push
sahf
mov
mov
imull
xchg
or
and
jno
cmp
fwait
inc
jb
aam
add
push
nop
dec
je
push
dec
xlat
cs
cmpl
add
repz
loopne
lcall
imull
pop
fildll
shr
xor
cmp
add
add
cli
add
scas
mov
dec
push
adc
pop
mov
stos
leave
scas
xlat
cmp
lret
and
out
fstpt
lret
sti
mov
ret
sub
test
ficompl
mov
cli
inc
cmc
cmp
lods
cltd
jbe
xor
inc
inc
jae
sar
lock
mov
cmpsl
push
xchg
ret
jg
adc
lahf
jmp
inc
jl
loop
pop
mov
testb
stc
jo
es
pop
dec
jmp
push
xchg
mov
push
mov
mov
test
xorl
jmp
xor
leave
sub
in
repz
push
stos
fistps
xor
dec
inc
and
ja
cs
repz
sbb
push
sbb
mov
push
imul
cmp
push
push
sbb
sti
les
add
jg
jnp
cmp
mov
movsl
popw
int
mov
inc
xor
js
sbb
xor
push
xor
lds
ja
dec
inc
sbb
pop
sbb
add
mov
aas
sub
push
fucomi
mov
outsl
cwtl
mov
mov
mov
loope
xchg
in
sub
push
cmp
lods
adc
cmc
outsl
pop
xor
mov
stos
adc
jns
jno
cld
stos
pop
roll
loop
lods
sub
shlb
xchg
add
or
mov
sbb
sahf
ret
sub
sbb
mov
jp
jo
adc
cmp
mov
sbb
jnp
inc
out
aas
mov
mov
cmp
in
cs
inc
fnstenvs
into
stos
jnp
enter
mov
pop
xor
mov
movsb
mov
jbe
sbb
sbb
dec
loope
or
hlt
fidivrs
ret
push
and
mov
push
sub
shll
mov
dec
movsl
mov
mov
loope
adc
stos
sub
sub
or
sbb
mov
sbb
imull
mov
divl
outsb
mov
mov
lods
mov
mov
jne
fidivs
push
dec
sbb
pop
lods
aam
scas
sbbb
out
cmp
das
mov
xchg
jmp
or
in
es
cmc
sbb
out
jae
inc
loop
add
outsl
pop
cli
dec
je
adc
adc
ror
int
adc
mov
adc
fists
jno
fwait
dec
iret
pop
repnz
mov
inc
hlt
popf
lahf
inc
adc
push
movsl
sub
xor
sti
mov
es
scas
jo
hlt
jmp
stc
pop
cwtl
sub
ret
or
fdivrp
shlb
and
fcmovu
and
leave
outsl
mov
clc
xchg
call
or
mov
add
dec
cmp
sti
lcall
push
ret
ljmp
test
clc
add
and
nop
incl
subl
repnz
lret
sub
mov
bound
cmp
data16
xchg
push
jno
xchg
inc
or
sub
mov
mov
movsb
lds
mov
int3
push
arpl
sti
fistpll
lds
out
sar
in
fsub
ja
pop
stos
lahf
lods
rcrl
in
out
mov
int
mov
add
gs
xchg
test
jl
xor
dec
pop
iret
sub
insb
cmpsl
cmp
pop
cmpsl
ret
movsl
dec
push
push
ds
adc
push
std
jae
xor
not
xor
mov
add
cld
cmp
inc
mov
mov
xchg
inc
out
pop
out
xlat
push
add
mov
mov
mov
xchg
jg
cmp
or
clc
jo
inc
movsl
dec
dec
jmp
iret
pop
scas
jge
xchg
scas
sub
in
sbb
rcll
pop
popa
mov
xchg
lret
gs
ljmp
rorl
adc
push
add
mov
push
sub
sub
pop
adc
mov
lock
repnz
jecxz
mov
ss
std
sbb
add
jmp
xorb
jmp
xchg
xor
push
aas
in
xchg
cmp
sbb
mov
scas
out
pop
mov
jmp
or
cmpsl
std
add
jo
or
leave
xchg
and
push
mov
out
cltd
mov
push
sbb
jno
decb
mov
add
mov
std
nop
fsubp
es
ret
dec
aam
mov
jg
in
in
je
loope
cwtl
sub
dec
and
sub
mov
push
sti
mov
ljmp
adc
dec
dec
addr16
mov
inc
sub
or
or
lret
je
insl
xchg
jno
and
jge
popa
jmp
repz
stos
sub
ret
mov
push
push
mov
test
insb
lods
int
loope
outsl
inc
sbbl
nop
fcoms
add
adc
dec
lret
cmp
arpl
or
push
xchg
cmp
sub
jnp
cmc
inc
mov
dec
push
cli
clc
iret
mov
xchg
shl
cmp
nop
adc
dec
sbb
xor
rol
es
lcall
mov
sbb
lods
xor
sti
testb
push
dec
xchg
mov
subl
add
cmp
test
mov
lahf
jge
ss
in
sub
mov
leave
push
xor
cli
scas
fwait
enter
jmp
fstl
das
dec
cmp
xor
jne
aam
imulb
push
xchg
push
inc
xor
cmp
jne
int3
mov
mov
sti
stos
and
mov
cmp
lahf
scas
mov
ss
pop
inc
push
js
push
movsl
pushf
mov
adc
int3
lock
jo
test
xlat
adc
sub
xor
inc
jns
iret
mov
out
sub
stos
cltd
cmc
mov
popf
xor
ss
xchg
push
ret
jns
jmp
aas
cld
jp
dec
xor
dec
repnz
sahf
int3
mov
in
mov
enter
fs
pop
faddl
mov
sub
or
lock
sbb
movsl
xchg
rclb
negb
ds
mov
pop
push
push
cmc
loop
jo
imul
mov
inc
sbb
mov
push
icebp
mov
icebp
cli
and
mov
pop
int
jnp
es
pop
test
out
mov
imul
rcr
popf
inc
fs
add
popf
push
int
sbb
icebp
sbb
pop
jmp
push
add
cmpsl
push
sub
xlat
dec
pandn
stos
or
add
dec
rcl
repnz
sub
sbb
inc
xlat
adc
sub
cmp
inc
cmp
jno
xor
loope
lea
and
and
test
popf
lods
out
scas
stos
inc
mov
in
fcom
inc
mov
add
xchg
cmp
aas
cmp
or
xlat
add
jno
sbb
cmp
ss
lods
add
das
inc
jl
mov
pop
stc
push
pusha
inc
cmpb
jmp
popa
out
push
addb
ds
shl
imul
divb
pop
fsubs
pop
test
into
mov
xlat
jmp
out
gs
mov
cli
pusha
rcrb
cmp
and
jge
gs
push
mov
call
subb
rcr
or
or
mov
sti
or
pushf
lods
sub
pop
sbb
mov
adc
jg
mov
je
fs
in
imul
mov
mov
fcmovu
and
sbb
outsb
mov
jns
mov
faddl
cmp
bound
inc
daa
add
jb
insl
cmp
and
push
push
jecxz
nop
pop
daa
fsts
stos
xchg
add
lcall
push
or
testb
and
xchg
fdivs
jmp
inc
outsl
xchg
das
leave
daa
push
mov
test
adc
jmp
ja
imul
inc
xchg
fldenv
or
jne
sbb
sub
cmp
jae
test
insl
jns
in
fists
xor
pusha
out
dec
xchg
lret
lods
mov
mov
or
iret
sub
pop
cmp
jl
mov
out
pop
mov
js
es
sahf
lods
sub
dec
inc
push
push
stc
push
add
rorb
popf
push
out
mov
add
repz
fwait
inc
lods
xchg
mov
sti
jnp
lret
xchg
enter
or
sub
jnp
add
add
aaa
sub
mov
cmp
inc
fcmovnb
pushf
testb
out
inc
hlt
adc
mov
or
test
adc
fimull
cmpsb
adc
mov
das
jmp
adc
cmpsb
insl
fistpl
clc
mov
lods
inc
ficompl
inc
movsb
insl
ficoms
call
ret
mov
scas
ja
jg
mov
push
adc
shrl
roll
hlt
xor
mov
xchg
xchg
arpl
test
mov
pusha
push
push
or
cwtl
push
mov
gs
arpl
and
inc
jmp
nop
xchg
lea
test
push
out
xchg
movsb
lcall
arpl
xor
cld
pop
push
in
xor
mov
sub
clc
and
inc
pop
aam
jbe
pop
sti
dec
jnp
sub
aam
xor
jns
out
and
inc
mov
pop
sti
sub
add
jne
mov
fdivs
mov
and
mov
je
jg
inc
lcall
f2xm1
jg
xor
push
frstor
testb
daa
mov
dec
sub
das
jp
fldl
movsl
repnz
push
insl
push
repz
jl
dec
stc
pop
mov
sbb
dec
cmp
mov
xchg
mov
insl
in
sbb
daa
push
mov
jp
pushf
out
pop
mov
xchg
and
sbb
inc
gs
outsb
ret
movsl
rorl
cmp
mov
cld
fs
fistps
out
and
xor
adc
push
push
sub
insl
xor
inc
xchg
das
std
pop
sbb
and
loope
push
out
fisubs
add
sbb
and
inc
repz
push
pop
shlb
lock
jle
clc
adcl
push
mov
fdivp
adc
or
xor
loope
or
sbb
stos
mov
xor
outsl
je
lret
mov
pop
sub
lret
out
cmp
mov
lret
lret
insl
xchg
inc
cld
scas
mov
test
movsb
mov
lods
sub
arpl
cs
adc
dec
xchg
inc
es
ss
dec
xchg
mov
jl
pop
stos
dec
out
push
adc
xor
jge
dec
jecxz
sbb
cwtl
mov
test
mov
push
pop
std
cmp
arpl
aaa
test
inc
clc
push
mov
cltd
sbb
scas
loopne
dec
mov
imul
add
pop
cmp
rol
sub
mov
aam
leave
pop
popf
add
sub
sbb
mov
jmp
mov
xorb
cmpsb
mov
in
sbb
dec
add
mov
out
dec
daa
push
call
popa
lods
and
in
sbbb
dec
loope
mov
lret
adc
jb
dec
test
add
add
and
sbb
mov
or
mov
repnz
adc
mov
jo
out
sarl
aaa
or
je
lods
sub
cmp
gs
inc
sub
fsts
mov
fbstp
sbb
outsl
in
add
xchg
mov
in
stos
sbb
push
xor
cmp
lahf
xchg
fldenv
mov
pop
arpl
sub
mov
add
jg
add
dec
aas
scas
movzwl
call
xlat
mov
inc
dec
sbb
push
jge
jns
xchg
dec
out
mov
out
ror
xchg
es
pop
imulb
lods
jg
xchg
les
adc
cwtl
xchg
mov
mov
and
pushf
adc
inc
and
hlt
add
mov
in
adc
and
in
fst
cld
mov
pusha
fcmovnb
xchg
lods
sbb
cmp
mov
lahf
sub
addr16
cmp
outsl
rcrl
popf
add
inc
mov
push
mov
psubq
outsl
insl
sti
pusha
faddp
rorb
sbb
into
adc
cmp
xor
pop
and
adc
subl
fsubrl
int
mov
add
ss
cmp
ljmp
pop
and
sbb
cmp
or
pop
inc
cmp
leave
mov
sub
js
mov
cmpsb
lfs
pop
push
test
lods
jno
pop
icebp
add
pop
iret
clc
mov
jo
imul
inc
fs
shll
adc
aaa
and
mov
mov
adc
movsl
and
leave
cltd
add
and
pop
mov
repz
and
sub
mov
gs
dec
out
xchg
and
mov
movsl
mov
les
faddl
int3
add
pop
add
mov
cmp
ds
adc
mov
lret
cmpl
mov
or
movsl
clc
stos
xchg
mov
push
push
mov
sbb
dec
inc
jmp
dec
lds
push
fcompl
jp
cli
cld
icebp
mov
dec
jnp
in
and
dec
sub
cmc
fyl2x
stos
stos
fimull
cmpsb
sahf
pop
sbb
inc
xchg
mov
pop
out
add
push
sub
inc
xchg
lret
fs
clc
and
mov
out
xchg
js
xor
jmp
sbb
mov
jecxz
jb
pop
sbb
popa
pushf
insb
dec
pop
push
addr16
jle
jne
hlt
pop
sti
nop
adc
imul
sbb
dec
cld
sub
sbb
dec
fstpt
testl
xchg
and
idivb
mov
xor
jne
data16
or
push
mov
push
cld
iret
aam
xchg
sti
cltd
sub
in
stos
cli
iret
jp
xchg
mov
xchg
inc
pop
push
pop
cmp
mov
loopne
out
mov
mov
fwait
sbb
das
lret
and
addr16
or
shll
lods
push
xchg
into
sbb
hlt
lret
fsub
xchg
js
call
push
mov
repnz
das
push
addr16
or
sbb
add
test
lods
pop
jns
aad
loope
mov
adc
fs
adc
sbb
add
pop
hlt
cmc
cli
mov
imull
into
add
lret
sbb
mov
push
test
pop
cmp
add
dec
loope
outsl
out
dec
push
lret
repz
dec
cmp
imul
cmp
daa
sbb
js
xor
mov
lods
cli
sbb
push
cmp
cmpsb
ss
lahf
pop
ret
inc
lret
cwtl
mov
ljmp
cmp
mov
cmpsl
push
arpl
jle
inc
xor
cli
pop
pop
xchg
or
sub
cli
push
in
movsb
ret
andl
ret
lods
fwait
movsl
comiss
pop
xchg
test
add
adc
push
fs
jge
fisubl
and
jp
cmp
or
jge
imul
mov
insl
stos
adc
nop
cld
roll
ljmp
rcll
iret
mov
add
test
lea
lods
and
std
pusha
xchg
mov
lcall
sarl
mov
repz
movsb
popa
ror
xchg
push
mov
lock
rcll
lods
outsl
ficoms
and
adc
dec
push
jg
gs
mov
xchg
bound
xchg
loop
mov
pop
aaa
inc
jb
mov
mov
lret
add
and
dec
std
aas
add
sub
mov
adc
ljmp
xchg
mov
xor
sahf
enter
fs
scas
dec
sti
popa
int3
cmpxchg
ret
stos
xor
movsb
jge
jle
repnz
push
repz
push
test
loopne
mov
fidivrs
add
xor
stos
bound
leave
cmpsl
pop
fs
loopne
sub
mov
jo
push
stos
dec
cmp
cmp
and
fcoms
psubsw
xchg
into
popf
mov
push
inc
and
leave
lret
pop
push
add
mov
das
ja
out
push
mov
push
stc
xchg
imul
push
add
jb
js
ret
fldenv
enter
je
sarl
aas
add
movsl
or
or
sub
sub
mov
das
pop
es
arpl
loope
adc
dec
cld
inc
inc
xchg
adc
leave
mov
int3
xor
push
ret
stc
in
xchg
pop
inc
add
sahf
pop
mov
out
iret
mov
dec
out
adc
and
arpl
mov
sbb
fs
or
inc
test
add
movsb
push
mov
pop
jp
add
cmp
scas
sbb
loope
lds
test
jne
loopne
in
lahf
aas
and
add
dec
inc
es
pop
push
fbstp
jne
ja
adc
adc
jle
pop
aam
jae
data16
push
and
iret
das
sbb
mov
xor
js
scas
mov
popa
mov
cmp
sbb
inc
dec
and
leave
adc
stos
mov
scas
jg
test
pop
lret
js
std
es
adc
or
mov
daa
add
xchg
jl
xchg
ljmp
cmp
xchg
mov
pop
test
lods
sbb
xor
or
cmp
or
add
cmp
xchg
add
pop
test
cmp
loope
or
sub
lods
neg
sti
stos
or
mov
mov
orl
out
add
mov
and
inc
insb
mov
scas
rcrl
mov
add
or
add
pop
or
mov
sub
enter
fwait
inc
mov
jmp
jno
loop
push
es
sbb
scas
sbb
test
cmp
xor
dec
int
mov
jo
mov
dec
xchg
repnz
and
pop
xchg
xchg
pop
pop
lods
xchg
or
sub
fnstsw
jge
add
xor
int3
subl
cmp
dec
jae
xor
or
movsl
jae
mov
or
jno
mov
xorl
dec
fldl
sbb
insb
out
cmc
ja
inc
sbb
sub
jbe
dec
inc
loop
out
xchg
xchg
add
ss
movsl
xchg
subb
push
adcb
movsl
mov
cmpsl
xchg
in
out
daa
adc
je
mov
xor
mov
mov
cmp
rcrb
push
fwait
inc
jae
pushf
ret
jne
pusha
lcall
outsl
lea
ds
aam
out
repnz
lcall
sbb
adc
addr16
int3
cmc
sub
movsb
mov
jle
rcrb
in
push
mov
push
outsl
adc
dec
jecxz
imulb
imulb
rorb
out
int
jne
inc
mov
cmp
enter
add
in
or
cmp
mov
ror
push
js
lea
test
jg
mov
inc
push
ja
mov
pop
repz
sub
mov
rcrl
or
sahf
cmc
scas
mov
cwtl
ret
pop
clc
adc
outsl
cmp
jne
aaa
xor
xor
inc
cmc
cld
nop
pop
ficoml
pushf
scas
jle
daa
aad
icebp
xlat
mov
and
mov
cmp
and
clc
cli
and
ret
les
sbb
hlt
lock
xor
mov
lods
xor
aam
lret
or
and
push
popa
ljmp
push
cmp
mov
loopne
mov
jl
inc
xchg
shll
dec
pusha
mov
sarb
testb
and
pop
cli
adc
lea
cmc
mov
std
inc
jnp
xchg
cmp
inc
into
icebp
fisubrl
cmp
and
pop
pop
fcoms
int
or
push
imul
shrb
inc
push
jbe
or
out
je
sar
and
das
arpl
dec
ficomps
stc
inc
sti
rcll
sub
sbb
test
mov
mov
fidivs
movsb
loope
mov
cmp
jge
adcl
push
dec
pop
pop
cli
lret
and
mov
xchg
mov
mov
cmp
pusha
xor
stos
mov
jg
divb
leave
dec
dec
push
in
mov
test
or
xor
push
or
fmuls
xor
mov
inc
jbe
mov
push
shlb
push
cld
push
dec
mov
clc
fstpl
jmp
les
inc
imul
cld
ret
or
jne
jmp
daa
cmp
push
push
aaa
jp
vpunpcklwd
pop
mov
inc
and
add
pop
sbb
xor
xchg
gs
ljmp
notb
fidivs
push
mov
fnstsw
and
add
aaa
ja
mov
aaa
push
sbb
mov
cmpsb
frstor
cmp
push
or
cli
adc
sub
test
sbb
xchg
push
sub
sahf
icebp
insl
jae
nop
lods
cmpsl
or
dec
jns
loopne
push
push
pusha
jp
shlb
fmulp
out
lea
jle
dec
out
push
fstpl
imul
mov
push
dec
xchg
ret
shl
mov
jbe
or
inc
hlt
js
cmp
and
ret
fstl
mov
mov
jnp
cmpsl
adc
jb
in
andl
sub
ffreep
jmp
icebp
mov
mov
cs
cmp
jg
adc
dec
jae
leave
orl
sub
mov
and
ficomps
mov
xchg
adc
push
outsl
sub
push
sbb
insb
adc
loop
outsb
push
xchg
or
push
es
lahf
jo
test
fadd
mov
pop
pop
mov
pop
mov
xlat
mov
mov
sub
push
loope
or
mov
lock
sbb
roll
push
inc
mov
paddusw
jmp
adc
lods
pushf
and
adc
ror
fs
fst
sub
cmp
lret
add
fsubrs
aaa
jge
xchg
popf
xor
lods
jp
subl
cld
in
push
cmp
mov
xchg
lcall
andl
mov
inc
movsl
decb
mov
inc
pop
bound
mov
xchg
mov
xor
xchg
xor
movsl
push
push
push
push
dec
or
cmp
cwtl
scas
dec
decl
loope
mov
inc
pop
jo
popf
xor
mov
out
js
lret
mov
sbb
cmp
pushl
pop
dec
push
stos
dec
add
lcall
push
inc
or
mov
add
mov
lahf
push
pop
add
cmc
jbe
mov
adc
dec
imul
sub
push
jle
popa
call
or
xor
sarl
lret
int
xor
jnp
mov
sub
aaa
pop
mov
xor
push
cmc
xchg
cli
incl
push
rcrl
rcl
cwtl
pop
addr16
jb
rclb
mov
push
stc
sbb
fs
out
dec
dec
lock
std
inc
xchg
out
lds
push
add
inc
rolb
out
mov
dec
xchg
and
cmp
mov
xor
jmp
xor
pop
mov
arpl
cmp
inc
xchg
inc
cmp
pop
int3
jg
or
jp
sti
fsubs
push
data16
sbb
sbb
add
andl
pop
ret
dec
xchg
lods
sub
push
cmpsw
and
dec
out
or
in
push
xchg
icebp
push
notl
mov
into
in
imul
sbb
sub
je
mov
ljmp
arpl
ffreep
insl
fistpl
and
gs
dec
mov
imul
lcall
push
pusha
pop
pop
or
inc
cld
lret
sbb
das
cmpsl
ror
mov
cmp
and
sbb
pop
xchg
sti
or
popa
xchg
int3
insb
cmp
cmp
rol
js
hlt
jb
pop
rorb
outsb
mov
loopne
shlb
push
mov
cmp
stos
sub
xchg
and
jne
arpl
xchg
push
mov
out
jne
adc
push
inc
data16
lret
pusha
inc
jno
icebp
js
ret
mov
std
cmp
std
insl
xlat
and
scas
movsl
stos
sti
mov
mov
cmp
cmpsb
sbb
push
or
and
xchg
ret
xor
mov
or
or
push
into
hlt
rcrb
push
gs
fsubrs
sar
add
xchg
pop
sbb
cmpsb
shll
inc
imul
fcomp
loope
std
mov
in
sbb
xlat
push
or
ss
subl
jl
inc
dec
and
or
testb
inc
xor
adc
mov
outsl
sbb
lret
mov
inc
push
std
lds
sub
push
push
dec
pop
ret
sbb
pop
fsubrl
add
shrb
and
and
mov
outsb
ss
sub
jb
and
mov
cmp
gs
lahf
int
xchg
fucom
dec
ret
inc
lods
in
in
cmp
and
jle
mov
into
cmp
jge
js
xchg
jmp
xor
roll
cmp
aad
jle
mov
jnp
mov
fisttpl
cmpsb
lret
aad
mov
jl,pn
jp
pop
xor
repz
inc
leave
rcl
cmp
in
pop
and
dec
sbb
fdivl
push
push
jne
in
mov
and
cli
and
fidivs
jbe
aad
inc
das
es
hlt
cld
mov
jmp
adc
push
cmp
or
cmp
lcall
jbe
cwtl
cmc
int3
iret
je
jne
daa
jo
adc
push
lds
lods
jbe
in
test
orb
mov
lahf
mov
nop
out
mov
dec
xchg
xchg
cmpb
pop
mov
aas
inc
ret
jbe
popa
orl
pop
jb
xor
lods
ds
push
repnz
push
add
fxch
hlt
imul
or
adc
xchg
xchg
mov
mov
fldcw
or
jp
mov
and
xchg
popa
sbb
fisubrs
cld
sub
fs
jae
xchg
and
mov
mov
movb
and
pop
dec
jne
stc
mov
shrb
loop
test
inc
inc
out
sbb
push
inc
icebp
jl
push
movsb
movsb
inc
aas
je
push
sbb
pop
loopne
or
daa
repz
cmc
jmp
sub
in
cmp
fldz
sbb
mov
mov
mov
cmp
xor
sbb
loopne
ret
inc
mov
pop
std
pop
mov
jp
movsl
mov
loopne
jle
stc
jle
sub
testb
cmp
shll
icebp
movsl
and
jns
cmc
dec
jmp
scas
arpl
push
call
cmc
xchg
jnp
add
stos
lods
xchg
pop
outsb
dec
aam
mov
mov
inc
jnp
mov
loopne
mov
pop
scas
imul
jne
stos
push
outsl
adc
cwtl
and
jmp
out
js
sbb
and
adc
shlb
xchg
call
jecxz
add
push
inc
cltd
push
stos
out
sub
movsb
fwait
movsl
jmp
lret
test
scas
cmp
sarl
pop
mov
cmp
mov
jmp
rolb
shll
cwtl
and
mulb
inc
jb
cmp
xchg
xchg
dec
push
or
pushf
sub
insl
test
je
stos
mov
aam
aas
xor
shr
push
push
lds
dec
stos
fsubp
pop
and
mov
hlt
xchg
mov
dec
jnp
lods
add
mov
xor
incb
aad
push
mov
xor
adc
sbb
xor
add
adc
or
in
or
cs
subb
cwtl
mov
mov
dec
cmp
into
js
int
lcall
mov
cmp
bound
lods
mov
xor
mov
ljmp
stc
cwtl
xor
lea
inc
mov
jecxz
stos
pusha
hlt
sub
popf
xchg
inc
mov
ja
enter
push
fwait
cmp
adc
sub
mov
adc
ss
insb
pop
pop
dec
and
xchg
aas
fists
xchg
test
dec
pushf
jecxz
xor
stos
cmp
sub
jo
popa
and
push
and
in
enter
clc
dec
add
test
sarb
jne
mov
adc
mov
mull
push
pusha
push
mov
je
dec
cmp
test
cwtl
inc
push
add
rcll
les
adc
xchg
jmp
pop
pop
add
pop
add
push
rcll
jge
xchg
pop
mov
mov
das
xor
ret
movsb
cmpsl
xchg
xchg
and
test
js
or
clc
push
inc
push
mov
push
je
push
lret
lret
lret
jae
test
mov
or
fdivrs
jns
mov
dec
add
xlat
jmp
add
and
add
movsb
sbb
ljmp
cld
xchg
adcb
pop
add
mov
cmp
rol
outsb
or
or
and
sti
mov
cltd
insb
mov
std
push
and
aaa
xor
movsl
adc
cmp
daa
xchg
mov
inc
pop
push
sub
mov
shll
pop
movsb
adc
mov
popf
push
mov
ret
into
in
enter
sub
fcomi
rcll
outsb
sub
inc
aaa
repnz
filds
push
cmp
stos
mov
lods
in
enter
and
pop
xchg
inc
outsb
clc
add
xor
jmp
jns
out
stos
imul
aas
imul
movsl
repnz
es
imul
pusha
sbb
adc
not
xor
or
mov
xchg
cli
lahf
mov
sbb
or
lahf
int
mov
lea
mov
jnp
lods
lea
lret
pushf
inc
mov
inc
jno
icebp
push
or
jp
xchg
mov
mov
or
sub
pop
ret
nop
dec
cmp
xor
push
mov
out
out
jecxz
or
xchg
xchg
in
iret
repnz
push
sub
sub
cmp
int3
mov
and
jmp
mov
push
loopne
fbld
cwtl
popf
lcall
gs
adc
inc
mov
je
push
jb
dec
push
push
mulb
insl
pop
cs
sub
push
out
stc
bound
cmc
notb
bound
insl
mov
lock
clc
mov
cmpl
jnp
dec
inc
jne
adc
fiadds
xchg
and
sbb
out
cli
lods
ljmp
sahf
xor
cli
sbb
mov
lock
push
cmp
lret
sarl
ds
mov
jns
dec
adc
sahf
xchg
adc
pcmpeqw
pop
adc
xchg
jns
push
xchg
punpckldq
adc
sub
das
add
hlt
stc
imul
cli
pop
pop
jnp
out
xchg
popa
mov
inc
aad
pop
imul
inc
push
adc
into
aas
push
rep
mov
mov
in
mov
xchg
xor
inc
cmp
incb
fildll
aam
notb
aad
movsb
movsb
ja,pt
adc
jae
jecxz
pushf
out
mov
xor
pop
sahf
and
aas
xchg
push
jne
jns
inc
jl
ss
xor
mov
lcall
ret
xlat
inc
jmp
pop
mov
push
dec
or
xor
cmpsl
push
stos
cmp
push
push
or
das
fincstp
xchg
jmp
fstpl
mov
int
cwtl
iret
mov
mov
lods
add
repnz
adcl
subb
inc
sahf
mov
pop
sub
repz
push
test
repnz
push
pop
mov
das
nop
xchg
sub
sbb
jb
cwtl
push
dec
push
xchg
dec
mov
and
sub
pop
jnp
cmp
repz
arpl
cmp
scas
pop
jo
pop
mov
add
pop
hlt
sbb
inc
test
inc
jae
sti
loop
adc
xor
imul
push
outsb
addb
push
cmpsb
lahf
mov
adc
pushf
push
pop
in
testl
sub
mov
insl
inc
pop
popl
pop
dec
add
out
adc
popa
rorb
inc
int3
lcall
add
add
jne
data16
mov
inc
in
xorl
add
das
jmp
iret
adc
jmp
pop
adc
dec
shll
ss
into
mov
in
mov
jecxz
adc
pusha
loopne
aaa
fdivrl
stos
mov
icebp
cld
inc
fstpt
dec
and
sbb
mov
shl
sbb
adc
dec
adc
movsl
mov
inc
ljmp
jp
lahf
aas
out
js
cmpsb
sbb
sti
in
ljmp
cmp
into
mov
in
push
adc
mov
outsl
sub
jbe
popf
sub
xchg
loopne
add
ja
xchg
or
mov
popf
test
js
ljmp
jmp
jno
push
inc
mov
je
aas
fldl2e
icebp
pushf
idivl
cmp
or
pop
mov
dec
test
and
jp
data16
and
xchg
xor
push
leave
std
dec
popf
xchg
cld
sbb
or
loop
mov
jns
mov
dec
push
push
sbb
repz
fwait
sub
fsubs
or
or
adc
mov
sbb
jmp
addr16
pop
rcrb
out
xchg
adc
test
js
sub
push
into
in
xlat
stos
fs
cwtl
mov
and
mov
and
cmp
dec
ret
jnp
inc
rorl
push
mov
inc
lds
push
loop
xchg
in
cmp
cltd
mov
repnz
idiv
movsl
inc
int3
cmp
cld
and
addr16
mov
pop
mov
mov
push
pop
ret
lods
mov
sub
mov
cld
cltd
dec
popa
add
push
inc
cmp
inc
jae
int3
andl
cltd
fadds
mov
or
mulb
std
ljmp
xchg
bound
mov
les
mov
inc
sarb
mov
mov
mov
scas
scas
loop
xor
cmp
leave
pop
sar
add
sbb
sub
arpl
sbb
test
lods
cs
lret
pop
push
test
cwtl
insl
dec
mov
mov
push
inc
add
xor
cmp
jmp
cli
jo
jmp
sub
jo
je
sbb
pusha
pop
xchg
jmp
inc
add
into
clc
pop
iret
pusha
xchg
push
fnstsw
and
js
out
jg
inc
mov
sub
inc
mov
mov
mov
in
mov
pop
inc
add
xlat
sbb
imul
sarb
std
inc
push
and
adc
into
imul
xor
scas
sub
popa
mov
movsl
dec
pop
sarl
out
pusha
insb
xor
jecxz
scas
subl
out
mov
stos
fstl
dec
dec
mov
lea
arpl
sub
stc
lahf
outsl
fsubr
pop
lret
mov
inc
std
jb
cltd
mov
jne
xchg
int
mov
fists
xchg
and
jmp
sub
stos
cmp
jl
nop
jp
movb
insl
stos
jmp
popa
icebp
xchg
in
fstps
mov
and
push
dec
push
cmc
xor
jns
dec
sbb
xlat
pop
mull
xchg
dec
sub
repz
or
xchg
loopne
js
push
adc
sub
jo
xchg
pop
adc
imul
mov
mov
rorl
jns
mov
mov
xor
jnp
jbe
add
push
xor
sbb
add
sub
in
sti
mov
inc
cs
mov
shrb
mov
fstps
imul
rep
inc
pop
stos
sub
ret
push
inc
mov
outsb
jge
out
loope
outsb
repnz
insb
iret
rcrl
out
out
call
ret
shl
add
jbe
aaa
jle
jge
mov
cmp
jnp
lret
ret
rol
bound
lock
pop
cld
pushf
hlt
fs
sub
sub
sahf
repz
lret
mov
test
adc
sbb
das
mov
int3
mov
fdivs
mov
js
xor
and
sarl
out
xchg
jmp
ds
lret
sbbb
js
cli
outsl
nop
dec
popa
jecxz
arpl
shl
mov
add
inc
ljmp
xor
in
mov
cmp
mov
or
or
sbb
inc
and
aad
lret
sub
gs
inc
pop
call
jbe
push
dec
pusha
pop
lret
mov
sarl
in
jnp
testb
jg
fcomip
pop
fcompl
das
push
jno
xchg
jne
inc
movb
test
inc
xorl
sub
inc
leave
xlat
cmp
pop
sub
stos
mov
out
push
push
mov
xor
and
pop
mov
mov
cmp
test
sar
xor
addb
pop
push
and
xchg
jmp
pop
inc
jno
loop
mov
dec
in
test
pop
and
push
adc
adc
jmp
pop
mov
popa
mov
insl
xchg
in
mov
dec
les
bound
mov
mov
jecxz
jne
daa
pop
test
movsb
mov
mov
and
mov
jb
das
out
jns
mov
nop
arpl
mov
sbb
bound
inc
xchg
inc
jmp
andl
push
inc
test
xor
cmp
dec
nop
call
xor
adc
dec
jp
mov
aad
inc
in
push
dec
addl
inc
jl
cmp
push
mov
xor
and
xchg
mov
popa
inc
xchg
xor
sti
ficoms
sbb
jns
lret
jg
mov
popa
in
cltd
jns
popf
xchg
fwait
cmp
cmc
daa
mov
stc
stos
dec
gs
outsl
movsb
out
jae
cmp
cmp
push
jmp
dec
push
es
pusha
mov
inc
inc
sbb
scas
imul
xchg
in
xchg
enter
sete
imul
jge
shl
repz
test
fisubl
mov
mov
rcr
cmp
mov
testb
add
sub
mov
inc
push
call
jno
loopne
pop
sbb
outsl
adc
ljmp
sti
and
idivb
pop
lods
mov
movsb
add
xlat
cmpsb
lods
or
hlt
mov
shrl
cmpsb
sbb
add
ds
punpckhdq
add
sbb
dec
jo
fnstsw
lds
add
outsl
dec
xor
push
xlat
adc
add
xor
aaa
mov
lcall
cmp
pcmpeqd
repnz
les
mov
loopne
adc
cli
ror
xor
jge
gs
test
sbb
aaa
or
lods
daa
push
enter
pop
push
xor
sub
inc
sub
mov
inc
jg
leave
cwtl
xchg
adc
jb
pop
xchg
mov
cmp
mov
inc
mov
mov
jle
xchg
push
inc
jl
mov
cld
dec
jge
and
xor
mov
jne
repnz
add
mov
ss
mov
cli
pop
icebp
and
pop
push
cmpsb
pop
add
mov
sbb
sub
jne
stc
mov
lock
mov
or
subl
jno
imull
test
jae
xchg
in
mov
mov
cmp
imul
pop
stos
mov
dec
add
lea
aaa
dec
mov
inc
repz
movsb
inc
jp
sbb
ret
sbb
lock
add
insl
inc
lret
dec
packsswb
out
pop
xchg
jnp
hlt
shrl
pushf
inc
push
and
jg
loopne
sub
int
cli
cmpsl
jle
mov
mov
fistl
nop
addr16
mov
addb
or
iret
sub
imul
sbb
jne
mov
icebp
movsl
xor
and
sub
mov
aas
pop
adc
sti
jo
xchg
ret
movsb
cmp
fdivp
cwtl
lock
or
jecxz
push
lahf
xor
sbb
xlat
scas
stos
inc
test
xchg
mov
ret
movsb
aad
out
pop
rep
mov
mov
mov
jg
xchg
jl
cmp
inc
add
call
xchg
jge
ret
fsub
negl
xor
insl
test
movsl
outsl
adc
xchg
cmp
mov
jmp
into
jl
enter
stos
jl
dec
ss
gs
jb
mov
mov
lret
dec
dec
mov
addr16
ret
repz
cmp
nop
or
pop
les
mov
add
push
adc
insl
fnstcw
mov
add
movb
add
jb
repnz
fnstsw
loop
jmp
fwait
enter
insl
sub
pop
jnp
push
lock
mov
lods
mov
push
fildll
bound
dec
xchg
cmp
in
das
icebp
dec
int
subl
cwtl
fs
cmpsl
cmp
fdivp
rorb
jno
lea
push
lahf
ret
push
shrl
mov
mov
sub
inc
jle
or
jnp
rorl
jno
push
pop
mov
insb
clc
faddp
not
adc
jbe
bound
imul
push
xor
or
insb
cmp
jg
jl
inc
gs
fistpl
adc
fwait
adc
ja
push
jmp
ret
adc
mov
aaa
push
das
inc
arpl
cmp
int3
sbb
xchg
or
dec
orl
stc
fcmovnu
mov
mov
scas
out
es
push
test
test
rcrb
mov
inc
stos
xchg
or
xchg
popa
adc
adc
in
xlat
nop
sbb
mov
daa
mov
add
adc
mov
push
int
negl
or
mov
rcrl
pop
push
add
test
fbld
sti
xchg
daa
inc
add
fucomi
add
shrb
mov
mov
nop
test
fsubrs
inc
dec
mov
arpl
rcll
inc
mov
inc
rolb
mov
adc
psubsw
jl
jmp
scas
adc
in
xchg
mov
xchg
cwtl
mov
dec
int
mov
in
adc
dec
cwtl
sub
jge
shll
cmp
js
sub
stc
push
in
pop
jle,pt
ret
mov
pop
daa
inc
ja
xchg
jmp
mov
mov
xor
ret
out
cli
outsl
add
out
pop
xchg
test
in
xchg
les
insl
iret
adc
sub
mov
xchg
sub
fbld
jo
push
ret
mov
test
mov
out
mov
icebp
shll
mov
mov
out
cli
jle
cmp
mov
enter
inc
lret
mov
jp
mov
dec
loope
gs
cmc
hlt
out
jne
mov
lds
dec
bound
dec
lock
in
in
scas
inc
adc
lock
xor
iret
fisubs
mov
into
xchg
leave
inc
jno
divb
mov
sub
lret
mov
pop
imul
mov
xchg
nop
dec
test
daa
testl
ret
push
mov
sbb
xor
fwait
push
jp
sbb
aaa
outsl
push
std
adc
iret
aas
rolb
mov
popa
or
fimuls
pop
fwait
gs
pop
sbb
daa
fnsave
sub
inc
push
nop
xor
adc
je
sti
push
imul
aaa
hlt
fisubs
jmp
aam
sub
sbb
std
or
test
pop
movsb
lret
gs
js
cmpsb
das
in
into
xchg
push
imul
aad
repnz
jbe
outsl
arpl
out
mov
jb
or
dec
or
stos
ret
and
les
subb
xor
shlb
mov
push
add
insb
mov
push
pushf
dec
sbb
aaa
jns
jo
jnp
pop
and
in
mov
testl
cs
movsl
fwait
cmp
roll
loopne
mov
sbb
jmp
in
cld
outsl
cltd
ret
fsubrl
sub
mov
jmp
dec
ret
push
pop
aas
shll
push
jmp
lds
mov
jle
push
sub
test
shl
lret
xor
mov
insl
inc
stos
insl
push
add
pop
jb
test
out
pop
arpl
test
cld
in
movsb
out
push
fstpl
decl
mov
int
cs
in
cmp
sar
jo
movsl
popf
pop
and
fimuls
mov
push
insl
rorl
jbe
jae
jl
cli
add
cs
inc
mov
add
loop
pop
movb
notb
pop
sub
stc
ljmp
out
in
pop
out
shlb
out
sbb
add
aaa
movsl
loopne
cmpsb
add
xor
repnz
gs
ret
push
xor
cmp
icebp
lock
sbb
sbb
fmul
xchg
fcoml
outsb
mov
xchg
out
jg
sub
mov
xor
jp
leave
ja
out
in
cmp
cmp
sub
and
push
aad
in
insl
cltd
mov
fdivl
add
cmpsl
int3
ss
and
inc
dec
iret
scas
hlt
hlt
jne
mov
xchg
or
fists
in
subb
jo
and
xlat
pop
fsubrs
xchg
push
shr
std
cwtl
testl
jns
shll
mov
xor
arpl
nop
mov
fmulp
pop
testb
jae
xchg
fdivl
jmp
jl
gs
out
fs
in
jne
push
adc
dec
insl
jnp
scas
gs
and
xchg
ljmp
jl
push
or
int
add
xchg
mov
or
stos
test
cmp
pop
or
lods
rorl
enter
xchg
or
mov
mov
ja
pusha
popf
fisubrl
jo
sbb
insb
pop
and
jp
pop
aad
or
mov
out
out
out
outsb
jmp
fnsetpm(287
push
mov
dec
inc
nop
mov
mov
sub
movsb
das
stos
jge
and
dec
rorb
fwait
les
popf
sti
scas
frstor
rorb
sbb
into
mov
fiadds
hlt
arpl
sti
inc
shll
jb
enter
int
shrl
or
mov
dec
jne
jnp
push
cmp
pop
pop
popa
rcl
in
or
out
jmp
pusha
andl
mov
and
mov
pop
cli
push
mov
sbb
dec
sbb
imul
int
clc
cmp
pop
sbb
clc
mov
loope
xlat
fcom
inc
ret
sub
outsl
loopne
push
scas
hlt
and
dec
lock
adc
inc
in
scas
sbb
push
jl
daa
nop
mov
sbb
movsl
cmp
jecxz
adc
enter
jno
and
jo
push
push
jmp
push
and
sbb
lret
jo
ds
jl
test
ss
out
std
das
add
jle,pn
ffree
add
sbb
inc
jb
xor
pop
xchg
outsl
addr16
xor
das
or
jnp
scas
pop
mov
add
xchg
in
pop
cmp
ja
ret
rcl
jecxz
lcall
clc
add
or
adc
ss
insb
add
fdivs
hlt
adc
and
mov
outsw
jg
iret
push
pop
inc
lods
js
mov
jle
dec
xorb
sub
mov
mov
mov
mov
jno
cmp
pop
cwtl
mov
adc
xor
cmp
dec
inc
push
mov
jg
mov
in
jo
into
mov
fidivl
inc
repz
pop
push
imul
ror
adc
mov
pop
adc
mov
sbb
xchg
mov
push
jle
call
dec
jb
and
je
lret
and
mov
adc
fists
mov
mov
pop
mov
lcall
fdivl
out
sahf
scas
lret
jle
add
scas
push
in
in
pop
sub
aaa
jne
xlat
pop
and
pop
push
mov
and
mov
jecxz
ljmp
movups
das
stc
mov
roll
aaa
fstps
leave
adc
adc
sub
jl
cmpsb
in
or
push
bound
push
sub
stos
ret
pop
inc
xchg
outsb
push
daa
ss
mov
xchg
jmp
inc
mov
sbb
xchg
out
in
cmp
inc
cmc
push
dec
xchg
dec
jg
and
cmc
stos
mov
clc
mov
js
xchg
sbbl
in
inc
cmpsb
pushf
mov
jae
daa
inc
setle
ss
add
clc
adc
jb,pt
ret
pop
add
pop
mov
dec
xchg
jge
pushf
mov
mov
in
lds
inc
adc
and
xchg
mov
ret
push
das
rclb
nop
fsubs
mov
mov
insb
jle
sbb
mov
xchg
push
xchg
xor
out
jecxz
sbbb
cli
pop
aas
pop
xchg
mov
fmull
cmp
sub
mov
fldenv
push
mov
mov
pop
sbb
xchg
fbstp
sub
xchg
adc
cmp
scas
xchg
adc
jge
pushf
lods
pushf
cmpl
stos
les
idiv
adc
mov
inc
inc
mov
neg
mov
pop
dec
cmp
and
int3
dec
lea
mulb
push
bt
or
sub
mov
and
ljmp
xor
leave
mov
sub
adcl
cmpb
mov
aas
idiv
push
mov
jo
dec
stos
rorl
imul
cmp
fs
mov
out
push
test
push
fstl
repz
push
jbe
mov
aam
daa
icebp
stos
xlat
fcom
cmp
scas
and
ror
enter
stc
xor
cmc
sarl
es
jno
mov
pop
test
dec
adc
mov
mov
insb
loope
sahf
cmp
sbb
leave
int
sub
insb
lret
fidivs
roll
adc
rorb
jbe
pushl
nop
je
mov
leave
mov
and
ficomps
ret
sub
leave
ss
pop
adc
sub
push
xor
jmp
push
cltd
xor
adcl
mov
jecxz
adc
push
dec
add
cmpl
jb
sbb
pop
adc
pop
arpl
dec
jbe
add
mov
repz
sbb
pop
aad
repz
test
mov
out
xchg
and
mov
jb
pop
insl
popa
mov
movb
cmp
push
dec
push
jne
pop
pop
dec
popf
pushf
outsb
aas
ret
movsl
aaa
das
cmp
cld
ja
xchg
add
pop
cld
test
inc
shll
xchg
xlat
xor
pop
xchg
das
fistps
xor
push
movsb
xchg
ja
lcall
xor
int
popf
mov
adc
fistl
cmpl
jg
push
mov
outsl
pop
cs
adc
daa
das
adc
inc
test
in
and
xchg
adc
cmpsl
adc
mov
or
lds
pop
std
clc
xor
mov
loope
cs
xchg
cmp
jnp
cli
shll
push
dec
mov
test
dec
sub
adc
scas
icebp
or
loope
mov
or
cmp
mov
imul
shrl
ss
push
lods
std
jp
adc
sbb
shrl
add
dec
insb
dec
hlt
sti
fidivs
pushf
out
push
mov
stos
inc
pushf
cmp
inc
adc
mov
aad
and
jge
outsb
or
mov
xor
cmp
or
mov
lcall
sbb
lods
sbb
and
jno
sub
push
das
sbb
cmp
dec
or
push
test
xchg
out
cmp
add
sub
out
arpl
mov
push
enter
xchg
or
adc
dec
inc
out
call
and
inc
add
sti
pop
scas
lcall
lods
adc
jns
loopne
sub
pop
adc
mov
inc
lcall
sub
xchg
mov
cmp
pop
mov
inc
mov
and
in
call
mov
sub
xchg
and
aas
mov
jecxz
xchg
fwait
jge
arpl
sub
in
ret
mov
in
mov
adc
clc
and
dec
sub
loope
jg
int3
lods
inc
lock
hlt
dec
or
jge
lods
fbld
stos
daa
nop
imul
cmp
int
xor
jb
iret
mov
xor
jp
mov
in
push
push
dec
xchg
pushl
xlat
cli
lds
roll
ss
sahf
ja
inc
ret
addr16
push
test
repnz
add
pop
inc
jbe
test
push
sahf
mov
insl
cmpsb
pusha
and
cs
notl
mov
inc
xor
jmp
scas
mov
inc
fildll
gs
mov
mov
push
dec
pop
outsb
popf
aas
leave
xlat
shll
iret
js
cmp
sahf
mov
popa
jecxz
mov
imul
shll
pop
popf
cmp
and
sub
and
mov
dec
mov
fisubrl
negb
sub
leave
cli
in
lea
push
xchg
lret
push
push
cmp
mov
shlb
loop
pushf
cli
cmc
cld
roll
and
inc
dec
or
xor
rorl
js
or
mov
or
jle
cli
adc
addr16
popf
mov
jl
leave
rorb
pop
sub
pop
jnp
mov
jno
sbb
and
ss
popa
mov
push
jne
pop
insb
xor
jno
andl
pop
add
xor
scas
jb
in
cmp
lret
out
leave
push
mov
clc
inc
aaa
jl
test
jne
cmp
jbe
aas
call
sbb
outsl
mov
mov
dec
in
pop
jp
jb
lds
dec
mov
add
push
nop
popa
jno
push
xor
fnstcw
repz
outsl
push
shl
push
daa
cmp
ljmp
jle
push
push
rolb
xchg
stos
mov
xlat
jo
pop
mov
mov
push
sbb
jg
sbb
lret
cmp
divb
adc
and
stos
adc
mov
movsb
lret
std
mov
in
mov
lcall
int3
out
cmp
jne
pop
jo
call
rol
cld
data16
pop
sti
push
mov
sbb
sub
and
adc
add
adc
add
repnz
adc
mov
add
add
add
mov
add
add
mov
clc
adc
inc
inc
ja
adc
test
sahf
cmp
adc
add
stos
scas
scas
popf
add
daa
scas
xchg
sbb
push
mov
pop
inc
sti
add
movsl
mov
jg
xchg
jb
mov
arpl
mov
pop
mov
loop
scas
bound
addr16
insb
cmp
in
pop
das
mov
push
jecxz
test
lds
mov
leave
insl
mov
stc
sub
mov
loopne
xchg
out
popf
scas
sahf
in
mov
mov
jns
push
xchg
sti
jp
pop
jne
or
cmpl
pop
sbb
orb
xchg
inc
stc
sub
mov
adc
je
outsb
orl
jae
mov
jnp
out
sti
push
mov
call
loop
pop
ret
pop
xchg
cmp
rorb
push
add
push
clc
and
ficoms
push
fbld
jg
inc
inc
dec
or
mov
xchg
decb
out
inc
aam
rolb
cmc
icebp
sbb
push
jl
dec
mov
inc
stc
add
into
sbb
das
push
add
and
pop
jno
push
and
mov
arpl
mov
loopne
pop
inc
ja
pop
push
out
in
into
andb
mov
sub
pop
int
repz
out
adc
repnz
movsb
pop
andb
sti
cmp
sub
pusha
xchg
inc
push
mov
lods
lods
mov
cli
xor
loope
das
sub
cmp
sbb
adc
js
cli
insl
inc
inc
lahf
sbb
mov
lcall
enter
push
xchg
sub
add
cmpsb
mov
and
mov
mov
aam
popf
push
xchg
shl
mov
sarb
sub
xorl
ljmp
xchg
xor
fadd
add
push
cmp
cmp
sbb
mov
fistps
out
push
lret
iret
mov
mov
lret
outsl
cs
aas
and
js
and
sub
pop
sbb
aam
xor
xchg
or
aad
sar
imul
or
outsl
xchg
lret
sti
fcom
ds
inc
jne
sbbl
add
mov
sub
arpl
loopne
test
lcall
lds
ds
movaps
and
imul
or
xchg
iret
sbb
jl
pop
lock
imul
dec
push
addr16
sub
aam
and
add
add
mov
bnd
imul
add
jg
or
adc
mov
adcb
std
sti
cmp
mov
pop
dec
push
and
cwtl
mov
jne
lcall
cmpsl
and
cmpsb
and
popf
or
imul
and
in
xorl
sub
inc
mov
bound
pop
lds
xchg
xchg
mov
lods
mov
leave
mov
arpl
pop
sub
fistl
out
mov
dec
fst
jmp
sub
dec
aad
outsb
int3
mov
daa
pop
pop
mov
jns
pop
out
jmp
add
sub
xor
xchg
cmc
xchg
jmp
xchg
leave
mov
lcall
mov
test
cli
mov
mov
pop
sbb
mov
xchg
dec
xchg
fcmovnu
xchg
mov
push
mov
xchg
jg
outsl
pop
sbbb
push
xor
xchg
dec
outsl
mov
arpl
rol
mov
clc
xor
pop
cmpsl
enter
mov
and
ljmp
or
dec
insl
lcall
jl
mov
jmp
xlat
or
xor
test
cmp
jmp
dec
mov
shl
cmp
cmp
daa
icebp
push
add
pushf
push
fsubrs
pop
adc
and
push
sahf
cmp
cld
insb
inc
leave
adc
sarb
mov
push
sub
fisubs
arpl
mov
cs
lods
xchg
not
das
pop
add
or
mov
jle
xchg
pop
lret
outsl
mov
daa
insl
fisubrl
push
xor
mov
sahf
push
bound
sahf
dec
fdivrl
push
push
inc
mov
test
mov
mov
ror
test
xor
mov
fsts
ljmp
lds
addr16
lock
dec
pop
adc
in
mov
cmp
mov
adc
pushf
cltd
insb
lret
lods
and
dec
pop
mov
dec
inc
fdiv
push
jbe
xchg
jns
std
test
push
or
inc
arpl
xchg
std
in
and
jp
cmp
rorb
add
xchg
aaa
lods
inc
gs
jne
int
pop
lods
mov
push
out
xchg
xchg
or
mov
sbb
mov
cmpsl
xchg
adc
sub
lret
loopne
jns
inc
jb
sub
xchg
dec
mov
mov
push
imul
test
loop
orb
push
sar
mov
pop
pop
sub
mov
or
mov
mov
rcrl
mov
cmp
and
lods
ss
xchg
sub
push
xor
movsb
adc
cli
sbb
fidivrs
dec
mov
add
mov
mov
cmp
mov
jnp
push
ret
xor
inc
push
int
cmp
push
ret
and
mov
or
in
or
mov
cmp
in
mov
mov
mov
push
push
rclb
test
outsl
mov
cltd
add
jae
adc
adc
push
fisttps
push
mov
repnz
sarl
xchg
jae
lods
lret
xchg
int3
lds
inc
addb
pop
mov
cld
add
aam
fwait
pop
mov
aas
rcr
mov
jne
pop
outsl
sub
sbb
pop
aad
adc
adc
push
adc
lea
inc
mov
xor
inc
test
push
mov
pop
inc
jno
sub
call
test
pop
push
jl
jecxz
sbb
mov
outsl
shll
pop
repz
lds
dec
cli
mov
js
xchg
push
add
pusha
mov
xlat
int
adc
pop
ret
call
outsl
gs
dec
cs
jecxz
mov
jp
xchg
sub
inc
sub
cwtl
test
inc
scas
movb
pop
ficompl
push
dec
fisubs
mov
iret
or
insb
in
fnstenv
jbe
mov
out
and
xchg
push
jns
sub
out
mov
lea
mov
mov
or
enter
lahf
pop
mov
ret
insb
or
fdivrl
fstpt
bound
and
loopne
xchg
cmp
add
inc
ret
insl
pop
std
pop
inc
dec
mov
icebp
jle
or
xchg
scas
cmpsb
inc
cld
pop
jo,pn
mov
cmc
ljmp
data16
push
pop
xlat
cmpsl
lcall
inc
add
loope
das
out
push
xor
clc
outsl
setne
mov
test
ret
pop
dec
jmp
out
repnz
jg
pop
daa
jp
pop
or
enter
pop
jle
and
push
fistps
gs
cli
sub
xchg
shr
xor
imul
inc
and
push
mov
adc
xchg
xchg
lods
orl
mov
icebp
and
mov
sub
bnd
int
clc
jmp
push
mov
shl
sub
or
bound
das
or
test
push
ds
sub
sub
test
pcmpgtd
sahf
xor
jg
lret
out
and
mov
xchg
xchg
stos
inc
out
or
into
scas
sub
in
ss
fidivrl
fstpt
icebp
add
jnp
add
lock
mov
inc
inc
ret
sahf
push
cmc
inc
jl
mov
imul
test
xor
adcl
mov
in
mov
and
xor
loop
ret
xor
sbb
push
push
repz
or
push
aas
xor
mov
int
or
leave
mov
mov
dec
sbb
inc
dec
mov
repz
mov
repz
aad
sub
dec
fidivrs
xchg
adc
pop
shrl
xor
out
sbb
push
lods
in
pop
jns
cld
iret
int3
xchg
jb
fidivs
cmpsl
dec
cmp
inc
mov
mov
stos
xchg
cmp
push
push
sbb
sub
mov
daa
sub
test
jg
aam
cmpsb
lock
cs
adc
mov
xor
fcomip
sbb
lea
popf
fstpt
mov
and
rorb
cmp
lock
pop
mov
test
aaa
shll
or
rol
xchg
test
adc
xchg
mov
les
and
loopne
lds
cmp
icebp
xchg
mov
ljmp
inc
add
xchg
fstpt
dec
add
and
movsb
test
mov
push
lods
test
sahf
push
gs
sbb
and
xchg
lret
iret
jg
lea
push
jb
rcrl
nop
stos
sarb
into
repnz
push
sub
mov
jo
adc
or
and
dec
sub
xchg
add
and
fwait
fadd
pusha
testl
mov
cmp
icebp
dec
and
dec
pushf
fwait
loop
aad
stc
iret
pop
xor
mov
int
out
iret
fisubrl
pusha
dec
cmp
or
cld
movsb
sub
push
xlat
or
inc
push
push
cmp
cmpsb
jg
dec
xor
test
into
inc
rclb
jne
das
jb
mov
repz
jg
xchg
pop
mov
hlt
into
sbb
cmp
xor
xor
scas
stos
fs
rolb
jne
and
aad
or
sbb
jmp
jg
mov
sub
cmpsl
mov
mov
divl
adc
cld
cmp
int
divl
inc
dec
inc
jecxz
push
mov
fs
ret
in
inc
pop
out
sahf
and
pop
insl
inc
fdivrl
sub
fistl
sti
jnp
addr16
xor
dec
jmp
ds
adc
xor
sbb
fnstsw
sarl
and
cltd
cltd
sahf
jno
jns
mov
mov
add
sbb
and
sbb
call
and
je
ret
mov
repz
gs
lods
push
roll
push
enter
hlt
jmp
das
mov
lret
aas
or
les
lret
pop
loope
add
mov
mov
out
mov
in
std
mov
or
mov
adc
push
test
sbb
and
test
cli
sti
sub
cmpb
dec
ret
lret
pop
cmp
mov
dec
sbb
lds
das
push
int
stos
sti
sub
sbb
inc
cmp
xchg
sbb
mov
xchg
cltd
addb
outsb
inc
lods
cwtl
mov
cmp
lds
push
mov
mov
lea
jnp
in
repz
sbb
loopne
in
xor
xchg
dec
inc
add
push
pop
mov
dec
mov
dec
ret
fcoms
ds
outsb
dec
pop
ss
cmp
ret
push
scas
sahf
test
mov
add
pop
inc
outsl
mov
into
fwait
pop
mov
stc
mov
mov
jle
mov
mov
mov
push
icebp
out
cmp
js
pop
inc
mov
mov
ret
lahf
push
arpl
pop
sarb
sti
in
testb
inc
pop
mov
mov
mov
push
test
dec
imul
mov
cmpb
mov
push
shl
dec
xchg
inc
cld
xor
aas
ret
xor
mov
xorl
sbb
adc
pop
lods
push
inc
loop
shrb
scas
or
and
daa
mov
loope
rcrl
fs
inc
pop
ficoms
insl
jecxz
insl
jae
add
movb
into
cmp
addr16
pop
jns
pop
test
sbbb
into
push
test
ja
and
push
in
inc
out
loopne
iret
icebp
mov
cmp
mov
or
sbb
sub
imul
jb
notb
in
iret
jge
testl
sub
vpavgb
stos
push
cmp
les
mov
mov
mov
xchg
dec
push
pushf
and
data16
push
sti
xor
mov
test
insb
movsl
sub
inc
pop
adc
loop
mov
xlat
es
mov
dec
pop
mov
andps
and
fisttps
dec
in
es
pop
mov
mov
cmp
ja
jle
pop
mov
mov
test
xor
data16
add
pop
jbe
divb
inc
xorb
jmp
lret
lret
sub
cli
mov
fcmovb
push
xor
or
out
mov
push
or
pop
cmc
lret
jns
js
test
fwait
outsl
or
jmp
adc
mov
icebp
adc
mov
jne
js
in
push
repnz
and
mov
push
call
aam
cmp
dec
add
subl
or
xor
into
inc
and
add
sbb
cltd
adc
and
ret
out
add
fnstsw
mov
mov
mov
mov
mov
cltd
mov
outsb
stos
jo
lock
inc
clc
mov
and
shlb
jmp
es
mov
test
and
hlt
stos
loop
xor
inc
ret
aaa
sahf
sub
out
aas
xor
int3
sub
mov
push
int
pushf
shl
cmp
insb
push
shld
fwait
jmp
aaa
push
mov
inc
sub
xor
dec
xchg
cmp
sub
addr16
mov
push
std
addr16
mov
jge
lret
insb
out
insb
mov
daa
add
jecxz
inc
or
jns
mov
addb
mov
mov
popf
jnp
jmp
push
jp
mov
ss
int
mov
jae
jbe
dec
jle
icebp
push
shlb
fstpl
xchg
sbb
outsl
mov
mov
jge
push
into
lods
out
inc
cs
cmp
sub
jecxz
jns
loopne
mov
sub
pop
imul
enter
into
fisttpll
ret
in
and
loopne
add
sbb
or
mov
sti
xor
das
add
pmaxsw
cli
rol
ljmp
test
mov
jae
mov
fwait
ret
in
mov
dec
lahf
loopne
mov
sub
inc
mov
addl
jae
xchg
dec
sbb
rorl
imul
mov
sub
adc
lods
nop
imul
test
lret
out
fnstenv
sti
insl
lds
push
add
adcb
nop
movl
xorl
jno
fiaddl
aad
sub
cmpsl
cwtl
jbe
pop
push
loop
or
pop
ljmp
incb
clc
fbstp
xor
and
aas
shlb
jg
inc
or
mov
jno
pop
xor
cmpsb
sub
adc
pop
out
or
dec
imul
xor
out
xorb
xor
cs
std
inc
inc
negb
jmp
aaa
push
xchg
sbb
dec
pop
mov
adc
rorw
sahf
test
ljmp
popa
stos
mov
jo
fldt
adc
subl
push
icebp
outsl
push
sub
lret
pop
shll
dec
nop
shl
daa
xor
dec
mov
cmp
pop
adc
dec
mov
mov
and
mov
aad
inc
cmpsb
lret
dec
movsl
fwait
dec
push
sarb
mov
stos
push
pmulhw
cmp
roll
or
cmp
mov
sbb
ret
negb
call
xor
mov
cmp
cld
ret
jnp
jle
aas
dec
or
inc
dec
jae
mov
jb
leave
cmp
xchg
inc
popf
jno
sbb
pusha
test
mov
movsb
and
xor
and
pusha
rol
dec
jmp
and
mov
cmp
shl
test
push
test
push
push
popf
xor
and
jle
mov
test
and
inc
jb
ljmp
push
jno
lret
pop
lock
popf
fimull
adc
mov
add
cmpsb
add
or
repnz
push
movsb
cld
sar
rol
rorb
cli
push
adc
fnstenv
js
mov
ret
cmp
add
inc
fs
in
xor
rolb
and
imul
bound
les
outsl
cmpsl
mov
lock
jge
mov
mov
cli
insl
xacquire
and
roll
jb
fwait
or
mov
in
sub
lret
mov
xchg
testb
sbb
adc
mov
inc
push
lds
dec
mov
in
mov
jnp
addl
inc
ret
sahf
adc
dec
in
imul
ss
fmul
stos
in
out
and
lret
xor
push
jbe
sbb
scas
mov
push
push
cmp
pop
or
push
push
std
fidivl
fcmovne
push
cli
mov
dec
xchg
in
aas
xor
aas
sar
xor
mov
push
or
std
and
jge
mov
mov
insb
dec
leave
cmp
in
pushl
popa
adc
pop
pop
mov
or
fildl
jge
jns
ljmp
add
xchg
test
test
fs
pop
scas
and
cmp
jns
xlat
add
insl
je
add
cmp
and
lcall
and
xor
pop
loop
lock
dec
adc
xlat
jl
sub
pop
xlat
push
nop
jns
lea
cmpsb
push
jnp
and
push
jb
arpl
stos
and
test
ror
out
cld
xchg
lret
and
fstp
sub
jnp
xchg
pushf
out
push
or
fisubrs
aas
data16
pop
push
ret
pop
popa
inc
cld
cmp
in
sub
pop
add
adc
jp
das
icebp
in
fisttpl
aad
ret
jnp
or
lea
insl
mov
adc
or
and
inc
ja
stos
sbb
cmp
ficoms
mov
imul
jnp
int3
push
inc
movsb
rep
std
movsb
cmp
mov
inc
dec
leave
push
sarl
imul
movsl
or
pop
mov
mov
repz
popa
insb
jl
dec
or
cwtl
dec
dec
xchg
int3
dec
lds
mov
bound
stos
mov
mov
fs
jo
imul
pop
mov
xor
out
sbb
cli
jne
adc
aam
and
lret
pop
movsb
aaa
iret
rclb
movsl
out
xchg
dec
mov
cmp
mov
test
and
push
dec
ds
mov
out
sub
shrb
or
in
pop
xchg
dec
fsubl
jbe
jns
mov
push
cltd
lods
fsts
fs
std
loopne
adc
lret
sub
paddd
js
adc
dec
adc
jae
aaa
pusha
sti
ja
fwait
dec
out
or
pop
hlt
ja
dec
enter
cmc
fildll
negl
js
subl
sbb
stos
push
dec
cmpl
mov
out
movsb
cmpsb
test
jnp
mov
mov
loopne
in
cmp
icebp
jecxz
jmp
cs
daa
xchg
out
push
aaa
andb
cmp
pop
notb
rorl
fisubl
int
imul
fcoms
mov
inc
daa
cld
mov
add
movsb
je
adc
push
mov
sarl
add
mov
inc
fiadds
nop
rol
cmpsb
enter
adc
jns
daa
lret
and
mov
out
shrl
mov
push
fcoms
mov
cltd
push
pop
addl
sbb
cld
pusha
jp
jae
sub
inc
mov
shlb
mov
call
sub
inc
pushf
test
sbb
jl
test
hlt
fistps
daa
rorl
es
pusha
aaa
mov
ficoml
cmp
xchg
and
or
push
insl
dec
sub
mov
jns
xorl
movsb
dec
lods
add
test
xor
add
outsb
inc
jmp
insl
sub
sarl
xor
fisubrl
rolb
enter
fiadds
sub
ljmp
inc
push
movsl
sbb
sub
inc
rcl
mov
scas
jbe
addb
js
push
pop
jle
fwait
lret
mov
adc
leave
sbb
cwtl
and
lods
adc
std
adc
push
call
iret
movsl
sub
sbb
push
mov
addb
pop
inc
xchg
add
daa
mov
orl
lret
jle
cs
xchg
cmp
xor
rcrl
xchg
adc
and
and
repnz
xchg
stos
sbb
inc
sbbl
stc
stc
jge
push
cmp
ds
pop
pop
dec
mov
push
xlat
jb
in
loop
jb
mov
stos
xchg
pop
and
jae
mov
mov
xor
mov
jne
xchg
jno
sti
cwtl
sti
jne
or
call
jmp
dec
ret
insb
je
mov
lock
lea
dec
addr16
dec
sarb
sahf
je
sub
mov
flds
mov
popa
mov
inc
rol
rclb
rol
lahf
pop
in
pop
je
push
icebp
push
lret
or
mov
cltd
or
fcom
out
xor
dec
pop
xchg
push
enter
mov
cmp
sbb
test
repnz
or
sbb
lret
inc
dec
and
lods
imul
mov
cwtl
rorl
scas
cli
mov
sbb
sbb
outsl
imul
sub
dec
popf
and
mov
mov
cmp
jb
push
xchg
lret
pop
xchg
stc
inc
addr16
aas
test
fcmovnb
bswap
scas
fisubrl
cmp
add
jl
repz
dec
jno
rcll
sbb
fs
push
xor
xor
mov
dec
rcll
mov
mov
int3
lds
rolb
xchg
or
mov
sub
fdivp
jo
jno
and
or
clc
pop
loope
stos
inc
xorb
pop
mov
out
or
adcl
in
out
fwait
pop
jae
insb
dec
push
fisttpll
jne
xchg
add
icebp
jp
jecxz
xchg
pop
dec
mov
mov
fistl
and
mov
fnstenv
dec
pop
inc
rep
ret
cmc
sbb
movsb
sar
cwtl
inc
outsb
inc
push
in
xor
push
dec
cmp
cmp
pop
imul
pop
mov
cmp
fldt
insl
dec
std
push
dec
mov
sub
aam
addr16
push
or
jg
stos
mov
stos
cs
dec
das
and
sub
lds
mov
mov
inc
stos
dec
sbb
js
mulps
adc
cmp
add
add
adc
pushf
and
mov
xchg
faddp
fnstsw
cmpsb
adc
cmp
jne
decb
inc
mov
mov
cmpsl
or
fstpl
dec
in
mov
inc
xor
cmp
mov
or
jbe
flds
aaa
jmp
pushf
sti
andb
fcompl
jae
out
cmpsb
and
xlat
push
es
and
xchg
pop
es
mov
gs
movsw
mov
std
imul
stc
sub
loop
repz
adc
aas
test
stc
dec
sahf
pop
jnp
mov
mov
or
adc
call
xchg
pop
std
sbb
lret
xor
inc
out
push
xor
xor
xlat
dec
sbb
mov
xor
sub
add
cmpsb
xchg
fiadds
cwtl
adc
adc
out
xchg
jg
gs
scas
aaa
sub
iret
std
push
lcall
inc
fcoms
mov
loop
out
mov
add
pop
sub
lock
rcll
jecxz
cmpsb
cmc
jecxz
scas
aaa
inc
hlt
aaa
push
mov
xchg
fs
sti
or
sbb
stos
call
in
push
push
cmp
shl
mov
xchg
rcl
jl
out
xchg
scas
push
xor
sub
sbb
sub
mov
popf
and
mov
add
imulb
outsb
xorb
sti
add
out
mov
pop
cmp
sub
repnz
fsub
lock
cmp
repz
movsb
call
insb
nop
jnp
loopne
sbb
cltd
and
pop
pop
push
shlb
mov
mov
push
adc
ja
sbb
dec
dec
nop
sti
cmpsb
mov
out
rorl
mov
imul
cmp
xchg
xchg
pushf
sbb
jecxz
dec
or
ja
call
or
imul
xor
incl
scas
mov
cmp
lret
xchg
cmp
bound
inc
inc
lret
das
jo
push
rcl
cwtl
xor
lock
mov
icebp
bound
or
outsl
into
jo
jle
or
pop
jg
aam
imul
inc
add
pusha
xor
scas
mov
test
sbb
dec
popf
xorl
jge
data16
sbb
div
std
shl
pop
rcll
add
xor
or
out
xchg
aaa
dec
popf
test
jle
idivl
sbb
jg
loop
jne
or
xchg
add
fsubl
dec
icebp
hlt
pop
das
and
negl
or
dec
fstps
pop
fcmove
movsb
outsl
sbb
adc
lods
out
pop
outsb
push
fs
pop
lods
jecxz
push
testl
cmp
dec
lahf
dec
xor
cld
fstpt
call
push
add
mov
or
cltd
mov
shll
or
loope
dec
xor
aad
insb
out
xchg
push
fnstenv
and
push
mov
mov
fstpt
insb
and
xchg
mov
inc
fs
rcll
arpl
hlt
mov
sbb
lods
pop
test
sbb
push
idivb
cmp
insb
jle
pop
sub
xor
mov
cmp
sub
xchg
adc
push
pop
mov
sbb
insb
jge
frstor
in
sub
sub
enter
mov
jb
ds
daa
jp
or
stos
add
jle
int3
sub
mov
and
jb
scas
sub
inc
ja
or
shlb
xchg
lock
rorb
fld
jle
dec
jmp
ret
sbb
aas
and
sti
mov
pop
cli
xor
or
and
insb
pop
cmp
dec
or
mov
cmpsl
lret
imul
xchg
dec
inc
mov
xchg
test
les
jns
mov
les
cmpsb
nop
xchg
pusha
xor
fninit
xchg
pusha
push
in
pop
xchg
out
jns
mov
int
xchg
add
iret
outsl
xchg
mov
cld
sub
adc
push
pusha
repnz
loope
xchg
sahf
cmpsl
inc
push
repnz
xor
and
cmp
popf
aaa
clc
fsubrl
pop
add
mov
push
mov
push
cld
iret
mov
push
test
xchg
test
xchg
pop
adc
cmove
or
push
fnsave
lods
xor
xlat
or
popfw
lock
addl
cld
das
pop
psllq
fisttpl
adc
insl
mov
jle
pop
jnp
incb
imul
std
mov
adc
test
adc
je
pop
inc
mov
ss
and
mov
mull
js
push
cmpsl
lret
inc
in
insb
ret
fistps
pop
loope
pop
xchg
and
inc
xchg
ds
scas
pcmpgtd
or
ds
mov
jo
and
int
test
sbb
cmpb
mov
enter
dec
lahf
pusha
loopne
daa
repz
pusha
sbb
xor
cmpsb
dec
popf
or
xchg
sub
push
test
out
cmp
mov
pushf
ret
cs
test
mull
xor
pop
lds
stos
lret
je
in
jp
mov
int
fnstcw
or
jne
aad
popf
sbb
sub
add
cmp
aad
cmp
push
push
adc
inc
rcr
cmpsl
and
into
fs
test
shll
add
in
pop
jg
std
lds
aam
mov
stos
in
pusha
mov
fmull
dec
rcr
pop
insb
mov
dec
or
push
cltd
jp
xchg
int3
jge
lea
and
in
and
movsl
and
jbe
sbb
insb
lret
lahf
jne
fcmove
fidivrl
dec
ror
cltd
out
pushf
sub
test
dec
lret
out
lods
pop
fdivrp
sub
or
xchg
sbb
int3
add
or
lahf
test
mov
and
loop
cmp
mov
loopne
xor
adc
sbb
daa
xlat
fwait
sti
aas
negl
out
hlt
popa
pop
xchg
or
fcmovnu
inc
dec
xchg
adc
scas
mov
cmp
sahf
adc
and
xchg
jl
adcb
aas
fnstsw
inc
mov
pop
or
dec
sub
mov
aad
push
test
popa
lock
fstl
test
arpl
pop
xor
jge
fcmovu
outsl
pop
mov
lahf
sub
das
xchg
aaa
rclb
push
lcall
fwait
mov
dec
inc
add
js
mov
mov
decb
push
gs
dec
cmp
push
das
inc
mov
mov
test
outsl
add
mov
test
rorl
stos
mov
clc
lea
or
jl
xor
aad
outsl
jl
nop
cmp
test
das
in
arpl
dec
lret
aas
loopne
xor
mov
dec
bound
sbb
movsb
adcl
aam
xchg
hlt
std
ss
adc
imul
imul
add
dec
jge
xchg
in
sbb
dec
movsb
sub
and
push
sbb
xor
mov
or
lods
xor
mov
sbb
fucomip
xor
push
daa
or
jmp
dec
sub
mov
mov
jge
xor
es
xchg
daa
mov
push
xor
je
jl
xor
subl
repz
enter
movl
xchg
push
int3
adc
add
fcmovnbe
out
in
push
pop
cmp
insl
insl
dec
adc
jmp
notl
fdivl
loopne
popa
ret
add
sarb
aaa
cmc
dec
inc
daa
sbb
push
and
orb
dec
jo
push
es
scas
jae
in
aam
xor
pop
cmp
dec
push
xchg
icebp
shlb
scas
push
rorl
sbb
pusha
xchg
pusha
outsb
cmp
dec
ss
cmp
out
mov
inc
jg
mov
daa
sub
imul
das
lds
ret
in
divb
sbb
push
push
pushl
sbb
cmpsb
in
and
lds
push
aad
hlt
mov
xor
push
add
pop
pop
push
sub
dec
xchg
hlt
out
sub
cmp
cs
mov
pop
int3
insl
dec
mov
into
ret
stc
ja
xor
xchg
out
jo
leave
adc
sbb
je
in
or
xor
aas
add
inc
mov
cmc
xorl
add
push
sub
pop
lea
lret
add
maxps
insb
mov
sbb
or
js
sbb
lret
repnz
or
popa
add
jnp
or
jns
push
cs
in
cs
out
fucomp
jge
cltd
jp
xchg
iret
call
dec
jmp
and
mov
jmp
pop
or
outsb
movsl
xor
dec
sub
adc
and
fisttps
ffree
adc
jle
mov
lahf
orb
dec
outsb
in
jle
adc
inc
vmovq
sbb
lea
sub
mov
sahf
insl
test
repz
jae
data16
hlt
sbb
xchg
popa
movb
push
add
xchg
fs
scas
rorb
enter
pop
and
dec
and
cmp
push
push
movsb
and
sub
stos
arpl
mov
arpl
ret
loope
rcll
adc
inc
add
inc
ja
xchg
xchg
es
sbb
xchg
pop
mov
jecxz
fidivrs
std
cmp
inc
mov
fs
mov
xor
add
cmp
pop
sbb
lods
add
mov
nop
and
and
scas
shll
push
jp
pop
fcomps
pop
outsb
jecxz
test
imul
mov
cli
push
mov
dec
in
ja,pt
inc
test
cmpsb
mov
out
jmp
fstps
inc
pop
in
lds
fdiv
cmpsl
mov
jge
and
dec
nop
bnd
not
cli
mov
add
inc
loope
and
add
xchg
adc
xchg
in
fwait
dec
ret
push
sarb
cltd
lods
mov
pop
pusha
jl
mov
mov
stos
or
mov
insb
ret
lea
sub
mov
loopne
lock
sub
mov
mov
test
adc
push
mov
dec
push
mov
xlat
push
xchg
icebp
jl
cmp
push
mov
mov
je
sbb
enter
push
mov
push
push
out
iret
xor
incl
mov
push
inc
adc
add
cwtl
sub
movsl
jno
loopne
es
ljmp
cmpsb
ja
jnp
clc
mov
sub
jo
cmp
mov
ret
push
and
js
inc
into
ss
jg
bound
sbb
lret
lahf
sti
mov
mov
subl
hlt
fnstcw
into
sub
lods
pop
imulb
and
enter
je
clc
lods
shr
pop
movsb
push
pop
ret
inc
dec
cmp
inc
addr16
popa
mov
cmp
test
aad
jbe
pusha
sbb
dec
jle
das
xchg
xor
das
jmp
or
push
xchg
es
jmp
std
leave
popa
mov
cltd
mov
daa
scas
enter
insl
setg
adc
sbb
cmp
icebp
mov
inc
dec
cmp
xchg
or
cmc
mov
jecxz
add
pop
dec
lcall
pop
mov
xchg
add
add
and
dec
cli
arpl
push
adc
sti
push
scas
arpl
sarl
add
cmp
and
shr
cmc
mov
ljmp
in
mov
inc
aam
sbb
mov
outsb
pop
push
stos
sub
mov
push
cli
out
push
mov
pusha
mov
cmpsl
popf
movsl
pop
pop
jb
lods
out
mov
aaa
add
sub
jp
lods
push
loop
into
rcr
mov
push
cwtl
or
inc
mul
mov
or
pop
cwtl
push
ja
xchg
mov
sub
xchg
mov
pop
jns
cmpsb
inc
xchg
push
mov
sahf
cmpsb
mov
adc
pop
cmp
inc
dec
call
scas
jl
pop
mov
inc
in
mov
lock
xor
loope
int
je
sbb
dec
adc
sub
sbbl
decl
inc
into
push
mov
mov
pop
push
int
adc
addr16
std
sub
in
mov
outsl
out
mov
adc
inc
jo
jge
test
sbb
inc
decb
stc
cltd
xchg
lods
lds
bound
xchg
sarb
pop
xchg
xor
lock
stos
mov
pop
inc
push
inc
xchg
cmovno
clc
mov
jg
negl
xchg
jp
mov
in
xor
mov
mov
imul
aad
stos
dec
mov
push
mov
xor
stos
dec
les
lcall
hlt
sub
insb
ror
cltd
xchg
and
fsubl
enter
dec
sbb
adc
cltd
cmpsl
imul
cld
loopne
mov
pop
adc
repnz
adcl
adc
inc
jns
inc
xor
in
xchg
fadd
adc
sbb
mov
shrb
sub
mov
push
xlat
loop
cmpsl
iret
fiaddl
dec
adc
dec
iret
jp
jnp
cmp
repz
int3
test
sbb
shll
pop
mov
dec
jns
and
push
inc
pushf
insl
out
cmpsl
mov
sbb
xchg
sahf
fmull
sahf
popl
mov
sbb
jle
repnz
mov
jp
inc
loop
push
sbb
out
or
add
hlt
loope
fistpl
inc
fbld
or
cmp
cmp
mov
fdiv
pop
push
fisubl
inc
arpl
push
lret
jnp
loop
mov
mov
cmp
sbb
sbb
cmpl
mov
jmp
mov
test
int
stos
cmp
or
pop
sub
scas
and
xor
fwait
or
jmp
xchg
xchg
icebp
lods
mov
je
movsb
adc
cmp
outsb
pusha
or
xchg
and
sbb
loope
and
xor
rcll
sbb
inc
out
push
inc
xchg
stos
jno
imul
xchg
push
inc
divl
addr16
xchg
outsl
and
shrl
push
pop
jo
sti
inc
jo
push
cmc
imul
dec
inc
movsl
loope
xchg
mov
aas
fidivrl
jnp
jmp
jmp
pop
je
or
mov
cmp
xchg
lahf
mov
jno
daa
mov
cmp
sar
cmp
aaa
xor
inc
mov
int
xchg
jg
std
or
xchg
xor
xchg
sahf
imul
pusha
cmp
jmp
fcmovnb
in
xor
insl
xchg
stc
out
jl
out
lods
xchg
jnp
stc
jo
or
xor
scas
inc
fisubrl
lcall
jecxz
lock
pminub
js
fdivrs
pop
enter
leave
mov
and
sbb
mov
ljmp
xor
pop
push
push
adc
data16
das
push
jb
js
or
jl
dec
mov
dec
add
fistpll
jge
cmp
fcomps
push
std
ret
call
testb
loope
or
cmp
lahf
lods
cmpsl
sub
js
adc
sub
stos
fs
popf
jnp
dec
adc
cmp
cmp
cmc
fistpl
out
xor
insb
add
js
test
pusha
repz
cmp
lcall
cmc
push
cmpsb
and
xchg
into
adcl
cmpsb
ss
addr16
cmp
pop
out
cmpsb
xor
adc
push
aam
sub
std
stos
hlt
jmp
nop
inc
cli
movsb
loop
or
paddusb
sub
lahf
cmp
jmp
iret
cmpsb
aad
imul
jbe
add
lret
cltd
enter
adc
cld
aam
adc
in
dec
ss
aad
mov
cltd
shll
cmc
dec
les
sub
pop
testl
bound
cmp
pusha
sub
aaa
decb
shr
and
fldcw
mov
rol
xor
inc
ss
mov
sbb
leave
roll
jmp
cmp
dec
sqrtps
cmp
loopne
repnz
adc
jae
bound
add
xor
xor
stos
lods
inc
daa
inc
adc
lock
out
loopne
sti
dec
add
mov
lea
negl
fs
pop
sbb
in
inc
in
lea
push
dec
jp
je
inc
push
hlt
jge
mov
stos
lock
testl
mov
adc
daa
push
lea
push
cltd
mov
shll
ljmp
ret
fidivrl
xchg
xchg
cwtl
mov
jo
enter
or
sbb
or
dec
and
sbb
xchg
push
mov
or
pop
adc
fwait
movl
stos
aam
mov
pop
mov
dec
rcrl
push
cmp
mov
or
cmpsb
jecxz
fsubrs
push
or
fdivs
push
test
cmpsl
sbb
or
push
cmp
push
mov
inc
jl
dec
lret
pop
xchg
popf
jne
xor
xchg
or
call
or
jp
ss
xchg
pop
mov
test
mov
xchg
push
int3
out
sub
mov
movsb
out
sbb
stos
inc
xor
inc
pop
push
or
loope
sbb
addl
arpl
mov
repz
add
adc
sbb
addb
sahf
repnz
loop
je
ja
inc
negl
fdivrp
mov
jg
cs
insb
repz
adc
fidivrl
dec
jno
out
std
fcmovne
xchg
and
sub
adc
adc
add
adcl
lret
adc
testl
mov
add
mov
sti
push
push
mov
imul
std
cmp
dec
ret
cs
nop
push
mov
loop
imul
or
in
jo
insl
fildl
mov
sub
pop
sub
ljmp
sti
cwtl
add
cmp
push
lea
cmpsl
gs
or
in
enter
sub
std
mov
pushl
cmpsl
insl
xlat
lock
and
insb
push
imul
push
jns
lahf
sub
pop
cwtl
ja
jb
scas
aad
bound
jle
dec
test
mov
sub
mov
loop
jne
jnp
imul
ds
stos
inc
sbb
js
xor
jae
jle
inc
mov
xchg
pop
cmp
fisubs
dec
jns
jb
inc
fs
push
push
push
xor
popf
in
ret
mov
fsubp
pop
mov
scas
or
add
daa
push
lahf
and
loopne
adc
icebp
mov
jnp,pn
repz
aam
out
jae
jg
jae
mov
mov
call
out
std
and
sub
test
andb
clc
jp
ljmp
jne
or
cltd
add
adc
sti
stos
loopne
and
daa
xor
int
and
push
xchg
xlat
sub
mov
movsb
jne
mov
mov
imul
inc
push
inc
cli
out
shl
mov
test
inc
mov
movsl
nop
ds
test
fidivs
add
sub
aam
arpl
call
sbb
xchg
rclb
mov
iret
lods
out
inc
fwait
addb
dec
mov
leave
daa
std
jmp
cmp
js
dec
cmp
push
cmp
int3
ljmp
jbe
out
cmpsb
push
cmp
leave
xor
xlat
xchg
std
xchg
push
inc
lcall
outsb
xorl
adc
cmp
xchg
jp
jecxz
mov
lea
into
std
cltd
or
adcl
aas
xor
scas
inc
fisubs
fsubl
xorb
mov
and
add
test
xor
mov
adc
lret
cli
push
add
inc
int3
mov
pop
or
out
outsb
cmp
pop
xor
pushf
sub
out
sahf
loopne
cmpb
jl
or
xchg
out
push
lods
xchg
jns
call
int3
pop
mov
in
jbe
pop
add
dec
fiadds
add
xor
push
cs
scas
dec
leave
sub
sub
das
pop
movsb
insb
push
sbb
aaa
dec
movsl
mov
out
addr16
nop
js
insl
sbb
loop
push
sahf
pushf
rcrl
cmp
xchg
mov
jae
test
push
mov
popa
sbb
cmc
cmp
lods
pusha
fnstsw
add
xor
mov
stc
push
fistl
mov
fidivrs
xchg
jmp
xchg
nop
repnz
push
fidivs
sub
mov
hlt
push
adc
rcr
sub
and
push
ja
sahf
popf
sub
stc
out
jp
iret
sahf
in
loop
push
in
push
loopne
mov
daa
popa
xchg
stos
mov
fistl
aam
xchg
mov
xor
jl
rcrb
test
jg
or
cmp
pop
scas
in
dec
mov
inc
int
rorl
pop
and
mov
push
aaa
rclb
sub
fists
cmp
ljmp
lahf
test
push
jp
or
in
xor
add
aas
lds
xor
bound
icebp
sub
cltd
out
jae
shrl
loope
push
fistpll
push
sub
fcompl
push
mov
nop
test
bnd
in
mov
fs
fstp
sbb
inc
in
lods
movsl
jg
and
fwait
ja,pn
jmp
ret
nop
mov
pusha
jg
jne
test
or
mov
inc
dec
jecxz
mulb
outsl
fidivrs
mov
pop
fbstp
incl
lret
lahf
test
pop
cld
sub
bnd
lahf
sub
push
call
xchg
cs
call
inc
pop
push
or
jo
mov
out
xlat
leave
push
outsb
orl
nop
sbb
push
in
mov
push
and
imul
lock
sub
adc
sbb
jmp
mov
adc
leave
inc
sbb
jl
rcl
fsubs
in
jne
adc
clc
jae
pop
sbb
in
aad
push
pop
sbb
jl
xchg
xchg
adc
push
int
imul
in
or
jns
mov
in
outsl
out
dec
das
xor
clc
mov
and
in
popf
cltd
sub
jmp
clc
in
xor
xchg
or
test
inc
test
jp
jnp
js
mov
jo
fadds
xchg
ja
sub
and
ljmp
jp
call
js
cmp
pop
cli
es
js
push
fsubrp
dec
cltd
lahf
add
cmp
mov
push
push
mov
in
test
mov
es
dec
inc
cmp
lcall
mov
scas
out
lods
xor
xchg
lret
pop
push
push
and
and
stos
shlb
lret
xchg
je
push
stos
mov
mov
icebp
push
pushf
and
hlt
insl
dec
cmp
stos
and
push
popf
jns
xchg
fdiv
adc
xlat
out
push
sbb
xchg
lock
lods
mov
add
sbb
cmpsl
je
and
push
add
pop
mov
test
ficoml
clc
sbb
xor
inc
sub
outsl
mov
in
negb
iret
or
inc
sbb
outsl
je
out
inc
push
add
inc
and
in
inc
fldenv
js
cld
lock
dec
fidivs
out
mov
imulb
addb
scas
push
inc
arpl
and
movl
pop
push
jnp
rclb
dec
ss
inc
dec
fprem1
mov
shl
xchg
not
jle
nop
mov
cmpl
sub
aad
xchg
jno
dec
mov
pop
xchg
xor
sub
es
and
add
loopne
or
jae
aaa
movsl
add
stos
sahf
push
stos
popa
or
pop
adc
subl
push
sub
xchg
or
ja
cld
jp
aas
int
addr16
daa
jns
add
enter
mov
ljmp
aaa
cmp
push
ss
lods
push
lock
jmp
cli
fxch
pop
mov
movsl
adc
cltd
jg
mul
pop
mov
fisubrs
mov
andb
aam
adc
xlat
pop
ret
fists
sbb
cmp
test
fsubrp
mov
push
insb
or
fidivrl
inc
mov
fwait
lret
gs
or
stos
clc
mov
cmp
jbe
ficomps
sbb
out
cmp
negl
cltd
xchg
dec
adc
je
js
iret
sbb
xchg
push
fistl
aad
lahf
ja
aam
cmp
pop
xorb
clc
test
xchg
lods
add
mov
cmp
add
imull
cmp
inc
jo
scas
shll
dec
cmp
or
or
cld
lds
insl
mov
jl
sbb
sbb
xchg
sbb
push
xor
dec
fwait
bnd
popf
or
in
ficomps
testl
dec
sbb
dec
mov
enter
and
enter
xlat
inc
fstpt
mov
pop
daa
sahf
jb
mov
pop
cwtl
insl
mov
jne
adc
test
mov
push
mov
fidivs
mov
mov
lret
ss
adc
int3
dec
bound
lea
add
loopne,pt
fisttps
mov
push
pop
jecxz
mov
push
pop
inc
push
fwait
aaa
xchg
adc
imul
xchg
inc
fnstsw
pop
and
or
or
jge
cmpsl
add
lret
add
into
divl
addr16
push
adc
inc
lds
in
sub
jo
cld
push
cmp
jecxz
sbb
ret
out
test
dec
pop
imul
jae
int
sub
dec
movsl
int3
mov
loope
mov
mull
in
mov
mov
or
or
dec
jle,pn
push
push
mov
data16
in
js
imul
repz
or
repz
loop
lret
or
jg
dec
jo
repz
rorl
dec
xchg
ficomps
pop
inc
sub
repnz
sbb
jg
nop
mov
mov
push
faddp
fsts
push
fwait
loope
cmc
sti
fmul
std
mov
push
sarl
adc
ffreep
je
push
xchg
dec
cltd
out
mov
jecxz
and
mov
lahf
push
test
cmpsl
xchg
or
movsb
shrl
dec
into
sub
mov
mov
sbb
int3
and
pop
push
in
push
cmp
jne
jb
mov
movsl
and
shl
and
fcoml
adcb
push
dec
push
enter
loope
or
or
cwtl
push
or
and
xor
add
dec
inc
fs
jae
mov
into
data16
push
mov
frstor
test
flds
loopne
add
leave
std
and
push
mov
sbb
out
mov
add
lahf
push
jns
out
cmp
mov
cli
loop
pop
sub
std
popf
addr16
inc
js
or
test
pop
mov
jmp
imul
repnz
or
ficomps
shlb
pop
data16
jge
mov
and
mov
dec
and
xchg
jmp
pop
in
or
stc
mov
pop
clc
add
xor
sub
mov
mov
gs
sbb
jge
xlat
dec
jmp
lds
and
mov
push
pop
scas
enter
movsb
sbb
sahf
jle
pusha
rcrb
clc
push
xor
xor
cwtl
jecxz
popf
sarl
dec
lods
mov
jecxz
dec
clc
hlt
and
mov
xchg
rcrl
push
movsb
add
es
mov
lock
xor
inc
in
aam
or
mov
das
sbb
lret
cmpsb
pop
lahf
les
pop
lods
dec
jle
xchg
dec
cmp
sti
insb
leave
ljmp
inc
inc
out
pop
jmp
aaa
rcll
sbb
inc
inc
pop
andl
clc
jge
adc
mov
mov
adc
xchg
pop
fstp
inc
adc
adc
push
fwait
push
stos
cmp
es
mov
sbb
mov
addr16
aad
hlt
mov
xorl
insb
test
cmp
lds
movsl
cltd
xchg
inc
cmp
loopne
adc
or
ret
roll
dec
imul
dec
adc
push
fs
gs
mov
pop
ljmp
inc
jae
shrl
fnsave
or
pop
andb
xchg
out
pop
fistpl
mov
std
pop
xchg
push
sub
sub
fisttps
pop
in
ficompl
mov
inc
sub
clc
inc
in
mov
repnz
adc
xchg
outsl
dec
or
out
pop
repz
idivb
xchg
dec
jge
and
in
jmp
pusha
int3
add
pusha
jnp
and
mov
scas
add
pop
lret
addl
lcall
jbe
and
scas
or
and
dec
fists
adc
std
xchg
add
sarl
pop
mov
movsb
dec
lret
test
dec
fcmovne
jae
lods
ficompl
mov
scas
ds
fisttpll
mov
rcll
lods
jle
je
xlat
cs
andl
jno
bound
dec
insl
insb
jno
push
push
scas
lea
push
mov
and
push
in
xor
mov
shr
push
aad
lcall
rolb
js
gs
pusha
mov
jp
xor
rorb
ss
push
mov
push
add
xchg
mov
xor
pop
stc
js
and
call
sub
adc
xor
scas
je
cmp
push
push
add
aas
repnz
icebp
add
inc
sbb
sub
adc
out
in
icebp
and
fs
rcl
xchg
and
lahf
add
int3
cmp
sbb
pop
sub
inc
call
icebp
xlat
cwtl
nop
popf
push
mov
mov
push
aaa
js
adc
and
push
test
cmp
ds
mov
pop
add
inc
and
clc
jb
adc
jae
push
inc
adc
pop
jmp
mov
or
jg
cmp
jb
test
lea
inc
test
push
pusha
push
adc
es
mov
int3
or
push
mov
hlt
fs
repnz
cmc
cmp
dec
mov
mov
sub
testb
mov
inc
and
mov
loop
add
push
pop
mov
push
in
adcb
jmp
mov
fisubrs
mov
dec
lcall
dec
jge
hlt
std
inc
fists
mov
inc
fbld
inc
adcl
dec
xor
xor
out
inc
aad
out
test
or
rorl
push
or
out
pusha
or
xlat
pop
add
dec
dec
shl
jg
cmp
mov
call
outsl
sti
cmp
hlt
cmpsl
int
xchg
mov
or
je
or
addb
push
mov
and
sti
sar
aas
fwait
jno
mov
inc
cli
test
mov
andl
das
lea
nop
dec
sbb
cmp
fwait
jmp
repz
lds
or
dec
sub
and
cmp
mov
fcmovu
xlat
movsl
call
test
lea
push
in
sarb
fsubr
sub
mov
or
fwait
push
js
push
add
jbe
cwtl
fnstenv
movsl
xorl
push
jnp
mov
lea
push
add
pop
leave
jle
push
loop
leave
leave
pop
int3
xlat
lret
mov
and
ja
mov
sbb
sbb
jp
movnti
dec
push
mov
cmpsl
lods
aas
or
pop
in
lret
cmp
sahf
inc
cmp
nop
cmp
mov
test
or
stc
cld
xchg
sub
sbb
cmpsb
gs
dec
sbb
popa
mov
inc
and
push
mov
loope
mov
nop
add
sub
fs
arpl
adc
jo
into
or
ja
mov
jno
stos
rcll
jno
cmp
or
mov
adc
mov
sub
les
jb
imul
xor
into
add
sub
sbbb
popf
mov
jp
or
dec
mov
roll
push
lcall
add
mov
fs
or
fwait
mov
xlat
mov
gs
mov
cmp
jbe
out
pop
sbb
sbb
mov
cmpsl
aad
adc
loop
iret
arpl
push
xchg
icebp
dec
ss
push
adc
stos
lret
jns
icebp
int
enter
das
mov
fidivs
dec
jo
pop
sbb
adc
out
hlt
dec
repnz
aaa
mov
out
leave
pop
test
cmc
jns
movl
lret
imul
jo
arpl
xlat
sub
jg
dec
inc
mov
repnz
mov
and
xchg
mov
test
shrl
loope
inc
hlt
pop
sub
inc
outsb
push
ss
push
jmp
dec
cmpsl
lds
push
stc
mov
xlat
cmc
ja
push
ds
sub
sub
lds
leave
inc
push
repnz
sbb
mov
gs
gs
test
pop
ljmp
lods
push
mov
push
mov
push
pop
push
and
sub
mov
and
and
mov
ret
push
sti
cs
push
adc
addb
add
xchg
dec
das
inc
rcr
add
jmp
sti
inc
inc
es
fistpl
xchg
fmuls
xor
fwait
lcall
cmpsb
sbb
shlb
popf
or
in
pop
test
cmp
stos
dec
fsubs
xchg
xchg
or
clc
or
lret
cmpsb
sbb
xorl
push
dec
pop
mov
mov
subb
add
xor
mov
mov
addr16
cmp
jo
push
cltd
add
imul
jae
movsb
jg
pop
mov
cmpsl
sub
cmp
and
push
inc
push
and
push
jnp
or
insl
lea
dec
ja
lods
test
jge
stc
outsl
in
sub
stos
adc
hlt
popa
jb
add
insl
xor
and
rclb
xor
sub
cmc
push
call
and
out
cmp
jno
jnp
pop
lret
add
sbb
ror
sub
lret
inc
push
fldenv
xchg
fistpl
adc
or
insb
sub
je
jbe
dec
addb
test
popa
aas
movsb
jb
getsec
out
jmp
cltd
or
test
sub
cmpsl
scas
pop
pop
test
pop
testl
xchg
push
out
mov
sub
inc
repz
jno
sub
sub
mov
xchg
scas
test
dec
rorl
ret
icebp
push
mov
sbb
inc
aaa
pop
test
push
cmpl
xchg
cmc
int
inc
jle
inc
mov
imul
dec
dec
xchg
int
mov
pop
cmpsb
aaa
mov
mov
push
jne
or
jnp
imul
scas
fnstcw
mov
xchg
jb
insb
push
sbb
fcmovu
add
push
test
push
jp
popa
repnz
imull
lea
jne
sub
jl
in
add
push
add
adc
ds
fwait
pop
push
jp
lds
movsb
cmpsb
xor
push
testb
mov
mov
pop
push
ss
pop
arpl
hlt
adc
jp
daa
imul
jbe
imul
in
and
sub
out
xchg
insb
lods
cli
cld
or
or
cwtl
adc
pop
add
mov
fnstenv
fcmovnb
das
js
testb
sbb
xchg
xchg
in
arpl
mov
adcb
xchg
into
icebp
sub
dec
or
movsb
push
rcll
icebp
mov
jo
inc
fwait
inc
inc
sbb
sbb
mov
cltd
sahf
loop
sbb
pop
dec
pop
out
hlt
iret
mov
xchg
mov
daa
jno
loopne
cmp
je
xlat
jl
xor
dec
mov
inc
imul
mov
push
mov
cli
repz
in
push
in
jae
ss
imul
mov
nop
push
pop
into
pop
sbb
and
popf
adc
call
push
inc
or
add
aaa
mov
xchg
popa
xchg
and
sub
adcb
ds
pop
or
and
sti
xor
les
push
jno
mov
pop
inc
and
out
cmp
pop
int
pop
fcmove
aaa
push
lods
or
and
loop
icebp
push
push
jmp
add
mov
bound
stos
jne
jp
dec
push
jae
subb
inc
inc
aaa
imul
outsl
and
cmpsb
scas
rcr
pop
pop
fistpl
test
outsl
sub
out
pop
out
xchg
pop
push
lahf
cmp
pop
cmpb
adc
cli
push
fstpl
sbb
out
pop
punpcklbw
push
into
ret
outsb
es
or
shll
sbb
jne
and
push
inc
insl
cli
sbb
mov
mov
mov
sub
int3
enter
jl
adc
sbb
mov
loope
xchg
and
test
mov
pop
fsts
imul
pop
mov
add
lock
andb
cld
mov
mov
push
add
cmp
mov
mov
lods
inc
inc
xchg
pop
adc
imul
into
clc
out
imul
inc
add
test
fcomi
mov
mov
mov
xchg
mov
ret
dec
mov
mov
das
lds
test
pop
loop
out
shr
push
nop
pusha
add
aaa
les
mov
std
jnp
sub
xchg
mov
cwtl
leave
jecxz
xchg
hlt
out
outsl
int3
jns
out
lods
adc
sbb
fidivs
pop
cltd
fcompl
xchg
jmp
mov
loopne
bound
dec
shrl
clc
jmp
in
into
xlat
and
out
ja
and
inc
sahf
jmp
xor
test
add
mov
fbstp
ljmp
mov
repnz
test
loopne
cmpsl
cs
mov
lods
or
or
xchg
xor
mov
xor
ss
repnz
push
xor
inc
loopne
stos
cmc
push
dec
mov
add
outsb
pop
xchg
xor
fwait
xchg
ljmp
cmp
xchg
mov
stc
lds
lods
loope
sbb
aaa
aas
add
sbb
pop
dec
dec
imul
fbld
or
xor
add
push
mov
xchg
std
cs
cli
fsubrl
hlt
mov
pop
xchg
ror
or
jmp
inc
adc
les
fildl
push
push
jp
sti
arpl
stos
mov
adcl
add
jb
mov
stc
mov
je
push
sbb
loopne
sub
cmpsb
movsb
xchg
dec
pop
sub
pop
xchg
add
sub
icebp
repnz
pop
inc
pop
mov
stos
or
call
xchg
inc
notb
adc
mov
movsb
push
mov
xchg
xchg
mov
roll
hlt
sub
pop
add
shrb
and
xchg
mov
mov
jge
push
and
test
mov
xor
mov
inc
ja
fisttpl
rolb
and
movsl
fs
hlt
dec
or
stos
dec
test
in
pop
cmp
insl
jb
insl
cmp
cs
cmp
jno
js
cwtl
std
sbb
imul
sub
add
cmpsb
ss
fidivs
xor
jno
call
test
and
mov
mov
ret
sub
jg
mov
ret
sahf
lock
inc
dec
jp
inc
mov
pop
push
mov
mov
inc
mov
aaa
rcll
and
ja
ret
fdivrp
inc
cmp
sbb
or
or
jle
inc
stos
mov
lea
adc
bound
push
pop
jnp
lea
mov
outsb
test
cmc
iret
popf
das
test
pop
subb
push
shll
clc
sub
xchg
mov
push
hlt
roll
sbb
loope
or
mov
pop
and
push
mov
popf
inc
lret
cs
mul
lcall
jno
ds
cltd
cmp
xchg
in
loopne
push
fisubs
add
jb
enter
add
jnp
sub
enter
and
rcll
into
xchg
xorb
dec
jle
in
adc
adc
pop
lret
or
mov
cmp
leave
and
cmp
sti
int
shll
lea
mov
out
fcoms
and
push
lcall
inc
push
pop
inc
sbbl
ret
and
lock
jg
sbb
jbe
fwait
inc
xor
dec
adc
push
mov
clc
sti
cmp
fisubrl
stos
cmp
arpl
rorl
inc
pop
mov
arpl
xorl
lods
aam
rolb
fs
jbe
outsb
inc
mov
jge
mov
dec
out
cmovnp
iret
inc
sbb
lcall
aad
outsl
je
jp
pop
pop
fcoms
popa
cmpsl
cwtl
or
ljmp
dec
cltd
sbb
aas
imul
sti
fstp
inc
pop
repnz
mov
jo
out
xor
repz
pusha
inc
test
nop
cmp
shrb
scas
insb
jbe
xchg
lcall
mov
cmp
sbb
js
lock
cmc
add
lcall
adc
push
out
jmp
call
lods
das
push
jo
je
shlb
add
push
shrb
insl
cmc
mov
mov
les
and
jns
xchg
loope
mov
cmp
fisttps
and
ja
gs
jnp
inc
loope
sub
fisubrs
push
lcall
or
sbb
inc
out
xchg
loop
stc
insb
dec
jl
mov
loop
cmp
push
frstor
movsb
push
das
test
xor
cmp
mov
sbb
popa
xchg
insb
scas
pop
sub
jecxz
clc
inc
jae
aaa
dec
sbb
push
es
xchg
mov
and
push
adc
inc
xorl
add
cmc
mov
cmp
lock
movsl
lret
mov
stos
sarb
push
lds
adcl
inc
cld
cmpsl
call
sub
or
cmp
data16
mov
divl
ret
leave
and
mul
pop
jp
out
fisttpl
lahf
xchg
push
add
lret
aas
inc
cli
jbe
movb
rclb
inc
loopne
adc
mov
xchg
nop
sti
std
test
jne
or
inc
mov
ds
cmp
cmc
repz
inc
or
xchg
arpl
push
dec
movsb
lds
mov
and
fdivp
pop
add
ja
inc
ret
mov
iret
inc
mov
imul
int3
sahf
mov
mov
lods
sbb
dec
xchg
dec
xor
rcr
fs
mov
jecxz
inc
aad
mov
pop
push
scas
mov
jmp
add
data16
lods
or
cmp
enter
jmp
mov
ret
mov
inc
inc
loop
and
test
push
mov
les
addr16
movsl
imul
or
add
xchg
xorb
mov
or
and
fcomps
and
xor
fcomp
jmp
inc
mov
push
fidivrl
mov
push
in
mov
mov
pop
test
icebp
xor
sub
push
aas
or
adc
mov
pop
ss
sub
mov
jae
lret
add
sbb
or
or
mov
inc
jb
inc
fcoms
sarl
dec
ljmp
jo
std
orb
sub
ss
addr16
cmp
sbb
jbe
add
mov
or
mov
in
loope
arpl
sub
cmpsl
shr
jge
push
and
xor
and
sbb
dec
adc
test
mov
jb
mov
xchg
cwtl
sub
push
mov
dec
lret
lret
cmpsl
addr16
shl
inc
iret
xchg
sbb
jle
push
adc
imul
iret
imul
cli
and
sub
enter
and
call
std
xchg
xor
loope
push
leave
ret
adc
les
fisttps
ret
aad
sahf
cmp
sbb
xchg
scas
pusha
inc
dec
dec
mov
push
pop
fisttpl
xchg
mov
jg
mov
xchg
cwtl
lcall
xchg
loop
mov
rcrl
cltd
movsb
sbb
dec
imul
mov
int3
fbstp
inc
jbe
push
pop
mov
gs
lock
adc
mov
je
lret
mov
stc
add
jecxz
push
insb
in
fdivs
pop
iret
xchg
cmp
stos
and
jne
ret
ds
outsb
push
xorb
push
sub
pushf
ret
pop
jbe
mov
outsl
in
les
add
popa
xchg
jle
int
fmulp
int
and
stc
out
and
pop
mov
imul
jne
outsb
jg
sti
aad
inc
push
pop
addr16
aas
or
xor
out
rol
jb
lds
inc
into
bound
sti
add
dec
jbe
cld
sub
mov
insb
in
add
xchg
lds
pop
xchg
cmp
push
lcall
ja
mov
mov
pop
push
mov
or
dec
fcomps
es
sbb
imul
jmp
lret
xchg
dec
loopne
repz
ret
sti
lods
out
lahf
scas
inc
in
imull
ljmp
add
out
out
outsb
sahf
adcb
mov
xchg
dec
xchg
xor
lret
cltd
push
dec
imul
sub
jmp
rorb
push
xchg
lcall
jbe
out
jecxz
cwtl
test
mov
inc
shll
das
pop
lods
bswap
ljmp
fimull
jne
dec
iret
mov
int3
dec
arpl
sbb
pushl
inc
popa
jae
pop
adc
lea
fdivl
mov
ds
xchg
int3
xor
jp
pop
outsb
lcall
aas
pop
push
sub
pop
sahf
ss
cmp
out
andl
ss
call
jmp
push
cs
xor
fldcw
mov
jle
mov
or
call
xor
sbb
in
sbb
xchg
mov
push
outsl
xchg
cmp
cmpsl
jl
out
cmp
bnd
rcrl
push
mov
push
je
pop
xchg
test
fucomip
iret
in
mov
xchg
fs
mov
ret
dec
dec
xchg
or
jl
mov
outsb
cmpsb
inc
xorl
push
push
nop
clc
inc
mov
loope
jecxz
ret
xor
add
shll
test
push
imul
loope
jns
test
testb
mov
xor
leave
push
add
nop
xor
pop
fnstenv
aam
pop
inc
cmpsb
push
sub
shll
lcall
fcom
das
enter
xchg
pop
inc
dec
pop
jge
mov
stos
fldl
mov
xor
inc
jo
filds
inc
ja
add
xchg
in
pop
enter
or
in
in
loop
or
mov
or
inc
pop
lahf
ljmp
dec
xchg
inc
or
or
stc
xor
and
dec
cmc
test
pushl
fildll
or
mov
push
dec
bound
add
and
pop
fcomps
lret
push
push
call
lgs
dec
cld
cmp
push
arpl
cmp
lahf
sub
dec
dec
dec
and
mov
dec
repz
mov
mov
xchg
enter
mov
gs
lcall
sub
cmp
test
cmpsl
aam
xchg
std
sub
mov
insl
sbb
push
fwait
pop
cmc
sub
or
sbb
pop
cmp
push
inc
insl
mov
adc
sbb
dec
aam
cmp
aaa
adc
sbb
mul
fimull
inc
push
inc
add
daa
inc
incb
inc
and
outsl
adc
or
pop
addr16
mov
cmp
repz
xchg
enter
sti
push
cmpl
xchg
jns
inc
daa
aad
adc
sbb
inc
push
pop
pop
xchg
or
dec
je
mov
jns
add
jae
mov
mov
jp
in
nop
outsb
sbb
cmp
xchg
pop
fists
test
inc
sub
sub
xchg
scas
lods
in
mov
lret
mov
cld
loopne
adc
push
fcomps
in
scas
jge
and
sbb
clc
xchg
sahf
or
mov
gs
pop
dec
mov
outsl
jge
push
mov
mov
sbb
imul
lret
shrb
aas
test
outsl
push
lahf
push
and
mov
and
sbb
adc
arpl
push
dec
jle
pusha
dec
xor
jmp
add
sbb
cmc
xor
mov
xor
movsb
fs
stos
jne
xchg
mov
push
and
xor
ret
mov
xchg
test
fisttps
cwtl
sub
das
js
or
fnstcw
pop
test
mov
xor
inc
jb
xchg
push
nop
mov
lret
jo
jge
aam
mov
pop
fs
cmp
jmp
lods
pop
das
sub
mov
or
or
push
sarl
lea
lods
dec
xchg
mov
pop
mov
cmp
int3
outsl
loopne
or
mov
int
int
sub
mov
dec
imul
xchg
sub
xchg
mov
and
pushf
dec
sub
mov
jno
dec
sub
iret
int3
mov
imul
scas
add
leave
sbb
xchg
add
inc
out
pop
lcall
pop
sub
shrl
jge
sbb
jnp
cmp
cli
repz
cltd
adc
sub
mov
cmpsb
inc
in
adc
sub
or
adc
xor
inc
movsb
mov
add
or
xchg
cld
repnz
aad
push
xchg
rol
lods
and
clc
xchg
xor
fcmovbe
xchg
push
lea
mov
outsb
das
pop
xor
fisttpll
jbe
cwtl
in
scas
cmc
in
shlb
rcrb
das
inc
mov
xchg
iret
push
aad
jg
mov
mov
adc
in
in
mov
sub
and
mov
push
mov
sub
add
arpl
mov
mov
inc
push
rcr
stos
jg
nop
pop
subb
loopne
pop
lcall
enter
push
leave
xchg
inc
ja
insb
mov
stos
pop
add
mov
jl
sub
and
addl
hlt
int
popf
lahf
or
mov
cmpsb
sti
or
mov
jae
xchg
mov
push
popa
pusha
fwait
cs
popa
imul
fadd
dec
add
lcall
cmp
add
es
mov
mov
cmp
sbb
lock
and
ss
sbb
repz
aam
adc
lock
out
or
rcl
insb
cmc
fdivrs
mov
out
leave
xchg
push
jbe
imulb
test
pushf
cmc
push
add
mov
out
lods
je
pop
jbe
mov
pop
lds
fsub
pop
mov
cmpsl
es
sub
sbb
push
mov
mov
jb
ds
inc
xlat
fiaddl
adc
or
sub
mov
push
adc
loopne
std
xchg
orl
cld
int3
jecxz
xchg
mov
dec
fwait
xor
out
fsubrs
lds
sbb
pop
sub
mov
es
decl
aas
mov
dec
jb
ret
bnd
cmp
xchg
xchg
xor
les
mov
sub
push
pop
xor
mov
adc
mov
sub
insb
leave
movsl
shll
in
jl
std
mov
jecxz
adc
lret
loop
popf
int
cmpsl
flds
mov
int
dec
fst
sub
fucomp
cli
xor
push
pushf
dec
pop
adc
fimuls
nop
xchg
pop
pop
fdivr
cmp
std
pop
das
fmul
cltd
add
mov
repz
int3
ljmp
pop
dec
insb
jmp
scas
rorl
mov
int
jge
mov
pop
jnp
xchg
xor
and
aad
jno
mov
dec
sub
dec
xchg
dec
negl
sahf
adc
sbbb
mul
lea
dec
xchg
adc
add
imul
cmp
jnp
mov
cmp
movsl
cmp
fucom
sub
push
cli
das
inc
movsl
sub
mov
and
int3
fxch
mov
repz
mov
mov
inc
xor
cmp
pop
out
or
mov
xor
mov
inc
mov
dec
push
movsb
mov
dec
sub
mov
dec
pop
sahf
fidivl
jae
and
divl
ja
cmp
xor
xchg
fldt
adc
testl
or
mov
push
clc
cld
jbe
sub
add
inc
test
fidivrs
xor
orl
sahf
cs
xor
std
aas
addr16
sub
sub
or
mov
jo
cltd
add
insb
inc
inc
adc
pop
mov
pop
or
pop
das
sub
jbe
notl
fstl
inc
addr16
movsl
sahf
mov
lahf
call
movsl
xor
daa
in
cmp
stos
out
dec
fbld
rcrb
mov
hlt
fnstcw
sbb
push
push
mov
mov
cs
push
ss
pop
mov
enter
pusha
pushf
xchg
das
imul
xchg
pop
rcll
pushf
push
aaa
cmpsb
mov
add
insl
pop
mov
cld
dec
adc
mov
adc
nop
aaa
mov
insl
test
ja
and
pop
dec
sub
inc
cmp
mov
and
sbb
in
arpl
sbb
mov
clc
mov
xchg
jns
in
inc
nop
mov
addr16
adc
cli
aaa
jecxz
sahf
add
mov
out
stos
lret
mov
push
push
sbb
sub
clc
repnz
add
leave
outsb
es
xchg
or
pop
add
lock
cmpsb
popl
call
and
mov
imul
cmp
aam
out
pop
jno
das
dec
mov
jmp
mov
xor
cmpsb
fnstenv
sbb
shll
mov
stos
xor
rorl
xor
push
jae
mov
stos
insl
add
push
insl
mov
popf
ja
gs
push
add
cmp
scas
dec
inc
add
inc
cwtl
lret
xor
imul
sub
inc
add
sbb
fsubp
mov
xchg
or
xor
and
aad
or
mov
push
stos
mov
out
xlat
jns
push
mov
aas
push
stos
stc
not
mov
leave
iret
lea
xchg
fstpl
sub
bound
dec
or
fidivl
mov
ljmp
mov
cmp
dec
test
movsb
inc
shll
into
push
add
out
mov
jnp
push
inc
add
xchg
popa
and
addr16
cwtl
insb
ret
aad
ret
and
mov
xchg
test
fcmovnb
je
ret
push
cwtl
out
fldt
inc
inc
jge
push
aam
mov
or
in
xlat
adc
and
inc
popf
mulb
add
cltd
mov
mov
insl
mov
sbb
sub
out
add
arpl
mov
clc
stos
add
adc
int3
stos
fwait
lock
leave
mov
ja
push
fbstp
aaa
scas
mov
adc
mov
mov
inc
cwtl
pop
xchg
mov
cs
mov
aas
dec
iret
leave
adc
xchg
mov
pop
mov
mov
push
cs
dec
lock
xor
mov
dec
add
pushf
adc
xchg
stc
sar
jbe
popf
push
xchg
shll
lds
xlat
movsl
xchg
dec
adc
cmp
ds
cmp
jo
lods
pop
sbb
aad
in
lea
pop
test
xchg
fdivl
mov
mov
cmpsb
std
out
add
int
adc
jge
xor
sub
lret
jecxz
pushf
add
fldcw
cmp
movsb
cli
sub
add
jnp
mov
xor
call
xchg
repz
mov
and
sub
imul
nop
sub
mov
or
jnp
aaa
ja
or
test
out
ss
mov
lcall
lret
cmpsb
in
xor
sbb
cmc
sub
pop
mov
add
jl
mov
fbstp
xlat
mov
mov
adc
data16
enter
sti
adc
sbbl
vpshaq
xor
ss
adc
js
pop
jecxz
or
lret
push
shrb
and
xchg
loope
xor
not
jae
idivl
sbb
pushf
adc
iret
inc
or
sub
cwtl
jle
pop
xchg
sbb
cmpb
arpl
dec
in
fmuls
and
jae
es
outsb
movsl
outsl
sub
mov
jb
xchg
mov
aad
nop
imul
and
clc
mov
jne
dec
inc
xchg
add
aad
mov
dec
fs
mov
hlt
enter
insb
xchg
sub
and
or
xor
sbbl
push
push
aaa
mov
dec
ja
inc
or
jp
inc
xor
dec
out
fsubr
jns
movsl
mov
call
xchg
int3
test
push
sbb
mov
dec
sbb
xor
sbb
xor
scas
inc
es
push
movsb
or
repz
inc
sub
push
fnstcw
mov
sub
mov
imul
mov
sbb
mov
fdivrl
insb
push
lods
sbb
pop
rcll
rcll
test
xchg
lods
clc
fcomps
add
shrl
lcall
xor
or
mov
aaa
ss
sub
dec
fistpl
jae
jns
jl
xchg
cs
imul
imul
insb
mov
pop
std
pop
lret
push
test
std
popa
mov
pusha
and
jne
dec
inc
dec
aad
loope
push
cld
lret
arpl
test
aas
push
sbb
cmpsl
test
xchg
arpl
negl
xchg
addr16
cmp
inc
ret
test
adc
or
mov
into
cs
mov
push
mov
ljmp
add
lret
int3
push
push
ds
jno
add
mov
ret
mov
movsb
jnp
push
and
imul
mov
icebp
loopne
jne
popa
xor
pop
jg
popl
push
test
cmp
mov
out
out
loop
add
shlb
stc
in
pop
dec
je
adcl
pop
mov
jle
push
jno
fsubrl
inc
stos
fdiv
cmp
mov
mov
nop
xlat
inc
insb
mov
out
jo
xor
xor
jno
adc
push
inc
cmpsl
mov
fwait
pop
fiadds
sbb
pop
and
pop
push
ja
sub
gs
or
cmpsl
test
sbb
jb
xor
fwait
xor
cmpl
out
shl
xor
dec
fists
push
loopne
jl
push
pusha
shr
sub
fldt
add
repz
xchg
pop
pop
jl
fidivrs
cmp
into
das
dec
mov
mov
dec
roll
push
jle
push
xor
scas
mov
push
shll
xor
jnp
or
jl
mov
mov
cwtl
pop
out
mov
aaa
mov
add
shl
pop
dec
js
scas
mov
jbe
sbb
fwait
add
fidivrs
inc
out
cmp
and
ret
or
mov
push
xor
jmp
into
insl
sbb
push
cltd
pop
pop
mov
pop
sub
xchg
out
xchg
outsl
outsl
pop
fadds
cmp
push
ss
stos
dec
jge
dec
out
mov
cs
scas
repz
sbb
jl
adc
sbb
and
dec
inc
les
das
pop
mov
in
dec
fisubrl
out
mov
or
push
xor
loope
adc
sub
add
pop
xchg
lods
movsl
add
lods
jmp
in
cmpb
lret
pop
add
xchg
pushf
imul
mov
xor
aas
xor
mov
lahf
lcall
dec
mov
pop
push
xor
scas
rorb
inc
mov
jae
sub
es
mov
ficoml
in
mov
push
add
xor
popf
add
mov
push
and
jmp
adcl
add
jne
lea
inc
inc
cmp
mov
outsl
nop
int
in
nop
fwait
sub
inc
pop
push
pop
pusha
cwtl
mov
cwtl
add
xor
out
mov
icebp
rcr
jp
inc
cmpsl
dec
test
cmp
stc
stos
mov
mov
cmpsl
sub
into
xchg
jge
push
std
subb
mov
xchg
sahf
mov
call
scas
or
sub
jl
stos
aam
jne
sub
mov
mov
aas
dec
and
out
mov
stos
mov
inc
fwait
std
jbe
lret
lahf
cmp
lret
sbb
int3
xor
pop
and
jmp
rcl
push
in
mov
jne
sub
call
dec
imul
or
test
ds
cmp
cmc
push
in
pop
mov
in
repnz
mov
cmp
dec
aam
mov
sub
cmp
lds
adc
jecxz
sub
push
bound
jb
mov
in
ja
and
je
xchg
addr16
mov
in
mov
dec
mov
jo
scas
shrl
push
mov
outsl
mov
mov
or
test
pushf
jno
out
xor
stc
insb
jns
jge
inc
aaa
cs
jl
sbb
cltd
ja
stc
inc
sahf
inc
aaa
hlt
adc
sub
cmp
jae
mov
adc
dec
push
inc
in
inc
loop
pop
fildll
in
cmp
fnsave
repz
daa
sahf
lcall
adc
sub
stos
adc
pop
ss
inc
popf
inc
mov
test
mov
jo
jnp
int3
in
insb
adc
test
jne
sub
dec
pop
fcmovu
fst
jg
das
mov
ljmp
xor
xor
hlt
int3
notb
addr16
stc
or
iret
fistpl
mov
call
inc
int
xor
pop
stos
xchg
jp
jp
bnd
mov
inc
orl
out
sub
mov
cmp
push
sbb
push
repz
divl
cmc
mov
addr16
hlt
popl
mov
inc
jnp
push
jns
lahf
scas
lods
cmp
outsl
add
rcll
ror
inc
cmp
ss
cmpsl
cmc
pusha
stos
xchg
mov
es
and
icebp
in
add
xor
xchg
lods
add
cmp
push
inc
inc
sub
out
pop
dec
loopne
dec
imul
add
loopne
jge
lea
int
pop
jbe
test
fildll
jge
cmpsb
xlat
faddl
inc
or
lret
shlb
ljmp
popa
and
imul
adcb
push
xor
mov
cltd
sbb
fldt
jmp
cwtl
out
sub
xchg
out
loop
dec
or
lret
dec
orl
push
pop
mov
idivb
xchg
fmull
jl
test
inc
fidivl
scas
mov
leave
leave
mov
mov
xchg
aam
ret
imul
in
pop
imul
jae
mov
inc
in
pop
stos
push
rcl
rcr
push
mov
adc
lcall
pop
sub
daa
in
mov
dec
cmc
xchg
dec
jns
push
dec
xor
lahf
int3
sub
inc
mov
cmp
and
or
sub
lods
movsl
aas
mov
or
loope
cmp
add
push
repnz
jp
mov
xchg
inc
hlt
mov
out
push
mov
fimull
insl
mov
popa
out
das
or
popf
fwait
inc
jmp
cmp
shll
clc
push
jle
loopne
xor
loop
rclb
cmp
aas
inc
xchg
cmc
adc
mov
scas
test
or
lods
sbb
push
pop
add
jno
imul
lret
xchg
add
dec
pop
lock
movsl
xor
repz
xor
popa
imul
lods
lahf
loope
and
mov
lods
loop
test
inc
jmp
femms
sbb
cmp
fldcw
pop
pushl
stc
mov
iret
lods
cmp
test
sub
dec
xchg
int3
push
xor
data16
test
cmp
push
cmp
test
cmp
cmpsl
outsl
sub
jecxz
fiaddl
icebp
jno
push
call
cmpsb
adc
jle
test
test
dec
loope
or
jp
cltd
shll
mov
cli
mov
into
push
add
add
ds
mov
push
jle
jne
jecxz
inc
jge
outsb
pushf
and
dec
into
jne
repz
outsl
xor
jmp
bound
mov
sub
dec
xchg
ja
arpl
dec
cmc
lcall
mov
mov
aas
out
mov
stos
cmp
jne
cmp
push
inc
out
aaa
or
push
je
add
popa
add
dec
adc
or
mov
cmp
jecxz
dec
pop
stos
int
outsl
cmp
pop
jno
cmp
push
cmp
mov
clc
mov
mov
jecxz
inc
xlat
es
ljmp
sub
ds
pushf
aaa
lcall
dec
ds
sbb
cmp
adcb
mov
mov
sbb
sub
cli
mov
ljmp
mov
hlt
mov
xchg
ss
xchg
lea
imul
int
fsub
dec
dec
and
xor
loope
sub
sub
shrl
cmpsl
movsb
fisubl
push
xor
icebp
mov
rorb
pop
ret
pop
mov
cmp
and
pop
cmp
pop
ret
add
add
loopne
push
mov
insb
cli
mov
fbld
cmp
shrb
lea
nop
mov
icebp
fs
xlat
push
dec
fbld
cmp
jnp
ficoml
out
repnz
push
pushf
andl
cmp
pushf
insl
cmp
xlat
xchg
ds
pop
inc
daa
daa
clc
nop
fs
pop
mov
lret
daa
aas
out
testb
fs
adc
loopne
cmp
and
push
jmp
shll
sub
scas
mov
pop
es
aad
jge
cld
inc
cmp
mov
xor
or
popf
xor
cld
into
mov
ss
test
xchg
repnz
jg
mov
cmpsb
dec
int
pop
dec
inc
jbe
and
cld
and
sub
cmpsl
jae
les
push
lock
icebp
imul
mov
lcall
int
add
dec
xchg
pop
lods
mov
pop
mov
in
lahf
push
pand
jnp
subb
mov
in
js
jns
fsts
or
lcall
or
sti
loopne
jnp
lods
push
cmpsb
cwtl
loope
or
xchg
cmp
adc
je
cmp
inc
cmp
add
xor
lret
bound
cmp
pop
addr16
cmpsl
jmp
enter
mov
pusha
cmpsb
fcmove
iret
iret
in
out
rol
add
pop
stos
pop
add
push
jecxz
inc
jb
jo
xor
jbe
in
xchg
mov
es
aas
xorl
or
pushf
ja
nop
imul
xchg
lods
fnstsw
mov
xchg
push
out
pop
xlat
sbb
lahf
mov
mov
outsl
into
mov
sbbb
out
test
inc
mov
jge
jbe
in
inc
cmc
jne
inc
scas
dec
jecxz
mov
sbb
jae
loope
jge
add
pop
mov
mov
loope
mov
fstpl
or
imul
test
push
lahf
not
push
push
mov
and
loope
and
sub
loope
jb
aaa
or
dec
loope
add
cmp
xchg
clc
xor
lea
clc
adc
sbb
mov
es
xchg
mov
jae
xchg
mov
jns
cld
loopne
add
out
xlat
inc
scas
ljmp
shl
outsb
mov
push
pop
mov
bound
dec
sub
xor
jg,pt
dec
sub
hlt
mov
cmc
xchg
iret
jae
cs
test
jb
inc
mulb
mov
mov
in
dec
movhps
sub
dec
mov
call
outsb
xchg
outsb
mov
dec
popa
test
cli
ret
push
cmc
arpl
in
lcall
adc
lock
fistpll
push
xor
jno
clc
inc
push
packuswb
dec
lods
aaa
xlat
call
adc
fsubrl
stos
mov
adc
xchg
fwait
adcb
xor
dec
test
mov
loopne
fiadds
dec
and
lahf
imul
and
adc
roll
inc
clc
push
das
dec
dec
ds
jp
add
test
lret
adc
lods
je
jmp
push
jg
jae
nop
in
data16
mov
xchg
adc
inc
pushf
lahf
inc
sbb
out
mov
xor
mov
pushf
sub
pop
movsl
in
dec
jo
lock
mov
push
in
xchg
or
adc
cmpsb
push
inc
pop
out
loope
mov
and
and
aad
insl
lods
lock
cli
inc
xchg
xor
test
or
fyl2x
pop
lods
ljmp
fstp
inc
lock
jmp
popf
xchg
mov
movsb
lret
add
mov
in
adc
jae
sbb
out
loop
popa
sbb
mov
jmp
pop
shrb
mov
fstpl
pop
fwait
std
out
pop
out
cmpsb
mov
xor
xchg
lds
jo
movsl
movsl
dec
cmp
jns
stos
cwtl
out
pop
pop
subw
mov
sbb
push
stos
pop
cs
pop
enter
push
mov
mov
adc
dec
inc
pop
push
dec
pop
out
sbb
out
xlat
mov
imul
outsl
inc
pop
int3
pop
dec
dec
cmp
mov
pop
pop
jns
arpl
outsl
xchg
aam
outsl
roll
sub
add
js
jp
xchg
jbe
cmp
xchg
mov
push
leave
mov
dec
mov
mov
leave
pushf
fsubp
mov
xchg
js
dec
sub
nop
mov
sbb
test
and
push
clc
xchg
das
and
out
movsb
mov
aaa
xchg
inc
dec
sub
mov
scas
aas
sti
imul
mov
gs
ret
sti
insb
mov
cmp
lock
jl
fwait
pushf
and
fmul
in
or
loop
mov
push
jge
std
nop
int3
or
sahf
jno
push
pop
sbb
movsb
push
sahf
jle
pop
mov
cld
test
int
lods
ja
test
inc
add
dec
loope
adc
jg
dec
and
and
rorb
ljmp
dec
mov
push
xor
pop
add
xchg
cli
and
mov
xor
mov
scas
dec
lock
mov
int3
sbb
inc
dec
cmp
ss
pop
mov
xchg
jl
fstpt
or
ret
ljmp
sbb
jl
mov
mov
cwtl
fadds
push
cli
pop
out
and
jl
cmp
js
insl
xor
fdiv
lds
jg
pop
push
or
ss
pop
outsb
push
lods
push
insb
aam
fildll
loopne
fucomi
repz
and
in
sub
adc
adc
sbb
push
push
add
mov
adc
aam
pop
mov
ljmp
lahf
enter
into
and
mov
push
and
outsl
dec
leave
out
sar
shlb
shrb
loope
cmp
and
ljmp
addr16
lods
or
xor
cmp
lret
sub
and
ret
inc
lock
xlat
push
cltd
cmpsl
or
push
mov
outsl
xor
jb
xor
xor
or
mov
pop
mov
andb
cs
and
lock
and
pusha
adcl
jge
insb
push
cmpsb
scas
mov
add
int3
push
pushf
lcall
xor
in
push
sar
sbb
push
push
cmpsb
sub
xchg
les
cs
add
jns
lock
cmp
das
dec
aad
das
push
mov
fcomps
jo
sub
sahf
call
xor
dec
idiv
clc
jg
or
push
pop
pop
out
lds
jmp
adc
and
xchg
push
add
arpl
adc
test
adc
push
cwtl
jecxz
imul
jge
orb
xchg
mov
jne
dec
sbb
pop
xchg
int3
inc
cmpsl
insb
mov
lock
movl
or
test
push
add
mov
cwtd
xchg
xchg
cli
decl
mov
fsubrl
aaa
xor
push
pop
in
push
and
jbe
mov
das
sahf
dec
pop
mov
notb
lea
xchg
adc
cmp
lds
aad
mov
adc
sub
aaa
movsl
mov
ret
xchg
mov
and
repnz
subb
inc
mov
pop
xor
sub
push
sub
divl
stc
push
jp
mov
js
xchg
and
daa
popf
imul
or
mov
lahf
inc
sub
xor
sub
aaa
add
shll
enter
insl
pop
std
and
int3
or
cmp
mov
repz
fadds
xchg
xor
mov
xlat
mov
adcb
push
lcall
pop
test
mov
ds
lock
call
jle
jns
mov
jge
sub
hlt
aad
jnp
lahf
stos
and
sahf
nop
cli
aad
daa
cmpsl
data16
xor
out
shl
cli
ljmp
call
or
pusha
leave
lods
inc
and
inc
fs
mov
sahf
and
gs
xor
daa
ljmp
or
and
cmp
lret
xchg
mov
cmp
sbbl
push
jp
mov
test
pop
in
add
mov
mov
sub
cmp
dec
pop
aam
aad
sbb
cmpsl
xlat
add
pop
clc
or
jb
dec
cmpsl
loope
xor
lods
push
inc
jae
jns
pushl
adc
inc
fs
cltd
push
sbbb
insl
mov
lret
push
or
pop
push
and
xlat
inc
into
lret
or
rclb
and
xorl
cmp
icebp
sub
inc
xchg
adc
lds
sub
adc
hlt
mov
rep
pop
adc
xchg
pop
test
cmp
xchg
ret
int
div
cmpsl
popa
mov
jbe
mov
sub
inc
jnp
out
xchg
pop
sti
faddl
jp
push
xor
cmc
jg
cli
cwtl
imul
pop
sub
push
mov
aam
in
cmpb
and
lods
enter
xchg
fs
sbb
in
lods
xchg
push
xor
push
scas
je
test
xchg
sub
pop
push
lret
es
sbb
out
sarb
addr16
add
je
jge
pop
cmp
fdivs
ficompl
sub
mov
push
and
cmpsl
scas
dec
icebp
or
mov
aad
mov
lods
mov
mov
adc
adcl
pushf
movsb
or
lock
xchg
loop
cmp
mov
jae
mov
inc
clc
ss
adc
jno
mov
aas
movsb
sbb
xchg
ret
fstpl
nop
loop
lods
out
mov
xchg
mov
out
mov
rorb
idiv
es
testb
icebp
in
leave
xor
push
xchg
xchg
fiaddl
push
test
xchg
aaa
adc
jno
xor
adc
movsb
int
les
lahf
sbb
clc
aam
in
add
mov
filds
icebp
xor
mov
popl
loop
add
mov
data16
outsl
loope
gs
xor
test
popa
clc
mul
insl
dec
nop
loop
call
jp
bound
shll
mov
and
and
dec
shll
push
adc
jnp
dec
dec
sahf
xchg
rcr
add
jg
enter
sub
cmp
mov
push
cmp
test
int
inc
stc
pop
cmp
mov
adcb
xchg
sub
push
jmp
lods
popf
es
lahf
push
push
mov
imul
mov
and
std
mov
test
js
mov
std
shr
pop
sbb
cmpsb
lea
xor
cmp
fwait
outsb
jo
adc
sbb
fsubrs
test
jp
sub
psrlq
popa
mov
adc
sub
cli
dec
xchg
pop
adc
loop
ror
fidivrs
mov
xchg
lds
sbb
dec
ds
xor
mov
inc
pop
sub
lods
leave
inc
xchg
mov
cmp
mov
mov
dec
les
dec
fst
mov
std
xor
push
jge
js
sub
push
push
addb
jns
mov
and
inc
imul
jg
sbb
shlb
pop
inc
mov
out
fwait
icebp
movsb
sbb
or
sub
sub
mov
leave
xchg
cmp
xchg
aad
loopne
test
cmp
daa
pop
add
mov
jg
push
sbb
loope
lret
mov
mov
daa
add
and
mov
add
or
pushw
and
mov
xor
dec
cmp
or
add
notl
xchg
rolb
cmpsb
ffreep
cmpsl
adc
bound
enter
inc
xor
xor
movsl
lgs
movsb
inc
and
pop
xchg
loop
xchg
cmp
lds
out
xchg
fcoms
cmp
lret
lret
outsb
mov
fcmove
cltd
push
call
pcmpgtb
outsb
repz
mov
test
popaw
lahf
into
repnz
inc
and
shll
fistpl
andl
jmp
lcall
pmuludq
jl
movsl
push
or
mov
push
mov
push
subl
mov
push
cmpl
sbb
jne
dec
aas
out
leave
add
xor
xor
fnstcw
in
sub
xchg
inc
or
stos
repnz
pop
lcall
dec
sbb
adc
pop
and
test
flds
pop
inc
outsl
jle
xchg
add
loop
or
dec
xchg
xchg
sub
sub
jp,pn
aas
and
mov
jecxz
mov
sti
sbbb
fs
int3
test
xchg
shll
xchg
xchg
xchg
testb
and
in
jnp
mov
push
int3
shll
ds
clc
adc
jo
test
or
xlat
inc
leave
in
jle
adc
sbb
xor
jne
pop
jns
inc
call
sbbl
or
ret
pop
loope
out
stos
fildl
ret
push
decb
data16
mov
xchg
xchg
mov
adc
fcomip
mov
or
cwtl
cli
rcrl
sar
sub
mov
adc
jecxz
pop
push
push
ret
das
dec
sti
cs
lock
aaa
bound
dec
xchg
lcall
icebp
add
aas
xchg
and
add
int
pop
sub
adc
sbb
cli
aaa
mov
push
lods
in
mov
add
sahf
pop
pusha
mov
or
cli
fs
vpcmpeqb
gs
gs
testl
jb
mov
aaa
mov
loop
mov
in
add
lods
ret
push
or
sahf
cltd
mov
fistl
mov
stc
add
shr
addr16
mov
fstl
addr16
lret
xchg
scas
sbb
ret
cmp
push
or
jp
and
inc
pop
aam
loop
xchg
xchg
or
and
not
mov
cmp
adc
sub
pop
out
pop
into
loopne
enter
or
pop
sbb
pop
push
push
pop
cmp
push
and
sbb
enter
sub
lahf
lods
sbb
push
pushf
aas
insb
xor
cld
out
outsb
add
test
imul
mov
sbb
repz
hlt
jno
mov
test
loope
or
push
cmp
std
mov
and
stos
pushl
dec
hlt
clc
movsb
imul
pop
out
xchg
inc
inc
pop
sbb
sub
fdivl
fists
pop
or
fwait
imul
or
insb
mov
or
movsl
stos
adc
ds
hlt
mov
stc
sub
xor
pop
or
cmp
xorl
xchg
xchg
push
test
rclb
xor
xlat
jmp
adc
cwtl
bound
mov
inc
jge
flds
dec
dec
push
pushf
in
bound
and
jmp
repz
lock
ss
mov
or
cld
adc
std
or
sbb
sub
js
out
pop
fidivs
mov
repz
loopne
pop
loop
fmuls
dec
push
jmp
into
iret
xchg
jns
enter
es
sub
xor
adc
cmp
ja
jmp
outsl
lock
icebp
mov
pop
mov
mov
sub
scas
lods
lods
imul
jae
std
jge
mov
jp
pop
mov
lret
subb
iret
pusha
pop
je
imul
jl
fdivrl
mov
pop
fs
inc
sarl
je
push
std
lds
mov
stos
mov
pop
pop
adcl
inc
or
popa
fdivrs
add
push
dec
jge
pop
or
repz
loope
mov
mov
fdiv
pop
jle
push
dec
adc
inc
insb
push
in
insl
jo
mov
enter
adc
test
push
jl
mov
dec
fidivl
faddl
popa
mov
jecxz
fistpll
mov
lahf
mov
scas
outsl
push
outsb
lret
fnsave
dec
daa
call
das
pop
in
mov
inc
and
test
mov
mov
pop
add
cs
out
mov
jl
dec
es
in
out
dec
xchg
jmp
jae
and
or
sub
lods
fdivl
je
xor
imul
fsubs
push
or
int
mov
xchg
jne
sub
pop
cmp
xchg
ja
loope
pop
insb
mov
out
adc
pop
or
roll
jecxz
cmp
pop
jp
icebp
mov
inc
xchg
or
test
scas
andb
mov
stc
hlt
mov
inc
stos
and
adc
movsl
mov
cmpsb
dec
adc
ljmp
dec
popa
popf
lods
add
data16
pop
dec
ja
stc
std
icebp
fwait
inc
cmp
push
jae
xchg
dec
and
push
add
aad
dec
mov
cmpb
nop
rcll
mov
fstps
pop
jl
arpl
stc
fiaddl
loopne
int3
dec
cld
xor
jae
dec
loop
ret
and
cmp
lret
fwait
add
inc
push
adc
outsl
cmp
icebp
pop
pop
cli
add
push
outsb
aas
fnstsw
push
jns
das
xchg
mov
adc
orl
cmc
popa
xorl
rcrb
mov
ljmp
push
mov
addr16
imul
lds
popa
jne
pop
cwtl
jecxz
cmp
cmp
addr16
iret
inc
popa
bound
or
loope
jne
sbb
int3
inc
enter
repnz
ds
enter
stc
add
repz
push
outsb
scas
aas
jo
repnz
subl
rolb
cltd
lods
mov
push
cmp
scas
add
add
in
popf
sub
inc
mov
outsl
fimuls
pusha
xor
incl
jle
or
inc
je
push
aam
icebp
shl
hlt
dec
jecxz
mov
pop
imul
sti
sbb
leave
pop
ds
imul
loop
jnp
imul
xor
mov
jp
xchg
add
pop
lds
pop
xor
popf
mov
mov
or
pop
xchg
push
stos
in
lea
lcall
ja
test
outsl
cwtl
mov
mov
insb
stc
adc
cld
jbe
jp
xor
testb
jb
mov
sub
loop
xchg
stc
jp
enter
das
mov
mov
xor
add
jbe
sti
add
add
mov
adc
fsubrs
sub
stos
scas
push
sti
mov
lock
and
pushf
icebp
and
adc
lods
test
jno
add
mov
pop
dec
sbb
mov
fistpl
repnz
fprem
cmpsb
sub
sub
sub
mov
mov
mov
faddl
push
inc
iret
stos
stc
test
or
movsb
jg
mov
xchg
jl
test
mov
push
in
jmp
sbb
mov
iret
movsl
pop
lahf
cmpsl
mov
jp
push
inc
sahf
jle
mov
call
jg
pusha
and
mull
sub
in
jecxz
int
and
sbbb
ja
icebp
inc
mov
test
lret
test
jae
adc
test
test
fildl
clc
cli
daa
ljmp
sub
nop
pushf
fdivrl
pop
test
xor
pusha
pop
test
cltd
stos
sbb
adc
cmp
fists
and
cli
js
adc
xor
cmp
and
add
lret
push
jbe
and
xor
sti
leave
call
std
sysexit
loopne
jae
or
lret
dec
sub
mov
dec
test
jbe
pop
push
jns
dec
add
in
or
pop
shrb
movsl
push
fwait
ret
push
mov
add
mov
aas
clc
sarl
ret
in
lea
lods
lock
fisttpl
pop
mov
jl
in
les
jmp
rolb
aam
popf
nop
cmp
nop
sbb
mov
sub
lods
or
js
and
jl
xchg
sbb
jno
subl
inc
xchg
test
clc
out
subb
int
clc
mov
mov
push
push
ds
inc
outsl
xchg
sti
mov
gs
repz
push
and
xor
lahf
imul
sub
in
jecxz
sub
cmp
jecxz
xor
icebp
dec
push
mov
pop
dec
enter
bound
sbb
sbb
test
sub
jle
fidivrl
les
jbe
jp
jp
xor
jecxz
add
sbb
jl
mov
mov
cmpsb
stc
xchg
stos
xchg
jnp
daa
push
jmp
mov
fisttps
out
incb
dec
and
out
fisttpl
es
jbe
adc
enter
gs
mov
jb
push
dec
mov
mov
fstpl
jbe
cmpsb
sbb
mov
xchg
test
adc
push
repnz
cwtl
mov
es
ss
and
xchg
sbb
jmp
ret
cmpsl
subb
jmp
xor
aam
es
mov
scas
movsb
pushf
cld
jno
cmp
insb
sub
mov
loopne
cmpsl
jg
scas
fwait
dec
cmp
iret
pop
lahf
pop
xchg
test
add
fistl
cld
pop
mov
out
add
movsl
xorb
xor
adc
adc
jnp
pop
inc
dec
lahf
lods
jb
test
loop
push
shlb
or
pop
pusha
test
dec
loop
sub
adcb
push
adc
fwait
mov
sbb
sub
jle
repnz
pop
sar
xlat
andl
jae
xor
xor
fcomps
mov
fstl
pop
pop
dec
and
test
pop
leave
jae
mov
xchg
sbb
fcoml
inc
pop
jno
xchg
and
sub
sbb
sbb
and
test
dec
rorl
pushf
test
pop
int3
pop
inc
dec
sbb
push
pusha
hlt
pop
jge
dec
cwtl
push
push
push
dec
dec
imul
or
push
mov
repnz
call
pop
les
pusha
je
movsb
adc
test
xor
and
addr16
or
mov
shrl
dec
stos
nop
aam
sbb
ja
and
xor
in
push
fistl
sbb
jbe
fdivrl
push
clc
and
jmp
dec
jo
jno
scas
and
lahf
cmp
je
sbb
scas
xor
inc
int3
hlt
cmp
dec
mov
rolb
sbb
xchg
xchg
in
push
dec
adc
inc
cmpsb
sub
loope
inc
frstor
lock
psubb
push
xchg
pusha
sbb
icebp
test
cmc
mov
mov
out
jle
jge
mov
in
cltd
mov
xchg
mov
aad
lcall
movsb
push
js
aas
mov
lcall
out
inc
sub
out
push
icebp
stos
inc
testl
jge
lock
mov
gs
adc
sub
add
push
test
jle
sbb
sub
movl
sub
lret
sbb
xchg
xor
icebp
push
test
or
stos
xchg
add
dec
mov
dec
dec
int
dec
jno
sub
dec
sub
in
shl
add
mov
outsl
cmp
lds
pop
sbb
cwtl
testl
out
movsl
mov
add
pop
out
xchg
jecxz
add
in
push
dec
popa
ret
sub
xchg
xchg
pop
cmc
push
xor
in
cltd
sbb
sti
fistl
mov
add
rclb
inc
or
cmpsb
out
add
bound
shrb
fisubrl
mov
mov
add
in
sbb
inc
xchg
pop
es
ss
imul
inc
xchg
icebp
mov
push
add
mov
test
bound
or
cld
fwait
addr16
pop
lods
fwait
cmp
daa
gs
lret
pushf
push
out
pop
add
jecxz
outsl
mov
mov
add
inc
and
int
xchg
sbb
and
es
popf
stc
loop
xchg
adc
lahf
sbb
jnp
dec
and
xchg
addr16
outsb
cltd
mov
inc
mov
adc
mov
sub
scas
in
repz
fsub
inc
xor
cmp
inc
inc
inc
sbb
adc
jmp
push
shr
pop
dec
pop
jl
fistpll
jo
ret
icebp
ficoml
div
sub
mov
or
add
mov
and
cmp
test
ret
test
jns
xor
out
and
mov
cmpsl
inc
push
cmp
scas
dec
sbb
outsl
and
xor
rcr
cmp
xor
popa
int3
cmp
add
in
cmp
fs
in
fcmovbe
add
xchg
sbb
xchg
or
jl
lods
aam
xor
xchg
push
pop
sbb
xor
xor
add
xor
inc
aas
and
cmc
divl
xchg
std
sahf
mov
lcall
sbb
mov
jo
sbb
xor
or
rorb
xchg
add
dec
rcrb
dec
outsb
scas
int3
mulb
rclb
inc
dec
fldt
fildl
dec
rcrb
xor
mov
cmp
js
adc
xor
mov
pop
lahf
loope
jl
or
mov
inc
out
movsl
adc
mov
idivl
sbbl
in
inc
stos
adc
prefetcht0
ljmp
aam
and
cmp
mov
sub
jno
pop
rclb
sub
cmc
mov
mov
test
adc
xchg
arpl
das
push
daa
dec
call
add
stos
adc
sahf
pop
in
nop
jge
sbb
cmp
adc
insl
fidivl
add
das
xchg
loop
lea
out
xor
cs
mov
cli
rol
in
in
aas
jecxz
push
das
or
in
push
sbb
xor
push
mov
dec
xchg
jle
cmpsb
mov
data16
inc
ljmp
xor
ja
nop
insl
dec
nop
je
jbe
outsl
adcl
hlt
inc
dec
insb
mov
inc
sub
shlb
push
les
cs
push
or
mov
xchg
mov
out
orb
aam
xor
add
mov
mov
xor
dec
adc
test
cli
rcrb
std
fsts
xor
sbb
pop
aam
rol
sbb
fsubl
aas
adc
in
int
jae
dec
mov
pop
pop
jmp
call
and
insb
call
cmc
jmp
mov
or
xlat
movsb
mov
mov
sbb
loopne
add
hlt
neg
into
int
mulb
mov
mov
popf
test
push
ret
sbb
outsb
xor
or
jbe
xor
add
nop
repz
jl
mov
mov
add
dec
or
ret
and
xchg
pop
mov
loopne
pop
enter
push
adc
mov
stos
gs
cmpsb
xchg
lea
xchg
jp
out
push
mov
mov
jnp
int
xor
cmp
dec
sbb
shlb
iret
cmp
add
mov
jmp
int3
les
fisubs
pop
cmpsb
incb
cmpl
subb
rcll
inc
das
sub
cli
leave
into
cld
aam
sbb
add
pop
jbe
push
rclb
xchg
sti
stc
pop
sahf
dec
sbb
pop
lret
sub
leave
add
out
pop
mov
dec
pop
and
inc
sub
adc
add
mov
sahf
enter
fwait
pop
xorb
jp
test
in
cltd
lods
std
mov
cwtl
inc
popa
shlb
adc
push
jns
mov
aad
mov
aaa
repz
mov
or
loope
or
negb
ljmp
lcall
xor
pop
sbb
adc
in
nopl
cwtl
adc
cmp
repz
bound
xor
xchg
cmovl
movsb
push
or
movsb
push
mov
jae
xor
sahf
dec
or
and
psrld
or
xchg
test
cmp
rorb
add
mov
mov
dec
jnp
jge
shll
and
sub
sub
mov
sub
adc
lret
call
jb
ja
clc
leave
add
sub
add
push
push
and
xchg
ss
sbb
pusha
scas
addr16
xchg
jmp
shlb
mov
mov
imul
jmp
pop
addb
pop
in
ja
and
dec
and
or
xchg
scas
enter
mov
ficompl
and
push
sbb
sub
lea
popa
insb
adc
insb
pop
cmpsb
popa
or
cld
jg
arpl
shr
das
xor
mov
ja
fstpt
sarl
pop
pop
das
adc
push
ljmp
je,pt
push
mov
repnz
lcall
add
sub
xor
cmp
insl
mov
and
mov
rcll
sub
push
push
shlb
pop
mov
mov
xchg
and
inc
jg
data16
sbb
ret
push
mov
dec
lds
mov
add
mov
jp
jle
pop
test
shl
scas
mov
ret
xor
cmpsb
enter
mov
mov
dec
cmp
aad
push
add
das
pushf
cs
and
fidivs
call
or
jl
or
xchg
and
imul
orl
and
mov
subl
jl
xor
add
mov
push
cmp
std
aad
mov
repz
aaa
push
sbb
movsb
and
lret
mov
pop
sub
add
scas
fwait
mov
adc
jns
cmpb
loop
mov
out
mov
and
inc
jnp
stos
pop
add
mov
dec
jle
adc
jb
and
mov
pop
fwait
jl
ljmp
addr16
in
jns
add
lock
arpl
mov
dec
add
out
lmsw
pop
fnsave
add
and
inc
shrl
les
jne
js
sti
mov
adc
mov
cld
jb
xchg
das
pusha
int3
movsl
inc
sti
xor
fcmovb
sbb
and
in
xchg
push
fdivr
xchg
mov
pusha
mov
rcll
mov
mov
jecxz
pop
test
jnp
rcll
jnp
ret
lret
mov
rcl
insb
mov
cmp
icebp
and
subb
pop
and
hlt
in
adc
sti
cmc
ja
test
mov
mov
xlat
int3
xchg
sub
adc
push
cmp
in
je
fbld
add
jno
inc
push
scas
jbe
ds
or
cmc
std
clc
in
and
pop
add
jg
movsl
adc
xchg
dec
sti
cwtl
jmp
mov
arpl
xchg
sbb
in
shll
inc
les
cmp
jecxz
std
nop
mov
pop
push
lds
add
or
sub
test
shll
add
jmp
and
xchg
popf
fisttps
cmp
jne
cs
std
mov
jo
mov
pop
inc
loopne
mov
jae
jo
lds
push
aas
out
xchg
in
or
mov
popa
add
xor
and
rorl
cmp
out
das
xor
pushf
mov
push
inc
icebp
dec
in
lret
int3
cmp
push
cli
mov
fs
std
sbb
add
or
push
mov
callw
ja
inc
lock
jne
push
pop
mov
add
ss
push
xlat
outsl
mov
rorl
mov
ja
shl
rolb
call
out
loop
lea
inc
icebp
dec
incl
int
xor
xchg
jmp
je
dec
mov
imul
fcmovnb
and
mov
or
add
sbb
cmp
sti
push
cmp
mov
or
stc
cmp
daa
xor
cmp
cli
cltd
ljmp
sbbb
shlb
pop
xchg
xor
mov
sub
bnd
fcompl
mov
and
xor
push
cmpsl
in
cmp
popa
int
cmpb
sub
or
aad
push
iret
fdivrl
imul
and
mov
add
lods
mov
sbb
jnp
dec
cmpsb
lds
lea
sbb
nop
cmp
andl
adcb
xor
fstps
inc
ss
es
test
sbb
cli
xchg
mov
std
hlt
movsl
jo
int
push
cmp
lahf
cltd
pop
ss
sub
pop
pop
outsb
dec
rol
and
subb
cs
xor
test
mov
mov
fs
push
fistps
mov
mov
inc
jo
or
mov
mov
rol
sbb
mov
push
sti
jmp
add
dec
adc
aaa
mov
dec
cmpsl
cs
jae
add
aam
sti
es
adc
lahf
out
pop
mov
mov
add
inc
xor
lret
in
or
fs
pusha
mov
sbbl
ss
das
adcl
dec
jg
xor
dec
jle
decl
mov
cwtl
sbb
in
cmp
lret
rclb
mov
xchg
jecxz
sbb
or
adc
addr16
dec
sahf
push
dec
xchg
movsb
inc
imul
das
lds
jbe
push
fnstenv
xchg
push
testl
push
data16
es
inc
jg
cli
les
fildl
sbb
lcall
stos
fsubl
xorb
mov
push
cmc
xor
dec
data16
ds
sbb
cmp
lret
insl
pop
ss
or
aas
imul
dec
add
stos
data16
shlb
push
xchg
xchg
aaa
mov
pop
add
sbb
push
adc
cli
mov
mov
mov
mov
push
hlt
aaa
inc
mov
mov
add
std
jo
push
inc
mov
adc
mov
mov
mov
mov
adc
xchg
dec
sub
adc
mov
or
push
or
std
mov
or
test
into
and
int3
dec
bound
icebp
pop
xor
and
shlb
lret
test
testb
push
lods
outsl
mov
mov
mov
or
dec
leave
xor
enter
and
sahf
mov
xor
and
loope
mov
and
nop
mov
sub
mov
shll
jo
aas
and
push
fnstcw
jecxz
imul
add
test
std
aaa
lds
les
into
cmpb
pop
dec
and
hlt
dec
xchg
mulb
mov
dec
xor
mov
jbe
xorl
lods
test
pushw
jns
mov
mov
xor
fmull
sahf
sti
stos
add
aad
or
dec
test
cwtl
pushf
add
lcall
fsubs
sub
inc
icebp
pop
push
lea
aaa
test
or
fdivl
and
mov
mov
adc
dec
dec
pop
xchg
icebp
mov
lock
add
inc
adc
aaa
pop
and
and
cli
xchg
adc
and
xor
mov
add
loope
dec
inc
fnstsw
iret
int3
mov
push
or
add
xchg
aam
imul
mov
sub
test
pop
cmpsl
cmp
mov
push
sub
mov
dec
cmc
mov
push
arpl
int
cmp
push
sbb
sbb
nop
dec
cmp
add
xor
pop
enter
aaa
int
add
pop
fsubrs
push
test
fs
outsb
pop
and
movsb
mov
mov
dec
cmp
sti
xor
test
sbb
call
cwtl
and
mov
mov
incb
mov
push
pop
loopne
stc
in
js
test
loope
cmp
mov
sbb
push
popf
dec
outsl
lea
mov
xchg
sbb
fneni(8087
sbb
jge
popa
xlat
sbb
add
cltd
pop
aaa
sub
xchg
push
push
jne
mov
adc
scas
cltd
inc
push
cmc
push
xchg
test
outsl
das
dec
gs
add
jbe
sub
pop
xor
insb
cld
sbb
pop
out
dec
ficompl
sti
push
aam
call
mov
or
jnp
or
cwtl
mov
sub
xchg
add
stos
idivb
xor
les
js
int
mov
push
lods
clc
inc
xchg
stos
jne
jecxz
push
xchg
cs
lds
dec
in
push
sar
jne
test
add
in
adc
movsb
lea
add
mov
daa
push
ljmp
sarb
dec
ss
inc
pop
aaa
inc
sub
mov
rsm
shll
mov
pusha
jae
insb
iret
aam
jnp
fs
xchg
or
or
dec
dec
jb
mov
arpl
dec
sti
and
ds
adc
jnp
ja
mov
jmp
loopne
mov
push
pushf
test
dec
xor
xor
sbb
roll
cmp
push
clc
outsb
hlt
nop
aas
pop
fildll
and
xchg
mov
jp
mov
sbb
push
xchg
movsb
lds
mov
or
xchg
sbb
aas
test
cmpsl
cwtl
pop
inc
push
sub
out
clc
adc
inc
test
adc
sahf
push
ds
clc
out
clc
jbe
xor
and
or
jl
shl
les
data16
shrb
rorb
push
push
aam
push
mov
pop
mov
pop
in
fistpl
sub
rorb
fsubrl
fsubs
xchg
mov
test
pop
pop
lret
mov
mov
das
pop
subb
sbb
cltd
addr16
popf
bound
mov
sbb
aad
sub
loope
flds
push
xlat
ss
xchg
daa
cwtl
sbb
mov
adc
sub
enter
cmp
loop
inc
lahf
pop
lods
incb
lret
lea
mov
or
aaa
cltd
loope
pusha
movsl
cmp
cmp
arpl
pop
inc
mov
mov
out
pushf
push
lock
or
mov
dec
mov
pop
pop
test
test
and
adc
mov
xor
popa
popf
and
sub
jl
and
mov
mov
loopne
pusha
and
add
xchg
dec
adc
add
clc
rcr
jbe
imul
scas
stos
add
ror
das
cmp
lret
ffree
inc
jge
push
lods
repnz
xor
xor
push
cltd
lds
and
xor
mov
add
mov
adcl
cmp
orb
ret
ds
mov
stos
jge
mov
push
jb
sbb
out
loope
cmc
cli
shlb
mov
pop
mov
stos
nop
mov
jge
and
fisttpl
mov
add
mov
sbb
xchg
int3
pusha
addr16
xchg
rep
test
insl
mov
mov
fnstsw
adc
pop
scas
and
xor
push
adc
ret
lods
mov
and
xchg
mov
add
push
mov
and
int
jg
pop
outsl
out
adc
mov
push
jnp
ss
insb
fstl
mov
dec
mov
mov
sarb
iret
insb
jmp
inc
cli
lret
inc
gs
push
lahf
shrl
je
lods
jmp
cwtl
xor
fidivs
xor
popf
sbb
fnsave
or
shrl
jno
xor
sub
adc
test
call
xchg
pop
scas
push
pop
inc
push
enter
pop
mov
mov
rcl
test
xorb
xchg
push
or
arpl
lret
jecxz
in
sti
mov
mov
cmp
dec
mov
jnp
lods
xor
xor
push
pusha
or
and
pop
dec
int3
pushf
scas
adc
sub
sarl
clc
ss
jg
cli
pop
ljmp
mov
sahf
push
mov
pusha
sub
cmpsl
cmc
pop
in
sub
imul
sbb
mov
ret
pop
dec
aas
push
mov
ljmp
addr16
mov
xchg
sbb
and
cmpsl
popf
mov
jecxz
pop
pusha
loop
lods
aad
testb
mov
add
ja
test
pop
jl
data16
mov
xor
pop
cmpsb
in
push
mov
jge
jo
ja
out
pop
push
insl
jle
out
pop
inc
mov
out
jo
sub
add
cmp
push
mov
in
jbe
jge
icebp
ret
addr16
fidivl
movl
icebp
cld
imul
test
test
and
mov
mov
xchg
shll
js
mov
mov
sub
jae
or
loop
mov
sbb
mov
push
xchg
ss
gs
push
addb
cmp
and
dec
sbb
cmp
add
loop
mov
or
std
mov
loopne
push
lock
dec
add
mov
lods
pusha
cmovbe
sub
ss
icebp
cmc
les
jecxz
call
add
std
xchg
in
jmp
fadds
cmpsl
test
pop
mov
push
adc
fisttpl
fwait
aam
xchg
fsubrp
push
rolb
roll
fst
sub
sub
aad
pop
stos
sub
add
adc
jl
outsb
aas
fnsave
mov
or
leave
sub
lods
jno
or
cli
inc
mov
movsb
pop
sbb
data16
leave
xchg
adc
loope
jg
call
mov
je
lret
mov
in
aad
mov
pop
ss
cmp
jo
adc
push
pop
stos
mov
xor
aas
xor
fcompl
or
mov
xor
mov
hlt
adc
add
adc
xchg
lods
mov
addb
adc
xor
dec
cmp
push
cmpl
dec
mov
mov
or
shll
adc
clc
cs
xor
out
int3
jl
lcall
mov
jne
pusha
xor
xor
push
call
fnstsw
sbb
lret
sbb
xor
sub
cmpsl
addr16
insb
les
sub
das
jno
daa
movd
test
lahf
jg
and
mov
adc
pop
ret
sahf
cld
repz
insl
fsubl
push
daa
scas
push
jecxz
cmp
vpaddsb
cmp
shl
push
pop
lret
fsts
xor
add
sbb
aaa
adc
cmp
bound
lcall
in
inc
stc
pop
xchg
mov
aas
fwait
mov
jl
mov
ss
jl
pop
stos
data16
fistpll
or
push
es
sbb
push
nop
dec
lret
fucom
cmp
jb
insb
push
sub
cltd
push
insl
jmp
and
jl
icebp
jmp
push
fld1
mov
jo
test
lods
imul
std
pop
in
leave
and
mov
inc
aaa
push
fistl
sub
pop
push
xchg
mov
shll
arpl
jmp
push
bnd
rclb
inc
pop
fisubl
mov
pop
lods
hlt
fidivs
adc
test
xor
std
std
mulb
add
lea
sub
push
push
add
lods
mov
add
aas
or
pop
lea
fs
lahf
xor
rcl
mov
push
ficomps
fmull
mov
dec
inc
test
inc
scas
adc
mov
add
lret
or
imul
jae
dec
push
sbb
test
pop
inc
popa
jle
and
mov
subps
imull
dec
cmp
paddb
cltd
and
push
adc
dec
popa
hlt
fcmovnb
addl
aad
xchg
ljmp
jne
mov
xor
dec
dec
movsl
das
push
push
and
adc
inc
mov
inc
sbb
ljmp
ss
mov
push
flds
cmp
dec
imul
packsswb
lcall
outsb
inc
lret
idivb
jo
fldt
mov
and
mov
adc
jmp
movsl
cmp
test
mov
jb
fwait
test
push
aaa
inc
cmc
or
and
pop
mov
pop
rcr
sub
and
rcpps
or
jbe
add
push
push
movsw
and
arpl
das
arpl
inc
jb
sbb
mov
outsl
sbb
insl
mov
cltd
push
inc
in
les
add
xchg
dec
push
lods
loopne
cld
clc
ficoml
shlb
mov
mov
gs
lea
inc
mov
dec
pop
xchg
out
test
addr16
and
pop
pusha
fstl
pop
fdivl
lahf
jmp
cmp
pusha
out
inc
mov
sub
jae
sbb
sub
mov
mov
jecxz
dec
je
cmpsl
cmpsl
fld
xchg
aam
movsl
sub
jecxz
movsb
adc
pop
icebp
sbb
or
andb
push
push
iret
adc
punpckhwd
jge
pop
sbb
or
test
shrb
or
and
imul
in
cmp
fimull
sub
mov
shll
shr
into
dec
test
or
lea
notb
imul
adc
cmpsl
cmp
addb
outsb
icebp
scas
testb
out
mulb
fnstsw
mov
and
mov
adc
pop
mov
movsb
push
mov
mov
lret
cltd
aas
iret
std
and
xchg
and
jecxz
push
inc
sbb
fwait
mov
lods
xor
fs
pop
les
test
je
push
out
fwait
mov
in
daa
adc
cwtl
divl
ja
mov
pop
lret
addr16
xor
gs
sbb
es
hlt
cmp
pop
int
iret
jns
ljmp
lods
sti
lret
icebp
addb
mov
mov
pop
pop
and
insl
adc
lea
les
xchg
xchg
dec
imul
cmc
cmp
inc
or
mov
imul
cmpsb
pushf
jnp
dec
in
push
push
lcall
cwtl
xchg
mov
or
pop
and
pop
mov
fs
sub
jge
sub
insb
sub
cltd
jl
push
pop
pop
outsl
nop
xchg
xor
out
neg
mov
mov
lcall
enter
jno
pop
push
cmp
or
mov
dec
cmp
clc
nop
pusha
inc
mov
mov
mov
insl
mov
sbb
sar
in
clc
movsl
mov
insl
xchg
aas
adc
fildl
xchg
lds
push
sahf
sbb
xor
inc
in
mov
adc
mov
push
aaa
xor
ds
inc
add
and
pop
xchg
jmp
mov
dec
int3
dec
into
mov
mov
inc
into
out
dec
dec
adc
sbb
xchg
sbb
push
mov
push
outsb
shrl
xchg
fbld
mov
pusha
pusha
jl
push
pusha
mov
mov
jmp
pop
pop
pop
jg
in
gs
insb
xor
leave
xchg
shlb
je
dec
pop
push
fsubrp
xchg
call
cs
loop
faddp
aas
xor
into
outsb
rcr
add
push
cmp
popf
cmp
imul
inc
scas
mov
jecxz
xlat
or
icebp
shll
cmp
mov
mov
pop
shrl
mov
std
std
jge
test
xchg
cmp
fs
and
pop
and
jne
and
rorb
xchg
push
cmp
pop
push
cltd
ffree
xor
aas
dec
or
ja
add
cmpsb
mov
stc
loop
rol
add
dec
cs
lods
jns
stc
lods
or
xor
mov
sub
aaa
jge
mov
je
adc
mov
jmp
add
dec
cmpsb
gs
and
xor
jp
push
xlat
rorl
xchg
xchg
lods
fcomip
mov
push
adc
adc
repnz
test
fistpll
pop
cmp
mov
je
cld
sub
push
mov
imul
mov
and
das
fisubl
dec
mov
add
addr16
out
imul
pop
loope
daa
test
sarl
leave
in
cmc
imul
pop
xlat
adc
or
adcl
mov
out
test
xor
fbld
cltd
out
sub
into
xchg
sub
into
mov
or
push
add
lds
pop
int
dec
push
pusha
dec
push
lret
testb
enter
enter
lea
outsb
sbb
jg
jbe
xlat
dec
movsl
pusha
loopne
cmp
cmpsb
in
es
mov
das
cmp
test
add
jb
cmc
push
mov
pop
add
add
and
je
les
xchg
adc
mov
dec
lock
sub
jmp
pop
mov
lcall
sahf
xor
mov
inc
repnz
jne
xor
xchg
movb
mov
xchg
jb
push
std
add
je
push
xor
shl
mov
cmc
xchg
rorb
mov
add
add
ret
push
shlb
daa
or
leave
imul
or
dec
mov
and
lahf
sbb
out
xchg
cmp
xor
sbb
lods
or
sbb
in
xchg
data16
pusha
fs
sbb
insl
cmc
lods
jecxz
ja
sub
stos
jecxz
fistps
test
dec
mov
dec
popf
fs
into
add
dec
mov
cli
xor
lret
sbb
jle
popf
leave
and
int
subl
arpl
xor
jle
mov
or
sti
lea
xor
xor
lds
adc
in
xor
leave
popf
mov
mov
xchg
sbb
adc
dec
imul
nop
jg
sub
pop
gs
mov
sbb
cmp
sub
push
sub
cli
iret
pop
lretw
mov
xchg
adc
sti
mov
cmpsl
pop
ret
push
fs
imul
or
lret
inc
stos
fwait
insb
cwtl
das
subl
test
adc
hlt
test
sub
sub
movsb
mov
add
imul
and
loop
add
in
add
cld
scas
cmc
mov
adc
lahf
addr16
ja
aaa
or
ret
lods
loop
ret
mov
lret
add
out
xchg
cmc
shr
mov
jae
or
into
add
in
jmp
test
dec
mov
inc
adc
mov
lret
jmp
jno
add
repnz
out
loop
xor
xchg
loop
xchg
jmp
sbb
icebp
sbb
das
cwtl
insb
push
sub
xchg
inc
ljmp
mov
std
xor
mov
adc
fisttps
and
scas
sub
mov
lods
mov
add
push
cltd
xor
bnd
loopne
pop
gs
xchg
mov
mov
sub
add
add
or
mov
sbb
insb
add
cli
mov
movsl
add
and
pop
mov
in
pushl
lock
orl
or
iret
scas
mov
pushf
mov
aam
push
xchg
outsb
ja
repnz
or
or
pusha
push
popa
mov
and
jmp
dec
addr16
leave
add
push
inc
movsb
sti
sbb
inc
and
adc
inc
and
xor
xchg
mov
in
nop
rcrl
or
cmp
xor
adc
into
xchg
inc
cs
aaa
xchg
push
inc
inc
addr16
mov
aam
ljmp
mov
inc
xor
adc
out
stos
pop
xchg
pushf
insl
aas
rorb
jb
sbb
cld
jae
ljmp
xchg
leave
dec
and
aas
hlt
idiv
push
inc
xor
and
ror
xor
pushf
lcall
insl
jae
repz
jl
xlat
inc
jne
cmp
or
jne
and
and
movsb
shlb
int
ficoml
negl
std
movsl
dec
lock
sbb
mov
test
imul
in
mov
lcall
stc
call
daa
and
daa
inc
adcb
xchg
pop
pushf
clc
xchg
arpl
cmp
in
aaa
popa
add
mov
adc
xchg
int
jp
mov
jp
clc
sbb
adc
jno
and
es
inc
insb
mov
sbb
push
stos
js
hlt
loopne
fs
hlt
dec
fbstp
sub
arpl
jne
push
and
add
and
dec
mov
aad
ret
flds
mov
xchg
sahf
mov
mov
dec
jge,pt
out
and
and
sbb
loop
pop
clc
je
inc
cmp
popa
test
xchg
sbb
fsubr
push
aas
mov
jl
mov
out
adc
pop
dec
push
and
xor
outsb
push
stos
fsubrs
jle
cmp
add
sahf
mov
ljmp
stc
pop
inc
adcb
fcmove
les
stos
dec
cmp
or
xchg
call
push
gs
mov
loope
xor
xorl
mov
test
outsb
add
xor
push
push
fstpl
push
inc
push
sub
adc
pop
fsubr
sti
dec
mov
and
aas
lret
call
mov
jb
xor
push
mov
xlat
idiv
adc
insb
pop
push
cmp
hlt
mov
int
hlt
cmp
mov
movsb
fcomp
inc
sub
clc
ss
jns
and
mov
mov
cmp
das
scas
jg
gs
or
mov
pop
cmp
cli
xlat
movntps
rclb
and
shlb
pushf
push
test
inc
mov
mov
pop
dec
scas
test
xor
lock
orl
jb
mov
push
push
adc
insl
pop
pop
add
xchg
icebp
cmp
add
push
mov
shrl
outsb
dec
mov
mov
aam
push
xchg
std
aaa
fldenv
lock
mov
lret
lds
mov
xlat
and
popa
inc
jge
push
mov
and
jbe
or
frstor
push
pusha
sbb
inc
dec
dec
inc
in
mov
fnsave
xchg
dec
push
pop
and
fcompl
cld
dec
push
sub
call
mov
cld
pop
out
jecxz
lahf
inc
jle
call
cmp
jnp
ja
nop
dec
xchg
data16
in
push
and
mov
jo
popa
xor
adc
repz
push
or
dec
inc
dec
scas
jmp
adc
xchg
or
test
aam
int
jne
insl
test
or
test
mov
xchg
cmpsb
pop
add
mov
mov
loopne
arpl
jg
add
outsl
out
inc
addl
add
sub
xor
sbb
push
stc
xor
sbb
ret
and
sub
js
mov
loope
jmp
cmp
je
mov
int
adc
les
js
dec
xchg
pop
cmpsb
enter
push
repz
data16
ret
mov
jecxz
push
xchg
xchg
and
clc
inc
outsl
xchg
out
test
int
aad
sbb
sub
icebp
sar
icebp
sti
insb
jno
sbb
ror
sbb
or
inc
pop
pop
sbb
sub
mov
arpl
in
mov
and
or
scas
xchg
faddl
sub
icebp
loop
mov
jl
add
lds
or
xchg
sub
xchg
jb
lods
sub
xchg
mov
sbb
iret
jno
mov
jecxz
mov
cmp
xor
cmpsb
sbb
push
mov
xchg
or
cmp
out
in
movsb
mov
sub
jb
jp
add
imul
repz
scas
loop
mov
pop
cltd
adc
sbb
mov
data16
push
mov
and
sbb
sub
and
fisttps
loopne
sub
leave
ljmp
dec
adc
xor
fs
push
lods
mov
inc
shlb
cld
xchg
push
arpl
cmp
cmp
mov
jmp
mov
pop
test
xchg
jge
nop
jmp
call
arpl
jbe
push
adc
icebp
xor
or
iret
push
insb
scas
push
jp
dec
adcl
lods
jo
lds
xlat
arpl
jp
mov
fwait
mov
pusha
add
sarl
mov
mov
inc
mov
sbb
hlt
loop
stc
add
push
lcall
pushf
inc
jmp
in
sbb
clc
orl
mov
jmp
lds
mov
cmpsl
xchg
push
in
incl
jae
hlt
and
jmp
cmp
mov
inc
cmc
xchg
jecxz
mov
test
add
imul
dec
mov
sub
and
adc
sub
push
mov
cmp
movsb
cmp
in
inc
sbb
iret
scas
cmp
sub
mov
xchg
xchg
push
out
adc
push
cmc
pusha
inc
popa
sti
jns
sbb
cmp
push
xchg
add
mov
loope
or
test
cs
sub
and
lods
aam
sti
divb
dec
and
scas
sbb
in
mov
push
adc
rcrl
into
test
fldenv
inc
leave
test
adc
or
aam
xchg
mov
fildl
std
mov
jp
mov
mov
lock
insl
jns
xchg
xchg
icebp
rol
or
inc
cmp
arpl
inc
je
jmp
mov
sbb
roll
mov
lret
arpl
mov
jg
ret
mov
sub
dec
xchg
test
mov
or
xor
mov
xchg
jno
pushf
push
add
pop
jne
mov
ja
out
sarb
sub
and
and
mov
cli
lahf
shlb
mov
add
ss
push
ret
hlt
xor
in
mov
inc
outsl
and
ret
push
push
cltd
test
mov
das
and
add
cmp
out
sti
dec
push
cli
lods
gs
xorl
mov
jge
mov
mov
jecxz
jge
xchg
adcl
inc
dec
cwtl
loope
mov
mov
dec
push
movsl
sbb
pop
mov
or
lea
mul
pop
mov
fnstcw
addr16
mov
les
cltd
les
shr
mov
cwtl
jecxz
cmp
bound
push
outsb
cwtl
push
scas
sbb
jnp
mov
pop
pop
dec
cmp
in
mov
adc
inc
xchg
or
lcall
leave
and
mov
movsb
lods
and
ja
mov
scas
mov
data16
or
sbb
mov
push
sub
clc
xor
mov
mov
push
lods
push
out
xor
das
mov
add
sbb
jmp
jmp
test
pop
jnp
cmp
jp
in
mov
pop
sub
add
jmp
cmpsl
xchg
sti
xchg
xor
orb
imul
int
std
fwait
inc
push
fistl
mov
rcr
cld
jmp
sarb
je
imul
inc
jb
in
or
insb
pop
jp
inc
mov
mov
mov
pop
sarb
repz
inc
pop
aaa
adc
push
mov
xor
xor
out
loope
bswap
mov
data16
jmp
movsb
add
das
in
push
push
add
loopne
sahf
fidivrs
ja
int3
cmp
jne
xor
push
cmp
pop
xchg
dec
cmp
or
mov
mov
dec
xchg
lods
push
or
push
xor
rcl
cld
cmc
pop
ss
ljmp
jns
out
jg
sbb
mov
pop
ljmp
jo
or
outsb
pop
inc
pop
gs
mov
test
push
mov
out
mov
scas
in
or
inc
or
inc
sti
cltd
mov
inc
addb
sbb
and
sbb
xor
jae
mov
lds
xor
lahf
ret
dec
test
call
fisubrs
pop
or
frstor
pop
rcrb
imul
push
test
jb
pushf
or
int3
xchg
add
stos
test
dec
pushl
into
pop
in
lods
into
mov
xor
jo
push
push
and
mul
inc
inc
cmpsb
iret
imul
movsb
cmp
aas
and
call
jae
ffree
movsl
dec
ljmp
sbb
mov
jnp
js
mov
repnz
jnp
js
adc
inc
stos
int3
mov
pop
xchg
enter
scas
les
lret
out
lds
cmpl
psubd
pushf
std
cmp
das
sarb
and
ljmp
lods
imul
dec
arpl
and
jl
inc
cs
repnz
ret
cmp
and
cmp
mov
ret
es
lods
daa
mov
iret
adc
sub
cmpsl
or
in
xor
push
cld
pop
push
push
sub
addl
lods
jno
loopne
inc
loopne
fldenv
dec
dec
add
mov
or
sub
and
int
jb
sti
mov
sbb
cltd
pop
push
insl
mov
je
mull
jnp
cmp
adc
sbb
test
pop
sub
adc
jl
rcrb
dec
mov
cmc
cmp
jl
fistps
cmp
mov
push
inc
movsl
in
adc
jl
xchg
scas
lret
pop
push
inc
push
and
pop
push
sbb
testl
jmp
xor
lret
add
pop
hlt
jmp
xor
mov
pop
out
cld
add
sbb
popa
das
or
leavew
insb
bound
and
push
decb
out
push
je
cmp
xchg
mov
or
out
nop
sub
mov
iret
test
nop
mov
sbb
stos
xchg
inc
jno
mov
ret
adc
test
push
inc
jnp
insl
and
push
adc
jle
pusha
ret
xchg
lret
aad
xor
dec
decl
push
xor
and
jbe
out
push
lcall
aad
lods
pop
dec
lahf
jmp
pop
pop
sub
or
fwait
ja
ret
pop
out
int
mov
in
std
inc
arpl
lcall
shl
fadds
pop
mov
dec
in
scas
or
and
cmpl
or
shrl
test
cmp
movsb
andb
push
int3
xchg
testl
lock
mov
mov
and
push
ljmp
pop
push
sbb
data16
adc
cs
jle
push
out
add
inc
mov
inc
jg
jbe
addr16
mov
inc
push
test
out
std
ljmp
test
in
sahf
push
cmp
gs
std
loopne
mov
jg
shlb
lock
loop
mov
in
icebp
dec
bound
out
fbld
enter
clc
pushf
push
stc
shl
or
jmp
scas
icebp
leave
outsb
popf
rclb
daa
pop
mov
insl
dec
mov
cmp
stc
cmp
pop
aam
adc
test
shl
inc
popf
jae
dec
push
push
mov
dec
jecxz
in
rorl
push
add
rorl
addr16
ret
xor
cmp
insb
lods
pop
imul
cmc
jecxz
into
fldenv
aaa
fdivrs
in
jge
mov
push
mov
data16
pop
pop
dec
popf
pushf
xor
inc
cmp
movsb
push
rorb
xchg
cltd
lea
int3
pop
jmp
cmp
jb
adc
jae
inc
push
dec
adc
rcll
repz
pop
jbe
std
daa
add
gs
pop
not
jno
insl
aad
subb
or
scas
and
cmp
mov
sbb
push
push
sub
rcrb
pop
push
dec
sahf
out
subl
leave
push
cmp
push
cltd
rol
les
lock
mov
cmc
dec
lret
ljmp
xchg
lea
pop
or
test
movsb
pop
inc
stos
mov
xchg
loop
xchg
pop
and
cmpsl
mov
xor
mov
cld
stc
push
mov
call
out
add
div
lock
xchg
and
jp
inc
div
jecxz
movsl
xor
sub
repnz
adc
inc
adc
jle
pop
ret
mov
adc
push
std
int3
sarb
pop
xchg
cmp
mov
lods
mov
push
jae
repz
mov
pusha
jg
sbbl
das
stos
pop
mov
popf
sub
mov
add
jg
sbb
fisttps
adc
add
mov
sub
xlat
out
ss
insb
scas
lock
pop
ffree
insb
mov
or
aad
push
xor
ret
aas
out
and
cmp
xor
add
mov
xchg
mov
lock
out
mov
push
stos
or
jae
xor
pop
adc
addr16
outsb
and
or
dec
dec
add
pop
xor
xchg
pop
sub
shll
loope
cld
fildll
pop
mov
rclb
sti
sub
fnstenv
js
push
pop
jmp
xlat
xlat
int3
std
pop
jnp
or
in
sarb
push
adc
mov
mov
fmul
dec
dec
push
or
loope
dec
sbb
mov
adc
shlb
adc
test
jns
icebp
in
imul
loope
mov
and
mov
insb
mulb
ret
pop
stos
stos
adc
inc
adc
lock
pop
outsb
and
push
adc
loope
mov
neg
dec
push
fucomp
cmp
xor
mov
jnp
adc
pushf
cmp
jecxz
ret
jecxz
adc
push
pop
and
cli
clc
jmp
jae
push
sti
cld
out
ljmp
aas
imul
sbbb
pop
cs
inc
jo
and
push
xchg
imul
shlb
jnp
dec
inc
mov
push
pop
or
jbe
or
test
adc
jne
sbb
mov
cltd
add
push
mov
stc
push
outsb
sti
mov
dec
push
fs
jb
cmp
mov
fstp
add
and
scas
or
repz
sbb
out
push
xchg
or
fs
or
clc
cltd
mov
jae
lea
sti
jecxz
xchg
repz
or
dec
pop
loop
mov
out
fstpt
std
fs
popa
popf
pop
insb
xchg
nop
mov
out
out
sub
scas
test
sbb
pop
jl
inc
mov
sub
lret
popl
mov
jo
adc
xchg
cmp
xor
in
inc
shlb
or
and
fsubr
and
test
xor
pop
push
push
cli
sbb
cmp
push
inc
and
cmp
sub
inc
outsl
pusha
and
int
leave
jbe
xor
shrl
or
jo
jne
dec
call
cmp
adc
push
push
cmp
popf
xchg
push
call
mov
shl
addr16
out
jmp
or
sbb
cmp
add
fbld
popa
loope
in
adc
mov
sub
hlt
stos
loopne
aad
jae
mov
jecxz
pushf
sbb
push
or
nop
imul
and
xorl
or
inc
pusha
pop
or
ret
js
xor
call
andl
add
push
xchg
or
int3
add
int3
sbb
in
pop
dec
lahf
xor
mov
pushf
dec
sahf
mov
mov
inc
pop
test
movsb
test
mov
mov
ss
aaa
incb
adc
push
mov
xchg
and
xorl
push
sub
bound
push
in
mov
cmp
mov
xchg
dec
sbb
dec
clc
push
jmp
sub
mov
jg
push
cmp
jo
fdivl
lods
inc
mov
pusha
data16
mov
sbb
cmp
loopne
lahf
add
push
inc
orl
add
and
sahf
dec
lock
movsl
lods
cmc
pop
sahf
push
add
sbb
inc
fcoms
lret
jbe
in
add
loop
sub
jo
pusha
ja
cli
jae
mov
add
inc
imul
or
andb
dec
push
mov
or
lcall
xchg
lods
push
adc
roll
clc
jne
pop
inc
clc
xchg
sbb
daa
fildll
fwait
mov
gs
pop
fists
xchg
mov
enter
stos
mull
aad
xchg
shrl
idivb
hlt
pop
cltd
lahf
xor
lods
fcompl
push
push
xchg
jl
jecxz
mov
repz
lahf
leave
lods
fcomp
inc
mov
mov
je
inc
sbb
sbb
fistps
rcll
icebp
sbb
jns
lcall
add
sub
fildll
pop
sub
jge
cmp
mov
lods
mov
add
jnp
movsl
cmp
lahf
adcb
filds
mov
sub
fmulp
cli
fisttpl
adc
dec
call
popa
mov
cltd
imul
jb
xchg
mov
outsl
push
lock
call
adc
lret
pop
inc
in
push
push
cmp
and
or
sub
int3
add
test
or
mov
cld
scas
cli
or
mov
dec
push
mov
xchg
sub
stc
push
outsb
adc
and
imul
mov
xor
lods
xchg
js
das
or
int
xchg
mov
stos
inc
imul
or
sub
inc
adc
dec
sbb
out
push
imul
sahf
cltd
adc
inc
das
shrl
and
cwtl
cmp
mov
jp
stos
fs
daa
cmpl
jp
mov
xchg
ret
outsb
adc
adc
jnp
popa
mov
ss
add
ret
ljmp
mov
cli
test
push
fisttps
add
mov
push
cmpb
sub
int3
mov
inc
test
mov
push
sub
icebp
jae
jnp
arpl
jns
sahf
sbbb
ret
lret
xor
pop
ja
sbb
jge
popa
xorl
sub
ja
outsl
das
movsb
push
sub
stc
sub
fcmovb
aas
cmp
xchg
mulb
and
mov
push
rcrl
cwtl
aas
sub
pop
sbb
adc
in
inc
imul
adc
xor
shlb
outsl
xor
xchg
mov
adc
and
fadds
ss
inc
jns
xchg
ljmp
mov
jmp
push
daa
outsl
jno
mov
push
pop
xchg
mov
inc
jmp
dec
xlat
push
mov
jnp
cmp
mov
jecxz
lahf
es
xor
inc
in
aad
and
addps
fsubrl
icebp
jae
pusha
clc
push
mov
negl
rcll
mov
dec
pop
ss
cmp
sbb
jge
dec
adc
call
xor
dec
add
clc
xchg
xlat
jecxz
dec
jno
sarl
pop
or
lock
cmp
dec
pop
add
loope
cmc
fstps
fucom
loope
outsl
insb
jle
and
add
loop
fisttpl
and
cmpsl
xchg
and
push
shrb
in
icebp
or
add
sbb
daa
jo
jg
or
add
out
dec
jge
cmc
in
cmpsl
add
mov
dec
jmp
test
das
das
ja
mov
dec
push
shlb
lds
lcall
cmp
or
mov
cmpsb
insl
push
test
mov
cmc
cmp
loopne
and
mov
pop
mov
jp
imul
dec
scas
movsb
mov
scas
dec
pop
xchg
mov
push
cmc
pop
mov
movsb
and
pop
or
mov
or
xchg
push
adc
ret
inc
pinsrw
ficomps
ficoml
fidivs
jg
in
mov
push
fdivr
push
scas
ds
adc
or
pop
pop
jmp
mov
daa
data16
cmc
jbe
fs
mov
lret
ret
test
push
mov
daa
fisttpll
xor
push
and
les
cmp
dec
daa
lret
arpl
jge
xchg
cmpsl
nop
xor
cltd
add
mov
mov
cmp
repnz
int3
pop
dec
jg
mov
out
or
data16
movsl
xor
adc
cmc
test
insl
xor
jmp
out
stc
loop
push
pop
test
jns
xor
std
loopne
cwtl
fmuls
mov
loop
mov
clc
lret
xchg
jle
push
sub
mov
mov
insl
cmp
scas
pop
mov
ss
mov
int3
inc
clc
pop
aas
cmpl
adc
mov
iret
mov
mov
dec
cmpsl
push
jmp
xor
fadds
jmp
pop
ljmp
in
adc
mov
dec
push
das
cmp
mov
movsl
mov
pushf
insb
test
or
insb
push
in
pushf
cli
repz
lcall
leave
stos
cmp
test
sbb
push
cld
xchg
cmc
push
pusha
or
lahf
andb
scas
in
insb
inc
cmp
add
in
mov
fs
jg
or
outsb
cs
sbb
in
or
aam
daa
push
lds
xlat
pop
jb
sbb
xor
push
mov
nop
lds
pop
stos
dec
aam
push
iret
cmp
add
lcall
sbb
cmpsl
add
jmp
mov
rorb
arpl
movsl
scas
xchg
scas
outsl
xchg
insb
insl
pop
rolb
aad
sub
in
push
test
adc
mov
jo
test
sub
nop
and
fcmovbe
fsin
mov
mov
fnstenv
sbb
pop
mul
jno
fs
push
out
mov
in
inc
push
push
sbb
aad
xor
pusha
rclb
imul
sbb
cmp
insl
sbb
inc
dec
or
and
jg
push
or
cwtl
xor
sub
aad
dec
test
mov
inc
cmpsl
adc
jge
and
out
dec
pop
xlat
inc
fldt
push
pop
pop
cmpsl
mov
insb
pop
pop
ja
or
sub
mov
inc
int
fwait
out
jmp
mov
pop
lret
daa
jno
cli
jnp
jno
rorl
and
in
xor
push
xchg
sar
subb
in
sti
lcall
sub
stc
bound
mov
xor
add
or
mov
jne
sub
ljmp
xchg
xchg
movsl
adc
lret
shrl
inc
filds
sub
or
sahf
dec
imul
ret
xor
jb
loopne
and
push
mov
add
dec
and
popf
cmp
add
pushf
enter
xorb
or
inc
jae
adc
ja
icebp
lds
adc
xor
movsl
xchg
stos
mov
stc
dec
ret
icebp
mov
andl
xor
adc
neg
pop
mov
push
ftst
or
push
enter
inc
jge
sbb
fimull
cmp
push
in
and
mov
push
jecxz
xor
jbe
clc
mov
flds
cmp
movsb
es
daa
fisttpl
ds
sub
jmp
add
mov
dec
jnp
cmpsb
mov
push
cwtl
xor
xchg
clc
pushf
pop
mov
add
push
xor
in
push
out
lret
arpl
loopne
adc
call
fildll
es
les
outsl
push
or
jg
inc
mov
inc
sub
pop
mov
xchg
cmpsl
lcall
out
push
add
adc
fbstp
mov
rorb
rep
jb
inc
adc
cwtl
fildll
clc
jl
addb
xor
add
jmp
ss
lock
mov
dec
push
xor
or
cld
dec
cmp
or
in
out
adc
jno
movb
cmpsb
loope
sbb
scas
pop
ljmp
mov
mov
sub
push
pop
xor
nop
mov
repnz
or
push
pusha
mov
pop
outsl
into
sbb
into
sahf
je
movsb
add
jae
mov
sahf
in
inc
mov
stos
scas
fnsave
popf
ss
stc
push
ja
push
push
mov
adc
das
nop
sti
rcrl
pop
mov
movsb
cltd
outsl
jnp
jo
stos
xor
scas
add
or
arpl
mov
add
insb
xchg
daa
jmp
sub
jno
jae
in
adc
mov
cmp
xchg
jo
adc
mov
addb
ss
leave
push
lea
cmp
fidivrl
push
test
push
in
dec
cs
and
je
push
ja
jp
in
push
pop
inc
fists
jb
pushf
jno
pop
into
leave
repnz
xchg
mov
adc
cltd
inc
mov
cld
daa
xchg
fucomip
cmp
pushl
mov
cmp
push
and
xor
jecxz
cmc
lret
mov
cltd
cmp
pop
cmp
pop
mov
inc
mov
cwtl
in
sub
push
add
push
int
int3
mov
mul
jo
jmp
lods
aam
adcl
stos
push
xor
test
pop
clc
adc
dec
mov
lret
into
inc
ret
mov
pop
std
fmull
movsl
inc
lret
xor
xchg
je
rcrl
ss
fldl
jl
cwtl
push
cmc
into
sar
xchg
push
sub
sbb
imul
sti
stos
gs
repz
call
or
adc
lahf
xor
sbb
push
or
lret
adc
add
xchg
pop
cwtl
mov
inc
lret
stos
push
fwait
and
xor
fnstcw
out
add
mov
mov
je
bound
push
outsl
or
mov
sbb
and
push
ljmp
jp
test
inc
mov
pusha
push
aas
bound
lods
sub
jle
das
mov
fs
dec
stos
fs
push
mov
insl
int3
pushf
cmpsb
iret
cmc
adc
dec
inc
lock
push
je
jb
cmp
pop
pop
movsb
push
jbe
add
xchg
xor
xchg
leave
jae
sub
jno
aad
inc
xchg
xchg
stos
test
jecxz
xchg
je
mov
test
mov
push
sbb
outsl
jae
cmpsl
mov
cmp
mov
push
jg
or
mov
int3
push
mov
or
push
jecxz
fstps
into
jbe
fistpl
cmp
js
movsl
jbe
imul
call
je
lea
aas
cmp
jle
in
xor
xchg
xor
lea
mov
outsb
mov
push
call
jae
jbe
adc
fsub
insb
je
lods
fsts
sbb
divb
jno
push
xor
call
pop
cld
cmp
dec
or
popa
popf
clc
in
dec
add
mov
and
cmpsb
add
cmp
jecxz
outsl
mov
fcmovb
test
push
sbb
pop
push
jae
jns
adc
inc
add
cltd
testb
vmread
mov
pop
jo
fucom
icebp
push
jo
or
mov
aam
popf
xchg
add
mov
dec
add
sub
cmp
push
sub
pop
cmp
imul
ja
repz
arpl
cmp
and
icebp
scas
inc
cmpsb
mov
mov
inc
xchg
lret
lea
std
jmp
aaa
pop
inc
leave
sbb
iret
das
xor
push
xor
add
xchg
ds
cs
xor
cmpsl
ret
xor
clc
loope
sbb
sahf
in
out
pop
je
rclb
dec
cs
jmp
xchg
movsb
pop
js
jns
inc
xor
cmpsl
sub
push
mov
aas
jecxz
mov
test
les
mov
jo
jl
lock
sbb
and
or
xor
add
add
or
push
pop
cmp
pop
je
push
hlt
xlat
pop
lock
pop
mov
cmpsb
sahf
lahf
cmp
lcall
clc
mov
out
push
jmp
or
push
push
push
int3
dec
enter
roll
xchg
movsb
aaa
or
inc
add
mov
andb
out
cld
imul
aaa
dec
xor
sbb
bound
daa
fstpt
or
jmp
rorl
add
add
rolb
mov
pop
out
sbb
mov
sahf
adc
xlat
xchg
cmc
pop
xchg
out
mov
rol
mov
fisttpll
jecxz
xchg
xor
jb
in
mov
ret
cmp
test
pop
jns
int
sbb
adc
cmp
pushf
jae
outsb
fldt
int3
lea
mov
aas
outsb
mov
in
cmp
inc
or
cmpsl
addb
out
js
cmpsl
lcall
int
popa
dec
shlb
fnstsw
in
insb
jb
mov
xchg
push
cmp
sbb
jecxz
dec
or
xchg
mov
repz
movsl
sub
mov
mov
push
in
lea
push
movswl
cmp
fsubrl
sbb
push
test
dec
mov
jne
cmc
adc
sbb
frstor
mov
adc
mov
xchg
push
test
repnz
adc
pop
mov
lret
jg
and
sub
fsubrl
xor
jmp
cld
dec
pop
in
sbb
jno
pop
and
inc
mov
sbb
adc
inc
into
lret
mov
jle
jl
pop
and
inc
dec
pusha
push
xchg
data16
test
loope
fwait
xorl
jmp
imul
lock
mov
pop
popa
out
and
gs
jno
es
je
jecxz
scas
dec
xor
fildl
loope
out
adc
ja
push
cmpsl
add
sbb
mov
rcll
inc
pop
mov
sbb
jnp
xor
inc
lock
add
jmp
push
hlt
stos
arpl
jnp
test
mov
mov
stos
and
test
movsb
xor
or
sbb
mov
adc
sbb
sbb
pop
outsb
out
mov
bound
cmp
sub
pop
mov
cltd
ja
fstpt
inc
int3
mov
jmp
stos
inc
rep
jnp
lret
mov
cmp
inc
fistpll
xchg
movsb
dec
cli
dec
push
stos
mov
pushf
push
jns
push
add
inc
pop
fisubl
popf
xor
popf
das
xchg
lods
lret
in
pop
in
push
lret
imul
jae
mov
ds
dec
xchg
in
les
jbe
xor
in
mov
cmc
push
and
shl
bound
insl
js
js
cmpsl
pop
cltd
mov
stos
roll
pusha
push
add
pusha
push
iret
xor
cmp
push
stos
push
or
js
lcall
aam
cmc
xor
mov
stos
xor
push
pop
mov
xchg
psubusw
lahf
sub
jbe
mov
imul
sbb
xchg
adc
push
push
ficoml
pop
push
pop
ja
cmp
std
shll
xchg
add
out
out
popa
mov
mov
rcr
loope
mov
sbb
cld
repnz
mov
and
loopne
notl
push
imul
jne
ret
ds
out
scas
push
xor
scas
lods
fcomip
sahf
jge
sbb
aam
scas
repz
jne
mov
push
mov
mov
pop
insb
f2xm1
sahf
roll
sbb
mov
dec
int3
or
jg
cmp
lahf
xchg
and
push
sbb
scas
xchg
fmuls
fnsave
adc
cmp
add
cwtl
push
fsubrl
cwtl
out
popf
call
or
xor
xlat
icebp
inc
pop
loopne
mov
push
into
test
and
jne
insl
push
pop
enter
test
cmpsb
inc
cmp
pop
pop
or
mov
das
mov
mov
in
fadds
adc
or
fwait
or
out
xor
out
sbb
test
shll
push
cmp
mov
shrb
xor
or
mov
addr16
push
subb
jecxz
xchg
ret
int3
cmp
je
pop
das
sti
loop
adc
dec
hlt
sub
mov
pop
add
aaa
jno
push
ret
pop
cld
sbb
cmp
andb
and
jb
adc
mov
insl
les
pop
xchg
aad
std
mov
std
mov
jmp
adc
in
hlt
and
xor
das
adc
cmpb
adc
xchg
out
imul
lahf
adcl
ss
popa
jo
xchg
les
sbb
shrb
inc
push
jns
loope
jp
stos
sbb
dec
cmp
or
push
mov
frstor
out
les
inc
xchg
push
and
push
lods
jno
inc
in
js
aaa
xchg
sbb
xchg
mov
stos
cmpsb
pop
push
mov
push
sbb
lcall
sub
shrb
sub
div
les
or
dec
mov
push
mov
das
cmpsb
or
or
jnp
push
sbb
leave
or
test
lods
out
mov
mov
js
adc
dec
mov
rcll
cmp
adc
add
cmpsl
icebp
fnstenv
inc
icebp
push
je
cmp
mov
pop
imul
incl
mov
xor
fimuls
cld
xchg
std
add
cmp
xor
lods
mov
jno
loopne
stos
out
mov
hlt
or
pop
adc
test
sbb
mov
fstl
mov
popa
test
sub
ljmp
ret
sbb
fxch
dec
fistps
imul
cmp
ss
js
mov
jns
dec
aaa
jno
mov
loope
push
int3
adc
mov
icebp
shll
mov
sbb
xlat
call
xchg
repz
mov
fists
jns
sub
mov
imul
rclb
pop
scas
aam
hlt
ds
fimull
sbb
cmpsb
test
jnp
jne
adc
fcompl
sbb
test
inc
dec
mov
cmpb
xor
jecxz
mov
enter
fsubrl
pop
out
jbe
in
sub
les
das
in
push
in
icebp
jge
cwtl
test
lods
or
jle
mov
mov
enter
push
add
pop
jl
push
aad
inc
adcb
ret
setl
sarl
mov
popf
imul
mov
mov
dec
dec
jbe
adc
mov
decl
in
out
or
fmuls
test
xchg
sub
sbb
sub
imul
and
cmpsb
push
sbb
insb
inc
gs
xchg
lock
imul
push
arpl
pop
jns
sub
push
mov
and
mov
dec
xlat
sar
pop
mov
or
fdivrl
bound
ss
fmulp
stos
sbb
scas
mov
sub
push
cmpsb
mov
cmpsl
dec
cmp
pop
lock
loope
cmpsb
cwtl
xchg
push
enter
sbb
fwait
repnz
clc
sub
gs
into
cmp
or
adc
ret
loop
xor
or
push
roll
inc
cmp
mov
pop
adc
add
dec
push
ds
jno
pop
jnp
jp
sub
or
pop
mov
xchg
cli
lds
mov
lea
cmp
and
rcll
pop
xchg
cmp
lods
js
outsl
data16
pushl
push
insl
inc
scas
psubusw
mov
lods
ss
mov
call
movsl
mov
push
int3
and
and
in
std
pushf
ja
dec
cmc
cmp
mov
add
and
loop
incb
fidivrs
inc
mov
and
loopne
push
mov
inc
in
inc
ljmp
jp
pop
cmpl
jbe
movsl
in
sub
ss
add
jb
xor
xchg
push
mov
outsb
jae
mov
stos
stos
cli
fsub
mov
add
mov
test
and
test
xchg
imul
out
mov
push
mov
sub
pop
adc
jmp
mov
cmp
or
test
push
xchg
xchg
inc
popf
aam
adc
mov
stos
popa
lods
jns
push
lea
and
cmc
mov
pop
sti
pop
xorb
and
daa
fadds
jp
inc
fwait
jns
mov
imul
test
sbb
mov
icebp
in
testl
xchg
sahf
add
decl
ljmp
jb
push
mov
mov
lea
rclb
das
rcrb
pop
mov
aad
movsb
xor
sbbb
pop
push
jae
js
xor
scas
add
cmpsl
mov
aaa
or
cwtl
pop
outsb
mov
outsb
mov
inc
leave
dec
movsl
mov
cmp
shl
xor
and
mov
dec
cmp
aam
bound
mov
inc
xor
das
mov
pop
daa
neg
data16
cmp
fwait
jbe
jns
xor
or
and
fsubs
loope
lret
jl
cmpsb
cmp
lcall
mov
ja
xchg
addl
mov
xor
not
ficomps
test
lea
cmp
mov
jge
mov
mov
xor
rsm
mov
or
fcmovnb
pop
es
cmc
xchg
sub
out
out
test
lock
sub
and
mov
dec
in
out
push
cltd
adc
push
das
mov
leave
scas
sbb
stc
xor
cmp
cmp
inc
mov
add
xor
js
mov
aaa
insl
jecxz
mov
mov
sti
mov
adc
mov
sub
aas
pop
mov
cmpsb
pop
add
push
xchg
mov
sbb
pop
cli
rcrb
mov
in
negb
fs
sbb
arpl
xchg
pushf
push
xchg
and
xor
pop
sbb
cmp
cmpsl
in
or
popl
jg
out
fistl
and
and
ljmp
sbb
pop
mov
xlat
je
inc
xor
pop
sbb
into
and
inc
inc
mov
xchg
mov
in
je
pop
xor
push
sbb
mov
xchg
ja
cmp
inc
shlb
outsb
call
pop
ss
divl
daa
xchg
test
xor
dec
inc
dec
aad
dec
fiaddl
sub
sbb
aam
adc
jbe
jmp
imul
mov
jl
push
subl
jl
mov
lahf
xchg
imulb
adc
in
mov
and
leave
inc
out
jle
cld
mov
out
fildl
int
ror
negb
data16
in
in
jg
mov
orl
cs
xor
inc
lock
cld
jbe
aam
cmp
adc
or
pop
add
dec
add
dec
insl
push
sub
jl
in
xchg
test
adc
sub
es
pushf
jp
repnz
loopne
into
dec
mov
iret
sti
lea
add
mov
jo
and
arpl
add
subl
mov
lock
aaa
scas
jmp
sbb
faddl
test
jle
jle
stc
adc
xchg
and
add
out
mov
pop
pop
lea
cmp
negl
sbb
mov
std
jae,pt
jmp
insb
nop
add
xchg
subb
fld
inc
xlat
test
je
jnp
lret
cmp
mov
aaa
sub
and
daa
dec
cmp
jmp
in
jo
xor
fwait
or
out
jno
les
xor
push
push
pushf
pop
cmpsl
stos
jp
cmpsb
mov
push
inc
push
ds
mov
mov
jmp
or
push
push
dec
or
add
sub
fidivs
lods
lock
cmp
lea
ja
cs
lock
dec
xchg
add
push
pop
push
mov
nop
addr16
add
xor
add
xor
ret
lret
lods
out
call
inc
xor
adc
loop
mov
ljmp
cli
sub
call
push
out
adc
jae
push
fldenv
cmpsb
hlt
dec
or
pushf
xchg
xor
push
arpl
pop
dec
mov
xor
mov
mov
adc
mov
mov
dec
mov
and
xchg
sbb
lods
lcall
stc
xchg
inc
test
cld
mov
ds
pop
lcall
decb
add
adc
ret
lea
fdivr
lds
fildl
repz
pop
push
or
mov
subl
ds
dec
lods
push
fnsave
lea
fsubs
mov
movb
hlt
popa
mov
pushf
mov
cwtl
pop
xor
jp
xor
mov
and
pusha
test
sbb
out
and
mov
ficoms
outsl
push
cmp
lret
xchg
xor
jno
jmp
inc
push
xchg
mov
into
cld
loopne
xchg
jge
mov
cwtl
inc
mov
shld
pop
inc
call
outsb
and
ljmp
in
push
cmpsb
xchg
xchg
bound
push
arpl
jp
fmuls
pop
push
and
jnp
sbb
icebp
xchg
mov
in
das
xor
adc
xor
nop
loop
jmp
fwait
xchg
fisubs
adc
push
daa
and
gs
ret
inc
out
mov
xor
jp
je
test
ret
sub
xchg
dec
dec
jp
hlt
out
iret
jge
nop
sbb
adc
roll
test
fwait
sahf
pop
mov
ret
test
jmp
dec
dec
jns
dec
les
mov
scas
push
in
pop
enter
ffree
mov
test
fbstp
lahf
sarb
in
xchg
mov
nop
xchg
mov
dec
inc
inc
xor
jecxz
pop
cmp
cmp
repnz
dec
sub
ja
mov
dec
cmpsb
lock
or
ret
pop
fs
mov
insl
mov
ficompl
add
sbb
sbb
es
jbe
xor
mov
dec
xchg
addr16
fwait
test
pop
xchg
inc
fiaddl
jne
add
stos
ret
orl
aad
add
xor
std
incl
xchg
dec
and
or
inc
orb
push
ss
or
mov
jecxz
xor
std
push
xchg
or
cmp
mov
or
jae
cmp
stos
pop
add
inc
jmp
dec
out
xor
loopne
clc
cmp
push
popf
test
mov
cmp
cltd
inc
and
test
bound
xor
mov
stc
lock
jecxz
fsubrs
insb
sar
adc
fdiv
rolb
pop
add
adc
dec
sbb
jp
aam
cmp
leave
adc
xor
lcall
mov
mov
mov
fwait
adc
in
push
and
fwait
push
push
sbbl
jecxz
loope
test
dec
dec
cmp
inc
inc
pop
adc
inc
dec
xchg
outsl
cmpl
outsb
cmp
jo
jne
add
ss
movsb
adc
mov
pop
lret
jb
mov
pop
add
pop
push
dec
hlt
pop
jbe
std
push
jns
jno
dec
fsubrl
test
mov
dec
cli
xlat
dec
push
xor
shrb
xor
int3
test
mov
add
das
cltd
leave
roll
xor
call
cmp
test
mov
daa
out
stc
repnz
sub
jge
sub
int
or
popf
movsl
gs
enter
push
and
cmp
mov
xor
ror
pop
int3
pop
nop
push
std
jle
daa
or
lret
jae
mov
shr
push
mov
ret
leave
rclb
into
xchg
mov
imul
adc
mov
mov
cmp
jmp
jg
or
jmp
xor
inc
leave
sbb
cmp
cltd
cmp
clc
xor
jp
dec
jge
pop
dec
sbb
loope
mov
adc
stos
jne
adc
or
prefetch
popf
jns
flds
push
fcmovbe
jecxz
and
insl
and
lret
aas
xor
imul
es
xor
mov
add
loop
leave
outsb
loop
repz
mov
pop
out
imul
rclb
push
mov
cld
out
push
mov
mov
inc
cwtl
push
outsl
int
call
pusha
sub
pop
push
scas
dec
cmp
xchg
adc
mov
xchg
imul
fxch
xchg
sbb
dec
add
popf
dec
mov
mov
mov
sub
push
mov
js
add
fistpl
and
push
xchg
sbb
out
popf
imul
in
sub
xchg
aam
mov
push
lods
leave
push
popa
xor
je
and
xchg
sub
mov
int
loop
push
xor
mov
cwtl
aas
dec
scas
mov
push
jp
pusha
in
lcall
gs
jnp
mov
shrl
jl
sub
mov
cmp
lahf
add
cmp
xor
out
inc
inc
aaa
popa
push
sbb
gs
lods
pusha
push
daa
rclb
rorb
mov
arpl
mov
sub
add
jecxz
push
int
sub
pop
je
pop
jbe
adc
jnp
pop
xchg
fisubl
shlb
push
into
into
fnstenv
addb
lods
das
pop
pop
fildl
lret
ljmp
push
jbe
sbb
xchg
fimull
push
mov
mov
repnz
and
xchg
or
mov
clc
insl
shl
mov
xchg
data16
movsl
in
cmc
add
mov
dec
mov
sub
mov
pop
and
fsubrl
xchg
mov
in
sbb
push
stos
dec
adc
add
inc
fldt
add
jg
xchg
bound
push
shrb
dec
jp
cld
data16
shrb
inc
inc
jecxz
icebp
inc
jo
sbb
mov
hlt
cmpl
std
sub
lfs
std
out
movsb
mov
lret
out
arpl
movsl
and
jmp
int3
cmpsl
dec
xchg
daa
cmp
xchg
js
xchg
dec
bound
add
ret
in
inc
daa
sub
xchg
push
ljmp
int3
in
sbb
and
pushf
pop
jo
sub
out
cmp
dec
hlt
rorb
adc
sbb
stos
cmpb
sbb
les
mov
ljmp
mov
ja
out
xor
sub
pshufw
sbb
add
clc
lahf
lods
and
cltd
sbb
pop
adc
mov
stc
movsb
xchg
jge
movsb
int
iret
test
or
or
push
xchg
out
ret
int
cmp
sub
mov
clc
sti
pop
pop
mov
sbb
popf
xchg
sbbl
push
push
jb
mov
scas
cld
into
and
faddp
sub
xchg
nop
int
xor
mov
fidivs
push
push
fnsave
ds
mov
shrb
inc
xor
sbb
push
pop
or
xlat
pusha
fadd
fisttps
pop
loope
mov
mov
loop
or
es
sub
inc
shrl
js
mov
adc
pop
and
ljmp
mov
into
js
fs
arpl
mov
inc
call
iret
stos
mov
out
out
clc
test
in
xchg
adc
add
notb
lret
push
dec
mov
and
idiv
xorl
jle
add
cmp
xchg
imul
je
sbb
jmp
cmpsb
fs
nop
inc
fidivl
ljmp
and
aaa
out
shll
roll
xchg
adc
and
icebp
adc
out
ret
int
or
dec
ret
xchg
nop
and
sbb
adc
pop
cmp
cmc
jbe
and
imul
out
in
dec
sub
loop
push
arpl
inc
push
sub
mov
sub
mov
jecxz
aad
pop
jne
sub
dec
nop
push
scas
xchg
repz
bound
mov
sbb
aas
rcrb
in
push
fstps
inc
sti
add
mov
fmull
jnp
jp
scas
cmp
mov
lcall
cmpsb
inc
iret
bound
or
enter
dec
push
test
fadds
inc
mov
mov
pop
loope
hlt
js
lods
jns
daa
jmp
cli
insl
mov
adc
lods
out
mov
mov
lods
cmpb
and
sbb
fsubrl
test
inc
aam
cmp
shl
ja
adc
pop
dec
lahf
jns
xor
inc
pushf
shl
adc
adc
mov
in
push
cltd
je
dec
mov
inc
or
cmpsb
push
stos
andl
mov
sahf
sbb
add
cmp
mov
cmpl
jo
out
push
jge
leave
lcall
push
mov
add
push
and
jnp
sub
enter
pusha
jle
aas
jecxz
dec
adc
push
addr16
cli
cmc
stos
lcall
cltd
sub
daa
pop
mov
testl
add
pop
ficoml
xchg
or
into
scas
orl
ret
ret
ss
mov
cmovne
xchg
nop
mov
into
xor
jl
mov
mov
and
xor
mov
fistpll
cwtl
and
xchg
sahf
and
add
lret
add
or
dec
dec
ret
pop
fidivl
adc
inc
or
rcrb
and
push
xchg
aaa
mov
jle
jge
lods
push
sarb
mov
jb
push
xchg
scas
inc
mov
or
xchg
add
inc
sub
ja
cmp
mov
push
fwait
sbb
test
and
sub
xchg
jnp
aad
jae
pushf
cs
mov
popa
outsl
fisttpl
addr16
cmp
cmp
lret
nop
sbb
mov
outsb
mov
lods
cmp
xchg
push
add
outsl
popa
cmp
pusha
ds
lds
fidivrl
lret
sbb
mov
or
ret
mov
add
mov
cmp
flds
js,pt
out
dec
ror
inc
mov
xchg
ret
jb
jle
mov
push
sub
add
lret
jge
jecxz
or
mov
cmp
test
int
jge
xchg
sbb
cmp
sti
adc
out
add
xchg
add
int
repz
adc
or
cmp
xchg
push
or
sarl
sub
fildl
ss
jne
xor
js
cmp
jns
repz
push
test
std
jecxz
sbb
or
call
and
mov
repz
sub
enter
sbb
mov
xchg
sbb
addl
or
jmp
aaa
and
sti
sbbb
pop
shrl
add
cmp
clc
lods
pop
ds
push
loope
xor
sbb
daa
cmp
dec
xchg
pop
repz
mov
lods
mov
push
xor
xchg
or
xor
fdivrl
inc
test
xchg
xchg
clc
and
outsl
lds
shrl
icebp
mov
cs
lods
pcmpgtw
lods
xchg
pop
pop
mov
mov
inc
lods
imul
dec
cli
dec
lods
js
push
icebp
xor
movsb
mov
sbb
pushl
test
cmpsb
dec
add
jbe
movsb
add
into
add
xchg
xchg
push
push
ss
call
loopne
pop
mov
push
xchg
test
lods
mov
in
mov
movsl
idiv
push
in
outsb
mov
xchg
jmp
lods
mov
cmp
movsl
push
mov
xchg
add
test
mov
cmp
push
xor
pushf
rol
iret
repz
cmc
cli
aas
mov
orl
cmpsl
mov
and
lahf
into
enter
outsl
or
sti
adc
fmul
jp
lds
psllq
in
push
sbb
dec
js
lea
sub
sti
bound
testl
adc
and
fdivr
out
mov
cmp
dec
out
mov
mov
sub
out
fs
push
imul
jle
fdivs
lock
pop
gs
mov
insb
inc
or
testb
adc
fsubl
int
out
cmp
sbbb
add
jl
fbld
jne
cltd
mov
mov
or
test
clc
mov
repnz
inc
lods
sbb
fs
pusha
pusha
ljmp
adc
scas
cmp
ret
repz
xor
adc
fwait
addr16
pop
inc
jge
push
mov
jge
cmp
or
orl
setp
dec
cmc
out
lret
sbb
cmp
in
cmc
mov
add
jbe
cmp
arpl
xchg
jo
and
xchg
sub
gs
rcrb
jmp
jmp
mov
jg
jge
mov
test
loop
dec
and
arpl
pop
insl
and
push
mov
jmp
sub
pop
pop
sub
in
jb
sarb
or
add
outsb
stos
inc
loope
or
push
inc
jnp
mov
ret
repz
sub
inc
aad
outsb
push
mov
pop
aaa
ljmp
movsb
xchg
push
lret
daa
push
icebp
xchg
imull
jge
mov
jne
inc
push
mov
mov
cmp
lds
dec
ret
jae
addl
jnp
testb
push
fsubrl
rolb
mov
data16
adc
in
test
xlat
lret
lcall
pop
mov
mov
inc
sbb
int
ret
dec
inc
test
pushl
pop
adc
int
lret
fcmovne
std
fdivrs
vorps
mov
movsl
dec
subl
sbb
divb
sbb
jo
push
es
int
push
repz
clc
xchg
imulb
push
sub
jo
and
add
sti
xor
in
ss
ret
mov
cmpsb
sub
shll
sub
out
xchg
call
gs
adc
in
dec
xlat
lock
cmpsb
sbb
js
mov
fstpl
popf
mov
fucomi
add
cli
ret
imul
cmp
sbb
out
fcoml
cmpl
addl
sbb
adc
cld
movsl
int
arpl
sbb
nop
sub
sbb
out
je
aaa
or
push
fwait
rorb
stos
inc
xorb
gs
aad
mov
gs
in
mov
lock
sub
fldl
inc
hlt
mov
inc
insl
movsb
das
mov
or
leave
add
cwtl
shlb
xchg
imul
loopne
xchg
push
or
aad
add
inc
xchg
daa
or
sbb
test
mov
inc
aaa
sti
jbe
shlb
adc
mov
cmp
jnp
mov
lret
pushf
mov
mov
inc
jae
sub
sbb
repnz
mov
test
jo
std
push
test
mov
push
mov
jl
pop
inc
test
nop
lret
and
cmp
pop
aam
paddsw
jo
pop
mov
leave
xor
pop
ss
out
sbb
lds
xchg
popf
pop
jl
fildl
sahf
dec
jb
lea
sub
ds
arpl
adcl
adc
outsl
in
xchg
push
outsl
pop
adc
arpl
ret
fdivrp
xchg
bound
out
nop
push
dec
imul
or
test
mov
lods
mulb
dec
pop
ret
mov
mov
push
inc
pop
mov
add
icebp
inc
arpl
pushf
and
aam
nop
jnp
fbld
leave
mov
fistpl
adc
push
fistpl
popa
imul
xchg
dec
loope
push
jno
cmp
pop
mov
jns
pop
jp
into
arpl
mov
test
push
in
sarb
or
mov
fldt
cmp
sub
ret
lret
lea
aad
lahf
ljmp
fcmovnbe
out
aas
testb
mov
sbb
xchg
mov
fwait
add
mov
add
call
add
mov
pop
mov
fwait
pop
mov
cs
xor
cmp
stc
pop
mov
push
shl
and
jmp
adcl
or
ljmp
loop
out
decb
out
stos
pop
scas
gs
mov
inc
jns
aad
mov
xor
js
xor
sub
addr16
repz
sub
sub
frstor
enter
inc
pop
out
push
xchg
jae
fisttps
mov
es
call
fistl
clc
into
jae
imul
mov
push
in
lret
push
sub
pop
aad
pusha
lds
fldenv
fisubs
out
sahf
call
push
test
mov
pusha
mov
cld
cmp
or
int3
jmp
dec
push
cmp
jnp
call
out
rorb
mov
cmp
testl
mov
add
sub
and
nop
stc
push
ja
mov
xlat
xchg
pushf
fdiv
lcall
and
mov
movsb
push
pop
mov
clc
mov
repz
cmpsl
sub
inc
lcall
sub
bound
in
or
and
inc
idivl
push
js
xor
jne
jo
fmull
test
push
adc
pusha
xor
fwait
mov
and
xor
call
push
adc
xor
dec
test
out
inc
cs
arpl
repz
ja
scas
push
lcall
mov
xlat
mov
test
mov
pop
xchg
cs
xchg
push
and
rcrl
ljmp
cmp
rorl
in
cmp
mov
or
fincstp
dec
mov
xor
int
in
inc
sti
test
adc
in
sbb
pop
notl
dec
sub
and
je
mov
shll
cmp
imul
and
stos
push
mov
add
test
dec
je
jle
fs
iret
xor
sub
jo
dec
aam
add
and
addr16
fistl
popf
jle
adc
js
imul
jno
jp
rolb
pop
sub
adc
mov
inc
mov
arpl
jecxz
addr16
pop
getsec
mov
jle
inc
and
mov
scas
add
movsl
lcall
or
mov
mov
scas
mov
xor
and
andb
dec
pop
loopne
orl
and
mov
dec
mov
mov
jb
ljmp
notl
xlat
xchg
ja
jecxz
add
repz
fiadds
and
ss
jns
inc
xchg
loopne
push
xor
test
test
push
cltd
adc
fwait
lds
inc
push
enter
jmp
adc
mov
call
and
inc
and
ret
pop
shlb
xchg
sbbl
stos
jno
je
push
popa
shl
aam
cltd
stos
sbb
xor
sahf
sub
lods
fstpt
rcrl
mov
fs
pusha
mov
clc
cmp
stos
push
ficoml
xor
shl
dec
and
xchg
mov
sbb
add
mov
or
xchg
shll
sbb
ljmp
or
js
fbstp
xchg
fldl
test
cs
and
pop
xor
add
int
cld
mov
and
das
jmp
jl
fptan
dec
xor
ror
std
push
ja
inc
adc
pop
push
dec
mov
push
gs
and
call
scas
push
gs
cld
and
add
jb
pop
mov
cmp
stos
pop
xchg
scas
aas
dec
adc
mov
outsb
aad
cmpsb
pusha
cwtl
dec
mov
pop
or
jle
aas
adc
scas
fwait
sbb
les
push
loopne
out
push
jo
mov
mov
inc
dec
hlt
inc
xor
xchg
dec
dec
das
outsb
adc
in
sbb
cmc
jns
sti
push
mov
lea
ret
mov
mov
leave
inc
sub
shlb
adc
lret
add
mov
jmp
pushf
pop
xor
push
adc
das
pop
cmpsl
push
call
loop
dec
iret
mov
push
dec
inc
test
les
mov
adc
stos
cmpb
lret
int3
fcomps
adc
loope
jl
shl
idiv
push
test
iret
add
xchg
pop
cwtl
inc
in
add
ja
xchg
push
push
sub
pop
in
jbe
mov
test
cmpsb
or
and
ss
adc
rcrl
or
push
jecxz
or
add
jecxz,pt
fistl
mov
ss
mov
fs
pop
push
aam
pushf
and
test
add
sbb
ret
dec
inc
int3
fadd
cmpsb
je
sbb
pop
rorb
push
or
mov
xchg
arpl
movsb
stos
xor
add
bound
jmp
jg
mov
jb
inc
xchg
in
lock
push
into
cli
xor
pop
sarb
push
call
jmp
adc
cmp
shrb
hlt
movsb
fidivrs
bswap
insb
xchg
cmp
adc
cmp
orb
inc
xor
pop
inc
rolb
fs
lret
adc
nop
iret
dec
jae
xrelease
mov
jecxz
and
stos
outsl
sti
push
and
inc
add
pop
js
add
insb
addb
pop
hlt
xchg
rolb
add
loope
lret
aad
cmp
popa
divl
jae
loopne
aaa
pusha
mov
lods
push
cmpsl
daa
loope
stos
subb
fcoms
mov
insb
fsubs
ret
push
inc
ror
call
call
mov
or
ret
dec
enter
fabs
rclb
sbb
in
jp
stos
mov
mov
dec
sar
lea
adc
cmc
xor
in
clc
inc
js
pop
arpl
jecxz
adc
adc
jne
fiaddl
hlt
loopne
mov
dec
shll
sbb
lret
sbb
lea
lea
mulb
ja
add
pop
mov
in
out
nop
push
mov
sub
mov
mov
inc
jnp
gs
push
cs
fcomip
cwtl
jno
pop
sbb
pusha
xchg
sbb
lret
cmp
pusha
inc
testl
sahf
xor
jnp
mov
xor
loop
mov
outsl
fcomps
adc
xor
inc
jle
popl
fldl
aas
add
xchg
xchg
inc
dec
test
adcb
mov
sub
loop
fsubrl
fmuls
mov
scas
mov
repnz
add
mov
mov
ss
inc
add
and
or
xchg
int
add
lock
inc
sbb
lret
shlb
arpl
daa
stos
hlt
mov
hlt
add
mov
test
xlat
mov
mov
loop
jmp
add
loop
sub
scas
sub
mov
or
jnp
pop
pop
pop
push
adc
mov
lds
cmp
icebp
inc
fisttpl
call
lods
pop
das
or
imul
cltd
or
push
pop
cld
add
add
jns
mov
mov
adc
jl
cltd
subb
imul
mov
adc
adcb
adc
push
dec
jns
testb
inc
sbb
jg
xor
mov
call
aaa
sahf
stos
xor
add
dec
cmc
and
cmpl
outsl
aam
int3
sahf
ljmp
inc
or
xchg
arpl
pop
add
inc
jmp
mov
sarb
add
fs
js
dec
add
push
mov
add
out
repz
aas
pop
std
sbb
and
push
jmp
outsb
cmp
ljmp
xchg
mov
add
or
mov
out
pop
rcrb
test
sahf
stos
cmpsl
addl
out
jb
out
into
adc
dec
push
stos
mov
fyl2x
sbb
mov
daa
mov
addr16
sub
mov
jp
adc
push
out
into
idivl
imul
out
sbb
dec
pushf
sti
pop
into
mov
cmp
or
rorb
andl
sbb
jecxz
test
das
xor
lret
mov
or
sub
add
sbb
pop
gs
mov
pop
push
cmp
and
inc
lahf
lods
adc
dec
mov
jne
xchg
sti
and
mov
fs
mov
xor
xchg
sub
jp
insl
xor
mov
in
push
push
sbb
sub
repnz
cwtl
outsl
jp
sub
and
jbe
or
inc
sbb
mov
cmp
mov
mov
jle
and
gs
and
andb
sbb
inc
adc
add
push
mov
insl
outsb
cmpsl
popf
shr
js
push
adc
faddl
mov
mov
adc
jnp
lret
cmp
arpl
in
cmpsb
mov
cmp
sub
inc
js
imull
push
or
outsl
ror
and
aad
fmuls
iret
ret
call
cmp
push
lods
repz
jns
scas
cld
mov
shlb
inc
mov
stos
jmp
int
add
hlt
gs
xor
adc
push
out
mov
lcall
sub
gs
mov
fcmovb
jnp
mov
inc
stos
or
outsb
pop
es
xchg
xor
cld
and
fldt
cmp
xchg
sbb
aad
adcl
lock
addr16
pop
imul
pushf
pop
mov
sub
inc
dec
and
fs
dec
xchg
insb
push
push
inc
lock
xlat
adc
lret
adc
es
sbb
orl
cltd
add
push
stos
dec
fldl
push
pop
shll
test
mov
and
push
mov
and
pop
xchg
jo
in
mulb
shrb
xchg
mov
inc
rorl
pop
dec
xchg
jmp
mov
mov
lds
repz
and
push
xchg
xor
jle
lods
pop
je
xlat
xor
pop
ss
incb
push
push
shl
lea
pop
sti
sti
inc
sub
xchg
inc
lcall
jns
lock
adc
icebp
leave
inc
pop
push
mov
shll
enter
lods
scas
fs
push
daa
arpl
sbb
stos
lds
mov
lret
movsl
lock
call
popf
lret
lret
lret
jb
in
lret
fisubrl
push
cltd
fidivrl
dec
addb
mov
sbb
aam
out
and
jnp
push
jecxz
mov
mov
push
sub
pusha
lods
fwait
sub
nop
dec
aaa
mov
jnp
pop
cmpsl
push
scas
or
fdivr
sarb
lret
repz
enter
sbb
sbb
push
jmp
pop
inc
jnp
mov
out
mov
jb
sarb
adc
mov
xchg
adc
and
dec
notl
jne
in
arpl
lcall
mov
scas
hlt
jns
js
push
gs
bound
imul
loope
sub
jecxz
in
fwait
cli
cmpsl
sarb
dec
mov
inc
push
out
or
mov
pop
popl
enter
or
data16
push
sub
fcoml
add
pop
outsl
std
sbb
jge
std
sbb
test
lcall
cmp
int
and
mov
lret
pop
sub
outsl
mov
flds
mov
pop
aad
sti
loope
lret
and
mov
mov
flds
xor
leave
out
lret
fistpll
push
adc
bound
cmpsl
repnz
pop
out
mov
aad
xor
scas
pop
jmp
jbe
in
cs
leave
pop
inc
sub
scas
add
mov
or
test
insl
fucomp
pop
sub
jne
mov
jb
xchg
js
sar
dec
xor
sub
fs
inc
or
inc
push
decb
mov
cmpsl
scas
inc
pop
adc
xor
inc
int
dec
push
or
cmp
pop
insl
xor
cmc
mov
mov
test
rcll
cmpsb
jmp
loop
divl
mov
int3
iret
jle
int
int3
insb
pop
lcall
sbb
push
mov
xchg
push
or
mov
inc
push
ss
lcall
fsts
or
pop
jl
mov
add
lahf
adc
xchg
jmp
aad
adc
in
xchg
mov
sti
xchg
daa
and
mov
sub
mov
cs
clc
mov
and
cmp
fstpt
popl
jecxz
sbb
scas
in
fs
dec
fadds
int3
gs
add
std
or
mov
add
rcl
inc
sbb
pop
lock
lret
mov
addl
fsubrs
adc
sub
sbb
and
test
in
inc
adc
ja
inc
dec
push
in
inc
fsubp
jb
repnz
dec
jns
icebp
ja
pop
cltd
mov
cmp
xchg
jge
ljmp
fwait
call
sbb
gs
cli
mov
push
jg
xchg
adc
rclb
push
repnz
in
lret
in
push
cmc
add
mov
ljmp
jge
insl
dec
mov
addb
and
dec
sbb
sub
jg
popf
js
ds
popf
pop
dec
cltd
mov
pusha
xchg
icebp
sub
lret
pop
push
cmp
adc
sbb
aas
xor
pop
push
rcll
lods
jae
xchg
mov
cmp
push
sbb
jle
push
pop
cmc
movsl
dec
sti
insb
mov
sbb
inc
je
push
ds
jge
mov
test
fnstenv
call
sub
repz
push
and
lcall
add
push
insb
rolb
and
fld1
push
inc
inc
xchg
push
fisubl
dec
xchg
push
aad
cld
sub
inc
push
fcmovbe
pop
mov
enter
outsl
jae
imul
insb
sub
and
sbbl
cmpsl
mov
mov
jge
clc
or
push
repz
sti
cmovo
add
fdivr
adc
imul
imul
dec
test
cmp
pop
push
out
mov
xlat
ljmp
ja
aaa
sbb
rcll
sbb
fdiv
jecxz
dec
add
fadds
repnz
jge
push
mov
js
cwtl
push
shrl
loop
cmp
cs
add
stc
int3
dec
outsb
dec
clc
or
in
cmpsl
loope
xchg
sbb
push
jmp
xchg
lods
out
shrb
cmp
mov
ja
xchg
add
out
inc
mov
add
push
add
lret
jns
icebp
imul
out
pop
out
test
scas
daa
fstps
and
push
scas
xchg
xchg
lret
dec
cs
popa
in
pop
adc
ret
sub
repnz
addr16
or
repz
lds
and
cld
push
mov
in
incb
adc
fisttpl
das
mov
xchg
into
inc
jecxz
push
and
fwait
inc
ja
scas
jle
cmp
gs
lahf
push
xchg
jmp
mov
push
mov
dec
bnd
inc
sub
xchg
inc
ljmp
aaa
jle
lcall
sbb
push
scas
lods
ja
in
mov
inc
sbb
xor
pop
or
or
movsl
cli
psubw
push
ss
add
mov
jns
jae
dec
jmp
in
cmp
sub
loope
pop
jae
aad
setl
stc
mov
test
lds
data16
pop
lret
les
mov
inc
mov
sub
xor
int
jp
test
or
xchg
inc
inc
repnz
js
testl
lock
cmp
test
fisttps
adc
enter
or
adc
rclb
leave
imul
jp
std
test
int
or
jge
daa
sub
arpl
cmp
icebp
dec
pop
pushf
rcl
xchg
push
adc
cmp
add
and
pop
push
lret
cmp
and
mov
xchg
int
pop
push
rorb
jp
jecxz
lds
push
inc
adc
cli
xchg
movsb
pop
daa
std
adc
call
out
adc
inc
jecxz
mov
xlat
inc
cmp
outsb
sti
out
ja
inc
icebp
or
mov
jae
push
add
jl
adc
dec
or
repz
movsb
xor
imul
cmp
outsl
lret
aad
pop
cmp
mov
add
es
jb
xchg
rcl
mov
int3
xchg
pusha
out
in
dec
cmp
mov
in
hlt
push
je
adc
mov
icebp
pushf
mov
pop
jmp
lret
sbb
out
or
jns
testl
dec
cmpsb
pop
xchg
inc
and
sub
or
shrb
cmp
mov
sbb
in
sahf
xchg
dec
leave
call
rorl
sub
in
insb
test
jle
mov
xor
xchg
rorl
jmp
movsl
xchg
fildll
lea
lcall
sub
dec
fsubl
adc
ljmp
call
repz
pop
int3
mov
mov
sbb
aad
in
adc
les
lret
mov
clc
movsb
or
lahf
adc
jg
aam
inc
popf
xchg
arpl
js
jo
mov
shr
mov
sub
xor
add
mov
fcomi
dec
and
rcll
push
cmpl
stc
dec
cmpsl
fisubs
icebp
repz
insb
mov
jae
aaa
add
xor
mov
das
test
std
fcmovb
and
rclb
pop
adc
push
mov
int
push
pop
faddl
movl
loopne
sub
jle
in
leave
jg
lods
mov
mov
lods
pop
jmp
outsb
sahf
inc
into
mov
mov
fsub
pop
stc
ljmp
test
daa
imul
mov
jne
xor
lcall
cmc
lods
push
cmc
push
inc
test
out
les
into
leave
call
out
incl
popf
or
xor
sub
mov
lock
push
pop
xchg
dec
scas
out
mov
mov
and
aas
out
xchg
add
insb
scas
stos
lret
mov
inc
lret
arpl
and
lods
sbb
insb
test
les
loope
aaa
sub
xor
push
cmp
inc
test
test
es
mov
imul
jo
cmp
pop
negb
push
cmp
loope
je
ds
pusha
push
repnz
outsb
fadd
sub
cmp
filds
jge
sub
xchg
insb
mov
mov
movsl
ja
loopne
stos
in
leave
into
lods
push
jns
mov
data16
jecxz
cmp
and
jno
sbb
sbb
xor
lock
pop
je
and
imull
ds
cmp
in
leave
pop
femms
outsb
mov
inc
out
pop
dec
push
jns
inc
sub
test
stos
outsl
push
icebp
xchg
mov
push
aas
mov
lods
cs
sub
stc
pushf
adc
jg
cmpsb
stc
adc
subb
or
sar
xor
dec
jecxz
arpl
cmp
jae
bound
ds
inc
int
xchg
clc
in
cmp
pop
mov
cmp
xlat
xchg
jns
test
sahf
jno
push
inc
lret
pop
cs
push
into
jbe
push
or
inc
cmp
in
loop
add
scas
fisubl
fs
shl
pop
fists
and
xorb
daa
insb
aad
dec
inc
and
int3
mov
push
cmp
mov
mov
jp
mov
or
lcall
pop
jp
popf
lcall
ljmp
pop
xchg
sbb
pop
mov
imul
jl
lcall
mov
frstor
sahf
sarl
inc
xchg
out
sbb
pop
cmp
inc
loope
pop
data16
subb
iret
sub
cmp
inc
bound
js
fwait
cld
adc
inc
out
push
pop
cmp
in
arpl
mov
jecxz
or
subb
push
ret
into
es
and
aad
shrb
dec
inc
mov
mov
mov
push
mov
pushl
or
mov
jle
cs
push
add
pop
xor
movsl
outsb
stc
js
ss
xchg
mov
dec
pushf
pop
pusha
xlat
push
pop
pop
jge
into
sti
pop
xchg
xor
mov
push
and
aaa
pop
sbb
and
jl
xchg
xchg
into
and
or
inc
clc
or
popf
loop
jecxz
jne
cli
sub
and
ss
inc
sbb
pusha
cmc
cmp
pop
popf
repz
add
mov
sub
xchg
and
mov
push
out
es
in
pop
xchg
push
sbb
inc
mov
mov
lahf
fucomip
adc
push
insl
popa
test
dec
lods
inc
out
jns
scas
jg
xchg
adc
out
mov
mov
std
clc
mov
push
shlb
or
clc
or
ljmp
mov
mov
mov
jae
or
ds
insl
es
loop
push
or
pushf
or
mov
mov
add
adc
lds
aas
pop
test
mov
push
arpl
cmp
push
jl
imull
shr
addb
sub
or
add
dec
fadds
rclb
push
add
push
push
xchg
cmp
xchg
and
orl
push
js
stc
lcall
sbb
push
movsl
cs
movsl
add
fsubrs
jae
or
mov
ja
shll
roll
stos
ja
cs
daa
daa
jle
jge
jns
jle
mov
out
jmp
lret
daa
inc
fldt
nop
push
push
in
and
mov
and
sbb
lea
dec
push
jmp
xlat
inc
sub
or
sbb
adcl
int3
mov
sti
jg
dec
xorb
and
and
roll
ss
cmp
mov
xor
mov
mov
fistpl
jmp
inc
loop
xor
xlat
fidivrl
stos
mov
dec
cld
cs
mov
push
push
negb
mov
shl
jge
push
push
out
sti
mov
stc
push
sub
inc
xor
mov
push
test
xchg
out
call
push
das
andl
sub
shl
loopne
movsb
sti
dec
push
jb
sbb
iret
sbb
pop
mov
adc
test
push
fnstcw
mov
mov
loopne
mov
loopne
fs
sarb
inc
iret
add
xchg
lcall
jo
test
xor
data16
jmp
mov
pop
cmp
jo
and
addr16
mov
cmpsb
dec
xor
jmp
fidivs
ret
sbb
imul
add
add
stos
test
sahf
fldcw
adc
popf
into
mov
lods
outsb
inc
cmp
mov
jle
addl
xchg
iret
leave
nop
inc
in
inc
test
xchg
lock
out
int3
xchg
repz
data16
shll
aas
call
mulb
xchg
scas
insl
xchg
sbb
pop
hlt
shlb
sbb
cmpsl
outsl
cmpl
mov
mov
orb
push
out
mov
add
shrl
repnz
pop
pusha
push
subb
int3
dec
rolb
jns
lret
sahf
jge
lret
test
inc
push
aad
jl
lahf
ljmp
out
fwait
imul
insb
jnp
movsb
sbb
xchg
dec
jmp
mov
pusha
fisttpll
sahf
mov
xchg
cmp
pop
add
xlat
xlat
in
test
xor
dec
jge
jbe
cmp
jnp
shlb
mov
ret
movsl
les
aad
inc
cmc
cmp
or
push
mov
call
adc
mov
adc
or
mov
xchg
fs
push
cltd
jge
xchg
fdivrl
movsl
xchg
xor
pop
hlt
push
fstl
pop
push
aad
and
icebp
xchg
repnz
mov
ds
pop
xchg
add
shll
call
push
gs
lea
dec
cmpsl
cmp
leave
add
mov
mov
xor
mov
push
movsl
add
mov
push
pop
mov
or
and
push
jp
imulb
pop
pushf
push
out
mov
jge
rorl
jmp
loopne
jae
repz
lods
jge
clc
std
push
out
cmpsb
ja
or
xchg
js
mov
lods
sbbb
jns
xor
ret
push
inc
mov
inc
aaa
or
jns
fnstsw
test
jmp
cmp
dec
add
cmp
push
jp
fsubs
scas
in
in
cmp
push
dec
js
mov
andb
stc
cmp
adc
jg
int3
rorl
add
ljmp
inc
sbb
fisttpll
ljmp
pop
inc
dec
out
iret
push
filds
inc
mov
test
mov
sub
lret
and
cmpl
dec
push
fcomps
loop
inc
icebp
das
pop
mov
push
cmp
cmpsb
mov
jp
ficompl
shrb
add
mov
test
and
rcl
or
in
sub
jnp
cmc
mov
fisttpll
stos
xchg
jge
jl
stos
scas
add
sbb
dec
sub
cwtl
neg
mov
cmp
lds
xchg
popl
mov
mov
bound
mov
or
test
cmp
jle
lods
xor
mov
xor
loopne
loope
test
out
jge
loopne
pop
mov
fsubr
xchg
mov
or
or
dec
in
cmp
and
mov
xor
add
push
ficoms
jno
pop
jne
and
sub
push
daa
je
push
mov
loope
movsl
ja
push
xchg
lock
push
add
xor
inc
xchg
dec
je
ss
push
lea
into
mov
pop
fucomip
mov
dec
push
ljmp
push
loope
mov
ret
fisubrs
addr16
add
sub
xchg
in
mov
imul
mov
in
fucomip
out
insb
dec
sub
xchg
cmp
cmp
cmpb
push
mov
repnz
mov
out
shll
and
aad
sub
bound
add
cli
icebp
ljmp
and
jge
out
repz
xchg
pop
jmp
pop
sbb
push
decb
mov
mov
push
push
dec
lret
je
int
movsb
sbb
sti
jge
fstl
mov
and
cld
add
mov
fwait
mov
les
bound
xchg
mov
jae
ja
mov
out
testl
mov
cmpsb
addr16
push
in
ret
mov
xor
mov
test
cwtl
cmp
jne
sarb
lcall
es
push
lods
pop
cmc
js
stc
sbb
xor
sub
jo
xor
adc
dec
inc
mov
push
pop
pop
cmovnp
outsl
pop
mov
stos
push
mov
fsubrp
hlt
jge
adc
inc
mov
stc
jne
cmc
ficompl
int
into
mov
inc
std
mov
and
int3
pop
push
scas
out
shrb
adc
sub
mov
out
ss
add
push
bound
xchg
stc
gs
mov
in
dec
jnp
jmp
and
imul
mov
sbb
mov
xor
xchg
fildl
sub
push
fcompl
outsb
pop
in
push
pop
fs
mov
repnz
dec
loop
push
jnp
mov
jecxz
mov
aaa
add
jnp
dec
push
or
mov
mov
ret
cmpsb
sub
push
aam
out
mov
cli
and
mov
mov
test
sub
outsb
rcll
repnz
jns
push
shll
mov
lcall
mov
adc
scas
pop
sub
pop
addr16
sbb
fimull
dec
cmpsl
lods
cld
rcr
jbe
adc
in
add
loop
or
or
mov
ror
inc
jne
sahf
sbb
daa
and
inc
sub
flds
cmpl
imul
add
ror
test
jl
sbb
sbb
xor
and
add
push
lock
add
sbb
xchg
sbbl
es
ret
sbb
out
sti
sti
cmc
pop
jecxz
jae
lds
cmpsl
ja
std
ret
mov
cmp
or
cwtl
jmp
dec
inc
push
mov
push
pop
loope
cmp
shlb
out
xchg
dec
jns
sbb
and
or
ret
test
ret
push
mov
cmp
mov
push
push
insl
cli
jbe
adc
out
shr
cmpsb
fcompl
mov
jns
cs
dec
fisttpl
sbb
mov
pushf
sbb
adc
xchg
jno
add
xor
xchg
xchg
sarb
outsl
outsl
xor
or
nop
mov
pop
subb
inc
mov
jnp
cmc
cltd
cmp
in
xor
test
fwait
nop
pop
insb
push
xchg
push
sub
push
sbb
hlt
loope
push
fs
push
mov
scas
icebp
enter
fimuls
pop
sub
out
dec
mov
push
jb
jecxz
or
xchg
fwait
dec
jns
leave
push
imul
cmc
mov
pop
out
adc
cld
dec
pop
mov
shll
cmp
fcmovbe
adc
xor
icebp
pop
pop
inc
sahf
out
into
push
pop
daa
pop
popl
cwtl
int
and
add
loope
adc
iret
inc
cwtl
icebp
xor
cmp
in
cltd
push
cmp
dec
xchg
mov
repz
loop
xchg
xchg
push
jne
lcall
mov
addr16
jmp
mov
stc
arpl
fsubs
add
mov
mov
xchg
cmc
mov
arpl
lret
or
les
rorl
dec
rorl
and
sti
mov
xchg
pop
or
test
int
lcall
and
dec
icebp
sbb
cltd
mull
mov
insb
gs
push
cmpsb
loopne
mov
sbb
inc
stos
adc
sbb
call
loope
out
cmpsl
mov
or
or
pushf
and
jns
sbbb
and
jge
test
aad
call
stos
js
das
shll
jo
fstpt
jnp
xchg
push
fists
and
out
cmc
sub
sbb
aad
fnstenv
add
arpl
mov
inc
in
mov
add
xchg
cmp
and
or
into
incb
push
mov
cmp
pop
mov
outsl
add
out
hlt
popf
add
push
aas
mov
xor
mov
mov
cmp
in
popf
sub
mov
ret
sbb
inc
out
xchg
pop
sub
enter
arpl
insl
imul
mov
add
dec
dec
or
adcb
mov
test
jns
pop
xor
jmp
sub
inc
jl
and
xchg
mov
repnz
mov
filds
xchg
dec
pop
sub
clc
inc
jnp
shrd
sub
stos
or
fldenv
dec
sarb
jo
sub
idivl
xor
rcll
subb
jle
xchg
out
dec
clc
xchg
pop
mov
mov
lcall
leave
cmp
clc
dec
mov
jbe
dec
test
inc
sub
dec
fsubs
movsl
cld
pusha
cmp
cmp
pop
lea
sbb
cld
push
push
pushf
out
loopne
aas
lea
test
pop
adc
repz
aad
orb
xchg
mov
stos
lret
xchg
push
jne
ds
pushf
dec
std
fwait
jg
fidivrs
bound
outsl
cmpsl
adc
pushf
xchg
in
mov
mov
inc
sub
cmpsl
aas
sub
adc
in
js
jb
xchg
lahf
es
aad
mov
orb
mov
sbb
mov
mov
aaa
aam
jne
ret
mov
dec
pop
fiaddl
imul
and
lds
in
clc
nop
data16
sub
insb
sub
les
in
xor
inc
cmpsb
pusha
dec
mov
jp
pushl
into
addr16
push
xor
enter
adc
pop
jb
or
mov
xor
push
scas
movsl
pop
mov
aam
and
popa
ljmp
into
mov
scas
push
rcrb
pop
pop
cmp
insb
adcl
push
sbb
in
and
out
sub
add
and
push
in
fs
pop
arpl
push
outsl
xchg
add
popa
adc
ljmp
outsl
mov
mov
mov
movsb
mov
loop
in
aad
ret
add
cltd
stos
ds
iret
daa
xchg
iret
jbe
xchg
dec
out
mov
jmp
dec
inc
cmp
je
sub
out
jecxz
lahf
shr
out
je
push
push
fnstenv
xor
jne
push
sbb
jecxz
add
mov
mov
add
push
mov
mov
lret
out
mov
out
dec
push
pop
lret
jae
cwtl
dec
arpl
sbb
mov
sub
pop
jle
testb
dec
enter
test
test
mov
sub
mov
pop
inc
cmp
imull
fsubl
cmp
sahf
subb
sti
cltd
mov
mov
test
jne
mov
pop
mov
inc
mov
addr16
loopne
jle
stc
in
adc
jo
out
jle
je
fimull
mov
in
jecxz
xchg
inc
ss
mov
pusha
addr16
mov
scas
lret
inc
push
enter
dec
in
mov
push
js
sub
aad
outsl
jecxz
insb
fdivl
inc
sbb
js
sbb
cli
inc
shll
add
jp
push
shrb
xor
inc
push
mov
lods
aas
push
addr16
pushf
xor
ss
xor
sbb
mov
sbb
cmp
lcall
mov
inc
jb
fisubrl
jg
daa
fistps
cmp
icebp
jne
adc
xchg
movsl
testb
out
inc
xor
mov
or
stos
dec
adc
out
pusha
popa
ds
lock
add
push
stos
push
inc
pop
movsb
and
jnp
mov
add
pop
jne
nop
je
cmc
adc
pop
pop
cmp
dec
into
aaa
test
fisttpll
add
add
or
sbb
inc
test
xchg
sahf
fisubrs
test
test
dec
xorb
sub
cmp
add
adc
xor
mov
sti
pop
bound
mov
sub
push
push
jmp
push
jae
push
fbld
sub
fists
repnz
faddl
fstpt
mov
ljmp
xchg
test
test
clc
ds
mov
dec
push
data16
fists
sub
xor
sbb
sbb
push
mov
dec
dec
jmp
sub
inc
xchg
jg
cmp
push
sbbl
xor
push
dec
or
test
nop
cmpsl
xchg
sub
addr16
pop
pop
repnz
repnz
cmp
and
nop
jp
inc
mov
les
sub
mov
cmp
pop
sub
push
leave
push
clc
idivl
pop
jb
adc
shrb
fisubs
mov
xchg
fildl
mov
cmp
out
mov
repz
sub
outsb
loop
xor
sub
pop
clc
lcall
negb
add
pop
call
mov
push
inc
ss
iret
or
add
and
pop
pop
loopne
ss
aas
mov
shll
iret
ss
jp
xor
nop
add
insl
cmp
cmp
lods
xchg
and
out
cs
in
adc
insb
sub
sbb
mov
mov
xchg
clc
mov
and
push
test
cmp
iret
fucom
arpl
sub
lods
cmc
ljmp
insb
push
je
add
fiadds
and
pop
stos
dec
mov
sub
pop
jnp
in
out
jns
aam
inc
cmp
orl
addr16
lock
jno
adc
add
or
mov
subb
sub
call
sarl
inc
in
jne
mov
mov
ss
sbb
push
sub
mov
out
repz
push
lcall
in
dec
aam
mov
xchg
jns
daa
or
iret
lcall
sub
cmc
popf
addb
scas
add
fidivs
sbb
xchg
fs
and
ss
and
divl
jle
nop
add
push
and
lret
stc
movsl
cltd
push
mov
jp,pn
das
mov
cltd
mov
dec
cmc
aam
jle
mov
lcall
mov
sbb
fnsave
add
add
mov
in
or
in
mov
mov
loope
outsl
je
sbb
in
outsb
jns
loope
jle
inc
cmp
inc
enter
and
ljmp
jnp
sub
dec
roll
popa
jg
sti
leave
cmp
cltd
add
js
call
out
in
cmp
mov
adc
popf
add
sub
lods
or
xchg
test
lret
or
je
and
shrl
movl
push
sub
es
negb
dec
andb
add
inc
inc
mov
sarl
lret
sarl
pop
in
iret
in
shrb
int
jnp
ss
rcll
mov
mov
in
push
test
fidivrl
lock
dec
sub
loop
mov
mov
pop
mov
test
sub
es
xchg
jns
jge
fdivrl
mov
mov
arpl
stos
fimuls
cmpsl
jo
in
mov
test
rolb
mov
ljmp
mov
push
fmull
scas
pusha
stos
jns
pop
mov
repz
call
cltd
loopw
jnp
dec
push
lds
fs
js
mov
repz
xchg
cmpsb
sub
dec
push
cmp
xchg
lcall
jmp
in
mov
lock
jmp
shll
scas
ds
in
mov
ds
scas
dec
fldcw
jg
push
out
outsb
xchg
out
sub
adc
push
fiaddl
jge
rclb
lcall
orb
in
mov
cltd
pop
and
mov
sub
add
ljmp
xchg
insb
in
adc
jae
aaa
pop
xchg
insb
jae
aaa
rcll
lahf
mov
push
cli
pop
adc
rcrb
or
fwait
jecxz
fcomps
loop
sub
mov
fisubrs
div
push
repnz
fsubp
jmp
decl
mov
lods
lret
sub
and
cmp
cmp
cli
sbbl
std
push
xor
dec
mov
es
xlat
lods
mov
inc
shrb
cltd
jle
lods
lock
shll
jne
fidivrl
adc
ret
out
dec
dec
lahf
faddl
jle
mov
xor
xchg
dec
cmp
repnz
movsl
xchg
pushf
nop
cmp
sbb
xlat
adc
pop
xchg
subl
and
push
push
enter
loop
es
enter
and
lret
pop
cmpsl
mov
scas
xchg
out
hlt
loope
cmc
movsl
js
nop
push
inc
jle
mov
ffreep
fs
leave
mov
aad
jbe
mov
sbb
fbld
out
test
repz
xor
sbb
xchg
sub
inc
in
js
xor
imul
xor
int
mov
aas
jnp
or
adc
sahf
cmpsl
in
push
ss
test
inc
or
shr
add
or
mov
fnsave
les
push
sub
loop
jbe
leave
or
sbb
mov
test
int3
mov
cmpsl
out
movq
insb
inc
adc
mov
out
aad
out
mov
orl
mov
lock
lret
mov
sub
int
inc
sbb
fcomps
icebp
and
dec
out
sarb
xor
inc
loopne
cmpsl
sub
add
pop
nop
jbe
mov
outsl
and
pop
sub
xor
in
pop
rcrb
mov
adc
pop
pop
xchg
push
fs
xlat
andb
mov
mov
jo
jmp
cmc
mov
fistl
mov
test
pop
sbb
scas
inc
jns
test
push
in
je
pop
jecxz
cmc
mov
xchg
fists
fcmovnu
rorl
mov
jbe
mov
dec
aaa
jne
push
mov
cmp
jg
ret
loope
test
cli
test
push
imul
stc
pushf
movb
mov
mov
into
mov
sbb
mov
imul
call
daa
cmp
jo
adc
pop
jae
pop
sub
mov
mov
lods
inc
sub
das
pinsrw
cmp
or
push
mov
jne
xor
jnp
xchg
in
dec
xorl
push
inc
xor
or
sub
js
jb
fsubrl
fistps
imul
push
pop
jge
mov
lods
bound
inc
mov
sub
jns
lock
es
jge
inc
pushf
and
pcmpeqw
or
faddl
addr16
cmpsl
je
test
or
das
cmp
sbb
testb
jno
pop
call
addr16
fildll
dec
cli
push
xchg
outsl
arpl
mov
fisubs
xchg
popf
rcll
dec
imul
jg
int
ret
sub
gs
out
ja
movsb
in
out
add
mov
adc
out
cld
call
pushf
dec
and
test
xchg
xor
faddp
and
jl
jne
xchg
aas
gs
mov
notl
rcrl
out
xchg
repnz
mov
jecxz,pn
cltd
pop
dec
push
addr16
or
inc
xor
and
push
fmulp
lds
dec
xchg
flds
and
add
xlat
jp
inc
inc
mov
fsubl
cmp
aad
or
xor
xlat
insb
lret
into
cwtl
push
lret
sub
mov
shlb
cld
add
clc
add
xchg
add
jbe
adc
pop
and
jnp
imull
repnz
xor
fldenv
lret
daa
fldt
sbb
pop
cmp
pusha
jge
dec
add
test
test
cmp
clc
sbb
popa
loope
rcll
ss
in
sahf
jge
out
jns
and
cwtl
loope
gs
je
push
add
or
dec
lods
adc
in
ret
xchg
and
sub
and
jne
xchg
out
xchg
fistpl
xorb
ficoml
pop
flds
jmp
outsb
jnp
lods
push
daa
mov
inc
jns
xor
scas
mov
std
jg
xchg
inc
sar
add
sub
aad
mov
or
imul
inc
ret
jnp
push
cmp
lea
stos
enter
pop
cmpsl
and
sub
pop
push
mov
xor
dec
or
mov
es
out
cmp
aaa
aaa
sub
xchg
jmp
and
test
inc
mov
xor
addr16
sub
insl
movl
push
divb
mov
stos
ja
dec
xchg
out
lods
insl
push
lcall
test
rcrl
dec
js
out
jecxz
stc
adc
in
dec
mov
inc
push
push
lahf
insl
xor
addr16
or
cmpsb
mov
pushf
add
test
push
mov
push
dec
dec
mov
aas
movsl
test
xor
mov
mov
addl
dec
popa
sub
mov
mov
ljmp
cltd
subb
aas
xor
es
jecxz
or
pop
push
icebp
adc
mov
lds
pop
aam
pop
xlat
imul
das
loop
jecxz
iret
sbb
testl
in
push
dec
cli
lds
subl
mov
in
out
aaa
sbb
add
pusha
daa
sub
cmp
adc
js
mov
fldcw
dec
adc
and
mov
push
push
mov
fwait
xchg
cmpsl
xchg
addr16
push
sbb
lods
rol
mov
mov
sub
jge
sub
iret
add
pusha
xchg
ljmp
popf
call
shr
mov
add
pop
aaa
mov
xor
sbb
pop
push
jl
icebp
cmp
movsl
insb
imul
inc
dec
hlt
addb
xchg
jae
mov
and
cmp
sbb
addr16
das
adc
pop
or
lods
mov
fsts
adc
mov
mov
and
push
mov
mov
call
nop
jbe
sbb
lret
data16
mov
push
repz
jo
ret
cltd
pcmpeqb
jb
lock
int3
sbb
shlb
mov
scas
or
xor
stos
leave
sub
or
push
cmp
cli
mov
jne
sbb
ret
cmp
mov
xchg
mov
imul
mov
jo
pop
pop
cmp
in
cmc
push
dec
mov
lds
stos
cli
push
xchg
mov
jmp
adc
pushf
lock
pop
inc
stos
pop
add
xor
mov
or
mov
ljmp
shrb
dec
xor
jmp
in
jo
cli
cmpsl
mov
mov
lods
frstor
outsb
xchg
inc
in
dec
cmp
fnstcw
icebp
ret
pop
mov
mov
mov
in
add
sbb
je
aam
in
orl
xchg
push
lock
sbb
inc
sub
push
test
push
aas
mov
dec
ds
imul
and
mov
mov
rorl
sub
push
int
pop
stos
popf
outsl
xor
pop
sub
and
push
jg
pushf
xchg
imul
les
jge
xchg
jecxz
or
and
xchg
testl
pop
xchg
inc
and
lret
adc
dec
add
loopne
mov
mov
cld
mov
mov
cmp
scas
test
and
add
out
adc
iret
jmp
push
imulb
push
gs
mov
mov
in
and
lret
xchg
dec
dec
cld
fldcw
adc
clc
jae
outsb
fstl
subl
hlt
test
dec
popa
push
pop
sbb
std
pop
arpl
mov
je
mov
xchg
pop
stc
pop
lcall
mov
mov
mov
xor
scas
out
pusha
cmp
push
xchg
push
popf
xchg
test
movsb
mov
and
xor
and
xchg
test
inc
sbb
push
stos
shrl
arpl
xor
mov
call
or
ss
popf
xchg
dec
dec
arpl
arpl
ljmp
add
pop
mov
xor
push
daa
jno
sub
outsl
and
push
and
cmpsb
adcl
jo
mov
sbb
ficoml
dec
jecxz
outsb
mov
dec
add
loope
pop
or
jbe
rep
dec
add
das
lahf
aad
mov
jb
arpl
call
xchg
sbbb
fsubr
push
cmp
icebp
pop
pop
loop
popf
adc
movzbl
jbe
sub
je
mov
mov
sub
inc
movsb
jmp
jg
mov
cmp
mov
test
cwtl
cmp
push
test
test
bound
pop
xor
sub
mov
mov
xchg
cmp
outsb
pop
jge
inc
into
mov
inc
dec
lahf
das
lods
int3
push
adcb
lcall
push
scas
add
repnz
jbe
mov
xchg
in
rcl
and
or
push
push
test
enter
mov
pop
call
inc
push
and
and
mov
and
sbb
fdivrl
insl
sub
insb
pop
fisttps
mov
push
popa
mov
add
out
je
jns
das
adc
jo
mov
shll
iret
jmp
out
popl
mov
stc
enter
fcoml
pop
xlat
lods
push
sahf
sbb
negl
das
cld
decl
xchg
notl
add
stc
pop
cltd
sbb
in
push
rclb
in
fdivl
lods
nop
fcmovu
add
inc
cld
mov
xorb
push
inc
fmull
pop
mov
mov
jns
push
in
cmp
mov
xor
lea
pop
pusha
xor
outsl
pop
test
jmp
xor
and
pop
sbb
mov
add
xchg
aad
jmp
pop
add
dec
in
xor
loope
or
je
lock
adc
dec
lock
jb
add
cmp
cli
in
lods
lret
and
mov
testb
ja
iret
xorb
es
mov
and
loopne
jmp
shrl
xchg
out
add
push
mov
lcall
cltd
mov
sarb
data16
xor
std
xchg
std
or
pusha
icebp
or
push
inc
insl
stc
xor
sar
dec
xchg
xchg
int
or
pop
xor
stos
jge
push
and
test
dec
xlat
pop
jge
push
mov
andb
das
xor
dec
or
inc
cmpsl
cltd
pop
arpl
mov
dec
xchg
mov
movb
loop
iret
ret
or
lock
add
rcrl
push
sbb
arpl
into
push
inc
test
and
adc
aam
adc
int
data16
mov
cli
push
enter
push
adc
icebp
mov
pop
test
ja
loopne
inc
xchg
addr16
jne
cmpsb
xchg
repnz
sbb
es
cmpsb
pop
jnp
add
xor
es
insl
mov
pop
in
arpl
sar
imul
cld
pop
push
push
add
mov
sbb
mov
or
mov
cli
mov
shlb
bound
in
push
lret
push
cmc
out
clc
fstl
in
inc
lret
test
movsl
pop
lea
or
gs
mov
inc
cld
mov
pop
mov
inc
je
jbe
lcall
mov
sbb
xchg
es
cmc
std
sbb
mov
out
cmp
imull
rep
iret
xchg
repz
stos
cmp
or
jl
adc
mov
xchg
cmpsb
cmp
das
jmp
push
outsb
lea
jns
xchg
cld
in
call
sbb
add
inc
mov
pop
cmovp
mov
or
cmp
cmp
repz
push
adcb
add
and
xchg
sahf
xchg
outsl
ret
jbe
mov
loope
adc
or
movsb
sub
lret
pop
mov
mov
out
clc
pop
lcall
adcl
and
xchg
int
gs
nop
cwtl
sar
mov
subb
daa
push
mov
adc
test
movl
mov
mov
out
add
in
out
fwait
in
ret
dec
xchg
and
add
jae
mov
jno
xchg
mov
fwait
aaa
push
mov
cld
push
cltd
mov
int3
xor
push
pop
cmp
push
sbb
lret
mov
pop
xchg
hlt
adc
std
data16
pop
ljmp
sbb
pop
adc
and
mov
rcrb
dec
mov
cmp
ds
jmp
in
jmp
enter
ljmp
jl
xlat
scas
cli
out
cmp
scas
js
or
cmpsb
and
sbb
rcrb
xchg
or
cs
scas
jb
cmpsl
dec
fsubrs
pop
fdivp
in
pop
jnp
pop
data16
sub
push
jnp
ficoml
arpl
inc
xchg
outsb
ja
mov
mov
sub
pop
out
mov
and
sti
mov
or
or
jns
or
xor
loope
and
lds
fisubl
lahf
std
xchg
dec
push
pushf
xchg
stos
data16
sbb
pop
inc
jecxz
aas
jbe
cmp
repnz
or
push
cmpsb
addr16
push
mov
inc
arpl
fucom
mov
out
ljmp
sti
push
mov
jne
out
aaa
ja
mov
and
xchg
and
ror
cmpsb
out
jbe
clc
mov
out
mov
xchg
mov
mov
xchg
in
imul
mov
jbe
out
fcomi
je
scas
jge
or
push
push
inc
xor
push
xor
or
jmp
cmp
lds
testb
out
stos
sbb
xchg
adc
cmc
sarl
fcompl
popa
xor
inc
and
adc
out
inc
cmp
cld
mov
add
adc
int
mov
inc
dec
sbb
stos
jno
cmp
mov
in
cmp
adc
xchg
push
and
gs
push
adc
imul
and
jmp
cmpsl
into
mov
xlat
xorb
mov
int3
or
jle
sbb
sub
lea
pop
dec
imul
aas
push
add
xlat
enter
popa
shll
pop
lea
fstps
fstl
add
test
or
test
cmp
ss
push
leave
jl
jb
xor
fisubl
push
and
mov
stos
and
pop
call
mov
xor
testb
shrl
pop
mov
cmp
adc
js
cmp
inc
mov
lds
lods
xchg
push
in
or
cmp
pop
imul
test
imul
jb
adc
mov
add
lods
inc
xchg
test
sbbb
jp
cwtl
pop
ljmp
rorb
ljmp
xchg
mov
fcoms
and
mov
fisubl
hlt
or
jp
mov
mov
mov
jle
jge
inc
int3
aad
pop
mov
xchg
inc
fcmovne
mov
xor
jl
dec
add
mov
lcall
or
movsb
clc
and
nop
mov
fwait
xchg
sahf
loop
xchg
fdiv
adc
das
insl
mov
mov
fsubr
sbbl
add
sti
xchg
ror
add
or
inc
xor
push
sbb
push
xor
pop
dec
mov
fadd
jge
push
sahf
mov
loopne
cmp
adc
jmp
jnp
stos
inc
les
jge
mov
dec
jb
rolb
addl
icebp
lcall
adc
in
addr16
sti
in
cmp
cmc
repz
and
mov
test
xchg
lods
popa
enter
pop
dec
fbld
add
outsb
lods
adc
jno
popa
or
and
popa
mov
and
mov
xor
movb
cli
mov
adc
pop
pop
outsb
add
cmc
mov
jns
sbb
add
push
addl
ss
out
rorl
fmul
or
test
popa
testb
fiaddl
aaa
jp
mov
jmp
jnp
orb
cli
clc
xor
pop
or
imul
sbbb
inc
pop
push
and
lcall
test
loop
loopne
aaa
mov
insl
cmpsb
xor
rolb
xor
rcrl
repz
mov
hlt
mov
pop
in
mov
out
fucomip
pop
fisubrs
notb
jmp
out
jmp
ret
inc
adcb
popa
cmp
cmp
data16
scas
mov
push
scas
jmp
insl
aaa
outsb
mov
ljmp
cmpsl
sbb
push
sbb
mov
mov
jmp
dec
sbb
orl
bound
xchg
sbb
ret
and
pop
sub
inc
xor
push
adc
shrl
jl
dec
lea
pop
cmpsl
jae
testb
sti
push
test
add
pushl
jle
dec
cmp
add
push
pushf
jns
mov
sbb
fs
dec
fimuls
mov
cs
pop
subb
mov
dec
dec
push
push
xchg
shll
data16
sbb
aaa
stc
int
stos
mov
mov
shlb
mov
jge
rclb
mov
xchg
icebp
mov
add
sbb
push
pop
push
ds
jns
or
push
or
lds
push
sbb
das
das
fistpl
mov
adc
rcl
jns
xchg
loopne
mov
enter
daa
out
mov
mov
xor
xchg
imul
enter
popf
aas
jbe
sbb
bound
push
cltd
add
or
push
push
inc
cltd
nop
test
xor
sbb
inc
push
xor
push
inc
and
fistps
mov
jmp
push
ret
nop
aas
xchg
inc
clc
cs
xor
lret
dec
ret
incb
cwtl
mov
int3
lcall
leave
inc
xor
repnz
push
adcb
pop
repnz
es
push
sbb
mov
mov
push
lock
popf
lret
push
mov
xor
nop
dec
fbstp
stc
xor
add
insb
in
cmp
lock
xchg
mov
fsubl
lcall
or
hlt
lods
dec
mov
pop
fcoml
and
cmpb
lods
jns
xor
push
shl
xchg
movsb
jbe
aaa
shrl
sbb
cmp
mov
jge
dec
subb
inc
popf
xchg
imul
add
cmpb
inc
mov
jmp
mov
fists
arpl
addb
inc
aas
scas
enter
dec
jl
leave
cmpsl
cld
jge
ss
sub
arpl
out
inc
xchg
jle
jno
out
pop
adc
mov
xor
popa
mul
jmpw
test
mov
inc
pop
push
push
pop
adc
adc
inc
mov
cmp
push
sbb
jl
xchg
insl
and
shlb
dec
sub
or
inc
jb
push
pop
mov
xchg
inc
push
xlat
or
into
jnp
test
xor
clc
scas
ret
mov
cmp
cld
xor
cld
or
ret
push
out
out
insb
push
xchg
jle
jno
jae
cmp
cmpsl
push
xor
mov
inc
addr16
nop
rcll
adc
lods
cmp
das
movsl
pop
dec
xorl
repz
mov
ja
mov
dec
pop
in
mov
negl
cmp
push
int3
ret
push
fimull
inc
mov
bound
test
testl
mov
popf
arpl
pop
mov
ret
cld
xchg
lret
jne
jnp
lret
cltd
mov
adcl
push
fmuls
jmp
sub
jg
inc
push
add
stos
cmp
jp
ljmp
je
inc
or
lahf
xchg
push
cltd
idivl
dec
outsb
mov
out
lods
sub
in
pop
pushf
and
sbb
and
mov
dec
mov
ret
mov
out
push
loope
push
test
xchg
faddl
mov
icebp
push
sbb
int
mov
pop
clc
stos
cmp
mov
stc
and
xor
add
sub
cltd
dec
data16
dec
test
xchg
insb
mov
lret
repnz
sub
push
fstpt
lods
cmpb
push
mov
xor
cmpsl
sbb
inc
push
and
arpl
ret
add
jae
daa
dec
push
mov
xchg
dec
mov
or
and
inc
push
out
sbb
gs
cld
xor
fwait
sub
pop
imull
mov
ds
jne
adc
stc
push
dec
or
push
push
insl
pop
out
xor
or
les
cmp
outsl
ja
enter
arpl
jge
or
lahf
sbb
jl
push
adcb
fldt
pop
addr16
ret
push
dec
adc
cmp
ss
cmp
popf
in
xor
jae
test
sbbl
lock
sahf
popa
inc
inc
or
movsl
jbe
packsswb
mov
pop
adc
inc
adc
mov
je
inc
jnp
jns
insb
jmp
jp
xor
mov
rorb
lret
jecxz
pushf
jle
jb
ljmp
pop
popa
fcoml
lock
jmp
js
sub
shr
pop
fistps
ss
cmp
sbb
stos
pop
stos
mov
add
sbb
and
sahf
mov
stos
aaa
sbb
lds
and
imul
xchg
stc
xchg
aaa
rclb
adcl
popf
inc
or
mov
notb
xchg
orl
xchg
add
mov
mov
insl
cmp
das
dec
icebp
xchg
mov
js
rcll
push
into
mov
inc
mov
push
je
xchg
jns
push
mov
jmp
mov
mov
push
ucomiss
out
pop
call
or
fxch
jae
and
test
cld
or
mov
xchg
push
add
xchg
stos
push
xchg
inc
jno
aaa
sbb
lods
hlt
ja
sbb
mov
mov
push
jmp
jns
in
xor
sub
cmp
lods
mov
mov
jmp
xor
cmp
mov
xor
mov
pop
mov
les
mov
dec
push
cmpsb
add
stc
sbb
sbb
adc
outsb
or
and
nop
push
sbb
xor
sbb
testb
pop
mov
mov
lret
loopne
leave
pop
cli
ss
xor
add
lcall
out
push
ja
icebp
xchg
dec
fsubrl
cli
pop
inc
mov
repnz
mov
dec
pop
mov
test
mov
jnp
out
sahf
jg
mov
arpl
mov
push
pop
jno
faddl
add
frstor
inc
pop
incl
fs
shll
mov
pusha
adc
sub
imul
jmp
sub
repz
lods
adc
mov
mov
sbb
cld
add
inc
fbld
push
adc
push
pushf
mov
fimuls
std
mov
ficoml
fimull
dec
jb
sub
inc
push
lods
jae
test
ss
mov
xchg
push
orl
and
out
stos
insl
xor
cmp
pop
jb
aad
cmpsl
xchg
dec
mov
icebp
sub
xor
pushf
adc
push
mov
int
xchg
rcrl
xlat
ret
popf
cmp
enter
mov
inc
aas
repnz
pop
lret
pop
cmp
push
outsb
cs
popa
loopne
decl
ljmp
jb,pt
pop
jo
out
test
xlat
lods
lret
shll
and
inc
cmpsb
mov
test
mov
mov
pop
insb
std
movl
daa
and
mov
xor
jae
in
mov
ja
or
jmp
iret
imul
mov
cmpl
jmp
or
cltd
mov
cmp
cld
sti
add
fisubrs
or
adc
push
shrl
jg
lahf
jp
adc
test
inc
es
inc
mov
dec
and
push
inc
sub
mov
add
rcrb
cs
push
cmp
popa
arpl
jmp
and
test
fwait
arpl
cmp
sbb
lcall
jb
sbb
sahf
data16
cmp
jbe
mov
mov
repz
pop
nop
loop
dec
out
loop
xchg
sub
ret
mov
sub
mov
cs
enter
lcall
sbb
mov
cmp
push
fdivrs
fistpll
leave
outsb
push
lock
subl
push
dec
mov
int3
lds
gs
adc
lods
stc
aaa
dec
adc
xchg
outsb
pushf
jb
or
cltd
mov
outsl
xchg
imul
mov
jne
in
push
pusha
push
and
or
add
std
xor
getsec
sub
imulb
sbb
fiadds
lahf
repnz
gs
push
fucom
xchg
loope
loopne
jnp
jbe
dec
cs
sahf
pop
dec
push
int
add
jl
jo
dec
dec
aam
shl
xlat
jl
dec
flds
sbb
and
pop
add
pop
dec
lods
and
ficomps
rol
pop
dec
cmp
pop
test
test
clc
cld
xorb
cmpsb
mov
and
lds
or
jb
jmp
adc
jp
movsl
push
test
cs
cmpsb
cmpsl
outsl
sbb
add
add
rcrl
rclb
sub
lock
mov
lods
or
movsl
xor
gs
pop
mov
and
and
rorl
or
das
cmp
jle
push
fcom
stc
mov
insl
insb
dec
in
in
iret
and
jmp
cmp
addb
inc
cli
mov
and
adc
test
repnz
cmc
mov
out
lea
cltd
imul
scas
scas
dec
xchg
push
inc
pop
pop
cmpsl
orl
adc
add
divl
movsb
call
push
rcrl
xor
ljmp
or
dec
xchg
adc
arpl
push
xor
sub
lods
ret
mov
cmpb
dec
and
jecxz
cmp
cmp
repz
lods
sub
pop
jl
jmp
stc
lret
loope
pop
mov
add
dec
xor
scas
outsb
pop
mov
icebp
add
inc
xchg
jg
shl
movsb
mov
out
or
mov
xchg
sbbl
in
mov
mov
loopne
and
push
mov
or
sub
mov
scas
adc
std
push
int
aas
mov
into
popa
jne
scas
xchg
adc
and
bound
push
add
cmp
sbb
int3
fldl
push
lock
int
in
inc
stos
cltd
sub
pop
shll
ljmp
mov
cli
cmp
sbb
daa
fsubrs
aam
mov
mov
mov
ror
or
adcb
outsb
sti
or
fld
pmuludq
je
jmp
sbb
push
pop
push
jge
push
mov
push
push
mov
cmp
int
sti
enter
lret
ljmp
in
mov
out
xor
xchg
icebp
lea
and
add
cld
sub
mov
add
scas
int3
nop
sub
outsl
and
jns
mov
mov
pop
or
in
es
gs
mov
leave
aaa
push
xlat
mov
aaa
nop
jle
lea
and
scas
jno
push
mov
or
pop
hlt
add
mov
pop
ljmp
mov
adc
inc
cltd
xorl
movsb
ljmp
mov
stos
xor
jno
pop
lret
xchg
f2xm1
mov
xchg
inc
js
daa
sub
aaa
cld
stc
movsb
sub
ja
or
add
dec
fistps
pop
out
cmp
jmp
jne
mov
adc
adc
out
jmp
jns
testb
pop
pusha
hlt
pop
cmp
jns
leave
add
fnstsw
std
sbb
pop
les
ret
movsl
add
mov
out
das
jns
or
add
popa
sar
cmp
aaa
sti
lret
mov
sbb
shl
xchg
jo
in
ss
mov
test
icebp
out
out
js
shll
xchg
sbb
sub
cmp
adc
jnp
fs
test
sbb
imul
fldt
rcll
sub
sbb
stos
sub
adc
dec
and
xlat
cmp
shr
fimuls
sub
pop
xchg
mov
and
clc
addl
jns
add
fs
xor
cmc
insb
cmc
test
mov
bound
push
arpl
cld
dec
sti
xor
xor
ret
dec
aam
stos
mov
cmpsb
xchg
or
push
test
cltd
xor
cli
jmp
adc
cld
data16
push
dec
jle
aaa
add
lret
mov
insb
popf
xchg
or
pop
stos
pop
pop
cltd
bnd
int
inc
dec
cli
das
scas
call
cmp
mov
mov
loope
fucomi
cli
shll
cltd
xchg
push
fistpll
rolb
fistpll
shl
mov
sub
fldt
lret
mov
push
mov
cmp
data16
adcb
ds
out
insl
dec
fwait
movl
add
push
or
clc
sbb
push
in
insb
out
ror
test
icebp
mov
and
ljmp
ss
int3
pop
jne
jmp
mov
push
mov
push
sahf
jb
dec
push
pop
aas
jp
adc
jle
fwait
jb
fs
cs
and
cs
sbb
mov
aam
dec
mov
pop
mov
cmp
lcall
sub
jo
mov
push
jecxz
cwtl
jl
test
pop
repnz
pop
mov
dec
adc
bound
cltd
dec
xlat
push
rolb
lret
fsubs
int3
cmp
insl
dec
test
js
adc
aaa
xor
or
push
xchg
aam
stos
jge
cmp
xchg
jmp
shll
push
mulb
mov
movsl
add
inc
out
mov
outsb
fnstsw
xchg
in
cmp
mov
cmc
cli
in
inc
push
repz
shlb
and
lock
cmp
mov
jo
cmpsb
jno
cmpl
clc
and
cs
jecxz
into
inc
dec
mulb
in
mov
jns
push
flds
jmp
xchg
notl
cld
test
stos
add
nop
imul
aam
push
ja
test
shl
inc
icebp
xor
or
xchg
cmp
leave
mov
mov
in
std
pop
out
test
int
stos
jl
das
stos
ror
or
push
popf
push
jnp
mov
pop
pusha
mov
and
mov
xchg
jmp
add
in
adc
xchg
add
xor
in
stc
arpl
sub
out
inc
mov
mov
fcmovu
jp
hlt
lret
add
mov
mov
or
or
aaa
das
cmpsb
inc
jl
adc
sahf
push
and
outsl
das
xlat
pop
dec
lret
add
cmpsl
int3
jbe
push
mov
push
add
cli
pushf
pop
jg
push
aam
das
xchg
add
sbb
mov
xor
jmp
mov
xchg
in
pushf
cmp
add
or
xor
jnp
lds
push
iret
xchg
gs
push
enter
pop
mov
into
popf
sarb
xchg
ss
fmul
stos
or
lret
sahf
and
enter
push
pop
jl
imul
mov
dec
stos
sbb
adc
dec
sub
cld
lock
scas
mov
test
bound
imul
mov
pop
imul
std
mov
fisubl
hlt
sub
mov
cmp
ja
inc
sub
mov
orb
je
insb
enter
nop
xor
popf
mov
insl
dec
jnp
clc
je
sbb
cmp
and
mov
test
cli
add
lock
push
stc
add
mov
push
sbb
cltd
cli
pop
fwait
ret
xchg
rorb
mov
fwait
adc
sbb
xor
push
daa
or
jb
push
or
add
popf
push
xchg
fsubs
ror
dec
inc
out
xchg
inc
mov
mov
or
imul
inc
bound
movsb
push
rolb
insl
mov
mov
sub
mov
pop
call
je
lods
out
call
push
hlt
cmovb
sahf
pop
aaa
lods
sbb
fucomip
mov
in
lahf
daa
shlb
stc
xor
leave
sub
sbb
xor
xchg
dec
bound
and
jmp
dec
fsubrl
stos
sbb
pop
rcl
mov
xor
mov
adc
dec
popa
xorl
mov
jbe
xchg
ret
mov
ja
stc
push
in
pop
scas
insb
mov
sbb
and
cmp
pusha
push
inc
les
movsl
ret
mov
flds
jp
das
popl
jl
fnstenv
shrl
sub
mov
out
ds
cmp
call
aaa
jmp
inc
and
test
sbb
pop
jmp
jmp
jge
jnp
loope
andl
int
clc
imul
or
iret
test
in
sbb
jae
mov
xor
imul
outsb
push
sub
add
rorb
pop
and
ljmp
push
or
jno
in
xchg
cs
inc
mov
fstps
cmpb
mov
sub
dec
fucomp
mov
pop
dec
pop
inc
lret
imul
ret
mov
das
cmp
cmpsl
inc
jg
and
pop
testb
ret
sub
jnp
popf
jle
hlt
mov
cli
mov
inc
pop
je
sbb
cmp
je
xchg
sub
sub
mov
and
int
pop
push
sbb
mov
xor
jg
pop
dec
sub
mov
std
in
daa
add
je
cmp
rcl
inc
fldcw
add
ret
sbb
and
rorl
inc
in
insl
sub
adc
mov
and
enter
rcr
out
push
xchg
daa
enter
aaa
dec
mov
pop
ja
sahf
mov
dec
mov
mov
or
pop
es
jp
sub
cmp
inc
jbe
in
cwtl
or
lret
ret
outsl
hlt
push
pop
fcompl
and
push
dec
mov
jne
cli
jecxz
mov
add
insl
cmp
adcl
fmuls
fistpll
push
mov
mov
sbb
arpl
std
test
mov
rclb
test
andl
push
arpl
jl
leave
int3
adc
lret
mov
mov
dec
mov
ljmp
hlt
call
inc
mov
fwait
mov
adc
insb
imul
shr
or
mov
jmp
leave
je
lods
or
mov
pop
data16
inc
test
std
mov
adc
push
adc
pop
pop
pop
inc
loopne
pop
sub
inc
loopne
pop
sbb
jl
mov
or
or
cmp
pop
aas
lock
shll
push
and
mov
js
jne
push
jnp
lahf
fisttpll
pop
arpl
jl
jnp
mov
ret
mov
xchg
or
mov
jmp
inc
mov
in
pop
jnp
xor
sbb
repz
push
mov
jo
insl
xchg
or
xor
rorl
pop
mov
pop
dec
sar
mov
cmpl
mov
int3
push
mov
lods
shlb
pop
ja
jae
mov
push
mov
popf
jo
dec
dec
cmp
and
adc
push
push
pop
movsb
and
in
xchg
loope
xchg
xor
loopne
cltd
sub
inc
xchg
pop
clc
dec
mov
xorl
adc
cwtl
push
ljmp
mov
fcmovb
ret
xchg
lahf
add
xchg
adc
out
or
mov
or
leave
sbb
or
mov
pmaxsw
pushf
neg
jb
test
jle
jg
mov
scas
cmpsb
xor
mov
lret
movd
jo
adcb
cmp
cli
add
push
jb
sbb
mov
cmp
cwtl
nop
sbb
or
jne
sub
xchg
jg
or
lahf
iret
inc
popa
cmc
and
cmp
lret
jp
adc
adc
sbb
xlat
mov
dec
pop
int3
xor
mov
repnz
pop
out
mov
sub
dec
cmp
pop
in
in
jmp
lahf
add
les
sub
jp
stos
ja
mov
jmp
les
incl
lods
loop
nop
mov
jle
fstpt
test
jae
in
dec
cltd
fimuls
cmp
mov
pusha
xchg
fmul
push
mov
mov
in
cmp
or
cli
les
into
pop
pushf
fadds
cmp
mov
sbb
mov
lods
sub
push
pop
addr16
ss
daa
cmpsb
push
ss
mov
cld
das
aam
xor
mov
mov
ss
jecxz
cmpsb
push
cltd
sub
add
test
mov
push
dec
mov
call
sbb
xor
sub
sub
ja
jg
xchg
repz
dec
cmp
fdivl
dec
or
jge
mov
sti
das
inc
out
dec
mov
loope
shll
mov
pop
dec
mov
push
jb
sbb
sub
subl
xor
dec
lahf
inc
in
mov
dec
das
jne
scas
pop
ss
dec
mov
fs
sahf
je
add
and
jecxz
xchg
stos
pop
sarb
pop
inc
gs
aaa
mov
les
imul
push
stos
push
jmp
cmc
push
mov
inc
push
orb
push
dec
aaa
jnp
mov
lock
add
ljmp
movsl
xor
shrb
sub
into
pop
sub
mov
sbb
mov
or
mov
lds
pop
adc
adc
les
inc
call
mov
aam
sahf
jge
jp
cld
cmp
sub
int
xchg
insl
inc
cmp
mov
sub
ljmp
mov
maskmovq
negl
mov
xchg
test
fldt
sub
adc
xor
fs
mov
mov
sahf
daa
fldt
mov
xchg
mov
outsb
mov
push
xchg
addr16
and
jns
stos
fwait
cmp
sahf
mov
cld
sahf
ret
pop
test
iret
js
sarb
popa
pusha
stc
cmp
lret
lcall
ds
ror
xchg
pop
push
add
xor
sbb
push
scas
cmpsl
mov
stos
cmp
mov
ret
adc
leave
nop
ja
adc
leave
and
daa
gs
scas
dec
enter
movsb
dec
inc
jge
mov
decb
fisttpl
negl
xor
ret
outsl
add
pusha
pop
adc
xor
cmp
inc
imul
popf
dec
xor
dec
push
jecxz
jno
cwtl
out
dec
adcl
in
sti
or
shlb
sbb
int3
sti
iret
inc
jae
dec
mov
scas
mov
call
push
pop
shlb
sub
shlb
pop
out
mov
adc
xchg
stc
cmp
arpl
adc
inc
and
push
lret
pop
push
adc
insb
fidivl
fwait
outsl
xchg
xchg
push
pop
and
call
repnz
inc
dec
popa
pop
fisttpll
push
call
insl
mov
scas
cmp
jg
in
mov
scas
or
push
mov
dec
mov
mov
lea
xor
sbb
insl
push
xchg
mov
outsb
incl
int
shlb
out
sbb
pushf
pop
cmp
aad
das
push
pop
out
daa
adc
push
or
ss
jne
jp
xchg
xor
js
mov
cmp
dec
mov
ja
pop
subl
cwtl
popf
add
mov
xchg
pop
or
or
dec
orb
jp
test
cmpsl
sahf
lret
cmp
fiadds
lods
jnp
mov
mov
mov
das
stc
jb
test
mov
sbb
fldl
mov
add
cmpsb
lret
cli
enter
sbb
cmp
stos
hlt
xor
sbb
icebp
sub
shlb
dec
push
out
or
int3
inc
inc
push
bound
pushf
aam
cmp
out
xchg
push
lret
jb
popa
and
mov
xchg
mov
sub
jl
push
rcrl
scas
into
inc
frstor
jno
dec
subl
call
xchg
mov
pop
jg
in
jns
jge
add
and
jge
ljmp
jg
test
fimuls
or
clc
mov
or
daa
pop
push
sbb
jge
adc
and
inc
xchg
adc
shlb
inc
mov
and
pop
movsb
lods
pop
dec
ljmp
pop
and
lret
mov
decl
addb
es
inc
sub
mov
mov
lret
mov
test
jg
sbb
xlat
imul
fwait
dec
les
jo
cmp
cli
filds
rcrl
imul
push
insb
adc
and
mov
mov
outsl
idiv
gs
pushf
rcrl
xlat
jecxz
dec
dec
push
or
dec
cmp
push
cmp
mov
mov
inc
in
int
insb
fstl
aas
stos
aaa
insl
pop
popl
mov
cld
inc
mov
add
mov
mov
xchg
jo
mov
out
cmc
push
mov
inc
lret
outsb
test
or
xchg
xchg
mov
mov
lea
cmp
rolb
or
add
sarb
jp
mov
mov
fwait
mov
ret
decl
inc
imul
sar
adc
daa
add
mov
mov
cmp
sub
ret
add
jle
test
call
iret
lds
cmc
xchg
adc
ds
xor
inc
ror
add
es
popf
and
push
or
fidivrl
fimull
cli
mov
outsl
aas
divb
lock
xor
sahf
adc
les
cmpsb
arpl
pop
cmp
aaa
nop
lcall
imul
dec
popf
test
sbb
add
inc
lods
push
inc
test
cmp
push
stc
ret
add
push
cmp
mov
jno
clc
jbe
ret
sub
and
cmpsb
pop
setg
and
rcrb
mov
outsb
mov
mov
pusha
stos
and
test
jecxz
cmp
loopne
cmp
outsl
jne
cmp
aas
insl
add
adc
hlt
cmp
or
cs
dec
test
xchg
jbe
rorl
inc
pusha
pop
add
cld
iret
dec
adc
push
lret
sbb
ret
scas
push
sbb
in
stos
xchg
rcrb
xor
ret
lds
push
and
aad
cli
scas
das
hlt
xchg
lret
push
and
xchg
arpl
pop
dec
add
loop
cmpb
jo
mov
jb
mov
sbb
xchg
inc
lds
in
out
mov
sub
push
dec
mov
dec
inc
bound
ja
pop
add
dec
int
sub
xchg
out
fnsave
sbbb
sbb
sbb
rcrb
in
mov
inc
movsb
xchg
xor
rcrb
dec
les
nop
sub
icebp
mov
cmp
pop
add
sbb
in
sub
cmpl
mov
in
mov
bound
and
mov
lret
ljmp
cmp
and
push
inc
jl
test
ljmp
push
pop
fwait
or
fnstcw
mov
icebp
and
not
sub
sbb
jmp
add
xorb
or
cmpsb
jp
cmpsl
xchg
sub
or
jnp
push
pushf
or
push
fisubs
fcoms
jg
addl
lret
int3
xchg
ret
in
cwtl
stos
movsb
std
jb
mov
xchg
insb
mov
mov
inc
adc
or
adc
xlat
gs
lock
std
inc
xor
pop
mov
lods
test
addr16
mov
ficomps
je
jno
xlat
adc
push
fwait
andl
pop
outsl
sub
aaa
mov
loop
mov
lds
lds
xor
mov
inc
in
inc
orl
addr16
stc
add
ror
aaa
jp
jbe
test
push
sbb
mov
out
mov
dec
pop
pusha
loop
lea
sti
inc
add
stc
out
lds
in
mov
movsb
sbb
and
xchg
icebp
in
mov
es
push
mov
mov
mov
stos
in
pop
mov
jmp
adc
cli
mov
clc
jl
mov
test
mov
int
adc
sub
pop
pop
adc
push
lods
jmp
push
adc
xchg
lds
sbb
bound
imul
fwait
adc
roll
es
shrl
push
jmp
enter
clc
mov
inc
xor
movsb
push
add
fsubs
jl
or
sub
lock
mov
std
mov
mov
mov
inc
fldcw
lcall
pop
pusha
mov
loope
daa
pop
outsb
sbb
rorl
shlb
int
xlat
fs
bound
rcrl
add
pop
lods
loopne
pop
or
jecxz
sub
insl
out
sub
xor
cli
push
xchg
add
lahf
dec
sbb
jle
lahf
cmp
push
jmp
or
sahf
mov
jbe
jb
pop
jl
xor
cld
pop
cmp
cld
insl
cli
or
test
jmp
icebp
ret
lret
pop
add
xchg
das
jg
inc
fstpl
fstpl
sbbb
sub
cld
mov
sub
fsts
std
sti
xchg
mov
jp
push
pop
mov
xchg
adc
data16
gs
rcrb
out
add
xorb
push
enter
inc
fisttps
les
mov
dec
pop
and
dec
mov
imul
div
pusha
femms
fwait
adc
mov
daa
dec
ljmp
cs
jno
mov
test
pop
sbb
call
icebp
cs
cld
add
xchg
out
pop
or
scas
cmpsl
icebp
int3
cmp
in
fidivrl
pop
mov
outsl
int3
fisubrs
dec
and
imul
fmul
out
bound
addr16
or
sub
fdivrp
roll
jne
lods
andb
fadds
ja
dec
mov
ret
insl
idiv
in
outsb
dec
sub
mov
push
or
mov
repz
sub
push
popa
fcom
pop
pop
addr16
fstl
xchg
jge
push
repnz
or
sub
bound
dec
sub
mov
sbb
mov
lret
jg
shl
push
cwtl
je
cmp
stos
call
fistps
mov
and
xlat
stos
insl
clc
test
stos
pop
push
test
mov
adc
aad
mov
scas
xor
jg
mov
scas
ret
xchg
in
mov
loop
hlt
fadds
jle
ja
daa
mov
imul
mov
loopne
imulb
adc
insl
std
lock
test
push
mov
lahf
sub
popa
outsb
mov
cmp
xchg
fimull
inc
adc
outsb
shlb
jge
cmpsw
outsb
js
pop
sub
cwtl
or
mov
das
dec
loope
bndstx
sbb
mov
decl
dec
jne
cwtl
insb
pusha
sub
mov
test
jne
xor
sarl
cmp
push
movsb
inc
or
jg
add
out
into
pop
aam
push
iret
pop
fdivrp
jl
jne
xchg
les
sub
ss
repz
popa
aaa
pop
cltd
lods
jo
sahf
bound
push
jbe
push
int3
movsl
movsl
imul
movsb
lock
inc
inc
inc
lods
inc
push
jnp
sub
dec
fmull
pop
or
lock
sbb
aaa
sbb
call
mov
sub
mov
insb
xor
insb
mov
or
popf
cltd
add
xor
and
das
push
push
or
push
jecxz
clc
ja
cmp
xor
xor
fsubr
pop
mov
dec
cmpb
mov
jbe
nop
lcall
and
cli
fninit
inc
xchg
stc
pop
in
movsl
or
test
or
out
or
into
or
push
iret
jmp
mov
sub
into
sbb
ljmp
mov
es
jnp
sub
std
cmp
mov
xor
adc
pop
cs
jno
cmp
mov
ret
jle
lret
repz
or
sbb
mov
sbbl
popl
cwtl
add
ror
mov
ret
sub
inc
sti
jge
cs
into
xor
inc
push
pop
ret
loopne
es
or
xor
mov
jae
data16
mov
clc
dec
xor
mov
mov
inc
or
xor
hlt
adcl
sbb
movsb
add
inc
lock
mov
outsb
test
pushf
subb
and
xchg
fs
dec
sub
mov
sub
pop
jne
pop
mov
inc
xor
out
xchg
mov
test
in
cmpsb
mov
push
sub
movsl
mov
mov
add
jecxz
movsl
fiaddl
cwtl
dec
adc
cmpsl
mov
arpl
jl
push
fwait
jo
sarl
or
mov
xor
pop
mov
sub
fildl
ficompl
sub
mull
sub
int3
sub
sub
and
stc
stc
mov
enter
xor
dec
jbe
inc
inc
dec
adc
aas
dec
stc
dec
shrb
add
and
jno
andl
xor
leave
mov
cmp
fisttpl
call
dec
sub
in
push
movsl
in
cs
rcll
and
das
mov
add
inc
xor
je
xchg
mov
xchg
lea
xchg
dec
mov
out
jmp
jp,pt
inc
roll
lcall
push
jmp
pop
lea
adc
movntq
out
push
sub
dec
fldt
mov
mov
sti
mov
sbb
into
nop
les
aad
loope
test
in
ret
lret
sar
mov
jb
bound
jg
or
dec
and
mov
mov
sarb
pop
dec
aas
adc
mov
mov
sar
adc
imul
cwtl
adc
dec
pop
and
mov
pop
xchg
inc
out
push
xchg
ja,pt
and
inc
mov
pusha
jge
xchg
xchg
ret
dec
pop
in
mov
adc
idivb
mov
leave
inc
je
lods
dec
sbb
outsb
ds
bound
mov
addr16
orl
mov
ss
lret
cwtl
dec
pop
cmp
pop
in
jg
xchg
adc
add
fldcw
fcoms
test
pop
out
dec
mov
mov
xchg
in
movsl
sbb
xor
jnp
mov
je
inc
mov
std
mov
hlt
jno
aas
in
push
or
out
or
loopne
stos
gs
arpl
mov
ljmp
sub
xchg
push
pop
lea
insb
mov
nop
or
add
jbe
or
xor
pop
xchg
inc
adc
scas
jno
jmp
adc
movsl
sbb
inc
rcr
xor
sub
jmp
lret
xorl
lahf
rcrb
push
test
insb
inc
dec
adc
pop
mov
mov
and
and
movsl
sub
jae
sub
inc
pextrw
or
insl
and
adc
test
int
xchg
jbe
aam
test
imull
cmp
hlt
pop
push
shl
mov
iret
scas
aam
xchg
lods
ds
push
jo
scas
cld
nop
xor
jnp
popa
out
sarl
test
or
pop
add
xchg
stc
sarl
push
pop
insb
jp
mov
mov
cld
xlat
mov
fidivrl
mov
cmc
cmp
dec
push
mov
mov
xor
sahf
mov
pushf
mov
sub
adc
cwtl
stc
mov
sbb
xchg
popf
std
and
xchg
lock
pushf
fs
sub
arpl
and
cmp
mov
push
add
scas
pop
in
test
in
mov
or
js
insb
test
mov
mov
or
addr16
cmpsb
scas
mull
adc
inc
gs
bound
cmpsl
xor
hlt
sub
cmpl
popa
into
outsb
bound
jns
sbb
cmp
adc
pop
and
push
push
push
test
clc
int
aas
jl
std
sub
test
xchg
push
in
lret
test
or
adc
lods
sti
mov
fldenvs
outsl
inc
mov
sub
inc
mov
mov
inc
push
ret
pop
clc
sbb
das
dec
sub
or
jp
jl
rol
jae
aam
in
xchg
push
and
or
mov
inc
inc
and
mov
xchg
push
push
dec
push
fsubrl
inc
push
int3
push
mov
push
adc
pop
dec
cli
pop
movsl
adc
mov
pop
adc
sti
imul
mov
inc
cwtl
ja
pop
cmp
popf
shll
bound
sub
aad
mov
sbb
insl
mov
sbb
dec
xor
sbb
es
mov
mov
out
xor
pop
mov
rorl
int
cwtl
repnz
sub
push
repz
aas
jbe
adcl
adc
hlt
mov
les
xchg
mov
rcll
dec
fwait
cld
inc
and
sub
sahf
adc
xorb
lret
xchg
adc
call
add
mov
leave
cmp
dec
cmp
shlb
mov
scas
jae
lahf
rolb
lret
pop
lock
stos
and
in
mov
mov
rorl
push
shll
sbb
pop
xor
icebp
pop
addr16
add
addr16
jno
in
fimuls
push
sub
lds
fs
add
inc
mov
cld
fwait
pop
in
jl
sarl
mov
das
test
cmp
mov
arpl
roll
hlt
les
push
stc
mov
aam
pop
loope
movl
sbb
sbb
into
add
fisubs
sub
mov
or
pop
pop
inc
lret
daa
sub
outsb
mov
int
jno
mov
cmp
mov
adc
pop
sbb
mov
or
andb
jns
and
jae
or
jecxz
insb
cld
arpl
outsl
push
adc
cmc
xor
push
push
xlat
push
aam
pusha
push
dec
adc
jns
out
pushf
dec
fisttpll
loop
call
aam
mov
cmp
sbb
sbb
xlat
outsb
jecxz
cmovbe
aas
lcall
addr16
jae
dec
mov
mov
divb
popa
lods
xchg
es
les
fs
ss
out
cltd
lds
sub
sub
mov
cs
push
jnp
mov
pop
mov
adc
ljmp
cld
cmp
dec
and
push
inc
in
inc
stos
sbb
push
test
loope
mov
cmp
push
stos
add
push
add
xor
dec
sub
mov
test
iret
xchg
enter
jno
loopne
loope
add
xor
xchg
lcall
push
push
inc
bound
push
xor
sbb
rcl
lods
and
cmp
int
add
out
or
out
jmp
ja
mov
stos
addr16
imul
loop
push
das
jne
filds
mov
xor
inc
pop
adc
mov
sub
insl
adcb
mov
jp
pushf
cld
dec
pop
and
imul
pop
sub
aam
or
inc
lods
arpl
pop
push
aam
add
xor
dec
dec
test
stos
ret
push
and
jge
push
mov
inc
rcl
mov
add
pop
xchg
pop
dec
pop
fidivrl
jmp
push
nop
or
push
inc
jecxz
and
mov
fcoml
sarb
out
mov
and
and
inc
fsubrs
je
jns
xor
arpl
push
rcll
andb
add
and
jo
lcall
xor
xchg
ss
xor
imul
mov
or
dec
movsb
lods
adc
dec
push
int
mov
pop
daa
je
xchg
or
jae
andl
and
pop
stos
movsb
inc
xor
push
rorl
xchg
push
mov
jmp
inc
or
jae
and
inc
mov
add
pop
push
inc
sbb
int
and
jecxz
lret
ret
push
shlb
jl
call
ds
jle
je
test
loop
mov
jnp
jmp
cmp
subl
test
push
inc
mov
fs
push
sub
cli
es
mov
xchg
add
sbbb
ret
pop
out
lock
and
and
stc
in
bound
shll
jno
xchg
sub
mov
mov
pop
add
and
popf
xlat
cmp
in
fidivrs
clc
inc
and
push
insb
push
or
or
pop
pusha
xor
fiadds
push
shr
lock
loope
mov
dec
adc
lcall
or
pushf
jns
and
xchg
inc
xchg
insb
xchg
and
imul
lahf
in
jge
std
dec
ja
arpl
push
aad
xor
mov
in
sbb
sbb
jne
shlb
loop
shrl
jp
add
jp
je
adc
jns
pusha
mov
mov
inc
pop
and
and
stos
jge
lcall
cli
push
cld
cmp
loope
clc
xchg
shl
push
xor
es
adc
incl
mov
rorb
mov
lcall
leave
jl
popa
out
pop
inc
out
add
icebp
add
pop
fnstcw
or
repnz
inc
insb
rolb
add
es
sub
inc
int
in
repnz
in
test
in
jg
xorl
icebp
mov
pusha
mov
mov
outsb
scas
call
and
and
insb
lods
or
lahf
daa
adc
push
xchg
mov
mov
stos
ret
fimuls
out
inc
mov
cli
push
pop
test
call
mov
push
xchg
jbe
lea
mov
push
pop
stc
jmp
subl
add
ds
inc
mov
and
jmp
jns
out
stos
scas
jbe
neg
mov
leave
or
push
cmpsb
loop
and
mov
cmpsb
icebp
repnz
and
mov
and
mov
lods
xor
pop
jg
sbb
inc
mov
add
sarb
xor
dec
shll
andl
lods
lods
repnz
out
es
adc
pushf
fadd
jae
loope
jo
int3
stos
scas
xor
cmp
cs
pop
push
mov
aaa
aam
movsl
test
xchg
or
mov
dec
adc
pop
bound
es
jns
movsl
pop
fsubs
rolb
loope
xchg
out
xor
xchg
and
mov
out
fmuls
orl
xor
xor
cltd
xor
pop
pusha
loope,pt
xchg
std
mov
add
divl
ja
int
arpl
adc
mov
rclb
les
add
aas
inc
adc
repz
add
mov
sub
push
movsb
sbb
ja
mov
dec
jl
out
xor
push
sub
out
ret
rcr
ja
scas
ret
enter
lds
out
jo
lock
or
pop
popf
ljmp
inc
mov
mov
cld
adc
cmc
mov
ss
push
xchg
scas
xor
rclb
dec
jmp
subl
push
xchg
nop
out
out
mov
notl
adc
lcall
jle
mov
lret
pop
xchg
cmc
lcall
sub
xor
pop
sub
sbb
sub
push
xchg
cltd
insl
test
insb
daa
push
iret
repz
mov
mov
pop
cmp
cmp
ret
inc
jl
adc
aam
xor
mov
mov
cwtl
jo
js
movsb
cmp
rcr
or
push
fsubr
into
pop
push
test
mov
push
lds
xchg
sbb
mov
pop
test
fstpl
stos
sarl
lds
xor
inc
or
jnp
mov
adc
lret
in
subb
idivb
ret
xchg
mov
rclb
sub
mov
sbb
push
fsubrp
sbb
ds
mov
std
mov
dec
jo,pt
mov
lret
loope
mov
paddsw
movsl
dec
nop
loope
and
fldcw
fwait
pusha
jb
mov
adc
xlat
pop
and
mov
addr16
mov
pop
inc
push
push
cwtl
mov
and
fwait
ja
xor
and
and
and
test
ljmp
mov
jmp
fmul
sti
mull
mov
addr16
mov
icebp
stc
mov
sti
mov
mov
jnp
mov
pop
cmc
push
mov
dec
mov
cld
xchg
ja
xchg
pop
aas
movl
inc
mov
add
aam
inc
and
pop
ljmp
imul
xor
cmc
sbb
sub
dec
arpl
inc
int3
and
sbb
stos
popa
xacquire
aas
scas
add
or
jp
mov
adc
add
rolb
and
test
cmpl
push
mov
std
cmpxchg
loope
mov
jmp
sbb
lahf
mov
push
out
pop
mov
in
shrl
jl
sbb
cmc
jmp
pop
out
or
test
xchg
dec
js
mov
in
je
mov
dec
push
loopne
out
push
and
imul
mov
filds
cmp
pop
in
stc
pop
push
dec
sbb
fwait
ret
sub
das
xchg
xor
test
mov
mov
cli
mov
fdivp
cmp
movsl
push
mov
jle
call
stos
scas
aas
xchg
sbb
lcall
pop
scas
sub
push
sub
push
pushf
add
xor
sub
jl
xor
into
sub
out
jmp
enter
leave
fnstenv
push
clc
push
xchg
repnz
mov
popa
in
jmp
adc
daa
inc
addr16
cmp
loope
lea
test
and
ud1
push
jne
or
add
cltd
push
sbb
mov
dec
jge
pop
mov
push
mov
xchg
ljmp
pop
test
inc
push
xchg
jne
jp
mov
cli
imul
pusha
mov
jmp
push
mov
test
push
dec
lods
or
jmp
fsubs
cld
mov
mov
adc
out
mov
mov
inc
mov
jnp
mov
xchg
push
sti
aaa
jne
and
jnp
clc
mov
sbb
adc
sub
loop
aas
insl
sarb
movsl
lods
daa
jne
mov
xchg
lar
pop
or
pop
pop
jb
aam
or
mov
push
sahf
mov
cmpsl
shrb
aaa
js
imul
xchg
fs
sti
shlb
add
and
ljmp
das
sub
xchg
clc
fwait
and
or
dec
shrl
filds
cmp
gs
mov
in
idivb
cmp
xchg
in
lahf
dec
pushf
sahf
sbb
mov
pop
out
sbbl
sub
sub
stc
push
popa
add
add
stos
stos
test
xor
push
dec
jecxz
lods
shll
repz
cmp
pop
xchg
cmp
out
xchg
clc
pop
outsl
movsl
lcall
sbbb
pop
lret
add
sub
jo
shlb
in
push
out
aaa
pop
xor
cmpsb
and
adc
cmp
cmpsb
loop
push
inc
lods
lret
ret
das
jae
mov
cmp
testl
push
pusha
add
imul
mov
mov
sbb
xor
aaa
pop
outsl
mov
cmc
cld
scas
rcr
jecxz
mov
push
pusha
enter
fildll
nop
outsb
mov
cmpsb
xor
sub
stos
or
fdivrl
inc
xor
in
sbb
rcll
mov
rclb
stc
subl
test
jnp
inc
xchg
cmpsl
inc
or
add
inc
loope
sub
fildl
inc
aas
sbb
call
inc
jecxz
jge
mov
cwtl
mov
mov
xchg
mov
test
xor
stos
inc
dec
sub
dec
dec
or
pop
xchg
cmp
inc
push
divl
mov
popa
mov
int3
jae
xchg
stc
xchg
or
gs
inc
sti
cmc
addb
aad
or
mov
mov
fstpt
lahf
push
cmp
shll
cli
push
sub
fdivrs
pop
jecxz
das
inc
mov
test
sbb
sbb
cwtl
fsubrs
pop
mov
lret
sub
addl
data16
fsts
mov
lds
jnp
sub
cmp
or
jecxz
xorb
loope
jge
add
adc
pop
and
sarb
mov
mov
cmpsl
repz
jo
xchg
xchg
jl
jle
lods
cmp
inc
movq
out
xor
mov
jl
roll
pop
stc
sbb
dec
jle
lds
push
push
jecxz
push
sbb
mov
lock
scas
inc
pushf
popf
loopne
mov
or
cwtl
inc
inc
pop
cmp
inc
mov
cmp
mov
movsl
leave
fwait
jg
mov
push
fdivrl
dec
repz
aam
pop
dec
outsb
jle
ljmp
ljmp
inc
and
jge
adc
in
rolb
das
push
push
xlat
movsb
mov
jae
ljmp
push
xor
int3
inc
loopne
mov
pop
test
aam
add
fstl
scas
out
sti
out
add
pop
test
xor
adc
jl
iret
push
xlat
cmpsb
rcll
add
mov
out
into
pop
pop
mov
lcall
out
push
xchg
daa
repz
stos
adc
outsl
cmp
cmp
and
and
add
add
sbb
or
adc
push
cmp
add
loopne
add
add
sarb
cmp
cmp
cmp
cmp
