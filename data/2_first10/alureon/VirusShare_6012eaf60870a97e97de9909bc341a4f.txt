push
mov
sub
cmp
add
push
push
xor
push
mov
call
lea
push
push
mov
call
pushl
mov
call
mov
xor
push
add
pop
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
jne
testl
jne
push
mov
call
pop
mov
jmp
cmp
jne
push
mov
mov
mov
sub
add
mov
lods
xor
stos
add
sub
sub
add
add
ror
add
jne
push
push
push
mov
call
pop
test
je
idivb
push
lea
push
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
xor
lea
test
jmp
cmp
je
push
push
push
push
call
push
mov
call
xor
pop
pop
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
mov
sub
add
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
mov
test
jns
and
sub
cmp
jae
mov
jmp
andl
cmpl
jbe
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
push
add
pop
dec
jne
pop
mov
ret
xor
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
push
push
push
mov
call
mov
jmp
push
push
xor
call
jmp
movzwl
imul
add
inc
cmpb
jne
test
jns
sub
add
and
or
mov
pop
ret
push
mov
add
sub
mov
add
mov
push
xor
mov
cmp
je
add
add
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
push
add
pop
mov
test
jne
jmp
lea
push
mov
call
push
call
lea
push
push
push
pushl
call
mov
mov
mov
add
add
cmpl
jne
pop
pop
leave
ret
push
lea
add
sub
push
push
push
xor
push
mov
call
test
jne
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
call
mov
push
lea
push
push
pushl
mov
call
cmp
je
in
push
push
mov
call
cmp
je
cmpl
jne
lea
push
call
pushl
mov
pushl
mov
mov
call
mov
sub
movb
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
sub
test
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
push
mov
call
push
call
lea
push
push
push
push
call
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
test
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
cmpl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jne
lea
push
mov
call
mov
andl
mov
sub
cmpl
jbe
lea
mov
mov
mov
addl
subl
add
add
incl
mov
cmp
jb
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
subl
cmp
addl
push
mov
pop
rep
mov
add
add
sub
mov
movzwl
inc
cmp
jb
pushl
mov
pushl
pushl
pushl
call
jmp
pushl
mov
pushl
push
push
call
xor
pop
pop
pop
add
add
leave
ret
push
mov
cmpl
jb
push
push
push
mov
mov
mov
sub
sub
mov
lods
xor
stos
sub
sub
add
sub
add
ror
lea
test
jne
pop
pop
pop
pop
ret
push
mov
sub
add
push
push
mov
mov
mov
mov
mov
andl
push
xor
xor
add
call
test
je
push
lea
push
push
mov
call
add
add
jmp
mov
shr
xor
ror
movzbl
mov
mov
shr
movzwl
mov
xor
add
sub
add
push
mov
lea
pop
mov
mov
mov
call
mov
mov
mov
mov
sub
add
mov
lods
xor
stos
sub
add
sub
sub
add
ror
lea
test
jne
mov
mov
sub
add
mov
mov
mov
imul
neg
add
add
mov
mov
mov
mov
add
mov
imul
add
add
add
and
add
movl
mov
mov
lea
mov
call
mov
add
mov
xor
add
decl
mov
jne
addl
addl
pop
pop
pop
leave
ret
push
mov
sub
sub
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
push
movb
call
mov
mov
mov
movzbl
imul
xor
push
add
pop
decl
jne
push
push
push
mov
call
mov
mov
cmp
jne
movzbl
push
push
push
call
pushl
push
push
call
xor
inc
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
sub
ret
push
mov
sub
add
push
mov
mov
add
mov
test
jne
lea
test
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
add
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
push
pushf
rdtsc
pop
imul
add
mov
and
ror
xor
pop
pop
ret
lock
add
xor
add
cmpsb
cmp
pop
movsl
and
inc
xor
stos
or
daa
fwait
jns
xchg
loopne
out
sbb
imul
cmpsb
mov
cmp
sub
imul
ret
mov
mov
pop
and
or
arpl
push
xchg
mov
outsl
inc
mov
sbb
jnp
mov
push
pop
mov
pop
or
push
pop
cmp
dec
cs
clc
dec
mov
push
xchg
pop
scas
lods
stos
add
leave
cmpsb
scas
bound
into
pop
bound
jno
dec
lds
ret
mov
lcall
xorb
and
xorb
cmpsl
lods
adc
outsl
rorl
jno
and
jbe
test
cmp
mov
mov
fwait
loope
les
das
test
call
nop
insl
adc
add
add
cwtl
sti
mov
ficoms
cmp
jnp
sub
jl
mov
add
enter
cmp
dec
pop
push
lret
push
pop
inc
dec
mov
pusha
cs
xor
cli
mov
ljmp
das
cmc
cltd
add
and
sbb
mov
xor
outsl
loop
xchg
and
lcall
ja
stc
sub
loopne
pop
jle
inc
xchg
pop
in
bound
xor
ret
push
add
loope
mov
rcrl
test
jo
cwtl
clc
push
mov
jle
loop
das
mov
jmp
adc
popa
cmpsl
adc
rorl
jae
stos
pcmpgtd
xor
or
lock
shr
mov
mov
push
or
pop
inc
mov
es
lock
sub
mov
xchg
repnz
int
add
sbb
push
xchg
inc
into
push
mov
loopne
stos
rorb
push
bound
and
jae
cmp
push
rclb
loope
sbb
mov
xor
cmp
and
mov
mov
stos
fwait
pop
fimuls
cld
adc
push
cmp
mov
pop
lods
repnz
dec
data16
xchg
lret
fldenv
outsb
mov
inc
lods
sub
inc
adc
and
push
cmc
add
out
incb
icebp
adc
lods
fidivl
push
inc
cmc
daa
stc
dec
es
xchg
imulb
fs
lcall
fisttpl
rorl
movsb
sub
jecxz
loop
xor
lds
ds
mov
lcall
neg
inc
inc
push
out
pop
ja
iret
pop
test
insb
ret
dec
fsubr
or
pop
out
jbe
and
push
push
ja
pop
lret
ja
jbe
jg
repz
or
adc
into
mov
push
cs
jne
or
jo
lret
aam
mov
push
fwait
mov
xor
mov
inc
mov
mov
icebp
pop
jl
adc
je
pop
stos
sbbl
xor
sti
in
mov
cli
xlat
in
push
cwtl
stc
ret
xorb
nop
inc
in
lcall
cmp
jnp
mov
cmpsl
in
test
sar
sub
out
jl
lock
xchg
sti
frstor
mov
ret
enter
out
xchg
repz
xor
mov
int
andb
inc
loopne
and
sub
cmp
test
lock
aad
xor
push
pop
adc
xor
or
loope
sahf
fidivrs
ljmp
push
out
xchg
loope
lds
and
sub
mov
in
add
cs
lds
orl
push
push
iret
jbe
or
popaw
cmp
aaa
aam
mov
sbb
mov
hlt
mov
hlt
fs
scas
fsub
pop
ret
xchg
insb
push
scas
cs
and
jle
xchg
arpl
and
outsb
fsubs
cmp
mov
ss
rolb
call
sbb
sarb
cltd
sub
xchg
push
in
mov
les
loopne
sub
jp
or
int3
movsl
clc
and
fwait
insb
mov
xchg
push
cmp
pusha
repz
inc
and
ja
negb
mov
nop
jecxz
xor
cmpsb
adc
mov
add
into
mov
sub
pusha
push
push
pop
pop
je
fisttps
adc
sub
enter
xor
sarl
ljmp
rol
pop
les
pop
push
push
inc
mov
cmpsb
cld
gs
popa
cmp
adc
xchg
and
and
out
out
in
mov
ja
dec
push
lea
inc
imul
fidivl
mov
pop
ficoml
mov
adc
bound
insl
in
pop
sbb
cmp
jnp
scas
cmpsb
les
dec
imul
cli
pop
pushf
imul
inc
lock
int3
out
imul
cld
out
push
fwait
pop
xchg
jl
cltd
adc
jl
mov
in
sbb
add
ret
cli
inc
mov
sahf
fiaddl
sub
js
and
inc
iret
cmpsb
hlt
mov
out
push
lret
pushf
push
push
mov
popf
mov
mov
push
mov
out
jb
dec
pop
popa
gs
js
ds
push
aaa
aam
mov
xchg
repnz
mov
jno
leave
mov
js
popl
sbb
push
push
ret
out
roll
xchg
imul
sbb
ficompl
jnp
and
insb
xor
sbb
movsb
movsb
int3
mov
jno
cmp
jno
xlat
cmp
push
jne
mov
sti
inc
fistl
jmp
ret
xor
cmp
push
xchg
xor
insl
or
mov
push
fists
clc
push
rclb
xchg
scas
sbb
lret
xor
es
sub
fwait
sahf
and
inc
pop
sbb
lret
insl
out
pop
inc
lahf
mov
sub
dec
aaa
sbb
sub
push
and
cwtl
aad
ss
mov
outsb
sar
mov
cmp
adc
push
cmp
addb
in
daa
enter
lret
leave
inc
loope
jecxz
int
mov
mov
push
cltd
mov
xchg
xor
push
pop
insb
aad
movsl
ret
sub
sub
and
movsl
pop
pop
out
ds
mov
mov
or
jle
xchg
sarb
aaa
fs
dec
sub
out
das
inc
popf
les
or
js
repz
dec
dec
fwait
xor
add
jb
sbb
add
lret
addw
movl
inc
test
sahf
jle
out
mov
rol
xchg
daa
xor
test
lret
inc
sbb
xchg
imul
pushf
outsl
fcmovnu
flds
rorb
or
cld
dec
out
add
outsb
negb
jae
gs
push
and
xchg
fsubrl
xchg
arpl
mov
sahf
lods
aas
cmpsb
push
lock
into
mov
fwait
and
dec
iret
mov
jp
xchg
pop
lea
push
add
aaa
aas
rcrb
decb
jbe
sbb
rol
loop
shrl
pushf
push
mov
mov
jg,pt
pop
int
aam
mov
jb
cltd
jae
iret
or
nop
aad
push
adc
arpl
jp
stos
lcall
in
enter
mulb
outsb
mov
xor
aad
in
repz
add
fcoms
jns
pop
test
xchg
or
lahf
movsb
jnp
out
das
xchg
sbb
push
sub
out
push
dec
cmp
push
push
in
stc
pushl
jge
es
or
lods
pop
xchg
mov
mov
mov
pop
jp
dec
leavew
inc
jmp
xor
loopne
data16
test
jge
sbb
wbinvd
mov
in
test
popa
inc
jecxz
xchg
fimull
cmp
ret
inc
xor
mov
fistl
push
lods
repnz
lret
pop
dec
xor
mov
push
cmp
repnz
cld
sub
je
push
adc
adc
setle
xor
push
scas
fldcw
je
or
je
and
jmp
mov
pop
cmp
jl
inc
iret
or
jecxz
cmp
pop
mov
xchg
inc
jecxz
aam
xchg
imul
adc
dec
pop
xchg
ds
loopne
stc
add
pop
jb
cmp
mov
jp
stos
lcall
sbb
loope
and
addr16
js,pn
inc
mov
ljmp
xchg
and
sbb
subl
mov
popa
test
cmp
mov
xor
adc
ret
out
dec
ret
push
jp
outsl
out
cltd
lock
gs
xlat
jb
xorb
clc
mov
fdivp
pop
mov
xor
or
pop
ljmp
cld
in
lds
call
rclb
call
cmp
sub
cmpsb
inc
jecxz
loope
mov
addr16
pop
ret
inc
jb
ficompl
xchg
in
cmp
mov
add
mov
movsb
or
lret
mov
notl
push
mov
hlt
std
aad
in
fistpll
shlb
adc
loop
loop
pop
mov
pop
mov
inc
sar
push
movsb
subl
out
pop
test
ret
in
fs
xor
xchg
pop
movsl
enter
ja
or
add
pop
xor
gs
pop
data16
xorb
mov
sbb
aad
or
fimull
jae
mov
sahf
fisttpl
cmp
js
xchg
jecxz
mov
scas
xchg
cltd
fmull
push
or
push
es
sub
out
mov
sbb
sti
push
mov
movzwl
jle
stos
mov
mov
out
xor
or
hlt
or
ss
push
mov
xchg
jle
push
mov
lcall
stc
je
cmp
or
xchg
sbbl
push
and
data16
adcl
jae
repnz
loope
jo
aas
mov
inc
stc
imul
and
push
inc
adc
mov
fmull
enter
jb
and
scas
dec
ds
sbb
movsb
fbld
in
add
aas
into
je
loopne
ja
fists
pop
shlb
mov
outsl
inc
jg
mov
mov
cmp
rclb
xchg
xchg
inc
xchg
scas
pusha
cltd
out
mov
out
or
inc
subl
jns
sarl
fbstp
add
sarl
movsb
jle
push
aas
mov
cmc
and
bound
outsb
and
or
out
std
mov
aad
iret
push
jmp
andb
pushf
gs
add
lods
mov
movsb
rcrb
mov
jae
popf
cld
pop
mov
shrl
or
rcrl
mov
mov
mov
shrl
jno
cmp
mov
outsl
sub
pop
fmulp
fisubrs
and
inc
dec
xchg
dec
ljmp
lea
mov
push
pop
mov
pop
pop
test
arpl
cltd
add
ljmp
sub
dec
cld
mov
ljmp
je
ja
dec
int3
enter
loope
mov
scas
add
push
nop
je
mov
cwtl
dec
std
popf
ds
clc
out
out
cmp
sub
rcll
mov
cmp
subb
or
jmp
add
mov
jl
pushf
mov
pop
or
out
outsl
push
lret
movsl
daa
xor
mov
sbb
xlat
sbb
das
test
scas
shll
loop
jo
pop
push
ss
mov
mov
test
bound
mov
inc
fwait
push
into
ljmp
mov
mov
inc
xlat
insb
cmp
xchg
and
or
xchg
sub
fiadds
daa
xchg
cwtl
or
jno
mov
or
mov
cmc
int3
mov
stos
in
imul
fucomi
outsl
push
inc
mov
xchg
mov
insl
mov
push
adc
mov
outsb
jne
fs
sahf
cmp
cmp
add
cli
push
cmp
arpl
inc
in
std
mov
loop
xchg
mov
iret
xchg
stos
add
icebp
lods
lock
lods
mov
jns
mov
xchg
pop
ja
push
lods
insb
in
or
jb
out
sub
roll
test
push
sbb
stc
shlb
ja
mov
sahf
pop
mov
arpl
aad
cmp
sarl
jo
mov
icebp
lcall
divb
sarl
loopne
sub
sbb
sbb
push
call
fucomip
sub
subb
mov
out
hlt
imul
data16
aad
push
shrb
adc
cmp
loope
cmp
mov
shll
andl
inc
mov
add
fcomps
add
hlt
adc
in
xor
sub
mov
or
mov
fidivs
mov
test
in
and
cwtl
loope
xlat
sub
dec
aad
ja
push
pop
xor
roll
jmp
pop
dec
inc
lock
jno
repz
cltd
shl
dec
insl
and
sbb
xchg
jge
jnp
and
ja
push
jb
cmpsl
sub
dec
loop
outsl
xor
pop
scas
sti
fstl
inc
sbb
adc
inc
gs
push
fistps
int
out
pop
cmp
mov
ret
insb
adc
xor
sahf
jmp
je
hlt
mov
pop
or
jp
jns
negl
stos
sub
pop
pop
jmp
das
lret
pop
lods
nop
jnp
and
hlt
mov
shll
inc
mov
or
cmp
lock
inc
dec
outsb
cld
cmp
shl
dec
cli
jp
inc
repnz
add
push
or
mov
stos
shr
xchg
test
imul
pop
mov
nop/reserved
xchg
mov
and
xchg
inc
xor
mov
push
es
mov
dec
inc
jmp
xorb
adc
into
xchg
pop
sbb
add
mov
inc
cmp
and
lds
pop
mov
out
mov
cmp
jge
and
lods
in
aaa
test
lods
nop
nop
ret
sahf
in
xor
xor
js
mov
cmc
sti
mov
sub
sub
adc
cmp
cmp
addr16
or
ret
hlt
movsl
dec
cld
lods
dec
std
pushl
enter
push
jae
outsb
aas
ja
cld
int3
push
std
pop
mov
inc
je
in
popf
outsl
pop
mov
xor
out
mov
xchg
push
pop
je
cmp
jecxz
filds
lea
fildll
lods
sti
add
sbb
cli
sti
push
testb
xor
jb
cli
push
xchg
hlt
push
inc
shr
jo
inc
add
into
addl
sub
mov
lock
inc
mov
push
adc
push
and
dec
xor
add
xlat
shll
bound
jl
lahf
in
scas
mov
aaa
pop
xor
and
cmp
inc
testl
gs
jecxz
popl
push
mov
inc
cmp
add
xchg
pop
stos
int3
lock
push
mov
test
lahf
sub
jg
rcrl
cmpsb
inc
js
jno
stos
xchg
xchg
sub
sbb
lret
fmull
push
xchg
jecxz
sbb
add
insb
rcll
clc
xchg
aaa
push
in
jg
mov
push
mov
lcall
pop
jo
sub
cmpsb
push
xor
sbb
adc
test
aaa
xchg
push
fwait
dec
nop
jno
push
lret
es
pop
insl
sar
loop
daa
add
or
sub
push
imul
push
xsavec
pop
cmpsb
es
and
loop
js
push
mov
inc
adc
jne
xchg
add
pop
shr
pop
mov
mov
sahf
cmp
divb
insl
adc
decl
arpl
lock
sub
push
imul
cmpl
sub
inc
outsb
test
in
push
xor
xchg
fs
les
add
jge
pop
and
outsb
dec
lret
out
ja
sub
enter
lods
subb
insl
pop
xor
push
inc
sub
out
cs
mov
das
movsb
arpl
xor
cmpb
loope
xor
add
lret
fistpl
sbb
scas
jge
gs
adc
pop
je
jo
repz
lret
stos
push
daa
and
adc
lock
xchg
mov
hlt
pop
and
mov
stos
insl
aad
mov
ret
stos
andb
mov
clc
xor
push
int
or
filds
xchg
inc
out
imulb
xor
add
das
mov
fiaddl
imul
adc
mov
mov
xchg
scas
shrb
shl
lahf
sub
outsb
or
xor
inc
das
in
mov
mov
incl
cmc
ret
iret
fsts
xchg
sbb
enter
xor
cmp
mov
cmp
jb
sti
mov
mov
mov
or
aam
sti
lods
xchg
js
xor
mov
lahf
cmp
icebp
mov
dec
mov
mov
shll
rcl
jno
mov
jne
jae
cmp
popa
daa
loope
and
add
loopne
test
mov
sbb
hlt
dec
shl
sub
cmp
pop
das
jne
movsl
jmp
pop
cmp
mov
cld
push
xchg
clc
jle
fdivrs
pushw
dec
jp
cli
int
shll
add
xor
cli
xor
add
pop
push
out
rol
rcl
and
push
aas
lret
push
test
fidivs
ds
mov
ret
xor
imul
fsubrl
or
test
repz
sbb
out
jge
and
pop
push
dec
cmp
stc
push
aaa
xchg
dec
je
adc
ja
ret
cmpsb
pushf
push
dec
push
push
shlb
inc
pop
pop
andb
ret
and
sar
ljmp
pop
outsl
cwtl
aam
push
cmp
std
cmp
aas
dec
mov
popa
adc
jb
repnz
jo
xchg
rcll
test
int
add
mov
mov
and
xchg
rcll
mov
and
imul
in
xor
xchg
ds
nop
icebp
cld
sarl
pop
jle
imulb
dec
sub
je
insb
cmp
dec
test
daa
es
and
fcomps
or
arpl
shrb
jne
mov
cmp
loopne
jns
arpl
sbb
mov
pop
faddl
ss
out
js
sbb
or
cmpl
mov
dec
push
test
cmp
loope
stos
xor
lods
jl
inc
cmp
negb
ret
and
cmc
and
add
in
punpckhwd
cmpsb
add
shrb
cmp
aad
mov
int
test
pop
ss
pop
add
stc
dec
push
jno
mov
lahf
mov
iret
jns
push
sti
xor
inc
pop
sub
cmp
aam
mov
sahf
add
jae
stc
mov
adc
les
push
push
es
jle
push
cmp
dec
sub
mov
xor
xor
lret
pop
aad
xor
jns
js
jge
lock
xor
insl
clc
adc
add
sti
jnp
lds
into
adc
mov
test
mov
xlat
into
imul
mov
int
jp
sbb
cmp
mov
adc
pop
mov
add
sbb
push
fisttpll
mov
add
or
ret
loope
jle
push
adc
loope
xor
lret
jl
pop
cmpb
adc
aas
cs
xor
dec
or
jne
inc
jne
loopne
sbb
mov
cs
push
cmpsl
sbb
int
push
mov
test
and
mov
mov
jp
dec
mov
out
sahf
arpl
inc
insl
sub
adc
cmp
xchg
push
adcb
jle
xor
test
xchg
out
nop
sub
ss
cmpsl
adc
inc
imul
and
and
sub
mov
iret
push
out
mov
push
mov
int
fisttps
lock
test
pusha
gs
in
movb
pop
addr16
hlt
cmp
mov
adc
or
fld
out
gs
jnp
enter
or
ret
lods
out
scas
mov
add
push
and
or
icebp
mov
xchg
or
pop
sbb
outsb
pop
fldenv
jns
cmc
add
out
into
and
adc
scas
mov
das
xchg
inc
repz
mov
test
or
fstpl
cmp
outsl
ja
fcompl
cs
int
xor
pusha
nop
jbe
jo
dec
in
push
les
lea
xchg
addr16
loope
dec
pop
outsb
push
idivb
adc
or
sbb
je
in
inc
test
jmp
lods
std
lcall
stos
pop
xchg
inc
rolb
pop
and
decl
mov
push
loope
mov
std
call
cmp
aas
cld
ret
jno
dec
icebp
push
inc
rcrb
mov
cmp
and
mov
rcll
cmp
mov
scas
mov
shlb
sbb
sub
fidivs
fnstcw
movsl
rcrb
mov
push
cmp
scas
icebp
fistl
fidivrl
adc
lret
adc
adc
or
iret
sbb
call
jmp
sbb
fcmovnu
or
sub
ljmp
testl
sar
fs
adc
cld
loope
and
cmp
cmp
into
mov
cltd
cli
repz
cmpsb
jns
sar
lock
sub
cli
fimuls
push
outsb
cmp
push
add
pop
lods
call
mov
ficoml
xor
mov
add
aam
push
cmp
sti
insl
fidivs
cmp
stc
stos
cmp
sahf
lcall
push
scas
out
sbb
fistpll
pop
or
push
mov
ret
icebp
loopne
fimuls
movsb
loop
cmp
cmp
and
xor
and
cmp
push
push
adc
sbb
fisubs
push
call
sub
add
mov
fildl
sqrtps
dec
fdivrp
movsl
mov
mov
pop
pusha
sbb
into
and
inc
movsl
push
jne
shlb
sti
jmp
cmp
ljmp
jbe
insl
mov
or
push
add
shl
mov
mov
hlt
and
sbb
loopne
int3
mov
sub
ja
loope
fcoms
and
or
mov
mov
push
test
push
adc
insl
add
ja
jmp
pop
dec
test
pushf
mov
pop
dec
lret
lods
mov
addr16
and
adc
jmp
xor
jecxz
inc
ja
xor
sub
into
out
push
sub
dec
addb
jecxz
pop
repz
or
test
add
je
inc
dec
mov
rolb
jg
jge
in
pop
jp
ljmp
loopne
add
mov
enter
sbb
fstpl
xchg
fiadds
dec
decb
xlat
and
xchg
outsb
gs
shl
inc
popf
shl
cmc
rorb
lods
iret
sbb
sub
fldcw
dec
fcoml
pop
mov
mov
sub
sbb
lret
ljmp
std
cmpsl
or
add
xor
pop
push
cmp
fnsave
mov
out
mov
call
lock
mov
and
and
movsb
xchg
ss
inc
nop
push
and
ret
jle
ss
xor
jg
cmp
adc
pop
out
popa
lea
mov
push
mov
insb
loopne
idivl
jae
aam
adc
pop
sub
cld
pop
in
adc
xchg
pop
add
adc
stc
jae
or
incl
cmp
sti
dec
fdivrs
mov
mov
enter
push
aad
adc
sbb
cmovnp
push
inc
call
fmuls
xor
fwait
adc
fcoms
push
xchg
aas
iret
inc
out
arpl
lcall
movsb
xchg
jae
js
mov
and
pop
fdivrs
mov
sahf
inc
lret
mov
scas
inc
mov
jnp
in
mov
shrb
rorl
xor
mov
insb
adc
pop
cmp
xchg
call
aam
push
pop
out
and
aaa
and
inc
inc
clc
imul
jae
insl
mov
and
xchg
sbbb
sub
cmpsb
push
mov
dec
ret
fildl
push
jno
pop
mov
ret
lahf
add
lcall
and
push
jnp
cmpsl
xchg
xor
and
mov
int3
cmc
ret
roll
jl
push
jge
aam
inc
jae
iret
nop
fldt
push
andb
mov
das
xlat
mov
pop
roll
xor
sti
pop
push
je
mov
arpl
jns
adc
mov
ret
fcmovb
lret
pusha
xchg
dec
cmp
sbb
in
out
rcll
cltd
scas
outsl
outsl
andb
movl
pop
pop
je
and
mov
aam
jle
xor
shrb
jle
hlt
mov
fstpt
sbb
mov
xor
nop
cmp
sbbb
adc
mov
push
fcmovnb
add
fbstp
fisubs
push
icebp
and
clc
add
xchg
sahf
dec
sbb
xor
xor
addr16
sbb
into
movsb
adc
xlat
popl
xchg
mov
adc
cmp
outsb
mov
xor
dec
dec
sbb
shlb
out
or
cmp
adc
push
inc
sbb
pop
jl
adc
fincstp
notb
sbb
sahf
and
xor
movsl
mov
xchg
mov
mov
idiv
xor
inc
push
std
loop
cltd
add
test
sbb
jg
shlb
pop
dec
pop
rolb
push
jecxz
or
shll
cli
idivl
mov
mov
cwtl
out
mov
jne
mov
sub
push
lods
jecxz
inc
pop
rcrl
and
popa
jne
out
inc
jae
cmpsb
shll
or
adc
outsl
jg
psubq
xchg
mov
push
ficoms
mov
lock
inc
lods
stc
out
dec
loope
xchg
aaa
cmp
cs
das
and
adc
fwait
lods
mov
leave
das
clc
lods
test
pop
sub
push
mov
out
cmp
sub
adc
ret
dec
xchg
mov
cmp
mov
stc
mov
fcompl
or
cld
stc
insl
div
adc
mov
roll
ds
inc
jle
fcmovbe
popf
inc
mov
out
or
testl
adc
jp
fidivrs
pop
shll
mov
in
rclb
dec
ss
push
ret
xor
cmp
sub
jne
insb
mov
sarb
pop
cmpsl
lods
sub
and
jno
lods
xchg
test
mov
push
sub
pop
sub
sbb
data16
out
jg
fists
in
jl
sub
lret
leave
mov
les
jmp
and
insb
mov
sahf
dec
push
je
mov
or
xlat
add
iret
incl
and
cmpb
pop
and
inc
jle
cs
shr
sub
sub
push
xorb
mov
rorb
xchg
insb
adc
xchg
bnd
and
stos
es
mov
or
arpl
sbb
jnp
scas
icebp
push
ss
xor
lds
idivl
in
into
mov
mov
inc
jl
dec
sub
push
loopne
divb
ss
lcall
jnp
cmpsb
subl
fs
mov
aaa
push
push
push
pop
shll
shll
repz
cmp
mov
ljmp
js
pop
pop
fidivl
orb
sub
fucomp
inc
stos
sbb
inc
adc
jne
gs
sub
jae
push
mov
cmp
add
jne
out
pop
add
movsl
mov
pop
inc
insl
jg
fsubl
mov
or
movsl
cmp
inc
inc
stc
out
mov
in
pop
jno
xor
dec
in
jae
test
mov
testb
sbb
outsb
push
dec
mov
mov
inc
aam
sti
inc
xchg
decb
fwait
mov
mov
aas
dec
in
inc
or
cltd
imul
cmp
popa
xchg
inc
mov
bswap
cmp
insl
cmp
inc
push
sbbb
aad
cli
stos
test
push
mov
mov
mov
fmuls
dec
xchg
jle
mov
and
sbb
outsl
int
or
or
loop
pop
lock
adc
out
pop
sti
lret
ss
aad
out
cmc
sti
iret
clc
insb
mov
inc
mov
aam
fsubr
inc
fwait
inc
lods
xor
sahf
sti
mov
fcoml
push
and
scas
jbe
xorps
add
fs
adc
ret
lcall
xchg
aam
xor
or
mov
lea
shr
insl
mov
or
enter
adc
xchg
sti
scas
jno
inc
js
bound
xor
add
stos
mov
push
cltd
lds
movsb
jmp
add
mov
sbb
adc
fs
enter
jb
clc
and
push
ljmp
test
or
test
xchg
pusha
movsb
jge
jecxz
loopne
and
dec
orb
mov
ljmp
mov
sti
mov
pop
inc
xchg
aaa
mov
mov
sahf
outsb
rorl
fcomps
fsubrl
push
inc
imul
add
mov
mov
lock
dec
idiv
shrl
mov
out
cmp
test
loopne
mov
loopne
pop
aad
mov
rcr
jmp
dec
lods
push
bound
push
sub
and
call
pop
lods
es
mov
and
dec
cmpsl
jne
mov
sahf
lret
push
sub
inc
fwait
shll
and
fstp
mov
leave
jg
mov
and
in
mov
popf
and
and
pop
arpl
push
dec
and
sbb
outsb
or
out
int3
pop
lock
or
sbb
fstps
icebp
cmpsb
inc
inc
mov
cwtl
push
jg
outsb
or
mov
adc
pop
inc
call
in
std
fnsave
dec
lods
iret
cmp
push
outsb
push
mov
into
adc
push
movsl
add
cmp
jne
push
dec
jle
rcl
imul
leave
idivl
sbb
sub
fdivrl
cmp
jbe
or
cs
pop
add
imul
add
fildl
test
sti
test
mov
fidivl
in
outsl
movsb
adc
mov
and
adc
xchg
faddp
fs
mov
add
out
addl
mov
xchg
or
xorl
mov
scas
dec
test
shll
cs
clc
leave
les
mov
shll
dec
jp
lret
push
out
out
pushf
lock
repz
cmpsb
fld
xor
std
dec
adc
jno
mov
out
mov
cmp
mov
xlat
movb
lret
sbb
inc
jnp
dec
mov
in
aaa
sbb
dec
cmpsb
mov
into
aad
jecxz
pop
test
movsl
sub
pop
test
sub
add
movsl
dec
lock
jmp
push
mov
and
push
pop
and
mov
pushf
push
pop
add
and
add
cmc
int3
adc
xchg
es
in
add
sub
inc
xor
jno
and
sbb
fimull
dec
cmp
mov
mov
push
insb
orl
jg
rcll
in
inc
pop
shrb
sub
xchg
xorb
cltd
push
sahf
stc
pop
add
xchg
ja
cld
fists
jmp
rcr
jg
pushf
sbb
sarb
sahf
in
sarb
xor
and
push
fisubs
rorb
outsl
stos
xchg
ss
xchg
shll
test
outsb
arpl
or
cmp
scas
loopne
cmpsl
stos
xchg
xchg
mov
mov
fistpl
inc
xchg
mov
cmpsl
xchg
sub
cmp
cli
pop
dec
stos
insl
jns
and
shrl
scas
cli
in
clc
push
pushf
inc
lea
sti
cmp
addr16
fstpt
mov
nop
or
out
jae
outsb
test
mov
in
xor
bound
inc
xchg
adc
mov
sub
xchg
mov
or
push
into
inc
or
movsb
jl
ret
cmpsb
sbb
inc
mov
adc
test
icebp
imul
pop
dec
lret
and
or
pop
mov
push
dec
int3
aas
adc
xchg
add
test
loope
fwait
and
jb
mov
test
inc
loope
sbb
xorb
decl
int3
xor
daa
testl
bt
mov
call
int
push
sub
cmpsl
dec
scas
loope
pushf
in
mov
xchg
fildll
pop
mov
sub
popa
cmpsb
mov
sbb
sub
imul
and
mov
fists
lods
cmp
cmpsb
dec
pop
add
or
xchg
or
xchg
dec
push
mov
mov
mov
addr16
in
adc
out
sbb
pop
xchg
inc
fsubl
jae
jle
add
xor
mov
jle
jbe
dec
mov
lods
int3
lahf
cmp
add
outsl
adc
mov
mov
clc
dec
div
cwtl
pop
or
pop
in
hlt
inc
push
test
inc
jge
push
ja
mov
xchg
pushf
fistl
mov
fisubrs
mov
hlt
vmovntps
push
xchg
jne
dec
in
jmp
and
fwait
lea
and
add
sbb
jge
xchg
flds
popa
or
addr16
je
mov
mov
push
dec
dec
jmp
pop
daa
push
push
fs
and
push
cli
add
sbb
jb
data16
jbe
push
cmp
and
std
aam
iret
push
jle
dec
fcmovnb
inc
loope
out
lahf
cwtl
fbld
dec
add
jecxz
jbe
aas
jg
add
cmovbe
add
stc
shrl
jge
test
mov
add
in
dec
mov
shrl
popf
dec
das
mov
insb
push
cmp
sbb
and
arpl
cmp
cmp
push
pusha
ljmp
pop
xchg
and
insl
es
cmp
push
sub
sbb
pop
mov
push
dec
jno
imul
mov
jno
cmp
mov
imul
cwtl
adc
add
and
jmp
mov
or
and
sbb
mov
pop
push
lcall
rclb
inc
xor
pushf
jecxz
inc
jle
ja
scas
loope
push
bound
push
out
out
or
rol
lods
lret
xchg
xor
xor
in
push
dec
ret
jmp
mov
repz
add
ret
test
ds
sub
sbb
scas
cmp
mov
push
sbb
mov
mov
push
jne
inc
sbb
mov
cmpsl
cmp
mov
xchg
inc
inc
jns
lret
shrl
jbe
push
loop
mov
mov
clc
pop
movsl
jno
daa
push
cmp
sbb
sub
jge
adcl
out
scas
cmp
and
inc
add
xchg
enter
xchg
inc
push
popf
jl
bnd
lods
das
push
lea
sub
mov
xor
add
js
xchg
dec
negb
cmp
push
xchg
dec
or
aam
ds
fistpl
jg
jmp
pop
incb
pop
test
insl
lcall
stos
and
imul
fnstenv
xchg
mov
push
adc
je
out
test
and
mov
sbb
or
sub
lock
sub
es
out
in
jl
sbb
add
mov
out
push
xchg
ja
je
jl
loopne
fidivs
cli
je
pop
out
jb
or
das
mov
pop
test
xor
shl
shl
fisubs
add
lock
pusha
fimull
jne
lods
icebp
mov
loopne
sub
cli
pusha
repnz
inc
pop
fistps
hlt
adcb
repz
cmp
mov
mov
je
cli
in
cmp
xchg
out
pop
add
lret
lock
mov
stos
pushf
pop
sub
popf
add
push
test
sub
stos
mov
cmpsb
lcall
cmpsl
push
fdivrs
mov
push
pop
sbb
mov
lret
mov
cmp
cltd
add
mov
daa
repnz
dec
repnz
mov
jl
daa
sub
std
insb
inc
mov
sub
lahf
test
mov
mov
ja,pt
hlt
sub
sub
pop
pop
inc
sub
cs
add
dec
sbb
xchg
xor
push
notl
mov
ret
xchg
and
fsubrl
test
cmp
cld
cmp
rcrl
sarb
pop
adc
inc
ss
pop
cld
push
pop
stos
add
mov
rorl
dec
sbb
push
mov
adc
call
sub
push
outsb
shl
jge
lret
dec
imul
xor
mov
mov
fdivs
inc
fsubr
and
iret
and
ret
pop
mov
jmp
cmp
xor
lods
cmpsb
dec
jb
aas
into
call
xlat
inc
push
test
aaa
jle
or
push
sar
inc
push
xchg
scas
adc
adc
hlt
cmc
lods
push
ret
jno
aad
aaa
add
adcl
insl
shrl
push
jb
aam
iret
loop
lcall
cwtl
mov
pop
cmpsb
push
jp
mov
or
push
inc
negb
mul
loop
lock
push
adc
lret
adc
xor
dec
sarb
les
clc
ficompl
aaa
ffreep
adc
push
imul
mov
mov
mov
push
lods
pop
jg
ljmp
ret
and
cltd
lock
fidivs
shrl
clc
std
jne
xchg
fcmovu
pop
and
js
push
inc
ret
sbb
int3
or
clc
cmp
movsl
outsb
adc
inc
pop
out
shll
subb
je
fldt
push
mov
stos
sub
cli
sub
stc
ret
jge
sub
pop
dec
or
jne
nop
or
incb
hlt
movsl
dec
mov
int3
jne
cmp
imulb
add
sbb
pusha
xor
outsb
push
cmpsb
aad
adc
mov
cld
dec
add
mov
out
and
xor
icebp
hlt
mov
cmpsl
out
adcl
jecxz
int
sahf
dec
add
incb
inc
inc
outsl
ficomps
xchg
jo
add
xorb
loopne
addr16
sub
std
in
pop
test
mov
dec
outsb
push
mov
imul
mov
push
mov
in
cmpsl
fwait
dec
sti
dec
sbb
outsl
lds
hlt
outsl
inc
sahf
inc
dec
inc
sub
loop
sub
dec
jle
insb
sarl
arpl
mov
and
pop
movsb
adc
jg
add
jns
lret
add
lods
js
jne
pop
adc
xchg
sbb
out
push
test
inc
push
into
or
cmp
stos
xlat
or
add
hlt
mov
xchg
iret
mov
test
inc
sbb
mov
push
fstl
repnz
imul
or
insl
xchg
arpl
mov
cli
pop
pop
cmp
test
lret
jbe
inc
jge
sbb
lds
jecxz
pop
loop
arpl
inc
adc
cmc
fcmovu
add
adc
or
out
inc
pop
push
dec
nop
jmp
jnp
sub
in
or
aaa
shrb
lea
adc
mov
inc
in
sub
cmp
movsl
push
shrl
ljmp
aad
xor
pop
mov
lret
xorb
inc
mov
mov
sub
cld
pop
stc
aam
int
jg
inc
in
idivl
scas
push
inc
xor
inc
fldt
cli
add
sbb
mov
out
lret
out
cwtl
add
push
lret
sub
out
loopne
je
std
in
jg
push
or
fildl
js
adc
stos
leave
iret
bound
xor
leave
pop
es
xchg
mov
pop
xor
gs
int
push
cmp
push
arpl
fldl
push
add
push
jae
test
jp
sti
pusha
mov
xor
out
mov
popf
outsl
test
mulb
pop
js
stos
push
mov
mov
mov
dec
rcrb
jl
jge
mov
enter
and
dec
xchg
mov
cmp
outsb
lcall
inc
shlb
push
and
cmp
jle
push
pop
sbb
dec
loopne
pop
in
xor
jge
cmp
pop
loope
in
pop
jle
outsb
ret
mov
pop
fmuls
je
inc
sub
mov
and
sbb
adc
loopne
stos
mov
flds
out
pushf
cmp
mov
aad
ljmp
and
shlb
lahf
cmpsb
or
sahf
and
or
outsb
xor
data16
push
aad
and
pusha
mov
inc
fdivs
repz
mov
pop
dec
push
pop
cmpsl
inc
mov
add
icebp
fstpl
dec
es
in
inc
rorl
adc
insl
push
mov
outsb
lret
std
jae
push
mov
inc
or
aad
int3
outsl
fwait
sbb
je
mov
leave
inc
call
dec
inc
cltd
pop
sbb
mov
mov
je
mov
dec
pop
xor
jo
loopne
ja
fimull
pop
inc
or
xchg
cmpsb
inc
and
ret
stos
lret
or
cmpsl
jnp
fsubr
or
xlat
and
push
rcll
xchg
sub
ret
or
adc
inc
out
push
pop
iret
mov
lcall
into
add
sbb
ret
xor
push
fstps
pop
cmp
addr16
dec
cmc
add
testb
jmp
out
jnp
jae
test
andb
rolb
imul
add
jbe
add
je
add
bound
popa
outsb
arpl
imul
popa
bound
je
push
arpl
outsl
add
jb
jne
jo
je
imul
add
imul
add
popa
add
add
add
bound
jb
popa
add
arpl
push
popa
outsb
add
add
jb
add
gs
outsl
jne
insb
jns
add
outsl
jb
add
add
add
add
outsb
add
add
jne
outsb
add
je
imul
jae
add
add
add
add
outsb
addr16
jae
imul
bound
add
outsb
add
je
add
je
popa
je
imul
