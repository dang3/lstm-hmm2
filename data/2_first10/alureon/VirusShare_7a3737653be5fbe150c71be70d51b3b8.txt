push
mov
push
cmp
jb
push
lea
xor
movl
test
je
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
imul
xor
mov
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
push
mov
mov
mov
mov
sub
test
jne
inc
jmp
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
mov
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
mov
push
mov
mov
push
push
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
pushl
push
call
test
jl
mov
mov
push
pushl
push
call
test
jge
andl
jmp
mov
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
mov
imul
sub
push
mov
mov
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
mov
mov
ror
xor
imul
add
mov
divl
mov
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
je
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
push
push
call
mov
mov
push
pushl
xor
mov
rep
call
test
je
push
call
xor
inc
pop
pop
ret
push
mov
push
push
mov
mov
push
push
push
call
dec
jne
testl
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
pushl
call
push
call
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
call
mov
test
je
push
push
mov
lea
push
mov
push
lea
push
call
mov
push
mov
call
add
push
push
lea
push
call
pop
pop
mov
pop
pop
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
mov
mov
push
push
call
pop
pop
test
je
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
mov
push
mov
sub
push
lea
push
pushl
push
pop
call
test
mov
je
cmpl
jbe
mov
push
push
pushl
mov
pushl
push
call
pushl
push
pushl
push
call
pushl
push
pushl
push
call
mov
cltd
mov
idiv
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
mov
add
push
call
push
push
pushl
push
call
add
push
call
push
push
pushl
push
call
add
push
call
mov
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
pushl
push
pushl
push
call
add
cmpl
jbe
pushl
push
push
pushl
call
pushl
push
call
pop
pop
pop
pop
mov
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
movl
test
je
mov
mov
jmp
push
call
mov
mov
mov
push
push
push
push
xor
push
inc
push
call
mov
mov
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
lea
push
push
pushl
call
mov
imul
add
imul
add
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
push
call
mov
push
push
push
push
call
mov
add
lea
add
mov
pushl
lea
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
jmp
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
add
inc
addr16
inc
sbb
bound
in
aaa
imul
dec
jl
movsl
dec
popf
and
mov
inc
outsb
outsb
and
jno
shlb
mov
xlat
aaa
js
out
inc
xor
sarl
cwtl
cmpb
dec
das
addr16
inc
sbb
bound
in
aaa
imul
dec
jl
movsl
dec
popf
sarb
cli
cmpsl
xchg
shlb
cmp
test
fwait
test
cmp
cmc
xchg
cmp
popf
pop
mov
push
loope
pop
xchg
and
jae
push
icebp
xor
in
xchg
push
mov
mov
adcl
mov
insl
popf
adcl
push
push
sarl
pop
mov
mov
stos
call
xor
scas
ret
jecxz
cltd
je
and
mov
ret
stos
shl
cmc
xchg
add
jge
aaa
jle
stos
xor
or
testl
es
jmp
xor
clc
stos
je
sbb
leave
push
cmc
and
jmp
mov
cmp
fs
xchg
adc
or
je
jle
lahf
and
add
movsl
dec
cmp
int3
and
cmpsl
jp
or
cmp
or
es
xor
mov
pop
data16
jge
loop
push
orl
push
mov
or
insb
std
out
imulb
sub
shl
add
lret
xchg
movsb
fldt
jae
or
jnp
mov
pop
xlat
fildl
add
jmp
jl
sub
add
and
sbb
adc
push
sub
cli
add
adc
pop
scas
mov
inc
mov
icebp
popf
or
jo
test
sbb
and
cmp
mov
xor
jecxz
fistl
sar
pop
dec
add
cmp
mov
add
popa
lods
lock
mov
push
lock
shll
add
sub
test
aaa
shll
xchg
xor
pop
jae
add
or
outsl
mov
jp
insb
divb
add
cmpsb
and
mov
test
add
cmp
inc
adc
and
lret
out
push
adc
mov
insl
imul
test
push
sub
test
xor
lods
jbe
inc
mov
inc
add
hlt
xchg
sub
push
les
jl
dec
movsb
stos
cmova
sbb
popa
jmp
or
ljmp
add
add
mov
adc
repz
xlat
cmp
test
repnz
jmp
icebp
sub
out
mov
jle
cltd
popa
cmp
or
aad
and
popf
push
out
lret
mov
call
xor
or
add
into
pop
lock
inc
add
ds
ret
das
cmp
inc
jns
int
xlat
jb
ja
jl
in
push
xchg
sbb
cs
mov
insl
cmc
xchg
pop
cmp
mov
lret
xor
sub
add
stc
leave
pop
nop
jae
mov
clc
stos
cmp
andl
in
jb
mov
lret
dec
pop
decb
fdivrp
push
xchg
sbb
std
inc
data16
add
or
inc
dec
fsubs
pop
andl
add
or
enter
cmc
push
cmp
lcall
paddb
call
fisubrl
sub
add
xchg
mov
enter
nop
adc
xlat
popf
aas
dec
sub
pop
popf
ja
xor
data16
mov
fldl
jbe
push
sti
sbb
pop
enter
clc
pushf
adc
xor
shrb
push
push
in
dec
arpl
aam
sar
sub
lret
fs
jne
loope
pop
mov
add
add
mov
mov
pop
nop
and
mov
nop
lock
sub
enter
mov
sub
stos
out
sub
sub
fwait
xchg
hlt
hlt
ficoms
stos
jge
ret
xchg
cwtl
pop
outsl
xor
orb
jecxz
push
push
lahf
xchg
inc
mov
inc
ret
movsl
lock
pop
adc
push
je
lret
push
jmp
cwtl
stc
jnp
cmp
lods
aam
repz
add
or
aas
stc
ret
inc
jg
mov
add
popf
in
inc
inc
add
xchg
jge
push
add
xor
inc
shll
xchg
dec
clc
push
mov
js
leave
data16
jns
stos
jbe
add
cmp
mov
icebp
dec
xor
hlt
in
jg
pop
dec
pop
insl
xbegin
shlb
and
adc
cmp
jne
lock
cltd
xchg
pushf
dec
jmp
sahf
int3
sub
in
roll
add
imul
push
pop
stos
jne
mov
lcall
mov
adc
scas
mov
mov
jo
in
pop
cld
and
cwtl
cli
out
lahf
aaa
mov
mov
daa
inc
sar
outsb
lret
mov
mov
loope
xor
sub
xlat
arpl
cli
outsl
jge
pop
cli
in
test
out
push
dec
stos
mov
add
or
jnp
imul
mov
xorb
and
repnz
adc
stc
inc
shrb
insb
iret
and
mov
xchg
mov
inc
sub
xlat
xor
test
aaa
pop
or
push
pop
in
loope
sbbl
movsl
inc
cmp
sbb
aad
pop
mov
mov
lods
lcall
add
mov
inc
push
jecxz
add
sbb
push
pop
push
sbb
lret
inc
mov
loop
xchg
push
fwait
adc
inc
mov
shrl
cmc
xor
mov
adc
mov
dec
cmovb
in
or
mov
sub
xchg
enter
das
mov
push
je
mov
es
mov
adc
ror
push
daa
cmpsb
imul
shl
inc
add
mov
mov
sub
mov
push
xchg
cmc
mov
inc
or
xlat
idivl
push
mov
inc
sbb
mov
ds
or
dec
pop
call
jl
sub
lea
jl
xor
xchg
mov
lods
sbb
mov
push
push
addr16
loop
sub
imul
mov
adc
adc
push
push
scas
out
in
sbb
cmpsl
xlat
fbstp
xor
lahf
jmp
xor
xchg
jg
rorb
es
pop
xchg
das
dec
imul
mov
cmpsl
push
loop
xchg
jl
call
sahf
push
mov
inc
jo
adc
sti
jp
enter
mov
lret
subl
rorb
leave
xchg
push
dec
jmp
sub
cmp
cld
pusha
in
and
aam
inc
mov
arpl
hlt
test
call
cmp
mov
pop
cltd
pop
dec
inc
fs
loop
pmulhw
pop
lahf
and
dec
pop
addl
les
xchg
jbe
lcall
dec
call
js
mov
dec
dec
and
fnstcw
sbb
xor
sbb
addr16
mov
lahf
dec
test
add
fmuls
rcll
test
jbe
leave
push
in
jbe
enter
insb
xchg
stos
inc
cmp
nop
insb
xchg
sarb
lahf
lcall
lock
jno
sbb
clc
scas
scas
mov
add
inc
aas
mov
pop
cmp
aam
mov
in
mov
loop
sub
movb
jp
pop
test
cmpsl
or
xlat
imul
xchg
pop
push
arpl
add
jnp
inc
std
les
mov
shlb
ljmp
sub
mov
js
adc
lcall
or
int3
or
pop
pusha
fiadds
mov
adc
and
icebp
daa
pop
stos
mov
mov
stc
adc
out
lock
lock
filds
add
mov
rorb
xor
push
push
xor
loopne,pt
aam
mov
or
adc
xor
cmp
pop
out
xor
mov
loop
dec
out
adc
jb
test
es
dec
pop
subb
mov
dec
daa
dec
jns
test
ret
add
sbb
push
and
mov
movsl
fdivs
loope
mov
dec
mov
fstl
pop
mov
sub
and
ret
fwait
mov
or
pop
loope
push
inc
cs
add
leave
and
fcomp
test
jl
test
fisttps
jns
fldt
push
jno
xor
mov
fnsave
mov
sub
decl
sub
negb
pop
add
jmp
add
add
rcr
stos
pop
aas
xchg
or
in
lcall
daa
pop
cwtl
js
cmp
notb
enter
cli
test
ret
fldl
push
sbb
push
inc
push
inc
adc
ficomps
jb
mov
repnz
add
fcoml
sub
icebp
sub
imull
in
fnstsw
mov
sub
or
add
adc
lock
mov
jmp
nop
loop
pop
lret
sub
aad
mov
mov
jae
ret
inc
cltd
enter
fidivs
mov
adc
ja
xchg
ret
cmp
cmp
lahf
lods
cmpsb
dec
inc
jnp
pop
mov
lret
lcall
pop
imull
xchg
or
pop
hlt
mov
jmp
es
loopne
insl
addr16
lcall
incl
pop
out
add
inc
ffree
hlt
mov
xor
adc
adc
pop
repz
popf
add
mov
push
push
cmp
push
out
mov
adc
cmpsb
inc
sarl
xor
add
sahf
inc
call
inc
fimull
decl
jmp
orl
pop
in
subl
pop
scas
pop
pop
xchg
xor
inc
pop
test
in
lret
outsl
cmpsl
addr16
dec
test
or
adc
xchg
pop
call
cmp
fldcw
sbb
outsb
mov
push
xchg
add
mov
pop
stos
xrelease
pop
and
add
dec
sub
adc
sbb
nop
cmp
out
cs
cmp
adc
adc
js
cmp
sub
xchg
pop
cmp
mov
ljmp
lock
test
xor
lret
out
sbb
xor
into
lock
adc
in
mov
add
adc
inc
jnp
lahf
push
rorl
or
pop
test
test
roll
xor
loopne
hlt
ret
fmuls
lea
rcr
movl
pop
add
adcl
or
jbe
aad
inc
stos
aam
aaa
mov
int
fwait
jbe
cs
es
adc
dec
lcall
fdivrl
inc
xchg
jg
jmp
out
ja
inc
push
push
sbb
and
orb
and
add
hlt
and
shlb
sbb
xor
push
icebp
scas
xor
adc
add
insl
nop
dec
stc
loope
mov
stos
repnz
sub
outsb
jle
sarb
lock
sahf
cs
int
jp
ret
add
dec
je
adc
subb
inc
pop
mov
sub
dec
shll
xlat
fiadds
adc
push
nop
inc
lods
mov
leave
push
inc
pop
cli
lea
cltd
and
xor
jl
repnz
add
std
popa
pop
in
outsl
addr16
jp
dec
cltd
ret
sub
sahf
cmpsl
pop
aaa
mov
mov
cmp
dec
insl
mov
leave
sub
clc
xchg
sub
jmp
into
sbb
mov
pop
and
lcall
add
es
cmpsl
sub
xchg
pop
and
addr16
and
push
inc
lret
hlt
jo
mov
std
pop
cwtl
or
add
sbb
nop
mov
test
jo
dec
rcll
jnp
aam
mov
fsqrt
xchg
xchg
cmp
outsl
sbb
cmpsb
fcom
jmp
cld
mov
jg
sbb
cmp
add
adc
nop
dec
lea
in
jmp
or
rcrl
jns
daa
jae
xchg
clc
pop
mov
mov
mov
fwait
lret
mov
cs
ret
cmp
dec
dec
mov
xor
je
popf
loopne
lods
pop
clc
rolb
les
dec
ret
mov
lahf
jne
push
push
add
mov
in
addr16
inc
fistpll
jg
pop
inc
pop
outsb
sti
push
xor
add
test
cmpsb
lea
push
cmpl
insb
sbb
jp
add
or
push
repz
out
fmuls
add
jle
xchg
dec
dec
test
shlb
xor
add
xchg
adc
pushf
push
dec
in
enter
push
pop
lcall
cmc
outsb
outsb
enter
push
ret
test
push
and
scas
mov
fisttpll
jmp
sub
outsl
into
cmp
imul
dec
loop
aad
or
es
or
loope
dec
ficoml
sub
xchg
mov
dec
inc
lcall
fdivl
nop
mov
popf
push
in
push
jns
xor
push
fists
xchg
les
push
jne
pop
lret
xchg
fsts
fildll
mov
cltd
or
mov
push
popa
imul
xchg
nop
and
aad
js
xchg
repnz
add
push
outsl
xchg
xor
out
aaa
cmp
lock
add
out
mov
cmp
jne
sbbb
sbb
xchg
out
lret
insl
jns
lahf
test
or
push
inc
movsl
lods
mov
and
and
dec
inc
xor
movsb
es
loopne
aam
adc
mov
addr16
add
sbb
cmpb
scas
imul
fs
inc
std
inc
mov
ljmp
mov
stos
icebp
xchg
in
test
movsb
inc
dec
fidivrl
cmp
mov
add
aas
cmp
and
cld
inc
jp
jb
cmp
sub
lret
lds
jg
pop
ja
popl
addr16
movsb
mov
jno
add
add
dec
xor
add
sahf
xchg
add
loop
ja
mov
mov
and
bound
mov
push
fwait
add
cwtl
push
or
mov
mov
inc
movsl
inc
and
mov
rorl
cltd
sub
pushf
jg
jecxz
notb
inc
push
aam
add
and
and
sub
push
mov
mov
or
mov
sbb
in
ret
add
add
cmc
fdivr
mov
cmp
stc
insl
ds
mov
pop
jnp
roll
iret
scas
or
int
scas
push
inc
lcall
push
fwait
jge
add
icebp
or
sub
outsl
les
or
adc
out
dec
ljmp
adc
add
mov
mov
xlat
cmc
dec
addr16
inc
fsubp
int
inc
fsubl
push
cmp
dec
inc
cmp
cmp
scas
in
les
mov
je
cmp
in
xchg
call
aas
inc
cltd
push
add
cli
dec
inc
insb
out
bound
fnstsw
std
popf
cltd
sahf
sub
fwait
jae
sbb
stos
or
sbb
cltd
xor
ret
fiaddl
and
iret
mov
cmpsb
pusha
adc
mov
inc
stos
in
out
daa
pop
leave
test
pushf
fs
add
xchg
sbbb
mov
inc
or
shlb
daa
xor
lds
imul
es
dec
xchg
pushf
popa
int3
cmpl
divl
or
mov
aas
inc
inc
stos
sbb
sbb
cli
cmc
mov
pop
cmc
jne
mov
mov
lret
fsubl
jo
sbbb
or
mov
add
dec
jl
hlt
fdivr
dec
jnp
mov
mov
cmc
vpshufb
popa
mov
into
insb
movsb
dec
mov
aad
dec
xchg
mov
sub
outsl
mov
shll
cmp
xchg
cmpsl
lods
cld
cs
dec
cmp
dec
adc
stos
arpl
loope
fstl
mov
mov
lods
mov
test
cmpsb
push
push
dec
enter
into
mov
xchg
pop
add
loope
add
add
mov
dec
mov
insb
leave
sub
sbb
arpl
stc
xchg
stos
xor
mov
sbb
cld
fcompl
sbbb
fwait
push
and
sbb
mov
push
les
scas
shr
das
pop
mov
sbb
xlat
push
sbb
aas
mov
jecxz
jo
outsb
loop
ds
ret
pop
fstl
cmp
xchg
sbb
add
cmp
mov
jle
sub
cmp
jno
jg
pushf
loopne
fadd
jg
push
les
lods
xor
push
jb
fsts
in
cs
mov
cmpsb
cmp
data16
stos
outsb
gs
mov
pusha
mov
jge
mov
shr
addl
mov
cmp
loop
pop
jg
cmpsl
arpl
ja
dec
mov
push
lea
or
iret
mov
mov
clc
dec
das
dec
in
xor
jb
xchg
push
jbe
xchg
sbb
jb
dec
lods
jle
insl
out
pop
testb
into
insb
and
in
sti
mov
icebp
inc
shlb
ds
icebp
jg
test
ljmp
loopne
stos
mov
sarb
jb
add
int
scas
inc
xchg
ljmp
add
mov
inc
xor
pop
mov
popl
add
repz
or
cmp
xchg
sbb
into
pop
out
mov
sarb
fdivrl
addr16
cld
xor
jg
nop
lret
call
es
rorb
xchg
pop
pop
jae
add
aas
nop
jae
lret
fwait
dec
addr16
cmp
movsb
popf
lods
imul
adc
andb
pop
xchg
mov
mov
lods
fdivrs
mov
ret
sub
jo
pop
add
xchg
adcb
or
mov
mov
lcall
mov
test
divb
lret
outsl
loope
xchg
pusha
mov
das
lret
xor
mov
inc
mov
jmp
mov
adc
lret
sbb
pop
sbb
stos
xchg
or
xor
xchg
mov
jo
out
cltd
in
jno
add
mov
shl
adc
xchg
gs
xchg
inc
test
stos
xchg
roll
dec
sahf
dec
in
andl
cmpsb
stc
mov
jb
sahf
in
lret
and
aad
adc
mov
and
fistpll
std
xor
adc
add
add
pop
fistps
cltd
arpl
sub
cmpsb
jb
lcall
cltd
fildl
fisttpl
js
mov
pushf
or
sbb
cmp
scas
daa
adc
lcall
xlat
je
push
imul
std
fdiv
jb
mov
jns
push
ret
data16
cli
xlat
mov
xchg
xchg
push
shrl
pop
loopne
cmp
mov
dec
jecxz
pop
outsl
and
pop
hlt
xor
sbbb
dec
sbbl
adc
sbb
outsl
xchg
notl
lds
int
jae
pop
mov
add
lret
enter
push
mov
stos
cmp
in
mov
push
sub
mov
push
lods
insl
popl
xchg
mov
pop
or
push
push
or
xchg
push
js
shl
add
mov
sar
jl
fs
das
in
sbb
lea
add
test
lcall
adc
sbb
out
out
push
int3
inc
adc
jnp,pn
push
movsb
jne
xor
mov
into
popa
adc
fcmovnbe
xchg
out
into
jmp
pushf
popa
pop
or
xchg
es
sbb
roll
cltd
mov
sbb
add
cld
cli
sub
leave
and
mov
mov
xadd
adc
repz
orb
xor
xor
ja
js
pop
adc
inc
jge
mov
cmp
jno
sbb
cmpsb
pop
movsb
lahf
scas
or
and
jnp
bound
sti
or
repnz
popa
insl
xor
push
sbb
imul
insb
push
shlb
add
or
dec
cmc
push
and
mov
repnz
mov
inc
add
sar
cmp
inc
ss
jecxz
or
ja
mov
pop
fistpll
rolb
add
faddl
sbb
push
scas
and
mov
cld
mov
jl
mov
dec
pusha
movsb
add
add
adc
add
add
jns
or
pop
jno
inc
les
shlb
push
dec
les
xor
inc
addr16
or
mov
pusha
cmp
sub
adc
stc
out
jno
ja
or
lcall
das
jo
ja
mov
push
push
add
pop
sub
or
mov
push
add
add
dec
dec
ret
sbb
leave
loop
mov
mov
jp
xchg
dec
push
fucom
addr16
fwait
jmp
inc
mov
sahf
jmp
fs
and
mov
lods
int3
push
cmp
pop
rcrl
ja
aaa
and
push
dec
mov
cwtl
cmp
lods
in
xchg
clc
stc
rcl
add
xchg
cmpsl
and
sub
in
xor
sbb
or
rolb
add
xchg
dec
add
aaa
push
test
lea
mov
stos
cmp
pop
adc
cmp
out
and
test
shll
dec
and
mov
inc
jns
dec
pop
bound
test
repnz
cmpsl
mov
lret
jae
addb
bound
dec
fistl
jns
mov
add
mov
dec
xor
push
les
push
mov
iret
aam
xor
xchg
inc
mov
cmpsb
add
inc
and
fiaddl
sbb
pop
jle
scas
jp
cltd
cmp
adc
pop
in
inc
ret
mov
leave
popl
hlt
cmpsb
outsb
into
enter
cltd
adc
call
jmp
arpl
fistl
jne
dec
scas
mov
cmp
xor
add
stos
jb
mov
dec
clc
xchg
icebp
and
ljmp
test
mov
xor
fcmovu
jecxz
cmp
pop
jae
jp
sti
aaa
mov
lret
xchg
popf
lods
dec
imul
inc
cs
fcoms
push
shlb
pusha
sbb
daa
cmpsl
xor
repnz
mov
aas
sub
cmc
pop
fsubr
jge
mov
addb
sbb
ds
and
in
add
xor
mov
sbb
cs
inc
scas
sub
test
hlt
inc
test
pop
test
jp
xchg
jno
cmp
out
imul
ja
xchg
outsl
xchg
mov
call
jo
and
shrb
les
fsubrl
rcrb
pcmpgtb
sahf
lret
pop
andb
call
sbb
add
push
adc
and
mov
cmpsl
inc
cmp
lock
dec
fwait
lds
inc
leave
jmp
xchg
inc
shr
mov
ljmp
scas
fisttps
daa
aaa
aad
mov
sbb
fs
jne
fsubrp
mov
lcall
adc
fbstp
or
mov
or
add
fildll
push
dec
out
mov
ja
xor
add
test
aad
mov
in
fisttpll
mov
cwtl
adc
cmpsl
stos
gs
sub
pop
mov
jmp
stos
nop
ja
or
cmp
jb
dec
or
xchg
pop
inc
sbb
jae
stos
cli
mov
pop
cld
loope
mov
iret
sahf
pusha
popf
xchg
push
add
in
gs
movsb
jl
rolb
mov
movsl
mov
int3
jbe
leave
jp
in
add
cli
popl
outsl
mov
aad
fwait
mov
jmp
fidivs
pusha
mov
pop
add
cmc
das
rolb
stc
stos
inc
arpl
jg
mov
testb
mov
adc
enter
inc
dec
jb
push
or
cmpsb
jo
jb
or
xor
pop
push
jbe
jnp
dec
and
and
fistl
pop
sti
je
add
data16
ljmp
jp
int3
mov
or
notl
outsb
push
push
je
in
mov
push
stos
lds
add
add
cmpsb
sti
cmp
or
dec
dec
rcl
adc
orl
xchg
cmp
pop
push
sahf
cmp
insl
outsb
jmp
lock
cmp
jns
fildl
mov
or
sub
push
xchg
test
mov
ret
cmc
nop
minps
cmc
push
rorb
mov
lods
negb
scas
into
sbb
pop
lcall
sahf
or
sbbb
test
dec
shll
jae
fsubl
push
fwait
imulb
pop
stc
mov
jnp
test
decb
mov
inc
in
outsl
xchg
jecxz
lahf
jae
insl
add
into
daa
enter
nop
testb
data16
ljmp
adc
lcall
les
or
bound
dec
scas
add
dec
fstpt
gs
pop
fwait
push
rcrb
test
or
nop
fstpl
xor
or
cmp
fwait
test
pusha
lret
out
pop
push
dec
dec
out
xor
cld
inc
stc
push
adc
or
cmp
ret
lret
sub
cltd
add
es
xchg
jae
mov
cmp
add
in
sub
fsubl
cltd
dec
xlat
push
in
subb
test
inc
dec
adc
daa
dec
mov
mov
add
imul
push
mov
cmc
icebp
addl
cs
inc
pop
inc
icebp
pop
jbe
ss
adc
push
int3
loopne
jmp
jae
adc
push
cltd
hlt
ftst
add
jb
lea
iret
cs
popa
or
enter
aas
pop
int
cld
mov
sahf
imulb
or
add
test
jne
push
scas
jecxz
lods
pop
leave
in
sbb
stc
push
sbb
mov
mov
cld
cmpsb
inc
roll
sub
push
and
mov
xor
les
lcall
into
xor
js
sbb
fs
popa
clc
cmp
loope
dec
xor
jae
or
sub
xor
add
insl
jne
mov
pop
add
or
or
lahf
pop
mov
in
xor
pop
sbbl
and
faddp
push
call
inc
fs
sub
sti
mov
xorb
adc
test
inc
jo
cmpsb
xchg
addb
sbb
addr16
or
repnz
mov
push
xor
je
jne
push
pop
imul
cmp
sub
add
nop
pop
test
shrl
inc
xchg
or
sub
addl
loop
lods
and
push
sar
cmpsb
cmc
inc
and
mov
or
icebp
pop
daa
scas
add
js
mov
sarb
test
stos
leave
cltd
stc
movsl
push
jbe
inc
push
push
push
cmpsb
xchg
fidivs
adc
mov
add
aam
fsubrs
sahf
mov
mov
adc
cmp
fwait
mov
xchg
pushf
or
inc
jecxz
add
cmp
jmp
pop
loope
cmpsb
inc
repnz
sub
dec
ja
lret
add
xchg
decb
cmp
xorb
mov
mov
dec
enter
add
xor
adc
ljmp
scas
les
clc
mov
cmp
push
lds
and
mov
call
fs
es
or
mov
pop
je
test
pop
xchg
sub
add
pop
push
push
jne
and
inc
andb
mov
add
nop
sbbl
inc
jmp
lods
add
push
arpl
ss
dec
shrl
fdivrs
lret
icebp
aad
dec
aas
call
xchg
push
ret
xor
inc
adc
xchg
pop
mov
push
pop
sbb
pop
ret
nop
add
inc
les
mov
sbb
push
cmp
xchg
hlt
xor
inc
xchg
xchg
pop
push
popl
add
cmpsl
push
in
xchg
out
jns
cwtl
pop
addr16
sub
jbe
stos
mov
int3
mov
cwtl
pop
in
jp
sbb
psadbw
add
daa
imul
imul
sbb
inc
minps
mov
xchg
or
cwtl
cltd
dec
xchg
adc
int
xchg
inc
mov
mov
lods
sub
insl
sub
nop
add
xor
mov
cwtl
xchg
js
xor
rolb
insl
push
cmpsb
jle
add
punpckhdq
xor
lock
sbb
das
sub
sbb
testl
inc
inc
mov
adc
push
popf
push
and
shll
push
inc
test
cmpsl
mov
xchg
loope
add
push
and
mov
ret
push
push
mov
icebp
out
pop
sarl
jbe
xor
push
dec
or
int
mov
push
jnp
push
clc
outsb
lea
jle
or
ja
mov
movsb
fs
fbld
mov
add
mov
pop
jb
loopne
xor
dec
pop
add
add
fcoml
dec
fstp
cld
pop
xor
iret
sbb
rcll
data16
rorl
adc
sbb
rcrb
pop
pop
push
fstpt
pop
add
pusha
xchg
es
mov
cli
fs
xor
xor
data16
mov
or
loope
out
push
and
pop
push
jb
add
xchg
xor
add
test
sbb
cwtl
jg
faddl
xchg
stos
cmpb
jge
adc
cmp
and
pop
les
pop
int3
dec
icebp
pop
and
push
xchg
es
fcomps
aam
hlt
jno
cltd
dec
add
jmp
mov
pushf
and
push
dec
nop
out
add
add
sbb
in
imul
add
add
clc
in
inc
nop
xchg
call
shl
shrb
fst
lret
dec
cmp
nop
dec
pushf
rcr
mov
jp
mov
arpl
mov
sahf
ljmp
repz
cwtl
fst
or
dec
mov
sub
into
mov
or
shll
add
lock
filds
dec
jmp
dec
stos
sbb
insl
mov
add
and
mov
pop
mov
push
dec
sub
and
bound
mov
mov
jae
arpl
ss
sbb
mov
jmp
mov
pop
jnp
sbb
mov
test
sbbl
xchg
jo
loope
fldenv
xorl
inc
gs
add
add
mov
or
mov
inc
xchg
xchg
out
out
jge
pop
stos
mov
xlat
sbb
mov
inc
adc
dec
mov
push
ret
insl
fwait
mov
in
scas
loopne
add
lods
dec
les
inc
push
aad
ds
cmp
cmp
cld
outsl
imul
inc
sti
inc
dec
out
imul
add
add
scas
lock
push
or
dec
aas
repz
cli
push
jno
int3
push
cli
les
xchg
es
lret
mov
ja
ret
iret
mov
xlat
ljmp
scas
mov
std
xchg
sahf
add
fdivrs
rcr
xchg
or
adc
cmpsb
dec
mov
popa
add
shr
cmp
and
inc
jns
push
lcall
push
cmc
mov
icebp
lea
mov
fs
ret
stos
pop
imul
mov
flds
loop
pushl
push
fisubl
fisttpll
clc
mov
sti
nop
rcrl
ds
sub
add
mov
push
sub
jle
lea
andl
in
ds
stos
les
lods
xor
or
push
xor
dec
and
mov
loopne
cmpsb
mov
or
jmp
dec
iret
shrl
aad
outsb
mov
cmc
jb
les
lea
sahf
push
clc
xchg
xor
js
sbb
push
hlt
jp
out
sbb
movsb
movsl
cmp
adc
push
stos
mov
xor
or
into
mov
add
cltd
xor
movb
cmc
lcall
rcll
hlt
mov
mov
push
and
xchg
adcl
sub
fcoml
ljmp
scas
pop
xor
nop
je
push
adc
sub
leave
out
repz
push
clc
rcrb
add
call
add
add
mov
rcrb
push
divl
cli
sbb
or
sahf
movsb
into
add
mov
inc
cwtl
call
das
repnz
shll
mov
int
and
adc
movsb
jmp
popf
call
fcmovne
fcomip
dec
inc
mov
js
xor
inc
adc
add
xor
add
add
repnz
lcall
cmp
push
pop
nop
xchg
cmpsl
js
jg
lods
movsl
nop
sub
rcl
jo
bound
push
and
or
pop
data16
mov
push
popf
dec
cld
add
lret
popf
out
aas
mov
enter
xchg
pusha
add
adc
mov
aam
lret
aad
mov
inc
je
lret
iret
mov
rorl
add
mov
inc
inc
push
into
sbb
test
add
dec
dec
mov
add
