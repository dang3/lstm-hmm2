push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
jmp
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
add
add
inc
adc
pop
arpl
and
jp
fidivs
mov
out
mov
scas
add
ret
jmp
loop
out
daa
jg
add
andl
leave
add
fnstenv
das
pop
mov
stos
sarb
in
iret
test
les
xor
dec
sbb
push
subl
adcl
imul
adc
mov
sahf
push
xchg
push
jmp
insl
leave
aad
push
fiaddl
in
es
xor
daa
fs
js
rclb
outsb
inc
shll
jbe
sbb
outsl
push
mov
incl
scas
scas
push
fimuls
dec
pop
std
inc
mov
or
dec
dec
aaa
shlb
icebp
in
hlt
push
xor
xor
and
jo
mulb
inc
rolb
sbb
sub
sbb
mov
nop
or
sahf
add
enter
bound
mov
jb
inc
add
sti
nop
add
and
xchg
mov
mov
outsl
mov
icebp
xchg
or
mov
movsl
movsl
into
addr16
add
and
inc
int
fldl
and
jb
mov
rcr
rcrb
and
das
push
incl
or
ljmp
xchg
dec
cmp
cmp
neg
xchg
hlt
testb
cld
popl
sub
add
add
lret
shlb
xchg
or
dec
inc
lods
mov
aas
es
inc
pop
hlt
sub
jae
sub
cwtl
xchg
iret
cmpsl
sub
call
aad
adc
dec
and
push
movsb
mov
dec
shl
sub
xor
mov
mov
movsb
cmp
sbb
stc
inc
ficompl
fwait
cmp
call
cli
lock
iret
fs
jno
out
or
dec
in
dec
icebp
test
push
push
std
loope
mov
imul
mov
push
dec
xrelease
roll
cmc
inc
mov
jg
sbb
sti
push
mov
in
nop
pop
in
xchg
rcll
mov
mov
mov
lahf
mov
cmp
sub
ja
lods
ret
sahf
int3
add
jmp
add
icebp
add
mov
xor
insl
mov
xor
ret
push
xchg
mov
iret
mov
ljmp
cmc
or
sub
imul
int3
sub
lret
lret
push
inc
xchg
imull
out
out
fmull
sbb
sbbb
mov
ja
out
xor
lock
push
loopne
divb
mov
test
lods
idivl
xchg
pop
pop
jbe
mov
sbb
in
addl
add
and
jp
push
cmp
test
cmpsl
jbe
mov
push
mov
int3
in
loopne
mov
out
outsl
sar
shr
xor
inc
adc
fwait
mov
out
into
sbb
mov
xor
xchg
cmpsl
std
push
push
push
sub
shlb
mov
mov
pushf
inc
mov
adcl
fsubrs
aad
xchg
ja
adc
es
mov
xor
add
add
cvtps2pd
sub
mov
mov
adc
xchg
imul
pop
pop
imul
mov
es
cmc
jae
mov
and
dec
sbb
fld
pop
or
lock
mov
xor
mov
mov
imul
je
stos
push
arpl
inc
insb
push
mov
pop
push
mov
push
sbb
shll
dec
sub
and
push
mov
fst
xor
scas
data16
negl
adc
clc
sbb
int3
sub
mov
xor
cld
sldt
or
mov
rolb
jmp
loop
push
jnp
or
adc
mov
movsl
push
jg
adc
mov
xchg
xchg
test
mov
leave
mov
loopne
sbb
and
push
pop
lds
sbb
or
push
repz
andl
dec
jg
pop
js
imulb
ficoml
mov
cmp
jmp
add
dec
sbb
dec
jl
add
dec
orl
and
jno
aam
aaa
fcomi
pushf
push
xor
pop
lret
sbb
jecxz
cmp
add
cld
xor
adc
push
adc
push
sysenter
cmp
sbb
and
in
cmpsb
mov
std
adc
pop
icebp
push
iret
and
fbld
mov
daa
mov
inc
repnz
mov
add
xchg
or
imul
stos
lods
jge
sahf
in
mov
stos
pop
fists
sub
cmpsl
jae
xor
mov
push
inc
pop
imul
cmp
scas
mov
mov
inc
push
js
call
xchg
adc
leave
pop
sub
jae
sbb
push
dec
test
or
fiadds
ja
clc
xchg
inc
adc
pop
out
lcall
dec
add
imul
test
mov
xchg
dec
mov
fnsave
or
das
ds
sub
pop
arpl
fsts
stos
ds
mov
xchg
dec
out
lock
sti
sub
jg
mov
lds
cmpsb
addr16
leave
shr
sbb
pop
loopne
cmp
cmc
mov
pop
ss
out
mov
insl
fcmovb
bound
or
rdpmc
clc
out
mov
inc
mov
ret
mov
lods
add
add
push
adc
int3
fadd
mov
into
push
dec
mov
cltd
repz
mov
jmp
or
jne
ss
jae
jle
shlb
inc
popf
push
subb
rcl
cmpl
js
push
mov
mov
in
pop
add
bound
stos
mov
les
and
sub
jns
mov
insb
arpl
fptan
hlt
aad
cmp
add
xor
ja
jae
xlat
or
in
xorl
xchg
lcall
mov
dec
ret
rcr
inc
mov
cmp
loopne
fnstcw
lret
push
ja
mov
sub
push
add
int
loopne
jmp
xchg
push
rclb
sbb
es
cmpsb
push
jo
sub
decl
xchg
scas
ret
sahf
mov
or
dec
sbb
call
jns
add
aad
outsb
das
hlt
push
mov
lcall
or
cmp
cli
mov
sub
xor
nop
adc
movsb
fisubl
mov
add
xchg
sbb
push
sbb
jle
mov
pop
add
mov
inc
popa
aad
xchg
shl
or
leave
mov
or
xchg
mov
imul
mov
lcall
lret
out
aad
mov
mov
sti
push
jb
lcall
add
jle
or
cwtl
andb
inc
mov
out
dec
pop
arpl
push
loop
insb
or
outsb
pop
jns
scas
ret
sahf
cmc
pop
and
sti
push
xor
xor
lcall
stos
jl
push
jbe
mov
out
push
xchg
aas
or
vxorpd
add
mov
in
cmpsb
lods
in
jg
js
iret
in
inc
es
lods
fistpll
mov
loope
insb
out
scas
push
jl
sub
mov
or
add
add
rorb
cltd
push
push
jbe
mov
cwtl
mov
dec
cli
adc
push
cli
and
sti
or
xor
in
nop
int
and
pop
pop
and
ffree
mov
xchg
inc
xchg
and
xchg
movb
out
scas
iret
add
aam
test
das
inc
cmp
mov
arpl
mov
add
add
pop
in
inc
mov
push
sub
mov
mov
sub
mov
jo
jmp
jno
cmp
fdiv
jnp
shll
pop
push
leave
rcrb
rorl
adc
jns
testl
sbb
push
bound
inc
into
mov
jns
or
push
leave
aad
cmc
xor
mov
mov
test
jg
movsb
add
add
mov
dec
hlt
dec
sbb
or
cmp
cmpsl
push
icebp
xchg
jb
int3
mov
je
jno
je
clc
cmpsl
inc
sbb
movsl
pop
outsb
push
rorl
sub
inc
and
mov
push
arpl
and
add
jmp
loopne
mov
lahf
daa
in
pop
jne
mov
sbb
mov
add
repz
jno
pop
add
fwait
lds
mov
or
inc
mov
push
mov
mov
aad
outsb
push
mov
jl
jmp
cmp
pop
lahf
jg
jg
cmpsb
mov
mov
repz
mov
fcompl
mov
test
xor
mov
sbb
xchg
dec
inc
mov
mov
aam
lods
xor
out
outsl
aam
mov
testl
add
mov
fsub
fs
sbb
daa
bswap
loop
test
cli
cli
bound
sub
pop
ljmp
push
sbb
out
mov
bound
mov
add
fcoms
filds
push
and
mov
sub
push
repz
xchg
imul
testl
rolb
inc
inc
fsubs
mov
mov
mov
fwait
lock
add
add
movsl
popa
test
lea
fwait
popa
or
sti
jb
dec
insb
xor
mov
dec
fldl
xor
push
pop
mov
add
lret
out
push
flds
cmp
std
clc
mov
pop
add
sub
pop
lock
mov
sbb
cmp
bound
mov
cmpsl
and
ljmp
pop
xchg
jecxz
hlt
jmp
fs
mov
add
add
in
mov
jge
negl
dec
push
mov
stos
scas
les
in
xor
inc
lcall
fiadds
shrb
dec
rcrb
adc
pusha
in
cli
imul
mov
mov
outsb
ss
stos
mov
xor
add
js
frstor
stc
clc
popf
mov
dec
cmc
std
push
cli
movb
fadds
mov
test
orps
nop
add
add
fldt
mov
jnp
sarl
mov
pop
sub
repz
pop
stc
push
enter
add
adc
enter
mov
aaa
scas
add
dec
aam
jp
das
pop
mov
and
faddl
das
and
aad
jns
add
dec
sarb
jb
add
cs
add
lea
pop
pop
lahf
xchg
leave
lds
add
push
xchg
icebp
or
jne
loopne
cmp
loopne
add
in
jl
fstpl
je
leave
out
adc
arpl
cmp
faddl
mov
out
or
loop
test
dec
cltd
fdivl
xchg
cmp
jbe
mov
dec
dec
inc
out
fistpl
movsl
sub
cmpl
inc
inc
aam
fistps
adc
repz
jle
rcll
stc
imul
xchg
cwtl
dec
cmp
or
mov
inc
push
mov
bound
dec
sub
adc
push
mov
pop
shll
aam
or
ja
mov
mov
clc
jnp
dec
mov
cmp
or
or
sub
pop
jmp
test
js
mov
add
pop
add
jle
jne
adc
mov
fwait
mov
fistpll
push
out
cmc
and
verr
add
sub
push
jnp
imul
dec
xor
xchg
mov
adc
lret
int
and
mov
pop
mov
mov
imul
mov
decl
repz
pop
cmp
add
in
sub
jg
add
sarb
js
sub
push
jle
xchg
repnz
movsb
sbb
cmp
aad
sub
into
sbb
into
inc
xchg
lret
dec
fs
cli
lock
push
sbb
daa
pop
pop
imul
out
aaa
mov
cli
out
jns
or
clc
std
data16
cwtl
mov
outsb
push
stc
mov
ja
mov
fstpl
add
enter
inc
pop
push
outsb
pop
push
pop
rcl
sbbb
mov
pushf
sti
outsl
shl
movsl
mov
inc
rcll
mov
cmpsl
movzbl
fdivrl
daa
jmp
lcall
popa
mov
and
clc
push
insb
ret
xor
dec
add
rcr
mov
lods
xor
pop
pop
cwtl
jae
in
adc
mov
dec
lea
popf
scas
jae
mov
aad
rcl
mov
sbb
add
cmp
mov
test
mov
sahf
push
es
imul
pop
and
popl
stos
mov
insl
adc
xchg
sbb
push
sub
or
sub
or
imul
adc
sti
sbb
insb
sub
std
addl
pop
test
cltd
leave
sbb
pop
mov
aas
jecxz
jns
xchg
mov
enter
dec
std
movsb
and
mov
pop
cli
iret
in
dec
nop
adc
add
cs
stos
outsl
mov
push
cld
inc
xor
loop
fmull
dec
jge
fdivrs
pop
inc
inc
mov
pop
sub
jmp
xchg
adc
pop
push
stos
pop
dec
jbe
push
push
xor
into
rclb
add
addr16
pop
mov
push
mov
jo
pop
mov
jmp
xchg
lods
sub
xchg
in
jb
pop
mov
lods
pushf
xchg
in
mov
add
add
and
adc
or
cmp
jae
dec
movsl
adc
mov
sub
jmp
adc
repnz
test
fistps
popf
test
js
cwtl
popa
dec
nop
jne
or
ds
push
movsl
bound
repnz
xor
sub
mov
loope
inc
add
cmp
mov
xchg
roll
pop
in
mov
roll
cmp
adc
cltd
test
mul
fnstsw
outsb
stos
std
or
sbb
mov
inc
popf
cmp
shll
rcrl
inc
cmp
cmp
mov
and
sarb
mov
movb
adc
push
xlat
xor
ds
jecxz
repnz
scas
mov
adc
aam
mov
add
cld
aaa
aaa
movsl
cmpb
jb
lods
dec
jge
iret
xor
and
push
out
hlt
outsb
stos
in
add
xchg
mov
rcll
je
aam
add
adc
orb
sub
push
xlat
subl
ficompl
aam
sub
lds
into
jne
adc
rorb
fldl
add
sbb
std
add
cltd
jae,pt
pop
push
cmp
xchg
scas
cltd
xchg
movsl
imul
into
mov
jle
lcall
add
inc
ja
and
pop
std
inc
movsb
fbstp
push
movb
inc
mov
dec
xchg
cmp
ja
ftst
fisttps
fldt
adc
xchg
test
xchg
sbb
mov
fucomip
add
xor
push
xor
xchg
popa
mov
add
xchg
loop
lret
cmp
inc
into
mov
add
add
les
jp
and
push
subb
and
mov
jo
cld
mov
pop
sub
or
push
adc
jb
sbb
mov
xchg
mov
out
mov
test
mov
pop
pop
mov
aam
and
lds
incl
or
mov
xchg
int3
or
mov
rolb
aas
push
imul
mov
push
add
add
in
xchg
lods
inc
decl
jbe
push
frstor
mov
sbb
fs
jae
jo
aam
xor
dec
jnp
jp
fdivrl
mov
dec
fldcw
pop
inc
xchg
mov
fldcw
fidivrl
bound
jmp
cwtl
cmpsb
std
subl
fildl
push
cld
mov
mov
scas
sbb
inc
sub
sbb
and
add
psraw
adc
mov
inc
mov
jecxz
lock
enter
xor
inc
cmpsl
xchg
add
sub
inc
popf
imul
jb
mov
push
mov
movsb
imul
or
add
cmp
push
test
inc
outsl
fistpl
int3
mov
jns
testl
movsb
test
nop
jnp
scas
dec
notb
sti
cmp
fcomps
add
add
mov
mov
in
pop
pop
imul
in
adc
dec
bound
iret
out
sbb
cmp
xlat
add
pop
xor
dec
lods
xchg
daa
mov
jnp
outsl
insb
por
lar
jle
push
pop
adc
inc
cmp
or
mov
cmp
lahf
xor
pop
sbb
leave
rcrb
and
inc
mov
add
add
mov
into
sti
out
add
xchg
mov
dec
add
xchg
rolb
jle
repz
xor
xor
outsb
mov
enter
insb
jmp
out
jne
ja
push
repz
cwtl
stc
scas
mov
or
stos
mov
add
mov
mov
sbb
pop
leave
aam
cmp
mov
jb
ja
stos
stos
xlat
xlat
movsb
add
add
add
add
mov
sub
icebp
inc
movsl
dec
loop
ds
add
adc
add
scas
and
inc
dec
pop
jle
push
add
adc
xchg
push
jmp
stos
aam
nop
fldenv
cmp
addb
in
mov
in
cs
dec
xor
sahf
imul
cli
cwtl
dec
sbb
es
in
fisubl
int3
inc
loop
jge
xchg
jmp
pop
call
and
or
add
jmp
jne
push
and
xor
ds
xchg
xchg
inc
push
in
fstp
pop
call
aas
sbb
add
daa
ljmp
pop
add
insl
push
inc
pop
sub
xor
out
lret
int3
xchg
lods
ds
loop
loope
rcrb
cmp
pop
js
add
mov
fimuls
jmp
pop
out
adc
and
mov
cmp
xchg
mov
sbb
xor
pop
adc
xlat
jle
test
sarb
test
das
arpl
cmp
and
add
fimull
xor
mov
sbb
mov
inc
scas
xchg
aam
daa
inc
jo
dec
enter
xor
push
jae
inc
mov
js
out
dec
hlt
push
cmp
mov
and
cmpl
mov
sbb
hlt
mov
jae,pt
dec
mov
add
add
mov
aas
sbb
mov
fs
inc
fs
ja
or
dec
push
push
jne
dec
push
aaa
push
mov
int3
mov
std
shll
jns
mov
or
insb
xor
cltd
aas
in
ficomps
in
add
test
fs
push
outsl
cltd
or
sub
leave
sbb
adc
mov
sub
pusha
pop
lahf
pop
cwtl
in
iret
orb
bound
jnp
mov
mov
outsb
dec
mov
push
adc
cld
stos
js
push
js
test
mov
add
je
cltd
mov
adc
cld
ror
in
sub
in
enter
pop
jo
dec
scas
aaa
or
repz
cltd
movsb
xchg
jle
pop
mov
mov
pop
jb
mov
dec
loopne
add
cmp
call
add
jecxz
adc
or
and
insl
mov
pop
test
jge
scas
add
std
pop
aaa
push
jecxz
jmp
xor
pop
xor
lcall
imul
xchg
ss
aam
rcr
loope
ljmp
sbb
repz
fistl
add
mov
repz
addr16
xchg
repnz
sbb
xlat
dec
adc
rol
jmp
lods
test
dec
or
pop
add
lahf
push
lods
data16
and
scas
or
lcall
inc
push
ret
aad
aad
xchg
vpsubsb
adc
shlb
sub
in
ret
dec
mov
imul
cld
leave
sbb
jno
dec
sub
aas
outsl
fisubrs
inc
cld
push
lock
dec
cmpb
insb
add
mov
adc
sbb
in
mov
mov
mov
lock
mov
repz
xor
jns
btc
popf
adc
out
or
add
and
loopne
nop
inc
sbb
outsb
sub
dec
dec
push
pop
cmp
or
mov
and
pop
stos
je
test
jbe,pn
cmp
out
pop
or
and
mov
dec
aam
xchg
shl
in
bound
jecxz
fwait
push
sbb
faddl
add
pop
sbb
sub
sarl
sub
ljmp
loopne
sarl
push
shll
xchg
ret
stos
sbb
shl
dec
xchg
and
mov
stc
sub
pop
adc
adc
ret
sahf
mov
sbb
xlat
mov
mov
sub
shll
mov
lods
and
fwait
mov
and
xchg
daa
scas
sbb
add
and
out
xor
insl
les
add
xchg
ret
mov
dec
mov
fbstp
mov
mov
mov
cmp
out
leave
shr
sub
pop
js
fucomi
fistl
mov
addr16
add
dec
in
jno
mov
jmp
jo
repnz
xchg
icebp
pushf
fnstenv
xlat
sbb
das
out
lahf
inc
les
mov
and
jo
mov
dec
xor
add
rcll
push
rorb
adc
les
lret
popa
push
into
cmp
pushw
test
jg
inc
cmc
jp
xchg
xchg
cmp
cmc
sahf
mov
out
add
aas
sub
mov
es
js
adc
sub
das
and
sub
leave
mov
mov
les
jp
into
or
pop
mov
mov
add
add
mov
mov
cmp
pop
cmp
leave
lods
mov
insl
xchg
bound
faddl
shrl
and
or
lcall
or
popa
mov
cmp
lods
add
fisubrl
adc
sbb
add
std
sub
scas
dec
mov
arpl
sbb
pop
fidivs
xchg
lahf
loopne
lret
int
add
xchg
dec
inc
mov
mov
lahf
xchg
mov
call
add
sbb
and
push
cld
lods
dec
jno
test
add
repnz
icebp
je
mov
fiadds
add
repnz
shrb
inc
and
xlat
push
cmp
insb
pop
faddl
push
aad
pop
loope
xchg
push
push
sub
stc
scas
push
or
jae
test
dec
add
inc
lock
scas
pushf
movsb
pop
push
insb
dec
push
popf
and
pusha
adc
pop
sub
icebp
outsb
pop
idiv
mov
or
pop
rcrl
add
lods
fildl
pop
xchg
ds
addr16
fistpl
fwait
adc
mov
test
mov
test
lea
adcl
pop
scas
rclb
jecxz
in
shll
repnz
xor
push
or
jbe
and
xor
lcall
int3
xor
por
jae
add
lds
adcb
push
adcl
add
dec
cmpsl
popa
out
push
bound
jns
xchg
fmul
or
push
pop
add
pop
and
aas
inc
mov
cld
inc
lods
sub
xor
orb
ror
mov
lea
pop
fmull
and
xchg
hlt
push
push
pop
fwait
lret
out
lea
mov
data16
jo
pop
loopne
lods
sub
mov
xor
xchg
es
movsb
push
add
hlt
lds
stc
call
sarb
cs
ja
imul
bound
hlt
xor
cmp
out
int3
pop
mov
sbb
pusha
out
data16
push
mov
push
bound
push
jb
das
test
mov
fcmovnu
sbb
or
call
or
sub
mov
dec
sub
fimull
in
push
out
push
push
jecxz
xchg
mov
or
jae
inc
nop
mov
push
xchg
insb
orl
pop
or
insb
mov
sub
in
movsb
sbb
nop
pop
mov
clc
rorb
cmp
push
insb
fsts
loop
inc
and
pop
mov
xchg
xor
push
pop
inc
sbbl
inc
and
jo
in
pop
add
adc
push
dec
scas
test
lea
sub
push
add
adc
xchg
jnp
lock
cmp
out
pop
movsl
lret
xchg
shll
dec
pop
push
mov
data16
jnp
jo
sbb
cwtl
sti
ret
sub
out
and
rcrb
shll
xorb
pop
mov
insb
mov
call
scas
mov
push
sbb
ja
lret
add
inc
int3
adc
sbb
mov
pop
stos
xor
add
push
mov
popf
jge
push
xchg
jecxz
cmpsl
sub
xchg
nop
pop
fnstsw
outsl
loopne
add
lcall
xchg
pusha
fs
jecxz
rclb
insl
mov
adc
test
xor
sub
mov
out
mov
inc
mov
dec
fdiv
xor
ror
adc
mov
sbb
add
outsl
xchg
fldenv
imul
xor
test
dec
cwtl
cmp
fsubr
mov
or
mov
xor
outsb
stos
call
movsb
enter
pop
jge
and
outsb
jle
xchg
subl
sub
test
xor
sbb
loop
scas
pop
lsl
xorl
xor
cmp
lds
add
add
fnstenv
xor
aas
add
sbbb
jmp
insb
adcl
jne
jge
xchg
sbb
and
dec
nop
pusha
add
inc
xor
les
jbe
cmp
or
xor
out
mov
flds
es
xchg
and
mov
jne
cmp
pop
xlat
pop
push
das
call
xchg
or
cmpsb
xchg
pop
or
jb
lret
pop
test
pop
lret
add
cmpsl
lods
push
jbe
sbb
insl
inc
cmpsl
js
and
ret
cmp
leave
adc
inc
push
mov
xchg
lods
push
neg
sbb
cmp
test
add
pop
adc
out
test
cmp
lcall
cmpsb
jbe
jne
cli
cmp
or
in
add
mov
add
gs
arpl
popl
mov
cltd
dec
inc
incb
lcall
in
add
xchg
pop
pop
nop
ror
sub
arpl
call
or
adcb
stos
mov
inc
icebp
or
std
jnp
clc
dec
movsl
mov
int3
pop
lea
inc
ss
lods
mov
bound
sahf
sarb
into
loope
lods
inc
or
sbb
push
loop
fcmove
xchg
nop
mov
mov
xor
pop
addl
pop
lahf
negb
es
pop
jns
xchg
and
fstps
or
and
rcrb
add
inc
mov
stos
jp
or
repz
and
addr16
mov
arpl
stos
adc
push
clc
add
cltd
rorl
aad
mov
xor
fidivrl
enter
gs
mov
and
or
jp
jle
jmp
mov
sarl
pusha
or
cmpl
push
xchg
and
call
addl
add
add
jmp
mov
mov
js
repz
xchg
sub
mov
aad
xor
daa
mov
pop
adc
insl
or
andb
data16
sub
cli
jecxz
ret
sbb
in
mov
mov
pop
sbb
xor
cwtl
inc
insb
inc
inc
mov
sub
les
cmc
mov
inc
je
js
repz
ja
gs
cli
inc
incl
imul
add
add
xor
test
movsb
and
lods
push
mov
cmp
dec
sahf
aam
test
cmpsl
push
popf
push
jle
imul
jb
aaa
rorb
stos
dec
out
pop
jmp
cmpsl
fldcw
dec
adc
jg
add
fsubr
pusha
cmpsb
mov
jle
fpatan
int
shll
mov
outsb
imul
push
pop
add
leave
faddp
dec
les
add
aas
xchg
cs
into
hlt
sarl
inc
xor
pop
ds
xor
and
mov
clc
xchg
std
mov
cmp
int3
repz
lahf
mov
outsl
mov
inc
add
mov
mov
scas
fisubrs
push
insl
xchg
lcall
rcll
insb
stos
push
lcall
nop
sti
dec
jmp
mov
mov
mov
std
mov
adc
jb
mov
fcomps
add
add
mov
push
dec
dec
clc
sub
mov
decl
mov
pop
ficoml
cwtl
pop
cld
xor
nop
movsb
mov
ficompl
out
cltd
repnz
jl
adc
add
and
push
adc
test
xor
jmp
pop
adc
pop
mov
or
mov
lea
mov
leave
dec
shll
add
cmp
dec
dec
js
or
mov
and
aas
push
jo
sub
and
lock
sub
int
ja
cmp
sbb
cmc
in
jp
negl
mov
sub
mov
mov
jge
mov
pop
push
jb
push
sbb
jle
cmp
pop
lret
movsl
cmpsb
or
fidivrl
js
push
cmpsb
dec
pop
arpl
mov
mov
add
stos
add
xchg
dec
dec
std
loopne
imul
xor
fwait
ds
jmp
sbb
xlat
mov
sti
test
in
sub
lcall
mov
pop
adc
push
sub
jne
jp
popa
xchg
mov
jle
mov
clc
inc
insl
out
bound
sub
orl
inc
rorb
