jmp
push
mov
cmp
jb
xor
add
push
mov
je
push
mov
mov
add
mov
rol
mov
xor
sub
imul
xor
inc
cmp
jb
pop
pop
pop
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
mov
push
mov
push
mov
mov
push
push
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
pushl
push
call
test
jl
mov
mov
push
pushl
push
call
test
jge
andl
jmp
mov
pop
pop
pop
pop
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
add
push
pop
pushl
lea
push
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
pushl
call
pushl
mov
push
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
sub
push
mov
mov
add
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
push
mov
je
mov
mov
add
push
call
mov
test
je
mov
andl
add
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
push
push
push
mov
push
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
push
push
push
call
mov
mov
push
pushl
xor
mov
rep
call
test
je
push
call
xor
inc
pop
pop
ret
push
mov
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
mov
push
mov
push
call
mov
test
je
push
push
mov
lea
push
mov
push
lea
push
call
mov
push
mov
call
add
push
push
lea
push
call
pop
pop
mov
pop
pop
ret
push
mov
mov
sub
push
call
pop
test
jne
inc
jmp
mov
mov
rol
push
mov
mov
test
je
mov
mov
jmp
push
call
mov
mov
push
mov
push
push
push
push
push
xor
push
inc
push
add
call
mov
mov
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
lea
push
push
pushl
call
mov
add
cmpl
je
cmpl
jne
lea
push
push
pushl
push
call
push
pushl
push
push
call
mov
lea
mov
lea
add
mov
add
mov
pushl
mov
push
mov
call
pushl
mov
push
call
pushl
mov
lea
push
call
mov
add
lea
mov
pushl
and
pushl
push
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
imul
cmp
jb
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
mov
ror
xor
imul
add
mov
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
mov
pop
pop
pop
leave
ret
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
pushl
push
pop
call
test
mov
je
cmpl
jbe
mov
push
push
pushl
mov
pushl
push
call
pushl
push
pushl
push
call
pushl
push
pushl
push
call
mov
cltd
mov
idiv
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
mov
add
push
call
push
push
pushl
push
call
add
push
call
push
push
pushl
push
call
add
push
call
mov
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
pushl
push
pushl
push
call
add
cmpl
jbe
pushl
push
push
pushl
call
pushl
push
call
pop
pop
pop
pop
mov
pop
leave
ret
mov
push
mov
pushl
call
push
call
pop
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
add
or
dec
cmpsb
cmp
add
mov
mov
test
push
scas
movsb
sbb
cmpsb
mov
lds
enter
in
jmp
fidivl
or
xchg
pop
sub
call
stc
xchg
sub
mov
testb
mov
add
mov
mov
test
push
scas
movsb
sbb
mov
adc
popf
inc
bound
mov
cwtl
dec
sbb
enter
int3
call
pop
std
int
pushf
push
lods
push
enter
stos
adc
test
push
cs
mov
or
mov
mov
popf
js
mov
pusha
push
stos
push
mov
cmp
add
push
cli
mov
mov
add
add
in
cmpsl
addl
push
scas
push
mov
push
inc
mov
add
sub
js
sbb
fisubrs
mov
or
adc
push
push
xchg
negb
mov
push
outsl
fstpt
in
enter
add
add
add
add
sub
cmp
push
add
push
sahf
ror
repnz
ret
jmp
lea
loope
out
int3
dec
test
xchg
xor
fs
push
sub
imul
adc
sbb
mov
push
mov
movsb
scas
mov
add
xor
push
inc
iret
stos
mov
xor
int
inc
lods
dec
aaa
xchg
add
cmp
push
idiv
lods
mov
movsl
les
divb
fndisi(8087
xor
pop
mov
sub
scas
es
xor
pop
add
sbb
shr
lcall
loopne
or
lods
decb
or
sub
and
loop
pop
xor
in
mov
data16
add
add
jno
fs
cmpsb
lods
mul
imul
jge
fwait
pop
clc
movsl
imul
stos
ret
loope
loop
sahf
jae
cmp
xchg
stc
xchg
mov
mov
xor
dec
fdivrl
cmp
popf
dec
mov
push
mov
adc
sub
dec
pop
decb
push
sbb
mov
jb
je
xchg
push
ljmp
sbb
ret
jecxz
negl
mov
xchg
push
mov
mov
cmpsl
insb
rorb
cmpsl
add
btr
sbb
mov
fdivl
pusha
ret
daa
shr
push
xlat
movsl
sahf
addr16
push
fdivs
cld
popf
daa
xchg
jne
mov
sbbb
jle
shlb
test
js
ja
jmp
or
int3
outsl
sar
into
addb
mov
add
add
add
push
sub
adc
in
pop
add
xchg
sbb
jae
repnz
icebp
mov
mov
jmp
mov
sbb
cmp
and
mov
lcall
pop
lahf
cmp
cs
xchg
int3
lock
cld
pusha
pop
loopne
mov
or
mov
ret
loop
std
jne
lahf
sub
loop
xor
adc
lret
cmp
jg
xor
lahf
loope
sbb
cmp
fldenv
lcall
out
es
mov
mov
imul
jns
cmpsb
lods
mov
sbb
inc
xor
bound
jge
ret
jmp
mov
add
adc
cmpsl
push
sub
mov
inc
sbb
mov
movb
imul
add
add
int
inc
mov
inc
movsb
inc
hlt
mov
lds
fisubrs
sub
or
psrad
outsl
test
decl
stos
lret
daa
cmp
xor
push
mov
popl
mov
and
sbb
popf
sbbl
push
jne
cmpsb
push
inc
rcl
inc
in
leave
popl
imul
jno
and
add
repz
jns
aad
daa
stos
leave
cs
loope
loopne
cmp
insl
into
faddp
cmpsb
jae
enter
ss
ficompl
cmp
adc
into
jns
xor
stc
in
push
aad
and
or
aas
addl
push
mov
pop
inc
push
scas
mov
jg
jns
xor
pop
sub
xor
push
mov
mov
and
inc
rcll
movsl
sbbl
punpcklwd
mov
add
imull
sbb
lods
cmpsb
adc
pop
enter
decl
out
adcb
lock
mov
imul
fmull
mov
icebp
and
test
jns
das
jnp
sub
xor
iret
cmp
fwait
es
test
xor
pop
xchg
mov
cmpsb
stos
mov
int
cmp
int3
fs
sub
dec
sbb
lahf
aaa
insb
sub
and
or
jns
stos
mov
mov
push
mov
and
fnsave
adc
or
or
add
and
sbb
jne
push
enter
adc
rclb
pop
cltd
mov
xor
stc
icebp
scas
sbb
push
jbe
arpl
stos
dec
mov
incl
xor
sub
jecxz
je
outsl
test
pop
jno,pt
inc
test
int3
inc
xlat
jnp
aaa
adc
jbe
pop
bound
add
mov
push
imul
cmpsb
push
clc
out
and
push
push
or
mov
incb
stos
dec
outsl
sbb
popf
fsub
cmp
add
ss
leave
ret
ret
testl
test
adc
insb
popf
and
add
xchg
adc
mov
dec
stos
cmpb
push
and
sub
mov
cs
and
jnp
shlb
mov
dec
adc
jmp
push
adc
jb
mov
imul
fidivrl
dec
cmp
outsb
inc
bound
inc
cwtl
testl
mov
stc
lret
addl
repnz
mov
add
lods
loopne
add
scas
stc
jb
and
adc
adc
inc
in
and
lea
shlb
pop
adc
dec
gs
xchg
push
jmp
daa
call
fiadds
cmp
pushf
roll
sbb
mov
cmc
add
sarl
test
xchg
sahf
push
cwtl
dec
mov
sub
mov
test
stos
out
jne
adc
or
into
shl
xor
push
jle
out
pop
inc
out
lcall
mov
inc
add
jp
pop
add
pop
outsb
sbbb
stos
in
aad
jns
clc
add
sbb
jmp
push
pop
dec
mov
mov
inc
insl
pop
pushf
and
xlat
xchg
pop
push
stos
test
cmpsb
mov
lcall
cmovp
sub
shlb
test
test
jo
loop
sti
test
data16
into
nop
out
pop
add
mov
fsubl
cmpsb
cmc
ror
jbe
insl
cmpsl
xor
push
mov
in
sub
in
sahf
sub
repz
movsl
and
push
es
cmpl
mov
out
ljmp
and
pop
fwait
jnp
and
out
outsl
inc
mov
push
xchg
xchg
xchg
push
nop
jecxz
xor
sahf
inc
cs
mov
mov
sbb
pop
aaa
data16
jmp
xchg
stc
imul
mov
and
out
jg
divb
imulb
stc
push
add
cmp
inc
sub
fs
mov
sbb
inc
jecxz
les
imulb
xor
pop
jp
add
aad
pop
cmp
and
push
enter
xlat
pop
je
push
hlt
fisttpll
dec
cmpsb
add
ja
push
movsl
rol
in
lcall
xor
sub
arpl
pop
addr16
jg
scas
jmp
mov
mov
stos
adc
and
cmpsl
test
out
xchg
js
xor
daa
shl
je
dec
mov
fs
xlat
aam
dec
xchg
adc
inc
ljmp
dec
jns
ja
jl
add
add
stos
jne
pusha
outsb
shll
or
pusha
jns
pusha
adc
fisttpll
pop
inc
test
cmp
push
hlt
xchg
bound
add
mov
jo
cmpsb
movsl
adc
lods
faddl
jmp
pusha
sbb
cli
ss
clc
ss
orl
dec
adc
in
aaa
cld
jae
aaa
xlat
mov
inc
mov
push
leave
shl
add
add
pop
cmp
ret
testb
repz
scas
decb
popf
cld
or
sbb
or
sarl
xchg
lcall
push
cmp
test
mov
sub
and
adc
adc
shll
test
lock
fcmovnbe
and
jmp
popa
adc
mov
cmp
mov
xlat
jmp
mov
out
std
aam
add
add
sbbb
jb
xor
add
and
sbb
adc
std
lods
nop
mov
xlat
or
xchg
mov
lret
xchg
mov
test
mov
push
movsl
adc
mov
and
mov
out
jbe
outsb
or
fisubrl
rol
fldenv
das
rcll
inc
test
add
pusha
pop
movsl
or
in
push
sbb
sbb
insl
add
mov
clc
loopne
mov
pop
stos
cltd
outsl
and
adc
adc
and
testb
fnstcw
ret
lds
xor
or
fsubl
jb
clc
cmp
add
mov
rcll
xchg
ljmp
xor
ret
scas
pop
iret
cltd
add
cmp
fscale
aam
movsb
cltd
call
push
adc
push
inc
ret
sarb
inc
jmp
add
out
fwait
clc
sbb
xor
push
jo
ds
das
xchg
shld
sbb
push
or
inc
pop
pushl
insb
pusha
jmp
mov
add
arpl
mov
sahf
cmpsl
push
cltd
inc
adc
jle
nop
subb
and
inc
cmp
shll
push
call
jge
xchg
cmpsl
and
js
adc
fldl
cmp
adcb
add
add
outsb
sarb
aas
lods
fwait
imul
and
mov
mov
push
xchg
xor
ret
cmp
dec
adc
aad
addl
and
repnz
cmp
aam
inc
icebp
jecxz
sbb
cmpsl
push
clc
jecxz
addr16
mov
mov
xor
fbstp
jbe
outsb
and
or
cmp
cmp
loope
add
xor
lods
pop
xor
rorb
cld
pop
cmpsb
cwtl
push
jnp
fistpll
enter
jl
test
push
mov
jg
pop
rolb
xor
cwtl
lret
addr16
pop
scas
cmp
mov
lret
inc
xor
pop
mov
std
outsb
inc
scas
mov
pop
inc
push
pop
out
cmp
push
or
mov
pop
add
test
dec
mov
nop
and
or
lret
jmp
ret
jmp
daa
outsw
cs
mov
add
nop
dec
ret
popf
push
mov
inc
adcb
imul
and
or
bound
iret
shrb
int3
call
cmp
and
addr16
xchg
add
add
mov
dec
push
out
cmp
xchg
adcb
lcall
push
sub
mov
xor
int3
test
aaa
mov
movsl
or
jnp
sub
repnz
hlt
sub
xchg
pusha
and
xlat
xchg
rclb
repnz
inc
outsb
shrl
out
faddl
mov
xor
sub
add
sbb
adc
std
dec
cmc
test
lock
mov
add
les
nop
out
push
nop
lods
mov
xchg
cmp
xchg
cmp
push
mov
xchg
lods
fidivrl
jno
stc
xor
push
ja
jo
stc
mov
mov
std
xchg
mov
pushf
test
xchg
mov
loopne
or
rcrl
sub
jne
hlt
movsl
jae
mov
dec
data16
test
jo
leave
icebp
lods
ss
scas
repz
mov
xor
and
sbbl
and
mov
jno
fmul
jl
jo
push
invd
mov
push
jle
xor
pushf
addb
push
mov
cwtl
fsubrl
mov
leave
fs
push
cwtl
aam
mov
sbb
out
addl
enter
inc
mov
insl
and
popa
inc
test
std
push
cmpsl
js
out
jecxz
lods
icebp
lea
xchg
std
and
inc
jge
sbb
movsb
data16
jp
pop
fsubs
scas
aad
inc
push
mov
fdivr
loop
jl
sbb
lcall
in
mov
ficompl
outsl
scas
cmc
mov
bound
jp
aad
pop
repnz
cmp
popfw
jns
mov
nop
dec
test
roll
call
mov
ja
xchg
fildl
dec
dec
jbe
clc
add
pop
dec
inc
jnp
dec
stc
mov
jb
aas
and
test
aad
mov
jb
xor
push
addb
test
mov
mov
mov
repz
and
stc
jg
gs
sbb
jb
pop
vmaxps
push
cwtl
mov
mov
push
add
jmp
mov
mov
jecxz
outsl
jg
inc
pop
mov
dec
dec
les
leave
push
scas
ja
insl
xor
xor
and
push
insl
xlat
aad
repz
mov
pop
scas
or
cmpsl
pushl
orb
mov
test
leave
pop
dec
je
stos
cmp
sbb
xchg
rclb
add
pop
incb
push
aam
inc
sub
mov
mov
sbb
pop
pushf
insl
sarl
adc
fmull
and
add
popf
jecxz
jbe
add
mov
xchg
sbb
jns
mov
sub
pop
jp
add
push
sbb
lahf
and
adc
jecxz
adc
mov
mov
lods
cwtl
add
mov
jle
inc
jp
cmp
test
mov
add
add
mov
lods
sub
push
inc
jg
lret
les
popa
jmp
mov
push
mov
jnp
xor
cwtl
jmp
mov
sub
push
add
sti
es
xchg
in
loope
das
call
and
cs
movsl
pop
cmc
sub
mov
lds
mov
add
lods
xchg
xor
mov
ja
shll
mov
loop
scas
inc
push
cs
adc
inc
rcr
aad
xor
jp
pop
sarb
and
sahf
ljmp
je
enter
inc
test
xchg
fidivrs
lret
push
sbb
imul
arpl
data16
push
fucomi
xor
mov
call
pop
outsl
pop
and
aad
add
xchg
xchg
adc
jae
cmp
insb
cmp
add
cmpsl
in
aam
or
loope
movsl
sti
mov
adc
fs
mov
xor
pop
imul
xchg
in
mov
sub
daa
dec
test
sbbb
das
push
or
js
adcl
pop
adc
inc
or
mov
add
xchg
xor
lods
int3
sub
js
fadds
xlat
test
dec
or
add
cmovl
aas
nop
pop
adc
jg
push
inc
iret
loop
pop
push
inc
test
inc
ret
scas
jg
scas
mov
insl
fs
shrb
lret
aad
xor
std
xor
popf
and
and
pop
push
mov
scas
out
lock
dec
or
fldt
jbe
aad
aas
mov
push
mov
sbb
das
jb
sbb
lds
mov
push
repz
mulb
shrl
xor
dec
pop
adc
add
aam
mov
int
int3
push
arpl
call
or
int3
add
sbb
lea
test
je
pop
sti
in
repnz
and
xor
and
insl
xchg
dec
cmp
and
push
fwait
popa
imul
rcll
xlat
inc
in
xor
shrl
or
rclb
adc
fldcw
out
outsb
inc
lret
fwait
cli
fdivrs
mov
iret
stos
mov
repnz
push
pop
push
jle
js
mov
seta
shrb
pop
call
mov
sub
mov
cli
cltd
inc
cmp
and
inc
mov
aas
icebp
mov
add
cmp
inc
mov
mov
mov
loop
sub
pop
xchg
leave
or
jae
mov
push
inc
mov
fdiv
in
push
in
adc
inc
push
lea
add
add
cltd
fcoms
in
inc
push
orl
push
sbb
es
sbb
cmp
icebp
rolb
in
sub
insb
jmp
cs
mov
push
sub
inc
pop
push
shlb
jne
adc
push
xor
sbb
test
repnz
sub
movsb
push
scas
sub
mov
sbb
dec
jl
add
cld
sbb
adcl
jno
out
or
or
loope
xchg
arpl
fisubrl
sub
movb
sub
jmp
shlb
fdivl
cmp
cld
mov
cwtl
pushf
inc
rorb
sbb
inc
sub
ljmp
leave
ss
sahf
je
popf
in
sub
mov
imul
sarl
add
add
add
add
mov
scas
daa
jb
mov
int
lea
prefetch
or
insb
lret
dec
imul
lock
jecxz
rol
stos
xchg
xchg
lods
fldl
loop
pusha
xor
nop
test
inc
imul
jns
mov
xor
add
jmp
lahf
mov
jl
mov
inc
xchg
pop
inc
add
add
scas
cmp
and
test
xchg
into
aad
jae
fsubrs
mov
cli
mov
adc
mov
pop
cmpsb
ds
sbb
js
fnsave
mov
xchg
xchg
addb
test
mov
pop
sub
inc
jg
jp
sub
ret
dec
icebp
movsb
mov
outsb
pop
xchg
shl
gs
lahf
pop
test
leave
xchg
ret
imul
or
dec
ja
add
out
stos
mov
xchg
push
push
sub
xchg
mov
addb
scas
cmp
movsl
pop
jnp
movsl
loopnew
adc
mov
inc
sarb
ret
fbld
rorb
in
fisttps
adc
and
pop
sub
xor
and
jae
ljmp
out
lds
dec
mov
repz
cmpsb
or
js
mov
mov
xor
mov
add
jge
xchg
xor
mov
lods
js
pop
in
rcll
add
loop
lods
ja
push
inc
jne
fbstp
xor
mov
shlb
mov
adc
bound
inc
or
fldl
dec
aas
mov
dec
xchg
popfw
cmp
outsl
pop
pop
ret
adc
cwtl
aam
imull
push
hlt
imul
cmpsb
loop
push
nop
sahf
sub
inc
cwtl
aas
loopne
add
dec
jecxz
inc
inc
repnz
or
aaa
aam
xchg
std
push
add
enter
mov
inc
mov
movsl
sbb
xor
push
hlt
fnstcw
mov
vandnpd
push
lret
cwtl
fistl
mov
ljmp
add
sub
test
ljmp
icebp
movsb
fiaddl
fldt
jecxz
iret
and
hlt
add
add
push
stc
dec
and
cmp
sub
in
es
adc
pop
adc
js
cmp
out
loop
mov
movsb
out
test
lock
cltd
sub
out
cltd
mov
in
andb
fimull
xchg
mov
sbb
out
test
xor
fwait
sar
push
ljmp
test
lahf
repz
std
jp
ret
lods
pop
mov
xor
jnp
int3
ja
cld
mov
xor
sub
addb
dec
mov
loop
push
pop
adc
ficoms
ja
stc
ja
cmp
mov
pop
mov
outsl
imul
out
pop
ljmp
in
scas
xchg
lds
xchg
jmp
fstps
pop
cmp
xchg
xor
mov
push
ja
ss
adc
add
inc
aam
xchg
push
push
mov
loopne
sbb
cmpsl
jo
jo
test
dec
mov
adc
dec
jp
scas
lea
aaa
add
ja
subl
dec
ficomps
dec
lcall
mov
std
adc
cmc
add
xchg
adc
mov
stc
cmp
add
push
mov
clc
jp
dec
or
rcll
les
and
inc
rolb
adc
xchg
push
mov
gs
jae
fistps
mov
outsl
nop
pop
jecxz
out
adc
movsb
lods
mov
add
loop
leave
iret
aad
mov
and
leave
lods
ret
mov
push
aam
sbb
add
cmpsb
les
push
push
cmp
sbb
ljmp
or
mov
jne
pop
arpl
dec
imul
and
mov
jno
sbb
or
xor
imul
push
pop
jbe
orl
incl
xor
aas
mov
sbb
push
sti
sbb
or
addr16
adc
imul
add
add
lds
jmp
ja
test
pop
and
cld
xchg
aad
push
add
and
rorb
xchg
test
into
mov
sbb
ret
icebp
mov
mov
enter
adc
inc
into
out
idiv
loope
fdivs
push
jbe
xchg
mov
cli
sar
pop
fucom
cs
inc
jmp
in
pop
call
outsb
mov
sub
outsl
negl
test
xlat
push
int
add
mov
jg
cwtl
aaa
pop
add
push
sub
cmpsb
mov
fs
add
add
test
rorb
sub
ss
fidivrl
fistl
sahf
repz
ss
cmp
pop
in
cwtl
dec
or
push
pop
push
insl
mov
cmc
push
cmpsb
mov
imul
hlt
das
mov
shl
stc
shll
cli
out
lods
mov
xor
int3
cmc
xchg
cmpsl
jmp
push
push
xor
out
data16
fsubrs
xchg
leave
sbb
add
xchg
adc
add
xor
aaa
dec
out
mov
imul
repz
nop
dec
lea
mov
dec
push
test
and
adc
or
dec
jge
jnp
pop
mov
xchg
push
jns
pop
gs
outsl
das
loopne
fwait
and
scas
rcl
inc
jnp
add
push
fwait
outsb
jne
outsb
and
push
cli
pushf
add
add
dec
xor
and
int3
imul
xor
clc
lods
add
pop
mov
push
jmp
scas
sbb
sarl
inc
mov
pop
push
rolb
outsl
jge
incb
std
bound
xlat
mov
lock
jne
mov
ficoml
test
movsb
pop
cs
mov
cmp
ss
add
inc
cld
add
pop
outsb
and
inc
xacquire
orb
mov
pushf
lock
pop
lods
aaa
out
call
ss
mov
mov
mov
sub
add
movsl
popa
ficoml
xchg
lcall
shll
fs
jne
fidivrl
cld
ret
push
add
add
add
pop
jb
cmp
movsb
push
sbb
aaa
jg
xor
and
inc
cli
into
add
dec
xchg
or
sub
cs
jp
pusha
loop
xor
fstps
out
push
dec
je
lcall
cwtl
cli
cmc
push
add
xor
mov
out
insl
dec
loopne
dec
popf
test
mov
dec
es
imul
cltd
loop
int3
cmp
rorb
mov
jb
nop
xlat
add
xor
aad
inc
test
mov
lods
and
push
int
inc
cmpsl
clc
inc
enter
rol
dec
das
or
pop
push
or
jno
mov
jmp
pop
cwtl
pop
mov
mov
xchg
cld
jecxz
inc
inc
jge
mov
lahf
mov
test
fbld
iret
sbb
sub
sub
arpl
sbbb
lds
sbb
or
les
sub
push
jge
lods
fbstp
fldcw
out
pop
adc
or
mov
lods
jle
je
jnp
mov
or
shrl
sbb
adc
push
lcall
sbb
in
imul
adc
lods
mov
cltd
inc
pushf
hlt
mov
push
adc
pop
hlt
movsb
cwtl
inc
pop
jg
mov
jns
jno
push
ret
sbb
stc
fistpll
cmpl
mulb
icebp
xchg
jns
dec
mov
call
or
jno
add
rcrb
subl
mov
mov
inc
adc
shlb
aad
sub
xchg
inc
jb
out
scas
imul
push
adc
push
adc
push
xchg
adc
push
mov
pop
fidivrs
cmc
pop
push
or
mov
jmp
repnz
sub
test
mov
fs
fldcw
xlat
scas
xlat
adc
in
jb
lds
out
bswap
sbb
add
ljmp
fadd
mov
jbe
sbb
aad
inc
or
lods
mov
add
scas
sub
ficompl
mov
jp
mov
pop
rcr
dec
fmull
daa
mov
mov
loope
mov
push
pusha
stc
in
int
nop
or
xchg
ret
insb
ss
jecxz
out
popa
ja
es
icebp
sbb
inc
dec
incb
add
mov
cmp
inc
jmp
dec
push
mov
nop
push
push
add
add
scas
xor
xchg
pop
sbb
cld
movsl
push
rclb
sahf
lods
sub
xor
aaa
xor
test
lret
stos
dec
rorb
or
lahf
inc
lret
lret
mov
mov
ss
mov
aas
enter
pop
dec
lret
pop
out
stc
inc
push
and
rcr
inc
test
out
jnp
outsb
jne
add
cltd
push
push
mov
xorl
call
dec
bnd
sarl
inc
lock
sub
dec
xchg
xchg
icebp
addr16
xor
in
decb
xor
push
scas
pop
pushf
add
push
jae
adc
mov
sub
jp
add
incb
aaa
dec
pop
int
jge
adc
int3
inc
or
jns
mov
repnz
add
add
fsubrs
call
sub
lahf
mov
mov
jo
testl
xchg
adc
decb
jne
addr16
das
adc
xor
and
sbb
rcrl
pop
ja
xor
push
flds
add
inc
push
or
push
leave
add
jbe
pop
into
pop
and
testl
sub
test
fimull
les
sti
in
popf
outsl
pop
jmp
aad
and
in
dec
pop
aam
cmp
mov
lahf
int
movsb
test
incb
imul
in
loop
adc
in
pop
js
punpckhwd
sub
push
jnp
cmp
push
mov
sti
inc
push
shrb
cwtl
dec
mov
fwait
jne
out
push
mov
and
mov
lds
cmp
aam
lock
cmpl
popa
btc
addr16
and
pop
stos
subl
xchg
clc
into
push
add
push
sarb
jmp
xchg
loope
and
lahf
or
ss
xchg
pop
jne
sbb
movsb
jg
mov
jne
pop
jae
sbb
lcall
cwtl
sbb
jnp
dec
decb
sub
scas
rcr
fwait
test
sub
mov
xchg
outsl
sub
jl
mov
xor
outsl
and
fwait
inc
inc
and
fidivrl
in
add
and
in
hlt
pop
aad
jnp
gs
enter
in
jle
jp
adcb
and
popa
popl
or
sti
xchg
cmp
sbb
mov
lds
ljmp
mov
ja
fdivs
ljmp
call
push
inc
add
xorl
scas
xor
add
add
add
add
dec
inc
pop
test
inc
mov
rorb
adc
xor
shrb
in
mov
or
mov
jbe
cld
or
mov
mov
clc
daa
daa
xlat
iret
mov
jno
and
andb
mov
repz
mov
daa
lods
adc
xchg
mov
add
add
popa
push
jns
shll
and
loopne
movsl
mov
lock
mov
fwait
outsb
and
mov
cmp
adc
mov
jbe
fxam
in
cmp
mov
push
stos
cmp
xchg
xchg
xor
or
data16
mov
mov
sub
cs
xchg
fldl
dec
imul
jmp
loope,pt
and
add
add
test
int3
fdivl
mov
es
clc
xor
sub
pop
in
insl
xor
cli
std
shrl
inc
mull
into
add
mov
mov
cli
add
insb
pop
int
jmp
push
fistl
fstpt
popa
and
or
sub
dec
bound
and
cmpb
and
mov
add
add
add
add
addr16
xchg
xor
in
loope
rclb
push
subl
sub
lock
push
xor
jecxz
in
popf
inc
loope
out
ss
inc
push
xchg
dec
dec
dec
lds
imul
mov
push
mov
test
dec
movsb
cli
or
hlt
inc
inc
jnp
shl
popf
clc
and
sbb
scas
mov
out
push
add
js
sbb
cli
sub
cmc
or
mov
test
hlt
jle
push
addl
cli
test
add
loope
mov
or
xchg
push
or
xchg
xchg
adc
cmpsb
sbb
or
fildll
call
add
rorb
repz
hlt
or
cmp
stc
ret
mov
adc
ss
mov
pop
sarl
add
mov
and
mov
xor
cmpsb
fwait
test
xchg
aas
push
lcall
repnz
js
pop
pushl
rorl
lcall
iret
lock
dec
ja
mov
adc
push
dec
test
rclb
ret
pop
cmp
jle
sub
push
lret
and
shrl
lret
fimull
sub
adc
inc
pop
insb
and
mov
sarl
cwtl
mov
inc
jo
add
arpl
jp
jbe
sub
jnp
xchg
fildl
std
mov
cld
mov
lock
sti
out
addr16
pop
cld
imul
cli
sbb
mov
int3
push
ja
std
mov
xchg
mov
repz
sbb
dec
push
pop
loope
pop
and
stc
sub
or
pusha
jo
dec
ret
andb
pop
jbe
pop
cmp
scas
repz
mov
data16
pusha
jae
out
xorb
gs
add
sub
add
ds
aaa
insl
cmp
data16
cli
add
push
scas
loop
mov
add
test
pop
test
vmaxsd
mov
jns
testb
fsubrs
mov
movsl
push
xlat
test
imul
inc
add
xchg
ret
imul
pop
mov
scas
out
fbld
in
cmc
or
add
out
pop
stc
sub
mov
pop
pop
dec
sub
push
lahf
movsb
fcomp
test
test
jmp
stos
xchg
xlat
adc
loope
xlat
dec
outsl
pushl
test
sahf
mov
adc
aas
pop
xchg
pop
xor
outsb
sahf
xor
mov
js
xor
lret
divl
push
out
out
scas
lock
jg
pushf
push
xchg
sub
push
out
lret
imul
add
add
lods
fs
xor
das
lock
imul
xor
movsb
and
adc
push
mov
fcom
popf
fldcw
xorb
dec
jmp
ja
mov
mov
mov
mov
mov
jp
testb
cs
ret
hlt
mov
mov
das
xor
or
pop
xchg
and
inc
jo
add
pusha
mov
jb
dec
repz
and
cmpsl
cld
das
mov
and
pop
xchg
addl
daa
shrl
or
inc
push
push
cmp
pop
mov
push
loope
add
push
xchg
ret
mov
pop
pop
sarl
dec
xchg
ja
mov
pop
adc
mov
shl
fnsave
outsb
stos
push
mov
pop
xchg
pop
jbe
add
add
stos
xchg
cmp
and
repz
jmp
lock
mov
inc
or
out
cmp
xchg
std
js
int3
xor
icebp
push
inc
jns
lock
mov
or
jo
push
sub
jne
imul
sub
mov
jo
adc
sbb
jo
xor
pop
stc
xchg
vrsqrtss
dec
movsl
hlt
mov
or
inc
sub
mov
inc
icebp
adc
lds
add
ret
loope
sub
sbb
push
pop
or
mov
cld
push
cld
jnp
orl
and
lret
repnz
jne
lds
dec
in
push
adc
bound
cmpsl
movsl
pop
xor
ja
sbb
sub
dec
out
jmp
push
or
in
sahf
ljmp
test
push
cli
stos
mov
add
add
xor
in
scas
dec
ret
adc
loopne
pop
addb
popf
mov
and
shll
cli
fidivl
out
push
or
mov
fnstenv
or
pop
inc
mov
aaa
loope
sub
test
clc
xchg
out
test
xchg
and
xchg
mov
add
add
add
xor
jle
cmp
sbb
pop
ss
test
adc
adc
xchg
inc
mov
inc
lea
mov
fsubr
cmpsl
das
js
popf
arpl
inc
sahf
repz
push
xorl
int
lock
loopne
outsb
adc
hlt
push
xlat
pop
pop
lcall
lahf
pop
sahf
cltd
lock
pop
xchg
jns
jl
xchg
cmp
xor
lret
add
outsb
in
add
and
add
loop
cmp
inc
sbb
mov
orl
xor
repz
loope
mov
out
daa
push
cli
push
rorb
inc
aaa
scas
sub
daa
mov
imul
ss
mov
fistpl
mov
inc
push
test
leave
sub
mov
push
mov
ljmp
nop
das
dec
aaa
fwait
lret
mov
or
scas
lods
aad
imul
aas
std
mov
outsl
mov
fistpll
les
mov
stos
cld
test
mov
inc
icebp
lret
pop
sub
mov
mov
lds
add
add
add
add
test
sbb
aad
and
lcall
shrb
test
push
pushf
into
movsb
jnp
add
arpl
call
mov
add
jl
pop
add
mov
test
out
je
cmp
insl
inc
sub
mov
mov
and
fidivs
add
add
add
addb
inc
mov
xchg
cmp
pop
xor
dec
neg
arpl
inc
in
in
pushf
pop
pop
and
rcl
pop
pop
push
xor
rorl
or
push
mov
jne
testl
xor
addr16
or
imul
in
pusha
jmp
pushf
div
test
dec
dec
loope
push
jl
imul
fcom
sbb
jecxz
push
pop
repnz
subl
adc
outsb
je
mov
jne
add
push
inc
mov
push
nop
test
jo
and
mov
add
sub
inc
scas
icebp
ljmp
sub
xchg
adc
fmuls
pop
push
push
or
mov
mov
std
outsb
in
sahf
push
mov
push
dec
xor
insl
inc
sbb
add
push
pop
adc
sbb
xchg
inc
cmp
cmp
stos
jmp
outsl
in
adc
lcall
cwtl
push
push
loopne
sbb
add
sub
repnz
addb
cmpsl
sub
cmp
cld
adc
es
stc
orb
ja
inc
decb
jg
sbb
lahf
ret
es
arpl
add
outsb
lods
fs
fisttps
adc
lock
pop
addr16
xchg
pop
data16
repnz
gs
mov
dec
jecxz
addr16
cmp
js
mov
push
rorb
jmp
ret
rclb
push
mov
dec
cli
mov
jae
mov
xor
leave
mov
jg
sti
sbb
fnstsw
or
pop
dec
out
cmc
mov
out
xchg
lahf
mov
xchg
lock
add
xchg
pop
add
pop
popa
xchg
pop
insl
xor
fwait
xor
or
dec
inc
in
int3
iret
jmp
push
adc
mov
fildl
sbb
or
push
mov
cmpsb
out
add
daa
std
cmc
and
pop
xchg
dec
insl
aas
push
cs
out
cmpsb
je
fsubrs
adc
les
sbb
fwait
inc
addr16
inc
loop
mov
icebp
and
add
add
add
mov
rorl
mov
dec
cmp
scas
and
in
mov
push
ss
inc
fs
cmp
xchg
out
and
sbb
inc
mov
out
cli
pushf
stos
cld
stos
sub
jmp
fdivrs
sub
mov
lcall
je
push
xchg
dec
jl
mov
jne
xchg
sti
jb
sub
ja
sbb
dec
repz
add
add
inc
pop
cmp
jg
mov
push
mov
ffree
out
mov
lcall
clc
mov
add
and
aam
out
jp
in
add
sarl
loopne
lahf
mov
stc
test
js
fisubl
push
sahf
pop
mov
mov
je
ljmp
add
add
push
or
dec
movsl
cmp
inc
xor
das
in
test
outsl
sbb
outsb
or
cmp
rcll
lcall
bound
popa
or
xchg
push
jb
pusha
sarl
daa
movsl
divl
aam
xor
aaa
mov
sbb
popf
aam
xchg
out
and
movsb
adc
cwtl
sahf
in
sub
je
jae
add
pop
mov
jge
stc
sub
out
andb
add
jns
loop
fpatan
addr16
mov
notl
int
pop
insl
lods
pop
push
mov
or
sbb
orb
mov
dec
push
adc
xchg
jmp
mov
fwait
or
push
ja,pn
jge
mov
pop
lahf
and
outsb
lds
pop
call
dec
rolb
out
cwtl
mov
lods
sbb
daa
push
adc
add
add
push
inc
mov
adc
outsb
mov
into
subl
lcall
daa
sbb
adc
pop
movsl
loope
xchg
cwtl
mov
sub
pop
lods
fnstsw
loop
dec
arpl
mov
sub
mov
ljmp
add
add
add
jne
roll
jbe
icebp
xor
mov
cli
js
imul
push
add
loopne
mov
popw
pop
push
pop
adc
fcom
jb
cmpsb
loop
cld
adc
mov
mov
repz
add
or
icebp
inc
mov
dec
sbbb
out
xchg
pop
jne
mov
imul
jmp
inc
fiaddl
inc
jl
jnp
jl
jg
cmp
lods
call
jne
ficoms
inc
sahf
dec
ret
rclb
sbb
xor
mov
jbe
inc
sbb
jle
jbe
pop
ds
shlb
test
ljmp
filds
inc
mov
inc
leave
mov
pop
arpl
leave
ljmp
idivl
and
outsl
cmp
jmp
lea
imul
addl
jle
pop
sahf
das
sub
mov
add
repz
add
out
mov
mov
adc
xchg
mov
dec
ljmp
mov
pop
or
cmp
adc
sbb
and
push
add
pop
sub
movsb
mov
aas
push
sbb
out
testb
repnz
imul
ss
insl
clc
mov
sbb
mov
decl
dec
mov
mov
add
insb
adc
mov
add
insl
cmpsb
sub
sarb
mov
mov
mov
inc
xchg
cli
adc
mov
movsb
decl
enter
insl
dec
xor
cmp
pop
or
scas
jg
sub
ja
shl
pop
xchg
in
fistps
scas
push
insl
stos
lahf
cmpsb
jl
dec
outsl
xchg
lret
mov
sbb
add
popa
add
jp
outsb
xchg
popf
sbb
jb
fwait
and
faddp
clc
and
mov
icebp
rolb
jp
imulb
jb
push
sahf
fisttps
jae
push
xor
xlat
xchg
outsl
inc
xchg
xchg
mov
arpl
std
dec
insl
mov
stos
jo
mov
in
cld
hlt
cltd
int
jecxz
mov
in
ds
mov
xchg
mov
sub
imul
add
rcl
cs
cmpsb
or
jge
in
stos
adc
mov
add
int3
mov
xor
ja
xchg
add
incb
sub
add
fnstenv
inc
dec
stos
adcl
sarl
dec
in
push
popf
xchg
mov
cmp
out
out
or
pushf
cmc
sub
in
mov
mov
lcall
push
sbb
iret
sub
lret
inc
adc
into
mov
sahf
movsb
sub
xor
pop
test
sbb
and
and
cmp
push
cmc
jecxz
das
lds
arpl
inc
adc
sbb
lret
cmpsl
aaa
lret
jae
mov
mov
loop
pop
mov
pop
shrb
cmp
imul
add
jmp
in
fsub
and
js
jne
jns
jno
sub
scas
inc
fidivrs
hlt
es
cmp
cmp
pop
sub
test
push
mov
loop
push
loopne
sahf
cmpsb
xor
les
test
jno
dec
xchg
cltd
sub
xchg
pop
int
stc
fimuls
jecxz
jg
das
int3
scas
loope
lcall
dec
pop
popf
push
sti
ds
pop
xlat
test
push
mov
gs
add
add
call
rcrb
xchg
lcall
xchg
inc
lods
stos
mov
mov
scas
xchg
ror
test
jle
loope
inc
xchg
and
imul
adc
insl
imul
pop
es
out
add
pop
pop
mov
inc
mov
pop
imul
mov
and
mov
scas
cmpsb
mov
push
or
push
inc
sbb
push
imul
pushf
xchg
bound
or
les
jne
xchg
cmp
aaa
int
and
cmp
mov
sahf
jbe
sbb
insl
sar
add
push
pushf
lods
and
sub
mov
fildll
sbb
and
rcr
ret
mov
jbe
fwait
stos
push
test
inc
sub
jns
in
jnp
leave
pushf
push
push
dec
xchg
jecxz
inc
addl
mov
int3
xor
mov
dec
jns
dec
mov
xor
add
dec
inc
das
pusha
inc
cs
mov
fmuls
fcomps
pop
sahf
cmp
and
shll
js
or
cli
xchg
sbbb
push
out
ljmp
jne
and
ds
imul
mov
sub
gs
stos
add
js
add
sbb
in
pop
iret
call
or
int
aas
xor
xor
dec
loope
jb
iret
in
adc
add
add
jp
jo
pop
cmp
test
cld
sahf
je
stos
jo
push
lock
adc
sub
aad
push
stos
jl
mov
or
push
stc
push
inc
das
push
out
mov
dec
push
fsubrs
shr
iret
leave
mov
je
lods
mov
sub
out
lret
mov
insb
push
mov
cli
inc
xor
sar
scas
inc
adc
mov
aam
stc
xadd
cmp
adc
popf
stos
mov
sbb
pop
or
mov
inc
inc
icebp
jl
jmp
mov
icebp
negl
push
popf
movsb
xchg
imul
and
pop
fwait
iret
pusha
pop
xor
push
jge
es
das
or
sub
popf
loope
cmp
sub
add
cmc
inc
add
fsubrp
dec
adcl
in
mov
test
sbb
out
mov
test
punpckhwd
cmc
cmc
mov
test
xchg
push
fiadds
gs
pop
push
lret
fsubr
sub
mov
xlat
mov
jae
sbb
xchg
mov
test
out
add
mov
or
and
lds
lock
pusha
cwtl
mov
xor
aam
insb
js
shrb
hlt
scas
or
and
jge
lret
jno
lcall
add
add
das
xor
push
pop
add
lock
testl
jge,pt
in
sbb
out
push
out
xchg
jb
push
addl
outsl
pop
out
jb
es
cmp
dec
loopne
pop
stos
in
cld
outsb
sahf
movsb
aad
push
test
fimuls
shrb
jb
call
lods
aam
add
imul
xor
repnz
mov
fstps
outsl
fs
lock
rclb
sbb
jl
std
inc
add
cmpsl
negl
push
xor
add
push
inc
cmpsb
mov
outsb
in
adc
mov
mov
fcmovnbe
or
test
jae,pn
fdiv
psllw
mov
test
push
not
lret
push
adc
sub
lret
xor
out
jg
movsl
push
ret
mov
js
scas
daa
xlat
iret
dec
leave
dec
fs
mov
or
push
lds
xlat
out
inc
push
mov
mov
std
sbb
add
mov
js
jo
jns
mov
loopne
mov
aam
dec
lock
test
gs
mov
sbb
jecxz
adc
stos
movsb
pusha
cld
ja
inc
mov
rorl
incl
cmp
and
or
fisttpl
lahf
cltd
call
gs
or
add
dec
cmp
je
repz
adc
and
inc
movb
add
ret
sarl
pop
sub
mov
cmpsl
repz
mov
lods
push
lea
ficompl
add
aam
out
pushf
xchg
daa
dec
insb
sbb
subb
insb
fistl
or
ret
mov
bound
rorb
daa
jb
xor
ja
lods
xlat
mov
jne
imul
or
iret
repz
push
cmp
in
pop
inc
lret
cwtl
push
jecxz
ljmp
in
sub
mov
pop
or
clc
fidivs
cmpsl
cmp
insb
out
dec
ret
push
fistpll
inc
push
xchg
sbbb
imul
fcmovnbe
rcll
jge
jbe
scas
push
loop
icebp
aaa
lods
xorb
lods
and
aam
inc
not
scas
cmp
jno
mov
lods
insl
enter
out
jne
pop
jmp
xor
add
xchg
dec
mov
shll
push
or
push
push
push
jo
pop
in
sbb
mul
mov
xchg
jl
into
xchg
rolb
jbe
stos
xchg
xchg
cwtl
call
lods
aam
xor
fistps
push
xor
in
cwtl
lds
mov
push
cs
aad
pop
cmpsb
in
clc
mov
pop
shlb
sub
inc
cmpsb
mov
sub
lods
loop
add
ss
xchg
lret
add
roll
repz
jb
outsl
push
or
out
mov
dec
sub
dec
add
mov
lds
pop
bswap
and
int
jge
or
popa
mov
test
fadd
pop
cmp
test
cmp
fisttpll
lods
inc
sub
jl
push
ja
pop
xchg
or
sbb
hlt
add
lock
cwtl
jmp
cs
mov
adc
hlt
mov
xchg
pop
ds
xor
rcrb
popa
in
jae
out
xchg
int
sub
cmp
out
xchg
xor
jne
test
mov
call
dec
and
sbb
int3
aam
vphaddbq
jecxz
mov
xchg
mov
mov
scas
pop
aaa
sti
jmp
pop
mov
xor
pop
dec
xchg
popf
cwtl
jnp
adc
imul
add
add
inc
mov
es
cld
sub
out
fnstenv
movsb
xlat
push
divb
stos
xchg
rcrl
pop
mov
jnp
or
pop
out
inc
push
mov
stos
dec
enter
mov
dec
movsb
push
dec
jmp
push
push
adc
mov
insl
stos
ficompl
jae
fildl
test
dec
aas
lret
nop
rol
sub
xor
push
cmp
sub
jecxz
ret
push
mov
dec
and
int
fbstp
test
add
lret
dec
data16
daa
test
in
rorb
lahf
test
mov
int
bound
mov
push
enter
imull
sub
cmp
push
add
dec
dec
push
or
mov
cs
or
sbb
push
lds
lret
cmp
dec
cmovnp
cmp
and
mov
adc
je
sub
call
push
add
mov
outsl
pop
push
orl
mov
adc
cmp
pop
lods
repnz
pop
negl
or
xor
mov
adc
mov
sbb
imul
movsb
mov
pushf
arpl
je
push
and
inc
mov
test
jle
mov
aad
push
frstor
sub
mov
mov
das
mov
push
push
sbb
ss
dec
popl
push
inc
rolb
jbe
stos
mov
push
enter
add
add
or
fidivrs
add
aam
add
xchg
adc
movsb
iret
inc
push
subb
outsb
push
adc
adc
aas
orl
int3
out
or
rcr
stc
out
js
mov
js
sahf
pop
add
fists
test
xchg
imul
into
sbb
jns
sub
inc
add
fiaddl
dec
test
lahf
push
ja
lods
shlb
rolb
add
mov
out
sbb
cli
push
pop
pop
out
loop
xchg
cmp
lods
jp
testl
mov
lds
ss
pop
and
out
jp
sbb
outsb
jl
push
sarb
inc
mov
pop
cmc
cmp
cmp
push
pop
test
jecxz
pushf
sbb
mov
push
push
push
add
adc
pop
jbe
sbb
movsb
jp
inc
push
pop
leave
xchg
push
pop
dec
out
jl
adc
jbe
fld
leave
jne
xchg
dec
rorb
mov
daa
mov
or
lods
inc
icebp
out
cs
outsb
movsl
stos
add
xor
lret
mull
aam
sub
xor
mov
push
pop
jns
repz
lods
rorb
jg
loop
shl
gs
mov
lods
lods
into
test
add
cmc
cmc
push
outsb
les
pop
mov
jle
jnp
mov
cmp
cmp
mov
or
fldenv
jae
push
packuswb
leave
push
jo
push
std
fisubrl
push
add
and
les
xor
push
fbstp
dec
push
test
cltd
jle
mov
cli
das
cli
int
adc
mov
scas
jnp
push
pop
fs
adc
daa
push
js
jle
sub
jb
mov
sbb
outsl
mov
add
xor
popf
push
aaa
add
sahf
add
cmp
add
fsubl
pop
sahf
adc
inc
ss
dec
adc
fcmovnu
sub
cmp
movl
inc
fcoml
mov
stc
mov
sti
fwait
sbb
inc
ret
pop
ja
sbb
mul
sti
jae
add
add
add
add
add
and
in
out
pmullw
ds
and
mov
add
in
or
push
lret
dec
nop
loopne
lods
mov
adc
in
das
cmp
stc
xchg
ss
fs
shll
stc
loop
dec
lock
divl
adc
or
mov
ret
sub
imul
xchg
pop
repz
mov
jb
sarb
add
adc
or
insl
add
adc
popa
jb
nop
mov
add
xor
sahf
in
subl
mov
outsb
out
jge
movsl
inc
loope
sbb
xchg
clc
scas
in
cwtl
push
in
lock
loop,pt
push
add
xlat
fisttpl
je
stos
sub
sbb
mov
push
inc
and
add
xor
repz
lret
jmp
test
insb
dec
fmuls
xor
enter
dec
jb
jne
xlat
adc
xchg
mov
shr
rol
mov
mov
adc
push
cmp
pop
sbb
cmp
fsub
movb
dec
sub
aad
cmp
push
into
sbb
mov
push
inc
imul
out
add
add
lcall
sub
cmp
mov
hlt
dec
sbb
xchg
dec
dec
das
rcrl
outsb
cli
cmp
int3
lock
daa
and
int3
aas
mov
fisubrs
in
pop
jmp
in
push
es
pop
xor
pop
push
pop
xchg
js
movsb
into
ja
cmc
inc
gs
jo
pop
cmpsl
and
cwtl
mov
test
out
mov
subl
jnp
lahf
outsb
fdivs
les
cmp
stos
jo
insb
xchg
gs
and
adc
ja
movsb
push
sahf
jno
mov
push
pop
sbb
fcompp
adc
inc
shlb
psubq
mov
cmp
sub
inc
ss
fsts
sub
mov
cwtl
daa
xor
fnsave
sub
pop
cmpsb
and
pop
pusha
sbb
or
sub
addb
jp
test
mov
orb
out
push
dec
adc
add
add
or
dec
xchg
jno
cwtl
rcr
stos
xor
ja
adc
iret
cli
movsl
jle
imul
cld
mov
push
out
sbb
jbe
inc
fldcw
ds
sbb
push
gs
dec
lds
or
in
das
pop
out
jle
lods
stc
push
das
adc
mov
jp
cmova
dec
adc
adc
xor
pusha
mov
mov
mov
jo
into
js
inc
add
push
jle
sarl
xchg
fisttpl
repnz
imul
int
fcmovbe
cwtl
lahf
ljmp
xchg
add
cli
js
dec
inc
mov
xor
mov
push
leave
sub
add
xchg
adc
mov
je
adc
cmp
and
call
leave
adc
aam
pop
adc
adc
addl
mov
mov
add
add
cld
std
daa
cmp
outsb
cs
jb
lahf
xor
popf
in
arpl
das
dec
and
add
sbb
test
and
jge
mov
push
or
jno
mov
scas
mov
shlb
jnp
cmp
out
nop
clc
clc
xor
push
cmpsb
js
mov
cmpl
jb
xchg
push
lahf
add
loopne
mov
lcall
mov
cmp
add
sub
addr16
divb
stos
imul
mov
jnp
enter
daa
nop
call
fdivrs
sarl
mov
pusha
lcall
push
aas
sbb
xchg
not
jle
mov
jge
or
jmp
mov
mov
mov
mov
sub
xchg
test
sti
ljmp
add
sub
cwtl
jb
cmp
xchg
jns
adc
mov
lret
xchg
repnz
mov
scas
xor
lods
scas
sbb
push
mov
push
or
or
push
lock
test
jnp
sub
orb
je
and
lods
add
jl
icebp
or
adc
mov
popa
test
pop
and
mov
dec
cmp
dec
push
mov
rorb
push
stc
popf
das
imul
filds
lret
xchg
sub
push
xchg
xor
or
push
cli
icebp
cmc
test
outsb
pop
outsb
jecxz
push
sub
cs
mov
js
cs
mov
mov
bound
add
fsts
mul
pop
push
add
xchg
int3
ficompl
outsb
and
fisubrs
xchg
gs
mov
int
mov
push
mov
lahf
lods
pcmpgtd
lock
testl
outsl
addr16
mov
and
and
mov
es
cmp
std
push
xor
adc
fcmovnu
sub
cmp
add
popf
loope
sbb
pop
pop
insb
sub
rolb
add
add
ja
sub
testb
jbe
ret
sar
jne
shll
ret
add
cmpb
add
pusha
movsl
dec
xchg
cld
fbld
arpl
inc
cmp
fdiv
movsb
pop
push
mov
ret
inc
dec
pushf
mov
lds
jge
sbb
daa
inc
mov
dec
add
scas
mov
jp
adc
pop
inc
add
decl
xchg
mov
sbb
jg
sub
lea
fistpll
dec
int3
mov
mov
dec
cwtl
fldcw
xor
loopne
outsb
pop
push
mov
or
xor
mov
enter
movsb
push
jge
sub
mov
pop
imul
and
add
mov
scas
inc
aas
sub
cmpsl
jb
incl
jecxz
enter
movsl
loop
mov
sub
add
push
test
mov
or
cs
push
pushf
addr16
cwtl
mull
lea
mov
ja
lods
push
aaa
jg
sub
fmulp
mov
push
cwtl
jecxz
pushf
pushf
shlb
xor
popa
xor
adc
or
pusha
iret
or
mov
or
push
loopne
mov
xor
pusha
pop
jle
hlt
idivl
scas
mov
push
ljmp
add
add
add
inc
mov
push
mov
daa
dec
push
pop
fcompl
inc
popf
arpl
pop
jb
popa
scas
xchg
ret
sub
sub
xchg
fsubrs
mov
xchg
xchg
jo
inc
fsubrs
adcl
mov
cmp
add
sbb
rcll
lahf
cs
cmp
add
add
add
mov
les
lret
cld
pushf
adcl
ja
push
shll
call
push
mov
xor
dec
loope
sbb
xorl
and
pop
or
cmp
inc
jo
jo
repz
jmp
das
xchg
out
rcrl
mov
xor
leave
add
mov
call
and
popf
in
or
jb
rcrl
sub
sub
mov
xchg
cmp
loopne
js
push
test
int
mov
test
cmpsb
xor
repz
xor
call
jmp
fcomps
mov
xchg
jmp
clc
mov
movsl
fmull
and
ljmp
add
add
lahf
mov
aaa
inc
bound
out
jo
inc
fldl
loope
mov
sbb
xchg
aam
sbb
outsl
inc
aaa
mov
arpl
jno
adc
ja
and
pop
pop
add
lock
mov
cmp
and
add
test
dec
or
add
rol
test
ret
cmp
hlt
sbb
jecxz
push
insl
pop
pop
nop
je
mov
mov
pop
call
popf
xchg
fwait
das
xor
lret
shll
lods
outsl
mov
decb
lds
cmp
stos
pop
fists
add
adc
adc
pop
push
in
push
jno
mov
inc
pushf
dec
add
inc
jecxz
test
add
add
add
enter
in
test
sarl
dec
push
pop
jnp
outsb
push
add
lods
xor
int
mov
rcrb
mov
add
call
leave
in
pop
std
decb
cltd
xor
mov
inc
dec
clc
lret
mov
dec
hlt
ret
xchg
jg
movsl
adcl
aam
or
sahf
popf
xor
push
xchg
jnp
or
fldl2e
add
adc
inc
pushf
cmpl
lcall
mov
divl
sub
pusha
rcr
jl
pushf
test
mov
xchg
jae
fs
pop
dec
iret
sbb
insl
iret
leave
xor
jge
mov
xchg
lahf
jmp
arpl
aam
repnz
cmp
xorl
test
sub
jno
push
and
test
mov
aad
addr16
jecxz
mov
fwait
daa
add
insl
push
cmpsl
into
xorb
jbe
testb
push
or
lods
push
mov
pushf
mulps
cmp
add
test
mov
push
stc
push
mov
mov
lock
hlt
addr16
lea
push
xchg
push
imul
add
cmp
in
mov
sarb
jo
jecxz
add
sbb
cmp
mov
sbb
pop
and
and
sahf
dec
and
sbb
jno
and
cmp
cs
pop
insl
sub
vminsd
inc
cmp
adc
pop
sbbl
adc
cmc
aaa
imul
pusha
cmp
and
dec
das
pushf
movsb
in
aam
xchg
cmpsl
sub
pop
fmulp
lock
inc
inc
inc
ret
sbb
jns
ret
subb
popf
enter
arpl
mov
inc
loope
movsb
ljmp
add
add
add
xchg
jle
pop
gs
pusha
jecxz
fcomip
inc
mov
dec
sub
roll
adc
cmp
adc
and
push
pusha
lods
xor
or
scas
adc
add
mov
jmp
pusha
and
sti
test
mov
cli
andb
sahf
adc
